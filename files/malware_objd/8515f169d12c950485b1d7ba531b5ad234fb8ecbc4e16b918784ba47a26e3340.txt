
8515f169d12c950485b1d7ba531b5ad234fb8ecbc4e16b918784ba47a26e3340.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x4183b8
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x4183bc,0x40199c
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x4183bc,0x417570
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x1431
  4011d2:	mov    DWORD PTR ds:0x4183c0,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x4183c0
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x4183c4
  401227:	call   DWORD PTR ds:0x41824c
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x1bc
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x4184c8,ebp
  401280:	push   0x0
  401282:	push   0x2
  401284:	push   0x0
  401286:	push   0x0
  401288:	push   0x80000000
  40128d:	push   0x80000000
  401292:	push   0x80000000
  401297:	push   0x80000000
  40129c:	push   0xcf0000
  4012a1:	push   0x418074
  4012a6:	push   0x41806c
  4012ab:	push   0x0
  4012ad:	call   DWORD PTR ds:0x418268
  4012b3:	mov    DWORD PTR [ebp-0x18c],eax
  4012b9:	lea    eax,[ebp-0x14c]
  4012bf:	push   eax
  4012c0:	call   DWORD PTR ds:0x41826c
  4012c6:	push   0x104
  4012cb:	lea    ecx,[ebp-0x110]
  4012d1:	push   ecx
  4012d2:	call   DWORD PTR ds:0x418250
  4012d8:	mov    DWORD PTR [ebp-0x14c],0x30
  4012e2:	mov    DWORD PTR [ebp-0x148],0x3
  4012ec:	mov    DWORD PTR [ebp-0x144],0x401260
  4012f6:	mov    DWORD PTR [ebp-0x140],0x0
  401300:	mov    DWORD PTR [ebp-0x13c],0x0
  40130a:	mov    DWORD PTR [ebp-0x138],0x2
  401314:	push   0x7f00
  401319:	push   0x0
  40131b:	call   DWORD PTR ds:0x418270
  401321:	mov    DWORD PTR [ebp-0x134],eax
  401327:	push   0x7f00
  40132c:	push   0x0
  40132e:	call   DWORD PTR ds:0x418274
  401334:	mov    DWORD PTR [ebp-0x130],eax
  40133a:	push   0x0
  40133c:	call   DWORD PTR ds:0x41827c
  401342:	mov    DWORD PTR [ebp-0x12c],eax
  401348:	mov    DWORD PTR [ebp-0x128],0x0
  401352:	mov    DWORD PTR [ebp-0x124],0x41806c
  40135c:	push   0x7f00
  401361:	push   0x0
  401363:	call   DWORD PTR ds:0x418270
  401369:	mov    DWORD PTR [ebp-0x120],eax
  40136f:	push   0x0
  401371:	push   0x2
  401373:	push   0x0
  401375:	push   0x0
  401377:	push   0x80000000
  40137c:	push   0x80000000
  401381:	push   0x80000000
  401386:	push   0x80000000
  40138b:	push   0xcf0000
  401390:	push   0x41807c
  401395:	push   0x41806c
  40139a:	push   0x0
  40139c:	call   DWORD PTR ds:0x418268
  4013a2:	mov    DWORD PTR [ebp-0x18c],eax
  4013a8:	lea    edx,[ebp-0x14c]
  4013ae:	push   edx
  4013af:	call   DWORD PTR ds:0x41826c
  4013b5:	mov    DWORD PTR [ebp-0x194],0x0
  4013bf:	mov    eax,ds:0x41824c
  4013c4:	mov    DWORD PTR [ebp-0x1a8],eax
  4013ca:	push   0x418084
  4013cf:	push   0x418094
  4013d4:	call   DWORD PTR ds:0x418254
  4013da:	push   eax
  4013db:	call   DWORD PTR ds:0x418258
  4013e1:	mov    DWORD PTR [ebp-0x17c],eax
  4013e7:	lea    ecx,[ebp-0x158]
  4013ed:	push   ecx
  4013ee:	push   0x20019
  4013f3:	push   0x0
  4013f5:	push   0x4183a8
  4013fa:	push   0x80000002
  4013ff:	call   DWORD PTR [ebp-0x17c]
  401405:	test   eax,eax
  401407:	je     0x401410
  401409:	xor    eax,eax
  40140b:	jmp    0x4018e0
  401410:	lea    edx,[ebp-0x158]
  401416:	push   edx
  401417:	push   0x20019
  40141c:	push   0x0
  40141e:	push   0x4180a0
  401423:	mov    eax,DWORD PTR [ebp-0x158]
  401429:	push   eax
  40142a:	call   DWORD PTR [ebp-0x17c]
  401430:	test   eax,eax
  401432:	je     0x40143b
  401434:	xor    eax,eax
  401436:	jmp    0x4018e0
  40143b:	lea    ecx,[ebp-0x158]
  401441:	push   ecx
  401442:	push   0x20019
  401447:	push   0x0
  401449:	push   0x4180b4
  40144e:	mov    edx,DWORD PTR [ebp-0x158]
  401454:	push   edx
  401455:	call   DWORD PTR [ebp-0x17c]
  40145b:	test   eax,eax
  40145d:	je     0x401466
  40145f:	xor    eax,eax
  401461:	jmp    0x4018e0
  401466:	lea    eax,[ebp-0x158]
  40146c:	push   eax
  40146d:	push   0x20019
  401472:	push   0x0
  401474:	push   0x4180c4
  401479:	mov    ecx,DWORD PTR [ebp-0x158]
  40147f:	push   ecx
  401480:	call   DWORD PTR [ebp-0x17c]
  401486:	test   eax,eax
  401488:	je     0x401491
  40148a:	xor    eax,eax
  40148c:	jmp    0x4018e0
  401491:	lea    edx,[ebp-0x158]
  401497:	push   edx
  401498:	push   0x20019
  40149d:	push   0x0
  40149f:	push   0x4183ac
  4014a4:	mov    eax,DWORD PTR [ebp-0x158]
  4014aa:	push   eax
  4014ab:	call   DWORD PTR [ebp-0x17c]
  4014b1:	test   eax,eax
  4014b3:	je     0x4014bc
  4014b5:	xor    eax,eax
  4014b7:	jmp    0x4018e0
  4014bc:	lea    ecx,[ebp-0x158]
  4014c2:	push   ecx
  4014c3:	push   0x20019
  4014c8:	push   0x0
  4014ca:	push   0x4183b0
  4014cf:	mov    edx,DWORD PTR [ebp-0x158]
  4014d5:	push   edx
  4014d6:	call   DWORD PTR [ebp-0x17c]
  4014dc:	test   eax,eax
  4014de:	je     0x4014e7
  4014e0:	xor    eax,eax
  4014e2:	jmp    0x4018e0
  4014e7:	lea    eax,[ebp-0x158]
  4014ed:	push   eax
  4014ee:	push   0x20019
  4014f3:	push   0x0
  4014f5:	push   0x4180d0
  4014fa:	mov    ecx,DWORD PTR [ebp-0x158]
  401500:	push   ecx
  401501:	call   DWORD PTR [ebp-0x17c]
  401507:	test   eax,eax
  401509:	je     0x40151f
  40150b:	push   0x104
  401510:	push   0x5
  401512:	call   DWORD PTR ds:0x418250
  401518:	xor    eax,eax
  40151a:	jmp    0x4018e0
  40151f:	lea    edx,[ebp-0x158]
  401525:	push   edx
  401526:	push   0x20019
  40152b:	push   0x0
  40152d:	push   0x4183b4
  401532:	mov    eax,DWORD PTR [ebp-0x158]
  401538:	push   eax
  401539:	call   DWORD PTR [ebp-0x17c]
  40153f:	test   eax,eax
  401541:	je     0x40154a
  401543:	xor    eax,eax
  401545:	jmp    0x4018e0
  40154a:	lea    ecx,[ebp-0x158]
  401550:	push   ecx
  401551:	push   0x20019
  401556:	push   0x0
  401558:	push   0x418120
  40155d:	mov    edx,DWORD PTR [ebp-0x158]
  401563:	push   edx
  401564:	call   DWORD PTR [ebp-0x17c]
  40156a:	test   eax,eax
  40156c:	je     0x401575
  40156e:	xor    eax,eax
  401570:	jmp    0x4018e0
  401575:	lea    eax,[ebp-0x158]
  40157b:	push   eax
  40157c:	push   0x20019
  401581:	push   0x0
  401583:	push   0x418130
  401588:	mov    ecx,DWORD PTR [ebp-0x158]
  40158e:	push   ecx
  40158f:	call   DWORD PTR [ebp-0x17c]
  401595:	test   eax,eax
  401597:	jne    0x4015a0
  401599:	xor    eax,eax
  40159b:	jmp    0x4018e0
  4015a0:	mov    DWORD PTR [ebp-0x114],0x0
  4015aa:	mov    DWORD PTR [ebp-0x188],0x64
  4015b4:	mov    DWORD PTR [ebp-0x11c],0x2
  4015be:	mov    DWORD PTR [ebp-0x194],0x0
  4015c8:	mov    DWORD PTR [ebp-0x154],0x0
  4015d2:	mov    DWORD PTR [ebp-0x184],0x1
  4015dc:	mov    DWORD PTR [ebp-0x118],0x3
  4015e6:	push   0x104
  4015eb:	push   0x4183c4
  4015f0:	call   DWORD PTR ds:0x418250
  4015f6:	push   0x418144
  4015fb:	push   0x4183c4
  401600:	call   DWORD PTR ds:0x41825c
  401606:	push   0x41815c
  40160b:	push   0x41816c
  401610:	call   DWORD PTR ds:0x418260
  401616:	push   eax
  401617:	call   DWORD PTR ds:0x418258
  40161d:	mov    ds:0x4183b8,eax
  401622:	call   0x401080
  401627:	mov    edx,DWORD PTR ds:0x4183bc
  40162d:	push   edx
  40162e:	call   0x4010a0
  401633:	add    esp,0x4
  401636:	mov    DWORD PTR [ebp-0x198],eax
  40163c:	mov    eax,DWORD PTR [ebp-0x198]
  401642:	push   eax
  401643:	call   0x401010
  401648:	add    esp,0x4
  40164b:	mov    DWORD PTR [ebp-0x190],eax
  401651:	mov    ecx,DWORD PTR [ebp-0x198]
  401657:	push   ecx
  401658:	push   0x0
  40165a:	mov    edx,DWORD PTR [ebp-0x190]
  401660:	push   edx
  401661:	call   0x401040
  401666:	add    esp,0xc
  401669:	mov    eax,DWORD PTR [ebp-0x198]
  40166f:	mov    DWORD PTR [ebp-0x1a0],eax
  401675:	mov    ecx,DWORD PTR [ebp-0x194]
  40167b:	cmp    ecx,DWORD PTR [ebp-0x198]
  401681:	jae    0x40170d
  401687:	mov    edx,DWORD PTR [ebp-0x1a0]
  40168d:	push   edx
  40168e:	mov    eax,DWORD PTR [ebp-0x188]
  401694:	push   eax
  401695:	call   0x401050
  40169a:	add    esp,0x8
  40169d:	mov    DWORD PTR [ebp-0x1a4],eax
  4016a3:	mov    ecx,DWORD PTR [ebp-0x1a4]
  4016a9:	push   ecx
  4016aa:	mov    edx,DWORD PTR ds:0x4183bc
  4016b0:	add    edx,DWORD PTR [ebp-0x154]
  4016b6:	push   edx
  4016b7:	mov    eax,DWORD PTR [ebp-0x190]
  4016bd:	add    eax,DWORD PTR [ebp-0x194]
  4016c3:	push   eax
  4016c4:	call   0x4177bc
  4016c9:	add    esp,0xc
  4016cc:	mov    ecx,DWORD PTR [ebp-0x11c]
  4016d2:	add    ecx,DWORD PTR [ebp-0x188]
  4016d8:	add    ecx,DWORD PTR [ebp-0x154]
  4016de:	mov    DWORD PTR [ebp-0x154],ecx
  4016e4:	mov    edx,DWORD PTR [ebp-0x194]
  4016ea:	add    edx,DWORD PTR [ebp-0x188]
  4016f0:	mov    DWORD PTR [ebp-0x194],edx
  4016f6:	mov    eax,DWORD PTR [ebp-0x1a0]
  4016fc:	sub    eax,DWORD PTR [ebp-0x1a4]
  401702:	mov    DWORD PTR [ebp-0x1a0],eax
  401708:	jmp    0x401675
  40170d:	mov    ecx,DWORD PTR [ebp-0x198]
  401713:	push   ecx
  401714:	mov    edx,DWORD PTR [ebp-0x190]
  40171a:	push   edx
  40171b:	call   0x401190
  401720:	add    esp,0x8
  401723:	mov    DWORD PTR [ebp-0x154],0x0
  40172d:	mov    DWORD PTR [ebp-0x1ac],0x0
  401737:	call   0x401090
  40173c:	mov    eax,ds:0x4183bc
  401741:	push   eax
  401742:	call   0x4010a0
  401747:	add    esp,0x4
  40174a:	mov    DWORD PTR [ebp-0x1b0],eax
  401750:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401756:	push   ecx
  401757:	call   0x401010
  40175c:	add    esp,0x4
  40175f:	mov    DWORD PTR [ebp-0x150],eax
  401765:	mov    edx,DWORD PTR [ebp-0x1b0]
  40176b:	push   edx
  40176c:	push   0x0
  40176e:	mov    eax,DWORD PTR [ebp-0x150]
  401774:	push   eax
  401775:	call   0x401040
  40177a:	add    esp,0xc
  40177d:	mov    ecx,DWORD PTR [ebp-0x1b0]
  401783:	mov    DWORD PTR [ebp-0x1b8],ecx
  401789:	mov    edx,DWORD PTR [ebp-0x1ac]
  40178f:	cmp    edx,DWORD PTR [ebp-0x1b0]
  401795:	jae    0x401820
  40179b:	mov    eax,DWORD PTR [ebp-0x1b8]
  4017a1:	push   eax
  4017a2:	mov    ecx,DWORD PTR [ebp-0x188]
  4017a8:	push   ecx
  4017a9:	call   0x401050
  4017ae:	add    esp,0x8
  4017b1:	mov    DWORD PTR [ebp-0x1bc],eax
  4017b7:	mov    edx,DWORD PTR [ebp-0x1bc]
  4017bd:	push   edx
  4017be:	mov    eax,ds:0x4183bc
  4017c3:	add    eax,DWORD PTR [ebp-0x154]
  4017c9:	push   eax
  4017ca:	mov    ecx,DWORD PTR [ebp-0x150]
  4017d0:	add    ecx,DWORD PTR [ebp-0x1ac]
  4017d6:	push   ecx
  4017d7:	call   0x4177bc
  4017dc:	add    esp,0xc
  4017df:	mov    edx,DWORD PTR [ebp-0x11c]
  4017e5:	add    edx,DWORD PTR [ebp-0x188]
  4017eb:	add    edx,DWORD PTR [ebp-0x154]
  4017f1:	mov    DWORD PTR [ebp-0x154],edx
  4017f7:	mov    eax,DWORD PTR [ebp-0x1ac]
  4017fd:	add    eax,DWORD PTR [ebp-0x188]
  401803:	mov    DWORD PTR [ebp-0x1ac],eax
  401809:	mov    ecx,DWORD PTR [ebp-0x1b8]
  40180f:	sub    ecx,DWORD PTR [ebp-0x1bc]
  401815:	mov    DWORD PTR [ebp-0x1b8],ecx
  40181b:	jmp    0x401789
  401820:	mov    edx,DWORD PTR [ebp-0x1b0]
  401826:	push   edx
  401827:	mov    eax,DWORD PTR [ebp-0x150]
  40182d:	push   eax
  40182e:	call   0x401190
  401833:	add    esp,0x8
  401836:	mov    ecx,DWORD PTR [ebp-0x190]
  40183c:	mov    edx,DWORD PTR [ebp-0x150]
  401842:	mov    DWORD PTR [ecx],edx
  401844:	push   0x17000
  401849:	call   0x401010
  40184e:	add    esp,0x4
  401851:	mov    DWORD PTR [ebp-0x4],eax
  401854:	lea    eax,[ebp-0x158]
  40185a:	push   eax
  40185b:	push   0x20019
  401860:	push   0x0
  401862:	push   0x418178
  401867:	push   0x80000002
  40186c:	call   DWORD PTR ds:0x41828c
  401872:	test   eax,eax
  401874:	je     0x40187a
  401876:	xor    eax,eax
  401878:	jmp    0x4018e0
  40187a:	push   0x15500
  40187f:	mov    ecx,DWORD PTR [ebp-0x190]
  401885:	push   ecx
  401886:	mov    edx,DWORD PTR [ebp-0x4]
  401889:	add    edx,0x200
  40188f:	push   edx
  401890:	call   0x4177bc
  401895:	add    esp,0xc
  401898:	mov    eax,DWORD PTR [ebp-0x4]
  40189b:	sub    eax,0x400000
  4018a0:	push   eax
  4018a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4018a4:	push   ecx
  4018a5:	mov    edx,DWORD PTR [ebp-0x150]
  4018ab:	push   edx
  4018ac:	call   0x401130
  4018b1:	add    esp,0xc
  4018b4:	mov    esp,DWORD PTR ds:0x4184c8
  4018ba:	pop    ecx
  4018bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4018be:	add    ecx,0x15350
  4018c4:	mov    edx,ecx
  4018c6:	call   0x4018cb
  4018cb:	pop    eax
  4018cc:	call   0x4018d1
  4018d1:	pop    eax
  4018d2:	call   0x4018d7
  4018d7:	pop    eax
  4018d8:	call   0x4018dd
  4018dd:	pop    eax
  4018de:	jmp    edx
  4018e0:	mov    esp,ebp
  4018e2:	pop    ebp
  4018e3:	ret    
  4018e4:	int3   
  4018e5:	int3   
  4018e6:	int3   
  4018e7:	int3   
  4018e8:	int3   
  4018e9:	int3   
  4018ea:	int3   
  4018eb:	int3   
  4018ec:	int3   
  4018ed:	int3   
  4018ee:	int3   
  4018ef:	int3   
  4018f0:	push   ebp
  4018f1:	mov    ebp,esp
  4018f3:	mov    eax,ds:0x418014
  4018f8:	mov    BYTE PTR [eax+0x3],0x73
  4018fc:	mov    ecx,DWORD PTR ds:0x418014
  401902:	mov    BYTE PTR [ecx+0x4],0x74
  401906:	mov    edx,DWORD PTR ds:0x418014
  40190c:	mov    BYTE PTR [edx+0x5],0x65
  401910:	mov    eax,ds:0x418014
  401915:	mov    BYTE PTR [eax+0x6],0x6d
  401919:	mov    ecx,DWORD PTR ds:0x418014
  40191f:	mov    BYTE PTR [ecx+0x7],0x33
  401923:	mov    edx,DWORD PTR ds:0x418014
  401929:	mov    BYTE PTR [edx+0x8],0x32
  40192d:	mov    eax,ds:0x418014
  401932:	mov    BYTE PTR [eax+0x9],0x5c
  401936:	mov    ecx,DWORD PTR ds:0x418014
  40193c:	mov    BYTE PTR [ecx+0xa],0x61
  401940:	mov    edx,DWORD PTR ds:0x418014
  401946:	mov    BYTE PTR [edx+0xb],0x74
  40194a:	mov    eax,ds:0x418014
  40194f:	mov    BYTE PTR [eax+0xc],0x6c
  401953:	mov    ecx,DWORD PTR ds:0x418014
  401959:	mov    BYTE PTR [ecx+0xd],0x2e
  40195d:	mov    edx,DWORD PTR ds:0x418014
  401963:	mov    BYTE PTR [edx+0xe],0x64
  401967:	mov    eax,ds:0x418014
  40196c:	mov    BYTE PTR [eax+0xf],0x6c
  401970:	mov    ecx,DWORD PTR ds:0x418014
  401976:	mov    BYTE PTR [ecx+0x10],0x6c
  40197a:	mov    edx,DWORD PTR ds:0x418014
  401980:	mov    BYTE PTR [edx],0x5c
  401983:	mov    eax,ds:0x418014
  401988:	mov    BYTE PTR [eax+0x1],0x73
  40198c:	mov    ecx,DWORD PTR ds:0x418014
  401992:	mov    BYTE PTR [ecx+0x2],0x79
  401996:	pop    ebp
  401997:	ret    
  401998:	add    BYTE PTR [ebp+0x1],dl
  40199b:	add    BYTE PTR [ecx],dh
  40199d:	inc    ebx
  40199e:	inc    ecx
  40199f:	add    BYTE PTR [esi+0x71],ch
  4019a2:	je     0x4019f4
  4019a4:	inc    ebx
  4019a5:	jnp    0x401a0a
  4019a7:	inc    ecx
  4019a8:	dec    ebp
  4019a9:	jo     0x401a1d
  4019ab:	and    ah,BYTE PTR gs:[edi+0x0]
  4019af:	add    ch,dh
  4019b1:	jp     0x401a14
  4019b3:	fs in  eax,dx
  4019b5:	jl     0x401a19
  4019b7:	jb     0x4019c9
  4019b9:	data16 jns 0x401a01
  4019bc:	or     DWORD PTR [ebp+0x0],edx
  4019bf:	add    ch,dh
  4019c1:	jp     0x401a24
  4019c3:	fs in  eax,dx
  4019c5:	jl     0x401a29
  4019c7:	jb     0x4019d9
  4019c9:	data16 jns 0x401a11
  4019cc:	jmp    0xee401a13
  4019d1:	jo     0x401a47
  4019d3:	dec    ebp
  4019d4:	into   
  4019d5:	outs   dx,DWORD PTR ds:[esi]
  4019d6:	jne    0x401a44
  4019d8:	int3   
  4019d9:	pop    ebx
  4019da:	popa   
  4019db:	outs   dx,BYTE PTR ds:[esi]
  4019dc:	aad    0x77
  4019de:	gs inc ecx
  4019e0:	xor    DWORD PTR [eax+eax*1],edx
  4019e3:	add    dl,dh
  4019e5:	gs gs popa 
  4019e8:	mov    ebp,0x9d694670
  4019ed:	jno    0x401a30
  4019ef:	add    BYTE PTR [ebp-0x6d8d8b99],dl
  4019f5:	jne    0x401a6b
  4019f7:	inc    ecx
  4019f8:	xor    DWORD PTR [eax+eax*1],edx
  4019fb:	add    BYTE PTR [esi+0x71],dh
  4019fe:	je     0x401a57
  401a00:	add    BYTE PTR [eax],al
  401a02:	cwde   
  401a03:	jp     0x401a69
  401a05:	outs   dx,DWORD PTR ds:[esi]
  401a06:	xchg   BYTE PTR [edi+0x44],ah
  401a09:	imul   eax,DWORD PTR [ebx+0x5e746371],0x31417966
  401a13:	adc    al,0x0
  401a15:	add    BYTE PTR [esi+0x71],dh
  401a18:	je     0x401a67
  401a1a:	inc    esi
  401a1b:	jo     0x401a92
  401a1d:	ins    BYTE PTR es:[edi],dx
  401a1e:	push   esp
  401a1f:	pop    esp
  401a20:	popa   
  401a21:	outs   dx,BYTE PTR ds:[esi]
  401a22:	dec    ebp
  401a23:	js     0x401a8a
  401a25:	push   edi
  401a26:	xor    DWORD PTR [eax+eax*1],edx
  401a29:	add    BYTE PTR ds:0x45004016,ch
  401a2f:	push   ss
  401a30:	inc    eax
  401a31:	add    BYTE PTR [ebp+0x16],cl
  401a34:	inc    eax
  401a35:	add    BYTE PTR [ebp+0x16],ah
  401a38:	inc    eax
  401a39:	add    cl,ch
  401a3b:	adc    eax,0x15e50040
  401a40:	inc    eax
  401a41:	add    BYTE PTR [ecx],dl
  401a43:	push   ss
  401a44:	inc    eax
  401a45:	add    cl,bh
  401a47:	adc    eax,0x70ee0040
  401a4c:	je     0x401a9e
  401a4e:	jecxz  0x401aca
  401a50:	arpl   WORD PTR [ecx-0x33],ax
  401a53:	outs   dx,DWORD PTR ds:[esi]
  401a54:	jb     0x401abb
  401a56:	loop   0x401abe
  401a58:	add    BYTE PTR [eax],al
  401a5a:	in     eax,0x7a
  401a5c:	popa   
  401a5d:	fs std 
  401a5f:	jl     0x401ac3
  401a61:	jb     0x401a33
  401a63:	gs jns 0x401aab
  401a66:	add    BYTE PTR [eax],al
  401a68:	mov    ecx,0xca000054
  401a6d:	jo     0x401ae1
  401a6f:	outs   dx,BYTE PTR ds:[esi]
  401a70:	xchg   esp,eax
  401a71:	js     0x401aa6
  401a73:	xor    dl,BYTE PTR [edi+0x70]
  401a76:	ins    BYTE PTR es:[edi],dx
  401a77:	ins    BYTE PTR es:[edi],dx
  401a78:	xor    DWORD PTR [eax+eax*1],edx
  401a7b:	add    BYTE PTR [ebp+eiz*2+0x60836376],al
  401a82:	cs fs xchg ebp,eax
  401a85:	js     0x401a87
  401a87:	add    BYTE PTR [edi+ebp*2+0x608c736d],cl
  401a8e:	add    BYTE PTR [eax],al
  401a90:	pop    esp
  401a91:	gs jbe 0x401af7
  401a94:	arpl   WORD PTR [eax+0x2e],sp
  401a97:	fs dec ebp
  401a99:	js     0x401a9b
  401a9b:	add    BYTE PTR [edi+ebp*2+0x6d],al
  401a9f:	arpl   WORD PTR [ecx+0x6b],ax
  401aa2:	add    BYTE PTR [eax],al
  401aa4:	pop    edi
  401aa5:	jnp    0x401b19
  401aa7:	je     0x401aed
  401aa9:	jae    0x401b17
  401aab:	inc    ecx
  401aac:	inc    ebp
  401aad:	js     0x401b1e
  401aaf:	arpl   WORD PTR [ecx],si
  401ab1:	adc    al,0x0
  401ab3:	add    bh,bh
  401ab5:	jp     0x401b29
  401ab7:	je     0x401add
  401ab9:	jae    0x401b27
  401abb:	inc    ecx
  401abc:	add    eax,0x31636f78
  401ac1:	adc    al,0x0
  401ac3:	add    ah,bl
  401ac5:	jns    0x401b34
  401ac7:	popa   
  401ac8:	add    DWORD PTR [edx+0x69],eax
  401acb:	add    BYTE PTR gs:[eax],al
  401ace:	(bad)  
  401acf:	pop    eax
  401ad0:	inc    si
  401ad2:	fdiv   DWORD PTR [edi+0x65]
  401ad5:	add    bh,bh
  401ad7:	jp     0x401b4b
  401ad9:	je     0x401abf
  401adb:	jb     0x401b49
  401add:	push   eax
  401ade:	jecxz  0x401b58
  401ae0:	je     0x401b47
  401ae2:	rcr    BYTE PTR [edi+0x0],cl
  401ae5:	add    cl,bh
  401ae7:	outs   dx,BYTE PTR ds:[esi]
  401ae8:	popa   
  401ae9:	jo     0x401adb
  401aeb:	ja     0x401b59
  401aed:	outs   dx,DWORD PTR ds:[esi]
  401aee:	rcl    BYTE PTR [ebx],cl
  401af0:	add    BYTE PTR [eax],al
  401af2:	call   0x3378:0x8c6e726f
  401af9:	xor    cl,BYTE PTR [edi+0x70]
  401afc:	ins    BYTE PTR es:[edi],dx
  401afd:	ins    BYTE PTR es:[edi],dx
  401afe:	xor    DWORD PTR [eax+eax*1],edx
  401b01:	add    BYTE PTR [esi+0x6f],dh
  401b04:	je     0x401b56
  401b06:	cmp    DWORD PTR [ecx+0x63],0x65
  401b0a:	and    BYTE PTR [ebp+0x48],0x65
  401b0e:	nop
  401b0f:	add    BYTE PTR fs:[eax],al
  401b12:	xor    DWORD PTR [esp+eax*2],edx
  401b15:	add    DWORD PTR [ecx],esi
  401b17:	mov    al,0x59
  401b19:	nop
  401b1a:	xor    esi,edi
  401b1c:	add    eax,DWORD PTR [eax]
  401b1e:	xor    edi,esi
  401b20:	add    eax,DWORD PTR [eax]
  401b22:	xor    edx,ebp
  401b24:	sti    
  401b25:	add    BYTE PTR [ecx],dh
  401b27:	and    eax,DWORD PTR [ebx]
  401b29:	add    BYTE PTR [ecx],dh
  401b2b:	sti    
  401b2c:	add    eax,DWORD PTR [eax]
  401b2e:	xor    DWORD PTR [ebx],edi
  401b30:	add    al,0x0
  401b32:	add    BYTE PTR [eax],al
  401b34:	xor    ebx,edi
  401b36:	add    eax,DWORD PTR [eax]
  401b38:	xor    ebx,edi
  401b3a:	add    eax,DWORD PTR [eax]
  401b3c:	xor    ebx,edi
  401b3e:	add    eax,DWORD PTR [eax]
  401b40:	xor    ebx,edi
  401b42:	add    eax,DWORD PTR [eax]
  401b44:	xor    ebx,edi
  401b46:	add    eax,DWORD PTR [eax]
  401b48:	xor    ebx,edi
  401b4a:	add    eax,DWORD PTR [eax]
  401b4c:	xor    ebx,edi
  401b4e:	add    eax,DWORD PTR [eax]
  401b50:	xor    ebx,edi
  401b52:	add    eax,DWORD PTR [eax]
  401b54:	xor    DWORD PTR [ebx+0x4],edi
  401b57:	add    BYTE PTR [ecx],dh
  401b59:	icebp  
  401b5a:	sbb    bh,BYTE PTR [edx+0x9affb2f]
  401b60:	fstp   TBYTE PTR fs:[ebx+0x25b7fd01]
  401b67:	push   esp
  401b68:	fst    DWORD PTR [ebx]
  401b6a:	ja     0x401b8c
  401b6c:	shr    esp,0x6a
  401b6f:	addr16 ret 
  401b71:	fld    TBYTE PTR [eax+0x20]
  401b74:	xchg   edx,eax
  401b75:	fsubr  QWORD PTR [ecx+0x6e]
  401b78:	xchg   esi,eax
  401b79:	leave  
  401b7a:	and    esp,DWORD PTR [edx-0x6c]
  401b7d:	sbb    eax,0x1d877576
  401b82:	ins    DWORD PTR es:[edi],dx
  401b83:	outs   dx,BYTE PTR ds:[esi]
  401b84:	push   ecx
  401b85:	mov    cl,0x4a
  401b87:	push   ebx
  401b88:	push   ecx
  401b89:	shr    BYTE PTR [edx+0x64],1
  401b8c:	xchg   esp,eax
  401b8d:	out    0x8,eax
  401b8f:	or     eax,0x3cd142b
  401b94:	xor    DWORD PTR [ecx+ebp*8],edx
  401b97:	add    eax,DWORD PTR [eax]
  401b99:	add    BYTE PTR [ecx],dh
  401b9b:	adc    al,0xb9
  401b9d:	inc    eax
  401b9e:	xor    DWORD PTR [ebx*4+0x5c143204],edx
  401ba5:	push   es
  401ba6:	dec    edx
  401ba7:	push   edi
  401ba8:	jmp    0xe9544cb0
  401bad:	add    esi,DWORD PTR [ecx]
  401baf:	adc    al,0x9
  401bb1:	add    al,0x26
  401bb3:	adc    eax,0x223304f2
  401bb8:	jmp    0xe9544db6
  401bbd:	dec    ebp
  401bbe:	xor    DWORD PTR [ecx+ebp*8],edx
  401bc1:	add    esi,DWORD PTR [ecx]
  401bc3:	adc    al,0x55
  401bc5:	in     eax,dx
  401bc6:	xor    DWORD PTR [ecx+ebp*8],edx
  401bc9:	adc    esi,DWORD PTR [ecx]
  401bcb:	adc    al,0xe9
  401bcd:	adc    esi,DWORD PTR [eax]
  401bcf:	adc    al,0xe9
  401bd1:	add    esi,ecx
  401bd3:	adc    ebp,ecx
  401bd5:	adc    esi,DWORD PTR [ecx]
  401bd7:	adc    al,0xe9
  401bd9:	add    eax,0x3ed1431
  401bde:	xor    DWORD PTR [ecx+ebp*8],edx
  401be1:	add    esi,DWORD PTR [ecx]
  401be3:	adc    al,0xed
  401be5:	add    esi,DWORD PTR [ecx]
  401be7:	adc    al,0xe9
  401be9:	add    esi,DWORD PTR [ecx]
  401beb:	adc    al,0xe9
  401bed:	jae    0x401c1f
  401bef:	adc    al,0xe9
  401bf1:	add    eax,0x128b1431
  401bf6:	xor    edx,DWORD PTR [ebx+ebp*8]
  401bf9:	add    esi,DWORD PTR [ecx]
  401bfb:	adc    al,0xe9
  401bfd:	add    eax,DWORD PTR [eax]
  401bff:	add    BYTE PTR [ecx+0x14],al
  401c02:	jmp    0xe9544d1a
  401c07:	add    esp,DWORD PTR [ecx]
  401c09:	adc    al,0xe9
  401c0b:	adc    esi,DWORD PTR [ecx]
  401c0d:	adc    al,0x0
  401c0f:	jmp    0xd9403046
  401c14:	xor    dl,BYTE PTR [eax+eax*1]
  401c17:	jmp    0xe940304e
  401c1c:	xor    dl,BYTE PTR [eax+eax*1]
  401c1f:	rol    DWORD PTR [ebx+0x32210015],0x14
  401c26:	add    cl,ch
  401c28:	xor    dl,BYTE PTR [eax+eax*1]
  401c2b:	jmp    0xe9403062
  401c30:	xor    dl,BYTE PTR [eax+eax*1]
  401c33:	jmp    0xe940306a
  401c38:	xor    dl,BYTE PTR [eax+eax*1]
  401c3b:	jmp    0xe9403072
  401c40:	xor    dl,BYTE PTR [eax+eax*1]
  401c43:	jmp    0xe940307a
  401c48:	xor    dl,BYTE PTR [eax+eax*1]
  401c4b:	jmp    0xe9403082
  401c50:	xor    dl,BYTE PTR [eax+eax*1]
  401c53:	jmp    0xe940308a
  401c58:	xor    dl,BYTE PTR [eax+eax*1]
  401c5b:	jmp    0xe9403092
  401c60:	xor    dl,BYTE PTR [eax+eax*1]
  401c63:	jmp    0x14721c68
  401c68:	add    cl,ch
  401c6a:	xor    dl,BYTE PTR [eax+eax*1]
  401c6d:	jmp    0xe94030a4
  401c72:	xor    dl,BYTE PTR [eax+eax*1]
  401c75:	jmp    0xe54030ac
  401c7a:	mov    edx,DWORD PTR [ebx]
  401c7c:	add    BYTE PTR [ebp+0x32],ch
  401c7f:	adc    al,0x0
  401c81:	jmp    0xe94030b8
  401c86:	xor    dl,BYTE PTR [eax+eax*1]
  401c89:	add    BYTE PTR [eax],bl
  401c8b:	adc    al,BYTE PTR [eax]
  401c8d:	add    BYTE PTR [eax],bl
  401c8f:	adc    al,BYTE PTR [eax]
  401c91:	add    BYTE PTR [eax],cl
  401c93:	adc    al,BYTE PTR [eax]
  401c95:	add    BYTE PTR [eax],cl
  401c97:	adc    al,BYTE PTR [eax]
  401c99:	add    BYTE PTR [esi],al
  401c9b:	jbe    0x401d02
  401c9d:	js     0x401c5b
  401c9f:	adc    DWORD PTR [eax],eax
  401ca1:	add    BYTE PTR [ebx-0x23],dl
  401ca4:	add    BYTE PTR [eax],al
  401ca6:	enter  0x1,0x0
  401caa:	fsubr  st,st(3)
  401cac:	add    BYTE PTR [eax],al
  401cae:	fmul   DWORD PTR [edi]
  401cb0:	add    BYTE PTR [eax],al
  401cb2:	enter  0x11,0x0
  401cb6:	enter  0x11,0x0
  401cba:	cwde   
  401cbb:	adc    DWORD PTR [eax],eax
  401cbd:	add    BYTE PTR [eax],bh
  401cbf:	adc    BYTE PTR [eax],al
  401cc1:	pusha  
  401cc2:	ss pop esi
  401cc4:	fs popa 
  401cc6:	cld    
  401cc7:	jo     0x401cc9
  401cc9:	add    BYTE PTR [eax],al
  401ccb:	add    BYTE PTR [eax-0x67ffffee],bl
  401cd1:	add    DWORD PTR [ecx],eax
  401cd3:	add    BYTE PTR [eax-0x77fffff1],cl
  401cd9:	adc    DWORD PTR [ecx],eax
  401cdb:	add    BYTE PTR [eax+0x11],bl
  401cde:	add    BYTE PTR [eax],al
  401ce0:	pop    eax
  401ce1:	adc    DWORD PTR [eax],eax
  401ce3:	add    BYTE PTR [eax+0x11],cl
  401ce6:	add    BYTE PTR [eax],al
  401ce8:	or     BYTE PTR [eax],dl
  401cea:	add    BYTE PTR [eax+0x66],al
  401ced:	inc    ebp
  401cee:	popa   
  401cef:	je     0x401d2a
  401cf1:	adc    BYTE PTR [eax],al
  401cf3:	add    BYTE PTR [eax+0x48000053],dl
  401cf9:	xor    DWORD PTR [ecx],eax
  401cfb:	add    BYTE PTR [eax],bl
  401cfd:	dec    edi
  401cfe:	add    BYTE PTR [eax],al
  401d00:	sbb    BYTE PTR [edi],cl
  401d02:	add    DWORD PTR [eax],eax
  401d04:	xor    ebx,edi
  401d06:	add    eax,DWORD PTR [eax]
  401d08:	xor    ebx,edi
  401d0a:	add    eax,DWORD PTR [eax]
  401d0c:	xor    ebx,edi
  401d0e:	add    eax,DWORD PTR [eax]
  401d10:	xor    DWORD PTR [ebx-0x50efffd],edi
  401d16:	add    eax,DWORD PTR [eax]
  401d18:	xor    ebx,edi
  401d1a:	add    eax,DWORD PTR [eax]
  401d1c:	xor    ebx,edi
  401d1e:	add    eax,DWORD PTR [eax]
  401d20:	xor    ebx,edi
  401d22:	add    eax,DWORD PTR [eax]
  401d24:	xor    DWORD PTR [eax-0x37b61374],ebp
  401d2a:	adc    eax,DWORD PTR [eax+0x31]
  401d2d:	adc    esi,DWORD PTR [ebp+0x1]
  401d30:	add    BYTE PTR [eax],al
  401d32:	repnz in eax,0xf7
  401d35:	jne    0x401d60
  401d37:	xchg   ecx,eax
  401d38:	add    ch,BYTE PTR [edx+0x31]
  401d3b:	adc    edi,DWORD PTR [edx+ebx*8-0x3d3304cf]
  401d42:	sub    eax,0x8d8b50fb
  401d47:	push   edx
  401d48:	sub    dl,BYTE PTR [eax]
  401d4a:	icebp  
  401d4b:	cli    
  401d4c:	sti    
  401d4d:	jb     0x401d7f
  401d4f:	mov    edx,0xe30483f7
  401d54:	add    esi,DWORD PTR [edx+ebp*1+0x72]
  401d58:	push   ecx
  401d59:	or     BYTE PTR [edx+0x3975f6c8],ch
  401d5f:	scas   al,BYTE PTR es:[edi]
  401d60:	push   edx
  401d61:	or     BYTE PTR [eax-0x48],bh
  401d64:	add    BYTE PTR [eax],al
  401d66:	add    al,0x72
  401d68:	call   0x6cc28af0
  401d6d:	dec    edi
  401d6e:	and    DWORD PTR [ebx],edi
  401d70:	add    al,0xf8
  401d72:	ret    
  401d73:	sti    
  401d74:	ret    0x3eff
  401d77:	out    0x7,eax
  401d79:	(bad)  
  401d7a:	in     al,dx
  401d7b:	bound  edi,QWORD PTR [edi-0x16ead2bb]
  401d81:	add    esi,DWORD PTR [ecx]
  401d83:	adc    al,0x72
  401d85:	push   ecx
  401d86:	sub    DWORD PTR [edi-0x1cce9605],ecx
  401d8c:	aam    0x13
  401d8e:	push   cs
  401d8f:	push   0x45
  401d91:	idiv   DWORD PTR [esp+ebx*8+0x3e]
  401d95:	jno    0x401d97
  401d97:	add    BYTE PTR [ecx],ch
  401d99:	jecxz  0x401d36
  401d9b:	psubsb mm2,mm6
  401d9e:	fld    QWORD PTR [ebx]
  401da0:	test   BYTE PTR [edi-0x23127ceb],cl
  401da6:	xchg   ecx,eax
  401da7:	jge    0x401dea
  401da9:	push   esp
  401daa:	jmp    0x2a5581aa
  401daf:	div    esi
  401db1:	pop    ecx
  401db2:	add    DWORD PTR [ecx+esi*1],eax
  401db5:	adc    al,0xe9
  401db7:	mov    esi,0x3e9e074
  401dbc:	xor    DWORD PTR [edx+eiz*2],edx
  401dbf:	push   ecx
  401dc0:	cmp    DWORD PTR [edi-0x24137705],ecx
  401dc6:	cmp    DWORD PTR [edx+0x33],ebp
  401dc9:	jecxz  0x401e27
  401dcb:	clc    
  401dcc:	xchg   esi,eax
  401dcd:	imul   edx,ecx,0xc60c04f6
  401dd3:	push   ecx
  401dd4:	sbb    eax,0x68fc248f
  401dd9:	(bad)  
  401dda:	in     eax,dx
  401ddb:	add    ebx,esp
  401ddd:	mov    ?,WORD PTR [ebp+0x11dc7582]
  401de3:	ret    0x5441
  401de6:	jmp    0xaa5501e6
  401deb:	imul   BYTE PTR [esi+0x59]
  401dee:	xchg   ecx,eax
  401def:	add    esi,DWORD PTR [ecx]
  401df1:	adc    al,0xe9
  401df3:	mov    esi,0x3e9dfec
  401df8:	xor    DWORD PTR [eax+eax*1],edx
  401dfb:	bound  eax,QWORD PTR [eax]
  401dfd:	add    cl,ah
  401dff:	or     ecx,DWORD PTR [ebx-0x7a74625]
  401e05:	mov    ecx,0xd4ff1598
  401e0a:	es jecxz 0x401e82
  401e0d:	push   ecx
  401e0e:	pop    ds
  401e0f:	imul   ecx,DWORD PTR [eax],0xff08604e
  401e15:	mov    esp,0x3e87ec3a
  401e1a:	pop    es
  401e1b:	jecxz  0x401e6d
  401e1d:	bound  esp,QWORD PTR [ecx+0xc]
  401e20:	mov    ebx,ebx
  401e22:	pop    eax
  401e23:	adc    al,0x6a
  401e25:	jmp    0x1f3c8709
  401e2a:	popa   
  401e2b:	fdiv   st(7),st
  401e2d:	pushf  
  401e2e:	sub    ah,bl
  401e30:	push   edx
  401e31:	cmc    
  401e32:	push   0xffffff8f
  401e34:	push   ebp
  401e35:	add    DWORD PTR [ebx],esi
  401e37:	dec    ecx
  401e38:	or     al,0xc2
  401e3a:	loop   0x401ea5
  401e3c:	push   es
  401e3d:	ret    0xccf2
  401e40:	ret    0x32e1
  401e43:	pushf  
  401e44:	add    ecx,ebp
  401e46:	xor    dl,BYTE PTR [ecx+ecx*8]
  401e49:	stos   DWORD PTR es:[edi],eax
  401e4a:	sub    eax,0x89625514
  401e4f:	xchg   esi,eax
  401e50:	(bad)  
  401e51:	int    0x1d
  401e53:	xor    edx,DWORD PTR [ecx]
  401e55:	sub    DWORD PTR ds:0x71e872dc,ebp
  401e5b:	loop   0x401e5c
  401e5d:	cmp    al,0x1d
  401e5f:	jecxz  0x401ed6
  401e61:	loope  0x401e63
  401e63:	add    BYTE PTR [edx+0x5b],bl
  401e66:	jmp    DWORD PTR [esi+0x14c00e5c]
  401e6c:	xor    ebp,ecx
  401e6e:	ret    0x32e5
  401e71:	(bad)  
  401e72:	push   ebp
  401e73:	loope  0x401e2e
  401e75:	add    eax,0xdc15008d
  401e7a:	push   eax
  401e7b:	inc    DWORD PTR [ebp+0x6]
  401e7e:	push   DWORD PTR [ebp+0x4c]
  401e81:	out    0x75,eax
  401e83:	or     BYTE PTR [edi+0x58850c46],bl
  401e89:	pusha  
  401e8a:	adc    ecx,DWORD PTR [ebx+0x453be9d5]
  401e90:	sbb    BYTE PTR [ebx+0x7],dh
  401e93:	mov    eax,0x1619
  401e98:	arpl   dx,sp
  401e9a:	sub    al,al
  401e9c:	arpl   WORD PTR [esi],dx
  401e9e:	sub    eax,eax
  401ea0:	push   ecx
  401ea1:	(bad)  
  401ea2:	or     al,0x0
  401ea4:	lds    ecx,FWORD PTR [esp+ebp*8+0x56dc1483]
  401eab:	push   0x400555
  401eb0:	inc    eax
  401eb1:	add    bx,ax
  401eb4:	aas    
  401eb5:	xchg   ebx,eax
  401eb6:	jge    0x401ec4
  401eb8:	fdiv   DWORD PTR [ecx+0x6]
  401ebb:	cmp    DWORD PTR ds:0xc775000d,0x2c
  401ec2:	rcr    BYTE PTR [esi+0x51],0xd6
  401ec6:	or     al,0x0
  401ec8:	add    BYTE PTR [eax],al
  401eca:	sbb    ebp,DWORD PTR [edx+0x10]
  401ecd:	add    BYTE PTR ds:0x8801b80e,al
  401ed3:	adc    eax,0xd3d15e00
  401ed8:	or     al,0x0
  401eda:	add    esi,DWORD PTR [edx+0xc]
  401edd:	(bad)  
  401ede:	push   ebp
  401edf:	fadd   QWORD PTR [eax]
  401ee1:	add    BYTE PTR [eax+0x50558b15],cl
  401ee7:	mov    WORD PTR [edx],ss
  401ee9:	lea    edx,ds:0x45ff50dc
  401eef:	or     BYTE PTR [esi-0x1],dl
  401ef2:	xor    DWORD PTR [eax],eax
  401ef4:	or     al,0xff
  401ef6:	jecxz  0x401ed2
  401ef8:	jle    0x401eba
  401efa:	enter  0x28f1,0xc0
  401efe:	fbld   TBYTE PTR [ebx+0x6e310cc1]
  401f04:	jbe    0x401f02
  401f06:	xor    eax,ebp
  401f08:	cld    
  401f09:	sub    dh,cl
  401f0b:	fmul   st,st(2)
  401f0d:	ret    0xeb2d
  401f10:	mov    BYTE PTR [ebp+0x15],al
  401f13:	out    dx,al
  401f14:	repz sub DWORD PTR [ebx+ebx*8+0x6e],esi
  401f19:	(bad)  
  401f1a:	leave  
  401f1b:	jmp    0x401f20
  401f1d:	add    BYTE PTR [ecx],dh
  401f1f:	or     edx,0x4eeb25c2
  401f25:	mov    ebx,ebp
  401f27:	imul   edi,DWORD PTR [edi-0xbc62908],0x68
  401f2e:	add    BYTE PTR [eax],al
  401f30:	xor    eax,0xd90043dd
  401f35:	jl     0x401f39
  401f37:	ret    
  401f38:	into   
  401f39:	xchg   esp,eax
  401f3a:	add    ebp,DWORD PTR [edx+0x31]
  401f3d:	test   DWORD PTR [eax],eax
  401f3f:	push   0x31
  401f41:	test   DWORD PTR [eax],eax
  401f43:	push   0x8003eb31
  401f48:	scas   al,BYTE PTR es:[edi]
  401f49:	addr16 or ebp,eax
  401f4c:	mov    al,0xa1
  401f4e:	add    al,0x0
  401f50:	test   al,0x37
  401f52:	lock inc eax
  401f54:	sbb    al,0xef
  401f56:	mov    esp,0x5deb39c2
  401f5b:	add    BYTE PTR [edi+ebp*1-0x14f6af14],dh
  401f62:	adc    eax,DWORD PTR [eax]
  401f64:	xor    DWORD PTR [eax-0x77],edi
  401f67:	clc    
  401f68:	pop    esi
  401f69:	mov    cl,0xf3
  401f6b:	push   eax
  401f6c:	adc    bx,WORD PTR [eax+esi*8]
  401f70:	dec    ecx
  401f71:	je     0x401f29
  401f73:	add    al,0x31
  401f75:	or     eax,0xe13f79a9
  401f7a:	adc    al,0xf0
  401f7c:	pop    ecx
  401f7d:	ds sahf 
  401f7f:	add    al,0x31
  401f81:	sub    eax,0xb73bda9
  401f86:	jmp    0x5d1cc47d
  401f8b:	mov    DWORD PTR [ecx],ebp
  401f8d:	lock repz sbb di,0xffd4
  401f94:	add    BYTE PTR [eax],al
  401f96:	push   cs
  401f97:	push   es
  401f98:	push   esi
  401f99:	repz push cs
  401f9b:	xchg   esp,eax
  401f9c:	int3   
  401f9d:	jmp    0x401fd0
  401f9f:	imul   eax,DWORD PTR [ebp+0x51e084f3],0xe914de3b
  401fa9:	stos   DWORD PTR es:[edi],eax
  401faa:	xor    BYTE PTR [ecx+ebp*8],dl
  401fad:	add    edi,eax
  401faf:	shl    cl,cl
  401fb1:	add    eax,DWORD PTR [ebx+ecx*4+0x2ae5c0d]
  401fb8:	test   eax,0xe862c903
  401fbd:	mov    dh,0x6a
  401fc0:	jmp    0x40201f
  401fc2:	xor    edi,ebx
  401fc4:	je     0x401fc1
  401fc6:	into   
  401fc7:	mov    al,0xf4
  401fc9:	repnz scas al,BYTE PTR es:[edi]
  401fcb:	int    0x2b
  401fcd:	or     BYTE PTR [ecx],dh
  401fcf:	dec    ecx
  401fd0:	jb     0x401fb1
  401fd2:	or     DWORD PTR [eax-0x23cebc05],edi
  401fd8:	pop    ebx
  401fd9:	add    eax,0x443df72
  401fde:	sbb    edx,DWORD PTR [esi+eax*8]
  401fe1:	js     0x40200c
  401fe3:	in     al,dx
  401fe4:	outs   dx,BYTE PTR ds:[esi]
  401fe5:	lock jbe 0x401fc7
  401fe8:	add    BYTE PTR [eax+0x14001874],ah
  401fee:	out    0xef,al
  401ff0:	sub    DWORD PTR [ebp-0x43b93b6],0xfffffff2
  401ff7:	adc    edi,eax
  401ff9:	sbb    eax,DWORD PTR [eax]
  401ffb:	add    BYTE PTR [ebx+edx*8],dh
  401ffe:	dec    DWORD PTR [esi+0x2c8f0fc9]
  402004:	dec    ebp
  402005:	xlat   BYTE PTR ds:[ebx]
  402006:	inc    ebp
  402007:	jge    0x40203b
  402009:	adc    al,0x0
  40200b:	jmp    0xf53f349c
  402010:	fidiv  WORD PTR es:[ebp-0xf]
  402014:	cli    
  402015:	je     0x402014
  402017:	pop    esi
  402018:	and    ecx,DWORD PTR [ebx+0x28fe155]
  40201e:	call   esp
  402020:	push   ss
  402021:	fbstp  TBYTE PTR [ebp+0x41]
  402024:	add    ebp,DWORD PTR [ecx+0x8]
  402027:	ds pop esp
  402029:	cld    
  40202a:	enter  0xea2b,0xde
  40202e:	push   esp
  40202f:	bound  eax,QWORD PTR [esi]
  402031:	ins    BYTE PTR es:[edi],dx
  402032:	add    dl,bh
  402034:	jb     0x40204a
  402036:	clc    
  402037:	fwait
  402038:	sub    eax,0x3283ffd3
  40203d:	fbstp  TBYTE PTR [ebp-0x1f]
  402040:	jmp    0xc2cc:0xc306ffa9
  402047:	in     eax,0x32
  402049:	dec    ecx
  40204a:	mov    eax,DWORD PTR ds:0x6a14492f
  402050:	push   esp
  402051:	adc    al,0x75
  402053:	in     eax,dx
  402054:	fcmovnbe st,st(1)
  402056:	adc    cl,ch
  402058:	mov    eax,ds:0x6d61068
  40205d:	adc    bh,bh
  40205f:	push   esp
  402060:	add    BYTE PTR [eax],al
  402062:	test   esi,esi
  402064:	hlt    
  402065:	add    BYTE PTR [ebp-0x1c],dh
  402068:	dec    DWORD PTR [ebx+0x220fc1d]
  40206e:	xchg   ecx,eax
  40206f:	aad    0x10
  402071:	add    BYTE PTR ds:0x8c83ec61,bh
  402077:	jecxz  0x402078
  402079:	jne    0x4020bf
  40207b:	inc    eax
  40207c:	add    al,0x8d
  40207e:	sbb    eax,0x1dff50e4
  402083:	loopne 0x40206c
  402085:	ret    
  402086:	mov    bh,0xe4
  402088:	dec    DWORD PTR [ebx+0x3883140d]
  40208e:	sbb    BYTE PTR [esi+0x7],ah
  402091:	mov    ecx,DWORD PTR [ebp-0x1c]
  402094:	bswap  eax
  402096:	adc    DWORD PTR [esi],0x2b
  402099:	shl    BYTE PTR [ecx-0x2a],0x8
  40209d:	add    ch,cl
  40209f:	pusha  
  4020a0:	in     al,dx
  4020a1:	or     DWORD PTR [esp+eiz*8-0x1],0x75
  4020a6:	add    al,0x40
  4020a8:	add    cl,BYTE PTR [ebp-0xaf1c33]
  4020ae:	lods   eax,DWORD PTR ds:[esi]
  4020af:	(bad)  
  4020b1:	xchg   edi,eax
  4020b2:	pop    ss
  4020b3:	jecxz  0x4020b4
  4020b5:	mov    ecx,DWORD PTR [ebp-0x37c77d23]
  4020bb:	or     BYTE PTR gs:[edi],cl
  4020be:	outs   dx,DWORD PTR ds:[esi]
  4020bf:	push   ebp
  4020c0:	inc    BYTE PTR [esi+0x2b02bf0c]
  4020c6:	add    BYTE PTR [eax],al
  4020c8:	or     BYTE PTR [ecx+0x46c808c2],bl
  4020ce:	mov    ebp,esp
  4020d0:	sbb    ecx,esp
  4020d2:	cld    
  4020d3:	call   FWORD PTR ds:0x250169dd
  4020d9:	push   esi
  4020da:	call   DWORD PTR [eax+0x77]
  4020dd:	data16 or al,ch
  4020e0:	xor    DWORD PTR [ecx-0xf],edx
  4020e3:	inc    DWORD PTR [esi-0x4df3b98e]
  4020e9:	adc    eax,DWORD PTR [esp+esi*2]
  4020ec:	das    
  4020ed:	out    dx,al
  4020ee:	mov    ecx,0x5d26e45
  4020f3:	sub    esi,DWORD PTR [ecx-0x4c]
  4020f6:	lds    ecx,FWORD PTR [eax]
  4020f8:	xor    DWORD PTR [eax],esp
  4020fa:	jge    0x4020e8
  4020fc:	stos   BYTE PTR es:[edi],al
  4020fd:	sub    BYTE PTR [ebx+eax*4],dl
  402100:	or     ebp,ebx
  402102:	jbe    0x402108
  402104:	js     0x4020af
  402106:	(bad)  
  402107:	(bad)  
  402108:	aas    
  402109:	loopne 0x40210a
  40210b:	(bad)  
  40210c:	mov    esp,0x2de0dbe2
  402111:	lock or si,cx
  402115:	out    0xfc,eax
  402117:	mov    al,BYTE PTR [ebx+ebx*8-0x14cefd38]
  40211e:	add    eax,DWORD PTR [eax]
  402120:	sbb    bh,al
  402122:	pop    ebp
  402123:	add    DWORD PTR [esi],eax
  402125:	enter  0xfeff,0x84
  402129:	jecxz  0x402106
  40212b:	push   ecx
  40212c:	add    BYTE PTR [eax],al
  40212e:	cmc    
  40212f:	sbb    eax,0xf6f3c9f0
  402134:	add    edx,DWORD PTR [ebp-0x46]
  402137:	push   ds
  402138:	test   ah,al
  40213a:	fstp   QWORD PTR [esp+edi*2+0x3812575]
  402141:	lea    esi,[edi+eax*1+0x53]
  402145:	(bad)  
  402146:	cmp    al,0xdb
  402148:	pop    ecx
  402149:	inc    DWORD PTR [ebx+eiz*8-0x25]
  40214d:	mov    al,ds:0xb03eadc
  402152:	jno    0x4021b2
  402154:	or     DWORD PTR [ebx+0x7502ef24],eax
  40215a:	ss adc al,0x12
  40215d:	(bad)  
  40215e:	test   edx,0x893100ab
  402164:	sub    al,0xf0
  402166:	xor    ah,ah
  402168:	add    BYTE PTR [ecx+0x21],cl
  40216b:	addr16 call 0xf03:0xe91430ac
  402173:	retf   
  402174:	stos   DWORD PTR es:[edi],eax
  402175:	add    BYTE PTR [ecx],dh
  402177:	inc    edi
  402178:	(bad)  
  402179:	loopne 0x40212b
  40217b:	xlat   BYTE PTR ds:[ebx]
  40217c:	and    edi,ebp
  40217e:	push   esi
  40217f:	fdivr  QWORD PTR [edx]
  402181:	sbb    ebp,DWORD PTR [edx+0x69]
  402184:	jmp    0xebaa52e2
  402189:	pop    ecx
  40218a:	xor    DWORD PTR [edx-0x16],ebp
  40218d:	pop    ebx
  40218e:	xor    DWORD PTR [ecx+ebp*8],edx
  402191:	ret    
  402192:	add    BYTE PTR [eax],al
  402194:	cs (bad) 
  402196:	in     eax,0xdb
  402198:	outs   dx,DWORD PTR ds:[esi]
  402199:	shr    ecx,0x3
  40219c:	test   al,0x51
  40219e:	gs inc esp
  4021a0:	popf   
  4021a1:	inc    edi
  4021a2:	pop    esi
  4021a3:	jns    0x4021de
  4021a5:	in     al,dx
  4021a6:	sbb    ch,dh
  4021a8:	push   es
  4021a9:	fsub   QWORD PTR [esi]
  4021ab:	dec    ecx
  4021ac:	stc    
  4021ad:	adc    al,0xe9
  4021af:	add    esi,DWORD PTR [ecx]
  4021b1:	(bad)  
  4021b2:	xchg   esp,eax
  4021b3:	sti    
  4021b4:	mov    ebx,0xe9496406
  4021b9:	inc    esp
  4021ba:	rol    DWORD PTR [ebx-0x7f16ebcf],0xac
  4021c1:	pop    esp
  4021c2:	push   ds
  4021c3:	out    dx,eax
  4021c4:	into   
  4021c5:	inc    esp
  4021c6:	push   ss
  4021c7:	jns    0x402202
  4021c9:	fstp   TBYTE PTR [ebx+0x159b3ff]
  4021cf:	add    al,0x3c
  4021d1:	pop    ss
  4021d2:	stos   BYTE PTR es:[edi],al
  4021d3:	fimul  DWORD PTR [ecx-0x25]
  4021d6:	add    BYTE PTR [edx+ebx*4-0x77],bh
  4021da:	test   DWORD PTR [ecx-0x71],esi
  4021dd:	(bad)  
  4021df:	cmp    DWORD PTR [esi-0x1a2e039f],eax
  4021e5:	(bad)  
  4021e7:	(bad)  
  4021e8:	mov    ebx,DWORD PTR [ebx-0x66a4148c]
  4021ee:	(bad)  
  4021ef:	cmp    al,0x81
  4021f1:	in     al,dx
  4021f2:	stc    
  4021f3:	xchg   ebp,eax
  4021f4:	xor    dl,BYTE PTR [ebx+ecx*4]
  4021f7:	stos   BYTE PTR es:[edi],al
  4021f8:	add    BYTE PTR [eax],al
  4021fa:	sti    
  4021fb:	int3   
  4021fc:	ret    0x32e1
  4021ff:	inc    ecx
  402200:	mov    edx,DWORD PTR [ebp-0x61072f4d]
  402206:	leave  
  402207:	pop    es
  402208:	call   0x1b7d68
  40220d:	pusha  
  40220e:	jmp    0x416ce9ee
  402213:	adc    al,0x0
  402215:	jmp    0xe5b5fd4c
  40221a:	or     dl,ch
  40221c:	std    
  40221d:	outs   dx,BYTE PTR ds:[esi]
  40221e:	jg     0x6dc1779
  402224:	push   0xffffffe9
  402226:	push   0x16dcff14
  40222b:	(bad)  [ebp+0x51]
  40222e:	punpcklwd mm1,DWORD PTR [eax]
  402231:	inc    esi
  402232:	jns    0x40223c
  402234:	call   FWORD PTR [ebx-0x1e3d32c2]
  40223a:	xor    al,BYTE PTR [ecx-0x75]
  40223d:	cmp    eax,0x2ef8cfb3
  402242:	imul   ebx,esp,0x1432e900
  402248:	(bad)  
  402249:	lods   al,BYTE PTR ds:[esi]
  40224a:	(bad)  
  40224b:	adc    eax,DWORD PTR [eax]
  40224d:	jmp    0x95b184
  402252:	rcr    BYTE PTR [ebp+0x12],0x8d
  402256:	aad    0xee
  402258:	push   eax
  402259:	push   0xffffff99
  40225b:	jmp    0x411ed5
  402260:	(bad)  
  402261:	(bad)  
  402262:	clc    
  402263:	push   ebp
  402265:	xlat   BYTE PTR ds:[ebx]
  402266:	(bad)  
  402267:	push   edx
  402268:	test   BYTE PTR [ebx+0x45],bl
  40226b:	clc    
  40226c:	rcl    ebp,1
  40226e:	add    al,0x0
  402270:	inc    ebp
  402271:	pop    ebp
  402272:	in     al,dx
  402273:	push   0xffffff89
  402275:	pop    ecx
  402276:	inc    ebp
  402277:	or     al,0x48
  402279:	jmp    0x28b02af3
  40227e:	cld    
  40227f:	dec    DWORD PTR [edi+0x4808c29e]
  402285:	inc    ecx
  402286:	mov    ebp,esp
  402288:	and    cl,BYTE PTR [ecx*4-0xb9b3bb]
  40228f:	jne    0x4022e1
  402291:	mov    esi,0xe8affc2a
  402296:	leave  
  402297:	ret    0x1620
  40229a:	push   ebp
  40229b:	mov    ebp,DWORD PTR [ebx+edx*4+0x62080c7d]
  4022a2:	adc    al,0x83
  4022a4:	or     eax,0x1e740006
  4022a9:	jmp    0x619f3323
  4022ae:	or     al,0xff
  4022b0:	in     eax,0xdd
  4022b2:	out    0x9,eax
  4022b4:	ins    BYTE PTR es:[edi],dx
  4022b5:	out    0xff,eax
  4022b7:	leave  
  4022b8:	sbb    dl,BYTE PTR [eax+eax*1]
  4022bb:	push   ebp
  4022bc:	push   ebx
  4022bd:	hlt    
  4022be:	push   DWORD PTR [ebp-0x8]
  4022c1:	call   0x402b3b
  4022c6:	inc    eax
  4022c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022c8:	(bad)  
  4022c9:	jmp    FWORD PTR [edi]
  4022cb:	xchg   ebx,eax
  4022cc:	jge    0x4022de
  4022ce:	xor    ebx,ebp
  4022d0:	ja     0x4022e6
  4022d2:	mov    dl,0x88
  4022d4:	(bad)  
  4022d5:	inc    DWORD PTR [edx-0x1f]
  4022d8:	in     al,dx
  4022d9:	jne    0x40231c
  4022db:	fidiv  DWORD PTR [esi+0xc]
  4022de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022df:	pop    eax
  4022e0:	sti    
  4022e1:	out    0xe6,eax
  4022e3:	jmp    0xffff:0xad68ffec
  4022ea:	in     eax,0x65
  4022ec:	fild   WORD PTR [ebx+0x7403ef04]
  4022f2:	sub    ecx,edx
  4022f4:	jbe    0x402302
  4022f6:	mov    ebx,esp
  4022f8:	xlat   BYTE PTR ds:[ebx]
  4022f9:	add    BYTE PTR [ecx],dh
  4022fb:	mov    BYTE PTR [ecx],0x2b
  4022fe:	jno    0x4022fb
  402300:	in     al,dx
  402301:	jne    0x402330
  402303:	stos   BYTE PTR es:[edi],al
  402304:	jbe    0x40230e
  402306:	dec    ecx
  402307:	ds in  al,dx
  402309:	dec    DWORD PTR [esi-0x5c]
  40230c:	ror    DWORD PTR [eax],0x31
  40230f:	sbb    BYTE PTR [ecx-0x14],bh
  402312:	mov    dl,0x8
  402314:	adc    al,0xff
  402316:	mov    esp,0x3d75ecdf
  40231b:	pop    edx
  40231c:	jbe    0x402326
  40231e:	sbb    DWORD PTR [edx-0x69e10014],ebp
  402324:	std    
  402325:	(bad)  
  402326:	pushf  
  402327:	fucomi st,st(4)
  402329:	jne    0x40232b
  40232b:	add    BYTE PTR ds:0x1908763a,bh
  402331:	jbe    0x40231f
  402333:	(bad)  
  402334:	(bad)  
  402335:	xor    eax,ecx
  402337:	or     al,0x31
  402339:	js     0x4023b3
  40233b:	in     al,dx
  40233c:	out    dx,al
  40233d:	lahf   
  40233e:	sti    
  40233f:	out    0xe6,eax
  402341:	and    ah,ch
  402343:	inc    DWORD PTR [ecx+0x4567fbd5]
  402349:	adc    al,0xd1
  40234b:	inc    edx
  40234c:	xor    ecx,ebx
  40234e:	xchg   esp,eax
  40234f:	sti    
  402350:	into   
  402351:	dec    esp
  402352:	push   ss
  402353:	in     al,dx
  402354:	mov    esi,0x3cece96d
  402359:	or     al,0x11
  40235b:	pop    ds
  40235c:	scas   al,BYTE PTR es:[edi]
  40235d:	fdivr  st,st(6)
  40235f:	pop    eax
  402360:	xor    eax,DWORD PTR [edi-0x27110054]
  402366:	je     0x402363
  402368:	mov    fs,WORD PTR [esi+eiz*8]
  40236b:	jmp    0x4022fb
  40236d:	ins    DWORD PTR es:[edi],dx
  40236e:	jmp    0x4023e8
  402370:	in     al,dx
  402371:	add    edi,DWORD PTR [ecx]
  402373:	jmp    0x402379
  402375:	or     al,0xc1
  402377:	and    DWORD PTR [esi-0x28],esi
  40237a:	(bad)  
  40237b:	dec    esp
  40237c:	js     0x402353
  40237e:	in     eax,dx
  40237f:	add    edi,esp
  402381:	mov    ebp,es
  402383:	xchg   DWORD PTR [ebp-0x29],esi
  402386:	scas   al,BYTE PTR es:[edi]
  402387:	jno    0x4023b2
  402389:	in     al,dx
  40238a:	jecxz  0x402379
  40238c:	dec    esi
  40238d:	fcom   st(2)
  40238f:	inc    eax
  402390:	add    BYTE PTR [eax],al
  402392:	xor    eax,0xb2e82c8b
  402397:	dec    esi
  402398:	(bad)  
  40239a:	enter  0x8613,0x71
  40239e:	cmp    eax,0xefbf4d7
  4023a3:	jmp    0xd85f0f18
  4023a8:	hlt    
  4023a9:	out    0x16,eax
  4023ab:	(bad)  
  4023ad:	fucomi st,st(2)
  4023af:	(bad)  
  4023b0:	pop    esi
  4023b1:	jmp    0x4023b9
  4023b3:	(bad)  
  4023b5:	(bad)  ds:0xaaeb4ed8
  4023bb:	push   ecx
  4023bc:	inc    ebp
  4023bd:	mov    ebp,0x50e90cf3
  4023c2:	mov    edx,0xf16a00e8
  4023c7:	loopne 0x402390
  4023c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ca:	(bad)  
  4023cb:	adc    al,0x0
  4023cd:	jmp    0x1d85ad04
  4023d2:	pop    ebp
  4023d3:	xlat   BYTE PTR ds:[ebx]
  4023d4:	jne    0x4023b7
  4023d6:	fiadd  DWORD PTR [eax-0x2c]
  4023d9:	jmp    0x8200b510
  4023de:	dec    ecx
  4023df:	xlat   BYTE PTR ds:[ebx]
  4023e0:	jne    0x4023d3
  4023e2:	mov    dh,al
  4023e4:	stc    
  4023e5:	test   BYTE PTR [ebx-0x740eba73],0x61
  4023ec:	cld    
  4023ed:	sar    DWORD PTR [ecx],1
  4023ef:	ret    
  4023f0:	add    cl,ch
  4023f2:	xchg   DWORD PTR [edi+0xff74],edx
  4023f8:	mov    esp,DWORD PTR [ecx-0x8]
  4023fb:	cmp    edi,edx
  4023fd:	adc    ebp,eax
  4023ff:	cmp    BYTE PTR [eax],dh
  402401:	adc    al,0x0
  402403:	jo     0x4023f6
  402405:	(bad)  
  402407:	cmp    al,0x49
  402409:	in     al,dx
  40240a:	or     DWORD PTR [edx+0x1cff1432],ebx
  402410:	dec    ebp
  402411:	out    dx,eax
  402412:	mov    ebx,0x8bd75ba2
  402417:	sub    al,0x41
  402419:	pop    es
  40241a:	enter  0x6296,0x44
  40241e:	(bad)  
  40241f:	cld    
  402420:	sub    ch,bh
  402422:	push   0x7f
  402424:	sbb    edx,edi
  402426:	leave  
  402427:	stos   DWORD PTR es:[edi],eax
  402428:	push   ds
  402429:	xlat   BYTE PTR ds:[ebx]
  40242a:	push   esp
  40242b:	(bad)  
  40242c:	(bad)  
  40242d:	xchg   edx,eax
  40242e:	les    ebx,FWORD PTR [ecx-0xd]
  402431:	push   eax
  402432:	hlt    
  402433:	jmp    0x6440386a
  402438:	jno    0x402412
  40243a:	push   eax
  40243b:	dec    esi
  40243c:	or     DWORD PTR [eax+ebp*8],0xbe8600
  402443:	add    BYTE PTR [ebp-0x2d],cl
  402446:	js     0x402495
  402448:	daa    
  402449:	fs or  al,ch
  40244c:	xchg   bh,ah
  40244e:	(bad)  
  40244f:	inc    DWORD PTR [ecx+0x54]
  402452:	clc    
  402453:	and    DWORD PTR [ebp-0xb8dfb16],0xffffff8d
  40245a:	ins    DWORD PTR es:[edi],dx
  40245b:	clc    
  40245c:	add    BYTE PTR [eax],al
  40245e:	int3   
  40245f:	jmp    0x7c8120d9
  402464:	rol    BYTE PTR [eax],cl
  402466:	cwde   
  402467:	aad    0xbf
  402469:	je     0x402445
  40246b:	jmp    0x38f91ce5
  402470:	add    al,ch
  402472:	cdq    
  402473:	aad    0xff
  402475:	call   DWORD PTR [edi+0x11d0f79a]
  40247b:	pop    ss
  40247c:	hlt    
  40247d:	(bad)  
  40247e:	fucomp st(3)
  402480:	call   0x4fef1a
  402485:	jmp    0x402505
  402487:	jmp    0x4024fe
  402489:	or     BYTE PTR [eax+0x16],dh
  40248c:	sti    
  40248d:	inc    DWORD PTR [edi-0x65364008]
  402493:	adc    eax,DWORD PTR [eax]
  402495:	jmp    0x4024e5
  402497:	idiv   DWORD PTR [edi+0x138ac9]
  40249d:	push   0x4a
  40249f:	cmp    ah,bh
  4024a1:	jmp    FWORD PTR ds:0xb0f0e7da
  4024a7:	jmp    0x4024a8
  4024a9:	(bad)  
  4024aa:	dec    ebp
  4024ab:	loopne 0x4024ae
  4024ad:	add    BYTE PTR [eax],cl
  4024af:	adc    cl,BYTE PTR [ebp-0xbf97bb]
  4024b5:	jne    0x4024b7
  4024b7:	mov    edx,0x3e31fbd2
  4024bc:	jmp    0x47b9944
  4024c1:	je     0x4024c3
  4024c3:	add    BYTE PTR [ebx-0x22],al
  4024c6:	mov    ebx,0x6f1f6c3b
  4024cb:	pop    es
  4024cc:	cdq    
  4024cd:	in     al,dx
  4024ce:	add    eax,DWORD PTR [eax]
  4024d0:	xor    DWORD PTR [edx+0x2],edx
  4024d3:	sub    esi,ecx
  4024d5:	add    al,BYTE PTR [esi]
  4024d7:	sub    esi,ecx
  4024d9:	and    al,0xc6
  4024db:	add    al,0x31
  4024dd:	cwde   
  4024de:	jl     0x4024cc
  4024e0:	mov    dl,0x2f
  4024e2:	in     al,dx
  4024e3:	(bad)  
  4024e4:	hlt    
  4024e5:	push   cs
  4024e6:	push   esp
  4024e7:	call   FWORD PTR [ebx+eiz*8]
  4024ea:	fisttp DWORD PTR [eax-0x7e]
  4024ed:	jmp    0x4024f2
  4024ef:	test   DWORD PTR [ecx+0x63],esi
  4024f2:	sbb    al,0xff
  4024f4:	add    al,0xe3
  4024f6:	fcmovnu st,st(0)
  4024f8:	mov    DWORD PTR [esi-0x3d0b7618],esi
  4024fe:	call   0x13139a78
  402503:	shl    BYTE PTR [ecx],cl
  402505:	jmp    0x402503
  402507:	mov    edi,0x75e8bedd
  40250c:	sub    eax,0x1f86e9e
  402511:	rcl    DWORD PTR [edi],cl
  402513:	or     esi,DWORD PTR [ecx]
  402515:	jmp    0x4024ff
  402517:	jne    0x40255e
  402519:	sub    eax,0xffffffd1
  40251c:	xor    ebx,ebp
  40251e:	call   0xb2d34e98
  402523:	cli    
  402524:	mov    ?,WORD PTR cs:[edx+0x390000c2]
  40252b:	jmp    0x40257b
  40252d:	mov    ecx,DWORD PTR ds:0x82e8bf6a
  402533:	ror    ah,cl
  402535:	lea    esi,[esp+edx*1+0x65]
  402539:	push   ebx
  40253a:	push   es
  40253b:	pop    edi
  40253c:	icebp  
  40253d:	(bad)  
  40253f:	shr    ecx,0x3
  402542:	lods   al,BYTE PTR ds:[esi]
  402543:	rcr    esi,cl
  402545:	jnp    0x4024ed
  402547:	adc    ebp,ecx
  402549:	add    esp,esi
  40254b:	pop    esi
  40254c:	icebp  
  40254d:	(bad)  [ebp-0x5717c925]
  402553:	dec    esi
  402554:	xor    eax,0x11d844e8
  402559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40255a:	loopne 0x40256f
  40255c:	jmp    0x6d44a45d
  402561:	xchg   DWORD PTR [ecx],esi
  402563:	adc    al,0xe9
  402565:	jp     0x40255b
  402567:	jecxz  0x40256f
  402569:	outs   dx,BYTE PTR ds:[esi]
  40256a:	popf   
  40256b:	jmp    0x402598
  40256d:	fidiv  DWORD PTR [ecx]
  40256f:	adc    al,0x6a
  402571:	mov    edi,0x3e90f2d
  402576:	loope  0x40258b
  402578:	cmp    esp,ebx
  40257a:	fcom   DWORD PTR [ebx]
  40257c:	jmp    0xc58ecd84
  402581:	out    0xfc,eax
  402583:	ffreep st(1)
  402585:	xchg   edi,eax
  402586:	pop    eax
  402587:	adc    ebp,ecx
  402589:	sub    BYTE PTR [ebp+0xf],0xe4
  40258d:	add    eax,DWORD PTR [eax]
  40258f:	add    BYTE PTR [ecx],dh
  402591:	add    al,0xe9
  402593:	push   ebx
  402594:	dec    ecx
  402595:	sub    ecx,0x3
  402598:	xor    DWORD PTR [ebx+0x13dbdc2c],ecx
  40259e:	sahf   
  40259f:	jno    0x4025ee
  4025a1:	aam    0x1c
  4025a3:	lock ss pop esi
  4025a6:	and    edi,0x8d91c4a4
  4025ac:	sbb    BYTE PTR ds:0x28f582e9,dl
  4025b2:	add    BYTE PTR [eax+0x70],ah
  4025b5:	int3   
  4025b6:	push   esp
  4025b8:	push   ss
  4025b9:	mov    ebp,0x142d3865
  4025be:	call   esp
  4025c0:	cli    
  4025c1:	mov    ebx,0xd40e5390
  4025c6:	push   0xffffffe1
  4025c8:	mov    ah,BYTE PTR [edx+0x28]
  4025cb:	test   al,0x32
  4025cd:	shl    DWORD PTR [ebp-0xf],cl
  4025d0:	cli    
  4025d1:	lock cld 
  4025d3:	ss into 
  4025d5:	pop    ds
  4025d6:	fsubr  DWORD PTR [esi]
  4025d8:	inc    eax
  4025d9:	enter  0x9cff,0xca
  4025dd:	mov    ebx,0xd3d61dba
  4025e2:	and    esi,DWORD PTR [ecx]
  4025e4:	into   
  4025e5:	dec    ecx
  4025e6:	clc    
  4025e7:	push   cs
  4025e8:	and    BYTE PTR [edi+edi*8-0x1f445584],bh
  4025ef:	std    
  4025f0:	xchg   edi,eax
  4025f1:	shl    DWORD PTR [ebx],cl
  4025f3:	adc    DWORD PTR [eax],eax
  4025f5:	add    BYTE PTR [esi+0x3e01ec49],cl
  4025fb:	adc    al,0x0
  4025fd:	jmp    0xd2286f91
  402602:	xchg   ebx,edx
  402604:	(bad)  
  402605:	jmp    0xc1486f99
  40260a:	test   ebp,ecx
  40260c:	inc    esi
  40260e:	jmp    0x4025e6
  402610:	pop    ebx
  402611:	mov    al,0x70
  402613:	sbb    BYTE PTR [eax],al
  402615:	sbb    al,0xda
  402617:	mov    edi,0xd34d2c83
  40261c:	jae    0x40260f
  40261e:	dec    edi
  40261f:	dec    ecx
  402620:	or     BYTE PTR [ecx-0x16ff1acf],dl
  402626:	sbb    edx,esp
  402628:	leave  
  402629:	stos   DWORD PTR es:[edi],eax
  40262a:	rcl    DWORD PTR cs:[eax+eax*1-0x5d],cl
  40262f:	jmp    0x4025bc
  402631:	inc    ebp
  402632:	and    BYTE PTR [eax+eax*4],dl
  402635:	add    BYTE PTR [eax],cl
  402637:	pop    ss
  402638:	push   eax
  402639:	push   0x58
  40263b:	lock repnz rcr BYTE PTR [eax],1
  40263f:	pop    ss
  402640:	leave  
  402641:	ret    0x1714
  402644:	push   ebp
  402645:	mov    ebp,DWORD PTR [edx+eiz*2-0x4]
  402649:	mov    edi,ebp
  40264b:	into   
  40264c:	mov    cl,BYTE PTR [ebp-0x24]
  40264f:	mov    ch,0xe
  402651:	push   ecx
  402652:	or     eax,esi
  402654:	add    ch,BYTE PTR [ebx]
  402656:	or     dh,al
  402658:	stos   DWORD PTR es:[edi],eax
  402659:	pop    ecx
  40265a:	add    BYTE PTR [eax],al
  40265c:	pop    ebx
  40265d:	mov    eax,0x5a62f303
  402662:	leave  
  402663:	ret    0x16c0
  402666:	push   ebp
  402667:	mov    ebp,DWORD PTR [ecx+eiz*2]
  40266a:	push   edi
  40266b:	mov    edi,DWORD PTR [ebp+0x258bfbca]
  402671:	iret   
  402672:	mov    cl,BYTE PTR [ebp+0x78]
  402675:	mov    ch,0x2
  402677:	repz in al,0x59
  40267a:	pop    esi
  40267b:	leave  
  40267c:	pop    edx
  40267d:	retf   
  40267e:	call   DWORD PTR [ebx+eax*1-0x14]
  402682:	push   esi
  402683:	push   edi
  402684:	add    eax,DWORD PTR [ebx+0x8]
  402687:	cld    
  402688:	adc    ecx,DWORD PTR [ebx]
  40268a:	adc    BYTE PTR [ebx],ch
  40268c:	cwde   
  40268d:	dec    esp
  40268e:	jge    0x40269c
  402690:	jnp    0x4026a7
  402692:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402694:	arpl   WORD PTR [ebp+0x59080175],cx
  40269a:	pop    esi
  40269b:	leave  
  40269c:	call   0x83eb:0xc354ffcb
  4026a3:	les    ebx,FWORD PTR [ecx+eiz*2+0x15315357]
  4026aa:	add    al,BYTE PTR [ecx]
  4026ac:	xor    DWORD PTR [ebx-0x5cc68a1c],edi
  4026b2:	xchg   ebx,eax
  4026b3:	call   FWORD PTR [esi]
  4026b5:	push   ebx
  4026b6:	jns    0x402735
  4026b8:	sub    DWORD PTR [edx],eax
  4026ba:	cmp    eax,0x404e32b
  4026bf:	add    DWORD PTR [eax],eax
  4026c1:	add    BYTE PTR [ecx],dh
  4026c3:	mov    ebx,0x713b147b
  4026c8:	ret    0xf8e2
  4026cb:	or     BYTE PTR ss:[bp+0x7a],dh
  4026d0:	js     0x402747
  4026d2:	xor    eax,0x31fe3f01
  4026d7:	es mov ebx,0x35fa2b
  4026dd:	cmp    edi,DWORD PTR [ecx+0x6c00e478]
  4026e3:	stc    
  4026e4:	jns    0x4026ea
  4026e6:	add    BYTE PTR [ebx+0x7126fe3e],bh
  4026ec:	dec    edi
  4026ed:	(bad)  
  4026ee:	mov    ebx,0x2d8829b7
  4026f3:	(bad)  
  4026f4:	jns    0x40273b
  4026f6:	sahf   
  4026f7:	inc    ebx
  4026f8:	add    BYTE PTR [edx],bh
  4026fa:	lock test DWORD PTR [esi],esi
  4026fd:	adc    BYTE PTR [ebx],al
  4026ff:	mov    ebp,0x7e87c918
  402704:	outs   dx,BYTE PTR ds:[esi]
  402705:	aad    0xda
  402707:	adc    DWORD PTR [esi-0x37],eax
  40270a:	jae    0x4026c3
  40270c:	add    edx,DWORD PTR [ebp-0x46]
  40270f:	pop    DWORD PTR [eax+0x4e2e69c4]
  402715:	push   edi
  402716:	pop    esi
  402717:	or     ah,bh
  402719:	pop    edx
  40271a:	stos   DWORD PTR es:[edi],eax
  40271b:	mov    esi,0x354c457b
  402720:	inc    eax
  402721:	add    DWORD PTR [ecx+0xe82c14],edi
  402727:	add    BYTE PTR [edx-0x55c2d933],ch
  40272d:	inc    edi
  40272e:	in     eax,0xbc
  402730:	je     0x4026fe
  402732:	jmp    0x7254583a
  402737:	ss inc ecx
  402739:	mov    ch,0x29
  40273b:	out    0x6c,al
  40273d:	iret   
  40273e:	out    0xad,al
  402740:	je     0x402711
  402742:	fisubr WORD PTR [ebp+0x4e710c1d]
  402748:	(bad)  
  402749:	adc    esi,DWORD PTR [edi+eiz*8-0x185375da]
  402750:	mov    ebx,0x7c7c1127
  402755:	shl    dh,cl
  402757:	lods   eax,DWORD PTR ds:[esi]
  402758:	je     0x402729
  40275a:	jno    0x40276b
  40275c:	sbb    DWORD PTR [ecx],esp
  40275e:	jg     0x40279e
  402760:	int    0x9d
  402762:	xchg   esp,eax
  402763:	in     al,0xb9
  402765:	daa    
  402766:	loope  0x4027e1
  402768:	fs shr ebx,1
  40276b:	dec    esi
  40276c:	mov    bh,0x9d
  40276e:	std    
  40276f:	sub    DWORD PTR [edx+0x3d331156],edi
  402775:	add    al,0x6
  402777:	ds cdq 
  402779:	mov    ch,0x29
  40277b:	jns    0x402769
  40277d:	into   
  40277e:	popa   
  40277f:	add    BYTE PTR [ebx-0xd8512aa],bh
  402785:	adc    al,BYTE PTR [esi+0x42]
  402788:	fcmovu st,st(2)
  40278a:	stos   DWORD PTR es:[edi],eax
  40278b:	adc    BYTE PTR [eax],al
  40278d:	add    BYTE PTR [ecx],dh
  40278f:	addr16 (bad) 
  402791:	lock mov al,0xd7
  402794:	mov    ebp,0x1ad066e2
  402799:	das    
  40279a:	jp     0x40273a
  40279c:	and    al,0xe0
  40279e:	add    ecx,edx
  4027a0:	add    BYTE PTR [edi*1+0x2d99a3bc],bh
  4027a7:	adc    al,0x85
  4027a9:	test   eax,0xe9969c22
  4027ae:	xor    dl,BYTE PTR [edi+edi*8]
  4027b1:	sbb    al,0x3d
  4027b3:	mov    esp,0xd012972f
  4027b8:	mov    DWORD PTR [ecx+edi*8],ebp
  4027bb:	iret   
  4027bc:	jne    0x40283b
  4027be:	add    eax,0x32e9cf3d
  4027c3:	sbb    eax,eax
  4027c5:	cmc    
  4027c6:	xchg   ebx,eax
  4027c7:	popf   
  4027c8:	inc    ebp
  4027c9:	pop    ecx
  4027ca:	adc    cl,BYTE PTR [edx-0xc]
  4027cd:	push   ecx
  4027ce:	mov    ecx,esi
  4027d0:	call   DWORD PTR [esi-0x44]
  4027d3:	pop    ecx
  4027d4:	clc    
  4027d5:	dec    esi
  4027d6:	mov    al,cl
  4027d8:	(bad)  
  4027d9:	mov    esp,0x3975cffa
  4027de:	lds    esp,FWORD PTR [eax-0x302dc902]
  4027e4:	jne    0x402813
  4027e6:	aad    0x56
  4027e8:	iret   
  4027e9:	jmp    0xedb5f720
  4027ee:	retf   0xcf02
  4027f1:	jmp    0x647227f6
  4027f6:	call   DWORD PTR [esi+esi*1-0x6ce87a5f]
  4027fd:	iret   
  4027fe:	call   FWORD PTR [ecx-0x9018676]
  402804:	xchg   ebx,eax
  402805:	iret   
  402806:	jne    0x4027fd
  402808:	xchg   ebx,eax
  402809:	dec    ecx
  40280a:	clc    
  40280b:	je     0x4027b6
  40280d:	mov    esi,0x6493defe
  402812:	call   0xf78ee
  402817:	into   
  402818:	or     DWORD PTR [eax+ebp*8],ebx
  40281b:	add    BYTE PTR [edi],cl
  40281d:	lock (bad) 
  40281f:	inc    DWORD PTR [edx]
  402821:	and    BYTE PTR [eax+0x59],ch
  402824:	xor    BYTE PTR [ecx+0x0],bl
  402827:	(bad)  
  402828:	std    
  402829:	pop    ds
  40282a:	call   0xfff2bac2
  40282f:	or     esi,DWORD PTR [eax-0x4e]
  402832:	jne    0x402828
  402834:	(bad)  
  402835:	imul   edi,eax,0xffffffff
  402838:	cmp    eax,0xb283e820
  40283d:	mov    cl,0xff
  40283f:	and    edx,eax
  402841:	mov    cl,0x75
  402843:	clc    
  402844:	mov    al,0x8d
  402846:	std    
  402847:	call   DWORD PTR [edi+0x600875b2]
  40284d:	xchg   esp,eax
  40284e:	idiv   edi
  402850:	push   edi
  402851:	sahf   
  402852:	ret    
  402853:	pop    ebx
  402854:	adc    ecx,ebx
  402856:	or     BYTE PTR [eax],al
  402858:	add    BYTE PTR [eax],al
  40285a:	popf   
  40285b:	popf   
  40285c:	in     al,dx
  40285d:	or     DWORD PTR [edi+eiz*8],0x57
  402861:	mov    ecx,DWORD PTR [ebp-0x733ff53a]
  402867:	sbb    al,0xc7
  402869:	add    al,bl
  40286b:	adc    al,BYTE PTR [eax]
  40286d:	add    bl,ah
  40286f:	mov    cl,0x83
  402871:	jge    0x4028a3
  402873:	sbb    DWORD PTR [ebp+0x7],esi
  402876:	add    dl,BYTE PTR [ebx]
  402878:	add    al,BYTE PTR [eax]
  40287a:	cwde   
  40287b:	mov    ebp,0xcab5830f
  402880:	add    DWORD PTR [ebp-0x71],esi
  402883:	mov    al,0x0
  402885:	add    DWORD PTR [eax+0x7302eb12],ebx
  40288b:	mov    BYTE PTR [ecx+0x21831ca],al
  402891:	add    BYTE PTR ds:0x3150fc57,al
  402897:	or     ebp,DWORD PTR [esi+0x0]
  40289a:	data16 addr16 adc bh,bh
  40289e:	in     al,0xc4
  4028a0:	jmp    0x402872
  4028a2:	mov    sp,0xb03
  4028a6:	jno    0x4028b7
  4028a8:	jno    0x402837
  4028aa:	in     al,dx
  4028ab:	test   BYTE PTR [edx+ebp*2],dh
  4028ae:	xor    DWORD PTR [eax+0x47],ecx
  4028b1:	hlt    
  4028b2:	loope  0x4028d6
  4028b4:	add    al,0xff
  4028b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028b7:	retf   
  4028b8:	loopne 0x40292f
  4028ba:	and    eax,0xcf9d94
  4028bf:	add    BYTE PTR [ecx],dh
  4028c1:	mov    ebx,0xff9cc00c
  4028c6:	test   BYTE PTR [ebp+0x9],bh
  4028c9:	mov    esp,0xc0b24657
  4028ce:	xlat   BYTE PTR ds:[ebx]
  4028cf:	add    DWORD PTR [ebp+edi*4-0x4306827c],eax
  4028d6:	push   edi
  4028d7:	cmp    bh,BYTE PTR [edx-0x7ebf2480]
  4028dd:	push   ebx
  4028de:	inc    edx
  4028df:	std    
  4028e0:	ficom  WORD PTR [esi-0x73]
  4028e3:	clc    
  4028e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e5:	js     0x4028c2
  4028e7:	push   eax
  4028e8:	rol    WORD PTR [ebx],1
  4028eb:	push   0x31
  4028ed:	(bad)  
  4028ee:	push   esi
  4028ef:	adc    BYTE PTR [esi-0x53172050],bh
  4028f5:	inc    BYTE PTR [ebx]
  4028f7:	add    BYTE PTR [edx],bh
  4028f9:	sti    
  4028fa:	push   edi
  4028fb:	or     bh,dh
  4028fd:	adc    ch,BYTE PTR [ecx]
  4028ff:	std    
  402900:	sahf   
  402901:	push   ss
  402902:	sub    eax,0x8cbf8aff
  402907:	inc    ebp
  402908:	and    eax,0x2c74c3b2
  40290d:	mov    esi,0x14aef856
  402912:	jmp    0xd21025f7
  402917:	push   0x7e
  402919:	adc    al,0xe9
  40291b:	mov    WORD PTR [esi+0x19],gs
  40291e:	test   eax,0x44913d56
  402923:	cld    
  402924:	add    BYTE PTR [eax],al
  402926:	xor    BYTE PTR [ecx-0x29],al
  402929:	mov    esp,?
  40292b:	sub    ebp,DWORD PTR [ecx]
  40292d:	xor    al,0x46
  40292f:	inc    edi
  402930:	aad    0xe0
  402932:	les    esp,FWORD PTR [ebx]
  402934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402935:	push   esi
  402936:	and    eax,0x190c14cd
  40293b:	repz xchg ebp,eax
  40293d:	loopne 0x402965
  40293f:	ins    DWORD PTR es:[edi],dx
  402940:	mov    al,ds:0x1c1445c5
  402945:	lea    eax,ds:0x300bfc93
  40294b:	adc    al,0xe9
  40294d:	cmp    DWORD PTR [ebx+ebx*1+0x6e],0x16
  402952:	pop    edx
  402953:	sti    
  402954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402955:	add    esp,DWORD PTR [esi+0x316df156]
  40295b:	int    0xdc
  40295d:	mul    edi
  40295f:	inc    esi
  402960:	stc    
  402961:	loopne 0x4029c7
  402963:	and    BYTE PTR [esi+0x56],al
  402966:	sub    DWORD PTR [ebp+esi*1+0x20cccee1],edi
  40296d:	lds    esp,FWORD PTR [ecx]
  40296f:	adc    al,0x2
  402971:	les    ebp,FWORD PTR [edx+0x78e538e3]
  402977:	sbb    ch,cl
  402979:	add    esi,DWORD PTR [ecx]
  40297b:	jecxz  0x402980
  40297d:	push   esp
  40297e:	xor    eax,0xc3121b93
  402983:	jp     0x40298a
  402985:	and    BYTE PTR [ebx+0xf2d822],0x0
  40298c:	and    DWORD PTR [edx+0x27bb0700],esi
  402992:	test   DWORD PTR [ecx-0x18ffaced],ecx
  402998:	ins    DWORD PTR es:[edi],dx
  402999:	inc    esi
  40299a:	fisubr DWORD PTR [edx+0x3eec9928]
  4029a0:	mov    edx,0xa5d60856
  4029a5:	cwde   
  4029a6:	jge    0x40299d
  4029a8:	stos   DWORD PTR es:[edi],eax
  4029a9:	pop    esi
  4029aa:	adc    dl,dh
  4029ac:	jge    0x4029f5
  4029ae:	sbb    BYTE PTR [edx+0x7d],ah
  4029b1:	shr    dl,cl
  4029b3:	loope  0x4029d5
  4029b5:	adc    eax,0x142da625
  4029ba:	add    BYTE PTR [edx+0x39],dh
  4029bd:	xchg   ecx,eax
  4029be:	pusha  
  4029bf:	or     BYTE PTR [esp+edx*1+0x33],ch
  4029c3:	stos   DWORD PTR es:[edi],eax
  4029c4:	jbe    0x40297c
  4029c6:	call   0xc9ac0749
  4029cb:	stos   DWORD PTR es:[edi],eax
  4029cc:	and    DWORD PTR [edx*2-0x7c97fe9e],edx
  4029d3:	in     al,dx
  4029d4:	sub    dl,BYTE PTR [esi*2+0x851efee]
  4029db:	das    
  4029dc:	sbb    eax,0x506a0055
  4029e1:	sbb    BYTE PTR [eax],al
  4029e3:	aam    0x37
  4029e5:	rol    DWORD PTR [ebp-0xb],cl
  4029e8:	in     al,0xfc
  4029ea:	inc    eax
  4029eb:	jmp    0x41486bdf
  4029f0:	add    BYTE PTR [eax],al
  4029f2:	fld    DWORD PTR es:[eax]
  4029f5:	jmp    0x9d4016a5
  4029fa:	es mov esp,0x14352c35
  402a00:	add    esi,DWORD PTR [ecx]
  402a02:	bnd callw 0xa8d5
  402a07:	retf   
  402a08:	inc    DWORD PTR [eax]
  402a0a:	and    ecx,DWORD PTR [eax+0x68075ff]
  402a10:	call   0x507754
  402a15:	inc    DWORD PTR ds:0x4ce8531b
  402a1b:	in     eax,0x0
  402a1d:	add    bl,ah
  402a1f:	aad    0x5b
  402a21:	leave  
  402a22:	call   0x53ba:0xd355001f
  402a29:	sub    ebp,0x17
  402a2c:	add    BYTE PTR [ebp+0x57],dh
  402a2f:	rol    BYTE PTR [ebp+0x8],cl
  402a32:	mov    ?,edi
  402a34:	inc    eax
  402a35:	add    bl,cl
  402a37:	xor    ecx,DWORD PTR [eax+eax*1]
  402a3a:	adc    eax,0x1c45c713
  402a3f:	fldcw  WORD PTR [eax]
  402a41:	inc    ecx
  402a42:	sbb    dl,ch
  402a44:	jne    0x402a4e
  402a46:	mov    al,0xbd
  402a48:	int3   
  402a49:	add    BYTE PTR [eax],cl
  402a4b:	sahf   
  402a4c:	fdivr  st,st(7)
  402a4e:	add    eax,0xcce1e81b
  402a53:	push   ss
  402a54:	add    BYTE PTR [ebx],al
  402a56:	add    BYTE PTR [eax],al
  402a58:	mov    al,ds:0x63e85355
  402a5d:	out    dx,al
  402a5e:	(bad)  
  402a5f:	jmp    DWORD PTR [ebx-0x71]
  402a62:	push   DWORD PTR [ebp-0x30]
  402a65:	add    eax,0x173cebe8
  402a6a:	add    bh,bh
  402a6c:	xchg   ebp,eax
  402a6d:	sbb    dl,BYTE PTR [ebx-0x18]
  402a70:	pusha  
  402a71:	fild   DWORD PTR [eax]
  402a73:	add    bh,bh
  402a75:	imul   ecx,DWORD PTR [eax],0xffffffe8
  402a78:	inc    eax
  402a79:	out    dx,al
  402a7a:	(bad)  
  402a7b:	inc    DWORD PTR [ebx-0x2a]
  402a7e:	pop    ebx
  402a7f:	leave  
  402a80:	pop    edx
  402a81:	pop    ds
  402a82:	add    BYTE PTR [ebp+0x31],dl
  402a85:	ss out dx,eax
  402a87:	xor    DWORD PTR [ebp+0x18],0x36
  402a8b:	push   0x3bc2c
  402a90:	cdq    
  402a91:	add    edx,ebx
  402a93:	inc    DWORD PTR [esi-0x4d03b7cd]
  402a99:	ja     0x402afb
  402a9b:	sub    eax,esi
  402a9d:	mov    esp,0xe6337503
  402aa2:	idiv   dh
  402aa4:	fsubr  st(0),st
  402aa6:	push   0x0
  402aa8:	retf   
  402aa9:	mov    esp,0x672975dc
  402aae:	add    al,0xff
  402ab0:	and    al,0x8
  402ab2:	sub    eax,DWORD PTR [ecx+0x31]
  402ab5:	cmp    ah,al
  402ab7:	jns    0x402aa2
  402ab9:	jns    0x402b12
  402abb:	cld    
  402abc:	add    BYTE PTR [eax],al
  402abe:	dec    ecx
  402abf:	sub    cl,bl
  402ac1:	jmp    FWORD PTR [esi]
  402ac3:	jae    0x402b0c
  402ac5:	cld    
  402ac6:	xor    DWORD PTR [ebx+0x3cde0003],edi
  402acc:	sub    eax,DWORD PTR [ecx+0x31]
  402acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad0:	das    
  402ad1:	mov    esp,DWORD PTR [esi]
  402ad3:	inc    esi
  402ad4:	inc    edi
  402ad5:	or     BYTE PTR [edx+eax*2+0x5d],cl
  402ad9:	(bad)  
  402ada:	inc    BYTE PTR [ecx+eax*2+0x6a167c04]
  402ae1:	add    BYTE PTR [ebp+edi*2-0xfa6aff5],bh
  402ae8:	sub    DWORD PTR [ecx+0x31],eax
  402aeb:	pop    edx
  402aec:	adc    ch,al
  402aee:	je     0x402b41
  402af0:	(bad)  
  402af2:	cmp    bh,bl
  402af4:	push   edi
  402af5:	add    eax,0xebdf78b8
  402afa:	sub    DWORD PTR [esi],edi
  402afc:	lds    eax,FWORD PTR [edx+esi*4]
  402aff:	adc    al,0xe6
  402b01:	add    esp,DWORD PTR [edx+ebx*8]
  402b04:	jb     0x402b4d
  402b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b07:	imul   esp,DWORD PTR [eax],0xb41435c2
  402b0d:	mov    BYTE PTR [ebp+0x39477265],al
  402b13:	sbb    eax,0x942c5829
  402b18:	mov    cl,0x3
  402b1a:	add    al,0x1e
  402b1c:	xor    DWORD PTR [ecx+esi*1],eax
  402b1f:	adc    al,0xe9
  402b21:	cmp    BYTE PTR [eax],al
  402b23:	add    BYTE PTR [eax-0x2a],bh
  402b26:	in     eax,0x3
  402b28:	fist   DWORD PTR [ebx]
  402b2a:	inc    ebx
  402b2b:	add    al,0xcb
  402b2d:	adc    al,0x43
  402b2f:	add    al,0xcb
  402b31:	adc    edx,DWORD PTR [ecx-0x7c]
  402b34:	xor    DWORD PTR [ecx+ebp*8],edx
  402b37:	fdivr  QWORD PTR [ebx+ebx*1+0x146ae4c1]
  402b3e:	jmp    0xa93d84cb
  402b43:	inc    eax
  402b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b45:	sbb    eax,0xdd0fec3a
  402b4a:	jmp    0xe9530452
  402b4f:	add    esi,DWORD PTR [ecx]
  402b51:	ins    DWORD PTR es:[edi],dx
  402b52:	mov    al,0xc1
  402b54:	xor    eax,0x15891414
  402b59:	popf   
  402b5a:	sub    al,0xc
  402b5c:	sub    dl,ah
  402b5e:	cmc    
  402b5f:	push   es
  402b60:	mov    cl,0xb
  402b62:	jmp    0xe9cc63bd
  402b67:	add    esi,DWORD PTR [ecx]
  402b69:	adc    al,0x20
  402b6b:	shl    DWORD PTR ds:0x29564e14,0xbc
  402b72:	cmp    ecx,eax
  402b74:	xor    DWORD PTR [edx+ebp*2],edx
  402b77:	fcmovnb st,st(6)
  402b79:	aas    
  402b7a:	add    ah,ah
  402b7c:	mov    esp,DWORD PTR [ebx]
  402b7e:	add    cl,ch
  402b80:	xor    bl,BYTE PTR [ecx]
  402b82:	xchg   ebp,eax
  402b83:	sub    DWORD PTR ds:0x12c082,edi
  402b89:	add    BYTE PTR [edi],ch
  402b8b:	mov    WORD PTR [eax],es
  402b8d:	jmp    0x2c093fc4
  402b92:	cs adc al,0x55
  402b95:	jb     0x402b35
  402b97:	xchg   esp,eax
  402b98:	(bad)  
  402b99:	std    
  402b9a:	sbb    DWORD PTR [edx+ebp*2],edx
  402b9d:	jmp    0x14869ff
  402ba2:	imul   ebx,esp,0xd43fe900
  402ba8:	je     0x402bbd
  402baa:	sbb    eax,0x7f8ae864
  402baf:	enter  0x60ff,0xf0
  402bb3:	(bad)  
  402bb4:	pop    eax
  402bb5:	sbb    DWORD PTR [edx+0x3e],ebp
  402bb8:	cld    
  402bb9:	mov    esi,0x79e81be0
  402bbe:	outs   dx,BYTE PTR ds:[esi]
  402bbf:	adc    eax,DWORD PTR [eax]
  402bc1:	loop   0x402c35
  402bc3:	ds or  al,0xa6
  402bc6:	or     al,0xe8
  402bc9:	sbb    DWORD PTR [edi],eax
  402bcb:	enter  0xc2ff,0xf2
  402bcf:	mov    ebx,0xc8706203
  402bd4:	leave  
  402bd5:	stos   DWORD PTR es:[edi],eax
  402bd6:	xor    DWORD PTR [edx*2-0x749be68e],edx
  402bdd:	adc    al,0x29
  402bdf:	cmp    dl,BYTE PTR [eax]
  402be1:	sbb    al,BYTE PTR ds:0xa66fa91
  402be7:	cmp    eax,DWORD PTR [eax]
  402be9:	shl    DWORD PTR [edx],cl
  402beb:	cmp    al,BYTE PTR [ebx]
  402bed:	ret    
  402bee:	add    BYTE PTR [eax],al
  402bf0:	xor    bh,BYTE PTR [edx]
  402bf2:	add    eax,ecx
  402bf4:	xor    dl,BYTE PTR [eax+eax*1]
  402bf7:	add    BYTE PTR [eax-0x15],bl
  402bfa:	jne    0x402c04
  402bfc:	pusha  
  402bfd:	test   edx,0x398c800
  402c03:	inc    eax
  402c04:	jl     0x402c05
  402c06:	imul   eax,DWORD PTR [eax],0xcb6cbbe8
  402c0c:	cwde   
  402c0d:	adc    ecx,DWORD PTR [ecx+0x399443]
  402c13:	push   0xffffff88
  402c15:	cmp    DWORD PTR [eax],eax
  402c17:	push   0xffffff9a
  402c19:	cmp    DWORD PTR [eax],eax
  402c1b:	dec    ebx
  402c1d:	mov    ebx,0x1388cb5e
  402c22:	or     eax,eax
  402c24:	cld    
  402c25:	stc    
  402c26:	mov    BYTE PTR [ebx+0x5c],al
  402c29:	cmp    DWORD PTR [eax],eax
  402c2b:	push   0x58
  402c2d:	cmp    DWORD PTR [eax],eax
  402c2f:	push   0x4c
  402c31:	add    ebp,eax
  402c33:	dec    edi
  402c34:	xchg   ebx,eax
  402c35:	adc    eax,DWORD PTR [eax]
  402c37:	mov    DWORD PTR [ebx],ebx
  402c39:	sbb    BYTE PTR [ebx],cl
  402c3b:	sar    ch,0xf3
  402c3e:	(bad)  
  402c3f:	jae    0x402c8d
  402c41:	mov    ebx,0x1348caf2
  402c46:	push   DWORD PTR [ebx]
  402c48:	shl    BYTE PTR [ebp-0x2de7ff36],0x3
  402c4f:	inc    edi
  402c51:	jmp    0x411855
  402c56:	cmc    
  402c57:	jmp    0xd915148f
  402c5c:	add    BYTE PTR [eax],al
  402c5e:	iret   
  402c5f:	or     eax,0xea87ffff
  402c64:	sub    eax,eax
  402c66:	ror    DWORD PTR [ebp+0x8],0xf
  402c6a:	ins    DWORD PTR es:[edi],dx
  402c6b:	rcr    DWORD PTR [ebx-0x37],cl
  402c6e:	sbb    bl,BYTE PTR [ebx]
  402c70:	add    BYTE PTR [ebp+0x31],dl
  402c73:	xor    ah,bh
  402c75:	push   ebx
  402c76:	stos   BYTE PTR es:[edi],al
  402c77:	ja     0x402c84
  402c79:	or     DWORD PTR [edx],0x4e
  402c7c:	dec    edi
  402c7d:	pop    ss
  402c7e:	(bad)  
  402c7f:	mov    DWORD PTR [ebx],ecx
  402c81:	call   0x431eae
  402c86:	mov    dh,0x89
  402c88:	jmp    edi
  402c8a:	fadd   QWORD PTR [edx]
  402c8c:	add    eax,DWORD PTR [eax]
  402c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c8f:	jmp    0xbcabd37f
  402c94:	add    ebx,DWORD PTR [ebx+0x68]
  402c97:	cli    
  402c98:	(bad)  
  402c99:	jmp    ebp
  402c9b:	inc    ecx
  402c9c:	out    0x81,eax
  402c9e:	ins    DWORD PTR es:[edi],dx
  402c9f:	sbb    al,0xea
  402ca1:	(bad)  
  402ca2:	jle    0x402c4a
  402ca4:	xor    al,BYTE PTR [ebx+0x412b4134]
  402caa:	xor    DWORD PTR [ebp+0x1f66154f],edi
  402cb0:	push   eax
  402cb1:	sub    al,dh
  402cb3:	mov    esp,0xd5588aeb
  402cb8:	fld    st(7)
  402cba:	add    BYTE PTR [eax],al
  402cbc:	xor    al,0x9
  402cbe:	sub    al,0x41
  402cc0:	xor    DWORD PTR [ebp+0x3a310003],edi
  402cc6:	pop    ss
  402cc7:	js     0x402cd2
  402cc9:	cld    
  402cca:	add    eax,DWORD PTR [eax]
  402ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ccd:	enter  0x35d8,0xa9
  402cd1:	jecxz  0x402d15
  402cd3:	add    BYTE PTR [ecx],cl
  402cd5:	adc    bl,bl
  402cd7:	call   DWORD PTR [esi]
  402cd9:	outs   dx,DWORD PTR ds:[esi]
  402cda:	push   DWORD PTR [edi+0x59]
  402cdd:	cld    
  402cde:	add    eax,DWORD PTR [eax]
  402ce0:	xor    DWORD PTR [ebx+0x4bb48d03],edi
  402ce6:	jmp    0xec6c23ea
  402ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cec:	loope  0x402d02
  402cee:	fnstenvw [edi+ecx*4-0x3a2116b3]
  402cf6:	mov    ecx,0x4ec4bbeb
  402cfb:	fnstcw WORD PTR [edi+ecx*2+0x48593445]
  402d02:	adc    DWORD PTR [ebx+0x31],eax
  402d05:	cmp    al,0xeb
  402d07:	add    esi,DWORD PTR [ecx]
  402d09:	xchg   esp,eax
  402d0a:	inc    ecx
  402d0b:	jno    0x402d87
  402d0d:	adc    al,0xe9
  402d0f:	or     al,0x71
  402d11:	adc    eax,0x14303d64
  402d16:	jmp    0xff00d9db
  402d1b:	fmul   DWORD PTR [esi+0x3e914]
  402d21:	add    BYTE PTR [ecx],dh
  402d23:	int    0x64
  402d25:	fmul   QWORD PTR [esi+0x26d8f6c5]
  402d2b:	adc    al,0xe9
  402d2d:	ins    DWORD PTR es:[edi],dx
  402d2e:	xor    DWORD PTR [edx],edi
  402d30:	jmp    0xe97a5ea2
  402d35:	xchg   BYTE PTR [esp+ecx*8+0x6456d8c6],dh
  402d3c:	pop    esp
  402d3d:	jle    0x402d8c
  402d3f:	mov    ch,0xc6
  402d41:	fsub   st,st(1)
  402d43:	les    esi,FWORD PTR [edi+ecx*8+0x4e]
  402d47:	lds    esi,FWORD PTR [esi-0x3e384328]
  402d4d:	ss cli 
  402d4f:	adc    ebp,ecx
  402d51:	or     al,0xf1
  402d53:	adc    al,0x64
  402d55:	hlt    
  402d56:	xor    DWORD PTR [ecx+ebp*8],edx
  402d59:	imul   esp,ebp,0xfffffffb
  402d5c:	daa    
  402d5d:	add    al,0x99
  402d5f:	dec    eax
  402d60:	rol    DWORD PTR [edx+0x31],1
  402d63:	mov    esp,0xc4fed7fe
  402d68:	add    dl,ah
  402d6a:	repnz adc al,0x84
  402d6d:	js     0x402da1
  402d6f:	adc    al,0x0
  402d71:	jb     0x402d15
  402d73:	xchg   esi,eax
  402d74:	test   DWORD PTR [ebp-0x37],ebx
  402d77:	(bad)  
  402d78:	(bad)  
  402d79:	mov    ecx,0x4dbcbc1c
  402d7e:	jmp    0x39693947
  402d83:	nop
  402d84:	fucompp 
  402d86:	add    BYTE PTR [eax],al
  402d88:	xor    dl,BYTE PTR [ecx+ecx*4]
  402d8b:	ins    BYTE PTR es:[edi],dx
  402d8c:	shl    BYTE PTR [edi+edi*8-0x177148d2],cl
  402d93:	push   ss
  402d94:	mov    esp,eax
  402d96:	push   eax
  402d97:	xchg   ecx,eax
  402d98:	ret    0x40fb
  402d9b:	jmp    0xff20ac19
  402da0:	les    bp,DWORD PTR [eax-0x15]
  402da4:	xor    dl,BYTE PTR [eax+eax*4]
  402da7:	adc    DWORD PTR [ecx+0x2af6ffc8],esp
  402dad:	aam    0xf
  402daf:	gs iret 
  402db1:	adc    eax,DWORD PTR [eax]
  402db3:	jmp    0xee41f96b
  402db8:	fsub   QWORD PTR [edi+0x6432e900]
  402dbe:	call   DWORD PTR [ebp+ebx*2-0x239004c]
  402dc5:	les    esi,FWORD PTR [ebp-0x3ba947]
  402dcb:	shl    DWORD PTR [edi+edi*4],0xff
  402dcf:	scas   al,BYTE PTR es:[edi]
  402dd0:	mov    eax,0xfe96e899
  402dd5:	ret    
  402dd6:	push   eax
  402dd7:	adc    ebp,esi
  402dd9:	in     al,dx
  402dda:	inc    eax
  402ddb:	jmp    0x7f20b7df
  402de0:	out    0xc3,al
  402de2:	push   0x181a00
  402de7:	and    BYTE PTR [eax+0xfffb53],0x0
  402dee:	jg     0x402dff
  402df0:	shl    BYTE PTR [esp+edx*1-0x69],0xbd
  402df5:	call   0x2401979
  402dfa:	push   es
  402dfb:	pop    ds
  402dfc:	push   eax
  402dfd:	push   eax
  402dfe:	dec    ebp
  402dff:	xchg   ebp,eax
  402e00:	cld    
  402e01:	out    dx,eax
  402e02:	jg     0x402def
  402e04:	push   eax
  402e05:	call   0x40fe8a
  402e0a:	cwde   
  402e0b:	mov    WORD PTR [ebp-0x149004],es
  402e11:	push   eax
  402e12:	pop    edi
  402e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e14:	in     al,dx
  402e15:	out    dx,eax
  402e16:	dec    edi
  402e17:	jmp    0x402e01
  402e19:	iret   
  402e1a:	inc    esp
  402e1b:	jmp    0x402e1c
  402e1d:	pop    eax
  402e1e:	aas    
  402e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e20:	call   0x512b6e14
  402e25:	inc    DWORD PTR [ebp-0x54]
  402e28:	out    dx,eax
  402e29:	(bad)  
  402e2a:	jg     0x402ddb
  402e2c:	mov    esp,0xe8ea7ff4
  402e31:	sbb    DWORD PTR [eax-0x16],esp
  402e34:	(bad)  
  402e35:	jmp    0x402e6f
  402e37:	lea    eax,[ebp-0x159004]
  402e3d:	push   eax
  402e3e:	jo     0x402e5a
  402e40:	leave  
  402e41:	add    BYTE PTR [eax+0x57],bl
  402e44:	push   eax
  402e45:	(bad)  
  402e46:	aad    0xea
  402e48:	out    dx,eax
  402e49:	(bad)  
  402e4a:	jg     0x402e53
  402e4c:	push   DWORD PTR [ebp-0x4594]
  402e52:	add    BYTE PTR [eax],al
  402e54:	lock inc ebx
  402e56:	hlt    
  402e57:	dec    edi
  402e59:	scas   al,BYTE PTR es:[edi]
  402e5a:	repnz idiv DWORD PTR [edi+0x31b5ffe9]
  402e61:	(bad)  
  402e62:	out    0xff,al
  402e64:	push   cs
  402e65:	xchg   ebp,eax
  402e66:	fdivrp st(7),st
  402e68:	push   es
  402e69:	call   0xffd6:0x920585d6
  402e70:	or     BYTE PTR [edx],al
  402e72:	aad    0xff
  402e74:	out    dx,al
  402e75:	xor    DWORD PTR [eax-0x4],edx
  402e78:	fldcw  WORD PTR [edx]
  402e7a:	retf   0x3100
  402e7d:	out    0x3,eax
  402e7f:	call   FWORD PTR [esp+ebx*2+0x54ceffe6]
  402e86:	xor    esi,esp
  402e88:	(bad)  
  402e89:	pop    ecx
  402e8a:	imul   eax,DWORD PTR [eax],0xefe747be
  402e90:	mov    dh,0x9
  402e92:	jmp    0x402ed7
  402e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e95:	icebp  
  402e96:	aad    0x8d
  402e98:	lods   al,BYTE PTR ds:[esi]
  402e99:	adc    dh,ah
  402e9b:	call   FWORD PTR [esi-0x5e4a2984]
  402ea1:	sbb    esi,edx
  402ea3:	call   FWORD PTR [ecx+0x3100cbfe]
  402ea9:	xor    bl,al
  402eab:	js     0x402e97
  402ead:	ror    DWORD PTR [edi-0x2a367910],0xe8
  402eb4:	push   cs
  402eb5:	ret    0xffd5
  402eb8:	add    BYTE PTR [eax],al
  402eba:	mov    eax,0x5eefec2f
  402ebf:	loope  0x402e96
  402ec1:	mov    ch,0x49
  402ec3:	(bad)  
  402ec5:	call   FWORD PTR [ecx+0x31]
  402ec8:	int    0xff
  402eca:	inc    esi
  402ecb:	lea    edx,[eax+0x28]
  402ece:	lock lods al,BYTE PTR ds:[esi]
  402ed0:	aam    0xb5
  402ed2:	dec    ebp
  402ed3:	(bad)  
  402ed5:	call   FWORD PTR [ecx]
  402ed7:	cs int3 
  402ed9:	add    BYTE PTR [ecx],dh
  402edb:	adc    al,0xf2
  402edd:	ret    
  402ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402edf:	sbb    eax,0xb2098772
  402ee4:	xchg   esi,eax
  402ee5:	aad    0xba
  402ee7:	les    esp,FWORD PTR [edx+0x17]
  402eea:	jge    0x402ed8
  402eec:	daa    
  402eed:	add    al,0x2
  402eef:	jns    0x402f6f
  402ef1:	(bad)  
  402ef2:	or     eax,0xd9d576b2
  402ef7:	sub    esp,DWORD PTR [ecx+0x6c8f3104]
  402efd:	loopne 0x402ecd
  402eff:	rcr    DWORD PTR [esi+0x34],0xd6
  402f03:	xchg   DWORD PTR [ebp-0x1b],eax
  402f06:	into   
  402f07:	rol    DWORD PTR [ecx+0x53],0xf8
  402f0b:	adc    al,0xe9
  402f0d:	jle    0x402f00
  402f0f:	cmp    al,0xb2
  402f11:	aam    0x7c
  402f13:	mov    al,0x46
  402f15:	aad    0xae
  402f17:	lods   al,BYTE PTR ds:[esi]
  402f18:	das    
  402f19:	out    0xa6,al
  402f1b:	shl    DWORD PTR [eax+0x7f],0x0
  402f1f:	add    BYTE PTR [ecx-0x692ae14f],cl
  402f25:	xchg   DWORD PTR [ecx],eax
  402f27:	in     eax,0x8e
  402f29:	rol    DWORD PTR [ecx],0x16
  402f2c:	jle    0x402eef
  402f2e:	push   es
  402f2f:	mov    eax,ds:0x3a7ebf9
  402f34:	jbe    0x402ebd
  402f36:	or     eax,0x1c16ee5
  402f3b:	and    edi,DWORD PTR [ecx+0x14]
  402f3e:	jmp    0x288a04b
  402f43:	mov    DWORD PTR [esp+ebp*4-0x72b12b3a],esp
  402f4a:	(bad)  [eax+0x43113c04]
  402f50:	xor    ebp,eax
  402f52:	test   esp,edx
  402f54:	jl     0x402f0e
  402f56:	add    dh,al
  402f58:	add    eax,0xfae1e8c1
  402f5d:	adc    eax,DWORD PTR [eax]
  402f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f60:	scas   eax,DWORD PTR es:[edi]
  402f61:	ret    
  402f62:	out    dx,eax
  402f63:	sahf   
  402f64:	std    
  402f65:	stos   DWORD PTR es:[edi],eax
  402f66:	pop    edx
  402f67:	xchg   ebp,esp
  402f69:	sar    bh,0x54
  402f6c:	push   cs
  402f6d:	mov    cl,0xff
  402f6f:	xchg   BYTE PTR [edx],cl
  402f71:	push   ecx
  402f72:	out    dx,al
  402f73:	jle    0x402f52
  402f75:	pusha  
  402f76:	pop    esi
  402f77:	mov    al,ds:0x7d8b66f1
  402f7c:	pop    eax
  402f7d:	or     al,0xe8
  402f7f:	push   edx
  402f80:	in     al,dx
  402f81:	sar    bh,0x72
  402f84:	add    BYTE PTR [eax],al
  402f86:	mov    ds:0x1a3b35c0,al
  402f8b:	push   ebx
  402f8c:	add    BYTE PTR [esi+0x30],bl
  402f8f:	shl    DWORD PTR [ebp-0xf],0xb5
  402f93:	push   ebp
  402f94:	add    al,0x70
  402f96:	(bad)  
  402f97:	loop   0x402fc1
  402f99:	test   al,0x32
  402f9b:	retf   
  402f9c:	ret    0x32e5
  402f9f:	mov    edx,DWORD PTR [di]
  402fa2:	mov    cl,0xd7
  402fa4:	clc    
  402fa5:	mov    dh,0xd5
  402fa7:	push   esi
  402fa8:	clc    
  402fa9:	jmp    0x6a4043e0
  402fae:	fisttp WORD PTR [ebx]
  402fb0:	add    BYTE PTR [ebp-0x80],bh
  402fb3:	shl    DWORD PTR [ebp-0x13],0x5d
  402fb7:	inc    esi
  402fb8:	or     BYTE PTR [ebx-0xcf953ce],al
  402fbe:	add    al,0x89
  402fc1:	sub    al,0x81
  402fc3:	lods   al,BYTE PTR ds:[esi]
  402fc4:	pop    es
  402fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc6:	call   0x3329308a
  402fcb:	adc    al,0x8b
  402fcd:	or     al,0x7f
  402fcf:	jmp    0x403011
  402fd1:	add    BYTE PTR [eax-0x1f],cl
  402fd4:	adc    ecx,DWORD PTR [ebx+0x473be40d]
  402fda:	sbb    al,0x5d
  402fdc:	or     edi,eax
  402fde:	dec    ebp
  402fdf:	rol    BYTE PTR [ecx],1
  402fe1:	add    BYTE PTR [eax],cl
  402fe3:	adc    al,0xeb
  402fe5:	push   es
  402fe6:	mov    ds:0xff0b23,eax
  402feb:	add    BYTE PTR ds:0xa07d83e1,ch
  402ff1:	sbb    BYTE PTR [ebp+0x8],dh
  402ff4:	mov    bh,0x5d
  402ff6:	cld    
  402ff7:	call   0x401386
  402ffc:	push   ebx
  402ffd:	dec    ebp
  402ffe:	clc    
  402fff:	pop    edi
  403000:	xchg   ecx,eax
  403001:	(bad)  
  403002:	or     BYTE PTR [eax],al
  403004:	lahf   
  403005:	ds cmp eax,0x5940d2
  40300b:	jmp    0x402fdd
  40300d:	cli    
  40300e:	mov    bh,BYTE PTR [edi]
  403010:	jo     0x40305d
  403012:	idiv   bh
  403014:	ja     0x402fd5
  403016:	(bad)  
  403017:	jne    0x403015
  403019:	retf   0xd205
  40301c:	xor    BYTE PTR [ecx+0x0],bl
  40301f:	add    BYTE PTR [eax+0x4b5f0013],bl
  403025:	std    
  403026:	mov    ch,ah
  403028:	(bad)  
  40302a:	imul   eax,DWORD PTR [eax],0xe8085d27
  403030:	dec    edi
  403031:	sar    edi,1
  403033:	inc    DWORD PTR [ebx]
  403035:	sar    bh,1
  403037:	jne    0x402fb9
  403039:	(bad)  [edx]
  40303b:	(bad)  
  40303c:	pop    eax
  40303d:	adc    eax,DWORD PTR [ebx+0xf5d59f8]
  403043:	push   edi
  403044:	enter  0x2221,0x75
  403048:	pusha  
  403049:	iret   
  40304a:	lea    esi,[edi+0x31]
  40304d:	lods   al,BYTE PTR ds:[esi]
  40304e:	jle    0x403018
  403050:	add    BYTE PTR [eax],al
  403052:	inc    edx
  403053:	cdq    
  403054:	xor    ch,BYTE PTR [eax-0x10]
  403057:	and    eax,DWORD PTR [ebp+0x0]
  40305a:	fsubrp st(4),st
  40305c:	outs   dx,BYTE PTR ds:[esi]
  40305d:	enter  0xad31,0xfe
  403061:	mov    edi,0x40c9b99d
  403066:	xor    eax,0x8b5c5dad
  40306b:	lods   eax,DWORD PTR ds:[esi]
  40306c:	cmp    ch,al
  40306e:	mov    esi,0x3a000374
  403073:	ins    DWORD PTR es:[edi],dx
  403074:	push   edi
  403075:	add    eax,0xeb03acf7
  40307a:	xor    dh,BYTE PTR [edi+0xa]
  40307d:	add    BYTE PTR [esi+0x31c6b295],al
  403083:	lods   eax,DWORD PTR ds:[esi]
  403084:	xchg   al,bh
  403086:	xor    bl,dh
  403088:	push   es
  403089:	(bad)  
  40308a:	lods   eax,DWORD PTR cs:[esi]
  40308c:	jle    0x403055
  40308e:	outs   dx,DWORD PTR ds:[esi]
  40308f:	xchg   BYTE PTR [edx+eax*8-0x74c752d3],bh
  403096:	int    0x29
  403098:	(bad)  
  403099:	cld    
  40309a:	stos   BYTE PTR es:[edi],al
  40309b:	ja     0x40309c
  40309d:	add    al,0x31
  40309f:	fld    QWORD PTR [ebx]
  4030a1:	add    BYTE PTR [ecx],al
  4030a3:	push   ebp
  4030a4:	shl    ebp,0x9e
  4030a7:	cmc    
  4030a8:	jnp    0x4030ef
  4030aa:	xchg   ebp,eax
  4030ab:	sbb    eax,0x9f8e0c58
  4030b0:	iret   
  4030b1:	(bad)  
  4030b2:	cld    
  4030b3:	mov    ah,0xdb
  4030b5:	hlt    
  4030b6:	add    BYTE PTR [eax],al
  4030b8:	test   BYTE PTR ds:0xdcfcffd2,dl
  4030be:	shl    BYTE PTR [ebp+0x3d],cl
  4030c1:	(bad)  
  4030c2:	push   edi
  4030c3:	cld    
  4030c4:	pop    ecx
  4030c5:	xor    al,0x8
  4030c7:	add    BYTE PTR [ecx],dh
  4030c9:	adc    al,0xe6
  4030cb:	push   edi
  4030cc:	push   ebp
  4030cd:	stos   DWORD PTR es:[edi],eax
  4030ce:	jns    0x4030a7
  4030d0:	dec    esi
  4030d1:	mov    esi,0x1435c6a0
  4030d6:	cmp    bl,BYTE PTR [edi+ebx*1-0x13]
  4030da:	daa    
  4030db:	add    al,0x49
  4030dd:	loop   0x403086
  4030df:	add    al,0x31
  4030e1:	or     DWORD PTR [ecx-0x6e76bca8],ebp
  4030e7:	pop    esp
  4030e8:	dec    ebx
  4030e9:	jmp    0x403112
  4030eb:	add    al,0x82
  4030ed:	lods   al,BYTE PTR ds:[esi]
  4030ee:	mov    cl,0xca
  4030f0:	xor    DWORD PTR [edx+ecx*2],edx
  4030f3:	addps  xmm2,XMMWORD PTR [ebx-0x17]
  4030f7:	sub    al,0xf2
  4030f9:	addr16 jb 0x4030dc
  4030fc:	pop    edi
  4030fd:	popa   
  4030fe:	push   ss
  4030ff:	shl    DWORD PTR [esp+ecx*1-0x7f],1
  403103:	lahf   
  403104:	out    dx,eax
  403105:	adc    al,0xe9
  403107:	jae    0x403133
  403109:	aam    0xdc
  40310b:	or     BYTE PTR [esi+0x59],dh
  40310e:	mov    edi,0xe90cf3ba
  403113:	jl     0x403159
  403115:	or     al,0x79
  403117:	jge    0x4030f2
  403119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311a:	jb     0x403173
  40311c:	add    BYTE PTR [eax],al
  40311e:	and    eax,0xe8d028e9
  403123:	mov    ebp,0xa4a6d136
  403128:	cmp    esp,DWORD PTR [edx+0x3e694c1]
  40312e:	sbb    eax,0x9934b61b
  403133:	xchg   edi,eax
  403134:	das    
  403135:	add    al,0x31
  403137:	or     DWORD PTR [ecx],ebp
  403139:	push   edi
  40313a:	ss pop ebp
  40313c:	mov    ds:0xf1d26831,al
  403141:	add    edi,DWORD PTR [eax+0x7b6a0016]
  403147:	sbb    bl,ch
  403149:	pop    ss
  40314a:	lods   eax,DWORD PTR ds:[esi]
  40314b:	adc    eax,DWORD PTR [eax]
  40314d:	jmp    0x3f9b8e84
  403152:	mov    dl,dl
  403154:	or     cl,ch
  403156:	dec    DWORD PTR [eax+0xbf762ec]
  40315c:	or     ebp,DWORD PTR [ecx+0x18016de]
  403162:	xor    eax,0x32710947
  403167:	adc    al,0x0
  403169:	jmp    0xe9450349
  40316e:	xor    eax,0xb2f6ebe2
  403173:	sti    
  403174:	pop    ebx
  403175:	sbb    eax,0xbe38942e
  40317a:	addr16 adc eax,0x1432e8ba
  403180:	add    BYTE PTR [edx+0x7a370000],dl
  403186:	add    cl,ch
  403188:	xor    dl,BYTE PTR [eax+eax*2]
  40318b:	imul   ebp,DWORD PTR [edx],0x554d7514
  403191:	ror    cl,cl
  403193:	sub    esi,DWORD PTR [esi]
  403195:	adc    al,0x55
  403197:	(bad)  
  403198:	out    0x64,al
  40319a:	push   esi
  40319b:	mov    edx,0xec0c573d
  4031a0:	xor    bl,BYTE PTR [eax]
  4031a2:	add    cl,ch
  4031a4:	jecxz  0x403159
  4031a6:	push   eax
  4031a7:	inc    ecx
  4031a8:	fadd   st(7),st
  4031aa:	jmp    FWORD PTR [esi]
  4031ac:	sbb    eax,0x15418bbc
  4031b1:	inc    edi
  4031b2:	or     BYTE PTR [edx+0x4f],dh
  4031b5:	adc    bl,ch
  4031b7:	jmp    0x403187
  4031b9:	dec    edx
  4031ba:	or     esp,DWORD PTR [eax]
  4031bc:	out    0x16,al
  4031be:	add    BYTE PTR [eax],0x6e
  4031c1:	mov    esi,0x7963f574
  4031c6:	je     0x4031ca
  4031c8:	hlt    
  4031c9:	stc    
  4031ca:	sub    al,al
  4031cc:	repnz xchg ebp,eax
  4031ce:	leave  
  4031cf:	jne    0x403237
  4031d1:	cmp    bl,al
  4031d3:	pop    ebx
  4031d4:	push   cs
  4031d5:	in     eax,dx
  4031d6:	enter  0x50c2,0x10
  4031da:	push   ebx
  4031db:	push   esi
  4031dc:	mov    eax,ds:0x4800000b
  4031e1:	inc    eax
  4031e2:	xor    edx,edx
  4031e4:	mov    BYTE PTR [edi],ah
  4031e6:	fist   DWORD PTR [eax+0x40ac0000]
  4031ec:	movzx  ecx,al
  4031ef:	inc    eax
  4031f0:	cmp    al,0x2b
  4031f2:	cwde   
  4031f3:	pop    ebp
  4031f4:	push   es
  4031f5:	nop
  4031f6:	fwait
  4031f7:	(bad)  
  4031f8:	ds nop
  4031fa:	pop    ebx
  4031fb:	and    al,0x2f
  4031fd:	nop
  4031fe:	and    eax,0xca839012
  403203:	or     edx,DWORD PTR [eax-0x6fd853bd]
  403209:	jl     0x4031dd
  40320b:	or     edi,DWORD PTR [ecx]
  40320d:	nop
  40320e:	iret   
  40320f:	or     al,0x4
  403211:	add    al,0xcb
  403213:	xchg   DWORD PTR [ebx+0x3c],eax
  403216:	cdq    
  403217:	inc    edi
  403218:	jl     0x403225
  40321a:	sbb    al,0xee
  40321c:	(bad)  
  40321d:	jg     0x4031f5
  40321f:	sbb    eax,DWORD PTR [ecx-0x70]
  403222:	retf   
  403223:	xchg   DWORD PTR [ebx+0x3c],eax
  403226:	jns    0x40326f
  403228:	jl     0x403234
  40322a:	pushf  
  40322b:	dec    ebp
  40322c:	nop
  40322d:	jg     0x4031c4
  40322f:	sbb    eax,DWORD PTR [edi+0x3]
  403232:	pop    eax
  403233:	push   edi
  403234:	rol    edx,0x96
  403237:	mov    ch,0xb1
  403239:	shl    DWORD PTR [ecx],0xf7
  40323c:	add    eax,0xbbda738b
  403241:	ror    DWORD PTR [ecx-0x456fc53b],0x6
  403248:	je     0x4032a8
  40324a:	or     ch,dh
  40324c:	cmp    BYTE PTR [ebx-0x61b30000],cl
  403252:	ss push esi
  403254:	push   ebp
  403255:	inc    esi
  403256:	pop    eax
  403257:	or     BYTE PTR [ecx-0x5eefafba],ah
  40325d:	ss inc eax
  40325f:	or     al,0xa1
  403261:	push   ds
  403262:	stos   DWORD PTR es:[edi],eax
  403263:	jecxz  0x403278
  403265:	pop    ebp
  403266:	xor    al,0x90
  403268:	sbb    edi,edi
  40326a:	into   
  40326b:	jmp    DWORD PTR [esi]
  40326d:	pop    ebp
  40326e:	mov    cl,cl
  403270:	lahf   
  403271:	mov    ch,0x99
  403273:	ror    DWORD PTR [ecx],0xc5
  403276:	jae    0x4032bb
  403278:	adc    esi,DWORD PTR [ebp+0x73]
  40327b:	pop    ecx
  40327c:	mov    eax,ds:0xa104c52d
  403281:	sub    eax,0x11a104dc
  403286:	scas   al,BYTE PTR es:[edi]
  403287:	nop
  403288:	mov    edx,0x865e736d
  40328d:	es mov ebp,0x38ad2dc2
  403293:	mov    eax,ebp
  403295:	sub    eax,edi
  403297:	in     al,dx
  403298:	iret   
  403299:	pop    ecx
  40329a:	into   
  40329b:	push   ebx
  40329c:	sbb    al,BYTE PTR [esi]
  40329e:	add    BYTE PTR [ebp-0x43],0x7c
  4032a2:	pop    ebx
  4032a3:	inc    esi
  4032a4:	or     BYTE PTR [ebx+eax*1-0x1],ch
  4032a8:	fs jbe 0x4032c7
  4032ab:	inc    ecx
  4032ac:	xor    DWORD PTR [ebp+0x26],edx
  4032af:	(bad)  
  4032b0:	xor    DWORD PTR [ebp+0xbffa],ebp
  4032b6:	sbb    al,0x14
  4032b8:	retf   
  4032b9:	into   
  4032ba:	add    al,0x24
  4032bc:	push   ds
  4032bd:	pop    eax
  4032be:	xor    eax,0x3159ea2e
  4032c3:	mov    ebx,0x4077fb94
  4032c8:	add    eax,0xe9d245db
  4032cd:	add    edi,DWORD PTR [edx]
  4032cf:	aam    0x7c
  4032d1:	add    al,0xf2
  4032d3:	mov    edx,0xaa49cf74
  4032d8:	lods   al,BYTE PTR ds:[esi]
  4032d9:	add    al,0x31
  4032db:	cmpps  xmm7,xmm5,0xad
  4032df:	shr    cl,1
  4032e1:	add    esi,DWORD PTR [ecx]
  4032e3:	mov    DWORD PTR [ecx+edx*8+0x37],esp
  4032e7:	mov    edx,0x109934c6
  4032ec:	call   0x93ec63f4
  4032f1:	enter  0x1431,0xe2
  4032f5:	ret    
  4032f6:	es nop
  4032f8:	push   ebp
  4032f9:	add    al,0x31
  4032fb:	adc    al,0xdc
  4032fd:	pop    es
  4032fe:	xor    BYTE PTR [ecx+ebp*8],dl
  403301:	cld    
  403302:	mov    bh,0x73
  403304:	jmp    0xe96e640c
  403309:	jle    0x4032bf
  40330b:	lds    edi,FWORD PTR [edi-0x33]
  40330e:	out    0x64,al
  403310:	or     DWORD PTR [ebp+0x7ee914f5],0xcd67c5ac
  40331a:	add    BYTE PTR [eax],al
  40331c:	into   
  40331d:	fs push ecx
  40331f:	inc    esp
  403320:	(bad)  
  403321:	mov    ecx,0x3f7ef956
  403326:	in     eax,dx
  403327:	pop    ebx
  403328:	in     eax,0xec
  40332a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332b:	add    edi,DWORD PTR [edi+ecx*4-0x465931c6]
  403332:	add    BYTE PTR [ecx+0x2ef6db7a],bl
  403338:	fs mov ecx,0xac42f175
  40333e:	and    al,0x16
  403340:	je     0x4032fb
  403342:	jmp    0x40332a
  403344:	ins    DWORD PTR es:[edi],dx
  403345:	aas    
  403346:	or     BYTE PTR [esi+ebp*4-0x3b],bl
  40334a:	inc    BYTE PTR [esi]
  40334c:	jl     0x4033b2
  40334e:	call   0xfff9b291
  403353:	pusha  
  403354:	mov    dh,0xa8
  403356:	(bad)  
  403357:	out    dx,al
  403358:	gs add BYTE PTR cs:[ebx+0x35],dl
  40335d:	add    dl,BYTE PTR cs:[ebx+0x2d]
  403361:	add    eax,DWORD PTR cs:[ecx+0x35]
  403365:	adc    al,0x0
  403367:	test   eax,0xc7ec7f65
  40336c:	std    
  40336d:	mov    eax,0x13f1cde8
  403372:	add    BYTE PTR [eax+0x77],ah
  403375:	mov    esp,0xba053540
  40337a:	jne    0x403375
  40337c:	std    
  40337d:	ds or  al,0x9e
  403380:	add    BYTE PTR [eax],al
  403382:	pop    edi
  403383:	mov    esp,0xb8dcc7e8
  403388:	jmp    DWORD PTR [edx-0x36]
  40338b:	mov    eax,0xde0a8175
  403390:	ret    
  403391:	jmp    0xfd1b40c8
  403396:	fnstcw WORD PTR [ecx-0x471b824b]
  40339c:	call   DWORD PTR [ecx+0x3f]
  40339f:	rol    BYTE PTR [eax],1
  4033a1:	jmp    0x582cb29b
  4033a6:	in     eax,dx
  4033a7:	mov    eax,0xb8e021e8
  4033ac:	inc    DWORD PTR [eax]
  4033ae:	and    edx,esp
  4033b0:	pop    ebx
  4033b1:	leave  
  4033b2:	pop    edx
  4033b3:	mov    ecx,0xd91354ff
  4033b8:	add    esp,0xffffc754
  4033be:	retf   
  4033bf:	(bad)  
  4033c0:	jne    0x4033ce
  4033c2:	daa    
  4033c3:	bound  ecx,QWORD PTR [eax]
  4033c5:	push   0x411dce
  4033ca:	daa    
  4033cb:	and    bl,BYTE PTR [ebx+0x29]
  4033ce:	cdq    
  4033cf:	adc    al,0xe8
  4033d1:	mov    ecx,0xbffcc5d
  4033d6:	or     BYTE PTR [eax+0x1448da84],bh
  4033dc:	add    BYTE PTR [ebx],ch
  4033de:	jae    0x40341a
  4033e0:	test   edi,ebp
  4033e2:	data16 int3 
  4033e4:	call   DWORD PTR [eax+0x0]
  4033e7:	add    al,dh
  4033e9:	adc    eax,DWORD PTR [ecx]
  4033eb:	add    BYTE PTR [eax-0x24],cl
  4033ee:	in     al,0xc3
  4033f0:	sbb    BYTE PTR [ebx+ecx*1],dl
  4033f3:	rcl    BYTE PTR [edi],0x38
  4033f6:	mov    ebp,0x3d140800
  4033fb:	add    al,0x9
  4033fd:	adc    al,0x0
  4033ff:	setg   BYTE PTR [esi+0x3d180000]
  403406:	inc    ebp
  403407:	cld    
  403408:	cmp    al,bl
  40340a:	mov    edx,0x8dcba7e9
  40340f:	test   edi,eax
  403411:	retf   0xffff
  403414:	dec    eax
  403415:	fmul   DWORD PTR [edi-0x3]
  403418:	addr16 retf 
  40341a:	or     eax,eax
  40341c:	(bad)  [edi+0x5120cc67]
  403422:	add    BYTE PTR [ebp-0x124b3],cl
  403428:	xor    DWORD PTR [esi+0x34],ebx
  40342b:	call   0xb94f9
  403430:	scas   al,BYTE PTR es:[edi]
  403431:	js     0x40342e
  403433:	dec    edi
  403434:	cdq    
  403435:	mov    edx,0x529effd1
  40343a:	sti    
  40343b:	(bad)  
  40343c:	sbb    al,0xb5
  40343e:	js     0x4033c5
  403440:	sahf   
  403441:	out    dx,eax
  403442:	retf   0xe1ff
  403445:	and    al,0xba
  403447:	cmc    
  403448:	jle    0x403468
  40344a:	xor    al,0xff
  40344c:	add    BYTE PTR [eax],al
  40344e:	cld    
  40344f:	or     BYTE PTR [eax+ebp*8],dh
  403452:	xlat   BYTE PTR ds:[ebx]
  403453:	and    ebx,ecx
  403455:	(bad)  
  403456:	cmp    ch,ch
  403458:	dec    edi
  403459:	push   ebx
  40345a:	pop    esi
  40345b:	cmp    bh,al
  40345d:	call   0xb48d8
  403462:	mov    eax,0xc483cbe8
  403467:	mov    ah,0x3
  403469:	je     0x40345e
  40346b:	das    
  40346c:	inc    eax
  40346d:	hlt    
  40346e:	loope  0x403435
  403470:	push   eax
  403471:	cld    
  403472:	sbb    DWORD PTR [edi],ebx
  403474:	rol    BYTE PTR [eax],0x31
  403477:	xor    bl,al
  403479:	js     0x4034de
  40347b:	jle    0x4034cd
  40347d:	hlt    
  40347e:	or     DWORD PTR [ebx-0x3dceff3a],ebp
  403484:	ret    
  403485:	je     0x4034d6
  403487:	std    
  403488:	retf   0xf975
  40348b:	xchg   esp,eax
  40348c:	add    eax,0x7e85f6f2
  403491:	fmul   DWORD PTR [ecx-0x7d07af72]
  403497:	sbb    eax,0x3de32cdc
  40349c:	retf   0x5cff
  40349f:	inc    ecx
  4034a0:	(bad)  
  4034a2:	repz adc ebp,ecx
  4034a5:	add    edi,DWORD PTR [edx+0x44caed50]
  4034ab:	mov    esp,0xccc90366
  4034b0:	pop    eax
  4034b1:	retf   0x0
  4034b4:	scas   al,BYTE PTR es:[edi]
  4034b5:	mov    dh,0xbc
  4034b7:	(bad)  
  4034b8:	cdq    
  4034b9:	in     eax,0x4f
  4034bb:	retf   0x8a9e
  4034be:	sub    ch,BYTE PTR [esi]
  4034c0:	push   0xe403e1d1
  4034c5:	mov    dl,BYTE PTR ds:0xf138ba32
  4034cb:	fisub  WORD PTR [eax]
  4034cd:	pop    edi
  4034ce:	add    al,BYTE PTR [ecx]
  4034d0:	stos   DWORD PTR es:[edi],eax
  4034d1:	dec    esi
  4034d2:	call   0x698f6b52
  4034d7:	or     dh,BYTE PTR [ecx]
  4034d9:	inc    ecx
  4034da:	hlt    
  4034db:	sub    esi,ebp
  4034dd:	dec    esi
  4034de:	imul   ecx,DWORD PTR [edx],0x83034011
  4034e4:	push   cs
  4034e5:	or     DWORD PTR [ebp-0x21],ebx
  4034e8:	mov    cl,0xf6
  4034ea:	repnz dec edi
  4034ec:	push   ecx
  4034ed:	xchg   ebx,eax
  4034ee:	push   ss
  4034ef:	sti    
  4034f0:	ret    0x62da
  4034f3:	inc    edi
  4034f4:	cmp    DWORD PTR [ebp-0x6ff103c4],esi
  4034fa:	stos   DWORD PTR es:[edi],eax
  4034fb:	add    al,0x31
  4034fd:	xchg   ecx,eax
  4034fe:	mov    cl,0x4
  403500:	lahf   
  403501:	in     eax,dx
  403502:	push   0xc9b54948
  403507:	dec    edi
  403508:	sbb    al,0x94
  40350a:	sbb    eax,0x1d07fe0c
  40350f:	cli    
  403510:	jbe    0x40354a
  403512:	ror    eax,1
  403514:	cmp    eax,DWORD PTR [eax-0x12]
  403517:	add    DWORD PTR [eax],0x0
  40351a:	gs cld 
  40351c:	jge    0x403519
  40351e:	gs or  eax,0xfc71af00
  403524:	(bad)  
  403525:	jmp    0xec2b4817
  40352a:	in     eax,0xc8
  40352c:	pop    edi
  40352d:	xor    bh,dh
  40352f:	adc    BYTE PTR [eax],al
  403531:	mov    esp,0x2583a835
  403536:	xchg   ecx,eax
  403537:	popa   
  403538:	add    DWORD PTR [edx+edi*2],0xffffffe6
  40353c:	inc    eax
  40353d:	jmp    0x6a527574
  403542:	cs mov bh,0x2e
  403545:	test   al,0x32
  403547:	adc    al,0x74
  403549:	lock lods eax,DWORD PTR ds:[esi]
  40354b:	mul    esp
  40354d:	iret   
  40354e:	repz adc eax,DWORD PTR [eax]
  403551:	pushf  
  403552:	xor    ecx,ebp
  403554:	mov    edi,0x8d2abb2
  403559:	jmp    0xa5080ea3
  40355e:	outs   dx,BYTE PTR ds:[esi]
  40355f:	adc    al,0x0
  403561:	jmp    0xf185bc98
  403566:	add    dh,BYTE PTR [ebp+0x13e4f175]
  40356c:	push   esp
  40356e:	imul   esp,esi,0x40
  403571:	jmp    0x32b4aaab
  403576:	or     eax,0x32e9c23e
  40357b:	mov    eax,edx
  40357d:	ins    BYTE PTR es:[edi],dx
  40357e:	add    BYTE PTR [eax],al
  403580:	pop    edi
  403581:	rcl    BYTE PTR [eax+0x43],0x4d
  403585:	(bad)  
  403586:	call   esp
  403588:	out    dx,eax
  403589:	in     eax,0x40
  40358b:	jmp    0xd0b4aa95
  403590:	icebp  
  403591:	dec    esi
  403592:	in     al,0xe8
  403594:	xor    dl,BYTE PTR [eax+eax*1]
  403597:	mov    ?,WORD PTR [edi-0x44]
  40359a:	pop    DWORD PTR [eax]
  40359c:	adc    eax,0x5c75ffd8
  4035a1:	cmp    al,0x45
  4035a3:	in     al,dx
  4035a4:	dec    ebx
  4035a5:	dec    esi
  4035a6:	or     al,0x0
  4035a8:	les    edi,FWORD PTR [ecx+0xf6845c6]
  4035ae:	add    BYTE PTR [eax],al
  4035b0:	enter  0x7d7,0xc7
  4035b4:	test   eax,esp
  4035b6:	add    BYTE PTR [eax],al
  4035b8:	cwde   
  4035b9:	adc    BYTE PTR [edx+0x0],ch
  4035bc:	adc    BYTE PTR [eax],0x6a
  4035bf:	adc    BYTE PTR ds:0x7250e3f6,cl
  4035c5:	adc    bh,bh
  4035c7:	jne    0x40360d
  4035c9:	int3   
  4035ca:	adc    eax,0x515efd
  4035cf:	or     ecx,DWORD PTR [eax+0x45]
  4035d2:	add    DWORD PTR [ebx+0xb],eax
  4035d5:	dec    esi
  4035d6:	hlt    
  4035d7:	add    ah,al
  4035d9:	mov    eax,0xd96475fe
  4035de:	call   0xc3:0x8b1048c1
  4035e5:	add    bl,al
  4035e7:	jns    0x4035ab
  4035e9:	or     BYTE PTR [eax-0x1b],bl
  4035ec:	mov    ch,ah
  4035ee:	dec    edi
  4035ef:	bound  ecx,QWORD PTR [eax]
  4035f1:	call   0x4104ba
  4035f6:	or     BYTE PTR [eax],al
  4035f8:	call   0x1c3e9d
  4035fd:	push   eax
  4035fe:	out    dx,eax
  4035ff:	inc    ebp
  403600:	or     BYTE PTR [eax+0x0],dl
  403603:	jp     0x4035c6
  403605:	add    BYTE PTR [eax],cl
  403607:	add    cl,cl
  403609:	ret    0x1814
  40360c:	push   ebp
  40360d:	mov    ebx,DWORD PTR [edi+edx*4-0x68c4033c]
  403614:	jge    0x40361e
  403616:	xor    DWORD PTR [ebp+0x7d1a0750],edi
  40361c:	sub    ecx,ecx
  40361e:	repz rol DWORD PTR [ebx],0x2b
  403622:	cli    
  403623:	pop    es
  403624:	add    al,0x6a
  403626:	xor    DWORD PTR [edi],edx
  403628:	add    al,0x6a
  40362a:	xor    DWORD PTR [edi],edx
  40362c:	(bad)  
  40362d:	(bad)  
  40362e:	cmp    al,0xa5
  403630:	pop    ecx
  403631:	add    BYTE PTR [ebx-0x43],cl
  403634:	fcmovnb st,st(4)
  403636:	lock mov ebp,0xc9710b03
  40363c:	adc    cl,BYTE PTR [ecx+0x75c758ec]
  403642:	popf   
  403643:	inc    ebp
  403644:	cs lock xchg esi,eax
  403647:	jmp    0x1905:0xbffa
  40364e:	jnp    0x403628
  403650:	sbb    edi,DWORD PTR [ebp-0x7781ffa7]
  403656:	(bad)  
  403657:	push   ebx
  403658:	or     ecx,DWORD PTR [edx]
  40365a:	(bad)  
  40365b:	jne    0x403696
  40365d:	xchg   edi,eax
  40365e:	add    ebp,DWORD PTR [edx+0x31]
  403661:	add    eax,0xbd31c16d
  403666:	cli    
  403667:	mov    edi,0xe832b4dc
  40366c:	sub    BYTE PTR [ebp-0x29e5003a],ch
  403672:	jp     0x403637
  403674:	fisub  DWORD PTR [ebx-0x3f]
  403677:	add    al,0x31
  403679:	lock jp 0x403668
  40367c:	mov    dl,0x78
  40367e:	xlat   BYTE PTR ds:[ebx]
  40367f:	push   eax
  403680:	or     BYTE PTR [edx+esi*1],0x57
  403684:	xchg   DWORD PTR [esi],esp
  403686:	inc    eax
  403687:	or     al,0xa4
  403689:	xor    al,0x83
  40368b:	add    BYTE PTR [ecx],dh
  40368d:	mov    ebp,0x13ec1478
  403692:	jmp    0x7254679a
  403697:	stos   DWORD PTR es:[edi],eax
  403698:	stos   BYTE PTR es:[edi],al
  403699:	fld    TBYTE PTR [eax+0x249d37db]
  40369f:	fdivr  DWORD PTR [edx-0x27fd0ed0]
  4036a5:	(bad)  
  4036a7:	xor    DWORD PTR [edx-0x35e5494a],0xffffff96
  4036ae:	jb     0x4036bb
  4036b0:	add    BYTE PTR [eax],al
  4036b2:	inc    ebx
  4036b3:	and    ch,dl
  4036b5:	retf   0x5379
  4036b8:	jmp    0x2a3f67c0
  4036bd:	add    ch,BYTE PTR [ecx-0x47285b4e]
  4036c3:	dec    edx
  4036c4:	add    DWORD PTR [ecx+0x24],edi
  4036c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c8:	es std 
  4036ca:	xor    edi,esi
  4036cc:	stos   DWORD PTR es:[edi],eax
  4036cd:	pop    esi
  4036ce:	jbe    0x403729
  4036d0:	in     eax,0x7c
  4036d2:	(bad)  
  4036d4:	push   ss
  4036d5:	mov    esi,0xa71f1bf7
  4036da:	mov    ebx,0x3d3d2e8b
  4036df:	sub    dh,BYTE PTR [ebp+0x7cb34111]
  4036e5:	xlat   BYTE PTR ds:[ebx]
  4036e6:	pop    esi
  4036e7:	sub    cl,dh
  4036e9:	js     0x4036d7
  4036eb:	mov    ds:0x1424db99,eax
  4036f0:	jmp    0xedac7bf8
  4036f5:	add    esi,DWORD PTR [ecx]
  4036f7:	adc    al,0x72
  4036f9:	inc    edi
  4036fa:	and    DWORD PTR [edi+0x4e8e268c],esp
  403700:	xor    BYTE PTR [ecx],ch
  403702:	mov    ebx,ebx
  403704:	stos   DWORD PTR es:[edi],eax
  403705:	clc    
  403706:	push   ds
  403707:	dec    ecx
  403708:	jb     0x4036e2
  40370a:	mov    dl,0xd8
  40370c:	add    BYTE PTR [ebp+0x1a50495f],dh
  403712:	inc    edx
  403713:	inc    esi
  403714:	mov    ebx,DWORD PTR [eax+eax*1]
  403717:	add    cl,bh
  403719:	sahf   
  40371a:	jge    0x40370d
  40371c:	jns    0x403775
  40371e:	adc    BYTE PTR [eax+0x2e],ah
  403721:	mov    al,0x8b
  403723:	out    0x69,al
  403725:	push   ecx
  403726:	add    al,0x72
  403728:	and    al,0x1c
  40372a:	mov    edx,DWORD PTR [esi]
  40372c:	fstp   DWORD PTR [esi-0xa074507]
  403732:	cli    
  403733:	mov    edx,0xee849ff8
  403738:	push   0x78
  40373a:	push   0x36
  40373c:	xor    BYTE PTR [edx],bl
  40373e:	shr    DWORD PTR [ecx],0xac
  403741:	push   ss
  403742:	ret    
  403743:	bound  edi,QWORD PTR [eax-0x1b]
  403746:	clc    
  403747:	or     ch,BYTE PTR [ebp-0x1b]
  40374a:	clc    
  40374b:	ins    BYTE PTR es:[edi],dx
  40374c:	and    DWORD PTR [ecx],ecx
  40374e:	push   esi
  40374f:	jle    0x40371d
  403751:	mov    esp,0xd4869703
  403756:	ret    0x31f5
  403759:	les    ecx,FWORD PTR [ebx+0x23ad2021]
  40375f:	adc    eax,DWORD PTR [eax-0x53]
  403762:	lea    ebx,[ebp+0x5c]
  403765:	into   
  403766:	jo     0x403731
  403768:	ds adc eax,0xd373f14e
  40376e:	adc    edx,ebp
  403770:	mov    BYTE PTR [ebp-0xa854506],bl
  403776:	clc    
  403777:	sbb    ch,BYTE PTR [ebp-0x61]
  40377a:	pushf  
  40377b:	inc    BYTE PTR [eax]
  40377d:	add    BYTE PTR [edx+eiz*8-0x43],bl
  403781:	test   al,0x31
  403783:	push   edx
  403784:	or     al,0xa8
  403786:	icebp  
  403787:	or     DWORD PTR [ebx],eax
  403789:	add    cl,dl
  40378b:	sub    edi,ecx
  40378d:	xor    esi,edx
  40378f:	repz cli 
  403791:	xor    eax,edx
  403793:	sub    DWORD PTR [edi+eax*1-0xa845779],eax
  40379a:	or     ebp,edi
  40379c:	xadd   eax,ecx
  40379f:	scas   eax,DWORD PTR es:[edi]
  4037a0:	add    al,bl
  4037a2:	push   ebx
  4037a3:	fdiv   QWORD PTR [ebx]
  4037a5:	stc    
  4037a6:	sti    
  4037a7:	fdiv   QWORD PTR [ebx]
  4037a9:	stc    
  4037aa:	gs inc ecx
  4037ac:	pop    ss
  4037ad:	sub    cl,BYTE PTR [esi+0x2e03472f]
  4037b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b4:	rol    dl,0xe4
  4037b7:	adc    edx,eax
  4037b9:	mov    edx,DWORD PTR [eax+0x4]
  4037bc:	sti    
  4037bd:	and    edx,DWORD PTR [edx+0x4]
  4037c0:	sti    
  4037c1:	lea    edx,[eax+ebp*4]
  4037c4:	adc    al,BYTE PTR [esi+0x48]
  4037c7:	nop
  4037c8:	add    ecx,DWORD PTR [esi-0x70]
  4037cb:	aad    0xc1
  4037cd:	adc    DWORD PTR [ebx-0x74057496],ecx
  4037d3:	fsub   QWORD PTR [ebx]
  4037d5:	stc    
  4037d6:	mov    ebx,esp
  4037d8:	lea    ebx,[edi+esi*1+0x15469515]
  4037df:	adc    al,0x5e
  4037e1:	sbb    al,0x0
  4037e3:	add    BYTE PTR [ecx],bl
  4037e5:	aam    0x16
  4037e7:	add    esp,DWORD PTR [ecx]
  4037e9:	sub    al,0xf9
  4037eb:	xor    esi,DWORD PTR [edx]
  4037ed:	hlt    
  4037ee:	cli    
  4037ef:	xor    esi,DWORD PTR [edx]
  4037f1:	sub    al,BYTE PTR [edi+eax*1+0x69803d20]
  4037f8:	pop    ebx
  4037f9:	out    dx,al
  4037fa:	pop    ds
  4037fb:	ror    DWORD PTR [eax-0x3c3cfce4],0x70
  403802:	xor    edi,ecx
  403804:	xor    DWORD PTR [edx],ebx
  403806:	mov    esp,0x98512833
  40380b:	pop    ss
  40380c:	into   
  40380d:	outs   dx,BYTE PTR ds:[esi]
  40380e:	dec    eax
  40380f:	mov    esi,DWORD PTR [edx]
  403811:	pop    es
  403812:	call   0x6fa2bd7
  403817:	sar    BYTE PTR [edx+0x52faf765],1
  40381d:	jae    0x403816
  40381f:	cli    
  403820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403821:	inc    ecx
  403822:	adc    esi,DWORD PTR [ecx+0x3c3868a]
  403828:	ja     0x4037ff
  40382a:	(bad)
  40382e:	int    0x8b
  403830:	fld    TBYTE PTR [edx-0x45]
  403833:	and    ecx,eax
  403835:	push   0xffffffbb
  403837:	lea    esp,[ebp+0x5dd781de]
  40383d:	and    al,0x7
  40383f:	pop    esi
  403840:	add    eax,0x3216c6fc
  403845:	in     al,0x8e
  403847:	stc    
  403848:	add    BYTE PTR [eax],al
  40384a:	bound  eax,QWORD PTR [ebx-0x19]
  40384d:	cli    
  40384e:	bound  edx,QWORD PTR [ebx-0x6f]
  403851:	test   BYTE PTR [esi],ch
  403853:	sbb    edx,DWORD PTR ds:0x49ba1a90
  403859:	xor    BYTE PTR [eax-0x3],dh
  40385c:	or     al,BYTE PTR [ebx]
  40385e:	jb     0x403882
  403860:	mov    edi,0xbbda7833
  403865:	xor    ebp,DWORD PTR [eax+0x38]
  403868:	cwde   
  403869:	pop    ss
  40386a:	ret    0x9b8c
  40386d:	std    
  40386e:	xor    cl,BYTE PTR [edi-0x3e8c3f09]
  403874:	push   es
  403875:	sar    BYTE PTR [edx+0x12faf6a5],1
  40387b:	mov    ds:0x14acfaf6,eax
  403880:	jne    0x403894
  403882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403883:	push   ebx
  403884:	pusha  
  403885:	push   0x32
  403887:	pop    esi
  403888:	adc    ebp,eax
  40388a:	lock add al,0xea
  40388d:	int    0xaa
  40388f:	test   eax,0xad52bbfa
  403894:	cli    
  403895:	mov    ebx,0xe4d68fbc
  40389a:	cs push 0xf05f0720
  4038a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038a1:	(bad)  
  4038a2:	pop    ds
  4038a3:	adc    eax,eax
  4038a5:	mov    gs,eax
  4038a7:	loop   0x40383a
  4038a9:	out    0xe8,al
  4038ab:	loop   0x40383c
  4038ad:	nop
  4038ae:	add    BYTE PTR [eax],al
  4038b0:	mov    ch,0x16
  4038b2:	or     ebp,ecx
  4038b4:	xor    al,0xa6
  4038b6:	jmp    0x3208:0xa9d53549
  4038bd:	shl    DWORD PTR [edx-0x42],cl
  4038c0:	add    ch,BYTE PTR [edx+ecx*1+0x6cab02bd]
  4038c7:	xchg   edi,eax
  4038c8:	inc    esi
  4038c9:	push   esp
  4038ca:	call   0x701b:0xb7127143
  4038d1:	shl    eax,1
  4038d3:	push   es
  4038d4:	sbb    DWORD PTR [edx-0xd7709bf],0xa07ef631
  4038de:	pop    ebp
  4038df:	adc    ah,al
  4038e1:	dec    ecx
  4038e2:	(bad)  
  4038e3:	jmp    0xc50d971b
  4038e8:	jo     0x403907
  4038ea:	jmp    0x12bc:0xdaa9bacd
  4038f1:	lods   al,BYTE PTR ds:[esi]
  4038f2:	mov    edx,0xde8fa4bd
  4038f7:	ins    DWORD PTR es:[edi],dx
  4038f8:	jbe    0x40395f
  4038fa:	add    BYTE PTR [eax],al
  4038fc:	das    
  4038fd:	push   cs
  4038fe:	shr    DWORD PTR [edx],0x26
  403901:	adc    ebx,ecx
  403903:	jb     0x40397f
  403905:	loop   0x403901
  403907:	or     ch,bh
  403909:	loope  0x403903
  40390b:	fs mov ecx,0x21f95d15
  403911:	enter  0x2f03,0x0
  403915:	add    BYTE PTR [ecx],bh
  403917:	rol    eax,cl
  403919:	in     al,0x35
  40391b:	ror    DWORD PTR [ebx+0x23a5fcb2],1
  403921:	mov    al,0x4
  403923:	stos   DWORD PTR es:[edi],eax
  403924:	lea    edi,[ebp+0x18]
  403927:	inc    ecx
  403928:	adc    al,0x25
  40392a:	aaa    
  40392b:	adc    DWORD PTR [esi-0x3f],edx
  40392e:	repz ror BYTE PTR [ecx],cl
  403931:	jmp    0xf194:0xbaf89a02
  403938:	cli    
  403939:	mov    edx,0xe68c9f8a
  40393e:	mov    bl,0xb6
  403940:	mov    eax,ds:0x3c5e3491
  403945:	sub    dl,dh
  403947:	push   ds
  403948:	add    esi,DWORD PTR [ebx]
  40394a:	mov    esp,0x8c5033aa
  40394f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403950:	xor    edx,DWORD PTR [ebx-0x52]
  403953:	nop
  403954:	pop    ds
  403955:	xor    esp,edx
  403957:	shl    edi,0xea
  40395a:	adc    BYTE PTR [ecx+eax*8],al
  40395d:	sub    ch,BYTE PTR [ecx]
  40395f:	adc    ecx,ebx
  403961:	bound  edi,QWORD PTR [edx-0x4b35051f]
  403967:	loope  0x403961
  403969:	ins    BYTE PTR es:[edi],dx
  40396a:	mov    ecx,0x9224e615
  40396f:	repz add ah,BYTE PTR [edi+0xc0d456]
  403976:	inc    ebp
  403977:	sbb    bl,al
  403979:	mov    eax,DWORD PTR [eax]
  40397b:	add    BYTE PTR [ebx],dh
  40397d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397e:	mul    DWORD PTR [ebx]
  403980:	inc    ecx
  403981:	test   al,0xfa
  403983:	(bad)  
  403984:	in     al,0xa
  403986:	(bad)  
  403987:	pop    es
  403988:	pop    ss
  403989:	xlat   BYTE PTR ds:[ebx]
  40398a:	add    edx,DWORD PTR [esi+0x50]
  40398d:	rol    edx,1
  40398f:	or     DWORD PTR [ebx],ebx
  403991:	ror    DWORD PTR [ebx+0x236e3bf8],0xfb
  403998:	sbb    ebp,DWORD PTR [ecx-0x73]
  40399b:	mov    WORD PTR [edi],ds
  40399d:	pushf  
  40399e:	or     eax,0x4e17c4d5
  4039a3:	or     al,0xc9
  4039a5:	ror    DWORD PTR [esi],1
  4039a7:	add    eax,edx
  4039a9:	lahf   
  4039aa:	cli    
  4039ab:	xor    edx,DWORD PTR [ecx-0x3dcc0849]
  4039b1:	popf   
  4039b2:	pushf  
  4039b3:	pop    ds
  4039b4:	pop    ebp
  4039b5:	add    eax,0x32cb455a
  4039ba:	and    cl,al
  4039bc:	fwait
  4039bd:	add    al,0x3
  4039bf:	fst    DWORD PTR [ebx+0x6a]
  4039c2:	xor    edi,ebx
  4039c4:	jmp    0x403a34
  4039c6:	xor    edi,ecx
  4039c8:	cmp    eax,0x1050795
  4039cd:	js     0x403978
  4039cf:	add    edx,esi
  4039d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d2:	rol    al,0x95
  4039d5:	pop    ss
  4039d6:	ret    
  4039d7:	mov    esi,ebx
  4039d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039da:	mul    DWORD PTR [ebx]
  4039dc:	icebp  
  4039dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039de:	cli    
  4039df:	lea    eax,[eax]
  4039e1:	add    ah,ah
  4039e3:	or     edi,eax
  4039e5:	mov    ds:0x56036d3f,eax
  4039ea:	adc    cl,0xc2
  4039ed:	or     DWORD PTR [ebx-0x40],ebx
  4039f0:	mov    edi,eax
  4039f2:	xor    edx,ecx
  4039f4:	mov    ebp,0xbbc95a23
  4039f9:	lea    esp,[ebp-0x21fd255b]
  4039ff:	xchg   ebp,eax
  403a00:	add    al,0x4e
  403a02:	and    eax,0x320ec1fc
  403a07:	icebp  
  403a08:	mov    edi,edx
  403a0a:	add    dh,BYTE PTR [ebx+eiz*8-0x6e489d09]
  403a11:	pushf  
  403a12:	inc    esi
  403a13:	aaa    
  403a14:	push   eax
  403a15:	sub    ch,BYTE PTR [esi+edi*4+0x7ef0305d]
  403a1c:	sbb    BYTE PTR [ebx],al
  403a1e:	call   0xb73f749
  403a23:	scas   eax,DWORD PTR es:[edi]
  403a24:	mov    edx,0x41b2b58d
  403a29:	cmp    ebx,edi
  403a2b:	jb     0x403a30
  403a2d:	inc    esi
  403a2e:	inc    ebp
  403a2f:	jl     0x4039f5
  403a31:	add    al,0x32
  403a33:	jle    0x4039c0
  403a35:	sti    
  403a36:	and    al,BYTE PTR [ebx+esi*8+0x1749a4f7]
  403a3d:	add    edi,0x5f0386ac
  403a43:	ffree  st(4)
  403a45:	ret    0x0
  403a48:	sub    bh,BYTE PTR [esi+0xeb98bd3]
  403a4e:	mov    ebx,0x9038ab33
  403a53:	rcpps  xmm3,xmm4
  403a56:	mov    al,ds:0xef8b326d
  403a5b:	shl    BYTE PTR [eax-0x33],0x2
  403a5f:	retf   0x57ba
  403a62:	repz test DWORD PTR [edx-0x1c],0xc91e9c90
  403a6a:	sti    
  403a6b:	in     al,0x74
  403a6d:	adc    al,0xea
  403a6f:	pop    ebp
  403a70:	sub    ebp,edx
  403a72:	sub    dl,BYTE PTR [edi]
  403a74:	xor    cl,ch
  403a76:	bound  edi,QWORD PTR [ebp-0x452551de]
  403a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7d:	nop
  403a7e:	out    dx,al
  403a7f:	inc    edi
  403a80:	pop    ebx
  403a81:	push   0x45
  403a83:	add    ebp,edi
  403a85:	movaps xmm0,xmm4
  403a88:	xor    eax,0x3a8b2a17
  403a8d:	out    0xdf,eax
  403a8f:	repnz es cdq 
  403a92:	jne    0x403aaa
  403a94:	fcomp  st(2)
  403a96:	mov    bh,0x4a
  403a98:	xor    al,BYTE PTR [edx-0x7]
  403a9b:	(bad)  
  403a9c:	repz push ds
  403a9e:	jmp    0x42ba:0xfaabbad3
  403aa5:	scas   al,BYTE PTR es:[edi]
  403aa6:	fs (bad) 
  403aa8:	cs xor al,0x22
  403aab:	jnp    0x403aad
  403aad:	add    bh,bh
  403aaf:	push   ss
  403ab0:	aaa    
  403ab1:	and    al,dh
  403ab3:	aam    0xf9
  403ab5:	add    bh,bl
  403ab7:	sahf   
  403ab8:	xchg   ebx,eax
  403ab9:	repnz out 0xe6,al
  403abc:	(bad)  
  403abd:	nop
  403abe:	mov    ch,0xa
  403ac0:	stc    
  403ac1:	jg     0x403a51
  403ac3:	imul   ebp,edx,0xaad5195d
  403ac9:	push   ss
  403aca:	xor    cl,ch
  403acc:	bound  edi,QWORD PTR [edx+eax*1-0x4344e552]
  403ad3:	(bad)  
  403ad4:	out    0xc5,al
  403ad6:	daa    
  403ad7:	pop    DWORD PTR [ecx]
  403ad9:	add    esi,edi
  403adb:	fbld   TBYTE PTR [edi]
  403add:	ret    
  403ade:	sub    eax,0x8a8a2a17
  403ae3:	out    0x3f,al
  403ae5:	bnd jle 0x403a80
  403ae8:	add    BYTE PTR [ebp+0x27],bl
  403aeb:	scas   al,BYTE PTR es:[edi]
  403aec:	daa    
  403aed:	mov    al,cl
  403aef:	push   ss
  403af0:	push   ss
  403af1:	sub    BYTE PTR [eax+0x1e],dh
  403af4:	add    edi,DWORD PTR [ecx]
  403af6:	mov    ebx,0x631233ab
  403afb:	lods   al,BYTE PTR ds:[esi]
  403afc:	lea    ebx,[ebp+0x27]
  403aff:	xchg   ecx,eax
  403b00:	xor    BYTE PTR [esi],dl
  403b02:	pushw  ss
  403b04:	dec    esi
  403b05:	in     eax,dx
  403b06:	ins    DWORD PTR es:[edi],dx
  403b07:	aam    0x10
  403b09:	jmp    0xe67a:0xbafa9e68
  403b10:	clc    
  403b11:	je     0x403b13
  403b13:	add    cl,dl
  403b15:	or     DWORD PTR ds:0x310bafc,eax
  403b1b:	aaa    
  403b1c:	cmp    eax,0x31f6c3d3
  403b21:	retf   
  403b22:	mov    eax,eax
  403b24:	add    BYTE PTR [ebx+esi*1+0x790b6c2],ch
  403b2b:	lock loop 0x403aee
  403b2e:	fldl2e 
  403b30:	ins    BYTE PTR es:[edi],dx
  403b31:	lock shr BYTE PTR [ecx+0x72c31539],0xa8
  403b39:	in     eax,0xf8
  403b3b:	ficomp DWORD PTR [edx-0x70096b69]
  403b41:	mov    ebx,ebx
  403b43:	(bad)  
  403b44:	xor    BYTE PTR [edx+0x30],al
  403b47:	test   al,0xf3
  403b49:	sbb    eax,0xaca89903
  403b4e:	xor    esi,DWORD PTR [edx-0x40]
  403b51:	stos   DWORD PTR es:[edi],eax
  403b52:	lea    esi,[ebp+0x3c]
  403b55:	lods   al,BYTE PTR ds:[esi]
  403b56:	jl     0x403ae3
  403b58:	inc    esp
  403b59:	adc    eax,0xd372154e
  403b5e:	adc    dl,ch
  403b60:	push   0x8b00fa9d
  403b65:	ins    DWORD PTR es:[edi],dx
  403b66:	xor    edi,ecx
  403b68:	adc    eax,0x9e651f74
  403b6d:	cmp    esp,eax
  403b6f:	add    esp,DWORD PTR [esi+0x6fc3c11d]
  403b75:	adc    al,0xd9
  403b77:	mov    edi,0x67470000
  403b7c:	(bad)  
  403b7d:	(bad)  
  403b7e:	jnp    0x403beb
  403b80:	or     edi,ebx
  403b82:	jnp    0x403bf2
  403b84:	lea    eax,[edi+ebx*2+0x3c292251]
  403b8b:	adc    al,0x6
  403b8d:	ror    DWORD PTR [eax],0x12
  403b90:	add    eax,ebx
  403b92:	pop    es
  403b93:	addr16 (bad) 
  403b95:	call   DWORD PTR [edi]
  403b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b98:	clc    
  403b99:	or     edx,DWORD PTR [eax]
  403b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b9c:	cli    
  403b9d:	lea    ebx,[eax+eax*1+0x5332ff97]
  403ba4:	add    edx,DWORD PTR [esi+0x14]
  403ba7:	(bad)  
  403ba8:	ret    0x1b0a
  403bab:	lds    edi,FWORD PTR [edi-0x983801]
  403bb1:	xor    eax,ebx
  403bb3:	sbb    edi,edx
  403bb5:	xor    edx,DWORD PTR [eax+0x6f0f8c99]
  403bbb:	mov    ah,0x93
  403bbd:	stos   DWORD PTR es:[edi],eax
  403bbe:	retf   
  403bbf:	push   esi
  403bc0:	cmp    cl,al
  403bc2:	mov    DWORD PTR [edi],edx
  403bc4:	add    ecx,edx
  403bc6:	ja     0x403c30
  403bc8:	(bad)  
  403bc9:	inc    DWORD PTR [edi-0x5c]
  403bcc:	test   DWORD PTR [ebx],0x8df9a441
  403bd2:	or     BYTE PTR fs:[ecx],bh
  403bd5:	mov    al,ds:0x5e03692b
  403bda:	pushf  
  403bdb:	aad    0xc3
  403bdd:	adc    eax,0xbe310000
  403be2:	fidivr DWORD PTR [edi-0x43a66a]
  403be8:	inc    edx
  403be9:	push   ebp
  403bea:	or     bl,bh
  403bec:	inc    edx
  403bed:	push   esp
  403bee:	mov    es,WORD PTR [esi+esi*1+0xc5b59fe]
  403bf5:	mov    esi,0xfa703045
  403bfa:	add    al,0x3
  403bfc:	jb     0x403c47
  403bfe:	mov    esp,0xf0015eff
  403c03:	clc    
  403c04:	sub    al,BYTE PTR [ebx]
  403c06:	lock cli 
  403c08:	mov    esp,0x75921446
  403c0d:	mov    dh,0x8c
  403c0f:	add    esp,edi
  403c11:	scas   al,BYTE PTR es:[edi]
  403c12:	ret    0x2bc2
  403c15:	mov    esi,0xaf2ebfd3
  403c1a:	mov    ebx,0xfb262ff
  403c1f:	cli    
  403c20:	(bad)  
  403c21:	lds    ecx,FWORD PTR [ecx-0x4fa7d974]
  403c27:	out    dx,eax
  403c28:	push   cs
  403c29:	mov    ebx,0x7cf02849
  403c2e:	or     eax,DWORD PTR [ebx]
  403c30:	jmp    0x403c50
  403c32:	mov    ebx,0xf776f6ff
  403c37:	idiv   DWORD PTR [edx]
  403c39:	je     0x403c32
  403c3b:	stc    
  403c3c:	mov    ah,0x29
  403c3e:	sbb    edx,ecx
  403c40:	jl     0x403c7b
  403c42:	add    DWORD PTR [ebx],0xb1770000
  403c48:	(bad)
  403c4c:	fdivr  QWORD PTR [edi-0x44d93a]
  403c52:	add    ah,BYTE PTR [ebx]
  403c54:	psubq  mm0,QWORD PTR [edx]
  403c57:	and    al,0x89
  403c59:	test   BYTE PTR [esi],dh
  403c5b:	adc    al,0xb6
  403c5d:	cmp    ecx,ebx
  403c5f:	aaa    
  403c60:	jmp    0x3202:0x29d55141
  403c67:	ror    DWORD PTR [esi+0x46a78ebb],cl
  403c6d:	test   DWORD PTR [ecx+0x7bf7411b],0x91135d99
  403c77:	scas   al,BYTE PTR es:[edi]
  403c78:	std    
  403c79:	mov    ecx,0xc4e53e32
  403c7e:	jae    0x403c9a
  403c80:	jmp    0x56bb:0x16a79ed3
  403c87:	jecxz  0x403c9a
  403c89:	cmovnp esp,ebx
  403c8c:	add    BYTE PTR [ecx+0x46d517b5],cl
  403c92:	xor    BYTE PTR [ebx-0x16],dh
  403c95:	dec    ecx
  403c96:	sbb    ebp,edx
  403c98:	sub    BYTE PTR [ebx],cl
  403c9a:	xor    bl,dl
  403c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c9d:	mov    edx,0xf6dea726
  403ca2:	es sbb edx,eax
  403ca5:	neg    BYTE PTR [eax]
  403ca7:	cdq    
  403ca8:	ins    DWORD PTR es:[edi],dx
  403ca9:	sbb    al,BYTE PTR [eax]
  403cab:	add    al,dl
  403cad:	add    al,0xf1
  403caf:	dec    ecx
  403cb0:	xor    al,BYTE PTR [esi-0xb]
  403cb3:	(bad)  
  403cb4:	repnz add dl,ch
  403cb7:	fdiv   QWORD PTR [esi-0x1145515a]
  403cbd:	loop   0x403c61
  403cbf:	push   cs
  403cc0:	jmp    0x6b0e:0xb5889fe2
  403cc7:	cmp    DWORD PTR [edx+0x2141ea9f],eax
  403ccd:	aad    0xa9
  403ccf:	add    DWORD PTR [edx],esi
  403cd1:	sar    DWORD PTR [esi],cl
  403cd3:	mov    edx,0x7600a6be
  403cd8:	mov    edi,0xa7710bab
  403cdd:	test   eax,0xe1437d8d
  403ce2:	icebp  
  403ce3:	and    ebx,DWORD PTR [eax]
  403ce5:	adc    edx,DWORD PTR [esi+0x5]
  403ce8:	ins    BYTE PTR es:[edi],dx
  403ce9:	ror    DWORD PTR [edx],1
  403ceb:	jmp    0xa6cb:0x46ff6662
  403cf2:	xor    eax,DWORD PTR [edx+0x2f]
  403cf5:	stos   BYTE PTR es:[edi],al
  403cf6:	xor    esi,DWORD PTR [ecx]
  403cf8:	test   eax,0x84720f97
  403cfd:	mov    esi,0x1bf8ea2a
  403d02:	shr    DWORD PTR [eax],0x2b
  403d05:	adc    ecx,edx
  403d07:	push   esi
  403d08:	fwait
  403d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d0a:	dec    DWORD PTR [esi]
  403d0c:	inc    edi
  403d0d:	sahf   
  403d0e:	or     eax,DWORD PTR [eax]
  403d10:	add    BYTE PTR [eax],al
  403d12:	aas    
  403d13:	lods   al,BYTE PTR ds:[esi]
  403d14:	lea    ebx,[ebp+0x1b]
  403d17:	test   ebx,edx
  403d19:	outs   dx,DWORD PTR ds:[esi]
  403d1a:	xchg   DWORD PTR [edx],edx
  403d1c:	pop    esi
  403d1d:	vpsrlw ymm2,ymm1,XMMWORD PTR ds:0x7d9a0bea
  403d25:	icebp  
  403d26:	xor    ecx,DWORD PTR ds:0x13313601
  403d2c:	dec    edi
  403d2d:	loope  0x403d62
  403d2f:	cmp    eax,0xa86ec60c
  403d34:	lea    esi,[edi]
  403d36:	jne    0x403d4d
  403d38:	mov    esi,esp
  403d3a:	mov    ah,0xa5
  403d3c:	call   DWORD PTR [ebx]
  403d3e:	mov    cl,BYTE PTR [ecx+0x58]
  403d41:	inc    esi
  403d42:	mov    ebx,ebx
  403d44:	ret    0x32ed
  403d47:	aas    
  403d48:	mov    eax,DWORD PTR [ebp+0x36f8d0ac]
  403d4e:	arpl   WORD PTR [ecx-0x39],ax
  403d51:	add    BYTE PTR ds:0xc800006c,dl
  403d57:	adc    edi,edi
  403d59:	jne    0x403d27
  403d5b:	pushf  
  403d5c:	inc    ebp
  403d5d:	clc    
  403d5e:	xlat   BYTE PTR ds:[ebx]
  403d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d60:	pop    edi
  403d61:	fst    DWORD PTR gs:[ecx]
  403d64:	add    DWORD PTR [ebx],esp
  403d66:	aad    0xf4
  403d68:	mov    BYTE PTR ds:0x410664,0x11
  403d6f:	aaa    
  403d70:	int    0xef
  403d72:	push   edi
  403d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d74:	add    BYTE PTR gs:[bx+si],al
  403d78:	leave  
  403d79:	adc    esi,edi
  403d7b:	fadd   QWORD PTR [edx]
  403d7d:	mov    bh,al
  403d7f:	add    eax,0x4106ac
  403d84:	(bad)  
  403d85:	push   ebp
  403d86:	xor    dl,BYTE PTR [eax]
  403d88:	pop    ss
  403d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d8a:	outs   dx,DWORD PTR ds:[esi]
  403d8b:	mov    DWORD PTR gs:[ecx],edx
  403d8e:	lock loope 0x403d9b
  403d91:	iret   
  403d92:	jmp    0x403db0
  403d94:	ret    
  403d95:	in     al,0x7
  403d97:	add    edx,DWORD PTR [ebp-0x4fbf95a3]
  403d9d:	cmc    
  403d9e:	fs inc ecx
  403da0:	sbb    BYTE PTR [ecx-0x18],al
  403da3:	arpl   WORD PTR [ecx],ax
  403da5:	ins    BYTE PTR es:[edi],dx
  403da6:	inc    DWORD PTR [ebx-0x17bf93ab]
  403dac:	int3   
  403dad:	adc    BYTE PTR [eax],al
  403daf:	add    BYTE PTR [ebx+0x4b40f7ee],bl
  403db5:	retf   0x5d8b
  403db8:	lock pop ebx
  403dbb:	inc    eax
  403dbc:	xchg   ebx,eax
  403dbd:	out    0x7,al
  403dbf:	add    edx,DWORD PTR ds:0x4468536c
  403dc5:	add    eax,0x78180041
  403dca:	cmp    al,0xe9
  403dcc:	xor    DWORD PTR [esi-0x48],edi
  403dcf:	add    DWORD PTR [edi+edx*4-0x3f],ebp
  403dd3:	cmp    DWORD PTR ds:0xb1004318,0x39
  403dda:	lods   al,BYTE PTR ds:[esi]
  403ddb:	aaa    
  403ddc:	add    BYTE PTR [eax],al
  403dde:	aas    
  403ddf:	ret    0xeb84
  403de2:	cmp    DWORD PTR [edi-0x792d7ff3],ebx
  403de8:	push   ds
  403de9:	inc    ecx
  403dea:	xor    DWORD PTR [ebx+0x529f7844],edi
  403df0:	mov    WORD PTR [eax],es
  403df2:	xor    DWORD PTR [ebx+0x4d86c87c],edi
  403df8:	mov    eax,0xd5f33eb
  403dfd:	adc    dl,0x8e
  403e00:	push   ds
  403e01:	inc    ecx
  403e02:	xor    DWORD PTR [ebx+0x215f7844],edi
  403e08:	ds or  al,0x98
  403e0b:	mov    ds:0xca310003,al
  403e10:	aad    0xf7
  403e12:	push   eax
  403e13:	(bad)
  403e16:	jnp    0x403e71
  403e18:	jae    0x403e7f
  403e1a:	lock mov edx,0x9785158a
  403e20:	inc    edx
  403e21:	add    BYTE PTR [ecx],bl
  403e23:	xchg   BYTE PTR [ebx],al
  403e25:	add    BYTE PTR [ecx],dh
  403e27:	mov    WORD PTR [eiz*2+0x158aad70],fs
  403e2e:	lea    edx,[eax+0x45]
  403e31:	add    BYTE PTR [edx+0x70652bc0],bh
  403e37:	lods   eax,DWORD PTR ds:[esi]
  403e38:	push   es
  403e39:	enter  0x672e,0x7
  403e3d:	leave  
  403e3e:	ror    BYTE PTR [ebp+0x21],cl
  403e41:	inc    ecx
  403e42:	add    BYTE PTR [eax],al
  403e44:	xor    DWORD PTR [ecx+edx*1],esi
  403e47:	fs dec esp
  403e49:	adc    al,0x28
  403e4b:	add    al,0xa8
  403e4d:	adc    DWORD PTR [ecx],edx
  403e4f:	and    DWORD PTR [eax+0x14],esi
  403e52:	dec    eax
  403e53:	sub    BYTE PTR [ebp+edx*2-0x17],dl
  403e57:	mov    bl,BYTE PTR [esp]
  403e5a:	or     al,0x45
  403e5c:	xor    DWORD PTR [ebx],edx
  403e5e:	mov    cl,0x7
  403e60:	jmp    0x403ed9
  403e62:	add    eax,0x6013f021
  403e67:	adc    DWORD PTR [ecx],esp
  403e69:	cmp    DWORD PTR [eax+0x5e080b03],ebp
  403e6f:	xor    DWORD PTR [ecx+0x2c],eax
  403e72:	leave  
  403e73:	and    al,dh
  403e75:	adc    eax,DWORD PTR [ecx-0x6f]
  403e78:	cdq    
  403e79:	mov    ds:0x42df5b46,eax
  403e7e:	xor    dl,al
  403e80:	and    eax,0x5d8a9c14
  403e85:	xchg   edi,eax
  403e86:	and    eax,0x269ca8bc
  403e8b:	mov    bh,0x5e
  403e8d:	(bad)  
  403e8e:	in     eax,0xc8
  403e90:	popf   
  403e91:	cmp    DWORD PTR [eax+0x1c08ba03],ebp
  403e97:	jl     0x403e65
  403e99:	push   esp
  403e9a:	jmp    0x3353a7a5
  403e9f:	lea    ebp,ds:0x70213dd1
  403ea5:	adc    al,0x60
  403ea7:	adc    BYTE PTR [eax],al
  403ea9:	add    ah,dh
  403eab:	pop    ebx
  403eac:	dec    esp
  403ead:	inc    ebp
  403eae:	xor    DWORD PTR [ebp+0x54],edx
  403eb1:	(bad)  
  403eb3:	rcl    esi,cl
  403eb5:	mov    dh,0xe
  403eb7:	(bad)  
  403eb8:	in     eax,0x88
  403eba:	fnstcw WORD PTR [ecx]
  403ebc:	sub    BYTE PTR [edx+ebp*4],al
  403ebf:	pop    es
  403ec0:	ins    BYTE PTR es:[edi],dx
  403ec1:	(bad)  
  403ec2:	(bad)  
  403ec3:	push   ebp
  403ec4:	add    cl,ch
  403ec6:	jecxz  0x403ede
  403ec8:	lea    ebp,ds:0xda005547
  403ece:	cs xchg ecx,eax
  403ed0:	je     0x403ed9
  403ed2:	ins    BYTE PTR es:[edi],dx
  403ed3:	adc    al,0x33
  403ed5:	stos   DWORD PTR es:[edi],eax
  403ed6:	in     eax,0xd3
  403ed8:	mov    ebp,esp
  403eda:	mov    ecx,0x35286667
  403edf:	push   ebp
  403ee0:	jne    0x403e79
  403ee2:	stos   DWORD PTR es:[edi],eax
  403ee3:	add    BYTE PTR [eax+0xc],ah
  403ee6:	hlt    
  403ee7:	adc    ecx,DWORD PTR [ebx+0x413946b4]
  403eed:	jmp    0xc4a81f9d
  403ef2:	in     eax,dx
  403ef3:	adc    edi,edi
  403ef5:	sbb    al,0x59
  403ef7:	cmp    DWORD PTR [ecx-0x17],eax
  403efa:	scas   eax,DWORD PTR es:[edi]
  403efb:	pop    eax
  403efc:	cld    
  403efd:	inc    esi
  403efe:	xor    DWORD PTR [edx],0x9332a865
  403f04:	inc    ebp
  403f05:	xor    ebp,ebp
  403f07:	scas   eax,DWORD PTR es:[edi]
  403f08:	jmp    FWORD PTR [esi]
  403f0a:	lahf   
  403f0b:	mov    ss,esi
  403f0d:	jb     0x403f0f
  403f0f:	add    BYTE PTR [edi-0x6b352d56],bl
  403f15:	not    BYTE PTR [ebp+edx*1+0x3b]
  403f19:	(bad)  
  403f1a:	add    esp,ebp
  403f1c:	mov    ecx,0x32a865d7
  403f21:	pop    ss
  403f22:	inc    ebp
  403f23:	add    DWORD PTR [ecx],esi
  403f25:	jge    0x403fa0
  403f27:	imul   ecx,DWORD PTR [eax-0x53128a5f],0x57
  403f2e:	clc    
  403f2f:	jo     0x403f97
  403f31:	mov    al,ds:0x8d3fa7c1
  403f36:	(bad)  
  403f37:	(bad)  
  403f38:	rcl    bl,0xc3
  403f3b:	in     al,0x31
  403f3d:	mov    esp,0xcc3d0041
  403f42:	mov    ecx,0xff67b7ec
  403f47:	mov    ebx,DWORD PTR [esi+0xd33d78b]
  403f4d:	pop    esp
  403f4e:	xor    eax,edx
  403f50:	retf   
  403f51:	mov    eax,ds:0x552e148c
  403f56:	add    BYTE PTR [ebx],al
  403f58:	sbb    eax,0xb3a10560
  403f5d:	mov    ebp,0x69bdff6e
  403f62:	pop    DWORD PTR [ebp-0x50]
  403f65:	lea    edi,[ebp-0x4]
  403f68:	fldenv [edx+0x1e]
  403f6b:	mov    edx,DWORD PTR [esi]
  403f6d:	mov    esi,ebx
  403f6f:	ror    DWORD PTR [ebx-0x5f],0x2
  403f73:	fadd   DWORD PTR [eax]
  403f75:	add    cl,cl
  403f77:	repnz iret 
  403f79:	mov    ecx,0xffff66f4
  403f7e:	adc    ebx,DWORD PTR [edi-0x75]
  403f81:	push   ebp
  403f82:	hlt    
  403f83:	or     al,BYTE PTR [ebp-0x4]
  403f86:	sub    ecx,edi
  403f88:	and    eax,esi
  403f8a:	push   ebx
  403f8b:	rol    DWORD PTR [ebx],cl
  403f8d:	add    al,0x5
  403f8f:	hlt    
  403f90:	gs inc ecx
  403f92:	dec    eax
  403f93:	adc    al,0x45
  403f95:	clc    
  403f96:	dec    ebp
  403f97:	leave  
  403f98:	mov    esp,0x7566d71b
  403f9d:	cld    
  403f9e:	out    0xe0,eax
  403fa0:	test   DWORD PTR [ecx-0x393e964b],0x8bfe8c56
  403faa:	sub    edx,esi
  403fac:	ret    
  403fad:	add    eax,0x7541bd1b
  403fb2:	jecxz  0x403fd1
  403fb4:	in     al,dx
  403fb5:	push   edi
  403fb7:	addr16 mov eax,esi
  403fba:	xor    DWORD PTR [esi],esi
  403fbc:	int3   
  403fbd:	xor    ebp,DWORD PTR [edi+ecx*8-0x10]
  403fc1:	shl    DWORD PTR [edx],0xaf
  403fc4:	xchg   BYTE PTR [edi+ecx*4+0x740303ec],dh
  403fcb:	arpl   si,di
  403fcd:	aad    0xf0
  403fcf:	dec    esp
  403fd0:	retf   0x64ff
  403fd3:	ja     0x403f59
  403fd5:	inc    ebp
  403fd6:	fldenv [ebx]
  403fd8:	ss cld 
  403fda:	add    BYTE PTR [eax],al
  403fdc:	lock jo 0x403ff4
  403fdf:	mov    eax,edi
  403fe1:	xor    eax,0xaff2c1b0
  403fe6:	add    al,bl
  403fe8:	jo     0x403f92
  403fea:	rol    DWORD PTR [ecx],cl
  403fec:	dec    esp
  403fed:	or     ebx,DWORD PTR [edi]
  403fef:	inc    ecx
  403ff0:	xor    DWORD PTR [esi+ebp*8+0x36c1463],ebp
  403ff7:	add    DWORD PTR [ebx+eax*8+0x1e],edx
  403ffb:	inc    ecx
  403ffc:	xor    DWORD PTR [esi],esi
  403ffe:	ds cld 
  404000:	xor    BYTE PTR [eax-0x550f9ad9],bh
  404006:	mov    BYTE PTR [ebp+0x79],al
  404009:	stos   DWORD PTR es:[edi],eax
  40400a:	(bad)  
  40400b:	outs   dx,DWORD PTR ds:[esi]
  40400c:	aam    0x6b
  40400e:	add    ecx,ecx
  404010:	jb     0x403f99
  404012:	mov    ah,ch
  404014:	pop    esi
  404015:	jg     0x404022
  404017:	call   0x4373fc
  40401c:	mov    dl,0x2
  40401e:	mov    ah,0x75
  404020:	movlps xmm5,QWORD PTR [esi]
  404023:	or     BYTE PTR [ecx-0x7c],cl
  404026:	jp     0x404028
  404028:	xor    DWORD PTR [esi-0x1ac98a3d],esp
  40402e:	mov    bl,0xff
  404030:	es scas eax,DWORD PTR es:[edi]
  404032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404033:	adc    ebp,DWORD PTR [edx-0x3effd6ec]
  404039:	or     ebp,DWORD PTR [ecx-0x29a3c9c7]
  40403f:	mov    bl,0x0
  404041:	add    BYTE PTR [esi],al
  404043:	mov    al,ds:0x14aa08c2
  404048:	jb     0x40404e
  40404a:	call   0x84442621
  40404f:	mov    eax,ebp
  404051:	xchg   ebp,ebp
  404053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404054:	sbb    dh,bh
  404056:	sti    
  404057:	sub    ch,bh
  404059:	sbb    eax,0x9beb2a30
  40405e:	or     ebx,DWORD PTR [ebp-0x17]
  404061:	add    esi,DWORD PTR [edx+0x33398e9c]
  404067:	stos   DWORD PTR es:[edi],eax
  404068:	or     edi,DWORD PTR [edi-0x27]
  40406b:	sub    bl,cl
  40406d:	xor    ah,0xa3
  404070:	sbb    DWORD PTR [ecx+edi*4+0x17b36eb6],ebx
  404077:	xlat   BYTE PTR ds:[ebx]
  404078:	lods   al,BYTE PTR ds:[esi]
  404079:	mov    bl,0x33
  40407b:	adc    al,0x72
  40407d:	inc    ecx
  40407e:	and    DWORD PTR [esi+0x51b82a24],edx
  404084:	pop    ebx
  404085:	xchg   esp,edi
  404087:	psubsw mm6,QWORD PTR [edi]
  40408a:	sub    al,0x8b
  40408c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408d:	call   FWORD PTR [ebx-0x1]
  404090:	imul   esi,DWORD PTR [ecx],0xfdb41435
  404096:	mov    bl,0x21
  404098:	icebp  
  404099:	add    ebx,esp
  40409b:	pop    ss
  40409c:	adc    ch,cl
  40409e:	pop    ebx
  40409f:	movhps xmm7,QWORD PTR [ecx]
  4040a2:	cmp    DWORD PTR [ebp+edi*2+0x3e0000b2],ebp
  4040a9:	lahf   
  4040aa:	push   0xffffffac
  4040ac:	ss sub ebx,ebp
  4040af:	sahf   
  4040b0:	inc    ebp
  4040b1:	lea    eax,[eax]
  4040b3:	lods   al,BYTE PTR ds:[esi]
  4040b4:	fisubr WORD PTR [ecx]
  4040b6:	adc    BYTE PTR [eax+ebp*2-0x5c],bl
  4040ba:	push   eax
  4040bb:	cmp    dh,BYTE PTR [ebp+0x32e9b8b7]
  4040c1:	xchg   ebx,eax
  4040c2:	clc    
  4040c3:	(bad)  
  4040c4:	dec    ecx
  4040c5:	or     al,0x53
  4040c7:	shl    ebx,0x5b
  4040ca:	add    cl,ch
  4040cc:	(bad)  
  4040cd:	mov    ecx,0xcd7faa8b
  4040d2:	ret    0x32e5
  4040d5:	dec    ecx
  4040d6:	mov    edi,DWORD PTR [ebp+0x24834787]
  4040dc:	cmp    eax,0x5af27514
  4040e1:	adc    eax,0x3f32e900
  4040e6:	pop    ebx
  4040e7:	mov    al,ds:0x72000ff4
  4040ec:	add    DWORD PTR [eax],edx
  4040ee:	mov    ebx,0x1432e9
  4040f3:	add    ebp,DWORD PTR ds:0xfbd9759f
  4040f9:	sahf   
  4040fa:	jne    0x4040ed
  4040fc:	mov    edx,0x32e9b863
  404101:	cdq    
  404102:	rcl    bh,0x1e
  404105:	adc    edi,eax
  404107:	add    al,ch
  404109:	add    eax,DWORD PTR [ebx+0x220000c4]
  40410f:	adc    al,0x75
  404111:	out    0xdf,al
  404113:	adc    al,0x0
  404115:	jmp    0x4242ec4c
  40411a:	ins    BYTE PTR es:[edi],dx
  40411b:	mov    al,bl
  40411d:	(bad)  
  40411e:	out    0xcc,eax
  404120:	ret    0x32ed
  404123:	dec    ecx
  404124:	mov    eax,DWORD PTR ds:0xff4d7ad
  40412a:	sbb    DWORD PTR [esi-0x614aff01],0xffffff8e
  404131:	test   DWORD PTR [eiz*2-0x73a80001],esp
  404138:	clc    
  404139:	dec    BYTE PTR [edi]
  40413b:	add    BYTE PTR fs:[eax],al
  40413e:	or     BYTE PTR [edx],dl
  404140:	mov    DWORD PTR [ebp-0x9d14],0x1219
  40414a:	pop    ebp
  40414b:	xchg   ebp,eax
  40414c:	add    bh,bh
  40414e:	out    dx,eax
  40414f:	arpl   di,di
  404151:	jne    0x404133
  404153:	xchg   esp,eax
  404154:	add    BYTE PTR [ebp-0x1a3ab],cl
  40415a:	(bad)
  40415e:	inc    edx
  40415f:	sbb    BYTE PTR [ebp-0x9d537b],cl
  404165:	dec    DWORD PTR [eax]
  404167:	(bad)  
  404168:	jmp    edi
  40416a:	sbb    al,0x30
  40416c:	add    BYTE PTR [eax],al
  40416e:	dec    ebx
  40416f:	jo     0x404170
  404171:	je     0x404173
  404173:	add    BYTE PTR [eax+eiz*4-0x576b8a41],dl
  40417a:	mov    edi,0x12995eb
  40417f:	add    BYTE PTR [eax-0x7f3d36ef],cl
  404185:	adc    DWORD PTR [ebp-0x75],edx
  404188:	in     al,dx
  404189:	xchg   esi,eax
  40418a:	(bad)  
  40418b:	cld    
  40418c:	mov    ebx,0xd26adac0
  404191:	fs jne 0x40419c
  404194:	add    BYTE PTR ds:0x9f1fffff,bl
  40419a:	mov    edi,0x59ffc474
  40419f:	push   DWORD PTR [ebp+0x2f7fe799]
  4041a5:	arpl   di,di
  4041a7:	or     esi,DWORD PTR [ecx]
  4041a9:	jmp    0x4041e1
  4041ab:	add    cl,BYTE PTR [edx+0x77]
  4041ae:	sbb    eax,0x7eabcb00
  4041b3:	inc    ebp
  4041b4:	cs jnp 0x404167
  4041b7:	jne    0x4041f2
  4041b9:	adc    eax,DWORD PTR [edi]
  4041bb:	mov    eax,0xc086ab31
  4041c0:	xchg   edi,eax
  4041c1:	sti    
  4041c2:	jl     0x404209
  4041c4:	and    eax,0x7cff46f3
  4041c9:	test   eax,0xe7aa0174
  4041ce:	dec    DWORD PTR [edx+0x6a044123]
  4041d4:	xor    BYTE PTR [eax],dh
  4041d6:	inc    esi
  4041d7:	inc    DWORD PTR [eax]
  4041d9:	add    BYTE PTR [ecx-0x21f3c99a],al
  4041df:	clc    
  4041e0:	adc    edi,edi
  4041e2:	pop    esp
  4041e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e4:	fwait
  4041e5:	mov    eax,0x3bb07ded
  4041ea:	ins    BYTE PTR es:[edi],dx
  4041eb:	fwait
  4041ec:	xor    eax,0x86b6ca02
  4041f1:	fstp   TBYTE PTR ds:0xac37c47
  4041f7:	lds    edx,FWORD PTR fs:[ecx+esi*1]
  4041fb:	add    BYTE PTR [ebp-0x14],bh
  4041fe:	mov    al,0x76
  404200:	add    edi,eax
  404202:	xchg   esi,eax
  404203:	xor    eax,0xc06a2b54
  404208:	dec    ebp
  404209:	(bad)  
  40420a:	cld    
  40420b:	mov    dl,0x9b
  40420d:	sbb    BYTE PTR [esi+0x4d],bh
  404210:	mov    al,0xb
  404212:	jno    0x404272
  404214:	sub    BYTE PTR [edx+0xb],ch
  404217:	fidiv  WORD PTR ds:0xb0b05908
  40421d:	call   FWORD PTR [esi-0x4f]
  404220:	ret    
  404221:	jne    0x404256
  404223:	adc    al,0x12
  404225:	pop    eax
  404226:	mov    al,0x1e
  404228:	stc    
  404229:	add    edi,DWORD PTR [ecx]
  40422b:	adc    al,0xe9
  40422d:	cmp    DWORD PTR [esi],esi
  40422f:	pop    esp
  404230:	jmp    0x12dc7930
  404235:	add    al,0xba
  404237:	push   ecx
  404238:	fstp   DWORD PTR ds:0x86644431
  40423e:	add    BYTE PTR [eax],al
  404240:	xor    DWORD PTR [esi+ebp*8+0x5c9b81af],ebx
  404247:	cld    
  404248:	push   ss
  404249:	and    BYTE PTR [esi-0x566ecefc],dl
  40424f:	sub    eax,0x38fdaf33
  404254:	xor    dl,BYTE PTR [edi-0x2e]
  404257:	out    0x7e,eax
  404259:	(bad)  
  40425a:	adc    al,0x0
  40425c:	mov    edx,0x81044306
  404261:	mov    DWORD PTR [esp+eax*1-0x27],esp
  404265:	fwait
  404266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404267:	push   esp
  404268:	into   
  404269:	and    ebp,ebp
  40426b:	scas   al,BYTE PTR es:[edi]
  40426c:	arpl   WORD PTR [ecx+esi*1],ax
  40426f:	fnsave [ebp+0x4]
  404272:	push   0x31
  404274:	and    DWORD PTR [esp+edi*8],edx
  404277:	add    dh,dl
  404279:	scas   al,BYTE PTR es:[edi]
  40427a:	in     eax,0x88
  40427c:	mov    ah,BYTE PTR [eax]
  40427e:	push   eax
  40427f:	jnp    0x4042f3
  404281:	aas    
  404282:	mov    al,ds:0xbc1425c2
  404287:	jp     0x404226
  404289:	xchg   edi,eax
  40428a:	and    eax,0x55e6deac
  40428f:	sbb    dh,BYTE PTR [ecx]
  404291:	inc    ebx
  404292:	dec    esi
  404293:	cmp    DWORD PTR [ecx],ebp
  404295:	lods   al,BYTE PTR ds:[esi]
  404296:	sbb    cl,bl
  404298:	outs   dx,BYTE PTR ds:[esi]
  404299:	fwait
  40429a:	es dec ecx
  40429c:	gs adc al,0x0
  40429f:	jmp    0x94cb56d6
  4042a4:	add    BYTE PTR [eax],al
  4042a6:	pop    edx
  4042a7:	mov    ss,WORD PTR [edx]
  4042a9:	je     0x4042a3
  4042ab:	fwait
  4042ac:	push   eax
  4042ad:	xchg   ebx,eax
  4042ae:	mov    DWORD PTR cs:[ebp+0x15],eax
  4042b2:	in     eax,0x9a
  4042b4:	jne    0x404297
  4042b6:	xchg   DWORD PTR [esi+0xc],eax
  4042b9:	scas   al,BYTE PTR es:[edi]
  4042ba:	mov    ch,0x18
  4042bc:	cld    
  4042bd:	in     al,dx
  4042be:	sub    BYTE PTR [eax],cl
  4042c0:	or     bh,BYTE PTR [ebp+0x18]
  4042c3:	xchg   esi,eax
  4042c4:	jge    0x4042b7
  4042c6:	xor    ah,BYTE PTR [ecx]
  4042c8:	leave  
  4042c9:	sbb    dh,ch
  4042cb:	scas   al,BYTE PTR es:[edi]
  4042cc:	add    eax,0xc096ef72
  4042d1:	jmp    0x4132:0xe5c2cd6f
  4042d8:	mov    edx,ebp
  4042da:	mov    bl,0xcf
  4042dc:	hlt    
  4042dd:	sbb    bh,BYTE PTR [esi+0x2c]
  4042e0:	cwde   
  4042e1:	repz xor dl,BYTE PTR [eax+ebp*8]
  4042e5:	fimul  WORD PTR [esi+0x7970ff9a]
  4042eb:	cwde   
  4042ec:	lea    esp,[ecx+ecx*4]
  4042ef:	inc    ebx
  4042f0:	call   0xffdb2eca
  4042f5:	(bad)  
  4042f7:	sub    eax,0x32ab131e
  4042fc:	add    BYTE PTR [ebx-0x300ebce],al
  404302:	out    0x9a,al
  404304:	jne    0x4042e7
  404306:	mov    edx,0x66fe8f
  40430b:	add    bh,bl
  40430d:	nop
  40430e:	shr    dh,0xae
  404311:	jecxz  0x404313
  404313:	jmp    0x55b5de4a
  404318:	call   0x3d69:0xf700db87
  40431f:	add    dl,dh
  404321:	push   ss
  404322:	add    BYTE PTR [esi+0x4d],dh
  404325:	ja     0x404343
  404327:	add    DWORD PTR [eax+0x16],ecx
  40432a:	push   DWORD PTR [ebp+0x2c]
  40432d:	jg     0x404389
  40432f:	jmp    DWORD PTR [edi]
  404331:	push   0xffffff85
  404333:	rcr    BYTE PTR [edx+edx*8+0x7f1c75ff],0x8d
  40433b:	fnsave [edi]
  40433d:	push   0xffffff8b
  40433f:	push   ebp
  404340:	sbb    al,0x1c
  404342:	adc    ch,BYTE PTR [edx+0x8]
  404345:	(bad)  
  404346:	xor    esp,DWORD PTR [ecx]
  404348:	or     BYTE PTR [esi],dl
  40434a:	push   DWORD PTR [ebp+0x14]
  40434d:	push   0x46e7f475
  404352:	or     al,0xc7
  404354:	dec    ebp
  404355:	push   0x16080000
  40435a:	push   0x554402
  40435f:	call   FWORD PTR ds:0x5e19e864
  404365:	adc    BYTE PTR [eax],al
  404367:	push   ebx
  404368:	rcl    ebp,cl
  40436a:	je     0x4043a2
  40436c:	inc    ebx
  40436d:	push   0x268
  404372:	hlt    
  404373:	push   esi
  404374:	add    al,ch
  404376:	sbb    BYTE PTR [eax+eax*1],bl
  404379:	add    bl,cl
  40437b:	ins    DWORD PTR es:[edi],dx
  40437c:	push   edi
  40437d:	inc    edi
  40437e:	and    eax,edi
  404380:	mov    ecx,0x158994
  404385:	mov    al,0x95
  404387:	arpl   WORD PTR [esi+0x4fcb8],bp
  40438d:	add    BYTE PTR [ebx],ah
  40438f:	aad    0xc6
  404391:	inc    edi
  404392:	out    0xf,eax
  404394:	push   edi
  404395:	push   ebx
  404396:	xor    DWORD PTR [ebx-0x4f],edx
  404399:	mov    ch,0x31
  40439b:	stos   DWORD PTR es:[edi],eax
  40439c:	jp     0x4043e3
  40439e:	imul   esi,DWORD PTR [edx-0x3b],0x4ca86647
  4043a5:	pop    ebx
  4043a6:	leave  
  4043a7:	mov    esp,0xea3140df
  4043ac:	ss cld 
  4043ae:	pop    ecx
  4043af:	(bad)  [esi+0x0]
  4043b2:	xor    DWORD PTR [esi-0x8],ebx
  4043b5:	mov    edi,0xf87866c5
  4043ba:	leave  
  4043bb:	pushf  
  4043bc:	fild   WORD PTR [eax+0x31]
  4043bf:	add    esp,ebp
  4043c1:	mov    bl,0x31
  4043c3:	stos   DWORD PTR es:[edi],eax
  4043c4:	add    al,bh
  4043c6:	xchg   BYTE PTR [edx+0x78],ch
  4043c9:	(bad)  
  4043cb:	adc    eax,DWORD PTR ds:[eax]
  4043ce:	xor    DWORD PTR [ebx-0x2],edi
  4043d1:	icebp  
  4043d2:	xlat   BYTE PTR ds:[ebx]
  4043d3:	jb     0x40436c
  4043d5:	adc    DWORD PTR [eax],eax
  4043d7:	add    BYTE PTR [ecx],dh
  4043d9:	stos   DWORD PTR es:[edi],eax
  4043da:	fadd   st,st(0)
  4043dc:	out    dx,eax
  4043dd:	icebp  
  4043de:	lods   al,BYTE PTR ds:[esi]
  4043df:	add    BYTE PTR [esi-0x1c986402],al
  4043e5:	pop    ecx
  4043e6:	lods   al,BYTE PTR ds:[esi]
  4043e7:	mov    eax,DWORD PTR [ebx+edi*4-0x50a22e08]
  4043ee:	jp     0x4043f2
  4043f0:	fisubr DWORD PTR [eax-0x733f17ad]
  4043f6:	lods   al,BYTE PTR ds:[esi]
  4043f7:	call   FWORD PTR [esi+0x69]
  4043fa:	inc    esp
  4043fb:	jmp    DWORD PTR [edx+ebp*8]
  4043fe:	dec    eax
  4043ff:	jmp    DWORD PTR [edi+edx*1]
  404402:	fwait
  404403:	and    eax,0x83ac1984
  404408:	sbb    al,0x23
  40440a:	add    esi,DWORD PTR [edi+0x2e]
  40440d:	jb     0x404455
  40440f:	clc    
  404410:	xor    DWORD PTR [ecx+ebp*8],edx
  404413:	arpl   WORD PTR [ecx],si
  404415:	cdq    
  404416:	aam    0xab
  404418:	jle    0x404438
  40441a:	pop    ebp
  40441b:	lods   al,BYTE PTR ds:[esi]
  40441c:	cld    
  40441d:	or     eax,DWORD PTR [ecx-0x5c]
  404420:	ins    BYTE PTR es:[edi],dx
  404421:	cwde   
  404422:	inc    esi
  404423:	lods   al,BYTE PTR ds:[esi]
  404424:	fcomp  QWORD PTR [edi-0x678479af]
  40442a:	ss clc 
  40442c:	xchg   esi,eax
  40442d:	push   ds
  40442e:	jmp    0x4043c8
  404430:	sub    cl,BYTE PTR ds:0x8d1e3729
  404436:	mov    ah,0xb7
  404438:	stos   BYTE PTR es:[edi],al
  404439:	add    eax,0x3616
  40443e:	and    eax,0x2eb79499
  404443:	inc    ebx
  404444:	mov    ebp,0xe41cf186
  404449:	push   0x3e91430
  40444e:	stos   BYTE PTR es:[edi],al
  40444f:	inc    ecx
  404450:	cmc    
  404451:	ja     0x404476
  404453:	xchg   edi,eax
  404454:	pop    esp
  404455:	mov    al,0x6
  404457:	inc    ebx
  404458:	icebp  
  404459:	stos   BYTE PTR es:[edi],al
  40445a:	test   BYTE PTR [eax-0x67ec803f],bl
  404460:	into   
  404461:	jg     0x404455
  404463:	aaa    
  404464:	and    bh,BYTE PTR [ebp+0x50e908f3]
  40446a:	stos   BYTE PTR es:[edi],al
  40446b:	test   al,0x6a
  40446d:	shl    BYTE PTR [ecx-0x1420e5c1],0x2c
  404474:	jmp    0x91d80b5c
  404479:	adc    bl,0x97
  40447c:	xchg   esi,eax
  40447d:	jge    0x4044eb
  40447f:	cwde   
  404480:	add    DWORD PTR [ecx+edx*2],eax
  404483:	adc    al,0xe9
  404485:	fwait
  404486:	sub    BYTE PTR [edx+0x51a8ab7e],dh
  40448c:	add    BYTE PTR ds:0xe9201435,bh
  404492:	xor    ch,BYTE PTR [esp+ebp*2-0x766825b5]
  404499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449a:	push   ss
  40449b:	mov    DWORD PTR [ebp+0x29],edi
  40449e:	add    al,0xd8
  4044a0:	(bad)  
  4044a1:	call   0xe37244a6
  4044a6:	mov    edi,0x45cf073a
  4044ab:	sub    DWORD PTR [ecx-0x69],ecx
  4044ae:	(bad)  
  4044af:	jmp    0x2f149627
  4044b4:	cmp    dl,BYTE PTR [eax+eax*1]
  4044b7:	lock mov cs:0x1432feff,eax
  4044be:	call   FWORD PTR [esi+ecx*4-0x25c6ba79]
  4044c5:	and    BYTE PTR [esi+esi*2-0x5b725790],dh
  4044cc:	repnz inc ebx
  4044ce:	push   0x801432e9
  4044d3:	xor    DWORD PTR [edx],0xffffff97
  4044d6:	jne    0x4044c9
  4044d8:	stos   BYTE PTR es:[edi],al
  4044d9:	jno    0x40448f
  4044db:	jmp    0x5e005012
  4044e0:	xor    edx,DWORD PTR [ebx+0x2132b97d]
  4044e6:	add    eax,0x13a8d0
  4044eb:	jmp    0xb6f095e3
  4044f0:	sub    edx,DWORD PTR [eax+eax*1]
  4044f3:	pop    esp
  4044f4:	jno    0x40455a
  4044f6:	push   eax
  4044f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f8:	add    DWORD PTR [eax+0x68],ebx
  4044fb:	jmp    0x64c05932
  404500:	jno    0x4044d6
  404502:	push   eax
  404503:	sbb    DWORD PTR [ecx+0x60],0x0
  40450a:	cwde   
  40450b:	xchg   ebp,eax
  40450c:	mov    edi,0xa9779575
  404511:	add    BYTE PTR [eax+0x44458b12],cl
  404517:	aad    0x0
  404519:	add    ch,bh
  40451b:	jmp    0x4044dc
  40451d:	mov    ecx,0x101c
  404522:	sbb    edx,eax
  404524:	rep stos BYTE PTR es:[edi],al
  404526:	pop    ss
  404527:	push   esp
  404528:	sar    BYTE PTR [eax+ebx*2],0x12
  40452c:	add    bh,bh
  40452e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40452f:	pop    DWORD PTR es:[ebp-0x14]
  404533:	rol    DWORD PTR [ebp-0x2c],1
  404536:	pop    ds
  404537:	or     al,BYTE PTR [eax]
  404539:	add    BYTE PTR [edi],dl
  40453b:	push   esp
  40453c:	lock (bad) 
  40453e:	aas    
  40453f:	adc    al,BYTE PTR [eax]
  404541:	lea    eax,[ebp+0x186a50d2]
  404547:	clc    
  404548:	(bad)  
  404549:	(bad)  
  40454a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454b:	sub    eax,0x116431e8
  404550:	add    BYTE PTR [ebx],cl
  404552:	dec    eax
  404553:	in     eax,0x5
  404555:	sbb    DWORD PTR [ebp+0x1a7500c1],0x79
  40455c:	pusha  
  40455d:	jmp    DWORD PTR [ebp+0x6c]
  404560:	push   DWORD PTR [ebp-0x6c]
  404563:	clc    
  404564:	sbb    ebp,DWORD PTR [ecx+ebx*1]
  404567:	adc    bh,bh
  404569:	jne    0x404517
  40456b:	js     0x404537
  40456d:	mov    bl,0x0
  40456f:	add    al,cl
  404571:	adc    DWORD PTR [ebx-0x4963073c],eax
  404577:	inc    ebp
  404578:	mov    al,ds:0x8f006a40
  40457d:	in     eax,0xfb
  40457f:	call   0x3fac32
  404584:	xor    DWORD PTR [edx-0x6dcc8a3d],esi
  40458a:	out    dx,eax
  40458b:	mov    ah,ch
  40458d:	push   edx
  40458e:	test   eax,0x2583dd75
  404593:	mov    dl,0x31
  404595:	stos   DWORD PTR es:[edi],eax
  404596:	push   ebx
  404597:	inc    DWORD PTR [edi+eiz*8]
  40459a:	test   al,0x75
  40459c:	leave  
  40459d:	inc    ebx
  40459e:	dec    edi
  40459f:	sti    
  4045a0:	jle    0x4045d8
  4045a2:	std    
  4045a3:	mov    edi,0x109ca8fc
  4045a8:	outs   dx,BYTE PTR ds:[esi]
  4045a9:	rcl    BYTE PTR [ebx],0xff
  4045ac:	fcomp  QWORD PTR [esi+0x439975a8]
  4045b2:	out    dx,eax
  4045b3:	cld    
  4045b4:	push   esi
  4045b5:	fidivr WORD PTR [eax+ebx*8+0x4e]
  4045b9:	pusha  
  4045ba:	imul   ebp,eax,0x34
  4045bd:	aaa    
  4045be:	add    al,0x0
  4045c0:	sub    BYTE PTR ds:[edi-0x18],0x4
  4045c5:	or     al,0xa9
  4045c7:	jmp    FWORD PTR [esi]
  4045c9:	and    BYTE PTR [edi-0x18],0x4c
  4045cd:	or     al,0xa9
  4045cf:	call   FWORD PTR [esi]
  4045d1:	and    BYTE PTR [edi+0x340000e8],ah
  4045d7:	or     al,0xa9
  4045d9:	(bad)  
  4045da:	mov    edx,0xf85f4ce9
  4045df:	push   0x2265fff7
  4045e4:	xchg   edi,eax
  4045e5:	sub    ebp,0xffffffbe
  4045e8:	jl     0x40462f
  4045ea:	cmp    eax,0x2f74c3b2
  4045ef:	add    ax,WORD PTR [eax]
  4045f2:	xor    DWORD PTR [ebx+0x5f6cc703],ebp
  4045f8:	add    eax,DWORD PTR [eax]
  4045fa:	xor    DWORD PTR [ebx+0x13c54576],ebp
  404600:	cmp    DWORD PTR [ecx+0x2e9e0844],ebp
  404606:	sub    DWORD PTR [eax+eax*1+0x6a94aeaa],ebp
  40460d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40460f:	adc    edi,ebp
  404611:	adc    BYTE PTR [ebx],cl
  404613:	adc    al,0x7e
  404615:	cs and eax,0x99a7fc95
  40461b:	cmp    eax,0x4386a86f
  404620:	data16 cs jge 0x4045cf
  404624:	cmp    DWORD PTR [ebx-0x454e6b8a],esp
  40462a:	jae    0x404637
  40462c:	jmp    0x6ae8007f
  404631:	mov    edi,0x3e262d5d
  404636:	push   ebp
  404637:	adc    ch,cl
  404639:	and    DWORD PTR [eax],eax
  40463b:	add    BYTE PTR [esi+0x4e],dh
  40463e:	das    
  40463f:	or     DWORD PTR [ecx],esi
  404641:	sub    ch,ch
  404643:	jbe    0x404639
  404645:	xchg   edi,eax
  404646:	mov    ecx,0xe913b11b
  40464b:	add    ebx,DWORD PTR [ecx+0x31030e93]
  404651:	xchg   ebx,eax
  404652:	jl     0x40464f
  404654:	push   ss
  404655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404656:	cmp    al,BYTE PTR [ebx]
  404658:	xor    DWORD PTR [ebp+0x2b],ebx
  40465b:	dec    DWORD PTR [esi]
  40465d:	jmp    0x58f2ddc3
  404662:	xchg   ebp,eax
  404663:	dec    edi
  404664:	bound  ebx,QWORD PTR [ebx+0x24]
  404667:	pop    eax
  404668:	xor    DWORD PTR [ecx+ebp*8],edx
  40466b:	add    esp,DWORD PTR [edx]
  40466d:	outs   dx,DWORD PTR ds:[esi]
  40466e:	inc    ecx
  40466f:	add    al,0x41
  404671:	adc    al,0xe9
  404673:	fwait
  404674:	mov    eax,0xa8a7be74
  404679:	fcos   
  40467b:	test   al,0x2d
  40467d:	adc    al,0x10
  40467f:	jmp    0x89ccc2b6
  404684:	xchg   esi,eax
  404685:	xchg   ebx,eax
  404686:	mov    DWORD PTR [eax*2+0x32f8fffc],esp
  40468d:	adc    al,0xe8
  40468f:	push   cs
  404690:	int    0x93
  404692:	push   DWORD PTR [eax-0x10]
  404695:	iret   
  404696:	(bad)  
  404697:	cld    
  404698:	(bad)  
  404699:	int    0x3c
  40469b:	jmp    0xa9735ad2
  4046a0:	add    BYTE PTR [eax],al
  4046a2:	ret    0xc7be
  4046a5:	lods   al,BYTE PTR ds:[esi]
  4046a6:	mov    esi,0x32e90050
  4046ab:	xchg   ebx,eax
  4046ac:	jne    0x4046d7
  4046ae:	out    0xd8,al
  4046b0:	ror    DWORD PTR [esi+0x20],cl
  4046b3:	int3   
  4046b4:	(bad)  
  4046b5:	lods   al,BYTE PTR ds:[esi]
  4046b6:	mov    ds:0x8e21455b,al
  4046bb:	and    eax,DWORD PTR [eax]
  4046bd:	jmp    0x2f342051
  4046c2:	ds xchg ebx,eax
  4046c4:	push   DWORD PTR [eax+esi*8+0x57]
  4046c8:	push   eax
  4046c9:	xchg   ecx,eax
  4046ca:	xor    dl,BYTE PTR [eax+eax*1]
  4046cd:	imul   ecx,DWORD PTR [ebx+0x14],0x7b2a94ff
  4046d4:	mov    ch,0x3b
  4046d6:	xor    eax,0x61290b14
  4046db:	sbb    al,BYTE PTR [ebx+0x7513fe74]
  4046e1:	in     al,0xa5
  4046e3:	nop
  4046e4:	add    cl,ch
  4046e6:	xor    bl,BYTE PTR [ebx+0x45]
  4046e9:	cdq    
  4046ea:	iret   
  4046eb:	and    al,BYTE PTR [eax]
  4046ed:	jmp    0x39f0205b
  4046f2:	mov    cs,WORD PTR [eax]
  4046f4:	mov    esp,0x188000
  4046f9:	add    BYTE PTR [eax+0xc],cl
  4046fc:	inc    ebp
  4046fd:	les    ebp,FWORD PTR [eax]
  4046ff:	mov    al,0x90
  404701:	mov    dl,0xd8
  404703:	push   ss
  404704:	or     eax,eax
  404706:	add    BYTE PTR [eax],al
  404708:	sbb    eax,0xc8d8e915
  40470d:	push   ss
  40470e:	add    BYTE PTR [ebx+0xc6005d],cl
  404714:	cwde   
  404715:	or     edi,DWORD PTR [ebp-0x3c]
  404718:	icebp  
  404719:	jp     0x40471a
  40471b:	dec    DWORD PTR [eax-0xd0c407b]
  404721:	rol    DWORD PTR [ebp-0x3c],1
  404724:	aam    0x16
  404726:	add    BYTE PTR [eax],al
  404728:	pop    ss
  404729:	inc    esp
  40472a:	mov    eax,0xc7c6cd8f
  40472f:	inc    ebp
  404730:	and    BYTE PTR [edx-0x2ea7fff1],bh
  404736:	inc    ebp
  404737:	hlt    
  404738:	test   DWORD PTR [ecx-0x2c3a0001],0x167250c3
  404742:	push   0x0
  404744:	pop    ss
  404745:	inc    esp
  404746:	mov    esp,0x48ce8
  40474b:	add    BYTE PTR [ebx+0x56],al
  40474e:	je     0x404756
  404750:	fwait
  404751:	cmp    al,0xd4
  404753:	add    BYTE PTR [ebp+0x88ce914],bh
  404759:	push   ss
  40475a:	add    bh,bh
  40475c:	popf   
  40475d:	and    eax,0xba5875ff
  404762:	jne    0x40471c
  404764:	mov    al,0x87
  404766:	sub    al,BYTE PTR [ecx+0x8]
  404769:	mov    ecx,0xbc75
  40476e:	loopne 0x4047cf
  404770:	mov    cl,0x0
  404772:	xor    DWORD PTR [ebx-0x80],edi
  404775:	les    edi,FWORD PTR ds:0xfd456c72
  40477b:	sub    ebx,DWORD PTR [edx]
  40477d:	add    dh,dl
  40477f:	dec    eax
  404780:	(bad)  
  404781:	call   0xffe60b50
  404786:	cmp    bh,BYTE PTR [ebx-0x2635fdd1]
  40478c:	jp     0x4047d3
  40478e:	jge    0x404742
  404790:	das    
  404791:	mov    ah,0x99
  404793:	fsub   QWORD PTR [ebp+0x2fa2a6ff]
  404799:	mov    esp,0x742389
  40479e:	xor    DWORD PTR [ebx],ebp
  4047a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a1:	jne    0x404770
  4047a3:	or     ch,BYTE PTR [edi]
  4047a5:	mov    ah,0x99
  4047a7:	and    eax,0x867effab
  4047ac:	ret    
  4047ad:	jne    0x4047e2
  4047af:	out    0xf2,al
  4047b1:	sub    ah,0x8a
  4047b4:	add    esi,DWORD PTR [ebp+edi*1-0x1e]
  4047b8:	adc    BYTE PTR cs:[esi-0x30],bl
  4047bc:	idiv   esi
  4047be:	fadd   QWORD PTR [esi]
  4047c0:	pushf  
  4047c1:	inc    eax
  4047c2:	dec    eax
  4047c3:	dec    edx
  4047c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c5:	or     esi,DWORD PTR [ecx-0x38]
  4047c8:	add    ebx,ebp
  4047ca:	es push es
  4047cc:	int3   
  4047cd:	or     ebx,DWORD PTR [edx-0x59]
  4047d0:	adc    cl,BYTE PTR [ebp-0x288c0000]
  4047d6:	push   ebx
  4047d7:	call   FWORD PTR [edi+eax*4+0x22e575a4]
  4047de:	or     edi,ebx
  4047e0:	push   ss
  4047e1:	xchg   edx,eax
  4047e2:	js     0x4047bc
  4047e4:	push   cs
  4047e5:	adc    BYTE PTR [edi-0x18],ch
  4047e8:	add    BYTE PTR [esp+eax*1+0x0],cl
  4047ec:	(bad)  
  4047ed:	adc    ebx,DWORD PTR [esp+eax*8+0x9]
  4047f1:	and    edi,DWORD PTR [esi+0x5c90eea4]
  4047f7:	push   0xa4ae1ad9
  4047fc:	ficom  WORD PTR [eax+0x12c96c3c]
  404802:	sahf   
  404803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404804:	into   
  404805:	xchg   esp,eax
  404806:	xor    al,0x58
  404808:	xor    DWORD PTR [eax],ecx
  40480a:	loope  0x4047b0
  40480c:	inc    esp
  40480d:	rcl    BYTE PTR [ecx-0x616f2850],0x78
  404814:	jb     0x404802
  404816:	xor    eax,0xe92373bb
  40481b:	dec    esi
  40481c:	stos   BYTE PTR es:[edi],al
  40481d:	jg     0x404889
  40481f:	mov    edi,0xc8d1e499
  404824:	mov    dl,0xe
  404826:	in     eax,0x3
  404828:	std    
  404829:	loope  0x404894
  40482b:	and    DWORD PTR es:[ebx*8+0x5cd6a43b],edx
  404833:	push   ebx
  404834:	outs   dx,BYTE PTR ds:[esi]
  404835:	push   es
  404836:	in     eax,0x9b
  404838:	add    BYTE PTR [eax],al
  40483a:	pop    ebp
  40483b:	ret    
  40483c:	jmp    0xc193fc44
  404841:	repz push edi
  404843:	push   es
  404844:	in     eax,dx
  404845:	fwait
  404846:	mov    ch,0x69
  404848:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40484a:	mov    eax,0xc4a430d6
  40484f:	(bad)  
  404850:	adc    DWORD PTR [esi-0x7a],esp
  404853:	adc    ebp,ecx
  404855:	clc    
  404856:	out    dx,al
  404857:	or     al,dh
  404859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485a:	pushf  
  40485b:	and    al,0xe
  40485d:	cs sbb ebp,esp
  404860:	add    eax,0xea7c292e
  404865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404866:	push   cs
  404867:	nop
  404868:	add    BYTE PTR [edx-0x6],ah
  40486b:	(bad)  
  40486c:	jne    0x40485b
  40486e:	fwait
  40486f:	mov    dh,0xaf
  404871:	jmp    0xedb5d7a8
  404876:	call   0xc39b:0x92d6d7ec
  40487d:	xor    ch,ah
  40487f:	push   edx
  404880:	or     al,0xe9
  404882:	sbb    DWORD PTR [ebx+0x4f968ec],ebx
  404888:	(bad)  
  404889:	mov    dh,0x92
  40488b:	mov    eax,ds:0x8f933b85
  404890:	(bad)  
  404891:	cmp    DWORD PTR ds:0x32e90115,eax
  404897:	jl     0x4048fc
  404899:	pop    eax
  40489a:	sub    eax,0xaac914
  40489f:	add    BYTE PTR [eax-0x65],bl
  4048a2:	in     al,dx
  4048a3:	push   0x50
  4048a5:	sbb    al,0x0
  4048a7:	cmc    
  4048a8:	xor    edx,DWORD PTR [ebx+0x832d97d]
  4048ae:	sbb    DWORD PTR [esi+0x18],ebp
  4048b1:	sub    bh,bh
  4048b3:	fsubr  QWORD PTR [edx]
  4048b5:	jl     0x404891
  4048b7:	inc    ebx
  4048b8:	xchg   edx,eax
  4048b9:	(bad)  
  4048ba:	(bad)  
  4048bb:	fsub   QWORD PTR [edx-0x72]
  4048be:	jne    0x40489d
  4048c0:	xchg   ebx,eax
  4048c1:	or     DWORD PTR [eax],ecx
  4048c3:	push   ecx
  4048c4:	das    
  4048c5:	imul   edi,edi,0x3e
  4048c8:	jl     0x40491c
  4048ca:	adc    cl,ch
  4048cc:	or     DWORD PTR [ebx+0x1c106aec],ebx
  4048d2:	add    BYTE PTR [ebp-0x12826dca],bl
  4048d8:	xor    cl,BYTE PTR [eax]
  4048da:	push   ss
  4048db:	push   ss
  4048dc:	dec    eax
  4048dd:	and    al,0xff
  4048df:	xchg   esp,eax
  4048e0:	sub    bh,BYTE PTR [esi+ebp*4+0x0]
  4048e4:	push   edx
  4048e5:	mov    bl,0xff
  4048e7:	inc    DWORD PTR [ebp+0x1075ff1f]
  4048ed:	mov    ebx,0xb20fdb05
  4048f2:	leave  
  4048f3:	ret    0x12fc
  4048f6:	push   ebp
  4048f7:	mov    edi,esp
  4048f9:	xchg   ebp,eax
  4048fa:	(bad)  
  4048fb:	lock jmp FWORD PTR [ebx]
  4048fe:	or     al,0xe8
  404900:	movzx  edi,di
  404903:	inc    DWORD PTR [eax]
  404905:	add    BYTE PTR [ecx-0x24],ah
  404908:	or     eax,DWORD PTR [ebx+0x7400240d]
  40490e:	es mov bl,0x75
  404911:	or     al,0xf0
  404913:	pop    ebp
  404914:	loop   0x404915
  404916:	(bad)  
  404917:	sbb    eax,0xa55a74c0
  40491c:	inc    ebp
  40491d:	lock push 0xb00c75b3
  404923:	cwde   
  404924:	jecxz  0x404925
  404926:	scas   eax,DWORD PTR es:[edi]
  404927:	sbb    eax,0x97ca74c0
  40492c:	jge    0x40492a
  40492e:	cwde   
  40492f:	adc    dl,BYTE PTR [eax]
  404931:	add    BYTE PTR [ebx+0x72],bh
  404934:	(bad)  
  404935:	jne    0x404943
  404937:	mov    dl,0x75
  404939:	clc    
  40493a:	add    BYTE PTR [esi+eiz*8-0x3fe20001],cl
  404941:	jne    0x40499c
  404943:	mov    cl,0x75
  404945:	adc    bh,ch
  404947:	sub    edi,esp
  404949:	inc    DWORD PTR [ebp+0x5075ffaa]
  40494f:	mov    edx,0xb20fff4f
  404954:	lea    eax,[ebp+0x18]
  404957:	inc    ebx
  404958:	call   0xfff2853d
  40495d:	push   DWORD PTR [ecx]
  40495f:	mov    al,0xf
  404961:	call   0xffe28a2e
  404966:	call   0x4058a4
  40496b:	add    BYTE PTR [edx+eax*1-0x51],ah
  40496f:	sub    ebp,0xffffff8b
  404972:	mov    eax,ds:0xb1132d75
  404977:	loop   0x40496f
  404979:	jbe    0x404906
  40497b:	inc    ebp
  40497c:	cmp    eax,0x310c1efa
  404981:	out    dx,eax
  404982:	dec    eax
  404983:	jmp    DWORD PTR [edi+ebp*2-0x55]
  404987:	pop    edx
  404988:	rcl    DWORD PTR [esi-0x5f],cl
  40498b:	or     esi,ecx
  40498d:	inc    edi
  40498e:	aad    0x8c
  404990:	ins    BYTE PTR es:[edi],dx
  404991:	retf   
  404992:	xor    al,0xff
  404994:	inc    esp
  404995:	outs   dx,DWORD PTR ds:[esi]
  404996:	stos   DWORD PTR es:[edi],eax
  404997:	adc    edx,edx
  404999:	mov    dh,0xa1
  40499b:	or     esi,DWORD PTR [ecx+0x27]
  40499e:	in     eax,0x80
  4049a0:	and    al,0xa7
  4049a2:	add    al,0x0
  4049a4:	inc    ecx
  4049a5:	jnp    0x4049bb
  4049a7:	adc    DWORD PTR [esi+0x4fef390],edx
  4049ad:	pop    fs
  4049af:	jne    0x40493a
  4049b1:	push   es
  4049b2:	pop    ss
  4049b3:	or     BYTE PTR [ecx+0x76ffa210],cl
  4049b9:	or     BYTE PTR [edi-0x10],al
  4049bc:	add    ebx,esp
  4049be:	and    ebx,esp
  4049c0:	data16 out 0xa0,al
  4049c3:	jne    0x4049f2
  4049c5:	ror    DWORD PTR [eax-0x23],cl
  4049c8:	push   esi
  4049c9:	(bad)  
  4049ca:	retf   0x3dc2
  4049cd:	jnp    0x404a05
  4049cf:	mov    eax,DWORD PTR [eax]
  4049d1:	add    BYTE PTR [ebp-0x6],dl
  4049d4:	(bad)  
  4049d5:	lock loop 0x4049e9
  4049d8:	mov    ebp,0xf113bcff
  4049dd:	stos   DWORD PTR es:[edi],eax
  4049de:	mov    eax,0xb8a11e71
  4049e3:	(bad)  
  4049e4:	loopne 0x40496a
  4049e6:	pushf  
  4049e7:	sbb    al,0xe9
  4049e9:	pop    ss
  4049ea:	outs   dx,DWORD PTR ds:[esi]
  4049eb:	lea    edi,[ebx+ecx*1+0x19]
  4049ef:	xchg   DWORD PTR [eax],ecx
  4049f1:	mov    eax,ds:0x18291906
  4049f6:	inc    ebx
  4049f7:	lahf   
  4049f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f9:	xchg   ebx,eax
  4049fa:	popa   
  4049fb:	lea    ebx,[esp+ecx*1-0x27]
  4049ff:	mov    edi,0x18e6a0cb
  404a04:	test   eax,0x4c931317
  404a09:	mov    al,ds:0x3d91431
  404a0e:	inc    edx
  404a0f:	and    al,0xbe
  404a11:	push   ss
  404a12:	lds    ecx,FWORD PTR [esp+edi*1-0x38b33664]
  404a19:	mov    al,ds:0x17a918b6
  404a1e:	xor    cl,dl
  404a20:	imul   eax,DWORD PTR [esi-0x5f],0xffffffe3
  404a24:	cmp    ch,0x93
  404a27:	mov    WORD PTR [esi-0x6ee3e360],cs
  404a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a2e:	ins    DWORD PTR es:[edi],dx
  404a2f:	mov    WORD PTR [esi-0x74],?
  404a32:	jb     0x404a1c
  404a34:	lahf   
  404a35:	lds    eax,FWORD PTR [eax]
  404a37:	add    BYTE PTR ds:0x858d1414,dh
  404a3d:	xchg   edx,eax
  404a3e:	sub    eax,0x5e8c6f57
  404a43:	enter  0xcbac,0x57
  404a47:	mov    al,ds:0x3e9135e
  404a4c:	xor    DWORD PTR [ecx+0x543a0fac],ebx
  404a52:	mov    ch,0x6
  404a54:	mov    cl,0x4b
  404a56:	add    cl,ch
  404a58:	daa    
  404a59:	pop    ss
  404a5a:	jmp    0x547e10
  404a5f:	es inc edi
  404a61:	sbb    al,ch
  404a63:	dec    eax
  404a64:	(bad)  [ebx+0x1f2e2ff]
  404a6a:	jno    0xe98182e7
  404a70:	rol    DWORD PTR [ecx],1
  404a72:	or     al,0x11
  404a74:	adc    BYTE PTR [edi+edi*8-0xa],ch
  404a78:	retf   0x6819
  404a7b:	sub    eax,DWORD PTR [esi]
  404a7d:	aad    0xff
  404a7f:	in     eax,0x48
  404a81:	sbb    al,ch
  404a83:	push   cs
  404a84:	lea    ecx,[ebx-0x33579f01]
  404a8a:	dec    dh
  404a8c:	mov    dh,0xfc
  404a8e:	cmp    eax,0x8d1432e8
  404a93:	fs repz mov bh,bh
  404a97:	mov    dh,0x5
  404a99:	jl     0x404a42
  404a9b:	lea    eax,[eax]
  404a9d:	add    BYTE PTR [esi+0x736c8d8b],dl
  404aa3:	mov    bh,bh
  404aa5:	sahf   
  404aa6:	pop    ebp
  404aa7:	mov    esi,DWORD PTR [ebp-0x7440af]
  404aad:	adc    edx,0xbde900b9
  404ab3:	xchg   ecx,eax
  404ab4:	mov    esp,0x408ba67f
  404ab9:	out    0xb6,al
  404abb:	cs add ecx,ebp
  404abe:	xor    bl,BYTE PTR [ecx-0x7430d46b]
  404ac4:	call   DWORD PTR [esi+0x33]
  404ac7:	and    al,0x0
  404ac9:	jmp    0x6ac46600
  404ace:	sub    eax,0xc5000014
  404ad3:	aad    0x2b
  404ad5:	push   eax
  404ad6:	pusha  
  404ad7:	out    dx,eax
  404ad8:	sub    eax,DWORD PTR [ecx+0x48]
  404adb:	mov    edi,0x1748adbc
  404ae0:	or     eax,eax
  404ae2:	int    0x1b
  404ae4:	jmp    0x5763b5
  404ae9:	lea    ebx,[ebp+0x27fffe56]
  404aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404af0:	inc    edx
  404af1:	sub    al,0xa8
  404af3:	ds mov edx,0xe816d92c
  404af9:	lahf   
  404afa:	jne    0x404b0c
  404afc:	add    BYTE PTR [ebx],cl
  404afe:	dec    eax
  404aff:	sub    eax,0xe905
  404b04:	(bad)  
  404b05:	push   ss
  404b06:	add    BYTE PTR [eax],al
  404b08:	pop    es
  404b09:	sub    al,0xc
  404b0b:	call   0x3ffc15
  404b10:	rcl    DWORD PTR [esi+0x75],cl
  404b13:	punpcklbw mm4,DWORD PTR [eax+ebp*1+0x41]
  404b18:	fsubr  DWORD PTR [ecx+0xcf00c75]
  404b1e:	(bad)  
  404b20:	xchg   DWORD PTR [ebp-0x566795f6],edi
  404b26:	jne    0x404b34
  404b28:	rcr    BYTE PTR [eax-0x5c380021],0x95
  404b2f:	ret    0xa9a6
  404b32:	dec    DWORD PTR [ebp+0x5051842a]
  404b38:	mov    al,ds:0x7ffdfc4
  404b3d:	inc    edi
  404b3e:	push   DWORD PTR [ebp+0x60]
  404b41:	test   eax,0x2bd71475
  404b46:	adc    BYTE PTR [eax+0x7],dl
  404b49:	sub    al,0x8
  404b4b:	call   0xffdd3881
  404b50:	push   esi
  404b51:	aam    0xc5
  404b53:	fisttp DWORD PTR [esi-0x2f]
  404b56:	test   eax,0xefbeb460
  404b5b:	mov    BYTE PTR [eax+ecx*1-0x2c90063],dh
  404b62:	pop    ds
  404b63:	adc    BYTE PTR [ecx],dh
  404b65:	test   al,0x1
  404b67:	jmp    0x404b69
  404b69:	add    BYTE PTR [ebx+0x2a],al
  404b6c:	sbb    BYTE PTR [eax],dl
  404b6e:	push   ds
  404b6f:	jmp    0x1b5749ca
  404b74:	stos   DWORD PTR es:[edi],eax
  404b75:	inc    edx
  404b76:	fistp  QWORD PTR [ebx+0x3]
  404b79:	or     esi,ecx
  404b7b:	(bad)  
  404b7c:	fbld   TBYTE PTR [edi-0x13]
  404b7f:	push   ebx
  404b80:	inc    esp
  404b81:	add    dh,dh
  404b83:	add    BYTE PTR [edi],cl
  404b85:	call   0xffdd9daf
  404b8a:	out    0xa0,al
  404b8c:	pop    eax
  404b8d:	(bad)  
  404b8e:	fisub  WORD PTR [edx+0x34]
  404b91:	call   0xffde05eb
  404b96:	popa   
  404b97:	(bad)  
  404b98:	push   ds
  404b99:	sbb    BYTE PTR [ecx],dh
  404b9b:	aas    
  404b9c:	adc    bh,bh
  404b9e:	inc    esp
  404b9f:	addr16 xor edi,edi
  404ba2:	cmp    al,0x73
  404ba4:	pushf  
  404ba5:	push   ebp
  404ba6:	dec    ecx
  404ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba8:	adc    bh,bh
  404baa:	sbb    al,0x7f
  404bac:	xor    edi,edi
  404bae:	and    al,0x73
  404bb0:	stos   DWORD PTR es:[edi],eax
  404bb1:	push   esp
  404bb2:	xchg   esp,eax
  404bb3:	call   0xff9d:0xb614e89d
  404bba:	mov    ah,0xf0
  404bbc:	sar    esi,0x7e
  404bbf:	add    dh,BYTE PTR [edi+edi*8]
  404bc2:	mov    esp,0x6eff9e37
  404bc7:	adc    al,0x51
  404bc9:	mov    ecx,0x86e91495
  404bce:	add    BYTE PTR [eax],al
  404bd0:	jno    0x404beb
  404bd2:	ins    BYTE PTR es:[edi],dx
  404bd3:	xchg   ebx,eax
  404bd4:	push   edi
  404bd5:	mov    DWORD PTR [esi-0x63],ecx
  404bd8:	test   al,cl
  404bda:	inc    edi
  404bdb:	popf   
  404bdc:	inc    esi
  404bdd:	jl     0x404c0e
  404bdf:	jo     0x404c12
  404be1:	adc    al,0x36
  404be3:	push   edi
  404be4:	jns    0x404b70
  404be6:	cs popf 
  404be8:	sbb    DWORD PTR [edi],edi
  404bea:	inc    edx
  404beb:	popf   
  404bec:	es pop ebx
  404bee:	sub    edi,eax
  404bf0:	push   ds
  404bf1:	loopne 0x404c54
  404bf3:	mov    al,0x8b
  404bf5:	adc    al,0xe
  404bf7:	pop    ss
  404bf8:	and    eax,0x7f37c89
  404bfd:	(bad)  
  404bfe:	in     al,dx
  404bff:	pushf  
  404c00:	test   BYTE PTR [ecx+eax*1],bl
  404c03:	(bad)  
  404c05:	mov    dh,ch
  404c07:	retf   0x23f3
  404c0a:	jmp    0xdeb80645
  404c0f:	push   ss
  404c10:	sub    eax,0xd6bd327c
  404c15:	mov    dl,ah
  404c17:	ret    
  404c18:	inc    ebp
  404c19:	sub    al,dh
  404c1b:	push   ss
  404c1c:	and    esp,esp
  404c1e:	rcl    BYTE PTR [ecx+0x33b688df],1
  404c24:	mov    dh,0xfe
  404c26:	rcr    BYTE PTR [esp+0x1c9d3920],1
  404c2d:	sbb    al,0x91
  404c2f:	pop    ebp
  404c30:	sahf   
  404c31:	mov    BYTE PTR [esi-0x74ffff55],dl
  404c37:	ins    DWORD PTR es:[edi],dx
  404c38:	mov    ds,WORD PTR [eax+edi*2-0x23fc22ab]
  404c3f:	pushf  
  404c40:	lea    ebx,[esp+eax*1+0x1f760020]
  404c47:	and    al,0xff
  404c49:	hlt    
  404c4a:	ds (bad) 
  404c4c:	sbb    DWORD PTR [esi+0x3f],esp
  404c4f:	sbb    al,0xe8
  404c51:	mov    al,ds:0x56ff88bd
  404c56:	aas    
  404c57:	and    bh,bh
  404c59:	aam    0x42
  404c5b:	mov    DWORD PTR [ebp-0xb],esi
  404c5e:	sbb    BYTE PTR ds:0x7c2ab4ff,dh
  404c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c65:	ss xchg ebp,eax
  404c67:	mov    bh,bh
  404c69:	mov    ah,0x26
  404c6b:	xchg   DWORD PTR [ebp-0x7],esi
  404c6e:	lds    eax,FWORD PTR [ecx]
  404c70:	or     al,0x93
  404c72:	push   ds
  404c73:	xchg   DWORD PTR [ebp-0x1f],esi
  404c76:	retf   0xffa3
  404c79:	push   cs
  404c7a:	lods   eax,DWORD PTR ds:[esi]
  404c7b:	pop    ebp
  404c7c:	ret    0x32d9
  404c7f:	loope  0x404c0b
  404c81:	or     eax,0x9af050b1
  404c86:	cmp    al,0xdf
  404c88:	sub    dl,BYTE PTR [edx]
  404c8a:	mov    ecx,0xfde60bd1
  404c8f:	xchg   esi,eax
  404c90:	inc    ebp
  404c91:	loope  0x404c4d
  404c93:	add    DWORD PTR [eax],ecx
  404c95:	data16 jo 0x404c20
  404c98:	(bad)  
  404c99:	and    al,0x0
  404c9b:	add    BYTE PTR [ecx+0x32e90014],ah
  404ca1:	xchg   ebx,eax
  404ca2:	cmp    eax,0xffd4cdfc
  404ca7:	call   0x2cc334d2
  404cac:	cmp    eax,0xb83f7414
  404cb1:	shr    edi,1
  404cb3:	cmp    DWORD PTR [edi+0x15],ecx
  404cb6:	push   0xffffffe9
  404cb8:	inc    esp
  404cb9:	adc    al,0x83
  404cbb:	or     al,0x85
  404cbd:	xchg   DWORD PTR [ebx+0x0],esi
  404cc0:	xchg   ebp,eax
  404cc1:	stos   BYTE PTR es:[edi],al
  404cc2:	jne    0x404cd4
  404cc4:	mov    ds:0x32006a0e,eax
  404cc9:	adc    BYTE PTR [ebp-0xc01fbb],cl
  404ccf:	adc    eax,0x40790d
  404cd4:	arpl   WORD PTR [ebx+0x74],dx
  404cd7:	das    
  404cd8:	retf   
  404cd9:	sub    al,0xf4
  404cdb:	add    BYTE PTR [eax+edi*2-0x76],ah
  404cdf:	inc    ebp
  404ce0:	cmp    al,0x96
  404ce2:	dec    ebp
  404ce3:	lock xor ebx,DWORD PTR [eax]
  404ce6:	ja     0x404cff
  404ce8:	mov    ebx,DWORD PTR [edi-0x689b8a75]
  404cee:	jge    0x404cf8
  404cf0:	mov    ds:0xae3efdd,eax
  404cf5:	sahf   
  404cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf7:	mov    eax,ebp
  404cf9:	push   cs
  404cfa:	push   DWORD PTR [ebp+0x28]
  404cfd:	fwait
  404cfe:	add    bh,bh
  404d00:	add    BYTE PTR [eax],al
  404d02:	test   DWORD PTR [edi+0x106337e8],edx
  404d08:	add    BYTE PTR [ebx+0x5b5e4b4b],cl
  404d0e:	adc    DWORD PTR [esi+0xc],ecx
  404d11:	add    BYTE PTR ds:0x9483ec97,ah
  404d17:	sahf   
  404d18:	push   ebx
  404d19:	push   esi
  404d1a:	pop    ss
  404d1b:	cmp    BYTE PTR [ebp+0x2f],bl
  404d1e:	sbb    DWORD PTR [eax],edx
  404d20:	call   0x52f0be
  404d25:	mov    edx,DWORD PTR [eax-0x3703baaf]
  404d2b:	adc    al,BYTE PTR [eax]
  404d2d:	add    BYTE PTR [ebx+0x403e7452],dl
  404d33:	fldcw  WORD PTR [esi]
  404d35:	inc    ecx
  404d36:	mov    BYTE PTR ds:0xd23145e8,bh
  404d3c:	add    al,BYTE PTR [eax]
  404d3e:	cmp    bh,BYTE PTR [ebp+0xcba2f0f]
  404d44:	sub    ebp,DWORD PTR [edx+0x4e]
  404d47:	cmp    al,0x4
  404d49:	push   ebx
  404d4a:	mov    eax,ecx
  404d4c:	outs   dx,BYTE PTR ds:[esi]
  404d4d:	add    BYTE PTR [ecx],dh
  404d4f:	jb     0x404d14
  404d51:	je     0x404d9a
  404d53:	add    bl,BYTE PTR [ebx+0x32e8f48d]
  404d59:	call   0x43df72
  404d5e:	loope  0x404d35
  404d60:	mov    cl,0x83
  404d62:	(bad)  
  404d63:	rol    BYTE PTR [edx],1
  404d65:	je     0x404d67
  404d67:	add    BYTE PTR [ebx],ch
  404d69:	xchg   ebp,eax
  404d6a:	add    al,0x0
  404d6c:	xor    DWORD PTR [ebp+0x3a],edi
  404d6f:	pop    esi
  404d70:	mov    dh,BYTE PTR [esi+eax*8]
  404d73:	mov    eax,0x37b31
  404d78:	jle    0x404d3f
  404d7a:	ds leave 
  404d7c:	repnz enter 0xec8e,0xb2
  404d81:	das    
  404d82:	xchg   ebx,eax
  404d83:	add    DWORD PTR [eax+edx*8-0x18],0x40
  404d88:	xor    DWORD PTR [ebx+0xf],edi
  404d8b:	adc    dh,BYTE PTR [edx+0x702ec4c0]
  404d91:	jnp    0x404d96
  404d93:	je     0x404dcd
  404d95:	cli    
  404d96:	(bad)  
  404d97:	les    ecx,FWORD PTR [edi]
  404d99:	cmp    al,0x4
  404d9b:	add    BYTE PTR [esi+esi*2+0x5b],bl
  404d9f:	add    DWORD PTR [ecx],esi
  404da1:	jnp    0x404da6
  404da3:	leave  
  404da4:	repnz add BYTE PTR [edi],bh
  404da7:	cli    
  404da8:	idiv   DWORD PTR [ebx+0x3]
  404dab:	(bad)  
  404dac:	jno    0x404e2a
  404dae:	add    eax,esi
  404db0:	icebp  
  404db1:	js     0x404db6
  404db3:	(bad)  
  404db4:	icebp  
  404db5:	adc    ebp,edx
  404db7:	add    esi,DWORD PTR [edi-0x2c]
  404dba:	in     al,0x3
  404dbc:	outs   dx,DWORD PTR ds:[esi]
  404dbd:	aam    0xeb
  404dbf:	(bad)  
  404dc0:	mov    ebp,0x1b3494cf
  404dc5:	adc    al,0x13
  404dc7:	add    al,0xb
  404dc9:	adc    al,0x13
  404dcb:	add    al,0x0
  404dcd:	add    BYTE PTR [ebx],cl
  404dcf:	adc    al,0x3
  404dd1:	add    al,0xd9
  404dd3:	xor    ebp,ebx
  404dd5:	add    esi,DWORD PTR [ecx]
  404dd7:	cli    
  404dd8:	or     BYTE PTR [esi],ch
  404dda:	xor    edx,DWORD PTR [edi-0x7afe625c]
  404de0:	cld    
  404de1:	push   esi
  404de2:	pop    ds
  404de3:	shr    eax,cl
  404de5:	or     al,0x71
  404de7:	(bad)  
  404de8:	jmp    0x3193:0xa44d72ca
  404def:	adc    al,0xe9
  404df1:	add    edi,DWORD PTR [esi+ecx*8-0xd9cbc8]
  404df8:	sbb    al,0x2e
  404dfa:	xor    DWORD PTR [ebp-0x2cb83d0c],eax
  404e00:	call   0xe63f3f11
  404e05:	shr    BYTE PTR [esp+eax*4-0x17],0x3
  404e0a:	xor    DWORD PTR [esi+edi*8],edx
  404e0d:	push   cs
  404e0e:	std    
  404e0f:	test   ah,bl
  404e11:	mov    esi,0x8ce8d31f
  404e16:	ins    BYTE PTR es:[edi],dx
  404e17:	test   BYTE PTR [eax-0x32667b3c],dh
  404e1d:	test   ch,ch
  404e1f:	fwait
  404e20:	fs ds mov ecx,0x17f340e3
  404e27:	shr    eax,cl
  404e29:	stos   DWORD PTR es:[edi],eax
  404e2a:	jo     0x404e9a
  404e2c:	mov    esi,0x196198
  404e31:	test   eax,0xe3e0000
  404e36:	sub    DWORD PTR [esi*4-0x49ed88e1],0xffffffce
  404e3e:	out    dx,eax
  404e3f:	cmp    ebp,eax
  404e41:	and    eax,0x8f32e9ab
  404e46:	rcl    BYTE PTR [ecx],0x4b
  404e49:	adc    eax,0xe3982cb6
  404e4e:	push   cs
  404e4f:	aaa    
  404e50:	aaa    
  404e51:	xchg   BYTE PTR [eax-0x1a],dl
  404e54:	add    bh,cl
  404e56:	cld    
  404e57:	sbb    DWORD PTR [eax],edi
  404e59:	mov    esi,0x15226545
  404e5e:	mov    dh,0xa4
  404e60:	mov    ch,0xe3
  404e62:	push   cs
  404e63:	lahf   
  404e64:	jp     0xcf212cba
  404e6a:	clc    
  404e6b:	cdq    
  404e6c:	sub    DWORD PTR [esi+0x15024145],edi
  404e72:	mov    bh,0xac
  404e74:	shl    ah,0xe
  404e77:	jbe    0x404ee0
  404e79:	mov    BYTE PTR [eax+0x26],dl
  404e7c:	das    
  404e7d:	test   BYTE PTR [eax-0x9],ch
  404e80:	or     ebp,edx
  404e82:	jmp    DWORD PTR [ebx+0x4f]
  404e85:	nop
  404e86:	push   eax
  404e87:	add    ecx,ebx
  404e89:	scas   al,BYTE PTR es:[edi]
  404e8a:	add    cl,ch
  404e8c:	mov    ch,0x58
  404e8e:	xor    al,0x6c
  404e90:	aaa    
  404e91:	nop
  404e92:	push   eax
  404e93:	add    DWORD PTR [ecx-0x53],ebp
  404e96:	add    cl,ch
  404e98:	add    BYTE PTR [eax],al
  404e9a:	and    dl,BYTE PTR [ecx-0x13da8abb]
  404ea0:	adc    BYTE PTR [esi],cl
  404ea2:	ins    BYTE PTR es:[edi],dx
  404ea3:	adc    al,0xe8
  404ea5:	cwde   
  404ea6:	xchg   ecx,eax
  404ea7:	cmp    edi,0xffffffc1
  404eaa:	inc    esi
  404eab:	pop    esp
  404eac:	inc    DWORD PTR [eax]
  404eae:	not    DWORD PTR [ecx-0x3d]
  404eb1:	push   ebp
  404eb2:	inc    ebx
  404eb3:	lods   al,BYTE PTR ds:[esi]
  404eb4:	add    esp,0xffffab34
  404eba:	dec    ebx
  404ebb:	xor    ebp,DWORD PTR [edx+0x0]
  404ebe:	inc    edx
  404ebf:	sbb    bh,bh
  404ec1:	jne    0x404e63
  404ec3:	scas   eax,DWORD PTR es:[edi]
  404ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec5:	aad    0xa7
  404ec7:	stos   DWORD PTR es:[edi],eax
  404ec8:	mov    DWORD PTR [ebp-0x4c],eax
  404ecb:	xor    BYTE PTR [ecx],al
  404ecd:	add    BYTE PTR [edi-0x7f8a0116],ah
  404ed3:	scas   eax,DWORD PTR es:[edi]
  404ed4:	out    0xd4,eax
  404ed6:	out    0xaa,eax
  404ed8:	push   0x17589c
  404edd:	(bad)  
  404ede:	int    0x37
  404ee0:	(bad)  
  404ee1:	push   edi
  404ee3:	inc    edi
  404ee4:	call   0xffeb4f64
  404ee9:	(bad)  
  404eea:	int    0x37
  404eec:	(bad)  
  404eed:	push   edi
  404eef:	sti    
  404ef0:	(bad)  
  404ef1:	dec    DWORD PTR [eax-0x74]
  404ef4:	test   DWORD PTR [eax+0x67],esp
  404ef7:	stos   DWORD PTR es:[edi],eax
  404ef8:	call   DWORD PTR [eax+0x70]
  404efb:	leave  
  404efc:	test   eax,0x8000000
  404f01:	outs   dx,BYTE PTR ds:[esi]
  404f02:	enter  0x5a2b,0x8d
  404f06:	mov    ebp,0xffab2774
  404f0b:	jmp    0x404f18
  404f0d:	xchg   edi,eax
  404f0e:	aas    
  404f0f:	add    BYTE PTR [ebp+0x14],bh
  404f12:	mov    edx,0x170801
  404f17:	or     ecx,DWORD PTR [edx+0x24]
  404f1a:	add    eax,esi
  404f1c:	iret   
  404f1d:	push   ss
  404f1e:	inc    edi
  404f1f:	inc    ecx
  404f20:	dec    ecx
  404f21:	mov    al,ds:0x16c80080
  404f26:	jb     0x404f0d
  404f28:	xor    DWORD PTR [esi-0x3d],esi
  404f2b:	je     0x404f4c
  404f2d:	aad    0x77
  404f2f:	add    BYTE PTR [ecx],dh
  404f31:	ins    DWORD PTR es:[edi],dx
  404f32:	mov    BYTE PTR [ebp-0x693daf],al
  404f38:	add    edx,ecx
  404f3a:	adc    BYTE PTR [eax],cl
  404f3c:	cdq    
  404f3d:	or     DWORD PTR [edi+0x7a59eff],ebp
  404f43:	push   0x31
  404f45:	daa    
  404f46:	add    al,0xff
  404f48:	add    al,0x75
  404f4a:	stos   DWORD PTR es:[edi],eax
  404f4b:	test   eax,0xe896915d
  404f50:	ins    BYTE PTR es:[edi],dx
  404f51:	xchg   edi,eax
  404f52:	xchg   esi,eax
  404f53:	jmp    ecx
  404f55:	add    DWORD PTR [eax],edx
  404f57:	or     BYTE PTR [ecx+0xf],bl
  404f5a:	mov    al,0xff
  404f5c:	data16 adc al,0x4
  404f5f:	add    al,0x31
  404f61:	ins    DWORD PTR es:[edi],dx
  404f62:	stos   DWORD PTR es:[edi],eax
  404f63:	jmp    0xe1be4f68
  404f68:	xchg   ebp,eax
  404f69:	mov    DWORD PTR [eax+ecx*8+0x5446ff96],esi
  404f70:	xchg   esi,eax
  404f71:	add    esi,DWORD PTR [ecx]
  404f73:	ins    DWORD PTR es:[edi],dx
  404f74:	xchg   esi,eax
  404f75:	mov    ch,0xd5
  404f77:	inc    ecx
  404f78:	xchg   esi,eax
  404f79:	call   FWORD PTR [ecx+0x26fff36d]
  404f7f:	push   esp
  404f80:	add    eax,DWORD PTR [ecx+esi*1]
  404f83:	imul   ebp,DWORD PTR [ebx+0x36bc852],0x50
  404f8a:	push   cs
  404f8b:	loope  0x404fc3
  404f8d:	inc    DWORD PTR [esi]
  404f8f:	adc    edx,DWORD PTR [esi+0x21232975]
  404f95:	aam    0xf6
  404f97:	sub    BYTE PTR [edx],0xff
  404f9a:	xor    ch,BYTE PTR [ebx+0x3]
  404f9d:	call   FWORD PTR [edi+ecx*4+0x14deff96]
  404fa4:	push   ecx
  404fa5:	add    eax,DWORD PTR [ecx+0x14]
  404fa8:	jmp    0xe95880d8
  404fad:	add    ebx,ecx
  404faf:	sub    eax,DWORD PTR [eax-0x3a1bcefc]
  404fb5:	dec    edi
  404fb6:	push   ebp
  404fb7:	cmp    DWORD PTR [esi-0x1ef8516b],0xae6868ab
  404fc1:	xchg   ebp,eax
  404fc2:	mov    DWORD PTR [edi-0x5c],edx
  404fc5:	xchg   ebp,eax
  404fc6:	xchg   esi,eax
  404fc7:	in     al,0x9d
  404fc9:	sldt   WORD PTR [eax]
  404fcc:	cmp    DWORD PTR [esp+ebx*4-0x4f],ebp
  404fd0:	xchg   BYTE PTR [ecx-0x7e80cc7f],al
  404fd6:	xchg   BYTE PTR [edi-0x6a822354],al
  404fdc:	outs   dx,BYTE PTR ds:[esi]
  404fdd:	in     al,0x0
  404fdf:	repz pop ss
  404fe1:	shr    eax,cl
  404fe3:	stos   DWORD PTR es:[edi],eax
  404fe4:	les    edi,FWORD PTR [eax+0x66]
  404fe7:	xchg   ebp,eax
  404fe8:	test   al,0x97
  404fea:	mov    ch,0x94
  404fec:	dec    esi
  404fed:	sub    DWORD PTR [edx+0x57],0x954e80dd
  404ff4:	xor    DWORD PTR [eax],ecx
  404ff6:	lods   al,BYTE PTR ds:[esi]
  404ff7:	xor    BYTE PTR [esp+ebx*8+0x3d],0x95
  404ffc:	sub    BYTE PTR cs:[ebx-0x6e694c29],bh
  405003:	xchg   esp,eax
  405004:	push   ds
  405005:	sub    ebp,0x1ddbdc94
  40500b:	xchg   ebp,eax
  40500c:	push   cs
  40500d:	sbb    DWORD PTR [ebx+ecx*1-0x6ac539e7],0x3c5494fe
  405018:	test   BYTE PTR [eax-0x7ea70002],0x0
  40501f:	div    BYTE PTR [edi]
  405021:	or     al,0xe8
  405023:	dec    eax
  405024:	mov    al,ds:0x67e6ff80
  405029:	fdiv   st(6),st
  40502b:	fisub  WORD PTR [ebp+0x3db580]
  405031:	add    BYTE PTR [eax+eax*4+0xc2fceff],bl
  405038:	call   0xffc0d1c8
  40503d:	shl    BYTE PTR [esi],cl
  40503f:	out    dx,al
  405040:	inc    DWORD PTR [edx+0x2d]
  405043:	xor    DWORD PTR [ebp-0x1f],0xa6d3c6ca
  40504a:	mov    ebp,0xa435b580
  40504f:	cmp    bh,0x81
  405052:	fldcw  WORD PTR [ecx-0x1]
  405055:	mov    fs,WORD PTR [ebp-0x6279a33a]
  40505b:	sub    al,0x89
  40505e:	pushf  
  40505f:	cmp    bh,0xc2
  405062:	test   eax,0xf3be5ceb
  405067:	adc    ebp,eax
  405069:	ror    edx,1
  40506b:	adc    eax,DWORD PTR [eax]
  40506d:	jo     0x40503e
  40506f:	das    
  405070:	call   DWORD PTR [esi-0x63]
  405073:	xchg   esp,eax
  405074:	mov    ebp,0xff80a5fd
  405079:	jmp    0xb0a872a4
  40507e:	adc    eax,0x7735ffd5
  405083:	xor    bh,bh
  405085:	lds    ebp,FWORD PTR cs:[ebp+ecx*1+0x51]
  40508a:	xor    dl,BYTE PTR [ebx+ecx*1]
  40508d:	sub    DWORD PTR [esi],edi
  40508f:	or     cl,BYTE PTR [ebp-0x811d84]
  405095:	push   cs
  405096:	add    BYTE PTR [eax],al
  405098:	inc    eax
  405099:	jg     0x40506b
  40509b:	add    bl,cl
  40509d:	or     al,0xdb
  40509f:	jne    0x40507d
  4050a1:	xchg   esi,eax
  4050a2:	test   DWORD PTR [eax],esi
  4050a4:	fbld   TBYTE PTR [ebx+0x663050ff]
  4050aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ab:	add    al,cl
  4050ad:	and    DWORD PTR [ecx*4-0x197ab],esp
  4050b4:	fisttp WORD PTR [eax-0x1]
  4050b7:	jne    0x405089
  4050b9:	fwait
  4050ba:	inc    ebp
  4050bb:	shr    edi,cl
  4050bd:	mov    ds:0xa3ec75ff,eax
  4050c2:	jne    0x4050cc
  4050c4:	jo     0x405057
  4050c6:	sar    edi,cl
  4050c8:	iret   
  4050c9:	inc    ebx
  4050ca:	pop    ebx
  4050cb:	leave  
  4050cc:	retf   0xc
  4050cf:	push   ebp
  4050d0:	add    esi,DWORD PTR [ecx+eax*4-0x644f3c]
  4050d7:	(bad)  
  4050d8:	(bad)  
  4050da:	sti    
  4050db:	push   eax
  4050dc:	scas   eax,DWORD PTR es:[edi]
  4050dd:	sbb    eax,0x2ea5ff0c
  4050e2:	sub    DWORD PTR [ecx+0x58],eax
  4050e5:	fwait
  4050e6:	mov    edx,0xb1348a8
  4050eb:	rcr    BYTE PTR [edi-0x74],0xe7
  4050ef:	add    BYTE PTR [eax+0x13],bl
  4050f2:	mov    DWORD PTR [ebp-0x20],0x48000017
  4050f9:	dec    edx
  4050fa:	inc    ebp
  4050fb:	hlt    
  4050fc:	add    BYTE PTR [eax],al
  4050fe:	out    dx,eax
  4050ff:	or     al,BYTE PTR [eax]
  405101:	add    BYTE PTR [edx],al
  405103:	adc    ebp,DWORD PTR [edx+0x0]
  405106:	lea    ecx,[ebp-0x5cb00814]
  40510c:	push   eax
  40510d:	push   0x8
  40510f:	xchg   esp,eax
  405110:	inc    ebp
  405111:	hlt    
  405112:	enter  0x8593,0xf4
  405116:	xor    DWORD PTR [esi],ebx
  405118:	xchg   ebx,eax
  405119:	jmp    DWORD PTR [ecx+0xe]
  40511c:	sbb    eax,edi
  40511e:	idiv   bh
  405120:	mov    gs,eax
  405122:	enter  0x3e4,0x0
  405126:	cmp    ch,BYTE PTR ds:0xd7c80518
  40512c:	add    eax,DWORD PTR [eax]
  40512e:	xor    edx,ebp
  405130:	dec    edi
  405131:	in     al,dx
  405132:	(bad)  
  405133:	pop    ebp
  405134:	xchg   edx,eax
  405135:	add    DWORD PTR ds:0xcdbd8677,edi
  40513b:	gs xchg edx,eax
  40513d:	jmp    FWORD PTR [esi]
  40513f:	inc    ecx
  405140:	or     edi,edi
  405142:	hlt    
  405143:	push   esp
  405144:	sahf   
  405145:	mov    dh,0x19
  405147:	or     eax,0xe03140d4
  40514c:	xchg   esp,esi
  40514e:	sahf   
  40514f:	mov    ch,0x92
  405151:	push   eax
  405152:	cdq    
  405153:	lock pop edx
  405155:	add    BYTE PTR [ecx],dh
  405157:	jb     0x40511c
  405159:	je     0x40515b
  40515b:	loopne 0x4050e4
  40515d:	call   0x50d2e6e0
  405162:	add    BYTE PTR [eax],al
  405164:	mov    esp,0x66f796f7
  405169:	add    eax,0x60e4ff33
  40516e:	xchg   edx,eax
  40516f:	xor    eax,0x4523fa
  405174:	pop    ecx
  405175:	in     al,0xaa
  405177:	inc    DWORD PTR [esi+0x71]
  40517a:	ret    
  40517b:	je     0x40515d
  40517d:	repz xchg eax,esi
  405180:	ds aad 0x91
  405183:	push   0xbea26b30
  405188:	es sar ebx,0xe7
  40518c:	jae    0x4051a7
  40518e:	xchg   edx,eax
  40518f:	push   DWORD PTR [edx+0x69f6414]
  405195:	jle    0x4051b5
  405197:	add    al,0x7c
  405199:	adc    BYTE PTR [ebx-0x1ef801fd],al
  40519f:	fwait
  4051a0:	inc    esi
  4051a1:	bound  eax,QWORD PTR [esi]
  4051a3:	xchg   edx,eax
  4051a4:	fimul  DWORD PTR [edx]
  4051a6:	xchg   ebx,eax
  4051a7:	add    al,0xe6
  4051a9:	pop    es
  4051aa:	loope  0x405147
  4051ac:	adc    ah,BYTE PTR [edx-0x12]
  4051af:	xchg   ecx,eax
  4051b0:	(bad)  
  4051b1:	(bad)  
  4051b2:	rcr    DWORD PTR [ecx+0x57de7dce],1
  4051b8:	rol    DWORD PTR [ebp+0x7be91d6],0xe1
  4051bf:	fwait
  4051c0:	ins    BYTE PTR es:[edi],dx
  4051c1:	(bad)  
  4051c2:	(bad)  
  4051c3:	xchg   ecx,eax
  4051c4:	scas   al,BYTE PTR es:[edi]
  4051c5:	(bad)  
  4051c6:	mov    ecx,0xa6000099
  4051cb:	jge    0x40518e
  4051cd:	or     eax,0x91ae7d84
  4051d2:	in     al,dx
  4051d3:	jnp    0x405165
  4051d5:	fmul   QWORD PTR [edi-0x36e6183]
  4051db:	jg     0x40515e
  4051dd:	(bad)  
  4051de:	(bad)  
  4051df:	adc    al,0xe9
  4051e1:	mov    edx,0x36e90c73
  4051e6:	mov    edx,0x4dc86870
  4051eb:	test   DWORD PTR [esi-0x6f],esi
  4051ee:	lods   al,BYTE PTR ds:[esi]
  4051ef:	xlat   BYTE PTR ds:[ebx]
  4051f0:	ins    BYTE PTR es:[edi],dx
  4051f1:	xor    al,0x56
  4051f3:	pop    es
  4051f4:	cmc    
  4051f5:	nop
  4051f6:	add    al,0xd9
  4051f8:	cmovae esi,DWORD PTR [ecx]
  4051fb:	ins    BYTE PTR es:[edi],dx
  4051fc:	test   DWORD PTR [ecx+0x31],ebp
  4051ff:	adc    al,0xe2
  405201:	ret    
  405202:	es xchg edi,eax
  405204:	call   0x2947:0x26143102
  40520b:	adc    al,0x0
  40520d:	jmp    0xa5076644
  405212:	mov    esi,0x32e9077c
  405217:	jmp    0x82ff:0xea3292ff
  40521e:	xor    cl,BYTE PTR [edi-0x70c2eabb]
  405224:	test   ebp,edi
  405226:	leave  
  405227:	jl     0x405228
  405229:	cdq    
  40522a:	rol    DWORD PTR [esi],0xf8
  40522d:	test   BYTE PTR [eax],0x0
  405230:	inc    edi
  405231:	sub    al,0x6f
  405234:	dec    ecx
  405235:	adc    al,0x0
  405237:	repnz repnz pop es
  40523a:	add    eax,0x13c8d0
  40523f:	jmp    0x2868a25e
  405244:	sub    eax,0xcaf5757d
  405249:	mov    dl,0xd8
  40524b:	mov    esi,0x998ae3c1
  405250:	pop    ds
  405251:	xchg   edi,eax
  405252:	hlt    
  405253:	mov    dh,0xc1
  405255:	jl     0x4052a7
  405257:	cmp    ebp,DWORD PTR [ebp-0x5e61275e]
  40525d:	mov    al,BYTE PTR [ebp-0x836667]
  405263:	or     ecx,0x4c86ff67
  405269:	adc    al,0x68
  40526b:	lock adc bl,0xff
  40526f:	jne    0x405278
  405271:	test   bh,dh
  405273:	outs   dx,BYTE PTR ds:[esi]
  405274:	sar    DWORD PTR [ebp+esi*1-0x3e],0x6b
  405279:	sar    edi,cl
  40527b:	push   eax
  40527c:	cdq    
  40527d:	call   DWORD PTR fs:[esi-0x45]
  405281:	xchg   esi,eax
  405282:	in     al,0x56
  405284:	mov    eax,ds:0x18006a7c
  405289:	and    BYTE PTR [edx],dl
  40528b:	xor    cl,bl
  40528d:	pop    ss
  40528e:	push   DWORD PTR [ebp-0x63a8]
  405294:	add    BYTE PTR [eax],al
  405296:	inc    edi
  405297:	bound  ebx,QWORD PTR [edx+0x29]
  40529a:	fst    DWORD PTR [edi]
  40529c:	call   0xffe4926a
  4052a1:	mov    DWORD PTR [ebp+0x27fff79b],ecx
  4052a7:	sbb    DWORD PTR [eax],eax
  4052a9:	push   0x4067d3
  4052ae:	out    0xe1,eax
  4052b0:	out    dx,eax
  4052b1:	mul    edi
  4052b3:	mov    edi,edi
  4052b5:	xor    eax,0x405ec3
  4052ba:	loopne 0x40529b
  4052bc:	(bad)  
  4052bd:	jmp    edi
  4052bf:	stc    
  4052c0:	test   al,ch
  4052c2:	fisttp WORD PTR [ebx-0x535a7c01]
  4052c8:	idiv   edi
  4052ca:	ja     0x4052dc
  4052cc:	je     0x405317
  4052ce:	sbb    esp,ebp
  4052d0:	jmp    0x4052c9
  4052d2:	out    0x8b,eax
  4052d4:	add    BYTE PTR [eax+ecx*2-0x69],dh
  4052d8:	mov    ebp,0xff8bafe8
  4052dd:	add    BYTE PTR [ebx+eiz*2],bl
  4052e0:	add    BYTE PTR [bx+si-0x4166],cl
  4052e5:	call   FWORD PTR ds:0xc8eee778
  4052eb:	mov    edi,edi
  4052ed:	call   FWORD PTR ds:0xe7fff7b4
  4052f3:	mov    dh,BYTE PTR [ebp+0x8]
  4052f6:	mov    al,0xd6
  4052f8:	sar    bh,1
  4052fa:	add    BYTE PTR [eax],al
  4052fc:	xlat   BYTE PTR ds:[ebx]
  4052fd:	mov    dh,BYTE PTR [ebp-0x752018]
  405303:	push   DWORD PTR [ecx]
  405305:	pop    eax
  405306:	sti    
  405307:	out    0xfd,eax
  405309:	cmp    ecx,DWORD PTR [edi-0x5807d101]
  40530f:	mul    DWORD PTR [esi]
  405311:	cmp    cl,BYTE PTR [edi-0x1a2ad68b]
  405317:	rcl    BYTE PTR [esi],1
  405319:	sub    cl,BYTE PTR [edi-0x70e5ea4b]
  40531f:	call   FWORD PTR [ecx]
  405321:	pop    ebp
  405322:	mov    bh,0xff
  405324:	(bad)  
  405325:	and    DWORD PTR [ecx-0x14],ebx
  405328:	dec    BYTE PTR [ecx]
  40532a:	(bad)
  40532e:	(bad)  
  40532f:	jmp    esi
  405331:	aas    
  405332:	pushf  
  405333:	neg    esi
  405335:	sbb    DWORD PTR [ebx-0x719602e6],0x965c84ff
  40533f:	inc    esi
  405341:	pop    ecx
  405342:	sbb    BYTE PTR [eax],cl
  405344:	leave  
  405345:	xchg   DWORD PTR [ebp+0x5849b6ff],ecx
  40534b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534d:	push   ecx
  40534e:	mov    gs,eax
  405350:	xor    BYTE PTR [ecx+0x279eff8e],ah
  405356:	mov    ecx,gs
  405358:	aad    0xaa
  40535a:	mov    ?,edi
  40535c:	mov    ss,WORD PTR [edi]
  40535e:	nop
  40535f:	call   0xd33a5364
  405364:	add    al,BYTE PTR [eax]
  405366:	push   0xddfffbae
  40536b:	cmc    
  40536c:	sahf   
  40536d:	xor    DWORD PTR [ebp-0x70],0x19
  405371:	add    bl,bl
  405373:	imul   ecx,DWORD PTR [esi-0xd6ad68b],0xffffffd0
  40537a:	push   esi
  40537b:	jmp    0x138d98fb
  405380:	ror    DWORD PTR [esi+edx*1],1
  405383:	aad    0xe8
  405385:	mov    es,esp
  405387:	or     eax,DWORD PTR [ecx+0x27]
  40538a:	aaa    
  40538b:	jp     0x4053db
  40538d:	sbb    ecx,ecx
  40538f:	sub    DWORD PTR [eax-0xeffd9fd],ebp
  405395:	fwait
  405396:	xchg   BYTE PTR [edx+0x36],bh
  405399:	mov    cs,WORD PTR [ecx+0x3144febc]
  40539f:	jns    0x40533d
  4053a1:	sti    
  4053a2:	push   cs
  4053a3:	cmp    DWORD PTR [esi+ecx*4],ebx
  4053a6:	(bad)  
  4053a7:	in     al,dx
  4053a8:	or     dh,bl
  4053aa:	jno    0x4053c0
  4053ac:	push   cs
  4053ad:	sbb    BYTE PTR [ecx],bh
  4053af:	ins    BYTE PTR es:[edi],dx
  4053b0:	(bad)  
  4053b1:	nop
  4053b2:	out    0x79,al
  4053b4:	(bad)  
  4053b5:	pop    ss
  4053b6:	fnstsw WORD PTR [ecx+0x7c]
  4053b9:	sti    
  4053ba:	into   
  4053bb:	and    DWORD PTR [eax],ebx
  4053bd:	mov    cs,esi
  4053bf:	dec    ebx
  4053c0:	stos   DWORD PTR es:[edi],eax
  4053c1:	or     BYTE PTR [ecx],dh
  4053c3:	fbstp  TBYTE PTR [ecx-0x60]
  4053c6:	add    BYTE PTR [eax],al
  4053c8:	dec    ecx
  4053c9:	adc    al,0xe9
  4053cb:	pushf  
  4053cc:	ja     0x405447
  4053ce:	push   esp
  4053cf:	add    BYTE PTR [esi+0x159bf0ff],ch
  4053d5:	jg     0x405395
  4053d7:	lea    ebp,[eax+0x56]
  4053da:	loope  0x4053df
  4053dc:	cld    
  4053dd:	mov    WORD PTR [ebp-0x16f7f37f],?
  4053e3:	cld    
  4053e4:	mov    dl,0x36
  4053e6:	call   0x1cb984ee
  4053eb:	add    BYTE PTR [ecx+0x6e8daede],cl
  4053f1:	or     eax,0xec4117a9
  4053f6:	lods   al,BYTE PTR ds:[esi]
  4053f7:	fdivr  st(1),st
  4053f9:	adc    eax,DWORD PTR [eax]
  4053fb:	jbe    0x40543b
  4053fd:	or     al,ch
  4053ff:	and    al,BYTE PTR [ecx+edi*2+0x7ee70ff]
  405406:	push   0xffffffe9
  405408:	sbb    cl,bh
  40540a:	das    
  40540b:	test   al,0x32
  40540d:	in     al,dx
  40540e:	dec    edi
  40540f:	sbb    DWORD PTR [edx+0x14],esi
  405412:	(bad)  
  405413:	cld    
  405414:	pop    ecx
  405415:	sub    eax,DWORD PTR [ecx-0x17]
  405418:	mov    edx,0xa436d5e1
  40541d:	or     al,0xc0
  40541f:	mov    ch,0x1c
  405421:	leave  
  405422:	dec    edi
  405423:	es push ds
  405425:	or     al,ch
  405427:	cs (bad) 
  405429:	js     0x40542a
  40542b:	mov    ecx,0x79420000
  405430:	jne    0x405413
  405432:	retf   0xffa2
  405435:	push   es
  405436:	mov    ah,0x6b
  405438:	and    DWORD PTR [edx],ebx
  40543a:	lods   al,BYTE PTR ds:[esi]
  40543b:	js     0x405425
  40543d:	aad    0xa1
  40543f:	js     0x405440
  405441:	xor    DWORD PTR [edx],0xffffffec
  405444:	inc    esp
  405445:	sbb    DWORD PTR [edx+0x14],esi
  405448:	push   0xffd3e539
  40544d:	inc    eax
  40544e:	xor    edx,DWORD PTR [eax+eax*1]
  405451:	imul   ecx,edx,0xb5c6d619
  405457:	or     al,0xc0
  405459:	xor    eax,0xb64fc88f
  40545e:	aas    
  40545f:	or     al,ch
  405461:	push   esi
  405462:	les    edi,FWORD PTR [eax-0x1]
  405465:	cmp    DWORD PTR ds:0x9af17579,edi
  40546b:	(bad)  
  40546d:	xchg   esi,eax
  40546e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40546f:	imul   ebp,ecx,0xffffffbb
  405472:	mov    ebp,0xb400e878
  405477:	ret    0xffff
  40547a:	inc    edx
  40547b:	adc    BYTE PTR [eax+0x45],ch
  40547e:	cwde   
  40547f:	aad    0xff
  405481:	addr16 dec ebx
  405483:	fs inc eax
  405485:	add    bh,cl
  405487:	popa   
  405488:	pop    edx
  405489:	sub    DWORD PTR [ecx-0xa1a17ec],ecx
  40548f:	xchg   edi,edi
  405491:	or     eax,DWORD PTR [eax]
  405493:	add    BYTE PTR [eax+0x1f],bl
  405496:	push   ds
  405497:	push   eax
  405498:	enter  0x7588,0xc
  40549c:	sub    BYTE PTR [ecx],0xd6
  40549f:	call   FWORD PTR [edi+0x43]
  4054a2:	push   eax
  4054a3:	inc    ebp
  4054a5:	jnp    0x40548e
  4054a7:	and    BYTE PTR [edi-0x78],cl
  4054aa:	(bad)  
  4054ab:	call   0x401a08
  4054b0:	xor    ah,bl
  4054b2:	sar    edi,1
  4054b4:	aas    
  4054b5:	sbb    eax,0x63956800
  4054ba:	inc    eax
  4054bb:	add    al,al
  4054bd:	and    al,0x30
  4054bf:	inc    ecx
  4054c0:	enter  0x21b,0x0
  4054c4:	fcom   DWORD PTR [ebx-0x747a5218]
  4054ca:	dec    DWORD PTR [ebx]
  4054cc:	mov    BYTE PTR [esi+ebx*1],ah
  4054cf:	push   eax
  4054d0:	clc    
  4054d1:	mov    dh,BYTE PTR [ebp+0xc]
  4054d4:	jo     0x405548
  4054d6:	aad    0xff
  4054d8:	outs   dx,DWORD PTR ds:[esi]
  4054d9:	inc    eax
  4054da:	push   eax
  4054db:	jmp    DWORD PTR [ebp+0x78]
  4054de:	out    0xe8,eax
  4054e0:	fimul  WORD PTR [ebx-0x41bf1701]
  4054e6:	(bad)  
  4054e7:	jmp    DWORD PTR [eax-0x60002de1]
  4054ed:	sbb    BYTE PTR ds:0x42c3130,ah
  4054f3:	jmp    esp
  4054f5:	pop    eax
  4054f6:	fwait
  4054f7:	add    eax,0x8e7f0000
  4054fc:	mov    edx,DWORD PTR [eax+0x1]
  4054ff:	not    BYTE PTR [eax]
  405501:	or     BYTE PTR [ecx-0x5a],cl
  405504:	mov    bh,bh
  405506:	dec    esi
  405507:	xchg   ebp,eax
  405508:	xor    edx,edx
  40550a:	inc    esi
  40550b:	out    dx,al
  40550c:	mov    dh,BYTE PTR [ebp+0x2d]
  40550f:	in     eax,0x3a
  405511:	shl    BYTE PTR [esi],cl
  405513:	fidivr WORD PTR [edx+eax*8-0x74cf92c7]
  40551a:	adc    eax,0x8bf4bfea
  40551f:	ins    DWORD PTR es:[edi],dx
  405520:	sbb    eax,0xfbb81602
  405525:	out    0x80,eax
  405527:	push   ss
  405528:	mov    edi,edi
  40552a:	mov    eax,0x346887a7
  40552f:	ins    BYTE PTR es:[edi],dx
  405530:	add    eax,DWORD PTR [eax]
  405532:	or     DWORD PTR [edx-0xc11004b],ebp
  405538:	inc    eax
  405539:	clc    
  40553a:	pop    ecx
  40553b:	imul   eax,DWORD PTR [eax+eax*1],0xf8107631
  405542:	leave  
  405543:	xor    al,0x67
  405545:	add    BYTE PTR [ecx],dh
  405547:	jb     0x40550c
  405549:	je     0x405568
  40554b:	xor    BYTE PTR [eax],al
  40554d:	add    DWORD PTR [ecx],esi
  40554f:	ins    DWORD PTR es:[edi],dx
  405550:	adc    cl,BYTE PTR ds:0xff8bd7b6
  405556:	and    al,0x75
  405558:	fwait
  405559:	mov    BYTE PTR [edi+0xeb8a4d],ah
  40555f:	add    BYTE PTR [ecx],ch
  405561:	mov    dh,0x10
  405563:	clc    
  405564:	mov    eax,eax
  405566:	mov    ah,0xff
  405568:	mov    ss,edx
  40556a:	(bad)  
  40556c:	in     eax,dx
  40556d:	adc    edi,DWORD PTR [edi-0x621c8176]
  405573:	adc    BYTE PTR [ecx],ch
  405575:	ins    BYTE PTR es:[edi],dx
  405576:	pop    es
  405577:	mov    ch,BYTE PTR [esi+0x76]
  40557a:	add    ebp,esi
  40557c:	dec    esi
  40557d:	aas    
  40557e:	lahf   
  40557f:	mov    bl,BYTE PTR [esi+0xa]
  405582:	test   eax,0xb7ec3d0f
  405587:	shl    ecx,cl
  405589:	adc    ebx,DWORD PTR [ecx]
  40558b:	pushf  
  40558c:	js     0x4055ee
  40558e:	data16 mov ah,cl
  405591:	jbe    0x405567
  405593:	sti    
  405594:	dec    esi
  405595:	(bad)  
  405596:	push   esi
  405597:	mov    ch,BYTE PTR [esi]
  405599:	jmp    0x4055a4
  40559b:	pushf  
  40559c:	cmp    al,0x5e
  40559e:	inc    esi
  40559f:	mov    ch,BYTE PTR [edx]
  4055a1:	push   esp
  4055a2:	mov    ch,0xef
  4055a4:	mov    es,WORD PTR [ebx-0x7]
  4055a7:	inc    esp
  4055a8:	xor    esp,esp
  4055aa:	inc    eax
  4055ab:	pop    ebp
  4055ac:	fdiv   QWORD PTR [ebp+0x26]
  4055af:	xor    edi,esi
  4055b1:	push   eax
  4055b3:	fwait
  4055b4:	inc    ecx
  4055b5:	jbe    0x4055cd
  4055b7:	mov    bl,BYTE PTR [ebx+0x18]
  4055ba:	add    DWORD PTR [ecx-0x1f98a04],edx
  4055c0:	sahf   
  4055c1:	add    ch,dl
  4055c3:	sbb    eax,DWORD PTR [eax]
  4055c5:	add    BYTE PTR [eax],ah
  4055c7:	inc    esp
  4055c8:	test   al,0x3
  4055ca:	popa   
  4055cb:	ins    BYTE PTR es:[edi],dx
  4055cc:	bound  esi,QWORD PTR [eax-0x76c68a3a]
  4055d2:	inc    esp
  4055d3:	or     al,0xd1
  4055d5:	repz mov ah,0x75
  4055d8:	(bad)  
  4055d9:	push   ds
  4055da:	xor    esp,ebp
  4055dc:	adc    dl,ah
  4055de:	icebp  
  4055df:	adc    edx,DWORD PTR [ecx+0x34]
  4055e2:	popa   
  4055e3:	shr    eax,cl
  4055e5:	mov    BYTE PTR [ecx+ebx*8-0x1],bl
  4055e9:	push   edx
  4055eb:	adc    ebp,eax
  4055ed:	pop    ecx
  4055ee:	shl    DWORD PTR [ebp-0x1],0x39
  4055f2:	test   al,0xff
  4055f4:	pop    es
  4055f5:	xchg   ecx,eax
  4055f6:	mov    ds:0x4f96ff77,al
  4055fb:	adc    al,0x68
  4055fd:	and    al,0x7d
  4055ff:	aam    0xff
  405601:	adc    BYTE PTR ds:0xa9e94144,ah
  405607:	aas    
  405608:	pop    ebx
  405609:	shl    bl,0x13
  40560c:	call   0xffb5ed0a
  405611:	bnd jb 0x405614
  405614:	push   ss
  405615:	jo     0x40560d
  405617:	jg     0x405618
  405619:	fdivr  QWORD PTR [esi-0x351e8a8c]
  40561f:	ret    0x46fd
  405622:	test   al,0x74
  405624:	jne    0x40565b
  405626:	mov    ch,0x35
  405628:	shl    DWORD PTR [esi],1
  40562a:	add    BYTE PTR [eax],al
  40562c:	mov    eax,0xf4c0ffe9
  405631:	and    al,0x41
  405633:	jmp    0xa8705752
  405638:	xor    dh,BYTE PTR [ebp+0x35]
  40563b:	mov    dl,0xb
  40563d:	aam    0xff
  40563f:	add    al,bh
  405641:	pusha  
  405642:	inc    DWORD PTR [esi]
  405644:	and    eax,0xbaf17575
  405649:	mov    bl,0xfd
  40564b:	idiv   BYTE PTR [ecx+0x780ffe9]
  405651:	inc    esp
  405652:	inc    ecx
  405653:	jmp    0x28705772
  405658:	sub    eax,0x8a323575
  40565d:	sar    edi,cl
  40565f:	rcr    BYTE PTR [ecx+0x7700ff60],0x77
  405666:	mov    edi,0x44f97e74
  40566b:	hlt    
  40566c:	mov    DWORD PTR ds:0x783dfff4,0x8bd560e7
  405676:	(bad)  
  405677:	call   FWORD PTR ds:0xa8ede8a4
  40567d:	mov    edi,edi
  40567f:	push   0x58
  405681:	sbb    BYTE PTR [edx],bh
  405683:	xor    BYTE PTR [ecx],cl
  405685:	adc    BYTE PTR [eax+0x50],ch
  405688:	cwde   
  405689:	sar    edi,1
  40568b:	addr16 pop edx
  40568d:	adc    BYTE PTR [eax],al
  40568f:	add    BYTE PTR [eax],0x0
  405692:	mov    al,0x9b
  405694:	sar    edi,cl
  405696:	xlat   BYTE PTR ds:[ebx]
  405697:	inc    eax
  405698:	push   DWORD PTR [ebp+0x40]
  40569b:	cwde   
  40569c:	push   eax
  40569d:	std    
  40569e:	xchg   DWORD PTR [edx+ebp*2+0x3032f000],ebx
  4056a5:	inc    ecx
  4056a6:	or     BYTE PTR [eax],dl
  4056a8:	push   eax
  4056a9:	xor    cl,cl
  4056ab:	pop    ss
  4056ac:	push   0x80181802
  4056b1:	call   0x3ffede
  4056b6:	add    ebx,DWORD PTR [eax+0x74]
  4056b9:	push   ss
  4056ba:	xor    DWORD PTR [edx],0xa3cdfff4
  4056c0:	push   DWORD PTR [ebp-0x30]
  4056c3:	(bad)  
  4056c4:	adc    ebp,edi
  4056c6:	aaa    
  4056c7:	pushf  
  4056c8:	push   DWORD PTR [ebp-0x24]
  4056cb:	mov    ds,WORD PTR [esi+0x6a9bc7d0]
  4056d1:	add    BYTE PTR [eax-0x37bed09f],dh
  4056d7:	(bad)  
  4056d9:	xor    BYTE PTR [ecx],cl
  4056db:	sbb    BYTE PTR [eax+0x2],ch
  4056de:	xor    DWORD PTR [ebp+0x3],edi
  4056e1:	sbb    BYTE PTR [ecx-0x61004c63],0xd
  4056e8:	xchg   DWORD PTR [ebp+0x29],esi
  4056eb:	inc    ebp
  4056ec:	add    eax,0x1aaa8efd
  4056f1:	add    BYTE PTR [ecx],bl
  4056f3:	cmp    ah,dl
  4056f5:	inc    eax
  4056f6:	add    BYTE PTR [eax],al
  4056f8:	xor    DWORD PTR ds:0x7cf03013,eax
  4056fe:	sbb    eax,DWORD PTR [edx]
  405700:	xor    DWORD PTR [ebp-0x7d],edi
  405703:	call   0xffc805b8
  405708:	sub    bh,BYTE PTR [ebp+0x38a81610]
  40570e:	nop
  40570f:	inc    esp
  405711:	lock xchg BYTE PTR [ebp+0x39],dh
  405715:	xchg   ebp,eax
  405716:	ret    0x3efc
  405719:	cli    
  40571a:	xchg   BYTE PTR [ebp+0x3d],dh
  40571d:	lds    esi,FWORD PTR [esi]
  40571f:	shr    BYTE PTR [esi],1
  405721:	retf   0x7586
  405724:	and    eax,0x90810e2
  405729:	aas    
  40572a:	mov    ecx,0xc22416ff
  40572f:	add    al,0x31
  405731:	nop
  405732:	jp     0x405720
  405734:	cdq    
  405735:	jge    0x40573a
  405737:	out    dx,eax
  405738:	mov    edi,0xf60c1139
  40573d:	xchg   ebx,edi
  40573f:	out    0x46,eax
  405741:	ja     0xfc7f5046
  405747:	inc    DWORD PTR [ebp-0x127e681a]
  40574d:	sub    BYTE PTR [esi-0x7ebe3101],al
  405753:	mov    eax,0x8681c7
  405758:	xor    DWORD PTR [ecx+ebp*8],edx
  40575b:	add    eax,DWORD PTR [eax]
  40575d:	add    BYTE PTR [edx-0x11051328],ch
  405763:	out    0xeb,eax
  405765:	sub    DWORD PTR [ecx+0x14],0x54
  405769:	add    DWORD PTR [eax+0x3103e7cc],ecx
  40576f:	jae    0x4057a5
  405771:	clc    
  405772:	xchg   esi,eax
  405773:	adc    DWORD PTR [ebx-0x56e1797a],0x63fc2e10
  40577d:	xlat   BYTE PTR ds:[ebx]
  40577e:	icebp  
  40577f:	adc    ebx,DWORD PTR [esi+0x627c3d10]
  405785:	mov    dl,0x66
  405787:	jb     0x40570b
  405789:	clc    
  40578a:	(bad)  
  40578b:	push   ebp
  40578c:	aad    0x44
  40578e:	xor    DWORD PTR [ebx-0xc],esi
  405791:	not    DWORD PTR [esi-0x11]
  405794:	cdq    
  405795:	xchg   BYTE PTR [esi-0x64],al
  405798:	fs dec ebx
  40579a:	aas    
  40579b:	jb     0x405803
  40579d:	sbb    esi,edi
  40579f:	adc    al,0xe9
  4057a1:	add    edi,DWORD PTR [edi+edx*4+0x7226852b]
  4057a8:	mov    ecx,0x4662259b
  4057ad:	xchg   BYTE PTR [edi+edx*4+0x720e852b],ah
  4057b4:	cdq    
  4057b5:	xchg   BYTE PTR [esp+ebp*4+0x7cfe862f],bh
  4057bc:	fldenv [ecx+esi*1+0x14]
  4057c0:	jo     0x405742
  4057c2:	add    BYTE PTR [eax],al
  4057c4:	lods   eax,DWORD PTR ds:[esi]
  4057c5:	jb     0x4057dd
  4057c7:	xchg   BYTE PTR [ecx+0x21],dh
  4057ca:	mov    dh,BYTE PTR gs:[ecx]
  4057cd:	adc    al,0xe9
  4057cf:	js     0x40578d
  4057d1:	push   esi
  4057d2:	inc    DWORD PTR [ebp-0x14ff9632]
  4057d8:	ret    0xff71
  4057db:	jmp    0x2bcd4f0e
  4057e0:	fabs   
  4057e2:	addr16 mov eax,ds:0xd489
  4057e6:	inc    eax
  4057e8:	sahf   
  4057e9:	mov    ah,0x0
  4057eb:	jmp    0xecb60989
  4057f0:	mov    ebx,0x32e900a3
  4057f5:	lahf   
  4057f6:	xchg   ebp,eax
  4057f7:	stos   DWORD PTR es:[edi],eax
  4057f8:	scas   eax,DWORD PTR es:[edi]
  4057f9:	jno    0x4057fa
  4057fb:	pop    esp
  4057fc:	repz aas 
  4057fe:	push   eax
  4057ff:	adc    ebx,ebp
  405801:	aas    
  405802:	inc    ecx
  405803:	jmp    0xe9e0bcd2
  405808:	xor    bl,BYTE PTR ds:0x7c5e14c0
  40580e:	xchg   esp,eax
  40580f:	jmp    0xada86c46
  405814:	ins    DWORD PTR es:[edi],dx
  405815:	aam    0xff
  405817:	jne    0x40584f
  405819:	and    al,ch
  40581b:	jbe    0x4057a0
  40581d:	jno    0x40581e
  40581f:	je     0x4057e7
  405821:	push   ebp
  405822:	(bad)  
  405823:	pop    esi
  405824:	mov    ah,0x9e
  405826:	push   edx
  405827:	add    eax,0xc4630000
  40582c:	out    0x12,eax
  40582e:	loopne 0x4058a0
  405830:	call   FWORD PTR [ecx-0x66f01953]
  405836:	mov    ch,0xe6
  405838:	pop    es
  405839:	inc    ecx
  40583a:	add    esi,DWORD PTR [edx-0x1]
  40583d:	cs popf 
  40583f:	sub    edi,ecx
  405841:	lods   al,BYTE PTR es:[esi]
  405843:	jl     0x4058a8
  405845:	ins    BYTE PTR es:[edi],dx
  405846:	jae    0x405888
  405848:	mov    DWORD PTR [ecx+eax*4+0x72],ebp
  40584c:	dec    DWORD PTR [esi]
  40584e:	cmp    eax,0x890030b1
  405853:	adc    al,0xff
  405855:	mov    ch,0x4
  405857:	call   0xa0:0xdf30ffff
  40585e:	enter  0xbf6b,0x74
  405862:	push   es
  405863:	adc    ah,cl
  405865:	sub    BYTE PTR [ecx+0x18],bl
  405868:	push   DWORD PTR [ebp-0x74]
  40586b:	mov    WORD PTR [ecx-0x68902e],gs
  405871:	mov    ch,0x14
  405873:	xchg   edi,eax
  405874:	(bad)  
  405875:	jmp    FWORD PTR [eax]
  405877:	nop
  405878:	icebp  
  405879:	sar    BYTE PTR [edi+0xb505097],cl
  40587f:	sbb    dl,BYTE PTR [eax]
  405881:	add    BYTE PTR [ecx+ebp*2],dl
  405884:	addr16 sahf 
  405886:	mov    ch,dl
  405888:	dec    DWORD PTR [edi-0x50]
  40588b:	out    dx,eax
  40588c:	mov    al,ds:0x48000000
  405891:	mov    eax,DWORD PTR ds:0x1449b8
  405897:	add    BYTE PTR [edx],dl
  405899:	imul   edi,DWORD PTR [edi-0xddae8c],0x75
  4058a0:	push   eax
  4058a1:	mov    WORD PTR [esi-0x17683002],ss
  4058a7:	rcr    DWORD PTR [esi-0x68],1
  4058aa:	dec    DWORD PTR [ebp-0x1aa6b]
  4058b0:	outs   dx,DWORD PTR ds:[esi]
  4058b1:	and    edi,edi
  4058b3:	mov    ch,0xac
  4058b5:	cdq    
  4058b6:	(bad)  
  4058b7:	jmp    DWORD PTR [eax+0x30]
  4058ba:	mov    al,ds:0xbfef1800
  4058bf:	setne  BYTE PTR [ebx-0x2]
  4058c3:	dec    DWORD PTR [edi-0x68]
  4058c6:	mov    ch,0xbc
  4058c8:	dec    esi
  4058c9:	cwde   
  4058ca:	(bad)  
  4058cb:	call   0xa39c01
  4058d0:	xor    DWORD PTR [esi],ebx
  4058d2:	dec    esi
  4058d3:	mov    eax,0xe88416d7
  4058d8:	nop
  4058d9:	aas    
  4058da:	test   bh,bh
  4058dc:	clc    
  4058dd:	cmp    esi,edi
  4058df:	jmp    DWORD PTR [ebp-0xe]
  4058e2:	xchg   esi,eax
  4058e3:	sub    ebp,0x79
  4058e6:	dec    ebx
  4058e7:	inc    ebp
  4058e8:	lods   eax,DWORD PTR ds:[esi]
  4058e9:	jge    0x4058ee
  4058eb:	add    BYTE PTR [ecx],dh
  4058ed:	inc    esi
  4058ee:	stc    
  4058ef:	or     ecx,DWORD PTR [ecx+0xff56a6]
  4058f5:	add    BYTE PTR [esi+0x2b744362],dl
  4058fb:	in     al,0xc8
  4058fd:	sti    
  4058fe:	xchg   BYTE PTR [eax],dh
  405900:	adc    al,0xff
  405902:	add    al,0xc1
  405904:	ins    BYTE PTR es:[edi],dx
  405905:	adc    eax,0x5083b663
  40590a:	outs   dx,BYTE PTR ds:[esi]
  40590b:	or     BYTE PTR [eax-0x7c492b18],al
  405911:	jmp    FWORD PTR [esi+0x306a8038]
  405917:	xchg   esi,eax
  405918:	stc    
  405919:	sti    
  40591a:	dec    esi
  40591b:	push   0xe6fde80b
  405920:	cmp    bh,0x3e
  405923:	push   0x26dce87f
  405928:	cmp    edi,0xfffffff8
  40592b:	cmp    dl,BYTE PTR [eax]
  40592d:	add    BYTE PTR [edx+esi*8+0x6f],bh
  405931:	xor    ebp,0x16ff81cc
  405937:	inc    ebx
  405938:	add    ebp,DWORD PTR [edx+0x32]
  40593b:	cs stc 
  40593d:	pop    es
  40593e:	sbb    DWORD PTR [ecx-0xc0100b2],esi
  405944:	enter  0x89fb,0x14
  405948:	in     eax,dx
  405949:	add    al,0x31
  40594b:	adc    al,0x6c
  40594d:	mov    esi,ebx
  40594f:	ins    DWORD PTR es:[edi],dx
  405950:	push   ss
  405951:	add    DWORD PTR [ecx+0x31a3357c],0x14
  405958:	repnz inc ebx
  40595a:	add    BYTE PTR [eax],al
  40595c:	ds cwde 
  40595e:	dec    edx
  40595f:	add    al,0x31
  405961:	adc    al,0xb4
  405963:	pop    es
  405964:	xor    BYTE PTR [ecx+ebp*8],dl
  405967:	adc    ch,BYTE PTR [esi+0x3103e98b]
  40596d:	cld    
  40596e:	xchg   esi,eax
  40596f:	xor    esi,eax
  405971:	adc    esp,DWORD PTR [eax+ecx*4-0x5a]
  405975:	ins    DWORD PTR es:[edi],dx
  405976:	into   
  405977:	add    BYTE PTR [ecx],0x7c
  40597a:	mov    dl,BYTE PTR [esi+ecx*4+0x6e]
  40597e:	jo     0x405908
  405980:	sub    DWORD PTR [ebp-0x4a],0xb9a87e82
  405987:	xor    DWORD PTR [esi+0x6e],0x14300811
  40598e:	jmp    0x97a70623
  405993:	sbb    BYTE PTR [esi-0x3d],0x0
  405997:	push   edx
  405998:	or     ebp,edx
  40599a:	call   0x2863d58a
  40599f:	add    al,0xd9
  4059a1:	push   edi
  4059a2:	mov    ecx,0x63763ec4
  4059a7:	mov    ds:0x43f21431,al
  4059ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ad:	add    edx,ebx
  4059af:	add    esi,DWORD PTR [edi+edx*4+0x6e1e815e]
  4059b6:	mov    ecx,0x511c9c82
  4059bb:	popf   
  4059bc:	or     al,0x6e
  4059be:	add    BYTE PTR ds:[eax],0x0
  4059c2:	mov    esp,0xb3370064
  4059c7:	ins    DWORD PTR es:[edi],dx
  4059c8:	push   0x142de5
  4059cd:	je     0x405988
  4059cf:	gs (bad) 
  4059d1:	push   ds
  4059d2:	mov    bl,0xc4
  4059d4:	addr16 daa 
  4059d6:	or     dl,bl
  4059d8:	inc    DWORD PTR [eax-0x16bedb7d]
  4059de:	ficom  DWORD PTR [ecx+0x30]
  4059e1:	test   al,0x32
  4059e3:	jl     0x405a34
  4059e5:	push   esi
  4059e6:	xor    dl,BYTE PTR [ebx+ecx*1]
  4059e9:	sub    DWORD PTR [esi-0x401695fc],edi
  4059ef:	xchg   edi,eax
  4059f0:	neg    edi
  4059f2:	mov    al,0x6d
  4059f4:	push   eax
  4059f5:	(bad)  
  4059f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f7:	adc    eax,0x6d162ee8
  4059fc:	inc    esi
  4059fe:	(bad)  
  4059ff:	fs (bad) 
  405a01:	mov    esi,0xa47d7cb0
  405a06:	mov    al,0x6d
  405a08:	push   0x2
  405a0a:	add    eax,0xb0a6d157
  405a0f:	sbb    eax,eax
  405a11:	adc    eax,0xd9a4fc11
  405a16:	jae    0x405a85
  405a18:	dec    edi
  405a19:	xor    DWORD PTR [edi+0x44],0xfb6586ff
  405a20:	call   FWORD PTR [eax]
  405a22:	mov    al,0xe7
  405a24:	pop    es
  405a25:	add    DWORD PTR [eax],0xff6f0700
  405a2b:	outs   dx,BYTE PTR ds:[esi]
  405a2c:	(bad)
  405a2f:	data16 mov al,0xfb
  405a32:	xchg   ebx,eax
  405a33:	sbb    edx,esi
  405a35:	ins    BYTE PTR es:[edi],dx
  405a36:	imul   esi,ebx,0x4107e6b1
  405a3c:	(bad)  
  405a3d:	ins    DWORD PTR es:[edi],dx
  405a3e:	inc    DWORD PTR [eax]
  405a40:	ja     0x4059c2
  405a42:	xchg   ebx,eax
  405a43:	xor    cl,bl
  405a45:	adc    BYTE PTR [edx+0x23],ch
  405a48:	inc    edi
  405a49:	gs pop es
  405a4b:	call   0x3fecb3
  405a50:	rol    BYTE PTR [eax+esi*1+0x1b7ed841],0xff
  405a58:	mov    ebp,0x268ce818
  405a5d:	xchg   ebx,eax
  405a5e:	(bad)  
  405a5f:	dec    DWORD PTR [ebp-0x13]
  405a62:	(bad)  
  405a63:	jne    0x405a25
  405a65:	clc    
  405a66:	fwait
  405a67:	retf   0x93c7
  405a6a:	leave  
  405a6b:	ret    0x10cc
  405a6e:	push   ebp
  405a6f:	mov    eax,DWORD PTR [eax+edi*2+0x5277ffff]
  405a76:	push   DWORD PTR [ebp-0x6c]
  405a79:	xchg   ebx,eax
  405a7a:	jne    0x405a84
  405a7c:	jo     0x405a5f
  405a7e:	in     eax,dx
  405a7f:	push   DWORD PTR [edi-0x27]
  405a82:	ror    DWORD PTR [eax],0x98
  405a85:	inc    ebp
  405a86:	mov    ch,ah
  405a88:	or     edx,ebp
  405a8a:	test   edi,0x944d0000
  405a90:	add    BYTE PTR [eax],al
  405a92:	pop    eax
  405a93:	adc    BYTE PTR [ebp+0x6740c445],cl
  405a99:	fidivr WORD PTR [eax+0x51]
  405a9c:	(bad)  
  405a9d:	(bad)  
  405a9e:	cmp    eax,0x1335ff04
  405aa3:	cmp    DWORD PTR [ecx+0x0],eax
  405aa6:	mov    al,ds:0xc7ffceeb
  405aab:	pop    ds
  405aac:	shl    BYTE PTR [esi+eiz*2-0x67],0x45
  405ab1:	clc    
  405ab2:	add    BYTE PTR [edi],dl
  405ab4:	add    bh,ch
  405ab6:	(bad)  
  405ab7:	xchg   esp,eax
  405ab8:	jne    0x405ab6
  405aba:	xor    edx,eax
  405abc:	cmc    
  405abd:	not    DWORD PTR [esi]
  405abf:	inc    ecx
  405ac0:	or     ebp,eax
  405ac2:	imul   eax,ebx,0x7f
  405ac5:	inc    DWORD PTR [esi]
  405ac7:	mov    eax,ds:0x31bce87b
  405acc:	cmp    bh,0xe8
  405acf:	aas    
  405ad0:	or     eax,DWORD PTR [eax]
  405ad2:	test   dh,ah
  405ad4:	outs   dx,BYTE PTR ds:[esi]
  405ad5:	sub    ebp,0xdeff80c1
  405adb:	cmp    al,BYTE PTR [esi-0x7fe52848]
  405ae1:	add    BYTE PTR [ecx],dh
  405ae3:	jge    0x405ae8
  405ae5:	mov    ebp,DWORD PTR [ecx+edi*2+0xc]
  405ae9:	rol    BYTE PTR [ebp+0x78],0x83
  405aed:	cmp    BYTE PTR [ecx],dh
  405aef:	loopne 0x405af6
  405af1:	jmp    0x7c755af6
  405af6:	add    eax,DWORD PTR [eax]
  405af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af9:	rcl    BYTE PTR [ebx],0xff
  405afc:	and    al,0x71
  405afe:	imul   ebp,DWORD PTR [ecx],0xffffff81
  405b01:	pop    edx
  405b02:	jg     0x405b54
  405b04:	loope  0x405b57
  405b06:	stc    
  405b07:	pop    es
  405b08:	cdq    
  405b09:	sar    DWORD PTR [esi-0x1],cl
  405b0c:	jle    0x405b63
  405b0e:	sti    
  405b0f:	retf   
  405b10:	jbe    0x405acc
  405b12:	in     al,dx
  405b13:	mov    esp,0xff043c1d
  405b18:	fdivr  QWORD PTR [eax+0x6b]
  405b1b:	or     eax,0x897f8281
  405b20:	lods   al,BYTE PTR ds:[esi]
  405b21:	lds    edi,FWORD PTR [ebp-0x1]
  405b24:	dec    esi
  405b25:	add    eax,0x7d31013e
  405b2a:	nop
  405b2b:	test   DWORD PTR [ebx-0x1d],esi
  405b2e:	jle    0x405b2f
  405b30:	loope  0x405ac6
  405b32:	mov    esp,ecx
  405b34:	cs adc al,0x66
  405b37:	xchg   ecx,eax
  405b38:	lods   al,BYTE PTR ds:[esi]
  405b39:	push   ebp
  405b3a:	pop    edi
  405b3b:	jg     0x405b5b
  405b3d:	les    edx,FWORD PTR [ebp-0x47]
  405b40:	fldcw  WORD PTR [ecx+0x4e]
  405b43:	jg     0x405b5e
  405b45:	push   ebp
  405b46:	fs add al,0x31
  405b49:	popf   
  405b4a:	fs sar bh,0x6a
  405b4e:	les    esp,FWORD PTR ss:[edi]
  405b51:	nop
  405b52:	xchg   BYTE PTR [ecx+esi*1],al
  405b55:	adc    al,0x74
  405b57:	cdq    
  405b58:	add    BYTE PTR [eax],al
  405b5a:	repz imul ebx,DWORD PTR [esi],0xf915e67f
  405b61:	add    esi,DWORD PTR [ecx]
  405b63:	adc    al,0x95
  405b65:	idiv   DWORD PTR [ebp-0x3981d480]
  405b6b:	push   0x6c
  405b6d:	ret    0xc40a
  405b70:	cmp    BYTE PTR [ebx+0x6be8d505],0xc9
  405b77:	mov    cl,ch
  405b79:	add    edi,DWORD PTR [edx]
  405b7b:	push   esp
  405b7c:	push   esp
  405b7d:	add    cl,BYTE PTR [edx+0x739863cd]
  405b83:	imul   ecx,esi,0x14d5bc7e
  405b89:	aam    0xe
  405b8b:	scas   al,BYTE PTR es:[edi]
  405b8c:	or     eax,0x37727ec5
  405b91:	mov    eax,ds:0x43e21431
  405b96:	in     al,0x15
  405b98:	xchg   edx,eax
  405b99:	ret    
  405b9a:	mov    ch,0x80
  405b9c:	stos   DWORD PTR es:[edi],eax
  405b9d:	jge    0x405bfd
  405b9f:	push   0x64
  405ba1:	ror    DWORD PTR [edx],0x9d
  405ba4:	fs mov bh,0x4f
  405ba7:	push   0xffffff86
  405ba9:	jmp    0x405c25
  405bab:	cmp    ebp,DWORD PTR [eax]
  405bad:	add    al,0x3e
  405baf:	loopne 0x405bb0
  405bb1:	in     al,0xca
  405bb3:	in     al,dx
  405bb4:	into   
  405bb5:	outs   dx,BYTE PTR ds:[esi]
  405bb6:	scas   eax,DWORD PTR es:[edi]
  405bb7:	imul   esi,DWORD PTR [ebp-0x965b63],0x8a0000b9
  405bc1:	push   ebx
  405bc2:	iret   
  405bc3:	push   esi
  405bc4:	xchg   edi,eax
  405bc5:	imul   esi,DWORD PTR [ebp-0x7],0x36b871e2
  405bcc:	xchg   DWORD PTR [ecx+0x50],ebp
  405bcf:	cdq    
  405bd0:	jg     0x405bb1
  405bd2:	pop    es
  405bd3:	inc    ecx
  405bd4:	int    0x6a
  405bd6:	jmp    FWORD PTR [esi]
  405bd8:	pop    edx
  405bd9:	mov    ds:0x976726cb,al
  405bde:	test   DWORD PTR [ebx],ebp
  405be0:	pop    esp
  405be1:	imul   edi,edi,0xbc9f57b9
  405be7:	cmovg  ebp,DWORD PTR [ecx-0x18]
  405beb:	aad    0x91
  405bed:	adc    al,0x0
  405bef:	fs jb  0x405c0b
  405bf2:	test   DWORD PTR [ebp-0x110096c9],ecx
  405bf8:	out    0xa8,al
  405bfa:	(bad)  
  405bfb:	out    0x24,al
  405bfd:	jl     0x405c1e
  405bff:	jl     0x405c36
  405c01:	adc    al,0xff
  405c03:	pushf  
  405c04:	aad    0x6a
  405c06:	dec    esi
  405c08:	sbb    eax,0x4c6cb92
  405c0d:	pop    ebx
  405c0e:	ret    0x32ed
  405c11:	mov    edi,0x50b0c58a
  405c16:	cld    
  405c17:	scas   al,BYTE PTR es:[edi]
  405c18:	sbb    ax,0xaae8
  405c1c:	hlt    
  405c1d:	push   0x6d7670ff
  405c22:	or     ebp,DWORD PTR [ecx-0x6fdc0000]
  405c28:	mov    ecx,gs
  405c2a:	xor    dl,BYTE PTR [eax+ebp*2]
  405c2d:	add    BYTE PTR [ebx+eiz*1+0x41],ah
  405c31:	add    BYTE PTR [edi-0x3c1704a0],bh
  405c37:	fsin   
  405c39:	dec    DWORD PTR [eax+0x78]
  405c3c:	fs xor bl,cl
  405c3f:	adc    al,0x50
  405c41:	inc    DWORD PTR ds:0x7e94e81d
  405c47:	out    0xfe,eax
  405c49:	call   0x3f381e
  405c4e:	loopne 0x405c8d
  405c50:	xor    al,BYTE PTR [ecx+0x8]
  405c53:	call   0xceb158cc
  405c58:	int    0xff
  405c5a:	pop    ds
  405c5b:	inc    eax
  405c5c:	or     dl,BYTE PTR gs:[bp-0x1]
  405c61:	dec    edi
  405c62:	aas    
  405c63:	popa   
  405c64:	pop    es
  405c65:	call   0x3f4325
  405c6a:	xor    BYTE PTR [edi],ch
  405c6c:	retf   
  405c6d:	jmp    FWORD PTR [edi]
  405c6f:	js     0x405cb2
  405c71:	xor    cl,BYTE PTR [ecx-0x438a00ec]
  405c77:	cld    
  405c78:	mov    eax,0x4fe79fce
  405c7d:	push   0x4125f5
  405c82:	pop    eax
  405c83:	out    0x74,eax
  405c85:	or     BYTE PTR [eax+0x42],dh
  405c88:	std    
  405c89:	inc    DWORD PTR [eax]
  405c8b:	add    BYTE PTR [edi-0x4],bh
  405c8e:	add    eax,0x67e76fcb
  405c93:	pop    esp
  405c94:	jp     0x405ceb
  405c96:	(bad)  
  405c97:	(bad)  
  405c98:	xor    eax,0xce98e894
  405c9d:	out    0xfe,eax
  405c9f:	push   eax
  405ca0:	inc    eax
  405ca1:	jno    0x405cd4
  405ca3:	inc    ecx
  405ca4:	dec    eax
  405ca5:	inc    esp
  405ca6:	(bad)  
  405ca7:	jne    0x405cda
  405ca9:	jae    0x405d16
  405cab:	xor    DWORD PTR [edi-0x67],ecx
  405cae:	jl     0x405c98
  405cb0:	dec    esp
  405cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb2:	jl     0x405cb3
  405cb4:	ds pop edi
  405cb6:	jg     0x405ca0
  405cb8:	push   esp
  405cb9:	mov    ah,0x7c
  405cbb:	(bad)  
  405cbc:	clc    
  405cbd:	mov    ebx,0xe27c000b
  405cc2:	outs   dx,BYTE PTR ds:[esi]
  405cc3:	xor    ebp,0xffffffc9
  405cc6:	shr    DWORD PTR [ecx+0x31],cl
  405cc9:	push   ebx
  405cca:	pop    es
  405ccb:	inc    DWORD PTR [ebp+esi*2-0x31110195]
  405cd2:	jnp    0x405c5d
  405cd4:	je     0x405cff
  405cd6:	mov    BYTE PTR ds:0xffc3157d,bh
  405cdc:	outs   dx,BYTE PTR ds:[esi]
  405cdd:	jbe    0x405ce2
  405cdf:	je     0x405d0b
  405ce1:	test   DWORD PTR [ebp+0x30],edx
  405ce4:	jo     0x405d63
  405ce6:	aam    0xe7
  405ce8:	push   0x3a0002e0
  405ced:	cmp    eax,0x1df7
  405cf2:	pop    esi
  405cf3:	add    eax,0x66bed3ef
  405cf8:	pop    es
  405cf9:	sar    BYTE PTR ds:0x1467d349,0xab
  405d00:	ret    0xf6ff
  405d03:	ins    DWORD PTR es:[edi],dx
  405d04:	icebp  
  405d05:	pop    es
  405d06:	mov    DWORD PTR [esi+0x5596ff79],ebx
  405d0c:	(bad)
  405d10:	js     0x405d45
  405d12:	jno    0x405ca8
  405d14:	jnp    0x405d15
  405d16:	jle    0x405cbe
  405d18:	jbe    0x405cc8
  405d1a:	cmp    DWORD PTR [esi-0x10],esi
  405d1d:	(bad)  
  405d1e:	fild   DWORD PTR [edx+0x7a]
  405d21:	jne    0x405d5c
  405d23:	adc    al,0x91
  405d25:	jne    0x405d86
  405d27:	addr16 sahf 
  405d29:	out    dx,al
  405d2a:	adc    esp,DWORD PTR [edi+0x1c]
  405d2d:	or     al,0x59
  405d2f:	outs   dx,DWORD PTR ds:[esi]
  405d30:	(bad)  
  405d31:	jnp    0x405d79
  405d33:	cli    
  405d34:	in     al,0x7a
  405d36:	les    ebx,FWORD PTR [ebx]
  405d38:	xchg   ecx,eax
  405d39:	pop    ecx
  405d3a:	aaa    
  405d3b:	addr16 jbe 0x405d2c
  405d3e:	push   esp
  405d3f:	addr16 hlt 
  405d41:	or     ebx,DWORD PTR [ecx]
  405d43:	inc    ebx
  405d44:	addr16 jnp 0x405d65
  405d47:	cld    
  405d48:	push   eax
  405d49:	xor    al,0x70
  405d4b:	adc    al,0x56
  405d4d:	icebp  
  405d4e:	ss jl  0x405cf5
  405d51:	js     0x405d59
  405d53:	rcl    DWORD PTR [bx+di],1
  405d56:	add    BYTE PTR [eax],al
  405d58:	inc    eax
  405d59:	aad    0xe8
  405d5b:	jp     0x405dd9
  405d5d:	sbb    al,0x41
  405d5f:	cmp    al,0xec
  405d61:	data16 cs in al,dx
  405d64:	jp     0x405d8b
  405d66:	test   al,0x3
  405d68:	fsubrp st(0),st
  405d6a:	lock imul ecx,DWORD PTR [edx],0x69
  405d6e:	push   ss
  405d6f:	jnp    0x405dca
  405d71:	jmp    0xb7c:0x65c6c4d7
  405d78:	leave  
  405d79:	add    eax,0xfbb67afc
  405d7e:	cmp    BYTE PTR ds:0xf0ee13f0,dh
  405d84:	cs jl  0x405d7f
  405d87:	js     0x405d27
  405d89:	push   cx
  405d8b:	pop    edx
  405d8c:	pusha  
  405d8d:	aad    0xe8
  405d8f:	jp     0x405d95
  405d91:	sbb    al,0xc1
  405d93:	inc    DWORD PTR [ebp+0x47ac666]
  405d99:	push   0x7c2ef0be
  405d9e:	add    BYTE PTR [ebx],dh
  405da0:	repnz dec WORD PTR [esi]
  405da4:	hlt    
  405da5:	push   ecx
  405da6:	add    al,0xe9
  405da8:	sbb    DWORD PTR [ecx+0x1a596aec],0x67231d00
  405db2:	jne    0x405dad
  405db4:	retf   
  405db5:	loopne 0x405dc2
  405db7:	xchg   BYTE PTR [ecx+0xe],al
  405dba:	call   0xc7405e72
  405dbf:	push   WORD PTR [esi+0x21]
  405dc3:	sbb    ch,al
  405dc5:	xchg   ecx,eax
  405dc6:	jne    0x405e2d
  405dc8:	push   DWORD PTR [eax]
  405dca:	je     0x405de4
  405dcc:	add    BYTE PTR [edi+eiz*4-0x79d27c88],dh
  405dd3:	cli    
  405dd4:	dec    DWORD PTR [ebp+0x1]
  405dd7:	add    bh,bh
  405dd9:	mov    esp,0xed756522
  405dde:	mov    bh,BYTE PTR [esi]
  405de0:	int3   
  405de1:	imul   ebx,DWORD PTR ss:[ecx],0xffffffc0
  405de5:	mov    ch,0xfe
  405de7:	pushf  
  405de8:	inc    ebp
  405de9:	and    eax,0xa8323fca
  405dee:	xor    ah,BYTE PTR [ebp+0x75]
  405df1:	adc    eax,0xeccdb5a
  405df6:	dec    ebx
  405df7:	cld    
  405df8:	(bad)  
  405df9:	call   0xfe910449
  405dfe:	(bad)  
  405dff:	or     eax,0x652b4ce8
  405e04:	inc    DWORD PTR [ecx-0x16beddf3]
  405e0a:	sbb    edi,ebx
  405e0c:	sti    
  405e0d:	ror    DWORD PTR [ebx+0x57],1
  405e10:	call   esi
  405e12:	popf   
  405e13:	adc    al,0x0
  405e15:	mov    esi,0xfec4cb
  405e1a:	cmp    eax,0xb78ae818
  405e1f:	jmp    0x405e1f
  405e21:	push   0x1e740000
  405e26:	inc    ecx
  405e27:	add    BYTE PTR [edi+0x5be8fb75],dl
  405e2d:	into   
  405e2e:	(bad)  
  405e2f:	inc    DWORD PTR [eax+0xe]
  405e32:	add    bh,ch
  405e34:	out    0x3f,al
  405e36:	(bad)  
  405e37:	jne    0x405e89
  405e39:	stc    
  405e3a:	outs   dx,BYTE PTR ds:[esi]
  405e3b:	push   DWORD PTR [edi-0x4b8a0115]
  405e41:	neg    DWORD PTR [ebp-0x37]
  405e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e45:	jmp    0x405e0f
  405e47:	ret    0x1108
  405e4a:	push   ebp
  405e4b:	mov    eax,DWORD PTR [eax+edi*2+0x10c932f8]
  405e52:	push   DWORD PTR [ebp+0x14]
  405e55:	stc    
  405e56:	call   0xff2bd627
  405e5b:	jne    0x405e35
  405e5d:	inc    eax
  405e5e:	out    0x34,eax
  405e60:	inc    ebp
  405e61:	jmp    0x405e61
  405e63:	jmp    FWORD PTR [ebp-0x6200afec]
  405e69:	sbb    al,ch
  405e6b:	ds pop ss
  405e6d:	jmp    0x405e6d
  405e6f:	push   0x411fcd
  405e74:	daa    
  405e75:	jne    0x405e82
  405e77:	call   0x3f3a8b
  405e7c:	aaa    
  405e7d:	jne    0x405e8e
  405e7f:	push   eax
  405e80:	and    dh,bh
  405e82:	int3   
  405e83:	jmp    DWORD PTR [edi+0x1474eb]
  405e89:	add    al,cl
  405e8b:	jmp    0x405f01
  405e8d:	or     BYTE PTR [eax+0x77fffefc],al
  405e93:	fld    st(1)
  405e95:	adc    BYTE PTR [ecx],dh
  405e97:	jnp    0x405e67
  405e99:	mov    dl,BYTE PTR [ebp+0x7efc3ef9]
  405e9f:	daa    
  405ea0:	or     al,ch
  405ea2:	loope  0x405e5b
  405ea4:	js     0x405ea5
  405ea6:	cmp    bh,BYTE PTR [ebx+0x2fb849ef]
  405eac:	js     0x405f16
  405eae:	xor    DWORD PTR [ebx+0x68],edi
  405eb1:	mov    esi,0x41359cc9
  405eb6:	xor    DWORD PTR [esi-0x12],edi
  405eb9:	sti    
  405eba:	inc    esi
  405ebb:	dec    DWORD PTR [ebx]
  405ebd:	call   0xffb8ec6c
  405ec2:	leave  
  405ec3:	jnp    0x405ec8
  405ec5:	out    dx,eax
  405ec6:	out    dx,eax
  405ec7:	adc    eax,0x6d703263
  405ecc:	js     0x405f43
  405ece:	sbb    eax,0x907edfb
  405ed3:	dec    esp
  405ed4:	js     0x405ed5
  405ed6:	push   cs
  405ed7:	push   esi
  405ed8:	add    eax,0xeb941600
  405edd:	jmp    0x405f22
  405edf:	lods   al,BYTE PTR ds:[esi]
  405ee0:	add    edi,edi
  405ee2:	jl     0x405f05
  405ee4:	js     0x405f5b
  405ee6:	cmp    ebp,edx
  405ee8:	loope  0x405ee8
  405eea:	out    0x32,al
  405eec:	js     0x405f63
  405eee:	add    BYTE PTR [eax],al
  405ef0:	fld    QWORD PTR ds:0x2d6c8b4
  405ef6:	dec    edx
  405ef7:	ret    0x6d39
  405efa:	into   
  405efb:	mov    dl,ch
  405efd:	out    dx,al
  405efe:	ds cld 
  405f00:	dec    ebx
  405f01:	ins    DWORD PTR es:[edi],dx
  405f02:	in     eax,dx
  405f03:	add    al,0xb6
  405f05:	call   0x30c54714
  405f0a:	js     0x405f0b
  405f0c:	mov    eax,0xd66877b8
  405f11:	adc    al,0x1b
  405f13:	lds    edx,FWORD PTR [esi-0xfcdb405]
  405f19:	adc    edx,esi
  405f1b:	xor    edx,ebp
  405f1d:	sub    al,0x28
  405f1f:	add    al,0x7e
  405f21:	jmp    0x6307cb16
  405f26:	mov    esi,0xfb9cd977
  405f2b:	les    esp,FWORD PTR [esi-0x5]
  405f2e:	addr16 xor dh,al
  405f31:	adc    esp,DWORD PTR [esi+0x282cfa31]
  405f37:	add    al,0x4e
  405f39:	jmp    0x62dfcb1e
  405f3e:	mov    ?,WORD PTR [edi-0x37]
  405f41:	mov    eax,ds:0xfb36c4bb
  405f46:	or     esi,DWORD PTR [edx]
  405f48:	jo     0x405f5e
  405f4a:	jbe    0x405f7d
  405f4c:	mov    ch,BYTE PTR ds:0xe91e0428
  405f52:	lock imul eax,DWORD PTR [eax],0x0
  405f56:	xchg   edi,eax
  405f57:	bound  ebx,QWORD PTR [esi+0x77]
  405f5a:	cdq    
  405f5b:	dec    edi
  405f5c:	sbb    eax,ebp
  405f5e:	push   es
  405f5f:	sti    
  405f60:	mov    ebx,0x46147031
  405f65:	xor    DWORD PTR [edx+0x2d],ebx
  405f68:	test   al,0x3
  405f6a:	out    dx,al
  405f6b:	call   0x628fcb50
  405f70:	cs ja  0x405fbc
  405f73:	mov    ebx,0xfad6c4db
  405f78:	jns    0x405fac
  405f7a:	jo     0x405f90
  405f7c:	push   ss
  405f7d:	xor    DWORD PTR [edx+0x2d],ebp
  405f80:	test   al,0x3
  405f82:	mov    esi,0x676bf0e8
  405f87:	(bad)  
  405f88:	(bad)  
  405f89:	jbe    0x405fa4
  405f8b:	popf   
  405f8c:	add    BYTE PTR [ebx+0x5a67626d],bh
  405f92:	arpl   bp,dx
  405f94:	jmp    ebp
  405f96:	popa   
  405f97:	mov    edi,0x63352828
  405f9c:	jne    0x405f7f
  405f9e:	sbb    ch,BYTE PTR [edx]
  405fa0:	dec    dh
  405fa2:	pop    es
  405fa3:	in     al,dx
  405fa4:	mov    ebp,0x67626dfb
  405fa9:	pop    edx
  405faa:	and    ch,dl
  405fac:	push   DWORD PTR [ebp+0x2828bf21]
  405fb2:	xor    eax,0xcaf17563
  405fb7:	add    esi,edi
  405fb9:	sahf   
  405fba:	add    BYTE PTR [eax],al
  405fbc:	(bad)  
  405fbd:	jmp    0x405f89
  405fbf:	fld    TBYTE PTR [ebp+0x62]
  405fc2:	addr16 jp 0x405fc5
  405fc5:	aad    0xff
  405fc7:	test   DWORD PTR [ecx],eax
  405fc9:	mov    edi,0x61352828
  405fce:	jne    0x405fb1
  405fd0:	call   0xa6ec:0xa76efe1a
  405fd7:	sbb    ebp,esp
  405fd9:	popa   
  405fda:	addr16 int3 
  405fdc:	inc    eax
  405fdd:	sar    edi,cl
  405fdf:	shl    BYTE PTR [eax],0x14
  405fe2:	add    BYTE PTR [ecx-0x79],ch
  405fe5:	out    0x7,eax
  405fe7:	push   ecx
  405fe8:	(bad)  
  405fe9:	pop    edi
  405fea:	(bad)  
  405feb:	ficomp DWORD PTR ds:[edx+esi*1-0x7f13cd58]
  405ff3:	sti    
  405ff4:	cmc    
  405ff5:	popa   
  405ff6:	addr16 jmp 0x40602b
  405ff9:	adc    al,0x80
  405ffb:	push   ds
  405ffc:	rcr    DWORD PTR [ecx],0xe8
  405fff:	xor    DWORD PTR [ecx+0x61],ecx
  406002:	inc    DWORD PTR [ecx+0x412684]
  406008:	enter  0x6c6d,0x32
  40600c:	fst    DWORD PTR ds:0x15980268
  406012:	cmp    bh,0x25
  406015:	or     eax,0xe78dc1e8
  40601a:	(bad)  
  40601b:	push   0x4126c3
  406020:	add    BYTE PTR [eax],al
  406022:	lock js 0x406056
  406025:	inc    ecx
  406026:	mov    BYTE PTR [ebp+0x1],ch
  406029:	add    BYTE PTR [eax+0x6075ff95],cl
  40602f:	in     eax,dx
  406030:	test   eax,0x67e79ffd
  406035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406036:	pop    edx
  406037:	push   esi
  406038:	jmp    DWORD PTR [edi-0x25]
  40603b:	and    eax,0x16200041
  406040:	add    BYTE PTR [eax],al
  406042:	fsub   st,st(6)
  406044:	je     0x40604e
  406046:	mov    al,0x83
  406048:	std    
  406049:	jmp    FWORD PTR [edi+0x5932b870]
  40604f:	sbb    BYTE PTR [eax-0x6d],ch
  406052:	jmp    0x15:0xa67ff55
  406059:	or     BYTE PTR [edi-0x1317f88f],0xe9
  406060:	(bad)  
  406061:	push   eax
  406063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406064:	xor    al,BYTE PTR [ecx+0x8]
  406067:	ins    DWORD PTR es:[edi],dx
  406068:	xchg   edx,eax
  406069:	xor    cl,cl
  40606b:	adc    al,0x68
  40606d:	add    bl,al
  40606f:	adc    al,0x80
  406071:	jmp    DWORD PTR [ebp+0xd65e80c]
  406077:	out    0xfe,eax
  406079:	push   0x412623
  40607e:	mov    al,ds:0x31413283
  406083:	imul   ebp,ebx,0x1
  406086:	add    BYTE PTR [eax],al
  406088:	xor    DWORD PTR [ebx-0x7d],ebp
  40608b:	(bad)  
  40608c:	cmp    al,0x63
  40608e:	imul   ecx,DWORD PTR [esi-0x54],0x61
  406092:	je     0x4060fe
  406094:	dec    ebx
  406095:	push   0xffffffee
  406097:	pop    es
  406098:	mov    DWORD PTR [ebx+0x75],esi
  40609b:	call   DWORD PTR [esi+0x4ff20c4]
  4060a1:	arpl   WORD PTR [ebx-0x1],bp
  4060a4:	test   BYTE PTR [ecx+0x74],cl
  4060a7:	push   0x1d
  4060a9:	push   edx
  4060aa:	out    dx,al
  4060ab:	pop    es
  4060ac:	mov    DWORD PTR [edi-0x5e91008a],ebx
  4060b2:	out    dx,al
  4060b3:	sti    
  4060b4:	popw   ds
  4060b6:	or     al,0xe8
  4060b8:	out    0xb6,al
  4060ba:	je     0x4060bb
  4060bc:	push   0xe5ffffac
  4060c1:	in     eax,0x66
  4060c3:	add    esp,0x76
  4060c6:	add    esi,DWORD PTR [edx+edx*8+0x12]
  4060ca:	sbb    BYTE PTR [ebx],dh
  4060cc:	lock push 0x74
  4060cf:	jne    0x40610e
  4060d1:	test   ebp,esi
  4060d3:	leave  
  4060d4:	es out 0xd2,eax
  4060d7:	xor    DWORD PTR [di+0x64],ebp
  4060db:	mov    esi,0x7edf681
  4060e0:	sbb    DWORD PTR [ebx+ebp*2+0x47d606ff],esi
  4060e7:	(bad)  
  4060e8:	dec    dh
  4060ea:	jmp    0x3ac:0x4200002c
  4060f1:	jmp    DWORD PTR [ecx+esi*2+0x6b]
  4060f5:	pop    ebp
  4060f6:	sti    
  4060f7:	es je  0x40614a
  4060fa:	dec    ecx
  4060fb:	ins    BYTE PTR es:[edi],dx
  4060fc:	add    ebp,edi
  4060fe:	xchg   edi,eax
  4060ff:	adc    al,0xb9
  406101:	je     0x406147
  406103:	or     al,0x11
  406105:	call   0x568b:0x6b165fd9
  40610c:	push   cs
  40610d:	je     0x406158
  40610f:	aam    0xb9
  406111:	ret    0x5eae
  406114:	je     0x40611d
  406116:	cdq    
  406117:	and    BYTE PTR [ebx],ah
  406119:	je     0x4060b9
  40611b:	les    eax,FWORD PTR [eax-0x5890ceff]
  406121:	aam    0x8f
  406123:	jmp    0x6c49bd18
  406128:	(bad)  
  406129:	jae    0x4060b4
  40612b:	lea    esp,[edi-0x54b2898d]
  406131:	cld    
  406132:	outs   dx,BYTE PTR ds:[esi]
  406133:	enter  0x6071,0x66
  406137:	jmp    0x4aa8bd20
  40613c:	scas   al,BYTE PTR es:[edi]
  40613d:	jae    0x406169
  40613f:	push   esp
  406140:	sbb    eax,0xda04d90e
  406145:	les    eax,FWORD PTR [esi-0x31]
  406148:	adc    dl,0x68
  40614b:	pop    edi
  40614c:	mov    ss,esp
  40614e:	out    0x5e,al
  406150:	cld    
  406151:	sti    
  406152:	add    BYTE PTR [eax],al
  406154:	push   ss
  406155:	lock jge 0x4061cb
  406158:	es ins BYTE PTR es:[edi],dx
  40615a:	adc    eax,0xa05f1e4a
  40615f:	inc    esi
  406160:	sub    DWORD PTR [esp+edi*4],edx
  406163:	jle    0x406182
  406165:	xchg   ebx,eax
  406166:	and    eax,0x56149b64
  40616b:	stc    
  40616c:	cs pop edi
  40616e:	aam    0xff
  406170:	imul   DWORD PTR [eax]
  406172:	mov    ds:0x5114701c,al
  406177:	(bad)  
  406179:	pop    esi
  40617a:	add    BYTE PTR [esi],dh
  40617c:	pop    esp
  40617d:	fpatan 
  40617f:	ret    
  406180:	xor    bl,BYTE PTR [edi+0x75]
  406183:	std    
  406184:	inc    ebx
  406185:	jmp    0xbb487f95
  40618a:	sub    BYTE PTR [eax+0x20416c32],ch
  406190:	inc    edx
  406191:	pop    edi
  406192:	mov    DWORD PTR [esi+ebx*1-0x56020016],ebp
  406199:	push   es
  40619a:	(bad)  
  40619b:	jl     0x40613b
  40619d:	pop    ebp
  40619e:	xor    eax,0xffd53592
  4061a3:	shr    BYTE PTR [edi],1
  4061a5:	dec    ebp
  4061a6:	(bad)  
  4061a7:	fiadd  WORD PTR ds:0x6964f7d9
  4061ad:	jbe    0x4061ff
  4061af:	into   
  4061b0:	jns    0x4061ac
  4061b2:	(bad)  
  4061b3:	cmp    al,0x31
  4061b5:	pop    edi
  4061b6:	xor    eax,0x44000022
  4061bb:	aad    0xff
  4061bd:	rol    BYTE PTR [edi+0x4d],0xff
  4061c1:	scas   al,BYTE PTR es:[edi]
  4061c2:	aad    0xd8
  4061c4:	out    dx,eax
  4061c5:	adc    esi,DWORD PTR ds:0xc3c9755f
  4061cb:	call   0xbb39f7db
  4061d0:	sub    BYTE PTR [eax],ch
  4061d2:	sub    eax,0xa3b1fd6c
  4061d7:	pop    ebp
  4061d8:	mov    DWORD PTR [ecx+edx*4],esp
  4061db:	pop    DWORD PTR [ebp-0x77]
  4061de:	add    bl,BYTE PTR [edi+0x75]
  4061e1:	lds    esp,FWORD PTR [ebx+0x49660be7]
  4061e7:	mov    ecx,0x6c32a828
  4061ec:	in     eax,0x21
  4061ee:	sbb    DWORD PTR [ebp-0x77],0xffffffa4
  4061f2:	mov    ss,WORD PTR [ecx+0x1174007d]
  4061f8:	je     0x40737a
  4061fe:	dec    ebx
  4061ff:	test   DWORD PTR fs:[eax],0x8a95f7
  406206:	fcom   DWORD PTR [ecx]
  406208:	cmp    DWORD PTR [ebp+0x1c],0x11
  40620c:	je     0x40735a
  406212:	daa    
  406213:	pop    esp
  406214:	daa    
  406215:	jmp    FWORD PTR ds:0x5a2ae759
  40621b:	loop   0x40621b
  40621d:	inc    DWORD PTR [eax]
  40621f:	add    BYTE PTR ds:0x9075feed,bl
  406225:	mov    ecx,0xe397c280
  40622a:	(bad)  
  40622b:	jne    0x4061bd
  40622d:	jecxz  0x4062a3
  40622f:	or     BYTE PTR [eax+0x5a],dh
  406232:	sar    edi,0x67
  406235:	jecxz  0x4062ab
  406237:	hlt    
  406238:	ja     0x40629f
  40623a:	pop    es
  40623b:	call   0x3f3843
  406240:	leave  
  406241:	ins    BYTE PTR es:[edi],dx
  406242:	daa    
  406243:	adc    ecx,DWORD PTR [eax-0xc]
  406246:	mov    ebp,0x74e44575
  40624b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40624d:	gs pop es
  40624f:	call   0x3f3853
  406254:	mov    bl,0x12
  406256:	push   DWORD PTR [ebp-0x40]
  406259:	loop   0x4062cf
  40625b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625d:	gs pop es
  40625f:	call   0x3f3967
  406264:	xchg   DWORD PTR [ebp-0x15],esp
  406267:	(bad)  
  406268:	in     eax,dx
  406269:	pop    eax
  40626a:	out    0x3c,eax
  40626c:	pop    edx
  40626d:	jecxz  0x40626d
  40626f:	xor    DWORD PTR [ecx],0x48
  406272:	add    BYTE PTR [di+0x68],bh
  406276:	test   BYTE PTR [ebp-0x2f],bh
  406279:	outs   dx,BYTE PTR ds:[esi]
  40627a:	test   BYTE PTR [esi],0xba
  40627d:	mov    bh,0x67
  40627f:	jmp    DWORD PTR [ecx]
  406281:	test   DWORD PTR es:[edi],0x2bc90000
  406288:	inc    ebx
  406289:	dec    esi
  40628b:	add    esi,edi
  40628d:	imul   esi,DWORD PTR [ecx],0xc907f6fe
  406293:	mov    edi,0xdb6ff42
  406298:	div    ebx
  40629a:	cdq    
  40629b:	dec    esi
  40629c:	inc    esi
  40629d:	jmp    DWORD PTR [esi-0x760409a3]
  4062a3:	inc    esi
  4062a4:	inc    esi
  4062a5:	call   DWORD PTR [esi-0x66080993]
  4062ab:	pop    esi
  4062ac:	inc    esi
  4062ad:	inc    DWORD PTR [esi-0x761009c3]
  4062b3:	jbe    0x4062fb
  4062b5:	push   DWORD PTR [esi+0x4d]
  4062b8:	imul   bl
  4062ba:	pop    ecx
  4062bb:	outs   dx,BYTE PTR ds:[esi]
  4062bc:	inc    esi
  4062bd:	jmp    DWORD PTR [esi-0x63]
  4062c0:	mul    bl
  4062c2:	dec    ecx
  4062c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062c4:	inc    edi
  4062c5:	call   DWORD PTR [esi-0x4d]
  4062c8:	inc    ebp
  4062c9:	and    al,0x31
  4062cb:	and    BYTE PTR [ebp-0x14],bh
  4062ce:	mov    al,0xb6
  4062d0:	jae    0x4062c9
  4062d2:	ds test ebx,ebx
  4062d5:	adc    dh,BYTE PTR [ecx]
  4062d7:	fidiv  WORD PTR [eax-0x3d612998]
  4062dd:	dec    DWORD PTR [esi+0x314133b9]
  4062e3:	adc    eax,0x6d703399
  4062e8:	fisttp DWORD PTR [eax+eax*1-0x57ebbe00]
  4062ef:	add    ebx,DWORD PTR [ecx-0x13ce574]
  4062f5:	repz jp 0x40632c
  4062f8:	jo     0x40630e
  4062fa:	dec    esi
  4062fb:	idiv   BYTE PTR [edx]
  4062fd:	pop    ebx
  4062fe:	mov    esp,0x3eedcefb
  406303:	jo     0x4062e3
  406305:	in     al,dx
  406306:	fld    DWORD PTR [ebx]
  406308:	(bad)  
  406309:	call   0xdbe8:0xd5025bc1
  406310:	shl    DWORD PTR [edi],cl
  406312:	test   al,0x3
  406314:	dec    ecx
  406315:	inc    ebx
  406316:	fcmovb st,st(2)
  406318:	mov    dh,0xf3
  40631a:	dec    ebp
  40631b:	xor    al,0xf0
  40631d:	adc    edx,DWORD PTR [ecx-0x172a9d4c]
  406323:	fld    TBYTE PTR [ebx+0x27]
  406326:	test   al,0x3
  406328:	xchg   esi,eax
  406329:	loope  0x406307
  40632b:	jo     0x406331
  40632d:	or     al,0xd1
  40632f:	sub    eax,DWORD PTR [edi+0x22dcde5b]
  406335:	adc    al,0xc6
  406337:	scas   al,BYTE PTR es:[edi]
  406338:	or     esp,ecx
  40633a:	adc    al,0xc5
  40633c:	outs   dx,BYTE PTR ds:[esi]
  40633d:	repz std 
  40633f:	aaa    
  406340:	lock adc edx,DWORD PTR [ecx+0x26]
  406344:	and    eax,0x32dbe8d5
  406349:	and    BYTE PTR [eax],ch
  40634b:	add    al,0xd9
  40634d:	data16 fcmovb st,st(4)
  406350:	add    BYTE PTR [eax],al
  406352:	inc    esi
  406353:	repz repz aaa 
  406356:	lock adc edx,DWORD PTR [esi+0x145b2af9]
  40635d:	cld    
  40635e:	push   ss
  40635f:	or     DWORD PTR [edi+0x2489266f],eax
  406365:	jo     0x4062e8
  406367:	pop    ebx
  406368:	add    ah,bh
  40636a:	push   ss
  40636b:	pop    edx
  40636c:	xor    eax,0xffd52c12
  406371:	push   eax
  406372:	ret    0x81
  406375:	jmp    0xd3b5fe75
  40637a:	outs   dx,DWORD PTR ds:[esi]
  40637b:	shl    edi,1
  40637d:	jmp    0x2e4077b4
  406382:	clc    
  406383:	jmp    si
  406386:	xor    dl,BYTE PTR [edx+ebp*2]
  406389:	jmp    0xe9a9be86
  40638e:	call   0x3eecefed
  406393:	les    ecx,FWORD PTR [esp+eiz*2+0x16ff6339]
  40639a:	fstp   QWORD PTR [ecx+0x75]
  40639d:	adc    DWORD PTR [esi],ebx
  40639f:	loope  0x40639c
  4063a1:	adc    DWORD PTR [edx+eax*4],esp
  4063a4:	add    cl,ch
  4063a6:	fwait
  4063a7:	call   0x1d67:0xd3fbeb74
  4063ae:	sub    eax,0x89e5ffd5
  4063b3:	push   cs
  4063b4:	call   0xf7406447
  4063b9:	pop    edx
  4063ba:	jmp    DWORD PTR [edx-0x1e]
  4063bd:	mov    BYTE PTR [ebp-0xa5182b],al
  4063c3:	sbb    DWORD PTR [ebx-0x30590b8e],eax
  4063c9:	pop    edx
  4063ca:	mov    DWORD PTR [edx+eiz*8+0x62],ebp
  4063ce:	jmp    FWORD PTR [esi-0x610f5f21]
  4063d4:	xlat   BYTE PTR ds:[ebx]
  4063d5:	pop    edx
  4063d6:	call   DWORD PTR [edi*1-0x38680a8e]
  4063dd:	pop    edx
  4063de:	call   DWORD PTR [edx+eiz*4+0x61]
  4063e2:	inc    DWORD PTR [eax]
  4063e4:	scas   eax,DWORD PTR es:[edi]
  4063e5:	mov    ebp,0xea9fc3e1
  4063ea:	inc    BYTE PTR [ebp-0x60]
  4063ed:	mov    esi,0xea05ff94
  4063f2:	out    0x2f,eax
  4063f4:	xchg   BYTE PTR ds:0x5d4ac900,dl
  4063fa:	call   DWORD PTR [ebx+edx*4-0x47]
  4063fe:	add    ah,0x7c
  406401:	cmp    edi,edi
  406403:	imul   edx,esi,0x800874ea
  406409:	loop   0x4063ca
  40640b:	call   FWORD PTR [edi]
  40640d:	fadd   DWORD PTR [esp+edi*8-0x10]
  406411:	call   0x874:0xead84132
  406418:	and    BYTE PTR [edx+0xfffe],ah
  40641e:	pop    ds
  40641f:	cmp    edi,edi
  406421:	addr16 mov esp,0xc0004126
  406427:	call   0x5b34:0xea884132
  40642e:	jno    0x406480
  406430:	jmp    edi
  406432:	dec    eax
  406433:	iret   
  406434:	(bad)  
  406435:	inc    DWORD PTR [ebx+0x380f73d5]
  40643b:	inc    eax
  40643c:	(bad)  
  40643d:	jne    0x4063cf
  40643f:	mov    ebp,0xe77ffc94
  406444:	out    0x85,eax
  406446:	fwait
  406447:	out    0xfe,eax
  406449:	push   0x48
  40644b:	cmp    eax,0x100928cd
  406450:	push   0xff564b62
  406455:	(bad)  
  406456:	gs dec esp
  406458:	sub    BYTE PTR [ecx+0x48],al
  40645b:	mov    ebp,0x8231c685
  406460:	ins    DWORD PTR es:[edi],dx
  406461:	or     esi,ecx
  406463:	(bad)  
  406464:	cld    
  406465:	dec    edi
  406466:	adc    DWORD PTR [edx+0x60907f7],0x9316ff70
  406470:	leave  
  406471:	ret    0xea0e
  406474:	fcos   
  406476:	mov    gs,WORD PTR [edi+0x30]
  406479:	inc    ecx
  40647a:	xor    DWORD PTR [ebx-0x44],eax
  40647d:	xor    dh,BYTE PTR [eax+0x6b]
  406480:	fild   DWORD PTR [ecx]
  406482:	add    BYTE PTR [eax],al
  406484:	xor    DWORD PTR [ebx-0x7d],ebp
  406487:	call   0xffad8e10
  40648c:	sub    ch,BYTE PTR [ebx]
  40648e:	clc    
  40648f:	push   cs
  406490:	cmp    DWORD PTR [ebx+0x6c],0xc1d33975
  406497:	sti    
  406498:	(bad)  
  406499:	xor    DWORD PTR [edx+esi*1-0xe],ebx
  40649d:	stc    
  40649e:	ins    BYTE PTR es:[edi],dx
  40649f:	push   0x31
  4064a1:	xchg   ebx,eax
  4064a2:	cmp    eax,0xdb6af028
  4064a7:	popa   
  4064a8:	bound  ebp,QWORD PTR [ebx+eax*1+0x36b3368]
  4064af:	or     BYTE PTR [ecx-0x7100ba6a],0x75
  4064b6:	inc    ebx
  4064b7:	je     0x4064ef
  4064b9:	sbb    edx,esp
  4064bb:	inc    BYTE PTR [ebx+eiz*2]
  4064be:	pop    ebx
  4064bf:	sbb    DWORD PTR [ebp+0x41],esi
  4064c2:	ins    BYTE PTR es:[edi],dx
  4064c3:	call   0xffad1300
  4064c8:	(bad)  [esp+ebp*2+0x75]
  4064cc:	sub    DWORD PTR [ebx-0x17],eax
  4064cf:	sti    
  4064d0:	push   esi
  4064d1:	mov    eax,ds:0x1f4e22d9
  4064d6:	cld    
  4064d7:	out    0xc1,eax
  4064d9:	adc    esp,DWORD PTR [ebp-0x312c194]
  4064df:	ins    BYTE PTR es:[edi],dx
  4064e0:	mov    esp,0x2ae5810b
  4064e5:	pop    eax
  4064e6:	mov    gs,WORD PTR [eax+eax*1+0x0]
  4064ea:	pushf  
  4064eb:	pop    eax
  4064ec:	xchg   dh,dh
  4064ee:	ss ins BYTE PTR es:[edi],dx
  4064f0:	pop    ds
  4064f1:	inc    esp
  4064f2:	push   ss
  4064f3:	pop    eax
  4064f4:	mov    al,ds:0x14143541
  4064f9:	jns    0x406510
  4064fb:	xchg   esp,eax
  4064fc:	sub    eax,0xd2bf676f
  406501:	add    ecx,DWORD PTR [ebx+0x36f6560f]
  406507:	ins    BYTE PTR es:[edi],dx
  406508:	jmp    0x70984b50
  40650d:	(bad)  
  40650e:	fimul  DWORD PTR [ebx-0x2af1080c]
  406514:	call   0x11c7191
  406519:	ret    
  40651a:	(bad)  
  40651b:	xlat   BYTE PTR ds:[ebx]
  40651c:	in     eax,0x3
  40651e:	inc    ebp
  40651f:	jecxz  0x4064b1
  406521:	retf   0xd502
  406524:	call   0x7411fbfd
  406529:	add    esi,DWORD PTR [ecx]
  40652b:	or     ebp,DWORD PTR [ecx]
  40652d:	idiv   DWORD PTR [edi]
  40652f:	mov    esi,0x576adb10
  406534:	not    dl
  406536:	push   ss
  406537:	adc    al,0xe9
  406539:	pop    esp
  40653a:	(bad)  
  40653b:	in     al,dx
  40653c:	pop    ebx
  40653d:	xor    al,dh
  40653f:	adc    edi,DWORD PTR [ecx]
  406541:	imul   edi,esp,0xb
  406544:	ror    esi,0x57
  406547:	push   edi
  406548:	into   
  406549:	pop    esp
  40654a:	scas   eax,DWORD PTR es:[edi]
  40654b:	push   edx
  40654c:	(bad)  
  40654d:	imul   eax,DWORD PTR [eax],0x0
  406550:	leave  
  406551:	out    dx,al
  406552:	hlt    
  406553:	les    edx,FWORD PTR [esi-0x42]
  406556:	inc    eax
  406558:	and    al,BYTE PTR [ecx-0x68b81700]
  40655e:	je     0x406566
  406560:	arpl   WORD PTR [edi+0x3a],bp
  406563:	lods   eax,DWORD PTR ds:[esi]
  406564:	retf   0x5056
  406567:	add    DWORD PTR ds:0x54fef14,esi
  40656d:	loopne 0x4065a2
  40656f:	sub    BYTE PTR ds:0x1af4fec4,dh
  406575:	outs   dx,DWORD PTR ds:[esi]
  406576:	sub    al,0x8e
  406578:	call   0xff57:0x6f11e857
  40657f:	push   edx
  406580:	xor    al,0xce
  406582:	jg     0x4065a3
  406584:	sub    eax,0x56aff9e1
  406589:	and    eax,eax
  40658b:	nop
  40658c:	pop    edx
  40658d:	push   edi
  40658e:	inc    DWORD PTR [esi+0x67]
  406591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406592:	cmp    dh,ah
  406594:	loope  0x40651d
  406596:	(bad)  
  406597:	mov    esp,0xe1755756
  40659c:	push   0xffffffa0
  40659e:	mov    edi,0x5db74a26
  4065a3:	xor    BYTE PTR [edi+0x10],ch
  4065a6:	add    BYTE PTR [edi+ebp*1+0x32e96868],bh
  4065ad:	addr16 mov esi,0x411fc391
  4065b3:	jmp    0xe14b65b8
  4065b8:	or     esi,esi
  4065ba:	or     DWORD PTR [esi],0x571306e8
  4065c0:	call   DWORD PTR [ecx+0x34]
  4065c3:	adc    al,0xef
  4065c5:	lahf   
  4065c6:	pop    edx
  4065c7:	jp     0x4065fd
  4065c9:	sub    BYTE PTR ds:0xdbdd7557,dh
  4065cf:	loopne 0x4065d8
  4065d1:	add    BYTE PTR [eax-0x68001a40],al
  4065d7:	pop    ss
  4065d8:	ret    0x5808
  4065db:	inc    ebx
  4065dc:	mov    ch,ah
  4065de:	xchg   edi,eax
  4065df:	arpl   WORD PTR [ebx],cx
  4065e1:	call   0x3f37f1
  4065e6:	inc    ebx
  4065e7:	shl    BYTE PTR [ebx+0x1a],cl
  4065ea:	xor    BYTE PTR [edi+0x42184134],cl
  4065f0:	out    0xd8,eax
  4065f2:	int    0xea
  4065f4:	(bad)  
  4065f5:	push   eax
  4065f6:	cmp    cl,ch
  4065f8:	je     0x406602
  4065fa:	mov    al,0x76
  4065fc:	(bad)  
  4065fd:	call   DWORD PTR [edi-0x683e2a47]
  406603:	jmp    0x8b55:0x1200c2c8
  40660a:	je     0x40659a
  40660c:	(bad)  
  40660d:	cld    
  40660e:	repnz adc DWORD PTR [edx+0x8],ebp
  406612:	ja     0x406678
  406614:	pop    es
  406615:	call   0x40118a
  40661a:	add    BYTE PTR [eax],al
  40661c:	push   ecx
  40661d:	push   esp
  40661e:	sti    
  40661f:	push   0xffffffd8
  406621:	cmp    DWORD PTR [ebx+0x35],esi
  406624:	mov    DWORD PTR [ecx],edx
  406626:	push   0xff50dca1
  40662b:	dec    BYTE PTR [ebp-0x67bed7ba]
  406631:	mov    ecx,0xea37c4bd
  406636:	or     al,al
  406638:	sbb    al,0x5
  40663a:	push   eax
  40663b:	push   0xbeef1199
  406640:	test   al,0xea
  406642:	je     0x40664c
  406644:	pusha  
  406645:	ins    DWORD PTR es:[edi],dx
  406646:	loop   0x406647
  406648:	push   edi
  406649:	mov    eax,0x3e31c18d
  40664e:	imul   ebp,DWORD PTR [edx+0x31],0xf034efd3
  406655:	push   0xffffffdb
  406657:	lds    ebx,FWORD PTR ds:0x4ff042c
  40665d:	add    bl,BYTE PTR [ebx]
  40665f:	inc    ecx
  406660:	xor    DWORD PTR [ebx+0x79],edx
  406663:	les    edi,FWORD PTR [esi]
  406665:	scas   al,BYTE PTR es:[edi]
  406666:	std    
  406667:	mov    edi,0x67d35ebd
  40666c:	xor    BYTE PTR [ebx+0x58],ch
  40666f:	mov    esi,0x7ef8681
  406674:	or     DWORD PTR ds:0x8316ff65,ebx
  40667a:	leave  
  40667b:	ror    BYTE PTR [esi],0xde
  40667e:	(bad)  
  406680:	add    BYTE PTR [eax],al
  406682:	mov    gs,edi
  406684:	cs inc ecx
  406686:	xor    DWORD PTR [ebx+0x3],eax
  406689:	xor    eax,0x35686b70
  40668e:	mov    dl,BYTE PTR [ebx+eax*8]
  406691:	dec    esi
  406693:	dec    edx
  406694:	aas    
  406695:	(bad)  
  406696:	fisub  WORD PTR [ecx+0x43]
  406699:	je     0x4066c1
  40669b:	jnp    0x406670
  40669d:	inc    BYTE PTR [ebx+esi*2+0x5b]
  4066a1:	or     al,dh
  4066a3:	and    eax,0x2c04e869
  4066a8:	imul   edi,edi,0x83db6b4b
  4066ae:	lods   al,BYTE PTR fs:[esi]
  4066b0:	add    ebp,DWORD PTR [eax+0x59]
  4066b3:	inc    eax
  4066b4:	ret    0x9fff
  4066b7:	xchg   edi,eax
  4066b8:	int3   
  4066b9:	sub    al,dh
  4066bb:	push   0x5b
  4066bd:	ss jne 0x40671d
  4066c0:	push   0xf7de710b
  4066c5:	dec    edi
  4066c6:	loope  0x4066db
  4066c8:	out    0xee,al
  4066ca:	cs ins BYTE PTR es:[edi],dx
  4066cc:	leave  
  4066cd:	imul   ebp,DWORD PTR [esi+0x54],0x5471fcc1
  4066d4:	into   
  4066d5:	fstp   QWORD PTR [esi-0x14]
  4066d8:	jae    0x406708
  4066da:	lock adc edx,DWORD PTR [ecx-0x21]
  4066de:	add    eax,0xfc68e8d3
  4066e3:	mov    eax,0xc2ff
  4066e8:	ds ins BYTE PTR es:[edi],dx
  4066ea:	cmc    
  4066eb:	aas    
  4066ec:	ss push esp
  4066ee:	repnz inc ebx
  4066f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f1:	and    edi,DWORD PTR [ecx]
  4066f3:	aam    0x27
  4066f5:	retf   0x5be0
  4066f8:	out    0x52,eax
  4066fa:	xchg   BYTE PTR [eax+0x9],ch
  4066fd:	ss test eax,0xd4bf0e68
  406703:	push   0x4b811c7c
  406708:	call   DWORD PTR [ebx+0x66]
  40670b:	fstp   QWORD PTR [eax]
  40670d:	push   ebx
  40670e:	aam    0xfb
  406710:	(bad)  
  406711:	bound  edx,QWORD PTR [edi+0x68]
  406714:	out    0xbe,al
  406716:	or     DWORD PTR [ecx+0x64],ebp
  406719:	sbb    al,0x51
  40671b:	aas    
  40671c:	xlat   BYTE PTR ds:[ebx]
  40671d:	push   ebx
  40671e:	ds push 0xee365044
  406724:	cs cmp al,0xf7
  406727:	test   eax,0x453053be
  40672c:	sub    eax,0x9d7cb414
  406731:	push   ebx
  406732:	pushf  
  406733:	test   DWORD PTR [esi-0x6197dab4],0xe4ef291f
  40673d:	mov    ebx,0x13f02e5e
  406742:	add    BYTE PTR [ecx-0x113b5f16],bl
  406748:	push   ss
  406749:	in     al,0x4f
  40674b:	cmp    DWORD PTR [eax],eax
  40674d:	add    BYTE PTR [ebp+0x53],dl
  406750:	dec    esi
  406752:	xchg   edi,eax
  406753:	mov    esp,0x536c1c98
  406758:	dec    edi
  406759:	into   
  40675a:	pusha  
  40675b:	sbb    ebp,eax
  40675d:	sbb    dl,al
  40675f:	push   edx
  406760:	jmp    DWORD PTR [ecx]
  406762:	ins    DWORD PTR es:[edi],dx
  406763:	adc    al,0x0
  406765:	(bad)  
  406766:	(bad)  
  406767:	mov    esp,0x5375f4a7
  40676c:	dec    edi
  40676d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40676e:	inc    eax
  40676f:	sbb    ebp,eax
  406771:	ficom  WORD PTR [ecx+0x531ff53]
  406777:	adc    eax,0xbbd77e00
  40677c:	mov    ch,0xbc
  40677e:	in     eax,dx
  40677f:	push   edx
  406780:	dec    edi
  406781:	jle    0x406783
  406783:	sbb    ebp,eax
  406785:	ret    0x5391
  406788:	inc    DWORD PTR [ecx+0x66ff92ee]
  40678e:	xor    al,0x56
  406790:	or     cl,ch
  406792:	add    DWORD PTR [esi+0x50716aec],ebx
  406798:	push   0xffffffe9
  40679a:	clc    
  40679b:	sbb    edi,edi
  40679d:	mov    esp,0x7c793ada
  4067a2:	push   esi
  4067a3:	push   ebx
  4067a4:	mov    DWORD PTR [esi+ecx*2-0x3fd1e642],ebp
  4067ab:	sbb    ch,al
  4067ad:	imul   ecx,DWORD PTR [esi+0x53],0x93ff
  4067b4:	push   ebx
  4067b5:	push   ebx
  4067b6:	jne    0x406799
  4067b8:	or     cl,dl
  4067ba:	dec    BYTE PTR [esi]
  4067bc:	push   ss
  4067bd:	mov    esi,0x452f001b
  4067c2:	pop    es
  4067c3:	call   0x3f2184
  4067c8:	jg     0x40680d
  4067ca:	sti    
  4067cb:	inc    DWORD PTR ds:0xcd93e74f
  4067d1:	mov    ecx,0x529ac9fe
  4067d6:	call   DWORD PTR [ebx+edx*8-0x16]
  4067da:	imul   eax,DWORD PTR [eax],0x4134c6f0
  4067e0:	dec    eax
  4067e1:	outs   dx,BYTE PTR ds:[esi]
  4067e2:	loopne 0x406819
  4067e4:	sbb    DWORD PTR [eax],ebx
  4067e6:	push   DWORD PTR ds:0x413123
  4067ec:	jo     0x406837
  4067ee:	ret    0x8fff
  4067f1:	dec    ebp
  4067f2:	mov    edi,0xfe662574
  4067f7:	jne    0x406821
  4067f9:	mov    ebx,0xb9580c74
  4067fe:	je     0x406808
  406800:	rol    BYTE PTR [ebx-0x1270001c],0xdd
  406807:	mov    edi,0x69ba7f
  40680c:	xor    ch,al
  40680e:	xor    al,0x41
  406810:	or     BYTE PTR [esi-0x20],ch
  406813:	xor    eax,0x2681599
  406818:	add    BYTE PTR [eax],al
  40681a:	fcom   DWORD PTR ds:0xd368e880
  406820:	(bad)  
  406821:	jmp    ebx
  406823:	aad    0x73
  406825:	adc    eax,0x1074baa8
  40682a:	inc    DWORD PTR [ebx+0xb]
  40682d:	push   eax
  40682e:	cmove  eax,DWORD PTR [edi]
  406831:	call   0x3f5981
  406836:	inc    eax
  406837:	stos   BYTE PTR es:[edi],al
  406838:	mov    edi,0x662a31ff
  40683d:	jne    0x406880
  40683f:	and    dh,al
  406841:	or     ecx,DWORD PTR [ecx]
  406843:	xor    dh,BYTE PTR [eax]
  406845:	inc    ecx
  406846:	xor    DWORD PTR [edx-0x11],edx
  406849:	pop    es
  40684a:	cdq    
  40684b:	adc    DWORD PTR [edi-0x1],ebx
  40684e:	jle    0x406844
  406850:	inc    eax
  406851:	or     al,0x31
  406853:	adc    BYTE PTR [ecx-0x14],bh
  406856:	mov    dl,0x77
  406858:	push   0xf9d5316a
  40685d:	(bad)  
  40685e:	in     al,0x32
  406860:	pop    ebx
  406861:	mov    esi,0x89655a95
  406866:	hlt    
  406867:	mov    ds,esp
  406869:	inc    DWORD PTR [esi+0x5a]
  40686c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40686d:	push   0xffc24873
  406872:	aaa    
  406873:	xor    ah,bh
  406875:	out    0x91,eax
  406877:	mov    dl,0x65
  406879:	call   FWORD PTR [ecx+0xef033c]
  40687f:	add    bh,bl
  406881:	adc    dh,BYTE PTR [edi]
  406883:	xor    eax,0x75643b70
  406888:	cmp    DWORD PTR [ebx-0x35f9014a],esp
  40688e:	fs jne 0x40688e
  406891:	shr    esi,0x7
  406894:	or     DWORD PTR ds:0x3eeffa8,ecx
  40689a:	inc    edx
  40689b:	add    al,0x31
  40689d:	nop
  40689e:	js     0x40688c
  4068a0:	mov    al,0xf6
  4068a2:	dec    ebx
  4068a3:	not    esi
  4068a5:	fnstenv [esi+0x45]
  4068a8:	int    0xaa
  4068aa:	fs jne 0x4068e2
  4068ad:	or     ch,BYTE PTR [edi]
  4068af:	pop    ebx
  4068b0:	or     BYTE PTR [ebx+eax*1-0x18],bh
  4068b4:	pushf  
  4068b5:	adc    edi,DWORD PTR [eax+0x4]
  4068b8:	xor    DWORD PTR ds:0x6badf529,ebx
  4068be:	call   0xa49999c6
  4068c3:	imul   esi,DWORD PTR [ecx],0x14
  4068c6:	jmp    0xf516dece
  4068cb:	fs cs adc al,0xe9
  4068cf:	fnstcw WORD PTR [esi-0x46]
  4068d2:	call   0xe8fadfb0
  4068d7:	jbe    0x4068cd
  4068d9:	inc    edi
  4068da:	cmp    DWORD PTR [edi-0x54],esi
  4068dd:	inc    edi
  4068de:	fisub  WORD PTR [esi+ebx*2-0x1d]
  4068e2:	int    0xee
  4068e4:	add    BYTE PTR [eax],al
  4068e6:	pop    esi
  4068e7:	push   eax
  4068e8:	cmp    al,0x68
  4068ea:	pop    ecx
  4068eb:	mov    eax,0x1d310357
  4068f0:	test   eax,0x523b35ef
  4068f5:	add    dh,BYTE PTR [ecx]
  4068f7:	adc    al,0x11
  4068f9:	cmp    BYTE PTR [ecx-0x2b],bl
  4068fc:	call   0x81610565
  406901:	jns    0x4068f6
  406903:	dec    edi
  406904:	mov    ss,ebx
  406906:	stos   DWORD PTR es:[edi],eax
  406907:	fs je  0x406988
  40690a:	add    eax,0x61647e48
  40690f:	loop   0x406891
  406911:	jmp    0x7aaeb906
  406916:	lods   al,BYTE PTR ds:[esi]
  406917:	inc    esp
  406918:	pop    esi
  406919:	fs out dx,al
  40691b:	cmp    al,0x39
  40691d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40691e:	out    0x4f,al
  406920:	ret    
  406921:	add    ecx,DWORD PTR [ecx-0x22]
  406924:	push   ss
  406925:	ret    
  406926:	(bad)  
  406927:	dec    esi
  406928:	jl     0x40699d
  40692a:	(bad)  
  40692b:	dec    edi
  40692c:	ds fs cld 
  40692f:	jmp    0x19e7:0x4ff2ffff
  406936:	jae    0x406987
  406938:	push   DWORD PTR [eax+0x2f]
  40693b:	cmp    bh,dh
  40693d:	push   ds
  40693e:	or     eax,0x9280ffba
  406943:	or     DWORD PTR [ecx-0x17],eax
  406946:	or     eax,0xfef089
  40694b:	add    BYTE PTR [edx],dl
  40694d:	dec    edi
  40694e:	push   DWORD PTR [ecx+edi*2-0x2516bf04]
  406955:	add    ecx,0x859d12ee
  40695b:	aad    0xa
  40695d:	dec    edi
  40695e:	call   DWORD PTR [ebx+0x2d]
  406961:	mov    esp,0x4f741f56
  406966:	(bad)  
  406967:	xchg   esp,eax
  406968:	std    
  406969:	inc    esi
  40696a:	inc    esi
  40696c:	ror    BYTE PTR [eax],cl
  40696e:	pop    ebx
  40696f:	adc    BYTE PTR [edi+ecx*2-0x19],ch
  406973:	pop    ebp
  406974:	hlt    
  406975:	dec    esi
  406976:	jmp    DWORD PTR [eax-0x58]
  406979:	cmp    al,0xf7
  40697b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697c:	xchg   edx,eax
  40697d:	mov    edx,0x91410ff
  406982:	inc    ecx
  406983:	jmp    0x9730f31b
  406988:	xchg   edx,eax
  406989:	dec    edi
  40698a:	(bad)  
  40698b:	mov    esp,0xe940fbcf
  406990:	call   0x859d:0x9276c0c6
  406997:	mov    DWORD PTR [edx+0x4f],ebx
  40699a:	push   DWORD PTR [eax+edi*4+0x6b]
  40699e:	neg    DWORD PTR [esi+0x52]
  4069a1:	in     al,0x67
  4069a3:	fidivr DWORD PTR [eax]
  4069a5:	aad    0xff
  4069a7:	dec    ebp
  4069a8:	mov    eax,0x7700f743
  4069ad:	mov    bl,0xfe
  4069af:	xor    eax,0xff930000
  4069b4:	inc    eax
  4069b5:	add    BYTE PTR [eax-0x79],dh
  4069b8:	sar    bh,0x7
  4069bb:	pop    ds
  4069bc:	shl    BYTE PTR [ecx+esi*1-0x69],0xbd
  4069c1:	fdivr  DWORD PTR [edi]
  4069c3:	mov    bl,0xfe
  4069c5:	add    al,0xbd
  4069c7:	inc    edx
  4069c8:	(bad)  
  4069c9:	xor    bh,dh
  4069cb:	pushf  
  4069cc:	fdivr  st(7),st
  4069ce:	aaa    
  4069cf:	mov    bl,0x4f
  4069d1:	call   0x3fde4e
  4069d6:	xor    ecx,DWORD PTR [edx+ecx*1-0x40]
  4069da:	cld    
  4069db:	sbb    al,0x50
  4069dd:	call   0x3fde4e
  4069e2:	(bad)  
  4069e3:	fdivr  st(7),st
  4069e6:	xchg   DWORD PTR [ecx+0x12480014],esi
  4069ec:	cmp    DWORD PTR [ebp-0x11684],0x58
  4069f3:	fs add bp,0xffbe
  4069f8:	idiv   bh
  4069fa:	xchg   DWORD PTR [edx],edx
  4069fc:	je     0x406a5a
  4069fe:	fwait
  4069ff:	je     0x4069e9
  406a01:	test   edi,0x5b73ffb2
  406a07:	inc    eax
  406a08:	(bad)  
  406a09:	call   DWORD PTR [edi+0x75ff73]
  406a0f:	mov    edx,0xb287ba6a
  406a14:	(bad)  
  406a15:	mov    ch,0x0
  406a17:	add    BYTE PTR [edx+ebp*8+0x6c87fffe],dh
  406a1e:	pop    es
  406a1f:	call   0x4019bb
  406a24:	xchg   DWORD PTR [eax+ebp*8+0x61e631f7],ebp
  406a2b:	call   FWORD PTR [ebx+esi*1+0x6b]
  406a2f:	mov    cl,0x8b
  406a31:	(bad)  
  406a32:	popa   
  406a33:	(bad)  
  406a34:	jl     0x406a0d
  406a36:	pop    ecx
  406a37:	(bad)  
  406a38:	mov    esi,0xc907d806
  406a3d:	call   0xe097:0xf6aeff9d
  406a44:	sahf   
  406a45:	cs (bad) 
  406a47:	jmp    DWORD PTR [ebx+esi*1]
  406a4a:	imul   edx,DWORD PTR [ebp-0x9de125],0xffffffc4
  406a51:	neg    DWORD PTR [ecx-0x1]
  406a54:	xchg   BYTE PTR [esi-0x29],cl
  406a57:	pop    es
  406a58:	mov    DWORD PTR [eax-0x63],esp
  406a5b:	push   DWORD PTR [esi+0x3e]
  406a5e:	xchg   edi,eax
  406a5f:	in     al,0x66
  406a61:	ss popa 
  406a63:	call   0xffa21b28
  406a68:	pop    esi
  406a69:	mov    al,0x70
  406a6b:	not    DWORD PTR [esi+0x5e]
  406a6e:	ins    BYTE PTR es:[edi],dx
  406a6f:	xchg   BYTE PTR [esi+edx*2+0x637cff61],cl
  406a76:	pop    ecx
  406a77:	(bad)  
  406a78:	ds push ebx
  406a7a:	fnstsw WORD PTR [eax+eax*1+0x617e3600]
  406a81:	mov    ch,0x11
  406a83:	scas   al,BYTE PTR es:[edi]
  406a84:	popa   
  406a85:	call   FWORD PTR [ecx]
  406a87:	sub    ebx,DWORD PTR [edi-0x6859e101]
  406a8d:	lock push ds
  406a8f:	sahf   
  406a90:	popa   
  406a91:	call   0xffa1432a
  406a96:	push   es
  406a97:	clc    
  406a98:	pop    ebx
  406a99:	jmp    0xffa12fe4
  406a9e:	test   BYTE PTR [edi+0x5f],0xe8
  406aa2:	sahf   
  406aa3:	adc    esi,DWORD PTR [esi+0x4]
  406aa6:	xor    DWORD PTR [ebx+0x2b],ebx
  406aa9:	or     al,0x31
  406aab:	out    0x61,eax
  406aad:	jo     0x406a61
  406aaf:	push   edi
  406ab0:	push   ecx
  406ab1:	out    dx,al
  406ab2:	into   
  406ab3:	mov    edx,0x1c3c60f1
  406ab8:	push   ecx
  406ab9:	fnstcw WORD PTR [eax+0x4c]
  406abc:	mov    ebp,DWORD PTR ss:[eax+edx*2+0x5c]
  406ac1:	(bad)  
  406ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac3:	jecxz  0x406a55
  406ac5:	hlt    
  406ac6:	pop    esp
  406ac7:	shr    eax,cl
  406ac9:	jmp    0x406a6a
  406acb:	push   es
  406acc:	test   al,0x3
  406ace:	xchg   esi,eax
  406acf:	push   es
  406ad0:	mov    dl,0x2a
  406ad2:	lock adc edx,DWORD PTR [ecx]
  406ad5:	sbb    eax,0xcfe4c71
  406ada:	jno    0x406aa3
  406adc:	fnsave [ebx+0x70e9130e]
  406ae2:	add    BYTE PTR [eax],al
  406ae4:	scas   eax,DWORD PTR es:[edi]
  406ae5:	dec    esp
  406ae6:	pop    esp
  406ae7:	pop    esp
  406ae8:	add    DWORD PTR [ebp+0x54],ecx
  406aeb:	or     al,0x49
  406aed:	jno    0x406aa6
  406aef:	pusha  
  406af0:	push   esi
  406af1:	cmp    esp,ecx
  406af3:	sahf   
  406af4:	dec    esi
  406af5:	dec    esp
  406af6:	je     0x406abe
  406af8:	ds jecxz 0x406b4b
  406afb:	es pop es
  406afd:	shr    eax,cl
  406aff:	jmp    0x406b38
  406b01:	push   es
  406b02:	sub    BYTE PTR [esi+ebp*1],al
  406b05:	add    al,BYTE PTR [edx+0x2b]
  406b08:	jo     0x406b1e
  406b0a:	xchg   ecx,eax
  406b0b:	or     cl,dh
  406b0d:	dec    ebx
  406b0e:	xchg   esi,eax
  406b0f:	or     al,0xf1
  406b11:	shl    ch,0xb3
  406b14:	xchg   esi,eax
  406b15:	push   ss
  406b16:	jmp    0xf48c328b
  406b1b:	pop    ebx
  406b1c:	popa   
  406b1d:	dec    ebx
  406b1e:	add    ah,bh
  406b20:	sub    bh,BYTE PTR [esi+ebp*2]
  406b23:	(bad)  
  406b24:	push   ecx
  406b25:	dec    ebx
  406b26:	call   0xff8c3168
  406b2b:	rol    DWORD PTR [edx+eax*1+0x41],1
  406b2f:	jmp    0x41482c85
  406b34:	jmp    0x51876a81
  406b39:	sar    ebx,0x3e
  406b3c:	out    0x13,eax
  406b3e:	call   0xff8c0036
  406b43:	and    ah,dh
  406b45:	(bad)  
  406b47:	mov    esp,0x38b50000
  406b4c:	and    DWORD PTR ds:0x16ff435e,0xb9fbd1a7
  406b56:	adc    ecx,eax
  406b58:	or     eax,DWORD PTR [esi]
  406b5a:	pop    ds
  406b5b:	out    dx,eax
  406b5c:	sub    BYTE PTR [eax+0x67fd3c32],ch
  406b62:	xor    dl,BYTE PTR [ebx+ecx*1]
  406b65:	sub    DWORD PTR [ecx-0x6f],eax
  406b68:	shr    eax,0x32
  406b6b:	adc    al,0xc7
  406b6d:	and    al,0xfd
  406b6f:	adc    eax,DWORD PTR [eax]
  406b71:	jmp    0xd585bea8
  406b76:	out    dx,al
  406b77:	adc    al,BYTE PTR [eax]
  406b79:	jmp    0xe9a9b6d6
  406b7e:	dec    eax
  406b7f:	dec    ebx
  406b80:	imul   ebp,ecx,0x19f3d1a1
  406b86:	rcl    BYTE PTR [eax+0x4b869ef4],0x50
  406b8d:	sahf   
  406b8e:	clc    
  406b8f:	inc    edx
  406b90:	call   FWORD PTR [ecx+edx*4]
  406b93:	cmp    al,0xcf
  406b95:	pop    edi
  406b96:	xor    eax,0xd8000b14
  406b9b:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff94
  406b9f:	adc    DWORD PTR [eax],eax
  406ba1:	add    BYTE PTR [eax],dh
  406ba3:	in     al,0x27
  406ba5:	inc    ecx
  406ba6:	fsubr  st,st(1)
  406ba8:	je     0x406bb6
  406baa:	and    dh,0xbe
  406bad:	inc    DWORD PTR [eax]
  406baf:	add    BYTE PTR [edi-0x80],bh
  406bb2:	mov    dl,al
  406bb4:	dec    ebp
  406bb5:	popf   
  406bb6:	hlt    
  406bb7:	idiv   DWORD PTR [edi-0x15]
  406bba:	dec    edi
  406bbb:	push   edx
  406bbc:	pusha  
  406bbd:	mov    dh,0xbe
  406bbf:	(bad)  
  406bc0:	call   FWORD PTR [eax-0x15080f7b]
  406bc6:	(bad)  
  406bc7:	call   0x40166c
  406bcc:	ret    0x6816
  406bcf:	pop    DWORD PTR [esi-0xa0100b1]
  406bd5:	fcomip st,st(6)
  406bd7:	(bad)  
  406bd8:	aas    
  406bd9:	jmp    0x406c0f
  406bdb:	pop    ebx
  406bdc:	popa   
  406bdd:	dec    edi
  406bde:	jmp    edi
  406be0:	jo     0x406b8b
  406be2:	(bad)  
  406be3:	call   DWORD PTR [ecx]
  406be5:	popf   
  406be6:	in     al,0xf7
  406be8:	pop    edi
  406be9:	jmp    0x68406c57
  406bee:	xor    eax,0xb4e94841
  406bf3:	lock ja 0x406bdf
  406bf6:	(bad)  
  406bf7:	jmp    DWORD PTR ds:0x5841288f
  406bfd:	mov    esi,0xe97fbf19
  406c02:	mov    BYTE PTR [ebp-0x11e94],al
  406c08:	jb     0x406c1a
  406c0a:	push   0xff510681
  406c0f:	inc    BYTE PTR [ebp+0xfff6e5]
  406c15:	add    BYTE PTR [ecx],dh
  406c17:	mov    ds:0x546a355e,al
  406c1c:	(bad)  
  406c1d:	dec    DWORD PTR [esi]
  406c1f:	nop
  406c20:	popf   
  406c21:	(bad)  
  406c22:	inc    ah
  406c24:	xchg   eax,esp
  406c26:	inc    dl
  406c28:	pop    ebp
  406c29:	push   0x31
  406c2b:	adc    eax,DWORD PTR [esi+0x5e3b7036]
  406c31:	mov    ch,0xe1
  406c33:	loop   0x406c92
  406c35:	call   esi
  406c37:	sub    BYTE PTR [ebx+0x6b3b7028],bh
  406c3d:	fiadd  WORD PTR [edi-0x4b76a22e]
  406c43:	jecxz  0x406c9a
  406c45:	push   DWORD PTR [esi-0x3697fcab]
  406c4b:	inc    ecx
  406c4c:	(bad)  
  406c4d:	jmp    DWORD PTR [edi-0x6108ad18]
  406c53:	sub    bl,BYTE PTR [esi+0x35]
  406c56:	cli    
  406c57:	push   ebx
  406c58:	(bad)  
  406c59:	call   DWORD PTR [esi-0x79006305]
  406c5f:	les    eax,FWORD PTR [edi+0x5d4a86dc]
  406c65:	xor    DWORD PTR [edi+edx*1+0x3b6eff56],0xffffffd7
  406c6d:	fs mov dl,0x70
  406c70:	jo     0x406c69
  406c72:	pop    esi
  406c73:	push   0x4
  406c75:	je     0x406c6c
  406c77:	mov    ebp,0xe89e
  406c7c:	inc    esi
  406c7d:	pop    edx
  406c7e:	pop    ebp
  406c7f:	add    BYTE PTR [ebp+0x3effec2d],bh
  406c85:	pop    edx
  406c86:	sahf   
  406c87:	(bad)  
  406c88:	mov    esp,0xe9036b32
  406c8d:	jns    0x406cec
  406c8f:	(bad)  
  406c90:	fcom   QWORD PTR [ebx]
  406c92:	xchg   ebp,eax
  406c93:	push   ebp
  406c94:	push   ds
  406c95:	dec    ecx
  406c96:	sahf   
  406c97:	xlat   BYTE PTR ds:[ebx]
  406c98:	cs cmp al,0x3e
  406c9b:	pushf  
  406c9c:	push   cs
  406c9d:	dec    ecx
  406c9e:	mov    ss,WORD PTR [edi+0x5d864119]
  406ca4:	(bad)  
  406ca5:	mov    esi,0x8c686bf0
  406caa:	jbe    0x406d09
  406cac:	out    dx,al
  406cad:	jle    0x406c34
  406caf:	push   ebp
  406cb0:	out    0x48,al
  406cb2:	data16 xlat BYTE PTR ds:[ebx]
  406cb4:	ss cmp al,0x22
  406cb7:	pushf  
  406cb8:	(bad)  
  406cb9:	dec    eax
  406cba:	push   esi
  406cbb:	xchg   edi,eax
  406cbc:	rol    DWORD PTR [eax+0x4e],1
  406cbf:	pop    ebp
  406cc0:	(bad)  
  406cc1:	mov    esi,0x8c0c6bf0
  406cc6:	ds pop ebp
  406cc8:	mov    dh,0x7e
  406cca:	adc    eax,0x2e48ae55
  406ccf:	xlat   BYTE PTR ds:[ebx]
  406cd0:	cs cmp al,0x6
  406cd3:	pushf  
  406cd4:	sahf   
  406cd5:	dec    eax
  406cd6:	push   ds
  406cd7:	xchg   edi,eax
  406cd8:	lea    eax,[eax+0x16]
  406cdb:	pop    ebp
  406cdc:	cdq    
  406cdd:	cli    
  406cde:	push   ecx
  406cdf:	pop    ebp
  406ce0:	add    BYTE PTR [eax],al
  406ce2:	xchg   BYTE PTR [eax+0x3c],cl
  406ce5:	jo     0x406c6d
  406ce7:	dec    eax
  406ce8:	(bad)  
  406ce9:	imul   edx,DWORD PTR [edi],0xffffff8d
  406cec:	neg    BYTE PTR [esi+ebp*2+0x7e]
  406cf0:	add    DWORD PTR [ebp+0x66],edx
  406cf3:	dec    eax
  406cf4:	shl    eax,1
  406cf6:	fwait
  406cf7:	dec    eax
  406cf8:	ficomp WORD PTR [esp+ebx*4+0x33]
  406cfc:	ficomp WORD PTR [esi+ecx*2+0x3b]
  406d00:	loope  0x406c9a
  406d02:	inc    esi
  406d03:	dec    eax
  406d04:	(bad)  
  406d05:	xchg   esi,eax
  406d06:	pop    ebp
  406d07:	inc    eax
  406d08:	mov    esi,0x46495c
  406d0d:	jae    0x406c9c
  406d0f:	inc    edi
  406d10:	push   DWORD PTR [edx+eax*4+0x3f]
  406d14:	jmp    DWORD PTR [esi-0x6ef83e83]
  406d1a:	cmp    eax,0x6d96ff46
  406d1f:	xor    eax,0xe8476596
  406d25:	lea    ebx,[eax-0x108100b9]
  406d2b:	aas    
  406d2c:	jmp    0xff87fc58
  406d31:	outs   dx,BYTE PTR ds:[esi]
  406d32:	dec    DWORD PTR [ebx-0x18]
  406d35:	pop    ss
  406d36:	scas   al,BYTE PTR es:[edi]
  406d37:	adc    al,0x0
  406d39:	xor    BYTE PTR [eax+0x1c],dh
  406d3c:	add    BYTE PTR [ecx+edi*4+0x66258338],bh
  406d43:	mov    edx,0xd2ff
  406d48:	cs inc edi
  406d4a:	jne    0x406d3d
  406d4c:	dec    edx
  406d4d:	ds mov bh,0x36
  406d50:	or     eax,0x9a2d459d
  406d55:	jae    0x406d8d
  406d57:	test   al,0x32
  406d59:	inc    edi
  406d5a:	jne    0x406d4d
  406d5c:	or     bh,BYTE PTR [esi]
  406d5e:	std    
  406d5f:	push   ss
  406d60:	in     eax,dx
  406d61:	inc    esi
  406d62:	jne    0x406d71
  406d64:	in     eax,0xc0
  406d66:	pop    es
  406d67:	adc    DWORD PTR [ebx-0x74],edx
  406d6a:	(bad)  
  406d6b:	(bad)  
  406d6c:	call   0xa82971c2
  406d71:	call   0xe6f7:0x63ee68ec
  406d78:	cli    
  406d79:	cwde   
  406d7a:	inc    ebp
  406d7b:	fstp   QWORD PTR [ebp-0x141a8aba]
  406d81:	add    BYTE PTR [ebx+0x0],bl
  406d84:	ins    BYTE PTR es:[edi],dx
  406d85:	inc    edi
  406d86:	out    0x0,eax
  406d88:	ins    BYTE PTR es:[edi],dx
  406d89:	pushf  
  406d8a:	add    BYTE PTR [eax],al
  406d8c:	inc    ebx
  406d8d:	ror    DWORD PTR [esi],cl
  406d8f:	test   DWORD PTR [edx],esp
  406d91:	adc    DWORD PTR [eax],eax
  406d93:	add    bh,cl
  406d95:	push   esp
  406d96:	test   DWORD PTR [eax],0xc7001308
  406d9c:	dec    ebp
  406d9d:	in     al,0xfe
  406d9f:	pop    es
  406da0:	sbb    BYTE PTR [ebx],dl
  406da2:	push   0x0
  406da4:	xor    dl,BYTE PTR [eax]
  406da6:	push   0x0
  406da8:	and    dl,BYTE PTR [eax]
  406daa:	lea    eax,[ebp+0x0]
  406dad:	add    BYTE PTR [eax+eax*4-0x74],bh
  406db1:	test   DWORD PTR [ebx+eiz*8-0x2],ebp
  406db5:	dec    DWORD PTR [eax-0x15]
  406db8:	je     0x406db2
  406dba:	push   edi
  406dbb:	gs sti 
  406dbd:	call   0x410980
  406dc2:	rcl    edx,cl
  406dc4:	jae    0x406dcb
  406dc6:	jno    0x406db5
  406dc8:	add    BYTE PTR [eax],al
  406dca:	enter  0xcb3a,0x28
  406dce:	mov    DWORD PTR [edx],edx
  406dd0:	push   DWORD PTR [ebp-0x6c]
  406dd3:	mov    edx,0xeb57bdd8
  406dd8:	mov    dl,al
  406dda:	and    eax,0x37f7f495
  406ddf:	jmp    0x406e30
  406de1:	push   edx
  406de2:	xor    BYTE PTR [edx-0x43],cl
  406de5:	push   DWORD PTR [edi]
  406de7:	cdq    
  406de8:	test   eax,esi
  406dea:	jg     0x406dd5
  406dec:	(bad)  
  406ded:	push   0xffffff88
  406def:	cmp    bh,bh
  406df1:	ss cdq 
  406df3:	adc    bh,bh
  406df5:	mov    ch,0x68
  406df7:	loope  0x406df7
  406df9:	call   DWORD PTR [edi+0x23]
  406dfc:	pop    ebx
  406dfd:	sub    DWORD PTR [ecx],ecx
  406dff:	adc    al,ch
  406e01:	and    eax,0xff5aa031
  406e06:	mov    eax,0x3ef75eaf
  406e0b:	dec    ebp
  406e0c:	in     eax,dx
  406e0d:	dec    esi
  406e0f:	mov    edx,DWORD PTR [ecx]
  406e11:	inc    ecx
  406e12:	add    BYTE PTR [eax],al
  406e14:	xor    DWORD PTR [esi-0x70],edi
  406e17:	lock push ds
  406e19:	ja     0x406e75
  406e1b:	jmp    DWORD PTR [edx+edx*8+0x2c]
  406e1f:	inc    ecx
  406e20:	xor    DWORD PTR [ebx-0x60f142fe],esp
  406e26:	mov    WORD PTR [ebp-0xa560eb],es
  406e2c:	mov    edi,DWORD PTR [ebx]
  406e2e:	jmp    0x406e25
  406e30:	aas    
  406e31:	cld    
  406e32:	add    edi,edi
  406e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e35:	retf   
  406e36:	push   ecx
  406e37:	jmp    esi
  406e39:	mov    dh,0xf
  406e3b:	pop    ebx
  406e3c:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406e40:	enter  0x5aa7,0xff
  406e44:	mov    eax,0xc6f76ab8
  406e49:	(bad)  
  406e4a:	in     al,dx
  406e4b:	call   DWORD PTR [esi+0x3a]
  406e4e:	adc    al,BYTE PTR [ecx+0x31]
  406e51:	push   es
  406e52:	nop
  406e53:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e55:	(bad)  
  406e56:	pop    ecx
  406e57:	call   FWORD PTR [edx+eiz*4+0x2c]
  406e5b:	inc    ecx
  406e5c:	xor    DWORD PTR [ebx],esp
  406e5e:	dec    esi
  406e5f:	mov    esp,0x858c2696
  406e64:	xchg   ecx,eax
  406e65:	es pop edx
  406e67:	push   DWORD PTR [eax+esi*4+0xe7ef72e]
  406e6e:	mov    bl,0x67
  406e70:	jp     0x406eef
  406e72:	(bad)  
  406e73:	jmp    FWORD PTR [edi+0x8]
  406e76:	push   ebx
  406e77:	test   DWORD PTR [eax],0x59366600
  406e7d:	xor    eax,0xc31013fa
  406e82:	push   esi
  406e83:	sub    eax,0x454e9891
  406e88:	loop   0x406ecd
  406e8a:	mov    ebp,0x65976a2a
  406e8f:	cmp    eax,0xbf2d59c6
  406e94:	fcomp  DWORD PTR [eax+0x61]
  406e97:	xchg   ebp,eax
  406e98:	ins    BYTE PTR es:[edi],dx
  406e99:	cmp    BYTE PTR [esi],bl
  406e9b:	inc    ebp
  406e9c:	scas   al,BYTE PTR es:[edi]
  406e9d:	mov    ah,0x16
  406e9f:	mov    edi,0x3916595f
  406ea4:	cmc    
  406ea5:	or     al,0xf1
  406ea7:	mov    edi,0xbb0eb3ee
  406eac:	dec    edi
  406ead:	pop    ecx
  406eae:	dec    BYTE PTR [esp+ebp*2+0x38]
  406eb2:	inc    BYTE PTR [esi+edi*2-0x11]
  406eb6:	out    dx,al
  406eb7:	inc    esp
  406eb8:	jmp    0x76a41b43
  406ebd:	pop    ecx
  406ebe:	fsubrp st(3),st
  406ec0:	ror    BYTE PTR [ebx],1
  406ec2:	push   ds
  406ec3:	shr    eax,cl
  406ec5:	pop    eax
  406ec6:	test   BYTE PTR [ebx+0x5e],al
  406ec9:	pop    ecx
  406eca:	mov    BYTE PTR [esp+edx*1-0x43],0x9
  406ecf:	shr    eax,cl
  406ed1:	imul   ebx,DWORD PTR [ebx-0x78],0x3e
  406ed5:	pop    ecx
  406ed6:	mov    eax,0xa651118e
  406edb:	inc    esp
  406edc:	push   0xffffff97
  406ede:	add    BYTE PTR [eax],al
  406ee0:	xchg   ebp,eax
  406ee1:	cmp    al,0x26
  406ee3:	pop    ecx
  406ee4:	xor    DWORD PTR ds:0x14317d65,edx
  406eea:	jmp    0x16783373
  406eef:	pop    ecx
  406ef0:	jle    0x406f05
  406ef2:	idiv   BYTE PTR [edi-0x59]
  406ef5:	adc    ebp,ecx
  406ef7:	add    esi,DWORD PTR [edx+0x10086]
  406efd:	inc    ebp
  406efe:	(bad)  
  406eff:	jmp    0xe9c1ff2d
  406f04:	xor    dl,BYTE PTR [eax+ebp*2]
  406f07:	stc    
  406f08:	xor    dh,BYTE PTR ds:0xc77d6be
  406f0e:	call   0xff851e8b
  406f13:	(bad)  
  406f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f15:	aaa    
  406f16:	idiv   DWORD PTR [esi-0x1e8abc77]
  406f1c:	call   0xb543:0x79aeb539
  406f23:	xchg   ecx,eax
  406f24:	add    DWORD PTR [ebx-0x1],0xe81bff9e
  406f2b:	mov    esi,0x8eff43b7
  406f30:	scas   eax,DWORD PTR es:[edi]
  406f31:	cmp    bh,dh
  406f33:	xchg   BYTE PTR [ecx+0x43],bl
  406f36:	jne    0x406f29
  406f38:	pop    edx
  406f39:	dec    ebp
  406f3a:	mov    ch,0x76
  406f3c:	mov    DWORD PTR [ebx-0x4b],eax
  406f3f:	lea    eax,[ecx+0x66ff43]
  406f45:	add    bh,ah
  406f47:	sbb    ebp,eax
  406f49:	sar    BYTE PTR [edi-0x48a900bd],0x34
  406f50:	test   DWORD PTR [esi+0x59],0x4af17543
  406f57:	jno    0x406f0e
  406f59:	or     DWORD PTR ds:[edi+0x430111bd],edx
  406f60:	(bad)  
  406f61:	jmp    0x64c38dd4
  406f66:	bound  ecx,QWORD PTR [ebx-0x1]
  406f69:	push   ds
  406f6a:	mov    cs,eax
  406f6c:	adc    DWORD PTR [edx+0x7],esp
  406f6f:	pop    esp
  406f70:	test   DWORD PTR [esi],0x3042d9
  406f76:	das    
  406f77:	push   edx
  406f78:	pop    es
  406f79:	call   0x4001ff
  406f7e:	xor    edx,DWORD PTR [ecx]
  406f80:	push   0x0
  406f82:	dec    edi
  406f83:	push   ecx
  406f84:	pop    es
  406f85:	call   0x4014b7
  406f8a:	outs   dx,DWORD PTR ds:[esi]
  406f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f8c:	in     al,0xf7
  406f8e:	pop    edi
  406f8f:	jmp    0x406f78
  406f91:	mov    DWORD PTR [eax-0x4a000115],esp
  406f97:	stos   DWORD PTR es:[edi],eax
  406f98:	idiv   bh
  406f9a:	out    dx,eax
  406f9b:	scas   eax,DWORD PTR es:[edi]
  406f9c:	jge    0x406f56
  406f9e:	fucomip st,st(2)
  406fa0:	(bad)  
  406fa1:	mov    ch,0xf0
  406fa3:	sar    dh,cl
  406fa5:	inc    eax
  406fa7:	data16 mov bh,0xff
  406faa:	add    BYTE PTR [eax],al
  406fac:	scas   eax,DWORD PTR es:[edi]
  406fad:	jmp    0xe8fe:0xeaa7e0b4
  406fb4:	xor    BYTE PTR [eax-0x5b500001],ah
  406fba:	fdiv   st,st(7)
  406fbc:	outs   dx,DWORD PTR ds:[esi]
  406fbd:	jmp    0x406fa6
  406fbf:	pop    ebp
  406fc0:	and    bl,ch
  406fc2:	(bad)  
  406fc3:	jmp    DWORD PTR ds:0x4ffff6e8
  406fc9:	mov    al,0x51
  406fcb:	mov    eax,0x45feeb6f
  406fd0:	pusha  
  406fd1:	mov    cl,0xd4
  406fd3:	std    
  406fd4:	outs   dx,DWORD PTR ds:[esi]
  406fd5:	jmp    0x406fd5
  406fd7:	jne    0x407045
  406fd9:	mov    al,0x9b
  406fdb:	mov    bl,BYTE PTR [eax-0x6f3d36ea]
  406fe1:	push   ss
  406fe2:	push   ebp
  406fe3:	mov    ebx,DWORD PTR [edi+edx*4-0x3c]
  406fe7:	cld    
  406fe8:	ret    0x6a16
  406feb:	or     eax,0xe807652f
  406ff0:	xor    DWORD PTR [ecx-0x4c810070],edx
  406ff6:	sar    bl,0x9
  406ff9:	pop    ds
  406ffa:	push   cs
  406ffb:	inc    ecx
  406ffc:	xor    DWORD PTR [edx-0x30],eax
  406fff:	pop    es
  407000:	pop    ecx
  407001:	(bad)  
  407002:	push   edi
  407003:	call   FWORD PTR [esi+0x31]
  407006:	sar    bl,1
  407008:	push   esi
  407009:	fisttp WORD PTR [ebx]
  40700b:	call   0xff9717ce
  407010:	add    BYTE PTR [eax],al
  407012:	js     0x407082
  407014:	(bad)  
  407015:	jmp    ebp
  407017:	mov    ch,0x66
  407019:	sub    DWORD PTR [ebp-0x78],0xb12eff4e
  407020:	mov    edi,0xd08a81fb
  407025:	or     ebx,DWORD PTR [esi]
  407027:	dec    ecx
  407028:	mov    edx,0x6b2b7028
  40702d:	push   edx
  40702e:	mov    ebx,0xf10b032b
  407033:	cmp    al,BYTE PTR [eax+0x32b335f]
  407039:	(bad)  
  40703a:	ins    BYTE PTR es:[edi],dx
  40703b:	xchg   ebx,eax
  40703c:	add    eax,DWORD PTR [eax]
  40703e:	xor    DWORD PTR [ebx],ebp
  407040:	ds inc ebp
  407042:	(bad)  
  407044:	std    
  407045:	(bad)  
  407046:	ficom  WORD PTR ds:0x65316a04
  40704c:	add    ebp,DWORD PTR [edx+0x31]
  40704f:	mov    al,0xbf
  407051:	repz popa 
  407053:	mov    eax,0xd2c6f47f
  407058:	push   ebp
  407059:	push   eax
  40705a:	mov    dh,0x80
  40705c:	pop    ebx
  40705d:	jmp    DWORD PTR [edi+edi*8]
  407060:	push   0x24
  407062:	mov    ebx,0x710b032b
  407067:	xchg   DWORD PTR [eax],eax
  407069:	jmp    0x42b84c1
  40706e:	xor    DWORD PTR [esp+ebp*1+0x1613f02b],ebp
  407075:	rol    BYTE PTR [eax],1
  407077:	add    BYTE PTR [edx],ch
  407079:	sub    al,0xa6
  40707b:	call   0x97bc:0x33724176
  407082:	cmc    
  407083:	dec    ebp
  407084:	inc    cx
  407086:	cdq    
  407087:	mov    cl,0x56
  407089:	nop
  40708a:	xor    dl,BYTE PTR [esi+0x56]
  40708d:	mov    ebp,DWORD PTR [esp+edx*2+0x46]
  407091:	inc    ecx
  407092:	fiadd  WORD PTR [edi+0x55de50ac]
  407098:	ds in  al,0x40
  40709b:	mov    bh,dh
  40709d:	shr    al,cl
  40709f:	push   esp
  4070a0:	in     al,0x43
  4070a2:	mov    dh,0x55
  4070a4:	es inc ecx
  4070a6:	cld    
  4070a7:	mov    eax,0x6be8d349
  4070ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ad:	jge    0x407055
  4070af:	push   ebp
  4070b0:	mov    eax,0x64d8596
  4070b5:	inc    ecx
  4070b6:	add    eax,DWORD PTR [ecx+ecx*4]
  4070b9:	je     0x407091
  4070bb:	ret    0x41f6
  4070be:	cmp    al,0x54
  4070c0:	out    0x40,al
  4070c2:	jle    0x407119
  4070c4:	sbb    al,0xdd
  4070c6:	mov    edi,0xf938dec2
  4070cb:	cdq    
  4070cc:	(bad)  
  4070cd:	inc    eax
  4070ce:	jo     0x40714f
  4070d0:	fisttp QWORD PTR [eax+0x5e]
  4070d3:	push   ebp
  4070d4:	pop    ebx
  4070d5:	adc    al,0xc1
  4070d7:	sahf   
  4070d8:	push   es
  4070d9:	shr    eax,cl
  4070db:	push   esp
  4070dc:	add    BYTE PTR [eax],al
  4070de:	jl     0x407123
  4070e0:	ds push ebp
  4070e2:	scas   al,BYTE PTR es:[edi]
  4070e3:	inc    eax
  4070e4:	hlt    
  4070e5:	mov    eax,0xe8ffd359
  4070ea:	or     ah,dh
  4070ec:	mov    ecx,0x858afc2e
  4070f1:	adc    esp,edi
  4070f3:	inc    eax
  4070f4:	call   DWORD PTR [ebx-0x215053ce]
  4070fa:	jae    0x40713c
  4070fc:	(bad)  
  4070fd:	push   esp
  4070fe:	fisttp QWORD PTR [eax-0x1]
  407101:	push   es
  407102:	add    al,0x7
  407104:	pop    ebx
  407105:	shl    BYTE PTR [ebx+0x40],1
  407108:	out    0xbd,eax
  40710a:	mov    eax,0xd660ff40
  40710f:	xor    esi,edi
  407111:	out    0xe5,al
  407113:	mov    es,WORD PTR [ebp-0xbf0a3f]
  407119:	cmp    DWORD PTR [ebp+0x6d],ecx
  40711c:	aaa    
  40711d:	sub    BYTE PTR ds:0x7db9b541,ch
  407123:	aas    
  407124:	(bad)  
  407125:	mov    esi,0x2828db37
  40712a:	xor    eax,0x7d73112c
  40712f:	aas    
  407130:	or     ebp,DWORD PTR [ecx+0x5c8322fe]
  407136:	dec    edx
  407137:	inc    edi
  407138:	call   DWORD PTR [esi-0x71f63702]
  40713e:	and    cl,BYTE PTR [edi+0xa585]
  407144:	jge    0x407185
  407146:	call   DWORD PTR [edx-0x6a7aa8c8]
  40714c:	ins    DWORD PTR es:[edi],dx
  40714d:	aas    
  40714e:	call   esp
  407150:	xor    dl,BYTE PTR [eax+eax*1]
  407153:	mov    ecx,0x5eb6625a
  407158:	pop    ebp
  407159:	xchg   ecx,eax
  40715a:	test   DWORD PTR [ecx],edi
  40715c:	ins    DWORD PTR es:[edi],dx
  40715d:	aas    
  40715e:	(bad)  
  40715f:	mov    ecx,0x37a2ca
  407164:	fst    DWORD PTR [ebx]
  407166:	push   DWORD PTR [ebp-0x12f98]
  40716c:	addr16 push cs
  40716e:	pop    ebx
  40716f:	sub    ecx,ecx
  407171:	adc    ebp,eax
  407173:	int    0x11
  407175:	call   0x4f987d78
  40717a:	adc    al,BYTE PTR [ebx-0x8fd1b]
  407180:	daa    
  407181:	aas    
  407182:	je     0x40718e
  407184:	aaa    
  407185:	and    ecx,DWORD PTR [edi-0x12fc37b]
  40718b:	push   DWORD PTR [ebx]
  40718d:	or     eax,0xd03c85c7
  407192:	(bad)  
  407193:	call   FWORD PTR [eax+0x13]
  407196:	add    BYTE PTR [eax],al
  407198:	or     al,ah
  40719a:	lea    esi,[esi-0x427d1c99]
  4071a0:	ins    BYTE PTR es:[edi],dx
  4071a1:	(bad)  
  4071a3:	call   FWORD PTR [eax]
  4071a5:	add    DWORD PTR ds:[bx+si],0x0
  4071aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ab:	cld    
  4071ac:	idiv   bh
  4071ae:	out    0x15,eax
  4071b0:	jne    0x4071e8
  4071b2:	jb     0x4071cc
  4071b4:	lea    eax,[ebp-0x1253c]
  4071ba:	dec    eax
  4071bb:	jecxz  0x407171
  4071bd:	in     al,0x9f
  4071bf:	loop   0x4071bf
  4071c1:	call   0x3f6090
  4071c6:	jecxz  0x40719a
  4071c8:	jae    0x4071d3
  4071ca:	pop    ebx
  4071cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071cc:	int3   
  4071cd:	mul    DWORD PTR [edi-0x1d]
  4071d0:	push   DWORD PTR [ebp+edi*8-0x1f]
  4071d4:	mov    ah,0xe4
  4071d6:	outs   dx,DWORD PTR ds:[esi]
  4071d7:	jecxz  0x4071d7
  4071d9:	call   0x400e66
  4071de:	xor    esi,ebp
  4071e0:	mov    ah,ah
  4071e2:	mov    esi,0x310052cd
  4071e7:	sub    eax,0xd8e48303
  4071ec:	pop    edx
  4071ed:	call   FWORD PTR [esi-0x4d9528d4]
  4071f3:	scas   eax,DWORD PTR es:[edi]
  4071f4:	pop    edi
  4071f5:	test   DWORD PTR [esi+0x137403f5],0x86e890aa
  4071ff:	and    eax,0x83fd0053
  407204:	fild   DWORD PTR [ecx]
  407206:	xor    DWORD PTR [esi],esp
  407208:	xchg   edx,eax
  407209:	(bad)  
  40720a:	fadd   QWORD PTR [ebx+ebx*2-0x59]
  40720e:	add    BYTE PTR [eax],al
  407210:	mov    ds:0x9cff5245,eax
  407215:	inc    eax
  407216:	pop    edx
  407217:	dec    DWORD PTR [esi+0x35]
  40721a:	fadd   DWORD PTR [edi]
  40721c:	pop    ecx
  40721d:	xor    DWORD PTR [ebp-0x679ac101],edx
  407223:	call   0xff92bf66
  407228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407229:	inc    ebx
  40722a:	pop    ebx
  40722b:	in     eax,dx
  40722c:	jecxz  0x4072ac
  40722e:	push   edx
  40722f:	jmp    esp
  407231:	ja     0x40728d
  407233:	call   DWORD PTR [esi]
  407235:	outs   dx,DWORD PTR ds:[esi]
  407236:	cwde   
  407237:	in     al,0x6
  407239:	ja     0x40728d
  40723b:	(bad)  
  40723c:	jl     0x407281
  40723e:	pop    ebx
  40723f:	lods   eax,DWORD PTR ds:[esi]
  407240:	ret    
  407241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407242:	push   edx
  407243:	(bad)  
  407244:	mov    esp,0xeeff5a6f
  407249:	xchg   esi,eax
  40724a:	fadd   DWORD PTR [edi]
  40724c:	fldenv [esi+edx*4]
  40724f:	(bad)  
  407250:	faddp  st(6),st
  407252:	xchg   edi,eax
  407253:	loopne 0x407233
  407255:	scas   al,BYTE PTR es:[edi]
  407256:	push   ecx
  407257:	inc    DWORD PTR [esp+edx*1-0xf]
  40725b:	pop    ebx
  40725c:	test   BYTE PTR [edx-0x7841ada2],al
  407262:	dec    ebp
  407263:	pop    edx
  407264:	mov    dh,0x3d
  407266:	inc    ecx
  407267:	dec    edx
  407268:	in     al,0x3d
  40726a:	inc    esi
  40726b:	push   edx
  40726c:	fdiv   QWORD PTR [eax]
  40726e:	ss push edx
  407270:	sahf   
  407271:	sub    al,0x75
  407273:	cwde   
  407274:	add    BYTE PTR [eax],al
  407276:	xchg   esi,eax
  407277:	cmp    eax,0x4599982e
  40727c:	es push edx
  40727e:	cdq    
  40727f:	adc    DWORD PTR [edx+edx*2+0x7e],0x3d
  407284:	pop    esp
  407285:	arpl   WORD PTR [esi+0x3d],di
  407288:	push   cs
  407289:	pop    ebx
  40728a:	xchg   edi,eax
  40728b:	xchg   DWORD PTR [esi],eax
  40728d:	push   edx
  40728e:	xchg   cx,di
  407291:	pop    ecx
  407292:	pop    esi
  407293:	cmp    eax,0x3d9c6e01
  407298:	out    dx,al
  407299:	push   ecx
  40729a:	hlt    
  40729b:	cmp    edx,eax
  40729d:	xchg   esp,eax
  40729e:	inc    esp
  40729f:	cmp    eax,0x3fc451de
  4072a4:	shl    DWORD PTR [edi-0x52],0x14
  4072a8:	jmp    0xe94c65e7
  4072ad:	mov    dh,0xbb
  4072af:	das    
  4072b0:	push   0x48
  4072b2:	and    eax,0x24dde8aa
  4072b7:	cmp    eax,0x6f16fc34
  4072bc:	pop    ebx
  4072bd:	push   ecx
  4072be:	push   es
  4072bf:	mov    esp,DWORD PTR [eax+edx*2]
  4072c2:	mov    DWORD PTR [ecx+ebp*8],edx
  4072c5:	pusha  
  4072c6:	mov    bh,0xab
  4072c8:	fcomp  QWORD PTR [eax]
  4072ca:	jo     0x4072e0
  4072cc:	adc    ebx,ebp
  4072ce:	pop    ds
  4072cf:	shr    eax,cl
  4072d1:	push   eax
  4072d2:	fs or  al,0x0
  4072d5:	cmp    esi,0x6eff5a
  4072db:	add    BYTE PTR [esi-0x29],cl
  4072de:	idiv   DWORD PTR [ecx-0x57c94e16]
  4072e4:	xor    ch,BYTE PTR [esi+eiz*1-0x1c30de2]
  4072eb:	adc    al,0xdc
  4072ed:	jmp    0x40732f
  4072ef:	jmp    0x3ef84cfe
  4072f4:	add    BYTE PTR [ecx],cl
  4072f6:	sar    BYTE PTR [ebp+0x35458b48],0x6d
  4072fd:	adc    eax,DWORD PTR [eax]
  4072ff:	push   ss
  407300:	mov    ds:0xdaf1753c,eax
  407305:	test   BYTE PTR [ecx+0x753ce016],dh
  40730b:	adc    DWORD PTR [eax],eax
  40730d:	(bad)  
  40730e:	repz push es
  407310:	jle    0x407326
  407312:	call   0xff7d3535
  407317:	idiv   BYTE PTR [edi+0x40]
  40731a:	call   0xff7d1af0
  40731f:	push   ecx
  407320:	fs add eax,0xc6e1e941
  407326:	pop    es
  407327:	shl    eax,0x3f
  40732a:	dec    esi
  40732c:	add    ecx,0x13ffc6fb
  407332:	call   0xff7c3a76
  407337:	mov    al,ds:0x1400106c
  40733c:	mov    WORD PTR [eax],gs
  40733e:	sub    DWORD PTR [ebp-0x518a0000],0xffffffff
  407345:	adc    dh,BYTE PTR [eax]
  407347:	cmp    esi,DWORD PTR [ebp-0x1f]
  40734a:	pop    edx
  40734b:	div    BYTE PTR [ecx+0x458d818e]
  407351:	add    BYTE PTR [edi+ebx*2-0x5a500001],ch
  407358:	push   0xff5697bc
  40735d:	addr16 nop
  40735f:	sbb    al,0x41
  407361:	add    BYTE PTR [edi+0x62],cl
  407364:	pop    es
  407365:	call   0x3f61cc
  40736a:	pop    edi
  40736b:	(bad)  
  40736c:	sti    
  40736d:	inc    DWORD PTR [ebp+0x2a43e73f]
  407373:	in     al,0xfe
  407375:	leave  
  407376:	dec    edx
  407377:	adc    eax,DWORD PTR [eax]
  407379:	push   ebp
  40737a:	adc    ebx,ebx
  40737c:	add    ah,0x5c
  40737f:	pop    ecx
  407380:	jmp    FWORD PTR [ecx-0x78]
  407383:	in     al,0x74
  407385:	or     BYTE PTR [eax],ah
  407387:	lods   al,BYTE PTR ds:[esi]
  407388:	mov    al,0xff
  40738a:	pop    ds
  40738b:	mov    esi,0x17b0fc44
  407390:	add    bh,ch
  407392:	out    dx,al
  407393:	pop    esi
  407394:	shl    DWORD PTR [edi],1
  407396:	mov    DWORD PTR [edi],edx
  407398:	push   0xff5697d7
  40739d:	inc    ch
  40739f:	ds out 0xaf,eax
  4073a2:	jno    0x40736f
  4073a4:	(bad)  
  4073a5:	push   0x0
  4073a7:	add    BYTE PTR [eax+0x5f],cl
  4073aa:	adc    edi,DWORD PTR [eax]
  4073ac:	or     DWORD PTR [eax],edx
  4073ae:	push   0xff5147fa
  4073b3:	(bad)  
  4073b4:	and    eax,0x841286e
  4073b9:	fist   WORD PTR [ebp+0xacadfb7]
  4073bf:	rol    BYTE PTR [esp+ebp*8+0x67],0xf0
  4073c4:	out    0x4f,eax
  4073c6:	dec    DWORD PTR [edi-0x60]
  4073c9:	xor    eax,0xa231ffb7
  4073ce:	mov    ah,0x67
  4073d0:	xor    DWORD PTR ds:0x9f59be5e,ebp
  4073d6:	pop    ss
  4073d7:	inc    ecx
  4073d8:	xor    DWORD PTR ds:0x9529754f,ebx
  4073de:	sbb    bl,cl
  4073e0:	into   
  4073e1:	test   eax,0xb17d565b
  4073e6:	dec    esi
  4073e7:	inc    DWORD PTR [ecx+ebx*8+0x4e]
  4073eb:	jne    0x407416
  4073ed:	aad    0x3c
  4073ef:	mov    cl,0xae
  4073f1:	leave  
  4073f2:	cmp    al,0xc2
  4073f4:	sub    eax,0x8d8ab82d
  4073f9:	lods   eax,DWORD PTR ds:[esi]
  4073fa:	inc    edi
  4073fb:	cld    
  4073fc:	call   FWORD PTR [ecx+0x5c18ffd9]
  407402:	dec    esi
  407403:	jne    0x40743e
  407405:	and    eax,0x197eb0db
  40740a:	jge    0x407451
  40740c:	add    BYTE PTR [eax],al
  40740e:	jne    0x4073c5
  407410:	sbb    BYTE PTR [ecx+ebx*1+0x6c],dh
  407414:	add    ecx,DWORD PTR [ebx+0x411b9524]
  40741a:	xor    DWORD PTR [ebp+0x75dd000e],ebp
  407420:	fistp  DWORD PTR [edi]
  407422:	or     DWORD PTR [ebx+eax*1+0x57],ebp
  407426:	pop    ecx
  407427:	pushf  
  407428:	test   DWORD PTR [eax],eax
  40742a:	xor    DWORD PTR [esi+0x43],eax
  40742d:	je     0x40743b
  40742f:	sti    
  407430:	pop    ebx
  407431:	shr    esp,cl
  407433:	dec    edx
  407434:	dec    esi
  407435:	push   0xffc51358
  40743a:	outs   dx,BYTE PTR ds:[esi]
  40743b:	arpl   WORD PTR [ecx-0x49],dx
  40743e:	push   ss
  40743f:	xor    DWORD PTR [ebx+0x5e2b3167],0xffffffbe
  407446:	popa   
  407447:	adc    al,0xa6
  407449:	fdiv   DWORD PTR [esi]
  40744b:	sub    al,0xc3
  40744d:	cmp    dh,dh
  40744f:	cmp    DWORD PTR [ecx-0x71c65da6],eax
  407455:	pop    edx
  407456:	xor    dl,dl
  407458:	push   0x82bf310d
  40745d:	(bad)
  407460:	test   eax,0x6e39ce8c
  407465:	dec    esi
  407466:	ret    
  407467:	push   0x21
  407469:	pop    es
  40746a:	inc    esp
  40746b:	jg     0x4074cb
  40746d:	fdivr  DWORD PTR [edx+0xfbdc39]
  407473:	add    BYTE PTR [esi-0x59b1682f],dl
  407479:	fldenv [esi-0x16ef8cc4]
  40747f:	mov    eax,0x476a28ab
  407484:	lea    ebp,[esi+0x3920d9e8]
  40748a:	pushf  
  40748b:	sti    
  40748c:	xchg   esi,eax
  40748d:	sub    ebx,DWORD PTR [ecx+0x4e]
  407490:	jbe    0x40741d
  407492:	lods   al,BYTE PTR ds:[esi]
  407493:	dec    edi
  407494:	fst    DWORD PTR [ebx]
  407496:	jmp    0xc3ed1bf9
  40749b:	or     esi,eax
  40749d:	adc    edx,DWORD PTR [ecx-0x172ce6e9]
  4074a3:	dec    esi
  4074a4:	les    ecx,FWORD PTR [ebx]
  4074a6:	add    DWORD PTR [ecx+ebp*2-0x3bb219c7],edx
  4074ad:	aaa    
  4074ae:	(bad)  
  4074b0:	cs sub al,0xe3
  4074b3:	xchg   edx,eax
  4074b4:	cmp    DWORD PTR cs:[eax+0x1c142d42],esp
  4074bb:	jns    0x4074ca
  4074bd:	xchg   ebx,eax
  4074be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074bf:	xor    BYTE PTR [esi],bl
  4074c1:	cmp    DWORD PTR [eax],eax
  4074c3:	mov    dh,0x8e
  4074c5:	iret   
  4074c6:	sti    
  4074c7:	sbb    DWORD PTR [edi+edi*4+0xb],esi
  4074cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cc:	(bad)  es:[eax]
  4074cf:	sub    BYTE PTR ds:0x356ccd2c,ch
  4074d5:	adc    al,0xb
  4074d7:	test   eax,0x8fe40000
  4074dc:	mov    eax,ds:0xc71432e8
  4074e1:	and    al,0x65
  4074e3:	adc    al,0x0
  4074e5:	jmp    0x7585c61c
  4074ea:	je     0x4074fd
  4074ec:	add    cl,ch
  4074ee:	fdivr  DWORD PTR [eax]
  4074f0:	imul   ebp,ecx,0xe96938d8
  4074f6:	das    
  4074f7:	iret   
  4074f8:	repz mov ecx,0x3ef48f27
  4074fe:	in     al,dx
  4074ff:	cmp    BYTE PTR [eax+0x3e],dl
  407502:	jle    0x407544
  407504:	(bad)  
  407505:	mov    esp,0x649f2bfe
  40750a:	sub    eax,0x59290b14
  40750f:	psubsw mm0,QWORD PTR [ebp-0x7effebcd]
  407516:	cs in  al,dx
  407518:	inc    eax
  407519:	jmp    0x114c3413
  40751e:	repz cmp edi,0xd08da2fe
  407525:	fs mov dh,0x3f
  407528:	imul   esi
  40752a:	cmc    
  40752b:	jecxz  0x40757e
  40752d:	shl    DWORD PTR [eax-0x4421007f],1
  407533:	mov    ?,eax
  407535:	fidivr WORD PTR [ebp+0x37]
  407538:	call   0xff78371e
  40753d:	add    BYTE PTR [eax],al
  40753f:	add    BYTE PTR [edx+0x305a6810],al
  407545:	push   ebx
  407546:	(bad)  
  407547:	dec    BYTE PTR [ebp-0x2800091d]
  40754d:	enter  0x5b34,0xe1
  407551:	push   edx
  407552:	jmp    edi
  407554:	add    BYTE PTR [edx-0x71ae0001],ah
  40755a:	in     al,0xf7
  40755c:	mov    bh,0xc8
  40755e:	imul   eax,DWORD PTR [eax],0x41377a40
  407564:	enter  0xb4c8,0xf0
  407568:	dec    edi
  407569:	enter  0xfffe,0x7d
  40756d:	ins    BYTE PTR es:[edi],dx
  40756e:	sub    BYTE PTR [ecx-0x38],al
  407571:	fucomi st,st(1)
  407573:	mov    ch,0x57
  407575:	enter  0x8588,0xf4
  407579:	(bad)  
  40757b:	push   DWORD PTR [edx+0x13]
  40757e:	push   0xff533051
  407583:	(bad)  
  407584:	sbb    eax,0x47fff6e3
  407589:	enter  0x5b34,0x31
  40758d:	push   ebx
  40758e:	jmp    edi
  407590:	inc    esp
  407591:	sahf   
  407592:	(bad)  
  407593:	inc    DWORD PTR [ecx]
  407595:	mov    gs,eax
  407597:	test   DWORD PTR [edi-0x38],0xe014858c
  40759e:	(bad)  
  40759f:	(bad)  
  4075a0:	mov    eax,0x38625b
  4075a5:	add    BYTE PTR [ecx+0x48b5ff13],cl
  4075ab:	jecxz  0x4075ab
  4075ad:	call   DWORD PTR [edi+0x21]
  4075b0:	pop    ebx
  4075b1:	sub    DWORD PTR [ecx],ecx
  4075b3:	adc    al,ch
  4075b5:	test   eax,0xbfecb9d
  4075ba:	xor    DWORD PTR [ebp-0x30],ebp
  4075bd:	sbb    BYTE PTR [edx+0x1ef72887],dh
  4075c3:	dec    esi
  4075c4:	add    BYTE PTR [ebp+0x41],dh
  4075c7:	jbe    0x4075dd
  4075c9:	(bad)  
  4075ca:	mov    ah,0x4c
  4075cc:	push   ebx
  4075cd:	inc    DWORD PTR [esi]
  4075cf:	sbb    eax,0x6dc3765c
  4075d4:	dec    ebx
  4075d5:	jmp    0x4075f4
  4075d7:	inc    edx
  4075d8:	inc    ebx
  4075d9:	je     0x407612
  4075db:	std    
  4075dc:	pop    ebx
  4075dd:	push   0xffffffa3
  4075df:	test   DWORD PTR [ebx-0x39],ecx
  4075e2:	mov    ah,0x8c
  4075e4:	push   ebx
  4075e5:	call   esi
  4075e7:	pop    edi
  4075e8:	add    eax,DWORD PTR [eax]
  4075ea:	xor    DWORD PTR [edx-0x5a411b78],ebp
  4075f0:	dec    edx
  4075f1:	add    BYTE PTR [ebp+0x76],al
  4075f4:	xchg   BYTE PTR [ebp-0xb5223b],bh
  4075fa:	xor    DWORD PTR [ecx-0x47],ebx
  4075fd:	and    ah,0xd4
  407600:	push   edx
  407601:	call   FWORD PTR [esi+0x944cf2c]
  407607:	sub    eax,0xef03
  40760c:	iret   
  40760d:	std    
  40760e:	rol    BYTE PTR [edi],1
  407610:	cdq    
  407611:	jmp    0x4075ac
  407613:	(bad)  
  407614:	jle    0x407603
  407616:	nop
  407617:	in     al,dx
  407618:	jle    0x40762f
  40761a:	dec    ebx
  40761b:	jmp    esp
  40761d:	xor    al,0x5b
  40761f:	adc    eax,0xff4b0596
  407624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407625:	and    al,0x53
  407627:	call   DWORD PTR [esi+0x35]
  40762a:	rol    BYTE PTR [edi],1
  40762c:	pop    ecx
  40762d:	and    eax,0x2546ff9a
  407632:	nop
  407633:	in     al,0x46
  407635:	adc    esp,esi
  407637:	dec    edx
  407638:	ss shl al,0x5b
  40763c:	sub    BYTE PTR [edi-0x2a],ah
  40763f:	dec    edx
  407640:	es or  cl,0x52
  407644:	push   ds
  407645:	ss (bad) 
  407647:	shr    BYTE PTR [esi],1
  407649:	sub    al,0x70
  40764b:	cdq    
  40764c:	push   cs
  40764d:	ss mov dh,0x90
  407650:	or     eax,0x94aae3e
  407655:	inc    eax
  407656:	pop    eax
  407657:	dec    edx
  407658:	div    BYTE PTR ds:0x35e65754
  40765e:	xchg   esi,eax
  40765f:	pop    ebx
  407660:	fild   DWORD PTR [ebx+0x7fde4a8e]
  407666:	xchg   ecx,eax
  407667:	push   edx
  407668:	(bad)  
  407669:	xor    eax,0x35802a91
  40766e:	jbe    0x4076ba
  407670:	add    BYTE PTR [eax],al
  407672:	jl     0x4076b8
  407674:	jbe    0x4076c0
  407676:	mov    esi,0xb6943d2c
  40767b:	xor    eax,0x2ba6c05e
  407680:	(bad)  
  407681:	dec    ecx
  407682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407683:	xor    eax,0x2c9ad04e
  407688:	out    0x7f,eax
  40768a:	xor    DWORD PTR [eax+esi*1],edx
  40768d:	inc    ebp
  40768e:	cmp    DWORD PTR [esp+ebx*4],edx
  407691:	jle    0x407628
  407693:	xchg   ecx,eax
  407694:	and    eax,0x93140b47
  407699:	div    BYTE PTR [edi-0x41]
  40769c:	lock pop ebx
  40769e:	push   edi
  40769f:	pushw  ss
  4076a1:	dec    edx
  4076a2:	mov    eax,0xcbdb0ccf
  4076a7:	sti    
  4076a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a9:	add    edx,DWORD PTR [esi-0x41]
  4076ac:	lock pop ebx
  4076ae:	daa    
  4076af:	ss add dh,dh
  4076b2:	clc    
  4076b3:	xor    al,0x75
  4076b5:	in     eax,dx
  4076b6:	call   0x43117e79
  4076bb:	data16 (bad) 
  4076bd:	fisubr WORD PTR [edx+0x52]
  4076c0:	add    al,0xe9
  4076c2:	xlat   BYTE PTR ds:[ebx]
  4076c3:	mov    esp,ebp
  4076c5:	push   0x71
  4076c7:	cmp    BYTE PTR [edx-0x17],ch
  4076ca:	hlt    
  4076cb:	and    bh,bh
  4076cd:	xor    al,0xd
  4076cf:	sub    eax,0x357887b5
  4076d4:	mov    DWORD PTR [eax+eax*1],esp
  4076d7:	add    BYTE PTR [ecx-0x54],ch
  4076da:	(bad)  
  4076db:	call   0x74a8ed39
  4076e0:	cmp    eax,0x6400ffd3
  4076e5:	cld    
  4076e6:	inc    eax
  4076e7:	jmp    0x91483655
  4076ec:	out    dx,al
  4076ed:	pop    esi
  4076ee:	(bad)  
  4076ef:	jle    0x407769
  4076f1:	mov    edi,0xcf676fb
  4076f6:	call   0xff751292
  4076fb:	xor    BYTE PTR [edi+0x10],ch
  4076fe:	add    BYTE PTR [ebp+ebp*1+0x552d8128],dh
  407705:	cmp    eax,0xcf264eff
  40770a:	sti    
  40770b:	cdq    
  40770c:	jmp    0x3e7e82cf
  407711:	fldcw  WORD PTR [eax]
  407713:	test   al,0x32
  407715:	sub    al,0x99
  407717:	push   0x35
  407719:	adc    al,0xb
  40771b:	sub    DWORD PTR [eax-0x71],edi
  40771e:	int    0xe8
  407720:	xor    dl,BYTE PTR [edi+eax*8]
  407723:	lods   al,BYTE PTR ds:[esi]
  407724:	cli    
  407725:	adc    eax,DWORD PTR [eax]
  407727:	jmp    0x85c45e
  40772c:	push   esp
  40772d:	retf   
  40772e:	push   es
  40772f:	add    BYTE PTR [eax+0x56],bl
  407732:	jmp    FWORD PTR [ecx+0x58]
  407735:	push   esi
  407736:	jmp    FWORD PTR [ecx+0x48]
  407739:	mov    ebp,0xf444
  40773e:	clc    
  40773f:	mov    esp,0xdd07f484
  407744:	(bad)  
  407745:	push   eax
  407746:	jmp    DWORD PTR [edx-0x9]
  407749:	inc    DWORD PTR [ebp-0x74941824]
  40774f:	pop    ss
  407750:	add    BYTE PTR [ebx],cl
  407752:	fsub   DWORD PTR [ebx+0x4]
  407755:	jmp    0x408dc2
  40775a:	jo     0x407748
  40775c:	daa    
  40775d:	inc    ecx
  40775e:	or     ch,bl
  407760:	je     0x40776e
  407762:	shr    BYTE PTR [ebp+0x67bfffb3],0x8a
  407769:	sar    BYTE PTR [ebp-0x4e],1
  40776c:	repz imul DWORD PTR [edi-0x5fadb024]
  407773:	pop    ebp
  407774:	mov    bl,0xff
  407776:	aas    
  407777:	scas   al,BYTE PTR es:[edi]
  407778:	test   al,dh
  40777a:	inc    edi
  40777b:	fdiv   st(6),st
  40777d:	call   0x3ffe76
  407782:	sbb    eax,0xfff7d7b2
  407787:	fisttp DWORD PTR [edi+0x68]
  40778a:	mov    ebx,0xef00411f
  40778f:	mov    eax,ds:0xdc4ff7f0
  407794:	(bad)  
  407795:	xor    eax,0x410ea3
  40779a:	lock jmp 0x40774f
  40779d:	dec    DWORD PTR [edi-0x52]
  4077a0:	test   ah,ah
  4077a2:	add    BYTE PTR [eax],al
  4077a4:	inc    edi
  4077a5:	fdiv   st(6),st
  4077a7:	push   0x31
  4077a9:	cmp    eax,0x7c19a0db
  4077ae:	add    edi,edi
  4077b0:	pushf  
  4077b1:	sub    eax,0x324eff4f
  4077b6:	or     eax,0x37c185b
  4077bb:	call   0xff886640
  4077c0:	test   al,0xc0
  4077c2:	push   edi
  4077c3:	imul   DWORD PTR [esi]
  4077c5:	push   edx
  4077c6:	(bad)  
  4077c8:	mov    ss,WORD PTR [edi+0x6231410c]
  4077ce:	xchg   ecx,eax
  4077cf:	lock push ds
  4077d1:	pop    edx
  4077d2:	inc    edi
  4077d3:	inc    DWORD PTR [esi+esi*8+0x1c]
  4077d7:	inc    ecx
  4077d8:	xor    DWORD PTR [ebp+0x73],edx
  4077db:	mov    bl,0xfe
  4077dd:	cmp    DWORD PTR [ebp-0x7b],0xff479209
  4077e4:	mov    esp,0xe6f727b7
  4077e9:	mov    DWORD PTR [edi+eiz*2-0x3bbb63],esi
  4077f0:	xlat   BYTE PTR ds:[ebx]
  4077f1:	out    dx,eax
  4077f2:	push   ebx
  4077f3:	test   esi,0x6a3546b1
  4077f9:	push   esp
  4077fa:	(bad)  
  4077fb:	call   esi
  4077fd:	sub    al,0x92
  4077ff:	push   DWORD PTR [esi+0x48744325]
  407805:	mov    esi,0xdc88
  40780a:	sahf   
  40780b:	leave  
  40780c:	inc    esi
  40780d:	add    al,0x24
  40780f:	sub    eax,0xbfa63046
  407814:	arpl   di,si
  407816:	mov    ?,ecx
  407818:	mov    bl,0xe7
  40781a:	inc    esp
  40781b:	lods   eax,DWORD PTR ds:[esi]
  40781c:	inc    esi
  40781d:	dec    DWORD PTR [edx-0x24005b8]
  407823:	adc    ebp,edi
  407825:	mov    bl,0x56
  407827:	in     al,0x58
  407829:	inc    edi
  40782a:	pop    dx
  40782c:	ins    BYTE PTR es:[edi],dx
  40782d:	data16 xor cl,BYTE PTR fs:[esi]
  407831:	icebp  
  407832:	push   esi
  407833:	xor    ch,cl
  407835:	or     BYTE PTR [edi+esi*1+0x134646f6],0x7d
  40783d:	lds    esi,FWORD PTR [ebx+0x364efd70]
  407843:	xor    ch,cl
  407845:	iret   
  407846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407847:	xchg   ebp,eax
  407848:	pushf  
  407849:	pop    ebx
  40784a:	push   ds
  40784b:	xor    dl,dh
  40784d:	add    esp,DWORD PTR [ebp-0x5bfbbd40]
  407853:	xchg   edi,eax
  407854:	mov    eax,ds:0x19320e4e
  407859:	inc    edi
  40785a:	mov    esp,0xfe46be38
  40785f:	cmp    al,0x1b
  407861:	xor    esi,esi
  407863:	xor    edx,esi
  407865:	inc    ebx
  407866:	gs enter 0x8869,0x9
  40786b:	sub    dl,BYTE PTR [esi+0x31000046]
  407871:	test   al,0x21
  407873:	(bad)  
  407875:	xor    DWORD PTR [esi-0xf58317b],edx
  40787b:	pop    ebx
  40787c:	dec    esi
  40787d:	xor    BYTE PTR [esi+0x46],0xbe
  407881:	addr16 jge 0x4078d2
  407884:	mov    dh,0x31
  407886:	data16 shl BYTE PTR [esi],1
  407889:	cmp    al,0xa2
  40788b:	xchg   edi,eax
  40788c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40788d:	xor    DWORD PTR [esi-0x70],edx
  407890:	mov    DWORD PTR [ecx],ebp
  407892:	dec    esi
  407893:	inc    esi
  407894:	xchg   esi,eax
  407895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407896:	lock pop ebx
  407898:	fadd   QWORD PTR [eax+0x6786463e]
  40789e:	add    BYTE PTR [ecx],dl
  4078a0:	out    dx,eax
  4078a1:	xor    bh,bh
  4078a3:	mov    eax,cs:0xf726f738
  4078a9:	xor    BYTE PTR [ebp-0xf],dh
  4078ac:	or     bh,BYTE PTR [edi+0x30f716ab]
  4078b2:	mov    ch,0x9
  4078b4:	out    0x30,eax
  4078b6:	inc    DWORD PTR [esi]
  4078b8:	popa   
  4078b9:	sbb    eax,ebp
  4078bb:	rcr    BYTE PTR [esi-0x510900cf],1
  4078c1:	cmp    bh,dh
  4078c3:	out    dx,al
  4078c4:	in     al,dx
  4078c5:	cmp    edx,DWORD PTR [ebp-0xce8b6a]
  4078cb:	xchg   esp,eax
  4078cc:	mov    DWORD PTR [ecx],ebp
  4078ce:	call   esi
  4078d0:	jge    0x407870
  4078d2:	scas   eax,DWORD PTR es:[edi]
  4078d3:	into   
  4078d4:	add    BYTE PTR [eax],al
  4078d6:	ins    BYTE PTR es:[edi],dx
  4078d7:	xor    DWORD PTR [ebp-0xce832f],esi
  4078dd:	shr    esp,1
  4078df:	cmp    edi,0xf06774b6
  4078e5:	mov    dh,0x6c
  4078e7:	xor    eax,ebp
  4078e9:	sbb    eax,0x9eff30c4
  4078ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ef:	sub    cl,ch
  4078f1:	sub    esi,DWORD PTR [edi+0x31]
  4078f4:	dec    DWORD PTR [esi+0x47e82ce6]
  4078fa:	mov    dl,0x13
  4078fc:	add    BYTE PTR [eax+0x1c001c73],dh
  407902:	cmp    BYTE PTR [eax-0x7d],al
  407905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407906:	popa   
  407907:	xor    DWORD PTR [ebp-0xb],esi
  40790a:	or     cl,dl
  40790c:	jg     0x4078f7
  40790e:	xor    bl,BYTE PTR [ebx-0x590baebb]
  407914:	test   DWORD PTR [ecx-0x31],0xf700ff81
  40791b:	lods   al,BYTE PTR ds:[esi]
  40791c:	inc    esp
  40791d:	cld    
  40791e:	inc    edi
  40791f:	popa   
  407920:	sti    
  407921:	(bad)  
  407922:	mov    ebp,0x5475fedc
  407927:	int3   
  407928:	push   ss
  407929:	mov    ebx,0xc00ad717
  40792e:	mov    esp,0x3c458916
  407933:	dec    esi
  407934:	dec    DWORD PTR [ebp+ecx*4+0xff4fe0]
  40793b:	add    ch,cl
  40793d:	fsub   st,st(7)
  40793f:	jnp    0x40795d
  407941:	xlat   BYTE PTR ds:[ebx]
  407942:	dec    BYTE PTR [ebx]
  407944:	or     BYTE PTR [eax+ebp*1+0x68],al
  407948:	dec    eax
  407949:	and    al,0xee
  40794b:	mov    esi,0xe8075f17
  407950:	mov    cl,0x8c
  407952:	(bad)  
  407953:	inc    DWORD PTR [edi]
  407955:	pop    edi
  407956:	idiv   edi
  407958:	jge    0x407986
  40795a:	(bad)  
  40795b:	jne    0x40795d
  40795d:	int3   
  40795e:	shr    BYTE PTR [ebx+0x75fed8c7],0xbc
  407965:	fdiv   DWORD PTR [esp+edi*8-0x39]
  407969:	pop    esi
  40796a:	pop    es
  40796b:	call   0x4005fb
  407970:	(bad)  
  407971:	pop    esi
  407972:	sti    
  407973:	call   0x40032c
  407978:	xchg   ecx,eax
  407979:	aad    0x7
  40797b:	add    BYTE PTR ds:0x8c83ebad,ch
  407981:	retf   
  407982:	push   ebp
  407983:	(bad)  
  407984:	mov    ebp,0xfbade727
  407989:	xlat   BYTE PTR ds:[ebx]
  40798a:	dec    BYTE PTR [ebx]
  40798c:	pop    eax
  40798d:	pop    esi
  40798e:	add    al,0x5e
  407990:	popa   
  407991:	aad    0x7
  407993:	add    BYTE PTR [ecx],dh
  407995:	mov    eax,0xde01efbd
  40799a:	int    0xb
  40799c:	cdq    
  40799d:	jbe    0x40792e
  40799f:	inc    DWORD PTR [eax]
  4079a1:	add    BYTE PTR [esi-0x4af0bcde],al
  4079a7:	ret    
  4079a8:	add    al,BYTE PTR [eax]
  4079aa:	xor    esi,edi
  4079ac:	int    0xfb
  4079ae:	pop    ecx
  4079af:	loop   0x407945
  4079b1:	jmp    DWORD PTR [esi-0x5c]
  4079b4:	mov    ebp,0x47905eeb
  4079b9:	(bad)  
  4079ba:	fdiv   QWORD PTR [eax]
  4079bc:	inc    ebx
  4079bd:	jne    0x407a08
  4079bf:	add    eax,0x2e46ae52
  4079c4:	ja     0x407a3b
  4079c6:	dec    ebp
  4079c7:	adc    bh,BYTE PTR [edx-0x3d9ac399]
  4079cd:	inc    DWORD PTR [ebp+eax*2+0x3d3180c5]
  4079d4:	push   cs
  4079d5:	shl    BYTE PTR [ebx+edi*1+0x4caa3d2e],0xac
  4079dd:	hlt    
  4079de:	dec    ecx
  4079df:	cld    
  4079e0:	add    ebp,eax
  4079e2:	lods   al,BYTE PTR ds:[esi]
  4079e3:	in     eax,dx
  4079e4:	add    eax,DWORD PTR [eax]
  4079e6:	xor    ch,BYTE PTR [ebp-0x73]
  4079e9:	jne    0x4079f4
  4079eb:	aad    0x7
  4079ed:	cmp    DWORD PTR [eax+0x3d],esi
  4079f0:	(bad)  
  4079f2:	inc    esi
  4079f3:	mov    esp,0x7d2a0003
  4079f8:	mov    ecx,0x8d21ca01
  4079fd:	adc    bh,dh
  4079ff:	cmp    al,0x3
  407a01:	push   eax
  407a02:	arpl   WORD PTR [esi+0xe7b8],bp
  407a08:	mov    esi,0xb8e80b2f
  407a0d:	mov    esi,0x140bff42
  407a12:	ror    DWORD PTR [ebx+0x41f9441],0x24
  407a19:	(bad)
  407a1e:	pop    DWORD PTR [ebx+0x4]
  407a21:	sbb    al,0x51
  407a23:	push   eax
  407a24:	fld    TBYTE PTR [esi]
  407a26:	ds inc ebx
  407a28:	add    al,0x30
  407a2a:	ss mov ecx,0xbb42e8a
  407a30:	pop    ecx
  407a31:	daa    
  407a32:	push   ebx
  407a33:	inc    ebx
  407a34:	cs xchg sp,ax
  407a37:	das    
  407a38:	dec    ecx
  407a39:	add    BYTE PTR [edi+0x43],al
  407a3c:	push   esi
  407a3d:	mov    al,ds:0x3be133a4
  407a42:	call   0xdf04:0x122e4677
  407a49:	pop    esp
  407a4a:	sub    ecx,DWORD PTR [ecx+esi*1]
  407a4d:	leave  
  407a4e:	popa   
  407a4f:	xor    BYTE PTR [edx+0x26ade558],dh
  407a55:	mov    esp,0x1ca442f3
  407a5a:	rol    esi,0xcb
  407a5d:	sub    eax,0x30748cce
  407a62:	push   ecx
  407a63:	inc    ebp
  407a64:	dec    ecx
  407a65:	shr    eax,cl
  407a67:	inc    edx
  407a68:	test   BYTE PTR [ecx+eax*8],bl
  407a6b:	push   0x0
  407a6d:	add    ch,dh
  407a6f:	sub    eax,0xb5eeadae
  407a74:	add    ebp,edi
  407a76:	jno    0x407a8c
  407a78:	adc    DWORD PTR [ebx],ecx
  407a7a:	sbb    bl,dl
  407a7c:	call   0xc00996c3
  407a81:	(bad)  
  407a82:	into   
  407a83:	xor    eax,0x2dc67385
  407a88:	repnz inc ebx
  407a8a:	inc    ebp
  407a8b:	or     al,BYTE PTR [eax]
  407a8d:	add    DWORD PTR [edi],eax
  407a8f:	in     al,dx
  407a90:	inc    eax
  407a91:	jmp    0x9908b018
  407a96:	repz sub al,0x50
  407a99:	mov    ecx,0x4107a6f3
  407a9e:	dec    edi
  407a9f:	dec    DWORD PTR cs:[esi+0x5a]
  407aa3:	push   esi
  407aa4:	lods   eax,DWORD PTR ds:[esi]
  407aa5:	inc    esi
  407aa6:	repz mov ecx,0x62205119
  407aac:	push   DWORD PTR [esi]
  407aae:	daa    
  407aaf:	push   esp
  407ab0:	je     0x407ab6
  407ab2:	popf   
  407ab3:	dec    edi
  407ab4:	cmp    BYTE PTR [eax+0x4ae7c432],ch
  407aba:	in     eax,0x2c
  407abc:	inc    DWORD PTR [ecx-0x16bf13fc]
  407ac2:	bound  esi,QWORD PTR ds:0x2cf33898
  407ac8:	push   eax
  407ac9:	cdq    
  407aca:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acc:	pop    es
  407acd:	add    DWORD PTR [edi+0xeeff2d],edi
  407ad3:	add    BYTE PTR [ebx-0x7a],bl
  407ad6:	lods   eax,DWORD PTR ds:[esi]
  407ad7:	out    0x70,al
  407ad9:	mov    edx,0x6393d11b
  407ade:	call   esi
  407ae0:	and    al,0x54
  407ae2:	je     0x407ae8
  407ae4:	fisttp QWORD PTR [esi+0x38]
  407ae7:	sub    BYTE PTR ds:0x823ae7c4,ch
  407aed:	sub    eax,0xec4741ff
  407af2:	inc    eax
  407af3:	jmp    0x58a8affa
  407af8:	jo     0x407b27
  407afa:	push   eax
  407afb:	cmp    DWORD PTR [eax-0x59],esi
  407afe:	pop    es
  407aff:	sub    DWORD PTR [ebp+ebp*1-0x49e27101],0xd2af00ac
  407b0a:	imul   esp,DWORD PTR [ebx],0xffb0a1a0
  407b10:	aas    
  407b11:	pop    ds
  407b12:	shl    BYTE PTR [ebp+esi*2+0x78],0xdd
  407b17:	cmp    cl,bl
  407b19:	adc    BYTE PTR [eax-0x18],dl
  407b1c:	retf   
  407b1d:	mov    eax,ds:0xfe70fffe
  407b22:	aaa    
  407b23:	inc    ecx
  407b24:	cwde   
  407b25:	inc    eax
  407b26:	out    0x38,eax
  407b28:	or     ebx,edx
  407b2a:	(bad)  
  407b2b:	push   eax
  407b2c:	cwde   
  407b2d:	shl    DWORD PTR [eax+ecx*1-0x10],cl
  407b31:	inc    esi
  407b32:	std    
  407b33:	call   FWORD PTR [edi]
  407b35:	add    BYTE PTR [esi],dh
  407b37:	lods   eax,DWORD PTR ds:[esi]
  407b38:	add    BYTE PTR [eax],al
  407b3a:	psrlq  mm7,mm6
  407b3d:	jne    0x407b7b
  407b3f:	shl    DWORD PTR [eax+ecx*1+0x30],cl
  407b43:	mov    ecx,0xd93fffa9
  407b48:	rol    DWORD PTR [eax+ebx*2],0x45
  407b4c:	mov    ch,ah
  407b4e:	leave  
  407b4f:	fcmovnu st,st(3)
  407b51:	idiv   DWORD PTR [edi]
  407b53:	ror    DWORD PTR [ebp+eax*2+0x75fe481c],cl
  407b5a:	sub    ch,dl
  407b5c:	je     0x407b6a
  407b5e:	add    BYTE PTR [ebp+0x7e],ah
  407b61:	add    BYTE PTR [eax],cl
  407b63:	sbb    eax,eax
  407b65:	setne  BYTE PTR [ebp-0x22e7ffff]
  407b6c:	inc    esp
  407b6d:	clc    
  407b6e:	or     BYTE PTR [eax],bl
  407b70:	add    BYTE PTR [eax],al
  407b72:	(bad)  
  407b73:	push   edx
  407b74:	repz call edi
  407b77:	pop    ss
  407b78:	add    BYTE PTR [edx-0x28],ch
  407b7b:	jns    0x407b7c
  407b7d:	imul   ecx,eax,0x318cff79
  407b83:	clc    
  407b84:	aaa    
  407b85:	push   eax
  407b86:	mov    esp,0xc6f736b0
  407b8b:	xchg   edx,eax
  407b8c:	sar    esi,cl
  407b8e:	inc    esp
  407b8f:	xchg   ebp,eax
  407b90:	inc    eax
  407b91:	jne    0x407b48
  407b93:	xchg   ebp,eax
  407b94:	ret    0x317e
  407b97:	cmp    eax,0x381dc00c
  407b9c:	sub    al,BYTE PTR [ecx+0x3d300000]
  407ba2:	add    ebp,DWORD PTR [eax+0x65]
  407ba5:	adc    eax,0x408fffc3
  407baa:	adc    ebp,eax
  407bac:	or     eax,0xe1ff3fad
  407bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb2:	push   edx
  407bb3:	lea    ebp,[ecx+ebp*8-0x729100c9]
  407bba:	aad    0xe7
  407bbc:	std    
  407bbd:	int3   
  407bbe:	aas    
  407bbf:	jmp    FWORD PTR [eax+0x56f732b0]
  407bc5:	add    ch,BYTE PTR [ebx]
  407bc7:	stos   BYTE PTR es:[edi],al
  407bc8:	popf   
  407bc9:	sbb    al,BYTE PTR [eax+0x6a]
  407bcc:	xor    DWORD PTR [ebp+0x3cf038fc],eax
  407bd2:	inc    eax
  407bd3:	mov    ch,0x41
  407bd5:	sub    bh,BYTE PTR [edi]
  407bd7:	jmp    FWORD PTR [esi]
  407bd9:	mov    al,ds:0x81d4e80e
  407bde:	aas    
  407bdf:	jmp    FWORD PTR [eax+0x16f727af]
  407be5:	inc    edx
  407be6:	stos   BYTE PTR es:[edi],al
  407be7:	call   DWORD PTR [esi+0x3140fcf1]
  407bed:	push   edx
  407bee:	jns    0x407be0
  407bf0:	push   es
  407bf1:	push   0x3f
  407bf3:	(bad)  
  407bf4:	jl     0x407c27
  407bf6:	sub    edx,DWORD PTR [edx-0x76c08662]
  407bfc:	lods   al,BYTE PTR ds:[esi]
  407bfd:	adc    ecx,DWORD PTR [ecx+0x132ade37]
  407c03:	add    al,0x0
  407c05:	add    BYTE PTR [ecx-0x1],cl
  407c08:	iret   
  407c09:	(bad)  
  407c0a:	into   
  407c0b:	sub    DWORD PTR [esp+esi*1-0x42],edx
  407c0f:	sub    al,BYTE PTR [esi-0x6ee7bbc1]
  407c15:	mov    bh,0x87
  407c17:	sub    dh,BYTE PTR [esi-0x73]
  407c1a:	mov    ah,0x37
  407c1c:	jbe    0x407c5d
  407c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c1f:	mov    ebp,0xed60abe8
  407c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c25:	add    edx,DWORD PTR [esi-0x71c8a6a0]
  407c2b:	sub    cl,BYTE PTR [esi-0x47]
  407c2e:	cmp    bh,BYTE PTR [eiz*4+0x702a7e6e]
  407c35:	mov    DWORD PTR [ecx-0x24c0c9de],ecx
  407c3b:	adc    eax,ecx
  407c3d:	int    0x29
  407c3f:	aad    0xe8
  407c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c43:	and    edx,DWORD PTR [esi]
  407c45:	aas    
  407c46:	push   esi
  407c47:	sub    bl,BYTE PTR [edi+ecx*1+0x3f3dd459]
  407c4e:	inc    esi
  407c4f:	pushf  
  407c50:	ins    BYTE PTR es:[edi],dx
  407c51:	pusha  
  407c52:	inc    esi
  407c53:	sub    bh,dh
  407c55:	xor    BYTE PTR [edi+ebp*1-0x2],0x3e
  407c5a:	cs adc eax,0x67b20c74
  407c60:	leave  
  407c61:	ss push ds
  407c63:	sub    ch,cl
  407c65:	mov    bh,0x8d
  407c67:	xchg   ebp,eax
  407c68:	xchg   esp,eax
  407c69:	das    
  407c6a:	add    BYTE PTR [eax],al
  407c6c:	push   es
  407c6d:	sub    cl,dh
  407c6f:	add    edi,DWORD PTR [ebp-0x38]
  407c72:	imul   eax,DWORD PTR [eax+0x3ebe2209],0x19ffa031
  407c7c:	popf   
  407c7d:	sub    edi,edi
  407c7f:	mov    esi,0xf1752964
  407c84:	or     ch,BYTE PTR [ebp+0x29179ea7]
  407c8a:	mov    ch,0x85
  407c8c:	pop    es
  407c8d:	sub    edi,edi
  407c8f:	mov    cs,WORD PTR [ecx+0x4ab6e811]
  407c95:	sub    edi,edi
  407c97:	jle    0x407cd2
  407c99:	cmp    al,0xf7
  407c9b:	jbe    0x407d0c
  407c9d:	sub    DWORD PTR [ebp-0x1f],esi
  407ca0:	pop    edx
  407ca1:	push   ebx
  407ca2:	test   al,0x66
  407ca4:	pop    edi
  407ca5:	sub    DWORD PTR [ebp-0xd6a0bb],esi
  407cab:	push   esi
  407cac:	leave  
  407cad:	adc    eax,ebp
  407caf:	call   0x33f9:0x46ff291a
  407cb6:	idiv   DWORD PTR [esi]
  407cb8:	aaa    
  407cb9:	sub    DWORD PTR [ebp-0x1f],esi
  407cbc:	sbb    ch,BYTE PTR [edi-0x58]
  407cbf:	cs daa 
  407cc1:	sub    DWORD PTR [ebp-0xd6d8bb],esi
  407cc7:	push   ds
  407cc8:	cdq    
  407cc9:	adc    eax,ebp
  407ccb:	jle    0x407ca7
  407ccd:	sub    bh,bh
  407ccf:	push   cs
  407cd0:	add    BYTE PTR [eax],al
  407cd2:	leave  
  407cd3:	das    
  407cd4:	test   DWORD PTR [esi],0x52a13bff
  407cda:	imul   DWORD PTR [eax]
  407cdc:	(bad)  
  407cdd:	cmp    al,0x52
  407cdf:	and    edi,edi
  407ce1:	out    dx,al
  407ce2:	pop    ebx
  407ce3:	sub    BYTE PTR [ebx-0x4ad6a31a],0xcd
  407cea:	pop    esp
  407ceb:	sub    edi,edi
  407ced:	sar    DWORD PTR [eax+0x44ceff7c],0x5f
  407cf4:	call   0xff273bf9
  407cf9:	call   0x3f3886
  407cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cff:	mov    al,ds:0xe697f7db
  407d04:	out    0x75,eax
  407d06:	and    edi,0xfffffffe
  407d09:	(bad)  
  407d0a:	jge    0x407cec
  407d0c:	idiv   bh
  407d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0f:	out    0x74,al
  407d11:	or     al,0xb7
  407d13:	pusha  
  407d14:	pop    es
  407d15:	call   0x3f640f
  407d1a:	aaa    
  407d1b:	mov    eax,ds:0xe727f7ef
  407d20:	out    0x59,eax
  407d22:	repz out 0xfe,al
  407d25:	dec    ebp
  407d27:	in     al,dx
  407d28:	call   0xff27737e
  407d2d:	jmp    FWORD PTR [ebp-0x18]
  407d30:	out    0xa3,eax
  407d32:	jne    0x407d48
  407d34:	add    cl,cl
  407d36:	add    BYTE PTR [eax],al
  407d38:	dec    edx
  407d39:	add    al,0x0
  407d3b:	push   ebp
  407d3c:	add    esp,esp
  407d3e:	add    ah,0x24
  407d41:	jle    0x407d42
  407d43:	imul   edi,DWORD PTR [esi-0x19],0x7b400874
  407d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4b:	push   DWORD PTR [edi]
  407d4d:	popf   
  407d4e:	inc    ebp
  407d4f:	cld    
  407d50:	mov    al,0x4c
  407d52:	cmp    BYTE PTR [ecx+0x58],al
  407d55:	jl     0x407d58
  407d57:	add    BYTE PTR [eax-0x6c],cl
  407d5a:	push   DWORD PTR [ebp+0x40]
  407d5d:	cld    
  407d5e:	idiv   ch
  407d60:	daa    
  407d61:	jmp    0x5321d5cd
  407d66:	(bad)  
  407d67:	(bad)  
  407d68:	cmp    eax,0x841284d
  407d6d:	jmp    0x557185e6
  407d72:	daa    
  407d73:	std    
  407d74:	push   es
  407d75:	push   edi
  407d76:	cmp    al,0x75
  407d78:	std    
  407d79:	dec    esi
  407d7a:	mov    dh,0x7
  407d7c:	or     eax,ebp
  407d7e:	imul   edi,edi,0xffffffee
  407d81:	je     0x407dc4
  407d83:	add    al,0x31
  407d85:	add    BYTE PTR [ecx+0x5f79b0ec],cl
  407d8b:	not    esi
  407d8d:	xchg   BYTE PTR [esi+0x3cedcd45],cl
  407d93:	jne    0x407db6
  407d95:	xchg   esi,eax
  407d96:	mov    dh,0xb
  407d98:	leave  
  407d99:	stc    
  407d9a:	mov    esi,0xb60000ff
  407d9f:	and    al,BYTE PTR [ebx+0xf]
  407da2:	mov    ah,0xdf
  407da4:	add    DWORD PTR [eax],eax
  407da6:	xor    DWORD PTR [esi-0x3a],ebp
  407da9:	div    DWORD PTR [ecx]
  407dab:	cmp    eax,0x706e0003
  407db0:	aaa    
  407db1:	push   DWORD PTR [esi]
  407db3:	cmp    eax,0x53316a03
  407db8:	add    ebp,DWORD PTR [edx+0x31]
  407dbb:	inc    ebx
  407dbc:	add    ecx,DWORD PTR [ebp-0x732d1f14]
  407dc2:	mov    ah,0xe9
  407dc4:	xor    edi,edi
  407dc6:	lea    di,[esi*2-0x44a11a7]
  407dce:	dec    ecx
  407dcf:	pop    ds
  407dd0:	mov    esi,0x43324eff
  407dd5:	je     0x407e03
  407dd7:	adc    al,0x82
  407dd9:	add    DWORD PTR [ecx],esi
  407ddb:	cmp    eax,0x7c09cbab
  407de0:	add    edi,edi
  407de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407de3:	dec    ebp
  407de4:	sub    edi,DWORD PTR [ecx]
  407de6:	xlat   BYTE PTR ds:[ebx]
  407de7:	xor    eax,0x13aa503b
  407dec:	mov    ecx,0xd61fac89
  407df1:	cmp    ecx,DWORD PTR [esi]
  407df3:	les    edi,FWORD PTR [edx]
  407df5:	sub    al,0x58
  407df7:	jbe    0x407dc7
  407df9:	cmp    ebp,DWORD PTR [eax-0x9cc4670]
  407dff:	sar    DWORD PTR es:[ebx+0x26980000],1
  407e06:	mov    dh,0xae
  407e08:	out    0xae,al
  407e0a:	push   ecx
  407e0b:	std    
  407e0c:	jno    0x407e22
  407e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e0f:	jno    0x407df2
  407e11:	push   ds
  407e12:	sahf   
  407e13:	cmp    ecx,esi
  407e15:	mov    al,ds:0x78b32be4
  407e1a:	mov    ?,WORD PTR [ebx]
  407e1c:	test   al,0x90
  407e1e:	lea    esi,[ebx]
  407e20:	mov    dh,0x26
  407e22:	adc    eax,DWORD PTR [ecx+ebx*1]
  407e25:	outs   dx,DWORD PTR ds:[esi]
  407e26:	mov    al,0xc4
  407e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e29:	and    eax,0x26a63434
  407e2e:	cmp    bx,WORD PTR [eax+ebx*1]
  407e32:	push   ecx
  407e33:	mov    ds:0x8d5626dd,eax
  407e38:	lods   al,BYTE PTR ds:[esi]
  407e39:	xor    edx,DWORD PTR [esi+0x3b]
  407e3c:	jle    0x407df7
  407e3e:	call   0xa82d2bee
  407e43:	add    ebp,DWORD PTR [esi+0x60]
  407e46:	cmp    DWORD PTR [ebx],esi
  407e48:	data16 es cs mov cl,0x2a
  407e4d:	cmp    al,0xb5
  407e4f:	push   0x81702656
  407e54:	pop    ebp
  407e55:	push   ds
  407e56:	push   ss
  407e57:	cmp    ebx,ebx
  407e59:	adc    eax,DWORD PTR [ecx-0x172b0776]
  407e5f:	cmp    bh,BYTE PTR [ebx+eiz*1-0xa]
  407e63:	cmp    ch,BYTE PTR [esi]
  407e65:	add    BYTE PTR es:[eax+eax*1+0x0],bh
  407e6a:	cs cmp al,0x31
  407e6d:	cmp    al,0x5a
  407e6f:	and    eax,0x1d4a6c89
  407e74:	(bad)  
  407e75:	(bad)  
  407e77:	and    eax,0xd5059d67
  407e7c:	dec    ebp
  407e7e:	and    DWORD PTR [edi+esi*8],0x75253bc6
  407e85:	in     eax,dx
  407e86:	sbb    bh,dh
  407e88:	lods   al,BYTE PTR ds:[esi]
  407e89:	mov    dh,0x2b
  407e8b:	fwait
  407e8c:	test   DWORD PTR [ebp+0x6aff2523],ecx
  407e92:	pop    ecx
  407e93:	xor    bh,dh
  407e95:	sahf   
  407e96:	or     edx,DWORD PTR [esi*2-0x1f985020]
  407e9d:	xchg   esi,eax
  407e9e:	sti    
  407e9f:	and    al,0x0
  407ea1:	std    
  407ea2:	xchg   ecx,eax
  407ea3:	xchg   edx,eax
  407ea4:	mov    ebp,0xff25638d
  407ea9:	jmp    0x2cc34884
  407eae:	dec    edx
  407eaf:	sbb    eax,0xa03266ff
  407eb4:	push   edx
  407eb5:	shl    DWORD PTR [edx],1
  407eb7:	adc    al,0xef
  407eb9:	xchg   edi,eax
  407eba:	dec    ebx
  407ebb:	lahf   
  407ebc:	pop    es
  407ebd:	inc    ecx
  407ebe:	bound  ebp,QWORD PTR [edi-0x1]
  407ec1:	inc    esi
  407ec2:	cmp    ebx,DWORD PTR [edi-0x14]
  407ec5:	sub    esp,DWORD PTR ss:0x3c3abcff
  407ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ecd:	xchg   DWORD PTR [eax],eax
  407ecf:	add    BYTE PTR [ebx],bl
  407ed1:	and    eax,0x1d0a5cff
  407ed6:	call   FWORD PTR [esi]
  407ed8:	or     ebx,DWORD PTR [edi+0x6ea00107]
  407ede:	dec    DWORD PTR [esi]
  407ee0:	sti    
  407ee1:	pop    esi
  407ee2:	in     al,0x0
  407ee4:	aaa    
  407ee5:	jmp    0x407ee5
  407ee7:	jmp    DWORD PTR [ebp+0x7688e819]
  407eed:	jmp    0xfff6:0xf165fffe
  407ef4:	por    mm6,QWORD PTR [eax+ecx*1-0x20]
  407ef9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407efb:	(bad)  
  407efc:	fucomip st,st(2)
  407efe:	mov    ah,0xdc
  407f00:	out    0xea,eax
  407f02:	(bad)  
  407f03:	push   DWORD PTR ds:0xb66ce818
  407f09:	jmp    0xfff6:0xf465fffe
  407f10:	(bad)  
  407f11:	div    DWORD PTR [ebp-0x57]
  407f14:	(bad)  
  407f18:	mov    eax,0xb0fffee2
  407f1d:	jbe    0x407ec7
  407f1f:	jmp    FWORD PTR [edi+0x37ecb4ea]
  407f25:	jmp    0x407f25
  407f27:	call   0x3f3864
  407f2c:	pop    ds
  407f2d:	mov    ch,0xe7
  407f2f:	test   DWORD PTR [edi],0x55e7eb
  407f35:	add    cl,al
  407f37:	jmp    0xfff6:0xcba5fffe
  407f3e:	fcomip st,st(7)
  407f40:	dec    ecx
  407f41:	test   eax,0xb5feeaef
  407f46:	cmp    bl,ah
  407f48:	(bad)  
  407f49:	jmp    FWORD PTR [edi]
  407f4b:	jne    0x407f58
  407f4d:	jmp    DWORD PTR [ebp+0xe3de818]
  407f53:	jmp    0x407f53
  407f55:	push   ebp
  407f57:	fcomip st,st(6)
  407f59:	jmp    FWORD PTR [edi]
  407f5b:	clc    
  407f5c:	sub    eax,0x38fe31a9
  407f61:	push   esp
  407f63:	add    ch,BYTE PTR [ebx]
  407f65:	push   ecx
  407f66:	aaa    
  407f67:	or     eax,0x21a4ff39
  407f6c:	sub    edi,DWORD PTR [eax-0x56]
  407f6f:	sub    eax,0x41f3c903
  407f74:	add    edx,DWORD PTR [ebp-0x56]
  407f77:	dec    ecx
  407f78:	test   ah,al
  407f7a:	or     eax,0x1e6a03c8
  407f7f:	dec    edx
  407f80:	scas   al,BYTE PTR es:[edi]
  407f81:	pop    es
  407f82:	or     esi,ebp
  407f84:	popa   
  407f85:	push   esi
  407f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f88:	mov    ebp,0xfa6c59fb
  407f8d:	inc    eax
  407f8e:	xor    DWORD PTR [edx-0x12],ebp
  407f91:	pop    edx
  407f92:	or     ah,ch
  407f94:	add    edi,edi
  407f96:	pop    esp
  407f97:	and    eax,0xf62b
  407f9c:	int3   
  407f9d:	cmp    BYTE PTR [eax],0x68
  407fa0:	lock inc esp
  407fa2:	ret    0x56ff
  407fa5:	das    
  407fa6:	add    eax,DWORD PTR [eax]
  407fa8:	mov    cl,0x9a
  407faa:	scas   al,BYTE PTR es:[edi]
  407fab:	pop    es
  407fac:	cdq    
  407fad:	cdq    
  407fae:	jmp    DWORD PTR ss:[esi-0x61045256]
  407fb5:	sub    BYTE PTR [ebx],cl
  407fb7:	call   0xff7912be
  407fbc:	js     0x407fad
  407fbe:	(bad)  
  407fbf:	(bad)  
  407fc0:	fnsave [ebp-0x1e8a7eda]
  407fc6:	das    
  407fc7:	push   DWORD PTR [esi-0x58]
  407fca:	mov    ebp,0xade201fb
  407fcf:	pcmpgtd mm4,QWORD PTR [eax+0x7]
  407fd3:	call   0x43e610
  407fd8:	sub    dl,BYTE PTR [ecx+ebp*1]
  407fdb:	or     BYTE PTR [ebx+edx*4+0x5b3103e9],dh
  407fe2:	lods   al,BYTE PTR ds:[esi]
  407fe3:	cmp    esi,DWORD PTR [ecx]
  407fe5:	adc    al,0xe9
  407fe7:	add    ebp,DWORD PTR [esi-0x27]
  407fea:	cld    
  407feb:	aaa    
  407fec:	ss adc al,0xe9
  407fef:	lods   eax,DWORD PTR ds:[esi]
  407ff0:	lods   eax,DWORD PTR es:[esi]
  407ff2:	call   0xe8ed9ea4
  407ff7:	xchg   BYTE PTR [eax+ebp*1+0x39],ch
  407ffb:	mov    DWORD PTR [edi+eiz*1+0x37d6],esi
  408002:	push   es
  408003:	(bad)  
  408004:	aad    0xb1
  408006:	push   es
  408007:	and    edx,DWORD PTR [eax+edi*1+0x9]
  40800b:	and    DWORD PTR [ebx+0x4],eax
  40800e:	xor    DWORD PTR [edi],ecx
  408010:	test   eax,0x1c2f30b0
  408015:	mov    DWORD PTR [edi+ebp*1-0x3c29c84a],esi
  40801c:	jae    0x407f9f
  40801e:	lds    ebp,FWORD PTR [edx]
  408020:	sahf   
  408021:	aaa    
  408022:	popa   
  408023:	and    ebx,DWORD PTR [esp+edx*1]
  408026:	mov    esi,0x372bdca8
  40802b:	outs   dx,DWORD PTR ds:[esi]
  40802c:	xchg   BYTE PTR [edi],dh
  40802e:	mov    eax,0xa62f7998
  408033:	and    ah,dl
  408035:	inc    ebx
  408036:	and    eax,0x857969f6
  40803b:	sub    ah,BYTE PTR [esi+0x37]
  40803e:	xor    DWORD PTR [eax+0x2286abff],ebp
  408044:	inc    esi
  408045:	jbe    0x4080c5
  408047:	push   0x22762f3d
  40804c:	inc    esi
  40804d:	jno    0x4080b0
  40804f:	sub    bh,BYTE PTR [esi]
  408051:	aaa    
  408052:	data16 test al,0xff
  408055:	loopne 0x408061
  408057:	push   ebx
  408058:	leave  
  408059:	cs push ds
  40805b:	and    esi,DWORD PTR [ebp-0xdce1e7]
  408061:	adc    DWORD PTR [esi+0x7a],ecx
  408064:	call   DWORD PTR [esi]
  408066:	add    BYTE PTR [eax],al
  408068:	push   es
  408069:	fincstp 
  40806b:	add    ch,BYTE PTR [ebp+0x5d057522]
  408071:	mov    al,ds:0x4b32e979
  408076:	ret    0x32e5
  408079:	(bad)  
  40807a:	mov    bh,ch
  40807c:	mov    bl,0x58
  40807e:	cld    
  40807f:	push   ebx
  408080:	xor    eax,0xc1de17ae
  408085:	sbb    eax,ebp
  408087:	sub    eax,0x60ff2190
  40808c:	icebp  
  40808d:	sbb    eax,0xd4edcf68
  408092:	(bad)  
  408093:	mov    ebp,0x2828bee1
  408098:	xor    eax,0xae17521
  40809d:	idiv   esi
  40809f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a0:	pop    es
  4080a1:	lods   al,BYTE PTR ds:[esi]
  4080a2:	in     eax,0xe0
  4080a4:	in     eax,dx
  4080a5:	and    DWORD PTR [edi-0x15],esp
  4080a8:	xor    dl,BYTE PTR [eax+eax*4]
  4080ab:	mov    es,WORD PTR [ecx+0x67dae819]
  4080b1:	and    edi,edi
  4080b3:	adc    DWORD PTR [esi-0x25],ebx
  4080b6:	inc    eax
  4080b7:	jmp    0xc09b6823
  4080bc:	ins    DWORD PTR es:[edi],dx
  4080bd:	and    esi,edi
  4080bf:	fdivr  QWORD PTR [edx]
  4080c1:	sub    al,0x0
  4080c3:	pop    esi
  4080c4:	aas    
  4080c5:	and    DWORD PTR [eax+0x56],ebp
  4080c8:	jge    0x40809e
  4080ca:	inc    eax
  4080cc:	add    BYTE PTR [eax],al
  4080ce:	xor    BYTE PTR [eax+eax*1],dl
  4080d1:	add    al,bl
  4080d3:	jmp    0xf740894c
  4080d8:	std    
  4080d9:	jmp    DWORD PTR [edi]
  4080db:	jmp    0xe807:0x6407fc74
  4080e2:	push   0xffffffb4
  4080e4:	(bad)  
  4080e5:	inc    DWORD PTR [ecx]
  4080e7:	rol    DWORD PTR [ebx],cl
  4080e9:	add    BYTE PTR [ebp-0x72],bh
  4080ec:	in     al,dx
  4080ed:	call   FWORD PTR [ebp-0x7c0b17e7]
  4080f3:	jmp    0x6838:0x71580bfe
  4080fa:	hlt    
  4080fb:	sbb    al,BYTE PTR [eax+0x0]
  4080fe:	mov    eax,0x17ab88ec
  408103:	out    0x4f,eax
  408105:	push   eax
  408106:	pusha  
  408107:	sbb    BYTE PTR [eax],al
  408109:	out    dx,eax
  40810a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40810b:	outs   dx,DWORD PTR ds:[esi]
  40810c:	and    DWORD PTR [edx],edi
  40810e:	dec    ecx
  40810f:	sbb    BYTE PTR [eax-0x1],dl
  408112:	sub    eax,0x9450e810
  408117:	out    0xfe,al
  408119:	pop    eax
  40811a:	jo     0x408131
  40811c:	add    bh,ch
  40811e:	inc    esi
  40811f:	jo     0x408147
  408121:	cmp    bl,BYTE PTR [ecx]
  408123:	sbb    BYTE PTR [eax-0x1],dl
  408126:	sbb    eax,0x943ce810
  40812b:	out    0xfe,al
  40812d:	call   0x3f4062
  408132:	add    BYTE PTR [eax],al
  408134:	loope  0x40810b
  408136:	pop    es
  408137:	add    BYTE PTR ds:0xcc83ec8b,bh
  40813d:	fld    TBYTE PTR [ecx+0x0]
  408140:	xor    bh,ch
  408142:	(bad)  
  408143:	jne    0x4080c5
  408145:	in     al,dx
  408146:	mov    DWORD PTR [edi+eiz*8+0x314588e6],esp
  40814d:	(bad)  
  40814e:	test   eax,0xb477619
  408153:	call   0xff755b1c
  408158:	fisttp DWORD PTR ds:0xd3297535
  40815e:	mov    bh,bh
  408160:	push   esi
  408161:	icebp  
  408162:	test   eax,0xb7f4e1b
  408167:	call   0xff75831c
  40816c:	ds jg  0x4081a6
  40816f:	(bad)  
  408170:	mov    esp,0xd5a42b32
  408175:	push   ss
  408176:	xor    eax,0x339f3c9
  40817b:	push   ebp
  40817c:	stos   BYTE PTR es:[edi],al
  40817d:	sbb    DWORD PTR [ecx-0x51d0ea3c],eax
  408183:	or     ebx,DWORD PTR [ecx]
  408185:	retf   
  408186:	push   0x432306ff
  40818b:	lgs    ecx,FWORD PTR [edx-0x4bcefffd]
  408192:	mov    ebp,0x13d8b2fb
  408197:	add    BYTE PTR [eax],al
  408199:	add    BYTE PTR [ebp+0x2f],bl
  40819c:	xor    al,0x75
  40819e:	inc    ecx
  40819f:	data16 scas al,BYTE PTR es:[edi]
  4081a1:	sti    
  4081a2:	leave  
  4081a3:	push   edx
  4081a4:	imul   edi,edi,0xfbbda4ce
  4081aa:	pop    ecx
  4081ab:	idiv   cl
  4081ad:	inc    eax
  4081ae:	xor    DWORD PTR [esi-0x49360452],eax
  4081b4:	push   0xabfdaeff
  4081b9:	jmp    DWORD PTR [esi-0x61af8a72]
  4081bf:	and    BYTE PTR [ebx],cl
  4081c1:	call   0xff74f738
  4081c6:	cdq    
  4081c7:	adc    al,0x3d
  4081c9:	pop    ebp
  4081ca:	xchg   BYTE PTR [edi],bl
  4081cc:	shr    DWORD PTR [esi+0x34e8d538],1
  4081d2:	cld    
  4081d3:	pop    ds
  4081d4:	inc    ecx
  4081d5:	popf   
  4081d6:	cwde   
  4081d7:	pop    ds
  4081d8:	inc    esi
  4081d9:	ror    esi,cl
  4081db:	adc    al,0xe9
  4081dd:	and    al,0x9f
  4081df:	les    esi,FWORD PTR ds:0x8b2c2eae
  4081e5:	dec    ebx
  4081e6:	dec    esi
  4081e7:	pop    ds
  4081e8:	adc    DWORD PTR [eax-0x71],esi
  4081eb:	pop    ds
  4081ec:	push   ds
  4081ed:	stos   DWORD PTR es:[edi],eax
  4081ee:	fcmovnu st,st(1)
  4081f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f1:	add    esi,DWORD PTR [esi]
  4081f3:	test   eax,0x6a742b0c
  4081f8:	push   es
  4081f9:	xor    al,0x81
  4081fb:	lods   al,BYTE PTR ds:[esi]
  4081fc:	call   0xe408204
  408201:	pop    esi
  408202:	cdq    
  408203:	xor    al,0x9c
  408205:	or     al,0x1
  408207:	cmp    cl,0x1e
  40820a:	out    0x1c,al
  40820c:	mov    ds:0x8933de75,eax
  408211:	nop
  408212:	adc    eax,ebp
  408214:	neg    BYTE PTR ds:0xf7d93054
  40821a:	xchg   edx,eax
  40821b:	xor    esp,esi
  40821d:	ret    
  40821e:	push   eax
  40821f:	add    eax,0xd4772f31
  408224:	xlat   BYTE PTR ds:[ebx]
  408225:	test   al,0xe0
  408227:	sbb    edx,DWORD PTR [ecx+0x4c]
  40822a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822b:	xor    ebx,ecx
  40822d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822e:	inc    esi
  40822f:	xor    edi,DWORD PTR [esi-0x36cfe3e2]
  408235:	lods   al,BYTE PTR ds:[esi]
  408236:	inc    esi
  408237:	xor    ebp,DWORD PTR [esi+0x3100ab4c]
  40823d:	leave  
  40823e:	jno    0x408260
  408240:	mov    dl,0x57
  408242:	add    BYTE PTR [ebp-0x49],dh
  408245:	push   ds
  408246:	imul   edx,ebx,0x5107a943
  40824c:	push   es
  40824d:	jae    0x40824e
  40824f:	pop    esi
  408250:	cld    
  408251:	fdivr  st,st(3)
  408253:	ret    
  408254:	xor    ch,BYTE PTR [edx+0x16a84e19]
  40825a:	call   0xff5fa46a
  40825f:	shl    DWORD PTR [edx],cl
  408261:	stos   BYTE PTR es:[edi],al
  408262:	and    dh,BYTE PTR [esi]
  408264:	add    BYTE PTR [eax],al
  408266:	cwde   
  408267:	push   ss
  408268:	call   0xff5f8644
  40826d:	xchg   ebx,eax
  40826e:	xor    ch,BYTE PTR [edx+0x16781e1b]
  408274:	call   0xff5f865c
  408279:	or     DWORD PTR [ebp-0x3b16bf26],0x1a74fefb
  408283:	ss sti 
  408285:	mul    DWORD PTR [ebx+0x1d]
  408288:	push   0xffd51f40
  40828d:	push   edx
  40828e:	push   cs
  40828f:	pop    ds
  408290:	jne    0x408283
  408292:	sbb    dh,BYTE PTR [eax]
  408294:	(bad)  
  408295:	(bad)  
  408296:	inc    ebx
  408297:	lods   al,BYTE PTR ds:[esi]
  408298:	test   al,0x13
  40829a:	hlt    
  40829b:	sbb    eax,0xa723e569
  4082a0:	pop    es
  4082a1:	rol    DWORD PTR [ecx+0x23b6ff1e],1
  4082a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a8:	sti    
  4082a9:	scas   al,BYTE PTR es:[edi]
  4082aa:	mov    DWORD PTR ds:0x1d4e1be8,edx
  4082b0:	push   DWORD PTR [eax+0x3c001874]
  4082b6:	xor    BYTE PTR ss:[ecx-0xdab55b],al
  4082bd:	add    BYTE PTR [edi+0x38fc4594],ch
  4082c3:	loope  0x408339
  4082c5:	adc    BYTE PTR [edi],bl
  4082c7:	pop    esp
  4082c8:	or     ebp,eax
  4082ca:	add    BYTE PTR [eax],al
  4082cc:	shr    BYTE PTR [ecx-0x1],0xff
  4082d0:	adc    ecx,0xe
  4082d3:	test   edi,edx
  4082d5:	sbb    BYTE PTR [eax],al
  4082d7:	add    BYTE PTR [edi+0x4c],al
  4082da:	test   DWORD PTR [eax],0xc7001158
  4082e0:	xchg   ebp,eax
  4082e1:	in     eax,0xfe
  4082e3:	pop    es
  4082e4:	dec    eax
  4082e5:	adc    DWORD PTR [edx+0x0],ebp
  4082e8:	jb     0x4082fb
  4082ea:	push   0x0
  4082ec:	jb     0x4082ff
  4082ee:	lea    eax,[ebp+0x24]
  4082f1:	inc    ecx
  4082f2:	mov    WORD PTR [ebp-0x125dc],es
  4082f8:	js     0x4082dc
  4082fa:	je     0x4082f4
  4082fc:	aas    
  4082fd:	pop    esp
  4082fe:	sti    
  4082ff:	call   0x3fec26
  408304:	and    edx,ecx
  408306:	jae    0x40830d
  408308:	xor    DWORD PTR [edi],ebx
  40830a:	add    BYTE PTR [eax],al
  40830c:	sbb    BYTE PTR [ecx-0x35],bh
  40830f:	sub    BYTE PTR [ecx+0x18],bl
  408312:	push   DWORD PTR [ebp-0x8]
  408315:	clc    
  408316:	sub    al,0xa9
  408318:	(bad)  
  40831a:	dec    edi
  40831b:	mov    ebp,DWORD PTR [eax-0x580b7b64]
  408321:	loop   0x408321
  408323:	push   eax
  408324:	cmp    al,BYTE PTR [eax]
  408326:	sbb    eax,0x88e29fa9
  40832b:	test   DWORD PTR [eax+0xfffeda],ecx
  408331:	add    BYTE PTR [eax-0x60005b9a],ah
  408337:	jge    0x408338
  408339:	xor    DWORD PTR [bp+di],esi
  40833c:	in     al,dx
  40833d:	inc    eax
  40833e:	xor    DWORD PTR [esi-0x6a610f89],ecx
  408344:	xor    edi,edi
  408346:	and    al,0x2f
  408348:	sbb    esi,DWORD PTR [esi-0x37]
  40834b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834c:	xor    BYTE PTR [ecx-0xc7614c],cl
  408352:	xchg   BYTE PTR [eax+0x3],al
  408355:	push   0xffc2f225
  40835a:	ja     0x4083db
  40835c:	xor    al,0xf7
  40835e:	outs   dx,BYTE PTR ds:[esi]
  40835f:	int    0x30
  408361:	jne    0x408398
  408363:	ret    
  408364:	int3   
  408365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408366:	pop    esi
  408367:	fnstsw WORD PTR [edx-0x7b]
  40836a:	dec    ecx
  40836b:	fnsave [eax]
  40836d:	push   DWORD PTR [edx+0x46f71faf]
  408373:	cmc    
  408374:	add    esi,DWORD PTR [ecx+eax*1-0x7d]
  408378:	add    eax,DWORD PTR [eax]
  40837a:	inc    esi
  40837b:	les    ebx,FWORD PTR [ebx+0x36c6bcf]
  408381:	(bad)  
  408382:	fadd   QWORD PTR [ecx]
  408384:	cmp    edi,edi
  408386:	push   ds
  408387:	sbb    esi,DWORD PTR [esi+0x3b170907]
  40838d:	dec    DWORD PTR [esi]
  40838f:	xchg   esi,eax
  408390:	add    al,BYTE PTR [eax]
  408392:	push   ss
  408393:	je     0x408330
  408395:	fld    DWORD PTR [eax]
  408397:	add    BYTE PTR [ebx],bh
  408399:	in     al,dx
  40839a:	add    edi,edi
  40839c:	mov    esp,0xeeff3851
  4083a1:	dec    edx
  4083a2:	mov    dh,0x7
  4083a4:	fnstcw WORD PTR [esi+0x3a]
  4083a7:	(bad)  
  4083a8:	fisubr WORD PTR [esi+0x62dee86d]
  4083ae:	xor    BYTE PTR [eax],al
  4083b0:	inc    ebp
  4083b1:	sbb    eax,0x14c6ff9b
  4083b6:	xchg   esi,eax
  4083b7:	jno    0x408402
  4083b9:	inc    esp
  4083ba:	jecxz  0x40837e
  4083bc:	mov    dh,0x1a
  4083be:	pop    esp
  4083bf:	sbb    esp,DWORD PTR [esi+0x1c308e1b]
  4083c5:	or     al,0x91
  4083c7:	jne    0x408431
  4083c9:	sbb    edi,DWORD PTR [esi-0x65]
  4083cc:	xor    DWORD PTR [esi+eax*4],edx
  4083cf:	jno    0x4083ea
  4083d1:	ds mov bl,0xc2
  4083d4:	xchg   BYTE PTR [edx],bl
  4083d6:	pushf  
  4083d7:	sbb    eax,DWORD PTR [esi-0x3cfa1e5]
  4083dd:	or     eax,DWORD PTR [ecx-0x73]
  4083e0:	js     0x4083fd
  4083e2:	dec    esi
  4083e3:	xor    BYTE PTR [eax+ebp*1+0x2c5e303e],bl
  4083ea:	sub    DWORD PTR [edi+0x56],esp
  4083ed:	sbb    esi,DWORD PTR [esi]
  4083ef:	jbe    0x40844a
  4083f1:	and    ebp,DWORD PTR [esi]
  4083f3:	xor    BYTE PTR [ecx+0x61],bl
  4083f6:	dec    ebp
  4083f7:	xor    BYTE PTR [esi],bh
  4083f9:	sbb    edx,DWORD PTR [ebx+esi*1+0x0]
  4083fd:	add    BYTE PTR [esi],bh
  4083ff:	sbb    edx,DWORD PTR [esi]
  408401:	xor    BYTE PTR [eax+ecx*1+0x2c2eb60e],ah
  408408:	cmp    eax,0xfe1b1e31
  40840d:	jne    0x408430
  40840f:	and    esi,esi
  408411:	das    
  408412:	sbb    DWORD PTR [ebp+0x45],edi
  408415:	xor    BYTE PTR [esi],al
  408417:	sbb    ebp,DWORD PTR [esp+ebp*1]
  40841a:	or     BYTE PTR [edi+ebx*8+0x2f],cl
  40841e:	neg    BYTE PTR [edx]
  408420:	pop    esp
  408421:	xor    cl,bl
  408423:	ss push edi
  408425:	add    al,0x31
  408427:	dec    ebp
  408428:	stos   DWORD PTR es:[edi],eax
  408429:	add    BYTE PTR [ecx],dh
  40842b:	shl    DWORD PTR [ecx+0x20],0xd6
  40842f:	mov    al,ds:0x4d2ae4ff
  408434:	test   al,0xae
  408436:	push   ss
  408437:	xadd   BYTE PTR ds:0xe3e3b2cc,bl
  40843e:	in     eax,dx
  40843f:	sbb    cl,BYTE PTR [edi-0x7f]
  408442:	jg     0x4084b6
  408444:	dec    DWORD PTR [esi-0x16983583]
  40844a:	xor    ch,BYTE PTR [ebx]
  40844c:	mov    esi,0x40ddfd11
  408451:	jmp    0xe1b59db8
  408456:	sub    dh,cl
  408458:	enter  0x4e66,0xbc
  40845c:	addr16 call 0xc1feaf94
  408462:	add    BYTE PTR [eax],al
  408464:	clc    
  408465:	fld    QWORD PTR [eax-0x17]
  408468:	sbb    BYTE PTR [ecx],0x75
  40846b:	icebp  
  40846c:	cmp    al,BYTE PTR ds:0x2c063ec9
  408472:	cmp    eax,0xc91b1e8d
  408477:	sub    eax,DWORD PTR [ebp+0x1a]
  40847a:	push   esp
  40847b:	jb     0x40848e
  40847d:	xchg   edi,eax
  40847e:	les    ebx,FWORD PTR ds:0xe969c15f
  408484:	enter  0xfefe,0x94
  408488:	sub    dh,BYTE PTR [edx]
  40848a:	pop    ebp
  40848b:	dec    eax
  40848c:	dec    esi
  40848d:	sbb    DWORD PTR [ecx+0x358d46a4],ecx
  408493:	jge    0x40847f
  408495:	aam    0xff
  408497:	popa   
  408498:	add    BYTE PTR [edx-0x6bcad7d9],ah
  40849e:	aas    
  40849f:	jmp    0xe9fc1a9b
  4084a4:	xor    dl,BYTE PTR [eax+ebp*2]
  4084a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a8:	fcom   st(4)
  4084aa:	(bad)  
  4084ab:	(bad)  
  4084ac:	ds clc 
  4084ae:	scas   eax,DWORD PTR es:[edi]
  4084af:	jbe    0x408479
  4084b1:	adc    eax,0x5a0cc00b
  4084b6:	aas    
  4084b7:	add    al,0x15
  4084ba:	je     0x409a0f
  4084c0:	clc    
  4084c1:	ja     0x408487
  4084c3:	cmp    bl,BYTE PTR [ecx+0x10]
  4084c6:	call   0x3c4085b8
  4084cb:	adc    BYTE PTR [eax],al
  4084cd:	pop    edx
  4084ce:	mov    edx,ebx
  4084d0:	dec    edi
  4084d1:	call   0x3f38d7
  4084d6:	sub    BYTE PTR [eax+0x67],al
  4084d9:	add    BYTE PTR [eax+0x3868bdfa],bl
  4084df:	sub    eax,DWORD PTR [eax+0x0]
  4084e2:	mov    eax,0xf00874ea
  4084e7:	mov    cl,al
  4084e9:	push   edi
  4084eb:	dec    esp
  4084ec:	add    DWORD PTR [bx+si-0x6],ecx
  4084f0:	mov    ebp,0x402b1268
  4084f5:	add    BYTE PTR [eax-0xff78b16],ch
  4084fb:	mov    cs,eax
  4084fd:	call   DWORD PTR [edi]
  4084ff:	std    
  408500:	mov    cl,0xa3
  408502:	pop    ss
  408503:	jmp    0x4139:0xa3b043ea
  40850a:	sbb    BYTE PTR [edx-0x19],al
  40850d:	inc    ecx
  40850e:	sahf   
  40850f:	adc    eax,0x61480b00
  408514:	xor    edx,DWORD PTR [esi+0x30]
  408517:	jno    0x4084c5
  408519:	call   DWORD PTR [edi]
  40851b:	inc    esi
  40851c:	dec    edi
  40851d:	push   0xbeef1508
  408522:	pusha  
  408523:	sar    BYTE PTR [ecx],0x41
  408526:	xor    DWORD PTR [ebx],ebp
  408528:	sar    esi,cl
  40852a:	pop    esp
  40852b:	xor    ebx,DWORD PTR [ebx]
  40852d:	push   ebp
  40852e:	add    BYTE PTR [eax],al
  408530:	jmp    0x4998b286
  408535:	sub    al,0x3
  408537:	out    dx,eax
  408538:	(bad)  
  408539:	ror    BYTE PTR [ecx+0x3a],cl
  40853c:	jo     0x408569
  40853e:	sar    esi,cl
  408540:	inc    esp
  408541:	and    ebx,DWORD PTR [ebx]
  408543:	inc    ecx
  408544:	jmp    0x1d28b2c2
  408549:	into   
  40854a:	sub    al,0xff
  40854c:	call   0xb62b:0x5f7fc52b
  408553:	stc    
  408554:	out    dx,eax
  408555:	xchg   esi,eax
  408556:	lock mov edi,0xff2ca1c8
  40855c:	xchg   BYTE PTR [ebp+ebx*2-0x79ddc9c8],bl
  408563:	inc    ebp
  408564:	jbe    0x40851f
  408566:	sub    al,0x6a
  408568:	dec    ebx
  408569:	ret    0x7b6
  40856c:	pop    ecx
  40856d:	in     eax,dx
  40856e:	sub    eax,0xe0445eff
  408573:	(bad)  
  408574:	fsub   QWORD PTR [edx]
  408576:	sbb    edi,DWORD PTR [ecx+0x6a2ce14f]
  40857c:	and    eax,0x4907b6ea
  408581:	shr    DWORD PTR ds:0x358236ff,0x3a
  408588:	jo     0x4085b7
  40858a:	sub    al,0x35
  40858c:	mov    dl,BYTE PTR [edx+eax*8-0x1]
  408590:	pop    ds
  408591:	cdq    
  408592:	cli    
  408593:	out    0x0,eax
  408595:	add    BYTE PTR [eax+0x18],ah
  408598:	sub    al,0xff
  40859a:	cdq    
  40859b:	pop    ss
  40859c:	jmp    0x1d5b6e1
  4085a1:	add    BYTE PTR [ecx],dh
  4085a3:	adc    al,0x69
  4085a5:	sub    al,0x7c
  4085a7:	or     al,0xd1
  4085a9:	or     al,0xec
  4085ab:	pop    ss
  4085ac:	(bad)  
  4085ad:	sub    al,0x5c
  4085af:	sbb    dh,cl
  4085b1:	mov    dh,0x36
  4085b3:	sub    al,0x6b
  4085b5:	arpl   si,dx
  4085b7:	pop    ss
  4085b8:	push   ds
  4085b9:	into   
  4085ba:	stc    
  4085bb:	push   edx
  4085bc:	in     eax,dx
  4085bd:	add    ebx,DWORD PTR [ebx+ecx*4-0x43]
  4085c1:	xor    ch,0x44
  4085c4:	sahf   
  4085c5:	sub    al,0xb6
  4085c7:	mov    DWORD PTR [eax+esi*1],esp
  4085ca:	add    DWORD PTR [edi],edx
  4085cc:	sbb    al,0x14
  4085ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085cf:	mov    eax,ds:0xa0f71bdc
  4085d4:	call   0xee94afdc
  4085d9:	xchg   bl,dh
  4085db:	adc    ecx,ebp
  4085dd:	add    ebp,DWORD PTR [esi-0x2f]
  4085e0:	jo     0x4085e5
  4085e2:	xor    DWORD PTR [ecx+ebp*8],edx
  4085e5:	inc    esp
  4085e6:	in     al,dx
  4085e7:	pop    ds
  4085e8:	pop    esi
  4085e9:	add    al,0x31
  4085eb:	adc    al,0xc3
  4085ed:	add    ebx,ebx
  4085ef:	adc    eax,ebx
  4085f1:	add    ecx,ebx
  4085f3:	adc    esi,DWORD PTR [esi+eax*8+0x62]
  4085f7:	les    ebp,FWORD PTR [ebx-0x7a]
  4085fa:	add    BYTE PTR [eax],al
  4085fc:	inc    ebp
  4085fd:	pop    ds
  4085fe:	ss sub al,0xe1
  408601:	push   ss
  408602:	mov    ah,0x2b
  408604:	mov    eax,ds:0xa1191b24
  40860a:	call   0x9d94c012
  40860f:	push   es
  408610:	sbb    BYTE PTR [ecx],dl
  408612:	jmp    0x408617
  408614:	xor    DWORD PTR [esp+esi*1-0x1eb8e25],ebp
  40861b:	mov    ch,0x3e
  40861d:	sub    al,0x0
  40861f:	mov    dl,0x8c
  408621:	pop    ss
  408622:	call   FWORD PTR [ecx+0x6c8d4479]
  408628:	inc    ecx
  408629:	pop    ds
  40862a:	(bad)  
  40862b:	fiadd  WORD PTR ds:0x5302e7c5
  408631:	pop    ss
  408632:	jmp    DWORD PTR [eax-0x50]
  408635:	and    esi,edi
  408637:	(bad)  
  408638:	or     ch,BYTE PTR [ecx+eax*4]
  40863b:	mov    ebx,DWORD PTR [edx]
  40863d:	pop    ss
  40863e:	push   0xffffffe9
  408640:	stos   BYTE PTR es:[edi],al
  408641:	cli    
  408642:	cmp    ch,BYTE PTR [eax]
  408644:	xor    eax,0x299b517
  408649:	pop    ss
  40864a:	call   FWORD PTR [esi+0x6de80ae0]
  408650:	adc    BYTE PTR [edi],dl
  408652:	jmp    DWORD PTR [eax-0x50]
  408655:	das    
  408656:	test   DWORD PTR [esi+0x10ffaa4a],0xe940d990
  408660:	add    BYTE PTR [eax],al
  408662:	pop    ebx
  408663:	popa   
  408664:	lock jbe 0x4086b1
  408667:	pop    ss
  408668:	(bad)  
  408669:	fdivr  QWORD PTR [esi+0x2e]
  40866c:	imul   eax,DWORD PTR [edx+ebx*1+0x496c8917],0xbf4eff1f
  408677:	push   ss
  408678:	addr16 pop ss
  40867a:	inc    esi
  40867b:	sar    edi,cl
  40867d:	cmp    eax,0x36f723c0
  408682:	sbb    dl,BYTE PTR [edi]
  408684:	jne    0x408663
  408686:	sbb    al,dh
  408688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408689:	or     cl,BYTE PTR es:[ebp+0x15621185]
  408690:	inc    DWORD PTR [ebx-0x2dc953ce]
  408696:	cmc    
  408697:	adc    eax,0xe05500fe
  40869c:	idiv   bh
  40869e:	por    mm6,QWORD PTR [esp+ecx*1+0x30]
  4086a3:	sbb    eax,0x990fffa4
  4086a8:	test   ah,bl
  4086aa:	xlat   BYTE PTR ds:[ebx]
  4086ab:	jmp    0xfff6:0xf1558dfe
  4086b2:	inc    DWORD PTR [ecx+0x67]
  4086b5:	inc    edi
  4086b6:	inc    ebx
  4086b7:	dec    edi
  4086b8:	(bad)  
  4086b9:	(bad)  
  4086ba:	push   ebp
  4086bb:	loope  0x4086b3
  4086bd:	dec    DWORD PTR [edi+0x315b34ea]
  4086c3:	dec    edi
  4086c4:	jmp    edi
  4086c6:	add    BYTE PTR [eax],al
  4086c8:	fdiv   DWORD PTR [esi+edi*8+0x73d1c3ff]
  4086cf:	sbb    DWORD PTR [ebx],ebx
  4086d1:	lods   al,BYTE PTR ds:[esi]
  4086d2:	fcomip st,st(7)
  4086d4:	mov    edi,0x987503ea
  4086d9:	jmp    0xfff6:0xc9058f2f
  4086e0:	cmovno esp,edi
  4086e3:	(bad)  
  4086e5:	jmp    0x16a572e8
  4086ea:	mov    edi,0xe7418674
  4086ef:	sar    DWORD PTR [ecx-0x2a380116],1
  4086f5:	enter  0xfff6,0xef
  4086f9:	add    eax,DWORD PTR [eax]
  4086fb:	add    BYTE PTR [eax-0x64],cl
  4086fe:	test   al,dl
  408700:	pop    es
  408701:	jmp    0x413a:0x3f7050fe
  408708:	dec    eax
  408709:	jmp    0xfffe:0xea17f0b4
  408710:	lds    ebx,FWORD PTR [edi+eiz*8]
  408713:	lds    esi,FWORD PTR [ecx]
  408715:	(bad)  
  408716:	sub    edi,edi
  408718:	test   al,0xaf
  40871a:	dec    esi
  40871b:	not    DWORD PTR [esi]
  40871d:	push   cs
  40871e:	xchg   BYTE PTR [ebp-0xd6e1eb],bh
  408724:	xor    DWORD PTR [esi],ebp
  408726:	jg     0x4086c3
  408728:	xor    DWORD PTR [ebx],ebp
  40872a:	add    eax,DWORD PTR [ebx+0x3eb40000]
  408730:	xor    edi,edi
  408732:	out    dx,al
  408733:	sub    bh,al
  408735:	xor    DWORD PTR [edi-0x4dfffcd6],0xffffff87
  40873c:	sbb    al,0xf7
  40873e:	(bad)  
  40873f:	dec    ebp
  408740:	add    al,0xf
  408742:	mov    ch,0xab
  408744:	add    eax,DWORD PTR [eax]
  408746:	xor    ebx,edx
  408748:	adc    eax,DWORD PTR [eax]
  40874a:	into   
  40874b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874c:	sub    BYTE PTR [ebp+0x29],dh
  40874f:	sub    DWORD PTR [eax],0xffffff9d
  408752:	scas   al,BYTE PTR es:[edi]
  408753:	jne    0x40877e
  408755:	mov    ch,0x95
  408757:	jne    0x408782
  408759:	call   FWORD PTR [esi+0x1e7fbff]
  40875f:	lods   eax,DWORD PTR ds:[esi]
  408760:	sub    bh,bh
  408762:	mov    ds,edi
  408764:	sbb    esi,edi
  408766:	xchg   BYTE PTR [ebp-0x6cd68ad8],bl
  40876c:	(bad)  
  40876d:	popf   
  40876e:	jbe    0x40871d
  408770:	sub    BYTE PTR [ebp-0xd742ab],dh
  408776:	data16 aaa 
  408778:	sti    
  408779:	out    0x25,eax
  40877b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40877c:	sub    bh,bh
  40877e:	push   esi
  40877f:	xchg   edi,eax
  408780:	dec    ebx
  408781:	test   DWORD PTR [esi-0x2b],0xd3397528
  408788:	aas    
  408789:	popf   
  40878a:	ds in  eax,0x28
  40878d:	mov    ch,0x55
  40878f:	adc    ebx,DWORD PTR [esi]
  408791:	sub    DWORD PTR [eax],eax
  408793:	add    BYTE PTR [esi],ch
  408795:	adc    al,0x94
  408797:	sti    
  408798:	push   cs
  408799:	sub    eax,0x981e2977
  40879e:	dec    ebx
  40879f:	push   eax
  4087a0:	push   ds
  4087a1:	adc    al,0x6
  4087a3:	add    al,0x85
  4087a5:	das    
  4087a6:	push   0x67
  4087a8:	loope  0x4087b5
  4087aa:	imul   BYTE PTR [eax]
  4087ac:	xor    eax,0xac7cdb89
  4087b1:	call   0x142eb093
  4087b6:	sbb    DWORD PTR [ecx],ebp
  4087b8:	pop    esp
  4087b9:	sbb    al,0xc1
  4087bb:	(bad)  
  4087bc:	mov    esp,0x2b1cce13
  4087c1:	jle    0x4087ac
  4087c3:	sub    BYTE PTR [esp+ebx*1-0x2f],al
  4087c7:	jnp    0x40876d
  4087c9:	adc    esi,DWORD PTR [esi-0x4a077bd8]
  4087cf:	sub    BYTE PTR [esi-0x519c6304],dh
  4087d5:	adc    ebx,DWORD PTR [esi-0x69f46a92]
  4087db:	sub    BYTE PTR [ecx-0x69d7b703],cl
  4087e1:	adc    edi,DWORD PTR [ebx+ebx*1]
  4087e4:	xchg   BYTE PTR [ebx],dl
  4087e6:	jle    0x408803
  4087e8:	addr16 mov ah,0x75
  4087eb:	sub    BYTE PTR [esi-0x37],bh
  4087ee:	mov    WORD PTR [eax],?
  4087f0:	jbe    0x408805
  4087f2:	push   ecx
  4087f3:	push   esp
  4087f4:	xchg   ecx,eax
  4087f5:	adc    ebx,DWORD PTR [esi+0x28]
  4087f8:	add    BYTE PTR [eax],al
  4087fa:	pushf  
  4087fb:	call   0xfc9eb05d
  408800:	and    BYTE PTR [ebx+0x56],ah
  408803:	adc    eax,DWORD PTR [esi+0x6e]
  408806:	inc    ecx
  408807:	or     edi,DWORD PTR [esi]
  408809:	sub    BYTE PTR [esi-0x77],al
  40880c:	add    ch,ah
  40880e:	or     DWORD PTR [ecx+0x10cb4108],ecx
  408814:	jmp    DWORD PTR [esi]
  408816:	pop    ecx
  408817:	leave  
  408818:	out    dx,eax
  408819:	push   ss
  40881a:	pop    ecx
  40881b:	adc    ebp,eax
  40881d:	inc    ebp
  40881e:	xchg   edx,eax
  40881f:	adc    edi,edi
  408821:	push   cs
  408822:	xlat   BYTE PTR ds:[ebx]
  408823:	or     ch,cl
  408825:	xor    al,0x57
  408827:	adc    edi,edi
  408829:	(bad)  
  40882a:	aam    0xe
  40882c:	call   0xff534e30
  408831:	and    BYTE PTR [eax+eiz*1+0x0],ch
  408835:	cmp    al,0x6a
  408837:	add    BYTE PTR [ebx+0x7e19a5],al
  40883d:	inc    ebx
  40883e:	sub    DWORD PTR [ebx],edx
  408840:	jne    0x408823
  408842:	cmp    dl,dl
  408844:	pushf  
  408845:	(bad)  
  408846:	push   ss
  408847:	popf   
  408848:	inc    esp
  408849:	mov    ebp,0x283b6fa5
  40884e:	xor    eax,0xd4123513
  408853:	push   ebx
  408854:	add    BYTE PTR [esi+0x1be81ae0],ah
  40885a:	pop    eax
  40885b:	adc    edi,edi
  40885d:	add    DWORD PTR [eax],eax
  40885f:	add    BYTE PTR [eax+0x4d],ch
  408862:	inc    ecx
  408863:	jmp    0xe9409d22
  408868:	mov    dl,0x12
  40886a:	jne    0x40885d
  40886c:	sub    dh,BYTE PTR [ebp+edi*8+0x76]
  408870:	push   esi
  408871:	adc    esi,DWORD PTR [ebp+0x6d]
  408874:	dec    esi
  408875:	mov    DWORD PTR [eax],ecx
  408877:	push   ecx
  408878:	add    al,0xb1
  40887a:	(bad)  
  40887b:	pop    esi
  40887c:	and    al,0xd6
  40887e:	add    ebp,ecx
  408880:	sbb    DWORD PTR [ebp+0x7f168eb],0x3af700fe
  40888a:	push   0x0
  40888c:	bound  ebx,QWORD PTR [ebx]
  40888e:	push   DWORD PTR [ebp+0x50]
  408891:	cs jb  0x408831
  408894:	pop    es
  408895:	cmp    ecx,DWORD PTR [ecx+0x2b05445]
  40889b:	add    DWORD PTR [eax],ebx
  40889d:	push   ss
  40889e:	lea    eax,[ebp-0xc5c1]
  4088a4:	fsubr  DWORD PTR ds:0x161871d2
  4088aa:	or     eax,eax
  4088ac:	jl     0x408897
  4088ae:	cmp    eax,DWORD PTR [ecx+ecx*1]
  4088b1:	push   ss
  4088b2:	add    BYTE PTR [edi-0x13],dh
  4088b5:	lods   eax,DWORD PTR ds:[esi]
  4088b6:	jae    0x4088f3
  4088b8:	sbb    DWORD PTR [eax],ebx
  4088ba:	lea    eax,[ebp-0xc801]
  4088c0:	sbb    BYTE PTR [eax],dh
  4088c2:	test   eax,0xe70000a3
  4088c7:	cmp    dl,BYTE PTR [eax+0x68]
  4088ca:	fcom   DWORD PTR ds:0x3928beef
  4088d0:	jne    0x4088da
  4088d2:	lock xor al,0xc1
  4088d5:	inc    DWORD PTR [edi-0x286009d3]
  4088db:	cmp    bh,bh
  4088dd:	jne    0x4088a3
  4088df:	cmp    dh,BYTE PTR [ebp+0x8]
  4088e2:	mov    al,0xb0
  4088e4:	fwait
  4088e5:	jmp    DWORD PTR [edi-0x67fb3db0]
  4088eb:	in     al,0x89
  4088ed:	in     al,dx
  4088ee:	sbb    edx,DWORD PTR [ecx-0x4]
  4088f1:	push   0xffffff88
  4088f3:	stos   DWORD PTR es:[edi],eax
  4088f4:	sbb    al,0xff
  4088f6:	jge    0x408905
  4088f8:	out    0xd,eax
  4088fa:	mov    ch,0x3a
  4088fc:	dec    DWORD PTR [ecx+0x68398d]
  408902:	xor    ebx,edi
  408904:	adc    eax,0xea7dc9be
  408909:	inc    eax
  40890a:	xor    ebx,esp
  40890c:	jne    0x408949
  40890e:	lock cli 
  408910:	and    eax,0x50532975
  408915:	les    esi,FWORD PTR [esi]
  408917:	inc    edx
  408918:	es jne 0x408948
  40891b:	cmp    dh,BYTE PTR [eax-0x781ee6f9]
  408921:	call   FWORD PTR [esi]
  408923:	xor    al,0x41
  408925:	add    al,0x31
  408927:	enter  0xec79,0x0
  40892b:	add    BYTE PTR [eax+0x6f74f3e],dh
  408931:	adc    dh,BYTE PTR [edi+0x45]
  408934:	std    
  408935:	stos   BYTE PTR es:[edi],al
  408936:	and    eax,0xaf022175
  40893b:	or     ebx,ecx
  40893d:	out    dx,al
  40893e:	mov    dl,0xff
  408940:	out    0x5,al
  408942:	inc    ebx
  408943:	(bad)  
  408945:	out    dx,al
  408946:	add    al,BYTE PTR [eax]
  408948:	xor    DWORD PTR [edx-0x4ce0842],edi
  40894e:	add    al,BYTE PTR [eax]
  408950:	out    dx,al
  408951:	aaa    
  408952:	xor    bh,bh
  408954:	ss sti 
  408956:	add    ch,BYTE PTR [edx+0x31]
  408959:	push   ebp
  40895a:	add    al,0x6a
  40895c:	xor    DWORD PTR ds:0xa6ec8d04,esp
  408962:	ror    DWORD PTR [esp+esi*4-0x6900d352],cl
  408969:	dec    edx
  40896a:	and    eax,0xae998975
  40896f:	sti    
  408970:	cdq    
  408971:	mov    eax,0xf57effb2
  408976:	inc    edx
  408977:	je     0x4089a5
  408979:	xchg   esp,eax
  40897a:	ins    BYTE PTR es:[edi],dx
  40897b:	add    DWORD PTR [ecx],esi
  40897d:	adc    al,0xe9
  40897f:	fwait
  408980:	jp     0x4089bd
  408982:	test   al,0x3
  408984:	pop    esi
  408985:	xchg   cl,bh
  408987:	sbb    ecx,DWORD PTR [eax-0x4b]
  40898a:	dec    ebp
  40898b:	and    eax,0x77189ce1
  408990:	add    BYTE PTR [eax],al
  408992:	lods   al,BYTE PTR ds:[esi]
  408993:	pop    es
  408994:	ss and eax,0x1b9b633e
  40899a:	pop    eax
  40899b:	mov    ch,0x2d
  40899d:	and    eax,0x2d1899b8
  4089a2:	adc    BYTE PTR es:[ecx],dl
  4089a5:	aad    0xbf
  4089a7:	movhps xmm6,QWORD PTR [edi-0x54]
  4089ab:	hlt    
  4089ac:	adc    eax,0x91650e25
  4089b1:	mov    cl,BYTE PTR [edx+0x55]
  4089b4:	jmp    0xfe454ddd
  4089b9:	and    al,0xf6
  4089bb:	pcmpeqb mm6,mm7
  4089be:	(bad)  
  4089bf:	inc    ecx
  4089c0:	mov    esp,DWORD PTR [esi+eiz*8]
  4089c3:	popf   
  4089c4:	arpl   WORD PTR [edi],bx
  4089c6:	out    0xf,al
  4089c8:	(bad)  
  4089c9:	cdq    
  4089ca:	(bad)  
  4089cb:	ja     0x408958
  4089cd:	call   0x6f069e43
  4089d2:	rol    DWORD PTR [edi],0xbe
  4089d5:	and    al,0xbe
  4089d7:	mov    ebp,esp
  4089d9:	sbb    esp,DWORD PTR [ebx]
  4089db:	mov    dl,0xad
  4089dd:	and    al,0xb8
  4089df:	cdq    
  4089e0:	xchg   esp,eax
  4089e1:	sub    al,0xa6
  4089e3:	movlps QWORD PTR [ecx+ecx*1],xmm0
  4089e7:	mov    dh,0xd1
  4089e9:	ret    0xe96
  4089ec:	push   esp
  4089ed:	xor    eax,DWORD PTR [esi-0x3db79f1]
  4089f3:	pop    ds
  4089f4:	xchg   ecx,eax
  4089f5:	sub    al,0x0
  4089f7:	add    al,dl
  4089f9:	(bad)  
  4089fb:	jbe    0x4089f8
  4089fd:	cwde   
  4089fe:	out    0x76,eax
  408a00:	adc    eax,0xcae96a0f
  408a05:	mov    esi,0xf32a83a
  408a0a:	mov    ch,0x59
  408a0c:	add    eax,0x9f4eff0f
  408a11:	sbb    ebp,eax
  408a13:	and    eax,0x70ff0ed3
  408a18:	mov    edi,0xd36f6ef
  408a1d:	jp     0x408a1f
  408a1f:	rcl    DWORD PTR [edi+0x4de9414b],0xc9
  408a26:	out    dx,eax
  408a27:	push   ss
  408a28:	push   ebp
  408a29:	ud0    ebx,DWORD PTR [esi+ebx*1+0x5548c0f7]
  408a31:	jns    0xff4804a3
  408a37:	(bad)  
  408a38:	cdq    
  408a39:	push   cs
  408a3a:	addr16 lock push cs
  408a3d:	push   esp
  408a3e:	add    dh,ch
  408a40:	pop    esp
  408a41:	add    al,0xf7
  408a43:	out    0x12,al
  408a45:	pcmpeqw mm5,mm5
  408a48:	or     dh,BYTE PTR [esi-0x62ed2960]
  408a4e:	test   BYTE PTR [ebp+0x6aff0f2a],dh
  408a54:	push   eax
  408a55:	clc    
  408a56:	idiv   BYTE PTR [esi+0x30741412]
  408a5c:	add    BYTE PTR [eax],al
  408a5e:	scas   al,BYTE PTR es:[edi]
  408a5f:	shr    bl,1
  408a61:	mov    dh,0x52
  408a63:	ltr    WORD PTR ds:0x91bc91bd
  408a6a:	cmp    cl,BYTE PTR [edi]
  408a6c:	(bad)  
  408a6d:	jmp    0xf9a90030
  408a72:	xor    bh,bh
  408a74:	mov    ebp,0x6acaf00
  408a79:	call   0x40181f
  408a7e:	jmp    FWORD PTR [esp+ebp*8-0x9]
  408a82:	fbstp  TBYTE PTR [edx]
  408a84:	push   DWORD PTR [ebp+0x60]
  408a87:	cmp    bh,BYTE PTR ds:0xff32ff9b
  408a8d:	mov    ch,0xf0
  408a8f:	sub    bh,bh
  408a91:	(bad)  
  408a92:	jmp    FWORD PTR [esi+eax*1-0x70e018]
  408a99:	(bad)  
  408a9a:	jmp    FWORD PTR [eax+eiz*8-0x9]
  408a9e:	push   DWORD PTR [edx]
  408aa0:	push   DWORD PTR [ebp-0xd68c]
  408aa6:	dec    edi
  408aa7:	stos   DWORD PTR es:[edi],eax
  408aa8:	push   es
  408aa9:	call   0x4018dd
  408aae:	aas    
  408aaf:	imul   ebx,eax,0xfffffff7
  408ab2:	aas    
  408ab3:	xor    edi,edi
  408ab5:	jne    0x408ab7
  408ab7:	cmp    cl,BYTE PTR ds:0xff32ff9b
  408abd:	mov    ch,0x1c
  408abf:	sub    edi,edi
  408ac1:	inc    DWORD PTR [eax]
  408ac3:	add    bh,bl
  408ac5:	lods   al,BYTE PTR ds:[esi]
  408ac6:	push   es
  408ac7:	call   0x401a9b
  408acc:	jmp    FWORD PTR [esp+edx*8-0x9]
  408ad0:	push   DWORD PTR [edx]
  408ad2:	push   DWORD PTR [ebp-0x30]
  408ad5:	cmp    ecx,esi
  408ad7:	call   0x2af4:0xb5ff32ef
  408ade:	(bad)  
  408adf:	push   eax
  408ae1:	cs popf 
  408ae3:	(bad)  
  408ae4:	fbstp  TBYTE PTR [edx]
  408ae6:	mov    ch,0xec
  408ae8:	(bad)  
  408ae9:	xor    bh,bh
  408aeb:	call   0x3f1fa8
  408af0:	xor    DWORD PTR [esi-0x617917a9],esp
  408af6:	and    eax,ebp
  408af8:	mov    WORD PTR [eax+0x22],?
  408afb:	(bad)  
  408afc:	jle    0x408b46
  408afe:	aas    
  408aff:	div    DWORD PTR [esi-0x7a]
  408b02:	sub    ebx,edx
  408b04:	int3   
  408b05:	jle    0x408b29
  408b07:	call   FWORD PTR [ebx+edx*2+0x635eff1a]
  408b0e:	push   edx
  408b0f:	popf   
  408b10:	push   esi
  408b11:	data16 and dh,BYTE PTR [ebp-0xdd999b]
  408b18:	pop    ecx
  408b19:	aas    
  408b1a:	cmp    bh,0x3e
  408b1d:	dec    esi
  408b1e:	pop    eax
  408b1f:	lock ds inc esi
  408b22:	and    bh,bh
  408b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b25:	out    dx,eax
  408b26:	and    DWORD PTR [ebp+0x0],esi
  408b29:	add    BYTE PTR [ecx],bh
  408b2b:	and    ecx,DWORD PTR [edx]
  408b2d:	(bad)  
  408b2e:	push   ds
  408b2f:	and    dh,BYTE PTR cs:[ebp-0xddd1df]
  408b36:	sbb    DWORD PTR [ebx-0x80],edx
  408b39:	inc    DWORD PTR [esi]
  408b3b:	push   ss
  408b3c:	enter  0x8f7,0xf2
  408b40:	and    bh,bh
  408b42:	test   BYTE PTR ds:0x8d9fb97,0xb1
  408b49:	jmp    esi
  408b4b:	ret    
  408b4c:	inc    ebp
  408b4d:	or     al,0x31
  408b4f:	dec    eax
  408b50:	(bad)  
  408b51:	in     al,dx
  408b52:	mov    dl,0xbe
  408b54:	pop    ds
  408b55:	push   0x31
  408b57:	push   ecx
  408b58:	add    edi,edi
  408b5a:	cmp    al,0x3
  408b5c:	sub    edi,DWORD PTR [edx-0x76df3265]
  408b62:	ins    BYTE PTR es:[edi],dx
  408b63:	(bad)  
  408b64:	stos   DWORD PTR es:[edi],eax
  408b65:	shr    DWORD PTR [edx+0x3c],0x4
  408b69:	call   FWORD PTR [esp+edx*1+0x42]
  408b6d:	jmp    0x408b60
  408b6f:	adc    ebx,DWORD PTR [esi-0x5703d169]
  408b75:	pop    ds
  408b76:	mov    cs,WORD PTR [ecx+eax*1]
  408b79:	inc    esi
  408b7a:	dec    edx
  408b7b:	push   ebx
  408b7c:	jmp    0xe954bc2c
  408b81:	xor    DWORD PTR [esi-0x7a],0xffffffe1
  408b85:	sub    ebx,DWORD PTR [edi+0x66216e0e]
  408b8b:	xchg   BYTE PTR [ebp+0x21],ah
  408b8e:	add    BYTE PTR [eax],al
  408b90:	in     al,0x1b
  408b92:	push   ecx
  408b93:	dec    edi
  408b94:	mov    ebx,0x734b560c
  408b99:	pop    ss
  408b9a:	jmp    0x6a404755
  408b9f:	dec    eax
  408ba0:	cmp    eax,0x36ad9665
  408ba5:	jp     0x408bb0
  408ba7:	and    DWORD PTR [esp+ebx*1+0xbc8b141],esp
  408bae:	mov    esi,DWORD PTR es:[eax+ecx*1+0x72]
  408bb3:	xlat   BYTE PTR ds:[ebx]
  408bb4:	mov    ds:0xba03a83c,al
  408bb9:	dec    ecx
  408bba:	xchg   ecx,eax
  408bbb:	jmp    0x408c2e
  408bbd:	adc    al,0x69
  408bbf:	loope  0x408bbf
  408bc1:	xchg   DWORD PTR [eax-0x57b7d955],ecx
  408bc7:	add    eax,DWORD PTR [edi-0x194ecb04]
  408bcd:	or     edi,DWORD PTR [ecx]
  408bcf:	lods   al,BYTE PTR ds:[esi]
  408bd0:	xor    cl,BYTE PTR [eax+0x28]
  408bd3:	add    al,0x7e
  408bd5:	cld    
  408bd6:	xor    BYTE PTR [eax+0xd330bce],0xf1
  408bdd:	sub    ebp,0x1380e30c
  408be3:	mov    edx,0x8effd2ce
  408be8:	push   ecx
  408be9:	or     ebp,DWORD PTR [eax-0x33]
  408bec:	xchg   BYTE PTR [eax+eax*1+0x39],dl
  408bf0:	dec    ebp
  408bf1:	icebp  
  408bf2:	lahf   
  408bf3:	sahf   
  408bf4:	add    BYTE PTR [eax],al
  408bf6:	push   ecx
  408bf7:	fs push 0xbdfb32e9
  408bfd:	add    DWORD PTR [eax-0x3d16beb1],ecx
  408c03:	or     dh,BYTE PTR [ebp-0xf]
  408c06:	dec    edx
  408c07:	mov    ecx,0xfc1176c0
  408c0c:	fmul   DWORD PTR [ebp+0x11]
  408c0f:	or     ebp,ebx
  408c11:	call   0xe97f177e
  408c16:	mov    edi,0x6555460d
  408c1b:	retf   
  408c1c:	mov    eax,0xff0b114e
  408c21:	cmp    eax,eax
  408c23:	dec    ebx
  408c24:	pop    es
  408c25:	mov    ah,0xb1
  408c27:	or     esi,DWORD PTR [ebp+0x35]
  408c2a:	push   ecx
  408c2b:	or     DWORD PTR [eax],0xfeacff41
  408c31:	es icebp 
  408c33:	push   0x142e2bc9
  408c38:	push   ebp
  408c39:	bound  ebx,QWORD PTR [esi-0x69]
  408c3c:	ret    
  408c3d:	or     eax,0x60c8151
  408c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c43:	adc    ch,al
  408c45:	lds    edi,FWORD PTR [ecx+0xb]
  408c48:	jmp    DWORD PTR [eax-0x9]
  408c4b:	push   cs
  408c4c:	push   DWORD PTR [esi+eax*2+0xb]
  408c50:	jne    0x408c43
  408c52:	or     ah,BYTE PTR [eax-0x60c9216d]
  408c58:	dec    esp
  408c59:	in     eax,0x0
  408c5b:	add    BYTE PTR [ebx],bh
  408c5d:	aam    0x73
  408c5f:	sub    esi,DWORD PTR [edx-0x3ffffb4]
  408c65:	hlt    
  408c66:	std    
  408c67:	jne    0x408cdd
  408c69:	aaa    
  408c6a:	xchg   ebp,eax
  408c6b:	pushf  
  408c6c:	out    0x2a,eax
  408c6e:	push   eax
  408c6f:	call   FWORD PTR [ebp+0x24]
  408c72:	push   DWORD PTR [ebp-0x2c]
  408c75:	mov    edi,0x3ea075fd
  408c7a:	int3   
  408c7b:	xchg   esi,eax
  408c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7d:	sub    bl,BYTE PTR [edx-0x75]
  408c80:	and    eax,0x88398324
  408c85:	stos   DWORD PTR es:[edi],eax
  408c86:	or     BYTE PTR [edx-0x60],dl
  408c89:	retf   0xff9a
  408c8c:	out    0xfe,eax
  408c8e:	mov    esi,0x7c957ceb
  408c93:	adc    BYTE PTR [eax-0x5e],cl
  408c96:	push   es
  408c97:	mov    ecx,DWORD PTR [ebp-0x1b8a01fa]
  408c9d:	call   0x2b02:0x3f1a8aff
  408ca4:	or     BYTE PTR [ecx-0x3e],bl
  408ca7:	or     al,0x48
  408ca9:	retf   
  408caa:	mov    esp,ebp
  408cac:	stos   DWORD PTR es:[di],eax
  408cae:	or     bh,bh
  408cb0:	fstp   QWORD PTR ds:0x299eb9e8
  408cb6:	(bad)  
  408cb7:	(bad)  
  408cb8:	mov    ebp,0xadff5019
  408cbd:	sbb    eax,0x31e8
  408cc2:	jg     0x408ced
  408cc4:	dec    ecx
  408cc6:	dec    edx
  408cc7:	sbb    BYTE PTR [eax],al
  408cc9:	push   ebp
  408cca:	add    DWORD PTR [ebx+eax*4-0x3c],0x18
  408ccf:	ret    0x5355
  408cd2:	pop    ebx
  408cd3:	mov    bl,0x6
  408cd5:	add    BYTE PTR [esi+eax*1-0x7e],bh
  408cd9:	jge    0x408c9f
  408cdb:	adc    eax,0x7e310c74
  408ce0:	mov    al,ds:0x65f310f
  408ce5:	cmp    DWORD PTR [edi+eiz*8],0x2
  408ce9:	jne    0x408d13
  408ceb:	es inc esp
  408ced:	pop    ebx
  408cee:	push   cs
  408cef:	and    DWORD PTR [ebp-0x3e],ecx
  408cf2:	inc    ecx
  408cf3:	sti    
  408cf4:	mov    DWORD PTR [ebp+0x2d],eax
  408cf7:	jle    0x408d1c
  408cf9:	pop    es
  408cfa:	mov    dl,0x28
  408cfc:	adc    BYTE PTR [eax],al
  408cfe:	add    eax,0xfdc009f7
  408d03:	repz jmp 0xbe7267c8
  408d09:	enter  0xeb73,0x2
  408d0d:	mov    esi,esp
  408d0f:	out    0x81,al
  408d11:	loopne 0x408d41
  408d13:	jle    0x408cb5
  408d15:	adc    esi,DWORD PTR [ecx]
  408d17:	out    0x6,eax
  408d19:	or     esi,DWORD PTR [ecx-0x21]
  408d1c:	or     ebp,DWORD PTR [ebx]
  408d1e:	jno    0x408ce6
  408d20:	mov    ebp,0xf33d785d
  408d25:	inc    DWORD PTR [eax]
  408d27:	add    BYTE PTR [ebx],cl
  408d29:	ss push ds
  408d2b:	jne    0x408d52
  408d2d:	jp     0x408cf7
  408d2f:	mov    edi,0xb42b7b2
  408d34:	rol    BYTE PTR es:[edx-0x18],0xed
  408d39:	xchg   ebp,eax
  408d3a:	sbb    eax,0xc88415ff
  408d3f:	ret    
  408d40:	mov    edx,0x4fbe469f
  408d45:	xlat   BYTE PTR ds:[ebx]
  408d46:	ret    
  408d47:	(bad)  
  408d48:	mov    ecx,0x31000305
  408d4d:	push   cs
  408d4e:	mov    sp,WORD PTR [ebx+esi*8-0x77]
  408d53:	dec    ebp
  408d54:	xor    eax,0x748d660e
  408d59:	adc    al,0xd9
  408d5b:	mov    ah,0xd7
  408d5d:	jle    0x408d08
  408d5f:	sbb    eax,0x44c0d044
  408d64:	mov    WORD PTR [eax],cs
  408d66:	into   
  408d67:	sbb    eax,0x81d0d044
  408d6c:	call   0x6618:0x241dbe08
  408d73:	(bad)  
  408d74:	out    0x94,al
  408d76:	and    eax,DWORD PTR [edx+edi*1+0x9]
  408d7a:	sbb    al,0x44
  408d7c:	mov    DWORD PTR [ebx-0x6571e27f],ebx
  408d82:	sub    ecx,DWORD PTR [eax-0x7b]
  408d85:	call   0x8979:0x7eac4823
  408d8c:	add    BYTE PTR [eax],al
  408d8e:	hlt    
  408d8f:	iret   
  408d90:	aas    
  408d91:	hlt    
  408d92:	outs   dx,BYTE PTR ds:[esi]
  408d93:	or     cl,ch
  408d95:	adc    BYTE PTR [ebp-0xe203937],cl
  408d9b:	adc    esp,DWORD PTR [eax-0x16ebcef7]
  408da1:	adc    BYTE PTR [ebp-0x45f42464],dl
  408da7:	push   esi
  408da8:	fst    QWORD PTR [eax]
  408daa:	xchg   ebp,eax
  408dab:	xchg   esi,eax
  408dac:	stos   DWORD PTR es:[edi],eax
  408dad:	and    esp,ecx
  408daf:	or     BYTE PTR [ebx+eax*2+0x2c2d822e],dh
  408db6:	xchg   esi,eax
  408db7:	mov    cl,0x2d
  408db9:	sbb    eax,0x2c2d821e
  408dbe:	arpl   WORD PTR [ebx-0x65f2e2e3],bp
  408dc4:	fwait
  408dc5:	adc    esi,DWORD PTR [ecx+ecx*4+0x14215b21]
  408dcc:	jmp    0x6bf18fd4
  408dd1:	xchg   edi,eax
  408dd2:	push   cs
  408dd3:	into   
  408dd4:	jmp    eax
  408dd6:	xor    dl,BYTE PTR [eax+eax*1]
  408dd9:	cli    
  408dda:	push   esi
  408ddb:	jp     0x408dde
  408ddd:	je     0x408dce
  408ddf:	iret   
  408de0:	dec    edi
  408de1:	rcr    DWORD PTR [eax],1
  408de3:	cwde   
  408de4:	(bad)  
  408de5:	call   0x62510fa3
  408dea:	lahf   
  408deb:	and    eax,ecx
  408ded:	(bad)  
  408dee:	xor    DWORD PTR [ebx],ebx
  408df0:	push   DWORD PTR ds:0xfad40000
  408df6:	push   cs
  408df7:	outs   dx,DWORD PTR fs:[esi]
  408df9:	out    dx,eax
  408dfa:	dec    edi
  408dfb:	pop    ss
  408dfc:	out    0xef,eax
  408dfe:	jp     0x408e76
  408e00:	xor    dl,BYTE PTR [ebx+eax*4]
  408e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e04:	cmp    dl,BYTE PTR [edi+0xb]
  408e07:	xchg   esi,eax
  408e08:	lahf   
  408e09:	clc    
  408e0a:	push   cs
  408e0b:	push   edi
  408e0c:	je     0x408e14
  408e0e:	add    DWORD PTR [ecx-0x2dfd80d6],0x42
  408e15:	cmp    esi,DWORD PTR [ebp-0x27]
  408e18:	and    esi,esi
  408e1a:	imul   ebp,ecx,0xe9690788
  408e20:	mov    BYTE PTR [edi],al
  408e22:	push   ebp
  408e23:	pop    esi
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	pop    ss
  408e26:	push   0xffffffe9
  408e28:	cwde   
  408e29:	pop    es
  408e2a:	out    0xf,eax
  408e2c:	add    DWORD PTR [edi],0x7ff2f2ff
  408e32:	sub    DWORD PTR [ecx+0x53d3eee2],ebx
  408e38:	inc    ebp
  408e39:	pop    es
  408e3a:	mov    edx,DWORD PTR [ecx]
  408e3c:	fstp   TBYTE PTR [eax+eax*1-0x6d]
  408e40:	xor    ah,BYTE PTR [ebp+0x53]
  408e43:	mov    bh,0x2d
  408e45:	adc    DWORD PTR [eax],0x7a3283
  408e4b:	add    edi,edi
  408e4d:	jp     0x408e4f
  408e4f:	add    BYTE PTR [eax],cl
  408e51:	sbb    al,0xc0
  408e53:	jne    0x408e35
  408e55:	ret    
  408e56:	out    0x9d,al
  408e58:	add    BYTE PTR [eax],al
  408e5a:	sub    BYTE PTR [eax],0xff
  408e5d:	sub    eax,DWORD PTR [ebx-0x64]
  408e60:	ret    0x6f5b
  408e63:	retf   0xc2c7
  408e66:	enter  0x5512,0x8b
  408e6a:	in     al,dx
  408e6b:	mov    es,ebx
  408e6d:	lock pop es
  408e6f:	mov    edi,0xa4efdb29
  408e74:	or     bh,bh
  408e76:	gs sbb al,ch
  408e79:	add    DWORD PTR ds:0xcf50ff2b,eax
  408e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e80:	push   es
  408e81:	call   0x40107c
  408e86:	add    ebp,DWORD PTR [eax]
  408e88:	pop    eax
  408e89:	add    esp,DWORD PTR [eax+0x5774c016]
  408e8f:	popf   
  408e90:	inc    esp
  408e91:	hlt    
  408e92:	sbb    BYTE PTR [ebx],ch
  408e94:	jne    0x408ea2
  408e96:	out    dx,eax
  408e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e98:	push   es
  408e99:	call   0x3fbb91
  408e9e:	rcl    esp,1
  408ea0:	cli    
  408ea1:	lea    eax,[ebp+0x65ff5022]
  408ea7:	push   cs
  408ea8:	push   DWORD PTR [ebp+0x50]
  408eab:	cmp    bl,BYTE PTR [ecx-0x76d51003]
  408eb1:	inc    ebp
  408eb2:	lock sub dh,BYTE PTR [ebp-0x10]
  408eb6:	outs   dx,DWORD PTR ds:[esi]
  408eb7:	mov    ds:0x15e5fff6,eax
  408ebc:	push   DWORD PTR [ebp+0x0]
  408ebf:	add    BYTE PTR [eax+edi*1+0x11],cl
  408ec3:	dec    BYTE PTR [edi+0x29]
  408ec6:	mov    ebx,eax
  408ec8:	das    
  408ec9:	mov    ds:0xcf31e8fa,eax
  408ece:	jl     0x408ecf
  408ed0:	(bad)  
  408ed1:	push   ss
  408ed2:	xchg   ecx,eax
  408ed3:	test   DWORD PTR [ecx],0xeeff7cd8
  408ed9:	mov    eax,ds:0x88e65702
  408ede:	or     ebp,eax
  408ee0:	mov    DWORD PTR [ebx+ebx*1-0x1],ebp
  408ee4:	stos   BYTE PTR es:[edi],al
  408ee5:	mov    edx,0xb9f85ebd
  408eea:	or     al,BYTE PTR [eax]
  408eec:	pop    esp
  408eed:	jb     0x408f16
  408eef:	cmp    DWORD PTR [edi+eiz*8],0x0
  408ef3:	jb     0x408f05
  408ef5:	into   
  408ef6:	(bad)  
  408ef7:	fxsave [eax+0xc]
  408efb:	call   0xff5af6b0
  408f00:	sahf   
  408f01:	inc    eax
  408f02:	hlt    
  408f03:	(bad)  
  408f04:	sbb    al,0x3
  408f06:	sub    ebp,DWORD PTR [edi-0xe65974]
  408f0c:	cld    
  408f0d:	or     bl,BYTE PTR [edx]
  408f0f:	jne    0x408f3a
  408f11:	xchg   ebx,eax
  408f12:	pop    esi
  408f13:	std    
  408f14:	jbe    0x408ea4
  408f16:	sbb    DWORD PTR [ebp+0x41],esi
  408f19:	xchg   BYTE PTR [eax+0x1b315907],dl
  408f1f:	call   FWORD PTR [esi+0x72]
  408f22:	mov    al,0x13
  408f24:	add    BYTE PTR [eax],al
  408f26:	test   al,0xf9
  408f28:	sbb    DWORD PTR [ebp+0x21],esi
  408f2b:	xchg   ax,ax
  408f2d:	pop    es
  408f2e:	pop    ecx
  408f2f:	je     0x408f49
  408f31:	(bad)  
  408f32:	ds jp  0x408ecd
  408f35:	or     esi,DWORD PTR [edx]
  408f37:	(bad)
  408f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f3b:	jmp    0x408f56
  408f3d:	jne    0x408f78
  408f3f:	push   ebx
  408f40:	fwait
  408f41:	cld    
  408f42:	push   ds
  408f43:	sbb    dh,BYTE PTR ss:[ebp+0x41]
  408f47:	adc    al,0x26
  408f49:	nop
  408f4a:	ss cld 
  408f4c:	mov    ebx,DWORD PTR [eax]
  408f4e:	push   es
  408f4f:	add    eax,0x7a2e9016
  408f54:	icebp  
  408f55:	sbb    bh,BYTE PTR [esp+ebx*1+0x11]
  408f59:	outs   dx,BYTE PTR ds:[esi]
  408f5a:	lds    eax,FWORD PTR [esi+edi*8]
  408f5d:	sbb    DWORD PTR [esp-0xa],ebx
  408f61:	(bad)  
  408f62:	ss cld 
  408f64:	int3   
  408f65:	outs   dx,DWORD PTR ds:[esi]
  408f66:	(bad)  
  408f67:	add    al,0xb0
  408f69:	inc    esi
  408f6a:	and    DWORD PTR [esp+esi*1],edx
  408f6d:	(bad)  
  408f6e:	aad    0x4
  408f70:	pop    esp
  408f71:	or     BYTE PTR [ebx+0x13],cl
  408f74:	into   
  408f75:	(bad)  
  408f76:	cs cld 
  408f78:	je     0x408fea
  408f7a:	scas   al,BYTE PTR es:[edi]
  408f7b:	add    al,0xbe
  408f7d:	(bad)  
  408f7e:	cmp    al,BYTE PTR ds:0xec890c3c
  408f84:	scas   al,BYTE PTR es:[edi]
  408f85:	sbb    DWORD PTR [esi+0xf43b98],edx
  408f8b:	add    BYTE PTR [ecx+0x3a8f9e11],bh
  408f91:	add    eax,0xdc890c1c
  408f96:	mov    ds,WORD PTR [ecx]
  408f98:	jbe    0x408f32
  408f9a:	sbb    esi,eax
  408f9c:	mov    ecx,0x3a8f7e11
  408fa1:	add    eax,0xcc490bfc
  408fa6:	outs   dx,BYTE PTR ds:[esi]
  408fa7:	sbb    DWORD PTR [esi-0x68],edx
  408faa:	mov    ebx,0x3011b9fb
  408faf:	inc    esi
  408fb0:	sbb    eax,0x4d8cbc14
  408fb5:	nop
  408fb6:	and    al,0x28
  408fb8:	fistp  WORD PTR [esi+eax*2-0x71]
  408fbc:	inc    edx
  408fbd:	outs   dx,BYTE PTR ds:[esi]
  408fbe:	call   0x4d2bdb
  408fc3:	inc    ecx
  408fc4:	hlt    
  408fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fc6:	(bad)  
  408fc7:	cmp    BYTE PTR cs:[ecx+0x1bbe2614],cl
  408fce:	call   0xff440c28
  408fd3:	bound  esp,QWORD PTR ds:0x32e83aed
  408fd9:	adc    al,0x8b
  408fdb:	lods   al,BYTE PTR ds:[esi]
  408fdc:	ficom  WORD PTR [esi+0x18b7e937]
  408fe2:	jmp    0x54c3a6
  408fe7:	es xchg esi,eax
  408fe9:	(bad)  
  408fea:	(bad)  
  408feb:	call   0x24cda422
  408ff0:	add    BYTE PTR [eax],al
  408ff2:	sub    DWORD PTR [edi+edi*8+0x5c],esp
  408ff6:	rol    DWORD PTR [edx],0x75
  408ff9:	stc    
  408ffa:	sbb    DWORD PTR [ecx+0x244d108],ecx
  409000:	(bad)  
  409001:	mov    esi,0x3482fcb5
  409006:	cmp    DWORD PTR [esp+esi*2],edx
  409009:	or     al,ch
  40900b:	inc    esp
  40900c:	cmp    al,0x28
  40900e:	xor    eax,0x5a9d7503
  409013:	mov    gs,WORD PTR [edx-0x17]
  409016:	xor    cl,BYTE PTR [edi]
  409018:	rcl    BYTE PTR [esi+ebp*1],0x6c
  40901c:	cmp    ebp,eax
  40901e:	jae    0x409023
  409020:	(bad)  
  409021:	hlt    
  409022:	ds in  al,dx
  409024:	js     0x409028
  409026:	xor    eax,0x9248914
  40902b:	out    dx,eax
  40902c:	push   es
  40902d:	cs (bad) 
  40902f:	out    dx,eax
  409030:	(bad)  
  409031:	call   0xd4c3a468
  409036:	push   ss
  409037:	adc    al,0x74
  409039:	icebp  
  40903a:	mov    dl,BYTE PTR [eax+eax*1]
  40903d:	add    BYTE PTR [edi+0x1475ff5d],al
  409043:	das    
  409044:	inc    edi
  409045:	xchg   ebp,eax
  409046:	addr16 sbb al,0xff
  409049:	jne    0x40908f
  40904b:	sbb    al,0x75
  40904d:	or     al,0x20
  40904f:	jge    0x408fe6
  409051:	jmp    DWORD PTR [edi]
  409053:	mov    eax,DWORD PTR cs:[eax]
  409056:	add    BYTE PTR [eax],al
  409058:	or     BYTE PTR [edi],dl
  40905a:	mov    eax,DWORD PTR [ebp-0x4]
  40905d:	xchg   edi,eax
  40905e:	aaa    
  40905f:	add    BYTE PTR [ebp+0x2],ch
  409062:	call   0x5768ed
  409067:	(bad)  
  409068:	lea    ebx,[esi]
  40906a:	add    BYTE PTR [eax],al
  40906c:	enter  0xc716,0x45
  409070:	in     al,dx
  409071:	pop    ss
  409072:	add    BYTE PTR [eax],al
  409074:	fadd   DWORD PTR [ecx+0x45]
  409077:	lock enter 0x16,0x0
  40907c:	push   ebp
  40907d:	aad    0xee
  40907f:	push   eax
  409080:	and    eax,0x1550f2d5
  409085:	aad    0xf6
  409087:	push   eax
  409088:	out    0xa4,eax
  40908a:	adc    bh,bh
  40908c:	pop    ebp
  40908d:	adc    al,ch
  40908f:	loope  0x409067
  409091:	sub    bh,bh
  409093:	and    DWORD PTR ds:0x5b74002c,0xffffff95
  40909a:	jl     0x409094
  40909c:	mov    BYTE PTR [edx+0x2435832b],dl
  4090a2:	add    BYTE PTR [ebp+0x4e],dh
  4090a5:	xchg   ebp,eax
  4090a6:	jl     0x409098
  4090a8:	dec    eax
  4090a9:	xchg   edx,eax
  4090aa:	pop    ds
  4090ab:	call   FWORD PTR [ebp+0x1e]
  4090ae:	push   DWORD PTR [ebp+0x44]
  4090b1:	cs cmp eax,0xff2ae795
  4090b7:	jne    0x4090ea
  4090b9:	popa   
  4090ba:	pop    ss
  4090bb:	jne    0x4090bd
  4090bd:	add    BYTE PTR ds:0x2e94d255,ah
  4090c3:	pop    ebx
  4090c4:	pop    ss
  4090c5:	jne    0x4090e8
  4090c7:	inc    ebx
  4090c8:	xchg   ecx,eax
  4090c9:	or     ecx,DWORD PTR [ecx]
  4090cb:	adc    esi,DWORD PTR [ecx-0x1]
  4090ce:	push   ss
  4090cf:	xor    edx,DWORD PTR [ecx+0x7ae019f7]
  4090d5:	inc    DWORD PTR [esi]
  4090d7:	and    edx,DWORD PTR [ecx+0x7ad809f3]
  4090dd:	push   esi
  4090df:	adc    dl,BYTE PTR [ecx+0x7acfd9ef]
  4090e5:	jmp    esi
  4090e7:	mov    dl,0x9
  4090e9:	jmp    FWORD PTR [esi]
  4090eb:	jo     0x409096
  4090ed:	(bad)  
  4090ee:	(bad)  
  4090ef:	repnz cmp DWORD PTR [ebp-0x23],0x5b1d8eeb
  4090f7:	jmp    0x40910e
  4090f9:	jne    0x409128
  4090fb:	shr    DWORD PTR [esi-0x6c],cl
  4090fe:	mov    dh,0xd2
  409100:	test   al,0xff
  409102:	scas   eax,DWORD PTR es:[edi]
  409103:	inc    eax
  409104:	or     al,ch
  409106:	mov    ebx,0xbff1667
  40910b:	jmp    0x409122
  40910d:	jne    0x409134
  40910f:	rol    DWORD PTR [edx+0x15ba8e94],cl
  409115:	jne    0x40909c
  409117:	mov    ds:0xaa7e9725,eax
  40911c:	les    ecx,FWORD PTR [edx]
  40911e:	jg     0x409102
  409120:	jg     0x4090df
  409122:	add    BYTE PTR [eax],al
  409124:	outs   dx,DWORD PTR ds:[esi]
  409125:	call   0x1040:0xc4075f15
  40912c:	xor    DWORD PTR [eax],esp
  40912e:	mov    ebp,esp
  409130:	mov    dl,0xb7
  409132:	push   ds
  409133:	push   esi
  409134:	dec    esi
  409135:	adc    al,0xdc
  409137:	or     ebx,DWORD PTR [ecx-0x57]
  40913a:	ins    DWORD PTR es:[edi],dx
  40913b:	push   ss
  40913c:	mov    ebp,DWORD PTR ds:[ebx+0x557fb20f]
  409143:	repz mov ds:0x3104810e,eax
  409149:	adc    al,0xe9
  40914b:	mov    ch,0xe9
  40914d:	aad    0xe0
  40914f:	add    edx,DWORD PTR [esi]
  409151:	xchg   ecx,esp
  409153:	sub    ebp,DWORD PTR [edx+eiz*4+0x56ee1625]
  40915a:	and    DWORD PTR [ecx+esi*1],eax
  40915d:	adc    al,0xe9
  40915f:	mov    BYTE PTR [esp+edi*8-0x48],ch
  409163:	push   ss
  409164:	fs or  al,0x11
  409167:	faddp  st(0),st
  409169:	add    dh,bh
  40916b:	mov    esi,DWORD PTR [eax+eax*1+0x6a]
  40916f:	cwde   
  409170:	ficom  WORD PTR [ebx]
  409172:	jne    0x40917b
  409174:	mov    dl,0x7e
  409176:	in     eax,0x2
  409178:	inc    ebx
  409179:	sbb    ch,BYTE PTR [edx-0x69]
  40917c:	mov    edx,0x790a5f19
  409181:	adc    ch,cl
  409183:	add    esi,DWORD PTR [ecx]
  409185:	bound  esi,QWORD PTR [eax+0x39000042]
  40918b:	adc    al,0x6c
  40918d:	mov    edi,0x8fb663a6
  409192:	cs in  al,dx
  409194:	lods   al,BYTE PTR ds:[esi]
  409195:	jae    0x409125
  409197:	add    BYTE PTR [edx-0x69],ch
  40919a:	jle    0x4091af
  40919c:	adc    eax,0x1cd42a00
  4091a1:	or     bh,BYTE PTR [ecx+0x3103e912]
  4091a7:	bound  esi,QWORD PTR [eax+0x6a143942]
  4091ad:	xchg   edi,eax
  4091ae:	pop    edx
  4091af:	push   ss
  4091b0:	add    bl,bh
  4091b2:	pop    ebp
  4091b3:	pop    DWORD PTR [ecx+esi*2-0x7b]
  4091b7:	push   0x18
  4091b9:	data16 mov dh,0x18
  4091bc:	call   0xff415282
  4091c1:	fs jbe 0x4091cc
  4091c4:	push   eax
  4091c5:	dec    esi
  4091c6:	mov    esi,0xa231e817
  4091cb:	(bad)  
  4091cc:	(bad)  
  4091cd:	jo     0x4091ad
  4091cf:	repz jmp 0x2599:0xf859afd4
  4091d7:	mov    DWORD PTR [eax],ecx
  4091d9:	adc    DWORD PTR [ebp+eiz*4-0x2],esi
  4091dd:	push   ds
  4091de:	stos   BYTE PTR es:[edi],al
  4091df:	pop    ecx
  4091e0:	in     al,0x64
  4091e2:	mov    dh,0x7
  4091e4:	push   eax
  4091e5:	sub    esi,0xfffffffe
  4091e8:	je     0x4091db
  4091ea:	sbb    ch,BYTE PTR [edx]
  4091ec:	xchg   edx,eax
  4091ed:	inc    BYTE PTR [eax]
  4091ef:	add    BYTE PTR [ebp-0x6f],al
  4091f2:	inc    esp
  4091f3:	icebp  
  4091f4:	mov    ds:0x1ae174fe,al
  4091f9:	jecxz  0x4091f4
  4091fb:	out    0x1d,al
  4091fd:	xchg   ebx,eax
  4091fe:	jl     0x4091c5
  409200:	xor    ecx,DWORD PTR [ecx+0x777641e]
  409206:	push   eax
  409207:	into   
  409208:	mov    edi,0x393cfefb
  40920d:	push   DWORD PTR [ecx+esi*8+0x4a]
  409211:	scas   al,BYTE PTR es:[edi]
  409212:	cld    
  409213:	mov    dh,0x3d
  409215:	xchg   ecx,eax
  409216:	inc    esp
  409217:	mov    cl,0xc2
  409219:	(bad)  
  40921a:	je     0x40920d
  40921c:	pop    edx
  40921d:	scas   eax,DWORD PTR es:[edi]
  40921e:	stc    
  40921f:	sahf   
  409220:	and    eax,0x32917c93
  409225:	mov    DWORD PTR [edx],ecx
  409227:	push   ecx
  409228:	xor    dl,BYTE PTR [eax+eax*1]
  40922b:	add    BYTE PTR [eax-0x37],bl
  40922e:	mov    edx,0x458d1360
  409234:	loopne 0x4091f8
  409236:	std    
  409237:	jne    0x409215
  409239:	daa    
  40923a:	jne    0x409248
  40923c:	iret   
  40923d:	lea    eax,[esi]
  40923f:	call   0x3fb80c
  409244:	retf   
  409245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409246:	test   BYTE PTR [eax],0x5
  409249:	or     eax,0x131800b8
  40924e:	add    BYTE PTR [esi+0x61],bl
  409251:	push   ebp
  409252:	or     BYTE PTR [eax],al
  409254:	add    BYTE PTR [eax],al
  409256:	lea    edi,[esi-0x71a0af0a]
  40925c:	push   es
  40925d:	call   0x401472
  409262:	and    DWORD PTR [ebx],0xffffffe9
  409265:	sti    
  409266:	or     BYTE PTR [ebx],dl
  409268:	add    bh,bh
  40926a:	lds    ecx,FWORD PTR [edx]
  40926c:	call   0xff691d58
  409271:	cmp    edx,DWORD PTR [ebp+0x3105750e]
  409277:	adc    BYTE PTR [eax],al
  409279:	add    al,bl
  40927b:	xchg   ebx,eax
  40927c:	jl     0x40927a
  40927e:	(bad)  
  40927f:	test   al,0x22
  409281:	lea    edx,ds:0x55ff5010
  409287:	add    bh,ah
  409289:	or     eax,0x8dff2329
  40928e:	push   ebp
  40928f:	adc    BYTE PTR [eax-0x1],dl
  409292:	gs add bh,ah
  409295:	cmp    ah,dl
  409297:	and    bh,bh
  409299:	lea    edx,[ebp+0x10]
  40929c:	push   eax
  40929d:	jmp    DWORD PTR ds:0xd22ee700
  4092a3:	and    bh,bh
  4092a5:	lea    esi,[ecx]
  4092a7:	xor    BYTE PTR [eax+edx*2],cl
  4092aa:	outs   dx,BYTE PTR ds:[esi]
  4092ab:	daa    
  4092ac:	cld    
  4092ad:	out    0x82,eax
  4092af:	xchg   ecx,eax
  4092b0:	adc    bh,bh
  4092b2:	test   al,0x37
  4092b4:	adc    al,0x8d
  4092b6:	in     al,dx
  4092b7:	test   BYTE PTR [esi+edi*8-0xb3c0000],dh
  4092be:	sbb    al,ah
  4092c0:	dec    edx
  4092c1:	jne    0x4092d6
  4092c3:	mov    esp,esi
  4092c5:	push   eax
  4092c6:	add    DWORD PTR [ebp+0x39],0x397511bc
  4092cd:	push   ebx
  4092ce:	pop    ecx
  4092cf:	sti    
  4092d0:	es push edi
  4092d2:	jge    0x409319
  4092d4:	or     DWORD PTR [ebx-0x6f],ebp
  4092d7:	out    dx,eax
  4092d8:	xor    DWORD PTR [edi+0x3f8c8295],edi
  4092de:	add    al,0x74
  4092e0:	xchg   esp,eax
  4092e1:	push   0xffffff91
  4092e3:	out    0x31,eax
  4092e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e6:	test   eax,0x4237482
  4092eb:	je     0x40933d
  4092ed:	xchg   ebx,eax
  4092ee:	les    edi,FWORD PTR [ebx]
  4092f0:	jo     0x4092dd
  4092f2:	adc    DWORD PTR [ebp-0x1f],esi
  4092f5:	and    ecx,DWORD PTR [edi+0x68]
  4092f8:	xor    ebx,ebp
  4092fa:	std    
  4092fb:	mov    edi,0x309acd44
  409300:	add    eax,0x44ff042c
  409305:	fistp  DWORD PTR [edx]
  409307:	stos   BYTE PTR es:[edi],al
  409308:	dec    ecx
  409309:	jmp    0x40930d
  40930b:	or     esi,DWORD PTR [ecx+0x68]
  40930e:	add    DWORD PTR [eax+0x68],ebp
  409311:	pop    ss
  409312:	(bad)  
  409315:	dec    eax
  409316:	adc    al,0xe8
  409318:	mov    eax,0x3a000453
  40931d:	stos   DWORD PTR es:[edi],eax
  40931e:	xchg   esi,eax
  40931f:	sub    eax,0x14190000
  409324:	jmp    0x9dff212c
  409329:	cwde   
  40932a:	sub    ch,ah
  40932c:	sbb    esi,DWORD PTR [esi+0x6e]
  40932f:	std    
  409330:	lea    ebx,[eax-0x402aa]
  409336:	push   esi
  409337:	rcr    BYTE PTR [edx+0x12],1
  40933a:	push   esi
  40933b:	std    
  40933c:	sti    
  40933d:	pop    ds
  40933e:	dec    esi
  40933f:	xchg   ebp,ebx
  409341:	sbb    esi,DWORD PTR [eax-0x5e]
  409344:	adc    bh,BYTE PTR gs:[esi]
  409347:	xchg   DWORD PTR [ecx+0x12],edx
  40934a:	mov    esp,0xc359410f
  40934f:	cld    
  409350:	dec    ebp
  409351:	adc    bl,BYTE PTR [esp+eax*1-0x33bb9af]
  409358:	cmp    eax,0x40f09c12
  40935d:	dec    esi
  40935e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40935f:	cld    
  409360:	sub    eax,0x10ec7c12
  409365:	push   esi
  409366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409367:	cld    
  409368:	sbb    eax,0x117eb3c1
  40936d:	add    esp,DWORD PTR [ebp+0xc]
  409370:	loop   0x40938b
  409372:	ss xchg edi,eax
  409374:	std    
  409375:	adc    dh,bl
  409377:	cld    
  409378:	jno    0x409342
  40937a:	ficomp WORD PTR [ebp+0x20]
  40937d:	inc    ebp
  40937e:	cmp    DWORD PTR [esp+edx*4],edx
  409381:	jle    0x409358
  409383:	nop
  409384:	lods   al,BYTE PTR ds:[esi]
  409385:	adc    BYTE PTR [eax],al
  409387:	add    BYTE PTR [esi+0x6a1bed86],bh
  40938d:	mov    esp,0xd43a11d5
  409392:	push   ebx
  409393:	shl    DWORD PTR [ebp-0x694b3aaa],1
  409399:	loop   0x409407
  40939b:	adc    DWORD PTR [esi+0x213bfffc],edx
  4093a1:	std    
  4093a2:	je     0x409381
  4093a4:	sub    al,ch
  4093a6:	lea    esp,[esi+0x15c00920]
  4093ac:	cmp    ch,0x74
  4093af:	loope  0x4093f2
  4093b1:	xchg   esp,edi
  4093b3:	cmp    DWORD PTR [eax+0x5c86fefe],0xbad974bc
  4093bd:	cld    
  4093be:	push   cs
  4093bf:	xchg   bl,ah
  4093c1:	cld    
  4093c2:	je     0x4093a1
  4093c4:	and    DWORD PTR [edi-0x3b2caef8],eax
  4093ca:	(bad)  
  4093cb:	pop    esi
  4093cc:	and    BYTE PTR [edi-0x7782be04],al
  4093d2:	dec    BYTE PTR [esi+0x6a]
  4093d5:	(bad)  
  4093d6:	pop    es
  4093d7:	jmp    0x692c22c3
  4093dc:	imul   eax,eax,0xd32036fd
  4093e2:	test   BYTE PTR [ecx+0x23],dh
  4093e5:	sti    
  4093e6:	(bad)  
  4093e7:	jmp    0x7240a81e
  4093ec:	add    BYTE PTR [eax],al
  4093ee:	out    dx,al
  4093ef:	ud2    
  4093f1:	sub    ecx,ecx
  4093f3:	adc    BYTE PTR [eax+0x58132d1],al
  4093f9:	adc    BYTE PTR [edx+0x41e90014],ah
  4093ff:	or     DWORD PTR [ecx+eax*1],0xeefeb431
  409406:	lds    edi,FWORD PTR [ebx-0x4765098c]
  40940c:	sub    ebp,DWORD PTR [eax]
  40940e:	sub    eax,0x4ae574fb
  409413:	lods   eax,DWORD PTR ds:[esi]
  409414:	xchg   edi,eax
  409415:	into   
  409416:	inc    ecx
  409417:	out    dx,eax
  409418:	or     al,0x0
  40941a:	add    BYTE PTR [edx+0x2c],dl
  40941d:	inc    ecx
  40941e:	mov    BYTE PTR [esi*2-0x67968ff4],ah
  409425:	call   edi
  409427:	jle    0x4093ae
  409429:	mov    eax,0x68ff24d6
  40942e:	push   esi
  40942f:	push   ss
  409430:	add    BYTE PTR [eax],al
  409432:	aad    0x91
  409434:	sar    esi,0xb7
  409437:	and    al,0x50
  409439:	call   0x4016b8
  40943e:	lds    edx,FWORD PTR [ecx+0x23c7fec1]
  409444:	push   eax
  409445:	(bad)  
  409446:	std    
  409447:	dec    esi
  409448:	(bad)  
  409449:	call   edi
  40944b:	push   ds
  40944c:	dec    esi
  40944d:	dec    ax
  40944f:	pop    ss
  409450:	mov    DWORD PTR [ebp+0x24c40000],eax
  409456:	(bad)  
  409457:	(bad)  
  409458:	fcom   DWORD PTR [ebx]
  40945a:	test   bl,dh
  40945c:	or     BYTE PTR [edi],dl
  40945e:	add    BYTE PTR [ebp-0x1ae83],cl
  409464:	inc    edi
  409465:	sbb    al,0x2
  409467:	adc    BYTE PTR [eax],bl
  409469:	pop    ss
  40946a:	add    BYTE PTR [ebp+edx*8+0x79],dh
  40946e:	inc    edx
  40946f:	sub    al,0xb8
  409471:	sahf   
  409472:	mov    dh,0x2c
  409474:	cdq    
  409475:	push   ss
  409476:	call   0x5742a6
  40947b:	or     ecx,DWORD PTR [eax]
  40947d:	mov    ds:0x1781e903,al
  409482:	add    BYTE PTR [eax],al
  409484:	push   ebp
  409485:	add    dl,0xfe
  409488:	xlat   BYTE PTR ds:[ebx]
  409489:	or     cl,BYTE PTR [ebp+0x66c02442]
  40948f:	mov    edx,0xe7fed124
  409494:	xor    ebx,esi
  409496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409497:	jmp    DWORD PTR [esi+0x347542f5]
  40949d:	in     al,0x7f
  40949f:	add    BYTE PTR [ecx],dh
  4094a1:	in     eax,dx
  4094a2:	or     eax,0x9fd53d75
  4094a7:	sahf   
  4094a8:	xchg   BYTE PTR [ecx+0x204bffa],ch
  4094ae:	fwait
  4094af:	retf   
  4094b0:	dec    ecx
  4094b1:	sub    al,0x4
  4094b3:	jmp    esp
  4094b5:	lock sbb cl,BYTE PTR [ecx]
  4094b8:	add    BYTE PTR [eax],al
  4094ba:	leave  
  4094bb:	mov    DWORD PTR [esi],ecx
  4094bd:	jmp    0x4094ea
  4094bf:	daa    
  4094c0:	add    al,0xff
  4094c2:	fsub   st(0),st
  4094c4:	sbb    bh,ch
  4094c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c7:	or     DWORD PTR [edi],0xdae9c8d
  4094cd:	(bad)  
  4094ce:	ds jg  0x409483
  4094d1:	sub    esp,ebx
  4094d3:	mov    esp,0x62c9411a
  4094d8:	(bad)  
  4094da:	es loope 0x4094cf
  4094dd:	dec    edi
  4094de:	push   ds
  4094df:	mov    ecx,0x3a1be7fa
  4094e4:	ud0    ebx,DWORD PTR [ecx]
  4094e7:	add    BYTE PTR [edi-0x1],dh
  4094ea:	push   es
  4094eb:	push   edi
  4094ec:	ret    
  4094ed:	mov    WORD PTR [ebx-0x21],?
  4094f0:	jnp    0x409477
  4094f2:	mov    ebp,0xeeff0f19
  4094f7:	cwde   
  4094f8:	repnz (bad) 
  4094fa:	pushf  
  4094fb:	pop    edi
  4094fc:	push   cs
  4094fd:	(bad)  
  4094fe:	fisub  WORD PTR [ebx]
  409500:	dec    edi
  409501:	xor    bx,bp
  409504:	stc    
  409505:	mov    edi,0xcb9ad345
  40950a:	sbb    DWORD PTR [edx+eax*1-0xaebbb01],ebp
  409511:	sbb    eax,DWORD PTR [eax-0x51f1225f]
  409517:	mov    edi,0xf9a60d9c
  40951c:	cmp    BYTE PTR [eax+eax*1],bl
  40951f:	add    BYTE PTR [eax+0x10ec5a1],bl
  409525:	fs mov esi,0x48ec3698
  40952b:	push   cs
  40952c:	xchg   cl,bh
  40952e:	rcl    BYTE PTR [esi],0xa2
  409531:	stc    
  409532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409533:	sub    BYTE PTR [esi+edx*8+0x646e0e9e],0x96
  40953b:	pop    eax
  40953c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40953d:	cli    
  40953e:	lea    ecx,[esi]
  409540:	dec    ecx
  409541:	addr16 or al,0x4
  409544:	xor    DWORD PTR [edi+0x1cb5fea8],ecx
  40954a:	jbe    0x40955a
  40954c:	inc    esi
  40954d:	stc    
  40954e:	xor    ecx,DWORD PTR [edi+0x3f]
  409551:	stc    
  409552:	gs sbb edx,ecx
  409555:	outs   dx,BYTE PTR ds:[esi]
  409556:	jmp    0x90ffc35e
  40955b:	or     eax,0x4640f926
  409560:	ret    0x45f8
  409563:	cmp    al,0xf3
  409565:	pop    es
  409566:	jmp    0x68285123
  40956b:	inc    edi
  40956c:	sar    ecx,0x2d
  40956f:	push   cs
  409570:	test   BYTE PTR [esi-0x709f2a0],0xe8
  409577:	add    esi,DWORD PTR [ecx]
  409579:	adc    al,0x62
  40957b:	enter  0xd3a,0x29
  40957f:	xchg   edi,eax
  409580:	xor    eax,0x3c094
  409585:	add    BYTE PTR [edi+ecx*1+0x10],bl
  409589:	cld    
  40958a:	xor    DWORD PTR [eax+eax*1],edx
  40958d:	jmp    0xa86c4d3c
  409592:	xor    bh,cl
  409594:	je     0x40958b
  409596:	sbb    al,BYTE PTR [ebx-0x69]
  409599:	fidivr WORD PTR [ebx+ecx*4]
  40959c:	test   BYTE PTR [ecx+0x41fef937],dl
  4095a2:	outs   dx,DWORD PTR ds:[esi]
  4095a3:	adc    eax,DWORD PTR [eax]
  4095a5:	jmp    0xc00224c1
  4095aa:	cmp    al,0xf9
  4095ac:	dec    edi
  4095ad:	shr    edx,0xa4
  4095b0:	(bad)  
  4095b1:	scas   al,BYTE PTR es:[edi]
  4095b2:	dec    BYTE PTR [esi-0x6db583f]
  4095b8:	dec    edi
  4095b9:	sahf   
  4095ba:	push   es
  4095bb:	mov    esp,0xec3496fd
  4095c0:	in     al,0x5
  4095c2:	xor    eax,0x16c8914
  4095c7:	cli    
  4095c8:	(bad)  
  4095c9:	jle    0x409640
  4095cb:	or     DWORD PTR [edi+ebp*4+0x5c00142d],eax
  4095d2:	(bad)  
  4095d3:	aad    0xfd
  4095d5:	data16 and al,0x1
  4095d8:	add    bh,cl
  4095da:	xor    dl,BYTE PTR [eax+eax*1]
  4095dd:	out    0xae,al
  4095df:	xchg   edi,edi
  4095e1:	call   0x2bd51f18
  4095e6:	daa    
  4095e7:	idiv   esi
  4095e9:	ins    BYTE PTR es:[edi],dx
  4095ea:	add    BYTE PTR [eax],al
  4095ec:	repz sub edx,DWORD PTR [eax-0x3f]
  4095f0:	jp     0x40961a
  4095f2:	inc    ecx
  4095f3:	jmp    0xe9a45212
  4095f8:	xor    cl,BYTE PTR [ebx]
  4095fa:	rcl    BYTE PTR [eax+esi*1+0x5e6474eb],0xd2
  409602:	std    
  409603:	push   cs
  409604:	sub    al,0x89
  409606:	inc    ecx
  409607:	add    ah,bh
  409609:	ret    
  40960a:	mov    dx,0xd2fc
  40960e:	(bad)  
  40960f:	out    0x5e,eax
  409611:	lods   al,BYTE PTR ds:[esi]
  409612:	(bad)  
  409613:	call   ebx
  409615:	push   ebx
  409616:	jne    0x40961a
  409618:	jecxz  0x4095c6
  40961a:	mov    edx,DWORD PTR [ebp-0xf626]
  409620:	or     eax,0x15892ad5
  409625:	pop    edi
  409626:	(bad)  
  409627:	jmp    FWORD PTR [edi-0x65]
  40962a:	retf   0x5928
  40962d:	adc    bh,bh
  40962f:	jne    0x4095bd
  409631:	sbb    ebx,DWORD PTR [ecx-0xf7306a]
  409637:	mov    ch,0xd4
  409639:	or     bh,bh
  40963b:	jmp    FWORD PTR [eax]
  40963d:	sbb    cl,ah
  40963f:	xchg   esi,eax
  409640:	mov    edi,0xf8858908
  409645:	or     bh,bh
  409647:	(bad)  
  409648:	cmp    BYTE PTR [eax+0x10193c47],bl
  40964e:	push   DWORD PTR [ebp+0x9080000]
  409654:	(bad)  
  409655:	push   DWORD PTR [eax+0x480063a4]
  40965b:	cld    
  40965c:	mov    esi,0x4d9b2b74
  409661:	cmp    al,0xd9
  409663:	adc    bh,bh
  409665:	mov    ch,0xb8
  409667:	or     bh,bh
  409669:	jmp    FWORD PTR [edi-0x62]
  40966c:	push   es
  40966d:	call   0x3f9c63
  409672:	jo     0x4096c0
  409674:	xchg   edx,eax
  409675:	dec    DWORD PTR [edi+0x76]
  409678:	test   edx,eax
  40967a:	dec    esi
  40967b:	or     bh,bh
  40967d:	push   eax
  40967e:	dec    edi
  40967f:	pop    esi
  409680:	mov    esp,0xc1e31fe
  409685:	call   0x4327aa
  40968a:	lods   al,BYTE PTR ds:[esi]
  40968b:	sub    al,0xfc
  40968d:	test   BYTE PTR [esi+esi*8+0xa],dh
  409691:	inc    esi
  409693:	aaa    
  409694:	dec    edi
  409695:	(bad)  
  409696:	mov    esi,0x4d2419e5
  40969b:	in     eax,dx
  40969c:	add    bh,bh
  40969e:	in     al,0xb4
  4096a0:	or     edi,edi
  4096a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a3:	aam    0x7e
  4096a5:	xchg   edx,eax
  4096a6:	sahf   
  4096a7:	lds    edi,FWORD PTR [edx+eax*8]
  4096aa:	sub    ebp,ebp
  4096ac:	scas   eax,DWORD PTR es:[edi]
  4096ad:	mov    bl,BYTE PTR [ebp-0x66f46f4b]
  4096b3:	mov    cl,0x71
  4096b5:	inc    DWORD PTR [eax]
  4096b7:	add    BYTE PTR [esi-0xf],bh
  4096ba:	inc    edx
  4096bb:	je     0x4096e3
  4096bd:	cmp    eax,0x4e4feb4
  4096c2:	sbb    ebp,DWORD PTR [ebx-0x17f56299]
  4096c8:	enter  0xb7a,0xff
  4096cc:	push   0xe5fffbaa
  4096d1:	sbb    DWORD PTR [eax],0x9e806d83
  4096d7:	dec    eax
  4096d9:	retf   
  4096da:	or     DWORD PTR [ebp+0x29],esi
  4096dd:	gs jg  0x40966f
  4096e0:	cs push edi
  4096e2:	jge    0x409729
  4096e4:	and    eax,0xa4feecd2
  4096e9:	repz sbb bh,BYTE PTR [edi+0x6a0b4f16]
  4096f0:	push   edx
  4096f1:	ss xchg ecx,eax
  4096f3:	pop    es
  4096f4:	sbb    DWORD PTR [ecx+0xb],edi
  4096f7:	(bad)  
  4096f8:	(bad)  
  4096f9:	shl    esi,1
  4096fb:	(bad)  
  4096fc:	jl     0x409712
  4096fe:	icebp  
  4096ff:	sbb    ebx,DWORD PTR [edx+0x5b0b1df5]
  409705:	adc    al,0x81
  409707:	xchg   esp,eax
  409708:	sbb    dl,BYTE PTR [ebx-0x17]
  40970b:	fwait
  40970c:	jns    0x409746
  40970e:	test   al,0x3
  409710:	into   
  409711:	aas    
  409712:	mov    ds:0x11471dc,al
  409717:	xlat   BYTE PTR ds:[ebx]
  409718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409719:	cmc    
  40971a:	in     eax,dx
  40971b:	inc    BYTE PTR [eax]
  40971d:	add    BYTE PTR [esi-0x80],dh
  409720:	std    
  409721:	mov    bl,0x16
  409723:	inc    ebp
  409724:	sbb    eax,0xd645a6c5
  409729:	nop
  40972a:	ss in  al,dx
  40972c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40972d:	pop    es
  40972e:	xchg   esi,eax
  40972f:	cmc    
  409730:	rol    BYTE PTR [esi],1
  409732:	mov    ds:0x869dbdf5,eax
  409737:	ins    DWORD PTR es:[edi],dx
  409738:	push   0x4113f1c7
  40973d:	lods   eax,DWORD PTR ds:[esi]
  40973e:	cmp    dl,BYTE PTR [ebx-0x17]
  409741:	or     ah,BYTE PTR [ecx+ebx*2]
  409744:	rol    ah,1
  409746:	in     ax,dx
  409748:	in     al,dx
  409749:	jo     0x4097a9
  40974b:	cmc    
  40974c:	loope  0x409791
  40974e:	fstp   QWORD PTR [edi]
  409750:	sbb    DWORD PTR [edi+edi*8-0x1efbd7c9],ebx
  409757:	hlt    
  409758:	sti    
  409759:	sti    
  40975a:	push   esi
  40975b:	mov    ds:0xec360a6c,al
  409760:	cmp    al,0x74
  409762:	cs cmc 
  409764:	rol    BYTE PTR [ebx],cl
  409766:	fwait
  409767:	adc    al,0xc1
  409769:	jbe    0x4097c8
  40976b:	push   ebx
  40976c:	jmp    0xe935ae0c
  409771:	sbb    DWORD PTR [ecx],0xffffffdb
  409774:	push   esp
  409775:	or     al,BYTE PTR [esi]
  409777:	or     DWORD PTR [eax],eax
  409779:	sub    DWORD PTR [esi+0x1a995030],ebp
  40977f:	jne    0x40971c
  409781:	add    BYTE PTR es:[eax],al
  409784:	cmp    ecx,DWORD PTR [ecx]
  409786:	rcl    BYTE PTR [ebp-0x5997bb2a],0xf6
  40978d:	push   ebx
  40978e:	add    BYTE PTR [ecx+0x11087f2b],bh
  409794:	xchg   esi,eax
  409795:	clc    
  409796:	(bad)  
  409797:	(bad)  
  409798:	sub    edx,DWORD PTR [esi-0x13d70970]
  40979e:	cwde   
  40979f:	pop    eax
  4097a0:	sub    esi,ebp
  4097a2:	(bad)  
  4097a3:	pop    esp
  4097a4:	cmp    ebp,esi
  4097a6:	je     0x409799
  4097a8:	dec    edx
  4097a9:	or     BYTE PTR [edi-0x3e34d72a],cl
  4097af:	in     eax,0x32
  4097b1:	pop    edi
  4097b2:	mov    edx,ebp
  4097b4:	mov    dl,0xcf
  4097b6:	jmp    0x40976e
  4097b8:	cmp    ch,dh
  4097ba:	mov    WORD PTR [ecx+ebp*1],gs
  4097bd:	push   DWORD PTR fs:[edi*2+0x4af574f5]
  4097c5:	loop   0x409829
  4097c7:	jmp    0xe700a0fe
  4097cc:	(bad)  
  4097ce:	(bad)  
  4097cf:	call   0x81856506
  4097d4:	xor    eax,0xf1e90014
  4097d9:	dec    esi
  4097da:	hlt    
  4097db:	jbe    0x40980d
  4097dd:	adc    al,0x0
  4097df:	add    ebp,DWORD PTR ds:0x32d3006a
  4097e5:	jle    0x4097e7
  4097e7:	ins    BYTE PTR es:[edi],dx
  4097e8:	add    BYTE PTR [eax],al
  4097ea:	out    0xe7,al
  4097ec:	dec    edi
  4097ed:	fs sahf 
  4097ef:	call   0x4468e6ea
  4097f4:	inc    DWORD PTR [eax]
  4097f6:	int    0x1f
  4097f8:	push   DWORD PTR [ebp+0x44]
  4097fb:	adc    BYTE PTR [ebx+eiz*2-0x3ff4e7f8],ah
  409802:	mov    esp,0xd88ee7f2
  409807:	pop    ss
  409808:	add    BYTE PTR [eax+0x14],ch
  40980b:	sar    BYTE PTR [edi],1
  40980d:	add    BYTE PTR [edi-0x5d],al
  409810:	push   cs
  409811:	call   0x3ffc25
  409816:	test   al,0x70
  409818:	ror    BYTE PTR [ebp-0x8fbb3],1
  40981e:	(bad)  
  40981f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409820:	push   eax
  409821:	call   0x3ffc25
  409826:	and    DWORD PTR [edx-0x10],esi
  409829:	test   DWORD PTR [edi+0x190de81c],0x886aff1c
  409833:	(bad)  
  409834:	xlat   BYTE PTR ds:[ebx]
  409835:	cmp    al,0x59
  409837:	sbb    bh,bh
  409839:	mov    ch,0xc8
  40983b:	add    al,0xff
  40983d:	inc    edi
  40983f:	mov    ds:0x8358e80a,al
  409844:	(bad)  
  409845:	jmp    ecx
  409847:	jno    0x409835
  409849:	test   edi,0xbd831c
  40984f:	add    BYTE PTR [esp+eax*1-0x5cb70001],dh
  409856:	adc    DWORD PTR [eax+0x59],ebp
  409859:	pop    ss
  40985a:	out    dx,eax
  40985b:	mov    esi,0xf7ec61c7
  409860:	(bad)  
  409861:	sbb    edi,edi
  409863:	jne    0x4098b5
  409865:	seta   BYTE PTR [edx-0x4a00e369]
  40986c:	je     0x409872
  40986e:	(bad)  
  40986f:	push   DWORD PTR [ecx]
  409871:	push   ebp
  409872:	cmp    al,0x90
  409874:	push   ss
  409875:	bound  ecx,QWORD PTR [eax]
  409877:	mov    ch,0x1
  409879:	xor    cl,BYTE PTR [eax]
  40987b:	inc    DWORD PTR [esi]
  40987d:	test   al,0xf6
  40987f:	inc    BYTE PTR [ebp+esi*8+0x41f6301a]
  409886:	or     bh,bh
  409888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409889:	or     al,0x10
  40988b:	jmp    esi
  40988d:	add    al,0x58
  40988f:	nop
  409890:	fimul  WORD PTR [ecx]
  409892:	or     BYTE PTR [ebp-0x27],al
  409895:	adc    edi,DWORD PTR [edi+0x819cefe]
  40989b:	jne    0x409862
  40989d:	add    al,0xa
  40989f:	bound  esi,QWORD PTR [ecx]
  4098a1:	std    
  4098a2:	cmp    edx,eax
  4098a4:	and    eax,0x9d8aadfd
  4098a9:	jnp    0x4098eb
  4098ab:	call   0x8d476a4e
  4098b0:	hlt    
  4098b1:	enter  0xfeb3,0x0
  4098b5:	add    BYTE PTR [ebp*8-0x3ac28afb],bl
  4098bc:	and    ah,BYTE PTR [edx+0x31]
  4098bf:	std    
  4098c0:	stc    
  4098c1:	mov    edi,0xe6802e
  4098c6:	xor    ebp,edi
  4098c8:	cmp    eax,0x2fc6945
  4098cd:	add    BYTE PTR [ecx],dh
  4098cf:	mov    edx,0x15ef3c0
  4098d4:	add    eax,DWORD PTR [eax]
  4098d6:	retf   
  4098d7:	cld    
  4098d8:	cwde   
  4098d9:	(bad)  
  4098da:	fdivr  st,st(4)
  4098dc:	cwde   
  4098dd:	push   DWORD PTR [ebp-0x53afefc9]
  4098e3:	jg     0x4098f5
  4098e5:	div    DWORD PTR [esi]
  4098e7:	xor    DWORD PTR [esi+edi*8+0x76114a4],0x5150f09c
  4098f2:	xchg   ebx,eax
  4098f3:	adc    al,0xe9
  4098f5:	cli    
  4098f6:	(bad)  
  4098f7:	push   0x15101ce4
  4098fc:	jmp    0x11213204
  409901:	(bad)  
  409904:	mov    ebx,0x59cd0ef3
  409909:	pop    es
  40990a:	out    dx,al
  40990b:	inc    esp
  40990c:	jb     0x409942
  40990e:	mov    ah,0x97
  409910:	adc    al,0xf
  409912:	fdivrp st(1),st
  409914:	mov    eax,0x79dcceb1
  409919:	pop    es
  40991a:	add    BYTE PTR [eax],al
  40991c:	into   
  40991d:	fwait
  40991e:	imul   edx,DWORD PTR [esi+edi*4],0xfffffff1
  409922:	std    
  409923:	sbb    ebx,DWORD PTR [edi]
  409925:	test   ch,dh
  409927:	push   es
  409928:	dec    ebx
  409929:	adc    al,0x83
  40992b:	add    ebp,DWORD PTR [esi-0x59f12759]
  409931:	icebp  
  409932:	fst    QWORD PTR [eax+0x730cfc2a]
  409938:	xchg   esi,eax
  409939:	icebp  
  40993a:	pop    edi
  40993b:	sbb    BYTE PTR [ebp-0x79f93a17],0xa7
  409942:	int3   
  409943:	push   cs
  409944:	jle    0x409937
  409946:	sar    BYTE PTR [edi],0x98
  409949:	icebp  
  40994a:	lods   eax,DWORD PTR ds:[esi]
  40994b:	cli    
  40994c:	scas   al,BYTE PTR es:[edi]
  40994d:	push   0x97b9b40a
  409952:	nop
  409953:	push   cs
  409954:	pop    esi
  409955:	icebp  
  409956:	xchg   ebp,eax
  409957:	push   eax
  409958:	dec    ecx
  409959:	jmp    0x13999feb
  40995e:	pop    esp
  40995f:	push   es
  409960:	inc    esi
  409961:	sbb    eax,0x7bf68fa9
  409966:	add    bl,ch
  409968:	xor    al,BYTE PTR [ecx]
  40996a:	mov    esi,0x412fd801
  40996f:	jmp    0x572840a3
  409974:	aaa    
  409975:	icebp  
  409976:	(bad)  
  409977:	fcomp  QWORD PTR [edx]
  409979:	stc    
  40997a:	xchg   edi,eax
  40997b:	xchg   ebp,eax
  40997c:	aaa    
  40997d:	icebp  
  40997e:	addr16 jmp 0x409981
  409981:	add    BYTE PTR [edx],dh
  409983:	add    DWORD PTR [esi+0x412f99d1],edi
  409989:	jmp    0x372840bd
  40998e:	aaa    
  40998f:	icebp  
  409990:	(bad)  
  409991:	pushf  
  409992:	jmp    0x67f1:0x37557ff8
  409999:	jmp    0x81fe9ad0
  40999e:	xor    BYTE PTR gs:[ecx-0x17],al
  4099a2:	das    
  4099a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a4:	out    0xf6,eax
  4099a6:	xor    al,0xf1
  4099a8:	(bad)  
  4099a9:	jl     0x409965
  4099ab:	clc    
  4099ac:	addr16 xor eax,0x7de7f137
  4099b2:	sbb    al,0xf1
  4099b4:	(bad)  
  4099b5:	fsubp  st(6),st
  4099b7:	push   esi
  4099b9:	(bad)  
  4099ba:	sub    al,0xfc
  4099bc:	mov    BYTE PTR [esi+0x34],bl
  4099bf:	icebp  
  4099c0:	(bad)  
  4099c1:	jl     0x4099e0
  4099c3:	jmp    0x677558c6
  4099c8:	or     al,0xb6
  4099ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099cb:	sbb    al,ch
  4099cd:	mov    WORD PTR [edi],?
  4099cf:	icebp  
  4099d0:	(bad)  
  4099d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d2:	mul    bl
  4099d4:	neg    BYTE PTR [esi+0x666cfc34]
  4099da:	sub    al,0xf1
  4099dc:	(bad)  
  4099dd:	and    al,0x3d
  4099df:	sti    
  4099e0:	lock add BYTE PTR [esi+0xffff16],ch
  4099e7:	add    BYTE PTR [ebp+0x18],al
  4099ea:	call   0x58c3a6
  4099ef:	leave  
  4099f0:	(bad)  
  4099f2:	(bad)  
  4099f3:	push   esp
  4099f4:	mov    ds:0x7cc4830c,eax
  4099f9:	mov    bh,dh
  4099fb:	imul   ebp,DWORD PTR [edx],0x70087519
  409a01:	cdq    
  409a02:	mov    bh,bh
  409a04:	outs   dx,DWORD PTR ds:[esi]
  409a05:	imul   eax,DWORD PTR [ebp-0x4],0xffffffe0
  409a09:	adc    eax,DWORD PTR [eax]
  409a0b:	out    dx,eax
  409a0c:	jle    0x40999e
  409a0e:	scas   eax,DWORD PTR es:[edi]
  409a0f:	cmp    al,0x99
  409a11:	adc    ebp,DWORD PTR [eax-0x3f]
  409a14:	int3   
  409a15:	sar    dh,cl
  409a17:	inc    ch
  409a19:	jmp    0x409a01
  409a1b:	inc    edi
  409a1c:	je     0x409a37
  409a1e:	jmp    FWORD PTR [eax+0x11]
  409a21:	fdivr  QWORD PTR [edi]
  409a23:	add    BYTE PTR [edi],ch
  409a25:	fistp  WORD PTR [ecx+0x29]
  409a28:	mov    DWORD PTR [ebx],edx
  409a2a:	push   DWORD PTR [ebp-0x30]
  409a2d:	or     edx,DWORD PTR [eax+0x68189ffd]
  409a33:	leave  
  409a34:	dec    esp
  409a35:	sar    esi,cl
  409a37:	mov    dl,BYTE PTR [bp+di]
  409a3a:	add    BYTE PTR [eax-0x17f96181],al
  409a40:	(bad)  
  409a41:	push   ss
  409a42:	(bad)  
  409a43:	jmp    eax
  409a45:	ss cmp al,0x41
  409a48:	mov    BYTE PTR [ebx+0x0],cl
  409a4e:	mov    BYTE PTR [ebx+0xb5075fe],dl
  409a54:	pop    ebx
  409a55:	dec    BYTE PTR [edi+0x7d1d6818]
  409a5b:	sar    dh,cl
  409a5d:	addr16 xor ebx,edi
  409a60:	add    al,BYTE PTR [eax]
  409a62:	mov    cl,0x9e
  409a64:	lea    eax,[edi]
  409a66:	pop    ecx
  409a67:	and    al,0x6
  409a69:	(bad)  
  409a6a:	outs   dx,BYTE PTR ds:[esi]
  409a6c:	mov    ?,ebx
  409a6e:	ss lock cli 
  409a71:	out    0x86,eax
  409a73:	push   ecx
  409a74:	add    al,0xff
  409a76:	clc    
  409a77:	cmp    bh,bh
  409a79:	inc    DWORD PTR [ebp-0x6300e89e]
  409a7f:	stc    
  409a80:	sbb    bl,BYTE PTR [ecx]
  409a82:	mov    ds:0xf10b045d,al
  409a87:	mov    al,0xc9
  409a89:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409a8b:	out    dx,eax
  409a8c:	sar    edi,0x66
  409a8f:	push   ebp
  409a90:	push   ebp
  409a91:	xchg   edx,eax
  409a92:	out    dx,al
  409a93:	cmp    eax,0xfd594fb3
  409a98:	add    ch,bh
  409a9a:	lahf   
  409a9b:	test   BYTE PTR [ecx-0x4d028fc4],cl
  409aa1:	inc    BYTE PTR [ebp+esi*8+0x1a]
  409aa5:	jne    0x409a29
  409aa7:	adc    eax,0xfc495804
  409aac:	add    ch,bh
  409aae:	ja     0x409a44
  409ab0:	jp     0x409aef
  409ab2:	add    BYTE PTR [eax],al
  409ab4:	lock cld 
  409ab6:	mov    dl,0xfe
  409ab8:	sbb    al,0xe5
  409aba:	jmp    0xa4e8:0x2cde260
  409ac1:	jbe    0x409ac6
  409ac3:	(bad)  
  409ac4:	js     0x409a80
  409ac6:	or     eax,DWORD PTR [eax]
  409ac8:	fsub   QWORD PTR [ecx-0x10]
  409acb:	xor    BYTE PTR [ebp-0x50],0x6d
  409acf:	add    BYTE PTR [ebx],cl
  409ad1:	sbb    al,BYTE PTR [ebx]
  409ad3:	jne    0x409b0e
  409ad5:	aad    0xb2
  409ad7:	mov    ah,BYTE PTR [esi+0x13]
  409ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409adb:	(bad)  
  409adc:	cmc    
  409add:	out    dx,eax
  409ade:	adc    bl,BYTE PTR [esi]
  409ae0:	push   esi
  409ae1:	push   0xeea5ebe1
  409ae6:	lea    eax,[ebx]
  409ae8:	(bad)  [edx]
  409aea:	xchg   BYTE PTR [ecx+0x29],bh
  409aed:	cld    
  409aee:	jno    0x409af3
  409af0:	ss out dx,al
  409af2:	add    ah,BYTE PTR [eax]
  409af4:	cs push 0xedb1ebe1
  409afa:	add    ebx,DWORD PTR gs:[esi]
  409afd:	push   0x1c9c035d
  409b02:	inc    ecx
  409b03:	int    0xbb
  409b05:	in     eax,dx
  409b06:	dec    ebp
  409b07:	int    0xf0
  409b09:	sbb    cl,ch
  409b0b:	pop    eax
  409b0c:	stos   BYTE PTR es:[edi],al
  409b0d:	add    BYTE PTR [edx-0x9bbd236],bl
  409b13:	inc    esp
  409b14:	xor    DWORD PTR [ecx+ebp*8],edx
  409b17:	add    eax,DWORD PTR [eax]
  409b19:	add    BYTE PTR [ecx],dh
  409b1b:	cmp    DWORD PTR [edx+0x3],eax
  409b1e:	fs sbb al,0x11
  409b21:	aaa    
  409b22:	jbe    0x409b38
  409b24:	jmp    0x6a5d00b7
  409b29:	cld    
  409b2a:	xor    BYTE PTR [esi-0x28],ah
  409b2d:	push   es
  409b2e:	loope  0x409ac1
  409b30:	adc    al,BYTE PTR [esi]
  409b32:	dec    edi
  409b33:	xchg   ebx,eax
  409b34:	mov    dl,0x5f
  409b36:	or     eax,0x6e69e467
  409b3b:	adc    al,BYTE PTR [ebp+0x4]
  409b3e:	sahf   
  409b3f:	addr16 in eax,dx
  409b41:	jmp    0x409baf
  409b43:	dec    ebp
  409b44:	jmp    0xf67b44c
  409b49:	inc    ebp
  409b4a:	xor    DWORD PTR [esp+ecx*4+0x40],edi
  409b4e:	lock adc edx,ecx
  409b51:	cdq    
  409b52:	sahf   
  409b53:	in     eax,dx
  409b54:	push   DWORD PTR [ebp+0x4473d43f]
  409b5a:	xor    ah,BYTE PTR [edi+0x8]
  409b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5e:	cmp    DWORD PTR [edi],esp
  409b60:	sub    BYTE PTR ds:0x3fedc391,ch
  409b67:	aam    0x74
  409b69:	xor    al,0x32
  409b6b:	pop    es
  409b6c:	inc    ebp
  409b6d:	(bad)  
  409b6e:	cmc    
  409b6f:	adc    esp,DWORD PTR [ebx+0x52f219]
  409b75:	push   0x71
  409b77:	inc    esp
  409b78:	aas    
  409b79:	sub    BYTE PTR ds:0xf17514,ch
  409b7f:	add    BYTE PTR [ebx],dh
  409b81:	pop    es
  409b82:	cmp    DWORD PTR [edi],ebx
  409b84:	ins    BYTE PTR es:[edi],dx
  409b85:	adc    al,0xeb
  409b87:	adc    BYTE PTR [edi+0x33e86a14],bl
  409b8d:	daa    
  409b8e:	push   eax
  409b8f:	push   es
  409b90:	je     0x409ba6
  409b92:	call   esp
  409b94:	gs cs inc ecx
  409b97:	jmp    0xe24c6c53
  409b9c:	repnz pusha 
  409b9e:	and    DWORD PTR [esi],esp
  409ba0:	sbb    DWORD PTR [edi+edi*1-0x58],eax
  409ba4:	xor    ch,ch
  409ba6:	adc    al,0xb8
  409ba8:	jo     0x409bfd
  409baa:	add    BYTE PTR [edx-0x12],ch
  409bad:	adc    bh,bh
  409baf:	fdiv   st(5),st
  409bb1:	sub    eax,0x17ebe941
  409bb6:	push   eax
  409bb7:	mov    dh,0xf5
  409bb9:	adc    eax,DWORD PTR [eax]
  409bbb:	jmp    0xe92baff2
  409bc0:	cmc    
  409bc1:	cwde   
  409bc2:	ret    0x6a42
  409bc5:	rol    BYTE PTR [edi],cl
  409bc7:	jmp    0xe90cb81
  409bcc:	repnz adc eax,DWORD PTR [eax]
  409bcf:	add    BYTE PTR [ebx+esi*1],bh
  409bd2:	push   DWORD PTR ds:0x415318
  409bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd9:	add    al,0x51
  409bdb:	sbb    DWORD PTR ds:[eax],ebx
  409bde:	add    esp,0x4c
  409be1:	adc    edx,DWORD PTR ds:0x76000039
  409be7:	push   ecx
  409be8:	add    bh,al
  409bea:	pop    ebp
  409beb:	inc    eax
  409bec:	aas    
  409bed:	inc    ecx
  409bee:	pop    eax
  409bef:	adc    BYTE PTR [eax],al
  409bf1:	add    BYTE PTR [eax-0x29],cl
  409bf4:	push   ebx
  409bf5:	mov    esp,DWORD PTR [esi+edx*4-0x66b40f3e]
  409bfc:	inc    ebx
  409bfd:	or     BYTE PTR [ebx],dl
  409bff:	fdiv   DWORD PTR [edx+0xb]
  409c02:	mov    ebp,DWORD PTR [ebx+0xc]
  409c05:	add    ah,bh
  409c07:	adc    al,BYTE PTR [eax+0x7631838]
  409c0d:	sub    ebx,DWORD PTR [eax+0x49]
  409c10:	leave  
  409c11:	ret    0x1800
  409c14:	cmp    BYTE PTR [eax],0xb6
  409c17:	arpl   WORD PTR [eax],dx
  409c19:	and    ebp,0x47
  409c1c:	aas    
  409c1d:	inc    ecx
  409c1e:	fcom   DWORD PTR [edi]
  409c20:	jne    0x409c29
  409c22:	add    ebx,eax
  409c24:	pop    ecx
  409c25:	leave  
  409c26:	or     bl,BYTE PTR [eax]
  409c28:	add    BYTE PTR [eax+0x3e7495e0],al
  409c2e:	push   ebx
  409c2f:	inc    ebx
  409c30:	or     al,0x4a
  409c32:	dec    ebx
  409c33:	repnz add DWORD PTR [ebx],ecx
  409c36:	sbb    ah,BYTE PTR [ebx+0x6]
  409c39:	and    DWORD PTR ds:0x8c75011b,0x38
  409c40:	shr    bl,0x2c
  409c43:	adc    eax,0x52230c4d
  409c48:	or     al,0x5
  409c4a:	add    BYTE PTR [eax],al
  409c4c:	xor    ebp,edi
  409c4e:	push   es
  409c4f:	add    BYTE PTR [ecx],dh
  409c51:	mov    esp,0xc4e101e2
  409c56:	sbb    al,0x8d
  409c58:	jbe    0x409c04
  409c5a:	push   edx
  409c5b:	mov    eax,DWORD PTR [esi*8+0x20665044]
  409c62:	adc    BYTE PTR [edx+0x49],dl
  409c65:	test   al,0x9a
  409c67:	(bad)  
  409c68:	push   esi
  409c69:	push   ebp
  409c6a:	pop    ebp
  409c6b:	leave  
  409c6c:	jae    0x409c63
  409c6e:	add    ch,BYTE PTR [ebx]
  409c70:	push   0xffffff9a
  409c72:	jne    0x409c80
  409c74:	ds call 0x7720684
  409c7a:	add    al,0xff
  409c7c:	inc    esp
  409c7d:	mov    al,ds:0x7e314140
  409c82:	(bad)  
  409c83:	cvtpi2ps xmm7,QWORD PTR ds:0xafa86577
  409c8a:	(bad)  
  409c8b:	imul   edi,DWORD PTR ds:0x61f04670,0xfe8bf655
  409c95:	push   ecx
  409c96:	ins    DWORD PTR es:[edi],dx
  409c97:	add    BYTE PTR [edi+ebp*4-0x5811b00e],ah
  409c9e:	(bad)  
  409c9f:	(bad)  
  409ca0:	cmp    al,0x88
  409ca2:	inc    eax
  409ca3:	inc    ecx
  409ca4:	xor    DWORD PTR [esi-0x39],edi
  409ca7:	or     ebp,DWORD PTR [edx]
  409ca9:	cmp    eax,0xb7bc3376
  409cae:	repnz add BYTE PTR [eax],0x0
  409cb2:	dec    ecx
  409cb3:	icebp  
  409cb4:	add    dh,BYTE PTR [edx+ebx*1+0x66]
  409cb8:	inc    ebx
  409cb9:	or     BYTE PTR [ecx-0x73],dh
  409cbc:	jmp    0x898a:0xfee1bdb4
  409cc3:	inc    edi
  409cc4:	inc    esi
  409cc5:	lock sahf 
  409cc7:	adc    ebx,DWORD PTR [ecx+0xc]
  409cca:	add    ch,bl
  409ccc:	pop    eax
  409ccd:	or     BYTE PTR [ecx-0x78009b32],bl
  409cd3:	jge    0x409cbe
  409cd5:	nop
  409cd6:	cmc    
  409cd7:	jecxz  0x409cf1
  409cd9:	call   FWORD PTR ds:0x3144ff55
  409cdf:	xchg   edi,eax
  409ce0:	lods   al,BYTE PTR ds:[esi]
  409ce1:	or     al,0xdb
  409ce3:	adc    al,0xae
  409ce5:	jns    0x409d44
  409ce7:	jmp    0x82e9:0x551744fb
  409cee:	jb     0x409d0b
  409cf0:	(bad)  
  409cf2:	jmp    0x409cd0
  409cf4:	stos   BYTE PTR es:[edi],al
  409cf5:	or     al,0x31
  409cf7:	inc    ecx
  409cf8:	jb     0x409cea
  409cfa:	aaa    
  409cfb:	pusha  
  409cfc:	in     eax,dx
  409cfd:	(bad)  
  409cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cff:	sbb    al,0x76
  409d01:	sbb    DWORD PTR [ecx+0x29],edi
  409d04:	sub    BYTE PTR [edx+esi*4],al
  409d07:	shl    al,1
  409d09:	push   ebx
  409d0a:	push   ss
  409d0b:	pusha  
  409d0c:	in     eax,dx
  409d0d:	inc    BYTE PTR [ebp+0x6d19561c]
  409d13:	sub    DWORD PTR [eax-0x4dfffffd],ebp
  409d19:	shl    al,1
  409d1b:	mov    bl,BYTE PTR [ebp+0x4]
  409d1e:	jo     0x409d22
  409d20:	mov    ebx,ebx
  409d22:	sub    dl,BYTE PTR [eax]
  409d24:	xor    DWORD PTR [edi],edi
  409d26:	(bad)  
  409d27:	lock mov bl,0xd0
  409d2a:	adc    bh,bh
  409d2c:	pop    ebp
  409d2d:	sbb    BYTE PTR [ecx],dl
  409d2f:	add    esp,DWORD PTR [eax-0xef4ea17]
  409d35:	pop    edi
  409d36:	in     eax,0xcc
  409d38:	lock add al,0xe9
  409d3b:	(bad)  
  409d3c:	cmp    eax,0xdce01118
  409d41:	jmp    0xd47c9345
  409d46:	jae    0x409d2d
  409d48:	ins    DWORD PTR es:[edi],dx
  409d49:	ror    DWORD PTR [edi],cl
  409d4b:	jmp    0xde54fde7
  409d50:	or     DWORD PTR [eax+ebp*8],eax
  409d53:	lods   al,BYTE PTR ds:[esi]
  409d54:	xor    ecx,ebp
  409d56:	(bad)  
  409d57:	loop   0x409dcb
  409d59:	pusha  
  409d5a:	add    al,0xb0
  409d5c:	jo     0x409d77
  409d5e:	add    BYTE PTR [ecx+0x29],dl
  409d61:	sub    DWORD PTR [ecx-0x17],eax
  409d64:	fcmovbe st,st(4)
  409d66:	cmp    eax,0x8bfc3528
  409d6b:	jg     0x409dc4
  409d6d:	jmp    0xdd68:0x18c9a90a
  409d74:	pop    es
  409d75:	push   ebx
  409d76:	add    BYTE PTR [ecx],al
  409d78:	fsubr  DWORD PTR [ecx]
  409d7a:	inc    ecx
  409d7b:	jmp    0x6c8a9d80
  409d80:	xchg   esi,eax
  409d81:	jle    0x409db2
  409d83:	push   ds
  409d84:	shl    dh,0xae
  409d87:	mov    ecx,0x9732e900
  409d8c:	inc    esp
  409d8d:	gs sub cl,0x74
  409d91:	in     eax,dx
  409d92:	(bad)  
  409d94:	xor    al,0x16
  409d96:	ins    BYTE PTR es:[edi],dx
  409d97:	adc    al,0x83
  409d99:	and    eax,0xf6c01d2a
  409d9e:	test   eax,0x32e90081
  409da3:	jle    0x409da5
  409da5:	fs jns 0x409d94
  409da8:	dec    edi
  409da9:	ret    
  409daa:	fbstp  TBYTE PTR [eax-0x3c]
  409dad:	out    0x6d,al
  409daf:	adc    al,0xff
  409db1:	xchg   esp,eax
  409db2:	into   
  409db3:	jmp    0x534872cc
  409db8:	add    BYTE PTR [edx-0xa],ch
  409dbb:	add    al,0xb
  409dbd:	add    BYTE PTR [eax],cl
  409dbf:	sbb    al,BYTE PTR [ebp+0x14996a]
  409dc5:	jmp    DWORD PTR ds:0xc815fded
  409dcb:	sub    DWORD PTR [ecx+0x0],eax
  409dce:	or     ebx,esp
  409dd0:	add    al,BYTE PTR [ebx+0x5747b90]
  409dd6:	jno    0x409e23
  409dd8:	add    DWORD PTR [eax],eax
  409dda:	mov    BYTE PTR [ecx+0x7e18f443],bl
  409de0:	add    bh,bh
  409de2:	add    BYTE PTR [eax],al
  409de4:	and    eax,0x9f14e6e8
  409de9:	out    0xfd,al
  409deb:	or     ecx,DWORD PTR [eax+0x49398416]
  409df1:	adc    al,0x0
  409df3:	sub    DWORD PTR ds:0xd40efeec,0x36
  409dfa:	add    DWORD PTR [eax],eax
  409dfc:	dec    eax
  409dfd:	xchg   esp,eax
  409dfe:	add    BYTE PTR ss:[edi],bh
  409e01:	nop
  409e02:	and    al,0x1
  409e04:	sbb    BYTE PTR [eax+edx*2],dl
  409e07:	mov    eax,DWORD PTR [ebp-0x14]
  409e0a:	inc    eax
  409e0b:	push   edx
  409e0c:	mov    al,0x76
  409e0e:	mov    edi,edi
  409e10:	(bad)
  409e14:	pusha  
  409e15:	jmp    0x5fa0928d
  409e1a:	call   0x89c00e71
  409e1f:	jmp    FWORD PTR [edi-0x2f]
  409e22:	inc    ebx
  409e23:	lock fcom DWORD PTR [ebx]
  409e26:	add    BYTE PTR [eax],al
  409e28:	pop    ss
  409e29:	dec    edi
  409e2a:	in     al,dx
  409e2b:	add    al,cl
  409e2d:	adc    eax,DWORD PTR [eax]
  409e2f:	or     ebp,0x57
  409e32:	aas    
  409e33:	inc    ecx
  409e34:	fcom   DWORD PTR [ebx]
  409e36:	jne    0x409e8a
  409e38:	xor    DWORD PTR [ebp-0x28fbfc7],edx
  409e3e:	jmp    0x1950:0x2fd5529
  409e45:	aam    0x42
  409e47:	inc    ecx
  409e48:	add    BYTE PTR [eax],al
  409e4a:	xor    esi,ebx
  409e4c:	jne    0x409e36
  409e4e:	mov    DWORD PTR [ecx],ecx
  409e50:	pop    edi
  409e51:	add    BYTE PTR [ecx],dh
  409e53:	loop   0x409e17
  409e55:	jae    0x409e80
  409e57:	inc    ebp
  409e58:	inc    esp
  409e59:	inc    eax
  409e5a:	lock cld 
  409e5c:	jmp    0x950:0x2fcdd0d
  409e63:	cmp    eax,0xa6314144
  409e68:	jne    0x409e52
  409e6a:	pop    ecx
  409e6b:	ins    DWORD PTR es:[edi],dx
  409e6c:	pop    esi
  409e6d:	add    BYTE PTR [ecx],dh
  409e6f:	bnd ret 0x2373
  409e73:	add    eax,0xfcf0404c
  409e78:	jmp    0xc950:0x2fceaf1
  409e7f:	xor    al,0x44
  409e81:	inc    ecx
  409e82:	xor    DWORD PTR [esi+0x4119e875],ecx
  409e88:	pop    esi
  409e89:	add    BYTE PTR [ecx],dh
  409e8b:	xchg   edx,eax
  409e8c:	sbb    ch,BYTE PTR [eax-0x80]
  409e8f:	cmp    eax,0x55090043
  409e94:	pop    eax
  409e95:	add    BYTE PTR [ecx],dh
  409e97:	lods   eax,DWORD PTR ds:[esi]
  409e98:	push   0x51
  409e9a:	jno    0x409e58
  409e9c:	add    bh,bh
  409e9e:	test   BYTE PTR [ebp-0x15],dl
  409ea1:	jns    0x409ef7
  409ea3:	std    
  409ea4:	add    cl,BYTE PTR [ebx]
  409ea6:	icebp  
  409ea7:	lahf   
  409ea8:	ins    BYTE PTR es:[edi],dx
  409ea9:	lea    ebp,[ecx+ebp*1+0x53]
  409ead:	push   0x0
  409eaf:	add    BYTE PTR [eax],dh
  409eb1:	ss jbe 0x409eac
  409eb4:	leave  
  409eb5:	adc    esi,DWORD PTR [edx+0x1de6cffd]
  409ebb:	jbe    0x409e7a
  409ebd:	inc    ebx
  409ebe:	add    DWORD PTR [esi-0x44],eax
  409ec1:	out    0xd,al
  409ec3:	mov    ch,BYTE PTR [ebp-0x1c]
  409ec6:	jae    0x409f0e
  409ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec9:	inc    ebx
  409eca:	xchg   ebx,eax
  409ecb:	add    DWORD PTR [esi+0x61eaf160],esp
  409ed1:	out    0xed,al
  409ed3:	sti    
  409ed4:	xchg   edi,eax
  409ed5:	pusha  
  409ed6:	fst    QWORD PTR [ecx+ebx*4+0x3a]
  409eda:	fdiv   st(3),st
  409edc:	xchg   DWORD PTR [ebx+ebp*1-0x3e974c18],ebx
  409ee3:	add    al,0xfd
  409ee5:	pop    ds
  409ee6:	push   0x79
  409ee8:	pop    ebp
  409ee9:	adc    esi,DWORD PTR ds:0xe913d92a
  409eef:	jmp    0xe549:0xc33e69c
  409ef6:	outs   dx,BYTE PTR ds:[esi]
  409ef7:	sti    
  409ef8:	dec    edi
  409ef9:	out    0x13,al
  409efb:	in     al,dx
  409efc:	inc    edi
  409efd:	pusha  
  409efe:	loope  0x409eeb
  409f00:	in     eax,0x8e
  409f02:	(bad)  
  409f03:	sti    
  409f04:	aaa    
  409f05:	pusha  
  409f06:	jns    0x409f03
  409f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f09:	sbb    al,0x91
  409f0b:	dec    esi
  409f0c:	scas   al,BYTE PTR es:[edi]
  409f0d:	in     eax,0x75
  409f0f:	sti    
  409f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f11:	clc    
  409f12:	ins    DWORD PTR es:[edi],dx
  409f13:	jno    0x409f15
  409f15:	add    BYTE PTR [ecx],ch
  409f17:	cld    
  409f18:	and    eax,0x5de60f83
  409f1d:	jno    0x409f20
  409f1f:	std    
  409f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f21:	(bad)  
  409f22:	jmp    ebp
  409f24:	dec    ebp
  409f25:	jno    0x409f2c
  409f27:	std    
  409f28:	lods   al,BYTE PTR ds:[esi]
  409f29:	(bad)  
  409f2a:	out    dx,eax
  409f2b:	in     eax,0x3d
  409f2d:	jno    0x409f08
  409f2f:	cld    
  409f30:	push   esp
  409f32:	lods   al,BYTE PTR ds:[esi]
  409f33:	out    0xfe,al
  409f35:	inc    eax
  409f36:	ret    
  409f37:	out    0xfe,eax
  409f39:	es retf 0xfc60
  409f3d:	push   ds
  409f3e:	and    BYTE PTR [edi+edi*1],ch
  409f41:	test   al,0x32
  409f43:	xchg   ecx,eax
  409f44:	ret    
  409f45:	in     eax,0xca
  409f47:	jle    0x409f44
  409f49:	push   es
  409f4a:	stos   BYTE PTR es:[edi],al
  409f4b:	fadd   st(1),st
  409f4d:	fnstenv [edx]
  409f4f:	aas    
  409f50:	mov    eax,DWORD PTR ds:0xee007a06
  409f56:	and    DWORD PTR [eax+ebp*8],ebx
  409f59:	call   0x426a:0x72fee6b9
  409f60:	call   0x547f5e
  409f65:	loop   0x409fd9
  409f67:	popa   
  409f68:	sbb    ebp,edx
  409f6a:	ja     0x409fb9
  409f6c:	jmp    0x409f49
  409f6e:	mov    dl,0x1d
  409f70:	or     eax,0x3794303d
  409f75:	jecxz  0x409f58
  409f77:	push   cs
  409f78:	(bad)  
  409f79:	jmp    0xf9729f7e
  409f7e:	add    DWORD PTR [edx-0x55c4a3cf],edx
  409f84:	(bad)  
  409f85:	stc    
  409f86:	mov    ch,BYTE PTR [edx-0x123e2529]
  409f8c:	xor    bh,BYTE PTR [edi]
  409f8e:	mov    ecx,DWORD PTR [ebp+0x1eb3d0af]
  409f94:	sbb    ah,BYTE PTR [eax+0xc]
  409f97:	add    edi,0x3f66fe96
  409f9d:	aam    0x74
  409f9f:	in     al,0x6b
  409fa1:	fcmovnb st,st(1)
  409fa3:	stc    
  409fa4:	xor    ah,ch
  409fa6:	je     0x409f85
  409fa8:	or     dl,BYTE PTR [edx-0x1588ff55]
  409fae:	or     eax,eax
  409fb0:	pushf  
  409fb1:	adc    ebx,DWORD PTR [edi-0x37]
  409fb4:	or     al,BYTE PTR [ecx]
  409fb6:	add    bh,bh
  409fb8:	popf   
  409fb9:	adc    al,0xff
  409fbb:	jne    0x409f85
  409fbd:	clc    
  409fbe:	imul   edi,ebx,0x458bea27
  409fc4:	sbb    BYTE PTR [ecx-0x1],al
  409fc7:	jne    0x409f9d
  409fc9:	clc    
  409fca:	aas    
  409fcb:	(bad)  
  409fcc:	aaa    
  409fcd:	jmp    0x2fa:0x6497c009
  409fd4:	mov    BYTE PTR [eax],dl
  409fd6:	push   DWORD PTR [ebp-0x7c]
  409fd9:	jmp    0xff92:0xcd60f873
  409fe0:	add    BYTE PTR [eax],al
  409fe2:	addr16 push ss
  409fe4:	ror    BYTE PTR [edi],0xc
  409fe7:	retf   
  409fe8:	add    BYTE PTR [eax],al
  409fea:	mov    BYTE PTR [ecx-0x181c13bd],bl
  409ff0:	jle    0x40a031
  409ff2:	pop    eax
  409ff3:	sbb    eax,DWORD PTR [ecx+ecx*8+0x5700104a]
  409ffa:	jo     0x40a050
  409ffc:	(bad)  
  409ffd:	call   DWORD PTR [edi-0x582fbc68]
  40a003:	je     0x409fd5
  40a005:	push   0x412ae0
  40a00a:	mov    al,0x4
  40a00c:	pop    ebx
  40a00d:	add    BYTE PTR [eax],bl
  40a00f:	dec    eax
  40a010:	push   DWORD PTR [ebp-0x38]
  40a013:	jo     0x409fd1
  40a015:	aas    
  40a016:	dec    ecx
  40a017:	sbb    al,ch
  40a019:	pop    ss
  40a01a:	inc    ebx
  40a01b:	sbb    BYTE PTR [eax],al
  40a01d:	push   eax
  40a01e:	xchg   edi,eax
  40a01f:	jae    0x409ff1
  40a021:	push   0x411d58
  40a026:	xor    DWORD PTR [ebp+0xb],edx
  40a029:	pop    ebx
  40a02a:	xor    ebp,ebp
  40a02c:	pop    esp
  40a02d:	pop    ecx
  40a02e:	cmp    ch,BYTE PTR ds:0xff3a0c70
  40a034:	outs   dx,DWORD PTR ds:[esi]
  40a035:	or     BYTE PTR [edx],ch
  40a037:	xor    al,0x9
  40a039:	test   DWORD PTR [edi+ebp*8+0x2],edx
  40a03d:	add    BYTE PTR [edx],bh
  40a03f:	and    al,0x6f
  40a041:	or     esi,ebp
  40a043:	mov    eax,0xae
  40a048:	xor    ebp,ebp
  40a04a:	add    ch,bl
  40a04c:	cmp    bh,BYTE PTR cs:[edi]
  40a04f:	mov    ah,0x31
  40a051:	in     eax,dx
  40a052:	add    al,BYTE PTR [eax]
  40a054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a055:	sahf   
  40a056:	ret    0x9eb8
  40a059:	jmp    0x73c:0x23a3fef7
  40a060:	add    al,0xed
  40a062:	mov    edi,0x2ed9944
  40a067:	add    BYTE PTR [ecx],dh
  40a069:	ins    DWORD PTR es:[edi],dx
  40a06a:	cmp    BYTE PTR [eax],al
  40a06c:	es jns 0x40a0bb
  40a06f:	add    dh,BYTE PTR [ecx]
  40a071:	in     eax,dx
  40a072:	dec    edi
  40a073:	call   0xff3843fe
  40a078:	test   al,0x30
  40a07a:	enter  0xd482,0xd4
  40a07e:	add    dh,BYTE PTR [ebp+0x10]
  40a081:	add    eax,0xecf02bbc
  40a086:	div    DWORD PTR [ebp+ebp*2-0x6b]
  40a08a:	test   eax,0xbed3159
  40a08f:	sar    BYTE PTR [esi],0x70
  40a092:	push   es
  40a093:	add    dh,BYTE PTR [ecx]
  40a095:	in     eax,dx
  40a096:	mov    edi,0x2ec0944
  40a09b:	add    BYTE PTR [ecx],dh
  40a09d:	xchg   esp,eax
  40a09e:	add    DWORD PTR [edx],eax
  40a0a0:	xor    DWORD PTR [ecx+ebp*8],edx
  40a0a3:	test   BYTE PTR [ebp+0x2e6ee7ec],al
  40a0a9:	(bad)  
  40a0aa:	rcr    edi,cl
  40a0ac:	add    BYTE PTR [eax],al
  40a0ae:	out    dx,eax
  40a0af:	pop    eax
  40a0b0:	inc    ecx
  40a0b1:	add    eax,0xeae91431
  40a0b6:	pushf  
  40a0b7:	adc    al,0xe9
  40a0b9:	add    esi,DWORD PTR [edx+0x5c054160]
  40a0bf:	adc    esp,DWORD PTR [eax+0x76]
  40a0c2:	rcr    edx,1
  40a0c4:	stos   DWORD PTR es:[edi],eax
  40a0c5:	jmp    0x40a0fa
  40a0c7:	adc    al,0xe9
  40a0c9:	add    ecx,eax
  40a0cb:	mov    ah,0xe7
  40a0cd:	add    esi,DWORD PTR [ecx]
  40a0cf:	xchg   edi,eax
  40a0d0:	mov    ebp,ebx
  40a0d2:	xor    ebp,DWORD PTR [ecx-0xa]
  40a0d5:	mov    ah,BYTE PTR ds:0x893e25c0
  40a0db:	pop    ss
  40a0dc:	jmp    0x5d2dd1e4
  40a0e1:	add    dh,BYTE PTR [ecx]
  40a0e3:	adc    al,0x6a
  40a0e5:	jns    0x40a080
  40a0e7:	pop    ss
  40a0e8:	push   esp
  40a0e9:	pop    es
  40a0ea:	test   al,0x60
  40a0ec:	mov    cl,0xbf
  40a0ee:	in     eax,dx
  40a0ef:	jmp    0x40a0d4
  40a0f1:	add    esi,DWORD PTR [ecx]
  40a0f3:	adc    al,0xd0
  40a0f5:	outs   dx,DWORD PTR ds:[esi]
  40a0f6:	xor    BYTE PTR [ecx+ebp*8],dl
  40a0f9:	sbb    ch,0xeb
  40a0fc:	jmp    0x40a104
  40a0fe:	lods   al,BYTE PTR ds:[esi]
  40a0ff:	jae    0x40a0e9
  40a101:	add    esi,DWORD PTR [ecx]
  40a103:	lea    esp,[ebx]
  40a105:	shl    BYTE PTR [ebx-0x3afbaaa0],1
  40a10b:	or     al,0xae
  40a10d:	inc    ecx
  40a10e:	dec    ecx
  40a10f:	adc    eax,0x3e9
  40a114:	xor    ebp,ebp
  40a116:	in     eax,dx
  40a117:	mov    esi,0x3e6ec6d
  40a11c:	xor    DWORD PTR [eax+eax*1],edx
  40a11f:	scas   al,BYTE PTR es:[edi]
  40a120:	jo     0x40a0f6
  40a122:	(bad)  
  40a123:	call   0xad07b55a
  40a128:	cli    
  40a129:	loope  0x40a129
  40a12b:	jmp    0x2d857a62
  40a130:	sub    eax,0xafe90014
  40a135:	pop    eax
  40a136:	mov    esp,0x1432e9
  40a13b:	es jo  0x40a0da
  40a13e:	(bad)  
  40a13f:	call   0xb53fb576
  40a144:	out    dx,al
  40a145:	stc    
  40a146:	adc    ah,BYTE PTR [edi]
  40a148:	mov    esi,0xf2a488e2
  40a14d:	loop   0x40a1c3
  40a14f:	xor    eax,0xefe19c5
  40a154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a155:	mov    WORD PTR [ecx+esi*1-0x62],es
  40a159:	push   0xe09811d4
  40a15e:	(bad)  
  40a15f:	mul    BYTE PTR [ebp+0x486ac458]
  40a165:	push   eax
  40a166:	aas    
  40a167:	sub    BYTE PTR ds:0xd3b7514,ch
  40a16d:	sbb    eax,DWORD PTR [eax+0x28]
  40a170:	sub    eax,0x35300cec
  40a175:	adc    al,0x50
  40a177:	push   ecx
  40a178:	add    BYTE PTR [eax],al
  40a17a:	and    al,0x54
  40a17c:	inc    ecx
  40a17d:	jmp    0xc20109e9
  40a182:	(bad)  
  40a183:	cmp    eax,DWORD PTR [eax]
  40a185:	jmp    0x1b475c5
  40a18a:	aad    0x53
  40a18c:	inc    eax
  40a18d:	sub    BYTE PTR ds:0x2d31f0ec,dh
  40a193:	adc    al,0x50
  40a195:	add    DWORD PTR [ebp+0x54],esi
  40a198:	inc    ecx
  40a199:	add    BYTE PTR [eax],bl
  40a19b:	jmp    0x58:0x85c0c073
  40a1a2:	or     BYTE PTR [esi],cl
  40a1a4:	shl    BYTE PTR [edx+ecx*8+0x6c],0x48
  40a1a9:	inc    eax
  40a1aa:	fst    DWORD PTR [eax+ebp*8]
  40a1ad:	aad    0xf0
  40a1af:	adc    al,0x0
  40a1b1:	push   eax
  40a1b2:	lock dec esp
  40a1b4:	inc    eax
  40a1b5:	inc    ecx
  40a1b6:	fsubr  st,st(1)
  40a1b8:	jae    0x40a17a
  40a1ba:	xor    BYTE PTR [edx+0x5a],0x0
  40a1be:	enter  0x16ed,0x68
  40a1c2:	mov    ecx,0x70004154
  40a1c7:	sahf   
  40a1c8:	push   esi
  40a1c9:	add    al,bl
  40a1cb:	inc    esp
  40a1cc:	push   0x578851
  40a1d1:	call   DWORD PTR [ebp-0x1da2192c]
  40a1d7:	adc    al,0x0
  40a1d9:	or     ebx,DWORD PTR [eax+0x64]
  40a1dc:	(bad)  
  40a1dd:	inc    DWORD PTR [eax]
  40a1df:	add    BYTE PTR ds:0xc0a1e6cd,ah
  40a1e5:	adc    al,0x0
  40a1e7:	push   eax
  40a1e8:	lahf   
  40a1e9:	jo     0x40a1b3
  40a1eb:	call   0x3e800e
  40a1f0:	add    DWORD PTR [ecx],esp
  40a1f2:	mov    esp,0xe6d3d5ff
  40a1f7:	lea    esp,[eax]
  40a1f9:	sbb    BYTE PTR [eax],al
  40a1fb:	push   eax
  40a1fc:	outs   dx,DWORD PTR ds:[esi]
  40a1fd:	jo     0x40a1c3
  40a1ff:	call   0x3e7c56
  40a204:	shl    DWORD PTR [eax],1
  40a206:	mov    eax,0xfed81d83
  40a20b:	jae    0x40a271
  40a20d:	xchg   ebx,eax
  40a20e:	jnp    0x40a1c8
  40a210:	dec    eax
  40a211:	jo     0x40a241
  40a213:	push   0xef02eb31
  40a218:	out    dx,eax
  40a219:	mov    gs,WORD PTR [esi+0x8]
  40a21c:	sbb    DWORD PTR [ecx+0x5f1efe80],ecx
  40a222:	outs   dx,DWORD PTR ds:[esi]
  40a223:	rcl    BYTE PTR [esi],0xe1
  40a226:	or     ch,al
  40a228:	jne    0x40a2a3
  40a22a:	cmc    
  40a22b:	inc    BYTE PTR [esi]
  40a22d:	shl    DWORD PTR [esi-0x151a7b02],0x38
  40a234:	lods   eax,DWORD PTR ds:[esi]
  40a235:	inc    esi
  40a236:	cmc    
  40a237:	(bad)  
  40a238:	fs test esp,esi
  40a23b:	je     0x40a276
  40a23d:	inc    ebp
  40a23e:	es test dh,bl
  40a241:	push   ds
  40a242:	cmc    
  40a243:	je     0x40a245
  40a245:	add    cl,dh
  40a247:	push   ebp
  40a248:	cmp    DWORD PTR [edi+0x74f52ece],eax
  40a24e:	stc    
  40a24f:	add    eax,0xfebe8731
  40a254:	hlt    
  40a255:	je     0x40a244
  40a257:	adc    eax,0xeae8729
  40a25c:	cmc    
  40a25d:	je     0x40a244
  40a25f:	add    eax,0xde9e8721
  40a264:	repz je 0x40a240
  40a267:	adc    eax,0xee8e8719
  40a26c:	out    0xc,eax
  40a26e:	mov    dl,0x78
  40a270:	in     al,dx
  40a271:	add    eax,0x44bbf604
  40a276:	mov    ebx,ebp
  40a278:	add    al,BYTE PTR [eax]
  40a27a:	xor    DWORD PTR [edx+0x76],ebp
  40a27d:	call   0x6874c3b3
  40a282:	cdq    
  40a283:	adc    DWORD PTR [ebx+0x0],eax
  40a286:	push   esi
  40a287:	and    al,cl
  40a289:	out    0x86,eax
  40a28b:	add    eax,0x143a0004
  40a290:	test   eax,0x23d7366e
  40a295:	in     al,dx
  40a296:	xor    DWORD PTR [ecx+ebp*8],edx
  40a299:	add    ebx,DWORD PTR [ecx+0x31432929]
  40a29f:	(bad)  
  40a2a1:	(bad)  
  40a2a2:	push   ss
  40a2a3:	jg     0x40a2c5
  40a2a5:	add    al,0x31
  40a2a7:	or     ebp,DWORD PTR [ecx+0x3600006e]
  40a2ad:	xlat   BYTE PTR ds:[ebx]
  40a2ae:	and    ebp,esp
  40a2b0:	xor    BYTE PTR [ecx+ebp*8],dl
  40a2b3:	add    edi,esi
  40a2b5:	push   0x95e4eb2d
  40a2ba:	push   ebp
  40a2bb:	hlt    
  40a2bc:	jmp    0x45de:0xe7ba2922
  40a2c3:	hlt    
  40a2c4:	loopne 0x40a273
  40a2c6:	add    ch,bh
  40a2c8:	daa    
  40a2c9:	cdq    
  40a2ca:	test   dh,dh
  40a2cc:	iret   
  40a2cd:	fisubr WORD PTR ds:0x5cebe16e
  40a2d3:	jge    0x40a294
  40a2d5:	ficomp WORD PTR ds:0x44ebc56e
  40a2db:	jge    0x40a28c
  40a2dd:	ficomp WORD PTR [ebx+0x3e]
  40a2e0:	mov    eax,ds:0xaad11143
  40a2e5:	fdivp  st(5),st
  40a2e7:	jmp    0xccef:0xf3f5dd27
  40a2ee:	sub    dl,BYTE PTR [ebx]
  40a2f0:	xor    DWORD PTR [ecx+0x72],ecx
  40a2f3:	loopne 0x40a2a6
  40a2f5:	xlat   BYTE PTR ds:[ebx]
  40a2f6:	xchg   esp,eax
  40a2f7:	bnd ja 0x40a2d8
  40a2fa:	lods   eax,DWORD PTR ds:[esi]
  40a2fb:	mov    DWORD PTR [esi+0x66f3cddd],esp
  40a301:	fsubp  st(0),st
  40a303:	add    ebp,DWORD PTR [edx-0x69012aa8]
  40a309:	addr16 add ah,ch
  40a30c:	mov    dl,0x26
  40a30e:	add    BYTE PTR [eax+eax*1],dh
  40a311:	add    BYTE PTR [eax],bh
  40a313:	in     eax,dx
  40a314:	hlt    
  40a315:	call   0x153fb74c
  40a31a:	sbb    esp,ebp
  40a31c:	pop    ebp
  40a31d:	js     0x40a341
  40a31f:	fisttp WORD PTR [edx]
  40a321:	test   eax,0x44680da8
  40a326:	push   ecx
  40a327:	push   ebx
  40a328:	add    BYTE PTR [esi-0x68],bh
  40a32b:	or     al,ch
  40a32d:	jb     0x40a2bb
  40a32f:	fdivp  st(6),st
  40a331:	xor    BYTE PTR [eax],0x6c
  40a334:	ret    0x7415
  40a337:	adc    al,0xff
  40a339:	aam    0x1e
  40a33b:	in     al,dx
  40a33c:	jmp    0x40a39e
  40a33e:	loop   0x40a31e
  40a340:	mov    BYTE PTR [ebp+edx*4-0x21],ah
  40a344:	inc    BYTE PTR [esi+0x7d]
  40a347:	push   ds
  40a348:	add    ecx,ebp
  40a34a:	xor    cl,BYTE PTR [edi-0x213cd47c]
  40a350:	(bad)  
  40a351:	cdq    
  40a352:	jmp    0x8490:0xc2268671
  40a359:	sub    eax,ebx
  40a35b:	fdivp  st(6),st
  40a35d:	mov    ecx,0xfb7a8a3
  40a362:	mov    ds:0xfa49e7de,al
  40a367:	adc    eax,DWORD PTR [eax]
  40a369:	jo     0x40a313
  40a36b:	cdq    
  40a36c:	std    
  40a36d:	test   BYTE PTR [ebx-0x559af0e3],0x14
  40a374:	add    cl,ch
  40a376:	add    BYTE PTR [eax],al
  40a378:	mov    cl,0x88
  40a37a:	rcr    edi,0x83
  40a37d:	fdivrp st(6),st
  40a37f:	jmp    0x40a3c3
  40a381:	adc    al,0x0
  40a383:	jmp    0xc33bbb
  40a388:	dec    eax
  40a389:	adc    DWORD PTR [eax],eax
  40a38b:	lea    ecx,[edx]
  40a38d:	xor    al,0x50
  40a38f:	push   0x40fcc0
  40a394:	jo     0x40a406
  40a396:	push   edi
  40a397:	add    BYTE PTR [eax-0x22],cl
  40a39a:	mov    esi,0x47c04d75
  40a39f:	add    DWORD PTR [eax],ebx
  40a3a1:	adc    DWORD PTR [ebp-0x21d256b],ecx
  40a3a7:	jmp    DWORD PTR [ebp+0x40502c57]
  40a3ad:	scas   al,BYTE PTR es:[edi]
  40a3ae:	sub    al,BYTE PTR [ecx+0x18]
  40a3b1:	mov    ecx,0x1118575a
  40a3b6:	or     eax,eax
  40a3b8:	fisttp QWORD PTR [ebx]
  40a3ba:	jmp    0x51aceb
  40a3bf:	dec    DWORD PTR ds:0x68bae805
  40a3c5:	loop   0x40a3c4
  40a3c7:	or     ecx,DWORD PTR [eax]
  40a3c9:	pop    esp
  40a3ca:	punpckhbw mm0,QWORD PTR [ecx+edi*8]
  40a3ce:	inc    eax
  40a3cf:	add    BYTE PTR [edi],al
  40a3d1:	pop    esp
  40a3d2:	adc    al,0xe8
  40a3d4:	lahf   
  40a3d5:	pop    edi
  40a3d6:	(bad)  
  40a3d7:	jmp    DWORD PTR [ebx]
  40a3d9:	fild   QWORD PTR [eax+0x0]
  40a3dc:	add    BYTE PTR [eax],al
  40a3de:	pop    ss
  40a3df:	pop    esp
  40a3e0:	adc    al,0xe8
  40a3e2:	rcr    DWORD PTR [edi-0x2],cl
  40a3e5:	inc    DWORD PTR ds:0x37fec07c
  40a3eb:	loop   0x40a378
  40a3ed:	push   edx
  40a3ee:	fs inc esi
  40a3f0:	push   eax
  40a3f1:	call   0x3f040d
  40a3f6:	test   al,0x40
  40a3f8:	push   DWORD PTR [ebp+0x78]
  40a3fb:	jecxz  0x40a470
  40a3fd:	or     al,0x57
  40a3ff:	fs or  al,ch
  40a402:	xor    DWORD PTR [edx-0x2d99010f],edi
  40a408:	mov    BYTE PTR [esi+ebx*2+0x31dcdad5],al
  40a40f:	jmp    0x40a413
  40a411:	(bad)  
  40a412:	repz push ss
  40a414:	jnp    0x40a39a
  40a416:	jge    0x40a3c4
  40a418:	lock dec cl
  40a41b:	imul   esi,DWORD PTR [ecx],0xb67e3141
  40a421:	mov    bl,0x2f
  40a423:	xor    eax,0xffffffe7
  40a426:	sub    al,0x25
  40a428:	add    al,0x0
  40a42a:	sub    ch,BYTE PTR [ebp-0x5676d189]
  40a430:	sbb    eax,DWORD PTR [ecx+0x31]
  40a433:	bound  esi,QWORD PTR [edi+0x14]
  40a436:	sbb    DWORD PTR [ebx+0x7c],esp
  40a439:	(bad)  
  40a43a:	(bad)  
  40a43b:	jb     0x40a3f4
  40a43d:	mov    bl,0xf7
  40a43f:	cmp    dh,cl
  40a441:	dec    edi
  40a442:	add    BYTE PTR [eax],al
  40a444:	fld    DWORD PTR [edx]
  40a446:	jnp    0x40a446
  40a448:	out    0x9d,al
  40a44a:	out    dx,eax
  40a44b:	je     0x40a48e
  40a44d:	push   edx
  40a44e:	ja     0x40a45c
  40a450:	sbb    DWORD PTR [edx],0x22d90877
  40a456:	in     al,dx
  40a457:	inc    dh
  40a459:	push   ebp
  40a45a:	cmp    DWORD PTR [ebp-0x4b0ecd42],eax
  40a460:	jge    0x40a45d
  40a462:	lock (bad) 
  40a464:	cdq    
  40a465:	mov    ebp,0x6e310058
  40a46a:	in     al,dx
  40a46b:	add    DWORD PTR [ebx],esp
  40a46d:	mov    ecx,0xdbdd947b
  40a472:	out    dx,eax
  40a473:	(bad)  
  40a474:	xor    bh,ch
  40a476:	test   cl,ch
  40a478:	xor    edx,DWORD PTR [ebx+0x144f3981]
  40a47e:	pop    edx
  40a47f:	ja     0x40a4b4
  40a481:	out    dx,eax
  40a482:	sub    BYTE PTR [ebx+eax*8+0x1b],bl
  40a486:	sub    BYTE PTR [esi+eiz*2],al
  40a489:	mov    eax,ds:0xdb5ff194
  40a48e:	rcl    BYTE PTR [eax+0x53e913ff],1
  40a494:	fnstcw WORD PTR [ecx-0xb]
  40a497:	inc    edx
  40a498:	xor    ebx,ebx
  40a49a:	jae    0x40a453
  40a49c:	cmp    al,0xdb
  40a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a49f:	(bad)  [ebx+eax*2+0x6c8103e9]
  40a4a6:	inc    edx
  40a4a7:	xor    BYTE PTR [eax],al
  40a4a9:	add    BYTE PTR [eax+0x14],dh
  40a4ac:	mov    ?,WORD PTR [esi-0xf7a261e]
  40a4b2:	push   cs
  40a4b3:	pop    ecx
  40a4b4:	push   ss
  40a4b5:	add    al,0x31
  40a4b7:	ds adc ch,bh
  40a4ba:	(bad)  
  40a4bb:	pusha  
  40a4bc:	loope  0x40a4ba
  40a4be:	loopne 0x40a520
  40a4c0:	in     eax,dx
  40a4c1:	cld    
  40a4c2:	jmp    0xfd9cb426
  40a4c7:	sub    ebp,DWORD PTR [eax-0xa9f19fd]
  40a4cd:	fist   DWORD PTR [ebp-0x74]
  40a4d0:	inc    ebp
  40a4d1:	lock xlat BYTE PTR ds:[ebx]
  40a4d3:	mov    al,ds:0xdacff174
  40a4d8:	cwde   
  40a4d9:	fist   DWORD PTR [ebp+0x6ef02d8b]
  40a4df:	fistp  DWORD PTR [ebx-0x129f49ed]
  40a4e5:	push   ebx
  40a4e6:	scas   al,BYTE PTR es:[edi]
  40a4e7:	pusha  
  40a4e8:	loope  0x40a4c5
  40a4ea:	jb     0x40a4c9
  40a4ec:	or     eax,0x6cb096f0
  40a4f1:	lock xchg edi,eax
  40a4f3:	mov    BYTE PTR [ebx-0x3b],ah
  40a4f6:	mov    edx,ds
  40a4f8:	push   ebp
  40a4fa:	jecxz  0x40a4d6
  40a4fc:	mov    ah,0x2d
  40a4fe:	sbb    cl,0xfe
  40a501:	shr    DWORD PTR [edx],1
  40a503:	inc    edx
  40a504:	add    cl,ch
  40a506:	mov    ecx,0xe96c0e9a
  40a50b:	fsin   
  40a50d:	into   
  40a50e:	add    BYTE PTR [eax],al
  40a510:	dec    esi
  40a511:	lahf   
  40a512:	mov    ebx,0xe7d946c7
  40a517:	out    dx,eax
  40a518:	in     al,0x13
  40a51a:	add    BYTE PTR [esi-0x51025d78],dh
  40a520:	dec    esi
  40a521:	bnd je 0x40a591
  40a524:	inc    esi
  40a525:	fxch   st(0)
  40a527:	stos   DWORD PTR es:[edi],eax
  40a528:	inc    ebp
  40a529:	adc    al,0x55
  40a52b:	bound  edx,QWORD PTR [ecx]
  40a52d:	(bad)  [ebp+ebx*8+0xf]
  40a531:	popa   
  40a532:	adc    BYTE PTR [esi-0xb00f768],al
  40a538:	or     dh,dl
  40a53a:	ret    
  40a53b:	je     0x40a553
  40a53d:	fcmovne st,st(0)
  40a53f:	stos   DWORD PTR es:[edi],eax
  40a540:	xor    DWORD PTR [edx*2-0x3c68ee8e],edx
  40a547:	pop    ecx
  40a548:	xchg   cl,bl
  40a54a:	je     0x40a531
  40a54c:	or     dh,BYTE PTR [eax-0x77]
  40a54f:	dec    esi
  40a550:	into   
  40a551:	push   cs
  40a552:	sar    BYTE PTR [ecx+ebp*1+0x312bc939],0x14
  40a55a:	(bad)  
  40a55b:	mov    esp,0x6054ec22
  40a560:	into   
  40a561:	fimul  DWORD PTR [edx]
  40a563:	sub    DWORD PTR [eax],edi
  40a565:	maxps  xmm6,XMMWORD PTR [eax]
  40a568:	jae    0x40a577
  40a56a:	add    BYTE PTR [esi],dl
  40a56c:	sub    BYTE PTR [eax],cl
  40a56e:	call   0xff1ac563
  40a573:	add    BYTE PTR [eax],al
  40a575:	add    BYTE PTR [ebx-0x5ff08c2b],ah
  40a57b:	cdq    
  40a57c:	es inc ecx
  40a57e:	cwde   
  40a57f:	jmp    0xff85:0xa2300c73
  40a586:	(bad)  
  40a587:	mov    esi,0xea586a08
  40a58c:	jae    0x40a59a
  40a58e:	jo     0x40a60b
  40a590:	test   edi,edi
  40a592:	outs   dx,DWORD PTR ds:[esi]
  40a593:	pop    eax
  40a594:	inc    esp
  40a595:	hlt    
  40a596:	add    BYTE PTR [edi+edi*1],bh
  40a599:	inc    ecx
  40a59a:	pop    eax
  40a59b:	jmp    0xff85:0x8b70f473
  40a5a2:	(bad)  
  40a5a3:	pop    eax
  40a5a4:	inc    esp
  40a5a5:	clc    
  40a5a6:	and    BYTE PTR [esi-0x42e7ff05],bh
  40a5ac:	add    eax,DWORD PTR [edi+edi*4-0x53ba7817]
  40a5b3:	cmp    al,0x0
  40a5b5:	adc    BYTE PTR [eax],cl
  40a5b7:	adc    eax,0xea9bf8e8
  40a5bc:	std    
  40a5bd:	mov    DWORD PTR [ebp-0x20],edx
  40a5c0:	std    
  40a5c1:	jne    0x40a543
  40a5c3:	mov    ebp,0xea8f88a8
  40a5c8:	or     eax,eax
  40a5ca:	fist   WORD PTR [eax+0x14d800bb]
  40a5d0:	push   DWORD PTR [ebp-0x80]
  40a5d3:	cmp    eax,0x14c8fde8
  40a5d8:	push   DWORD PTR [ebp+0x0]
  40a5db:	add    BYTE PTR [edi*4+0x14d85580],cl
  40a5e2:	cmp    eax,0xffffffca
  40a5e5:	fld    DWORD PTR [esp+eiz*4-0x74ffeb38]
  40a5ec:	int    0xe8
  40a5ee:	jle    0x40a62f
  40a5f0:	xor    ebx,ebp
  40a5f2:	std    
  40a5f3:	cmp    DWORD PTR [ecx+0x90002ea],0xffffff8c
  40a5fa:	sub    eax,0xda823141
  40a5ff:	cmp    edi,ebx
  40a601:	jmp    0xff76:0x5e710b02
  40a608:	cld    
  40a609:	repnz pop ebx
  40a60b:	(bad)  
  40a60c:	ds jmp 0x40a611
  40a60f:	(bad)  
  40a610:	fdivr  QWORD PTR [edx+0x2c09ce5b]
  40a616:	add    al,0x68
  40a618:	fst    QWORD PTR [ecx]
  40a61a:	inc    ebx
  40a61b:	add    dh,ah
  40a61d:	ret    0x5532
  40a620:	xor    ebx,ebp
  40a622:	idiv   DWORD PTR [edi+0x74ed02c5]
  40a628:	cmp    DWORD PTR [ebx+eax*1],eax
  40a62b:	push   0x41b698
  40a630:	jle    0x40a5c7
  40a632:	ss push ebp
  40a634:	xor    ebp,ebp
  40a636:	jg     0x40a62f
  40a638:	xor    al,bl
  40a63a:	xor    eax,0xed5d84ff
  40a63f:	je     0x40a641
  40a641:	add    ch,bh
  40a643:	xchg   ebp,eax
  40a644:	jmp    0x54a7a4ce
  40a649:	mov    esp,ecx
  40a64b:	inc    edx
  40a64c:	sti    
  40a64d:	jg     0x40a67a
  40a64f:	push   es
  40a650:	ja     0x40a655
  40a652:	out    dx,eax
  40a653:	jmp    0x40a6a3
  40a655:	inc    edx
  40a656:	sub    bl,BYTE PTR [ebx]
  40a658:	js     0x40a65f
  40a65a:	mov    cl,0x13
  40a65c:	add    al,0x75
  40a65e:	fist   WORD PTR [esi]
  40a660:	ja     0x40a672
  40a662:	popa   
  40a663:	push   ds
  40a664:	ja     0x40a66e
  40a666:	leave  
  40a667:	cs out dx,al
  40a669:	(bad)  
  40a66a:	mov    dh,0x14
  40a66c:	adc    DWORD PTR [ecx],esi
  40a66e:	mov    dl,0xd7
  40a670:	sbb    eax,0x9bd734d9
  40a675:	adc    ebx,DWORD PTR [esi+0x1ded1961]
  40a67b:	or     al,0x11
  40a67d:	mov    dl,0x8c
  40a67f:	xlat   BYTE PTR ds:[ebx]
  40a680:	std    
  40a681:	out    dx,eax
  40a682:	inc    ebx
  40a683:	aam    0x2f
  40a685:	in     eax,dx
  40a686:	jg     0x40a65f
  40a688:	in     eax,dx
  40a689:	icebp  
  40a68a:	les    ebx,FWORD PTR [esi+ebp*8]
  40a68d:	cld    
  40a68e:	mov    ch,0x6c
  40a690:	fsubp  st(4),st
  40a692:	xlat   BYTE PTR ds:[bx]
  40a694:	pop    ebx
  40a695:	clc    
  40a696:	push   esi
  40a697:	or     eax,0xd757ec6a
  40a69c:	cmp    esi,esp
  40a69e:	push   esi
  40a69f:	adc    eax,0xd747ec6a
  40a6a4:	cmp    ebp,esp
  40a6a6:	add    BYTE PTR [eax],al
  40a6a8:	push   esi
  40a6a9:	(bad)  [edx-0x14]
  40a6ac:	aaa    
  40a6ad:	xlat   BYTE PTR ds:[ebx]
  40a6ae:	sbb    esi,eax
  40a6b0:	push   ss
  40a6b1:	in     eax,0x6a
  40a6b3:	in     al,dx
  40a6b4:	daa    
  40a6b5:	xlat   BYTE PTR ds:[ebx]
  40a6b6:	sbb    edx,DWORD PTR [esi+ebx*1]
  40a6b9:	popa   
  40a6ba:	fucomp st(4)
  40a6bc:	popf   
  40a6bd:	or     al,0x91
  40a6bf:	jno    0x40a6d0
  40a6c1:	xlat   BYTE PTR ds:[ebx]
  40a6c2:	jge    0x40a710
  40a6c4:	clc    
  40a6c5:	shl    esp,1
  40a6c7:	add    esp,DWORD PTR [ebx+ecx*4+0x7c]
  40a6cb:	xor    dl,0xeb
  40a6ce:	gs jbe 0x40a716
  40a6d1:	xlat   BYTE PTR ds:[ebx]
  40a6d2:	rcl    DWORD PTR [ebx],cl
  40a6d4:	fldcw  WORD PTR [esp+edi*4+0x3]
  40a6d8:	xor    DWORD PTR [ebx],ecx
  40a6da:	sub    DWORD PTR [edi+0x7e],esi
  40a6dd:	push   0xffffffe9
  40a6df:	pop    ebx
  40a6e0:	dec    eax
  40a6e1:	pop    ss
  40a6e2:	test   al,0x3
  40a6e4:	(bad)  
  40a6e5:	pusha  
  40a6e6:	add    cl,bl
  40a6e8:	int    0x5f
  40a6ea:	or     al,0x41
  40a6ec:	jne    0x40a67d
  40a6ee:	(bad)  
  40a6ef:	es test eax,0x2a87396
  40a6f5:	inc    esp
  40a6f6:	call   0xff16c597
  40a6fb:	loop   0x40a76f
  40a6fd:	bound  esi,QWORD PTR [ecx]
  40a6ff:	jo     0x40a6f8
  40a701:	jmp    0x40a76c
  40a703:	jecxz  0x40a76f
  40a705:	out    0x85,eax
  40a707:	test   BYTE PTR [edx+0x75c009],0x0
  40a70e:	sub    edi,edx
  40a710:	je     0x40a713
  40a712:	add    eax,0x5a6783ec
  40a717:	aad    0x4f
  40a719:	(bad)  
  40a71a:	loopne 0x40a707
  40a71c:	dec    edi
  40a71d:	into   
  40a71e:	loopne 0x40a72b
  40a720:	call   0xff160237
  40a725:	rcr    edx,1
  40a727:	xchg   ecx,eax
  40a728:	(bad)  
  40a729:	mov    dh,0x4a
  40a72b:	pop    edi
  40a72c:	call   0xfed269f2
  40a731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a732:	or     eax,0x1a9e8264
  40a737:	outs   dx,BYTE PTR ds:[esi]
  40a738:	add    cl,ah
  40a73a:	xor    dl,BYTE PTR [eax+ebp*8]
  40a73d:	push   cs
  40a73e:	scas   eax,DWORD PTR es:[edi]
  40a73f:	(bad)  
  40a740:	(bad)  
  40a741:	jo     0x40a7b3
  40a743:	fmul   QWORD PTR [esp-0x300b9e7]
  40a74a:	and    dl,ch
  40a74c:	je     0x40a72b
  40a74e:	ficomp DWORD PTR [edi+0x932e953]
  40a754:	rcl    ah,0x62
  40a757:	int    0x44
  40a759:	pop    ecx
  40a75a:	xor    eax,0xf3e90014
  40a75f:	push   eax
  40a760:	hlt    
  40a761:	add    BYTE PTR [edi+0x11],dh
  40a764:	add    BYTE PTR [eax],al
  40a766:	loop   0x40a779
  40a768:	push   0x0
  40a76a:	repnz adc DWORD PTR [edx+0x0],ebp
  40a76e:	push   ebp
  40a76f:	push   ebx
  40a770:	hlt    
  40a771:	push   eax
  40a772:	add    BYTE PTR [eax],al
  40a774:	push   edi
  40a775:	arpl   ax,di
  40a777:	(bad)  
  40a778:	mov    ebp,0x4475fde1
  40a77d:	mov    eax,0x1188548e
  40a782:	or     eax,eax
  40a784:	or     al,0xf
  40a786:	jmp    0x40a7c2
  40a788:	mov    al,ds:0x8841269d
  40a78d:	jmp    0xff83:0xa2301073
  40a794:	push   edi
  40a795:	jmp    0x85ff:0xb828f873
  40a79c:	xchg   edx,ebp
  40a79e:	xchg   DWORD PTR [ebp-0x6c],eax
  40a7a1:	jmp    0xff14:0x64771873
  40a7a8:	std    
  40a7a9:	mov    ebx,0xea5475fd
  40a7ae:	jae    0x40a7b8
  40a7b0:	jo     0x40a7ba
  40a7b2:	(bad)  
  40a7b3:	call   edi
  40a7b5:	jmp    0xba01942d
  40a7ba:	jg     0x40a7bb
  40a7bc:	(bad)  
  40a7bd:	jmp    0x89f49805
  40a7c2:	std    
  40a7c3:	jne    0x40a779
  40a7c5:	mov    eax,0x1118543a
  40a7ca:	push   DWORD PTR [ebp-0x80]
  40a7cd:	mov    ecx,0xea8781d8
  40a7d2:	mov    edx,0x8b5510ec
  40a7d8:	add    BYTE PTR [eax],al
  40a7da:	je     0x40a76c
  40a7dc:	ret    0x31f4
  40a7df:	cmp    eax,0xeb4bfeea
  40a7e4:	pop    esp
  40a7e5:	and    al,0xce
  40a7e7:	xchg   edi,eax
  40a7e8:	cli    
  40a7e9:	out    0xc8,eax
  40a7eb:	xchg   esp,eax
  40a7ec:	jmp    0xe6e850ef
  40a7f1:	(bad)  
  40a7f2:	sub    al,0x77
  40a7f4:	sub    DWORD PTR [ecx+0x31],eax
  40a7f7:	jmp    0x40a7fb
  40a7f9:	add    BYTE PTR [ecx],dh
  40a7fb:	push   0xfd9ff680
  40a800:	jmp    0x42fb154
  40a805:	add    BYTE PTR [ecx],dh
  40a807:	add    esi,DWORD PTR [esi+0x53]
  40a80a:	xor    ebx,ebp
  40a80c:	pop    edx
  40a80d:	adc    dh,cl
  40a80f:	stos   DWORD PTR es:[edi],eax
  40a810:	add    ch,BYTE PTR [eax+0x2b]
  40a813:	stos   DWORD PTR es:[edi],eax
  40a814:	inc    ebx
  40a815:	add    cl,bl
  40a817:	push   es
  40a818:	inc    esp
  40a819:	inc    ecx
  40a81a:	xor    DWORD PTR [esi+0x2c085b2e],esi
  40a820:	add    al,0xff
  40a822:	fdivr  st(2),st
  40a824:	fisub  DWORD PTR [edi+0x67e8cd4f]
  40a82a:	and    ebp,DWORD PTR [ebx]
  40a82c:	inc    ebx
  40a82d:	add    cl,cl
  40a82f:	lock inc edx
  40a831:	inc    ecx
  40a832:	xor    DWORD PTR [ebx+0x20],edx
  40a835:	inc    eax
  40a836:	jo     0x40a7f5
  40a838:	pop    edx
  40a839:	add    dh,BYTE PTR [ecx]
  40a83b:	mov    ebp,0xfe82
  40a840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a841:	mov    ch,0xda
  40a843:	mov    edx,DWORD PTR [edi]
  40a845:	mov    ds:0x52b48ce8,eax
  40a84a:	jmp    0x6215:0xdc2e06fe
  40a851:	mov    ebp,0x417cff02
  40a856:	jmp    0x5154e1cf
  40a85b:	shl    DWORD PTR [ebx+edx*8+0x5d],cl
  40a85f:	mov    ebx,0x4ee918f0
  40a864:	stos   BYTE PTR es:[edi],al
  40a865:	shl    BYTE PTR [edi-0x40],0xc2
  40a869:	rol    BYTE PTR [ebp-0x17],cl
  40a86c:	pop    eax
  40a86d:	adc    al,0xd3
  40a86f:	push   ds
  40a870:	mov    esi,0x40dbe149
  40a875:	push   edx
  40a876:	cs jmp 0x5e660235
  40a87c:	dec    ebx
  40a87d:	mov    esp,0xd39f7e9d
  40a882:	loope  0x40a847
  40a884:	and    bh,al
  40a886:	adc    BYTE PTR ds:0x53e954f1,0x99
  40a88d:	sub    BYTE PTR [ecx+ebp*8+0x7f],ah
  40a891:	add    DWORD PTR fs:[ebx],0x5c2ec321
  40a898:	pop    es
  40a899:	push   esp
  40a89a:	sub    BYTE PTR [ecx+eax*1],al
  40a89d:	rcl    DWORD PTR [ebx-0x4],cl
  40a8a0:	push   esi
  40a8a1:	lock mov ebp,eax
  40a8a4:	add    BYTE PTR [eax],al
  40a8a6:	push   edi
  40a8a7:	mov    esp,0xd34f82e0
  40a8ac:	lods   eax,DWORD PTR ds:[esi]
  40a8ad:	(bad)  
  40a8ae:	cli    
  40a8af:	adc    ch,BYTE PTR [eax]
  40a8b1:	add    al,0x30
  40a8b3:	adc    al,0xe9
  40a8b5:	add    esp,DWORD PTR [ecx+ebx*4-0x2cd0164b]
  40a8bc:	cmp    BYTE PTR [ebp+ebp*1+0x15],bl
  40a8c0:	jmp    0x3ad1b1c8
  40a8c5:	add    al,0x31
  40a8c7:	cmp    al,0xfb
  40a8c9:	inc    ebx
  40a8ca:	jo     0x40a8e0
  40a8cc:	adc    esi,edi
  40a8ce:	inc    esi
  40a8cf:	push   ebp
  40a8d0:	jmp    0x94fe30
  40a8d5:	sub    BYTE PTR ds:0x4a1234d3,ch
  40a8db:	push   ebp
  40a8dc:	add    BYTE PTR [esi+0x57],ah
  40a8df:	sbb    al,0xe8
  40a8e1:	pop    ebx
  40a8e2:	xlat   BYTE PTR ds:[ebx]
  40a8e3:	sar    esi,1
  40a8e5:	sar    DWORD PTR [esp+edx*2],0x41
  40a8e9:	jmp    0xa880c758
  40a8ee:	xor    bh,BYTE PTR [esp]
  40a8f1:	test   eax,0xeb681473
  40a8f6:	xor    dl,BYTE PTR [eax+eax*4]
  40a8f9:	cs pop ds
  40a8fb:	sbb    al,0xe8
  40a8fd:	aas    
  40a8fe:	(bad)  
  40a8ff:	sar    esi,1
  40a901:	ins    BYTE PTR es:[edi],dx
  40a902:	pop    ds
  40a903:	retf   0x16fd
  40a906:	mov    DWORD PTR [edx-0x18],esp
  40a909:	mov    DWORD PTR [eax],eax
  40a90b:	add    ah,ah
  40a90d:	adc    eax,DWORD PTR [eax]
  40a90f:	push   es
  40a910:	pop    ss
  40a911:	sar    dh,1
  40a913:	je     0x40a98f
  40a915:	mov    edx,0xd189771a
  40a91a:	enter  0x6e2b,0xd2
  40a91e:	push   ebx
  40a91f:	jb     0x40a8aa
  40a921:	xchg   ebx,eax
  40a922:	ret    
  40a923:	aad    0x57
  40a925:	sar    esi,1
  40a927:	inc    ebx
  40a928:	sub    eax,0xc0ce263e
  40a92d:	sbb    ebp,eax
  40a92f:	test   eax,ebx
  40a931:	sar    dh,cl
  40a933:	jo     0x40a925
  40a935:	iret   
  40a936:	(bad)  
  40a937:	in     al,dx
  40a938:	(bad)  
  40a939:	adc    al,BYTE PTR [ecx-0x17]
  40a93c:	xor    dl,BYTE PTR [eax+eax*1]
  40a93f:	jmp    0xa03741ed
  40a944:	push   ss
  40a945:	ror    DWORD PTR [edi+0x1],cl
  40a948:	xor    DWORD PTR [ebx],edx
  40a94a:	add    cl,ch
  40a94c:	jmp    0x6816:0x18005207
  40a953:	jno    0x40a99d
  40a955:	push   edi
  40a956:	add    BYTE PTR [eax+0x27],ch
  40a959:	pop    eax
  40a95a:	inc    ecx
  40a95b:	add    BYTE PTR [eax],dh
  40a95d:	hlt    
  40a95e:	aas    
  40a95f:	inc    ecx
  40a960:	fdivr  DWORD PTR [edx+0x57415b33]
  40a966:	add    bh,bh
  40a968:	cmc    
  40a969:	int    0xe6
  40a96b:	imul   edi,DWORD PTR [ebp-0x47],0xfffffffd
  40a96f:	push   0x55890000
  40a974:	inc    ecx
  40a975:	add    al,ah
  40a977:	jb     0x40a9b9
  40a979:	inc    ecx
  40a97a:	enter  0x246d,0x40
  40a97e:	fst    DWORD PTR ds:0x15980268
  40a984:	cmp    bh,0xc5
  40a987:	int    0xe6
  40a989:	dec    edi
  40a98a:	cmp    eax,0x158dfdb9
  40a98f:	sar    esp,0xff
  40a992:	das    
  40a993:	push   0x1599d9e8
  40a998:	add    bh,bh
  40a99a:	cmc    
  40a99b:	mov    eax,0xed5075fd
  40a9a0:	xchg   edx,eax
  40a9a1:	jge    0x40a9f2
  40a9a3:	mov    edx,0x1554c2c7
  40a9a8:	push   ebp
  40a9a9:	mov    ebp,DWORD PTR [eax+ebx*4-0x3e]
  40a9ad:	hlt    
  40a9ae:	jle    0x40a96a
  40a9b0:	std    
  40a9b1:	push   0x58
  40a9b3:	imul   esp,DWORD PTR [edi],0xffffffff
  40a9b6:	add    eax,0xfd35e6d0
  40a9bb:	mov    eax,0xbc5589fd
  40a9c0:	lds    eax,FWORD PTR ds:0x40f95c
  40a9c6:	or     BYTE PTR ds:0x38310000,dl
  40a9cc:	xor    dh,0xf
  40a9cf:	mov    ds:0xbf994fe5,al
  40a9d4:	add    eax,DWORD PTR [eax]
  40a9d6:	add    BYTE PTR [eax],al
  40a9d8:	xor    DWORD PTR [ebx-0x44ceaf6b],esp
  40a9de:	pop    edx
  40a9df:	mov    esi,DWORD PTR [ecx-0x4]
  40a9e2:	add    ebp,DWORD PTR [eax-0x54]
  40a9e5:	jp     0x40aa2a
  40a9e7:	add    BYTE PTR [ecx+0x17],cl
  40a9ea:	inc    esp
  40a9eb:	inc    ecx
  40a9ec:	xor    DWORD PTR [edx+0x30],ebp
  40a9ef:	pop    ebx
  40a9f0:	sbb    BYTE PTR [edx+eax*1-0x1],bh
  40a9f4:	cmp    al,0xc3
  40a9f6:	(bad)  
  40a9f8:	mov    ebp,0xaa67e611
  40a9fd:	jp     0x40aa42
  40a9ff:	add    BYTE PTR [ecx],bl
  40aa01:	cmp    BYTE PTR [ebx+0x41],al
  40aa04:	xor    DWORD PTR [ebx-0x450fbfe2],esp
  40aa0a:	pop    edx
  40aa0b:	add    dh,BYTE PTR [ecx]
  40aa0d:	mov    ebx,0xb304fe82
  40aa12:	fcmovb st,st(7)
  40aa14:	test   DWORD PTR [ecx],ebx
  40aa16:	out    0x8c,al
  40aa18:	mov    ah,0xc9
  40aa1a:	jecxz  0x40aa1a
  40aa1c:	jbe    0x40a9c8
  40aa1e:	ficom  DWORD PTR [ecx+0x0]
  40aa21:	mov    ebx,0xb6dcff02
  40aa26:	in     al,0x74
  40aa28:	sub    ebx,esp
  40aa2a:	idiv   BYTE PTR [esi+edx*2-0x17]
  40aa2e:	mov    edx,0x4dbb35c1
  40aa33:	mov    edx,DWORD PTR [ebp+0x3b]
  40aa36:	shl    bl,0x3f
  40aa39:	xchg   ecx,eax
  40aa3a:	in     al,0x69
  40aa3c:	add    BYTE PTR [eax],al
  40aa3e:	xor    DWORD PTR [ebp+0x1c],edx
  40aa41:	jmp    DWORD PTR [ebp+esi*4+0x14a5adda]
  40aa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa49:	in     eax,0xa9
  40aa4b:	pop    ecx
  40aa4c:	popf   
  40aa4d:	mov    ebp,0x42d6602d
  40aa52:	xor    DWORD PTR [ecx+ebp*8],edx
  40aa55:	add    esi,DWORD PTR [ecx]
  40aa57:	mov    eax,ds:0xcffced6b
  40aa5c:	jge    0x40aab2
  40aa5e:	mov    DWORD PTR [eax],ebx
  40aa60:	call   0xc0fcdb68
  40aa65:	push   edx
  40aa66:	xor    DWORD PTR [ecx+edx*8],edx
  40aa69:	mov    al,ds:0x5be9551e
  40aa6e:	mov    edx,0x5903a854
  40aa73:	clc    
  40aa74:	test   al,0x42
  40aa76:	xor    edi,ecx
  40aa78:	sti    
  40aa79:	dec    eax
  40aa7a:	or     BYTE PTR [ebp-0x17],dl
  40aa7d:	in     al,0x3d
  40aa7f:	sbb    al,0x41
  40aa81:	inc    edi
  40aa82:	lods   eax,DWORD PTR ds:[esi]
  40aa83:	iret   
  40aa84:	sub    eax,0xa854d25c
  40aa89:	add    ecx,DWORD PTR [ecx]
  40aa8b:	stos   DWORD PTR es:[edi],eax
  40aa8c:	test   al,0x42
  40aa8e:	xor    DWORD PTR [ecx*8-0x7eec0fbd],edi
  40aa95:	add    DWORD PTR [ecx],esi
  40aa97:	adc    al,0x69
  40aa99:	in     eax,0x5
  40aa9b:	sbb    al,0x11
  40aa9d:	inc    ebx
  40aa9e:	jne    0x40aa6f
  40aaa0:	cmc    
  40aaa1:	jbe    0x40aaa3
  40aaa3:	add    BYTE PTR [ebp+0x67e4eec7],dh
  40aaa9:	sar    DWORD PTR fs:[eax-0x1b16ec12],1
  40aab0:	(bad)  
  40aab2:	aad    0x6e
  40aab4:	cmp    DWORD PTR [esi+eiz*2-0x5030b999],edi
  40aabb:	shl    DWORD PTR [edx],0x14
  40aabe:	adc    al,0x79
  40aac0:	dec    edx
  40aac1:	xchg   ebx,eax
  40aac2:	jmp    FWORD PTR [esi+edx*1+0x4a43003d]
  40aac9:	iret   
  40aaca:	je     0x40aabd
  40aacc:	cli    
  40aacd:	cld    
  40aace:	jnp    0x40aa6e
  40aad0:	or     eax,0x6895449c
  40aad5:	adc    al,0x68
  40aad7:	mov    eax,ds:0x11005572
  40aadc:	iret   
  40aadd:	push   cs
  40aade:	inc    ecx
  40aadf:	jmp    0xc09bb2f1
  40aae4:	jae    0x40aafa
  40aae6:	call   0xff0e5e64
  40aaeb:	repnz repnz inc edx
  40aaee:	sbb    DWORD PTR [ecx+0x4600147a],edi
  40aaf4:	xchg   esp,eax
  40aaf5:	fsubr  DWORD PTR ss:[ecx+0x46501473]
  40aafc:	dec    edi
  40aafd:	sbb    al,0xe8
  40aaff:	outs   dx,BYTE PTR ds:[esi]
  40ab00:	xchg   ecx,eax
  40ab01:	int    0xfe
  40ab03:	inc    ecx
  40ab04:	fst    DWORD PTR [eax-0x1]
  40ab07:	add    BYTE PTR cs:[eax],al
  40ab0a:	or     BYTE PTR [eax+ebp*2],dl
  40ab0d:	ss repnz push esp
  40ab10:	add    BYTE PTR [ecx-0x16bef13c],dl
  40ab16:	xchg   ebp,eax
  40ab17:	pop    es
  40ab18:	pop    ebx
  40ab19:	shl    bl,0x13
  40ab1c:	call   0xff0e5e66
  40ab21:	bnd jb 0x40ab66
  40ab24:	sbb    DWORD PTR [ecx-0x1ffebf6],ebx
  40ab2a:	lea    esi,[esi]
  40ab2c:	fsubr  DWORD PTR [ecx]
  40ab2e:	hlt    
  40ab2f:	adc    edx,DWORD PTR [eax-0x22]
  40ab32:	clc    
  40ab33:	sbb    ebp,eax
  40ab35:	xor    dl,BYTE PTR [esi-0x453e0133]
  40ab3b:	push   eax
  40ab3c:	inc    DWORD PTR [eax]
  40ab3e:	ja     0x40aaf2
  40ab40:	jae    0x40ab3e
  40ab42:	ja     0x40abb0
  40ab44:	or     al,ch
  40ab46:	loop   0x40abb5
  40ab48:	(bad)  
  40ab49:	call   ecx
  40ab4b:	(bad)  
  40ab4c:	add    al,BYTE PTR [eax]
  40ab4e:	pop    ebp
  40ab4f:	popf   
  40ab50:	jmp    0x3257:0x54b4cc83
  40ab57:	sbb    BYTE PTR [edx+0x2a],ch
  40ab5a:	mov    bh,0x6b
  40ab5c:	or     al,ch
  40ab5e:	xchg   esp,eax
  40ab5f:	ins    DWORD PTR es:[edi],dx
  40ab60:	(bad)  
  40ab61:	inc    DWORD PTR [ecx-0x279503a5]
  40ab67:	mov    ecx,0xb15782a7
  40ab6c:	or     eax,eax
  40ab6e:	add    BYTE PTR [eax],al
  40ab70:	cld    
  40ab71:	ror    BYTE PTR [esi+0x68],1
  40ab74:	enter  0xef11,0xbe
  40ab78:	lock mov esp,0x1d8413e
  40ab7e:	push   DWORD PTR [ebp-0x40]
  40ab81:	mov    ecx,0xb0f7a30f
  40ab86:	out    0x3d,al
  40ab88:	out    0xb2,al
  40ab8a:	std    
  40ab8b:	mov    ebx,DWORD PTR [ebp-0x77bed79b]
  40ab91:	sahf   
  40ab92:	cmp    edi,DWORD PTR [eax-0x80]
  40ab95:	pop    eax
  40ab96:	add    BYTE PTR [eax+0x45741167],al
  40ab9c:	mov    al,0xe7
  40ab9e:	ds inc ecx
  40aba0:	mov    BYTE PTR [edx],cl
  40aba2:	call   0x524464
  40aba7:	or     ebx,DWORD PTR [eax]
  40aba9:	ins    BYTE PTR es:[edi],dx
  40abaa:	pop    ds
  40abab:	push   esi
  40abac:	xor    BYTE PTR [eax+0x157ff85],bh
  40abb2:	push   0xbcc24800
  40abb7:	push   0x4142e031
  40abbc:	xor    DWORD PTR [ebx],ecx
  40abbe:	jecxz  0x40ac34
  40abc0:	sub    ebx,esp
  40abc2:	mov    ah,0xa1
  40abc4:	ss mov gs,edx
  40abc7:	std    
  40abc8:	lods   al,BYTE PTR ds:[esi]
  40abc9:	xchg   cl,ah
  40abcb:	jmp    0x3031:0x3d83f530
  40abd2:	fiadd  WORD PTR [ebp+0x0]
  40abd5:	add    BYTE PTR ds:0xeb8c2ea,dl
  40abdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abdc:	loope  0x40abdc
  40abde:	add    ecx,DWORD PTR ds:0x5284071b
  40abe4:	loop   0x40ac5a
  40abe6:	cmc    
  40abe7:	dec    ebp
  40abe8:	pop    eax
  40abe9:	or     cl,bl
  40abeb:	and    BYTE PTR [edi-0x1],bl
  40abee:	out    0x1d,al
  40abf0:	inc    edx
  40abf1:	leave  
  40abf2:	repz mov esi,0x5eaa5502
  40abf8:	xchg   bl,al
  40abfa:	int    0x8c
  40abfc:	cmp    DWORD PTR [edx+0x31],ebp
  40abff:	shr    DWORD PTR ds:0xeac344ff,1
  40ac05:	stc    
  40ac06:	cmp    ecx,DWORD PTR [esi]
  40ac08:	loop   0x40ab92
  40ac0a:	hlt    
  40ac0b:	push   es
  40ac0c:	mov    ?,WORD PTR [ebx*1-0x55ffbaed]
  40ac13:	mov    bh,0x5a
  40ac15:	sub    al,dh
  40ac17:	mov    edx,0xaf313e82
  40ac1c:	inc    edi
  40ac1d:	push   0x437c2c
  40ac22:	out    0x22,al
  40ac24:	and    dl,BYTE PTR [eax+0x31]
  40ac27:	mov    ebx,0xe5e5c00d
  40ac2c:	cmp    al,ch
  40ac2e:	shl    DWORD PTR ds:0x1401fee2,cl
  40ac34:	push   ecx
  40ac35:	add    al,0x31
  40ac37:	mov    ebp,0x6c9e
  40ac3c:	inc    esi
  40ac3d:	push   ebx
  40ac3e:	sub    BYTE PTR [ecx+eiz*8],al
  40ac41:	int3   
  40ac42:	push   ebx
  40ac43:	or     al,0x49
  40ac45:	addr16 mov esp,ecx
  40ac48:	aaa    
  40ac49:	mov    ebx,0xcc2e5f68
  40ac4e:	rol    DWORD PTR [ebx],0x6f
  40ac51:	xchg   esp,eax
  40ac52:	out    dx,al
  40ac53:	add    esp,DWORD PTR [esi+ecx*8-0x2b9c1fd2]
  40ac5a:	pop    edi
  40ac5b:	loope  0x40ac6c
  40ac5d:	int3   
  40ac5e:	xchg   ebp,eax
  40ac5f:	(bad)  
  40ac60:	aam    0xc
  40ac62:	out    0x56,al
  40ac64:	mov    edx,0xf7dffbcb
  40ac69:	inc    ecx
  40ac6a:	icebp  
  40ac6b:	jmp    0x40ac77
  40ac6d:	dec    edi
  40ac6e:	jbe    0x40ac51
  40ac70:	xchg   DWORD PTR [edx-0x60],ebp
  40ac73:	(bad)  
  40ac74:	xor    dl,BYTE PTR [esp+edi*4]
  40ac77:	mov    edx,cs
  40ac79:	xchg   edi,eax
  40ac7a:	and    al,0xe0
  40ac7c:	pop    eax
  40ac7d:	adc    al,0xc3
  40ac7f:	das    
  40ac80:	mov    BYTE PTR [ecx-0x1f],0xeb
  40ac84:	cmp    al,0x4e
  40ac86:	inc    esi
  40ac87:	loope  0x40ac32
  40ac89:	push   ecx
  40ac8a:	cmp    eax,0xe93e316e
  40ac8f:	imul   edi,DWORD PTR [edx*2+0x140903a8],0xffffffe9
  40ac97:	add    esi,DWORD PTR [ecx-0x707c4f44]
  40ac9d:	retf   
  40ac9e:	loope  0x40ac63
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    ch,BYTE PTR [ebx]
  40aca4:	mov    ecx,0x5928feb
  40aca9:	loope  0x40ac91
  40acab:	cmp    ebp,ecx
  40acad:	add    ebx,DWORD PTR [esi-0x76]
  40acb0:	inc    DWORD PTR [eax-0x16beaaca]
  40acb6:	and    cl,bl
  40acb8:	je     0x40acab
  40acba:	dec    edx
  40acbb:	mov    ah,0xa0
  40acbd:	ficom  WORD PTR [ecx-0x4d]
  40acc0:	or     al,0x54
  40acc2:	push   eax
  40acc3:	retf   0x54fe
  40acc6:	push   ecx
  40acc7:	retf   0xf174
  40acca:	dec    edx
  40accb:	dec    ebx
  40accc:	jp     0x40ac8c
  40acce:	adc    esp,ebx
  40acd0:	shr    ebp,0x32
  40acd3:	popa   
  40acd4:	mov    edi,DWORD PTR [ebp+0x13fbd6b5]
  40acda:	sub    eax,0x679e2d3e
  40acdf:	sbb    al,0xe8
  40ace1:	int    0x64
  40ace3:	retf   
  40ace4:	(bad)  
  40ace5:	pusha  
  40ace6:	ja     0x40acb0
  40ace8:	addr16 jmp 0x11fe6820
  40acee:	and    dl,BYTE PTR [ebp+0x41]
  40acf1:	jmp    0x28821650
  40acf6:	xor    eax,0xcaf174cb
  40acfb:	mov    esi,0xc9d15ea0
  40ad00:	je     0x40ad57
  40ad02:	sar    DWORD PTR [edi],1
  40ad04:	or     BYTE PTR [ecx+0x0],al
  40ad07:	add    BYTE PTR [edi+0x4e],dh
  40ad0a:	inc    DWORD PTR [esi-0x15]
  40ad0d:	aam    0x3
  40ad0f:	jmp    0x6b2c4c7b
  40ad14:	outs   dx,BYTE PTR ds:[esi]
  40ad15:	into   
  40ad16:	imul   ebp,ecx,0x9cfefa0c
  40ad1c:	sub    bh,BYTE PTR [eax+ebp*8-0x77366e60]
  40ad23:	lods   al,BYTE PTR ds:[esi]
  40ad24:	data16 xor al,BYTE PTR [eax]
  40ad27:	jmp    0xa835ad
  40ad2c:	mov    al,ds:0xc0004155
  40ad31:	imul   eax,DWORD PTR [ecx+0x41],0x873b358
  40ad38:	xor    BYTE PTR [esi+0x374fff9f],ah
  40ad3e:	add    BYTE PTR [eax],al
  40ad40:	jg     0x40aceb
  40ad42:	data16 jae 0x40ad5e
  40ad45:	push   ecx
  40ad46:	add    BYTE PTR [eax-0x13],ch
  40ad49:	push   eax
  40ad4a:	inc    ecx
  40ad4b:	add    BYTE PTR [edi+0x6c],ch
  40ad4e:	or     al,ch
  40ad50:	xchg   edx,eax
  40ad51:	outs   dx,DWORD PTR ds:[esi]
  40ad52:	std    
  40ad53:	(bad)  
  40ad54:	fild   QWORD PTR [ebx-0x4]
  40ad57:	jmp    DWORD PTR [ebp+0x18]
  40ad5a:	call   0xfe29ff52
  40ad5f:	leave  
  40ad60:	ficomp DWORD PTR [eax+eax*1]
  40ad63:	push   ebp
  40ad64:	xchg   ebx,eax
  40ad65:	les    eax,FWORD PTR [ecx+0x539dacc4]
  40ad6b:	adc    BYTE PTR [eax],al
  40ad6d:	add    BYTE PTR [ebx+0x5d0068c6],al
  40ad73:	pop    ebx
  40ad74:	cld    
  40ad75:	push   eax
  40ad76:	pop    edi
  40ad77:	imul   ecx,DWORD PTR [eax],0x6a
  40ad7a:	enter  0x73ea,0x10
  40ad7e:	dec    edi
  40ad7f:	push   es
  40ad80:	sbb    al,0x85
  40ad82:	sbb    BYTE PTR [ebx+0x27],ch
  40ad85:	mov    eax,DWORD PTR [ebp-0x37957117]
  40ad8b:	cmp    eax,DWORD PTR [eax]
  40ad8d:	push   0x156f
  40ad92:	outs   dx,DWORD PTR ds:[esi]
  40ad93:	imul   ecx,DWORD PTR [edx+ebp*2],0x5f
  40ad97:	jmp    0x15b2b20c
  40ad9c:	push   0x0
  40ad9e:	inc    eax
  40ad9f:	ja     0x40adec
  40ada1:	add    BYTE PTR [eax+0x3175fe45],bl
  40ada7:	pop    ds
  40ada8:	in     al,dx
  40ada9:	pop    edi
  40adaa:	out    dx,eax
  40adab:	mov    edx,0xbf73c902
  40adb0:	add    dl,BYTE PTR [ebp-0x46]
  40adb3:	pop    ss
  40adb4:	add    ebx,0x65
  40adb7:	cmp    DWORD PTR ss:[edx+ebp*4],edx
  40adbb:	in     eax,dx
  40adbc:	push   0xdff8a400
  40adc1:	dec    edi
  40adc2:	dec    esi
  40adc3:	pusha  
  40adc4:	adc    bh,bh
  40adc6:	mov    esp,0x3e0068b2
  40adcb:	pusha  
  40adcc:	clc    
  40adcd:	(bad)  
  40adce:	jecxz  0x40adf2
  40add0:	mov    DWORD PTR [edi+0x12a40000],edi
  40add6:	mov    edx,DWORD PTR [ebp+eiz*1+0x6b]
  40adda:	imul   eax,DWORD PTR [eax],0xff6abb8b
  40ade0:	xor    bh,BYTE PTR [ebx-0x347b00fe]
  40ade6:	push   0x82d06ff
  40adeb:	push   0x31
  40aded:	adc    eax,0x5ae804
  40adf2:	add    al,0x0
  40adf4:	ror    DWORD PTR [ecx+0x58],0xfc
  40adf8:	fldlg2 
  40adfa:	dec    esp
  40adfb:	add    BYTE PTR [ecx],dh
  40adfd:	je     0x40adbf
  40adff:	rdtsc  
  40ae01:	mov    BYTE PTR [ecx+0xadfceeb],cl
  40ae07:	(bad)  
  40ae08:	cmp    al,0xc3
  40ae0a:	jmp    0x3cfe:0xde5a3952
  40ae11:	mov    edi,0xbafc97ea
  40ae16:	add    dl,cl
  40ae18:	xchg   ecx,eax
  40ae19:	cmp    eax,0xfa0101c3
  40ae1e:	push   edi
  40ae1f:	or     al,0x96
  40ae21:	adc    ebx,DWORD PTR [ebx+edi*8-0x215ebc6a]
  40ae28:	xchg   eax,ecx
  40ae2a:	fwait
  40ae2b:	idiv   DWORD PTR [edi+0x3e]
  40ae2e:	stc    
  40ae2f:	fdivp  st(5),st
  40ae31:	sub    edx,DWORD PTR [ecx]
  40ae33:	popa   
  40ae34:	jmp    0x10cac01
  40ae39:	add    BYTE PTR [eax+0x1f],dh
  40ae3c:	jmp    0xedf85879
  40ae41:	push   edi
  40ae42:	sub    ecx,ecx
  40ae44:	pop    ebx
  40ae45:	cld    
  40ae46:	push   esi
  40ae47:	sub    eax,0xc847dd61
  40ae4c:	pop    ebx
  40ae4d:	adc    BYTE PTR [ecx-0x6a],cl
  40ae50:	sbb    al,0x4
  40ae52:	xor    DWORD PTR [ecx+ebx*1-0x23],edx
  40ae56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae57:	sbb    BYTE PTR [esi-0xe43b6a9],bh
  40ae5d:	pop    ebx
  40ae5e:	push   ds
  40ae5f:	enter  0x57ad,0x3d
  40ae63:	(bad)  
  40ae64:	sbb    esi,esp
  40ae66:	cmovb  eax,DWORD PTR [ecx]
  40ae69:	in     al,dx
  40ae6a:	push   ebp
  40ae6b:	dec    esp
  40ae6c:	xchg   esi,eax
  40ae6d:	fucomp st(1)
  40ae6f:	shl    ah,cl
  40ae71:	add    ebx,DWORD PTR [ebx+ebx*4-0x6c]
  40ae75:	xor    edx,0xffffffe0
  40ae78:	jns    0x40ae57
  40ae7a:	out    0xc7,eax
  40ae7c:	sti    
  40ae7d:	sti    
  40ae7e:	lods   eax,DWORD PTR ds:[esi]
  40ae7f:	xchg   ecx,eax
  40ae80:	call   0xb9088664
  40ae85:	fadd   QWORD PTR [ebp+0x1c]
  40ae88:	push   ecx
  40ae89:	mov    esi,0xdd55c7c4
  40ae8e:	inc    ebp
  40ae8f:	sub    al,0x5c
  40ae91:	xchg   DWORD PTR [esi-0x122ba41],esi
  40ae97:	(bad)  
  40ae98:	mov    bl,0xf
  40ae9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9b:	inc    ecx
  40ae9c:	add    cl,ah
  40ae9e:	add    BYTE PTR [eax],al
  40aea0:	mov    ah,BYTE PTR [ebx]
  40aea2:	jmp    FWORD PTR [esi]
  40aea4:	je     0x40aee3
  40aea6:	add    BYTE PTR [ebx-0x1500c3ce],dl
  40aeac:	xor    dl,BYTE PTR [ecx*4-0x13fca94]
  40aeb3:	push   cs
  40aeb4:	cmp    eax,0x606ff3a
  40aeb9:	and    al,0x6a
  40aebb:	jmp    0x5c28c298
  40aec0:	add    DWORD PTR [eax+eax*1],edx
  40aec3:	es scas al,BYTE PTR es:[edi]
  40aec5:	mov    bh,0xf2
  40aec7:	out    0x6d,al
  40aec9:	pop    ss
  40aeca:	add    cl,ch
  40aecc:	xor    cl,bh
  40aece:	test   ch,bl
  40aed0:	popa   
  40aed1:	(bad)  
  40aed2:	(bad)  
  40aed3:	jmp    0x40af07
  40aed5:	adc    al,0x0
  40aed7:	scas   al,BYTE PTR es:[edi]
  40aed8:	mov    bh,0xbe
  40aeda:	repnz mov esi,0xe9fec705
  40aee0:	xor    cl,bh
  40aee2:	test   BYTE PTR [ebp-0x160139ff],ch
  40aee8:	xor    dl,BYTE PTR [eax+eax*1]
  40aeeb:	jb     0x40af2c
  40aeed:	sub    al,0x8b
  40aeef:	sti    
  40aef0:	mov    BYTE PTR [ecx*4-0x13e1d9c],dl
  40aef7:	xchg   BYTE PTR [edx],ah
  40aef9:	cdq    
  40aefa:	test   BYTE PTR [ebp+0x19fec601],cl
  40af00:	scas   al,BYTE PTR es:[edi]
  40af01:	(bad)  
  40af02:	out    0x7a,eax
  40af04:	add    BYTE PTR [eax],al
  40af06:	cmc    
  40af07:	lds    ecx,FWORD PTR [edi+0x66]
  40af0a:	addr16 and al,0xff
  40af0d:	aam    0x36
  40af0f:	(bad)  
  40af10:	je     0x40aef3
  40af12:	dec    eax
  40af13:	adc    al,0xff
  40af15:	aam    0xba
  40af17:	lds    edx,FWORD PTR [ecx+0x0]
  40af1a:	fcom   QWORD PTR [ebx-0x17941745]
  40af20:	std    
  40af21:	add    BYTE PTR [edi-0x77fee572],dl
  40af27:	adc    al,BYTE PTR [ebx-0x21bdb43]
  40af2d:	call   FWORD PTR [eax-0x76f07be9]
  40af33:	adc    al,BYTE PTR [eax]
  40af35:	(bad)  
  40af36:	or     eax,0x37fff17f
  40af3b:	adc    eax,DWORD PTR [eax]
  40af3d:	out    dx,eax
  40af3e:	cmp    ecx,DWORD PTR es:[ecx+eax*2-0x7a72ed77]
  40af46:	dec    eax
  40af47:	out    0xfd,al
  40af49:	dec    DWORD PTR [eax]
  40af4b:	mov    eax,0x12584c12
  40af50:	test   eax,eax
  40af52:	fmul   QWORD PTR [ebp-0x39]
  40af55:	test   DWORD PTR [esi+ebx*8-0x3],edi
  40af59:	call   FWORD PTR [ecx]
  40af5b:	adc    ch,bh
  40af5d:	mov    esi,0x41404a80
  40af62:	or     BYTE PTR [ebp-0x163bff7d],bl
  40af68:	std    
  40af69:	push   eax
  40af6a:	add    BYTE PTR [eax],al
  40af6c:	mov    al,ds:0x180049e3
  40af71:	xchg   ebp,eax
  40af72:	mov    esi,0x83d2eb74
  40af77:	aam    0x9b
  40af79:	jmp    0xbb18b27b
  40af7e:	mov    esp,0x414f1e68
  40af83:	add    BYTE PTR [ebp-0x6d],dl
  40af86:	(bad)  
  40af87:	sti    
  40af88:	inc    edi
  40af89:	jmp    0x554f97dc
  40af8e:	add    BYTE PTR [eax],al
  40af90:	dec    ebp
  40af91:	ror    BYTE PTR ds:0x39a3185,1
  40af97:	add    BYTE PTR [ecx],dh
  40af99:	ror    esp,cl
  40af9b:	inc    eax
  40af9c:	lock mov edx,0xff318487
  40afa2:	(bad)  
  40afa4:	add    DWORD PTR [ebx-0x4d],edx
  40afa7:	dec    ebx
  40afa8:	xor    DWORD PTR [ebx-0x53fa3ff3],edi
  40afae:	test   DWORD PTR [esp+ebx*1],edi
  40afb1:	jns    0x40aff6
  40afb3:	add    BYTE PTR [ecx],dh
  40afb5:	scas   al,BYTE PTR es:[edi]
  40afb6:	jle    0x40af38
  40afb8:	xor    DWORD PTR [ebx+0x23a4ff02],edi
  40afbe:	xlat   BYTE PTR ds:[ebx]
  40afbf:	(bad)  
  40afc0:	ss sbb di,0xbe62
  40afc6:	fsin   
  40afc8:	pushf  
  40afc9:	(bad)  
  40afca:	aad    0xfe
  40afcc:	dec    esi
  40afcd:	ds and bl,0x0
  40afd1:	add    BYTE PTR [edx-0x1a],al
  40afd4:	(bad)  [esp+esi*4+0x36fed583]
  40afdb:	or     ebp,DWORD PTR [esi+0x1]
  40afde:	fwait
  40afdf:	mov    ebx,0xbb9b006c
  40afe4:	ins    BYTE PTR es:[edi],dx
  40afe5:	add    BYTE PTR [edi+esi*1+0x7616f2e3],ch
  40afec:	xor    bh,bh
  40afee:	and    al,0xc8
  40aff0:	inc    esp
  40aff1:	inc    ecx
  40aff2:	xor    edx,eax
  40aff4:	ret    0x7673
  40aff7:	sahf   
  40aff8:	dec    edi
  40aff9:	adc    al,0xf6
  40affb:	pop    edi
  40affc:	mov    ebx,0xd98deef2
  40b001:	mov    ah,0x5
  40b003:	dec    edx
  40b004:	(bad)  
  40b006:	faddp  st(7),st
  40b008:	repnz (bad) 
  40b00a:	pushf  
  40b00b:	sahf   
  40b00c:	aad    0xfe
  40b00e:	into   
  40b00f:	adc    edx,DWORD PTR [ecx-0x22]
  40b012:	vminps ymm3,ymm7,ymm2
  40b016:	test   edi,esp
  40b018:	pop    ecx
  40b019:	fidiv  DWORD PTR [edi+0x314d2ebb]
  40b01f:	adc    al,0x52
  40b021:	clc    
  40b022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b023:	ds aad 0xda
  40b026:	in     eax,0xbb
  40b028:	cmp    edx,ebx
  40b02a:	xchg   edi,eax
  40b02b:	les    esi,FWORD PTR [ebx-0x19]
  40b02e:	add    esp,0x25
  40b031:	(bad)  
  40b033:	and    ebx,DWORD PTR [esi]
  40b035:	nop
  40b036:	add    BYTE PTR [eax],al
  40b038:	(bad)  
  40b039:	rcl    BYTE PTR ds:0xbe28eda,0xda
  40b040:	outs   dx,DWORD PTR ds:[esi]
  40b041:	les    edi,FWORD PTR [ebx]
  40b043:	out    0x63,eax
  40b045:	(bad)  
  40b046:	std    
  40b047:	jmp    0xd168:0x3e95882
  40b04e:	aam    0x3
  40b050:	in     al,0x98
  40b052:	aam    0x85
  40b054:	jb     0x40afe1
  40b056:	xor    eax,0x621fe58d
  40b05b:	mul    BYTE PTR [ebp-0x64cb6eb2]
  40b061:	adc    al,0xc6
  40b063:	dec    edi
  40b064:	xor    eax,0x8b0c33c3
  40b069:	adc    al,0xb6
  40b06b:	dec    edi
  40b06c:	cmp    eax,0xb4301ac3
  40b071:	aam    0x1b
  40b073:	xor    dh,ch
  40b075:	pop    ecx
  40b076:	pop    ebp
  40b077:	add    al,0x31
  40b079:	adc    al,0xe9
  40b07b:	mov    WORD PTR [ebp+0x7c],ds
  40b07e:	popa   
  40b07f:	idiv   BYTE PTR [ebp-0x4bcbbaa7]
  40b085:	pop    ecx
  40b086:	test   eax,0x244b34
  40b08b:	jbe    0x40b0f3
  40b08d:	jl     0x40b08d
  40b08f:	sbb    edi,DWORD PTR [ecx]
  40b091:	xchg   edi,eax
  40b092:	jl     0x40b039
  40b094:	sub    eax,0x666c2748
  40b099:	aam    0xfe
  40b09b:	fadd   QWORD PTR [eax]
  40b09d:	add    dh,al
  40b09f:	ret    0xf974
  40b0a2:	mov    DWORD PTR [edx],ecx
  40b0a4:	(bad)  
  40b0a5:	mov    esp,0xf174c32e
  40b0aa:	mov    ah,bh
  40b0ac:	cld    
  40b0ad:	ss js  0x40b072
  40b0b0:	ss inc ecx
  40b0b2:	push   ss
  40b0b3:	dec    edi
  40b0b4:	add    cl,ch
  40b0b6:	lods   eax,DWORD PTR ds:[esi]
  40b0b7:	fiadd  DWORD PTR [ebx]
  40b0b9:	push   ds
  40b0ba:	idiv   BYTE PTR [edi+0x74]
  40b0bd:	aaa    
  40b0be:	test   BYTE PTR [edx-0x71354b76],cl
  40b0c4:	adc    DWORD PTR [esi],eax
  40b0c6:	idiv   BYTE PTR [ebx-0x2]
  40b0c9:	fwait
  40b0ca:	sub    ah,BYTE PTR [ebx-0x37]
  40b0cd:	sub    ebx,DWORD PTR [ebp-0x3d]
  40b0d0:	push   ebx
  40b0d1:	bound  ebx,QWORD PTR [ecx-0x6c]
  40b0d4:	ret    
  40b0d5:	loope  0x40b13f
  40b0d7:	ret    0x36fe
  40b0da:	lods   al,BYTE PTR ds:[esi]
  40b0db:	push   0x903c6210
  40b0e0:	test   cl,dl
  40b0e2:	or     dl,al
  40b0e4:	(bad)  
  40b0e5:	sbb    DWORD PTR [edi+0x2d34ff14],edx
  40b0eb:	add    BYTE PTR cs:[esi+0x1bff2467],dh
  40b0f2:	sub    DWORD PTR [ecx-0x246fe341],ebx
  40b0f8:	test   BYTE PTR [ebp-0x16013e28],bl
  40b0fe:	xor    dl,BYTE PTR [eax+eax*1]
  40b101:	bound  eax,QWORD PTR [eax]
  40b103:	add    BYTE PTR [edi-0x35],bl
  40b106:	std    
  40b107:	add    BYTE PTR [edi+0x4d1289db],ch
  40b10d:	inc    edx
  40b10e:	sti    
  40b10f:	(bad)  
  40b110:	pop    edi
  40b111:	fmul   QWORD PTR [esi-0x73]
  40b114:	push   ebp
  40b115:	pop    ss
  40b116:	(bad)  
  40b117:	dec    DWORD PTR [edi+0x7]
  40b11a:	push   0x10
  40b11c:	pop    edi
  40b11d:	xchg   edx,eax
  40b11e:	idiv   dh
  40b120:	pop    edi
  40b121:	fdiv   st(5),st
  40b123:	push   edx
  40b124:	mov    WORD PTR [edi-0x24110345],ss
  40b12a:	std    
  40b12b:	add    ah,ah
  40b12d:	clc    
  40b12e:	mov    WORD PTR [ebp-0x22478],?
  40b134:	pop    edi
  40b135:	push   edx
  40b136:	adc    bh,bh
  40b138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b139:	sbb    dl,BYTE PTR [edi-0x1]
  40b13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b13d:	push   cs
  40b13e:	call   0xfe1cd056
  40b143:	adc    DWORD PTR [edi],0xffffffc7
  40b146:	std    
  40b147:	lea    ebp,[ebx*8-0x4b1a0003]
  40b14e:	jmp    0xf77284fd
  40b153:	(bad)  
  40b154:	pop    edi
  40b155:	jmp    0xfef6:0xa44f1289
  40b15c:	pop    edi
  40b15d:	jmp    0xc2c9:0x95052fd
  40b164:	or     al,0x16
  40b166:	push   ebp
  40b167:	mov    eax,DWORD PTR [eax]
  40b169:	add    ah,bh
  40b16b:	xchg   edi,eax
  40b16c:	ret    0xdef8
  40b16f:	jmp    0x3d40971
  40b174:	or     al,0x8b
  40b176:	jmp    0xfde9:0xcef8838c
  40b17d:	push   eax
  40b17e:	and    bl,BYTE PTR [eax]
  40b180:	push   0x0
  40b182:	xor    DWORD PTR [edx-0x211f3b0],ebp
  40b188:	sbb    eax,DWORD PTR [ebp-0x38ca3f0f]
  40b18e:	je     0x40b1cf
  40b190:	add    al,0x0
  40b192:	xor    DWORD PTR [ebx+0x43a48a72],ebp
  40b198:	(bad)  
  40b199:	inc    dh
  40b19b:	inc    esi
  40b19c:	repnz mov WORD PTR [edi+ebx*2+0x34],?
  40b1a1:	lea    ebp,[edi+eiz*2+0x7baefed6]
  40b1a8:	push   0xdc40a610
  40b1ad:	std    
  40b1ae:	sahf   
  40b1af:	add    dl,bh
  40b1b1:	push   ecx
  40b1b2:	and    eax,0x8d7c835b
  40b1b7:	stos   DWORD PTR es:[edi],eax
  40b1b8:	jb     0x40b22d
  40b1ba:	push   ecx
  40b1bb:	dec    eax
  40b1bc:	cdq    
  40b1bd:	sti    
  40b1be:	jg     0x40b1e2
  40b1c0:	xlat   BYTE PTR ds:[ebx]
  40b1c1:	(bad)  
  40b1c2:	jbe    0x40b164
  40b1c4:	push   es
  40b1c5:	jmp    esp
  40b1c7:	mov    dl,0x2d
  40b1c9:	call   0xff17cc07
  40b1ce:	add    BYTE PTR [eax],al
  40b1d0:	mov    dl,0xfa
  40b1d2:	repz (bad) 
  40b1d4:	push   esi
  40b1d5:	js     0x40b1ad
  40b1d7:	pop    esp
  40b1d9:	adc    esi,DWORD PTR [edx+ebp*8-0x7d]
  40b1dd:	inc    esi
  40b1de:	jo     0x40b1d7
  40b1e0:	aas    
  40b1e1:	loop   0x40b1b8
  40b1e3:	mov    ah,BYTE PTR [ebx]
  40b1e5:	jmp    0xfed5:0xd22ff78f
  40b1ec:	add    ebx,0x35
  40b1ef:	leave  
  40b1f0:	repz ret 0x5502
  40b1f4:	stos   BYTE PTR es:[edi],al
  40b1f5:	(bad)  
  40b1f6:	add    ebx,0x74d728c1
  40b1fc:	xor    eax,0x69cc9114
  40b201:	adc    al,0xe9
  40b203:	or     dh,cl
  40b205:	inc    esi
  40b206:	in     al,dx
  40b207:	xor    eax,0x3dcd5f8
  40b20c:	add    BYTE PTR [ecx+ebp*2-0x6772cf3d],dh
  40b213:	mov    BYTE PTR [ebp-0x50],ch
  40b216:	sbb    BYTE PTR [edx],dh
  40b218:	into   
  40b219:	inc    esi
  40b21a:	fucomp st(3)
  40b21c:	push   edx
  40b21d:	xchg   edx,eax
  40b21e:	gs (bad) 
  40b220:	or     ecx,ebx
  40b222:	outs   dx,DWORD PTR ds:[esi]
  40b223:	dec    eax
  40b224:	(bad)  [edx+eiz*8-0x5b75c1f3]
  40b22b:	sub    al,0x95
  40b22d:	adc    ch,BYTE PTR [edi+ebp*4-0x10c06b0f]
  40b234:	add    BYTE PTR [eax],al
  40b236:	and    bl,al
  40b238:	add    esi,ecx
  40b23a:	mov    ecx,0x4eea1946
  40b23f:	or     dh,dh
  40b241:	(bad)  
  40b242:	repnz icebp 
  40b244:	or     al,0x33
  40b246:	or     DWORD PTR [ebx-0x55],esp
  40b249:	inc    esp
  40b24a:	xor    DWORD PTR [edi-0x5409445d],ecx
  40b250:	adc    al,0x4c
  40b252:	xor    DWORD PTR [edx+ebp*2],edx
  40b255:	mov    edi,0xbbab8f2a
  40b25a:	inc    al
  40b25c:	jae    0x40b211
  40b25e:	dec    esi
  40b25f:	mov    esp,DWORD PTR [ecx-0x2b]
  40b262:	aas    
  40b263:	mov    ah,BYTE PTR [ebx]
  40b265:	mov    ah,0xec
  40b267:	xchg   esp,eax
  40b268:	(bad)  
  40b269:	lock mov al,ds:0xfd5f67e3
  40b26f:	mov    edi,0xbf3103e8
  40b274:	xor    esi,DWORD PTR [eax+0x2b00658e]
  40b27a:	jb     0x40b290
  40b27c:	lea    esp,[eax*8+0x6a65e84f]
  40b283:	adc    al,0x0
  40b285:	push   0xfffffff1
  40b287:	or     ecx,DWORD PTR [ebp-0xb052d4]
  40b28d:	adc    al,0x9d
  40b28f:	mov    bh,0x57
  40b291:	add    al,BYTE PTR [edi+edi*4]
  40b294:	mov    BYTE PTR [ebx*4+0xa54490],ah
  40b29b:	add    BYTE PTR ds:0x559974bf,al
  40b2a1:	inc    dx
  40b2a3:	test   al,0x32
  40b2a5:	mov    edi,0x550bc234
  40b2aa:	add    BYTE PTR [ecx+0x10],al
  40b2ad:	cmp    bh,bh
  40b2af:	dec    esi
  40b2b0:	cmp    ah,dl
  40b2b2:	push   cs
  40b2b3:	ins    DWORD PTR es:[edi],dx
  40b2b4:	or     al,0xbf
  40b2b6:	(bad)  
  40b2b7:	jmp    0x6b090b67
  40b2bc:	out    0xcf,al
  40b2be:	(bad)  
  40b2bf:	fld    QWORD PTR [esi]
  40b2c1:	xchg   ebp,eax
  40b2c2:	(bad)  
  40b2c3:	call   0xedb571fa
  40b2c8:	mov    dl,BYTE PTR [ebx]
  40b2ca:	dec    ecx
  40b2cb:	jmp    0x6b209802
  40b2d0:	ins    DWORD PTR es:[edi],dx
  40b2d1:	adc    eax,0xbec2ac89
  40b2d6:	je     0x40b2c5
  40b2d8:	lods   eax,DWORD PTR ds:[esi]
  40b2d9:	pop    eax
  40b2da:	mov    ah,0xf6
  40b2dc:	dec    edi
  40b2de:	mov    fs,WORD PTR [edx+esi*2-0x4a4e8b42]
  40b2e5:	pop    eax
  40b2e6:	les    esp,FWORD PTR [esi-0x17008009]
  40b2ec:	xor    dl,BYTE PTR [ebx+eax*4]
  40b2ef:	or     al,0x3e
  40b2f1:	in     eax,dx
  40b2f2:	inc    eax
  40b2f3:	add    BYTE PTR [eax],cl
  40b2f5:	adc    esi,DWORD PTR [eax+edx*2-0x7b]
  40b2f9:	(bad)  
  40b2fa:	mov    bh,0x50
  40b2fc:	jb     0x40b311
  40b2fe:	push   0x0
  40b300:	add    BYTE PTR [eax],al
  40b302:	jb     0x40b31c
  40b304:	lea    eax,[ebp+0x58]
  40b307:	add    ebp,DWORD PTR [edx+0x0]
  40b30a:	test   esi,edi
  40b30c:	mov    edi,0x3badc750
  40b311:	sub    DWORD PTR [ecx],ebx
  40b313:	sbb    BYTE PTR [ebx],cl
  40b315:	rcr    ah,0x24
  40b318:	cmp    DWORD PTR [ebp+0x14],0x13
  40b31c:	je     0x40b34a
  40b31e:	pop    ebx
  40b31f:	data16 adc BYTE PTR [eax],al
  40b322:	mov    esp,0xb8558b0a
  40b327:	pusha  
  40b328:	mov    DWORD PTR [edx],0x75ff1817
  40b32e:	nop
  40b32f:	out    0x73,eax
  40b331:	mov    eax,0xffbc4df7
  40b336:	fst    QWORD PTR [esi]
  40b338:	push   0xbcb78803
  40b33d:	call   0x3e903e
  40b342:	push   edi
  40b343:	dec    esi
  40b344:	mov    esp,0x42e8
  40b349:	add    BYTE PTR [edi],dl
  40b34b:	dec    esi
  40b34c:	enter  0xf4e8,0x50
  40b350:	(bad)  
  40b351:	push   DWORD PTR [edi]
  40b353:	dec    esi
  40b354:	shr    al,1
  40b356:	in     al,dx
  40b357:	push   eax
  40b358:	(bad)  
  40b359:	push   DWORD PTR [esi+0x580cc0c9]
  40b35f:	in     eax,dx
  40b360:	mov    ch,ah
  40b362:	fstp   TBYTE PTR [esi-0x3a]
  40b365:	lea    eax,[eax]
  40b367:	add    BYTE PTR ds:0x25684ee4,cl
  40b36d:	push   esi
  40b36e:	inc    ecx
  40b36f:	add    BYTE PTR [ecx],dh
  40b371:	push   ecx
  40b372:	or     DWORD PTR [edx+0x31],ebp
  40b375:	push   ebx
  40b376:	icebp  
  40b377:	inc    ecx
  40b378:	jo     0x40b325
  40b37a:	fidivr DWORD PTR [ebp-0x7afd5497]
  40b380:	icebp  
  40b381:	mov    dh,0x7a
  40b383:	mov    edi,0x8b02ab31
  40b388:	fs ja  0x40b409
  40b38b:	adc    DWORD PTR [eax+edi*8+0x20ee4fcb],esp
  40b392:	sar    dh,1
  40b394:	sub    DWORD PTR [edi+0x432ebf87],0x72
  40b39b:	call   esi
  40b39d:	stos   DWORD PTR es:[edi],eax
  40b39e:	test   DWORD PTR [ecx+ecx*8-0x55],edi
  40b3a2:	add    DWORD PTR [ebp+ebx*4-0x9fffd55],eax
  40b3a9:	jo     0x40b361
  40b3ab:	push   DWORD PTR [esi-0xb38fd55]
  40b3b1:	add    al,BYTE PTR [eax+eax*1]
  40b3b4:	xor    DWORD PTR [ebx+0x238144c9],ebp
  40b3ba:	add    al,0x0
  40b3bc:	xor    esi,esi
  40b3be:	dec    eax
  40b3bf:	int3   
  40b3c0:	xor    DWORD PTR [ebx-0x5745fffe],ebp
  40b3c6:	retf   0x238a
  40b3c9:	dec    eax
  40b3ca:	dec    ecx
  40b3cb:	int3   
  40b3cc:	add    BYTE PTR [eax],al
  40b3ce:	loope  0x40b3ff
  40b3d0:	dec    ecx
  40b3d1:	rol    BYTE PTR [ecx],1
  40b3d3:	xchg   ecx,eax
  40b3d4:	add    edi,edi
  40b3d6:	fsub   QWORD PTR [edx]
  40b3d8:	rcl    DWORD PTR [ecx+0x2d],cl
  40b3db:	ret    0x74c2
  40b3de:	std    
  40b3df:	sub    DWORD PTR [ecx-0x34],edx
  40b3e2:	xor    BYTE PTR [eax+0x41],al
  40b3e5:	add    esp,0x26
  40b3e8:	add    al,0x74
  40b3ea:	not    DWORD PTR [ebx]
  40b3ec:	push   ecx
  40b3ed:	inc    ecx
  40b3ee:	repz push edx
  40b3f0:	jmp    0xc12959c7
  40b3f5:	enter  0x146e,0xe9
  40b3f9:	(bad)  
  40b3fa:	fiadd  WORD PTR [edi-0xd]
  40b3fd:	imul   ebp,esi,0xb803e913
  40b403:	push   esi
  40b404:	mov    eax,ds:0x23d52fde
  40b409:	mov    esp,0x3e8bcfe
  40b40e:	test   BYTE PTR [esi-0x4f],0xd2
  40b412:	gs call 0xac7a0cad
  40b418:	xchg   al,dl
  40b41a:	fistp  QWORD PTR [ebp+eax*4-0x295402a8]
  40b421:	cmp    esi,DWORD PTR [ecx]
  40b423:	adc    al,0x6a
  40b425:	push   eax
  40b426:	jmp    0xc03ca93e
  40b42b:	inc    esi
  40b42c:	inc    ecx
  40b42d:	fld    TBYTE PTR [esi]
  40b42f:	dec    esp
  40b430:	jmp    0x9a40b438
  40b435:	(bad)  
  40b436:	popa   
  40b437:	cmp    BYTE PTR [ecx+0x25d2fa88],ch
  40b43d:	mov    esp,0x89293545
  40b442:	xchg   ebx,eax
  40b443:	iret   
  40b444:	mov    ebx,0x85583621
  40b449:	mov    esp,0xd169fb9a
  40b44e:	in     al,dx
  40b44f:	add    ebx,esp
  40b451:	mov    BYTE PTR [esi+eax*4],cl
  40b454:	jb     0x40b409
  40b456:	mov    esi,0xaaa32586
  40b45b:	inc    esp
  40b45c:	xor    DWORD PTR [esp+edi*2],edx
  40b45f:	icebp  
  40b460:	outs   dx,DWORD PTR ds:[esi]
  40b461:	push   ss
  40b462:	pop    eax
  40b463:	inc    ebp
  40b464:	lock adc eax,DWORD PTR [eax]
  40b467:	call   0x2f40c89e
  40b46c:	mov    ecx,0x55e94152
  40b471:	adc    eax,0x165ba866
  40b476:	sub    DWORD PTR [edi+0xf83322f],0x35
  40b47d:	inc    ecx
  40b47e:	repz push 0x26
  40b481:	leave  
  40b482:	sub    eax,0xf143528
  40b487:	ins    DWORD PTR es:[edi],dx
  40b488:	hlt    
  40b489:	mov    ebx,0xf8b5e9fe
  40b48e:	enter  0x73d7,0x14
  40b492:	add    dh,ch
  40b494:	mov    dh,0xa9
  40b496:	(bad)  
  40b497:	call   0x9772b49c
  40b49c:	cmp    al,0xcc
  40b49e:	cmp    edx,DWORD PTR [ebp+0x0]
  40b4a1:	jmp    0xea2144d7
  40b4a6:	xor    dl,BYTE PTR [edi+eax*8]
  40b4a9:	sub    al,0xe1
  40b4ab:	mov    ebx,0xd332e9fe
  40b4b0:	inc    esp
  40b4b1:	popa   
  40b4b2:	sub    eax,0x2fe90014
  40b4b7:	push   eax
  40b4b8:	cld    
  40b4b9:	mov    ecx,0xb9f85027
  40b4be:	cld    
  40b4bf:	adc    ebp,DWORD PTR [eax+0x26]
  40b4c2:	out    dx,eax
  40b4c3:	push   esp
  40b4c4:	add    BYTE PTR [esi],bh
  40b4c6:	xchg   ah,cl
  40b4c8:	sub    eax,0xc00f32a8
  40b4cd:	fidiv  WORD PTR [esi+0x32e8ff81]
  40b4d3:	xchg   edi,eax
  40b4d4:	jl     0x40b4f7
  40b4d6:	xor    eax,0x2d45840b
  40b4db:	adc    al,0x0
  40b4dd:	push   0xffffffee
  40b4df:	mov    bh,0xff
  40b4e1:	call   FWORD PTR [edi-0x6d]
  40b4e4:	mov    al,ds:0x8b175800
  40b4e9:	jne    0x40b527
  40b4eb:	fiadd  WORD PTR [eax+0x56174800]
  40b4f1:	mov    edx,DWORD PTR [esi]
  40b4f3:	in     eax,0x74
  40b4f5:	sbb    BYTE PTR [edi-0x79000fae],bl
  40b4fb:	les    ecx,FWORD PTR [ebp+0x4000045]
  40b501:	pop    edi
  40b502:	xchg   ebp,eax
  40b503:	inc    edx
  40b504:	dec    ecx
  40b505:	adc    al,ch
  40b507:	xlat   BYTE PTR ds:[ebx]
  40b508:	push   esi
  40b509:	adc    BYTE PTR [eax],al
  40b50b:	sar    eax,1
  40b50d:	(bad)  
  40b50e:	mov    esi,0xe0529102
  40b513:	push   0x415175
  40b518:	pop    edi
  40b519:	push   edx
  40b51a:	in     al,0xc7
  40b51c:	adc    eax,0xc8fffeb4
  40b521:	push   ss
  40b522:	lea    eax,[ebp-0x40]
  40b525:	push   es
  40b526:	push   0x1
  40b528:	and    dl,BYTE PTR [eax]
  40b52a:	push   0x0
  40b52c:	dec    ebp
  40b52d:	push   edx
  40b52e:	loopne 0x40b580
  40b530:	xor    dl,BYTE PTR [eax]
  40b532:	lea    eax,[ebp+0x58]
  40b535:	pop    es
  40b536:	call   DWORD PTR ds:0x411f4d
  40b53c:	xchg   ebx,eax
  40b53d:	(bad)  
  40b53e:	jb     0x40b56d
  40b540:	or     ecx,DWORD PTR [edx-0x14]
  40b543:	add    ah,dl
  40b545:	jmp    0x40b4fe
  40b547:	add    DWORD PTR [eax+0x580b0016],ebx
  40b54d:	arpl   WORD PTR [esi],dx
  40b54f:	inc    ebp
  40b551:	mov    esi,0xe42075fd
  40b556:	jae    0x40b544
  40b558:	dec    edi
  40b559:	pop    ebp
  40b55a:	or     BYTE PTR [eax+0x31],ch
  40b55d:	test   eax,0x149fef02
  40b562:	sti    
  40b563:	clc    
  40b564:	add    BYTE PTR [eax],al
  40b566:	push   esi
  40b567:	adc    eax,edx
  40b569:	je     0x40b5c8
  40b56b:	and    al,0x96
  40b56d:	inc    esp
  40b56e:	xor    DWORD PTR [ebp-0x3b1300d0],ebp
  40b574:	add    ch,0x2d
  40b577:	cs push ecx
  40b579:	clc    
  40b57a:	xor    DWORD PTR [edi-0x3],ebx
  40b57d:	and    BYTE PTR [edi-0x55],0xfd
  40b581:	test   BYTE PTR [esi+0x16fececa],cl
  40b587:	stc    
  40b588:	iret   
  40b589:	(bad)  
  40b58a:	and    al,0x68
  40b58c:	sbb    eax,0xbd213141
  40b591:	shl    DWORD PTR ds:0x58b37ab,0x2f
  40b598:	enter  0x5bf7,0xab
  40b59c:	pop    eax
  40b59d:	das    
  40b59e:	out    0x18,al
  40b5a0:	cld    
  40b5a1:	out    0x90,eax
  40b5a3:	sbb    al,0xcf
  40b5a5:	(bad)  
  40b5a6:	test   al,0xe8
  40b5a8:	iret   
  40b5a9:	jg     0x40b5b7
  40b5ab:	fild   WORD PTR [eax+0x41]
  40b5ae:	xor    DWORD PTR [ebx-0x1bb6d6a9],ebp
  40b5b4:	inc    eax
  40b5b5:	inc    ecx
  40b5b6:	xor    ebx,esp
  40b5b8:	mov    al,0x40
  40b5ba:	lock stos BYTE PTR es:[edi],al
  40b5bc:	(bad)  
  40b5be:	daa    
  40b5bf:	(bad)  
  40b5c0:	iret   
  40b5c1:	test   BYTE PTR [ecx-0x21],dh
  40b5c4:	sub    ebp,DWORD PTR [eax+0x3c]
  40b5c7:	ins    DWORD PTR es:[edi],dx
  40b5c8:	inc    ebx
  40b5c9:	add    BYTE PTR [eax],al
  40b5cb:	add    BYTE PTR [ecx],bl
  40b5cd:	inc    DWORD PTR [ecx+eax*2+0x31]
  40b5d1:	push   ebx
  40b5d2:	mov    dl,0x7d
  40b5d4:	jle    0x40b5c0
  40b5d6:	lds    eax,FWORD PTR [ebx*1+0x3144ab14]
  40b5dd:	adc    ebp,DWORD PTR [edx+0x11]
  40b5e0:	dec    eax
  40b5e1:	push   esi
  40b5e2:	test   al,0x3
  40b5e4:	xor    DWORD PTR [eax-0x2d],eax
  40b5e7:	(bad)  
  40b5e8:	in     eax,dx
  40b5e9:	mov    ebx,0x143103e8
  40b5ee:	rol    bl,cl
  40b5f0:	mul    BYTE PTR [ebx-0x67]
  40b5f3:	and    ch,0xbb
  40b5f6:	call   0x3145:0x2b1b1dce
  40b5fd:	(bad)
  40b601:	lods   eax,DWORD PTR ds:[esi]
  40b602:	test   BYTE PTR [edx+0x58e8bc9d],0x33
  40b609:	lods   eax,DWORD PTR ds:[esi]
  40b60a:	fmulp  st(6),st
  40b60c:	test   DWORD PTR [ebp+edi*4+0x3aac3958],edi
  40b613:	retf   
  40b614:	(bad)  
  40b615:	mov    eax,0x8cf93861
  40b61a:	cli    
  40b61b:	into   
  40b61c:	gs mov esp,0xb939319d
  40b622:	sbb    edi,esp
  40b624:	(bad)  
  40b625:	dec    ebp
  40b626:	mov    esi,cs
  40b628:	xlat   BYTE PTR ds:[ebx]
  40b629:	mov    eax,0xecd6fbfb
  40b62e:	jle    0x40b5fe
  40b630:	add    BYTE PTR [eax],al
  40b632:	(bad)  
  40b633:	mov    eax,0x3ebfcffb
  40b638:	loope  0x40b615
  40b63a:	bound  eax,QWORD PTR [ebx+0x66]
  40b63d:	into   
  40b63e:	jns    0x40b615
  40b640:	in     al,0x3
  40b642:	cld    
  40b643:	mov    WORD PTR [edx+eax*4+0x72],es
  40b647:	ret    
  40b648:	mov    dh,0x36
  40b64a:	add    cl,BYTE PTR [ebp+0x1577ff9b]
  40b650:	jmp    0x54e758
  40b655:	(bad)  ss:[ebx]
  40b658:	call   0x54a4ca
  40b65d:	push   0x7a
  40b65f:	adc    esi,DWORD PTR [edi-0x10]
  40b662:	dec    ebx
  40b663:	aam    0x5a
  40b665:	mov    dh,0xc
  40b667:	retf   
  40b668:	shl    ecx,0x32
  40b66b:	jecxz  0x40b654
  40b66d:	jb     0x40b678
  40b66f:	or     BYTE PTR [ecx+0xee0cbeb],cl
  40b675:	imul   ecx,DWORD PTR [eax-0x44160148],0x3f
  40b67c:	or     BYTE PTR [edx+0x7e],dh
  40b67f:	or     al,0xeb
  40b681:	inc    ebx
  40b682:	(bad)  
  40b683:	mov    eax,DWORD PTR ds:0x71e80169
  40b689:	jecxz  0x40b63d
  40b68b:	mov    ebx,0x94363e38
  40b690:	jmp    0x40b68b
  40b692:	jmp    0xf636b1
  40b697:	add    BYTE PTR [edx+0x42],dh
  40b69a:	or     eax,0x7751e169
  40b69f:	icebp  
  40b6a0:	mov    dl,0xab
  40b6a2:	inc    eax
  40b6a3:	imul   edi,ecx,0x39e0eb0d
  40b6a9:	aam    0x5a
  40b6ab:	cs pop es
  40b6ad:	int    0xc1
  40b6af:	icebp  
  40b6b0:	xor    bh,al
  40b6b2:	das    
  40b6b3:	sti    
  40b6b4:	retf   0x38fb
  40b6b7:	(bad)  
  40b6b8:	ss call 0xfbfd38ed
  40b6be:	inc    eax
  40b6bf:	fld    TBYTE PTR [eax+0x2cd645fb]
  40b6c5:	call   0xaad9a40a
  40b6ca:	or     BYTE PTR [edx],al
  40b6cc:	ins    DWORD PTR es:[edi],dx
  40b6cd:	pop    edx
  40b6ce:	pop    edi
  40b6cf:	add    dh,dl
  40b6d1:	jp     0x40b693
  40b6d3:	or     BYTE PTR [eax-0x6dfb212d],bl
  40b6d9:	iret   
  40b6da:	test   al,0x4b
  40b6dc:	or     ecx,esi
  40b6de:	add    BYTE PTR [ebx],cl
  40b6e0:	repz pop esi
  40b6e2:	mov    ds:0xfdb78d8b,al
  40b6e7:	xor    bh,dl
  40b6e9:	dec    esi
  40b6ea:	clc    
  40b6eb:	(bad)  
  40b6ec:	mov    ebp,0x34458dbb
  40b6f1:	rol    DWORD PTR [ebx-0xc],1
  40b6f4:	pop    eax
  40b6f5:	adc    eax,DWORD PTR [eax]
  40b6f7:	add    bl,cl
  40b6f9:	push   es
  40b6fa:	cmp    eax,0x89000029
  40b6ff:	adc    eax,DWORD PTR [eax]
  40b701:	je     0x40b771
  40b703:	aaa    
  40b704:	inc    esp
  40b705:	lock push 0x86a015a
  40b70b:	pop    ebp
  40b70c:	add    BYTE PTR [edx+0x8],ch
  40b70f:	pop    ebp
  40b710:	add    BYTE PTR [ebp-0xb137a3],cl
  40b716:	fld    QWORD PTR ds:0xbc084129
  40b71c:	mov    esi,0x7b940274
  40b721:	hlt    
  40b722:	fcomp  DWORD PTR [esi+0x34]
  40b725:	mov    ecx,DWORD PTR ds:0xb84d8b14
  40b72b:	or     ecx,DWORD PTR [eax]
  40b72d:	ja     0x40b721
  40b72f:	(bad)  
  40b730:	mov    DWORD PTR [ebp+0x4c],esi
  40b733:	cmp    al,0x7c
  40b735:	or     BYTE PTR [ebx-0xa],al
  40b738:	out    dx,eax
  40b739:	jecxz  0x40b705
  40b73b:	jecxz  0x40b6df
  40b73d:	mov    ecx,DWORD PTR ds:0x875ff14
  40b743:	cmp    bh,bh
  40b745:	(bad)  
  40b746:	jge    0x40b726
  40b748:	out    0xe3,al
  40b74a:	xor    DWORD PTR [edx+0x2],ebp
  40b74d:	add    cl,bl
  40b74f:	stos   DWORD PTR es:[edi],eax
  40b750:	add    al,BYTE PTR [eax]
  40b752:	xor    DWORD PTR [edx+0x2b],esi
  40b755:	pop    esi
  40b756:	js     0x40b742
  40b758:	cli    
  40b759:	dec    DWORD PTR [ebx-0x13]
  40b75c:	daa    
  40b75d:	pop    edi
  40b75e:	xlat   BYTE PTR ds:[ebx]
  40b75f:	repz rol BYTE PTR [edi],0x0
  40b763:	add    BYTE PTR [ecx],dh
  40b765:	js     0x40b7de
  40b767:	jmp    0x40b71b
  40b769:	lock ret 0x3167
  40b76d:	int    0x2
  40b76f:	add    BYTE PTR [ecx+0x45],cl
  40b772:	push   ecx
  40b773:	dec    DWORD PTR [esi+0x43]
  40b776:	inc    esi
  40b777:	cld    
  40b778:	fldcw  WORD PTR [edx+eiz*1-0x6eeacf00]
  40b77f:	jno    0x40b7b7
  40b781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b782:	js     0x40b7c8
  40b784:	sub    DWORD PTR [esp+eax*1+0x20],esp
  40b788:	xor    DWORD PTR [ebx-0x215c5b26],ebp
  40b78e:	retf   0x6c88
  40b791:	fistp  WORD PTR [ebx+0x0]
  40b794:	push   ecx
  40b795:	stos   DWORD PTR es:[edi],eax
  40b796:	add    ch,al
  40b798:	test   eax,0xa8fecaf9
  40b79d:	call   0xb721f75
  40b7a2:	add    al,0x0
  40b7a4:	fld    DWORD PTR [edx+0x56]
  40b7a7:	jmp    esi
  40b7a9:	inc    esp
  40b7aa:	inc    ecx
  40b7ab:	in     al,dx
  40b7ac:	dec    ecx
  40b7ad:	stos   DWORD PTR es:[edi],eax
  40b7ae:	and    al,BYTE PTR [eax]
  40b7b0:	xor    DWORD PTR [ebx-0x71318db7],edx
  40b7b6:	jl     0x40b7fc
  40b7b8:	fldenv [ebx]
  40b7ba:	add    al,0x20
  40b7bc:	xor    DWORD PTR [ebx+0x264370da],ebp
  40b7c2:	retf   
  40b7c3:	mov    ah,dh
  40b7c5:	adc    ecx,DWORD PTR [ebp-0x35]
  40b7c8:	add    BYTE PTR [eax],al
  40b7ca:	sbb    eax,0xf3e7d124
  40b7cf:	push   edx
  40b7d0:	jmp    0x40f8d59f
  40b7d5:	jnp    0x40b7c9
  40b7d7:	adc    ebp,ecx
  40b7d9:	xchg   BYTE PTR [edx+0x8],dh
  40b7dc:	ds push ecx
  40b7de:	and    DWORD PTR [esi+eax*1],ebp
  40b7e1:	inc    edi
  40b7e2:	lock adc ebp,DWORD PTR [esi]
  40b7e5:	push   ecx
  40b7e6:	imul   ebp,DWORD PTR [esp+eiz*4+0x6a14313f],0x9bb52ac0
  40b7f1:	repz into 
  40b7f3:	dec    edi
  40b7f4:	stos   BYTE PTR es:[edi],al
  40b7f5:	inc    esp
  40b7f6:	xor    DWORD PTR [ebp+0x2b4ecf7b],esi
  40b7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fd:	add    esi,DWORD PTR [ecx]
  40b7ff:	xchg   ecx,eax
  40b800:	sub    al,0xf8
  40b802:	aaa    
  40b803:	aas    
  40b804:	fstp   DWORD PTR [ebx-0x6e]
  40b807:	push   ecx
  40b808:	sub    BYTE PTR [esi+eiz*1],al
  40b80b:	aas    
  40b80c:	(bad)  
  40b80e:	test   BYTE PTR [eax-0x17],dl
  40b811:	add    esi,DWORD PTR [edx-0x7a352331]
  40b817:	and    al,0x51
  40b819:	push   edx
  40b81a:	jb     0x40b86f
  40b81c:	jmp    0xc0e93deb
  40b821:	inc    esi
  40b822:	ins    DWORD PTR es:[edi],dx
  40b823:	adc    al,0xe9
  40b825:	xchg   dl,dh
  40b827:	pop    es
  40b828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b829:	push   eax
  40b82a:	xor    eax,0x466d2c
  40b82f:	add    BYTE PTR [eax+0x14],dh
  40b832:	xchg   esi,eax
  40b833:	push   eax
  40b834:	leave  
  40b835:	stos   DWORD PTR es:[edi],eax
  40b836:	fdivr  DWORD PTR [edi]
  40b838:	xor    DWORD PTR [edx+ebp*2],edx
  40b83b:	mov    edi,0xf3f3b53a
  40b840:	push   esi
  40b841:	pushf  
  40b842:	jmp    FWORD PTR [ecx]
  40b844:	ins    BYTE PTR es:[edi],dx
  40b845:	adc    al,0xff
  40b847:	hlt    
  40b848:	mov    gs,WORD PTR [esp+ebx*1-0x7cebcd53]
  40b84f:	and    eax,0x56002aa6
  40b854:	add    DWORD PTR [eax-0x4a792b02],edi
  40b85a:	xor    al,0xa2
  40b85c:	and    eax,0xc3510053
  40b861:	inc    eax
  40b862:	push   DWORD PTR [esi]
  40b864:	cmc    
  40b865:	dec    edi
  40b866:	loopne 0x40b82b
  40b868:	xor    dh,BYTE PTR [ebp+0x3f7b2174]
  40b86e:	or     al,0x1e
  40b870:	inc    ecx
  40b871:	pop    ecx
  40b872:	sub    DWORD PTR [eax-0x6a3f53ce],ebp
  40b878:	jnp    0x40b82f
  40b87a:	mov    BYTE PTR [esi+ecx*4-0x1101ffd6],ch
  40b881:	mov    edi,0xb53e7cfe
  40b886:	xor    al,0x92
  40b888:	dec    ebp
  40b889:	push   ebp
  40b88a:	add    cl,dl
  40b88c:	les    esp,FWORD PTR [edi]
  40b88e:	(bad)  
  40b88f:	ficomp WORD PTR [edx+0x43d858]
  40b895:	add    BYTE PTR ds:0xf8d974b3,ch
  40b89b:	sub    al,ch
  40b89d:	(bad)  
  40b89e:	ss dec edi
  40b8a0:	sub    DWORD PTR [eax],ebp
  40b8a2:	xor    eax,0xe83d94bc
  40b8a7:	mov    dl,0x88
  40b8a9:	and    al,0xa1
  40b8ab:	cmp    eax,0xc076a600
  40b8b0:	(bad)  
  40b8b1:	adc    al,0xfd
  40b8b3:	mov    dl,0x34
  40b8b5:	xor    bh,BYTE PTR [edx]
  40b8b7:	push   ebp
  40b8b8:	add    BYTE PTR [ecx+0xff2878],al
  40b8be:	scas   eax,DWORD PTR es:[edi]
  40b8bf:	das    
  40b8c0:	inc    esp
  40b8c1:	ror    BYTE PTR [ebp-0xd],1
  40b8c4:	mov    edi,0xe4633f50
  40b8c9:	jmp    DWORD PTR [ebp+0x7335fdab]
  40b8cf:	push   cs
  40b8d0:	inc    ecx
  40b8d1:	add    BYTE PTR [eax],al
  40b8d3:	xor    eax,0x2effff74
  40b8d8:	inc    esp
  40b8d9:	int3   
  40b8da:	sbb    ebx,DWORD PTR [ebx-0x20]
  40b8dd:	add    BYTE PTR [edi+0x33],bh
  40b8e0:	mov    dh,0x0
  40b8e2:	mov    BYTE PTR [edi],dl
  40b8e4:	cmp    DWORD PTR [ebp+0x14],0x18
  40b8e8:	je     0x40d0db
  40b8ee:	fistp  DWORD PTR [edx-0x30]
  40b8f1:	add    BYTE PTR [edi+0x33],cl
  40b8f4:	mov    ds:0x8d174800,al
  40b8f9:	inc    ebp
  40b8fa:	add    BYTE PTR [eax],al
  40b8fc:	adc    al,0xe8
  40b8fe:	(bad)  
  40b8ff:	jne    0x40b925
  40b901:	ror    BYTE PTR [esi-0x3],1
  40b904:	aas    
  40b905:	fmul   QWORD PTR [ecx]
  40b907:	ror    BYTE PTR [edi+0x33],0x8e
  40b90b:	add    BYTE PTR [eax],bl
  40b90d:	pop    ss
  40b90e:	cmp    DWORD PTR [ebp-0x2c],0x16
  40b912:	je     0x40d0ad
  40b918:	(bad)  
  40b919:	repnz (bad) 
  40b91b:	push   eax
  40b91c:	jmp    DWORD PTR [ecx-0x30]
  40b91f:	call   0x3e932e
  40b924:	add    edx,edi
  40b926:	jb     0x40b99d
  40b928:	mov    ebx,DWORD PTR [edx-0x38]
  40b92b:	add    BYTE PTR [ecx*2-0x3427ef98],ah
  40b932:	mov    esp,0xe6b045ff
  40b937:	jbe    0x40b96a
  40b939:	sbb    cl,cl
  40b93b:	dec    dh
  40b93d:	pop    es
  40b93e:	in     al,0xfe
  40b940:	cmp    al,0xa5
  40b942:	fcmove st,st(4)
  40b944:	dec    esp
  40b945:	xor    cl,al
  40b947:	(bad)  
  40b948:	cmp    al,0x89
  40b94a:	(bad)  
  40b94b:	je     0x40b986
  40b94d:	xchg   ebp,eax
  40b94e:	les    ebp,FWORD PTR [esi+eiz*4+0x39]
  40b952:	enter  0x7974,0x51
  40b956:	dec    esi
  40b957:	or     BYTE PTR [ecx-0x7100aa6f],cl
  40b95d:	popa   
  40b95e:	dec    esi
  40b95f:	les    eax,FWORD PTR [eax]
  40b961:	add    BYTE PTR [esi+0x4feae6f],al
  40b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b968:	fidivr DWORD PTR [esp+eax*1-0x16]
  40b96c:	(bad)  
  40b96d:	(bad)  
  40b96e:	in     al,0xf4
  40b970:	(bad)  
  40b971:	je     0x40b8f4
  40b973:	stc    
  40b974:	dec    ebp
  40b975:	or     BYTE PTR [ecx-0x5f],cl
  40b978:	push   ebp
  40b979:	call   DWORD PTR [esi+0x3d]
  40b97c:	inc    esi
  40b97d:	int3   
  40b97e:	xor    DWORD PTR [ecx-0x33b7d13],ecx
  40b984:	(bad)  
  40b985:	je     0x40b9b5
  40b987:	es ds int3 
  40b98a:	ss ins BYTE PTR es:[edi],dx
  40b98c:	(bad)  
  40b98d:	je     0x40b9c8
  40b98f:	adc    esp,DWORD PTR [ebx]
  40b991:	ins    DWORD PTR es:[edi],dx
  40b992:	es mov ebx,0xbb8b09da
  40b998:	lds    esi,FWORD PTR [ecx+ebp*1-0x2d]
  40b99c:	out    dx,eax
  40b99d:	ins    BYTE PTR es:[edi],dx
  40b99e:	push   cs
  40b99f:	jecxz  0x40b967
  40b9a1:	je     0x40b9a8
  40b9a3:	les    eax,FWORD PTR [edx-0x398d0191]
  40b9a9:	je     0x40b9a4
  40b9ab:	ror    DWORD PTR [edx+0x70],cl
  40b9ae:	out    dx,al
  40b9af:	add    dh,0x74
  40b9b2:	fst    QWORD PTR [ecx+edx*4]
  40b9b5:	push   ebx
  40b9b6:	popa   
  40b9b7:	mov    cl,0x9d
  40b9b9:	(bad)  
  40b9ba:	pop    ebp
  40b9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9bc:	sbb    BYTE PTR [ebx+0x41],0xb1
  40b9c0:	(bad)  
  40b9c1:	(bad)  
  40b9c2:	cmp    eax,0x6390c0
  40b9c7:	add    BYTE PTR [ecx-0x4f],al
  40b9ca:	jge    0x40b993
  40b9cc:	cmp    eax,0x212b80bc
  40b9d1:	mov    cl,0x6d
  40b9d3:	(bad)  
  40b9d4:	sbb    eax,0x213350b8
  40b9d9:	mov    cl,0x5d
  40b9db:	(bad)  
  40b9dc:	sbb    eax,0x13b40b4
  40b9e1:	mov    cl,0x4d
  40b9e3:	(bad)  
  40b9e4:	std    
  40b9e5:	iret   
  40b9e6:	push   eax
  40b9e7:	inc    ebx
  40b9e8:	add    DWORD PTR [ecx-0x340238c3],esi
  40b9ee:	inc    eax
  40b9ef:	or     esp,ecx
  40b9f1:	mov    al,0x2d
  40b9f3:	(bad)  
  40b9f4:	ffree  st(7)
  40b9f6:	adc    BYTE PTR [ebx],dl
  40b9f8:	loope  0x40b9aa
  40b9fa:	sbb    eax,0xc3ddc7
  40b9ff:	sbb    eax,ecx
  40ba01:	mov    al,0xd
  40ba03:	(bad)  
  40ba04:	mov    ebp,0xc12310df
  40ba09:	mov    al,0xfd
  40ba0b:	mov    esp,0x30e92070
  40ba10:	mov    edx,0xec067bf
  40ba15:	test   eax,0x56adc6e5
  40ba1a:	fnsave [ebx]
  40ba1c:	push   ss
  40ba1d:	daa    
  40ba1e:	in     eax,0xc6
  40ba20:	inc    ebp
  40ba21:	dec    ebp
  40ba22:	add    BYTE PTR [ebp+0x31],al
  40ba25:	mov    esp,0x1431424c
  40ba2a:	bnd ret 
  40ba2c:	add    BYTE PTR [eax],al
  40ba2e:	daa    
  40ba2f:	xchg   edi,eax
  40ba30:	(bad)  
  40ba31:	fdiv   QWORD PTR ds:0x71a60014
  40ba37:	lods   al,BYTE PTR ds:[esi]
  40ba38:	(bad)  
  40ba39:	call   0x2507ce70
  40ba3e:	add    DWORD PTR [edx+0x3e32e906],esi
  40ba44:	add    BYTE PTR [ebx],al
  40ba46:	sub    eax,0x3513003e
  40ba4b:	lahf   
  40ba4c:	inc    esp
  40ba4d:	jne    0x40ba51
  40ba4f:	lahf   
  40ba50:	test   BYTE PTR [ecx+0x7f],bh
  40ba53:	mov    cl,0xfe
  40ba55:	sbb    DWORD PTR [esi+0x27],ebp
  40ba58:	clc    
  40ba59:	add    WORD PTR [eax+0x13f317e7],si
  40ba60:	add    dl,ah
  40ba62:	jb     0x40ba88
  40ba64:	add    eax,0xfeb0d740
  40ba69:	jmp    0xa8689a48
  40ba6e:	xor    dh,BYTE PTR [ecx+0x4b8ae574]
  40ba74:	jae    0x40baa4
  40ba76:	outs   dx,DWORD PTR ds:[esi]
  40ba77:	pusha  
  40ba78:	mov    edi,DWORD PTR [ecx]
  40ba7a:	fst    DWORD PTR [edi-0x4e90e911]
  40ba80:	dec    edi
  40ba81:	mov    ebx,0xe735b6a
  40ba86:	outs   dx,DWORD PTR ds:[esi]
  40ba87:	fwait
  40ba88:	test   BYTE PTR [ecx],dl
  40ba8a:	outs   dx,DWORD PTR ds:[esi]
  40ba8b:	mov    cl,0xfe
  40ba8d:	adc    edi,ecx
  40ba8f:	inc    ecx
  40ba90:	push   esi
  40ba92:	add    BYTE PTR [eax],al
  40ba94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba95:	pop    eax
  40ba96:	lock cdq 
  40ba98:	mov    al,BYTE PTR [ebx+eax*2]
  40ba9b:	sub    BYTE PTR ds:0xe4d1b4af,dh
  40baa1:	scas   al,BYTE PTR es:[edi]
  40baa2:	(bad)  
  40baa3:	(bad)  
  40baa4:	ds dec ebx
  40baa6:	sub    DWORD PTR [eax],ebp
  40baa8:	sub    eax,0x3a009cbc
  40baad:	fscale 
  40baaf:	mov    DWORD PTR [ebp-0x58000a34],ecx
  40bab5:	xchg   ebp,eax
  40bab6:	mov    ebx,0xfdd99fec
  40babb:	add    BYTE PTR [edx+edi*8],bh
  40babe:	cmp    BYTE PTR [ebp-0x48],0x14
  40bac2:	jne    0x40bb0d
  40bac4:	push   ebx
  40bac5:	das    
  40bac6:	jmp    0x40babf
  40bac8:	mov    bh,0xd9
  40baca:	std    
  40bacb:	xor    BYTE PTR [edi+0x2f],al
  40bace:	jmp    0x40bac7
  40bad0:	aaa    
  40bad1:	fnstcw WORD PTR [edi-0x43]
  40bad4:	mov    ah,0xe1
  40bad6:	std    
  40bad7:	push   DWORD PTR [eax+0x7e000015]
  40badd:	lods   eax,DWORD PTR ds:[esi]
  40bade:	lds    eax,FWORD PTR [ebp-0x21f1c]
  40bae4:	lock adc al,0x0
  40bae7:	add    bl,dh
  40bae9:	mov    ecx,0xe0e48dfd
  40baee:	std    
  40baef:	push   DWORD PTR [edi]
  40baf1:	lahf   
  40baf2:	jmp    0xb5:0xfdd927f7
  40baf9:	add    al,dh
  40bafb:	loopne 0x40bafa
  40bafd:	call   DWORD PTR [edi]
  40baff:	pop    edi
  40bb00:	or     al,ch
  40bb02:	nop
  40bb03:	xlat   BYTE PTR ds:[ebx]
  40bb04:	std    
  40bb05:	(bad)  
  40bb06:	fist   DWORD PTR [esi-0x26c80816]
  40bb0c:	(bad)  
  40bb0d:	je     0x40bb24
  40bb0f:	fnstenv [ebx-0x227c014]
  40bb15:	call   0x40031e
  40bb1a:	pop    ss
  40bb1b:	sahf   
  40bb1c:	jmp    0x6711:0xe6d817f7
  40bb23:	fscale 
  40bb25:	push   DWORD PTR [ecx]
  40bb27:	nop
  40bb28:	(bad)  
  40bb2a:	push   es
  40bb2b:	faddp  st(3),st
  40bb2d:	je     0x40bb58
  40bb2f:	(bad)
  40bb32:	imul   BYTE PTR [ebp-0x3d]
  40bb35:	mov    ah,0xd9
  40bb37:	ins    DWORD PTR es:[edi],dx
  40bb38:	ret    
  40bb39:	(bad)  
  40bb3a:	fldenv [esp+edx*2-0x1]
  40bb3e:	fidiv  WORD PTR [ebp+0x3d]
  40bb41:	clc    
  40bb42:	enter  0xc471,0xfe
  40bb46:	into   
  40bb47:	test   DWORD PTR [ebp-0x4],ecx
  40bb4a:	fsqrt  
  40bb4c:	inc    edx
  40bb4d:	add    BYTE PTR [ecx],dh
  40bb4f:	rol    BYTE PTR fs:[edi],0x31
  40bb53:	or     BYTE PTR [ecx-0x15],bh
  40bb56:	mov    dl,0x80
  40bb58:	(bad)  
  40bb59:	imul   esi,DWORD PTR [ecx],0xff1413
  40bb5f:	add    BYTE PTR [eiz*4+0x4e0509da],ah
  40bb66:	les    ecx,FWORD PTR [eax-0x5a4b70c]
  40bb6c:	repz jnp 0x40bb71
  40bb6f:	inc    DWORD PTR [eiz*4-0x12885d26]
  40bb76:	ret    
  40bb77:	(bad)  
  40bb78:	in     al,0xe8
  40bb7a:	ret    
  40bb7b:	je     0x40bbb6
  40bb7d:	push   ebp
  40bb7e:	push   cs
  40bb7f:	ins    BYTE PTR es:[edi],dx
  40bb80:	pop    esi
  40bb81:	cmc    
  40bb82:	mov    ecx,0x2dbd2dc1
  40bb87:	mov    ebx,DWORD PTR [ebp+0x39]
  40bb8a:	mov    edi,0x5865dffb
  40bb8f:	add    bl,cl
  40bb91:	imul   eax,ebx,0x74
  40bb94:	sub    DWORD PTR ds:0xa72e6aac,eax
  40bb9a:	js     0x40bbe0
  40bb9c:	and    eax,0x49740e33
  40bba1:	adc    al,0x28
  40bba3:	add    al,0xaa
  40bba5:	out    dx,eax
  40bba6:	pusha  
  40bba7:	in     al,dx
  40bba8:	jno    0x40bbbe
  40bbaa:	imul   eax,DWORD PTR [ebx],0x2c242831
  40bbb0:	retf   0x2851
  40bbb3:	add    al,0x5e
  40bbb5:	mov    esp,0x143144dc
  40bbba:	loop   0x40bb7f
  40bbbc:	bound  ecx,QWORD PTR ds:0x2c1fac17
  40bbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc3:	ret    
  40bbc4:	add    BYTE PTR [eax],al
  40bbc6:	data16 cmp al,0xe9
  40bbc9:	add    ebx,esi
  40bbcb:	outs   dx,BYTE PTR ds:[esi]
  40bbcc:	add    BYTE PTR [ecx+0x73],bh
  40bbcf:	push   ebx
  40bbd0:	jmp    0xf1687a28
  40bbd5:	stos   DWORD PTR es:[edi],eax
  40bbd6:	add    DWORD PTR [ecx+0x4f96c37d],eax
  40bbdc:	pop    es
  40bbdd:	ret    
  40bbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbdf:	mov    ecx,0xeeb149e7
  40bbe4:	call   0x5d975721
  40bbe9:	test   esi,0x87c3556b
  40bbef:	lods   eax,DWORD PTR ds:[esi]
  40bbf0:	pop    edx
  40bbf1:	jb     0x40bc39
  40bbf3:	adc    eax,0x27777ebc
  40bbf8:	cmp    eax,0x411be5c3
  40bbfd:	jge    0x40bbda
  40bbff:	lods   al,BYTE PTR ds:[esi]
  40bc00:	sub    eax,0x2adaff63
  40bc05:	or     BYTE PTR [ecx],dh
  40bc07:	inc    edi
  40bc08:	jb     0x40bbba
  40bc0a:	mov    bl,0xd8
  40bc0c:	adc    BYTE PTR [edi+0x6e],dl
  40bc0f:	push   edi
  40bc10:	adc    DWORD PTR [ecx+esi*1],eax
  40bc13:	adc    al,0xe9
  40bc15:	retf   0xafed
  40bc18:	call   0x54ed20
  40bc1d:	bound  edi,QWORD PTR [eax+0x20]
  40bc20:	xor    DWORD PTR [ecx+0x12092732],0xffffffed
  40bc27:	stc    
  40bc28:	rol    DWORD PTR [edx+0x0],1
  40bc2b:	add    ah,bh
  40bc2d:	ror    BYTE PTR [ebx],cl
  40bc2f:	jmp    0xe940d0bb
  40bc34:	xor    bh,BYTE PTR [ecx+0x4716a60]
  40bc3a:	add    BYTE PTR ds:0xd9449938,dh
  40bc40:	mov    ch,0x4
  40bc42:	push   DWORD PTR [ecx+eax*2]
  40bc45:	lods   eax,DWORD PTR ds:[esi]
  40bc46:	je     0x40bc39
  40bc48:	mov    bl,ch
  40bc4a:	addr16 sahf 
  40bc4c:	repz xchg ecx,eax
  40bc4e:	cli    
  40bc4f:	loopne 0x40bc5a
  40bc51:	pop    ss
  40bc52:	or     DWORD PTR [edi*2-0x37e6ba47],esp
  40bc59:	sub    eax,0x1b737eff
  40bc5e:	inc    ebp
  40bc5f:	jno    0x40bc6b
  40bc61:	jnp    0x40bce2
  40bc63:	jmp    0xebb5d09a
  40bc68:	(bad)  
  40bc69:	loope  0x40bbed
  40bc6b:	bound  edi,QWORD PTR [edx]
  40bc6d:	daa    
  40bc6e:	adc    eax,0x8aabf962
  40bc73:	mov    ah,0xbe
  40bc75:	sbb    eax,0xd32a2ba4
  40bc7a:	fcomip st,st(1)
  40bc7c:	mov    ebp,0x960f857
  40bc81:	mov    al,0xea
  40bc83:	fisubr DWORD PTR [edi-0x68d07a9]
  40bc89:	scas   eax,DWORD PTR es:[edi]
  40bc8a:	push   cs
  40bc8b:	inc    ebp
  40bc8c:	je     0x40bca3
  40bc8e:	ror    DWORD PTR [ecx],0x0
  40bc91:	add    BYTE PTR [ebx],bh
  40bc93:	fwait
  40bc94:	inc    esp
  40bc95:	adc    DWORD PTR [ebp-0x74ff03b9],ebp
  40bc9b:	xchg   ebp,eax
  40bc9c:	stc    
  40bc9d:	or     DWORD PTR [esi+0xc458989],esp
  40bca3:	xchg   ebx,eax
  40bca4:	add    BYTE PTR ss:[ebp+0x43c02b1d],ah
  40bcab:	ret    0x6e9
  40bcae:	adc    DWORD PTR [ebx-0x8],0xffffff8b
  40bcb2:	inc    ebp
  40bcb3:	aam    0x59
  40bcb5:	leave  
  40bcb6:	retf   0x4
  40bcb9:	push   ebp
  40bcba:	and    DWORD PTR [ecx+eax*4-0x3c],0xffffffa4
  40bcbf:	aaa    
  40bcc0:	mov    bl,0x66
  40bcc2:	sbb    DWORD PTR [eax],edx
  40bcc4:	cmp    DWORD PTR [ebp-0x4],eax
  40bcc7:	in     eax,dx
  40bcc8:	add    eax,0xc0df882b
  40bccd:	adc    al,bl
  40bccf:	aam    0x33
  40bcd1:	mov    ah,0x36
  40bcd3:	push   edi
  40bcd4:	add    al,ch
  40bcd6:	das    
  40bcd7:	sti    
  40bcd8:	(bad)  
  40bcd9:	inc    DWORD PTR [ecx+0x53]
  40bcdc:	clc    
  40bcdd:	lea    edx,[ebp-0x2c]
  40bce0:	dec    esi
  40bce1:	call   0x3fb8d2
  40bce6:	pavgw  mm2,QWORD PTR [ebx]
  40bce9:	push   DWORD PTR [ebp+0x1b]
  40bcec:	push   DWORD PTR [ebp+0x10]
  40bcef:	aad    0x73
  40bcf1:	or     al,dh
  40bcf3:	inc    WORD PTR ds:[eax]
  40bcf7:	add    bh,ch
  40bcf9:	sbb    al,al
  40bcfb:	(bad)  
  40bcfd:	ds (bad) 
  40bcff:	call   FWORD PTR [eax-0x2c]
  40bd02:	jae    0x40bd10
  40bd04:	pop    ds
  40bd05:	jecxz  0x40bcfe
  40bd07:	jmp    DWORD PTR [ebp-0x5a061995]
  40bd0d:	aam    0xfd
  40bd0f:	mov    edx,DWORD PTR [ebp+0x31453b1b]
  40bd15:	lods   eax,DWORD PTR ds:[esi]
  40bd16:	jae    0x437ab1
  40bd1c:	sub    BYTE PTR ss:[edi],dl
  40bd1f:	jmp    DWORD PTR [ebp+eiz*4-0x5d715e56]
  40bd26:	mov    edi,0xaba17488
  40bd2b:	jae    0x40bd43
  40bd2d:	loopne 0x40bce6
  40bd2f:	sub    ah,bl
  40bd31:	and    eax,0x17fef446
  40bd36:	js     0x40bd9d
  40bd38:	jo     0x40bcf7
  40bd3a:	or     edx,edx
  40bd3c:	jge    0x40bcfd
  40bd3e:	stos   DWORD PTR es:[edi],eax
  40bd3f:	addr16 pop ebx
  40bd41:	mov    ebp,0xb55cff52
  40bd46:	stos   BYTE PTR es:[edi],al
  40bd47:	mov    BYTE PTR [ebp+0x7a],dl
  40bd4a:	mov    edi,0xbfa95cfe
  40bd4f:	je     0x40bd8a
  40bd51:	test   DWORD PTR [ebx],esi
  40bd53:	mov    BYTE PTR [bx+di+0x548b],0x25
  40bd59:	ds std 
  40bd5b:	inc    DWORD PTR [eax]
  40bd5d:	add    BYTE PTR ds:0xb847abbf,bh
  40bd63:	out    dx,eax
  40bd64:	mov    bh,0x8a
  40bd66:	xor    al,0xe9
  40bd68:	sub    BYTE PTR [ecx+0x31],al
  40bd6b:	ds stos BYTE PTR es:[edi],al
  40bd6d:	add    eax,DWORD PTR [eax]
  40bd6f:	xor    dh,BYTE PTR [esi]
  40bd71:	adc    al,0xe0
  40bd73:	dec    ecx
  40bd74:	ss clc 
  40bd76:	xchg   bh,al
  40bd78:	or     ch,al
  40bd7a:	push   esi
  40bd7b:	sar    BYTE PTR [edi-0x3d5a2702],cl
  40bd81:	je     0x40bdb6
  40bd83:	inc    esi
  40bd84:	out    0x50,al
  40bd86:	addr16 mov dx,0xe4fe
  40bd8b:	clc    
  40bd8c:	stos   BYTE PTR es:[edi],al
  40bd8d:	jns    0x40bd5b
  40bd8f:	adc    esp,DWORD PTR [esi]
  40bd91:	ror    BYTE PTR [edi+0x20],0x1d
  40bd95:	stos   DWORD PTR es:[edi],eax
  40bd96:	ret    0x162f
  40bd99:	sar    ch,0x13
  40bd9c:	jmp    0xeb62ece4
  40bda1:	lods   al,BYTE PTR ds:[esi]
  40bda2:	ss xchg ebp,eax
  40bda4:	jnp    0x40bd5d
  40bda6:	and    DWORD PTR es:[edi-0x54],ebp
  40bdaa:	inc    esi
  40bdab:	test   eax,0x170ebf73
  40bdb0:	dec    ebp
  40bdb1:	mov    edi,0xc023d20f
  40bdb6:	push   es
  40bdb7:	stos   BYTE PTR es:[edi],al
  40bdb8:	call   0xf59067c0
  40bdbd:	(bad)  
  40bdbe:	imul   BYTE PTR [ecx+0x3e8]
  40bdc4:	xor    DWORD PTR [ecx+0x27cebc33],ebp
  40bdca:	inc    ebp
  40bdcb:	mov    edi,0xc0239ddf
  40bdd0:	jmp    0x6444b6ab
  40bdd5:	popf   
  40bdd6:	mov    WORD PTR [edi-0x46],ss
  40bdd9:	dec    edi
  40bdda:	in     eax,0x82
  40bddc:	jle    0x40bdfa
  40bdde:	cmp    DWORD PTR [ebp+esi*1-0x444079c8],ebp
  40bde5:	lods   al,BYTE PTR ds:[esi]
  40bde6:	jge    0x40be21
  40bde8:	xor    eax,0x25beed99
  40bded:	add    al,0x5e
  40bdef:	inc    edi
  40bdf0:	sub    eax,0x310fe395
  40bdf5:	and    dh,ch
  40bdf7:	mov    esi,0x476417fd
  40bdfc:	sub    DWORD PTR [esi+ecx*2+0x39],eax
  40be00:	sub    DWORD PTR [edx+ebx*2+0x71a96e30],edi
  40be07:	dec    ecx
  40be08:	cmp    eax,0xdaf0ff9b
  40be0d:	adc    eax,DWORD PTR [eax]
  40be0f:	jmp    0x2c0a0746
  40be14:	and    eax,0x81725514
  40be19:	xchg   esi,eax
  40be1a:	ret    
  40be1b:	sbb    eax,0x261440aa
  40be20:	xor    edx,DWORD PTR [eax+eax*1]
  40be23:	jmp    0xf712bb5a
  40be28:	add    BYTE PTR [eax],al
  40be2a:	jns    0x40be44
  40be2c:	add    ecx,ebp
  40be2e:	xor    dl,BYTE PTR [edi+ecx*1]
  40be31:	push   ebp
  40be32:	repz xchg ebp,eax
  40be34:	jl     0x40be2b
  40be36:	xor    bl,BYTE PTR [edi]
  40be38:	adc    ebx,esi
  40be3a:	dec    ecx
  40be3b:	add    BYTE PTR [edx-0x16],ch
  40be3e:	dec    eax
  40be3f:	adc    al,0x6a
  40be41:	jmp    0xc73f5710
  40be46:	scas   eax,DWORD PTR es:[edi]
  40be47:	mov    ebx,0x1432eb28
  40be4c:	xor    DWORD PTR [ecx+eax*2],0x13
  40be50:	jne    0x40be5c
  40be52:	xchg   esi,eax
  40be53:	pop    ds
  40be54:	adc    BYTE PTR [esi-0x5317e3f7],ah
  40be5a:	or     al,0xa9
  40be5c:	(bad)  
  40be5d:	pusha  
  40be5e:	imul   ebp,DWORD PTR [eax+0x3e1914fe],0x97391300
  40be68:	inc    esp
  40be69:	jge    0x40be6d
  40be6b:	mov    esp,0xa9df7666
  40be70:	call   0x54ef5e
  40be75:	push   0xfffffff1
  40be77:	pop    ss
  40be78:	add    dl,ah
  40be7a:	xchg   ebx,eax
  40be7b:	test   eax,0x1fbff974
  40be80:	or     BYTE PTR [ecx+0x3f],al
  40be83:	xor    bh,bh
  40be85:	add    bh,dh
  40be87:	xchg   edi,eax
  40be88:	inc    ebx
  40be89:	cld    
  40be8a:	daa    
  40be8b:	in     al,dx
  40be8c:	adc    ebp,DWORD PTR [edx+0x0]
  40be8f:	add    BYTE PTR [eax-0x6],cl
  40be92:	add    ecx,DWORD PTR [ebp-0x17b19773]
  40be98:	push   esi
  40be99:	imul   edi,ebp,0xffc221ff
  40be9f:	dec    DWORD PTR [eax-0x6b]
  40bea2:	jnp    0x40beb0
  40bea4:	dec    ebx
  40bea5:	jmp    0x40bec6
  40bea7:	jmp    FWORD PTR [ebp+0x27036a03]
  40bead:	loopne 0x40beb6
  40beaf:	call   0x3fb020
  40beb4:	pop    es
  40beb5:	loopne 0x40beca
  40beb7:	push   0x1b
  40beb9:	(bad)  
  40beba:	jmp    FWORD PTR [ecx+0x18]
  40bebd:	jl     0x40bed5
  40bebf:	jmp    edi
  40bec1:	imul   esp,edi,0x1409b1
  40bec7:	xor    DWORD PTR [ebp+0x4],0x4
  40becb:	jne    0x40bf08
  40becd:	imul   esi,DWORD PTR [ebx+0x10],0xe807dfa7
  40bed4:	test   bh,ch
  40bed6:	(bad)  
  40bed7:	inc    DWORD PTR [ecx+0x4f]
  40beda:	cld    
  40bedb:	call   FWORD PTR ds:0x32006a0c
  40bee1:	sbb    al,0x8d
  40bee3:	inc    ebp
  40bee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee5:	inc    eax
  40bee6:	call   0xfdaa75da
  40beeb:	jmp    0x40d210
  40bef0:	or     esp,edi
  40bef2:	or     eax,DWORD PTR ds:0x9d0000
  40bef8:	push   DWORD PTR [ebp-0x78]
  40befb:	std    
  40befc:	add    eax,0xe81b5dff
  40bf01:	push   ebp
  40bf02:	xor    edi,edx
  40bf04:	mov    ebx,0x2bcb9fe
  40bf09:	add    BYTE PTR [ecx],dh
  40bf0b:	inc    esp
  40bf0c:	sub    DWORD PTR [ecx],eax
  40bf0e:	xor    DWORD PTR [ebp-0x48d28381],edi
  40bf14:	xor    eax,0x12605620
  40bf19:	push   0x39
  40bf1b:	out    dx,al
  40bf1c:	or     BYTE PTR ss:[ecx-0x4b],bl
  40bf20:	and    al,0xff
  40bf22:	ds (bad) 
  40bf24:	ss adc al,0xcb
  40bf27:	mov    ecx,0xbd9b0028
  40bf2c:	stos   BYTE PTR es:[edi],al
  40bf2d:	stos   DWORD PTR es:[edi],eax
  40bf2e:	daa    
  40bf2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf30:	mov    ebx,0x2bc74e8
  40bf35:	add    BYTE PTR [edx-0x7bf8f0c9],dh
  40bf3b:	sbb    eax,0x432174bd
  40bf40:	or     al,0xff
  40bf42:	test   BYTE PTR [ebp-0x2970ee56],dh
  40bf48:	mov    ebx,0x28c964fe
  40bf4d:	add    ebx,DWORD PTR [ebx-0x43]
  40bf50:	sub    BYTE PTR [eax],al
  40bf52:	leave  
  40bf53:	ss mov ebp,0x1bd3d6fe
  40bf59:	add    DWORD PTR [eax],eax
  40bf5b:	add    BYTE PTR [ecx],dh
  40bf5d:	mov    ebp,0xa5357c7f
  40bf62:	xor    eax,0xbff7f61c
  40bf67:	push   DWORD PTR [esi+0x24ff02bc]
  40bf6d:	leave  
  40bf6e:	sub    BYTE PTR [eax],al
  40bf70:	sbb    esi,DWORD PTR [ecx+0xc9d448d]
  40bf76:	lods   al,BYTE PTR ds:[esi]
  40bf77:	arpl   WORD PTR [edi-0x731743cb],dx
  40bf7d:	adc    ebp,ecx
  40bf7f:	add    esi,DWORD PTR [ecx]
  40bf81:	xchg   ebx,eax
  40bf82:	fisttp DWORD PTR [edi]
  40bf84:	sub    BYTE PTR [ecx],ah
  40bf86:	cmc    
  40bf87:	(bad)  
  40bf88:	in     eax,dx
  40bf89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf8a:	out    0x3,eax
  40bf8c:	xor    DWORD PTR [esi+eax*2],edx
  40bf8f:	ss cmp eax,0x3529e93a
  40bf95:	cdq    
  40bf96:	stos   DWORD PTR es:[edi],eax
  40bf97:	mov    edi,0xbdaabbe6
  40bf9c:	dec    edi
  40bf9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf9e:	psubusb mm0,QWORD PTR [esi-0x5a]
  40bfa2:	call   0xe3587d27
  40bfa7:	sub    ebp,DWORD PTR ss:[eax+ebp*8+0x3]
  40bfac:	xor    DWORD PTR [eax+edx*1],edx
  40bfaf:	enter  0xa626,0xe8
  40bfb3:	sbb    BYTE PTR [ebp+0x2b36e218],0x6c
  40bfba:	call   0xd054f0c2
  40bfbf:	jg     0x40bfc1
  40bfc1:	add    BYTE PTR [esi],al
  40bfc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc4:	call   0xe5593d4f
  40bfc9:	xor    eax,0x30bb195c
  40bfce:	adc    BYTE PTR [ebx+0x14310843],0x29
  40bfd5:	add    ah,BYTE PTR [edx+0x5c]
  40bfd8:	mov    dh,0x31
  40bfda:	and    eax,0xb3b02395
  40bfdf:	aaa    
  40bfe0:	popf   
  40bfe1:	or     al,ah
  40bfe3:	aaa    
  40bfe4:	xchg   ebp,eax
  40bfe5:	mov    ebx,0x8680a045
  40bfea:	dec    eax
  40bfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfec:	lea    ecx,[ebp+0x3185abf5]
  40bff2:	inc    ecx
  40bff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff4:	repz scas eax,DWORD PTR es:[edi]
  40bff6:	lahf   
  40bff7:	pop    ds
  40bff8:	add    BYTE PTR [ecx-0x26],dh
  40bffb:	and    BYTE PTR [eax],cl
  40bffd:	add    DWORD PTR [eax],0xca66ff31
  40c003:	and    BYTE PTR [ebx+edx*8],dl
  40c006:	xor    al,0xa5
  40c008:	je     0x40c067
  40c00a:	mov    edx,0x8441f820
  40c00f:	test   al,0xfe
  40c011:	inc    esi
  40c012:	stos   BYTE PTR es:[edi],al
  40c013:	and    al,bh
  40c015:	push   ecx
  40c016:	pop    edx
  40c017:	cmp    edi,edi
  40c019:	ss aad 0x13
  40c01c:	add    cl,ch
  40c01e:	xor    bh,BYTE PTR [ecx+0x18086a5f]
  40c024:	or     eax,0xe100009b
  40c029:	sbb    dl,dl
  40c02b:	pushf  
  40c02c:	fst    QWORD PTR [edx+0x1432dd7c]
  40c032:	inc    eax
  40c033:	out    dx,eax
  40c034:	pop    edi
  40c035:	pop    esp
  40c036:	push   DWORD PTR [esi+esi*1-0x6b]
  40c03a:	inc    esp
  40c03b:	std    
  40c03c:	scas   eax,DWORD PTR es:[edi]
  40c03d:	aaa    
  40c03e:	hlt    
  40c03f:	fsubr  st(5),st
  40c041:	aaa    
  40c042:	hlt    
  40c043:	out    0x41,al
  40c045:	mov    al,ds:0xa54f06e7
  40c04a:	(bad)  
  40c04b:	pusha  
  40c04c:	jno    0x40bffa
  40c04e:	(bad)  
  40c04f:	push   esp
  40c050:	inc    ebp
  40c051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c052:	je     0x40c011
  40c054:	stos   DWORD PTR es:[edi],eax
  40c055:	pop    ds
  40c056:	clc    
  40c057:	mov    esi,0x13e81c21
  40c05c:	adc    DWORD PTR [ebp+0x1aefe],esp
  40c062:	push   0xffffffe8
  40c064:	mov    ebx,DWORD PTR [edi]
  40c066:	hlt    
  40c067:	sahf   
  40c068:	add    DWORD PTR [edi+eiz*8-0x15a87e1],ebp
  40c06f:	mov    fs,WORD PTR [ecx-0x54]
  40c072:	out    0x0,eax
  40c074:	mov    ah,0xf7
  40c076:	(bad)  
  40c077:	push   eax
  40c079:	sldt   WORD PTR [eax]
  40c07c:	mov    BYTE PTR [ebp+0x3],dh
  40c07f:	mov    eax,0x1098
  40c084:	inc    ecx
  40c085:	iret   
  40c086:	push   cs
  40c087:	add    ch,al
  40c089:	xchg   ebp,eax
  40c08a:	jmp    0x7ec:0xb000056
  40c091:	add    BYTE PTR [ebp+0x1ac95e13],al
  40c097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c098:	dec    BYTE PTR [edx+0xaeb18a5]
  40c09e:	pop    ds
  40c09f:	mov    ds:0x6971b9e6,eax
  40c0a4:	std    
  40c0a5:	adc    DWORD PTR [esi],0xffffffa5
  40c0a8:	cmp    DWORD PTR [esi],0xfff0e348
  40c0ae:	xchg   ebp,eax
  40c0af:	sbb    al,ch
  40c0b1:	test   eax,0x5efd5eb1
  40c0b6:	popa   
  40c0b7:	fld    DWORD PTR [edx]
  40c0b9:	add    ch,al
  40c0bb:	xchg   edx,eax
  40c0bc:	jmp    0xec55:0x8b0fc58b
  40c0c3:	xchg   edx,eax
  40c0c4:	add    dl,BYTE PTR [eax+0xfeb9b]
  40c0ca:	fs adc eax,0x5cf8558b
  40c0d0:	cs (bad) 
  40c0d2:	ficomp DWORD PTR [eax-0xc27eb85]
  40c0d8:	pop    es
  40c0d9:	mov    eax,DWORD PTR [ebp+0x4]
  40c0dc:	push   DWORD PTR [eax-0x3c]
  40c0df:	mov    WORD PTR [eax],es
  40c0e1:	sbb    DWORD PTR ds:0xc1740000,0xffffff90
  40c0e8:	push   ebx
  40c0e9:	sbb    al,bh
  40c0eb:	mov    WORD PTR [eax],es
  40c0ed:	xor    DWORD PTR [ecx],0xffffffaf
  40c0f0:	or     cl,cl
  40c0f2:	add    BYTE PTR [eax],al
  40c0f4:	jae    0x40c09f
  40c0f6:	add    dl,BYTE PTR [ebp-0x46]
  40c0f9:	mov    DWORD PTR [ebx+eax*8-0x74adf583],eax
  40c100:	in     al,dx
  40c101:	mov    esp,0xad8effbf
  40c106:	add    al,BYTE PTR [eax]
  40c108:	mov    edx,0x31c70670
  40c10d:	lods   eax,DWORD PTR ds:[esi]
  40c10e:	add    al,BYTE PTR [eax]
  40c110:	xor    DWORD PTR [esi],ebp
  40c112:	aaa    
  40c113:	or     BYTE PTR [ecx],dh
  40c115:	enter  0x2b0a,0x71
  40c119:	jnp    0x40c172
  40c11b:	leave  
  40c11c:	jae    0x40c0cf
  40c11e:	add    bh,bh
  40c120:	fdiv   QWORD PTR [edx+ebp*4-0x470e2e01]
  40c127:	or     dh,BYTE PTR [ecx-0x80]
  40c12a:	or     ch,BYTE PTR [ebx]
  40c12c:	jno    0x40c191
  40c12e:	push   edi
  40c12f:	leave  
  40c130:	jae    0x40c0eb
  40c132:	add    cl,BYTE PTR [ecx+0x74b90574]
  40c138:	cmp    DWORD PTR ds:0xa21e630e,eax
  40c13e:	mov    edi,0x2ac1d44
  40c143:	add    BYTE PTR [ecx],dh
  40c145:	inc    eax
  40c146:	aas    
  40c147:	in     al,dx
  40c148:	popa   
  40c149:	sub    BYTE PTR [esi],bh
  40c14b:	hlt    
  40c14c:	popa   
  40c14d:	ret    0x82d
  40c150:	or     DWORD PTR [edx-0x44],esp
  40c153:	(bad)  
  40c154:	out    dx,al
  40c155:	add    edi,DWORD PTR [edi]
  40c157:	in     al,dx
  40c158:	add    BYTE PTR [eax],al
  40c15a:	pop    esi
  40c15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c15c:	cmp    DWORD PTR [ebp+eiz*8-0x54],0x2e
  40c161:	add    al,0x2a
  40c163:	jg     0x40c193
  40c165:	or     BYTE PTR [edx],bl
  40c167:	ins    DWORD PTR es:[edi],dx
  40c168:	pop    eax
  40c169:	pop    edi
  40c16a:	clc    
  40c16b:	adc    ebp,DWORD PTR [ebx+0x23ef3107]
  40c171:	test   al,0xa9
  40c173:	pop    eax
  40c174:	add    DWORD PTR [edx+0x3e8ac2d],0xbff13d1
  40c17e:	dec    edx
  40c17f:	aam    0x1e
  40c181:	pop    ecx
  40c182:	push   0xba03e4d5
  40c187:	pop    eax
  40c188:	add    edx,0xabb91566
  40c18e:	mov    DWORD PTR [ebx],ebp
  40c190:	pop    esi
  40c191:	mov    eax,0x8c5558a9
  40c196:	data16 fisub DWORD PTR [ebx-0x175d9961]
  40c19d:	add    ecx,DWORD PTR [edx-0x1a]
  40c1a0:	imul   edi,DWORD PTR [esi],0x61
  40c1a3:	inc    ebx
  40c1a4:	fs ds inc ebp
  40c1a7:	inc    ebx
  40c1a8:	cs cmp DWORD PTR cs:[ebp+eiz*4+0x71a23fbd],ebp
  40c1b1:	inc    esi
  40c1b2:	inc    ecx
  40c1b3:	fisub  WORD PTR [ebx-0x1de75855]
  40c1b9:	aad    0xa2
  40c1bb:	add    al,0x6
  40c1bd:	add    BYTE PTR cs:[eax],al
  40c1c0:	sbb    eax,0x162b48ad
  40c1c5:	mov    ds:0x416cc3c1,al
  40c1ca:	and    ch,al
  40c1cc:	cmp    dl,BYTE PTR [eax+edx*1]
  40c1cf:	dec    ecx
  40c1d0:	or     DWORD PTR [edx-0x6a345fdd],esp
  40c1d6:	push   ebx
  40c1d7:	lods   al,BYTE PTR ds:[esi]
  40c1d8:	out    dx,al
  40c1d9:	daa    
  40c1da:	out    0x82,eax
  40c1dc:	gs test al,0xe8
  40c1df:	xor    al,dh
  40c1e1:	xchg   ebp,eax
  40c1e2:	cmp    ebp,DWORD PTR [esi+edx*8-0x4c10ffd8]
  40c1e9:	and    ah,dh
  40c1eb:	jmp    0x1d3fc5f1
  40c1f0:	jns    0x40c1ab
  40c1f2:	jo     0x40c205
  40c1f4:	jle    0x40c198
  40c1f6:	sub    ch,BYTE PTR [ecx-0x5436bef9]
  40c1fc:	cmp    DWORD PTR [ebx+eax*4],edx
  40c1ff:	add    al,0xd1
  40c201:	mov    eax,ds:0x8ec5e473
  40c206:	(bad)  
  40c207:	call   0xd9854f3e
  40c20c:	mov    edi,0x3576e428
  40c211:	lea    eax,[ebp+eax*2+0x6c]
  40c215:	rol    DWORD PTR [ecx],0xb9
  40c218:	call   0x448c:0x9e4e6834
  40c21f:	and    eax,0x72dc20aa
  40c224:	add    BYTE PTR [eax],al
  40c226:	and    BYTE PTR [eax-0x72266e16],ah
  40c22c:	iret   
  40c22d:	es lock mov bl,0xff
  40c231:	call   0xa4cdd668
  40c236:	xchg   edx,eax
  40c237:	push   ecx
  40c238:	lea    ebp,[esi+ebx*8+0x600e5250]
  40c23f:	or     al,0xe8
  40c241:	push   ss
  40c242:	fisub  DWORD PTR [ecx+0x24f2f2fe]
  40c248:	or     al,0x6a
  40c24a:	dec    eax
  40c24b:	test   al,0xff
  40c24d:	je     0x40c253
  40c24f:	xchg   esi,eax
  40c250:	jl     0x40c21b
  40c252:	xor    ah,BYTE PTR [edi]
  40c254:	es push 0x39
  40c257:	mov    ah,0xff
  40c259:	pop    esp
  40c25a:	cmp    eax,0x9ac974a1
  40c25f:	push   ss
  40c260:	push   0xfd69f700
  40c265:	jne    0x40c21b
  40c267:	ins    BYTE PTR es:[edi],dx
  40c268:	sub    dh,bh
  40c26a:	xchg   DWORD PTR [ecx-0x3],ebp
  40c26d:	jne    0x40c203
  40c26f:	ins    BYTE PTR es:[edi],dx
  40c270:	hlt    
  40c271:	addr16 xchg edi,eax
  40c273:	imul   ebp,DWORD PTR [ecx],0xc948f6c0
  40c279:	ret    0x1494
  40c27c:	mov    eax,DWORD PTR [ebp-0x48]
  40c27f:	sub    eax,0x95ac4dfe
  40c284:	jnp    0x40c26a
  40c286:	mov    al,dh
  40c288:	add    eax,0x85000083
  40c28d:	jo     0x40c28d
  40c28f:	je     0x40c285
  40c291:	lea    eax,[ebx+0xc]
  40c294:	pop    ss
  40c295:	in     al,0xdb
  40c297:	(bad)
  40c29b:	cld    
  40c29c:	lock int 0x65
  40c29f:	push   edi
  40c2a1:	sbb    al,0x0
  40c2a3:	add    BYTE PTR [eax+0x14],cl
  40c2a6:	pop    esi
  40c2a7:	pop    edi
  40c2a8:	and    ebx,edx
  40c2aa:	or     al,BYTE PTR [eax]
  40c2ac:	lods   eax,DWORD PTR ds:[esi]
  40c2ad:	(bad)  
  40c2ae:	jmp    0x9583:0x55cd0c83
  40c2b5:	add    al,0x0
  40c2b7:	jne    0x40c2fb
  40c2b9:	sbb    al,0x0
  40c2bb:	add    BYTE PTR [eax],bl
  40c2bd:	adc    al,0x5f
  40c2bf:	leave  
  40c2c0:	pop    edx
  40c2c1:	(bad)  
  40c2c3:	jmp    ebp
  40c2c5:	add    ebp,DWORD PTR [ebx]
  40c2c7:	shl    BYTE PTR [ebx-0x208efac],cl
  40c2cd:	das    
  40c2ce:	gs inc ecx
  40c2d0:	sbb    BYTE PTR [ecx+0x1862f043],dl
  40c2d6:	push   DWORD PTR [ebp-0x28]
  40c2d9:	imul   esi,DWORD PTR [ebx+0x8],0x5f19d531
  40c2e0:	out    0xce,al
  40c2e2:	cmp    BYTE PTR [ecx+eax*2-0x53],0x2d
  40c2e7:	or     al,0x4b
  40c2e9:	lods   al,BYTE PTR ds:[esi]
  40c2ea:	sub    BYTE PTR [esi+ecx*8-0x20],ah
  40c2ee:	or     ebp,eax
  40c2f0:	add    BYTE PTR [eax],al
  40c2f2:	cmp    DWORD PTR [esi],ecx
  40c2f4:	mov    ch,0xfe
  40c2f6:	mov    esi,0x3cff1000
  40c2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fc:	stos   BYTE PTR es:[edi],al
  40c2fd:	dec    edx
  40c2fe:	adc    eax,DWORD PTR [esi-0x6f13774c]
  40c304:	mov    ah,0x74
  40c306:	inc    ebp
  40c307:	xchg   esi,eax
  40c308:	or     BYTE PTR cs:[ecx-0x7100df43],cl
  40c30f:	es das 
  40c311:	adc    al,0x86
  40c313:	test   al,0xa
  40c315:	call   0xfef48e4e
  40c31a:	test   al,0x78
  40c31c:	mov    edx,0xb3a0e4fe
  40c321:	je     0x40c35c
  40c323:	push   ebp
  40c324:	lods   eax,DWORD PTR ds:[esi]
  40c325:	pusha  
  40c326:	pop    esi
  40c327:	push   esi
  40c328:	mov    ch,0x74
  40c32a:	cmp    eax,0x59082ede
  40c32f:	les    esp,FWORD PTR [eax]
  40c331:	inc    DWORD PTR [esi+0x32]
  40c334:	aas    
  40c335:	adc    al,0xb2
  40c337:	mov    ch,0x2
  40c339:	je     0x40c360
  40c33b:	sub    dh,BYTE PTR [edi]
  40c33d:	cld    
  40c33e:	cmp    al,0x81
  40c340:	add    eax,0xff11a483
  40c345:	jae    0x40c37d
  40c347:	ret    0x5ec2
  40c34a:	call   0xd040d339
  40c34f:	loopne 0x40c36e
  40c351:	inc    ecx
  40c352:	xor    esp,edi
  40c354:	stos   DWORD PTR es:[edi],eax
  40c355:	cmp    BYTE PTR [eax],al
  40c357:	add    BYTE PTR [esp+edx*1-0x1f],dh
  40c35b:	sub    eax,0x54a8eb2e
  40c360:	clc    
  40c361:	sar    esp,1
  40c363:	add    esi,DWORD PTR [edx+0x65fecd20]
  40c369:	push   cs
  40c36a:	(bad)  
  40c36b:	cs cmp eax,0xd90c339f
  40c371:	xchg   esp,eax
  40c372:	inc    edi
  40c373:	mov    ch,0xc7
  40c375:	mov    WORD PTR [ebx],fs
  40c377:	int3   
  40c378:	push   esi
  40c379:	adc    al,0xe9
  40c37b:	add    dh,BYTE PTR [ecx]
  40c37d:	lods   al,BYTE PTR ds:[esi]
  40c37e:	in     eax,0x1c
  40c380:	scas   al,BYTE PTR es:[edi]
  40c381:	sahf   
  40c382:	pop    edi
  40c383:	ds popf 
  40c385:	jmp    0xffb:0x9f40a88d
  40c38c:	xchg   esi,eax
  40c38d:	sub    cl,dh
  40c38f:	stos   DWORD PTR es:[edi],eax
  40c390:	mov    esp,0xbbb47634
  40c395:	dec    eax
  40c396:	jne    0x40c322
  40c398:	xor    bl,BYTE PTR [edx-0x53]
  40c39b:	clc    
  40c39c:	cmc    
  40c39d:	fisubr DWORD PTR [edx-0x7f02a745]
  40c3a4:	push   ds
  40c3a5:	adc    al,0xd4
  40c3a7:	add    al,0x5e
  40c3a9:	sub    BYTE PTR ds:0x3e3570ab,bh
  40c3af:	mov    ah,0x1b
  40c3b1:	aam    0x95
  40c3b3:	retf   0x770
  40c3b6:	jmp    0xebe0813b
  40c3bb:	add    al,0x0
  40c3bd:	add    BYTE PTR [esi+esi*2-0x16cefc18],ch
  40c3c4:	adc    eax,0xb38994a8
  40c3c9:	scas   eax,DWORD PTR es:[edi]
  40c3ca:	stos   DWORD PTR es:[edi],eax
  40c3cb:	sbb    BYTE PTR [ebx+0x0],al
  40c3ce:	ins    BYTE PTR es:[edi],dx
  40c3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d0:	xchg   edx,eax
  40c3d1:	add    esp,DWORD PTR [ecx-0x63]
  40c3d4:	(bad)  
  40c3d5:	jnp    0x40c411
  40c3d7:	lods   al,BYTE PTR ds:[esi]
  40c3d8:	daa    
  40c3d9:	pop    ebp
  40c3db:	sahf   
  40c3dc:	(bad)  
  40c3dd:	pop    esp
  40c3de:	sbb    DWORD PTR [ebp+0x3caf174],ebx
  40c3e4:	popa   
  40c3e5:	(bad)  
  40c3e6:	mov    ds:0x3f9d448c,al
  40c3eb:	adc    al,0xff
  40c3ed:	cmp    al,0x39
  40c3ef:	popf   
  40c3f0:	je     0x40c3e3
  40c3f2:	stos   BYTE PTR es:[edi],al
  40c3f3:	dec    esp
  40c3f4:	clc    
  40c3f5:	mov    dh,0x82
  40c3f7:	mov    cl,BYTE PTR [ebp+edx*8-0x49]
  40c3fb:	fdiv   st(7),st
  40c3fd:	sbb    esi,DWORD PTR [edx]
  40c3ff:	popf   
  40c400:	je     0x40c397
  40c402:	int    0x2f
  40c404:	xchg   si,ax
  40c406:	loop   0x40c3f2
  40c408:	mov    edi,0x13d3dc2e
  40c40d:	jmp    0x7e58ecf5
  40c412:	dec    eax
  40c413:	or     bh,bh
  40c415:	cld    
  40c416:	(bad)  
  40c417:	sahf   
  40c418:	je     0x40c3f7
  40c41a:	ret    
  40c41b:	sub    BYTE PTR [eax],cl
  40c41d:	push   ecx
  40c41e:	sahf   
  40c41f:	lahf   
  40c420:	(bad)  
  40c421:	pop    esi
  40c422:	add    BYTE PTR [eax],al
  40c424:	outs   dx,BYTE PTR ds:[esi]
  40c425:	pop    ebp
  40c426:	je     0x40c40e
  40c428:	mov    ds:0xea41f428,eax
  40c42d:	xor    eax,0x5d7646ff
  40c432:	pop    esi
  40c433:	xor    BYTE PTR [edi+0x1],dh
  40c436:	add    BYTE PTR [esi-0x4407dfa9],ch
  40c43c:	mov    cl,0x9e
  40c43e:	je     0x40c441
  40c440:	sub    BYTE PTR [eax],0x14
  40c443:	push   ds
  40c444:	push   0x269cfecc
  40c449:	sahf   
  40c44a:	je     0x40c42d
  40c44c:	mov    edx,0x2f00fe36
  40c451:	popa   
  40c452:	or     eax,eax
  40c454:	pop    ds
  40c455:	mov    WORD PTR [eax+0x1],ss
  40c458:	sbb    BYTE PTR [ecx],dl
  40c45a:	push   DWORD PTR [ebp+0x4]
  40c45d:	jns    0x40c473
  40c45f:	punpckldq xmm5,XMMWORD PTR [ecx]
  40c463:	shr    BYTE PTR [edi],0x5f
  40c466:	rcl    BYTE PTR [eax+ebx*8],0x7f
  40c46a:	cmp    al,0x1
  40c46c:	enter  0x8310,0x7d
  40c470:	in     al,dx
  40c471:	adc    ecx,DWORD PTR [edi]
  40c473:	test   esp,eax
  40c475:	pop    ss
  40c476:	add    BYTE PTR [eax],al
  40c478:	xor    esp,DWORD PTR [ecx-0x19]
  40c47b:	and    al,0xc9
  40c47d:	adc    BYTE PTR [eax],al
  40c47f:	mov    esi,ebp
  40c481:	pop    ebx
  40c482:	mov    DWORD PTR [edx+edx*1],eax
  40c485:	push   ss
  40c486:	inc    ebp
  40c487:	lock add BYTE PTR [eax],al
  40c48a:	xor    bl,BYTE PTR [eax]
  40c48c:	push   eax
  40c48d:	inc    DWORD PTR [ebp-0x60]
  40c490:	out    0x74,al
  40c492:	dec    ebp
  40c493:	popa   
  40c494:	std    
  40c495:	push   0xffffff98
  40c497:	popa   
  40c498:	jae    0x40c4ae
  40c49a:	(bad)  
  40c49b:	fild   DWORD PTR [edi]
  40c49d:	call   0x3e1e8d
  40c4a2:	add    edx,DWORD PTR [esp+edx*1-0x7d]
  40c4a6:	adc    DWORD PTR [eax],ebx
  40c4a8:	jne    0x40c4b9
  40c4aa:	(bad)  
  40c4ab:	fcomi  st,st(3)
  40c4ad:	call   0x3fb0c2
  40c4b2:	inc    ebx
  40c4b3:	fcomp  DWORD PTR [ebp-0x37]
  40c4b6:	sbb    al,BYTE PTR ds:0xe52a0b00
  40c4bc:	add    al,0xe9
  40c4be:	cld    
  40c4bf:	adc    BYTE PTR [eax],al
  40c4c1:	add    cl,al
  40c4c3:	dec    ebx
  40c4c4:	in     al,dx
  40c4c5:	push   0x18
  40c4c7:	addr16 jae 0x40c4de
  40c4ca:	xor    DWORD PTR [edx],eax
  40c4cc:	cmp    BYTE PTR [eax],cl
  40c4ce:	or     DWORD PTR [edi-0x47],edi
  40c4d1:	(bad)  
  40c4d2:	push   ss
  40c4d3:	daa    
  40c4d4:	inc    eax
  40c4d5:	adc    al,0xb2
  40c4d7:	aam    0x2
  40c4d9:	jne    0x40c511
  40c4db:	mov    ds:0x4609f436,al
  40c4e0:	sub    bh,bh
  40c4e2:	test   BYTE PTR [esi],0xc4
  40c4e5:	pop    esi
  40c4e6:	clc    
  40c4e7:	outs   dx,DWORD PTR ds:[esi]
  40c4e8:	pop    ss
  40c4e9:	add    dh,ah
  40c4eb:	clc    
  40c4ec:	ja     0x40c553
  40c4ee:	add    BYTE PTR [eax],al
  40c4f0:	jo     0x40c49f
  40c4f2:	jg     0x40c538
  40c4f4:	leave  
  40c4f5:	es inc edi
  40c4f7:	call   0xc1408aae
  40c4fc:	shr    DWORD PTR [eax+0x6a78d1db],1
  40c502:	add    eax,DWORD PTR [eax]
  40c504:	xor    DWORD PTR [edx-0x4e],edi
  40c507:	sbb    BYTE PTR [ecx-0x6ebb865e],0x2e
  40c50e:	pop    ds
  40c50f:	call   0xec87fb66
  40c514:	pop    edx
  40c515:	call   0x86743bb5
  40c51a:	fisubr DWORD PTR [edx]
  40c51c:	arpl   WORD PTR [esi],si
  40c51e:	inc    edi
  40c51f:	in     al,dx
  40c520:	dec    edx
  40c521:	lock mov ds:0x8544e48a,eax
  40c527:	rcl    BYTE PTR [edx],0x2e
  40c52a:	fwait
  40c52b:	add    ebx,DWORD PTR [esi+0x3c]
  40c52e:	add    eax,0x57345155
  40c533:	in     al,0xaa
  40c535:	push   0x50f43a9a
  40c53a:	xor    eax,0xa268ba05
  40c53f:	jmp    0x1436:0xe4473632
  40c546:	pushf  
  40c547:	pop    ss
  40c548:	and    DWORD PTR cs:0xe1212654,ecx
  40c54f:	fwait
  40c550:	shl    DWORD PTR [edx+0xb10d],1
  40c556:	sub    edx,esp
  40c558:	jnp    0x40c55a
  40c55a:	push   cs
  40c55b:	and    ebp,esi
  40c55d:	fwait
  40c55e:	and    al,0x31
  40c560:	div    BYTE PTR [eax-0x45722bb5]
  40c566:	lock (bad) 
  40c568:	call   0x71f93ae7
  40c56d:	shl    DWORD PTR [ebp-0x53ac42b0],cl
  40c573:	push   eax
  40c574:	mov    cl,0x53
  40c576:	sub    DWORD PTR [edx+eiz*2+0x6f9acfac],0x46
  40c57e:	loope  0x40c51a
  40c580:	cmp    edx,eax
  40c582:	(bad)  
  40c583:	xor    DWORD PTR ds:0x2396b7b1,ecx
  40c589:	aam    0xae
  40c58b:	es cld 
  40c58d:	test   BYTE PTR ds:0x4637e8bc,ah
  40c593:	fwait
  40c594:	adc    ebx,eax
  40c596:	xchg   edi,eax
  40c597:	and    BYTE PTR [ecx+0x7e0805b0],ah
  40c59d:	cmp    DWORD PTR ss:[ebx+0x207e0c1b],ebx
  40c5a4:	xchg   ecx,eax
  40c5a5:	fwait
  40c5a6:	xor    BYTE PTR [edi-0x21084f9b],bl
  40c5ac:	fld    TBYTE PTR [ebx-0x4ec669c9]
  40c5b2:	pop    edi
  40c5b3:	call   0x272c:0xab5d364d
  40c5ba:	add    BYTE PTR [eax],al
  40c5bc:	dec    esi
  40c5bd:	call   0xe900:0x14310280
  40c5c4:	loope  0x40c592
  40c5c6:	rcl    ebp,0x32
  40c5c9:	inc    ecx
  40c5ca:	mov    edx,DWORD PTR ds:0xf1749989
  40c5d0:	retf   0x71a5
  40c5d3:	push   ss
  40c5d4:	loope  0x40c607
  40c5d6:	in     eax,dx
  40c5d7:	stos   BYTE PTR es:[edi],al
  40c5d8:	jae    0x40c5ee
  40c5da:	(bad)  
  40c5db:	jl     0x40c5e7
  40c5dd:	mov    dl,0x3c
  40c5df:	mov    dh,0x32
  40c5e1:	adc    al,0xb
  40c5e3:	sub    DWORD PTR [edi+0xf],eax
  40c5e6:	pop    edi
  40c5e7:	and    ah,ch
  40c5e9:	adc    DWORD PTR [eax],eax
  40c5eb:	scas   eax,DWORD PTR es:[edi]
  40c5ec:	xor    eax,0xe554ff14
  40c5f1:	mov    cl,0xd2
  40c5f3:	pop    ebx
  40c5f4:	mov    ds,WORD PTR [edx+0x5372bebe]
  40c5fa:	add    dh,al
  40c5fc:	or     BYTE PTR [edi+edx*2],cl
  40c5ff:	shr    DWORD PTR [edx+eiz*8],1
  40c602:	(bad)  
  40c603:	call   0xe4b51fc3
  40c608:	addr16 retf 
  40c60a:	shl    ecx,0x32
  40c60d:	cwde   
  40c60e:	xor    ch,BYTE PTR [ecx-0x690165ec]
  40c614:	into   
  40c615:	mov    ds:0x1f2fd1ad,eax
  40c61a:	loopne 0x40c5a2
  40c61c:	dec    eax
  40c61d:	or     al,0xe8
  40c61f:	add    eax,0x99880000
  40c624:	(bad)  
  40c625:	loop   0x40c699
  40c627:	and    BYTE PTR ds:0x7d3b40e,al
  40c62d:	jmp    0xa884bf7c
  40c632:	xor    bl,BYTE PTR [ecx-0x32451e8c]
  40c638:	xor    al,0xe9
  40c63a:	xor    cl,BYTE PTR ds:0x988d00c0
  40c640:	std    
  40c641:	jne    0x40c697
  40c643:	sbb    al,BYTE PTR [esp+edi*4]
  40c646:	outs   dx,BYTE PTR ds:[esi]
  40c647:	push   eax
  40c648:	add    BYTE PTR [eax+0x32],ch
  40c64b:	dec    esp
  40c64c:	inc    ecx
  40c64d:	add    BYTE PTR [edi-0x25],dl
  40c650:	pop    es
  40c651:	call   0x3f61e0
  40c656:	adc    edx,ebp
  40c658:	jae    0x40c663
  40c65a:	daa    
  40c65b:	fisttp DWORD PTR [ebx]
  40c65d:	(bad)  
  40c65e:	sbb    eax,0x184164d5
  40c663:	std    
  40c664:	cmp    BYTE PTR [ecx+ecx*8+0x14],al
  40c668:	push   DWORD PTR [ebp+0x10]
  40c66b:	jge    0x40c603
  40c66d:	xor    eax,0xc00b14d8
  40c672:	jge    0x40c60b
  40c674:	std    
  40c675:	jne    0x40c64b
  40c677:	sbb    DWORD PTR [esp+eax*8],eax
  40c67a:	outs   dx,BYTE PTR ds:[esi]
  40c67b:	dec    edi
  40c67c:	add    BYTE PTR [eax+0x14d9],bh
  40c682:	daa    
  40c683:	push   edi
  40c684:	ror    BYTE PTR [eax],0x0
  40c687:	add    al,cl
  40c689:	cmp    ecx,DWORD PTR [ebx-0xd2eb414]
  40c68f:	push   esi
  40c690:	outs   dx,DWORD PTR ds:[esi]
  40c691:	clc    
  40c692:	call   0xff511fda
  40c697:	jne    0x40c629
  40c699:	jl     0x40c61f
  40c69b:	mov    BYTE PTR ss:[ebx+ecx*1],dl
  40c69f:	ror    BYTE PTR [ebp-0x3ea1a0f2],0xd2
  40c6a6:	add    al,BYTE PTR [eax]
  40c6a8:	dec    eax
  40c6a9:	sbb    eax,0x9c858bef
  40c6ae:	jmp    0x3cd582b4
  40c6b3:	add    BYTE PTR [ebp+0x6a],bh
  40c6b6:	mov    ds:0x42563168,al
  40c6bb:	inc    ecx
  40c6bc:	xor    DWORD PTR [edx+0x38],ecx
  40c6bf:	or     BYTE PTR [ecx-0x36],bl
  40c6c2:	hlt    
  40c6c3:	inc    DWORD PTR [esi-0x5b]
  40c6c6:	ret    0x3774
  40c6c9:	or     BYTE PTR [ecx+ecx*8+0x73],0xae
  40c6ce:	add    cl,BYTE PTR [ebx+0x2199a5ac]
  40c6d4:	mov    cl,0xb6
  40c6d6:	sti    
  40c6d7:	jae    0x40c711
  40c6d9:	sub    eax,0xa19d0cee
  40c6de:	cmp    BYTE PTR [esi],0x3b
  40c6e1:	sbb    esi,edi
  40c6e3:	jg     0x40c72b
  40c6e5:	jb     0x40c71d
  40c6e7:	or     dh,BYTE PTR [ecx+0x744f5e]
  40c6ed:	add    BYTE PTR [ebp*1-0x559ba012],ch
  40c6f4:	les    eax,FWORD PTR [esi]
  40c6f6:	adc    esi,ebp
  40c6f8:	cmp    DWORD PTR [esi],0x31
  40c6fb:	cmp    bl,cl
  40c6fd:	(bad)  
  40c6fe:	ins    BYTE PTR es:[edi],dx
  40c6ff:	leave  
  40c700:	add    eax,DWORD PTR [eax]
  40c702:	xor    DWORD PTR [ebp-0x5236bb3d],ebp
  40c708:	add    al,BYTE PTR [eax]
  40c70a:	xor    DWORD PTR [edx],esi
  40c70c:	das    
  40c70d:	or     dl,cl
  40c70f:	repnz cmp DWORD PTR [esi],0x56
  40c713:	clc    
  40c714:	fadd   DWORD PTR [edx+0x75037924]
  40c71a:	inc    ebx
  40c71b:	jbe    0x40c763
  40c71d:	clc    
  40c71e:	xor    BYTE PTR [ebp-0x4efbfffe],ch
  40c724:	ret    
  40c725:	inc    esp
  40c726:	test   DWORD PTR [edx+eax*1+0x10923100],ebp
  40c72d:	imul   esp
  40c72f:	and    al,0x3
  40c731:	add    BYTE PTR [ecx],dh
  40c733:	adc    al,0xe9
  40c735:	ss cmp ecx,esi
  40c738:	in     eax,0xe3
  40c73a:	ja     0x40c78d
  40c73c:	push   ebp
  40c73d:	add    al,0x31
  40c73f:	adc    al,0xe9
  40c741:	or     DWORD PTR [edi],0x38
  40c744:	mov    esp,0x41514606
  40c749:	cdq    
  40c74a:	aaa    
  40c74b:	iret   
  40c74c:	stos   DWORD PTR es:[edi],eax
  40c74d:	stos   DWORD PTR es:[edi],eax
  40c74e:	ss xchg edi,eax
  40c750:	call   0xb240c758
  40c755:	sbb    BYTE PTR ds:0x27139c03,ah
  40c75b:	add    eax,0xed694f51
  40c760:	push   ss
  40c761:	and    BYTE PTR [ecx+0x79],bl
  40c764:	lea    ecx,[edx+edx*1]
  40c767:	adc    BYTE PTR [ecx+0x2736c8d6],dh
  40c76d:	xchg   esp,eax
  40c76e:	jne    0x40c772
  40c770:	push   ecx
  40c771:	and    ecx,ebx
  40c773:	push   esp
  40c774:	fimul  DWORD PTR ds:0x8c304473
  40c77a:	in     eax,0x44
  40c77c:	mov    cl,0xd6
  40c77e:	call   0x1e77a3b9
  40c783:	inc    ebp
  40c784:	mov    cl,0xd6
  40c786:	call   0x240fadc1
  40c78b:	mov    eax,0x3e896be
  40c790:	stos   BYTE PTR es:[edi],al
  40c791:	and    cl,ah
  40c793:	js     0x40c7c2
  40c795:	or     al,0x92
  40c797:	loope  0x40c7bf
  40c799:	xlat   BYTE PTR ds:[ebx]
  40c79a:	int3   
  40c79b:	ss cmp eax,0x9603edce
  40c7a1:	and    BYTE PTR [ebp-0x791566ab],dl
  40c7a7:	lods   al,BYTE PTR ds:[esi]
  40c7a8:	xchg   DWORD PTR [edx],ecx
  40c7aa:	test   eax,0x373736
  40c7af:	pop    ss
  40c7b0:	mov    edx,0xe9e903d4
  40c7b5:	popf   
  40c7b6:	inc    ebp
  40c7b7:	data16 add BYTE PTR [eax],al
  40c7ba:	out    dx,eax
  40c7bb:	lahf   
  40c7bc:	inc    esi
  40c7bd:	imul   ecx,DWORD PTR [ebp-0x6a],0x1f853073
  40c7c4:	hlt    
  40c7c5:	mov    bh,0xaa
  40c7c7:	or     bh,dh
  40c7c9:	inc    esi
  40c7ca:	xchg   ebp,eax
  40c7cb:	xor    eax,0x1270305e
  40c7d0:	add    BYTE PTR [ecx+edi*4-0x15da7d56],bl
  40c7d7:	aas    
  40c7d8:	push   edi
  40c7d9:	push   0x57
  40c7db:	add    BYTE PTR [eax],al
  40c7dd:	xchg   ebp,eax
  40c7de:	sbb    edx,DWORD PTR [ebx+0x54fbd43c]
  40c7e4:	add    cl,ch
  40c7e6:	inc    edi
  40c7e7:	push   cs
  40c7e8:	pop    edi
  40c7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ea:	retf   
  40c7eb:	ror    DWORD PTR [edi],cl
  40c7ed:	jmp    0xb055186b
  40c7f2:	das    
  40c7f3:	pop    eax
  40c7f4:	gs test al,0x32
  40c7f7:	add    eax,0x142c8a83
  40c7fc:	add    BYTE PTR [eax],ah
  40c7fe:	xor    ah,dl
  40c800:	sub    BYTE PTR gs:0x34768305,ch
  40c807:	adc    al,0x0
  40c809:	add    BYTE PTR [eax],dh
  40c80b:	shl    BYTE PTR [ebp+0x28],1
  40c80e:	xor    eax,0x2c628305
  40c813:	adc    al,0x0
  40c815:	pop    esp
  40c816:	lock lahf 
  40c818:	dec    edi
  40c819:	je     0x40c80b
  40c81b:	fwait
  40c81c:	dec    edi
  40c81d:	ins    BYTE PTR es:[edi],dx
  40c81e:	add    BYTE PTR [eax],al
  40c820:	lock xchg edi,eax
  40c822:	dec    edi
  40c823:	xchg   esi,eax
  40c824:	mov    al,ds:0x35286559
  40c829:	xchg   ebp,eax
  40c82a:	je     0x40c82c
  40c82c:	push   0xfff8bc79
  40c831:	push   0x40b0458b
  40c836:	lea    eax,[ebp-0x14]
  40c839:	aas    
  40c83a:	lea    eax,[ebp+0x8]
  40c83d:	inc    eax
  40c83e:	push   DWORD PTR ds:0x40f214
  40c844:	jmp    edx
  40c846:	psubsb mm6,QWORD PTR [eax+ebp*2+0x52bdfffd]
  40c84e:	fcom   QWORD PTR [eax-0x33]
  40c851:	push   edx
  40c852:	loopne 0x40c8a4
  40c854:	int    0x52
  40c856:	in     al,0x50
  40c858:	pop    edi
  40c859:	mov    ds:0x10d966be,eax
  40c85e:	push   DWORD PTR [ebp+0x18]
  40c861:	jns    0x40c7eb
  40c863:	clc    
  40c864:	aas    
  40c865:	imul   edi,ebp,0x44193475
  40c86b:	aam    0x2f
  40c86d:	jecxz  0x40c84a
  40c86f:	(bad)  
  40c870:	aad    0xc8
  40c872:	lds    eax,FWORD PTR [ebp+0x18]
  40c875:	adc    BYTE PTR [eax],al
  40c877:	add    al,bl
  40c879:	sbb    eax,DWORD PTR [esp+ecx*8+0x28]
  40c87d:	test   BYTE PTR [eax],0x6a
  40c880:	enter  0xfff6,0x69
  40c884:	add    BYTE PTR [eax],al
  40c886:	enter  0xfff6,0x8c
  40c88a:	adc    eax,0xe5ff4ec4
  40c88f:	stos   DWORD PTR es:[edi],eax
  40c890:	daa    
  40c891:	inc    ecx
  40c892:	enter  0xbe95,0xf
  40c896:	inc    esp
  40c897:	xchg   edi,eax
  40c898:	(bad)  
  40c899:	call   FWORD PTR [eax-0x672f8473]
  40c89f:	cdq    
  40c8a0:	add    BYTE PTR [eax],0x89
  40c8a3:	adc    BYTE PTR [eax],al
  40c8a5:	mov    esi,DWORD PTR [ecx]
  40c8a7:	lock mov bh,0x3a
  40c8aa:	cld    
  40c8ab:	mov    ?,ecx
  40c8ad:	xchg   BYTE PTR [ebp-0x56],bh
  40c8b0:	add    al,BYTE PTR [eax]
  40c8b2:	jge    0x40c8d5
  40c8b4:	xor    al,dl
  40c8b6:	stos   BYTE PTR es:[edi],al
  40c8b7:	lahf   
  40c8b8:	(bad)  
  40c8b9:	mov    bh,ah
  40c8bb:	jbe    0x40c862
  40c8bd:	add    DWORD PTR [edx-0x7a],esp
  40c8c0:	test   eax,0x40256d74
  40c8c5:	in     al,0x56
  40c8c7:	mov    bh,0xd2
  40c8c9:	out    0x6e,eax
  40c8cb:	clc    
  40c8cc:	add    eax,DWORD PTR [eax]
  40c8ce:	mov    dl,0xcf
  40c8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d1:	jmp    FWORD PTR [edi]
  40c8d3:	das    
  40c8d4:	mov    ecx,0x85aa36ff
  40c8d9:	jl     0x40c8fc
  40c8db:	jle    0x40c8d6
  40c8dd:	sub    ebp,0x7d
  40c8e0:	add    al,BYTE PTR [eax]
  40c8e2:	mov    dl,0xb0
  40c8e4:	sahf   
  40c8e5:	jmp    DWORD PTR [edi]
  40c8e7:	add    DWORD PTR [ebp-0x1],ebp
  40c8ea:	add    BYTE PTR [eax],al
  40c8ec:	push   cs
  40c8ed:	jle    0x40c898
  40c8ef:	je     0x40c8f6
  40c8f1:	es ins DWORD PTR es:[edi],dx
  40c8f3:	pusha  
  40c8f4:	(bad)  
  40c8f5:	xchg   edx,eax
  40c8f6:	jp     0x40c93c
  40c8f8:	jmp    0xef3cf787
  40c8fd:	or     BYTE PTR [ebx-0x648ea302],bh
  40c903:	fist   WORD PTR [eax+0x72]
  40c906:	test   al,0x67
  40c908:	imul   eax,DWORD PTR [ecx+0x43],0xf5f1d900
  40c90f:	inc    esi
  40c911:	sub    eax,0x3c75481c
  40c916:	add    al,0xff
  40c918:	cmp    al,0xb5
  40c91a:	fwait
  40c91b:	sub    eax,0xb027d65
  40c920:	jno    0x40c936
  40c922:	sbb    eax,0x24e3090c
  40c927:	inc    ebx
  40c928:	xor    DWORD PTR [eax+ebx*1-0xa],edi
  40c92c:	mov    ss,WORD PTR [ebx-0x2809e3c8]
  40c932:	daa    
  40c933:	add    al,0x7e
  40c935:	or     DWORD PTR [ecx-0x16b7df64],esi
  40c93b:	add    edi,DWORD PTR [edx]
  40c93d:	push   esp
  40c93e:	hlt    
  40c93f:	or     ebx,ecx
  40c941:	jmp    0xf5b4:0x7c3142ac
  40c948:	push   esi
  40c949:	xchg   ebx,eax
  40c94a:	mov    eax,0xa7d7e61b
  40c94f:	add    eax,DWORD PTR [eax]
  40c951:	add    BYTE PTR [esi+0x9],al
  40c954:	xor    DWORD PTR [esp+eax*2+0x2a03e947],ebx
  40c95b:	push   esp
  40c95c:	mov    ebx,0xe914993e
  40c961:	cwde   
  40c962:	in     al,0x92
  40c964:	fwait
  40c965:	not    DWORD PTR [esi]
  40c967:	into   
  40c968:	mov    ebx,0xdb9317a8
  40c96d:	imul   edx,DWORD PTR [ebp+edx*8+0x207da8e8],0x11
  40c975:	pop    eax
  40c976:	pop    ebp
  40c977:	xchg   ebx,eax
  40c978:	std    
  40c979:	test   al,0x7d
  40c97b:	nop
  40c97c:	cmc    
  40c97d:	cs in  eax,0x92
  40c980:	jae    0x40c979
  40c982:	into   
  40c983:	addr16 inc ebx
  40c985:	test   eax,0xb45392df
  40c98a:	xlat   BYTE PTR ds:[ebx]
  40c98b:	or     cl,al
  40c98d:	test   al,0x45
  40c98f:	and    cl,al
  40c991:	shl    DWORD PTR [ebp-0x6d],0xc5
  40c995:	test   al,0x45
  40c997:	js     0x40c956
  40c999:	cs aad 0x92
  40c99c:	(bad)  
  40c99d:	cmp    ebp,DWORD PTR [ecx-0x27f34886]
  40c9a3:	xchg   ecx,eax
  40c9a4:	(bad)  
  40c9a5:	sbb    al,0xdd
  40c9a7:	jp     0x40c999
  40c9a9:	or     eax,ecx
  40c9ab:	xchg   ecx,eax
  40c9ac:	pop    esi
  40c9ad:	aaa    
  40c9ae:	retf   0xf54
  40c9b1:	jmp    0x6b2c68ad
  40c9b6:	add    BYTE PTR [eax],al
  40c9b8:	mov    esi,0x26fc827a
  40c9bd:	sbb    DWORD PTR [edi],ecx
  40c9bf:	ins    BYTE PTR es:[edi],dx
  40c9c0:	inc    ebp
  40c9c1:	adc    eax,0xd7dfe900
  40c9c6:	repz mov ecx,0xb9f7d7e7
  40c9cc:	(bad)  
  40c9ce:	sti    
  40c9cf:	mov    ecx,0xd4ff162c
  40c9d4:	and    bh,BYTE PTR [eax+eiz*1+0x3e]
  40c9d8:	mov    DWORD PTR [ecx+0x138abc82],edx
  40c9de:	(bad)  
  40c9e0:	in     eax,0x91
  40c9e2:	(bad)  
  40c9e3:	jmp    0x7734d2c1
  40c9e8:	pop    edi
  40c9e9:	test   BYTE PTR [edi+0x1],ah
  40c9ec:	jno    0x40c9c1
  40c9ee:	call   DWORD PTR ds:0xc3e7845f
  40c9f4:	cld    
  40c9f5:	xchg   ecx,eax
  40c9f6:	(bad)  
  40c9f7:	repnz repnz and al,BYTE PTR [ebp+0x143221]
  40c9ff:	fs das 
  40ca01:	mov    BYTE PTR [edi+0x5c],cl
  40ca04:	daa    
  40ca05:	mov    WORD PTR [edi+0x74],cs
  40ca08:	jo     0x40c99a
  40ca0a:	dec    edi
  40ca0b:	push   ebx
  40ca0c:	sub    eax,0xaaf97491
  40ca11:	ja     0x40ca08
  40ca13:	into   
  40ca14:	mov    ss,WORD PTR [esi+0x17f0007c]
  40ca1a:	jne    0x18f0ca20
  40ca20:	add    BYTE PTR [eax],al
  40ca22:	out    0x43,eax
  40ca24:	hlt    
  40ca25:	push   0x40d57b
  40ca2a:	rol    BYTE PTR [edi-0x7177ffd0],0xbe
  40ca31:	nop    ebp
  40ca34:	(bad)  
  40ca35:	call   FWORD PTR [eax+0x18f4440c]
  40ca3b:	or     eax,DWORD PTR [eax+edi*8+0x18]
  40ca3f:	or     eax,DWORD PTR [esp+edi*8+0x48]
  40ca43:	cs add edi,edi
  40ca46:	pop    ebp
  40ca47:	and    eax,0xb8feb1e8
  40ca4c:	std    
  40ca4d:	xor    DWORD PTR [ebp-0x43],0xfffffffe
  40ca51:	push   cs
  40ca52:	fst    QWORD PTR [esi+edi*8+0x440e58ff]
  40ca59:	hlt    
  40ca5a:	test   DWORD PTR [edi+0xae4458d],0xbc8f444
  40ca64:	inc    esp
  40ca65:	clc    
  40ca66:	enter  0x440b,0xfc
  40ca6a:	fsubr  DWORD PTR [edx]
  40ca6c:	add    al,0xff
  40ca6e:	mov    ebp,0x2e89e824
  40ca73:	mov    ecx,0xbcb583fd
  40ca78:	push   DWORD PTR [edi+edx*8-0x2f]
  40ca7c:	add    edi,DWORD PTR [esi+ebp*4+0xfeffd7]
  40ca83:	add    bh,ah
  40ca85:	mov    ecx,0x54cdc7fd
  40ca8a:	fs inc ecx
  40ca8c:	enter  0xfdb9,0xff
  40ca90:	not    ecx
  40ca92:	add    eax,esp
  40ca94:	xor    ecx,esp
  40ca96:	inc    esp
  40ca97:	add    dh,al
  40ca99:	popa   
  40ca9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9b:	(bad)  
  40ca9c:	mov    esi,0x33e7b04f
  40caa1:	iret   
  40caa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caa3:	(bad)  
  40caa4:	jbe    0x40cae5
  40caa6:	pushf  
  40caa7:	add    BYTE PTR [ecx],dh
  40caa9:	jnp    0x40caad
  40caab:	sbb    DWORD PTR [edi+esi*8+0x1c],0x41
  40cab0:	xor    DWORD PTR [edx+0x67b2292e],esi
  40cab6:	ret    0xf065
  40cab9:	jp     0x40ca60
  40cabb:	jae    0x40cb0e
  40cabd:	(bad)  
  40cabe:	out    0xc3,eax
  40cac0:	(bad)  
  40cac2:	add    al,0xff
  40cac4:	in     eax,0x71
  40cac6:	sbb    dh,al
  40cac8:	pushf  
  40cac9:	cmp    al,BYTE PTR [ecx*4-0xad1d0c]
  40cad0:	(bad)  
  40cad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad3:	je     0x40cb12
  40cad5:	jmp    0xfeaa:0x7259082f
  40cadc:	ds inc ebx
  40cade:	ror    DWORD PTR [edi],0x31
  40cae1:	test   al,0x79
  40cae3:	jmp    0x40ca97
  40cae5:	inc    ecx
  40cae6:	xchg   edi,eax
  40cae7:	inc    BYTE PTR [eax]
  40cae9:	add    BYTE PTR [ebp+esi*2+0x36789c9a],bl
  40caf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf1:	imul   eax,DWORD PTR [ecx+0x0],0x2661f040
  40caf8:	xor    BYTE PTR [eax],cl
  40cafa:	sbb    DWORD PTR [edi-0x7d0100b6],eax
  40cb00:	ret    0x2d74
  40cb03:	inc    esp
  40cb04:	rol    DWORD PTR [edi],0x31
  40cb07:	xchg   ebx,eax
  40cb08:	adc    ch,BYTE PTR [eax+0x2]
  40cb0b:	mov    ebx,0x14ac0043
  40cb10:	sub    al,0xb4
  40cb12:	data16 jl 0x40caea
  40cb15:	inc    ebp
  40cb16:	into   
  40cb17:	(bad)  
  40cb18:	loope  0x40cadd
  40cb1a:	cmp    eax,0x36c2a018
  40cb1f:	adc    al,0xae
  40cb21:	aas    
  40cb22:	lds    edx,FWORD PTR ds:0xa13103e9
  40cb28:	sub    ebx,DWORD PTR [eax-0x3cc710a]
  40cb2e:	xchg   esi,eax
  40cb2f:	cmp    DWORD PTR [ebx-0x5b],eax
  40cb32:	xchg   edi,eax
  40cb33:	sbb    ebp,DWORD PTR [ecx+0x13933730]
  40cb39:	cwde   
  40cb3a:	xchg   BYTE PTR [eax],cl
  40cb3c:	out    0xd8,eax
  40cb3e:	mov    esi,0x76fcaa5d
  40cb43:	(bad)  
  40cb45:	mov    edx,0x9c98195b
  40cb4a:	jecxz  0x40cb60
  40cb4c:	sub    cl,bh
  40cb4e:	add    BYTE PTR [eax],al
  40cb50:	sahf   
  40cb51:	or     DWORD PTR [esi+0x4c],ebx
  40cb54:	mov    dl,0x8c
  40cb56:	out    0x2e,eax
  40cb58:	xor    al,0xcc
  40cb5a:	call   0x6a54fb62
  40cb5f:	stos   DWORD PTR es:[edi],eax
  40cb60:	xor    DWORD PTR [eax],ecx
  40cb62:	out    dx,eax
  40cb63:	fdiv   DWORD PTR [esi+0x5d]
  40cb66:	sub    bh,ah
  40cb68:	cs mov dl,0x7c
  40cb6b:	push   ds
  40cb6c:	jo     0x40cb82
  40cb6e:	pop    esp
  40cb6f:	aas    
  40cb70:	or     eax,0x292f25e4
  40cb75:	jl     0x40cb62
  40cb77:	dec    ecx
  40cb78:	push   cs
  40cb79:	(bad)
  40cb7d:	or     ah,ah
  40cb7f:	add    BYTE PTR [esi],0x12
  40cb82:	jl     0x40cb81
  40cb84:	mov    bl,0x10
  40cb86:	or     eax,0x166404
  40cb8b:	ret    0x5bf2
  40cb8e:	shl    ecx,0x32
  40cb91:	mov    eax,ds:0x8f82d544
  40cb96:	je     0x40cb89
  40cb98:	stos   BYTE PTR es:[edi],al
  40cb99:	jns    0x40cbf3
  40cb9b:	(bad)  
  40cb9c:	lea    edx,[ecx+0x190ee8f7]
  40cba2:	add    ecx,0x30
  40cba5:	or     DWORD PTR [esi],eax
  40cba7:	push   0x57
  40cba9:	cmp    bh,0x3b
  40cbac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbad:	cmp    eax,eax
  40cbaf:	mov    al,ds:0x74001670
  40cbb4:	add    BYTE PTR [eax],al
  40cbb6:	push   edi
  40cbb7:	or     BYTE PTR [edi-0x62],0x5f
  40cbbb:	sbb    al,0xe8
  40cbbd:	mov    al,ds:0xe2fe8efb
  40cbc2:	jb     0x40cbcb
  40cbc4:	push   es
  40cbc5:	push   0x4f
  40cbc7:	cmp    bh,0xf3
  40cbca:	ins    BYTE PTR es:[edi],dx
  40cbcb:	cmp    eax,eax
  40cbcd:	mov    al,ds:0x5c001670
  40cbd2:	pop    ds
  40cbd3:	or     BYTE PTR [edi+0x66],0x7
  40cbd7:	sbb    al,0xe8
  40cbd9:	mov    ebx,?
  40cbdb:	mov    ?,esi
  40cbdd:	push   0xffffff9a
  40cbdf:	dec    esi
  40cbe0:	jne    0x40cbc9
  40cbe2:	mov    cl,0xf
  40cbe4:	in     al,dx
  40cbe5:	jmp    0x296be1f1
  40cbea:	jmp    0x40cc3f
  40cbec:	pop    es
  40cbed:	jmp    0x9a2ca491
  40cbf2:	aad    0x8
  40cbf4:	or     BYTE PTR [ecx],dl
  40cbf6:	ret    0xfeec
  40cbf9:	push   ds
  40cbfa:	mov    cl,0x85
  40cbfc:	pop    ds
  40cbfd:	pushf  
  40cbfe:	add    al,0x93
  40cc00:	jl     0x40cbff
  40cc02:	xor    eax,DWORD PTR [edi]
  40cc04:	push   es
  40cc05:	add    bl,ah
  40cc07:	push   ecx
  40cc08:	mov    edx,0x458d11e0
  40cc0e:	sub    al,0xe1
  40cc10:	(bad)  
  40cc11:	jne    0x40cbe3
  40cc13:	test   eax,0xb1cf5971
  40cc18:	cmp    eax,0x2b380000
  40cc1e:	push   es
  40cc1f:	sbb    DWORD PTR [ebp-0x3c],0xfffffffe
  40cc23:	je     0x40cbfb
  40cc25:	jle    0x40cbe5
  40cc27:	leave  
  40cc28:	mov    ah,BYTE PTR [eax]
  40cc2a:	add    BYTE PTR [ebp+0x6a4ec455],cl
  40cc30:	cmp    BYTE PTR [ecx+0x31700873],dh
  40cc36:	pop    ecx
  40cc37:	dec    edi
  40cc39:	mov    ds:0xb148ec43,eax
  40cc3e:	jae    0x40cc48
  40cc40:	mov    al,0xc1
  40cc42:	push   esi
  40cc43:	jmp    FWORD PTR [edi+0x7a01f695]
  40cc49:	push   ds
  40cc4a:	cmp    eax,0x5b
  40cc4d:	sub    al,BYTE PTR [esi]
  40cc4f:	sbb    DWORD PTR [ebp-0x43],0xfffffffe
  40cc53:	je     0x40ccab
  40cc55:	jle    0x40cc15
  40cc57:	leave  
  40cc58:	or     ah,BYTE PTR [eax]
  40cc5a:	add    BYTE PTR [ebx+0x413a90],ah
  40cc60:	int    0xda
  40cc62:	jmp    0x40ccb4
  40cc64:	jb     0x40ccdf
  40cc66:	std    
  40cc67:	jne    0x40cca9
  40cc69:	mov    ecx,0xb16f5948
  40cc6e:	lds    sp,DWORD PTR [edi-0x2a730028]
  40cc75:	mov    esp,0xb2096a4e
  40cc7a:	jae    0x40cc88
  40cc7c:	das    
  40cc7d:	sub    ecx,DWORD PTR [eax]
  40cc7f:	call   0x9771cc84
  40cc84:	cwde   
  40cc85:	(bad)  
  40cc86:	(bad)  
  40cc87:	xor    eax,esi
  40cc89:	pop    es
  40cc8a:	xor    DWORD PTR [eax+0x36b2eb8d],esi
  40cc90:	mov    al,ds:0x32876c8c
  40cc95:	call   0xfee274e2
  40cc9a:	(bad)  
  40cc9b:	out    dx,eax
  40cc9c:	lahf   
  40cc9d:	inc    BYTE PTR [edi+edi*2-0x56]
  40cca1:	dec    esi
  40cca2:	pop    esi
  40cca3:	mov    ax,ds:0x12e6f10a
  40cca9:	(bad)  
  40ccaa:	cmp    al,0x83
  40ccac:	mov    eax,ds:0xdd62ad74
  40ccb1:	std    
  40ccb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb3:	lds    ecx,FWORD PTR ds:0xa17b24c0
  40ccb9:	je     0x40cc50
  40ccbb:	mov    ds:0xad8e5522,al
  40ccc0:	retf   
  40ccc1:	shl    DWORD PTR ds:0x8d8b377b,0x9d
  40ccc8:	pop    ss
  40ccc9:	or     al,0x89
  40cccb:	leave  
  40cccc:	and    al,0xff
  40ccce:	outs   dx,BYTE PTR ds:[esi]
  40cccf:	add    edx,0x18061273
  40ccd5:	adc    BYTE PTR [ecx],al
  40ccd7:	xchg   ebx,eax
  40ccd8:	int3   
  40ccd9:	pusha  
  40ccda:	push   esi
  40ccdb:	cmc    
  40ccdc:	xor    ch,BYTE PTR [eax-0x47]
  40ccdf:	mov    al,0x42
  40cce1:	add    BYTE PTR [esi+0x6f],al
  40cce4:	cli    
  40cce5:	inc    BYTE PTR [eax]
  40cce7:	add    ah,al
  40cce9:	xchg   BYTE PTR [edx],dh
  40cceb:	(bad)  
  40ccec:	mov    esp,0xb1e5aa82
  40ccf1:	dec    edx
  40ccf2:	mov    ds:0xa1a0e4e7,al
  40ccf7:	(bad)  
  40ccf8:	call   0x7e40c43c
  40ccfd:	adc    al,0x72
  40ccff:	scas   eax,DWORD PTR es:[edi]
  40cd00:	xchg   esi,eax
  40cd01:	adc    al,0xe9
  40cd03:	mov    dl,0xc4
  40cd05:	cld    
  40cd06:	push   ebp
  40cd07:	inc    esi
  40cd08:	jo     0x40cd1e
  40cd0a:	push   cs
  40cd0b:	sbb    BYTE PTR ds:0x65a2e2fe,ah
  40cd11:	sbb    al,0x11
  40cd13:	push   ebx
  40cd14:	out    0x8b,eax
  40cd16:	cmc    
  40cd17:	sub    dh,BYTE PTR [ecx]
  40cd19:	adc    al,0xfe
  40cd1b:	pusha  
  40cd1c:	dec    esi
  40cd1d:	pop    esp
  40cd1e:	sub    DWORD PTR [ebx+0x31],eax
  40cd21:	mov    edx,DWORD PTR [ebx+0x10]
  40cd24:	pop    ebx
  40cd25:	cs (bad) 
  40cd27:	pop    ss
  40cd28:	sub    DWORD PTR [edi+ebp*2-0x5f],edi
  40cd2c:	mov    bh,0x8b
  40cd2e:	push   eax
  40cd2f:	add    al,0x31
  40cd31:	jnp    0x40cdb1
  40cd33:	sub    al,0xe6
  40cd35:	xlat   BYTE PTR ds:[ebx]
  40cd36:	daa    
  40cd37:	add    al,0x9e
  40cd39:	add    ebp,ebx
  40cd3b:	sub    eax,0xc1b8b35
  40cd40:	cdq    
  40cd41:	xchg   esi,eax
  40cd42:	popf   
  40cd43:	mov    eax,ds:0x3e8fc87
  40cd48:	mov    cs,edx
  40cd4a:	add    ah,cl
  40cd4c:	add    BYTE PTR [eax],al
  40cd4e:	repz aam 0xe8
  40cd51:	mov    al,ds:0x1317e5
  40cd56:	add    cx,sp
  40cd59:	stos   DWORD PTR es:[edi],eax
  40cd5a:	retf   
  40cd5b:	mov    ch,BYTE PTR [ebp-0x5f]
  40cd5e:	into   
  40cd5f:	adc    ebp,ecx
  40cd61:	mov    al,0x8c
  40cd63:	cld    
  40cd64:	popf   
  40cd65:	inc    ebp
  40cd66:	lock adc edx,DWORD PTR [esi+0x17]
  40cd6a:	sub    eax,0xbda109fe
  40cd6f:	sbb    edx,DWORD PTR [ecx+0x38]
  40cd72:	mov    edi,DWORD PTR cs:0x14312c
  40cd79:	inc    esi
  40cd7a:	xchg   ebx,eax
  40cd7b:	repz (bad) 
  40cd7d:	stos   BYTE PTR es:[edi],al
  40cd7e:	jae    0x40cd94
  40cd80:	call   FWORD PTR [esi+edi*1+0x1e1e22fe]
  40cd87:	sbb    al,0xe8
  40cd89:	aam    0xd1
  40cd8b:	mov    esi,edi
  40cd8d:	and    bh,ch
  40cd8f:	adc    al,BYTE PTR [eax]
  40cd91:	pushf  
  40cd92:	mov    ebp,0x9125827e
  40cd97:	cld    
  40cd98:	inc    DWORD PTR [edx-0x1e8b75fc]
  40cd9e:	mov    bl,al
  40cda0:	pop    ecx
  40cda1:	out    0x91,al
  40cda3:	fwait
  40cda4:	inc    esp
  40cda5:	fstp   QWORD PTR [edx]
  40cda7:	hlt    
  40cda8:	inc    ebx
  40cda9:	sub    BYTE PTR ds:0x8ae1748b,dh
  40cdaf:	xlat   BYTE PTR ds:[ebx]
  40cdb0:	inc    dh
  40cdb2:	add    BYTE PTR [eax],al
  40cdb4:	ror    DWORD PTR [ecx-0x2e428c],1
  40cdba:	pop    es
  40cdbb:	sar    DWORD PTR [ebx],0xee
  40cdbe:	(bad)  
  40cdbf:	scas   al,BYTE PTR es:[edi]
  40cdc0:	imul   edx,DWORD PTR [ebx+eax*1-0x17],0x47
  40cdc5:	lahf   
  40cdc6:	jmp    0x40ce32
  40cdc8:	outs   dx,BYTE PTR ds:[esi]
  40cdc9:	mov    gs,WORD PTR [ecx-0x17]
  40cdcc:	dec    esp
  40cdcd:	inc    edi
  40cdce:	call   DWORD PTR [eiz*1-0x6fdce384]
  40cdd5:	mov    DWORD PTR [eax+0x6ef29124],ecx
  40cddb:	sub    eax,0xf4ff13f2
  40cde0:	sub    bh,BYTE PTR [ebx+ebx*1+0x66]
  40cde4:	xchg   ecx,eax
  40cde5:	mov    esi,edi
  40cde7:	aam    0xa6
  40cde9:	mov    DWORD PTR [ecx+eiz*8-0x76],esi
  40cded:	rcr    BYTE PTR [ecx+0x4e],cl
  40cdf0:	xchg   ecx,eax
  40cdf1:	pop    ebx
  40cdf2:	rol    DWORD PTR [eax],0x1c
  40cdf5:	push   ss
  40cdf6:	push   ebp
  40cdf7:	mov    esi,DWORD PTR [eax+edx*4-0x3e]
  40cdfb:	clc    
  40cdfc:	repnz adc eax,0x2247346a
  40ce02:	or     al,ch
  40ce04:	and    al,0x4e
  40ce06:	(bad)  
  40ce07:	inc    DWORD PTR [ecx-0x5e97042e]
  40ce0d:	rol    DWORD PTR [eax+0x0],1
  40ce10:	daa    
  40ce11:	and    cl,BYTE PTR [eax]
  40ce13:	call   0x3e815b
  40ce18:	add    BYTE PTR [eax],al
  40ce1a:	ret    0x6815
  40ce1d:	cdq    
  40ce1e:	mov    esi,ss
  40ce20:	jmp    DWORD PTR [edi+0x4d]
  40ce23:	rol    DWORD PTR [eax+0x0],1
  40ce26:	xlat   BYTE PTR ds:[ebx]
  40ce27:	imul   ebx,DWORD PTR [ecx+0x29],0x19
  40ce2b:	adc    al,ch
  40ce2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce2e:	pop    es
  40ce2f:	test   eax,0x2c880bfd
  40ce34:	aas    
  40ce35:	mov    DWORD PTR [ebp-0x58],ebx
  40ce38:	data16 mov BYTE PTR [edx-0x77980030],dh
  40ce3f:	adc    eax,0xe8f0beef
  40ce44:	inc    ecx
  40ce45:	inc    ecx
  40ce46:	cwde   
  40ce47:	stos   BYTE PTR es:[edi],al
  40ce48:	jae    0x40ce42
  40ce4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce4b:	sub    ecx,DWORD PTR [eax]
  40ce4d:	call   0x3ff74a
  40ce52:	xor    BYTE PTR [eax+0x3d5840b8],bl
  40ce58:	add    BYTE PTR [eax],al
  40ce5a:	mov    bh,0xea
  40ce5c:	enterw 0xcf0b,0xff
  40ce61:	(bad)  
  40ce62:	pop    ebp
  40ce63:	lods   eax,DWORD PTR ds:[esi]
  40ce64:	std    
  40ce65:	jne    0x40cea7
  40ce67:	mov    ebp,0xa8e77f74
  40ce6c:	std    
  40ce6d:	jne    0x40cea0
  40ce6f:	jecxz  0x40ce1c
  40ce71:	dec    ecx
  40ce72:	aad    0xd9
  40ce74:	sahf   
  40ce75:	(bad)  
  40ce76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce77:	iret   
  40ce78:	sahf   
  40ce79:	je     0x40ceb4
  40ce7b:	jecxz  0x40cedd
  40ce7d:	pop    eax
  40ce7e:	add    BYTE PTR [eax],al
  40ce80:	push   ds
  40ce81:	inc    edx
  40ce82:	int    0xc1
  40ce84:	sub    eax,0x1d8b377b
  40ce89:	inc    bh
  40ce8b:	sti    
  40ce8c:	fwait
  40ce8d:	jnp    0x40ceb7
  40ce8f:	xor    eax,0xe80aa7fe
  40ce94:	nop
  40ce95:	les    ebx,FWORD PTR [ebp-0x61484702]
  40ce9b:	mov    WORD PTR [bp+0x43],gs
  40cea0:	fiadd  WORD PTR [edi]
  40cea2:	or     ebp,eax
  40cea4:	push   ecx
  40cea5:	jns    0x40ce44
  40cea7:	dec    dh
  40cea9:	out    0x9f,eax
  40ceab:	(bad)  
  40ceac:	cmp    al,0x83
  40ceae:	stos   BYTE PTR es:[edi],al
  40ceaf:	mov    ebx,DWORD PTR [eax+0x62]
  40ceb2:	popf   
  40ceb3:	enter  0x6ef3,0x2
  40ceb7:	push   ebp
  40ceb8:	mov    edx,0xa5c3815e
  40cebd:	in     al,0x3
  40cebf:	push   0x67
  40cec1:	ret    0x817
  40cec4:	mov    DWORD PTR [edx+0x38eff3b],ecx
  40ceca:	dec    eax
  40cecb:	cld    
  40cecc:	sbb    ecx,ebx
  40cece:	inc    esi
  40cecf:	inc    ecx
  40ced0:	xor    DWORD PTR [edx-0x3676f7e9],esp
  40ced6:	pushf  
  40ced7:	(bad)  
  40ced8:	outs   dx,BYTE PTR ds:[esi]
  40ced9:	xchg   ecx,eax
  40ceda:	pop    ss
  40cedb:	cld    
  40cedc:	data16 jg 0x40cee9
  40cedf:	call   0xfedff2de
  40cee4:	add    BYTE PTR [eax],al
  40cee6:	push   0xe40006bc
  40ceeb:	adc    esi,DWORD PTR [edx-0x51]
  40ceee:	mov    bl,0x4f
  40cef0:	pop    esp
  40cef1:	sub    DWORD PTR [ecx],esi
  40cef3:	(bad)  
  40cef4:	sbb    eax,0x411bbd9f
  40cef9:	sahf   
  40cefa:	xchg   BYTE PTR [edi-0x779273bb],al
  40cf00:	rcr    BYTE PTR [ebx+0x72],1
  40cf03:	aad    0xe8
  40cf05:	sahf   
  40cf06:	popf   
  40cf07:	sbb    al,0x41
  40cf09:	popf   
  40cf0a:	or     eax,0x7d9e2588
  40cf0f:	mov    BYTE PTR ds:0xc27c2918,bl
  40cf15:	cmp    al,0xf6
  40cf17:	xchg   DWORD PTR [edi],ebx
  40cf19:	shl    DWORD PTR [edx],0x14
  40cf1c:	pushf  
  40cf1d:	mov    bl,dl
  40cf1f:	xchg   ebx,eax
  40cf20:	and    al,0x9f
  40cf22:	dec    eax
  40cf23:	adc    al,0x83
  40cf25:	fcmovnbe st,st(7)
  40cf27:	add    ecx,esp
  40cf29:	stos   DWORD PTR es:[edi],eax
  40cf2a:	cld    
  40cf2b:	in     al,dx
  40cf2c:	in     eax,0x9d
  40cf2e:	mov    ecx,0xf12cdcd1
  40cf33:	shl    BYTE PTR [edi],1
  40cf35:	add    al,0xb6
  40cf37:	add    ecx,esp
  40cf39:	stos   DWORD PTR es:[edi],eax
  40cf3a:	jge    0x40cec5
  40cf3c:	lds    ebx,FWORD PTR [ebp-0x6242fe59]
  40cf42:	and    eax,0xfe9bc11c
  40cf47:	xchg   BYTE PTR [ebp+0x700000cb],ch
  40cf4d:	adc    cl,ch
  40cf4f:	ss mov edx,0x2d179d78
  40cf55:	jl     0x40cfa8
  40cf57:	cmp    eax,0xc3e18776
  40cf5c:	loop   0x40cf86
  40cf5e:	adc    DWORD PTR [ecx+0x33e8d4f2],esi
  40cf64:	dec    ecx
  40cf65:	in     al,0xff
  40cf67:	adc    eax,0x6e4f86b4
  40cf6c:	es and al,0x50
  40cf6f:	pushw  ds
  40cf71:	sbb    al,0xe8
  40cf73:	push   esi
  40cf74:	xchg   DWORD PTR [esi-0x1517be02],eax
  40cf7a:	dec    BYTE PTR [esi-0x6]
  40cf7d:	push   esp
  40cf7e:	or     ebp,ecx
  40cf80:	pop    edi
  40cf81:	fwait
  40cf82:	jmp    0x40cfee
  40cf84:	jmp    0x33042607
  40cf89:	cli    
  40cf8a:	cmp    BYTE PTR [esi],ch
  40cf8c:	es sbb al,0xe8
  40cf8f:	xchg   ebp,eax
  40cf90:	dec    edx
  40cf91:	xchg   esi,edi
  40cf93:	jo     0x40d00b
  40cf95:	mov    BYTE PTR [edx+0x413c1ed4],cl
  40cf9b:	jmp    0x7d411552
  40cfa0:	inc    esi
  40cfa1:	cld    
  40cfa2:	leave  
  40cfa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfa4:	jae    0x40cfba
  40cfa6:	push   edi
  40cfa7:	add    DWORD PTR [eax+edi*1+0x0],edi
  40cfab:	jmp    0x46b423e9
  40cfb0:	add    BYTE PTR [eax],al
  40cfb2:	cld    
  40cfb3:	jnp    0x40cf8e
  40cfb5:	inc    ebp
  40cfb6:	pushf  
  40cfb7:	test   DWORD PTR [edx],ecx
  40cfb9:	test   eax,0x2488e11e
  40cfbe:	int    0x85
  40cfc0:	je     0x40cf83
  40cfc2:	pop    eax
  40cfc3:	sub    bh,bh
  40cfc5:	xor    al,0x2d
  40cfc7:	jl     0x40cf4e
  40cfc9:	mov    dh,0xb5
  40cfcb:	test   esi,edi
  40cfcd:	xor    al,0xad
  40cfcf:	cld    
  40cfd0:	sbb    esp,DWORD PTR [esi+0x20e81c1f]
  40cfd6:	pushf  
  40cfd7:	test   esi,edi
  40cfd9:	xchg   esi,eax
  40cfda:	pop    ds
  40cfdb:	mov    WORD PTR [ecx-0x36],gs
  40cfde:	int    0xff
  40cfe0:	pop    es
  40cfe1:	add    al,al
  40cfe3:	ss (bad) 
  40cfe5:	(bad)  
  40cfe6:	fistp  QWORD PTR [edx]
  40cfe8:	fld    QWORD PTR [ecx+ecx*1+0x10]
  40cfec:	push   DWORD PTR [ebp-0x40]
  40cfef:	mov    edx,0xa7cf5e73
  40cff4:	or     eax,eax
  40cff6:	test   BYTE PTR fs:[esi-0x1],cl
  40cffa:	push   ebp
  40cffb:	stos   BYTE PTR es:[edi],al
  40cffc:	dec    esi
  40cffd:	inc    DWORD PTR ds:0x466ce81a
  40d003:	test   al,0xfd
  40d005:	call   0x401b52
  40d00a:	pop    edi
  40d00b:	push   ds
  40d00c:	clc    
  40d00d:	call   0x401b92
  40d012:	dec    esp
  40d013:	fs mov esi,0x1f0000b9
  40d019:	test   al,0xfd
  40d01b:	call   FWORD PTR [edx]
  40d01d:	div    DWORD PTR [esi]
  40d01f:	pop    es
  40d020:	lds    ecx,FWORD PTR [ebp-0x57d38a03]
  40d026:	jae    0x40d030
  40d028:	inc    eax
  40d029:	xchg   BYTE PTR [esi-0x1],dl
  40d02c:	fisttp WORD PTR [ecx-0x37]
  40d02f:	ret    0x11d4
  40d032:	push   ebp
  40d033:	mov    ebx,esp
  40d035:	test   eax,0xcae00c73
  40d03a:	pop    esp
  40d03b:	(bad)  
  40d03c:	fist   WORD PTR ds:0x399d74c0
  40d042:	in     al,dx
  40d043:	inc    esp
  40d044:	pop    ecx
  40d045:	adc    BYTE PTR [eax-0x18],dl
  40d048:	pop    ebx
  40d049:	dec    edx
  40d04a:	(bad)  
  40d04b:	(bad)  
  40d04c:	cmp    BYTE PTR [ecx-0x56d7ef8d],ch
  40d052:	jae    0x40d05c
  40d054:	mov    al,ds:0x9fffd486
  40d059:	mov    eax,0x9e315a6c
  40d05e:	call   0xba55:0x26773c8
  40d065:	lahf   
  40d066:	xchg   bl,al
  40d068:	pop    ecx
  40d069:	push   ds
  40d06a:	cs add bl,cl
  40d06d:	rcr    BYTE PTR [ecx-0x756cc68c],0x56
  40d074:	inc    esi
  40d075:	out    dx,al
  40d076:	mov    WORD PTR [ebp+edi*1+0x2],es
  40d07a:	fnstenv [ebx+0x0]
  40d07d:	add    BYTE PTR [ecx],cl
  40d07f:	mov    esp,0x7b6e8002
  40d084:	push   cs
  40d085:	pop    ecx
  40d086:	cdq    
  40d087:	(bad)  
  40d088:	aas    
  40d089:	inc    ecx
  40d08a:	xor    DWORD PTR [esi+0x7b45d9aa],ebx
  40d090:	add    cl,BYTE PTR [ebx]
  40d092:	icebp  
  40d093:	mov    esi,0x301956d6
  40d098:	daa    
  40d099:	(bad)  
  40d09a:	inc    BYTE PTR [ecx-0xbbc8c3e]
  40d0a0:	inc    eax
  40d0a1:	clc    
  40d0a2:	out    dx,al
  40d0a3:	lahf   
  40d0a4:	call   0xc908:0x110e4b69
  40d0ab:	in     al,dx
  40d0ac:	call   0x5bf8:0xf7dd6fe
  40d0b3:	push   edi
  40d0b4:	cdq    
  40d0b5:	je     0x40d0f0
  40d0b7:	arpl   WORD PTR [ebx],bx
  40d0b9:	(bad)  
  40d0ba:	mov    esi,0xb9749965
  40d0bf:	shl    dh,1
  40d0c1:	(bad)  
  40d0c2:	and    al,0x73
  40d0c4:	stos   BYTE PTR es:[edi],al
  40d0c5:	imul   esp,DWORD PTR [esi+0x24fe994d],0x53
  40d0cc:	stos   BYTE PTR es:[edi],al
  40d0cd:	std    
  40d0ce:	clc    
  40d0cf:	mov    ebp,0xbb42fb99
  40d0d4:	pop    ebx
  40d0d5:	inc    BYTE PTR [esi-0x7f6559ed]
  40d0db:	mov    ch,0xe0
  40d0dd:	add    bh,ah
  40d0df:	lods   al,BYTE PTR ds:[esi]
  40d0e0:	xchg   ebp,eax
  40d0e1:	adc    BYTE PTR [eax],al
  40d0e3:	add    BYTE PTR [ebp-0x7c],ch
  40d0e6:	adc    ecx,DWORD PTR [ecx+ebx*2]
  40d0e9:	lock sbb eax,0xafe45f9b
  40d0ef:	lds    esi,FWORD PTR [edx]
  40d0f1:	adc    al,0x1c
  40d0f3:	(bad)  
  40d0f4:	pop    edx
  40d0f5:	nop
  40d0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0f7:	xchg   edi,eax
  40d0f8:	(bad)  
  40d0fa:	call   0xd3c5cb2c
  40d0ff:	or     ecx,DWORD PTR [ecx+0xe]
  40d102:	mov    esi,0xa38e2f9a
  40d107:	xchg   edi,eax
  40d108:	mov    ebx,0x71ebbd41
  40d10d:	adc    al,0x69
  40d10f:	ficom  DWORD PTR [esi]
  40d111:	or     BYTE PTR [ecx-0x5826f9d5],ch
  40d117:	add    ebx,DWORD PTR [esi+0x6c]
  40d11a:	mov    eax,0xf183fee7
  40d11f:	ret    
  40d120:	xor    BYTE PTR [edi],0xbe
  40d123:	stos   DWORD PTR es:[edi],eax
  40d124:	arpl   di,si
  40d126:	or     eax,0x7c543b9a
  40d12b:	cld    
  40d12c:	outs   dx,BYTE PTR ds:[esi]
  40d12d:	in     al,dx
  40d12e:	call   0x81039736
  40d133:	add    al,0x74
  40d135:	aad    0xe8
  40d137:	xor    eax,esi
  40d139:	or     ecx,esi
  40d13b:	stos   DWORD PTR es:[edi],eax
  40d13c:	push   ecx
  40d13d:	add    bl,dh
  40d13f:	cdq    
  40d140:	into   
  40d141:	xchg   ecx,eax
  40d142:	das    
  40d143:	cdq    
  40d144:	scas   eax,DWORD PTR es:[edi]
  40d145:	sbb    BYTE PTR [ecx],0xc4
  40d148:	add    BYTE PTR [eax],al
  40d14a:	jmp    0x9fda96d2
  40d14f:	xchg   BYTE PTR [esi+0x92fdc],cl
  40d155:	test   eax,0xaefc08a8
  40d15a:	ss or  al,0xe8
  40d15d:	fwait
  40d15e:	inc    ebx
  40d15f:	cmp    esi,0x3e
  40d162:	push   0x55
  40d164:	add    ebp,ecx
  40d166:	pop    ds
  40d167:	(bad)  
  40d168:	jmp    0x40d1d4
  40d16a:	jno    0x40d1e7
  40d16c:	add    ah,0xfb
  40d16f:	xor    BYTE PTR [ecx-0x17],al
  40d172:	xor    cl,BYTE PTR [ecx]
  40d174:	add    al,0xa0
  40d176:	ja     0x40d187
  40d178:	add    BYTE PTR [ebx],al
  40d17a:	sub    eax,0x99d2ffee
  40d17f:	xor    BYTE PTR [ebp+ebp*8+0x4],0x14
  40d184:	push   0xffffffe9
  40d186:	fidivr DWORD PTR [eax]
  40d188:	sub    ebp,ecx
  40d18a:	xor    cl,BYTE PTR [ebp+0x7b84144]
  40d190:	clc    
  40d191:	push   ecx
  40d192:	arpl   bp,bx
  40d194:	(bad)  
  40d195:	ss mov edx,0x362efbd7
  40d19b:	jl     0x40d19b
  40d19d:	pushf  
  40d19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19f:	in     al,dx
  40d1a0:	(bad)  
  40d1a1:	push   ds
  40d1a2:	adc    BYTE PTR es:[edx-0x17],ch
  40d1a6:	sbb    al,0x14
  40d1a8:	call   0xfec3a792
  40d1ad:	je     0x40d1af
  40d1af:	add    BYTE PTR [esi],bl
  40d1b1:	mov    BYTE PTR [edi-0x6d],cl
  40d1b4:	xor    ch,dh
  40d1b6:	inc    DWORD PTR [edx-0x1200133c]
  40d1bc:	aaa    
  40d1bd:	cmp    dh,0xfc
  40d1c0:	pop    ebx
  40d1c1:	xor    DWORD PTR [ecx-0x17],eax
  40d1c4:	aaa    
  40d1c5:	ret    
  40d1c6:	push   cs
  40d1c7:	popa   
  40d1c8:	mov    edx,0xb5e9fe82
  40d1cd:	out    0xf3,eax
  40d1cf:	add    BYTE PTR [ebx],ah
  40d1d1:	mov    DWORD PTR [ebx+0x6a46d845],ecx
  40d1d7:	add    dl,dh
  40d1d9:	mov    DWORD PTR [eax+0x0],ebp
  40d1dc:	lock jne 0x40d222
  40d1df:	inc    ecx
  40d1e0:	mov    BYTE PTR [ebx+0x4897f473],bl
  40d1e6:	adc    BYTE PTR [ebp-0xa0e168],al
  40d1ec:	cmp    eax,0x38abe6a8
  40d1f1:	popf   
  40d1f2:	std    
  40d1f3:	mov    DWORD PTR ds:0x4cc009b0,ecx
  40d1f9:	into   
  40d1fa:	(bad)  
  40d1fb:	jne    0x40d1ad
  40d1fd:	scas   al,BYTE PTR es:[edi]
  40d1fe:	jmp    0x40d258
  40d200:	xlat   BYTE PTR ds:[ebx]
  40d201:	fwait
  40d202:	xchg   DWORD PTR [ebp-0x1c],eax
  40d205:	fwait
  40d206:	jae    0x40d1f8
  40d208:	jo     0x40d1f1
  40d20a:	push   eax
  40d20b:	push   DWORD PTR [edi-0x64]
  40d20e:	jae    0x40d1f8
  40d210:	ja     0x40d224
  40d212:	in     al,dx
  40d213:	inc    DWORD PTR [eax]
  40d215:	add    ch,bl
  40d217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d218:	out    0x2c,al
  40d21a:	test   eax,0x580bfd9c
  40d21f:	adc    DWORD PTR [ebx],ebx
  40d221:	push   0xbeef1608
  40d226:	pop    ss
  40d227:	adc    cl,BYTE PTR [eax]
  40d229:	call   0x40053b
  40d22e:	aaa    
  40d22f:	adc    ch,al
  40d231:	call   FWORD PTR [ebp-0x47]
  40d234:	std    
  40d235:	jne    0x40d217
  40d237:	lods   eax,DWORD PTR ds:[esi]
  40d238:	pop    ebx
  40d239:	push   ebp
  40d23a:	(bad)  
  40d23b:	test   eax,0xaec475fd
  40d240:	xchg   esp,eax
  40d241:	pop    eax
  40d242:	xlat   BYTE PTR ds:[ebx]
  40d243:	test   eax,0xb0d875fd
  40d248:	stc    
  40d249:	dec    edi
  40d24a:	xor    DWORD PTR [edx-0x6a],ebp
  40d24d:	mov    bh,ah
  40d24f:	data16 mov dl,BYTE PTR [ecx]
  40d252:	sahf   
  40d253:	inc    eax
  40d254:	nop
  40d255:	inc    BYTE PTR [ebx]
  40d257:	adc    DWORD PTR [ebp+0x1a538d74],0x58
  40d25e:	xchg   BYTE PTR [edx+0x6b2dc1cc],dh
  40d264:	das    
  40d265:	mov    eax,DWORD PTR [ebp+0x590c10a2]
  40d26b:	out    0x37,al
  40d26d:	jmp    DWORD PTR [esi+0x76]
  40d270:	ret    0x873
  40d273:	and    ecx,DWORD PTR [ebx]
  40d275:	inc    ebp
  40d276:	lock push 0x32
  40d279:	call   0x2721d27e
  40d27e:	xchg   edi,eax
  40d27f:	(bad)  
  40d280:	loope  0x40d294
  40d282:	inc    ebp
  40d283:	mov    edi,0x2a6af1
  40d288:	xor    edx,edx
  40d28a:	push   ebp
  40d28b:	addr16 push eax
  40d28d:	mov    al,0x43
  40d28f:	add    BYTE PTR [ecx+0x90810d2],al
  40d295:	arpl   WORD PTR [ecx],bx
  40d297:	call   DWORD PTR [esi]
  40d299:	jecxz  0x40d271
  40d29b:	push   edi
  40d29c:	push   cs
  40d29d:	dec    edx
  40d29e:	xchg   edi,eax
  40d29f:	je     0x40d2d6
  40d2a1:	sar    DWORD PTR [ebp+0x5b],cl
  40d2a4:	(bad)  
  40d2a5:	cmp    DWORD PTR [ebx],ecx
  40d2a7:	sar    BYTE PTR [ebp+0x64],0x2a
  40d2ab:	adc    dh,BYTE PTR [esp+ebp*4+0x2]
  40d2af:	push   eax
  40d2b0:	fld    DWORD PTR [ebp-0x652100ca]
  40d2b6:	sub    al,BYTE PTR [ecx-0x6a]
  40d2b9:	stos   BYTE PTR es:[edi],al
  40d2ba:	add    ch,BYTE PTR [eax+0x31]
  40d2bd:	imul   esp,DWORD PTR [ebp+0x3f4c59bd],0x41
  40d2c4:	xor    DWORD PTR [ecx+edi*1],edx
  40d2c7:	xchg   edi,eax
  40d2c8:	cmp    eax,0x2bd2d10c
  40d2cd:	adc    ebp,0xcddc38ab
  40d2d3:	xchg   esi,eax
  40d2d4:	imul   edx,DWORD PTR [ebp-0x10],0xcc8cfc03
  40d2db:	xor    BYTE PTR [edx+0x7f],0x42
  40d2df:	add    al,0x0
  40d2e1:	add    BYTE PTR [ebx],bl
  40d2e3:	inc    eax
  40d2e4:	scas   al,BYTE PTR es:[edi]
  40d2e5:	adc    BYTE PTR [ecx],ch
  40d2e7:	ins    BYTE PTR es:[edi],dx
  40d2e8:	aam    0x30
  40d2ea:	jbe    0x40d26c
  40d2ec:	outs   dx,DWORD PTR ds:[esi]
  40d2ed:	inc    eax
  40d2ee:	ins    DWORD PTR es:[edi],dx
  40d2ef:	in     eax,dx
  40d2f0:	repnz xchg esi,eax
  40d2f2:	fisttp QWORD PTR [ebx]
  40d2f4:	adc    DWORD PTR [ebx],0x2985805e
  40d2fa:	adc    al,BYTE PTR [ecx-0x6a6f40d]
  40d300:	jne    0x40d298
  40d302:	inc    edi
  40d303:	in     eax,dx
  40d304:	int3   
  40d305:	xchg   esi,eax
  40d306:	lds    ecx,FWORD PTR [ebx]
  40d308:	push   ecx
  40d309:	aaa    
  40d30a:	sbb    BYTE PTR ss:[ebp-0x6a],0xa5
  40d30f:	adc    BYTE PTR [ebp+0x10],0x39
  40d313:	ins    BYTE PTR es:[edi],dx
  40d314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d315:	xor    BYTE PTR [esi],bl
  40d317:	sub    BYTE PTR [edi],0xc1
  40d31a:	xor    dl,BYTE PTR [esp+edx*4]
  40d31d:	mov    bl,BYTE PTR [edx]
  40d31f:	cmp    BYTE PTR [ebx-0x72f2e6f9],0x96
  40d326:	dec    DWORD PTR [ebx]
  40d328:	sub    DWORD PTR [edi],ecx
  40d32a:	dec    ebp
  40d32b:	in     al,dx
  40d32c:	loopne 0x40d36e
  40d32e:	jo     0x40d344
  40d330:	mov    ecx,0xddbc5ab
  40d335:	xchg   esi,eax
  40d336:	outs   dx,BYTE PTR ds:[esi]
  40d337:	in     al,dx
  40d338:	call   0x90ff9940
  40d33d:	dec    edx
  40d33e:	je     0x40d315
  40d340:	(bad)  
  40d341:	call   0xe1b55248
  40d346:	add    BYTE PTR [eax],al
  40d348:	mov    bh,al
  40d34a:	jnp    0x40d332
  40d34c:	pushf  
  40d34d:	ja     0x40d2df
  40d34f:	les    edi,FWORD PTR ss:[esi-0x38]
  40d353:	stos   DWORD PTR es:[edi],eax
  40d354:	xor    eax,0xc9625514
  40d359:	xchg   edx,eax
  40d35a:	ret    
  40d35b:	lds    ecx,FWORD PTR [ebx+0x14]
  40d35e:	push   0xfffffffc
  40d360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d361:	or     BYTE PTR [eax],cl
  40d363:	shl    eax,0xe2
  40d366:	(bad)  
  40d367:	scas   al,BYTE PTR es:[edi]
  40d368:	stos   BYTE PTR es:[edi],al
  40d369:	fdivr  st,st(3)
  40d36b:	adc    edi,DWORD PTR [ebx+0x7e]
  40d36e:	je     0x40d361
  40d370:	call   0x22ed:0xbc96fead
  40d377:	mov    gs,WORD PTR [esi]
  40d379:	or     al,0xe8
  40d37b:	dec    ecx
  40d37c:	mov    esp,0x4913fe7e
  40d381:	jle    0x40d3f7
  40d383:	loope  0x40d31f
  40d385:	test   eax,0x7ea46efe
  40d38a:	je     0x40d3f1
  40d38c:	pushf  
  40d38d:	or     BYTE PTR [eax],cl
  40d38f:	push   ecx
  40d390:	mul    dl
  40d392:	(bad)  
  40d393:	push   esi
  40d394:	cli    
  40d395:	push   esp
  40d396:	add    ebp,ecx
  40d398:	dec    edi
  40d399:	mov    ebp,ebx
  40d39b:	push   0xfffffff1
  40d39d:	xchg   BYTE PTR [esi-0x2d],dl
  40d3a0:	xor    ch,dl
  40d3a2:	cmp    eax,0xe80c3636
  40d3a7:	mov    ecx,0x70fe7f4e
  40d3ac:	add    BYTE PTR [eax],al
  40d3ae:	or     BYTE PTR ss:[edx+0x412c3edc],0xe9
  40d3b6:	mov    dl,0x3d
  40d3b8:	add    BYTE PTR [ebp+0x52ec1d],dl
  40d3be:	test   ecx,edx
  40d3c0:	call   DWORD PTR [esi+0x20]
  40d3c3:	frstor [edi]
  40d3c5:	add    al,bl
  40d3c7:	or     eax,eax
  40d3c9:	je     0x40d3bd
  40d3cb:	das    
  40d3cc:	call   0xfdea3caf
  40d3d1:	or     ebx,eax
  40d3d3:	push   cs
  40d3d4:	and    BYTE PTR [ecx+0x66a055],cl
  40d3da:	mov    BYTE PTR [edi+0x3f4c68bc],dh
  40d3e0:	inc    ecx
  40d3e1:	add    bh,cl
  40d3e3:	or     eax,0x1045fff8
  40d3e8:	call   0xfdea17b5
  40d3ed:	call   DWORD PTR ds:0x26f1e6a0
  40d3f3:	test   eax,0x528bfcfd
  40d3f8:	mov    bh,0xff
  40d3fa:	scas   eax,DWORD PTR es:[edi]
  40d3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3fc:	std    
  40d3fd:	repnz (bad) 
  40d3ff:	pop    edx
  40d400:	add    eax,0x73a7f175
  40d405:	cld    
  40d406:	mov    edi,0x26e8080d
  40d40b:	inc    esp
  40d40c:	(bad)  
  40d40d:	jmp    FWORD PTR [edi+0x49]
  40d410:	rol    BYTE PTR [eax+eax*1],0x0
  40d414:	sbb    BYTE PTR [edi],ch
  40d416:	mov    ebp,esp
  40d418:	fwait
  40d419:	mov    ebp,0x11f257e2
  40d41e:	push   0x3f
  40d420:	outs   dx,DWORD PTR ds:[esi]
  40d421:	push   cs
  40d422:	or     al,ch
  40d424:	jo     0x40d46a
  40d426:	(bad)  
  40d427:	call   DWORD PTR [ecx+0xd8bfc3e]
  40d42d:	push   cs
  40d42e:	sub    BYTE PTR [ecx+0x8],al
  40d431:	xchg   edx,eax
  40d432:	cmp    eax,0x6840c400
  40d437:	popa   
  40d438:	xor    DWORD PTR [eax+0x13860041],esi
  40d43e:	inc    eax
  40d43f:	sub    DWORD PTR [ecx],esi
  40d441:	imul   eax,DWORD PTR [edi],0xffffffc0
  40d444:	inc    ebp
  40d445:	popa   
  40d446:	sub    ebp,eax
  40d448:	dec    edi
  40d449:	mov    edx,DWORD PTR [ebx+0xf2b2afe]
  40d44f:	and    BYTE PTR [eax+0x31678c30],ch
  40d455:	imul   esp,DWORD PTR [ecx+0x48d119bd],0x41
  40d45c:	xor    DWORD PTR [esi+0x18],ecx
  40d45f:	clc    
  40d460:	xchg   esi,eax
  40d461:	inc    eax
  40d462:	cld    
  40d463:	out    0xe1,eax
  40d465:	rcl    DWORD PTR [edx-0x73bf7902],1
  40d46b:	out    0xf8,eax
  40d46d:	and    al,0x93
  40d46f:	(bad)  
  40d470:	jne    0x40d4cc
  40d472:	ret    0x6eb8
  40d475:	sahf   
  40d476:	xchg   edx,eax
  40d477:	inc    BYTE PTR [eax]
  40d479:	add    BYTE PTR [ebx-0x2b],ah
  40d47c:	retf   
  40d47d:	push   es
  40d47e:	in     al,0xe3
  40d480:	sbb    eax,DWORD PTR [eax]
  40d482:	xor    DWORD PTR [esi+0x37db6751],esp
  40d488:	inc    ebp
  40d489:	add    cl,bl
  40d48b:	test   eax,0xee314148
  40d490:	sbb    BYTE PTR [eax],cl
  40d492:	dec    ecx
  40d493:	gs or  eax,0x2612eff
  40d499:	push   0x43b0a2
  40d49e:	mov    ebp,ebp
  40d4a0:	dec    eax
  40d4a1:	inc    ecx
  40d4a2:	xor    esi,edx
  40d4a4:	fcomp  DWORD PTR [edx+0x58]
  40d4a7:	lods   al,BYTE PTR ds:[esi]
  40d4a8:	add    ch,al
  40d4aa:	pop    esp
  40d4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ac:	xchg   ecx,eax
  40d4ad:	(bad)  
  40d4ae:	test   al,0xb7
  40d4b0:	sahf   
  40d4b1:	imul   esi,DWORD PTR [ecx],0x75839114
  40d4b7:	shr    eax,cl
  40d4b9:	sbb    eax,edi
  40d4bb:	(bad)  
  40d4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4bd:	add    ebx,esi
  40d4bf:	inc    esi
  40d4c0:	mov    dl,0xdc
  40d4c2:	jno    0x40d4d8
  40d4c4:	adc    edi,ecx
  40d4c6:	imul   edi,DWORD PTR [ebp-0x3],0x82886d7c
  40d4cd:	add    ecx,DWORD PTR [ecx-0x70]
  40d4d0:	mov    ds:0x86ec3144,eax
  40d4d5:	dec    eax
  40d4d6:	lock adc ebx,esi
  40d4d9:	fmul   DWORD PTR [ebx]
  40d4db:	sub    ebp,DWORD PTR [eax]
  40d4dd:	add    al,0x0
  40d4df:	add    BYTE PTR [ecx-0x686ccfce],cl
  40d4e5:	mov    ch,BYTE PTR [ebx]
  40d4e7:	xchg   esp,eax
  40d4e8:	mov    ebp,0x1933c4d6
  40d4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ee:	sub    eax,DWORD PTR [ebp+0x31]
  40d4f1:	in     al,dx
  40d4f2:	dec    esi
  40d4f3:	dec    eax
  40d4f4:	lock adc esp,DWORD PTR [esi+0x282b0bd8]
  40d4fb:	add    al,0x59
  40d4fd:	push   ss
  40d4fe:	xor    BYTE PTR [ebx-0x63dc75a1],dl
  40d504:	mov    bl,0xfe
  40d506:	jl     0x40d50b
  40d508:	(bad)
  40d50b:	adc    BYTE PTR [ecx+0x13],al
  40d50e:	std    
  40d50f:	inc    ebp
  40d510:	mov    dl,0xfe
  40d512:	jl     0x40d517
  40d514:	mov    ebp,0x3104d13f
  40d519:	imul   ebx,DWORD PTR [esi+0x410c9d92],0x37
  40d520:	cmp    DWORD PTR [ebx+0x4d],0xffffff92
  40d524:	popf   
  40d525:	add    BYTE PTR [ebp+0x18],0x39
  40d529:	ins    BYTE PTR es:[edi],dx
  40d52a:	xchg   ecx,eax
  40d52b:	xor    eax,0x35ff7c06
  40d530:	sbb    DWORD PTR [esi+edi*8-0x608c054c],eax
  40d537:	mov    ebx,0x94fe7ac3
  40d53c:	(bad)  
  40d53d:	jp     0x40d5b3
  40d53f:	loope  0x40d4fb
  40d541:	mov    al,ds:0xe51
  40d546:	ret    
  40d547:	jp     0x40d5bd
  40d549:	or     eax,0xfee800a3
  40d54e:	push   ds
  40d54f:	or     al,0xe8
  40d551:	xchg   edx,eax
  40d552:	add    al,0x7b
  40d554:	(bad)  
  40d555:	out    dx,al
  40d556:	push   ds
  40d557:	push   0x7b667de7
  40d55c:	(bad)  
  40d55d:	fidivr WORD PTR [esi]
  40d55f:	and    bh,0x65
  40d562:	data16 jnp 0x40d563
  40d565:	into   
  40d566:	ds test bh,ah
  40d569:	ins    DWORD PTR es:[edi],dx
  40d56a:	inc    esi
  40d56b:	jnp    0x40d56b
  40d56d:	mov    esi,0x35e76c1e
  40d572:	inc    esi
  40d573:	jnp    0x40d573
  40d575:	scas   al,BYTE PTR es:[edi]
  40d576:	push   ds
  40d577:	js     0x40d577
  40d579:	sbb    al,0x6d
  40d57b:	jae    0x40d56b
  40d57d:	cmp    eax,eax
  40d57f:	jp     0x40d5df
  40d581:	mov    al,ds:0x34001777
  40d586:	aam    0x6e
  40d588:	sub    BYTE PTR [ebp+0x12ffeda1],0xed
  40d58f:	jp     0x40d605
  40d591:	loope  0x40d52d
  40d593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d594:	push   ecx
  40d595:	outs   dx,BYTE PTR ds:[esi]
  40d596:	mov    al,ds:0x4f65448c
  40d59b:	adc    al,0x6a
  40d59d:	jmp    0xa8853bec
  40d5a2:	xor    ch,ah
  40d5a4:	(bad)  
  40d5a5:	call   0x12869dc
  40d5aa:	add    BYTE PTR [eax],al
  40d5ac:	aam    0x2e
  40d5ae:	(bad)  
  40d5af:	inc    DWORD PTR [ebx]
  40d5b1:	push   edi
  40d5b2:	jb     0x40d5d7
  40d5b4:	cwde   
  40d5b5:	sahf   
  40d5b6:	add    DWORD PTR [edi+0x47],ebx
  40d5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ba:	or     eax,eax
  40d5bc:	int3   
  40d5bd:	ins    DWORD PTR es:[edi],dx
  40d5be:	dec    esi
  40d5bf:	push   0xbeef16d8
  40d5c4:	mov    al,0xb9
  40d5c6:	inc    ebx
  40d5c7:	inc    ecx
  40d5c8:	enter  0xff46,0x75
  40d5cc:	rcr    BYTE PTR [esi-0x5c388611],0xe6
  40d5d3:	sbb    eax,0xfffda39d
  40d5d8:	cmp    eax,0xa075fd8b
  40d5dd:	sahf   
  40d5de:	mov    ss,WORD PTR [edx-0x79]
  40d5e1:	mov    ds:0x168cc2c7,eax
  40d5e6:	push   ebp
  40d5e7:	mov    edx,esp
  40d5e9:	pop    edx
  40d5eb:	cld    
  40d5ec:	das    
  40d5ed:	sbb    al,BYTE PTR [eax]
  40d5ef:	push   0x59
  40d5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f2:	jae    0x40d5fc
  40d5f4:	jo     0x40d655
  40d5f6:	push   eax
  40d5f7:	inc    edi
  40d5f9:	std    
  40d5fa:	inc    ebx
  40d5fb:	cld    
  40d5fc:	jecxz  0x40d647
  40d5fe:	jb     0x40d628
  40d600:	sbb    DWORD PTR [eax],edx
  40d602:	cmp    BYTE PTR [edi],0x48
  40d605:	and    al,BYTE PTR [eax+0x68]
  40d608:	mov    eax,0x2f0040d1
  40d60d:	cwde   
  40d60e:	jl     0x40d637
  40d610:	add    BYTE PTR [eax],al
  40d612:	pop    eax
  40d613:	push   ss
  40d614:	or     eax,eax
  40d616:	cmp    al,0x6f
  40d618:	push   ebp
  40d619:	call   0x401b07
  40d61e:	and    edx,DWORD PTR [esi+0x72]
  40d621:	sbb    eax,ebp
  40d623:	sbb    eax,0xd2310000
  40d628:	push   eax
  40d629:	addr16 pop ds
  40d62b:	mov    cl,0x41
  40d62d:	add    BYTE PTR [ecx-0x2e],ah
  40d630:	adc    eax,0x9eb1908
  40d635:	(bad)  
  40d636:	(bad)  
  40d637:	ror    DWORD PTR [ebx+0x53],cl
  40d63a:	imul   BYTE PTR [edx]
  40d63c:	(bad)  
  40d63d:	xor    dh,cl
  40d63f:	hlt    
  40d640:	(bad)  
  40d641:	(bad)  
  40d642:	out    0x1a,al
  40d644:	xchg   ebp,eax
  40d645:	lods   eax,DWORD PTR ds:[esi]
  40d646:	sbb    DWORD PTR [edx+0x15],ebp
  40d649:	rcl    dh,0xa0
  40d64c:	mov    ?,esi
  40d64e:	inc    esp
  40d64f:	sbb    DWORD PTR [edx-0x71859ce1],0x5e
  40d656:	call   0x5c40dd88
  40d65b:	neg    BYTE PTR [esi+0x366f7582]
  40d661:	push   0x31
  40d663:	in     eax,0x41
  40d665:	jmp    DWORD PTR [ebx+esi*2]
  40d668:	call   0xf488:0x8e4a00c1
  40d66f:	dec    esi
  40d670:	jp     0x40d6ae
  40d672:	std    
  40d673:	and    al,BYTE PTR [ebp+0x0]
  40d676:	add    BYTE PTR [eax],al
  40d678:	mov    cl,0x82
  40d67a:	add    dh,BYTE PTR [ecx+esi*8-0x2e]
  40d67e:	add    eax,0x356af046
  40d683:	call   0x4328bc
  40d688:	sub    ch,BYTE PTR [ebx-0x6d01dce9]
  40d68e:	rcr    DWORD PTR [ebp+0x4e],cl
  40d691:	xchg   edx,eax
  40d692:	cli    
  40d693:	mov    edi,0x683273bd
  40d698:	xor    DWORD PTR [ebx-0x63],ebp
  40d69b:	mov    ebp,0x414457c9
  40d6a0:	xor    DWORD PTR [ecx+edi*4],edx
  40d6a3:	mov    ds,WORD PTR [ebp-0x6611aef4]
  40d6a9:	jns    0x40d700
  40d6ab:	pushf  
  40d6ac:	push   0xa8f4de0
  40d6b1:	inc    ebp
  40d6b2:	sub    DWORD PTR [ebp+0x7],ecx
  40d6b5:	jns    0x40d6f4
  40d6b7:	pop    DWORD PTR [eax]
  40d6b9:	stos   BYTE PTR es:[edi],al
  40d6ba:	lock push es
  40d6bc:	jl     0x40d712
  40d6be:	ret    0xd6e2
  40d6c1:	pop    eax
  40d6c3:	mov    fs,edi
  40d6c5:	or     al,0x29
  40d6c7:	sbb    BYTE PTR ds:0x7045fdec,dl
  40d6cd:	adc    al,0xb9
  40d6cf:	fwait
  40d6d0:	sub    esp,ebx
  40d6d2:	add    eax,0xe8ec768f
  40d6d7:	add    ecx,esi
  40d6d9:	mov    ecx,0x80
  40d6de:	outs   dx,DWORD PTR ds:[esi]
  40d6df:	shr    eax,cl
  40d6e1:	xor    ebp,DWORD PTR [esi-0x6e640f02]
  40d6e7:	sti    
  40d6e8:	fisttp QWORD PTR [esi-0x70c2f96a]
  40d6ee:	xchg   edi,eax
  40d6ef:	in     eax,dx
  40d6f0:	or     DWORD PTR [ebp+eiz*8+0x3b8ec5db],ebx
  40d6f7:	push   esp
  40d6f8:	xor    al,0xe8
  40d6fa:	push   ss
  40d6fb:	sbb    DWORD PTR [edi],ebp
  40d6fd:	inc    ebp
  40d6fe:	xor    esp,esp
  40d700:	rcr    BYTE PTR [ecx+0x33a57907],0xd9
  40d707:	adc    ebp,ecx
  40d709:	sahf   
  40d70a:	pushf  
  40d70b:	jmp    0x40d6f0
  40d70d:	inc    ebp
  40d70e:	lock adc edi,DWORD PTR [ecx]
  40d711:	pop    ebp
  40d713:	or     edx,DWORD PTR [ecx+0x7d78be51]
  40d719:	fwait
  40d71a:	pop    esp
  40d71b:	in     al,0xff
  40d71d:	jne    0x40d6c6
  40d71f:	jns    0x40d795
  40d721:	ins    DWORD PTR es:[edi],dx
  40d722:	mov    edi,0x5d510800
  40d727:	in     eax,0xfe
  40d729:	pop    esi
  40d72a:	dec    edi
  40d72b:	dec    ebp
  40d72c:	shr    ebp,0x32
  40d72f:	loope  0x40d6bb
  40d731:	cmp    eax,0x74ef53b3
  40d736:	jns    0x40d6bc
  40d738:	dec    edi
  40d739:	sbb    DWORD PTR ds:[eax],ecx
  40d73c:	call   0xfeb81cdf
  40d741:	loop   0x40d743
  40d743:	add    dl,dh
  40d745:	add    esi,DWORD PTR [edx]
  40d747:	push   0x41
  40d749:	js     0x40d74c
  40d74b:	xchg   edi,eax
  40d74c:	ror    DWORD PTR [edx-0x6af3eebc],cl
  40d752:	aaa    
  40d753:	mov    ebp,0x61900d0
  40d758:	sub    DWORD PTR [edi+edi*8],esp
  40d75b:	je     0x40d717
  40d75d:	outs   dx,DWORD PTR ds:[esi]
  40d75e:	and    eax,0xfe76a799
  40d763:	je     0x40d723
  40d765:	jbe    0x40d7db
  40d767:	loope  0x40d71d
  40d769:	add    BYTE PTR [eax],cl
  40d76b:	rcr    DWORD PTR [edi-0x1c],1
  40d76e:	(bad)  
  40d76f:	(bad)  
  40d770:	push   ss
  40d771:	shr    bh,1
  40d773:	cmp    DWORD PTR [ebp-0x4b39a740],ebp
  40d779:	dec    esp
  40d77a:	shr    ebp,0x32
  40d77d:	loope  0x40d709
  40d77f:	lds    esi,FWORD PTR [eax+0x3543f753]
  40d785:	jmp    0x51e8:0xc3ea642
  40d78c:	and    eax,0xee60fe77
  40d791:	ja     0x40d7fc
  40d793:	jmp    0xa8ebc0
  40d798:	pop    ebp
  40d799:	rol    DWORD PTR [eax+0x0],1
  40d79c:	and    BYTE PTR [edx],dl
  40d79e:	add    BYTE PTR [eax],al
  40d7a0:	enter  0x7097,0x56
  40d7a4:	lahf   
  40d7a5:	mov    DWORD PTR [ecx],ecx
  40d7a7:	rol    BYTE PTR [eax],0x0
  40d7aa:	add    al,0x48
  40d7ac:	xchg   DWORD PTR [ebp-0x70],eax
  40d7af:	sbb    BYTE PTR [ecx+0x46],bh
  40d7b2:	leave  
  40d7b3:	adc    bh,bh
  40d7b5:	jne    0x40d817
  40d7b7:	cwde   
  40d7b8:	loopne 0x40d7df
  40d7ba:	sbb    BYTE PTR [ebx],dl
  40d7bc:	or     eax,eax
  40d7be:	les    esi,FWORD PTR [ebx-0x3]
  40d7c1:	jne    0x40d803
  40d7c3:	cwde   
  40d7c4:	add    DWORD PTR [ebp+0x1f],ebx
  40d7c7:	mov    DWORD PTR [esi+0x68],ecx
  40d7ca:	cmp    cl,BYTE PTR [esi+edi*1+0x0]
  40d7ce:	rcl    BYTE PTR [edx],0x0
  40d7d1:	out    dx,eax
  40d7d2:	jle    0x40d7ee
  40d7d4:	add    BYTE PTR [eax+0x3f],dl
  40d7d7:	pop    ds
  40d7d8:	or     al,ch
  40d7da:	and    BYTE PTR [eax],0xff
  40d7dd:	jmp    DWORD PTR [eax]
  40d7df:	imul   edx,DWORD PTR [ecx-0x1],0xf87387bf
  40d7e6:	xor    BYTE PTR [ecx-0x787000af],al
  40d7ec:	jae    0x40d7ea
  40d7ee:	jg     0x40d80d
  40d7f0:	or     al,ch
  40d7f2:	adc    al,BYTE PTR [ebx-0x1]
  40d7f5:	call   ecx
  40d7f7:	push   esp
  40d7f8:	add    al,BYTE PTR [eax]
  40d7fa:	and    eax,0xd483eafd
  40d7ff:	xchg   BYTE PTR [eax+0x0],ch
  40d802:	repnz retf 
  40d804:	(bad)  
  40d805:	jne    0x40d857
  40d807:	call   0x4587:0x878f502c
  40d80e:	add    BYTE PTR [eax],al
  40d810:	mov    esp,0x3100001a
  40d815:	mov    cs,WORD PTR [edi+eiz*2-0x43]
  40d819:	cs inc ebx
  40d81b:	add    cl,bl
  40d81d:	jmp    0x40d863
  40d81f:	inc    ecx
  40d820:	xor    esi,esi
  40d822:	adc    eax,0x13f64908
  40d827:	jmp    FWORD PTR [esi]
  40d829:	out    0x15,eax
  40d82b:	cld    
  40d82c:	es pop ecx
  40d82e:	cli    
  40d82f:	out    0x6e,eax
  40d831:	mov    ebx,0x29e8fe8b
  40d836:	pop    es
  40d837:	add    BYTE PTR [edx+esi*8-0x62],ah
  40d83b:	sub    ch,0xd3
  40d83e:	sbb    al,BYTE PTR [eax]
  40d840:	xor    esi,eax
  40d842:	dec    esp
  40d843:	(bad)  
  40d844:	jl     0x40d8b9
  40d846:	call   0x5cfe:0x8c267e42
  40d84d:	jg     0x40d7da
  40d84f:	je     0x40d87a
  40d851:	and    ebp,DWORD PTR [ecx+0x4e]
  40d854:	(bad)  
  40d855:	push   ds
  40d856:	mov    WORD PTR [ecx+eiz*1+0x6],?
  40d85a:	push   ss
  40d85b:	or     cl,bl
  40d85d:	(bad)  
  40d85e:	cmp    edi,edi
  40d860:	mov    esi,0xb6181476
  40d865:	clc    
  40d866:	idiv   dh
  40d868:	and    al,0x73
  40d86a:	call   0x6a67:0x8a6df654
  40d871:	sub    eax,0x45
  40d876:	xchg   esi,eax
  40d877:	fdiv   st,st(3)
  40d879:	out    0x54,eax
  40d87b:	adc    BYTE PTR [eax+eax*1],al
  40d87e:	cmp    ch,BYTE PTR [ebx-0x57f69af0]
  40d884:	inc    ecx
  40d885:	inc    ecx
  40d886:	xor    DWORD PTR [ebx+0xa],edx
  40d889:	and    esi,DWORD PTR [ecx]
  40d88b:	imul   edi,DWORD PTR [ebx+0x44],0x69
  40d88f:	adc    al,0x11
  40d891:	mov    ecx,0x8ae8d2f4
  40d896:	frstor [ebx]
  40d898:	add    DWORD PTR [ebx],0xfee91414
  40d89e:	xchg   BYTE PTR [eax],al
  40d8a0:	out    dx,eax
  40d8a1:	push   es
  40d8a2:	hlt    
  40d8a3:	jnp    0x40d914
  40d8a5:	inc    ecx
  40d8a6:	and    DWORD PTR [ebp-0x5],esi
  40d8a9:	repz push ss
  40d8ab:	xchg   edi,eax
  40d8ac:	add    DWORD PTR [ebx-0x749f6ed9],ecx
  40d8b2:	mov    ds:0x15417040,al
  40d8b7:	in     al,dx
  40d8b8:	out    0x3,eax
  40d8ba:	push   ds
  40d8bb:	mov    dh,0x4d
  40d8bd:	adc    DWORD PTR [ecx],edi
  40d8bf:	ins    BYTE PTR es:[edi],dx
  40d8c0:	xor    edi,DWORD PTR [edx]
  40d8c2:	(bad)  
  40d8c3:	je     0x40d902
  40d8c5:	adc    DWORD PTR ds:0xd6fbbb75,esp
  40d8cb:	das    
  40d8cc:	sahf   
  40d8cd:	mov    ah,bh
  40d8cf:	je     0x40d86c
  40d8d1:	xchg   edi,ebx
  40d8d3:	(bad)  
  40d8d4:	lock fwait
  40d8d6:	lahf   
  40d8d7:	lds    edx,FWORD PTR ds:0xcf00008b
  40d8dd:	(bad)  
  40d8de:	lock mov bh,BYTE PTR ds:0x29110620
  40d8e5:	ins    BYTE PTR es:[edi],dx
  40d8e6:	sbb    eax,0x1f74b63a
  40d8eb:	mov    BYTE PTR [edx+0x14],0x94
  40d8ef:	jle    0x40d88b
  40d8f1:	nop
  40d8f2:	lods   al,BYTE PTR ds:[esi]
  40d8f3:	mov    eax,DWORD PTR [ecx+edx*4]
  40d8f6:	sbb    edi,DWORD PTR [ecx+0x3e8d344]
  40d8fc:	add    eax,0x79c869f8
  40d901:	and    eax,0x310428
  40d906:	cmp    al,BYTE PTR [edi+0x3735]
  40d90c:	hlt    
  40d90d:	adc    eax,DWORD PTR [eax]
  40d90f:	xor    eax,0xa5444d47
  40d914:	xor    dl,BYTE PTR [eax+eax*1]
  40d917:	jmp    0xea38a88f
  40d91c:	xor    dl,BYTE PTR [eax+eax*1]
  40d91f:	pop    esp
  40d920:	icebp  
  40d921:	ja     0x40d972
  40d923:	je     0x40d916
  40d925:	jnp    0x40d976
  40d927:	adc    ebp,DWORD PTR ds:0x742f95ec
  40d92d:	adc    al,0xff
  40d92f:	aam    0xe5
  40d931:	inc    ecx
  40d932:	inc    ecx
  40d933:	jmp    0xaab48d57
  40d938:	scas   eax,DWORD PTR es:[edi]
  40d939:	lock imul ecx
  40d93c:	xor    DWORD PTR ds:[ebx-0x51ffff34],eax
  40d943:	jae    0x40d9b7
  40d945:	(bad)  
  40d946:	jg     0x40d930
  40d948:	sti    
  40d949:	push   edx
  40d94a:	or     dl,cl
  40d94c:	mov    bh,bh
  40d94e:	mov    ebx,0x402e17e9
  40d953:	adc    bh,bh
  40d955:	lahf   
  40d956:	fidiv  DWORD PTR [edx+0x75]
  40d959:	fldcw  WORD PTR [ebx-0x67fef818]
  40d95f:	jno    0x40d95f
  40d961:	push   cs
  40d962:	sbb    BYTE PTR [ebx+0x4c],dh
  40d965:	add    DWORD PTR [edi+0x296a0359],esi
  40d96b:	ins    BYTE PTR es:[edi],dx
  40d96c:	(bad)  
  40d96d:	jl     0x40d9a0
  40d96f:	xchg   edi,eax
  40d970:	cmp    eax,0xfe4b41e9
  40d975:	pop    esp
  40d976:	test   eax,0x7bac1472
  40d97b:	aam    0xff
  40d97d:	ss retf 0x355
  40d981:	jmp    0x12c78dd
  40d986:	or     edx,DWORD PTR [edx+esi*8+0x53]
  40d98a:	iret   
  40d98b:	xor    edi,eax
  40d98d:	add    BYTE PTR [eax+0x17],bl
  40d990:	add    bh,al
  40d992:	or     eax,0x48fffe84
  40d997:	pop    ss
  40d998:	push   DWORD PTR [ebp+0x58]
  40d99b:	in     al,dx
  40d99c:	inc    ebx
  40d99d:	cld    
  40d99e:	mov    DWORD PTR [ebx],ecx
  40d9a0:	cld    
  40d9a1:	push   0x58
  40d9a3:	adc    DWORD PTR [eax],eax
  40d9a5:	push   0x0
  40d9a7:	add    BYTE PTR [eax+0x11],cl
  40d9aa:	add    bh,bh
  40d9ac:	cmp    eax,0x1475fd9b
  40d9b1:	adc    DWORD PTR [eax],eax
  40d9b3:	push   0x18
  40d9b5:	(bad)
  40d9b9:	pop    ss
  40d9ba:	or     eax,eax
  40d9bc:	cld    
  40d9bd:	popa   
  40d9be:	dec    esi
  40d9bf:	push   eax
  40d9c0:	jo     0x40d9fc
  40d9c2:	push   ecx
  40d9c3:	push   DWORD PTR [edi-0x11]
  40d9c6:	inc    ebx
  40d9c7:	clc    
  40d9c8:	rcl    DWORD PTR [eax],1
  40d9ca:	add    BYTE PTR [edx+0x8],ch
  40d9cd:	push   DWORD PTR es:[ebp+0x20]
  40d9d1:	popf   
  40d9d2:	jae    0x40d9d0
  40d9d4:	pop    ss
  40d9d5:	and    ecx,DWORD PTR [edx+ebp*2]
  40d9d8:	enter  0x10,0xe8
  40d9dc:	outs   dx,BYTE PTR ds:[esi]
  40d9dd:	jp     0x40d9dd
  40d9df:	call   ebx
  40d9e1:	push   esi
  40d9e2:	jae    0x40d9f3
  40d9e4:	aaa    
  40d9e5:	and    edi,eax
  40d9e7:	call   0x3fffd8
  40d9ec:	rdpmc  
  40d9ee:	clc    
  40d9ef:	add    BYTE PTR [eax+0x15830016],bl
  40d9f5:	lahf   
  40d9f6:	(bad)  
  40d9f7:	jae    0x40da5f
  40d9f9:	popf   
  40d9fa:	jae    0x40da04
  40d9fc:	ja     0x40da1f
  40d9fe:	clc    
  40d9ff:	call   0x246f35
  40da04:	xchg   BYTE PTR [ebp-0x3e],dh
  40da07:	jae    0x40da47
  40da09:	or     eax,0x7489
  40da0e:	sub    DWORD PTR [ebp+0x3],eax
  40da11:	and    dh,BYTE PTR [ecx]
  40da13:	jge    0x40da3e
  40da15:	add    esi,DWORD PTR [eax-0xb]
  40da18:	stos   BYTE PTR es:[edi],al
  40da19:	jmp    0x58dc:0xccafd0b
  40da20:	sar    bh,0x4e
  40da23:	sub    eax,0x7d10ed9c
  40da28:	add    cl,BYTE PTR [ebx]
  40da2a:	jno    0x40da9c
  40da2c:	in     eax,dx
  40da2d:	dec    edi
  40da2e:	loope  0x40d9b4
  40da30:	nop
  40da31:	dec    edi
  40da32:	cs jmp 0x40daae
  40da35:	inc    esp
  40da36:	sbb    eax,0xa4ff3305
  40da3b:	iret   
  40da3c:	xor    ebp,eax
  40da3e:	lods   al,BYTE PTR ss:[esi]
  40da40:	xchg   esi,edi
  40da42:	sbb    al,BYTE PTR [edx+0x7b498042]
  40da48:	or     eax,0x8ab0fed1
  40da4d:	out    0xf0,eax
  40da4f:	mov    eax,DWORD PTR [edi-0x713f4502]
  40da55:	pop    edx
  40da56:	clc    
  40da57:	cmp    eax,0xe685fff7
  40da5c:	xchg   esi,eax
  40da5d:	sub    ch,0x27
  40da60:	xor    DWORD PTR [edi-0x4e],edx
  40da63:	dec    eax
  40da64:	lds    ebp,FWORD PTR [eax]
  40da66:	jo     0x40dae3
  40da68:	add    dh,BYTE PTR [ebp+0x37]
  40da6b:	mov    edx,0x7ff3c928
  40da70:	add    cl,BYTE PTR [ebp+0x6af40000]
  40da76:	xor    edi,edi
  40da78:	sbb    al,0x4f
  40da7a:	call   0x2b87:0xe6140730
  40da81:	push   esp
  40da82:	in     eax,dx
  40da83:	jg     0x40dae2
  40da85:	adc    ebp,ecx
  40da87:	add    esi,DWORD PTR [eax+0x3104ccef]
  40da8d:	add    al,0xe9
  40da8f:	div    BYTE PTR [ebx+0x3103e809]
  40da95:	jno    0x40dad2
  40da97:	mov    BYTE PTR [edi-0x19],ah
  40da9a:	mov    al,0x9c
  40da9c:	call   0xed54:0x2b87a5cb
  40daa3:	xor    BYTE PTR [edx],0x13
  40daa6:	jmp    0x8d2820ae
  40daab:	xchg   ebp,eax
  40daad:	imul   edx,DWORD PTR [eax],0x57
  40dab0:	in     al,dx
  40dab1:	shr    al,cl
  40dab3:	fwait
  40dab4:	add    esi,DWORD PTR [edx+0x75]
  40dab7:	xchg   DWORD PTR [ecx-0x5a78832a],edi
  40dabd:	jo     0x40db24
  40dabf:	adc    DWORD PTR [ecx],ebx
  40dac1:	cld    
  40dac2:	mov    BYTE PTR [esi],bh
  40dac4:	jo     0x40dada
  40dac6:	inc    ecx
  40dac7:	les    eax,FWORD PTR [ecx+esi*2]
  40daca:	dec    ebp
  40dacb:	jge    0x40db42
  40dacd:	jl     0x40db14
  40dacf:	adc    ebp,esi
  40dad1:	jo     0x40da86
  40dad3:	mov    edx,DWORD PTR [esi-0x53]
  40dad6:	scas   al,BYTE PTR es:[edi]
  40dad7:	inc    esp
  40dad8:	add    BYTE PTR [eax],al
  40dada:	xor    DWORD PTR [ebx+edi*2-0x7a],edi
  40dade:	fbstp  TBYTE PTR [eax+0x6f]
  40dae1:	inc    ecx
  40dae2:	int    0x94
  40dae4:	fwait
  40dae5:	xchg   edi,eax
  40dae6:	into   
  40dae7:	and    DWORD PTR [ebp+0x5d],ebp
  40daea:	(bad)  
  40daeb:	jo     0x40dad5
  40daed:	cmp    BYTE PTR ds:0xb2f6e87c,0x90
  40daf4:	call   0xffd60bfc
  40daf9:	jae    0x40dac1
  40dafb:	jo     0x40db0a
  40dafd:	and    BYTE PTR gs:[ecx-0x2],dh
  40db01:	jmp    0xd228c2b5
  40db06:	xor    DWORD PTR [ebx],0x0
  40db09:	jmp    0x6328c319
  40db0e:	mov    ah,0x9d
  40db10:	(bad)  
  40db11:	cwde   
  40db12:	xchg   ebp,eax
  40db13:	ret    
  40db14:	jmp    0x40f9:0x3bbf4f0f
  40db1b:	sbb    al,0x3c
  40db1d:	lock das 
  40db1f:	sbb    BYTE PTR [ecx+ebx*8],ch
  40db22:	mov    ebx,0x31282c14
  40db27:	push   ds
  40db28:	adc    BYTE PTR [ebp+0x6909e262],0xb6
  40db2f:	sub    esi,DWORD PTR [edi-0x14]
  40db32:	mov    dl,0x7c
  40db34:	das    
  40db35:	xchg   edx,eax
  40db36:	sub    al,0xf0
  40db38:	jmp    0x40db62
  40db3a:	lods   eax,DWORD PTR ds:[esi]
  40db3b:	push   ebx
  40db3c:	or     DWORD PTR [ecx+0x13d20000],ebp
  40db42:	or     ch,BYTE PTR ds:0x300adc78
  40db48:	and    DWORD PTR [esi+0x58],ebx
  40db4b:	pusha  
  40db4c:	dec    ecx
  40db4d:	push   eax
  40db4e:	(bad)  
  40db4f:	aam    0x9a
  40db51:	sahf   
  40db52:	inc    esp
  40db53:	dec    ecx
  40db54:	mov    bh,0xd8
  40db56:	xlat   BYTE PTR ds:[ebx]
  40db57:	jmp    0x6440ef8e
  40db5c:	jno    0x40dba6
  40db5e:	dec    edi
  40db5f:	ret    
  40db60:	xor    eax,0x3292fffa
  40db65:	cli    
  40db66:	call   DWORD PTR [edx+0x3544a132]
  40db6c:	add    ch,BYTE PTR [edi+0x14]
  40db6f:	int3   
  40db70:	fst    st(4)
  40db72:	(bad)  
  40db73:	inc    ebx
  40db75:	push   ebx
  40db76:	jb     0x40db9a
  40db78:	sbb    ebx,DWORD PTR [eax+ebx*8]
  40db7b:	add    BYTE PTR [edi+esi*2],ah
  40db7e:	std    
  40db7f:	jne    0x40dbc5
  40db81:	xchg   esi,eax
  40db82:	jae    0x40db5c
  40db84:	(bad)  
  40db85:	pop    ds
  40db86:	in     al,0xff
  40db88:	in     eax,0x8b
  40db8a:	std    
  40db8b:	jne    0x40db1d
  40db8d:	mov    edi,DWORD PTR [ebx-0x2669004]
  40db93:	jne    0x40db65
  40db95:	nop
  40db96:	xchg   esi,eax
  40db97:	and    BYTE PTR [eax+0x13],bl
  40db9a:	push   DWORD PTR [ebp+0x6c]
  40db9d:	nop
  40db9e:	js     0x40dbef
  40dba0:	(bad)  
  40dba1:	cdq    
  40dba2:	std    
  40dba3:	jne    0x40dba5
  40dba5:	add    al,al
  40dba7:	nop
  40dba8:	jo     0x40dbf9
  40dbaa:	scas   eax,DWORD PTR es:[edi]
  40dbab:	cdq    
  40dbac:	std    
  40dbad:	jne    0x40db63
  40dbaf:	nop
  40dbb0:	push   0x8b99af4f
  40dbb5:	inc    ebp
  40dbb6:	mov    eax,0x4590e827
  40dbbb:	cdq    
  40dbbc:	std    
  40dbbd:	pop    edi
  40dbbe:	ds stos DWORD PTR es:[edi],eax
  40dbc0:	ror    BYTE PTR [eax+ecx*1],0x3e
  40dbc4:	mov    ebp,esp
  40dbc6:	mov    edx,DWORD PTR [edx+edi*8+0x6a]
  40dbca:	sbb    BYTE PTR ds:0x6ae5ff45,cl
  40dbd0:	out    0x81,al
  40dbd2:	pushf  
  40dbd3:	xchg   edi,eax
  40dbd4:	std    
  40dbd5:	mov    ebp,eax
  40dbd7:	xchg   esi,eax
  40dbd8:	std    
  40dbd9:	jne    0x40dbbb
  40dbdb:	mov    ah,BYTE PTR [eax]
  40dbdd:	std    
  40dbde:	pop    ds
  40dbdf:	cdq    
  40dbe0:	push   0x51ee7005
  40dbe5:	dec    DWORD PTR [edi]
  40dbe7:	ins    DWORD PTR es:[edi],dx
  40dbe8:	mov    esi,0x6822ce74
  40dbed:	div    DWORD PTR [ecx]
  40dbef:	ds inc esp
  40dbf1:	add    BYTE PTR [ecx+0x7d],cl
  40dbf4:	add    ch,bh
  40dbf6:	ja     0x40db7c
  40dbf8:	jno    0x40dc3f
  40dbfa:	lock jl 0x40dc2f
  40dbfd:	call   FWORD PTR [esi*2+0x7e233d9a]
  40dc04:	and    edi,0x3c
  40dc07:	es test esi,edi
  40dc0a:	add    BYTE PTR [eax],al
  40dc0c:	mov    es,edi
  40dc0e:	xchg   esi,edi
  40dc10:	cld    
  40dc11:	je     0x40dbad
  40dc13:	xchg   ebp,ebp
  40dc15:	pop    ebp
  40dc16:	or     eax,0x73
  40dc19:	add    BYTE PTR [edx],0x55
  40dc1c:	mov    edx,0x65c37f60
  40dc21:	or     eax,0x36cb001a
  40dc26:	test   DWORD PTR [ecx+ebp*1-0x7b],esi
  40dc2a:	xlat   BYTE PTR ds:[ebx]
  40dc2b:	dec    ebx
  40dc2c:	dec    esi
  40dc2d:	lea    edi,[ecx+0x44]
  40dc30:	inc    ebp
  40dc31:	icebp  
  40dc32:	lds    esi,FWORD PTR [ebx+0x9]
  40dc35:	cmp    al,0x4
  40dc37:	xor    dh,0x7c
  40dc3a:	push   cs
  40dc3b:	push   ecx
  40dc3c:	cdq    
  40dc3d:	lea    edi,[ecx+eax*2]
  40dc40:	xor    DWORD PTR [esi],ecx
  40dc42:	pushf  
  40dc43:	jne    0x40dc95
  40dc45:	jnp    0x40dc49
  40dc47:	or     esi,ecx
  40dc49:	dec    edi
  40dc4a:	add    bl,ch
  40dc4c:	ds inc ebx
  40dc4e:	lods   al,BYTE PTR ds:[esi]
  40dc4f:	inc    ebp
  40dc50:	jo     0x40dccd
  40dc52:	sub    ebp,eax
  40dc54:	xchg   esp,eax
  40dc55:	sbb    al,0x4
  40dc57:	add    BYTE PTR [edx],ch
  40dc59:	cmp    ecx,DWORD PTR [edi]
  40dc5b:	and    eax,DWORD PTR [esi-0x19a8853d]
  40dc61:	es clc 
  40dc63:	mov    edi,0x68324465
  40dc68:	xor    DWORD PTR [ecx+ebp*8],edx
  40dc6b:	xchg   esp,eax
  40dc6c:	mov    esp,?
  40dc6e:	add    edi,DWORD PTR ds:0x14700000
  40dc74:	mov    ecx,0x11c4584
  40dc79:	or     eax,0x9b056d42
  40dc7e:	rcr    dh,1
  40dc80:	std    
  40dc81:	sub    DWORD PTR [edx-0x60b5d6df],0x6d
  40dc88:	in     eax,dx
  40dc89:	and    DWORD PTR [eax+0x40b20be],0xffffffbd
  40dc90:	(bad)  
  40dc92:	mov    ch,BYTE PTR [ebp+0x5b]
  40dc95:	or     al,0x89
  40dc97:	adc    eax,0xcd77831d
  40dc9c:	scas   eax,DWORD PTR es:[edi]
  40dc9d:	inc    esi
  40dc9e:	xor    dl,BYTE PTR [esp+edx*1]
  40dca1:	(bad)  
  40dca2:	pop    edx
  40dca3:	xchg   ebx,eax
  40dca4:	lods   al,BYTE PTR ds:[esi]
  40dca5:	push   esp
  40dca6:	ins    DWORD PTR es:[di],dx
  40dca8:	lods   eax,DWORD PTR ds:[esi]
  40dca9:	xchg   ecx,eax
  40dcaa:	in     eax,dx
  40dcab:	outs   dx,DWORD PTR ds:[esi]
  40dcac:	cmp    BYTE PTR [ebx-0x661fc3b],al
  40dcb2:	cmp    bh,BYTE PTR [esp+eiz*4+0x24]
  40dcb6:	xor    DWORD PTR [edx+eiz*8],edx
  40dcb9:	inc    ebx
  40dcba:	daa    
  40dcbb:	xchg   edi,eax
  40dcbc:	mov    ebx,0xa6143105
  40dcc1:	leave  
  40dcc2:	push   ds
  40dcc3:	adc    al,0xe9
  40dcc5:	add    esi,DWORD PTR [ecx]
  40dcc7:	push   ebp
  40dcc8:	and    esi,DWORD PTR [edi+edx*1+0x15]
  40dccc:	jmp    0xd35577d4
  40dcd1:	add    ebx,DWORD PTR [ebx+0x3c314]
  40dcd7:	add    BYTE PTR [esi+edx*8-0x695a2ba8],ch
  40dcde:	cmp    BYTE PTR [ebx-0x11],bh
  40dce1:	ins    BYTE PTR es:[edi],dx
  40dce2:	cwde   
  40dce3:	sbb    BYTE PTR [ebp+0x6c],0xff
  40dce7:	xor    eax,0x4fe768d8
  40dcec:	or     eax,0x72f20014
  40dcf1:	loope  0x40dcf7
  40dcf3:	adc    BYTE PTR [ebp+0x14],al
  40dcf6:	add    cl,ch
  40dcf8:	retf   0x2758
  40dcfb:	test   al,0x32
  40dcfd:	ins    DWORD PTR es:[edi],dx
  40dcfe:	je     0x40dcd9
  40dd00:	sbb    dl,BYTE PTR [eax+edx*2-0x2]
  40dd04:	mov    bl,0xdc
  40dd06:	mov    bl,BYTE PTR [ecx]
  40dd08:	rcl    BYTE PTR [edi+0x6db3f6ef],0x4f
  40dd0f:	cmp    ebx,DWORD PTR ds:0xb3de50a4
  40dd15:	fwait
  40dd16:	test   ch,al
  40dd18:	sti    
  40dd19:	ins    DWORD PTR es:[edi],dx
  40dd1a:	inc    cl
  40dd1c:	sub    ebx,esi
  40dd1e:	inc    dh
  40dd20:	rcl    edi,0xf3
  40dd23:	sbb    DWORD PTR [ebp-0x2f],edx
  40dd26:	inc    esi
  40dd27:	sub    BYTE PTR ds:0xdbbdb46d,dh
  40dd2d:	ins    DWORD PTR es:[edi],dx
  40dd2e:	(bad)  
  40dd2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd30:	dec    ecx
  40dd31:	sbb    al,ch
  40dd33:	icebp  
  40dd34:	pop    ebp
  40dd35:	ins    DWORD PTR es:[edi],dx
  40dd36:	(bad)  
  40dd37:	pusha  
  40dd38:	test   eax,0x8ef644
  40dd3d:	add    BYTE PTR [ebx+0x110fffa],dh
  40dd43:	rol    DWORD PTR [eax-0x17],cl
  40dd46:	mov    bl,0xa0
  40dd48:	jmp    0x40ddc8
  40dd4a:	mov    bl,0x6a
  40dd4c:	(bad)  
  40dd4d:	hlt    
  40dd4e:	es jl  0x40dd3d
  40dd51:	mov    ecx,0x64886ab3
  40dd56:	call   0x666c:0xc56fe62
  40dd5d:	mov    dh,0xeb
  40dd5f:	aam    0xff
  40dd61:	push   DWORD PTR [edi-0x54]
  40dd64:	jmp    0xd475:0xfd9627f7
  40dd6b:	call   eax
  40dd6d:	push   eax
  40dd6e:	pop    es
  40dd6f:	xchg   esi,eax
  40dd70:	xchg   DWORD PTR [ebp-0x211c4],eax
  40dd76:	push   ebp
  40dd77:	pushf  
  40dd78:	shl    bh,cl
  40dd7a:	daa    
  40dd7b:	xchg   esi,eax
  40dd7c:	dec    esi
  40dd7d:	push   0x3f5e37
  40dd82:	aaa    
  40dd83:	lods   al,BYTE PTR ds:[esi]
  40dd84:	jmp    0x9475:0xfd95a7f7
  40dd8b:	push   DWORD PTR [eax+0x9958750]
  40dd91:	shr    ah,0xe
  40dd94:	cmp    DWORD PTR [ebp-0x21244],0xffffff8c
  40dd9b:	bound  ecx,QWORD PTR [esi]
  40dd9d:	call   FWORD PTR [eax]
  40dd9f:	test   DWORD PTR [ebx-0x50ffff20],eax
  40dda5:	xchg   ebp,eax
  40dda6:	std    
  40dda7:	push   eax
  40dda8:	adc    BYTE PTR ds:0xf9a7ff4d,0x12
  40ddaf:	or     ecx,DWORD PTR [eax-0x5faffb94]
  40ddb5:	popa   
  40ddb6:	dec    ebx
  40ddb7:	jmp    DWORD PTR [edi-0x601f7c23]
  40ddbd:	xchg   ebp,eax
  40ddbe:	std    
  40ddbf:	adc    eax,0x6a001748
  40ddc4:	sbb    BYTE PTR [edi+0x5c],bh
  40ddc7:	inc    edi
  40ddc8:	pop    ecx
  40ddc9:	adc    bh,bh
  40ddcb:	mov    ch,0xb4
  40ddcd:	in     al,dx
  40ddce:	std    
  40ddcf:	inc    DWORD PTR [edi-0x1b17f59d]
  40ddd5:	inc    esi
  40ddd6:	std    
  40ddd7:	inc    DWORD PTR [ecx+0x31f7da93]
  40dddd:	ret    0x6980
  40dde0:	xor    DWORD PTR [ebp-0x4],edx
  40dde3:	inc    esi
  40dde4:	jo     0x40de63
  40dde6:	jg     0x40dd9c
  40dde8:	aad    0x21
  40ddea:	cmp    esi,0xe80ea7de
  40ddf0:	or     BYTE PTR [ebp-0x8470181],0x53
  40ddf7:	test   dh,0x9
  40ddfa:	test   DWORD PTR [ecx+ebx*8+0x31fe8109],edi
  40de01:	dec    edx
  40de02:	xchg   BYTE PTR [ebx+0x68027d31],dl
  40de08:	add    BYTE PTR [eax],al
  40de0a:	lods   al,BYTE PTR ds:[esi]
  40de0b:	mov    cl,0xc1
  40de0d:	jmp    FWORD PTR [ebp-0x69b08949]
  40de13:	pop    ds
  40de14:	pop    esp
  40de15:	test   BYTE PTR [esi+0x36b6a71],0x4a
  40de1c:	jg     0x40de28
  40de1e:	jno    0x40dde8
  40de20:	inc    DWORD PTR [edx+0x740240f4]
  40de26:	out    0xfd,eax
  40de28:	mov    ebp,0x7fa95ee3
  40de2d:	jmp    edx
  40de2f:	iret   
  40de30:	test   BYTE PTR [ecx+ecx*2+0x31fe7fa1],bh
  40de37:	or     eax,ebp
  40de39:	and    DWORD PTR [di+0x6f],edi
  40de3d:	mov    ebp,0xe80c073e
  40de42:	ret    
  40de43:	xor    eax,DWORD PTR [ecx+0x6b292efe]
  40de49:	mul    BYTE PTR [esi]
  40de4b:	jmp    0x40decc
  40de4d:	je     0x40de78
  40de4f:	xchg   ebx,eax
  40de50:	dec    eax
  40de51:	dec    eax
  40de52:	push   ss
  40de53:	sti    
  40de54:	jg     0x40de0a
  40de56:	adc    eax,0x7805e15
  40de5b:	push   0xffffffd3
  40de5d:	or     ecx,DWORD PTR [ecx]
  40de5f:	lods   eax,DWORD PTR ds:[esi]
  40de60:	lahf   
  40de61:	xor    bh,0x69
  40de64:	shl    DWORD PTR [edi-0x11],cl
  40de67:	lahf   
  40de68:	and    BYTE PTR [eax-0x19],bh
  40de6b:	imul   edi,DWORD PTR ds:0x360000f6,0xd7cab17c
  40de75:	imul   ebp,DWORD PTR ds:0x2561eeb6,0xf0dfc780
  40de7f:	imul   eax,DWORD PTR [edi],0xffffffdb
  40de82:	adc    eax,0x2c9fb780
  40de87:	js     0x40de38
  40de89:	imul   eax,DWORD PTR ds:0x717c2ef6,0xf5699fca
  40de93:	mov    ch,0x66
  40de95:	popa   
  40de96:	in     eax,dx
  40de97:	jg     0x40de28
  40de99:	fcomip st,st(0)
  40de9b:	imul   eax,DWORD PTR ds:0x7f7fdddb,0xffffff9f
  40dea2:	mov    al,0x77
  40dea4:	ja     0x40df0f
  40dea6:	rol    BYTE PTR [edi+0x7fc568fa],0x9d
  40dead:	jl     0x40de64
  40deaf:	jg     0x40df10
  40deb1:	jl     0x40dee7
  40deb3:	rcl    BYTE PTR [edi+0x69],1
  40deb6:	lods   eax,DWORD PTR ds:[esi]
  40deb7:	mov    ecx,0x7fa5616a
  40debc:	dec    esi
  40debd:	jecxz  0x40deeb
  40debf:	jg     0x40df00
  40dec1:	imul   ebx,DWORD PTR [ebx+0x68],0x6c8d693f
  40dec8:	xchg   esp,eax
  40dec9:	fadd   DWORD PTR [ebp-0x6760d881]
  40decf:	ja     0x40def0
  40ded1:	imul   edi,edi,0xfa000080
  40ded7:	fdiv   st(6),st
  40ded9:	outs   dx,BYTE PTR ds:[esi]
  40deda:	mov    fs,WORD PTR [eax+0x6a865eeb]
  40dee0:	(bad)  
  40dee1:	aam    0x2e
  40dee3:	imul   esi,DWORD PTR [ecx+eiz*8-0x76],0x6e4efc4f
  40deeb:	push   0xffffffb4
  40deed:	push   ebp
  40deee:	pop    esi
  40deef:	push   0xfffffffe
  40def1:	push   ecx
  40def2:	push   ds
  40def3:	fdivr  st,st(6)
  40def5:	ss push esi
  40def7:	shl    bh,1
  40def9:	inc    eax
  40defa:	imul   ebp,DWORD PTR [eax-0x2],0x26
  40defe:	inc    esi
  40deff:	loopne 0x40defc
  40df01:	adc    DWORD PTR [esi+eax*1+0x5365e900],ebp
  40df08:	or     ebp,ecx
  40df0a:	mov    DWORD PTR [ebp+0x74f96aeb],ebx
  40df10:	mov    WORD PTR [esi+ebx*1+0x6fc767d9],fs
  40df17:	sar    edi,cl
  40df19:	sbb    BYTE PTR [edi],0xcf
  40df1c:	inc    eax
  40df1d:	jmp    0xd14cbf29
  40df22:	push   edi
  40df23:	fsin   
  40df25:	(bad)  
  40df26:	sub    edx,DWORD PTR [ebx+esi*2+0x42]
  40df2a:	test   DWORD PTR [ebp-0x20d13a84],edx
  40df30:	pop    esi
  40df31:	mov    esi,0xb1449922
  40df36:	lods   eax,DWORD PTR ds:[esi]
  40df37:	out    0xf7,eax
  40df39:	mov    ch,0x0
  40df3b:	add    BYTE PTR ds:0x2e1f0014,dh
  40df41:	push   ecx
  40df42:	inc    esp
  40df43:	mov    eax,ds:0xe90013c6
  40df48:	retf   
  40df49:	sar    dh,cl
  40df4b:	adc    al,0xad
  40df4d:	out    dx,eax
  40df4e:	aaa    
  40df4f:	add    BYTE PTR [edi+0x51],dl
  40df52:	dec    BYTE PTR [ebp+edx*2-0x1b17b104]
  40df59:	or     DWORD PTR [eax],eax
  40df5b:	add    BYTE PTR [ebx+0x186a0acf],bl
  40df61:	test   DWORD PTR [ebx-0x1c],eax
  40df64:	mov    eax,0xc946ed7b
  40df69:	adc    edi,edi
  40df6b:	jne    0x40df79
  40df6d:	cld    
  40df6e:	fmul   QWORD PTR [esi+0x6f]
  40df71:	out    0x9,al
  40df73:	shl    BYTE PTR [edi+edi*8+0x13c9684f],0xef
  40df7b:	mov    esi,0x873e6a8
  40df80:	and    BYTE PTR [ebx+ebp*2-0x5304e001],dh
  40df87:	dec    ebx
  40df88:	pop    ds
  40df89:	out    0xfd,al
  40df8b:	dec    ebp
  40df8c:	inc    eax
  40df8d:	xchg   edx,eax
  40df8e:	jnp    0x40df88
  40df90:	cwde   
  40df91:	ins    BYTE PTR es:[edi],dx
  40df92:	mov    dh,0xe8
  40df94:	call   0x5240dcf2
  40df99:	aad    0x6
  40df9b:	add    BYTE PTR [ebp+0x83ea9a],ah
  40dfa1:	add    ah,dl
  40dfa3:	xchg   esp,eax
  40dfa4:	push   0xfd50e200
  40dfa9:	jne    0x40df3b
  40dfab:	sti    
  40dfac:	ror    BYTE PTR [eax+0x7f],0xe9
  40dfb0:	xchg   DWORD PTR [ebp+0x6c],eax
  40dfb3:	js     0x40dfc0
  40dfb5:	inc    edi
  40dfb6:	or     DWORD PTR [eax],edx
  40dfb8:	push   DWORD PTR ds:0x413b43
  40dfbe:	lahf   
  40dfbf:	pop    edi
  40dfc0:	push   es
  40dfc1:	call   0x3e746e
  40dfc6:	and    BYTE PTR [edi],dl
  40dfc8:	inc    edi
  40dfc9:	inc    ecx
  40dfca:	xor    DWORD PTR [ebp-0x16],edi
  40dfcd:	add    DWORD PTR [ecx],esi
  40dfcf:	jge    0x40df53
  40dfd1:	(bad)  
  40dfd2:	pushf  
  40dfd3:	gs push 0xffffffdd
  40dfd6:	sbb    eax,0x5cfe7ce6
  40dfdb:	add    ch,BYTE PTR [ebx]
  40dfdd:	inc    ecx
  40dfde:	xor    esi,esi
  40dfe0:	test   BYTE PTR [edi],0x19
  40dfe3:	add    al,0x7d
  40dfe5:	(bad)  
  40dfe6:	inc    BYTE PTR [eax+eax*1+0x0]
  40dfea:	xor    ebp,edi
  40dfec:	jl     0x40e062
  40dfee:	cmp    ebp,edx
  40dff0:	pop    ds
  40dff1:	jmp    esi
  40dff3:	int    0x7c
  40dff5:	je     0x40dfd4
  40dff7:	and    eax,0xe2c907f7
  40dffc:	retf   
  40dffd:	dec    dh
  40dfff:	xor    eax,DWORD PTR [edx+0x3]
  40e002:	xor    DWORD PTR [eax+0xeb87],ebp
  40e008:	mov    dl,0x30
  40e00a:	pusha  
  40e00b:	push   ebp
  40e00c:	pop    esi
  40e00d:	xchg   ebx,eax
  40e00e:	add    ch,BYTE PTR [edx-0x7]
  40e011:	adc    eax,0xb09907f7
  40e016:	retf   0x9efe
  40e019:	jecxz  0x40dfe1
  40e01b:	sti    
  40e01c:	mov    dl,0x9f
  40e01e:	add    DWORD PTR [edi],ebp
  40e020:	lock jl 0x40e025
  40e023:	shrd   DWORD PTR [edi-0x5ceffff],ebx,cl
  40e02a:	cmp    eax,0x43c4605
  40e02f:	add    BYTE PTR [esi],bh
  40e031:	icebp  
  40e032:	inc    edx
  40e033:	add    BYTE PTR [ecx],dh
  40e035:	jge    0x40e0b6
  40e037:	cmp    al,0x2c
  40e039:	push   ss
  40e03a:	ret    
  40e03b:	call   DWORD PTR [esi+0x6d]
  40e03e:	xchg   BYTE PTR [edx-0x7cfd82d0],dh
  40e044:	add    al,0x14
  40e046:	mov    eax,0xe913f02d
  40e04b:	or     al,0xad
  40e04d:	lods   eax,DWORD PTR ds:[esi]
  40e04e:	out    0x3,eax
  40e050:	xor    DWORD PTR [ecx-0x2caba935],edx
  40e056:	call   0x5fd10e5e
  40e05b:	add    dh,BYTE PTR [ecx]
  40e05d:	adc    al,0x6a
  40e05f:	ds call 0x3145089b
  40e065:	adc    eax,0x14318f6d
  40e06a:	jmp    0x3540e0ef
  40e06f:	inc    edi
  40e070:	push   es
  40e071:	ret    
  40e072:	out    dx,al
  40e073:	fld    QWORD PTR gs:[edi+0x3e91367]
  40e07a:	mov    dl,0x27
  40e07c:	lock sub al,0x70
  40e07f:	adc    al,0xe9
  40e081:	or     al,0xb5
  40e083:	loop   0x40e06c
  40e085:	add    esi,DWORD PTR [ecx]
  40e087:	cld    
  40e088:	add    esp,0x71
  40e08b:	adc    al,0x93
  40e08d:	add    esi,DWORD PTR [esi-0xfd31801]
  40e093:	adc    esp,DWORD PTR [eax-0x3a]
  40e096:	sahf   
  40e097:	xchg   ecx,eax
  40e098:	cmp    DWORD PTR [ebx-0x62],0x16
  40e09c:	(bad)  gs:[ecx]
  40e09f:	adc    al,0xe9
  40e0a1:	sub    BYTE PTR [edi+0x7ef5edbe],al
  40e0a7:	gs sti 
  40e0a9:	add    BYTE PTR [esi-0x2d],cl
  40e0ac:	call   0xdf5a673f
  40e0b1:	icebp  
  40e0b2:	xor    eax,0x3105167b
  40e0b7:	adc    al,0x72
  40e0b9:	shr    BYTE PTR [edx],cl
  40e0bb:	cdq    
  40e0bc:	xor    ch,ah
  40e0be:	stos   DWORD PTR es:[edi],eax
  40e0bf:	jmp    0xe2f3:0xd8bc44ff
  40e0c6:	retf   
  40e0c7:	adc    eax,0x14340484
  40e0cc:	add    BYTE PTR [eax-0x16ffecd5],dl
  40e0d2:	add    BYTE PTR [eax],al
  40e0d4:	sbb    al,BYTE PTR [ebp+0x652d2846]
  40e0da:	ss xchg ecx,eax
  40e0dc:	push   esp
  40e0dd:	or     BYTE PTR [eax],al
  40e0df:	jmp    0x6c4f350b
  40e0e4:	and    DWORD PTR [ebp-0x2],0x7e5afe9
  40e0eb:	jmp    0xea2a711b
  40e0f0:	xor    dl,BYTE PTR [edi+edi*8]
  40e0f3:	fidivr WORD PTR [edx]
  40e0f5:	jl     0x40e156
  40e0f7:	mov    ds:0xac88666b,eax
  40e0fc:	bound  esp,QWORD PTR [esi+0x76]
  40e0ff:	icebp  
  40e100:	pop    ebx
  40e101:	loopne 0x40e0f2
  40e103:	ss ret 0xe818
  40e107:	mul    DWORD PTR [di-0x2]
  40e10b:	xchg   ecx,eax
  40e10c:	mov    ebp,cs
  40e10e:	inc    eax
  40e10f:	jmp    0x230c14f
  40e114:	sbb    al,0xa
  40e116:	add    cl,ch
  40e118:	aaa    
  40e119:	push   esp
  40e11a:	push   cs
  40e11b:	ins    BYTE PTR es:[edi],dx
  40e11c:	loope  0x40e182
  40e11e:	(bad)  
  40e11f:	jmp    0xaccc45a8
  40e124:	sbb    dl,ch
  40e126:	mov    WORD PTR [esi+ecx*1-0x7316962b],fs
  40e12d:	fs push esp
  40e12f:	fisub  WORD PTR [ecx]
  40e131:	pop    ss
  40e132:	das    
  40e133:	sub    BYTE PTR ds:0xdec019,dh
  40e139:	add    dh,ah
  40e13b:	jge    0x40e13c
  40e13d:	dec    DWORD PTR [eax+0x10]
  40e140:	lea    eax,[ebp+0x6c]
  40e143:	inc    eax
  40e144:	std    
  40e145:	jne    0x40e1b7
  40e147:	jmp    0x3d8cdbf
  40e14c:	shr    DWORD PTR [esi],1
  40e14e:	or     DWORD PTR [eax],edx
  40e150:	or     eax,eax
  40e152:	sbb    al,0x68
  40e154:	mov    eax,DWORD PTR [ebp-0x48]
  40e157:	inc    edi
  40e158:	push   0x6a183200
  40e15d:	pop    es
  40e15e:	inc    edx
  40e15f:	sbb    bh,bh
  40e161:	jne    0x40e10f
  40e163:	ficom  WORD PTR [ebx]
  40e165:	aad    0xf6
  40e167:	pop    eax
  40e168:	dec    BYTE PTR [edx]
  40e16a:	fdiv   DWORD PTR [ebx+0x54]
  40e16d:	(bad)  
  40e16e:	(bad)  
  40e170:	out    0xe8,al
  40e172:	rcr    esi,0xfd
  40e175:	mov    DWORD PTR [ebp+0x78458bcb],ebx
  40e17b:	inc    edi
  40e17c:	std    
  40e17d:	jne    0x40e193
  40e17f:	jno    0x40e17f
  40e181:	imul   ecx,edi,0x8dfefe71
  40e187:	ret    
  40e188:	std    
  40e189:	adc    eax,0x412d1d
  40e18e:	ret    
  40e18f:	xlat   BYTE PTR ds:[ebx]
  40e190:	jb     0x40e1bb
  40e192:	mov    al,ds:0x6ef0017
  40e197:	fidiv  WORD PTR [ebx+0x8]
  40e19a:	xor    BYTE PTR [edi],ah
  40e19c:	inc    esi
  40e19d:	inc    DWORD PTR [eax]
  40e19f:	add    BYTE PTR [edi],dh
  40e1a1:	fidiv  WORD PTR [eax+ecx*1-0x69]
  40e1a5:	fs add bh,bh
  40e1a8:	or     eax,0xce58e80f
  40e1ad:	fdivp  st(5),st
  40e1af:	(bad)  
  40e1b0:	(bad)  
  40e1b2:	std    
  40e1b3:	jne    0x40e169
  40e1b5:	fnsave [ebx+0x8]
  40e1b8:	xor    DWORD PTR [ebp-0x33],edx
  40e1bb:	inc    ebp
  40e1bc:	push   dx
  40e1be:	js     0x40e234
  40e1c0:	jge    0x40e207
  40e1c2:	test   BYTE PTR [eax+0x56],cl
  40e1c5:	mov    ds:0xaa557478,al
  40e1ca:	push   cs
  40e1cb:	fst    DWORD PTR [edi]
  40e1cd:	sub    al,0x4
  40e1cf:	push   0x31
  40e1d1:	mov    edx,0x6836ebee
  40e1d6:	push   ebp
  40e1d7:	sub    eax,0x74776d70
  40e1dc:	and    DWORD PTR [ebp-0x65e1b720],edx
  40e1e2:	test   dh,al
  40e1e4:	inc    ecx
  40e1e5:	loop   0x40e1ad
  40e1e7:	repz mov dl,0x67
  40e1ea:	outs   dx,BYTE PTR ds:[esi]
  40e1eb:	push   DWORD PTR [edi]
  40e1ed:	clc    
  40e1ee:	imul   edi,ebp,0xfffffffe
  40e1f1:	stc    
  40e1f2:	push   0xffffffb4
  40e1f4:	test   ecx,0xca316978
  40e1fa:	out    dx,al
  40e1fb:	mul    esi
  40e1fd:	or     DWORD PTR [bx],ebp
  40e200:	jo     0x40e26f
  40e202:	ja     0x40e278
  40e204:	add    BYTE PTR [eax],al
  40e206:	aad    0x21
  40e208:	out    dx,eax
  40e209:	pop    es
  40e20a:	(bad)  
  40e20c:	sar    esi,0xc6
  40e20f:	xchg   ecx,eax
  40e210:	fmul   st,st(0)
  40e212:	repz jo 0x40e217
  40e215:	push   ebp
  40e216:	stos   BYTE PTR es:[edi],al
  40e217:	adc    BYTE PTR [ebx+0x79018dc3],al
  40e21d:	(bad)  
  40e21e:	mov    ah,0xb7
  40e220:	jbe    0x40e271
  40e222:	sahf   
  40e223:	fild   WORD PTR [esi]
  40e225:	call   FWORD PTR [esi+esi*4+0x29]
  40e229:	inc    ecx
  40e22a:	xor    DWORD PTR ds:0x6d311afd,edx
  40e230:	or     eax,eax
  40e232:	cs adc al,0x6c
  40e235:	test   al,0x31
  40e237:	adc    al,0xe9
  40e239:	inc    eax
  40e23a:	cmc    
  40e23b:	pop    ebx
  40e23c:	call   0xa6551344
  40e241:	mov    esi,0x3ed6262
  40e246:	xor    esi,ebp
  40e248:	call   0xe92d313a
  40e24d:	in     eax,dx
  40e24e:	inc    esi
  40e24f:	(bad)  
  40e250:	and    esi,DWORD PTR [eax-0x12]
  40e253:	nop
  40e254:	imul   ebp,DWORD PTR [edi+0x3f],0x62
  40e258:	popf   
  40e259:	shr    DWORD PTR [edi],cl
  40e25b:	call   0x60de5af0
  40e260:	add    dh,0x3b
  40e263:	adc    al,0xe9
  40e265:	or     al,0xf1
  40e267:	call   0x414d4f
  40e26c:	adc    BYTE PTR [ebx],0xe9
  40e26f:	add    ebx,DWORD PTR [ecx-0x13d3fb0]
  40e275:	(bad)  
  40e276:	fild   DWORD PTR [edi]
  40e278:	or     ebp,esp
  40e27a:	lods   al,BYTE PTR ds:[esi]
  40e27b:	js     0x40e26c
  40e27d:	les    esp,FWORD PTR [ecx+0x53]
  40e280:	mov    ch,0x97
  40e282:	push   esp
  40e283:	jo     0x40e264
  40e285:	popa   
  40e286:	cwde   
  40e287:	aad    0xce
  40e289:	hlt    
  40e28a:	lods   al,BYTE PTR ds:[esi]
  40e28b:	js     0x40e25c
  40e28d:	mov    ebp,DWORD PTR [ebx+0x57]
  40e290:	mov    edi,0x846b2d61
  40e295:	int3   
  40e296:	and    eax,0x91144878
  40e29b:	push   ecx
  40e29c:	not    edx
  40e29e:	call   0x1581c01b
  40e2a3:	js     0x40e244
  40e2a5:	popa   
  40e2a6:	mov    ebx,0xe8d349dc
  40e2ab:	imul   eax,esp,0xffffffcd
  40e2ae:	push   ebp
  40e2b0:	dec    BYTE PTR [ebx+0x620ef984]
  40e2b6:	(bad)  
  40e2b7:	push   ebx
  40e2b8:	sub    eax,0x7426daec
  40e2bd:	popa   
  40e2be:	std    
  40e2bf:	pushf  
  40e2c0:	or     DWORD PTR [edx-0x2],ebp
  40e2c3:	into   
  40e2c4:	out    0x27,al
  40e2c6:	pop    ebx
  40e2c7:	adc    BYTE PTR [ecx+eiz*2-0x1a],ch
  40e2cb:	popa   
  40e2cc:	jp     0x40e330
  40e2ce:	(bad)  
  40e2cf:	pusha  
  40e2d0:	add    BYTE PTR [eax],al
  40e2d2:	mov    al,0x6d
  40e2d4:	imul   BYTE PTR [esi+0x10ffeac6]
  40e2da:	int    0xd9
  40e2dc:	inc    eax
  40e2dd:	jmp    0x9f1c8b89
  40e2e2:	sahf   
  40e2e3:	(bad)  
  40e2e4:	(bad)  
  40e2e5:	aam    0xfb
  40e2e7:	sub    eax,DWORD PTR [ecx-0x17]
  40e2ea:	mov    bl,bl
  40e2ec:	dec    edx
  40e2ed:	jle    0x40e275
  40e2ef:	mov    WORD PTR [ecx+eax*4+0x3fe6296],es
  40e2f6:	xor    eax,0xedaee4ec
  40e2fb:	pusha  
  40e2fc:	std    
  40e2fd:	xchg   esp,eax
  40e2fe:	mov    DWORD PTR [edx-0x2],ebp
  40e301:	push   esi
  40e302:	pop    esi
  40e303:	sub    BYTE PTR [ebx+0x0],bl
  40e306:	hlt    
  40e307:	pusha  
  40e308:	out    0xa5,al
  40e30a:	jmp    0x40e36d
  40e30c:	(bad)  
  40e30d:	jo     0x40e2bf
  40e30f:	je     0x40e307
  40e311:	ss ds jmp 0x40e314
  40e315:	ror    BYTE PTR [eax-0x26],0x40
  40e319:	jmp    0x171c8b5d
  40e31e:	es (bad) 
  40e320:	(bad)  
  40e321:	fmul   QWORD PTR [ebx+0xae9412b]
  40e327:	pop    ds
  40e328:	dec    ebx
  40e329:	add    BYTE PTR [edi],ch
  40e32b:	jmp    0xf17968b7
  40e330:	std    
  40e331:	call   FWORD PTR [ebx]
  40e333:	fwait
  40e334:	jmp    0xfee9:0x8f0000f7
  40e33b:	jae    0x40e378
  40e33d:	jo     0x40e33d
  40e33f:	(bad)  
  40e340:	jg     0x40e2e8
  40e342:	std    
  40e343:	jne    0x40e395
  40e345:	in     al,dx
  40e346:	xchg   ecx,eax
  40e347:	inc    esp
  40e348:	outs   dx,DWORD PTR ds:[esi]
  40e349:	jmp    0xf1d9994b
  40e34e:	std    
  40e34f:	dec    DWORD PTR [edi+0x77e80663]
  40e355:	mov    al,ds:0xa38ffffd
  40e35a:	jmp    0x2075:0xfde98ff7
  40e361:	in     al,dx
  40e362:	xlat   BYTE PTR ds:[ebx]
  40e363:	inc    esp
  40e364:	mov    edi,0xb0b5fde6
  40e369:	out    dx,al
  40e36a:	std    
  40e36b:	jmp    FWORD PTR [edi-0x3c17f99c]
  40e371:	lahf   
  40e372:	std    
  40e373:	(bad)  
  40e374:	jg     0x40e31a
  40e376:	loop   0x40e36f
  40e378:	(bad)  
  40e379:	out    0xfd,al
  40e37b:	jne    0x40e37d
  40e37d:	in     al,dx
  40e37e:	mov    ebx,0xfde68f44
  40e383:	mov    ch,0x78
  40e385:	out    dx,al
  40e386:	std    
  40e387:	jmp    FWORD PTR [edi+0x64]
  40e38a:	push   es
  40e38b:	call   0x3e834f
  40e390:	shld   edx,ebx,0xf7
  40e394:	jmp    ebp
  40e396:	std    
  40e397:	jne    0x40e369
  40e399:	jmp    0x40e419
  40e39b:	inc    BYTE PTR [eax]
  40e39d:	add    BYTE PTR [edi],cl
  40e39f:	out    0xfd,al
  40e3a1:	mov    ch,0x6c
  40e3a3:	out    dx,al
  40e3a4:	std    
  40e3a5:	push   DWORD PTR [ecx]
  40e3a7:	adc    eax,0xe9e46aa
  40e3ac:	jbe    0x40e362
  40e3ae:	mov    eax,ds:0x99fe745e
  40e3b3:	int    0xbd
  40e3b5:	inc    BYTE PTR [esi-0x7914519a]
  40e3bb:	outs   dx,BYTE PTR ds:[esi]
  40e3bc:	je     0x40e3a5
  40e3be:	pushf  
  40e3bf:	cs jne 0x40e3c0
  40e3c2:	outs   dx,BYTE PTR ds:[esi]
  40e3c3:	mov    BYTE PTR [ebx-0xa],ch
  40e3c6:	inc    si
  40e3c8:	imul   ecx,DWORD PTR [ecx-0x18bb20a],0xffffff9c
  40e3cf:	push   ecx
  40e3d0:	ins    BYTE PTR es:[edi],dx
  40e3d1:	dec    BYTE PTR [esi+0x45]
  40e3d4:	hlt    
  40e3d5:	inc    esi
  40e3d6:	inc    esi
  40e3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3d8:	je     0x40e38e
  40e3da:	push   ecx
  40e3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3dc:	je     0x40e3dc
  40e3de:	dec    ecx
  40e3df:	add    DWORD PTR [ebp-0x4181d102],edi
  40e3e5:	neg    DWORD PTR [eax]
  40e3e7:	or     eax,0x8e1efe76
  40e3ec:	out    dx,al
  40e3ed:	sti    
  40e3ee:	or     edi,edx
  40e3f0:	sbb    al,BYTE PTR [eax]
  40e3f2:	xor    DWORD PTR [ecx+eax*2-0x76ffcef9],esp
  40e3f9:	jmp    0x40e3ad
  40e3fb:	mov    eax,0x43316977
  40e400:	leave  
  40e401:	inc    BYTE PTR [eax]
  40e403:	add    BYTE PTR [ebp+eiz*2+0x6a],ah
  40e407:	test   DWORD PTR [ebp-0x3a],ebp
  40e40a:	je     0x40e394
  40e40c:	je     0x40e3df
  40e40e:	jmp    0x40e3c6
  40e410:	outs   dx,BYTE PTR ds:[esi]
  40e411:	lods   al,BYTE PTR ds:[esi]
  40e412:	add    bh,bh
  40e414:	inc    esp
  40e415:	gs push 0x7
  40e418:	(bad)  
  40e419:	and    eax,0x3144fe75
  40e41e:	jne    0x40e494
  40e420:	sub    DWORD PTR [ecx+edx*1],edx
  40e423:	mov    bl,0xf2
  40e425:	pop    esi
  40e426:	sbb    eax,0xe917704b
  40e42b:	into   
  40e42c:	stos   DWORD PTR es:[edi],eax
  40e42d:	outs   dx,DWORD PTR ds:[esi]
  40e42e:	imul   eax,DWORD PTR [eax-0x5e],0x99077b5e
  40e435:	cmp    cl,ah
  40e437:	add    esi,DWORD PTR [ecx]
  40e439:	or     ebp,DWORD PTR [ecx]
  40e43b:	out    dx,eax
  40e43c:	xor    cl,BYTE PTR [ebp+0x2a]
  40e43f:	or     BYTE PTR [ecx],dh
  40e441:	pop    edi
  40e442:	pop    ebx
  40e443:	adc    al,0x59
  40e445:	or     BYTE PTR [ecx],al
  40e447:	add    al,0x31
  40e449:	or     ebp,DWORD PTR [ecx-0x55b2cd12]
  40e44f:	pop    es
  40e450:	xor    DWORD PTR [ebp-0x17b083d5],ecx
  40e456:	shr    BYTE PTR [ebx+0x1d],0xd7
  40e45a:	mov    ch,0x74
  40e45c:	test   eax,0xbd74acd8
  40e461:	pop    edi
  40e462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e463:	out    dx,al
  40e464:	es pop esi
  40e466:	adc    edx,DWORD PTR [eax+eax*1]
  40e469:	add    BYTE PTR [ecx],bl
  40e46b:	dec    edi
  40e46c:	cmp    dh,BYTE PTR [ebp+0x1f]
  40e46f:	or     ch,BYTE PTR [ecx+0x2b8b5bef]
  40e475:	jo     0x40e40f
  40e477:	adc    al,0x6c
  40e479:	mov    esi,0xee75c502
  40e47e:	cli    
  40e47f:	ins    BYTE PTR es:[edi],dx
  40e480:	mov    edx,0xf15df7e7
  40e485:	inc    ebx
  40e486:	bound  esi,QWORD PTR [esi]
  40e488:	rol    DWORD PTR [ebx],1
  40e48a:	inc    ecx
  40e48b:	ins    DWORD PTR es:[edi],dx
  40e48c:	xchg   esi,eax
  40e48d:	je     0x40e4f4
  40e48f:	or     al,0x41
  40e491:	shl    DWORD PTR [ebx+0x5d],cl
  40e494:	inc    ebp
  40e495:	je     0x40e4dc
  40e497:	adc    BYTE PTR [esi],bh
  40e499:	out    dx,al
  40e49a:	cs ins BYTE PTR es:[edi],dx
  40e49c:	dec    DWORD PTR [ebp+0x2efe5ef1]
  40e4a2:	(bad)  
  40e4a3:	popa   
  40e4a4:	(bad)  
  40e4a5:	pushf  
  40e4a6:	es pop esi
  40e4a8:	je     0x40e49b
  40e4aa:	sbb    dh,al
  40e4ac:	inc    edx
  40e4ad:	push   ss
  40e4ae:	and    eax,0xa0d745e
  40e4b3:	mov    bh,0x45
  40e4b5:	push   es
  40e4b6:	add    eax,0x32edc14c
  40e4bb:	(bad)  
  40e4bc:	mov    al,BYTE PTR ds:0x97d351b1
  40e4c2:	std    
  40e4c3:	out    0xb,eax
  40e4c5:	rcr    DWORD PTR [edx-0x36],1
  40e4c8:	(bad)  
  40e4c9:	fisub  WORD PTR [esi-0x63]
  40e4cc:	je     0x40e4ba
  40e4ce:	add    BYTE PTR [eax],al
  40e4d0:	or     BYTE PTR [ecx+eax*8-0x23],0x32
  40e4d5:	pop    DWORD PTR [ecx+edi*4+0x65]
  40e4d9:	pop    esi
  40e4da:	je     0x40e4c9
  40e4dc:	jmp    0xc009:0xc2b64bfb
  40e4e3:	fisubr WORD PTR [esi+0x32e8ff3d]
  40e4e9:	pop    ebp
  40e4ea:	je     0x40e489
  40e4ec:	test   DWORD PTR [eax-0x735d69bb],ebx
  40e4f2:	inc    esp
  40e4f3:	jge    0x40e497
  40e4f5:	call   0x69496bf5
  40e4fa:	(bad)  
  40e4fb:	hlt    
  40e4fc:	call   0x8a5e:0x822faa75
  40e503:	hlt    
  40e504:	push   esi
  40e505:	ins    BYTE PTR es:[edi],dx
  40e506:	mov    ds:0x681432e9,al
  40e50b:	sti    
  40e50c:	stos   BYTE PTR es:[edi],al
  40e50d:	sar    edi,cl
  40e50f:	mov    esi,0xe917657a
  40e514:	xor    cl,BYTE PTR [ecx]
  40e516:	rol    BYTE PTR [eax],0x8d
  40e519:	or     ebp,ecx
  40e51b:	cwde   
  40e51c:	fcom   DWORD PTR [eax]
  40e51e:	add    BYTE PTR [ebx+0x48103ff8],cl
  40e524:	mov    DWORD PTR [eax],edx
  40e526:	call   0x519464
  40e52b:	add    ecx,DWORD PTR [eax-0x21]
  40e52e:	jae    0x40e518
  40e530:	mov    al,0x36
  40e532:	dec    eax
  40e533:	inc    ecx
  40e534:	add    BYTE PTR [eax],al
  40e536:	mov    BYTE PTR [edx],bh
  40e538:	out    0xd3,al
  40e53a:	nop
  40e53b:	adc    BYTE PTR [eax],al
  40e53d:	or     ebx,DWORD PTR [eax+0x5b]
  40e540:	add    bl,ch
  40e542:	(bad)  
  40e543:	fimul  WORD PTR [esi]
  40e545:	mov    BYTE PTR [ebp+0x7c4587f5],bl
  40e54b:	cmp    BYTE PTR [edx],ah
  40e54d:	dec    eax
  40e54e:	sbb    DWORD PTR [eax],ebx
  40e550:	push   esi
  40e551:	call   0x40ee18
  40e556:	push   ebx
  40e557:	shl    BYTE PTR [ebx+0x2],1
  40e55a:	arpl   WORD PTR [ebx-0x77],ax
  40e55d:	lock loopne 0x40e58b
  40e560:	dec    eax
  40e561:	inc    ecx
  40e562:	dec    eax
  40e563:	mov    eax,0x104816fc
  40e568:	add    esi,eax
  40e56a:	mov    eax,ds:0xfa68da5c
  40e56f:	lahf   
  40e570:	aas    
  40e571:	add    BYTE PTR [esi-0x48],bl
  40e574:	xchg   esi,eax
  40e575:	sbb    BYTE PTR [eax],cl
  40e577:	sbb    BYTE PTR [ebx],cl
  40e579:	ror    BYTE PTR ds:0x823beb12,0x7
  40e580:	mov    BYTE PTR [ebp-0x61],dl
  40e583:	fadd   DWORD PTR [ebx-0x28]
  40e586:	xchg   ebx,eax
  40e587:	dec    esp
  40e588:	loop   0x40e550
  40e58a:	fcom   DWORD PTR [edi]
  40e58c:	mov    eax,DWORD PTR [ebp+0x70]
  40e58f:	int    0xfe
  40e591:	push   DWORD PTR [ecx]
  40e593:	ret    0xdbf7
  40e596:	(bad)  
  40e597:	inc    eax
  40e598:	pop    edx
  40e599:	inc    BYTE PTR [eax]
  40e59b:	add    BYTE PTR [ebp+eiz*2+0x5a],al
  40e59f:	xchg   edx,eax
  40e5a0:	(bad)  
  40e5a1:	sbb    dh,BYTE PTR [edx-0x77]
  40e5a4:	fs into 
  40e5a6:	jge    0x40e5ec
  40e5a8:	int    0xf5
  40e5aa:	adc    cl,BYTE PTR [edx+0x447e1a04]
  40e5b0:	mov    ebp,esp
  40e5b2:	adc    al,BYTE PTR [eax-0x7afe92a1]
  40e5b8:	std    
  40e5b9:	or     DWORD PTR [edx-0x2],esi
  40e5bc:	mov    ds,eax
  40e5be:	pop    esi
  40e5bf:	out    0xd0,eax
  40e5c1:	mov    al,0x71
  40e5c3:	(bad)  
  40e5c4:	lods   al,BYTE PTR ds:[esi]
  40e5c5:	test   al,0x72
  40e5c7:	dec    edi
  40e5c8:	mov    DWORD PTR [edx],esi
  40e5ca:	mov    esi,0x3466efe
  40e5cf:	pop    esi
  40e5d0:	js     0x40e581
  40e5d2:	(bad)  
  40e5d3:	inc    DWORD PTR [esi+esi*8]
  40e5d6:	pop    edi
  40e5d7:	(bad)  
  40e5d8:	fdivr  QWORD PTR [eax]
  40e5da:	pop    edx
  40e5db:	aam    0xf8
  40e5dd:	push   ecx
  40e5de:	jo     0x40e5ea
  40e5e0:	jno    0x40e603
  40e5e2:	sbb    ebp,DWORD PTR [eax+0x44]
  40e5e5:	sub    al,bl
  40e5e7:	jmp    esi
  40e5e9:	push   esp
  40e5ea:	fisttp QWORD PTR [eax+0x2e]
  40e5ed:	mov    dl,0xd3
  40e5ef:	addr16 aaa 
  40e5f1:	lahf   
  40e5f2:	ret    
  40e5f3:	call   DWORD PTR [esi-0x2810fd93]
  40e5f9:	adc    al,0xa
  40e5fb:	dec    eax
  40e5fc:	jo     0x40e66b
  40e5fe:	sar    dh,cl
  40e600:	add    BYTE PTR [eax],al
  40e602:	jl     0x40e669
  40e604:	pop    edx
  40e605:	or     DWORD PTR [ecx+0x58e770e2],0xf8fe7130
  40e60f:	adc    ebp,DWORD PTR [ebx]
  40e611:	cld    
  40e612:	out    0xbf,al
  40e614:	jno    0x40e676
  40e616:	mov    bl,0x4f
  40e618:	push   esp
  40e619:	(bad)  
  40e61b:	in     al,dx
  40e61c:	mov    ds:0x510c4570,al
  40e621:	in     eax,dx
  40e622:	jo     0x40e67f
  40e624:	cmp    eax,0xc258757b
  40e629:	or     eax,0x5be0e0b6
  40e62e:	aad    0x5a
  40e630:	and    eax,0x1e371871
  40e635:	div    DWORD PTR [esi]
  40e637:	ins    BYTE PTR es:[edi],dx
  40e638:	jno    0x40e6ab
  40e63a:	xchg   edi,eax
  40e63b:	pop    edx
  40e63c:	or     BYTE PTR [edi],0x8e
  40e63f:	loopne 0x40e631
  40e641:	pop    ebx
  40e642:	mov    eax,ds:0x1670fd5a
  40e647:	adc    al,0xe9
  40e649:	pusha  
  40e64a:	mov    ah,0xeb
  40e64c:	call   0x5154d80c
  40e651:	ja     0x40e642
  40e653:	aam    0xe8
  40e655:	jo     0x40e63c
  40e657:	or     eax,ecx
  40e659:	es retf 
  40e65b:	pop    edx
  40e65c:	int    0x70
  40e65e:	lds    edx,FWORD PTR [edi-0x3b]
  40e661:	imul   BYTE PTR [esi]
  40e663:	ins    BYTE PTR es:[edi],dx
  40e664:	mov    BYTE PTR ds:[eax],0x0
  40e668:	aas    
  40e669:	pop    edx
  40e66a:	lahf   
  40e66b:	inc    ebp
  40e66c:	xor    dl,BYTE PTR [esp+edx*1]
  40e66f:	jge    0x40e68b
  40e671:	xchg   esp,eax
  40e672:	lods   al,BYTE PTR ds:[esi]
  40e673:	dec    ebx
  40e674:	pop    ds
  40e675:	pop    edx
  40e676:	popf   
  40e677:	jle    0x40e6ee
  40e679:	pop    eax
  40e67a:	cmp    BYTE PTR [ecx-0x63],dh
  40e67d:	or     BYTE PTR [esi+0x2c6c36f6],cl
  40e683:	sbb    DWORD PTR [ecx],esi
  40e685:	adc    al,0xf2
  40e687:	inc    ebx
  40e688:	das    
  40e689:	(bad)  
  40e68a:	jmp    FWORD PTR [eax-0x59ffebcd]
  40e690:	mul    DWORD PTR [ecx-0x1]
  40e693:	call   0xa507faca
  40e698:	pop    dx
  40e69a:	push   es
  40e69b:	jmp    0xc340d4d2
  40e6a0:	xor    ch,dh
  40e6a2:	call   edx
  40e6a4:	xor    al,BYTE PTR [edi-0x771dcabc]
  40e6aa:	test   BYTE PTR ds:0x99fe5a39,bh
  40e6b0:	and    eax,esp
  40e6b2:	mul    DWORD PTR [esi]
  40e6b4:	lahf   
  40e6b5:	pop    ebp
  40e6b6:	out    0xf7,eax
  40e6b8:	cmp    DWORD PTR [eax+eax*1],edx
  40e6bb:	loop   0x40e6af
  40e6bd:	in     al,0x4
  40e6bf:	add    BYTE PTR [ebp+0x6ae90014],dh
  40e6c5:	dec    ebp
  40e6c6:	daa    
  40e6c7:	test   al,0x32
  40e6c9:	pop    ecx
  40e6ca:	je     0x40e6b1
  40e6cc:	add    BYTE PTR [eax],al
  40e6ce:	ficomp DWORD PTR [ebx]
  40e6d0:	dec    eax
  40e6d1:	out    dx,al
  40e6d2:	fmulp  st(0),st
  40e6d4:	mov    bh,BYTE PTR [ecx-0x290c6f50]
  40e6da:	into   
  40e6db:	pop    ecx
  40e6dc:	dec    edi
  40e6dd:	cmp    esi,ebp
  40e6df:	sub    ecx,DWORD PTR [eax-0x32]
  40e6e2:	fimul  WORD PTR [ebx+0x59bea184]
  40e6e8:	(bad)  
  40e6e9:	ror    DWORD PTR [esi-0x2b],1
  40e6ec:	(bad)  
  40e6ed:	mov    dh,0x5b
  40e6ef:	pop    ecx
  40e6f0:	sbb    bp,bp
  40e6f3:	sar    edi,cl
  40e6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f6:	call   0x8edfdd3b
  40e6fb:	pop    edx
  40e6fc:	je     0x40e6df
  40e6fe:	jp     0x40e693
  40e700:	inc    esi
  40e701:	mov    ds,WORD PTR [esi-0x77ff7b74]
  40e707:	loope  0x40e706
  40e709:	jmp    DWORD PTR [edx]
  40e70b:	adc    BYTE PTR [eax+0x59],ch
  40e70e:	push   eax
  40e70f:	dec    edi
  40e710:	(bad)  
  40e711:	(bad)  
  40e712:	and    eax,0x4ffff5c8
  40e717:	jmp    0x71c0ef8f
  40e71c:	inc    ebp
  40e71d:	(bad)  
  40e71e:	jg     0x40e6f7
  40e720:	sub    esp,0x67
  40e723:	jmp    0x3d195225
  40e728:	pusha  
  40e729:	dec    eax
  40e72a:	mov    DWORD PTR [edi+edi*8],edx
  40e72d:	mov    ch,0x20
  40e72f:	loope  0x40e72e
  40e731:	inc    DWORD PTR [eax]
  40e733:	add    BYTE PTR [edi+0x5b],bl
  40e736:	push   es
  40e737:	call   0x3e3918
  40e73c:	and    DWORD PTR [ebx-0x16c0081a],ecx
  40e742:	mov    eax,DWORD PTR [ebp-0x21ea4]
  40e748:	test   al,0x3c
  40e74a:	imul   ecx,DWORD PTR [eax-0x37],0x20b5ff14
  40e751:	loope  0x40e750
  40e753:	call   FWORD PTR [edi+0x5b]
  40e756:	push   es
  40e757:	call   0x3e3898
  40e75c:	loope  0x40e6e9
  40e75e:	loop   0x40e757
  40e760:	jg     0x40e74b
  40e762:	push   0x4661f000
  40e767:	inc    ecx
  40e768:	pop    eax
  40e769:	jmp    0xe9c8c021
  40e76e:	std    
  40e76f:	push   ebp
  40e771:	push   edi
  40e772:	out    0x11,al
  40e774:	push   edi
  40e775:	out    0xfd,eax
  40e777:	mov    DWORD PTR [ebp-0x40000a0d],edx
  40e77d:	xchg   edx,eax
  40e77e:	mov    ebx,0x6d7631f0
  40e783:	(bad)  
  40e784:	xor    DWORD PTR [ecx],eax
  40e786:	fild   DWORD PTR [edx-0x18a7e3c]
  40e78c:	(bad)  
  40e78d:	ins    DWORD PTR es:[edi],dx
  40e78e:	mul    BYTE PTR [ecx-0x4e]
  40e791:	and    BYTE PTR [ebx-0xa],bl
  40e794:	out    dx,al
  40e795:	out    0x2,al
  40e797:	je     0x40e799
  40e799:	add    BYTE PTR [eax-0x31fffdbb],cl
  40e79f:	ja     0x40e80e
  40e7a1:	je     0x40e7e4
  40e7a3:	aad    0xd6
  40e7a5:	aas    
  40e7a6:	into   
  40e7a7:	(bad)  
  40e7a8:	ins    DWORD PTR es:[edi],dx
  40e7a9:	mov    ah,0xc1
  40e7ab:	push   ss
  40e7ac:	outs   dx,BYTE PTR ds:[esi]
  40e7ad:	(bad)  
  40e7ae:	mov    esi,0x89e812a0
  40e7b3:	lods   eax,DWORD PTR ds:[esi]
  40e7b4:	ins    DWORD PTR es:[edi],dx
  40e7b5:	(bad)  
  40e7b6:	scas   al,BYTE PTR es:[edi]
  40e7b7:	loopne 0x40e817
  40e7b9:	mul    BYTE PTR [esi+0x41746e2e]
  40e7bf:	add    eax,0xfe963f89
  40e7c4:	ins    DWORD PTR es:[edi],dx
  40e7c5:	mov    ah,0x99
  40e7c7:	(bad)  
  40e7c8:	ins    DWORD PTR es:[edi],dx
  40e7c9:	inc    BYTE PTR [esi-0x5217ed28]
  40e7cf:	lods   eax,DWORD PTR ds:[esi]
  40e7d0:	ins    DWORD PTR es:[edi],dx
  40e7d1:	(bad)  
  40e7d2:	jbe    0x40e7ec
  40e7d4:	dec    edi
  40e7d5:	imul   BYTE PTR [esi+0x66]
  40e7d8:	ins    BYTE PTR es:[edi],dx
  40e7d9:	mov    ah,0x4d
  40e7db:	ss ins BYTE PTR es:[edi],dx
  40e7dd:	(bad)  
  40e7de:	pop    esi
  40e7df:	rcl    BYTE PTR [ebx],0xe8
  40e7e2:	in     eax,0x2c
  40e7e4:	ins    DWORD PTR es:[edi],dx
  40e7e5:	dec    BYTE PTR [esi-0x80]
  40e7e8:	arpl   si,si
  40e7ea:	inc    esi
  40e7eb:	dec    esi
  40e7ec:	ins    BYTE PTR es:[edi],dx
  40e7ed:	je     0x40e810
  40e7ef:	inc    ebp
  40e7f0:	fnstcw WORD PTR [edi]
  40e7f2:	ss sahf 
  40e7f4:	ins    BYTE PTR es:[edi],dx
  40e7f5:	je     0x40e838
  40e7f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7f8:	mov    dh,0xd7
  40e7fa:	push   ds
  40e7fb:	adc    al,0xa6
  40e7fd:	ins    DWORD PTR es:[edi],dx
  40e7fe:	add    BYTE PTR [eax],al
  40e800:	pop    ds
  40e801:	loope  0x40e7f3
  40e803:	pop    ebx
  40e804:	mov    al,ds:0xf6d9556
  40e809:	mov    eax,ds:0x570775b0
  40e80e:	nop
  40e80f:	loope  0x40e884
  40e811:	push   edi
  40e812:	jge    0x40e881
  40e814:	mov    ebp,0xef6d7d63
  40e819:	imul   edx,DWORD PTR [eax],0xffffffc1
  40e81c:	out    0x56,eax
  40e81e:	gs mov bh,0xca
  40e821:	pop    esi
  40e822:	pop    ebp
  40e823:	ins    DWORD PTR es:[edi],dx
  40e824:	into   
  40e825:	enter  0x6ca9,0xcf
  40e829:	push   esi
  40e82a:	xchg   ebx,eax
  40e82b:	pop    esp
  40e82c:	mov    edi,0x705c4556
  40e831:	sar    DWORD PTR ds:0x4ca0b76d,cl
  40e837:	jne    0x40e7e8
  40e839:	push   esi
  40e83a:	inc    eax
  40e83b:	xor    eax,0x6d2556f2
  40e840:	in     eax,0x73
  40e842:	adc    eax,0xc46b976d
  40e847:	ror    BYTE PTR [edi+0x7ec70d56],0x6c
  40e84e:	mov    ch,0x6d
  40e850:	jg     0x40e8a8
  40e852:	std    
  40e853:	idiv   BYTE PTR [edx+0x6b]
  40e856:	jle    0x40e86e
  40e858:	xor    DWORD PTR [eax+eiz*1],edx
  40e85b:	inc    edx
  40e85c:	cmp    dl,BYTE PTR [esp+edi*1]
  40e85f:	jns    0x40e8ab
  40e861:	xchg   edx,eax
  40e862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e863:	outs   dx,DWORD PTR ds:[esi]
  40e864:	add    BYTE PTR [eax],al
  40e866:	enter  0x4313,0xb9
  40e86a:	dec    edi
  40e86b:	loopne 0x40e84d
  40e86d:	pop    ebx
  40e86e:	add    al,0xd4
  40e870:	lds    ebp,FWORD PTR [ecx+ebp*4-0x30]
  40e874:	mov    esp,0xbbd6c
  40e879:	inc    ecx
  40e87a:	push   ecx
  40e87b:	int3   
  40e87c:	inc    eax
  40e87d:	jmp    0xd09c0917
  40e882:	repz push ebp
  40e884:	out    0x95,al
  40e886:	xchg   DWORD PTR [esi-0x2],edx
  40e889:	xchg   esi,eax
  40e88a:	pop    es
  40e88b:	push   cs
  40e88c:	push   0xffd4cabd
  40e891:	adc    BYTE PTR [ebx],dh
  40e893:	adc    al,0x0
  40e895:	imul   ebx,DWORD PTR [edx+0x73],0x565d76fc
  40e89c:	je     0x40e90b
  40e89e:	push   ebp
  40e89f:	loopne 0x40e8a8
  40e8a1:	push   ecx
  40e8a2:	add    edx,DWORD PTR [esi]
  40e8a4:	call   FWORD PTR [esi+0x1b]
  40e8a7:	push   ebx
  40e8a8:	add    ebp,ecx
  40e8aa:	out    0x8a,eax
  40e8ac:	jmp    0x40e918
  40e8ae:	outs   dx,BYTE PTR ds:[esi]
  40e8af:	pop    ecx
  40e8b0:	imul   ebp,ecx,0xb4fec9d8
  40e8b6:	mov    edx,0x1df6f46d
  40e8bb:	push   esi
  40e8bc:	mov    BYTE PTR [esi+edx*1-0x2170013],ah
  40e8c3:	xchg   esi,eax
  40e8c4:	addr16 push 0xffffffda
  40e8c7:	aam    0xff
  40e8c9:	add    BYTE PTR [eax],0x0
  40e8cc:	or     al,0xcd
  40e8ce:	inc    eax
  40e8cf:	jmp    0x1148c8e9
  40e8d4:	iret   
  40e8d5:	out    dx,al
  40e8d6:	(bad)  
  40e8d7:	dec    BYTE PTR [edx]
  40e8d9:	loopne 0x40e8d6
  40e8db:	mul    BYTE PTR [ebp+ecx*1-0x18]
  40e8df:	xlat   BYTE PTR ds:[ebx]
  40e8e0:	jb     0x40e938
  40e8e2:	(bad)  
  40e8e3:	mov    al,0xf7
  40e8e5:	adc    BYTE PTR [eax],al
  40e8e7:	xor    al,0xd6
  40e8e9:	push   0x5de5ad80
  40e8ee:	dec    dh
  40e8f0:	enter  0xfbcf,0x0
  40e8f4:	sbb    cl,ch
  40e8f6:	jae    0x40e904
  40e8f8:	ja     0x40e95d
  40e8fa:	push   es
  40e8fb:	call   0x40ecc4
  40e900:	adc    edx,ecx
  40e902:	or     eax,0xf1d85
  40e907:	add    bh,cl
  40e909:	push   edx
  40e90a:	test   BYTE PTR [eax],0x18
  40e90d:	adc    DWORD PTR [eax],eax
  40e90f:	(bad)  
  40e910:	dec    ebp
  40e911:	in     al,0xfd
  40e913:	pop    es
  40e914:	or     BYTE PTR [ecx],dl
  40e916:	push   0x0
  40e918:	and    dl,BYTE PTR [eax]
  40e91a:	push   0x0
  40e91c:	xor    dl,BYTE PTR [eax]
  40e91e:	lea    eax,[ebp+0x5c]
  40e921:	inc    eax
  40e922:	mov    eax,DWORD PTR [ebp-0x21e84]
  40e928:	cwde   
  40e929:	jmp    0x63a8e1a1
  40e92e:	cli    
  40e92f:	call   0x486e934
  40e934:	add    BYTE PTR [eax],al
  40e936:	ret    
  40e937:	shl    BYTE PTR [edx+0x5],1
  40e93a:	popa   
  40e93b:	enter  0xffff,0x98
  40e93f:	cmp    dl,cl
  40e941:	sub    cl,bl
  40e943:	adc    bh,bh
  40e945:	jne    0x40e8eb
  40e947:	mov    eax,0xe93745cf
  40e94c:	dec    esi
  40e94d:	mov    ecx,DWORD PTR [eax-0x25]
  40e950:	xor    esp,0x1f
  40e953:	jmp    0xb8db3a55
  40e958:	mov    edi,0x87e97745
  40e95d:	test   DWORD PTR [eax-0x1f],eax
  40e960:	std    
  40e961:	push   DWORD PTR [eax]
  40e963:	add    DWORD PTR [edx-0x1],eax
  40e966:	push   edi
  40e967:	ss (bad) 
  40e969:	addr16 mov ebp,0x31003f98
  40e96f:	ds scas eax,DWORD PTR es:[edi]
  40e971:	xlat   BYTE PTR ds:[ebx]
  40e972:	ds inc ebp
  40e974:	imul   edi,esi,0x195a62c4
  40e97a:	in     al,dx
  40e97b:	xchg   ebp,eax
  40e97c:	imul   ecx,DWORD PTR [eax-0x18e724c],0x6803d826
  40e986:	in     eax,dx
  40e987:	add    eax,0xe917ffc5
  40e98c:	dec    edx
  40e98d:	test   BYTE PTR [esi],0xab
  40e990:	imul   esi,DWORD PTR [ecx+edi*1-0x6b],0x4369
  40e998:	(bad)  
  40e999:	call   0xfe69:0xcb05847b
  40e9a0:	pop    ebx
  40e9a1:	cmp    eax,0xfc79e0da
  40e9a6:	add    edi,edi
  40e9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a9:	aad    0x71
  40e9ab:	(bad)  
  40e9ac:	(bad)  
  40e9ad:	repnz out dx,eax
  40e9af:	pop    es
  40e9b0:	fabs   
  40e9b2:	mov    esi,0x7fb4c6fe
  40e9b7:	out    0xc6,eax
  40e9b9:	fisubr DWORD PTR [ecx-0x74]
  40e9bc:	lods   al,BYTE PTR ds:[esi]
  40e9bd:	xor    DWORD PTR [edx-0x2],esi
  40e9c0:	scas   al,BYTE PTR es:[edi]
  40e9c1:	lods   eax,DWORD PTR ds:[esi]
  40e9c2:	(bad)  
  40e9c4:	stc    
  40e9c5:	jnp    0x40e9c9
  40e9c7:	jmp    esp
  40e9c9:	aad    0x71
  40e9cb:	(bad)  
  40e9cc:	xchg   esi,eax
  40e9cd:	xor    dh,al
  40e9cf:	pop    es
  40e9d0:	cdq    
  40e9d1:	add    DWORD PTR [edi+0x7fb486fe],edi
  40e9d7:	jecxz  0x40e95f
  40e9d9:	sbb    ch,BYTE PTR [edx+0x69]
  40e9dc:	xor    DWORD PTR [ebp+0x3cf048f9],esp
  40e9e2:	imul   esi,DWORD PTR [ecx+ecx*4+0x5efe684a],0x4efc5c14
  40e9ed:	jge    0x40ea13
  40e9ef:	imul   ecx,DWORD PTR [edi-0x63],0x533f646b
  40e9f6:	int    0x77
  40e9f8:	mov    ch,0x64
  40e9fa:	mov    ebp,0x37000069
  40e9ff:	in     al,0x50
  40ea01:	and    DWORD PTR [eax-0x2b],edi
  40ea04:	call   0xb5acc771
  40ea09:	imul   ebx,DWORD PTR [edi],0xefc1b53
  40ea0f:	popf   
  40ea10:	and    al,0x69
  40ea12:	setge  BYTE PTR [ebx+0x50]
  40ea16:	call   DWORD PTR [edx-0x73]
  40ea19:	test   DWORD PTR [ebp-0x89682bd],edi
  40ea1f:	adc    esi,ebp
  40ea21:	fdiv   QWORD PTR [ebx-0x188e7b70]
  40ea27:	push   edx
  40ea28:	call   0xa3d83b1c
  40ea2d:	pop    esp
  40ea2e:	fist   WORD PTR [edx+0x5d]
  40ea31:	add    al,0x45
  40ea33:	in     eax,dx
  40ea34:	rol    BYTE PTR [ebx],0x31
  40ea37:	inc    ebx
  40ea38:	mov    gs,WORD PTR [ecx+0x45]
  40ea3b:	and    al,0x51
  40ea3d:	cmp    ch,dh
  40ea3f:	push   edx
  40ea40:	cmp    eax,0x3d43e569
  40ea45:	imul   esp,DWORD PTR [edi-0x76ec4cae],0x9768e6f3
  40ea4f:	push   edx
  40ea50:	push   ebx
  40ea51:	pop    eax
  40ea52:	xchg   DWORD PTR [edx+0x15],edx
  40ea55:	imul   edi,ebp,0x3f160123
  40ea5b:	push   ebx
  40ea5c:	add    eax,0xf53bbd69
  40ea61:	push   0x526f0000
  40ea66:	(bad)  
  40ea67:	jnp    0x40eaab
  40ea69:	cmp    al,0x3
  40ea6b:	scas   eax,DWORD PTR es:[edi]
  40ea6c:	leave  
  40ea6d:	push   ecx
  40ea6e:	(bad)  
  40ea6f:	pushf  
  40ea70:	out    dx,al
  40ea71:	dec    ecx
  40ea72:	(bad)  
  40ea73:	fcompp 
  40ea75:	xchg   ebx,esp
  40ea77:	fcompp 
  40ea79:	push   ecx
  40ea7a:	(bad)  
  40ea7b:	push   esp
  40ea7c:	and    eax,0xc804c33c
  40ea81:	push   ecx
  40ea82:	(bad)  
  40ea83:	je     0x40ea17
  40ea85:	dec    edx
  40ea86:	(bad)  
  40ea87:	mov    dh,0x99
  40ea89:	enter  0xc10f,0x94
  40ea8d:	adc    bh,bh
  40ea8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea90:	lods   eax,DWORD PTR ds:[esi]
  40ea91:	nop
  40ea92:	iret   
  40ea93:	xchg   esi,eax
  40ea94:	cdq    
  40ea95:	push   edx
  40ea96:	call   FWORD PTR [edx+edx*2]
  40ea99:	mov    esp,0x8f59e900
  40ea9e:	(bad)  
  40ea9f:	cld    
  40eaa0:	and    bh,BYTE PTR [ecx+ebp*2]
  40eaa3:	mov    esp,0x3cfe5259
  40eaa8:	or     BYTE PTR [edx-0x2],0x6e
  40eaac:	dec    ecx
  40eaad:	mov    bl,dl
  40eaaf:	pop    esi
  40eab0:	dec    ecx
  40eab1:	push   edx
  40eab2:	(bad)  
  40eab3:	aam    0x22
  40eab5:	cmp    al,0x8b
  40eab7:	adc    al,0x58
  40eab9:	push   edx
  40eaba:	(bad)  
  40eabb:	aam    0x22
  40eabd:	push   ecx
  40eabe:	mov    ah,0x21
  40eac0:	inc    ecx
  40eac1:	push   edx
  40eac2:	(bad)  
  40eac3:	ds lahf 
  40eac5:	sbb    eax,ebp
  40eac7:	add    DWORD PTR [eax],eax
  40eac9:	add    BYTE PTR [ebx],bl
  40eacb:	push   edx
  40eacc:	(bad)  
  40eacd:	cs iret 
  40eacf:	imul   esi,esi,0xb0390926
  40ead5:	test   eax,0x5cfe5219
  40eada:	add    cl,BYTE PTR [edx-0x2]
  40eadd:	push   cs
  40eade:	fidiv  DWORD PTR [esi+0x3f]
  40eae1:	add    BYTE PTR [edi],ch
  40eae3:	mov    esp,0xc43cb5fd
  40eae8:	std    
  40eae9:	push   DWORD PTR [eax]
  40eaeb:	mov    al,ds:0xb94fff3e
  40eaf0:	mov    bl,0xe8
  40eaf2:	ja     0x40eaad
  40eaf4:	std    
  40eaf5:	call   0x3e42c2
  40eafa:	pop    edi
  40eafb:	and    edx,0xfffffff7
  40eafe:	outs   dx,DWORD PTR ds:[esi]
  40eaff:	mov    ecx,0xb90885e6
  40eb04:	std    
  40eb05:	jmp    DWORD PTR [ebp-0x20000a48]
  40eb0b:	out    dx,eax
  40eb0c:	js     0x40eb4e
  40eb0e:	iret   
  40eb0f:	mov    eax,0xc0d4b5fd
  40eb14:	std    
  40eb15:	jmp    DWORD PTR [eax-0x6000c198]
  40eb1b:	mov    eax,0xbdb1f843
  40eb20:	sti    
  40eb21:	jmp    FWORD PTR [edi-0x3f038c48]
  40eb27:	jle    0x40eb39
  40eb29:	add    al,bl
  40eb2b:	xadd   DWORD PTR [eax+eax*1],ecx
  40eb2f:	add    al,cl
  40eb31:	arpl   WORD PTR [ecx-0x52bb414],cx
  40eb37:	push   0xffffffd8
  40eb39:	push   0x4b
  40eb3b:	jmp    ebp
  40eb3d:	dec    esp
  40eb3e:	out    0x81,al
  40eb40:	sub    eax,0x8589fdb9
  40eb45:	mov    eax,0x6ca075fd
  40eb4a:	xchg   edi,eax
  40eb4b:	dec    eax
  40eb4c:	fst    DWORD PTR [edi+edi*8]
  40eb4f:	xor    eax,0x412fc3
  40eb54:	inc    eax
  40eb55:	cdq    
  40eb56:	sti    
  40eb57:	jmp    FWORD PTR [edi]
  40eb59:	mov    ecx,0x93310873
  40eb5e:	mov    eax,DWORD PTR [edi-0x10]
  40eb61:	cmp    bl,dl
  40eb63:	add    DWORD PTR [ecx],esi
  40eb65:	cmp    eax,DWORD PTR [edx+0x654fbce7]
  40eb6b:	(bad)  
  40eb6c:	iretw  
  40eb6e:	data16 (bad) 
  40eb70:	in     al,0x32
  40eb72:	pop    edx
  40eb73:	xchg   ebx,eax
  40eb74:	adc    al,0x3a
  40eb76:	gs enter 0x3673,0x2
  40eb7b:	push   ebp
  40eb7c:	mov    edx,0x3dc38156
  40eb81:	or     bh,cl
  40eb83:	imul   esi,DWORD PTR [ecx],0xa4feb5e5
  40eb89:	inc    ebp
  40eb8a:	pop    edx
  40eb8b:	xor    eax,0x88658664
  40eb90:	je     0x40eb13
  40eb92:	jns    0x40ebc8
  40eb94:	add    BYTE PTR [eax],al
  40eb96:	popf   
  40eb97:	gs ret 
  40eb99:	(bad)  
  40eb9a:	mov    ebx,0x7027ea70
  40eb9f:	cmp    eax,0x29313e82
  40eba4:	shl    DWORD PTR [edi+0x3d],0x4
  40eba8:	(bad)  
  40ebab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebac:	jmp    0xf97e1cc2
  40ebb1:	mov    edi,0xe7cc5e65
  40ebb6:	mov    bh,0x84
  40ebb8:	gs (bad) 
  40ebba:	popa   
  40ebbb:	add    al,BYTE PTR gs:[eax]
  40ebbe:	(bad)  
  40ebbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc0:	fidivr DWORD PTR [eax+ebp*2]
  40ebc3:	jl     0x40ebc7
  40ebc5:	push   eax
  40ebc6:	mov    dh,0x90
  40ebc8:	cli    
  40ebc9:	out    0xc1,eax
  40ebcb:	pop    ecx
  40ebcc:	gs (bad) 
  40ebce:	cdq    
  40ebcf:	leave  
  40ebd0:	and    eax,0x3d29eff
  40ebd5:	inc    esi
  40ebd6:	mov    cl,0x14
  40ebd8:	out    0x3,eax
  40ebda:	add    al,0x4a
  40ebdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebdd:	addr16 inc ebx
  40ebdf:	push   esp
  40ebe0:	dec    edi
  40ebe1:	data16 jg 0x40ec33
  40ebe4:	or     eax,0xee0cc471
  40ebe9:	lock stos DWORD PTR es:[edi],eax
  40ebeb:	dec    edi
  40ebec:	jae    0x40ec55
  40ebee:	addr16 leave 
  40ebf0:	loopne 0x40ec4d
  40ebf2:	inc    esi
  40ebf3:	adc    esi,ebp
  40ebf5:	gs imul ebp
  40ebf8:	scas   eax,DWORD PTR es:[edi]
  40ebf9:	inc    edx
  40ebfa:	add    BYTE PTR [eax],al
  40ebfc:	xor    dl,BYTE PTR [esp+esi*1]
  40ebff:	jns    0x40ec5b
  40ec01:	xchg   ebx,eax
  40ec02:	lods   al,BYTE PTR ds:[esi]
  40ec03:	push   0xb54313c8
  40ec08:	aaa    
  40ec09:	leave  
  40ec0a:	lock pop ebx
  40ec0c:	call   0xb9a6aa20
  40ec11:	fdiv   DWORD PTR [edx+ebx*8-0x44bd48e2]
  40ec18:	jno    0x40ec2e
  40ec1a:	adc    DWORD PTR [edx+0x64e8d579],edi
  40ec20:	cmp    eax,0xfec2bfeb
  40ec25:	ss push 0xf14ef7c2
  40ec2b:	inc    ebx
  40ec2c:	bound  ebp,QWORD PTR ds:0x4ee6dc19
  40ec32:	test   DWORD PTR [esi-0x3ce034aa],esp
  40ec38:	(bad)  
  40ec39:	fisub  WORD PTR [ebp-0x11]
  40ec3c:	ss cmp al,0xfd
  40ec3f:	ffreep st(7)
  40ec41:	dec    esi
  40ec42:	inc    eax
  40ec43:	mov    ecx,0xdc4d4eff
  40ec48:	mov    dh,0x4e
  40ec4a:	push   ebp
  40ec4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec4c:	push   ss
  40ec4d:	retf   
  40ec4e:	scas   eax,DWORD PTR es:[edi]
  40ec4f:	ret    0xb6a6
  40ec52:	(bad)  
  40ec53:	mov    edx,0x2dffd3db
  40ec58:	xchg   BYTE PTR [esi],dl
  40ec5a:	call   0xfe8e5b16
  40ec5f:	push   ds
  40ec60:	add    BYTE PTR [eax],al
  40ec62:	xchg   esi,eax
  40ec63:	dec    edx
  40ec64:	(bad)  
  40ec65:	pushf  
  40ec66:	jp     0x40ec9e
  40ec68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec69:	int    0xd
  40ec6b:	dec    esi
  40ec6c:	enter  0x312b,0x14
  40ec70:	push   ebp
  40ec71:	jb     0x40ec7c
  40ec73:	xchg   edx,eax
  40ec74:	ret    
  40ec75:	cmc    
  40ec76:	ins    BYTE PTR es:[edi],dx
  40ec77:	in     eax,0x69
  40ec79:	jmp    0x5d3fcaf6
  40ec7e:	dec    ebp
  40ec7f:	ss dec eax
  40ec81:	sbb    eax,0x2c884dcc
  40ec86:	leave  
  40ec87:	cdq    
  40ec88:	xor    al,0x55
  40ec8a:	adc    eax,0x5771ffd5
  40ec8f:	int3   
  40ec90:	daa    
  40ec91:	sub    BYTE PTR ds:0xee93e94,ch
  40ec97:	fldenv [edi+0x63]
  40ec9a:	fcmovnbe st,st(4)
  40ec9c:	(bad)  
  40ec9d:	cmp    eax,0xe9109f6d
  40eca2:	xor    bl,BYTE PTR [ecx]
  40eca4:	rcr    BYTE PTR ds:0x58e7e634,0xba
  40ecab:	dec    esi
  40ecac:	(bad)  
  40ecad:	sbb    DWORD PTR ds:0x8c8efe4e,ecx
  40ecb3:	mov    ch,0x93
  40ecb5:	and    dl,dh
  40ecb7:	dec    ebp
  40ecb8:	dec    esi
  40ecb9:	outs   dx,BYTE PTR ds:[esi]
  40ecba:	(bad)  
  40ecbb:	adc    eax,0x4ed18ae8
  40ecc0:	(bad)  
  40ecc1:	push   ecx
  40ecc2:	std    
  40ecc3:	push   cs
  40ecc4:	call   DWORD PTR [esi+0x0]
  40ecc7:	add    BYTE PTR [ecx+0x14],bl
  40ecca:	inc    esi
  40eccb:	imul   ecx,DWORD PTR [esp+edx*1],0x8ef20075
  40ecd2:	cli    
  40ecd3:	xor    ebx,DWORD PTR [eax+0x7a]
  40ecd6:	std    
  40ecd7:	jmp    DWORD PTR [edi-0x48]
  40ecda:	lock scas al,BYTE PTR es:[edi]
  40ecdc:	mov    al,ds:0x57bb7350
  40ece1:	ds cli 
  40ece3:	call   FWORD PTR [ebp+0x642be649]
  40ece9:	mov    eax,0xac65ffd
  40ecee:	rol    DWORD PTR [eax+ebx*2],0x5e
  40ecf2:	mov    esp,ebp
  40ecf4:	fisttp DWORD PTR [ebx+edi*8]
  40ecf7:	push   esi
  40ecf8:	mov    edi,0xb969fe6b
  40ecfd:	mov    eax,0xdd600873
  40ed02:	cmp    edi,edi
  40ed04:	addr16 lahf 
  40ed06:	inc    ebx
  40ed07:	cld    
  40ed08:	shr    DWORD PTR [edx],cl
  40ed0a:	je     0x40ed34
  40ed0c:	or     DWORD PTR [eax],ebx
  40ed0e:	mov    edi,DWORD PTR ds:0x410070
  40ed14:	cwde   
  40ed15:	icebp  
  40ed16:	push   DWORD PTR [ebx+0x4d]
  40ed19:	inc    eax
  40ed1a:	sahf   
  40ed1b:	dec    ecx
  40ed1c:	dec    ecx
  40ed1d:	sbb    BYTE PTR [edi-0x18],dl
  40ed20:	or     BYTE PTR [eax-0x2],cl
  40ed23:	inc    DWORD PTR [ebx]
  40ed25:	shl    DWORD PTR [edx+0x1f],1
  40ed28:	shl    BYTE PTR ds:[ecx],0x48
  40ed2c:	add    BYTE PTR [eax],al
  40ed2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed2f:	mov    al,0x4e
  40ed31:	push   0xbeef10d8
  40ed36:	inc    eax
  40ed37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed38:	inc    edi
  40ed39:	inc    ecx
  40ed3a:	enter  0xfd80,0x75
  40ed3e:	sar    BYTE PTR [eax-0x4ea89cdd],1
  40ed44:	out    0x51,al
  40ed46:	es mov cl,0xfd
  40ed49:	jmp    0x40ed7c
  40ed4b:	cmp    al,0xc8
  40ed4d:	jg     0x40ed46
  40ed4f:	cmp    dl,bh
  40ed51:	stc    
  40ed52:	not    esi
  40ed54:	push   ss
  40ed55:	shr    al,0xd
  40ed58:	arpl   si,di
  40ed5a:	sahf   
  40ed5b:	or     BYTE PTR [edx-0x6277d1c9],dh
  40ed61:	inc    BYTE PTR [edi+esi*8]
  40ed64:	bound  esi,QWORD PTR [ecx+edi*1+0x23]
  40ed68:	mov    cl,0x3a
  40ed6a:	jle    0x40ed91
  40ed6c:	ret    
  40ed6d:	pop    ebp
  40ed6e:	push   0x40007f8
  40ed73:	ret    0x826f
  40ed76:	ins    DWORD PTR es:[edi],dx
  40ed77:	dec    esi
  40ed78:	in     al,dx
  40ed79:	dec    eax
  40ed7b:	test   al,0x61
  40ed7d:	je     0x40eda8
  40ed7f:	adc    edx,ebx
  40ed81:	cmp    cl,BYTE PTR [esi+0x35]
  40ed84:	mov    eax,DWORD PTR [ebp+eax*2-0x1e]
  40ed88:	mov    al,ds:0x613af048
  40ed8d:	je     0x40edb8
  40ed8f:	push   ebx
  40ed90:	rcr    bh,1
  40ed92:	add    BYTE PTR [eax],al
  40ed94:	cs push ebx
  40ed96:	popa   
  40ed97:	je     0x40edbe
  40ed99:	mov    edx,edi
  40ed9b:	pop    es
  40ed9c:	or     DWORD PTR [eax],ecx
  40ed9e:	pop    ds
  40ed9f:	call   DWORD PTR [esi]
  40eda1:	jne    0x40ede7
  40eda3:	add    esi,DWORD PTR [ecx]
  40eda5:	or     BYTE PTR [edi+0x5e71b2eb],cl
  40edab:	push   esi
  40edac:	mov    DWORD PTR [esp+edi*1+0x3f],esi
  40edb0:	xor    DWORD PTR [ebp-0x6d0dff2c],esp
  40edb6:	dec    ecx
  40edb7:	inc    esp
  40edb8:	in     eax,0x3d
  40edba:	add    al,BYTE PTR [eax]
  40edbc:	xor    DWORD PTR [edx],eax
  40edbe:	cmp    BYTE PTR [eax+0x70],cl
  40edc1:	cmp    eax,0x14397461
  40edc6:	jbe    0x40edd0
  40edc8:	sbb    bh,bl
  40edca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edcb:	add    edx,DWORD PTR [ebp+0x75]
  40edce:	sbb    BYTE PTR [ecx+esi*1],al
  40edd1:	adc    al,0x69
  40edd3:	(bad)  [eax]
  40edd5:	adc    al,0xbd
  40edd7:	or     esp,DWORD PTR [esi+0x4b6bf0c1]
  40eddd:	add    DWORD PTR [esi],esi
  40eddf:	bound  ecx,QWORD PTR [ecx+0x3103e88c]
  40ede5:	cmp    al,0xc4
  40ede7:	retf   0x4b87
  40edea:	sbb    eax,0x63c36d8
  40edef:	sbb    al,0x76
  40edf1:	dec    ebx
  40edf2:	dec    ecx
  40edf3:	sub    dl,bh
  40edf5:	aam    0xe8
  40edf7:	out    0x0,eax
  40edf9:	add    BYTE PTR [edi+0x1],ah
  40edfc:	jmp    0x62551f04
  40ee01:	inc    edi
  40ee02:	ror    BYTE PTR [edx-0x4d],cl
  40ee05:	add    esi,DWORD PTR [ecx]
  40ee07:	adc    al,0xe9
  40ee09:	mov    dh,0xf6
  40ee0b:	mov    ebx,0x13fe3d83
  40ee10:	inc    ecx
  40ee11:	ret    0xd45b
  40ee14:	call   0xbde80cc
  40ee19:	add    al,0x31
  40ee1b:	adc    al,0xe9
  40ee1d:	pusha  
  40ee1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee1f:	sbb    al,0xb6
  40ee21:	stc    
  40ee22:	mov    cl,0xa
  40ee24:	add    al,ah
  40ee26:	dec    esi
  40ee27:	adc    al,0x1d
  40ee29:	add    DWORD PTR [edx+0x29d7f84b],esi
  40ee2f:	push   ebx
  40ee30:	sub    esp,DWORD PTR [eax+0x31]
  40ee33:	adc    al,0xe9
  40ee35:	add    ebx,edx
  40ee37:	and    al,0x86
  40ee39:	pop    ss
  40ee3a:	or     al,0xdf
  40ee3c:	daa    
  40ee3d:	add    al,0xde
  40ee3f:	add    BYTE PTR [eax],al
  40ee41:	shl    ch,0xd3
  40ee44:	inc    DWORD PTR [eax+0x66ff018c]
  40ee4a:	lods   al,BYTE PTR ds:[esi]
  40ee4b:	push   esi
  40ee4c:	pop    ss
  40ee4d:	push   edx
  40ee4e:	call   0xa4867932
  40ee53:	fisttp WORD PTR [ebx]
  40ee55:	bound  esi,QWORD PTR [esi+0x1a]
  40ee58:	(bad)  
  40ee59:	mov    ebx,0x817f9b3a
  40ee5e:	add    BYTE PTR [eax],al
  40ee60:	xor    eax,0x7f360014
  40ee65:	push   ds
  40ee66:	(bad)  
  40ee6a:	(bad)  
  40ee6b:	jmp    0x6e50b381
  40ee70:	mov    ch,0x86
  40ee72:	(bad)  
  40ee73:	call   0xc07d85aa
  40ee78:	jge    0x40ee4d
  40ee7a:	(bad)  
  40ee7b:	call   0xb54011fe
  40ee80:	pop    ss
  40ee81:	fild   WORD PTR [eax-0x17]
  40ee84:	sar    edi,1
  40ee86:	sub    BYTE PTR [edx+0x1e64a73],ah
  40ee8c:	sub    BYTE PTR [ebx-0x2],cl
  40ee8f:	mov    eax,ds:0xe9001432
  40ee94:	ja     0x40eeea
  40ee96:	and    ebp,ecx
  40ee98:	push   ss
  40ee99:	fwait
  40ee9a:	add    al,0xe9
  40ee9c:	xor    dl,BYTE PTR [eax+eax*1]
  40ee9f:	push   0x69
  40eea1:	adc    eax,0x1932f683
  40eea6:	test   esi,ebp
  40eea8:	xchg   ecx,eax
  40eea9:	dec    edx
  40eeaa:	(bad)  
  40eeab:	jb     0x40ee9c
  40eead:	dec    ebp
  40eeae:	pop    esi
  40eeaf:	mov    al,0x74
  40eeb1:	adc    eax,0x5f053f00
  40eeb6:	fisubr DWORD PTR [ecx]
  40eeb8:	xor    eax,0xd900714c
  40eebd:	sar    ch,1
  40eebf:	mov    esp,DWORD PTR [ecx+0x8bf5f8]
  40eec5:	add    BYTE PTR [ecx-0x155781c3],dl
  40eecb:	push   ss
  40eecc:	mov    ecx,ecx
  40eece:	out    dx,al
  40eecf:	cwde   
  40eed0:	(bad)  
  40eed1:	jmp    0x40ef03
  40eed3:	xchg   edi,eax
  40eed4:	mov    DWORD PTR [ebx],0x50c79806
  40eeda:	adc    ebx,esi
  40eedc:	out    0xa7,al
  40eede:	sahf   
  40eedf:	adc    eax,0x8d618b00
  40eee4:	mov    ecx,ecx
  40eee6:	mov    ecx,edi
  40eee8:	mov    ecx,ecx
  40eeea:	scas   al,BYTE PTR es:[edi]
  40eeeb:	sbb    dh,dh
  40eeed:	jne    0x40ef23
  40eeef:	push   ebx
  40eef0:	rcl    DWORD PTR [ebp+0x3],0xb9
  40eef4:	data16 or BYTE PTR [edx*2+0x16caf7fe],bh
  40eefc:	ret    
  40eefd:	jmp    ebx
  40eeff:	push   ecx
  40ef00:	push   es
  40ef01:	or     ecx,DWORD PTR [eax]
  40ef03:	popa   
  40ef04:	or     ch,bl
  40ef06:	inc    ebp
  40ef07:	mov    bl,0x6
  40ef09:	(bad)  
  40ef0a:	push   eax
  40ef0b:	push   ebp
  40ef0c:	jle    0x40ef46
  40ef0e:	pop    eax
  40ef0f:	ins    BYTE PTR es:[edi],dx
  40ef10:	hlt    
  40ef11:	leave  
  40ef12:	mov    bl,BYTE PTR [eax+eax*1]
  40ef15:	push   ebp
  40ef16:	rol    ebx,cl
  40ef18:	add    esp,0x30668504
  40ef1e:	int3   
  40ef1f:	dec    edi
  40ef20:	(bad)  
  40ef21:	neg    DWORD PTR [edx+0xf]
  40ef24:	ret    
  40ef25:	inc    edi
  40ef27:	pop    edx
  40ef28:	repnz add BYTE PTR [eax],al
  40ef2b:	add    BYTE PTR [eax],bl
  40ef2d:	adc    eax,0xa2f32b00
  40ef32:	inc    ebx
  40ef33:	cld    
  40ef34:	cmp    cl,ch
  40ef36:	jae    0x40ef40
  40ef38:	xor    DWORD PTR [ebx+0x3b310d78],edx
  40ef3e:	xchg   DWORD PTR [edi+0x745d8869],edi
  40ef44:	sub    DWORD PTR [ebx-0x3e29cbd8],esp
  40ef4a:	mov    WORD PTR [ecx+ecx*8-0x6],es
  40ef4e:	mov    bl,0xe7
  40ef50:	push   ebp
  40ef51:	out    dx,eax
  40ef52:	pop    esi
  40ef53:	(bad)  
  40ef54:	test   al,0x6f
  40ef56:	push   esi
  40ef57:	(bad)  
  40ef58:	cmp    al,0xdf
  40ef5a:	imul   edx,DWORD PTR [ebx+0x3c],0x3b
  40ef5e:	add    cl,BYTE PTR [ebx]
  40ef60:	jno    0x40eee8
  40ef62:	idiv   dh
  40ef64:	and    al,0xd3
  40ef66:	pop    esi
  40ef67:	je     0x40ef06
  40ef69:	stos   BYTE PTR es:[edi],al
  40ef6a:	push   0xffffff87
  40ef6c:	dec    ebp
  40ef6d:	cli    
  40ef6e:	pop    esi
  40ef6f:	(bad)  
  40ef70:	cld    
  40ef71:	out    dx,al
  40ef72:	imul   eax,DWORD PTR [ecx+0x2c],0x3b
  40ef76:	add    bh,bh
  40ef78:	cld    
  40ef79:	xor    ch,BYTE PTR [edx-0xd]
  40ef7c:	and    al,0x1a
  40ef7e:	pop    edi
  40ef7f:	and    ah,0x46
  40ef82:	add    dh,BYTE PTR [edi+edi*1-0x5d]
  40ef86:	ret    
  40ef87:	dec    edx
  40ef88:	lock cmp bl,BYTE PTR [ebp+0x74]
  40ef8c:	inc    ebp
  40ef8d:	adc    dl,BYTE PTR [ebx+0x3100000d]
  40ef93:	cmp    ecx,DWORD PTR [ecx]
  40ef95:	rol    ch,0x2f
  40ef98:	cdq    
  40ef99:	add    BYTE PTR [ecx],dh
  40ef9b:	cmp    eax,DWORD PTR [edx]
  40ef9d:	jmp    DWORD PTR [ecx+eiz*2+0x4e65056a]
  40efa4:	pop    ebp
  40efa5:	mov    dh,dl
  40efa7:	repnz dec esp
  40efa9:	shr    DWORD PTR ds:0x1d8ab73d,0xd6
  40efb0:	popf   
  40efb1:	(bad)  [ecx+0x14]
  40efb4:	jmp    0xaa567014
  40efb9:	pop    esi
  40efba:	test   ecx,0xfe1d6be0
  40efc0:	lea    ebx,[esi+0x58]
  40efc3:	sbb    al,0x11
  40efc5:	ret    
  40efc6:	push   ss
  40efc7:	aad    0xe8
  40efc9:	pop    esi
  40efca:	pop    ebp
  40efcb:	sbb    al,0x81
  40efcd:	fadd   QWORD PTR [esi]
  40efcf:	inc    edi
  40efd0:	ins    DWORD PTR es:[edi],dx
  40efd1:	jmp    0x2c0dac04
  40efd6:	jo     0x40efec
  40efd8:	pop    esi
  40efd9:	fsubr  DWORD PTR [esi]
  40efdb:	cmp    al,0xc2
  40efdd:	sbb    ebp,DWORD PTR [esi+0x2ed84d47]
  40efe3:	cmp    al,0x34
  40efe5:	pusha  
  40efe6:	lahf   
  40efe7:	inc    edi
  40efe8:	add    BYTE PTR [ecx+esi*1],0x14
  40efec:	jmp    0xe951603d
  40eff1:	mov    eax,0x476938bb
  40eff6:	add    BYTE PTR [eax],al
  40eff8:	xchg   BYTE PTR [ebx+eiz*8+0x11143640],bh
  40efff:	shl    DWORD PTR [ecx],1
  40f001:	push   ebx
  40f002:	or     eax,0x617dd5e
  40f007:	fdiv   DWORD PTR [esi]
  40f009:	cmp    al,0x78
  40f00b:	sbb    DWORD PTR [esi+0x47],edx
  40f00e:	sub    eax,0xe9154ac8
  40f013:	add    esi,DWORD PTR [ecx]
  40f015:	cdq    
  40f016:	sub    ebx,DWORD PTR [esi+ebp*8-0x45]
  40f01a:	adc    ecx,ecx
  40f01c:	icebp  
  40f01d:	adc    eax,ecx
  40f01f:	dec    edx
  40f020:	jbe    0x40f069
  40f022:	int    0x9
  40f024:	icebp  
  40f025:	mov    edi,0xc8b3b40a
  40f02a:	shl    ah,0x9d
  40f02d:	push   ds
  40f02e:	add    BYTE PTR [ebx+0x5],al
  40f031:	xlat   BYTE PTR ds:[ebx]
  40f032:	(bad)  
  40f033:	xor    al,0x21
  40f035:	cmp    al,0xdb
  40f037:	loop   0x40f096
  40f039:	inc    esi
  40f03a:	or     ch,BYTE PTR [ecx+0x2cc70dd9]
  40f040:	push   ecx
  40f041:	inc    edi
  40f042:	(bad)  
  40f043:	jmp    0xc2a52c7a
  40f048:	jge    0x40f090
  40f04a:	mov    ah,BYTE PTR [ecx+edx*2]
  40f04d:	pop    esp
  40f04e:	shl    ecx,0x32
  40f051:	loope  0x40efdd
  40f053:	jge    0x40efd5
  40f055:	scas   al,BYTE PTR es:[edi]
  40f056:	pop    edi
  40f057:	inc    esp
  40f058:	cmc    
  40f059:	inc    esi
  40f05a:	neg    bl
  40f05c:	add    BYTE PTR [eax],al
  40f05e:	xor    edx,DWORD PTR [ebx-0x2]
  40f061:	add    ch,BYTE PTR [eax+0x46]
  40f064:	je     0x40f047
  40f066:	sbb    cl,dh
  40f068:	inc    BYTE PTR [esi-0x4]
  40f06b:	sbb    eax,eax
  40f06d:	out    dx,al
  40f06e:	scas   al,BYTE PTR es:[edi]
  40f06f:	mov    al,ds:0x4732e8ff
  40f074:	je     0x40f057
  40f076:	sbb    cl,BYTE PTR [ebx+0x31]
  40f079:	fcomp  QWORD PTR es:[ecx]
  40f07c:	rcl    BYTE PTR [edi+ebp*1+0x32e9893d],0x14
  40f084:	call   DWORD PTR [esi+esi*1-0x350e8bb9]
  40f08b:	lods   eax,DWORD PTR ds:[esi]
  40f08c:	(bad)  
  40f08d:	(bad)  
  40f08e:	cmc    
  40f08f:	inc    ebp
  40f090:	je     0x40f073
  40f092:	(bad)  
  40f094:	cmp    esi,ebp
  40f096:	in     eax,0x19
  40f098:	rcr    BYTE PTR [ebx+esi*1+0x3b],0x70
  40f09d:	ficomp WORD PTR [edi+0xe]
  40f0a0:	call   0xfe863b45
  40f0a5:	loop   0x40f119
  40f0a7:	rol    BYTE PTR [ecx],0x0
  40f0aa:	add    esi,DWORD PTR ds:0xba2075fd
  40f0b0:	pop    ds
  40f0b1:	cmp    edi,eax
  40f0b3:	call   0x127eb0c1
  40f0b8:	jmp    0x40f10f
  40f0ba:	and    BYTE PTR [esi+0x25],bh
  40f0bd:	inc    ecx
  40f0be:	or     cl,ch
  40f0c0:	jae    0x40f0ca
  40f0c2:	add    BYTE PTR [eax],al
  40f0c4:	mov    al,0x8b
  40f0c6:	cmp    bh,bh
  40f0c8:	mov    bh,0x1c
  40f0ca:	shl    BYTE PTR [ebp-0x36],0xbc
  40f0ce:	inc    eax
  40f0cf:	(bad)  
  40f0d0:	fstp   QWORD PTR [ecx]
  40f0d2:	call   0xfe297171
  40f0d7:	or     ebx,DWORD PTR [eax+0x1ceb005e]
  40f0dd:	out    0x73,eax
  40f0df:	or     BYTE PTR [eax-0x1d],ah
  40f0e2:	inc    DWORD PTR ss:[edi]
  40f0e5:	sbb    al,0xc0
  40f0e7:	jne    0x40f083
  40f0e9:	mov    esp,0x19ddff24
  40f0ee:	call   0xfe298b7a
  40f0f3:	add    DWORD PTR [eax-0xf],0x76
  40f0f7:	add    dh,BYTE PTR [ebx]
  40f0f9:	ror    BYTE PTR [ecx],1
  40f0fb:	rcr    BYTE PTR [esp+eax*2+0x4188003b],0xfe
  40f103:	jb     0x40f159
  40f105:	lods   al,BYTE PTR ds:[esi]
  40f106:	(bad)  
  40f107:	call   FWORD PTR [eax+0x11]
  40f10a:	jmp    0x40f111
  40f10c:	repz adc eax,DWORD PTR [eax]
  40f10f:	add    BYTE PTR [eax-0x64],cl
  40f112:	rcr    DWORD PTR [ebx+0x11],0xd3
  40f116:	push   es
  40f117:	add    BYTE PTR [ebp+0x2968ea9c],bl
  40f11d:	or     bh,BYTE PTR [edi]
  40f11f:	add    BYTE PTR [eax+0x5e],dl
  40f122:	inc    edx
  40f124:	xor    DWORD PTR [esi+0x5a],ebx
  40f127:	je     0x40f129
  40f129:	add    BYTE PTR ds:0x907d056,dh
  40f12f:	adc    eax,0x4216fe5b
  40f134:	inc    edx
  40f135:	je     0x40f162
  40f137:	jle    0x40f109
  40f139:	or     eax,DWORD PTR [esi]
  40f13b:	add    BYTE PTR [eax+ebp*8],cl
  40f13e:	outs   dx,BYTE PTR es:[esi]
  40f140:	pop    edx
  40f141:	(bad)  
  40f142:	sub    bh,BYTE PTR [ebx-0x30]
  40f145:	or     ch,dh
  40f147:	daa    
  40f148:	or     bh,bh
  40f14a:	pop    esp
  40f14b:	xor    ebp,DWORD PTR [edx+0x7]
  40f14e:	fimul  WORD PTR [ebp+0x42f3c85a]
  40f154:	add    dl,BYTE PTR [ebp-0x46]
  40f157:	mov    es,WORD PTR [esi-0x4cd6323d]
  40f15d:	addr16 push ecx
  40f15f:	int    0xc3
  40f161:	(bad)  
  40f162:	mov    esi,0xaec30368
  40f167:	adc    DWORD PTR [edi],edi
  40f169:	out    0x73,eax
  40f16b:	sbb    DWORD PTR [ecx-0x2],0xff667776
  40f172:	xchg   esi,eax
  40f173:	cmp    al,BYTE PTR [edx]
  40f175:	(bad)  
  40f176:	hlt    
  40f177:	into   
  40f178:	mov    bl,0xe7
  40f17a:	mov    eax,0xb2fe594b
  40f17f:	outs   dx,DWORD PTR ds:[esi]
  40f180:	data16 (bad) 
  40f182:	std    
  40f183:	adc    cl,BYTE PTR [ecx+0x6a8a5d44]
  40f189:	jns    0x40f1ab
  40f18b:	push   ss
  40f18c:	pop    ebx
  40f18d:	add    BYTE PTR [eax],0x0
  40f190:	fcomp  QWORD PTR [esi]
  40f192:	add    al,0x75
  40f194:	sub    BYTE PTR [eax+0x12e1ebc0],bh
  40f19a:	out    dx,eax
  40f19b:	xor    BYTE PTR [esi+0x35],al
  40f19e:	test   DWORD PTR [ebp+ecx*2+0x13],edi
  40f1a2:	jmp    0xe8d69eb1
  40f1a7:	add    esi,DWORD PTR [ecx]
  40f1a9:	xchg   ecx,eax
  40f1aa:	sub    edx,DWORD PTR [esi+esi*2+0x43]
  40f1ae:	push   ebx
  40f1af:	push   0x5ac5ae16
  40f1b4:	pop    ss
  40f1b5:	cwde   
  40f1b6:	rol    BYTE PTR [esp+eax*4],0xc1
  40f1ba:	jne    0x40f1a1
  40f1bc:	dec    edi
  40f1bd:	aad    0xe8
  40f1bf:	outs   dx,BYTE PTR ds:[esi]
  40f1c0:	pop    ecx
  40f1c1:	pop    ebx
  40f1c2:	sub    esp,DWORD PTR [eax+0x28]
  40f1c5:	adc    al,0xe9
  40f1c7:	add    esi,esi
  40f1c9:	fld    DWORD PTR [eax-0x16ebcefd]
  40f1cf:	mov    BYTE PTR [ebp+0x2c],dh
  40f1d2:	sbb    BYTE PTR [ebx+0x5d],bl
  40f1d5:	xor    BYTE PTR ds:0x75dec36c,dl
  40f1db:	pop    edx
  40f1dc:	cmp    edx,DWORD PTR [esp+esi*8-0xd]
  40f1e0:	mov    bl,0xc1
  40f1e2:	push   eax
  40f1e3:	add    edi,DWORD PTR ds:0x96d05e0e
  40f1e9:	sub    al,0x11
  40f1eb:	pop    ecx
  40f1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ed:	inc    ebx
  40f1ee:	popa   
  40f1ef:	cmp    ebx,DWORD PTR [edi+0x6b50c9]
  40f1f5:	add    BYTE PTR [edi+0x5],al
  40f1f8:	ds pop edx
  40f1fa:	cmp    ebx,DWORD PTR [edi-0x45]
  40f1fd:	lock mov bl,0xc1
  40f200:	inc    esp
  40f201:	add    eax,DWORD PTR ds:0x92c82613
  40f207:	lods   al,BYTE PTR ds:[esi]
  40f208:	jo     0x40f200
  40f20a:	outs   dx,BYTE PTR ds:[esi]
  40f20b:	inc    ebx
  40f20c:	add    BYTE PTR [esi+0x3b],dh
  40f20f:	adc    al,0xe9
  40f211:	outs   dx,BYTE PTR ds:[esi]
  40f212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f213:	das    
  40f214:	out    0xc2,eax
  40f216:	(bad)  
  40f217:	add    ch,cl
  40f219:	ror    BYTE PTR [eax-0x25],1
  40f21c:	jmp    FWORD PTR [eax+0x2b]
  40f21f:	adc    al,0x74
  40f221:	in     eax,0x2f
  40f223:	pop    edi
  40f224:	jae    0x40f1ad
  40f226:	and    al,0x5f
  40f228:	jae    0x40f223
  40f22a:	sbb    al,0x13
  40f22c:	lea    ebp,[edi*2-0x13eb982d]
  40f233:	sar    edi,cl
  40f235:	rol    ch,1
  40f237:	xlat   BYTE PTR ds:[ebx]
  40f238:	(bad)  
  40f239:	mov    esi,0xc1ebc868
  40f23e:	xchg   ebp,eax
  40f23f:	repz (bad) 
  40f241:	scas   al,BYTE PTR es:[edi]
  40f242:	lods   al,BYTE PTR ds:[esi]
  40f243:	push   ebp
  40f244:	pop    esi
  40f245:	inc    edx
  40f246:	push   0x56
  40f248:	push   esp
  40f249:	jb     0x40f2a4
  40f24b:	xchg   esp,eax
  40f24c:	ret    
  40f24d:	dec    ecx
  40f24e:	mov    eax,DWORD PTR [edx-0x2]
  40f251:	mov    ss:0xeda64fba,eax
  40f257:	inc    edx
  40f258:	idiv   bl
  40f25a:	add    BYTE PTR [eax],al
  40f25c:	xor    edx,DWORD PTR [edi-0x2]
  40f25f:	ss mov dh,0xf9
  40f262:	inc    eax
  40f263:	jmp    0xf640f41a
  40f268:	ss dec esi
  40f26a:	add    cl,ch
  40f26c:	xor    dl,BYTE PTR [ecx+0x420b5d84]
  40f272:	(bad)  
  40f273:	mov    ecx,0xa12f3ae1
  40f278:	stc    
  40f279:	inc    ecx
  40f27a:	or     ch,BYTE PTR [ecx]
  40f27c:	cmp    BYTE PTR [eax+0x1432e8a3],bl
  40f282:	sub    DWORD PTR [ecx+eiz*8+0x40],0xfffffffe
  40f287:	es sub eax,0x32768413
  40f28d:	adc    al,0x0
  40f28f:	fs out 0x7a,al
  40f292:	std    
  40f293:	push   cs
  40f294:	clc    
  40f295:	sar    dh,cl
  40f297:	add    BYTE PTR ds:0x4ffffce4,dl
  40f29d:	scas   al,BYTE PTR es:[edi]
  40f29e:	in     al,dx
  40f29f:	aaa    
  40f2a0:	aas    
  40f2a1:	fld    TBYTE PTR [ecx]
  40f2a3:	not    cl
  40f2a5:	xchg   edx,eax
  40f2a6:	mov    ds:0xe9db4ffe,al
  40f2ab:	aaa    
  40f2ac:	inc    esi
  40f2ad:	or     esi,DWORD PTR [esi-0x38fd17c]
  40f2b3:	(bad)  
  40f2b4:	out    dx,eax
  40f2b5:	test   DWORD PTR [esi+0x59],esp
  40f2b8:	arpl   WORD PTR [ebp-0x2],dx
  40f2bb:	mov    WORD PTR [ebp+0xfffcd7],ss
  40f2c1:	add    BYTE PTR [edi+0x1341e685],bh
  40f2c7:	push   ss
  40f2c8:	add    BYTE PTR [ebx-0x7a72e63c],al
  40f2ce:	call   0xb3db:0x28fffddb
  40f2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d6:	scas   al,BYTE PTR es:[edi]
  40f2d7:	fdiv   st(5),st
  40f2d9:	call   0x401c95
  40f2de:	inc    ecx
  40f2df:	ret    0xfea2
  40f2e2:	aas    
  40f2e3:	fadd   QWORD PTR [ebx+eax*4+0x4e]
  40f2e7:	inc    ebp
  40f2e8:	jo     0x40f2ae
  40f2ea:	dec    edi
  40f2eb:	xchg   edx,eax
  40f2ec:	repnz dec BYTE PTR [edi]
  40f2ef:	fsubr  st(6),st
  40f2f1:	mov    ah,0x4a
  40f2f3:	(bad)  
  40f2f5:	(bad)  
  40f2f6:	adc    eax,0xeffffc9d
  40f2fb:	adc    al,0x0
  40f2fd:	add    BYTE PTR [eax+0x158d002f],bl
  40f303:	popf   
  40f304:	cld    
  40f305:	dec    DWORD PTR [edi-0x7b]
  40f308:	std    
  40f309:	mov    ch,0x14
  40f30b:	(bad)  
  40f30d:	inc    DWORD PTR [eax+0x3b]
  40f310:	das    
  40f311:	push   DWORD PTR [ecx]
  40f313:	sub    cl,BYTE PTR [eax+eax*8]
  40f316:	cs mov bh,0x5a
  40f319:	call   DWORD PTR [esi+0x2b]
  40f31c:	cmp    DWORD PTR [ecx+ecx*4-0xb01a9bf],0x2a4
  40f327:	add    BYTE PTR [esi],ch
  40f329:	mov    eax,0x2b36ff6a
  40f32e:	xchg   DWORD PTR [edx+ebp*1-0x7e01a99f],eax
  40f335:	sar    edi,cl
  40f337:	add    BYTE PTR [ecx],dh
  40f339:	sub    ebp,DWORD PTR [edx-0x1d]
  40f33c:	sub    BYTE PTR [ebx],ch
  40f33e:	add    cl,BYTE PTR [ebx]
  40f340:	icebp  
  40f341:	xor    DWORD PTR [esi-0x32],edi
  40f344:	xor    DWORD PTR [ebx],ebp
  40f346:	add    bh,BYTE PTR ds:0x22c35
  40f34c:	es mov dl,0x3f
  40f34f:	(bad)  
  40f350:	out    dx,al
  40f351:	sub    ch,BYTE PTR [edx+0x4f]
  40f354:	cmp    ebp,DWORD PTR [ebx]
  40f356:	add    dl,BYTE PTR [eax+0x49]
  40f359:	std    
  40f35a:	retf   0x3140
  40f35d:	enter  0xc180,0xcf
  40f361:	rcl    DWORD PTR [esi+0x4f],0xd9
  40f365:	into   
  40f366:	or     DWORD PTR [eax],eax
  40f368:	xor    DWORD PTR [esi+0x2b4b0b3f],ebp
  40f36e:	xchg   DWORD PTR [edx+ebp*4+0x1fe56e0],eax
  40f375:	shl    DWORD PTR [esi-0x78d4cef8],cl
  40f37b:	test   BYTE PTR [edx-0x1e01a928],bl
  40f381:	loop   0x40f396
  40f383:	inc    ebx
  40f384:	xchg   BYTE PTR [ecx],cl
  40f386:	or     eax,eax
  40f388:	add    al,0xb
  40f38a:	in     al,dx
  40f38b:	retf   
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	dec    ecx
  40f38f:	adc    al,0xa8
  40f391:	add    edi,DWORD PTR [esi+edx*4+0x40675621]
  40f398:	mov    eax,0xdfc696b
  40f39d:	push   edi
  40f39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3a0:	sub    dl,BYTE PTR [esi+0x4f]
  40f3a3:	inc    eax
  40f3a4:	call   0x3f56:0xb5234eb3
  40f3ab:	sub    al,0xd9
  40f3ad:	mov    BYTE PTR [ebp+0x2f56e655],ch
  40f3b3:	in     eax,0x6b
  40f3b5:	sub    BYTE PTR [ebx],0x3f
  40f3b8:	aad    0x56
  40f3ba:	outs   dx,BYTE PTR ds:[esi]
  40f3bb:	sub    al,0x85
  40f3bd:	sbb    dl,BYTE PTR [esi]
  40f3bf:	inc    eax
  40f3c0:	outs   dx,DWORD PTR ds:[esi]
  40f3c1:	or     dl,0x3e
  40f3c4:	mov    ebp,0x748a0756
  40f3c9:	push   ebp
  40f3ca:	(bad)  
  40f3cb:	aas    
  40f3cc:	lods   eax,DWORD PTR ds:[esi]
  40f3cd:	nop
  40f3ce:	add    bh,BYTE PTR [edi]
  40f3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d1:	push   esi
  40f3d2:	(bad)  
  40f3d3:	enter  0x56d9,0xe7
  40f3d7:	or     ebp,DWORD PTR [ecx+0x2eac23cf]
  40f3dd:	retf   
  40f3de:	jno    0x40f3f4
  40f3e0:	xchg   ecx,eax
  40f3e1:	pop    esi
  40f3e2:	ss adc al,0xe9
  40f3e5:	mov    bl,0x4e
  40f3e7:	fisub  WORD PTR [ecx]
  40f3e9:	lds    edi,FWORD PTR [esi-0x4b60ccc2]
  40f3ef:	aas    
  40f3f0:	imul   eax,DWORD PTR gs:[eax],0x0
  40f3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f5:	rcr    DWORD PTR [ebp+0x56],cl
  40f3f8:	sbb    BYTE PTR ds:0x140b03c3,dl
  40f3fe:	dec    esi
  40f3ff:	nop
  40f400:	fidivr DWORD PTR [esi]
  40f402:	inc    ebp
  40f403:	push   esi
  40f404:	push   ss
  40f405:	out    0xf,al
  40f407:	lds    eax,FWORD PTR [esi+0xae8ffad]
  40f40d:	ror    DWORD PTR [ecx],cl
  40f40f:	jmp    0x65f53346
  40f414:	add    al,0x3e
  40f416:	(bad)  
  40f417:	adc    DWORD PTR [edi+0x716ff06],ecx
  40f41d:	mov    BYTE PTR [ebx-0x18c200f1],ah
  40f423:	dec    ebp
  40f424:	aas    
  40f425:	aas    
  40f426:	(bad)  
  40f427:	(bad)  
  40f428:	mov    dh,0x43
  40f42a:	std    
  40f42b:	mul    ah
  40f42d:	ss add eax,0xfb3ddfbe
  40f433:	sbb    dh,BYTE PTR [ebp+0x7c]
  40f436:	(bad)  
  40f437:	fidivr WORD PTR [esi+edi*1-0xf]
  40f43b:	xchg   DWORD PTR ds:0x26640f17,edi
  40f441:	ds inc dh
  40f444:	(bad)  
  40f445:	(bad)  
  40f447:	stos   BYTE PTR es:[edi],al
  40f448:	(bad)  
  40f449:	mov    ebx,ebp
  40f44b:	push   0x71
  40f44d:	das    
  40f44e:	addr16 in al,dx
  40f450:	xchg   ebx,eax
  40f451:	(bad)  
  40f452:	jmp    DWORD PTR [eax-0x613cebfd]
  40f458:	add    BYTE PTR [eax],al
  40f45a:	mov    eax,0x33ec6764
  40f45f:	adc    al,0x0
  40f461:	cmp    edi,0xb886ff05
  40f467:	mov    BYTE PTR fs:[ecx+ebp*2],ah
  40f46b:	mov    dl,cl
  40f46d:	add    DWORD PTR [esi+0x4ae90013],edi
  40f473:	mov    al,0x36
  40f475:	data16 add al,0x8a
  40f478:	shl    DWORD PTR [eax-0x1a],1
  40f47b:	cs addr16 in al,dx
  40f47e:	xor    edx,DWORD PTR [eax+eax*1]
  40f481:	inc    ecx
  40f482:	fild   WORD PTR ds:0x8cf700ff
  40f488:	ror    BYTE PTR [ebx-0x7bc74d6],1
  40f48e:	adc    eax,DWORD PTR [edx]
  40f490:	mov    dl,dl
  40f492:	jo     0x40f4d2
  40f494:	(bad)  
  40f495:	call   FWORD PTR [eax-0x19]
  40f498:	jae    0x40f496
  40f49a:	ret    0xe812
  40f49d:	sbb    edx,DWORD PTR [ecx+0x12]
  40f4a0:	add    BYTE PTR [ebx-0x2f72e6],cl
  40f4a6:	int    0xe2
  40f4a8:	data16 add al,0x59
  40f4ab:	adc    al,BYTE PTR [eax]
  40f4ad:	call   0x40ff74
  40f4b2:	push   ebx
  40f4b3:	shl    BYTE PTR [edx+0xf],cl
  40f4b6:	mov    ds:0x63636703,eax
  40f4bb:	push   ecx
  40f4bc:	(bad)  
  40f4bd:	inc    BYTE PTR [eax]
  40f4bf:	add    BYTE PTR [ebp-0x18],bh
  40f4c2:	out    0x31,al
  40f4c4:	adc    BYTE PTR [edx],dl
  40f4c6:	add    BYTE PTR [ebx+0x69fe2baa],cl
  40f4cc:	sbb    BYTE PTR [eax+eax*1],ch
  40f4cf:	push   0x8
  40f4d1:	sub    al,0x1
  40f4d3:	push   0xc0001208
  40f4d8:	xchg   edi,eax
  40f4d9:	dec    esi
  40f4da:	out    dx,al
  40f4db:	call   0x3f3584
  40f4e0:	push   ecx
  40f4e1:	jle    0x40f4d5
  40f4e3:	inc    eax
  40f4e4:	rcl    ecx,cl
  40f4e6:	jae    0x40f52c
  40f4e8:	mov    bh,0x4e
  40f4ea:	cli    
  40f4eb:	(bad)  
  40f4ec:	mov    ebp,0xcfffe6e1
  40f4f1:	adc    DWORD PTR [eax],eax
  40f4f3:	push   0x24
  40f4f5:	sub    bh,dh
  40f4f7:	dec    BYTE PTR [ebp-0x5e8c191f]
  40f4fd:	adc    DWORD PTR [eax],eax
  40f4ff:	or     esi,DWORD PTR [ecx]
  40f501:	jmp    0x40f4d1
  40f503:	or     esi,ecx
  40f505:	push   edx
  40f506:	fisttp WORD PTR [edx-0x10]
  40f509:	sub    dh,BYTE PTR [edx+0x23692e7]
  40f50f:	add    BYTE PTR [ebx],cl
  40f511:	sub    ebp,eax
  40f513:	dec    DWORD PTR [eax]
  40f515:	sub    eax,ebp
  40f517:	(bad)  
  40f518:	fsubr  DWORD PTR [ecx]
  40f51a:	jmp    0xe4fe:0x422b66ff
  40f521:	sbb    ch,BYTE PTR [ebx-0x6b]
  40f524:	add    BYTE PTR [eax],al
  40f526:	sub    eax,DWORD PTR cs:[edx]
  40f529:	mov    esp,esi
  40f52b:	shl    DWORD PTR ds:[ebx-0x26],0xa2
  40f530:	out    0x4a,eax
  40f532:	lock sub ch,BYTE PTR [edx-0x63]
  40f536:	sub    eax,DWORD PTR cs:[edx]
  40f539:	push   eax
  40f53a:	cdq    
  40f53b:	loop   0x40f4fb
  40f53d:	inc    eax
  40f53e:	xor    DWORD PTR [esi-0x28],ebx
  40f541:	repz or DWORD PTR [ebp+0x14],esi
  40f545:	call   DWORD PTR [esi]
  40f547:	sti    
  40f548:	push   edx
  40f549:	je     0x40f550
  40f54b:	arpl   si,cx
  40f54d:	push   es
  40f54e:	xor    DWORD PTR [ebx],ebp
  40f550:	stos   BYTE PTR es:[edi],al
  40f551:	or     dh,cl
  40f553:	inc    DWORD PTR ds:0xd86e72eb
  40f559:	sti    
  40f55a:	pop    ecx
  40f55b:	fidivr DWORD PTR [esi-0x2761cec0]
  40f561:	test   ecx,0xd6fffbde
  40f567:	test   eax,0x88590b47
  40f56c:	mov    esi,0x94a33140
  40f571:	push   es
  40f572:	xor    DWORD PTR [ebx],ebp
  40f574:	std    
  40f575:	mov    edi,0xbeda493d
  40f57a:	cli    
  40f57b:	adc    ebp,DWORD PTR [eax-0x6fd3fefd]
  40f581:	or     esi,DWORD PTR [ecx]
  40f583:	adc    al,0xe2
  40f585:	inc    ebx
  40f586:	and    ah,BYTE PTR [ecx]
  40f588:	ret    
  40f589:	add    eax,DWORD PTR [eax]
  40f58b:	add    BYTE PTR [ebx],bl
  40f58d:	adc    al,0x46
  40f58f:	fnstcw WORD PTR [esi+0x3c]
  40f592:	mov    bl,0x53
  40f594:	push   ss
  40f595:	out    0xff,al
  40f597:	les    esi,FWORD PTR [esi-0x56]
  40f59a:	call   0x9b7d73f1
  40f59f:	dec    edi
  40f5a0:	dec    esi
  40f5a1:	add    dl,bh
  40f5a3:	push   edx
  40f5a4:	pop    edi
  40f5a5:	cmp    al,0x9b
  40f5a7:	push   ebx
  40f5a8:	dec    esi
  40f5a9:	jmp    0x4b7b:0x3c4f52d6
  40f5b0:	dec    esi
  40f5b1:	repnz mov dh,0x52
  40f5b4:	aas    
  40f5b5:	dec    edx
  40f5b6:	sub    DWORD PTR [ebx+0x664babe3],edi
  40f5bc:	outs   dx,BYTE PTR ds:[esi]
  40f5bd:	adc    al,0xe1
  40f5bf:	aad    0x31
  40f5c1:	push   edi
  40f5c2:	fisttp QWORD PTR [esi+0x3e91431]
  40f5c8:	(bad)  
  40f5c9:	inc    edi
  40f5ca:	and    ebp,eax
  40f5cc:	push   cs
  40f5cd:	scas   al,BYTE PTR es:[edi]
  40f5ce:	out    0xba,eax
  40f5d0:	push   cs
  40f5d1:	xchg   BYTE PTR [ebx+edx*2],ah
  40f5d4:	push   edi
  40f5d6:	nop
  40f5d7:	dec    edi
  40f5d8:	inc    ebx
  40f5d9:	push   esp
  40f5da:	outs   dx,DWORD PTR ds:[esi]
  40f5db:	push   edx
  40f5dc:	out    dx,eax
  40f5dd:	cmp    esp,DWORD PTR [ebp-0x1a036bab]
  40f5e3:	fcom   st(6)
  40f5e5:	(bad)
  40f5e9:	push   edi
  40f5ea:	xor    edi,DWORD PTR [edi-0x26]
  40f5ed:	xchg   edi,eax
  40f5ee:	lods   al,BYTE PTR ds:[esi]
  40f5ef:	push   ebx
  40f5f0:	add    BYTE PTR [eax],al
  40f5f2:	arpl   WORD PTR [ebx+edx*4+0x13fe65],bp
  40f5f9:	jno    0x40f5d7
  40f5fb:	adc    al,0xc3
  40f5fd:	outs   dx,BYTE PTR ds:[esi]
  40f5fe:	mov    bh,0xf8
  40f600:	in     al,0x17
  40f602:	ins    BYTE PTR es:[edi],dx
  40f603:	cmp    edi,esi
  40f605:	aad    0xa4
  40f607:	xchg   esi,eax
  40f608:	cmp    al,0x44
  40f60a:	push   eax
  40f60b:	aad    0xff
  40f60d:	call   0x4c40278
  40f612:	fsub   st(0),st
  40f614:	inc    eax
  40f615:	jmp    0x245b74c
  40f61a:	in     eax,dx
  40f61b:	(bad)  
  40f61d:	sub    cl,BYTE PTR [edi+0x5f]
  40f620:	out    0xcd,eax
  40f622:	cmp    edx,DWORD PTR [eax+eax*1]
  40f625:	ins    BYTE PTR es:[edi],dx
  40f626:	cdq    
  40f627:	aas    
  40f628:	push   ecx
  40f629:	sbb    DWORD PTR [edx-0x35],0xfffffffe
  40f62d:	hlt    
  40f62e:	fld1   
  40f630:	inc    eax
  40f631:	jmp    0x654f717d
  40f636:	ret    0xfe3a
  40f639:	jmp    0xea38c629
  40f63e:	xor    dl,BYTE PTR [eax+eax*1]
  40f641:	je     0x40f631
  40f643:	inc    edx
  40f644:	dec    edi
  40f645:	push   ebx
  40f646:	xor    eax,0x3242ffae
  40f64b:	cmp    esi,DWORD PTR [ebp+ecx*8+0x60]
  40f64f:	and    ch,ch
  40f651:	pop    ss
  40f652:	repnz cmp cl,BYTE PTR [ecx]
  40f655:	test   eax,0xace60000
  40f65a:	out    0x39,eax
  40f65c:	sub    BYTE PTR [eax+eax*1],dl
  40f65f:	push   0x7d
  40f661:	mov    ebp,0xb7ac0974
  40f666:	imul   ecx
  40f668:	push   es
  40f669:	(bad)  
  40f66b:	sbb    al,0x65
  40f66d:	xor    edi,DWORD PTR [edi-0x2c]
  40f670:	popa   
  40f671:	cmp    cl,BYTE PTR [eax-0x7423eb00]
  40f677:	inc    ebp
  40f678:	mov    al,0x7f
  40f67a:	std    
  40f67b:	jne    0x40f6bd
  40f67d:	in     eax,0x73
  40f67f:	hlt    
  40f680:	xor    dl,BYTE PTR [edi]
  40f682:	push   DWORD PTR [ebp+0xc]
  40f685:	in     eax,0x13
  40f687:	in     eax,dx
  40f688:	cs push edi
  40f68a:	dec    BYTE PTR [edx]
  40f68c:	dec    eax
  40f68d:	pop    esp
  40f68e:	sub    al,0x8b
  40f690:	aad    0xe2
  40f692:	mov    DWORD PTR [eax],edx
  40f694:	std    
  40f695:	push   edx
  40f696:	out    dx,al
  40f697:	push   eax
  40f698:	call   0xfe57:0x2ef113e3
  40f69f:	or     bl,BYTE PTR [eax]
  40f6a1:	pop    esp
  40f6a2:	sbb    BYTE PTR [eax+0x36],ch
  40f6a5:	jns    0x40f6e6
  40f6a7:	add    BYTE PTR [edi],bh
  40f6a9:	arpl   si,bp
  40f6ab:	call   0x4104e2
  40f6b0:	push   ebx
  40f6b1:	(bad)  
  40f6b2:	jae    0x40f6b5
  40f6b4:	fwait
  40f6b5:	jecxz  0x40f72a
  40f6b7:	lock and BYTE PTR [ebx],ah
  40f6ba:	push   es
  40f6bb:	add    BYTE PTR [eax],al
  40f6bd:	add    BYTE PTR [eax-0x1d],cl
  40f6c0:	jae    0x40f6b6
  40f6c2:	xor    BYTE PTR [ebx],bh
  40f6c4:	xor    edi,edi
  40f6c6:	pmulhw mm6,QWORD PTR [ebx-0x4]
  40f6ca:	add    BYTE PTR ds:0xb9080006,cl
  40f6d0:	rcr    DWORD PTR [ebx-0x2f],0xd0
  40f6d4:	push   ebx
  40f6d5:	mov    ebx,esp
  40f6d7:	xchg   esi,eax
  40f6d8:	ret    0xbec0
  40f6db:	in     al,0xfd
  40f6dd:	push   ebx
  40f6de:	jo     0x40f66a
  40f6e0:	loope  0x40f722
  40f6e2:	fmul   st,st(5)
  40f6e4:	jo     0x40f6e7
  40f6e6:	fwait
  40f6e7:	in     al,0x81
  40f6e9:	cmp    eax,0x411ee6
  40f6ee:	xor    DWORD PTR [ebx],ebp
  40f6f0:	(bad)  
  40f6f1:	sbb    dh,BYTE PTR [edx+0x7028ec48]
  40f6f7:	sub    eax,DWORD PTR [edx]
  40f6f9:	je     0x40f71e
  40f6fb:	scas   al,BYTE PTR es:[edi]
  40f6fc:	or     eax,0x3ec07e5
  40f701:	add    BYTE PTR ds:0x983c8334,ah
  40f707:	and    ebx,eax
  40f709:	call   FWORD PTR [esi+0x712b0560]
  40f70f:	xchg   BYTE PTR [ecx],bh
  40f711:	ret    0x65a
  40f714:	push   eax
  40f715:	adc    al,0x1f
  40f717:	and    al,0xc3
  40f719:	jmp    FWORD PTR [ecx-0x5339a990]
  40f71f:	out    dx,eax
  40f720:	push   eax
  40f721:	inc    BYTE PTR [eax]
  40f723:	add    BYTE PTR [esi+0x13],ch
  40f726:	add    eax,DWORD PTR [eax]
  40f728:	xor    DWORD PTR [ebp+0x23336a02],esp
  40f72e:	call   0x4ef7:0x832b3105
  40f735:	pop    edx
  40f736:	xchg   BYTE PTR ds:0x89022b30,bl
  40f73c:	mov    ah,0x3
  40f73e:	push   ecx
  40f73f:	(bad)  
  40f740:	ss mov al,0x85
  40f743:	retf   
  40f744:	das    
  40f745:	sub    cl,BYTE PTR [esi+0x4f]
  40f748:	es cwde 
  40f74a:	cmp    edi,ebp
  40f74c:	push   ds
  40f74d:	pop    edx
  40f74e:	pop    ebx
  40f74f:	lea    ebp,[edi]
  40f751:	sub    eax,DWORD PTR [edx]
  40f753:	or     esi,ecx
  40f755:	pop    ecx
  40f756:	xchg   dl,dh
  40f758:	xor    DWORD PTR [ebx],ebp
  40f75a:	add    ch,BYTE PTR [eax-0x28]
  40f75d:	add    eax,0xa7a5ffc5
  40f762:	push   ebx
  40f763:	std    
  40f764:	out    dx,al
  40f765:	imul   esi,DWORD PTR [ebx-0x11ebbf19],0xa90d3103
  40f76f:	push   DWORD PTR [edx+0x3103e854]
  40f775:	push   ecx
  40f776:	arpl   WORD PTR [eax-0x3c],cx
  40f779:	cmp    BYTE PTR [ebp-0x16ebcefc],al
  40f77f:	sub    BYTE PTR [ebp-0x50b089b1],0xe3
  40f786:	ins    DWORD PTR es:[edi],dx
  40f787:	cdq    
  40f788:	add    BYTE PTR [eax],al
  40f78a:	cmp    BYTE PTR [ecx],0x65
  40f78d:	dec    edi
  40f78e:	lahf   
  40f78f:	push   ds
  40f790:	add    ebx,DWORD PTR ds:0x796213f0
  40f796:	jb     0x40f7d1
  40f798:	dec    ebp
  40f799:	dec    edi
  40f79a:	cmp    edx,DWORD PTR [ebp+esi*8-0x79]
  40f79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f79f:	adc    ebp,ecx
  40f7a1:	add    edi,DWORD PTR [edx]
  40f7a3:	fistp  QWORD PTR [edi+edi*8]
  40f7a6:	mov    ch,0x88
  40f7a8:	call   0x5b7a28b0
  40f7ad:	cmp    BYTE PTR [eax+edi*1+0x1d],bl
  40f7b1:	ficom  DWORD PTR [esi-0x50]
  40f7b4:	call   0x15728bc
  40f7b9:	and    DWORD PTR [edi],ebp
  40f7bb:	adc    al,0xe9
  40f7bd:	cli    
  40f7be:	jle    0x40f77f
  40f7c0:	jg     0x40f83e
  40f7c2:	in     eax,dx
  40f7c3:	cmp    esp,DWORD PTR [ebx-0x37]
  40f7c6:	sub    ah,ch
  40f7c8:	sbb    BYTE PTR [edx+0x31],0x12
  40f7cc:	jmp    0xdd7d9d1f
  40f7d1:	clc    
  40f7d2:	or     eax,0x3a0427e7
  40f7d7:	push   esp
  40f7d8:	push   esp
  40f7d9:	lods   al,BYTE PTR ds:[esi]
  40f7da:	pop    es
  40f7db:	ret    0x4ec4
  40f7de:	and    eax,0xf6c50e2d
  40f7e3:	or     al,BYTE PTR [eax]
  40f7e5:	test   eax,0xa642fd06
  40f7ea:	mov    ecx,0xa6fd77
  40f7ef:	add    BYTE PTR [edi+0x37],ch
  40f7f2:	(bad)  
  40f7f3:	jmp    0xa9c5812a
  40f7f8:	jl     0x40f830
  40f7fa:	(bad)  
  40f7fb:	cmp    ebp,esp
  40f7fd:	idiv   bh
  40f7ff:	cmc    
  40f800:	xor    ch,BYTE PTR [esi+ebx*2]
  40f803:	out    0x32,eax
  40f805:	adc    al,0xb
  40f807:	test   eax,0x2c832089
  40f80c:	repnz cmp dh,bh
  40f80f:	data16 xor al,al
  40f812:	or     ebx,DWORD PTR [esi-0x47]
  40f815:	ja     0x40f814
  40f817:	push   esi
  40f818:	inc    DWORD PTR [ebp-0x2ada4dfc]
  40f81e:	call   DWORD PTR [ecx+0x23]
  40f821:	sub    ebx,DWORD PTR [ecx]
  40f823:	ds pop ecx
  40f825:	cmp    esp,edi
  40f827:	jge    0x40f85f
  40f829:	adc    al,0x0
  40f82b:	mov    DWORD PTR cs:[edi],edi
  40f82e:	out    0x55,eax
  40f830:	ss adc al,0x0
  40f833:	adc    bl,BYTE PTR [edx+0x36]
  40f836:	je     0x40f849
  40f838:	jmp    0x8489:0x32e90374
  40f83f:	xor    eax,0x99fe35ec
  40f844:	out    0x7f,eax
  40f846:	(bad)  
  40f847:	idiv   DWORD PTR [esi+esi*1-0x19]
  40f84b:	inc    ebp
  40f84c:	cmp    DWORD PTR [eax+eax*1],edx
  40f84f:	shl    BYTE PTR [esi],1
  40f851:	aaa    
  40f852:	(bad)  
  40f853:	fiadd  WORD PTR [eax]
  40f855:	add    BYTE PTR [eax+eax*4-0x39],ah
  40f859:	xlat   BYTE PTR ds:[ebx]
  40f85a:	jl     0x40f892
  40f85c:	out    0x69,eax
  40f85e:	cmp    DWORD PTR [eax+eax*1],edx
  40f861:	add    BYTE PTR [ebx-0x3436a62b],al
  40f867:	jle    0x40f7f2
  40f869:	in     al,dx
  40f86a:	pop    ebx
  40f86b:	int3   
  40f86c:	ficom  WORD PTR [ebx+0x70]
  40f86f:	push   es
  40f870:	in     eax,0x40
  40f872:	enter  0x70ca,0x1
  40f876:	mov    ecx,eax
  40f878:	cmp    DWORD PTR ds:0x41166d,0x83075ed8
  40f882:	cmc    
  40f883:	mov    eax,ds:0x12c8412c
  40f888:	jne    0x40f88f
  40f88a:	jae    0x40f85e
  40f88c:	pop    ecx
  40f88d:	leave  
  40f88e:	fcmovnbe st,st(0)
  40f890:	inc    ebx
  40f891:	cld    
  40f892:	mov    BYTE PTR [edx],dl
  40f894:	add    BYTE PTR [eax],al
  40f896:	dec    edi
  40f897:	dec    edi
  40f898:	test   BYTE PTR [eax],0x98
  40f89b:	adc    al,BYTE PTR [eax]
  40f89d:	(bad)  
  40f89e:	int    0xd6
  40f8a0:	(bad)  
  40f8a1:	dec    DWORD PTR [eax+0x3c45c712]
  40f8a7:	adc    BYTE PTR [eax],al
  40f8a9:	add    BYTE PTR [eax-0x31],bl
  40f8ac:	inc    ebx
  40f8ad:	lock pop eax
  40f8af:	adc    al,BYTE PTR [eax]
  40f8b1:	add    ch,ah
  40f8b3:	dec    esi
  40f8b4:	out    dx,al
  40f8b5:	push   eax
  40f8b6:	lds    ecx,FWORD PTR [esi-0xe]
  40f8b9:	push   eax
  40f8ba:	add    BYTE PTR [eax],al
  40f8bc:	aad    0x4e
  40f8be:	jmp    0x3445:0x8bc7b250
  40f8c5:	sub    BYTE PTR [eax+0x2],0xa2
  40f8c9:	adc    ebp,DWORD PTR [edx+0x0]
  40f8cc:	daa    
  40f8cd:	aas    
  40f8ce:	mov    bl,0x2e
  40f8d0:	fst    DWORD PTR [ecx]
  40f8d2:	mov    DWORD PTR [ebp+0x0],eax
  40f8d5:	xchg   ebp,eax
  40f8d6:	jnp    0x40f8c0
  40f8d8:	or     BYTE PTR [esi+0x7],bl
  40f8db:	xor    DWORD PTR [ecx],0x31e95be0
  40f8e1:	sub    eax,DWORD PTR [edx]
  40f8e3:	jne    0x40f86a
  40f8e5:	dec    esi
  40f8e6:	aad    0xfb
  40f8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e9:	lock dec ebx
  40f8eb:	sub    BYTE PTR [ebx+eax*4+0x2],0x74
  40f8f0:	mov    esi,DWORD PTR [edx+0x2ecaf7ad]
  40f8f6:	dec    ebx
  40f8f7:	jb     0x40f942
  40f8f9:	mov    ds:0x9ece41d5,eax
  40f8fe:	jns    0x40f944
  40f900:	rol    DWORD PTR [esi-0x16b517f1],1
  40f906:	dec    esp
  40f907:	(bad)  
  40f908:	sub    ch,BYTE PTR [ebx-0x2a]
  40f90b:	and    bh,BYTE PTR [eax+0x356967e8]
  40f911:	xchg   ebx,eax
  40f912:	pop    esp
  40f913:	xor    DWORD PTR [esi-0x6e8bb452],ebx
  40f919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f91a:	ret    0x8e07
  40f91d:	pop    eax
  40f91e:	data16 mov es,WORD PTR [eax]
  40f921:	add    cl,dh
  40f923:	cs dec ebx
  40f925:	xor    al,0x4c
  40f927:	add    cl,0xff
  40f92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92b:	sub    ebx,DWORD PTR [edi+0x26bfa2c]
  40f931:	xor    DWORD PTR [edx+0x7f],0x4b
  40f935:	dec    esp
  40f936:	dec    ebp
  40f937:	stos   BYTE PTR es:[edi],al
  40f938:	int    0xeb
  40f93a:	xor    DWORD PTR [eax+0x1ec4fe87],esp
  40f940:	dec    esp
  40f941:	adc    al,0x80
  40f943:	jne    0x40f906
  40f945:	push   DWORD PTR [edi+0x68]
  40f948:	dec    esi
  40f949:	push   DWORD PTR [esi]
  40f94b:	sub    eax,DWORD PTR [edx]
  40f94d:	sub    DWORD PTR [ebx+edx*1+0x2b26ff59],0x140804d5
  40f958:	inc    ebp
  40f959:	dec    ebx
  40f95a:	pop    ss
  40f95b:	xor    eax,0x140ac969
  40f960:	pop    ebp
  40f961:	std    
  40f962:	pop    es
  40f963:	mov    edi,0x83254bcc
  40f968:	push   ss
  40f969:	(bad)
  40f96c:	out    0x3,eax
  40f96e:	xor    DWORD PTR [edx+edx*1],edx
  40f971:	cmp    eax,0x5861def3
  40f976:	mov    bl,0x4f
  40f978:	mov    esp,0x23ac7fb7
  40f97d:	bound  ecx,QWORD PTR [esi]
  40f97f:	adc    al,0x91
  40f981:	(bad)  
  40f982:	xor    DWORD PTR [ecx-0x73],edx
  40f985:	xchg   DWORD PTR [eax],eax
  40f987:	add    ch,bh
  40f989:	sub    dl,dh
  40f98b:	les    esi,FWORD PTR [esi-0x4c030bcc]
  40f991:	idiv   BYTE PTR [ebx+0x1a]
  40f994:	lock adc ebp,ecx
  40f997:	shl    BYTE PTR [ecx+ebp*8],1
  40f99a:	sub    BYTE PTR [ebx+0x7f294afb],ch
  40f9a0:	sub    eax,0x86c4a1e7
  40f9a5:	sub    esi,DWORD PTR [edi+0x5]
  40f9a8:	xor    DWORD PTR [ecx+edx*2],edx
  40f9ab:	and    BYTE PTR [ebp+0x34],dh
  40f9ae:	cmp    eax,0xa2032d87
  40f9b3:	les    esp,FWORD PTR [esi+0x34]
  40f9b6:	mov    ah,0xf2
  40f9b8:	pop    edi
  40f9b9:	shr    ah,0x4a
  40f9bc:	sbb    eax,0x4ec4b203
  40f9c1:	sub    al,0x46
  40f9c3:	pop    es
  40f9c4:	xor    DWORD PTR [edx+eiz*8],edx
  40f9c7:	inc    ebx
  40f9c8:	lds    ecx,FWORD PTR [esi]
  40f9ca:	adc    dh,bl
  40f9cc:	xor    DWORD PTR [ecx+ebp*8],edx
  40f9cf:	inc    edx
  40f9d0:	jne    0x40fa02
  40f9d2:	(bad)  
  40f9d3:	call   0x5c410e0a
  40f9d8:	lock das 
  40f9da:	dec    edi
  40f9db:	push   ebx
  40f9dc:	sub    eax,0xe7de01be
  40f9e1:	pop    ss
  40f9e2:	push   0xffffffe9
  40f9e4:	jnp    0x40f98c
  40f9e6:	add    ecx,esi
  40f9e8:	add    DWORD PTR [ecx],ebp
  40f9ea:	sub    eax,0x2d000028
  40f9ef:	pop    ds
  40f9f0:	shl    BYTE PTR ds:0xe9883d30,0x32
  40f9f7:	adc    al,0xff
  40f9f9:	cmp    dh,BYTE PTR [ecx]
  40f9fb:	cmp    al,0x59
  40f9fd:	sub    BYTE PTR [edx+0x32],ch
  40fa00:	mov    BYTE PTR [edi*2+0x6aed7232],ah
  40fa07:	inc    ecx
  40fa08:	add    ecx,ebp
  40fa0a:	xor    al,ah
  40fa0c:	(bad)  
  40fa0d:	cld    
  40fa0e:	push   0xffffffe3
  40fa10:	(bad)  
  40fa11:	cli    
  40fa12:	scas   al,BYTE PTR es:[edi]
  40fa13:	mov    ebx,0x1432e7ff
  40fa18:	push   0xfe339ee9
  40fa1d:	push   ecx
  40fa1e:	adc    DWORD PTR [esi],edx
  40fa20:	add    cl,ch
  40fa22:	(bad)  
  40fa23:	jae    0x40fa98
  40fa25:	add    dh,dl
  40fa27:	xlat   BYTE PTR ds:[ebx]
  40fa28:	sti    
  40fa29:	jmp    0x74410e60
  40fa2e:	jno    0x40fa5f
  40fa30:	dec    edi
  40fa31:	shl    DWORD PTR [edx],cl
  40fa33:	mov    esi,0x2b813601
  40fa38:	imul   ebp,ecx,0x2603a5eb
  40fa3e:	popa   
  40fa3f:	sub    BYTE PTR ds:0xc01f32a8,ch
  40fa45:	popf   
  40fa46:	inc    esp
  40fa47:	xor    dh,BYTE PTR [ecx+edx*1-0x26]
  40fa4b:	js     0x40fa7d
  40fa4d:	add    BYTE PTR [edi],ch
  40fa4f:	fsubp  st(1),st
  40fa51:	xor    BYTE PTR [eax],al
  40fa53:	add    BYTE PTR [edi],ch
  40fa55:	arpl   si,si
  40fa57:	call   0x4002d8
  40fa5c:	dec    edi
  40fa5d:	pop    ss
  40fa5e:	and    BYTE PTR [ecx+0x8],al
  40fa61:	aam    0x43
  40fa63:	cld    
  40fa64:	sbb    BYTE PTR [edi],dl
  40fa66:	add    BYTE PTR [eax],al
  40fa68:	lea    esi,[ebx-0x6]
  40fa6b:	push   eax
  40fa6c:	jb     0x40fa86
  40fa6e:	push   0x2
  40fa70:	pop    ss
  40fa71:	push   edx
  40fa72:	(bad)  
  40fa73:	(bad)  
  40fa74:	sub    edx,DWORD PTR [edi+edi*8]
  40fa77:	adc    eax,0x410da5
  40fa7c:	rcl    esi,cl
  40fa7e:	or     eax,0x188184
  40fa83:	add    BYTE PTR [edi-0x27df298e],dl
  40fa89:	push   ss
  40fa8a:	add    bh,al
  40fa8c:	adc    eax,0xc8fffffc
  40fa91:	push   ss
  40fa92:	push   DWORD PTR [ebx-0x6c]
  40fa95:	stos   DWORD PTR es:[edi],eax
  40fa96:	inc    ebx
  40fa97:	loopne 0x40fab8
  40fa99:	dec    ecx
  40fa9a:	push   es
  40fa9b:	(bad)  
  40fa9c:	push   ebp
  40fa9d:	mov    ah,0xc5
  40fa9f:	inc    ebp
  40faa0:	add    BYTE PTR [eax],bl
  40faa2:	add    BYTE PTR [eax],al
  40faa4:	cwde   
  40faa5:	rol    DWORD PTR [ebx-0x14],cl
  40faa8:	cwde   
  40faa9:	push   ss
  40faaa:	add    BYTE PTR [eax],al
  40faac:	push   edi
  40faad:	jae    0x40fa9d
  40faaf:	add    BYTE PTR [eax-0x6a38ffea],cl
  40fab5:	loop   0x40fab5
  40fab7:	inc    DWORD PTR [eax]
  40fab9:	add    BYTE PTR [eax+0x16],bl
  40fabc:	lea    eax,[ebp+0x40]
  40fabf:	push   0xd00c75fd
  40fac4:	sub    al,0x4
  40fac6:	pop    eax
  40fac7:	push   ss
  40fac8:	or     eax,eax
  40faca:	xor    DWORD PTR [ecx+0x8bc82ea],edx
  40fad0:	add    al,0x74
  40fad2:	sub    BYTE PTR [edx],bl
  40fad4:	iret   
  40fad5:	repz mov esi,0x7028ab38
  40fadb:	cmp    edi,DWORD PTR [edi]
  40fadd:	inc    esp
  40fade:	add    eax,0x3100023d
  40fae3:	inc    esi
  40fae4:	inc    esi
  40fae6:	je     0x40fb4f
  40fae8:	add    al,BYTE PTR [eax]
  40faea:	xor    DWORD PTR [ebx],edi
  40faec:	inc    edi
  40faed:	je     0x40faec
  40faef:	(bad)  
  40faf0:	in     eax,dx
  40faf1:	call   0xb44f73d
  40faf6:	icebp  
  40faf7:	out    0xe9,eax
  40faf9:	out    0xca,eax
  40fafb:	jno    0x40fb44
  40fafd:	(bad)  
  40fafe:	mov    dl,0x40
  40fb00:	popa   
  40fb01:	sub    eax,0x74023b70
  40fb06:	aaa    
  40fb07:	xchg   edx,eax
  40fb08:	in     eax,dx
  40fb09:	loopne 0x40fb22
  40fb0b:	cld    
  40fb0c:	add    eax,edi
  40fb0e:	xor    al,0xe6
  40fb10:	sbb    al,BYTE PTR [ecx+0x31]
  40fb13:	cmp    al,0x2
  40fb15:	add    BYTE PTR [ecx+0x31d3c5be],dh
  40fb1b:	das    
  40fb1c:	sti    
  40fb1d:	inc    BYTE PTR [eax]
  40fb1f:	add    BYTE PTR [edi+eiz*4],ah
  40fb22:	inc    edi
  40fb23:	je     0x40faba
  40fb25:	ret    
  40fb26:	sub    eax,0x473b3102
  40fb2b:	je     0x40fab2
  40fb2d:	rol    DWORD PTR [ebx+0x0],cl
  40fb30:	xor    DWORD PTR [ebx],edi
  40fb32:	inc    esi
  40fb33:	xor    dh,BYTE PTR [ecx-0x6c]
  40fb36:	inc    edi
  40fb37:	(bad)  
  40fb38:	outs   dx,BYTE PTR ds:[esi]
  40fb39:	repnz push esp
  40fb3b:	lods   eax,DWORD PTR ds:[esi]
  40fb3c:	sub    DWORD PTR [edx-0x9],eax
  40fb3f:	test   BYTE PTR [ebx],dl
  40fb41:	add    cl,BYTE PTR [eax-0x2]
  40fb44:	stos   BYTE PTR es:[edi],al
  40fb45:	adc    al,0x2
  40fb47:	std    
  40fb48:	imul   esp,DWORD PTR [ecx],0x64
  40fb4b:	loopne 0x40fb91
  40fb4d:	xor    DWORD PTR ds:0xe914318b,edx
  40fb53:	add    edx,esi
  40fb55:	int3   
  40fb56:	das    
  40fb57:	inc    esp
  40fb58:	test   DWORD PTR [ebp+0x2ff2840c],ebx
  40fb5e:	sub    ch,0x16
  40fb61:	aam    0xe8
  40fb63:	dec    ebx
  40fb64:	mov    al,ds:0x9847aa13
  40fb69:	adc    al,0xd1
  40fb6b:	xor    eax,0x5be91430
  40fb70:	cld    
  40fb71:	in     eax,dx
  40fb72:	int    0x47
  40fb74:	push   cs
  40fb75:	xchg   DWORD PTR [ecx+0x7fbbef47],edi
  40fb7b:	push   ss
  40fb7c:	jo     0x40fb92
  40fb7e:	inc    ecx
  40fb7f:	push   ebp
  40fb80:	or     dl,bl
  40fb82:	call   0x2540fbe2
  40fb87:	in     eax,dx
  40fb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb89:	inc    edi
  40fb8a:	push   esi
  40fb8b:	adc    ecx,esi
  40fb8d:	(bad)  
  40fb8e:	(bad)  
  40fb8f:	mov    eax,0x1470162a
  40fb94:	add    DWORD PTR [esi-0x8],0xeddc8530
  40fb9b:	add    DWORD PTR [eax],ebp
  40fb9d:	add    al,0x19
  40fb9f:	sbb    eax,0x389ec4c4
  40fba4:	jge    0x40fbb0
  40fba6:	xchg   esi,eax
  40fba7:	xor    al,dl
  40fba9:	enter  0xd359,0xe8
  40fbad:	(bad)  
  40fbaf:	cli    
  40fbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb1:	add    ecx,DWORD PTR [ecx+0x77471233]
  40fbb7:	mov    ebx,0x13f01677
  40fbbc:	sar    DWORD PTR ds:0xe8ffd31a,1
  40fbc2:	cli    
  40fbc3:	inc    ebx
  40fbc4:	cmp    DWORD PTR [esi],ebp
  40fbc6:	out    dx,al
  40fbc7:	mov    eax,0x3075d015
  40fbcc:	data16 aaa 
  40fbce:	and    eax,0xf300ffd3
  40fbd3:	jmp    0x6fa:0x19d50efe
  40fbda:	jbe    0x40fc13
  40fbdc:	xor    al,0x3
  40fbde:	outs   dx,BYTE PTR ds:[esi]
  40fbdf:	or     ch,BYTE PTR cs:[ecx]
  40fbe2:	add    DWORD PTR [ebx],eax
  40fbe4:	call   0xfe6f67c8
  40fbe9:	repnz add BYTE PTR [eax],al
  40fbec:	jb     0x40fb91
  40fbee:	or     DWORD PTR [esi+0x284a3f31],esp
  40fbf4:	xor    eax,0x32e90015
  40fbf9:	mov    esp,0x1432e800
  40fbfe:	call   0xfe703ed9
  40fc03:	mov    al,BYTE PTR [ebp-0x25]
  40fc06:	inc    eax
  40fc07:	jmp    0xe93cd423
  40fc0c:	xor    eax,0xf16c0014
  40fc11:	sub    ecx,DWORD PTR [edi-0x6a]
  40fc14:	and    ebp,esp
  40fc16:	dec    edx
  40fc17:	sub    BYTE PTR ds:0x32eb683c,ch
  40fc1d:	adc    al,0xb
  40fc1f:	test   eax,0xbcff0881
  40fc24:	inc    ebp
  40fc25:	fild   DWORD PTR [eax-0x17]
  40fc28:	cli    
  40fc29:	dec    eax
  40fc2a:	not    WORD PTR cs:[ebp+0x4]
  40fc2f:	sbb    dl,cl
  40fc31:	aam    0xff
  40fc33:	call   0x4141106a
  40fc38:	mov    ecx,gs
  40fc3a:	inc    BYTE PTR [eax]
  40fc3c:	test   edx,0xd6273304
  40fc42:	push   si
  40fc44:	das    
  40fc45:	pop    ecx
  40fc46:	(bad)  
  40fc47:	out    0x4b,eax
  40fc49:	ret    0xfffd
  40fc4c:	add    edx,edx
  40fc4e:	push   ebx
  40fc4f:	mov    eax,DWORD PTR [eax]
  40fc51:	add    BYTE PTR [ebx+ecx*2],dh
  40fc54:	add    eax,0xf81388e9
  40fc59:	jb     0x40fca4
  40fc5b:	sar    ch,cl
  40fc5d:	push   0x18
  40fc5f:	retf   
  40fc60:	mov    eax,0xb8131801
  40fc65:	add    BYTE PTR [eax],cl
  40fc67:	adc    eax,DWORD PTR [eax]
  40fc69:	leave  
  40fc6a:	dec    edx
  40fc6b:	das    
  40fc6c:	(bad)  
  40fc6d:	addr16 cmp ebx,ecx
  40fc70:	add    BYTE PTR ds:[eax],dl
  40fc73:	inc    edx
  40fc74:	inc    edx
  40fc76:	out    0x4f,eax
  40fc78:	clc    
  40fc79:	call   0xa42914c6
  40fc7e:	fst    DWORD PTR [edx]
  40fc80:	add    al,ch
  40fc82:	xchg   edx,eax
  40fc83:	aad    0xfd
  40fc85:	push   eax
  40fc87:	lods   al,BYTE PTR ds:[esi]
  40fc88:	lock inc DWORD PTR [edi-0x680aed31]
  40fc8f:	fsub   st,st(6)
  40fc91:	cld    
  40fc92:	popf   
  40fc93:	fdivr  st,st(5)
  40fc95:	and    ebp,0xffffffc7
  40fc98:	dec    ecx
  40fc99:	inc    ecx
  40fc9a:	enter  0x7412,0x19
  40fc9e:	sbb    edx,DWORD PTR [edi]
  40fca0:	loope  0x40fcd0
  40fca2:	pop    ecx
  40fca3:	sbb    BYTE PTR [eax],al
  40fca5:	je     0x40fc35
  40fca7:	xlat   BYTE PTR ds:[ebx]
  40fca8:	adc    esp,ecx
  40fcaa:	(bad)  
  40fcab:	push   ecx
  40fcac:	inc    dh
  40fcae:	popf   
  40fcaf:	jnp    0x40fcd8
  40fcb1:	inc    ecx
  40fcb2:	cwde   
  40fcb3:	adc    DWORD PTR [eax],eax
  40fcb5:	add    BYTE PTR [eax],al
  40fcb7:	add    BYTE PTR [ecx],dh
  40fcb9:	mov    ebp,0xdd7ac65b
  40fcbe:	inc    esp
  40fcbf:	out    0x79,eax
  40fcc1:	fadd   DWORD PTR [esi+edi*8+0x72]
  40fcc5:	inc    esp
  40fcc6:	int3   
  40fcc7:	call   0x718b39bd
  40fccc:	xor    dl,bh
  40fcce:	inc    esp
  40fccf:	out    0x26,eax
  40fcd1:	cmp    al,0x2
  40fcd3:	add    bl,bl
  40fcd5:	aaa    
  40fcd6:	test   eax,0x530d632a
  40fcdb:	cmp    BYTE PTR [ebx],0x38
  40fcde:	int    0x1
  40fce0:	sbb    bh,BYTE PTR [edx]
  40fce2:	push   edi
  40fce3:	jmp    0x141e:0xfe44b719
  40fcea:	ins    BYTE PTR es:[edi],dx
  40fceb:	not    BYTE PTR [esi]
  40fced:	aas    
  40fcee:	fdivr  st,st(7)
  40fcf0:	push   ss
  40fcf1:	or     BYTE PTR [ebx],al
  40fcf3:	add    BYTE PTR [ecx],dh
  40fcf5:	dec    esi
  40fcf6:	sbb    eax,0x3fc587c
  40fcfb:	dec    DWORD PTR [ebx+edi*4-0x57]
  40fcff:	inc    eax
  40fd00:	xor    DWORD PTR [esi+0x1d],edx
  40fd03:	test   BYTE PTR [eax+0x14ff03fc],cl
  40fd09:	mov    bl,0xa9
  40fd0b:	inc    eax
  40fd0c:	xor    DWORD PTR [esi+0x1d],edi
  40fd0f:	mov    WORD PTR [eax-0x4],gs
  40fd12:	add    edi,edi
  40fd14:	or     al,0xab
  40fd16:	test   eax,0x1d863140
  40fd1b:	xchg   esp,eax
  40fd1c:	add    BYTE PTR [eax],al
  40fd1e:	pop    eax
  40fd1f:	cld    
  40fd20:	add    edi,edi
  40fd22:	push   esp
  40fd23:	mov    bl,0xa9
  40fd25:	inc    eax
  40fd26:	xor    DWORD PTR [esi-0x40763e3],ebp
  40fd2c:	add    edi,edi
  40fd2e:	dec    esp
  40fd2f:	fld    TBYTE PTR [ecx+0x66143140]
  40fd35:	push   ds
  40fd36:	int    0xcb
  40fd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd39:	add    edi,DWORD PTR [esi-0x9]
  40fd3c:	sub    BYTE PTR [edx+0x1e4e13f1],0x9d
  40fd43:	retf   
  40fd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd45:	add    esp,DWORD PTR [esi-0x9]
  40fd48:	js     0x40fcf4
  40fd4a:	icebp  
  40fd4b:	adc    esi,DWORD PTR [esi]
  40fd4d:	push   ds
  40fd4e:	popf   
  40fd4f:	retf   
  40fd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd51:	add    ecx,DWORD PTR [esi-0x9]
  40fd54:	pusha  
  40fd55:	stos   BYTE PTR es:[edi],al
  40fd56:	icebp  
  40fd57:	adc    ebx,DWORD PTR [esi]
  40fd59:	push   ds
  40fd5a:	jge    0x40fd27
  40fd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5d:	add    esi,DWORD PTR [esi]
  40fd5f:	imul   DWORD PTR [eax]
  40fd61:	stos   BYTE PTR es:[edi],al
  40fd62:	jno    0x40fd78
  40fd64:	push   es
  40fd65:	push   ds
  40fd66:	in     eax,dx
  40fd67:	retf   0x3a7
  40fd6a:	push   ds
  40fd6b:	mul    DWORD PTR [eax]
  40fd6d:	stos   BYTE PTR es:[edi],al
  40fd6e:	jno    0x40fd84
  40fd70:	out    dx,al
  40fd71:	sbb    eax,0x427cafd
  40fd76:	push   es
  40fd77:	idiv   DWORD PTR [eax-0x29eb8e23]
  40fd7d:	jmp    0x468c864
  40fd82:	add    BYTE PTR [eax],al
  40fd84:	out    dx,al
  40fd85:	mul    BYTE PTR [eax-0x41eb8e23]
  40fd8b:	jmp    0x468c88a
  40fd90:	(bad)  
  40fd91:	test   al,0xdd
  40fd94:	jno    0x40fdaa
  40fd96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd97:	jmp    0x468c86e
  40fd9c:	mov    esi,0x71dd80f6
  40fda1:	adc    al,0x8e
  40fda3:	jmp    0x468c842
  40fda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda9:	idiv   BYTE PTR [eax-0x23]
  40fdac:	icebp  
  40fdad:	adc    eax,DWORD PTR [eax]
  40fdaf:	jbe    0x40fd39
  40fdb1:	and    BYTE PTR [eax+0x28],bl
  40fdb4:	xor    eax,0x6461242d
  40fdb9:	sar    edi,cl
  40fdbb:	pop    ebp
  40fdbc:	mov    BYTE PTR [eax],ch
  40fdbe:	pop    eax
  40fdbf:	test   al,0x32
  40fdc1:	sub    eax,0xd38ce924
  40fdc6:	inc    DWORD PTR [ebp+0x58]
  40fdc9:	adc    BYTE PTR [edx-0x58],bl
  40fdcc:	xor    ch,BYTE PTR ds:0xd374e124
  40fdd2:	jmp    FWORD PTR ds:0xa85a1858
  40fdd8:	xor    ch,BYTE PTR ds:0xd35cf924
  40fdde:	call   DWORD PTR ds:0xa85a0048
  40fde4:	xor    ch,BYTE PTR [ebx]
  40fde6:	and    al,0xe1
  40fde8:	add    BYTE PTR [eax],al
  40fdea:	add    al,0xd5
  40fdec:	(bad)  
  40fded:	std    
  40fdee:	or     DWORD PTR [eax],edx
  40fdf0:	pop    edx
  40fdf1:	test   al,0x32
  40fdf3:	sub    esp,DWORD PTR [ecx+ecx*8]
  40fdf6:	in     al,dx
  40fdf7:	aam    0xff
  40fdf9:	in     eax,0x19
  40fdfb:	clc    
  40fdfc:	pop    ecx
  40fdfd:	sub    BYTE PTR ds:0xd701242b,dh
  40fe03:	aam    0xff
  40fe05:	int    0xd9
  40fe07:	call   FWORD PTR [ecx+0x28]
  40fe0a:	sub    eax,0xfcf9242b
  40fe0f:	aam    0xff
  40fe11:	mov    ch,0xc9
  40fe13:	out    0x59,eax
  40fe15:	sub    BYTE PTR ds:0xe4e1242b,dh
  40fe1b:	aam    0xff
  40fe1d:	popf   
  40fe1e:	leave  
  40fe1f:	out    dx,eax
  40fe20:	pop    ecx
  40fe21:	sub    BYTE PTR ds:0x8f29242b,ch
  40fe27:	aam    0xff
  40fe29:	jmp    FWORD PTR [edi+0x495a423c]
  40fe2f:	adc    bh,bh
  40fe31:	and    eax,0x3f4a50
  40fe36:	pop    ds
  40fe37:	cmp    al,0x4e
  40fe39:	pop    edx
  40fe3a:	fst    DWORD PTR [edi]
  40fe3c:	jmp    DWORD PTR ds:0x3f49c4
  40fe42:	fistp  QWORD PTR [ebx]
  40fe44:	push   esi
  40fe45:	pop    edx
  40fe46:	cdq    
  40fe47:	pop    ss
  40fe48:	jmp    DWORD PTR ds:0x3f498c
  40fe4e:	add    BYTE PTR [eax],al
  40fe50:	pop    ds
  40fe51:	cmp    al,0x5e
  40fe53:	pop    edx
  40fe54:	mov    DWORD PTR [edi],edx
  40fe56:	jmp    DWORD PTR ds:0x3f4974
  40fe5c:	(bad)  
  40fe5e:	push   0x5a
  40fe60:	mov    DWORD PTR [edi],edx
  40fe62:	jmp    DWORD PTR ds:0x3f4994
  40fe68:	aas    
  40fe69:	cmp    al,0x76
  40fe6b:	pop    edx
  40fe6c:	fst    DWORD PTR [esi]
  40fe6e:	jmp    DWORD PTR ds:0x3f499c
  40fe74:	pop    ds
  40fe75:	xor    edi,DWORD PTR [esi+0x5a]
  40fe78:	fst    DWORD PTR [esi]
  40fe7a:	jmp    DWORD PTR ds:0x3f4a94
  40fe80:	fbstp  TBYTE PTR [edx]
  40fe82:	xchg   BYTE PTR [edx+0x49],bl
  40fe85:	adc    bh,bh
  40fe87:	and    eax,0x3f4a8c
  40fe8c:	out    dx,eax
  40fe8d:	xor    cl,BYTE PTR [esi-0xeff6a6]
  40fe93:	and    eax,0x3f4a74
  40fe98:	lahf   
  40fe99:	xor    dl,BYTE PTR [esi-0xefe6a6]
  40fe9f:	and    eax,0x3f4a68
  40fea4:	xor    DWORD PTR [edx-0x3f4581a],eax
  40feaa:	add    edi,edi
  40feac:	dec    esp
  40fead:	rcr    ebp,0x40
  40feb0:	xor    DWORD PTR [edx+0xb3e6],ebp
  40feb6:	sti    
  40feb7:	sti    
  40feb8:	add    edi,edi
  40feba:	push   esp
  40febb:	in     eax,0xdd
  40febd:	inc    eax
  40febe:	xor    DWORD PTR [edx+0x7bdbbbe6],esi
  40fec4:	add    bh,bh
  40fec6:	dec    esp
  40fec7:	std    
  40fec8:	fld    QWORD PTR [eax+0x31]
  40fecb:	(bad)  
  40fecd:	ret    
  40fece:	or     edi,DWORD PTR [edx+eax*1-0x1]
  40fed2:	adc    al,0xe5
  40fed4:	fld    QWORD PTR [eax+0x31]
  40fed7:	loop   0x40febf
  40fed9:	iret   
  40feda:	jmp    0x40ff57
  40fedc:	add    bh,bh
  40fede:	or     al,0xe9
  40fee0:	fld    QWORD PTR [eax+0x31]
  40fee3:	or     ah,bh
  40fee5:	xlat   BYTE PTR ds:[ebx]
  40fee6:	fstp   TBYTE PTR [ebx+0x2]
  40fee9:	call   DWORD PTR [edi+esi*8-0x23]
  40feed:	inc    eax
  40feee:	xor    DWORD PTR [edx],edx
  40fef0:	out    0xdf,eax
  40fef2:	jnp    0x40ff70
  40fef4:	add    bh,bh
  40fef6:	dec    esp
  40fef7:	pop    ss
  40fef8:	fiadd  WORD PTR [eax+0x31]
  40fefb:	cmp    ah,ch
  40fefd:	out    0x6b,eax
  40feff:	cld    
  40ff00:	add    edi,edi
  40ff02:	push   esp
  40ff03:	push   edi
  40ff04:	fadd   QWORD PTR [eax+0x31]
  40ff07:	inc    edx
  40ff08:	in     eax,0xef
  40ff0a:	mov    edi,esp
  40ff0c:	add    edi,edi
  40ff0e:	or     al,0x67
  40ff10:	fadd   QWORD PTR [eax+0x31]
  40ff13:	push   0xffffffe5
  40ff15:	sti    
  40ff16:	jnp    0x40ff14
  40ff18:	add    edi,edi
  40ff1a:	add    BYTE PTR [eax],al
  40ff1c:	adc    al,0x3b
  40ff1e:	fild   DWORD PTR [eax+0x31]
  40ff21:	adc    al,0xb5
  40ff23:	dec    edi
  40ff24:	jmp    0x6158:0xea4fac58
  40ff2b:	(bad)  
  40ff2c:	push   edx
  40ff2d:	adc    BYTE PTR [edx+0x3b],ch
  40ff30:	xor    BYTE PTR [edi+0x14127bf0],ah
  40ff36:	jmp    0xe951723e
  40ff3b:	test   BYTE PTR [esi-0x36f413f0],al
  40ff41:	push   ss
  40ff42:	jmp    0xe497304a
  40ff47:	add    esi,DWORD PTR [edx+0x36bee02c]
  40ff4d:	ins    BYTE PTR es:[edi],dx
  40ff4e:	in     al,0x3
  40ff50:	xor    DWORD PTR [ebx+ebp*1],edx
  40ff53:	pop    es
  40ff54:	xor    DWORD PTR [ebp+0x1bd41340],edx
  40ff5a:	jno    0x40ff65
  40ff5c:	xor    DWORD PTR [ecx+ebp*8],edx
  40ff5f:	inc    ebp
  40ff60:	xor    dl,BYTE PTR [edx+ebp*2]
  40ff63:	cmp    ebx,DWORD PTR [esi]
  40ff65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff66:	lock jnp 0x40ff97
  40ff69:	adc    al,0xe9
  40ff6b:	add    esi,ebx
  40ff6d:	psubsw mm0,QWORD PTR [esi+ebx*1-0x26f47c2c]
  40ff75:	sbb    eax,0x563103e9
  40ff7a:	in     al,dx
  40ff7b:	add    ecx,DWORD PTR [esp+edx*4-0x18]
  40ff7f:	add    eax,DWORD PTR [eax]
  40ff81:	add    BYTE PTR [ecx],dh
  40ff83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff84:	lock jnp 0x40ffb1
  40ff87:	adc    al,0xe9
  40ff89:	add    esi,ebx
  40ff8b:	psubsw mm0,QWORD PTR [eax]
  40ff8e:	xor    DWORD PTR [ebx],edx
  40ff90:	jmp    0x815d6398
  40ff95:	push   cs
  40ff96:	xor    DWORD PTR [ecx+ebp*8],edx
  40ff99:	inc    ecx
  40ff9a:	xor    dl,BYTE PTR [eax+eax*1]
  40ff9d:	hlt    
  40ff9e:	xor    dl,BYTE PTR [esi]
  40ffa0:	add    cl,ch
  40ffa2:	icebp  
  40ffa3:	adc    BYTE PTR [eax+0x1432f9],bh
  40ffa9:	stos   DWORD PTR es:[edi],eax
  40ffaa:	sub    DWORD PTR [edi*1+0x1436e9],edx
  40ffb1:	or     al,0x35
  40ffb3:	ins    BYTE PTR es:[edi],dx
  40ffb4:	adc    ecx,ebp
  40ffb6:	xor    dl,BYTE PTR [edx+eax*8]
  40ffb9:	in     eax,0x32
  40ffbb:	out    0xff,eax
  40ffbd:	loopne 0x40fff1
  40ffbf:	adc    al,0x7d
  40ffc1:	loope  0x40ffcd
  40ffc3:	add    eax,0x5632e900
  40ffc8:	add    ebp,ecx
  40ffca:	xor    DWORD PTR [eax+edx*1],edx
  40ffcd:	jmp    0x9148a704
  40ffd2:	aas    
  40ffd3:	adc    al,0x0
  40ffd5:	jmp    0xfc4114ca
  40ffda:	xor    dh,ah
  40ffdc:	(bad)  
  40ffdd:	call   0xd1f91053
  40ffe2:	xor    dl,BYTE PTR [eax+eax*1]
  40ffe5:	sub    eax,DWORD PTR [eax]
  40ffe7:	add    BYTE PTR [ecx],ch
  40ffe9:	adc    al,0x3d
  40ffeb:	jmp    0x953f2862
  40fff0:	cmp    ch,BYTE PTR [ecx+ebx*1-0x17]
  40fff4:	xor    dl,BYTE PTR [edx+eax*8]
  40fff7:	in     eax,dx
  40fff8:	xor    ch,cl
  40fffa:	jmp    FWORD PTR [eax+0x2d]
  40fffd:	adc    al,0x7d
  40ffff:	loope  0x40ff8b
  410001:	or     eax,DWORD PTR [eax]
  410003:	jmp    0xe944523a
  410008:	add    ebx,DWORD PTR [ebp+0x3c]
  41000b:	jmp    0xe6411542
  410010:	xchg   ecx,eax
  410011:	push   esp
  410012:	mov    WORD PTR ds:0x8b0634,ds
  410018:	mov    ebp,edx
  41001a:	add    al,BYTE PTR [eax]
  41001c:	dec    ebx
  41001d:	nop
  41001e:	sbb    al,BYTE PTR [eax+ebx*8]
  410021:	adc    edi,edi
  410023:	jne    0x41001a
  410025:	call   0x8900:0x13cc107f
  41002c:	dec    ecx
  41002d:	or     eax,DWORD PTR [eax+eax*1]
  410030:	cwde   
  410031:	push   ebx
  410032:	lds    eax,FWORD PTR [ecx+0xf94]
  410038:	mov    al,ds:0x21000013
  41003d:	nop
  41003e:	push   cs
  41003f:	add    al,0x98
  410041:	adc    eax,DWORD PTR [ebx+0xf6c7c]
  410047:	mov    eax,DWORD PTR [ecx]
  410049:	or     eax,DWORD PTR [eax+eax*1]
  41004c:	add    BYTE PTR [eax],al
  41004e:	mov    BYTE PTR [edi+0x9],bl
  410051:	mov    bl,BYTE PTR [ecx+0x15]
  410054:	sar    dh,0x18
  410057:	fwait
  410058:	inc    ecx
  41005a:	dec    esp
  41005b:	adc    edx,eax
  41005d:	and    DWORD PTR [edx],ecx
  41005f:	sldt   WORD PTR [ebx+0x406d9]
  410066:	pop    eax
  410067:	out    0x73,al
  410069:	sbb    eax,0x40e8fc3
  41006e:	dec    eax
  41006f:	adc    ecx,DWORD PTR [ecx+0xf2081]
  410075:	add    al,bl
  410077:	int    0x7f
  410079:	sbb    al,0xc
  41007b:	adc    eax,DWORD PTR [eax]
  41007d:	or     BYTE PTR [eax],cl
  41007f:	adc    eax,DWORD PTR [eax]
  410081:	mov    DWORD PTR [ecx+0x18000403],ebx
  410087:	call   0xd000:0x130c1887
  41008e:	sub    ebp,edx
  410090:	add    DWORD PTR [ecx+0x62131],0x1cb65631
  41009a:	stos   BYTE PTR es:[edi],al
  41009b:	mov    ebx,0x3d310413
  4100a0:	mov    DWORD PTR [eax+0x23929],eax
  4100a6:	jno    0x410116
  4100a8:	sbb    BYTE PTR [ebx],0x35
  4100ab:	cmp    eax,0x3d310802
  4100b0:	add    cl,BYTE PTR [ecx+0x2cb00000]
  4100b6:	push   es
  4100b7:	add    BYTE PTR [ecx],dh
  4100b9:	mov    dl,0x8a
  4100bb:	pop    ss
  4100bc:	xor    eax,0x308a023d
  4100c1:	cmp    eax,DWORD PTR [edx-0x3]
  4100c4:	jno    0x41007a
  4100c6:	add    al,bl
  4100c8:	mov    edx,0xaa03e7f0
  4100cd:	push   0x5edc03e6
  4100d2:	shl    DWORD PTR [edx],cl
  4100d4:	scas   eax,DWORD PTR es:[di]
  4100d6:	retf   0xbbff
  4100d9:	les    eax,FWORD PTR [eax+0x2c0c30e6]
  4100df:	inc    ebp
  4100e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e1:	inc    eax
  4100e2:	rol    DWORD PTR [edx-0x104cc4b7],cl
  4100e8:	mov    dl,0xe6
  4100ea:	add    bh,BYTE PTR [ebp-0x1c312c2]
  4100f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f1:	xchg   DWORD PTR [ecx],ecx
  4100f3:	je     0x410098
  4100f5:	push   0xffffff87
  4100f7:	(bad)  
  4100f8:	xor    ah,dl
  4100fa:	pop    ds
  4100fb:	add    al,0x31
  4100fd:	cmp    esi,DWORD PTR [ebp+0x13bcaa18]
  410103:	add    al,0x31
  410105:	cmp    ecx,DWORD PTR [ecx+0x22f2980]
  41010b:	add    BYTE PTR [ecx+0x14],dh
  41010e:	jo     0x41018a
  410110:	sbb    dl,BYTE PTR [eax]
  410112:	jmp    0xf8d4b91a
  410117:	pop    es
  410118:	add    BYTE PTR [eax],al
  41011a:	xor    DWORD PTR [edx+eiz*2],edx
  41011d:	add    BYTE PTR [esi+0x10],0xe9
  410121:	add    ebx,edi
  410123:	push   edx
  410124:	out    0xb7,eax
  410126:	cmp    BYTE PTR [edx+0x26ea01d0],bl
  41012c:	test   eax,0xea39268b
  410131:	push   ebx
  410132:	push   ss
  410133:	adc    edx,DWORD PTR [eax+0x1f]
  410136:	xor    eax,0x49b6e914
  41013b:	cdq    
  41013c:	adc    esi,DWORD PTR [di]
  41013f:	adc    al,0xe9
  410141:	mov    dh,BYTE PTR [ecx+0x3103e50c]
  410147:	aam    0x5f
  410149:	jp     0x410175
  41014b:	adc    cl,ch
  41014d:	add    ebp,DWORD PTR [eax+0x3107f893]
  410153:	adc    al,0x72
  410155:	add    BYTE PTR [esi+0x10],0xe9
  410159:	add    edi,DWORD PTR [ebx+0x5c58eb0c]
  41015f:	push   ecx
  410160:	pop    ss
  410161:	sub    DWORD PTR [ebx+0x268be736],esi
  410167:	lahf   
  410168:	pop    edx
  410169:	fdiv   DWORD PTR [ecx]
  41016b:	jnp    0x410139
  41016d:	pop    es
  41016e:	xor    DWORD PTR [esp+ebx*4],edx
  410171:	sbb    ch,BYTE PTR [edx+0x3107f893]
  410177:	adc    al,0x60
  410179:	cmp    BYTE PTR [esi],0x10
  41017c:	jmp    0x71410184
  410181:	fwait
  410182:	aas    
  410183:	pop    ds
  410184:	sub    eax,0xb18ae914
  410189:	add    eax,DWORD PTR [eax]
  41018b:	in     eax,dx
  41018c:	xor    dl,BYTE PTR [ebx+ecx*4]
  41018f:	push   0xe900101a
  410194:	inc    eax
  410195:	push   ebx
  410196:	add    BYTE PTR [ebp+0x3f],dl
  410199:	call   0x61c1:0x277ceb0f
  4101a0:	inc    ebp
  4101a1:	cmp    DWORD PTR [ecx],eax
  4101a3:	cdq    
  4101a4:	int    0x13
  4101a6:	test   eax,0xfe24cedd
  4101ab:	cmp    al,0x24
  4101ad:	cdq    
  4101ae:	sbb    cl,0xbe
  4101b1:	and    al,0xfe
  4101b3:	jo     0x410161
  4101b5:	cld    
  4101b6:	add    ebp,ecx
  4101b8:	xor    dl,ah
  4101ba:	mov    BYTE PTR [eax+0x49],dl
  4101bd:	adc    BYTE PTR [eax],al
  4101bf:	jmp    0xed509571
  4101c4:	xor    dl,BYTE PTR [ebx+ecx*4]
  4101c7:	jo     0x4101f6
  4101c9:	adc    BYTE PTR [eax],al
  4101cb:	jmp    0xf9ff5b2
  4101d0:	pop    eax
  4101d1:	push   edx
  4101d2:	add    ebp,ecx
  4101d4:	pop    edi
  4101d5:	mov    edi,0x148ecd8a
  4101da:	push   esi
  4101db:	sbb    ch,ch
  4101dd:	mov    ebp,0x9e2a4c82
  4101e2:	add    al,0x84
  4101e4:	add    BYTE PTR [eax],al
  4101e6:	sub    dl,BYTE PTR [eax+eax*1]
  4101e9:	jmp    0xdd64aaad
  4101ee:	mov    bh,0x1d
  4101f0:	sub    dh,BYTE PTR [eax+ebp*4]
  4101f3:	mov    al,0x23
  4101f5:	jmp    0x42c5079e
  4101fa:	loope  0x4101ff
  4101fc:	mov    esp,DWORD PTR [esi+esi*4]
  4101ff:	dec    ecx
  410200:	mov    WORD PTR [edx+0x35],?
  410203:	adc    al,0x0
  410205:	add    BYTE PTR [eax],cl
  410207:	and    bl,BYTE PTR [eax]
  410209:	je     0x410221
  41020b:	push   ecx
  41020c:	inc    eax
  41020d:	test   DWORD PTR [ecx+0x65],edx
  410210:	hlt    
  410211:	or     DWORD PTR [eax+0x17],0xffffff85
  410215:	leave  
  410216:	push   ebp
  410217:	adc    BYTE PTR [ebx+0x1f2dac0],al
  41021d:	sbb    DWORD PTR [eax+0x4b464716],0x7b
  410224:	and    bl,BYTE PTR [ecx+ecx*8]
  410227:	fs int3 
  410229:	pop    edi
  41022a:	cs cmp eax,0x17ccc259
  410230:	mov    edx,DWORD PTR [esp+esi*1+0x14]
  410234:	push   ebp
  410235:	push   esi
  410236:	inc    ebx
  410237:	call   0x23c18901
  41023c:	(bad)  
  41023d:	call   FWORD PTR [eax+0x12000017]
  410243:	adc    DWORD PTR [ecx+ecx*8+0x12ea39f],eax
  41024a:	add    BYTE PTR [eax],al
  41024c:	cwde   
  41024d:	pop    ss
  41024e:	push   edi
  41024f:	mov    edi,DWORD PTR [ebx+eax*2+0x12]
  410253:	or     DWORD PTR [edi],0xe
  410256:	jbe    0x41025d
  410258:	iret   
  410259:	push   cs
  41025a:	add    BYTE PTR [eax],al
  41025c:	pop    eax
  41025d:	xchg   edx,eax
  41025e:	shr    BYTE PTR [ebx],0x17
  410261:	xchg   DWORD PTR [eax],edi
  410263:	or     BYTE PTR [ecx+edx*2-0x223abfb3],al
  41026a:	jae    0x410262
  41026c:	fist   DWORD PTR [edx+ebx*1-0xe8a7fc]
  410273:	jne    0x4102e2
  410275:	xchg   edx,eax
  410276:	test   BYTE PTR [eax],dl
  410278:	inc    esp
  410279:	pop    ss
  41027a:	add    BYTE PTR [ecx+0x3ff96],cl
  410280:	xor    DWORD PTR ds:0x30b7c6c2,ebp
  410286:	(bad)  
  410287:	call   DWORD PTR [esi]
  410289:	and    eax,0xa4310002
  41028e:	or     BYTE PTR [edi],0x2d
  410291:	sub    eax,0x44b78b02
  410296:	(bad)  
  410297:	push   esi
  410299:	pop    esp
  41029a:	jecxz  0x410226
  41029c:	mov    bh,0x1c
  41029e:	(bad)  
  41029f:	jmp    esi
  4102a1:	mov    dh,0xd
  4102a3:	pop    edi
  4102a4:	test   eax,0x41853734
  4102a9:	xor    DWORD PTR [edx],eax
  4102ab:	add    BYTE PTR [edi+0x0],ch
  4102ae:	inc    esi
  4102af:	pop    es
  4102b0:	add    BYTE PTR [eax],al
  4102b2:	xor    DWORD PTR [eax-0x52868cc8],esi
  4102b8:	dec    edx
  4102b9:	(bad)  
  4102ba:	xor    BYTE PTR [ebx+0x2d310417],ch
  4102c0:	test   DWORD PTR [eax+0x38],ebp
  4102c3:	add    BYTE PTR [ebx],bl
  4102c5:	mov    esi,DWORD PTR [edi-0x690001e4]
  4102cb:	mov    ds:0x2d351781,eax
  4102d0:	add    al,BYTE PTR [eax-0x48]
  4102d3:	ficom  DWORD PTR [edi]
  4102d5:	add    al,0x31
  4102d7:	sub    eax,0x31218589
  4102dc:	add    al,BYTE PTR [eax]
  4102de:	mov    edx,0x31041bba
  4102e3:	sub    eax,0xdf330f8c
  4102e8:	cmp    ecx,eax
  4102ea:	test   eax,0x2d8e013c
  4102ef:	cmp    DWORD PTR [edx],eax
  4102f1:	add    BYTE PTR [ebx+eax*2+0x3921858b],bh
  4102f8:	add    al,BYTE PTR [eax]
  4102fa:	test   al,0x13
  4102fc:	outs   dx,DWORD PTR ds:[esi]
  4102fd:	sbb    al,0x35
  4102ff:	adc    al,0xe9
  410301:	ret    
  410302:	mov    ecx,0x1efff472
  410307:	and    bl,BYTE PTR [edi-0x7e]
  41030a:	es sbb cl,ch
  41030d:	add    edi,DWORD PTR [edx+0x6ffe09a]
  410313:	and    ah,BYTE PTR [edx+0x14]
  410316:	add    BYTE PTR [eax],al
  410318:	xor    eax,DWORD PTR [esi-0x12]
  41031b:	inc    ebp
  41031c:	scas   al,BYTE PTR es:[edi]
  41031d:	add    al,0xe8
  41031f:	mov    DWORD PTR [edx+0x18],ecx
  410322:	jmp    0x623c5f2a
  410327:	sub    DWORD PTR [esi],0xa803e918
  41032d:	call   0x8b28:0x21ceffe0
  410334:	xchg   esp,eax
  410335:	add    ch,ch
  410337:	add    esi,DWORD PTR [ecx]
  410339:	mov    esp,DWORD PTR [esi+0x13]
  41033c:	sub    eax,0xb48ce914
  410341:	cld    
  410342:	in     al,0x3
  410344:	xor    DWORD PTR [esi+0x226805e0],ecx
  41034a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034b:	mov    WORD PTR [edi-0xb],?
  41034e:	fwait
  41034f:	mov    esi,DWORD PTR [esi]
  410351:	(bad)  
  410352:	jno    0x41039d
  410354:	mov    ?,WORD PTR [ebx]
  410356:	je     0x410390
  410358:	jg     0x4102e7
  41035a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41035b:	test   BYTE PTR [esi+0x18],dl
  41035e:	mov    ecx,0x2c2c7c8c
  410363:	aaa    
  410364:	and    DWORD PTR [bx+di+0x48],esp
  410368:	mov    bl,0x33
  41036a:	jmp    0x4a78:0x5052abd2
  410371:	and    DWORD PTR ds:0x134f84,edi
  410377:	sahf   
  410378:	lods   eax,DWORD PTR ds:[esi]
  410379:	dec    edi
  41037a:	out    0x75,eax
  41037c:	add    BYTE PTR [eax],al
  41037e:	(bad)  
  41037f:	and    esi,edi
  410381:	(bad)  
  410382:	or     al,al
  410384:	shl    ecx,0x32
  410387:	xchg   ebp,eax
  410388:	enter  0x3316,0x92
  41038c:	sbb    esp,ebp
  41038e:	xor    dl,BYTE PTR [ecx*4+0x18a73b90]
  410395:	jb     0x410347
  410397:	adc    BYTE PTR [ecx+ebp*8],al
  41039a:	xor    cl,BYTE PTR [ebx+0x20f6d185]
  4103a0:	(bad)  
  4103a1:	sub    DWORD PTR [esi+ebp*2+0x1432e51b],edi
  4103a8:	mov    DWORD PTR [edi+0x45],ebp
  4103ab:	sbb    BYTE PTR [eax],al
  4103ad:	jmp    0xed589a5d
  4103b2:	xor    dl,BYTE PTR [edx+ecx*4]
  4103b5:	fnstenv [eax]
  4103b7:	inc    esi
  4103b8:	std    
  4103b9:	stos   DWORD PTR es:[edi],eax
  4103ba:	lods   eax,DWORD PTR ds:[esi]
  4103bb:	adc    BYTE PTR [ecx],al
  4103bd:	pop    edi
  4103be:	sbb    DWORD PTR [eax],ebx
  4103c0:	add    cl,ch
  4103c2:	loope  0x4103bf
  4103c4:	mov    ah,BYTE PTR [edi+0x3d]
  4103c7:	sbb    BYTE PTR [eax],al
  4103c9:	jmp    0xe5589a7b
  4103ce:	xor    dl,BYTE PTR [eax+eax*2]
  4103d1:	jo     0x4103ea
  4103d3:	std    
  4103d4:	add    ebp,ecx
  4103d6:	xor    cl,BYTE PTR [ebx+0x207ed985]
  4103dc:	(bad)  
  4103dd:	(bad)  
  4103de:	test   DWORD PTR [eax],0xe904
  4103e4:	xor    cl,BYTE PTR [esi+0x1f00eb0f]
  4103ea:	shl    DWORD PTR [ecx+0x45],0x13
  4103ee:	mov    gs,ebp
  4103f0:	push   esi
  4103f1:	and    dh,bh
  4103f3:	add    BYTE PTR [ebp+0x68868aff],cl
  4103f9:	and    dh,bh
  4103fb:	call   ecx
  4103fd:	mov    eax,ds:0x14480416
  410402:	inc    eax
  410403:	mov    DWORD PTR [esi+0x180003fc],eax
  410409:	xchg   ecx,eax
  41040a:	test   BYTE PTR [eax],dl
  41040c:	or     al,0x14
  41040e:	add    BYTE PTR [ebx+0x4008e],cl
  410414:	sbb    BYTE PTR [esi-0x19d5fdf2],cl
  41041a:	ror    BYTE PTR [eax+0x1c8e18d8],0xc
  410421:	adc    al,0x0
  410423:	jne    0x410456
  410425:	mov    eax,DWORD PTR [eax+edx*1-0x76ffec34]
  41042c:	dec    esi
  41042d:	sti    
  41042e:	add    eax,DWORD PTR [eax]
  410430:	enter  0x8753,0xae
  410434:	aam    0x1f
  410436:	(bad)  
  410437:	inc    DWORD PTR [ecx-0x5f]
  41043a:	push   cs
  41043b:	add    al,0xc8
  41043d:	adc    ecx,DWORD PTR [ebx-0x1e01f7a]
  410443:	(bad)  
  410444:	call   0xcf037c
  410449:	add    BYTE PTR [edi+ebx*1+0x13dfffe],ah
  410450:	mov    eax,DWORD PTR [esi-0x1e068]
  410456:	add    DWORD PTR [ecx+0x13980416],esp
  41045c:	inc    eax
  41045d:	mov    esi,esi
  41045f:	push   es
  410460:	add    al,0x0
  410462:	mov    BYTE PTR [eax+0x135c1084],dl
  410468:	add    BYTE PTR [ebx+0x3face],cl
  41046e:	xor    DWORD PTR ds:0xbf301f52,ebp
  410474:	push   ss
  410475:	add    al,0x31
  410477:	sub    eax,0xb7ba18af
  41047c:	adc    al,BYTE PTR [ecx+esi*1]
  41047f:	sub    eax,0x3919858b
  410484:	add    al,BYTE PTR [eax]
  410486:	jno    0x41042c
  410488:	sbb    ebp,DWORD PTR fs:0xb789022d
  41048f:	sbb    al,0xfe
  410491:	call   DWORD PTR [esi]
  410493:	mov    dl,0x7c
  410495:	pop    ss
  410496:	xor    eax,0x51d0022d
  41049b:	sub    al,0x84
  41049d:	sbb    esi,DWORD PTR ds:0x1875022d
  4104a3:	mov    dl,0x7c
  4104a5:	sysexit 
  4104a7:	sub    eax,0x14af8902
  4104ac:	add    BYTE PTR [eax],al
  4104ae:	add    BYTE PTR [eax],al
  4104b0:	xor    ebp,ebp
  4104b2:	mov    ch,BYTE PTR [ebp+0x23935]
  4104b8:	mov    eax,0x310413ae
  4104bd:	sub    eax,0x3119b587
  4104c2:	add    al,BYTE PTR [eax]
  4104c4:	loope  0x4104dc
  4104c6:	(bad)  
  4104c7:	pop    esp
  4104c8:	jae    0x4104ee
  4104ca:	add    cl,BYTE PTR [ebx+0x55fe58ed]
  4104d0:	push   es
  4104d1:	mov    dl,0xb7
  4104d3:	and    eax,DWORD PTR [ecx-0x4e]
  4104d6:	xor    bh,BYTE PTR [ecx+esi*4]
  4104d9:	sub    al,0x2
  4104db:	add    BYTE PTR [edx],al
  4104dd:	inc    ecx
  4104de:	jg     0x4104de
  4104e0:	xor    eax,0xaf3b0b1a
  4104e5:	pop    eax
  4104e6:	(bad)  
  4104e7:	jmp    FWORD PTR [esi+0x13]
  4104ea:	(bad)  
  4104ec:	pop    edi
  4104ed:	cmp    eax,DWORD PTR [ecx]
  4104ef:	inc    esp
  4104f0:	mov    bl,0x33
  4104f2:	out    dx,al
  4104f3:	aam    0xb3
  4104f5:	push   ebx
  4104f6:	jecxz  0x4104cd
  4104f8:	jo     0x410505
  4104fa:	jmp    0xe538b1f7
  4104ff:	add    esi,DWORD PTR [ecx]
  410501:	test   al,0xf3
  410503:	div    BYTE PTR [esi-0x5dfc16ed]
  410509:	pop    ss
  41050a:	push   0x25
  41050c:	xor    BYTE PTR [ecx],ch
  41050e:	clc    
  41050f:	neg    BYTE PTR [esi]
  410511:	sbb    ecx,ebp
  410513:	add    eax,DWORD PTR [eax]
  410515:	add    BYTE PTR [ebx+0xef69e13],ah
  41051b:	mov    eax,ds:0x138303e8
  410520:	scas   al,BYTE PTR es:[edi]
  410521:	inc    edx
  410522:	push   ss
  410523:	or     eax,0x11b6809a
  410528:	cdq    
  410529:	sub    edx,DWORD PTR [edx+ebx*1]
  41052c:	in     eax,0x34
  41052e:	jg     0x4104b9
  410530:	scas   al,BYTE PTR es:[edi]
  410531:	mov    BYTE PTR [esi],al
  410533:	sub    eax,0x1dd739f4
  410538:	pop    ebx
  410539:	mov    edi,0xd5220a26
  41053e:	fs push edx
  410540:	lock add esp,DWORD PTR [esi+0x2c]
  410544:	in     al,0x39
  410546:	mov    bh,0x1d
  410548:	or     eax,0x4718ee81
  41054d:	inc    edx
  41054e:	cs adc al,0x3a
  410551:	mov    edx,edi
  410553:	mul    eax
  410555:	into   
  410556:	cld    
  410557:	mov    BYTE PTR [edi-0x13133380],dl
  41055d:	add    esi,DWORD PTR [ecx]
  41055f:	adc    al,0x16
  410561:	add    eax,0xe7fff9b5
  410566:	xor    dl,BYTE PTR [ecx+eax*4]
  410569:	jb     0x41051d
  41056b:	sbb    eax,0xd4a1e9fe
  410570:	sbb    ch,0x7e
  410573:	add    eax,0x3558da04
  410578:	ss push edx
  41057a:	add    BYTE PTR [eax],al
  41057c:	add    eax,0x1a378a1e
  410581:	in     eax,dx
  410582:	cli    
  410583:	ds add eax,0xf841cd8a
  410589:	sbb    bh,dh
  41058b:	cs mov eax,0xb80123d0
  410591:	xchg   BYTE PTR [edi],cl
  410593:	in     eax,0x32
  410595:	adc    al,0x8a
  410597:	and    dh,dh
  410599:	adc    eax,DWORD PTR [edx]
  41059b:	and    BYTE PTR [eax],dh
  41059d:	push   ebx
  41059e:	pop    esi
  41059f:	jno    0x4105d1
  4105a1:	sbb    eax,0x1cfed985
  4105a6:	(bad)  
  4105a7:	pusha  
  4105a8:	pushf  
  4105a9:	lock add ebp,ecx
  4105ac:	xor    bh,BYTE PTR [esi+0x156f425c]
  4105b2:	add    BYTE PTR [edx+0x72],ch
  4105b5:	push   ds
  4105b6:	add    BYTE PTR [edi-0x16ffe7bf],dl
  4105bc:	mov    cl,0xad
  4105be:	or     BYTE PTR [esp+esi*1],bh
  4105c1:	mov    DWORD PTR [ebp+0x1436d9],eax
  4105c7:	pusha  
  4105c8:	stos   DWORD PTR es:[edi],eax
  4105c9:	add    al,0x4
  4105cb:	jmp    0x57c9da02
  4105d0:	inc    ecx
  4105d1:	sbb    BYTE PTR [eax],al
  4105d3:	jmp    0xed509cf5
  4105d8:	xor    dl,BYTE PTR [ebx+ecx*4]
  4105db:	addr16 cmp eax,0x18
  4105e1:	add    BYTE PTR [eax-0x3efdf962],bl
  4105e7:	loope  0x4105a8
  4105e9:	mov    BYTE PTR [eax+0x541cbe17],dl
  4105ef:	adc    BYTE PTR [eax],al
  4105f1:	jne    0x410624
  4105f3:	popf   
  4105f4:	test   BYTE PTR [eax],dl
  4105f6:	push   esp
  4105f7:	adc    BYTE PTR [eax],al
  4105f9:	mov    esi,eax
  4105fb:	(bad)  
  4105fd:	add    BYTE PTR [eax+0x50],bl
  410600:	xchg   DWORD PTR [esi+0x144c],ebp
  410606:	ror    DWORD PTR [ecx+0x1048040e],0x8b
  41060d:	xchg   BYTE PTR [eax],al
  41060f:	adc    al,0x0
  410611:	add    BYTE PTR [eax+0x30],ch
  410614:	mov    ebx,edx
  410616:	dec    ecx
  410617:	cli    
  410618:	push   es
  410619:	or     DWORD PTR [edx+0x12],0x52
  41061d:	mov    ebp,DWORD PTR [esi]
  41061f:	clc    
  410620:	(bad)  
  410621:	cli    
  410622:	das    
  410623:	out    0x89,eax
  410625:	xchg   al,bl
  410627:	adc    eax,DWORD PTR [eax]
  410629:	add    BYTE PTR [eax-0x27fe47f8],dl
  41062f:	pop    ss
  410630:	add    BYTE PTR [ecx],al
  410632:	push   esi
  410633:	pop    es
  410634:	add    al,0x0
  410636:	enter  0x9c98,0x24
  41063a:	les    edx,FWORD PTR [edi]
  41063c:	add    BYTE PTR [ecx-0x1681d],al
  410642:	fsub   DWORD PTR [edx+0x16]
  410645:	add    DWORD PTR [eax],0x0
  410648:	ins    BYTE PTR es:[edi],dx
  410649:	sub    al,0x16
  41064b:	add    dl,BYTE PTR [ebx+0x5b]
  41064e:	and    bl,BYTE PTR [eax]
  410650:	dec    ecx
  410651:	fwait
  410652:	int3   
  410653:	call   0x3eef7f
  410658:	pop    edi
  410659:	inc    esi
  41065a:	pop    ebx
  41065b:	pop    ebx
  41065c:	xor    DWORD PTR [edi-0x6],ebp
  41065f:	push   DWORD PTR [ecx+0x31050286]
  410665:	sub    eax,0xf14803b4
  41066a:	out    0x17,eax
  41066c:	mov    al,0xa6
  41066e:	add    bh,BYTE PTR [ebp+0x31]
  410671:	sub    eax,0x691803b4
  410676:	out    0x17,al
  410678:	stos   BYTE PTR es:[edi],al
  410679:	imul   esp,esi,0x40b60017
  41067f:	out    0xdd,eax
  410681:	(bad)  
  410682:	xor    esi,edi
  410684:	out    0x72,al
  410686:	iret   
  410687:	pop    edx
  410688:	jae    0x4106af
  41068a:	add    al,bh
  41068c:	scas   eax,DWORD PTR es:[edi]
  41068d:	adc    eax,0x2c310008
  410692:	add    al,BYTE PTR [eax]
  410694:	xor    DWORD PTR [ebp+ebp*1+0x22d317f],ebp
  41069b:	jae    0x410705
  41069d:	scas   al,BYTE PTR es:[edi]
  41069e:	scas   al,BYTE PTR es:[edi]
  41069f:	and    ebp,DWORD PTR [ecx]
  4106a1:	xor    DWORD PTR [ebp-0x194cb5bf],esi
  4106a7:	add    esi,DWORD PTR [ecx]
  4106a9:	sub    eax,0x39b6
  4106ae:	or     DWORD PTR [edi],esi
  4106b0:	sub    al,0xfe
  4106b2:	out    dx,al
  4106b3:	mov    ch,0x40
  4106b5:	out    0x32,eax
  4106b7:	aaa    
  4106b8:	xor    dh,bh
  4106ba:	stos   BYTE PTR es:[edi],al
  4106bb:	push   0x1b
  4106bd:	int3   
  4106be:	fadd   DWORD PTR [ecx+0x30]
  4106c1:	mov    DWORD PTR [ebp+0x11],esi
  4106c4:	or     al,0x8b
  4106c6:	mov    bh,0x3c
  4106c8:	push   es
  4106c9:	add    BYTE PTR [ecx],dh
  4106cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106cc:	push   esp
  4106cd:	and    esi,DWORD PTR [eax]
  4106cf:	das    
  4106d0:	push   esp
  4106d1:	add    DWORD PTR [ebx+0x9],esi
  4106d4:	jl     0x4106d6
  4106d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106d7:	adc    ebp,DWORD PTR [edi+0x14]
  4106da:	xor    eax,0xb47ae914
  4106df:	out    dx,eax
  4106e0:	in     al,dx
  4106e1:	add    esi,DWORD PTR [ecx]
  4106e3:	mov    edx,0xb70cd2b
  4106e8:	jmp    0xe75b7671
  4106ed:	jno    0x410709
  4106ef:	adc    cl,ch
  4106f1:	add    edi,DWORD PTR [edx+ebp*4-0x70b64921]
  4106f8:	outs   dx,BYTE PTR ds:[esi]
  4106f9:	adc    al,0x35
  4106fb:	adc    al,0xe9
  4106fd:	jp     0x4106ab
  4106ff:	sti    
  410700:	in     al,dx
  410701:	add    esi,DWORD PTR [ecx]
  410703:	aam    0x5f
  410705:	bound  ebp,QWORD PTR [edx]
  410707:	adc    cl,ch
  410709:	add    ebp,DWORD PTR [eax+0x3107d891]
  41070f:	adc    al,0x62
  410711:	mov    al,BYTE PTR [eax]
  410713:	add    BYTE PTR [esi+0x10],al
  410716:	jmp    0xeb45c21e
  41071b:	push   ebp
  41071c:	sbb    al,0x57
  41071e:	jo     0x410734
  410720:	xor    BYTE PTR [edx-0xc],bl
  410723:	pop    es
  410724:	xor    DWORD PTR [esp+edx*4],edx
  410727:	or     bh,BYTE PTR [edx+0x3107d892]
  41072d:	adc    al,0x70
  41072f:	mov    bl,BYTE PTR [esi]
  410731:	adc    cl,ch
  410733:	add    esi,DWORD PTR [ecx-0x75]
  410736:	adc    BYTE PTR ds:0xb47ae914,ch
  41073d:	add    al,0xe5
  41073f:	add    esi,DWORD PTR [ecx]
  410741:	lea    ebp,[esi+0xb]
  410744:	xor    eax,0x2653e914
  410749:	frstor [esi-0x19]
  41074c:	xor    dl,BYTE PTR [ecx+ebp*8]
  41074f:	mov    bh,0x40
  410751:	(bad)  
  410752:	jmp    FWORD PTR [ecx+0x6a0730f3]
  410758:	repnz adc eax,0x1cb89150
  41075e:	(bad)  
  41075f:	sahf   
  410760:	adc    eax,0x32ed0f87
  410765:	adc    al,0x88
  410767:	lock sbb dl,BYTE PTR [eax+eax*1]
  41076b:	jmp    0xd9c71aa2
  410770:	cs adc al,0x0
  410773:	pusha  
  410774:	shl    ch,0x3
  410777:	jmp    0x9373077c
  41077c:	cli    
  41077d:	imul   esi,DWORD PTR [edx],0x2ada0014
  410783:	xchg   ebp,eax
  410784:	imul   ecx,DWORD PTR ds:0xb58b163d,0x4e
  41078b:	add    DWORD PTR [edx+0x72],edx
  41078e:	lock xor BYTE PTR [ebx+0x40],ah
  410792:	add    DWORD PTR [edx],ebx
  410794:	pop    esi
  410795:	xchg   edi,eax
  410796:	(bad)  
  410797:	mov    ebp,0x9332e1c1
  41079c:	cli    
  41079d:	jmp    0x9b411bd9
  4107a2:	cs jmp 0x4107e8
  4107a5:	int    0x3a
  4107a7:	xchg   ebx,eax
  4107a8:	cli    
  4107a9:	jmp    0x7c3f2085
  4107ae:	fwait
  4107af:	jmp    0x4107f4
  4107b1:	lds    ebp,FWORD PTR [edx]
  4107b3:	lea    edx,[ebx-0x33]
  4107b6:	cmp    al,dh
  4107b8:	mov    bl,BYTE PTR [edi]
  4107ba:	dec    edx
  4107bb:	fdiv   st(0),st
  4107bd:	out    0xe,al
  4107bf:	mov    edx,0x52ea3c5d
  4107c4:	pop    es
  4107c5:	jmp    0xe55c61ff
  4107ca:	xor    dl,BYTE PTR [esi*2-0x7b622f00]
  4107d1:	adc    ah,cl
  4107d3:	adc    al,0x0
  4107d5:	mov    DWORD PTR [esi],ebx
  4107d7:	or     BYTE PTR [eax+eax*1],al
  4107da:	cwde   
  4107db:	push   esp
  4107dc:	xchg   DWORD PTR [esi+0xc340000],ebp
  4107e2:	add    BYTE PTR [eax],al
  4107e4:	and    DWORD PTR [edx+0x1498040e],edx
  4107ea:	mov    eax,DWORD PTR [esi+0x1080]
  4107f0:	cwde   
  4107f1:	das    
  4107f2:	(bad)  
  4107f3:	mov    ebp,0x1054
  4107f8:	ins    DWORD PTR es:[edi],dx
  4107f9:	pop    es
  4107fa:	mov    eax,DWORD PTR [esi+0x1088]
  410800:	loope  0x410793
  410802:	push   ss
  410803:	add    al,0x48
  410805:	adc    al,0x40
  410807:	mov    DWORD PTR [esi+0x58000403],esi
  41080d:	xchg   edi,eax
  41080e:	test   BYTE PTR [eax],dl
  410810:	dec    esp
  410811:	adc    al,0x0
  410813:	mov    ecx,esi
  410815:	pop    es
  410816:	add    al,0x0
  410818:	sbb    ah,al
  41081a:	push   ds
  41081b:	mov    edi,DWORD PTR [edi+ebp*1-0x295cadea]
  410822:	out    0xd4,al
  410824:	push   eax
  410825:	out    0xfd,eax
  410827:	pop    edi
  410828:	mov    BYTE PTR [ecx+ebx*2-0x3e],0x10
  41082d:	adc    al,0x8b
  41082f:	inc    esp
  410830:	in     al,dx
  410831:	jge    0xffbd10c7
  410837:	jmp    DWORD PTR [ebx-0x27fbfd80]
  41083d:	adc    esi,DWORD PTR [esi+0x19]
  410840:	arpl   WORD PTR [eax+0x40a],bx
  410846:	enter  0x3b13,0xc1
  41084a:	xor    DWORD PTR [edi+0x6bf02b08],esi
  410850:	push   es
  410851:	add    BYTE PTR [edx],cl
  410853:	ins    BYTE PTR es:[edi],dx
  410854:	pop    es
  410855:	add    BYTE PTR [ecx+0x2c],cl
  410858:	add    al,dl
  41085a:	xor    eax,0x73bff12d
  41085f:	xor    DWORD PTR [edx],eax
  410861:	or     DWORD PTR [ebp-0x55ab2ee3],0x9
  410868:	call   0x497aef8c
  41086d:	mov    al,BYTE PTR [eax+0x555b7cde]
  410873:	cmp    eax,0x354d5b7b
  410878:	jmp    0x410827
  41087a:	cmp    DWORD PTR [ecx],ebp
  41087c:	add    al,BYTE PTR [eax]
  41087e:	ss stos BYTE PTR es:[edi],al
  410880:	popa   
  410881:	call   FWORD PTR [esi+0x2d]
  410884:	sbb    DWORD PTR [edx],ecx
  410886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410887:	xchg   ecx,eax
  410888:	out    0xff,al
  41088a:	dec    esi
  41088b:	sub    eax,0x10cd8d02
  410890:	add    al,0x8b
  410892:	mov    bh,0x29
  410894:	push   es
  410895:	add    BYTE PTR [ecx],dh
  410897:	test   al,0x7a
  410899:	call   DWORD PTR [esi-0x6c4fdd4]
  41089f:	pop    esi
  4108a0:	adc    eax,0x620af8b
  4108a5:	add    BYTE PTR [ecx],dh
  4108a7:	xor    al,BYTE PTR [ebx+0x75]
  4108aa:	add    BYTE PTR [eax],al
  4108ac:	xor    eax,0x3aea4352
  4108b1:	push   edx
  4108b2:	inc    ebx
  4108b3:	add    al,0x31
  4108b5:	test   DWORD PTR [ebx],eax
  4108b7:	add    BYTE PTR [edx],cl
  4108b9:	sub    esi,ecx
  4108bb:	mov    edi,0x3faaeba
  4108c0:	xor    DWORD PTR ds:0x1440b5fd,ebp
  4108c6:	div    BYTE PTR [ebp+0x69]
  4108c9:	adc    eax,0xfa4d872
  4108ce:	bound  eax,QWORD PTR [eax]
  4108d0:	mov    ebx,0x2a7b0e8a
  4108d5:	(bad)  
  4108d6:	jno    0x41085e
  4108d8:	cs adc cl,ch
  4108db:	add    edi,DWORD PTR [esi]
  4108dd:	pop    esi
  4108de:	fdivr  st,st(4)
  4108e0:	(bad)  
  4108e2:	out    0x78,eax
  4108e4:	jmp    0xe50f:0xbc78ec7d
  4108eb:	add    esi,DWORD PTR [ecx]
  4108ed:	(bad)  
  4108ee:	cld    
  4108ef:	or     cl,0x14
  4108f2:	jmp    0x775639fa
  4108f7:	or     BYTE PTR ds:0xbf02e914,ch
  4108fd:	or     ebp,ebp
  4108ff:	add    esi,DWORD PTR [ecx]
  410901:	mov    esp,DWORD PTR [esi+0x8]
  410904:	xor    eax,0x6e78e914
  410909:	jmp    0x82e9:0x1435006e
  410910:	add    BYTE PTR [eax],al
  410912:	dec    ecx
  410913:	adc    eax,ecx
  410915:	add    dh,BYTE PTR [ecx]
  410917:	sahf   
  410918:	in     eax,dx
  410919:	mov    ebx,0x7ec8da9
  41091e:	xor    DWORD PTR [eax+esi*8],edx
  410921:	pop    ebp
  410922:	cs adc cl,ch
  410925:	add    ebp,DWORD PTR [esi]
  410927:	xchg   edx,eax
  410928:	xchg   edx,eax
  410929:	sub    al,0x17
  41092b:	push   ss
  41092c:	jno    0x4108f6
  41092e:	push   edx
  41092f:	in     al,0x52
  410931:	add    al,0x8e
  410933:	adc    ebp,ecx
  410935:	call   0x7b2fa82a
  41093a:	(bad)  
  41093b:	lock mov eax,0xff913918
  410941:	lock xor eax,DWORD PTR ds:0x14322386
  410948:	add    dh,dh
  41094a:	pop    esp
  41094b:	sar    bh,1
  41094d:	in     eax,dx
  41094e:	inc    esp
  41094f:	enter  0x6200,0xee
  410953:	pop    DWORD PTR [ebx]
  410955:	(bad)  
  410956:	into   
  410957:	lea    edi,[edx]
  410959:	ret    0x91b5
  41095c:	mov    dl,0xe8
  41095e:	xor    dl,BYTE PTR [ebx+ecx*4]
  410961:	addr16 xchg edx,eax
  410963:	adc    DWORD PTR [eax],eax
  410965:	jmp    0xae501a89
  41096a:	outs   dx,BYTE PTR ds:[esi]
  41096b:	icebp  
  41096c:	sbb    ebp,ecx
  41096e:	mov    dl,BYTE PTR ds:0xa2efd2fe
  410974:	cmp    DWORD PTR [edx+0x0],esp
  410977:	add    BYTE PTR [ebp-0x26],cl
  41097a:	cli    
  41097b:	std    
  41097c:	jle    0x410906
  41097e:	xchg   cl,ch
  410980:	retf   0x14
  410983:	mov    dl,0xac
  410985:	adc    DWORD PTR [ecx+ebp*8],eax
  410988:	xor    bl,BYTE PTR [esi+0x9ac7217]
  41098e:	add    al,0xe9
  410990:	xor    bl,cl
  410992:	neg    edi
  410994:	cs jmp 0xea7f4c91
  41099a:	imul   DWORD PTR [eax-0x13]
  41099d:	adc    al,0x66
  41099f:	call   0xfa4232d6
  4109a4:	push   ebp
  4109a5:	mov    al,BYTE PTR ds:0x8c5d0e62
  4109ab:	in     eax,dx
  4109ac:	adc    eax,0x4a9ac4da
  4109b1:	fcom   QWORD PTR [ebx-0x33]
  4109b4:	out    0x9e,al
  4109b6:	add    esp,DWORD PTR [eax-0x1a]
  4109b9:	lock sub eax,DWORD PTR [eax]
  4109bc:	repz jmp 0x4109cc
  4109bf:	test   dl,cl
  4109c1:	adc    DWORD PTR [eax],eax
  4109c3:	add    BYTE PTR [ebp-0x74],cl
  4109c6:	(bad)  
  4109c7:	dec    eax
  4109c9:	adc    BYTE PTR [ebx-0x7827bc33],cl
  4109cf:	dec    esp
  4109d0:	xor    al,0x4
  4109d2:	cmp    ecx,DWORD PTR [esp+esi*1+0x3c]
  4109d6:	or     eax,0xf2287
  4109db:	add    BYTE PTR [eax],al
  4109dd:	add    BYTE PTR [ebx+0x5c],al
  4109e0:	and    dl,BYTE PTR [eax]
  4109e2:	and    al,BYTE PTR [ecx+eax*1]
  4109e5:	cmp    al,BYTE PTR [ebx+ebx*1-0x2]
  4109e9:	mov    bh,BYTE PTR [esp+esi*1]
  4109ec:	adc    bh,BYTE PTR [ebx+0x108a]
  4109f2:	and    al,0x1c
  4109f4:	cmp    DWORD PTR [esi-0x1eb8c],ecx
  4109fa:	pop    edi
  4109fb:	xchg   ebx,eax
  4109fc:	enter  0x8800,0x10
  410a00:	mov    edx,DWORD PTR [esp+esi*2+0x20]
  410a04:	cmp    edx,ebx
  410a06:	imul   ebp,DWORD PTR [edi],0xffffff8b
  410a09:	dec    ebp
  410a0a:	dec    edx
  410a0b:	xchg   ebp,eax
  410a0c:	out    0x2b,al
  410a0e:	jl     0x410a44
  410a10:	mov    dl,BYTE PTR es:[ebx+ebx*1+0x635939fe]
  410a18:	add    al,0x43
  410a1a:	mov    DWORD PTR ds:0x94fa72d8,esp
  410a20:	dec    edx
  410a21:	and    al,0x4
  410a23:	xchg   ebx,eax
  410a24:	imul   esp,DWORD PTR [eax+esi*1],0x940fd803
  410a2b:	cmp    ebp,edi
  410a2d:	dec    DWORD PTR [eax]
  410a2f:	add    ebx,DWORD PTR [edx+0x24]
  410a32:	or     dh,al
  410a34:	inc    esi
  410a35:	push   ebx
  410a36:	xor    esp,ecx
  410a38:	jle    0x410a07
  410a3a:	or     DWORD PTR [eax+0x2e],esi
  410a3d:	(bad)  
  410a3e:	test   BYTE PTR [esi+0x23b8],0x41
  410a45:	xchg   al,dl
  410a47:	and    ecx,DWORD PTR [ecx-0x54]
  410a4a:	ror    DWORD PTR [edx-0x18e38911],cl
  410a50:	mov    dh,0xf7
  410a52:	sub    bh,dh
  410a54:	sbb    ah,ch
  410a56:	jle    0x410aa3
  410a58:	or     eax,0x79ed0711
  410a5d:	xor    bl,BYTE PTR [eax]
  410a5f:	ret    
  410a60:	rcr    BYTE PTR [bx+si],cl
  410a63:	mov    bl,BYTE PTR ds:0xabc0dc19
  410a69:	(bad)  
  410a6a:	jle    0x410a2d
  410a6c:	jo     0x410a43
  410a6e:	or     al,BYTE PTR [ebx]
  410a70:	jae    0x410a70
  410a72:	mov    ebp,0x49f62123
  410a77:	jne    0x410aa8
  410a79:	je     0x410a30
  410a7b:	and    ebx,DWORD PTR [ecx]
  410a7d:	xchg   esi,eax
  410a7e:	mov    ebx,0xfde1a73a
  410a83:	jmp    FWORD PTR [esi+0x8]
  410a86:	rcl    BYTE PTR [edx+0x0],0x76
  410a8a:	aaa    
  410a8b:	out    0xd2,eax
  410a8d:	xchg   BYTE PTR [edx],ch
  410a8f:	(bad)  
  410a90:	stos   BYTE PTR es:[edi],al
  410a91:	rcr    ebp,1
  410a93:	bt     DWORD PTR [ebp+0x7e],0x43
  410a98:	or     eax,0xaa4fd405
  410a9d:	xor    ebx,DWORD PTR [ecx]
  410a9f:	dec    edi
  410aa0:	cmp    ebx,DWORD PTR [edx+0x2a]
  410aa3:	mov    bh,cl
  410aa5:	and    eax,0x8a37
  410aaa:	xchg   ebp,eax
  410aab:	and    esp,ebx
  410aad:	mov    bh,0xca
  410aaf:	xchg   esi,eax
  410ab0:	pop    ebx
  410ab1:	sub    DWORD PTR [esi],ebx
  410ab3:	adc    al,0x10
  410ab5:	jle    0x410aaf
  410ab7:	aam    0x10
  410ab9:	or     dh,BYTE PTR [edx]
  410abb:	fsubp  st(2),st
  410abd:	cmp    esp,DWORD PTR ds:[eax-0x3d]
  410ac1:	adc    eax,DWORD PTR [ebx+0x12cf7220]
  410ac7:	sub    BYTE PTR [eax-0x31],dh
  410aca:	adc    ch,BYTE PTR [eax+eiz*2]
  410acd:	(bad)  
  410ace:	adc    ah,BYTE PTR [esp+ebx*2]
  410ad1:	adc    dh,0x7a
  410ad4:	call   0xe3db14dc
  410ad9:	inc    esi
  410adb:	adc    bl,BYTE PTR [esi+0xc]
  410ade:	stos   BYTE PTR es:[edi],al
  410adf:	cdq    
  410ae0:	(bad)  
  410ae2:	mov    dh,0x12
  410ae4:	add    ebp,DWORD PTR [esp]
  410ae7:	sbb    BYTE PTR [edx],dl
  410ae9:	sub    al,0x9b
  410aeb:	pop    ds
  410aec:	add    ch,BYTE PTR [ecx+esi*4]
  410aef:	(bad)  
  410af1:	fwait
  410af2:	xor    DWORD PTR [edx+edx*4],edx
  410af5:	push   es
  410af6:	inc    edx
  410af7:	adc    esi,DWORD PTR [ebx-0x6]
  410afa:	mov    ebx,0xb47d504f
  410aff:	xor    esp,ebx
  410b01:	add    esi,DWORD PTR [ecx]
  410b03:	pop    ss
  410b04:	scas   al,BYTE PTR es:[edi]
  410b05:	test   edx,ebx
  410b07:	aaa    
  410b08:	fild   DWORD PTR [edx]
  410b0a:	frstor ds:0x296c
  410b10:	das    
  410b11:	cdq    
  410b12:	sub    eax,0x5312572a
  410b17:	cld    
  410b18:	mov    ecx,0xb80c035f
  410b1d:	outs   dx,DWORD PTR ds:[esi]
  410b1e:	or     edx,DWORD PTR [edx+ebp*4]
  410b21:	push   edi
  410b22:	add    esp,eax
  410b24:	stos   DWORD PTR es:[edi],eax
  410b25:	or     edx,DWORD PTR [si]
  410b28:	mov    edx,0x860c0360
  410b2d:	jb     0x410b2f
  410b2f:	xchg   esp,eax
  410b30:	fwait
  410b31:	popa   
  410b32:	add    al,0x60
  410b34:	adc    eax,0x252d816f
  410b39:	(bad)  
  410b3a:	adc    cl,ch
  410b3c:	lods   eax,DWORD PTR ds:[esi]
  410b3d:	std    
  410b3e:	cmp    BYTE PTR [edx-0x37],ch
  410b41:	xor    eax,0x9ee0e944
  410b46:	out    dx,eax
  410b47:	jl     0x410b34
  410b49:	inc    esi
  410b4a:	rcr    BYTE PTR [edi+0x2b38d5ad],0x2d
  410b51:	adc    al,0x89
  410b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b54:	not    BYTE PTR [ecx-0x7d]
  410b57:	test   eax,0xb1811b9f
  410b5c:	sbb    DWORD PTR [edi-0x7f],ebp
  410b5f:	lods   eax,DWORD PTR ds:[esi]
  410b60:	retf   0x18d3
  410b63:	jmp    0x2d65689d
  410b68:	fdiv   QWORD PTR cs:[edi+ecx*8+0x25]
  410b6d:	gs and al,0x25
  410b70:	push   ds
  410b71:	jecxz  0x410be7
  410b73:	mov    DWORD PTR [eax],0x14971b00
  410b79:	in     eax,dx
  410b7a:	xor    dl,BYTE PTR [eax+ecx*2]
  410b7d:	jo     0x410b2f
  410b7f:	xor    DWORD PTR [ecx+ebp*8],eax
  410b82:	xor    bl,BYTE PTR [ebx+0x1176f98e]
  410b88:	inc    BYTE PTR [ecx+0x48]
  410b8b:	push   cs
  410b8c:	out    dx,eax
  410b8d:	push   edx
  410b8e:	pop    ebp
  410b8f:	fcom   QWORD PTR [ebp-0x1a]
  410b92:	loopne 0x410b5f
  410b94:	add    cl,bl
  410b96:	jae    0x410ba9
  410b98:	shr    DWORD PTR [ecx],1
  410b9a:	inc    ebp
  410b9b:	fimul  DWORD PTR ds:0x1013db97
  410ba1:	test   al,0x32
  410ba3:	jecxz  0x410b65
  410ba5:	sbb    dh,al
  410ba7:	and    DWORD PTR [esi+0x1016b100],esi
  410bad:	inc    ecx
  410bae:	sbb    BYTE PTR [esi-0x43],ah
  410bb1:	xor    ecx,DWORD PTR [edi+0xc]
  410bb4:	mov    ah,0xb9
  410bb6:	or     esp,DWORD PTR ds:0x5549003f
  410bbc:	add    cl,0xc
  410bbf:	or     bh,al
  410bc1:	and    DWORD PTR [ecx],0x8ffff15
  410bc7:	(bad)  
  410bc8:	enter  0x1885,0xc
  410bcc:	test   DWORD PTR [ebx+0x530014e1],edi
  410bd2:	push   ecx
  410bd3:	and    ecx,DWORD PTR [ebx-0x406a33b2]
  410bd9:	sbb    BYTE PTR [eax],al
  410bdb:	add    BYTE PTR [eax-0x2740ffee],bh
  410be1:	pop    ss
  410be2:	add    BYTE PTR [eax],al
  410be4:	push   ebp
  410be5:	loopne 0x410be7
  410be7:	push   ebp
  410be8:	push   ecx
  410be9:	daa    
  410bea:	xor    eax,eax
  410bec:	popf   
  410bed:	adc    al,0x0
  410bef:	add    BYTE PTR [eax+0x4cc7288d],bl
  410bf5:	adc    eax,DWORD PTR [eax]
  410bf7:	add    BYTE PTR [eax-0x277cffec],cl
  410bfd:	adc    edi,DWORD PTR [ebx]
  410bff:	add    BYTE PTR [esp+edx*1-0x694b8e00],cl
  410c06:	mov    edi,0x148c00
  410c0b:	sbb    DWORD PTR [ecx+0x5dfb2913],0x5e
  410c12:	mov    cl,BYTE PTR [esi-0x1ef84]
  410c18:	shl    DWORD PTR [ecx],cl
  410c1a:	or     eax,0x24838ed7
  410c20:	dec    esp
  410c21:	adc    al,0x0
  410c23:	mov    DWORD PTR [ecx],esi
  410c25:	jns    0x410c23
  410c27:	add    esi,DWORD PTR [ecx]
  410c29:	sti    
  410c2a:	jl     0x410bc9
  410c2c:	xor    eax,0xb8000201
  410c31:	(bad)  
  410c32:	clc    
  410c33:	add    esi,DWORD PTR [ecx]
  410c35:	std    
  410c36:	jl     0x410c71
  410c38:	stos   BYTE PTR es:[edi],al
  410c39:	outs   dx,DWORD PTR ds:[esi]
  410c3a:	adc    BYTE PTR [ecx+esi*1],al
  410c3d:	std    
  410c3e:	jp     0x410bd5
  410c40:	add    BYTE PTR [eax],al
  410c42:	and    ecx,edi
  410c44:	add    DWORD PTR [eax],eax
  410c46:	test   al,0x67
  410c48:	fadd   QWORD PTR [ebx]
  410c4a:	xor    ebp,edi
  410c4c:	ja     0x410c56
  410c4e:	mov    eax,0xba1bddc1
  410c53:	mov    ecx,0xf3a953dd
  410c58:	add    al,0x9e
  410c5a:	cmp    eax,0x300001f9
  410c5f:	xchg   edi,eax
  410c60:	adc    DWORD PTR [ecx+esi*1],eax
  410c63:	std    
  410c64:	mov    ecx,0x14213d88
  410c69:	mov    DWORD PTR ds:0xcf890c19,esi
  410c6f:	stc    
  410c70:	std    
  410c71:	jmp    DWORD PTR [esi-0x6dc3a7c]
  410c77:	add    DWORD PTR [ebx+0xe],eax
  410c7a:	scas   eax,DWORD PTR es:[edi]
  410c7b:	retf   0xfffe
  410c7e:	mov    cs,WORD PTR [eax-0x2790076]
  410c84:	add    DWORD PTR [ebx-0x7b3a1f0b],ecx
  410c8a:	jno    0x410cb5
  410c8c:	jmp    0xb841:0x9e0fd8a
  410c93:	inc    ecx
  410c94:	loopne 0x410cad
  410c96:	mov    ch,0xb4
  410c98:	mov    al,0x2c
  410c9a:	stos   BYTE PTR es:[edi],al
  410c9b:	sub    eax,esp
  410c9d:	pop    edi
  410c9e:	mov    edx,0x2d137514
  410ca3:	adc    al,0xe7
  410ca5:	fiadd  DWORD PTR [eax]
  410ca7:	add    dl,ch
  410ca9:	aaa    
  410caa:	mov    bh,0xd1
  410cac:	stos   DWORD PTR es:[edi],eax
  410cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cae:	repz jmp FWORD PTR [esi]
  410cb1:	(bad)  
  410cb3:	rcl    BYTE PTR [edx+0x64],1
  410cb6:	cwde   
  410cb7:	jp     0x410d23
  410cb9:	cmp    BYTE PTR [ebx+0x180f81d1],dl
  410cbf:	xor    dl,0x23
  410cc2:	ins    BYTE PTR es:[edi],dx
  410cc3:	inc    ebx
  410cc4:	aaa    
  410cc5:	cwde   
  410cc6:	xchg   esp,eax
  410cc7:	(bad)  
  410cc8:	dec    BYTE PTR [esi]
  410cca:	rol    edi,cl
  410ccc:	push   edx
  410ccd:	xor    BYTE PTR [ecx+edx*1-0x40348046],dl
  410cd4:	mov    ebx,0xa9c3c367
  410cd9:	jg     0x410ca6
  410cdb:	xlat   BYTE PTR ds:[ebx]
  410cdc:	test   eax,0xdbdbc367
  410ce1:	cs jb  0x410ca4
  410ce4:	adc    ch,BYTE PTR [eax+0x72]
  410ce7:	jbe    0x410d0b
  410ce9:	sbb    bh,ah
  410ceb:	add    ecx,DWORD PTR [edx]
  410ced:	shl    DWORD PTR [edi],cl
  410cef:	rol    DWORD PTR [ecx],1
  410cf1:	mov    eax,ds:0x6262e01b
  410cf6:	jb     0x410d2e
  410cf8:	xchg   esi,eax
  410cf9:	xchg   edx,eax
  410cfa:	mov    dl,0x25
  410cfc:	xchg   edi,eax
  410cfd:	call   0x2a4:0x935ae03b
  410d04:	mov    al,ss:0xe7eff45
  410d0a:	arpl   WORD PTR [esi+0x0],di
  410d0d:	add    BYTE PTR [edx+0x18],dl
  410d10:	out    0x3,eax
  410d12:	jbe    0x410d6b
  410d14:	retf   
  410d15:	rdtsc  
  410d17:	adc    al,0xe7
  410d19:	add    ebx,DWORD PTR [eax]
  410d1b:	pop    eax
  410d1c:	add    ch,cl
  410d1e:	jp     0x410ca7
  410d20:	bound  ebp,QWORD PTR [edx+0x14]
  410d23:	adc    al,0xd
  410d25:	outs   dx,DWORD PTR ds:[esi]
  410d26:	arpl   WORD PTR [ecx],dx
  410d28:	add    cl,ch
  410d2a:	dec    ebx
  410d2b:	push   edx
  410d2c:	and    al,0x11
  410d2e:	cmp    al,0x92
  410d30:	dec    eax
  410d31:	jmp    0x1e06:0xad891432
  410d38:	push   ebp
  410d39:	adc    dh,BYTE PTR [edx+eiz*2+0x50]
  410d3d:	bound  ebx,QWORD PTR [edi-0xb]
  410d40:	loop   0x410d77
  410d42:	push   esp
  410d43:	push   cs
  410d44:	mov    dh,BYTE PTR [ebp-0x47aaba1a]
  410d4a:	jns    0x410d2b
  410d4c:	mov    DWORD PTR [ecx],esi
  410d4e:	adc    eax,0x140ef5c1
  410d53:	dec    edx
  410d54:	shl    esi,0x5f
  410d57:	xor    BYTE PTR [ecx],al
  410d59:	jmp    0xcd85a690
  410d5e:	retf   0x50
  410d61:	in     al,0x32
  410d63:	adc    al,0x7c
  410d65:	lock mov cl,0xe
  410d68:	add    ebp,esi
  410d6a:	ds sbb al,0x1
  410d6d:	jmp    0x4c415ca4
  410d72:	add    BYTE PTR [eax],al
  410d74:	xor    eax,0xb1f07c14
  410d79:	push   cs
  410d7a:	add    ch,dh
  410d7c:	push   ds
  410d7d:	or     al,0x3
  410d7f:	jmp    0x59da6b6
  410d84:	jge    0x410d20
  410d86:	inc    esp
  410d87:	int    0x76
  410d89:	call   0xc2fe:0xd7ef596
  410d90:	icebp  
  410d91:	fwait
  410d92:	inc    esp
  410d93:	lds    edx,FWORD PTR [edx+0x55]
  410d96:	push   eax
  410d97:	add    ch,bl
  410d99:	retf   
  410d9a:	add    BYTE PTR [ecx+0xa],dl
  410d9d:	loop   0x410d2b
  410d9f:	inc    esp
  410da0:	lds    ecx,FWORD PTR fs:[ebp-0x75]
  410da4:	scas   al,BYTE PTR es:[edi]
  410da5:	sub    ecx,ebx
  410da7:	cli    
  410da8:	iret   
  410da9:	aaa    
  410daa:	mov    cl,BYTE PTR [esp+esi*1-0x10]
  410dae:	cmp    BYTE PTR [esp-0x28],cl
  410db2:	mov    WORD PTR [ebx+0x19],es
  410db5:	mov    al,BYTE PTR [ecx+0x24]
  410db8:	or     al,0xde
  410dba:	jns    0x410df5
  410dbc:	mov    ds:0x4e8b4f62,eax
  410dc1:	sub    DWORD PTR [ecx-0x9],eax
  410dc4:	pop    edi
  410dc5:	cmp    BYTE PTR [edx-0x772f0bb4],cl
  410dcb:	inc    esp
  410dcc:	hlt    
  410dcd:	in     al,dx
  410dce:	mov    al,BYTE PTR [esp+eiz*8-0x34]
  410dd2:	dec    ebp
  410dd3:	push   ecx
  410dd4:	push   ebx
  410dd5:	inc    edi
  410dd6:	in     eax,0x2f
  410dd8:	add    BYTE PTR [eax],al
  410dda:	out    0x30,eax
  410ddc:	dec    BYTE PTR [ebx+0x2b21ec8c]
  410de2:	adc    BYTE PTR [edi+eax*8],dl
  410de5:	mov    eax,0x38e28681
  410dea:	out    0x3e,eax
  410dec:	sar    dl,1
  410dee:	inc    ebx
  410def:	push   esi
  410df0:	shr    al,0xbf
  410df3:	adc    eax,0x9d48ebc2
  410df8:	dec    ecx
  410df9:	and    al,0x3c
  410dfb:	(bad)  
  410dfc:	mov    cl,dh
  410dfe:	sbb    BYTE PTR [esi],0xf5
  410e01:	(bad)  
  410e02:	fistp  WORD PTR [ecx+edx*2-0x2a62abdc]
  410e09:	mov    edx,DWORD PTR [esp+edi*8+0x3d]
  410e0d:	push   edx
  410e0e:	cmp    BYTE PTR [ebp-0x52ce1735],bl
  410e14:	sbb    bh,dh
  410e16:	outs   dx,BYTE PTR ds:[esi]
  410e17:	sar    DWORD PTR [ecx],1
  410e19:	mov    dh,BYTE PTR [edx-0x7f]
  410e1c:	shl    BYTE PTR [ebx],0xf9
  410e1f:	jae    0x410da6
  410e21:	loope  0x410e55
  410e23:	cli    
  410e24:	inc    ebx
  410e25:	ror    BYTE PTR [ecx-0x8],0x6
  410e29:	inc    esp
  410e2a:	or     eax,0xbce7debf
  410e2f:	add    cl,BYTE PTR [ebx+0x43]
  410e32:	or     eax,0x3100050f
  410e37:	std    
  410e38:	mov    dh,bh
  410e3a:	lahf   
  410e3b:	adc    eax,0x6bdb
  410e40:	push   ebp
  410e41:	mov    cl,0x9d
  410e43:	das    
  410e44:	stos   BYTE PTR es:[edi],al
  410e45:	mov    cl,0xe5
  410e47:	daa    
  410e48:	lods   al,BYTE PTR fs:[esi]
  410e4a:	mov    cs,ebp
  410e4c:	sbb    DWORD PTR [edx+ebx*1-0x2],esi
  410e50:	inc    BYTE PTR [esi+0x766d23b8]
  410e56:	cmp    al,0x8a
  410e58:	jne    0x410e2b
  410e5a:	rcl    DWORD PTR [ecx-0x7f],0x86
  410e5e:	push   edx
  410e5f:	out    0x8a,eax
  410e61:	add    esp,DWORD PTR [ebx]
  410e63:	(bad)  
  410e64:	sbb    bh,BYTE PTR [esi]
  410e66:	lea    ebx,[ebx+0x15]
  410e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e6a:	mov    al,ds:0xe839ee07
  410e6f:	adc    esi,DWORD PTR [eax]
  410e71:	std    
  410e72:	add    DWORD PTR [eax],eax
  410e74:	lods   al,BYTE PTR ds:[esi]
  410e75:	loop   0x410e0f
  410e77:	dec    esp
  410e78:	push   0x2443e849
  410e7d:	cmp    cl,BYTE PTR [ebp+0x1f1458d]
  410e83:	add    BYTE PTR [ebx],cl
  410e85:	cld    
  410e86:	mov    dh,0x50
  410e88:	mov    edx,0x829e29ab
  410e8d:	adc    al,0xa6
  410e8f:	and    ch,BYTE PTR [ebx-0x54383ca0]
  410e95:	in     al,dx
  410e96:	(bad)  
  410e97:	(bad)  
  410e98:	adc    dl,BYTE PTR [ecx+edi*1-0x4c]
  410e9c:	mov    ebx,0x64b08fda
  410ea1:	or     edi,DWORD PTR [edi-0x72]
  410ea4:	add    BYTE PTR [eax],al
  410ea6:	jmp    0x9d9e:0xe1b8bf2f
  410ead:	nop
  410eae:	jmp    0x5f01:0xda2be82b
  410eb5:	and    bh,bl
  410eb7:	jmp    0x410f1b
  410eb9:	mov    edi,0xdcd6c52
  410ebe:	out    dx,al
  410ebf:	dec    edi
  410ec0:	or     edi,eax
  410ec2:	push   ds
  410ec3:	or     ebp,eax
  410ec5:	add    ecx,DWORD PTR [edx]
  410ec7:	pop    ds
  410ec8:	push   0xffffff9f
  410eca:	push   edx
  410ecb:	and    bh,ah
  410ecd:	adc    ch,BYTE PTR [ecx+ebx*8-0x68cefc16]
  410ed4:	sbb    al,0x5
  410ed6:	es call 0xb762:0x14310442
  410ede:	adc    dh,BYTE PTR [edx+esi*2]
  410ee1:	mov    DWORD PTR [edx+0x10],eax
  410ee4:	out    0x3,eax
  410ee6:	mov    dl,0xd5
  410ee8:	cmc    
  410ee9:	mov    ah,0xb3
  410eeb:	(bad)  
  410eec:	jmp    0xea14c2a7
  410ef1:	mov    bl,0xad
  410ef3:	push   edi
  410ef4:	add    esp,eax
  410ef6:	popa   
  410ef7:	lahf   
  410ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef9:	sub    al,0xbe
  410efb:	or     al,0xcf
  410efd:	and    DWORD PTR [ebx+0x5bd40b4f],edi
  410f03:	push   eax
  410f04:	add    ebp,esp
  410f06:	stos   DWORD PTR es:[edi],eax
  410f07:	pop    edi
  410f08:	add    BYTE PTR ds:0x64690000,cl
  410f0e:	mov    DWORD PTR [edi-0x6ede7143],ebx
  410f14:	push   ds
  410f15:	add    dh,bh
  410f17:	sahf   
  410f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f19:	loop   0x410ea4
  410f1b:	sub    eax,0x39533259
  410f20:	mov    ah,0xd8
  410f22:	call   0xfe4b55be
  410f27:	shr    ch,cl
  410f29:	stos   DWORD PTR es:[edi],eax
  410f2a:	or     DWORD PTR [ebx+0x62c21734],0xebf7d3f5
  410f34:	or     eax,0x1e43e83d
  410f39:	or     bh,dh
  410f3b:	bound  ebp,QWORD PTR [ebp-0x62]
  410f3e:	inc    esp
  410f3f:	add    eax,0x72506115
  410f44:	xor    ecx,0xffffffc9
  410f47:	xor    al,0x50
  410f49:	or     cl,BYTE PTR [edx+0x1df1c21]
  410f4f:	and    BYTE PTR [ebp-0x4],ah
  410f52:	mov    ds:0xe8030372,al
  410f57:	cmp    BYTE PTR [edi],dl
  410f59:	sahf   
  410f5a:	retf   0x1a28
  410f5d:	sub    al,BYTE PTR [ecx]
  410f5f:	and    esi,DWORD PTR [ebp+edx*2-0x23ca42dc]
  410f66:	cmp    DWORD PTR [eax],edx
  410f68:	mov    dh,0x11
  410f6a:	lds    ebp,FWORD PTR [ebp-0x1700da2a]
  410f70:	add    BYTE PTR [eax],al
  410f72:	xor    dl,BYTE PTR [ebx+eax*4]
  410f75:	out    0x98,al
  410f77:	xor    DWORD PTR [ecx],edi
  410f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7a:	xchg   esi,eax
  410f7b:	xor    eax,0x39993d89
  410f80:	push   eax
  410f81:	cmp    esi,DWORD PTR [edi+edx*8+0x222600e8]
  410f88:	(bad)  
  410f89:	jmp    DWORD PTR [ebx]
  410f8b:	dec    ebp
  410f8c:	mov    al,BYTE PTR [esp+edi*1-0x8]
  410f90:	push   esp
  410f91:	push   eax
  410f92:	adc    esp,DWORD PTR [ebx-0x1b]
  410f95:	jg     0x410f34
  410f97:	xor    al,0xfe
  410f99:	cmp    esi,DWORD PTR [eax+0x24]
  410f9c:	mov    WORD PTR [edx],es
  410f9e:	pop    ebx
  410f9f:	adc    eax,0xfc348300
  410fa4:	adc    DWORD PTR [eax],eax
  410fa6:	addr16 xchg edx,eax
  410fa8:	test   BYTE PTR [edx],0x48
  410fab:	adc    eax,0x245bfd81
  410fb0:	mov    ss,esp
  410fb2:	pop    eax
  410fb3:	adc    eax,0xf1848b00
  410fb8:	sbb    eax,0x55f17c8b
  410fbd:	mov    ebx,DWORD PTR [esi+0x18000201]
  410fc3:	nop
  410fc4:	sar    ch,0xb9
  410fc7:	(bad)  
  410fc8:	mov    edi,0xbd8fba03
  410fcd:	add    ebp,DWORD PTR [eax+0x14244999]
  410fd3:	(bad)  
  410fd4:	mov    cl,dh
  410fd6:	add    BYTE PTR [eax],al
  410fd8:	and    BYTE PTR [esi-0xb],ch
  410fdb:	call   DWORD PTR [edi]
  410fdd:	cwde   
  410fde:	inc    ecx
  410fdf:	and    al,0x8
  410fe1:	cwde   
  410fe2:	push   ecx
  410fe3:	and    al,0xfc
  410fe5:	xchg   edi,eax
  410fe6:	pop    ecx
  410fe7:	and    al,0x0
  410fe9:	call   0x63a462b0
  410fee:	dec    ebp
  410fef:	jl     0x410fee
  410ff1:	cmp    al,0x21
  410ff3:	cmc    
  410ff4:	xlat   BYTE PTR ds:[ebx]
  410ff5:	sub    BYTE PTR [ebx+edx*2+0x43],dl
  410ff9:	pop    edx
  410ffa:	mov    BYTE PTR [esp+ebp*1+0x4],al
  410ffe:	out    0x17,al
  411000:	xor    eax,ebp
  411002:	sbb    eax,0xe826bafe
  411007:	and    ecx,DWORD PTR [edx-0x44]
  41100a:	jnp    0x410f8e
  41100c:	xchg   ebx,eax
  41100d:	std    
  41100e:	add    al,dl
  411010:	mov    edx,0x33f843b2
  411015:	(bad)  
  411016:	lock out 0x7e,eax
  411019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41101a:	sbb    eax,0x894ddcfe
  41101f:	int    0xb8
  411021:	ss call 0x18ed6952
  411027:	(bad)  
  411028:	pop    esi
  411029:	test   DWORD PTR [edx+ecx*4-0x13],ecx
  41102d:	into   
  41102e:	in     eax,0x2a
  411030:	jns    0x41102f
  411032:	dec    esp
  411033:	mov    bh,0x58
  411035:	pop    esp
  411036:	mov    DWORD PTR ds:0xf9336346,ebp
  41103c:	add    BYTE PTR [eax],al
  41103e:	stos   BYTE PTR es:[edi],al
  41103f:	inc    esp
  411040:	inc    ebx
  411041:	call   0x8a890a94
  411046:	ins    DWORD PTR es:[edi],dx
  411047:	adc    eax,ebx
  411049:	add    ch,cl
  41104b:	adc    ch,BYTE PTR [ebx]
  41104d:	jl     0x411078
  41104f:	cs enter 0x2523,0xfc
  411054:	add    DWORD PTR [eax],eax
  411056:	xor    DWORD PTR [eax+0x1d],esi
  411059:	jne    0x4110a4
  41105b:	repnz dec eax
  41105d:	jnp    0x4110ac
  41105f:	cmp    BYTE PTR [eax-0x5032dedd],0x8a
  411066:	not    DWORD PTR ds:0xedef353
  41106c:	mov    edi,edx
  41106e:	stos   BYTE PTR es:[edi],al
  41106f:	mov    cl,0xe5
  411071:	daa    
  411072:	lods   eax,DWORD PTR fs:[esi]
  411074:	mov    cl,ch
  411076:	fstp   DWORD PTR [ebx+0x18]
  411079:	(bad)  
  41107a:	mov    esi,0x273c2214
  41107f:	cwde   
  411080:	add    al,0x2
  411082:	xor    DWORD PTR [edx+ebp*2],edx
  411085:	lahf   
  411086:	push   edx
  411087:	and    bh,ah
  411089:	push   cs
  41108a:	mov    ah,0x2a
  41108c:	jmp    0x1bdc4194
  411091:	call   0xef7a17c
  411096:	lods   eax,DWORD PTR ds:[esi]
  411097:	jnp    0x411081
  411099:	add    esi,DWORD PTR [ecx]
  41109b:	xchg   ebx,eax
  41109c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109d:	add    al,0x26
  41109f:	mov    ?,WORD PTR [edi]
  4110a1:	add    eax,0x14310000
  4110a6:	bound  esi,QWORD PTR [edi+0x4e626012]
  4110ac:	or     ebx,ebx
  4110ae:	je     0x4110b7
  4110b0:	sub    ecx,DWORD PTR [ebx-0x5a]
  4110b3:	xchg   ebp,eax
  4110b4:	xor    BYTE PTR [ebx+0x50bbb3ae],bl
  4110ba:	ret    
  4110bb:	test   DWORD PTR [ebx],0xa5b3bae7
  4110c1:	pop    eax
  4110c2:	add    esp,eax
  4110c4:	sbb    DWORD PTR [ebx+0x308a8c25],0xfeea2c03
  4110ce:	inc    esi
  4110cf:	push   ds
  4110d0:	pop    ecx
  4110d1:	mov    BYTE PTR [ebx],al
  4110d3:	fadd   DWORD PTR [eax+0x52b76240]
  4110d9:	inc    esp
  4110da:	xchg   esi,eax
  4110db:	mov    cl,0xab
  4110dd:	aad    0xf
  4110df:	loopne 0x4110e3
  4110e1:	pop    es
  4110e2:	pop    ds
  4110e3:	mov    al,BYTE PTR [esi]
  4110e5:	fwait
  4110e6:	stos   DWORD PTR es:[edi],eax
  4110e7:	out    0x1e,eax
  4110e9:	pop    edi
  4110ea:	mov    bh,0x8a
  4110ec:	in     al,dx
  4110ed:	sti    
  4110ee:	aad    0x17
  4110f0:	xlat   BYTE PTR ds:[ebx]
  4110f1:	push   es
  4110f2:	ret    
  4110f3:	inc    edx
  4110f4:	mov    ebx,0xbecd0067
  4110f9:	mov    BYTE PTR [eax],dl
  4110fb:	(bad)  
  4110fc:	out    dx,al
  4110fd:	xor    dh,BYTE PTR [eax]
  4110ff:	jb     0x41117a
  411101:	xor    dh,BYTE PTR [eax+esi*2]
  411104:	xor    DWORD PTR [edx],0x6038
  41110a:	jmp    0x69a34d41
  41110f:	xor    dl,BYTE PTR [eax]
  411111:	push   ds
  411112:	loopne 0x41116a
  411114:	mov    DWORD PTR [edi-0x4910d1a3],ebp
  41111a:	and    al,0x9a
  41111c:	dec    esp
  41111d:	add    eax,0x724f5d5d
  411122:	out    0x99,eax
  411124:	fcom   DWORD PTR [ecx-0x6901fdb6]
  41112a:	mov    cl,dl
  41112c:	or     eax,0xfe06d45c
  411131:	jmp    0xd1657bdf
  411136:	imul   ebp,DWORD PTR [eax+0x1432ed24],0x62a81173
  411140:	and    al,0xfd
  411142:	test   eax,0xe5f92452
  411147:	arpl   WORD PTR [eax+0x62],dx
  41114a:	ja     0x411139
  41114c:	repnz pop ecx
  41114e:	cmp    al,0x6
  411150:	push   esp
  411151:	call   0x3a16:0xa587d7a9
  411158:	call   0xfe47318c
  41115d:	(bad)  
  41115f:	xor    DWORD PTR [edx+ebp*8],esp
  411162:	push   0xffffff9a
  411164:	shl    DWORD PTR [eax+esi*8-0x2532b364],1
  41116b:	arpl   WORD PTR [ecx+0xd00001f],cx
  411171:	mov    ch,0xf1
  411173:	add    BYTE PTR [edi],ch
  411175:	daa    
  411176:	mov    bl,al
  411178:	inc    ebx
  411179:	fsub   QWORD PTR [ecx]
  41117b:	cmp    BYTE PTR [edi+0x30ce8ac1],ah
  411181:	jno    0x411175
  411183:	dec    edi
  411185:	pushf  
  411186:	imul   esp,DWORD PTR [esp+edi*1],0x548bd813
  41118d:	cld    
  41118e:	and    DWORD PTR [ebx],edi
  411190:	retf   
  411191:	pushf  
  411192:	pop    ecx
  411193:	and    al,0x50
  411195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411196:	dec    eax
  411197:	jmp    0x41112d
  411199:	pushf  
  41119a:	pop    ecx
  41119b:	and    al,0x20
  41119d:	fwait
  41119e:	inc    ecx
  41119f:	and    al,0x80
  4111a1:	in     al,dx
  4111a2:	and    DWORD PTR [esp+eax*4],0x11
  4111a6:	add    BYTE PTR [ebp+0x61],dh
  4111a9:	xchg   esp,eax
  4111aa:	mov    ebx,0x115428
  4111af:	add    BYTE PTR [ebx+ecx*1+0x3d],al
  4111b3:	add    BYTE PTR [ebp+0x11],al
  4111b6:	add    BYTE PTR [ebp+edx*2-0x6c],bh
  4111ba:	inc    BYTE PTR [edx]
  4111bc:	inc    esp
  4111bd:	repz cmp BYTE PTR [esp+esi*2-0x17],0xfd
  4111c3:	jl     0x41120d
  4111c5:	adc    DWORD PTR [ebp+eax*1-0x65],edi
  4111c9:	sub    BYTE PTR [edx],al
  4111cb:	je     0x4111f8
  4111cd:	pushf  
  4111ce:	dec    ecx
  4111cf:	and    al,0x40
  4111d1:	mov    edi,0x8b50
  4111d6:	pop    esi
  4111d7:	cmp    ebx,ecx
  4111d9:	repz dec edi
  4111db:	sub    dl,ch
  4111dd:	xor    BYTE PTR [ebx-0x6ca7de3b],dl
  4111e3:	int    0x21
  4111e5:	adc    BYTE PTR [ebx-0x5528d5bc],al
  4111eb:	ror    BYTE PTR [edx+0x6e1331ce],0xef
  4111f2:	ficom  WORD PTR ds:0xeb0d431c
  4111f8:	sub    dh,0x30
  4111fb:	and    BYTE PTR [ebx],0xea
  4111fe:	and    esi,DWORD PTR [edx-0x4b]
  411201:	and    esp,DWORD PTR [ecx]
  411203:	push   0x4960fec8
  411208:	(bad)  
  411209:	int    0x99
  41120b:	mov    BYTE PTR [esi+edi*8],dl
  41120e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120f:	sub    DWORD PTR [ecx],ebx
  411211:	sbb    BYTE PTR [ecx+edi*8-0x54f70f6],0x1
  411219:	add    BYTE PTR [edx+0x3103f06c],bh
  41121f:	sti    
  411220:	mov    al,0x52
  411222:	loope  0x411295
  411224:	dec    edx
  411225:	out    0x17,eax
  411227:	stos   DWORD PTR es:[edi],eax
  411228:	sbb    esi,edi
  41122a:	mov    edx,0xfc27e036
  41122f:	dec    ebx
  411230:	(bad)  
  411231:	int    0xaa
  411233:	ret    0xef2c
  411236:	arpl   WORD PTR [ebp+0x3a19],cx
  41123c:	jb     0x411243
  41123e:	jmp    0xb73a:0xe9d6ed8a
  411245:	into   
  411246:	std    
  411247:	push   DWORD PTR [esi]
  411249:	out    0xc,eax
  41124b:	sub    edi,0x25
  41124e:	add    BYTE PTR [eax],al
  411250:	xor    ebp,ebp
  411252:	lea    eax,[esp+ebx*2-0x13]
  411256:	add    BYTE PTR [eax],al
  411258:	xor    ecx,ebx
  41125a:	add    BYTE PTR [ebx+0x68df00c],al
  411260:	inc    esp
  411261:	in     eax,dx
  411262:	cwde   
  411263:	(bad)  
  411264:	(bad)  
  411265:	mov    cl,0xd3
  411267:	mov    dl,BYTE PTR [ebp+0x14]
  41126a:	retf   
  41126b:	mov    ebx,0xefc370b9
  411270:	lods   eax,DWORD PTR ds:[esi]
  411271:	icebp  
  411272:	fwait
  411273:	jecxz  0x411220
  411275:	stos   BYTE PTR es:[edi],al
  411276:	repz call esi
  411279:	add    ebx,DWORD PTR [ebx+0xfd2bbb5]
  41127f:	in     eax,0xd6
  411281:	add    esi,edi
  411283:	pop    ebx
  411284:	xor    DWORD PTR [edi+eiz*8],edx
  411287:	add    esi,DWORD PTR [eax]
  411289:	call   0xc011:0x3aefffb
  411290:	push   edx
  411291:	sub    BYTE PTR [esp-0x53],bl
  411295:	pusha  
  411296:	in     al,dx
  411297:	sbb    cl,BYTE PTR [ebx+0x52b7725e]
  41129d:	pop    esp
  41129e:	jb     0x41125f
  4112a0:	add    BYTE PTR [eax],al
  4112a2:	push   edx
  4112a3:	sub    al,0x1c
  4112a5:	mov    ah,0xab
  4112a7:	sar    BYTE PTR [edi-0x58fc7dfa],cl
  4112ad:	add    al,0x9f
  4112af:	sub    bl,ah
  4112b1:	add    esi,DWORD PTR [ecx]
  4112b3:	xchg   ecx,eax
  4112b4:	xor    edi,ecx
  4112b6:	pop    edi
  4112b7:	out    dx,eax
  4112b8:	int3   
  4112b9:	mov    ?,edx
  4112bb:	aaa    
  4112bc:	pop    ds
  4112bd:	or     DWORD PTR [edi-0x77],0x37fa8ed5
  4112c4:	mov    edi,0xe328a48e
  4112c9:	add    esi,DWORD PTR [ecx]
  4112cb:	(bad)  
  4112cc:	rcr    edi,cl
  4112ce:	push   0xffffff8d
  4112d0:	stos   DWORD PTR es:[edi],eax
  4112d1:	fistp  WORD PTR [esi-0x73]
  4112d4:	mov    ebx,0x425b2edf
  4112d9:	icebp  
  4112da:	lods   eax,DWORD PTR ds:[esi]
  4112db:	add    bh,BYTE PTR [esi+eax*1-0x7111108a]
  4112e2:	lods   al,BYTE PTR ds:[esi]
  4112e3:	daa    
  4112e4:	add    ch,ch
  4112e6:	xor    dl,BYTE PTR [ecx+edx*2]
  4112e9:	cdq    
  4112ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112eb:	shr    al,1
  4112ed:	pop    edi
  4112ee:	sbb    eax,DWORD PTR [edx]
  4112f0:	(bad)  
  4112f1:	push   ds
  4112f2:	mov    al,0x26
  4112f4:	add    al,0xe9
  4112f6:	xor    bl,BYTE PTR [ecx-0x11a92103]
  4112fc:	add    cl,ch
  4112fe:	xor    bh,BYTE PTR [edi]
  411300:	jl     0x4112c7
  411302:	ficom  WORD PTR [ecx]
  411304:	or     DWORD PTR [eax],0x0
  411307:	add    BYTE PTR [edx],dh
  411309:	adc    al,0x0
  41130b:	bound  eax,QWORD PTR [esi-0x78dabca]
  411311:	sub    eax,0xe316cc9
  411316:	cmp    DWORD PTR [esi-0x5976eb3d],ebp
  41131c:	fisttp QWORD PTR [ebp-0x727ef2bc]
  411322:	jmp    0x50a96b39
  411327:	imul   esi,DWORD PTR fs:[esi],0xd0a4183c
  41132e:	xchg   DWORD PTR ds:0x17e83651,edx
  411334:	ss add bh,dh
  411337:	rol    dh,1
  411339:	ss xor al,0x1b
  41133c:	or     DWORD PTR [ebp+0x6962cd54],0xfafb7252
  411346:	in     eax,0x78
  411348:	sbb    BYTE PTR [edx],al
  41134a:	mov    al,BYTE PTR [ecx+0x212456a4]
  411350:	loopne 0x4113a3
  411352:	mov    DWORD PTR [edi],ebp
  411354:	push   ebp
  411355:	jmp    0x3e796a49
  41135a:	ret    
  41135b:	(bad)  
  41135c:	leave  
  41135d:	xor    eax,0x5f60014
  411362:	mov    ecx,DWORD PTR [esp+ebp*1-0x18]
  411366:	mov    dl,BYTE PTR [esp+ebp*1-0x1c]
  41136a:	mov    BYTE PTR [eax+eax*1+0x0],cl
  41136e:	sub    al,0xe0
  411370:	mov    BYTE PTR [esp+edi*8-0x17],dl
  411374:	mov    al,BYTE PTR [esp+ebp*8+0x5]
  411378:	push   edi
  411379:	push   ebp
  41137a:	cwde   
  41137b:	nop
  41137c:	retf   
  41137d:	call   0x3f419b
  411382:	inc    ebx
  411383:	int3   
  411384:	and    DWORD PTR [eax],edi
  411386:	lahf   
  411387:	(bad)  
  411388:	mov    cl,dh
  41138a:	push   ebx
  41138b:	xor    ch,ah
  41138d:	mov    ds:0x3bfe1cb9,eax
  411392:	(bad)  [edx-0xbb374c9]
  411398:	xor    eax,0x1e10e3b
  41139d:	add    BYTE PTR [eax-0x497cf76e],cl
  4113a3:	in     eax,dx
  4113a4:	add    DWORD PTR [eax],eax
  4113a6:	cwde   
  4113a7:	adc    eax,0x15851874
  4113ac:	add    eax,DWORD PTR [eax]
  4113ae:	mov    BYTE PTR [ecx+0x17978304],ch
  4113b4:	je     0x4113cf
  4113b6:	test   DWORD PTR ds:0xa948007b,edx
  4113bc:	add    al,0x83
  4113be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bf:	sbb    BYTE PTR [ebp+ecx*1+0x2f],dh
  4113c3:	enter  0xce8a,0xa0
  4113c7:	xor    al,dh
  4113c9:	inc    edi
  4113cb:	out    0xfe,eax
  4113cd:	jmp    0x411437
  4113cf:	nop
  4113d0:	imul   esp,DWORD PTR [eax+eax*1],0xfe022800
  4113d7:	call   FWORD PTR [eax]
  4113d9:	adc    eax,0x1631d389
  4113de:	das    
  4113df:	push   ecx
  4113e0:	jl     0x411458
  4113e2:	inc    edi
  4113e3:	out    0xf6,eax
  4113e5:	push   0x6e6cfe18
  4113ea:	sub    BYTE PTR [eax],al
  4113ec:	test   BYTE PTR [eax-0x76],bl
  4113ef:	imul   ecx,DWORD PTR [ebp-0x25],0xffffff8c
  4113f3:	inc    ebx
  4113f4:	adc    eax,0xb847c4bf
  4113f9:	mov    esi,0x431a57dd
  4113fe:	or     BYTE PTR [edx-0x1e7dd62],al
  411404:	mov    ah,0x19
  411406:	or     BYTE PTR [ebp+eiz*4-0x4dfffe16],al
  41140d:	or     DWORD PTR [eax],eax
  41140f:	imul   ebp,DWORD PTR [ebp+0x1]
  411413:	add    BYTE PTR [ecx],dh
  411415:	xchg   al,cl
  411417:	and    eax,DWORD PTR [ecx+0x4a]
  41141a:	mov    edx,eax
  41141c:	dec    edx
  41141d:	mov    dl,0xb4
  41141f:	push   eax
  411420:	stos   BYTE PTR es:[edi],al
  411421:	mov    al,ds:0xd99f2e2c
  411426:	adc    eax,0xdc16dd8a
  41142b:	push   esi
  41142c:	jecxz  0x4114a3
  41142e:	inc    esi
  41142f:	mov    cl,BYTE PTR [ecx+0x6ef103d2]
  411435:	mov    ecx,0xc4d9
  41143a:	out    0x37,al
  41143c:	mov    DWORD PTR [ebx+0x15],eax
  41143f:	jecxz  0x41141b
  411441:	test   DWORD PTR ds:0xc40001f7,ecx
  411447:	add    eax,DWORD PTR [ebx+0x1f719bd]
  41144d:	add    BYTE PTR [ecx],dh
  41144f:	(bad)  
  411450:	stc    
  411451:	cmp    al,0x31
  411453:	clc    
  411454:	add    DWORD PTR [eax],eax
  411456:	lods   eax,DWORD PTR ds:[esi]
  411457:	adc    al,0xec
  411459:	and    BYTE PTR [edi],0x13
  41145c:	rcr    edi,cl
  41145e:	pop    ebp
  41145f:	adc    al,0xd4
  411461:	add    esi,DWORD PTR [ecx]
  411463:	and    ah,0x82
  411466:	unpcklps xmm7,XMMWORD PTR [ebx+0x72645ffb]
  41146d:	inc    esi
  41146e:	push   ss
  41146f:	dec    esi
  411470:	cmp    BYTE PTR [edi],dl
  411472:	imul   ebx
  411474:	cmc    
  411475:	mov    eax,0x4c6a5f8b
  41147a:	out    0x5e,eax
  41147c:	push   0x40
  41147e:	es shr bh,cl
  411481:	add    ebp,DWORD PTR [edx-0x440c3c90]
  411487:	rcl    edx,cl
  411489:	ds jbe 0x4114f5
  41148c:	jb     0x4114d4
  41148e:	(bad)  
  41148f:	pop    ds
  411490:	add    eax,0x6a59b717
  411495:	daa    
  411496:	xor    DWORD PTR [ecx-0x74c9d52c],ecx
  41149c:	xor    esp,eax
  41149e:	add    BYTE PTR [eax],al
  4114a0:	cs xchg ecx,eax
  4114a2:	and    dl,BYTE PTR [edi]
  4114a4:	add    DWORD PTR [edx+0x62],esp
  4114a7:	inc    ebp
  4114a8:	xchg   esi,eax
  4114a9:	pop    ss
  4114aa:	aad    0x16
  4114ac:	xchg   DWORD PTR [ebx-0x3f1d1fc5],ecx
  4114b2:	call   0xf25545ba
  4114b7:	ss jecxz 0x4114ee
  4114ba:	je     0x411536
  4114bc:	jmp    di
  4114bf:	add    ebp,DWORD PTR [edx+0x56fffb96]
  4114c5:	(bad)  
  4114c6:	cmp    dh,BYTE PTR [ebx+edi*4+0x55208fce]
  4114cd:	(bad)  
  4114ce:	jle    0x4114d4
  4114d0:	vpcomuw xmm14,xmm7,XMMWORD PTR [edx],0x14
  4114d6:	add    DWORD PTR [ebx+ecx*1-0x4cb38d22],ecx
  4114dd:	leave  
  4114de:	std    
  4114df:	call   0xe9453088
  4114e4:	xor    dl,BYTE PTR [ecx+0x1ba1e049]
  4114ea:	mov    DWORD PTR [edi+0x2],ebp
  4114ed:	adc    eax,DWORD PTR [eax]
  4114ef:	jmp    0xed59ada1
  4114f4:	xor    dl,BYTE PTR [eax+eax*2]
  4114f7:	pusha  
  4114f8:	mov    ah,0x1a
  4114fa:	add    al,0xe9
  4114fc:	xor    cl,BYTE PTR [ebp-0x121067a]
  411502:	std    
  411503:	bound  eax,QWORD PTR [eax]
  411505:	add    BYTE PTR [edi+eiz*1+0x4],dl
  411509:	jmp    0xeb519f40
  41150e:	add    BYTE PTR [ecx],al
  411510:	ret    
  411511:	jno    0x4114d5
  411513:	adc    ebx,DWORD PTR [esi-0x201492b]
  411519:	je     0x4114c8
  41151b:	mov    DWORD PTR [esi-0x2015907],eax
  411521:	jo     0x411542
  411523:	daa    
  411524:	add    al,0xe9
  411526:	xor    dl,BYTE PTR [edi+eax*4+0x5f]
  41152a:	mov    DWORD PTR [edx],edx
  41152c:	add    cl,ch
  41152e:	mov    ebx,0x32e51098
  411533:	adc    al,0x89
  411535:	outs   dx,DWORD PTR ds:[esi]
  411536:	jne    0x41154a
  411538:	add    cl,ch
  41153a:	mov    eax,0x3fbb020e
  41153f:	aad    0x88
  411541:	stc    
  411542:	xor    ebx,DWORD PTR [esi+0x1432ed1c]
  411548:	jae    0x41153a
  41154a:	mov    ecx,0x54001098
  41154f:	adc    al,BYTE PTR [eax]
  411551:	mov    esi,edx
  411553:	inc    DWORD PTR [ecx]
  411555:	add    BYTE PTR [eax-0x2e],cl
  411558:	mov    BYTE PTR [esi-0x20204],cl
  41155e:	mov    eax,ds:0x8040d7e
  411563:	adc    cl,BYTE PTR [ecx-0x201df7a]
  411569:	inc    DWORD PTR [eax]
  41156b:	add    BYTE PTR [eax-0x8],cl
  41156e:	mov    al,BYTE PTR [esi-0x20218]
  411574:	push   esi
  411575:	sbb    BYTE PTR [eax],al
  411577:	mov    ecx,DWORD PTR [esi-0x27fffe04]
  41157d:	mov    WORD PTR [ebx+0x11d418],es
  411583:	add    DWORD PTR [esi+0x8],ebp
  411586:	add    al,BYTE PTR [eax]
  411588:	enter  0xccec,0xd2
  41158c:	clc    
  41158d:	mov    WORD PTR [ecx+0x24],es
  411590:	mov    WORD PTR [esi-0x43],?
  411593:	je     0x41160e
  411595:	mov    WORD PTR [ecx+0x24],cs
  411598:	test   al,0x8c
  41159a:	xchg   ebx,eax
  41159b:	adc    BYTE PTR [ecx+edx*1-0xb9bd500],dl
  4115a2:	dec    ebp
  4115a3:	push   ecx
  4115a4:	and    edx,DWORD PTR [edi+0x11880411]
  4115aa:	sub    DWORD PTR [esp+esi*1-0x38],ecx
  4115ae:	dec    edi
  4115af:	push   ecx
  4115b0:	daa    
  4115b1:	daa    
  4115b2:	int    0x83
  4115b4:	aam    0x1
  4115b6:	test   eax,eax
  4115b8:	xor    eax,0x9b8b5b0c
  4115bd:	mov    esp,0x3cdb5e5e
  4115c2:	xor    eax,0x891830c2
  4115c7:	xchg   BYTE PTR [ecx],dh
  4115c9:	sti    
  4115ca:	std    
  4115cb:	dec    DWORD PTR [esi-0x2e]
  4115ce:	mov    ebp,0xe1000023
  4115d3:	aaa    
  4115d4:	mov    bh,0x5e
  4115d6:	fild   QWORD PTR [ecx+0x3d]
  4115d9:	aaa    
  4115da:	jae    0x4115bf
  4115dc:	add    DWORD PTR [eax+0x7eb31],edi
  4115e2:	repnz cmp DWORD PTR [ebp+0x49823523],0x86ea08c0
  4115ed:	inc    ebx
  4115ee:	cmp    DWORD PTR [ebx+0xf6d8a40],ebp
  4115f4:	or     BYTE PTR [ecx+0xf0d],al
  4115fa:	xor    DWORD PTR [eax+0x41],esi
  4115fd:	je     0x411635
  4115ff:	ins    BYTE PTR es:[edi],dx
  411600:	cmp    eax,0x1eb2d2b
  411605:	ret    
  411606:	stos   BYTE PTR es:[edi],al
  411607:	outs   dx,BYTE PTR ds:[esi]
  411608:	fld    QWORD PTR [ebx+0x2d]
  41160b:	jmp    0x41160e
  41160d:	mov    esp,DWORD PTR [ebp+0x3103c1d6]
  411613:	jmp    0x4115c7
  411615:	mov    ch,BYTE PTR [ebp+0x3103c1d6]
  41161b:	jmp    0x4115cc
  41161d:	mov    al,ch
  41161f:	(bad)  
  411620:	aad    0x3
  411622:	xor    ebx,ebp
  411624:	mov    ah,0x4f
  411626:	stos   BYTE PTR es:[edi],al
  411627:	jbe    0x411611
  411629:	aas    
  41162a:	sub    eax,0xe15201eb
  41162f:	pop    edi
  411630:	shl    BYTE PTR [ebx],0x29
  411633:	jecxz  0x4115e9
  411635:	hlt    
  411636:	add    BYTE PTR [eax],al
  411638:	jle    0x4115f7
  41163a:	add    ebx,0x45
  41163d:	out    dx,eax
  41163e:	add    DWORD PTR [eax],eax
  411640:	jb     0x4115e0
  411642:	inc    eax
  411643:	retf   
  411644:	jne    0x411659
  411646:	mov    bl,0x40
  411648:	push   0xffffffcf
  41164a:	stos   DWORD PTR es:[edi],eax
  41164b:	inc    eax
  41164c:	push   0xffffffcf
  41164e:	cmp    al,0x7d
  411650:	push   ebp
  411651:	xchg   edx,eax
  411652:	jnp    0x411668
  411654:	inc    esi
  411655:	cld    
  411656:	out    0xb6,eax
  411658:	in     al,0x64
  41165a:	jb     0x411615
  41165c:	cs inc ebx
  41165e:	xchg   edx,eax
  41165f:	add    esp,edi
  411661:	(bad)  
  411662:	aaa    
  411663:	ret    0x1471
  411666:	jo     0x41167c
  411668:	icebp  
  411669:	cld    
  41166a:	jmp    0x17c:0xf710df02
  411671:	cwde   
  411672:	dec    eax
  411673:	or     esi,DWORD PTR [esi]
  411675:	ret    
  411676:	jae    0x411675
  411678:	ds dec edx
  41167a:	test   al,0x3
  41167c:	lods   al,BYTE PTR ds:[esi]
  41167d:	int3   
  41167e:	out    0x78,al
  411680:	add    DWORD PTR [esi*2+0x450ae45],ecx
  411687:	cmp    al,0x73
  411689:	xchg   edi,eax
  41168a:	and    cl,ah
  41168c:	pop    edx
  41168d:	in     eax,0xd8
  41168f:	xor    eax,0xff8c9754
  411694:	xor    DWORD PTR [ecx+0x3ee7cf1],eax
  41169a:	and    BYTE PTR [ecx+0x146a0000],al
  4116a0:	aad    0x1e
  4116a2:	xor    ecx,DWORD PTR [ecx+0x7db5f5db]
  4116a8:	call   0xf7fae933
  4116ad:	adc    dl,BYTE PTR [edi-0x2d791805]
  4116b3:	mov    edi,esi
  4116b5:	adc    al,BYTE PTR [edi+0x5bd4e7fb]
  4116bb:	or     esi,DWORD PTR [ebp-0x7b]
  4116be:	mov    cs,WORD PTR [edx+0x0]
  4116c1:	sub    BYTE PTR ds:0xafd13489,dh
  4116c7:	stc    
  4116c8:	sbb    al,0x24
  4116ca:	pop    edi
  4116cb:	lea    eax,[esp+edx*8+0x1a]
  4116cf:	xchg   ebx,eax
  4116d0:	inc    esp
  4116d1:	hlt    
  4116d2:	ret    0x8ed
  4116d5:	arpl   WORD PTR [esi+0x40],bp
  4116d8:	lods   al,BYTE PTR ds:[esi]
  4116d9:	jno    0x411751
  4116db:	sbb    BYTE PTR [eax+0x1cfeae2a],dl
  4116e1:	cmc    
  4116e2:	pop    ebp
  4116e3:	mov    esi,0x1432e91c
  4116e8:	or     eax,0x4ef2b49f
  4116ed:	test   al,0x32
  4116ef:	mov    DWORD PTR [ecx+esi*8],esi
  4116f2:	mov    bh,0xf8
  4116f4:	cmp    ah,cl
  4116f6:	add    al,0x8d
  4116f8:	inc    esp
  4116f9:	cld    
  4116fa:	cmp    dl,BYTE PTR [ebx-0x117d23bc]
  411700:	or     BYTE PTR [ebx+0x0],ah
  411703:	add    dh,dh
  411705:	aas    
  411706:	lods   al,BYTE PTR ds:[esi]
  411707:	popa   
  411708:	out    dx,al
  411709:	pop    ss
  41170a:	nop
  41170b:	stos   BYTE PTR es:[edi],al
  41170c:	mov    bh,0xfd
  41170e:	cmp    BYTE PTR [ebp-0x1926bbfb],bl
  411714:	push   0xed9ff896
  411719:	cli    
  41171a:	jge    0x4116a1
  41171c:	sub    DWORD PTR [eax+eax*1+0x48f3075],esp
  411723:	push   esp
  411724:	loop   0x41176e
  411726:	aas    
  411727:	jmp    0xf9ccadd1
  41172c:	inc    ecx
  41172d:	cli    
  41172e:	std    
  41172f:	out    dx,al
  411730:	clc    
  411731:	xchg   ebp,eax
  411732:	adc    BYTE PTR [esi],ah
  411734:	jb     0x411730
  411736:	jge    0x411785
  411738:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41173a:	add    BYTE PTR [eax],al
  41173c:	cmp    al,0x16
  41173e:	mov    DWORD PTR [edx*8+0x58414bbf],eax
  411745:	std    
  411746:	cmp    DWORD PTR [ebp-0x1dc78],0x18fa910b
  411750:	xor    al,0x52
  411752:	aas    
  411753:	and    DWORD PTR [edx+0x628c0eff],0x23
  41175a:	(bad)  
  41175b:	inc    ebp
  41175d:	xchg   edx,eax
  41175e:	or     eax,0x4d24b7ff
  411763:	call   0x412d79
  411768:	add    BYTE PTR [eax],al
  41176a:	aaa    
  41176b:	(bad)  
  41176c:	pop    edx
  41176d:	mov    DWORD PTR [ecx+ebp*4-0x3cf7f741],eax
  411774:	mov    ch,ah
  411776:	cdq    
  411777:	xor    al,0x7d
  411779:	add    BYTE PTR [eax],bl
  41177b:	push   ss
  41177c:	push   ecx
  41177d:	push   esi
  41177e:	lahf   
  41177f:	js     0x4117c5
  411781:	or     BYTE PTR [ebp+0x8b97dc1],al
  411787:	push   ss
  411788:	add    BYTE PTR [eax],al
  41178a:	push   ecx
  41178b:	dec    edi
  41178c:	add    al,0xcc
  41178f:	js     0x4117c3
  411791:	sub    DWORD PTR [esi],0xd8fc0010
  411797:	push   esi
  411798:	jecxz  0x4117a0
  41179a:	push   ebx
  41179b:	mov    DWORD PTR [eax+0x1308e7],0x72b0900
  4117a5:	or     DWORD PTR [esi+0x2f813578],esp
  4117ab:	adc    BYTE PTR [eax],al
  4117ad:	cld    
  4117ae:	mov    BYTE PTR [esi-0x12],dl
  4117b1:	or     ah,BYTE PTR [ecx+0x31328823]
  4117b7:	je     0x4117f0
  4117b9:	xor    BYTE PTR [ebx-0x11],0x7c
  4117bd:	aaa    
  4117be:	mov    al,0xca
  4117c0:	inc    ecx
  4117c1:	push   cs
  4117c2:	xor    ebx,ebp
  4117c4:	inc    edx
  4117c5:	out    dx,al
  4117c6:	aaa    
  4117c7:	test   bh,0x88
  4117ca:	daa    
  4117cb:	jbe    0x4117a1
  4117cd:	add    BYTE PTR [eax],0x0
  4117d0:	push   edi
  4117d1:	jmp    0x4117e4
  4117d3:	add    dh,BYTE PTR [ecx]
  4117d5:	lods   al,BYTE PTR ds:[esi]
  4117d6:	daa    
  4117d7:	or     edi,DWORD PTR [edx+0x6e28506]
  4117dd:	lods   al,BYTE PTR ds:[esi]
  4117de:	and    al,0xf
  4117e0:	sub    BYTE PTR [ecx-0x714fe884],dh
  4117e6:	add    eax,esi
  4117e8:	xor    ch,bl
  4117ea:	inc    edx
  4117eb:	jmp    0x8463:0x882ff42d
  4117f2:	xor    al,0x82
  4117f4:	repz out dx,al
  4117f6:	jl     0x411827
  4117f8:	mov    dl,0x48
  4117fa:	ror    BYTE PTR [edx],1
  4117fc:	inc    edx
  4117fd:	je     0x4117d3
  4117ff:	dec    eax
  411800:	mov    dl,0x2a
  411802:	add    eax,0x87bfe885
  411807:	mov    WORD PTR [ebx+ebp*2-0x4f],?
  41180b:	out    0xe,eax
  41180d:	jmp    0x411810
  41180f:	add    BYTE PTR [esi-0x2f],bh
  411812:	lods   al,BYTE PTR ds:[esi]
  411813:	mov    ch,al
  411815:	mov    bh,0x43
  411817:	add    esi,DWORD PTR [ecx]
  411819:	jbe    0x4117e0
  41181b:	and    ebp,DWORD PTR ds:0x704b5965
  411821:	jmp    0x41189f
  411823:	or     DWORD PTR [eax+0x35c18502],ebp
  411829:	outs   dx,BYTE PTR ds:[esi]
  41182a:	inc    ecx
  41182b:	add    esi,DWORD PTR [eax-0xfb324fc]
  411831:	adc    esp,edi
  411833:	xchg   ecx,eax
  411834:	add    BYTE PTR [eax],al
  411836:	test   ch,dl
  411838:	jecxz  0x41183d
  41183a:	mov    edx,0xcb080b4f
  41183f:	stos   DWORD PTR es:[edi],eax
  411840:	sbb    eax,ebp
  411842:	jle    0x4117d1
  411844:	out    dx,eax
  411845:	jl     0x41186f
  411847:	xchg   ebp,eax
  411848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411849:	or     BYTE PTR [edx+0x6884ebd5],dh
  41184f:	sub    ebx,DWORD PTR [eax*8+0x4295825e]
  411856:	xor    dl,BYTE PTR [esp+esi*1]
  411859:	jge    0x4118b0
  41185b:	arpl   WORD PTR [edi],si
  41185d:	mov    bl,0xbb
  41185f:	dec    esi
  411860:	fistp  QWORD PTR [edx-0x23]
  411863:	pop    es
  411864:	je     0x41181f
  411866:	ds gs pop ss
  411869:	sbb    al,0x4f
  41186b:	adc    al,0xe7
  41186d:	add    ebx,DWORD PTR [ecx+0x1ec51bac]
  411873:	mov    DWORD PTR [ebx+ecx*1+0x430ec66],ebp
  41187a:	xor    DWORD PTR [edx+edi*4],edx
  41187d:	sub    BYTE PTR [ebp-0x4],0xb7
  411881:	sbb    ecx,DWORD PTR [esi+0x5a03e714]
  411887:	lea    ecx,[ebx-0x4f]
  41188a:	lock or al,0xe7
  41188d:	mov    dl,0xbb
  41188f:	push   eax
  411890:	add    edi,esp
  411892:	stos   DWORD PTR es:[edi],eax
  411893:	pusha  
  411894:	retf   
  411895:	jmp    FWORD PTR [ecx+0xfea7d5]
  41189b:	add    BYTE PTR [ebp+ecx*1-0x72e1dad8],al
  4118a2:	loope  0x411920
  4118a4:	icebp  
  4118a5:	push   esp
  4118a6:	not    BYTE PTR [ebp+0x29]
  4118a9:	aad    0x8
  4118ab:	hlt    
  4118ac:	cmp    ecx,DWORD PTR [edx]
  4118ae:	add    BYTE PTR [eax-0x55],ah
  4118b1:	mov    WORD PTR [edi+0x7c19fa9],?
  4118b7:	test   al,0x4d
  4118b9:	wbinvd 
  4118bb:	repz or eax,0xb3b8870d
  4118c1:	aad    0x4
  4118c3:	pusha  
  4118c4:	repz ss or eax,0x170c8b7f
  4118cb:	jo     0x4118c2
  4118cd:	ss or  eax,0xdfd4657f
  4118d3:	rcr    ebp,1
  4118d5:	or     al,0x87
  4118d7:	test   al,0x72
  4118d9:	push   es
  4118da:	mov    dh,0xf0
  4118dc:	cmc    
  4118dd:	repz adc dl,ah
  4118e0:	dec    eax
  4118e1:	mov    WORD PTR [edx],cs
  4118e3:	pusha  
  4118e4:	cmc    
  4118e5:	ss or  eax,0xdfd4353f
  4118eb:	icebp  
  4118ec:	sub    ecx,DWORD PTR ds:0xd323f0d
  4118f2:	mov    edi,0xc25a1860
  4118f7:	icebp  
  4118f8:	xor    ah,BYTE PTR [ebx-0x77]
  4118fb:	mov    ch,0x16
  4118fd:	jns    0xe4119a8
  411903:	or     ecx,DWORD PTR [ecx+0x18ef75eb]
  411909:	jno    0x411938
  41190b:	push   ebp
  41190c:	mov    ebx,ebp
  41190e:	jne    0x4118ff
  411910:	adc    BYTE PTR [ecx+0x2d],ah
  411913:	push   ebp
  411914:	mov    ebx,ebp
  411916:	jne    0x411907
  411918:	or     BYTE PTR [ecx+0x2d],dh
  41191b:	push   ebp
  41191c:	xchg   DWORD PTR [edx],esi
  41191e:	cmc    
  41191f:	mov    edx,eax
  411921:	push   0x70
  411923:	adc    ecx,DWORD PTR [ecx-0x76edc517]
  411929:	add    dl,cl
  41192b:	dec    edi
  41192c:	in     eax,0x18
  41192e:	and    BYTE PTR [eax],dl
  411930:	aas    
  411931:	mov    ebx,DWORD PTR [edx+0x1010e54f]
  411937:	adc    BYTE PTR [edi],bh
  411939:	mov    ecx,DWORD PTR [edx+0x8e551]
  41193f:	adc    edi,DWORD PTR [edi]
  411941:	mov    ecx,DWORD PTR [edx-0x76773286]
  411947:	stos   DWORD PTR es:[edi],eax
  411948:	mov    edi,0x88bd8808
  41194d:	in     eax,0xdb
  41194f:	xor    ecx,DWORD PTR [ecx]
  411951:	push   ebx
  411952:	inc    esi
  411953:	ror    DWORD PTR [edx+0x547b7c45],0x8
  41195a:	jecxz  0x41195d
  41195c:	mov    ecx,DWORD PTR [ebp+0x40]
  41195f:	jnp    0x4119a9
  411961:	add    al,0xd1
  411963:	inc    esp
  411964:	shr    bl,0x0
  411967:	add    BYTE PTR [ecx+eiz*8-0x36],dl
  41196b:	sub    DWORD PTR [ebx+0x1f0f0ef8],0xbe89d8e3
  411975:	push   ecx
  411976:	jecxz  0x41197c
  411978:	fldenv [ebx]
  41197a:	mov    dh,dl
  41197c:	dec    ecx
  41197d:	push   ss
  41197e:	or     eax,0xf2795e31
  411983:	cmp    DWORD PTR [ebx+0x7],0xe30800fe
  41198a:	fmul   DWORD PTR [ecx+0x10e3514e]
  411990:	jmp    0x1a0fa1b8
  411995:	push   ss
  411996:	push   DWORD PTR [eax]
  411998:	inc    esi
  411999:	jns    0x41198d
  41199b:	sub    DWORD PTR [ebx],0xeb3332e3
  4119a1:	loop   0x41197a
  4119a3:	mov    DWORD PTR [ecx],esi
  4119a5:	cmp    eax,0xdc33e541
  4119aa:	adc    cl,BYTE PTR [eax+0x71e2ce7]
  4119b0:	pusha  
  4119b1:	sbb    eax,0xab0f279
  4119b6:	or     edi,edi
  4119b8:	lahf   
  4119b9:	jmp    0x41198d
  4119bb:	fldcw  WORD PTR [eax+0x39e542cd]
  4119c1:	sbb    al,0x3e
  4119c3:	mov    ah,bh
  4119c5:	fiadd  WORD PTR [edx]
  4119c7:	imul   BYTE PTR [edx+0xc01048]
  4119cd:	add    BYTE PTR [esi+0x30e680ee],al
  4119d3:	test   BYTE PTR [edx],dl
  4119d5:	or     BYTE PTR [eax+0x74],ch
  4119d8:	xor    esi,DWORD PTR [eax]
  4119da:	outs   dx,DWORD PTR ds:[esi]
  4119db:	je     0x4119ed
  4119dd:	adc    BYTE PTR [edx+0x61],0x57
  4119e1:	test   eax,0x3027dc9b
  4119e6:	push   0xa811d570
  4119eb:	mov    esi,0x6a16ee42
  4119f0:	and    al,0x0
  4119f2:	mov    eax,0xeef9fa78
  4119f7:	daa    
  4119f8:	or     al,0x7
  4119fa:	xor    ebx,ebp
  4119fc:	add    DWORD PTR [ecx+0x1b232be7],ecx
  411a02:	mov    eax,0x2dee4225
  411a07:	je     0x411a19
  411a09:	or     dl,bh
  411a0b:	jae    0x411a50
  411a0d:	xor    cl,0xe6
  411a10:	rcr    BYTE PTR ds:0xe58014b8,1
  411a16:	es jb  0x4119ee
  411a19:	mov    ah,0x9
  411a1b:	mov    al,ds:0x13a9ffc2
  411a20:	inc    esi
  411a21:	inc    edx
  411a22:	fisttp WORD PTR ds:0x13ca2468
  411a28:	out    0x3,eax
  411a2a:	sub    bh,BYTE PTR [ebp+0x1471b0bf]
  411a30:	jo     0x411a5e
  411a32:	add    BYTE PTR [eax],al
  411a34:	jno    0x411a1a
  411a36:	in     eax,dx
  411a37:	or     BYTE PTR [edi+0x3103e7f7],0x9
  411a3e:	fild   DWORD PTR ss:[ecx]
  411a41:	push   ebx
  411a42:	out    0x7c,eax
  411a44:	outs   dx,DWORD PTR ds:[esi]
  411a45:	ror    dh,cl
  411a47:	repnz mov cl,0xec
  411a4a:	rol    DWORD PTR [ecx+esi*1],cl
  411a4d:	adc    al,0xe2
  411a4f:	push   edx
  411a50:	dec    esi
  411a51:	inc    ebp
  411a52:	sub    BYTE PTR [eax+edi*4],al
  411a55:	jle    0x411a0a
  411a57:	jge    0x411ac5
  411a59:	nop
  411a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a5b:	add    BYTE PTR [eax-0x56160538],ch
  411a61:	aad    0x6a
  411a63:	and    cl,BYTE PTR [edi]
  411a65:	mov    ebx,edx
  411a67:	push   eax
  411a68:	push   cs
  411a69:	pop    esi
  411a6a:	sub    BYTE PTR [edx+ebp*1],al
  411a6d:	jg     0x411a02
  411a6f:	jge    0x411ac8
  411a71:	rcl    BYTE PTR [esi+0x7bfbb002],cl
  411a77:	add    al,0x31
  411a79:	adc    al,0xe2
  411a7b:	push   edx
  411a7c:	push   esi
  411a7d:	dec    eax
  411a7e:	sub    BYTE PTR [eax+ebp*4],al
  411a81:	shr    DWORD PTR [eax],cl
  411a83:	sbb    edi,DWORD PTR [edx*4-0xbf9f7ba]
  411a8a:	out    0xfe,eax
  411a8c:	(bad)  
  411a8d:	cmp    al,0xb9
  411a8f:	(bad)  
  411a90:	neg    BYTE PTR [esi+eiz*1+0x680adf45]
  411a97:	and    eax,DWORD PTR [eax]
  411a99:	add    dl,ch
  411a9b:	adc    al,0x0
  411a9d:	jmp    0x1f639d4
  411aa2:	popf   
  411aa3:	push   esp
  411aa4:	add    al,bl
  411aa6:	and    al,0x9c
  411aa8:	(bad)  
  411aa9:	sub    BYTE PTR [ebx],dl
  411aab:	ja     0x5438eef
  411ab1:	pusha  
  411ab2:	push   ds
  411ab3:	sbb    al,0xf9
  411ab5:	jo     0x411aaa
  411ab7:	xchg   ebp,eax
  411ab8:	shl    ch,0x7f
  411abb:	adc    DWORD PTR [edi+0x3df9b617],eax
  411ac1:	bound  eax,QWORD PTR [ecx+0x743c28a8]
  411ac7:	xrelease mov BYTE PTR [esi+0x680701ed],bh
  411ace:	push   ebx
  411acf:	out    dx,eax
  411ad0:	add    cl,ch
  411ad2:	xor    bl,BYTE PTR [edi]
  411ad4:	mov    ch,0x11
  411ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad7:	push   esp
  411ad8:	add    BYTE PTR [eax+0x1b],dh
  411adb:	aam    0xed
  411add:	out    0xb5,eax
  411adf:	cli    
  411ae0:	cld    
  411ae1:	jmp    0x5e4a2f18
  411ae6:	push   0x44
  411ae8:	aas    
  411ae9:	jmp    0x8700ecb3
  411aee:	inc    eax
  411aef:	xchg   esp,eax
  411af0:	in     eax,0x8d
  411af2:	xor    dl,BYTE PTR [eax+eax*1]
  411af5:	repnz cmp DWORD PTR [ebx],0x4d
  411af9:	sub    BYTE PTR ds:0x7d739d,ch
  411aff:	add    BYTE PTR [ebp+0x16a981d9],bl
  411b05:	pushf  
  411b06:	rcr    DWORD PTR [edx],1
  411b08:	sbb    ebx,DWORD PTR [esi+ebx*8-0x76cdaf96]
  411b0f:	sbb    eax,0xa8563b60
  411b14:	xor    bl,BYTE PTR [edi]
  411b16:	jae    0x411b18
  411b18:	sub    al,0x70
  411b1a:	faddp  st(1),st
  411b1c:	ja     0x411b33
  411b1e:	jg     0x411b07
  411b20:	and    al,0x17
  411b22:	add    BYTE PTR [eax],al
  411b24:	rol    DWORD PTR [ebp+0x25],cl
  411b27:	push   esp
  411b28:	cdq    
  411b29:	push   ss
  411b2a:	xchg   edi,ebx
  411b2c:	sbb    DWORD PTR [esi],ecx
  411b2e:	or     eax,DWORD PTR [ecx-0x2e4d1]
  411b34:	enter  0xb6f1,0x28
  411b38:	retf   0xfdd7
  411b3b:	mov    BYTE PTR [edi+0x58],al
  411b3e:	out    dx,al
  411b3f:	push   ss
  411b40:	or     DWORD PTR [esi],esi
  411b42:	stc    
  411b43:	add    BYTE PTR [eax+0x20b70916],cl
  411b49:	test   al,0x40
  411b4b:	add    BYTE PTR [ecx],ch
  411b4d:	pop    es
  411b4e:	dec    BYTE PTR [ebp+0x60]
  411b51:	cwde   
  411b52:	jl     0x411b4c
  411b54:	mov    bl,ch
  411b56:	test   BYTE PTR [ebx-0x7601e38a],ch
  411b5c:	mov    al,ds:0xd11fdd56
  411b61:	sub    eax,0xeed0
  411b66:	rcl    DWORD PTR [esi+0x8],1
  411b69:	icebp  
  411b6a:	shl    DWORD PTR [edi],0x30
  411b6d:	enter  0x58c1,0x80
  411b71:	jecxz  0x411b65
  411b73:	push   ecx
  411b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b75:	stos   BYTE PTR es:[edi],al
  411b76:	pop    ecx
  411b77:	inc    eax
  411b78:	xor    cl,bl
  411b7a:	mov    eax,ds:0x7e0c028
  411b7f:	outs   dx,DWORD PTR ds:[esi]
  411b80:	rcl    ecx,cl
  411b82:	mov    dh,0x6d
  411b84:	mov    edi,0xcd6d9a09
  411b89:	shl    DWORD PTR [eax-0x10],0x30
  411b8d:	enter  0x5781,0x80
  411b91:	jecxz  0x411bc4
  411b93:	dec    edx
  411b94:	add    al,0xff
  411b96:	xor    DWORD PTR [ecx+ebp*1],ecx
  411b99:	mov    BYTE PTR [ecx],cl
  411b9b:	cmp    eax,0x3d200724
  411ba0:	jns    0x411b71
  411ba2:	lock push ebx
  411ba4:	push   es
  411ba5:	xor    ecx,ebp
  411ba7:	je     0x411bec
  411ba9:	adc    dl,0xce
  411bac:	aam    0x32
  411bae:	add    cl,ah
  411bb0:	sub    cl,BYTE PTR [eax+0x1243cd9]
  411bb6:	add    BYTE PTR ds:0x370c779,bh
  411bbc:	hlt    
  411bbd:	xor    BYTE PTR [ecx-0x6d7fbc9c],al
  411bc3:	jmp    0x882b:0xac96ff08
  411bca:	add    BYTE PTR [eax],al
  411bcc:	imul   edi,DWORD PTR [ecx+eiz*1+0x7abc400f],0xfdd370c7
  411bd7:	xor    BYTE PTR [ecx+0x74],ah
  411bda:	inc    esp
  411bdb:	adc    BYTE PTR [edx-0x16],0xf8
  411bdf:	push   cs
  411be0:	ss in  al,dx
  411be2:	sub    ecx,DWORD PTR [edx-0x1dbd0d0c]
  411be8:	sub    eax,0x29883cec
  411bed:	jle    0x411bad
  411bef:	pop    es
  411bf0:	sub    eax,0xa807be66
  411bf5:	jmp    0x411b9f
  411bf7:	pop    ebp
  411bf8:	fidiv  DWORD PTR [ebx+0x15]
  411bfb:	pop    esp
  411bfc:	repz loop 0x411c00
  411bff:	push   ebx
  411c00:	jg     0x411c68
  411c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c03:	and    ebp,DWORD PTR ds:0x4d737b21
  411c09:	retf   
  411c0a:	lahf   
  411c0b:	test   BYTE PTR [edi],al
  411c0d:	adc    al,0xf6
  411c0f:	outs   dx,DWORD PTR ds:[esi]
  411c10:	loope  0x411c32
  411c12:	xchg   ebp,eax
  411c13:	inc    edx
  411c14:	das    
  411c15:	test   eax,0x54a5b327
  411c1a:	fbstp  TBYTE PTR [ebx+0x84146d6]
  411c20:	out    0x7b,eax
  411c22:	movzx  esi,WORD PTR [ecx+0x14]
  411c26:	aas    
  411c27:	cld    
  411c28:	(bad)  
  411c2a:	cs clc 
  411c2c:	xchg   ecx,ebp
  411c2e:	mov    ebp,0xce0000b4
  411c33:	push   edx
  411c34:	and    DWORD PTR [eax],ecx
  411c36:	mov    edi,0x71b63f7b
  411c3b:	adc    al,0xff
  411c3d:	bts    eax,esi
  411c40:	push   es
  411c41:	test   eax,0x3efd60b
  411c46:	add    al,0x9b
  411c48:	or     al,0xb3
  411c4a:	out    0x44,al
  411c4c:	bound  edi,QWORD PTR [esi-0x7bb62ca]
  411c52:	mov    ch,0x46
  411c54:	fbstp  TBYTE PTR [edx+0x824fbee]
  411c5a:	ja     0x411c4c
  411c5c:	aas    
  411c5d:	pop    esp
  411c5e:	cli    
  411c5f:	push   edx
  411c60:	out    0x78,eax
  411c62:	in     eax,dx
  411c63:	jmp    0x411c7c
  411c65:	sbb    al,0x67
  411c67:	out    dx,eax
  411c68:	mov    dh,0x7
  411c6a:	into   
  411c6b:	cmp    ebx,DWORD PTR [eax*8+0xc2c9f4e]
  411c72:	idiv   bl
  411c74:	nop
  411c75:	or     BYTE PTR [edi],bh
  411c77:	lock call FWORD PTR [ebx-0x1b]
  411c7b:	push   edx
  411c7c:	out    0x78,eax
  411c7e:	jne    0x411c6c
  411c80:	pop    ss
  411c81:	sbb    al,0xb
  411c83:	icebp  
  411c84:	jle    0x411c8d
  411c86:	and    DWORD PTR [ecx+0x5f252c00],0xffffffe8
  411c8d:	imul   edi,DWORD PTR [ecx],0xffffffee
  411c90:	std    
  411c91:	ret    0xfb85
  411c94:	pop    ebx
  411c95:	sub    eax,DWORD PTR [eax]
  411c97:	add    ch,bh
  411c99:	out    dx,eax
  411c9a:	push   esp
  411c9b:	pusha  
  411c9c:	push   eax
  411c9d:	xchg   edx,eax
  411c9e:	in     al,dx
  411c9f:	stc    
  411ca0:	mov    ds:0xeaa48949,eax
  411ca5:	call   0x99f8:0x5859ed73
  411cac:	mov    ds:0x3632faf7,eax
  411cb1:	out    dx,al
  411cb2:	mov    ebp,DWORD PTR [edx+eiz*1-0x42d57ea1]
  411cb9:	inc    edx
  411cba:	call   0xfe2f46c3
  411cbf:	or     DWORD PTR [edx],0x29e93f5b
  411cc5:	pop    eax
  411cc6:	clc    
  411cc7:	cdq    
  411cc8:	cmp    al,BYTE PTR [esi+0x772ff6fc]
  411cce:	test   al,0x9d
  411cd0:	jne    0x411cc1
  411cd2:	mov    WORD PTR [ebx*1+0x3670e85f],gs
  411cd9:	out    dx,al
  411cda:	std    
  411cdb:	(bad)  
  411cdc:	leave  
  411cdd:	jmp    0x411c68
  411cdf:	and    al,0x45
  411ce1:	pushf  
  411ce2:	inc    ebx
  411ce3:	(bad)
  411ce6:	lock push ecx
  411ce8:	jge    0x411d4a
  411cea:	aas    
  411ceb:	jmp    0x1a3974c9
  411cf0:	sub    eax,0x2fa6fc7e
  411cf5:	ja     0x411d1f
  411cf7:	sub    al,0x74
  411cf9:	out    dx,eax
  411cfa:	mov    WORD PTR [eax+eax*1],gs
  411cfd:	add    BYTE PTR ds:0x3908e85f,bl
  411d03:	out    dx,al
  411d04:	std    
  411d05:	add    BYTE PTR [ebx+0x558bf9bc],ah
  411d0b:	or     BYTE PTR [eax+0x5c709c45],cl
  411d11:	lock xor BYTE PTR [eax+0x4c],dl
  411d15:	inc    ecx
  411d16:	sbb    BYTE PTR [esp+eax*2-0x8],ch
  411d1a:	mov    eax,0x5ffc460a
  411d1f:	push   ss
  411d20:	gs test al,0xcd
  411d23:	xlat   BYTE PTR ds:[ebx]
  411d24:	std    
  411d25:	mov    WORD PTR [ebp+0x31e84d02],ss
  411d2b:	sbb    al,0xfe
  411d2d:	push   DWORD PTR [esi-0x5707bb95]
  411d33:	or     bl,ch
  411d35:	sti    
  411d36:	movhps xmm0,QWORD PTR [edx-0x733f3f3a]
  411d3d:	inc    ebp
  411d3e:	sbb    BYTE PTR [ebx+0x1643d3e5],ah
  411d44:	(bad)  
  411d45:	pop    esi
  411d46:	shr    DWORD PTR [edi-0x17],cl
  411d49:	pop    ebp
  411d4a:	dec    edx
  411d4b:	jmp    0x411d4a
  411d4d:	push   esp
  411d4e:	adc    DWORD PTR [eax+eax*4],esi
  411d51:	in     al,dx
  411d52:	in     al,dx
  411d53:	pop    ss
  411d54:	add    BYTE PTR [eax],al
  411d56:	dec    ebx
  411d57:	mov    esi,0xf03d8b56
  411d5c:	mov    dh,BYTE PTR [ebp-0x74]
  411d5f:	test   BYTE PTR gs:[eax+0x187e0000],al
  411d66:	(bad)  
  411d67:	push   eax
  411d68:	adc    BYTE PTR [esi+0x0],0x0
  411d6c:	dec    eax
  411d6d:	mov    ebp,?
  411d6f:	xor    BYTE PTR [bp+0x40],ah
  411d74:	jo     0x411dd8
  411d76:	sti    
  411d77:	dec    DWORD PTR [edi-0x3575303e]
  411d7d:	iret   
  411d7e:	dec    ebx
  411d7f:	inc    ecx
  411d80:	xor    ebp,edi
  411d82:	jns    0x411d87
  411d84:	arpl   WORD PTR [ecx],di
  411d86:	jg     0x411d81
  411d88:	cmp    DWORD PTR [edi],edx
  411d8a:	adc    esi,eax
  411d8c:	mov    ah,0x13
  411d8e:	push   es
  411d8f:	(bad)  
  411d90:	push   ss
  411d91:	std    
  411d92:	add    DWORD PTR [eax],eax
  411d94:	xor    DWORD PTR [edx+0x650188b0],edx
  411d9a:	jge    0x411e0f
  411d9c:	dec    DWORD PTR [esi+0x3]
  411d9f:	xor    bl,ah
  411da1:	push   edx
  411da2:	aam    0x8a
  411da4:	mov    ah,0xc7
  411da6:	add    edi,esi
  411da8:	out    0x64,al
  411daa:	jge    0x411e27
  411dac:	fild   QWORD PTR [esi]
  411dae:	add    edi,esi
  411db0:	lods   al,BYTE PTR ds:[esi]
  411db1:	scas   eax,DWORD PTR es:[edi]
  411db2:	add    edi,esi
  411db4:	into   
  411db5:	jb     0x411e2c
  411db7:	jnp    0x411d80
  411db9:	add    ecx,DWORD PTR ss:[esi]
  411dbc:	jg     0x411db8
  411dbe:	sbb    bh,0x36
  411dc1:	jb     0x411e08
  411dc3:	jnp    0x411d74
  411dc5:	push   ds
  411dc6:	add    ecx,DWORD PTR [esi]
  411dc8:	add    BYTE PTR [eax],al
  411dca:	(bad)  
  411dcc:	shl    bh,cl
  411dce:	test   eax,0x31023bfc
  411dd3:	mov    edx,0xf38b82bf
  411dd8:	xchg   BYTE PTR [ecx+esi*4],al
  411ddb:	xor    al,BYTE PTR [esi*2-0x1851da89]
  411de2:	or     al,ch
  411de4:	add    al,0xfe
  411de6:	mov    dl,0x98
  411de8:	mov    ebp,edi
  411dea:	data16 (bad) 
  411dec:	add    DWORD PTR [eax-0x597104e6],eax
  411df2:	mov    dl,0x68
  411df4:	mov    ebp,edi
  411df6:	dec    esi
  411df7:	mov    esi,0x14a77501
  411dfc:	je     0x411e7c
  411dfe:	mov    esi,0xe6049eed
  411e03:	sti    
  411e04:	push   cs
  411e05:	add    esi,DWORD PTR [ecx]
  411e07:	adc    al,0x2e
  411e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0a:	mov    ebx,DWORD PTR [ebx+0x1bf0a693]
  411e10:	out    0xae,eax
  411e12:	test   eax,0xba1768f6
  411e17:	adc    ah,bh
  411e19:	add    esp,DWORD PTR [edx+0x46]
  411e1c:	mov    esi,0x721c5d78
  411e21:	mov    gs,WORD PTR [edx]
  411e23:	lahf   
  411e24:	ins    BYTE PTR es:[edi],dx
  411e25:	sub    esp,0xffffffec
  411e28:	dec    esi
  411e29:	mov    bl,0xce
  411e2b:	in     al,dx
  411e2c:	out    0x3,eax
  411e2e:	add    BYTE PTR [eax],al
  411e30:	xor    DWORD PTR [edx-0x19],edi
  411e33:	fwait
  411e34:	push   cs
  411e35:	pop    esi
  411e36:	test   al,0x3
  411e38:	fld    st(0)
  411e3a:	sub    al,0x4
  411e3c:	(bad)  
  411e3d:	and    bh,BYTE PTR [ecx]
  411e3f:	jns    0x411df1
  411e41:	cmp    ebp,DWORD PTR [ebp-0x146b493e]
  411e47:	shl    eax,1
  411e49:	nop
  411e4a:	adc    ebx,esi
  411e4c:	sub    ah,bl
  411e4e:	cs jle 0x411e77
  411e51:	out    dx,al
  411e52:	inc    BYTE PTR [ebx]
  411e54:	xor    DWORD PTR [edi+eiz*8],edx
  411e57:	add    ebx,DWORD PTR [edx-0x46ec9fb9]
  411e5d:	xchg   esi,eax
  411e5e:	pop    ebx
  411e5f:	add    bh,BYTE PTR [edi-0x14]
  411e62:	sbb    dh,dl
  411e64:	mov    BYTE PTR [ebx],ah
  411e66:	bound  ecx,QWORD PTR [ecx+0x3ceede5]
  411e6c:	mov    ecx,0x5f024396
  411e71:	in     al,dx
  411e72:	mov    esi,0xeddd89
  411e77:	mov    dh,0x32
  411e79:	call   0xf6fd:0xee332d8b
  411e80:	jo     0x411e94
  411e82:	or     DWORD PTR [ecx+0x15bb9ab2],0xdefdea33
  411e8c:	call   0xadc24dba
  411e91:	jmp    0x411e56
  411e93:	jmp    0x6a42:0x55320000
  411e9a:	syscall 
  411e9c:	jnp    0x411e82
  411e9e:	mov    dl,0x2d
  411ea0:	add    ah,bl
  411ea2:	call   0x339274e9
  411ea7:	call   0xb7f775a9
  411eac:	js     0x411efd
  411eae:	xor    ch,dl
  411eb0:	add    BYTE PTR [ecx+0x1e],ch
  411eb3:	adc    al,0x73
  411eb5:	xchg   BYTE PTR [esi+0x323778af],ch
  411ebb:	jmp    0x6983:0x9f90b400
  411ec2:	xor    ebp,edx
  411ec4:	std    
  411ec5:	mov    ecx,0xe900b3ca
  411eca:	xor    cl,BYTE PTR [ecx+0x5e]
  411ecd:	mov    dl,0xb5
  411ecf:	clc    
  411ed0:	pop    ebx
  411ed1:	sub    ebp,DWORD PTR ds:0xfb975114
  411ed7:	pushf  
  411ed8:	inc    esp
  411ed9:	int    0x22
  411edb:	jb     0x411e66
  411edd:	lea    ecx,[esi+0x0]
  411ee0:	data16 ins BYTE PTR es:[edi],dx
  411ee2:	pop    edi
  411ee3:	or     DWORD PTR [bx+si+0x68],esi
  411ee7:	lahf   
  411ee8:	js     0x411ee3
  411eea:	fsubr  DWORD PTR [ebp+0x1c57e8ff]
  411ef0:	mov    eax,DWORD PTR [eax]
  411ef2:	sbb    BYTE PTR [eax],al
  411ef4:	test   edi,eax
  411ef6:	out    dx,al
  411ef7:	and    dl,dl
  411ef9:	sldt   WORD PTR [eax]
  411efc:	iret   
  411efd:	rcl    BYTE PTR [edx-0x7d],0x98
  411f01:	pop    ds
  411f02:	push   eax
  411f03:	call   0x3d0cd4
  411f08:	and    BYTE PTR [eax],bh
  411f0a:	dec    ecx
  411f0b:	inc    ecx
  411f0c:	sbb    bh,bh
  411f0e:	cmp    bh,cl
  411f10:	mov    bh,0x15
  411f12:	push   cs
  411f13:	mov    bh,0xd3
  411f15:	inc    ecx
  411f16:	push   ebx
  411f17:	call   0x3d0d34
  411f1c:	xor    BYTE PTR [eax-0xe7beb7],bh
  411f22:	es stc 
  411f24:	xchg   edi,eax
  411f25:	push   ss
  411f26:	push   cs
  411f27:	mov    bh,0x73
  411f29:	inc    edx
  411f2a:	push   esi
  411f2b:	call   0x3d0cd4
  411f30:	xchg   edi,eax
  411f31:	je     0x411f8a
  411f33:	ret    0x16e0
  411f36:	dec    edi
  411f37:	mov    esi,DWORD PTR [edx+esi*1+0x1a705308]
  411f3e:	cmc    
  411f3f:	call   DWORD PTR [edi]
  411f41:	nop
  411f42:	mov    edi,0x16c880
  411f47:	mov    eax,0x3d43e0
  411f4c:	adc    eax,DWORD PTR [edi]
  411f4e:	test   DWORD PTR [ebx],edx
  411f50:	sbb    edx,edi
  411f52:	add    al,0x83
  411f54:	dec    ebx
  411f55:	adc    edi,DWORD PTR [ecx]
  411f57:	test   al,0xc5
  411f59:	dec    edi
  411f5a:	add    BYTE PTR [edx+0x37],dh
  411f5d:	scas   eax,DWORD PTR es:[edi]
  411f5e:	test   al,0x4d
  411f60:	add    BYTE PTR [eax],al
  411f62:	fst    DWORD PTR [esi]
  411f64:	xchg   DWORD PTR [eax],edx
  411f66:	add    DWORD PTR [ecx],eax
  411f68:	jg     0x411f2a
  411f6a:	mov    WORD PTR [edi+0x3104bf],cs
  411f70:	sub    al,0x4e
  411f72:	lock cld 
  411f74:	jae    0x411f63
  411f76:	cli    
  411f77:	mov    esi,0x66020008
  411f7c:	pusha  
  411f7d:	and    al,0x39
  411f7f:	push   cs
  411f80:	in     al,dx
  411f81:	call   0x8040d8cf
  411f86:	jb     0x412004
  411f88:	add    al,0x0
  411f8a:	xor    DWORD PTR [ebp+0x2c],esi
  411f8d:	dec    ebx
  411f8e:	jo     0x411f8b
  411f90:	mov    WORD PTR [ecx],ss
  411f92:	mov    eax,0x35c184eb
  411f97:	jle    0x411f5d
  411f99:	add    al,0x54
  411f9b:	inc    ebx
  411f9c:	dec    ebp
  411f9d:	aas    
  411f9e:	xor    ebp,ebp
  411fa0:	lock mov eax,0x4108d9
  411fa6:	stos   BYTE PTR es:[edi],al
  411fa7:	out    dx,al
  411fa8:	mov    dl,BYTE PTR [eax]
  411faa:	mov    dl,0x3e
  411fac:	or     BYTE PTR [ecx+0x283ef7f1],al
  411fb2:	ja     0x411f70
  411fb4:	add    DWORD PTR [edx-0x32],esi
  411fb7:	mov    dh,0xc3
  411fb9:	add    al,0x31
  411fbb:	or     BYTE PTR [edx+0x1c4fb2e3],0x51
  411fc2:	pop    edi
  411fc3:	jbe    0x412022
  411fc5:	or     BYTE PTR [eax],al
  411fc7:	add    BYTE PTR [edx+0x6c8b0d88],ch
  411fcd:	xor    edx,DWORD PTR [ecx+edx*2-0x67]
  411fd1:	adc    ah,bh
  411fd3:	std    
  411fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd5:	dec    eax
  411fd6:	inc    ebp
  411fd7:	lock add DWORD PTR [eax+0x43],esp
  411fdb:	or     BYTE PTR [ecx],al
  411fdd:	add    esp,esp
  411fdf:	clc    
  411fe0:	mov    fs,edx
  411fe2:	mov    es,WORD PTR [ebx-0x67]
  411fe5:	mov    eax,DWORD PTR [ecx+eax*8-0x13c5ebdf]
  411fec:	pusha  
  411fed:	in     al,dx
  411fee:	fiadd  WORD PTR [eax]
  411ff0:	fdivr  DWORD PTR [ebx-0x68cebcdd]
  411ff6:	and    al,0xfc
  411ff8:	add    esp,edi
  411ffa:	inc    esp
  411ffb:	sti    
  411ffc:	push   esp
  411ffd:	jmp    0x533ecc51
  412002:	out    0x8e,eax
  412004:	repnz jecxz 0x41201e
  412007:	in     al,dx
  412008:	int3   
  412009:	jmp    0x432b:0xbbc800a6
  412010:	xor    DWORD PTR [edi-0x37e13d4],edx
  412016:	or     bl,bh
  412018:	sbb    al,0xe9
  41201a:	jb     0x41207a
  41201c:	adc    eax,0xb6f4249d
  412021:	dec    esi
  412022:	jae    0x411fae
  412024:	push   0xffffffe4
  412026:	bound  ebx,QWORD PTR [esi+0x5]
  412029:	popf   
  41202a:	lods   al,BYTE PTR ds:[esi]
  41202b:	jmp    0x41202d
  41202d:	add    BYTE PTR [esi-0x7575acb2],ch
  412033:	cld    
  412034:	mov    edi,0xe7537a2b
  412039:	mov    ?,WORD PTR [edx-0x14]
  41203c:	xchg   edi,eax
  41203d:	jmp    0x412057
  41203f:	jmp    0x41207f
  412041:	add    BYTE PTR [eax+0x3c],bl
  412044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412045:	inc    edx
  412046:	xor    DWORD PTR [edi-0x39e0c5c],edx
  41204c:	aam    0xfa
  41204e:	mov    ah,0xe8
  412050:	(bad)  
  412051:	sub    edi,edx
  412053:	push   edx
  412054:	out    0x8e,eax
  412056:	repnz sti 
  412058:	mov    bh,0xeb
  41205a:	cmp    al,0xeb
  41205c:	push   es
  41205d:	add    BYTE PTR [ebx-0xd7404ba],ch
  412063:	jecxz  0x412065
  412065:	pusha  
  412066:	out    dx,eax
  412067:	out    0x87,eax
  412069:	mov    WORD PTR [edx-0x5522a466],es
  41206f:	push   esp
  412070:	call   0x882118e5
  412075:	xor    al,0x55
  412077:	jnp    0x412021
  412079:	sbb    al,0xf4
  41207b:	adc    ecx,DWORD PTR [ebx-0x17bcaad4]
  412081:	ror    BYTE PTR [ebp-0x1a],0xfd
  412085:	inc    ecx
  412086:	xchg   ebp,eax
  412087:	pop    esp
  412088:	aas    
  412089:	jmp    0x3a31752f
  41208e:	inc    ebp
  41208f:	cli    
  412090:	clc    
  412091:	sahf   
  412092:	add    BYTE PTR [eax],al
  412094:	cs jge 0x41203f
  412097:	and    al,0x6c
  412099:	adc    al,0x8b
  41209b:	and    al,0xd
  41209d:	inc    ebp
  41209e:	call   0xfe2b3647
  4120a3:	pop    ss
  4120a4:	mov    al,ds:0x1519f853
  4120a9:	xchg   ecx,eax
  4120aa:	clc    
  4120ab:	outs   dx,BYTE PTR ds:[esi]
  4120ac:	(bad)  
  4120ad:	fwait
  4120ae:	inc    esi
  4120af:	icebp  
  4120b0:	bound  ebx,QWORD PTR [ebx-0x37aa6bd]
  4120b6:	jne    0x412109
  4120b8:	out    0xe9,al
  4120ba:	and    DWORD PTR [edi],0xac8b3e45
  4120c0:	retf   0xe844
  4120c3:	ror    edx,cl
  4120c5:	jmp    0x8facb8c7
  4120ca:	in     al,dx
  4120cb:	mov    eax,?
  4120cd:	sbb    al,0x0
  4120cf:	mov    esp,0xd7ff3a5
  4120d4:	shl    edi,0xfd
  4120d7:	jmp    0x62965edf
  4120dc:	adc    BYTE PTR [ecx+ecx*4],bl
  4120df:	add    BYTE PTR ds:0x18858917,dl
  4120e5:	out    0xfb,al
  4120e7:	jmp    FWORD PTR [eax-0x7001ab05]
  4120ed:	out    0x6a,al
  4120ef:	add    al,ah
  4120f1:	aaa    
  4120f2:	dec    esi
  4120f3:	inc    ecx
  4120f4:	pop    eax
  4120f5:	sti    
  4120f6:	in     eax,0xfd
  4120f8:	add    BYTE PTR [eax],al
  4120fa:	jg     0x4120e2
  4120fc:	sub    eax,0x2894d2d2
  412101:	dec    esi
  412102:	or     DWORD PTR [eax],edx
  412104:	mov    BYTE PTR [edx+ecx*2],al
  412107:	push   ebp
  412108:	jg     0x412104
  41210a:	pusha  
  41210b:	addr16 in eax,dx
  41210d:	(bad)  
  41210e:	aad    0x6a
  412110:	(bad)  
  412111:	dec    DWORD PTR [edi+0x18000010]
  412117:	cli    
  412118:	push   esp
  412119:	mov    eax,ecx
  41211b:	xchg   edi,eax
  41211c:	xor    DWORD PTR [esi+ebp*4-0x1b],0xf9ba31fb
  412124:	xor    BYTE PTR [ebx-0x1a06b],cl
  41212a:	jg     0x4120c4
  41212c:	cmp    DWORD PTR [esi+ecx*4-0x1a],0x5f85fffb
  412134:	(bad)  
  412135:	dec    DWORD PTR [edi+0x7e7c899a]
  41213b:	out    0xfb,al
  41213d:	ldmxcsr DWORD PTR [ecx]
  412140:	jg     0x412122
  412142:	out    dx,eax
  412143:	cdq    
  412144:	mov    ecx,0xfbe60e7c
  412149:	cmovbe esp,DWORD PTR [esi]
  41214c:	sub    eax,0xc61050f8
  412151:	add    ecx,eax
  412153:	push   ecx
  412154:	inc    edx
  412155:	adc    DWORD PTR [edx+0xb],0x79
  412159:	add    eax,0x3a7d31
  41215e:	add    BYTE PTR [eax],al
  412160:	and    al,0x2f
  412162:	push   ebx
  412163:	push   esi
  412164:	mov    DWORD PTR [ebx+edi*8-0x57867103],ebx
  41216b:	js     0x4120f4
  41216d:	(bad)  
  41216f:	add    BYTE PTR [ecx-0x318cfe5f],dh
  412175:	jns    0x412134
  412177:	js     0x4121e8
  412179:	(bad)  
  41217c:	fcomp  QWORD PTR [esi-0x73]
  41217f:	xor    DWORD PTR [ecx+0x1fdfbd6],0xffffffc5
  412186:	(bad)  
  412187:	sti    
  412188:	dec    esi
  412189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218a:	pop    ebx
  41218b:	pop    esi
  41218c:	jmp    0x1f4:0x735bf073
  412193:	push   ebx
  412194:	test   al,0x97
  412196:	push   esp
  412197:	push   eax
  412198:	sbb    BYTE PTR ds:0x72395387,0x5d
  41219f:	or     al,0xaa
  4121a1:	add    BYTE PTR [edi+ebp*1],dl
  4121a4:	call   0xb9502a0a
  4121a9:	das    
  4121aa:	or     eax,0x12f7bbf8
  4121af:	mov    BYTE PTR ds:0xf88142c4,dh
  4121b5:	jecxz  0x412234
  4121b7:	jmp    0x41213b
  4121b9:	test   eax,0x3eebace9
  4121be:	sti    
  4121bf:	das    
  4121c0:	add    ecx,DWORD PTR [ecx+0x10]
  4121c3:	sbb    al,BYTE PTR [eax]
  4121c5:	add    BYTE PTR [ebx+0x30322ff7],ch
  4121cb:	arpl   WORD PTR [ecx],ax
  4121cd:	inc    edx
  4121ce:	mov    dl,0x21
  4121d0:	or     al,0x7c
  4121d2:	shr    esp,0xcf
  4121d5:	mov    ch,BYTE PTR [ebp+0x14]
  4121d8:	cld    
  4121d9:	sti    
  4121da:	mov    ecx,0xb041d910
  4121df:	jmp    0x8ab2:0x46a07fdf
  4121e6:	test   DWORD PTR [edi+0x29],eax
  4121e9:	adc    BYTE PTR [ecx],dh
  4121eb:	adc    al,0xe7
  4121ed:	add    esi,DWORD PTR [ecx]
  4121ef:	adc    al,0xe7
  4121f1:	add    esi,DWORD PTR [ecx]
  4121f3:	adc    al,0xe7
  4121f5:	add    esi,DWORD PTR [ecx]
  4121f7:	adc    al,0xe7
  4121f9:	add    esi,DWORD PTR [ecx]
  4121fb:	adc    al,0xe7
  4121fd:	add    esi,DWORD PTR [ecx]
  4121ff:	adc    al,0xe7
  412201:	add    esi,DWORD PTR [ecx]
  412203:	adc    al,0xe7
  412205:	add    esi,DWORD PTR [ecx]
  412207:	adc    al,0xe7
  412209:	add    esi,DWORD PTR [ecx]
  41220b:	adc    al,0xe7
  41220d:	add    esi,DWORD PTR [ecx]
  41220f:	adc    al,0xe7
  412211:	add    esi,DWORD PTR [ecx]
  412213:	adc    al,0xe7
  412215:	add    esi,DWORD PTR [ecx]
  412217:	adc    al,0xe7
  412219:	add    esi,DWORD PTR [ecx]
  41221b:	adc    al,0xe7
  41221d:	add    esi,DWORD PTR [ecx]
  41221f:	adc    al,0xe7
  412221:	add    esi,DWORD PTR [ecx]
  412223:	adc    al,0xe7
  412225:	add    esi,DWORD PTR [ecx]
  412227:	adc    al,0xe7
  412229:	add    eax,DWORD PTR [eax]
  41222b:	add    BYTE PTR [ecx],dh
  41222d:	adc    al,0xe7
  41222f:	add    esi,DWORD PTR [ecx]
  412231:	adc    al,0xe7
  412233:	add    esi,DWORD PTR [ecx]
  412235:	adc    al,0xe7
  412237:	add    esi,DWORD PTR [ecx]
  412239:	adc    al,0xe7
  41223b:	add    esi,DWORD PTR [ecx]
  41223d:	adc    al,0xe7
  41223f:	add    esi,DWORD PTR [ecx]
  412241:	adc    al,0xe7
  412243:	add    esi,DWORD PTR [ecx]
  412245:	adc    al,0xe7
  412247:	add    esi,DWORD PTR [ecx]
  412249:	adc    al,0xe7
  41224b:	add    esi,DWORD PTR [ecx]
  41224d:	adc    al,0xe7
  41224f:	add    esi,DWORD PTR [ecx]
  412251:	adc    al,0x0
  412253:	jmp    0xe941368a
  412258:	xor    dl,BYTE PTR [eax+eax*1]
  41225b:	jmp    0xe9413692
  412260:	xor    dl,BYTE PTR [eax+eax*1]
  412263:	in     al,0x28
  412265:	sbb    DWORD PTR [edx],ecx
  412267:	mov    BYTE PTR [edx],al
  412269:	pop    eax
  41226a:	mov    edx,DWORD PTR [bp+si+0x5e]
  41226e:	das    
  41226f:	iret   
  412270:	inc    edx
  412271:	xor    eax,0x344fc920
  412276:	and    BYTE PTR [ebp+0xa],dh
  412279:	jno    0x41229b
  41227b:	pop    edx
  41227c:	fadd   DWORD PTR [esp+ebp*2+0x4d]
  412280:	shl    BYTE PTR [ecx+0x20],1
  412283:	pop    ebp
  412284:	int    0x70
  412286:	and    BYTE PTR [ebx-0x30],cl
  412289:	pop    edi
  41228a:	je     0x4122d8
  41228c:	(bad)  
  41228d:	xor    edi,DWORD PTR [edx]
  41228f:	adc    BYTE PTR [eax],al
  412291:	add    BYTE PTR [eax],bh
  412293:	sbb    al,BYTE PTR [ecx+0x46]
  412296:	lds    ebx,FWORD PTR [edx+esi*2+0x40]
  41229a:	sar    BYTE PTR [ebx+0x74],cl
  41229d:	leave  
  41229e:	pop    edx
  41229f:	jne    0x4122c8
  4122a1:	leave  
  4122a2:	pop    ebp
  4122a3:	sub    esi,DWORD PTR [edi]
  4122a5:	ror    DWORD PTR [ecx+0x26],1
  4122a8:	xor    cl,bl
  4122aa:	push   ebp
  4122ab:	xor    al,0x62
  4122ad:	add    BYTE PTR [ebp+0x4e],dl
  4122b0:	ins    DWORD PTR es:[edi],dx
  4122b1:	add    al,0x7f
  4122b3:	jns    0x412318
  4122b5:	pop    es
  4122b6:	push   ebp
  4122b7:	pop    ebx
  4122b8:	(bad)  
  4122b9:	cli    
  4122ba:	xchg   ecx,eax
  4122bb:	jb     0x4122e9
  4122bd:	or     DWORD PTR [eax+esi*2+0x6c],esi
  4122c1:	or     DWORD PTR [edi+0x7b],edi
  4122c4:	ror    DWORD PTR gs:[esi+0x65],0x20
  4122c9:	mov    ebx,0x636551
  4122ce:	mov    ah,BYTE PTR [ebp+0x61]
  4122d1:	fs ss or eax,0x4cd20d0a
  4122d8:	imul   esi,DWORD PTR [edx-0x13],0x37
  4122dc:	outs   dx,BYTE PTR gs:[esi]
  4122de:	mov    esi,0xb96d726e
  4122e3:	jae    0x41234a
  4122e5:	outs   dx,DWORD PTR ds:[esi]
  4122e6:	mov    dh,0x21
  4122e8:	and    BYTE PTR [eax-0x44],ch
  4122eb:	jae    0x41235d
  4122ed:	cmp    ah,BYTE PTR [edi+0x2e]
  4122f0:	jae    0x412369
  4122f2:	jmp    FWORD PTR [eiz*2-0x4ffff9e]
  4122f9:	jae    0x412369
  4122fb:	jae    0x4122f4
  4122fd:	je     0x412373
  4122ff:	ja     0x4122fa
  412301:	imul   esp,DWORD PTR [ecx+0x2e],0x2f696efb
  412308:	push   ebp
  412309:	adc    DWORD PTR [ecx],ecx
  41230b:	or     cl,BYTE PTR [eax+0x17]
  41230e:	add    BYTE PTR [eax],al
  412310:	pop    eax
  412311:	pop    ss
  412312:	add    BYTE PTR [eax],al
  412314:	pop    eax
  412315:	pop    ss
  412316:	add    BYTE PTR [eax],al
  412318:	dec    eax
  412319:	pop    ss
  41231a:	add    BYTE PTR [eax],al
  41231c:	dec    eax
  41231d:	pop    ss
  41231e:	add    BYTE PTR [eax],al
  412320:	sbb    BYTE PTR [edi],dl
  412322:	add    BYTE PTR [eax],al
  412324:	sbb    BYTE PTR [edi],dl
  412326:	add    BYTE PTR [eax],al
  412328:	or     BYTE PTR [edi],dl
  41232a:	add    BYTE PTR [eax],al
  41232c:	or     BYTE PTR [edi],dl
  41232e:	add    BYTE PTR [eax],al
  412330:	sbb    BYTE PTR [edi],dl
  412332:	add    BYTE PTR [eax],al
  412334:	sbb    BYTE PTR [edi],dl
  412336:	add    BYTE PTR [eax],al
  412338:	or     BYTE PTR [edi],dl
  41233a:	add    BYTE PTR [eax],al
  41233c:	or     BYTE PTR [edi],dl
  41233e:	add    BYTE PTR [eax],al
  412340:	fcom   DWORD PTR [esi]
  412342:	add    BYTE PTR [eax],al
  412344:	fcom   DWORD PTR [esi]
  412346:	add    BYTE PTR [eax],al
  412348:	xor    DWORD PTR [eax+0x2c4a4eb2],ecx
  41234e:	and    BYTE PTR [ebx],ch
  412350:	xor    eax,0xd554cf23
  412355:	jmp    DWORD PTR [edx-0x7f25f39e]
  41235b:	or     DWORD PTR [eax],eax
  41235d:	add    BYTE PTR [esi-0x20],bl
  412360:	or     ecx,DWORD PTR [eax]
  412362:	inc    eax
  412363:	mov    cl,0xa
  412365:	push   0x517ba48d
  41236a:	scas   eax,DWORD PTR es:[edi]
  41236b:	in     al,dx
  41236c:	add    DWORD PTR [eax],eax
  41236e:	xor    ebp,ebp
  412370:	add    DWORD PTR [eax],eax
  412372:	xor    ebp,ebp
  412374:	add    DWORD PTR [eax],eax
  412376:	xor    ebp,ebp
  412378:	add    DWORD PTR [eax],eax
  41237a:	xor    ebp,ebp
  41237c:	add    DWORD PTR [eax],eax
  41237e:	xor    ebp,ebp
  412380:	add    DWORD PTR [eax],eax
  412382:	xor    ebp,ebp
  412384:	add    DWORD PTR [eax],eax
  412386:	xor    ebp,ebp
  412388:	add    DWORD PTR [eax],eax
  41238a:	xor    ebp,ebp
  41238c:	add    DWORD PTR [eax],eax
  41238e:	xor    ebp,ebp
  412390:	add    DWORD PTR [eax],eax
  412392:	xor    ebp,ebp
  412394:	add    DWORD PTR [eax],eax
  412396:	xor    ebp,ebp
  412398:	add    DWORD PTR [eax],eax
  41239a:	xor    ebp,ebp
  41239c:	add    DWORD PTR [eax],eax
  41239e:	xor    ebp,ebp
  4123a0:	add    DWORD PTR [eax],eax
  4123a2:	xor    ebx,ebp
  4123a4:	add    DWORD PTR [eax],eax
  4123a6:	xor    ebx,ebp
  4123a8:	add    DWORD PTR [eax],eax
  4123aa:	xor    ebx,ebp
  4123ac:	add    DWORD PTR [eax],eax
  4123ae:	xor    ebx,ebp
  4123b0:	add    DWORD PTR [eax],eax
  4123b2:	xor    ebx,ebp
  4123b4:	add    DWORD PTR [eax],eax
  4123b6:	xor    ebx,ebp
  4123b8:	add    DWORD PTR [eax],eax
  4123ba:	xor    ebx,ebp
  4123bc:	add    DWORD PTR [eax],eax
  4123be:	xor    ebx,ebp
  4123c0:	add    DWORD PTR [eax],eax
  4123c2:	add    BYTE PTR [eax],al
  4123c4:	xor    DWORD PTR [edi+eiz*8],edx
  4123c7:	add    esi,DWORD PTR [ecx]
  4123c9:	adc    al,0xe7
  4123cb:	add    esi,DWORD PTR [ecx]
  4123cd:	adc    al,0xe7
  4123cf:	add    esi,DWORD PTR [ecx]
  4123d1:	adc    al,0xe7
  4123d3:	add    esi,DWORD PTR [ecx]
  4123d5:	adc    al,0xe7
  4123d7:	add    esi,DWORD PTR [ecx]
  4123d9:	adc    al,0xe7
  4123db:	add    esi,DWORD PTR [ecx]
  4123dd:	adc    al,0xe7
  4123df:	add    esi,DWORD PTR [ecx]
  4123e1:	adc    al,0xe7
  4123e3:	add    esi,DWORD PTR [ecx]
  4123e5:	adc    al,0xe7
  4123e7:	add    esi,DWORD PTR [ecx]
  4123e9:	adc    al,0xe7
  4123eb:	add    esi,DWORD PTR [ecx]
  4123ed:	adc    al,0xe7
  4123ef:	add    esi,DWORD PTR [ecx]
  4123f1:	adc    al,0xe7
  4123f3:	add    esi,DWORD PTR [ecx]
  4123f5:	adc    al,0xe7
  4123f7:	add    esi,DWORD PTR [ecx]
  4123f9:	adc    al,0xe7
  4123fb:	add    esi,DWORD PTR [ecx]
  4123fd:	adc    al,0xe7
  4123ff:	add    esi,DWORD PTR [ecx]
  412401:	adc    al,0xe7
  412403:	add    esi,DWORD PTR [ecx]
  412405:	adc    al,0xe7
  412407:	add    esi,DWORD PTR [ecx]
  412409:	adc    al,0xe7
  41240b:	add    esi,DWORD PTR [ecx]
  41240d:	adc    al,0xe7
  41240f:	add    esi,DWORD PTR [ecx]
  412411:	adc    al,0xe7
  412413:	add    esi,DWORD PTR [ecx]
  412415:	adc    al,0xe7
  412417:	add    esi,DWORD PTR [ecx]
  412419:	adc    al,0xe7
  41241b:	add    esi,DWORD PTR [ecx]
  41241d:	adc    al,0xe7
  41241f:	add    esi,DWORD PTR [ecx]
  412421:	adc    al,0xe7
  412423:	add    esi,DWORD PTR [ecx]
  412425:	adc    al,0xe7
  412427:	add    eax,DWORD PTR [eax]
  412429:	add    BYTE PTR [ecx],dh
  41242b:	adc    al,0xe7
  41242d:	add    esi,DWORD PTR [ecx]
  41242f:	adc    al,0xe7
  412431:	add    esi,DWORD PTR [ecx]
  412433:	adc    al,0xe7
  412435:	add    esi,DWORD PTR [ecx]
  412437:	adc    al,0xe7
  412439:	add    esi,DWORD PTR [ecx]
  41243b:	adc    al,0xe7
  41243d:	add    esi,DWORD PTR [ecx]
  41243f:	adc    al,0x0
  412441:	jmp    0xe9413878
  412446:	xor    dl,BYTE PTR [eax+eax*1]
  412449:	jmp    0xe9413880
  41244e:	xor    dl,BYTE PTR [eax+eax*1]
  412451:	jmp    0xe9413888
  412456:	xor    dl,BYTE PTR [eax+eax*1]
  412459:	jmp    0xe9413890
  41245e:	xor    dl,BYTE PTR [eax+eax*1]
  412461:	jmp    0xe9413898
  412466:	xor    dl,BYTE PTR [eax+eax*1]
  412469:	jmp    0xe94138a0
  41246e:	xor    dl,BYTE PTR [eax+eax*1]
  412471:	fcomp  DWORD PTR [ebx+eiz*1+0x34]
  412475:	aam    0x40
  412477:	adc    al,0x70
  412479:	mov    ch,bh
  41247b:	bound  esi,QWORD PTR [ebp-0x72]
  41247e:	add    al,0x78
  412480:	add    BYTE PTR [ecx+0xa],bh
  412483:	bound  ecx,QWORD PTR fs:[ebx+0x4c757132]
  41248a:	jecxz  0x4124f3
  41248c:	ja     0x412477
  41248e:	add    BYTE PTR [eax],al
  412490:	and    eax,0x201d3126
  412495:	adc    al,0x6a
  412497:	inc    esp
  412498:	ret    0x7164
  41249b:	jmp    0xf5724a9d
  4124a0:	add    DWORD PTR [edx],ebp
  4124a2:	xor    eax,0x323132f1
  4124a7:	cli    
  4124a8:	pop    esi
  4124a9:	adc    al,0x5f
  4124ab:	or     edx,DWORD PTR [edx+0x32da322f]
  4124b1:	jo     0x412516
  4124b3:	sbb    eax,0xff677388
  4124b8:	xor    ch,BYTE PTR [eax+0x63]
  4124bb:	add    BYTE PTR [ebx],cl
  4124bd:	jo     0x4124bf
  4124bf:	ins    BYTE PTR es:[edi],dx
  4124c0:	das    
  4124c1:	outs   dx,BYTE PTR ds:[esi]
  4124c2:	popa   
  4124c3:	add    BYTE PTR [ecx-0x17ffd0db],bh
  4124c9:	js     0x41253a
  4124cb:	jae    0x4124d4
  4124cd:	ja     0x412541
  4124cf:	cmp    DWORD PTR fs:[eax],ebx
  4124d2:	push   0x6b77ec65
  4124d7:	add    BYTE PTR [ebp-0xa94918a],cl
  4124dd:	pusha  
  4124de:	add    BYTE PTR [edx+edi*2+0x78],ah
  4124e2:	arpl   WORD PTR [edi-0x12],bp
  4124e5:	adc    esi,DWORD PTR [edx+esi*2-0x1b]
  4124e9:	bound  esi,QWORD PTR [esi+ebp*2-0x41]
  4124ed:	sub    BYTE PTR [eax],al
  4124ef:	xor    DWORD PTR [ecx+0x28],edi
  4124f2:	sub    eax,0x79000031
  4124f7:	adc    esp,DWORD PTR [ebp+0x6c]
  4124fa:	(bad)  
  4124fc:	popa   
  4124fd:	jns    0x41249e
  4124ff:	add    BYTE PTR fs:[ecx],dh
  412502:	mov    edx,0xb6353422
  412507:	add    BYTE PTR cs:[ebx-0x50],dh
  41250b:	js     0x412571
  41250d:	outs   dx,DWORD PTR ds:[esi]
  41250e:	pop    es
  41250f:	sbb    BYTE PTR ds:0x31243b32,ch
  412515:	ss aaa 
  412517:	and    BYTE PTR ds:0x726ffb00,dh
  41251d:	imul   ecx,DWORD PTR [ebx],0x5730064
  412523:	jbe    0x412594
  412525:	push   0x6175f1
  41252a:	ins    DWORD PTR es:[edi],dx
  41252b:	jns    0x41259c
  41252d:	je     0x412564
  41252f:	bound  eax,QWORD PTR [eax]
  412531:	arpl   WORD PTR [edi],bp
  412533:	ins    DWORD PTR es:[edi],dx
  412534:	jo     0x4125ab
  412536:	xor    DWORD PTR [ecx],eax
  412538:	pop    edi
  412539:	jb     0x41256c
  41253b:	std    
  41253c:	jno    0x4125a5
  41253e:	xchg   edi,eax
  41253f:	or     bl,BYTE PTR [edi+0x71]
  412542:	sub    ch,0x6d
  412545:	mov    cs,WORD PTR ds:0x725f
  41254a:	xor    DWORD PTR [edi],edx
  41254c:	gs ins DWORD PTR es:[edi],dx
  41254e:	pop    ebp
  41254f:	retf   
  412550:	fs ins BYTE PTR es:[edi],dx
  412552:	dec    ebp
  412553:	in     eax,dx
  412554:	outs   dx,BYTE PTR fs:[esi]
  412556:	dec    esi
  412557:	shl    BYTE PTR [ebp+0x0],1
  41255a:	add    BYTE PTR [eax],al
  41255c:	pop    ebx
  41255d:	fdiv   DWORD PTR [edx+0x73]
  412560:	inc    edx
  412561:	fadd   QWORD PTR [ecx]
  412563:	das    
  412564:	add    ebx,edx
  412566:	xor    al,0x32
  412568:	add    ch,ch
  41256a:	outs   dx,BYTE PTR ds:[esi]
  41256b:	push   0x7660a910
  412570:	or     al,0x7b
  412572:	add    DWORD PTR [esi+0x23],esp
  412575:	cwde   
  412576:	pusha  
  412577:	fs push es
  412579:	cwde   
  41257a:	add    DWORD PTR [ecx+0x18],ebp
  41257d:	popa   
  41257e:	arpl   WORD PTR gs:[ebx],ax
  412581:	in     eax,dx
  412582:	fs jno 0x41259a
  412585:	xchg   edi,eax
  412586:	add    DWORD PTR [ecx+0x6],esi
  412589:	mov    ah,BYTE PTR [edx+0x63]
  41258c:	jecxz  0x41257a
  41258e:	jb     0x412603
  412590:	loope  0x4125e1
  412592:	jb     0x4125ff
  412594:	ror    BYTE PTR [esi+0x4],1
  412597:	imul   ecx,eax,0x49
  41259a:	ins    BYTE PTR es:[edi],dx
  41259b:	pop    edi
  41259c:	aam    0x20
  41259e:	add    al,0x61
  4125a0:	(bad)  [edi+0x5d]
  4125a3:	jno    0x412579
  4125a5:	in     al,dx
  4125a6:	push   0x6e
  4125a8:	mov    ebp,0x946e724f
  4125ad:	daa    
  4125ae:	add    al,0x6a
  4125b0:	xchg   esi,eax
  4125b1:	adc    al,0x1a
  4125b3:	ins    BYTE PTR es:[edi],dx
  4125b4:	mov    ds:0xa25de773,al
  4125b9:	jno    0x4125bd
  4125bb:	jnp    0x412559
  4125bd:	addr16 out 0x61,eax
  4125c0:	add    BYTE PTR [eax],al
  4125c2:	xchg   ebp,eax
  4125c3:	ja     0x4125bf
  4125c5:	jo     0x412559
  4125c7:	js     0x4125b0
  4125c9:	popa   
  4125ca:	push   esi
  4125cb:	popa   
  4125cc:	or     al,0x62
  4125ce:	mov    ?,WORD PTR [eax-0x5]
  4125d1:	add    esp,DWORD PTR [eax+0x68]
  4125d4:	enter  0x6471,0x73
  4125d8:	fnstenv [eax+0x31]
  4125db:	and    al,0x17
  4125dd:	xor    al,0x1
  4125df:	and    al,0x17
  4125e1:	add    al,0x41
  4125e3:	addr16 mov ecx,0xe7774d73
  4125e9:	imul   eax,DWORD PTR [edx+eiz*2-0x35],0xc5141f62
  4125f1:	bound  ecx,QWORD PTR [esi]
  4125f3:	push   0x6720038f
  4125f8:	mov    WORD PTR [esi+0x12],fs
  4125fb:	(bad)  
  4125fc:	out    0x62,eax
  4125fe:	add    BYTE PTR [ebx+edi*2+0x5e],ch
  412602:	(bad)  
  412603:	adc    ecx,DWORD PTR [ecx-0x7b97ff92]
  412609:	jno    0x41263c
  41260b:	ins    BYTE PTR es:[edi],dx
  41260c:	mov    WORD PTR [edx-0x19],fs
  41260f:	jbe    0x41268e
  412611:	add    esp,ecx
  412613:	jbe    0x41266c
  412615:	je     0x4125e9
  412617:	popa   
  412618:	out    0x2c,eax
  41261a:	sbb    al,0x25
  41261c:	push   ds
  41261d:	sub    eax,0x6be72504
  412622:	ret    0x3b6d
  412625:	pop    edi
  412626:	add    BYTE PTR [eax],al
  412628:	ret    
  412629:	adc    ecx,DWORD PTR [ebx+0x65]
  41262c:	mov    edi,0xaa450076
  412631:	adc    al,0x5f
  412633:	aas    
  412634:	xchg   ecx,eax
  412635:	bound  esp,QWORD PTR [ebx+0x1e]
  412638:	xor    eax,0x8e0e6868
  41263d:	cmp    eax,0x6e93e971
  412642:	gs add al,0x99
  412645:	arpl   WORD PTR [eax],ax
  412647:	or     cl,BYTE PTR [ebp-0x75f28dc3]
  41264d:	jno    0x41264f
  41264f:	or     eax,0x4676e52
  412654:	pop    ecx
  412655:	adc    al,0x2f
  412657:	sbb    BYTE PTR [edx],ah
  412659:	sub    eax,0x6e77d300
  41265e:	outs   dx,BYTE PTR ds:[esi]
  41265f:	shr    BYTE PTR [ecx+esi*2+0x72],0xe9
  412664:	inc    ecx
  412665:	jne    0x4126d5
  412667:	into   
  412668:	push   esi
  412669:	jno    0x41266b
  41266b:	rcl    DWORD PTR [ebx+0x6e],1
  41266e:	outs   dx,BYTE PTR ds:[esi]
  41266f:	enter  0x141a,0x6f
  412673:	enter  0x6728,0x71
  412677:	mov    eax,ds:0x995f6c32
  41267c:	and    ah,BYTE PTR [ebp+0x0]
  41267f:	test   BYTE PTR [ebx],dl
  412681:	push   0x140a8072
  412686:	jo     0x412610
  412688:	add    DWORD PTR [ebx+0x0],esp
  41268b:	mov    BYTE PTR [eax],al
  41268d:	add    BYTE PTR [ebx],dl
  41268f:	cmp    eax,0x13d3885f
  412694:	ss mov ah,0x16
  412697:	and    esi,DWORD PTR [edx]
  412699:	sbb    BYTE PTR ds:0xd3486b3d,dh
  41269f:	ja     0x412700
  4126a1:	jmp    0x41b59576
  4126a6:	in     al,0x6d
  4126a8:	add    BYTE PTR gs:[eax+0x69],cl
  4126ac:	outs   dx,BYTE PTR gs:[esi]
  4126ae:	out    dx,eax
  4126af:	push   0x72
  4126b1:	add    BYTE PTR [ebp+0x77],dh
  4126b4:	je     0x41271e
  4126b6:	ins    DWORD PTR es:[edi],dx
  4126b7:	bound  eax,QWORD PTR [eax]
  4126b9:	jae    0x412701
  4126bb:	ja     0x412728
  4126bd:	jo     0x412710
  4126bf:	adc    BYTE PTR [edx+0x65],ch
  4126c2:	sub    esp,DWORD PTR [ebx+0x65]
  4126c5:	arpl   WORD PTR [ecx],di
  4126c7:	adc    BYTE PTR [ebx+0x65],dh
  4126ca:	and    al,0x73
  4126cc:	imul   ebp,DWORD PTR [ebp+0x2d],0x10
  4126d0:	jo     0x412741
  4126d2:	xor    ebp,DWORD PTR [ebp+0x69]
  4126d5:	outs   dx,DWORD PTR ds:[esi]
  4126d6:	out    0x17,al
  4126d8:	gs ins BYTE PTR es:[edi],dx
  4126da:	pop    es
  4126db:	pop    esi
  4126dc:	popa   
  4126dd:	jns    0x4126c6
  4126df:	pop    esp
  4126e0:	sub    eax,0x2d212900
  4126e5:	xor    DWORD PTR [ecx],ebp
  4126e7:	adc    BYTE PTR [ecx+0x75],ch
  4126ea:	jnp    0x41274f
  4126ec:	pop    ebp
  4126ed:	outs   dx,BYTE PTR ds:[esi]
  4126ee:	out    dx,eax
  4126ef:	pop    ss
  4126f0:	push   0x74000065
  4126f5:	imul   esp,DWORD PTR [di-0x68],0xbc737139
  4126fd:	cmp    BYTE PTR [esi+0x0],ch
  412700:	ret    0x6f70
  412703:	ins    DWORD PTR es:[edi],dx
  412704:	mov    cl,0x75
  412706:	popa   
  412707:	add    BYTE PTR [edi],al
  412709:	popa   
  41270a:	pop    ebp
  41270b:	outs   dx,BYTE PTR ds:[esi]
  41270c:	scas   eax,DWORD PTR es:[edi]
  41270d:	ins    BYTE PTR es:[edi],dx
  41270e:	add    BYTE PTR [ebp+ebp*4+0x62],dh
  412712:	je     0x41277d
  412714:	mov    dh,0x6e
  412716:	add    BYTE PTR [ecx-0x18],ah
  412719:	data16 ins BYTE PTR es:[edi],dx
  41271b:	gs dec eax
  41271d:	je     0x412784
  41271f:	arpl   WORD PTR [eax],ax
  412721:	ins    DWORD PTR es:[edi],dx
  412722:	ins    BYTE PTR es:[edi],dx
  412723:	ins    BYTE PTR es:[edi],dx
  412724:	xor    DWORD PTR [eax+0x4],ecx
  412727:	jo     0x4126f5
  412729:	dec    ebx
  41272a:	arpl   WORD PTR gs:[ecx],si
  41272d:	push   ds
  41272e:	addr16 popa 
  412730:	ret    
  412731:	dec    edi
  412732:	js     0x412734
  412734:	pusha  
  412735:	in     eax,dx
  412736:	push   0x72
  412738:	nop
  412739:	dec    esi
  41273a:	add    BYTE PTR [bp+0x6004],ah
  41273f:	ins    BYTE PTR es:[edi],dx
  412740:	mov    BYTE PTR [edi+ebx*2],cl
  412743:	add    BYTE PTR [eax-0x73899eef],bl
  412749:	add    al,0x61
  41274b:	jae    0x412790
  41274d:	in     eax,dx
  41274e:	pop    edi
  41274f:	addr16 xchg edx,eax
  412751:	or     ah,BYTE PTR [eax+0x63]
  412754:	xor    DWORD PTR [ebx+0x3637],ebx
  41275a:	pop    ds
  41275b:	mov    ds:0xb84c0037,eax
  412760:	addr16 dec ax
  412763:	retf   
  412764:	add    DWORD PTR [ebp+0x50],esp
  412767:	mov    ecx,0xc4507568
  41276c:	add    DWORD PTR [esi+0x44],esp
  41276f:	into   
  412770:	pop    esi
  412771:	ja     0x4127b9
  412773:	mov    al,ds:0x9e100034
  412778:	jbe    0x4127e2
  41277a:	push   ss
  41277b:	cdq    
  41277c:	push   0x598c0900
  412781:	pop    edi
  412782:	or     DWORD PTR [ecx+eax*1+0x71921e70],ecx
  412789:	add    BYTE PTR [ebx],dl
  41278b:	pop    ecx
  41278c:	push   0x5f840271
  412791:	xor    DWORD PTR gs:[edi-0x7126a0a3],ecx
  412798:	pop    ebp
  412799:	pop    edi
  41279a:	fldlg2 
  41279c:	pusha  
  41279d:	ja     0x412781
  41279f:	adc    edx,DWORD PTR [edi+0x63]
  4127a2:	shl    BYTE PTR [eax+0x18],1
  4127a5:	add    al,0xda
  4127a7:	je     0x412804
  4127a9:	js     0x412784
  4127ab:	jo     0x412803
  4127ad:	add    al,0xd0
  4127af:	je     0x412806
  4127b1:	arpl   bp,cx
  4127b3:	je     0x41279c
  4127b5:	je     0x41274d
  4127b7:	push   0x14a3673d
  4127bc:	cmp    DWORD PTR [ecx+0x0],esp
  4127bf:	add    BYTE PTR [ebx+0x3178196f],dl
  4127c5:	jb     0x4127d5
  4127c7:	jbe    0x41275b
  4127c9:	bound  ecx,QWORD PTR [esi+esi*2]
  4127cc:	xor    DWORD PTR [ebx+0x1a],esi
  4127cf:	push   0x40f7197
  4127d4:	xor    DWORD PTR [ebx+0xa],0x5c
  4127d8:	push   edx
  4127d9:	push   0x6b8675e7
  4127de:	std    
  4127df:	gs dec esp
  4127e1:	popa   
  4127e2:	out    0x68,eax
  4127e4:	bound  ebp,QWORD PTR [ebx-0x2d]
  4127e7:	bound  eax,QWORD PTR [ebx+0x14]
  4127ea:	xlat   BYTE PTR ds:[ebx]
  4127eb:	data16 pushw 0xffd4
  4127ef:	ja     0x412822
  4127f1:	jbe    0x4127bb
  4127f3:	ja     0x41283f
  4127f5:	jae    0x4127c4
  4127f7:	add    edx,DWORD PTR [eax]
  4127f9:	imul   eax,esi,0xe76f0e5c
  4127ff:	gs (bad) 
  412801:	push   0xffffff93
  412803:	pushw  ds
  412805:	adc    al,0x9a
  412807:	pusha  
  412808:	adc    BYTE PTR [ebp-0x74],dh
  41280b:	jne    0x412863
  41280d:	adc    al,0x7c
  41280f:	pop    edx
  412810:	adc    BYTE PTR [ebp-0x74],ch
  412813:	push   0x31
  412815:	jbe    0x4127a7
  412817:	ja     0x4127eb
  412819:	data16 add BYTE PTR [edx+esi*1-0x1829c94],cl
  412821:	data16 das 
  412823:	jmp    0x6d102828
  412828:	addr16 dec edi
  41282a:	(bad)  
  41282b:	ins    BYTE PTR es:[edi],dx
  41282c:	add    BYTE PTR [ebp-0x2e],cl
  41282f:	push   0x6d
  412831:	push   ebp
  412832:	rcl    BYTE PTR [ebx],cl
  412834:	jno    0x41287e
  412836:	(bad)  
  412837:	cmp    BYTE PTR [esi+0x35],ch
  41283a:	lea    edi,[ecx]
  41283c:	add    BYTE PTR [edx-0x70],cl
  41283f:	ins    DWORD PTR es:[edi],dx
  412840:	jo     0x41288a
  412842:	mov    ds:0x92106414,al
  412847:	ins    DWORD PTR es:[edi],dx
  412848:	ins    DWORD PTR es:[edi],dx
  412849:	setns  BYTE PTR [esp+esi*2]
  41284d:	or     BYTE PTR [edx+0x351b6d68],bl
  412853:	jb     0x4128c2
  412855:	sti    
  412856:	jg     0x4128c5
  412858:	add    BYTE PTR [ebx],dl
  41285a:	push   eax
  41285b:	ins    BYTE PTR es:[edi],dx
  41285c:	outs   dx,BYTE PTR ds:[esi]
  41285d:	mov    edx,0xfb002223
  412862:	jnp    0x4128d7
  412864:	push   0x705cc8
  412869:	retf   
  41286a:	outs   dx,BYTE PTR ds:[esi]
  41286b:	jno    0x4128db
  41286d:	ret    0x1c03
  412870:	xor    ch,cl
  412872:	inc    edx
  412873:	jne    0x4128d4
  412875:	retf   0x755a
  412878:	jno    0x412863
  41287a:	adc    eax,0x32c56d67
  41287f:	jb     0x4128ed
  412881:	mov    esi,0xe9727519
  412886:	sbb    eax,0x8e6d73
  41288b:	add    BYTE PTR [esi],al
  41288d:	jne    0x412901
  41288f:	jmp    0x88af61a0
  412894:	adc    BYTE PTR [ecx],bh
  412896:	add    BYTE PTR [eax],al
  412898:	mov    ds:0xeb656975,al
  41289d:	adc    al,0x5d
  41289f:	jae    0x412855
  4128a1:	push   0x5d
  4128a3:	jae    0x412859
  4128a5:	push   0x0
  4128a7:	jbe    0x4128aa
  4128a9:	jne    0x41291f
  4128ab:	outs   dx,DWORD PTR ds:[esi]
  4128ac:	jmp    0x6439:0xef6c0066
  4128b3:	outs   dx,DWORD PTR ds:[esi]
  4128b4:	dec    BYTE PTR [edi]
  4128b6:	sub    eax,0x735f3b32
  4128bb:	sbb    BYTE PTR gs:[ecx],ah
  4128be:	xor    dh,BYTE PTR [ebx]
  4128c0:	sub    esp,DWORD PTR [esi]
  4128c2:	sub    eax,0x5d5c5b00
  4128c7:	jb     0x4128fd
  4128c9:	bound  esp,QWORD PTR [ecx+0x6b]
  4128cc:	sbb    BYTE PTR [edi+0x61],ch
  4128cf:	outs   dx,DWORD PTR ds:[esi]
  4128d0:	sub    ch,BYTE PTR [edi+0x61]
  4128d3:	add    BYTE PTR [edi],ah
  4128d5:	cmp    DWORD PTR [esi+0x6e],ebp
  4128d8:	and    eax,0x396d0062
  4128dd:	outs   dx,DWORD PTR ds:[esi]
  4128de:	arpl   WORD PTR [ecx+0x35],bp
  4128e1:	adc    BYTE PTR [edx+esi*2+0x31],dh
  4128e5:	ss gs je 0x4128ba
  4128e9:	adc    ebp,DWORD PTR [ebx+0x6e]
  4128ec:	cld    
  4128ed:	cmp    BYTE PTR [esi+0x65],ch
  4128f0:	add    BYTE PTR [eax],al
  4128f2:	fsub   DWORD PTR [eax]
  4128f4:	xor    dh,BYTE PTR [ebx]
  4128f6:	jmp    0xeb418870
  4128fb:	cmp    esp,DWORD PTR [ebp+0x63]
  4128fe:	sub    DWORD PTR [esi+ebp*2+0x0],0x72
  412903:	pop    esp
  412904:	outs   dx,BYTE PTR ds:[esi]
  412905:	imul   ebx,edi,0xc0630065
  41290b:	gs gs jae 0x4128a7
  41290f:	arpl   WORD PTR [ebp+0x73],bx
  412912:	xor    DWORD PTR [edx+0x76],edi
  412915:	xor    BYTE PTR [ebx],al
  412917:	xchg   ecx,eax
  412918:	add    DWORD PTR [edi-0x4],ebx
  41291b:	pop    ecx
  41291c:	jne    0x412985
  41291e:	fucomip st,st(4)
  412920:	jb     0x412992
  412922:	rcr    BYTE PTR [edx+0x5a],1
  412925:	ja     0x412958
  412927:	mov    WORD PTR [ebp+0x6b],fs
  41292a:	enter  0x43e,0x6b
  41292e:	aam    0x3a
  412930:	pusha  
  412931:	xlat   BYTE PTR ds:[bx]
  412933:	in     al,dx
  412934:	ins    WORD PTR es:[edi],dx
  412936:	into   
  412937:	dec    ebp
  412938:	pusha  
  412939:	arpl   WORD PTR [ecx],si
  41293b:	inc    edi
  41293c:	jb     0x4129a5
  41293e:	xchg   esp,eax
  41293f:	inc    edi
  412940:	push   0x5d553171
  412945:	jo     0x4128db
  412947:	in     eax,dx
  412948:	jb     0x4129b2
  41294a:	nop
  41294b:	add    DWORD PTR [ebp+0x6b],ebx
  41294e:	xor    DWORD PTR [edi],eax
  412950:	pop    ebx
  412951:	outs   dx,BYTE PTR ds:[esi]
  412952:	jge    0x41295c
  412954:	pop    esi
  412955:	add    BYTE PTR fs:[eax],al
  412958:	mov    gs,ebp
  41295a:	pop    ebp
  41295b:	ins    DWORD PTR es:[edi],dx
  41295c:	xchg   BYTE PTR [edx],al
  41295e:	pop    ebx
  41295f:	outs   dx,BYTE PTR ds:[esi]
  412960:	push   esi
  412961:	in     eax,dx
  412962:	pop    ecx
  412963:	pop    edi
  412964:	arpl   WORD PTR [ecx],dx
  412966:	addr16 ja 0x41299a
  412969:	fisub  DWORD PTR [eax+0x6d]
  41296c:	dec    edx
  41296d:	enter  0x6c,0x6
  412971:	(bad)  
  412972:	xor    al,0x35
  412974:	xor    ebx,edx
  412976:	pop    esi
  412977:	jno    0x4129cd
  412979:	mov    ebp,0x98450059
  41297e:	bound  ebp,QWORD PTR [ecx+0x28]
  412981:	in     eax,dx
  412982:	gs addr16 push cs
  412985:	aam    0x75
  412987:	pop    edi
  412988:	or     eax,0x1d0064ed
  41298d:	adc    al,0x8f
  41298f:	js     0x4129b0
  412991:	jo     0x412917
  412993:	jno    0x4129c6
  412995:	arpl   WORD PTR [edi-0x6c92fca4],dx
  41299b:	add    edx,DWORD PTR [ebx]
  41299d:	jne    0x412934
  41299f:	addr16 (bad) 
  4129a1:	pop    edi
  4129a2:	out    0x68,eax
  4129a4:	xlat   BYTE PTR ds:[ebx]
  4129a5:	pop    edi
  4129a6:	mov    WORD PTR [ecx+0x31],?
  4129a9:	jne    0x412a28
  4129ab:	ja     0x412976
  4129ad:	push   bp
  4129af:	imul   esi,DWORD PTR [ecx],0x73
  4129b2:	dec    esi
  4129b3:	jb     0x412974
  4129b5:	jo     0x412a12
  4129b7:	js     0x41298b
  4129b9:	adc    edi,DWORD PTR [edi]
  4129bb:	pop    ebp
  4129bc:	add    BYTE PTR [eax],al
  4129be:	shr    BYTE PTR [edx+0x4c],1
  4129c1:	imul   esi,DWORD PTR [ecx],0x64
  4129c4:	dec    esi
  4129c5:	jne    0x412959
  4129c7:	(bad)  
  4129c8:	out    0x61,eax
  4129ca:	xchg   edx,eax
  4129cb:	inc    cx
  4129cd:	arpl   WORD PTR [edx-0x69fbea95],cx
  4129d3:	push   0x5b92760e
  4129d8:	push   es
  4129d9:	ja     0x4129f9
  4129db:	adc    al,0xd8
  4129dd:	jb     0x412a22
  4129df:	pop    ebp
  4129e0:	mov    edx,0x105e3166
  4129e5:	je     0x412a39
  4129e7:	(bad)  
  4129e8:	out    0x64,eax
  4129ea:	push   edx
  4129eb:	data16 add al,0x71
  4129ee:	dec    esi
  4129ef:	popa   
  4129f0:	out    0x58,eax
  4129f2:	pop    edi
  4129f3:	imul   eax,esi,0x5b
  4129f6:	cmp    eax,0x5274d814
  4129fb:	(bad)  
  4129fd:	push   0x6
  4129ff:	adc    al,0xca
  412a01:	jno    0x412a15
  412a03:	jae    0x4129b8
  412a05:	pop    edx
  412a06:	pop    ds
  412a07:	outs   dx,DWORD PTR ds:[esi]
  412a08:	add    cl,ch
  412a0a:	adc    al,0x67
  412a0c:	ins    DWORD PTR es:[edi],dx
  412a0d:	retf   
  412a0e:	adc    esp,DWORD PTR [edx+0x0]
  412a11:	mov    BYTE PTR [esi],dl
  412a13:	ins    DWORD PTR es:[edi],dx
  412a14:	mov    BYTE PTR fs:[ecx],al
  412a17:	adc    al,0x72
  412a19:	xchg   BYTE PTR [esi],al
  412a1b:	ins    DWORD PTR es:[edi],dx
  412a1c:	imul   eax,DWORD PTR [eax-0x77939cce],0x0
  412a23:	add    bl,bl
  412a25:	jo     0x412a99
  412a27:	jmp    0x8db29709
  412a2c:	std    
  412a2d:	push   0x34e07900
  412a32:	addr16 pop edx
  412a34:	(bad)  
  412a35:	adc    edi,DWORD PTR [edx+0x61]
  412a38:	rcr    BYTE PTR [ebp+0x62],1
  412a3b:	inc    edi
  412a3c:	ficom  WORD PTR [ebx]
  412a3e:	jno    0x412a88
  412a40:	(bad)  
  412a41:	pusha  
  412a42:	arpl   WORD PTR [ebp+0x35],dx
  412a45:	imul   esp,DWORD PTR [edi+0x52],0x4864148e
  412a4c:	xchg   ecx,eax
  412a4d:	push   0x6f2d3a5f
  412a52:	jb     0x412a60
  412a54:	xchg   esi,eax
  412a55:	data16 add BYTE PTR ds:0x1d74638e,dl
  412a5c:	xchg   esi,eax
  412a5d:	arpl   WORD PTR [ecx+ebp*8+0x57],si
  412a61:	xor    eax,0x6d630c76
  412a66:	popa   
  412a67:	adc    ch,BYTE PTR ds:0x510c6e67
  412a6d:	addr16 jbe 0x412a74
  412a70:	sub    eax,0x6bdf5f70
  412a75:	jo     0x412a77
  412a77:	int3   
  412a78:	pop    ebx
  412a79:	push   0x1457df6d
  412a7e:	popa   
  412a7f:	sar    DWORD PTR [edi],0x62
  412a82:	popa   
  412a83:	add    BYTE PTR [eax+0x726610],al
  412a89:	add    BYTE PTR [ecx-0x779b9193],al
  412a8f:	outs   dx,DWORD PTR ds:[esi]
  412a90:	imul   esp,DWORD PTR [eax+ecx*4+0x6c],0x61
  412a95:	jae    0x412a43
  412a97:	cmp    DWORD PTR [esi+0x79],ebp
  412a9a:	cwde   
  412a9b:	imul   ebp,DWORD PTR ss:[esi-0x53],0x10
  412aa0:	imul   ebp,DWORD PTR [ecx-0x55],0xc7736b62
  412aa7:	outs   dx,BYTE PTR ds:[esi]
  412aa8:	je     0x412aaa
  412aaa:	stos   BYTE PTR es:[edi],al
  412aab:	and    dh,BYTE PTR [edx]
  412aad:	xor    bl,BYTE PTR [edx-0x229dffde]
  412ab3:	jb     0x412b17
  412ab5:	ins    BYTE PTR es:[edi],dx
  412ab6:	std    
  412ab7:	pop    esp
  412ab8:	add    BYTE PTR [ecx],dh
  412aba:	sub    DWORD PTR [edi],ebx
  412abc:	sub    eax,0x2d1f1931
  412ac1:	add    bl,ch
  412ac3:	cmp    BYTE PTR [edi+0x61],bl
  412ac6:	jnp    0x412b37
  412ac8:	ins    BYTE PTR es:[edi],dx
  412ac9:	popa   
  412aca:	sbb    BYTE PTR [edx+0x6b],dh
  412acd:	jb     0x412b3b
  412acf:	cmp    DWORD PTR [esi+0x32],ebp
  412ad2:	sbb    ebx,DWORD PTR [eax]
  412ad4:	gs ins BYTE PTR es:[edi],dx
  412ad6:	daa    
  412ad7:	inc    esi
  412ad8:	popa   
  412ad9:	addr16 aaa 
  412adb:	xor    al,0x0
  412add:	data16 aaa 
  412adf:	outs   dx,DWORD PTR ds:[esi]
  412ae0:	je     0x412b44
  412ae2:	sub    DWORD PTR [esp+ebp*2+0x31],ebp
  412ae6:	fsubr  DWORD PTR [ebx+0x6b]
  412ae9:	jbe    0x412b2c
  412aeb:	outs   dx,BYTE PTR ds:[esi]
  412aec:	arpl   WORD PTR [eax],ax
  412aee:	add    BYTE PTR [eax],al
  412af0:	cmp    DWORD PTR ss:[eax+ebp*2+0x29],esi
  412af5:	outs   dx,BYTE PTR ds:[esi]
  412af6:	add    BYTE PTR [ebp-0x1b],ah
  412af9:	ins    BYTE PTR es:[edi],dx
  412afa:	pop    ebp
  412afb:	outs   dx,BYTE PTR ds:[esi]
  412afc:	fnsave [esp+ebp*2]
  412aff:	add    BYTE PTR [ecx],dh
  412b01:	out    dx,al
  412b02:	ins    WORD PTR es:[edi],dx
  412b04:	inc    esi
  412b05:	fild   QWORD PTR [eax+eax*1+0x17]
  412b09:	nop
  412b0a:	imul   dx,WORD PTR [esi],0x5fdb
  412b0f:	add    BYTE PTR [edx],ah
  412b11:	fcomp  QWORD PTR [eax+0x6b]
  412b14:	sbb    BYTE PTR [ebp-0x4df6a0a8],bh
  412b1a:	pusha  
  412b1b:	ins    BYTE PTR es:[edi],dx
  412b1c:	adc    eax,0x25f5bbd
  412b21:	call   0x6e59:0x520b0057
  412b28:	xor    DWORD PTR [esp+esi*2+0x608dde32],ecx
  412b2f:	xor    al,0xe3
  412b31:	mov    esp,0x43d35f63
  412b36:	add    DWORD PTR [edx-0x2c],esi
  412b39:	pusha  
  412b3a:	xor    esi,DWORD PTR [edx]
  412b3c:	add    bh,BYTE PTR [ebp+0x5ed06c63]
  412b42:	pop    eax
  412b43:	pop    edi
  412b44:	xor    DWORD PTR [ebp+0x76],ebp
  412b47:	addr16 lahf 
  412b49:	pop    esi
  412b4a:	pop    edi
  412b4b:	add    BYTE PTR [eax-0x5a8da0f6],ah
  412b51:	mov    ebp,0x6866
  412b56:	mov    WORD PTR [ecx],ss
  412b58:	jne    0x412bbd
  412b5a:	nop
  412b5b:	mov    ebp,0xe83c3330
  412b60:	xor    BYTE PTR [eax],al
  412b62:	nop
  412b63:	sbb    esp,DWORD PTR [ecx+0x63]
  412b66:	test   esp,ebp
  412b68:	add    DWORD PTR [eax+0x50],ebp
  412b6b:	iret   
  412b6c:	pop    ebp
  412b6d:	popa   
  412b6e:	push   esi
  412b6f:	iret   
  412b70:	pusha  
  412b71:	add    BYTE PTR [ebp+0x20],dl
  412b74:	ins    BYTE PTR es:[edi],dx
  412b75:	je     0x412bc3
  412b77:	iret   
  412b78:	add    DWORD PTR [ecx+0x50],esi
  412b7b:	adc    al,0xdd
  412b7d:	pusha  
  412b7e:	dec    ebp
  412b7f:	adc    al,0x18
  412b81:	xor    eax,0x371a0603
  412b86:	xor    DWORD PTR [eax+ecx*8],edi
  412b89:	push   edi
  412b8a:	sbb    eax,0x65de743
  412b8f:	inc    edi
  412b90:	mov    bh,0x60
  412b92:	and    edx,DWORD PTR [ebx+ecx*8]
  412b95:	fs pop es
  412b97:	cmp    eax,0x391d57c4
  412b9c:	out    0x5e,eax
  412b9e:	push   cs
  412b9f:	dec    eax
  412ba0:	xchg   ebx,eax
  412ba1:	pusha  
  412ba2:	unpcklps xmm1,XMMWORD PTR [edx-0x7fb8ff9c]
  412ba9:	pusha  
  412baa:	xor    DWORD PTR [edi+0x7b],eax
  412bad:	pusha  
  412bae:	aad    0x3f
  412bb0:	mov    BYTE PTR [ebx],al
  412bb2:	loope  0x412bf9
  412bb4:	mov    BYTE PTR [edx+edx*8+0x45],ch
  412bb8:	out    0x5b,eax
  412bba:	add    BYTE PTR [eax],al
  412bbc:	fadd   QWORD PTR [edi+0x4b]
  412bbf:	pop    ecx
  412bc0:	int3   
  412bc1:	adc    edx,DWORD PTR [esi+0x5b]
  412bc4:	iret   
  412bc5:	aaa    
  412bc6:	inc    esi
  412bc7:	jno    0x412b89
  412bc9:	adc    edi,DWORD PTR [edi+ebp*2]
  412bcc:	mov    al,ds:0x925b4b48
  412bd1:	adc    al,0x46
  412bd3:	arpl   WORD PTR [ebp-0x6cfbc5c9],sp
  412bd9:	cmp    edi,DWORD PTR [ebx]
  412bdb:	pop    eax
  412bdc:	xchg   esp,eax
  412bdd:	xor    ebx,DWORD PTR [ebx]
  412bdf:	pop    edi
  412be0:	adc    BYTE PTR [esi+eax*1],0x5c
  412be4:	xchg   ebx,eax
  412be5:	cmp    BYTE PTR [ebx],bl
  412be7:	pop    edx
  412be8:	xor    DWORD PTR [ecx],edi
  412bea:	add    eax,0x143d5b5c
  412bef:	add    al,0x16
  412bf1:	push   es
  412bf2:	mov    edx,0xa222f
  412bf7:	mov    esi,0xe930090a
  412bfc:	xor    dh,BYTE PTR ds:0x4a3ce274
  412c02:	imul   ecx,esi,0xdc754244
  412c08:	xor    bh,BYTE PTR [esp+esi*2]
  412c0b:	aad    0x22
  412c0d:	push   cs
  412c0e:	sub    eax,0x2e015a16
  412c13:	clc    
  412c14:	add    DWORD PTR fs:[esi],ebp
  412c17:	clc    
  412c18:	popa   
  412c19:	or     al,0x2e
  412c1b:	clc    
  412c1c:	pop    edi
  412c1d:	or     bh,BYTE PTR [edx]
  412c1f:	loope  0x412c21
  412c21:	add    BYTE PTR [edx+0xc],al
  412c24:	xor    dh,cl
  412c26:	add    bh,BYTE PTR [edi]
  412c28:	outs   dx,BYTE PTR ds:[esi]
  412c29:	nop
  412c2a:	sbb    DWORD PTR [edi],esi
  412c2c:	pop    edi
  412c2d:	xchg   ebp,eax
  412c2e:	lar    esi,WORD PTR [eax-0x6f]
  412c32:	loop   0x412c47
  412c34:	push   0x3a43ce75
  412c39:	(bad)  
  412c3a:	cmp    DWORD PTR [ebx+0x73],eax
  412c3d:	mov    ebp,esi
  412c3f:	jo     0x412cb5
  412c41:	dec    eax
  412c42:	mov    ebp,0xd40f6d45
  412c47:	imul   edx,DWORD PTR ds:[ebx],0x5
  412c4b:	add    al,0x30
  412c4d:	adc    DWORD PTR [eax+0x44],ecx
  412c50:	ins    DWORD PTR es:[edi],dx
  412c51:	push   edi
  412c52:	call   0x2e35:0xa14864ff
  412c59:	cmp    DWORD PTR [ebp+0x44],esi
  412c5c:	add    cl,ch
  412c5e:	push   0x48
  412c60:	je     0x412c7b
  412c62:	push   edi
  412c63:	jmp    FWORD PTR [esi+edx*1]
  412c66:	add    BYTE PTR [edi+0x2e],0xa
  412c6a:	pop    edx
  412c6b:	inc    ebp
  412c6c:	jo     0x412c76
  412c6e:	mov    esi,DWORD PTR ds:0x2ae5007a
  412c74:	jb     0x412ce5
  412c76:	out    dx,eax
  412c77:	add    dh,BYTE PTR [edx+0x42]
  412c7a:	cmp    DWORD PTR [ebx+0x53],esp
  412c7d:	shr    BYTE PTR fs:[ebx],0x35
  412c81:	pop    edx
  412c82:	mov    ch,BYTE PTR [edx]
  412c84:	popa   
  412c85:	js     0x412c87
  412c87:	add    ch,dh
  412c89:	adc    al,0x68
  412c8b:	je     0x412c61
  412c8d:	inc    esp
  412c8e:	cmp    ch,BYTE PTR [edi]
  412c90:	scas   eax,DWORD PTR es:[edi]
  412c91:	ins    BYTE PTR es:[edi],dx
  412c92:	imul   esi,DWORD PTR [ebx+0x7a],0x6b
  412c96:	outs   dx,DWORD PTR ds:[esi]
  412c97:	imul   ebp,DWORD PTR cs:[ebx+0x69],0x2e
  412c9c:	push   0x46
  412c9e:	sub    esi,DWORD PTR [edx-0x3a]
  412ca1:	inc    esi
  412ca2:	outs   dx,DWORD PTR ds:[esi]
  412ca3:	jb     0x412c5e
  412ca5:	adc    BYTE PTR [ecx+0x2f],dh
  412ca8:	cwde   
  412ca9:	add    esi,DWORD PTR [esi+ebp*1-0x5b]
  412cad:	cmp    al,0x61
  412caf:	add    BYTE PTR [eax+0x72707440],dh
  412cb5:	sub    ebp,DWORD PTR [ebx]
  412cb7:	ja     0x412ca0
  412cb9:	inc    ebx
  412cba:	outs   dx,DWORD PTR cs:[esi]
  412cbc:	lods   eax,DWORD PTR ds:[esi]
  412cbd:	jno    0x412d22
  412cbf:	popa   
  412cc0:	mov    ebx,0xe4736e6b
  412cc5:	inc    ebp
  412cc6:	jno    0x412d2b
  412cc8:	jmp    0x412d38
  412cca:	imul   ebp,DWORD PTR [esi-0x1b],0x44
  412cce:	arpl   WORD PTR cs:[edi+0x6d],bp
  412cd2:	cs popa 
  412cd4:	push   0x27
  412cd6:	push   ecx
  412cd7:	dec    ebx
  412cd8:	xor    DWORD PTR [eax],ecx
  412cda:	bound  ebp,QWORD PTR [ecx+0x47]
  412cdd:	outs   dx,BYTE PTR ds:[esi]
  412cde:	sub    edx,DWORD PTR [ecx+0x2b]
  412ce1:	(bad)  
  412ce2:	push   ebx
  412ce3:	jbe    0x412d28
  412ce5:	add    ch,BYTE PTR [esi]
  412ce7:	gs push eax
  412ce9:	xor    eax,0x0
  412cee:	xor    DWORD PTR [edi+ecx*2],eax
  412cf1:	inc    edi
  412cf2:	add    DWORD PTR [esi],0x9784640
  412cf8:	aas    
  412cf9:	xor    BYTE PTR [eax+0x28],bh
  412cfc:	cmp    edx,DWORD PTR [eax+0x6a]
  412cff:	add    DWORD PTR [esi],edi
  412d01:	inc    edi
  412d02:	jge    0x412cfc
  412d04:	xor    edx,DWORD PTR [edi+0x5c]
  412d07:	test   BYTE PTR [edx+0x52],al
  412d0a:	pop    eax
  412d0b:	lea    ecx,[ebp+0x43]
  412d0e:	ins    DWORD PTR es:[edi],dx
  412d0f:	sub    eax,0x2bf8534b
  412d14:	push   ss
  412d15:	xor    BYTE PTR [ecx],dh
  412d17:	mov    ebp,0xbb310001
  412d1c:	add    DWORD PTR [ebx-0x1a],ecx
  412d1f:	adc    BYTE PTR [eax-0x1],0x31
  412d23:	mov    ebp,0xbd310001
  412d28:	add    DWORD PTR [eax],eax
  412d2a:	xor    DWORD PTR [edx-0x7222b9ca],ecx
  412d30:	inc    esp
  412d31:	push   edx
  412d32:	hlt    
  412d33:	cmp    BYTE PTR [eax],0x67
  412d36:	ror    BYTE PTR [edx+0x56],cl
  412d39:	jno    0x412d09
  412d3b:	xchg   esi,eax
  412d3c:	ins    DWORD PTR es:[edi],dx
  412d3d:	pop    esp
  412d3e:	(bad)  
  412d3f:	xchg   ebx,eax
  412d40:	push   ebx
  412d41:	fiadd  WORD PTR fs:[ebp+0x72]
  412d45:	pop    esp
  412d46:	repnz outs dx,DWORD PTR ds:[esi]
  412d48:	jb     0x412dbc
  412d4a:	aam    0x5e
  412d4c:	jo     0x412da4
  412d4e:	int3   
  412d4f:	push   0x71
  412d51:	add    BYTE PTR [bx+si],al
  412d54:	sahf   
  412d55:	cmovs  edx,DWORD PTR [ebx-0x69]
  412d59:	fs push esi
  412d5b:	jno    0x412d02
  412d5d:	pop    esp
  412d5e:	pop    eax
  412d5f:	ins    BYTE PTR es:[edi],dx
  412d60:	xor    DWORD PTR [eax],esi
  412d62:	push   esi
  412d63:	addr16 lahf 
  412d65:	or     dh,BYTE PTR [eax+0x5f]
  412d68:	xchg   ebp,eax
  412d69:	adc    al,0x13
  412d6b:	push   ebx
  412d6c:	test   DWORD PTR [edx+0x10],eax
  412d6f:	push   esi
  412d70:	mov    WORD PTR [ebx+ebp*1],ss
  412d73:	pop    ebp
  412d74:	pusha  
  412d75:	inc    esp
  412d76:	sti    
  412d77:	fs pop esi
  412d79:	pop    esi
  412d7a:	or     BYTE PTR [ecx+0x52],bl
  412d7d:	adc    al,0x1b
  412d7f:	add    al,0x31
  412d81:	adc    al,0xe7
  412d83:	add    esi,DWORD PTR [ecx]
  412d85:	adc    al,0xe7
  412d87:	add    ebx,DWORD PTR [eax+0x39]
  412d8a:	fst    DWORD PTR [ebp+0x52]
  412d8d:	inc    eax
  412d8e:	sbb    dh,BYTE PTR [edx]
  412d90:	pop    es
  412d91:	cmp    bl,al
  412d93:	push   edi
  412d94:	xor    DWORD PTR [edi-0x4d],esp
  412d97:	push   edx
  412d98:	in     al,dx
  412d99:	cmp    BYTE PTR [ebx-0x2fb7efbc],bh
  412d9f:	ins    DWORD PTR es:[edi],dx
  412da0:	adc    dl,BYTE PTR [ebx-0x3a]
  412da3:	push   ebp
  412da4:	add    BYTE PTR [edi],bh
  412da6:	mov    ebx,0x9a38e060
  412dab:	jb     0x412dc3
  412dad:	aas    
  412dae:	lea    edi,[ecx*1-0x238e48ec]
  412db5:	xor    al,BYTE PTR [edx+esi*2+0x5ce00000]
  412dbc:	mov    ecx,DWORD PTR [edi-0x34]
  412dbf:	bound  eax,QWORD PTR [edx+esi*2+0x55863ce0]
  412dc6:	div    BYTE PTR [edi]
  412dc8:	out    0x3,eax
  412dca:	xor    DWORD PTR [edi+eiz*8],edx
  412dcd:	add    esi,DWORD PTR [ecx]
  412dcf:	adc    al,0xe7
  412dd1:	add    edx,eax
  412dd3:	inc    ecx
  412dd4:	push   eax
  412dd5:	je     0x412d7c
  412dd7:	add    DWORD PTR [ecx],ebx
  412dd9:	push   ss
  412dda:	lea    eax,[eax+0x53]
  412ddd:	add    al,0x70
  412ddf:	inc    edx
  412de0:	inc    eax
  412de1:	je     0x412d80
  412de3:	add    BYTE PTR [bx-0x7b],al
  412de7:	inc    edx
  412de8:	ins    DWORD PTR es:[edi],dx
  412de9:	xor    eax,0x2d743366
  412dee:	xchg   edx,eax
  412def:	dec    eax
  412df0:	pop    edi
  412df1:	jmp    0xe9414228
  412df6:	inc    esp
  412df7:	xor    DWORD PTR [eax+0x4],edi
  412dfa:	sub    eax,0x610f6d63
  412dff:	inc    edi
  412e00:	pop    edi
  412e01:	sti    
  412e02:	ja     0x412e74
  412e04:	push   ebp
  412e05:	add    BYTE PTR [edi+0x62],ah
  412e08:	aas    
  412e09:	sbb    ebp,DWORD PTR ds:0x64cc703f
  412e0f:	adc    al,0xff
  412e11:	call   0xc1b2c248
  412e16:	cmovo  ebp,DWORD PTR [edx+ebx*1+0x63]
  412e1b:	(bad)  
  412e1c:	arpl   bp,dx
  412e1e:	add    BYTE PTR [eax],al
  412e20:	push   es
  412e21:	adc    al,0x51
  412e23:	mov    cl,0x55
  412e25:	xor    DWORD PTR [edi+ebp*4-0x1b],esi
  412e29:	aas    
  412e2a:	les    eax,FWORD PTR fs:[eax]
  412e2d:	fs pop edi
  412e2f:	popf   
  412e30:	fimul  DWORD PTR [eax+eax*1]
  412e33:	jmp    0xe941426a
  412e38:	fwait
  412e39:	cmc    
  412e3a:	ds jmp 0xe98023dc
  412e40:	je     0x412e37
  412e42:	ds jmp 0xe980238e
  412e48:	xor    dl,bh
  412e4a:	ds jmp 0xe9802870
  412e50:	adc    dl,bh
  412e52:	ds jmp 0xe980285d
  412e58:	fs cli 
  412e5a:	ds jmp 0x8028f0
  412e60:	or     BYTE PTR [edx+ebp*1],bh
  412e63:	inc    ecx
  412e64:	or     BYTE PTR [eax+0x7518412a],bl
  412e6a:	sub    al,BYTE PTR [ecx+0x18]
  412e6d:	adc    DWORD PTR [eax],eax
  412e6f:	add    BYTE PTR [eax],cl
  412e71:	adc    al,BYTE PTR [eax]
  412e73:	add    BYTE PTR [eax-0x27000232],cl
  412e79:	add    eax,0x670c2075
  412e7e:	pop    edi
  412e7f:	jne    0x412ec6
  412e81:	ins    DWORD PTR es:[edi],dx
  412e82:	outs   dx,BYTE PTR ds:[esi]
  412e83:	je     0x412e85
  412e85:	add    bl,bl
  412e87:	adc    ch,bh
  412e89:	(bad)  
  412e8a:	fcom   DWORD PTR [eax+0x10d8001a]
  412e90:	cmp    eax,0x5d0cd870
  412e95:	je     0x412e80
  412e97:	adc    ch,bh
  412e99:	call   FWORD PTR [eax-0x67ffe370]
  412e9f:	adc    BYTE PTR [edi+ebp*2+0x6b],cl
  412ea3:	xor    DWORD PTR [eax+eiz*1-0x37],ebp
  412ea7:	inc    eax
  412ea8:	jo     0x412eee
  412eaa:	jns    0x412ee8
  412eac:	pop    ebp
  412ead:	add    BYTE PTR [ecx+0x68800010],bl
  412eb3:	adc    BYTE PTR [eax],al
  412eb5:	add    bl,cl
  412eb7:	xor    DWORD PTR [edi+0x68],ebx
  412eba:	mov    ebp,0x58fffd10
  412ebf:	nop
  412ec0:	sbb    eax,0x3f104800
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec7:	imul   esp,DWORD PTR [ebp+0x65],0xffffffcb
  412ecb:	adc    ch,bh
  412ecd:	call   FWORD PTR [eax-0x70]
  412ed0:	and    al,BYTE PTR [eax]
  412ed2:	dec    eax
  412ed3:	adc    BYTE PTR [eax+0x69],cl
  412ed6:	fld    TBYTE PTR [ebx+0x6b]
  412ed9:	jb     0x412f0c
  412edb:	fs add al,0x2
  412ede:	xor    DWORD PTR [ebp-0x42cefc7f],edi
  412ee4:	add    DWORD PTR [ebx-0x68],ecx
  412ee7:	sbb    eax,0x6d48
  412eec:	xchg   edx,eax
  412eed:	or     BYTE PTR [edi+0x63],ch
  412ef0:	xchg   edi,eax
  412ef1:	add    DWORD PTR [ebp+0x0],edx
  412ef4:	xor    edi,DWORD PTR [ebp-0x42ad7fff]
  412efa:	add    DWORD PTR [eax],eax
  412efc:	jb     0x412f10
  412efe:	outs   dx,DWORD PTR ds:[esi]
  412eff:	imul   edx,DWORD PTR [esi-0x35],0x21
  412f03:	aas    
  412f04:	popa   
  412f05:	int    0x45
  412f07:	pop    edi
  412f08:	pop    ebp
  412f09:	sbb    al,0x4
  412f0b:	dec    esi
  412f0d:	mov    ebp,0xbd312581
  412f12:	add    DWORD PTR [ebx+0x38],ecx
  412f15:	sbb    eax,0xe1526734
  412f1a:	pop    eax
  412f1b:	jb     0x412f31
  412f1d:	out    dx,al
  412f1e:	add    DWORD PTR [edx],eax
  412f20:	xor    DWORD PTR [ebp-0x42ced17f],edi
  412f26:	add    DWORD PTR [ecx+0x6],eax
  412f29:	fdiv   DWORD PTR [eax+0x6d]
  412f2c:	pop    ds
  412f2d:	sbb    eax,0x80126d48
  412f32:	jo     0x412f97
  412f34:	pop    gs
  412f36:	push   esi
  412f37:	add    BYTE PTR [ebx],dh
  412f39:	mov    ebp,0xbd1e8001
  412f3e:	add    DWORD PTR [eax],eax
  412f40:	repnz dec ecx
  412f42:	jo     0x412faf
  412f44:	into   
  412f45:	mov    ds:0x97cd3f21,al
  412f4a:	ins    BYTE PTR es:[edi],dx
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	fmul   DWORD PTR [ebp+0x55]
  412f4f:	jb     0x412f51
  412f51:	add    al,dl
  412f53:	inc    eax
  412f54:	ins    BYTE PTR es:[edi],dx
  412f55:	jbe    0x412f2b
  412f57:	adc    eax,DWORD PTR [edi]
  412f59:	cmp    ah,al
  412f5b:	cmp    cl,BYTE PTR [ebx+0x57]
  412f5e:	xor    DWORD PTR ds:0x3b103e7,edx
  412f64:	out    0x3,eax
  412f66:	xor    DWORD PTR [ebp+0x4b],edx
  412f69:	jno    0x412ef9
  412f6b:	cmp    dl,BYTE PTR [eax+0x57]
  412f6e:	test   DWORD PTR [esi+0x48],eax
  412f71:	pop    eax
  412f72:	mov    es,WORD PTR [edx+0x44]
  412f75:	and    al,0x65
  412f77:	cmp    edx,DWORD PTR [esi]
  412f79:	jo     0x412efb
  412f7b:	adc    al,0xe8
  412f7d:	add    esi,DWORD PTR [ecx]
  412f7f:	xchg   esp,eax
  412f80:	in     al,dx
  412f81:	add    esi,DWORD PTR [ecx]
  412f83:	adc    al,0x37
  412f85:	imul   esp,DWORD PTR [ebx+0x47],0x38767216
  412f8c:	out    0x36,eax
  412f8e:	pop    esp
  412f8f:	xor    bh,bl
  412f91:	pop    edx
  412f92:	inc    si
  412f94:	add    al,0x40
  412f96:	push   0x3d
  412f98:	retf   0x4455
  412f9b:	inc    edi
  412f9c:	into   
  412f9d:	imul   esp,DWORD PTR ds:0x176cbe68,0x205abe30
  412fa7:	push   0x462358aa
  412fac:	les    esi,FWORD PTR [ecx+0x5]
  412faf:	(bad)  
  412fb0:	int3   
  412fb1:	push   ebp
  412fb2:	add    BYTE PTR ds:0x71be,bh
  412fb8:	fst    QWORD PTR [eax-0x61]
  412fbb:	push   ebx
  412fbc:	add    eax,0xe368993b
  412fc1:	addr16 mov edx,0x7b37d26b
  412fc7:	and    esi,edi
  412fc9:	cmp    dl,BYTE PTR [ebx+0x7a45d267]
  412fcf:	add    esp,ecx
  412fd1:	pop    edx
  412fd2:	add    BYTE PTR [edx+0x7a22f3fe],bl
  412fd8:	adc    bl,BYTE PTR [esp+edx*2+0x3d]
  412fdc:	std    
  412fdd:	clc    
  412fde:	cmovne ebx,DWORD PTR cs:0x43a0210a
  412fe6:	je     0x412ffb
  412fe8:	push   ebp
  412fe9:	cmc    
  412fea:	jo     0x412fe0
  412fec:	and    al,0x9
  412fee:	popa   
  412fef:	dec    edx
  412ff0:	xchg   esi,eax
  412ff1:	inc    esp
  412ff2:	je     0x412fe7
  412ff4:	push   edx
  412ff5:	(bad)  
  412ff6:	sub    al,0x3
  412ff8:	cs push ds
  412ffa:	aas    
  412ffb:	or     cl,BYTE PTR [ebp+esi*1+0x551e1570]
  413002:	outs   dx,BYTE PTR ds:[esi]
  413003:	or     ah,BYTE PTR [eax+0x30]
  413006:	dec    DWORD PTR [bx+di+0xe]
  41300a:	and    BYTE PTR [eax],dl
  41300c:	dec    ecx
  41300d:	xor    eax,0x405bf56e
  413012:	ja     0x412fd9
  413014:	adc    bh,dh
  413016:	cmp    al,bh
  413018:	pop    ds
  413019:	add    al,0xb
  41301b:	repz add BYTE PTR [eax],al
  41301e:	ins    DWORD PTR es:[edi],dx
  41301f:	aaa    
  413020:	outs   dx,BYTE PTR ds:[esi]
  413021:	aad    0x17
  413023:	cmp    dh,BYTE PTR [esp+eax*1+0x1]
  413027:	xor    eax,0x3c06c66e
  41302c:	cmp    cl,BYTE PTR [ecx]
  41302e:	dec    esi
  41302f:	cmp    BYTE PTR [ebx-0x14],dh
  413032:	cmp    al,0x53
  413034:	ins    DWORD PTR es:[edi],dx
  413035:	mov    DWORD PTR [eax],0xbb56135
  41303b:	aaa    
  41303c:	outs   dx,BYTE PTR ds:[esi]
  41303d:	jecxz  0x413091
  41303f:	xor    ebp,DWORD PTR [esi+ecx*4+0x5]
  413043:	xor    eax,0x36ede30b
  413048:	outs   dx,BYTE PTR ds:[esi]
  413049:	xchg   ebp,eax
  41304a:	xlat   BYTE PTR ds:[ebx]
  41304b:	cmp    DWORD PTR [eax+eax*1+0x7d],esi
  41304f:	add    DWORD PTR [ebp+0x70],esi
  413052:	mov    ch,0x27
  413054:	and    BYTE PTR [ecx-0x38],ah
  413057:	fs ins BYTE PTR es:[edi],dx
  413059:	imul   ebp,DWORD PTR [ebx-0x20968bca],0x7b6f2b45
  413063:	ins    BYTE PTR es:[edi],dx
  413064:	popa   
  413065:	je     0x413094
  413067:	pop    edi
  413068:	je     0x4130dc
  41306a:	jne    0x4130a1
  41306c:	imul   ecx,DWORD PTR ds:0x6e6b5022,0x746e3144
  413076:	sub    eax,0x3f636e51
  41307b:	cmp    al,0x65
  41307d:	outs   dx,BYTE PTR ds:[esi]
  41307e:	daa    
  41307f:	sub    ah,BYTE PTR [eax]
  413081:	bound  eax,QWORD PTR [eax]
  413083:	add    BYTE PTR [ecx+0x46],al
  413086:	pop    ebp
  413087:	jb     0x4130ca
  413089:	sbb    DWORD PTR [edx],ecx
  41308b:	push   ebp
  41308c:	cmp    esi,DWORD PTR [ecx]
  41308e:	jb     0x4130bd
  413090:	or     DWORD PTR [ebx],edi
  413092:	popa   
  413093:	outs   dx,BYTE PTR ds:[esi]
  413094:	les    esp,FWORD PTR [esi]
  413096:	and    BYTE PTR [ebp+0x2f],cl
  413099:	push   0x65
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	mov    esp,0x1e342b35
  4130a1:	and    BYTE PTR [eax],ah
  4130a3:	sub    BYTE PTR [ebx+0x43],bh
  4130a6:	imul   esi,DWORD PTR [eax+0x79],0xdc626560
  4130ad:	xor    DWORD PTR [edi],esi
  4130af:	and    ch,bl
  4130b1:	inc    DWORD PTR [ebp+eax*2+0x38]
  4130b5:	and    DWORD PTR [esi],ebp
  4130b7:	xor    BYTE PTR [ebx-0x4196ad0c],al
  4130bd:	xor    BYTE PTR [ebx+0x77],ch
  4130c0:	fwait
  4130c1:	hlt    
  4130c2:	xor    al,0x38
  4130c4:	sbb    DWORD PTR [ecx],0xb5310d0a
  4130ca:	add    DWORD PTR [ecx-0x32],eax
  4130cd:	dec    eax
  4130ce:	push   ebp
  4130cf:	arpl   di,ax
  4130d1:	inc    esi
  4130d2:	cs dec esp
  4130d4:	aam    0x98
  4130d6:	push   0x184d974
  4130db:	dec    esp
  4130dc:	into   
  4130dd:	popf   
  4130de:	bound  esi,QWORD PTR [eax+ecx*8+0x61]
  4130e2:	outs   dx,BYTE PTR ds:[esi]
  4130e3:	cmp    dh,BYTE PTR [ecx]
  4130e5:	out    dx,al
  4130e6:	inc    esi
  4130e7:	push   esp
  4130e8:	add    BYTE PTR [eax],al
  4130ea:	push   ecx
  4130eb:	sbb    BYTE PTR [ecx+0x20],dl
  4130ee:	imul   eax,DWORD PTR [ecx],0xcc465038
  4130f4:	sub    esi,DWORD PTR [eax]
  4130f6:	cmp    al,0xc3
  4130f8:	dec    ecx
  4130f9:	ins    DWORD PTR es:[edi],dx
  4130fa:	or     BYTE PTR [ecx],0x1a
  4130fd:	and    BYTE PTR [edx+ecx*1+0xf],dl
  413101:	or     dh,BYTE PTR [eax+0x1a]
  413104:	popa   
  413105:	arpl   WORD PTR [ecx+0x21],sp
  413108:	sbb    ah,BYTE PTR [eax]
  41310a:	sbb    ecx,esi
  41310c:	daa    
  41310d:	or     ebp,DWORD PTR [ebx]
  41310f:	cld    
  413110:	pusha  
  413111:	popa   
  413112:	dec    esp
  413113:	int    0x55
  413115:	sub    esi,DWORD PTR [edi+edx*1+0x61]
  413119:	ins    DWORD PTR es:[edi],dx
  41311a:	dec    ebp
  41311b:	adc    al,0x6e
  41311d:	gs sti 
  41311f:	fsubr  QWORD PTR [esp+eiz*2+0x4c]
  413123:	fist   WORD PTR [ebp+0x67]
  413126:	and    eax,0x5b202db4
  41312b:	and    dl,BYTE PTR [ebx+0x3b]
  41312e:	popa   
  41312f:	call   0xdf47723b
  413134:	imul   esp,DWORD PTR [ebx+0x12],0xffffff81
  413138:	ins    BYTE PTR es:[edi],dx
  413139:	ins    DWORD PTR es:[edi],dx
  41313a:	pop    ss
  41313b:	ret    
  41313c:	and    DWORD PTR [ecx+0xd],esp
  41313f:	xchg   BYTE PTR [edx+0x63],dl
  413142:	and    al,0x14
  413144:	icebp  
  413145:	cmp    al,ah
  413147:	xor    BYTE PTR [ecx-0x73d0d9d0],bl
  41314d:	ins    DWORD PTR es:[edi],dx
  41314e:	add    BYTE PTR [eax],al
  413150:	in     eax,0x9
  413152:	(bad)  
  413153:	push   eax
  413154:	les    ecx,FWORD PTR [ecx-0x70]
  413157:	outs   dx,DWORD PTR ds:[esi]
  413158:	fnsave [esi+ecx*8]
  41315b:	pop    ss
  41315c:	pop    ss
  41315d:	add    al,0xc7
  41315f:	sub    edx,eax
  413161:	ss jl  0x4131b7
  413164:	(bad)  
  413165:	aas    
  413166:	push   eax
  413167:	bound  ebx,QWORD PTR [ebp+0x7a242231]
  41316d:	arpl   WORD PTR [eax],sp
  41316f:	dec    ecx
  413170:	push   ecx
  413171:	add    ebp,edi
  413173:	adc    ebx,DWORD PTR [eax-0xc]
  413176:	sbb    eax,0x4e309f6d
  41317b:	push   edi
  41317c:	xor    ah,0xef
  41317f:	sbb    edx,DWORD PTR [esi+0x19]
  413182:	loope  0x413194
  413184:	sub    edx,DWORD PTR [edx*8-0x1909e0fd]
  41318b:	aas    
  41318c:	sbb    esi,esi
  41318e:	rol    BYTE PTR [ebx],0xb
  413191:	test   al,0x3
  413194:	inc    edi
  413195:	xor    ebx,edi
  413197:	fs inc ecx
  413199:	cmp    eax,0x301711ba
  41319e:	add    esi,DWORD PTR [eax+0x31]
  4131a1:	push   esi
  4131a2:	add    al,0x58
  4131a4:	test   BYTE PTR [ebx-0x30],0x41
  4131a8:	and    ch,BYTE PTR [esi]
  4131aa:	lds    ebp,FWORD PTR [eax+0x23]
  4131ad:	dec    esi
  4131ae:	fldcw  WORD PTR [eax+0x12]
  4131b1:	adc    al,0x9d
  4131b3:	push   0x611d0000
  4131b8:	mov    edx,0xcd510368
  4131bd:	pop    eax
  4131be:	sbb    dl,BYTE PTR [eax+eax*1]
  4131c1:	jmp    0xfaa469d5
  4131c6:	and    dh,dh
  4131c8:	arpl   WORD PTR [ebp-0x6aaeec22],dx
  4131ce:	iret   
  4131cf:	pop    eax
  4131d0:	jo     0x41315e
  4131d2:	int3   
  4131d3:	fs je  0x413254
  4131d6:	add    BYTE PTR [edi+0x65],ah
  4131d9:	mov    WORD PTR [edx],?
  4131db:	adc    al,0x5f
  4131dd:	test   esp,ebx
  4131df:	data16 jo 0x413162
  4131e2:	and    eax,DWORD PTR [edx]
  4131e4:	cs test esi,eax
  4131e7:	aaa    
  4131e8:	add    BYTE PTR [eax],ch
  4131ea:	mov    eax,ds:0x924a6d38
  4131ef:	inc    eax
  4131f0:	arpl   WORD PTR [eax],bp
  4131f2:	(bad)  
  4131f3:	xor    BYTE PTR [edi+0x3f],al
  4131f6:	mov    al,BYTE PTR [eax+0x67]
  4131f9:	dec    eax
  4131fa:	sub    DWORD PTR ds:0x2d40447a,0x3c71e964
  413204:	arpl   WORD PTR [edx-0x78],cx
  413207:	pusha  
  413208:	ins    DWORD PTR es:[edi],dx
  413209:	adc    dl,BYTE PTR [esi+0x36]
  41320c:	dec    ebx
  41320d:	add    al,0x56
  41320f:	xor    ah,BYTE PTR [ebx+0x1b]
  413212:	cmp    BYTE PTR [edi+eiz*2],0x19
  413216:	sub    eax,0xc724e
  41321b:	add    BYTE PTR [esi+0x63],dl
  41321e:	addr16 add eax,0xc72532d
  413224:	dec    ecx
  413225:	push   ecx
  413226:	outs   dx,BYTE PTR ds:[esi]
  413227:	hlt    
  413228:	inc    edi
  413229:	xor    DWORD PTR [edx-0x38],esi
  41322c:	push   es
  41322d:	xor    DWORD PTR [edi],edi
  41322f:	jmp    0xcda47425
  413234:	hlt    
  413235:	inc    ecx
  413236:	arpl   sp,ax
  413238:	xor    dl,BYTE PTR [ebx+0x72]
  41323b:	add    BYTE PTR [ecx+0x61],dh
  41323e:	je     0x413287
  413240:	ins    DWORD PTR es:[edi],dx
  413241:	pop    ebp
  413242:	push   ecx
  413243:	jae    0x4132b2
  413245:	arpl   WORD PTR [edi+0x65],ax
  413248:	rcl    DWORD PTR [ecx],0x3f
  41324b:	jb     0x4131de
  41324d:	popa   
  41324e:	je     0x413295
  413250:	nop
  413251:	popa   
  413252:	imul   esi,DWORD PTR [edx-0x44],0x5c
  413256:	popa   
  413257:	jns    0x4132a1
  413259:	push   esp
  41325a:	jb     0x4132d5
  41325c:	enter  0x445c,0x65
  413260:	retf   
  413261:	pop    esp
  413262:	jb     0x4132d3
  413264:	rcr    DWORD PTR [ebx+0x61],0x79
  413268:	dec    eax
  413269:	push   esp
  41326a:	jb     0x4132e5
  41326c:	mov    BYTE PTR [edx+edx*2+0x65],ch
  413270:	je     0x41329f
  413272:	pop    ebp
  413273:	jae    0x4132e2
  413275:	push   ebx
  413276:	imul   ebp,DWORD PTR [esi+0x7c],0x2d
  41327a:	js     0x4132f0
  41327c:	sbb    BYTE PTR [ebx],al
  41327e:	popa   
  41327f:	jbe    0x413281
  413281:	add    BYTE PTR [ebp+0x62],ch
  413284:	je     0x4132da
  413286:	ja     0x41328b
  413288:	popa   
  413289:	ins    BYTE PTR es:[edi],dx
  41328a:	outs   dx,BYTE PTR ds:[esi]
  41328b:	adc    BYTE PTR [ebx+0x70],cl
  41328e:	cmp    eax,0x37725036
  413293:	xor    esp,DWORD PTR [ecx+0x73]
  413296:	cmp    ecx,DWORD PTR [ebx+ebp*2]
  413299:	imul   ebp,DWORD PTR ds:0x25490036,0x60
  4132a0:	popa   
  4132a1:	jb     0x41326e
  4132a3:	aaa    
  4132a4:	outs   dx,BYTE PTR ds:[esi]
  4132a5:	popa   
  4132a6:	mov    esp,0x2f6f4c2d
  4132ab:	das    
  4132ac:	popa   
  4132ad:	fs out 0x36,eax
  4132b0:	push   ecx
  4132b1:	jae    0x413320
  4132b3:	bound  eax,QWORD PTR [eax]
  4132b5:	inc    edi
  4132b6:	xor    eax,ebx
  4132b8:	push   ebp
  4132b9:	push   esp
  4132ba:	push   es
  4132bb:	shl    BYTE PTR [esi+0x6e],cl
  4132be:	clc    
  4132bf:	fsub   QWORD PTR [ebx+0x6d]
  4132c2:	add    ebx,eax
  4132c4:	bound  esi,QWORD PTR [eax+ecx*1-0x32]
  4132c8:	imul   eax,DWORD PTR [eax],0xfffffff2
  4132cb:	test   DWORD PTR [ebx+0x76],ebp
  4132ce:	aam    0xa8
  4132d0:	push   ebp
  4132d1:	push   ecx
  4132d2:	fmul   DWORD PTR [esi-0x58fd92cb]
  4132d8:	dec    edi
  4132d9:	addr16 (bad) 
  4132db:	lea    esi,[eax]
  4132dd:	addr16 aad 0x7b
  4132e0:	add    DWORD PTR [esi+edx*8-0x73],ecx
  4132e4:	ins    BYTE PTR es:[edi],dx
  4132e5:	outs   dx,BYTE PTR ds:[esi]
  4132e6:	add    BYTE PTR [eax],al
  4132e8:	in     al,0x49
  4132ea:	data16 jb 0x4132dd
  4132ed:	mov    edx,0x669e6d4d
  4132f2:	dec    edi
  4132f3:	jo     0x413276
  4132f5:	pop    edi
  4132f6:	imul   esi,DWORD PTR [esi-0x78],0x59
  4132fa:	pop    edi
  4132fb:	mov    WORD PTR gs:[ebx],cs
  4132fe:	arpl   WORD PTR [esp+eax*4+0x50],bp
  413302:	inc    ebx
  413303:	add    BYTE PTR [eax+0x59],dh
  413306:	outs   dx,BYTE PTR ds:[esi]
  413307:	jae    0x41328b
  413309:	add    DWORD PTR [eax],esi
  41330b:	ins    DWORD PTR es:[edi],dx
  41330c:	mov    bl,BYTE PTR [eax+0x6a]
  41330f:	push   eax
  413310:	arpl   WORD PTR [edx+edx*2],sp
  413313:	addr16 push ebp
  413315:	sbb    BYTE PTR [ecx+0x63],ah
  413318:	bound  ebp,QWORD PTR [ebp+0x24636101]
  41331e:	push   esp
  41331f:	je     0x413323
  413321:	jg     0x41334a
  413323:	fs push ebp
  413325:	adc    DWORD PTR [ecx+eax*2],eax
  413328:	push   esp
  413329:	mov    edi,0x18414d4d
  41332e:	push   0x51
  413330:	sub    BYTE PTR [edx+ebx*8],dl
  413333:	dec    edi
  413334:	adc    dh,BYTE PTR [ecx]
  413336:	mov    edx,0xcc460c4f
  41333b:	inc    esp
  41333c:	xor    DWORD PTR [edi-0x3c],edx
  41333f:	push   ebp
  413340:	add    eax,0x1a50d559
  413345:	push   edi
  413346:	les    edx,FWORD PTR [ebp+0x5]
  413349:	sub    eax,0x6ccd
  41334e:	adc    BYTE PTR ds:0x4ce060b3,dh
  413354:	xchg   ebp,eax
  413355:	fnsave ss:[edx]
  413358:	cdq    
  413359:	pusha  
  41335a:	xor    DWORD PTR [edi-0x74],edx
  41335d:	push   ebp
  41335e:	fst    QWORD PTR [esi+0x7b]
  413361:	push   0xffffffc0
  413363:	cmp    BYTE PTR [edx-0x7bba2bb1],bl
  413369:	add    esi,eax
  41336b:	inc    ebp
  41336c:	jo     0x4133c1
  41336e:	mov    ebp,0xa2548a54
  413373:	sub    eax,0x39706159
  413378:	pop    ecx
  413379:	push   eax
  41337a:	xchg   esi,eax
  41337b:	cmp    al,BYTE PTR [eax+0x67]
  41337e:	jbe    0x4133c8
  413380:	inc    esp
  413381:	xor    al,0x83
  413383:	sub    eax,0x397d653d
  413388:	xor    ah,BYTE PTR [ecx-0x7a]
  41338b:	adc    al,0xe7
  41338d:	add    esi,DWORD PTR [ecx]
  41338f:	adc    al,0xe7
  413391:	add    esi,DWORD PTR [ecx]
  413393:	adc    al,0xe7
  413395:	add    esi,DWORD PTR [ecx]
  413397:	adc    al,0xe7
  413399:	add    esi,DWORD PTR [ecx]
  41339b:	adc    al,0xe7
  41339d:	add    esi,DWORD PTR [ecx]
  41339f:	adc    al,0xe7
  4133a1:	add    esi,DWORD PTR [ecx]
  4133a3:	adc    al,0xe7
  4133a5:	add    esi,DWORD PTR [ecx]
  4133a7:	adc    al,0xe7
  4133a9:	add    esi,DWORD PTR [ecx]
  4133ab:	adc    al,0x0
  4133ad:	jmp    0xe94147e4
  4133b2:	add    BYTE PTR [eax],al
  4133b4:	xor    dl,BYTE PTR [eax+eax*1]
  4133b7:	jmp    0xe94147ee
  4133bc:	xor    dl,BYTE PTR [eax+eax*1]
  4133bf:	jmp    0xe94147f6
  4133c4:	xor    dl,BYTE PTR [eax+eax*1]
  4133c7:	jmp    0xe94147fe
  4133cc:	xor    dl,BYTE PTR [eax+eax*1]
  4133cf:	jmp    0xe9414806
  4133d4:	xor    dl,BYTE PTR [eax+eax*1]
  4133d7:	jmp    0xe941480e
  4133dc:	xor    dl,BYTE PTR [eax+eax*1]
  4133df:	jmp    0xe9414816
  4133e4:	xor    dl,BYTE PTR [eax+eax*1]
  4133e7:	jmp    0xe941481e
  4133ec:	xor    dl,BYTE PTR [eax+eax*1]
  4133ef:	jmp    0xa5889cde
  4133f4:	xor    bh,BYTE PTR [ebx]
  4133f6:	and    ebx,DWORD PTR [ecx]
  4133f8:	inc    ebp
  4133f9:	pop    esp
  4133fa:	sub    eax,DWORD PTR [eax*2+0x36045808]
  413401:	add    al,0x34
  413403:	xor    DWORD PTR [esi-0xb],edx
  413406:	das    
  413407:	sti    
  413408:	dec    edx
  413409:	cmc    
  41340a:	das    
  41340b:	sti    
  41340c:	cmp    ch,ch
  41340e:	and    bh,cl
  413410:	sbb    al,0x5c
  413412:	and    edi,ecx
  413414:	inc    esp
  413415:	pop    esp
  413416:	and    ebx,ecx
  413418:	add    BYTE PTR [eax],al
  41341a:	cmp    al,0x5c
  41341c:	and    ebx,ecx
  41341e:	inc    esp
  41341f:	pop    esp
  413420:	and    ebx,ecx
  413422:	cmp    al,0x5c
  413424:	and    ebx,ecx
  413426:	and    al,0x5c
  413428:	jnp    0x41342a
  41342a:	fcom   DWORD PTR [ecx+eiz*2+0x74]
  41342e:	push   cs
  41342f:	xor    eax,0x62b66974
  413434:	dec    edi
  413435:	jns    0x4133e2
  413437:	push   ecx
  413438:	popa   
  413439:	ins    DWORD PTR es:[edi],dx
  41343a:	loope  0x413467
  41343c:	outs   dx,WORD PTR ds:[esi]
  41343e:	mov    BYTE PTR [eax],dh
  413440:	popa   
  413441:	jb     0x4134b1
  413443:	bound  ebp,QWORD PTR [ebx+esi*1+0x2a]
  413447:	out    dx,al
  413448:	arpl   WORD PTR [esp+ebx*2+0x15],bp
  41344c:	inc    ebp
  41344d:	jae    0x4133f6
  41344f:	sub    al,0x73
  413451:	ss je  0x413459
  413454:	jb     0x4134c5
  413456:	jnp    0x4134ba
  413458:	outs   dx,DWORD PTR ds:[esi]
  413459:	jae    0x4134b3
  41345b:	or     BYTE PTR [ebx+0x66],ch
  41345e:	les    esp,FWORD PTR [ebp+ebx*2+0x72]
  413462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413463:	or     DWORD PTR [esi+0x61],eax
  413466:	stos   BYTE PTR es:[edi],al
  413467:	or     DWORD PTR [eax+0x6c],edx
  41346a:	lds    esi,FWORD PTR [ebx]
  41346c:	outs   dx,BYTE PTR gs:[esi]
  41346e:	mov    ebx,0x98544608
  413473:	or     DWORD PTR [eax+0x6f],ecx
  413476:	stos   DWORD PTR es:[edi],eax
  413477:	push   ecx
  413478:	outs   dx,DWORD PTR ds:[esi]
  413479:	add    BYTE PTR [ebx+0x2b],ch
  41347c:	data16 je 0x41347f
  41347f:	add    BYTE PTR [edi+0x5c657235],al
  413485:	push   esi
  413486:	pop    ebp
  413487:	jb     0x4134b3
  413489:	cld    
  41348a:	dec    edi
  41348b:	ins    BYTE PTR es:[edi],dx
  41348c:	inc    ebp
  41348d:	xor    esp,DWORD PTR [ebp+0x6e]
  413490:	cmp    edi,esp
  413492:	inc    ebp
  413493:	push   esp
  413494:	sbb    ah,bh
  413496:	inc    edi
  413497:	outs   dx,DWORD PTR ds:[esi]
  413498:	sub    esp,DWORD PTR [edi+ebp*2+0x0]
  41349c:	sub    ebp,DWORD PTR [ebx]
  41349e:	data16 je 0x4134e8
  4134a1:	xor    eax,0x7316572
  4134a6:	inc    edx
  4134a7:	pop    edi
  4134a8:	inc    ebx
  4134a9:	out    dx,eax
  4134aa:	xor    bl,BYTE PTR [edi+0x3f]
  4134ad:	adc    BYTE PTR [eax+0x44],ah
  4134b0:	dec    eax
  4134b1:	or     al,0x68
  4134b3:	ins    DWORD PTR es:[edi],dx
  4134b4:	dec    esi
  4134b5:	repz push 0x53c22571
  4134bb:	ja     0x4134c2
  4134bd:	jno    0x4134ec
  4134bf:	push   eax
  4134c0:	jmp    0x31b58996
  4134c5:	jle    0x41352f
  4134c7:	add    ax,0x62ea
  4134cb:	jb     0x4134d9
  4134cd:	ja     0x41350e
  4134cf:	pop    edi
  4134d0:	add    edi,DWORD PTR [ebp-0x7eefaecb]
  4134d6:	pop    esi
  4134d7:	fs cmc 
  4134d9:	shl    DWORD PTR [edx+0x6c],cl
  4134dc:	(bad)  
  4134dd:	xchg   ecx,eax
  4134de:	dec    ecx
  4134df:	addr16 loop 0x413488
  4134e2:	push   0xd8000072
  4134e7:	xchg   BYTE PTR [edi],bh
  4134e9:	push   esp
  4134ea:	loope  0x41355e
  4134ec:	push   0x31aabd71
  4134f1:	pop    edi
  4134f2:	ret    0x503d
  4134f5:	ins    DWORD PTR es:[edi],dx
  4134f6:	ret    
  4134f7:	mov    es,WORD PTR [ecx]
  4134f9:	dec    eax
  4134fa:	sahf   
  4134fb:	cmp    cl,BYTE PTR [ebp+0x4e]
  4134fe:	nop
  4134ff:	push   0x5a84005f
  413504:	pop    edi
  413505:	jb     0x413538
  413507:	stc    
  413508:	push   0x6e
  41350a:	xchg   esp,eax
  41350b:	lods   eax,DWORD PTR ds:[esi]
  41350c:	dec    esi
  41350d:	popa   
  41350e:	mov    esi,esi
  413510:	pop    ebp
  413511:	je     0x413494
  413513:	packssdw mm5,QWORD PTR [esi-0x78]
  413517:	lods   eax,DWORD PTR ds:[esi]
  413518:	xor    eax,0x30f47945
  41351d:	dec    esp
  41351e:	ins    BYTE PTR es:[edi],dx
  41351f:	adc    al,0x39
  413521:	add    al,0x76
  413523:	sbb    dl,BYTE PTR cs:[eax+0x76]
  413527:	xor    BYTE PTR [ebx],al
  413529:	inc    eax
  41352a:	push   esi
  41352b:	inc    edx
  41352c:	out    0x3d,eax
  41352e:	cmp    eax,0x56663044
  413533:	dec    esi
  413534:	or     BYTE PTR [ecx+0x52],ch
  413537:	adc    al,0x1a
  413539:	addr16 pop ss
  41353b:	dec    eax
  41353c:	mul    BYTE PTR [ebx+eiz*1+0x39]
  413540:	ret    
  413541:	or     DWORD PTR ds:0x421267da,ebp
  413548:	mov    bl,0x2e
  41354a:	add    BYTE PTR [eax],al
  41354c:	push   ss
  41354d:	cs ret 
  41354f:	data16 cld 
  413551:	inc    edx
  413552:	pop    es
  413553:	inc    ebx
  413554:	or     al,0x31
  413556:	int3   
  413557:	fs pop es
  413559:	cmp    ah,cl
  41355b:	push   ecx
  41355c:	xor    DWORD PTR [ebx-0x42],esp
  41355f:	pop    ebp
  413560:	fld    QWORD PTR [esi-0x78]
  413563:	push   ecx
  413564:	rcr    BYTE PTR [edi-0x5a],cl
  413567:	imul   ecx,esi,0x42
  41356a:	and    DWORD PTR [eax-0x3d],0x5f
  41356e:	mov    bl,0x66
  413570:	mov    ebp,0xf0239334
  413575:	mov    WORD PTR cs:[eax-0x2a],gs
  413579:	sub    eax,0x14a3608b
  41357e:	mov    ecx,DWORD PTR [ecx+eiz*4+0x43]
  413582:	pop    esi
  413583:	ins    DWORD PTR es:[edi],dx
  413584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413585:	xor    ecx,DWORD PTR [edi+0x4]
  413588:	sub    BYTE PTR ds:0x6080615b,0xe7
  41358f:	aaa    
  413590:	outs   dx,BYTE PTR ds:[esi]
  413591:	inc    esp
  413592:	cmp    cl,BYTE PTR [edi-0x6a]
  413595:	dec    eax
  413596:	dec    edx
  413597:	ins    BYTE PTR es:[edi],dx
  413598:	push   ebp
  413599:	add    BYTE PTR [bp+si],bl
  41359c:	es push esi
  41359e:	push   esp
  41359f:	sbb    DWORD PTR ds:0x57107560,ebp
  4135a5:	out    dx,al
  4135a6:	cmove  dx,WORD PTR [esi+ebp*1]
  4135ab:	add    BYTE PTR [edi+0x37],dl
  4135ae:	add    BYTE PTR [esi],dh
  4135b0:	add    BYTE PTR [eax],al
  4135b2:	add    ah,BYTE PTR [ecx+0x46]
  4135b5:	sbb    eax,0x30441405
  4135ba:	add    edx,DWORD PTR [esp+eax*2]
  4135bd:	sub    al,0x6f
  4135bf:	pop    eax
  4135c0:	inc    edi
  4135c1:	sbb    ebp,DWORD PTR ds:0xf1bd5355
  4135c7:	push   ebp
  4135c8:	push   esp
  4135c9:	mov    ecx,0xa1414f32
  4135ce:	sbb    eax,0xe0be7445
  4135d3:	inc    esi
  4135d4:	add    BYTE PTR [edx-0x498bc9e9],bl
  4135da:	or     eax,0x2f956342
  4135df:	xor    BYTE PTR [ebp-0x35],ch
  4135e2:	int    0x2f
  4135e4:	push   ecx
  4135e5:	stos   BYTE PTR es:[edi],al
  4135e6:	cmc    
  4135e7:	arpl   WORD PTR [ebx-0x43],ax
  4135ea:	repz inc edx
  4135ec:	je     0x41357a
  4135ee:	or     al,0x68
  4135f0:	push   eax
  4135f1:	leave  
  4135f2:	xor    al,0xf4
  4135f4:	inc    edi
  4135f5:	xchg   esi,eax
  4135f6:	leave  
  4135f7:	xor    bl,BYTE PTR [eax+ebx*4-0xd]
  4135fb:	ins    DWORD PTR es:[di],dx
  4135fd:	xchg   BYTE PTR [esi+0x327b5f32],dl
  413603:	arpl   WORD PTR [ebp+0x4f],bp
  413606:	add    DWORD PTR [edi+0x5f],0x4560765b
  41360d:	inc    ebp
  41360e:	xchg   esp,eax
  41360f:	xor    bl,BYTE PTR [edi+0x3d]
  413612:	inc    eax
  413613:	push   ebx
  413614:	aas    
  413615:	add    BYTE PTR [eax],al
  413617:	add    BYTE PTR [eax],bl
  413619:	std    
  41361a:	pop    ebx
  41361b:	inc    ebx
  41361c:	cmp    eax,0x4c466164
  413621:	or     BYTE PTR [eax],ah
  413623:	cmp    BYTE PTR ss:[eax],cl
  413626:	jb     0x413697
  413628:	cs pop ebp
  41362a:	outs   dx,DWORD PTR ds:[esi]
  41362b:	jae    0x41366e
  41362d:	aaa    
  41362e:	outs   dx,BYTE PTR ds:[esi]
  41362f:	popa   
  413630:	xor    al,0xfc
  413632:	dec    esp
  413633:	inc    ebx
  413634:	cld    
  413635:	imul   ebp,DWORD PTR ss:[edx+ebp*1+0x31],0x72
  41363b:	add    BYTE PTR [ebx],bl
  41363d:	aaa    
  41363e:	data16 je 0x4135f0
  413641:	xor    dh,BYTE PTR [edx+0x65]
  413644:	xor    al,0xff
  413646:	imul   ebp,DWORD PTR [edi+0x6a],0x32
  41364a:	ins    BYTE PTR es:[edi],dx
  41364b:	push   ebx
  41364c:	retf   
  41364d:	push   edx
  41364e:	push   eax
  41364f:	inc    ebp
  413650:	les    edx,FWORD PTR [ecx+esi*2+0x74]
  413654:	ins    DWORD PTR es:[edi],dx
  413655:	call   DWORD PTR [ebx+0x50]
  413658:	sub    BYTE PTR [edi],cl
  41365a:	and    BYTE PTR [eax+0x67],cl
  41365d:	ss popa 
  41365f:	pop    esp
  413660:	leave  
  413661:	push   esp
  413662:	push   esp
  413663:	outs   dx,DWORD PTR ds:[esi]
  413664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413665:	xor    eax,0x11ba6162
  41366a:	dec    edi
  41366b:	outs   dx,DWORD PTR ds:[esi]
  41366c:	scas   al,BYTE PTR es:[edi]
  41366d:	dec    ebp
  41366e:	jae    0x4136d1
  413670:	stos   BYTE PTR es:[edi],al
  413671:	pop    esi
  413672:	pop    esp
  413673:	inc    edi
  413674:	les    esi,FWORD PTR [edi]
  413676:	bound  esp,QWORD PTR [ecx-0x5c]
  413679:	add    al,0x3f
  41367b:	inc    ecx
  41367c:	add    BYTE PTR [eax],al
  41367e:	cwde   
  41367f:	(bad)  
  413680:	pop    ebx
  413681:	inc    ebx
  413682:	lods   eax,DWORD PTR ds:[esi]
  413683:	dec    ebp
  413684:	popa   
  413685:	inc    esi
  413686:	mov    esp,0x28372000
  41368b:	or     BYTE PTR [edx+0x6f],dh
  41368e:	outs   dx,BYTE PTR ds:[esi]
  41368f:	pop    ebp
  413690:	outs   dx,DWORD PTR ds:[esi]
  413691:	jae    0x4136c4
  413693:	push   esp
  413694:	arpl   WORD PTR [esi-0x70],bp
  413697:	push   DWORD PTR [edi]
  413699:	dec    edi
  41369a:	jb     0x4136bb
  41369c:	arpl   WORD PTR [ebp-0x7b],bp
  41369f:	dec    ecx
  4136a0:	popa   
  4136a1:	jb     0x4136d4
  4136a3:	sbb    ah,BYTE PTR [ebx+0x66]
  4136a6:	pop    ebp
  4136a7:	push   es
  4136a8:	popa   
  4136a9:	jb     0x4136ff
  4136ab:	push   edi
  4136ac:	cmp    ebp,DWORD PTR [esi+eax*2+0x9]
  4136b0:	popa   
  4136b1:	ins    BYTE PTR es:[edi],dx
  4136b2:	(bad)  
  4136b3:	jmp    0x733e:0xef6c5040
  4136ba:	inc    ebp
  4136bb:	adc    BYTE PTR [esi],bh
  4136bd:	push   esp
  4136be:	popa   
  4136bf:	retf   
  4136c0:	sbb    DWORD PTR [eax],esp
  4136c2:	stc    
  4136c3:	adc    eax,0x1c056365
  4136c8:	aas    
  4136c9:	push   esp
  4136ca:	push   cs
  4136cb:	out    0x65,al
  4136cd:	bound  edx,QWORD PTR [eax]
  4136cf:	fld    DWORD PTR [ecx]
  4136d1:	push   ecx
  4136d2:	push   ds
  4136d3:	int    0x4d
  4136d5:	jne    0x4136e7
  4136d7:	fstp   DWORD PTR [esi+0x5c]
  4136da:	mul    dh
  4136dc:	bound  edx,QWORD PTR fs:[eax]
  4136df:	iret   
  4136e0:	xor    BYTE PTR [ecx+0x0],al
  4136e3:	add    al,dh
  4136e5:	call   0x634d:0x87f25c3e
  4136ec:	idiv   DWORD PTR [esi+0x31]
  4136ef:	and    BYTE PTR [ecx],bl
  4136f1:	retf   
  4136f2:	xor    DWORD PTR [edx-0x22],esi
  4136f5:	mov    WORD PTR [esi+0x71],ds
  4136f8:	ret    0x6493
  4136fb:	outs   dx,BYTE PTR ds:[esi]
  4136fc:	shl    BYTE PTR [esi-0x590db0cb],1
  413702:	fs ins DWORD PTR es:[edi],dx
  413704:	popf   
  413705:	(bad)  
  413706:	bound  esi,QWORD PTR [edx+0x31]
  413709:	mov    DWORD PTR [esp+ebp*2],edi
  41370c:	mov    ss,WORD PTR [ecx+ecx*2]
  41370f:	test   DWORD PTR gs:[edi+0x2a],esp
  413713:	inc    ebp
  413714:	popa   
  413715:	push   ecx
  413716:	xor    eax,DWORD PTR [edi-0x7e]
  413719:	inc    eax
  41371a:	inc    esp
  41371b:	dec    edx
  41371c:	gs fs out 0x2f,eax
  413720:	ins    BYTE PTR es:[edi],dx
  413721:	sub    BYTE PTR [esi+0x66],cl
  413724:	mov    gs,WORD PTR [eax]
  413726:	sbb    al,BYTE PTR [edi+0x26]
  413729:	fs and al,0x30
  41372c:	jo     0x41376f
  41372e:	sbb    ebp,DWORD PTR [ecx+0x6f]
  413731:	pusha  
  413732:	aaa    
  413733:	and    al,0x61
  413735:	inc    esi
  413736:	push   es
  413737:	add    al,0x65
  413739:	push   ebx
  41373a:	sti    
  41373b:	bound  edx,QWORD PTR [ebx+0x35]
  41373e:	adc    esi,DWORD PTR [edi]
  413740:	jo     0x413797
  413742:	pop    ss
  413743:	dec    ecx
  413744:	or     eax,0x57fc57
  413749:	add    BYTE PTR [edx],dl
  41374b:	push   edx
  41374c:	adc    esi,DWORD PTR [ecx+edx*2]
  41374f:	dec    eax
  413750:	rcl    BYTE PTR [edi+0x12],1
  413753:	adc    al,0xbb
  413755:	inc    esi
  413756:	add    al,BYTE PTR [eax-0x34]
  413759:	dec    ecx
  41375a:	frstor [ebx-0x19]
  41375d:	das    
  41375e:	add    BYTE PTR [ecx],ch
  413760:	adc    eax,0xe73fd668
  413765:	fdiv   QWORD PTR ss:[ecx]
  413768:	mov    ebx,0xc446065a
  41376d:	das    
  41376e:	mul    DWORD PTR [edi]
  413770:	mov    BYTE PTR [esi-0x37],dl
  413773:	push   ecx
  413774:	mov    edi,0xe706ed33
  413779:	ss aam 0x31
  41377c:	xchg   ebx,eax
  41377d:	pop    edx
  41377e:	fiadd  WORD PTR [ebp-0x74]
  413781:	das    
  413782:	out    dx,eax
  413783:	daa    
  413784:	mov    BYTE PTR [esi-0x67],dl
  413787:	push   edx
  413788:	add    BYTE PTR [ecx+0x7e511462],dl
  41378e:	mov    BYTE PTR [eax+0x75],al
  413791:	dec    eax
  413792:	jg     0x4137cb
  413794:	pop    esp
  413795:	daa    
  413796:	xchg   ecx,eax
  413797:	pop    ebx
  413798:	jno    0x4137db
  41379a:	jnp    0x4137f8
  41379c:	push   eax
  41379d:	sub    eax,0x57471419
  4137a2:	pop    esi
  4137a3:	inc    eax
  4137a4:	pop    edi
  4137a5:	dec    ebp
  4137a6:	push   ecx
  4137a7:	aaa    
  4137a8:	jb     0x4137d7
  4137aa:	dec    esp
  4137ab:	inc    eax
  4137ac:	push   0x54000019
  4137b1:	inc    eax
  4137b2:	push   0x745b82e9
  4137b7:	adc    DWORD PTR ds:0x691a6e53,esi
  4137bd:	pop    ebx
  4137be:	ins    BYTE PTR es:[edi],dx
  4137bf:	std    
  4137c0:	adc    ah,BYTE PTR [edi+ebx*2-0x3]
  4137c4:	pop    edx
  4137c5:	adc    al,0x44
  4137c7:	or     BYTE PTR [ecx],cl
  4137c9:	pop    ebx
  4137ca:	inc    esi
  4137cb:	push   es
  4137cc:	adc    DWORD PTR [eax],esi
  4137ce:	arpl   bx,di
  4137d0:	xor    bl,BYTE PTR [eax+0x51]
  4137d3:	sar    dh,1
  4137d5:	ss jno 0x4137e7
  4137d8:	sbb    DWORD PTR [ebx+0x74],ebx
  4137db:	jmp    0xc0b48336
  4137e0:	pop    ss
  4137e1:	sub    eax,0x400dcd2e
  4137e6:	add    BYTE PTR [ebp-0x428eccd6],bl
  4137ec:	rol    DWORD PTR [ebp+0x77],cl
  4137ef:	call   esi
  4137f1:	pop    edx
  4137f2:	je     0x4137dd
  4137f4:	push   es
  4137f5:	push   edx
  4137f6:	ins    BYTE PTR es:[edi],dx
  4137f7:	mov    bh,ah
  4137f9:	sub    eax,DWORD PTR [esi-0x4f]
  4137fc:	add    bl,BYTE PTR [eax+0x31]
  4137ff:	jmp    0xad8a12
  413804:	test   eax,0xd0466861
  413809:	add    eax,0xea18345c
  41380e:	inc    ebp
  41380f:	imul   ebx,DWORD PTR [esp+ebp*1+0x695a],0x5d347c
  41381a:	dec    esp
  41381b:	pop    edi
  41381c:	gs je  0x413894
  41381f:	pop    ecx
  413820:	pop    ebp
  413821:	outs   dx,BYTE PTR ds:[esi]
  413822:	imul   ebp,DWORD PTR [ebx],0x481e7261
  413828:	imul   ebp,DWORD PTR [eax+ebx*8-0x17],0x317b6571
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	je     0x41384e
  413833:	xor    DWORD PTR [edx+0x76],esi
  413836:	and    eax,0x102e6f62
  41383b:	pop    ecx
  41383c:	ins    BYTE PTR es:[edi],dx
  41383d:	add    ah,bh
  41383f:	sub    eax,0x4a356c65
  413844:	gs ins BYTE PTR es:[edi],dx
  413846:	sbb    al,0x35
  413848:	cs js  0x413888
  41384b:	xor    al,0x0
  41384d:	push   ebx
  41384e:	das    
  41384f:	cs je  0x4138c9
  413852:	sub    DWORD PTR [edx+0x61],esp
  413855:	pop    esp
  413856:	(bad)  
  413857:	pop    esi
  413858:	ins    BYTE PTR es:[edi],dx
  413859:	gs jb  0x4138ba
  41385c:	ins    BYTE PTR es:[edi],dx
  41385d:	ins    BYTE PTR es:[edi],dx
  41385e:	jns    0x413875
  413860:	dec    edi
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	jbe    0x4138c5
  413864:	jae    0x4138c7
  413866:	mov    edx,0x81465c32
  41386b:	pop    ecx
  41386c:	popa   
  41386d:	pop    edx
  41386e:	jno    0x4138c9
  413870:	ins    BYTE PTR es:[edi],dx
  413871:	popa   
  413872:	sub    BYTE PTR [edi+0x6c],cl
  413875:	imul   esp,DWORD PTR [ebp+0x7433],0x6f338100
  41387f:	je     0x4138b2
  413881:	mov    WORD PTR [ebp+0x6c],ds
  413884:	fisubr WORD PTR [esi+0x5a]
  413887:	jb     0x4138ba
  413889:	and    DWORD PTR [eax+0x71],0xffffffa5
  41388d:	stos   DWORD PTR es:[edi],eax
  41388e:	ss jno 0x41381d
  413891:	cmp    eax,0x3e905001
  413896:	push   esp
  413897:	add    BYTE PTR [ecx+0x31745662],al
  41389d:	std    
  41389e:	imul   edx,DWORD PTR fs:[esi+0x75206557],0x54
  4138a6:	push   esi
  4138a7:	add    BYTE PTR [edx+0x48],ah
  4138aa:	push   esi
  4138ab:	jbe    0x413901
  4138ad:	std    
  4138ae:	and    edx,DWORD PTR [eax+ebp*2-0x5]
  4138b2:	add    BYTE PTR fs:[edx+0x4c765650],al
  4138b9:	sbb    eax,0x1e5e4822
  4138be:	pop    eax
  4138bf:	add    BYTE PTR [edx+0x8],ah
  4138c2:	push   esi
  4138c3:	jbe    0x413919
  4138c5:	sbb    eax,0x8425322
  4138ca:	push   esi
  4138cb:	add    BYTE PTR [edx],al
  4138cd:	adc    BYTE PTR [esi+0x76],dl
  4138d0:	or     al,0xbd
  4138d2:	pop    ds
  4138d3:	push   eax
  4138d4:	adc    BYTE PTR [esi-0x37fdffac],bh
  4138da:	push   ebx
  4138db:	jbe    0x4138f1
  4138dd:	fstp   QWORD PTR [edi]
  4138df:	push   eax
  4138e0:	add    BYTE PTR [eax],al
  4138e2:	push   ss
  4138e3:	fst    QWORD PTR [ebp+0x0]
  4138e6:	loope  0x4138b3
  4138e8:	push   ebp
  4138e9:	push   0x72669e31
  4138ee:	out    0xcf,eax
  4138f0:	push   ebx
  4138f1:	push   esp
  4138f2:	call   0xed419f71
  4138f7:	retf   
  4138f8:	push   esp
  4138f9:	je     0x41390c
  4138fb:	adc    al,0xba
  4138fd:	retw   
  4138ff:	inc    ecx
  413900:	test   BYTE PTR [ebp+0x11],dl
  413903:	dec    esp
  413904:	xchg   BYTE PTR [ebp+eax*8+0x13],dl
  413908:	fwait
  413909:	(bad)  
  41390a:	sar    BYTE PTR [edi],0xc7
  41390d:	xor    al,0x92
  41390f:	inc    edx
  413910:	jne    0x413978
  413912:	mov    ds:0x92549bf4,eax
  413917:	inc    edx
  413918:	out    0x3f,eax
  41391a:	jbe    0x41395f
  41391c:	pop    ebx
  41391d:	and    al,0x60
  41391f:	xor    DWORD PTR [ecx+0x56],ebx
  413922:	xchg   edx,eax
  413923:	inc    edx
  413924:	pop    es
  413925:	xor    al,0x5e
  413927:	inc    ebx
  413928:	pop    edx
  413929:	add    al,0x65
  41392b:	xor    eax,0x6311583a
  413930:	inc    esp
  413931:	push   edx
  413932:	pop    edi
  413933:	xor    DWORD PTR [ecx],edi
  413935:	and    al,0x81
  413937:	daa    
  413938:	cmp    DWORD PTR [eax+0x31],ebx
  41393b:	dec    eax
  41393c:	or     BYTE PTR [ebx+0x45],dl
  41393f:	hlt    
  413940:	cmp    DWORD PTR [ecx+0x43],ebp
  413943:	ds or  al,0x52
  413946:	add    BYTE PTR [eax],al
  413948:	adc    DWORD PTR [eax+ecx*1+0x58],esp
  41394c:	dec    ecx
  41394d:	adc    al,0x33
  41394f:	and    BYTE PTR gs:[eax-0x39],al
  413953:	xor    dl,BYTE PTR [edx]
  413955:	inc    edx
  413956:	std    
  413957:	push   0x4d12f423
  41395c:	and    DWORD PTR [ecx],esi
  41395e:	out    0x45,eax
  413960:	in     eax,0x63
  413962:	pop    es
  413963:	ds out 0x3d,al
  413966:	shl    BYTE PTR [esi-0x22],0x3f
  41396a:	mov    esi,0x9b4e3151
  41396f:	xor    edx,DWORD PTR [ecx]
  413971:	push   ebx
  413972:	into   
  413973:	pusha  
  413974:	fidiv  DWORD PTR [eax+eax*1]
  413977:	(bad)  
  413978:	(bad)  
  413979:	xor    dh,BYTE PTR [edx-0x17]
  41397c:	int3   
  41397d:	aas    
  41397e:	jo     0x413915
  413980:	in     eax,dx
  413981:	inc    esp
  413982:	je     0x413953
  413984:	fidivr WORD PTR [ebx]
  413986:	je     0x413971
  413988:	push   cs
  413989:	push   edx
  41398a:	jae    0x413a09
  41398c:	(bad)  
  41398d:	xor    dh,BYTE PTR [ecx+ebx*4-0x80]
  413991:	sub    DWORD PTR [ebp-0x79],ebp
  413994:	push   edx
  413995:	gs ins DWORD PTR es:[edi],dx
  413997:	pop    DWORD PTR [esi-0x7684a0bf]
  41399d:	adc    al,0x2e
  41399f:	dec    ebp
  4139a0:	xchg   esp,eax
  4139a1:	inc    eax
  4139a2:	add    BYTE PTR [edi],cl
  4139a4:	xchg   ebx,eax
  4139a5:	inc    esp
  4139a6:	jno    0x413991
  4139a8:	inc    ebx
  4139a9:	sub    DWORD PTR [esi+0x55],esp
  4139ac:	add    BYTE PTR [eax],al
  4139ae:	pop    esi
  4139af:	push   edi
  4139b0:	jb     0x4139fe
  4139b2:	and    DWORD PTR [edx+0x50],edx
  4139b5:	daa    
  4139b6:	sub    DWORD PTR [esp+ebx*2+0x2b],esp
  4139ba:	js     0x4139e4
  4139bc:	ins    BYTE PTR es:[edi],dx
  4139bd:	inc    esp
  4139be:	jns    0x4139b4
  4139c0:	dec    edi
  4139c1:	sbb    ebp,DWORD PTR [esi+0x29]
  4139c4:	leavew 
  4139c6:	ins    BYTE PTR es:[edi],dx
  4139c7:	pusha  
  4139c8:	push   eax
  4139c9:	xor    eax,0xff675770
  4139ce:	xor    ah,BYTE PTR [ebp+0x6d]
  4139d1:	wbinvd 
  4139d3:	inc    ecx
  4139d4:	pop    edi
  4139d5:	sti    
  4139d6:	sbb    DWORD PTR [eax+0x42],ebx
  4139d9:	cld    
  4139da:	(bad)  
  4139db:	daa    
  4139dc:	arpl   bp,si
  4139de:	bound  eax,QWORD PTR [edx+0x6d]
  4139e1:	(bad)  
  4139e2:	adc    al,0xf4
  4139e4:	push   eax
  4139e5:	into   
  4139e6:	or     al,0x40
  4139e8:	jne    0x4139b2
  4139ea:	loopne 0x413a1e
  4139ec:	pop    esp
  4139ed:	stos   DWORD PTR es:[edi],eax
  4139ee:	fldenv [edi]
  4139f0:	ins    BYTE PTR es:[edi],dx
  4139f1:	add    BYTE PTR [ebp+0x5e],bh
  4139f4:	push   eax
  4139f5:	jb     0x413a6e
  4139f7:	push   ebp
  4139f8:	data16 and BYTE PTR [esi-0x74dfb002],cl
  4139ff:	push   esi
  413a00:	gs cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413a03:	pop    esi
  413a04:	pop    esp
  413a05:	dec    ebp
  413a06:	mov    ecx,0x7b006e57
  413a0b:	push   ebp
  413a0c:	data16 je 0x4139ae
  413a0f:	das    
  413a10:	jb     0x413a77
  413a12:	add    BYTE PTR [eax],al
  413a14:	aam    0x53
  413a16:	push   eax
  413a17:	inc    esi
  413a18:	mov    esp,0x9d425c01
  413a1d:	push   ebp
  413a1e:	ins    BYTE PTR es:[edi],dx
  413a1f:	gs pushf 
  413a21:	icebp  
  413a22:	dec    edi
  413a23:	jb     0x413a8c
  413a25:	push   edi
  413a26:	data16 and BYTE PTR [esi-0x4],cl
  413a2a:	dec    edi
  413a2b:	pop    esp
  413a2c:	push   edi
  413a2d:	pusha  
  413a2e:	je     0x413a99
  413a30:	aaa    
  413a31:	push   esi
  413a32:	outs   dx,DWORD PTR ds:[esi]
  413a33:	add    BYTE PTR [ebx+0x57],cl
  413a36:	data16 je 0x413a58
  413a39:	xor    DWORD PTR [edx+0x65],esi
  413a3c:	inc    esp
  413a3d:	push   edx
  413a3e:	jno    0x413aac
  413a40:	adc    al,0x2d
  413a42:	je     0x413a94
  413a44:	sub    dl,BYTE PTR [edi+0x6b]
  413a47:	data16 clc 
  413a49:	add    al,0x6b
  413a4b:	data16 sbb al,0x5f
  413a4e:	pop    ebp
  413a4f:	jb     0x413a7e
  413a51:	add    al,0x42
  413a53:	jne    0x413a99
  413a55:	xor    al,0x61
  413a57:	je     0x413aa1
  413a59:	bound  ebp,QWORD PTR [ebx+0x6f]
  413a5c:	cs lock inc ebp
  413a5f:	push   esp
  413a60:	cmp    al,dh
  413a62:	ds ins BYTE PTR es:[edi],dx
  413a64:	popa   
  413a65:	outs   dx,BYTE PTR cs:[esi]
  413a67:	je     0x413a2d
  413a69:	clc    
  413a6a:	outs   dx,DWORD PTR ds:[esi]
  413a6b:	je     0x413a9e
  413a6d:	aam    0x5c
  413a6f:	outs   dx,BYTE PTR ds:[esi]
  413a70:	add    ch,BYTE PTR [ebx+0x76d76d30]
  413a76:	push   esp
  413a77:	pop    edi
  413a78:	add    BYTE PTR [eax],al
  413a7a:	jecxz  0x413a4b
  413a7c:	sub    eax,0x35650142
  413a81:	push   eax
  413a82:	xor    DWORD PTR [edi+0x79c57162],edx
  413a88:	data16 jno 0x413a4d
  413a8b:	mov    ds:0x93f76e5c,eax
  413a90:	pop    ebp
  413a91:	arpl   WORD PTR [ecx],si
  413a93:	jp     0x413aef
  413a95:	je     0x413a2b
  413a97:	cmp    al,BYTE PTR [ebp+0x67]
  413a9a:	mov    ds:0xa26e3aab,eax
  413a9f:	aaa    
  413aa0:	bound  ebp,QWORD PTR [ebp+eax*4+0x6f]
  413aa4:	pop    edx
  413aa5:	jb     0x413ae7
  413aa7:	stos   DWORD PTR es:[edi],eax
  413aa8:	sbb    edi,DWORD PTR [eax-0x6c]
  413aab:	inc    edi
  413aac:	add    al,0x5c
  413aae:	bound  edx,QWORD PTR [eax+0x61]
  413ab1:	jb     0x413b30
  413ab3:	in     eax,dx
  413ab4:	aaa    
  413ab5:	push   eax
  413ab6:	xor    ebp,esp
  413ab8:	pusha  
  413ab9:	jbe    0x413b11
  413abb:	stc    
  413abc:	pop    eax
  413abd:	je     0x413b13
  413abf:	cli    
  413ac0:	sbb    eax,0x3ff5064
  413ac5:	dec    eax
  413ac6:	pop    eax
  413ac7:	sbb    bl,BYTE PTR [eax+0x6d]
  413aca:	inc    ebx
  413acb:	hlt    
  413acc:	sbb    eax,0x4175064
  413ad1:	pop    edi
  413ad2:	dec    ebp
  413ad3:	rsqrtps xmm4,XMMWORD PTR [edx+0x1a]
  413ad7:	frstor [ebp+0x5f]
  413ada:	sbb    eax,0x7352ab
  413adf:	add    BYTE PTR [eax],cl
  413ae1:	or     dl,BYTE PTR [edi+0x2e]
  413ae4:	or     eax,0xed00580c
  413ae9:	adc    edi,DWORD PTR [ebx-0x31cdfcaa]
  413aef:	inc    ebp
  413af0:	in     eax,0x63
  413af2:	out    0x30,eax
  413af4:	add    al,0x2e
  413af6:	rcl    DWORD PTR [esi+ecx*1+0x42],cl
  413afa:	int3   
  413afb:	das    
  413afc:	std    
  413afd:	ds mov ecx,0x9b4dcc61
  413b03:	xor    esi,DWORD PTR [ecx]
  413b05:	sub    edi,DWORD PTR [ebp-0x6ccd3ab0]
  413b0b:	pop    edi
  413b0c:	shl    DWORD PTR [edx],0x93
  413b0f:	pop    ebx
  413b10:	xor    DWORD PTR [ecx-0x7a],esp
  413b13:	gs mov ebp,0x9251883c
  413b19:	push   eax
  413b1a:	call   0x7745:0x9b359d5c
  413b21:	pop    edx
  413b22:	fwait
  413b23:	xor    esi,DWORD PTR [ecx]
  413b25:	push   edi
  413b26:	jns    0x413b8e
  413b28:	xchg   ebp,eax
  413b29:	cmp    DWORD PTR [ebp+0x50],edx
  413b2c:	mov    ?,WORD PTR ds:0x405e374b
  413b32:	pop    ebx
  413b33:	add    al,0x70
  413b35:	es inc esp
  413b37:	pusha  
  413b38:	push   edx
  413b39:	inc    edx
  413b3a:	cmp    ebx,DWORD PTR [ebp-0x7a]
  413b3d:	inc    eax
  413b3e:	sub    bl,BYTE PTR [edx+edx*2+0x37]
  413b42:	inc    edx
  413b43:	add    al,0x0
  413b45:	add    BYTE PTR [eax+0x44504543],al
  413b4b:	xor    eax,0x47656119
  413b50:	push   cs
  413b51:	push   eax
  413b52:	pop    esi
  413b53:	push   eax
  413b54:	sub    eax,0x37486f42
  413b59:	sub    ah,bh
  413b5b:	and    edi,ebx
  413b5d:	pop    esp
  413b5e:	adc    al,0x42
  413b60:	cli    
  413b61:	add    eax,DWORD PTR [ecx]
  413b63:	xor    eax,0x28fffa00
  413b68:	ins    DWORD PTR es:[edi],dx
  413b69:	sti    
  413b6a:	out    dx,al
  413b6b:	adc    edx,DWORD PTR [ebx-0x26]
  413b6e:	adc    DWORD PTR [esi],esp
  413b70:	dec    esi
  413b71:	enter  0x36d9,0x0
  413b75:	mov    eax,ds:0xa87424db
  413b7a:	push   cs
  413b7b:	es jno 0x413b67
  413b7e:	sbb    al,0x37
  413b80:	imul   ecx,esi,0xffffffee
  413b83:	ss inc esp
  413b85:	sar    ah,0x13
  413b88:	push   eax
  413b89:	mov    esi,0xb10027e4
  413b8e:	jmp    0x413bb4
  413b90:	je     0x413b41
  413b92:	aad    0x3e
  413b94:	arpl   cx,bp
  413b96:	add    al,BYTE PTR [ecx+0x72]
  413b99:	xchg   ebp,eax
  413b9a:	xor    al,BYTE PTR [edi+0x71]
  413b9d:	mov    WORD PTR [edx+eax*2+0x5f],?
  413ba1:	mov    WORD PTR [ecx+0x7f885014],ss
  413ba7:	and    eax,0x7e75
  413bac:	cmp    BYTE PTR fs:[eax],al
  413baf:	xor    DWORD PTR [edx+0x25],ebp
  413bb2:	je     0x413bd9
  413bb4:	pop    esp
  413bb5:	es dec esi
  413bb7:	dec    eax
  413bb8:	pop    eax
  413bb9:	aaa    
  413bba:	add    BYTE PTR [edx],bh
  413bbc:	mov    bh,BYTE PTR [edx]
  413bbe:	je     0x413bfe
  413bc0:	dec    esp
  413bc1:	arpl   WORD PTR es:0x4f664176,bx
  413bc8:	push   eax
  413bc9:	aaa    
  413bca:	inc    ecx
  413bcb:	xor    al,0x65
  413bcd:	hlt    
  413bce:	push   eax
  413bcf:	push   ss
  413bd0:	push   ebx
  413bd1:	sub    BYTE PTR [ebp+0x8],dh
  413bd4:	addr16 aaa 
  413bd6:	pop    esp
  413bd7:	and    BYTE PTR [ebx+0x28],bl
  413bda:	arpl   WORD PTR [ebx],bx
  413bdc:	or     esi,DWORD PTR [edi]
  413bde:	je     0x413be0
  413be0:	dec    esp
  413be1:	call   0x5177ab57
  413be6:	ins    BYTE PTR es:[edi],dx
  413be7:	gs fwait
  413be9:	push   ss
  413bea:	dec    edi
  413beb:	outs   dx,DWORD PTR ds:[esi]
  413bec:	ss inc esp
  413bee:	jae    0x413c51
  413bf0:	push   0x33
  413bf2:	pop    esp
  413bf3:	inc    esi
  413bf4:	(bad)  
  413bf5:	out    0x52,al
  413bf7:	popa   
  413bf8:	pop    edx
  413bf9:	xor    ebx,DWORD PTR [ebx+eax*2-0x31]
  413bfd:	call   0xe7058242
  413c02:	pop    ebx
  413c03:	push   ebx
  413c04:	and    DWORD PTR [edx+0x61],0x6aee4873
  413c0b:	jae    0x413b91
  413c0d:	push   ss
  413c0e:	push   ecx
  413c0f:	jae    0x413c11
  413c11:	add    BYTE PTR [ebp-0x50afffb8],dh
  413c17:	dec    eax
  413c18:	je     0x413c1a
  413c1a:	js     0x413c01
  413c1c:	dec    DWORD PTR [edi-0x3c]
  413c1f:	dec    ebp
  413c20:	push   edx
  413c21:	add    bl,cl
  413c23:	jmp    0x666b:0x47980047
  413c2a:	mov    cl,0x49
  413c2c:	popa   
  413c2d:	jae    0x413bfd
  413c2f:	pop    ebp
  413c30:	imul   ebp,DWORD PTR [eax+ebx*1-0x6],0xf8385445
  413c38:	inc    eax
  413c39:	js     0x413c93
  413c3b:	dec    esp
  413c3c:	imul   esi,DWORD PTR [edx+0x75],0x4a
  413c40:	add    BYTE PTR [ebx+0x7f],dl
  413c43:	ss je  0x413cbd
  413c46:	imul   ecx,DWORD PTR [edx+0x61],0x4fe4065c
  413c4d:	and    BYTE PTR ds:0x1f6c7060,dl
  413c53:	dec    edx
  413c54:	popa   
  413c55:	jb     0x413c53
  413c57:	push   ebp
  413c58:	push   esp
  413c59:	push   eax
  413c5a:	xor    ebx,ebx
  413c5c:	ds js  0x413c80
  413c5f:	scas   eax,DWORD PTR es:[edi]
  413c60:	pop    eax
  413c61:	jb     0x413c6f
  413c63:	lods   eax,DWORD PTR ds:[esi]
  413c64:	and    eax,0x5cad0e55
  413c69:	jno    0x413c8c
  413c6b:	sbb    al,0x63
  413c6d:	arpl   bp,bp
  413c6f:	cmovb  eax,DWORD PTR [ecx-0x23]
  413c73:	leave  
  413c74:	pop    eax
  413c75:	ins    BYTE PTR es:[edi],dx
  413c76:	add    BYTE PTR [eax],al
  413c78:	repz fist DWORD PTR [ebx+0x2b]
  413c7c:	inc    ebx
  413c7d:	or     eax,0xc7f30010
  413c82:	dec    ebp
  413c83:	je     0x413c5b
  413c85:	enter  0x54,0x2
  413c89:	loop   0x413cea
  413c8b:	je     0x413c6b
  413c8d:	fist   DWORD PTR [ebx+0x63]
  413c90:	in     eax,dx
  413c91:	js     0x413cc0
  413c93:	push   eax
  413c94:	adc    DWORD PTR [eax-0x5e328fb7],eax
  413c9a:	push   ebx
  413c9b:	arpl   bx,ax
  413c9d:	xor    WORD PTR [edx-0x62],si
  413ca1:	cdq    
  413ca2:	pop    edx
  413ca3:	ins    BYTE PTR es:[edi],dx
  413ca4:	mov    WORD PTR [esi],gs
  413ca6:	add    DWORD PTR [eax-0x70],edx
  413ca9:	cs push esp
  413cab:	jne    0x413c33
  413cad:	sub    eax,0x9c61005d
  413cb2:	push   esp
  413cb3:	jno    0x413d33
  413cb5:	dec    edx
  413cb6:	push   esi
  413cb7:	fs gs xor al,0x54
  413cbb:	arpl   WORD PTR [ecx],si
  413cbd:	repz push esi
  413cbf:	jno    0x413d26
  413cc1:	mov    ebx,0x444e6d35
  413cc6:	pop    edx
  413cc7:	add    BYTE PTR [ecx+0x31745662],al
  413ccd:	hlt    
  413cce:	pop    ecx
  413ccf:	addr16 inc ebp
  413cd1:	push   esp
  413cd2:	popa   
  413cd3:	ins    BYTE PTR es:[edi],dx
  413cd4:	popa   
  413cd5:	adc    al,0x8
  413cd7:	push   eax
  413cd8:	dec    ecx
  413cd9:	adc    al,0x25
  413cdb:	push   eax
  413cdc:	add    BYTE PTR [eax],al
  413cde:	inc    ecx
  413cdf:	inc    ebp
  413ce0:	add    BYTE PTR [eax+0x12],dl
  413ce3:	add    cl,BYTE PTR [edi]
  413ce5:	push   edi
  413ce6:	adc    eax,0x23422314
  413ceb:	cmp    eax,DWORD PTR [esi]
  413ced:	arpl   WORD PTR ds:0x5f03ba37,bx
  413cf3:	cmp    edi,ebp
  413cf5:	pop    edx
  413cf6:	xor    DWORD PTR [eax-0x43],edx
  413cf9:	bound  ecx,QWORD PTR [edi]
  413cfb:	pop    eax
  413cfc:	loopne 0x413d5a
  413cfe:	adc    dl,BYTE PTR [eax-0x56]
  413d01:	pop    eax
  413d02:	fistp  QWORD PTR [ecx]
  413d04:	shl    BYTE PTR [eax+0x5],0x45
  413d08:	int3   
  413d09:	push   esp
  413d0a:	loopne 0x413d46
  413d0c:	into   
  413d0d:	pop    ecx
  413d0e:	loopne 0x413d23
  413d10:	xchg   ebx,eax
  413d11:	xor    al,0xd2
  413d13:	and    al,0xba
  413d15:	pop    edx
  413d16:	aam    0x41
  413d18:	call   0xbc4f:0x8540e003
  413d1f:	xor    bl,BYTE PTR [ecx-0x77b972a2]
  413d25:	pop    ecx
  413d26:	ins    DWORD PTR es:[edi],dx
  413d27:	sub    eax,0x437d5e92
  413d2c:	test   BYTE PTR [edx+eiz*4+0x22],ah
  413d30:	mov    WORD PTR [ecx+0x69],es
  413d33:	adc    al,0xaa
  413d35:	pop    eax
  413d36:	xchg   edi,eax
  413d37:	ss push eax
  413d39:	pop    edi
  413d3a:	push   ecx
  413d3b:	inc    esp
  413d3c:	dec    eax
  413d3d:	push   eax
  413d3e:	mov    DWORD PTR [esp+edi*1],edx
  413d41:	pop    eax
  413d42:	add    BYTE PTR [eax],al
  413d44:	and    cl,BYTE PTR gs:[eax+0x3e]
  413d48:	mov    DWORD PTR [edi+eiz*8+0x27],eax
  413d4c:	pusha  
  413d4d:	cmp    eax,0xfe606133
  413d52:	push   DWORD PTR [eax]
  413d54:	push   0x70d0040
  413d59:	dec    eax
  413d5a:	push   eax
  413d5b:	cmp    esp,DWORD PTR [eax+0x25]
  413d5e:	push   0x712300e9
  413d63:	add    DWORD PTR [edx+0x37],esp
  413d66:	je     0x413d6c
  413d68:	aas    
  413d69:	sub    al,0x6b
  413d6b:	adc    eax,0xfb634535
  413d70:	in     al,0x32
  413d72:	jb     0x413d5d
  413d74:	inc    ecx
  413d75:	and    eax,0x4edcfb63
  413d7a:	imul   ecx,esp,0x32
  413d7d:	inc    esp
  413d7e:	pop    edi
  413d7f:	(bad)  
  413d81:	sub    BYTE PTR [ebp-0x25],ch
  413d84:	push   cs
  413d85:	adc    al,0x46
  413d87:	aad    0x2
  413d89:	inc    esp
  413d8a:	ins    DWORD PTR es:[edi],dx
  413d8b:	mov    ebx,0xce5113ee
  413d90:	hlt    
  413d91:	daa    
  413d92:	jne    0x413d5c
  413d94:	loopne 0x413dc8
  413d96:	pop    esp
  413d97:	stos   BYTE PTR es:[edi],al
  413d98:	loopne 0x413dc0
  413d9a:	arpl   WORD PTR [ebx-0x749cb6ea],bx
  413da0:	add    esi,DWORD PTR [edi]
  413da2:	je     0x413d30
  413da4:	bound  esp,QWORD PTR [ebx]
  413da6:	bound  edi,QWORD PTR [ebp+0x0]
  413da9:	add    BYTE PTR [ebp-0x7f7397db],al
  413daf:	adc    al,0x5c
  413db1:	stos   DWORD PTR es:[edi],eax
  413db2:	jne    0x413ddc
  413db4:	dec    ecx
  413db5:	and    BYTE PTR [ebx+esi*1+0x78],0xe9
  413dba:	nop
  413dbb:	aaa    
  413dbc:	je     0x413e10
  413dbe:	pop    esp
  413dbf:	arpl   WORD PTR ds:[ecx+0x1f],sp
  413dc3:	cmp    BYTE PTR [ecx-0x17],dh
  413dc6:	sub    al,BYTE PTR [ecx+0x71]
  413dc9:	push   ebp
  413dca:	jg     0x413e1b
  413dcc:	imul   eax,DWORD PTR [eax],0x6d
  413dcf:	sbb    BYTE PTR [ecx+0x73],dl
  413dd2:	ins    DWORD PTR es:[edi],dx
  413dd3:	inc    edx
  413dd4:	outs   dx,BYTE PTR ds:[esi]
  413dd5:	popa   
  413dd6:	jne    0x413e0d
  413dd8:	add    BYTE PTR [eax+0x79],dl
  413ddb:	inc    ebx
  413ddc:	outs   dx,DWORD PTR ds:[esi]
  413ddd:	ja     0x413e06
  413ddf:	inc    edx
  413de0:	fs add al,bh
  413de3:	inc    esi
  413de4:	jb     0x413e5a
  413de6:	cwde   
  413de7:	loope  0x413e53
  413de9:	data16 cmp al,0x5f
  413dec:	pop    ebp
  413ded:	jb     0x413e1c
  413def:	cld    
  413df0:	inc    eax
  413df1:	js     0x413d8b
  413df3:	aaa    
  413df4:	outs   dx,BYTE PTR ds:[esi]
  413df5:	inc    esp
  413df6:	mov    cl,BYTE PTR [edi+0x76]
  413df9:	gs xor al,0xe3
  413dfc:	pusha  
  413dfd:	jae    0x413e5a
  413dff:	dec    edi
  413e00:	imul   ebp,DWORD PTR [esi+0x5b],0x12
  413e04:	pop    esp
  413e05:	inc    ebp
  413e06:	add    BYTE PTR [edx+0x5d],0x6e
  413e0a:	mov    WORD PTR [ebp+eiz*2+0x76],es
  413e0e:	add    BYTE PTR [eax],al
  413e10:	ins    DWORD PTR es:[edi],dx
  413e11:	adc    bl,BYTE PTR [esp+eiz*2-0x66]
  413e15:	dec    edi
  413e16:	jbe    0x413e7d
  413e18:	mov    ecx,DWORD PTR [eax]
  413e1a:	push   0x73
  413e1c:	pop    eax
  413e1d:	hlt    
  413e1e:	outs   dx,DWORD PTR ds:[esi]
  413e1f:	popa   
  413e20:	fwait
  413e21:	inc    ecx
  413e22:	jae    0x413e93
  413e24:	call   0x21f2:0x220224e
  413e2b:	add    dl,bh
  413e2d:	add    eax,0x4fc75300
  413e32:	je     0x413eab
  413e34:	test   eax,0xdd5c6143
  413e39:	pop    ecx
  413e3a:	jo     0x413e9d
  413e3c:	xchg   ch,ch
  413e3e:	jno    0x413ea9
  413e40:	pop    esi
  413e41:	dec    ebp
  413e42:	add    BYTE PTR [ebp-0x70],al
  413e45:	dec    eax
  413e46:	pop    ebp
  413e47:	outs   dx,BYTE PTR ds:[esi]
  413e48:	xor    edi,edi
  413e4a:	push   ecx
  413e4b:	addr16 pop edi
  413e4d:	pop    eax
  413e4e:	and    ecx,DWORD PTR [eax+0x4e]
  413e51:	dec    eax
  413e52:	pop    ebp
  413e53:	add    BYTE PTR [edx+0x54765258],al
  413e59:	jmp    0x58839161
  413e5e:	push   edx
  413e5f:	dec    esi
  413e60:	push   eax
  413e61:	or     BYTE PTR [ebp+0x0],bl
  413e64:	popa   
  413e65:	sbb    al,0x4f
  413e67:	jno    0x413e8f
  413e69:	push   ss
  413e6a:	push   edx
  413e6b:	fs xor esi,edi
  413e6e:	xor    ebx,DWORD PTR [edi+0x22]
  413e71:	stos   BYTE PTR es:[edi],al
  413e72:	dec    esp
  413e73:	ins    DWORD PTR es:[edi],dx
  413e74:	add    BYTE PTR [eax],al
  413e76:	and    edx,DWORD PTR [edi]
  413e78:	add    al,0x44
  413e7a:	sbb    BYTE PTR [ecx-0x52029ea2],ch
  413e80:	dec    edi
  413e81:	ja     0x413eb4
  413e83:	push   0x54
  413e85:	data16 std 
  413e87:	lds    esp,FWORD PTR [edx+0x72]
  413e8a:	aam    0x66
  413e8c:	xor    eax,DWORD PTR [ecx-0x7]
  413e8f:	sbb    ch,BYTE PTR [edi]
  413e91:	ins    DWORD PTR es:[edi],dx
  413e92:	xlat   BYTE PTR ds:[ebx]
  413e93:	outs   dx,BYTE PTR ds:[esi]
  413e94:	dec    esp
  413e95:	pop    edi
  413e96:	jecxz  0x413e6f
  413e98:	and    eax,0x50dbdd41
  413e9d:	jno    0x413e77
  413e9f:	fnstcw WORD PTR [ebx]
  413ea1:	push   esp
  413ea2:	loope  0x413e7a
  413ea4:	cmp    edx,DWORD PTR [ecx+eiz*8+0x7b]
  413ea8:	pusha  
  413ea9:	popa   
  413eaa:	sahf   
  413eab:	nop
  413eac:	push   ebx
  413ead:	je     0x413e51
  413eaf:	mov    ebx,0x8aa1743b
  413eb4:	pop    esi
  413eb5:	jb     0x413e56
  413eb7:	cwde   
  413eb8:	dec    edi
  413eb9:	add    BYTE PTR [edi+0x2f],dh
  413ebc:	push   ecx
  413ebd:	push   ebx
  413ebe:	sbb    BYTE PTR [eax+0x14904e4f],0x54
  413ec5:	pop    edi
  413ec6:	xor    DWORD PTR [esi+0x53],edx
  413ec9:	push   esp
  413eca:	xor    DWORD PTR [ebx],0x3d5c515a
  413ed0:	pop    ecx
  413ed1:	pusha  
  413ed2:	xor    DWORD PTR [ebp+0x2d],ecx
  413ed5:	push   eax
  413ed6:	popa   
  413ed7:	inc    esp
  413ed8:	dec    eax
  413ed9:	push   ecx
  413eda:	add    BYTE PTR [eax],al
  413edc:	inc    eax
  413edd:	and    eax,0x144d5246
  413ee2:	and    eax,0x10584150
  413ee7:	push   edx
  413ee8:	push   edx
  413ee9:	xor    DWORD PTR [ebx],edx
  413eeb:	push   ebp
  413eec:	and    ebp,DWORD PTR [ebx]
  413eee:	out    0x30,eax
  413ef0:	hlt    
  413ef1:	push   ebp
  413ef2:	xor    ebp,DWORD PTR ds:0x282c425e
  413ef8:	out    0x50,eax
  413efa:	das    
  413efb:	and    al,0xe0
  413efd:	cmp    al,0xd
  413eff:	push   eax
  413f00:	cld    
  413f01:	xor    bh,cl
  413f03:	pop    esi
  413f04:	fst    QWORD PTR [ebp-0x2d]
  413f07:	pop    edx
  413f08:	pop    es
  413f09:	xor    eax,0x30d042bb
  413f0e:	(bad)  
  413f0f:	dec    esi
  413f10:	xlat   BYTE PTR ds:[ebx]
  413f11:	daa    
  413f12:	fiadd  DWORD PTR [ebx]
  413f14:	add    BYTE PTR ds:0x32dc4fcd,bh
  413f1a:	mov    ecx,0x9b55ed5e
  413f1f:	xor    esi,eax
  413f21:	aas    
  413f22:	rcr    BYTE PTR [esi-0x31],0x27
  413f26:	ret    
  413f27:	xor    dh,cl
  413f29:	daa    
  413f2a:	test   BYTE PTR [eax+0x31],dl
  413f2d:	inc    edi
  413f2e:	xchg   BYTE PTR [ebp-0x63],bl
  413f31:	and    ecx,DWORD PTR [eax-0x65b76daf]
  413f37:	push   esp
  413f38:	(bad)  
  413f39:	and    BYTE PTR [edi+0x269c15],bl
  413f3f:	mov    es,WORD PTR [eax]
  413f41:	add    BYTE PTR [esi+0x52],cl
  413f44:	push   esp
  413f45:	cdq    
  413f46:	jno    0x413f80
  413f48:	addr16 dec esp
  413f4a:	inc    ebx
  413f4b:	and    BYTE PTR [edx+edi*1+0x1c],bl
  413f4f:	and    BYTE PTR [ebx+0x5a],ah
  413f52:	sub    eax,0x16516cfa
  413f57:	adc    al,0x2e
  413f59:	push   esi
  413f5a:	and    DWORD PTR [eax],edi
  413f5c:	add    BYTE PTR ds:0x4651447a,bl
  413f62:	sbb    esp,DWORD PTR [eax]
  413f64:	jne    0x413fae
  413f66:	pop    es
  413f67:	aaa    
  413f68:	pop    esp
  413f69:	sub    eax,0xa632604
  413f6e:	imul   edi,DWORD PTR [ecx],0x588d1072
  413f74:	jo     0x413f8a
  413f76:	data16 adc al,0x5c
  413f79:	sbb    al,BYTE PTR [ebp+0x4b]
  413f7c:	jb     0x413f82
  413f7e:	pop    ecx
  413f7f:	inc    ebp
  413f80:	arpl   bp,di
  413f82:	xor    ebp,DWORD PTR ds:[esi+0x6]
  413f86:	inc    esi
  413f87:	cli    
  413f88:	pusha  
  413f89:	retf   0x143f
  413f8c:	pop    esp
  413f8d:	mov    edx,0xcc724b1a
  413f92:	push   cs
  413f93:	inc    ebp
  413f94:	arpl   bp,dx
  413f96:	xor    ebp,DWORD PTR es:[esi-0x32]
  413f9a:	pop    ds
  413f9b:	dec    ecx
  413f9c:	das    
  413f9d:	sahf   
  413f9e:	inc    edx
  413f9f:	dec    eax
  413fa0:	xor    eax,DWORD PTR [edi]
  413fa2:	push   cs
  413fa3:	xor    eax,0xe971
  413fa8:	fiadd  WORD PTR [eax+ebp*2-0x78]
  413fac:	cld    
  413fad:	ss fs mov edx,0x80742059
  413fb4:	pusha  
  413fb5:	xor    DWORD PTR [ecx-0x41],esi
  413fb8:	cmp    ebp,DWORD PTR [si+0x0]
  413fbc:	shl    edx,0x60
  413fbf:	add    BYTE PTR [ecx+eax*2-0x3759e98],ch
  413fc6:	arpl   WORD PTR [ebx-0x4b],dx
  413fc9:	loop   0x41403e
  413fcb:	imul   ebx,DWORD PTR [esi-0x1],0x37495f6e
  413fd2:	xor    BYTE PTR [edi+0x45],bl
  413fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd6:	jo     0x414049
  413fd8:	sbb    al,0xf9
  413fda:	jae    0x414041
  413fdc:	enter  0x3f4a,0x6f
  413fe0:	jbe    0x413fe0
  413fe2:	pusha  
  413fe3:	gs sbb ebp,ebp
  413fe6:	outs   dx,DWORD PTR ds:[esi]
  413fe7:	and    BYTE PTR [ebx],bl
  413fe9:	out    0x65,eax
  413feb:	je     0x414004
  413fed:	icebp  
  413fee:	jno    0x414055
  413ff0:	cwde   
  413ff1:	cli    
  413ff2:	pusha  
  413ff3:	popa   
  413ff4:	dec    eax
  413ff5:	(bad)  
  413ff6:	jae    0x414068
  413ff8:	mov    bl,ch
  413ffa:	ins    DWORD PTR es:[edi],dx
  413ffb:	ins    BYTE PTR es:[edi],dx
  413ffc:	and    eax,0x352e6ff1
  414001:	call   0xf7cc4066
  414006:	jae    0x41406d
  414008:	jnp    0x413fae
  41400a:	popa   
  41400b:	popa   
  41400c:	add    BYTE PTR [eax],al
  41400e:	push   esp
  41400f:	push   ss
  414010:	outs   dx,DWORD PTR ds:[esi]
  414011:	imul   eax,DWORD PTR [ebx+edi*8-0x1b8ed192],0x5a8c0064
  41401c:	popa   
  41401d:	popa   
  41401e:	cwde   
  41401f:	dec    ebp
  414020:	pop    ebp
  414021:	jb     0x414098
  414023:	dec    edx
  414024:	dec    esp
  414025:	gs jns 0x41400e
  414028:	inc    ebp
  414029:	push   esp
  41402a:	cwde   
  41402b:	push   ss
  41402c:	dec    edi
  41402d:	dec    edi
  41402e:	xchg   BYTE PTR [edx+0x53],al
  414031:	inc    ecx
  414032:	jmp    0x2498:0x314c5c5c
  414039:	jo     0x413fc1
  41403b:	pushf  
  41403c:	xor    esp,DWORD PTR [ebx+0x31]
  41403f:	fs das 
  414041:	jno    0x413fc8
  414043:	pushf  
  414044:	sub    eax,0x359c616c
  414049:	push   0x74246f31
  41404e:	nop
  41404f:	imul   DWORD PTR [eax]
  414051:	jb     0x414084
  414053:	jmp    0x414075
  414055:	jno    0x4140b9
  414057:	dec    edx
  414058:	das    
  414059:	jb     0x4140b0
  41405b:	mov    ebx,0xe7626d49
  414060:	push   ecx
  414061:	pop    edi
  414062:	pop    esp
  414063:	push   eax
  414064:	add    al,0x53
  414066:	inc    edx
  414067:	pop    eax
  414068:	ss dec esi
  41406a:	push   eax
  41406b:	call   0x18a44094
  414070:	sub    eax,0x2500006d
  414075:	adc    BYTE PTR [eax+0x67],cl
  414078:	and    ebx,DWORD PTR [eax]
  41407a:	and    esi,DWORD PTR [esi+ecx*1+0xd]
  41407e:	cmp    DWORD PTR [eax],eax
  414080:	add    DWORD PTR [edx],eax
  414082:	ss je  0x414084
  414085:	lahf   
  414086:	bound  ecx,QWORD PTR cs:[ebp*4+0xae24601]
  41408e:	ss ins DWORD PTR es:[edi],dx
  414090:	std    
  414091:	shl    DWORD PTR [ebp*2+0x6d54badd],0xcf
  414099:	(bad)  
  41409a:	cmp    BYTE PTR [edi-0x1d],bl
  41409d:	iret   
  41409e:	pop    ebp
  41409f:	dec    ebx
  4140a0:	shr    BYTE PTR [ebp+esi*1+0x67],1
  4140a4:	fistp  WORD PTR [edx]
  4140a6:	push   esp
  4140a7:	jb     0x414081
  4140a9:	aad    0x33
  4140ab:	ja     0x41407a
  4140ad:	mov    edx,0x1403315d
  4140b2:	test   eax,0x9352a52a
  4140b7:	xor    edx,DWORD PTR [edi+0x3b]
  4140ba:	test   DWORD PTR [edx],ebp
  4140bc:	xor    DWORD PTR [edx-0x5d],ebx
  4140bf:	push   esp
  4140c0:	mov    fs,WORD PTR [eax]
  4140c2:	mov    WORD PTR [edi+ebx*2],?
  4140c5:	cmp    ecx,DWORD PTR [ebp-0x5ab7ced6]
  4140cb:	test   DWORD PTR es:[eax+0x79],edx
  4140cf:	sub    bh,BYTE PTR [edi+0x2f]
  4140d2:	out    0x53,eax
  4140d4:	mov    fs,WORD PTR ds:0x595a
  4140da:	push   esp
  4140db:	es dec ebx
  4140dd:	add    al,0x82
  4140df:	cmp    eax,DWORD PTR es:[edx+eax*4]
  4140e3:	and    eax,0x337f364c
  4140e8:	dec    esp
  4140e9:	daa    
  4140ea:	xor    DWORD PTR [esi+0x46],eax
  4140ed:	xor    DWORD PTR [ebp+0x50],eax
  4140f0:	inc    eax
  4140f1:	ss push edx
  4140f3:	xor    eax,0x2b23311b
  4140f8:	out    0x53,eax
  4140fa:	adc    al,0x26
  4140fc:	sbb    eax,DWORD PTR [eax+eax*1]
  4140ff:	cmp    DWORD PTR ds:0xf9331c38,eax
  414105:	es in  eax,dx
  414107:	inc    esp
  414108:	push   cs
  414109:	aaa    
  41410a:	std    
  41410b:	cmp    eax,edi
  41410d:	push   ebp
  41410e:	push   ss
  41410f:	and    al,BYTE PTR [esi+esi*1]
  414112:	push   ecx
  414113:	inc    eax
  414114:	int3   
  414115:	and    al,0xd9
  414117:	cmp    esi,ecx
  414119:	das    
  41411a:	aam    0x30
  41411c:	shl    BYTE PTR [esi],0xe0
  41411f:	inc    edi
  414120:	mov    dh,0x26
  414122:	ror    DWORD PTR [edi-0x47],cl
  414125:	sub    al,bh
  414127:	cs fwait
  414129:	inc    esp
  41412a:	aam    0x39
  41412c:	add    bh,al
  41412e:	pop    ss
  41412f:	xor    esi,DWORD PTR [eax+eax*8+0x1]
  414133:	cmp    dh,BYTE PTR [ecx-0x17]
  414136:	test   DWORD PTR [ebx],esi
  414138:	jb     0x4140d1
  41413a:	dec    edi
  41413b:	and    dl,BYTE PTR [eax+edx*4+0x0]
  41413f:	add    BYTE PTR [edx+0x33],ah
  414142:	add    BYTE PTR [edi-0x55dfbb82],ah
  414148:	popa   
  414149:	push   esi
  41414a:	push   esp
  41414b:	fwait
  41414c:	popa   
  41414d:	pop    eax
  41414e:	add    BYTE PTR [edi-0x61bebb9a],ch
  414154:	pusha  
  414155:	adc    al,0x2e
  414157:	pop    ecx
  414158:	and    ebp,DWORD PTR [esi]
  41415a:	add    BYTE PTR ds:0x4f6d227d,bh
  414160:	or     al,0x38
  414162:	arpl   WORD PTR [edx+0x2d],bx
  414165:	xchg   ebp,eax
  414166:	jnp    0x41412d
  414168:	ds xchg esi,eax
  41416a:	mov    cl,0xd1
  41416c:	adc    al,0x25
  41416e:	lods   eax,DWORD PTR ds:[esi]
  41416f:	mov    dh,0xd
  414171:	and    BYTE PTR [ecx+edi*1-0x45],dh
  414175:	clc    
  414176:	sub    al,0xe9
  414178:	pop    edx
  414179:	and    BYTE PTR [ecx+ebx*1+0x62],dh
  41417d:	jmp    0x1974:0x2e32c62c
  414184:	fwait
  414185:	clc    
  414186:	sub    al,0xe9
  414188:	pop    edi
  414189:	and    al,0x63
  41418b:	sti    
  41418c:	dec    ebp
  41418d:	adc    al,0x75
  41418f:	or     BYTE PTR [edi+0x30],cl
  414192:	cs add eax,0xc600204c
  414198:	add    edi,DWORD PTR [ecx]
  41419a:	data16 aad 0x1f
  41419d:	inc    edi
  41419e:	jb     0x41416c
  4141a0:	(bad)  
  4141a1:	pop    eax
  4141a2:	jo     0x414168
  4141a4:	add    BYTE PTR [eax],al
  4141a6:	and    BYTE PTR [edi+0x20],al
  4141a9:	add    BYTE PTR [ebx+0x7f7465f6],ch
  4141af:	lock jno 0x414217
  4141b2:	dec    eax
  4141b3:	push   edi
  4141b4:	pop    ebp
  4141b5:	jae    0x414233
  4141b7:	mov    bl,0x41
  4141b9:	imul   ecx,edx,0xb7745efb
  4141bf:	in     al,0x74
  4141c1:	xor    ecx,DWORD PTR [eax]
  4141c3:	push   edi
  4141c4:	pop    ebp
  4141c5:	jae    0x414183
  4141c7:	mov    dl,0x46
  4141c9:	outs   dx,BYTE PTR ds:[esi]
  4141ca:	mov    ebx,edi
  4141cc:	pop    esp
  4141cd:	ins    BYTE PTR es:[edi],dx
  4141ce:	mov    ah,0xb2
  4141d0:	dec    ebp
  4141d1:	popa   
  4141d2:	jl     0x4141cf
  4141d4:	dec    DWORD PTR [esi+0x78]
  4141d7:	cld    
  4141d8:	jno    0x41423b
  4141da:	inc    esi
  4141db:	pop    eax
  4141dc:	push   esp
  4141dd:	dec    ebp
  4141de:	adc    al,0x34
  4141e0:	outs   dx,DWORD PTR ds:[esi]
  4141e1:	push   0x5c6be46d
  4141e6:	pop    ss
  4141e7:	loopne 0x414249
  4141e9:	outs   dx,BYTE PTR ds:[esi]
  4141ea:	adc    al,0xf3
  4141ec:	push   0x6d
  4141ee:	jne    0x4141e1
  4141f0:	ins    DWORD PTR es:[edi],dx
  4141f1:	fs enter 0x64dd,0x73
  4141f6:	ins    DWORD PTR es:[edi],dx
  4141f7:	out    dx,al
  4141f8:	jae    0x41426a
  4141fa:	dec    ebx
  4141fb:	loop   0x414272
  4141fd:	jae    0x414275
  4141ff:	hlt    
  414200:	outs   dx,BYTE PTR fs:[esi]
  414202:	mov    BYTE PTR [esi+0x3d],al
  414205:	arpl   WORD PTR ds:0x544552,bp
  41420b:	add    BYTE PTR [eax+0x7c666b41],bl
  414211:	fstp   QWORD PTR [edx+esi*2+0x2d]
  414215:	xor    al,0x3d
  414217:	arpl   WORD PTR ds:0x58544552,bp
  41421d:	inc    ebx
  41421e:	push   edx
  41421f:	push   ebp
  414220:	pop    eax
  414221:	inc    ecx
  414222:	dec    ebx
  414223:	inc    esi
  414224:	xor    DWORD PTR [ecx+0x56],ebp
  414227:	aas    
  414228:	add    esi,DWORD PTR [eax+0x5d]
  41422b:	inc    ecx
  41422c:	fstp   st(3)
  41422e:	xor    dh,BYTE PTR [ecx-0x34]
  414231:	imul   ebx,DWORD PTR [ebp+0x54],0x4c286cb8
  414238:	enter  0x5dda,0x79
  41423c:	jb     0x4142b7
  41423e:	hlt    
  41423f:	inc    ebp
  414240:	arpl   WORD PTR [edx-0xf],di
  414243:	inc    ebp
  414244:	dec    esp
  414245:	ret    
  414246:	icebp  
  414247:	ss pop ebp
  414249:	push   0x7a703ef5
  41424e:	lock inc ecx
  414250:	jb     0x4142bf
  414252:	clc    
  414253:	sub    al,BYTE PTR [ebp+0x6c]
  414256:	inc    esp
  414257:	ss cmp eax,0x7734ef70
  41425d:	push   es
  41425e:	repz xor al,0x64
  414261:	mov    ebx,0xe7774d50
  414266:	push   edx
  414267:	aas    
  414268:	xor    eax,0x5f
  41426b:	inc    ecx
  41426c:	pop    ebp
  41426d:	pop    esp
  41426e:	das    
  41426f:	jno    0x414271
  414271:	add    BYTE PTR [edx+ebp*8+0x5f],cl
  414275:	push   esp
  414276:	cmp    bl,ch
  414278:	and    al,0x4c
  41427a:	dec    eax
  41427b:	pop    ecx
  41427c:	pusha  
  41427d:	jns    0x4142e7
  41427f:	clc    
  414280:	inc    eax
  414281:	xor    ebx,DWORD PTR [eax+eax*8-0x11]
  414285:	ss dec esp
  414287:	clc    
  414288:	lock xor DWORD PTR [ebx+0x68],esp
  41428c:	cmc    
  41428d:	xor    al,0x44
  41428f:	data16 out dx,al
  414291:	inc    ecx
  414292:	repnz pop ebp
  414294:	cli    
  414295:	sub    dh,ah
  414297:	data16 stc 
  414299:	xor    DWORD PTR [ebp*8+0x14262ffb],edi
  4142a0:	sbb    dh,dl
  4142a2:	icebp  
  4142a3:	es out 0x34,eax
  4142a6:	(bad)  
  4142a7:	and    ah,cl
  4142a9:	and    eax,0x31da23dd
  4142ae:	(bad)  
  4142af:	and    BYTE PTR ds:0xe73ad72b,dl
  4142b5:	xor    al,0xd6
  4142b7:	and    ah,cl
  4142b9:	and    eax,0x2afd23bd
  4142be:	lahf   
  4142bf:	cmp    esp,edi
  4142c1:	inc    ebp
  4142c2:	jge    0x414308
  4142c4:	mov    ch,0x2c
  4142c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c7:	xor    ecx,DWORD PTR [esi-0x7b095cda]
  4142cd:	aaa    
  4142ce:	adc    DWORD PTR [ebp*4-0x71c19ea9],0x5e00003a
  4142d9:	sub    eax,0x2347318c
  4142de:	mov    al,BYTE PTR [ebx]
  4142e0:	lea    eax,[edx+0x4f]
  4142e3:	sub    edx,DWORD PTR [edi+0x35]
  4142e6:	cmp    ch,BYTE PTR ds:0x21052057
  4142ec:	inc    esp
  4142ed:	aaa    
  4142ee:	out    0x2d,eax
  4142f0:	inc    eax
  4142f1:	and    edx,edi
  4142f3:	in     eax,dx
  4142f4:	push   edx
  4142f5:	cmp    BYTE PTR [ebx+0x4],cl
  4142f8:	outs   dx,DWORD PTR ds:[esi]
  4142f9:	inc    ecx
  4142fa:	sbb    bl,BYTE PTR [ebp+0x6e]
  4142fd:	ss inc eax
  4142ff:	cmp    BYTE PTR [ecx],dh
  414301:	push   esi
  414302:	cmp    dl,BYTE PTR [ecx+0x4]
  414305:	inc    ecx
  414306:	getsec 
  414308:	and    eax,0x7350630
  41430d:	adc    al,0x1d
  41430f:	push   ecx
  414310:	loopne 0x414363
  414312:	or     BYTE PTR [ecx],dh
  414314:	adc    bl,dh
  414316:	mov    dl,0x5c
  414318:	cmc    
  414319:	add    BYTE PTR cs:[edx],cl
  41431c:	inc    esp
  41431d:	xor    BYTE PTR [ebx+0x2b],ah
  414320:	es cs data16 int3 
  414324:	and    BYTE PTR [ecx+edx*2],dl
  414327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414328:	icebp  
  414329:	dec    esp
  41432a:	push   esp
  41432b:	lods   al,BYTE PTR ds:[esi]
  41432c:	out    0x46,eax
  41432e:	inc    esi
  41432f:	fist   DWORD PTR [edi]
  414331:	xor    DWORD PTR [edi-0x43],eax
  414334:	(bad)  
  414336:	add    BYTE PTR [ecx-0x69d10b17],bl
  41433c:	add    BYTE PTR [eax],al
  41433e:	in     eax,dx
  41433f:	xor    BYTE PTR [eax+eiz*4+0x5c],dh
  414343:	sub    BYTE PTR [ebx-0x65],ah
  414346:	push   esp
  414347:	inc    ebx
  414348:	ins    BYTE PTR es:[edi],dx
  414349:	mov    dl,0x57
  41434b:	sub    edx,DWORD PTR [ecx-0x7b]
  41434e:	inc    ebp
  41434f:	sub    BYTE PTR [eax],al
  414351:	mov    ecx,0xa62ef379
  414356:	jae    0x41437f
  414358:	je     0x4142eb
  41435a:	push   edi
  41435b:	xor    dh,BYTE PTR [eax+eax*4+0x51]
  41435f:	inc    ebx
  414360:	je     0x4142e6
  414362:	xor    al,BYTE PTR [ecx+ecx*2+0x18]
  414366:	fadd   QWORD PTR [esp+eax*2+0x3b]
  41436a:	jp     0x4143c4
  41436c:	arpl   WORD PTR [edx+0x1f],cx
  41436f:	sub    esi,DWORD PTR [eax+0x55]
  414372:	xor    eax,0xbdf84944
  414377:	inc    eax
  414378:	inc    esi
  414379:	cmp    edx,DWORD PTR [eax]
  41437b:	aaa    
  41437c:	push   ecx
  41437d:	inc    ebp
  41437e:	or     ch,BYTE PTR [eax]
  414380:	add    cl,ch
  414382:	xor    dl,BYTE PTR [eax+eax*1]
  414385:	jmp    0xe94157bc
  41438a:	xor    dl,BYTE PTR [eax+eax*1]
  41438d:	jmp    0xe94157c4
  414392:	xor    dl,BYTE PTR [eax+eax*1]
  414395:	add    BYTE PTR [eax-0x77ffffe9],bl
  41439b:	pop    ss
  41439c:	add    BYTE PTR [eax],al
  41439e:	mov    BYTE PTR [edi],dl
  4143a0:	add    BYTE PTR [eax],al
  4143a2:	add    BYTE PTR [eax],al
  4143a4:	pop    eax
  4143a5:	jmp    0x3360:0xf3816c6c
  4143ac:	cs hlt 
  4143ae:	imul   ebp,DWORD PTR [eax+ecx*2-0x16],0x6c
  4143b3:	ins    BYTE PTR es:[edi],dx
  4143b4:	jno    0x4143a9
  4143b6:	pusha  
  4143b7:	xor    ecx,DWORD PTR [edi+0x6e656fee]
  4143bd:	pop    ss
  4143be:	outs   dx,DWORD PTR ds:[esi]
  4143bf:	jno    0x41442d
  4143c1:	lock jae 0x414429
  4143c4:	sub    edi,DWORD PTR [esi]
  4143c6:	pop    edi
  4143c7:	ins    BYTE PTR es:[edi],dx
  4143c8:	mov    edi,0xbb0060e9
  4143cd:	out    0x6b,eax
  4143cf:	imul   esi,DWORD PTR [ebx+esi*8-0x1757a0d2],0xe8b97060
  4143da:	pusha  
  4143db:	add    BYTE PTR [ebx-0x18],bh
  4143de:	imul   ebp,DWORD PTR [ecx+0x74],0xfffffff4
  4143e2:	cs pop edi
  4143e4:	imul   esi,ebx,0x60
  4143e7:	jo     0x4143c1
  4143e9:	jmp    0xe4c2b05a
  4143ee:	pusha  
  4143ef:	xor    ebx,DWORD PTR [edi]
  4143f1:	sti    
  4143f2:	push   0x6c
  4143f4:	gs in  eax,dx
  4143f6:	ins    DWORD PTR es:[edi],dx
  4143f7:	pop    edi
  4143f8:	jp     0x4143db
  4143fa:	jae    0x414461
  4143fc:	sti    
  4143fd:	pop    ss
  4143fe:	outs   dx,DWORD PTR ds:[esi]
  4143ff:	jno    0x41446d
  414401:	icebp  
  414402:	jae    0x414469
  414404:	stos   DWORD PTR es:[edi],eax
  414405:	cmp    eax,0x6f5f
  41440a:	cmp    al,0xe5
  41440c:	push   0x6bfa5f6e
  414411:	outs   dx,DWORD PTR ds:[esi]
  414412:	xor    DWORD PTR [edi],ecx
  414414:	add    al,0x0
  414416:	sbb    al,0xa2
  414418:	cmp    esi,DWORD PTR [ecx+0x0]
  41441b:	or     DWORD PTR [ebx],ebp
  41441d:	je     0x414433
  41441f:	pop    esi
  414420:	out    0x63,eax
  414422:	add    eax,0xe0710419
  414427:	mov    al,ds:0xfdcc742c
  41442c:	pop    eax
  41442d:	ins    DWORD PTR es:[edi],dx
  41442e:	loope  0x414407
  414430:	daa    
  414431:	add    dl,ah
  414433:	mov    ebx,0xd7c56725
  414438:	neg    BYTE PTR [edx+edx*8-0x38]
  41443c:	sub    dh,BYTE PTR [ecx-0x2c]
  41443f:	lods   al,BYTE PTR ds:[esi]
  414440:	outs   dx,DWORD PTR ss:[esi]
  414442:	(bad)
  414445:	arpl   WORD PTR [edx-0x6e],sp
  414448:	xor    DWORD PTR [edx-0x74],esi
  41444b:	jnp    0x414471
  41444d:	jb     0x4143e3
  41444f:	stos   DWORD PTR es:[edi],eax
  414450:	outs   dx,DWORD PTR ss:[esi]
  414452:	test   DWORD PTR [ebp+ebp*1+0x36724263],edx
  414459:	je     0x4143e7
  41445b:	sbb    eax,DWORD PTR [ecx]
  41445d:	jno    0x4143df
  41445f:	(bad)  
  414460:	sub    al,0x74
  414462:	mov    WORD PTR [esi+0x5a],ds
  414465:	popa   
  414466:	pop    esi
  414467:	pop    ds
  414468:	xor    BYTE PTR [ebx+0x57],ch
  41446b:	pop    edx
  41446c:	es ja  0x41446f
  41446f:	add    BYTE PTR [ebp+0x58],ah
  414472:	xor    eax,DWORD PTR [eax]
  414474:	bound  edi,QWORD PTR [eax+ebp*1]
  414477:	addr16 inc ebp
  414479:	pop    eax
  41447a:	repz pop esp
  41447c:	push   edx
  41447d:	dec    edx
  41447e:	sub    BYTE PTR [ebx+0x4c],dh
  414481:	push   ecx
  414482:	push   edi
  414483:	bound  eax,QWORD PTR [ebp+0x5a]
  414486:	add    BYTE PTR es:[ecx],dh
  414489:	stos   DWORD PTR es:[edi],eax
  41448a:	add    DWORD PTR [eax],eax
  41448c:	xor    DWORD PTR [edi+eiz*8],edx
  41448f:	add    esi,DWORD PTR [ecx]
  414491:	adc    al,0xe7
  414493:	add    esi,DWORD PTR [ecx]
  414495:	adc    al,0xe7
  414497:	add    esi,DWORD PTR [ecx]
  414499:	adc    al,0xe7
  41449b:	add    esi,DWORD PTR [ecx]
  41449d:	adc    al,0xe7
  41449f:	add    esi,DWORD PTR [ecx]
  4144a1:	adc    al,0xe7
  4144a3:	add    esi,DWORD PTR [ecx]
  4144a5:	adc    al,0xe7
  4144a7:	add    esi,DWORD PTR [ecx]
  4144a9:	adc    al,0xf7
  4144ab:	xor    eax,0x27d039d4
  4144b0:	shl    BYTE PTR [ecx*1-0x18d538d5],cl
  4144b7:	push   ebx
  4144b8:	ret    
  4144b9:	xor    ch,al
  4144bb:	sub    dl,ch
  4144bd:	ss out 0x4a,eax
  4144c0:	rol    BYTE PTR [ebp-0x3c],0x27
  4144c4:	(bad)  
  4144c5:	daa    
  4144c6:	shl    BYTE PTR [ecx],0x92
  4144c9:	adc    al,0x97
  4144cb:	and    bl,BYTE PTR [ebp+0x7e53e72c]
  4144d1:	sub    BYTE PTR [edi-0x7bffffb1],cl
  4144d7:	push   edi
  4144d8:	(bad)  
  4144d9:	push   ds
  4144da:	xor    DWORD PTR ds:0x31972080,esp
  4144e0:	xchg   ebp,eax
  4144e1:	xor    al,0x4f
  4144e3:	and    eax,0x288e2778
  4144e8:	mov    WORD PTR [ebx],es
  4144ea:	pusha  
  4144eb:	sub    eax,DWORD PTR [esi+0x5a325429]
  4144f1:	jmp    0x2b60:0x4531c62
  4144f8:	dec    esi
  4144f9:	sub    bl,BYTE PTR [edx+esi*1+0x5a]
  4144fd:	not    BYTE PTR [eax+ebp*1]
  414500:	aas    
  414501:	xor    BYTE PTR [ecx],dh
  414503:	and    eax,0x31472150
  414508:	add    BYTE PTR [edi+0x64],al
  41450b:	jecxz  0x41453a
  41450d:	xor    eax,0xca002865
  414512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414513:	xor    eax,DWORD PTR [eax]
  414515:	retf   0x349c
  414518:	add    dl,cl
  41451a:	test   BYTE PTR ds:0x50463a00,dh
  414520:	inc    ebx
  414521:	sub    ah,cl
  414523:	repz addr16 push cs
  414526:	cmp    al,0x28
  414528:	outs   dx,BYTE PTR ds:[esi]
  414529:	or     BYTE PTR [esi],dl
  41452b:	xor    eax,0x3247c92c
  414530:	popa   
  414531:	fistp  DWORD PTR [ebx]
  414533:	and    al,0x74
  414535:	les    esi,FWORD PTR [esi]
  414537:	inc    ebp
  414538:	jno    0x414506
  41453a:	add    BYTE PTR [eax],al
  41453c:	add    al,0x32
  41453e:	pop    edi
  41453f:	mov    esp,0xcc1ff027
  414544:	or     BYTE PTR [ebx],dh
  414546:	jb     0x414508
  414548:	add    ch,BYTE PTR [eax]
  41454a:	arpl   bp,cx
  41454c:	cmp    BYTE PTR [edi],0x71
  41454f:	mov    edx,0x8d723161
  414554:	adc    bl,BYTE PTR [edx+0x52]
  414557:	scas   al,BYTE PTR es:[edi]
  414558:	outs   dx,DWORD PTR ds:[esi]
  414559:	hlt    
  41455a:	push   0xffffff86
  41455c:	dec    esp
  41455d:	inc    ecx
  41455e:	ins    BYTE PTR es:[edi],dx
  41455f:	jle    0x4145b2
  414561:	aaa    
  414562:	outs   dx,BYTE PTR ds:[esi]
  414563:	jp     0x414597
  414565:	push   esi
  414566:	addr16 jnp 0x414580
  414569:	ss ins DWORD PTR es:[edi],dx
  41456b:	jno    0x41459f
  41456d:	inc    eax
  41456e:	dec    ebx
  41456f:	jle    0x414595
  414571:	aaa    
  414572:	ins    BYTE PTR es:[edi],dx
  414573:	push   ebp
  414574:	adc    al,0x40
  414576:	inc    esi
  414577:	push   eax
  414578:	and    esi,DWORD PTR [ebx]
  41457a:	inc    si
  41457c:	or     eax,0xe3a0040
  414581:	ss je  0x414584
  414584:	(bad)  
  414585:	clc    
  414586:	jno    0x4145ed
  414588:	adc    al,0x4d
  41458a:	imul   edi,DWORD PTR [edx-0xf],0xffffffeb
  41458e:	imul   esp,DWORD PTR [ecx-0x68],0xffffffac
  414592:	sub    ch,BYTE PTR ds:0x70740188
  414598:	xchg   edx,eax
  414599:	mov    dh,0x2c
  41459b:	add    BYTE PTR [eax],dh
  41459d:	in     al,0x73
  41459f:	jo     0x4145a1
  4145a1:	add    BYTE PTR [edx-0x4a],ah
  4145a4:	sub    al,0x0
  4145a6:	and    ah,ah
  4145a8:	jae    0x41461a
  4145aa:	jnp    0x414549
  4145ac:	sub    al,0x2f
  4145ae:	pop    eax
  4145af:	add    DWORD PTR [eax+esi*2-0x5a],esi
  4145b3:	adc    esp,DWORD PTR [esi+0x69]
  4145b6:	jp     0x4145ac
  4145b8:	inc    ebp
  4145b9:	push   esp
  4145ba:	cwde   
  4145bb:	loop   0x414621
  4145bd:	je     0x41463c
  4145bf:	loop   0x4145ee
  4145c1:	fs jns 0x4145b3
  4145c4:	call   DWORD PTR [edx+0x6d]
  4145c7:	clc    
  4145c8:	dec    eax
  4145c9:	outs   dx,DWORD PTR ds:[esi]
  4145ca:	jmp    0x4718:0x7960
  4145d0:	dec    ecx
  4145d1:	outs   dx,DWORD PTR ds:[esi]
  4145d2:	loop   0x4145c3
  4145d4:	imul   ebp,DWORD PTR [ecx+ebp*4+0x46],0x4f
  4145d9:	gs test eax,0xb36e6b4b
  4145df:	repz je 0x41463e
  4145e2:	sbb    cl,ah
  4145e4:	imul   ebp,DWORD PTR [edi-0x55],0xffffffe9
  4145e8:	call   FWORD PTR [ebx-0x32]
  4145eb:	imul   BYTE PTR [edx+0x63]
  4145ee:	mov    bl,0x46
  4145f0:	inc    edx
  4145f1:	jb     0x41465a
  4145f3:	out    dx,al
  4145f4:	outs   dx,BYTE PTR ds:[esi]
  4145f5:	gs jp  0x414634
  4145f8:	add    BYTE PTR [ebp+0x67],cl
  4145fb:	fisub  DWORD PTR [esp+ebp*2+0x31]
  4145ff:	pop    ecx
  414600:	and    eax,DWORD PTR [eax]
  414602:	add    BYTE PTR gs:0x4800007a,ah
  414609:	dec    ecx
  41460a:	sub    BYTE PTR [edi+0x55],bl
  41460d:	std    
  41460e:	xor    DWORD PTR [ebp+0x17],ebp
  414611:	push   esp
  414612:	sub    BYTE PTR [ebx+0x22],ah
  414615:	adc    DWORD PTR [ecx+edx*2],eax
  414618:	push   cs
  414619:	wrmsr  
  41461b:	jne    0x41462d
  41461d:	sti    
  41461e:	push   ds
  41461f:	pop    esp
  414620:	std    
  414621:	nop    DWORD PTR [ecx+0x19]
  414625:	test   DWORD PTR [edi+0x50],0x7033ec31
  41462c:	in     eax,dx
  41462d:	add    esi,DWORD PTR [edx]
  41462f:	add    ch,bh
  414631:	adc    eax,0xf8d55f21
  414636:	sub    dh,BYTE PTR [edx+0x31]
  414639:	retf   
  41463a:	es ins DWORD PTR es:[edi],dx
  41463c:	retf   0x24cf
  41463f:	jb     0x41461b
  414641:	push   ss
  414642:	and    BYTE PTR [edi-0x43],bl
  414645:	lods   al,BYTE PTR ds:[esi]
  414646:	push   edx
  414647:	(bad)
  41464b:	outs   dx,BYTE PTR ds:[esi]
  41464c:	iret   
  41464d:	int    0xe3
  41464f:	dec    esi
  414650:	ja     0x4146cd
  414652:	add    DWORD PTR [ebp-0x73],ecx
  414655:	aam    0x23
  414657:	add    BYTE PTR [edi-0x74],dh
  41465a:	sub    ebp,DWORD PTR [ebp-0x5d]
  41465d:	test   BYTE PTR ds:0x1dd58263,ch
  414663:	pop    edi
  414664:	jge    0x414611
  414666:	dec    esi
  414667:	addr16 (bad) 
  414669:	ins    DWORD PTR es:[edi],dx
  41466a:	dec    ebp
  41466b:	push   eax
  41466c:	add    BYTE PTR [eax],al
  41466e:	xor    DWORD PTR [edx],ebx
  414670:	sub    al,0x74
  414672:	push   esp
  414673:	sbb    ah,bl
  414675:	arpl   WORD PTR [ebx-0x55],dx
  414678:	inc    edx
  414679:	dec    esp
  41467a:	adc    BYTE PTR [eax+esi*1],0x40
  41467e:	jne    0x414699
  414680:	sbb    bl,dh
  414682:	jno    0x414667
  414684:	sub    ch,ch
  414686:	add    ah,bl
  414688:	sti    
  414689:	inc    edx
  41468a:	push   es
  41468b:	out    0x28,eax
  41468d:	out    0x7,eax
  41468f:	jecxz  0x4146d3
  414691:	repnz pop ebx
  414693:	fsub   QWORD PTR [edi]
  414695:	cld    
  414696:	push   esi
  414697:	out    dx,eax
  414698:	div    bl
  41469a:	data16 in al,0x27
  41469d:	inc    eax
  41469e:	repz loopne 0x414679
  4146a1:	cmp    eax,0x5813e7f7
  4146a6:	out    dx,al
  4146a7:	sub    eax,0x310c3237
  4146ac:	sbb    bl,BYTE PTR [edi]
  4146ae:	add    esp,DWORD PTR [esi]
  4146b0:	add    al,0x32
  4146b2:	and    dl,ah
  4146b4:	out    0x30,al
  4146b6:	shl    BYTE PTR [ecx],cl
  4146b8:	cmc    
  4146b9:	push   ds
  4146ba:	jecxz  0x4146dc
  4146bc:	adc    eax,0xe72fca3c
  4146c1:	push   edi
  4146c2:	test   DWORD PTR [edi-0x49],0xd327d23c
  4146c9:	push   ds
  4146ca:	ret    
  4146cb:	adc    ebp,DWORD PTR [eax+edx*2-0xe36c823]
  4146d2:	add    BYTE PTR [eax],al
  4146d4:	pop    esp
  4146d5:	cmp    al,cl
  4146d7:	das    
  4146d8:	xor    DWORD PTR [ebx-0x5d],eax
  4146db:	and    ah,BYTE PTR [ebp+0x761fd533]
  4146e1:	sub    bh,ah
  4146e3:	push   edi
  4146e4:	jb     0x414707
  4146e6:	fwait
  4146e7:	xor    BYTE PTR [esi+esi*1+0x503e5793],dl
  4146ee:	lods   eax,DWORD PTR ds:[esi]
  4146ef:	dec    edi
  4146f0:	popa   
  4146f1:	adc    al,0xb0
  4146f3:	and    eax,0x7b003765
  4146f8:	or     al,0x31
  4146fa:	je     0x4146c5
  4146fc:	pop    ds
  4146fd:	sbb    al,0x70
  4146ff:	push   ebp
  414700:	or     al,0x22
  414702:	arpl   WORD PTR [ebx+0x35],bx
  414705:	inc    edi
  414706:	addr16 inc edi
  414708:	sbb    ch,BYTE PTR [esi]
  41470a:	arpl   WORD PTR [ebp+0x70],dx
  41470d:	cmp    eax,0x53165161
  414712:	jb     0x414758
  414714:	push   ecx
  414715:	xor    DWORD PTR [esi+0x3d],ebp
  414718:	pop    edx
  414719:	cmp    eax,0x49353a6c
  41471e:	push   ecx
  41471f:	leave  
  414720:	jmp    0x414772
  414722:	and    BYTE PTR [edi],ah
  414724:	loope  0x414769
  414726:	and    BYTE PTR [ecx],bh
  414728:	push   edx
  414729:	and    esi,DWORD PTR [ecx+0x16]
  41472c:	push   esp
  41472d:	and    ah,BYTE PTR [edx+edi*8+0x32]
  414731:	pop    eax
  414732:	push   eax
  414733:	sub    BYTE PTR ds:0xc93a55,al
  414739:	add    BYTE PTR [edx],dh
  41473b:	and    al,0x71
  41473d:	cmc    
  41473e:	adc    eax,0x4cca6322
  414743:	xor    BYTE PTR [ebp+ecx*8+0x32],ch
  414747:	inc    esp
  414748:	push   ecx
  414749:	fisttp QWORD PTR ds:0xaa6322
  41474f:	xor    DWORD PTR [edi-0x43],ebx
  414752:	pop    ss
  414753:	push   ebp
  414754:	outs   dx,BYTE PTR ds:[esi]
  414755:	mov    edx,0xca6e3b5e
  41475a:	inc    edi
  41475b:	adc    al,0x0
  41475d:	retf   0x2360
  414760:	jo     0x4146ff
  414762:	and    esi,esp
  414764:	sub    eax,0x285685
  414769:	stos   BYTE PTR es:[edi],al
  41476a:	inc    eax
  41476b:	and    esi,DWORD PTR [eax-0x6b]
  41476e:	outs   dx,DWORD PTR ds:[esi]
  41476f:	sub    dh,BYTE PTR [eax+0x0]
  414772:	jp     0x414764
  414774:	jae    0x4147db
  414776:	mov    ebx,0x646143eb
  41477b:	idiv   bh
  41477d:	dec    eax
  41477f:	pop    ss
  414780:	add    BYTE PTR [eax],al
  414782:	enter  0x17,0x0
  414786:	fcom   DWORD PTR [edi+0x4a]
  414789:	aaa    
  41478a:	sbb    al,0x6c
  41478c:	mov    edx,0x7926b9cf
  414791:	add    BYTE PTR [edx+0x7e466510],ah
  414797:	push   ecx
  414798:	dec    edx
  414799:	aaa    
  41479a:	pushf  
  41479b:	jae    0x414757
  41479d:	iret   
  41479e:	add    BYTE PTR [eax],al
  4147a0:	jns    0x4147c8
  4147a2:	jns    0x4147a4
  4147a4:	add    dl,BYTE PTR [eax]
  4147a6:	gs inc esi
  4147a8:	mov    esi,0x5c374a52
  4147ad:	jae    0x414769
  4147af:	iret   
  4147b0:	jns    0x4147d8
  4147b2:	jns    0x4147b4
  4147b4:	loop   0x4147c5
  4147b6:	gs inc esi
  4147b8:	mov    esi,0x58fffda7
  4147bd:	lods   al,BYTE PTR ds:[esi]
  4147be:	sub    eax,0x4f104032
  4147c3:	outs   dx,DWORD PTR ds:[esi]
  4147c4:	data16 jecxz 0x414839
  4147c7:	popa   
  4147c8:	push   0xffffffec
  4147ca:	pop    ebx
  4147cb:	dec    ebp
  4147cc:	jno    0x4147c0
  4147ce:	jno    0x41483f
  4147d0:	pop    ebx
  4147d1:	mul    BYTE PTR [ebp+0x74]
  4147d4:	mov    eax,ds
  4147d6:	ins    DWORD PTR es:[edi],dx
  4147d7:	je     0x4147ce
  4147d9:	loopne 0x414848
  4147db:	gs in  al,0xb6
  4147de:	inc    edx
  4147df:	js     0x4147b9
  4147e1:	cli    
  4147e2:	push   0x72
  4147e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e5:	loopne 0x414842
  4147e7:	dec    ecx
  4147e8:	mov    esi,0x316c60e2
  4147ed:	xchg   ecx,eax
  4147ee:	sbb    al,0x46
  4147f0:	mov    ?,WORD PTR [edi+0x20]
  4147f3:	jno    0x41484a
  4147f5:	jle    0x41482c
  4147f7:	ins    DWORD PTR es:[edi],dx
  4147f8:	arpl   WORD PTR [edx+ebp*1+0x1ad2363],cx
  4147ff:	add    BYTE PTR [ecx],dh
  414801:	lods   eax,DWORD PTR ds:[esi]
  414802:	and    al,0x0
  414804:	add    BYTE PTR [eax],al
  414806:	push   ebx
  414807:	lods   eax,DWORD PTR ds:[esi]
  414808:	sub    BYTE PTR [eax],al
  41480a:	add    ebp,DWORD PTR [ebp-0x53030017]
  414810:	in     al,dx
  414811:	call   DWORD PTR [ebp+ebp*4-0x20]
  414815:	(bad)  
  414816:	stc    
  414817:	lods   al,BYTE PTR ds:[esi]
  414818:	and    eax,DWORD PTR [eax]
  41481a:	lods   eax,DWORD PTR gs:[esi]
  41481c:	cli    
  41481d:	call   DWORD PTR [ebp-0x53]
  414820:	cmc    
  414821:	call   DWORD PTR [ebx]
  414823:	lods   eax,DWORD PTR ds:[esi]
  414824:	and    eax,0xe0ad5800
  414829:	call   DWORD PTR [ecx]
  41482b:	lods   eax,DWORD PTR ds:[esi]
  41482c:	idiv   bh
  41482e:	cmp    eax,0x4dffe9ad
  414833:	lods   eax,DWORD PTR ds:[esi]
  414834:	add    BYTE PTR es:[ebx-0x53],al
  414838:	repz jmp FWORD PTR [ecx]
  41483b:	lods   eax,DWORD PTR ds:[esi]
  41483c:	icebp  
  41483d:	jmp    DWORD PTR [edx]
  41483f:	lods   eax,DWORD PTR ds:[esi]
  414840:	and    eax,0x24acd300
  414845:	add    BYTE PTR [esi],bl
  414847:	lods   eax,DWORD PTR ds:[esi]
  414848:	daa    
  414849:	add    BYTE PTR [esi],al
  41484b:	lods   eax,DWORD PTR ds:[esi]
  41484c:	add    DWORD PTR [eax],eax
  41484e:	hlt    
  41484f:	shl    DWORD PTR [esi],cl
  414851:	jb     0x414821
  414853:	mov    ebp,0x71bd6622
  414858:	pop    edx
  414859:	addr16 lahf 
  41485b:	fs pop ds
  41485d:	arpl   WORD PTR [ebp-0x6b00247e],bx
  414863:	pop    edi
  414864:	xor    DWORD PTR [edx],edi
  414866:	inc    esi
  414867:	adc    al,0xd6
  414869:	add    eax,DWORD PTR [eax]
  41486b:	add    BYTE PTR [eax+0x29],ah
  41486e:	test   DWORD PTR [edi],esi
  414870:	jl     0x4148a5
  414872:	cdq    
  414873:	sub    BYTE PTR [ebp+0x53],bl
  414876:	and    DWORD PTR [edx],0xffffff93
  414879:	das    
  41487a:	mov    ds:0x8c275c46,eax
  41487f:	and    dl,BYTE PTR [edi+0x14]
  414882:	call   0x6328:0x9a2f651c
  414889:	and    cl,BYTE PTR [esi+esi*1+0x40]
  41488d:	adc    al,0x3a
  41488f:	sbb    edi,DWORD PTR ds:0x43273a2f
  414895:	and    al,BYTE PTR [esi+esi*1+0x11]
  414899:	out    dx,eax
  41489a:	dec    edx
  41489b:	push   eax
  41489c:	stc    
  41489d:	sub    BYTE PTR [edx],bh
  41489f:	cmp    BYTE PTR [ecx],dh
  4148a1:	inc    ebp
  4148a2:	inc    eax
  4148a3:	cmp    BYTE PTR [edx],dl
  4148a5:	inc    ebp
  4148a6:	inc    esp
  4148a7:	ss pop ds
  4148a9:	das    
  4148aa:	sbb    esp,esp
  4148ac:	push   ebx
  4148ad:	xor    BYTE PTR [ebx],bh
  4148af:	pop    ecx
  4148b0:	adc    dh,BYTE PTR [esi]
  4148b2:	cmp    al,0x36
  4148b4:	or     eax,0xfd1b3a14
  4148b9:	sbb    ah,BYTE PTR cs:[edi]
  4148bc:	jecxz  0x4148df
  4148be:	add    al,0x36
  4148c0:	adc    edi,ebp
  4148c2:	or     dl,BYTE PTR [eax+0x3]
  4148c5:	das    
  4148c6:	cld    
  4148c7:	and    ch,bl
  4148c9:	cs pop es
  4148cb:	dec    eax
  4148cc:	(bad)  
  4148cd:	and    eax,0x24c4
  4148d2:	mov    ebp,0x312ad928
  4148d7:	inc    ebp
  4148d8:	shl    BYTE PTR [edi],0xd2
  4148db:	inc    esp
  4148dc:	int3   
  4148dd:	xor    eax,0xe3b92fa7
  4148e2:	push   ebx
  4148e3:	xor    BYTE PTR [eax],al
  4148e5:	add    al,0x86
  4148e7:	and    esp,DWORD PTR [ebx-0x45]
  4148ea:	xor    al,BYTE PTR [ebx+0x67]
  4148ed:	popf   
  4148ee:	push   edi
  4148ef:	inc    ebx
  4148f0:	arpl   WORD PTR [ebx-0x368dcab8],bx
  4148f6:	pop    ss
  4148f7:	xor    eax,0x353db42b
  4148fc:	jb     0x4148c7
  4148fe:	cmp    BYTE PTR [edi],0x0
  414901:	les    ebx,FWORD PTR ds:0xb8c4938
  414907:	xor    ebp,DWORD PTR [eax-0x78]
  41490a:	cmp    ebp,DWORD PTR [edx]
  41490c:	add    BYTE PTR [edx],bh
  41490e:	sub    ah,BYTE PTR [eax]
  414910:	arpl   WORD PTR [edx],di
  414912:	push   cs
  414913:	es jbe 0x414962
  414916:	pop    es
  414917:	hlt    
  414918:	and    al,BYTE PTR [ebp+0x61]
  41491b:	inc    ebx
  41491c:	inc    esi
  41491d:	sbb    eax,0x44441405
  414922:	push   ecx
  414923:	and    eax,0x3feb4c78
  414928:	push   eax
  414929:	jmp    0xcb57a8b
  41492e:	inc    esp
  41492f:	jmp    0xc55:0x14510c77
  414936:	add    BYTE PTR [eax],al
  414938:	push   edi
  414939:	hlt    
  41493a:	inc    ebx
  41493b:	or     BYTE PTR [ecx],bh
  41493d:	cmp    DWORD PTR [eax],eax
  41493f:	xor    eax,0xf672f10
  414944:	dec    ebp
  414945:	push   esp
  414946:	pop    edi
  414947:	std    
  414948:	adc    edx,DWORD PTR [ecx+edx*2]
  41494b:	sbb    cl,dh
  41494d:	xor    BYTE PTR [esp+ecx*8+0x52],dh
  414951:	cs ins DWORD PTR es:[edi],dx
  414953:	(bad)  [edi]
  414955:	cmp    DWORD PTR [ecx+ecx*1+0x44],esi
  414959:	cwde   
  41495a:	jno    0x414924
  41495c:	or     al,0x28
  41495e:	arpl   WORD PTR [eax],ax
  414960:	sbb    BYTE PTR [ebp+edi*8-0x24be7d8],bh
  414967:	inc    edx
  414968:	xlat   BYTE PTR ds:[ebx]
  414969:	push   ebp
  41496a:	dec    edi
  41496b:	push   esp
  41496c:	mov    edx,0xcc4e4552
  414971:	adc    edx,DWORD PTR [eax+0x52]
  414974:	rcl    esi,0x3c
  414977:	push   edx
  414978:	rcl    DWORD PTR [ebx],0x51
  41497b:	dec    esi
  41497c:	rol    DWORD PTR [edx+0x51],1
  41497f:	inc    ebp
  414980:	fcom   DWORD PTR [eax+0x48]
  414983:	inc    ebp
  414984:	fdivr  st,st(7)
  414987:	inc    ebp
  414988:	xchg   edi,eax
  414989:	inc    ecx
  41498a:	inc    ecx
  41498b:	dec    ecx
  41498c:	(bad)  
  41498d:	push   ebp
  41498e:	add    BYTE PTR [eax],al
  414990:	mul    DWORD PTR fs:[edx+0x69]
  414994:	jbe    0x414979
  414996:	jmp    FWORD PTR [esi+0x5a]
  414999:	stc    
  41499a:	bound  ebp,QWORD PTR [ecx+0x0]
  41499d:	add    dh,dh
  41499f:	inc    esi
  4149a0:	jno    0x414a14
  4149a2:	add    al,0x10
  4149a4:	jo     0x414a07
  4149a6:	imul   esp,ebx,0x72
  4149a9:	outs   dx,DWORD PTR ds:[esi]
  4149aa:	pop    edx
  4149ab:	in     al,dx
  4149ac:	pop    edx
  4149ad:	jbe    0x414998
  4149af:	repz jo 0x414a17
  4149b2:	cwde   
  4149b3:	fsubr  QWORD PTR [esi+0x65]
  4149b6:	sub    dh,dh
  4149b8:	pop    esp
  4149b9:	ins    DWORD PTR es:[edi],dx
  4149ba:	sub    eax,0x74617647
  4149bf:	fsub   QWORD PTR [eax+0x0]
  4149c2:	fsubr  QWORD PTR ds:[edi+0x3a]
  4149c6:	ja     0x41497e
  4149c8:	std    
  4149c9:	addr16 pop esp
  4149cb:	fild   QWORD PTR [edi+0x3a]
  4149ce:	xchg   edi,eax
  4149cf:	mov    dh,0xfd
  4149d1:	ins    BYTE PTR es:[di],dx
  4149d3:	fild   QWORD PTR [edi+0x73]
  4149d6:	adc    dh,BYTE PTR [edi+0x6131002c]
  4149dc:	inc    esi
  4149dd:	ins    DWORD PTR es:[edi],dx
  4149de:	(bad)  
  4149df:	int    0x1d
  4149e1:	arpl   WORD PTR [ebp-0x698de696],cx
  4149e7:	enter  0x28,0x7d
  4149eb:	push   0x19
  4149ed:	jb     0x414975
  4149ef:	pop    eax
  4149f0:	sbb    al,0x73
  4149f2:	pushf  
  4149f3:	lods   eax,DWORD PTR ds:[esi]
  4149f4:	dec    ebp
  4149f5:	inc    ecx
  4149f6:	cdq    
  4149f7:	jnp    0x414a17
  4149f9:	imul   edx,DWORD PTR [ebp+ebx*2-0x527d8ce3],0x52
  414a01:	ins    DWORD PTR es:[edi],dx
  414a02:	add    BYTE PTR [eax],al
  414a04:	push   edi
  414a05:	sbb    DWORD PTR [esi],esi
  414a07:	pop    edi
  414a08:	arpl   WORD PTR [eax+0x1b49414d],dx
  414a0e:	push   ds
  414a0f:	imul   ecx,DWORD PTR [ebp+edi*2+0x1d],0x73
  414a14:	inc    edx
  414a15:	lods   eax,DWORD PTR ds:[esi]
  414a16:	cmp    al,0x6e
  414a18:	inc    edx
  414a19:	inc    ecx
  414a1a:	and    ebp,DWORD PTR [ebp+ecx*2-0x22]
  414a1e:	inc    edi
  414a1f:	addr16 inc ebx
  414a21:	lods   eax,DWORD PTR ds:[esi]
  414a22:	dec    ebp
  414a23:	inc    edx
  414a24:	and    edi,DWORD PTR [esi]
  414a26:	pop    ds
  414a27:	addr16 sbb al,0x48
  414a2a:	add    al,0x5c
  414a2c:	out    dx,eax
  414a2d:	push   ebx
  414a2e:	and    DWORD PTR [eax+0x23],ebp
  414a31:	(bad)  
  414a32:	push   ds
  414a33:	arpl   WORD PTR [ecx],si
  414a35:	push   ecx
  414a36:	inc    ecx
  414a37:	ins    DWORD PTR es:[edi],dx
  414a38:	adc    al,0x6
  414a3a:	sub    BYTE PTR [ebp+0x31],ch
  414a3d:	loope  0x414a90
  414a3f:	ins    DWORD PTR es:[edi],dx
  414a40:	adc    dl,BYTE PTR [edx]
  414a42:	aas    
  414a43:	arpl   bp,bx
  414a45:	cwde   
  414a46:	add    DWORD PTR [ecx+0x14],ecx
  414a49:	call   0xe15b674
  414a4e:	push   ds
  414a4f:	add    ch,dh
  414a51:	icebp  
  414a52:	fimul  WORD PTR [edx-0x2c]
  414a55:	adc    edx,ebx
  414a57:	sub    ah,dl
  414a59:	and    eax,0x21e14fe7
  414a5e:	(bad)  
  414a5f:	and    eax,0x32c427ce
  414a64:	xor    DWORD PTR [edi-0x49],ecx
  414a67:	sbb    al,0x0
  414a69:	add    BYTE PTR [eax-0x5eb764ec],dl
  414a6f:	sub    ecx,edx
  414a71:	dec    edi
  414a72:	jb     0x414a98
  414a74:	shl    BYTE PTR [edx],0x31
  414a77:	inc    ecx
  414a78:	fwait
  414a79:	and    al,0x8f
  414a7b:	cs int3 
  414a7d:	inc    ebp
  414a7e:	gs inc esp
  414a80:	out    0x32,eax
  414a82:	mov    fs,WORD PTR [eax]
  414a84:	test   BYTE PTR [edx],dh
  414a86:	pop    ds
  414a87:	sub    edx,DWORD PTR [ebp-0x65c7cee4]
  414a8d:	sbb    al,0x65
  414a8f:	das    
  414a90:	jp     0x414a95
  414a92:	jne    0x414ad2
  414a94:	xor    BYTE PTR [edx],0x56
  414a97:	xor    DWORD PTR [esi+0x1f],edx
  414a9a:	adc    DWORD PTR [edi+0x44],eax
  414a9d:	sub    BYTE PTR [esi+0x33],dl
  414aa0:	out    0xdd,eax
  414aa2:	dec    esp
  414aa3:	and    BYTE PTR [edi+0x4],dl
  414aa6:	add    BYTE PTR [esp+ecx*2],dl
  414aa9:	add    al,0x1d
  414aab:	adc    al,0x33
  414aad:	add    al,0x16
  414aaf:	adc    al,0x45
  414ab1:	add    al,0xc
  414ab3:	adc    al,0x3a
  414ab5:	add    al,0x31
  414ab7:	adc    al,0x43
  414ab9:	inc    ebp
  414aba:	adc    eax,0xd230925
  414abf:	hlt    
  414ac0:	sub    bl,BYTE PTR ds:0x1cfb25fc
  414ac6:	push   cs
  414ac7:	xor    BYTE PTR [edx+esi*1],cl
  414aca:	xor    DWORD PTR [ecx+0x2c],eax
  414acd:	fiadd  WORD PTR [eax]
  414acf:	add    bh,bh
  414ad1:	and    DWORD PTR [eax],eax
  414ad3:	or     dh,BYTE PTR ds:0x17fb4614
  414ad9:	and    ebp,DWORD PTR [eax-0x51]
  414adc:	fiadd  WORD PTR [ebx+0x0]
  414adf:	pavgb  mm1,QWORD PTR [eax+0x46]
  414ae3:	jmp    0xd3a072d8
  414ae8:	push   edi
  414ae9:	dec    esi
  414aea:	je     0x414aa5
  414aec:	xor    ah,BYTE PTR [ebx]
  414aee:	addr16 mov ch,0x57
  414af1:	out    0x63,al
  414af3:	enter  0x145e,0x4c
  414af7:	enter  0x2041,0x50
  414afb:	mov    BYTE PTR [ecx+0x23],al
  414afe:	jne    0x414a8e
  414b00:	inc    eax
  414b01:	xor    BYTE PTR [eax],al
  414b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b04:	push   ebx
  414b05:	and    esi,DWORD PTR [eax+ebp*4+0x16]
  414b09:	xor    BYTE PTR [edx-0x74],dh
  414b0c:	and    DWORD PTR [ebx],esp
  414b0e:	add    BYTE PTR [ebp-0x638bdced],ch
  414b14:	and    DWORD PTR [ecx],esi
  414b16:	jb     0x414b01
  414b18:	push   cs
  414b19:	xor    eax,0x275d5d71
  414b1e:	jb     0x414b75
  414b20:	xor    eax,0xf94f6d43
  414b25:	push   ds
  414b26:	pop    edi
  414b27:	pop    ebx
  414b28:	push   esi
  414b29:	cmp    BYTE PTR [esi+0x55],al
  414b2c:	push   edx
  414b2d:	and    ebp,DWORD PTR [eax+0x19]
  414b30:	push   esi
  414b31:	xor    eax,0x1569
  414b36:	repz daa 
  414b38:	pop    edi
  414b39:	xor    edx,DWORD PTR [esi+0x4e]
  414b3c:	je     0x414b57
  414b3e:	loope  0x414b82
  414b40:	arpl   WORD PTR ds:0xe6e2d39,dx
  414b46:	inc    eax
  414b47:	adc    al,0x5c
  414b49:	sub    edx,DWORD PTR [ecx]
  414b4b:	xor    eax,0x4e35007a
  414b50:	je     0x414bc2
  414b52:	dec    eax
  414b53:	mov    dh,0x63
  414b55:	jo     0x414b83
  414b57:	adc    BYTE PTR [esi+0x54],al
  414b5a:	sub    BYTE PTR [ebx-0x683d1d8],bh
  414b60:	ins    DWORD PTR es:[edi],dx
  414b61:	imul   edi,DWORD PTR [ebx+eiz*8+0x67],0x65
  414b66:	ins    BYTE PTR es:[edi],dx
  414b67:	hlt    
  414b68:	pop    ebx
  414b69:	outs   dx,DWORD PTR ds:[esi]
  414b6a:	or     BYTE PTR [ebx],bh
  414b6c:	outs   dx,BYTE PTR ds:[esi]
  414b6d:	pop    esp
  414b6e:	sti    
  414b6f:	xor    BYTE PTR [ecx+0x6d],ch
  414b72:	jmp    0xc741afa8
  414b77:	xor    BYTE PTR [esi+0x54],al
  414b7a:	test   al,0x17
  414b7c:	aas    
  414b7d:	outs   dx,DWORD PTR ds:[esi]
  414b7e:	sahf   
  414b7f:	xor    DWORD PTR [ecx+0x63],esp
  414b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b83:	imul   ebp,DWORD PTR cs:[esi-0x65],0x71
  414b88:	jno    0x414c02
  414b8a:	les    edx,FWORD PTR [edi]
  414b8c:	das    
  414b8d:	inc    esp
  414b8e:	std    
  414b8f:	fst    DWORD PTR [ebx+0x50]
  414b92:	enter  0x6544,0x74
  414b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b97:	inc    esp
  414b98:	imul   eax,DWORD PTR cs:[eax],0x2e4e00
  414b9f:	pop    esp
  414ba0:	sub    edx,esp
  414ba2:	sub    BYTE PTR [esi+0x4],al
  414ba5:	call   0x313ca7a9
  414baa:	je     0x414c11
  414bac:	push   esp
  414bad:	xor    eax,0x2df7696f
  414bb2:	popa   
  414bb3:	jb     0x414b3d
  414bb5:	jmp    0x523c:0xe734464a
  414bbc:	push   ebp
  414bbd:	fdivr  QWORD PTR [esi]
  414bbf:	ins    BYTE PTR es:[edi],dx
  414bc0:	cmp    DWORD PTR [ebx+0x6f],ecx
  414bc3:	gs sbb ebx,esp
  414bc6:	push   ebx
  414bc7:	jns    0x414bfa
  414bc9:	sub    eax,0x1ed84c1f
  414bce:	dec    eax
  414bcf:	jns    0x414bc0
  414bd1:	push   ebx
  414bd2:	icebp  
  414bd3:	xor    esp,DWORD PTR [edx]
  414bd5:	ds in  al,dx
  414bd7:	aaa    
  414bd8:	add    al,0x43
  414bda:	repnz inc ebp
  414bdc:	add    edx,eax
  414bde:	hlt    
  414bdf:	das    
  414be0:	add    BYTE PTR [eax+ebx*8-0x1341fdc2],bh
  414be7:	sub    al,BYTE PTR [ecx]
  414be9:	and    eax,0xbf632ff4
  414bee:	repz inc ebp
  414bf0:	pop    ebp
  414bf1:	adc    al,0x42
  414bf3:	inc    edx
  414bf4:	pushf  
  414bf5:	mov    cl,0xf4
  414bf7:	sub    eax,0x5bf1a963
  414bfc:	xchg   BYTE PTR [edi+edx*1+0x31],dl
  414c00:	add    BYTE PTR [eax],al
  414c02:	inc    ebx
  414c03:	jge    0x414c45
  414c05:	pop    edi
  414c06:	xor    BYTE PTR [edi+edi*1+0x457d6154],0x4e
  414c0e:	push   esp
  414c0f:	test   eax,0x9c635f56
  414c14:	pop    ss
  414c15:	xor    DWORD PTR gs:[ebx+0x29],esp
  414c19:	popaw  
  414c1b:	jge    0x414bf4
  414c1d:	jno    0x414c74
  414c1f:	or     eax,0x4f6c5401
  414c24:	aaa    
  414c25:	push   ecx
  414c26:	arpl   WORD PTR [ebx-0x27],cx
  414c29:	sub    DWORD PTR [ecx],esi
  414c2b:	in     eax,dx
  414c2c:	and    dh,BYTE PTR [ecx+0x22]
  414c2f:	jmp    0x2eef:0x1d0d7218
  414c36:	pop    ebx
  414c37:	fucomip st,st(5)
  414c39:	call   FWORD PTR ds:0x1f721f4e
  414c3f:	fcom   QWORD PTR [esi]
  414c41:	arpl   WORD PTR [ebx+0x14],cx
  414c44:	sbb    ch,dh
  414c46:	jle    0x414c40
  414c48:	adc    ebx,DWORD PTR [eax]
  414c4a:	add    eax,0xd5200834
  414c4f:	add    eax,0x4de03704
  414c54:	cli    
  414c55:	in     eax,dx
  414c56:	pop    esi
  414c57:	inc    eax
  414c58:	out    0x4f,eax
  414c5a:	repnz in eax,0x23
  414c5d:	push   edi
  414c5e:	jecxz  0x414c49
  414c60:	mov    ebp,0xb6e7ef03
  414c65:	jecxz  0x414c67
  414c67:	add    ah,ch
  414c69:	add    dl,dh
  414c6b:	add    ebp,edi
  414c6d:	out    0xb6,eax
  414c6f:	cmp    DWORD PTR [ecx+ecx*1+0x88e36e7],ebx
  414c76:	int3   
  414c77:	ss dec edi
  414c79:	or     al,0xcc
  414c7b:	pop    ss
  414c7c:	xor    ebp,esp
  414c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7f:	inc    ecx
  414c80:	gs jmp 0xf0b3a22d
  414c86:	mov    eax,0xcc01931a
  414c8b:	inc    ecx
  414c8c:	pop    ebp
  414c8d:	in     al,0xc6
  414c8f:	neg    BYTE PTR [ecx+ecx*2]
  414c92:	stos   DWORD PTR es:[edi],eax
  414c93:	push   esi
  414c94:	push   eax
  414c95:	push   es
  414c96:	nop
  414c97:	xor    esp,DWORD PTR [ebp+0x5]
  414c9a:	out    0x56,eax
  414c9c:	ficomp DWORD PTR fs:[edx-0x5c19f1ae]
  414ca3:	inc    edi
  414ca4:	arpl   WORD PTR [ecx],ax
  414ca6:	dec    ecx
  414ca7:	sbb    DWORD PTR [edx],ecx
  414ca9:	fidiv  DWORD PTR [edx]
  414cab:	push   esp
  414cac:	adc    DWORD PTR [ebp+0x5],eax
  414caf:	icebp  
  414cb0:	or     bl,dl
  414cb2:	xor    dl,BYTE PTR [eax+eax*1-0x9]
  414cb6:	cmp    BYTE PTR [edx],dh
  414cb8:	adc    al,BYTE PTR [esi]
  414cba:	cmp    al,BYTE PTR [edi+ebp*8]
  414cbd:	out    0xff,eax
  414cbf:	sbb    BYTE PTR [ebp+0x2b346cd4],dl
  414cc5:	or     BYTE PTR [eax],al
  414cc7:	das    
  414cc8:	loope  0x414cad
  414cca:	pop    ds
  414ccb:	daa    
  414ccc:	add    BYTE PTR [eax],al
  414cce:	sbb    al,BYTE PTR [eax]
  414cd0:	arpl   sp,cx
  414cd2:	dec    esi
  414cd3:	adc    al,0x50
  414cd5:	or     BYTE PTR [ebx+eax*1],bl
  414cd8:	jne    0x414cf0
  414cda:	daa    
  414cdb:	clc    
  414cdc:	call   FWORD PTR [ecx]
  414cde:	ss push es
  414ce0:	jbe    0x414cee
  414ce2:	pop    es
  414ce3:	loop   0x414d43
  414ce5:	cld    
  414ce6:	daa    
  414ce7:	adc    al,0x53
  414ce9:	ficomp DWORD PTR [edi]
  414ceb:	push   es
  414cec:	inc    edi
  414ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cee:	xor    bl,cl
  414cf0:	ins    DWORD PTR es:[edi],dx
  414cf1:	rcr    BYTE PTR [esi-0x7],0x5e
  414cf5:	mov    ebp,0xcc71f966
  414cfa:	push   ebp
  414cfb:	or     BYTE PTR [ebp-0x45],ch
  414cfe:	dec    ebx
  414cff:	adc    al,0x50
  414d01:	mov    BYTE PTR [eax+ecx*1+0x4e],0xb4
  414d06:	pop    ds
  414d07:	mul    BYTE PTR [edx-0x65]
  414d0a:	xor    ah,bl
  414d0c:	bound  ebx,QWORD PTR [ebx-0x428e0ac0]
  414d12:	sbb    eax,DWORD PTR [ebx+eiz*2]
  414d15:	jmp    0xe941615c
  414d1a:	xlat   BYTE PTR ds:[bx]
  414d1c:	ds jmp 0x74d04256
  414d22:	mov    bl,0xd6
  414d24:	dec    ebx
  414d25:	mov    esi,0x89056940
  414d2a:	mov    dh,BYTE PTR [ecx+edx*8+0x47]
  414d2e:	(bad)  
  414d2f:	call   0x416833
  414d34:	mov    eax,DWORD PTR [ebp+0x2e]
  414d37:	sbb    ebx,DWORD PTR [edx-0x60ffcec2]
  414d3d:	adc    al,0x30
  414d3f:	or     cl,BYTE PTR [esi-0x66f9d774]
  414d45:	xchg   ecx,eax
  414d46:	add    al,BYTE PTR [edi]
  414d48:	fwait
  414d49:	pop    ss
  414d4a:	add    BYTE PTR [ebx+0x27],dl
  414d4d:	ss je  0x414dc7
  414d50:	sub    DWORD PTR [edx+0x61],ecx
  414d53:	pop    esp
  414d54:	adc    al,0x2d
  414d56:	outs   dx,BYTE PTR ds:[esi]
  414d57:	popa   
  414d58:	dec    ebx
  414d59:	(bad)  
  414d5a:	push   ebx
  414d5b:	push   eax
  414d5c:	adc    al,0xe7
  414d5e:	fs je  0x414d8e
  414d61:	js     0x414dad
  414d63:	popa   
  414d64:	ss xor eax,0x144a6563
  414d6a:	dec    eax
  414d6b:	outs   dx,DWORD PTR ds:[esi]
  414d6c:	pop    ebx
  414d6d:	inc    eax
  414d6e:	add    BYTE PTR [ebp+0x5b],dl
  414d71:	xor    DWORD PTR [edx+0x0],esi
  414d74:	call   0x18b4bcab
  414d79:	in     al,0x6a
  414d7b:	jb     0x414d59
  414d7d:	adc    edx,DWORD PTR [edx+0x65]
  414d80:	in     eax,0x2c
  414d82:	je     0x414de9
  414d84:	cmp    ah,dl
  414d86:	fs jb  0x414da1
  414d89:	fdivr  DWORD PTR [esi]
  414d8b:	jns    0x414d37
  414d8d:	cs jb  0x414df4
  414d90:	popf   
  414d91:	cmp    BYTE PTR [edi+0x0],ah
  414d94:	imul   BYTE PTR [edi]
  414d96:	jno    0x414dfb
  414d98:	add    BYTE PTR [eax],al
  414d9a:	mov    bl,0x13
  414d9c:	jno    0x414e11
  414d9e:	lods   eax,DWORD PTR ds:[esi]
  414d9f:	dec    ecx
  414da0:	arpl   WORD PTR cs:[edi-0x409699d3],sp
  414da7:	adc    edi,DWORD PTR [ebx+esi*2]
  414daa:	lods   eax,DWORD PTR ds:[esi]
  414dab:	aas    
  414dac:	je     0x414e17
  414dae:	data16 das 
  414db0:	and    BYTE PTR [esi+0x69],ch
  414db3:	sub    eax,0x1b313d61
  414db8:	add    al,0x22
  414dba:	xor    edi,esp
  414dbc:	and    ch,BYTE PTR [esp-0x20]
  414dc0:	out    0x21,al
  414dc2:	xor    DWORD PTR [edx],ebp
  414dc4:	adc    eax,0x234e0566
  414dc9:	jb     0x414dd7
  414dcb:	and    DWORD PTR [ecx+0x67],edx
  414dce:	or     al,0x26
  414dd0:	push   ss
  414dd1:	push   esp
  414dd2:	adc    BYTE PTR [ecx],ch
  414dd4:	sbb    al,0x5f
  414dd6:	fmul   QWORD PTR [eax+0x54]
  414dd9:	jae    0x414dd8
  414ddb:	dec    eax
  414ddc:	dec    ebx
  414ddd:	pop    esp
  414dde:	add    ah,BYTE PTR [eax]
  414de0:	xor    DWORD PTR [ecx-0x38],esi
  414de3:	sbb    eax,0x35317116
  414de8:	adc    eax,0x232ebd71
  414ded:	imul   edx,esp,0x7c
  414df0:	push   eax
  414df1:	jno    0x414dbf
  414df3:	push   0x33
  414df5:	pop    edi
  414df6:	pushf  
  414df7:	pusha  
  414df8:	add    DWORD PTR [eax-0x70],edx
  414dfb:	push   0x32
  414dfd:	jne    0x414dff
  414dff:	add    BYTE PTR [esi-0x7effe235],cl
  414e05:	pop    esi
  414e06:	das    
  414e07:	je     0x414e88
  414e09:	rcr    BYTE PTR [eax],1
  414e0b:	bound  ecx,QWORD PTR [ebx+ecx*8-0x546babff]
  414e12:	sbb    BYTE PTR [edi-0x79],ah
  414e15:	pushf  
  414e16:	adc    eax,0x20ad6854
  414e1b:	add    BYTE PTR [edi-0x53],dh
  414e1e:	xor    DWORD PTR [esi-0x7b],eax
  414e21:	lods   eax,DWORD PTR ds:[esi]
  414e22:	shl    DWORD PTR [edi+0x44],cl
  414e25:	mov    eax,ds:0x967f5c01
  414e2a:	sub    eax,0x1d9c4163
  414e2f:	sub    DWORD PTR [edx],ecx
  414e31:	adc    al,0xe7
  414e33:	push   edx
  414e34:	inc    esp
  414e35:	not    BYTE PTR [edx+0x2f]
  414e38:	push   cs
  414e39:	add    cl,BYTE PTR [eax+ecx*2-0x10]
  414e3d:	inc    BYTE PTR [esi+ebx*1+0x12]
  414e41:	stc    
  414e42:	sub    DWORD PTR [ecx],esi
  414e44:	and    DWORD PTR [edx+ebx*1],esi
  414e47:	pop    ss
  414e48:	pop    ss
  414e49:	or     BYTE PTR [esi],bh
  414e4b:	and    eax,0x3de6f903
  414e50:	in     eax,0xe3
  414e52:	(bad)  
  414e53:	pop    ds
  414e54:	adc    al,BYTE PTR [ebx]
  414e56:	adc    ebx,DWORD PTR ds:0x1d1af4df
  414e5c:	aam    0xfd
  414e5e:	(bad)  
  414e5f:	xor    dl,dl
  414e61:	add    ebp,edi
  414e63:	and    BYTE PTR [eax],al
  414e65:	add    bl,ah
  414e67:	adc    esp,DWORD PTR ds:0xb33e150
  414e6d:	and    eax,eax
  414e6f:	pop    es
  414e70:	add    BYTE PTR [esi],dl
  414e72:	fiadd  WORD PTR [edi]
  414e74:	rcl    BYTE PTR [esi],1
  414e76:	(bad)  
  414e77:	xor    edx,esp
  414e79:	xor    dl,BYTE PTR [edx+0x7d3de702]
  414e7f:	in     al,0x6
  414e81:	and    BYTE PTR [edx-0x78e344ff],dl
  414e87:	repz mov dl,0x1c
  414e8a:	pushf  
  414e8b:	inc    BYTE PTR [esi]
  414e8d:	xor    al,0x66
  414e8f:	add    DWORD PTR [edx-0x74fd73d2],edi
  414e95:	add    ebp,DWORD PTR [edi-0x18]
  414e98:	mov    dh,0xe3
  414e9a:	push   edx
  414e9b:	neg    DWORD PTR [ecx-0x7801b1d1]
  414ea1:	das    
  414ea2:	push   esi
  414ea3:	std    
  414ea4:	xchg   esp,eax
  414ea5:	jecxz  0x414eed
  414ea7:	std    
  414ea8:	js     0x414ed9
  414eaa:	xor    esi,edx
  414eac:	call   FWORD PTR [edx+eiz*2+0x3846434]
  414eb3:	or     BYTE PTR [edi+0x57],ah
  414eb6:	adc    cl,BYTE PTR [eax]
  414eb8:	addr16 dec esi
  414eba:	inc    edi
  414ebb:	xor    al,0x61
  414ebd:	dec    eax
  414ebe:	popa   
  414ebf:	in     eax,dx
  414ec0:	imul   edi,DWORD PTR [esi],0x3c
  414ec3:	adc    al,0x46
  414ec5:	sbb    eax,0x3b7033fd
  414eca:	add    BYTE PTR [eax],al
  414ecc:	and    al,0xf6
  414ece:	inc    bp
  414ed0:	add    eax,DWORD PTR es:[eax]
  414ed3:	daa    
  414ed4:	loope  0x414eb9
  414ed6:	push   eax
  414ed7:	adc    DWORD PTR [esi],edx
  414ed9:	add    BYTE PTR [ecx+ebp*8+0x4c],ch
  414edd:	or     BYTE PTR [eax+0x1a],dh
  414ee0:	inc    ebp
  414ee1:	icebp  
  414ee2:	imul   edi,ebp,0xffffff84
  414ee5:	div    DWORD PTR [eax+0x10]
  414ee8:	sub    eax,0x1076ce3
  414eed:	pop    es
  414eee:	pop    edi
  414eef:	sti    
  414ef0:	daa    
  414ef1:	lock dec edx
  414ef3:	sub    al,ah
  414ef5:	cmp    BYTE PTR [ecx-0x2a],dl
  414ef8:	adc    al,0x8
  414efa:	pop    esp
  414efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efc:	jle    0x414ee2
  414efe:	inc    esi
  414eff:	mov    DWORD PTR [edi+edi*8+0x5b],0x73083fba
  414f07:	mov    ecx,0xb55ed832
  414f0c:	push   ebx
  414f0d:	fsub   DWORD PTR [esi-0x45]
  414f10:	xor    dh,al
  414f12:	inc    ebp
  414f13:	xchg   ebp,eax
  414f14:	(bad)  
  414f15:	aad    0x6d
  414f17:	(bad)  
  414f18:	sbb    eax,0x20845114
  414f1d:	push   es
  414f1e:	arpl   WORD PTR [ebx-0x6a8f0ae2],bx
  414f24:	add    al,0x5
  414f26:	imul   eax,DWORD PTR [eax],0xffffffbc
  414f29:	adc    BYTE PTR [esi+0x65],cl
  414f2c:	mov    al,0x3d
  414f2e:	outs   dx,DWORD PTR ds:[esi]
  414f2f:	inc    esi
  414f30:	add    BYTE PTR [eax],al
  414f32:	mov    cl,0x24
  414f34:	popa   
  414f35:	add    BYTE PTR [esi+0x6173703c],dh
  414f3b:	inc    esp
  414f3c:	popa   
  414f3d:	add    DWORD PTR cs:[esi],esp
  414f40:	add    BYTE PTR gs:[esi+0x31],dl
  414f44:	outs   dx,DWORD PTR ds:[esi]
  414f45:	je     0x414fa2
  414f47:	inc    esp
  414f48:	imul   ebp,DWORD PTR [esi-0x1b],0x77
  414f4c:	aas    
  414f4d:	jb     0x414f4e
  414f4f:	outs   dx,DWORD PTR ds:[esi]
  414f51:	gs dec edx
  414f53:	sbb    BYTE PTR [esi+0x54],al
  414f56:	sbb    BYTE PTR [ebp+eiz*2+0x73],cl
  414f5a:	adc    al,0x66
  414f5c:	popa   
  414f5d:	bound  ebx,QWORD PTR [eax-0x2c]
  414f60:	dec    eax
  414f61:	popa   
  414f62:	dec    eax
  414f63:	sub    al,0x61
  414f65:	push   ebx
  414f66:	inc    esp
  414f67:	cmp    eax,0xdc3f6964
  414f6c:	ds push 0x6569274a
  414f72:	sub    BYTE PTR [ecx+esi*2],ch
  414f75:	jae    0x414fbf
  414f77:	imul   edi,DWORD PTR ds:0x44534840,0x40
  414f7e:	sbb    BYTE PTR [ebx],ch
  414f80:	inc    esi
  414f81:	inc    eax
  414f82:	sbb    cl,dl
  414f84:	dec    ecx
  414f85:	inc    eax
  414f86:	or     BYTE PTR [ecx+0x49],bl
  414f89:	inc    eax
  414f8a:	or     BYTE PTR [edi],dl
  414f8c:	push   eax
  414f8d:	inc    eax
  414f8e:	sbb    BYTE PTR [ecx+0x54],dl
  414f91:	inc    eax
  414f92:	sbb    BYTE PTR [ecx+edx*2+0x40],bl
  414f96:	add    BYTE PTR [eax],al
  414f98:	or     BYTE PTR [edx+0x56],dl
  414f9b:	inc    eax
  414f9c:	or     bl,dl
  414f9e:	push   edi
  414f9f:	inc    eax
  414fa0:	fcomp  DWORD PTR [edi]
  414fa2:	push   ebp
  414fa3:	inc    eax
  414fa4:	xor    DWORD PTR [ebp+0x44],edi
  414fa7:	pop    ecx
  414fa8:	jno    0x415027
  414faa:	mov    eax,ds:0x2f7d715b
  414faf:	pusha  
  414fb0:	jno    0x41502f
  414fb2:	fisub  DWORD PTR [eax+0x71]
  414fb5:	jge    0x415024
  414fb7:	popa   
  414fb8:	jno    0x415037
  414fba:	xchg   esp,eax
  414fbb:	popa   
  414fbc:	jno    0x41503b
  414fbe:	sub    al,0x64
  414fc0:	icebp  
  414fc1:	jl     0x414f73
  414fc3:	fs icebp 
  414fc5:	jl     0x414f58
  414fc7:	data16 icebp 
  414fc9:	jl     0x414faf
  414fcb:	fs icebp 
  414fcd:	jl     0x415045
  414fcf:	push   0xfffffff1
  414fd1:	jl     0x415001
  414fd3:	imul   esi,ecx,0x7c
  414fd6:	ja     0x415045
  414fd8:	icebp  
  414fd9:	jl     0x41504e
  414fdb:	jo     0x414fce
  414fdd:	jl     0x41502c
  414fdf:	outs   dx,DWORD PTR ds:[esi]
  414fe0:	icebp  
  414fe1:	jl     0x415031
  414fe3:	jb     0x414fd6
  414fe5:	jl     0x415001
  414fe7:	je     0x414fda
  414fe9:	jl     0x414fe4
  414feb:	ja     0x414fde
  414fed:	jl     0x415013
  414fef:	js     0x414fe2
  414ff1:	jl     0x414fbf
  414ff3:	js     0x414fe6
  414ff5:	jl     0x414ff4
  414ff7:	js     0x414fea
  414ff9:	jl     0x415023
  414ffb:	jns    0x414ffd
  414ffd:	add    cl,dh
  414fff:	jl     0x41504f
  415001:	xchg   BYTE PTR [ecx+0x7d],dh
  415004:	cmp    al,BYTE PTR [edi-0x7615828f]
  41500a:	jno    0x415089
  41500c:	mov    ebx,0x247d7196
  415011:	xchg   ebp,eax
  415012:	jno    0x415091
  415014:	cli    
  415015:	xchg   edi,eax
  415016:	jno    0x415095
  415018:	jg     0x414fb2
  41501a:	jno    0x415099
  41501c:	call   0xe755c1b7
  415021:	outs   dx,DWORD PTR ds:[esi]
  415022:	(bad)  
  415023:	shl    esi,cl
  415025:	fcmovne st,st(0)
  415027:	shl    esi,cl
  415029:	mov    ebp,0x3be6d3bb
  41502e:	mov    eax,0xa855e6d3
  415033:	shl    esi,cl
  415035:	mov    al,0xa8
  415037:	shl    esi,cl
  415039:	fcom   DWORD PTR [edx-0x7130192d]
  41503f:	shl    esi,cl
  415041:	mov    al,ds:0x8be6d3d6
  415046:	call   0xd89e371e
  41504b:	shl    esi,cl
  41504d:	lods   eax,DWORD PTR ds:[esi]
  41504e:	fcom   st(3)
  415050:	out    0x18,al
  415052:	int    0xd3
  415054:	out    0x69,al
  415056:	(bad)
  415059:	mov    edx,0xbe6d3bd
  41505e:	mov    edx,0x2ce6d3
  415063:	add    BYTE PTR [edx-0x58b6192d],ch
  415069:	shl    esi,cl
  41506b:	mov    bl,0x9f
  41506d:	shl    esi,cl
  41506f:	ins    DWORD PTR es:[edi],dx
  415070:	jno    0x415045
  415072:	out    0xe6,al
  415074:	(bad)  
  415075:	shl    esi,cl
  415077:	sub    BYTE PTR [esi+0x7ec0e6d3],al
  41507d:	shl    esi,cl
  41507f:	inc    edi
  415080:	jo     0x415055
  415082:	out    0x65,al
  415084:	lock aam 0xe6
  415087:	div    dl
  415089:	aam    0xe6
  41508b:	icebp  
  41508c:	repz aam 0xe6
  41508f:	imul   esi,edx,0xffffffd4
  415092:	out    0x38,al
  415094:	not    ah
  415096:	out    0x6d,al
  415098:	out    dx,al
  415099:	aam    0xff
  41509b:	call   0xe981afa6
  4150a0:	sbb    bl,BYTE PTR [ebp+0x40]
  4150a3:	jmp    0xe981a9ca
  4150a8:	daa    
  4150a9:	arpl   WORD PTR [eax-0x17],ax
  4150ac:	pop    edx
  4150ad:	gs inc eax
  4150af:	jmp    0xe981b641
  4150b4:	or     DWORD PTR [eax+eax*2-0x17],ebp
  4150b8:	mov    al,0x6c
  4150ba:	inc    eax
  4150bb:	jmp    0xe981b37e
  4150c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c1:	popa   
  4150c2:	inc    eax
  4150c3:	jmp    0xe981bf03
  4150c8:	add    BYTE PTR [eax],al
  4150ca:	mov    ecx,0x32e9406e
  4150cf:	adc    al,0x0
  4150d1:	jmp    0xe9416508
  4150d6:	xor    dl,BYTE PTR [eax+eax*1]
  4150d9:	jmp    0xe9416510
  4150de:	xor    dl,BYTE PTR [eax+eax*1]
  4150e1:	jmp    0xca848d3
  4150e6:	and    eax,DWORD PTR [eax]
  4150e8:	and    BYTE PTR [ecx],dh
  4150ea:	adc    al,BYTE PTR [ebx]
  4150ec:	push   0x3ee025e9
  4150f1:	xor    eax,0x302ae31e
  4150f6:	(bad)  
  4150f7:	jecxz  0x415145
  4150f9:	sbb    ecx,DWORD PTR [ecx]
  4150fb:	cmp    eax,0x3535224d
  415100:	fs mov edi,0xe9630c0f
  415106:	pop    ss
  415107:	cmp    DWORD PTR [edx],esi
  415109:	shl    DWORD PTR [edx],0x0
  41510c:	jb     0x4150ea
  41510e:	push   edi
  41510f:	adc    al,0x6d
  415111:	ror    BYTE PTR [esi+0x3a],0x62
  415115:	add    cl,bh
  415117:	and    BYTE PTR [eax],al
  415119:	or     DWORD PTR [ecx],eax
  41511b:	sbb    cl,BYTE PTR [edx]
  41511d:	or     eax,0x3a201e12
  415122:	mov    bh,0x21
  415124:	ins    DWORD PTR es:[edi],dx
  415125:	and    ch,ah
  415127:	push   ss
  415128:	and    BYTE PTR [ebp+ebp*4+0x38],ah
  41512c:	and    BYTE PTR [ecx],cl
  41512e:	add    BYTE PTR [eax],al
  415130:	in     eax,dx
  415131:	gs sbb eax,0x516f520
  415137:	imul   edi,DWORD PTR [esi-0x52dff98c],0x3c73652c
  415141:	jne    0x415149
  415143:	and    al,ch
  415145:	jno    0x415175
  415147:	and    BYTE PTR [ecx-0x898e28c],ah
  41514d:	sub    ebp,DWORD PTR [ebx+0x20]
  415150:	xchg   ecx,eax
  415151:	je     0x4151bf
  415153:	jne    0x41514e
  415155:	sbb    al,0x9
  415157:	or     bh,BYTE PTR [eax]
  415159:	cmp    al,0x61
  41515b:	ins    BYTE PTR es:[edi],dx
  41515c:	cmp    BYTE PTR ds:0x74782520,bl
  415162:	std    
  415163:	pop    ds
  415164:	sub    BYTE PTR [edx+0x22],dh
  415167:	jae    0x4151e3
  415169:	je     0x415188
  41516b:	and    BYTE PTR [eax+0x74],bh
  41516e:	std    
  41516f:	push   edx
  415170:	xor    BYTE PTR [ecx],dh
  415172:	ins    BYTE PTR es:[edi],dx
  415173:	ins    BYTE PTR es:[edi],dx
  415174:	or     eax,0x4d636128
  415179:	and    BYTE PTR [ecx+0x41],ah
  41517c:	pop    eax
  41517d:	pop    ds
  41517e:	push   0x2f443465
  415183:	xor    dh,BYTE PTR [esi+0x30]
  415186:	ins    BYTE PTR es:[edi],dx
  415187:	ins    BYTE PTR es:[edi],dx
  415188:	sbb    BYTE PTR [edi],ch
  41518a:	js     0x4151fc
  41518c:	hlt    
  41518d:	inc    esp
  41518e:	jb     0x4151f5
  415190:	xor    DWORD PTR [ebx-0x11],ebp
  415193:	bound  eax,QWORD PTR [eax]
  415195:	add    BYTE PTR [ecx+0x5c510150],bl
  41519b:	mov    esi,gs
  41519d:	xor    dl,BYTE PTR [esp+ecx*4-0x27]
  4151a1:	(bad)  
  4151a2:	(bad)  
  4151a3:	jge    0x4151a6
  4151a5:	add    BYTE PTR [edx+0x50],ah
  4151a8:	dec    edx
  4151a9:	imul   esp,DWORD PTR [ecx-0x68],0x13
  4151ad:	jno    0x415205
  4151af:	xchg   edi,eax
  4151b0:	and    dh,BYTE PTR [esp+edx*2-0x33]
  4151b4:	adc    esp,DWORD PTR [edi+0x5f]
  4151b7:	xchg   esp,eax
  4151b8:	sub    eax,0x1985663
  4151bd:	push   ecx
  4151be:	dec    esp
  4151bf:	mov    eax,ds:0xb616224
  4151c4:	sub    dh,BYTE PTR [esi+0x48]
  4151c7:	or     DWORD PTR [esi],esp
  4151c9:	gs adc al,0x7d
  4151cc:	xor    ah,BYTE PTR [ebx-0xe]
  4151cf:	in     al,0x22
  4151d1:	outs   dx,BYTE PTR ds:[esi]
  4151d2:	push   ss
  4151d3:	fmul   DWORD PTR [ebp+0x6d]
  4151d6:	sbb    eax,0xe17725d4
  4151db:	dec    edx
  4151dc:	sub    esi,DWORD PTR [esi+0x18]
  4151df:	fldenv [esi]
  4151e1:	gs adc al,0x7d
  4151e4:	xor    ah,BYTE PTR [ebx-0xe]
  4151e7:	dec    edx
  4151e8:	daa    
  4151e9:	pop    edi
  4151ea:	in     eax,0x17
  4151ec:	cmp    BYTE PTR [ebp-0x26],ch
  4151ef:	ucomiss xmm2,DWORD PTR [eax-0x1d]
  4151f3:	adc    edx,DWORD PTR [esi]
  4151f5:	lds    ecx,FWORD PTR [bx]
  4151f8:	and    eax,0x31000063
  4151fd:	sub    ah,BYTE PTR [edi]
  4151ff:	inc    edx
  415200:	rcr    BYTE PTR [ecx],1
  415202:	sub    DWORD PTR [ebx-0x3f],esi
  415205:	sub    al,0x12
  415207:	addr16 mov edi,0x96633013
  41520d:	adc    al,0xcc
  41520f:	add    eax,DWORD PTR [eax-0x5fd7470f]
  415215:	add    dh,al
  415217:	adc    DWORD PTR [edx-0x78d3271c],edx
  41521d:	std    
  41521e:	shr    BYTE PTR [eax],cl
  415220:	mov    ecx,?
  415222:	out    0x32,al
  415224:	xchg   edx,eax
  415225:	ffree  st(4)
  415227:	and    al,BYTE PTR [ebx+0x5212c7f1]
  41522d:	in     eax,0x9b
  41522f:	cs pop ebp
  415231:	cmc    
  415232:	mov    dh,0x11
  415234:	push   esi
  415235:	(bad)  
  415236:	jg     0x415267
  415238:	push   edx
  415239:	out    dx,eax
  41523a:	add    DWORD PTR [ebx],0x60
  41523d:	icebp  
  41523e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523f:	adc    al,BYTE PTR [eax-0x3]
  415242:	test   DWORD PTR ds:0x30800261,ebp
  415248:	push   esi
  415249:	add    dh,BYTE PTR [eax+0x37]
  41524c:	sbb    al,0xfb
  41524e:	dec    ebx
  41524f:	add    DWORD PTR cs:[edx],eax
  415252:	push   eax
  415253:	push   ss
  415254:	push   ss
  415255:	clc    
  415256:	dec    ebx
  415257:	daa    
  415258:	adc    dl,BYTE PTR [edi+eiz*8]
  41525b:	add    esi,DWORD PTR [ecx]
  41525d:	adc    al,0xe7
  41525f:	add    eax,DWORD PTR [eax]
  415261:	add    BYTE PTR [ecx],dh
  415263:	adc    al,0xe7
  415265:	add    esi,DWORD PTR [ecx]
  415267:	adc    al,0xe7
  415269:	add    esi,DWORD PTR [ecx]
  41526b:	adc    al,0xe7
  41526d:	add    esi,DWORD PTR [ecx]
  41526f:	adc    al,0xe7
  415271:	add    esi,DWORD PTR [ecx]
  415273:	adc    al,0xe7
  415275:	add    esi,DWORD PTR [ecx]
  415277:	adc    al,0xe7
  415279:	add    esi,DWORD PTR [ecx]
  41527b:	adc    al,0xe7
  41527d:	add    esi,DWORD PTR [ecx]
  41527f:	adc    al,0xe7
  415281:	add    esi,DWORD PTR [ecx]
  415283:	adc    al,0xe7
  415285:	add    esi,DWORD PTR [ecx]
  415287:	adc    al,0x0
  415289:	jmp    0xe94166c0
  41528e:	xor    dl,BYTE PTR [eax+eax*1]
  415291:	jmp    0xe94166c8
  415296:	xor    dl,BYTE PTR [eax+eax*1]
  415299:	jmp    0xe94166d0
  41529e:	xor    dl,BYTE PTR [eax+eax*1]
  4152a1:	jmp    0xe94166d8
  4152a6:	xor    dl,BYTE PTR [eax+eax*1]
  4152a9:	jmp    0xe94166e0
  4152ae:	xor    dl,BYTE PTR [eax+eax*1]
  4152b1:	jmp    0xe94166e8
  4152b6:	xor    dl,BYTE PTR [eax+eax*1]
  4152b9:	jmp    0xe94166f0
  4152be:	xor    dl,BYTE PTR [eax+eax*1]
  4152c1:	jmp    0xe94166f8
  4152c6:	add    BYTE PTR [eax],al
  4152c8:	xor    dl,BYTE PTR [eax+eax*1]
  4152cb:	jmp    0xe9416702
  4152d0:	xor    dl,BYTE PTR [eax+eax*1]
  4152d3:	jmp    0xe941670a
  4152d8:	xor    dl,BYTE PTR [eax+eax*1]
  4152db:	jmp    0xe9416712
  4152e0:	xor    dl,BYTE PTR [eax+eax*1]
  4152e3:	jmp    0xe941671a
  4152e8:	xor    dl,BYTE PTR [eax+eax*1]
  4152eb:	jmp    0xe9416722
  4152f0:	xor    dl,BYTE PTR [eax+eax*1]
  4152f3:	jmp    0xe941672a
  4152f8:	xor    dl,BYTE PTR [eax+eax*1]
  4152fb:	jmp    0xe9416732
  415300:	xor    dl,BYTE PTR [eax+eax*1]
  415303:	add    BYTE PTR [eax+0x11],bl
  415306:	add    BYTE PTR [eax],al
  415308:	dec    eax
  415309:	adc    DWORD PTR [eax],eax
  41530b:	add    BYTE PTR [eax+0x11],cl
  41530e:	add    BYTE PTR [eax],al
  415310:	sbb    BYTE PTR [ecx],dl
  415312:	add    BYTE PTR [eax],al
  415314:	sbb    BYTE PTR [ecx],dl
  415316:	add    BYTE PTR [eax],al
  415318:	or     BYTE PTR [ecx],dl
  41531a:	add    BYTE PTR [eax],al
  41531c:	or     BYTE PTR [ecx],dl
  41531e:	add    BYTE PTR [eax],al
  415320:	sbb    BYTE PTR [ecx],dl
  415322:	add    BYTE PTR [eax],al
  415324:	sbb    BYTE PTR [ecx],dl
  415326:	add    BYTE PTR [eax],al
  415328:	or     BYTE PTR [ecx],dl
  41532a:	add    BYTE PTR [eax],al
  41532c:	add    BYTE PTR [eax],al
  41532e:	or     BYTE PTR [ecx],dl
  415330:	add    BYTE PTR [eax],al
  415332:	fcom   DWORD PTR [eax]
  415334:	add    BYTE PTR [eax],al
  415336:	fcom   DWORD PTR [eax]
  415338:	add    BYTE PTR [eax],al
  41533a:	enter  0x10,0x0
  41533e:	enter  0x10,0x0
  415342:	fcom   DWORD PTR [eax]
  415344:	add    BYTE PTR [eax],al
  415346:	fcom   DWORD PTR [eax]
  415348:	add    BYTE PTR [eax],al
  41534a:	enter  0x10,0x0
  41534e:	enter  0x10,0x0
  415352:	cwde   
  415353:	adc    BYTE PTR [eax],al
  415355:	add    BYTE PTR [eax-0x77fffff0],bl
  41535b:	adc    BYTE PTR [eax],al
  41535d:	add    BYTE PTR [eax-0x67fffff0],cl
  415363:	adc    BYTE PTR [eax],al
  415365:	add    BYTE PTR [eax-0x77fffff0],bl
  41536b:	adc    BYTE PTR [eax],al
  41536d:	add    BYTE PTR [eax+0x58000010],cl
  415373:	adc    BYTE PTR [eax],al
  415375:	add    BYTE PTR [eax+0x10],bl
  415378:	add    BYTE PTR [eax],al
  41537a:	dec    eax
  41537b:	adc    BYTE PTR [eax],al
  41537d:	add    BYTE PTR [ecx],dh
  41537f:	jnp    0x415382
  415381:	add    BYTE PTR [ecx],dh
  415383:	jnp    0x415386
  415385:	add    BYTE PTR [ecx],dh
  415387:	jnp    0x41538a
  415389:	add    BYTE PTR [ecx],dh
  41538b:	jnp    0x41538e
  41538d:	add    BYTE PTR [ecx],dh
  41538f:	jnp    0x415392
  415391:	add    BYTE PTR [eax],al
  415393:	add    BYTE PTR [ecx],dh
  415395:	ins    DWORD PTR es:[edi],dx
  415396:	add    DWORD PTR [eax],eax
  415398:	xor    DWORD PTR [ebp+0x1],ebp
  41539b:	add    BYTE PTR [ecx],dh
  41539d:	ins    DWORD PTR es:[edi],dx
  41539e:	add    DWORD PTR [eax],eax
  4153a0:	xor    DWORD PTR [ebp+0x1],ebp
  4153a3:	add    BYTE PTR [ecx],dh
  4153a5:	ins    DWORD PTR es:[edi],dx
  4153a6:	add    DWORD PTR [eax],eax
  4153a8:	xor    DWORD PTR [ebp+0x1],ebp
  4153ab:	add    BYTE PTR [ecx],dh
  4153ad:	ins    DWORD PTR es:[edi],dx
  4153ae:	add    DWORD PTR [eax],eax
  4153b0:	xor    DWORD PTR [ebp+0x1],ebp
  4153b3:	add    BYTE PTR [ecx],dh
  4153b5:	ins    DWORD PTR es:[edi],dx
  4153b6:	add    DWORD PTR [eax],eax
  4153b8:	xor    DWORD PTR [ebp+0x1],ebp
  4153bb:	add    BYTE PTR [ecx],dh
  4153bd:	ins    DWORD PTR es:[edi],dx
  4153be:	add    DWORD PTR [eax],eax
  4153c0:	xor    DWORD PTR [ebp+0x1],ebp
  4153c3:	add    BYTE PTR [ecx],dh
  4153c5:	ins    DWORD PTR es:[edi],dx
  4153c6:	add    DWORD PTR [eax],eax
  4153c8:	xor    DWORD PTR [ebp+0x1],ebp
  4153cb:	add    BYTE PTR [ecx],dh
  4153cd:	ins    DWORD PTR es:[edi],dx
  4153ce:	add    DWORD PTR [eax],eax
  4153d0:	xor    DWORD PTR [ebp+0x1],ebp
  4153d3:	add    BYTE PTR [ecx],dh
  4153d5:	ins    DWORD PTR es:[edi],dx
  4153d6:	add    DWORD PTR [eax],eax
  4153d8:	xor    DWORD PTR [ebp+0x1],ebp
  4153db:	add    BYTE PTR [ecx],dh
  4153dd:	ins    DWORD PTR es:[edi],dx
  4153de:	add    DWORD PTR [eax],eax
  4153e0:	xor    DWORD PTR [ebp+0x1],ebp
  4153e3:	add    BYTE PTR [ecx],dh
  4153e5:	ins    DWORD PTR es:[edi],dx
  4153e6:	add    DWORD PTR [eax],eax
  4153e8:	xor    DWORD PTR [esi+eiz*8+0x42],ebp
  4153ec:	push   ss
  4153ed:	add    al,0x6d
  4153ef:	retf   
  4153f0:	xchg   bl,cl
  4153f2:	mov    eax,0x304bc9ba
  4153f7:	xor    al,BYTE PTR [eax]
  4153f9:	add    BYTE PTR [ecx+0x14],al
  4153fc:	jo     0x41546d
  4153fe:	push   0x73
  415400:	call   0x673c47eb
  415405:	add    al,0xf1
  415407:	adc    eax,edi
  415409:	add    esp,DWORD PTR [ecx]
  41540b:	adc    al,0xef
  41540d:	add    esi,DWORD PTR ds:0x3603e914
  415413:	and    edi,0x3
  415416:	mov    cl,0x13
  415418:	out    0x3,eax
  41541a:	jno    0x415430
  41541c:	out    0x3,eax
  41541e:	push   ecx
  41541f:	adc    al,0xe7
  415421:	add    eax,DWORD PTR [ecx+0x14]
  415424:	out    0x3,eax
  415426:	cmp    DWORD PTR [edi+eiz*8],edx
  415429:	add    ebp,DWORD PTR ds:0x3303e714
  41542f:	adc    al,0xe7
  415431:	add    esi,esi
  415433:	and    bh,0x83
  415436:	xor    DWORD PTR [edi+eiz*8],edx
  415439:	inc    ebx
  41543a:	xor    DWORD PTR [edi+eiz*8],edx
  41543d:	jecxz  0x41541d
  41543f:	and    bh,0xf3
  415442:	(bad)  
  415443:	and    bh,0xb
  415446:	xor    DWORD PTR [edi+eiz*8],edx
  415449:	inc    esi
  41544b:	and    bh,0x5
  41544e:	xor    DWORD PTR [edi+eiz*8],edx
  415451:	add    al,0x31
  415453:	adc    al,0x67
  415455:	add    al,0x31
  415457:	adc    al,0xa7
  415459:	add    esi,DWORD PTR [ecx]
  41545b:	adc    al,0x7
  41545d:	add    al,0x0
  41545f:	add    BYTE PTR [ecx],dh
  415461:	adc    al,0xf7
  415463:	add    esi,DWORD PTR [ecx]
  415465:	adc    al,0xdf
  415467:	add    esi,DWORD PTR [ecx]
  415469:	adc    al,0xe3
  41546b:	add    esi,DWORD PTR [ecx]
  41546d:	adc    al,0xe9
  41546f:	add    esi,DWORD PTR [ecx]
  415471:	adc    al,0xe8
  415473:	add    esi,DWORD PTR [ecx]
  415475:	adc    al,0x0
  415477:	icebp  
  415478:	cmp    BYTE PTR [edx],0x20
  41547b:	shl    DWORD PTR [edx+0x1a],1
  41547e:	add    al,ah
  415480:	test   DWORD PTR [ecx],edi
  415482:	pop    ds
  415483:	add    BYTE PTR [ecx+ebx*1-0x1],bl
  415487:	shl    BYTE PTR [esp+ebp*1+0x22],cl
  41548b:	repz cmp al,0xc
  41548e:	add    al,dl
  415490:	sub    esp,DWORD PTR [bx+di]
  415493:	mov    edi,0xd7263060
  415498:	and    BYTE PTR [eax],dl
  41549a:	push   es
  41549b:	lods   al,BYTE PTR ds:[esi]
  41549c:	add    DWORD PTR [edi],ebp
  41549e:	and    eax,DWORD PTR [eax+eiz*1]
  4154a1:	lsl    ebx,WORD PTR ds:0xf5242e01
  4154a8:	push   ds
  4154a9:	push   cs
  4154aa:	add    al,0xf2
  4154ac:	dec    DWORD PTR [ecx+eax*1]
  4154af:	call   0xf1476ce8
  4154b4:	and    al,0x10
  4154b6:	push   cs
  4154b7:	out    0xe5,al
  4154b9:	and    al,0x13
  4154bb:	(bad)  
  4154bc:	in     eax,0x1c
  4154be:	sbb    al,0xf4
  4154c0:	loop   0x4154cd
  4154c2:	adc    eax,0xd60000e9
  4154c7:	adc    ebx,DWORD PTR [ecx]
  4154c9:	out    0x31,eax
  4154cb:	sub    BYTE PTR [edi],al
  4154cd:	idiv   DWORD PTR [esp+ecx*1+0xf33e001]
  4154d4:	push   es
  4154d5:	jecxz  0x415496
  4154d7:	or     eax,0x1f87c0ff
  4154dc:	and    al,0xbf
  4154de:	sbb    BYTE PTR [esi],0x25
  4154e1:	sbb    ecx,DWORD PTR [ecx+0x7d122d21]
  4154e7:	aaa    
  4154e8:	xor    eax,0x272e6108
  4154ed:	sbb    BYTE PTR [ebp+ebx*1-0x7e77ffe3],cl
  4154f4:	inc    BYTE PTR [eax]
  4154f6:	mov    BYTE PTR ds:0x15580000,dl
  4154fc:	std    
  4154fd:	dec    DWORD PTR [ecx+eax*4-0x2]
  415501:	add    BYTE PTR [ebp+edx*1-0x3],cl
  415505:	add    BYTE PTR [ecx+eax*4-0x2],cl
  415509:	call   FWORD PTR [ebp+edx*1+0x0]
  41550d:	add    BYTE PTR [eax+0x15],bl
  415510:	std    
  415511:	dec    DWORD PTR [eax-0x7f]
  415514:	std    
  415515:	dec    DWORD PTR [eax-0x7f]
  415518:	inc    BYTE PTR [eax]
  41551a:	sbb    al,0x81
  41551c:	inc    BYTE PTR [eax]
  41551e:	sbb    BYTE PTR [ecx-0x7ef30003],al
  415524:	std    
  415525:	add    BYTE PTR [edx*1+0xfd],cl
  41552c:	sbb    BYTE PTR ds:0x150c0100,dl
  415532:	add    BYTE PTR [eax],al
  415534:	or     al,0x81
  415536:	std    
  415537:	dec    DWORD PTR [eax]
  415539:	cmp    ebp,0xfd80d800
  41553f:	add    al,bl
  415541:	cmp    dh,0xff
  415544:	enter  0xfe80,0xff
  415548:	enter  0xfd14,0x0
  41554c:	fcom   DWORD PTR [edi*8-0x27f3400]
  415553:	add    ah,cl
  415555:	adc    al,0xfd
  415557:	dec    esp
  415559:	adc    al,0x0
  41555b:	add    DWORD PTR [esp+edx*1+0x148c0100],ebx
  415562:	std    
  415563:	dec    DWORD PTR [eax-0x73ffffec]
  415569:	cmp    ch,0xff
  41556c:	xor    DWORD PTR [edi-0x3],ebp
  41556f:	inc    BYTE PTR [esi+0x3000016a]
  415575:	imul   eax,DWORD PTR [ecx],0xffffffff
  415578:	jbe    0x4155f0
  41557a:	std    
  41557b:	(bad)  
  41557c:	xor    DWORD PTR [edi+0x1],ebp
  41557f:	add    BYTE PTR [ecx],dh
  415581:	imul   eax,DWORD PTR [ecx],0xffffffff
  415584:	xor    DWORD PTR [ebx-0x3],ebp
  415587:	(bad)  
  415588:	xor    DWORD PTR [ebx+0x1],ebp
  41558b:	add    BYTE PTR [eax],dh
  41558d:	imul   eax,DWORD PTR [ecx],0x0
  415590:	add    BYTE PTR [eax],al
  415592:	xor    BYTE PTR [ebx-0x3],ch
  415595:	(bad)  
  415596:	outs   dx,BYTE PTR ds:[esi]
  415598:	add    edi,edi
  41559a:	xor    DWORD PTR [ebx+0x1],ebp
  41559d:	jmp    FWORD PTR [esi]
  41559f:	outs   dx,BYTE PTR ds:[esi]
  4155a0:	std    
  4155a1:	(bad)  
  4155a2:	es jp  0x4155a6
  4155a5:	add    BYTE PTR [eax],dh
  4155a7:	ins    DWORD PTR es:[edi],dx
  4155a8:	std    
  4155a9:	call   DWORD PTR [esi]
  4155ab:	jp     0x4155ae
  4155ad:	add    BYTE PTR [ecx],dh
  4155af:	jno    0x4155ae
  4155b1:	push   DWORD PTR [ecx]
  4155b3:	jns    0x4155b2
  4155b5:	(bad)  
  4155b6:	(bad)  
  4155b7:	jno    0x4155b6
  4155b9:	(bad)  
  4155ba:	xor    DWORD PTR [ecx+0x1],edi
  4155bd:	(bad)  
  4155be:	out    dx,al
  4155bf:	ins    DWORD PTR es:[edi],dx
  4155c0:	add    edi,edi
  4155c2:	xor    DWORD PTR [ecx-0x3],edi
  4155c5:	push   DWORD PTR [ecx]
  4155c7:	jno    0x4155ca
  4155c9:	add    BYTE PTR [eax],dh
  4155cb:	jns    0x4155ca
  4155cd:	dec    esi
  4155cf:	jno    0x4155ce
  4155d1:	inc    dh
  4155d3:	ins    DWORD PTR es:[edi],dx
  4155d4:	std    
  4155d5:	(bad)  
  4155d6:	xor    DWORD PTR [ecx-0x3],esi
  4155d9:	push   DWORD PTR [esi+0x31fffd6d]
  4155df:	ins    DWORD PTR es:[edi],dx
  4155e0:	std    
  4155e1:	push   DWORD PTR [ecx]
  4155e3:	ins    DWORD PTR es:[edi],dx
  4155e4:	add    DWORD PTR [eax],eax
  4155e6:	xor    DWORD PTR [ebx+ebp*8],edx
  4155e9:	add    edx,DWORD PTR [esi-0x70001881]
  4155ef:	jg     0x4155d8
  4155f1:	add    esi,DWORD PTR [ecx]
  4155f3:	adc    al,0xe3
  4155f5:	add    eax,DWORD PTR [eax]
  4155f7:	add    BYTE PTR [esi+0x14],bh
  4155fa:	pop    es
  4155fb:	test   BYTE PTR [ecx],ah
  4155fd:	xchg   esp,eax
  4155fe:	out    0x83,eax
  415600:	xor    DWORD PTR [edi+eiz*8+0x7143183],edx
  415607:	test   BYTE PTR [ecx+0x14],al
  41560a:	out    0x3,eax
  41560c:	inc    ecx
  41560d:	adc    al,0xc7
  41560f:	add    esi,DWORD PTR [ecx]
  415611:	adc    al,0xc7
  415613:	add    esp,DWORD PTR [ecx]
  415615:	xchg   esp,eax
  415616:	mov    DWORD PTR [ebx+0x3c79431],0x83c79431
  415620:	inc    ecx
  415621:	xchg   esp,eax
  415622:	out    0x83,eax
  415624:	inc    ecx
  415625:	xchg   esp,eax
  415626:	out    0x3,eax
  415628:	xor    DWORD PTR [edi+eiz*8-0x186bce7d],edx
  41562f:	add    esp,DWORD PTR [ecx]
  415631:	adc    al,0x7
  415633:	add    al,0x31
  415635:	adc    al,0x7
  415637:	add    al,0x21
  415639:	xchg   esp,eax
  41563a:	out    0x83,eax
  41563c:	and    DWORD PTR [edi+eax*1],edx
  41563f:	add    al,0x41
  415641:	adc    al,0x7
  415643:	test   BYTE PTR [ecx],dh
  415645:	xchg   esp,eax
  415646:	out    0x3,eax
  415648:	xor    DWORD PTR [edi+eiz*8],edx
  41564b:	add    esi,DWORD PTR [ecx]
  41564d:	xchg   esp,eax
  41564e:	out    0x83,eax
  415650:	xor    DWORD PTR [edi+eax*8],edx
  415653:	and    DWORD PTR [ecx],0x14
  415656:	out    0x3,eax
  415658:	and    DWORD PTR [edi+eax*8+0x21000003],edx
  41565f:	adc    al,0xc7
  415661:	add    esi,DWORD PTR [ecx]
  415663:	xchg   esp,eax
  415664:	add    cl,ch
  415666:	xor    dl,BYTE PTR [eax+eax*1]
  415669:	jmp    0x9417a20
  41566e:	lods   eax,DWORD PTR ds:[esi]
  41566f:	adc    eax,DWORD PTR [eax]
  415671:	jmp    0xe9c17a28
  415676:	xor    ah,BYTE PTR [eax+eax*4]
  415679:	or     DWORD PTR [ebp+0x32e90013],esi
  41567f:	adc    al,0x0
  415681:	or     DWORD PTR [ebp+0x2d090023],esi
  415687:	and    al,0x80
  415689:	jmp    0xc9417ac0
  41568e:	mov    dl,0x13
  415690:	sub    cl,0x32
  415693:	and    al,0x80
  415695:	jmp    0xe9c17a4c
  41569a:	mov    dl,0x13
  41569c:	add    cl,ch
  41569e:	xor    ah,BYTE PTR [eax+eax*4]
  4156a1:	jmp    0xc9c16b58
  4156a6:	xor    dl,BYTE PTR [eax+eax*1]
  4156a9:	leave  
  4156aa:	mov    dl,0x24
  4156ac:	or     BYTE PTR [ecx],0xad
  4156af:	and    al,0x0
  4156b1:	or     DWORD PTR ds:0xb2e90014,esi
  4156b7:	adc    al,0x0
  4156b9:	jmp    0x9c16af0
  4156be:	lods   eax,DWORD PTR ds:[esi]
  4156bf:	adc    al,0x0
  4156c1:	jmp    0x24f356c6
  4156c6:	sub    cl,0x32
  4156c9:	and    al,0x0
  4156cb:	or     DWORD PTR ds:0x32c98014,esi
  4156d1:	and    al,0x0
  4156d3:	leave  
  4156d4:	mov    dl,0x14
  4156d6:	or     cl,0x32
  4156d9:	adc    al,0x80
  4156db:	leave  
  4156dc:	xor    ah,BYTE PTR [eax+eax*1]
  4156df:	add    al,cl
  4156e1:	xchg   ecx,eax
  4156e2:	adc    BYTE PTR [eax],al
  4156e4:	cwde   
  4156e5:	adc    DWORD PTR [eax],eax
  4156e7:	add    BYTE PTR [eax+0x68800091],bl
  4156ed:	xchg   ecx,eax
  4156ee:	add    BYTE PTR [eax],al
  4156f0:	mov    BYTE PTR [ecx],dl
  4156f2:	add    BYTE PTR [eax-0x7fefe7c8],al
  4156f8:	cmp    BYTE PTR [eax-0x6e777ff0],bl
  4156fe:	adc    BYTE PTR [eax],al
  415700:	adc    BYTE PTR [ebx],0x0
  415703:	add    BYTE PTR [eax+0x13],bl
  415706:	add    cl,BYTE PTR [eax]
  415708:	pop    eax
  415709:	adc    DWORD PTR [eax],eax
  41570b:	add    BYTE PTR [eax+0x11],dl
  41570e:	add    cl,BYTE PTR [eax]
  415710:	dec    eax
  415711:	adc    eax,DWORD PTR [eax]
  415713:	or     BYTE PTR [eax+0x11],bl
  415716:	add    BYTE PTR [eax],al
  415718:	push   eax
  415719:	adc    eax,DWORD PTR [edx]
  41571b:	add    BYTE PTR [eax+0x13],cl
  41571e:	add    BYTE PTR [eax],cl
  415720:	inc    eax
  415721:	adc    DWORD PTR [edx],eax
  415723:	add    BYTE PTR [eax],ah
  415725:	adc    DWORD PTR [eax],eax
  415727:	or     BYTE PTR [eax],al
  415729:	add    BYTE PTR [eax],dl
  41572b:	adc    DWORD PTR [eax],eax
  41572d:	or     BYTE PTR [eax],cl
  41572f:	adc    DWORD PTR [edx],eax
  415731:	add    BYTE PTR [eax],ah
  415733:	adc    eax,DWORD PTR [edx]
  415735:	or     BYTE PTR [eax],al
  415737:	adc    DWORD PTR [edx],eax
  415739:	add    BYTE PTR [eax],bl
  41573b:	adc    DWORD PTR [edx],eax
  41573d:	or     BYTE PTR [eax],dl
  41573f:	adc    eax,DWORD PTR [eax]
  415741:	add    BYTE PTR [eax],cl
  415743:	adc    DWORD PTR [eax],eax
  415745:	or     al,ah
  415747:	adc    BYTE PTR [eax],al
  415749:	add    al,bl
  41574b:	adc    al,BYTE PTR [edx]
  41574d:	or     al,cl
  41574f:	adc    al,BYTE PTR [eax]
  415751:	add    al,cl
  415753:	adc    al,BYTE PTR [edx]
  415755:	add    al,bl
  415757:	adc    BYTE PTR [edx],al
  415759:	or     BYTE PTR [ecx],dh
  41575b:	jae    0x41575e
  41575d:	add    ch,BYTE PTR [ecx]
  41575f:	jae    0x415760
  415761:	add    DWORD PTR [ecx],esi
  415763:	cmp    edi,0xffffffff
  415766:	cmp    DWORD PTR [ebx-0x1],ebp
  415769:	add    DWORD PTR [ecx],esi
  41576b:	imul   eax,DWORD PTR [ecx],0x2
  41576e:	xor    DWORD PTR [ebx-0x1],esi
  415771:	jmp    FWORD PTR [ecx]
  415773:	add    DWORD PTR [ecx],0x0
  415776:	xor    DWORD PTR [ebx+0x6b3901ff],eax
  41577c:	(bad)  
  41577d:	push   DWORD PTR [ecx]
  41577f:	imul   eax,DWORD PTR [ecx],0x0
  415782:	sub    DWORD PTR [ebx-0x1],ebp
  415785:	add    DWORD PTR [ecx],edi
  415787:	imul   eax,DWORD PTR [ecx],0x0
  41578a:	cmp    DWORD PTR [ebx+0x1],esi
  41578d:	add    al,BYTE PTR [eax]
  41578f:	add    BYTE PTR [ecx],dh
  415791:	jae    0x415792
  415793:	push   DWORD PTR [ecx]
  415795:	imul   eax,DWORD PTR [ecx],0x2
  415798:	xor    DWORD PTR [ebx-0x1],ebp
  41579b:	add    DWORD PTR [ecx],edi
  41579d:	imul   edi,edi,0xffffffff
  4157a0:	sub    DWORD PTR [ebx+0x1],ebp
  4157a3:	add    BYTE PTR [ecx],dh
  4157a5:	imul   edi,edi,0xffffffff
  4157a8:	xor    DWORD PTR [ebp+0x75310201],eax
  4157ae:	inc    DWORD PTR [ecx]
  4157b0:	sub    DWORD PTR [ebp-0x1],ebp
  4157b3:	jmp    FWORD PTR [ecx]
  4157b5:	test   DWORD PTR [ecx],eax
  4157b7:	add    BYTE PTR [ecx],bh
  4157b9:	ins    DWORD PTR es:[edi],dx
  4157ba:	(bad)  
  4157bb:	push   DWORD PTR [ecx]
  4157bd:	ins    DWORD PTR es:[edi],dx
  4157be:	add    DWORD PTR [eax],eax
  4157c0:	xor    DWORD PTR [ebp+0x1],esi
  4157c3:	add    ch,BYTE PTR [ecx]
  4157c5:	test   edi,edi
  4157c7:	(bad)  
  4157c8:	cmp    DWORD PTR [ebp+0x1],ebp
  4157cb:	add    dh,BYTE PTR [ecx]
  4157cd:	ins    DWORD PTR es:[edi],dx
  4157ce:	add    DWORD PTR [eax],eax
  4157d0:	sub    DWORD PTR [ebp-0x1],esi
  4157d3:	add    DWORD PTR [ecx],ebp
  4157d5:	adc    al,0xef
  4157d7:	add    esi,DWORD PTR [ecx]
  4157d9:	adc    al,0xef
  4157db:	add    DWORD PTR [ebx],esi
  4157dd:	adc    al,0xe7
  4157df:	add    DWORD PTR [ebx],esi
  4157e1:	adc    al,0xdf
  4157e3:	add    esi,DWORD PTR [ecx]
  4157e5:	or     al,0xe7
  4157e7:	add    esi,DWORD PTR [ebx]
  4157e9:	or     al,0xef
  4157eb:	add    DWORD PTR [ecx],esi
  4157ed:	or     al,0xdf
  4157ef:	add    DWORD PTR [ecx],esi
  4157f1:	adc    al,0xe7
  4157f3:	add    eax,DWORD PTR [eax]
  4157f5:	add    BYTE PTR [ebx],dh
  4157f7:	or     al,0xef
  4157f9:	add    eax,0x3ef1433
  4157fe:	xor    DWORD PTR [edi+ebx*8],edx
  415801:	add    esi,DWORD PTR [ebx]
  415803:	or     al,0xe7
  415805:	add    eax,0xe3e81433
  41580a:	out    dx,al
  41580b:	adc    ebp,DWORD PTR [eax-0x1c]
  41580e:	data16 jnp 0x415879
  415811:	in     al,0x5e
  415813:	jnp    0x41587c
  415815:	add    al,0x31
  415817:	adc    al,0x67
  415819:	in     al,0xce
  41581b:	adc    ebp,DWORD PTR [eax+0x4]
  41581e:	mov    cl,0x14
  415820:	call   0xe8560928
  415825:	jecxz  0x41585d
  415827:	jnp    0x415810
  415829:	add    esi,DWORD PTR [ecx]
  41582b:	adc    al,0xe7
  41582d:	jecxz  0x4157d5
  41582f:	adc    al,0xe7
  415831:	jecxz  0x4157d1
  415833:	adc    al,0x68
  415835:	in     al,0x96
  415837:	adc    al,0x68
  415839:	add    al,0x31
  41583b:	adc    al,0xe7
  41583d:	add    esi,DWORD PTR [ecx]
  41583f:	adc    al,0x67
  415841:	add    al,0xb1
  415843:	adc    ebp,eax
  415845:	add    esi,DWORD PTR [ecx+0x3103e813]
  41584b:	adc    al,0xe7
  41584d:	jecxz  0x415835
  41584f:	jp     0x415851
  415851:	jmp    0xe841ec88
  415856:	sar    dl,cl
  415858:	jmp    FWORD PTR [eax+0x0]
  41585b:	add    BYTE PTR ds:0x32e90014,dh
  415861:	xchg   esp,eax
  415862:	add    al,ch
  415864:	sar    BYTE PTR [edx-0x3],cl
  415867:	imul   ecx,ebp,0x3568fd7a
  41586d:	xchg   esp,eax
  41586e:	add    al,ch
  415870:	xor    dl,BYTE PTR [eax+eax*1]
  415873:	imul   edx,DWORD PTR [ebp+0x2d69fd7a],0x92e90094
  41587d:	jp     0x41587c
  41587f:	imul   edx,DWORD PTR [edx-0x6d980006],0x3267fffa
  415889:	adc    al,0x0
  41588b:	imul   esi,DWORD PTR [edx],0x32e80094
  415891:	xchg   esp,eax
  415892:	add    cl,ch
  415894:	push   edx
  415895:	cli    
  415896:	jmp    DWORD PTR [edi+0x52]
  415899:	cli    
  41589a:	jmp    DWORD PTR [edi+0x32]
  41589d:	adc    al,0x0
  41589f:	jmp    0xe9416cd6
  4158a4:	xor    dl,BYTE PTR [eax+eax*1]
  4158a7:	jmp    0x694152fe
  4158ac:	adc    bh,BYTE PTR [edx-0x3]
  4158af:	imul   esi,DWORD PTR [edx],0x32680094
  4158b5:	xchg   esp,eax
  4158b6:	add    al,ch
  4158b8:	xor    dl,BYTE PTR [eax+eax*1]
  4158bb:	call   0x684152d2
  4158c0:	add    BYTE PTR [eax],al
  4158c2:	adc    bh,BYTE PTR [edx-0x3]
  4158c5:	push   0x69fd7a12
  4158ca:	xor    dl,BYTE PTR [eax+eax*1]
  4158cd:	add    BYTE PTR [ecx+0x75],bl
  4158d0:	jge    0x4158d2
  4158d2:	pop    ecx
  4158d3:	adc    eax,0x15c90000
  4158d8:	add    BYTE PTR [eax],al
  4158da:	enter  0xfd75,0xff
  4158de:	fst    DWORD PTR ds:0x75d90080
  4158e4:	std    
  4158e5:	dec    DWORD PTR [eax+0x75]
  4158e8:	jge    0x4158ea
  4158ea:	dec    ecx
  4158eb:	adc    eax,0x75990080
  4158f0:	std    
  4158f1:	call   FWORD PTR [eax]
  4158f3:	jne    0x4158f2
  4158f5:	dec    DWORD PTR [eax-0x76ff7feb]
  4158fb:	jne    0x41597a
  4158fd:	add    BYTE PTR [eax],bl
  4158ff:	adc    BYTE PTR [eax],al
  415901:	add    BYTE PTR [eax-0x77ff7feb],bl
  415907:	jne    0x415906
  415909:	dec    DWORD PTR [eax]
  41590b:	jo     0x41598a
  41590d:	add    BYTE PTR [eax+0x16],bl
  415910:	add    BYTE PTR [eax],al
  415912:	pop    eax
  415913:	push   ss
  415914:	or     BYTE PTR [edx],al
  415916:	dec    eax
  415917:	adc    eax,0x16480208
  41591c:	add    BYTE PTR [edx+0x58],al
  41591f:	adc    eax,0x16580008
  415924:	add    BYTE PTR [eax],al
  415926:	add    BYTE PTR [eax],al
  415928:	dec    eax
  415929:	adc    eax,0x15484000
  41592e:	or     BYTE PTR [edx],al
  415930:	sbb    BYTE PTR [esi],dl
  415932:	or     BYTE PTR [eax+0x18],al
  415935:	adc    eax,0x16080008
  41593a:	add    BYTE PTR [edx],al
  41593c:	or     BYTE PTR [esi],dl
  41593e:	or     BYTE PTR [eax+0x18],al
  415941:	push   ss
  415942:	add    BYTE PTR [edx+0x18],al
  415945:	adc    eax,0x6b314208
  41594a:	add    cl,BYTE PTR [eax]
  41594c:	xor    DWORD PTR [ebx+0x1],ebp
  41594f:	add    BYTE PTR [ecx+0x6b],dh
  415952:	add    DWORD PTR [eax],eax
  415954:	xor    ebp,DWORD PTR [ebx+0x1]
  415957:	or     BYTE PTR [ecx+0x6b],dh
  41595a:	add    DWORD PTR [eax],ecx
  41595c:	jno    0x4159c9
  41595e:	add    DWORD PTR [eax],eax
  415960:	xor    DWORD PTR [ebx+0x2],ebp
  415963:	add    BYTE PTR [ecx+0x6b],dh
  415966:	add    cl,BYTE PTR [eax]
  415968:	jae    0x4159d5
  41596a:	add    cl,BYTE PTR [eax]
  41596c:	jae    0x4159d9
  41596e:	add    al,BYTE PTR [eax]
  415970:	xor    ebp,DWORD PTR [ebx+0x1]
  415973:	or     bl,dh
  415975:	push   0x2
  415977:	add    cl,dh
  415979:	push   0x1
  41597b:	add    BYTE PTR [ecx],dh
  41597d:	imul   eax,DWORD PTR [ecx],0x0
  415980:	repz push 0x2
  415983:	or     BYTE PTR [ebx],dh
  415985:	imul   eax,DWORD PTR [ecx],0x0
  415988:	xor    ebp,DWORD PTR [ebx+0x1]
  41598b:	add    BYTE PTR [eax],al
  41598d:	add    bl,dh
  41598f:	push   0x2
  415991:	or     BYTE PTR [ecx],dh
  415993:	imul   eax,DWORD PTR [ecx],0x8
  415996:	xor    DWORD PTR [ebx+0x2],ebp
  415999:	add    bl,dh
  41599b:	push   0x2
  41599d:	add    BYTE PTR [ecx],dh
  41599f:	imul   eax,DWORD PTR [ecx],0x0
  4159a2:	xor    ebp,DWORD PTR [ebx+0x1]
  4159a5:	add    cl,dh
  4159a7:	push   0x1
  4159a9:	or     BYTE PTR [ebx],dh
  4159ab:	imul   eax,DWORD PTR [edx],0x0
  4159ae:	repz push 0x2
  4159b1:	or     BYTE PTR [ecx+0x6d],dh
  4159b4:	add    al,BYTE PTR [eax]
  4159b6:	xor    ebp,DWORD PTR [ebp+0x1]
  4159b9:	add    BYTE PTR [ecx+0x6d],dh
  4159bc:	add    DWORD PTR [eax],ecx
  4159be:	jae    0x415a2d
  4159c0:	add    cl,BYTE PTR [eax]
  4159c2:	xor    edx,DWORD PTR [edi+eiz*8]
  4159c5:	add    bh,BYTE PTR [ecx]
  4159c7:	aam    0xe6
  4159c9:	add    dh,BYTE PTR [ecx]
  4159cb:	adc    al,0xe7
  4159cd:	add    esi,DWORD PTR [ecx]
  4159cf:	adc    ah,bh
  4159d1:	add    edi,DWORD PTR [ecx]
  4159d3:	shl    dh,cl
  4159d5:	add    bh,BYTE PTR [ecx]
  4159d7:	shl    dh,cl
  4159d9:	add    ch,BYTE PTR [ecx]
  4159db:	adc    al,0xe7
  4159dd:	add    esi,DWORD PTR [ecx]
  4159df:	shl    dh,cl
  4159e1:	add    bh,BYTE PTR [ecx]
  4159e3:	shl    dh,cl
  4159e5:	add    edi,DWORD PTR [ecx]
  4159e7:	adc    ah,bh
  4159e9:	add    esi,DWORD PTR [ecx]
  4159eb:	adc    al,0xe7
  4159ed:	add    ebp,DWORD PTR [ecx]
  4159ef:	aam    0xe6
  4159f1:	add    eax,DWORD PTR [eax]
  4159f3:	add    BYTE PTR [ecx],dh
  4159f5:	shl    dh,cl
  4159f7:	add    bh,BYTE PTR [ecx]
  4159f9:	adc    al,0xe7
  4159fb:	add    dh,BYTE PTR [ecx]
  4159fd:	adc    ah,bh
  4159ff:	add    dh,BYTE PTR [ecx]
  415a01:	aam    0xe6
  415a03:	add    edi,DWORD PTR [ecx]
  415a05:	adc    al,0xe7
  415a07:	add    esi,DWORD PTR [ecx]
  415a09:	adc    al,0xe7
  415a0b:	add    ebp,DWORD PTR [ecx]
  415a0d:	aam    0xe6
  415a0f:	add    al,0x29
  415a11:	adc    ah,bh
  415a13:	add    al,0x31
  415a15:	aam    0xd6
  415a17:	add    esi,DWORD PTR [ecx]
  415a19:	xor    al,0xe7
  415a1b:	add    esi,ecx
  415a1d:	xor    esp,edi
  415a1f:	inc    ebx
  415a20:	xor    DWORD PTR [edi+edx*8],edx
  415a23:	inc    ebx
  415a24:	icebp  
  415a25:	xor    esp,edi
  415a27:	add    esi,ecx
  415a29:	xor    esi,edi
  415a2b:	add    esi,DWORD PTR [ecx]
  415a2d:	adc    al,0xf7
  415a2f:	inc    ebx
  415a30:	icebp  
  415a31:	xor    esp,edi
  415a33:	add    esi,DWORD PTR [ecx+0x14]
  415a36:	out    0x43,eax
  415a38:	xor    DWORD PTR [edi+edx*8],esi
  415a3b:	inc    ebx
  415a3c:	jno    0x415a52
  415a3e:	add    cl,ch
  415a40:	xor    dl,ah
  415a42:	(bad)  
  415a43:	fdiv   DWORD PTR [edx]
  415a45:	adc    al,0x20
  415a47:	stc    
  415a48:	xor    dl,ah
  415a4a:	(bad)  
  415a4b:	call   0xe9616ec2
  415a50:	xor    dl,BYTE PTR [eax+eiz*1]
  415a53:	stc    
  415a54:	jb     0x415a6a
  415a56:	add    cl,ch
  415a58:	add    BYTE PTR [eax],al
  415a5a:	xor    dl,BYTE PTR [eax+eax*1]
  415a5d:	fnstenv [edx]
  415a5f:	aam    0xff
  415a61:	fdiv   DWORD PTR [edx+0x14]
  415a64:	and    cl,ch
  415a66:	jb     0x415a7c
  415a68:	add    cl,ch
  415a6a:	jb     0x415a40
  415a6c:	(bad)  
  415a6d:	clc    
  415a6e:	jb     0x415a84
  415a70:	and    cl,bh
  415a72:	xor    dl,BYTE PTR [eax+eax*1]
  415a75:	stc    
  415a76:	xor    dl,ah
  415a78:	pop    ds
  415a79:	fnstenv [edx]
  415a7b:	aam    0x1f
  415a7d:	jmp    0xd9416eb4
  415a82:	repnz sar edi,cl
  415a85:	call   0xf9612e7c
  415a8a:	repnz adc eax,DWORD PTR [eax]
  415a8d:	jmp    0xe9412e84
  415a92:	repnz rcr DWORD PTR [edi],cl
  415a95:	jmp    0xe9616ecc
  415a9a:	repnz adc esp,DWORD PTR [eax]
  415a9d:	fnstenv [edx]
  415a9f:	adc    al,0x0
  415aa1:	fnstenv [edx]
  415aa3:	aam    0x1f
  415aa5:	jmp    0xf9412e9c
  415aaa:	repnz rcr DWORD PTR [edi],cl
  415aad:	jmp    0xf9412ee4
  415ab2:	repnz adc eax,DWORD PTR [eax]
  415ab5:	stc    
  415ab6:	xor    dl,BYTE PTR [eax+eiz*1]
  415ab9:	add    BYTE PTR [eax],bl
  415abb:	adc    al,BYTE PTR [eax+0x0]
  415abe:	add    BYTE PTR [eax],al
  415ac0:	or     dl,dl
  415ac2:	call   FWORD PTR [edi]
  415ac4:	or     BYTE PTR [edx],dl
  415ac6:	add    BYTE PTR [eax],ah
  415ac8:	call   0x9415a9e
  415acd:	adc    al,BYTE PTR [eax]
  415acf:	and    al,bh
  415ad1:	sar    DWORD PTR [edi],1
  415ad3:	and    BYTE PTR [eax],cl
  415ad5:	sar    BYTE PTR [edi],cl
  415ad7:	add    al,bl
  415ad9:	adc    DWORD PTR [eax+0x20],eax
  415adc:	or     dl,dl
  415ade:	aas    
  415adf:	add    al,cl
  415ae1:	sar    DWORD PTR [edi],1
  415ae3:	and    al,cl
  415ae5:	adc    DWORD PTR [eax],eax
  415ae7:	add    al,ch
  415ae9:	adc    DWORD PTR [eax+0x20],eax
  415aec:	enter  0x11,0x0
  415af0:	enter  0xffd1,0xff
  415af4:	enter  0x4011,0x20
  415af8:	test   al,0xd1
  415afa:	aas    
  415afb:	add    BYTE PTR [eax+0x78ffffd1],bl
  415b01:	adc    DWORD PTR [eax+0x0],eax
  415b04:	js     0x415ad7
  415b06:	call   FWORD PTR [edi]
  415b08:	cwde   
  415b09:	adc    DWORD PTR [eax],eax
  415b0b:	add    BYTE PTR [eax-0x77dfc02f],bl
  415b11:	adc    DWORD PTR [eax],eax
  415b13:	and    BYTE PTR [eax+0x11],bh
  415b16:	inc    eax
  415b17:	add    BYTE PTR [eax-0x2f],ch
  415b1a:	call   FWORD PTR [edi]
  415b1c:	pop    eax
  415b1d:	adc    DWORD PTR [eax],esp
  415b1f:	add    BYTE PTR [edx+0x11],cl
  415b22:	and    BYTE PTR [eax+eax*1],al
  415b25:	add    BYTE PTR [edx+0x79],cl
  415b28:	std    
  415b29:	add    ebx,DWORD PTR [eax+0x11]
  415b2c:	add    BYTE PTR [eax],al
  415b2e:	pop    eax
  415b2f:	jns    0x415b2e
  415b31:	dec    DWORD PTR [edx+0x79]
  415b34:	std    
  415b35:	add    esi,DWORD PTR [ecx]
  415b37:	imul   edi,ecx,0xf96b311f
  415b3d:	pop    ds
  415b3e:	sub    eax,0x351ff969
  415b43:	imul   eax,DWORD PTR [ecx],0x20
  415b46:	xor    DWORD PTR [ebx+0x1],ebp
  415b49:	add    BYTE PTR [ecx],dh
  415b4b:	imul   eax,DWORD PTR [ecx],0x1692d00
  415b51:	add    BYTE PTR [ecx],dh
  415b53:	imul   eax,DWORD PTR [ecx],0x0
  415b56:	sub    eax,0x35200169
  415b5b:	imul   edi,ecx,0xf96ae6ff
  415b61:	push   DWORD PTR [edx]
  415b63:	imul   edi,ecx,0x169311f
  415b69:	and    BYTE PTR [ecx],dh
  415b6b:	imul   edi,ecx,0xffffffff
  415b6e:	xor    ch,BYTE PTR [ecx+0x1]
  415b71:	add    BYTE PTR ds:0x2d20016b,dh
  415b77:	imul   edi,ecx,0x1f
  415b7a:	xor    eax,0x31200169
  415b7f:	imul   eax,DWORD PTR [ecx],0x20
  415b82:	xor    eax,0x96fff96b
  415b87:	push   0xfff9
  415b8c:	mov    gs,WORD PTR [eax-0x7]
  415b8f:	pop    ds
  415b90:	sub    eax,0x311ff96b
  415b95:	imul   eax,DWORD PTR [ecx],0x16b3100
  415b9b:	add    BYTE PTR ds:0x311ff96b,dh
  415ba1:	imul   eax,DWORD PTR [ecx],0x0
  415ba4:	xor    eax,0x311ff96b
  415ba9:	imul   eax,DWORD PTR [ecx],0x20
  415bac:	xor    DWORD PTR [ecx-0x7],ebp
  415baf:	push   DWORD PTR [edx]
  415bb1:	adc    al,0xe9
  415bb3:	sti    
  415bb4:	ds adc cl,ch
  415bb7:	add    edx,DWORD PTR [ecx]
  415bb9:	adc    cl,ch
  415bbb:	add    edx,DWORD PTR [ecx+0x18]
  415bbe:	jmp    0xe9558cc6
  415bc3:	add    edx,DWORD PTR [ecx+0x14]
  415bc6:	out    0x3,eax
  415bc8:	xor    DWORD PTR [eax],ebx
  415bca:	out    0xfb,eax
  415bcc:	push   cs
  415bcd:	sbb    bh,ah
  415bcf:	add    edx,DWORD PTR [ecx+0x14]
  415bd2:	out    0xfb,eax
  415bd4:	push   ds
  415bd5:	sbb    cl,ch
  415bd7:	sti    
  415bd8:	div    BYTE PTR [ebx-0x17]
  415bdb:	sti    
  415bdc:	dec    esi
  415bdd:	adc    al,0xe7
  415bdf:	sti    
  415be0:	inc    esi
  415be1:	sbb    cl,ch
  415be3:	sti    
  415be4:	fidiv  WORD PTR [ebx-0x17]
  415be7:	add    esi,DWORD PTR [ecx]
  415be9:	sbb    cl,ch
  415beb:	sti    
  415bec:	cs sbb bh,ah
  415bef:	add    eax,DWORD PTR [eax]
  415bf1:	add    BYTE PTR [ecx],dl
  415bf3:	sbb    bh,ah
  415bf5:	sti    
  415bf6:	push   ds
  415bf7:	adc    al,0xe7
  415bf9:	add    esi,DWORD PTR [ecx]
  415bfb:	adc    al,0xe9
  415bfd:	add    esi,DWORD PTR [ecx]
  415bff:	adc    al,0xe9
  415c01:	sti    
  415c02:	inc    esi
  415c03:	sbb    bh,ah
  415c05:	add    esi,DWORD PTR [ecx]
  415c07:	adc    al,0xe9
  415c09:	sti    
  415c0a:	ss adc al,0xe7
  415c0d:	add    edx,DWORD PTR [ecx+0x18]
  415c10:	out    0xfb,eax
  415c12:	xchg   BYTE PTR [ebx-0x17],dh
  415c15:	add    esi,DWORD PTR [ecx]
  415c17:	sbb    bh,ah
  415c19:	sti    
  415c1a:	jbe    0x415c33
  415c1c:	out    0xfb,eax
  415c1e:	outs   dx,BYTE PTR ds:[esi]
  415c1f:	jae    0x415c0a
  415c21:	add    edx,DWORD PTR [ecx]
  415c23:	adc    al,0x27
  415c25:	hlt    
  415c26:	pop    esi
  415c27:	and    esp,edi
  415c29:	repz push esi
  415c2b:	jae    0x415c2d
  415c2d:	jmp    0x29417464
  415c32:	cmp    eax,0x32e91017
  415c37:	adc    al,0x10
  415c39:	sub    DWORD PTR ds:0x35290d73,edi
  415c3f:	adc    al,0x0
  415c41:	jmp    0x29517078
  415c46:	xor    eax,0x32e90018
  415c4b:	sbb    BYTE PTR [eax],dl
  415c4d:	sub    DWORD PTR ds:0x2e91017,eax
  415c53:	pop    ss
  415c54:	add    cl,ch
  415c56:	add    BYTE PTR [eax],al
  415c58:	add    dl,BYTE PTR [edi]
  415c5a:	adc    BYTE PTR [ecx-0x16ffe8fe],ch
  415c60:	loop   0x415cd4
  415c62:	std    
  415c63:	test   eax,0xe9001432
  415c68:	xor    bl,BYTE PTR [eax]
  415c6a:	adc    BYTE PTR [ecx-0x16efebce],ch
  415c70:	ret    0xd72
  415c73:	test   eax,0xe9fd72c2
  415c78:	ret    0x16
  415c7b:	test   eax,0xa9001832
  415c80:	xor    bl,BYTE PTR [eax]
  415c82:	adc    cl,ch
  415c84:	mov    ds:0xa2a91016,al
  415c89:	jb     0x415c88
  415c8b:	jmp    0xe94170c2
  415c90:	xor    dl,BYTE PTR [eax+eax*1]
  415c93:	test   eax,0x29101832
  415c98:	xor    eax,0x82e91014
  415c9d:	jb     0x415cac
  415c9f:	sub    DWORD PTR [ebp+0x16],esp
  415ca2:	add    cl,ch
  415ca4:	xor    bl,BYTE PTR [eax]
  415ca6:	add    BYTE PTR [eax],al
  415ca8:	or     BYTE PTR [eax+0x1],ch
  415cab:	add    BYTE PTR [eax+0x16],cl
  415cae:	add    al,0x0
  415cb0:	pop    eax
  415cb1:	add    WORD PTR [eax],dx
  415cb4:	pop    eax
  415cb5:	data16 std 
  415cb7:	dec    DWORD PTR [eax]
  415cb9:	sbb    BYTE PTR [eax],al
  415cbb:	add    BYTE PTR [eax],al
  415cbd:	add    BYTE PTR [eax],cl
  415cbf:	sbb    BYTE PTR [eax+edx*1],al
  415cc2:	sbb    BYTE PTR [esi-0x3],ah
  415cc5:	call   FWORD PTR [eax+0x68]
  415cc8:	add    DWORD PTR [eax],eax
  415cca:	or     BYTE PTR [esi-0x3],ah
  415ccd:	cmovs  ebx,DWORD PTR [eax]
  415cd0:	add    BYTE PTR [eax],al
  415cd2:	pop    eax
  415cd3:	sbb    BYTE PTR [eax],al
  415cd5:	adc    BYTE PTR [eax],bl
  415cd7:	push   ss
  415cd8:	add    al,0x10
  415cda:	enter  0x415,0x10
  415cde:	or     BYTE PTR [esi],dl
  415ce0:	add    BYTE PTR [eax],dl
  415ce2:	fcom   DWORD PTR ds:0x65980004
  415ce8:	std    
  415ce9:	bswap  eax
  415ceb:	adc    eax,0x65880000
  415cf0:	add    DWORD PTR [eax],edx
  415cf2:	cwde   
  415cf3:	adc    eax,0x15980004
  415cf8:	add    BYTE PTR [eax],dl
  415cfa:	enter  0x415,0x10
  415cfe:	enter  0xfd65,0xf
  415d02:	fsub   DWORD PTR [ebp-0x3]
  415d05:	sets   BYTE PTR ds:0x65c80000
  415d0c:	add    DWORD PTR [eax],edx
  415d0e:	mov    BYTE PTR [ebp+0x1],ah
  415d11:	add    BYTE PTR [eax-0x27fffe9b],bl
  415d17:	gs std 
  415d19:	dec    DWORD PTR [eax+0x68]
  415d1c:	std    
  415d1d:	dec    DWORD PTR [eax+0x18]
  415d20:	add    al,0x0
  415d22:	add    BYTE PTR [eax],al
  415d24:	xor    DWORD PTR [ebx+0x1],edi
  415d27:	add    BYTE PTR [ecx+0x7b],al
  415d2a:	icebp  
  415d2b:	add    eax,DWORD PTR [ecx-0x55]
  415d2e:	das    
  415d2f:	call   DWORD PTR [esi+0x7b]
  415d32:	add    DWORD PTR [eax],eax
  415d34:	xor    DWORD PTR [ebx+0x1],edi
  415d37:	add    BYTE PTR [ecx],dh
  415d39:	fwait
  415d3a:	sub    bh,bh
  415d3c:	ds aaa 
  415d3e:	sub    edi,edi
  415d40:	ss mov bh,0x2c
  415d43:	jmp    FWORD PTR [esi]
  415d45:	jnp    0x415d48
  415d47:	add    BYTE PTR [ecx],dh
  415d49:	jnp    0x415d4c
  415d4b:	add    BYTE PTR [ecx],dh
  415d4d:	pop    ebp
  415d4e:	sub    bh,bh
  415d50:	push   ss
  415d51:	or     ebp,DWORD PTR [esi]
  415d53:	dec    DWORD PTR [esi]
  415d55:	fwait
  415d56:	sub    al,0xff
  415d58:	push   es
  415d59:	jnp    0x415d5c
  415d5b:	add    BYTE PTR [ecx],dh
  415d5d:	jnp    0x415d60
  415d5f:	add    BYTE PTR [ecx],dh
  415d61:	xor    esp,DWORD PTR [edi]
  415d63:	(bad)  
  415d64:	out    dx,al
  415d65:	push   esi
  415d66:	sub    edi,edi
  415d68:	out    0xd2,al
  415d6a:	sub    edi,edi
  415d6c:	fidivr WORD PTR [edx+0x1]
  415d6f:	add    BYTE PTR [ecx],dh
  415d71:	jnp    0x415d74
  415d73:	add    BYTE PTR [ecx],dh
  415d75:	xlat   BYTE PTR ds:[ebx]
  415d76:	es inc esi
  415d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7a:	sub    edi,edi
  415d7c:	mov    esi,0xb6ff2a6e
  415d81:	jp     0x415d84
  415d83:	add    BYTE PTR [ecx],dh
  415d85:	jnp    0x415d88
  415d87:	add    BYTE PTR [eax],al
  415d89:	add    BYTE PTR [ecx],dh
  415d8b:	jne    0x415dae
  415d8d:	call   FWORD PTR [esi-0x6900d226]
  415d93:	dec    esi
  415d94:	sub    bh,bh
  415d96:	mov    ?,WORD PTR [edx+0x1]
  415d99:	add    BYTE PTR [ecx],dh
  415d9b:	jnp    0x415d9e
  415d9d:	add    BYTE PTR [ecx],dh
  415d9f:	adc    al,0x27
  415da1:	and    al,0x76
  415da3:	jo     0x415d34
  415da5:	sub    eax,0x2aff706e
  415daa:	data16 jo 0x415d94
  415dad:	add    esi,DWORD PTR [ecx]
  415daf:	adc    al,0xe7
  415db1:	add    esi,DWORD PTR [ecx]
  415db3:	adc    al,0x59
  415db5:	and    ecx,DWORD PTR [esi+0x70]
  415db8:	jnp    0x415de7
  415dba:	inc    esi
  415dbb:	jo     0x415de0
  415dbd:	sub    edi,DWORD PTR [esi]
  415dbf:	jo     0x415da8
  415dc1:	add    esi,DWORD PTR [ecx]
  415dc3:	adc    al,0xe7
  415dc5:	add    esi,DWORD PTR [ecx]
  415dc7:	adc    al,0xf9
  415dc9:	and    ah,BYTE PTR [esi]
  415dcb:	jo     0x415d84
  415dcd:	sub    eax,0x2af7701e
  415dd2:	push   ss
  415dd3:	jo     0x415dbc
  415dd5:	add    esi,DWORD PTR [ecx]
  415dd7:	adc    al,0xe7
  415dd9:	add    esi,DWORD PTR [ecx]
  415ddb:	adc    al,0x25
  415ddd:	and    edi,esi
  415ddf:	outs   dx,DWORD PTR ds:[esi]
  415de0:	arpl   WORD PTR ds:0x3e76ff6,bp
  415de6:	xor    DWORD PTR [edi+eiz*8],edx
  415de9:	add    esi,DWORD PTR [ecx]
  415deb:	adc    al,0xe7
  415ded:	add    eax,DWORD PTR [eax]
  415def:	add    BYTE PTR [ecx],dh
  415df1:	adc    al,0xe7
  415df3:	add    esi,DWORD PTR [ecx]
  415df5:	adc    al,0xe7
  415df7:	add    esi,DWORD PTR [ecx]
  415df9:	adc    al,0xdf
  415dfb:	sub    al,0xc6
  415dfd:	outs   dx,DWORD PTR ds:[esi]
  415dfe:	aad    0x2c
  415e00:	mov    esi,0xb62cc96f
  415e05:	outs   dx,DWORD PTR ds:[esi]
  415e06:	xlat   BYTE PTR ds:[ebx]
  415e07:	sub    al,0xae
  415e09:	outs   dx,DWORD PTR ds:[esi]
  415e0a:	shr    DWORD PTR [esi+eiz*4],cl
  415e0d:	outs   dx,DWORD PTR ds:[esi]
  415e0e:	lahf   
  415e0f:	sub    al,0x9e
  415e11:	outs   dx,DWORD PTR ds:[esi]
  415e12:	popf   
  415e13:	sub    al,0x96
  415e15:	outs   dx,DWORD PTR ds:[esi]
  415e16:	test   DWORD PTR [esi+ecx*4],ebp
  415e19:	outs   dx,DWORD PTR ds:[esi]
  415e1a:	add    BYTE PTR [ebx+0x55],bh
  415e1d:	outs   dx,DWORD PTR ds:[esi]
  415e1e:	std    
  415e1f:	imul   ecx,DWORD PTR [ebp+0x6f],0x6f4a75fd
  415e26:	std    
  415e27:	sbb    DWORD PTR [edx],0x1a87fd6f
  415e2d:	outs   dx,DWORD PTR ds:[esi]
  415e2e:	std    
  415e2f:	mov    ds:0xa1fd6f0a,eax
  415e34:	or     ch,BYTE PTR [edi-0x3]
  415e37:	iret   
  415e38:	sbb    ch,BYTE PTR [edi-0x3]
  415e3b:	mov    bh,0x1a
  415e3d:	outs   dx,DWORD PTR ds:[esi]
  415e3e:	std    
  415e3f:	fst    DWORD PTR [esi]
  415e41:	outs   dx,DWORD PTR ds:[esi]
  415e42:	std    
  415e43:	leave  
  415e44:	push   cs
  415e45:	outs   dx,DWORD PTR ds:[esi]
  415e46:	std    
  415e47:	fist   DWORD PTR [esi+0x6f]
  415e4a:	std    
  415e4b:	sub    ebx,DWORD PTR [ecx+0x6f]
  415e4e:	std    
  415e4f:	aaa    
  415e50:	dec    ecx
  415e51:	outs   dx,DWORD PTR ds:[esi]
  415e52:	std    
  415e53:	or     eax,0x6f490000
  415e58:	std    
  415e59:	add    DWORD PTR [ecx+0x6f],ebx
  415e5c:	std    
  415e5d:	addr16 pop ecx
  415e5f:	outs   dx,DWORD PTR ds:[esi]
  415e60:	std    
  415e61:	dec    ecx
  415e62:	dec    ecx
  415e63:	outs   dx,DWORD PTR ds:[esi]
  415e64:	std    
  415e65:	xchg   ebp,eax
  415e66:	dec    ecx
  415e67:	outs   dx,DWORD PTR ds:[esi]
  415e68:	std    
  415e69:	popf   
  415e6a:	sbb    DWORD PTR [edi-0x3],ebp
  415e6d:	and    DWORD PTR [ecx],ebx
  415e6f:	outs   dx,DWORD PTR ds:[esi]
  415e70:	std    
  415e71:	sub    eax,0x55fd6f09
  415e76:	or     DWORD PTR [edi-0x3],ebp
  415e79:	aas    
  415e7a:	sbb    DWORD PTR [edi-0x3],ebp
  415e7d:	out    0x19,eax
  415e7f:	outs   dx,DWORD PTR ds:[esi]
  415e80:	std    
  415e81:	pop    es
  415e82:	or     BYTE PTR [edi-0x3],ch
  415e85:	stos   DWORD PTR es:[edi],eax
  415e86:	or     DWORD PTR [edi-0x3],ebp
  415e89:	ret    
  415e8a:	pop    ecx
  415e8b:	outs   dx,DWORD PTR ds:[esi]
  415e8c:	std    
  415e8d:	(bad)  
  415e8e:	pop    ecx
  415e8f:	outs   dx,DWORD PTR ds:[esi]
  415e90:	std    
  415e91:	popa   
  415e92:	dec    eax
  415e93:	outs   dx,DWORD PTR ds:[esi]
  415e94:	std    
  415e95:	add    al,ch
  415e97:	cmp    al,0xfd
  415e99:	push   eax
  415e9b:	cmp    al,0xfd
  415e9d:	call   DWORD PTR [ebp+edi*1-0x3]
  415ea1:	jmp    DWORD PTR [edx]
  415ea3:	cmp    eax,0x3b62fffd
  415ea8:	std    
  415ea9:	dec    DWORD PTR [edx+0x50fffd3b]
  415eaf:	cmp    ch,bh
  415eb1:	jmp    DWORD PTR [eax+0x38]
  415eb4:	std    
  415eb5:	call   DWORD PTR [eax+edi*1-0x3]
  415eb9:	inc    DWORD PTR [eax]
  415ebb:	add    BYTE PTR [esi],dl
  415ebd:	ss std 
  415ebf:	jmp    DWORD PTR [esi+esi*1]
  415ec2:	std    
  415ec3:	push   esp
  415ec5:	xor    eax,0x3614fffd
  415eca:	std    
  415ecb:	call   FWORD PTR [edx+0x18fffd37]
  415ed1:	adc    al,BYTE PTR [eax]
  415ed3:	add    BYTE PTR [esi+0x37],bl
  415ed6:	std    
  415ed7:	inc    esi
  415ed9:	aaa    
  415eda:	std    
  415edb:	jmp    FWORD PTR [esi-0x510002c9]
  415ee1:	aaa    
  415ee2:	std    
  415ee3:	dec    DWORD PTR [esi-0x50002c9]
  415ee9:	ss std 
  415eeb:	(bad)  
  415eec:	fcom   DWORD PTR [ecx]
  415eee:	add    BYTE PTR [eax],al
  415ef0:	sub    al,0x35
  415ef2:	std    
  415ef3:	dec    eax
  415ef5:	adc    DWORD PTR [eax],eax
  415ef7:	add    BYTE PTR [esi+esi*1+0x36a4fffd],al
  415efe:	std    
  415eff:	push   eax
  415f01:	ss std 
  415f03:	inc    DWORD PTR [esi+0x44fffd36]
  415f09:	ss std 
  415f0b:	jmp    DWORD PTR [esi+esi*1]
  415f0e:	std    
  415f0f:	push   DWORD PTR [ecx]
  415f11:	fbld   TBYTE PTR ds:0x25c59eff
  415f17:	call   DWORD PTR [esi-0x7100d9c3]
  415f1d:	mov    tr7,edi
  415f20:	add    BYTE PTR [eax],al
  415f22:	xchg   BYTE PTR [ebx+0x1],bh
  415f25:	add    BYTE PTR [ecx],dh
  415f27:	popa   
  415f28:	and    edi,edi
  415f2a:	jbe    0x415fa7
  415f2c:	add    DWORD PTR [eax],eax
  415f2e:	xor    DWORD PTR [ebp+0x21],esp
  415f31:	jmp    DWORD PTR [esi+0x11]
  415f34:	and    al,0xff
  415f36:	pop    esi
  415f37:	jnp    0x415f3a
  415f39:	add    BYTE PTR [ecx],dh
  415f3b:	daa    
  415f3c:	and    al,0xff
  415f3e:	dec    esi
  415f3f:	xor    esp,DWORD PTR [edi+edi*8]
  415f42:	inc    esi
  415f43:	fbld   TBYTE PTR [ebx]
  415f45:	(bad)  
  415f46:	sub    esp,DWORD PTR ds:[edi+edi*8]
  415f4a:	xor    DWORD PTR ss:[edi+edi*8],esp
  415f4e:	cs cmc 
  415f50:	and    edi,edi
  415f52:	es jnp 0x415f56
  415f55:	add    BYTE PTR [ecx],dh
  415f57:	std    
  415f58:	and    edi,edi
  415f5a:	push   ss
  415f5b:	shl    DWORD PTR [ebx],0xff
  415f5e:	push   cs
  415f5f:	shl    DWORD PTR [ebx],1
  415f61:	inc    DWORD PTR [esi]
  415f63:	mov    edi,0x8cfeff24
  415f68:	and    al,0xff
  415f6a:	not    dh
  415f6c:	and    edi,edi
  415f6e:	out    dx,al
  415f6f:	(bad)  
  415f70:	and    edi,edi
  415f72:	out    0xd4,al
  415f74:	and    edi,edi
  415f76:	faddp  st(4),st
  415f78:	and    edi,edi
  415f7a:	(bad)  
  415f7b:	jle    0x415f9f
  415f7d:	dec    esi
  415f7f:	jp     0x415f82
  415f81:	add    BYTE PTR [ecx],dh
  415f83:	inc    ebp
  415f84:	and    bh,bh
  415f86:	add    BYTE PTR [eax],al
  415f88:	mov    esi,0xb6ff2268
  415f8d:	adc    esp,edi
  415f8f:	add    esi,DWORD PTR [ecx]
  415f91:	adc    al,0xef
  415f93:	sub    BYTE PTR [esi-0x61d70294],ah
  415f99:	ins    BYTE PTR es:[edi],dx
  415f9a:	leave  
  415f9b:	sub    BYTE PTR [esi-0x71d74894],dl
  415fa1:	ins    BYTE PTR es:[edi],dx
  415fa2:	mov    ebx,0x9f6c8628
  415fa7:	sub    BYTE PTR [esi+0x6c],bh
  415faa:	xchg   ebp,eax
  415fab:	sub    BYTE PTR [esi+0x6c],dh
  415fae:	dec    ebp
  415faf:	sub    DWORD PTR [esi+0x6c],ebp
  415fb2:	pop    ecx
  415fb3:	sub    DWORD PTR [esi+0x6c],esp
  415fb6:	sub    BYTE PTR [bp+0x6c],bl
  415fba:	pop    ebx
  415fbb:	sub    BYTE PTR [esi+0x6c],dl
  415fbe:	pop    edi
  415fbf:	sub    BYTE PTR [esi+0x6c],cl
  415fc2:	lea    ebp,[eax]
  415fc4:	inc    esi
  415fc5:	ins    BYTE PTR es:[edi],dx
  415fc6:	mov    eax,ds:0x8f6c3e28
  415fcb:	sub    BYTE PTR [esi],dh
  415fcd:	ins    BYTE PTR es:[edi],dx
  415fce:	xchg   ebp,eax
  415fcf:	sub    BYTE PTR [esi],ch
  415fd1:	ins    BYTE PTR es:[edi],dx
  415fd2:	popf   
  415fd3:	sub    BYTE PTR [esi],ah
  415fd5:	ins    BYTE PTR es:[edi],dx
  415fd6:	mul    DWORD PTR [edi]
  415fd8:	push   ds
  415fd9:	ins    BYTE PTR es:[edi],dx
  415fda:	(bad)  
  415fdb:	daa    
  415fdc:	push   ss
  415fdd:	ins    BYTE PTR es:[edi],dx
  415fde:	mov    ecx,0x296c0e27
  415fe3:	sub    BYTE PTR [esi],al
  415fe5:	ins    BYTE PTR es:[edi],dx
  415fe6:	sbb    eax,0x36bfe28
  415feb:	sub    BYTE PTR [eax],al
  415fed:	add    dh,dh
  415fef:	imul   ebx,edi,0x27
  415ff2:	out    dx,al
  415ff3:	imul   ebp,DWORD PTR [ebp+0x27],0xffffffe6
  415ff7:	imul   eax,DWORD PTR [edi+0x7b6bde27],0x27
  415ffe:	(bad)  
  415fff:	imul   eax,DWORD PTR [ebx+0x2f6bce27],0x27
  416006:	(bad)  
  416007:	imul   eax,DWORD PTR [eax],0x15
  41600a:	push   ss
  41600b:	imul   edi,ebp,0x3d
  41600e:	push   cs
  41600f:	imul   edi,ebp,0x27
  416012:	push   esi
  416013:	imul   edi,ebp,0xffffffef
  416016:	dec    edi
  416017:	imul   edi,ebp,0xffffffcf
  41601a:	push   edi
  41601b:	imul   edi,ebp,0xffffffab
  41601e:	dec    edi
  41601f:	imul   edi,ebp,0xffffffa3
  416022:	push   edi
  416023:	imul   edi,ebp,0xffffff87
  416026:	dec    edi
  416027:	imul   edi,ebp,0x61
  41602a:	push   edi
  41602b:	imul   edi,ebp,0x49
  41602e:	dec    edi
  41602f:	imul   edi,ebp,0xffffffa1
  416032:	push   eax
  416033:	push   0xfffffffd
  416035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416036:	push   eax
  416037:	push   0xfffffffd
  416039:	mov    bl,0x50
  41603b:	push   0xfffffffd
  41603d:	ret    
  41603e:	push   eax
  41603f:	push   0xfffffffd
  416041:	mov    ebx,0xf1fd6a50
  416046:	push   eax
  416047:	push   0xfffffffd
  416049:	rcl    DWORD PTR [eax+0x6a],1
  41604c:	std    
  41604d:	cmc    
  41604e:	push   eax
  41604f:	push   0xfffffffd
  416051:	das    
  416052:	add    BYTE PTR [eax],al
  416054:	adc    ebp,DWORD PTR [edx-0x3]
  416057:	xor    eax,0xdfd6a13
  41605c:	adc    ebp,DWORD PTR [edx-0x3]
  41605f:	adc    eax,0x6bfd6a13
  416064:	adc    ebp,DWORD PTR [edx-0x3]
  416067:	jmp    0x4741749e
  41606c:	adc    ebp,DWORD PTR [edx-0x3]
  41606f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416070:	adc    ebp,DWORD PTR [edx-0x3]
  416073:	inc    edi
  416074:	shr    DWORD PTR [ecx-0x3],cl
  416077:	dec    edi
  416078:	shr    DWORD PTR [ecx-0x3],cl
  41607b:	push   edi
  41607c:	shr    DWORD PTR [ecx-0x3],cl
  41607f:	sti    
  416080:	shr    DWORD PTR [ecx-0x3],cl
  416083:	add    al,bl
  416085:	push   ss
  416086:	add    BYTE PTR [eax],al
  416088:	xor    al,0x77
  41608a:	(bad)  
  41608b:	dec    eax
  41608d:	push   ss
  41608e:	add    BYTE PTR [eax],al
  416090:	mov    WORD PTR [ebp-0x2],?
  416093:	(bad)  
  416094:	in     al,dx
  416095:	jne    0x416095
  416097:	inc    eax
  416099:	jne    0x416099
  41609b:	(bad)  
  41609c:	mov    esi,0xcfffe75
  4160a1:	ja     0x4160a1
  4160a3:	(bad)  
  4160a4:	in     al,dx
  4160a5:	jbe    0x4160a5
  4160a7:	(bad)  
  4160a8:	in     al,dx
  4160a9:	jbe    0x4160a9
  4160ab:	(bad)  
  4160ac:	ds ja  0x4160ad
  4160af:	dec    DWORD PTR [esi+0x77]
  4160b2:	(bad)  
  4160b3:	push   DWORD PTR [ebp+esi*2-0x2]
  4160b7:	inc    DWORD PTR [eax]
  4160b9:	add    BYTE PTR [eax+0x16],bl
  4160bc:	add    BYTE PTR [eax],al
  4160be:	xor    BYTE PTR [ebp-0x2],0xff
  4160c2:	dec    eax
  4160c3:	push   ss
  4160c4:	add    BYTE PTR [eax],al
  4160c6:	outs   dx,BYTE PTR ds:[esi]
  4160c7:	jbe    0x4160c7
  4160c9:	jmp    DWORD PTR [edx]
  4160cb:	jo     0x4160cb
  4160cd:	dec    DWORD PTR [eax+0x16]
  4160d0:	add    BYTE PTR [eax],al
  4160d2:	adc    al,0x70
  4160d4:	(bad)  
  4160d5:	push   DWORD PTR [eax+0x70]
  4160d8:	(bad)  
  4160d9:	jmp    FWORD PTR [eax+esi*2]
  4160dc:	(bad)  
  4160dd:	(bad)  
  4160de:	cmp    BYTE PTR [eax-0x2],dh
  4160e1:	inc    DWORD PTR [edx+0x70]
  4160e4:	(bad)  
  4160e5:	call   FWORD PTR [esi+0x18fffe75]
  4160eb:	push   ss
  4160ec:	add    BYTE PTR [eax],al
  4160ee:	data16 jne 0x4160ef
  4160f1:	push   DWORD PTR [edx+0x75]
  4160f4:	(bad)  
  4160f5:	call   DWORD PTR [edx+0xcfffe75]
  4160fb:	jne    0x4160fb
  4160fd:	push   DWORD PTR [ecx]
  4160ff:	xor    ecx,esp
  416101:	(bad)  
  416102:	(bad)  
  416103:	aaa    
  416104:	loope  0x416104
  416106:	into   
  416107:	xlat   BYTE PTR ds:[ebx]
  416108:	loopne 0x416108
  41610a:	(bad)  
  41610b:	fchs   
  41610d:	(bad)  
  41610e:	mov    esi,0xb6fee129
  416113:	outs   dx,DWORD PTR ds:[esi]
  416114:	in     al,0xfe
  416116:	scas   al,BYTE PTR es:[edi]
  416117:	jnp    0x41611a
  416119:	add    BYTE PTR [ecx],dh
  41611b:	imul   esp,esp,0x9e0000fe
  416121:	dec    ebp
  416122:	in     al,0xfe
  416124:	xchg   esi,eax
  416125:	jnp    0x416128
  416127:	add    BYTE PTR [ecx],dh
  416129:	push   eax
  41612a:	add    DWORD PTR [ecx+0x3],eax
  41612d:	nop
  41612e:	in     al,0x73
  416130:	adc    al,0xb9
  416132:	in     al,dx
  416133:	imul   ecx,DWORD PTR [esp+edi*4],0x1
  416137:	aas    
  416138:	xor    ebp,DWORD PTR ds:0x30cd5ee5
  41613e:	jmp    0x1bc35ae
  416143:	and    DWORD PTR [ecx],esi
  416145:	ds lock ins BYTE PTR es:[edi],dx
  416148:	ret    0xcbd7
  41614b:	pop    esi
  41614c:	xlat   BYTE PTR ds:[ebx]
  41614d:	into   
  41614e:	out    dx,eax
  41614f:	bound  esi,QWORD PTR [ecx]
  416151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416152:	push   es
  416153:	push   ebp
  416154:	ret    
  416155:	shl    edi,cl
  416157:	bound  esi,QWORD PTR [edi+0x4]
  41615a:	lock bound esi,QWORD PTR [ecx]
  41615d:	push   0x7a26c04
  416162:	imul   BYTE PTR [ebx-0x74]
  416165:	imul   eax,edx,0x12b0eff
  41616b:	inc    ebp
  41616c:	xchg   ebp,eax
  41616d:	sbb    ah,dh
  41616f:	pop    esi
  416170:	lea    ebp,[edi]
  416172:	out    dx,eax
  416173:	pusha  
  416174:	mov    bh,BYTE PTR [ebx+0x1]
  416177:	mov    ch,0x30
  416179:	adc    al,0xae
  41617b:	out    dx,eax
  41617c:	push   ebp
  41617d:	test   bh,0xef
  416180:	cmp    edx,0xffffffc2
  416183:	lock add BYTE PTR [eax],al
  416186:	push   ecx
  416187:	std    
  416188:	out    0x3,al
  41618a:	lds    edx,FWORD PTR [edx]
  41618c:	mov    bl,0xf0
  41618e:	push   ecx
  41618f:	repz retf 0x40c9
  416193:	out    dx,eax
  416194:	retf   
  416195:	add    eax,ecx
  416197:	adc    bl,BYTE PTR [ebx-0x6d0cee10]
  41619d:	ret    0xf81a
  4161a0:	(bad)  
  4161a1:	in     al,0x9e
  4161a3:	push   0xe50504f0
  4161a8:	xchg   edx,eax
  4161a9:	cmc    
  4161aa:	adc    esp,esp
  4161ac:	jg     0x416170
  4161ae:	xchg   BYTE PTR [eax-0x26],ch
  4161b1:	add    al,0xd
  4161b3:	in     eax,0x7a
  4161b5:	cmc    
  4161b6:	adc    ebx,esi
  4161b8:	jb     0x41617c
  4161ba:	outs   dx,BYTE PTR ds:[esi]
  4161bb:	push   0xeeec02fe
  4161c0:	push   edx
  4161c1:	retf   0xf7d7
  4161c4:	dec    ebx
  4161c5:	ret    
  4161c6:	loop   0x4161a7
  4161c8:	pop    eax
  4161c9:	jmp    0x41619b
  4161cb:	fidivr WORD PTR [edx]
  4161cd:	out    0xc1,eax
  4161cf:	shl    dh,cl
  4161d1:	add    ebx,DWORD PTR [edx-0x3903d3ed]
  4161d7:	repnz cmp al,0xe8
  4161da:	jae    0x4161d2
  4161dc:	sbb    al,0xeb
  4161de:	mov    al,ds:0x93ef0cf7
  4161e3:	neg    BYTE PTR [edx]
  4161e5:	aad    0xa2
  4161e7:	loop   0x4161e8
  4161e9:	icebp  
  4161ea:	add    BYTE PTR [eax],al
  4161ec:	xchg   ebp,eax
  4161ed:	jecxz  0x416216
  4161ef:	add    al,0x25
  4161f1:	adc    eax,0xce82e726
  4161f6:	(bad)  
  4161f7:	inc    DWORD PTR [ecx]
  4161f9:	repz push eax
  4161fb:	add    bh,ch
  4161fd:	bnd jmp DWORD PTR [esi]
  416200:	sub    eax,0xd3c471d5
  416205:	jecxz  0x416269
  416207:	scas   eax,DWORD PTR es:[edi]
  416208:	retf   
  416209:	sti    
  41620a:	bound  ebx,QWORD PTR [ebx+edx*8-0x3f2f9009]
  416211:	lock ds jmp 0xa443764a
  416218:	shl    edi,cl
  41621a:	push   ebp
  41621b:	rcl    BYTE PTR [edi+0x788f4ce0],0xee
  416222:	imul   eax,DWORD PTR [edx+esi*1-0x5f43fdbb],0xfffffffa
  41622a:	pop    esi
  41622b:	cdq    
  41622c:	push   0x617e62ee
  416231:	icebp  
  416232:	inc    ebp
  416233:	nop
  416234:	mov    ?,edx
  416236:	inc    DWORD PTR [edx]
  416238:	xor    ebx,eax
  41623a:	ins    BYTE PTR es:[edi],dx
  41623b:	mov    BYTE PTR [esi-0x25],dl
  41623e:	dec    bx
  416240:	arpl   si,ax
  416242:	jno    0x4162a4
  416244:	je     0x4162ad
  416246:	std    
  416247:	cmp    ch,BYTE PTR [ecx+edx*8]
  41624a:	bound  edx,QWORD PTR [ebp+0x65]
  41624d:	in     eax,0x6c
  41624f:	dec    edx
  416250:	add    BYTE PTR [eax],al
  416252:	ins    BYTE PTR es:[edi],dx
  416253:	repz arpl WORD PTR [ebx],di
  416256:	dec    eax
  416257:	in     al,0x70
  416259:	jmp    0x2640f290
  41625e:	sbb    bl,ah
  416260:	push   ebx
  416261:	or     al,0x20
  416263:	test   DWORD PTR [edi+0x8],0xe93eef19
  41626a:	xor    ah,BYTE PTR [ebx]
  41626c:	add    BYTE PTR [edx],ch
  41626e:	add    esi,edx
  416270:	pop    esi
  416271:	add    BYTE PTR [esp+edi*2],al
  416274:	inc    ecx
  416275:	imul   edi,edx,0x2f74607b
  41627b:	bound  esi,QWORD PTR [esi+0x41]
  41627e:	fcom   DWORD PTR [edx]
  416280:	add    BYTE PTR gs:[ebx+edi*2+0x7c046569],dl
  416288:	inc    ebx
  416289:	imul   ebp,esp,0xd8003e7b
  41628f:	cmovae esp,DWORD PTR [ebp-0x7c]
  416293:	push   ecx
  416294:	jb     0x416308
  416296:	jp     0x416313
  416298:	imul   esi,DWORD PTR [eax+ebx*4+0x64],0x6c
  41629d:	arpl   WORD PTR [ebp+0x61],si
  4162a0:	jo     0x4162a2
  4162a2:	dec    eax
  4162a3:	adc    dl,BYTE PTR [ebx+0x69]
  4162a6:	mov    ah,0x7b
  4162a8:	inc    eax
  4162a9:	push   0x6f5164a9
  4162ae:	lods   eax,DWORD PTR ds:[esi]
  4162af:	imul   ebp,DWORD PTR [ecx+0x74],0xffffffa1
  4162b3:	push   esp
  4162b4:	jbe    0x41632a
  4162b6:	add    BYTE PTR [eax],al
  4162b8:	mov    ch,0x12
  4162ba:	lods   eax,DWORD PTR ds:[esi]
  4162bb:	add    dh,al
  4162bd:	ja     0x41632a
  4162bf:	fs xchg esi,eax
  4162c1:	ja     0x416332
  4162c3:	jae    0x4162c9
  4162c5:	dec    esi
  4162c6:	data16 ins BYTE PTR es:[edi],dx
  4162c8:	cmc    
  4162c9:	push   eax
  4162ca:	std    
  4162cb:	call   DWORD PTR [edi+0x11]
  4162ce:	ins    BYTE PTR es:[edi],dx
  4162cf:	jae    0x4162b5
  4162d1:	popa   
  4162d2:	pusha  
  4162d3:	ins    DWORD PTR es:[edi],dx
  4162d4:	or     BYTE PTR [ecx+0x3e],bh
  4162d7:	add    BYTE PTR [edx-0x1196b9ee],dh
  4162dd:	jnp    0x41632a
  4162df:	gs pusha 
  4162e1:	ins    BYTE PTR es:[edi],dx
  4162e2:	inc    ebx
  4162e3:	imul   edi,DWORD PTR [ebx+edi*2],0x116d003e
  4162ea:	inc    esi
  4162eb:	imul   esi,DWORD PTR [ecx],0x9d40e80d
  4162f1:	repnz bound si,DWORD PTR [ecx]
  4162f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f6:	add    al,0x45
  4162f8:	xchg   esp,eax
  4162f9:	pop    edi
  4162fa:	shr    BYTE PTR [ebp+ecx*4+0x68],1
  4162fe:	in     eax,dx
  4162ff:	bound  edi,QWORD PTR [ecx+0x1c]
  416302:	out    dx,al
  416303:	arpl   WORD PTR [ebp+0x58],dx
  416306:	(bad)  
  416307:	(bad)  
  416308:	(bad)  
  41630a:	add    eax,DWORD PTR [ebp+0x4c]
  41630d:	inc    edi
  41630e:	shl    DWORD PTR [edx+0x43],cl
  416311:	dec    edx
  416312:	in     al,dx
  416313:	ins    BYTE PTR es:[edi],dx
  416314:	push   edi
  416315:	mov    eax,0x1313ef9
  41631a:	add    eax,DWORD PTR [ebp+0x0]
  41631d:	add    BYTE PTR [edi+eiz*4-0x33],cl
  416321:	ins    BYTE PTR es:[edi],dx
  416322:	adc    bl,BYTE PTR [ebp+ebp*8+0x62]
  416326:	clc    
  416327:	jl     0x41630c
  416329:	ins    BYTE PTR es:[edi],dx
  41632a:	lock jp 0x41632e
  41632d:	je     0x41635f
  41632f:	mov    dh,0xe8
  416331:	jae    0x416315
  416333:	xor    edx,0x73
  416336:	or     al,0x80
  416338:	int3   
  416339:	ins    DWORD PTR es:[edi],dx
  41633a:	pop    ss
  41633b:	xchg   esi,eax
  41633c:	add    DWORD PTR [eax+0x73e8b630],esp
  416342:	push   es
  416343:	xchg   esp,eax
  416344:	jmp    0x4163a9
  416346:	(bad)  
  416347:	(bad)
  41634a:	enter  0xe4c8,0x60
  41634e:	(bad)  
  416350:	icebp  
  416351:	jbe    0x416343
  416353:	jp     0x416356
  416355:	dec    ebp
  416356:	xor    BYTE PTR [esi],dh
  416358:	in     eax,0x73
  41635a:	loope  0x416384
  41635c:	jmp    0xe56833d6
  416361:	dec    edi
  416362:	mov    ds:0x9566e626,eax
  416367:	adc    al,0xc
  416369:	shl    DWORD PTR [edx-0x7211f01e],1
  41636f:	shl    esi,cl
  416371:	add    ecx,DWORD PTR [ebx-0x7d18c5ee]
  416377:	sar    ebx,1
  416379:	icebp  
  41637a:	sub    bh,0xc
  41637d:	clc    
  41637e:	jb     0x41637b
  416380:	clc    
  416381:	out    0x0,al
  416383:	add    BYTE PTR [ecx-0x20],dl
  416386:	std    
  416387:	icebp  
  416388:	pop    edi
  416389:	shl    esi,cl
  41638b:	add    eax,DWORD PTR [edx+0x11]
  41638e:	retf   
  41638f:	lock (bad) 
  416392:	leave  
  416393:	out    dx,al
  416394:	pop    esi
  416395:	shl    esi,cl
  416397:	add    esi,DWORD PTR [ebp+0x13]
  41639a:	scas   al,BYTE PTR es:[edi]
  41639b:	out    0x42,al
  41639d:	les    edi,FWORD PTR [eax-0x450cc316]
  4163a3:	out    0xfe,al
  4163a5:	loope  0x416364
  4163a7:	in     eax,0xf
  4163a9:	clc    
  4163aa:	mov    edx,eax
  4163ac:	adc    esi,ecx
  4163ae:	xchg   edx,eax
  4163af:	jmp    0xef1b:0xe2a4f605
  4163b6:	cdq    
  4163b7:	ret    0x6486
  4163ba:	mov    al,0x2
  4163bc:	hlt    
  4163bd:	out    dx,al
  4163be:	jb     0x416393
  4163c0:	add    bl,bh
  4163c2:	jl     0x4163a6
  4163c4:	loop   0x4163b4
  4163c6:	xchg   esi,eax
  4163c7:	icebp  
  4163c8:	aad    0xed
  4163ca:	dec    edi
  4163cb:	lock rcr edx,cl
  4163ce:	dec    esp
  4163cf:	clc    
  4163d0:	pop    ss
  4163d1:	adc    al,0xd5
  4163d3:	add    esi,esp
  4163d5:	out    dx,al
  4163d6:	push   edx
  4163d7:	rol    ebx,0xe1
  4163da:	cmp    bh,ah
  4163dc:	int3   
  4163dd:	fbld   TBYTE PTR [edx]
  4163df:	jmp    0x4163a1
  4163e1:	out    dx,al
  4163e2:	dec    DWORD PTR [ecx+0x29]
  4163e5:	icebp  
  4163e6:	jno    0x416418
  4163e8:	add    BYTE PTR [eax],al
  4163ea:	repnz arpl bp,di
  4163ed:	pop    es
  4163ee:	xor    al,dh
  4163f0:	jo     0x416407
  4163f2:	and    esi,eax
  4163f4:	bound  eax,QWORD PTR [edi]
  4163f6:	in     al,0x63
  4163f8:	std    
  4163f9:	fdiv   QWORD PTR [eax]
  4163fb:	iret   
  4163fc:	jb     0x416413
  4163fe:	stc    
  4163ff:	cli    
  416400:	inc    ecx
  416401:	add    cl,bh
  416403:	not    BYTE PTR [ebx+0x6]
  416406:	add    al,0xfb
  416408:	arpl   WORD PTR [eax+esi*8],ax
  41640b:	sti    
  41640c:	pop    esi
  41640d:	(bad)  [edx]
  41640f:	(bad)  
  416410:	jmp    DWORD PTR [ebp-0x3fac1831]
  416416:	shr    esp,1
  416418:	inc    eax
  416419:	mov    esi,0xe973f1bf
  41641e:	xor    bl,BYTE PTR [ebp-0x93965fe]
  416424:	bound  edi,QWORD PTR [ecx-0x5a00d9ce]
  41642a:	(bad)  
  41642b:	out    0x4a,eax
  41642d:	xchg   esi,eax
  41642e:	xchg   esi,eax
  41642f:	out    0x6b,al
  416431:	test   BYTE PTR [edx+edi*8+0x6b],ch
  416435:	mov    WORD PTR [edx+eax*8+0x6a],?
  416439:	test   BYTE PTR [ebx+0x63],dh
  41643c:	std    
  41643d:	shl    DWORD PTR [ebx],1
  41643f:	fldenv [edx+0x75]
  416442:	retw   0x7d70
  416446:	ja     0x41642d
  416448:	jno    0x4164c8
  41644a:	pusha  
  41644b:	arpl   bp,di
  41644d:	inc    eax
  41644e:	add    BYTE PTR [eax],al
  416450:	xor    eax,0x4c4471d5
  416455:	out    0x62,eax
  416457:	cmp    eax,0x416bf05a
  41645c:	push   eax
  41645d:	out    dx,eax
  41645e:	outs   dx,DWORD PTR ds:[esi]
  41645f:	add    BYTE PTR [ebx],bh
  416461:	sub    DWORD PTR [edi+0x6e],ecx
  416464:	jmp    0x77a9d4d0
  416469:	fs std 
  41646b:	jmp    FWORD PTR ds:0x4772501a
  416471:	jnp    0x4164d5
  416473:	jae    0x4164b0
  416475:	sub    esi,DWORD PTR [edx]
  416477:	inc    esi
  416478:	xor    DWORD PTR [edx+0x70],ebp
  41647b:	je     0x416495
  41647d:	pop    ss
  41647e:	sbb    BYTE PTR [edx],al
  416480:	inc    edi
  416481:	push   0x6a186e62
  416486:	ins    BYTE PTR es:[edi],dx
  416487:	arpl   WORD PTR ds:0xef00706b,di
  41648d:	sbb    BYTE PTR [eax+0x72],dl
  416490:	pop    es
  416491:	jp     0x4164f5
  416493:	jae    0x416490
  416495:	sub    DWORD PTR [edx],esi
  416497:	dec    esi
  416498:	std    
  416499:	pop    esi
  41649a:	jno    0x41649c
  41649c:	outs   dx,DWORD PTR ds:[esi]
  41649d:	sbb    DWORD PTR [ebx+eax*2-0x7b],ecx
  4164a1:	ja     0x416510
  4164a3:	push   ebx
  4164a4:	jl     0x41650e
  4164a6:	data16 outs dx,BYTE PTR ds:[esi]
  4164a8:	jg     0x416501
  4164aa:	std    
  4164ab:	inc    DWORD PTR [ebx]
  4164ad:	sbb    BYTE PTR [ecx+0x78],al
  4164b0:	shl    DWORD PTR [edx+0x4d],0x72
  4164b4:	add    BYTE PTR [eax],al
  4164b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b7:	jns    0x41651b
  4164b9:	jae    0x416466
  4164bb:	push   ss
  4164bc:	lods   eax,DWORD PTR ds:[esi]
  4164bd:	add    cl,bl
  4164bf:	jae    0x416532
  4164c1:	push   ebp
  4164c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c3:	outs   dx,BYTE PTR ds:[esi]
  4164c4:	pop    esi
  4164c5:	outs   dx,BYTE PTR ds:[esi]
  4164c6:	lods   al,BYTE PTR ds:[esi]
  4164c7:	jp     0x41652b
  4164c9:	fs popf 
  4164cb:	pop    esi
  4164cc:	pusha  
  4164cd:	gs call 0x6b0cb45
  4164d3:	push   esi
  4164d4:	data16 ins BYTE PTR es:[edi],dx
  4164d6:	cld    
  4164d7:	je     0x416548
  4164d9:	add    BYTE PTR [ecx],dh
  4164db:	(bad)  
  4164dc:	fidiv  WORD PTR [ecx-0x29]
  4164df:	xlat   BYTE PTR ds:[ebx]
  4164e0:	out    0x30,eax
  4164e2:	add    ecx,DWORD PTR [ebx]
  4164e4:	loopne 0x416551
  4164e6:	lds    ebp,FWORD PTR [ecx+eax*1-0x77]
  4164ea:	xor    DWORD PTR [esi],ebp
  4164ec:	mul    BYTE PTR [edx-0x70]
  4164ef:	daa    
  4164f0:	fist   WORD PTR [eax-0x5b]
  4164f3:	std    
  4164f4:	ficomp WORD PTR [esi-0x7c]
  4164f7:	xor    ch,dl
  4164f9:	inc    edi
  4164fa:	jbe    0x416513
  4164fc:	jmp    0x1a0f562
  416501:	xchg   ebp,eax
  416502:	xor    DWORD PTR [edx],esi
  416504:	fbstp  TBYTE PTR [ebx+0x69]
  416507:	cmp    ch,al
  416509:	ins    BYTE PTR es:[edi],dx
  41650a:	push   ebx
  41650b:	or     al,0xe8
  41650d:	inc    ebp
  41650e:	arpl   WORD PTR [edx-0x18],sp
  416511:	push   eax
  416512:	gs cmp eax,0x6b445ee0
  416518:	add    DWORD PTR [esi],ecx
  41651a:	add    BYTE PTR [eax],al
  41651c:	xor    DWORD PTR [esi+0x584340ea],ebp
  416522:	in     al,0x73
  416524:	push   esp
  416525:	mov    dl,0xf0
  416527:	dec    bp
  416529:	imul   eax,DWORD PTR [ecx],0x60
  41652c:	xor    DWORD PTR [esi-0x61efac16],ebp
  416532:	out    dx,al
  416533:	dec    edx
  416534:	adc    al,0x88
  416536:	mov    edi,0x1980c71
  41653b:	or     eax,0x40eaae31
  416540:	add    ebx,DWORD PTR [eax-0x5beb8c1c]
  416546:	out    0x70,eax
  416548:	std    
  416549:	mov    esp,edi
  41654b:	pusha  
  41654c:	aam    0x6a
  41654e:	add    ecx,esi
  416550:	xor    DWORD PTR [edx+0x13e862e5],eax
  416556:	push   ebp
  416557:	jmp    0x41653b
  416559:	jmp    0x44b:0xddd7e847
  416560:	aam    0xef
  416562:	inc    ebx
  416563:	xor    eax,0xe84b3203
  416568:	retf   0x3c13
  41656b:	push   es
  41656c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656d:	in     eax,0x36
  41656f:	test   BYTE PTR [edi+0x5fe232f2],0x14
  416576:	sbb    al,0xf5
  416578:	xchg   ebx,eax
  416579:	out    0xd9,al
  41657b:	xor    eax,0xe802f85f
  416580:	add    BYTE PTR [eax],al
  416582:	push   es
  416583:	popa   
  416584:	mov    bh,0x3
  416586:	arpl   di,si
  416588:	or     eax,0xcf786c9
  41658d:	int    0x53
  41658f:	fld    TBYTE PTR [ebx]
  416591:	cld    
  416592:	daa    
  416593:	adc    al,0x91
  416595:	add    eax,DWORD PTR [ebx+0x63d2cdf7]
  41659b:	neg    eax
  41659d:	cli    
  41659e:	fs repz ret 0x53ee
  4165a3:	xlat   BYTE PTR ds:[ebx]
  4165a4:	into   
  4165a5:	ret    0x60be
  4165a8:	jle    0x4165ad
  4165aa:	arpl   di,si
  4165ac:	(bad)
  4165af:	icebp  
  4165b0:	mov    ecx,0xaff6f9de
  4165b5:	add    ebp,DWORD PTR [edx+edx*1-0x47]
  4165b9:	fimul  WORD PTR ds:0x1cde96d1
  4165bf:	int    0x8b
  4165c1:	cli    
  4165c2:	inc    edi
  4165c3:	adc    al,0x23
  4165c5:	add    esp,ebx
  4165c7:	test   BYTE PTR [ebp-0x7418fb42],0xcc
  4165ce:	rcr    edx,cl
  4165d0:	jmp    FWORD PTR [ebx+0x3300216a]
  4165d6:	xor    al,dh
  4165d8:	bound  ecx,QWORD PTR [esi+0x6c]
  4165db:	loop   0x41663f
  4165dd:	dec    eax
  4165de:	inc    ecx
  4165df:	cmc    
  4165e0:	dec    eax
  4165e1:	dec    esp
  4165e2:	dec    edx
  4165e3:	and    DWORD PTR [eax],eax
  4165e5:	mov    BYTE PTR [eax],0x0
  4165e8:	xor    eax,esi
  4165ea:	bound  ecx,QWORD PTR [esi+0x5c]
  4165ed:	cmc    
  4165ee:	jae    0x416607
  4165f0:	adc    ch,ah
  4165f2:	jb     0x416640
  4165f4:	out    0xe7,al
  4165f6:	ds jmp 0x3b40bf2e
  4165fc:	idiv   al
  4165fe:	inc    edx
  4165ff:	nop    ebx
  416602:	push   ebp
  416603:	or     BYTE PTR [ecx],bl
  416605:	jecxz  0x416669
  416607:	sub    BYTE PTR ds:0xd61aff4e,dh
  41660d:	clc    
  41660e:	dec    esp
  41660f:	stc    
  416610:	pslld  mm0,QWORD PTR [eax-0x4]
  416614:	fsubr  st(5),st
  416616:	(bad)  
  416617:	dec    esi
  416619:	ret    0xcc70
  41661c:	fcomp  QWORD PTR [edi-0x3]
  41661f:	add    dh,BYTE PTR [edx]
  416621:	fldenv [edx-0x23]
  416624:	mul    esp
  416626:	(bad)  
  416627:	fucomi st,st(0)
  416629:	mov    esi,0x5ff3cc6a
  41662e:	std    
  41662f:	enter  0xe98e,0x5e
  416633:	mov    ecx,0xff32249b
  416638:	jle    0x416625
  41663a:	imul   ebp,ecx,0x32
  41663d:	inc    edi
  41663e:	add    BYTE PTR [edx-0x7a940d66],bh
  416644:	(bad)  
  416645:	out    0x62,eax
  416647:	mov    cl,BYTE PTR [edi+0x62e3]
  41664d:	add    cl,cl
  41664f:	adc    ebp,DWORD PTR [edi+0x68]
  416652:	mov    ch,0x77
  416654:	imul   esi,DWORD PTR [ebx],0x6c642daa
  41665a:	fcom   QWORD PTR [edx]
  41665c:	jne    0x41665e
  41665e:	and    DWORD PTR [esi+0x71],esi
  416661:	gs jmp 0x5e62:0x1b746275
  416669:	arpl   bx,si
  41666b:	inc    esp
  41666c:	outs   dx,DWORD PTR ds:[esi]
  41666d:	ins    BYTE PTR es:[edi],dx
  41666e:	or     DWORD PTR [eax],ebx
  416670:	ja     0x416672
  416672:	popa   
  416673:	jbe    0x4166e6
  416675:	gs push 0x76
  416678:	bound  esi,QWORD PTR [ebx+ecx*2+0x62]
  41667c:	bound  esp,QWORD PTR [ecx+0x34]
  41667f:	jne    0x4166d3
  416681:	jb     0x4166bf
  416683:	pop    ecx
  416684:	std    
  416685:	jmp    DWORD PTR [edi]
  416687:	jno    0x4166f4
  416689:	imul   edi,esi,0x242e7173
  41668f:	ins    BYTE PTR es:[edi],dx
  416690:	imul   eax,DWORD PTR [eax],0x744f17dd
  416696:	jmp    0xfd59:0x11727141
  41669d:	dec    eax
  41669f:	pop    ss
  4166a0:	dec    edi
  4166a1:	je     0x41668d
  4166a3:	inc    esp
  4166a4:	inc    eax
  4166a5:	push   0x3e4fea
  4166aa:	les    edx,FWORD PTR [edi]
  4166ac:	dec    edi
  4166ad:	je     0x416729
  4166af:	dec    esi
  4166b0:	ins    BYTE PTR es:[edi],dx
  4166b1:	dec    ecx
  4166b2:	add    BYTE PTR [eax],al
  4166b4:	jle    0x416724
  4166b6:	add    BYTE PTR ds:[edi+edx*1+0x41da744f],cl
  4166be:	jno    0x416732
  4166c0:	leave  
  4166c1:	adc    ch,dl
  4166c3:	add    bl,cl
  4166c5:	outs   dx,BYTE PTR ds:[esi]
  4166c6:	outs   dx,DWORD PTR ds:[esi]
  4166c7:	inc    ebx
  4166c8:	xor    DWORD PTR [eax-0x5417b20f],ebx
  4166ce:	add    DWORD PTR [esi],ecx
  4166d0:	xor    BYTE PTR [edx-0x13],bh
  4166d3:	jno    0x4166d7
  4166d5:	jmp    0x6d3fadc8
  4166da:	add    DWORD PTR [ecx-0x37],esi
  4166dd:	loopne 0x4166cc
  4166df:	pop    esi
  4166e0:	loope  0x4166a5
  4166e2:	and    eax,0x3d0dd64
  4166e7:	ss xor esp,edx
  4166ea:	in     eax,0x62
  4166ec:	lds    ebp,FWORD PTR ds:0x1acd63e3
  4166f2:	add    al,0x2a
  4166f4:	xor    esi,edx
  4166f6:	fidiv  WORD PTR [ebx-0x67]
  4166f9:	(bad)  
  4166fa:	lock jae 0x416690
  4166fd:	and    al,0xe6
  4166ff:	pop    esi
  416700:	test   BYTE PTR [eax],dl
  416702:	add    al,0x47
  416704:	xor    edx,edi
  416706:	in     al,0x60
  416708:	call   0x156:0xfefff010
  41670f:	popa   
  416710:	xchg   BYTE PTR ds:0x675262e6,al
  416716:	add    DWORD PTR [esi],esp
  416718:	add    BYTE PTR [eax],al
  41671a:	xor    DWORD PTR [edx],ecx
  41671c:	call   0xf159c98d
  416721:	ins    BYTE PTR es:[edi],dx
  416722:	push   edx
  416723:	inc    edx
  416724:	loopne 0x416799
  416726:	xor    DWORD PTR [edi+0x554c7101],esi
  41672c:	(bad)  
  41672e:	mov    esi,0x4c7101aa
  416733:	inc    edi
  416734:	loopne 0x416796
  416736:	and    eax,0x313e016b
  41673b:	cdq    
  41673c:	loopne 0x41679e
  41673e:	daa    
  41673f:	imul   eax,DWORD PTR [ecx],0x45
  416742:	xor    DWORD PTR [edx+ebx*4],edx
  416745:	loopne 0x416749
  416747:	loope  0x4166d6
  416749:	loop   0x416764
  41674b:	in     eax,dx
  41674c:	xchg   esi,eax
  41674d:	out    dx,eax
  41674e:	jle    0x4167ad
  416750:	enter  0xdc03,0xc0
  416754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416755:	shl    dl,cl
  416757:	bnd js 0x416749
  41675a:	jecxz  0x41673f
  41675c:	out    0x3,al
  41675e:	in     al,0xe0
  416760:	jge    0x416744
  416762:	leave  
  416763:	and    BYTE PTR [ecx],bl
  416765:	es aad 0xef
  416768:	dec    edx
  416769:	add    al,0xfa
  41676b:	adc    esp,DWORD PTR [ebx]
  41676d:	in     eax,0xdf
  41676f:	div    DWORD PTR [ebx]
  416771:	icebp  
  416772:	shl    ecx,cl
  416774:	push   ss
  416775:	repnz popf 
  416777:	test   BYTE PTR [edi-0x18],0x93
  41677b:	shl    esi,cl
  41677d:	add    eax,DWORD PTR [eax]
  41677f:	add    BYTE PTR [esi+0x14],bh
  416782:	adc    al,0xe6
  416784:	mov    ch,ch
  416786:	pop    es
  416787:	loopne 0x4167ec
  416789:	loope  0x41678e
  41678b:	bnd jbe 0x416770
  41678e:	add    eax,0x3f097de
  416793:	add    al,0x82
  416795:	loope  0x4167a2
  416797:	repnz push ebx
  416799:	out    dx,al
  41679a:	hlt    
  41679b:	and    eax,0x402f04d
  4167a0:	xor    DWORD PTR [edi+eiz*8],edx
  4167a3:	add    esi,DWORD PTR [ecx]
  4167a5:	adc    al,0xe7
  4167a7:	add    esi,DWORD PTR [ecx]
  4167a9:	adc    al,0xe7
  4167ab:	add    esi,DWORD PTR [ecx]
  4167ad:	adc    al,0xe7
  4167af:	add    esi,DWORD PTR [ecx]
  4167b1:	adc    al,0xe7
  4167b3:	add    esi,DWORD PTR [ecx]
  4167b5:	adc    al,0xe7
  4167b7:	add    esi,DWORD PTR [ecx]
  4167b9:	adc    al,0xe7
  4167bb:	add    esi,DWORD PTR [ecx]
  4167bd:	adc    al,0x0
  4167bf:	jmp    0xe9417bf6
  4167c4:	xor    dl,BYTE PTR [eax+eax*1]
  4167c7:	jmp    0xe9417bfe
  4167cc:	xor    dl,BYTE PTR [eax+eax*1]
  4167cf:	jmp    0xe9417c06
  4167d4:	xor    dl,BYTE PTR [eax+eax*1]
  4167d7:	jmp    0xe9417c0e
  4167dc:	xor    dl,BYTE PTR [eax+eax*1]
  4167df:	jmp    0xe9417c16
  4167e4:	add    BYTE PTR [eax],al
  4167e6:	xor    dl,BYTE PTR [eax+eax*1]
  4167e9:	jmp    0xe9417c20
  4167ee:	xor    dl,BYTE PTR [eax+eax*1]
  4167f1:	jmp    0xe9417c28
  4167f6:	xor    dl,BYTE PTR [eax+eax*1]
  4167f9:	jmp    0xe9417c30
  4167fe:	xor    dl,BYTE PTR [eax+eax*1]
  416801:	jmp    0xe9417c38
  416806:	xor    dl,BYTE PTR [eax+eax*1]
  416809:	jmp    0xe9417c40
  41680e:	xor    dl,BYTE PTR [eax+eax*1]
  416811:	jmp    0xe9417c48
  416816:	xor    dl,BYTE PTR [eax+eax*1]
  416819:	jmp    0xe9417c50
  41681e:	xor    dl,BYTE PTR [eax+eax*1]
  416821:	jmp    0xe9417c58
  416826:	xor    dl,BYTE PTR [eax+eax*1]
  416829:	jmp    0xe9417c60
  41682e:	xor    dl,BYTE PTR [eax+eax*1]
  416831:	jmp    0xe9417c68
  416836:	xor    dl,BYTE PTR [eax+eax*1]
  416839:	add    BYTE PTR [eax-0x67ffffe9],bl
  41683f:	pop    ss
  416840:	add    BYTE PTR [eax],al
  416842:	mov    BYTE PTR [edi],dl
  416844:	add    BYTE PTR [eax],al
  416846:	mov    BYTE PTR [edi],dl
  416848:	add    BYTE PTR [eax],al
  41684a:	add    BYTE PTR [eax],al
  41684c:	cwde   
  41684d:	pop    ss
  41684e:	add    BYTE PTR [eax],al
  416850:	cwde   
  416851:	pop    ss
  416852:	add    BYTE PTR [eax],al
  416854:	ins    DWORD PTR es:[edi],dx
  416855:	dec    eax
  416856:	int3   
  416857:	int3   
  416858:	gs dec eax
  41685a:	int3   
  41685b:	int3   
  41685c:	add    al,0x8f
  41685e:	in     al,dx
  41685f:	push   ecx
  416860:	mov    edx,0x298a07d1
  416865:	mov    WORD PTR [ebx-0x1],cs
  416868:	stos   BYTE PTR es:[edi],al
  416869:	jno    0x4168c6
  41686b:	ret    
  41686c:	in     al,0x8e
  41686e:	in     al,dx
  41686f:	push   ecx
  416870:	ffreep st(2)
  416872:	xor    cl,cl
  416874:	aad    0x8e
  416876:	outs   dx,DWORD PTR ds:[esi]
  416877:	xor    BYTE PTR [edx-0x5874f41e],ch
  41687d:	clc    
  41687e:	mov    BYTE PTR [esi+0x39],al
  416881:	lea    eax,[ebx-0x4]
  416884:	stos   BYTE PTR es:[edi],al
  416885:	fstp   DWORD PTR [edi]
  416887:	mov    ebx,DWORD PTR [edi-0x6c]
  41688a:	cmp    eax,0x8013856b
  41688f:	aas    
  416890:	jp     0x416872
  416892:	add    ebx,ebp
  416894:	or     BYTE PTR [ebx-0x46f374a3],bh
  41689a:	ror    ah,0x84
  41689d:	(bad)  
  41689e:	in     al,dx
  41689f:	adc    ebp,0x2f
  4168a2:	mov    DWORD PTR [ebp+0x29],eax
  4168a5:	lea    eax,[ebx-0x20]
  4168a8:	stos   BYTE PTR es:[edi],al
  4168a9:	enter  0x8bdf,0x64
  4168ad:	je     0x4168b0
  4168af:	push   ecx
  4168b0:	add    BYTE PTR [eax],al
  4168b2:	add    eax,0xaae4538d
  4168b7:	shl    bl,1
  4168b9:	mov    ebp,DWORD PTR [ecx-0x24]
  4168bc:	add    BYTE PTR [ebp+0x39],cl
  4168bf:	lea    ecx,[ebx-0x8]
  4168c2:	mov    edx,0xf38bf7c0
  4168c7:	das    
  4168c8:	add    DWORD PTR [ebp+0x29],eax
  4168cb:	lea    eax,[ebx-0x18]
  4168ce:	mov    edx,0xe08bf7c8
  4168d3:	xor    eax,DWORD PTR [ecx]
  4168d5:	push   ebp
  4168d6:	sub    DWORD PTR [ebp-0x2f550fad],ecx
  4168dc:	test   DWORD PTR [ebx+0x4d00f7f9],0xfc4b8d39
  4168e6:	jbe    0x4168b8
  4168e8:	repz add BYTE PTR [ecx],dh
  4168eb:	adc    al,0x0
  4168ed:	jmp    0x416927
  4168ef:	(bad)  
  4168f0:	push   ebx
  4168f1:	hlt    
  4168f2:	mov    dl,0x55
  4168f4:	dec    DWORD PTR [eax+0x45895fe4]
  4168fa:	cmp    DWORD PTR [esi-0x33950bb5],ecx
  416900:	pop    ss
  416901:	jae    0x41697c
  416903:	lea    edx,[ebx-0x10]
  416906:	stos   BYTE PTR es:[edi],al
  416907:	push   ss
  416908:	add    DWORD PTR [ebp+0x29],eax
  41690b:	mov    eax,DWORD PTR [ebx-0x24]
  41690e:	fwait
  41690f:	or     ch,BYTE PTR [eax-0x54]
  416912:	xor    edx,esp
  416914:	dec    DWORD PTR [edx+0x386c0000]
  41691a:	dec    edi
  41691b:	call   0x417c81
  416920:	mov    dl,0x50
  416922:	or     al,0x85
  416924:	icebp  
  416925:	fistp  WORD PTR [eax]
  416927:	mov    eax,DWORD PTR [eax+eiz*2+0x9c94589]
  41692e:	mov    ch,0xc
  416930:	popa   
  416931:	mov    ecx,DWORD PTR [ebx-0x14]
  416934:	mov    edx,0x748bebbf
  416939:	pop    eax
  41693a:	mov    DWORD PTR [ecx+eiz*4],eax
  41693d:	adc    eax,0x79a0843
  416942:	mov    DWORD PTR [ebp-0x5f],ecx
  416945:	xchg   ebp,eax
  416946:	mov    edi,0xefc7a804
  41694b:	jmp    0x41691a
  41694d:	and    eax,0xb7948bc0
  416952:	ror    ah,0x75
  416955:	dec    eax
  416956:	int3   
  416957:	int3   
  416958:	ins    DWORD PTR es:[edi],dx
  416959:	dec    eax
  41695a:	int3   
  41695b:	int3   
  41695c:	gs dec eax
  41695e:	int3   
  41695f:	int3   
  416960:	add    al,0x8d
  416962:	in     al,dx
  416963:	adc    DWORD PTR [ebp-0x4],0xffffffe7
  416967:	add    eax,0x89fd595e
  41696c:	in     al,dx
  41696d:	imul   ecx,DWORD PTR [ecx-0x183ba6bb],0x29
  416974:	inc    esi
  416975:	pop    ecx
  416976:	std    
  416977:	xor    DWORD PTR [ebp+0x10],0xffffffa1
  41697b:	mov    ah,0x0
  41697d:	add    ah,bl
  41697f:	sar    bh,cl
  416981:	addr16 in eax,dx
  416983:	adc    eax,0xc6ba0040
  416988:	out    0x51,eax
  41698a:	push   ds
  41698b:	push   DWORD PTR [ebx-0x5eeb8fab]
  416991:	mov    eax,0x69ffd364
  416996:	xor    esi,ebp
  416998:	jmp    DWORD PTR [edi-0x13]
  41699b:	adc    eax,0xfef60040
  4169a0:	mov    bh,0x55
  4169a2:	jo     0x4169b8
  4169a4:	xchg   DWORD PTR [ebp-0x27],eax
  4169a7:	push   eax
  4169a8:	inc    ebx
  4169a9:	cld    
  4169aa:	xor    DWORD PTR [eax+eax*1],edx
  4169ad:	add    dl,cl
  4169af:	or     cl,BYTE PTR [ecx-0x3d6b32ab]
  4169b5:	add    DWORD PTR [eax+0x3c83fbbe],edi
  4169bb:	pop    eax
  4169bc:	or     BYTE PTR [ebx+0x10],dh
  4169bf:	lea    eax,[ebx-0x4]
  4169c2:	mov    edx,0x338c8307
  4169c7:	aam    0xff
  4169c9:	push   eax
  4169ca:	stos   BYTE PTR es:[edi],al
  4169cb:	mov    esi,0xfe9652e7
  4169d0:	mov    bl,0x55
  4169d2:	lock adc ecx,DWORD PTR [ecx+0x48a854d]
  4169d9:	(bad)  
  4169da:	lds    edi,FWORD PTR [esi+0x438a003e]
  4169e0:	mov    ebp,esp
  4169e2:	add    BYTE PTR [eax],al
  4169e4:	or     al,0x55
  4169e6:	int3   
  4169e7:	int3   
  4169e8:	jne    0x416a31
  4169ea:	int3   
  4169eb:	int3   
  4169ec:	ins    DWORD PTR es:[edi],dx
  4169ed:	inc    edi
  4169ee:	int3   
  4169ef:	int3   
  4169f0:	gs inc edi
  4169f2:	int3   
  4169f3:	int3   
  4169f4:	in     al,0x8c
  4169f6:	in     al,dx
  4169f7:	mov    eax,ds:0x3ec221
  4169fc:	dec    DWORD PTR [eax+eax*2+0x7c6aa30]
  416a03:	ds mov eax,0xf25d07cc
  416a09:	dec    eax
  416a0a:	int3   
  416a0b:	int3   
  416a0c:	in     eax,dx
  416a0d:	dec    eax
  416a0e:	int3   
  416a0f:	int3   
  416a10:	in     eax,0x48
  416a12:	int3   
  416a13:	int3   
  416a14:	fs mov ebp,esp
  416a17:	mov    ebp,DWORD PTR [eax+ecx*1+0x50]
  416a1b:	mov    ebp,DWORD PTR [esp+ecx*1+0x4f]
  416a1f:	call   FWORD PTR [eax+eiz*4]
  416a22:	push   ebx
  416a23:	inc    ecx
  416a24:	xor    DWORD PTR [ecx+0x48f5ccc0],edi
  416a2a:	int3   
  416a2b:	int3   
  416a2c:	in     eax,dx
  416a2d:	dec    eax
  416a2e:	int3   
  416a2f:	int3   
  416a30:	in     eax,0x48
  416a32:	int3   
  416a33:	int3   
  416a34:	fs mov ebp,esp
  416a37:	adc    ebp,0xc
  416a3a:	push   0x0
  416a3c:	dec    ebx
  416a3d:	adc    al,0x68
  416a3f:	fdiv   QWORD PTR [ebx]
  416a41:	aam    0xff
  416a43:	inc    BYTE PTR [esp+ebx*4+0x53]
  416a47:	inc    ecx
  416a48:	add    BYTE PTR [eax],al
  416a4a:	xor    DWORD PTR [ebp+0x6c09f843],ecx
  416a50:	add    al,BYTE PTR [eax+0x31]
  416a53:	mov    eax,DWORD PTR [ebx-0x8]
  416a56:	loope  0x416ac3
  416a58:	mov    edx,0x815786ff
  416a5d:	les    ebp,FWORD PTR [ecx]
  416a5f:	lea    eax,[ebx-0x4]
  416a62:	stos   BYTE PTR es:[edi],al
  416a63:	leave  
  416a64:	sqrtps xmm7,XMMWORD PTR [edx-0x45adf43f]
  416a6b:	rol    DWORD PTR [edi],1
  416a6d:	push   eax
  416a6e:	pop    esi
  416a6f:	sar    ebx,0x8b
  416a72:	dec    esp
  416a73:	mov    ecx,0x8ae4ccc0
  416a78:	in     al,dx
  416a79:	push   ecx
  416a7a:	outs   dx,BYTE PTR ds:[esi]
  416a7b:	sar    ebx,1
  416a7d:	add    BYTE PTR [ecx],dh
  416a7f:	adc    al,0x0
  416a81:	jmp    0x416aab
  416a83:	mov    eax,DWORD PTR [ebx-0x4]
  416a86:	mov    dl,0x53
  416a88:	dec    DWORD PTR [eax+0x4d89586c]
  416a8e:	sbb    eax,0xa2104b1b
  416a93:	test   DWORD PTR [eax+0x53133955],0x29e36fc
  416a9d:	mov    ebp,DWORD PTR [eax+ecx*1+0x1]
  416aa1:	dec    ebp
  416aa2:	cmc    
  416aa3:	push   es
  416aa4:	mov    dh,0x11
  416aa6:	sub    dl,BYTE PTR [edx+0x74]
  416aa9:	pop    es
  416aaa:	test   eax,0x14
  416aaf:	add    BYTE PTR [ecx],dh
  416ab1:	imul   eax,DWORD PTR [ebx+ebp*8],0x1
  416ab5:	and    eax,eax
  416ab7:	mov    edx,esp
  416ab9:	mov    eax,0x47f5ccc0
  416abe:	int3   
  416abf:	int3   
  416ac0:	in     eax,dx
  416ac1:	inc    edi
  416ac2:	int3   
  416ac3:	int3   
  416ac4:	in     eax,0x47
  416ac6:	int3   
  416ac7:	int3   
  416ac8:	add    al,0x8b
  416aca:	in     al,dx
  416acb:	mov    ecx,0x1449
  416ad0:	adc    eax,0x2489078b
  416ad5:	add    al,0x56
  416ad7:	inc    ecx
  416ad8:	xor    DWORD PTR [ecx+0x4775ccc0],edi
  416ade:	int3   
  416adf:	int3   
  416ae0:	ins    DWORD PTR es:[edi],dx
  416ae1:	inc    edi
  416ae2:	int3   
  416ae3:	int3   
  416ae4:	gs inc edi
  416ae6:	int3   
  416ae7:	int3   
  416ae8:	add    al,0x8b
  416aea:	in     al,dx
  416aeb:	adc    DWORD PTR [ebp+0x3],0xffffff89
  416aef:	inc    ebp
  416af0:	sub    DWORD PTR [ebx+0x7310478],edx
  416af6:	test   BYTE PTR [eax-0x74ffebcf],cl
  416afc:	hlt    
  416afd:	or     ecx,DWORD PTR [ecx-0x156ccaaf]
  416b03:	or     BYTE PTR [eax+0x69],ah
  416b06:	xchg   DWORD PTR [ebp+0x25],edx
  416b09:	mov    al,BYTE PTR [ebx+0x8]
  416b0c:	mov    dl,0x54
  416b0e:	or     BYTE PTR [ecx+0x45c56474],cl
  416b14:	add    BYTE PTR [eax],al
  416b16:	adc    eax,0x31000015
  416b1b:	imul   eax,DWORD PTR [edi],0x8158748b
  416b21:	shl    DWORD PTR [eax],0x8b
  416b24:	dec    ebx
  416b25:	cld    
  416b26:	stos   BYTE PTR es:[edi],al
  416b27:	mov    edi,0x60843bfb
  416b2c:	jno    0x416b74
  416b2e:	mov    edx,0x6c8bfbcf
  416b33:	fs or  eax,0xbed33db7
  416b39:	cli    
  416b3a:	cmp    eax,0x3c03fa91
  416b3f:	and    cl,BYTE PTR [ecx+0x4b89bd45]
  416b45:	lock es popf 
  416b48:	adc    al,0x41
  416b4a:	mov    al,0x72
  416b4c:	std    
  416b4d:	rdtsc  
  416b4f:	adc    al,0x87
  416b51:	push   ebp
  416b52:	cdq    
  416b53:	mov    DWORD PTR [ebx+0x8],eax
  416b56:	stos   BYTE PTR es:[edi],al
  416b57:	(bad)  
  416b58:	or     eax,DWORD PTR [ebx]
  416b5a:	cmp    DWORD PTR [ecx+0x10baf853],ecx
  416b60:	lsl    esi,sp
  416b63:	add    ecx,DWORD PTR [ecx+0x5389294d]
  416b69:	or     al,0x32
  416b6b:	add    ecx,DWORD PTR [ecx+0x48b694d]
  416b71:	or     cl,BYTE PTR [edx-0x55]
  416b74:	mov    DWORD PTR [ebp+0x29],edx
  416b77:	mov    DWORD PTR [ebx+0x8],eax
  416b7a:	add    BYTE PTR [eax],al
  416b7c:	xor    dl,dl
  416b7e:	add    ecx,DWORD PTR [ecx+0x6be70bec]
  416b84:	ds push ebp
  416b86:	std    
  416b87:	mov    ecx,DWORD PTR [edi+esi*4-0x40]
  416b8b:	int3   
  416b8c:	test   BYTE PTR [ecx+0x301583ec],cl
  416b92:	mov    DWORD PTR [ebp+0x29],eax
  416b95:	mov    eax,DWORD PTR [ebx-0x1c]
  416b98:	stos   BYTE PTR es:[edi],al
  416b99:	(bad)  
  416b9a:	jecxz  0x416b27
  416b9c:	fs jo  0x416ba0
  416b9f:	push   ecx
  416ba0:	inc    ebp
  416ba1:	mov    edx,DWORD PTR [ebx-0x18]
  416ba4:	stos   BYTE PTR es:[edi],al
  416ba5:	into   
  416ba6:	out    0x8b,eax
  416ba8:	test   eax,0x31000093
  416bad:	mov    ecx,DWORD PTR [ebx-0x10]
  416bb0:	mov    dl,0xd6
  416bb2:	out    dx,eax
  416bb3:	add    BYTE PTR [esi],ch
  416bb5:	nop
  416bb6:	stc    
  416bb7:	add    BYTE PTR [ecx],dh
  416bb9:	adc    al,0x89
  416bbb:	push   ebp
  416bbc:	cmp    DWORD PTR [ecx],edx
  416bbe:	push   ebx
  416bbf:	lock mov eax,0x748bdfbe
  416bc5:	je     0x416b48
  416bc7:	js     0x416bea
  416bc9:	adc    al,0xd
  416bcb:	test   BYTE PTR [ebx+edx*1+0x141b0000],dl
  416bd2:	push   0x0
  416bd4:	stos   BYTE PTR es:[edi],al
  416bd5:	(bad)  
  416bd6:	fisttp WORD PTR [ebx+0x51010bfc]
  416bdc:	cmp    eax,0x15fcc2
  416be1:	add    cl,cl
  416be3:	mov    esi,0xcea8003e
  416be8:	sti    
  416be9:	mov    ebp,esp
  416beb:	jae    0x416b6e
  416bed:	cmp    BYTE PTR [ecx],dh
  416bef:	loopne 0x416c07
  416bf1:	mov    esi,esp
  416bf3:	jae    0x416b7e
  416bf5:	push   ebp
  416bf6:	sub    DWORD PTR [ecx],edx
  416bf8:	jns    0x45cacbfa
  416bfe:	push   ecx
  416bff:	mov    BYTE PTR [ebx+0x8],cl
  416c02:	xor    cl,ah
  416c04:	jns    0x182ad3f6
  416c0a:	stos   BYTE PTR es:[edi],al
  416c0b:	mov    esi,0x1c748bdf
  416c10:	add    DWORD PTR [edx+0x41],eax
  416c13:	popf   
  416c14:	inc    ebx
  416c15:	hlt    
  416c16:	stos   BYTE PTR es:[edi],al
  416c17:	loope  0x416bf8
  416c19:	mov    edi,DWORD PTR [esp+ebx*1+0x1]
  416c1d:	adc    DWORD PTR [eax+0x6cc7ebe9],edi
  416c23:	dec    esp
  416c24:	add    BYTE PTR [eax],al
  416c26:	xor    DWORD PTR [ecx+ecx*4],edx
  416c29:	inc    ebp
  416c2a:	adc    DWORD PTR [eax-0x37ceef88],ebx
  416c30:	or     al,0x8b
  416c32:	je     0x416c68
  416c34:	cmp    DWORD PTR [ecx],0xc704c831
  416c3a:	ins    BYTE PTR es:[edi],dx
  416c3b:	dec    esp
  416c3c:	(bad)  
  416c3d:	push   DWORD PTR [ecx]
  416c3f:	adc    al,0x89
  416c41:	push   ebp
  416c42:	mov    ebp,0x3a97
  416c47:	add    BYTE PTR [ebp-0x4b],al
  416c4a:	mov    BYTE PTR [ebp-0x43],al
  416c4d:	lahf   
  416c4e:	or     BYTE PTR [ecx+0x1490],al
  416c54:	mov    cl,0xc8
  416c56:	sbb    ecx,DWORD PTR [ebx+0x2894804]
  416c5c:	dec    esp
  416c5d:	push   ebx
  416c5e:	std    
  416c5f:	dec    DWORD PTR [esi]
  416c61:	in     al,0x88
  416c63:	dec    ebp
  416c64:	test   ebp,esp
  416c66:	out    0xb5,eax
  416c68:	jl     0x416cbd
  416c6a:	std    
  416c6b:	sub    DWORD PTR [ebp+0x1c],0xffffff87
  416c6f:	inc    ebp
  416c70:	lea    edi,[edi]
  416c72:	sbb    al,0x8b
  416c74:	cld    
  416c75:	inc    edi
  416c76:	mov    DWORD PTR [edx],eax
  416c78:	stos   BYTE PTR es:[edi],al
  416c79:	loope  0x416c82
  416c7b:	(bad)  
  416c7c:	std    
  416c7d:	sbb    eax,DWORD PTR [edx]
  416c7f:	push   edx
  416c80:	mov    edx,0x5950fbd9
  416c85:	stos   DWORD PTR es:[edi],eax
  416c86:	sti    
  416c87:	(bad)  
  416c88:	ds xchg edi,eax
  416c8a:	les    ecx,FWORD PTR [eax]
  416c8c:	test   al,0xd9
  416c8e:	fisttp DWORD PTR [ebx+0x5589407c]
  416c94:	add    eax,0x748b0f9d
  416c99:	dec    eax
  416c9a:	add    eax,0xf4439d2d
  416ca0:	mov    edx,0xf083ebe0
  416ca5:	pop    ss
  416ca6:	xchg   DWORD PTR [ebp+0xd],ecx
  416ca9:	aas    
  416caa:	xchg   ebp,eax
  416cab:	mov    eax,DWORD PTR [eax]
  416cad:	add    BYTE PTR [esp+esi*1-0x7f],bl
  416cb1:	ret    0x9d45
  416cb4:	push   ebx
  416cb5:	loopne 0x416c8f
  416cb7:	and    ebp,edi
  416cb9:	(bad)  
  416cba:	ficomp WORD PTR [esi+0x5ff25de3]
  416cc0:	int3   
  416cc1:	int3   
  416cc2:	fs lahf 
  416cc4:	in     al,dx
  416cc5:	adc    ebp,0x1b
  416cc8:	push   0xffd433f0
  416ccd:	(bad)  
  416cce:	sbb    al,0x54
  416cd0:	push   ebx
  416cd1:	inc    ecx
  416cd2:	xor    DWORD PTR [ebp+0x5019f843],ebx
  416cd8:	add    al,BYTE PTR [eax+0x31]
  416cdb:	lahf   
  416cdc:	inc    ebx
  416cdd:	clc    
  416cde:	add    DWORD PTR [esi+edi*1],edi
  416ce1:	std    
  416ce2:	mov    ss,WORD PTR [edx-0x7f]
  416ce5:	les    edi,FWORD PTR [ecx]
  416ce7:	popf   
  416ce8:	inc    ebx
  416ce9:	cld    
  416cea:	stos   BYTE PTR es:[edi],al
  416ceb:	loopne 0x416cfc
  416ced:	push   ecx
  416cee:	stos   BYTE PTR es:[edi],al
  416cef:	call   0xd8fbbeff
  416cf4:	pop    es
  416cf5:	push   eax
  416cf6:	callw  0xf8f5
  416cfa:	push   esp
  416cfb:	lock ror ah,0x65
  416cff:	pop    edi
  416d00:	int3   
  416d01:	int3   
  416d02:	in     al,0x9e
  416d04:	in     al,dx
  416d05:	mov    eax,ds:0x3eea25
  416d0a:	ja     0x416d1f
  416d0c:	push   0x56281c8b
  416d11:	inc    ecx
  416d12:	add    BYTE PTR [eax],al
  416d14:	xor    DWORD PTR [ebx+0x55e30150],ebx
  416d1a:	mov    BYTE PTR [eax+0x34],dl
  416d1d:	out    dx,eax
  416d1e:	ror    ah,0xe5
  416d21:	pusha  
  416d22:	int3   
  416d23:	int3   
  416d24:	fs popf 
  416d26:	in     al,dx
  416d27:	adc    DWORD PTR ds:0x67109f21,0xffffffd3
  416d2e:	dec    DWORD PTR [edx+0x3ec705e3]
  416d34:	mov    edx,0x38b2fd4
  416d39:	sahf   
  416d3a:	sar    BYTE PTR [esi],cl
  416d3c:	stos   BYTE PTR es:[edi],al
  416d3d:	fmul   QWORD PTR [ebx]
  416d3f:	mov    eax,DWORD PTR [ebx]
  416d41:	pushf  
  416d42:	dec    ebx
  416d43:	hlt    
  416d44:	mov    edx,0x798bf3d7
  416d49:	and    BYTE PTR [edi+0x539db94d],al
  416d4f:	clc    
  416d50:	test   al,0xe7
  416d52:	sti    
  416d53:	mov    eax,0x1430
  416d58:	lods   al,BYTE PTR ds:[esi]
  416d59:	push   esp
  416d5a:	je     0x416da0
  416d5c:	mov    dl,0xcf
  416d5e:	test   DWORD PTR [eax],0xc031181c
  416d64:	call   0x4f9d:0x894d8910
  416d6b:	sbb    BYTE PTR [edx],bh
  416d6d:	out    0x7,eax
  416d6f:	jne    0x416d89
  416d71:	popf   
  416d72:	inc    ebx
  416d73:	clc    
  416d74:	mov    edx,0x890bdf
  416d79:	add    cl,bh
  416d7b:	das    
  416d7c:	mov    DWORD PTR [ebp+0x59],edx
  416d7f:	popf   
  416d80:	inc    ebx
  416d81:	adc    BYTE PTR [eax+0x30b817d6],ch
  416d87:	adc    al,0x0
  416d89:	add    BYTE PTR [edx+0x2c],bl
  416d8c:	mov    DWORD PTR [ebp+0x39],ecx
  416d8f:	popf   
  416d90:	jns    0x45cab972
  416d96:	sub    DWORD PTR ds:0x189cfc43,ecx
  416d9c:	xor    eax,eax
  416d9e:	or     bl,BYTE PTR [eax]
  416da0:	jmp    0x8995d058
  416da5:	in     eax,0x6c
  416da7:	push   ebp
  416da8:	int3   
  416da9:	int3   
  416daa:	cmc    
  416dab:	pop    edi
  416dac:	int3   
  416dad:	int3   
  416dae:	in     eax,dx
  416daf:	pop    edi
  416db0:	int3   
  416db1:	int3   
  416db2:	in     eax,0x5f
  416db4:	int3   
  416db5:	int3   
  416db6:	test   BYTE PTR [ebp+0x2bd583ec],bl
  416dbc:	lds    eax,FWORD PTR [ebp-0x27]
  416dbf:	adc    esi,DWORD PTR [eax]
  416dc1:	add    BYTE PTR [ecx],dh
  416dc3:	mov    esp,0x14710303
  416dc8:	lahf   
  416dc9:	cld    
  416dca:	pop    esp
  416dcb:	sar    edi,cl
  416dcd:	dec    edi
  416dce:	leave  
  416dcf:	in     al,0xfb
  416dd1:	push   DWORD PTR [esi-0x47f73b6c]
  416dd7:	(bad)  
  416dd8:	repz push 0xfffffff1
  416ddb:	pushf  
  416ddc:	dec    ebx
  416ddd:	clc    
  416dde:	add    BYTE PTR [eax],al
  416de0:	add    BYTE PTR [ebp-0x2d0323ed],bl
  416de6:	dec    DWORD PTR [edx+0x6a4fe3f3]
  416dec:	xor    DWORD PTR [ecx+0x53],edx
  416def:	hlt    
  416df0:	shl    BYTE PTR [edi+0x53],cl
  416df3:	inc    ecx
  416df4:	xor    DWORD PTR [ebp-0x2cfb2bc5],edx
  416dfa:	(bad)  
  416dfb:	(bad)  
  416dfc:	fcomp  QWORD PTR [eax]
  416dfe:	mov    eax,0x143102
  416e03:	jmp    0x416dd0
  416e05:	pushf  
  416e06:	or     eax,DWORD PTR [eax]
  416e08:	xor    edx,esp
  416e0a:	dec    DWORD PTR [eax+0x6843f4]
  416e10:	in     al,0x12
  416e12:	add    BYTE PTR [eax+0x31],ch
  416e15:	push   ss
  416e16:	inc    eax
  416e17:	add    BYTE PTR [edx+0x7055d429],bh
  416e1d:	adc    al,0x7f
  416e1f:	ret    0x1231
  416e22:	add    BYTE PTR [eax],al
  416e24:	cmp    DWORD PTR [esi+ebx*4],0xfffffffe
  416e28:	push   cs
  416e29:	push   eax
  416e2a:	add    esp,0x2008c35
  416e30:	jno    0x416e46
  416e32:	sub    eax,DWORD PTR [eax]
  416e34:	xor    edx,DWORD PTR [eax+eax*1]
  416e37:	mov    edi,DWORD PTR [eax+ebp*2]
  416e3a:	push   ebx
  416e3b:	inc    ecx
  416e3c:	xor    ebx,edi
  416e3e:	(bad)  
  416e3f:	mov    DWORD PTR [eax+ebx*1],ebp
  416e42:	push   esi
  416e43:	inc    ecx
  416e44:	add    BYTE PTR [eax],al
  416e46:	xor    DWORD PTR [ebx-0x2a98fbed],ebx
  416e4c:	call   DWORD PTR [ecx-0x70]
  416e4f:	push   0xe4314153
  416e54:	mov    BYTE PTR [ebp-0x3f],cl
  416e57:	in     eax,0xe7
  416e59:	popf   
  416e5a:	lods   eax,DWORD PTR ds:[esi]
  416e5b:	dec    edi
  416e5c:	std    
  416e5d:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416e61:	adc    eax,0x3ee985
  416e66:	xor    ch,cl
  416e68:	pop    es
  416e69:	mov    esp,esp
  416e6b:	cmp    ecx,DWORD PTR [ecx-0x1db066ab]
  416e71:	mov    edx,DWORD PTR [ecx+esi*8+0x6065ccc0]
  416e78:	int3   
  416e79:	int3   
  416e7a:	add    al,0x9b
  416e7c:	in     al,dx
  416e7d:	mov    ebp,esp
  416e7f:	sbb    edi,DWORD PTR [ecx]
  416e81:	inc    ebp
  416e82:	sub    eax,0xec8b04c3
  416e87:	sbb    ebp,ecx
  416e89:	add    eax,0x4589135a
  416e8e:	xor    eax,0x6dccc0f1
  416e93:	pusha  
  416e94:	int3   
  416e95:	int3   
  416e96:	gs pusha 
  416e98:	int3   
  416e99:	int3   
  416e9a:	test   BYTE PTR [ebx+0x1583ec],bl
  416ea0:	lds    eax,FWORD PTR [ebp+0x1d]
  416ea3:	adc    al,0x70
  416ea5:	add    DWORD PTR [ecx],esi
  416ea7:	fwait
  416ea8:	inc    ebx
  416ea9:	or     BYTE PTR [eax],al
  416eab:	add    BYTE PTR [eax+0x748bd7d8],bh
  416eb1:	ins    BYTE PTR es:[edi],dx
  416eb2:	mov    DWORD PTR [ebp+0x29],edx
  416eb5:	adc    ecx,DWORD PTR [edi+0x3c]
  416eb8:	test   al,0xe8
  416eba:	fisttp WORD PTR [ebx-0x48f2cb8c]
  416ec0:	jns    0x416eea
  416ec2:	mov    DWORD PTR [ebp-0x2f],edx
  416ec5:	mov    al,ds:0x9d390a44
  416eca:	inc    ebx
  416ecb:	call   0x40429729
  416ed0:	xor    DWORD PTR [ebx-0x2a9b03f5],ebx
  416ed6:	call   DWORD PTR [eax-0x37]
  416ed9:	fdivp  st(0),st
  416edb:	jmp    FWORD PTR [esi-0x47f73b6e]
  416ee1:	fsubr  st,st(7)
  416ee3:	push   0xfffffff1
  416ee5:	mov    ebx,0x14312fff
  416eea:	push   0x150100
  416eef:	push   0x31
  416ef1:	dec    edi
  416ef2:	push   ebx
  416ef3:	lock test al,0xd8
  416ef6:	jecxz  0x416e83
  416ef8:	fdiv   QWORD PTR [ebx]
  416efa:	mov    DWORD PTR [edx+0x5],eax
  416efd:	in     al,0x88
  416eff:	dec    ebp
  416f00:	cmp    ebp,esp
  416f02:	mov    BYTE PTR [ebp+0x55],dl
  416f05:	loope  0x416eee
  416f07:	rcl    DWORD PTR [esi+ecx*2-0x3],0x83
  416f0c:	jne    0x416f2d
  416f0e:	lds    eax,FWORD PTR [ebp+0x0]
  416f11:	add    BYTE PTR ds:0x31000013,bh
  416f17:	cmp    eax,DWORD PTR [edi]
  416f19:	mov    ebp,esp
  416f1b:	inc    edi
  416f1c:	add    eax,0xf4439b30
  416f22:	mov    edx,0xe60fdfdf
  416f27:	jecxz  0x416f2e
  416f29:	cmp    DWORD PTR [eax+ecx*2+0x71],edi
  416f2d:	pop    ecx
  416f2e:	mov    edx,0x8983e7d7
  416f33:	sub    BYTE PTR [eax],al
  416f35:	je     0x416fab
  416f37:	cdq    
  416f38:	dec    ebx
  416f39:	call   0x513af0
  416f3e:	adc    BYTE PTR gs:[ecx+0x4299d955],cl
  416f45:	adc    BYTE PTR [edx-0x7f742021],ch
  416f4b:	adc    BYTE PTR [ebx-0x76b2debc],cl
  416f51:	dec    ebp
  416f52:	rol    DWORD PTR [ecx],1
  416f54:	shl    bh,cl
  416f56:	inc    eax
  416f57:	adc    BYTE PTR [ecx-0x52e22eab],cl
  416f5d:	inc    edx
  416f5e:	ins    DWORD PTR es:[edi],dx
  416f5f:	in     al,0x88
  416f61:	inc    ebp
  416f62:	cdq    
  416f63:	cdq    
  416f64:	dec    ebx
  416f65:	or     BYTE PTR [edx],dh
  416f67:	fcom   QWORD PTR [ebx]
  416f69:	push   ecx
  416f6a:	stos   BYTE PTR es:[edi],al
  416f6b:	out    0xe7,eax
  416f6d:	mov    esi,esp
  416f6f:	aaa    
  416f70:	add    DWORD PTR [edx+0x35],eax
  416f73:	in     al,0xe7
  416f75:	push   ebp
  416f76:	add    BYTE PTR [eax],al
  416f78:	jl     0x416fc7
  416f7a:	std    
  416f7b:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416f7f:	dec    ebp
  416f80:	pop    ecx
  416f81:	xchg   ecx,eax
  416f82:	mov    edi,0xe7dfb828
  416f87:	jmp    0x416f4c
  416f89:	cdq    
  416f8a:	push   ebx
  416f8b:	in     al,0x3
  416f8d:	cmp    al,0xe
  416f8f:	cld    
  416f90:	dec    esi
  416f91:	dec    ebp
  416f92:	add    esp,0x323bc2d
  416f98:	icebp  
  416f99:	adc    ebx,DWORD PTR [edi-0x2d2304]
  416f9f:	dec    edi
  416fa0:	sbb    DWORD PTR [ecx-0x6ed90006],ebx
  416fa6:	les    ecx,FWORD PTR [eax]
  416fa8:	test   al,0xd6
  416faa:	fild   DWORD PTR [ebx+0x41534c54]
  416fb0:	xor    DWORD PTR [ebx+esi*2],edx
  416fb3:	or     bh,BYTE PTR [edx+0x7055f01e]
  416fb9:	adc    al,0x4f
  416fbb:	call   FWORD PTR [eax+esi*2-0x7f]
  416fbf:	cmp    eax,0x3ee6e9
  416fc4:	xor    edi,eax
  416fc6:	sbb    ebp,DWORD PTR [edx+0x71]
  416fc9:	mov    esp,0x14312fff
  416fce:	mov    DWORD PTR [ebp-0x33],edx
  416fd1:	loope  0x416f5b
  416fd3:	inc    ebp
  416fd4:	rcr    DWORD PTR [eax+0x4d603448],1
  416fda:	push   ebx
  416fdb:	lock add BYTE PTR [eax],al
  416fde:	xchg   edx,eax
  416fdf:	addr16 push ebx
  416fe1:	inc    ecx
  416fe2:	xor    DWORD PTR [ecx],edi
  416fe4:	adc    ebp,DWORD PTR [edx-0xf]
  416fe7:	mov    ebx,0x14312fff
  416fec:	mov    DWORD PTR [ebp-0x6b],edx
  416fef:	loope  0x41705a
  416ff1:	add    BYTE PTR [esi+0x5da3efe6],cl
  416ff7:	out    0x3e,al
  416ff9:	add    BYTE PTR [edx-0xfaa2bf2],dh
  416fff:	adc    eax,DWORD PTR [eax]
  417001:	jne    0x417047
  417003:	mov    edx,0x431683f
  417008:	add    BYTE PTR [eax],al
  41700a:	stos   BYTE PTR es:[edi],al
  41700b:	(bad)  
  41700c:	sti    
  41700d:	push   eax
  41700e:	retf   
  41700f:	adc    edi,ebp
  417011:	push   ebp
  417012:	inc    ecx
  417013:	jo     0x416fe9
  417015:	push   ebp
  417016:	lock adc ecx,DWORD PTR [ecx+0x4b9a554d]
  41701d:	fsubr  DWORD PTR [edx+0x748bd7e6]
  417023:	ins    BYTE PTR es:[edi],dx
  417024:	add    DWORD PTR [edx+0x65],eax
  417027:	popf   
  417028:	inc    ebx
  417029:	loopne 0x416fd5
  41702b:	(bad)  
  41702d:	mov    eax,DWORD PTR [eax+0x748b51e4]
  417033:	xor    BYTE PTR [eax-0x75],dl
  417036:	xor    al,0x60
  417038:	push   ebx
  417039:	inc    ecx
  41703a:	xor    ebp,esp
  41703c:	out    0x91,eax
  41703e:	cmc    
  41703f:	dec    ebx
  417040:	std    
  417041:	add    DWORD PTR [eax],0x0
  417044:	cmc    
  417045:	sbb    BYTE PTR [ecx-0x45682eab],cl
  41704b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704c:	xor    DWORD PTR [eax+eax*1],edx
  41704f:	add    BYTE PTR [ebp+0xd],bl
  417052:	mov    DWORD PTR [ebp-0x2f],eax
  417055:	lahf   
  417056:	dec    ebx
  417057:	fdiv   DWORD PTR [edx]
  417059:	pushf  
  41705a:	mov    al,ds:0x87143100
  41705f:	dec    ebp
  417060:	lds    ebx,FWORD PTR [edi+0x60d0e053]
  417066:	push   ebx
  417067:	inc    ecx
  417068:	xor    edi,edi
  41706a:	inc    ecx
  41706b:	xor    al,0xd2
  41706d:	adc    BYTE PTR [esi+0x41],dl
  417070:	xor    DWORD PTR [edi-0x2b18fbf5],ebx
  417076:	call   DWORD PTR [eax-0x46]
  417079:	and    esp,edx
  41707b:	push   ebp
  41707c:	lock adc edx,DWORD PTR [edx-0x75]
  417080:	in     al,dx
  417081:	aaa    
  417082:	push   eax
  417083:	call   0x3ebe75
  417088:	mov    dl,0x50
  41708a:	or     al,0x8b
  41708c:	in     al,dx
  41708d:	xor    ecx,DWORD PTR [ecx+0x3ee17d15]
  417093:	add    BYTE PTR [edx],dh
  417095:	in     eax,0x27
  417097:	mov    DWORD PTR [eax+eiz*1],ebx
  41709a:	push   esi
  41709b:	inc    ecx
  41709c:	xor    DWORD PTR [edi-0x2b2307c5],edx
  4170a2:	(bad)  
  4170a3:	jmp    DWORD PTR [eax+edi*8+0xd49e]
  4170aa:	jl     0x417081
  4170ac:	dec    DWORD PTR [edi-0x56]
  4170af:	sbb    BYTE PTR [esi+edx*2],dl
  4170b2:	jo     0x4170c8
  4170b4:	dec    edi
  4170b5:	mov    esp,DWORD PTR [esp+eax*2]
  4170b8:	push   ebx
  4170b9:	inc    ecx
  4170ba:	xor    esi,esp
  4170bc:	out    0x75,eax
  4170be:	std    
  4170bf:	dec    edx
  4170c0:	std    
  4170c1:	sub    ebp,0x17
  4170c4:	lahf   
  4170c5:	aam    0x84
  4170c7:	aad    0xff
  4170c9:	dec    edi
  4170ca:	(bad)  
  4170cc:	idiv   bh
  4170ce:	ficom  WORD PTR [esi-0x4c35fb3c]
  4170d4:	addr16 xor al,0x32
  4170d7:	aam    0xff
  4170d9:	mov    dh,BYTE PTR [eax+ecx*2]
  4170dc:	push   ebx
  4170dd:	inc    ecx
  4170de:	xor    ebp,esp
  4170e0:	out    0x51,eax
  4170e2:	mov    eax,0x7583fd4a
  4170e7:	sbb    eax,DWORD PTR [edi+0x139e7d45]
  4170ed:	aam    0x4
  4170ef:	aad    0xff
  4170f1:	push   ecx
  4170f2:	stos   BYTE PTR es:[edi],al
  4170f3:	rcr    bh,1
  4170f5:	mov    edi,DWORD PTR [eax+eiz*2]
  4170f8:	push   ebx
  4170f9:	inc    ecx
  4170fa:	xor    DWORD PTR [edi],edx
  4170fc:	dec    eax
  4170fd:	sub    al,ah
  4170ff:	sahf   
  417100:	adc    esi,eax
  417102:	(bad)  
  417104:	call   DWORD PTR [ecx+0x59]
  417107:	(bad)  
  417108:	sti    
  417109:	jmp    DWORD PTR [esi-0x6a]
  41710c:	les    ecx,FWORD PTR [eax+eax*1]
  41710f:	add    BYTE PTR [eax+0x31415343],dl
  417115:	adc    DWORD PTR [eax+0x53],edx
  417118:	xor    BYTE PTR [ecx+eiz*4],dl
  41711b:	sbb    al,0xdf
  41711d:	aam    0xff
  41711f:	mov    esp,gs
  417121:	dec    ebx
  417122:	dec    edi
  417123:	push   0xfffffff1
  417125:	mov    ebp,0x28448b05
  41712a:	push   esi
  41712b:	inc    ecx
  41712c:	xor    esi,esp
  41712e:	cld    
  41712f:	push   ebp
  417130:	add    eax,0x16fbe23d
  417135:	dec    edx
  417136:	mov    eax,0x143101
  41713b:	mov    ecx,DWORD PTR [eax+ebp*8]
  41713e:	rol    DWORD PTR [ecx+esi*1],0x58
  417142:	int3   
  417143:	int3   
  417144:	in     eax,0x58
  417146:	int3   
  417147:	int3   
  417148:	test   BYTE PTR [ebp+0x1c6c8bec],bl
  41714e:	mov    DWORD PTR [eax-0x23],eax
  417151:	out    0xc0,eax
  417153:	int3   
  417154:	in     eax,0x58
  417156:	int3   
  417157:	int3   
  417158:	fs popf 
  41715a:	in     al,dx
  41715b:	push   ebx
  41715c:	pop    edi
  41715d:	loope  0x4170e7
  41715f:	cmp    eax,0x3edfd1
  417164:	stos   BYTE PTR es:[edi],al
  417165:	daa    
  417166:	in     al,dx
  417167:	push   ebp
  417168:	lock adc ecx,DWORD PTR [ecx+0x3edf8935]
  41716f:	add    dh,bh
  417171:	jmp    0x41cece
  417176:	jb     0x4171d0
  417178:	int3   
  417179:	int3   
  41717a:	in     al,0x9c
  41717c:	in     al,dx
  41717d:	push   ecx
  41717e:	sbb    eax,edx
  417180:	add    BYTE PTR [eax+0x31],al
  417183:	jae    0x417181
  417185:	push   ebp
  417186:	lock adc edx,DWORD PTR [eax-0x18]
  41718a:	popf   
  41718b:	dec    esp
  41718c:	std    
  41718d:	push   DWORD PTR [edx-0xb76f7b0]
  417193:	inc    edi
  417194:	mov    DWORD PTR [ebp+0x29],ecx
  417197:	jecxz  0x417202
  417199:	add    BYTE PTR [edx-0xfa9e7e1],bh
  41719f:	adc    edx,DWORD PTR [edx-0x1]
  4171a2:	in     al,0x47
  4171a4:	mov    ebp,esp
  4171a6:	aam    0x54
  4171a8:	int3   
  4171a9:	int3   
  4171aa:	test   BYTE PTR [ebp-0xfea7c14],bl
  4171b0:	les    eax,FWORD PTR [ebp+0x19]
  4171b3:	adc    al,0x0
  4171b5:	add    BYTE PTR [ecx],dh
  4171b7:	push   ecx
  4171b8:	inc    ebx
  4171b9:	fmul   QWORD PTR [ecx-0x11ffffec]
  4171bf:	into   
  4171c0:	repz add DWORD PTR [ecx],esi
  4171c3:	adc    al,0x0
  4171c5:	(bad)  
  4171c6:	ins    BYTE PTR es:[edi],dx
  4171c7:	dec    eax
  4171c8:	add    BYTE PTR [eax],al
  4171ca:	xor    DWORD PTR [eax*8+0x13cd45],edx
  4171d1:	add    BYTE PTR [ecx],dh
  4171d3:	popf   
  4171d4:	dec    ebx
  4171d5:	or     BYTE PTR [eax+0x55f016],ch
  4171db:	add    BYTE PTR [eax+0x14],dh
  4171de:	call   0xfd8a308c
  4171e3:	mov    eax,ds:0x3edec1
  4171e8:	or     al,0x49
  4171ea:	std    
  4171eb:	add    BYTE PTR [ecx],dh
  4171ed:	ror    BYTE PTR [ebx],0xc7
  4171f0:	sub    al,0x4c
  4171f2:	push   ebx
  4171f3:	inc    ecx
  4171f4:	xor    DWORD PTR [eax+eax*1],edx
  4171f7:	add    BYTE PTR [ecx],dh
  4171f9:	cmp    eax,0x4c34c70a
  4171fe:	push   ebx
  4171ff:	inc    ecx
  417200:	xor    DWORD PTR [ebx],edx
  417202:	add    BYTE PTR [eax],al
  417204:	xor    DWORD PTR [ebp-0x2d230fc5],edx
  41720a:	(bad)  
  41720b:	jmp    esp
  41720d:	sbb    eax,0xde6905c5
  417212:	add    BYTE PTR ds:[ecx],dh
  417215:	adc    al,0x0
  417217:	add    BYTE PTR [edx-0xfaa07fa],dh
  41721d:	adc    eax,DWORD PTR [eax]
  41721f:	jne    0x417255
  417221:	mov    esi,0x5424feff
  417226:	push   ebx
  417227:	inc    ecx
  417228:	xor    DWORD PTR [ebp-0x10],esi
  41722b:	push   ebp
  41722c:	jo     0x417242
  41722e:	mov    DWORD PTR ds:0x3ee221,ecx
  417234:	test   al,0xd9
  417236:	out    0x8b,eax
  417238:	cmp    al,0x44
  41723a:	push   ebx
  41723b:	inc    ecx
  41723c:	xor    DWORD PTR [ebx+0xe843],ebx
  417242:	xor    dl,dl
  417244:	cmp    ecx,DWORD PTR [ecx+0x4d893c74]
  41724a:	or     DWORD PTR [esi-0x2a7b23f5],ebx
  417250:	jmp    DWORD PTR [edi-0x7f]
  417253:	adc    eax,DWORD PTR [eax+0x0]
  417256:	fisub  WORD PTR [ecx]
  417258:	rcl    BYTE PTR [ebp+0x70],0x14
  41725c:	mov    eax,ds:0xffd564fc
  417261:	(bad)  
  417262:	sub    al,0x18
  417264:	push   esi
  417265:	inc    ecx
  417266:	xor    ecx,eax
  417268:	add    BYTE PTR [eax+0x31],al
  41726b:	mov    esp,0x13f1035f
  417270:	mov    DWORD PTR ds:0x3ee1a5,edx
  417276:	add    edi,DWORD PTR [edx+eax*8]
  417279:	not    DWORD PTR [esi+0x39c48147]
  41727f:	jae    0x417289
  417281:	push   esi
  417282:	lock adc edi,ebp
  417285:	adc    eax,0x3ede29
  41728a:	shr    BYTE PTR [esi+edx*2],cl
  41728d:	inc    ecx
  41728e:	xor    DWORD PTR [ebp+0xc],esi
  417291:	push   esi
  417292:	lock adc edx,DWORD PTR [eax-0x18]
  417296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417297:	inc    esi
  417298:	std    
  417299:	push   DWORD PTR [edx-0xb76fbb0]
  41729f:	inc    ebx
  4172a0:	mov    DWORD PTR [ebp+0x41],ecx
  4172a3:	in     eax,0xe7
  4172a5:	aad    0x0
  4172a7:	add    BYTE PTR [edi],bh
  4172a9:	inc    edi
  4172aa:	std    
  4172ab:	sub    DWORD PTR [ebp+0x10],0xffffffa1
  4172af:	hlt    
  4172b0:	test   ch,dl
  4172b2:	dec    DWORD PTR [edx+0x6a52447c]
  4172b8:	xor    DWORD PTR [ebp-0xc],esi
  4172bb:	push   ebp
  4172bc:	jo     0x4172d2
  4172be:	push   eax
  4172bf:	call   0x3eb171
  4172c4:	mov    dl,0x4f
  4172c6:	or     al,0x8b
  4172c8:	ins    BYTE PTR es:[edi],dx
  4172c9:	inc    esp
  4172ca:	xchg   DWORD PTR [ebp+0x11],ecx
  4172cd:	fwait
  4172ce:	push   ebx
  4172cf:	cld    
  4172d0:	sub    ah,cl
  4172d2:	out    dx,eax
  4172d3:	jae    0x417260
  4172d5:	fwait
  4172d6:	inc    ebx
  4172d7:	loopne 0x41725a
  4172d9:	fwait
  4172da:	dec    ebx
  4172db:	fadd   QWORD PTR [eax-0x310451c4]
  4172e1:	inc    esi
  4172e2:	add    esp,0x56007339
  4172e8:	jo     0x4172fe
  4172ea:	mov    DWORD PTR ds:0x3ede31,edx
  4172f0:	add    esi,DWORD PTR [ebp+0xc]
  4172f3:	push   esi
  4172f4:	lock adc eax,DWORD PTR [ecx]
  4172f7:	inc    ebp
  4172f8:	xchg   ebp,eax
  4172f9:	jecxz  0x417283
  4172fb:	or     eax,0x3ee09d
  417300:	xor    bl,cl
  417302:	sti    
  417303:	push   ecx
  417304:	cdq    
  417305:	pop    esi
  417306:	idiv   edi
  417308:	jle    0x41729c
  41730a:	les    ecx,FWORD PTR [eax+eax*1]
  41730d:	add    BYTE PTR [edx+0x403f3e0],ch
  417313:	push   0x9c4d5501
  417318:	push   ebx
  417319:	in     al,0xaa
  41731b:	sar    bl,1
  41731d:	add    ebp,esp
  41731f:	xchg   DWORD PTR [di+0x4d],eax
  417323:	call   0x5600:0x191ae04b
  41732a:	lock adc eax,DWORD PTR [edi-0x61c5aeb3]
  417331:	(bad)  
  417332:	je     0x417380
  417334:	add    BYTE PTR [eax],al
  417336:	xor    DWORD PTR [ecx+ebp*8],edx
  417339:	or     DWORD PTR [edx-0xc7c0821],ebp
  41733f:	adc    BYTE PTR [edi+0x439a0955],al
  417345:	clc    
  417346:	dec    edx
  417347:	iret   
  417348:	out    dx,eax
  417349:	jae    0x417384
  41734b:	cdq    
  41734c:	or     esi,esp
  41734e:	pop    esp
  41734f:	sar    edi,cl
  417351:	add    bh,BYTE PTR [esp+ecx*2-0x77]
  417355:	adc    DWORD PTR [edx],esi
  417357:	fcomip st,st(7)
  417359:	mov    eax,ds:0x3edfe5
  41735e:	xor    cl,bh
  417360:	test   DWORD PTR [ecx-0x7b466df],0x3e753b0
  41736a:	xor    DWORD PTR [ecx+ecx*4],edx
  41736d:	adc    eax,0x3edfbd
  417372:	add    BYTE PTR [eax],al
  417374:	xor    bl,bh
  417376:	div    DWORD PTR [ebx]
  417378:	cmp    esi,DWORD PTR [ebx-0xc]
  41737b:	push   ebp
  41737c:	lock adc eax,DWORD PTR [ecx]
  41737f:	inc    ebp
  417380:	cdq    
  417381:	fwait
  417382:	or     bl,ch
  417384:	(bad)  
  417385:	fwait
  417386:	sub    esp,esp
  417388:	(bad)  
  41738a:	dec    DWORD PTR [eax+0x4153343c]
  417390:	xor    DWORD PTR [ecx],eax
  417392:	(bad)  
  417393:	mov    DWORD PTR [esp+ebp*2],esp
  417396:	push   ebx
  417397:	inc    ecx
  417398:	xor    DWORD PTR [ecx],eax
  41739a:	(bad)  
  41739b:	mov    DWORD PTR [eax+edi*1],edi
  41739e:	push   ebx
  41739f:	inc    ecx
  4173a0:	xor    DWORD PTR [esi+ecx*2],edi
  4173a3:	test   DWORD PTR [esi+0x45],0xded60d8b
  4173aa:	add    BYTE PTR ds:[eax+0x31b9f7d7],ch
  4173b1:	adc    al,BYTE PTR [eax+0x0]
  4173b4:	mov    al,0x3a
  4173b6:	add    BYTE PTR [edx],al
  4173b8:	xor    DWORD PTR [ecx+ecx*4],edx
  4173bb:	push   ebp
  4173bc:	sbb    ecx,edi
  4173be:	into   
  4173bf:	mov    DWORD PTR [esp+edi*1],edi
  4173c2:	push   ebx
  4173c3:	inc    ecx
  4173c4:	xor    DWORD PTR [ebx-0x18],esi
  4173c7:	push   ebp
  4173c8:	jo     0x4173de
  4173ca:	push   eax
  4173cb:	call   0x3ebe05
  4173d0:	mov    dl,0x4f
  4173d2:	add    al,0x8b
  4173d4:	cmp    al,0x40
  4173d6:	push   ebx
  4173d7:	inc    ecx
  4173d8:	add    BYTE PTR [eax],al
  4173da:	xor    ebx,esp
  4173dc:	out    0xd5,eax
  4173de:	fild   DWORD PTR [ebp+edi*8-0x7b]
  4173e2:	icebp  
  4173e3:	mov    esi,0x38f13303
  4173e8:	sub    cl,BYTE PTR [ebx+0x4153300c]
  4173ee:	xor    DWORD PTR [ecx+0x6b204c4],edx
  4173f4:	clc    
  4173f5:	push   ebp
  4173f6:	lock adc eax,DWORD PTR [eax]
  4173f9:	je     0x417433
  4173fb:	jae    0x4173d1
  4173fd:	push   ebp
  4173fe:	lock adc eax,DWORD PTR [edi-0x17efb2bc]
  417405:	pop    ebp
  417406:	mov    WORD PTR [ebp+edi*8-0x75],es
  41740a:	sbb    al,0x20
  41740c:	push   esi
  41740d:	inc    ecx
  41740e:	xor    edx,esp
  417410:	shl    BYTE PTR [ebx],0x71
  417413:	cwde   
  417414:	jecxz  0x417473
  417416:	jb     0x41746f
  417418:	int3   
  417419:	int3   
  41741a:	xor    DWORD PTR [eax+eax*1],edx
  41741d:	add    BYTE PTR [ecx],dh
  41741f:	adc    al,0x0
  417421:	add    BYTE PTR [ecx],dh
  417423:	adc    al,0x0
  417425:	add    BYTE PTR [ecx],dh
  417427:	adc    al,0x0
  417429:	add    BYTE PTR [ecx],dh
  41742b:	adc    al,0x0
  41742d:	add    BYTE PTR [ecx],dh
  41742f:	adc    al,0x0
  417431:	add    BYTE PTR [ecx],dh
  417433:	adc    al,0x0
  417435:	add    BYTE PTR [ecx],dh
  417437:	adc    al,0x0
  417439:	add    BYTE PTR [ecx],dh
  41743b:	adc    al,0x0
  41743d:	add    BYTE PTR [eax],al
  41743f:	add    BYTE PTR [ecx],dh
  417441:	adc    al,0x0
  417443:	add    BYTE PTR [ecx],dh
  417445:	adc    al,0x0
  417447:	add    BYTE PTR [ecx],dh
  417449:	adc    al,0x0
  41744b:	add    BYTE PTR [ecx],dh
  41744d:	adc    al,0x0
  41744f:	add    BYTE PTR [ecx],dh
  417451:	adc    al,0x0
  417453:	add    BYTE PTR [ecx],dh
  417455:	adc    al,0x0
  417457:	add    BYTE PTR [ecx],dh
  417459:	adc    al,0x0
  41745b:	add    BYTE PTR [ecx],dh
  41745d:	adc    al,0x0
  41745f:	add    BYTE PTR [ecx],dh
  417461:	adc    al,0x0
  417463:	add    BYTE PTR [ecx],dh
  417465:	adc    al,0x0
  417467:	add    BYTE PTR [ecx],dh
  417469:	adc    al,0x0
  41746b:	add    BYTE PTR [ecx],dh
  41746d:	adc    al,0x0
  41746f:	add    BYTE PTR [ecx],dh
  417471:	adc    al,0x0
  417473:	add    BYTE PTR [ecx],dh
  417475:	adc    al,0x0
  417477:	add    BYTE PTR [ecx],dh
  417479:	adc    al,0x0
  41747b:	add    BYTE PTR [ecx],dh
  41747d:	adc    al,0x0
  41747f:	add    BYTE PTR [ecx],dh
  417481:	adc    al,0x0
  417483:	add    BYTE PTR [ecx],dh
  417485:	adc    al,0x0
  417487:	add    BYTE PTR [ecx],dh
  417489:	adc    al,0x0
  41748b:	add    BYTE PTR [ecx],dh
  41748d:	adc    al,0x0
  41748f:	add    BYTE PTR [ecx],dh
  417491:	adc    al,0x0
  417493:	add    BYTE PTR [ecx],dh
  417495:	adc    al,0x0
  417497:	add    BYTE PTR [ecx],dh
  417499:	adc    al,0x0
  41749b:	add    BYTE PTR [ecx],dh
  41749d:	adc    al,0x0
  41749f:	add    BYTE PTR [ecx],dh
  4174a1:	adc    al,0x0
  4174a3:	add    BYTE PTR [eax],al
  4174a5:	add    BYTE PTR [ecx],dh
  4174a7:	adc    al,0x0
  4174a9:	add    BYTE PTR [ecx],dh
  4174ab:	adc    al,0x0
  4174ad:	add    BYTE PTR [ecx],dh
  4174af:	adc    al,0x0
  4174b1:	add    BYTE PTR [ecx],dh
  4174b3:	adc    al,0x0
  4174b5:	add    BYTE PTR [ecx],dh
  4174b7:	adc    al,0x0
  4174b9:	add    BYTE PTR [ecx],dh
  4174bb:	adc    al,0x0
  4174bd:	add    BYTE PTR [ecx],dh
  4174bf:	adc    al,0x0
  4174c1:	add    BYTE PTR [ecx],dh
  4174c3:	adc    al,0x0
  4174c5:	add    BYTE PTR [ecx],dh
  4174c7:	adc    al,0x0
  4174c9:	add    BYTE PTR [ecx],dh
  4174cb:	adc    al,0x0
  4174cd:	add    BYTE PTR [ecx],dh
  4174cf:	adc    al,0x0
  4174d1:	add    BYTE PTR [ecx],dh
  4174d3:	adc    al,0x0
  4174d5:	add    BYTE PTR [ecx],dh
  4174d7:	adc    al,0x0
  4174d9:	add    BYTE PTR [ecx],dh
  4174db:	adc    al,0x0
  4174dd:	add    BYTE PTR [ecx],dh
  4174df:	adc    al,0x0
  4174e1:	add    BYTE PTR [ecx],dh
  4174e3:	adc    al,0x0
  4174e5:	add    BYTE PTR [ecx],dh
  4174e7:	adc    al,0x0
  4174e9:	add    BYTE PTR [ecx],dh
  4174eb:	adc    al,0x0
  4174ed:	add    BYTE PTR [ecx],dh
  4174ef:	adc    al,0x0
  4174f1:	add    BYTE PTR [ecx],dh
  4174f3:	adc    al,0x0
  4174f5:	add    BYTE PTR [ecx],dh
  4174f7:	adc    al,0x0
  4174f9:	add    BYTE PTR [ecx],dh
  4174fb:	adc    al,0x0
  4174fd:	add    BYTE PTR [ecx],dh
  4174ff:	adc    al,0x0
  417501:	add    BYTE PTR [ecx],dh
  417503:	adc    al,0x0
  417505:	add    BYTE PTR [ecx],dh
  417507:	adc    al,0x0
  417509:	add    BYTE PTR [eax],al
  41750b:	add    BYTE PTR [ecx],dh
  41750d:	adc    al,0x0
  41750f:	add    BYTE PTR [ecx],dh
  417511:	adc    al,0x0
  417513:	add    BYTE PTR [ecx],dh
  417515:	adc    al,0x0
  417517:	add    BYTE PTR [ecx],dh
  417519:	adc    al,0x0
  41751b:	add    BYTE PTR [ecx],dh
  41751d:	adc    al,0x0
  41751f:	add    BYTE PTR [ecx],dh
  417521:	adc    al,0x0
  417523:	add    BYTE PTR [ecx],dh
  417525:	adc    al,0x0
  417527:	add    BYTE PTR [ecx],dh
  417529:	adc    al,0x0
  41752b:	add    BYTE PTR [ecx],dh
  41752d:	adc    al,0x0
  41752f:	add    BYTE PTR [ecx],dh
  417531:	adc    al,0x0
  417533:	add    BYTE PTR [ecx],dh
  417535:	adc    al,0x0
  417537:	add    BYTE PTR [ecx],dh
  417539:	adc    al,0x0
  41753b:	add    BYTE PTR [ecx],dh
  41753d:	adc    al,0x0
  41753f:	add    BYTE PTR [ecx],dh
  417541:	adc    al,0x0
  417543:	add    BYTE PTR [ecx],dh
  417545:	adc    al,0x0
  417547:	add    BYTE PTR [ecx],dh
  417549:	adc    al,0x0
  41754b:	add    BYTE PTR [ecx],dh
  41754d:	adc    al,0x0
  41754f:	add    BYTE PTR [ecx],dh
  417551:	adc    al,0x0
  417553:	add    BYTE PTR [ecx],dh
  417555:	adc    al,0x0
  417557:	add    BYTE PTR [ecx],dh
  417559:	adc    al,0x0
  41755b:	add    BYTE PTR [ecx],dh
  41755d:	adc    al,0x0
  41755f:	add    BYTE PTR [ecx],dh
  417561:	adc    al,0x0
  417563:	add    BYTE PTR [ecx],dh
  417565:	adc    al,0x0
  417567:	add    BYTE PTR [ecx],dh
  417569:	adc    al,0x0
  41756b:	add    BYTE PTR [eax],al
  41756d:	add    al,BYTE PTR [eax]
  41756f:	add    BYTE PTR [ecx],dh
  417571:	adc    al,0x0
  417573:	add    BYTE PTR [ecx],ch
  417575:	adc    al,0x0
  417577:	add    BYTE PTR [ebp-0x62cd6fda],ch
  41757d:	es cwde 
  41757f:	xor    cl,ch
  417581:	mov    al,es:0xa826cd32
  417587:	xor    dh,BYTE PTR [ecx]
  417589:	push   esp
  41758a:	add    DWORD PTR [eax],eax
  41758c:	add    DWORD PTR [eax+eax*1],edx
  41758f:	add    BYTE PTR [edx-0x1ec4b4d2],dl
  417595:	cs pop edx
  417597:	cmp    ebx,esi
  417599:	cs push 0x932f073b
  41759f:	cmp    ecx,edi
  4175a1:	das    
  4175a2:	test   al,0x3b
  4175a4:	ins    DWORD PTR es:[edi],dx
  4175a5:	das    
  4175a6:	in     eax,dx
  4175a7:	cmp    ebp,DWORD PTR [edx]
  4175a9:	sub    BYTE PTR [ecx],dl
  4175ab:	cmp    al,0x38
  4175ad:	sub    BYTE PTR [ebp-0x78d66ac4],bl
  4175b3:	ds mov ah,0x2a
  4175b6:	xchg   ebp,eax
  4175b7:	ds jne 0x4175e4
  4175ba:	int    0x3e
  4175bc:	dec    esi
  4175bd:	sub    bh,BYTE PTR [esi+0x3f]
  4175c0:	mov    dl,0x2a
  4175c2:	fwait
  4175c3:	aas    
  4175c4:	fsubr  DWORD PTR [edx]
  4175c6:	scas   eax,DWORD PTR es:[edi]
  4175c7:	aas    
  4175c8:	fisubr WORD PTR [edx]
  4175ca:	int3   
  4175cb:	aas    
  4175cc:	add    ebp,DWORD PTR [ebx]
  4175ce:	out    0x3f,al
  4175d0:	add    BYTE PTR [ebx],ch
  4175d2:	stc    
  4175d3:	aas    
  4175d4:	add    BYTE PTR [eax],al
  4175d6:	push   es
  4175d7:	sub    eax,DWORD PTR [eax]
  4175d9:	add    BYTE PTR [ecx],dh
  4175db:	inc    esp
  4175dc:	add    DWORD PTR [eax],eax
  4175de:	mov    ebp,0x34000013
  4175e3:	and    al,0x18
  4175e5:	xor    BYTE PTR [eax+0x77308723],dh
  4175eb:	and    eax,0x2574314b
  4175f0:	xor    WORD PTR [ecx+0x25],ax
  4175f4:	lea    esi,[ecx]
  4175f6:	lea    esp,[edx+ebp*4]
  4175f9:	xor    ebx,esi
  4175fb:	and    al,0xe5
  4175fd:	xor    DWORD PTR [eax],esp
  4175ff:	sbb    DWORD PTR es:[edx],esi
  417602:	dec    esi
  417603:	es xor ah,BYTE PTR es:[ebp+0x26]
  417608:	inc    ebp
  417609:	xor    ch,dl
  41760b:	and    eax,0x25fb3253
  417610:	popa   
  417611:	xor    bl,BYTE PTR [esi]
  417613:	es jg  0x417648
  417616:	lods   al,BYTE PTR ds:[esi]
  417617:	and    eax,0x25d03297
  41761c:	stos   DWORD PTR es:[edi],eax
  41761d:	xor    bh,BYTE PTR [eax-0x7fcd3cdb]
  417623:	and    eax,0x27373308
  417628:	adc    al,0x33
  41762a:	adc    al,0x27
  41762c:	sub    dh,BYTE PTR [ebx]
  41762e:	repz es jle 0x417665
  417632:	mov    ecx,0x90339526
  417637:	es stos DWORD PTR es:[edi],eax
  417639:	xor    eax,DWORD PTR [eax]
  41763b:	add    BYTE PTR [ebp+0x6833be26],al
  417641:	es into 
  417643:	xor    eax,DWORD PTR ds:0x1633dd26
  417649:	es hlt 
  41764b:	xor    ebx,DWORD PTR [ebx]
  41764d:	push   DWORD PTR es:[ebx]
  417650:	sub    al,0x20
  417652:	or     DWORD PTR [edi+edi*1],esi
  417655:	and    BYTE PTR [esp+esi*1],dl
  417658:	push   ebx
  417659:	and    BYTE PTR [eax],ch
  41765b:	xor    al,0x4c
  41765d:	and    BYTE PTR [edx],dh
  41765f:	xor    al,0x66
  417661:	and    BYTE PTR [edx+0x34],bl
  417664:	mov    bh,0x20
  417666:	mov    WORD PTR [ebx+eax*8],?
  417669:	and    BYTE PTR [esp+esi*1+0x34eb20f7],bl
  417670:	fldenv [eax]
  417672:	or     al,0x35
  417674:	daa    
  417675:	pop    ds
  417676:	and    esi,DWORD PTR ds:0x35311f18
  41767c:	clc    
  41767d:	push   ds
  41767e:	inc    esp
  41767f:	xor    eax,0x355d1f65
  417684:	adc    ebx,DWORD PTR [edi]
  417686:	jno    0x4176bd
  417688:	lods   al,BYTE PTR ds:[esi]
  417689:	pop    ds
  41768a:	mov    ?,WORD PTR ds:0x35a51fc7
  417690:	xor    DWORD PTR [eax+eax*1],edx
  417693:	add    BYTE PTR [ecx],dh
  417695:	adc    al,0x0
  417697:	add    BYTE PTR [ecx],dh
  417699:	adc    al,0x0
  41769b:	add    BYTE PTR [ecx],dh
  41769d:	adc    al,0x0
  41769f:	add    BYTE PTR [eax],al
  4176a1:	add    BYTE PTR [ecx],dh
  4176a3:	adc    al,0x0
  4176a5:	add    BYTE PTR [ecx],dh
  4176a7:	adc    al,0x0
  4176a9:	add    BYTE PTR [ecx],dh
  4176ab:	adc    al,0x0
  4176ad:	add    BYTE PTR [ecx],dh
  4176af:	adc    al,0x0
  4176b1:	add    BYTE PTR [ecx],dh
  4176b3:	adc    al,0x0
  4176b5:	add    BYTE PTR [ecx],dh
  4176b7:	adc    al,0x0
  4176b9:	add    BYTE PTR [ecx],dh
  4176bb:	adc    al,0x0
  4176bd:	add    BYTE PTR [ecx],dh
  4176bf:	adc    al,0x0
  4176c1:	add    BYTE PTR [ecx],dh
  4176c3:	adc    al,0x0
  4176c5:	add    BYTE PTR [ecx],dh
  4176c7:	adc    al,0x0
  4176c9:	add    BYTE PTR [ecx],dh
  4176cb:	adc    al,0x0
  4176cd:	add    BYTE PTR [ecx],dh
  4176cf:	adc    al,0x0
  4176d1:	add    BYTE PTR [ecx],dh
  4176d3:	adc    al,0x0
  4176d5:	add    BYTE PTR [ecx],dh
  4176d7:	adc    al,0x0
  4176d9:	add    BYTE PTR [ecx],dh
  4176db:	adc    al,0x0
  4176dd:	add    BYTE PTR [ecx],dh
  4176df:	adc    al,0x0
  4176e1:	add    BYTE PTR [ecx],dh
  4176e3:	adc    al,0x0
  4176e5:	add    BYTE PTR [ecx],dh
  4176e7:	adc    al,0x0
  4176e9:	add    BYTE PTR [ecx],dh
  4176eb:	adc    al,0x0
  4176ed:	add    BYTE PTR [ecx],dh
  4176ef:	adc    al,0x0
  4176f1:	add    BYTE PTR [ecx],dh
  4176f3:	adc    al,0x0
  4176f5:	add    BYTE PTR [ecx],dh
  4176f7:	adc    al,0x0
  4176f9:	add    BYTE PTR [ecx],dh
  4176fb:	adc    al,0x0
  4176fd:	add    BYTE PTR [ecx],dh
  4176ff:	adc    al,0x0
  417701:	add    BYTE PTR [ecx],dh
  417703:	adc    al,0x0
  417705:	add    BYTE PTR [eax],al
  417707:	add    BYTE PTR [ecx],dh
  417709:	adc    al,0x0
  41770b:	add    BYTE PTR [ecx],dh
  41770d:	adc    al,0x0
  41770f:	add    BYTE PTR [ecx],dh
  417711:	adc    al,0x0
  417713:	add    BYTE PTR [ecx],dh
  417715:	adc    al,0x0
  417717:	add    BYTE PTR [ecx],dh
  417719:	adc    al,0x0
  41771b:	add    BYTE PTR [ecx],dh
  41771d:	adc    al,0x0
  41771f:	add    BYTE PTR [ecx],dh
  417721:	adc    al,0x0
  417723:	add    BYTE PTR [ecx],dh
  417725:	adc    al,0x0
  417727:	add    BYTE PTR [ecx],dh
  417729:	adc    al,0x0
  41772b:	add    BYTE PTR [ecx],dh
  41772d:	adc    al,0x0
  41772f:	add    BYTE PTR [ecx],dh
  417731:	adc    al,0x0
  417733:	add    BYTE PTR [ecx],dh
  417735:	adc    al,0x0
  417737:	add    BYTE PTR [ecx],dh
  417739:	adc    al,0x0
  41773b:	add    BYTE PTR [ecx],dh
  41773d:	adc    al,0x0
  41773f:	add    BYTE PTR [ecx],dh
  417741:	adc    al,0x0
  417743:	add    BYTE PTR [ecx],dh
  417745:	adc    al,0x0
  417747:	add    BYTE PTR [ecx],dh
  417749:	adc    al,0x0
  41774b:	add    BYTE PTR [ecx],dh
  41774d:	adc    al,0x0
  41774f:	add    BYTE PTR [ecx],dh
  417751:	adc    al,0x0
  417753:	add    BYTE PTR [ecx],dh
  417755:	adc    al,0x0
  417757:	add    BYTE PTR [ecx],dh
  417759:	adc    al,0x0
  41775b:	add    BYTE PTR [ecx],dh
  41775d:	adc    al,0x0
  41775f:	add    BYTE PTR [ecx],dh
  417761:	adc    al,0x0
  417763:	add    BYTE PTR [ecx],dh
  417765:	adc    al,0x0
  417767:	add    BYTE PTR [ecx],dh
  417769:	adc    al,0x0
  41776b:	add    BYTE PTR [eax],al
  41776d:	add    BYTE PTR [ecx],dh
  41776f:	adc    al,0x0
  417771:	add    BYTE PTR [ecx],dh
  417773:	adc    al,0x0
  417775:	add    BYTE PTR [ecx],dh
  417777:	adc    al,0x0
  417779:	add    bh,bh
  41777b:	and    eax,0x41824c
  417780:	jmp    DWORD PTR ds:0x418250
  417786:	jmp    DWORD PTR ds:0x418254
  41778c:	jmp    DWORD PTR ds:0x418258
  417792:	jmp    DWORD PTR ds:0x41825c
  417798:	jmp    DWORD PTR ds:0x418260
  41779e:	jmp    DWORD PTR ds:0x418268
  4177a4:	jmp    DWORD PTR ds:0x41826c
  4177aa:	jmp    DWORD PTR ds:0x418270
  4177b0:	jmp    DWORD PTR ds:0x418274
  4177b6:	jmp    DWORD PTR ds:0x41827c
  4177bc:	jmp    DWORD PTR ds:0x418284
  4177c2:	jmp    DWORD PTR ds:0x41828c
