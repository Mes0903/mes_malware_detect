
6bb249d6b6cf07de0e04b84042f813d80a5b9ee9863ed1e3b83f014a4e8bfa3a.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	and    eax,edi
  411002:	dec    BYTE PTR [ecx+0x16]
  411005:	bound  ecx,QWORD PTR [edi-0x2]
  411008:	add    DWORD PTR [esp+ecx*2],edi
  41100b:	js     0x410fb2
  41100d:	mov    ds:0xab76a0bf,eax
  411012:	and    eax,0x6e33a4e6
  411017:	sbb    eax,0xffd496c1
  41101c:	out    dx,al
  41101d:	mov    edi,0xe800977e
  411022:	loop   0x410fe6
  411024:	scas   eax,DWORD PTR es:[edi]
  411025:	icebp  
  411026:	sbb    eax,0x32be3d9d
  41102b:	iret   
  41102c:	icebp  
  41102d:	fldenv [di]
  411030:	fwait
  411031:	mov    ds:0xc62e5186,al
  411036:	(bad)  
  411037:	in     al,dx
  411038:	es adc esi,0x55
  41103c:	js     0x4110a8
  41103e:	or     eax,0xaa1d68ab
  411043:	retf   0xd72b
  411046:	pop    ds
  411047:	inc    BYTE PTR [edi]
  411049:	shl    dl,0xd7
  41104c:	pop    edi
  41104d:	xor    dl,bh
  41104f:	ss and esp,ebp
  411052:	fdivp  st(2),st
  411054:	popf   
  411055:	sbb    al,0x55
  411057:	sub    BYTE PTR [esi-0x3a2fa0bc],al
  41105d:	sub    DWORD PTR [edi-0x12],edi
  411060:	enter  0x75f4,0x37
  411064:	or     al,0x8
  411066:	lds    esi,FWORD PTR [edx+0x76a4cc59]
  41106c:	mov    eax,0xa0cc0b95
  411071:	scas   al,BYTE PTR es:[edi]
  411072:	in     eax,dx
  411073:	(bad)  
  411074:	push   ebp
  411075:	rcr    BYTE PTR [ecx-0x459acd89],0x9b
  41107c:	mov    bh,0xe8
  41107e:	loop   0x411057
  411080:	mov    eax,fs:0x5c1b680f
  411086:	(bad)  
  411087:	mov    esp,0x4248aabc
  41108c:	fisttp WORD PTR [ebx-0x254ee90c]
  411092:	sub    eax,0xb45fe5b9
  411097:	sar    BYTE PTR [esi+0x750b8b93],0x4d
  41109e:	ja     0x41108e
  4110a0:	jne    0x411104
  4110a2:	push   ebx
  4110a3:	gs (bad) 
  4110a5:	mov    ds:0x5fc69ae6,al
  4110aa:	add    al,al
  4110ac:	outs   dx,DWORD PTR ds:[esi]
  4110ad:	iret   
  4110ae:	and    DWORD PTR [edi],edi
  4110b0:	cmp    BYTE PTR [ebp-0x692e9508],ch
  4110b6:	jmp    edi
  4110b8:	pop    edx
  4110b9:	xor    cl,ah
  4110bb:	lods   eax,DWORD PTR ds:[esi]
  4110bc:	ss push eax
  4110be:	mov    cl,0x5e
  4110c0:	jmp    FWORD PTR [esi]
  4110c2:	imul   esi,DWORD PTR [ecx-0x6d6eeff2],0x8
  4110c9:	pop    esp
  4110ca:	or     esi,ebp
  4110cc:	cwde   
  4110cd:	jno    0x41105b
  4110cf:	add    BYTE PTR [edx],bl
  4110d1:	std    
  4110d2:	ror    BYTE PTR [ebx+0x51],cl
  4110d5:	rcr    cl,cl
  4110d7:	mov    edi,0x78415191
  4110dc:	xor    eax,0x456e7d4c
  4110e1:	xchg   ecx,eax
  4110e2:	fwait
  4110e3:	jbe    0x41110e
  4110e5:	cld    
  4110e6:	mov    al,0xe5
  4110e8:	not    BYTE PTR [edx-0xd]
  4110eb:	pop    esp
  4110ec:	call   0x33b44416
  4110f1:	test   DWORD PTR ds:0x53bcf087,0x535110d3
  4110fb:	gs leave 
  4110fd:	sub    BYTE PTR [ecx+0x181605c8],cl
  411103:	dec    ebx
  411104:	sbb    eax,0x7fa248b2
  411109:	and    al,0x4b
  41110b:	xor    ch,bl
  41110d:	test   al,0x9e
  41110f:	jge    0x41110d
  411111:	daa    
  411112:	pop    edi
  411113:	cwde   
  411114:	add    DWORD PTR [esp+eax*1-0x38671440],ebx
  41111b:	jmp    0x41111f
  41111d:	xor    esi,DWORD PTR [edx-0x40]
  411120:	push   0xca877ef7
  411125:	sub    DWORD PTR [ebp+0x7c],ebx
  411128:	ins    DWORD PTR es:[edi],dx
  411129:	mov    BYTE PTR ds:0xfc75b413,ch
  41112f:	in     eax,dx
  411130:	(bad)  
  411131:	scas   eax,DWORD PTR es:[edi]
  411132:	adc    edx,eax
  411134:	sbb    ebp,DWORD PTR [edx+eiz*4+0x1a46a29b]
  41113b:	daa    
  41113c:	(bad)  
  41113d:	pop    esi
  41113e:	imul   ebp,DWORD PTR [eax],0x108fadd8
  411144:	mov    BYTE PTR [eax],bl
  411146:	fcmovnb st,st(6)
  411148:	jg     0x411121
  41114a:	pusha  
  41114b:	push   es
  41114c:	mov    ch,ah
  41114e:	les    edi,FWORD PTR [eax]
  411150:	ds push edi
  411152:	std    
  411153:	jge    0x4111a6
  411155:	fmul   QWORD PTR [edi+0x3466d346]
  41115b:	cmp    al,BYTE PTR [ebp-0x4fb99672]
  411161:	es xchg ecx,eax
  411163:	dec    ebx
  411164:	push   edx
  411165:	add    al,0x62
  411167:	idiv   BYTE PTR [ebp-0x296d2c44]
  41116d:	mov    ecx,0x8588d76b
  411172:	inc    ecx
  411173:	frstor [edx+0x33]
  411176:	xor    dh,BYTE PTR [eax-0x51]
  411179:	jg     0x41118b
  41117b:	clc    
  41117c:	pusha  
  41117d:	add    DWORD PTR [edi-0x32],ecx
  411180:	ins    BYTE PTR es:[edi],dx
  411181:	cmc    
  411182:	jp     0x41118a
  411184:	mov    dl,0x20
  411186:	and    DWORD PTR [edx+ecx*4+0x4984c46f],esi
  41118d:	dec    ecx
  41118e:	mov    esi,0x243ea1d2
  411193:	add    DWORD PTR [eax+0x2ded622],esp
  411199:	inc    eax
  41119a:	xchg   ecx,eax
  41119b:	inc    eax
  41119c:	mov    fs,WORD PTR [edx-0x34]
  41119f:	push   esp
  4111a0:	dec    ebp
  4111a1:	pop    es
  4111a2:	retf   
  4111a3:	sbb    bl,BYTE PTR [esi-0x51]
  4111a6:	inc    edx
  4111a7:	sbb    edi,DWORD PTR [esi+0x737780fc]
  4111ad:	add    al,0x57
  4111af:	aam    0xda
  4111b1:	outs   dx,DWORD PTR ds:[esi]
  4111b2:	push   esi
  4111b3:	and    eax,0xf8551f53
  4111b8:	fwait
  4111b9:	ret    0x2bc1
  4111bc:	cld    
  4111bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111be:	cs mov esp,0xc0223441
  4111c4:	sbb    ebx,ecx
  4111c6:	out    0x7f,al
  4111c8:	aas    
  4111c9:	mov    bl,0xc2
  4111cb:	push   ebx
  4111cc:	add    esi,0x8c4036a4
  4111d2:	dec    eax
  4111d3:	test   eax,0xe1fdfb24
  4111d8:	push   cs
  4111d9:	mov    BYTE PTR [edx-0x4f5172fd],ah
  4111df:	popa   
  4111e0:	(bad)  
  4111e2:	icebp  
  4111e3:	jbe    0x411192
  4111e5:	loop   0x4111b5
  4111e7:	jmp    0x411234
  4111e9:	test   eax,0x42037e4f
  4111ee:	jmp    0x41121d
  4111f0:	xor    DWORD PTR [esi-0x2b],ecx
  4111f3:	push   es
  4111f4:	xchg   ecx,eax
  4111f5:	xor    dh,dl
  4111f7:	out    0xb7,al
  4111f9:	in     al,dx
  4111fa:	fist   DWORD PTR [ebx+ecx*8-0x1d21abdf]
  411201:	sub    bh,BYTE PTR [ecx]
  411203:	es pop es
  411205:	add    BYTE PTR [ecx+0x63],al
  411208:	sti    
  411209:	test   al,0xf4
  41120b:	adc    DWORD PTR [esi],esi
  41120d:	je     0x411282
  41120f:	mov    ds:0x2f6bddad,eax
  411214:	xchg   esi,eax
  411215:	aaa    
  411216:	adc    al,0x53
  411218:	mov    al,0x9b
  41121a:	arpl   WORD PTR gs:[ebp+eax*8+0x3],dx
  41121f:	loopne 0x411281
  411221:	mov    ch,0x30
  411223:	push   0x2346490b
  411228:	rcr    DWORD PTR [eax-0x7e],cl
  41122b:	mov    al,ds:0x8bbea3f6
  411230:	sub    DWORD PTR [edi-0x34c9f2d1],edx
  411236:	pop    ds
  411237:	mov    esp,0x25148c14
  41123c:	dec    eax
  41123d:	jb     0x4111d2
  41123f:	xor    eax,0xc6890d7f
  411244:	lds    esi,FWORD PTR [ecx-0x7]
  411247:	jbe    0x4112c2
  411249:	cld    
  41124a:	outs   dx,DWORD PTR ds:[esi]
  41124b:	xor    BYTE PTR [eax+0x55bbaa05],al
  411251:	dec    esi
  411252:	es dec eax
  411254:	xchg   esp,eax
  411255:	popf   
  411256:	hlt    
  411257:	pop    edi
  411258:	fisub  DWORD PTR [ecx]
  41125a:	addr16 sbb eax,0x8244fc2c
  411260:	cli    
  411261:	out    0x7,al
  411263:	ins    BYTE PTR es:[edi],dx
  411264:	loopne 0x41125a
  411266:	mov    al,0x4e
  411268:	mul    DWORD PTR [ebp+0x3743010a]
  41126e:	in     eax,dx
  41126f:	in     eax,0x5e
  411271:	ins    DWORD PTR es:[edi],dx
  411272:	cmp    BYTE PTR [ebx+ecx*2],bl
  411275:	add    esp,esp
  411277:	fs gs inc ebx
  41127a:	les    eax,FWORD PTR [esi+0x4]
  41127d:	cwde   
  41127e:	retf   0x96c5
  411281:	xor    ecx,DWORD PTR [esi+0x45]
  411284:	jmp    0x411234
  411286:	imul   edi,DWORD PTR [edi-0x18b75125],0x3d
  41128d:	or     eax,0x5ee7ed0f
  411292:	fnstsw WORD PTR [edi+0x193979e3]
  411298:	jge    0x411242
  41129a:	inc    esp
  41129b:	pusha  
  41129c:	jmp    0x4112f0
  41129e:	mov    al,ds:0xa980cc7a
  4112a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a4:	loope  0x411237
  4112a6:	inc    eax
  4112a7:	outs   dx,DWORD PTR ds:[esi]
  4112a8:	icebp  
  4112a9:	xchg   esp,eax
  4112aa:	out    0xbf,al
  4112ac:	fcomip st,st(4)
  4112ae:	hlt    
  4112af:	ss in  al,0x1
  4112b2:	lods   eax,DWORD PTR ds:[esi]
  4112b3:	fwait
  4112b4:	xchg   edi,eax
  4112b5:	mov    dh,0x4d
  4112b7:	sbb    ecx,ecx
  4112b9:	rcr    BYTE PTR [ebx+edi*2],1
  4112bc:	(bad)  
  4112bd:	mov    cr5,edx
  4112c0:	aam    0xa
  4112c2:	xchg   edi,eax
  4112c3:	xchg   ecx,eax
  4112c4:	cdq    
  4112c5:	iret   
  4112c6:	sbb    al,0x54
  4112c8:	fst    QWORD PTR [ecx]
  4112ca:	dec    esp
  4112cb:	adc    eax,0x64c667b5
  4112d0:	sbb    DWORD PTR [esp+ecx*1-0x3],esp
  4112d4:	imul   ecx,DWORD PTR [edi-0x7a0fa313],0x1d5f9aea
  4112de:	push   0x1c9b3548
  4112e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e4:	retf   0xd527
  4112e7:	jmp    DWORD PTR [esi+eiz*1+0x77ac929b]
  4112ee:	xchg   ecx,eax
  4112ef:	std    
  4112f0:	dec    esi
  4112f1:	ss xor eax,0x78d9bb6e
  4112f7:	lea    edi,[esi]
  4112f9:	(bad)
  4112fd:	or     al,0x3c
  4112ff:	dec    ebp
  411300:	or     al,0x24
  411302:	mov    ah,0x2e
  411304:	sub    BYTE PTR [ebx+0x2b],cl
  411307:	inc    esp
  411308:	or     eax,0x38a5a68a
  41130d:	fdivrp st(0),st
  41130f:	cmp    edi,DWORD PTR [edx-0x38]
  411312:	(bad)  
  411313:	ds dec ebx
  411315:	jp     0x4112f4
  411317:	in     al,dx
  411318:	cdq    
  411319:	ins    BYTE PTR es:[edi],dx
  41131a:	mov    ah,0x5d
  41131c:	lsl    ecx,WORD PTR [edx+0x26]
  411320:	lahf   
  411321:	ficom  WORD PTR [eax]
  411323:	pusha  
  411324:	pusha  
  411325:	xchg   esi,eax
  411326:	and    DWORD PTR [edi-0x6e],esi
  411329:	pushf  
  41132a:	push   cs
  41132b:	icebp  
  41132c:	push   ecx
  41132d:	sub    DWORD PTR fs:[eax+ebx*1],esp
  411331:	inc    esp
  411332:	push   0xf3354080
  411337:	cmc    
  411338:	int    0x6e
  41133a:	adc    BYTE PTR [ecx],dl
  41133c:	cli    
  41133d:	mov    ds:0xdcbb4eac,al
  411342:	cmp    BYTE PTR [edi],bh
  411344:	sahf   
  411345:	pop    eax
  411346:	jmp    0x4113b1
  411348:	lahf   
  411349:	pop    es
  41134a:	jp     0x4112de
  41134c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41134d:	int    0x1f
  41134f:	popa   
  411350:	jmp    0x6bd0fbde
  411355:	imul   ecx,DWORD PTR [edi-0xa485ffc],0xffffff85
  41135c:	jnp    0x4112e6
  41135e:	jg     0x4112e4
  411360:	cmp    edi,esi
  411362:	into   
  411363:	stos   BYTE PTR es:[edi],al
  411364:	test   al,0x5f
  411366:	repnz enter 0x308d,0x72
  41136b:	jecxz  0x4113c4
  41136d:	test   DWORD PTR [ebx-0x186b6e7e],edx
  411373:	xlat   BYTE PTR ds:[ebx]
  411374:	adc    cl,al
  411376:	cli    
  411377:	sub    eax,0xb30fa409
  41137c:	push   0xf61ba6a
  411381:	adc    BYTE PTR [eax],al
  411383:	pusha  
  411384:	rol    BYTE PTR ds:0xc0031849,0xdd
  41138b:	adc    ebp,0x30
  41138e:	test   eax,0xf713d695
  411393:	inc    edi
  411394:	lahf   
  411395:	sub    edi,DWORD PTR [edx]
  411397:	sbb    ecx,DWORD PTR [eax-0x37]
  41139a:	or     esi,DWORD PTR [esi+0x12]
  41139d:	fimul  DWORD PTR [ecx+0x28]
  4113a0:	lods   al,BYTE PTR ds:[esi]
  4113a1:	and    al,0x34
  4113a3:	call   0x1865:0xfdd5fcd5
  4113aa:	and    edx,ecx
  4113ac:	xor    BYTE PTR [edx+0x2345fcc6],dl
  4113b2:	xchg   edi,eax
  4113b3:	loope  0x4113e2
  4113b5:	test   eax,0xa06b690d
  4113ba:	stc    
  4113bb:	mov    esi,0x90c3eca7
  4113c0:	pop    eax
  4113c1:	mov    bl,0xa8
  4113c3:	stc    
  4113c4:	retf   
  4113c5:	int    0x87
  4113c7:	clc    
  4113c8:	or     BYTE PTR [esi],ch
  4113ca:	xor    DWORD PTR [ebp-0x6d],edi
  4113cd:	adc    dl,BYTE PTR [ebx-0x79]
  4113d0:	jmp    0x9c5363ca
  4113d5:	(bad)  
  4113d7:	fwait
  4113d8:	scas   eax,DWORD PTR es:[edi]
  4113d9:	jae    0x41137a
  4113db:	lods   al,BYTE PTR ds:[esi]
  4113dc:	inc    ebx
  4113dd:	or     esp,0xc9421319
  4113e3:	(bad)  
  4113e4:	aaa    
  4113e5:	or     DWORD PTR [eax-0x1294b354],ecx
  4113eb:	aas    
  4113ec:	pop    es
  4113ed:	mov    ah,0x7b
  4113ef:	sahf   
  4113f0:	xchg   esp,eax
  4113f1:	sub    eax,0x9181562f
  4113f6:	mov    edx,0xb68c4d28
  4113fb:	popa   
  4113fc:	jo     0x4113f1
  4113fe:	pop    ss
  4113ff:	push   es
  411400:	retf   0x53c7
  411403:	mov    bl,0x37
  411405:	push   edx
  411406:	dec    esp
  411407:	mov    ah,0x29
  411409:	in     eax,dx
  41140a:	adc    al,0xee
  41140c:	rcl    BYTE PTR [esi-0x3df121c2],cl
  411412:	adc    ecx,DWORD PTR [eax+0x6823a929]
  411418:	xor    dl,bl
  41141a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141b:	pmulhuw mm1,QWORD PTR [ebx-0x11]
  41141f:	imul   esp,DWORD PTR [ebx],0xadaf0963
  411425:	sbb    al,0xed
  411427:	(bad)  
  411428:	adc    cl,BYTE PTR [edx]
  41142a:	xor    esp,DWORD PTR [edi]
  41142c:	inc    ecx
  41142d:	mov    esp,0xbb545a2
  411432:	add    bh,BYTE PTR [edi-0x46]
  411435:	(bad)  
  411436:	pop    edi
  411437:	or     dl,BYTE PTR [esi]
  411439:	dec    edx
  41143a:	dec    ecx
  41143b:	cli    
  41143c:	add    al,0x8e
  41143e:	cmp    eax,0x7024be7
  411443:	pop    ds
  411444:	imul   ebp,ebp,0x1cea8514
  41144a:	xlat   BYTE PTR ds:[ebx]
  41144b:	cmp    eax,0x2353cee
  411450:	adc    ebp,DWORD PTR [esi+0x18503a33]
  411456:	mov    ebp,0x3efbc00f
  41145b:	ins    DWORD PTR es:[edi],dx
  41145c:	out    0xdd,al
  41145e:	sub    bh,0xde
  411461:	std    
  411462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411463:	or     eax,0xd626d8b1
  411468:	and    eax,0x41a93646
  41146d:	dec    edi
  41146e:	xchg   edi,eax
  41146f:	adc    eax,DWORD PTR [esi-0x7b9b6390]
  411475:	mov    ds:0xbfe66160,eax
  41147a:	(bad)  
  41147b:	aam    0x43
  41147d:	and    al,0x92
  41147f:	adc    al,0xe7
  411481:	into   
  411482:	icebp  
  411483:	push   0x751da1a1
  411488:	(bad)  
  411489:	shl    DWORD PTR [ecx+0x6d],1
  41148c:	and    al,0xcf
  41148e:	pop    es
  41148f:	adc    ecx,DWORD PTR [esi]
  411491:	imul   esi,DWORD PTR [ebx+0x74],0xffffffe5
  411495:	shl    DWORD PTR [edi+0x3f362b5a],cl
  41149b:	adc    esi,DWORD PTR [edx]
  41149d:	imul   ebp,edx,0xf0352359
  4114a3:	cli    
  4114a4:	rcr    bh,0xc4
  4114a7:	clc    
  4114a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a9:	adc    ecx,DWORD PTR [eax-0x25d10e0d]
  4114af:	push   ebp
  4114b0:	nop
  4114b1:	cs push edi
  4114b3:	jmp    ebp
  4114b5:	ds push ecx
  4114b7:	mov    WORD PTR [ebp+0x20f43fa8],ds
  4114bd:	mov    edx,0x13a7fd57
  4114c2:	dec    ecx
  4114c3:	fnstsw WORD PTR [edx-0x27]
  4114c6:	cs cmp dl,bh
  4114c9:	aad    0xb8
  4114cb:	test   BYTE PTR [ebx],ah
  4114cd:	xor    al,0x80
  4114cf:	stos   DWORD PTR es:[edi],eax
  4114d0:	mov    ds:0x3a77676d,al
  4114d5:	sti    
  4114d6:	outs   dx,BYTE PTR ds:[esi]
  4114d7:	adc    edi,0xe64abd60
  4114dd:	adc    DWORD PTR [esi],0x1aff2a72
  4114e3:	dec    edx
  4114e4:	lods   eax,DWORD PTR ds:[esi]
  4114e5:	dec    ebx
  4114e6:	jg     0x411543
  4114e8:	pop    edi
  4114e9:	addr16 scas al,BYTE PTR es:[di]
  4114ec:	mov    esp,0xf434b7d3
  4114f1:	ins    DWORD PTR es:[edi],dx
  4114f2:	dec    esp
  4114f3:	mov    edi,0x392783f9
  4114f8:	sub    eax,0x452e4529
  4114fd:	lea    eax,[edx-0x1c298188]
  411503:	loopne 0x41155d
  411505:	aad    0x9b
  411507:	sub    BYTE PTR ds:0x1cda01ca,dl
  41150d:	push   0x66
  41150f:	das    
  411510:	test   BYTE PTR [esi+0xd],bh
  411513:	out    dx,eax
  411514:	add    dl,dl
  411516:	pop    ecx
  411517:	clc    
  411518:	aas    
  411519:	adc    eax,0x2d95ecd9
  41151e:	setne  bl
  411521:	xchg   DWORD PTR [edi],edx
  411523:	(bad)  
  411524:	jl     0x41156d
  411526:	sbb    edi,edi
  411528:	pop    ebx
  411529:	push   esi
  41152a:	in     eax,0xf0
  41152c:	xor    BYTE PTR [esi-0x67],ah
  41152f:	add    BYTE PTR ds:0xd6b771b5,ah
  411535:	ror    DWORD PTR [ebx],cl
  411537:	mov    gs,WORD PTR [edi+0x23]
  41153a:	cmp    edx,DWORD PTR [ebp+0x6138eb09]
  411540:	in     al,dx
  411541:	pop    ecx
  411542:	or     BYTE PTR [ebx+0x40],bh
  411545:	test   BYTE PTR [edi],0xd
  411548:	arpl   WORD PTR [ebp+0x29],bp
  41154b:	xchg   BYTE PTR [eax+edi*2],dh
  41154e:	inc    esi
  41154f:	jbe    0x411565
  411551:	mov    esi,0x4675eac9
  411556:	sub    edi,DWORD PTR [esi]
  411558:	cmp    al,0x4e
  41155a:	out    0x36,al
  41155c:	add    al,0x80
  41155e:	loope  0x411582
  411560:	and    al,0xc5
  411562:	mov    DWORD PTR [eax+0x35e60845],ebx
  411568:	jle    0x4114fd
  41156a:	jno    0x411548
  41156c:	scas   eax,DWORD PTR es:[edi]
  41156d:	js     0x411532
  41156f:	xchg   ecx,eax
  411570:	cmp    ebp,eax
  411572:	adc    BYTE PTR [ebp-0xf],cl
  411575:	mov    dh,0x8e
  411577:	mov    al,ds:0x436e5fe0
  41157c:	rcr    BYTE PTR [eax-0x7ec66987],cl
  411582:	(bad)  
  411583:	or     al,0x72
  411585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411586:	dec    edi
  411587:	xor    ah,BYTE PTR [eax-0x60]
  41158a:	fs stos DWORD PTR es:[edi],eax
  41158c:	or     DWORD PTR [eax+0x2c],edx
  41158f:	jo     0x411515
  411591:	pop    esi
  411592:	and    eax,0x305cab98
  411597:	add    BYTE PTR [ebp-0x1a43ae43],0x4e
  41159e:	jo     0x4115d9
  4115a0:	xor    al,0x59
  4115a2:	sbb    eax,0xee3f3859
  4115a7:	dec    edi
  4115a8:	jg     0x411570
  4115aa:	scas   eax,DWORD PTR es:[edi]
  4115ab:	push   es
  4115ac:	push   eax
  4115ad:	fwait
  4115ae:	jp     0x4115dd
  4115b0:	mov    gs,WORD PTR [eax]
  4115b2:	loope  0x411621
  4115b4:	and    esi,eax
  4115b6:	and    al,0xde
  4115b8:	dec    ebx
  4115b9:	addr16 shl esi,0x39
  4115bd:	ret    0xc585
  4115c0:	retf   
  4115c1:	popa   
  4115c2:	pop    edi
  4115c3:	repnz test eax,0x567a504e
  4115c9:	xor    BYTE PTR [esi],dh
  4115cb:	and    al,0xe9
  4115cd:	and    esi,DWORD PTR [ebx-0x492ef62c]
  4115d3:	pop    edi
  4115d4:	inc    ebp
  4115d5:	nop
  4115d6:	fnstsw WORD PTR [ebx+0xc497b19]
  4115dc:	retf   
  4115dd:	mov    ss,esp
  4115df:	rcl    BYTE PTR [edi-0x4c],0x5c
  4115e3:	adc    al,0xa3
  4115e5:	xor    bh,bl
  4115e7:	lods   eax,DWORD PTR ds:[esi]
  4115e8:	ret    0xa9d9
  4115eb:	pop    ds
  4115ec:	cmp    dl,BYTE PTR [esi+0x40]
  4115ef:	and    cl,dh
  4115f1:	sbb    al,0x20
  4115f3:	add    BYTE PTR [edx],ah
  4115f5:	inc    ebp
  4115f6:	test   DWORD PTR [ebp+esi*4+0x5c],ecx
  4115fa:	xchg   ecx,eax
  4115fb:	loop   0x4115ac
  4115fd:	and    BYTE PTR [eax+0x65],dh
  411600:	in     al,dx
  411601:	outs   dx,BYTE PTR ds:[esi]
  411602:	push   ebx
  411603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411604:	sub    eax,0xe4b91912
  411609:	es out dx,eax
  41160b:	ds sbb eax,0x61f88bee
  411611:	out    dx,al
  411612:	push   esp
  411613:	rol    DWORD PTR [esi],cl
  411615:	pop    ss
  411616:	dec    esi
  411617:	(bad)  
  411618:	sub    al,0xbf
  41161a:	and    cl,BYTE PTR [esi+0x2fd7dac4]
  411620:	cmp    eax,DWORD PTR [eax+0x11]
  411623:	and    dh,BYTE PTR [ebp+0x5f]
  411626:	ins    BYTE PTR es:[edi],dx
  411627:	mov    ah,0x9a
  411629:	scas   eax,DWORD PTR es:[edi]
  41162a:	shr    BYTE PTR [edx],1
  41162c:	xor    BYTE PTR [edi-0x6e],0xbd
  411630:	pushf  
  411631:	push   ds
  411632:	pop    ss
  411633:	sub    ecx,DWORD PTR [ecx-0x17]
  411636:	inc    edi
  411637:	adc    eax,0x1f2a437
  41163c:	mov    bl,0xd3
  41163e:	jg     0x4116a6
  411640:	ud0    esp,DWORD PTR [esi]
  411643:	inc    edi
  411644:	push   ebp
  411645:	mov    ds:0x2da0f2d7,eax
  41164a:	adc    al,0x83
  41164c:	sub    dl,BYTE PTR [ecx]
  41164e:	or     BYTE PTR [esi-0x5c0aad3],0xe1
  411655:	inc    ebx
  411656:	dec    ebp
  411657:	shl    DWORD PTR [ecx+0x29],0x2f
  41165b:	sub    BYTE PTR [eax],cl
  41165d:	jecxz  0x411664
  41165f:	sub    DWORD PTR [eax],0xccc8fb73
  411665:	les    edi,FWORD PTR [edi]
  411667:	ret    
  411668:	or     ah,BYTE PTR [eax+0x1904003f]
  41166e:	jae    0x4116a8
  411670:	cmp    DWORD PTR [ebx],ecx
  411672:	imul   esi,ebp,0x18
  411675:	scas   eax,DWORD PTR es:[edi]
  411676:	aad    0x4f
  411678:	sbb    edx,DWORD PTR [ebx-0x7f]
  41167b:	rcl    BYTE PTR [ebx],1
  41167d:	or     BYTE PTR [esi-0x18a57b4e],ah
  411683:	adc    ah,ah
  411685:	bound  eax,QWORD PTR ds:0xecf376fa
  41168b:	cld    
  41168c:	jnp    0x411668
  41168e:	ret    
  41168f:	jne    0x4116d7
  411691:	push   eax
  411692:	mov    ch,0xb1
  411694:	xchg   ecx,eax
  411695:	ret    0xcf8d
  411698:	(bad)  
  411699:	adc    BYTE PTR [ebp+edi*1-0x1bf90932],bl
  4116a0:	popa   
  4116a1:	adc    ch,0x57
  4116a4:	lds    esi,FWORD PTR cs:[esi-0x7e9eb879]
  4116ab:	push   edx
  4116ac:	or     DWORD PTR [ebp+eax*2-0x48c992a9],eax
  4116b3:	lahf   
  4116b4:	sbb    dh,BYTE PTR [edx-0x59]
  4116b7:	lock jl 0x4116df
  4116ba:	cld    
  4116bb:	mov    dh,0x3b
  4116bd:	jnp    0x411661
  4116bf:	mov    bh,0x1f
  4116c1:	into   
  4116c2:	sub    DWORD PTR [ebp-0x4b],eax
  4116c5:	mov    ebp,0x865330d5
  4116ca:	jne    0x41173a
  4116cc:	cld    
  4116cd:	or     eax,0x74de5a78
  4116d2:	jb     0x41166e
  4116d4:	adc    esp,esp
  4116d6:	outs   dx,DWORD PTR ds:[esi]
  4116d7:	push   esp
  4116d8:	jge    0x411663
  4116da:	lods   al,BYTE PTR ds:[esi]
  4116db:	or     ch,BYTE PTR [ebx-0x45]
  4116de:	and    eax,0xd2e3e3ee
  4116e3:	scas   al,BYTE PTR es:[edi]
  4116e4:	mov    ch,0xc9
  4116e6:	xchg   esi,eax
  4116e7:	mov    esp,0xc0ab2dda
  4116ec:	or     eax,0x6a0022bb
  4116f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f2:	jmp    0xfd7e5d7
  4116f7:	mov    ds:0xe6f690b1,eax
  4116fc:	pop    edx
  4116fd:	stc    
  4116fe:	mov    ebx,0x12b8f54b
  411703:	fwait
  411704:	pop    ds
  411705:	xor    BYTE PTR [edi-0x5c],dh
  411708:	rcl    edi,1
  41170a:	pop    edi
  41170b:	fsubr  st(7),st
  41170d:	mov    ebx,ecx
  41170f:	test   eax,0x61b56ba0
  411714:	cmp    eax,0xa2841e52
  411719:	rol    BYTE PTR [ecx+0x4c],cl
  41171c:	pop    ebx
  41171d:	dec    edx
  41171e:	pop    ebx
  41171f:	pop    edx
  411720:	inc    ebp
  411721:	inc    esi
  411722:	mov    ah,BYTE PTR [edx]
  411724:	cmc    
  411725:	or     ebx,DWORD PTR [ebx+0x966213a]
  41172b:	in     al,0xac
  41172d:	sub    BYTE PTR [ebx+0x503d0f9c],ah
  411733:	adc    eax,0x1e5118ad
  411738:	mov    al,0xfe
  41173a:	(bad)  
  41173b:	retf   
  41173c:	push   0xde1fa097
  411741:	mov    al,0x4
  411743:	add    ch,BYTE PTR [ecx+esi*2-0x76de267a]
  41174a:	into   
  41174b:	int3   
  41174c:	cld    
  41174d:	jl     0x411768
  41174f:	hlt    
  411750:	aad    0x13
  411752:	int    0xa4
  411754:	mov    al,0x9d
  411756:	push   esi
  411757:	dec    ebp
  411758:	jmp    0xb3a653cf
  41175d:	cmp    edx,DWORD PTR [ebp-0x7]
  411760:	lahf   
  411761:	mov    edi,0x1ca8dba3
  411766:	mov    ds:0xb92694eb,al
  41176b:	rcl    eax,0x1b
  41176e:	push   es
  41176f:	hlt    
  411770:	test   BYTE PTR [eax-0x193a6f46],cl
  411776:	inc    edx
  411777:	ret    
  411778:	arpl   WORD PTR [ebx],di
  41177a:	iret   
  41177b:	test   DWORD PTR [edi+edx*1+0x73],ecx
  41177f:	hlt    
  411780:	arpl   WORD PTR [edi+0x33],cx
  411783:	ret    0x456a
  411786:	inc    edi
  411787:	lods   al,BYTE PTR ds:[esi]
  411788:	jecxz  0x411749
  41178a:	mov    edx,0x2cdd4cda
  41178f:	and    ebp,edx
  411791:	add    ch,BYTE PTR [eax-0x1b]
  411794:	cmp    edx,edi
  411796:	loope  0x41180c
  411798:	test   al,0x75
  41179a:	addr16 jns 0x411725
  41179d:	sbb    esi,ebp
  41179f:	call   0x8fa9:0xadcfe2b9
  4117a6:	jge    0x4117e6
  4117a8:	pop    ecx
  4117a9:	in     al,0x38
  4117ab:	std    
  4117ac:	sbb    ebx,esp
  4117ae:	push   cs
  4117af:	xor    al,0xac
  4117b1:	ins    BYTE PTR es:[edi],dx
  4117b2:	mov    dl,0x98
  4117b4:	xor    eax,DWORD PTR [esi]
  4117b6:	mov    edx,0xbe719abc
  4117bb:	mov    al,0x18
  4117bd:	(bad)  
  4117be:	mov    ds:0x9e32ac36,eax
  4117c3:	es aam 0xae
  4117c6:	xchg   dl,ah
  4117c8:	mov    ch,dl
  4117ca:	cmovp  esi,DWORD PTR [edx+0x3]
  4117ce:	cmp    eax,0x9cd1b0c9
  4117d3:	rcr    cl,1
  4117d5:	jne    0x411789
  4117d7:	cmove  eax,DWORD PTR [edx]
  4117da:	mov    eax,ds:0x18c89bf
  4117df:	frstor [edx+0x7c]
  4117e2:	aam    0xb0
  4117e4:	not    BYTE PTR [ebx+0x3e]
  4117e7:	hlt    
  4117e8:	cmp    al,0x7
  4117ea:	sbb    edx,ebp
  4117ec:	les    ebp,FWORD PTR [eax+0x1e]
  4117ef:	in     eax,0x9d
  4117f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f2:	pusha  
  4117f3:	aad    0x17
  4117f5:	mov    cl,0x90
  4117f7:	mov    bl,0x0
  4117f9:	mov    ch,0xf3
  4117fb:	ret    
  4117fc:	jge    0x4117de
  4117fe:	adc    edx,DWORD PTR [edi-0xf028a01]
  411804:	repz xchg ebx,eax
  411806:	cmp    dl,dh
  411808:	jb     0x411797
  41180a:	inc    ebp
  41180b:	mov    ds:0xdc1e3520,al
  411810:	test   BYTE PTR [edx+0x4d],0xcd
  411814:	xor    DWORD PTR [ebp+ebp*2-0x451d8b4d],ebp
  41181b:	aas    
  41181c:	pop    ecx
  41181d:	cwde   
  41181e:	rol    ch,1
  411820:	mov    dl,0x91
  411822:	dec    esp
  411823:	loope  0x4117ea
  411825:	jae    0x411873
  411827:	add    BYTE PTR [esi],dl
  411829:	es imul esi,ecx,0xffffff99
  41182d:	jo     0x4117cb
  41182f:	or     dh,BYTE PTR [eax-0x2f]
  411832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411833:	fwait
  411834:	fs fs in eax,dx
  411837:	in     al,dx
  411838:	xchg   esp,eax
  411839:	sub    BYTE PTR [esi-0x3b],al
  41183c:	mov    ebx,0xf9175aa1
  411841:	add    esp,esp
  411843:	addr16 xor al,0xc4
  411846:	pop    esp
  411847:	ret    
  411848:	push   ebx
  411849:	pcmpgtd mm1,mm0
  41184c:	out    0x89,eax
  41184e:	jnp    0x411818
  411850:	cdq    
  411851:	push   0x4847e209
  411856:	jmp    0xf5e53854
  41185b:	(bad)  
  41185c:	pop    ds
  41185d:	scas   eax,DWORD PTR es:[edi]
  41185e:	sub    eax,0x8579a6e4
  411863:	inc    esi
  411864:	fwait
  411865:	call   0xbf68:0x48dbe09e
  41186c:	cmp    ecx,DWORD PTR [edi+ecx*2-0x43159145]
  411873:	and    DWORD PTR [edx+esi*2-0x71],esi
  411877:	sub    cl,dl
  411879:	push   ecx
  41187a:	dec    eax
  41187b:	mov    bh,bh
  41187d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187e:	mov    cl,0x6
  411880:	lea    esi,[esi+0x52]
  411883:	ret    
  411884:	jnp    0x4118c7
  411886:	push   ecx
  411887:	mov    WORD PTR [edi-0x2d],?
  41188a:	shr    BYTE PTR [edx+0x3e],1
  41188d:	fs int3 
  41188f:	lods   eax,DWORD PTR ds:[esi]
  411890:	aam    0x7
  411892:	sbb    eax,0x9e09cdb5
  411897:	or     BYTE PTR [esp+esi*1],0xdd
  41189b:	ss fs scas al,BYTE PTR es:[edi]
  41189e:	aaa    
  41189f:	xchg   esi,eax
  4118a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a1:	jmp    0xb8f6:0xffdceaa5
  4118a8:	fs push ebp
  4118aa:	arpl   WORD PTR [edx+0x2bfcf807],ax
  4118b0:	xchg   esp,eax
  4118b1:	or     ah,BYTE PTR [edi-0x6b6e2cc6]
  4118b7:	adc    cl,0xf8
  4118ba:	or     eax,0x5b3e1870
  4118bf:	out    0x3,al
  4118c1:	jp     0x4118b1
  4118c3:	pop    ebx
  4118c4:	sbb    BYTE PTR [ecx+0x94cbac9],bl
  4118ca:	fbld   TBYTE PTR [ebx]
  4118cc:	ds aas 
  4118ce:	push   0x1d
  4118d0:	popf   
  4118d1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4118d3:	stos   DWORD PTR es:[edi],eax
  4118d4:	mov    ds:0x6cad573e,al
  4118d9:	or     al,BYTE PTR [eax]
  4118db:	xchg   ebx,eax
  4118dc:	enter  0xeaca,0x76
  4118e0:	into   
  4118e1:	neg    DWORD PTR [ebx]
  4118e3:	sbb    BYTE PTR [bx+di+0x272f],0x90
  4118e9:	or     eax,0xd5beeec
  4118ee:	nop
  4118ef:	retf   0xc0e
  4118f2:	push   edi
  4118f3:	push   ebp
  4118f4:	cwde   
  4118f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f6:	fsub   QWORD PTR [esi+ecx*4]
  4118f9:	push   ds
  4118fa:	push   0xd499f96e
  4118ff:	jg     0x411975
  411901:	out    0x33,eax
  411903:	ret    
  411904:	xchg   edi,eax
  411905:	adc    eax,0x3be6f649
  41190a:	jns    0x411905
  41190c:	jo     0x411975
  41190e:	mov    eax,0xa7eaab45
  411913:	pop    ebx
  411914:	jecxz  0x411903
  411916:	pop    ss
  411917:	mov    edi,0x8595e6e5
  41191c:	or     eax,DWORD PTR [esi+ebx*1-0x12]
  411920:	mov    ss,WORD PTR [ebx+0xd]
  411923:	lea    ebx,[edi-0x40b5d18a]
  411929:	icebp  
  41192a:	xchg   edx,eax
  41192b:	pop    es
  41192c:	lods   al,BYTE PTR ds:[esi]
  41192d:	pusha  
  41192e:	inc    esi
  41192f:	pop    dx
  411931:	scas   al,BYTE PTR es:[edi]
  411932:	sbb    edx,DWORD PTR [edx-0x5b]
  411935:	mov    dl,0x4f
  411937:	(bad)  
  411938:	xor    al,0xb3
  41193a:	rcr    DWORD PTR [eax],1
  41193c:	add    DWORD PTR [esi-0x36e205ed],eax
  411942:	std    
  411943:	aas    
  411944:	push   eax
  411945:	sbb    BYTE PTR [edi+edx*2+0x4d],dh
  411949:	fstp   QWORD PTR ds:0xa9a3c92e
  41194f:	mov    edi,0x998ea725
  411954:	add    bl,BYTE PTR [esp+eax*8]
  411957:	lock out 0x27,eax
  41195a:	inc    ebp
  41195b:	xchg   esp,eax
  41195c:	add    eax,0x8a3d2688
  411961:	pusha  
  411962:	or     eax,0xf1149a1a
  411967:	and    al,0xb4
  411969:	push   0xffffffb5
  41196b:	lds    esp,FWORD PTR [esi]
  41196d:	jmp    0xb65ea060
  411972:	xchg   ebp,eax
  411973:	or     ah,BYTE PTR [edx-0x5659c78a]
  411979:	cmc    
  41197a:	add    edx,0x2f
  41197d:	lea    edi,[ebx+0xc]
  411980:	mov    esp,0xece50504
  411985:	jmp    0x6f99:0xc541023b
  41198c:	cmp    al,BYTE PTR [eax+ebx*2]
  41198f:	xor    eax,0xcbd6cd91
  411994:	sbb    dl,BYTE PTR [ebp-0x733c5868]
  41199a:	lea    ebx,[eax]
  41199c:	jl     0x41192e
  41199e:	cld    
  41199f:	retf   0xd812
  4119a2:	out    dx,al
  4119a3:	out    dx,al
  4119a4:	jmp    0x75b4:0x48ba1f62
  4119ab:	mov    ecx,0x68d3b1f8
  4119b0:	mov    bh,0x5
  4119b2:	das    
  4119b3:	or     BYTE PTR [ecx],ch
  4119b5:	dec    esp
  4119b6:	aad    0xeb
  4119b8:	fwait
  4119b9:	aas    
  4119ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bb:	sbb    edi,DWORD PTR [edx]
  4119bd:	add    eax,0xe8565831
  4119c2:	out    dx,al
  4119c3:	mov    cl,0xbc
  4119c5:	pop    ecx
  4119c6:	push   ds
  4119c7:	stc    
  4119c8:	xor    ecx,DWORD PTR [esi-0x42ea8b84]
  4119ce:	gs test al,0xaa
  4119d1:	and    eax,0x530cba58
  4119d6:	ficom  WORD PTR [ebx-0x6c]
  4119d9:	rcr    BYTE PTR gs:[ebx],0x3f
  4119dd:	ret    
  4119de:	push   edx
  4119df:	jnp    0x411a32
  4119e1:	sub    eax,0x4185f1ab
  4119e6:	repnz or dl,BYTE PTR [esi+ebx*2+0x34]
  4119eb:	aad    0xf3
  4119ed:	mov    ds:0x7981b30,al
  4119f2:	shr    DWORD PTR [eax-0x80],0x9c
  4119f6:	fwait
  4119f7:	xor    eax,0xab304423
  4119fc:	and    BYTE PTR [ebx+0x6350fd28],ah
  411a02:	dec    esi
  411a03:	pop    ebp
  411a04:	outs   dx,BYTE PTR ds:[esi]
  411a05:	(bad)  [ebx]
  411a07:	loope  0x411a1f
  411a09:	cmp    al,BYTE PTR [edi-0x58]
  411a0c:	ret    
  411a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0e:	sbb    BYTE PTR [ecx+ebp*4-0x43],cl
  411a12:	sub    dl,BYTE PTR [eax+0xa45309]
  411a18:	push   es
  411a19:	or     dl,dh
  411a1b:	pop    ds
  411a1c:	cwde   
  411a1d:	or     esi,DWORD PTR [eax-0x62f840df]
  411a23:	mov    bl,0x97
  411a25:	mov    BYTE PTR [ecx-0x49e628fa],ah
  411a2b:	dec    edi
  411a2c:	xchg   ebx,eax
  411a2d:	cmp    al,BYTE PTR [edi+ecx*8]
  411a30:	sbb    al,0x46
  411a32:	shl    DWORD PTR [eax],cl
  411a34:	into   
  411a35:	or     ah,BYTE PTR [edx]
  411a37:	call   ecx
  411a39:	ins    DWORD PTR es:[edi],dx
  411a3a:	outs   dx,DWORD PTR ds:[esi]
  411a3b:	loopne 0x411a6e
  411a3d:	out    0xbe,al
  411a3f:	pop    eax
  411a40:	icebp  
  411a41:	arpl   sp,si
  411a43:	je     0x411a8d
  411a45:	xchg   DWORD PTR ds:0x8b6c40ad,eax
  411a4b:	pop    esp
  411a4c:	in     eax,dx
  411a4d:	and    BYTE PTR [eax+0x63],cl
  411a50:	mov    WORD PTR [edx+0x13f3180c],ss
  411a56:	int    0x96
  411a58:	add    DWORD PTR [ebp+0x54],edx
  411a5b:	or     ebp,DWORD PTR [ebp+0x69614948]
  411a61:	arpl   WORD PTR [edi+0x27],bp
  411a64:	jge    0x4119f2
  411a66:	test   DWORD PTR [ebp+0x57f8f057],ecx
  411a6c:	inc    esp
  411a6d:	out    0xf7,al
  411a6f:	push   cs
  411a70:	sti    
  411a71:	jmp    0x6a35:0xe9ef182f
  411a78:	in     eax,dx
  411a79:	xlat   BYTE PTR ds:[ebx]
  411a7a:	mov    ah,0x1
  411a7c:	out    0xb4,eax
  411a7e:	(bad)  
  411a7f:	stc    
  411a80:	mov    al,ds:0x7243bc70
  411a85:	and    al,0x9a
  411a87:	pop    esi
  411a88:	adc    al,0xf6
  411a8a:	je     0x411b09
  411a8c:	mov    eax,0x7cc4ef20
  411a91:	(bad)  
  411a92:	out    0x80,al
  411a94:	jp     0x411b15
  411a96:	loopne 0x411a7f
  411a98:	push   0x3fdfdaa1
  411a9d:	mov    ?,WORD PTR [eax+0x47]
  411aa0:	popf   
  411aa1:	push   0x9c433578
  411aa6:	dec    esi
  411aa7:	pusha  
  411aa8:	mov    ds:0x9eb2839c,al
  411aad:	adc    ebp,DWORD PTR [ebx-0x30]
  411ab0:	or     eax,0x619ad18b
  411ab5:	push   0x7d
  411ab7:	jg     0x411a89
  411ab9:	jae    0x411aac
  411abb:	adc    al,0xdd
  411abd:	mov    eax,ds:0x8d69f691
  411ac2:	imul   ecx,DWORD PTR [eax-0x71],0xfffffffc
  411ac6:	loopne 0x411b36
  411ac8:	jecxz  0x411a88
  411aca:	sbb    eax,0xcb80623b
  411acf:	gs mov ah,0x89
  411ad2:	pop    es
  411ad3:	jne    0x411a6d
  411ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad6:	out    0xd3,al
  411ad8:	int3   
  411ad9:	mov    ecx,0xff697ce3
  411ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411adf:	mov    eax,0x7e5c2ba1
  411ae4:	pop    ds
  411ae5:	daa    
  411ae6:	lahf   
  411ae7:	mov    ebx,0x99c3c970
  411aec:	mov    cl,0x2c
  411aee:	fst    st(2)
  411af0:	mov    bh,0xb4
  411af2:	int3   
  411af3:	loopne 0x411ae8
  411af5:	add    eax,0xc4bb795a
  411afa:	dec    edx
  411afb:	arpl   WORD PTR [edi-0x9],cx
  411afe:	in     eax,0x77
  411b00:	push   edi
  411b01:	xlat   BYTE PTR ds:[ebx]
  411b02:	iret   
  411b03:	mov    ?,ebp
  411b05:	pop    ebp
  411b06:	pusha  
  411b07:	or     DWORD PTR [edi],ebx
  411b09:	sbb    DWORD PTR [ecx],ecx
  411b0b:	icebp  
  411b0c:	test   eax,0xeaf9c71b
  411b11:	rcr    DWORD PTR [ebx+0x73],1
  411b14:	into   
  411b15:	jmp    0x521e:0xeff15898
  411b1c:	jecxz  0x411aa5
  411b1e:	mov    ebp,0xbf5c35ee
  411b23:	pop    ebp
  411b24:	scas   al,BYTE PTR es:[edi]
  411b25:	inc    ebx
  411b26:	(bad)  
  411b29:	mov    ecx,0x98ac81cd
  411b2e:	jp     0x411b57
  411b30:	cmp    al,0xfa
  411b32:	jecxz  0x411bae
  411b34:	cmp    al,0xf5
  411b36:	outs   dx,DWORD PTR ds:[esi]
  411b37:	gs inc esi
  411b39:	push   esp
  411b3a:	ja     0x411b02
  411b3c:	arpl   bx,bp
  411b3e:	retf   0x80bc
  411b41:	iret   
  411b42:	pop    es
  411b43:	or     eax,0x42b786c8
  411b48:	push   0xffffffc8
  411b4a:	enter  0xfc6b,0xc4
  411b4e:	das    
  411b4f:	and    al,0x3e
  411b51:	dec    ebp
  411b52:	outs   dx,BYTE PTR ds:[esi]
  411b53:	pop    edi
  411b54:	sti    
  411b55:	pop    eax
  411b56:	jae    0x411b9b
  411b58:	gs mov dh,0x2c
  411b5b:	xchg   edx,eax
  411b5c:	sub    BYTE PTR [esi+0x8c6efa],bh
  411b62:	jecxz  0x411b01
  411b64:	mov    dl,0x36
  411b66:	jns    0x411b57
  411b68:	jmp    0xb1c05113
  411b6d:	int3   
  411b6e:	repnz xchg ebx,eax
  411b70:	cmp    BYTE PTR ds:0xc49e01e4,ah
  411b76:	mov    eax,0x3c7ce1a6
  411b7b:	dec    ebp
  411b7c:	add    BYTE PTR [ecx+ebx*4+0x11],dh
  411b80:	adc    BYTE PTR [edx-0x73],dh
  411b83:	push   ecx
  411b84:	loope  0x411b19
  411b86:	ins    DWORD PTR es:[edi],dx
  411b87:	stos   DWORD PTR es:[edi],eax
  411b88:	mov    ah,0xac
  411b8a:	clc    
  411b8b:	pop    ebp
  411b8c:	jmp    0xfe8:0x85de8fec
  411b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b94:	mov    edi,0x9d7e358f
  411b99:	jno    0x411c06
  411b9b:	or     BYTE PTR [eax+0x7389ba2d],bl
  411ba1:	sbb    ecx,DWORD PTR [edx-0x5bf24485]
  411ba7:	in     al,dx
  411ba8:	cli    
  411ba9:	inc    edi
  411baa:	(bad)  
  411bab:	test   eax,0x529aef68
  411bb0:	xor    eax,0x3858856b
  411bb5:	cmp    edx,esp
  411bb7:	sbb    BYTE PTR [ecx+0x2a805e83],dh
  411bbd:	mov    ecx,0xfb46c517
  411bc2:	xchg   esi,eax
  411bc3:	xchg   al,dh
  411bc5:	cmp    BYTE PTR [ebx],bh
  411bc7:	and    BYTE PTR [ebx+ebp*8+0x46843fb],ch
  411bce:	inc    esp
  411bcf:	mov    ah,0xdb
  411bd1:	pop    esp
  411bd2:	mov    bl,0x9b
  411bd4:	ret    0x483d
  411bd7:	jmp    0xeae3:0x46d4ec3e
  411bde:	cmp    ch,cl
  411be0:	andnps xmm3,XMMWORD PTR [ebx]
  411be3:	cdq    
  411be4:	lds    ebp,FWORD PTR [eax-0x5b27b0fe]
  411bea:	dec    ebp
  411beb:	or     eax,0xd536b30d
  411bf0:	lods   al,BYTE PTR ds:[esi]
  411bf1:	push   es
  411bf2:	or     al,0x83
  411bf4:	and    DWORD PTR ds:0xd2b917a6,0x9a26dd48
  411bfe:	inc    esi
  411bff:	addr16 retf 0xa856
  411c03:	icebp  
  411c04:	inc    ecx
  411c05:	out    dx,eax
  411c06:	mov    edi,0xebc49d5d
  411c0b:	je     0x411c6f
  411c0d:	stos   BYTE PTR es:[edi],al
  411c0e:	jnp    0x411bec
  411c10:	int    0x3
  411c12:	(bad)
  411c15:	jmp    0x411c2f
  411c17:	push   edx
  411c18:	imul   esp,eax,0xffffff86
  411c1b:	push   ebx
  411c1c:	adc    bh,BYTE PTR [ebx]
  411c1e:	jb     0x411c61
  411c20:	jns    0x411ca1
  411c22:	add    edi,edx
  411c24:	vpcmpuw k1{k4}{z},xmm6,xmm1,0xc9
  411c2b:	cwde   
  411c2c:	hlt    
  411c2d:	std    
  411c2e:	cmp    ebp,DWORD PTR [ecx+0x66]
  411c31:	fsubr  QWORD PTR [eax+eax*8]
  411c34:	inc    esp
  411c35:	shl    DWORD PTR [edi+ebp*2],1
  411c38:	rcr    DWORD PTR [edx+0x614937ec],cl
  411c3e:	xchg   BYTE PTR [eax],al
  411c40:	icebp  
  411c41:	(bad)  
  411c42:	int    0x52
  411c44:	out    dx,eax
  411c45:	mov    ch,BYTE PTR [edi-0x2f15fcf4]
  411c4b:	jl     0x411c62
  411c4d:	dec    esi
  411c4e:	or     BYTE PTR [eax-0x59bed544],dl
  411c54:	lds    esp,FWORD PTR [ecx]
  411c56:	xchg   ebx,eax
  411c57:	add    al,0xdd
  411c59:	dec    edi
  411c5a:	sahf   
  411c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c5c:	mov    DWORD PTR [esi+ebx*8+0x38],eax
  411c60:	iret   
  411c61:	jo     0x411c8d
  411c63:	imul   eax,DWORD PTR [edi+edi*8-0x7c],0x1b
  411c68:	fimul  WORD PTR [esi+0x3c]
  411c6b:	add    eax,0xb1a04fca
  411c70:	cmc    
  411c71:	outs   dx,BYTE PTR ds:[esi]
  411c72:	adc    BYTE PTR [ebp-0x2845d1fa],0x1
  411c79:	lods   eax,DWORD PTR ds:[esi]
  411c7a:	lods   al,BYTE PTR ds:[esi]
  411c7b:	adc    DWORD PTR [edx-0x74],0xffffffbb
  411c7f:	rcr    edx,0xf7
  411c82:	add    al,0x38
  411c84:	mov    dl,0x58
  411c86:	dec    edi
  411c87:	(bad)  
  411c88:	fs stos DWORD PTR es:[edi],eax
  411c8a:	and    bl,BYTE PTR [ecx+0x38a4d5b3]
  411c90:	xor    DWORD PTR [edi+eax*4+0x34],ebx
  411c94:	push   esi
  411c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c96:	(bad)  
  411c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c98:	stc    
  411c99:	lahf   
  411c9a:	ret    
  411c9b:	jae    0x411c8e
  411c9d:	mov    ebp,DWORD PTR [edi-0x7487e009]
  411ca3:	mov    bl,0xf
  411ca5:	pusha  
  411ca6:	pushf  
  411ca7:	inc    eax
  411ca8:	call   0xbc5e:0xc4f1c0b
  411caf:	push   es
  411cb0:	add    dh,BYTE PTR [ebx]
  411cb2:	cdq    
  411cb3:	in     al,dx
  411cb4:	inc    esp
  411cb5:	sbb    al,0x31
  411cb7:	sub    DWORD PTR ds:0x2ac6cb78,ebp
  411cbd:	mov    ch,BYTE PTR [eax+0x18]
  411cc0:	fldenv [eax+0x39e977ea]
  411cc6:	and    ebx,DWORD PTR [eax+0x60d9e7f7]
  411ccc:	or     ah,bh
  411cce:	mov    dh,0x3e
  411cd0:	cmp    dl,BYTE PTR [ebp+0x44ff7a20]
  411cd6:	push   cs
  411cd7:	push   0x4f07ba48
  411cdc:	ja     0x411cf2
  411cde:	sar    BYTE PTR [edi+0x14],cl
  411ce1:	mov    edi,0x3ae1caa5
  411ce6:	test   BYTE PTR [ecx-0x3aa6dfa9],bl
  411cec:	lahf   
  411ced:	out    0x1c,al
  411cef:	mov    ds:0xe40311ba,eax
  411cf4:	or     DWORD PTR [ebx+0x2bfdd8b2],edi
  411cfa:	push   ecx
  411cfb:	shr    DWORD PTR [edi+eiz*1],1
  411cfe:	cmp    BYTE PTR ds:0x21701c7b,ah
  411d04:	fwait
  411d05:	xchg   esi,eax
  411d06:	inc    edi
  411d07:	cli    
  411d08:	and    BYTE PTR [ecx+0x3bbb5a5],ch
  411d0e:	aaa    
  411d0f:	mov    eax,ds:0x35a70e75
  411d14:	dec    ebp
  411d15:	and    eax,0x61fc6864
  411d1a:	aam    0xf5
  411d1c:	jle    0x411d65
  411d1e:	inc    edi
  411d1f:	adc    ebx,DWORD PTR [ecx-0x3b]
  411d22:	mov    ecx,0x1941fd39
  411d27:	sti    
  411d28:	loope  0x411d8a
  411d2a:	pop    es
  411d2b:	stos   DWORD PTR es:[edi],eax
  411d2c:	call   0x7cdac889
  411d31:	out    0xf5,al
  411d33:	pop    eax
  411d34:	cmp    al,0x17
  411d36:	imul   esp,ebx,0x90e8376c
  411d3c:	inc    esi
  411d3d:	ins    DWORD PTR es:[edi],dx
  411d3e:	int3   
  411d3f:	fmul   DWORD PTR [esi+ebx*8+0x59]
  411d43:	sub    edi,DWORD PTR [eax]
  411d45:	mov    al,ds:0x57e8208
  411d4a:	lods   al,BYTE PTR ds:[esi]
  411d4b:	shl    DWORD PTR [edi],cl
  411d4d:	xor    bh,bh
  411d4f:	jbe    0x411cd5
  411d51:	cmp    DWORD PTR [edx-0x56ab4564],eax
  411d57:	js     0x411d38
  411d59:	lock ret 
  411d5b:	lahf   
  411d5c:	inc    edx
  411d5d:	mov    esi,0x66d6e163
  411d62:	lock fsub DWORD PTR [eax+0x1f]
  411d66:	loopne 0x411dba
  411d68:	loope  0x411d35
  411d6a:	(bad)  
  411d6b:	repz dec esp
  411d6d:	ret    0x19d4
  411d70:	sahf   
  411d71:	mov    ecx,0x32aa259b
  411d76:	mov    esp,0x5f7d4b23
  411d7b:	js     0x411d26
  411d7d:	mov    ah,0x2
  411d7f:	or     al,0xcf
  411d81:	call   0xd55fa78b
  411d86:	pop    DWORD PTR [eax+0x8]
  411d89:	inc    esi
  411d8a:	push   esp
  411d8b:	xor    eax,0xcb74d1f4
  411d90:	sbb    DWORD PTR ds:0x56c59815,edi
  411d96:	mov    ebp,edx
  411d98:	mov    cl,0xe
  411d9a:	shl    BYTE PTR [edi+0xfb537e],cl
  411da0:	cmp    al,ah
  411da2:	sbb    eax,0xadcc8701
  411da7:	je     0x411dad
  411da9:	mov    eax,ds:0x3ad3fa3
  411dae:	ret    
  411daf:	test   BYTE PTR [edx+0x4fcc9104],dh
  411db5:	fimul  WORD PTR [esi-0x4b]
  411db8:	pushf  
  411db9:	adc    edx,ebp
  411dbb:	mov    bh,0x7b
  411dbd:	cwde   
  411dbe:	cli    
  411dbf:	jmp    0x1682:0xd402ec27
  411dc6:	dec    eax
  411dc7:	retf   
  411dc8:	xchg   edi,eax
  411dc9:	sbb    bh,BYTE PTR [ecx]
  411dcb:	cmp    BYTE PTR [ebp+0x46],0x18
  411dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd0:	dec    esp
  411dd1:	mov    eax,ds:0x19104524
  411dd6:	repnz lahf 
  411dd8:	aam    0x65
  411dda:	adc    BYTE PTR [ecx-0x625afee8],dl
  411de0:	adc    ebx,esi
  411de2:	ss push ebx
  411de4:	xchg   ecx,eax
  411de5:	inc    esi
  411de6:	rol    DWORD PTR [ebx-0x47],1
  411de9:	add    ebx,DWORD PTR ds:0xf7987708
  411def:	es mov dx,0xdbd5
  411df4:	push   edi
  411df5:	xchg   ebx,eax
  411df6:	adc    al,0x1c
  411df8:	mov    al,0x26
  411dfa:	mov    ss:0x53c94ee6,eax
  411e00:	or     esp,ecx
  411e02:	je     0x411e0d
  411e04:	aam    0x65
  411e06:	cmp    DWORD PTR [edi-0x126627d5],esi
  411e0c:	fidiv  DWORD PTR [ebp-0x463f6cd]
  411e12:	dec    edi
  411e13:	push   0xebc482a3
  411e18:	and    al,0x6e
  411e1a:	outs   dx,DWORD PTR ds:[esi]
  411e1b:	pop    ds
  411e1c:	sub    al,cl
  411e1e:	into   
  411e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e20:	stos   BYTE PTR es:[edi],al
  411e21:	mov    cl,0x3
  411e23:	and    BYTE PTR [eax+0x648bdde6],dl
  411e29:	pop    esi
  411e2a:	stos   BYTE PTR es:[edi],al
  411e2b:	scas   eax,DWORD PTR es:[edi]
  411e2c:	sub    esi,edi
  411e2e:	in     eax,0x6e
  411e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e31:	mov    esp,ebx
  411e33:	inc    ebp
  411e34:	push   ecx
  411e35:	cwde   
  411e36:	jp     0x411e35
  411e38:	xchg   esp,eax
  411e39:	fild   QWORD PTR [eax]
  411e3b:	jge    0x411e44
  411e3d:	adc    al,BYTE PTR [ebp+0x512334e9]
  411e43:	ret    
  411e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e45:	scas   al,BYTE PTR es:[edi]
  411e46:	xlat   BYTE PTR ds:[ebx]
  411e47:	add    DWORD PTR [eax],esi
  411e49:	int    0x7f
  411e4b:	ror    BYTE PTR [esi+0x1c],0xaa
  411e4f:	mov    gs,WORD PTR [ebx+0x1a13807]
  411e55:	lds    eax,FWORD PTR [esi-0xa2d8dad]
  411e5b:	mov    ch,0xf1
  411e5d:	adc    eax,0x5f455a78
  411e62:	ins    BYTE PTR es:[edi],dx
  411e63:	and    edi,ebp
  411e65:	idiv   DWORD PTR [edi-0x12]
  411e68:	sub    al,0xff
  411e6a:	frstor [ebx-0x70e8c1d9]
  411e70:	mov    al,ds:0x8721061c
  411e75:	pop    ss
  411e76:	pop    edx
  411e77:	inc    ecx
  411e78:	mov    al,0x79
  411e7a:	lahf   
  411e7b:	jae    0x411e27
  411e7d:	sub    bl,BYTE PTR [ecx-0x14]
  411e80:	push   cs
  411e81:	mov    al,0xf
  411e83:	adc    DWORD PTR [ecx+0x5a],edi
  411e86:	jbe    0x411e4e
  411e88:	pop    ebx
  411e89:	das    
  411e8a:	pushf  
  411e8b:	mov    dl,0x78
  411e8d:	cmp    DWORD PTR [ebx+0x1e],esi
  411e90:	adc    DWORD PTR [ecx-0x76],eax
  411e93:	sti    
  411e94:	jmp    0xa791:0xf0f7a911
  411e9b:	test   ecx,esp
  411e9d:	loop   0x411e3d
  411e9f:	or     BYTE PTR [esi+0x699abf4b],dh
  411ea5:	in     eax,0x97
  411ea7:	mov    bl,0x3e
  411ea9:	fidivr WORD PTR [edx-0x59]
  411eac:	push   0xffffffbb
  411eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eaf:	or     al,0xe7
  411eb1:	lea    eax,[ecx-0x4174d431]
  411eb7:	loopne 0x411f04
  411eb9:	imul   edx,DWORD PTR [ebx+0x281b0527],0x5
  411ec0:	dec    edx
  411ec1:	sahf   
  411ec2:	jmp    FWORD PTR [esp+esi*4+0x396b52b8]
  411ec9:	mov    esp,0x77096d7
  411ece:	and    bl,BYTE PTR ss:[eax-0x27]
  411ed2:	cmc    
  411ed3:	jl     0x411f01
  411ed5:	xchg   esp,eax
  411ed6:	pop    ax
  411ed8:	sbb    cl,BYTE PTR [eax+eiz*8+0x7884ea46]
  411edf:	outs   dx,BYTE PTR ds:[esi]
  411ee0:	push   ebp
  411ee1:	sbb    al,0x78
  411ee3:	bound  edx,QWORD PTR [ebx-0x43]
  411ee6:	jp     0x411f18
  411ee8:	scas   al,BYTE PTR es:[edi]
  411ee9:	push   0xffffffaf
  411eeb:	add    ah,BYTE PTR gs:[edx+edi*4]
  411eef:	out    0x3,eax
  411ef1:	adc    bh,BYTE PTR [ecx+0x291db517]
  411ef7:	mov    ah,0x3c
  411ef9:	dec    esi
  411efa:	push   edi
  411efb:	jmp    0x411e8c
  411efd:	outs   dx,BYTE PTR ds:[esi]
  411efe:	test   DWORD PTR [eax+0x15c96a98],0x2456a5af
  411f08:	fdivrp st(5),st
  411f0a:	mov    eax,ds:0x34219357
  411f0f:	mov    al,0x80
  411f11:	cmp    DWORD PTR [edx+0x77],edi
  411f14:	jge    0x411f78
  411f16:	inc    edi
  411f17:	push   edi
  411f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f19:	adc    eax,0x42421be9
  411f1e:	stc    
  411f1f:	cmp    eax,0x659377c4
  411f24:	adc    BYTE PTR [ebx+0x4f],ah
  411f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f29:	xor    esi,eax
  411f2b:	push   0x33
  411f2d:	fsub   DWORD PTR [ebx+edi*2-0x447abea3]
  411f34:	sub    bl,BYTE PTR [ebp-0x42b0778a]
  411f3a:	sub    ch,al
  411f3c:	cmp    DWORD PTR [esi],edi
  411f3e:	dec    esi
  411f3f:	xchg   DWORD PTR [ecx-0x67bfebd2],edx
  411f45:	repz (bad) 
  411f47:	jge    0x411f49
  411f49:	dec    ebx
  411f4a:	popf   
  411f4b:	clc    
  411f4c:	pushf  
  411f4d:	mov    cl,0x8c
  411f4f:	cmp    eax,0xdec2bce0
  411f54:	jae    0x411f7a
  411f56:	xor    cl,al
  411f58:	stc    
  411f59:	ins    BYTE PTR es:[edi],dx
  411f5a:	outs   dx,BYTE PTR ds:[esi]
  411f5b:	cmp    al,0x88
  411f5d:	test   al,0x14
  411f5f:	daa    
  411f60:	mov    ah,0xcb
  411f62:	push   ds
  411f63:	push   ebx
  411f64:	pop    ss
  411f65:	cmp    ebx,esp
  411f67:	mov    ah,0xa9
  411f69:	and    DWORD PTR [eax],ecx
  411f6b:	xchg   ecx,eax
  411f6c:	push   ecx
  411f6d:	arpl   WORD PTR [eax-0x6bb1628d],si
  411f73:	outs   dx,BYTE PTR ds:[esi]
  411f74:	out    dx,eax
  411f75:	retf   0x9af
  411f78:	mov    ds:0x8dec59fa,eax
  411f7d:	clc    
  411f7e:	addr16 pop ss
  411f80:	pop    es
  411f81:	gs pusha 
  411f83:	mov    ds:0x45953f47,al
  411f88:	jmp    0x3ce4:0x3191e7e6
  411f8f:	js     0x411ff1
  411f91:	fisttp QWORD PTR [ebp-0x2f6156b5]
  411f97:	pop    es
  411f98:	mov    ebp,0x823eea28
  411f9d:	fst    DWORD PTR [esi+0x3bf6244]
  411fa3:	dec    DWORD PTR ds:0x58f608d5
  411fa9:	xchg   BYTE PTR ds:[ebx],dh
  411fac:	xchg   edx,eax
  411fad:	mov    ecx,ecx
  411faf:	pop    ebx
  411fb0:	in     eax,dx
  411fb1:	shl    eax,1
  411fb3:	dec    esp
  411fb4:	arpl   dx,di
  411fb6:	mov    WORD PTR [esi+0x1],ss
  411fb9:	dec    edx
  411fba:	xchg   al,dh
  411fbc:	mov    edx,0x27b58bc8
  411fc1:	dec    edx
  411fc2:	cdq    
  411fc3:	mov    BYTE PTR [ecx-0x63],ah
  411fc6:	and    eax,0x73a2f6bf
  411fcb:	mov    edi,DWORD PTR [esi-0x46]
  411fce:	mov    dl,0xec
  411fd0:	into   
  411fd1:	popa   
  411fd2:	push   edi
  411fd3:	fcomp  st(2)
  411fd5:	popf   
  411fd6:	(bad)  
  411fd7:	pushf  
  411fd8:	shl    edi,cl
  411fda:	xor    DWORD PTR [ebp+0xc],0xffffffd5
  411fde:	shl    DWORD PTR [ebx],cl
  411fe0:	dec    edx
  411fe1:	loopne 0x411f78
  411fe3:	ret    
  411fe4:	inc    bx
  411fe6:	ret    
  411fe7:	lds    ebx,FWORD PTR [edx]
  411fe9:	xchg   edi,eax
  411fea:	fidivr DWORD PTR [bx]
  411fed:	pop    edx
  411fee:	loope  0x412047
  411ff0:	cmp    DWORD PTR [esp+ecx*8-0x1c],ecx
  411ff4:	clc    
  411ff5:	scas   eax,DWORD PTR es:[edi]
  411ff6:	jns    0x41202c
  411ff8:	into   
  411ff9:	mov    ds:0xb13b47be,eax
  411ffe:	xchg   ecx,eax
  411fff:	cwde   
  412000:	into   
  412001:	jmp    0x330a:0x4c46245c
  412008:	ret    
  412009:	inc    edi
  41200a:	jb     0x41205e
  41200c:	inc    esp
  41200d:	cmp    ah,al
  41200f:	repz mov ebx,0xe08166c4
  412015:	sbb    esp,edx
  412017:	pop    es
  412018:	dec    ebp
  412019:	and    al,dh
  41201b:	test   DWORD PTR [edx],ecx
  41201d:	add    BYTE PTR [eax],dl
  41201f:	add    BYTE PTR [esi-0x4598e0fa],cl
  412025:	mov    bh,0xe0
  412027:	mov    cl,0x1c
  412029:	(bad)  
  41202a:	mov    dl,0xf5
  41202c:	imul   ecx,edi,0x6bda64e9
  412032:	mov    ecx,0xbb425652
  412037:	scas   eax,DWORD PTR es:[edi]
  412038:	push   edi
  412039:	scas   eax,DWORD PTR es:[edi]
  41203a:	adc    DWORD PTR [ecx+0x6f],0x71
  41203e:	mov    gs,WORD PTR [edi+0x36]
  412041:	retf   0xeffd
  412044:	js     0x412001
  412046:	dec    ebx
  412047:	sahf   
  412048:	int    0xa2
  41204a:	cmp    eax,0xf5d50154
  41204f:	push   eax
  412050:	lea    esp,[edx]
  412052:	dec    edx
  412053:	mov    ch,0x38
  412055:	mov    ecx,0xdb37cc6d
  41205a:	test   BYTE PTR [esi+0x5fb5e7a5],bh
  412060:	imul   esp,ebp,0xffffffb6
  412063:	xchg   ebp,eax
  412064:	cdq    
  412065:	aad    0x1a
  412067:	aaa    
  412068:	stos   BYTE PTR es:[edi],al
  412069:	out    0x70,al
  41206b:	(bad)  
  41206d:	scas   eax,DWORD PTR es:[edi]
  41206e:	neg    BYTE PTR [edx-0x48]
  412071:	jg     0x412089
  412073:	dec    esp
  412074:	pop    eax
  412075:	shl    ch,0xb3
  412078:	stos   BYTE PTR es:[edi],al
  412079:	cld    
  41207a:	jmp    0x412065
  41207c:	xchg   esi,eax
  41207d:	push   eax
  41207e:	or     al,0xe2
  412080:	(bad)  
  412081:	adc    BYTE PTR [ebp+0x51],0xb3
  412085:	leave  
  412086:	dec    ebp
  412087:	lock jle 0x41208b
  41208a:	fs or  ch,BYTE PTR es:[edi+0x37]
  41208f:	jo     0x4120bd
  412091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412092:	(bad)  
  412093:	cmc    
  412094:	int    0xba
  412096:	sahf   
  412097:	ret    
  412098:	xor    al,0x1d
  41209a:	clc    
  41209b:	lahf   
  41209c:	and    al,0x2f
  41209e:	mov    al,0xad
  4120a0:	mov    edx,DWORD PTR ds:0xe53fb64a
  4120a6:	mov    al,ah
  4120a8:	lahf   
  4120a9:	stos   BYTE PTR es:[edi],al
  4120aa:	fild   DWORD PTR [ebp+0x46]
  4120ad:	js     0x4120d7
  4120af:	idiv   DWORD PTR [eax-0x42d82f78]
  4120b5:	int    0xa8
  4120b7:	(bad)  
  4120b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b9:	or     al,0x13
  4120bb:	or     edi,edi
  4120bd:	div    BYTE PTR [eax+0x7a]
  4120c0:	push   es
  4120c1:	push   edx
  4120c2:	ror    DWORD PTR [ecx-0x742b45ec],0xcd
  4120c9:	ss adc bh,al
  4120cc:	je     0x41213e
  4120ce:	pushf  
  4120cf:	dec    ecx
  4120d0:	mov    ecx,0x9a30096d
  4120d5:	jns    0x41210d
  4120d7:	cmp    DWORD PTR [ebp+0x42c10271],esi
  4120dd:	dec    eax
  4120de:	add    BYTE PTR [ebx],0x90
  4120e1:	mov    cl,0xff
  4120e3:	xor    BYTE PTR [ecx],al
  4120e5:	mul    DWORD PTR [edi-0x70]
  4120e8:	fcomp  DWORD PTR [ebx]
  4120ea:	lea    esi,[edx]
  4120ec:	mov    ecx,0xc2b3317f
  4120f1:	xchg   esp,eax
  4120f2:	imul   esp,DWORD PTR [ebx+edx*4],0xe17c00dc
  4120f9:	(bad)  
  4120fa:	ja     0x412117
  4120fc:	adc    bh,BYTE PTR [edi-0x3f]
  4120ff:	pop    eax
  412100:	mul    BYTE PTR [edi-0x17]
  412103:	int3   
  412104:	pop    es
  412105:	mov    bl,0x9c
  412107:	adc    DWORD PTR [esi],edx
  412109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210a:	stos   BYTE PTR es:[edi],al
  41210b:	cmp    al,0x59
  41210d:	inc    ebp
  41210e:	shl    DWORD PTR [ecx],cl
  412110:	push   ds
  412111:	push   0x5841f1c2
  412116:	sbb    al,bh
  412118:	cmp    DWORD PTR [esi+0x29],edx
  41211b:	or     DWORD PTR [edx],edx
  41211d:	sahf   
  41211e:	ins    DWORD PTR es:[edi],dx
  41211f:	and    ebx,DWORD PTR [edx+0xf]
  412122:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412124:	sbb    eax,0xd9c05a69
  412129:	les    ebx,FWORD PTR [edi]
  41212b:	mov    ecx,0x623be0f
  412130:	mov    esi,0x6f8ceea4
  412135:	pop    es
  412136:	and    al,0x43
  412138:	inc    eax
  412139:	push   eax
  41213a:	push   0x92415b00
  41213f:	cwde   
  412140:	daa    
  412141:	les    esi,FWORD PTR [edx+0x5b092db8]
  412147:	add    eax,0x186fa259
  41214c:	stos   DWORD PTR es:[edi],eax
  41214d:	dec    ebp
  41214e:	jmp    0x4121c7
  412150:	ins    BYTE PTR es:[edi],dx
  412151:	fadd   st,st(3)
  412153:	xchg   ebx,eax
  412154:	or     esi,DWORD PTR [ebx-0x38c86788]
  41215a:	out    0xb0,eax
  41215c:	std    
  41215d:	(bad)  
  41215e:	daa    
  41215f:	xchg   esi,eax
  412160:	jp     0x4121ca
  412162:	cld    
  412163:	ret    0x263e
  412166:	cwde   
  412167:	sbb    eax,DWORD PTR [edi]
  412169:	mov    BYTE PTR [eax],bh
  41216b:	loop   0x41211d
  41216d:	sub    BYTE PTR [eax-0x3],0xd5
  412171:	popf   
  412172:	mov    ecx,DWORD PTR [edi+0x28278fb7]
  412178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412179:	fwait
  41217a:	cmp    dh,ah
  41217c:	ret    0xff4
  41217f:	push   esp
  412180:	loopne 0x412142
  412182:	aaa    
  412183:	dec    edi
  412184:	pusha  
  412185:	xchg   edx,eax
  412186:	das    
  412187:	sbb    eax,0x56ad422c
  41218c:	gs ss dec esi
  41218f:	or     eax,0xf9cef194
  412194:	sbb    edx,DWORD PTR [edx]
  412196:	push   0x84386adb
  41219b:	dec    ebx
  41219c:	out    dx,al
  41219d:	aad    0xb
  41219f:	jne    0x41217b
  4121a1:	lods   al,BYTE PTR ds:[esi]
  4121a2:	call   0x879f09e7
  4121a7:	push   esp
  4121a8:	sbb    eax,0xd2c56ac5
  4121ad:	push   eax
  4121ae:	jns    0x4121db
  4121b0:	sbb    al,0x2e
  4121b2:	xchg   ebp,eax
  4121b3:	(bad)  
  4121b4:	ret    
  4121b5:	and    bh,BYTE PTR [ebx]
  4121b7:	xor    bh,BYTE PTR [edi+0xa]
  4121ba:	idiv   DWORD PTR [ecx+eax*1+0x22984cea]
  4121c1:	adc    al,0x31
  4121c3:	in     al,dx
  4121c4:	mov    ebx,0x7328f853
  4121c9:	js     0x4121f3
  4121cb:	pop    edi
  4121cc:	fsubp  st(1),st
  4121ce:	mov    ebp,0xc188fbdd
  4121d3:	(bad)
  4121d7:	adc    ch,BYTE PTR [edi+0x32]
  4121da:	ret    
  4121db:	xor    ebp,DWORD PTR [edx+edi*8-0x30f0999e]
  4121e2:	inc    ebp
  4121e3:	pop    ss
  4121e4:	cmp    ebp,DWORD PTR [ebx-0x2b71a43e]
  4121ea:	sub    esp,DWORD PTR [ebx]
  4121ec:	mov    ebp,0xd66f5f16
  4121f1:	mov    dh,0xc4
  4121f3:	nop    DWORD PTR [ebp-0x5b]
  4121f7:	fstp   QWORD PTR [ebx]
  4121f9:	cmp    bh,0x3b
  4121fc:	mov    al,0x97
  4121fe:	dec    ebp
  4121ff:	adc    dl,BYTE PTR [edi+0x3c462b0e]
  412205:	push   es
  412206:	mov    bl,0x72
  412208:	add    BYTE PTR [ebp-0x159eb94b],dl
  41220e:	and    al,0x5
  412210:	sbb    eax,0x40be4a03
  412215:	sub    dl,BYTE PTR [esi-0x3f6144e1]
  41221b:	xor    eax,0xa749ced1
  412220:	add    eax,0xafd05489
  412225:	adc    al,0x36
  412227:	sbb    BYTE PTR [ebp-0x6cac4014],dl
  41222d:	dec    edx
  41222e:	jae    0x4121d8
  412230:	aam    0xa
  412232:	cmp    eax,0x58735452
  412237:	in     eax,dx
  412238:	repnz sbb ch,BYTE PTR [ecx-0xb]
  41223c:	push   eax
  41223d:	addr16 js 0x4121ca
  412240:	out    dx,eax
  412241:	dec    edi
  412242:	jle    0x412237
  412244:	add    eax,0xd25931ef
  412249:	leave  
  41224a:	(bad)  
  41224b:	mov    al,0xbc
  41224d:	cwde   
  41224e:	push   0xed1045df
  412253:	push   0x4
  412255:	ins    DWORD PTR es:[edi],dx
  412256:	(bad)  
  412258:	imul   esp,DWORD PTR [ebp-0x61fbd351],0x68765195
  412262:	xchg   bh,ch
  412264:	mov    ecx,0x3de24534
  412269:	xchg   edx,eax
  41226a:	push   edx
  41226b:	dec    ebx
  41226c:	scas   eax,DWORD PTR es:[edi]
  41226d:	loop   0x4121f5
  41226f:	push   eax
  412270:	mov    ebp,0x87075af9
  412275:	cmp    DWORD PTR [edx],ecx
  412277:	add    esi,DWORD PTR [eax-0x1f5553b7]
  41227d:	aas    
  41227e:	stc    
  41227f:	pop    edx
  412280:	inc    edi
  412281:	or     al,0x6a
  412283:	das    
  412284:	mov    fs,WORD PTR fs:[ebx]
  412287:	xchg   esi,eax
  412288:	jg     0x4122f9
  41228a:	and    esp,ebp
  41228c:	sti    
  41228d:	outs   dx,BYTE PTR ds:[esi]
  41228e:	aaa    
  41228f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412290:	hlt    
  412291:	sub    eax,0xb6321c4d
  412296:	mov    eax,0x211623fc
  41229b:	dec    edi
  41229c:	out    0xd3,eax
  41229e:	or     eax,0x29a37c87
  4122a3:	xchg   esi,eax
  4122a4:	jae    0x4122db
  4122a6:	je     0x4122ce
  4122a8:	xor    DWORD PTR [eax+0x3],edx
  4122ab:	pop    esp
  4122ac:	(bad)  
  4122ad:	jmp    0xc43e90ce
  4122b2:	pop    esi
  4122b3:	int    0xd0
  4122b5:	dec    esi
  4122b6:	jge    0x4122f3
  4122b8:	fs cmp eax,0xf74c368
  4122be:	inc    ebp
  4122bf:	sar    DWORD PTR [edi],1
  4122c1:	out    dx,al
  4122c2:	and    DWORD PTR [eax+0x3b],ecx
  4122c5:	xchg   edx,eax
  4122c6:	icebp  
  4122c7:	ins    BYTE PTR es:[edi],dx
  4122c8:	jmp    0x41231b
  4122ca:	cwde   
  4122cb:	mov    bh,BYTE PTR [ebx+0x59]
  4122ce:	(bad)  
  4122cf:	pop    edx
  4122d0:	mov    bh,0x2a
  4122d2:	jno    0x4122d6
  4122d4:	je     0x4122c2
  4122d6:	scas   al,BYTE PTR es:[edi]
  4122d7:	pusha  
  4122d8:	data16 jne 0x41225c
  4122db:	call   0xd831:0x379eb795
  4122e2:	pusha  
  4122e3:	xchg   edi,eax
  4122e4:	cmp    BYTE PTR [eax-0x40],bl
  4122e7:	arpl   WORD PTR [ebx-0x36063fcc],di
  4122ed:	push   ecx
  4122ee:	xchg   ebx,eax
  4122ef:	push   esi
  4122f0:	rcl    BYTE PTR [eax-0x29f656ff],1
  4122f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f7:	bound  esp,QWORD PTR [edx-0x33ef1cfc]
  4122fd:	mov    dl,0x95
  4122ff:	jno    0x412281
  412301:	jecxz  0x4122f8
  412303:	xor    edi,DWORD PTR [edx-0x5b]
  412306:	dec    ebp
  412307:	xchg   edx,eax
  412308:	mov    esi,0x28786b08
  41230d:	(bad)  
  41230f:	loopne 0x41233e
  412311:	ja     0x4122e5
  412313:	enter  0x31c4,0x53
  412317:	call   0x34dc:0xc8054b4
  41231e:	das    
  41231f:	mov    esi,0xac591be3
  412324:	sti    
  412325:	(bad)  
  412327:	pushf  
  412328:	cmp    eax,edi
  41232a:	(bad)  
  41232b:	addr16 push ss
  41232d:	in     eax,0x3c
  41232f:	inc    ebp
  412330:	jmp    0x41232a
  412332:	(bad)  [esi-0x2448dccc]
  412338:	jg     0x412309
  41233a:	repnz fiadd DWORD PTR [eax+0x5231c973]
  412341:	mov    edi,0x92bd86a1
  412346:	out    dx,al
  412347:	or     eax,0xbd5e737f
  41234c:	jbe    0x4122e5
  41234e:	mov    DWORD PTR [ecx+0x6c],esi
  412351:	ins    DWORD PTR es:[edi],dx
  412352:	add    edi,DWORD PTR [edx+ecx*1-0x53]
  412356:	addr16 mov esp,0x74f19118
  41235c:	sub    dl,BYTE PTR [ebp+0x7241d0b]
  412362:	mov    edi,0x6bd2543a
  412367:	(bad)  
  412368:	frndint 
  41236a:	mov    ecx,0xeab4f6a6
  41236f:	mov    esi,es
  412371:	ds ds call 0x8d16:0x5ef3bfa0
  41237a:	mov    eax,0x980ddb3e
  41237f:	push   cs
  412380:	repnz out 0xc8,al
  412383:	jg     0x41232b
  412385:	iret   
  412386:	fsubr  QWORD PTR [ebx+0x62]
  412389:	or     eax,0xcb5983ba
  41238e:	lods   eax,DWORD PTR ds:[esi]
  41238f:	daa    
  412390:	mov    ebx,ss
  412392:	(bad)  
  412394:	jecxz  0x412328
  412396:	(bad)  [edx+ebp*8-0x68]
  41239a:	adc    edx,edi
  41239c:	xor    eax,0x95ba08c9
  4123a1:	mov    bh,0xe0
  4123a3:	iret   
  4123a4:	fistp  WORD PTR [esi+ebx*4+0x30]
  4123a8:	cmp    dh,ah
  4123aa:	mov    cl,0x5a
  4123ac:	pusha  
  4123ad:	cmp    DWORD PTR [edi-0x36],ebp
  4123b0:	cmp    ebp,DWORD PTR [ebx]
  4123b2:	add    al,ch
  4123b4:	xor    ah,BYTE PTR [esi+0x21033295]
  4123ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bb:	mov    bh,0x99
  4123bd:	into   
  4123be:	arpl   WORD PTR [edx+0x2a],cx
  4123c1:	fucomip st,st(5)
  4123c3:	test   BYTE PTR [ecx],0xe4
  4123c6:	lds    edi,FWORD PTR [esi-0x5c53b581]
  4123cc:	xor    al,0xb6
  4123ce:	ins    DWORD PTR es:[edi],dx
  4123cf:	lock xor edi,DWORD PTR [edi-0x72]
  4123d3:	std    
  4123d4:	mov    bh,0x5
  4123d6:	sub    al,0x57
  4123d8:	retf   
  4123d9:	lods   al,BYTE PTR ds:[esi]
  4123da:	push   cs
  4123db:	mov    cl,0x3c
  4123dd:	ret    
  4123de:	xor    DWORD PTR ds:0x8a5361da,0xbb5ca4aa
  4123e8:	and    eax,0x5cbd1fea
  4123ed:	cmp    edx,DWORD PTR [eax+0xd2122cf]
  4123f3:	jo     0x41242a
  4123f5:	pop    eax
  4123f6:	dec    edx
  4123f7:	in     eax,dx
  4123f8:	je     0x41239f
  4123fa:	sbb    eax,0x92d50740
  4123ff:	inc    esi
  412400:	pop    ecx
  412401:	inc    eax
  412402:	jecxz  0x4123e4
  412404:	outs   dx,DWORD PTR ds:[esi]
  412405:	mov    eax,0xb59497ec
  41240a:	xor    eax,0x7d70eb8d
  41240f:	adc    bh,BYTE PTR [edi+0x0]
  412412:	mov    dl,0x2e
  412414:	xchg   esi,eax
  412415:	mov    cl,0x48
  412417:	jl     0x412473
  412419:	scas   eax,DWORD PTR es:[edi]
  41241a:	not    bh
  41241c:	push   es
  41241d:	aaa    
  41241e:	and    al,0x2e
  412420:	mov    ds:0xa3753056,al
  412425:	ds inc ecx
  412427:	mov    ss,WORD PTR [ecx]
  412429:	pop    esi
  41242a:	xlat   BYTE PTR ds:[ebx]
  41242b:	pop    esp
  41242c:	outs   dx,BYTE PTR ds:[esi]
  41242d:	sub    al,0xa0
  41242f:	lea    esi,ds:0xa28c6c64
  412435:	pop    ebx
  412436:	and    eax,0xaf5c1109
  41243b:	sti    
  41243c:	jl     0x4124b6
  41243e:	lods   al,BYTE PTR ds:[esi]
  41243f:	cdq    
  412440:	mov    cl,0x49
  412442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412443:	in     eax,dx
  412444:	mov    WORD PTR [edi-0x5e409523],fs
  41244a:	pushf  
  41244b:	add    al,dl
  41244d:	sub    eax,0x8a0713d2
  412452:	xor    ch,BYTE PTR [edi]
  412454:	(bad)  
  412455:	call   0xcefb:0xe82e293a
  41245c:	addr16 push esi
  41245e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245f:	cs xchg dl,ch
  412462:	jno    0x412453
  412464:	data16 outs dx,BYTE PTR ds:[esi]
  412466:	mov    bh,0xcf
  412468:	push   ebp
  412469:	lahf   
  41246a:	mov    al,0x4d
  41246c:	sub    DWORD PTR [eax-0x78],ebx
  41246f:	xor    BYTE PTR [esi+0x4e54f3ce],dh
  412475:	aas    
  412476:	xor    eax,0xc747fa61
  41247b:	arpl   bp,bx
  41247d:	pop    esp
  41247e:	(bad)  
  41247f:	(bad)  
  412480:	and    eax,0x2229c29f
  412485:	xchg   esp,eax
  412486:	xlat   BYTE PTR ds:[ebx]
  412487:	push   ds
  412488:	adc    eax,0x5c583726
  41248d:	cli    
  41248e:	xor    ch,BYTE PTR ds:0xce861e7c
  412494:	fsub   QWORD PTR [ebp+0x6]
  412497:	fwait
  412498:	mov    ebx,0x915ea7fb
  41249d:	pop    ebp
  41249e:	cmp    BYTE PTR [edi+ebx*1+0x5cc48503],0x1d
  4124a6:	mov    BYTE PTR [edx],dh
  4124a8:	into   
  4124a9:	int    0xe4
  4124ab:	fldenv [edx]
  4124ad:	ret    
  4124ae:	mov    BYTE PTR [edi-0x348e622],dh
  4124b4:	mov    dh,0x83
  4124b6:	jb     0x412491
  4124b8:	es add eax,0xca4179a8
  4124be:	mov    al,0xcf
  4124c0:	cmp    al,0xc
  4124c2:	jl     0x412535
  4124c4:	add    DWORD PTR [ebp-0x30],edx
  4124c7:	not    BYTE PTR [ebp+0x65fb9289]
  4124cd:	xor    eax,edi
  4124cf:	and    eax,0x6716f84a
  4124d4:	ja     0x4124d1
  4124d6:	sti    
  4124d7:	sbb    eax,0x86538e57
  4124dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124dd:	mov    ebx,0x49dda317
  4124e2:	jge    0x4124d7
  4124e4:	push   0x57
  4124e6:	out    dx,eax
  4124e7:	repz inc ebx
  4124e9:	paddsb mm7,QWORD PTR ds:0x949dcc85
  4124f0:	sbb    DWORD PTR [ebx-0x16733946],edi
  4124f6:	push   ebp
  4124f7:	inc    eax
  4124f8:	dec    ebx
  4124f9:	push   es
  4124fa:	in     al,dx
  4124fb:	stos   DWORD PTR es:[edi],eax
  4124fc:	lds    eax,FWORD PTR [esi+0x16644b93]
  412502:	repnz (bad) 
  412504:	mov    eax,ds:0x53de9a63
  412509:	sub    al,0x95
  41250b:	add    eax,0x5af2b522
  412510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412511:	xor    DWORD PTR [eax],0xffffffb2
  412514:	sub    bl,BYTE PTR [edx-0x71]
  412517:	dec    ecx
  412518:	dec    ebp
  412519:	shr    DWORD PTR [ecx],cl
  41251b:	pop    edx
  41251c:	cmp    al,0x22
  41251e:	xchg   DWORD PTR [eax-0x7b],ebp
  412521:	(bad)  
  412522:	push   ss
  412523:	mov    esp,0xeba48201
  412528:	or     al,BYTE PTR ds:0xabba5115
  41252e:	fild   DWORD PTR [esi+0x8]
  412531:	and    eax,0x46953d71
  412536:	sub    DWORD PTR [ebp-0x13],ebx
  412539:	mov    ebp,0x66c185b5
  41253e:	xchg   edi,eax
  41253f:	mov    al,ds:0xe7117cca
  412544:	cmp    ah,BYTE PTR [eax-0x3d]
  412547:	adc    ebx,DWORD PTR [edx+0x2997f98e]
  41254d:	ins    DWORD PTR es:[edi],dx
  41254e:	jl     0x4125c9
  412550:	int    0x7a
  412552:	xor    BYTE PTR [esi-0x3e],dl
  412555:	mov    ah,0xf0
  412557:	loop   0x412587
  412559:	pop    esp
  41255a:	dec    ebx
  41255b:	sub    eax,0x4a963f0d
  412560:	and    dh,BYTE PTR [edi+edx*4-0x13ee1a20]
  412567:	xor    BYTE PTR [eax],bh
  412569:	xor    ebx,DWORD PTR [ecx-0x4c659f02]
  41256f:	out    0x9,eax
  412571:	inc    ebp
  412572:	xchg   esi,eax
  412573:	(bad)  
  412575:	sahf   
  412576:	pop    esi
  412577:	mov    ds:0x41c25b06,eax
  41257c:	mov    esi,0x550ba389
  412581:	ror    DWORD PTR [ebp-0x1],1
  412584:	adc    eax,DWORD PTR [ebx+0x2d]
  412587:	adc    al,0x31
  412589:	pusha  
  41258a:	adc    al,0xa2
  41258c:	out    dx,al
  41258d:	mov    esp,0xbbe11c2
  412592:	ds ja  0x4125bb
  412595:	cli    
  412596:	mov    ah,0xb
  412598:	retf   0x1a46
  41259b:	cmp    BYTE PTR [esi-0x72018771],cl
  4125a1:	sbb    ah,BYTE PTR es:[edi]
  4125a4:	cmc    
  4125a5:	push   ecx
  4125a6:	sbb    ah,BYTE PTR [ecx+eiz*4-0xde87f2d]
  4125ad:	sbb    eax,DWORD PTR [ebx+ecx*4]
  4125b0:	loopne 0x412614
  4125b2:	push   ss
  4125b3:	rcl    DWORD PTR [esi-0x3f77babe],cl
  4125b9:	call   0x27bc:0xfb5cad12
  4125c0:	call   0xe04d:0xe9d4aa8b
  4125c7:	imul   eax,edi,0x22
  4125ca:	pop    ss
  4125cb:	call   0xdb6a:0x80f56dd0
  4125d2:	dec    eax
  4125d3:	lds    eax,FWORD PTR [ebx+0x220ddc45]
  4125d9:	mov    dl,0x9a
  4125db:	lds    esi,FWORD PTR [ebx]
  4125dd:	ror    DWORD PTR [edi],0x23
  4125e0:	ror    bh,cl
  4125e2:	outs   dx,DWORD PTR ds:[esi]
  4125e3:	clc    
  4125e4:	sbb    al,0xf3
  4125e6:	sbb    al,0xb
  4125e8:	push   ecx
  4125e9:	fidiv  WORD PTR [edi+0x5b]
  4125ec:	in     al,dx
  4125ed:	loop   0x4125ae
  4125ef:	loopne 0x41266c
  4125f1:	test   eax,0xe504e5d
  4125f6:	retf   
  4125f7:	dec    ecx
  4125f8:	repz pushf 
  4125fa:	xchg   esi,eax
  4125fb:	pop    esp
  4125fc:	and    eax,0x26af52ef
  412601:	pop    esi
  412602:	adc    al,0xa9
  412604:	bswap  ebp
  412606:	sub    eax,0xa2439cca
  41260b:	fdiv   QWORD PTR [edi]
  41260d:	xchg   ecx,eax
  41260e:	dec    eax
  41260f:	jmp    0xfe4c:0xbea8c1fd
  412616:	mov    ebx,0x3d76c154
  41261b:	mov    ebx,0xf1913cc9
  412620:	xchg   esi,eax
  412621:	(bad)
  412625:	add    esi,edi
  412627:	loopne 0x412600
  412629:	mov    al,ds:0xb467d2ae
  41262e:	xchg   esp,eax
  41262f:	xchg   ebp,eax
  412630:	jnp    0x412624
  412632:	aam    0x3c
  412634:	inc    esp
  412635:	mov    al,0x1d
  412637:	sub    DWORD PTR [edi-0x4b0a5a4],0x12576e3
  412641:	push   ds
  412642:	push   0xed10e2c1
  412647:	push   0x35a4cb4d
  41264c:	dec    ecx
  41264d:	dec    eax
  41264e:	cdq    
  41264f:	shl    eax,cl
  412651:	add    eax,0xbead8e69
  412656:	ins    DWORD PTR es:[edi],dx
  412657:	in     eax,0x30
  412659:	and    al,dh
  41265b:	(bad)  
  41265c:	sar    BYTE PTR [edi-0x3909d572],cl
  412662:	fwait
  412663:	adc    al,0xe5
  412665:	or     al,0x26
  412667:	stos   BYTE PTR es:[edi],al
  412668:	addr16 xchg ecx,eax
  41266a:	mov    dh,0x95
  41266c:	addr16 out 0xb7,al
  41266f:	out    0x15,eax
  412671:	cdq    
  412672:	fiadd  WORD PTR fs:0x277a3aa5
  412679:	mov    esp,0x9e501c66
  41267e:	enter  0x8709,0xb5
  412682:	mov    edi,edi
  412684:	(bad)  
  412685:	mov    ebp,0x9a15e39c
  41268a:	cli    
  41268b:	imul   ebx,DWORD PTR [ebx-0x35],0xfffffffc
  41268f:	test   BYTE PTR [edx+0x37],0x59
  412693:	loopne 0x4126bd
  412695:	sbb    DWORD PTR [eax],eax
  412697:	test   edx,eax
  412699:	xor    DWORD PTR [edi-0x549900a2],eax
  41269f:	push   esi
  4126a0:	push   ss
  4126a1:	mov    edx,0x493602dc
  4126a6:	or     bl,BYTE PTR [ecx+0x67b8e557]
  4126ac:	icebp  
  4126ad:	inc    esi
  4126ae:	retf   
  4126af:	jno    0x4126bc
  4126b1:	cmp    bl,BYTE PTR [esi-0x72]
  4126b4:	mov    esp,0x5bb5d5e6
  4126b9:	enter  0x1e69,0x97
  4126bd:	pop    DWORD PTR [ebp+0x3a]
  4126c0:	mov    ah,BYTE PTR [eax-0x33457520]
  4126c6:	cwde   
  4126c7:	fwait
  4126c8:	push   0x4
  4126ca:	out    0xbc,al
  4126cc:	(bad)  
  4126cd:	push   0x3abb0133
  4126d2:	inc    esp
  4126d3:	sub    BYTE PTR ss:[edx],ah
  4126d6:	sub    al,0x27
  4126d8:	jl     0x4126d7
  4126da:	jecxz  0x412723
  4126dc:	jne    0x4126a6
  4126de:	jge    0x41271b
  4126e0:	stos   DWORD PTR es:[edi],eax
  4126e1:	add    al,0xfa
  4126e3:	test   DWORD PTR [ebp+0x7d59d649],ebx
  4126e9:	ror    BYTE PTR [ebx],cl
  4126eb:	retf   
  4126ec:	call   0xd00e:0x7f4fe488
  4126f3:	call   0x1a2c:0x1145b698
  4126fa:	ja     0x41267d
  4126fc:	xlat   BYTE PTR ds:[ebx]
  4126fd:	mov    dl,BYTE PTR [edi+ecx*4]
  412700:	or     eax,DWORD PTR [edi+0x456df006]
  412706:	retf   
  412707:	add    eax,0xd1e419b4
  41270c:	cmp    BYTE PTR [esi-0x8967867],ah
  412712:	ret    
  412713:	mov    bh,0x35
  412715:	aas    
  412716:	scas   eax,DWORD PTR es:[edi]
  412717:	xor    DWORD PTR [esi+0xc],0xfea1e1cd
  41271e:	pop    edx
  41271f:	sub    ah,BYTE PTR ds:0xd999f35f
  412725:	dec    ebx
  412726:	(bad)  
  412727:	cmp    al,0x4
  412729:	push   0xffffff89
  41272b:	xchg   esi,eax
  41272c:	in     eax,dx
  41272d:	push   esi
  41272e:	mov    esi,0xfb8cd7cc
  412733:	mov    dh,0x9d
  412735:	adc    dl,BYTE PTR [edi-0x42d591ee]
  41273b:	test   al,0xd8
  41273d:	push   ebp
  41273e:	and    al,ah
  412740:	xchg   esp,eax
  412741:	cwde   
  412742:	and    ah,dh
  412744:	adc    ch,BYTE PTR [ebx-0x7da7d14d]
  41274a:	jmp    0xb0a2:0xf2e4608e
  412751:	out    0x4a,eax
  412753:	mov    esi,0x3747b44f
  412758:	out    dx,eax
  412759:	inc    ebp
  41275a:	ret    
  41275b:	iret   
  41275c:	jmp    0x41272b
  41275e:	inc    eax
  41275f:	call   0xdbef9a2f
  412764:	dec    ebx
  412765:	push   edx
  412766:	add    DWORD PTR [esi+0x5e4ef94c],esp
  41276c:	xchg   ebp,eax
  41276d:	cs fst st(0)
  412770:	sbb    eax,DWORD PTR [eiz*1+0x7a05bc50]
  412777:	mov    ecx,0xd32b2cc2
  41277c:	hlt    
  41277d:	and    edi,edi
  41277f:	jo     0x4127b7
  412781:	jle    0x41274a
  412783:	aaa    
  412784:	js     0x41276a
  412786:	outs   dx,BYTE PTR ds:[esi]
  412787:	iret   
  412788:	pop    esi
  412789:	dec    edi
  41278a:	(bad)  
  41278b:	shl    DWORD PTR [edi+0xfeb812e],0xa6
  412792:	repz aaa 
  412794:	mov    eax,0xf6296089
  412799:	mov    DWORD PTR [ecx+edx*1-0x634b7648],esi
  4127a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a1:	jns    0x4127d6
  4127a3:	xchg   edi,eax
  4127a4:	out    0x26,al
  4127a6:	fisttp WORD PTR [ecx-0x24]
  4127a9:	pop    ebx
  4127aa:	push   ss
  4127ab:	push   ebx
  4127ac:	cmp    ah,BYTE PTR [ecx-0x3c]
  4127af:	in     al,0x32
  4127b1:	int    0x8c
  4127b3:	sbb    esp,DWORD PTR [esi+0x5f]
  4127b6:	or     BYTE PTR [esi-0x80],ch
  4127b9:	das    
  4127ba:	ret    
  4127bb:	jle    0x41280f
  4127bd:	mov    eax,0x902bce9f
  4127c2:	sti    
  4127c3:	adc    al,dl
  4127c5:	adc    DWORD PTR [edi],esp
  4127c7:	mov    gs,esp
  4127c9:	mov    ds:0xd957a45d,al
  4127ce:	mov    esi,0xfc1e7c51
  4127d3:	mov    ds:0x13afa99b,al
  4127d8:	shl    BYTE PTR [ebp-0x6239cfd6],1
  4127de:	sub    BYTE PTR [edi],ch
  4127e0:	hlt    
  4127e1:	xchg   esi,eax
  4127e2:	jb     0x4127f0
  4127e4:	iret   
  4127e5:	pop    ecx
  4127e6:	imul   esp,ebp,0x9c4b6376
  4127ec:	sets   cl
  4127ef:	jg     0x412861
  4127f1:	call   0xcf081ff8
  4127f6:	fidiv  WORD PTR [edx-0x432aadc4]
  4127fc:	call   0x95a937f3
  412801:	test   al,0x99
  412803:	loopne 0x41286b
  412805:	push   cs
  412806:	add    al,0xba
  412808:	retf   
  412809:	(bad)  
  41280a:	lahf   
  41280b:	sub    DWORD PTR [ebx-0x65fffec7],eax
  412811:	std    
  412812:	jecxz  0x412826
  412814:	jecxz  0x4127aa
  412816:	pop    ebx
  412817:	stos   BYTE PTR es:[edi],al
  412818:	xor    BYTE PTR [ebx-0x20a8ae56],dh
  41281e:	jbe    0x4127c3
  412820:	imul   DWORD PTR [edi]
  412822:	rcr    DWORD PTR [ecx],1
  412824:	jmp    0x4127d6
  412826:	add    ah,ah
  412828:	mov    bh,0xbd
  41282a:	into   
  41282b:	sti    
  41282c:	mov    ecx,0x7c76ebd4
  412831:	fwait
  412832:	sub    al,BYTE PTR [ebp+0x23e15524]
  412838:	div    DWORD PTR ds:[ecx]
  41283b:	jno    0x4128a1
  41283d:	out    0x67,al
  41283f:	add    ebx,DWORD PTR [eax-0xd4c8e5e]
  412845:	xchg   al,bl
  412847:	and    al,0x38
  412849:	jno    0x4127cc
  41284b:	xor    ebp,DWORD PTR [edx-0xca6659e]
  412851:	rcl    DWORD PTR ds:0xba7148fb,0x1e
  412858:	dec    ebp
  412859:	jns    0x41288d
  41285b:	retf   0x5802
  41285e:	inc    ebx
  41285f:	jmp    esp
  412861:	cmp    al,0x21
  412863:	icebp  
  412864:	dec    edx
  412865:	lea    edi,[edi+0x65c3e719]
  41286b:	sahf   
  41286c:	or     DWORD PTR [edx+0x77970192],esi
  412872:	xor    BYTE PTR [edx+0x5cf09dd7],cl
  412878:	nop
  412879:	dec    esi
  41287a:	test   al,bl
  41287c:	out    dx,eax
  41287d:	cwde   
  41287e:	mov    bl,0xcf
  412880:	mul    DWORD PTR [ebx+0x754cd817]
  412886:	in     eax,0xe0
  412888:	sub    bh,BYTE PTR [ebp+0x10]
  41288b:	sub    esp,DWORD PTR [eax-0x19]
  41288e:	and    DWORD PTR gs:[ebx+esi*2+0x4c],esi
  412893:	scas   al,BYTE PTR es:[edi]
  412894:	xchg   BYTE PTR [esi+0x50146520],cl
  41289a:	jp     0x4128d3
  41289c:	mov    edx,0x922e7dcf
  4128a1:	imul   esi,DWORD PTR ds:0x7ab6793b,0x57
  4128a8:	adc    dl,BYTE PTR [esi]
  4128aa:	xlat   BYTE PTR ds:[ebx]
  4128ab:	cdq    
  4128ac:	bound  eax,QWORD PTR [edx]
  4128ae:	mov    eax,ds:0xc3247a39
  4128b3:	jne    0x412886
  4128b5:	push   ebx
  4128b6:	mov    al,0x39
  4128b8:	push   es
  4128b9:	cmp    BYTE PTR [eax],dh
  4128bb:	std    
  4128bc:	cmp    ebx,DWORD PTR [ecx-0x7f]
  4128bf:	xchg   DWORD PTR [edx+0xf],edi
  4128c2:	cmp    eax,0x1b8eb2a4
  4128c7:	sti    
  4128c8:	pusha  
  4128c9:	out    0xc7,eax
  4128cb:	out    0xa6,al
  4128cd:	loope  0x412921
  4128cf:	aas    
  4128d0:	loop   0x4128e8
  4128d2:	pushf  
  4128d3:	sub    eax,0x1da88f6c
  4128d8:	mov    ds:0xe1a19ed5,al
  4128dd:	adc    eax,0x1d52a560
  4128e2:	ja     0x41293b
  4128e4:	repnz push cs
  4128e6:	icebp  
  4128e7:	mov    ds:0xa4284bb7,al
  4128ec:	retf   0x27f3
  4128ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128f0:	std    
  4128f1:	repz cmp BYTE PTR ds:0xe812225f,0x6d
  4128f9:	loop   0x4128f9
  4128fb:	push   ecx
  4128fc:	mov    ch,BYTE PTR [edi+0x6ac4013f]
  412902:	pop    ds
  412903:	addr16 push ecx
  412905:	mov    WORD PTR [edx-0x1ca09ad2],?
  41290b:	and    bl,ch
  41290d:	push   eax
  41290e:	mov    ebp,0x39d013b6
  412913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412914:	loop   0x412915
  412916:	jmp    FWORD PTR [eax+edx*8]
  412919:	dec    edx
  41291a:	push   0x5b
  41291c:	call   0x7712:0x43bb4064
  412923:	sub    al,0x16
  412925:	adc    eax,0xdc924a97
  41292a:	pop    ecx
  41292b:	sub    al,0x16
  41292d:	push   ss
  41292e:	popa   
  41292f:	cmp    al,0xa5
  412931:	add    al,0xee
  412933:	mov    BYTE PTR [ebp+edx*8-0x51],dl
  412937:	fbld   TBYTE PTR [edi]
  412939:	ret    
  41293a:	mov    ebp,0xd58908f6
  41293f:	adc    eax,0x9ed62dd1
  412944:	pusha  
  412945:	sahf   
  412946:	scas   eax,DWORD PTR es:[edi]
  412947:	out    dx,al
  412948:	in     al,0xd0
  41294a:	jl     0x412947
  41294c:	aaa    
  41294d:	xor    ebp,ecx
  41294f:	mov    esp,0x5120c55a
  412954:	add    al,0x7d
  412956:	dec    eax
  412957:	adc    eax,0x5ef89a17
  41295c:	loope  0x412913
  41295e:	cs push edx
  412960:	mov    edx,0xd9548b00
  412965:	mov    al,0x26
  412967:	ins    DWORD PTR es:[edi],dx
  412968:	addr16 std 
  41296a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296b:	sar    eax,cl
  41296d:	popa   
  41296e:	gs push esp
  412970:	dec    esi
  412971:	mov    BYTE PTR [esi+0x703555d],bh
  412977:	idiv   BYTE PTR [edi]
  412979:	cmp    eax,0xc2fa1f89
  41297e:	out    dx,al
  41297f:	je     0x412918
  412981:	popf   
  412982:	jne    0x4129cd
  412984:	jg     0x412998
  412986:	addr16 sbb eax,0x8f64d806
  41298c:	cmc    
  41298d:	imul   ecx,esp,0xb6dd8e9b
  412993:	push   esp
  412994:	adc    edi,DWORD PTR [ecx]
  412996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412997:	mov    ah,0x77
  412999:	and    al,0xc6
  41299b:	pop    ebp
  41299c:	xchg   esp,eax
  41299d:	loope  0x412963
  41299f:	iret   
  4129a0:	add    DWORD PTR [ebp-0x3c8b46d8],ecx
  4129a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a7:	and    ecx,DWORD PTR [ecx-0x7d]
  4129aa:	int    0x8d
  4129ac:	adc    bl,BYTE PTR [ebx]
  4129ae:	inc    esp
  4129af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b0:	outs   dx,BYTE PTR ds:[esi]
  4129b1:	call   0x2366:0xa058a8e6
  4129b8:	xor    bh,al
  4129ba:	mov    dl,0xcd
  4129bc:	(bad)  [esi-0x21788f25]
  4129c2:	bound  eax,QWORD PTR [ebx-0x7af5659c]
  4129c8:	outs   dx,BYTE PTR ds:[esi]
  4129c9:	cwde   
  4129ca:	not    DWORD PTR ds:0x9031f8c3
  4129d1:	cld    
  4129d2:	mov    DWORD PTR [edi+0x7c57ff91],esp
  4129d8:	jne    0x412972
  4129da:	add    edi,ecx
  4129dc:	rcr    esp,0xa1
  4129df:	and    al,BYTE PTR [eax]
  4129e1:	ret    0x3b61
  4129e4:	mov    DWORD PTR [esp+ebx*8+0xb33bfac],ebx
  4129eb:	in     al,dx
  4129ec:	xrstors [eax+0x78]
  4129f0:	inc    ebp
  4129f1:	dec    esp
  4129f2:	adc    BYTE PTR [esi],ah
  4129f4:	(bad)  
  4129f6:	fst    QWORD PTR [esi+0x69]
  4129f9:	in     eax,0x33
  4129fb:	gs ret 
  4129fd:	sbb    al,0xb4
  4129ff:	shr    DWORD PTR ss:[ecx],cl
  412a02:	add    ebp,DWORD PTR [edx-0x38]
  412a05:	mov    ecx,DWORD PTR [edi]
  412a07:	xor    ch,BYTE PTR [edx-0x2fa44dc3]
  412a0d:	adc    al,0xc2
  412a0f:	clc    
  412a10:	and    al,0x27
  412a12:	mov    ds:0xdd1d1456,eax
  412a17:	outs   dx,DWORD PTR ds:[esi]
  412a18:	cmp    DWORD PTR ds:0x922f2290,0x7d
  412a1f:	mov    BYTE PTR [edx+0x2f],cl
  412a22:	jnp    0x412a57
  412a24:	jns    0x412a31
  412a26:	mov    edi,0xe05a04cc
  412a2b:	loopne 0x412aa5
  412a2d:	mov    ah,0x1
  412a2f:	sub    BYTE PTR [edi-0x37],bh
  412a32:	push   edi
  412a33:	jecxz  0x4129ce
  412a35:	or     al,BYTE PTR [eax+0x70]
  412a38:	rcr    DWORD PTR [ebp-0x7d],cl
  412a3b:	aad    0x52
  412a3d:	cmc    
  412a3e:	sbb    ecx,DWORD PTR [eax+edx*2]
  412a41:	push   esp
  412a42:	jb     0x412a66
  412a44:	ror    DWORD PTR [ebp-0x66],1
  412a47:	adc    dl,ah
  412a49:	and    BYTE PTR [eax+0x44],0x39
  412a4d:	fs leave 
  412a4f:	fnsave [esi]
  412a51:	aas    
  412a52:	push   edi
  412a53:	xchg   ebx,eax
  412a54:	dec    ebp
  412a55:	inc    esi
  412a56:	lahf   
  412a57:	imul   ecx,DWORD PTR ds:0x927a6e67,0x3bed9187
  412a61:	jbe    0x412a77
  412a63:	mov    eax,0xd87689a9
  412a68:	inc    ebp
  412a69:	ret    
  412a6a:	jmp    0x1714:0xf165f995
  412a71:	hlt    
  412a72:	js     0x412a4c
  412a74:	repz repz add eax,0xd1d68959
  412a7b:	rcr    DWORD PTR [edi+eax*8],0xc4
  412a7f:	push   es
  412a80:	adc    DWORD PTR [ebx],ebx
  412a82:	gs cli 
  412a84:	dec    ebp
  412a85:	mov    DWORD PTR [edi-0x34],esi
  412a88:	adc    BYTE PTR [ebx],ch
  412a8a:	pusha  
  412a8b:	jg     0x412aa2
  412a8d:	loope  0x412a7d
  412a8f:	out    dx,eax
  412a90:	or     BYTE PTR [eax-0x5d],0xcf
  412a94:	dec    ecx
  412a95:	stc    
  412a96:	add    BYTE PTR [esi+0x2d],al
  412a99:	dec    esp
  412a9a:	jmp    FWORD PTR [esi+0x351438ed]
  412aa0:	ror    eax,cl
  412aa2:	sbb    BYTE PTR ds:0x2b43db7,cl
  412aa8:	imul   ebp,DWORD PTR [eax+0x69b06588],0x33ab8991
  412ab2:	mov    edx,edi
  412ab4:	hlt    
  412ab5:	mov    cl,0x3
  412ab7:	jb     0x412aa0
  412ab9:	aam    0x57
  412abb:	xlat   BYTE PTR ds:[ebx]
  412abc:	push   ebp
  412abd:	add    BYTE PTR [edi+0x5d0a80eb],bl
  412ac3:	inc    ecx
  412ac4:	outs   dx,DWORD PTR ds:[esi]
  412ac5:	repnz mov al,0x9d
  412ac8:	mov    WORD PTR [esi+edi*8],cs
  412acb:	cld    
  412acc:	ror    BYTE PTR [esi-0x64aa098e],cl
  412ad2:	bound  ecx,QWORD PTR [ecx]
  412ad4:	in     al,0xa2
  412ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad7:	mov    esp,0x503569b5
  412adc:	push   ebx
  412add:	test   eax,0xf57ae12f
  412ae2:	push   eax
  412ae3:	cs and dl,dh
  412ae6:	xor    DWORD PTR [edx],eax
  412ae8:	dec    esp
  412ae9:	cs mov ebp,0xe4451191
  412aef:	jmp    0x412ab1
  412af1:	sub    DWORD PTR [ebx],0x4d
  412af4:	cmp    BYTE PTR ds:0x71375950,ch
  412afa:	xchg   esp,eax
  412afb:	jg     0x412b16
  412afd:	fimul  DWORD PTR [ecx]
  412aff:	push   ss
  412b00:	out    dx,eax
  412b01:	std    
  412b02:	mov    dh,0x41
  412b04:	fwait
  412b05:	sar    BYTE PTR [eax+0x19],1
  412b08:	sub    ah,BYTE PTR [eax+0x54]
  412b0b:	push   ss
  412b0c:	scas   eax,DWORD PTR es:[edi]
  412b0d:	repz lock xor edx,edx
  412b11:	pop    edi
  412b12:	stos   BYTE PTR es:[edi],al
  412b13:	mov    dl,0x75
  412b15:	cmp    eax,0x12f6558a
  412b1a:	push   ecx
  412b1b:	js     0x412b8a
  412b1d:	in     eax,dx
  412b1e:	mov    cl,0x2e
  412b20:	pop    edi
  412b21:	loop   0x412af7
  412b23:	sbb    al,0x12
  412b25:	rcr    DWORD PTR [edi-0x497f22f5],0xa7
  412b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b2d:	daa    
  412b2e:	lahf   
  412b2f:	shr    DWORD PTR [esi+ebx*2-0x49],1
  412b33:	jle    0x412adb
  412b35:	xor    al,0x84
  412b37:	cmp    eax,0xe5eef546
  412b3c:	mov    esi,0x2813019b
  412b41:	dec    ecx
  412b42:	dec    edx
  412b43:	fisttp QWORD PTR [eax+0x7d9fad25]
  412b49:	out    dx,eax
  412b4a:	(bad)  
  412b4c:	fs icebp 
  412b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4f:	aaa    
  412b50:	js     0x412aef
  412b52:	and    cl,bh
  412b54:	xchg   DWORD PTR [edx+0x1d05e0c0],eax
  412b5a:	cmp    al,0xa6
  412b5c:	repnz lods eax,DWORD PTR ds:[esi]
  412b5e:	dec    ebp
  412b5f:	ret    0x52af
  412b62:	dec    ecx
  412b63:	add    DWORD PTR [ebx+0x6335b584],0x91be4f1f
  412b6d:	enter  0x5536,0xcf
  412b71:	cld    
  412b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b73:	add    bh,BYTE PTR [edx-0x513a98ed]
  412b79:	frstor [edx]
  412b7b:	push   es
  412b7c:	jbe    0x412b74
  412b7e:	mov    dl,0xff
  412b80:	(bad)  
  412b81:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412b83:	aad    0x6a
  412b85:	icebp  
  412b86:	int3   
  412b87:	aas    
  412b88:	adc    al,0xa4
  412b8a:	push   0x8ced0575
  412b8f:	sbb    eax,0xac8de7a7
  412b94:	in     al,0xbc
  412b96:	pop    ecx
  412b97:	add    BYTE PTR [esi+edx*2-0x3c],ah
  412b9b:	pop    edi
  412b9c:	stc    
  412b9d:	dec    eax
  412b9e:	push   ecx
  412b9f:	ss adc eax,0xda28a89
  412ba5:	data16 (bad) 
  412ba7:	test   BYTE PTR [edx+0x778a3428],0xec
  412bae:	loop   0x412b59
  412bb0:	mov    edi,0x22d65595
  412bb5:	adc    al,0x1d
  412bb7:	or     BYTE PTR [ebx+0x3d8b609b],cl
  412bbd:	xlat   BYTE PTR ds:[ebx]
  412bbe:	pop    ss
  412bbf:	xchg   DWORD PTR [edi+0x31dc7b66],esp
  412bc5:	xchg   ecx,eax
  412bc6:	and    BYTE PTR [esi+0x433dbde],bh
  412bcc:	pop    eax
  412bcd:	cdq    
  412bce:	stc    
  412bcf:	sub    al,bl
  412bd1:	ret    
  412bd2:	jb     0x412bf7
  412bd4:	and    edx,DWORD PTR [ecx+0x1]
  412bd7:	lds    esp,FWORD PTR [edi+0x7c4ccfab]
  412bdd:	cli    
  412bde:	mov    dh,0xf7
  412be0:	cwde   
  412be1:	sub    BYTE PTR [esi-0x6e3600c7],dl
  412be7:	pop    esp
  412be8:	js     0x412bde
  412bea:	std    
  412beb:	fistp  WORD PTR [ecx]
  412bed:	or     bh,ah
  412bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf0:	hlt    
  412bf1:	and    dh,al
  412bf3:	xor    edx,ebp
  412bf5:	jg     0x412c48
  412bf7:	sbb    BYTE PTR [eax+0x47cd1b25],ah
  412bfd:	loop   0x412c01
  412bff:	lds    eax,FWORD PTR [esi-0x33]
  412c02:	inc    edx
  412c03:	jbe    0x412c06
  412c05:	inc    esp
  412c06:	jl     0x412c0c
  412c08:	jno    0x412c6e
  412c0a:	mov    edx,0xabab4c68
  412c0f:	sub    DWORD PTR [ebx],esi
  412c11:	jmp    0x4064:0xe8f7dd37
  412c18:	into   
  412c19:	xchg   esi,eax
  412c1a:	je     0x412c6f
  412c1c:	jle    0x412c0e
  412c1e:	scas   eax,DWORD PTR es:[edi]
  412c1f:	jnp    0x412c51
  412c21:	mov    bh,ch
  412c23:	cdq    
  412c24:	push   ebp
  412c25:	mov    eax,0x1b677b13
  412c2a:	cld    
  412c2b:	popf   
  412c2c:	scas   eax,DWORD PTR es:[edi]
  412c2d:	rol    DWORD PTR [ebp+0x3b],cl
  412c30:	pop    edi
  412c31:	inc    ebp
  412c32:	in     eax,dx
  412c33:	das    
  412c34:	mov    ebp,0xeaa2a090
  412c39:	ins    DWORD PTR es:[edi],dx
  412c3a:	aaa    
  412c3b:	mov    ebx,DWORD PTR [edi+0x1a]
  412c3e:	or     eax,DWORD PTR [edi-0x7e]
  412c41:	in     eax,dx
  412c42:	bound  eax,QWORD PTR fs:[edx+esi*1+0x6cfdec4f]
  412c4a:	les    ebx,FWORD PTR [ecx-0x34]
  412c4d:	mov    eax,ds:0x13e972f
  412c52:	and    cl,bh
  412c54:	out    dx,al
  412c55:	stc    
  412c56:	jae    0x412c31
  412c58:	push   ecx
  412c59:	jecxz  0x412c13
  412c5b:	outs   dx,BYTE PTR ds:[esi]
  412c5c:	jns    0x412ca0
  412c5e:	cmp    al,0x97
  412c60:	and    DWORD PTR [esp+esi*1-0xc],ebx
  412c64:	addr16 in eax,0x6e
  412c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c68:	push   cs
  412c69:	sbb    esp,eax
  412c6b:	(bad)  
  412c6c:	push   eax
  412c6d:	add    dl,BYTE PTR [edi]
  412c6f:	or     eax,0xee248a2c
  412c74:	sahf   
  412c75:	dec    DWORD PTR [eax+0x77149280]
  412c7b:	mov    ds:0x3d6b95d5,al
  412c80:	xor    bh,BYTE PTR [ebx]
  412c82:	xchg   ebp,eax
  412c83:	adc    dh,BYTE PTR [esi+0x6f40f5ae]
  412c89:	jns    0x412ccc
  412c8b:	sub    DWORD PTR [eax-0x34],eax
  412c8e:	ins    BYTE PTR es:[edi],dx
  412c8f:	xlat   BYTE PTR ds:[ebx]
  412c90:	(bad)  
  412c91:	retw   0xc1ee
  412c95:	jo     0x412c30
  412c97:	sbb    edi,esp
  412c99:	jns    0x412c79
  412c9b:	scas   al,BYTE PTR es:[edi]
  412c9c:	aas    
  412c9d:	rol    DWORD PTR [ebp+0x5],1
  412ca0:	pop    edx
  412ca1:	retf   0x11f4
  412ca4:	into   
  412ca5:	and    ecx,DWORD PTR [ecx-0x6a]
  412ca8:	ds pop edx
  412caa:	inc    ecx
  412cab:	jne    0x412d17
  412cad:	jo     0x412d21
  412caf:	loope  0x412c38
  412cb1:	xor    eax,0x3244befa
  412cb6:	lahf   
  412cb7:	xor    eax,0xa7b06389
  412cbc:	pop    ds
  412cbd:	ja     0x412c92
  412cbf:	(bad)  
  412cc1:	push   0x112b772c
  412cc6:	dec    eax
  412cc7:	pusha  
  412cc8:	mov    eax,0x5e05f981
  412ccd:	lods   eax,DWORD PTR ds:[esi]
  412cce:	fidivr DWORD PTR [esi+0x3c]
  412cd1:	adc    al,0x8e
  412cd3:	dec    eax
  412cd4:	clc    
  412cd5:	mov    bl,0x1d
  412cd7:	mov    dh,0xbf
  412cd9:	push   eax
  412cda:	cmp    ecx,DWORD PTR [esp+edi*1+0x71cfe88d]
  412ce1:	loopne 0x412d4d
  412ce3:	stos   DWORD PTR es:[edi],eax
  412ce4:	pusha  
  412ce5:	push   ss
  412ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce7:	dec    ebx
  412ce8:	cmp    ecx,DWORD PTR [edx+0x50da132e]
  412cee:	jo     0x412c9e
  412cf0:	fbld   TBYTE PTR [eax-0x36]
  412cf3:	stos   BYTE PTR es:[edi],al
  412cf4:	add    ebx,DWORD PTR [ebx+0x2b]
  412cf7:	popf   
  412cf8:	sbb    DWORD PTR [ebx-0x4795b661],esp
  412cfe:	and    ah,BYTE PTR [ebx]
  412d00:	or     BYTE PTR fs:[ecx],0x2d
  412d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d05:	rcr    BYTE PTR [eax],cl
  412d07:	add    DWORD PTR [ebx],ecx
  412d09:	cld    
  412d0a:	adc    eax,0xb4664b80
  412d0f:	add    esi,ebp
  412d11:	jle    0x412d8d
  412d13:	outs   dx,DWORD PTR ds:[esi]
  412d14:	jg     0x412cd3
  412d16:	repz call 0xedf6b7b7
  412d1c:	or     esp,esp
  412d1e:	aad    0x64
  412d20:	mov    ecx,0xf5cf4033
  412d25:	mov    ch,0x9b
  412d27:	leave  
  412d28:	out    0x49,eax
  412d2a:	mov    ecx,0xcad62bcc
  412d2f:	mov    esi,0xa43ce0f5
  412d34:	mul    dl
  412d36:	ja     0x412d69
  412d38:	cmp    dl,BYTE PTR [ebx]
  412d3a:	add    edi,DWORD PTR [esi+0x65]
  412d3d:	aad    0x17
  412d3f:	push   0x4b1cad42
  412d44:	hlt    
  412d45:	rol    DWORD PTR [edi-0x4],0xb8
  412d49:	repnz pop edi
  412d4b:	iret   
  412d4c:	sub    bl,BYTE PTR [ebx+0x154920ff]
  412d52:	cmp    BYTE PTR [bx+si],0x8
  412d56:	je     0x412d9b
  412d58:	jp     0x412d27
  412d5a:	or     al,0x7
  412d5c:	mov    ds,WORD PTR [edi+0x79]
  412d5f:	jnp    0x412d8b
  412d61:	xchg   ecx,eax
  412d62:	mov    ch,0x25
  412d64:	je     0x412d94
  412d66:	inc    eax
  412d67:	xchg   edi,eax
  412d68:	add    eax,0x68e18e3a
  412d6d:	neg    DWORD PTR [ebp+eiz*8+0x7e]
  412d71:	dec    ecx
  412d72:	adc    DWORD PTR [eax+0x4c],esp
  412d75:	sub    cl,BYTE PTR [ecx-0x57]
  412d78:	cld    
  412d79:	sbb    edi,DWORD PTR [edx-0x1f]
  412d7c:	fisubr DWORD PTR [ecx]
  412d7e:	stos   BYTE PTR es:[edi],al
  412d7f:	mov    eax,ds:0x422b1bdb
  412d84:	jmp    0x412db7
  412d86:	pop    ecx
  412d87:	je     0x412d6c
  412d89:	mov    bh,0x4b
  412d8b:	fcmovnbe st,st(7)
  412d8d:	out    0xd2,eax
  412d8f:	and    al,0xc8
  412d91:	push   ebx
  412d92:	xchg   BYTE PTR [esi+0x528a803c],cl
  412d98:	popa   
  412d99:	or     ebx,edi
  412d9b:	(bad)  
  412d9c:	mov    esi,0xf0c8fc9d
  412da1:	mov    eax,0xab03ac79
  412da6:	mov    esp,DWORD PTR [ecx+0xf38cf3a]
  412dac:	imul   esp,DWORD PTR [ebp-0x1b6dc365],0xe8a9d172
  412db6:	cmp    al,0x7f
  412db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db9:	shl    DWORD PTR [ebx+0x2a0c118b],1
  412dbf:	and    esi,DWORD PTR [esp+esi*8-0x39]
  412dc3:	xchg   esp,eax
  412dc4:	fucomip st,st(0)
  412dc6:	jecxz  0x412d73
  412dc8:	pop    ebp
  412dc9:	inc    esp
  412dca:	hlt    
  412dcb:	rol    BYTE PTR [edi-0x1b28efca],cl
  412dd1:	stos   DWORD PTR es:[edi],eax
  412dd2:	jne    0x412d8b
  412dd4:	jnp    0x412dde
  412dd6:	cmp    eax,0x72c8e57b
  412ddb:	(bad)  
  412ddc:	push   esp
  412ddd:	xor    eax,0x48eff3f1
  412de2:	pop    es
  412de3:	lods   al,BYTE PTR ds:[esi]
  412de4:	jl     0x412daa
  412de6:	cmc    
  412de7:	rcl    BYTE PTR [eax],0xb7
  412dea:	jecxz  0x412def
  412dec:	enter  0x7bb7,0xa8
  412df0:	mov    WORD PTR [ecx-0x6ee3c4e0],?
  412df6:	jbe    0x412d8c
  412df8:	jae    0x412dcb
  412dfa:	cmp    al,0x32
  412dfc:	mov    gs,WORD PTR [edi]
  412dfe:	pop    esp
  412dff:	xchg   esp,eax
  412e00:	push   esi
  412e01:	mov    cl,0x3b
  412e03:	or     edi,eax
  412e05:	iret   
  412e06:	mov    dl,0xc
  412e08:	ins    DWORD PTR es:[edi],dx
  412e09:	ins    DWORD PTR es:[edi],dx
  412e0a:	ins    BYTE PTR es:[edi],dx
  412e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e0c:	mov    eax,DWORD PTR [edi-0x62e1857]
  412e12:	imul   esi,DWORD PTR [ecx],0x4a
  412e15:	ja     0x412db4
  412e17:	mov    bh,0x95
  412e19:	retf   0x96fb
  412e1c:	stc    
  412e1d:	rcr    DWORD PTR [edi-0x162bff02],0xbe
  412e24:	loop   0x412df0
  412e26:	scas   al,BYTE PTR es:[edi]
  412e27:	idiv   DWORD PTR [esp+esi*2]
  412e2a:	cmp    al,0x80
  412e2c:	(bad)  [eax]
  412e2e:	cmc    
  412e2f:	sub    BYTE PTR [ecx-0x19],dh
  412e32:	lods   eax,DWORD PTR ds:[esi]
  412e33:	jmp    0xd7e4:0x7b04da0c
  412e3a:	ss jl  0x412e91
  412e3d:	retf   0x280b
  412e40:	xchg   esi,eax
  412e41:	add    bh,BYTE PTR [esi-0xc1e5c2d]
  412e47:	outs   dx,DWORD PTR ds:[esi]
  412e48:	jno    0x412e6d
  412e4a:	sub    eax,0x6e7278c9
  412e4f:	sbb    BYTE PTR [esi-0x22],0x68
  412e53:	adc    DWORD PTR [esi-0x5a1cccb5],ecx
  412e59:	out    dx,eax
  412e5a:	push   edi
  412e5b:	dec    ebx
  412e5c:	push   cs
  412e5d:	popa   
  412e5e:	outs   dx,BYTE PTR ds:[esi]
  412e5f:	adc    BYTE PTR [eax],al
  412e61:	cmp    ecx,ebp
  412e63:	sub    al,0x76
  412e65:	mov    bh,0x6d
  412e67:	push   esi
  412e68:	in     al,dx
  412e69:	cs inc edi
  412e6b:	ss hlt 
  412e6d:	cmp    edi,DWORD PTR [edx-0x5baf1549]
  412e73:	sbb    ebp,DWORD PTR [ecx]
  412e75:	and    bh,bh
  412e77:	push   ecx
  412e78:	jge    0x412e8c
  412e7a:	mov    esi,0x7b6c0408
  412e7f:	in     al,dx
  412e80:	mov    DWORD PTR [edx+0xe],esp
  412e83:	repz shr BYTE PTR [edi+0x12],cl
  412e87:	mov    ah,0xee
  412e89:	cmp    ebx,ebx
  412e8b:	gs fdiv st(3),st
  412e8e:	imul   ebp,esi,0x10203100
  412e94:	sti    
  412e95:	jge    0x412ebd
  412e97:	or     bl,BYTE PTR [edi]
  412e99:	fcom   st(3)
  412e9b:	out    0x99,al
  412e9d:	inc    esp
  412e9e:	in     al,dx
  412e9f:	xor    BYTE PTR [edx],ch
  412ea1:	mov    edi,0xfa26ab01
  412ea6:	dec    edi
  412ea7:	sub    BYTE PTR [edx],dl
  412ea9:	xor    bl,BYTE PTR [ebp+ebp*4-0x4a6f2be7]
  412eb0:	sbb    esp,DWORD PTR ss:[ecx-0x31a1c1f1]
  412eb7:	ret    0x6a0b
  412eba:	outs   dx,DWORD PTR ss:[esi]
  412ebc:	ret    0xa5cb
  412ebf:	neg    ebx
  412ec1:	call   0xc8b23f43
  412ec6:	dec    edx
  412ec7:	inc    edx
  412ec8:	retf   0x6ba1
  412ecb:	test   BYTE PTR [ebp+esi*4-0x62d8364c],0x68
  412ed3:	mov    eax,0x50faf693
  412ed8:	lods   al,BYTE PTR ds:[esi]
  412ed9:	(bad)  
  412eda:	mov    ds:0x8b5e197e,al
  412edf:	sub    DWORD PTR ds:[edx+0x22],esi
  412ee3:	or     ah,dl
  412ee5:	push   edx
  412ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee7:	loop   0x412f54
  412ee9:	mov    esi,ebx
  412eeb:	xchg   edi,eax
  412eec:	or     al,BYTE PTR [ebx+eiz*8+0x420a1b8e]
  412ef3:	clc    
  412ef4:	dec    edi
  412ef5:	jo     0x412f1f
  412ef7:	int3   
  412ef8:	mov    DWORD PTR fs:[edx+0x696cef1c],ebp
  412eff:	push   0x758336fe
  412f04:	xor    DWORD PTR [esi-0x1e8f7eb1],0x11
  412f0b:	xchg   esp,eax
  412f0c:	xlat   BYTE PTR ds:[ebx]
  412f0d:	div    DWORD PTR [edi]
  412f0f:	dec    eax
  412f10:	jne    0x412f1e
  412f12:	adc    eax,0x329f3827
  412f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f18:	cmp    eax,0x71c8e575
  412f1d:	lea    edx,[edx+0x5d]
  412f20:	jmp    0x78773f10
  412f25:	gs mov ebx,0xc1232193
  412f2b:	into   
  412f2c:	cmp    ebx,DWORD PTR [ebx+edx*4+0x4005f7fa]
  412f33:	xor    eax,0xb1271922
  412f38:	pop    esi
  412f39:	pusha  
  412f3a:	jno    0x412f78
  412f3c:	mov    edx,0xcb5e0868
  412f41:	sub    eax,0xa356a026
  412f46:	add    BYTE PTR [edx-0x15],cl
  412f49:	sbb    eax,0x4a492818
  412f4e:	into   
  412f4f:	add    ah,BYTE PTR [esi]
  412f51:	cwde   
  412f52:	call   0xd38f:0xa39f726b
  412f59:	sbb    ebx,ebx
  412f5b:	cmp    al,0x6a
  412f5d:	jge    0x412f7d
  412f5f:	jle    0x412fb3
  412f61:	call   0xeba05967
  412f66:	lock add eax,0x70791205
  412f6c:	hlt    
  412f6d:	xor    DWORD PTR [edi+0x6ec688bf],edi
  412f73:	push   ds
  412f74:	in     eax,0xd
  412f76:	pusha  
  412f77:	pop    es
  412f78:	out    0xfc,eax
  412f7a:	jp     0x412f0f
  412f7c:	pop    edx
  412f7d:	popa   
  412f7e:	lds    ebx,FWORD PTR [eax-0x57292b0]
  412f84:	xlat   BYTE PTR ds:[ebx]
  412f85:	xchg   ecx,eax
  412f86:	hlt    
  412f87:	pop    ss
  412f88:	test   al,0x5d
  412f8a:	jne    0x412f3a
  412f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8d:	lea    esi,[esi+edx*4-0x1c]
  412f91:	out    0xe6,eax
  412f93:	adc    eax,0xcaf048c5
  412f98:	jo     0x413005
  412f9a:	sar    BYTE PTR [edx-0xb],0x31
  412f9e:	sti    
  412f9f:	mov    dh,BYTE PTR ds:0x3cfc02cf
  412fa5:	jnp    0x412fec
  412fa7:	in     al,0xd
  412fa9:	sub    dl,BYTE PTR [ecx+0x7a]
  412fac:	mov    bl,0x95
  412fae:	and    BYTE PTR [esi],ch
  412fb0:	push   edx
  412fb1:	sub    cl,BYTE PTR [eax+eiz*8-0xc]
  412fb5:	out    dx,al
  412fb6:	cmp    edx,DWORD PTR ds:0xfdda85f4
  412fbc:	dec    esp
  412fbd:	jns    0x412fd4
  412fbf:	retf   
  412fc0:	cmp    BYTE PTR [eax],ch
  412fc2:	out    0x42,eax
  412fc4:	or     BYTE PTR [esi+0x33],dh
  412fc7:	stos   BYTE PTR es:[edi],al
  412fc8:	inc    ebx
  412fc9:	fnsetpm(287 only) 
  412fcb:	mov    bl,ah
  412fcd:	out    0xcc,al
  412fcf:	mov    ebx,0x2ffdf5d0
  412fd4:	mov    ecx,0x330e1a49
  412fd9:	ins    DWORD PTR es:[edi],dx
  412fda:	dec    ebx
  412fdb:	push   ss
  412fdc:	shl    DWORD PTR [esi],cl
  412fde:	ins    DWORD PTR es:[edi],dx
  412fdf:	inc    esp
  412fe0:	mov    al,ds:0xa8726cc2
  412fe5:	jb     0x412f70
  412fe7:	mov    ds:0xf0734ae9,eax
  412fec:	enter  0x7894,0x77
  412ff0:	call   0xcb19ffe5
  412ff5:	jp     0x413027
  412ff7:	stos   BYTE PTR es:[edi],al
  412ff8:	sbb    dh,bl
  412ffa:	in     eax,0x72
  412ffc:	div    BYTE PTR [edi-0x2b]
  412fff:	cs sub eax,0x2eae7586
  413005:	push   ebp
  413006:	test   DWORD PTR [edx-0x5c],edx
  413009:	aam    0x35
  41300b:	cmp    ecx,eax
  41300d:	push   edi
  41300e:	(bad)  
  41300f:	into   
  413010:	and    bh,bl
  413012:	sub    BYTE PTR [ecx-0x57b9fa62],0x71
  413019:	cmp    al,0x96
  41301b:	std    
  41301c:	stc    
  41301d:	(bad)  
  41301e:	mov    bl,0x19
  413020:	jmp    0x7c5d:0x45333ca5
  413027:	into   
  413028:	push   0x48
  41302a:	inc    ecx
  41302b:	(bad)  
  41302c:	sub    ebp,DWORD PTR [eax+ecx*1]
  41302f:	mov    bl,0xab
  413031:	repz inc eax
  413033:	gs popa 
  413035:	stos   BYTE PTR es:[edi],al
  413036:	sbb    DWORD PTR [esp+edi*2+0x5c],ebx
  41303a:	leave  
  41303b:	adc    BYTE PTR [edi],bh
  41303d:	mov    bh,0xb1
  41303f:	jmp    0x33605b47
  413044:	fnsave [esi]
  413046:	repz mov cl,0xf6
  413049:	ss dec esi
  41304b:	stc    
  41304c:	test   edi,esp
  41304e:	push   eax
  41304f:	(bad)  
  413050:	scas   al,BYTE PTR es:[edi]
  413051:	das    
  413052:	sbb    al,0xc9
  413054:	mov    ebx,0x823f52e5
  413059:	sbb    DWORD PTR [esi+0x5b],0xa
  41305d:	(bad)  
  41305e:	adc    al,0xf2
  413060:	popa   
  413061:	(bad)  
  413062:	in     al,0x81
  413064:	gs rcr cl,1
  413067:	sub    al,0xfa
  413069:	mov    cl,0x84
  41306b:	lods   eax,DWORD PTR ds:[esi]
  41306c:	les    edx,FWORD PTR ds:[edx-0x7e3a7811]
  413073:	mov    ebp,0xe08d2280
  413078:	mov    edx,eax
  41307a:	lods   eax,DWORD PTR ds:[esi]
  41307b:	adc    DWORD PTR [esi+0x5b],edx
  41307e:	sbb    al,0x97
  413080:	sub    eax,0x20578c1e
  413085:	(bad)  
  413086:	pop    ecx
  413087:	push   edi
  413088:	inc    ecx
  413089:	sbb    esi,0x36e35a94
  41308f:	mov    ds:0xa00efaf8,al
  413094:	shl    DWORD PTR [ecx-0x51a4adf4],cl
  41309a:	(bad)  
  41309c:	push   es
  41309d:	add    dl,ch
  41309f:	out    0x1a,al
  4130a1:	xor    BYTE PTR [ebx-0x5a],ch
  4130a4:	pop    ds
  4130a5:	inc    dx
  4130a7:	shr    ebp,cl
  4130a9:	cli    
  4130aa:	mov    ?,WORD PTR [ebx+0x150a2656]
  4130b0:	mov    cl,0x39
  4130b2:	js     0x41311f
  4130b4:	cli    
  4130b5:	scas   al,BYTE PTR es:[edi]
  4130b6:	push   esp
  4130b7:	pop    esi
  4130b8:	ds xchg dl,al
  4130bb:	test   DWORD PTR [edi+0x1f0dcbbe],edi
  4130c1:	push   ebp
  4130c2:	cmp    edi,DWORD PTR [esi]
  4130c4:	retf   0xd80d
  4130c7:	into   
  4130c8:	push   cs
  4130c9:	std    
  4130ca:	cmp    eax,0xa3667e23
  4130cf:	repz fsub QWORD PTR [ebp+0x40]
  4130d3:	std    
  4130d4:	mov    ch,0x61
  4130d6:	clc    
  4130d7:	and    eax,0xcb41d747
  4130dc:	in     al,dx
  4130dd:	mov    eax,0x28523bd4
  4130e2:	sahf   
  4130e3:	inc    edi
  4130e4:	cmp    DWORD PTR [edx+0x66e09851],esp
  4130ea:	das    
  4130eb:	in     al,dx
  4130ec:	arpl   WORD PTR [ecx+0x27],si
  4130ef:	lds    edx,FWORD PTR [ebx]
  4130f1:	mov    ecx,esp
  4130f3:	ja     0x41309a
  4130f5:	das    
  4130f6:	fadd   DWORD PTR [eax+0x2b]
  4130f9:	dec    edx
  4130fa:	pop    esi
  4130fb:	xchg   esp,eax
  4130fc:	fwait
  4130fd:	mov    edx,0xe554bff
  413102:	dec    edi
  413103:	outs   dx,DWORD PTR ds:[esi]
  413104:	push   ecx
  413105:	out    dx,eax
  413106:	cvtps2pi mm5,QWORD PTR [ebx]
  413109:	cmp    ebx,edi
  41310b:	stc    
  41310c:	sub    al,0xb0
  41310e:	scas   eax,DWORD PTR es:[edi]
  41310f:	push   ebx
  413110:	or     esp,esp
  413112:	sub    cl,dh
  413114:	in     eax,dx
  413115:	push   0xffffffd2
  413117:	enter  0xe9e7,0xa
  41311b:	imul   eax,eax,0xffffffa6
  41311e:	dec    ecx
  41311f:	scas   eax,DWORD PTR es:[edi]
  413120:	stc    
  413121:	fist   DWORD PTR [edx-0xc5d6f9f]
  413127:	idiv   ah
  413129:	dec    esi
  41312a:	fldenv [esi+0x22]
  41312d:	(bad)  
  41312e:	cld    
  41312f:	jb     0x4130fa
  413131:	enter  0x633f,0x2f
  413135:	daa    
  413136:	repnz sub al,0x3e
  413139:	outs   dx,BYTE PTR ds:[esi]
  41313a:	stos   DWORD PTR es:[edi],eax
  41313b:	mov    ch,0xe5
  41313d:	push   edx
  41313e:	adc    BYTE PTR [ecx-0x62],0x1d
  413142:	xlat   BYTE PTR ds:[ebx]
  413143:	inc    ecx
  413144:	push   ebx
  413145:	(bad)  
  413146:	(bad)  
  413147:	inc    edi
  413148:	popf   
  413149:	sbb    BYTE PTR [edx+ebx*1],dh
  41314c:	inc    ecx
  41314d:	das    
  41314e:	jne    0x41318d
  413150:	push   ds
  413151:	mov    DWORD PTR [edi],esp
  413153:	mov    ebp,0x10caf277
  413158:	ret    0x2f33
  41315b:	and    DWORD PTR [eax+eiz*8-0x1b],0xffffffba
  413160:	xor    edx,DWORD PTR [ebp-0x79cb3e1f]
  413166:	sub    bh,BYTE PTR [edx-0x6b]
  413169:	enter  0x8291,0xd6
  41316d:	inc    esi
  41316e:	repnz std 
  413170:	pop    ebx
  413171:	test   eax,0x6bec167c
  413176:	pop    ebp
  413177:	test   al,0xfa
  413179:	mov    ecx,0xc23f9e89
  41317e:	sbb    dl,BYTE PTR [eax+0x15d4ffd0]
  413184:	stc    
  413185:	xchg   ebp,eax
  413186:	mov    WORD PTR cs:[edx-0x76],gs
  41318a:	scas   eax,DWORD PTR es:[edi]
  41318b:	outs   dx,BYTE PTR ds:[esi]
  41318c:	mov    ecx,0xc74f70eb
  413191:	and    edx,DWORD PTR [edx+eiz*4-0x5d]
  413195:	jnp    0x41313f
  413197:	lods   al,BYTE PTR ds:[esi]
  413198:	outs   dx,DWORD PTR ds:[esi]
  413199:	pushf  
  41319a:	mov    al,ds:0x372bc945
  41319f:	leave  
  4131a0:	dec    ecx
  4131a1:	ret    0x10a8
  4131a4:	cmp    cl,BYTE PTR es:[ecx+ecx*8+0x7c]
  4131a9:	rcl    esp,1
  4131ab:	pop    eax
  4131ac:	xchg   esi,eax
  4131ad:	shl    BYTE PTR [edi],1
  4131af:	call   0xb9c96a14
  4131b4:	and    ah,cl
  4131b6:	sbb    edx,edi
  4131b8:	cmp    bh,BYTE PTR [esi-0x5052ead6]
  4131be:	xchg   edi,eax
  4131bf:	add    eax,0xdce260fc
  4131c4:	loopne 0x4131e9
  4131c6:	sbb    bl,BYTE PTR [esi]
  4131c8:	push   es
  4131c9:	data16 jne 0x4131e5
  4131cc:	mov    esp,0x30444288
  4131d1:	push   eax
  4131d2:	pop    es
  4131d3:	jb     0x4131aa
  4131d5:	push   eax
  4131d6:	frstor [esi+0x1e8e8624]
  4131dc:	inc    ebp
  4131dd:	pop    edx
  4131de:	mov    bh,0xd1
  4131e0:	mov    dl,0x3e
  4131e2:	adc    dh,BYTE PTR [ebx+0x2a]
  4131e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e6:	inc    ebx
  4131e7:	loope  0x41317f
  4131e9:	les    ecx,FWORD PTR [ebx+eiz*2+0x14f69e63]
  4131f0:	jle    0x413210
  4131f2:	and    DWORD PTR [eax+0x4ddb833b],0xf2447cbf
  4131fc:	add    BYTE PTR [eax-0x7d8e6b6c],bl
  413202:	int3   
  413203:	mov    cl,0x79
  413205:	repz jb 0x413199
  413208:	pop    ss
  413209:	push   ds
  41320a:	data16 ins BYTE PTR es:[edi],dx
  41320c:	test   eax,0x5aac856e
  413211:	icebp  
  413212:	pop    ecx
  413213:	mov    ebx,0x7cbbf89d
  413218:	cld    
  413219:	sahf   
  41321a:	pop    esp
  41321b:	mov    ecx,0xc3e68f80
  413220:	lods   al,BYTE PTR ds:[esi]
  413221:	nop
  413222:	clc    
  413223:	mov    cl,0x65
  413225:	mov    esp,0xc6f49dd8
  41322a:	test   eax,0x7b4d3ff
  41322f:	dec    edi
  413230:	xchg   BYTE PTR ds:0x8aefb5d7,al
  413236:	cmp    esp,esp
  413238:	mov    edx,0x5df64946
  41323d:	push   esp
  41323e:	aam    0xef
  413240:	add    esp,DWORD PTR [eax+ebx*4-0x69]
  413244:	aaa    
  413245:	clc    
  413246:	adc    DWORD PTR [ebx-0x4e7fe34e],ebx
  41324c:	loopne 0x413228
  41324e:	test   cl,0x52
  413251:	das    
  413252:	xor    BYTE PTR [ecx+0x46],bl
  413255:	dec    esp
  413256:	add    ebp,DWORD PTR [ebp-0x1b]
  413259:	jge    0x41327a
  41325b:	or     BYTE PTR [edi-0x5750fff7],bh
  413261:	shl    BYTE PTR [edi+0x7fe83915],0xec
  413268:	idiv   BYTE PTR [ebx-0x26]
  41326b:	inc    edx
  41326c:	adc    BYTE PTR [ecx-0x242f0c1],bh
  413272:	push   edx
  413273:	fst    QWORD PTR [eax]
  413275:	scas   al,BYTE PTR es:[edi]
  413276:	fmulp  st(3),st
  413278:	push   0x72114b7e
  41327d:	mov    eax,0x46ad6889
  413282:	pusha  
  413283:	nop
  413284:	xlat   BYTE PTR ds:[ebx]
  413285:	jmp    0xf694d28a
  41328a:	iret   
  41328b:	pop    ebp
  41328c:	aam    0x46
  41328e:	iret   
  41328f:	xor    eax,ebp
  413291:	dec    ecx
  413292:	xchg   edi,esp
  413294:	jle    0x413248
  413296:	lods   eax,DWORD PTR ds:[esi]
  413297:	enter  0x317a,0x1e
  41329b:	rol    edx,0xf9
  41329e:	mov    ecx,0xf10645c4
  4132a3:	mov    ds:0xc2bf1737,al
  4132a8:	clc    
  4132a9:	pushf  
  4132aa:	or     eax,0x8bba961f
  4132af:	or     ecx,DWORD PTR [ebp+0x28]
  4132b2:	inc    ebx
  4132b3:	sbb    al,0x67
  4132b5:	sbb    BYTE PTR [ecx+0x5627b977],ah
  4132bb:	daa    
  4132bc:	xor    DWORD PTR [eax-0x1e],esi
  4132bf:	(bad)  
  4132c0:	sub    eax,0x667b6c3a
  4132c5:	pop    ebx
  4132c6:	cdq    
  4132c7:	jne    0x41326e
  4132c9:	aaa    
  4132ca:	dec    edx
  4132cb:	dec    esi
  4132cc:	push   cs
  4132cd:	add    edi,DWORD PTR ds:0x14c9d615
  4132d3:	(bad)  
  4132d4:	jmp    0x4b47a108
  4132d9:	push   ss
  4132da:	mov    edx,DWORD PTR [ecx]
  4132dc:	out    0x93,eax
  4132de:	mov    BYTE PTR ds:0xcb9a31a2,dh
  4132e4:	jl     0x413346
  4132e6:	mov    edx,0xc2e5928
  4132eb:	dec    ebp
  4132ec:	xor    eax,0x7079db76
  4132f1:	fisttp DWORD PTR [ebx]
  4132f3:	scas   al,BYTE PTR es:[edi]
  4132f4:	popa   
  4132f5:	fs xchg edx,eax
  4132f7:	test   DWORD PTR [eax-0x2],ebx
  4132fa:	xchg   ebx,eax
  4132fb:	hlt    
  4132fc:	add    eax,0x98e3c02
  413301:	les    ecx,FWORD PTR [ebp-0x1f2f374d]
  413307:	jp     0x4132e3
  413309:	rcr    BYTE PTR [ebx+0x3d8dc566],0xa0
  413310:	push   ecx
  413311:	push   es
  413312:	sbb    BYTE PTR [ecx+0x4a866f8e],cl
  413318:	xor    dl,BYTE PTR [eax]
  41331a:	btr    DWORD PTR [edi+0x25],esi
  41331e:	fsub   DWORD PTR [eax+eiz*1+0x2f]
  413322:	int    0x3a
  413324:	inc    edi
  413325:	jb     0x2fe9f708
  41332b:	pushf  
  41332c:	pop    ds
  41332d:	xchg   dl,al
  41332f:	sub    ebx,DWORD PTR [ecx-0x25]
  413332:	xor    eax,0xb51b0397
  413337:	add    ah,BYTE PTR [edi-0x3a4c3aa]
  41333d:	dec    esp
  41333e:	movzx  ebp,WORD PTR [ebp-0x7]
  413342:	scas   eax,DWORD PTR es:[edi]
  413343:	out    dx,eax
  413344:	mov    edi,ebp
  413346:	neg    BYTE PTR [edi-0x2429cf60]
  41334c:	and    DWORD PTR [edx-0x1b90d2c0],edx
  413352:	inc    ebp
  413353:	rol    dl,0xe5
  413356:	lock jne 0x413351
  413359:	std    
  41335a:	jge    0x41332b
  41335c:	or     eax,0x1f86ee07
  413361:	loop   0x413321
  413363:	imul   ebp,DWORD PTR [ecx+0x2c1be776],0xa4df8a3f
  41336d:	mov    esi,0xd37b1e54
  413372:	sbb    eax,0x6839663c
  413377:	test   DWORD PTR [esi+0x258653d5],edx
  41337d:	jo     0x4133f8
  41337f:	cmc    
  413380:	inc    ebp
  413381:	aas    
  413382:	mov    WORD PTR [esi-0x6614d5e4],?
  413388:	int    0x59
  41338a:	pop    ss
  41338b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41338c:	(bad)  
  41338d:	test   DWORD PTR [ecx+0x44],edx
  413390:	xchg   ebp,eax
  413391:	imul   ebx,DWORD PTR [edi+0x4],0x7
  413395:	cdq    
  413396:	add    ecx,edx
  413398:	xor    BYTE PTR [edi+0x44],dl
  41339b:	outs   dx,WORD PTR ds:[esi]
  41339d:	mov    eax,ds:0x7e19b04b
  4133a2:	loope  0x41334e
  4133a4:	add    cl,bh
  4133a6:	out    0xdc,eax
  4133a8:	das    
  4133a9:	push   ss
  4133aa:	in     eax,0x82
  4133ac:	adc    BYTE PTR [esi],bl
  4133ae:	mov    ecx,DWORD PTR [esi]
  4133b0:	sub    dh,BYTE PTR [ebx+0x66]
  4133b3:	aad    0x2e
  4133b5:	dec    eax
  4133b6:	out    dx,eax
  4133b7:	data16 aad 0x2a
  4133ba:	je     0x4133e4
  4133bc:	xchg   esi,eax
  4133bd:	xchg   al,bl
  4133bf:	or     eax,0xff433aec
  4133c4:	jnp    0x41339b
  4133c6:	jo     0x4133fc
  4133c8:	push   ecx
  4133c9:	jo     0x4133c9
  4133cb:	in     eax,0xd5
  4133cd:	lods   al,BYTE PTR ds:[esi]
  4133ce:	adc    esp,edi
  4133d0:	mov    ch,0xd
  4133d2:	mov    edi,0x5838fe90
  4133d7:	fs xor bh,cl
  4133da:	pop    ss
  4133db:	pop    ebp
  4133dc:	pop    ebp
  4133dd:	pop    esp
  4133de:	jp     0x413386
  4133e0:	mov    eax,?
  4133e2:	push   ebp
  4133e3:	leave  
  4133e4:	hlt    
  4133e5:	xlat   BYTE PTR ds:[ebx]
  4133e6:	or     DWORD PTR [ecx],esp
  4133e8:	test   BYTE PTR [eax-0x69c871c3],bh
  4133ee:	jne    0x41346b
  4133f0:	imul   esi,DWORD PTR [edx],0xc5508e16
  4133f6:	push   ebx
  4133f7:	frstor [eax+0x47]
  4133fa:	out    0xe0,al
  4133fc:	jnp    0x41341b
  4133fe:	das    
  4133ff:	add    al,0xea
  413401:	inc    ecx
  413402:	sbb    eax,0xa322280
  413407:	dec    edi
  413408:	or     DWORD PTR [si-0x5b00],0x7a8ad532
  413411:	or     eax,0x7e07c8fe
  413416:	mov    edx,DWORD PTR [esi]
  413418:	xchg   DWORD PTR [eax],ebp
  41341a:	sub    eax,DWORD PTR [esi-0x48ee5c74]
  413420:	push   esp
  413421:	or     cl,BYTE PTR [esp-0x25b75cc7]
  413428:	mov    edx,0x46194457
  41342d:	enter  0xca42,0x22
  413431:	jmp    0x4133e2
  413433:	jbe    0x413462
  413435:	daa    
  413436:	jb     0x413467
  413438:	push   ebp
  413439:	push   ds
  41343a:	pop    ss
  41343b:	jecxz  0x413416
  41343d:	cmp    eax,0x5351cf8a
  413442:	sub    eax,0x5a0641ee
  413447:	cs cdq 
  413449:	xor    ch,BYTE PTR [esi-0x48]
  41344c:	pushf  
  41344d:	outs   dx,BYTE PTR ds:[esi]
  41344e:	lock (bad) 
  413450:	jp     0x41340d
  413452:	out    0x47,al
  413454:	jp     0x4134d4
  413456:	sub    BYTE PTR [edi+0x780cab9f],ch
  41345c:	(bad)  
  41345d:	in     eax,dx
  41345e:	push   edi
  41345f:	sbb    DWORD PTR [edx+0x5c6d35be],edx
  413465:	imul   edi,DWORD PTR [eax-0x50],0xd23d6a7
  41346c:	lods   eax,DWORD PTR ds:[esi]
  41346d:	xchg   DWORD PTR [esi+0x27b3cd26],ebx
  413473:	sub    bl,BYTE PTR [edx-0x15]
  413476:	push   cs
  413477:	mov    ebx,ebx
  413479:	mov    DWORD PTR [ebx+0x3f],edi
  41347c:	cmp    edx,DWORD PTR [ebx]
  41347e:	sub    al,0x87
  413480:	(bad)  [edx]
  413482:	(bad)  
  413483:	sub    al,0x1c
  413485:	add    esi,ebp
  413487:	sbb    al,0x45
  413489:	scas   al,BYTE PTR es:[edi]
  41348a:	lods   eax,DWORD PTR ds:[esi]
  41348b:	test   dh,0xc0
  41348e:	and    DWORD PTR [edx-0x3ff80df2],ebp
  413494:	mov    bl,0x62
  413496:	sbb    ch,BYTE PTR [edi+0xe]
  413499:	mov    al,ds:0x8e40d772
  41349e:	xor    eax,ebx
  4134a0:	jmp    0x7af7:0xc2284877
  4134a7:	repnz mov bh,0xf7
  4134aa:	cmp    al,0xf4
  4134ac:	shl    DWORD PTR [edi+0x61],1
  4134af:	test   DWORD PTR [esi],edx
  4134b1:	shr    esi,0xf2
  4134b4:	push   esi
  4134b5:	add    ah,BYTE PTR [esi+0x14174042]
  4134bb:	loopne 0x413474
  4134bd:	daa    
  4134be:	iret   
  4134bf:	rol    DWORD PTR [eax-0x3f6d7682],1
  4134c5:	loope  0x413525
  4134c7:	jne    0x4134de
  4134c9:	mov    edx,0xaef62e7
  4134ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cf:	mov    dh,BYTE PTR [ecx-0x52]
  4134d2:	mov    eax,0x5d063e6a
  4134d7:	in     eax,dx
  4134d8:	in     eax,0x99
  4134da:	sub    al,0xee
  4134dc:	enter  0xd62b,0xdb
  4134e0:	xor    esi,DWORD PTR [edi+eiz*1-0x5f]
  4134e4:	ret    
  4134e5:	add    esi,eax
  4134e7:	loop   0x41351f
  4134e9:	xchg   esi,eax
  4134ea:	ficomp WORD PTR [esi+0x4cca2056]
  4134f0:	cmp    bh,BYTE PTR [edi+0x7d]
  4134f3:	pop    ecx
  4134f4:	out    dx,al
  4134f5:	loope  0x413515
  4134f7:	cmp    eax,0x66fcdf3
  4134fc:	mov    ebx,0x4ae37c96
  413501:	shl    DWORD PTR [ecx+0x29],1
  413504:	and    BYTE PTR [esi+0x7],ch
  413507:	inc    ebx
  413508:	call   0x415966a8
  41350d:	xchg   esi,eax
  41350e:	imul   edi,DWORD PTR [esi+esi*4+0x65301b0c],0xffffffb6
  413516:	sbb    DWORD PTR [edx],ecx
  413518:	mov    bl,0xe1
  41351a:	sahf   
  41351b:	ss call ecx
  41351e:	sub    eax,0x4f079a40
  413523:	(bad)  
  413524:	icebp  
  413525:	mov    WORD PTR [edi],fs
  413527:	js     0x4134c0
  413529:	sub    ecx,DWORD PTR [edi-0x1de0041a]
  41352f:	adc    ch,BYTE PTR [ecx+eax*1-0x64]
  413533:	mov    ebp,0xb8cc3f6a
  413538:	xchg   edi,eax
  413539:	aad    0x5d
  41353b:	dec    ebp
  41353c:	xchg   esp,eax
  41353d:	jno    0x4135b8
  41353f:	nop
  413540:	mov    WORD PTR [edi],ss
  413542:	in     al,0xd0
  413544:	je     0x4134e8
  413546:	mov    BYTE PTR [edi],bl
  413548:	or     edx,edi
  41354a:	cmc    
  41354b:	mov    al,0xd2
  41354d:	call   0x225d6c23
  413552:	sub    al,0x78
  413554:	jecxz  0x413534
  413556:	pushf  
  413557:	test   ch,ah
  413559:	push   ebx
  41355a:	(bad)  
  41355b:	jmp    0x26976827
  413560:	jb     0x4135d9
  413562:	or     al,al
  413564:	adc    al,0xcf
  413566:	mov    cl,0x9f
  413568:	xor    ebx,DWORD PTR [edi-0x1c1bb712]
  41356e:	pusha  
  41356f:	enter  0xb923,0xac
  413573:	(bad)  
  413574:	cwde   
  413575:	sub    al,0x95
  413577:	jl     0x41356b
  413579:	dec    ecx
  41357a:	stos   BYTE PTR es:[edi],al
  41357b:	fdiv   st,st(1)
  41357d:	fld    QWORD PTR [eax-0x43]
  413580:	sar    BYTE PTR [ecx-0x17934668],1
  413586:	(bad)  
  413587:	dec    edi
  413588:	or     cl,dh
  41358a:	sub    al,0xac
  41358c:	gs sub eax,0xeadd342f
  413592:	pushf  
  413593:	cmp    edi,DWORD PTR [edx+edi*8]
  413596:	mov    al,0x2a
  413598:	shl    DWORD PTR [ebx+0x2e1262e1],0xb
  41359f:	bound  ax,DWORD PTR [edi-0x3d]
  4135a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a4:	adc    BYTE PTR [ecx+0x34],cl
  4135a7:	pop    edi
  4135a8:	nop
  4135a9:	xor    eax,0xb8788a89
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	(bad)  
  4135b0:	mov    dl,0x68
  4135b2:	cld    
  4135b3:	xor    al,0x47
  4135b5:	and    ebp,DWORD PTR [ebx]
  4135b7:	(bad)  
  4135b9:	mov    ebp,0xee5798a9
  4135be:	adc    BYTE PTR [eax+0x7611e904],ah
  4135c4:	jmp    0x4135db
  4135c6:	jle    0x413600
  4135c8:	ins    BYTE PTR es:[edi],dx
  4135c9:	xor    DWORD PTR [ebp+0x1edc6336],esi
  4135cf:	lds    eax,FWORD PTR [ecx]
  4135d1:	test   al,0x72
  4135d3:	fldenv [eax-0x53]
  4135d6:	icebp  
  4135d7:	neg    bl
  4135d9:	test   BYTE PTR [eax+ebp*2],0xc9
  4135dd:	sub    DWORD PTR [ebp+0x1f7feec8],edx
  4135e3:	lock jno 0x41356a
  4135e6:	mov    ecx,DWORD PTR [edx]
  4135e8:	cs sahf 
  4135ea:	add    al,0x88
  4135ec:	cli    
  4135ed:	pop    esp
  4135ee:	push   es
  4135ef:	pop    edi
  4135f0:	fs pop edi
  4135f2:	mov    dh,0x25
  4135f4:	and    eax,0x77fd1f4f
  4135f9:	repz lea ebp,[ecx+0x75]
  4135fd:	or     al,0x6c
  4135ff:	sub    al,0x36
  413601:	rcr    BYTE PTR [esi-0x36ebdccf],0x26
  413608:	push   esi
  413609:	das    
  41360a:	xchg   ecx,eax
  41360b:	int    0x9
  41360d:	cdq    
  41360e:	or     al,0x4a
  413610:	je     0x4135b4
  413612:	add    al,0xd0
  413614:	bound  eax,QWORD PTR ds:0xbaa600f9
  41361a:	stos   BYTE PTR es:[edi],al
  41361b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41361c:	inc    esp
  41361d:	shl    BYTE PTR [edx],0xb4
  413620:	mov    ah,0x1c
  413622:	pop    ebx
  413623:	test   eax,0x220c0fa1
  413628:	jl     0x413677
  41362a:	xchg   esi,eax
  41362b:	lock or eax,0x80da3e0c
  413631:	sbb    BYTE PTR [eax+0x6791550a],dl
  413637:	out    0x78,eax
  413639:	sbb    eax,0x6898b3f8
  41363e:	adc    edi,DWORD PTR [edx]
  413640:	shl    BYTE PTR [ecx+0x1181a426],cl
  413646:	mov    al,ds:0x3140a2ab
  41364b:	data16 fcmovu st,st(1)
  41364e:	icebp  
  41364f:	xchg   edi,eax
  413650:	push   0xb1a58951
  413655:	hlt    
  413656:	cwde   
  413657:	fcomp  st(5)
  413659:	jl     0x41362c
  41365b:	outs   dx,DWORD PTR ds:[esi]
  41365c:	out    0x33,al
  41365e:	ret    0x3801
  413661:	mov    ch,0x16
  413663:	cld    
  413664:	xchg   esp,eax
  413665:	repz push eax
  413667:	sub    eax,0xb71712d4
  41366c:	xchg   BYTE PTR ds:0x49918e47,bh
  413672:	add    edi,esp
  413674:	stos   BYTE PTR es:[edi],al
  413675:	mov    bl,0xc2
  413677:	pop    ecx
  413678:	rol    BYTE PTR [ebx],1
  41367a:	push   esp
  41367b:	push   ebx
  41367c:	test   BYTE PTR [ebx],ah
  41367e:	pop    ds
  41367f:	shl    BYTE PTR [edx],1
  413681:	sub    DWORD PTR [ebp+ecx*4+0x24caa242],0xebf2f454
  41368c:	mov    ?,WORD PTR [ebx-0x3e]
  41368f:	xlat   BYTE PTR ds:[ebx]
  413690:	into   
  413691:	inc    esi
  413692:	imul   edx,DWORD PTR [edx],0x5433c2a2
  413698:	out    0xa3,al
  41369a:	or     bh,BYTE PTR [esi]
  41369c:	inc    edi
  41369d:	push   esp
  41369e:	hlt    
  41369f:	mov    dl,0xc8
  4136a1:	jbe    0x413718
  4136a3:	mov    ?,edi
  4136a5:	jne    0x413646
  4136a7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136a9:	sbb    al,0x93
  4136ab:	and    al,0x6e
  4136ad:	mov    edx,DWORD PTR [ebp+0x65]
  4136b0:	mov    ds:0xe8b96b17,al
  4136b5:	(bad)  
  4136b6:	aas    
  4136b7:	cmp    eax,0xe2e0851f
  4136bc:	sbb    esp,DWORD PTR ss:[ebp+0x4b14e76e]
  4136c3:	mov    al,ds:0x7712cbf5
  4136c8:	push   cs
  4136c9:	push   ebp
  4136ca:	in     al,dx
  4136cb:	and    al,BYTE PTR [edi-0x7e]
  4136ce:	jp     0x4136c4
  4136d0:	cli    
  4136d1:	rcr    DWORD PTR [eax],1
  4136d3:	jmp    0x204:0x92244928
  4136da:	loopne 0x413672
  4136dc:	adc    ebp,DWORD PTR [ebx]
  4136de:	into   
  4136df:	ret    0xf129
  4136e2:	sahf   
  4136e3:	aaa    
  4136e4:	or     ebp,DWORD PTR [eax+0x47]
  4136e7:	test   BYTE PTR [ebx+0x18f349dc],ah
  4136ed:	push   esi
  4136ee:	shr    BYTE PTR [ebp+ecx*8+0x3c32bad7],cl
  4136f5:	sub    eax,0x66cedf0f
  4136fa:	outs   dx,BYTE PTR ds:[esi]
  4136fb:	adc    al,0xcc
  4136fd:	jno    0x413712
  4136ff:	jo     0x4136e7
  413701:	dec    edx
  413702:	(bad)  
  413703:	cmp    al,0xbb
  413705:	or     esi,DWORD PTR [ecx-0x37]
  413708:	lahf   
  413709:	nop
  41370a:	out    dx,al
  41370b:	shl    BYTE PTR [edx-0x40],cl
  41370e:	push   0xa7203f9c
  413713:	cmp    esi,eax
  413715:	fimul  DWORD PTR [edx]
  413717:	mov    ch,0x1e
  413719:	retf   0x8201
  41371c:	and    ecx,0x590f9bb7
  413722:	pop    DWORD PTR [edx-0x58ddf6c6]
  413728:	dec    edi
  413729:	(bad)  
  41372a:	jmp    FWORD PTR [esi]
  41372c:	push   0xffffffbe
  41372e:	inc    edi
  41372f:	cmp    DWORD PTR [edi+0x9],ecx
  413732:	xchg   ecx,ecx
  413734:	xor    DWORD PTR [edi+0xf],edi
  413737:	jmp    0x413747
  413739:	push   ebx
  41373a:	das    
  41373b:	dec    ecx
  41373c:	sbb    BYTE PTR [edx+0x7],0xc9
  413740:	cli    
  413741:	out    0x61,eax
  413743:	clc    
  413744:	dec    edi
  413745:	je     0x413730
  413747:	inc    eax
  413748:	rol    DWORD PTR [esi+0x31],0x3d
  41374c:	inc    edx
  41374d:	cmp    BYTE PTR [ecx-0x1ee9e9c2],bh
  413753:	dec    eax
  413754:	cmc    
  413755:	mov    bh,0xb6
  413757:	cmp    BYTE PTR [eax],bl
  413759:	pop    ecx
  41375a:	sti    
  41375b:	into   
  41375c:	mul    DWORD PTR [edx]
  41375e:	or     edx,ebx
  413760:	ret    0xb983
  413763:	loop   0x413743
  413765:	jo     0x413782
  413767:	call   0xf97e2ce3
  41376c:	dec    eax
  41376d:	hlt    
  41376e:	sub    ebp,DWORD PTR [ebx+0x64]
  413771:	enter  0x36bb,0x7f
  413775:	mov    ch,0x42
  413777:	mov    ecx,0x1cbd8765
  41377c:	push   ebp
  41377d:	mov    ebx,DWORD PTR [ebp+0x4d7b71e2]
  413783:	gs mov edx,0xee5c0693
  413789:	push   edi
  41378a:	and    al,0x84
  41378c:	pop    DWORD PTR [edi-0x1737699]
  413792:	lds    esi,FWORD PTR [ebx-0x2b41ac44]
  413798:	jmp    0x7312072a
  41379d:	xchg   ecx,eax
  41379e:	dec    ecx
  41379f:	mov    bh,0x16
  4137a1:	add    al,0xc2
  4137a3:	lods   eax,DWORD PTR ds:[esi]
  4137a4:	rcl    DWORD PTR [ebx+eiz*1],cl
  4137a7:	(bad)  
  4137a8:	imul   eax,DWORD PTR [eax],0xab672de2
  4137ae:	nop
  4137af:	push   0xffffffd3
  4137b1:	(bad)  
  4137b2:	lods   eax,DWORD PTR ds:[esi]
  4137b3:	cdq    
  4137b4:	jg     0x4137e2
  4137b6:	mov    dl,0x26
  4137b8:	fistp  QWORD PTR ds:0x7e057c2e
  4137be:	pop    es
  4137bf:	test   al,0xec
  4137c1:	xor    ah,bh
  4137c3:	xor    BYTE PTR [esi+0x171add42],0xa5
  4137ca:	lock inc eax
  4137cc:	ret    0xdf91
  4137cf:	or     al,0xd3
  4137d1:	jecxz  0x413780
  4137d3:	jmp    0x2f57c8c0
  4137d8:	and    ch,BYTE PTR [edx]
  4137da:	aaa    
  4137db:	or     DWORD PTR ds:[edx+0x70c2102],0x1d
  4137e3:	dec    eax
  4137e4:	stos   BYTE PTR es:[edi],al
  4137e5:	sub    ebx,ebp
  4137e7:	cmp    al,0x8d
  4137e9:	jne    0x413793
  4137eb:	lea    ecx,[edi+0x2b]
  4137ee:	loopne 0x413796
  4137f0:	int    0xab
  4137f2:	cmp    ebx,DWORD PTR [edi-0x72]
  4137f5:	test   BYTE PTR [eax+eiz*2],cl
  4137f8:	mov    cl,0x5b
  4137fa:	inc    edi
  4137fb:	xchg   ecx,eax
  4137fc:	push   ss
  4137fd:	cmp    DWORD PTR [esi],ebx
  4137ff:	loop   0x4137c3
  413801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413802:	or     BYTE PTR [ebp-0x3c],bh
  413805:	pop    eax
  413806:	cmp    al,0xdc
  413808:	and    esi,0x259416b7
  41380e:	dec    esp
  41380f:	add    DWORD PTR [ecx-0x4f],0x9d57b333
  413816:	bswap  eax
  413818:	punpckhdq mm2,QWORD PTR [ecx+0x68]
  41381c:	aam    0x46
  41381e:	imul   esi,ebp,0x60
  413821:	pop    esi
  413822:	outs   dx,BYTE PTR ds:[esi]
  413823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413824:	push   edx
  413825:	adc    ch,dh
  413827:	mov    ebp,DWORD PTR [eax+ecx*1]
  41382a:	outs   dx,DWORD PTR ds:[esi]
  41382b:	sub    BYTE PTR [eax],dh
  41382d:	pop    edx
  41382e:	add    ecx,DWORD PTR [edi]
  413830:	lea    edx,[ebp-0xe46fb47]
  413836:	out    0x65,al
  413838:	(bad)  
  413839:	and    ebp,DWORD PTR [ebx-0x72d36808]
  41383f:	(bad)  
  413841:	add    edi,DWORD PTR [edi+0x52]
  413844:	aaa    
  413845:	ins    BYTE PTR es:[edi],dx
  413846:	loop   0x4138b5
  413848:	repnz push es
  41384a:	repnz repnz or BYTE PTR [ecx-0x4b],0xed
  413850:	dec    esi
  413851:	push   esi
  413852:	mov    ch,0xfa
  413854:	mov    BYTE PTR [ebx+0x1895902d],dl
  41385a:	loop   0x4138ae
  41385c:	or     eax,0x4b38ee56
  413861:	pop    esi
  413862:	fs daa 
  413864:	pop    ss
  413865:	mov    ah,0xd8
  413867:	mov    cl,0xfc
  413869:	stc    
  41386a:	rcl    BYTE PTR [edi],cl
  41386c:	push   ecx
  41386d:	imul   ecx,edi,0x18
  413870:	int    0xf6
  413872:	mov    bh,0xfe
  413874:	jp     0x4138b5
  413876:	and    ch,bl
  413878:	ja     0x413855
  41387a:	sahf   
  41387b:	add    al,0xcf
  41387d:	adc    bl,BYTE PTR [eax+eax*4]
  413880:	adc    eax,DWORD PTR [ecx-0x6d]
  413883:	mov    esi,0xf1f64afb
  413888:	int3   
  413889:	pop    ebx
  41388a:	sbb    esp,0x3b
  41388d:	test   al,0x35
  41388f:	cmc    
  413890:	adc    al,0xa7
  413892:	btc    DWORD PTR [edx],0xaa
  413896:	test   eax,0xae17daf
  41389b:	lods   eax,DWORD PTR ds:[esi]
  41389c:	mov    al,0xcf
  41389e:	stc    
  41389f:	fbstp  TBYTE PTR ds:0xea4f50ef
  4138a5:	(bad)  
  4138a6:	fisubr WORD PTR [ecx-0x172bbf99]
  4138ac:	outs   dx,DWORD PTR ds:[esi]
  4138ad:	lods   al,BYTE PTR ds:[esi]
  4138ae:	mov    ecx,0x57e93902
  4138b3:	and    BYTE PTR [ebx],ah
  4138b5:	inc    edi
  4138b6:	sbb    edi,DWORD PTR ds:0x8aa74e95
  4138bc:	sub    ch,bh
  4138be:	lods   eax,DWORD PTR ds:[esi]
  4138bf:	cmp    DWORD PTR [ebx],eax
  4138c1:	xor    ebx,DWORD PTR [esi+esi*4]
  4138c4:	out    0x89,al
  4138c6:	dec    ebx
  4138c7:	jecxz  0x4138ad
  4138c9:	dec    esp
  4138ca:	imul   ecx,DWORD PTR [ebp-0x63],0xffffffdf
  4138ce:	out    dx,eax
  4138cf:	cdq    
  4138d0:	gs popf 
  4138d2:	cmp    cl,bl
  4138d4:	bound  edi,QWORD PTR [ebp+0x3e]
  4138d7:	in     eax,dx
  4138d8:	pusha  
  4138d9:	std    
  4138da:	fdiv   DWORD PTR [esi-0x3b]
  4138dd:	cmp    edi,DWORD PTR [ebx-0x32]
  4138e0:	mov    esp,0xa0521c37
  4138e5:	(bad)  
  4138e6:	sbb    esp,ebp
  4138e8:	out    0x7c,eax
  4138ea:	nop
  4138eb:	adc    DWORD PTR [edx-0x4f538a59],ebx
  4138f1:	pop    esp
  4138f2:	loopne 0x413946
  4138f4:	cld    
  4138f5:	jb     0x413877
  4138f7:	and    BYTE PTR [edi],0x56
  4138fa:	out    dx,eax
  4138fb:	es cli 
  4138fd:	bound  ecx,QWORD PTR [esi-0x6b]
  413900:	cwde   
  413901:	adc    eax,0x5fe8d7e
  413906:	sub    eax,0x40f907ad
  41390b:	or     eax,0xf4c46489
  413910:	xchg   BYTE PTR [esi+0x2954c2fc],dh
  413916:	adc    ecx,edx
  413918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413919:	add    bl,BYTE PTR ds:0x702ad556
  41391f:	mov    ah,0x5e
  413921:	mov    esp,0xfe84a8f6
  413926:	call   0x282c:0xc06d2539
  41392d:	das    
  41392e:	mov    WORD PTR [ecx+0x25],ds
  413931:	xor    ch,BYTE PTR [ebx-0x16]
  413934:	dec    DWORD PTR [ebx-0x6f]
  413937:	jle    0x4139a0
  413939:	push   ss
  41393a:	loope  0x413998
  41393c:	hlt    
  41393d:	pop    ss
  41393e:	jecxz  0x413914
  413940:	pusha  
  413941:	lods   al,BYTE PTR ds:[esi]
  413942:	inc    edi
  413943:	jb     0x4139a7
  413945:	imul   esp,ebp,0xadc4b43a
  41394b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41394c:	xchg   ecx,eax
  41394d:	pop    edx
  41394e:	dec    BYTE PTR [edx-0xb]
  413951:	cs mov cl,al
  413954:	push   ebx
  413955:	mov    ds:0xb183ced,al
  41395a:	cmp    cl,ch
  41395c:	ss dec esi
  41395e:	mov    al,ds:0x22911473
  413963:	stos   BYTE PTR es:[edi],al
  413964:	dec    esi
  413965:	sbb    al,0xf9
  413967:	stos   DWORD PTR es:[edi],eax
  413968:	sbb    DWORD PTR [edi-0x3ff1508f],0xdf7eef31
  413972:	push   ds
  413973:	xor    bh,al
  413975:	adc    BYTE PTR [edi+0x57],ah
  413978:	out    dx,al
  413979:	dec    ebp
  41397a:	jp     0x413962
  41397c:	inc    ebx
  41397d:	pop    ecx
  41397e:	sahf   
  41397f:	icebp  
  413980:	ror    BYTE PTR [ecx+0x7a],cl
  413983:	test   dh,ch
  413985:	cli    
  413986:	dec    ebp
  413987:	(bad)  
  413988:	mov    eax,ds:0x309bfe2
  41398d:	sub    BYTE PTR [eax-0x68],dh
  413990:	push   esi
  413991:	cmp    ecx,DWORD PTR [ebx+ebp*8+0x27]
  413995:	clc    
  413996:	test   al,0x10
  413998:	jo     0x41393f
  41399a:	test   BYTE PTR [ebp-0x51c1a0ed],ah
  4139a0:	add    edi,ebp
  4139a2:	mov    cl,0x33
  4139a4:	sub    DWORD PTR [esi],edi
  4139a6:	and    BYTE PTR [edi-0x4d80e9ea],0xdb
  4139ad:	inc    esi
  4139ae:	sub    dh,BYTE PTR [esi+0x4c]
  4139b1:	daa    
  4139b2:	sub    ebp,ebx
  4139b4:	sbb    eax,0xf8a40bc6
  4139b9:	adc    BYTE PTR [ebx-0x22],dl
  4139bc:	sar    DWORD PTR [edi],cl
  4139be:	outs   dx,BYTE PTR ds:[esi]
  4139bf:	push   ecx
  4139c0:	outs   dx,BYTE PTR ds:[esi]
  4139c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c2:	and    DWORD PTR [esi+ebx*4+0x136f723],ebx
  4139c9:	jmp    0x413a13
  4139cb:	and    BYTE PTR [eax],0x8c
  4139ce:	ficomp WORD PTR [edi+0xfaf4cf0]
  4139d4:	out    0x26,al
  4139d6:	data16 jae 0x41395c
  4139d9:	mov    esi,0x64cb7598
  4139de:	fwait
  4139df:	push   esp
  4139e0:	xchg   ecx,eax
  4139e1:	mov    dh,0xc2
  4139e3:	clc    
  4139e4:	test   BYTE PTR [ebp+0x18a173f1],0x74
  4139eb:	or     DWORD PTR [edx-0x18ea682e],eax
  4139f1:	(bad)  
  4139f2:	jnp    0x413a61
  4139f4:	jmp    0x4139f9
  4139f6:	jns    0x4139b7
  4139f8:	mov    ds:0xcd420f62,al
  4139fd:	or     BYTE PTR [ecx+edi*2+0x3a],ch
  413a01:	and    eax,0x390a90fc
  413a06:	es sub bl,dh
  413a09:	aam    0x5d
  413a0b:	xchg   ebp,eax
  413a0c:	inc    edi
  413a0d:	mov    ecx,edi
  413a0f:	jno    0x413a2f
  413a11:	cmp    al,0x11
  413a13:	and    eax,0xc455a884
  413a18:	pop    ecx
  413a19:	cmp    eax,0x612a58e1
  413a1e:	xchg   ebx,eax
  413a1f:	lods   al,BYTE PTR ds:[esi]
  413a20:	sbb    dh,BYTE PTR [eax]
  413a22:	outs   dx,BYTE PTR ds:[esi]
  413a23:	mov    dh,0x22
  413a25:	cmp    DWORD PTR [edx-0x3e],edx
  413a28:	gs pop eax
  413a2a:	jg     0x413a67
  413a2c:	mov    bh,bh
  413a2e:	cli    
  413a2f:	pop    edi
  413a30:	ret    0x763
  413a33:	int    0xe8
  413a35:	push   cs
  413a36:	aaa    
  413a37:	xchg   BYTE PTR [esi-0x3bcea905],ch
  413a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3e:	cdq    
  413a3f:	nop
  413a40:	adc    al,BYTE PTR [edi-0x1b280da3]
  413a46:	lds    edx,FWORD PTR [edi+eax*4+0x7d]
  413a4a:	xor    al,0x58
  413a4c:	pop    di
  413a4e:	fldcw  WORD PTR [eax]
  413a50:	add    al,0xdb
  413a52:	lds    ebp,FWORD PTR [eax]
  413a54:	jnp    0x413abd
  413a56:	pop    edi
  413a57:	cdq    
  413a58:	or     ecx,DWORD PTR [ecx]
  413a5a:	stos   DWORD PTR es:[edi],eax
  413a5b:	dec    ebp
  413a5c:	test   DWORD PTR [esi-0x6],esp
  413a5f:	add    cl,BYTE PTR [edx]
  413a61:	es lahf 
  413a63:	adc    eax,0x3b8efaf2
  413a68:	pop    ebp
  413a69:	test   BYTE PTR [ecx+0x4c],0x27
  413a6d:	leave  
  413a6e:	out    0x93,al
  413a70:	add    al,0x70
  413a73:	or     al,0x84
  413a75:	cwde   
  413a76:	loopne 0x413a0d
  413a78:	xor    DWORD PTR [esi+0x30],edi
  413a7b:	mov    ebp,0xd00a19e5
  413a80:	mov    eax,0x6c04734a
  413a85:	xchg   ebx,eax
  413a86:	leave  
  413a87:	sub    esp,ebx
  413a89:	sub    al,BYTE PTR [ebx-0x73563ed9]
  413a8f:	xchg   ebp,eax
  413a90:	popf   
  413a91:	jp     0x413a74
  413a93:	adc    esi,DWORD PTR [eax]
  413a95:	sbb    al,0x65
  413a97:	adc    ch,BYTE PTR [eax-0x614a17a4]
  413a9d:	loop   0x413af6
  413a9f:	dec    ebx
  413aa0:	aaa    
  413aa1:	not    al
  413aa3:	sbb    BYTE PTR [eax-0x45],al
  413aa6:	fmul   st,st(4)
  413aa8:	das    
  413aa9:	pop    ebx
  413aaa:	push   ss
  413aab:	retw   0x3acf
  413aaf:	sti    
  413ab0:	mov    WORD PTR [ecx],ds
  413ab2:	cmp    al,0xcf
  413ab4:	mov    cl,0x78
  413ab6:	xor    dl,ch
  413ab8:	cli    
  413ab9:	mov    ah,0x56
  413abb:	cmp    eax,0xd074902
  413ac0:	bound  eax,QWORD PTR [ebx]
  413ac2:	sub    DWORD PTR [edi+ebp*1+0x1c216b8e],edi
  413ac9:	push   edx
  413aca:	dec    edx
  413acb:	dec    ebp
  413acc:	das    
  413acd:	out    dx,eax
  413ace:	push   cs
  413acf:	inc    ebp
  413ad0:	jbe    0x413b41
  413ad2:	aas    
  413ad3:	sti    
  413ad4:	push   ebx
  413ad5:	js     0x413b14
  413ad7:	sbb    BYTE PTR ds:0xa766da59,dh
  413add:	xor    eax,0xb1a29d62
  413ae2:	jno    0x413ad6
  413ae4:	xchg   ebp,eax
  413ae5:	ss leave 
  413ae7:	stos   BYTE PTR es:[edi],al
  413ae8:	and    dl,bl
  413aea:	sbb    ecx,DWORD PTR [eax]
  413aec:	shr    DWORD PTR [esi],1
  413aee:	xchg   DWORD PTR [edx],edi
  413af0:	sbb    DWORD PTR [ebx],esp
  413af2:	popf   
  413af3:	aas    
  413af4:	cmp    BYTE PTR [edx+0x74],cl
  413af7:	je     0x413b57
  413af9:	sbb    dh,dh
  413afb:	xor    al,0x5e
  413afd:	lods   al,BYTE PTR ds:[esi]
  413afe:	outs   dx,DWORD PTR ds:[esi]
  413aff:	mov    BYTE PTR [esi+0x31b397d3],bl
  413b05:	mov    ebp,0x23dddc3
  413b0a:	xor    bh,al
  413b0c:	scas   al,BYTE PTR es:[edi]
  413b0d:	push   ebx
  413b0e:	pinsrw mm7,ecx,0xa5
  413b12:	or     bl,al
  413b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b15:	sahf   
  413b16:	adc    BYTE PTR [ebp+0x6d98334d],bh
  413b1c:	hlt    
  413b1d:	or     al,0x35
  413b1f:	jnp    0x413b20
  413b21:	out    dx,eax
  413b22:	xchg   DWORD PTR [esi],edx
  413b24:	jne    0x413b78
  413b26:	lods   al,BYTE PTR ds:[esi]
  413b27:	jmp    0x413b45
  413b29:	lock sti 
  413b2b:	sbb    eax,0x8fbc3c67
  413b30:	pop    ebp
  413b31:	test   BYTE PTR [edx],ch
  413b33:	call   0xd2e0:0xa6c175ac
  413b3a:	mov    dh,0xb4
  413b3c:	inc    edx
  413b3d:	add    ecx,DWORD PTR [esi+0x3cf550d3]
  413b43:	pop    ss
  413b44:	pop    es
  413b45:	shl    BYTE PTR [ecx],1
  413b47:	out    0x21,al
  413b49:	aam    0x56
  413b4b:	lock mov ds:0x47e04b97,al
  413b51:	out    0xdd,al
  413b53:	enter  0x38e3,0x1
  413b57:	rcr    DWORD PTR [ebx-0x2d],0xb4
  413b5b:	loope  0x413ba7
  413b5d:	ja     0x413bae
  413b5f:	mov    ?,WORD PTR ds:0xfb44d23
  413b65:	int    0xfe
  413b67:	sub    eax,0x4d6c5e21
  413b6c:	mov    dh,0x7f
  413b6e:	shl    BYTE PTR ds:0x1afcaa53,0x9
  413b75:	fdiv   st,st(0)
  413b77:	test   eax,0x508821fe
  413b7c:	mov    ds,WORD PTR [eax-0x708db4f4]
  413b82:	xor    al,0x3a
  413b84:	or     DWORD PTR [edx],esi
  413b86:	push   edx
  413b87:	add    BYTE PTR [eax-0x105c17a8],bh
  413b8d:	cmp    al,0x67
  413b8f:	mov    edi,0x3bbb1c7a
  413b94:	mov    ebx,0x3c07df4d
  413b99:	xor    esi,DWORD PTR [ebx-0x84988b4]
  413b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba0:	pop    ebp
  413ba1:	fadd   st,st(4)
  413ba3:	jle    0x413b5c
  413ba5:	mov    edi,0x33ccf708
  413baa:	outs   dx,BYTE PTR ds:[esi]
  413bab:	push   ebx
  413bac:	sbb    DWORD PTR [esi-0x76],ecx
  413baf:	outs   dx,BYTE PTR ds:[esi]
  413bb0:	sbb    BYTE PTR [eax+0x45ab918b],dh
  413bb6:	push   0x2d
  413bb8:	mov    dl,0xfe
  413bba:	push   cs
  413bbb:	push   0xfffffff1
  413bbd:	pop    ebx
  413bbe:	mov    dh,0x5c
  413bc0:	jg     0x413bf7
  413bc2:	sub    bh,bh
  413bc4:	adc    eax,DWORD PTR [eax]
  413bc6:	xlat   BYTE PTR ds:[ebx]
  413bc7:	pusha  
  413bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc9:	shl    ch,0x75
  413bcc:	adc    edi,edx
  413bce:	mov    ch,0xd8
  413bd0:	popa   
  413bd1:	pop    ecx
  413bd2:	xor    DWORD PTR [ecx+0x30903769],0x15
  413bd9:	add    al,cl
  413bdb:	aas    
  413bdc:	pop    ebp
  413bdd:	xchg   esp,eax
  413bde:	dec    edi
  413bdf:	lea    ebx,[eax-0x11]
  413be2:	dec    eax
  413be3:	repz dec esp
  413be5:	and    eax,0xbf219549
  413bea:	aas    
  413beb:	push   edx
  413bec:	aas    
  413bed:	iret   
  413bee:	jp     0x413ba7
  413bf0:	inc    ebx
  413bf1:	jmp    0x413bb7
  413bf3:	out    0x95,al
  413bf5:	dec    ebp
  413bf6:	jae    0x413c08
  413bf8:	sbb    eax,0xaa3a73cb
  413bfd:	pop    ds
  413bfe:	pop    ds
  413bff:	out    dx,al
  413c00:	push   eax
  413c01:	xchg   edi,eax
  413c02:	inc    ecx
  413c03:	jne    0x413bdf
  413c05:	sbb    al,BYTE PTR [edx]
  413c07:	ret    
  413c08:	push   ecx
  413c09:	imul   esi,DWORD PTR [edi],0xe72629aa
  413c0f:	(bad)  
  413c10:	cld    
  413c11:	pop    ds
  413c12:	or     esp,DWORD PTR [ecx]
  413c14:	pop    ds
  413c15:	or     esp,DWORD PTR [eax]
  413c17:	sub    eax,0xfd969c0e
  413c1c:	int3   
  413c1d:	mov    dh,0x60
  413c1f:	rcr    DWORD PTR [ebx+eax*2+0x60],cl
  413c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c24:	add    al,0x98
  413c26:	inc    ebp
  413c27:	cli    
  413c28:	sub    eax,0xc975916d
  413c2d:	js     0x413c09
  413c2f:	pusha  
  413c30:	xchg   esi,eax
  413c31:	daa    
  413c32:	mov    ch,0xbb
  413c34:	leave  
  413c35:	retf   0x200f
  413c38:	out    dx,al
  413c39:	call   0x3a3:0xf212828d
  413c40:	rol    DWORD PTR [edx-0x6],1
  413c43:	adc    bh,BYTE PTR [ebx+ebx*8+0x38]
  413c47:	out    0x59,al
  413c49:	mov    eax,ds:0x22c50e38
  413c4e:	lods   al,BYTE PTR ds:[esi]
  413c4f:	mov    dh,BYTE PTR [edx-0x5c9daea5]
  413c55:	popf   
  413c56:	rep lods eax,DWORD PTR ds:[esi]
  413c58:	inc    ebx
  413c59:	sub    BYTE PTR [ebx],al
  413c5b:	hlt    
  413c5c:	(bad)  
  413c5d:	les    ecx,FWORD PTR [ebp+0x2ceeb84b]
  413c63:	aad    0x83
  413c65:	(bad)  [ecx+ebp*4-0x561edc86]
  413c6c:	inc    eax
  413c6d:	lea    eax,[ebx+0x4]
  413c70:	and    DWORD PTR ds:0x8de5c25a,edx
  413c76:	cli    
  413c77:	inc    ebp
  413c78:	dec    ebx
  413c79:	adc    dh,ch
  413c7b:	inc    esp
  413c7c:	cmc    
  413c7d:	add    ebx,edi
  413c7f:	xor    eax,0xb0641381
  413c84:	xor    cl,dl
  413c86:	int    0x25
  413c88:	scas   eax,DWORD PTR es:[edi]
  413c89:	and    al,BYTE PTR [eax]
  413c8b:	in     al,dx
  413c8c:	inc    eax
  413c8d:	adc    DWORD PTR [ebx+ebp*2-0x10],esi
  413c91:	inc    edx
  413c92:	dec    edi
  413c93:	loop   0x413c94
  413c95:	out    dx,al
  413c96:	leave  
  413c97:	and    al,0x9b
  413c99:	enter  0x664a,0xac
  413c9d:	jle    0x413c4e
  413c9f:	mov    ah,0x85
  413ca1:	cdq    
  413ca2:	lds    esp,FWORD PTR [edi-0x5e2825db]
  413ca8:	(bad)  
  413ca9:	jg     0x413ca9
  413cab:	hlt    
  413cac:	adc    DWORD PTR [edx+0x744e60e4],edx
  413cb2:	pop    es
  413cb3:	pop    ebp
  413cb4:	xchg   edx,eax
  413cb5:	push   es
  413cb6:	fld    QWORD PTR [edi]
  413cb8:	out    0xf9,eax
  413cba:	pop    esp
  413cbb:	sbb    al,0xdf
  413cbd:	test   BYTE PTR [eax+0x5cbf0030],cl
  413cc3:	or     BYTE PTR [eax],cl
  413cc5:	xchg   BYTE PTR ds:0x61d70b43,bh
  413ccb:	shl    ecx,1
  413ccd:	scas   al,BYTE PTR es:[edi]
  413cce:	imul   eax,DWORD PTR [esi+0x6ce855ac],0x5d9af70d
  413cd8:	inc    edi
  413cd9:	test   al,0xf2
  413cdb:	test   DWORD PTR [eax+edx*4+0x414571dd],ecx
  413ce2:	stc    
  413ce3:	and    al,0x3c
  413ce5:	ret    0xa336
  413ce8:	stc    
  413ce9:	inc    eax
  413cea:	jnp    0x413c85
  413cec:	cmp    DWORD PTR [edi-0x51860b6a],ebx
  413cf2:	(bad)  [edi+0x22f69c44]
  413cf8:	test   DWORD PTR fs:[eax+ebp*4+0x965b8e6],ecx
  413d00:	or     BYTE PTR [ebx],bh
  413d02:	sahf   
  413d03:	std    
  413d04:	test   al,0x73
  413d06:	stos   BYTE PTR es:[edi],al
  413d07:	adc    edx,DWORD PTR [esi]
  413d09:	xchg   esi,eax
  413d0a:	addr16 mov ds:0xef03,eax
  413d0e:	jecxz  0x413c97
  413d10:	shl    ebx,1
  413d12:	push   eax
  413d13:	add    al,0xc4
  413d15:	icebp  
  413d16:	loopne 0x413cad
  413d18:	jbe    0x413d56
  413d1a:	or     BYTE PTR [edx-0x8942573],ah
  413d20:	mov    eax,0x2defa3fd
  413d25:	fidivr DWORD PTR [esi]
  413d27:	jnp    0x413d14
  413d29:	loopne 0x413d56
  413d2b:	aam    0xca
  413d2d:	mov    ds:0xeda69160,eax
  413d32:	inc    esi
  413d33:	jl     0x413d55
  413d35:	jmp    0x70097ba
  413d3a:	xor    dl,BYTE PTR [esp+edx*8+0x57e42fec]
  413d41:	pop    ecx
  413d42:	pop    ss
  413d43:	add    eax,0x2ddfd32d
  413d48:	inc    eax
  413d49:	popa   
  413d4a:	mov    BYTE PTR [edx],ch
  413d4c:	and    BYTE PTR [ecx],cl
  413d4e:	ror    BYTE PTR [eax+0x15],1
  413d51:	int3   
  413d52:	push   eax
  413d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d54:	inc    esi
  413d55:	aaa    
  413d56:	mov    esp,0xf1d1ee60
  413d5b:	cdq    
  413d5c:	mov    ecx,0x346825f5
  413d61:	mov    al,0xa1
  413d63:	retf   
  413d64:	push   es
  413d65:	or     DWORD PTR [ecx+0x59e2584f],esi
  413d6b:	ss mov bl,0xbd
  413d6e:	leave  
  413d6f:	xchg   edi,eax
  413d70:	xor    ebp,DWORD PTR [ecx-0x5]
  413d73:	and    bl,BYTE PTR [ebx+0x8]
  413d76:	sbb    al,0x33
  413d78:	xor    dl,BYTE PTR [esi-0x42]
  413d7b:	shl    BYTE PTR [esi+0x44],1
  413d7e:	or     DWORD PTR [ecx],ebp
  413d80:	and    al,0x73
  413d82:	mov    ds:0x6004c530,al
  413d87:	or     eax,0x2f8c8d81
  413d8c:	pop    DWORD PTR [edi-0x6a53d776]
  413d92:	cmp    eax,0x182aca94
  413d97:	xor    BYTE PTR [edi],cl
  413d99:	jno    0x413d2f
  413d9b:	jno    0x413d6a
  413d9d:	test   DWORD PTR [edi],edx
  413d9f:	out    0x62,al
  413da1:	sub    DWORD PTR [eax-0x3],0x5f
  413da5:	add    eax,0xe69464ff
  413daa:	jg     0x413e19
  413dac:	fwait
  413dad:	clc    
  413dae:	push   0xfffffff6
  413db0:	mov    bl,0xfb
  413db2:	scas   eax,DWORD PTR es:[edi]
  413db3:	(bad)  
  413db4:	into   
  413db5:	fsubr  DWORD PTR [ebx+0x1359acb5]
  413dbb:	xor    DWORD PTR [eax+0x795a4a43],esp
  413dc1:	xchg   esp,eax
  413dc2:	jb     0x413e39
  413dc4:	fstp   TBYTE PTR [esi]
  413dc6:	loopne 0x413df1
  413dc8:	cmc    
  413dc9:	call   0x89a3890f
  413dce:	mov    BYTE PTR [edx+eiz*1-0x536d2de6],bl
  413dd5:	ins    BYTE PTR es:[edi],dx
  413dd6:	pop    esi
  413dd7:	(bad)  
  413dd8:	xlat   BYTE PTR ds:[ebx]
  413dd9:	push   0x33
  413ddb:	mov    esp,0x1739c32e
  413de0:	and    bh,bl
  413de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de3:	jmp    0x413d85
  413de5:	push   0x73eddf11
  413dea:	jno    0x413db6
  413dec:	out    dx,eax
  413ded:	hlt    
  413dee:	push   es
  413def:	push   es
  413df0:	xchg   esi,eax
  413df1:	jecxz  0x413e14
  413df3:	stc    
  413df4:	jo     0x413dad
  413df6:	or     cl,BYTE PTR [ebx+0xa]
  413df9:	pop    ecx
  413dfa:	inc    eax
  413dfb:	aam    0xbc
  413dfd:	ss add al,0x72
  413e00:	aad    0x21
  413e02:	mov    al,ds:0x258e2a30
  413e07:	(bad)  
  413e08:	sub    dl,bh
  413e0a:	arpl   WORD PTR [esi+0x4b1e6ca],dx
  413e10:	pop    es
  413e11:	sbb    DWORD PTR [edx+0x4065b87],0x42033015
  413e1b:	cmp    BYTE PTR [ecx-0xe],al
  413e1e:	mov    bl,0x89
  413e20:	xchg   DWORD PTR [esi],edx
  413e22:	enter  0xe35,0x3f
  413e26:	mov    bl,0x86
  413e28:	pop    esi
  413e29:	xchg   esi,eax
  413e2a:	out    dx,al
  413e2b:	dec    ebp
  413e2c:	loope  0x413e89
  413e2e:	jecxz  0x413e9a
  413e30:	out    dx,eax
  413e31:	(bad)  
  413e32:	arpl   WORD PTR [ebx-0x77],sp
  413e35:	dec    eax
  413e36:	imul   eax,DWORD PTR ds:0x164bd922,0xffffffd2
  413e3d:	mov    esp,0x5073ca7e
  413e42:	sub    esp,DWORD PTR [edx]
  413e44:	inc    ebp
  413e45:	sbb    DWORD PTR [edx],esi
  413e47:	push   eax
  413e48:	int3   
  413e49:	nop
  413e4a:	jp     0x413dda
  413e4c:	fidivr DWORD PTR gs:[ebx]
  413e4f:	cmp    ebx,DWORD PTR [edi+edx*1+0x5b]
  413e53:	pop    edi
  413e54:	pop    edx
  413e55:	fwait
  413e56:	outs   dx,DWORD PTR ds:[esi]
  413e57:	adc    al,0x5c
  413e59:	fucomip st,st(1)
  413e5b:	adc    eax,0xd523620a
  413e60:	imul   esp,DWORD PTR [edi],0xc6cba7bb
  413e66:	jp     0x413ead
  413e68:	push   edi
  413e69:	and    BYTE PTR ds:0xb1061ec1,dh
  413e6f:	adc    DWORD PTR [esi-0x24197c18],ecx
  413e75:	cld    
  413e76:	in     eax,0xe
  413e78:	adc    BYTE PTR ds:0xff70943c,0x5c
  413e7f:	or     ebp,ebp
  413e81:	push   0x17503cc0
  413e86:	xchg   esp,eax
  413e87:	aam    0x36
  413e89:	retf   
  413e8a:	fwait
  413e8b:	adc    BYTE PTR [ebp+ebp*2-0x1c],al
  413e8f:	addr16 inc eax
  413e91:	cmp    eax,0xfb442157
  413e96:	add    ebp,eax
  413e98:	loopne 0x413e1c
  413e9a:	dec    edi
  413e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e9c:	shl    DWORD PTR [esi],cl
  413e9e:	out    0xa,al
  413ea0:	xchg   edi,eax
  413ea1:	mov    ah,0x59
  413ea3:	push   0xb2c8784e
  413ea8:	test   al,0x13
  413eaa:	sbb    dh,cl
  413eac:	shr    DWORD PTR gs:[edi+0x6b6511bb],1
  413eb3:	imul   eax,DWORD PTR [ebx+0x72],0xffffffab
  413eb7:	inc    esi
  413eb8:	and    BYTE PTR [edx+0x3b],ah
  413ebb:	dec    eax
  413ebc:	and    DWORD PTR [eax+0x10f8ed6c],ebx
  413ec2:	push   0x9
  413ec4:	xor    eax,DWORD PTR [ebx]
  413ec6:	adc    edi,ebp
  413ec8:	sub    DWORD PTR [edi+0x63],0x42
  413ecc:	or     eax,esp
  413ece:	lds    esp,FWORD PTR [ecx+0x649dccc8]
  413ed4:	mov    eax,ds:0xd2e814b8
  413ed9:	cmp    dh,cl
  413edb:	nop
  413edc:	cmp    al,0xcb
  413ede:	lahf   
  413edf:	int3   
  413ee0:	mov    eax,ds:0xf04d7fac
  413ee5:	int    0x4b
  413ee7:	arpl   WORD PTR [ecx],ax
  413ee9:	jns    0x413f5c
  413eeb:	or     DWORD PTR ds:0x3b0451a9,ebx
  413ef1:	ss aam 0x1d
  413ef4:	gs mov cl,bh
  413ef7:	out    0xd1,eax
  413ef9:	call   0xd35:0x3d575f98
  413f00:	outs   dx,DWORD PTR ds:[esi]
  413f01:	mov    ebx,0x13b0dffe
  413f06:	xor    dh,BYTE PTR [eax-0x1ecd46a5]
  413f0c:	imul   eax,eax,0x8d5a4398
  413f12:	jmp    0x78ab:0x67f6c1e1
  413f19:	jecxz  0x413f44
  413f1b:	icebp  
  413f1c:	bound  ebx,QWORD PTR [ecx+ecx*2+0x52]
  413f20:	jge    0x413ee4
  413f22:	out    0xb8,al
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	sbb    BYTE PTR [esi],ch
  413f27:	dec    edi
  413f28:	in     eax,dx
  413f29:	mov    ds:0xe26f596,al
  413f2e:	inc    edx
  413f2f:	jnp    0x413ec0
  413f31:	mov    ecx,0x2135ae3d
  413f36:	cld    
  413f37:	xchg   esp,eax
  413f38:	out    dx,al
  413f39:	mov    WORD PTR [edx-0xf],gs
  413f3c:	and    dh,ah
  413f3e:	loop   0x413f51
  413f40:	mov    edi,0xd0d928c6
  413f45:	jb     0x413f8f
  413f47:	ret    0x10cf
  413f4a:	maxps  xmm4,XMMWORD PTR [eax]
  413f4d:	jo     0x413fce
  413f4f:	jp     0x413fa3
  413f51:	pop    ss
  413f52:	add    eax,0x8bb676a2
  413f57:	sub    al,0x6d
  413f59:	mov    eax,ds:0xe2876cc3
  413f5e:	nop
  413f5f:	fcmovbe st,st(7)
  413f61:	ss jae 0x413faa
  413f64:	cmp    DWORD PTR [ecx],ebp
  413f66:	lock es or eax,0x587e6fb2
  413f6d:	add    cl,al
  413f6f:	inc    ebx
  413f70:	jae    0x413fdb
  413f72:	xchg   BYTE PTR [ebx+esi*1-0x18616867],bl
  413f79:	stos   BYTE PTR es:[edi],al
  413f7a:	loop   0x413f07
  413f7c:	ret    0x139
  413f7f:	fistp  DWORD PTR [ecx-0x586e6dff]
  413f85:	jno    0x413fef
  413f87:	xor    bh,bh
  413f89:	inc    ebp
  413f8a:	and    eax,0xbb61ce90
  413f8f:	mov    dh,0xd3
  413f91:	aaa    
  413f92:	pop    esi
  413f93:	ds sub eax,0xedce3b0c
  413f99:	and    BYTE PTR [ebp+0x51ce11a6],dl
  413f9f:	pop    esp
  413fa0:	push   eax
  413fa1:	fisttp WORD PTR [edx+ecx*8]
  413fa4:	xchg   ebp,eax
  413fa5:	mov    bl,0x7e
  413fa7:	mov    eax,0x9a7f1636
  413fac:	mov    dh,0xe3
  413fae:	movq   mm1,QWORD PTR [eax+eiz*2-0x1259b623]
  413fb6:	pop    edi
  413fb7:	pop    esp
  413fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb9:	xchg   esp,eax
  413fba:	mov    eax,0xfa226cc9
  413fbf:	outs   dx,BYTE PTR ds:[esi]
  413fc0:	stos   DWORD PTR es:[edi],eax
  413fc1:	sub    al,0xe3
  413fc3:	inc    edx
  413fc4:	gs sub eax,0x62dde1e8
  413fca:	in     eax,dx
  413fcb:	mov    esp,0x79b5d1de
  413fd0:	push   eax
  413fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd2:	test   DWORD PTR [esi+0x2c],ebp
  413fd5:	jbe    0x413fcb
  413fd7:	mov    dl,0x8c
  413fd9:	sub    WORD PTR [ebp-0x61],di
  413fdd:	popf   
  413fde:	in     al,dx
  413fdf:	bound  ebx,QWORD PTR [ecx+0x3422101e]
  413fe5:	(bad)  
  413fe6:	sub    DWORD PTR ds:0xf744ddaf,edi
  413fec:	adc    bl,ch
  413fee:	fs dec ecx
  413ff0:	cmp    eax,0xcc1f3b06
  413ff5:	jp     0x414053
  413ff7:	pop    edx
  413ff8:	or     al,BYTE PTR [edx]
  413ffa:	stos   BYTE PTR es:[edi],al
  413ffb:	rcl    edi,0xc1
  413ffe:	add    al,0xa7
  414000:	daa    
  414001:	gs xchg ch,dh
  414004:	dec    esp
  414005:	dec    esp
  414006:	outs   dx,BYTE PTR ds:[esi]
  414007:	pop    ss
  414008:	dec    esi
  414009:	cdq    
  41400a:	pop    ebp
  41400b:	mov    ah,0x6f
  41400d:	stc    
  41400e:	sub    al,0x91
  414010:	push   esi
  414011:	rol    BYTE PTR [ecx+0x64],cl
  414014:	out    0x1b,eax
  414016:	scas   eax,DWORD PTR es:[edi]
  414017:	les    ebx,FWORD PTR [ebp+0x7f8c4167]
  41401d:	(bad)  
  41401e:	fistp  QWORD PTR [ebp+0x4e7ac7be]
  414024:	(bad)  
  414026:	enter  0x1af8,0x66
  41402a:	dec    esi
  41402b:	dec    esi
  41402c:	and    esi,ecx
  41402e:	inc    ecx
  41402f:	cmp    eax,DWORD PTR [ebx+0x4d]
  414032:	cli    
  414033:	add    BYTE PTR [edx+eiz*8-0x33123bc4],bl
  41403a:	mov    edi,DWORD PTR gs:[eax-0x64e157bc]
  414041:	int    0x7b
  414043:	(bad)  
  414044:	jno    0x41403a
  414046:	test   BYTE PTR [edi+0x39],dl
  414049:	call   0x83a0:0x9ac5f0b9
  414050:	aas    
  414051:	fmul   QWORD PTR [edi+0x2f]
  414054:	add    al,0xd0
  414056:	inc    ebp
  414057:	jae    0x413ff6
  414059:	das    
  41405a:	mov    al,ds:0x3a4bc115
  41405f:	push   0x1d
  414061:	or     dl,BYTE PTR [edi+eax*1]
  414064:	popf   
  414065:	cmp    BYTE PTR [ebx+edx*2],ah
  414068:	rcl    BYTE PTR [eax-0x124051f0],cl
  41406e:	das    
  41406f:	(bad)  
  414071:	imul   esp,eax,0x13056f1d
  414077:	sub    DWORD PTR [edi+0x3e],ebp
  41407a:	out    dx,eax
  41407b:	fsubr  DWORD PTR [edi]
  41407d:	daa    
  41407e:	pop    edi
  41407f:	test   eax,0xd301ebad
  414084:	shr    BYTE PTR [ebp-0x443edb],0x1c
  41408b:	int    0xcb
  41408d:	jo     0x41406b
  41408f:	mov    esp,0x9f97cb44
  414094:	std    
  414095:	sbb    BYTE PTR [ebx+0x6158efe6],dh
  41409b:	xor    ah,BYTE PTR [edi+0x1d]
  41409e:	sar    BYTE PTR fs:[ebp-0x4167714d],0xae
  4140a6:	nop
  4140a7:	(bad)  
  4140a8:	rcr    ebp,cl
  4140aa:	inc    ecx
  4140ab:	jp     0x414054
  4140ad:	sti    
  4140ae:	pop    es
  4140af:	imul   eax,DWORD PTR [edi+ecx*4-0x5],0xffffffff
  4140b4:	call   0xbcd5:0xb5917853
  4140bb:	push   ebp
  4140bc:	xor    eax,0x5802b274
  4140c1:	xchg   ebp,eax
  4140c2:	lods   al,BYTE PTR ds:[esi]
  4140c3:	cmp    eax,0x6cafd437
  4140c9:	ret    0x7c28
  4140cc:	out    0x82,eax
  4140ce:	and    al,0x2c
  4140d0:	fnstenv [eax-0x7b74cb4a]
  4140d6:	mov    cl,0xda
  4140d8:	cdq    
  4140d9:	cmp    eax,0xb7bd34a5
  4140de:	cmp    eax,0xbdb48f8d
  4140e3:	fadd   st,st(6)
  4140e5:	rol    BYTE PTR [esi+0x7d83973d],1
  4140eb:	fwait
  4140ec:	popf   
  4140ed:	push   ecx
  4140ee:	test   al,0xef
  4140f0:	mov    ds:0x9083c267,eax
  4140f5:	repz call 0x21bd71ef
  4140fb:	jp     0x4140aa
  4140fd:	xchg   edx,eax
  4140fe:	dec    edi
  4140ff:	mov    esp,0x16103718
  414104:	lods   al,BYTE PTR ds:[esi]
  414105:	loop   0x41416d
  414107:	rcr    ebx,cl
  414109:	jl     0x414152
  41410b:	mov    dl,BYTE PTR [eax+0x721a9183]
  414111:	call   esp
  414113:	lds    ecx,FWORD PTR [esp+edx*8-0x3f]
  414117:	and    DWORD PTR [ecx],eax
  414119:	or     eax,0x68fb30eb
  41411e:	icebp  
  41411f:	cmp    al,0x66
  414121:	ficom  WORD PTR [eax]
  414123:	mov    dl,0xca
  414125:	jecxz  0x4140db
  414127:	sar    BYTE PTR ds:0xf1f38a2b,1
  41412d:	push   eax
  41412e:	lahf   
  41412f:	(bad)  
  414131:	icebp  
  414132:	cli    
  414133:	sub    al,0x43
  414135:	mov    ebp,0x97f7d07f
  41413a:	dec    edi
  41413b:	jo     0x4140f3
  41413d:	inc    ebp
  41413e:	std    
  41413f:	out    0x30,eax
  414141:	mov    esi,0xfb1fb796
  414146:	jno    0x41410d
  414148:	and    dh,BYTE PTR [ecx+eiz*4+0x448ce9c9]
  41414f:	das    
  414150:	cmp    DWORD PTR [eax],0xd93db76d
  414156:	or     BYTE PTR [ecx+ebp*8],bh
  414159:	fstp   DWORD PTR [esi]
  41415b:	dec    ebx
  41415c:	bound  esp,QWORD PTR [edi]
  41415e:	or     BYTE PTR [edx+0x1e],0x30
  414162:	pop    esp
  414163:	les    esi,FWORD PTR ds:0x697326e
  414169:	mov    eax,ds:0xf7d0c90f
  41416e:	pop    ds
  41416f:	test   BYTE PTR [ebp-0x8],bh
  414172:	(bad)  
  414173:	jecxz  0x414107
  414175:	sub    DWORD PTR [eax-0x2b],esp
  414178:	sahf   
  414179:	pop    eax
  41417a:	xchg   edi,eax
  41417b:	jg     0x414183
  41417d:	(bad)  
  41417e:	pop    ds
  41417f:	ret    
  414180:	stos   DWORD PTR es:[edi],eax
  414181:	es push edx
  414183:	mov    esi,0xe3c12fcc
  414188:	repnz sbb edi,DWORD PTR ds:0xa80eb8f4
  41418f:	pop    ds
  414190:	popf   
  414191:	imul   esi,DWORD PTR [edx],0xa1919c46
  414197:	stos   DWORD PTR es:[edi],eax
  414198:	inc    edx
  414199:	test   DWORD PTR [eax-0x74],0x46d3c7e9
  4141a0:	test   bl,bh
  4141a2:	(bad)  
  4141a3:	fucomp st(7)
  4141a5:	pop    es
  4141a6:	inc    esp
  4141a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a8:	pop    eax
  4141a9:	sub    BYTE PTR [ebp+0x2b],0xa0
  4141ad:	call   FWORD PTR [ebp+0x61]
  4141b0:	mov    ebx,DWORD PTR [edx+0x3c]
  4141b3:	adc    al,0x8c
  4141b5:	jnp    0x414188
  4141b7:	and    dh,BYTE PTR [eax+ebx*1+0x6dfd286c]
  4141be:	(bad)  
  4141bf:	aad    0xbc
  4141c1:	cmp    cl,BYTE PTR [esi-0x1b3ba592]
  4141c7:	xchg   esp,eax
  4141c8:	loope  0x4141ae
  4141ca:	push   esi
  4141cb:	mov    ecx,0xf4e69eb
  4141d0:	adc    ebx,eax
  4141d2:	ds aam 0x6f
  4141d5:	jno    0x41417c
  4141d7:	test   BYTE PTR [ebp-0xa],dh
  4141da:	sub    al,0x8f
  4141dc:	xor    al,0x6b
  4141de:	push   eax
  4141df:	adc    edi,DWORD PTR [ebp+eiz*4-0x29281de2]
  4141e6:	jnp    0x4141fa
  4141e8:	xchg   bh,al
  4141ea:	and    BYTE PTR [edx+0x5a],0x88
  4141ee:	pop    esp
  4141ef:	icebp  
  4141f0:	(bad)  
  4141f1:	aad    0x93
  4141f3:	mov    al,0x55
  4141f5:	inc    edi
  4141f6:	outs   dx,BYTE PTR ds:[esi]
  4141f7:	ror    BYTE PTR [eax],0xf7
  4141fa:	in     eax,dx
  4141fb:	outs   dx,BYTE PTR ds:[esi]
  4141fc:	fcmove st,st(1)
  4141fe:	mov    bl,BYTE PTR [esi+0x17349acc]
  414204:	jmp    0x10f2409
  414209:	pop    esi
  41420a:	lahf   
  41420b:	loop   0x4141e1
  41420d:	xchg   edx,eax
  41420e:	sub    bl,al
  414210:	sub    BYTE PTR [edx],ch
  414212:	mov    cl,0xaa
  414214:	jge    0x414200
  414216:	mov    al,ds:0xdfee8796
  41421b:	push   ds
  41421c:	mov    bh,0x6c
  41421e:	test   DWORD PTR [esi+eax*4-0x4a],0xcee2854f
  414226:	xchg   ebp,eax
  414227:	aad    0x27
  414229:	loop   0x414253
  41422b:	add    al,0x11
  41422d:	push   cs
  41422e:	ja     0x414212
  414230:	xchg   ebp,eax
  414231:	fbstp  TBYTE PTR [edx+ebp*1-0x176949af]
  414238:	pushf  
  414239:	dec    esp
  41423a:	aaa    
  41423b:	test   al,0xa9
  41423d:	jnp    0x4141cd
  41423f:	in     eax,dx
  414240:	sbb    esi,DWORD PTR ds:0xac29f59
  414246:	cdq    
  414247:	ins    DWORD PTR es:[edi],dx
  414248:	je     0x41424b
  41424a:	test   BYTE PTR [eax],dh
  41424c:	xchg   esp,eax
  41424d:	dec    edx
  41424e:	inc    edx
  41424f:	loope  0x414286
  414251:	jo     0x414289
  414253:	out    0x3,eax
  414255:	sub    BYTE PTR [ebp-0x7aae365],bl
  41425b:	ja     0x41427b
  41425d:	enter  0xb56a,0x1a
  414261:	adc    esi,DWORD PTR [ecx]
  414263:	(bad)  
  414264:	xchg   edi,eax
  414265:	mov    ah,0x6b
  414267:	lds    esp,FWORD PTR [esi]
  414269:	sub    al,0xe1
  41426b:	push   cs
  41426c:	fs leave 
  41426e:	test   al,0x3
  414270:	mov    ch,0x75
  414272:	sub    esp,DWORD PTR [edi+0x2613f4b7]
  414278:	stos   DWORD PTR es:[edi],eax
  414279:	push   esi
  41427a:	inc    esi
  41427b:	sahf   
  41427c:	adc    eax,DWORD PTR ds:0x966f78ad
  414282:	lods   eax,DWORD PTR ds:[esi]
  414283:	jl     0x4142b9
  414285:	call   0xba3e:0xc2c2782e
  41428c:	adc    eax,0xd0616326
  414291:	cwde   
  414292:	daa    
  414293:	ret    
  414294:	lods   eax,DWORD PTR ds:[esi]
  414295:	xor    eax,0xe6d22dfc
  41429a:	outs   dx,DWORD PTR ds:[esi]
  41429b:	xchg   edi,eax
  41429c:	mov    DWORD PTR [eax+0x5caae398],0xc5f0439c
  4142a6:	arpl   WORD PTR [edi],di
  4142a8:	call   0xdbbf:0x443dd32f
  4142af:	das    
  4142b0:	push   eax
  4142b1:	xchg   edx,eax
  4142b2:	pop    edx
  4142b3:	out    0xef,eax
  4142b5:	popf   
  4142b6:	or     al,0x90
  4142b8:	mov    BYTE PTR [ecx-0x24],dh
  4142bb:	test   BYTE PTR [ecx],al
  4142bd:	cld    
  4142be:	inc    esi
  4142bf:	(bad)  
  4142c0:	out    0x79,al
  4142c2:	dec    BYTE PTR [ebp+0x7c]
  4142c5:	test   BYTE PTR [ebp-0xe],bl
  4142c8:	inc    edi
  4142c9:	sub    ch,al
  4142cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142cc:	and    al,0x81
  4142ce:	out    0x41,al
  4142d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d1:	aaa    
  4142d2:	jo     0x414353
  4142d4:	ins    BYTE PTR es:[edi],dx
  4142d5:	psadbw mm1,QWORD PTR [ebx+ebp*1-0x55a204e4]
  4142dd:	test   eax,0xf9a61df7
  4142e2:	test   dh,ah
  4142e4:	adc    eax,0x6f220451
  4142e9:	loop   0x414337
  4142eb:	add    BYTE PTR ss:[edx],bl
  4142ee:	push   eax
  4142ef:	adc    BYTE PTR [edx+0x4a94344e],dl
  4142f5:	into   
  4142f6:	shl    edi,cl
  4142f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f9:	popa   
  4142fa:	mov    WORD PTR [edi-0x58b441af],fs
  414300:	scas   eax,DWORD PTR es:[edi]
  414301:	or     BYTE PTR [ebx+0x52],ch
  414304:	mov    cl,0x8f
  414306:	jne    0x414372
  414308:	retf   
  414309:	lods   eax,DWORD PTR ds:[esi]
  41430a:	fwait
  41430b:	mov    WORD PTR [ecx-0x21c2f403],?
  414311:	xor    dl,cl
  414313:	mov    ebx,DWORD PTR [ebp+0x22afdc52]
  414319:	jbe    0x4142fc
  41431b:	or     al,BYTE PTR [edx+0x5e444595]
  414321:	cmp    DWORD PTR [edi+0x73],ebx
  414324:	jne    0x414311
  414326:	inc    eax
  414327:	xchg   ecx,eax
  414328:	cmp    DWORD PTR [ebp+0x59697aec],ebp
  41432e:	xchg   esi,eax
  41432f:	mov    ecx,db3
  414332:	int3   
  414333:	cld    
  414334:	leave  
  414335:	xchg   BYTE PTR [ebx-0x24],dl
  414338:	dec    ecx
  414339:	icebp  
  41433a:	and    dh,bl
  41433c:	das    
  41433d:	sahf   
  41433e:	push   esi
  41433f:	outs   dx,DWORD PTR ds:[esi]
  414340:	in     al,dx
  414341:	mov    bl,0x1d
  414343:	pop    ecx
  414344:	in     eax,dx
  414345:	and    BYTE PTR [edi-0x29cc6ba6],dh
  41434b:	fwait
  41434c:	sub    esp,DWORD PTR [ecx+0x1d705c5a]
  414352:	bound  ebx,QWORD PTR ds:0x4a6393b8
  414358:	jb     0x4143aa
  41435a:	pop    esi
  41435b:	adc    ch,ch
  41435d:	push   cs
  41435e:	pop    esi
  41435f:	or     BYTE PTR [ecx-0x7c43080a],bl
  414365:	and    eax,0xb25e1d1e
  41436a:	retf   0x1caf
  41436d:	push   es
  41436e:	mov    eax,0x2b5c3284
  414373:	(bad)  [ebx+0x7849281f]
  414379:	mov    ah,0xcd
  41437b:	xor    eax,0x4d541159
  414380:	mov    esi,?
  414382:	jecxz  0x414344
  414384:	ror    BYTE PTR [ecx-0x14],0x8e
  414388:	aas    
  414389:	es cmc 
  41438b:	(bad)  
  41438c:	xchg   ecx,eax
  41438d:	and    al,0xcb
  41438f:	and    eax,0x3047e445
  414394:	mov    edx,0xd49eb630
  414399:	aas    
  41439a:	sub    ah,ch
  41439c:	lahf   
  41439d:	pop    ds
  41439e:	mov    bh,BYTE PTR [esi]
  4143a0:	push   ecx
  4143a1:	mov    al,0x5e
  4143a3:	in     al,0x2a
  4143a5:	mov    ebp,0xc9fde664
  4143aa:	sbb    al,0x3b
  4143ac:	data16 jne 0x41433a
  4143af:	pop    edx
  4143b0:	adc    al,0x63
  4143b2:	pushf  
  4143b3:	out    0x20,eax
  4143b5:	iret   
  4143b6:	call   0xf36:0x4f9e30b3
  4143bd:	or     ebx,DWORD PTR [eax-0x1f025607]
  4143c3:	pop    edx
  4143c4:	jp     0x414362
  4143c6:	leave  
  4143c7:	aam    0x30
  4143c9:	xor    DWORD PTR [edx-0x61],ebp
  4143cc:	mov    es,WORD PTR [esi+0x63]
  4143cf:	xchg   edi,eax
  4143d0:	fwait
  4143d1:	pop    esp
  4143d2:	rcl    BYTE PTR [ecx-0x4d],cl
  4143d5:	jl     0x4143db
  4143d7:	sbb    ecx,esi
  4143d9:	jbe    0x41437e
  4143db:	jecxz  0x41445b
  4143dd:	and    ebp,ebx
  4143df:	je     0x4143aa
  4143e1:	ins    BYTE PTR es:[edi],dx
  4143e2:	ret    
  4143e3:	cmp    al,0x2e
  4143e5:	cwde   
  4143e6:	adc    ecx,esp
  4143e8:	mov    ds:0xbd822322,al
  4143ed:	pushf  
  4143ee:	ret    
  4143ef:	loop   0x41438f
  4143f1:	push   0x53
  4143f3:	adc    ecx,DWORD PTR [eax-0x12]
  4143f6:	lock or DWORD PTR [ebx-0x1f],0xd4ce8ea
  4143fe:	push   ecx
  4143ff:	jmp    0x205c:0xda2f2677
  414406:	rcr    al,1
  414408:	sub    BYTE PTR [eax-0x6cd3bd84],ah
  41440e:	push   ds
  41440f:	int    0x41
  414411:	push   es
  414412:	jl     0x4143f1
  414414:	mov    bh,0x67
  414416:	fmul   st(4),st
  414418:	inc    edi
  414419:	push   ecx
  41441a:	aaa    
  41441b:	into   
  41441c:	in     eax,dx
  41441d:	outs   dx,BYTE PTR ds:[esi]
  41441e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41441f:	cmp    al,0xba
  414421:	jp     0x4144a1
  414423:	shr    al,0xd7
  414426:	adc    dh,BYTE PTR [edx]
  414428:	nop
  414429:	mov    BYTE PTR [ebp+0x6aa6ac39],0x2b
  414430:	(bad)  [ebx]
  414432:	lods   eax,DWORD PTR ds:[esi]
  414433:	sub    eax,0x68624fe8
  414438:	jle    0x41442b
  41443a:	enter  0x16d8,0xe3
  41443e:	jo     0x41445a
  414440:	cli    
  414441:	or     DWORD PTR [ecx+0x1f33ea50],esi
  414447:	pushf  
  414448:	jne    0x414467
  41444a:	or     ebx,ebx
  41444c:	mov    ebp,0x86ce8793
  414451:	and    al,0x5e
  414453:	jle    0x414462
  414455:	dec    ebp
  414456:	in     eax,0x1b
  414458:	rol    DWORD PTR [esi],cl
  41445a:	out    dx,al
  41445b:	std    
  41445c:	scas   al,BYTE PTR es:[edi]
  41445d:	ret    
  41445e:	fs xchg esp,eax
  414460:	adc    DWORD PTR [edi+0x3e828df5],esi
  414466:	mov    dh,0x39
  414468:	pop    esi
  414469:	push   edx
  41446a:	or     ecx,DWORD PTR [ecx+0x4d]
  41446d:	lods   al,BYTE PTR ds:[esi]
  41446e:	xchg   esp,eax
  41446f:	stos   BYTE PTR es:[edi],al
  414470:	ret    
  414471:	pushf  
  414472:	sbb    ah,BYTE PTR [esi-0x3d87af55]
  414478:	mov    esp,0xe60cf519
  41447d:	pushf  
  41447e:	sbb    edi,DWORD PTR [ecx-0x1b]
  414481:	pop    edi
  414482:	lea    edi,[eax]
  414484:	ins    DWORD PTR es:[edi],dx
  414485:	inc    esi
  414486:	outs   dx,DWORD PTR ds:[esi]
  414487:	dec    ebx
  414488:	push   ebx
  414489:	leave  
  41448a:	adc    DWORD PTR [ecx+edi*4-0x1a],esi
  41448e:	sbb    eax,DWORD PTR [edi*2-0x2b7febcf]
  414495:	pop    ebp
  414496:	sbb    eax,0x29965b84
  41449b:	add    al,cl
  41449d:	test   al,0xbd
  41449f:	aam    0xfd
  4144a1:	sbb    esp,DWORD PTR [edx-0xa]
  4144a4:	mov    al,ds:0x59494d54
  4144a9:	stos   DWORD PTR es:[edi],eax
  4144aa:	or     ecx,DWORD PTR [edx+0x7e2db0f9]
  4144b0:	popf   
  4144b1:	cs js  0x414498
  4144b4:	js     0x41443d
  4144b6:	sub    ch,BYTE PTR [ebx+0x5]
  4144b9:	fld    TBYTE PTR [esi]
  4144bb:	jo     0x4144f4
  4144bd:	imul   edx,DWORD PTR [eax+0x7c],0xffffffc6
  4144c1:	xchg   ebx,eax
  4144c2:	mov    edx,DWORD PTR [edi+0x10f71993]
  4144c8:	push   edi
  4144c9:	pushf  
  4144ca:	shr    ebx,cl
  4144cc:	call   0x685:0xad43ccc1
  4144d3:	fistp  DWORD PTR [ecx+0x5c]
  4144d6:	rcr    ch,cl
  4144d8:	call   0x9ad5b5de
  4144dd:	and    BYTE PTR [eax],ch
  4144df:	mov    dl,BYTE PTR [edx]
  4144e1:	inc    esi
  4144e2:	out    0xeb,eax
  4144e4:	push   es
  4144e5:	cdq    
  4144e6:	pop    ebp
  4144e7:	mov    ds:0x4ff02143,al
  4144ec:	repz mov ebx,0xbd215c8a
  4144f2:	adc    BYTE PTR cs:[ebx+0x6a8dd853],dl
  4144f9:	int    0x57
  4144fb:	mov    ch,0xec
  4144fd:	jne    0x4144a7
  4144ff:	dec    ebp
  414500:	push   edi
  414501:	mov    eax,ds:0x33cd6681
  414506:	repz mov ecx,0x5835a6ce
  41450c:	std    
  41450d:	mov    bh,0xba
  41450f:	idiv   dl
  414511:	ret    0x6863
  414514:	ror    bl,cl
  414516:	outs   dx,DWORD PTR ds:[esi]
  414517:	dec    eax
  414518:	add    al,0xc7
  41451a:	js     0x414525
  41451c:	arpl   WORD PTR [ecx+0x14],di
  41451f:	xchg   edi,eax
  414520:	fisubr WORD PTR [ebx]
  414522:	mov    ecx,0x59687cbe
  414527:	scas   al,BYTE PTR es:[edi]
  414528:	(bad)
  41452c:	push   edi
  41452d:	imul   eax,DWORD PTR [edi-0x528f2601],0x7bee5c33
  414537:	test   eax,0x53389a87
  41453c:	jae    0x4144d7
  41453e:	in     al,0x5e
  414540:	mov    ebx,0x7fcaebd9
  414545:	cvttps2pi mm5,xmm7
  414548:	adc    eax,0x86d45d9d
  41454d:	dec    ebp
  41454e:	call   0xe1dc0dae
  414553:	shl    al,0xee
  414556:	push   ebp
  414557:	sbb    esi,ebp
  414559:	sub    ebp,DWORD PTR [ecx-0xa]
  41455c:	test   al,0x10
  41455e:	dec    ecx
  41455f:	jl     0x41456f
  414561:	mov    dh,0x73
  414563:	aam    0xd1
  414565:	enter  0xde15,0x3e
  414569:	lock int 0x6
  41456c:	stos   BYTE PTR es:[edi],al
  41456d:	xchg   ebp,eax
  41456e:	stos   BYTE PTR es:[edi],al
  41456f:	mov    al,0x5c
  414571:	mov    WORD PTR [edx-0x54b9ea2],gs
  414577:	lock shr BYTE PTR [esi-0x55028047],0xd3
  41457f:	inc    ebp
  414580:	fdiv   QWORD PTR [ebx+0x4042f7c1]
  414586:	mov    ch,0xe7
  414588:	xchg   ecx,eax
  414589:	mov    DWORD PTR [ebp-0x3f],edx
  41458c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458d:	int3   
  41458e:	xchg   edi,eax
  41458f:	retf   
  414590:	ja     0x4145bb
  414592:	imul   esi,DWORD PTR [eax+0x451552a9],0xffffffa4
  414599:	add    DWORD PTR [ebx+0x6d],0x39
  41459d:	xchg   esi,eax
  41459e:	pop    ebp
  41459f:	mov    ecx,0xead642b6
  4145a4:	lods   eax,DWORD PTR ds:[esi]
  4145a5:	xor    bl,BYTE PTR [esi+0x7b]
  4145a8:	or     DWORD PTR [ebp-0x15896202],edx
  4145ae:	mov    dl,0x70
  4145b0:	jmp    0x34c57c9f
  4145b5:	mov    al,0xd
  4145b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b8:	dec    edi
  4145b9:	cld    
  4145ba:	pop    ss
  4145bb:	mov    ch,0xe8
  4145bd:	iret   
  4145be:	add    DWORD PTR [ecx],ebp
  4145c0:	out    dx,al
  4145c1:	xor    eax,DWORD PTR [edi+0x486de52e]
  4145c7:	sbb    ebp,DWORD PTR [ebp+edi*1+0x38f7527]
  4145ce:	mov    al,0x82
  4145d0:	jbe    0x41464d
  4145d2:	shr    ebp,1
  4145d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d5:	or     BYTE PTR [ebp+0xa3a1038],bh
  4145db:	fsubr  DWORD PTR [ecx*1-0x1a3a927a]
  4145e2:	mov    bl,0x4b
  4145e4:	fmul   st,st(5)
  4145e6:	adc    al,BYTE PTR [edx]
  4145e8:	(bad)  
  4145e9:	mov    ecx,DWORD PTR [ecx+0x572b3c25]
  4145ef:	lds    di,DWORD PTR [ebx-0x7b774750]
  4145f6:	aaa    
  4145f7:	jmp    0x58f96dfc
  4145fc:	jl     0x4145e2
  4145fe:	push   ss
  4145ff:	mov    cl,0x7f
  414601:	mov    edi,0x88ad839f
  414606:	xor    ch,0x86
  414609:	jg     0x414666
  41460b:	paddsw mm2,mm3
  41460e:	stos   BYTE PTR es:[edi],al
  41460f:	push   esi
  414610:	and    ebx,DWORD PTR [edi-0x6cc472ea]
  414616:	(bad)  
  414617:	dec    eax
  414618:	cs inc edi
  41461a:	xchg   ebx,eax
  41461b:	cld    
  41461c:	sub    ebx,ecx
  41461e:	aaa    
  41461f:	dec    eax
  414620:	xchg   BYTE PTR [ecx+0x6456059e],bh
  414626:	mov    dh,0x51
  414628:	inc    ebx
  414629:	push   ds
  41462a:	std    
  41462b:	or     al,BYTE PTR [edi-0x28]
  41462e:	jno    0x41460a
  414630:	mov    ah,0xd5
  414633:	into   
  414634:	mov    BYTE PTR [eax-0x4f],bh
  414637:	xor    eax,DWORD PTR [edi+0x0]
  41463a:	imul   esi,DWORD PTR [edi],0xf021af6e
  414640:	and    eax,0x3bfd6ff2
  414645:	mov    DWORD PTR [edi],edi
  414647:	jb     0x414691
  414649:	jl     0x414685
  41464b:	sti    
  41464c:	(bad)  [edi+0x39]
  41464f:	or     DWORD PTR [ebx+0x74],0xffffffc4
  414653:	aam    0xf5
  414655:	push   ebp
  414656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414657:	div    BYTE PTR ds:0x5ade7c0
  41465d:	gs sbb cl,0x50
  414661:	sbb    bh,BYTE PTR [edi]
  414663:	pop    eax
  414664:	fadd   DWORD PTR [ecx-0x55]
  414667:	fist   DWORD PTR [ebx+0x486fc4fe]
  41466d:	push   esp
  41466e:	inc    ebx
  41466f:	js     0x414635
  414671:	imul   ecx,DWORD PTR [edi+0x42],0x5215fefe
  414678:	mov    al,0x41
  41467a:	cdq    
  41467b:	in     eax,0x61
  41467d:	xchg   esp,eax
  41467e:	fistp  WORD PTR [ebx+0x7e]
  414681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414682:	push   ecx
  414683:	push   ds
  414684:	and    BYTE PTR [ebx],ah
  414686:	lods   eax,DWORD PTR ds:[esi]
  414687:	sbb    DWORD PTR [ebx-0x4b485b0f],ebx
  41468d:	pop    eax
  41468e:	jge    0x414677
  414690:	sbb    eax,0x3f72432d
  414695:	mov    dh,0x7c
  414697:	and    ah,BYTE PTR [edi]
  414699:	popf   
  41469a:	pop    es
  41469b:	sti    
  41469c:	push   ebx
  41469d:	jo     0x414659
  41469f:	pop    ds
  4146a0:	jle    0x4146ff
  4146a2:	mov    ah,0x72
  4146a4:	das    
  4146a5:	mov    esp,0xa6acb822
  4146aa:	popf   
  4146ab:	jl     0x414684
  4146ad:	cmp    BYTE PTR [edx+esi*1-0x46],0xff
  4146b2:	mov    ch,dl
  4146b4:	mov    ch,0x59
  4146b6:	mov    ds:0xd54b28c4,eax
  4146bb:	jle    0x414709
  4146bd:	and    al,0x7a
  4146bf:	xchg   ebp,eax
  4146c0:	shl    bl,0x3
  4146c3:	xchg   edi,eax
  4146c4:	cmp    eax,0x95929140
  4146c9:	sub    DWORD PTR [ebx+0x1e],esi
  4146cc:	sahf   
  4146cd:	stc    
  4146ce:	mov    ah,BYTE PTR [edi+edx*4-0x72133505]
  4146d5:	lds    ebp,FWORD PTR [edx+0x2d]
  4146d8:	sbb    eax,DWORD PTR [ebx-0x68]
  4146db:	into   
  4146dc:	mov    bl,0xd7
  4146de:	loop   0x414727
  4146e0:	adc    BYTE PTR [edx+0x36],dl
  4146e3:	repnz fcomp QWORD PTR [bp+di]
  4146e7:	test   BYTE PTR ds:0xa1853550,ch
  4146ed:	inc    ebx
  4146ee:	stos   BYTE PTR es:[edi],al
  4146ef:	lods   eax,DWORD PTR ds:[esi]
  4146f0:	mov    ebx,0xe4bfbd07
  4146f5:	mov    ah,0xfe
  4146f7:	fild   WORD PTR [ebx]
  4146f9:	pop    esi
  4146fa:	cmp    BYTE PTR [eax-0x17062bb1],0x48
  414701:	mov    ds:0x7cda1905,al
  414706:	inc    edi
  414707:	xor    ebx,eax
  414709:	(bad)  
  41470a:	fwait
  41470b:	mov    ebx,0x5b7304d3
  414710:	cmp    BYTE PTR [eax+0x641e601a],bl
  414716:	lods   al,BYTE PTR ds:[esi]
  414717:	mov    ch,0x33
  414719:	in     al,dx
  41471a:	call   0xb6f9:0xf62389c4
  414721:	and    al,BYTE PTR [eax-0x23]
  414724:	repz pushf 
  414726:	daa    
  414727:	dec    ecx
  414728:	cwde   
  414729:	scas   eax,DWORD PTR es:[edi]
  41472a:	push   ss
  41472b:	dec    ebp
  41472c:	mov    fs,WORD PTR [edi+0x66]
  41472f:	imul   ecx,eax,0x7280e7d8
  414735:	test   ah,0x29
  414738:	fisttp QWORD PTR [ebp+0x6e697ed0]
  41473e:	not    DWORD PTR [edx]
  414740:	sahf   
  414741:	xchg   BYTE PTR [eax],bh
  414743:	sub    bl,bh
  414745:	xor    DWORD PTR [edi-0x3ac47d74],ebx
  41474b:	cmp    BYTE PTR [esi+0x22],dl
  41474e:	test   DWORD PTR [ebx-0x51],esp
  414751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414752:	lods   eax,DWORD PTR ds:[esi]
  414753:	dec    eax
  414754:	pop    esp
  414755:	pop    ebp
  414756:	repz adc DWORD PTR [esi],0xffffffaa
  41475a:	xor    BYTE PTR [esi+esi*4+0x3feffdc2],0xb0
  414762:	inc    eax
  414763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414764:	lds    ebp,FWORD PTR [ebp+0x71]
  414767:	setg   BYTE PTR [esi]
  41476a:	adc    eax,0xd1e04ac6
  41476f:	neg    dl
  414771:	stos   DWORD PTR es:[edi],eax
  414772:	xor    esi,0xa2c1da0c
  414778:	mov    bl,0xbf
  41477a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41477c:	pop    ss
  41477d:	or     dl,BYTE PTR ds:0xa5d63201
  414783:	lahf   
  414784:	loope  0x414789
  414786:	jge    0x4147dc
  414788:	dec    edx
  414789:	rol    dh,cl
  41478b:	pop    edx
  41478c:	outs   dx,BYTE PTR ds:[esi]
  41478d:	cmp    BYTE PTR [esi+0x760b537],dh
  414793:	mov    cl,0xfb
  414795:	mov    ebx,0x4db76744
  41479a:	adc    ecx,DWORD PTR [ecx-0x65]
  41479d:	sub    al,0x71
  41479f:	std    
  4147a0:	je     0x4147df
  4147a2:	inc    edi
  4147a3:	daa    
  4147a4:	out    0x6a,eax
  4147a6:	(bad)  
  4147a7:	repz repnz dec edx
  4147aa:	fnstcw WORD PTR [ecx]
  4147ac:	outs   dx,BYTE PTR ds:[esi]
  4147ad:	shr    BYTE PTR [ebp-0x76],cl
  4147b0:	mov    dl,0xa8
  4147b2:	and    al,0x49
  4147b4:	repz pop ecx
  4147b6:	ds ja  0x4147cf
  4147b9:	lds    edx,FWORD PTR [ebx-0x26]
  4147bc:	inc    ebp
  4147bd:	rsm    
  4147bf:	mov    cl,0x61
  4147c1:	inc    cx
  4147c3:	mov    ds:0x6ede4cbe,eax
  4147c8:	fbstp  TBYTE PTR [eax-0xb5a646f]
  4147ce:	outs   dx,DWORD PTR ds:[esi]
  4147cf:	cli    
  4147d0:	loope  0x41484d
  4147d2:	fcomi  st,st(3)
  4147d4:	leave  
  4147d5:	fcomi  st,st(4)
  4147d7:	pop    edx
  4147d8:	data16 cmp BYTE PTR [esi],ch
  4147db:	push   ss
  4147dc:	mov    eax,0x6d11c113
  4147e1:	pushf  
  4147e2:	and    eax,0x59c6e86d
  4147e7:	retf   
  4147e8:	or     DWORD PTR [esi-0xc],edi
  4147eb:	fiadd  DWORD PTR [ebx-0x1ee23829]
  4147f1:	or     eax,0xea90c2d7
  4147f6:	mov    al,0x3b
  4147f8:	cs xchg edi,eax
  4147fa:	sub    al,0x9a
  4147fc:	dec    esi
  4147fd:	adc    BYTE PTR [ecx],ah
  4147ff:	pop    ecx
  414800:	mov    ebx,DWORD PTR [ecx-0xef1f327]
  414806:	jae    0x414863
  414808:	das    
  414809:	cwde   
  41480a:	lock ins BYTE PTR es:[edi],dx
  41480c:	inc    esp
  41480d:	cmp    DWORD PTR [ebx],esp
  41480f:	mov    esi,0x5e151b88
  414814:	add    ebx,DWORD PTR [eax+ebx*8]
  414817:	jnp    0x414894
  414819:	jb     0x4147fb
  41481b:	ret    
  41481c:	repnz push eax
  41481e:	push   es
  41481f:	dec    ebx
  414820:	jns    0x414886
  414822:	cmp    BYTE PTR ds:0xeebb16b5,bl
  414828:	jb     0x41482e
  41482a:	imul   ecx,DWORD PTR [eax-0x4fef67b],0x86253ef2
  414834:	dec    edi
  414835:	mov    ah,0x3
  414837:	mov    al,0x5d
  414839:	test   eax,0xcd9adf08
  41483e:	test   DWORD PTR [edi+0x4e031c96],eax
  414844:	inc    ebx
  414845:	in     al,dx
  414846:	and    eax,0xbd5dfd99
  41484b:	sub    bh,BYTE PTR [ecx+0x72a916a7]
  414851:	ja     0x414898
  414853:	cmp    eax,0x3894b133
  414858:	cmp    edx,DWORD PTR [ebx+ebp*2]
  41485b:	cmp    ecx,DWORD PTR [edx]
  41485d:	pushf  
  41485e:	loope  0x414869
  414860:	jmp    0xc63fab2e
  414865:	fndisi(8087 only) 
  414867:	push   edx
  414868:	adc    DWORD PTR [edx],ebx
  41486a:	ja     0x4148b7
  41486c:	idiv   BYTE PTR [ebx+0x780a4794]
  414872:	mov    dh,0x86
  414874:	push   0x2b
  414876:	adc    ebx,edi
  414878:	or     BYTE PTR [ebx+0x5a46a20d],0xb2
  41487f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414880:	xor    bh,BYTE PTR [edi-0x7b7764a]
  414886:	cmp    DWORD PTR [esi-0x24],esi
  414889:	(bad)  
  41488b:	(bad)  
  41488c:	sbb    dh,ah
  41488e:	pusha  
  41488f:	adc    BYTE PTR [ebp+0x5960f3eb],dl
  414895:	arpl   di,di
  414897:	xlat   BYTE PTR ds:[ebx]
  414898:	mov    al,ds:0xd1724b76
  41489d:	sub    eax,0x2ec0f4a7
  4148a2:	xor    BYTE PTR [esi+0x3cd1c115],cl
  4148a8:	sub    eax,0xd66d4f87
  4148ad:	test   DWORD PTR [edi],0x8d8ab20f
  4148b3:	sub    cl,BYTE PTR [ecx-0x425cc55a]
  4148b9:	(bad)  
  4148ba:	cld    
  4148bb:	mov    cl,bh
  4148bd:	(bad)  
  4148be:	push   eax
  4148bf:	mov    ds,WORD PTR ds:0xb2424834
  4148c5:	push   ebp
  4148c6:	mov    ss,ecx
  4148c8:	aam    0x4b
  4148ca:	lea    edx,[ebx]
  4148cc:	add    DWORD PTR [eax+ebx*8],ecx
  4148cf:	push   ss
  4148d0:	cdq    
  4148d1:	jbe    0x4148ed
  4148d3:	lods   eax,DWORD PTR ds:[esi]
  4148d4:	and    BYTE PTR [edi+ecx*1+0x10a2f8b5],al
  4148db:	push   0xfffffffa
  4148dd:	xor    eax,0xee007b71
  4148e2:	stos   DWORD PTR es:[edi],eax
  4148e3:	jne    0x41487b
  4148e5:	xor    DWORD PTR [ebx],edx
  4148e7:	test   al,0xdc
  4148e9:	cmc    
  4148ea:	xchg   ecx,eax
  4148eb:	jp     0x4148f5
  4148ed:	xchg   esi,eax
  4148ee:	mov    ebx,0x962ab8b
  4148f3:	fidiv  WORD PTR [edx]
  4148f5:	lea    ebp,[edx-0x58]
  4148f8:	xor    dh,BYTE PTR [ebx]
  4148fa:	out    0x6,eax
  4148fc:	xchg   ecx,eax
  4148fd:	std    
  4148fe:	cmp    dh,BYTE PTR [edx]
  414900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414901:	imul   edx,DWORD PTR [ecx],0xffffffaa
  414904:	dec    esp
  414905:	nop
  414906:	push   edx
  414907:	sbb    BYTE PTR [ecx+0x60],0xd3
  41490b:	test   BYTE PTR [esi],dl
  41490d:	pop    ebp
  41490e:	sub    ebp,ebx
  414910:	outs   dx,BYTE PTR ds:[esi]
  414911:	and    bl,al
  414913:	push   cs
  414914:	and    al,0xc2
  414916:	rol    BYTE PTR [ebx-0x77],0x35
  41491a:	pusha  
  41491b:	push   es
  41491c:	mov    esp,0xc457896e
  414921:	and    bh,BYTE PTR [ebp+0x23b046be]
  414927:	mov    dh,0x1e
  414929:	pop    esp
  41492a:	fucom  st(7)
  41492c:	mov    ah,0x72
  41492e:	cmp    al,0x9
  414930:	adc    DWORD PTR [edx+0x6],ebx
  414933:	pushf  
  414934:	popf   
  414935:	mov    dl,0xbc
  414937:	and    eax,0x8ec87595
  41493c:	pop    esp
  41493d:	aam    0xdc
  41493f:	dec    ecx
  414940:	ins    DWORD PTR es:[edi],dx
  414941:	jnp    0x414982
  414943:	add    al,0x8e
  414945:	(bad)  
  414946:	jl     0x41492d
  414948:	ss push edx
  41494a:	mov    eax,0x1c7d0467
  41494f:	rcl    DWORD PTR [ecx-0x5a],cl
  414952:	sbb    ch,bh
  414954:	mov    edx,ebp
  414956:	xor    BYTE PTR [edi-0x58241c4b],cl
  41495c:	leave  
  41495d:	and    dh,bl
  41495f:	mov    DWORD PTR [ebx-0x520cf02e],eax
  414965:	jle    0x4149a0
  414967:	clc    
  414968:	sti    
  414969:	pop    edx
  41496a:	fsub   QWORD PTR [edx]
  41496c:	mov    ebx,0xe1680c78
  414971:	cld    
  414972:	fucomp st(4)
  414974:	(bad)  
  414975:	sub    ch,BYTE PTR [esi+ebp*8-0x29]
  414979:	mov    esi,0x6adfba72
  41497e:	or     BYTE PTR [edi+0x28],al
  414981:	imul   edx,esi,0xffffffd6
  414984:	or     BYTE PTR [eax+0x5f],dh
  414987:	dec    edi
  414988:	arpl   WORD PTR [esi+0x62ae30f1],bx
  41498e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41498f:	jnp    0x414923
  414991:	idiv   bl
  414993:	nop
  414994:	ds push ds
  414996:	add    esp,edi
  414998:	gs jb  0x414941
  41499b:	(bad)  
  41499c:	lock mov ah,0xf0
  41499f:	xchg   edi,eax
  4149a0:	pop    ebp
  4149a1:	popf   
  4149a2:	add    BYTE PTR [edi],0xec
  4149a5:	xchg   esi,eax
  4149a6:	mov    es,WORD PTR [edi+edx*1-0x5d]
  4149aa:	pop    eax
  4149ab:	lea    esi,[eax+0x2b]
  4149ae:	cs dec esi
  4149b0:	jnp    0x414999
  4149b2:	pop    esp
  4149b3:	scas   eax,DWORD PTR es:[edi]
  4149b4:	mov    ds:0x610ec566,eax
  4149b9:	cwde   
  4149ba:	stc    
  4149bb:	pop    eax
  4149bc:	pop    edi
  4149bd:	pusha  
  4149be:	fst    QWORD PTR [ebx-0x1be82fd]
  4149c4:	mov    cl,0x8f
  4149c6:	sbb    esp,DWORD PTR [edi]
  4149c8:	push   ecx
  4149c9:	cmp    al,0xbc
  4149cb:	inc    edi
  4149cc:	in     al,0x65
  4149ce:	pop    es
  4149cf:	mov    WORD PTR [eax-0x2e],gs
  4149d2:	test   DWORD PTR [edx],edx
  4149d4:	sbb    al,0x10
  4149d6:	xchg   ebx,eax
  4149d7:	pop    esp
  4149d8:	ja     0x414982
  4149da:	push   ds
  4149db:	mov    bh,0xce
  4149dd:	add    BYTE PTR [ebx+0x46],cl
  4149e0:	not    BYTE PTR [ebx+esi*1-0x765c8b14]
  4149e7:	lock adc BYTE PTR gs:[edx-0x7753c9d],al
  4149ef:	add    bl,BYTE PTR [ecx-0x58]
  4149f2:	lahf   
  4149f3:	xchg   edx,eax
  4149f4:	scas   eax,DWORD PTR es:[edi]
  4149f5:	rcr    al,1
  4149f7:	mov    ebp,0x1b279274
  4149fc:	xor    ecx,ecx
  4149fe:	cmp    ah,BYTE PTR [edx]
  414a00:	fs jl  0x4149a2
  414a03:	lahf   
  414a04:	mov    edx,DWORD PTR [ecx+0x7480a85]
  414a0a:	add    eax,DWORD PTR [esi+eax*8+0x4ebff38e]
  414a11:	aas    
  414a12:	add    DWORD PTR [ecx],ebx
  414a14:	add    eax,0x428d3111
  414a19:	fistp  QWORD PTR [edx-0x23]
  414a1c:	dec    esi
  414a1d:	loop   0x4149a7
  414a1f:	outs   dx,DWORD PTR ds:[esi]
  414a20:	loope  0x4149ee
  414a22:	jle    0x414a1c
  414a24:	iret   
  414a25:	adc    BYTE PTR [eax],0x75
  414a28:	(bad)
  414a2b:	adc    edx,esp
  414a2d:	xor    dh,BYTE PTR [eax+edx*8+0x16]
  414a31:	and    al,0xfe
  414a33:	loope  0x414a15
  414a35:	or     al,0x3f
  414a37:	(bad)  
  414a38:	movlps xmm3,QWORD PTR [edx+0x4e]
  414a3c:	sbb    dh,dl
  414a3e:	pop    edx
  414a3f:	jae    0x22cd41d1
  414a45:	repz add al,BYTE PTR [ecx+0x6caa4da4]
  414a4c:	cwde   
  414a4d:	cli    
  414a4e:	fistp  QWORD PTR [eax+0xb3b1373]
  414a54:	mov    eax,0xa572df8f
  414a59:	ret    0x3fde
  414a5c:	cmp    al,ch
  414a5e:	mov    ah,0xdd
  414a60:	cld    
  414a61:	or     DWORD PTR cs:[esp+edi*8],edi
  414a65:	pop    esi
  414a66:	stc    
  414a67:	xor    eax,0xe1d68b85
  414a6c:	mov    ds,WORD PTR ds:0x146a04a7
  414a72:	sub    ecx,DWORD PTR [ebx-0x6b]
  414a75:	call   FWORD PTR [esi]
  414a77:	ficom  DWORD PTR [edx+0x71]
  414a7a:	or     al,0x90
  414a7c:	ret    
  414a7d:	add    ecx,esp
  414a7f:	mov    ch,0x3c
  414a81:	ss or  al,0xd4
  414a84:	adc    esi,DWORD PTR [eax*2+0x531c9062]
  414a8b:	xchg   ebx,eax
  414a8c:	mov    esp,DWORD PTR [edx-0x15]
  414a8f:	jbe    0x414a8c
  414a91:	cmp    eax,DWORD PTR [edi+0x6544cd57]
  414a97:	xchg   esi,eax
  414a98:	xchg   ebx,eax
  414a99:	nop
  414a9a:	test   DWORD PTR [ecx],0xb6c93382
  414aa0:	inc    edx
  414aa1:	inc    esp
  414aa2:	mov    ah,0x11
  414aa4:	mov    ecx,eax
  414aa6:	mov    ds:0xc365e395,eax
  414aab:	sub    al,0x20
  414aad:	ja     0x414b18
  414aaf:	(bad)  
  414ab0:	pop    ebp
  414ab1:	xor    eax,edi
  414ab3:	sbb    BYTE PTR [bp+di-0x47],bl
  414ab7:	mov    ds:0x8065ca76,al
  414abc:	rcr    DWORD PTR [ebx],cl
  414abe:	(bad)
  414ac1:	hlt    
  414ac2:	out    dx,al
  414ac3:	stc    
  414ac4:	xchg   esp,eax
  414ac5:	and    eax,0x55db5cd5
  414aca:	hlt    
  414acb:	xchg   edx,eax
  414acc:	enter  0xd4de,0x48
  414ad0:	jno    0x414ac7
  414ad2:	mov    ebx,0xdc65a044
  414ad7:	ficom  DWORD PTR [esi]
  414ad9:	sub    ebx,esi
  414adb:	pop    ebx
  414adc:	mov    edi,0xdc15591d
  414ae1:	cld    
  414ae2:	(bad)  
  414ae4:	div    DWORD PTR [ebx+0x47a7ba59]
  414aea:	aaa    
  414aeb:	push   edx
  414aec:	ins    BYTE PTR es:[edi],dx
  414aed:	call   0xf787:0xc321b716
  414af4:	loopne 0x414b65
  414af6:	push   ecx
  414af7:	scas   al,BYTE PTR es:[edi]
  414af8:	addr16 test bl,al
  414afb:	lods   al,BYTE PTR ds:[esi]
  414afc:	les    edi,FWORD PTR [ebx+0x28]
  414aff:	push   cs
  414b00:	ds or  edx,ebp
  414b03:	jbe    0x414b0d
  414b05:	sub    esp,DWORD PTR [ecx*1+0x13894319]
  414b0c:	not    edi
  414b0e:	dec    ebp
  414b0f:	mov    al,ds:0xc7b3c840
  414b14:	add    BYTE PTR [edx+0x12],al
  414b17:	add    eax,0xdba30e68
  414b1c:	rcr    BYTE PTR [esi+0x75],1
  414b1f:	mov    dh,0x80
  414b21:	cdq    
  414b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b23:	sub    bh,bl
  414b25:	pusha  
  414b26:	or     eax,0x8495248e
  414b2b:	jns    0x414bab
  414b2d:	jno    0x414b88
  414b2f:	push   ecx
  414b30:	fnstcw WORD PTR [esi-0x76]
  414b33:	popa   
  414b34:	xchg   bh,dl
  414b36:	sbb    DWORD PTR [esi+0x7747a06e],ebp
  414b3c:	cwde   
  414b3d:	cmp    esi,DWORD PTR [edx]
  414b3f:	or     bl,BYTE PTR [edx+0x239cbaa7]
  414b45:	rep lods eax,DWORD PTR ds:[esi]
  414b47:	cmp    ah,BYTE PTR [ebp+ecx*1-0x46]
  414b4b:	xchg   ecx,eax
  414b4c:	dec    ebx
  414b4d:	cmp    al,bl
  414b4f:	in     al,0xfe
  414b51:	sbb    esp,DWORD PTR [edx-0x7d]
  414b54:	pop    edi
  414b55:	dec    esp
  414b56:	mov    esp,0x2533191
  414b5b:	(bad)  
  414b5c:	daa    
  414b5d:	cmp    BYTE PTR [eax],ch
  414b5f:	jle    0x414bd2
  414b61:	sbb    eax,0x1bafcbb0
  414b66:	jle    0x414b8b
  414b68:	add    esi,DWORD PTR [edi]
  414b6a:	xchg   edi,eax
  414b6b:	ja     0x414baa
  414b6d:	dec    eax
  414b6e:	mov    WORD PTR [edx+0x71dc26b6],ss
  414b74:	and    BYTE PTR [edx-0x16eee8be],cl
  414b7a:	fcomp  DWORD PTR [edx+0x54b9d1d6]
  414b80:	and    DWORD PTR [ecx+0x7b],ecx
  414b83:	in     eax,0xf1
  414b85:	mov    ch,0x25
  414b87:	arpl   bp,cx
  414b89:	xor    BYTE PTR cs:[ebx-0xd],dh
  414b8d:	sub    al,ch
  414b8f:	mov    BYTE PTR [ebx+0x52407207],bl
  414b95:	popf   
  414b96:	(bad)  
  414b98:	adc    eax,0x2b2402df
  414b9d:	pop    edi
  414b9e:	mov    cl,0xfe
  414ba0:	pop    esp
  414ba1:	btc    DWORD PTR [ecx],edx
  414ba4:	dec    edx
  414ba5:	mov    esi,0x5ba3b999
  414baa:	in     al,0x70
  414bac:	sti    
  414bad:	loop   0x414bce
  414baf:	pop    eax
  414bb0:	or     edx,DWORD PTR [edi]
  414bb2:	push   edx
  414bb3:	cwde   
  414bb4:	xor    al,0xf7
  414bb6:	(bad)  
  414bb7:	ftst   
  414bb9:	addr16 dec ebp
  414bbb:	dec    ebp
  414bbc:	xchg   esi,eax
  414bbd:	or     BYTE PTR [ebp+0x14a701ab],dl
  414bc3:	sbb    DWORD PTR [edx+0x724724ac],0x3e86eba3
  414bcd:	xlat   BYTE PTR ds:[ebx]
  414bce:	test   DWORD PTR [ebx+0x40],esi
  414bd1:	cli    
  414bd2:	or     eax,0x140a109a
  414bd7:	xchg   ebp,eax
  414bd8:	pop    ebx
  414bd9:	test   al,0xbc
  414bdb:	xchg   ecx,eax
  414bdc:	call   0xd6bf:0x9876f5fb
  414be3:	jge    0x414c11
  414be5:	enter  0xf4a1,0xa5
  414be9:	pusha  
  414bea:	idiv   DWORD PTR [ecx]
  414bec:	rol    DWORD PTR [ebp+0x29],cl
  414bef:	xchg   DWORD PTR [eax],edi
  414bf1:	gs mov ecx,0x11b5b535
  414bf7:	sub    DWORD PTR [esi+0x3a7e2550],ebp
  414bfd:	aaa    
  414bfe:	xor    al,BYTE PTR [edx+0x7defb027]
  414c04:	jmp    0x7f54:0x8a1d9ffe
  414c0b:	sar    DWORD PTR ds:0xd27c63d4,1
  414c11:	(bad)  
  414c14:	fcomp  DWORD PTR [esi-0x761f8b01]
  414c1a:	cmp    ch,0x67
  414c1d:	push   cs
  414c1e:	imul   BYTE PTR [esi]
  414c20:	jbe    0x414c53
  414c22:	cwde   
  414c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c24:	ret    
  414c25:	sub    DWORD PTR [edi+0x28],esi
  414c28:	jns    0x414c90
  414c2a:	mov    eax,0x697d9709
  414c2f:	call   0xe791:0x1092a665
  414c36:	add    eax,edi
  414c38:	popf   
  414c39:	or     al,0xb7
  414c3b:	loopne 0x414c5d
  414c3d:	push   esp
  414c3e:	jl     0x414c40
  414c40:	je     0x414c30
  414c42:	neg    DWORD PTR [edi]
  414c44:	pop    ss
  414c45:	pop    es
  414c46:	lahf   
  414c47:	fadd   QWORD PTR [edi]
  414c49:	(bad)  
  414c4a:	pop    ebp
  414c4b:	test   BYTE PTR [ebx],al
  414c4d:	mov    edi,0x2b5eac02
  414c52:	fwait
  414c53:	stc    
  414c54:	out    dx,eax
  414c55:	mov    eax,0x10378498
  414c5a:	out    0xd2,eax
  414c5c:	loop   0x414c4d
  414c5e:	mul    DWORD PTR [eax-0x5c65e1a1]
  414c64:	les    ebx,FWORD PTR ds:0x13d4bb4c
  414c6a:	fisubr WORD PTR [esi]
  414c6c:	mov    eax,0x26f7bb70
  414c71:	loopne 0x414c36
  414c73:	out    dx,al
  414c74:	sub    BYTE PTR [eax-0x2e],0x98
  414c78:	cmp    dl,dh
  414c7a:	lock or BYTE PTR [ebx],0x2c
  414c7e:	js     0x414c7d
  414c80:	sbb    eax,0x538b626c
  414c85:	dec    eax
  414c86:	push   ebx
  414c87:	inc    ecx
  414c88:	or     dl,BYTE PTR [ecx+0x32]
  414c8b:	and    bh,ah
  414c8d:	cmp    dh,BYTE PTR [edx]
  414c8f:	and    BYTE PTR [edx+0x318f12ae],dl
  414c95:	adc    ebx,DWORD PTR [edi-0x2d]
  414c98:	push   0x4
  414c9a:	nop
  414c9b:	iret   
  414c9c:	(bad)  
  414c9d:	ds xor eax,0x5479c41b
  414ca3:	mov    ebp,0xc479519e
  414ca8:	mov    eax,0xf918dbd3
  414cad:	push   edx
  414cae:	les    esp,FWORD PTR [esi]
  414cb0:	add    DWORD PTR [ecx],ecx
  414cb2:	stos   DWORD PTR es:[edi],eax
  414cb3:	cmc    
  414cb4:	lea    edx,[ebp-0x7]
  414cb7:	stos   DWORD PTR es:[edi],eax
  414cb8:	outs   dx,BYTE PTR ds:[esi]
  414cb9:	lods   eax,DWORD PTR ds:[esi]
  414cba:	std    
  414cbb:	in     al,0x60
  414cbd:	push   edi
  414cbe:	push   cs
  414cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc0:	pop    ss
  414cc1:	cmp    eax,0x23c5c8e2
  414cc6:	hlt    
  414cc7:	sti    
  414cc8:	test   al,0xc3
  414cca:	or     eax,0x24d99736
  414ccf:	std    
  414cd0:	pop    edx
  414cd1:	mov    ebp,0x4e099e5d
  414cd6:	addr16 push ebx
  414cd8:	adc    BYTE PTR [esi+0x77],dh
  414cdb:	stc    
  414cdc:	adc    BYTE PTR [edx],bh
  414cde:	imul   ebp,eax,0x8866106b
  414ce4:	int3   
  414ce5:	ins    BYTE PTR es:[edi],dx
  414ce6:	fwait
  414ce7:	inc    esp
  414ce8:	jg     0x414cc5
  414cea:	ror    DWORD PTR [edx+0x3021b5df],cl
  414cf0:	das    
  414cf1:	dec    ebp
  414cf2:	rcl    BYTE PTR [esi+0x18],1
  414cf5:	inc    ecx
  414cf6:	int3   
  414cf7:	sti    
  414cf8:	fnstsw WORD PTR [ebx]
  414cfa:	int3   
  414cfb:	imul   DWORD PTR [esp+edi*8]
  414cfe:	adc    DWORD PTR [edi],esi
  414d00:	push   es
  414d01:	sahf   
  414d02:	data16 xor al,0x1d
  414d05:	call   0x4495:0x2fe450d0
  414d0c:	jno    0x414d66
  414d0e:	pop    esi
  414d0f:	gs xor eax,0x48b03042
  414d15:	pop    eax
  414d16:	out    dx,al
  414d17:	dec    ebp
  414d18:	inc    BYTE PTR ds:0x2b0436e1
  414d1e:	loop   0x414cb3
  414d20:	xlat   BYTE PTR ds:[ebx]
  414d21:	sbb    eax,0x619d580a
  414d26:	push   0xffffff92
  414d28:	xchg   edx,eax
  414d29:	outs   dx,DWORD PTR ds:[esi]
  414d2a:	xlat   BYTE PTR ds:[ebx]
  414d2b:	call   0x722bbea6
  414d30:	sub    BYTE PTR [eax-0x62],ah
  414d33:	retf   
  414d34:	mul    DWORD PTR [edi-0x1af6ee]
  414d3a:	shr    eax,cl
  414d3c:	mov    dl,bh
  414d3e:	in     eax,dx
  414d3f:	popf   
  414d40:	loope  0x414da2
  414d42:	or     DWORD PTR [edx-0x4386fb04],eax
  414d48:	jle    0x414daf
  414d4a:	pop    esi
  414d4b:	test   DWORD PTR [ecx],ebx
  414d4d:	jecxz  0x414db2
  414d4f:	cdq    
  414d50:	rcr    BYTE PTR ds:0x6664ba55,1
  414d56:	js     0x414db1
  414d58:	mov    ch,0x3e
  414d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d5b:	aas    
  414d5c:	jne    0x414d7d
  414d5e:	test   BYTE PTR ds:0xe5bcafb2,0xa0
  414d65:	and    eax,0xc1acb9a2
  414d6a:	and    ch,BYTE PTR [edx+ebx*8-0x21]
  414d6e:	sahf   
  414d6f:	mov    eax,ds:0xfb24b6c1
  414d74:	cld    
  414d75:	jns    0x414d40
  414d77:	adc    eax,edi
  414d79:	push   es
  414d7a:	mov    edi,0x5cf66224
  414d7f:	mov    ds:0xfb84196,eax
  414d84:	xor    DWORD PTR [edi-0x4e],edx
  414d87:	xor    ecx,DWORD PTR [ecx]
  414d89:	or     eax,esp
  414d8b:	jne    0x414e03
  414d8d:	ret    0xe3fb
  414d90:	pop    esp
  414d91:	lds    esp,FWORD PTR [ebx+0x251acb39]
  414d97:	es inc ebx
  414d99:	imul   ebp,DWORD PTR [ebx+ebx*1+0x3f4c0e86],0x16
  414da1:	mov    ebx,0xd1fd7e05
  414da6:	mov    BYTE PTR gs:[edx],dh
  414da9:	adc    ebx,edx
  414dab:	fwait
  414dac:	cs xchg dh,ah
  414daf:	mov    dh,0x14
  414db1:	mov    esi,0x94e169fa
  414db6:	or     DWORD PTR [eax],edx
  414db8:	fs push edx
  414dba:	inc    eax
  414dbb:	jb     0x414e29
  414dbd:	add    ah,BYTE PTR [edx-0x78e11991]
  414dc3:	xchg   ebp,eax
  414dc4:	loopne 0x414d8e
  414dc6:	add    al,0x3f
  414dc8:	test   al,0xb6
  414dca:	cmp    al,ch
  414dcc:	mov    dh,0x6
  414dce:	pop    eax
  414dcf:	icebp  
  414dd0:	jl     0x414e2f
  414dd2:	mov    ebx,0xfad55573
  414dd7:	xlat   BYTE PTR ds:[ebx]
  414dd8:	cmp    ah,BYTE PTR [esi-0x20]
  414ddb:	add    eax,0xc8448be2
  414de0:	xlat   BYTE PTR ds:[ebx]
  414de1:	sbb    esp,DWORD PTR [ebp+0x27]
  414de4:	into   
  414de5:	dec    edx
  414de6:	test   al,0xe0
  414de8:	pop    ds
  414de9:	ret    0xdf35
  414dec:	xchg   ebp,eax
  414ded:	adc    al,0x76
  414def:	clc    
  414df0:	dec    eax
  414df1:	mov    ch,0x49
  414df3:	xchg   edi,eax
  414df4:	dec    BYTE PTR [ebx-0x22]
  414df7:	dec    esp
  414df8:	aas    
  414df9:	mov    BYTE PTR [edi-0x7cb5f07a],dl
  414dff:	add    al,0xa8
  414e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e02:	mov    ebx,0x4dc230f3
  414e07:	xchg   esi,eax
  414e08:	fcmove st,st(3)
  414e0a:	mov    dh,0x11
  414e0c:	fnsetpm(287 only) 
  414e0e:	sbb    ah,al
  414e10:	adc    bh,BYTE PTR [ebx-0x43f96ce6]
  414e16:	not    DWORD PTR [eax]
  414e18:	loope  0x414e8d
  414e1a:	shl    DWORD PTR [edi],cl
  414e1c:	sar    BYTE PTR [ecx+0x1c718fe4],1
  414e22:	xor    DWORD PTR [ebx-0x58],0xffffffdb
  414e26:	lods   al,BYTE PTR ds:[esi]
  414e27:	cmp    eax,0xf54f8927
  414e2c:	loop   0x414dff
  414e2e:	data16 rol BYTE PTR [edi+0x33],0xd1
  414e33:	dec    eax
  414e34:	or     cl,ch
  414e36:	mov    bh,0xba
  414e38:	iret   
  414e39:	das    
  414e3a:	ins    BYTE PTR es:[edi],dx
  414e3b:	pop    ecx
  414e3c:	xor    ah,BYTE PTR [edi]
  414e3e:	shl    ah,0xc9
  414e41:	inc    esi
  414e42:	fisubr WORD PTR [esi]
  414e44:	inc    eax
  414e45:	ret    0x3de2
  414e48:	addr16 es (bad) 
  414e4c:	fwait
  414e4d:	cdq    
  414e4e:	mov    dh,0x58
  414e50:	rcr    edi,cl
  414e52:	imul   edx,esi,0x99c627d9
  414e58:	cli    
  414e59:	repz das 
  414e5b:	out    dx,al
  414e5c:	js     0x414e73
  414e5e:	push   0x7c
  414e60:	cmp    al,0x26
  414e62:	mov    ecx,0x4e25409d
  414e67:	dec    ebp
  414e68:	and    DWORD PTR [esi-0x78],0x1a58f895
  414e6f:	mov    cl,0xb8
  414e71:	clc    
  414e72:	cli    
  414e73:	outs   dx,DWORD PTR ds:[esi]
  414e74:	cld    
  414e75:	call   0xe78c:0x3e172c64
  414e7c:	add    bh,bh
  414e7e:	mov    edx,0x68c0afbd
  414e83:	pop    eax
  414e84:	sbb    al,0x49
  414e86:	cmp    DWORD PTR [ecx-0x3618d2c2],ebx
  414e8c:	sbb    ebp,DWORD PTR [eax-0x3b60ed5f]
  414e92:	add    bh,dl
  414e94:	push   ebx
  414e95:	jle    0x414f03
  414e97:	icebp  
  414e98:	sub    DWORD PTR [eax+ebp*2+0x46],0x1e14b56f
  414ea0:	popa   
  414ea1:	jmp    0x8d2d2306
  414ea6:	lods   eax,DWORD PTR ds:[esi]
  414ea7:	push   ecx
  414ea8:	call   0xfca6:0x96c98099
  414eaf:	sbb    edx,DWORD PTR [edx+0x764ab963]
  414eb5:	stos   DWORD PTR es:[edi],eax
  414eb6:	imul   eax,edx,0x0
  414eb9:	hlt    
  414eba:	jb     0x414eb0
  414ebc:	nop
  414ebd:	sub    dl,BYTE PTR [esi]
  414ebf:	pop    esp
  414ec0:	sbb    BYTE PTR [edx-0x29b21e5b],dh
  414ec6:	mov    ebx,0x24f34214
  414ecb:	sbb    DWORD PTR [ecx-0x456a8280],0xa6499c3d
  414ed5:	popf   
  414ed6:	mov    esi,ebx
  414ed8:	mov    edx,DWORD PTR [ecx-0x68]
  414edb:	mov    edx,0xd0f4b857
  414ee0:	jge    0x414e77
  414ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee3:	(bad)  [esp+ecx*4+0x2ba3ce2b]
  414eea:	sub    dh,dl
  414eec:	test   DWORD PTR [edx-0x7f],edx
  414eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef0:	push   ebx
  414ef1:	imul   eax,edx,0xf3290a28
  414ef7:	scas   eax,DWORD PTR es:[edi]
  414ef8:	push   es
  414ef9:	loopne 0x414ee5
  414efb:	mov    bl,0xea
  414efd:	int    0xdf
  414eff:	pusha  
  414f00:	(bad)
  414f03:	aam    0x37
  414f05:	popf   
  414f06:	js     0x414ec9
  414f08:	ins    DWORD PTR es:[edi],dx
  414f09:	test   ch,ch
  414f0b:	test   eax,0x667e6a88
  414f10:	xor    ebp,ecx
  414f12:	mov    eax,ds:0x8714e228
  414f17:	dec    esi
  414f18:	rol    DWORD PTR [di],0x0
  414f1c:	lock rol BYTE PTR [eax+0x73],0x70
  414f21:	jo     0x414eda
  414f23:	and    BYTE PTR [edx],dh
  414f25:	mov    ds:0x45a16b3e,al
  414f2a:	pop    esp
  414f2b:	fisub  DWORD PTR [ebx]
  414f2d:	and    cl,ch
  414f2f:	mov    eax,ds:0xc1c8f0a6
  414f34:	and    ecx,DWORD PTR [eax]
  414f36:	test   eax,0x9a49377d
  414f3b:	mov    ch,0xe3
  414f3d:	sbb    DWORD PTR [esi+0x33e9360a],esi
  414f43:	faddp  st(7),st
  414f45:	pop    di
  414f47:	stos   DWORD PTR es:[edi],eax
  414f48:	jns    0x414f17
  414f4a:	out    0x50,eax
  414f4c:	fst    DWORD PTR [ecx]
  414f4e:	xor    al,0xfd
  414f50:	sti    
  414f51:	in     eax,0xda
  414f53:	fdiv   DWORD PTR [edi]
  414f55:	adc    al,0xb9
  414f57:	add    cl,cl
  414f59:	jo     0x414f2d
  414f5b:	push   0x0
  414f5d:	mov    WORD PTR [eax-0x43],?
  414f60:	std    
  414f61:	retf   0x1d24
  414f64:	pop    edi
  414f65:	push   0xbc4de160
  414f6a:	inc    edx
  414f6b:	cmp    dh,BYTE PTR [edi+0x29b80e1c]
  414f71:	call   0xa868:0x587a9c05
  414f78:	mov    ch,0x4f
  414f7a:	stos   DWORD PTR es:[edi],eax
  414f7b:	test   DWORD PTR [ebp+0x3c4e62f5],0xdc32ebca
  414f85:	push   DWORD PTR [esi-0x715f711e]
  414f8b:	call   0xfc11:0x37251334
  414f92:	and    edi,esp
  414f94:	add    cl,0x26
  414f97:	cmp    edx,esp
  414f99:	ret    
  414f9a:	sbb    cl,0xf7
  414f9d:	ss in  eax,dx
  414f9f:	jne    0x414f75
  414fa1:	popa   
  414fa2:	aas    
  414fa3:	adc    eax,0xc90ead1a
  414fa8:	push   0xfffffffd
  414faa:	retf   
  414fab:	lea    esp,[ecx]
  414fad:	mov    bh,0x2c
  414faf:	inc    esp
  414fb0:	mov    ds:0x244b0496,al
  414fb5:	mov    esi,DWORD PTR [ebp+0x7d]
  414fb8:	cmp    eax,0x560700e2
  414fbd:	cmc    
  414fbe:	hlt    
  414fbf:	inc    esp
  414fc0:	aam    0x7
  414fc2:	jg     0x41501e
  414fc4:	int3   
  414fc5:	inc    edi
  414fc6:	es es dec edx
  414fc9:	mov    esi,0x3688e666
  414fce:	xlat   BYTE PTR ds:[ebx]
  414fcf:	or     BYTE PTR [eax+0x21fa59e6],ch
  414fd5:	pop    ebx
  414fd6:	push   edi
  414fd7:	dec    ebx
  414fd8:	fcom   DWORD PTR [ebx-0x735af24f]
  414fde:	aam    0xdc
  414fe0:	pop    esp
  414fe1:	lds    eax,FWORD PTR [ebp-0x46]
  414fe4:	fidivr DWORD PTR [edx-0x6a]
  414fe7:	les    ebp,FWORD PTR [edx-0x2e]
  414fea:	fsubr  QWORD PTR [edx]
  414fec:	inc    ebx
  414fed:	pusha  
  414fee:	out    0xbc,al
  414ff0:	dec    edx
  414ff1:	mov    esi,0x610c8e71
  414ff6:	xor    al,0x9
  414ff8:	ins    BYTE PTR es:[edi],dx
  414ff9:	fwait
  414ffa:	lea    ebx,[edx+0x14]
  414ffd:	jg     0x415079
  414fff:	pop    edi
  415000:	fisttp QWORD PTR [ecx-0x25e8b02c]
  415006:	dec    ecx
  415007:	pop    es
  415008:	sbb    DWORD PTR [ebp-0x495afc44],esp
  41500e:	sti    
  41500f:	pop    ebp
  415010:	cmp    al,0x62
  415012:	stos   DWORD PTR es:[edi],eax
  415013:	ror    DWORD PTR [eax+0x2c],1
  415016:	int3   
  415017:	inc    ebx
  415018:	(bad)  
  415019:	fsubr  DWORD PTR ds:0x8b5d5a8c
  41501f:	mov    bl,0xb3
  415021:	jmp    0x415094
  415023:	mov    ebp,0x6e48f774
  415028:	sbb    BYTE PTR [di],ah
  41502b:	xchg   ebp,eax
  41502c:	aam    0xf2
  41502e:	test   al,0x4d
  415030:	scas   al,BYTE PTR es:[edi]
  415031:	stos   BYTE PTR es:[edi],al
  415032:	imul   esp,DWORD PTR [ebx],0x948ed354
  415038:	xchg   ebp,eax
  415039:	dec    ecx
  41503a:	lods   al,BYTE PTR ds:[esi]
  41503b:	fmulp  st(7),st
  41503d:	repnz int 0x45
  415040:	jmp    0x5af6a122
  415045:	or     al,0xad
  415047:	or     ah,BYTE PTR [esi]
  415049:	or     al,0x82
  41504c:	mov    edi,0x5d3e38ab
  415051:	mov    ecx,0xfe3e47f
  415056:	push   0x2a
  415058:	mov    eax,0x4a8e4699
  41505d:	test   ah,dl
  41505f:	daa    
  415060:	scas   al,BYTE PTR es:[edi]
  415061:	test   BYTE PTR [edx-0xb],bh
  415064:	cmp    BYTE PTR ds:0x10fec30c,bl
  41506a:	push   0xf10d825e
  41506f:	jle    0x415095
  415071:	ja     0x415096
  415073:	into   
  415074:	mov    bl,0x3d
  415076:	pop    esp
  415077:	mov    WORD PTR [ebx],ds
  415079:	cli    
  41507a:	loop   0x415018
  41507c:	mov    bh,0x41
  41507e:	xchg   esp,eax
  41507f:	cmc    
  415080:	pop    ebp
  415081:	fadd   st(0),st
  415083:	mov    ecx,0x6e40dba8
  415088:	out    dx,eax
  415089:	jns    0x4150be
  41508b:	fadd   QWORD PTR [ebx+ecx*8+0x38698bd6]
  415092:	jp     0x41508d
  415094:	hlt    
  415095:	push   ss
  415096:	push   eax
  415097:	popf   
  415098:	sub    cl,BYTE PTR [eax]
  41509a:	in     al,dx
  41509b:	jo     0x415047
  41509d:	imul   ebp,DWORD PTR [ecx],0x4341ef96
  4150a3:	shl    DWORD PTR [edi+0x255ae34b],1
  4150a9:	dec    ebp
  4150aa:	cs pop es
  4150ac:	pop    esp
  4150ad:	jns    0x4150eb
  4150af:	dec    esi
  4150b0:	popf   
  4150b1:	or     DWORD PTR [ebx-0x1fcfde61],edi
  4150b7:	aaa    
  4150b8:	aam    0x71
  4150ba:	jle    0x415126
  4150bc:	xchg   ebx,eax
  4150bd:	and    edi,DWORD PTR [ebx-0x14f3a545]
  4150c3:	int3   
  4150c4:	sub    BYTE PTR [ecx-0x3551ac65],0xfd
  4150cb:	test   eax,0x92565032
  4150d0:	test   esp,ebx
  4150d2:	push   ds
  4150d3:	daa    
  4150d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d5:	sti    
  4150d6:	add    ebp,DWORD PTR [esi+ecx*1+0x4e]
  4150da:	aam    0x78
  4150dc:	mov    dl,dh
  4150de:	mov    dh,0x6
  4150e0:	dec    esp
  4150e1:	adc    BYTE PTR [edx+ecx*8],dh
  4150e4:	or     eax,0x27116803
  4150e9:	das    
  4150ea:	xchg   ebx,eax
  4150eb:	ret    
  4150ec:	or     eax,0xcdc41c0a
  4150f1:	stc    
  4150f2:	test   BYTE PTR [ebp-0x3e],cl
  4150f5:	bound  edx,QWORD PTR [ebx-0x60584522]
  4150fb:	xchg   edi,eax
  4150fc:	icebp  
  4150fd:	dec    edx
  4150fe:	push   cs
  4150ff:	out    0xa1,eax
  415101:	sbb    edx,DWORD PTR [edi-0x80]
  415104:	fistp  WORD PTR [esi+0x45]
  415107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415108:	sub    ebx,DWORD PTR [edx+0x76]
  41510b:	xor    ebp,esi
  41510d:	shl    BYTE PTR [eax+ecx*1],0x43
  415111:	addr16 sub al,0x6a
  415114:	inc    ecx
  415115:	cvttps2pi mm3,xmm7
  415118:	push   0xffffffe4
  41511a:	cmp    BYTE PTR [esi+0x2e110c52],ch
  415120:	and    cl,BYTE PTR [eax-0x40]
  415123:	addr16 adc al,0xb7
  415126:	pop    esp
  415127:	pop    ss
  415128:	mov    eax,ds:0x9419fc85
  41512d:	cdq    
  41512e:	ins    DWORD PTR es:[edi],dx
  41512f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415130:	imul   ebx,ebx,0x97e07daf
  415136:	mov    edi,0x83872d79
  41513b:	lea    ecx,[esi+0x45]
  41513e:	pop    ebx
  41513f:	push   esp
  415140:	(bad)  
  415141:	jnp    0x41515d
  415143:	adc    al,0xaa
  415145:	and    al,0x15
  415147:	das    
  415148:	inc    edi
  415149:	test   BYTE PTR [esi+0x1b],dl
  41514c:	ins    DWORD PTR es:[edi],dx
  41514d:	jl     0x415106
  41514f:	(bad)  
  415150:	in     al,0x60
  415152:	mov    cl,0x79
  415154:	mov    eax,ds:0x69afc4eb
  415159:	sbb    BYTE PTR [ebx-0x5621e093],0x31
  415160:	add    eax,0xd09ae034
  415165:	or     edi,DWORD PTR [ebx-0xa]
  415168:	ins    DWORD PTR es:[edi],dx
  415169:	add    al,0x8c
  41516b:	mov    ds:0xb5184239,al
  415170:	push   ss
  415171:	mov    edi,0xd9a8a577
  415176:	mov    ds:0x263ace91,al
  41517b:	inc    eax
  41517c:	(bad)  
  41517d:	cwde   
  41517e:	mov    WORD PTR [esi+eax*1],gs
  415181:	cmp    ebx,ecx
  415183:	pop    edx
  415184:	or     eax,0xc19f8833
  415189:	enter  0xe519,0x9d
  41518d:	aad    0x82
  41518f:	sub    DWORD PTR [ebp+0x82a2b37],0x80b4e991
  415199:	sti    
  41519a:	(bad)  
  41519b:	call   DWORD PTR ds:0xcdef7c34
  4151a1:	test   DWORD PTR [esi],0x34bf794b
  4151a7:	sbb    ebx,DWORD PTR [ecx-0x1be4ef54]
  4151ad:	mov    edi,0xcdab5ba3
  4151b2:	mov    ah,0x1b
  4151b4:	shl    DWORD PTR [ebp-0x8],1
  4151b7:	sbb    DWORD PTR [eax],edx
  4151b9:	pop    edi
  4151ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151bb:	add    al,BYTE PTR [edx]
  4151bd:	dec    eax
  4151be:	retf   
  4151bf:	iret   
  4151c0:	inc    edx
  4151c2:	cmp    cl,bl
  4151c4:	sahf   
  4151c5:	jmp    0xed21:0xce9b9ba5
  4151cc:	pop    ebx
  4151cd:	fld    QWORD PTR [ebp-0x5c]
  4151d0:	repz (bad) 
  4151d2:	pop    ds
  4151d3:	pop    edx
  4151d4:	pop    ss
  4151d5:	jmp    0x4151ba
  4151d7:	fbstp  TBYTE PTR [ebx+0x77]
  4151da:	or     al,0x7
  4151dc:	ss jmp 0x6098:0x35686da6
  4151e4:	adc    edx,DWORD PTR [ecx]
  4151e6:	fcmovne st,st(4)
  4151e8:	jle    0x4151f8
  4151ea:	dec    ebx
  4151eb:	pop    edi
  4151ec:	cmp    eax,DWORD PTR [edx]
  4151ee:	sahf   
  4151ef:	mov    ds:0x86107693,al
  4151f4:	add    eax,0x512456f7
  4151f9:	xchg   esp,eax
  4151fa:	scas   al,BYTE PTR es:[edi]
  4151fb:	rcr    DWORD PTR [eax+edx*2-0x6f],1
  4151ff:	push   es
  415200:	rcl    BYTE PTR [esi+0x69],cl
  415203:	and    bh,BYTE PTR [ecx+esi*8-0x41710d74]
  41520a:	fcomp  DWORD PTR [eax-0xe]
  41520d:	out    0xda,al
  41520f:	into   
  415210:	ret    0x4f8
  415213:	mov    gs,WORD PTR [ebx]
  415215:	rcr    DWORD PTR [ecx],1
  415217:	lds    edi,FWORD PTR [edx]
  415219:	bound  esi,QWORD PTR [ebp-0x46]
  41521c:	bound  edi,QWORD PTR [ebp-0x16]
  41521f:	loopne 0x4151a6
  415221:	mov    eax,0xc451e626
  415226:	js     0x4151cc
  415228:	cmp    DWORD PTR [edi-0x63],esi
  41522b:	push   cs
  41522c:	xor    eax,0xa914bbb5
  415231:	in     al,0x2f
  415233:	and    eax,0xbf390470
  415238:	mov    WORD PTR [ebp-0x62],gs
  41523b:	sbb    DWORD PTR ds:[ecx+ebp*2+0x5e],esp
  415240:	push   ebp
  415241:	fyl2xp1 
  415243:	xor    DWORD PTR [esi-0x3b84fad1],ecx
  415249:	arpl   WORD PTR [ebp+ebx*1-0xb5bbeab],sp
  415250:	pop    ss
  415251:	div    dl
  415253:	sub    DWORD PTR [ebx+0x64],ecx
  415256:	(bad)  
  415257:	push   ecx
  415258:	cmp    eax,0x83be2e7c
  41525d:	sub    eax,0xcb9770f5
  415262:	mul    BYTE PTR [esp+ebx*1]
  415265:	(bad)  
  415266:	dec    ebp
  415267:	pop    esi
  415268:	(bad)  
  415269:	cli    
  41526a:	inc    ebx
  41526b:	mov    eax,ds:0x89b85456
  415270:	inc    edx
  415271:	cwde   
  415272:	pop    ebx
  415273:	imul   eax,eax,0xffffffce
  415276:	aad    0xb5
  415278:	fist   DWORD PTR [edx+eiz*4]
  41527b:	fadd   st,st(5)
  41527d:	pop    es
  41527e:	(bad)
  415282:	nop
  415283:	addr16 pop edi
  415285:	xlat   BYTE PTR ds:[ebx]
  415286:	rcl    DWORD PTR [ebx+0x2d],cl
  415289:	(bad)
  41528c:	jo     0x41527d
  41528e:	mov    es,WORD PTR [esi-0x4c]
  415291:	push   ds
  415292:	mov    ebx,0x570dda42
  415297:	repnz mov WORD PTR [edi+0x38],gs
  41529b:	mov    ecx,0xfa180408
  4152a0:	pushf  
  4152a1:	idiv   BYTE PTR [ecx-0x5f]
  4152a4:	inc    edi
  4152a5:	sbb    bl,0xc8
  4152a8:	mov    BYTE PTR [edx],bl
  4152aa:	scas   eax,DWORD PTR es:[edi]
  4152ab:	jecxz  0x415317
  4152ad:	cmp    cl,BYTE PTR [esi+0x13]
  4152b0:	outs   dx,BYTE PTR ds:[esi]
  4152b1:	pop    ss
  4152b2:	adc    esi,esp
  4152b4:	fstp   st(4)
  4152b6:	stos   DWORD PTR es:[edi],eax
  4152b7:	jg     0x41532d
  4152b9:	add    DWORD PTR [ebp-0x13],edx
  4152bc:	add    cl,ah
  4152be:	inc    edx
  4152bf:	mov    ds:0xcf53d638,eax
  4152c4:	adc    ebx,DWORD PTR [eax-0x74]
  4152c7:	retf   0x146f
  4152ca:	fwait
  4152cb:	dec    ebx
  4152cc:	inc    edx
  4152cd:	imul   edx,ebp,0x45
  4152d0:	mov    dl,0x11
  4152d2:	sar    DWORD PTR [ecx],0x5d
  4152d5:	pushf  
  4152d6:	or     al,0xec
  4152d8:	push   eax
  4152d9:	push   esp
  4152da:	inc    ebp
  4152db:	aaa    
  4152dc:	xor    eax,0x4252c026
  4152e1:	add    BYTE PTR ds:0x3e127788,cl
  4152e7:	(bad)  
  4152e8:	mov    ebx,0xfbec2631
  4152ed:	xchg   edx,eax
  4152ee:	call   0xeabc4bd7
  4152f3:	call   0x89f73b3b
  4152f8:	sub    ebp,DWORD PTR ds:0x9c15891e
  4152fe:	loop   0x41534d
  415300:	icebp  
  415301:	iret   
  415302:	push   ebx
  415303:	mov    ds:0x854fd88a,al
  415308:	xchg   DWORD PTR [eax+0x1347fc23],edx
  41530e:	push   ds
  41530f:	push   ebp
  415310:	pop    esi
  415311:	sbb    ah,bh
  415313:	jg     0x415310
  415315:	xor    al,0xb
  415317:	call   0xa358:0xd1acc15a
  41531e:	xchg   dh,bl
  415320:	sbb    al,0xdd
  415322:	ins    DWORD PTR es:[edi],dx
  415323:	mov    ds:0x6280eb8a,al
  415328:	adc    dl,bl
  41532a:	test   DWORD PTR [ecx+0x3a],edx
  41532d:	or     WORD PTR [ebx-0x65],dx
  415331:	and    cl,BYTE PTR [ecx+esi*8+0x9]
  415335:	mov    ds:0x3b430dd2,al
  41533a:	enter  0x5f54,0x30
  41533e:	stos   DWORD PTR es:[edi],eax
  41533f:	loope  0x4152da
  415341:	mov    ch,0x5a
  415343:	mov    esi,0xcf507f82
  415348:	div    DWORD PTR [edx-0x5faa855c]
  41534e:	jb     0x41531d
  415350:	enter  0xa6c6,0x39
  415354:	mov    ch,0xcc
  415356:	add    ecx,DWORD PTR [ecx-0x1f]
  415359:	mov    dl,0xca
  41535b:	ret    0x7e13
  41535e:	dec    edx
  41535f:	mov    bl,0x31
  415361:	in     al,dx
  415362:	push   ebp
  415363:	jne    0x41534b
  415365:	out    0x99,al
  415367:	jp     0x4153e5
  415369:	add    bh,bh
  41536b:	add    BYTE PTR [ebx+0x42315a4f],0xb6
  415372:	mov    ?,WORD PTR [eax-0x1d]
  415375:	dec    edx
  415376:	mov    bh,0xda
  415378:	adc    DWORD PTR [esi+0x392ab1eb],ebx
  41537e:	mov    dh,0xbc
  415380:	sbb    ch,BYTE PTR [esi+ecx*2]
  415383:	retf   0x8c04
  415386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415387:	dec    esi
  415388:	push   es
  415389:	shr    BYTE PTR ds:0x156dc074,0xa1
  415390:	aaa    
  415391:	inc    eax
  415392:	or     eax,DWORD PTR [esi]
  415394:	hlt    
  415395:	mov    edi,0xe1322c2c
  41539a:	mov    ds:0x212dcca5,eax
  41539f:	retf   0x6a30
  4153a2:	xchg   BYTE PTR [esi+0xb],cl
  4153a5:	inc    edx
  4153a6:	repnz retf 0x18bc
  4153aa:	je     0x415359
  4153ac:	pop    edi
  4153ad:	(bad)  
  4153ae:	dec    ecx
  4153af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b0:	(bad)  
  4153b1:	fistp  DWORD PTR [edx]
  4153b3:	addr16 aas 
  4153b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b6:	lea    edi,[edi+0x2188f8d6]
  4153bc:	sub    eax,0xf93b2f5b
  4153c1:	dec    edx
  4153c2:	pop    ebx
  4153c3:	adc    al,0xf0
  4153c5:	jns    0x41538c
  4153c7:	outs   dx,BYTE PTR ds:[esi]
  4153c8:	mov    edi,0x79c145c1
  4153cd:	pop    es
  4153ce:	das    
  4153cf:	inc    edi
  4153d0:	mov    ch,0x5a
  4153d2:	sbb    ch,BYTE PTR [edi+0x3ffccb45]
  4153d8:	sub    bh,BYTE PTR [ebx]
  4153da:	cmc    
  4153db:	fucom  st(0)
  4153dd:	rcl    DWORD PTR [edx],1
  4153df:	repz adc BYTE PTR gs:[ebp-0x6be87306],dh
  4153e7:	pop    es
  4153e8:	xchg   ecx,eax
  4153e9:	ret    0x2329
  4153ec:	nop
  4153ed:	adc    edx,edx
  4153ef:	push   ecx
  4153f0:	xchg   edi,eax
  4153f1:	inc    eax
  4153f2:	bound  eax,QWORD PTR [ebx+0x68ceb6a1]
  4153f8:	sub    ecx,DWORD PTR [edx+0x25]
  4153fb:	fsubp  st(7),st
  4153fd:	cli    
  4153fe:	test   al,0x5e
  415400:	mov    DWORD PTR [ebx-0x60],ebx
  415403:	xchg   esi,eax
  415404:	clc    
  415405:	sbb    ebp,ecx
  415407:	xchg   esi,eax
  415408:	clc    
  415409:	xchg   esp,eax
  41540a:	aam    0xdf
  41540c:	inc    eax
  41540d:	sbb    DWORD PTR [eax+0x605f1573],ebp
  415413:	in     eax,0x4e
  415415:	adc    BYTE PTR es:[edi-0x54cea1f6],al
  41541c:	xchg   DWORD PTR [esi+0x69],edi
  41541f:	jo     0x415430
  415421:	xor    bh,BYTE PTR [esi+0x3f3f7347]
  415427:	test   dl,bh
  415429:	fisttp QWORD PTR [eax+ebp*2-0x62c5ed8c]
  415430:	adc    BYTE PTR [edi+0x11b0d8a0],ch
  415436:	repnz pop es
  415438:	sahf   
  415439:	arpl   WORD PTR [ebx+0x465dedda],di
  41543f:	mov    gs,WORD PTR [esi]
  415441:	inc    edi
  415442:	call   0xf4c:0xdad05a30
  415449:	inc    esi
  41544a:	inc    edi
  41544b:	dec    al
  41544d:	dec    edi
  41544e:	add    DWORD PTR [ebx-0x1e9dccb5],0xfffffffc
  415455:	mov    dl,0xf8
  415457:	repnz out dx,eax
  415459:	jne    0x41541c
  41545b:	or     eax,DWORD PTR [esi]
  41545d:	pop    esp
  41545e:	sbb    al,0xdd
  415460:	leave  
  415461:	hlt    
  415462:	adc    bh,BYTE PTR [ebp+ebp*1+0x2e]
  415466:	adc    DWORD PTR [edx],ebx
  415468:	mov    ebx,0x88e535f1
  41546d:	shr    DWORD PTR [ebp+0xad17334],0x37
  415474:	mov    WORD PTR [ebx],ds
  415476:	lea    esp,[eax]
  415478:	add    eax,0x85e9171a
  41547d:	sub    dl,BYTE PTR [esi+0x356bae0c]
  415483:	lahf   
  415484:	dec    eax
  415485:	jge    0x415421
  415487:	loop   0x41542c
  415489:	inc    ecx
  41548a:	pop    es
  41548b:	jmp    FWORD PTR [ebx+0x55895b4d]
  415491:	mov    bl,0xd1
  415493:	mov    DWORD PTR [esi],edx
  415495:	mov    ch,0xe2
  415497:	sub    BYTE PTR [edx],dl
  415499:	cmp    eax,0x796498d4
  41549e:	retf   0x8315
  4154a1:	mov    edx,0x93d17399
  4154a6:	jns    0x415435
  4154a8:	add    eax,0xa76d5d55
  4154ad:	jae    0x41544b
  4154af:	jns    0x415433
  4154b1:	iret   
  4154b2:	stos   BYTE PTR es:[edi],al
  4154b3:	sub    eax,DWORD PTR [esi]
  4154b5:	std    
  4154b6:	outs   dx,DWORD PTR ds:[esi]
  4154b7:	shr    DWORD PTR [esi],0x85
  4154ba:	xchg   DWORD PTR [edi+0x1185e4e1],esp
  4154c0:	mov    DWORD PTR [esi-0x60dceef1],edi
  4154c6:	cmp    al,0x76
  4154c8:	shl    BYTE PTR [esi-0x6a],1
  4154cb:	mov    ebx,0x626cd65d
  4154d0:	sti    
  4154d1:	enter  0xe40d,0x90
  4154d5:	loop   0x41554a
  4154d7:	or     al,0xa4
  4154d9:	or     BYTE PTR [eax-0x68],al
  4154dc:	and    eax,0xb73fb5fa
  4154e1:	loopne 0x41551b
  4154e3:	push   es
  4154e4:	push   esi
  4154e5:	mov    ebp,ss
  4154e7:	lea    edi,[ebx+0x2c3a0349]
  4154ed:	imul   ecx,DWORD PTR gs:[esi-0x47],0x42
  4154f2:	sub    al,0x20
  4154f4:	fadd   QWORD PTR [eax-0x77e7e577]
  4154fa:	das    
  4154fb:	xor    al,0x99
  4154fd:	and    eax,0xa52e33b6
  415502:	cmp    DWORD PTR [edx],0xfe0f8d09
  415508:	or     edx,DWORD PTR [edx+0x79]
  41550b:	scas   al,BYTE PTR es:[edi]
  41550c:	in     eax,dx
  41550d:	dec    ebp
  41550e:	pop    ebp
  41550f:	push   esi
  415510:	or     al,0xb9
  415512:	lods   eax,DWORD PTR ds:[esi]
  415513:	out    dx,al
  415514:	push   ecx
  415515:	imul   eax,DWORD PTR [edx-0x72a9bdec],0x46
  41551c:	cmp    DWORD PTR [edx],eax
  41551e:	dec    ebp
  41551f:	std    
  415520:	je     0x41556d
  415522:	push   cs
  415523:	call   0x39c9:0x71293421
  41552a:	mov    bl,0xca
  41552c:	aam    0xcf
  41552e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552f:	mov    ecx,ecx
  415531:	add    eax,0xea9d24a6
  415536:	scas   al,BYTE PTR es:[edi]
  415537:	lea    ebp,[edx+ebx*4-0x28ccd01e]
  41553e:	pop    edi
  41553f:	fst    DWORD PTR [edx-0x726c6b90]
  415545:	rcr    esi,0xea
  415548:	mov    esp,DWORD PTR [ecx+0x3f]
  41554b:	adc    al,bh
  41554d:	jb     0x415503
  41554f:	test   BYTE PTR [eax+0x34988c98],dl
  415555:	add    al,0x81
  415557:	sub    DWORD PTR [ebp+0x75],edi
  41555a:	jmp    0x5e48:0x2ed8364d
  415561:	push   0x1f
  415563:	cmp    BYTE PTR [ecx-0x36],dh
  415566:	retf   
  415567:	daa    
  415568:	imul   eax,DWORD PTR [ebx+0x18dd26ac],0x5551a813
  415572:	adc    BYTE PTR [esi-0x7aeb81a0],cl
  415578:	pop    edi
  415579:	lds    ecx,FWORD PTR [esi-0x66]
  41557c:	jp     0x41557c
  41557e:	push   ecx
  41557f:	ficom  WORD PTR [ecx+ebp*8]
  415582:	in     al,0x46
  415584:	stos   DWORD PTR es:[edi],eax
  415585:	test   BYTE PTR [edi],al
  415587:	sbb    ecx,edi
  415589:	jecxz  0x415574
  41558b:	cmc    
  41558c:	es pop es
  41558e:	mov    BYTE PTR [ebp-0x56],al
  415591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415592:	out    0x4a,al
  415594:	cmp    al,0x96
  415596:	mov    ds,edx
  415598:	es (bad) 
  41559a:	pushf  
  41559b:	sub    ebx,DWORD PTR [eax]
  41559d:	adc    BYTE PTR [esi],0x6
  4155a0:	and    BYTE PTR [ebx],al
  4155a2:	jmp    0x415615
  4155a4:	jmp    0x19f9a964
  4155a9:	addr16 and eax,0x285209e8
  4155af:	loop   0x415581
  4155b1:	jo     0x415573
  4155b3:	cmc    
  4155b4:	in     al,dx
  4155b5:	imul   eax,DWORD PTR [edi],0x18
  4155b8:	fwait
  4155b9:	in     al,0x5f
  4155bb:	ss lock inc ebx
  4155be:	push   ss
  4155bf:	add    BYTE PTR [esp+edi*1],bh
  4155c2:	aad    0x93
  4155c4:	clc    
  4155c5:	push   edi
  4155c6:	or     edi,DWORD PTR [edi]
  4155c8:	dec    esi
  4155c9:	and    ah,BYTE PTR ds:0x7281fc12
  4155cf:	dec    ebp
  4155d0:	ins    DWORD PTR es:[edi],dx
  4155d1:	adc    ebp,0x6c
  4155d4:	inc    ebp
  4155d5:	jmp    0x9cb36458
  4155da:	adc    eax,0xc2d9e45b
  4155df:	add    BYTE PTR ds:0xe0f64afb,0xef
  4155e6:	add    al,BYTE PTR [eax-0x7c]
  4155e9:	mov    ebp,DWORD PTR [esi]
  4155eb:	add    DWORD PTR [ebp-0x76],esi
  4155ee:	jb     0x415636
  4155f0:	test   al,0x43
  4155f2:	int3   
  4155f3:	scas   eax,DWORD PTR es:[edi]
  4155f4:	push   edi
  4155f5:	daa    
  4155f6:	pop    esp
  4155f7:	loopne 0x415595
  4155f9:	dec    ebp
  4155fa:	cdq    
  4155fb:	jmp    0x4155f4
  4155fd:	inc    esi
  4155fe:	arpl   WORD PTR [edx],sp
  415600:	cmc    
  415601:	add    DWORD PTR [edi+0x34f3bf40],ebp
  415607:	loopne 0x4155de
  415609:	and    ah,bl
  41560b:	xlat   BYTE PTR ds:[ebx]
  41560c:	aam    0x0
  41560e:	or     BYTE PTR [edx-0x61],dh
  415611:	repz in al,0x8
  415614:	js     0x41567c
  415616:	cld    
  415617:	or     edx,ebp
  415619:	adc    esp,DWORD PTR [edx-0x6c]
  41561c:	call   DWORD PTR [ebp-0x4e]
  41561f:	xchg   ebx,eax
  415620:	pop    edx
  415621:	je     0x415610
  415623:	dec    eax
  415624:	hlt    
  415625:	cmp    ah,BYTE PTR ds:0x7f88f761
  41562b:	lock mov ?,WORD PTR [ebx-0x46]
  41562f:	jg     0x4155b7
  415631:	in     eax,dx
  415632:	dec    ebp
  415633:	jmp    0x40ec06ec
  415638:	pushf  
  415639:	mov    bl,0xed
  41563b:	mov    edx,ss
  41563d:	into   
  41563e:	test   eax,0xddf22f97
  415643:	outs   dx,BYTE PTR ds:[esi]
  415644:	add    eax,0x767bfea6
  415649:	lods   eax,DWORD PTR ds:[esi]
  41564a:	and    cl,BYTE PTR [ebx+0x42a2db78]
  415650:	bound  ebx,QWORD PTR [ecx]
  415652:	aaa    
  415653:	sub    eax,0x1c53369c
  415658:	xor    dh,BYTE PTR [ebx+0x199f6060]
  41565e:	mov    bl,0xdc
  415660:	add    DWORD PTR [esp+ebp*1+0x5d],ebx
  415664:	(bad)  
  415666:	shl    DWORD PTR [ecx],cl
  415668:	nop
  415669:	and    al,bh
  41566b:	push   0xffffff82
  41566d:	(bad)  
  41566e:	xor    esi,edx
  415670:	add    al,0xd5
  415672:	mov    esp,DWORD PTR [esi-0x20]
  415675:	sub    edi,DWORD PTR [esp+edi*8+0x5e]
  415679:	inc    ecx
  41567a:	mov    bl,0x66
  41567c:	mov    esp,0x2af5951c
  415681:	imul   eax,DWORD PTR [ebp-0x62],0x18
  415685:	mov    edi,0x8f5b5f71
  41568a:	iret   
  41568b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41568c:	cmp    al,0xf5
  41568e:	pop    ebp
  41568f:	in     eax,0x54
  415691:	in     al,0x2a
  415693:	scas   al,BYTE PTR es:[edi]
  415694:	daa    
  415695:	stos   DWORD PTR es:[edi],eax
  415696:	retf   0x66f0
  415699:	mov    al,0x23
  41569b:	cli    
  41569c:	sbb    bl,0x96
  41569f:	test   eax,0xd35405da
  4156a4:	ja     0x415720
  4156a6:	in     eax,dx
  4156a7:	ror    BYTE PTR [ebp+0x3359fe12],1
  4156ad:	xchg   esp,eax
  4156ae:	adc    al,0x5b
  4156b0:	xor    dh,BYTE PTR es:[edx-0x7da8d68b]
  4156b7:	ins    DWORD PTR es:[edi],dx
  4156b8:	sub    esi,esp
  4156ba:	mov    cl,0x60
  4156bc:	(bad)  [ebx]
  4156be:	les    ebx,FWORD PTR [edx+ebx*1+0x60e21cfd]
  4156c5:	xor    al,0x38
  4156c7:	xchg   ecx,eax
  4156c8:	jg     0x415722
  4156ca:	lahf   
  4156cb:	dec    ecx
  4156cc:	not    DWORD PTR [esi]
  4156ce:	aad    0xfc
  4156d0:	lds    ebp,FWORD PTR [ecx+eax*2]
  4156d3:	aaa    
  4156d4:	dec    ebp
  4156d5:	and    ch,BYTE PTR [ebx+ebx*1-0x206496ec]
  4156dc:	iret   
  4156dd:	adc    DWORD PTR [ebp+0x5bf67b1a],0x46081f54
  4156e7:	adc    bh,BYTE PTR [ebx-0xf]
  4156ea:	dec    ecx
  4156eb:	mov    al,0x73
  4156ed:	xchg   ecx,eax
  4156ee:	stc    
  4156ef:	xor    eax,0x73632a8a
  4156f4:	xor    eax,0xe199223
  4156f9:	das    
  4156fa:	es out dx,eax
  4156fc:	mov    esp,0x94e9f448
  415701:	xchg   esp,eax
  415702:	aam    0x9a
  415704:	xor    al,0x14
  415706:	je     0x415701
  415708:	clc    
  415709:	adc    DWORD PTR [edi],ebp
  41570b:	out    0x5e,al
  41570d:	je     0x4156e0
  41570f:	cdq    
  415710:	aaa    
  415711:	scas   al,BYTE PTR es:[edi]
  415712:	ins    BYTE PTR es:[edi],dx
  415713:	mov    cl,0x99
  415715:	pop    ds
  415716:	ror    BYTE PTR [edi+0x32],1
  415719:	xchg   ebx,eax
  41571a:	and    dl,cl
  41571c:	(bad)  
  41571d:	scas   al,BYTE PTR es:[edi]
  41571e:	jno    0x4156f1
  415720:	xchg   esi,eax
  415721:	sub    BYTE PTR [ecx-0x13],dh
  415724:	(bad)  
  415726:	int    0xae
  415728:	push   esi
  415729:	mov    dh,0xe0
  41572b:	sbb    al,0x8a
  41572d:	in     eax,dx
  41572e:	into   
  41572f:	int    0x8d
  415731:	xchg   esp,eax
  415732:	mov    esp,0x73430e53
  415737:	int3   
  415738:	jl     0x415762
  41573a:	jle    0x415707
  41573c:	rcl    BYTE PTR [esi],cl
  41573e:	mov    edi,0xc6f4d191
  415743:	jge    0x41574e
  415745:	cli    
  415746:	mov    edi,0xdef20adf
  41574b:	xor    eax,0x77ec3c6a
  415750:	inc    edx
  415751:	jle    0x4156dd
  415753:	mov    bh,0xa1
  415755:	mov    ebx,ds
  415757:	stc    
  415758:	jae    0x415751
  41575a:	out    0x22,al
  41575c:	test   al,0xc2
  41575e:	mov    eax,DWORD PTR [ecx]
  415760:	repz mov al,ds:0x3913431a
  415766:	sbb    BYTE PTR cs:[ebx-0x56],bl
  41576a:	and    BYTE PTR [edi+eax*8+0x46],bh
  41576e:	imul   esi,DWORD PTR ds:0xa0435f09,0xd5a24ac7
  415778:	push   edx
  415779:	popa   
  41577a:	daa    
  41577b:	(bad)  
  41577c:	js     0x4157e5
  41577e:	mov    ah,0x15
  415780:	call   0xe38a02d
  415785:	pop    ss
  415786:	ds inc edi
  415788:	arpl   WORD PTR [ebx],dx
  41578a:	dec    edx
  41578b:	fs sbb dh,dl
  41578e:	and    DWORD PTR [eax+0x56af06a4],esp
  415794:	jb     0x41580c
  415796:	addr16 hlt 
  415798:	retf   0x10de
  41579b:	sub    BYTE PTR [edx+0x6c],bl
  41579e:	push   esp
  41579f:	add    BYTE PTR [eax+esi*2+0x4],dh
  4157a3:	push   eax
  4157a4:	jnp    0x415802
  4157a6:	inc    esi
  4157a7:	adc    DWORD PTR [ebp+0x343f11eb],eax
  4157ad:	lock or eax,0xb9da8331
  4157b3:	jns    0x41574a
  4157b5:	xor    eax,0x64974fff
  4157ba:	lds    esp,FWORD PTR [edx+ebp*4+0x4]
  4157be:	cdq    
  4157bf:	push   ebx
  4157c0:	outs   dx,DWORD PTR ds:[esi]
  4157c1:	mov    esp,0xb2822b53
  4157c6:	push   ebx
  4157c7:	fs rcr ch,0xc7
  4157cb:	out    0xd2,al
  4157cd:	test   BYTE PTR [ebp-0x3a],0xf1
  4157d1:	(bad)  
  4157d2:	je     0x415759
  4157d4:	sub    eax,esp
  4157d6:	out    0x82,eax
  4157d8:	(bad)  [ebp-0x55]
  4157db:	cmc    
  4157dc:	sbb    dh,BYTE PTR [esi-0x34]
  4157df:	jo     0x4157df
  4157e1:	sti    
  4157e2:	pusha  
  4157e3:	mov    eax,0xfde8cc6
  4157e8:	retf   
  4157e9:	pop    eax
  4157ea:	jl     0x4157ae
  4157ec:	cmp    edx,DWORD PTR [edx]
  4157ee:	jo     0x415864
  4157f0:	cmp    al,BYTE PTR [esi]
  4157f2:	cmp    ah,BYTE PTR [esi-0x7a291cd3]
  4157f8:	sub    bl,bl
  4157fa:	aad    0x3
  4157fc:	scas   eax,DWORD PTR es:[edi]
  4157fd:	xchg   ebp,eax
  4157fe:	btr    DWORD PTR [eax],eax
  415801:	call   0xc136:0x7392d2d2
  415808:	imul   ecx,DWORD PTR [edx-0x7601b03f],0x37
  41580f:	pusha  
  415810:	gs push 0xffffff81
  415813:	sub    al,ch
  415815:	cmovbe esi,DWORD PTR [ebx-0x36]
  415819:	jbe    0x41583a
  41581b:	push   edx
  41581c:	xchg   esp,eax
  41581d:	inc    ecx
  41581e:	or     DWORD PTR [edx+0x404f02e9],eax
  415824:	sbb    BYTE PTR [esi-0x73],ah
  415827:	scas   al,BYTE PTR es:[edi]
  415828:	ret    0xc78c
  41582b:	into   
  41582c:	pop    es
  41582d:	pop    esp
  41582e:	sbb    al,0x6b
  415830:	mov    ds:0x6716e03a,al
  415835:	mov    esp,0x62694231
  41583a:	xchg   DWORD PTR [ecx],ecx
  41583c:	xchg   ecx,eax
  41583d:	jmp    0x863f:0xaf06345
  415844:	les    edx,FWORD PTR [ecx]
  415846:	jne    0x41585f
  415848:	sub    eax,0x4f65b509
  41584d:	iret   
  41584e:	mov    ds:0x8714f970,eax
  415853:	mov    eax,0x74de2a31
  415858:	sahf   
  415859:	dec    esp
  41585a:	(bad)  
  41585b:	sti    
  41585c:	jecxz  0x4157f7
  41585e:	mov    ah,0x94
  415860:	dec    ebx
  415861:	test   BYTE PTR [ebp-0x3d],bl
  415864:	loope  0x415834
  415866:	lods   al,BYTE PTR ds:[esi]
  415867:	inc    ecx
  415868:	sub    BYTE PTR [ebp+0x7f],0x64
  41586c:	ja     0x4158eb
  41586e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586f:	mov    esp,0xec7bdfc7
  415874:	mov    bl,0x64
  415876:	scas   eax,DWORD PTR es:[edi]
  415877:	(bad)  
  415879:	cmp    al,BYTE PTR [edx]
  41587b:	(bad)  
  41587c:	pop    ss
  41587d:	and    ebp,DWORD PTR [edx+0x14]
  415880:	pop    eax
  415881:	jne    0x415825
  415883:	mov    ds:0xe8f31ca5,eax
  415888:	pmaxub mm4,mm3
  41588b:	in     al,0x9b
  41588d:	cld    
  41588e:	mov    eax,0x49ed8494
  415893:	popa   
  415894:	out    dx,eax
  415895:	std    
  415896:	and    dh,bh
  415898:	loopne 0x4158dc
  41589a:	push   0xffffff9a
  41589c:	fisttp QWORD PTR [esi-0x505547ab]
  4158a2:	enter  0x7bd9,0x74
  4158a6:	std    
  4158a7:	sub    ecx,eax
  4158a9:	xor    bl,BYTE PTR gs:[ecx+ebx*4-0x3729d4be]
  4158b1:	dec    ecx
  4158b2:	js     0x4158f2
  4158b4:	out    0x94,al
  4158b6:	cdq    
  4158b7:	add    BYTE PTR [ebx+0x6a],0x47
  4158bb:	sub    al,BYTE PTR [edi]
  4158bd:	test   DWORD PTR [ebx-0x17],ecx
  4158c0:	dec    edx
  4158c1:	push   cs
  4158c2:	outs   dx,BYTE PTR ds:[esi]
  4158c3:	sub    al,0x55
  4158c5:	adc    al,BYTE PTR [edi+0x3b7c7482]
  4158cb:	cmp    eax,DWORD PTR [ebp+0x11]
  4158ce:	test   al,0xa4
  4158d0:	xor    ah,BYTE PTR [edi+0x2b]
  4158d3:	dec    ebp
  4158d4:	jae    0x415877
  4158d6:	loopne 0x41585b
  4158d8:	outs   dx,DWORD PTR ds:[esi]
  4158d9:	xlat   BYTE PTR ds:[ebx]
  4158da:	add    al,0x98
  4158dc:	mov    edx,DWORD PTR [edi]
  4158de:	mov    DWORD PTR [ecx],esp
  4158e0:	mov    bh,0x42
  4158e2:	sbb    DWORD PTR [edx-0x36],ebp
  4158e5:	dec    edi
  4158e6:	ja     0x4158fe
  4158e8:	xchg   DWORD PTR [esi+0x62],ebx
  4158eb:	enter  0x3e08,0xfc
  4158ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158f0:	int    0x41
  4158f2:	push   ebx
  4158f3:	sub    eax,0x8fc43ea9
  4158f8:	cs std 
  4158fa:	rol    DWORD PTR [eax+0x35],cl
  4158fd:	sahf   
  4158fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ff:	rcl    BYTE PTR [edx+0x5ffe3188],cl
  415905:	adc    DWORD PTR [eax+0x2e],ebx
  415908:	push   0xffffffaa
  41590a:	icebp  
  41590b:	inc    edi
  41590c:	cmp    al,0x5
  41590e:	call   0x912fc245
  415913:	loop   0x415978
  415915:	adc    BYTE PTR ds:0x55bc1294,0x32
  41591c:	jno    0x415981
  41591e:	mov    bl,0x35
  415920:	push   esp
  415921:	shl    dh,1
  415923:	aad    0xf9
  415925:	(bad)  
  415926:	outs   dx,DWORD PTR ds:[esi]
  415927:	es push ebp
  415929:	sbb    DWORD PTR [eax-0x41],0xffffffab
  41592d:	dec    ebx
  41592e:	(bad)  
  41592f:	stos   DWORD PTR es:[edi],eax
  415930:	aas    
  415931:	dec    ebx
  415932:	fdiv   DWORD PTR [eax]
  415934:	pop    edx
  415935:	push   eax
  415936:	push   es
  415937:	fsubr  QWORD PTR [ebp+0x27]
  41593a:	ror    DWORD PTR [edi],0xd1
  41593d:	xchg   ebx,eax
  41593e:	mov    ch,0xe7
  415940:	mov    BYTE PTR [ecx+0x30],0x63
  415944:	push   0x65
  415946:	shl    BYTE PTR [ecx+0x4cf2841d],0xd0
  41594d:	dec    edx
  41594e:	sbb    al,0x2f
  415950:	adc    BYTE PTR [eax-0x4781ca68],cl
  415956:	fimul  WORD PTR [ebp-0x4d23be89]
  41595c:	jmp    0x205d:0x7bd57366
  415963:	lock add al,0x39
  415966:	icebp  
  415967:	jl     0x415913
  415969:	mov    es,edi
  41596b:	add    eax,0xd5d23f48
  415970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415971:	add    ebp,DWORD PTR ds:0x84ca74d2
  415977:	fs cdq 
  415979:	or     DWORD PTR [ecx+eax*2-0x20],esp
  41597d:	jmp    0xec958c96
  415982:	add    ebp,ebp
  415984:	shl    BYTE PTR [ebx],1
  415986:	pop    es
  415987:	fdivr  QWORD PTR [edi+ebp*8]
  41598a:	add    dh,BYTE PTR [edx+edi*2]
  41598d:	jno    0x415938
  41598f:	lea    esp,[esi+0x6d]
  415992:	xchg   ecx,eax
  415993:	cs rcr eax,0xe8
  415997:	push   ecx
  415998:	xlat   BYTE PTR ds:[ebx]
  415999:	cmp    dl,BYTE PTR [ebp+0x6396c333]
  41599f:	into   
  4159a0:	xchg   esp,eax
  4159a1:	stc    
  4159a2:	mov    al,ds:0xc0021486
  4159a7:	mov    edi,0xd53772a6
  4159ac:	das    
  4159ad:	cli    
  4159ae:	cmp    BYTE PTR [ebx+0x77],cl
  4159b1:	icebp  
  4159b2:	adc    eax,0x3e025600
  4159b7:	xchg   edi,eax
  4159b8:	pop    ebx
  4159b9:	push   ds
  4159ba:	hlt    
  4159bb:	in     eax,dx
  4159bc:	or     ch,BYTE PTR [edi-0x6561a268]
  4159c2:	sub    ebp,ebp
  4159c4:	xchg   DWORD PTR [eax+0xf],esp
  4159c7:	ret    
  4159c8:	dec    esp
  4159c9:	and    al,0x66
  4159cb:	inc    ecx
  4159cc:	out    dx,eax
  4159cd:	pop    ss
  4159ce:	add    DWORD PTR [eax-0x29],edx
  4159d1:	js     0x415963
  4159d3:	mov    edi,0xd3b2678a
  4159d8:	lods   al,BYTE PTR ds:[esi]
  4159d9:	mov    al,ds:0x1f851e6a
  4159de:	js     0x41599a
  4159e0:	icebp  
  4159e1:	pop    eax
  4159e2:	lea    edx,[ecx+0x2c]
  4159e5:	adc    dl,dl
  4159e7:	shl    ecx,1
  4159e9:	ja     0x415a50
  4159eb:	data16 jno 0x4159c7
  4159ee:	arpl   WORD PTR [edi+0x6edcaefb],bp
  4159f4:	cmp    dl,BYTE PTR [edx-0x3a]
  4159f7:	cmp    DWORD PTR [edi-0x1],ecx
  4159fa:	ret    0x5970
  4159fd:	dec    ebp
  4159fe:	clc    
  4159ff:	or     dl,BYTE PTR [ebx+0x5d]
  415a02:	data16 clc 
  415a04:	jge    0x4159c6
  415a06:	(bad)  
  415a08:	xor    eax,0x716b98e5
  415a0d:	(bad)  
  415a0e:	cld    
  415a0f:	call   0x63a4:0x7bcbeb0e
  415a16:	shr    BYTE PTR ds:0x6eb1b806,1
  415a1c:	pop    ecx
  415a1d:	repz dec ecx
  415a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a20:	jmp    0x4159b1
  415a22:	cld    
  415a23:	pop    ds
  415a24:	scas   al,BYTE PTR es:[edi]
  415a25:	sub    al,0xa8
  415a27:	xchg   DWORD PTR [eax-0xa],esi
  415a2a:	repz sar BYTE PTR [eax+0x27],1
  415a2e:	mov    ebp,0x544e0dc0
  415a33:	dec    edx
  415a34:	lock shl BYTE PTR [eax+esi*2+0x17],1
  415a39:	push   0x143746e5
  415a3e:	ret    0x4f3b
  415a41:	inc    esi
  415a42:	pusha  
  415a43:	mov    ch,0xbd
  415a45:	push   ss
  415a46:	and    eax,0xdc31eed
  415a4b:	stos   DWORD PTR es:[edi],eax
  415a4c:	mov    ebx,DWORD PTR [eax+ecx*1]
  415a4f:	call   0x679c6ba7
  415a54:	jmp    0x4d6681b9
  415a59:	out    dx,eax
  415a5a:	jnp    0x415a6f
  415a5c:	sub    eax,0x76780087
  415a61:	pop    ds
  415a62:	std    
  415a63:	pop    ecx
  415a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a65:	adc    DWORD PTR [ebx+0x5933cd60],esp
  415a6b:	imul   ebp,DWORD PTR [edx],0xffffff82
  415a6e:	mov    cl,0x4d
  415a70:	xor    DWORD PTR [eax+0x7e927f5c],ecx
  415a76:	stc    
  415a77:	mov    eax,DWORD PTR [ecx+eax*4]
  415a7a:	inc    eax
  415a7b:	adc    eax,0x2c2435fa
  415a80:	xchg   edx,eax
  415a81:	test   DWORD PTR [ecx],0x4e5c92d3
  415a87:	repz adc eax,0xda8b441a
  415a8d:	iret   
  415a8e:	dec    eax
  415a8f:	inc    BYTE PTR [ebp+0xb]
  415a92:	sbb    ebx,DWORD PTR [ebp+0x2c]
  415a95:	jp     0x415a9e
  415a97:	out    0xb2,al
  415a99:	push   ecx
  415a9a:	adc    edx,DWORD PTR [edi+0x5c]
  415a9d:	pop    ebx
  415a9e:	mov    eax,0x7249f0d8
  415aa3:	loopne 0x415aac
  415aa5:	(bad)  
  415aa6:	imul   edx,DWORD PTR [esi+0x78],0xfffffffe
  415aaa:	dec    ebx
  415aab:	sar    BYTE PTR [eax],cl
  415aad:	mov    al,0x93
  415aaf:	cmc    
  415ab0:	inc    eax
  415ab1:	cmp    eax,0x4a155122
  415ab6:	sub    eax,0xdac96b6f
  415abb:	mov    eax,0x4f400f74
  415ac0:	pop    eax
  415ac1:	popf   
  415ac2:	mov    DWORD PTR [ecx+0x4971e071],edi
  415ac8:	mov    BYTE PTR [edi],0xe3
  415acb:	pop    edi
  415acc:	shl    DWORD PTR [ebp-0x60],0x20
  415ad0:	sbb    BYTE PTR [ebx-0x533102bf],ah
  415ad6:	shl    DWORD PTR [edi-0x1d7ddd0d],cl
  415adc:	mov    cl,0xa0
  415ade:	out    dx,eax
  415adf:	rol    BYTE PTR [ecx-0x4edb9185],1
  415ae5:	jbe    0x415a89
  415ae7:	jmp    0x27d3b2a5
  415aec:	jae    0x415ab1
  415aee:	repz sbb DWORD PTR [edi-0x5ab285ed],edi
  415af5:	les    eax,FWORD PTR [edi+ebx*4+0x1be29bf9]
  415afc:	mov    al,ds:0x4b6af390
  415b01:	and    edi,DWORD PTR [esi+esi*1]
  415b04:	ins    BYTE PTR es:[edi],dx
  415b05:	add    DWORD PTR [ebx],0x72
  415b08:	(bad)  
  415b09:	popf   
  415b0a:	imul   esp,DWORD PTR [esi+0x76],0x5
  415b0e:	shld   edx,edx,cl
  415b11:	out    dx,al
  415b12:	mov    esi,DWORD PTR [edi]
  415b14:	(bad)  
  415b15:	cld    
  415b16:	xchg   edi,eax
  415b17:	rcr    DWORD PTR [edx+0x32beac2e],cl
  415b1d:	inc    edx
  415b1e:	xor    BYTE PTR [edx-0x5153088e],dl
  415b24:	in     al,dx
  415b25:	sahf   
  415b26:	icebp  
  415b27:	mov    bh,0xc
  415b29:	xor    BYTE PTR [edx],0x1c
  415b2c:	sahf   
  415b2d:	loopne 0x415b2c
  415b2f:	mov    eax,0x77d03764
  415b34:	push   cs
  415b35:	mov    dl,0xd5
  415b37:	xchg   ebp,eax
  415b38:	xor    al,0xe4
  415b3a:	adc    ebp,DWORD PTR [esi]
  415b3c:	enter  0x3ebe,0xc1
  415b40:	out    dx,eax
  415b41:	mov    ebp,DWORD PTR [edx-0x51]
  415b44:	cmp    eax,edi
  415b46:	jmp    0x64f1d65e
  415b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4c:	jbe    0x415af4
  415b4e:	adc    BYTE PTR [edi],dl
  415b50:	(bad)  
  415b51:	fcom   QWORD PTR [ecx+0x67e58d7f]
  415b57:	sub    al,0xb8
  415b59:	outs   dx,BYTE PTR ds:[esi]
  415b5a:	imul   esp,DWORD PTR ds:0xe10bca4d,0x313020e
  415b64:	int3   
  415b65:	and    ebp,esi
  415b67:	jle    0x415b6f
  415b69:	push   edi
  415b6a:	iret   
  415b6b:	mov    ecx,0x6d690603
  415b70:	(bad)  
  415b72:	inc    esp
  415b73:	jecxz  0x415b67
  415b75:	data16 std 
  415b77:	sar    BYTE PTR [ebx-0x49f7ef91],0x7f
  415b7e:	inc    ecx
  415b7f:	cmp    eax,0x54173a6e
  415b84:	lods   al,BYTE PTR ds:[esi]
  415b85:	call   0x1b32:0x73256f84
  415b8c:	inc    ecx
  415b8d:	mov    ds:0x97ef9434,eax
  415b92:	mov    ah,0x79
  415b94:	cs dec esi
  415b96:	out    0x56,eax
  415b98:	and    DWORD PTR gs:[edi],edi
  415b9b:	loop   0x415c04
  415b9d:	jge    0x415be0
  415b9f:	xchg   dl,bh
  415ba1:	xor    BYTE PTR [ecx-0x39],cl
  415ba4:	daa    
  415ba5:	not    BYTE PTR [edx+ebx*4-0x3bb56d6b]
  415bac:	xchg   ebx,eax
  415bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bae:	aam    0x79
  415bb0:	imul   ecx,ebx,0xfac9550f
  415bb6:	arpl   WORD PTR [esi-0x5faadc19],ax
  415bbc:	out    0x4e,al
  415bbe:	jle    0x415bb6
  415bc0:	inc    edx
  415bc1:	loope  0x415b74
  415bc3:	push   ds
  415bc4:	enter  0xbc33,0xfd
  415bc8:	or     dl,ah
  415bca:	push   eax
  415bcb:	sub    DWORD PTR [ecx],esp
  415bcd:	cld    
  415bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bcf:	mov    ds:0x5d9fab43,al
  415bd4:	mov    BYTE PTR [edi+0x7a],cl
  415bd7:	(bad)  
  415bd9:	cmp    al,BYTE PTR [ebp+esi*1-0x6498376c]
  415be0:	ret    0x4b71
  415be3:	dec    ebp
  415be4:	std    
  415be5:	xchg   BYTE PTR [edi],al
  415be7:	call   0x9824:0xd9ae1b91
  415bee:	scas   eax,DWORD PTR es:[edi]
  415bef:	inc    ecx
  415bf0:	push   ss
  415bf1:	inc    esi
  415bf2:	push   ebx
  415bf3:	inc    esp
  415bf4:	mov    ah,0x26
  415bf6:	or     BYTE PTR [esi-0x4c],0xf4
  415bfa:	inc    esi
  415bfb:	idiv   BYTE PTR ds:0x32ee0c13
  415c01:	sbb    DWORD PTR [edi],ecx
  415c03:	sub    DWORD PTR [edx-0x7b],0x3ec5740b
  415c0a:	jecxz  0x415b96
  415c0c:	sti    
  415c0d:	ja     0x415c27
  415c0f:	(bad)  
  415c10:	adc    eax,0xac8720de
  415c15:	cs cdq 
  415c17:	sub    ecx,DWORD PTR [edx+ebp*4+0x3a]
  415c1b:	sbb    DWORD PTR [edi+0x58ccd74d],eax
  415c21:	push   es
  415c22:	aaa    
  415c23:	nop
  415c24:	sub    BYTE PTR [eax-0x75],ch
  415c27:	sbb    dl,BYTE PTR [edx+0x21]
  415c2a:	xchg   ebx,eax
  415c2b:	jecxz  0x415c62
  415c2d:	or     esp,DWORD PTR [esi+eax*1-0xa]
  415c31:	les    eax,FWORD PTR [edi+0x469bc705]
  415c37:	scas   eax,DWORD PTR es:[edi]
  415c38:	aam    0x27
  415c3a:	jno    0x415c63
  415c3c:	(bad)  
  415c3d:	(bad)  
  415c3e:	out    0xc,al
  415c40:	fadd   QWORD PTR [ebx-0x71]
  415c43:	or     cl,BYTE PTR [ebp+0xb460b4c]
  415c49:	dec    ebp
  415c4a:	push   cs
  415c4b:	mov    BYTE PTR [edx],bh
  415c4d:	mov    WORD PTR [edx],fs
  415c4f:	retf   
  415c50:	xor    eax,0x1727ec63
  415c55:	rcr    DWORD PTR [ebx-0x64f8f8e8],1
  415c5b:	hlt    
  415c5c:	je     0x415ca6
  415c5e:	cmp    dh,BYTE PTR [ecx-0x43f43b3b]
  415c64:	or     ebp,esi
  415c66:	pusha  
  415c67:	data16 hlt 
  415c69:	push   ss
  415c6a:	aaa    
  415c6b:	dec    esi
  415c6c:	adc    eax,0xd0892f2c
  415c71:	int3   
  415c72:	(bad)  [ebx+ebp*8-0x420f3ac3]
  415c79:	add    esp,edi
  415c7b:	sub    al,ch
  415c7d:	fwait
  415c7e:	dec    ebp
  415c7f:	push   edi
  415c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c81:	pop    eax
  415c82:	ficom  WORD PTR [edi-0x44]
  415c85:	dec    ebx
  415c86:	mov    bh,0x4d
  415c88:	cs loop 0x415cf0
  415c8b:	jle    0x415cde
  415c8d:	stos   BYTE PTR es:[edi],al
  415c8e:	adc    al,0x1d
  415c90:	push   ebx
  415c91:	sub    eax,0x15b75a2e
  415c96:	sbb    BYTE PTR [esi+0x14],cl
  415c99:	jne    0x415c95
  415c9b:	inc    eax
  415c9c:	jno    0x415cf0
  415c9e:	dec    eax
  415c9f:	jne    0x415c90
  415ca1:	jmp    0xf3c1:0x51a040d8
  415ca8:	push   ds
  415ca9:	gs sahf 
  415cab:	aam    0xbe
  415cad:	stos   BYTE PTR es:[edi],al
  415cae:	fsubrp st(0),st
  415cb0:	imul   ebx,DWORD PTR [ebp-0x7fa37f70],0xffffffed
  415cb7:	ds int 0x61
  415cba:	push   edx
  415cbb:	xor    eax,0x7729cb4
  415cc0:	out    dx,eax
  415cc1:	leave  
  415cc2:	ret    
  415cc3:	jl     0x415cc3
  415cc5:	pop    edx
  415cc6:	push   esi
  415cc7:	cmp    eax,0x153f3073
  415ccc:	adc    eax,0x92059a2e
  415cd1:	gs mov bh,0x6f
  415cd4:	xchg   esi,eax
  415cd5:	or     edx,DWORD PTR [eax+edx*4+0x7a]
  415cd9:	mov    WORD PTR [ecx+0x4dc630d8],ss
  415cdf:	fwait
  415ce0:	inc    edx
  415ce1:	cli    
  415ce2:	xor    eax,0x9d9bee84
  415ce7:	not    BYTE PTR [eax]
  415ce9:	jne    0x415d2d
  415ceb:	icebp  
  415cec:	rcl    BYTE PTR [ebp-0x68e3bbc4],cl
  415cf2:	mov    ds:0xbcaa4601,al
  415cf7:	idiv   DWORD PTR [eax+0x73]
  415cfa:	xchg   edi,eax
  415cfb:	(bad)  
  415cfc:	jae    0x415c94
  415cfe:	jbe    0x415c88
  415d00:	stc    
  415d01:	adc    eax,ecx
  415d03:	sbb    BYTE PTR [ebx+edi*8-0x4],cl
  415d07:	shl    DWORD PTR [ecx+0x8],cl
  415d0a:	ret    0x79f1
  415d0d:	sar    DWORD PTR [ebp-0x30ac3cff],0x55
  415d14:	aas    
  415d15:	xchg   esp,eax
  415d16:	jne    0x415cdc
  415d18:	xor    eax,0xf4295b96
  415d1d:	scas   eax,DWORD PTR es:[edi]
  415d1e:	mov    dh,0x5d
  415d20:	mov    bl,BYTE PTR [eax]
  415d22:	leave  
  415d23:	push   cs
  415d24:	or     BYTE PTR ds:[esp+edx*1-0xfb6f83c],ch
  415d2c:	xor    eax,0x57044241
  415d31:	test   DWORD PTR [ebx+0x641cdb98],esi
  415d37:	mov    al,0x82
  415d39:	sub    al,0x98
  415d3b:	add    eax,0x1e15f3b3
  415d40:	sahf   
  415d41:	(bad)  
  415d42:	push   esi
  415d43:	ins    DWORD PTR es:[edi],dx
  415d44:	test   eax,0x83bf4814
  415d49:	js     0x415cf4
  415d4b:	inc    ebp
  415d4c:	popa   
  415d4d:	sbb    al,0xde
  415d4f:	push   eax
  415d50:	or     edi,DWORD PTR [ebx-0x60]
  415d53:	cmp    al,0x82
  415d55:	scas   al,BYTE PTR es:[edi]
  415d56:	fisttp DWORD PTR [ebx]
  415d58:	push   0x69
  415d5a:	int3   
  415d5b:	xchg   esi,eax
  415d5c:	loopne 0x415da6
  415d5e:	xchg   ecx,eax
  415d5f:	ret    0xed44
  415d62:	pop    esi
  415d63:	adc    esi,ebx
  415d65:	sbb    cl,0x19
  415d68:	pop    ds
  415d69:	sub    bh,cl
  415d6b:	scas   al,BYTE PTR es:[edi]
  415d6c:	mov    WORD PTR [edi+0x5285aa7f],gs
  415d72:	xor    dh,BYTE PTR [eax]
  415d74:	lds    edx,FWORD PTR ds:0xce2c33cd
  415d7a:	fwait
  415d7b:	dec    edx
  415d7c:	daa    
  415d7d:	dec    eax
  415d7e:	cdq    
  415d7f:	push   esp
  415d80:	jb     0x415d71
  415d82:	repnz jmp 0x90d0:0x9d8ff8d2
  415d8a:	sub    BYTE PTR [edi+0x36849d50],ah
  415d90:	adc    eax,0x4ddffc8b
  415d95:	push   eax
  415d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d97:	xchg   edx,eax
  415d98:	daa    
  415d99:	pop    ebx
  415d9a:	hlt    
  415d9b:	push   eax
  415d9c:	push   edx
  415d9d:	adc    BYTE PTR [eax],bl
  415d9f:	fld    TBYTE PTR [ebx-0x7e112c56]
  415da5:	out    dx,eax
  415da6:	lods   al,BYTE PTR ds:[esi]
  415da7:	test   BYTE PTR [edx],cl
  415da9:	fild   DWORD PTR [ebx-0x5c]
  415dac:	bound  ebx,QWORD PTR [ebp+0x24]
  415daf:	lahf   
  415db0:	jl     0x415d5e
  415db2:	sti    
  415db3:	and    bl,BYTE PTR [esi-0x67cb221b]
  415db9:	lock xchg ecx,eax
  415dbb:	repz enter 0x3b86,0xdf
  415dc0:	sbb    ah,bl
  415dc2:	dec    ecx
  415dc3:	mov    esp,0x96f1ca64
  415dc8:	pop    ecx
  415dc9:	pop    ecx
  415dca:	test   DWORD PTR [ecx+ebp*8-0xca8d3bc],esp
  415dd1:	int3   
  415dd2:	cmp    edx,DWORD PTR [eax+0x19]
  415dd5:	mov    esi,0xa3dae792
  415dda:	xchg   edx,eax
  415ddb:	dec    ebp
  415ddc:	dec    eax
  415ddd:	hlt    
  415dde:	and    DWORD PTR ds:0x3014d633,esp
  415de4:	enter  0x7c4e,0x95
  415de8:	mov    WORD PTR [edx-0x73c0e8ef],gs
  415dee:	xchg   BYTE PTR [ebx+0x22],cl
  415df1:	in     eax,0xbf
  415df3:	in     eax,dx
  415df4:	pop    esi
  415df5:	push   ds
  415df6:	imul   al
  415df8:	mov    ds:0x4b1a8920,al
  415dfd:	(bad)  
  415dfe:	dec    edi
  415dff:	mov    DWORD PTR [edx-0x711a9ab5],eax
  415e05:	push   esp
  415e06:	inc    ecx
  415e07:	mov    edi,0xe7635b09
  415e0c:	xor    eax,0x2daaf853
  415e11:	retf   0x410f
  415e14:	(bad)  
  415e15:	mov    ebp,0x799405c4
  415e1a:	int3   
  415e1b:	loop   0x415dc1
  415e1d:	push   edx
  415e1e:	or     DWORD PTR [edi+ebx*8+0x19],0x8200a43b
  415e26:	mov    edx,0xcb03a0bd
  415e2b:	loop   0x415dd3
  415e2d:	mov    ecx,0xb9868c83
  415e32:	frstor [ecx-0x6d]
  415e35:	inc    ebx
  415e36:	xchg   ebp,eax
  415e37:	mov    ch,0x2a
  415e39:	iret   
  415e3a:	adc    DWORD PTR [edx],0x8
  415e3d:	popa   
  415e3e:	aaa    
  415e3f:	mov    ebx,0x2a811605
  415e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e45:	stos   DWORD PTR es:[edi],eax
  415e46:	mov    ?,WORD PTR [edx+0x3f]
  415e49:	push   edi
  415e4a:	adc    BYTE PTR [ebx+eax*1-0x2e],ch
  415e4e:	xor    DWORD PTR [eax-0x6152ad01],esi
  415e54:	push   esi
  415e55:	in     al,dx
  415e56:	or     DWORD PTR [edx-0x2e6e54d3],ecx
  415e5c:	int    0xad
  415e5e:	add    ecx,ebp
  415e60:	ins    BYTE PTR es:[edi],dx
  415e61:	mov    bh,0xc6
  415e63:	scas   eax,DWORD PTR es:[edi]
  415e64:	clc    
  415e65:	mov    al,0x3
  415e67:	inc    ecx
  415e68:	pop    edx
  415e69:	ror    BYTE PTR [ecx],0x47
  415e6c:	mov    ds:0xafa86643,eax
  415e71:	in     al,0x15
  415e73:	mov    al,ds:0xd6217d61
  415e78:	push   0x765627ba
  415e7d:	outs   dx,DWORD PTR ds:[esi]
  415e7e:	ss int3 
  415e80:	jmp    0xed4b:0xa13dcb17
  415e87:	es pushf 
  415e89:	dec    ebx
  415e8a:	aas    
  415e8b:	cmc    
  415e8c:	push   cs
  415e8d:	cwde   
  415e8e:	dec    edi
  415e8f:	mov    eax,ds:0x990b62db
  415e94:	dec    ebp
  415e95:	xchg   esi,eax
  415e96:	int    0x31
  415e98:	adc    DWORD PTR [esi+0x42],ebx
  415e9b:	or     eax,0x393028a1
  415ea0:	xor    al,0x53
  415ea2:	sbb    dl,BYTE PTR [ebp-0x35]
  415ea5:	dec    edx
  415ea6:	push   cs
  415ea7:	mov    ds:0xa8268060,eax
  415eac:	mov    edi,0x2f83126d
  415eb1:	push   ss
  415eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb3:	pop    ebp
  415eb4:	mov    ds:0x5a39f263,eax
  415eb9:	ja     0x415ea4
  415ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ebc:	xlat   BYTE PTR ds:[ebx]
  415ebd:	fadd   QWORD PTR [edx]
  415ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec0:	scas   al,BYTE PTR es:[edi]
  415ec1:	cmc    
  415ec2:	pop    ecx
  415ec3:	stos   DWORD PTR es:[edi],eax
  415ec4:	cmp    ch,al
  415ec6:	adc    ah,bh
  415ec8:	shr    BYTE PTR [esi+0x24],0x5e
  415ecc:	add    eax,0xf1ef30b6
  415ed1:	(bad)  
  415ed2:	cmp    eax,0x3140dd01
  415ed7:	scas   eax,DWORD PTR es:[edi]
  415ed8:	cdq    
  415ed9:	ret    
  415eda:	popa   
  415edb:	push   0xfffffff7
  415edd:	aaa    
  415ede:	ficom  DWORD PTR [edx]
  415ee0:	call   0x30892b1f
  415ee5:	das    
  415ee6:	fmul   QWORD PTR [edi-0x461b9e02]
  415eec:	jmp    0x415f46
  415eee:	cs sub al,0xd
  415ef1:	jecxz  0x415f5a
  415ef3:	nop
  415ef4:	sti    
  415ef5:	or     DWORD PTR [esi-0x764c5fc2],0x559e200f
  415eff:	arpl   WORD PTR [edi+0x26],cx
  415f02:	cmp    edi,DWORD PTR ds:0x3a9cdf7e
  415f08:	sti    
  415f09:	cld    
  415f0a:	jnp    0x415eb8
  415f0c:	xchg   esp,eax
  415f0d:	xchg   ebp,eax
  415f0e:	int    0x81
  415f10:	mov    bl,0xad
  415f12:	int    0x2
  415f14:	ins    DWORD PTR es:[edi],dx
  415f15:	dec    ebp
  415f16:	push   ds
  415f17:	popa   
  415f18:	push   esp
  415f19:	sbb    al,0xa
  415f1b:	pop    esi
  415f1c:	jp     0x415ea5
  415f1e:	icebp  
  415f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f20:	pop    edx
  415f21:	sbb    BYTE PTR ds:0x9fdff9ba,0x50
  415f28:	xor    ebp,DWORD PTR [edx]
  415f2a:	ins    BYTE PTR es:[edi],dx
  415f2b:	xchg   edx,eax
  415f2c:	add    edx,0x97e4e35a
  415f32:	mov    ebp,0xcc98dfd7
  415f37:	pusha  
  415f38:	rol    ebp,1
  415f3a:	rcl    BYTE PTR [edi+0x25],cl
  415f3d:	xor    BYTE PTR [esi],bh
  415f3f:	out    dx,eax
  415f40:	out    0x1d,eax
  415f42:	clc    
  415f43:	bswap  edi
  415f45:	adc    BYTE PTR [ecx+0x4e22ac9c],dl
  415f4b:	not    ch
  415f4d:	add    al,0x8e
  415f4f:	lds    edx,FWORD PTR [edx-0x5774086e]
  415f55:	xor    eax,0xd40396
  415f5a:	push   esp
  415f5b:	mov    bh,0x55
  415f5d:	adc    bh,BYTE PTR [eax]
  415f5f:	sbb    DWORD PTR [eax],ebx
  415f61:	in     eax,dx
  415f62:	int3   
  415f63:	in     eax,0x10
  415f65:	mov    esp,0x44f9cd47
  415f6a:	leave  
  415f6b:	bound  ebp,QWORD PTR [ecx+ecx*2+0x6c]
  415f6f:	xchg   ecx,eax
  415f70:	std    
  415f71:	dec    esp
  415f72:	push   ds
  415f73:	imul   edx,ecx,0xffffffc8
  415f76:	add    eax,0xa6e90433
  415f7b:	bnd jge 0x415f83
  415f7e:	cmp    eax,0xdca63c03
  415f83:	push   es
  415f84:	cld    
  415f85:	push   ecx
  415f86:	cwde   
  415f87:	or     eax,0xf0758054
  415f8c:	xor    esi,DWORD PTR [edx]
  415f8e:	or     cl,bl
  415f90:	push   esi
  415f91:	lea    ebp,[edi+0x1ef5a064]
  415f97:	xor    dh,0xfb
  415f9a:	clc    
  415f9b:	xchg   ecx,eax
  415f9c:	xchg   edx,eax
  415f9d:	fwait
  415f9e:	push   es
  415f9f:	sbb    ch,dl
  415fa1:	adc    DWORD PTR [eax],esi
  415fa3:	imul   esp,DWORD PTR [ebp-0x19],0xffffff9c
  415fa7:	jmp    0x7c3:0x496b88a1
  415fae:	jno    0x415f8c
  415fb0:	or     edi,DWORD PTR [edi-0x3f]
  415fb3:	push   cs
  415fb4:	cmp    ecx,DWORD PTR [esi+edx*1+0x63]
  415fb8:	mov    ds:0x89ed3cde,al
  415fbd:	ja     0x416004
  415fbf:	mov    BYTE PTR [edx],0x43
  415fc2:	(bad)  
  415fc3:	jnp    0x415f96
  415fc5:	into   
  415fc6:	lods   eax,DWORD PTR ds:[esi]
  415fc7:	mov    ecx,0x44db9c0
  415fcc:	and    dh,bh
  415fce:	jns    0x416014
  415fd0:	ins    BYTE PTR es:[edi],dx
  415fd1:	adc    dh,BYTE PTR [ecx]
  415fd3:	fstp   TBYTE PTR [ecx+0x4da4a86e]
  415fd9:	mov    eax,DWORD PTR [ecx-0x663d0232]
  415fdf:	dec    esp
  415fe0:	stos   DWORD PTR es:[edi],eax
  415fe1:	lods   al,BYTE PTR ds:[esi]
  415fe2:	push   ebp
  415fe3:	arpl   cx,cx
  415fe5:	outs   dx,BYTE PTR ds:[esi]
  415fe6:	retf   0xb6b6
  415fe9:	jecxz  0x415fde
  415feb:	call   0x9edf:0x74c96a29
  415ff2:	pusha  
  415ff3:	data16 sbb dh,ah
  415ff6:	jno    0x415fcf
  415ff8:	dec    esi
  415ff9:	aaa    
  415ffa:	pop    esp
  415ffb:	or     BYTE PTR [ebp-0x74],ch
  415ffe:	add    DWORD PTR [edx-0x70],0x8f4fc555
  416005:	sub    ch,BYTE PTR [ebx-0x2c225454]
  41600b:	(bad)  
  41600c:	retf   
  41600d:	scas   al,BYTE PTR es:[edi]
  41600e:	sub    al,0xdd
  416010:	ror    ebx,1
  416012:	rcr    DWORD PTR [ebx-0x3ef4e7bd],0x24
  416019:	pusha  
  41601a:	mov    dh,0xad
  41601c:	(bad)  
  41601d:	aas    
  41601e:	dec    esi
  41601f:	cs std 
  416021:	call   0x67b1884d
  416026:	repz inc esp
  416028:	inc    eax
  416029:	sub    al,0xe6
  41602b:	(bad)  
  41602c:	jnp    0x415ff9
  41602e:	jle    0x416062
  416030:	cmp    DWORD PTR [esi-0x8],0x5c
  416034:	mov    ecx,0x3856d25e
  416039:	dec    edi
  41603a:	dec    ebx
  41603b:	pop    eax
  41603c:	fsubr  DWORD PTR [ebx+0x6b]
  41603f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416040:	imul   ebx,DWORD PTR [eax-0x50cd07d0],0x6f643dcf
  41604a:	retf   
  41604b:	(bad)  
  41604e:	cwde   
  41604f:	mov    esp,0x7229ded5
  416054:	je     0x416023
  416056:	mov    bl,0x7c
  416058:	imul   ecx,DWORD PTR [edx-0x5d54c314],0x7c
  41605f:	push   edx
  416060:	jae    0x416002
  416062:	aam    0xf9
  416064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416065:	or     dh,BYTE PTR [ebx+0x7019072b]
  41606b:	in     al,0xb7
  41606d:	fcomi  st,st(2)
  41606f:	dec    ecx
  416070:	ret    0xb93e
  416073:	push   esi
  416074:	(bad)  [ebx]
  416076:	mov    DWORD PTR [edx+eiz*1-0x382001d2],ebx
  41607d:	jmp    0xbebe:0x8de01784
  416084:	push   cs
  416085:	mov    bl,ch
  416087:	ja     0x4160aa
  416089:	push   ss
  41608a:	push   0xe188dd54
  41608f:	mov    WORD PTR [eax+0x77a37fdf],cs
  416095:	out    0x64,al
  416097:	pop    ss
  416098:	addr16 xor eax,esi
  41609b:	(bad)  
  41609c:	mov    ecx,DWORD PTR [eax+ecx*4-0x1a860aed]
  4160a3:	sbb    DWORD PTR [ebp+0x50],ecx
  4160a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a7:	xlat   BYTE PTR ds:[ebx]
  4160a8:	fst    DWORD PTR [eax]
  4160aa:	lods   eax,DWORD PTR ds:[esi]
  4160ab:	jmp    0x4160c3
  4160ad:	scas   eax,DWORD PTR es:[edi]
  4160ae:	mov    ecx,esp
  4160b0:	pop    esp
  4160b1:	mov    esp,DWORD PTR [eax*2-0x18ece67c]
  4160b8:	outs   dx,BYTE PTR ds:[esi]
  4160b9:	fcomp  DWORD PTR [eax-0x38922c9b]
  4160bf:	sahf   
  4160c0:	outs   dx,DWORD PTR ds:[esi]
  4160c1:	mov    ds:0xfaa56d53,eax
  4160c6:	in     eax,dx
  4160c7:	rcr    DWORD PTR [ecx-0x27],cl
  4160ca:	dec    ecx
  4160cb:	cli    
  4160cc:	cld    
  4160cd:	push   eax
  4160ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160cf:	pop    ss
  4160d0:	adc    dl,BYTE PTR [edx-0x2d]
  4160d3:	sbb    DWORD PTR [ecx],esi
  4160d5:	cmp    BYTE PTR [ecx+eiz*1-0x1],cl
  4160d9:	push   ecx
  4160da:	mov    dl,0x8b
  4160dc:	loopne 0x4160c4
  4160de:	or     ebp,ebx
  4160e0:	dec    ecx
  4160e1:	popa   
  4160e2:	mov    ?,WORD PTR [esi-0x48]
  4160e5:	test   BYTE PTR [ebx+ebx*2-0x2f],0xe0
  4160ea:	cmp    ebx,eax
  4160ec:	pop    ebx
  4160ed:	in     eax,0x1a
  4160ef:	cs push es
  4160f1:	add    DWORD PTR [edx+0x6],0x15dea121
  4160f8:	std    
  4160f9:	sbb    BYTE PTR [edx-0x13],0x75
  4160fd:	fwait
  4160fe:	adc    ebx,DWORD PTR [esi]
  416100:	jnp    0x41616b
  416102:	out    dx,al
  416103:	mov    edi,ebx
  416105:	xor    ch,BYTE PTR [ebx+0x50]
  416108:	mov    dl,0xbd
  41610a:	loope  0x416117
  41610c:	jmp    0x416154
  41610e:	cmp    edx,DWORD PTR [ecx-0x284e77af]
  416114:	push   ecx
  416115:	sbb    eax,0x4ec469d1
  41611a:	sub    eax,0xb221b001
  41611f:	mov    dh,0x9d
  416121:	loop   0x41615c
  416123:	sbb    eax,0x27009667
  416128:	popa   
  416129:	adc    al,0x7d
  41612b:	push   cs
  41612c:	enter  0x760e,0x73
  416130:	dec    eax
  416131:	push   edx
  416132:	sti    
  416133:	pop    ds
  416134:	sub    eax,0xee58a4d8
  416139:	ins    DWORD PTR es:[edi],dx
  41613a:	pop    edx
  41613b:	out    dx,al
  41613c:	and    al,0x2c
  41613e:	mov    al,ds:0x580baa16
  416143:	inc    ebx
  416144:	int3   
  416145:	xchg   BYTE PTR [ecx-0x34],bl
  416148:	push   ss
  416149:	mov    al,0xc5
  41614b:	xor    al,0x9f
  41614d:	(bad)  
  41614f:	xor    eax,ebp
  416151:	cld    
  416152:	xor    eax,0x2c405506
  416157:	cmp    eax,0xc72b47b3
  41615c:	cmp    edx,0xe6bc2491
  416162:	adc    BYTE PTR [edx+0x44],ah
  416165:	mov    eax,0x76abbb0a
  41616a:	sub    al,0xa9
  41616c:	xchg   edi,eax
  41616d:	lods   eax,DWORD PTR ds:[esi]
  41616e:	xchg   ebx,eax
  41616f:	mov    bl,0x6a
  416171:	mov    al,0x9e
  416173:	aas    
  416174:	shl    esp,1
  416176:	ds popf 
  416178:	aas    
  416179:	mov    eax,ds:0x56183583
  41617e:	mov    bh,0x28
  416180:	mov    al,ds:0x542ba5ed
  416186:	bound  ebx,QWORD PTR [eax]
  416188:	daa    
  416189:	xchg   esi,eax
  41618a:	adc    eax,0xcb472431
  41618f:	rol    ecx,1
  416191:	mov    eax,0x1d7a38aa
  416196:	or     BYTE PTR [ebp+0x7f0ef822],bl
  41619c:	adc    eax,edi
  41619e:	add    BYTE PTR [ecx-0x67],0x91
  4161a2:	push   ebp
  4161a3:	(bad)  
  4161a5:	jl     0x4161eb
  4161a7:	faddp  st(2),st
  4161a9:	int    0x6a
  4161ab:	add    ecx,DWORD PTR [esi+edx*4]
  4161ae:	push   edi
  4161af:	dec    eax
  4161b0:	mov    bl,0xf3
  4161b2:	iret   
  4161b3:	jl     0x416137
  4161b5:	jmp    0xe161:0x359caed5
  4161bc:	aad    0x48
  4161be:	lock push ebp
  4161c0:	pop    ebp
  4161c1:	or     edx,DWORD PTR [edi+0x9]
  4161c4:	and    BYTE PTR [ebx],dl
  4161c6:	mov    dl,0xf9
  4161c8:	and    bl,cl
  4161ca:	jge    0x41618e
  4161cc:	(bad)  
  4161cd:	xor    al,BYTE PTR [ecx]
  4161cf:	in     al,0xc5
  4161d1:	mov    al,0x85
  4161d3:	mov    al,0xa3
  4161d5:	(bad)  
  4161d6:	or     ecx,DWORD PTR [ebx-0x3a]
  4161d9:	mov    ?,WORD PTR [eax]
  4161db:	aad    0x51
  4161dd:	sbb    eax,0x809afcff
  4161e2:	push   esp
  4161e3:	int3   
  4161e4:	in     eax,0x77
  4161e6:	mov    ecx,0x43f4b10b
  4161eb:	adc    eax,0xa731cf7f
  4161f0:	jnp    0x4161f0
  4161f2:	sar    BYTE PTR [ecx+ebp*2-0x45],1
  4161f6:	sbb    eax,DWORD PTR ds:0xc11f1ccf
  4161fc:	mov    eax,ds:0xeb848ac4
  416201:	push   0xffffffb3
  416203:	mov    DWORD PTR [eax-0x6a],ebx
  416206:	loop   0x41624e
  416208:	test   eax,0xd80aabca
  41620d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620e:	mov    edx,0x6b9f9428
  416213:	mov    eax,0x122bcbc8
  416218:	ins    DWORD PTR es:[edi],dx
  416219:	jl     0x416236
  41621b:	rcr    ebp,cl
  41621d:	les    esp,FWORD PTR [esi+0x50c0809a]
  416223:	or     ch,BYTE PTR [ebp-0x416da787]
  416229:	sar    esp,0x21
  41622c:	jno    0x416234
  41622e:	jle    0x4161ee
  416230:	dec    ebx
  416231:	loop   0x416200
  416233:	jne    0x4161bc
  416235:	mov    eax,ds:0xbef8459e
  41623a:	xchg   esi,eax
  41623b:	ja     0x416200
  41623d:	xchg   esi,eax
  41623e:	jae    0x416201
  416240:	jae    0x4161ed
  416242:	in     al,0x5
  416244:	add    esp,DWORD PTR [ebx+0x4efa916f]
  41624a:	mov    DWORD PTR [bx+si],eax
  41624d:	test   eax,0x1d24e958
  416252:	add    al,0xe
  416254:	scas   al,BYTE PTR es:[edi]
  416255:	jb     0x4162aa
  416257:	dec    edi
  416258:	in     eax,dx
  416259:	push   esi
  41625a:	pusha  
  41625b:	scas   eax,DWORD PTR es:[edi]
  41625c:	clc    
  41625d:	sbb    DWORD PTR [ecx],ebx
  41625f:	cmp    eax,0xbcc46558
  416264:	mov    WORD PTR [eax],ds
  416266:	and    eax,0x6805ad2e
  41626b:	retf   0xa620
  41626e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41626f:	xlat   BYTE PTR ds:[ebx]
  416270:	sub    DWORD PTR [edi+0x4b915b44],ecx
  416276:	mov    edi,0x3b114695
  41627b:	ss xor edi,edi
  41627e:	cmp    BYTE PTR ds:[eax+0x18130f1],al
  416285:	xchg   edx,eax
  416286:	cmp    BYTE PTR [ebp+0x69edbf43],dh
  41628c:	je     0x416214
  41628e:	fnstenvw [edi+0x665694bd]
  416295:	loop   0x41625a
  416297:	dec    ebx
  416298:	xor    ah,dh
  41629a:	push   esp
  41629b:	pushf  
  41629c:	adc    BYTE PTR [ebp+0x77],0x50
  4162a0:	mov    ch,0xf3
  4162a2:	cs call 0x64f628e3
  4162a8:	repnz shr DWORD PTR ds:0xa9a8c847,cl
  4162af:	idiv   al
  4162b1:	scas   eax,DWORD PTR es:[edi]
  4162b2:	aad    0xbd
  4162b4:	mov    WORD PTR [eax],?
  4162b6:	jge    0x416261
  4162b8:	add    edi,edx
  4162ba:	xchg   ebx,eax
  4162bb:	nop
  4162bc:	fmul   st(2),st
  4162be:	in     eax,0x77
  4162c0:	adc    DWORD PTR [ebx],ecx
  4162c2:	in     eax,dx
  4162c3:	(bad)  
  4162c4:	or     edx,DWORD PTR [edx+0x4e2158e0]
  4162ca:	stos   DWORD PTR es:[edi],eax
  4162cb:	xchg   DWORD PTR [edi-0x21],eax
  4162ce:	mov    eax,0x92daa5a7
  4162d3:	psubw  mm7,mm2
  4162d6:	aad    0x7e
  4162d8:	jge    0x41626b
  4162da:	push   0xdaa14ab0
  4162df:	ret    0x3ab7
  4162e2:	stos   DWORD PTR es:[edi],eax
  4162e3:	xor    edi,DWORD PTR [ecx+0x53]
  4162e6:	mov    dh,0x1b
  4162e8:	mov    dh,0xb1
  4162ea:	inc    ebp
  4162eb:	jecxz  0x41636b
  4162ed:	addr16 mov ah,0x96
  4162f0:	out    dx,al
  4162f1:	mov    ch,0x6f
  4162f3:	pop    esp
  4162f4:	add    cl,0xec
  4162f7:	add    esi,esp
  4162f9:	and    ah,BYTE PTR [ecx+0x4fac2726]
  4162ff:	adc    BYTE PTR [ebx],cl
  416301:	pop    esp
  416302:	or     bl,0x59
  416305:	shl    DWORD PTR [edx],0x79
  416308:	xchg   ebp,eax
  416309:	or     BYTE PTR [ecx+edx*1-0x7b],ch
  41630d:	int3   
  41630e:	dec    esi
  41630f:	frstor [edx+0x14]
  416312:	and    esp,ebp
  416314:	xor    eax,0x35d49fc6
  416319:	sub    DWORD PTR [edi-0x8db2f24],eax
  41631f:	jno    0x4162ab
  416321:	ret    0x4be
  416324:	xchg   ebx,eax
  416325:	ss in  al,dx
  416327:	dec    esi
  416328:	adc    edi,DWORD PTR [edi]
  41632a:	and    ebx,DWORD PTR [edi-0x16]
  41632d:	(bad)  
  41632e:	out    0x1f,al
  416330:	mov    ecx,0x10e70576
  416335:	mov    ah,0x57
  416337:	pop    ss
  416338:	cmp    DWORD PTR [eax],ecx
  41633a:	pop    edi
  41633b:	pop    esi
  41633c:	inc    esi
  41633d:	pop    es
  41633e:	(bad)  
  41633f:	mov    ch,0xf4
  416341:	xchg   edx,eax
  416342:	or     edx,DWORD PTR [ebp-0x20]
  416345:	xchg   ebx,eax
  416346:	or     eax,0x6a0ba4ac
  41634b:	push   0xad2f4576
  416350:	pop    edi
  416351:	nop
  416352:	scas   eax,DWORD PTR es:[edi]
  416353:	mov    ebx,0x40af42f1
  416358:	adc    al,0x53
  41635a:	test   eax,0x688a65f2
  41635f:	mov    edi,0xe344463d
  416364:	das    
  416365:	xlat   BYTE PTR ds:[ebx]
  416366:	jecxz  0x41630f
  416368:	outs   dx,BYTE PTR ds:[esi]
  416369:	mov    ebx,0x8e154ca0
  41636e:	or     ebp,esp
  416370:	loop   0x416379
  416372:	push   ecx
  416373:	mov    ch,0x1c
  416375:	inc    esi
  416376:	mov    edx,0x3a6de46f
  41637b:	cs aad 0xc2
  41637e:	xor    ebp,DWORD PTR [ecx-0x36bc4d1a]
  416384:	dec    ecx
  416385:	mov    al,0x1
  416387:	enter  0xb830,0xbe
  41638b:	int    0xe8
  41638d:	mov    cs,WORD PTR [edx]
  41638f:	xchg   esi,eax
  416390:	mov    ebx,0x95528d84
  416395:	pop    ds
  416396:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416398:	lahf   
  416399:	cli    
  41639a:	and    eax,0x38ce21a7
  41639f:	jmp    0xc075:0xa988e0c3
  4163a6:	inc    eax
  4163a7:	and    cl,BYTE PTR [eax-0x2026b77b]
  4163ad:	pop    esp
  4163ae:	in     al,dx
  4163af:	lea    ebx,[ebp-0x3d]
  4163b2:	(bad)  
  4163b4:	in     al,dx
  4163b5:	mov    WORD PTR [edi+0x5c4f3c0c],es
  4163bb:	cdq    
  4163bc:	adc    eax,0x6e2fff07
  4163c1:	cli    
  4163c2:	fst    QWORD PTR [ecx+0x7b]
  4163c5:	and    eax,0x8adb64f
  4163ca:	adc    eax,0xdc660ad
  4163cf:	lods   al,BYTE PTR ds:[esi]
  4163d0:	call   0xd5ca9f5f
  4163d5:	and    bl,ah
  4163d7:	les    ebx,FWORD PTR [esp+ebx*2-0x6]
  4163db:	pop    ecx
  4163dc:	loop   0x416404
  4163de:	cld    
  4163df:	push   esp
  4163e0:	std    
  4163e1:	mov    esi,0x3cbd2d82
  4163e6:	out    0xdc,eax
  4163e8:	push   DWORD PTR [ecx-0x7b]
  4163eb:	stos   BYTE PTR es:[edi],al
  4163ec:	repz sub BYTE PTR [esi],ch
  4163ef:	pop    ebx
  4163f0:	xlat   BYTE PTR ds:[ebx]
  4163f1:	in     eax,0x83
  4163f3:	dec    eax
  4163f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f5:	jl     0x4163c8
  4163f7:	mov    ds:0x9c01f32a,eax
  4163fc:	add    esi,DWORD PTR [ebx+ebp*2-0x6d]
  416400:	call   0x8f99b93f
  416405:	pop    edi
  416406:	xchg   ebp,eax
  416407:	shl    BYTE PTR [esi],0x17
  41640a:	xor    DWORD PTR [ebx-0x15],ebx
  41640d:	sbb    eax,0x869a443c
  416412:	fs loop 0x416473
  416415:	mov    ch,0x43
  416417:	in     al,dx
  416418:	sub    al,0xe5
  41641a:	xor    BYTE PTR [ebp-0x64ea3538],bh
  416420:	out    0x6e,eax
  416422:	loop   0x41648e
  416424:	sti    
  416425:	ret    0x56c5
  416428:	jge    0x416406
  41642a:	sub    al,0xde
  41642c:	xchg   edi,eax
  41642d:	es pop ds
  41642f:	into   
  416430:	aam    0x77
  416432:	clc    
  416433:	cmp    bl,BYTE PTR [edx-0x12]
  416436:	leave  
  416437:	adc    dl,BYTE PTR [esi-0x68dd45b4]
  41643d:	pop    ss
  41643e:	cmp    eax,0xb3b0c6a
  416443:	adc    eax,ecx
  416445:	mov    eax,ds:0x8dbfe463
  41644a:	(bad)  
  41644b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41644c:	loop   0x4163db
  41644e:	xlat   BYTE PTR ds:[ebx]
  41644f:	jecxz  0x416409
  416451:	sub    edx,DWORD PTR [ecx-0x369e9729]
  416457:	outs   dx,DWORD PTR ds:[esi]
  416458:	sub    cl,ah
  41645a:	scas   al,BYTE PTR es:[edi]
  41645b:	loope  0x41643c
  41645d:	(bad)  
  41645e:	push   ebx
  41645f:	and    al,0x6e
  416461:	xchg   DWORD PTR [edi+0x3b],ebp
  416464:	sbb    BYTE PTR [ebx],0x8f
  416467:	in     eax,0x40
  416469:	xor    DWORD PTR [ecx+0x66],eax
  41646c:	fidiv  DWORD PTR ds:0xeda37fff
  416472:	sbb    ah,BYTE PTR [ebp-0x31]
  416475:	rcr    al,0x96
  416478:	out    dx,al
  416479:	sar    DWORD PTR [ecx],cl
  41647b:	fistp  DWORD PTR [ebp+0x6c885dc8]
  416481:	adc    BYTE PTR [edi-0x6c],ah
  416484:	sar    DWORD PTR [edx-0xc],0x5c
  416488:	cmp    dh,BYTE PTR [edi-0x769597a5]
  41648e:	add    DWORD PTR [ecx-0x2da376e9],ecx
  416494:	inc    edx
  416495:	xor    esp,DWORD PTR [ebx-0x46]
  416498:	add    ah,bl
  41649a:	push   edx
  41649b:	jnp    0x4164d1
  41649d:	or     al,0x51
  41649f:	pop    ss
  4164a0:	(bad)  
  4164a1:	fisubr WORD PTR [esi+0x2a]
  4164a4:	xor    DWORD PTR [eax],0x7c
  4164a7:	out    dx,al
  4164a8:	fwait
  4164a9:	test   BYTE PTR [edx],bh
  4164ab:	pop    edi
  4164ac:	push   edx
  4164ad:	push   0x10af4acb
  4164b2:	sar    cl,1
  4164b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b5:	stc    
  4164b6:	ins    BYTE PTR es:[edi],dx
  4164b7:	pop    edx
  4164b8:	add    DWORD PTR [edx+0x9ffe138],ebx
  4164be:	push   edi
  4164bf:	mov    edi,0x44fd5bde
  4164c4:	idiv   esp
  4164c6:	mov    ecx,0xa96329b6
  4164cb:	cmp    al,BYTE PTR [edi]
  4164cd:	test   eax,0xf54da61a
  4164d2:	jp     0x416532
  4164d4:	push   0x8db1675e
  4164d9:	jle    0x416547
  4164db:	sub    BYTE PTR [edi-0x39],al
  4164de:	out    0xf5,al
  4164e0:	mov    ch,0xa
  4164e2:	iret   
  4164e3:	push   ds
  4164e4:	popf   
  4164e5:	xchg   ecx,eax
  4164e6:	mov    dh,0x41
  4164e8:	fild   DWORD PTR [edx+eax*4]
  4164eb:	jns    0x4164b8
  4164ed:	out    0xd6,eax
  4164ef:	retf   
  4164f0:	(bad)  
  4164f2:	sbb    eax,0x664e46fc
  4164f7:	hlt    
  4164f8:	ja     0x416498
  4164fa:	es call 0x7e6c:0xb905cbd7
  416502:	mov    dl,0xd
  416504:	push   es
  416505:	push   ss
  416506:	ret    0x1345
  416509:	mov    ch,0x9e
  41650b:	pop    ds
  41650c:	dec    ebp
  41650d:	fwait
  41650e:	imul   ebx,DWORD PTR [esi+0x320a5957],0x3654a0c0
  416518:	mov    WORD PTR [edi+0x1c44a485],bx
  41651f:	(bad)  
  416520:	mov    ebx,0xfee32ab4
  416525:	ret    0x1af7
  416528:	loope  0x4164cf
  41652a:	xchg   ebp,eax
  41652b:	dec    edx
  41652c:	dec    esi
  41652d:	mov    eax,ds:0xd6147a7f
  416532:	cmp    DWORD PTR ds:0x7203229a,0x2271ffbf
  41653c:	add    DWORD PTR [esi+0x23],ebx
  41653f:	sbb    BYTE PTR ds:0x9dd9ee0d,dl
  416545:	or     eax,0xd8849005
  41654a:	adc    DWORD PTR [edi-0x26],edi
  41654d:	out    0x18,eax
  41654f:	mov    edx,0xfa748491
  416554:	test   DWORD PTR [ebx+0x16],ebx
  416557:	dec    esi
  416558:	pop    ss
  416559:	cmp    DWORD PTR [edx+0x7baabfe9],eax
  41655f:	pop    esp
  416560:	pushf  
  416561:	pushf  
  416562:	leave  
  416563:	lahf   
  416564:	dec    ebx
  416565:	mov    dh,0xe3
  416567:	imul   ecx,ecx,0xe3a39b7
  41656d:	xor    DWORD PTR [ebx-0x55ab32f6],esp
  416573:	dec    esp
  416574:	inc    ecx
  416575:	xchg   esi,eax
  416576:	les    ecx,FWORD PTR [ebx]
  416578:	shl    BYTE PTR [edx-0x71],0xf0
  41657c:	mov    DWORD PTR [ebp+0xd],ebx
  41657f:	inc    ecx
  416580:	pop    esp
  416581:	test   dh,ch
  416583:	xchg   ebx,eax
  416584:	jl     0x416593
  416586:	xor    BYTE PTR [esi-0x62],ah
  416589:	int3   
  41658a:	cli    
  41658b:	pop    edx
  41658c:	and    al,0x7e
  41658e:	test   al,0xa7
  416590:	stos   BYTE PTR es:[edi],al
  416591:	imul   edx,ecx,0x41
  416594:	push   0x2d3c2f3b
  416599:	push   es
  41659a:	ins    BYTE PTR es:[edi],dx
  41659b:	ja     0x416614
  41659d:	mov    BYTE PTR [esi-0x2b7c58a5],dh
  4165a3:	inc    ebx
  4165a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a5:	jnp    0x416606
  4165a7:	jp     0x41655d
  4165a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165aa:	test   ah,ch
  4165ac:	cmp    edi,edi
  4165ae:	mov    BYTE PTR [eax+0x4de63428],bh
  4165b4:	out    0xc,al
  4165b6:	pop    ss
  4165b7:	imul   eax,DWORD PTR [ebx-0x80],0xfe5c8d2a
  4165be:	test   BYTE PTR [ebx-0x42],bl
  4165c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c2:	add    ah,dh
  4165c4:	cli    
  4165c5:	scas   al,BYTE PTR es:[edi]
  4165c6:	std    
  4165c7:	pop    edi
  4165c8:	retf   
  4165c9:	push   ebp
  4165ca:	pop    esp
  4165cb:	arpl   cx,di
  4165cd:	cld    
  4165ce:	add    eax,0xaa29e8d7
  4165d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d4:	push   edi
  4165d5:	add    DWORD PTR [edx+0x1a25ab6],0x64f39805
  4165df:	cmp    DWORD PTR [ebx+0x1c03e789],esi
  4165e5:	or     DWORD PTR [edi-0x7fe6c378],ebx
  4165eb:	(bad)  
  4165ec:	xchg   ebp,eax
  4165ed:	jbe    0x4165e7
  4165ef:	push   esp
  4165f0:	les    ebp,FWORD PTR ds:0x5df02f18
  4165f6:	jae    0x4165fd
  4165f8:	pop    esp
  4165f9:	arpl   bx,si
  4165fb:	pushf  
  4165fc:	inc    esp
  4165fd:	push   ebx
  4165fe:	dec    esp
  4165ff:	iret   
  416600:	inc    esp
  416601:	push   edi
  416602:	xchg   ebp,eax
  416603:	and    al,0x8c
  416605:	xor    cl,BYTE PTR [edx+0x1912da2f]
  41660b:	dec    esp
  41660c:	scas   al,BYTE PTR es:[edi]
  41660d:	loope  0x41661c
  41660f:	pop    ecx
  416610:	and    eax,0x35e6559b
  416615:	fistp  DWORD PTR [esi+0x787a5416]
  41661b:	sbb    eax,0x8168f7f9
  416620:	pusha  
  416621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416622:	cmp    BYTE PTR [edi+0xed98a50],ch
  416628:	mov    esi,0xe92a6163
  41662d:	shl    edi,0x7d
  416630:	xchg   ebp,eax
  416631:	test   dh,ah
  416633:	and    al,dh
  416635:	bound  eax,QWORD PTR [edi+0x105432ee]
  41663b:	push   esi
  41663c:	sbb    al,0xd5
  41663e:	ret    0x9f1
  416641:	xchg   DWORD PTR [esi-0x79f97527],esp
  416647:	cmp    bh,BYTE PTR [ebp-0x72cfca45]
  41664d:	xchg   ebx,eax
  41664e:	fsub   QWORD PTR [esi-0x11]
  416651:	sahf   
  416652:	pop    edi
  416653:	sbb    eax,0x4ba48a05
  416658:	xor    eax,0xcaf54741
  41665d:	cwde   
  41665e:	scas   eax,DWORD PTR es:[edi]
  41665f:	adc    ch,cl
  416661:	ins    DWORD PTR es:[edi],dx
  416662:	push   ebp
  416663:	and    BYTE PTR [edi],ah
  416665:	cdq    
  416666:	pop    edx
  416667:	and    eax,0xdf7319c0
  41666c:	add    eax,0x7a5cdad0
  416671:	scas   al,BYTE PTR es:[edi]
  416672:	xchg   esp,eax
  416673:	clc    
  416674:	bound  edi,QWORD PTR [edx+0x3d8741a4]
  41667a:	rcl    BYTE PTR [ecx+0xd8ccba0],cl
  416680:	inc    esp
  416681:	ret    
  416682:	push   eax
  416683:	cmp    DWORD PTR [esi-0x22],ecx
  416686:	mov    esi,0xdb66c12a
  41668b:	ret    
  41668c:	sub    eax,DWORD PTR [eax+edi*2+0x2d]
  416690:	or     bh,BYTE PTR [edi+0x4c9e9634]
  416696:	xor    esi,DWORD PTR [ecx+0x4e]
  416699:	dec    edi
  41669a:	and    DWORD PTR [edx+0x53],0x1b7194ef
  4166a1:	adc    edi,DWORD PTR [ebx]
  4166a3:	mov    bl,0xee
  4166a5:	add    ecx,edi
  4166a7:	jne    0x4166c0
  4166a9:	test   BYTE PTR [edx+ebp*1-0x404213f2],al
  4166b0:	add    al,0x7f
  4166b2:	jle    0x416640
  4166b4:	and    DWORD PTR [ecx-0x8],ecx
  4166b7:	pop    es
  4166b8:	jb     0x4166f0
  4166ba:	or     ebp,0xbe5e33c4
  4166c0:	out    0x25,eax
  4166c2:	xor    BYTE PTR [ebx],al
  4166c4:	mov    bh,dh
  4166c6:	mov    DWORD PTR [ebp+0xb],esi
  4166c9:	(bad)
  4166cd:	xlat   BYTE PTR ds:[ebx]
  4166ce:	or     esp,eax
  4166d0:	mov    DWORD PTR [edi+eax*1+0x50c906ad],edi
  4166d7:	pushw  cs
  4166d9:	push   edi
  4166da:	leave  
  4166db:	rcl    DWORD PTR [ebx-0x7a],cl
  4166de:	ins    BYTE PTR es:[edi],dx
  4166df:	neg    BYTE PTR [ebx-0x673a813c]
  4166e5:	mov    ds:0x82d73805,al
  4166ea:	gs mov bl,0xd9
  4166ed:	mov    eax,0xd0487467
  4166f2:	sbb    al,BYTE PTR ds:0x13b46795
  4166f8:	dec    ecx
  4166f9:	loope  0x41672b
  4166fb:	push   cs
  4166fc:	jge    0x416689
  4166fe:	or     al,0x58
  416700:	or     DWORD PTR [ecx+0x65],eax
  416703:	mov    dl,bl
  416705:	scas   al,BYTE PTR es:[edi]
  416706:	jmp    0x416690
  416708:	std    
  416709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670a:	imul   ecx,DWORD PTR [esi+ecx*2-0xe],0xe51e0613
  416712:	rcl    BYTE PTR [edi],0x60
  416715:	ror    DWORD PTR ds:0x9fd93a05,1
  41671b:	sub    eax,0x63e13ce7
  416720:	mov    ?,esi
  416722:	daa    
  416723:	pusha  
  416724:	pop    ecx
  416725:	xchg   ebx,esi
  416727:	inc    edx
  416728:	dec    esp
  416729:	test   al,0x70
  41672b:	cmp    eax,0x8a7e32f0
  416730:	jecxz  0x41679e
  416732:	pop    esi
  416733:	adc    ah,ah
  416735:	fst    QWORD PTR [edi-0x3a]
  416738:	rcr    edx,1
  41673a:	and    bl,BYTE PTR [esi-0x63]
  41673d:	jp     0x41675f
  41673f:	xor    ecx,DWORD PTR [esi]
  416741:	leave  
  416742:	push   esp
  416743:	or     DWORD PTR [eax],esp
  416745:	add    edx,edx
  416747:	push   es
  416748:	push   ebx
  416749:	sub    eax,0xd89da6e8
  41674e:	or     ah,dl
  416750:	lds    ebx,FWORD PTR [esi]
  416752:	jno    0x4166f4
  416754:	cwde   
  416755:	and    BYTE PTR [edi-0x80],dl
  416758:	in     eax,0x9d
  41675a:	and    BYTE PTR [ecx-0x6fecfd7f],ah
  416760:	ror    edi,cl
  416762:	fnsave [ebp+0x11]
  416765:	pop    ebx
  416766:	inc    ebp
  416767:	jmp    0x416724
  416769:	add    eax,0x47e9d425
  41676e:	lea    ecx,ds:0x4e1f7cac
  416774:	push   0x2c
  416776:	jno    0x4167b0
  416778:	mov    ds:0x9cd0fe7e,al
  41677d:	push   ss
  41677e:	sbb    al,0xc
  416780:	jge    0x41679c
  416782:	inc    eax
  416783:	cdq    
  416784:	cmc    
  416785:	iret   
  416786:	jg     0x41675c
  416788:	jbe    0x4167f5
  41678a:	test   DWORD PTR [esi],0x96a608e1
  416790:	sti    
  416791:	out    dx,al
  416792:	sbb    DWORD PTR [eax-0x4ede395c],edx
  416798:	popa   
  416799:	cwde   
  41679a:	call   0x327d:0x2778cb3f
  4167a1:	repz sahf 
  4167a3:	iret   
  4167a4:	jne    0x4167e4
  4167a6:	pop    ebx
  4167a7:	xlat   BYTE PTR ds:[ebx]
  4167a8:	mov    edx,esi
  4167aa:	mov    WORD PTR [ebx+0xd238c05],?
  4167b0:	or     DWORD PTR [esi+0x2e467356],0x893caee2
  4167ba:	pop    edi
  4167bb:	pop    eax
  4167bc:	cmp    eax,edx
  4167be:	in     al,dx
  4167bf:	retf   
  4167c0:	jbe    0x41680e
  4167c2:	scas   al,BYTE PTR es:[edi]
  4167c3:	scas   eax,DWORD PTR es:[edi]
  4167c4:	pop    es
  4167c5:	xchg   edi,eax
  4167c6:	retf   0xec8e
  4167c9:	jnp    0x4167e2
  4167cb:	mov    ds:0xebd90be0,eax
  4167d0:	cmp    DWORD PTR [esi+0xe91967b],0xffffff84
  4167d7:	test   al,0x4d
  4167d9:	mov    DWORD PTR [ebx+0x59adfc00],edx
  4167df:	or     al,BYTE PTR ds:0x92395fbc
  4167e5:	pushf  
  4167e6:	pop    esi
  4167e7:	add    edx,0xffffffc5
  4167ea:	dec    ebp
  4167eb:	pop    edx
  4167ec:	idiv   DWORD PTR [ebx+0xe9d707f]
  4167f2:	xor    DWORD PTR [edi+0x2265a55f],0x0
  4167f9:	pop    edx
  4167fa:	(bad)  
  4167fb:	arpl   WORD PTR [ebx-0x700f7794],cx
  416801:	in     al,dx
  416802:	outs   dx,DWORD PTR ds:[esi]
  416803:	loopne 0x41679b
  416805:	rol    DWORD PTR [ebp-0x31],cl
  416808:	inc    esp
  416809:	push   eax
  41680a:	cmp    eax,0x285f9744
  41680f:	or     edi,esp
  416811:	cmp    eax,0x912a3e13
  416816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416817:	repz xor al,0x7
  41681a:	cmp    eax,0x15201844
  41681f:	jl     0x4167b4
  416821:	sbb    dl,BYTE PTR [esi]
  416823:	adc    edi,DWORD PTR [eax+eax*4+0x6a97c75]
  41682a:	retf   0x5b2e
  41682d:	dec    edx
  41682e:	jmp    0xc56e:0x4b4944b4
  416835:	jmp    0x730612bc
  41683a:	inc    edi
  41683b:	aam    0xfe
  41683d:	fbstp  TBYTE PTR [ebx-0x1bc88fc5]
  416843:	fsubr  DWORD PTR [ebp-0x34199a11]
  416849:	outs   dx,BYTE PTR ds:[esi]
  41684a:	fs ja  0x416876
  41684d:	bound  edx,QWORD PTR [eax+0x4]
  416850:	aaa    
  416851:	adc    bh,BYTE PTR [esi-0x51d986b5]
  416857:	inc    ebp
  416858:	mov    ds:0x98547115,eax
  41685d:	js     0x416835
  41685f:	loope  0x416888
  416861:	inc    ebx
  416862:	pusha  
  416863:	cdq    
  416864:	or     DWORD PTR [esi+0x2d],0x53
  416868:	mov    ds:0x3db969f0,eax
  41686d:	fst    DWORD PTR [eax-0x7f]
  416870:	or     bh,BYTE PTR [eax+0x4f84f6de]
  416876:	ins    DWORD PTR es:[edi],dx
  416877:	jnp    0x41683c
  416879:	jb     0x4168f2
  41687b:	sbb    ah,BYTE PTR [ebx+0x66]
  41687e:	inc    esp
  41687f:	and    eax,0xb4ac74c5
  416884:	and    DWORD PTR [esi-0x5164a051],ebx
  41688a:	test   DWORD PTR [ebp-0xcad45a0],ebp
  416890:	jmp    FWORD PTR [edi-0x4e]
  416893:	gs (bad) 
  416895:	jmp    0x4168bc
  416897:	mov    ah,0x74
  416899:	inc    esi
  41689a:	bound  ebp,QWORD PTR [ecx]
  41689c:	add    eax,0xbe5edc9f
  4168a1:	es sbb ecx,edx
  4168a4:	cld    
  4168a5:	add    al,0x71
  4168a7:	mov    bh,0x90
  4168a9:	stos   BYTE PTR es:[edi],al
  4168aa:	test   DWORD PTR [esi],ebx
  4168ac:	gs push esi
  4168ae:	fs xchg esi,eax
  4168b0:	pop    edx
  4168b1:	popa   
  4168b2:	es lahf 
  4168b4:	mov    ecx,edx
  4168b6:	outs   dx,DWORD PTR ds:[esi]
  4168b7:	and    edx,0x54fb92ca
  4168bd:	or     BYTE PTR [edi+0x2c],ah
  4168c0:	out    0xa9,eax
  4168c2:	mov    ch,0x14
  4168c4:	fst    DWORD PTR [esi]
  4168c6:	out    dx,al
  4168c7:	pop    esi
  4168c8:	xlat   BYTE PTR ds:[ebx]
  4168c9:	push   esi
  4168ca:	pop    ecx
  4168cb:	dec    esp
  4168cc:	inc    esp
  4168cd:	mov    ah,0x49
  4168cf:	aas    
  4168d0:	fs ret 
  4168d2:	ror    BYTE PTR [esi+0x3498c097],0x56
  4168d9:	popa   
  4168da:	iret   
  4168db:	mov    bl,0x7e
  4168dd:	dec    ebp
  4168de:	cmp    BYTE PTR [ecx],dl
  4168e0:	add    al,0x1e
  4168e2:	inc    edi
  4168e3:	inc    eax
  4168e4:	xchg   ebx,eax
  4168e5:	mov    edx,0x4ac36d1b
  4168ea:	jmp    0x21f4:0x83c67c05
  4168f1:	retf   0x29d9
  4168f4:	cld    
  4168f5:	add    eax,ecx
  4168f7:	push   edi
  4168f8:	repnz outs dx,DWORD PTR ds:[esi]
  4168fa:	ret    
  4168fb:	bound  ecx,QWORD PTR [esi+ebx*8]
  4168fe:	cwde   
  4168ff:	cmp    dl,BYTE PTR [ecx+0x65]
  416902:	aaa    
  416903:	aad    0xad
  416905:	inc    DWORD PTR [eax+0x7c4e9fff]
  41690b:	dec    esp
  41690c:	ficomp DWORD PTR [ebx+0x2e]
  41690f:	jo     0x4168c4
  416911:	jl     0x41691a
  416913:	mov    dh,cl
  416915:	stos   BYTE PTR es:[edi],al
  416916:	leave  
  416917:	xchg   ecx,eax
  416918:	imul   esp,esp,0xffffffa4
  41691b:	repz mov ebx,ebp
  41691e:	and    eax,0x81c76a81
  416923:	pop    edi
  416924:	test   eax,0x99492dbe
  416929:	test   BYTE PTR [ecx+0x498c8f73],bh
  41692f:	(bad)
  416932:	test   eax,0x230a58f0
  416937:	icebp  
  416938:	int3   
  416939:	gs sub eax,0xc1767143
  41693f:	scas   al,BYTE PTR es:[edi]
  416940:	fnstcw WORD PTR [esp+edx*2+0x61]
  416944:	jb     0x4168eb
  416946:	mov    ds,WORD PTR [ebx-0x77]
  416949:	out    0x51,eax
  41694b:	push   cs
  41694c:	jns    0x416902
  41694e:	dec    esi
  41694f:	gs repz test BYTE PTR gs:[ebx],cl
  416954:	pop    ebx
  416955:	mov    WORD PTR [ebp-0x47],?
  416958:	adc    al,0xf
  41695a:	mov    eax,0x8b9ddfbd
  41695f:	mov    ecx,0xc542c7e9
  416964:	mov    edx,DWORD PTR [edx-0x65]
  416967:	or     edi,0xa7fee884
  41696d:	cmp    DWORD PTR [eax-0x4ee653c2],ebx
  416973:	fld    TBYTE PTR [ebp-0x8]
  416976:	inc    esp
  416977:	or     al,0xe
  416979:	imul   eax,DWORD PTR [ebx],0xbba17804
  41697f:	arpl   di,sp
  416981:	xor    dh,al
  416983:	add    ebx,ecx
  416985:	dec    ebp
  416986:	mov    ecx,eax
  416988:	cmp    DWORD PTR [eax+0x71],0xf852318d
  41698f:	out    dx,eax
  416990:	into   
  416991:	in     al,0xfe
  416993:	into   
  416994:	inc    esi
  416995:	lods   al,BYTE PTR ds:[esi]
  416996:	out    0x4a,al
  416998:	retf   0x4df0
  41699b:	fstp   DWORD PTR [edx-0x549fd6c]
  4169a1:	loop   0x416949
  4169a3:	mov    bh,0xc1
  4169a5:	adc    al,0x22
  4169a7:	(bad)  
  4169a8:	inc    esp
  4169a9:	data16 sub cl,BYTE PTR [ecx+0x12]
  4169ad:	add    al,0x30
  4169af:	out    dx,al
  4169b0:	idiv   ah
  4169b2:	stos   DWORD PTR es:[edi],eax
  4169b3:	rol    cl,cl
  4169b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b6:	jns    0x4169fb
  4169b8:	xacquire xchg DWORD PTR [ecx+0x260279b1],edx
  4169bf:	xchg   ebx,eax
  4169c0:	test   DWORD PTR [ebx-0x64fb555a],0xe58a2365
  4169ca:	repnz ds retf 0x89f8
  4169cf:	mov    ah,0x8f
  4169d1:	fld    TBYTE PTR [edi+0x47a48a68]
  4169d7:	and    al,0x80
  4169d9:	xor    eax,0x6ae4603b
  4169de:	(bad)
  4169e2:	mov    esi,0x2aaa3b4a
  4169e7:	mov    ds:0x9ed194ba,eax
  4169ec:	je     0x416a37
  4169ee:	mov    al,ds:0xcaa71c1
  4169f3:	jmp    0x416a12
  4169f5:	lods   eax,DWORD PTR ds:[esi]
  4169f6:	add    ecx,DWORD PTR [ecx]
  4169f8:	mov    dl,0xad
  4169fa:	and    BYTE PTR ds:0x3f71ea64,0x17
  416a01:	pop    edi
  416a02:	mov    al,ds:0xa0deb06e
  416a07:	add    cl,BYTE PTR [ecx-0x5759deac]
  416a0d:	dec    edx
  416a0e:	stos   BYTE PTR es:[edi],al
  416a0f:	pop    esp
  416a10:	(bad)  
  416a11:	adc    al,0xb1
  416a13:	fbld   TBYTE PTR [eax+ebx*2-0x12]
  416a17:	and    DWORD PTR [ebp+0x4e],ebx
  416a1a:	(bad)  
  416a1b:	bound  ebx,QWORD PTR [ecx]
  416a1d:	cmp    DWORD PTR [esi-0x6e],ecx
  416a20:	adc    BYTE PTR [esi+ebx*2],al
  416a23:	pop    esi
  416a24:	sar    DWORD PTR ds:0x2bec4406,0xbd
  416a2b:	push   eax
  416a2c:	sub    DWORD PTR [ecx+0x1e],ecx
  416a2f:	fbstp  TBYTE PTR [eax-0x59]
  416a32:	and    eax,0x17078bd5
  416a37:	dec    ecx
  416a38:	xor    bl,BYTE PTR [ecx+0x603a7d56]
  416a3e:	mov    bh,BYTE PTR [eax-0x58]
  416a41:	lods   al,BYTE PTR ds:[esi]
  416a42:	inc    ebp
  416a43:	xor    eax,0xa93e714b
  416a48:	mov    eax,0x39b0050f
  416a4d:	mul    BYTE PTR [ebp+0x28]
  416a50:	xchg   edx,eax
  416a51:	mov    edx,0xb5e6d78b
  416a56:	cmp    eax,0xfe8067f9
  416a5b:	xchg   esp,eax
  416a5c:	add    DWORD PTR [esi+ecx*4],eax
  416a5f:	mov    esp,0xb2ed687a
  416a64:	mov    al,0x6a
  416a66:	and    eax,esp
  416a68:	jp     0x4169f5
  416a6a:	jae    0x416a26
  416a6c:	std    
  416a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a6e:	shl    DWORD PTR [ebx-0x679ccc97],0x82
  416a75:	lods   al,BYTE PTR ds:[esi]
  416a76:	xor    BYTE PTR [ebx-0x3c3fa157],0xda
  416a7d:	(bad)
  416a80:	aas    
  416a81:	not    DWORD PTR ds:0x33f9c02
  416a87:	xchg   esi,eax
  416a88:	add    bh,cl
  416a8a:	add    ecx,DWORD PTR [ebp+0x3af8c859]
  416a90:	xchg   ebx,eax
  416a91:	retf   
  416a92:	test   DWORD PTR ds:0xf3aff3dc,edx
  416a98:	sub    ebp,ebx
  416a9a:	sbb    al,0xaf
  416a9c:	ds out 0xbd,al
  416a9f:	add    al,0x3d
  416aa1:	fdivr  QWORD PTR [esi-0x55]
  416aa4:	and    ebx,0xb19160d2
  416aaa:	pop    esi
  416aab:	fdivr  DWORD PTR [ebx-0x46]
  416aae:	or     ch,BYTE PTR [ecx+0x21]
  416ab1:	inc    esp
  416ab2:	sahf   
  416ab3:	sub    DWORD PTR [eax-0x3d],esp
  416ab6:	or     al,0x1
  416ab8:	addr16 mov bh,0x98
  416abb:	inc    edi
  416abc:	mov    dl,BYTE PTR [eax+0x56e453d2]
  416ac2:	shr    DWORD PTR [edi-0x6b41000a],0x15
  416ac9:	dec    ebx
  416aca:	add    BYTE PTR [edi-0x63afc381],al
  416ad0:	inc    ebp
  416ad1:	sub    ebp,DWORD PTR [edx-0x13b2a748]
  416ad7:	ror    DWORD PTR [ebx+0x4],cl
  416ada:	push   ebx
  416adb:	retf   0x432a
  416ade:	retf   
  416adf:	mov    BYTE PTR [eax+0xa],bl
  416ae2:	cmc    
  416ae3:	jmp    0x3d7:0xed692a2a
  416aea:	inc    edi
  416aeb:	mov    bh,0x8d
  416aed:	sub    BYTE PTR [ebx-0x34],0xd4
  416af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af2:	call   0xb205d6f3
  416af7:	sub    dl,ah
  416af9:	ja     0x416ac1
  416afb:	out    0xda,eax
  416afd:	(bad)  
  416afe:	or     al,0x39
  416b00:	xor    BYTE PTR [edi-0x4f897d27],0xf3
  416b07:	jbe    0x416aac
  416b09:	hlt    
  416b0a:	sub    BYTE PTR [ecx-0x41],bl
  416b0d:	push   edi
  416b0e:	xor    eax,0x5fdf3acd
  416b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b14:	or     dh,al
  416b16:	cmp    al,0x21
  416b18:	sub    DWORD PTR [edx-0x3c2934e],edx
  416b1e:	out    0xde,al
  416b20:	inc    ebp
  416b21:	mov    WORD PTR [eax+0x78ee1d67],es
  416b27:	aad    0xb0
  416b29:	and    bh,0x8d
  416b2c:	std    
  416b2d:	add    BYTE PTR [edi-0x155ba35f],bh
  416b33:	mov    bh,0xd0
  416b35:	out    dx,al
  416b36:	rcl    DWORD PTR [ebx],1
  416b38:	stos   DWORD PTR es:[edi],eax
  416b39:	mov    ecx,0xf0dda9d0
  416b3e:	fs lahf 
  416b40:	int3   
  416b41:	test   eax,0xb44504ba
  416b46:	or     DWORD PTR [edi],0x37
  416b49:	inc    ecx
  416b4a:	retf   0x7b6d
  416b4d:	mov    BYTE PTR [ebp+0x392d4bde],cl
  416b53:	jne    0x416afc
  416b55:	xchg   edx,eax
  416b56:	clc    
  416b57:	enter  0x6563,0xac
  416b5b:	lds    edx,FWORD PTR ds:0xc6728bc4
  416b61:	(bad)  
  416b62:	imul   ebx,esi,0xfffffff5
  416b65:	sub    edi,DWORD PTR [ebp+0x6]
  416b68:	inc    edi
  416b69:	jl     0x416b92
  416b6b:	icebp  
  416b6c:	jecxz  0x416b4c
  416b6e:	xchg   edx,eax
  416b6f:	sahf   
  416b70:	dec    edx
  416b71:	adc    BYTE PTR fs:[edi+0x7d86cbf3],ch
  416b78:	loop   0x416be3
  416b7a:	lgs    edi,FWORD PTR [ecx+0x76]
  416b7e:	push   esi
  416b7f:	sub    cl,al
  416b81:	sahf   
  416b82:	xchg   DWORD PTR [eax-0x53bd73ac],ebx
  416b88:	lea    ebp,[edx]
  416b8a:	aad    0x25
  416b8c:	push   esp
  416b8d:	adc    BYTE PTR [ebx+ebx*2-0x6b8f2e40],cl
  416b94:	xor    DWORD PTR [edx+0x54],0xfffffff8
  416b98:	outs   dx,DWORD PTR ds:[esi]
  416b99:	ret    0x1c58
  416b9c:	in     al,dx
  416b9d:	je     0x416bf1
  416b9f:	(bad)  
  416ba0:	sub    dh,BYTE PTR [ebp-0x12e0c543]
  416ba6:	mov    ebp,0x8fc8a06a
  416bab:	scas   eax,DWORD PTR es:[edi]
  416bac:	inc    esi
  416bad:	inc    esp
  416bae:	or     al,ah
  416bb0:	ja     0x416c27
  416bb2:	xchg   edi,eax
  416bb3:	mov    bh,0xfe
  416bb5:	fcomp  QWORD PTR [ebp-0x25]
  416bb8:	xchg   esp,eax
  416bb9:	fisttp DWORD PTR [ebp-0x10]
  416bbc:	push   esi
  416bbd:	iret   
  416bbe:	into   
  416bbf:	and    eax,0x30396bf1
  416bc4:	dec    edx
  416bc5:	push   cs
  416bc6:	inc    ebp
  416bc7:	sbb    ah,ch
  416bc9:	cmc    
  416bca:	jmp    0x442d:0x35d43bf9
  416bd1:	ja     0x416c10
  416bd3:	test   BYTE PTR [ebp-0x3e],dh
  416bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd7:	pop    esp
  416bd8:	xor    esi,DWORD PTR [ecx+0x13f6f129]
  416bde:	in     al,0x4b
  416be0:	pop    edx
  416be1:	dec    ebx
  416be2:	ret    
  416be3:	addr16 call 0x9f78:0x9f73a619
  416beb:	das    
  416bec:	imul   ebx,DWORD PTR ds:0xc103970,0xffffff85
  416bf3:	cmc    
  416bf4:	sbb    DWORD PTR [esi+0xa],edi
  416bf7:	ins    DWORD PTR es:[edi],dx
  416bf8:	call   0x4ed91fbc
  416bfd:	(bad)  
  416bfe:	cs jg  0x416bc9
  416c01:	inc    ecx
  416c02:	push   edx
  416c03:	mov    ch,al
  416c05:	push   edi
  416c06:	push   ebp
  416c07:	sub    DWORD PTR [ecx-0xc],ecx
  416c0a:	jmp    0x89ad:0x39dec6d
  416c11:	in     al,0x88
  416c13:	int    0xab
  416c15:	jge    0x416ba7
  416c17:	or     dh,BYTE PTR [esp+edx*4+0x67]
  416c1b:	pop    esi
  416c1c:	in     al,dx
  416c1d:	jno    0x416c5a
  416c1f:	xchg   DWORD PTR [ecx+eax*8+0x26],ecx
  416c23:	popf   
  416c24:	xor    al,0x6d
  416c26:	sub    bh,BYTE PTR [ecx]
  416c28:	mov    esp,0x509dd26c
  416c2d:	ds and edi,0xbf546a08
  416c34:	leave  
  416c35:	int    0x9
  416c37:	pop    ebp
  416c38:	sahf   
  416c39:	xor    al,0x1e
  416c3b:	inc    edx
  416c3c:	jne    0x416c72
  416c3e:	pop    edx
  416c3f:	mov    eax,0xd0691b89
  416c44:	inc    ebx
  416c45:	movd   mm6,ebx
  416c48:	dec    eax
  416c49:	aas    
  416c4a:	xchg   edx,eax
  416c4b:	retf   0x2755
  416c4e:	adc    ch,ch
  416c50:	popa   
  416c51:	and    edx,DWORD PTR [ebx]
  416c53:	xor    BYTE PTR [esi-0x28],0x87
  416c57:	xlat   BYTE PTR ds:[ebx]
  416c58:	mov    ebx,0xc5669fd6
  416c5d:	and    bh,0x35
  416c60:	clc    
  416c61:	jl     0x416c5d
  416c63:	adc    al,0x79
  416c65:	idiv   DWORD PTR [edx]
  416c67:	mov    edi,0x4b9e7524
  416c6c:	dec    BYTE PTR [ecx-0x43]
  416c6f:	jne    0x416c64
  416c71:	ja     0x416ccc
  416c73:	test   BYTE PTR [eax+0x51],0x2c
  416c77:	or     BYTE PTR ds:0x9b75b96b,0x3a
  416c7e:	mov    ds:0x82e6e723,al
  416c83:	pop    esp
  416c84:	fcomip st,st(7)
  416c86:	stos   BYTE PTR es:[edi],al
  416c87:	sub    DWORD PTR [ecx],eax
  416c89:	enter  0xbaae,0xc1
  416c8d:	mov    WORD PTR [esi],ds
  416c8f:	sub    ecx,DWORD PTR fs:[esi]
  416c92:	sbb    DWORD PTR [ebp-0x1a171503],eax
  416c98:	jnp    0x416c6a
  416c9a:	xor    al,0x84
  416c9c:	out    dx,al
  416c9d:	mov    edi,esi
  416c9f:	rcr    edi,1
  416ca1:	sub    dh,ch
  416ca3:	add    DWORD PTR gs:[ebx+0x79],edx
  416ca7:	in     al,dx
  416ca8:	adc    DWORD PTR [edx+0x43],eax
  416cab:	jmp    0x416d0d
  416cad:	sbb    al,0xb
  416caf:	std    
  416cb0:	cmp    edi,DWORD PTR [ecx+0x481ddd99]
  416cb6:	out    dx,al
  416cb7:	js     0x416d16
  416cb9:	mov    ebp,0xc1870672
  416cbe:	or     al,0x97
  416cc0:	in     eax,dx
  416cc1:	out    dx,eax
  416cc2:	pop    edx
  416cc3:	inc    edi
  416cc4:	ja     0x416d31
  416cc6:	mov    edi,DWORD PTR [edx]
  416cc8:	or     al,0x55
  416cca:	std    
  416ccb:	pushf  
  416ccc:	mov    ds,edx
  416cce:	in     al,0xfe
  416cd0:	call   0x488:0x7b301dbe
  416cd7:	mov    dl,0xee
  416cd9:	cmp    BYTE PTR [ecx],al
  416cdb:	call   0x434e51e4
  416ce0:	push   edi
  416ce1:	xchg   esp,eax
  416ce2:	test   eax,0xda551d56
  416ce7:	fs xchg edx,eax
  416ce9:	(bad)  
  416ceb:	(bad)  
  416cec:	bsr    edi,DWORD PTR [ecx+eiz*4+0x2b2a479c]
  416cf4:	fcom   QWORD PTR [edi+0x44c361be]
  416cfa:	jp     0x416d1d
  416cfc:	jmp    0x526660a0
  416d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d02:	pop    esi
  416d03:	pop    edx
  416d04:	jb     0x416cd3
  416d06:	hlt    
  416d07:	adc    esp,edi
  416d09:	imul   ebx,DWORD PTR [ebp-0x41],0xf6f09697
  416d10:	add    ebx,esp
  416d12:	mov    BYTE PTR [ecx],dl
  416d14:	retf   
  416d15:	pop    esi
  416d16:	push   es
  416d17:	mov    ebx,0xd47c510c
  416d1c:	repz jae 0x416cfb
  416d1f:	inc    ebp
  416d20:	daa    
  416d21:	mov    edi,0x79fa00cc
  416d26:	sti    
  416d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d28:	and    al,0x19
  416d2a:	add    ch,BYTE PTR [edi-0x2d]
  416d2d:	or     eax,0x6afee0e8
  416d32:	rol    BYTE PTR [ecx],1
  416d34:	shl    bh,cl
  416d36:	cmp    edx,DWORD PTR [ebp-0x12]
  416d39:	ins    BYTE PTR es:[edi],dx
  416d3a:	push   0xd6b81257
  416d3f:	scas   al,BYTE PTR es:[edi]
  416d40:	in     eax,dx
  416d41:	ss sbb esi,edx
  416d44:	xchg   ebp,eax
  416d45:	pop    edx
  416d46:	jnp    0x416d72
  416d48:	test   ch,ah
  416d4a:	adc    al,0x1d
  416d4c:	arpl   WORD PTR [eax+0x53],bx
  416d4f:	push   0x5f
  416d51:	ficom  WORD PTR [ebx]
  416d53:	ins    DWORD PTR es:[edi],dx
  416d54:	dec    eax
  416d55:	les    esp,FWORD PTR [ecx+0x5d1913c]
  416d5b:	pushf  
  416d5c:	ins    BYTE PTR es:[edi],dx
  416d5d:	inc    esi
  416d5e:	xor    al,0x40
  416d60:	cmc    
  416d61:	jg     0x416d70
  416d63:	int3   
  416d64:	cmp    eax,0x7ec686a4
  416d69:	pop    edx
  416d6a:	jge    0x416d06
  416d6c:	add    eax,0xf07eb5c7
  416d71:	data16 (bad) 
  416d73:	rcl    dh,0x67
  416d76:	xchg   esi,eax
  416d77:	mov    edi,0x5aead2b6
  416d7c:	xchg   edx,eax
  416d7d:	ins    BYTE PTR es:[edi],dx
  416d7e:	pusha  
  416d7f:	dec    edx
  416d80:	mov    ebp,0xae61b93d
  416d85:	pop    esp
  416d86:	sbb    DWORD PTR [edi+0x5a4a8b23],edi
  416d8c:	xchg   esp,eax
  416d8d:	push   eax
  416d8e:	add    DWORD PTR [edx],0xb0686d8f
  416d94:	jl     0x416d49
  416d96:	rol    DWORD PTR [esi-0x33],cl
  416d99:	adc    eax,DWORD PTR [edx-0x5b]
  416d9c:	push   edx
  416d9d:	mov    bl,0xe8
  416d9f:	das    
  416da0:	dec    eax
  416da1:	add    DWORD PTR [ebx-0x5f],eax
  416da4:	call   0x1801:0xc156fcb6
  416dab:	iret   
  416dac:	pop    ebp
  416dad:	loopne 0x416d45
  416daf:	mov    ecx,0x3930d6b5
  416db4:	(bad)  
  416db6:	add    edi,DWORD PTR [edi]
  416db8:	ja     0x416dc9
  416dba:	pop    ss
  416dbb:	iret   
  416dbc:	mov    bl,0xab
  416dbe:	jb     0x416df1
  416dc0:	rol    BYTE PTR [edi+0x1b],1
  416dc3:	(bad)  
  416dc4:	pop    ebp
  416dc5:	popf   
  416dc6:	jo     0x416dd1
  416dc8:	mov    esi,0x751a6ae4
  416dcd:	fcomi  st,st(3)
  416dcf:	mov    ds:0xb1c6e56b,al
  416dd4:	in     al,0xf2
  416dd6:	enter  0x3ff6,0x6
  416dda:	or     edi,DWORD PTR [ecx+0x2ba93ed7]
  416de0:	lods   eax,DWORD PTR ds:[esi]
  416de1:	xor    BYTE PTR [ecx],dh
  416de3:	daa    
  416de4:	rcl    ah,cl
  416de6:	clc    
  416de7:	loope  0x416deb
  416de9:	in     al,dx
  416dea:	inc    ebx
  416deb:	sbb    esp,esp
  416ded:	sub    eax,0x541e1a87
  416df2:	in     al,dx
  416df3:	ins    DWORD PTR es:[edi],dx
  416df4:	push   ebp
  416df5:	push   eax
  416df6:	data16 add bl,BYTE PTR [ecx+0x63ad6e9d]
  416dfd:	mov    ebp,0x1ad58131
  416e02:	loope  0x416e18
  416e04:	outs   dx,DWORD PTR ds:[esi]
  416e05:	ror    DWORD PTR fs:[esi-0x7a6d5f19],0x7d
  416e0d:	out    0xd7,al
  416e0f:	sbb    BYTE PTR [ebx+0x59],0x2e
  416e13:	jmp    0x58c5:0x7dbbbae5
  416e1a:	push   ebx
  416e1b:	out    dx,al
  416e1c:	inc    eax
  416e1d:	call   0x16cd:0xb805d0f
  416e24:	mov    ecx,0x915307b3
  416e29:	adc    al,dh
  416e2b:	mov    ds:0xe2d5243d,al
  416e30:	sti    
  416e31:	sub    ecx,DWORD PTR [esi+0x7e68103a]
  416e37:	jb     0x416e94
  416e39:	les    edx,FWORD PTR [edi-0x4]
  416e3c:	popf   
  416e3d:	ret    
  416e3e:	call   0xaad:0x63d7fa4a
  416e45:	inc    esp
  416e46:	lea    ebp,[edi+0x35]
  416e49:	(bad)  
  416e4a:	mov    BYTE PTR [ecx+0x6c2e6544],ch
  416e50:	loopne 0x416e39
  416e52:	adc    ch,BYTE PTR [esi-0x69]
  416e55:	fs stos BYTE PTR es:[edi],al
  416e57:	mov    ebx,0x45585f6d
  416e5c:	shr    BYTE PTR [ebx-0x77144b02],0x75
  416e63:	inc    ebx
  416e64:	and    BYTE PTR [ebx+eax*4],dl
  416e67:	rcr    DWORD PTR [eax],cl
  416e69:	rol    esp,1
  416e6b:	(bad)  
  416e6c:	imul   edx,DWORD PTR [edx+0x218ac81f],0x7a066fe5
  416e76:	jle    0x416e49
  416e78:	push   esp
  416e79:	add    DWORD PTR [ebp-0x2a2da345],esi
  416e7f:	mov    bh,0x17
  416e81:	hlt    
  416e82:	xlat   BYTE PTR ds:[ebx]
  416e83:	out    0x66,al
  416e85:	adc    dl,ch
  416e87:	mov    al,BYTE PTR [esi-0x3c]
  416e8a:	sar    DWORD PTR [ebp+ebx*1+0x6ea90f24],cl
  416e91:	sub    edi,DWORD PTR [esi-0x50]
  416e94:	je     0x416ebe
  416e96:	mov    WORD PTR [esi+0x2d],?
  416e99:	jge    0x416eaa
  416e9b:	js     0x416e38
  416e9d:	jae    0x416f1d
  416e9f:	loopne 0x416e75
  416ea1:	adc    dl,0xa6
  416ea4:	(bad)  
  416ea5:	fdiv   DWORD PTR [edx+0x49f406ae]
  416eab:	dec    ecx
  416eac:	call   0x6684:0xfcc2aa9c
  416eb3:	pushf  
  416eb4:	test   al,0x48
  416eb6:	jae    0x416e89
  416eb8:	dec    edi
  416eb9:	add    cl,BYTE PTR [ecx]
  416ebb:	push   edx
  416ebc:	add    dl,bh
  416ebe:	sub    cl,al
  416ec0:	push   ds
  416ec1:	jnp    0x416f41
  416ec3:	xchg   edi,eax
  416ec4:	std    
  416ec5:	mov    al,0xbd
  416ec7:	imul   esi,ebx,0xffffffc0
  416eca:	mov    ecx,DWORD PTR [ebx-0x50]
  416ecd:	and    DWORD PTR [eax],eax
  416ecf:	in     al,0x4a
  416ed1:	dec    ebp
  416ed2:	mov    edx,0x53645256
  416ed7:	fdiv   QWORD PTR [ecx+0x236d02ae]
  416edd:	dec    ecx
  416ede:	jle    0x416f4e
  416ee0:	pop    edx
  416ee1:	jge    0x416f02
  416ee3:	loop   0x416f4c
  416ee5:	neg    BYTE PTR [ebx+0x4]
  416ee8:	mov    bl,ch
  416eea:	clc    
  416eeb:	adc    al,0xa3
  416eed:	imul   edi,DWORD PTR [esi],0x4e91d8c1
  416ef3:	jecxz  0x416ec6
  416ef5:	mov    BYTE PTR [ebx-0x491e160e],bl
  416efb:	outs   dx,DWORD PTR ds:[esi]
  416efc:	dec    esp
  416efd:	loop   0x416e91
  416eff:	jnp    0x416e99
  416f01:	inc    ecx
  416f02:	and    eax,0x831cab94
  416f07:	test   BYTE PTR [ebx+0x69e99b6a],ch
  416f0d:	popf   
  416f0e:	jecxz  0x416f3d
  416f10:	jns    0x416f7d
  416f12:	jbe    0x416f2f
  416f14:	imul   edx,esp,0x5f7ab6b
  416f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1b:	cmp    eax,0x86987faa
  416f20:	xchg   esp,eax
  416f21:	pusha  
  416f22:	int    0xc2
  416f24:	cs ins DWORD PTR es:[edi],dx
  416f26:	aas    
  416f27:	test   DWORD PTR [esi],eax
  416f29:	(bad)  
  416f2a:	bts    DWORD PTR [ecx-0x7d],edi
  416f2e:	enter  0x8ef4,0x17
  416f32:	hlt    
  416f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f34:	xor    ebx,esp
  416f36:	dec    ebp
  416f37:	xchg   BYTE PTR [ecx-0x5c],cl
  416f3a:	pop    ss
  416f3b:	mov    edx,0xaaad3de5
  416f40:	mov    ds:0xbcdce909,al
  416f45:	shr    DWORD PTR [ebx],0x26
  416f48:	cld    
  416f49:	or     eax,0xf4d8e685
  416f4e:	xor    bh,BYTE PTR [esp+ebx*1-0x50b752d5]
  416f55:	sub    bl,0xc2
  416f58:	and    ecx,DWORD PTR [edi+0x3d]
  416f5b:	xchg   ebx,eax
  416f5c:	js     0x416f27
  416f5e:	popf   
  416f5f:	and    BYTE PTR [ebx-0x19f18a7b],ah
  416f65:	inc    edx
  416f66:	(bad)  
  416f67:	mov    BYTE PTR [esp+ebp*1+0x70],ch
  416f6b:	scas   eax,DWORD PTR es:[edi]
  416f6c:	mov    DWORD PTR [ecx-0x396c9805],esi
  416f72:	dec    ecx
  416f73:	push   0xffffff8b
  416f75:	fisubr WORD PTR [edi]
  416f77:	into   
  416f78:	es or  al,0x4f
  416f7b:	aad    0x9c
  416f7d:	cli    
  416f7e:	lods   ax,WORD PTR ds:[esi]
  416f80:	je     0x416f59
  416f82:	in     eax,dx
  416f83:	lock outs dx,DWORD PTR ds:[esi]
  416f85:	mov    ebp,0xaf9e3ac6
  416f8a:	pop    ecx
  416f8b:	add    ch,BYTE PTR [eax]
  416f8d:	xchg   DWORD PTR [ebp-0x1d],esp
  416f90:	xchg   BYTE PTR [eax],dl
  416f92:	in     al,dx
  416f93:	inc    ecx
  416f94:	mov    edi,0xb1617e31
  416f99:	fadd   QWORD PTR [ebp+0x165ed488]
  416f9f:	push   0x803ccfd
  416fa4:	ss xchg ecx,eax
  416fa6:	push   edi
  416fa7:	iret   
  416fa8:	rcr    ecx,0x6b
  416fab:	xor    al,0x9b
  416fad:	inc    esi
  416fae:	enter  0x4d8f,0xae
  416fb2:	outs   dx,BYTE PTR ds:[esi]
  416fb3:	std    
  416fb4:	pop    eax
  416fb5:	fidivr DWORD PTR [ebp+0x513990a1]
  416fbb:	test   eax,0x5f0978f0
  416fc0:	push   es
  416fc1:	mov    eax,DWORD PTR [eax+0x10c4d1ce]
  416fc7:	ins    DWORD PTR es:[edi],dx
  416fc8:	ret    
  416fc9:	jg     0x417040
  416fcb:	adc    BYTE PTR [ebx+0x1793b2f4],cl
  416fd1:	ins    BYTE PTR es:[edi],dx
  416fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd3:	pop    ss
  416fd4:	mov    BYTE PTR [ebp+0x64],al
  416fd7:	mov    edi,0x36f85a6c
  416fdc:	and    DWORD PTR [edx+esi*4-0xb620b48],eax
  416fe3:	lods   eax,DWORD PTR ds:[esi]
  416fe4:	jae    0x416f97
  416fe6:	xchg   DWORD PTR [edx-0x10],ebp
  416fe9:	ds cs push ss
  416fec:	sub    bl,BYTE PTR [eax+0x43469de3]
  416ff2:	push   cs
  416ff3:	xchg   ecx,eax
  416ff4:	loopne 0x417039
  416ff6:	lods   eax,DWORD PTR ds:[esi]
  416ff7:	mov    bh,bl
  416ff9:	and    al,0x87
  416ffb:	std    
  416ffc:	sub    ch,BYTE PTR [eax-0x62bfe618]
  417002:	xor    DWORD PTR [ebx-0x120903fa],0x85f44306
  41700c:	push   ss
  41700d:	or     BYTE PTR [ebx],dl
  41700f:	sub    al,0xad
  417011:	mov    al,ds:0x380f0ee1
  417016:	gs xor al,0x26
  417019:	test   DWORD PTR [ecx+0x3195ee15],ecx
  41701f:	jnp    0x417051
  417021:	(bad)
  417024:	sub    DWORD PTR [edx+0x19da9eae],edi
  41702a:	sub    cl,BYTE PTR [ebx+0x6]
  41702d:	aas    
  41702e:	push   0xe81f6f3d
  417033:	adc    al,0x43
  417035:	nop
  417036:	dec    edi
  417037:	mov    DWORD PTR [esi+ecx*8-0x3d],0x3f3c6a46
  41703f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417040:	push   ds
  417041:	inc    esi
  417042:	mov    ebx,0x70006d54
  417047:	mov    esp,0x49832c69
  41704c:	ret    
  41704d:	inc    esi
  41704e:	xor    ebx,edx
  417050:	dec    edx
  417051:	dec    ebp
  417052:	imul   ecx,ecx,0xba0ace2f
  417058:	mov    esi,0x22ac3a05
  41705d:	cmp    edx,DWORD PTR ss:[edx-0x74c06d99]
  417064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417065:	stc    
  417066:	inc    esp
  417067:	mov    ds:0xeca4d8d5,eax
  41706c:	addr16 xor eax,0x983fcfaf
  417072:	pop    ds
  417073:	mov    esp,0x993025bb
  417078:	xchg   DWORD PTR [esi-0x67],eax
  41707b:	sbb    ebp,DWORD PTR [ebx-0x14705b42]
  417081:	mov    al,ds:0x67fdec36
  417086:	add    esi,DWORD PTR [ecx+0x3e]
  417089:	mov    ebp,0xd3350437
  41708e:	lods   al,BYTE PTR ds:[esi]
  41708f:	aam    0xe9
  417091:	(bad)  
  417092:	ja     0x4170e8
  417094:	xchg   ah,al
  417096:	xchg   ecx,eax
  417097:	sbb    DWORD PTR [eax+0x239d1f16],esp
  41709d:	fwait
  41709e:	sub    eax,0xfb310956
  4170a3:	xor    BYTE PTR [edi+0x24b4a1b],al
  4170a9:	jg     0x4170ff
  4170ab:	jo     0x4170e9
  4170ad:	xor    DWORD PTR [edi],eax
  4170af:	aas    
  4170b0:	push   ss
  4170b1:	sbb    bh,BYTE PTR [esi-0x25]
  4170b4:	cmp    eax,0xa11eeb8f
  4170b9:	jmp    0x6636374d
  4170be:	jp     0x417053
  4170c0:	push   eax
  4170c1:	pop    ebp
  4170c2:	dec    ebx
  4170c3:	stc    
  4170c4:	(bad)  
  4170c5:	adc    al,0x9c
  4170c7:	mov    DWORD PTR [ecx-0x1cfc70a2],ebp
  4170cd:	xor    DWORD PTR [eax-0x1337781f],ebp
  4170d3:	les    eax,FWORD PTR [ebp-0x4d1a69a3]
  4170d9:	sub    ah,0xa0
  4170dc:	inc    edx
  4170dd:	fild   QWORD PTR [edi]
  4170df:	cld    
  4170e0:	pop    ecx
  4170e1:	and    BYTE PTR [esi+0x74],ah
  4170e4:	lds    ebp,FWORD PTR [edi+0x66ba7602]
  4170ea:	fadd   st,st(5)
  4170ec:	mov    ch,ch
  4170ee:	and    DWORD PTR [esi],ebx
  4170f0:	das    
  4170f1:	test   al,0xad
  4170f3:	dec    ebp
  4170f4:	pop    ebp
  4170f5:	dec    edi
  4170f6:	mov    ch,0xc0
  4170f8:	adc    BYTE PTR [ebp-0x8],bl
  4170fb:	xchg   esi,eax
  4170fc:	push   edx
  4170fd:	sub    ecx,eax
  4170ff:	(bad)  
  417101:	inc    ecx
  417102:	leave  
  417103:	fisttp QWORD PTR [edi+0x68e0c279]
  417109:	arpl   WORD PTR [esi-0x2a],bp
  41710c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41710d:	dec    esi
  41710e:	(bad)  
  41710f:	popf   
  417110:	popa   
  417111:	xchg   dl,ah
  417113:	sar    BYTE PTR cs:[ecx+esi*4-0x7d],0xad
  417119:	xlat   BYTE PTR ds:[ebx]
  41711a:	mov    edi,0xa4e70945
  41711f:	outs   dx,BYTE PTR ds:[esi]
  417120:	push   ecx
  417121:	pop    edi
  417122:	jle    0x41719e
  417124:	enter  0x195e,0x58
  417128:	mov    edx,0x9f819880
  41712d:	push   ds
  41712e:	jnp    0x41719f
  417130:	push   es
  417131:	xor    al,0x78
  417133:	(bad)  [esi-0x4a]
  417136:	sub    BYTE PTR [ebx+0x8],ah
  417139:	inc    edx
  41713a:	adc    eax,0x3596b971
  41713f:	ins    DWORD PTR es:[edi],dx
  417140:	push   ecx
  417141:	xchg   ah,bh
  417143:	(bad)  
  417144:	les    ebp,FWORD PTR [ecx+ebp*1+0x42cb8d4c]
  41714b:	and    ch,BYTE PTR [ecx+0x318ffe7b]
  417151:	aaa    
  417152:	mov    ebp,0xe42aee64
  417157:	je     0x4170f9
  417159:	pop    ebp
  41715a:	inc    edi
  41715b:	push   ebx
  41715c:	lahf   
  41715d:	inc    ebx
  41715e:	lahf   
  41715f:	xchg   edi,eax
  417160:	stos   BYTE PTR es:[edi],al
  417161:	push   ebp
  417162:	pop    edi
  417163:	movntq QWORD PTR [edx*8+0x235c32fe],mm6
  41716b:	pusha  
  41716c:	xchg   esp,edi
  41716e:	push   ds
  41716f:	ret    0x1ae8
  417172:	dec    esp
  417173:	fucomip st,st(4)
  417175:	pop    es
  417176:	repz xchg bh,ah
  417179:	add    eax,0x46c3e528
  41717e:	jecxz  0x417139
  417180:	gs (bad) 
  417182:	and    eax,0xa7aad158
  417187:	jnp    0x41715b
  417189:	cld    
  41718a:	ins    BYTE PTR es:[edi],dx
  41718b:	mov    eax,ds:0xf8b0f828
  417190:	sahf   
  417191:	xor    ebx,esi
  417193:	inc    edx
  417194:	mov    ?,WORD PTR [esi-0x62ee99cb]
  41719a:	mov    ds:0x43e132ff,al
  41719f:	push   ebx
  4171a0:	jnp    0x4171f2
  4171a2:	pop    ebp
  4171a3:	sar    BYTE PTR [ebp-0x653492],0xed
  4171aa:	imul   esp,DWORD PTR [ebx],0x4ee385b3
  4171b0:	sbb    BYTE PTR [ebp-0x50],bh
  4171b3:	mov    ch,0x1
  4171b5:	or     ecx,edx
  4171b7:	icebp  
  4171b8:	push   0x5206ea2d
  4171bd:	adc    BYTE PTR [eax-0x44],0xd1
  4171c1:	fbld   TBYTE PTR [ebp-0x37e7b35b]
  4171c7:	push   edx
  4171c8:	xor    al,BYTE PTR [ebx+edx*2-0x68]
  4171cc:	adc    DWORD PTR [eax-0x137eb19f],edx
  4171d2:	cmp    al,0xab
  4171d4:	or     esp,eax
  4171d6:	sbb    esp,DWORD PTR [ebp+0x0]
  4171d9:	ret    
  4171da:	xchg   ecx,eax
  4171db:	int3   
  4171dc:	mov    ds:0x8b33e7a5,eax
  4171e1:	aaa    
  4171e2:	jo     0x4171ed
  4171e4:	inc    ebp
  4171e5:	adc    al,0x69
  4171e7:	cli    
  4171e8:	adc    ebp,DWORD PTR [edi-0x4d]
  4171eb:	cli    
  4171ec:	mov    edx,0xc6ba633a
  4171f1:	mov    bh,0x5a
  4171f3:	push   esi
  4171f4:	mov    ds:0xfbbcb20f,al
  4171f9:	loopne 0x4171d9
  4171fb:	dec    eax
  4171fc:	les    ecx,FWORD PTR [edx]
  4171fe:	sbb    eax,0x89d6fe4
  417203:	lock and DWORD PTR [edi],ebx
  417206:	in     al,dx
  417207:	int3   
  417208:	sub    cl,BYTE PTR [edi+0x1e]
  41720b:	loope  0x417211
  41720d:	cs pop eax
  41720f:	ret    
  417210:	inc    edi
  417211:	adc    BYTE PTR [eax-0x60],bh
  417214:	cmc    
  417215:	and    DWORD PTR [ecx+0x2],edi
  417218:	(bad)  
  417219:	dec    ecx
  41721a:	and    dh,BYTE PTR [edi+0x4ce603d1]
  417220:	fst    DWORD PTR ds:0x2261fe68
  417226:	outs   dx,DWORD PTR ds:[esi]
  417227:	or     BYTE PTR [eax+0x36],al
  41722a:	sub    al,0xfd
  41722c:	sbb    BYTE PTR [edx-0x2d0ab5b4],dh
  417232:	dec    esp
  417233:	inc    ebx
  417234:	(bad)  
  417235:	push   ds
  417236:	add    ebx,DWORD PTR [edi+0x73]
  417239:	test   al,0x18
  41723b:	adc    al,0x23
  41723d:	inc    ebx
  41723e:	pop    ds
  41723f:	bound  esi,QWORD PTR [eax+0x25]
  417242:	add    dl,BYTE PTR [ecx+esi*1-0x5c848030]
  417249:	push   eax
  41724a:	jle    0x417286
  41724c:	or     DWORD PTR [ebx+0x4ea9417a],edi
  417252:	mov    eax,edi
  417254:	xchg   ecx,eax
  417255:	repnz xor dl,dl
  417258:	mov    al,ds:0xc5709282
  41725d:	xor    al,al
  41725f:	cmp    al,0x5c
  417261:	and    BYTE PTR [edx],dh
  417263:	mov    WORD PTR [edi+0x549e07e2],bx
  41726a:	in     eax,dx
  41726b:	gs cmc 
  41726d:	mov    eax,ds:0x40441818
  417272:	jb     0x41729f
  417274:	mov    dl,0xbb
  417276:	mov    edi,0x47623cde
  41727b:	(bad)  
  41727c:	nop
  41727d:	cmp    eax,0xb5406e21
  417282:	cmp    ebx,DWORD PTR [eax+0x7]
  417285:	or     eax,DWORD PTR [ebp-0xd36d3cd]
  41728b:	jno    0x41727c
  41728d:	add    eax,0x8473954c
  417292:	jnp    0x4172f7
  417294:	mov    edx,edi
  417296:	loop   0x4172dd
  417298:	pop    eax
  417299:	mov    esp,0x8d2f3892
  41729e:	test   al,0xaf
  4172a0:	xor    eax,0x83ae412f
  4172a5:	(bad)  
  4172a6:	or     al,0x58
  4172a8:	sbb    al,0x3a
  4172aa:	sub    cl,bh
  4172ac:	mov    esi,0xf48ec248
  4172b1:	add    DWORD PTR [esi],esi
  4172b3:	pop    ss
  4172b4:	inc    eax
  4172b5:	lods   eax,DWORD PTR ds:[esi]
  4172b6:	adc    BYTE PTR [edi+edx*4+0x3a646600],ah
  4172bd:	out    dx,eax
  4172be:	inc    edi
  4172bf:	cmp    DWORD PTR [eax],edx
  4172c1:	inc    ebx
  4172c2:	fmul   st(5),st
  4172c4:	je     0x4172ab
  4172c6:	and    DWORD PTR [eax-0x2e06c106],esp
  4172cc:	mov    ebp,0xce2440c4
  4172d1:	ins    BYTE PTR es:[edi],dx
  4172d2:	mov    ds:0x4156b612,al
  4172d7:	out    0xf8,al
  4172d9:	mov    bl,0xc6
  4172db:	mov    ch,0x97
  4172dd:	mov    ebx,0xa56ee680
  4172e2:	jmp    DWORD PTR [ebx+0x272f950]
  4172e8:	ret    0x2044
  4172eb:	mov    bh,0xc4
  4172ed:	cmp    al,0xb2
  4172ef:	dec    esi
  4172f0:	stc    
  4172f1:	int3   
  4172f2:	mov    DWORD PTR [edi+edi*8],ebx
  4172f5:	and    esp,DWORD PTR [ebx]
  4172f7:	push   ss
  4172f8:	jg     0x417333
  4172fa:	ficomp DWORD PTR [ecx+esi*2]
  4172fd:	xchg   ecx,eax
  4172fe:	mov    edi,0x732f7b19
  417303:	mov    DWORD PTR [ecx+esi*4],esi
  417306:	mov    esp,0xf6cccb18
  41730b:	push   ds
  41730c:	inc    eax
  41730d:	cld    
  41730e:	lds    ecx,FWORD PTR [ebx+ecx*1-0x27153fab]
  417315:	idiv   DWORD PTR [eax+0x50]
  417318:	mov    bl,bl
  41731a:	stos   BYTE PTR es:[edi],al
  41731b:	js     0x417312
  41731d:	repz mov ah,0xee
  417320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417321:	aam    0xea
  417323:	inc    eax
  417324:	sub    DWORD PTR [edi],edx
  417326:	pop    ss
  417327:	lods   eax,DWORD PTR ds:[esi]
  417328:	sub    al,0x7e
  41732a:	push   cs
  41732b:	ja     0x41731f
  41732d:	xor    al,0x6c
  41732f:	lock push 0x9e0eb473
  417335:	xor    eax,0x775500ab
  41733a:	shl    DWORD PTR [ecx],cl
  41733c:	popf   
  41733d:	jns    0x4172d6
  41733f:	inc    ecx
  417340:	jo     0x417355
  417342:	ds shr dh,cl
  417345:	xchg   esi,eax
  417346:	clc    
  417347:	mov    edx,0x7be844ce
  41734c:	mov    bh,0xf9
  41734e:	js     0x4172da
  417350:	cdq    
  417351:	and    al,0xb4
  417353:	lea    esi,[eax+0x220bb061]
  417359:	or     al,0x27
  41735b:	in     eax,0x16
  41735d:	inc    esi
  41735e:	inc    edx
  41735f:	sbb    dh,ah
  417361:	push   0xffffffd2
  417363:	retf   0x8af5
  417366:	xchg   ebp,eax
  417367:	dec    ebx
  417368:	cmp    ebx,0x6ca1289e
  41736e:	(bad)  
  41736f:	(bad)  
  417370:	frstor [ecx]
  417372:	pushf  
  417373:	push   es
  417374:	sbb    eax,esp
  417376:	lock mov esp,0x514ec9dc
  41737c:	mov    cl,0xf8
  41737e:	aad    0x88
  417380:	pop    DWORD PTR [edx]
  417382:	push   eax
  417383:	xor    al,0x12
  417385:	cdq    
  417386:	ficom  DWORD PTR [ecx+ebp*1+0x79]
  41738a:	aaa    
  41738b:	sub    eax,0xcca1192f
  417390:	mov    ds:0xf0c28d8d,al
  417395:	sub    DWORD PTR [ebx+0x7d],ebp
  417398:	lods   ax,WORD PTR ds:[esi]
  41739a:	hlt    
  41739b:	dec    esp
  41739c:	sub    eax,0x6111f22c
  4173a1:	aas    
  4173a2:	mov    esp,DWORD PTR [edx+0x4f305fb4]
  4173a8:	jb     0x4173d3
  4173aa:	jmp    0x417387
  4173ac:	xchg   ebx,eax
  4173ad:	mov    edx,0x60bb81d4
  4173b2:	inc    ebp
  4173b3:	sub    al,dl
  4173b5:	jns    0x41737f
  4173b7:	pop    ds
  4173b8:	outs   dx,BYTE PTR ds:[esi]
  4173b9:	ror    al,cl
  4173bb:	popf   
  4173bc:	adc    BYTE PTR [edx],dh
  4173be:	mov    DWORD PTR [bx+di-0x49],edx
  4173c2:	cmp    esp,DWORD PTR [eax+0x42]
  4173c5:	ffree  st(3)
  4173c7:	test   BYTE PTR [esi+0x32c535ea],ah
  4173cd:	or     eax,DWORD PTR [edi-0x853c612]
  4173d3:	xchg   eax,ebx
  4173d5:	xchg   ebx,eax
  4173d6:	ins    DWORD PTR es:[edi],dx
  4173d7:	mov    ah,0x57
  4173d9:	ror    esp,0xf1
  4173dc:	push   edx
  4173dd:	and    DWORD PTR [ebx-0x54],0xffffffd1
  4173e1:	(bad)  
  4173e2:	out    dx,eax
  4173e3:	add    al,0x91
  4173e5:	popf   
  4173e6:	sub    ah,BYTE PTR [edi+edi*8-0x56]
  4173ea:	lock push edx
  4173ec:	aas    
  4173ed:	inc    ebx
  4173ee:	push   esi
  4173ef:	bound  ebp,QWORD PTR [ebp-0x38]
  4173f2:	icebp  
  4173f3:	test   al,0xae
  4173f5:	call   0x81d1:0xa3f171b
  4173fc:	pusha  
  4173fd:	sar    DWORD PTR [esi],cl
  4173ff:	lods   al,BYTE PTR ds:[esi]
  417400:	dec    edi
  417401:	inc    esp
  417402:	inc    esp
  417403:	push   es
  417404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417405:	imul   eax,DWORD PTR [edx],0x76
  417408:	pop    edx
  417409:	int    0x73
  41740b:	push   0x79
  41740d:	dec    esp
  41740e:	pop    edx
  41740f:	ret    
  417410:	in     eax,dx
  417411:	and    bl,BYTE PTR [edx-0x21]
  417414:	sub    al,0x4d
  417416:	xchg   ebx,eax
  417417:	sar    DWORD PTR [edx],cl
  417419:	and    DWORD PTR [edx+0x14a714e2],esi
  41741f:	push   ds
  417420:	retf   0xac0e
  417423:	pop    esi
  417424:	call   0xd888:0x2ecdb246
  41742b:	and    al,0xd2
  41742d:	out    dx,al
  41742e:	iret   
  41742f:	sbb    al,0x85
  417431:	push   edx
  417432:	leave  
  417433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417434:	cmp    al,0x7
  417436:	mov    es,WORD PTR [esi]
  417438:	push   edx
  417439:	mov    edi,0xb3f04128
  41743e:	inc    edx
  41743f:	mov    ?,WORD PTR [ecx+ecx*1]
  417442:	aad    0x54
  417444:	xchg   ebx,eax
  417445:	ror    BYTE PTR [edx-0x1b0c6d11],0x74
  41744c:	(bad)  
  41744d:	xchg   edi,eax
  41744e:	jae    0x41747e
  417450:	pop    ecx
  417451:	cmp    DWORD PTR [ebx+0xd5ee36f],0x3f
  417458:	pop    ds
  417459:	xlat   BYTE PTR ds:[ebx]
  41745a:	push   ds
  41745b:	sub    ecx,DWORD PTR [edx]
  41745d:	outs   dx,DWORD PTR ds:[esi]
  41745e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745f:	es push esi
  417461:	int    0x4c
  417463:	ror    BYTE PTR [esi+0x29750484],0x35
  41746a:	pop    edx
  41746b:	push   es
  41746c:	es popf 
  41746e:	div    eax
  417470:	stos   BYTE PTR es:[edi],al
  417471:	jae    0x4174f2
  417473:	jnp    0x41744b
  417475:	mov    cl,0xce
  417477:	stos   DWORD PTR es:[edi],eax
  417478:	neg    bh
  41747a:	imul   esp,eax,0x6de9925b
  417480:	rol    DWORD PTR [esi+0x6c1c7406],0x32
  417487:	hlt    
  417488:	nop
  417489:	std    
  41748a:	call   0xcc2a:0x648d844e
  417491:	xor    ecx,ecx
  417493:	dec    ecx
  417494:	inc    edx
  417495:	outs   dx,BYTE PTR ds:[esi]
  417496:	cmp    BYTE PTR [edi-0x60aa7920],ch
  41749c:	ss repz clc 
  41749f:	add    bh,BYTE PTR [ecx]
  4174a1:	jecxz  0x4174e0
  4174a3:	data16 sub dh,bl
  4174a6:	add    bl,BYTE PTR [edx]
  4174a8:	fninit 
  4174aa:	pop    eax
  4174ab:	xchg   edi,eax
  4174ac:	adc    ecx,DWORD PTR [edx]
  4174ae:	jecxz  0x417522
  4174b0:	and    ch,BYTE PTR [ecx-0x6500666f]
  4174b6:	and    ch,bl
  4174b8:	lods   al,BYTE PTR ds:[esi]
  4174b9:	shl    BYTE PTR [ebx+0x62],1
  4174bc:	or     ebx,ecx
  4174be:	add    al,0x6f
  4174c0:	xor    BYTE PTR [eax-0x7d22a0b2],dh
  4174c6:	mov    eax,0x2191bb1d
  4174cb:	sub    DWORD PTR [edi-0x4663d74b],0x8abeb875
  4174d5:	push   esp
  4174d6:	loope  0x41753b
  4174d8:	or     ebx,DWORD PTR [eax+0x2dc01cbd]
  4174de:	mov    esi,0x91bbbd21
  4174e3:	fadd   st,st(4)
  4174e5:	jo     0x41750c
  4174e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e8:	inc    ecx
  4174e9:	stc    
  4174ea:	ss pop edi
  4174ec:	adc    dl,BYTE PTR [edx+edx*8+0xdcce5ca]
  4174f3:	cdq    
  4174f4:	and    eax,0xb9932b05
  4174f9:	stc    
  4174fa:	push   edi
  4174fb:	test   BYTE PTR [edx+edi*2-0x1759945c],cl
  417502:	aas    
  417503:	add    al,0x3e
  417505:	les    ecx,FWORD PTR [edx]
  417507:	outs   dx,DWORD PTR ds:[esi]
  417508:	adc    bh,BYTE PTR [eax+0xd]
  41750b:	sub    bh,BYTE PTR [edx+esi*1+0x45bd3e5a]
  417512:	repz test cl,0xd1
  417516:	stos   DWORD PTR es:[edi],eax
  417517:	sbb    dl,BYTE PTR ss:[ebx+edx*4-0xfdf900d]
  41751f:	adc    eax,esi
  417521:	std    
  417522:	ss adc al,0x23
  417525:	aam    0xd5
  417527:	inc    eax
  417528:	sbb    ecx,0xeceb2573
  41752e:	clc    
  41752f:	jnp    0x4175b0
  417531:	jns    0x41754d
  417533:	pop    ebp
  417534:	cmp    al,0x3d
  417536:	mov    BYTE PTR [esi+0x4fc6fabc],al
  41753c:	leave  
  41753d:	sub    DWORD PTR [eax+0x4f],ebx
  417540:	pop    ss
  417541:	push   eax
  417542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417543:	cmp    eax,0x1c2bff61
  417548:	addr16 add dh,al
  41754b:	inc    ebx
  41754c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41754d:	jp     0x41754a
  41754f:	fdivr  QWORD PTR [ebx-0x43]
  417552:	or     eax,DWORD PTR [esi]
  417554:	add    dl,BYTE PTR [ecx+0x7a]
  417557:	adc    al,0x14
  417559:	inc    esp
  41755a:	mov    ch,0x38
  41755c:	or     al,0x57
  41755e:	cmp    al,0xef
  417560:	popf   
  417561:	mov    eax,ds:0x370a3e44
  417566:	inc    esi
  417567:	push   edi
  417568:	repz xchg ebx,eax
  41756a:	in     al,dx
  41756b:	in     al,dx
  41756c:	and    esi,DWORD PTR [eax+0x2d11913c]
  417572:	and    BYTE PTR [edi-0x11c42ce8],ah
  417578:	sbb    DWORD PTR [ebx+esi*8],esp
  41757b:	out    dx,eax
  41757c:	ins    DWORD PTR es:[edi],dx
  41757d:	pop    ecx
  41757e:	int    0xc1
  417580:	adc    DWORD PTR [esi-0x11],ebx
  417583:	xchg   ecx,eax
  417584:	inc    ebp
  417585:	inc    edx
  417586:	in     eax,0xb3
  417588:	out    0x68,eax
  41758a:	scas   al,BYTE PTR es:[edi]
  41758b:	jns    0x417608
  41758d:	xchg   ebp,eax
  41758e:	push   ebp
  41758f:	inc    esp
  417590:	enter  0x719c,0xe2
  417594:	inc    eax
  417595:	mov    BYTE PTR [esi],ch
  417597:	xchg   ecx,eax
  417598:	lea    edx,[esi]
  41759a:	xor    cl,BYTE PTR [ebp+0x2c16962f]
  4175a0:	pop    ebp
  4175a1:	fdivr  QWORD PTR [ebp-0x6bc329de]
  4175a7:	sbb    BYTE PTR [eax],dl
  4175a9:	add    ecx,ebp
  4175ab:	iret   
  4175ac:	and    BYTE PTR [esi-0x7d2a3de7],0x66
  4175b3:	mov    esp,0xa9a2e42b
  4175b8:	les    ecx,FWORD PTR [ecx-0x104b528b]
  4175be:	ret    
  4175bf:	pusha  
  4175c0:	xor    edx,esp
  4175c2:	loope  0x417553
  4175c4:	je     0x417568
  4175c6:	pusha  
  4175c7:	push   eax
  4175c8:	sbb    eax,0xee8b573b
  4175cd:	and    al,0xbf
  4175cf:	pop    eax
  4175d0:	sbb    BYTE PTR [edx-0x68],0xd4
  4175d4:	inc    ebp
  4175d5:	push   0x49a3635f
  4175da:	(bad)  
  4175db:	outs   dx,DWORD PTR ds:[esi]
  4175dc:	push   edi
  4175dd:	fsub   QWORD PTR [eax+0x2cff0625]
  4175e3:	out    0x9e,al
  4175e5:	or     DWORD PTR [esp+ecx*1],edi
  4175e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e9:	dec    edi
  4175ea:	cs jge 0x4175fa
  4175ed:	enter  0x8c33,0xf4
  4175f1:	enter  0x4380,0x52
  4175f5:	xor    ebx,DWORD PTR ds:0xe7d28c2a
  4175fb:	lahf   
  4175fc:	add    al,0xfe
  4175fe:	mov    esi,0xdbace7d9
  417603:	loope  0x417641
  417605:	les    ebp,FWORD PTR [edi+ebp*4+0x58]
  417609:	mov    gs,ebx
  41760b:	leave  
  41760c:	mov    ds:0x8492754b,al
  417611:	push   edi
  417612:	push   edx
  417613:	xchg   ebp,eax
  417614:	sar    BYTE PTR [edx+0x32515579],1
  41761a:	fmul   st(2),st
  41761c:	adc    eax,0xf1a9a9e7
  417621:	dec    eax
  417622:	mov    ch,BYTE PTR [ebp+0x6ad69b7a]
  417628:	mov    dl,0x9d
  41762a:	mov    ds:0xc9d42802,eax
  41762f:	dec    esp
  417630:	imul   edx,edi,0xfffffffe
  417633:	pop    ss
  417634:	aad    0x4c
  417636:	gs pop edx
  417638:	push   ebx
  417639:	add    edx,DWORD PTR [ecx-0x2b]
  41763c:	outs   dx,BYTE PTR ds:[esi]
  41763d:	sbb    BYTE PTR [ecx],cl
  41763f:	out    0x39,eax
  417641:	in     al,dx
  417642:	dec    ebp
  417643:	loopne 0x41763d
  417645:	aas    
  417646:	jecxz  0x4175f0
  417648:	cli    
  417649:	jge    0x4175f8
  41764b:	or     ah,bl
  41764d:	(bad)  
  41764e:	sub    BYTE PTR [ecx-0x519c861e],bl
  417654:	xor    al,0xce
  417656:	pushf  
  417657:	outs   dx,BYTE PTR ds:[esi]
  417658:	sub    DWORD PTR [ebx+0x65acb76c],0xffffffa9
  41765f:	jl     0x4176d8
  417661:	xlat   BYTE PTR ds:[ebx]
  417662:	rcl    DWORD PTR [edi-0x39cdfdc5],cl
  417668:	mov    esp,0xbfc22e07
  41766d:	test   DWORD PTR [ebp-0x20],0xd7f41881
  417674:	not    bl
  417676:	out    dx,al
  417677:	int3   
  417678:	inc    ebp
  417679:	ins    BYTE PTR es:[edi],dx
  41767a:	mov    cl,0x3c
  41767c:	ja     0x417615
  41767e:	out    0xb1,eax
  417680:	test   BYTE PTR [edx-0x1d2cfc5c],dh
  417686:	jge    0x417626
  417688:	bound  eax,QWORD PTR [eax-0x19]
  41768b:	(bad)  
  41768c:	mul    BYTE PTR [ebx-0x54facb0c]
  417692:	sbb    BYTE PTR [eax+0x73f4cf4f],0xdb
  417699:	push   esp
  41769a:	loopne 0x41765d
  41769c:	lahf   
  41769d:	daa    
  41769e:	sahf   
  41769f:	and    cl,BYTE PTR [eax+0x410da4d1]
  4176a5:	jmp    0xd3b0:0x39514700
  4176ac:	pop    esp
  4176ad:	hlt    
  4176ae:	(bad)  
  4176af:	fnsave [ecx]
  4176b1:	retf   
  4176b2:	jns    0x4176f1
  4176b4:	sbb    DWORD PTR [ebx],esi
  4176b6:	push   eax
  4176b7:	les    ecx,FWORD PTR [edx+ebx*2+0x224a488c]
  4176be:	push   ss
  4176bf:	sub    BYTE PTR [ebp-0x518da6a],0xa1
  4176c6:	retf   0xe50e
  4176c9:	push   ebp
  4176ca:	retf   
  4176cb:	inc    ebp
  4176cc:	neg    BYTE PTR [edi-0x6e]
  4176cf:	xor    ecx,edi
  4176d1:	leave  
  4176d2:	adc    al,BYTE PTR [edi+0x12]
  4176d5:	pop    ebx
  4176d6:	jg     0x417697
  4176d8:	in     eax,dx
  4176d9:	sub    al,0x3f
  4176db:	jo     0x41771a
  4176dd:	push   0x47f99ea2
  4176e2:	push   cs
  4176e3:	adc    DWORD PTR [edi],ecx
  4176e5:	shl    ebp,cl
  4176e7:	sub    eax,0xef4d381d
  4176ec:	scas   eax,DWORD PTR es:[edi]
  4176ed:	cmc    
  4176ee:	inc    ecx
  4176ef:	dec    BYTE PTR [edx+0x67]
  4176f2:	jg     0x417737
  4176f4:	retf   0xff8b
  4176f7:	and    bh,BYTE PTR [edx+0x7a]
  4176fa:	xchg   ebp,eax
  4176fb:	mov    BYTE PTR [ecx+0xe6f1726],bl
  417701:	push   0xbcb8ab40
  417706:	(bad)  
  417707:	iret   
  417708:	add    cl,BYTE PTR [edx+0x4ec397a7]
  41770e:	xor    ebp,0xffffffe3
  417711:	stc    
  417712:	pop    eax
  417713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417714:	fild   QWORD PTR [edi-0x365f17d4]
  41771a:	in     eax,0xe6
  41771c:	nop
  41771d:	pushf  
  41771e:	ss out 0x71,al
  417721:	sbb    edx,0x19bee502
  417727:	sub    DWORD PTR [eax-0x17],edi
  41772a:	stc    
  41772b:	push   ebp
  41772c:	jg     0x417739
  41772e:	(bad)  
  41772f:	push   0xe813320a
  417734:	popf   
  417735:	and    DWORD PTR [ecx+edi*8],0x4f
  417739:	iret   
  41773a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41773b:	xchg   edx,eax
  41773c:	xchg   esi,eax
  41773d:	arpl   bp,cx
  41773f:	dec    edi
  417740:	mov    dh,BYTE PTR [eax]
  417742:	xchg   ebp,eax
  417743:	mov    ch,al
  417745:	xchg   esp,eax
  417746:	scas   eax,DWORD PTR es:[edi]
  417747:	xchg   edx,eax
  417748:	jecxz  0x417753
  41774a:	(bad)  
  41774c:	bound  edi,QWORD PTR [edi+0x158f0f99]
  417752:	jmp    0xb8f8:0x65aa6c2d
  417759:	jg     0x4177d6
  41775b:	(bad)  
  41775c:	adc    eax,DWORD PTR [eax+0x151040c8]
  417762:	or     eax,0xba7a525
  417767:	adc    BYTE PTR [esi-0x5a944229],0xf6
  41776e:	sub    al,0xba
  417770:	mov    ebp,0x221c87c4
  417775:	sbb    eax,eax
  417777:	pop    es
  417778:	cmp    dh,cl
  41777a:	inc    edi
  41777b:	lods   eax,DWORD PTR ds:[esi]
  41777c:	inc    ebp
  41777d:	dec    ebx
  41777e:	mov    dl,0xe7
  417780:	not    DWORD PTR [ecx-0x4e11dc7e]
  417786:	or     edi,edx
  417788:	mov    ch,0x8f
  41778a:	xchg   DWORD PTR [ebx],esi
  41778c:	pop    ss
  41778d:	mov    bl,0x3d
  41778f:	dec    edi
  417790:	cwde   
  417791:	popa   
  417792:	test   BYTE PTR [edi-0x1533189a],al
  417798:	jle    0x4177be
  41779a:	fs enter 0xa00e,0x0
  41779f:	pop    eax
  4177a0:	mov    ds:0x513e673f,al
  4177a5:	test   DWORD PTR [edi+0x7cd4028f],edx
  4177ab:	lods   eax,DWORD PTR ds:[esi]
  4177ac:	or     BYTE PTR [esi],dl
  4177ae:	ds mov dl,0xcf
  4177b1:	adc    ah,dl
  4177b3:	mov    esi,esi
  4177b5:	dec    esp
  4177b6:	pop    ebp
  4177b7:	push   esi
  4177b8:	(bad)  
  4177b9:	inc    ecx
  4177ba:	loope  0x417776
  4177bc:	mov    ebx,0x54e51ca6
  4177c1:	imul   ecx,DWORD PTR [ebx],0xffffffae
  4177c4:	fisttp WORD PTR [esi+0x295e32a2]
  4177ca:	lahf   
  4177cb:	mov    BYTE PTR [ebp-0x34],al
  4177ce:	js     0x417771
  4177d0:	mov    al,ds:0x5a1fac05
  4177d5:	cld    
  4177d6:	xchg   edi,eax
  4177d7:	cdq    
  4177d8:	adc    al,0x64
  4177da:	lods   al,BYTE PTR ds:[esi]
  4177db:	cmp    DWORD PTR [ecx+0x59],esi
  4177de:	mov    ah,0x4
  4177e0:	out    0xd,eax
  4177e2:	pusha  
  4177e3:	hlt    
  4177e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e5:	stos   BYTE PTR es:[edi],al
  4177e6:	ret    
  4177e7:	jne    0x417847
  4177e9:	rol    BYTE PTR [esi-0x63],0x3a
  4177ed:	hlt    
  4177ee:	or     BYTE PTR [eax+0x18],0x85
  4177f2:	popf   
  4177f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f4:	jmp    0x8c5c2ee5
  4177f9:	dec    ebx
  4177fa:	outs   dx,DWORD PTR ds:[esi]
  4177fb:	test   BYTE PTR [ebx+0x19],0xd0
  4177ff:	(bad)  
  417800:	js     0x4177e0
  417802:	les    ebp,FWORD PTR [ebx-0x25a4943a]
  417808:	test   eax,0x21f6ce9d
  41780d:	popf   
  41780e:	or     DWORD PTR [edx+eax*8+0x18],ebx
  417812:	ret    0x8a36
  417815:	lahf   
  417816:	cld    
  417817:	mov    ch,0x29
  417819:	push   esp
  41781a:	jb     0x41788f
  41781c:	push   0xc21fe247
  417821:	or     bl,BYTE PTR [edx-0x1e]
  417824:	in     eax,0x23
  417826:	aad    0xea
  417828:	lea    ebp,ds:0x5c0b694b
  41782e:	and    ebp,DWORD PTR ds:0x21664b72
  417834:	dec    esp
  417835:	jb     0x4177e7
  417837:	and    al,ah
  417839:	lock and ch,0x61
  41783d:	push   esi
  41783e:	addr16 jmp 0xfad64adb
  417844:	popa   
  417845:	scas   al,BYTE PTR es:[edi]
  417846:	mov    ds:0x2c0e834e,eax
  41784b:	push   esp
  41784c:	jo     0x417894
  41784e:	pusha  
  41784f:	pushf  
  417850:	and    DWORD PTR [edx-0x46f11b09],0x95fe660b
  41785a:	and    ebx,esp
  41785c:	leave  
  41785d:	into   
  41785e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785f:	enter  0x9351,0x8b
  417863:	jo     0x4177ee
  417865:	jo     0x41786c
  417867:	lods   eax,DWORD PTR ds:[esi]
  417868:	imul   BYTE PTR [ebx+0x719e7460]
  41786e:	ror    cl,0xee
  417871:	cld    
  417872:	xlat   BYTE PTR ds:[ebx]
  417873:	sahf   
  417874:	sub    ch,BYTE PTR [esi+0x4838e861]
  41787a:	mov    esp,0xdf463d27
  41787f:	cld    
  417880:	(bad)  
  417881:	pusha  
  417882:	jae    0x417863
  417884:	pop    edi
  417885:	repz mov al,bh
  417888:	pop    ebp
  417889:	xor    edi,DWORD PTR [ebx-0x5536c948]
  41788f:	fisub  DWORD PTR [ebp+0x27]
  417892:	ficomp WORD PTR [ebp+ebp*8-0x17]
  417896:	or     BYTE PTR [ebx-0x544b8be5],0xa0
  41789d:	neg    BYTE PTR [edi]
  41789f:	nop
  4178a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a1:	push   es
  4178a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a3:	inc    edi
  4178a4:	mov    esp,0x6b88496b
  4178a9:	push   eax
  4178aa:	div    esi
  4178ac:	mov    ebx,0xd9035e85
  4178b1:	ret    0x1b50
  4178b4:	xlat   BYTE PTR ds:[ebx]
  4178b5:	dec    ebx
  4178b6:	mov    edi,0x2342cbf1
  4178bb:	retf   
  4178bc:	test   BYTE PTR [ecx],ah
  4178be:	and    edx,DWORD PTR [esp+eax*1+0x21672ca8]
  4178c5:	adc    bl,bl
  4178c7:	jmp    0x41788f
  4178c9:	push   ecx
  4178ca:	aaa    
  4178cb:	jae    0x41789d
  4178cd:	inc    eax
  4178ce:	or     ecx,DWORD PTR [ebp+0x45]
  4178d1:	push   ebx
  4178d2:	jno    0x41786d
  4178d4:	sbb    eax,0x747387c9
  4178d9:	je     0x417934
  4178db:	and    BYTE PTR [ecx+eiz*8-0x30421747],cl
  4178e2:	mov    bl,0xe
  4178e4:	sti    
  4178e5:	dec    eax
  4178e6:	inc    ebp
  4178e7:	popa   
  4178e8:	mov    DWORD PTR [edx+0x1fd72a60],eax
  4178ee:	xor    eax,0xbf67d20b
  4178f3:	mov    DWORD PTR [ecx+0x4c],ecx
  4178f6:	test   DWORD PTR [esi+0x1],edx
  4178f9:	inc    esp
  4178fa:	pusha  
  4178fb:	aas    
  4178fc:	or     DWORD PTR [edi],edx
  4178fe:	push   0x2988a9fa
  417903:	sub    BYTE PTR ds:0x99479788,bl
  417909:	mov    dl,ah
  41790b:	dec    ebx
  41790c:	js     0x41795a
  41790e:	push   cs
  41790f:	jp     0x417943
  417911:	aaa    
  417912:	mov    edi,0x505508cc
  417917:	push   esi
  417918:	jnp    0x4178fb
  41791a:	ins    DWORD PTR es:[edi],dx
  41791b:	sub    al,0x49
  41791d:	xor    edx,ebp
  41791f:	stos   BYTE PTR es:[edi],al
  417920:	inc    esi
  417921:	sti    
  417922:	mov    eax,0x2d09a14c
  417927:	test   al,0x88
  417929:	lock push cs
  41792b:	mov    esi,0xea281354
  417930:	pop    ds
  417931:	outs   dx,BYTE PTR ds:[esi]
  417932:	jns    0x417942
  417934:	sub    eax,0xeed116bf
  417939:	or     BYTE PTR [ebx],ah
  41793b:	inc    ebp
  41793c:	jp     0x4178ea
  41793e:	ret    0x8713
  417941:	mov    esi,0xb076a184
  417946:	dec    esi
  417947:	pop    eax
  417948:	scas   al,BYTE PTR es:[edi]
  417949:	ret    
  41794a:	dec    eax
  41794b:	test   BYTE PTR es:[ebx+0x4ca6406e],cl
  417952:	cdq    
  417953:	or     edx,DWORD PTR [ebp+0x3270aa5a]
  417959:	jnp    0x4179b7
  41795b:	mov    eax,ds:0x59253ed9
  417960:	sub    al,BYTE PTR [ecx+0x4a]
  417963:	jmp    0x50d4:0x79f07d55
  41796a:	mov    eax,ds:0xc30296f1
  41796f:	mov    DWORD PTR [ebp+0xb6238e4],edx
  417975:	push   ss
  417976:	test   DWORD PTR [eax-0x2d],eax
  417979:	iret   
  41797a:	stos   DWORD PTR es:[edi],eax
  41797b:	push   0x8a4b06e1
  417980:	push   DWORD PTR [esi+0x2c52d624]
  417986:	sbb    ah,BYTE PTR [ecx+0x1a]
  417989:	ja     0x4179ed
  41798b:	adc    eax,0xd6c84f43
  417990:	(bad)  [edi+0x1a53d9db]
  417996:	scas   eax,DWORD PTR es:[edi]
  417997:	test   al,0xae
  417999:	outs   dx,DWORD PTR ds:[esi]
  41799a:	or     DWORD PTR [ebx],esp
  41799c:	or     ah,cl
  41799e:	push   ebx
  41799f:	pusha  
  4179a0:	scas   al,BYTE PTR es:[edi]
  4179a1:	mov    ch,0x56
  4179a3:	xor    al,0x3d
  4179a5:	in     al,dx
  4179a6:	jge    0x4179f4
  4179a8:	cld    
  4179a9:	dec    esp
  4179aa:	mov    dh,BYTE PTR [eax+0x17]
  4179ad:	inc    ecx
  4179ae:	stc    
  4179af:	jmp    0x417a1c
  4179b1:	inc    ebp
  4179b2:	les    ebx,FWORD PTR [edx+0x95379be]
  4179b8:	push   ecx
  4179b9:	xchg   ecx,eax
  4179ba:	xchg   ecx,eax
  4179bb:	sbb    cl,BYTE PTR [ecx-0x77]
  4179be:	mov    ecx,0xfab1a7da
  4179c3:	push   ss
  4179c4:	(bad)  [edx]
  4179c6:	ret    
  4179c7:	jle    0x417965
  4179c9:	mov    ds:0x8e3ad2f4,al
  4179ce:	pop    esi
  4179cf:	xlat   BYTE PTR ds:[ebx]
  4179d0:	or     eax,0x1deccd2b
  4179d5:	dec    ecx
  4179d6:	bound  ecx,QWORD PTR [eax]
  4179d8:	out    dx,al
  4179d9:	lds    esp,FWORD PTR [ebx]
  4179db:	out    0x3c,eax
  4179dd:	mov    cl,0xdc
  4179df:	cmp    esp,DWORD PTR [esi+0x7f8219c5]
  4179e5:	div    DWORD PTR [ebp-0x2a]
  4179e8:	sub    edi,DWORD PTR [ecx+0x6c7b2547]
  4179ee:	lods   al,BYTE PTR ds:[esi]
  4179ef:	add    dh,BYTE PTR [edx]
  4179f1:	enter  0x1c4e,0x3c
  4179f5:	lds    edi,FWORD PTR [eax+0x705a3e72]
  4179fb:	sub    DWORD PTR [ebx],esp
  4179fd:	and    BYTE PTR [ecx+0x3b],0xb4
  417a01:	mov    dh,cl
  417a03:	sahf   
  417a04:	fiadd  DWORD PTR [edx+0x0]
  417a07:	cwde   
  417a08:	pop    ebx
  417a09:	fadd   QWORD PTR [ebx-0xb83aa8a]
  417a0f:	imul   ebp,edi,0xef7eb99f
  417a15:	arpl   WORD PTR [edi+0x17],di
  417a18:	xor    bh,cl
  417a1a:	inc    edi
  417a1b:	fmul   QWORD PTR [ebp+esi*4-0x1f]
  417a1f:	scas   al,BYTE PTR es:[edi]
  417a20:	dec    ebp
  417a21:	mov    ebx,0x7827c513
  417a26:	xchg   esp,eax
  417a27:	mov    al,ds:0x37520167
  417a2c:	sub    eax,0xe4f3be53
  417a31:	xchg   esi,eax
  417a32:	pop    ebp
  417a33:	mov    ch,0x92
  417a35:	mov    esi,0xc075c3
  417a3a:	ss sbb al,0x66
  417a3d:	retf   0x6cdc
  417a40:	jnp    0x417a70
  417a42:	(bad)  
  417a43:	lock xor dh,0xe0
  417a47:	out    dx,eax
  417a48:	aam    0x17
  417a4a:	cmp    eax,0xde55d7e4
  417a4f:	jmp    0xae8a8cb8
  417a54:	out    0x8c,al
  417a56:	cdq    
  417a57:	ja     0x417a85
  417a59:	adc    eax,0xb053ab9c
  417a5e:	loope  0x4179ed
  417a60:	neg    DWORD PTR [eax-0x70]
  417a63:	dec    esp
  417a64:	sub    esi,DWORD PTR [edx+esi*4+0x5207d986]
  417a6b:	jmp    0xe6bfdc9
  417a70:	add    DWORD PTR [ebx+0x74],esp
  417a73:	jg     0x417a0d
  417a75:	and    al,0x6d
  417a77:	adc    al,0x87
  417a79:	xchg   BYTE PTR [ecx-0x6e],cl
  417a7c:	inc    eax
  417a7d:	(bad)  
  417a7e:	mov    eax,ds:0x23febf9b
  417a83:	pop    edx
  417a84:	pop    eax
  417a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a86:	dec    edi
  417a87:	ror    BYTE PTR [ebx-0x79],cl
  417a8a:	ror    BYTE PTR [esi+edi*4],1
  417a8d:	neg    ah
  417a8f:	xchg   ecx,eax
  417a90:	or     ah,BYTE PTR [ecx+0x1e]
  417a93:	mov    eax,0x37165c6e
  417a98:	ss cmp eax,0x1f70e39e
  417a9e:	jae    0x417aea
  417aa0:	push   es
  417aa1:	outs   dx,BYTE PTR ds:[esi]
  417aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa3:	sub    eax,0xfeb8d86e
  417aa8:	sub    al,0x19
  417aaa:	xchg   edx,eax
  417aab:	mov    DWORD PTR [ebx-0x4682930b],esi
  417ab1:	mov    cl,0xd7
  417ab3:	xchg   ebp,eax
  417ab4:	dec    eax
  417ab5:	sysret 
  417ab7:	aas    
  417ab8:	jae    0x417b09
  417aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417abb:	add    ch,BYTE PTR [eax+0x1403f17]
  417ac1:	inc    edx
  417ac2:	in     al,0x6b
  417ac4:	jl     0x417b39
  417ac6:	addr16 out dx,ax
  417ac9:	stos   BYTE PTR es:[edi],al
  417aca:	adc    ah,dh
  417acc:	inc    eax
  417acd:	push   eax
  417ace:	pop    ebx
  417acf:	pushf  
  417ad0:	call   0xa95f:0x1fe091dc
  417ad7:	pop    eax
  417ad8:	push   ds
  417ad9:	sar    DWORD PTR [esi-0x50a8de39],cl
  417adf:	cld    
  417ae0:	push   ebp
  417ae1:	or     DWORD PTR [ebp+0x46],ecx
  417ae4:	xchg   edi,eax
  417ae5:	daa    
  417ae6:	mov    ds:0xf91cbf2f,eax
  417aeb:	or     al,0xb7
  417aed:	xor    al,0x65
  417aef:	out    dx,al
  417af0:	jp     0x417ad9
  417af2:	aaa    
  417af3:	mov    ch,0x76
  417af5:	xchg   ebx,eax
  417af6:	test   al,0x5e
  417af8:	cmp    al,0x68
  417afa:	cmp    BYTE PTR [eax],dh
  417afc:	or     BYTE PTR [ecx-0x3ba1a579],cl
  417b02:	dec    ebx
  417b03:	sub    DWORD PTR [esi+eiz*4+0x7fecf0f5],esp
  417b0a:	xor    DWORD PTR [ebp+0x4a0f5aa4],0xffffffa9
  417b11:	add    edx,eax
  417b13:	xor    ah,bl
  417b15:	and    al,0xca
  417b17:	jge    0x417aad
  417b19:	or     DWORD PTR [ebx],0xffffffc0
  417b1c:	dec    ebp
  417b1d:	arpl   WORD PTR [edx+0x47c35ac1],si
  417b23:	add    bh,BYTE PTR [eax-0x3b9cd68a]
  417b29:	cmc    
  417b2a:	lods   eax,DWORD PTR ds:[esi]
  417b2b:	(bad)  
  417b2c:	pop    edx
  417b2d:	inc    ebx
  417b2e:	ins    BYTE PTR es:[edi],dx
  417b2f:	fldz   
  417b31:	jbe    0x417ac2
  417b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b34:	and    cl,BYTE PTR cs:[edi-0x373bd7d0]
  417b3b:	ror    edi,1
  417b3d:	add    dl,bl
  417b3f:	mov    eax,0x2b1dc08c
  417b44:	xor    al,0x16
  417b46:	stos   BYTE PTR es:[edi],al
  417b47:	int    0x66
  417b49:	fs gs int 0x4f
  417b4d:	aad    0x8
  417b4f:	fwait
  417b50:	rcr    DWORD PTR [ebx+0x3c7220dd],0x39
  417b57:	outs   dx,BYTE PTR ds:[esi]
  417b58:	je     0x417b0e
  417b5a:	cmp    eax,DWORD PTR ds:0xa0e61b05
  417b60:	(bad)  
  417b61:	jmp    0x417bce
  417b63:	adc    al,0x33
  417b65:	sar    ah,0x8e
  417b68:	inc    esp
  417b69:	lods   eax,DWORD PTR ds:[esi]
  417b6a:	rcr    DWORD PTR [eax],1
  417b6c:	and    esp,edx
  417b6e:	hlt    
  417b6f:	shl    dl,cl
  417b71:	inc    ebp
  417b72:	clc    
  417b73:	cli    
  417b74:	adc    eax,DWORD PTR [edi+0xc]
  417b77:	jmp    0xb92ed221
  417b7c:	mov    esp,0xa40360d
  417b81:	add    ch,BYTE PTR [ebx]
  417b83:	and    al,0xe2
  417b85:	jb     0x417be4
  417b87:	cs jmp 0xfe3c1791
  417b8d:	push   0x34
  417b8f:	sbb    eax,0x9f79dcfa
  417b94:	cdq    
  417b95:	test   edx,esi
  417b97:	jmp    0xec19:0x5459f61a
  417b9e:	std    
  417b9f:	inc    ebx
  417ba0:	daa    
  417ba1:	jno    0x417ba0
  417ba3:	cmp    BYTE PTR es:[eax-0x46409992],dl
  417baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bab:	xlat   BYTE PTR ds:[ebx]
  417bac:	mov    ecx,0x6ecc2239
  417bb1:	iret   
  417bb2:	int3   
  417bb3:	out    0x7c,eax
  417bb5:	mov    BYTE PTR [ebx+0x6c],0x23
  417bb9:	imul   esp,esp,0x78acbb16
  417bbf:	mov    ds:0x801cc452,al
  417bc4:	pop    edx
  417bc5:	push   esp
  417bc6:	retf   0x1d8c
  417bc9:	mov    edx,0x2333bba3
  417bce:	pop    es
  417bcf:	jae    0x417ba3
  417bd1:	cmp    al,0x18
  417bd3:	lods   eax,DWORD PTR ds:[esi]
  417bd4:	inc    eax
  417bd5:	jp     0x417bbf
  417bd7:	inc    ecx
  417bd8:	imul   ebx,DWORD PTR [ecx+0x8de9ef9],0x23
  417bdf:	push   eax
  417be0:	jmp    0x8dff:0xf685cbef
  417be7:	jmp    0xdfc2:0x5872947b
  417bee:	mov    ds:0x3397aa1d,eax
  417bf3:	adc    bh,dh
  417bf5:	out    0xa3,eax
  417bf7:	retf   0xeaef
  417bfa:	mov    cl,0x60
  417bfc:	repnz shl DWORD PTR [ebp-0x2b],1
  417c00:	or     BYTE PTR [eax],bh
  417c02:	ins    DWORD PTR es:[edi],dx
  417c03:	sahf   
  417c04:	rdmsr  
  417c06:	push   0xb
  417c08:	cld    
  417c09:	sbb    BYTE PTR ds:[esi-0x63bc37b4],al
  417c10:	cs cld 
  417c12:	inc    ebp
  417c13:	call   0xa06c63a0
  417c18:	frstorw [ebx+eiz*2]
  417c1c:	xchg   ebp,eax
  417c1d:	push   es
  417c1e:	pop    ebp
  417c1f:	jmp    0x4c54:0xaa099e4d
  417c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c27:	lahf   
  417c28:	sti    
  417c29:	mov    ds:0xdd6bb341,eax
  417c2e:	and    DWORD PTR [eax-0x4ff737d7],0xc51b3daa
  417c38:	ja     0x417c15
  417c3a:	cld    
  417c3b:	nop
  417c3c:	xor    ebp,DWORD PTR [edx-0x72b71b90]
  417c42:	and    al,0x66
  417c44:	shr    BYTE PTR [edx],cl
  417c46:	and    BYTE PTR [edi+0x213cbf0],al
  417c4c:	sub    ebp,DWORD PTR [edi]
  417c4e:	loop   0x417c9a
  417c50:	push   esi
  417c51:	clc    
  417c52:	xchg   DWORD PTR [ecx],eax
  417c54:	pop    eax
  417c55:	pop    esi
  417c56:	adc    al,0x66
  417c58:	jp     0x417c33
  417c5a:	jnp    0x417bf4
  417c5c:	mov    al,ds:0xca3b04a3
  417c61:	ins    DWORD PTR es:[edi],dx
  417c62:	daa    
  417c63:	pop    ss
  417c64:	fistp  WORD PTR [edx+0x7a]
  417c67:	inc    edi
  417c68:	mov    ebx,DWORD PTR [esi-0x73]
  417c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c6c:	retf   
  417c6d:	mov    ecx,DWORD PTR [eax-0xbd0dece]
  417c73:	inc    eax
  417c74:	add    esi,DWORD PTR [edx+edi*8]
  417c77:	mov    eax,0x3f9f21bd
  417c7c:	cli    
  417c7d:	xchg   ecx,eax
  417c7e:	pop    ds
  417c7f:	sub    al,0xaa
  417c81:	pusha  
  417c82:	cmp    bl,BYTE PTR [esi]
  417c84:	or     ch,bh
  417c86:	sbb    bh,BYTE PTR [edx]
  417c88:	lds    eax,FWORD PTR [ebx-0x39]
  417c8b:	int3   
  417c8c:	loopne 0x417c90
  417c8e:	lds    esp,FWORD PTR [ebx-0xfacdbe5]
  417c94:	adc    al,0xfb
  417c96:	aaa    
  417c97:	icebp  
  417c98:	daa    
  417c99:	lock xchg eax,ecx
  417c9c:	rcl    DWORD PTR ds:0x11946ef5,1
  417ca2:	cli    
  417ca3:	mov    dh,0x1f
  417ca5:	(bad)  
  417ca6:	sar    DWORD PTR [eax],1
  417ca8:	pop    ds
  417ca9:	shl    ebx,cl
  417cab:	pop    eax
  417cac:	arpl   cx,bp
  417cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417caf:	cmp    ebx,DWORD PTR [edx+0x7d]
  417cb2:	jg     0x417ccf
  417cb4:	cmp    DWORD PTR [eax+0x2b8c3016],edi
  417cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cbb:	out    0xfe,eax
  417cbd:	mov    ?,ebx
  417cbf:	pop    edx
  417cc0:	aas    
  417cc1:	pop    ecx
  417cc2:	xor    eax,0xdde95ea
  417cc7:	iret   
  417cc8:	push   ebx
  417cc9:	fsub   QWORD PTR [ebx-0x39]
  417ccc:	push   ebp
  417ccd:	or     dh,ah
  417ccf:	pop    esi
  417cd0:	popf   
  417cd1:	sbb    esp,edi
  417cd3:	pop    ebx
  417cd4:	aad    0xa0
  417cd6:	mov    bh,0x9f
  417cd8:	les    esp,FWORD PTR [eax+0x6d]
  417cdb:	aam    0xd
  417cdd:	sbb    al,0x5f
  417cdf:	ins    DWORD PTR es:[edi],dx
  417ce0:	mov    dh,0x43
  417ce2:	pusha  
  417ce3:	mov    al,ds:0x6aedc483
  417ce8:	mov    ecx,0xaa1aa172
  417ced:	mov    dh,0xf6
  417cef:	sbb    bl,BYTE PTR [ebx]
  417cf1:	dec    ebp
  417cf2:	mov    ds:0x62d74377,al
  417cf7:	sbb    edi,edi
  417cf9:	cmp    eax,0x91126489
  417cfe:	retf   0x4749
  417d01:	repz leave 
  417d03:	pop    ebx
  417d04:	jge    0x417cb5
  417d06:	(bad)  
  417d07:	jmp    0x9d34:0xd02390ee
  417d0e:	and    al,0x4f
  417d10:	xchg   esp,eax
  417d11:	dec    edi
  417d12:	push   ss
  417d13:	dec    edi
  417d14:	inc    edx
  417d15:	mov    al,0x52
  417d17:	cdq    
  417d18:	or     eax,0x75f5ef91
  417d1d:	scas   al,BYTE PTR es:[edi]
  417d1e:	add    ebp,DWORD PTR [edi+ebp*1]
  417d21:	xchg   ebp,eax
  417d22:	push   0x74
  417d24:	sbb    dl,0x6e
  417d27:	push   ebp
  417d28:	js     0x417da6
  417d2a:	inc    eax
  417d2b:	push   ds
  417d2c:	les    esi,FWORD PTR [edi-0x30f0f87a]
  417d32:	ins    DWORD PTR es:[edi],dx
  417d33:	les    esp,FWORD PTR [eax]
  417d35:	fst    DWORD PTR [edx+0x6adf57b5]
  417d3b:	mov    edi,0xcffe350b
  417d40:	xchg   ebx,eax
  417d41:	cmove  esi,DWORD PTR [esi+0x6d]
  417d45:	push   ebp
  417d46:	popf   
  417d47:	mov    dl,0xe0
  417d49:	call   0x8de1:0x467a4ef
  417d50:	ror    dl,0x80
  417d53:	push   cs
  417d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d55:	mov    ds:0x49ddd687,al
  417d5a:	sub    eax,0x710dea09
  417d5f:	loope  0x417daf
  417d61:	push   cs
  417d62:	dec    edx
  417d63:	nop
  417d64:	nop
  417d65:	out    dx,eax
  417d66:	and    al,0x14
  417d68:	mov    ah,0xe8
  417d6a:	inc    esp
  417d6b:	lock mov al,0x9e
  417d6e:	jmp    0x417d71
  417d70:	xchg   edi,eax
  417d71:	lds    esp,FWORD PTR [eax+0x73036fba]
  417d77:	push   ds
  417d78:	xor    DWORD PTR [eax+0x355d0737],eax
  417d7e:	pop    ebp
  417d7f:	mov    ebx,0x829dcb5f
  417d84:	out    dx,eax
  417d85:	add    al,0x5e
  417d87:	cmp    edi,ebp
  417d89:	(bad)  
  417d8a:	call   0x5e7ce20a
  417d8f:	lods   eax,DWORD PTR ds:[esi]
  417d90:	xchg   esi,eax
  417d91:	rol    BYTE PTR [edi+0x10a51405],cl
  417d97:	push   ebp
  417d98:	add    ah,al
  417d9a:	ret    0xccfc
  417d9d:	rcr    BYTE PTR [edi-0x56b1aa1b],0x89
  417da4:	mov    ds,WORD PTR [esi]
  417da6:	pop    ds
  417da7:	sub    DWORD PTR ds:0x1262221f,eax
  417dad:	(bad)  
  417dae:	xor    BYTE PTR [ebx],dl
  417db0:	je     0x417dd7
  417db2:	push   0x7dc8409e
  417db7:	inc    eax
  417db8:	adc    DWORD PTR [ebp+0x735eb14b],esp
  417dbe:	jnp    0x417d87
  417dc0:	mov    gs,WORD PTR [ecx+eax*2+0x72]
  417dc4:	lds    ebx,FWORD PTR [edi+0x4b]
  417dc7:	aaa    
  417dc8:	add    al,0x7a
  417dca:	adc    ecx,DWORD PTR [edi]
  417dcc:	jmp    0xdd9d8eeb
  417dd1:	adc    dh,BYTE PTR [esi+0x33d8c963]
  417dd7:	sbb    DWORD PTR [ecx+0x5bd686cc],0x27201cca
  417de1:	retf   0x3668
  417de4:	test   DWORD PTR [ebx+0x3dec4166],eax
  417dea:	jno    0x417e05
  417dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ded:	retf   0xedbc
  417df0:	ror    BYTE PTR [ecx+esi*1+0x5604835c],1
  417df7:	mov    ebp,0xe2d6919e
  417dfc:	ds push es
  417dfe:	xor    ecx,ecx
  417e00:	adc    DWORD PTR [eax-0x4e565077],ecx
  417e06:	out    dx,eax
  417e07:	xchg   DWORD PTR [eax+ecx*4],esi
  417e0a:	aas    
  417e0b:	nop
  417e0c:	xchg   esp,ecx
  417e0e:	jmp    0x445d59e4
  417e13:	inc    esp
  417e14:	daa    
  417e15:	pop    ds
  417e16:	in     al,0x92
  417e18:	mov    DWORD PTR [eax],eax
  417e1a:	jb     0x417e44
  417e1c:	sahf   
  417e1d:	and    BYTE PTR es:[esi+0x3da69215],al
  417e24:	call   0x76ee6ae1
  417e29:	mov    eax,0xc92685ab
  417e2e:	push   ss
  417e2f:	mov    ebp,0x77029f68
  417e34:	jnp    0x417e5b
  417e36:	jae    0x417dee
  417e38:	arpl   ax,sp
  417e3a:	repnz push ecx
  417e3c:	(bad)  
  417e3d:	pushf  
  417e3e:	mov    cl,0xff
  417e40:	pop    edi
  417e41:	int    0xbc
  417e43:	bound  ebp,QWORD PTR [ecx+0x772613eb]
  417e49:	adc    eax,edi
  417e4b:	out    dx,eax
  417e4c:	sar    BYTE PTR [esi-0x29],cl
  417e4f:	xchg   edi,eax
  417e50:	add    DWORD PTR [edx+edx*2+0x44],0xfffffffa
  417e55:	inc    ecx
  417e56:	outs   dx,DWORD PTR ds:[esi]
  417e57:	retf   
  417e58:	mov    WORD PTR [edx+0xb],?
  417e5b:	lea    edx,[ecx-0x34]
  417e5e:	into   
  417e5f:	shl    DWORD PTR [ebx-0x38],cl
  417e62:	xchg   esp,eax
  417e63:	jg     0x417de8
  417e65:	pop    ebx
  417e66:	fldln2 
  417e68:	shl    ch,cl
  417e6a:	inc    esi
  417e6b:	mov    bl,0xef
  417e6d:	ror    DWORD PTR [ebp-0x527d2f46],1
  417e73:	jmp    0x417ec6
  417e75:	fcmovnb st,st(6)
  417e77:	in     eax,0x21
  417e79:	out    0x75,eax
  417e7b:	mov    ch,0x3f
  417e7d:	xchg   esi,eax
  417e7e:	int3   
  417e7f:	inc    ebx
  417e80:	add    DWORD PTR [edi],ebx
  417e82:	xlat   BYTE PTR ds:[ebx]
  417e83:	popa   
  417e84:	fs scas eax,DWORD PTR es:[edi]
  417e86:	push   0x67
  417e88:	add    eax,0x1dbfe83d
  417e8d:	or     DWORD PTR [ecx+ebx*2],0x72f108a9
  417e94:	inc    ebx
  417e95:	int3   
  417e96:	mov    BYTE PTR [ebx],dh
  417e98:	pop    eax
  417e99:	aam    0xd4
  417e9b:	pusha  
  417e9c:	xchg   esi,eax
  417e9d:	add    eax,0x46403f9
  417ea2:	rcr    DWORD PTR [esi+ebp*1-0x47c4ef6b],1
  417ea9:	dec    ebp
  417eaa:	dec    esi
  417eab:	aam    0xc3
  417ead:	jns    0x417f1f
  417eaf:	push   es
  417eb0:	and    ebx,DWORD PTR [edx-0x24cf684b]
  417eb6:	mul    BYTE PTR [ebx]
  417eb8:	fbstp  TBYTE PTR [eax+ecx*2-0x10]
  417ebc:	sub    eax,0xaf7da56f
  417ec1:	xchg   DWORD PTR [edi],ecx
  417ec3:	jp     0x417e8a
  417ec5:	jl     0x417ee2
  417ec7:	jnp    0x417f2d
  417ec9:	adc    BYTE PTR [ebp-0x22d22e07],0x97
  417ed0:	in     al,0x12
  417ed2:	xchg   edx,eax
  417ed3:	jecxz  0x417e65
  417ed5:	in     eax,dx
  417ed6:	mov    ebp,0x89afe75e
  417edb:	xchg   edx,edi
  417edd:	call   DWORD PTR [edx+edi*2]
  417ee0:	imul   ebp,DWORD PTR [ebx],0xffffff82
  417ee3:	jge    0x417e68
  417ee5:	add    eax,0x15ba60ff
  417eea:	cdq    
  417eeb:	mov    ds:0x59b33e3a,al
  417ef0:	mov    bl,0xd9
  417ef2:	sar    DWORD PTR [ebp+0x5abc9dde],0x0
  417ef9:	or     al,0x19
  417efb:	sub    ecx,edi
  417efd:	pop    ebx
  417efe:	mov    ecx,0xe9c7b9ad
  417f03:	mov    ebx,0x5d1ac2ed
  417f08:	and    BYTE PTR [eax-0x345be86c],ah
  417f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0f:	(bad)  
  417f10:	push   esp
  417f11:	cmp    edi,DWORD PTR [eax+0x6c383005]
  417f17:	mov    ds:0x40e662ca,eax
  417f1c:	fistp  DWORD PTR [edx-0x5c]
  417f1f:	cmp    eax,0x442c711f
  417f24:	in     al,0x26
  417f26:	pushf  
  417f27:	fst    st(6)
  417f29:	pop    eax
  417f2a:	cmp    dl,BYTE PTR [edi+eax*2]
  417f2d:	jo     0x417eb8
  417f2f:	jbe    0x417f50
  417f31:	dec    edi
  417f32:	and    al,0x2f
  417f34:	pop    ds
  417f35:	cs xchg ebx,eax
  417f37:	cmp    al,0x72
  417f39:	stc    
  417f3a:	push   0x218f7480
  417f3f:	ror    BYTE PTR [esp+esi*2+0x34],cl
  417f43:	outs   dx,DWORD PTR ds:[esi]
  417f44:	cs sbb esi,edx
  417f47:	or     ebp,DWORD PTR [ecx+0x18]
  417f4a:	cld    
  417f4b:	mov    ebp,0x74f36d50
  417f50:	ror    DWORD PTR [ebx],0xa8
  417f53:	push   edi
  417f54:	mov    esp,0x77ceffd4
  417f59:	aad    0xe
  417f5b:	in     al,0xe7
  417f5d:	imul   esi,DWORD PTR [edx],0x6d324691
  417f63:	loop   0x417f84
  417f65:	ret    
  417f66:	pushf  
  417f67:	stos   DWORD PTR es:[edi],eax
  417f68:	fsubp  st(5),st
  417f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f6b:	pusha  
  417f6c:	pushf  
  417f6d:	fs or  ebp,esi
  417f70:	sahf   
  417f71:	pop    edx
  417f72:	into   
  417f73:	out    dx,eax
  417f74:	xchg   ch,ch
  417f76:	xchg   esp,eax
  417f77:	mov    dh,0xf2
  417f79:	mov    bl,cl
  417f7b:	in     eax,dx
  417f7c:	adc    dh,dh
  417f7e:	dec    ecx
  417f7f:	je     0x417fda
  417f81:	push   ebp
  417f82:	mov    ebx,0xaf0037c
  417f87:	cmc    
  417f88:	sbb    edi,DWORD PTR [edx]
  417f8a:	(bad)  
  417f8b:	sbb    esi,DWORD PTR [eax+0x5c]
  417f8e:	mov    ecx,0x8917f01e
  417f93:	(bad)  
  417f94:	jns    0x417fb1
  417f96:	loop   0x417f43
  417f98:	adc    dl,BYTE PTR [ecx]
  417f9a:	pop    ebp
  417f9b:	sbb    DWORD PTR [ecx+0x47],edx
  417f9e:	ret    0x77a8
  417fa1:	mov    eax,ds:0xaf6ff1b
  417fa6:	mov    al,BYTE PTR [ebp-0x49d2fff6]
  417fac:	iret   
  417fad:	es scas al,BYTE PTR es:[edi]
  417faf:	scas   eax,DWORD PTR es:[edi]
  417fb0:	inc    ecx
  417fb1:	fbstp  TBYTE PTR ds:0xb9271309
  417fb7:	push   esi
  417fb8:	pusha  
  417fb9:	imul   ebp,ecx,0xe1fa54ba
  417fbf:	cwde   
  417fc0:	adc    ch,cl
  417fc2:	in     al,dx
  417fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc4:	inc    edi
  417fc5:	inc    esp
  417fc6:	jae    0x417f87
  417fc8:	lods   al,BYTE PTR ds:[esi]
  417fc9:	repnz add edi,edx
  417fcc:	bound  esi,QWORD PTR ds:0xf1789ee6
  417fd2:	sbb    dl,BYTE PTR [ebx]
  417fd4:	mov    ch,BYTE PTR [eax-0xf]
  417fd7:	sbb    cl,dl
  417fd9:	daa    
  417fda:	test   al,0xc5
  417fdc:	mov    al,ds:0xd207d8
  417fe1:	xchg   ebx,eax
  417fe2:	(bad)  
  417fe3:	pop    ebp
  417fe4:	fwait
  417fe5:	mov    esi,0x561cdcc5
  417fea:	stos   DWORD PTR es:[edi],eax
  417feb:	aaa    
  417fec:	adc    DWORD PTR [ebp-0x11],eax
  417fef:	xor    dh,0xcd
  417ff2:	(bad)  
  417ff3:	out    0xd1,al
  417ff5:	sbb    BYTE PTR [edx+edx*4-0x6e],0xee
  417ffa:	push   ss
  417ffb:	and    al,BYTE PTR [ecx+0x44]
  417ffe:	dec    ebp
  417fff:	push   eax
  418000:	push   ss
  418001:	jl     0x417fad
  418003:	inc    ecx
  418004:	fnstsw WORD PTR [esi-0x58093040]
  41800a:	addr16 jb 0x417fb7
  41800d:	jno    0x418031
  41800f:	sub    dl,BYTE PTR ds:0xb8d07764
  418015:	sti    
  418016:	fs scas eax,DWORD PTR es:[edi]
  418018:	gs cmp ah,BYTE PTR es:[ecx-0x48456c4f]
  418020:	(bad)  
  418021:	or     BYTE PTR [esi],dl
  418023:	pop    ecx
  418024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418025:	sub    eax,0x413d78e9
  41802a:	xchg   esp,eax
  41802b:	xor    eax,0xc0d7b3c3
  418030:	and    BYTE PTR [ebx-0x2d],0xf6
  418034:	mov    esp,0x8e7acf19
  418039:	in     eax,0xa8
  41803b:	cmp    al,0x53
  41803d:	sbb    BYTE PTR [edi],cl
  41803f:	push   0xaa7250a7
  418044:	cmc    
  418045:	popa   
  418046:	out    0x1b,al
  418048:	xor    bl,dl
  41804a:	lods   eax,DWORD PTR ds:[esi]
  41804b:	xchg   ecx,eax
  41804c:	sub    esi,DWORD PTR [edi+0x63b63364]
  418052:	sbb    dl,BYTE PTR [edi+esi*2]
  418055:	imul   esi,DWORD PTR cs:[edx],0x4c
  418059:	gs pop ebp
  41805b:	cdq    
  41805c:	adc    al,0xd3
  41805e:	into   
  41805f:	or     cl,BYTE PTR [eax]
  418061:	pop    ebx
  418062:	fxch   st(5)
  418064:	bound  edx,QWORD PTR [ecx]
  418066:	aas    
  418067:	mov    cl,0x8f
  418069:	ins    BYTE PTR es:[edi],dx
  41806a:	mov    dh,0x8b
  41806c:	or     BYTE PTR [eax],0xfe
  41806f:	ds sub edi,esp
  418072:	or     dl,BYTE PTR [edx-0x27022122]
  418078:	add    eax,0x1fa5c86
  41807d:	sbb    BYTE PTR [edx-0x5ac5abba],ch
  418083:	je     0x4180f3
  418085:	cwde   
  418086:	cmp    DWORD PTR [esi-0x605da531],eax
  41808c:	sti    
  41808d:	xor    DWORD PTR [ecx+edx*8+0x1abb6e8e],0x48abe207
  418098:	mov    eax,0x9937cd1
  41809d:	(bad)  
  41809e:	(bad)  
  41809f:	xor    eax,0xb95e3eb0
  4180a4:	inc    esi
  4180a5:	cmp    dl,BYTE PTR [eax-0x7dfc1151]
  4180ab:	mov    ebx,0x9bb3abff
  4180b0:	stos   BYTE PTR es:[edi],al
  4180b1:	add    BYTE PTR [ebx+eax*2-0x7d],al
  4180b5:	fild   DWORD PTR [edx-0x62]
  4180b8:	and    cl,cl
  4180ba:	mov    ds:0x9f588a2a,al
  4180bf:	repz out 0x6f,al
  4180c2:	test   al,0xb2
  4180c4:	int    0x90
  4180c6:	mov    dl,0xd7
  4180c8:	sbb    eax,0xcbd3f3fc
  4180cd:	sub    edx,eax
  4180cf:	jle    0x41813c
  4180d1:	pop    esi
  4180d2:	out    dx,al
  4180d3:	lds    ebx,FWORD PTR [eax]
  4180d5:	jb     0x41812a
  4180d7:	cdq    
  4180d8:	ins    BYTE PTR es:[edi],dx
  4180d9:	test   DWORD PTR [esi+eiz*2-0x73b2625],0x61a9d01a
  4180e4:	adc    eax,0xcd05adf6
  4180e9:	dec    edx
  4180ea:	inc    edx
  4180eb:	inc    eax
  4180ec:	rcr    al,cl
  4180ee:	adc    ebp,DWORD PTR [esi+0x71]
  4180f1:	mov    ah,0xe5
  4180f3:	jne    0x418108
  4180f5:	or     BYTE PTR [edx+0x4743c31e],bl
  4180fb:	js     0x418096
  4180fd:	imul   esi,eax,0xffffffea
  418100:	adc    esp,DWORD PTR [edi]
  418102:	shl    DWORD PTR [ebx-0x78bb8729],1
  418108:	mov    esi,0xb84ff2c1
  41810d:	dec    ebp
  41810e:	outs   dx,DWORD PTR ds:[si]
  418110:	fwait
  418111:	dec    esi
  418112:	fidiv  WORD PTR [esi]
  418114:	and    eax,0xbcb17e15
  418119:	cwde   
  41811a:	mov    edx,0xd7e712d0
  41811f:	fistp  QWORD PTR [ecx-0x7f]
  418122:	ror    edx,0xa4
  418125:	xchg   ecx,eax
  418126:	jge    0x418168
  418128:	jbe    0x4180bb
  41812a:	pop    ss
  41812b:	leave  
  41812c:	adc    ecx,esp
  41812e:	fsub   st(3),st
  418130:	rcr    DWORD PTR [edx-0xc4043ff],0xba
  418137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418138:	xor    cl,dl
  41813a:	xor    BYTE PTR [edx+0x45],ah
  41813d:	int3   
  41813e:	mov    bl,0x42
  418140:	add    al,0x70
  418142:	cs xchg ebp,eax
  418144:	pop    esp
  418145:	push   ss
  418146:	inc    edi
  418147:	stos   DWORD PTR es:[edi],eax
  418148:	xor    bl,BYTE PTR ds:0xbb3ea6be
  41814e:	push   esi
  41814f:	push   ecx
  418150:	fbld   TBYTE PTR [edi+0x349f758]
  418156:	push   cs
  418157:	sub    eax,0x110e76a9
  41815c:	out    0xc9,al
  41815e:	mov    ds:0xeb1f1af0,eax
  418163:	cmp    DWORD PTR [ebx],0xb4c3395
  418169:	in     eax,dx
  41816a:	mov    esi,0x1e25718a
  41816f:	or     eax,0x682126a1
  418174:	dec    esi
  418175:	ins    BYTE PTR es:[edi],dx
  418176:	mov    edi,0x9dfe4470
  41817b:	push   esp
  41817c:	or     al,0x7c
  41817e:	repz arpl dx,ax
  418181:	pop    ds
  418182:	cmp    BYTE PTR [edi],al
  418184:	(bad)  
  418185:	repnz out 0x7a,al
  418188:	outs   dx,BYTE PTR ds:[esi]
  418189:	adc    ecx,edi
  41818b:	sub    dl,BYTE PTR [edx-0x27]
  41818e:	xchg   ebx,eax
  41818f:	mov    eax,0x73c9c048
  418194:	or     BYTE PTR [edi-0x27],dl
  418197:	add    DWORD PTR [esi],esi
  418199:	push   edi
  41819a:	sbb    dl,BYTE PTR [ebx-0x3b79b0c0]
  4181a0:	pop    edi
  4181a1:	stos   BYTE PTR es:[edi],al
  4181a2:	or     cl,ah
  4181a4:	sub    edx,edx
  4181a6:	fwait
  4181a7:	mov    eax,0x7f402dff
  4181ac:	mov    ecx,0xad14177b
  4181b1:	cmp    DWORD PTR [eax+0x4f3edd5e],ebx
  4181b7:	xchg   BYTE PTR [edi-0x68],dl
  4181ba:	inc    ebx
  4181bb:	xor    BYTE PTR [edi-0x73ae5896],ch
  4181c1:	sbb    eax,0x45172f72
  4181c6:	adc    dh,BYTE PTR [edi]
  4181c8:	frstor [esi]
  4181ca:	loop   0x4181f1
  4181cc:	js     0x418241
  4181ce:	lea    edx,[edi]
  4181d0:	push   0x80fce76e
  4181d5:	inc    esp
  4181d6:	or     al,0x23
  4181d8:	jo     0x4181de
  4181da:	gs inc eax
  4181dc:	cld    
  4181dd:	sbb    BYTE PTR [edx+0x59e42457],bl
  4181e3:	cld    
  4181e4:	mov    esp,0x63b4d1c6
  4181e9:	mov    ds:0x75bab00b,al
  4181ee:	jp     0x4181b4
  4181f0:	jmp    0xc85537f4
  4181f5:	and    bl,BYTE PTR [edi]
  4181f7:	ss sub ax,0xa1ce
  4181fc:	call   0x7794:0x33224e35
  418203:	cpuid  
  418205:	adc    al,0x98
  418207:	mov    WORD PTR [ecx+0x7909e731],cs
  41820d:	add    edi,DWORD PTR [ecx]
  41820f:	xchg   edx,eax
  418210:	mov    DWORD PTR [esi],edx
  418212:	and    dh,BYTE PTR [ebx+0x22]
  418215:	popa   
  418216:	inc    esp
  418217:	fisttp DWORD PTR [edx-0x63]
  41821a:	cmp    BYTE PTR [ebp-0x132e2bb8],al
  418220:	pop    eax
  418221:	lahf   
  418222:	enter  0xb043,0xa8
  418226:	xchg   edi,edx
  418228:	pusha  
  418229:	ret    
  41822a:	add    BYTE PTR [ebx+0x54],0xaa
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	dec    edx
  418230:	mul    DWORD PTR [ebp+0x69460a9b]
  418236:	mov    BYTE PTR [edi-0x37a94a1f],al
  41823c:	xor    dl,BYTE PTR [edi+0x45946e9e]
  418242:	pop    ebx
  418243:	(bad)
  418246:	mov    ebx,0x70dcda56
  41824b:	jno    0x41823c
  41824d:	(bad)  
  41824e:	out    dx,eax
  41824f:	xchg   BYTE PTR [edi+0x31],al
  418252:	enter  0x6272,0x4f
  418256:	bound  esi,QWORD PTR [ebx-0x5384dd5c]
  41825c:	or     ch,BYTE PTR [ecx]
  41825e:	stos   DWORD PTR es:[edi],eax
  41825f:	fwait
  418260:	ret    
  418261:	pop    ebx
  418262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418263:	ja     0x4182b9
  418265:	cmp    edx,DWORD PTR [ecx-0x7b387eaa]
  41826b:	lea    ebx,[esi-0x7c]
  41826e:	lahf   
  41826f:	in     eax,0x95
  418271:	div    ah
  418273:	ins    BYTE PTR es:[edi],dx
  418274:	(bad)  
  418275:	aad    0x98
  418277:	(bad)  
  418279:	pop    esp
  41827a:	xor    edi,DWORD PTR [edx-0x304d7c97]
  418280:	sub    eax,0xea66ceae
  418285:	pop    es
  418286:	xor    al,0xb0
  418288:	fs test al,0x76
  41828b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828c:	jmp    0x7a10bf3b
  418291:	fs in  al,0x5e
  418294:	pop    ss
  418295:	shr    DWORD PTR ds:0xbe701b1f,1
  41829b:	ins    DWORD PTR es:[edi],dx
  41829c:	jae    0x418263
  41829e:	mov    ds:0x30052870,eax
  4182a3:	cs lahf 
  4182a5:	div    esp
  4182a7:	xchg   DWORD PTR [edx-0x29],ecx
  4182aa:	in     eax,0x41
  4182ac:	hlt    
  4182ad:	in     al,0x6b
  4182af:	push   eax
  4182b0:	cld    
  4182b1:	dec    esp
  4182b2:	jbe    0x41831a
  4182b4:	shr    BYTE PTR [edx-0x2f],cl
  4182b7:	and    eax,DWORD PTR [ebp+0x22ee3010]
  4182bd:	ja     0x4182a9
  4182bf:	mul    BYTE PTR [edx]
  4182c1:	lahf   
  4182c2:	or     DWORD PTR [ecx-0x23],0x9a3c5977
  4182c9:	out    0x61,al
  4182cb:	repz out dx,eax
  4182cd:	adc    ch,bl
  4182cf:	mov    ebp,DWORD PTR [edi+0x2b]
  4182d2:	inc    ecx
  4182d3:	cmp    eax,0x39ad0538
  4182d8:	cwde   
  4182d9:	jecxz  0x418318
  4182db:	sar    dl,cl
  4182dd:	jae    0x418318
  4182df:	add    eax,DWORD PTR ds:0xc718de52
  4182e5:	in     al,dx
  4182e6:	clc    
  4182e7:	jmp    0x4f84:0x49eceae8
  4182ee:	into   
  4182ef:	or     DWORD PTR es:[eax],ebx
  4182f2:	sbb    esi,DWORD PTR [edi+0x22]
  4182f5:	js     0x41836a
  4182f7:	pop    ecx
  4182f8:	mov    ah,ah
  4182fa:	add    BYTE PTR [ebp-0x4e],0xfc
  4182fe:	adc    BYTE PTR [ecx+ebx*4],0xae
  418302:	gs (bad) 
  418304:	popf   
  418305:	push   0xe2889a77
  41830a:	(bad)  
  41830b:	mov    cl,0x94
  41830d:	pop    edx
  41830e:	outs   dx,DWORD PTR ds:[esi]
  41830f:	dec    ebx
  418310:	data16 jae 0x418375
  418313:	ins    DWORD PTR es:[edi],dx
  418314:	je     0x41837c
  418316:	inc    edx
  418317:	dec    ebx
  418318:	das    
  418319:	xlat   BYTE PTR ds:[ebx]
  41831a:	add    esp,DWORD PTR ds:0xe61e8119
  418320:	jne    0x418399
  418322:	mov    eax,0xc88272fb
  418327:	cwde   
  418328:	clc    
  418329:	xor    al,BYTE PTR [ebp-0x7871b479]
  41832f:	int3   
  418330:	pop    edx
  418331:	xchg   ecx,eax
  418332:	mov    ds:0x187e1793,eax
  418337:	cmp    bh,bl
  418339:	adc    BYTE PTR [esi+0x374f5f68],dh
  41833f:	push   edi
  418340:	ins    DWORD PTR es:[edi],dx
  418341:	mov    cs,WORD PTR [esi+0x5105c249]
  418347:	inc    ebx
  418348:	pop    edx
  418349:	lock ins BYTE PTR es:[edi],dx
  41834b:	icebp  
  41834c:	das    
  41834d:	pop    ss
  41834e:	mov    al,ds:0xcf0d73ec
  418353:	cmp    dl,BYTE PTR [edx]
  418355:	std    
  418356:	mov    ecx,0x9f9b2f90
  41835b:	outs   dx,DWORD PTR ds:[esi]
  41835c:	dec    esp
  41835d:	jg     0x418340
  41835f:	pop    es
  418360:	sbb    ebx,DWORD PTR [esi]
  418362:	cmp    eax,0x1a1656c5
  418367:	ret    
  418368:	imul   esp,DWORD PTR [esi-0x41221ae7],0x88e40d7e
  418372:	loope  0x41835f
  418374:	das    
  418375:	addr16 fwait
  418377:	in     al,0xb7
  418379:	(bad)  
  41837a:	mov    ebx,0xe0b5f904
  41837f:	and    cl,0x96
  418382:	loope  0x4183de
  418384:	ror    BYTE PTR [ecx+ebp*4],cl
  418387:	outs   dx,BYTE PTR ds:[esi]
  418388:	test   al,0xea
  41838a:	mov    ebx,0x5f9a93d4
  41838f:	jle    0x418379
  418391:	leave  
  418392:	dec    di
  418394:	mov    edx,0x1c51cd63
  418399:	pop    ss
  41839a:	in     eax,dx
  41839b:	dec    esi
  41839c:	cdq    
  41839d:	xchg   ebx,eax
  41839e:	inc    ebp
  41839f:	mov    ss,WORD PTR [esi+0x7cfb5406]
  4183a5:	shl    DWORD PTR [edi-0x6e315de8],cl
  4183ab:	mov    edx,0x75cc015b
  4183b0:	retf   
  4183b1:	mov    al,BYTE PTR [edx-0x80]
  4183b4:	mov    bl,0x12
  4183b6:	out    0xb6,eax
  4183b8:	ins    BYTE PTR es:[edi],dx
  4183b9:	std    
  4183ba:	ins    BYTE PTR es:[edi],dx
  4183bb:	cli    
  4183bc:	test   bl,ch
  4183be:	xchg   ecx,eax
  4183bf:	xor    al,0x86
  4183c1:	inc    esi
  4183c2:	xor    al,0x56
  4183c4:	mov    esp,0x29600e5d
  4183c9:	sbb    BYTE PTR [edi],dl
  4183cb:	mov    ecx,0x1e3c47d
  4183d0:	jns    0x41836b
  4183d2:	mov    eax,0x1e608ceb
  4183d7:	loopne 0x418428
  4183d9:	mov    edx,DWORD PTR [ecx+ebx*1]
  4183dc:	test   edi,esp
  4183de:	cmp    DWORD PTR [ebx+ebx*4-0x72392080],0x77
  4183e6:	test   DWORD PTR [edi+0x35],esp
  4183e9:	pop    ebx
  4183ea:	xchg   DWORD PTR [ecx],ebx
  4183ec:	(bad)  
  4183ed:	cdq    
  4183ee:	sub    al,0x49
  4183f0:	ror    BYTE PTR [esi-0x411609d4],1
  4183f6:	(bad)  
  4183f7:	sar    BYTE PTR [edx-0x18beb9c1],1
  4183fd:	test   al,0xbf
  4183ff:	inc    ebx
  418400:	out    0x2d,al
  418402:	gs xchg esp,eax
  418404:	push   ebx
  418405:	repz loop 0x418473
  418408:	mov    dh,0x9d
  41840a:	xor    al,0x79
  41840c:	imul   edx,DWORD PTR [edx],0x1e
  41840f:	dec    edi
  418410:	pop    esi
  418411:	sar    DWORD PTR [ebp-0x74],0xbf
  418415:	mov    bh,0x6d
  418417:	out    0x67,eax
  418419:	int    0x3a
  41841b:	int    0x85
  41841d:	aam    0xd1
  41841f:	aaa    
  418420:	jmp    0xc482bc34
  418425:	out    0x75,eax
  418427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418428:	xchg   esi,eax
  418429:	fst    DWORD PTR [esi]
  41842b:	inc    eax
  41842c:	lahf   
  41842d:	dec    edx
  41842e:	daa    
  41842f:	and    BYTE PTR [edi+0x2212628b],0x71
  418436:	xor    al,0x89
  418438:	or     ebp,0x4e
  41843b:	xor    BYTE PTR ds:0xa4ed818c,0x2c
  418442:	call   0x11fddbdb
  418447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418448:	rol    ch,cl
  41844a:	std    
  41844b:	stos   DWORD PTR es:[edi],eax
  41844c:	sti    
  41844d:	aas    
  41844e:	xchg   DWORD PTR [eax-0x2e],eax
  418451:	call   0xbe2eb43b
  418456:	jg     0x41845c
  418458:	imul   ebp,DWORD PTR [ecx+edx*1-0x28],0xd6110111
  418460:	imul   eax,DWORD PTR [eax+0x0],0x75
  418464:	add    eax,0xdf3d23ca
  418469:	inc    esp
  41846a:	or     BYTE PTR [edi+0x55],cl
  41846d:	inc    DWORD PTR [edi+0x1]
  418470:	fadd   DWORD PTR [esi+ebx*1-0x60]
  418474:	push   ebp
  418475:	test   eax,0x4ebac565
  41847a:	mov    ch,al
  41847c:	popa   
  41847d:	iret   
  41847e:	push   ss
  41847f:	loope  0x41848f
  418481:	inc    edi
  418482:	or     al,BYTE PTR [ecx]
  418484:	push   0x385c8acc
  418489:	jbe    0x4184ee
  41848b:	lds    eax,FWORD PTR [edi+0x5d]
  41848e:	out    dx,eax
  41848f:	sahf   
  418490:	jl     0x41844a
  418492:	ins    BYTE PTR es:[edi],dx
  418493:	repz daa 
  418495:	(bad)  
  418496:	ror    DWORD PTR [ebp-0x2],1
  418499:	lea    ebx,[edx]
  41849b:	nop
  41849c:	es mov ebx,0xe397245a
  4184a2:	inc    ebp
  4184a3:	pop    ebx
  4184a4:	in     eax,dx
  4184a5:	fwait
  4184a6:	mov    al,0xb5
  4184a8:	cmc    
  4184a9:	or     eax,0x279b009a
  4184ae:	push   0xffffffa0
  4184b0:	rol    BYTE PTR ds:0xbfe0af7,cl
  4184b6:	fisub  WORD PTR [edx-0x1c89f187]
  4184bc:	mov    ch,0xcd
  4184be:	ret    0x603d
  4184c1:	push   ds
  4184c2:	scas   al,BYTE PTR es:[edi]
  4184c3:	enter  0xfd3a,0x9a
  4184c7:	in     eax,0xe5
  4184c9:	aad    0x9f
  4184cb:	fsub   DWORD PTR [ebx+0x2e]
  4184ce:	pop    ebx
  4184cf:	jmp    0x9ee6:0x29ac2971
  4184d6:	jb     0x4184ea
  4184d8:	sub    esi,DWORD PTR [esp+ebx*1]
  4184db:	sbb    BYTE PTR [ecx+0x43],0x56
  4184df:	call   0x9bc:0x74c84973
  4184e6:	jo     0x4184b7
  4184e8:	mov    edx,0xab9b7e0d
  4184ed:	enter  0xc3a3,0x3d
  4184f1:	sub    edi,DWORD PTR [ebp-0x7d]
  4184f4:	inc    ebp
  4184f5:	mov    dl,0xd
  4184f7:	addr16 pop ecx
  4184f9:	outs   dx,DWORD PTR ds:[esi]
  4184fa:	fst    QWORD PTR [ebx]
  4184fc:	xchg   ecx,eax
  4184fd:	or     cl,BYTE PTR [ebp+0x75124d8e]
  418503:	dec    esi
  418504:	adc    eax,0x835a0b0c
  418509:	leave  
  41850a:	mov    al,ds:0xeae49c9a
  41850f:	mov    esp,0x64c13390
  418514:	and    BYTE PTR [edi],dh
  418516:	int3   
  418517:	jbe    0x418521
  418519:	mov    dh,0x59
  41851b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41851d:	pop    ebp
  41851e:	add    ebx,DWORD PTR [esi+0x6]
  418521:	test   DWORD PTR [edi-0x50],eax
  418524:	sbb    eax,ebp
  418526:	outs   dx,BYTE PTR ds:[esi]
  418527:	and    al,0x62
  418529:	fidivr WORD PTR [edi]
  41852b:	rcr    DWORD PTR [eax],cl
  41852d:	cld    
  41852e:	mov    DWORD PTR ds:[ebx+edi*2],edx
  418532:	daa    
  418533:	test   al,0xae
  418535:	bound  ecx,QWORD PTR [eax+0x52871343]
  41853b:	inc    edi
  41853c:	lahf   
  41853d:	push   ss
  41853e:	sub    ah,BYTE PTR ds:0xf9af4c49
  418544:	ss push 0x357982ca
  41854a:	mov    esp,0xbe13500b
  41854f:	pop    esi
  418550:	jmp    0x8c9bdce3
  418555:	nop
  418556:	sti    
  418557:	nop
  418558:	jle    0x4184df
  41855a:	jg     0x41859f
  41855c:	sub    al,0x19
  41855e:	cmp    ah,ch
  418560:	cdq    
  418561:	leave  
  418562:	mov    eax,0x467f4efa
  418567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418568:	cmp    DWORD PTR [eax-0x46805bbb],eax
  41856e:	shr    ebp,0x92
  418571:	sbb    bh,ch
  418573:	(bad)  [esi+0x7db10f5e]
  418579:	test   al,0x43
  41857b:	or     al,bh
  41857d:	or     al,0x12
  41857f:	(bad)  
  418580:	in     eax,0xfd
  418582:	dec    esp
  418583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418584:	jg     0x418545
  418586:	push   ebp
  418587:	and    al,0x52
  418589:	and    eax,0x652b7709
  41858e:	push   esi
  41858f:	dec    esi
  418590:	xchg   ebx,eax
  418591:	jno    0x418562
  418593:	fwait
  418594:	in     al,dx
  418595:	mov    WORD PTR [ebx+0x4bd83ecd],ds
  41859b:	pop    ebx
  41859c:	test   DWORD PTR [ebx+0x4d25286b],0x9487c6c1
  4185a6:	fwait
  4185a7:	push   ds
  4185a8:	push   esp
  4185a9:	repz cmp esi,ecx
  4185ac:	mov    dh,0x75
  4185ae:	and    DWORD PTR [ecx+edi*8-0xa],edx
  4185b2:	cmp    esp,edi
  4185b4:	pop    ebx
  4185b5:	mov    eax,0x26e3a659
  4185ba:	icebp  
  4185bb:	sub    al,0x8c
  4185bd:	mov    ds:0x6ff71ac6,eax
  4185c2:	dec    edi
  4185c3:	dec    edx
  4185c4:	int3   
  4185c5:	adc    eax,0x66cbcd77
  4185ca:	and    eax,0xf61ec2fa
  4185cf:	xor    dl,al
  4185d1:	push   edx
  4185d2:	xor    al,0xc0
  4185d4:	push   0x34d92c3a
  4185d9:	xchg   edi,eax
  4185da:	inc    edi
  4185db:	fs mov dl,0xdc
  4185de:	out    0x24,eax
  4185e0:	les    eax,FWORD PTR [edx]
  4185e2:	imul   ebx,DWORD PTR [edi-0x18740bee],0x3de86bf9
  4185ec:	or     al,0x60
  4185ee:	jnp    0x41865b
  4185f0:	std    
  4185f1:	inc    ebp
  4185f2:	out    0x86,al
  4185f4:	outs   dx,BYTE PTR ds:[esi]
  4185f5:	sbb    bl,BYTE PTR [ecx]
  4185f7:	pop    ebx
  4185f8:	mov    dl,0x3f
  4185fa:	sub    edx,edi
  4185fc:	lock jns 0x4185b5
  4185ff:	leave  
  418600:	xor    ecx,DWORD PTR [ecx+0x46574916]
  418606:	pop    edi
  418607:	pushf  
  418608:	xor    cl,BYTE PTR [esi]
  41860a:	pushf  
  41860b:	int    0x31
  41860d:	cmp    eax,0x475d636c
  418612:	ss push ds
  418614:	out    0xdd,al
  418616:	jge    0x418649
  418618:	push   0x12
  41861a:	ja     0x418669
  41861c:	jb     0x4185a0
  41861e:	cld    
  41861f:	pushf  
  418620:	jmp    0x62b9:0xd26c0873
  418627:	pop    ebx
  418628:	jae    0x4185cb
  41862a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862b:	repz push edx
  41862d:	lahf   
  41862e:	cdq    
  41862f:	or     BYTE PTR [ebp+0x2138fe9d],bh
  418635:	popf   
  418636:	fstp   QWORD PTR [ecx+0x2d]
  418639:	test   BYTE PTR [edi],bl
  41863b:	or     al,0x60
  41863d:	mov    BYTE PTR ds:0xfbe39a67,bh
  418643:	mov    edi,0xa1af7d50
  418648:	js     0x4186bc
  41864a:	xchg   edx,eax
  41864b:	imul   ebx,DWORD PTR [esi-0x3b],0xffffffef
  41864f:	cmp    BYTE PTR [ebx],dl
  418651:	out    0x8,al
  418653:	ds inc edi
  418655:	test   bh,al
  418657:	add    DWORD PTR ds:0x681efd02,0xaea7b43
  418661:	sbb    bl,BYTE PTR [edi]
  418663:	cwde   
  418664:	xchg   esp,eax
  418665:	adc    al,0x1e
  418667:	adc    al,0xfb
  418669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41866a:	cmp    ch,BYTE PTR [ebx+0x7c07eed]
  418670:	mov    ds:0x6ca313d6,al
  418675:	xchg   esi,eax
  418676:	pop    eax
  418677:	sbb    ch,BYTE PTR [ebx+ecx*4+0x12d0aa03]
  41867e:	sar    DWORD PTR [eax-0x43],cl
  418681:	mov    edi,0x6538450e
  418686:	jle    0x418634
  418688:	add    al,0x22
  41868a:	push   cs
  41868b:	or     dh,dl
  41868d:	sbb    dl,al
  41868f:	cmp    eax,0xa15b956a
  418694:	(bad)  
  418695:	push   ebp
  418696:	inc    di
  418698:	and    al,0x98
  41869a:	(bad)  
  41869b:	imul   esp,DWORD PTR [esi],0xe71e5b38
  4186a1:	inc    edx
  4186a2:	(bad)  
  4186a3:	cld    
  4186a4:	imul   esi,DWORD PTR [edx],0xeba3d247
  4186aa:	cmp    esi,DWORD PTR [eax]
  4186ac:	(bad)  
  4186ad:	clc    
  4186ae:	cmp    eax,0x58149d2f
  4186b3:	bound  esp,QWORD PTR [eax]
  4186b5:	or     al,0x1e
  4186b7:	pop    ebx
  4186b8:	cld    
  4186b9:	inc    ebx
  4186ba:	rcr    DWORD PTR [ebp+ecx*2-0x4e],0x6d
  4186bf:	aaa    
  4186c0:	test   BYTE PTR [ebp+0x46041e89],ah
  4186c6:	add    BYTE PTR [ebx],dh
  4186c8:	gs (bad) 
  4186ca:	mov    bl,0xa8
  4186cc:	inc    edx
  4186cd:	(bad)  [ebp-0x1a]
  4186d0:	xchg   DWORD PTR [eax+0x2e],ebp
  4186d3:	lds    esp,FWORD PTR [ebx-0x17]
  4186d6:	inc    edx
  4186d7:	lahf   
  4186d8:	mov    ebx,0x54665efb
  4186dd:	jg     0x4186ed
  4186df:	ficom  WORD PTR [ebp-0x232e8809]
  4186e5:	lea    ebp,[eax-0x7ab41e48]
  4186eb:	or     al,0x7d
  4186ed:	fcomp  DWORD PTR [edx-0x417440e2]
  4186f3:	test   DWORD PTR [ebp+0x5a4ad1bc],0xccd1533e
  4186fd:	std    
  4186fe:	test   bh,bh
  418700:	lahf   
  418701:	scas   eax,DWORD PTR es:[edi]
  418702:	loopne 0x418691
  418704:	cmp    bl,bl
  418706:	hlt    
  418707:	lods   eax,DWORD PTR ds:[esi]
  418708:	push   ebx
  418709:	pop    es
  41870a:	mov    ds:0x6eff5abb,al
  41870f:	fld    DWORD PTR [ebx-0x583f3c45]
  418715:	jg     0x418731
  418717:	push   ebp
  418718:	xchg   DWORD PTR [eax+0x37],edx
  41871b:	aam    0x69
  41871d:	push   ebx
  41871e:	stos   BYTE PTR es:[edi],al
  41871f:	(bad)  
  418721:	or     BYTE PTR [ebp*8+0x39c88bf9],ch
  418728:	int    0xf1
  41872a:	loop   0x4187a5
  41872c:	jo     0x418707
  41872e:	out    dx,eax
  41872f:	in     eax,dx
  418730:	push   ds
  418731:	push   cs
  418732:	sub    DWORD PTR [esi+ebx*8-0x1344befb],ecx
  418739:	sbb    DWORD PTR [edi+0x126a545a],esi
  41873f:	in     al,dx
  418740:	xlat   BYTE PTR ds:[ebx]
  418741:	jle    0x418780
  418743:	cmp    al,0xc4
  418745:	pop    ebp
  418746:	push   ecx
  418747:	add    DWORD PTR [ebx+esi*8-0x6a],ecx
  41874b:	dec    edx
  41874c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874d:	adc    eax,0xf6dda59d
  418752:	cmp    cl,BYTE PTR [edx+0x58]
  418755:	pusha  
  418756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418757:	add    DWORD PTR [ebx+ecx*1+0x5c],esi
  41875b:	mov    BYTE PTR [edx],0x9c
  41875e:	pop    edx
  41875f:	adc    dl,ah
  418761:	test   al,0x31
  418763:	fidivr DWORD PTR [edi+0x54fd8c3b]
  418769:	ds push es
  41876b:	clc    
  41876c:	aam    0x74
  41876e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41876f:	ja     0x418769
  418771:	fisttp WORD PTR [edx-0x6f587ba7]
  418777:	mov    ebp,0xd9193845
  41877c:	pop    ebx
  41877d:	rcl    dl,cl
  41877f:	dec    eax
  418780:	pop    eax
  418781:	dec    edi
  418782:	and    esp,DWORD PTR fs:[edi-0x38]
  418786:	mov    WORD PTR [edi+0x4e],ss
  418789:	std    
  41878a:	mov    ch,0x6e
  41878c:	pop    eax
  41878d:	push   0x8280144f
  418792:	sub    al,0xa4
  418794:	sbb    esi,DWORD PTR [eax-0x1b6625b4]
  41879a:	dec    edx
  41879b:	nop
  41879c:	loop   0x418770
  41879e:	add    BYTE PTR [edx+0x12],bl
  4187a1:	mov    ds:0xec05a17,al
  4187a6:	and    esp,DWORD PTR [ebx]
  4187a8:	dec    ebx
  4187a9:	test   ch,ch
  4187ab:	and    eax,0x46ce22d7
  4187b0:	leave  
  4187b1:	les    ebx,FWORD PTR [esi-0x66]
  4187b4:	pop    esp
  4187b5:	push   cs
  4187b6:	dec    edi
  4187b7:	xor    BYTE PTR [eax-0x3d],bh
  4187ba:	cmp    ebp,DWORD PTR [ebx-0x7e]
  4187bd:	cmp    al,0x39
  4187bf:	mov    edx,0xd1b3473
  4187c4:	pop    es
  4187c5:	test   DWORD PTR [esi],eax
  4187c7:	int3   
  4187c8:	jae    0x418767
  4187ca:	fdivr  DWORD PTR [ebp+0x53]
  4187cd:	out    dx,al
  4187ce:	ror    DWORD PTR [eax-0x15],0xc5
  4187d2:	ror    ecx,cl
  4187d4:	mov    al,0xd4
  4187d6:	sbb    al,0xa
  4187d8:	inc    edi
  4187d9:	repz xchg esi,eax
  4187db:	sub    BYTE PTR [edi+0x3e],ah
  4187de:	mov    dl,0x24
  4187e0:	cmp    eax,0x8bceb3de
  4187e5:	sbb    bp,WORD PTR [ecx]
  4187e8:	xlat   BYTE PTR ds:[ebx]
  4187e9:	xor    DWORD PTR [edi+0x2aefe461],esi
  4187ef:	xor    bl,BYTE PTR [ebx-0x18937b68]
  4187f5:	mov    ds:0xc80aa098,eax
  4187fa:	test   BYTE PTR [edx-0x77f6e3b6],cl
  418800:	cmp    bh,BYTE PTR [ecx+ebp*8+0x44]
  418804:	js     0x4187a7
  418806:	dec    ebp
  418807:	or     eax,0x1ba695f0
  41880c:	int    0x49
  41880e:	ins    DWORD PTR es:[edi],dx
  41880f:	jge    0x418823
  418811:	pop    es
  418812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418813:	mov    ds:0x52d488fa,eax
  418818:	xor    eax,0x6e59414d
  41881d:	stc    
  41881e:	push   eax
  41881f:	aas    
  418820:	in     eax,dx
  418821:	bound  edx,QWORD PTR [edi+0x39faa1f4]
  418827:	cli    
  418828:	lock les edx,FWORD PTR [esi-0x4226d33c]
  41882f:	icebp  
  418830:	dec    edx
  418831:	sti    
  418832:	retf   0xd697
  418835:	sbb    eax,0x1f9784f9
  41883a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41883b:	retf   0xb032
  41883e:	imul   eax,eax,0x1f
  418841:	mov    ah,0x88
  418844:	pop    esp
  418845:	ja     0x418820
  418847:	out    dx,eax
  418848:	mov    ds:0x2fcc01ea,eax
  41884d:	xchg   ecx,edx
  41884f:	cmp    al,bl
  418851:	call   FWORD PTR cs:[edx+edi*8]
  418855:	sbb    BYTE PTR [edx],0x52
  418858:	outs   dx,DWORD PTR ds:[esi]
  418859:	sbb    DWORD PTR [ebx],ebp
  41885b:	xchg   ebx,eax
  41885c:	mov    ebx,0xe67cbd4a
  418861:	inc    ebp
  418862:	xchg   edx,eax
  418863:	int    0x2a
  418865:	dec    edi
  418866:	mov    bh,BYTE PTR [edx]
  418868:	or     al,0x37
  41886a:	push   ss
  41886b:	mov    cl,0xb
  41886d:	push   ss
  41886e:	sbb    edx,DWORD PTR [edx-0x7d]
  418871:	ror    BYTE PTR [edi+0x12],1
  418874:	inc    ecx
  418875:	mov    DWORD PTR [esi],edi
  418877:	inc    ebx
  418878:	scas   al,BYTE PTR es:[edi]
  418879:	je     0x418863
  41887b:	jecxz  0x4188ca
  41887d:	push   cs
  41887e:	or     ebp,esi
  418880:	and    DWORD PTR ds:0x7232aff6,esp
  418886:	je     0x41886d
  418888:	add    ecx,DWORD PTR [edx]
  41888a:	adc    esi,eax
  41888c:	mov    al,0x7d
  41888e:	sbb    al,0xcb
  418890:	cli    
  418891:	xchg   ebx,eax
  418892:	test   al,0x88
  418894:	popa   
  418895:	dec    ebp
  418896:	stos   BYTE PTR es:[edi],al
  418897:	jns    0x4188ca
  418899:	aad    0x2c
  41889b:	or     al,0xfd
  41889d:	test   eax,0x9113b260
  4188a2:	dec    edx
  4188a3:	sbb    al,0x17
  4188a5:	sub    BYTE PTR [esi+0x18],ch
  4188a8:	cli    
  4188a9:	scas   al,BYTE PTR es:[edi]
  4188aa:	push   eax
  4188ab:	pop    es
  4188ac:	add    al,0x5b
  4188ae:	fisubr DWORD PTR [esi-0x42]
  4188b1:	pop    ecx
  4188b2:	int3   
  4188b3:	adc    al,0x52
  4188b5:	mov    esp,0xc166a366
  4188ba:	div    DWORD PTR [eax]
  4188bc:	icebp  
  4188bd:	loop   0x418855
  4188bf:	fnstcw WORD PTR [edx-0x697c04c5]
  4188c5:	retf   
  4188c6:	fwait
  4188c7:	sbb    ebx,ebx
  4188c9:	mov    edi,0xc08516d9
  4188ce:	pmulhw mm4,mm7
  4188d1:	enter  0x9f76,0xe7
  4188d5:	dec    edx
  4188d6:	pop    edx
  4188d7:	mov    ds:0x7aa1d4bc,al
  4188dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188dd:	cs out 0xc8,eax
  4188e0:	adc    ah,ch
  4188e2:	xchg   edi,eax
  4188e3:	ins    DWORD PTR es:[edi],dx
  4188e4:	add    BYTE PTR [edx-0x33834544],0x47
  4188eb:	retf   0xa9b0
  4188ee:	cld    
  4188ef:	jp     0x4188ee
  4188f1:	xchg   ebp,eax
  4188f2:	(bad)  
  4188f3:	fsub   DWORD PTR [esi-0x79]
  4188f6:	out    0x67,al
  4188f8:	adc    dh,BYTE PTR [ecx-0x28]
  4188fb:	fidiv  DWORD PTR gs:[ecx+0x2a]
  4188ff:	fdivr  QWORD PTR [edi+eax*2]
  418902:	push   0xffffff82
  418904:	arpl   WORD PTR [edx],cx
  418906:	dec    esi
  418907:	pop    ds
  418908:	mov    edi,0xc7a1f3
  41890d:	mov    al,0x2a
  41890f:	outs   dx,DWORD PTR ds:[esi]
  418910:	enter  0xc998,0x4c
  418914:	out    0x2,al
  418916:	les    esi,FWORD PTR [edx+0x7a0324b7]
  41891c:	lds    ecx,FWORD PTR [edx]
  41891e:	adc    eax,0xc13586a4
  418923:	mov    esi,0x4ccad1da
  418928:	addr16 popa 
  41892a:	cwde   
  41892b:	out    0xd0,eax
  41892d:	(bad)  
  41892e:	call   0xd56a094
  418933:	sbb    eax,ebp
  418935:	sub    DWORD PTR [edi],edi
  418937:	stos   BYTE PTR es:[edi],al
  418938:	pushf  
  418939:	daa    
  41893a:	in     al,0x24
  41893c:	stc    
  41893d:	mov    WORD PTR [eax-0x12346ab8],gs
  418943:	sub    al,0xc9
  418945:	cwde   
  418946:	popf   
  418947:	push   0x2b
  418949:	psrad  mm6,QWORD PTR [edx+ecx*1]
  41894d:	ja     0x41890c
  41894f:	cmp    ebp,DWORD PTR [ecx+edi*1]
  418952:	xchg   esi,eax
  418953:	fsub   DWORD PTR [esi+0x1d2f9859]
  418959:	sbb    al,dl
  41895b:	or     al,0x1f
  41895d:	(bad)  
  41895e:	mov    ebx,0xe8a20626
  418963:	je     0x41893c
  418965:	push   esi
  418966:	scas   al,BYTE PTR es:[edi]
  418967:	out    dx,al
  418968:	sub    eax,0x69003b5f
  41896d:	test   DWORD PTR [edi+0x2f1b668e],ebx
  418973:	xchg   esp,eax
  418974:	dec    edi
  418975:	or     DWORD PTR [ebp+0x34],esp
  418978:	jge    0x41890a
  41897a:	jg     0x41892e
  41897c:	pop    esp
  41897d:	fisubr WORD PTR [ecx+0x70]
  418980:	popa   
  418981:	int    0xc8
  418983:	mov    ebp,eax
  418985:	stos   BYTE PTR es:[edi],al
  418986:	mov    esi,0xd4d4235c
  41898b:	xor    eax,0x3507112c
  418990:	and    DWORD PTR [ebx-0x15],esp
  418993:	push   ecx
  418994:	pop    edx
  418995:	lea    ecx,[eax-0x71]
  418998:	retf   
  418999:	cwde   
  41899a:	push   ecx
  41899b:	sti    
  41899c:	mov    dl,0xa0
  41899e:	pop    ds
  41899f:	(bad)  
  4189a0:	ror    DWORD PTR [ebx],1
  4189a2:	xlat   BYTE PTR ds:[ebx]
  4189a3:	bound  esp,QWORD PTR [eax+edi*1]
  4189a6:	sub    ebp,DWORD PTR [esi+0x2e]
  4189a9:	clc    
  4189aa:	(bad)  
  4189ac:	jnp    0x4189ed
  4189ae:	jl     0x4189ae
  4189b0:	pushf  
  4189b1:	retf   0x492d
  4189b4:	jp     0x418a33
  4189b6:	std    
  4189b7:	mov    ch,0x5
  4189b9:	xchg   edi,eax
  4189ba:	mov    esi,DWORD PTR [eax]
  4189bc:	loopne 0x4189fe
  4189be:	inc    edi
  4189c0:	inc    ebx
  4189c1:	das    
  4189c2:	(bad)  
  4189c3:	jp     0x418a2e
  4189c5:	ss push es
  4189c7:	pop    edx
  4189c8:	xchg   DWORD PTR [esi-0x5e],ebp
  4189cb:	jl     0x418a05
  4189cd:	cdq    
  4189ce:	cmp    eax,0x25ed6a69
  4189d3:	pop    es
  4189d4:	pop    ebx
  4189d5:	adc    ah,BYTE PTR [eax-0x2e632a03]
  4189db:	xor    DWORD PTR [ecx],ebx
  4189dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189de:	icebp  
  4189df:	sbb    al,0xe3
  4189e1:	fnstenv [eax-0x4c]
  4189e4:	pop    es
  4189e5:	pop    ss
  4189e6:	pminsw mm4,QWORD PTR [ecx+0x4]
  4189ea:	pop    ebx
  4189eb:	aad    0xeb
  4189ed:	sub    eax,0x158cbee8
  4189f2:	inc    eax
  4189f3:	jbe    0x4189b1
  4189f5:	mov    eax,ds:0xc06a4a33
  4189fa:	mov    ds:0xc7dbece5,eax
  4189ff:	or     bh,ah
  418a01:	cmc    
  418a02:	or     al,0xdb
  418a04:	sbb    DWORD PTR [ebp-0x45],0xc7382206
  418a0b:	push   esi
  418a0c:	(bad)  [esi+eax*4+0x72]
  418a10:	jp     0x418a66
  418a12:	xor    eax,0x6dd0aa7f
  418a17:	les    esi,FWORD PTR [eax-0x7e]
  418a1a:	dec    ecx
  418a1b:	stc    
  418a1c:	xchg   edx,edi
  418a1e:	sar    DWORD PTR [esi+0x4e0a34a8],cl
  418a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a25:	xchg   edi,eax
  418a26:	xchg   esp,eax
  418a27:	loopne 0x4189fe
  418a29:	lea    esi,[edi]
  418a2b:	pop    ebx
  418a2c:	push   ebx
  418a2d:	adc    ah,BYTE PTR [eax]
  418a2f:	loopne 0x4189ce
  418a31:	pop    ds
  418a32:	push   eax
  418a33:	inc    DWORD PTR [eax-0x3ccde7ac]
  418a39:	call   0x313fee6a
  418a3e:	mov    WORD PTR [ebx+0x1e69f280],fs
  418a44:	push   0x3066849e
  418a49:	add    BYTE PTR [ecx],bl
  418a4b:	add    esi,ebp
  418a4d:	sbb    BYTE PTR [edi],0x38
  418a50:	dec    edx
  418a51:	add    eax,DWORD PTR [edx+0x14]
  418a54:	cs jne 0x418a9d
  418a57:	and    al,0x2a
  418a59:	loopne 0x4189fa
  418a5b:	xchg   ecx,eax
  418a5c:	xor    ah,ch
  418a5e:	pop    ebp
  418a5f:	std    
  418a60:	adc    al,BYTE PTR [ebx]
  418a62:	mov    ebx,0xafde86
  418a67:	mov    ah,0x6
  418a69:	pop    eax
  418a6a:	(bad)  
  418a6b:	or     ebp,DWORD PTR [ecx-0x77]
  418a6e:	xor    BYTE PTR [edx-0x77],al
  418a71:	sbb    ah,ah
  418a73:	stos   DWORD PTR es:[edi],eax
  418a74:	jae    0x418a26
  418a76:	cli    
  418a77:	add    DWORD PTR [ebx],ebx
  418a79:	dec    ebx
  418a7a:	inc    ebx
  418a7b:	loop   0x418a10
  418a7d:	call   0xa6edc915
  418a82:	(bad)  
  418a83:	int    0xee
  418a85:	mov    dh,0xf2
  418a87:	inc    edi
  418a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a89:	add    BYTE PTR [ecx*2+0x32c2aff2],0x20
  418a91:	xor    bl,BYTE PTR [ebx]
  418a93:	xor    ch,bl
  418a95:	test   DWORD PTR [ebp-0x286c71e1],ebx
  418a9b:	popa   
  418a9c:	rol    BYTE PTR [ebx-0x633b4535],cl
  418aa2:	inc    esp
  418aa3:	rcl    DWORD PTR [edi-0x1f],1
  418aa6:	mov    cl,0x52
  418aa8:	mov    ch,0x8a
  418aaa:	mov    edi,0xf7219a01
  418aaf:	arpl   WORD PTR [edi],di
  418ab1:	mov    ch,0xf1
  418ab3:	push   ds
  418ab4:	ins    BYTE PTR es:[edi],dx
  418ab5:	les    esp,FWORD PTR [esi]
  418ab7:	cli    
  418ab8:	jg     0x418a69
  418aba:	jg     0x418b20
  418abc:	mov    DWORD PTR [eax-0x4],eax
  418abf:	cmp    ah,bh
  418ac1:	aad    0xa2
  418ac3:	inc    esp
  418ac4:	iret   
  418ac5:	xchg   edi,eax
  418ac6:	jbe    0x418a96
  418ac8:	xor    al,0x37
  418aca:	mov    al,ds:0x109e6ca3
  418acf:	dec    esp
  418ad0:	call   FWORD PTR [ecx-0x7c]
  418ad3:	shl    BYTE PTR [ebx-0x1730fb43],1
  418ad9:	adc    al,0x5f
  418adb:	dec    ebp
  418adc:	push   ecx
  418add:	jne    0x418b30
  418adf:	mov    al,ds:0x86e7e6a3
  418ae4:	loop   0x418b41
  418ae6:	jmp    0xac29:0xe83694ef
  418aed:	out    0xf7,al
  418aef:	in     eax,0xee
  418af1:	cmp    ah,BYTE PTR [edx-0x43]
  418af4:	stos   DWORD PTR es:[edi],eax
  418af5:	add    dl,BYTE PTR [edi+0x76]
  418af8:	pop    edx
  418af9:	(bad)  
  418afa:	aad    0x15
  418afc:	xchg   ecx,eax
  418afd:	xchg   edi,eax
  418afe:	(bad)  [edi]
  418b00:	jmp    0x418af4
  418b02:	xchg   BYTE PTR [edi+0x59f535da],ah
  418b08:	inc    ebp
  418b09:	jmp    0x418b01
  418b0b:	clc    
  418b0c:	inc    eax
  418b0d:	test   al,0xc4
  418b0f:	aas    
  418b10:	shl    DWORD PTR [esi+0x27],1
  418b13:	adc    al,bl
  418b15:	in     eax,0xfd
  418b17:	and    al,0xaf
  418b19:	dec    esp
  418b1a:	mov    esp,0xf850d14
  418b1f:	lds    ecx,FWORD PTR [ebx+0x67]
  418b22:	pop    es
  418b23:	rcl    DWORD PTR [edx-0x41],0x44
  418b27:	shl    DWORD PTR [ecx*8-0x2fc09a89],1
  418b2e:	xchg   esp,eax
  418b2f:	aad    0x1a
  418b31:	test   eax,0x4469ef05
  418b36:	loope  0x418b9d
  418b38:	xchg   esp,eax
  418b39:	mov    bh,0xb6
  418b3b:	mov    DWORD PTR [ebx+0x31],eax
  418b3e:	adc    ecx,DWORD PTR [ecx]
  418b40:	sub    BYTE PTR [ecx],dh
  418b42:	hlt    
  418b43:	test   BYTE PTR [esi+0x7e],dl
  418b46:	call   0xc753f53d
  418b4b:	xor    DWORD PTR [ebp-0xe1d7316],edx
  418b51:	fstp   QWORD PTR [edi+0x66]
  418b54:	jno    0x418b1e
  418b56:	nop
  418b57:	add    edi,edx
  418b59:	cmp    al,0x52
  418b5b:	push   ecx
  418b5c:	outs   dx,BYTE PTR ds:[esi]
  418b5d:	cmp    dh,BYTE PTR [esi-0x8]
  418b60:	pop    esi
  418b61:	cwde   
  418b62:	mov    esp,0x2ca16157
  418b67:	loopne 0x418bd8
  418b69:	bound  ecx,QWORD PTR [eax+0x1]
  418b6c:	push   cs
  418b6d:	mov    bh,0xc8
  418b6f:	add    bl,BYTE PTR [ecx]
  418b71:	xor    bl,BYTE PTR [eax]
  418b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b74:	push   ss
  418b75:	and    eax,0xc2032b99
  418b7a:	inc    edi
  418b7b:	xor    DWORD PTR [eax+0x5a30bc8a],edx
  418b81:	push   cs
  418b82:	cmp    BYTE PTR [esi+0x3d],dl
  418b85:	std    
  418b86:	mov    BYTE PTR [edi-0x31],dh
  418b89:	hlt    
  418b8a:	xchg   DWORD PTR [ebx],edi
  418b8c:	xchg   esi,eax
  418b8d:	xchg   esi,eax
  418b8e:	cmp    eax,esi
  418b90:	(bad)  
  418b92:	div    BYTE PTR [esi+ecx*2]
  418b95:	mov    gs,WORD PTR [ebp+0x6c]
  418b98:	jg     0x418c19
  418b9a:	mov    edx,0xc7ff186
  418b9f:	push   esp
  418ba0:	(bad)  
  418ba1:	push   esp
  418ba2:	mov    ds:0xa2bea3d8,al
  418ba7:	loopne 0x418c12
  418ba9:	imul   esi,DWORD PTR [ebx+edi*4+0x3e416131],0xcfa15885
  418bb4:	mov    ds:0x9fb2f886,al
  418bb9:	(bad)  
  418bba:	fcmovu st,st(4)
  418bbc:	fild   DWORD PTR [eax+0x2d]
  418bbf:	and    esp,DWORD PTR [eax+0x2017903e]
  418bc5:	sub    DWORD PTR [esi],ecx
  418bc7:	push   cs
  418bc8:	out    0xa0,eax
  418bca:	xchg   DWORD PTR [edx+ecx*8-0x4],ecx
  418bce:	and    eax,0x6649fd74
  418bd3:	xor    ch,BYTE PTR [ebp+0x49]
  418bd6:	pusha  
  418bd7:	inc    edx
  418bd8:	add    DWORD PTR [edi],ecx
  418bda:	jmp    0xeae7:0xec09784
  418be1:	nop
  418be2:	push   es
  418be3:	pop    edi
  418be4:	mov    BYTE PTR [eax+0x5e1565e5],al
  418bea:	shr    DWORD PTR [esi],1
  418bec:	out    0x77,al
  418bee:	arpl   WORD PTR [ebx],dx
  418bf0:	sbb    al,0x5d
  418bf2:	shl    DWORD PTR [eax],cl
  418bf4:	mov    eax,ds:0xe9144106
  418bf9:	inc    eax
  418bfa:	mov    esp,edx
  418bfc:	aam    0xd7
  418bfe:	add    BYTE PTR [eax+edi*2],bl
  418c01:	fmul   st(3),st
  418c03:	ret    
  418c04:	push   esi
  418c05:	inc    esi
  418c06:	fwait
  418c07:	in     eax,dx
  418c08:	jle    0x418bb6
  418c0a:	push   esp
  418c0b:	and    ebx,DWORD PTR [ebp+0x38]
  418c0e:	xchg   BYTE PTR [esi],bl
  418c10:	xchg   edi,eax
  418c11:	push   DWORD PTR [ecx-0x7d5d3176]
  418c17:	pop    esi
  418c18:	jl     0x418c15
  418c1a:	push   edx
  418c1b:	js     0x418c17
  418c1d:	inc    esi
  418c1e:	(bad)  
  418c1f:	(bad)  
  418c20:	sar    esp,1
  418c22:	cs push cs
  418c24:	mov    ah,0xe1
  418c26:	mov    ecx,0x1b31a914
  418c2b:	pusha  
  418c2c:	cmp    al,0x4
  418c2e:	mov    gs,ebp
  418c30:	or     al,0x1f
  418c32:	xchg   ebx,eax
  418c33:	pavgb  mm7,mm5
  418c36:	jle    0x418c4e
  418c38:	sbb    al,bl
  418c3a:	dec    edx
  418c3b:	mov    esp,0x6ca65246
  418c40:	add    esi,DWORD PTR [ebx-0x22e20173]
  418c46:	sub    BYTE PTR [ecx-0x64044250],dl
  418c4c:	and    al,0x60
  418c4e:	sbb    BYTE PTR [ecx+eiz*1+0x33ba8b78],dl
  418c55:	adc    al,0xd2
  418c57:	iret   
  418c58:	in     al,0xe4
  418c5a:	fnsave [esi+0x71]
  418c5d:	mov    eax,0x6cb23a1a
  418c62:	fbld   TBYTE PTR [ecx+edx*2+0x8]
  418c66:	mov    al,0x17
  418c68:	sub    al,0x66
  418c6a:	loopne 0x418bed
  418c6c:	pop    esi
  418c6d:	enter  0xea99,0x1f
  418c71:	xor    BYTE PTR fs:[edi-0x5c],bh
  418c75:	push   es
  418c76:	mov    DWORD PTR ss:[ebp+0x2f557310],eax
  418c7d:	jns    0x418c75
  418c7f:	ror    DWORD PTR [ebp-0x31],0x0
  418c83:	test   BYTE PTR [ebx],al
  418c85:	loope  0x418c87
  418c87:	push   ecx
  418c88:	mov    esp,0x1d3148ad
  418c8d:	xor    al,0xdf
  418c90:	dec    ebx
  418c91:	pop    ss
  418c92:	popa   
  418c93:	xor    BYTE PTR [edi],ch
  418c95:	or     BYTE PTR [esi-0x36],ah
  418c98:	loopne 0x418c60
  418c9a:	(bad)
  418c9d:	pushf  
  418c9e:	jbe    0x418cd2
  418ca0:	ret    
  418ca1:	mov    esi,0x6374a64a
  418ca6:	je     0x418cc9
  418ca8:	sbb    bh,bh
  418caa:	jbe    0x418cb0
  418cac:	pop    edx
  418cad:	jl     0x418c32
  418caf:	dec    esi
  418cb0:	or     ebp,ebp
  418cb2:	das    
  418cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb4:	mov    bh,0x6d
  418cb6:	xor    al,0xd
  418cb8:	sub    esp,DWORD PTR [esi-0x78e1a887]
  418cbe:	jb     0x418cee
  418cc0:	inc    esp
  418cc1:	push   edx
  418cc2:	sahf   
  418cc3:	shl    DWORD PTR [edi+0xc],1
  418cc6:	(bad)  
  418cc7:	mov    bl,0xc5
  418cc9:	push   ebx
  418cca:	push   ds
  418ccb:	lock dec edx
  418ccd:	push   cs
  418cce:	mov    bh,0x42
  418cd0:	pop    ss
  418cd1:	gs sub al,0x48
  418cd4:	inc    ebx
  418cd5:	and    BYTE PTR [edx+0x17087ec2],cl
  418cdb:	lock mov ebp,0x45658061
  418ce1:	mov    al,ds:0x2a6150a5
  418ce6:	xchg   BYTE PTR [ecx],bl
  418ce8:	je     0x418c9f
  418cea:	inc    ecx
  418ceb:	pop    ebp
  418cec:	or     dh,BYTE PTR [esi-0x390fb7f4]
  418cf2:	repz push eax
  418cf4:	test   DWORD PTR ds:0xe6abaab2,ebp
  418cfb:	xchg   ebp,eax
  418cfc:	div    BYTE PTR ds:0x7b81382a
  418d02:	push   ecx
  418d03:	pushf  
  418d04:	xchg   dl,al
  418d06:	stos   DWORD PTR es:[edi],eax
  418d07:	lods   al,BYTE PTR ds:[esi]
  418d08:	mov    ebp,0x33c0b8f0
  418d0d:	stos   BYTE PTR es:[edi],al
  418d0e:	xchg   BYTE PTR [ebx+ecx*1+0x45c04843],dh
  418d15:	and    BYTE PTR ds:0x2d51a3ba,ah
  418d1b:	xor    esi,DWORD PTR ds:0x5a1e7f44
  418d21:	pop    ebp
  418d22:	arpl   WORD PTR [esi+0x3832c175],sp
  418d28:	and    BYTE PTR [ecx+eax*1-0x69],ah
  418d2c:	sbb    eax,0xfcaf4c08
  418d31:	pop    esi
  418d32:	pop    es
  418d33:	xchg   esi,eax
  418d34:	sbb    eax,0x555e99e7
  418d39:	push   ebx
  418d3a:	jecxz  0x418d8f
  418d3c:	cmp    al,0xe6
  418d3e:	pop    ss
  418d3f:	mov    edi,DWORD PTR [edx-0x4e]
  418d42:	dec    esi
  418d43:	repz jae 0x418cc7
  418d46:	inc    edx
  418d47:	ret    0x7325
  418d4a:	call   0x33f6:0xcbb5a9c8
  418d51:	xor    BYTE PTR [ebp+0x58],0x20
  418d55:	test   BYTE PTR [esi+eiz*1],0xbf
  418d59:	aas    
  418d5a:	int    0x19
  418d5c:	in     al,0x1
  418d5e:	fld    QWORD PTR [ecx]
  418d60:	repz imul ebx,DWORD PTR [eax+ebx*8],0xffffffcc
  418d65:	and    ebp,edx
  418d67:	jno    0x418db5
  418d69:	mov    ah,0xf3
  418d6b:	aad    0x49
  418d6d:	push   edi
  418d6e:	cmp    al,0x18
  418d70:	loop   0x418d0a
  418d72:	mov    ds,WORD PTR [esi-0x34]
  418d75:	aad    0xf3
  418d77:	jge    0x418d74
  418d79:	xchg   edx,eax
  418d7a:	jmp    0x4286:0x7ae99fc7
  418d81:	xor    al,0xd9
  418d83:	shl    DWORD PTR [edx-0x4c5c0188],0xe7
  418d8a:	dec    eax
  418d8b:	aaa    
  418d8c:	or     BYTE PTR [edi+0x6c],0x93
  418d90:	sti    
  418d91:	mov    esp,0x11b38da4
  418d96:	mul    DWORD PTR [esi+0x45]
  418d99:	and    esi,edi
  418d9b:	mov    esp,0x83cc2a84
  418da0:	dec    edi
  418da1:	push   ecx
  418da2:	mov    ebp,DWORD PTR [edi-0x117329c7]
  418da8:	and    al,0xef
  418daa:	imul   eax,DWORD PTR [edx-0x374cefb2],0xffffffc9
  418db1:	out    0x24,al
  418db3:	and    BYTE PTR [esi-0x5bfcb17c],0x32
  418dba:	cmp    ebx,eax
  418dbc:	cdq    
  418dbd:	scas   eax,DWORD PTR es:[edi]
  418dbe:	lods   eax,DWORD PTR ds:[esi]
  418dbf:	int    0xea
  418dc1:	xchg   BYTE PTR [ebp+edi*1+0x684fc942],bh
  418dc8:	add    eax,0x459ab7e3
  418dcd:	mov    esp,0x63b46dc5
  418dd2:	aas    
  418dd3:	cwde   
  418dd4:	outs   dx,DWORD PTR ds:[esi]
  418dd5:	in     eax,dx
  418dd6:	xor    al,0xea
  418dd8:	ins    BYTE PTR es:[edi],dx
  418dd9:	add    DWORD PTR [ebp-0x5087434],edx
  418ddf:	mov    dh,0xc1
  418de1:	lahf   
  418de2:	dec    ebx
  418de3:	ret    
  418de4:	fwait
  418de5:	jae    0x418db3
  418de7:	lea    ebx,[esp+esi*2-0x7a634ff7]
  418dee:	pushf  
  418def:	push   ebp
  418df0:	mov    edx,0x892f1b70
  418df5:	fdiv   QWORD PTR [eax+0x3e12c74e]
  418dfb:	mov    eax,0xda104687
  418e00:	jge    0x418d90
  418e02:	cmp    BYTE PTR [ebp+0x55],0x3f
  418e06:	dec    bp
  418e08:	addr16 test al,0x3c
  418e0b:	push   0xffffffb3
  418e0d:	and    bl,BYTE PTR [ebx-0x22e4d946]
  418e13:	mov    ah,0x31
  418e15:	cmp    al,0x26
  418e17:	push   0xfef860aa
  418e1c:	dec    esi
  418e1d:	sub    eax,0xf42b6b0f
  418e22:	stc    
  418e23:	sub    edx,ebp
  418e25:	pop    ds
  418e26:	or     DWORD PTR [ecx-0x61862309],ebp
  418e2c:	icebp  
  418e2d:	(bad)  
  418e2e:	sub    al,0xc6
  418e30:	adc    eax,0xcf4d29cb
  418e35:	inc    edi
  418e36:	jbe    0x418dba
  418e38:	das    
  418e39:	in     eax,0x5f
  418e3b:	jb     0x418e8f
  418e3d:	nop
  418e3e:	cmc    
  418e3f:	dec    ebx
  418e40:	pop    edx
  418e41:	jns    0x418ea1
  418e43:	jg     0x418e13
  418e45:	cmc    
  418e46:	(bad)  
  418e47:	out    dx,eax
  418e48:	ret    0x65d8
  418e4b:	jmp    0x418df0
  418e4d:	leave  
  418e4e:	add    BYTE PTR [edx+0x5f],ah
  418e51:	rcr    DWORD PTR [eax-0x43],0x50
  418e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e56:	ja     0x418e2e
  418e58:	push   eax
  418e59:	sti    
  418e5a:	xor    BYTE PTR [edi-0xed2ee54],ch
  418e60:	cmp    ebp,ebx
  418e62:	sar    DWORD PTR [ebx-0x5c],cl
  418e65:	pop    ebp
  418e66:	push   cs
  418e67:	or     BYTE PTR [esi+ecx*4+0x15],dl
  418e6b:	cdq    
  418e6c:	ret    
  418e6d:	mov    cl,0x46
  418e6f:	cmp    BYTE PTR [edi],dl
  418e71:	dec    eax
  418e72:	xchg   esi,eax
  418e73:	int    0x12
  418e75:	mov    ch,0x13
  418e77:	inc    esi
  418e78:	scas   eax,DWORD PTR es:[edi]
  418e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e7a:	imul   eax,DWORD PTR [edx-0x2ecd401a],0x3d
  418e81:	jbe    0x418ea4
  418e83:	outs   dx,BYTE PTR ds:[esi]
  418e84:	and    ecx,esi
  418e86:	jnp    0x418ea6
  418e88:	stos   BYTE PTR es:[edi],al
  418e89:	lahf   
  418e8a:	scas   al,BYTE PTR es:[edi]
  418e8b:	sahf   
  418e8c:	fwait
  418e8d:	xor    BYTE PTR [esi+ecx*1-0x40],ch
  418e91:	mov    bh,0xf8
  418e93:	sbb    al,0xad
  418e95:	shl    DWORD PTR [ebx],0x83
  418e98:	fisub  DWORD PTR [ebp-0x74]
  418e9b:	mov    al,ds:0xdcd8991b
  418ea0:	cmp    BYTE PTR [ebx],al
  418ea2:	xchg   edi,eax
  418ea3:	cwde   
  418ea4:	jns    0x418ed4
  418ea6:	jae    0x418f0c
  418ea8:	mov    al,0xe5
  418eaa:	lahf   
  418eab:	dec    ebx
  418eac:	or     edx,ecx
  418eae:	sbb    bh,BYTE PTR [eax]
  418eb0:	inc    edx
  418eb1:	sbb    ah,BYTE PTR [ecx-0x7d]
  418eb4:	outs   dx,DWORD PTR ds:[esi]
  418eb5:	rcr    BYTE PTR [ecx],1
  418eb7:	push   ebx
  418eb8:	ins    BYTE PTR es:[edi],dx
  418eb9:	add    al,0x4c
  418ebb:	jnp    0x418f1b
  418ebd:	fld    TBYTE PTR [eax+0x5362340b]
  418ec3:	out    0xbc,al
  418ec5:	or     al,ch
  418ec7:	enter  0xc24f,0x43
  418ecb:	sbb    esi,DWORD PTR [edx-0x1339f697]
  418ed1:	imul   eax,DWORD PTR [eax-0x4ceaddd6],0x5da4effa
  418edb:	(bad)  
  418edc:	scas   eax,DWORD PTR es:[edi]
  418edd:	or     DWORD PTR [ebp-0x35],eax
  418ee0:	add    eax,0xcbb39a72
  418ee5:	ret    0xe8e3
  418ee8:	out    dx,eax
  418ee9:	mov    bh,0x6b
  418eeb:	adc    ebp,edx
  418eed:	push   esp
  418eee:	mov    esi,0xff34b0f1
  418ef3:	sub    DWORD PTR ds:0xfc653373,0x24
  418efa:	sub    eax,0x63d6e048
  418eff:	push   edx
  418f00:	push   esp
  418f01:	call   0xe8e8ceff
  418f06:	xor    al,0xf7
  418f08:	(bad)  
  418f0a:	pop    esi
  418f0b:	jecxz  0x418f34
  418f0d:	xchg   edx,eax
  418f0e:	and    al,0x28
  418f10:	in     eax,dx
  418f11:	pop    ecx
  418f12:	mov    esp,edi
  418f14:	mov    esp,0x1874dac2
  418f19:	call   0xf0008022
  418f1e:	mov    esp,0x386a0d1d
  418f23:	stos   DWORD PTR es:[edi],eax
  418f24:	retf   
  418f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f26:	sub    DWORD PTR [edx-0x27],edx
  418f29:	call   0x23d65700
  418f2e:	jne    0x418ecc
  418f30:	aad    0x92
  418f32:	push   esi
  418f33:	dec    eax
  418f34:	repz jmp edi
  418f37:	jmp    0x418f1d
  418f39:	stc    
  418f3a:	xchg   esp,eax
  418f3b:	fucom  st(7)
  418f3d:	repnz cmp eax,0x47ff360f
  418f43:	adc    edi,DWORD PTR [ebp+edx*2-0x44ded9fe]
  418f4a:	cmp    ah,ah
  418f4c:	jne    0x418f9d
  418f4e:	test   ebp,esp
  418f50:	cld    
  418f51:	call   FWORD PTR [esi+0x74]
  418f54:	ins    DWORD PTR es:[edi],dx
  418f55:	inc    edi
  418f56:	loop   0x418f50
  418f58:	and    al,0x6f
  418f5a:	push   0x5e6697cd
  418f5f:	xor    al,0x5a
  418f61:	cdq    
  418f62:	inc    esp
  418f63:	dec    esp
  418f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f65:	cmp    ah,BYTE PTR [ebx]
  418f67:	jle    0x418fc5
  418f69:	repnz pop es
  418f6b:	aas    
  418f6c:	add    al,0xad
  418f6e:	into   
  418f6f:	inc    ebx
  418f70:	jl     0x418f53
  418f72:	xor    al,0x8a
  418f74:	adc    al,0xda
  418f76:	sbb    cl,cl
  418f78:	mov    dl,BYTE PTR [ebp+0x18]
  418f7b:	dec    edi
  418f7c:	mov    esp,0x882b16d0
  418f81:	inc    edx
  418f82:	out    0x11,eax
  418f84:	mov    ebx,0xa1617113
  418f89:	call   0xb30b:0x8fcf6026
  418f90:	mov    edi,0x1210d799
  418f95:	pop    edx
  418f96:	sbb    BYTE PTR [edi-0x14abbd91],dh
  418f9c:	mov    BYTE PTR [ecx],dh
  418f9e:	(bad)  
  418f9f:	in     eax,dx
  418fa0:	adc    eax,0xc2da1cc8
  418fa5:	mov    ebp,ebx
  418fa7:	mov    al,ah
  418fa9:	into   
  418faa:	inc    esp
  418fab:	sbb    DWORD PTR [edx-0x4064e317],0xcc230ab
  418fb5:	call   0xc0130696
  418fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fbb:	and    al,0xb3
  418fbd:	push   ss
  418fbe:	jb     0x41901f
  418fc0:	ret    0x9131
  418fc3:	into   
  418fc4:	(bad)  
  418fc5:	out    0xd8,eax
  418fc7:	imul   BYTE PTR [ebp+0x37]
  418fca:	loopne 0x418f63
  418fcc:	or     DWORD PTR ds:0x84234cc4,eax
  418fd2:	mov    DWORD PTR [ebp+edx*8-0x7e1b902b],ecx
  418fd9:	dec    ebp
  418fda:	cs dec ebp
  418fdc:	fdivr  st,st(5)
  418fde:	jo     0x419026
  418fe0:	rcr    DWORD PTR [ebx+0x50],0x7
  418fe4:	dec    edx
  418fe5:	int3   
  418fe6:	mov    bh,0xf7
  418fe8:	sbb    ebx,ebp
  418fea:	or     BYTE PTR [edx],bh
  418fec:	xor    ebp,DWORD PTR [esi-0x23176e07]
  418ff2:	sub    ebx,DWORD PTR ds:0x68a385f8
  418ff8:	in     al,0x59
  418ffa:	ds push ss
  418ffc:	xchg   ebp,eax
  418ffd:	dec    edx
  418ffe:	inc    eax
  418fff:	xor    eax,0x19655210
  419004:	mov    edi,DWORD PTR ds:0x2740af1
  41900a:	mov    ecx,edx
  41900c:	push   ebp
  41900d:	inc    ebp
  41900e:	cmp    al,dh
  419010:	mov    dl,0xfd
  419012:	pop    eax
  419013:	sbb    BYTE PTR [edx],0xbb
  419016:	jl     0x418fe1
  419018:	out    0xc8,eax
  41901a:	pusha  
  41901b:	and    ebx,DWORD PTR [edi+0x46c4fa94]
  419021:	ds dec edx
  419023:	imul   esp,DWORD PTR [edi],0x4130f0e1
  419029:	jnp    0x4190a0
  41902b:	pop    ebx
  41902c:	js     0x419096
  41902e:	out    0x63,eax
  419030:	or     BYTE PTR [eax+0x7e2d3eab],cl
  419036:	push   ecx
  419037:	in     eax,dx
  419038:	mov    al,0x5d
  41903b:	jnp    0x2bede6b8
  419041:	daa    
  419042:	aad    0x56
  419044:	xchg   ebx,eax
  419045:	xor    DWORD PTR [ebx],edx
  419047:	repnz push esp
  419049:	clc    
  41904a:	and    BYTE PTR [ecx+0x17e9f523],0x57
  419051:	pop    esp
  419052:	push   0x449c54ae
  419057:	jg     0x419030
  419059:	retf   0xd52a
  41905c:	inc    ebx
  41905d:	sbb    BYTE PTR [ecx],bl
  41905f:	pop    ebx
  419060:	push   ss
  419061:	setne  BYTE PTR [edi]
  419064:	add    al,BYTE PTR [esi-0x497e374f]
  41906a:	add    ch,BYTE PTR [ebx+0x2e697d37]
  419070:	frstor [ebp-0x32a056f1]
  419076:	mov    dh,0xbe
  419078:	mov    WORD PTR [edi],?
  41907a:	fcmovb st,st(6)
  41907c:	test   al,bl
  41907e:	(bad)  
  41907f:	sbb    al,0x24
  419081:	test   al,0x7b
  419083:	push   es
  419084:	mov    dl,0x43
  419086:	imul   eax,DWORD PTR [edx+eax*2-0x23],0xf3141095
  41908e:	pushf  
  41908f:	push   0x24
  419091:	mov    ebp,0x336f0d34
  419096:	test   ebx,esp
  419098:	mov    esi,0x734ada13
  41909d:	rcr    DWORD PTR [eax],cl
  41909f:	cmp    BYTE PTR [edi],0x51
  4190a2:	sub    ah,BYTE PTR [edi]
  4190a4:	xor    BYTE PTR [edi+0x206ffd8f],0x87
  4190ab:	dec    ecx
  4190ac:	bound  eax,QWORD PTR [ebx-0x74b2cda7]
  4190b2:	das    
  4190b3:	enter  0x383c,0x26
  4190b7:	xchg   bh,dh
  4190b9:	ss jne 0x4190f8
  4190bc:	jo     0x419133
  4190be:	in     al,dx
  4190bf:	je     0x41908a
  4190c1:	stos   BYTE PTR es:[edi],al
  4190c2:	mov    ah,0xce
  4190c4:	leave  
  4190c5:	jge    0x419051
  4190c7:	mov    edi,0x7a8a1fe
  4190cc:	mov    eax,ds:0x4c70864c
  4190d1:	adc    bh,dl
  4190d3:	shl    DWORD PTR [ecx+0x5fe1361f],0x61
  4190da:	shl    ecx,1
  4190dc:	cmp    al,al
  4190de:	pop    es
  4190df:	pop    edx
  4190e0:	mov    ecx,0x30b0fa26
  4190e5:	bound  edx,QWORD PTR [ecx+0x21]
  4190e8:	retf   0x7370
  4190eb:	sub    eax,0x84a98c9c
  4190f0:	jle    0x419171
  4190f2:	xor    dl,BYTE PTR [edx-0x629e14c0]
  4190f8:	inc    edx
  4190f9:	push   es
  4190fa:	adc    al,0xbc
  4190fc:	and    dl,BYTE PTR [edi+eiz*1-0x155aaa42]
  419103:	mov    cl,bh
  419105:	call   0x9982:0x3bcecc49
  41910c:	leave  
  41910d:	das    
  41910e:	in     al,0xe4
  419110:	sbb    al,0xe4
  419112:	mov    BYTE PTR [ecx-0x7e],ah
  419115:	loop   0x419161
  419117:	shr    BYTE PTR ds:[edx+0x6ea7c8f],0x84
  41911f:	add    BYTE PTR gs:[ecx],ch
  419122:	xchg   ebx,eax
  419123:	outs   dx,BYTE PTR ds:[esi]
  419124:	std    
  419125:	xchg   edi,eax
  419126:	daa    
  419127:	je     0x4190ca
  419129:	loope  0x419178
  41912b:	mov    al,ds:0x63db2391
  419130:	scas   al,BYTE PTR es:[edi]
  419131:	mov    al,ds:0x705cc014
  419136:	jno    0x419100
  419138:	jecxz  0x419172
  41913a:	shl    DWORD PTR [ebx+0x8c7b460],cl
  419140:	popa   
  419141:	scas   al,BYTE PTR es:[edi]
  419142:	push   0x30
  419144:	pop    ds
  419145:	add    cl,BYTE PTR [esi-0x5c]
  419148:	push   edi
  419149:	push   0x5d5943ab
  41914e:	mov    al,ds:0x4aad7d47
  419153:	sti    
  419154:	adc    eax,0x718e7061
  419159:	dec    edi
  41915a:	lods   al,BYTE PTR ds:[esi]
  41915b:	push   es
  41915c:	mov    al,0x53
  41915e:	push   es
  41915f:	rcr    DWORD PTR [eax-0x401dd00c],1
  419165:	xor    al,0x71
  419167:	mov    DWORD PTR [esi],ebx
  419169:	fld    TBYTE PTR [edx-0x6]
  41916c:	int3   
  41916d:	mov    al,0x6
  41916f:	xchg   edi,eax
  419170:	scas   al,BYTE PTR es:[edi]
  419171:	sbb    al,0x1d
  419173:	xchg   ecx,eax
  419174:	jo     0x4190f9
  419176:	stc    
  419177:	dec    ecx
  419178:	inc    edi
  419179:	cld    
  41917a:	cli    
  41917b:	aas    
  41917c:	and    ah,BYTE PTR [edx+ecx*1+0xfbb2d8e]
  419183:	jg     0x41914b
  419185:	push   esp
  419186:	lock imul eax,DWORD PTR [eax+edx*1-0x37489301],0x35
  41918f:	pop    es
  419190:	pop    es
  419191:	add    eax,0xec723d03
  419196:	sbb    ch,bl
  419198:	test   DWORD PTR [eax-0x372ea669],0x97ea8d37
  4191a2:	fbstp  TBYTE PTR [ebx]
  4191a4:	or     ebx,eax
  4191a6:	xchg   ebx,eax
  4191a7:	sbb    bl,ch
  4191a9:	mov    edx,0x330e1e6d
  4191ae:	lods   al,BYTE PTR ds:[esi]
  4191af:	in     al,dx
  4191b0:	ret    
  4191b1:	add    al,0xe4
  4191b3:	push   0x7a
  4191b5:	jb     0x4191ff
  4191b7:	inc    esi
  4191b8:	ror    DWORD PTR [ebp+0x75],cl
  4191bb:	dec    ecx
  4191bc:	ds push cs
  4191be:	push   eax
  4191bf:	test   al,0x7a
  4191c1:	gs (bad) 
  4191c3:	cli    
  4191c4:	(bad)  
  4191c5:	sbb    al,0x73
  4191c7:	fimul  DWORD PTR [esi+eiz*8-0x1a]
  4191cb:	or     eax,eax
  4191cd:	xor    al,0xdc
  4191cf:	or     ecx,DWORD PTR [eax]
  4191d1:	push   edi
  4191d2:	and    cl,BYTE PTR [edx]
  4191d4:	dec    ebp
  4191d5:	inc    esp
  4191d6:	rcr    ebp,cl
  4191d8:	mov    bl,BYTE PTR [esi-0xc]
  4191db:	lods   al,BYTE PTR ds:[esi]
  4191dc:	out    0xe5,al
  4191de:	xchg   esp,eax
  4191df:	mov    ds:0x9fa1853,eax
  4191e4:	push   0xc150194d
  4191e9:	xlat   BYTE PTR ds:[ebx]
  4191ea:	inc    esi
  4191eb:	cli    
  4191ec:	in     al,0xba
  4191ee:	add    BYTE PTR [ebx-0xb],bl
  4191f1:	je     0x4191aa
  4191f3:	dec    eax
  4191f4:	fcmovnu st,st(4)
  4191f6:	and    edx,ebp
  4191f8:	test   BYTE PTR [edx],al
  4191fa:	mov    ds:0xdc12cd57,al
  4191ff:	das    
  419200:	mov    esi,0x4f7148fb
  419205:	repnz out dx,eax
  419207:	mov    ebp,0xbacaeaf9
  41920c:	out    0xac,al
  41920e:	js     0x419209
  419210:	adc    ebx,edx
  419212:	daa    
  419213:	mov    WORD PTR [edx-0x5b],?
  419216:	lods   al,BYTE PTR ds:[esi]
  419217:	rep ins DWORD PTR es:[edi],dx
  419219:	sbb    eax,DWORD PTR [ecx-0x52a2ed22]
  41921f:	and    BYTE PTR [ebp+0x33],dh
  419222:	add    al,0x41
  419224:	idiv   DWORD PTR [ecx-0x2958fb52]
  41922a:	lock pushf 
  41922c:	pop    es
  41922d:	jae    0x419256
  41922f:	rcr    DWORD PTR [edx],0x7f
  419232:	xchg   al,al
  419234:	push   0x44af1803
  419239:	or     BYTE PTR [eax-0x2dd0fa72],0x6a
  419240:	call   0x2ef:0x41185610
  419247:	add    esi,esp
  419249:	xor    al,0x3c
  41924b:	imul   ebx,DWORD PTR [ebx-0x76],0x4b79b37b
  419252:	loope  0x4192ce
  419254:	jns    0x4191fe
  419256:	push   esp
  419257:	jmp    0x419216
  419259:	dec    eax
  41925a:	xchg   esi,eax
  41925b:	xchg   ebx,eax
  41925c:	jbe    0x4192d8
  41925e:	in     eax,dx
  41925f:	xor    DWORD PTR [ebx],esp
  419261:	jo     0x419235
  419263:	(bad)  
  419264:	jbe    0x419278
  419266:	fdiv   DWORD PTR [ecx]
  419268:	sbb    esp,esp
  41926a:	inc    edx
  41926b:	aas    
  41926c:	data16 aad 0x76
  41926f:	add    eax,0x1a1d23e6
  419274:	icebp  
  419275:	xor    al,BYTE PTR [esp+ecx*1]
  419278:	jecxz  0x419231
  41927a:	sbb    esp,DWORD PTR [ecx]
  41927c:	push   ebp
  41927d:	cs mov dh,0x98
  419280:	sbb    DWORD PTR [ecx-0x11211090],edx
  419286:	es jl  0x4192d1
  419289:	xchg   ebp,eax
  41928a:	xor    ebp,DWORD PTR [ebx]
  41928c:	pushf  
  41928d:	sub    DWORD PTR [esi],ecx
  41928f:	ror    DWORD PTR [edx-0x19dbc818],1
  419295:	mov    bl,0x44
  419297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419298:	shl    esi,cl
  41929a:	cmp    dl,dh
  41929c:	xchg   ebp,eax
  41929d:	outs   dx,DWORD PTR gs:[esi]
  41929f:	adc    DWORD PTR [edx-0x508aff40],0xe7869d81
  4192a9:	ja     0x4192bb
  4192ab:	rcl    BYTE PTR [eax+0x4610e55a],1
  4192b1:	fisub  DWORD PTR [esi-0x1d1c1dc3]
  4192b7:	cmp    edx,DWORD PTR [eax-0x499d6625]
  4192bd:	pushf  
  4192be:	dec    ebx
  4192bf:	jne    0x419317
  4192c1:	loopne 0x419309
  4192c3:	mov    bl,0xfe
  4192c5:	and    dh,BYTE PTR [edx+0x331d05d1]
  4192cb:	ins    BYTE PTR es:[edi],dx
  4192cc:	adc    BYTE PTR [eax-0xa357cff],dl
  4192d2:	mov    dl,0x14
  4192d4:	lock and eax,0xee873c9b
  4192da:	sub    esp,DWORD PTR [esi]
  4192dc:	repz adc eax,0xa0b51764
  4192e2:	adc    BYTE PTR [esp+ebp*1],ah
  4192e5:	lock inc ebx
  4192e7:	retf   0x64a8
  4192ea:	inc    ebx
  4192eb:	jmp    0x1636:0x3ef59e1b
  4192f2:	mov    ebx,0x23cf42a5
  4192f7:	je     0x4192a2
  4192f9:	outs   dx,DWORD PTR ds:[esi]
  4192fa:	aam    0xd4
  4192fc:	ss dec ebx
  4192fe:	jp     0x41937e
  419300:	in     al,0xd8
  419302:	lock jmp 0x33f:0xe26da242
  41930a:	or     eax,0xd2559e7e
  41930f:	shl    esp,0x84
  419312:	fcmove st,st(1)
  419314:	xchg   ebx,eax
  419315:	int    0xd7
  419317:	mov    cl,0x97
  419319:	mov    bh,0x29
  41931b:	mov    cl,0x5e
  41931d:	cmp    BYTE PTR [esi],ch
  41931f:	in     eax,dx
  419320:	stos   BYTE PTR es:[edi],al
  419321:	add    ch,ah
  419323:	mov    ds:0xa235e389,eax
  419328:	and    DWORD PTR [eax+0x579e14ce],0xffffff9e
  41932f:	pop    edx
  419330:	test   BYTE PTR [ebx-0x1f],ah
  419333:	cmp    cl,al
  419335:	rcr    DWORD PTR [ecx+0x60],cl
  419338:	loopne 0x41932b
  41933a:	mov    ebx,0xa057100e
  41933f:	out    dx,eax
  419340:	retf   0xbd83
  419343:	mov    ebp,0x9fe782d4
  419348:	jno    0x4193b6
  41934a:	mov    bl,0xe0
  41934c:	mov    edi,0x35f41a99
  419351:	cs out 0xd5,eax
  419354:	leave  
  419355:	sbb    ecx,edx
  419357:	sbb    DWORD PTR [eax+0x57],edi
  41935a:	and    ebx,ebp
  41935c:	popa   
  41935d:	int    0x39
  41935f:	nop
  419360:	xor    al,0x7c
  419362:	jmp    0x4193d2
  419364:	or     DWORD PTR [ecx+0x603ed41a],ebx
  41936a:	cs push 0xffffffdf
  41936d:	out    0x8c,al
  41936f:	push   esi
  419370:	adc    dl,BYTE PTR [edx+0x341b6684]
  419376:	mov    edx,0x1dd24677
  41937b:	leave  
  41937c:	ret    
  41937d:	or     eax,0x995c5f0b
  419382:	mov    eax,ds:0xe84d844c
  419387:	ja     0x4193bc
  419389:	test   al,0x27
  41938b:	pop    ebp
  41938c:	mov    esp,0x62640af3
  419391:	fst    st(6)
  419393:	xor    BYTE PTR [esi-0x186a9d1d],ah
  419399:	lds    esi,FWORD PTR [edx+edx*1+0x12]
  41939d:	sub    dh,BYTE PTR [edx-0x50]
  4193a0:	ins    DWORD PTR es:[edi],dx
  4193a1:	dec    esp
  4193a2:	mov    ch,0xea
  4193a4:	or     bl,cl
  4193a6:	nop
  4193a7:	(bad)  
  4193a8:	jecxz  0x419422
  4193aa:	in     eax,dx
  4193ab:	inc    edi
  4193ac:	aas    
  4193ad:	mov    cl,BYTE PTR [edi-0x2edb711d]
  4193b3:	push   esi
  4193b4:	pop    ecx
  4193b5:	int3   
  4193b6:	clc    
  4193b7:	pop    edx
  4193b8:	mov    DWORD PTR [edi+0x46887379],ebp
  4193be:	mov    eax,0xf36da639
  4193c3:	or     esi,DWORD PTR [eax]
  4193c5:	mov    eax,0xe1e214e2
  4193ca:	lea    edx,[ebp+ebx*1+0x1d]
  4193ce:	test   al,0x6c
  4193d0:	push   edi
  4193d1:	xchg   edx,eax
  4193d2:	ficomp DWORD PTR [ebp+0x3786d1ca]
  4193d8:	mov    dl,0xf5
  4193da:	or     esi,DWORD PTR [edi]
  4193dc:	add    BYTE PTR [edi],bh
  4193de:	fs xchg esp,eax
  4193e0:	rcl    BYTE PTR [edi],cl
  4193e2:	fucom  st(3)
  4193e4:	ret    
  4193e5:	jnp    0x419466
  4193e7:	jnp    0x41943b
  4193e9:	or     al,0xc3
  4193eb:	mov    ecx,0x51d34c79
  4193f0:	mov    BYTE PTR [edx],0x84
  4193f3:	inc    edi
  4193f4:	sub    ebp,esi
  4193f6:	lock fistp DWORD PTR [esi-0x69ba85c9]
  4193fd:	or     eax,0x59f4717e
  419402:	mov    WORD PTR [eax+ebx*1-0x4b],?
  419406:	xchg   esi,eax
  419407:	mov    ecx,0x33439b0d
  41940c:	stos   DWORD PTR es:[edi],eax
  41940d:	push   ecx
  41940e:	add    DWORD PTR [edx+0x7ba30c8c],esp
  419414:	ror    BYTE PTR [eax-0x19],cl
  419417:	dec    edx
  419418:	sub    eax,0xe4b02bd2
  41941d:	jne    0x4193d7
  41941f:	inc    ecx
  419420:	adc    BYTE PTR [ebx+0x1a77f654],al
  419426:	jae    0x419430
  419428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419429:	imul   esi,DWORD PTR ds:0x69cd0e3e,0xffffff8b
  419430:	into   
  419431:	and    al,0xb2
  419433:	call   DWORD PTR [edi-0x28a5a3e5]
  419439:	pop    es
  41943a:	fbstp  TBYTE PTR [ecx-0x54]
  41943d:	pop    esi
  41943e:	stc    
  41943f:	repz mov esp,0xbabe9c04
  419445:	leave  
  419446:	(bad)  
  419447:	push   esi
  419448:	sub    BYTE PTR [ebx-0x29a11be6],bl
  41944e:	dec    eax
  41944f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419450:	xchg   BYTE PTR [edi+0x51ad4d5d],dl
  419456:	and    ecx,DWORD PTR [edi]
  419458:	jp     0x419405
  41945a:	xor    dl,0x49
  41945d:	and    ch,BYTE PTR [esi+0x21eb85c9]
  419463:	jb     0x419454
  419465:	rol    dh,1
  419467:	test   eax,0x628aeeea
  41946c:	aam    0x4e
  41946e:	cmc    
  41946f:	push   edi
  419470:	enter  0xfa5e,0xf3
  419474:	loopne 0x419479
  419476:	mov    dl,0xc0
  419478:	addr16 inc ebx
  41947a:	test   al,0x7d
  41947c:	mov    ds,WORD PTR [edx-0x124884e2]
  419482:	scas   eax,DWORD PTR es:[edi]
  419483:	sbb    dl,BYTE PTR [ebp+0xc]
  419486:	jle    0x419460
  419488:	ror    BYTE PTR [edi+ecx*1],1
  41948b:	test   eax,0xdd4218db
  419490:	shl    al,0x23
  419493:	cdq    
  419494:	in     al,dx
  419495:	push   edi
  419496:	push   edi
  419497:	inc    edi
  419498:	jmp    0x4194c4
  41949a:	fs adc al,0xbc
  41949e:	sbb    al,0xcc
  4194a0:	dec    edi
  4194a1:	loopne 0x419456
  4194a3:	jne    0x419509
  4194a5:	sbb    ebp,DWORD PTR [eax]
  4194a7:	cmp    al,0xce
  4194a9:	push   ecx
  4194aa:	sub    al,0x7e
  4194ac:	loop   0x419465
  4194ae:	dec    edx
  4194af:	ret    0xba98
  4194b2:	mov    gs,esi
  4194b4:	xchg   edx,eax
  4194b5:	cmc    
  4194b6:	jno    0x4194c8
  4194b8:	aaa    
  4194b9:	daa    
  4194ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194bb:	ror    DWORD PTR ds:0xcd2c97dc,0xd1
  4194c2:	or     DWORD PTR [eax+edi*8],edi
  4194c5:	std    
  4194c6:	mov    al,ds:0x695a4a69
  4194cb:	xor    eax,0xd2d4977a
  4194d0:	and    ebx,esi
  4194d2:	sub    ah,BYTE PTR [ebp+0x4b0a7105]
  4194d8:	sub    esp,esp
  4194da:	neg    BYTE PTR ds:[ebx+0x7a33cc1f]
  4194e1:	aaa    
  4194e2:	js     0x4194b3
  4194e4:	fwait
  4194e5:	mov    ebp,0x5426cde4
  4194ea:	push   eax
  4194eb:	addr16 jge 0x4194fa
  4194ee:	sub    al,0x7f
  4194f0:	aaa    
  4194f1:	xlat   BYTE PTR ds:[ebx]
  4194f2:	ret    0xb8e3
  4194f5:	or     eax,0x4dd5db54
  4194fa:	or     cl,BYTE PTR [edi]
  4194fc:	cmp    al,0x34
  4194fe:	jle    0x419497
  419500:	sti    
  419501:	jo     0x4194fa
  419503:	fcom   DWORD PTR [ecx]
  419505:	jbe    0x4194ea
  419507:	sub    al,0xb9
  419509:	mov    bl,ch
  41950b:	or     ah,dl
  41950d:	add    edi,DWORD PTR [ebp+0x11]
  419510:	sbb    bl,BYTE PTR cs:[edx-0x52d04e19]
  419517:	push   edx
  419518:	cmp    ebp,DWORD PTR [eax+edi*2-0x52]
  41951c:	mov    ebp,0xcc26dea6
  419521:	jp     0x4194c1
  419523:	inc    ebp
  419524:	(bad)  
  419525:	leave  
  419526:	loopne 0x419510
  419528:	leave  
  419529:	xor    BYTE PTR [ecx+ebx*8-0x34ee7823],bh
  419530:	push   ebp
  419531:	or     eax,0x9ab7f7e5
  419536:	push   es
  419537:	clc    
  419538:	sbb    dh,al
  41953a:	mov    edx,0xaf01fde9
  41953f:	jmp    0x4195be
  419541:	push   edx
  419542:	mov    esp,0xee82123
  419547:	sbb    ah,0xe6
  41954a:	addr16 mov ch,0x59
  41954d:	call   0xfc51:0x24c9d01c
  419554:	add    eax,0x6a35d8b2
  419559:	out    dx,al
  41955a:	xor    DWORD PTR [edi-0x56],edi
  41955d:	inc    eax
  41955e:	dec    ecx
  41955f:	lods   al,BYTE PTR ds:[esi]
  419560:	sbb    bh,BYTE PTR [edx]
  419562:	lahf   
  419563:	sub    esi,DWORD PTR [eax+esi*2-0x7a]
  419567:	dec    esi
  419568:	mov    ebx,0xd6b3dbec
  41956d:	sti    
  41956e:	mov    dh,0x3a
  419570:	(bad)  
  419571:	fcom   st(2)
  419573:	(bad)  
  419574:	jmp    0x435f:0xe31aa6c3
  41957b:	daa    
  41957c:	add    edx,DWORD PTR [edi+0x73c7baa4]
  419582:	add    cl,BYTE PTR [edi+0x1e87c480]
  419588:	shl    BYTE PTR [esi],1
  41958a:	xor    al,0x55
  41958c:	bound  esi,QWORD PTR [edx+0x3]
  41958f:	add    dh,BYTE PTR [edx]
  419591:	mov    al,BYTE PTR [esi+0x3a]
  419594:	xor    eax,DWORD PTR [edx]
  419596:	sbb    al,0x99
  419598:	bts    DWORD PTR [edx+ebx*1-0x5763062e],esp
  4195a0:	bswap  eax
  4195a2:	jmp    0xf292:0x44003e37
  4195a9:	push   ebx
  4195aa:	dec    esp
  4195ab:	retf   0x8950
  4195ae:	repz or eax,ebp
  4195b1:	xor    ebx,edi
  4195b3:	leave  
  4195b4:	pop    esi
  4195b5:	in     eax,dx
  4195b6:	mov    bl,0xb3
  4195b8:	xchg   ebx,eax
  4195ba:	xchg   esp,eax
  4195bb:	cli    
  4195bc:	sub    edi,edi
  4195be:	mov    edx,0x71de51d6
  4195c3:	mov    cl,0x47
  4195c5:	mov    edx,0x3045eb7d
  4195ca:	cbw    
  4195cc:	je     0x419565
  4195ce:	jecxz  0x419554
  4195d0:	mov    esi,0xf6bb4ab2
  4195d5:	outs   dx,BYTE PTR ds:[esi]
  4195d6:	ret    0x91cb
  4195d9:	lock fimul WORD PTR [edx]
  4195dc:	xor    esp,eax
  4195de:	ds loopne 0x419601
  4195e1:	mov    DWORD PTR ds:0xf654af5d,esp
  4195e7:	cdq    
  4195e8:	fmulp  st(2),st
  4195ea:	inc    edx
  4195eb:	adc    dh,0xe4
  4195ee:	push   esi
  4195ef:	jno    0x419608
  4195f1:	cmp    ebp,DWORD PTR [edi]
  4195f3:	fmul   QWORD PTR [edi+0x2b0ddd37]
  4195f9:	mov    dh,0xd9
  4195fb:	test   eax,0x92d48c4c
  419600:	or     DWORD PTR [edi],esi
  419602:	es xor ecx,esp
  419605:	mov    al,0xc7
  419607:	pop    ecx
  419608:	mov    esp,0x28f48e42
  41960d:	push   edx
  41960e:	mov    cl,0x39
  419610:	and    eax,0x789ee416
  419615:	and    DWORD PTR [esi+0x4438319a],edi
  41961b:	(bad)  
  41961d:	adc    BYTE PTR [ebp-0x53],0x9b
  419621:	xor    BYTE PTR [eax+0x68ef6664],ch
  419627:	sbb    al,0xc2
  419629:	popf   
  41962a:	mov    edi,0x10a45430
  41962f:	pushf  
  419630:	jecxz  0x419620
  419632:	fsub   DWORD PTR [ebx]
  419634:	pop    ecx
  419635:	popa   
  419636:	bnd ret 
  419638:	ror    ah,0x7
  41963b:	pop    esi
  41963c:	gs pop esi
  41963e:	mov    fs,WORD PTR [eax+0x1e3756d]
  419644:	xchg   BYTE PTR [eax+0x2a],bh
  419647:	xchg   ecx,eax
  419648:	in     eax,0xcb
  41964a:	jle    0x419625
  41964c:	nop
  41964d:	scas   eax,DWORD PTR es:[edi]
  41964e:	fxch   st(6)
  419650:	jae    0x4196c2
  419652:	jno    0x419656
  419654:	jb     0x4195d7
  419656:	repnz pusha 
  419658:	inc    ebx
  419659:	add    eax,0x87fc774e
  41965e:	mov    ds,ebx
  419660:	dec    edi
  419661:	add    dh,dh
  419663:	or     eax,0x2c0fd8a3
  419668:	fistp  QWORD PTR [edx+0x5f878fb3]
  41966e:	xchg   esp,eax
  41966f:	xchg   edx,eax
  419670:	jno    0x4195f3
  419672:	mov    bl,0x91
  419674:	leave  
  419675:	popf   
  419676:	and    BYTE PTR [eax-0x20],bl
  419679:	call   0x65bda345
  41967e:	push   ecx
  41967f:	push   ebp
  419680:	push   0x32
  419682:	mov    ds:0x2c24f7c3,eax
  419687:	arpl   cx,bx
  419689:	imul   eax,DWORD PTR [edi+0x20],0xffffffc1
  41968d:	xlat   BYTE PTR ds:[ebx]
  41968e:	sbb    eax,0xa4b81859
  419693:	mov    esp,0xb7cdb447
  419698:	call   0x3498:0x9f0933cd
  41969f:	mov    bh,0x46
  4196a1:	pop    esi
  4196a2:	fs and eax,0x9e5793a0
  4196a8:	cld    
  4196a9:	jl     0x41966b
  4196ab:	cs jo  0x419686
  4196ae:	dec    esi
  4196af:	mov    al,0xb1
  4196b1:	sbb    esi,ebx
  4196b3:	xor    ah,BYTE PTR [ecx+edi*1]
  4196b6:	outs   dx,BYTE PTR ds:[esi]
  4196b7:	aad    0x1f
  4196b9:	and    esi,DWORD PTR [edx+0x1e]
  4196bc:	(bad)  
  4196be:	out    dx,eax
  4196bf:	push   ds
  4196c0:	js     0x419667
  4196c2:	dec    esi
  4196c3:	jg     0x419683
  4196c5:	jp     0x4196c7
  4196c7:	dec    esp
  4196c8:	icebp  
  4196c9:	call   0x3ab35b2c
  4196ce:	dec    ebp
  4196cf:	xchg   esp,eax
  4196d0:	mov    cl,0x73
  4196d2:	jnp    0x4196be
  4196d4:	popf   
  4196d5:	test   al,0xb
  4196d7:	fldenv [edi-0x6f]
  4196da:	fmul   DWORD PTR [ebx+0x6d]
  4196dd:	cmp    BYTE PTR [edi+esi*2-0x69],ch
  4196e1:	into   
  4196e2:	mov    edx,0xd9740214
  4196e7:	xchg   ebx,eax
  4196e8:	cmp    eax,0x80106d33
  4196ed:	inc    ecx
  4196ee:	mov    gs,WORD PTR [edx]
  4196f0:	shl    DWORD PTR [ecx+edx*2],0x6b
  4196f4:	mov    ch,0x6a
  4196f6:	mov    ebp,0x3b7b2e5d
  4196fb:	mov    DWORD PTR [di-0x64],ebx
  4196ff:	retf   
  419700:	shl    eax,cl
  419702:	sub    BYTE PTR [ebx+0x37],dh
  419705:	push   es
  419706:	add    BYTE PTR ds:0x897799eb,al
  41970c:	mov    al,0x27
  41970e:	fbstp  TBYTE PTR [edi]
  419710:	mov    ds:0x83a4e199,al
  419715:	out    dx,eax
  419716:	(bad)  
  419717:	imul   DWORD PTR [ebp+0xf]
  41971a:	aas    
  41971b:	cmp    edx,DWORD PTR [esi+edx*4]
  41971e:	loop   0x41979d
  419720:	adc    cl,BYTE PTR [edi+0x45]
  419723:	mov    fs,WORD PTR [ecx-0x78]
  419726:	sub    eax,0x7e9fc42f
  41972b:	and    eax,0x7069550
  419730:	mov    dh,0x65
  419732:	sbb    al,0x74
  419734:	xor    BYTE PTR [edx],bh
  419736:	int3   
  419737:	les    edi,FWORD PTR ds:0x239b105b
  41973d:	jnp    0x419774
  41973f:	aas    
  419740:	aaa    
  419741:	cli    
  419742:	mov    dh,BYTE PTR [ecx+0x25]
  419745:	xlat   BYTE PTR ds:[ebx]
  419746:	cmp    ecx,esi
  419748:	mov    dh,0x9f
  41974a:	shl    DWORD PTR [edi-0x65],cl
  41974d:	rol    DWORD PTR [eax-0x1a52a195],cl
  419753:	push   edx
  419754:	inc    ecx
  419755:	cmp    eax,0xc21bdba9
  41975a:	xor    esp,DWORD PTR [ecx+0x26]
  41975d:	mov    esp,0x5eb8e870
  419762:	call   FWORD PTR [eax-0x32]
  419765:	jecxz  0x419738
  419767:	jp     0x419726
  419769:	xchg   ebp,eax
  41976a:	(bad)  
  41976b:	(bad)  
  41976c:	nop
  41976d:	mov    al,0xfb
  41976f:	add    ebp,DWORD PTR [ebp-0x6f7dbb42]
  419775:	mov    al,0xb7
  419777:	lods   al,BYTE PTR ds:[esi]
  419778:	dec    edx
  419779:	lahf   
  41977a:	mov    edx,0xfa873717
  41977f:	dec    edx
  419780:	nop
  419781:	inc    esp
  419782:	bound  ecx,QWORD PTR [esi-0x77]
  419785:	dec    ebp
  419786:	je     0x419795
  419788:	in     al,dx
  419789:	or     al,0x3e
  41978b:	mov    eax,DWORD PTR [esi]
  41978d:	dec    esp
  41978e:	sahf   
  41978f:	js     0x41978a
  419791:	fs add al,0x22
  419794:	cli    
  419795:	or     ecx,edx
  419797:	aaa    
  419798:	in     eax,dx
  419799:	mov    esi,0xd39dbf41
  41979e:	call   0xe3b7c7bb
  4197a3:	push   eax
  4197a4:	shl    ah,0x51
  4197a7:	into   
  4197a8:	ret    0xde87
  4197ab:	neg    BYTE PTR [edi]
  4197ad:	mov    ebp,0x38d4fc58
  4197b2:	sub    esi,edi
  4197b4:	cmp    al,0x81
  4197b6:	rol    BYTE PTR [edi+0x62],0x5f
  4197ba:	mov    al,0x79
  4197bc:	mov    ah,0x81
  4197be:	in     al,dx
  4197bf:	jnp    0x419777
  4197c1:	and    DWORD PTR [edi+0x6c96cb38],eax
  4197c7:	mov    ch,BYTE PTR [ecx]
  4197c9:	nop
  4197ca:	mov    cl,0x6d
  4197cc:	out    0x3e,eax
  4197ce:	(bad)  
  4197d0:	sub    eax,0x4e7bd467
  4197d5:	push   esp
  4197d6:	aaa    
  4197d7:	loop   0x419791
  4197d9:	mov    eax,ds:0x887502f1
  4197de:	in     eax,0x4b
  4197e0:	adc    ecx,DWORD PTR [eax-0x5a]
  4197e3:	mov    ah,0x9b
  4197e5:	outs   dx,BYTE PTR ds:[esi]
  4197e6:	mov    ebp,0x6e9b500a
  4197eb:	call   0xf518:0x2b9f7776
  4197f2:	add    al,0x56
  4197f4:	push   ebp
  4197f5:	jmp    0xc112:0xac602f05
  4197fc:	jecxz  0x41981a
  4197fe:	fistp  DWORD PTR [esi-0x62ba7de1]
  419804:	es cmp eax,0xa9ed082c
  41980a:	add    bh,cl
  41980c:	call   0x6d77f86f
  419811:	ja     0x419847
  419813:	outs   dx,DWORD PTR ds:[esi]
  419814:	bound  ebp,QWORD PTR [ebx+0x3d]
  419817:	call   0xcb605df1
  41981c:	pop    ds
  41981d:	jmp    0x419863
  41981f:	aad    0x10
  419821:	add    dh,cl
  419823:	push   ecx
  419824:	stos   DWORD PTR es:[edi],eax
  419825:	sub    dl,BYTE PTR [esi]
  419827:	fdivr  st(7),st
  419829:	xor    esi,DWORD PTR [ecx-0x5b37c1d3]
  41982f:	dec    ecx
  419830:	push   0xa2e1440f
  419835:	jns    0x4197e9
  419837:	mov    bh,BYTE PTR [edx-0x45c71cef]
  41983d:	xchg   edx,eax
  41983e:	push   0xffffffd2
  419840:	pop    esp
  419841:	mov    DWORD PTR [ebp-0x17],ebp
  419844:	mov    ebx,0xa52db7c3
  419849:	mov    dl,0xe8
  41984b:	dec    esi
  41984c:	aam    0x5e
  41984e:	sub    eax,0x577ac98c
  419853:	sti    
  419854:	imul   edx,DWORD PTR [esi-0x5e],0x7ac79b7
  41985b:	and    al,0xa4
  41985d:	push   ss
  41985e:	cli    
  41985f:	push   eax
  419860:	fsubr  st,st(4)
  419862:	push   0x49
  419864:	cmp    ebx,DWORD PTR [ecx+0x48ce4fb8]
  41986a:	push   ebp
  41986b:	jno    0x419804
  41986d:	push   eax
  41986e:	sub    esp,DWORD PTR [ebp-0x2d81b611]
  419874:	popf   
  419875:	(bad)  
  419876:	xor    eax,0xfb50899b
  41987b:	scas   eax,DWORD PTR es:[edi]
  41987c:	adc    eax,0x8f7ca4da
  419881:	or     ebp,DWORD PTR ds:0x49a0cbfe
  419887:	in     eax,0x6
  419889:	push   edx
  41988a:	inc    edi
  41988b:	push   0xfdf9ffe1
  419890:	inc    ebp
  419891:	inc    ebp
  419892:	lahf   
  419893:	fadd   QWORD PTR [ebx-0x27]
  419896:	mov    ?,WORD PTR [esi+0x746661bc]
  41989c:	retf   0x26b2
  41989f:	ret    0xa24d
  4198a2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a4:	das    
  4198a5:	nop
  4198a6:	fcom   st(4)
  4198a8:	mov    DWORD PTR [eax],edi
  4198aa:	stos   DWORD PTR es:[edi],eax
  4198ab:	dec    eax
  4198ac:	sbb    DWORD PTR [edx+ebp*2+0x75],0x6d97b386
  4198b4:	xchg   edx,eax
  4198b5:	pop    ebp
  4198b6:	div    BYTE PTR [esi-0x34e35c12]
  4198bc:	inc    edx
  4198bd:	cli    
  4198be:	pop    edx
  4198bf:	cmp    al,BYTE PTR ds:0xd8359867
  4198c5:	test   al,0xe1
  4198c7:	int3   
  4198c8:	or     BYTE PTR [esi+0x4916a147],bh
  4198ce:	cmp    DWORD PTR [ebx-0x7c],0x1c23767e
  4198d5:	pop    edx
  4198d6:	hlt    
  4198d7:	js     0x41991f
  4198d9:	mov    ch,0x54
  4198db:	bound  esi,QWORD PTR [ecx]
  4198dd:	dec    ecx
  4198de:	push   edx
  4198df:	dec    ecx
  4198e0:	xchg   edi,eax
  4198e1:	add    eax,0xe22a5dc2
  4198e6:	sbb    ch,BYTE PTR [eax+0x47]
  4198e9:	scas   eax,DWORD PTR es:[edi]
  4198ea:	mov    ebp,0xdd1f8d67
  4198ef:	mov    cl,0x50
  4198f1:	jge    0x41991e
  4198f3:	(bad)  
  4198f4:	dec    eax
  4198f5:	sbb    edx,DWORD PTR ss:[eax+0x427bee7e]
  4198fc:	rcl    BYTE PTR [esi+eax*4-0x1c69737f],0xcc
  419904:	and    BYTE PTR [edi],dl
  419906:	sbb    DWORD PTR [esi+0x20],0xffbc4a52
  41990d:	inc    edx
  41990e:	xchg   ebx,eax
  41990f:	iret   
  419910:	aaa    
  419911:	loopne 0x41996a
  419913:	jl     0x419992
  419915:	int    0xa1
  419917:	xchg   edx,ebx
  419919:	call   0xb1:0x8c6bdb16
  419920:	dec    ebx
  419921:	cld    
  419922:	add    DWORD PTR [edi-0x67],0x2716d085
  419929:	cs pop esp
  41992b:	xor    DWORD PTR [ecx+eiz*4],ebx
  41992e:	or     esp,DWORD PTR [ebp+0x28]
  419931:	adc    BYTE PTR [edi+0x3ea291b],ah
  419937:	into   
  419938:	fwait
  419939:	fs leave 
  41993b:	jmp    DWORD PTR [edx]
  41993d:	mov    edx,0x800e69d
  419942:	mov    BYTE PTR [esi],bh
  419944:	in     eax,dx
  419945:	push   0xb56ec592
  41994a:	pop    ss
  41994b:	adc    al,0x44
  41994d:	(bad)  
  41994e:	xchg   edi,eax
  41994f:	js     0x4198d4
  419951:	lods   al,BYTE PTR ds:[esi]
  419952:	push   0x66
  419954:	sbb    BYTE PTR [ebx-0x435ce712],0x11
  41995b:	mov    ebp,0xf964b658
  419961:	pop    ecx
  419962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419963:	rcr    DWORD PTR [edi+0x5df99c2f],cl
  419969:	jl     0x4199d2
  41996b:	test   DWORD PTR [ecx+eax*1],eax
  41996e:	sahf   
  41996f:	(bad)  
  419970:	jnp    0x419974
  419972:	dec    edx
  419973:	mov    bl,0x5
  419975:	cmp    eax,0x2e5c85ce
  41997a:	push   ebp
  41997b:	sbb    edx,DWORD PTR [ebx-0x7f80202d]
  419981:	mov    al,0x37
  419983:	dec    edi
  419984:	hlt    
  419985:	ret    0x899
  419988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419989:	adc    dl,BYTE PTR ss:[edx-0x77]
  41998d:	jo     0x41992d
  41998f:	pop    edx
  419990:	push   ss
  419991:	repz pop edx
  419993:	add    ah,BYTE PTR [edi]
  419995:	add    edi,DWORD PTR [edi-0x87da4f5]
  41999b:	les    ebx,FWORD PTR [ecx+0x62cff0bf]
  4199a1:	sbb    al,0xd4
  4199a3:	sub    eax,esi
  4199a5:	cmp    DWORD PTR [edx+0x3b],edx
  4199a8:	loope  0x41993e
  4199aa:	outs   dx,DWORD PTR ds:[esi]
  4199ab:	push   es
  4199ac:	sar    DWORD PTR [edx],cl
  4199ae:	sbb    al,0x2c
  4199b0:	xchg   ebp,eax
  4199b1:	es (bad) 
  4199b3:	or     eax,0x9bf6cf79
  4199b8:	into   
  4199b9:	jmp    0xbc039a32
  4199be:	mov    edi,esp
  4199c0:	stos   DWORD PTR es:[edi],eax
  4199c1:	aam    0x72
  4199c3:	(bad)  
  4199c4:	int3   
  4199c5:	cdq    
  4199c6:	mov    dl,0x1c
  4199c8:	add    al,0x27
  4199ca:	out    0x8f,eax
  4199cc:	cmp    edx,DWORD PTR [esi]
  4199ce:	test   BYTE PTR [ebx],bh
  4199d0:	std    
  4199d1:	ret    
  4199d2:	in     al,0x80
  4199d4:	and    BYTE PTR [esi],bl
  4199d6:	(bad)  
  4199d7:	jmp    0xc32b817d
  4199dc:	mov    dh,0xc5
  4199de:	mov    cs:0xae086f2f,al
  4199e4:	popa   
  4199e5:	push   esp
  4199e7:	adc    cl,al
  4199e9:	stos   BYTE PTR es:[edi],al
  4199ea:	push   ecx
  4199eb:	inc    edi
  4199ec:	(bad)  
  4199ed:	out    dx,eax
  4199ee:	sub    BYTE PTR [edi],cl
  4199f0:	inc    esi
  4199f1:	mov    ds:0xfe184d68,al
  4199f6:	and    BYTE PTR [ecx-0x5b620c4e],ch
  4199fc:	clc    
  4199fd:	int3   
  4199fe:	sbb    ebp,edx
  419a00:	dec    edx
  419a01:	aas    
  419a02:	push   cs
  419a03:	xchg   edi,eax
  419a04:	xchg   edi,eax
  419a05:	aas    
  419a06:	xlat   BYTE PTR ds:[ebx]
  419a07:	push   es
  419a08:	adc    edi,DWORD PTR ds:0x28131cd5
  419a0e:	es jo  0x4199db
  419a11:	or     ah,BYTE PTR [ebp+0x7163428b]
  419a17:	and    ebx,DWORD PTR [ebp-0x6c]
  419a1a:	jmp    0x419a89
  419a1c:	pop    edi
  419a1e:	test   BYTE PTR [ebp-0x1c2aa25d],0xe9
  419a25:	sbb    DWORD PTR [ebx+0x233537b1],esp
  419a2b:	dec    bh
  419a2d:	mov    edi,0xf1b8a63c
  419a32:	(bad)  
  419a33:	(bad)  
  419a34:	int3   
  419a35:	mov    esp,DWORD PTR [ebx-0x7c5242d2]
  419a3b:	pop    ebx
  419a3c:	jbe    0x419a16
  419a3e:	call   0xff06967c
  419a43:	add    ch,dl
  419a45:	xchg   edx,eax
  419a46:	dec    esp
  419a47:	out    0xd3,eax
  419a49:	in     al,dx
  419a4a:	sti    
  419a4b:	xor    DWORD PTR [ebx+0x37],edi
  419a4e:	push   ebp
  419a4f:	test   al,0x5b
  419a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a52:	mov    cl,0x63
  419a54:	lods   eax,DWORD PTR gs:[esi]
  419a56:	scas   eax,DWORD PTR es:[edi]
  419a57:	imul   ecx,edi,0x20
  419a5a:	xchg   ebx,eax
  419a5b:	dec    esi
  419a5c:	(bad)  
  419a5d:	jnp    0x419ad1
  419a5f:	and    esp,eax
  419a61:	mov    edi,0x6361f385
  419a66:	dec    ebp
  419a67:	pusha  
  419a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a69:	dec    ebp
  419a6a:	gs inc edi
  419a6c:	xor    bl,BYTE PTR [eax-0x16]
  419a6f:	cmp    BYTE PTR [ecx-0x65bfbbdf],0xa8
  419a76:	xchg   DWORD PTR [edx],edx
  419a78:	sbb    al,0xbe
  419a7a:	or     al,0x2d
  419a7c:	xchg   esp,eax
  419a7d:	(bad)  
  419a7e:	iret   
  419a7f:	dec    eax
  419a80:	(bad)  
  419a81:	cdq    
  419a82:	jle    0x419a8d
  419a84:	and    ebx,edi
  419a86:	xor    edx,DWORD PTR [edx-0x6327381e]
  419a8c:	sbb    DWORD PTR [ebx-0x77e16415],0xffffff9b
  419a93:	xor    al,0x17
  419a95:	mov    al,ds:0x5f15055c
  419a9a:	nop
  419a9b:	lea    eax,[esi+0x4df3aa1b]
  419aa1:	mov    BYTE PTR [edx],cl
  419aa3:	ficomp WORD PTR [edx]
  419aa5:	fwait
  419aa6:	dec    dl
  419aa8:	adc    eax,0xb5e5df38
  419aad:	mov    WORD PTR ss:[eax+ebx*2+0x60],di
  419ab3:	pop    edx
  419ab4:	push   edx
  419ab5:	pop    ebp
  419ab6:	jge    0x419a4c
  419ab8:	call   0x71aa74e4
  419abd:	ret    
  419abe:	sbb    eax,0xabd190dd
  419ac3:	inc    ecx
  419ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac5:	mov    ebp,esp
  419ac7:	cmp    al,0xb6
  419ac9:	mov    bl,0xec
  419acb:	cli    
  419acc:	dec    esp
  419acd:	add    eax,0xdfa528f1
  419ad2:	jg     0x419b21
  419ad4:	adc    ecx,esp
  419ad6:	add    DWORD PTR [ecx-0x20fb3ad4],eax
  419adc:	add    ebx,DWORD PTR [ebx+0x41]
  419adf:	dec    eax
  419ae0:	sbb    BYTE PTR [esi+0x4a0e54ba],al
  419ae6:	outs   dx,DWORD PTR ds:[esi]
  419ae7:	xchg   esp,eax
  419ae8:	push   ecx
  419ae9:	jmp    0x901390f4
  419aee:	xchg   ebp,eax
  419aef:	pop    edi
  419af0:	(bad)  
  419af1:	scas   al,BYTE PTR es:[edi]
  419af2:	cmp    DWORD PTR [edi],ebx
  419af4:	icebp  
  419af5:	xchg   edi,eax
  419af6:	test   eax,0x243eca03
  419afb:	out    0xa2,al
  419afd:	shl    DWORD PTR [edx+0x34],0x94
  419b01:	xchg   ebx,eax
  419b02:	inc    ebp
  419b03:	test   DWORD PTR [edx],ebp
  419b05:	ins    DWORD PTR es:[edi],dx
  419b06:	loop   0x419ad8
  419b08:	inc    esp
  419b09:	jmp    0x22d1f783
  419b0e:	test   al,0x46
  419b10:	push   0xb2623997
  419b15:	push   edi
  419b16:	pop    edx
  419b17:	ss gs mov eax,0x25d0611f
  419b1e:	pop    ebp
  419b1f:	retf   0xf8bf
  419b22:	(bad)  
  419b23:	icebp  
  419b24:	icebp  
  419b25:	push   edi
  419b26:	sbb    eax,0xd0c51aa5
  419b2b:	add    BYTE PTR [edi-0x6],bl
  419b2e:	popa   
  419b2f:	(bad)  
  419b30:	punpcklbw mm3,DWORD PTR [ecx+0x1e0ce02a]
  419b37:	sbb    bh,dl
  419b39:	ins    BYTE PTR es:[edi],dx
  419b3a:	test   DWORD PTR [ebx-0x29],esi
  419b3d:	adc    al,0x7b
  419b3f:	out    dx,al
  419b40:	push   edi
  419b41:	sti    
  419b42:	xchg   edi,eax
  419b43:	into   
  419b44:	cmp    BYTE PTR [edi],bh
  419b46:	add    eax,0xc40c4feb
  419b4b:	pop    ebp
  419b4c:	icebp  
  419b4d:	push   cs
  419b4e:	loop   0x419b50
  419b50:	stos   DWORD PTR es:[edi],eax
  419b51:	ins    BYTE PTR es:[edi],dx
  419b52:	adc    BYTE PTR ds:0x8ae72a9b,0x84
  419b59:	das    
  419b5a:	or     edi,edi
  419b5c:	xchg   ebx,eax
  419b5d:	sbb    DWORD PTR [ebp-0x1ad51366],0xffffffe8
  419b64:	xchg   ecx,eax
  419b65:	scas   eax,DWORD PTR es:[edi]
  419b66:	push   es
  419b67:	xor    bl,BYTE PTR ss:[edx]
  419b6a:	or     BYTE PTR [esi+ecx*8-0x29e19e56],bh
  419b71:	pop    edi
  419b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b73:	fistp  WORD PTR [ebx-0x54884a3]
  419b79:	inc    edx
  419b7a:	or     DWORD PTR [ecx+0x428205dd],0x2f9213d0
  419b84:	es push esi
  419b86:	fwait
  419b87:	cmp    bh,ah
  419b89:	adc    esp,ebx
  419b8b:	cmp    eax,0x36e78ad0
  419b90:	clc    
  419b91:	test   DWORD PTR [ebp+0x2a],edx
  419b94:	ror    DWORD PTR [ecx+0x5f08894e],1
  419b9a:	dec    eax
  419b9b:	in     al,0x45
  419b9d:	add    DWORD PTR [ecx+0x37],esp
  419ba0:	dec    edx
  419ba1:	mov    al,ds:0xa64cef07
  419ba6:	adc    BYTE PTR [esi+0x2a],bl
  419ba9:	fsub   st(5),st
  419bab:	cmp    ah,BYTE PTR [esi]
  419bad:	cwde   
  419bae:	sbb    al,0xfb
  419bb0:	aaa    
  419bb1:	add    al,0x76
  419bb3:	dec    ebx
  419bb4:	adc    eax,0xad668318
  419bb9:	pop    ss
  419bba:	add    al,dh
  419bbc:	xchg   edx,eax
  419bbd:	stos   BYTE PTR es:[edi],al
  419bbe:	adc    cl,BYTE PTR [ecx+0x58]
  419bc1:	ins    BYTE PTR es:[edi],dx
  419bc2:	psrlw  mm7,mm3
  419bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc6:	daa    
  419bc7:	xchg   esi,eax
  419bc8:	sub    ah,al
  419bca:	js     0x419ba4
  419bcc:	xchg   edx,eax
  419bcd:	pop    ecx
  419bce:	fdiv   DWORD PTR ss:[edx+0x279b7aa1]
  419bd5:	and    edi,DWORD PTR ds:0x97097f32
  419bdb:	jne    0x419bd0
  419bdd:	push   cs
  419bde:	mov    edx,0xcccd9823
  419be3:	fistp  WORD PTR [edx]
  419be5:	and    ch,0x48
  419be8:	lock push eax
  419bea:	add    DWORD PTR [edx-0x6c],0xfb3e0778
  419bf1:	xor    bh,BYTE PTR [eax+0x7c08873e]
  419bf7:	aam    0xcf
  419bf9:	xor    edx,ecx
  419bfb:	ret    
  419bfc:	cmp    al,0xba
  419bfe:	dec    ebp
  419bff:	pop    ebp
  419c00:	int3   
  419c01:	(bad)  
  419c02:	jbe    0x419ba1
  419c04:	sbb    DWORD PTR [edi],ebx
  419c06:	adc    DWORD PTR [ecx-0x1cb43d5c],ebx
  419c0c:	jge    0x419bb5
  419c0e:	shl    BYTE PTR [edx-0x59fec66b],cl
  419c14:	std    
  419c15:	jmp    0x4c8a6196
  419c1a:	jmp    0x19d824e5
  419c1f:	inc    edi
  419c20:	popa   
  419c21:	jl     0x419c41
  419c23:	jae    0x419ca0
  419c25:	adc    cl,cl
  419c27:	test   BYTE PTR [edi+0x59],al
  419c2a:	mov    esi,0x263bfdba
  419c2f:	sti    
  419c30:	in     eax,0xb1
  419c32:	and    eax,DWORD PTR [edi-0x4b]
  419c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c36:	test   DWORD PTR [edi+0x74],0x8bd42efe
  419c3d:	test   al,0x49
  419c3f:	cdq    
  419c40:	or     DWORD PTR [ecx+0x402036c1],edi
  419c46:	sahf   
  419c47:	mov    eax,0xe8e55997
  419c4c:	in     eax,dx
  419c4d:	mov    ds:0xdd66f2e4,al
  419c52:	cmp    eax,0xc048f1cf
  419c57:	mov    edi,0x5ce3e0fa
  419c5c:	enter  0x835d,0x74
  419c60:	outs   dx,BYTE PTR ds:[esi]
  419c61:	test   DWORD PTR [edi],ebx
  419c63:	(bad)  
  419c64:	aam    0xab
  419c66:	in     eax,dx
  419c67:	pop    eax
  419c68:	sub    eax,0x88630ce4
  419c6d:	retf   0xc570
  419c70:	and    al,0x6a
  419c72:	std    
  419c73:	jb     0x419c4f
  419c75:	mov    al,0x7b
  419c77:	pop    eax
  419c78:	add    eax,ebp
  419c7a:	jp     0x419c57
  419c7c:	jl     0x419c32
  419c7e:	adc    eax,0x8c7d4bae
  419c83:	jo     0x419c93
  419c85:	pop    ebp
  419c86:	outs   dx,BYTE PTR ds:[esi]
  419c87:	and    ecx,DWORD PTR [ecx-0x133a7b7f]
  419c8d:	jns    0x419c70
  419c8f:	mov    esp,0x5622d83f
  419c94:	out    0xf9,al
  419c96:	xor    BYTE PTR [esi],0x6
  419c99:	mov    eax,ds:0x74d869e6
  419c9e:	(bad)  
  419c9f:	mov    cl,0xa9
  419ca1:	nop
  419ca2:	cmp    BYTE PTR [edx+0x31af7e7e],dh
  419ca8:	cs iret 
  419caa:	xchg   BYTE PTR [ebp-0x719cbe63],ch
  419cb0:	push   eax
  419cb1:	sbb    al,0xe9
  419cb3:	shr    BYTE PTR [ecx-0x2c8d1dfd],cl
  419cb9:	aas    
  419cba:	dec    ebx
  419cbb:	push   ebp
  419cbc:	dec    ecx
  419cbd:	jg     0x419ce9
  419cbf:	mov    bl,ch
  419cc1:	mov    al,0x8d
  419cc3:	cli    
  419cc4:	pminsw mm5,QWORD PTR [edi+0x17]
  419cc8:	xor    al,0x79
  419cca:	ror    DWORD PTR [ecx],cl
  419ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccd:	push   esp
  419cce:	ror    BYTE PTR [esi+0x78],cl
  419cd1:	fimul  WORD PTR [ecx]
  419cd3:	push   eax
  419cd4:	inc    edi
  419cd5:	fcomi  st,st(3)
  419cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd8:	fadd   QWORD PTR [edx-0x29491c12]
  419cde:	jne    0x419c84
  419ce0:	daa    
  419ce1:	xor    eax,0x4d57383a
  419ce6:	pop    esp
  419ce7:	push   edi
  419ce8:	leave  
  419ce9:	ret    
  419cea:	inc    ebx
  419ceb:	cmc    
  419cec:	adc    ecx,DWORD PTR [edx]
  419cee:	pop    esp
  419cef:	jmp    0xffd40448
  419cf4:	(bad)  
  419cf5:	push   edx
  419cf6:	xor    BYTE PTR [edx-0x68bbd047],0x32
  419cfd:	mov    ebx,0x1882f40c
  419d02:	fstp   DWORD PTR [ecx]
  419d04:	and    cl,cl
  419d06:	scas   eax,DWORD PTR es:[edi]
  419d07:	pop    eax
  419d08:	aas    
  419d09:	ss xchg bh,bl
  419d0c:	push   ebx
  419d0d:	mov    bl,0xba
  419d0f:	std    
  419d10:	xchg   ecx,eax
  419d11:	stc    
  419d12:	mov    ebp,0x38adf170
  419d17:	xchg   ecx,eax
  419d18:	adc    bl,ch
  419d1a:	mov    ebx,DWORD PTR [edi+0x7481b14f]
  419d20:	push   es
  419d21:	retf   
  419d22:	add    BYTE PTR ds:0x1adc7e53,0xce
  419d29:	xor    bl,dl
  419d2b:	push   ebx
  419d2c:	jge    0x419d56
  419d2e:	je     0x419d69
  419d30:	ja     0x419d88
  419d32:	adc    DWORD PTR cs:[ebx],ebx
  419d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d36:	push   esp
  419d37:	push   ebp
  419d38:	ja     0x419d6d
  419d3a:	mov    ebp,0xc923efce
  419d3f:	push   cs
  419d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d41:	inc    esp
  419d42:	or     al,0x53
  419d44:	mov    eax,0x3d546861
  419d49:	lock (bad) 
  419d4b:	or     eax,0x86134f04
  419d50:	call   0x428d:0xc062ebcf
  419d57:	loopne 0x419d37
  419d59:	or     BYTE PTR [edx],0x73
  419d5c:	fwait
  419d5d:	and    eax,0x7b820405
  419d62:	mov    ch,0x51
  419d64:	mov    ecx,0x6d6bd02f
  419d69:	adc    esi,ebx
  419d6b:	xchg   ebp,eax
  419d6c:	pop    ecx
  419d6d:	xchg   ebx,eax
  419d6e:	cmp    esi,DWORD PTR [ecx+0x356b7f2a]
  419d74:	mov    DWORD PTR [esi+edi*4+0x627659f4],0xc2f8b836
  419d7f:	cmovae eax,DWORD PTR [edi]
  419d82:	out    dx,al
  419d83:	(bad)  
  419d85:	mov    eax,ds:0xa88ace31
  419d8a:	sub    esp,ebp
  419d8c:	sub    esi,DWORD PTR [ebx]
  419d8e:	sub    eax,0x3489fe88
  419d93:	adc    BYTE PTR [esi+0x433d7b50],cl
  419d99:	test   eax,0x834a9301
  419d9e:	sbb    BYTE PTR [esi+ebp*4-0x720620ef],dl
  419da5:	push   0xffffffa6
  419da7:	(bad)  
  419da8:	jp     0x419db5
  419daa:	(bad)  
  419dab:	fnsave [eax-0x1dc07742]
  419db1:	jmp    0xefd:0x63932e1d
  419db8:	adc    DWORD PTR [edi-0x37],eax
  419dbb:	das    
  419dbc:	leave  
  419dbd:	mov    ecx,0x99fa95e1
  419dc2:	neg    BYTE PTR [esi+0x523b02e3]
  419dc8:	cmp    BYTE PTR [si+0x2e4d],0x6d
  419dce:	fdivr  QWORD PTR [ebx+edx*4]
  419dd1:	mov    bh,0x7c
  419dd3:	mov    al,ds:0xbdcf0786
  419dd8:	add    edi,esp
  419dda:	loopne 0x419e2e
  419ddc:	int3   
  419ddd:	dec    edi
  419dde:	outs   dx,BYTE PTR ds:[esi]
  419ddf:	adc    al,0x92
  419de1:	iret   
  419de2:	dec    ecx
  419de3:	jb     0x419e5b
  419de5:	sub    BYTE PTR [ebp-0x21477025],bl
  419deb:	retf   0xfc98
  419dee:	xchg   esi,eax
  419def:	sub    ecx,ebx
  419df1:	mov    ds:0xcb7485f1,al
  419df6:	or     DWORD PTR [esi-0x68d201d9],edi
  419dfc:	ror    edx,0x8b
  419dff:	jne    0x419e19
  419e01:	push   cs
  419e02:	sub    edx,ebx
  419e04:	sub    DWORD PTR [ecx],esi
  419e06:	mov    ebx,0xc4bbdd44
  419e0b:	xor    eax,0xa3f93970
  419e10:	lds    eax,FWORD PTR [esi+eiz*8-0x5f]
  419e14:	jnp    0x419e08
  419e16:	mov    dl,0x24
  419e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e19:	out    dx,al
  419e1a:	sub    ch,BYTE PTR [edi]
  419e1c:	mov    esi,0x22c59454
  419e21:	xchg   ebp,eax
  419e22:	inc    esp
  419e23:	mov    bh,0xbf
  419e25:	inc    eax
  419e26:	inc    edx
  419e27:	mov    esp,0x17849365
  419e2c:	out    dx,al
  419e2d:	xchg   ebp,eax
  419e2e:	push   edx
  419e2f:	cwde   
  419e30:	jecxz  0x419e24
  419e32:	sbb    eax,DWORD PTR [ebx-0x3]
  419e35:	daa    
  419e36:	ins    BYTE PTR es:[edi],dx
  419e37:	mov    ebp,0xc6d07dc1
  419e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e3d:	daa    
  419e3e:	in     al,0xf1
  419e40:	sub    DWORD PTR [edx],ecx
  419e42:	pusha  
  419e43:	in     eax,dx
  419e44:	jo     0x419e71
  419e46:	pusha  
  419e47:	imul   edi,DWORD PTR [edi-0x4],0x2e
  419e4b:	or     eax,0x4becb9d8
  419e50:	dec    esi
  419e51:	js     0x419e46
  419e53:	mov    bl,BYTE PTR [edi-0x119dfcf4]
  419e59:	dec    esi
  419e5a:	push   eax
  419e5b:	adc    dh,BYTE PTR [ebp+0x3ba8e6ce]
  419e61:	jecxz  0x419e72
  419e63:	clc    
  419e64:	mul    BYTE PTR [ebx]
  419e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e67:	push   ebx
  419e68:	ins    DWORD PTR es:[edi],dx
  419e69:	push   edi
  419e6a:	aam    0x75
  419e6c:	ins    BYTE PTR es:[edi],dx
  419e6d:	or     eax,0x53d8715b
  419e72:	add    edi,ebp
  419e74:	and    al,0x64
  419e76:	out    dx,eax
  419e77:	ss in  eax,dx
  419e79:	sbb    ch,BYTE PTR [ebp-0x27]
  419e7c:	jmp    0x3991:0x14820302
  419e83:	add    al,0x9b
  419e85:	push   edx
  419e86:	pushf  
  419e87:	push   0x4d
  419e89:	test   DWORD PTR [ebp+0x7d],ebx
  419e8c:	sub    esi,DWORD PTR [edx+ebp*4]
  419e8f:	ss jne 0x419e32
  419e92:	xchg   ebx,eax
  419e93:	jmp    0x419ecd
  419e95:	scas   al,BYTE PTR es:[edi]
  419e96:	inc    edi
  419e97:	jmp    0xa6311ca7
  419e9c:	jmp    0x30e2:0x79b5884c
  419ea3:	xchg   edi,eax
  419ea4:	add    ecx,ecx
  419ea6:	aam    0x9b
  419ea8:	stos   DWORD PTR es:[edi],eax
  419ea9:	stos   DWORD PTR es:[edi],eax
  419eaa:	fwait
  419eab:	aam    0x58
  419ead:	bound  edx,QWORD PTR [eax]
  419eaf:	les    ebx,FWORD PTR [edx+0x559a6c52]
  419eb5:	or     DWORD PTR [edi],eax
  419eb7:	bound  ebx,QWORD PTR [esi+0x198ad049]
  419ebd:	jmp    0x341b:0xe7e0a106
  419ec4:	fidiv  WORD PTR [ecx+0x41]
  419ec7:	es pop es
  419ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eca:	(bad)  
  419ecb:	push   esp
  419ecc:	push   ds
  419ecd:	fwait
  419ece:	test   DWORD PTR [edi+0x74d679d7],esp
  419ed4:	gs sub al,0x80
  419ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed8:	dec    esp
  419ed9:	stc    
  419eda:	sbb    bl,al
  419edc:	xchg   esi,eax
  419edd:	pop    ebp
  419ede:	jp     0x419ee7
  419ee0:	in     al,dx
  419ee1:	bound  ecx,QWORD PTR [eax+0x5bbf4542]
  419ee7:	and    dl,dh
  419ee9:	(bad)  
  419eeb:	repz mov cl,0xf5
  419eee:	push   ds
  419eef:	test   al,0x8c
  419ef1:	inc    esp
  419ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef3:	mov    ah,0x34
  419ef5:	adc    al,0x39
  419ef7:	in     al,0xb4
  419ef9:	(bad)  [ebx-0x7b]
  419efc:	stos   BYTE PTR es:[edi],al
  419efd:	mov    ebp,0x839657db
  419f02:	cli    
  419f03:	sub    eax,0x4d5b7176
  419f08:	dec    eax
  419f09:	push   es
  419f0a:	mov    al,ds:0xfdbfbfa5
  419f0f:	stos   BYTE PTR es:[edi],al
  419f10:	imul   ebx,esp,0x33
  419f13:	nop
  419f14:	sub    ah,bh
  419f16:	or     al,0x8f
  419f19:	sbb    ah,BYTE PTR [esp+ebx*8]
  419f1c:	mov    edx,0xa43a6e62
  419f21:	lds    ebp,FWORD PTR [ebx-0x3c]
  419f24:	jbe    0x419ede
  419f26:	xor    DWORD PTR [ebx+0x5d],eax
  419f29:	mov    eax,ds:0x9b26fac0
  419f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2f:	in     eax,0x1f
  419f31:	mov    ebp,0xbaa5b5ce
  419f36:	add    eax,0x7a08e696
  419f3b:	and    eax,0xee21f91c
  419f40:	cmp    al,0xd8
  419f42:	and    al,BYTE PTR [edx+0x73]
  419f45:	pop    ebp
  419f46:	fnstsw WORD PTR [ebp+0x6f]
  419f49:	into   
  419f4a:	iret   
  419f4b:	imul   ebx,DWORD PTR [edi+0x753ae949],0x1d
  419f52:	sar    DWORD PTR [eax+0x5a4e2add],1
  419f58:	scas   al,BYTE PTR es:[edi]
  419f59:	dec    edi
  419f5a:	sbb    al,0xc5
  419f5c:	aaa    
  419f5d:	mov    dl,bl
  419f5f:	or     BYTE PTR [ebx-0x2b],bl
  419f62:	call   0x361db279
  419f67:	add    eax,ebp
  419f69:	out    dx,eax
  419f6a:	out    0xce,al
  419f6c:	inc    ebp
  419f6d:	cld    
  419f6e:	dec    ebx
  419f6f:	out    0x2e,eax
  419f71:	ja     0x419faf
  419f73:	xchg   edx,eax
  419f74:	dec    esp
  419f75:	jbe    0x419f60
  419f77:	xor    BYTE PTR [ecx+0x61],dh
  419f7a:	das    
  419f7b:	sub    esi,DWORD PTR [esi]
  419f7d:	jge    0x419fbb
  419f7f:	inc    esp
  419f80:	add    edi,DWORD PTR [edi+0x26]
  419f83:	sti    
  419f84:	mov    bh,0x83
  419f86:	ror    BYTE PTR [esi],0x4f
  419f89:	pushf  
  419f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8b:	mov    cl,0x8a
  419f8d:	loope  0x419fe8
  419f8f:	and    eax,0xa48a0ba3
  419f94:	mov    esi,0xfa5ed4ee
  419f99:	(bad)  
  419f9a:	mov    esp,0xeb675478
  419f9f:	int    0xe4
  419fa1:	jmp    0x419f43
  419fa3:	mov    cl,0x18
  419fa5:	xor    DWORD PTR [ebx],ebp
  419fa7:	inc    esp
  419fa8:	cmp    al,0xe8
  419faa:	fld    TBYTE PTR ds:0x625f8d24
  419fb0:	pushf  
  419fb1:	mov    DWORD PTR [edi-0x4a10e9d7],esi
  419fb7:	imul   ebp,eax,0xffffff8a
  419fba:	sub    DWORD PTR [ecx-0xf],eax
  419fbd:	mov    ch,0xa1
  419fbf:	inc    esi
  419fc0:	pop    esi
  419fc1:	push   cs
  419fc2:	cmc    
  419fc3:	and    BYTE PTR [ecx-0x25ab3333],0xfc
  419fca:	int3   
  419fcb:	in     al,dx
  419fcc:	or     al,BYTE PTR [ebx]
  419fce:	xchg   edx,eax
  419fcf:	mov    esi,edi
  419fd1:	mov    ds:0x3e6fee4e,al
  419fd6:	ret    0xf594
  419fd9:	ss dec esp
  419fdb:	sub    bl,dl
  419fdd:	add    eax,0x50d5894a
  419fe2:	mov    ebx,0xe8d573b0
  419fe7:	xchg   DWORD PTR [esi+0x70],ecx
  419fea:	imul   esi,DWORD PTR [edx-0x60],0x3f4323e3
  419ff1:	mov    bl,0xc0
  419ff3:	mov    eax,ds:0x8549667a
  419ff8:	pusha  
  419ff9:	cvtpi2ps xmm7,QWORD PTR [edx+0x63fac7bb]
  41a000:	cmp    eax,DWORD PTR [ecx]
  41a002:	xchg   edi,eax
  41a003:	jmp    0xe27a:0x864c4683
  41a00a:	fs test eax,0x3cf99433
  41a010:	adc    eax,0x85a283aa
  41a015:	add    BYTE PTR [ebp-0x46],0xbc
  41a019:	popa   
  41a01a:	pop    esp
  41a01b:	xor    eax,0xeaae556e
  41a020:	adc    ebp,DWORD PTR [esi-0x72]
  41a023:	and    eax,0xa86e5551
  41a028:	pop    edx
  41a029:	rcl    BYTE PTR [ecx-0x62c96bd],1
  41a02f:	add    esi,esi
  41a031:	out    0x32,al
  41a033:	mov    es,WORD PTR [ebx]
  41a035:	add    BYTE PTR [esi],0x32
  41a038:	push   ecx
  41a039:	and    DWORD PTR [ebp-0x39e4db8f],ebp
  41a03f:	push   cs
  41a040:	push   ebx
  41a041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a042:	adc    ebx,edi
  41a044:	cmp    DWORD PTR [edi],0x4e
  41a047:	cld    
  41a048:	loop   0x41a0c4
  41a04a:	adc    ebx,DWORD PTR [edx-0x46]
  41a04d:	int3   
  41a04e:	lods   al,BYTE PTR ds:[esi]
  41a04f:	push   ss
  41a050:	ds inc esp
  41a052:	aaa    
  41a053:	ss and al,0x11
  41a056:	clc    
  41a057:	mov    dl,0x27
  41a059:	push   edi
  41a05a:	or     edi,DWORD PTR [eax+0x6e]
  41a05d:	jl     0x41a02c
  41a05f:	adc    DWORD PTR [ecx],esi
  41a061:	xacquire xchg DWORD PTR [ebp-0x56944908],eax
  41a068:	ja     0x41a0a6
  41a06a:	push   ebx
  41a06b:	or     DWORD PTR [ebx+ebx*4-0x708c733a],0xb0268c89
  41a076:	mov    ebx,0x3984046e
  41a07b:	iret   
  41a07c:	in     eax,0x15
  41a07e:	mov    DWORD PTR [ecx-0x59],esi
  41a081:	jno    0x41a018
  41a083:	push   esp
  41a084:	sahf   
  41a085:	xchg   edx,eax
  41a086:	nop
  41a087:	(bad)  
  41a088:	xchg   esp,eax
  41a089:	aam    0xba
  41a08b:	sbb    bh,ah
  41a08d:	sar    cl,1
  41a08f:	icebp  
  41a090:	sub    BYTE PTR [edi+esi*8+0x3887a66f],dl
  41a097:	sbb    eax,0x3b221c80
  41a09c:	mov    eax,0xe86ef8e5
  41a0a1:	xor    BYTE PTR [ebx],ch
  41a0a3:	cdq    
  41a0a4:	or     BYTE PTR [eax],ch
  41a0a6:	or     cl,BYTE PTR [ecx-0x24]
  41a0a9:	cmp    DWORD PTR [ebx],esp
  41a0ab:	jno    0x41a050
  41a0ad:	sbb    BYTE PTR [ecx-0x5b83c7f4],bl
  41a0b3:	xchg   BYTE PTR [eax+edx*8],bh
  41a0b6:	and    al,BYTE PTR [esp+edi*8-0x33]
  41a0ba:	sbb    eax,0xa7a0b3c0
  41a0bf:	shl    eax,1
  41a0c1:	imul   ecx,DWORD PTR [ebx-0x5b491316],0x3eba6671
  41a0cb:	mov    al,ds:0xdf61e229
  41a0d0:	sub    DWORD PTR [eax],ebx
  41a0d2:	cmp    al,0x95
  41a0d4:	fld    DWORD PTR [ebx]
  41a0d6:	(bad)  
  41a0d7:	aad    0x5a
  41a0d9:	xor    bl,BYTE PTR [ebx]
  41a0db:	and    eax,0x83ea4c38
  41a0e0:	or     ecx,esi
  41a0e2:	not    cl
  41a0e4:	mov    al,0x84
  41a0e6:	jle    0x41a126
  41a0e8:	xor    DWORD PTR [edx+0x4e3f43c8],esp
  41a0ee:	pop    edx
  41a0ef:	das    
  41a0f0:	pop    ebx
  41a0f1:	fsubr  DWORD PTR [edi+0x6755f761]
  41a0f7:	push   ds
  41a0f8:	mov    ebx,0x3b49103c
  41a0fd:	cmp    DWORD PTR [ecx-0x28],ecx
  41a100:	(bad)  
  41a101:	mov    ds:0xc39454da,al
  41a106:	jle    0x41a10b
  41a108:	cmc    
  41a109:	pop    ss
  41a10a:	out    0x12,al
  41a10c:	add    eax,0x84dc3aa1
  41a111:	adc    ecx,DWORD PTR [esi]
  41a113:	mov    esi,ss
  41a115:	loope  0x41a13a
  41a117:	ficom  DWORD PTR [ebx-0x3e]
  41a11a:	scas   eax,DWORD PTR es:[edi]
  41a11b:	(bad)  
  41a11c:	adc    edi,DWORD PTR [esi-0x25]
  41a11f:	sub    al,0x34
  41a121:	mov    bh,0x56
  41a123:	jmp    0x41a182
  41a125:	loope  0x41a16e
  41a127:	test   BYTE PTR [edi-0x64],ah
  41a12a:	jp     0x41a168
  41a12c:	adc    dh,dh
  41a12e:	xor    al,0x12
  41a130:	dec    ebx
  41a131:	shl    eax,cl
  41a133:	xchg   DWORD PTR [edx+0x1],edx
  41a136:	out    0xed,al
  41a138:	pop    esi
  41a139:	xchg   esp,eax
  41a13a:	nop
  41a13b:	or     DWORD PTR [ebx],ecx
  41a13d:	addr16 (bad) 
  41a13f:	jo     0x41a106
  41a141:	mov    eax,0xa70dd39d
  41a146:	and    ebp,DWORD PTR [eax+0x32c40d47]
  41a14c:	gs xchg ebp,eax
  41a14e:	pop    edi
  41a14f:	cmp    DWORD PTR [ecx],esp
  41a151:	add    cl,ch
  41a153:	into   
  41a154:	jmp    0x41a161
  41a156:	or     BYTE PTR [edx-0x436c5616],bh
  41a15c:	or     BYTE PTR ds:0xf6e54916,cl
  41a162:	lds    ebx,FWORD PTR [edi-0x42a9d5bc]
  41a168:	aaa    
  41a169:	fistp  DWORD PTR [ebx]
  41a16b:	sub    al,BYTE PTR [edi-0x531bff28]
  41a171:	xchg   esp,eax
  41a172:	dec    ebx
  41a173:	(bad)  
  41a174:	dec    edi
  41a175:	sbb    eax,0x2e2f8471
  41a17a:	mov    ah,0x5c
  41a17c:	(bad)  
  41a17d:	icebp  
  41a17e:	adc    BYTE PTR [ebx],bh
  41a180:	ret    
  41a181:	mov    al,0x8a
  41a183:	mov    ebx,0xedaabe7b
  41a188:	ja     0x41a10f
  41a18a:	sbb    BYTE PTR [edi-0x1a],0x60
  41a18e:	jg     0x41a1ea
  41a190:	(bad)  
  41a191:	adc    al,0x65
  41a193:	mov    esp,0x6c26babd
  41a198:	in     eax,dx
  41a199:	fdivr  st(4),st
  41a19b:	sub    al,0x75
  41a19d:	popf   
  41a19e:	aam    0x77
  41a1a0:	sbb    DWORD PTR [eax-0x6e],ecx
  41a1a3:	sbb    eax,edi
  41a1a5:	push   esi
  41a1a6:	(bad)  
  41a1a7:	es dec edi
  41a1a9:	hlt    
  41a1aa:	inc    ecx
  41a1ab:	jbe    0x41a187
  41a1ad:	stc    
  41a1ae:	and    BYTE PTR [ebx-0x4e531d9a],dl
  41a1b4:	or     BYTE PTR [edx],bl
  41a1b6:	add    edx,DWORD PTR [ebx+0x2c]
  41a1b9:	jno    0x41a183
  41a1bb:	in     eax,0xc1
  41a1bd:	in     eax,0x63
  41a1bf:	imul   esp,eax,0x46c974e
  41a1c5:	inc    esi
  41a1c6:	xchg   ebp,eax
  41a1c7:	mov    esi,0xed96a4a1
  41a1cc:	loope  0x41a1fe
  41a1ce:	mov    es,WORD PTR [edi+ebp*2+0x64]
  41a1d2:	ins    DWORD PTR es:[edi],dx
  41a1d3:	push   esi
  41a1d4:	adc    ebp,DWORD PTR ds:0x2a8760ac
  41a1da:	lods   eax,DWORD PTR ds:[esi]
  41a1db:	arpl   WORD PTR [esp],bx
  41a1de:	sbb    al,0x26
  41a1e0:	rcr    BYTE PTR [edx-0x227e1a68],0x50
  41a1e7:	jns    0x41a18f
  41a1e9:	outs   dx,BYTE PTR ds:[si]
  41a1eb:	sub    BYTE PTR [ecx-0xb5f7511],dl
  41a1f1:	jnp    0x41a1d6
  41a1f3:	pushf  
  41a1f4:	test   DWORD PTR ds:0x3f3be3b8,eax
  41a1fa:	aaa    
  41a1fb:	mov    eax,0x395b9302
  41a200:	ficom  DWORD PTR [ebx-0x5d20bb80]
  41a206:	push   eax
  41a207:	aaa    
  41a208:	mov    eax,0x100ed8d5
  41a20d:	pop    ds
  41a20e:	call   DWORD PTR [edi+0x1a]
  41a211:	cld    
  41a212:	enter  0x2c26,0x6f
  41a216:	retf   0xf5c8
  41a219:	or     bh,BYTE PTR [ebx+0x738d751b]
  41a21f:	cmp    BYTE PTR [ecx-0x12613644],dl
  41a225:	cli    
  41a226:	sub    esi,DWORD PTR [edx]
  41a228:	push   0x20d4c65
  41a22d:	jno    0x41a268
  41a22f:	cmc    
  41a230:	push   cs
  41a231:	mov    cx,0x773a
  41a235:	sar    esp,1
  41a237:	mov    al,BYTE PTR [esi+0x245ef3f5]
  41a23d:	lock lds edi,FWORD PTR [ebp+0x61]
  41a241:	inc    ebp
  41a242:	jmp    0x437e3817
  41a247:	(bad)  [ebp+0x3b]
  41a24a:	popa   
  41a24b:	push   edx
  41a24c:	xchg   ebx,eax
  41a24d:	and    esp,ebp
  41a24f:	xor    al,0xf0
  41a251:	enter  0xf7b0,0x89
  41a255:	(bad)  
  41a256:	das    
  41a257:	inc    esi
  41a258:	xor    ah,BYTE PTR [edx+ecx*8-0x10d09aa7]
  41a25f:	cmp    BYTE PTR [esi+0x1a93bdc2],bh
  41a265:	jmp    0xffdef9ec
  41a26a:	data16 mov dh,0x72
  41a26d:	or     DWORD PTR [ebp-0x5e339b5d],ebx
  41a273:	arpl   WORD PTR [esi-0x2dbcc935],sp
  41a279:	sub    DWORD PTR [eax-0x43],eax
  41a27c:	outs   dx,DWORD PTR ds:[esi]
  41a27d:	fimul  DWORD PTR [edx]
  41a27f:	cmp    dh,cl
  41a281:	fucomip st,st(2)
  41a283:	inc    eax
  41a284:	jne    0x41a23b
  41a286:	adc    ch,al
  41a288:	sbb    ebx,DWORD PTR [edi-0x44]
  41a28b:	int    0xd6
  41a28d:	and    edi,DWORD PTR [ebx+0x5]
  41a290:	push   ss
  41a291:	aaa    
  41a292:	scas   al,BYTE PTR es:[edi]
  41a293:	clc    
  41a294:	ret    0xaa59
  41a297:	cmp    al,0xc1
  41a299:	jle    0x41a2a3
  41a29b:	dec    edx
  41a29c:	enter  0x563e,0x39
  41a2a0:	inc    esp
  41a2a1:	jecxz  0x41a233
  41a2a3:	repz mov eax,ds:0x1f89d628
  41a2a9:	xchg   esi,eax
  41a2aa:	std    
  41a2ab:	sbb    DWORD PTR ds:0xa229b3a5,esi
  41a2b1:	fs mov esp,0x5e3f2766
  41a2b7:	push   ebx
  41a2b8:	(bad)  
  41a2b9:	cmp    DWORD PTR [ebx-0x2aa53d07],ebx
  41a2bf:	ds daa 
  41a2c1:	mov    al,ds:0x80c07229
  41a2c6:	dec    edi
  41a2c7:	clc    
  41a2c8:	outs   dx,BYTE PTR ds:[esi]
  41a2c9:	fild   DWORD PTR [edi]
  41a2cb:	sar    DWORD PTR [eax],1
  41a2cd:	(bad)  
  41a2ce:	not    BYTE PTR [ecx+0x2bbcb67]
  41a2d4:	bound  edi,QWORD PTR [edx-0x57bf4be6]
  41a2da:	outs   dx,BYTE PTR ds:[esi]
  41a2db:	adc    DWORD PTR [ebp-0x5cd89d05],0x5b1d1554
  41a2e5:	outs   dx,BYTE PTR ds:[esi]
  41a2e6:	adc    BYTE PTR [ebx],cl
  41a2e8:	outs   dx,BYTE PTR ds:[esi]
  41a2e9:	sbb    al,0x2e
  41a2eb:	cdq    
  41a2ec:	scas   al,BYTE PTR es:[edi]
  41a2ed:	out    dx,al
  41a2ee:	cmp    al,0x57
  41a2f0:	(bad)  
  41a2f1:	cdq    
  41a2f2:	fidivr DWORD PTR [eax]
  41a2f4:	and    DWORD PTR [edx+0x21],ebp
  41a2f7:	pop    eax
  41a2f8:	pop    ebp
  41a2f9:	(bad)  
  41a2fa:	or     DWORD PTR [edx+0x22],edx
  41a2fd:	(bad)  
  41a2fe:	fcomip st,st(2)
  41a300:	dec    ecx
  41a301:	retf   0xa408
  41a304:	ds inc ebp
  41a306:	imul   BYTE PTR [ebx+0x74]
  41a309:	xor    al,ah
  41a30b:	out    0xd9,eax
  41a30d:	bndstx [ebp+0x762dd0c9],(bad)
  41a314:	fs sti 
  41a316:	loopne 0x41a2c2
  41a318:	scas   eax,DWORD PTR es:[edi]
  41a319:	and    esp,DWORD PTR [esi]
  41a31b:	push   ebp
  41a31c:	je     0x41a34d
  41a31e:	jmp    0x41a363
  41a320:	mov    eax,0xc9e376cd
  41a325:	ret    0xd8b8
  41a328:	mov    ss,WORD PTR [ebp+0x6ed94656]
  41a32e:	sbb    edi,ecx
  41a330:	in     eax,dx
  41a331:	cmp    al,0x39
  41a333:	push   ebp
  41a334:	arpl   di,bx
  41a336:	mov    edi,0x1af1257e
  41a33b:	cmp    esi,DWORD PTR [esi-0x247508dc]
  41a341:	sub    BYTE PTR [edi+0x4ee7a8a6],0x63
  41a348:	pop    edi
  41a349:	enter  0x2cee,0xbf
  41a34d:	mov    ah,0x68
  41a34f:	fisubr DWORD PTR [ecx+0x3f8da962]
  41a355:	pushf  
  41a356:	cmc    
  41a357:	mov    ch,0xd4
  41a359:	iret   
  41a35a:	scas   eax,DWORD PTR es:[edi]
  41a35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a35c:	out    0x58,eax
  41a35e:	lahf   
  41a35f:	test   ecx,0x2a6ab37b
  41a365:	mov    edx,0x17ca74f0
  41a36a:	cmp    al,0x48
  41a36c:	xor    DWORD PTR [esi-0x79],esi
  41a36f:	mov    al,ds:0x82f4a0b
  41a374:	mov    al,ds:0xee30c00c
  41a379:	loopne 0x41a31a
  41a37b:	imul   eax,DWORD PTR ss:[ebp-0x1329944f],0xd120009d
  41a386:	xlat   BYTE PTR ds:[ebx]
  41a387:	sbb    edi,DWORD PTR [ecx-0x7f99f103]
  41a38d:	sub    al,0x35
  41a38f:	jg     0x41a36f
  41a391:	add    esi,DWORD PTR [esi-0x3d]
  41a394:	pop    edi
  41a395:	std    
  41a396:	es pop esi
  41a398:	adc    eax,0x716b195d
  41a39d:	lea    eax,[ebx]
  41a39f:	test   eax,0x37a4d2ee
  41a3a4:	call   0xe338:0xf9860c1f
  41a3ab:	test   DWORD PTR [ebp+0x76],edi
  41a3ae:	pop    ss
  41a3af:	int3   
  41a3b0:	ins    BYTE PTR es:[edi],dx
  41a3b1:	sbb    ch,bh
  41a3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b4:	sub    DWORD PTR [bp+di-0x63],0xffffffd9
  41a3b9:	mov    al,BYTE PTR [edi-0xd151fc6]
  41a3bf:	jo     0x41a41b
  41a3c1:	push   esp
  41a3c2:	mov    eax,ds:0x2a639e5e
  41a3c7:	repz (bad) 
  41a3c9:	push   esp
  41a3ca:	sub    BYTE PTR [esi+0x2bd3bd44],0x3c
  41a3d1:	or     eax,0x5e6d133b
  41a3d6:	jo     0x41a3f5
  41a3d8:	mov    WORD PTR [ecx+edi*4-0x461341f4],es
  41a3df:	daa    
  41a3e0:	shl    ebx,cl
  41a3e2:	popf   
  41a3e3:	fwait
  41a3e4:	adc    esp,edi
  41a3e6:	add    DWORD PTR [ebp-0x55f804fe],0x77e2f652
  41a3f0:	dec    ebp
  41a3f1:	sub    bh,dh
  41a3f3:	aaa    
  41a3f4:	xchg   edx,eax
  41a3f5:	(bad)  
  41a3f6:	mov    ecx,0x132a72de
  41a3fb:	test   bl,cl
  41a3fd:	xor    BYTE PTR [edi+eax*1+0x34],dl
  41a401:	sub    al,0xbc
  41a403:	aaa    
  41a404:	push   ebp
  41a405:	push   ss
  41a406:	repnz iret 
  41a408:	push   ss
  41a409:	out    0x80,eax
  41a40b:	push   0xfffffffb
  41a40d:	add    bh,BYTE PTR [eax+edi*2+0x5d]
  41a411:	scas   al,BYTE PTR es:[edi]
  41a412:	jl     0x41a3fa
  41a414:	jmp    0x16e271ff
  41a419:	dec    esi
  41a41a:	jmp    0x41a46a
  41a41c:	mov    ecx,0x370b59bf
  41a421:	push   0x53
  41a423:	pusha  
  41a424:	cmp    esp,edi
  41a426:	das    
  41a427:	mov    edx,0xb61f5e97
  41a42c:	stos   DWORD PTR es:[edi],eax
  41a42d:	sahf   
  41a42e:	dec    edi
  41a42f:	ja     0x41a3ca
  41a431:	push   eax
  41a432:	std    
  41a433:	enter  0x844d,0x3a
  41a437:	cmp    edi,DWORD PTR [edi+0x2d]
  41a43a:	and    al,0xaa
  41a43c:	xor    bl,dl
  41a43e:	jmp    0x3da5:0x9833
  41a444:	iret   
  41a445:	sahf   
  41a446:	xor    esp,esi
  41a448:	in     al,0xc4
  41a44a:	nop    DWORD PTR [edx]
  41a44d:	mov    edx,0x175578bb
  41a452:	test   al,0x6a
  41a454:	imul   edx,eax,0xffffffed
  41a457:	sbb    DWORD PTR [esi],ebp
  41a459:	(bad)  
  41a45a:	dec    DWORD PTR [ecx-0x65]
  41a45d:	mov    esi,0x5978b1db
  41a462:	mul    BYTE PTR [ecx+0x31dc7b6e]
  41a468:	sub    eax,0x587e3f6b
  41a46d:	imul   esp,edi,0x35
  41a470:	push   ebx
  41a471:	(bad)  
  41a472:	fsubr  QWORD PTR [edi-0x50f7d201]
  41a478:	push   ebp
  41a479:	sub    eax,0x90b785f8
  41a47e:	(bad)  
  41a47f:	jg     0x41a4d7
  41a481:	daa    
  41a482:	or     BYTE PTR [ebx],al
  41a484:	pushf  
  41a485:	ror    ebp,cl
  41a487:	pop    eax
  41a488:	scas   eax,DWORD PTR es:[edi]
  41a489:	test   DWORD PTR [ecx+0x4cc9ce2a],edi
  41a48f:	out    0x88,al
  41a491:	lods   al,BYTE PTR ds:[esi]
  41a492:	jmp    0xf51f:0xf6acf23a
  41a499:	fs jns 0x41a508
  41a49c:	adc    al,0x35
  41a49e:	scas   eax,DWORD PTR es:[edi]
  41a49f:	xlat   BYTE PTR ds:[ebx]
  41a4a0:	cs dec ebx
  41a4a2:	pop    edi
  41a4a3:	jge    0x41a521
  41a4a5:	jae    0x41a472
  41a4a7:	add    ebx,ebx
  41a4a9:	sub    ah,BYTE PTR [edx+0x46]
  41a4ac:	shl    DWORD PTR [edi-0x7f],0x64
  41a4b0:	jmp    0x1f03:0x8acdb18d
  41a4b7:	mov    ebp,0x81565744
  41a4bc:	inc    ecx
  41a4bd:	jo     0x41a4e5
  41a4bf:	aad    0x60
  41a4c1:	leave  
  41a4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c3:	or     eax,0x3e58f245
  41a4c8:	push   cs
  41a4c9:	in     al,dx
  41a4ca:	jbe    0x41a52d
  41a4cc:	hlt    
  41a4cd:	shl    BYTE PTR [ecx+0x44dd22b5],cl
  41a4d3:	add    eax,0x201f4688
  41a4d8:	popa   
  41a4d9:	jecxz  0x41a4b4
  41a4db:	jns    0x41a4e9
  41a4dd:	mov    cl,0x28
  41a4df:	jmp    0x1936:0xe26a63
  41a4e6:	imul   DWORD PTR [edx-0x350721b6]
  41a4ec:	sub    DWORD PTR [edx+0x6f39d3c5],0x5c
  41a4f3:	in     eax,0xc
  41a4f5:	pop    ecx
  41a4f6:	push   esp
  41a4f7:	fimul  WORD PTR [edi]
  41a4f9:	gs jnp 0x41a4d0
  41a4fc:	sahf   
  41a4fd:	and    BYTE PTR [ebp-0x2bf12a03],al
  41a503:	ins    BYTE PTR es:[edi],dx
  41a504:	mov    bh,0x7c
  41a506:	stc    
  41a507:	in     al,0x90
  41a509:	bound  ebx,QWORD PTR [edx-0x23253af5]
  41a50f:	mov    bl,BYTE PTR [eax+0x3b]
  41a512:	dec    esi
  41a513:	popa   
  41a514:	sub    eax,0x30c286f9
  41a519:	iret   
  41a51a:	leave  
  41a51b:	xchg   esp,eax
  41a51c:	jb     0x41a4cb
  41a51e:	mov    bl,0xfe
  41a520:	jle    0x41a4a9
  41a522:	in     al,0x19
  41a524:	sbb    al,0xb3
  41a526:	jbe    0x41a5a7
  41a528:	fsub   DWORD PTR [ebp-0x3578d142]
  41a52e:	lahf   
  41a52f:	js     0x41a538
  41a531:	push   ebx
  41a532:	stos   BYTE PTR es:[edi],al
  41a533:	push   ebx
  41a534:	call   0x25e1:0x776e1be0
  41a53b:	cs cmp eax,0x43025bed
  41a541:	sbb    ebx,0x79309c61
  41a547:	jbe    0x41a4de
  41a549:	inc    esp
  41a54a:	xchg   ebp,eax
  41a54b:	cmc    
  41a54c:	and    DWORD PTR [ecx],0xffffffb4
  41a54f:	pop    edi
  41a550:	jmp    0xd1e9:0xbfeb7361
  41a557:	shl    cl,cl
  41a559:	and    al,0x6
  41a55b:	or     al,0xad
  41a55d:	in     al,0xa1
  41a55f:	aas    
  41a560:	aas    
  41a561:	jns    0x41a56c
  41a563:	scas   al,BYTE PTR es:[edi]
  41a564:	jecxz  0x41a5a8
  41a566:	xor    DWORD PTR ds:[esi-0x71],ebx
  41a56a:	ins    BYTE PTR es:[edi],dx
  41a56b:	fdivr  QWORD PTR [ebx+0x2e]
  41a56e:	retf   0xa9dd
  41a571:	test   al,0xc1
  41a573:	(bad)  
  41a574:	int3   
  41a575:	jo     0x41a57d
  41a577:	mov    bl,0x95
  41a579:	push   edx
  41a57a:	sub    dh,BYTE PTR [ebp+0x74]
  41a57d:	mov    ds:0xf8c8c47,al
  41a582:	mov    ebp,DWORD PTR [ebp-0x41]
  41a585:	int    0x32
  41a587:	sar    DWORD PTR [esi+0x179f157a],0xc8
  41a58e:	les    ebp,FWORD PTR [edx-0x31]
  41a591:	in     al,dx
  41a592:	push   ss
  41a593:	jns    0x41a607
  41a595:	sbb    edx,ecx
  41a597:	jl     0x41a578
  41a599:	imul   eax,DWORD PTR [ebp+0x3f],0xfffffffc
  41a59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59e:	test   eax,0xd30afb89
  41a5a3:	xlat   BYTE PTR ds:[ebx]
  41a5a4:	daa    
  41a5a5:	enter  0x2461,0x77
  41a5a9:	bound  eax,QWORD PTR [ecx+0x48440ac8]
  41a5af:	out    0xfa,al
  41a5b1:	imul   edi,DWORD PTR [ebx-0x74712abb],0xe1a88465
  41a5bb:	adc    BYTE PTR [edi+0x1777e2db],ah
  41a5c1:	mov    ds:0xedcda086,al
  41a5c6:	bound  edx,QWORD PTR [edx-0x76b9e981]
  41a5cc:	push   eax
  41a5cd:	fs or  eax,0x955a5f1c
  41a5d3:	mov    ?,WORD PTR [ecx-0x1a]
  41a5d6:	dec    ecx
  41a5d7:	lods   eax,DWORD PTR ds:[esi]
  41a5d8:	sbb    eax,DWORD PTR [edi+0x29]
  41a5db:	outs   dx,BYTE PTR ds:[esi]
  41a5dc:	test   BYTE PTR [edi-0x58211b1a],0x79
  41a5e3:	leave  
  41a5e4:	sbb    dl,BYTE PTR [ecx+0x58bd3eb8]
  41a5ea:	rcr    eax,0xb9
  41a5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ee:	(bad)  
  41a5ef:	aam    0xc3
  41a5f1:	mov    bh,0xde
  41a5f3:	mov    bl,0xb5
  41a5f5:	pop    ss
  41a5f6:	xchg   esp,eax
  41a5f7:	dec    edx
  41a5f8:	fmul   st(1),st
  41a5fa:	out    dx,eax
  41a5fb:	ja     0x41a5f1
  41a5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fe:	cwde   
  41a5ff:	sub    al,0x57
  41a601:	or     ebp,0xffffff94
  41a604:	cmp    al,0xf3
  41a606:	icebp  
  41a607:	enter  0x8576,0x21
  41a60b:	pop    edi
  41a60c:	xchg   ebp,eax
  41a60d:	fild   WORD PTR [ecx]
  41a60f:	and    dh,BYTE PTR [ebx-0x68]
  41a612:	fimul  DWORD PTR [ecx-0x26eb862a]
  41a618:	xchg   ecx,eax
  41a619:	addr16 mov edi,0xe8bd1525
  41a61f:	sahf   
  41a620:	or     DWORD PTR [edx+0x8578669],ecx
  41a626:	jmp    0x41a683
  41a628:	jo     0x41a602
  41a62a:	aad    0xf2
  41a62c:	aaa    
  41a62d:	jnp    0x41a638
  41a62f:	push   edx
  41a630:	sbb    eax,DWORD PTR ds:0xf9f1e29e
  41a636:	xor    DWORD PTR [esp+ebx*1-0x2d1b8e9f],0x5b
  41a63e:	cdq    
  41a63f:	xchg   BYTE PTR [ebx],dl
  41a641:	jmp    0xadeac4bf
  41a646:	lods   al,BYTE PTR ds:[esi]
  41a647:	ja     0x41a67a
  41a649:	pop    ds
  41a64a:	and    dl,BYTE PTR [edi+0x43]
  41a64d:	xchg   edx,eax
  41a64e:	xchg   edx,eax
  41a64f:	or     BYTE PTR [ecx],ah
  41a651:	xchg   ecx,eax
  41a652:	xlat   BYTE PTR ds:[ebx]
  41a653:	icebp  
  41a654:	gs push edx
  41a656:	xor    ebx,ecx
  41a658:	dec    esp
  41a659:	retf   
  41a65a:	popa   
  41a65b:	mov    edx,0xe35b974c
  41a660:	pop    ecx
  41a661:	ins    DWORD PTR es:[edi],dx
  41a662:	push   0x38f5df27
  41a667:	sub    ecx,DWORD PTR [ebx]
  41a669:	cmp    cl,BYTE PTR [edi]
  41a66b:	inc    edx
  41a66c:	popf   
  41a66d:	std    
  41a66e:	out    dx,al
  41a66f:	dec    edi
  41a670:	push   esp
  41a671:	out    0xdf,al
  41a673:	cmp    dh,al
  41a675:	mul    BYTE PTR [esi+0x2b]
  41a678:	lds    ecx,FWORD PTR [edi+ebp*2+0x61450028]
  41a67f:	and    edi,DWORD PTR [ebp+0x6836b196]
  41a685:	cmc    
  41a686:	test   DWORD PTR [edx-0x38d5b8f2],esp
  41a68c:	data16 and al,0xfb
  41a68f:	cmp    ah,BYTE PTR ds:0xd116ce7f
  41a695:	std    
  41a696:	jno    0x41a66a
  41a698:	jbe    0x41a694
  41a69a:	mov    bl,0x99
  41a69c:	dec    edi
  41a69d:	(bad)  
  41a69f:	lds    eax,FWORD PTR [esi]
  41a6a1:	and    bh,bl
  41a6a3:	hlt    
  41a6a4:	int    0x14
  41a6a6:	addr16 mov dl,0x43
  41a6a9:	jecxz  0x41a6a4
  41a6ab:	sbb    al,0xf9
  41a6ad:	cmp    dl,dl
  41a6af:	(bad)  
  41a6b0:	mov    ah,0x1e
  41a6b2:	pop    esi
  41a6b3:	shl    edx,cl
  41a6b5:	and    al,0x76
  41a6b7:	dec    edx
  41a6b8:	rcl    BYTE PTR [edi+0x2e],1
  41a6bb:	xchg   ebx,eax
  41a6bc:	xor    al,0x77
  41a6be:	xchg   ecx,eax
  41a6bf:	add    DWORD PTR [ebp-0xbdb5a4b],edx
  41a6c5:	shr    bl,0x9
  41a6c8:	lahf   
  41a6c9:	mov    ebx,0x63cff1cb
  41a6ce:	pop    ds
  41a6cf:	inc    ebx
  41a6d0:	cs call 0xc0512aa7
  41a6d6:	(bad)
  41a6d9:	call   0xa4d4c883
  41a6de:	into   
  41a6df:	fs cld 
  41a6e1:	(bad)
  41a6e5:	jnp    0x41a725
  41a6e7:	mov    eax,ds:0x869112c1
  41a6ec:	(bad)  [ebx]
  41a6ee:	cmp    al,0xb7
  41a6f0:	push   esi
  41a6f1:	cmp    al,0xd2
  41a6f3:	adc    BYTE PTR ds:0x63beb5c6,0x20
  41a6fa:	ret    0x2bfd
  41a6fd:	ficom  DWORD PTR [esi+0x44]
  41a700:	jns    0x41a74d
  41a702:	mul    DWORD PTR [edi]
  41a704:	(bad)  
  41a705:	jbe    0x41a6f9
  41a707:	add    BYTE PTR [ebx+0x5a4aa9d],dh
  41a70d:	and    DWORD PTR [edi],esi
  41a70f:	mov    bh,0xaf
  41a711:	loope  0x41a706
  41a713:	shl    BYTE PTR [esi-0x15da4373],1
  41a719:	leave  
  41a71a:	cmc    
  41a71b:	and    BYTE PTR [ecx+0x60],dl
  41a71e:	jge    0x41a763
  41a720:	sub    dx,cx
  41a723:	je     0x41a6cd
  41a725:	outs   dx,DWORD PTR ds:[esi]
  41a726:	cmp    eax,0x4f589a8
  41a72b:	mov    eax,ds:0x2bb078a4
  41a730:	sahf   
  41a731:	aam    0xec
  41a733:	mov    ch,cl
  41a735:	adc    al,0x2c
  41a737:	fwait
  41a738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a739:	fnstcw WORD PTR [eax+esi*4]
  41a73c:	xor    eax,0x5b4df65b
  41a741:	mov    al,ds:0xfb1723a6
  41a746:	shl    BYTE PTR [eax+0x1e],0x3d
  41a74a:	stos   BYTE PTR es:[edi],al
  41a74b:	call   0x8e57:0x9c8632d8
  41a752:	fmul   st(1),st
  41a754:	out    dx,al
  41a755:	iret   
  41a756:	xchg   ebx,eax
  41a757:	cmp    ah,dh
  41a759:	adc    eax,0x878742f5
  41a75e:	pop    esp
  41a75f:	stos   BYTE PTR es:[edi],al
  41a760:	push   ecx
  41a761:	push   edi
  41a762:	imul   eax,DWORD PTR [ecx],0x1587e905
  41a768:	hlt    
  41a769:	pop    es
  41a76a:	ror    DWORD PTR [ecx+ebx*8+0x26],1
  41a76e:	pop    ebx
  41a76f:	out    dx,al
  41a770:	test   DWORD PTR [ecx-0x50],eax
  41a773:	and    ch,dh
  41a775:	repnz mov ecx,0x880016ed
  41a77b:	clc    
  41a77c:	bound  edi,QWORD PTR [ecx-0x14fd7be6]
  41a782:	ins    WORD PTR es:[edi],dx
  41a784:	outs   dx,BYTE PTR ds:[esi]
  41a785:	outs   dx,BYTE PTR ds:[esi]
  41a786:	in     eax,0xcc
  41a788:	add    BYTE PTR [esi-0x36470004],cl
  41a78e:	xor    edx,ebp
  41a790:	pop    esp
  41a791:	and    edx,DWORD PTR [ebx+eax*8-0x68]
  41a795:	adc    al,0x72
  41a797:	mov    ebx,0x395f132d
  41a79c:	stc    
  41a79d:	dec    eax
  41a79e:	in     al,dx
  41a79f:	sbb    al,0xa9
  41a7a1:	add    BYTE PTR [eax-0x4b],dl
  41a7a4:	sub    DWORD PTR [eax+0x3a],eax
  41a7a7:	fnsave [ebx]
  41a7a9:	cmp    al,BYTE PTR ss:[ebx-0x112b26d7]
  41a7b0:	cmp    esp,DWORD PTR [ecx]
  41a7b2:	popf   
  41a7b3:	clc    
  41a7b4:	dec    eax
  41a7b5:	pusha  
  41a7b6:	mov    edi,0x25945bfa
  41a7bb:	ins    DWORD PTR es:[edi],dx
  41a7bc:	mov    bh,dh
  41a7be:	mov    bh,0xcf
  41a7c0:	jmp    0xfa40:0xbd077f16
  41a7c7:	(bad)  
  41a7c8:	aaa    
  41a7c9:	push   ss
  41a7ca:	sar    BYTE PTR [esi-0x39],0x82
  41a7ce:	add    BYTE PTR [esi],cl
  41a7d0:	jmp    0x41a7cd
  41a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d3:	das    
  41a7d4:	dec    eax
  41a7d5:	dec    ecx
  41a7d6:	in     eax,0xbb
  41a7d8:	mov    ebx,0x45fe5fd8
  41a7dd:	lods   eax,DWORD PTR ds:[esi]
  41a7de:	xchg   DWORD PTR [edx],esp
  41a7e0:	imul   edi,esp,0x54ddb7b3
  41a7e6:	mov    eax,0x238d29ca
  41a7eb:	push   ebx
  41a7ec:	dec    esp
  41a7ed:	sub    ecx,ebx
  41a7ef:	test   cl,bl
  41a7f1:	test   al,0x53
  41a7f3:	fst    DWORD PTR [esi]
  41a7f5:	(bad)  
  41a7f6:	leave  
  41a7f7:	enter  0xf769,0xa1
  41a7fb:	rcr    ebx,cl
  41a7fd:	cs cli 
  41a7ff:	scas   al,BYTE PTR es:[edi]
  41a800:	cdq    
  41a801:	pop    ds
  41a802:	std    
  41a803:	inc    ebx
  41a804:	hlt    
  41a805:	dec    ebp
  41a806:	jecxz  0x41a791
  41a808:	lods   eax,DWORD PTR ds:[esi]
  41a809:	dec    esi
  41a80a:	add    DWORD PTR ds:[ebx-0x1d],0xe4ac540f
  41a812:	fstp   TBYTE PTR [edx+0x3cc6fd55]
  41a818:	fild   WORD PTR [ebx+0x343a541c]
  41a81e:	call   0x52ea:0xa4ffa82d
  41a825:	lock (bad) 
  41a828:	aaa    
  41a829:	cdq    
  41a82a:	adc    al,0x6a
  41a82c:	fbstp  TBYTE PTR [edx+0x73]
  41a82f:	mov    bl,BYTE PTR [edi]
  41a831:	or     BYTE PTR [edi+0x3b],dh
  41a834:	push   esp
  41a835:	lea    edx,[ecx+ebx*8]
  41a838:	xor    DWORD PTR [eax+0x54],edx
  41a83b:	lea    edi,[ebp-0x51]
  41a83e:	inc    esp
  41a83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a840:	pop    es
  41a841:	test   eax,0xf3ed7452
  41a846:	das    
  41a847:	mov    cl,0x53
  41a849:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a84b:	lahf   
  41a84c:	nop
  41a84d:	(bad)  
  41a84e:	pop    ss
  41a84f:	or     ch,BYTE PTR ds:0x7aa720ff
  41a855:	dec    ebp
  41a856:	aad    0x66
  41a858:	loopne 0x41a889
  41a85a:	jg     0x41a86e
  41a85c:	out    0x58,al
  41a85e:	test   DWORD PTR [esi-0x7c],edx
  41a861:	push   es
  41a862:	cmp    eax,0x62b557da
  41a867:	fwait
  41a868:	mov    dh,0xa8
  41a86a:	das    
  41a86b:	mov    bl,0x8e
  41a86d:	(bad)  
  41a86e:	sar    BYTE PTR ds:[esi-0x564f6ca3],cl
  41a875:	lock mov ch,ch
  41a878:	out    dx,al
  41a879:	ja     0x41a836
  41a87b:	inc    ebp
  41a87c:	xlat   BYTE PTR ds:[ebx]
  41a87d:	clc    
  41a87e:	into   
  41a87f:	xchg   esp,eax
  41a880:	adc    al,BYTE PTR [edi-0x6fc4b495]
  41a886:	or     BYTE PTR [esi],0xda
  41a889:	sbb    BYTE PTR [edi+0x51],cl
  41a88c:	test   eax,0xe6462a84
  41a891:	jb     0x41a907
  41a893:	idiv   BYTE PTR [edi]
  41a895:	cmp    BYTE PTR [edx],bl
  41a897:	std    
  41a898:	or     eax,0x749ca60d
  41a89d:	sub    edx,DWORD PTR [ecx-0x4fc9b86c]
  41a8a3:	xor    cl,dl
  41a8a5:	mov    edi,DWORD PTR [eax-0x79]
  41a8a8:	out    dx,eax
  41a8a9:	sbb    BYTE PTR [ecx],dh
  41a8ab:	jl     0x41a8c9
  41a8ad:	ins    BYTE PTR es:[edi],dx
  41a8ae:	(bad)  
  41a8b1:	pop    ds
  41a8b2:	ins    DWORD PTR es:[edi],dx
  41a8b3:	mov    edi,0x112c3712
  41a8b8:	push   edi
  41a8b9:	sbb    eax,0xee512eaa
  41a8be:	fs xor ebp,edi
  41a8c1:	and    dl,BYTE PTR [esi+eax*8]
  41a8c4:	pusha  
  41a8c5:	int3   
  41a8c6:	loop   0x41a907
  41a8c8:	test   DWORD PTR es:[ebp+0x63c3509a],esi
  41a8cf:	xor    DWORD PTR [ebx],0xffffffbe
  41a8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d3:	fidivr WORD PTR [ebp-0x2d]
  41a8d6:	push   es
  41a8d7:	add    BYTE PTR [ebx+edi*4+0x6dc97c66],0x68
  41a8df:	stos   BYTE PTR es:[edi],al
  41a8e0:	pop    edx
  41a8e1:	add    DWORD PTR [ebx-0x2f],0xffffffd7
  41a8e5:	push   eax
  41a8e6:	outs   dx,DWORD PTR ds:[esi]
  41a8e7:	push   cs
  41a8e8:	push   eax
  41a8e9:	mul    edx
  41a8eb:	std    
  41a8ec:	xchg   esp,ebx
  41a8ee:	ins    DWORD PTR es:[edi],dx
  41a8ef:	dec    ebx
  41a8f0:	call   0xb78f402a
  41a8f5:	fs (bad) 
  41a8f7:	cli    
  41a8f8:	rcl    BYTE PTR [edx+0x7466e812],1
  41a8fe:	mov    eax,0xa337259c
  41a903:	(bad)  
  41a904:	ins    BYTE PTR es:[edi],dx
  41a905:	scas   eax,DWORD PTR es:[edi]
  41a906:	mov    edx,0x47532f72
  41a90b:	jmp    0x6b6:0xd6ba4e18
  41a912:	inc    ebp
  41a914:	repnz xor al,0xbd
  41a917:	sbb    BYTE PTR [edx-0x4b21a2de],ah
  41a91d:	adc    eax,0xacac0498
  41a922:	pop    eax
  41a923:	and    al,dl
  41a925:	and    edx,DWORD PTR [esi]
  41a927:	leave  
  41a928:	lock pop esp
  41a92a:	fcom   st(2)
  41a92c:	test   eax,0xfd824797
  41a931:	mov    ds:0xf39ee1c6,eax
  41a936:	xchg   edi,eax
  41a937:	jp     0x41a97e
  41a939:	xchg   ebp,eax
  41a93a:	cmp    al,ch
  41a93c:	in     eax,0x73
  41a93e:	mov    DWORD PTR [eax-0xd0aca25],eax
  41a944:	mov    BYTE PTR [esi],bh
  41a946:	jno    0x41a990
  41a948:	xlat   BYTE PTR ds:[ebx]
  41a949:	pop    es
  41a94a:	mov    ch,0x74
  41a94c:	pop    edi
  41a94d:	clc    
  41a94e:	xchg   ebx,eax
  41a94f:	faddp  st(5),st
  41a951:	call   0xce19:0xa23685b7
  41a958:	pusha  
  41a959:	mov    ebx,0xf1d8d154
  41a95e:	push   ss
  41a95f:	fadd   QWORD PTR [ecx-0x5b82f9ab]
  41a965:	dec    eax
  41a966:	fidiv  DWORD PTR [edx+0x40]
  41a969:	in     al,dx
  41a96a:	dec    ebp
  41a96b:	jno    0x41a949
  41a96d:	pop    ebx
  41a96e:	gs int 0xd1
  41a971:	mov    dl,0xef
  41a973:	stos   BYTE PTR es:[edi],al
  41a974:	test   BYTE PTR [ecx+0x41],ah
  41a977:	inc    ecx
  41a978:	data16 loopne 0x41a9af
  41a97b:	in     eax,0x70
  41a97d:	shl    DWORD PTR [ebx+edi*4-0x40],1
  41a981:	add    esi,ecx
  41a983:	adc    al,bh
  41a985:	sbb    al,cl
  41a987:	sub    al,0x46
  41a989:	fidiv  DWORD PTR [ecx+ebp*8]
  41a98c:	push   eax
  41a98d:	jg     0x41a92d
  41a98f:	adc    bh,BYTE PTR [ebx]
  41a991:	and    DWORD PTR [ebx+0x7f],0x6a
  41a995:	push   0xff629cbb
  41a99a:	aad    0xa9
  41a99c:	mov    edi,0xa7abb1f9
  41a9a1:	mov    cl,BYTE PTR [ecx+eiz*1+0x6e]
  41a9a5:	adc    ah,ch
  41a9a7:	shl    DWORD PTR [esi],cl
  41a9a9:	(bad)  [edi-0x2c]
  41a9ac:	or     al,0xf9
  41a9ae:	stos   DWORD PTR es:[edi],eax
  41a9af:	pop    ebx
  41a9b0:	dec    edi
  41a9b1:	pop    ss
  41a9b2:	mov    eax,ds:0x328360c5
  41a9b7:	xor    edi,ebx
  41a9b9:	xor    al,0xec
  41a9bb:	mov    ecx,0x83c33132
  41a9c0:	and    eax,0xd906aa9f
  41a9c5:	jnp    0x41a992
  41a9c7:	adc    eax,0x200c59d6
  41a9cc:	es xchg edi,eax
  41a9ce:	mov    edi,0x4515add5
  41a9d3:	push   eax
  41a9d4:	shr    ebp,cl
  41a9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d7:	cdq    
  41a9d8:	xor    al,0xe8
  41a9da:	punpcklbw mm4,DWORD PTR ds:0x393ecce5
  41a9e1:	popf   
  41a9e2:	(bad)  
  41a9e3:	jmp    0x387f:0xb977f12b
  41a9ea:	ins    BYTE PTR es:[edi],dx
  41a9eb:	inc    esp
  41a9ec:	mov    dh,BYTE PTR [ecx]
  41a9ee:	or     BYTE PTR [ebp+0x19],dl
  41a9f1:	cdq    
  41a9f2:	mov    DWORD PTR [esi],esi
  41a9f4:	jmp    0x41aa52
  41a9f6:	clc    
  41a9f7:	dec    edi
  41a9f8:	or     ebp,DWORD PTR [ecx+ebx*2+0x290ec8d5]
  41a9ff:	xchg   ecx,eax
  41aa00:	es dec edi
  41aa02:	gs dec esp
  41aa04:	ret    0xa77f
  41aa07:	fwait
  41aa08:	and    eax,ebx
  41aa0a:	icebp  
  41aa0b:	aam    0xf3
  41aa0d:	jo     0x41aa84
  41aa0f:	add    BYTE PTR [ebp-0x5f],ah
  41aa12:	inc    ebp
  41aa13:	xchg   esp,eax
  41aa14:	dec    edx
  41aa15:	jb     0x41aa22
  41aa17:	fiadd  DWORD PTR [ecx+edx*4-0x7]
  41aa1b:	pop    esi
  41aa1c:	leavew 
  41aa1e:	and    eax,DWORD PTR [edi-0xaca2d29]
  41aa24:	cmp    ebp,DWORD PTR [ebp+0x74]
  41aa27:	pop    esi
  41aa28:	outs   dx,BYTE PTR ds:[esi]
  41aa29:	mov    edi,0xce187c30
  41aa2e:	sub    eax,0xec623835
  41aa33:	push   esi
  41aa34:	adc    ah,bh
  41aa36:	inc    edi
  41aa37:	div    DWORD PTR [edx+0x4a434e3]
  41aa3d:	in     eax,dx
  41aa3e:	and    al,0x95
  41aa40:	rol    DWORD PTR [ecx+0x31a0c67e],1
  41aa46:	sti    
  41aa47:	adc    eax,0xc6aa2475
  41aa4c:	sbb    cl,BYTE PTR ds:0x82ce9de4
  41aa52:	push   ecx
  41aa53:	sbb    esp,edi
  41aa55:	es js  0x41aaa1
  41aa58:	mov    dh,0x63
  41aa5a:	mov    esp,0xcd1a7316
  41aa5f:	push   ebx
  41aa60:	or     eax,0x3012d526
  41aa65:	test   al,0xe6
  41aa67:	mov    ecx,ebx
  41aa69:	sbb    eax,0x395dd683
  41aa6f:	outs   dx,BYTE PTR ds:[esi]
  41aa70:	ins    DWORD PTR es:[edi],dx
  41aa71:	jmp    0x41aa0f
  41aa73:	lds    ecx,FWORD PTR [ecx+0x5182953d]
  41aa79:	repz jno 0x41aa04
  41aa7c:	int    0x56
  41aa7e:	jecxz  0x41aa0a
  41aa80:	dec    esi
  41aa81:	gs jae 0x41aa30
  41aa84:	ds popa 
  41aa86:	or     eax,ecx
  41aa88:	and    al,0xb7
  41aa8a:	fidiv  WORD PTR [esi]
  41aa8c:	in     eax,0x0
  41aa8e:	pusha  
  41aa8f:	mov    ch,0x11
  41aa91:	aam    0xca
  41aa93:	or     ebx,DWORD PTR [eax+0xaf5337]
  41aa99:	loop   0x41aaa9
  41aa9b:	enter  0x1729,0xa8
  41aa9f:	mov    ch,0xdf
  41aaa1:	mov    eax,0xf6062bcd
  41aaa6:	fild   QWORD PTR [eax+0x9249aae]
  41aaac:	xchg   edi,eax
  41aaad:	push   ebx
  41aaae:	fnsave [ebx+0x51d72b3a]
  41aab4:	shl    edx,cl
  41aab6:	mov    al,ds:0xbaea6d2a
  41aabb:	xchg   esi,eax
  41aabc:	xchg   esp,eax
  41aabd:	add    eax,DWORD PTR [edx-0x47]
  41aac0:	inc    ecx
  41aac1:	xchg   edi,esi
  41aac3:	cmp    ecx,DWORD PTR [ebp+0x5f]
  41aac6:	sbb    esp,ecx
  41aac8:	out    dx,al
  41aac9:	ins    BYTE PTR es:[edi],dx
  41aaca:	mov    ?,esp
  41aacc:	mov    edx,0x266af208
  41aad1:	mov    ebx,ds
  41aad3:	pusha  
  41aad4:	mov    eax,ds:0x983e688d
  41aad9:	retf   
  41aada:	pop    edx
  41aadb:	loope  0x41ab07
  41aadd:	ret    
  41aade:	cwde   
  41aadf:	loopne 0x41aacb
  41aae1:	mov    WORD PTR [ecx],fs
  41aae3:	cmp    bl,BYTE PTR [ebx-0x13]
  41aae6:	adc    cl,BYTE PTR [edx]
  41aae8:	imul   esp,DWORD PTR [ecx-0x8986b51],0xc843871c
  41aaf2:	pusha  
  41aaf3:	or     BYTE PTR [edx-0x24633132],bl
  41aaf9:	mov    ds:0x64fd226f,eax
  41aafe:	loopne 0x41ab0e
  41ab00:	mov    al,0x39
  41ab02:	xchg   esp,eax
  41ab03:	pop    ebp
  41ab04:	dec    ecx
  41ab05:	cmp    al,0x0
  41ab07:	(bad)  
  41ab08:	sub    eax,0x67b83fcd
  41ab0d:	push   ebx
  41ab0e:	mov    bl,0x43
  41ab10:	mov    gs,WORD PTR ds:0x52c41232
  41ab16:	jecxz  0x41aad1
  41ab18:	dec    ebp
  41ab19:	xor    DWORD PTR [ebp-0x26],eax
  41ab1c:	sbb    eax,0xb1fa70bf
  41ab21:	fwait
  41ab22:	addr16 mov al,0xbd
  41ab25:	push   ebp
  41ab26:	jle    0x41ab62
  41ab28:	rcl    ebp,0xfc
  41ab2b:	mov    bh,0x61
  41ab2d:	dec    edx
  41ab2e:	cmp    al,0x33
  41ab30:	xor    cl,BYTE PTR [eax+ebp*4]
  41ab33:	adc    al,0x93
  41ab35:	int    0x36
  41ab37:	xor    DWORD PTR [esi+0x5],esi
  41ab3a:	je     0x41aaeb
  41ab3c:	hlt    
  41ab3d:	or     bl,BYTE PTR [ebp-0x5]
  41ab40:	daa    
  41ab41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab42:	mov    ch,BYTE PTR [esi+0xe]
  41ab45:	add    BYTE PTR [ecx*2+0x59916531],ch
  41ab4c:	sahf   
  41ab4d:	cmp    al,0x66
  41ab4f:	outs   dx,BYTE PTR ds:[esi]
  41ab50:	sub    ah,BYTE PTR ds:0x5f3bee46
  41ab56:	outs   dx,BYTE PTR ds:[esi]
  41ab57:	mov    ds:0x3100e268,eax
  41ab5c:	push   edx
  41ab5d:	add    DWORD PTR [ebp+0x74],eax
  41ab60:	in     al,dx
  41ab61:	aad    0xea
  41ab63:	dec    ebx
  41ab64:	push   esp
  41ab65:	loop   0x41ab9b
  41ab67:	int    0x79
  41ab69:	add    DWORD PTR [ecx],esp
  41ab6b:	push   0xf281601a
  41ab70:	or     DWORD PTR [eax+0x41bc0698],esi
  41ab76:	iret   
  41ab77:	and    ah,cl
  41ab79:	sub    BYTE PTR [esi-0x65d70a3a],0x57
  41ab80:	push   es
  41ab81:	sahf   
  41ab82:	leave  
  41ab83:	mov    eax,0xd0586528
  41ab88:	sub    DWORD PTR [eax+ebx*8+0x59],ebp
  41ab8c:	xchg   DWORD PTR [edi],esp
  41ab8e:	xchg   ebx,eax
  41ab8f:	push   esi
  41ab90:	ds xchg edx,eax
  41ab92:	pop    edi
  41ab93:	jp     0x41ab79
  41ab95:	frstor [edi-0x107b7d17]
  41ab9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab9c:	cmp    eax,0x80a91328
  41aba1:	jg     0x41abfc
  41aba3:	xchg   BYTE PTR [edi],dh
  41aba5:	cmp    al,BYTE PTR [ebx]
  41aba7:	jmp    0xd5e0:0x8c91aff8
  41abae:	fwait
  41abaf:	dec    esp
  41abb0:	inc    esp
  41abb1:	test   BYTE PTR [esp+edx*4-0x77],bl
  41abb5:	cld    
  41abb6:	mov    ebx,0x46f71278
  41abbb:	repnz mov al,0x8d
  41abbe:	push   0x3
  41abc0:	pop    ecx
  41abc1:	ret    0x5856
  41abc4:	xor    eax,DWORD PTR [ebp+0x6a]
  41abc7:	sbb    DWORD PTR [ecx+0x7],esp
  41abca:	sbb    DWORD PTR [esi],ebx
  41abcc:	xchg   ebp,eax
  41abcd:	in     eax,0x54
  41abcf:	and    BYTE PTR [esi-0x58],bl
  41abd2:	sbb    al,bl
  41abd4:	adc    eax,0x8283ea4e
  41abd9:	mov    edi,0xcd3cf394
  41abde:	push   0xc
  41abe0:	enter  0x961d,0xce
  41abe4:	(bad)  
  41abe5:	xlat   BYTE PTR ds:[ebx]
  41abe6:	jl     0x41ac12
  41abe8:	cmp    BYTE PTR [eax+0x77a47d],dl
  41abee:	cli    
  41abef:	mov    ebx,0xda49c7ce
  41abf4:	or     bl,BYTE PTR [ecx]
  41abf6:	test   ax,0x203b
  41abfa:	mov    ?,WORD PTR [esp+ebp*4-0x6ce531ea]
  41ac01:	mov    bh,0x5a
  41ac03:	xchg   esp,eax
  41ac04:	scas   eax,DWORD PTR es:[edi]
  41ac05:	mov    ds:0xc6b706cd,eax
  41ac0a:	mov    bh,0x6b
  41ac0c:	adc    BYTE PTR [edi+0x72],0xb3
  41ac10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac12:	in     eax,0xf9
  41ac14:	add    BYTE PTR [edx+edx*2],cl
  41ac17:	push   edx
  41ac18:	out    dx,eax
  41ac19:	int    0x11
  41ac1b:	cs pop eax
  41ac1d:	add    eax,0x5e1fdafd
  41ac22:	lods   al,BYTE PTR ds:[esi]
  41ac23:	dec    esi
  41ac24:	es push edi
  41ac26:	jp     0x41ac2d
  41ac28:	inc    esi
  41ac29:	xchg   DWORD PTR [edi],esp
  41ac2b:	(bad)  
  41ac2c:	in     eax,0x77
  41ac2e:	(bad)  
  41ac2f:	cs cwde 
  41ac31:	mov    edi,0xf7bbdf30
  41ac36:	add    ebx,0xffffff9d
  41ac39:	inc    ecx
  41ac3a:	mov    si,0xf318
  41ac3e:	xor    esi,DWORD PTR [ebp-0x6e]
  41ac41:	in     eax,0x9
  41ac43:	push   edi
  41ac44:	daa    
  41ac45:	add    BYTE PTR [edx+0x12],0x50
  41ac49:	inc    edx
  41ac4a:	sti    
  41ac4b:	cmp    eax,0xd1bbd604
  41ac50:	sbb    edi,DWORD PTR ds:0x8321b455
  41ac56:	cmp    eax,0xdd555572
  41ac5b:	rcl    BYTE PTR [ebx+0x20],0xfb
  41ac5f:	sar    BYTE PTR [eax-0x6a],1
  41ac62:	jno    0x41ac67
  41ac64:	mov    ecx,0x7b67edb1
  41ac69:	adc    ecx,DWORD PTR [ebx]
  41ac6b:	push   ebp
  41ac6c:	test   al,0x25
  41ac6e:	sahf   
  41ac6f:	into   
  41ac70:	add    al,BYTE PTR [edx-0x74]
  41ac73:	pop    esp
  41ac74:	ins    DWORD PTR es:[edi],dx
  41ac75:	cmp    ch,ch
  41ac77:	gs xchg edi,eax
  41ac79:	add    eax,0xee03cd8d
  41ac7e:	pusha  
  41ac7f:	pop    ecx
  41ac80:	add    BYTE PTR [edi-0x6f],dl
  41ac83:	retf   
  41ac84:	pop    eax
  41ac85:	jecxz  0x41ac54
  41ac87:	mov    ?,WORD PTR ds:0x4fcf42cd
  41ac8d:	dec    edx
  41ac8e:	pop    ebx
  41ac8f:	iret   
  41ac90:	aas    
  41ac91:	jno    0x41acc4
  41ac93:	popf   
  41ac94:	or     eax,0xcd36cfa5
  41ac99:	xchg   esi,eax
  41ac9a:	dec    ebp
  41ac9b:	adc    cl,dh
  41ac9d:	cld    
  41ac9e:	je     0x41ac90
  41aca0:	push   ebx
  41aca1:	repz iret 
  41aca3:	clc    
  41aca4:	pop    esi
  41aca5:	mov    cl,al
  41aca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aca8:	jmp    0x41ac2b
  41acaa:	mov    ebp,0x2faef4cf
  41acaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acb0:	lods   al,BYTE PTR ds:[esi]
  41acb1:	aaa    
  41acb2:	push   ss
  41acb3:	stc    
  41acb4:	cdq    
  41acb5:	scas   eax,DWORD PTR es:[edi]
  41acb6:	ja     0x41ac8e
  41acb8:	or     al,0x59
  41acba:	and    BYTE PTR [ebp+0x1925b7e6],dl
  41acc0:	fsub   QWORD PTR [esi+0x4482a654]
  41acc6:	je     0x41ac5d
  41acc8:	sbb    al,0x88
  41acca:	push   ds
  41accb:	addr16 jp 0x41ac4e
  41acce:	and    cl,BYTE PTR [ebp-0x51]
  41acd1:	out    dx,eax
  41acd2:	xor    BYTE PTR [esi+0x77],0x30
  41acd6:	sub    al,BYTE PTR [ebx-0x45]
  41acd9:	xor    al,0x95
  41acdb:	dec    bp
  41acdd:	or     dl,BYTE PTR [edx+ecx*2-0x2f]
  41ace1:	xor    BYTE PTR [ebx],0xda
  41ace4:	sti    
  41ace5:	int    0xcf
  41ace7:	ss int3 
  41ace9:	popa   
  41acea:	sti    
  41aceb:	or     bh,BYTE PTR [eax+0x5c]
  41acee:	adc    BYTE PTR [edx+ebx*2+0x6e410c3a],bh
  41acf5:	and    al,0x55
  41acf7:	call   0xe6fdfb37
  41acfc:	jle    0x41ace4
  41acfe:	daa    
  41acff:	mov    eax,0x2fec00f2
  41ad04:	push   ds
  41ad05:	inc    edi
  41ad06:	mov    al,0x99
  41ad08:	sbb    BYTE PTR [ebp-0x4fedc02c],ah
  41ad0e:	lods   al,BYTE PTR ds:[esi]
  41ad0f:	and    eax,0xc781bf60
  41ad14:	sbb    eax,0x6937e71f
  41ad19:	iret   
  41ad1a:	xor    al,0x19
  41ad1c:	sub    al,0x9a
  41ad1e:	pop    edx
  41ad1f:	push   ss
  41ad20:	pop    ebx
  41ad21:	pop    ss
  41ad22:	xchg   esi,eax
  41ad23:	cmp    al,0x9c
  41ad25:	fs jae 0x41acc5
  41ad28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad29:	cld    
  41ad2a:	pop    ebp
  41ad2b:	pop    ss
  41ad2c:	mov    DWORD PTR cs:[esi-0x2e],ebx
  41ad30:	jae    0x41ad27
  41ad32:	mov    ds:0xaa995790,eax
  41ad37:	inc    edi
  41ad38:	mov    edi,0xcc5f227c
  41ad3d:	pop    ecx
  41ad3e:	out    0xbd,eax
  41ad40:	sub    bl,BYTE PTR [edx+0x2e]
  41ad43:	jp     0x41acee
  41ad45:	push   esp
  41ad46:	adc    DWORD PTR [edi],edi
  41ad48:	call   0x1933:0x5688d9c6
  41ad4f:	daa    
  41ad50:	std    
  41ad51:	outs   dx,DWORD PTR cs:[esi]
  41ad53:	sbb    bl,BYTE PTR [esi]
  41ad55:	push   esi
  41ad56:	mov    eax,ds:0x8239f801
  41ad5b:	mov    eax,ds:0x94e50420
  41ad60:	mov    dh,0xe8
  41ad62:	xor    al,0x96
  41ad64:	push   ss
  41ad65:	repz or al,0x96
  41ad68:	mov    bl,0x5c
  41ad6a:	xor    DWORD PTR [esi+eax*2-0x2b],ebp
  41ad6e:	mov    esi,0xd33a2284
  41ad73:	lods   al,BYTE PTR ds:[esi]
  41ad74:	xor    eax,0x3a6312f8
  41ad79:	dec    edx
  41ad7a:	retf   
  41ad7b:	rol    DWORD PTR [ebx-0x2b],0x79
  41ad7f:	ret    
  41ad80:	xor    BYTE PTR [ebx+0x3754cd70],cl
  41ad86:	in     eax,dx
  41ad87:	push   ebp
  41ad88:	test   BYTE PTR [esi],dh
  41ad8a:	in     eax,dx
  41ad8b:	or     bl,BYTE PTR [ebp+0x74e1c9b1]
  41ad91:	idiv   DWORD PTR [ebx+0x658648a2]
  41ad97:	loop   0x41ad25
  41ad99:	mov    esi,0x6e28a542
  41ad9e:	ja     0x41ad69
  41ada0:	xchg   esi,eax
  41ada1:	cmp    bl,dl
  41ada3:	lods   al,BYTE PTR ds:[esi]
  41ada4:	pop    edx
  41ada5:	jmp    0xdf96a362
  41adaa:	fs cmp al,0x16
  41adad:	por    mm7,QWORD PTR [esi-0x12bac4d1]
  41adb4:	mov    ebx,0x33c427fb
  41adb9:	sar    BYTE PTR [eax-0x4bce0085],1
  41adbf:	leave  
  41adc0:	nop
  41adc1:	icebp  
  41adc2:	ins    BYTE PTR es:[edi],dx
  41adc3:	cmp    eax,DWORD PTR [eax-0x61a15199]
  41adc9:	rol    BYTE PTR [ecx-0x30d9c51d],cl
  41adcf:	inc    ebp
  41add0:	push   ebp
  41add1:	vhaddps xmm0,xmm7,XMMWORD PTR [edi-0x2c467ae3]
  41add9:	loop   0x41adcc
  41addb:	and    BYTE PTR [edi+0xa8667f],0x74
  41ade2:	js     0x41ad94
  41ade4:	push   ebp
  41ade5:	dec    ebx
  41ade6:	dec    edi
  41ade7:	adc    BYTE PTR [ecx-0x6a],ch
  41adea:	int3   
  41adeb:	jl     0x41ae42
  41aded:	jle    0x41ae22
  41adef:	sub    edx,DWORD PTR [edi]
  41adf1:	ins    BYTE PTR es:[edi],dx
  41adf2:	mov    cl,0xcc
  41adf4:	and    BYTE PTR [ecx-0x1a],0xd9
  41adf8:	xchg   edi,eax
  41adf9:	sub    eax,0x9b64a1ef
  41adfe:	mov    bl,0xe8
  41ae00:	pop    eax
  41ae01:	and    dl,al
  41ae03:	adc    bh,ch
  41ae05:	dec    eax
  41ae06:	pop    ecx
  41ae07:	xchg   ebp,eax
  41ae08:	add    eax,0xb1c77f6d
  41ae0d:	dec    eax
  41ae0e:	outs   dx,DWORD PTR ds:[esi]
  41ae0f:	pop    ss
  41ae10:	adc    al,0x92
  41ae12:	test   DWORD PTR [eax+0x6f],esp
  41ae15:	adc    ah,ch
  41ae17:	cmp    BYTE PTR [edi],dh
  41ae19:	fmul   QWORD PTR [esi+edi*2]
  41ae1c:	sub    dl,BYTE PTR [edx-0x5033b91f]
  41ae22:	inc    ecx
  41ae23:	lahf   
  41ae24:	ret    
  41ae25:	and    ecx,DWORD PTR [ebp+0x54]
  41ae28:	retf   0xf218
  41ae2b:	pop    ebp
  41ae2c:	and    eax,0x4976ed81
  41ae31:	mov    cl,0x2c
  41ae33:	out    0x86,al
  41ae35:	adc    cl,BYTE PTR [ebp-0x52]
  41ae38:	punpckldq mm7,DWORD PTR [eax+0x5f]
  41ae3c:	pop    esp
  41ae3d:	sub    eax,ecx
  41ae3f:	(bad)  
  41ae41:	lock cmp al,BYTE PTR [ecx+0x14918fd2]
  41ae48:	shr    BYTE PTR [ebp+0x68],1
  41ae4b:	(bad)  
  41ae4c:	jmp    0xda1e:0x5ec6f5b2
  41ae53:	lds    ecx,FWORD PTR [eax-0x2f]
  41ae56:	fwait
  41ae57:	sbb    eax,0x134ad7cb
  41ae5c:	pop    ecx
  41ae5d:	not    DWORD PTR cs:[eax+edi*2]
  41ae61:	sub    eax,0x72772374
  41ae66:	stc    
  41ae67:	mov    ds:0x4f22f088,eax
  41ae6c:	cmp    dl,BYTE PTR [esi+0x20acae18]
  41ae72:	mov    dl,0x3a
  41ae74:	lods   al,BYTE PTR ds:[esi]
  41ae75:	or     cl,BYTE PTR [edi]
  41ae77:	in     eax,dx
  41ae78:	sbb    al,0x81
  41ae7a:	pop    ds
  41ae7b:	retf   0xc601
  41ae7e:	in     eax,dx
  41ae7f:	addr16 cld 
  41ae81:	repnz (bad) 
  41ae84:	push   ebx
  41ae85:	in     al,dx
  41ae86:	xchg   edi,eax
  41ae87:	lea    esp,[edi+edi*2-0x1a55ae7a]
  41ae8e:	mov    ah,0x80
  41ae90:	fld    TBYTE PTR [edx+0xd]
  41ae93:	loop   0x41ae8c
  41ae95:	into   
  41ae96:	xor    ah,BYTE PTR [ebp+0x65aaae2b]
  41ae9c:	dec    ebx
  41ae9d:	test   ecx,ebx
  41ae9f:	out    dx,al
  41aea0:	push   es
  41aea1:	std    
  41aea2:	scas   al,BYTE PTR es:[edi]
  41aea3:	lock sub DWORD PTR es:[ecx+0x72],ebx
  41aea8:	into   
  41aea9:	xor    al,0x8b
  41aeab:	sub    BYTE PTR [eax+0x7],ch
  41aeae:	mov    bl,0x9e
  41aeb0:	pop    ebp
  41aeb1:	xor    eax,DWORD PTR [eax+0x5b]
  41aeb4:	jo     0x41ae69
  41aeb6:	mov    WORD PTR [esp+eax*1-0x4b968926],?
  41aebd:	dec    ecx
  41aebe:	adc    esi,DWORD PTR [ecx-0xce735ae]
  41aec4:	xchg   ecx,eax
  41aec5:	in     al,dx
  41aec6:	ds sti 
  41aec8:	clc    
  41aec9:	xchg   edx,eax
  41aeca:	xchg   esp,eax
  41aecb:	popf   
  41aecc:	out    dx,eax
  41aecd:	stos   BYTE PTR es:[edi],al
  41aece:	(bad)  
  41aecf:	push   ds
  41aed0:	out    dx,al
  41aed1:	push   edx
  41aed2:	add    eax,edx
  41aed4:	lds    ebx,FWORD PTR [edx]
  41aed6:	popa   
  41aed7:	stos   DWORD PTR es:[edi],eax
  41aed8:	mov    ah,0x68
  41aeda:	ret    0x12d6
  41aedd:	loopne 0x41af45
  41aedf:	lods   al,BYTE PTR ds:[esi]
  41aee0:	test   al,0x85
  41aee2:	push   ds
  41aee3:	addr16 inc esi
  41aee5:	mov    ss,WORD PTR [ecx]
  41aee7:	jg     0x41af61
  41aee9:	inc    esp
  41aeea:	cmp    ebp,ebx
  41aeec:	xor    DWORD PTR [esi+0x60],0xfffffffe
  41aef0:	(bad)  
  41aef2:	and    eax,0x7fe65dce
  41aef7:	jo     0x41af74
  41aef9:	dec    edi
  41aefa:	push   ebx
  41aefb:	pop    ss
  41aefc:	call   FWORD PTR [esi-0x3b]
  41aeff:	in     eax,0x5f
  41af01:	add    eax,0x38f70d92
  41af06:	adc    al,0x27
  41af08:	cmp    dl,cl
  41af0a:	imul   esp,DWORD PTR [esi],0xffffff86
  41af0d:	popf   
  41af0e:	lods   eax,DWORD PTR ds:[esi]
  41af0f:	pop    ebp
  41af10:	pop    eax
  41af11:	push   ds
  41af12:	not    BYTE PTR [esi+ebp*2-0x7cd0084a]
  41af19:	mov    ecx,0xb76aa045
  41af1e:	pop    ss
  41af1f:	fld    QWORD PTR [ecx+0xa95003b]
  41af25:	adc    ebx,edi
  41af27:	jmp    0xc29c:0xe48cef6f
  41af2e:	xchg   edi,eax
  41af2f:	gs cli 
  41af31:	cmp    DWORD PTR [esi],ebp
  41af33:	fnstcw WORD PTR [esi]
  41af35:	test   BYTE PTR [ebx+0x5d],al
  41af38:	dec    edi
  41af39:	shr    ch,0x3e
  41af3c:	pop    ebp
  41af3d:	push   ecx
  41af3e:	and    BYTE PTR [ebx-0x50],ah
  41af41:	(bad)  
  41af42:	outs   dx,DWORD PTR ds:[esi]
  41af43:	cmp    eax,0x76e0deae
  41af48:	into   
  41af49:	mov    ds:0x4169133a,al
  41af4e:	les    esp,FWORD PTR [ecx-0x30]
  41af51:	mov    al,0x2a
  41af53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af54:	shl    DWORD PTR [ebx+0x405b5e6d],0xee
  41af5b:	add    esi,esp
  41af5d:	mov    edi,0xfab4c500
  41af62:	cld    
  41af63:	mov    ?,WORD PTR [edx-0x42ddcb99]
  41af69:	mov    DWORD PTR [edi+0x2cc4c0ed],esp
  41af6f:	dec    esp
  41af70:	mov    esi,0xd57837cf
  41af75:	dec    bh
  41af77:	imul   eax,DWORD PTR [esi],0xffffffab
  41af7a:	shl    DWORD PTR [eax-0x32725f9b],cl
  41af80:	xchg   edx,eax
  41af81:	ins    BYTE PTR es:[edi],dx
  41af82:	sti    
  41af83:	mov    cs,WORD PTR ds:0xc4b7efd6
  41af89:	test   al,0x6b
  41af8b:	jbe    0x41af82
  41af8d:	jae    0x41afba
  41af8f:	(bad)  
  41af90:	loopne 0x41af52
  41af92:	stc    
  41af93:	jno    0x41aff2
  41af95:	and    ebp,DWORD PTR [ebp-0x3b04d78]
  41af9b:	data16 jge 0x41af59
  41af9e:	leave  
  41af9f:	out    dx,eax
  41afa0:	in     al,dx
  41afa1:	jmp    0xe9292222
  41afa6:	mov    WORD PTR [ebx],gs
  41afa8:	(bad)  
  41afa9:	lds    ebp,FWORD PTR [esi+0x42b28a71]
  41afaf:	lods   al,BYTE PTR ds:[esi]
  41afb0:	stos   DWORD PTR es:[edi],eax
  41afb1:	cmc    
  41afb2:	dec    ebp
  41afb3:	jae    0x41af43
  41afb5:	and    bh,dl
  41afb7:	test   BYTE PTR [ebp+0x73],bl
  41afba:	push   ebp
  41afbb:	cs (bad) 
  41afbd:	cmp    ecx,DWORD PTR [ebp+0x6fe2a47b]
  41afc3:	dec    ecx
  41afc4:	nop
  41afc5:	pop    ebp
  41afc6:	call   0x7f4e:0xb0b1505f
  41afcd:	xchg   ebp,eax
  41afce:	mov    ebx,0x68007a23
  41afd3:	and    esp,0xffffffd0
  41afd6:	pop    eax
  41afd7:	add    DWORD PTR [edx+edx*1],eax
  41afda:	cmp    al,0x7b
  41afdc:	inc    edx
  41afdd:	rol    BYTE PTR [esi],1
  41afdf:	sets   BYTE PTR [ebp+0x15]
  41afe3:	stos   BYTE PTR es:[edi],al
  41afe4:	mov    cl,0xc0
  41afe6:	out    dx,al
  41afe7:	jb     0x41afab
  41afe9:	mov    ebp,cs
  41afeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afec:	fwait
  41afed:	jo     0x41aff9
  41afef:	sbb    al,0xa5
  41aff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff2:	sbb    al,0x5b
  41aff4:	push   ds
  41aff5:	(bad)  
  41aff6:	mov    WORD PTR [ebp-0x7c7aa83d],ds
  41affc:	adc    al,0xf5
  41affe:	loopne 0x41b03b
  41b000:	mov    ebp,0xfeedff56
  41b005:	mov    bh,0x56
  41b007:	inc    ebp
  41b008:	out    dx,al
  41b009:	xor    BYTE PTR [eax-0x5],ch
  41b00c:	enter  0x97e5,0x22
  41b010:	mov    dh,0x77
  41b012:	ja     0x41b089
  41b014:	dec    ebx
  41b015:	mov    al,ds:0xf2e1badc
  41b01a:	xchg   BYTE PTR [eax],dh
  41b01c:	pop    edi
  41b01d:	ss clc 
  41b01f:	mov    dl,0xe8
  41b021:	stc    
  41b022:	xor    edx,DWORD PTR [edi+0x26efdd26]
  41b028:	xor    DWORD PTR [ecx+ecx*1],ebp
  41b02b:	icebp  
  41b02c:	add    esp,DWORD PTR [eax+0x1469dc0f]
  41b032:	add    DWORD PTR [edx-0x15],ebx
  41b035:	xor    al,0x76
  41b037:	jnp    0x41b046
  41b039:	js     0x41b071
  41b03b:	ficomp WORD PTR [ecx]
  41b03d:	sbb    al,0x62
  41b03f:	mov    BYTE PTR [ebx],dl
  41b041:	cmc    
  41b042:	mov    ah,0x15
  41b044:	jae    0x41b003
  41b046:	call   0xd90aec59
  41b04b:	dec    ebp
  41b04c:	mov    esp,0x8b9c0084
  41b051:	repz (bad) 
  41b053:	dec    edi
  41b054:	and    al,0xcf
  41b056:	xchg   DWORD PTR ds:0x8ff499bc,esi
  41b05c:	ins    DWORD PTR es:[edi],dx
  41b05d:	in     al,dx
  41b05e:	fbstp  TBYTE PTR [ecx+esi*4+0x0]
  41b062:	add    dl,BYTE PTR [eax-0x59b010f8]
  41b068:	outs   dx,BYTE PTR ds:[esi]
  41b069:	xchg   ebp,eax
  41b06a:	rcl    DWORD PTR [edx],0x88
  41b06d:	ret    
  41b06e:	mov    ah,0xc8
  41b070:	sbb    al,0xf8
  41b072:	enter  0xa2af,0x16
  41b076:	and    al,0xfb
  41b078:	mov    DWORD PTR [esi],edi
  41b07a:	ror    dh,1
  41b07c:	jae    0x41b069
  41b07e:	arpl   WORD PTR [edi],di
  41b080:	in     eax,0x9d
  41b082:	rol    DWORD PTR [eax-0x72],cl
  41b085:	mov    esi,0x806d370a
  41b08a:	pop    ecx
  41b08b:	scas   al,BYTE PTR es:[edi]
  41b08c:	les    eax,FWORD PTR ds:0x4ae5bdba
  41b092:	outs   dx,BYTE PTR ds:[esi]
  41b093:	push   ecx
  41b094:	popf   
  41b095:	push   cs
  41b096:	cwde   
  41b097:	mov    ecx,0x589242fc
  41b09c:	mov    WORD PTR [eax+0x3cd909c4],ds
  41b0a2:	mov    esi,0xbc5799be
  41b0a7:	cli    
  41b0a8:	xchg   esp,eax
  41b0a9:	lock cmp bh,ch
  41b0ac:	std    
  41b0ad:	or     al,0x0
  41b0af:	jno    0x41b0d6
  41b0b1:	in     al,dx
  41b0b2:	in     eax,0xee
  41b0b4:	jp     0x41b058
  41b0b6:	neg    DWORD PTR [ebx+ebp*4-0x7cc77de4]
  41b0bd:	les    esp,FWORD PTR [ebx]
  41b0bf:	mov    ds:0x85af6fd4,al
  41b0c4:	adc    ecx,DWORD PTR [esp+esi*4-0x5acda9d4]
  41b0cb:	test   eax,0x5fe3ac13
  41b0d0:	mov    bh,0x2f
  41b0d2:	or     dh,ch
  41b0d4:	push   es
  41b0d5:	cld    
  41b0d6:	pop    edi
  41b0d7:	adc    DWORD PTR [edx],esp
  41b0d9:	jns    0x41b098
  41b0db:	pop    ebp
  41b0dc:	enter  0xd7c4,0xf9
  41b0e0:	mov    al,ds:0x1b9dd01d
  41b0e5:	adc    BYTE PTR ds:0xdfb74231,ah
  41b0eb:	fst    DWORD PTR gs:[ebx-0x45]
  41b0ef:	mov    WORD PTR [ecx-0x33764bd1],cs
  41b0f5:	imul   edx,DWORD PTR [esi+ecx*2+0x3b269036],0x5f
  41b0fd:	leave  
  41b0fe:	mov    dl,0x5d
  41b100:	sub    eax,0xd00ab683
  41b105:	in     eax,dx
  41b106:	daa    
  41b107:	jnp    0x41b0f6
  41b109:	sub    DWORD PTR [ecx-0x40],esi
  41b10c:	inc    eax
  41b10d:	and    al,0x96
  41b10f:	adc    eax,0xe38ae7d
  41b114:	xor    DWORD PTR [edx],0x5d
  41b117:	inc    ebp
  41b118:	sbb    BYTE PTR [ecx],cl
  41b11a:	int3   
  41b11b:	rol    dh,1
  41b11d:	and    DWORD PTR [esp+ebx*2],esi
  41b120:	mov    ebx,0x5286aa95
  41b125:	and    edi,ebp
  41b127:	fst    DWORD PTR [esp+ebx*2]
  41b12a:	cli    
  41b12b:	add    al,0xf7
  41b12d:	pushf  
  41b12e:	xor    esp,DWORD PTR [ebx]
  41b130:	push   edx
  41b131:	jp     0x41b150
  41b133:	push   es
  41b134:	addr16 dec esp
  41b136:	into   
  41b137:	mov    esi,0x665f300c
  41b13c:	cmp    esi,DWORD PTR [eax+0x5454b6f9]
  41b142:	mov    bh,BYTE PTR [ebx+0x1ab0c688]
  41b148:	mov    al,BYTE PTR [ebp+0x7017b6fa]
  41b14e:	neg    BYTE PTR [eax]
  41b150:	das    
  41b151:	mov    edi,0x5690179b
  41b156:	(bad)
  41b159:	fsub   st(0),st
  41b15b:	(bad)  
  41b15c:	fisubr DWORD PTR [esi+0x798dcee8]
  41b162:	cmp    DWORD PTR [edx-0x1a],0xffffffe5
  41b166:	aas    
  41b167:	dec    esp
  41b168:	inc    edi
  41b169:	jae    0x41b1b4
  41b16b:	jl     0x41b187
  41b16d:	cdq    
  41b16e:	dec    edx
  41b16f:	in     al,dx
  41b170:	inc    ebx
  41b171:	pop    ecx
  41b172:	add    eax,0x3f77ce92
  41b177:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b179:	ror    bh,cl
  41b17b:	pop    esp
  41b17c:	jo     0x41b1ed
  41b17e:	jnp    0x41b13e
  41b180:	into   
  41b181:	int3   
  41b182:	repnz lods al,BYTE PTR ds:[esi]
  41b184:	mov    esp,0xf4409ae3
  41b189:	pop    ecx
  41b18a:	xchg   edx,eax
  41b18b:	add    bl,BYTE PTR [ecx]
  41b18d:	push   edi
  41b18e:	add    ah,al
  41b190:	adc    edi,DWORD PTR [esi+0x650fbc69]
  41b196:	mov    bh,0x6c
  41b198:	in     eax,0x1c
  41b19a:	imul   eax,DWORD PTR [esi-0x12],0x2e
  41b19e:	ror    BYTE PTR [esp+ebp*1-0x4e96a8c0],cl
  41b1a5:	mov    eax,ss
  41b1a7:	dec    ecx
  41b1a8:	data16 jae 0x41b20e
  41b1ab:	dec    DWORD PTR [ecx+0x7df89b4e]
  41b1b1:	xor    eax,0xf6b28f29
  41b1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b7:	jmp    0xa9:0x78b53a30
  41b1be:	outs   dx,DWORD PTR ds:[esi]
  41b1bf:	mov    ebx,0x3a4fec5b
  41b1c4:	int3   
  41b1c5:	ins    BYTE PTR es:[edi],dx
  41b1c6:	xchg   esp,eax
  41b1c7:	das    
  41b1c8:	sbb    BYTE PTR [edx],0xa2
  41b1cb:	cmp    BYTE PTR [ecx+edx*8-0x4da15ae7],bh
  41b1d2:	mov    bl,0xe2
  41b1d4:	stos   DWORD PTR es:[edi],eax
  41b1d5:	fidiv  WORD PTR ds:0x23e05033
  41b1db:	cs mov esp,0x15aa6420
  41b1e1:	mov    edx,0xcbec039a
  41b1e6:	in     eax,0xf6
  41b1e8:	xchg   ebx,eax
  41b1e9:	pushf  
  41b1ea:	add    esp,DWORD PTR [esi+0x3d]
  41b1ed:	xchg   esp,esi
  41b1ef:	mov    gs,WORD PTR [edi+0x67]
  41b1f2:	ret    0x2393
  41b1f5:	daa    
  41b1f6:	jae    0x41b18c
  41b1f8:	add    DWORD PTR fs:[si],0xffffffcb
  41b1fd:	clc    
  41b1fe:	push   0x1a
  41b200:	cmp    BYTE PTR [esi+0x40e931c6],al
  41b206:	xchg   ecx,eax
  41b207:	sub    eax,DWORD PTR [eax+0x18bceda7]
  41b20d:	call   0xd309:0x60700bc
  41b214:	jne    0x41b1ed
  41b216:	ret    
  41b217:	sbb    bl,BYTE PTR [ecx+0x66]
  41b21a:	lods   al,BYTE PTR ds:[esi]
  41b21b:	jecxz  0x41b1d5
  41b21d:	jbe    0x41b289
  41b21f:	dec    edi
  41b220:	xor    dh,BYTE PTR [eax+eax*2+0x3747b4ae]
  41b227:	lahf   
  41b228:	xor    ebp,DWORD PTR [edi]
  41b22a:	sbb    ecx,edx
  41b22c:	inc    ebp
  41b22d:	lods   eax,DWORD PTR ds:[esi]
  41b22e:	nop/reserved BYTE PTR [esi-0x49d7c09d]
  41b235:	rol    BYTE PTR [ebx-0x3e70c667],0x3d
  41b23c:	lods   eax,DWORD PTR ds:[esi]
  41b23d:	mov    ah,0xd1
  41b23f:	mov    esp,0x43eb69ba
  41b244:	xor    al,0x7b
  41b246:	mov    esi,0xc87580ac
  41b24b:	loope  0x41b1f4
  41b24d:	inc    esp
  41b24e:	push   cs
  41b24f:	xchg   ecx,eax
  41b250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b251:	retf   0x3497
  41b254:	inc    ebp
  41b255:	(bad)  [edi+0x33228d06]
  41b25b:	fdiv   DWORD PTR ds:0x27cc2fad
  41b261:	pusha  
  41b262:	out    0xad,eax
  41b264:	push   eax
  41b265:	dec    edx
  41b266:	jb     0x41b230
  41b268:	dec    ebx
  41b269:	and    al,0xc4
  41b26b:	hlt    
  41b26c:	pusha  
  41b26d:	in     al,dx
  41b26e:	sahf   
  41b26f:	mov    ds:0x45dfd011,eax
  41b274:	and    BYTE PTR [ebx+ebp*8],dh
  41b277:	dec    eax
  41b278:	mov    edi,0xb4492013
  41b27d:	lods   eax,DWORD PTR ds:[esi]
  41b27e:	lahf   
  41b27f:	dec    eax
  41b280:	mov    ah,0x9e
  41b282:	std    
  41b283:	pop    edx
  41b284:	and    edi,DWORD PTR [edi]
  41b286:	xchg   esi,eax
  41b287:	pop    ebx
  41b288:	imul   ebx,DWORD PTR [ecx],0x45bab8cc
  41b28e:	outs   dx,BYTE PTR ds:[esi]
  41b28f:	jmp    0x41b2b2
  41b291:	cmp    eax,0x48a50221
  41b296:	xchg   ebx,eax
  41b297:	mov    ebx,0xa7c336c0
  41b29c:	ret    0x60df
  41b29f:	retf   0xb635
  41b2a2:	cli    
  41b2a3:	jne    0x41b2f0
  41b2a5:	retf   0x6cfd
  41b2a8:	fsub   st,st(2)
  41b2aa:	es pop ebx
  41b2ac:	jmp    0x86a:0xc2f758ed
  41b2b3:	sbb    al,0x29
  41b2b5:	in     al,0xfd
  41b2b7:	mov    ebp,0x9285c26c
  41b2bc:	popf   
  41b2bd:	mov    ecx,0x27c4098c
  41b2c2:	and    BYTE PTR [ebx+0x265cfd02],dh
  41b2c8:	retf   
  41b2c9:	shl    dh,cl
  41b2cb:	xchg   ebp,eax
  41b2cc:	xchg   ecx,eax
  41b2cd:	add    edi,edx
  41b2cf:	int    0x65
  41b2d1:	mov    al,ds:0xd4ab66b3
  41b2d6:	test   al,0xe4
  41b2d8:	inc    edi
  41b2d9:	aaa    
  41b2da:	int    0x9d
  41b2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2dd:	push   edi
  41b2de:	mov    eax,ds:0x833a0aec
  41b2e3:	shr    BYTE PTR [eax-0x59],cl
  41b2e6:	mov    esi,0x94efbf41
  41b2eb:	outs   dx,DWORD PTR ds:[esi]
  41b2ec:	sbb    eax,0xc21b413b
  41b2f1:	mov    eax,ds:0x17e00aca
  41b2f6:	and    edi,0x5a53f600
  41b2fc:	or     dl,BYTE PTR [edi-0x7da8dfe]
  41b302:	jg     0x41b342
  41b304:	xor    eax,0xc4302835
  41b309:	sbb    BYTE PTR [ebx],bh
  41b30b:	call   DWORD PTR [edx]
  41b30d:	ficom  WORD PTR [ebx-0x70]
  41b310:	js     0x41b2b7
  41b312:	sti    
  41b313:	xor    DWORD PTR [edi+0x5b3496fb],edx
  41b319:	add    eax,DWORD PTR [esi+0x7e367137]
  41b31f:	(bad)  
  41b320:	mul    DWORD PTR [eax-0x58]
  41b323:	xchg   ecx,eax
  41b324:	inc    eax
  41b325:	mov    ds:0x1ba801ec,eax
  41b32a:	mov    ecx,esi
  41b32c:	mov    eax,0xe0bf4e6d
  41b331:	mov    ch,0xc8
  41b333:	inc    edx
  41b334:	scas   eax,DWORD PTR es:[edi]
  41b335:	cwde   
  41b336:	xor    edx,DWORD PTR [edx-0x76]
  41b339:	xchg   edi,eax
  41b33a:	jge    0x41b38f
  41b33c:	scas   eax,DWORD PTR es:[edi]
  41b33d:	xor    bh,BYTE PTR [esi]
  41b33f:	push   ss
  41b340:	leave  
  41b341:	fwait
  41b342:	out    dx,eax
  41b343:	iret   
  41b344:	dec    edx
  41b345:	inc    edx
  41b346:	mov    esi,0xc5d3b6c6
  41b34b:	jae    0x41b345
  41b34d:	cwde   
  41b34e:	mov    ah,dl
  41b350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b351:	pop    ss
  41b352:	xchg   esp,eax
  41b353:	shr    DWORD PTR [ebx],0x10
  41b356:	pop    ds
  41b357:	mov    dh,0xdb
  41b359:	or     bl,BYTE PTR ds:0xf7c6b4df
  41b35f:	mov    eax,0xb0a6aa9c
  41b364:	cmp    al,0x87
  41b366:	or     al,0x85
  41b368:	jp     0x41b3b6
  41b36a:	add    cl,ch
  41b36c:	fcmovne st,st(2)
  41b36e:	adc    DWORD PTR [eax],esp
  41b370:	shl    DWORD PTR [edi+0x11],1
  41b373:	jno    0x41b374
  41b375:	les    eax,FWORD PTR [esi]
  41b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b378:	push   es
  41b379:	(bad)  
  41b37a:	in     al,0x61
  41b37c:	mov    ebp,0x76ef4ee5
  41b381:	mov    ch,dl
  41b383:	cwde   
  41b384:	loop   0x41b389
  41b386:	xor    BYTE PTR fs:[ebx],dl
  41b389:	cmp    BYTE PTR [edx-0x6bf653e8],ch
  41b38f:	shl    DWORD PTR [ebx+0x17],1
  41b392:	adc    esi,eax
  41b394:	dec    esp
  41b395:	test   BYTE PTR [eax],ah
  41b397:	dec    esp
  41b398:	int3   
  41b399:	mov    ebx,0xc9ff87fd
  41b39e:	push   esp
  41b39f:	add    eax,0x182d16e4
  41b3a4:	push   ecx
  41b3a5:	mov    ch,0x9e
  41b3a7:	in     eax,0x98
  41b3a9:	jecxz  0x41b337
  41b3ab:	loop   0x41b40f
  41b3ad:	and    esi,0x35
  41b3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b1:	es cmp al,0x19
  41b3b4:	into   
  41b3b5:	lahf   
  41b3b6:	lds    edi,FWORD PTR [edi-0x67]
  41b3b9:	imul   esi,DWORD PTR [esp+ebp*2-0x372e469c],0xffffffbf
  41b3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c2:	cmp    DWORD PTR [ebx+0x6b],ebx
  41b3c5:	test   al,0x16
  41b3c7:	xor    BYTE PTR [ebx+0x53],ch
  41b3ca:	dec    esp
  41b3cb:	mov    ah,0x6c
  41b3cd:	xor    ah,ah
  41b3cf:	es stos BYTE PTR es:[edi],al
  41b3d1:	jge    0x41b38d
  41b3d3:	shl    dh,0x89
  41b3d6:	lods   al,BYTE PTR ds:[esi]
  41b3d7:	push   esi
  41b3d8:	xchg   ebx,eax
  41b3d9:	cdq    
  41b3da:	dec    esp
  41b3db:	and    edi,DWORD PTR [ecx+0x69]
  41b3de:	dec    ecx
  41b3df:	in     eax,0xb4
  41b3e1:	add    dl,BYTE PTR [ecx-0xd]
  41b3e4:	add    eax,0xde6f657e
  41b3e9:	inc    ebx
  41b3ea:	loop   0x41b3cd
  41b3ec:	xor    ebx,DWORD PTR [ecx+0xb9600c7]
  41b3f2:	push   0x23
  41b3f4:	and    edx,DWORD PTR [edx+0x3c]
  41b3f7:	int3   
  41b3f8:	test   ch,0x9b
  41b3fb:	or     BYTE PTR [esi+edx*8-0x6e4ad9fd],bl
  41b402:	fistp  QWORD PTR ds:0x22a83cf5
  41b408:	xchg   ebx,eax
  41b409:	xchg   bh,al
  41b40b:	int3   
  41b40c:	xchg   ebp,eax
  41b40d:	dec    ebp
  41b40e:	fnstsw WORD PTR [esi+0x5d270c8e]
  41b414:	push   ds
  41b415:	add    eax,esi
  41b417:	and    eax,0x2947be4d
  41b41c:	sub    DWORD PTR [esi+0x57],0xffffffe7
  41b420:	inc    edx
  41b421:	lock jns 0x41b489
  41b424:	adc    al,0x6c
  41b426:	daa    
  41b427:	mov    ecx,0xfffe6fa7
  41b42c:	addr16 (bad) 
  41b42e:	imul   edi,ebp,0xfc139473
  41b434:	popf   
  41b435:	ror    DWORD PTR [ecx+0x71],cl
  41b438:	xor    dl,BYTE PTR [edx]
  41b43a:	retf   0xfe42
  41b43d:	push   edi
  41b43e:	(bad)  [esi]
  41b440:	push   ebp
  41b441:	rcl    DWORD PTR [edi-0x2a0fdea0],cl
  41b447:	xlat   BYTE PTR ds:[ebx]
  41b448:	out    dx,al
  41b449:	add    BYTE PTR [edi],0xf
  41b44c:	test   eax,0x82f0d3b8
  41b451:	sbb    BYTE PTR [edi],0x27
  41b454:	xchg   esi,eax
  41b455:	mov    ebp,0xa562dbd5
  41b45a:	pop    ss
  41b45b:	inc    edi
  41b45c:	cmp    al,0x92
  41b45e:	mov    ch,0x1f
  41b460:	and    eax,DWORD PTR [ebp+0x2d]
  41b463:	push   ecx
  41b464:	mov    ecx,0xcd850d4d
  41b469:	ret    
  41b46a:	cdq    
  41b46b:	lock popf 
  41b46d:	pop    esi
  41b46e:	ror    DWORD PTR [esp+edi*2],cl
  41b471:	push   edx
  41b472:	push   edi
  41b473:	cs hlt 
  41b475:	mov    eax,esp
  41b477:	(bad)
  41b47a:	and    BYTE PTR [esi+0x28],al
  41b47d:	jb     0x41b41d
  41b47f:	outs   dx,BYTE PTR ds:[esi]
  41b480:	out    dx,al
  41b481:	inc    ecx
  41b482:	mov    ch,0x91
  41b484:	jp     0x41b45d
  41b486:	ret    
  41b487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b488:	in     al,dx
  41b489:	xchg   edi,eax
  41b48a:	jb     0x41b4b9
  41b48c:	sbb    BYTE PTR [eax+0x19ce3f54],0xbb
  41b493:	loope  0x41b4de
  41b495:	mov    DWORD PTR [edx-0x45],ebx
  41b498:	daa    
  41b499:	bound  esp,QWORD PTR [ecx-0x7fb2cfad]
  41b49f:	xlat   BYTE PTR ds:[ebx]
  41b4a0:	jns    0x41b43c
  41b4a2:	arpl   WORD PTR [edx+0x6440b50c],ax
  41b4a8:	addr16 dec esi
  41b4aa:	jecxz  0x41b493
  41b4ac:	sbb    eax,0xcc1e4a7e
  41b4b1:	mov    ah,0x14
  41b4b3:	dec    ebx
  41b4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b5:	mov    al,ds:0x5d64a7ea
  41b4ba:	sbb    dh,BYTE PTR [eax+0x3f9e3af9]
  41b4c0:	push   ebx
  41b4c1:	adc    eax,0xfbeb8446
  41b4c6:	das    
  41b4c7:	sbb    eax,ecx
  41b4c9:	mov    BYTE PTR [ebx+esi*2+0xcceacbd],0x39
  41b4d1:	or     ebx,edx
  41b4d3:	cs inc edi
  41b4d5:	outs   dx,DWORD PTR ds:[esi]
  41b4d6:	sub    BYTE PTR ds:0xeab05b0a,0x6f
  41b4dd:	mov    DWORD PTR [esp+esi*2],ebx
  41b4e0:	or     eax,0xee7e1e7f
  41b4e5:	shl    DWORD PTR [edi-0x7f],1
  41b4e8:	push   esp
  41b4e9:	mov    esi,0x996450c4
  41b4ee:	xor    BYTE PTR [edx-0x71],0x1
  41b4f2:	and    BYTE PTR [ebx],dh
  41b4f4:	cmc    
  41b4f5:	xchg   edi,eax
  41b4f6:	mov    BYTE PTR [eax],ah
  41b4f8:	mov    ah,0x5
  41b4fa:	daa    
  41b4fb:	xchg   esp,eax
  41b4fc:	mov    bl,0x9
  41b4fe:	mov    ds:0x9195bfdc,al
  41b503:	data16 jle 0x41b4eb
  41b506:	leave  
  41b507:	ror    BYTE PTR [ecx-0x1e],0xdf
  41b50b:	int    0x2e
  41b50d:	xor    edx,DWORD PTR [ebx-0x4]
  41b510:	fstp   st(4)
  41b512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b513:	add    ecx,0x87a3191e
  41b519:	xor    edi,DWORD PTR [ebp+0x60]
  41b51c:	adc    eax,DWORD PTR [eax]
  41b51e:	cwde   
  41b51f:	mov    bh,0xe9
  41b521:	sub    DWORD PTR [eax-0xc],ecx
  41b524:	push   0x4b9e12e1
  41b529:	cdq    
  41b52a:	jmp    0x9c57072e
  41b52f:	imul   ebp,ebp,0xfa6b804d
  41b535:	jns    0x41b5b5
  41b537:	arpl   WORD PTR [eax],bx
  41b539:	jl     0x41b4bd
  41b53b:	jns    0x41b4ea
  41b53d:	xchg   dl,dh
  41b53f:	or     BYTE PTR [edi-0x5ca5338f],ah
  41b545:	sahf   
  41b546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b547:	icebp  
  41b548:	pop    ecx
  41b549:	fs stos DWORD PTR es:[edi],eax
  41b54b:	adc    eax,0xb271a44f
  41b550:	clc    
  41b551:	clc    
  41b552:	retf   0xb4cf
  41b555:	xor    BYTE PTR [edx+0x28],dl
  41b558:	mov    eax,0x992f29e9
  41b55d:	arpl   WORD PTR [edi+0x60],di
  41b560:	cli    
  41b561:	(bad)  
  41b562:	sub    al,dl
  41b564:	jns    0x41b5b0
  41b566:	enter  0x882c,0x54
  41b56a:	mov    al,ds:0x368267c4
  41b56f:	inc    ecx
  41b570:	fwait
  41b571:	add    BYTE PTR [ebp-0x2],dl
  41b574:	out    0x33,eax
  41b576:	(bad)  
  41b577:	cmc    
  41b578:	sar    BYTE PTR [ebp+ebp*4+0x4e],0x3a
  41b57d:	mov    eax,0x3c0cf13d
  41b582:	int    0x49
  41b584:	fs int 0xd6
  41b587:	and    DWORD PTR [edx],edx
  41b589:	fistp  QWORD PTR [edi+0x18e18fb3]
  41b58f:	cli    
  41b590:	inc    esi
  41b591:	adc    al,0xba
  41b593:	sbb    ch,BYTE PTR [esi+0x3f]
  41b596:	test   edx,ecx
  41b598:	adc    esp,0xf6367baf
  41b59e:	(bad)  
  41b59f:	enter  0x3cbb,0x4a
  41b5a3:	ins    BYTE PTR es:[edi],dx
  41b5a4:	mov    eax,ds:0x96ae0115
  41b5a9:	mov    ecx,0xf3462d18
  41b5ae:	scas   al,BYTE PTR es:[edi]
  41b5af:	dec    ecx
  41b5b0:	xchg   edx,eax
  41b5b1:	fwait
  41b5b2:	bound  edi,QWORD PTR [edi+esi*1-0x4440ad33]
  41b5b9:	retf   0x7f9b
  41b5bc:	push   ss
  41b5bd:	mov    esi,0x32fde004
  41b5c2:	sbb    edx,DWORD PTR [ebx-0x316fbaf]
  41b5c8:	test   BYTE PTR [esi+0x7e],dl
  41b5cb:	mov    al,ds:0x7bd18cf6
  41b5d0:	push   edx
  41b5d1:	xor    eax,edx
  41b5d3:	push   ebx
  41b5d4:	cs in  eax,0x1b
  41b5d7:	popa   
  41b5d8:	mov    bh,cl
  41b5da:	sub    bh,BYTE PTR [edx-0x53]
  41b5dd:	jle    0x41b5e5
  41b5df:	sub    eax,0x37c4c468
  41b5e4:	adc    al,0x3b
  41b5e6:	outs   dx,DWORD PTR ds:[esi]
  41b5e7:	aaa    
  41b5e8:	mov    bh,0xaf
  41b5ea:	jb     0x41b5cd
  41b5ec:	xlat   BYTE PTR ds:[ebx]
  41b5ed:	imul   esp,DWORD PTR fs:[edi+ecx*1+0xf814824],0xd8174d3c
  41b5f9:	xor    bl,bl
  41b5fb:	pop    ecx
  41b5fc:	cmp    al,0x26
  41b5fe:	add    eax,0x474ac822
  41b603:	int    0xd3
  41b605:	adc    al,ch
  41b607:	dec    ebp
  41b608:	adc    al,0x20
  41b60a:	cmp    esi,DWORD PTR ds:0x5bc53527
  41b610:	in     eax,dx
  41b611:	pop    esi
  41b612:	push   edi
  41b613:	clc    
  41b614:	sbb    BYTE PTR [ecx-0x24],0x67
  41b618:	mov    ah,0x99
  41b61a:	fs dec ebp
  41b61c:	xor    al,dl
  41b61e:	cld    
  41b61f:	push   cs
  41b620:	pop    ds
  41b621:	cmp    cl,BYTE PTR [eax+0x714c980d]
  41b627:	test   DWORD PTR [ebx-0x17],eax
  41b62a:	cmp    dl,BYTE PTR [ecx+0x25b31909]
  41b630:	dec    ebx
  41b631:	adc    DWORD PTR [bx+di-0x7496],edi
  41b636:	xchg   DWORD PTR [ebp+0x6728fcc8],ebx
  41b63c:	xor    al,0x1f
  41b63e:	imul   eax,ebp,0x43
  41b641:	cs (bad) 
  41b643:	mov    esi,0xfb4c92b1
  41b648:	mov    cl,0x11
  41b64a:	inc    ebp
  41b64b:	add    BYTE PTR [esi+0x7cc28529],ah
  41b651:	xchg   BYTE PTR [edi],bh
  41b653:	or     ah,BYTE PTR [esi+0x2]
  41b656:	dec    edx
  41b657:	and    ch,BYTE PTR [ebx+0x21]
  41b65a:	loope  0x41b65b
  41b65c:	dec    edx
  41b65d:	in     eax,dx
  41b65e:	push   ss
  41b65f:	adc    eax,0xb27545ca
  41b664:	push   edx
  41b665:	push   ecx
  41b666:	push   0xed4ddf55
  41b66b:	jno    0x41b626
  41b66d:	pop    ebx
  41b66e:	xor    DWORD PTR [ebx],ecx
  41b670:	or     bl,BYTE PTR [esi-0x19404807]
  41b676:	mov    dl,0xca
  41b678:	and    al,0x6a
  41b67a:	jge    0x41b6b5
  41b67c:	out    dx,eax
  41b67d:	mov    ds,WORD PTR [ebx-0x40]
  41b680:	mov    ebp,0xd115a6d7
  41b685:	enter  0x8894,0x53
  41b689:	(bad)  
  41b68a:	sbb    al,BYTE PTR [edx+eiz*4]
  41b68d:	(bad)  [eax]
  41b68f:	jecxz  0x41b6ca
  41b691:	inc    ebx
  41b692:	ficom  DWORD PTR [ebx]
  41b694:	jp     0x41b66d
  41b696:	mov    cl,0x5f
  41b698:	sub    al,0xef
  41b69a:	pop    edi
  41b69b:	sbb    DWORD PTR [edx+0x51],eax
  41b69e:	xchg   esp,eax
  41b69f:	nop
  41b6a0:	pop    esp
  41b6a1:	or     DWORD PTR [esi],ecx
  41b6a3:	push   eax
  41b6a4:	mov    ah,0xac
  41b6a6:	bswap  esp
  41b6a8:	call   0x286600db
  41b6ad:	dec    eax
  41b6ae:	scas   al,BYTE PTR es:[edi]
  41b6af:	push   esp
  41b6b0:	adc    BYTE PTR [ebx],dh
  41b6b2:	jp     0x41b69b
  41b6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b5:	out    0xed,eax
  41b6b7:	jo     0x41b6f2
  41b6b9:	or     al,dl
  41b6bb:	xchg   ebp,eax
  41b6bc:	icebp  
  41b6bd:	in     eax,0x9
  41b6bf:	jl     0x41b72c
  41b6c1:	sahf   
  41b6c2:	pop    ebp
  41b6c3:	jg     0x41b721
  41b6c5:	pusha  
  41b6c6:	or     eax,DWORD PTR [esi-0x4e106715]
  41b6cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6cd:	adc    DWORD PTR [esi+0x5d62a1d7],edi
  41b6d3:	jp     0x41b704
  41b6d5:	mov    ah,0x81
  41b6d7:	enter  0x583d,0x69
  41b6db:	arpl   WORD PTR [ecx],bp
  41b6dd:	loope  0x41b6a4
  41b6df:	xor    eax,0xc855dcd4
  41b6e4:	adc    eax,0xd938015
  41b6e9:	fs dec esp
  41b6eb:	adc    eax,0xe1c67d96
  41b6f0:	adc    eax,0xde1f2f2
  41b6f5:	xor    al,0xeb
  41b6f7:	adc    eax,0x6306de91
  41b6fc:	ds jns 0x41b713
  41b6ff:	cmp    BYTE PTR [ebp+0x49],al
  41b702:	aad    0xf1
  41b704:	xchg   ebx,eax
  41b705:	sahf   
  41b706:	dec    ecx
  41b707:	mov    WORD PTR [edx],gs
  41b709:	(bad)  
  41b70a:	push   ebx
  41b70b:	dec    esp
  41b70c:	push   ebp
  41b70d:	add    DWORD PTR [edi],ecx
  41b70f:	cmp    edi,DWORD PTR [esi]
  41b711:	stos   DWORD PTR es:[edi],eax
  41b712:	popa   
  41b713:	imul   edx,DWORD PTR [ebp+0x61],0x36
  41b717:	outs   dx,BYTE PTR ds:[esi]
  41b718:	jns    0x41b75e
  41b71a:	cs inc ebx
  41b71c:	rcl    DWORD PTR [edx+ebx*8],0xcf
  41b720:	enter  0xf620,0x32
  41b724:	dec    esp
  41b725:	fsubr  st(5),st
  41b727:	ins    DWORD PTR es:[edi],dx
  41b728:	test   BYTE PTR [ebx],cl
  41b72a:	popf   
  41b72b:	push   cs
  41b72c:	stos   BYTE PTR es:[edi],al
  41b72d:	(bad)  
  41b72e:	cmp    al,0xcd
  41b730:	rcr    DWORD PTR [ebx+0x7267d096],0xab
  41b737:	pop    ss
  41b738:	cmp    eax,0xacb98ccb
  41b73d:	ins    BYTE PTR es:[edi],dx
  41b73e:	pusha  
  41b73f:	scas   eax,DWORD PTR es:[edi]
  41b740:	call   0x1b3a:0xc3020e2b
  41b747:	sbb    eax,0xd112e538
  41b74c:	mov    cl,0xe6
  41b74e:	mov    bl,0x89
  41b750:	cmc    
  41b751:	xchg   edi,eax
  41b752:	ret    0xb317
  41b755:	ds dec ecx
  41b757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b758:	scas   eax,DWORD PTR es:[edi]
  41b759:	sbb    eax,DWORD PTR [eax+0x2a392dc1]
  41b75f:	mov    DWORD PTR [esi],edi
  41b761:	rol    BYTE PTR [ebp-0x7c],0x1b
  41b765:	xchg   edi,eax
  41b766:	call   0x7202:0x86f0d011
  41b76d:	push   ecx
  41b76e:	std    
  41b76f:	out    dx,al
  41b770:	jae    0x41b769
  41b772:	push   ebp
  41b773:	inc    edi
  41b774:	iret   
  41b775:	popa   
  41b776:	out    0xf4,eax
  41b778:	push   ecx
  41b779:	jbe    0x41b713
  41b77b:	dec    edi
  41b77c:	rcr    bh,1
  41b77e:	aaa    
  41b77f:	cs mov cl,al
  41b782:	xchg   al,cl
  41b784:	jbe    0x41b7a2
  41b786:	out    dx,eax
  41b787:	ss sbb al,0xdc
  41b78a:	aas    
  41b78b:	test   eax,0x2b1717cc
  41b790:	icebp  
  41b791:	pop    eax
  41b792:	(bad)  
  41b793:	int3   
  41b794:	int3   
  41b795:	pop    edx
  41b796:	repnz pop ss
  41b798:	inc    edi
  41b799:	jnp    0x41b771
  41b79b:	cmp    ecx,DWORD PTR [edx-0x62e0886e]
  41b7a1:	or     BYTE PTR [eax-0x74],bh
  41b7a4:	les    ecx,FWORD PTR [edx+0x7d]
  41b7a7:	call   0x9151:0x9d3449a8
  41b7ae:	add    edi,DWORD PTR [esi]
  41b7b0:	leave  
  41b7b1:	sbb    eax,DWORD PTR [ebp-0x70]
  41b7b4:	pop    ds
  41b7b5:	lock stos BYTE PTR es:[edi],al
  41b7b7:	dec    edx
  41b7b8:	(bad)  
  41b7b9:	pop    ss
  41b7ba:	lods   eax,DWORD PTR ds:[esi]
  41b7bb:	mov    ebp,0xf042adee
  41b7c0:	into   
  41b7c1:	jae    0x41b764
  41b7c3:	push   edx
  41b7c4:	or     BYTE PTR [ebp+0x5a],dl
  41b7c7:	mul    DWORD PTR [ebp+edx*8-0x53537095]
  41b7ce:	mov    ?,WORD PTR [ebp+0x10]
  41b7d1:	jge    0x41b80d
  41b7d3:	test   ebp,ebp
  41b7d5:	push   cs
  41b7d6:	(bad)  
  41b7d7:	popf   
  41b7d8:	aad    0xf5
  41b7da:	mov    eax,ds:0x101d2ff5
  41b7df:	dec    edi
  41b7e0:	mov    ds:0x72b74429,al
  41b7e5:	adc    DWORD PTR [edi-0x34],edi
  41b7e8:	sub    al,0x1e
  41b7ea:	mov    ebp,0x9c8c5bf0
  41b7ef:	adc    ebx,eax
  41b7f1:	pusha  
  41b7f2:	into   
  41b7f3:	fsubr  st,st(4)
  41b7f5:	xchg   DWORD PTR [esi-0x7a],edx
  41b7f8:	cli    
  41b7f9:	or     dl,dl
  41b7fb:	stos   BYTE PTR es:[edi],al
  41b7fc:	ss test cl,0x74
  41b800:	pop    ebx
  41b801:	mov    ah,0x71
  41b803:	out    dx,eax
  41b804:	xor    eax,0x138b0cf
  41b809:	hlt    
  41b80a:	add    ch,BYTE PTR [ebp-0x73f63cd]
  41b810:	popa   
  41b811:	xor    bh,BYTE PTR [edi+esi*8+0x42]
  41b815:	es mov ebx,0x606373a3
  41b81b:	push   ecx
  41b81c:	fistp  WORD PTR [esp+eiz*8+0x12]
  41b820:	ret    
  41b821:	mov    cl,0x37
  41b823:	loop   0x41b808
  41b825:	or     eax,0xd551153d
  41b82a:	out    dx,eax
  41b82b:	cmp    eax,DWORD PTR [esi-0x33]
  41b82e:	xchg   BYTE PTR [ebx-0x3e],ch
  41b831:	jl     0x41b7ed
  41b833:	jmp    0x565189df
  41b838:	call   0x1e1:0x7a54fa14
  41b83f:	shl    edi,1
  41b841:	mov    eax,0xb2816402
  41b846:	pushf  
  41b847:	std    
  41b848:	in     al,dx
  41b849:	inc    esi
  41b84a:	imul   esi,DWORD PTR [esi],0x90997b94
  41b850:	es pop esp
  41b852:	jecxz  0x41b80a
  41b854:	outs   dx,DWORD PTR ds:[esi]
  41b855:	sahf   
  41b856:	cmp    ah,bh
  41b858:	adc    eax,0x81777262
  41b85d:	adc    BYTE PTR fs:[ecx+eiz*8+0x246a986b],dl
  41b865:	ja     0x41b81b
  41b867:	pop    ss
  41b868:	loopne 0x41b8e4
  41b86a:	std    
  41b86b:	mov    ecx,DWORD PTR [eax+esi*4-0x27c9f88d]
  41b872:	and    ch,BYTE PTR [ebx+0x6cd75ab8]
  41b878:	scas   al,BYTE PTR es:[edi]
  41b879:	mov    eax,0x9e2c0ec3
  41b87e:	lahf   
  41b87f:	test   eax,0x711f1001
  41b884:	inc    ebx
  41b885:	mov    ah,0x9f
  41b887:	cmp    ebx,edi
  41b889:	push   es
  41b88a:	push   0xffffffa6
  41b88c:	xchg   DWORD PTR [ecx+ecx*4],esp
  41b88f:	dec    edx
  41b890:	jmp    0x41b857
  41b892:	test   DWORD PTR [edx+0x69],esi
  41b895:	test   BYTE PTR [edi-0x54afb9dc],al
  41b89b:	jle    0x41b8af
  41b89d:	scas   eax,DWORD PTR es:[edi]
  41b89e:	nop
  41b89f:	int3   
  41b8a0:	jp     0x41b86e
  41b8a2:	outs   dx,BYTE PTR ds:[esi]
  41b8a3:	je     0x41b87d
  41b8a5:	lods   eax,DWORD PTR ds:[esi]
  41b8a6:	in     al,0xa6
  41b8a8:	loop   0x41b905
  41b8aa:	dec    ebx
  41b8ab:	mov    ds:0xd1cf030,al
  41b8b0:	xor    DWORD PTR [esi+0x48680050],eax
  41b8b6:	aaa    
  41b8b7:	ror    BYTE PTR [eax+0xd],1
  41b8ba:	jmp    0x3cadaab5
  41b8bf:	(bad)
  41b8c2:	xor    esi,edi
  41b8c4:	or     DWORD PTR [esi+0x6d],eax
  41b8c7:	(bad)  
  41b8c8:	cmp    ch,BYTE PTR ds:0xa92c9620
  41b8ce:	push   0xffc304ff
  41b8d3:	push   ds
  41b8d4:	xchg   esi,eax
  41b8d5:	and    DWORD PTR [bp-0x6f],edi
  41b8d9:	cwde   
  41b8da:	out    0x38,eax
  41b8dc:	fadd   st,st(0)
  41b8de:	ja     0x41b87b
  41b8e0:	mov    dl,0x79
  41b8e2:	clc    
  41b8e3:	add    BYTE PTR [eax-0x142725e],dl
  41b8e9:	push   ecx
  41b8ea:	imul   BYTE PTR [edi-0x37]
  41b8ed:	jbe    0x41b8c7
  41b8ef:	mov    al,ds:0x8cc8416c
  41b8f4:	shr    al,1
  41b8f6:	mov    edi,0x1c263475
  41b8fb:	add    BYTE PTR [ecx-0x3d],dh
  41b8fe:	push   ebx
  41b8ff:	push   es
  41b900:	push   ebp
  41b901:	xchg   ecx,eax
  41b902:	push   esp
  41b903:	sbb    eax,0xcf211fab
  41b908:	sub    eax,0xfac9682a
  41b90d:	or     eax,DWORD PTR [edx-0x7e]
  41b910:	jge    0x41b8e9
  41b912:	sti    
  41b913:	fs out 0x9e,eax
  41b916:	ret    
  41b917:	loopne 0x41b920
  41b919:	sub    ch,BYTE PTR [ebx-0x59]
  41b91c:	and    esi,edi
  41b91e:	lods   eax,DWORD PTR ds:[esi]
  41b91f:	out    dx,al
  41b920:	ret    
  41b921:	or     bl,ch
  41b923:	inc    esp
  41b924:	lahf   
  41b925:	mov    ch,0x8e
  41b927:	pop    ss
  41b928:	push   0x5c2f2c6a
  41b92d:	inc    edx
  41b92e:	arpl   WORD PTR [edi],di
  41b930:	mov    ds,WORD PTR [esi+eiz*8+0x71]
  41b934:	or     DWORD PTR [edi+0x61],ebp
  41b937:	repnz ds icebp 
  41b93a:	dec    edx
  41b93b:	mov    eax,0x21371c96
  41b940:	sbb    bl,BYTE PTR [ebx-0x4dce86c8]
  41b946:	inc    esi
  41b947:	adc    bh,ch
  41b949:	les    esp,FWORD PTR [ebx+0x5614a071]
  41b94f:	sub    DWORD PTR [ebx-0x6f7e469d],esp
  41b955:	(bad)  
  41b956:	mov    esi,DWORD PTR [eax]
  41b958:	adc    bh,bl
  41b95a:	fbstp  TBYTE PTR [esi+0x75]
  41b95d:	(bad)  
  41b95e:	lock lods al,BYTE PTR ds:[esi]
  41b960:	sbb    dh,bh
  41b962:	cmp    DWORD PTR [eax+eax*8+0x63a880f2],ebx
  41b969:	pushf  
  41b96a:	jae    0x41b971
  41b96c:	outs   dx,BYTE PTR ds:[esi]
  41b96d:	fbstp  TBYTE PTR [ecx]
  41b96f:	fcomp  DWORD PTR [ebx]
  41b971:	sbb    eax,0xe811cd3c
  41b976:	pop    esi
  41b977:	out    0xd5,eax
  41b979:	scas   al,BYTE PTR es:[edi]
  41b97a:	(bad)  [edx]
  41b97c:	lahf   
  41b97d:	outs   dx,BYTE PTR ds:[esi]
  41b97e:	into   
  41b97f:	imul   ecx,ebp,0x3d
  41b982:	mov    BYTE PTR [ecx],ah
  41b984:	cmp    al,0x80
  41b986:	fsubr  st,st(5)
  41b988:	pop    esi
  41b989:	sbb    ebx,DWORD PTR [edx]
  41b98b:	cli    
  41b98c:	das    
  41b98d:	jle    0x41b9f1
  41b98f:	test   DWORD PTR [ecx-0x79],esp
  41b992:	jne    0x41b9cc
  41b994:	sbb    dh,BYTE PTR [ecx-0x68]
  41b997:	out    dx,eax
  41b998:	sbb    dh,BYTE PTR [ebp-0xa91ac5a]
  41b99e:	pop    esi
  41b99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a0:	and    esi,DWORD PTR [ebx]
  41b9a2:	cwde   
  41b9a3:	inc    sp
  41b9a5:	ret    
  41b9a6:	dec    eax
  41b9a7:	xchg   ecx,eax
  41b9a8:	jg     0x41ba18
  41b9aa:	push   0xde90c34d
  41b9af:	mov    bl,0x82
  41b9b1:	add    esp,DWORD PTR [ebx]
  41b9b3:	mov    dl,0x4b
  41b9b5:	imul   DWORD PTR [edi+0x4c]
  41b9b8:	sub    al,0x98
  41b9ba:	outs   dx,BYTE PTR ds:[esi]
  41b9bb:	xchg   esp,eax
  41b9bc:	cld    
  41b9bd:	inc    edi
  41b9be:	sti    
  41b9bf:	ss sahf 
  41b9c1:	jp     0x41ba03
  41b9c3:	in     al,dx
  41b9c4:	loope  0x41b94d
  41b9c6:	dec    ebx
  41b9c7:	push   es
  41b9c8:	push   ds
  41b9c9:	xchg   ebx,eax
  41b9ca:	sub    eax,0x22b6d8e0
  41b9cf:	push   edi
  41b9d0:	mov    ebx,0xc9b00078
  41b9d5:	push   es
  41b9d6:	add    bh,bl
  41b9d8:	jl     0x41ba3c
  41b9da:	mov    ch,0xe
  41b9dc:	retf   
  41b9dd:	les    ebx,FWORD PTR [ecx+ecx*2+0x1c2fabeb]
  41b9e4:	in     al,0xe3
  41b9e6:	out    dx,eax
  41b9e7:	fcomp  QWORD PTR [esi-0x1a216ff5]
  41b9ed:	popf   
  41b9ee:	iret   
  41b9ef:	pop    edx
  41b9f0:	out    dx,al
  41b9f1:	mov    ds:0xb399c15d,eax
  41b9f6:	dec    esp
  41b9f7:	pop    ebp
  41b9f8:	gs push ebp
  41b9fa:	mov    esi,0xbee9e569
  41b9ff:	cdq    
  41ba00:	ja     0x41ba20
  41ba02:	jle    0x41ba4d
  41ba04:	dec    ebx
  41ba05:	cs or  al,0x69
  41ba08:	push   ecx
  41ba09:	push   esp
  41ba0a:	popa   
  41ba0b:	test   DWORD PTR [eax],edi
  41ba0d:	enter  0x25bb,0x16
  41ba11:	lock ret 0xd633
  41ba15:	mov    ah,0x2d
  41ba17:	ss pop ecx
  41ba19:	add    DWORD PTR [eax],esi
  41ba1b:	xor    BYTE PTR [edi+0x68],ah
  41ba1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1f:	pop    esi
  41ba20:	xor    eax,0xff20e233
  41ba25:	ja     0x41b9cd
  41ba27:	xchg   edx,eax
  41ba28:	shr    DWORD PTR cs:[esp+edi*1+0x2e6b91e4],0xce
  41ba31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba32:	adc    ch,dh
  41ba34:	mov    ds:0x4421f4f9,eax
  41ba39:	(bad)  
  41ba3a:	into   
  41ba3b:	dec    ebp
  41ba3c:	arpl   WORD PTR [esp+eax*2],dx
  41ba3f:	stos   DWORD PTR es:[edi],eax
  41ba40:	loop   0x41ba1b
  41ba42:	cmp    DWORD PTR [ebx-0x12],ebp
  41ba45:	adc    al,0x47
  41ba47:	clc    
  41ba48:	sub    cl,cl
  41ba4a:	or     al,0xee
  41ba4c:	or     al,0x28
  41ba4e:	or     eax,0x71b91ff6
  41ba53:	mov    ebp,0xf4733906
  41ba58:	enter  0x65ce,0x25
  41ba5c:	or     dh,BYTE PTR [esi-0x5d8f8858]
  41ba62:	(bad)  
  41ba63:	jo     0x41b9e7
  41ba65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba66:	sbb    DWORD PTR [ecx+0x5f],edx
  41ba69:	sub    BYTE PTR [eax+0xf],0x1
  41ba6d:	es xchg edx,eax
  41ba6f:	dec    eax
  41ba70:	sbb    cl,al
  41ba72:	(bad)  
  41ba73:	sbb    DWORD PTR [esi-0x10],ecx
  41ba76:	into   
  41ba77:	je     0x41ba00
  41ba79:	jp     0x41ba4e
  41ba7b:	in     al,0xd3
  41ba7d:	push   ebx
  41ba7e:	push   eax
  41ba7f:	je     0x41baa0
  41ba81:	jmp    0x68d7c29a
  41ba86:	mov    ecx,0xe409ef62
  41ba8b:	xchg   ecx,eax
  41ba8c:	pop    edi
  41ba8d:	and    DWORD PTR [ecx-0x5babb246],ebx
  41ba93:	(bad)  
  41ba94:	jmp    0x41baee
  41ba96:	repz call 0x6683dc8a
  41ba9c:	jmp    0xc5f8b1da
  41baa1:	jnp    0x41bb1d
  41baa3:	lds    eax,FWORD PTR [esp+ecx*8-0x5340d522]
  41baaa:	xor    edx,0xc3d42bd4
  41bab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab1:	jmp    0xd372eee7
  41bab6:	sub    DWORD PTR [edx],edi
  41bab8:	ficom  DWORD PTR es:[ebx-0x1814bfa4]
  41babf:	(bad)  
  41bac0:	loopne 0x41bafd
  41bac2:	or     eax,0x9e706c44
  41bac7:	daa    
  41bac8:	inc    eax
  41bac9:	loopne 0x41ba7c
  41bacb:	xor    ebx,esp
  41bacd:	mov    gs,WORD PTR [esi+edi*1+0x326b8590]
  41bad4:	arpl   WORD PTR [ebx-0x2075cab2],dx
  41bada:	mov    esp,0x443433ae
  41badf:	pop    ebx
  41bae0:	inc    esp
  41bae1:	cdq    
  41bae2:	or     BYTE PTR [ebx],al
  41bae4:	adc    ch,BYTE PTR [ebp-0x4d]
  41bae7:	in     al,dx
  41bae8:	sub    BYTE PTR [eax+0xe16cf24],bl
  41baee:	sbb    esp,DWORD PTR [edi]
  41baf0:	dec    edi
  41baf1:	xlat   BYTE PTR ds:[ebx]
  41baf2:	sbb    ebx,DWORD PTR [ebx-0x4ad47fd9]
  41baf8:	arpl   di,dx
  41bafa:	add    al,0xc7
  41bafc:	out    0x17,eax
  41bafe:	pop    ebp
  41baff:	mov    al,0x8d
  41bb01:	mov    DWORD PTR [esi-0x6b],edi
  41bb04:	mov    eax,0x3b90dfe9
  41bb09:	rcr    BYTE PTR [eax-0x58],cl
  41bb0c:	push   ebp
  41bb0d:	fincstp 
  41bb0f:	daa    
  41bb10:	lods   al,BYTE PTR ds:[esi]
  41bb11:	mov    ecx,0xd93be00c
  41bb16:	pop    esi
  41bb17:	(bad)  [esi-0x9]
  41bb1a:	push   0x947f8774
  41bb1f:	jp     0x41bb60
  41bb21:	or     BYTE PTR [ebx+0x6f0ddab7],bh
  41bb27:	xchg   ebp,eax
  41bb28:	scas   al,BYTE PTR es:[edi]
  41bb29:	outs   dx,DWORD PTR ds:[esi]
  41bb2a:	fld    QWORD PTR [edx]
  41bb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2d:	aas    
  41bb2e:	mov    BYTE PTR [ecx],bl
  41bb30:	lahf   
  41bb31:	ss lahf 
  41bb33:	mov    ds:0x6955b58,al
  41bb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb39:	mov    ds,WORD PTR [ebp+edi*4+0x54c8c26d]
  41bb40:	call   0x315e:0x8d03264
  41bb47:	aam    0x2d
  41bb49:	xor    eax,0x9b604104
  41bb4e:	je     0x41bb49
  41bb50:	xor    BYTE PTR [ebx],bh
  41bb52:	add    eax,0xea13ee3c
  41bb57:	lods   al,BYTE PTR ds:[esi]
  41bb58:	jg     0x41bb69
  41bb5a:	sahf   
  41bb5b:	test   BYTE PTR [edi-0x1844fab2],0x71
  41bb62:	(bad)  
  41bb65:	adc    ebp,DWORD PTR [edi-0x31]
  41bb68:	inc    edx
  41bb69:	call   0x6dfe:0x4926d61b
  41bb70:	out    0x1,eax
  41bb72:	sti    
  41bb73:	in     eax,0x38
  41bb75:	repnz add edi,DWORD PTR [ebx+0x6e390857]
  41bb7c:	xchg   edx,eax
  41bb7d:	iret   
  41bb7e:	sub    esp,ebx
  41bb80:	dec    esp
  41bb81:	inc    ecx
  41bb82:	adc    eax,0x8a413439
  41bb87:	imul   eax,DWORD PTR [esi],0xffffffb5
  41bb8a:	mov    dh,0x3d
  41bb8c:	stos   DWORD PTR es:[edi],eax
  41bb8d:	les    eax,FWORD PTR [ebx+ebx*8-0xf]
  41bb91:	pop    esi
  41bb92:	cmp    al,0x5c
  41bb94:	xor    al,0xa0
  41bb96:	and    edi,DWORD PTR [ecx+0x9f1915b]
  41bb9c:	pop    ebx
  41bb9d:	push   eax
  41bb9e:	pop    es
  41bb9f:	mov    ch,0x6
  41bba1:	in     eax,0xcd
  41bba3:	fdivrp st(4),st
  41bba5:	and    DWORD PTR [ecx+0x3d],ebp
  41bba8:	sub    BYTE PTR [edx],dh
  41bbaa:	cdq    
  41bbab:	iret   
  41bbac:	nop
  41bbad:	in     al,dx
  41bbae:	aad    0x7a
  41bbb0:	dec    esp
  41bbb1:	pusha  
  41bbb2:	ret    
  41bbb3:	ins    DWORD PTR es:[edi],dx
  41bbb4:	fist   WORD PTR [ebx+0x51dacbd5]
  41bbba:	(bad)  
  41bbbb:	jne    0x41bbf9
  41bbbd:	add    DWORD PTR [eax+0xa],edx
  41bbc0:	add    al,0xc2
  41bbc2:	sti    
  41bbc3:	retf   0xed66
  41bbc6:	call   0x57119ad7
  41bbcb:	sub    BYTE PTR [edi+0x4e],bl
  41bbce:	jno    0x41bb87
  41bbd0:	and    DWORD PTR [ebp+0x6fe41ef2],ebx
  41bbd6:	dec    ecx
  41bbd7:	ds inc ebx
  41bbd9:	leave  
  41bbda:	fdivp  st(7),st
  41bbdc:	lea    esi,[edx+esi*4-0x1f]
  41bbe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbe1:	jg     0x41bb9b
  41bbe3:	loop   0x41bc54
  41bbe5:	pop    ss
  41bbe6:	call   0x83b1584f
  41bbeb:	pop    edx
  41bbec:	add    ch,dl
  41bbee:	push   ebp
  41bbef:	clc    
  41bbf0:	push   ebp
  41bbf1:	cmp    BYTE PTR [eax],ah
  41bbf3:	inc    eax
  41bbf4:	call   0x9fe1ffd3
  41bbf9:	cld    
  41bbfa:	sbb    edi,ebp
  41bbfc:	ss mov dl,0x5e
  41bbff:	adc    bl,BYTE PTR [esi+0x437c770f]
  41bc05:	inc    esp
  41bc06:	push   es
  41bc07:	mov    ch,0xb7
  41bc09:	xchg   DWORD PTR ds:0x24d74672,ecx
  41bc0f:	jmp    0xc00105c9
  41bc14:	cli    
  41bc15:	jecxz  0x41bbd7
  41bc17:	ror    DWORD PTR [ebx-0x837d735],0x52
  41bc1e:	mov    ch,0x72
  41bc20:	rol    BYTE PTR [edi],1
  41bc22:	mov    bl,BYTE PTR [eax]
  41bc24:	or     eax,0x22e7f8c6
  41bc29:	fld    DWORD PTR [edi+0x62862be2]
  41bc2f:	sti    
  41bc30:	loop   0x41bc16
  41bc32:	xchg   DWORD PTR [ebx+0xebedf3f],ebx
  41bc38:	ror    DWORD PTR ss:[edi+0x48],1
  41bc3c:	and    al,0xc
  41bc3e:	sub    al,0xa5
  41bc40:	fcomp  DWORD PTR [edi+0x30fb2697]
  41bc46:	add    al,0xea
  41bc48:	mov    eax,ds:0xcbff17a3
  41bc4d:	stos   BYTE PTR es:[edi],al
  41bc4e:	mov    DWORD PTR [edi],esi
  41bc50:	jno    0x41bc33
  41bc52:	xchg   esp,eax
  41bc53:	dec    edx
  41bc54:	and    eax,0xbc4e3f8c
  41bc59:	add    bl,BYTE PTR [edi]
  41bc5b:	push   edx
  41bc5c:	sbb    al,BYTE PTR [esi-0x5a]
  41bc5f:	dec    esi
  41bc60:	jmp    0x5a39e990
  41bc65:	inc    esi
  41bc66:	dec    esi
  41bc67:	mov    esi,?
  41bc69:	int    0x33
  41bc6b:	add    ah,al
  41bc6d:	jo     0x41bc65
  41bc6f:	out    dx,eax
  41bc70:	cmp    eax,0xf870874f
  41bc75:	or     edi,edi
  41bc77:	fsub   DWORD PTR ds:0x5573d148
  41bc7d:	shl    BYTE PTR [edx-0x74],0xb1
  41bc81:	jecxz  0x41bc34
  41bc83:	push   edi
  41bc84:	push   cs
  41bc85:	rcr    cl,0xfb
  41bc88:	outs   dx,DWORD PTR ds:[esi]
  41bc89:	mov    dh,BYTE PTR [edx-0x66de26c0]
  41bc8f:	push   ebx
  41bc90:	pushf  
  41bc91:	retf   0xbc59
  41bc94:	aas    
  41bc95:	test   al,0x33
  41bc97:	retf   0x696d
  41bc9a:	xchg   ecx,eax
  41bc9b:	push   esi
  41bc9c:	pop    ebp
  41bc9d:	and    dh,BYTE PTR [ebx+0x69]
  41bca0:	out    dx,al
  41bca1:	sbb    al,BYTE PTR [edx]
  41bca3:	pop    edx
  41bca4:	xchg   ecx,eax
  41bca5:	sbb    DWORD PTR [ebx+0x5c],esp
  41bca8:	pop    edi
  41bca9:	jns    0x41bc3e
  41bcab:	mov    WORD PTR [edx-0x65723c2c],?
  41bcb1:	mov    ah,BYTE PTR [edi]
  41bcb3:	sub    eax,0x88076ece
  41bcb8:	xor    DWORD PTR [esp+eiz*4],eax
  41bcbb:	ins    BYTE PTR es:[edi],dx
  41bcbc:	or     ecx,edi
  41bcbe:	leave  
  41bcbf:	loope  0x41bd2a
  41bcc1:	test   edx,0xdcaea9a2
  41bcc7:	jp     0x41bc5b
  41bcc9:	std    
  41bcca:	arpl   WORD PTR [ecx],ax
  41bccc:	or     BYTE PTR [esi+0x3],0xac
  41bcd0:	pop    edx
  41bcd1:	jmp    0x709b06df
  41bcd6:	cs into 
  41bcd8:	pop    ebx
  41bcd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcda:	fsubr  QWORD PTR [ecx-0x5f]
  41bcdd:	mov    eax,ds:0x1140af77
  41bce2:	int    0xb2
  41bce4:	bound  esi,QWORD PTR [ecx+0x55]
  41bce7:	cmp    al,0x4b
  41bce9:	mov    ds:0xc4ea9ddb,al
  41bcee:	pop    ecx
  41bcef:	mov    edx,0x4b814c80
  41bcf4:	xchg   DWORD PTR [edx],esi
  41bcf6:	gs jge 0x41bd44
  41bcf9:	and    DWORD PTR [esi+ebx*1+0x76f4577],ebp
  41bd00:	call   0x9105:0x5775487c
  41bd07:	mov    ds:0xc55601f9,eax
  41bd0c:	or     ah,BYTE PTR [edx-0x16dd39b7]
  41bd12:	sub    DWORD PTR [edx],edx
  41bd14:	daa    
  41bd15:	in     eax,0x28
  41bd17:	mov    esi,0x37d7bc22
  41bd1c:	pop    es
  41bd1d:	ret    
  41bd1e:	std    
  41bd1f:	popf   
  41bd20:	mov    edx,DWORD PTR [ecx+eiz*2-0x32]
  41bd24:	push   esp
  41bd25:	jae    0x41bd31
  41bd27:	ds repz add al,0x37
  41bd2b:	mov    ebx,0x93498d6b
  41bd30:	sub    esp,0xffffffff
  41bd33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd34:	pop    edx
  41bd35:	pop    esp
  41bd36:	jmp    0x41bd7d
  41bd38:	jmp    0xfe6fdfb5
  41bd3d:	inc    eax
  41bd3e:	jae    0x41bce9
  41bd40:	rcr    BYTE PTR [eax-0x3c],cl
  41bd43:	xor    bh,BYTE PTR [ebp-0x16371ffe]
  41bd49:	std    
  41bd4a:	mov    ?,WORD PTR [eax]
  41bd4c:	sar    BYTE PTR [esi-0x43],cl
  41bd4f:	push   esi
  41bd50:	xchg   esi,eax
  41bd51:	in     al,dx
  41bd52:	pop    esp
  41bd53:	daa    
  41bd54:	mov    ds:0xa3306b3e,al
  41bd59:	(bad)  
  41bd5b:	arpl   WORD PTR [edi+esi*2+0x4c3fde17],di
  41bd62:	dec    edi
  41bd63:	dec    esi
  41bd64:	call   0x1e3bbb18
  41bd69:	scas   al,BYTE PTR es:[edi]
  41bd6a:	mov    esp,0xe4131d4c
  41bd6f:	inc    ecx
  41bd70:	pop    ebp
  41bd71:	jnp    0x41bdb5
  41bd73:	retf   
  41bd74:	retf   0xd5c0
  41bd77:	cmc    
  41bd78:	out    dx,al
  41bd79:	sub    BYTE PTR [edx-0x4c3e96c2],al
  41bd7f:	cmp    bh,BYTE PTR [edx+0x7823cfe8]
  41bd85:	ret    
  41bd86:	iret   
  41bd87:	pop    bx
  41bd89:	ss hlt 
  41bd8b:	data16 adc dl,0x9c
  41bd8f:	jmp    0x9448d13
  41bd94:	adc    BYTE PTR [esi],0xa3
  41bd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd98:	je     0x41bdb4
  41bd9a:	ins    DWORD PTR es:[edi],dx
  41bd9b:	vpminsw xmm7,xmm6,XMMWORD PTR [eax+edx*8]
  41bda0:	aam    0x19
  41bda2:	clc    
  41bda3:	mov    ah,0x42
  41bda5:	das    
  41bda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda7:	in     eax,0x4e
  41bda9:	add    BYTE PTR [edx-0x35762da7],0x99
  41bdb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb1:	push   esi
  41bdb2:	or     ch,0xb6
  41bdb5:	retf   0xfa87
  41bdb8:	mov    edx,ebx
  41bdba:	je     0x41bd76
  41bdbc:	mov    esp,0x3da0d106
  41bdc1:	sub    ebp,DWORD PTR [ecx+0x5ed501fb]
  41bdc7:	test   BYTE PTR ds:0x6b2e8c97,bh
  41bdcd:	mov    DWORD PTR [esi],eax
  41bdcf:	(bad)  [ecx]
  41bdd1:	fimul  DWORD PTR [ebp+0x3c]
  41bdd4:	inc    ecx
  41bdd5:	xor    ecx,esi
  41bdd7:	out    dx,al
  41bdd8:	sub    cl,0x85
  41bddb:	icebp  
  41bddc:	xchg   ebx,eax
  41bddd:	gs mov dl,0x3
  41bde0:	mov    BYTE PTR [ebp+0x4a],dl
  41bde3:	cmp    DWORD PTR [ecx],ecx
  41bde5:	ret    
  41bde6:	in     al,0xcb
  41bde8:	test   eax,0xfde97985
  41bded:	jae    0x41be03
  41bdef:	repz retf 0xd7c2
  41bdf3:	pop    ecx
  41bdf4:	std    
  41bdf5:	push   ss
  41bdf6:	jno    0x41bd7a
  41bdf8:	in     al,0x72
  41bdfa:	mov    edx,0x684fa03b
  41bdff:	mov    bh,0x82
  41be01:	push   ecx
  41be02:	fwait
  41be03:	lock daa 
  41be05:	(bad)  
  41be06:	push   edi
  41be07:	xlat   BYTE PTR ds:[ebx]
  41be08:	push   ebp
  41be09:	lock mov DWORD PTR [edx],edx
  41be0c:	fist   DWORD PTR [edx*1-0x272c413f]
  41be13:	mov    eax,0xf5c39fea
  41be18:	iret   
  41be19:	sub    eax,0xbea339d9
  41be1e:	imul   eax,esi,0xfbf506cf
  41be24:	out    dx,eax
  41be25:	mov    edx,0x48b37ce6
  41be2a:	cli    
  41be2b:	out    0x92,eax
  41be2d:	stos   BYTE PTR es:[edi],al
  41be2e:	jno    0x41bddd
  41be30:	nop
  41be31:	ins    BYTE PTR es:[edi],dx
  41be32:	(bad)  
  41be33:	sbb    ebp,ebp
  41be35:	sub    ecx,DWORD PTR ds:0x3555679a
  41be3b:	mov    fs,WORD PTR [eax+0x414661bd]
  41be41:	psubq  mm4,QWORD PTR [di]
  41be45:	js     0x41be33
  41be47:	hlt    
  41be48:	repnz xchg edi,eax
  41be4a:	mov    ah,0xf3
  41be4c:	inc    BYTE PTR [ebx-0x56]
  41be4f:	pop    edx
  41be50:	push   cs
  41be51:	pop    edi
  41be52:	es ja  0x41be8a
  41be55:	mov    ebx,DWORD PTR [esp+edi*1+0x17adaee7]
  41be5c:	mov    dl,0x44
  41be5e:	mov    dl,0x5e
  41be60:	in     al,0x30
  41be62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be63:	(bad)  
  41be64:	shl    DWORD PTR [ebx-0x38],cl
  41be67:	cmp    BYTE PTR [ecx],0x9f
  41be6a:	adc    bl,0x90
  41be6d:	mov    ebx,0x92e442ef
  41be72:	jle    0x41be28
  41be74:	dec    ebp
  41be75:	pop    eax
  41be76:	push   esp
  41be77:	imul   ecx,DWORD PTR ds:[edx],0xc306ac81
  41be7e:	ss mov cl,0x6a
  41be81:	pusha  
  41be82:	or     edx,eax
  41be84:	call   0xd7f73df3
  41be89:	adc    eax,0x89f5b381
  41be8e:	push   ds
  41be8f:	push   ebp
  41be90:	jmp    0x9815:0xc8fec54d
  41be97:	inc    esi
  41be98:	mov    dl,0xb7
  41be9a:	addr16 pop esp
  41be9c:	sub    al,0x1c
  41be9e:	inc    edi
  41be9f:	xor    esi,ebx
  41bea1:	and    DWORD PTR [esp+ebx*4-0x26],edi
  41bea5:	jge    0x41be8b
  41bea7:	clc    
  41bea8:	(bad)  
  41bea9:	outs   dx,BYTE PTR ds:[esi]
  41beaa:	mov    bh,0xaa
  41beac:	inc    BYTE PTR [ebp+0x1e]
  41beaf:	sbb    DWORD PTR [ecx],ecx
  41beb1:	add    BYTE PTR [edx],dl
  41beb3:	(bad)
  41beb6:	fild   QWORD PTR [eax+0x7ce32ec3]
  41bebc:	imul   edx,DWORD PTR [esi-0x3b],0xffffff83
  41bec0:	jg     0x41bf15
  41bec2:	push   es
  41bec3:	push   edi
  41bec4:	pop    ss
  41bec5:	out    dx,eax
  41bec6:	shl    DWORD PTR [ebp+0x28744d1f],0x16
  41becd:	je     0x41bf47
  41becf:	mov    edx,0xc46feb43
  41bed4:	popf   
  41bed5:	or     eax,0x902511f9
  41beda:	in     al,dx
  41bedb:	scas   al,BYTE PTR es:[edi]
  41bedc:	xchg   BYTE PTR [edx+0x2f],bh
  41bedf:	repz mov eax,ds:0xa9236e1d
  41bee5:	(bad)  
  41bee6:	clc    
  41bee7:	sti    
  41bee8:	push   ss
  41bee9:	sbb    BYTE PTR [esi+0x2e],0x19
  41beed:	pusha  
  41beee:	das    
  41beef:	cmp    edi,DWORD PTR [ebx]
  41bef1:	jmp    0x543fa9a9
  41bef6:	mov    BYTE PTR [esi+0x7b308bd2],0xb
  41befd:	sti    
  41befe:	or     al,BYTE PTR [ebx-0xf6a4b25]
  41bf04:	xor    DWORD PTR fs:[ecx-0x2a],eax
  41bf08:	sbb    ch,bl
  41bf0a:	ins    DWORD PTR es:[edi],dx
  41bf0b:	dec    esp
  41bf0c:	loop   0x41bef5
  41bf0e:	xor    dh,BYTE PTR [ebx-0x1c]
  41bf11:	jnp    0x41be9c
  41bf13:	and    eax,0x618639e1
  41bf18:	das    
  41bf19:	adc    ch,cl
  41bf1b:	(bad)  
  41bf1c:	jne    0x41be9f
  41bf1e:	xchg   ebp,eax
  41bf1f:	(bad)  
  41bf20:	sbb    DWORD PTR [edx],esi
  41bf22:	and    DWORD PTR [ecx],edx
  41bf24:	and    DWORD PTR [ebp+ebp*4-0x8],ebx
  41bf28:	addr16 test dl,al
  41bf2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf2c:	push   edx
  41bf2d:	mov    al,0x75
  41bf2f:	popf   
  41bf30:	scas   eax,DWORD PTR es:[edi]
  41bf31:	mov    dl,al
  41bf33:	arpl   WORD PTR [ebp+0x42bded3],di
  41bf39:	and    eax,0xba2c676c
  41bf3e:	mov    ds:0x1848c3c0,eax
  41bf43:	pop    esi
  41bf44:	cmp    ebx,edx
  41bf46:	mov    ebp,0xdde27d10
  41bf4b:	mov    eax,0x7231318c
  41bf50:	push   0xffffffac
  41bf52:	jmp    0x2e70:0x9abad26
  41bf59:	icebp  
  41bf5a:	xchg   edx,eax
  41bf5b:	mov    eax,ds:0xc3cbffac
  41bf60:	jne    0x41bf29
  41bf62:	or     BYTE PTR [ebp-0x79],bl
  41bf65:	fisttp DWORD PTR [eax]
  41bf67:	inc    BYTE PTR [esp+eax*1]
  41bf6a:	or     ebp,edi
  41bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6d:	push   esi
  41bf6e:	data16 into 
  41bf70:	push   0x5
  41bf72:	mov    ds,ebp
  41bf74:	add    DWORD PTR [ebx+0x716fbb67],0xfe0fed00
  41bf7e:	and    al,0xd6
  41bf80:	test   al,0x1b
  41bf82:	clc    
  41bf83:	in     al,dx
  41bf84:	ja     0x41bf3e
  41bf86:	jnp    0x41bfaf
  41bf88:	pop    esi
  41bf89:	(bad)  
  41bf8a:	cmp    dl,al
  41bf8c:	mov    WORD PTR [ebx-0x55f54b2a],ss
  41bf92:	ins    BYTE PTR es:[edi],dx
  41bf93:	cmc    
  41bf94:	(bad)  
  41bf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf97:	ins    BYTE PTR es:[edi],dx
  41bf98:	not    DWORD PTR [ebx-0x41b0d7b1]
  41bf9e:	addr16 out dx,al
  41bfa0:	xchg   ecx,eax
  41bfa1:	jge    0x41bfea
  41bfa3:	(bad)  
  41bfa4:	pop    edi
  41bfa5:	mov    edi,0xa33f87a
  41bfaa:	sahf   
  41bfab:	xor    ebx,eax
  41bfad:	sbb    bl,dl
  41bfaf:	mov    cl,bh
  41bfb1:	outs   dx,DWORD PTR ds:[esi]
  41bfb2:	call   0x3f1d7251
  41bfb7:	or     eax,0x10159e6a
  41bfbc:	les    edx,FWORD PTR [esi+0x7bc557e8]
  41bfc2:	in     eax,dx
  41bfc3:	and    ah,dl
  41bfc5:	adc    DWORD PTR [ebx],esi
  41bfc7:	das    
  41bfc8:	bound  esp,QWORD PTR [ecx]
  41bfca:	push   ebp
  41bfcb:	or     al,al
  41bfcd:	pusha  
  41bfce:	mov    ds:0xf331b237,al
  41bfd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfd4:	push   esi
  41bfd5:	jg     0x41bfaf
  41bfd7:	outs   dx,BYTE PTR ds:[esi]
  41bfd8:	mov    DWORD PTR [edi+0x37],ebx
  41bfdb:	popf   
  41bfdc:	push   DWORD PTR [ecx+eax*1]
  41bfdf:	fnsave [esi-0x11a393e0]
  41bfe5:	or     cx,WORD PTR [edi+0x65823f78]
  41bfec:	jb     0x41c010
  41bfee:	popf   
  41bfef:	cld    
  41bff0:	jne    0x41c06d
  41bff2:	mov    dl,0xc2
  41bff4:	fwait
  41bff5:	jle    0x41c063
  41bff7:	cld    
  41bff8:	xchg   ebx,eax
  41bff9:	aas    
  41bffa:	inc    eax
  41bffb:	mov    eax,0xa0295170
  41c000:	pushf  
  41c001:	xlat   BYTE PTR ds:[ebx]
  41c002:	add    eax,0xe0235845
  41c007:	mov    eax,0xc6e8aa4
  41c00c:	and    bl,ah
  41c00e:	imul   eax,DWORD PTR [ecx+0x39],0x7d
  41c012:	jb     0x41bfe6
  41c014:	jae    0x41c01f
  41c016:	jnp    0x41c032
  41c018:	ds push ds
  41c01a:	iret   
  41c01b:	pusha  
  41c01c:	xor    ch,cl
  41c01e:	pop    eax
  41c01f:	pusha  
  41c020:	(bad)  
  41c021:	jp     0x41c076
  41c023:	mov    ah,0xaf
  41c025:	or     eax,0xa7beb1e7
  41c02a:	pop    ecx
  41c02b:	xor    cl,ah
  41c02d:	mov    ds:0xdd51d80c,eax
  41c032:	jnp    0x41bfb4
  41c034:	xor    ah,BYTE PTR [edi+esi*1]
  41c037:	push   ebx
  41c038:	jb     0x41bfda
  41c03a:	mov    eax,ds:0xa664733e
  41c03f:	dec    ebx
  41c040:	fild   DWORD PTR [ebx+0x12c09a71]
  41c046:	xor    al,0xc1
  41c048:	out    0xe0,eax
  41c04a:	std    
  41c04b:	jmp    0x45b3:0x6e82ba4f
  41c052:	sbb    DWORD PTR ds:0x2b72df07,edx
  41c058:	inc    edx
  41c059:	xlat   BYTE PTR ds:[ebx]
  41c05a:	or     ecx,DWORD PTR [edi*4+0x48fa2e00]
  41c061:	add    al,BYTE PTR [ecx]
  41c063:	sub    DWORD PTR [edi+0x18],ecx
  41c066:	cmp    eax,0xe89db077
  41c06b:	pop    edx
  41c06c:	sub    eax,0x64843823
  41c071:	cld    
  41c072:	cmp    esp,ebp
  41c074:	call   0x4e15:0x8e845592
  41c07b:	cmp    bl,bl
  41c07d:	mov    esi,ss
  41c07f:	ss daa 
  41c081:	ret    0xe632
  41c084:	ins    BYTE PTR es:[edi],dx
  41c085:	fndisi(8087 only) 
  41c087:	inc    esp
  41c088:	mov    eax,esi
  41c08a:	mov    ch,0x5f
  41c08c:	aam    0x1e
  41c08e:	shl    BYTE PTR [ecx],cl
  41c090:	(bad)  [edx-0x6d300951]
  41c096:	mov    cl,0x85
  41c098:	jnp    0x41c0f7
  41c09a:	ja     0x41c0f9
  41c09c:	sbb    eax,0x323aa631
  41c0a1:	ret    
  41c0a2:	cmp    al,0xcc
  41c0a4:	mov    ds:0x10ce291f,al
  41c0a9:	push   DWORD PTR [edx+0x11a9b4f9]
  41c0af:	js     0x41c031
  41c0b1:	fcomi  st,st(7)
  41c0b3:	jns    0x41c08e
  41c0b5:	popf   
  41c0b6:	inc    edi
  41c0b7:	adc    DWORD PTR [ebx+0x13],edx
  41c0ba:	es jge 0x41c05f
  41c0bd:	fisttp WORD PTR [edi]
  41c0bf:	test   al,0x2
  41c0c1:	xor    DWORD PTR [esi-0x4c3a7a6f],0xffffffd7
  41c0c8:	push   0xffffff92
  41c0ca:	and    al,BYTE PTR [ecx+0x3b74eabf]
  41c0d0:	ret    0x8d0
  41c0d3:	jl     0x41c0c2
  41c0d5:	lahf   
  41c0d6:	jno    0x41c0a0
  41c0d8:	stc    
  41c0d9:	fstp   TBYTE PTR ss:[esi]
  41c0dc:	mov    cl,0x68
  41c0de:	scas   al,BYTE PTR es:[edi]
  41c0df:	aad    0xe1
  41c0e1:	fimul  WORD PTR [eax]
  41c0e3:	sub    ah,BYTE PTR [ebx+0x6b]
  41c0e6:	mov    WORD PTR [edi+0x21f75468],ss
  41c0ec:	xor    ebp,edx
  41c0ee:	fiadd  WORD PTR [ecx+0x4e]
  41c0f1:	dec    ecx
  41c0f2:	je     0x41c0cf
  41c0f4:	mov    esp,0x3204574f
  41c0f9:	rcr    BYTE PTR [edi-0x6e4450b8],1
  41c0ff:	out    0x57,al
  41c101:	dec    ebp
  41c102:	in     eax,0xbb
  41c104:	xchg   DWORD PTR [esp+eax*1],ecx
  41c107:	cld    
  41c108:	mov    al,ds:0x543fe2d2
  41c10d:	push   cs
  41c10e:	bound  ebp,QWORD PTR [edi]
  41c110:	xchg   edi,eax
  41c111:	ror    eax,0x14
  41c114:	cmp    ecx,ebp
  41c116:	retf   0xb4b6
  41c119:	fild   WORD PTR [ecx+0x3325c2c2]
  41c11f:	sbb    esi,DWORD PTR [edx-0x2144001d]
  41c125:	add    esp,DWORD PTR [ebp+0x11]
  41c128:	gs pop eax
  41c12a:	dec    eax
  41c12b:	sub    DWORD PTR [esi-0x7e409da4],edx
  41c131:	jnp    0x41c194
  41c133:	cmp    ebp,edi
  41c135:	push   edi
  41c136:	mov    DWORD PTR [eax],esp
  41c138:	sub    BYTE PTR [edi+0x2ab28787],0xe5
  41c13f:	cs push eax
  41c141:	(bad)  
  41c142:	mov    al,0xf3
  41c144:	call   0xd175ce23
  41c149:	mov    bh,BYTE PTR [edi+0x55955017]
  41c14f:	std    
  41c150:	dec    ebp
  41c151:	loop   0x41c146
  41c153:	inc    edi
  41c154:	jae    0x41c1ba
  41c156:	push   ebx
  41c157:	arpl   WORD PTR [eax+esi*1],ax
  41c15a:	loop   0x41c16d
  41c15c:	pop    esp
  41c15d:	shr    ebx,0x2c
  41c160:	mov    ecx,0x5a22a737
  41c165:	jge    0x41c167
  41c167:	aaa    
  41c168:	push   edx
  41c169:	and    ecx,ecx
  41c16b:	sub    ebx,esp
  41c16d:	ret    0x6d70
  41c170:	popa   
  41c171:	cli    
  41c172:	dec    esp
  41c173:	sub    esp,esp
  41c175:	test   bl,al
  41c177:	sub    DWORD PTR [edi+0x25],ecx
  41c17a:	add    ecx,DWORD PTR [ecx+edx*4-0x6a]
  41c17e:	adc    ecx,ecx
  41c180:	push   esp
  41c181:	aaa    
  41c182:	mov    ds:0x233001d,eax
  41c187:	or     esp,ecx
  41c189:	into   
  41c18a:	jmp    0x3182:0xb05abf8b
  41c191:	adc    eax,0xf16f33c2
  41c196:	jns    0x41c172
  41c198:	pop    ebp
  41c199:	add    bl,BYTE PTR [eax]
  41c19b:	and    eax,DWORD PTR [ebx-0x34]
  41c19e:	cmp    BYTE PTR gs:[eax],dh
  41c1a1:	and    BYTE PTR [esi+ebp*1],al
  41c1a4:	inc    ebp
  41c1a5:	call   0x9b19:0x557e6b09
  41c1ac:	bound  esp,QWORD PTR [esi-0x9d94d23]
  41c1b2:	call   FWORD PTR [eax]
  41c1b4:	les    esp,FWORD PTR [ecx-0x73a3a262]
  41c1ba:	loopne 0x41c20c
  41c1bc:	xor    eax,DWORD PTR [eax+0x23]
  41c1bf:	sub    eax,0xd17d54d9
  41c1c4:	sub    BYTE PTR [esi+0x65],0x9f
  41c1c8:	cmp    eax,0x1d8d5240
  41c1cd:	jp     0x41c23b
  41c1cf:	mov    ebp,0x393a34b9
  41c1d4:	fcmovnbe st,st(5)
  41c1d6:	sub    ecx,eax
  41c1d8:	(bad)  
  41c1d9:	dec    ebx
  41c1da:	pop    esi
  41c1db:	pop    esp
  41c1dc:	iret   
  41c1dd:	les    esi,FWORD PTR [eax*4-0x39ffa2cc]
  41c1e4:	in     al,0x1
  41c1e6:	push   ds
  41c1e7:	daa    
  41c1e8:	in     eax,0x35
  41c1ea:	inc    eax
  41c1eb:	inc    ecx
  41c1ec:	lock retf 
  41c1ee:	mov    ebp,0x515add6f
  41c1f3:	jns    0x41c241
  41c1f5:	add    edx,DWORD PTR [eax-0x54]
  41c1f8:	pop    esp
  41c1f9:	push   ds
  41c1fa:	sbb    eax,DWORD PTR [ecx]
  41c1fc:	inc    ecx
  41c1fd:	sbb    ch,BYTE PTR [ebp-0x5b]
  41c200:	jno    0x41c262
  41c202:	cmp    ebx,DWORD PTR [ecx]
  41c204:	push   cs
  41c205:	retf   0x7d8b
  41c208:	cwde   
  41c209:	stos   DWORD PTR es:[edi],eax
  41c20a:	fwait
  41c20b:	(bad)  
  41c20c:	adc    al,0xbe
  41c20e:	sub    BYTE PTR [ebx],dl
  41c210:	xor    ebp,esp
  41c212:	cli    
  41c213:	cli    
  41c214:	push   DWORD PTR [esi+0x1b]
  41c217:	jns    0x41c244
  41c219:	mov    DWORD PTR [ebp+0x2e],eax
  41c21c:	pop    eax
  41c21d:	loope  0x41c1f4
  41c21f:	lods   al,BYTE PTR ds:[esi]
  41c220:	push   ebx
  41c221:	ds ss in al,0xf9
  41c225:	dec    ecx
  41c226:	add    BYTE PTR [esp+ebp*4+0x15],0x78
  41c22b:	mov    WORD PTR [ebp+0x5db879c1],fs
  41c231:	outs   dx,BYTE PTR ds:[esi]
  41c232:	dec    esi
  41c233:	push   edi
  41c234:	(bad)  
  41c235:	daa    
  41c236:	addr16 (bad) 
  41c238:	push   cs
  41c239:	sub    DWORD PTR ds:0x202401a1,ecx
  41c23f:	mov    ebp,0x922e6e9
  41c244:	shr    DWORD PTR [esi],cl
  41c246:	je     0x41c232
  41c248:	in     eax,dx
  41c249:	xor    DWORD PTR [edx-0x7c],ecx
  41c24c:	idiv   BYTE PTR [esi+0x4d]
  41c24f:	push   ds
  41c250:	inc    ebp
  41c251:	xor    bh,BYTE PTR [ecx+eiz*1]
  41c254:	loopne 0x41c28f
  41c256:	lods   al,BYTE PTR ds:[esi]
  41c257:	xor    al,0x2f
  41c259:	xchg   dl,bh
  41c25b:	cmp    al,0xe1
  41c25d:	jne    0x41c228
  41c25f:	es cmp ch,bl
  41c262:	stos   DWORD PTR es:[edi],eax
  41c263:	push   cs
  41c264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c265:	jbe    0x41c288
  41c267:	xchg   BYTE PTR [ebp+0x45],ah
  41c26a:	xor    al,0xb1
  41c26c:	repnz hlt 
  41c26e:	jne    0x41c27e
  41c270:	jg     0x41c222
  41c272:	in     al,0x3b
  41c274:	push   ebp
  41c275:	push   cs
  41c276:	xchg   edx,eax
  41c277:	and    cl,BYTE PTR [ebp+0x31]
  41c27a:	mov    ebp,DWORD PTR [edx]
  41c27c:	js     0x41c26a
  41c27e:	je     0x41c2cd
  41c280:	test   BYTE PTR [esi],bh
  41c282:	out    0x48,eax
  41c284:	mov    ds:0x869e8cf2,eax
  41c289:	mov    edx,0x3e252eb5
  41c28e:	daa    
  41c28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c290:	jae    0x41c214
  41c292:	sub    BYTE PTR [ebp+esi*4-0x289b1240],ch
  41c299:	mov    ch,0x1a
  41c29b:	add    edx,ebx
  41c29d:	cld    
  41c29e:	sahf   
  41c29f:	not    bl
  41c2a1:	push   0xffffffea
  41c2a3:	inc    esp
  41c2a4:	jae    0x41c28f
  41c2a6:	add    DWORD PTR [ebp-0x3e47ea39],ebx
  41c2ac:	int    0x7
  41c2ae:	pushf  
  41c2af:	adc    BYTE PTR [edi],al
  41c2b1:	jmp    0xc9da:0x19d6f8ab
  41c2b8:	cs ret 
  41c2ba:	addr16 in eax,0xda
  41c2bd:	mov    ebx,DWORD PTR [esi+0x29]
  41c2c0:	add    eax,0xa17ec606
  41c2c5:	inc    edx
  41c2c6:	leave  
  41c2c7:	and    esi,DWORD PTR [ebx+0x1e2c280f]
  41c2cd:	pusha  
  41c2ce:	mov    esi,0xd384a414
  41c2d3:	scas   al,BYTE PTR es:[edi]
  41c2d4:	push   ecx
  41c2d5:	leave  
  41c2d6:	inc    ebp
  41c2d7:	push   edi
  41c2d8:	sbb    al,BYTE PTR [ecx-0xa]
  41c2db:	sbb    esp,DWORD PTR [ebx]
  41c2dd:	pop    edx
  41c2de:	jg     0x41c2fb
  41c2e0:	push   es
  41c2e1:	cmp    eax,DWORD PTR [ecx]
  41c2e3:	lahf   
  41c2e4:	jne    0x41c2ee
  41c2e6:	sub    ebx,DWORD PTR [edi]
  41c2e8:	ror    BYTE PTR [esi],0x26
  41c2eb:	or     BYTE PTR [ecx],ch
  41c2ed:	mov    es,WORD PTR [edi-0x7f990fd4]
  41c2f3:	ror    BYTE PTR [eax],cl
  41c2f5:	dec    esi
  41c2f6:	lods   eax,DWORD PTR ds:[esi]
  41c2f7:	imul   edi,DWORD PTR [edx-0x69e8209f],0x5f7f1a24
  41c301:	pop    ds
  41c302:	and    DWORD PTR [edi],eax
  41c304:	jp     0x41c2e9
  41c306:	sub    cl,BYTE PTR [ebx+0x38ec1bbe]
  41c30c:	ret    
  41c30d:	cld    
  41c30e:	mov    al,0xd6
  41c310:	mov    ch,0x7e
  41c312:	xor    al,0xce
  41c314:	mov    edx,0x98aea9f4
  41c319:	popf   
  41c31a:	call   0x62c4:0xb6b75d14
  41c321:	mov    ds:0xec105335,eax
  41c326:	mov    bh,0xfd
  41c328:	mov    ecx,0x82a7f8af
  41c32d:	sahf   
  41c32e:	fstp   QWORD PTR [edi+0x7ce9f324]
  41c334:	cmp    DWORD PTR [edi+ebp*4+0x7ee80953],esp
  41c33b:	xchg   ebx,eax
  41c33c:	xor    bl,BYTE PTR [ecx]
  41c33e:	fsub   QWORD PTR [ebp+0xe]
  41c341:	outs   dx,DWORD PTR ds:[esi]
  41c342:	out    dx,al
  41c343:	sti    
  41c344:	add    al,0x4
  41c346:	es dec edi
  41c348:	call   0x12cf:0x42726be
  41c34f:	loope  0x41c37c
  41c351:	out    0x59,al
  41c353:	retf   0x1410
  41c356:	xor    cl,cl
  41c358:	push   eax
  41c359:	inc    ebp
  41c35a:	popf   
  41c35b:	jb     0x41c302
  41c35d:	xor    eax,0x8777e45a
  41c362:	pop    es
  41c363:	sbb    eax,0x7b0633c0
  41c368:	pop    es
  41c369:	pop    ebx
  41c36a:	mov    dh,0x91
  41c36c:	lds    ebx,FWORD PTR [ebx+0x5178a5a1]
  41c372:	adc    ebp,0xffffff8a
  41c375:	cwde   
  41c376:	out    dx,eax
  41c377:	inc    edx
  41c378:	sbb    bl,al
  41c37a:	push   edi
  41c37b:	sbb    eax,0x4f554d9e
  41c380:	jbe    0x41c323
  41c382:	fcomip st,st(1)
  41c384:	cmp    eax,0xe57951d0
  41c389:	ins    BYTE PTR es:[edi],dx
  41c38a:	mov    ebp,0x6c5caef0
  41c38f:	jb     0x41c3d0
  41c391:	es pop edx
  41c393:	enter  0x87f,0xc9
  41c397:	sub    eax,0xf91e320e
  41c39c:	das    
  41c39d:	push   DWORD PTR [ecx]
  41c39f:	jg     0x41c3c0
  41c3a1:	jge    0x41c3f1
  41c3a3:	jge    0x41c353
  41c3a5:	dec    edx
  41c3a6:	scas   eax,DWORD PTR es:[edi]
  41c3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a8:	pop    es
  41c3a9:	cwde   
  41c3aa:	iret   
  41c3ab:	popf   
  41c3ac:	mov    bl,0x7
  41c3ae:	jae    0x41c426
  41c3b0:	or     eax,0xe8154b58
  41c3b5:	out    dx,al
  41c3b6:	out    dx,al
  41c3b7:	xor    BYTE PTR ss:[esi],0x44
  41c3bb:	pop    ecx
  41c3bc:	cmp    BYTE PTR [esi],al
  41c3be:	aas    
  41c3bf:	xlat   BYTE PTR ds:[ebx]
  41c3c0:	outs   dx,BYTE PTR ds:[esi]
  41c3c1:	sub    eax,0x587b375c
  41c3c6:	pop    esp
  41c3c7:	sbb    ebx,esp
  41c3c9:	xchg   ebx,eax
  41c3ca:	outs   dx,BYTE PTR ds:[esi]
  41c3cb:	ds xchg ebp,eax
  41c3cd:	and    al,0x1b
  41c3cf:	or     BYTE PTR [edx+0x5d712ee7],dl
  41c3d5:	mov    DWORD PTR [ecx*4-0x6c7d6ad1],ebp
  41c3dc:	jmp    0x3eca4b11
  41c3e1:	push   0xffffffb7
  41c3e3:	sbb    ch,al
  41c3e5:	sbb    DWORD PTR [edi-0x378f4615],edx
  41c3eb:	add    BYTE PTR [ebp-0x25],bh
  41c3ee:	inc    edi
  41c3ef:	jg     0x41c3d2
  41c3f1:	ins    DWORD PTR es:[edi],dx
  41c3f2:	dec    ebx
  41c3f3:	mov    al,ds:0xbf9927c
  41c3f8:	push   esi
  41c3f9:	pop    ebp
  41c3fa:	pop    esp
  41c3fb:	ret    
  41c3fc:	ret    
  41c3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ff:	sub    al,0x45
  41c401:	jg     0x41c38d
  41c403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c404:	mov    cl,0xed
  41c406:	icebp  
  41c407:	inc    esi
  41c408:	or     al,BYTE PTR [esi+0xbd982e0]
  41c40e:	xor    DWORD PTR [edx+0x2e],eax
  41c411:	popa   
  41c412:	sbb    eax,0xb619db2a
  41c417:	push   esi
  41c418:	(bad)  
  41c419:	mov    WORD PTR [ebx+0x68],fs
  41c41c:	mov    cl,BYTE PTR [ebx+ebx*4]
  41c41f:	outs   dx,DWORD PTR ds:[esi]
  41c420:	pop    ecx
  41c421:	imul   edi,DWORD PTR [edi+0x1f],0xffffffba
  41c425:	push   cs
  41c426:	sbb    esp,DWORD PTR [ebp-0x142a5392]
  41c42c:	test   BYTE PTR [ebx],cl
  41c42e:	dec    ebx
  41c42f:	xchg   ebp,eax
  41c430:	jge    0x41c3b6
  41c432:	popa   
  41c433:	fmul   st(0),st
  41c435:	mul    dh
  41c437:	rcl    DWORD PTR [edx],cl
  41c439:	dec    esi
  41c43a:	jle    0x41c3d9
  41c43c:	inc    esi
  41c43d:	inc    eax
  41c43e:	test   eax,0xaf6bc1c7
  41c443:	jno    0x41c42d
  41c445:	stos   BYTE PTR es:[edi],al
  41c446:	jns    0x41c473
  41c448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c449:	pop    edi
  41c44a:	jne    0x41c3ef
  41c44c:	jb     0x587b5dcc
  41c452:	fst    QWORD PTR ds:0xf2d6b721
  41c458:	(bad)  
  41c45a:	ficom  DWORD PTR [ecx-0x2e]
  41c45d:	jmp    0xfbe77493
  41c462:	adc    al,0xe6
  41c464:	sub    DWORD PTR [edi],0xffffffb8
  41c467:	add    al,0xb3
  41c469:	call   0x7ef6eddf
  41c46e:	mov    ecx,0xe64c33e5
  41c473:	sbb    al,BYTE PTR [eax]
  41c475:	addr16 icebp 
  41c477:	sti    
  41c478:	push   ecx
  41c479:	rol    BYTE PTR [eax+0x6c006f85],cl
  41c47f:	fwait
  41c480:	mov    edx,0x1d450e1c
  41c485:	imul   edx,DWORD PTR [esi+0x2c],0x2988a894
  41c48c:	ret    0xae33
  41c48f:	imul   ch
  41c491:	jbe    0x41c48e
  41c493:	call   DWORD PTR [ecx+0x25]
  41c496:	mov    edx,0x585bf777
  41c49b:	mov    WORD PTR [eax-0x27],ds
  41c49e:	test   eax,0x98c29e86
  41c4a3:	sbb    al,0x4c
  41c4a5:	(bad)  
  41c4a6:	sbb    ebp,DWORD PTR [edx]
  41c4a8:	leave  
  41c4a9:	(bad)  
  41c4aa:	push   edx
  41c4ab:	sbb    al,0xcf
  41c4ad:	or     BYTE PTR [edx],0x1
  41c4b0:	inc    esp
  41c4b1:	and    ecx,DWORD PTR ds:0xeec0e8fd
  41c4b7:	std    
  41c4b8:	sub    eax,0xeac5fea6
  41c4bd:	adc    ebp,eax
  41c4bf:	xor    cl,BYTE PTR [ecx-0x6888a254]
  41c4c5:	sub    al,0xcb
  41c4c7:	or     eax,0xac479940
  41c4cc:	mov    gs,WORD PTR [eax+ebx*2]
  41c4cf:	sub    dl,BYTE PTR [ebp+0x68]
  41c4d2:	mov    BYTE PTR [edi+0x17],bl
  41c4d5:	add    DWORD PTR [esi-0x7d4c466b],ebp
  41c4db:	mov    ah,0xd7
  41c4dd:	out    0x2e,al
  41c4df:	cmc    
  41c4e0:	rcr    DWORD PTR [edi+ebp*1+0x45],0x7a
  41c4e5:	and    eax,0x4e53f188
  41c4ea:	cwde   
  41c4eb:	lods   eax,DWORD PTR ds:[esi]
  41c4ec:	dec    ebx
  41c4ed:	cmp    al,0xef
  41c4ef:	aaa    
  41c4f0:	scas   eax,DWORD PTR es:[edi]
  41c4f1:	lods   eax,DWORD PTR ds:[esi]
  41c4f2:	jge    0x41c562
  41c4f4:	jbe    0x41c52e
  41c4f6:	ret    0x7ce
  41c4f9:	cmp    DWORD PTR ds:0x60ac210e,0xffffffdf
  41c500:	call   0x2974b201
  41c505:	mov    dh,0x6f
  41c507:	into   
  41c508:	inc    ebx
  41c509:	popf   
  41c50a:	mov    cl,0xa3
  41c50c:	mov    WORD PTR [ecx],gs
  41c50e:	cs (bad) 
  41c510:	mov    bl,0xe7
  41c512:	inc    ebx
  41c513:	mov    dh,0xb6
  41c515:	idiv   DWORD PTR [esi-0x34]
  41c518:	aas    
  41c519:	add    dh,dl
  41c51b:	fidivr DWORD PTR [ecx]
  41c51d:	add    al,0xb2
  41c51f:	pop    esp
  41c520:	ss push cs
  41c522:	xchg   ebp,esp
  41c524:	rcl    DWORD PTR [esi+0xe555fc0],cl
  41c52a:	dec    eax
  41c52b:	jae    0x41c513
  41c52d:	and    al,0xb0
  41c52f:	iret   
  41c530:	test   BYTE PTR [esi],0xe8
  41c533:	lods   eax,DWORD PTR ds:[esi]
  41c534:	mov    al,0x9f
  41c536:	into   
  41c537:	in     al,0x7d
  41c539:	add    BYTE PTR [esi],bh
  41c53b:	nop
  41c53c:	dec    esi
  41c53d:	les    esp,FWORD PTR [edi+0x4ad539bb]
  41c543:	mov    bl,0x44
  41c545:	sti    
  41c546:	lods   eax,DWORD PTR ds:[esi]
  41c547:	pop    edx
  41c548:	(bad)  
  41c549:	mov    eax,0x277875dc
  41c54e:	adc    bl,bh
  41c550:	shl    DWORD PTR [ecx+ebp*4-0x70],cl
  41c554:	fs pushf 
  41c556:	mov    bl,BYTE PTR [esi+0x42]
  41c559:	das    
  41c55a:	sbb    al,0x4d
  41c55c:	mov    ds,esp
  41c55e:	int3   
  41c55f:	pusha  
  41c560:	out    0x44,al
  41c562:	or     DWORD PTR [ebx],esi
  41c564:	xchg   DWORD PTR [ecx+ecx*1-0x4e51c14c],ebx
  41c56b:	and    eax,0xa8e4c299
  41c570:	retf   
  41c571:	and    esi,DWORD PTR [ebx]
  41c573:	imul   esi,DWORD PTR [eax+0x78],0x2c
  41c577:	fld    QWORD PTR [ebp-0x8046c6e]
  41c57d:	aaa    
  41c57e:	pop    ds
  41c57f:	add    esp,DWORD PTR [edx]
  41c581:	xlat   BYTE PTR ds:[ebx]
  41c582:	repz push esi
  41c584:	sbb    al,0xda
  41c586:	test   BYTE PTR [ebp+0x5e],dl
  41c589:	mov    BYTE PTR ds:0xdbdde736,dl
  41c58f:	add    eax,ebx
  41c591:	mov    al,0xe7
  41c593:	fisttp WORD PTR [edx-0x321fa04b]
  41c599:	jl     0x41c55a
  41c59b:	sbb    BYTE PTR [ecx],dl
  41c59d:	cmp    al,0x34
  41c59f:	push   eax
  41c5a0:	mov    eax,ds:0x78be2826
  41c5a5:	(bad)  
  41c5a6:	(bad)  
  41c5a7:	icebp  
  41c5a8:	mov    ecx,0xcfdd2a67
  41c5ad:	fmul   QWORD PTR ds:0xee8d6a8
  41c5b3:	mov    ebp,0x6e9a1248
  41c5b8:	cwde   
  41c5b9:	push   esp
  41c5ba:	(bad)  [eax+0x48]
  41c5bd:	jmp    0x41c5b3
  41c5bf:	or     al,0x62
  41c5c1:	dec    ebx
  41c5c2:	dec    ecx
  41c5c3:	scas   al,BYTE PTR es:[edi]
  41c5c4:	mov    ah,0x19
  41c5c6:	stc    
  41c5c7:	inc    edi
  41c5c8:	jle    0x41c618
  41c5ca:	mov    al,0xc2
  41c5cc:	into   
  41c5cd:	dec    edx
  41c5ce:	xor    BYTE PTR [edi+0x12],dh
  41c5d1:	push   cs
  41c5d2:	adc    al,0x9c
  41c5d4:	inc    ebp
  41c5d5:	adc    esp,esp
  41c5d7:	lods   eax,DWORD PTR ds:[esi]
  41c5d8:	icebp  
  41c5d9:	(bad)  
  41c5db:	sti    
  41c5dc:	push   edx
  41c5dd:	xor    al,0xde
  41c5df:	jecxz  0x41c5a6
  41c5e1:	(bad)  
  41c5e2:	cld    
  41c5e3:	ja     0x41c634
  41c5e5:	and    DWORD PTR [ebx-0x66],edx
  41c5e8:	icebp  
  41c5e9:	pusha  
  41c5ea:	cld    
  41c5eb:	sbb    DWORD PTR [ecx+0x13a6a270],edi
  41c5f1:	push   esp
  41c5f2:	lea    esi,[esi-0x69]
  41c5f5:	or     DWORD PTR [edx-0x5a853b3c],esi
  41c5fb:	mov    dh,0xa8
  41c5fd:	dec    ebx
  41c5fe:	jecxz  0x41c5ab
  41c600:	das    
  41c601:	ins    DWORD PTR es:[edi],dx
  41c602:	inc    ebx
  41c603:	and    al,0x1a
  41c605:	(bad)  
  41c606:	push   esi
  41c607:	into   
  41c608:	or     ebx,DWORD PTR [esi+0x6f2c6b35]
  41c60e:	sub    DWORD PTR [edx+0x78],esp
  41c611:	add    al,0xbd
  41c613:	into   
  41c614:	fwait
  41c615:	mov    DWORD PTR [eax+0x46b2103d],esp
  41c61b:	or     BYTE PTR [esi],al
  41c61d:	pop    es
  41c61e:	cmp    bl,BYTE PTR [ebx]
  41c620:	imul   edi,DWORD PTR [ebp-0x70ac2935],0x8575424d
  41c62a:	jle    0x41c5e7
  41c62c:	mov    BYTE PTR [edx],dh
  41c62e:	icebp  
  41c62f:	add    DWORD PTR [ecx-0x5c],0x45d21c73
  41c636:	cmc    
  41c637:	mov    esi,0x70befbe8
  41c63c:	fdivr  st,st(1)
  41c63e:	mov    ch,0xd
  41c640:	pop    ebp
  41c641:	jle    0x41c690
  41c643:	fsubr  DWORD PTR [esi-0x4117d267]
  41c649:	shr    BYTE PTR [edi+esi*2],cl
  41c64c:	dec    edx
  41c64d:	adc    al,0x13
  41c64f:	cmp    eax,0x8590221c
  41c654:	xchg   esi,eax
  41c655:	cmp    ch,BYTE PTR [ecx+0x1ce736da]
  41c65b:	mov    dh,0xac
  41c65d:	int    0xb1
  41c65f:	adc    ah,BYTE PTR [ebx]
  41c661:	scas   eax,DWORD PTR es:[edi]
  41c662:	mov    bh,0x7b
  41c664:	cwde   
  41c665:	test   eax,0x81117efd
  41c66a:	repz mov ds:0x7763e7e4,eax
  41c670:	or     esi,esi
  41c672:	nop
  41c673:	add    ebx,DWORD PTR [edi]
  41c675:	cmp    DWORD PTR [ebx],0x50bafab8
  41c67b:	dec    eax
  41c67c:	dec    eax
  41c67d:	into   
  41c67e:	and    BYTE PTR [eax+eiz*4-0x5f4181d1],dh
  41c685:	mov    esp,0x890499e9
  41c68a:	inc    edx
  41c68b:	mov    ah,0x22
  41c68d:	jnp    0x41c644
  41c68f:	sub    BYTE PTR [ebx+0x3c],bl
  41c692:	pop    es
  41c693:	or     ah,dl
  41c695:	adc    eax,0xc208f7b0
  41c69a:	push   edx
  41c69b:	cli    
  41c69c:	fnstsw WORD PTR [ebp+0x6e]
  41c69f:	out    0xb2,eax
  41c6a1:	daa    
  41c6a2:	sbb    eax,0xdb77d09d
  41c6a7:	imul   DWORD PTR [eax+0x65902c65]
  41c6ad:	adc    cl,bl
  41c6af:	lock jo 0x41c710
  41c6b2:	aam    0xaf
  41c6b4:	stos   BYTE PTR es:[edi],al
  41c6b5:	xor    BYTE PTR [edi+ecx*4],al
  41c6b8:	pusha  
  41c6b9:	test   al,0xd5
  41c6bb:	loope  0x41c6ad
  41c6bd:	inc    esp
  41c6be:	jecxz  0x41c6c6
  41c6c0:	push   esi
  41c6c1:	sbb    dh,dl
  41c6c3:	pop    es
  41c6c4:	dec    ebx
  41c6c5:	mov    dl,0xd4
  41c6c7:	jnp    0x41c6f7
  41c6c9:	cmp    bh,BYTE PTR [ebx]
  41c6cb:	pop    ebp
  41c6cc:	adc    BYTE PTR [eax],ah
  41c6ce:	push   ebp
  41c6cf:	push   esi
  41c6d0:	lea    edi,[edi]
  41c6d2:	clc    
  41c6d3:	xchg   ecx,eax
  41c6d4:	mov    edx,0x54ca95dd
  41c6d9:	imul   ebp,DWORD PTR [eax],0x6
  41c6dc:	push   ss
  41c6dd:	mov    esp,0x4af6c10
  41c6e2:	push   ebx
  41c6e3:	cmp    ebp,0xfffffffc
  41c6e6:	sub    eax,0x9b381c69
  41c6eb:	popa   
  41c6ec:	(bad)  
  41c6ed:	push   ebx
  41c6ee:	xor    BYTE PTR [edx-0x6],al
  41c6f1:	pop    eax
  41c6f2:	xchg   ebp,eax
  41c6f3:	ins    BYTE PTR es:[edi],dx
  41c6f4:	adc    DWORD PTR [edx],eax
  41c6f6:	pop    ds
  41c6f7:	push   cs
  41c6f8:	jmp    0xb168b3d4
  41c6fd:	in     eax,0x9b
  41c6ff:	or     al,BYTE PTR [eax]
  41c701:	cmp    ebx,DWORD PTR [edi]
  41c703:	popa   
  41c704:	std    
  41c705:	xor    dl,bh
  41c707:	sub    BYTE PTR [edx+ebx*1-0xa],bh
  41c70b:	mov    WORD PTR [ebp-0x34],?
  41c70e:	dec    edx
  41c70f:	js     0x41c6b2
  41c711:	pop    fs
  41c713:	in     al,dx
  41c714:	nop
  41c715:	cdq    
  41c716:	retf   
  41c717:	sbb    esp,DWORD PTR [ecx]
  41c719:	lods   al,BYTE PTR ds:[esi]
  41c71a:	inc    ecx
  41c71b:	rcl    DWORD PTR [eax],1
  41c71d:	jg     0x41c6ff
  41c71f:	shl    BYTE PTR [ebx-0x5528c94d],0xc7
  41c726:	mov    ebx,0xe7e9ca62
  41c72b:	fdivr  QWORD PTR [ebx]
  41c72d:	dec    eax
  41c72e:	pop    edx
  41c72f:	iret   
  41c730:	mov    dh,0xf0
  41c732:	push   ecx
  41c733:	pusha  
  41c734:	mov    ecx,0x28db4388
  41c739:	push   ebx
  41c73a:	sahf   
  41c73b:	xchg   edi,eax
  41c73c:	mov    ah,0xe7
  41c73e:	shl    bh,0x9e
  41c741:	inc    BYTE PTR [eax-0x3]
  41c744:	loope  0x41c7c5
  41c746:	fcomp  DWORD PTR [edx-0x364d167d]
  41c74c:	repnz test eax,0xee8946bc
  41c752:	cmp    ebp,ebp
  41c754:	pop    esi
  41c755:	cmp    al,0x99
  41c757:	std    
  41c758:	daa    
  41c759:	dec    esp
  41c75a:	stos   DWORD PTR es:[edi],eax
  41c75b:	cmp    ch,BYTE PTR [eax+0x71]
  41c75e:	push   es
  41c75f:	shl    DWORD PTR [ebx+0x8ec6fb3],0x5
  41c766:	leave  
  41c767:	shl    DWORD PTR [ebx-0x6e],0xfd
  41c76b:	cs xchg ebp,eax
  41c76d:	into   
  41c76e:	xor    cl,BYTE PTR [edx+0x2b5c322]
  41c774:	iret   
  41c775:	retf   
  41c776:	dec    edi
  41c777:	int3   
  41c778:	shr    ebx,1
  41c77a:	mov    cl,0x8d
  41c77c:	jae    0x41c7ad
  41c77e:	mov    BYTE PTR [ebx+0x4d],cl
  41c781:	pop    ebx
  41c782:	mov    al,ds:0xbef38cf
  41c787:	inc    eax
  41c788:	jne    0x41c791
  41c78a:	cwde   
  41c78b:	xor    DWORD PTR [edi+0x49],edi
  41c78e:	nop
  41c78f:	mov    ebx,0xf47cf1c5
  41c794:	pushf  
  41c795:	femms  
  41c797:	pop    edi
  41c798:	mov    BYTE PTR [ebx],ah
  41c79a:	xor    esi,DWORD PTR [esi-0x260505cc]
  41c7a0:	mov    esp,0x85f5a9b6
  41c7a5:	bound  esp,QWORD PTR [ecx+0x26]
  41c7a8:	(bad)
  41c7ab:	dec    esp
  41c7ac:	push   0xffffffe8
  41c7ae:	jge    0x41c73f
  41c7b0:	stos   BYTE PTR es:[edi],al
  41c7b1:	fcom   QWORD PTR ds:0x4a9c0b9d
  41c7b7:	pop    ecx
  41c7b8:	or     DWORD PTR [edi-0x3f],esi
  41c7bb:	gs scas al,BYTE PTR es:[edi]
  41c7bd:	inc    esi
  41c7be:	lods   eax,DWORD PTR ds:[esi]
  41c7bf:	xor    DWORD PTR [ecx+ebx*2+0x4287a833],esp
  41c7c6:	pop    DWORD PTR [esi+ebp*1]
  41c7c9:	sbb    eax,0xa11a4f83
  41c7ce:	pop    ds
  41c7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7d0:	lea    edi,[edx+0x58005337]
  41c7d6:	stos   DWORD PTR es:[edi],eax
  41c7d7:	add    dl,BYTE PTR [ebx+0x29d8573c]
  41c7dd:	lods   eax,DWORD PTR ds:[esi]
  41c7de:	loopne 0x41c7bf
  41c7e0:	pop    ss
  41c7e1:	iret   
  41c7e2:	and    al,0x2e
  41c7e4:	adc    DWORD PTR [ecx+eiz*8-0x5222e050],eax
  41c7eb:	mov    ebp,0xd03f109e
  41c7f0:	into   
  41c7f1:	mov    ds,WORD PTR [ecx-0x13]
  41c7f4:	dec    ebp
  41c7f5:	mov    bl,BYTE PTR [eax+0x36fde747]
  41c7fb:	retf   
  41c7fc:	jmp    0x41c799
  41c7fe:	xchg   esi,eax
  41c7ff:	pop    ds
  41c800:	pop    ds
  41c801:	or     bl,BYTE PTR fs:[ecx]
  41c804:	enter  0x17cf,0xb
  41c808:	rcl    BYTE PTR [edx+0x3a],cl
  41c80b:	jns    0x41c869
  41c80d:	fldcw  WORD PTR [eax]
  41c80f:	out    0x96,eax
  41c811:	pop    esp
  41c812:	dec    eax
  41c813:	or     BYTE PTR [ecx],bh
  41c815:	jo     0x41c889
  41c817:	xor    al,0x3e
  41c819:	aaa    
  41c81a:	pusha  
  41c81b:	ins    BYTE PTR es:[edi],dx
  41c81c:	daa    
  41c81d:	in     al,dx
  41c81e:	or     BYTE PTR ds:0x3cda6c46,ah
  41c824:	loopne 0x41c893
  41c826:	stos   DWORD PTR es:[edi],eax
  41c827:	cmp    DWORD PTR [ecx],ebx
  41c829:	push   0xffffffaa
  41c82b:	mov    ch,0x36
  41c82d:	repnz fbld TBYTE PTR [esi+ebp*1-0x1f05aaf3]
  41c835:	xchg   edi,eax
  41c836:	jns    0x41c7f9
  41c838:	outs   dx,BYTE PTR ds:[esi]
  41c839:	mov    al,ds:0xf6beb66f
  41c83e:	fst    DWORD PTR [edx]
  41c840:	or     esi,DWORD PTR [esi+eax*1-0xdc001cf]
  41c847:	dec    ecx
  41c848:	cmp    eax,0xf9eb5c04
  41c84d:	shl    BYTE PTR [edx+0x70c14394],0xef
  41c854:	push   0xffffffa2
  41c856:	loopne 0x41c7ec
  41c858:	xor    DWORD PTR [edx+0x16],edi
  41c85b:	femms  
  41c85d:	inc    ebp
  41c85e:	pop    ebp
  41c85f:	gs out 0x77,eax
  41c862:	mov    cx,0xaeb9
  41c866:	pop    edi
  41c867:	add    BYTE PTR [eax+0x78],bl
  41c86a:	push   es
  41c86b:	out    dx,eax
  41c86c:	inc    eax
  41c86d:	sbb    ecx,DWORD PTR [ecx-0x5b]
  41c870:	imul   ebp,edx,0xb79a4343
  41c876:	popa   
  41c877:	xor    al,0x50
  41c879:	cmp    edi,DWORD PTR [edx+0xb]
  41c87c:	mov    ds:0x5dada4d,al
  41c881:	sbb    DWORD PTR [edx+eiz*2],ebp
  41c884:	sub    eax,0x25c34cda
  41c889:	jbe    0x41c8b6
  41c88b:	test   al,cl
  41c88d:	pop    eax
  41c88e:	jbe    0x41c900
  41c890:	pop    es
  41c891:	push   ebx
  41c892:	(bad)  
  41c894:	hlt    
  41c895:	jb     0x41c90f
  41c897:	mov    bh,0x65
  41c899:	xor    dh,BYTE PTR [edx]
  41c89b:	jl     0x41c8cd
  41c89d:	jmp    0x41c859
  41c89f:	and    DWORD PTR [esi-0x5ea92fed],ecx
  41c8a5:	scas   al,BYTE PTR es:[edi]
  41c8a6:	pop    ebp
  41c8a8:	mov    esi,0x6261aef0
  41c8ad:	into   
  41c8ae:	push   edx
  41c8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b0:	xchg   esp,eax
  41c8b1:	hlt    
  41c8b2:	add    DWORD PTR [edx-0x14fdab09],ecx
  41c8b8:	pusha  
  41c8b9:	dec    esi
  41c8ba:	rcr    DWORD PTR [ebx+0x4b05092b],1
  41c8c0:	into   
  41c8c1:	out    dx,al
  41c8c2:	loop   0x41c8ea
  41c8c4:	push   0x69492850
  41c8c9:	sub    esi,ebx
  41c8cb:	pusha  
  41c8cc:	stos   DWORD PTR es:[edi],eax
  41c8cd:	inc    DWORD PTR [esi-0x11]
  41c8d0:	scas   eax,DWORD PTR es:[edi]
  41c8d1:	mov    ebp,0xcafa257f
  41c8d6:	mov    DWORD PTR [edx+0x22ca6cb2],esi
  41c8dc:	nop
  41c8dd:	aam    0x26
  41c8df:	sub    eax,0x2925dfeb
  41c8e4:	xor    edx,ebp
  41c8e6:	sub    BYTE PTR [ecx],ah
  41c8e8:	sub    DWORD PTR [ebp+esi*1+0x73999121],ebp
  41c8ef:	dec    edx
  41c8f0:	aad    0xeb
  41c8f2:	(bad)  
  41c8f3:	ja     0x41c8d2
  41c8f5:	stos   BYTE PTR es:[edi],al
  41c8f6:	add    al,0x70
  41c8f8:	xchg   ebp,eax
  41c8f9:	sub    bh,ah
  41c8fb:	je     0x41c8fa
  41c8fd:	cmp    BYTE PTR [eax-0x23],bl
  41c900:	mov    ds:0x65ea32da,eax
  41c905:	inc    ebx
  41c906:	add    dh,al
  41c908:	aas    
  41c909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c90a:	jp     0x41c95b
  41c90c:	sbb    al,0x32
  41c90e:	les    ecx,FWORD PTR [ebx-0x7c057598]
  41c914:	xlat   BYTE PTR ds:[ebx]
  41c915:	push   es
  41c916:	jmp    0x8dba74c
  41c91b:	or     DWORD PTR [esi+0x1d],edx
  41c91e:	aaa    
  41c91f:	sbb    al,0xcb
  41c921:	mov    eax,ds:0xfaa411bb
  41c926:	nop
  41c927:	(bad)  
  41c928:	popa   
  41c929:	aam    0x92
  41c92b:	xlat   BYTE PTR ds:[ebx]
  41c92c:	fiadd  DWORD PTR [ebx]
  41c92e:	mov    dh,0x91
  41c930:	xchg   ecx,eax
  41c931:	rcl    BYTE PTR [ebp+0x472b0075],cl
  41c937:	mov    ebx,0x3bdcc96
  41c93c:	pop    ds
  41c93d:	pop    ss
  41c93e:	fwait
  41c93f:	loope  0x41c95f
  41c941:	(bad)  
  41c942:	stos   BYTE PTR es:[edi],al
  41c943:	scas   eax,DWORD PTR es:[edi]
  41c944:	cwde   
  41c945:	inc    eax
  41c946:	xchg   ecx,eax
  41c947:	gs (bad) 
  41c949:	xchg   ebx,eax
  41c94a:	inc    eax
  41c94b:	mov    eax,0x416ae6f8
  41c950:	sbb    dl,bh
  41c952:	push   ds
  41c953:	xchg   esi,eax
  41c954:	aad    0xa3
  41c956:	adc    al,0x0
  41c958:	fwait
  41c959:	xchg   ebp,eax
  41c95a:	loopne 0x41c9c8
  41c95c:	mov    bl,0x5f
  41c95e:	mov    cl,0x46
  41c960:	nop
  41c961:	stos   BYTE PTR es:[edi],al
  41c962:	dec    eax
  41c963:	cmp    BYTE PTR [esi+edi*8-0x6d1a4fd],0xc4
  41c96b:	dec    edx
  41c96c:	push   edi
  41c96d:	and    dl,BYTE PTR [edi]
  41c96f:	lahf   
  41c970:	cli    
  41c971:	mov    ds:0x53bdcf4d,eax
  41c976:	adc    eax,0x9bbdeacf
  41c97b:	inc    edi
  41c97c:	dec    ebx
  41c97d:	push   eax
  41c97e:	int3   
  41c97f:	adc    dh,dl
  41c981:	jp     0x41c98e
  41c983:	mov    esp,edi
  41c985:	jmp    0x41c9f3
  41c987:	dec    esi
  41c988:	pop    ds
  41c989:	retf   
  41c98a:	std    
  41c98b:	ss mov ah,0xb
  41c98e:	dec    esi
  41c98f:	push   ss
  41c990:	mov    edx,?
  41c992:	mov    cs,WORD PTR [esp+eiz*2+0x5]
  41c996:	outs   dx,BYTE PTR ds:[esi]
  41c997:	mov    bl,0x4
  41c999:	xlat   BYTE PTR ds:[ebx]
  41c99a:	ret    
  41c99b:	add    ah,al
  41c99d:	aam    0x63
  41c99f:	popf   
  41c9a0:	addr16 push ss
  41c9a2:	test   BYTE PTR [ecx+eiz*8-0x3d6b84df],ch
  41c9a9:	scas   eax,DWORD PTR es:[edi]
  41c9aa:	mov    ecx,0xb4a0ebc2
  41c9af:	retf   0xe3cb
  41c9b2:	fdiv   st,st(6)
  41c9b4:	cmp    eax,0x6b258d9f
  41c9b9:	in     al,0x90
  41c9bb:	push   ebx
  41c9bc:	mov    esp,0x15e35b94
  41c9c1:	into   
  41c9c2:	xchg   ebx,eax
  41c9c3:	repz jnp 0x41c962
  41c9c6:	sahf   
  41c9c7:	push   es
  41c9c8:	dec    ebx
  41c9c9:	xchg   ebp,eax
  41c9ca:	js     0x41c9b0
  41c9cc:	dec    edx
  41c9cd:	mov    bh,0x8f
  41c9cf:	aaa    
  41c9d0:	push   0xf359bc7b
  41c9d5:	xlat   BYTE PTR ds:[ebx]
  41c9d6:	leave  
  41c9d7:	add    DWORD PTR [esi-0x18],0xf2424b8b
  41c9de:	fs add eax,0x198b3927
  41c9e4:	bound  ebp,QWORD PTR [ecx+edi*4-0x942a469]
  41c9eb:	punpcklbw mm1,DWORD PTR es:0x1502cf0e
  41c9f3:	(bad)  [eax+edi*4]
  41c9f6:	pop    eax
  41c9f7:	pushf  
  41c9f8:	cmp    ebp,ebp
  41c9fa:	daa    
  41c9fb:	cmp    al,0x7b
  41c9fd:	ret    
  41c9fe:	pushf  
  41c9ff:	jnp    0x41c996
  41ca01:	cmp    eax,0x5746b1fd
  41ca06:	arpl   WORD PTR [ebp+0x1f9e2de1],dx
  41ca0c:	(bad)  
  41ca0d:	pop    ebx
  41ca0e:	les    esp,FWORD PTR ds:0xfe001c1d
  41ca14:	jle    0x41c99c
  41ca16:	cmp    eax,0x6cf577ea
  41ca1b:	jmp    0x8c86:0xf14c689e
  41ca22:	pop    eax
  41ca23:	push   cs
  41ca24:	std    
  41ca25:	pop    ss
  41ca26:	mov    ebp,DWORD PTR [edx+0x43]
  41ca29:	cmp    DWORD PTR [eax-0x7a],ebp
  41ca2c:	jbe    0x41ca57
  41ca2e:	mov    edx,0x869c8cbf
  41ca33:	add    dl,BYTE PTR [esp+edx*4-0xfbcb9f7]
  41ca3a:	stos   DWORD PTR es:[edi],eax
  41ca3b:	adc    eax,0x92c19538
  41ca40:	imul   eax,ebp,0x17
  41ca43:	inc    ebp
  41ca44:	das    
  41ca45:	inc    edx
  41ca46:	xlat   BYTE PTR ds:[ebx]
  41ca47:	fldenv [eax+0x285a7ad7]
  41ca4d:	adc    BYTE PTR [esi+0x41],0xd1
  41ca51:	add    DWORD PTR [edi-0x2c],edi
  41ca54:	aad    0xfe
  41ca56:	pop    eax
  41ca57:	mov    cl,0xcd
  41ca59:	jne    0x41cab7
  41ca5b:	(bad)  [edx+edx*2+0x560d4e3e]
  41ca62:	dec    edi
  41ca63:	inc    edi
  41ca64:	or     al,0x24
  41ca66:	xchg   ecx,eax
  41ca67:	adc    dh,0x80
  41ca6a:	loope  0x41ca62
  41ca6c:	and    bl,BYTE PTR [edx+0x16327d94]
  41ca72:	add    DWORD PTR [ebx+0x9],edi
  41ca75:	and    DWORD PTR [edi+ebx*8+0x60],edi
  41ca79:	int3   
  41ca7a:	cwde   
  41ca7b:	push   0x5ef46e34
  41ca80:	and    eax,0x28ccf652
  41ca85:	loop   0x41ca3b
  41ca87:	retf   
  41ca88:	enter  0xc15f,0x5e
  41ca8c:	(bad)  
  41ca8d:	repz into 
  41ca8f:	jae    0x41ca6e
  41ca91:	mov    ebp,DWORD PTR [edi+0x7a45646]
  41ca97:	scas   eax,DWORD PTR es:[edi]
  41ca98:	push   ss
  41ca99:	imul   BYTE PTR [edx]
  41ca9b:	shl    BYTE PTR [ebp+0x78],0xcf
  41ca9f:	jle    0x41cb08
  41caa1:	(bad)  
  41caa2:	les    esp,FWORD PTR [ebp-0x2e7b4ce0]
  41caa8:	push   ss
  41caa9:	push   esp
  41caaa:	adc    dl,cl
  41caac:	retf   
  41caad:	mov    ebp,esp
  41caaf:	rcl    BYTE PTR [edi-0x55685157],0xce
  41cab6:	ins    DWORD PTR es:[edi],dx
  41cab7:	cmp    edx,DWORD PTR [edx+0x2ac2a982]
  41cabd:	in     eax,0xdc
  41cabf:	mov    ecx,0x4c94434d
  41cac4:	retf   0x32e8
  41cac7:	adc    al,0x1a
  41cac9:	sub    eax,0x473465ac
  41cace:	fistp  QWORD PTR [ebx-0x3ba0eff7]
  41cad4:	lds    edi,FWORD PTR [eax+0x274d13b5]
  41cada:	jmp    0xb125:0x54dbe118
  41cae1:	fistp  WORD PTR [edi+eiz*1-0xa7f4fc7]
  41cae8:	gs cmp eax,0x1a65cba9
  41caee:	sub    al,0x19
  41caf0:	inc    ebp
  41caf1:	stos   DWORD PTR es:[edi],eax
  41caf2:	(bad)  [esi+0x5a]
  41caf5:	and    BYTE PTR [ebp-0x141dbe6e],0x80
  41cafc:	outs   dx,DWORD PTR ds:[esi]
  41cafd:	and    BYTE PTR [esi+0x6c],dh
  41cb00:	stc    
  41cb01:	xor    BYTE PTR [edi-0x53e36ce4],0x95
  41cb08:	inc    ebp
  41cb09:	push   0x76d8c17
  41cb0e:	test   DWORD PTR gs:[esi+0x5e],0xc881d62c
  41cb16:	arpl   bp,di
  41cb18:	(bad)  
  41cb19:	push   ds
  41cb1a:	test   DWORD PTR [ebx+0xf],ebp
  41cb1d:	fadd   QWORD PTR [edi+0x50]
  41cb20:	repz mov WORD PTR [ebp+0x57d19c22],cs
  41cb27:	arpl   WORD PTR ds:0xafa0ab00,sp
  41cb2d:	out    0x41,al
  41cb2f:	retf   
  41cb30:	mov    al,0x78
  41cb32:	and    edi,DWORD PTR [esi-0xa011745]
  41cb38:	inc    esi
  41cb39:	xor    eax,0x83acf55f
  41cb3e:	push   ds
  41cb3f:	push   ebx
  41cb40:	(bad)  
  41cb41:	call   DWORD PTR [esi+0x4a663108]
  41cb47:	sar    esi,1
  41cb49:	and    al,0x15
  41cb4b:	and    eax,ecx
  41cb4d:	add    dl,BYTE PTR [eax+ebp*8-0x71]
  41cb51:	popa   
  41cb52:	jecxz  0x41cb8b
  41cb54:	out    dx,eax
  41cb55:	nop
  41cb56:	call   0x406:0xa923b3c8
  41cb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb5e:	(bad)  
  41cb5f:	mov    ebx,0x4fad37e9
  41cb64:	mov    ebx,0xb9938a90
  41cb69:	sti    
  41cb6a:	fld    QWORD PTR [edx]
  41cb6c:	sti    
  41cb6d:	fadd   st,st(0)
  41cb6f:	mov    BYTE PTR [ebp-0x6a],dh
  41cb72:	push   cs
  41cb73:	sub    al,0x78
  41cb75:	inc    ebp
  41cb76:	xor    BYTE PTR [edi-0x369594b6],dl
  41cb7c:	inc    ecx
  41cb7d:	jb     0x41cbad
  41cb7f:	push   ss
  41cb80:	pop    ds
  41cb81:	loope  0x41cb0c
  41cb83:	aas    
  41cb84:	add    eax,0xcea5d9ec
  41cb89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb8a:	out    0x68,al
  41cb8c:	pop    edi
  41cb8d:	ret    0x7725
  41cb90:	hlt    
  41cb91:	jmp    0xeaf970e
  41cb96:	xchg   esi,eax
  41cb97:	in     al,0xf7
  41cb99:	retf   0x6745
  41cb9c:	sbb    eax,DWORD PTR [ebp+0x605fc8d]
  41cba2:	add    eax,0x723362df
  41cba7:	sub    ebp,DWORD PTR [eax]
  41cba9:	(bad)  
  41cbaa:	or     DWORD PTR gs:[edi+0x72a7b111],ebp
  41cbb1:	and    al,0x20
  41cbb3:	sbb    al,0x59
  41cbb5:	push   ecx
  41cbb6:	xor    eax,0x2689487b
  41cbbb:	popf   
  41cbbc:	jmp    0x45137b35
  41cbc1:	pop    ecx
  41cbc2:	push   es
  41cbc3:	fstp   TBYTE PTR [edx-0xa4283fa]
  41cbc9:	(bad)  
  41cbca:	mov    bl,0xce
  41cbcc:	xchg   ebx,eax
  41cbcd:	popf   
  41cbce:	mov    bh,0x77
  41cbd0:	shl    DWORD PTR [esi+0x1b6068b5],cl
  41cbd6:	inc    eax
  41cbd7:	mov    edi,0x2ea7b0bd
  41cbdc:	push   0xc7c08e8b
  41cbe1:	inc    esp
  41cbe2:	or     edx,DWORD PTR [ecx]
  41cbe4:	gs daa 
  41cbe6:	inc    esp
  41cbe7:	out    0x69,al
  41cbe9:	inc    ebp
  41cbea:	inc    eax
  41cbeb:	(bad)
  41cbee:	add    BYTE PTR ds:0xf6baeaa,0x82
  41cbf5:	rcr    DWORD PTR [ecx],1
  41cbf7:	adc    eax,edx
  41cbf9:	in     al,0xfe
  41cbfb:	xchg   DWORD PTR [ebx-0x62b74100],eax
  41cc01:	outs   dx,BYTE PTR ds:[esi]
  41cc02:	inc    esp
  41cc03:	sub    DWORD PTR [esi+0x9a62370],esp
  41cc09:	sahf   
  41cc0a:	in     al,dx
  41cc0b:	inc    ecx
  41cc0c:	(bad)  
  41cc0d:	jl     0x41cbe9
  41cc0f:	fdiv   DWORD PTR [ebx+eiz*2]
  41cc12:	ss lahf 
  41cc14:	jg     0x41cc08
  41cc16:	adc    eax,0x1e26a041
  41cc1b:	sti    
  41cc1c:	out    0x23,eax
  41cc1e:	jb     0x41cc49
  41cc20:	mov    WORD PTR [edi+ebx*8-0x148c63c5],cs
  41cc27:	add    DWORD PTR [ecx-0x258856e4],edi
  41cc2d:	daa    
  41cc2e:	or     DWORD PTR [edx+edx*2],0x1b
  41cc32:	cwde   
  41cc33:	xchg   edi,esi
  41cc35:	pop    es
  41cc36:	pop    eax
  41cc37:	push   esi
  41cc38:	aam    0x9b
  41cc3a:	add    eax,0xd537b8ca
  41cc3f:	xchg   edi,eax
  41cc40:	push   edx
  41cc41:	adc    al,0x9a
  41cc43:	inc    esp
  41cc44:	sbb    eax,DWORD PTR [edi+0x583b7660]
  41cc4a:	dec    eax
  41cc4b:	jle    0x41cca1
  41cc4d:	sub    DWORD PTR [esi-0x56],ecx
  41cc50:	xchg   ebx,eax
  41cc51:	cmc    
  41cc52:	aad    0x9
  41cc54:	inc    edi
  41cc55:	nop
  41cc56:	inc    eax
  41cc57:	xchg   edi,eax
  41cc58:	xchg   DWORD PTR [edx+0x1a],edx
  41cc5b:	rcr    DWORD PTR [ebp+eax*4+0x9c8c313],cl
  41cc62:	xchg   edx,eax
  41cc63:	jns    0x41cc16
  41cc65:	aas    
  41cc66:	imul   esi,ecx,0xffffff9f
  41cc69:	dec    esi
  41cc6a:	ficom  WORD PTR [eax+0x709c50e5]
  41cc70:	or     DWORD PTR [eax-0x6b],ebp
  41cc73:	pop    ebx
  41cc74:	pop    edi
  41cc75:	sub    ah,ch
  41cc77:	loop   0x41cccc
  41cc79:	sbb    BYTE PTR [edx],ah
  41cc7b:	cli    
  41cc7c:	(bad)  
  41cc7d:	lock mov dl,0x22
  41cc80:	icebp  
  41cc81:	push   ecx
  41cc82:	inc    esi
  41cc83:	and    BYTE PTR [edx+ebx*1],al
  41cc86:	test   DWORD PTR ds:0x979beb8f,edx
  41cc8c:	push   edi
  41cc8d:	push   0xffffffe9
  41cc8f:	mov    al,ds:0x2a32cf26
  41cc94:	push   eax
  41cc95:	jecxz  0x41cce0
  41cc97:	addr16 jg 0x41cc2f
  41cc9a:	aas    
  41cc9b:	sub    BYTE PTR [esi+0x7ef9f270],al
  41cca1:	aas    
  41cca2:	pop    ecx
  41cca3:	mov    ecx,0x6ed9286e
  41cca8:	sub    BYTE PTR [eax],ch
  41ccaa:	fwait
  41ccab:	mov    ds:0xbb3f6ae9,al
  41ccb0:	and    BYTE PTR [ecx],ch
  41ccb2:	call   0x2385:0xcdbe51b0
  41ccb9:	and    DWORD PTR [esp+ebx*8+0x8],ebp
  41ccbd:	(bad)
  41ccc1:	in     al,dx
  41ccc2:	inc    DWORD PTR [edi-0x54]
  41ccc5:	ja     0x41cc7d
  41ccc7:	inc    ebp
  41ccc8:	pushf  
  41ccc9:	jbe    0x41cc92
  41cccb:	sbb    eax,0x1208ebc3
  41ccd0:	(bad)  
  41ccd2:	lock fld TBYTE PTR [ebx+0x6c47f471]
  41ccd9:	xor    eax,0x301c32ed
  41ccde:	xchg   ecx,eax
  41ccdf:	mov    eax,0xd5e38c06
  41cce4:	addr16 cdq 
  41cce6:	sar    DWORD PTR [edi+0x9446fc5],0x26
  41cced:	stc    
  41ccee:	xor    al,0x65
  41ccf0:	cmp    DWORD PTR [ecx-0x5c812528],esi
  41ccf6:	and    esp,DWORD PTR [ebp-0x4]
  41ccf9:	das    
  41ccfa:	xor    ebp,edi
  41ccfc:	mov    al,ds:0xcf94d265
  41cd01:	pop    ebp
  41cd02:	dec    esp
  41cd03:	lds    ebp,FWORD PTR [edx]
  41cd05:	and    ebx,DWORD PTR [edx+0x425c3963]
  41cd0b:	cmc    
  41cd0c:	(bad)  
  41cd0d:	icebp  
  41cd0e:	(bad)  
  41cd0f:	sbb    eax,0x956fed8f
  41cd14:	pop    es
  41cd15:	sbb    DWORD PTR [edi],edx
  41cd17:	pop    eax
  41cd18:	inc    ebx
  41cd19:	(bad)  
  41cd1a:	dec    edi
  41cd1b:	cli    
  41cd1c:	stos   BYTE PTR es:[edi],al
  41cd1d:	sbb    al,0x3c
  41cd1f:	jge    0x41cd60
  41cd21:	and    al,0xbb
  41cd23:	and    DWORD PTR [edi+edi*8],edi
  41cd26:	sub    cl,al
  41cd28:	in     eax,0x55
  41cd2a:	mov    ebp,0x960d0685
  41cd2f:	das    
  41cd30:	int3   
  41cd31:	push   cs
  41cd32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd33:	adc    al,0xd
  41cd35:	push   es
  41cd36:	(bad)  
  41cd38:	lods   eax,DWORD PTR ds:[esi]
  41cd39:	es adc al,0xf5
  41cd3c:	test   eax,0x376e30fd
  41cd41:	cwde   
  41cd42:	cmp    al,0xe5
  41cd44:	and    al,0xb2
  41cd46:	ds jmp 0x41cd55
  41cd49:	ds sub eax,0xcd89bad
  41cd4f:	sbb    DWORD PTR [ecx-0x25f850bb],esi
  41cd55:	daa    
  41cd56:	cdq    
  41cd57:	daa    
  41cd58:	jl     0x41cce7
  41cd5a:	fnstenv [esp+ebx*4+0x569fce68]
  41cd61:	loope  0x41cdc3
  41cd63:	and    al,0xab
  41cd65:	mov    ah,0xda
  41cd67:	jbe    0x41cd04
  41cd69:	and    DWORD PTR [edx-0x5f],ebx
  41cd6c:	imul   ecx,DWORD PTR [ebp+eiz*8-0x50],0x96e329f6
  41cd74:	fst    DWORD PTR [ebx+0x34f0389e]
  41cd7a:	xchg   edx,eax
  41cd7b:	adc    al,0x60
  41cd7d:	imul   ebp,DWORD PTR [ebp+esi*1+0x27],0xc4bcf843
  41cd85:	push   0xffffff88
  41cd87:	pusha  
  41cd88:	xor    BYTE PTR [esi-0x7b8b64b3],dl
  41cd8e:	and    esi,DWORD PTR [ebp+ebx*8+0x2b]
  41cd92:	cmp    ebp,DWORD PTR [ecx-0x6428c07a]
  41cd98:	mov    edi,0x6de33e9b
  41cd9d:	push   esi
  41cd9e:	jle    0x41cdde
  41cda0:	add    eax,0x4b9145df
  41cda5:	arpl   WORD PTR [esi],di
  41cda7:	ins    DWORD PTR es:[edi],dx
  41cda8:	jne    0x41cdb1
  41cdaa:	xor    BYTE PTR [esi+0x33],dh
  41cdad:	dec    eax
  41cdae:	daa    
  41cdaf:	sbb    ebp,DWORD PTR [ecx]
  41cdb1:	push   0x3
  41cdb3:	bound  edx,QWORD PTR [edx-0x6c]
  41cdb6:	cli    
  41cdb7:	cmp    BYTE PTR [esi-0x1f28afdd],dh
  41cdbd:	fs inc esp
  41cdbf:	sti    
  41cdc0:	(bad)  
  41cdc1:	shr    DWORD PTR [edi],1
  41cdc3:	fwait
  41cdc4:	dec    edi
  41cdc5:	arpl   WORD PTR [ecx+0x639324ca],dx
  41cdcb:	and    eax,0xcde07e4f
  41cdd0:	fsubr  DWORD PTR [edi-0x5d]
  41cdd3:	inc    ecx
  41cdd4:	in     al,dx
  41cdd5:	loop   0x41ce22
  41cdd7:	shl    BYTE PTR [ebx-0x63],1
  41cdda:	jl     0x41ce2a
  41cddc:	ror    BYTE PTR [eax-0x5e4b0bcc],1
  41cde2:	ins    DWORD PTR es:[edi],dx
  41cde3:	pushf  
  41cde4:	add    DWORD PTR [ebp-0x4c],0x44229784
  41cdeb:	sub    DWORD PTR [eax],ebp
  41cded:	push   esi
  41cdee:	ins    BYTE PTR es:[edi],dx
  41cdef:	fist   DWORD PTR [ecx]
  41cdf1:	aas    
  41cdf2:	arpl   WORD PTR [ebx],bp
  41cdf4:	add    BYTE PTR [edx-0x2],0x4a
  41cdf8:	xchg   edi,eax
  41cdf9:	jnp    0x41cdaf
  41cdfb:	push   edi
  41cdfc:	in     eax,0x36
  41cdfe:	leave  
  41cdff:	add    BYTE PTR [edx+0x57],dl
  41ce02:	mov    bl,0x74
  41ce04:	mov    ebx,0xc98f545f
  41ce09:	push   ss
  41ce0a:	cli    
  41ce0b:	xor    esi,DWORD PTR [ebx+0x2adf5606]
  41ce11:	xchg   DWORD PTR [esi],ebp
  41ce13:	int    0x9b
  41ce15:	xlat   BYTE PTR ds:[ebx]
  41ce16:	sbb    ah,BYTE PTR [ebx]
  41ce18:	mov    al,BYTE PTR [eax]
  41ce1a:	push   ebx
  41ce1b:	pusha  
  41ce1c:	pushf  
  41ce1d:	cdq    
  41ce1e:	or     ch,bh
  41ce20:	mov    al,ds:0x1d1b58f1
  41ce25:	jns    0x41ce98
  41ce27:	mov    bl,0x53
  41ce29:	(bad)  
  41ce2a:	call   0xfe8d:0x54365e2e
  41ce31:	push   ds
  41ce32:	xchg   BYTE PTR [ecx+ebx*8],dh
  41ce35:	dec    ebx
  41ce36:	add    al,0x1a
  41ce38:	repnz or ebx,ecx
  41ce3b:	pop    es
  41ce3c:	loop   0x41ce80
  41ce3e:	fnop   
  41ce40:	mov    bl,0x6f
  41ce42:	jne    0x41cdfb
  41ce44:	in     al,0x9f
  41ce46:	push   0x5c
  41ce48:	or     eax,0xa62028f0
  41ce4d:	pop    ebx
  41ce4e:	retf   
  41ce4f:	loop   0x41ce87
  41ce51:	loop   0x41cdf7
  41ce53:	fisttp DWORD PTR [ecx+0x127938a8]
  41ce59:	adc    eax,0x3778168d
  41ce5e:	sub    BYTE PTR [ecx+0x17d625e7],bh
  41ce64:	cmp    al,0x7
  41ce66:	cs or  eax,edx
  41ce69:	mov    ebx,0x878379b1
  41ce6e:	mov    ecx,0x8d3cd46a
  41ce73:	dec    ecx
  41ce74:	dec    ebp
  41ce75:	mov    dh,bl
  41ce77:	retw   
  41ce79:	adc    DWORD PTR [ebp+0x7f],ebx
  41ce7c:	inc    esp
  41ce7d:	pop    edi
  41ce7e:	add    esp,esp
  41ce80:	dec    eax
  41ce81:	inc    ecx
  41ce82:	push   ebp
  41ce83:	lds    edi,FWORD PTR [edx]
  41ce85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce86:	lods   eax,DWORD PTR ds:[esi]
  41ce87:	push   ebp
  41ce88:	adc    DWORD PTR [esp+esi*4-0x3],ebx
  41ce8c:	lods   al,BYTE PTR ds:[esi]
  41ce8d:	push   ss
  41ce8e:	dec    edi
  41ce8f:	mov    eax,0x5548ee4
  41ce94:	mov    esp,DWORD PTR [esi]
  41ce96:	mov    edi,0x9033e077
  41ce9b:	xchg   esi,eax
  41ce9c:	ss adc eax,0xf4b51008
  41cea2:	jecxz  0x41cea1
  41cea4:	lock in al,0xb3
  41cea7:	dec    ebx
  41cea8:	adc    ebx,esp
  41ceaa:	popa   
  41ceab:	xor    BYTE PTR [edi+0x11b70d7f],bl
  41ceb1:	mov    ds:0x2f67d57c,eax
  41ceb6:	adc    BYTE PTR [ebp+0x10ff8bd1],bh
  41cebc:	repnz inc eax
  41cebe:	sub    BYTE PTR [esi+0x3d],bl
  41cec1:	inc    ebp
  41cec2:	add    al,0x71
  41cec4:	xchg   ebp,eax
  41cec5:	or     ebx,DWORD PTR [eax+0x2b]
  41cec8:	ret    0x30bf
  41cecb:	pop    esi
  41cecc:	js     0x41ceed
  41cece:	je     0x41ced9
  41ced0:	add    DWORD PTR [ecx],esi
  41ced2:	nop
  41ced3:	xchg   edi,eax
  41ced4:	arpl   WORD PTR [esi+0x42],sp
  41ced7:	sbb    cl,dl
  41ced9:	int    0xcd
  41cedb:	push   0x6d
  41cedd:	js     0x41ce87
  41cedf:	jg     0x41ceb0
  41cee1:	push   0xf
  41cee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee4:	jae    0x41ceef
  41cee6:	test   ch,dl
  41cee8:	push   es
  41cee9:	aad    0x36
  41ceeb:	mov    ecx,0xedf752f1
  41cef0:	pop    edi
  41cef1:	jb     0x41ce7b
  41cef3:	or     al,BYTE PTR [edi-0x32]
  41cef6:	jns    0x41cee4
  41cef8:	mov    bh,0x95
  41cefa:	lahf   
  41cefb:	mul    DWORD PTR [eax-0x40dc8017]
  41cf01:	aas    
  41cf02:	jmp    0x8d23eaec
  41cf07:	push   edx
  41cf08:	and    ch,BYTE PTR [eax-0x1366c066]
  41cf0e:	mov    ah,0x73
  41cf10:	clc    
  41cf11:	sbb    al,cl
  41cf13:	cmp    BYTE PTR [esi+eiz*2],ah
  41cf16:	enter  0xd92e,0x7d
  41cf1a:	xchg   ecx,eax
  41cf1b:	stc    
  41cf1c:	adc    al,0x7c
  41cf1e:	mov    dh,0x96
  41cf20:	or     BYTE PTR [edi],bl
  41cf22:	inc    esi
  41cf23:	imul   ebx,esp,0xffffffbf
  41cf26:	jno    0x41cf9d
  41cf28:	leave  
  41cf29:	push   esi
  41cf2a:	lods   al,BYTE PTR ds:[esi]
  41cf2b:	push   es
  41cf2c:	mov    ah,0xbf
  41cf2e:	jo     0x41cf37
  41cf30:	out    dx,al
  41cf31:	out    dx,eax
  41cf32:	pop    esp
  41cf33:	cld    
  41cf34:	push   edi
  41cf35:	sub    BYTE PTR [ebp-0x22],bh
  41cf38:	test   DWORD PTR [ebx-0x8],0x2e2f8d1a
  41cf3f:	and    BYTE PTR [edi+eiz*2+0x413f101],ch
  41cf46:	loope  0x41cfab
  41cf48:	jmp    0x41cf97
  41cf4a:	pop    ecx
  41cf4b:	adc    esp,DWORD PTR [ebx+0x46967c01]
  41cf51:	add    al,0x9
  41cf53:	xchg   ecx,eax
  41cf54:	out    dx,eax
  41cf55:	add    DWORD PTR [ebx+0x601f6963],eax
  41cf5b:	mov    esi,gs
  41cf5d:	out    0x55,eax
  41cf5f:	aas    
  41cf60:	mov    ch,0x6
  41cf62:	sub    dh,ch
  41cf64:	arpl   WORD PTR [eax],si
  41cf66:	add    bl,bl
  41cf68:	push   ecx
  41cf69:	das    
  41cf6a:	adc    BYTE PTR [esi-0x1eafee23],ch
  41cf70:	push   0x31
  41cf72:	arpl   WORD PTR [esi-0x761ee182],sp
  41cf78:	jno    0x41cf89
  41cf7a:	or     BYTE PTR [ecx+0x5439b1ae],0x7a
  41cf81:	pop    edx
  41cf82:	aam    0x6b
  41cf84:	mov    esp,ecx
  41cf86:	ss mov cl,0x88
  41cf89:	dec    esi
  41cf8a:	into   
  41cf8b:	mov    esp,0xc1100f05
  41cf90:	mov    ah,0xd6
  41cf92:	mov    eax,0x9fc87ed1
  41cf97:	nop
  41cf98:	das    
  41cf99:	aad    0x17
  41cf9b:	jmp    0x7a1994e0
  41cfa0:	adc    ah,BYTE PTR [eax+0x4a3253bc]
  41cfa6:	nop
  41cfa7:	sahf   
  41cfa8:	mov    ebx,0x5b4563da
  41cfad:	pop    esi
  41cfae:	das    
  41cfaf:	std    
  41cfb0:	scas   eax,DWORD PTR es:[edi]
  41cfb1:	mov    edi,0xe13a8b65
  41cfb6:	not    BYTE PTR [ebx]
  41cfb8:	iret   
  41cfb9:	mov    bl,0xf7
  41cfbb:	xor    BYTE PTR [edi-0xb562dc8],bl
  41cfc1:	sub    DWORD PTR [ebx],esi
  41cfc3:	sbb    DWORD PTR [esi-0x1b],edi
  41cfc6:	add    eax,esi
  41cfc8:	and    esi,edx
  41cfca:	cwde   
  41cfcb:	and    DWORD PTR ds:[edi-0x2a5a5434],edi
  41cfd2:	or     cl,BYTE PTR [ecx]
  41cfd4:	push   cx
  41cfd6:	mov    esi,0x9ebd9e4
  41cfdb:	lods   eax,DWORD PTR ds:[esi]
  41cfdc:	(bad)  
  41cfdd:	pop    esi
  41cfde:	add    eax,0x969472fa
  41cfe3:	pop    ss
  41cfe4:	arpl   cx,di
  41cfe6:	fcom   QWORD PTR [ecx-0x3140883a]
  41cfec:	sub    BYTE PTR [ebx-0x236ef3a2],bl
  41cff2:	xchg   esp,eax
  41cff3:	es xor eax,0xf05417eb
  41cff9:	dec    eax
  41cffa:	dec    edx
  41cffb:	icebp  
  41cffc:	jl     0x41d074
  41cffe:	lahf   
  41cfff:	call   0x5879:0x89f1c8fb
  41d006:	cmp    eax,0xd9559154
  41d00b:	pop    es
  41d00c:	into   
  41d00d:	xor    cl,BYTE PTR [edx]
  41d00f:	add    al,0xce
  41d011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d012:	outs   dx,DWORD PTR ds:[esi]
  41d013:	push   ebp
  41d014:	(bad)  
  41d015:	fs inc ebp
  41d017:	inc    esp
  41d018:	cmp    eax,0xf21659c2
  41d01d:	lods   al,BYTE PTR ds:[esi]
  41d01e:	sbb    BYTE PTR [esi-0x46],0x44
  41d022:	stos   BYTE PTR es:[edi],al
  41d023:	adc    dh,cl
  41d025:	lods   al,BYTE PTR ds:[esi]
  41d026:	xchg   BYTE PTR [edx],bh
  41d028:	cmp    al,0x71
  41d02a:	les    ebp,FWORD PTR [edi]
  41d02c:	jae    0x41cfb7
  41d02e:	ins    DWORD PTR es:[edi],dx
  41d02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d030:	mov    ?,WORD PTR ds:0xad9244c0
  41d036:	fild   DWORD PTR [ebp-0x5]
  41d039:	mov    ah,0x5a
  41d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d03c:	dec    ecx
  41d03d:	loope  0x41cfda
  41d03f:	or     al,0xe1
  41d041:	lahf   
  41d042:	cmp    DWORD PTR [esi],0x2185d0f2
  41d048:	push   ds
  41d049:	mov    edx,0xd0218eb2
  41d04e:	jp     0x41d049
  41d050:	inc    edi
  41d051:	outs   dx,BYTE PTR ds:[esi]
  41d052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d053:	xchg   ecx,eax
  41d054:	mov    BYTE PTR [eax+0x22],0xf3
  41d058:	mov    eax,0x67a06e9f
  41d05d:	gs dec eax
  41d05f:	mov    cl,0x62
  41d061:	jnp    0x41d04f
  41d063:	loopne 0x41d02d
  41d065:	pop    ebx
  41d066:	lods   al,BYTE PTR ds:[esi]
  41d067:	imul   eax,DWORD PTR [edx+esi*8],0xd21a298d
  41d06e:	lea    esp,[edi-0x2a]
  41d071:	xchg   edi,eax
  41d072:	push   ecx
  41d073:	push   0x208ed1de
  41d078:	pop    edx
  41d079:	out    dx,al
  41d07a:	xchg   esp,eax
  41d07b:	dec    ebx
  41d07c:	inc    edi
  41d07d:	push   esi
  41d07e:	das    
  41d07f:	pusha  
  41d080:	and    eax,0x48d4ef5
  41d085:	lds    eax,FWORD PTR [ecx-0x70]
  41d088:	inc    ebp
  41d089:	mov    edi,0xd73ae8c8
  41d08e:	(bad)  [esi]
  41d090:	sub    DWORD PTR [ebp+edx*8+0x4b],ecx
  41d094:	mov    cl,0xae
  41d096:	or     BYTE PTR [edi-0x3936f9f],bl
  41d09c:	ss pop ss
  41d09e:	cld    
  41d09f:	dec    edx
  41d0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a2:	mov    cl,0x6d
  41d0a4:	inc    ecx
  41d0a5:	dec    ebp
  41d0a6:	cmc    
  41d0a7:	adc    al,0x56
  41d0a9:	push   edx
  41d0aa:	loopne 0x41d02f
  41d0ac:	add    ch,BYTE PTR [edi+0x19]
  41d0af:	out    dx,al
  41d0b0:	sti    
  41d0b1:	je     0x41d05b
  41d0b3:	in     eax,dx
  41d0b4:	pop    esi
  41d0b5:	push   eax
  41d0b6:	(bad)  
  41d0b7:	pop    eax
  41d0b8:	mov    dl,0x6
  41d0ba:	jae    0x41d0cd
  41d0bc:	gs je  0x41d0ae
  41d0bf:	sbb    eax,0xf96ad83f
  41d0c4:	bound  esi,QWORD PTR [ebx]
  41d0c6:	inc    edi
  41d0c7:	or     eax,edi
  41d0c9:	push   es
  41d0ca:	fs jns 0x41d0bb
  41d0cd:	shr    BYTE PTR [ebp-0x2a],0xe6
  41d0d1:	ret    0x2302
  41d0d4:	rol    DWORD PTR [edi+0x7316ce3b],1
  41d0da:	sbb    esi,ecx
  41d0dc:	sahf   
  41d0dd:	jno    0x41d0ce
  41d0df:	out    dx,al
  41d0e0:	add    al,dl
  41d0e2:	inc    ebx
  41d0e3:	mov    esp,0x95b6c328
  41d0e8:	xchg   esi,eax
  41d0e9:	js     0x41d14b
  41d0eb:	jno    0x41d0cb
  41d0ed:	test   BYTE PTR [eax+0xb794a4e],0x8c
  41d0f4:	pop    ecx
  41d0f5:	ins    BYTE PTR es:[edi],dx
  41d0f6:	jmp    0x349aae51
  41d0fb:	clc    
  41d0fc:	cmp    DWORD PTR [edx+0x1e],eax
  41d0ff:	mov    fs,edi
  41d101:	pushf  
  41d102:	lock daa 
  41d104:	add    al,0x3
  41d106:	mov    ebp,0x27651f8f
  41d10b:	or     ebp,DWORD PTR [ebp+edx*2+0x1e]
  41d10f:	retf   0xb963
  41d112:	ret    
  41d113:	mov    cl,0xd9
  41d115:	push   0xb8078867
  41d11a:	pop    esi
  41d11b:	in     al,dx
  41d11c:	adc    ebp,esp
  41d11e:	call   0x4d1d:0x3693ae6d
  41d125:	push   0xef15d437
  41d12a:	xchg   esp,eax
  41d12b:	mov    edx,0x34f1c5de
  41d130:	dec    edi
  41d131:	lahf   
  41d132:	dec    esp
  41d133:	lahf   
  41d134:	jp     0x41d148
  41d136:	add    eax,DWORD PTR [ecx-0x6e]
  41d139:	pop    ds
  41d13a:	inc    ebx
  41d13b:	aas    
  41d13c:	pop    edi
  41d13d:	mov    al,0xba
  41d13f:	outs   dx,DWORD PTR ds:[esi]
  41d140:	xchg   edi,eax
  41d141:	ret    
  41d142:	pusha  
  41d143:	shl    BYTE PTR [edx+0x56],0xec
  41d147:	aaa    
  41d148:	adc    al,0xe6
  41d14a:	jbe    0x41d0e3
  41d14c:	mov    al,ds:0xdf5f0456
  41d151:	mov    esi,0x63618347
  41d156:	jp     0x41d173
  41d158:	mov    ebp,ebp
  41d15a:	imul   ebx,DWORD PTR [edi+0x20],0x4e
  41d15e:	jno    0x41d0f0
  41d160:	daa    
  41d161:	jmp    0x1eb7:0x3c9ee493
  41d168:	mov    ds:0xb89a5d31,eax
  41d16d:	dec    edi
  41d16e:	or     cl,BYTE PTR [ecx+esi*4]
  41d171:	add    BYTE PTR ds:0x164c33ca,ah
  41d177:	ret    
  41d178:	es push 0xb
  41d17b:	pop    ebp
  41d17c:	xchg   edi,eax
  41d17d:	iret   
  41d17e:	aam    0xaf
  41d180:	sub    edx,DWORD PTR [ecx]
  41d182:	mov    es,WORD PTR [edx+0x5e]
  41d185:	sbb    BYTE PTR [ebx+0x6d5f0a03],dh
  41d18b:	or     al,cl
  41d18d:	fadd   DWORD PTR [ebx+ecx*1+0x62]
  41d191:	fsubr  st,st(0)
  41d193:	xchg   edx,eax
  41d194:	es inc edx
  41d196:	pop    ds
  41d197:	fsubp  st(3),st
  41d199:	mov    ah,0x2e
  41d19b:	pop    ebx
  41d19c:	cmp    cl,dl
  41d19e:	lock inc edx
  41d1a0:	aaa    
  41d1a1:	in     eax,dx
  41d1a2:	mov    ah,0xb5
  41d1a4:	(bad)  
  41d1a5:	cmp    al,0x94
  41d1a7:	enter  0xfea7,0x54
  41d1ab:	cmc    
  41d1ac:	sbb    eax,0xddf3ea89
  41d1b1:	addr16 jo 0x41d1ca
  41d1b4:	pop    ss
  41d1b5:	mov    ecx,0xebb00f62
  41d1ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1bb:	out    0xd6,eax
  41d1bd:	retf   0xaf5c
  41d1c0:	mov    ch,0xe7
  41d1c2:	das    
  41d1c3:	fst    DWORD PTR [ebp+0x26]
  41d1c6:	js     0x41d202
  41d1c8:	test   DWORD PTR [ebp-0x35d668f1],edx
  41d1ce:	pop    ebx
  41d1cf:	shr    DWORD PTR [edi],1
  41d1d1:	cld    
  41d1d2:	cld    
  41d1d3:	call   0x594:0x8071a6cd
  41d1da:	popa   
  41d1db:	rcl    BYTE PTR [ecx],0xab
  41d1de:	sbb    bl,BYTE PTR [edi+0x5a]
  41d1e1:	cmp    DWORD PTR [ecx+0x76],eax
  41d1e4:	loop   0x41d249
  41d1e6:	mov    WORD PTR [ebx+eax*4+0x6488b311],ds
  41d1ed:	ss push edi
  41d1ef:	les    esi,FWORD PTR [edi]
  41d1f1:	jl     0x41d1f2
  41d1f3:	inc    esp
  41d1f4:	or     BYTE PTR [ebx],0xeb
  41d1f7:	adc    al,0xe5
  41d1f9:	in     al,0x9a
  41d1fb:	lods   eax,DWORD PTR ds:[esi]
  41d1fc:	iret   
  41d1fd:	test   al,0xc2
  41d1ff:	mov    ds:0x2a185003,eax
  41d204:	not    DWORD PTR [edi]
  41d206:	xchg   edx,eax
  41d207:	cs jp  0x41d197
  41d20a:	sbb    ebp,DWORD PTR [edi+edx*1+0x12]
  41d20e:	gs jge 0x41d1cb
  41d211:	sub    DWORD PTR [ebp-0x3a],edi
  41d214:	sbb    cl,BYTE PTR [ebp+ecx*2-0x49e16a7f]
  41d21b:	jle    0x41d1e3
  41d21d:	into   
  41d21e:	xor    al,0x5d
  41d220:	sbb    al,0xce
  41d222:	mov    ?,WORD PTR [edi]
  41d224:	ja     0x41d202
  41d226:	popf   
  41d227:	xchg   BYTE PTR [edi-0x66ec9366],cl
  41d22d:	ja     0x41d298
  41d22f:	push   edi
  41d230:	mov    ds:0x9a61b164,al
  41d235:	dec    esi
  41d236:	aaa    
  41d237:	xor    eax,0xa6509a3c
  41d23c:	je     0x41d1d5
  41d23e:	icebp  
  41d23f:	dec    esi
  41d240:	fs popf 
  41d242:	es push esp
  41d244:	arpl   WORD PTR [ecx-0x5e],sp
  41d247:	inc    eax
  41d248:	sbb    DWORD PTR [ebx+ecx*1],ebx
  41d24b:	sub    ch,BYTE PTR [edi]
  41d24d:	sbb    al,0x60
  41d24f:	stc    
  41d250:	inc    ebp
  41d251:	sti    
  41d252:	or     dl,BYTE PTR [ecx+0x21]
  41d255:	mov    esi,0xca767ec0
  41d25a:	fsubr  DWORD PTR [ebx-0x54012be]
  41d260:	dec    ebp
  41d261:	dec    edi
  41d262:	(bad)  
  41d263:	mov    dh,0x2c
  41d265:	scas   eax,DWORD PTR es:[edi]
  41d266:	arpl   dx,bx
  41d268:	sbb    al,0xbe
  41d26a:	sbb    DWORD PTR [ecx-0x25],ecx
  41d26d:	mov    eax,ebp
  41d26f:	popa   
  41d270:	(bad)  
  41d271:	(bad)  
  41d272:	rcr    DWORD PTR [edx],cl
  41d274:	cmp    al,0xa9
  41d276:	jecxz  0x41d2a9
  41d278:	add    BYTE PTR [eax-0x77a33e9c],0xb2
  41d27f:	scas   al,BYTE PTR es:[edi]
  41d280:	aaa    
  41d281:	fs sbb eax,0xdec80e07
  41d287:	dec    ebp
  41d288:	enter  0xd180,0x26
  41d28c:	popf   
  41d28d:	push   ebx
  41d28e:	or     DWORD PTR [ebx-0x7404465a],ebp
  41d294:	add    DWORD PTR [ebx],0xffffffcd
  41d297:	ds ret 
  41d299:	into   
  41d29a:	gs retf 0x606d
  41d29e:	push   ecx
  41d29f:	test   eax,0x96bd843
  41d2a4:	cwde   
  41d2a5:	cmp    eax,0x4f9634e6
  41d2aa:	nop
  41d2ab:	or     BYTE PTR [esi],0x18
  41d2ae:	and    eax,0xf58a4496
  41d2b3:	jg     0x41d2df
  41d2b5:	jle    0x41d32d
  41d2b7:	push   ds
  41d2b8:	cld    
  41d2b9:	hlt    
  41d2ba:	or     BYTE PTR [edi],bh
  41d2bc:	repnz imul esi,DWORD PTR [ebx+0x37],0xdc3bdd9a
  41d2c4:	hlt    
  41d2c5:	add    esp,ebp
  41d2c7:	jle    0x41d290
  41d2c9:	pop    ebp
  41d2ca:	fcomp  QWORD PTR [ebx]
  41d2cc:	je     0x41d325
  41d2ce:	adc    eax,0x30f9c422
  41d2d3:	je     0x41d343
  41d2d5:	mov    al,ds:0x180d199b
  41d2da:	sbb    ebx,ebp
  41d2dc:	loopne 0x41d2c2
  41d2de:	jbe    0x41d32f
  41d2e0:	stos   DWORD PTR es:[edi],eax
  41d2e1:	push   0x701a91f0
  41d2e6:	ss dec edx
  41d2e8:	dec    edx
  41d2e9:	jmp    0x98ba3653
  41d2ee:	mov    ds:0x640c0a6d,al
  41d2f3:	stos   DWORD PTR es:[edi],eax
  41d2f4:	pop    es
  41d2f5:	sbb    al,0xbb
  41d2f7:	sub    DWORD PTR [edx],ebx
  41d2f9:	test   eax,0x2a02b6c1
  41d2fe:	stos   BYTE PTR es:[edi],al
  41d2ff:	or     ebp,esi
  41d301:	mov    esp,0x70539c39
  41d306:	std    
  41d307:	push   ebp
  41d308:	add    al,0xd1
  41d30a:	dec    ecx
  41d30c:	int    0xf2
  41d30e:	sub    BYTE PTR [ebx+0x60d48b59],dl
  41d314:	imul   esp,DWORD PTR [eax-0x77384404],0x6bd4264a
  41d31e:	call   DWORD PTR [esi+0x4d]
  41d321:	ret    0x5980
  41d324:	(bad)  
  41d325:	mov    dh,0xb8
  41d327:	dec    edx
  41d328:	bound  esp,QWORD PTR [edi+0x578ae770]
  41d32e:	addr16 dec edx
  41d330:	mov    DWORD PTR ds:0x4260b4fb,edx
  41d336:	pop    edi
  41d337:	clc    
  41d338:	dec    ecx
  41d339:	stc    
  41d33a:	jle    0x41d332
  41d33c:	mov    WORD PTR [ebx],?
  41d33e:	pop    ecx
  41d33f:	cmp    eax,0x5585de42
  41d344:	adc    edx,DWORD PTR [edx+eiz*1-0x4b15227]
  41d34b:	xlat   BYTE PTR ds:[ebx]
  41d34c:	adc    al,0x88
  41d34e:	test   DWORD PTR [ebp+eax*2+0x20e1cc9e],edx
  41d355:	(bad)  
  41d356:	(bad)  
  41d357:	jae    0x41d3c8
  41d359:	jg     0x41d304
  41d35b:	arpl   WORD PTR [edi-0x73],sp
  41d35e:	int    0x48
  41d360:	and    DWORD PTR [ecx-0x54],esp
  41d363:	arpl   WORD PTR [edi-0x69be8bca],di
  41d369:	outs   dx,BYTE PTR ds:[esi]
  41d36a:	add    BYTE PTR [ebx-0x19],0xcb
  41d36e:	fwait
  41d36f:	jmp    0x87e:0xe60e38ef
  41d376:	xchg   esi,eax
  41d377:	mov    dh,0xf5
  41d379:	call   0xe840203b
  41d37e:	add    DWORD PTR [edx-0x6d6e141e],esi
  41d384:	jns    0x41d389
  41d386:	mov    ah,0xb3
  41d388:	out    dx,al
  41d389:	rol    DWORD PTR [ebp-0x39],0xdc
  41d38d:	adc    al,0xe2
  41d38f:	into   
  41d390:	jne    0x41d35d
  41d392:	in     eax,0xdd
  41d394:	or     dl,dl
  41d396:	jmp    0xa997d89e
  41d39b:	mov    bl,0x6c
  41d39d:	das    
  41d39e:	fisub  DWORD PTR [edx+0x1b6cc575]
  41d3a4:	mov    bh,0xff
  41d3a6:	push   DWORD PTR [ecx+0x17]
  41d3a9:	adc    al,0xcf
  41d3ab:	push   cs
  41d3ac:	sti    
  41d3ad:	inc    esi
  41d3ae:	push   ss
  41d3af:	test   al,ah
  41d3b1:	jmp    0xf3b3ed54
  41d3b6:	loope  0x41d3d3
  41d3b8:	pop    edx
  41d3b9:	sub    ch,ah
  41d3bb:	mov    al,ds:0x7bf0ac16
  41d3c0:	imul   ecx,DWORD PTR [eax],0x11
  41d3c3:	xchg   edi,eax
  41d3c4:	mov    esp,0xe4e0e88b
  41d3c9:	xor    dh,ch
  41d3cb:	shl    DWORD PTR ds:[ebx-0x74cbc4c4],1
  41d3d2:	dec    esp
  41d3d3:	jns    0x41d43c
  41d3d5:	and    DWORD PTR [ebx-0x2f636f57],eax
  41d3db:	aas    
  41d3dc:	retf   
  41d3dd:	fsubrp st(0),st
  41d3df:	push   esp
  41d3e0:	mov    ch,0xbc
  41d3e2:	popf   
  41d3e3:	mov    edi,0x8833c69e
  41d3e8:	sahf   
  41d3e9:	pop    ecx
  41d3ea:	push   es
  41d3eb:	pop    ebx
  41d3ec:	(bad)  
  41d3ed:	in     al,dx
  41d3ee:	popa   
  41d3ef:	sbb    bl,BYTE PTR [ebp-0x1e]
  41d3f2:	mov    al,0x88
  41d3f4:	or     BYTE PTR [ebp+0x298ef80b],dh
  41d3fa:	aam    0xb1
  41d3fc:	dec    eax
  41d3fd:	js     0x41d392
  41d3ff:	loop   0x41d3da
  41d401:	mov    ss,WORD PTR [edi]
  41d403:	mov    ds:0x7278d84,al
  41d408:	push   0x0
  41d40a:	sti    
  41d40b:	jmp    0x41d474
  41d40d:	mov    ah,0xb4
  41d40f:	aas    
  41d410:	bound  ecx,QWORD PTR [esi+0x44]
  41d413:	and    esp,ebp
  41d415:	lods   eax,DWORD PTR ds:[esi]
  41d416:	shl    ecx,0xba
  41d419:	add    DWORD PTR [eax],0xffffffe8
  41d41c:	cwde   
  41d41d:	fbstp  TBYTE PTR [ebp+0x10]
  41d420:	sbb    bh,0x6d
  41d423:	pop    ds
  41d424:	call   0x82cb:0x311c72c6
  41d42b:	or     DWORD PTR ds:0x1d632440,eax
  41d431:	mov    dh,0x28
  41d433:	out    dx,al
  41d434:	xor    al,0xd6
  41d436:	mov    al,ds:0x68522fa0
  41d43b:	xor    DWORD PTR [eax+0x49],esp
  41d43e:	lods   eax,DWORD PTR ds:[esi]
  41d43f:	lea    esp,[edx-0x69]
  41d442:	lods   al,BYTE PTR ds:[esi]
  41d443:	cmp    al,bh
  41d445:	add    al,0x87
  41d447:	dec    edx
  41d448:	frstor [edx]
  41d44a:	or     edi,ecx
  41d44c:	dec    eax
  41d44d:	jg     0x41d448
  41d44f:	inc    edi
  41d450:	call   FWORD PTR [eax-0x75]
  41d453:	pop    ss
  41d454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d455:	mov    BYTE PTR [edx+0x7c9e93ee],ah
  41d45b:	gs in  eax,0xd5
  41d45e:	sub    BYTE PTR [edx+0x41],0x97
  41d462:	jns    0x41d498
  41d464:	inc    BYTE PTR [ebx-0x3]
  41d467:	jnp    0x41d426
  41d469:	mov    DWORD PTR [ebp+ebp*4-0x59],0x477439c0
  41d471:	cdq    
  41d472:	test   eax,0x6c1c4e0a
  41d477:	xchg   ebx,eax
  41d478:	test   BYTE PTR [eax],ch
  41d47a:	xor    DWORD PTR [ecx],eax
  41d47c:	and    eax,0xe8d2069e
  41d481:	cmp    BYTE PTR [ebx],cl
  41d483:	lea    esi,[edi+0x29838ef4]
  41d489:	or     dh,BYTE PTR [ebx+0x27]
  41d48c:	xor    al,0x5f
  41d48e:	mov    ecx,0xf1831db0
  41d493:	and    bh,ah
  41d495:	sub    DWORD PTR [ebx],esi
  41d497:	jo     0x41d4f8
  41d499:	repnz or eax,0x44252257
  41d49f:	jge    0x41d4cd
  41d4a1:	push   ss
  41d4a2:	mov    cl,0x71
  41d4a4:	es mov edx,0x934a8462
  41d4aa:	mov    esp,DWORD PTR [ebx+0x2ef7ab15]
  41d4b0:	mov    dl,0xc7
  41d4b2:	shr    DWORD PTR [ecx+0x493aacc5],cl
  41d4b8:	jge    0x41d46a
  41d4ba:	cwde   
  41d4bb:	sub    BYTE PTR [edx],cl
  41d4bd:	mov    ecx,0x42078990
  41d4c2:	sbb    dh,BYTE PTR [esi+0x3dc25799]
  41d4c8:	sub    al,0x9f
  41d4ca:	dec    ebx
  41d4cb:	sar    BYTE PTR [ecx],0xc1
  41d4ce:	cdq    
  41d4cf:	dec    ecx
  41d4d0:	mov    ch,0x72
  41d4d2:	icebp  
  41d4d3:	cli    
  41d4d4:	sbb    edi,DWORD PTR [esi-0x25c13e40]
  41d4da:	cmc    
  41d4db:	mov    edx,0x28c5810c
  41d4e0:	ret    0xa544
  41d4e3:	mov    bh,BYTE PTR [esi+0x7782e0ec]
  41d4e9:	lods   al,BYTE PTR gs:[esi]
  41d4eb:	ja     0x41d4a6
  41d4ed:	sub    eax,0x94d46ae0
  41d4f2:	sahf   
  41d4f3:	mov    dl,0xd2
  41d4f5:	fstp   TBYTE PTR [eax-0x35]
  41d4f8:	cmp    DWORD PTR [eax+0x25],ecx
  41d4fb:	mov    WORD PTR [edi],ds
  41d4fd:	mov    DWORD PTR [ebp-0x61b5739f],ebx
  41d503:	push   cs
  41d504:	aad    0xef
  41d506:	mov    ah,0xc7
  41d508:	(bad)  
  41d509:	ret    0xfff6
  41d50c:	push   cs
  41d50d:	iret   
  41d50e:	push   0xffffff83
  41d510:	fbstp  TBYTE PTR [ecx+0x4b025189]
  41d516:	jmp    0xad152beb
  41d51b:	jne    0x41d567
  41d51d:	pop    eax
  41d51e:	cld    
  41d51f:	inc    esi
  41d520:	dec    esi
  41d521:	and    eax,0x2cf22fc
  41d526:	out    dx,eax
  41d527:	(bad)  
  41d528:	out    0xd0,al
  41d52a:	mov    esi,0x86991c7a
  41d52f:	or     al,0x6c
  41d531:	loop   0x41d53a
  41d533:	and    BYTE PTR [esi],bl
  41d535:	add    eax,0x1aaea2bb
  41d53a:	rol    BYTE PTR [edx+0x5e],cl
  41d53d:	add    BYTE PTR [eax+0x23],ah
  41d540:	test   al,0xbb
  41d542:	adc    edx,DWORD PTR [edx+0x3104b629]
  41d548:	nop
  41d549:	int    0xd
  41d54b:	ja     0x41d597
  41d54d:	and    dl,BYTE PTR [ebp-0xb]
  41d550:	sahf   
  41d551:	ins    BYTE PTR es:[edi],dx
  41d552:	jmp    0x1cd2a708
  41d557:	jo     0x41d503
  41d559:	aad    0x6b
  41d55b:	add    bl,BYTE PTR [edi+0xb]
  41d55e:	mov    eax,ds:0x83307da4
  41d563:	xlat   BYTE PTR ds:[ebx]
  41d564:	dec    edi
  41d565:	xor    eax,0x5fd39b43
  41d56a:	dec    edx
  41d56b:	ins    DWORD PTR es:[edi],dx
  41d56c:	cdq    
  41d56d:	sub    al,0xb7
  41d56f:	(bad)  
  41d570:	dec    esp
  41d571:	stos   BYTE PTR es:[edi],al
  41d572:	xor    al,0x4e
  41d574:	fistp  WORD PTR [ecx]
  41d576:	outs   dx,BYTE PTR ds:[esi]
  41d577:	aad    0xcd
  41d579:	inc    eax
  41d57b:	mov    edi,0xe14d78ba
  41d580:	jp     0x41d5c1
  41d582:	call   0x83955c45
  41d587:	pop    ebx
  41d588:	jnp    0x41d59a
  41d58a:	in     al,0xbf
  41d58c:	call   0xbde7916b
  41d591:	xchg   esi,eax
  41d592:	scas   eax,DWORD PTR es:[edi]
  41d593:	inc    ebx
  41d594:	adc    bh,BYTE PTR [edx]
  41d596:	lods   al,BYTE PTR ds:[esi]
  41d597:	fbld   TBYTE PTR [ebp+0x26]
  41d59a:	(bad)  
  41d59b:	mov    eax,0xd9665499
  41d5a0:	xlat   BYTE PTR ds:[ebx]
  41d5a1:	idiv   DWORD PTR [eax-0x14]
  41d5a4:	jge    0x41d553
  41d5a6:	cld    
  41d5a7:	imul   ebp,DWORD PTR [esi+0x3a],0xf4935711
  41d5ae:	inc    eax
  41d5af:	mov    edi,ecx
  41d5b1:	add    dl,cl
  41d5b3:	inc    ebp
  41d5b4:	cmp    DWORD PTR [esi+0x324594aa],ebx
  41d5ba:	clc    
  41d5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5bc:	dec    edx
  41d5bd:	das    
  41d5be:	pop    eax
  41d5bf:	push   esi
  41d5c0:	inc    eax
  41d5c1:	lds    esi,FWORD PTR ds:0x1a4e5574
  41d5c7:	adc    eax,0x64529a29
  41d5cc:	(bad)  
  41d5ce:	push   eax
  41d5cf:	jo     0x41d586
  41d5d1:	les    ebp,FWORD PTR [esi]
  41d5d3:	ds xchg edx,eax
  41d5d5:	fwait
  41d5d6:	lods   eax,DWORD PTR ds:[esi]
  41d5d7:	je     0x41d591
  41d5d9:	lea    esp,[ebp+0x315bb1e1]
  41d5df:	xchg   esi,eax
  41d5e0:	in     al,0xd2
  41d5e2:	dec    ebx
  41d5e3:	cmc    
  41d5e4:	fidivr WORD PTR [ebp+0x64]
  41d5e7:	icebp  
  41d5e8:	in     al,dx
  41d5e9:	pop    ebx
  41d5ea:	xchg   edx,eax
  41d5eb:	clc    
  41d5ec:	jmp    0xe0359a40
  41d5f1:	mov    edx,0xbdc43f27
  41d5f6:	scas   al,BYTE PTR es:[edi]
  41d5f7:	mov    al,ds:0x8d40ccfc
  41d5fc:	adc    al,0xf4
  41d5fe:	add    al,0xb0
  41d600:	jae    0x41d5d6
  41d602:	(bad)  
  41d603:	lds    ebp,FWORD PTR [ebp-0x8]
  41d606:	test   eax,0x58db3027
  41d60b:	(bad)  
  41d60d:	fs jecxz 0x41d5d8
  41d610:	push   es
  41d611:	pop    ds
  41d612:	mov    ch,0xf4
  41d614:	loopne 0x41d614
  41d616:	mov    ah,0xac
  41d618:	mov    edx,ds
  41d61a:	sahf   
  41d61b:	push   0xb2fcb24c
  41d620:	bnd jbe 0x41d68e
  41d623:	stos   DWORD PTR es:[edi],eax
  41d624:	xchg   ebp,eax
  41d625:	lods   eax,DWORD PTR ds:[esi]
  41d626:	inc    ecx
  41d627:	fscale 
  41d629:	imul   eax,DWORD PTR [edx],0x2fd3e250
  41d62f:	xchg   edi,eax
  41d630:	arpl   WORD PTR ds:0xed8adb13,dx
  41d636:	adc    BYTE PTR [ebx+0x7eaa2589],bh
  41d63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d63d:	inc    eax
  41d63e:	dec    BYTE PTR [edi]
  41d640:	mov    eax,0x336334b8
  41d645:	xchg   ecx,eax
  41d646:	sbb    BYTE PTR [ebx+0x2a555d03],0x42
  41d64d:	adc    bl,bl
  41d64f:	cli    
  41d650:	ret    
  41d651:	enter  0xef2,0xf2
  41d655:	jno    0x41d680
  41d657:	outs   dx,BYTE PTR ds:[esi]
  41d658:	lods   al,BYTE PTR ds:[esi]
  41d659:	sub    cl,dh
  41d65b:	sbb    BYTE PTR [esi+esi*4-0x29],ch
  41d65f:	dec    edi
  41d660:	sbb    eax,0x95369b11
  41d665:	jne    0x41d5f6
  41d667:	cdq    
  41d668:	pop    eax
  41d669:	lea    ecx,[esi-0x24e26218]
  41d66f:	(bad)  [esi-0x13]
  41d672:	push   ecx
  41d673:	bound  edi,QWORD PTR [ecx+0x22]
  41d676:	sar    BYTE PTR [ebx],0xf2
  41d679:	nop
  41d67a:	ret    
  41d67b:	mov    ch,0x63
  41d67d:	adc    ch,BYTE PTR [edx]
  41d67f:	mov    edx,0xe3e5fb49
  41d684:	and    al,0x6
  41d686:	sub    DWORD PTR [esi-0x1084d3d2],0xffffffa8
  41d68d:	mov    esp,0xfeaa89b0
  41d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d693:	adc    BYTE PTR gs:[esi],dl
  41d696:	cmp    esi,DWORD PTR [ebx]
  41d698:	dec    ebx
  41d69a:	xor    eax,0x402c1018
  41d69f:	cs dec edi
  41d6a1:	xor    esp,edx
  41d6a3:	xor    edi,DWORD PTR [edx+0x6]
  41d6a6:	dec    esp
  41d6a7:	jo     0x41d694
  41d6a9:	outs   dx,DWORD PTR ds:[esi]
  41d6aa:	inc    esp
  41d6ab:	out    0x6a,al
  41d6ad:	and    DWORD PTR [edi+0x4bca0962],edi
  41d6b3:	mov    ds:0x1084114f,eax
  41d6b8:	pop    eax
  41d6b9:	rcr    al,1
  41d6bb:	retf   
  41d6bc:	mov    ebx,0x3cedaa5e
  41d6c1:	rep stos DWORD PTR es:[edi],eax
  41d6c3:	fwait
  41d6c4:	rcl    BYTE PTR [esi],0x28
  41d6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c8:	inc    esi
  41d6c9:	clc    
  41d6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6cb:	shl    DWORD PTR ds:0x9d09e5e,1
  41d6d1:	and    edx,DWORD PTR [ecx+0x20]
  41d6d4:	add    BYTE PTR [esi-0x380d2f39],dl
  41d6da:	loop   0x41d748
  41d6dc:	inc    ecx
  41d6dd:	mov    ds,WORD PTR [edx+0x6b]
  41d6e0:	pop    eax
  41d6e1:	into   
  41d6e2:	mov    ch,0xdc
  41d6e4:	shl    BYTE PTR [esi],cl
  41d6e6:	or     ch,ah
  41d6e8:	mov    ebp,0xec7ad483
  41d6ed:	mov    edx,0xe6e98368
  41d6f2:	xchg   ebp,eax
  41d6f3:	pop    eax
  41d6f4:	sbb    DWORD PTR es:[eax],esi
  41d6f7:	das    
  41d6f8:	xor    eax,0xa58ee156
  41d6fd:	ffreep st(5)
  41d6ff:	ror    DWORD PTR [eax-0x55],1
  41d702:	repnz stos BYTE PTR es:[edi],al
  41d704:	imul   ecx,DWORD PTR [edi],0xffffffe3
  41d707:	out    0xd,al
  41d709:	or     al,BYTE PTR [eax+0x3bdd404f]
  41d70f:	pop    edi
  41d710:	das    
  41d711:	mov    ebx,ebx
  41d713:	inc    edi
  41d714:	out    0xd3,eax
  41d716:	xlat   BYTE PTR ds:[ebx]
  41d717:	inc    eax
  41d718:	sbb    al,0x2c
  41d71a:	fwait
  41d71b:	xchg   ecx,eax
  41d71c:	aad    0xbb
  41d71e:	xor    edi,DWORD PTR [ebp-0x4e]
  41d721:	popa   
  41d722:	in     al,0x7e
  41d724:	pusha  
  41d725:	xchg   DWORD PTR [edi+0x17],esp
  41d728:	cmp    ebp,0x5d3affcb
  41d72e:	pop    eax
  41d72f:	dec    ebx
  41d730:	cmp    BYTE PTR [eax+0x52],ah
  41d733:	popa   
  41d734:	and    eax,0x11031c95
  41d739:	add    eax,0xf10fad07
  41d73e:	test   eax,0xb3f4b18a
  41d743:	inc    eax
  41d744:	scas   eax,DWORD PTR es:[edi]
  41d745:	not    DWORD PTR [edi+0x1335ccd1]
  41d74b:	inc    edi
  41d74c:	cmp    DWORD PTR [edx+0x1aeb022b],eax
  41d752:	(bad)  
  41d753:	sub    ecx,ebp
  41d755:	jb     0x41d6df
  41d757:	shl    BYTE PTR [edi],1
  41d759:	mov    ah,0x7
  41d75b:	mov    ch,0x6f
  41d75d:	loop   0x41d6ec
  41d75f:	add    eax,DWORD PTR [esi+0x3b]
  41d762:	int3   
  41d763:	sub    esi,DWORD PTR [esi]
  41d765:	mov    ds:0xe3ea5e68,al
  41d76a:	adc    BYTE PTR [ecx],0xa6
  41d76d:	and    al,0x7a
  41d76f:	xchg   edi,eax
  41d770:	pop    ecx
  41d771:	mov    ah,0x70
  41d773:	jbe    0x41d7f2
  41d775:	dec    esi
  41d776:	lods   al,BYTE PTR ds:[esi]
  41d777:	(bad)  
  41d778:	(bad)  
  41d779:	jno    0x41d79b
  41d77b:	xchg   ecx,eax
  41d77c:	repz and edx,DWORD PTR [eax]
  41d77f:	push   eax
  41d780:	pcmpgtd mm1,QWORD PTR [ebx]
  41d783:	pop    esi
  41d784:	out    dx,al
  41d785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d786:	bound  ecx,QWORD PTR [ebp+0x682ef8b5]
  41d78c:	test   BYTE PTR [ebx+0x72],bh
  41d78f:	cld    
  41d790:	das    
  41d791:	adc    ah,BYTE PTR [si+0x4f]
  41d795:	das    
  41d796:	inc    ecx
  41d797:	gs dec eax
  41d799:	shl    BYTE PTR [ebx],0x35
  41d79c:	mov    edi,0xfc7ab527
  41d7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7a2:	mov    ebp,DWORD PTR [ebp+0x78]
  41d7a5:	call   0x908c139d
  41d7aa:	aad    0xf6
  41d7ac:	retf   
  41d7ad:	std    
  41d7ae:	test   BYTE PTR [edx+0x67e22173],dh
  41d7b4:	jmp    0xac8d:0xb5efb26a
  41d7bb:	or     edi,DWORD PTR [eax-0x32]
  41d7be:	pop    ss
  41d7bf:	jmp    0xbb42120
  41d7c4:	xrelease mov BYTE PTR [eax-0x5cb84546],ah
  41d7cb:	jecxz  0x41d7cd
  41d7cd:	std    
  41d7ce:	pop    ebp
  41d7cf:	rol    BYTE PTR [esi+0x8],cl
  41d7d2:	sub    al,BYTE PTR [ecx-0x5b58abe3]
  41d7d8:	xor    esi,DWORD PTR [edx+0x1d]
  41d7db:	dec    eax
  41d7dc:	pop    esi
  41d7dd:	popf   
  41d7de:	sbb    eax,0xc084629
  41d7e3:	rcl    esp,1
  41d7e5:	ret    0x6b2
  41d7e8:	sbb    DWORD PTR ds:[edx+0x77],0xffffff90
  41d7ed:	mov    dl,0x4f
  41d7ef:	rcr    bl,0xd6
  41d7f2:	ret    0x175
  41d7f5:	div    BYTE PTR [esp+esi*1-0x37]
  41d7f9:	int3   
  41d7fa:	dec    edi
  41d7fb:	xchg   BYTE PTR [esi-0x63],ch
  41d7fe:	paddw  mm2,QWORD PTR [eax-0x18]
  41d802:	push   edi
  41d803:	retf   0x14e3
  41d806:	bound  eax,QWORD PTR [esi+0x4cdc3bc0]
  41d80c:	sti    
  41d80d:	jae    0x41d7ba
  41d80f:	dec    ecx
  41d810:	and    bl,BYTE PTR [eiz*2+0x2a46c4e4]
  41d817:	cmp    al,0xd3
  41d819:	call   0xa5d3:0x99a4842b
  41d820:	je     0x41d832
  41d822:	and    ecx,DWORD PTR [edx-0x69a44519]
  41d828:	popf   
  41d829:	popa   
  41d82a:	cmp    DWORD PTR [ebp+0xbf189db],0x54cc954f
  41d834:	out    dx,al
  41d835:	cmc    
  41d836:	sub    BYTE PTR [ebp-0x5baacda3],bh
  41d83c:	add    BYTE PTR ds:0xb7c52651,bl
  41d842:	sbb    edi,ebp
  41d844:	mov    al,BYTE PTR ds:0x54b3e366
  41d84a:	xor    BYTE PTR [eax],dl
  41d84c:	shr    BYTE PTR [esp+ebx*4-0x42231c3f],cl
  41d853:	adc    BYTE PTR [ecx],cl
  41d855:	push   edi
  41d856:	cmp    ebp,ecx
  41d858:	xor    eax,0x66b372a9
  41d85d:	out    0x43,eax
  41d85f:	push   ds
  41d860:	rol    BYTE PTR [ebx+0x5a],cl
  41d863:	mov    edx,0xedf95fb9
  41d868:	add    eax,0x4f27abc6
  41d86d:	or     esp,ebp
  41d86f:	pop    ebp
  41d870:	dec    BYTE PTR [esi]
  41d872:	xor    DWORD PTR [edi+0x721273a5],esp
  41d878:	scas   al,BYTE PTR es:[edi]
  41d879:	xchg   edx,eax
  41d87a:	cmp    DWORD PTR [edi-0xc],edi
  41d87d:	and    al,0x1f
  41d87f:	and    al,0xa3
  41d881:	xchg   edi,eax
  41d882:	sbb    DWORD PTR [edx-0x50b50802],esi
  41d888:	nop    DWORD PTR [edi-0x3b]
  41d88c:	pop    ds
  41d88d:	test   DWORD PTR [esi-0x5df70006],ebp
  41d893:	push   0xff16e597
  41d898:	fadd   st,st(7)
  41d89a:	xor    eax,edx
  41d89c:	xlat   BYTE PTR ds:[ebx]
  41d89d:	cwde   
  41d89e:	dec    ebp
  41d89f:	and    al,dh
  41d8a1:	hlt    
  41d8a2:	inc    ebp
  41d8a3:	fcom   QWORD PTR [ecx+0x43]
  41d8a6:	and    BYTE PTR [esi],al
  41d8a8:	add    bl,dl
  41d8aa:	push   ds
  41d8ab:	pop    edi
  41d8ac:	push   cs
  41d8ad:	inc    eax
  41d8ae:	out    dx,al
  41d8af:	and    DWORD PTR [edx+0x26],edi
  41d8b2:	xchg   DWORD PTR [ebx+0x3],esp
  41d8b5:	div    DWORD PTR [esi+0x59]
  41d8b8:	sar    BYTE PTR [edi+0x47],0x8e
  41d8bc:	lea    ebx,[ecx]
  41d8be:	sub    dh,BYTE PTR [edx+0x6667a4c6]
  41d8c4:	mov    edi,edi
  41d8c6:	jnp    0x41d8b1
  41d8c8:	and    ebx,DWORD PTR [ebx]
  41d8ca:	push   ebx
  41d8cb:	and    eax,0xe2d7a8fc
  41d8d0:	sub    eax,DWORD PTR ds:0x6f5f4b5
  41d8d6:	js     0x41d943
  41d8d8:	cmp    dl,BYTE PTR [edx+0x50eeb5bc]
  41d8de:	scas   eax,DWORD PTR es:[edi]
  41d8df:	dec    ecx
  41d8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e1:	xchg   edi,eax
  41d8e2:	or     eax,0x53c665a8
  41d8e7:	popf   
  41d8e8:	out    0x14,eax
  41d8ea:	jp     0x41d8a7
  41d8ec:	and    DWORD PTR [edx+ebx*2+0x1438864f],edx
  41d8f3:	jbe    0x41d90d
  41d8f5:	in     al,0x70
  41d8f7:	stos   DWORD PTR es:[edi],eax
  41d8f8:	jae    0x41d929
  41d8fa:	sbb    eax,0x52689414
  41d8ff:	or     al,ah
  41d901:	push   0xffffff97
  41d903:	adc    edi,DWORD PTR [eax-0x56ecaccb]
  41d909:	pop    DWORD PTR [esp+ecx*1-0x5c59ccca]
  41d910:	es jb  0x41d94d
  41d913:	pop    es
  41d914:	push   cs
  41d915:	inc    edx
  41d916:	adc    edx,DWORD PTR [eax+0x34]
  41d919:	sti    
  41d91a:	in     al,dx
  41d91b:	dec    ebp
  41d91c:	and    DWORD PTR [ebp+0xd8229c8],ecx
  41d922:	add    ebp,0xffffff9b
  41d925:	and    al,0xc6
  41d927:	mov    cl,0xfc
  41d929:	push   0xb4dd78d3
  41d92e:	mov    edx,0x51122a2d
  41d933:	(bad)  
  41d935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d936:	push   0x3c
  41d938:	add    BYTE PTR ds:0xae33d1f3,0x40
  41d93f:	mov    dl,0xfe
  41d941:	aaa    
  41d942:	(bad)  
  41d943:	sbb    edi,esi
  41d945:	leave  
  41d946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d947:	jmp    0xa090c9b8
  41d94c:	je     0x41d965
  41d94e:	push   ss
  41d94f:	imul   ebx,DWORD PTR [ebx],0xffffff84
  41d952:	and    BYTE PTR [esi-0x3d910529],cl
  41d958:	cdq    
  41d959:	nop
  41d95a:	iret   
  41d95b:	sti    
  41d95c:	cdq    
  41d95d:	push   edx
  41d95e:	and    eax,DWORD PTR [ecx-0x2f]
  41d961:	pushf  
  41d962:	scas   eax,DWORD PTR es:[edi]
  41d963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d964:	push   ebx
  41d965:	dec    ecx
  41d966:	mov    bh,0x67
  41d968:	and    BYTE PTR [edi],ah
  41d96a:	bound  ebx,QWORD PTR ds:0x5c0b1ca1
  41d970:	aad    0xd4
  41d972:	adc    eax,0x958ae90b
  41d977:	inc    ebp
  41d978:	retf   
  41d979:	mov    al,0xdb
  41d97b:	test   al,0xee
  41d97d:	cmc    
  41d97e:	iret   
  41d97f:	mov    bl,0x83
  41d981:	mov    gs,ecx
  41d983:	not    BYTE PTR [edi+edi*4]
  41d986:	or     DWORD PTR [ecx+0x153c7a03],esp
  41d98c:	call   0x786f58c5
  41d991:	out    dx,eax
  41d992:	lock mov ebp,0xf8407c83
  41d998:	ins    BYTE PTR es:[edi],dx
  41d999:	retf   
  41d99a:	shl    BYTE PTR [ebx+0x5c8eb4f2],cl
  41d9a0:	jno    0x41d95a
  41d9a2:	dec    ebx
  41d9a3:	in     al,dx
  41d9a4:	xor    eax,0x1af944f7
  41d9a9:	pop    ss
  41d9aa:	js     0x41d9fb
  41d9ac:	ds xchg esp,eax
  41d9ae:	sub    al,0x7d
  41d9b0:	cwde   
  41d9b1:	lahf   
  41d9b2:	out    dx,al
  41d9b3:	sar    edx,1
  41d9b5:	iret   
  41d9b6:	sbb    BYTE PTR [eax],ah
  41d9b8:	or     eax,0x359b658f
  41d9bd:	pop    ds
  41d9be:	dec    eax
  41d9bf:	mov    ds:0xdc76924,al
  41d9c4:	sbb    DWORD PTR gs:[ebx+eax*2-0x17],ebx
  41d9c9:	inc    ebp
  41d9ca:	stos   BYTE PTR es:[edi],al
  41d9cb:	pushf  
  41d9cc:	fdivr  DWORD PTR [esi+0x51ab0884]
  41d9d2:	pop    ebx
  41d9d3:	push   ecx
  41d9d4:	xor    eax,0xcbf336c8
  41d9d9:	dec    eax
  41d9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9db:	push   esp
  41d9dc:	or     eax,0xf5ae1123
  41d9e1:	add    BYTE PTR [eiz*8-0x12ebe87c],ah
  41d9e8:	xor    al,0xaa
  41d9ea:	sbb    ah,0x8a
  41d9ed:	xchg   edi,eax
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	rcl    DWORD PTR [ebx],cl
  41d9f1:	clc    
  41d9f2:	push   esp
  41d9f3:	out    0x60,al
  41d9f5:	(bad)  
  41d9f6:	popa   
  41d9f7:	cmc    
  41d9f8:	test   eax,0x4d863ee
  41d9fd:	pop    ecx
  41d9fe:	je     0x41d9c2
  41da00:	imul   esp,DWORD PTR [edi-0x20],0x4de0ec37
  41da07:	into   
  41da08:	shl    ebx,1
  41da0a:	and    eax,DWORD PTR ds:[esi]
  41da0d:	jge    0x41d9a8
  41da0f:	cmp    DWORD PTR [ecx],ecx
  41da11:	jl     0x41da7b
  41da13:	(bad)  
  41da14:	in     eax,dx
  41da15:	call   0x4e1caed7
  41da1a:	jmp    0x41da34
  41da1c:	fnstsw WORD PTR [ebx+0x51]
  41da1f:	xor    al,0x5f
  41da21:	adc    eax,0xac4e258e
  41da26:	fdiv   QWORD PTR [ecx+0x1b]
  41da29:	xor    eax,DWORD PTR fs:[ecx+0x38]
  41da2d:	dec    eax
  41da2e:	adc    ch,BYTE PTR [ebp+0x2b196c18]
  41da34:	push   cs
  41da35:	pop    ds
  41da36:	out    dx,al
  41da37:	push   cs
  41da38:	dec    edi
  41da39:	bound  esi,QWORD PTR [eax-0x6016b20e]
  41da3f:	push   ds
  41da40:	sbb    eax,0x402b3f9f
  41da45:	ss cmp ah,dl
  41da48:	jge    0x41d9d5
  41da4a:	sbb    DWORD PTR [ecx+0x33b18ba1],0x4313b7c0
  41da54:	int3   
  41da55:	ror    ebp,0xcc
  41da58:	mov    bh,0xbe
  41da5a:	adc    DWORD PTR [edi-0x26],esp
  41da5d:	mov    dh,0xcd
  41da5f:	lea    ebx,[edi+0x34a2beaf]
  41da65:	adc    ah,ch
  41da67:	lock popa 
  41da69:	or     edi,DWORD PTR [ebx+edx*1+0x5ab520b5]
  41da70:	push   edx
  41da71:	pop    esp
  41da72:	iret   
  41da73:	xor    eax,0x221d2474
  41da78:	jne    0x41da4d
  41da7a:	lods   al,BYTE PTR ds:[esi]
  41da7b:	and    al,BYTE PTR [edi]
  41da7d:	mov    dl,0x48
  41da7f:	hlt    
  41da80:	mov    ebx,0x15e5c0c
  41da85:	(bad)  
  41da86:	test   eax,0x3f50f7cc
  41da8b:	fidiv  WORD PTR ds:0xf1d39934
  41da91:	xchg   edx,eax
  41da92:	sbb    eax,0xcb03d90b
  41da97:	add    dh,BYTE PTR [ebx-0x1f562f95]
  41da9d:	in     al,0xad
  41da9f:	cmp    ebp,DWORD PTR [ebx]
  41daa1:	pop    ebx
  41daa2:	xchg   ebx,eax
  41daa3:	js     0x41da88
  41daa5:	aad    0xbb
  41daa7:	xchg   ebp,eax
  41daa8:	rcr    DWORD PTR [eax],cl
  41daaa:	mov    eax,ds:0x390cfc87
  41daaf:	and    ebp,DWORD PTR [edi]
  41dab1:	shl    DWORD PTR [eax],0xc4
  41dab4:	or     DWORD PTR ds:0x968adff7,ebp
  41daba:	call   0xee2d:0xc6fa364c
  41dac1:	add    ecx,DWORD PTR [ebx]
  41dac3:	(bad)  
  41dac4:	repz mov ss:0x62289d08,eax
  41dacb:	mov    ecx,DWORD PTR [ebx-0x6e85f43e]
  41dad1:	pop    edx
  41dad2:	mov    esp,0x98a0e126
  41dad7:	jmp    0x21a8f028
  41dadc:	and    dh,BYTE PTR [ebp-0x73]
  41dadf:	xchg   ecx,eax
  41dae0:	mov    ch,0xaf
  41dae2:	pusha  
  41dae3:	pop    ebx
  41dae4:	jnp    0x41da9c
  41dae6:	mov    esi,0xc12819e9
  41daeb:	fnstsw WORD PTR [esi]
  41daed:	push   0x3439fbca
  41daf2:	inc    ebp
  41daf3:	inc    esi
  41daf4:	push   ecx
  41daf5:	loope  0x41dad3
  41daf7:	jmp    0x9906098a
  41dafc:	or     cl,ch
  41dafe:	inc    ecx
  41daff:	loop   0x41db65
  41db01:	fstp   DWORD PTR [esi+0x75]
  41db04:	and    eax,0x8fb82ff5
  41db09:	mov    eax,0xf43a2f4e
  41db0e:	fild   WORD PTR [eax+0x353ab85a]
  41db14:	stos   BYTE PTR es:[edi],al
  41db15:	hlt    
  41db16:	(bad)  
  41db17:	bound  ebx,QWORD PTR [ebp-0x2c45d7e0]
  41db1d:	popf   
  41db1e:	stos   BYTE PTR es:[edi],al
  41db1f:	ret    0xf9b2
  41db22:	push   esp
  41db23:	jae    0x41db00
  41db25:	cdq    
  41db26:	jg     0x41db74
  41db28:	outs   dx,DWORD PTR ds:[esi]
  41db29:	and    cl,BYTE PTR [eax-0x1dac2756]
  41db2f:	jno    0x41dac3
  41db31:	repnz push ebp
  41db33:	xor    ebx,DWORD PTR [eax+0x13]
  41db36:	cmp    al,0xf0
  41db38:	in     al,0xa0
  41db3a:	jmp    0x41db40
  41db3c:	and    bh,dl
  41db3e:	mov    bl,0x67
  41db40:	inc    edx
  41db41:	pop    DWORD PTR [edi+0x25ac5547]
  41db47:	push   ebp
  41db48:	outs   dx,BYTE PTR ds:[esi]
  41db49:	or     al,0xf3
  41db4b:	jae    0x41db0c
  41db4d:	lahf   
  41db4e:	out    0xb6,al
  41db50:	aad    0x50
  41db52:	mov    ch,0xbc
  41db54:	jle    0x41db00
  41db56:	cli    
  41db57:	adc    BYTE PTR [ecx],cl
  41db59:	stc    
  41db5a:	dec    esi
  41db5b:	repz shr BYTE PTR [eax-0x6b252cb8],0x85
  41db63:	inc    ebx
  41db64:	sbb    ebx,esi
  41db66:	mov    bl,0x8b
  41db68:	pop    eax
  41db69:	mov    ds:0xa14224d4,al
  41db6e:	mov    eax,ds:0xb05b3591
  41db73:	ss pop es
  41db75:	mov    cl,0x8a
  41db77:	repnz outs dx,DWORD PTR ds:[esi]
  41db79:	or     DWORD PTR [edx+0x47432a85],esi
  41db7f:	mov    edx,0x5ea46d1b
  41db84:	dec    ecx
  41db85:	jae    0x41db6c
  41db87:	loopne 0x41db59
  41db89:	push   esi
  41db8a:	out    dx,eax
  41db8b:	test   DWORD PTR [eax+0x73],0xc9d25c3b
  41db92:	inc    esi
  41db93:	mov    ebp,0x281068de
  41db98:	(bad)  
  41db99:	fld    DWORD PTR [edi]
  41db9b:	loop   0x41dbed
  41db9d:	fnstsw WORD PTR [ebx+0x4d]
  41dba0:	push   es
  41dba1:	push   esp
  41dba2:	cmp    eax,0xd64cc3c
  41dba7:	xchg   DWORD PTR [ebx+0x24],esi
  41dbaa:	ja     0x41db8a
  41dbac:	sbb    ah,ah
  41dbae:	push   edi
  41dbaf:	ror    dl,1
  41dbb1:	aad    0x20
  41dbb3:	test   eax,0x778400f
  41dbb8:	fisttp DWORD PTR [edx]
  41dbba:	fisubr DWORD PTR [edi]
  41dbbc:	jl     0x41db96
  41dbbe:	cld    
  41dbbf:	popa   
  41dbc0:	shl    esi,1
  41dbc2:	das    
  41dbc3:	fmul   st(6),st
  41dbc5:	sbb    al,0x7
  41dbc7:	xor    DWORD PTR [edi+eiz*4+0xb0f806b],ecx
  41dbce:	inc    ebp
  41dbcf:	mov    edi,0x268a4
  41dbd4:	adc    al,0x90
  41dbd6:	xchg   ecx,eax
  41dbd7:	adc    BYTE PTR [esi],ch
  41dbd9:	(bad)  
  41dbdb:	mov    edi,0x32725498
  41dbe0:	in     eax,0xf7
  41dbe2:	pop    ebp
  41dbe3:	scas   al,BYTE PTR es:[edi]
  41dbe4:	push   ebp
  41dbe5:	std    
  41dbe6:	and    BYTE PTR [bp+si],cl
  41dbe9:	dec    eax
  41dbea:	xor    DWORD PTR [edi-0x257c90d6],esi
  41dbf0:	jne    0x41dbba
  41dbf2:	leave  
  41dbf3:	jno    0x41dc3e
  41dbf5:	jmp    0x6d94:0x9e467b14
  41dbfc:	ror    BYTE PTR [esi-0x2a610cbc],0xb9
  41dc03:	fdivr  DWORD PTR [edi+ebx*4+0x2534afe6]
  41dc0a:	repz mov dh,0x1d
  41dc0d:	cwde   
  41dc0e:	fsubr  DWORD PTR [ebx-0x25f6c181]
  41dc14:	push   ds
  41dc15:	in     eax,dx
  41dc16:	popa   
  41dc17:	rcr    BYTE PTR [ebp+0x37],cl
  41dc1a:	jl     0x41dc7c
  41dc1c:	jp     0x41dc15
  41dc1e:	fwait
  41dc1f:	lahf   
  41dc20:	adc    eax,0xdb438fca
  41dc25:	aaa    
  41dc26:	adc    dl,BYTE PTR [eax+0x4e]
  41dc29:	(bad)  
  41dc2a:	loop   0x41dbb9
  41dc2c:	popa   
  41dc2d:	pop    edx
  41dc2e:	lahf   
  41dc2f:	test   DWORD PTR [edx+esi*4],ebx
  41dc32:	mov    esi,0xd4e3865a
  41dc37:	adc    BYTE PTR [esi],bl
  41dc39:	add    cl,ah
  41dc3b:	mov    dh,0xba
  41dc3d:	mov    dl,0x8e
  41dc3f:	adc    BYTE PTR [edi+0x25],0xf0
  41dc43:	or     eax,DWORD PTR [ebx-0x16]
  41dc46:	scas   al,BYTE PTR es:[edi]
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fdiv   QWORD PTR [edi+0x10]
  41dc4b:	pop    ebp
  41dc4c:	ret    
  41dc4d:	add    esi,DWORD PTR [edx+eiz*2]
  41dc50:	inc    esp
  41dc51:	fiadd  DWORD PTR [edx]
  41dc53:	mov    WORD PTR [esi],es
  41dc55:	xor    DWORD PTR [ebx],0x5df5795b
  41dc5b:	and    al,ch
  41dc5d:	ins    DWORD PTR es:[edi],dx
  41dc5e:	and    DWORD PTR [ebx],esi
  41dc60:	push   0x62e7c0e4
  41dc65:	test   cl,dl
  41dc67:	pop    ss
  41dc68:	sbb    ch,BYTE PTR [edi-0x2d]
  41dc6b:	add    BYTE PTR [edi+0x5c],0xb4
  41dc6f:	inc    ebp
  41dc70:	outs   dx,DWORD PTR ds:[esi]
  41dc71:	scas   eax,DWORD PTR es:[edi]
  41dc72:	cmp    BYTE PTR [esi+0x202fd977],0x80
  41dc79:	push   ecx
  41dc7a:	jp     0x41dc78
  41dc7c:	cld    
  41dc7d:	les    esi,FWORD PTR [esi-0x360fa257]
  41dc83:	nop/reserved BYTE PTR [ecx+ecx*4-0x3b]
  41dc88:	or     DWORD PTR [ecx],ebx
  41dc8a:	test   BYTE PTR [ecx-0x4f],cl
  41dc8d:	lods   al,BYTE PTR ds:[esi]
  41dc8e:	and    BYTE PTR [eax+0x4f],0xdc
  41dc92:	xlat   BYTE PTR ds:[ebx]
  41dc93:	jle    0x41dc76
  41dc95:	es inc esi
  41dc97:	retf   0x6d78
  41dc9a:	fadd   st(0),st
  41dc9c:	lods   eax,DWORD PTR ds:[esi]
  41dc9d:	sub    esp,DWORD PTR [ebx]
  41dc9f:	int3   
  41dca0:	pushw  0x5ddb
  41dca4:	and    eax,0xe7ed2af3
  41dca9:	in     al,0x8c
  41dcab:	cwde   
  41dcac:	adc    BYTE PTR [edi],bl
  41dcae:	aam    0x32
  41dcb0:	test   BYTE PTR [edx],0x88
  41dcb3:	lods   eax,DWORD PTR ds:[esi]
  41dcb4:	aam    0xf2
  41dcb6:	push   esp
  41dcb7:	xor    BYTE PTR [edx],bl
  41dcb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcba:	lods   eax,DWORD PTR ds:[esi]
  41dcbb:	and    eax,0xd1faa051
  41dcc0:	mov    dh,ch
  41dcc2:	popf   
  41dcc3:	jbe    0x41dc4c
  41dcc5:	fs dec edi
  41dcc7:	cmp    al,0x12
  41dcc9:	xchg   DWORD PTR [edx+eiz*1-0x47f8904c],ebp
  41dcd0:	cmp    al,0x99
  41dcd2:	clc    
  41dcd3:	pop    edx
  41dcd4:	test   al,0x8d
  41dcd6:	aaa    
  41dcd7:	mov    fs,eax
  41dcd9:	outs   dx,DWORD PTR ds:[esi]
  41dcda:	xor    eax,0xc30e031e
  41dcdf:	xor    eax,0xd2f82852
  41dce4:	jo     0x41dd1e
  41dce6:	adc    DWORD PTR ds:0xc05822ca,edx
  41dcec:	pusha  
  41dced:	jbe    0x41dc76
  41dcef:	mov    DWORD PTR [ecx-0x114e7089],eax
  41dcf5:	imul   ebx,ebp,0x10da961a
  41dcfb:	add    ecx,DWORD PTR [eax+0x62138007]
  41dd01:	xchg   esp,eax
  41dd02:	adc    al,dl
  41dd04:	mov    eax,ds:0xb99d6ba5
  41dd09:	fsub   DWORD PTR [ebx-0x44]
  41dd0c:	xchg   edi,eax
  41dd0d:	jno    0x41dcdd
  41dd0f:	mov    esi,0xf16e9bf2
  41dd14:	retf   0xe62d
  41dd17:	aas    
  41dd18:	sbb    eax,0xbbfaac2d
  41dd1d:	and    al,0x42
  41dd1f:	(bad)  
  41dd20:	or     BYTE PTR [ebx],cl
  41dd22:	mov    edi,es
  41dd24:	add    DWORD PTR [edi],esp
  41dd26:	sub    ebp,ebp
  41dd28:	mov    ds:0xfa8938c3,eax
  41dd2d:	adc    bl,bh
  41dd2f:	inc    ecx
  41dd30:	sbb    DWORD PTR [ecx-0x630f35dd],esp
  41dd36:	cmovs  esp,DWORD PTR [edi+0x30]
  41dd3a:	retf   
  41dd3b:	rcr    DWORD PTR [edx-0x72],cl
  41dd3e:	and    ecx,DWORD PTR [edx+0x38]
  41dd41:	lds    edx,FWORD PTR ds:0x6b26624b
  41dd47:	je     0x41dd84
  41dd49:	(bad)  
  41dd4a:	sub    eax,0x8139b667
  41dd4f:	jae    0x41ddcc
  41dd51:	and    BYTE PTR [edi+eax*4-0x48],bh
  41dd55:	outs   dx,DWORD PTR ds:[esi]
  41dd56:	xor    DWORD PTR [esi],esp
  41dd58:	clc    
  41dd59:	or     al,0x20
  41dd5b:	mov    dl,ah
  41dd5d:	int3   
  41dd5e:	imul   eax,esi,0x21
  41dd61:	xor    al,0xe3
  41dd63:	push   0xa310d9e
  41dd68:	call   0x2439:0x9cc05893
  41dd6f:	test   eax,0x98091902
  41dd74:	stos   BYTE PTR es:[edi],al
  41dd75:	cdq    
  41dd76:	in     al,dx
  41dd77:	ss dec eax
  41dd79:	dec    edx
  41dd7a:	add    ch,BYTE PTR [ebp-0x46176b6a]
  41dd80:	xor    DWORD PTR [esi-0x77],esi
  41dd83:	call   0x54ff4a0f
  41dd88:	xor    esi,DWORD PTR [ebp+0x54]
  41dd8b:	mov    dl,0xc3
  41dd8d:	and    DWORD PTR [edi+0x72],0xabeca135
  41dd94:	pop    ebx
  41dd95:	or     BYTE PTR [ecx],0x45
  41dd98:	xchg   edi,eax
  41dd99:	push   cs
  41dd9a:	mov    al,al
  41dd9c:	sahf   
  41dd9d:	sub    dh,BYTE PTR [eax*2-0x55ce6940]
  41dda4:	dec    esp
  41dda5:	sub    eax,0xf69f41e7
  41ddaa:	sbb    cl,BYTE PTR [edi]
  41ddac:	cmp    al,0x9
  41ddae:	and    ebp,eax
  41ddb0:	cmp    al,0xd6
  41ddb2:	gs cmp eax,0x6741fd18
  41ddb8:	retf   
  41ddb9:	jmp    FWORD PTR [edx]
  41ddbb:	mov    DWORD PTR [ebx],esp
  41ddbd:	push   es
  41ddbe:	push   edx
  41ddbf:	xor    al,0xd
  41ddc1:	test   DWORD PTR [edi-0x5d6a81a6],eax
  41ddc7:	mov    edx,0x12ba4cb2
  41ddcc:	aad    0xf9
  41ddce:	xchg   edi,eax
  41ddcf:	mov    BYTE PTR [ecx+0x39b25dc],bh
  41ddd5:	pop    esp
  41ddd6:	add    al,0x67
  41ddd8:	test   BYTE PTR [esi+ecx*2+0x1b6f80de],ah
  41dddf:	cmp    BYTE PTR [ebx+edi*2+0x6a315737],ah
  41dde6:	xchg   BYTE PTR [ecx-0x2],cl
  41dde9:	xchg   ecx,eax
  41ddea:	jp     0x41de5c
  41ddec:	push   edx
  41dded:	hlt    
  41ddee:	cmp    BYTE PTR [esi+0xcdb14ec],0xb
  41ddf5:	xchg   di,ax
  41ddf7:	shl    dl,0x4b
  41ddfa:	dec    ebx
  41ddfb:	js     0x41de3b
  41ddfd:	sub    BYTE PTR ds:[ebp-0x53594497],bl
  41de04:	mov    ds,WORD PTR [edi]
  41de06:	cdq    
  41de07:	bound  ecx,QWORD PTR ds:0xc225132f
  41de0d:	inc    edx
  41de0e:	out    dx,al
  41de0f:	clc    
  41de10:	pop    ecx
  41de11:	jg     0x41ddc3
  41de13:	test   eax,0xb9fefb03
  41de18:	or     eax,edx
  41de1a:	dec    edi
  41de1b:	icebp  
  41de1c:	out    dx,eax
  41de1d:	adc    al,BYTE PTR [ebx]
  41de1f:	mov    cl,0x9d
  41de21:	cmp    BYTE PTR [eax+0x46dab136],0x1a
  41de28:	cmp    ebx,ebx
  41de2a:	fcomp  DWORD PTR [eax+edx*4-0x7105d539]
  41de31:	xor    DWORD PTR ds:0x91ce381b,esp
  41de37:	jo     0x41ddd9
  41de39:	clc    
  41de3a:	aaa    
  41de3b:	in     eax,0xf5
  41de3d:	add    eax,DWORD PTR [eax-0xedcd23e]
  41de43:	and    DWORD PTR [edi],edx
  41de45:	xchg   ebp,eax
  41de46:	fsub   st,st(6)
  41de48:	xlat   BYTE PTR ds:[ebx]
  41de49:	inc    ebx
  41de4a:	outs   dx,DWORD PTR ds:[esi]
  41de4b:	fnsetpm(287 only) 
  41de4d:	sub    al,BYTE PTR [ebx+0x70846dcc]
  41de53:	add    ebp,DWORD PTR [ebx-0x31cc599]
  41de59:	js     0x41dde0
  41de5b:	shl    BYTE PTR [ebx-0x5afd21a3],cl
  41de61:	or     bh,BYTE PTR fs:0x5e7c2b76
  41de68:	push   ebx
  41de69:	stos   BYTE PTR es:[edi],al
  41de6a:	(bad)  
  41de6b:	xchg   ebp,eax
  41de6c:	sub    bh,BYTE PTR [edx+edi*8+0x3201698a]
  41de73:	jp     0x41de8c
  41de75:	mov    ds:0x55bf28b3,al
  41de7a:	jmp    0x415c:0xd486b3e6
  41de81:	push   0x26
  41de83:	sub    DWORD PTR [ecx-0x4b],esi
  41de86:	dec    edx
  41de87:	in     al,dx
  41de88:	in     al,0x93
  41de8a:	push   cs
  41de8b:	and    eax,DWORD PTR [edx]
  41de8d:	cmp    al,0xa6
  41de8f:	push   eax
  41de90:	xlat   BYTE PTR ds:[ebx]
  41de91:	xor    BYTE PTR [esi+0x75],ch
  41de94:	lahf   
  41de95:	xor    dl,BYTE PTR [eax+0x45]
  41de98:	jmp    0x41de83
  41de9a:	ins    BYTE PTR es:[edi],dx
  41de9b:	jbe    0x41de22
  41de9d:	xor    ah,BYTE PTR [ecx]
  41de9f:	cdq    
  41dea0:	pop    esi
  41dea1:	sbb    eax,0x350c340a
  41dea6:	dec    esi
  41dea7:	mov    esi,0x615c97d5
  41deac:	push   ebp
  41dead:	(bad)  
  41deae:	ds das 
  41deb0:	jo     0x41de4e
  41deb2:	popa   
  41deb3:	lock dec edx
  41deb5:	jl     0x41de81
  41deb7:	retf   
  41deb8:	(bad)  
  41deb9:	(bad)  
  41deba:	fcmovu st,st(0)
  41debc:	and    bl,dh
  41debe:	and    DWORD PTR [edx-0x41f81996],esi
  41dec4:	fnstsw WORD PTR [ecx+edx*8-0x63dc1201]
  41decb:	test   BYTE PTR [edx],dh
  41decd:	fs lock stc 
  41ded0:	xchg   ecx,eax
  41ded1:	ins    DWORD PTR es:[edi],dx
  41ded2:	pop    ebx
  41ded3:	aam    0xf2
  41ded5:	std    
  41ded6:	push   ecx
  41ded7:	mov    ah,0x1
  41ded9:	pushf  
  41deda:	fnstenv [edx+0xa]
  41dedd:	iret   
  41dede:	xor    BYTE PTR [edx-0x4254456e],cl
  41dee4:	lock lock push DWORD PTR [edx]
  41dee8:	cmp    al,0x1e
  41deea:	push   eax
  41deeb:	sub    edx,DWORD PTR [eax+0x6c4c435b]
  41def1:	out    dx,al
  41def2:	push   cs
  41def3:	ficom  DWORD PTR [ecx-0x5f]
  41def6:	into   
  41def7:	fimul  WORD PTR [eax-0x25]
  41defa:	int    0x7b
  41defc:	xchg   BYTE PTR [eax+0x349d250a],ch
  41df02:	and    al,BYTE PTR [esi+0x34]
  41df05:	(bad)  
  41df06:	lods   al,BYTE PTR ds:[esi]
  41df07:	call   0x989e8004
  41df0c:	jno    0x41df05
  41df0e:	test   BYTE PTR [ebx+ecx*1-0x57],ch
  41df12:	lock pop edi
  41df14:	add    ecx,edi
  41df16:	in     al,dx
  41df17:	in     eax,dx
  41df18:	inc    esi
  41df19:	mov    cl,BYTE PTR [esi]
  41df1b:	lods   al,BYTE PTR ds:[esi]
  41df1c:	xchg   edx,eax
  41df1d:	xchg   BYTE PTR [edx],cl
  41df1f:	test   eax,0x7580ab99
  41df24:	sub    edi,DWORD PTR [edi+0x6a]
  41df27:	jne    0x41df6e
  41df29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2a:	stc    
  41df2b:	je     0x41deb8
  41df2d:	out    dx,al
  41df2e:	leave  
  41df2f:	sbb    dh,dh
  41df31:	inc    ebx
  41df32:	(bad)  
  41df33:	dec    ebx
  41df34:	stc    
  41df35:	repnz push 0xc395d3f0
  41df3b:	popa   
  41df3c:	lods   eax,DWORD PTR ds:[esi]
  41df3d:	inc    eax
  41df3e:	data16 mov cl,0xa7
  41df42:	or     DWORD PTR ss:[ebx],esi
  41df45:	pop    ebx
  41df46:	cmp    dl,ah
  41df48:	jge    0x41df4c
  41df4a:	(bad)  
  41df4b:	das    
  41df4c:	mov    dh,0x73
  41df4e:	stos   DWORD PTR es:[edi],eax
  41df4f:	cld    
  41df50:	inc    esi
  41df51:	out    0xbc,eax
  41df53:	leave  
  41df54:	xor    dh,BYTE PTR [eax]
  41df56:	mov    edx,0x7dde3e86
  41df5b:	mov    ah,0x11
  41df5d:	les    edx,FWORD PTR [edx+eiz*8-0x6d645095]
  41df64:	outs   dx,BYTE PTR ds:[esi]
  41df65:	jmp    0x26a2044b
  41df6a:	sub    eax,0x68db8963
  41df6f:	test   eax,0x74b9eafd
  41df74:	jge    0x41dfa4
  41df76:	xor    eax,DWORD PTR [ecx+0x3f8d1fd6]
  41df7c:	add    ebx,DWORD PTR [esi-0xd]
  41df7f:	adc    ebx,esp
  41df81:	dec    edi
  41df82:	(bad)  
  41df83:	or     eax,0x1c81af0d
  41df88:	aad    0x9e
  41df8a:	popa   
  41df8b:	(bad)  
  41df8c:	fwait
  41df8d:	mov    ecx,DWORD PTR [ecx+0x77]
  41df90:	rol    DWORD PTR [ebp+0x43a933c1],0xea
  41df97:	mov    ch,0xb5
  41df99:	mov    dh,0xae
  41df9b:	fs sti 
  41df9d:	ss mov ch,0x7a
  41dfa0:	jle    0x41df96
  41dfa2:	mov    ss,WORD PTR [ebx]
  41dfa4:	cld    
  41dfa5:	fisub  WORD PTR [ebx]
  41dfa7:	and    DWORD PTR [esi],ebx
  41dfa9:	fmul   DWORD PTR [esi+ebx*8-0x5e761b36]
  41dfb0:	mov    DWORD PTR ds:0x13c20582,ecx
  41dfb6:	xor    dl,BYTE PTR es:[esi+ecx*1]
  41dfba:	clc    
  41dfbb:	mov    ebx,0x4f3b1e5f
  41dfc0:	mov    esi,0x2befcc9c
  41dfc5:	mov    edx,0xfe1919c2
  41dfca:	fld    TBYTE PTR [esi]
  41dfcc:	push   0xfffffff3
  41dfce:	retf   
  41dfcf:	dec    edx
  41dfd0:	add    al,0x67
  41dfd2:	adc    cl,BYTE PTR [ebp-0x7f]
  41dfd5:	jmp    0xdf79:0xfeee3258
  41dfdc:	js     0x41dfa0
  41dfde:	pop    esp
  41dfdf:	xor    ebp,DWORD PTR [ecx]
  41dfe1:	cs cld 
  41dfe3:	in     al,dx
  41dfe4:	fwait
  41dfe5:	sbb    eax,0xe5dff7f4
  41dfea:	add    DWORD PTR [ecx+esi*4-0x33540baa],edi
  41dff1:	push   ebx
  41dff2:	int    0x68
  41dff4:	aas    
  41dff5:	cmc    
  41dff6:	add    ebx,DWORD PTR [ecx+0x415d9ff0]
  41dffc:	fdivr  DWORD PTR [ecx-0x32826145]
  41e002:	mov    esi,0x29c1f3ef
  41e007:	jb     0x41e04f
  41e009:	adc    dl,0x94
  41e00c:	xchg   edi,eax
  41e00d:	jl     0x41e03e
  41e00f:	or     esi,esp
  41e011:	jbe    0x41df9e
  41e013:	fisubr DWORD PTR [edx+0x6d17b3b0]
  41e019:	dec    ebp
  41e01a:	sbb    DWORD PTR [eax-0x89f487e],ecx
  41e020:	loope  0x41e060
  41e022:	fiadd  WORD PTR [edx]
  41e024:	fistp  WORD PTR ds:0x9cfdfa0e
  41e02a:	cld    
  41e02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02c:	xor    edx,ebp
  41e02e:	shl    BYTE PTR [esi+0x6db66af5],0x1
  41e035:	arpl   bx,cx
  41e037:	jmp    DWORD PTR [eax-0x7a4647ee]
  41e03d:	repnz push edx
  41e03f:	dec    edi
  41e040:	sub    al,0x92
  41e042:	sub    eax,esp
  41e044:	mov    BYTE PTR [edi+0xd2b45a5],0x46
  41e04b:	fcomp  DWORD PTR [ebp-0x1ce31a5e]
  41e051:	xor    al,0x15
  41e053:	jp     0x41e031
  41e055:	and    al,BYTE PTR [edi+esi*4-0x7f58c7ed]
  41e05c:	enter  0xcfd2,0xfb
  41e060:	icebp  
  41e061:	lea    ecx,[ebp-0x4f4672fe]
  41e067:	xor    al,0xfd
  41e069:	mov    edx,0xf21ddced
  41e06e:	imul   ecx,DWORD PTR [ebx],0xf4ecff1d
  41e074:	iret   
  41e075:	into   
  41e076:	std    
  41e077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e078:	call   0x5c7fe5bd
  41e07d:	or     al,0x73
  41e07f:	fsubr  DWORD PTR [edx+0x5f]
  41e082:	jnp    0x41e0e0
  41e084:	loop   0x41e0c5
  41e086:	retf   
  41e087:	push   ecx
  41e088:	jmp    0xa2d89fa
  41e08d:	mov    ch,0x93
  41e08f:	mov    esp,0x911306f4
  41e094:	adc    BYTE PTR [esi],bh
  41e096:	jmp    0x41e0be
  41e098:	sbb    eax,0x55bf5fcb
  41e09d:	hlt    
  41e09e:	scas   eax,DWORD PTR es:[edi]
  41e09f:	inc    ebp
  41e0a0:	cmp    cl,BYTE PTR [eax+ecx*2+0x185595a]
  41e0a7:	iret   
  41e0a8:	push   esp
  41e0a9:	push   esp
  41e0aa:	mov    edx,DWORD PTR [ebx]
  41e0ac:	ds dec ecx
  41e0ae:	outs   dx,DWORD PTR ds:[esi]
  41e0af:	push   0x6f8504f1
  41e0b4:	in     eax,dx
  41e0b5:	ds inc ebp
  41e0b7:	push   esp
  41e0b8:	lods   al,BYTE PTR ds:[esi]
  41e0b9:	shl    DWORD PTR [ebp-0x5d4d9c32],1
  41e0bf:	ret    
  41e0c0:	jmp    0x41e0a6
  41e0c2:	loop   0x41e06e
  41e0c4:	jp     0x41e085
  41e0c6:	arpl   WORD PTR [edx-0x39],sp
  41e0c9:	ja     0x41e0a7
  41e0cb:	cmp    eax,0x9ead0832
  41e0d0:	sub    ebx,DWORD PTR [ecx-0x2de1b48f]
  41e0d6:	dec    ebx
  41e0d7:	pusha  
  41e0d8:	(bad)  
  41e0d9:	mov    ecx,0x2c8e992b
  41e0de:	dec    edx
  41e0df:	loope  0x41e136
  41e0e1:	fsub   DWORD PTR [ecx+ebp*2]
  41e0e4:	cmp    al,0x1e
  41e0e6:	popf   
  41e0e7:	or     esp,esi
  41e0e9:	sti    
  41e0ea:	ja     0x41e15c
  41e0ec:	lahf   
  41e0ed:	popa   
  41e0ee:	dec    ecx
  41e0ef:	cs js  0x41e079
  41e0f2:	fidivr DWORD PTR [ecx-0x15]
  41e0f5:	sbb    dl,BYTE PTR [ecx]
  41e0f7:	sbb    al,0x2b
  41e0f9:	push   ecx
  41e0fa:	mov    ebp,0x2d12ed1f
  41e0ff:	xchg   edx,eax
  41e100:	adc    al,0xd6
  41e102:	scas   eax,DWORD PTR es:[edi]
  41e103:	adc    DWORD PTR [eax-0x1546da9f],0x48465b05
  41e10d:	out    dx,al
  41e10e:	sbb    al,0xe7
  41e110:	out    0x69,eax
  41e112:	mov    ch,0xbe
  41e114:	xchg   esp,eax
  41e115:	cmp    ah,ch
  41e117:	cli    
  41e118:	rol    esi,1
  41e11a:	dec    ecx
  41e11b:	sub    esp,esi
  41e11d:	lods   al,BYTE PTR ds:[esi]
  41e11e:	cmp    BYTE PTR [edx-0x53c682a4],ch
  41e124:	dec    ecx
  41e125:	mov    ds:0x782f75a4,eax
  41e12a:	pop    ds
  41e12b:	jecxz  0x41e163
  41e12d:	xchg   esi,eax
  41e12e:	adc    BYTE PTR [edx+edx*8+0x47],dl
  41e132:	shl    DWORD PTR [ebx],0x57
  41e135:	fisttp WORD PTR [ebp+0x61]
  41e138:	mov    BYTE PTR ds:0xbb556894,0x82
  41e13f:	adc    BYTE PTR [esi+0x1f],al
  41e142:	fisub  DWORD PTR [ecx-0x7c]
  41e145:	xor    edx,DWORD PTR [ecx+edi*4-0x517e15d3]
  41e14c:	pop    edi
  41e14d:	fs ins DWORD PTR es:[edi],dx
  41e14f:	lods   al,BYTE PTR ds:[esi]
  41e150:	sub    al,0xbc
  41e152:	in     al,0xb4
  41e154:	(bad)  [edi+0x6c]
  41e157:	jecxz  0x41e169
  41e159:	cs sbb eax,0x9acfba8
  41e15f:	xchg   ebp,eax
  41e160:	mov    ecx,0xd8e7edc0
  41e165:	sahf   
  41e166:	cwde   
  41e167:	(bad)  
  41e168:	sub    cl,BYTE PTR [edx+0x46]
  41e16b:	jnp    0x41e1ac
  41e16d:	aaa    
  41e16e:	and    edx,DWORD PTR [ebx]
  41e170:	inc    edx
  41e171:	outs   dx,DWORD PTR ds:[esi]
  41e172:	in     al,dx
  41e173:	lahf   
  41e174:	dec    ebx
  41e175:	mov    bh,0xf6
  41e177:	pop    ebx
  41e178:	jp     0x41e18f
  41e17a:	jae    0x41e1df
  41e17c:	mov    cl,0x79
  41e17e:	imul   eax,eax,0x8314c8f1
  41e184:	clc    
  41e185:	mov    eax,0x20566a2f
  41e18a:	rol    BYTE PTR ss:[esi-0x2f76e076],1
  41e191:	popf   
  41e192:	sbb    al,0x46
  41e194:	stos   DWORD PTR es:[edi],eax
  41e195:	add    ebx,DWORD PTR [ebp+0x56b646c3]
  41e19b:	mov    edi,0x621cb09c
  41e1a0:	fidivr DWORD PTR [edi+ebp*4]
  41e1a3:	sbb    BYTE PTR cs:[eax-0x687bb846],ah
  41e1aa:	cmp    esp,edi
  41e1ac:	inc    ebx
  41e1ad:	push   eax
  41e1ae:	frstor [ecx-0x50e46333]
  41e1b4:	cmp    al,0x99
  41e1b6:	add    al,0x1d
  41e1b8:	push   eax
  41e1b9:	pop    edi
  41e1ba:	dec    eax
  41e1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1bc:	outs   dx,BYTE PTR ds:[esi]
  41e1bd:	inc    edx
  41e1be:	aas    
  41e1bf:	add    al,0xcc
  41e1c1:	or     BYTE PTR [edi+edx*2],dl
  41e1c4:	pop    ebp
  41e1c5:	push   ss
  41e1c6:	imul   esp,DWORD PTR [eax],0xffffff9c
  41e1c9:	sub    BYTE PTR [ecx-0x7756bc16],dh
  41e1cf:	adc    DWORD PTR [ecx+esi*2],ecx
  41e1d2:	ret    
  41e1d3:	aad    0x60
  41e1d5:	jge    0x41e175
  41e1d7:	in     al,0xea
  41e1d9:	cmp    eax,0x8a79ea1f
  41e1de:	mov    al,ds:0x1c96e448
  41e1e3:	lahf   
  41e1e4:	sub    ah,BYTE PTR [ecx-0x46]
  41e1e7:	fs dec esp
  41e1e9:	dec    ebx
  41e1ea:	ss mov dh,0xab
  41e1ed:	cmp    eax,0xd88ee424
  41e1f2:	add    edi,DWORD PTR [esi-0x40]
  41e1f5:	push   edx
  41e1f6:	pop    ss
  41e1f7:	loopne 0x41e1b7
  41e1f9:	and    eax,0x615a33db
  41e1fe:	sub    al,BYTE PTR [ecx+0x40]
  41e201:	(bad)  
  41e202:	mov    al,0x5
  41e204:	xchg   esp,eax
  41e205:	push   edx
  41e206:	in     al,dx
  41e207:	retf   0xe1c6
  41e20a:	pop    edi
  41e20b:	jmp    0x127e3bd4
  41e210:	dec    ebx
  41e211:	and    ah,BYTE PTR [edx-0x47]
  41e214:	push   ebp
  41e215:	mov    al,ds:0x699c39f0
  41e21a:	and    eax,0x44db8b82
  41e21f:	mov    ah,0x2e
  41e221:	retf   
  41e222:	pop    edi
  41e223:	ss lock ret 
  41e226:	enter  0xffdc,0xe5
  41e22a:	and    DWORD PTR [esi+0x5fcdb311],ebp
  41e230:	call   0x8ed:0x31c73c2b
  41e237:	fst    QWORD PTR [edx-0x31]
  41e23a:	jns    0x41e210
  41e23c:	mul    BYTE PTR [eax+0x5e9a2a36]
  41e242:	xchg   ebp,eax
  41e243:	mov    ss,WORD PTR [ebx+edx*4+0x26]
  41e247:	repnz dec edx
  41e249:	mov    eax,ds:0xe95c0c99
  41e24e:	in     al,dx
  41e24f:	les    ebp,FWORD PTR [edi-0x5c]
  41e252:	retf   
  41e253:	(bad)  
  41e254:	out    dx,al
  41e255:	add    ebx,ebx
  41e257:	cmovg  ebp,DWORD PTR [edi+0x0]
  41e25b:	loope  0x41e24e
  41e25d:	push   eax
  41e25e:	jbe    0x41e2a2
  41e260:	out    0x1a,al
  41e262:	ret    
  41e263:	or     edx,0xffffffa3
  41e266:	add    ah,BYTE PTR [edi+0x57f9ad11]
  41e26c:	jne    0x41e2ca
  41e26e:	or     DWORD PTR [ecx+0x5e],edx
  41e271:	jecxz  0x41e2b8
  41e273:	jmp    0x4f288b5
  41e278:	dec    edx
  41e279:	xor    BYTE PTR [ecx+0x7e],0x3e
  41e27d:	fadd   st(6),st
  41e27f:	pop    es
  41e280:	lods   eax,DWORD PTR ds:[esi]
  41e281:	hlt    
  41e282:	loope  0x41e23e
  41e284:	cmp    DWORD PTR [ebx+0x70ca11c2],eax
  41e28a:	add    BYTE PTR [eax-0x30da9a25],0x86
  41e291:	iret   
  41e292:	dec    ebx
  41e293:	cmp    bh,BYTE PTR [edi]
  41e295:	aam    0x2d
  41e297:	pushf  
  41e298:	in     eax,dx
  41e299:	push   ebx
  41e29a:	push   eax
  41e29b:	in     al,0x57
  41e29d:	sub    esp,edx
  41e29f:	shr    DWORD PTR [ebp-0x47],1
  41e2a2:	loope  0x41e256
  41e2a4:	push   cs
  41e2a5:	aas    
  41e2a6:	dec    ecx
  41e2a7:	test   DWORD PTR [edi-0x48],0xf5eb6c50
  41e2ae:	jmp    0x41e255
  41e2b0:	mov    ebx,0x2fe38701
  41e2b5:	fisttp QWORD PTR [esi]
  41e2b7:	xchg   ebx,eax
  41e2b8:	and    BYTE PTR [ecx-0x7049b94e],dl
  41e2be:	adc    DWORD PTR [eax-0x77],edi
  41e2c1:	push   edi
  41e2c2:	mov    dl,0xf9
  41e2c4:	cmp    bh,BYTE PTR [esi-0x7e]
  41e2c7:	jne    0x41e2b7
  41e2c9:	icebp  
  41e2ca:	fidiv  DWORD PTR [esi+0x78]
  41e2cd:	inc    ebx
  41e2ce:	xchg   esi,edi
  41e2d0:	cli    
  41e2d1:	repnz cwde 
  41e2d3:	cmp    ecx,eax
  41e2d5:	das    
  41e2d6:	call   0x928f:0x4fba87b5
  41e2dd:	arpl   cx,ax
  41e2df:	loope  0x41e34b
  41e2e1:	test   BYTE PTR [esi-0x48],bl
  41e2e4:	aas    
  41e2e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e6:	jbe    0x41e26a
  41e2e8:	ss mov al,dl
  41e2eb:	sbb    ch,BYTE PTR [edi+0x2414369c]
  41e2f1:	jne    0x41e27a
  41e2f3:	mov    esp,0xc105f1
  41e2f8:	mov    al,BYTE PTR [eax-0x49]
  41e2fb:	es sbb eax,0x7afb0cbb
  41e301:	mov    ebx,0x13189389
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	mov    ebp,0xaf9300b9
  41e30c:	mov    eax,ds:0xa594786b
  41e311:	push   esp
  41e312:	jae    0x41e336
  41e314:	js     0x41e2c5
  41e316:	mov    esi,0xf95fbabe
  41e31b:	fistp  WORD PTR [esi-0x51]
  41e31e:	adc    eax,0x92de4e4e
  41e323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e324:	pop    esi
  41e325:	sub    dh,0x52
  41e328:	sub    BYTE PTR [edx],dh
  41e32a:	inc    edx
  41e32b:	xlat   BYTE PTR ds:[ebx]
  41e32c:	pop    edx
  41e32d:	(bad)  
  41e32e:	mov    bh,0xd5
  41e330:	dec    edx
  41e331:	mov    BYTE PTR [edx-0x1f],al
  41e334:	pop    ebx
  41e335:	dec    ebp
  41e336:	enter  0xd567,0x3d
  41e33a:	out    0xa9,al
  41e33c:	nop
  41e33d:	inc    ebp
  41e33e:	jne    0x41e38c
  41e340:	mov    ds:0x80f805a9,eax
  41e345:	imul   eax
  41e347:	shl    BYTE PTR [edi],1
  41e349:	cmp    eax,0xfee23314
  41e34e:	sub    dl,BYTE PTR [ecx+ebx*4-0xc]
  41e352:	cli    
  41e353:	out    dx,eax
  41e354:	fsub   st(7),st
  41e356:	mov    eax,ds:0x4adc270b
  41e35b:	ja     0x41e31e
  41e35d:	mov    edi,0xb220c314
  41e362:	sbb    dh,ch
  41e364:	cdq    
  41e365:	push   ecx
  41e366:	lahf   
  41e367:	inc    eax
  41e368:	pop    esi
  41e369:	fwait
  41e36a:	jmp    0xf15898c
  41e36f:	push   cs
  41e370:	sbb    BYTE PTR [eax],0xd8
  41e373:	in     eax,0xfc
  41e375:	add    eax,0x821a62d8
  41e37a:	dec    esp
  41e37b:	dec    edi
  41e37c:	test   eax,0x365fa94a
  41e381:	push   ss
  41e382:	dec    ebx
  41e383:	arpl   bp,ax
  41e385:	and    eax,0x8ab23d8f
  41e38a:	daa    
  41e38b:	mov    cl,0xb0
  41e38d:	mov    edx,0x4d9daee7
  41e392:	sar    DWORD PTR [ebp-0x6e7481cd],0xaa
  41e399:	xchg   ecx,eax
  41e39a:	inc    eax
  41e39b:	push   esi
  41e39c:	ds enter 0x683f,0x33
  41e3a1:	daa    
  41e3a2:	mov    BYTE PTR [edi+0x631de533],ch
  41e3a8:	push   edx
  41e3a9:	jmp    0xf3bebdd6
  41e3ae:	sbb    BYTE PTR [edi+0x10],al
  41e3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b2:	ret    0x7480
  41e3b5:	dec    edx
  41e3b6:	mov    esi,0x920952cb
  41e3bb:	mov    esi,0xea648357
  41e3c0:	nop
  41e3c1:	sub    dh,ah
  41e3c3:	sub    al,0x7b
  41e3c5:	(bad)  
  41e3c6:	pop    ecx
  41e3c7:	lea    esi,[edx+0x19]
  41e3ca:	inc    edi
  41e3cb:	dec    esp
  41e3cc:	das    
  41e3cd:	scas   al,BYTE PTR es:[edi]
  41e3ce:	(bad)  
  41e3cf:	jp     0x41e37e
  41e3d1:	mov    cl,0xbd
  41e3d3:	inc    edi
  41e3d4:	std    
  41e3d5:	stos   DWORD PTR es:[edi],eax
  41e3d6:	ds repz inc edx
  41e3d9:	shl    bh,cl
  41e3db:	xor    DWORD PTR [eax+0x22304596],edi
  41e3e1:	(bad)  [eax-0x3acf3a4b]
  41e3e7:	mov    WORD PTR [edi+0x46047913],?
  41e3ed:	data16 mov dh,0xba
  41e3f0:	add    ebx,ecx
  41e3f2:	setp   BYTE PTR [edi-0x60d8dc78]
  41e3f9:	icebp  
  41e3fa:	sbb    al,0x68
  41e3fc:	dec    esp
  41e3fd:	jle    0x41e389
  41e3ff:	cmp    DWORD PTR [esi+0x35c7bed1],0x4fd83ee3
  41e409:	pop    ebx
  41e40a:	dec    eax
  41e40b:	mov    ebx,0xe044011d
  41e410:	loopne 0x41e450
  41e412:	mov    bh,0x38
  41e414:	adc    BYTE PTR [eax+ebp*4-0x4fedaed1],0x75
  41e41c:	sar    BYTE PTR [esi+0x3fae5bfc],1
  41e422:	shr    DWORD PTR [ecx+0x774fcbe0],cl
  41e428:	xor    DWORD PTR [ecx+0x3fe6c727],ecx
  41e42e:	xor    DWORD PTR [edi],ecx
  41e430:	sbb    ah,BYTE PTR [ecx-0x49]
  41e433:	loopne 0x41e49b
  41e435:	and    bh,ch
  41e437:	hlt    
  41e438:	jecxz  0x41e414
  41e43a:	mov    ecx,0x5fd5d386
  41e43f:	(bad)  
  41e440:	leave  
  41e441:	push   0xfb2c07df
  41e446:	cli    
  41e447:	pop    ebx
  41e448:	mov    bl,0x2c
  41e44a:	xchg   ebx,eax
  41e44b:	dec    edx
  41e44c:	mov    BYTE PTR [eax],dh
  41e44e:	mov    BYTE PTR [edx+0x622e4378],dh
  41e454:	mov    bh,0x80
  41e456:	xor    ebx,edx
  41e458:	lods   eax,DWORD PTR ds:[esi]
  41e459:	pop    esp
  41e45a:	sbb    eax,0x85786a0
  41e45f:	push   cx
  41e461:	rcl    DWORD PTR [edx-0x1391aaa5],cl
  41e467:	jo     0x41e3f2
  41e469:	mov    BYTE PTR [eax-0x2781f16b],bh
  41e46f:	std    
  41e470:	cld    
  41e471:	pop    edx
  41e472:	add    edi,DWORD PTR [eax]
  41e474:	add    esi,ecx
  41e476:	mov    al,ds:0x2bce555
  41e47b:	xchg   ebp,eax
  41e47c:	fsub   DWORD PTR [ebp-0x3a]
  41e47f:	or     ecx,DWORD PTR [edx+ebx*1-0x1d]
  41e483:	xchg   DWORD PTR [esi+0x3b625449],eax
  41e489:	shr    al,0xcd
  41e48c:	js     0x41e41c
  41e48e:	cmc    
  41e48f:	je     0x41e413
  41e491:	imul   edx,DWORD PTR [esp+eax*8-0x7fac31eb],0xb1d2459
  41e49c:	adc    eax,0xeaaf98b
  41e4a1:	jge    0x41e4e1
  41e4a3:	pop    esp
  41e4a4:	or     al,0xea
  41e4a6:	sahf   
  41e4a7:	pop    ecx
  41e4a8:	or     al,0x4f
  41e4aa:	xor    ebp,esi
  41e4ac:	mov    cs,WORD PTR [edx+eiz*1-0x58]
  41e4b0:	jl     0x41e4fc
  41e4b2:	shr    DWORD PTR [ebp+esi*1-0x41],cl
  41e4b6:	adc    DWORD PTR [edx+esi*4+0x76ee4dc9],ecx
  41e4bd:	retf   0x75fd
  41e4c0:	es enter 0x1e96,0xf1
  41e4c5:	xor    eax,0x8c5b6c16
  41e4ca:	jne    0x41e4a2
  41e4cc:	adc    edx,DWORD PTR [ecx+ecx*1+0x68]
  41e4d0:	add    DWORD PTR [ecx-0x1901a9d3],0x28
  41e4d7:	xchg   edx,eax
  41e4d8:	xor    DWORD PTR [ecx],esp
  41e4da:	fldenv [esp+ebp*1-0x7e]
  41e4de:	inc    di
  41e4e0:	retf   0x8600
  41e4e3:	jmp    0x1975:0xda653022
  41e4ea:	adc    DWORD PTR [edx-0x7e],esi
  41e4ed:	pushf  
  41e4ee:	or     ebx,esp
  41e4f0:	paddsw mm3,QWORD PTR [ecx]
  41e4f3:	sub    ecx,eax
  41e4f5:	test   BYTE PTR [ebx+0x46614e8f],cl
  41e4fb:	data16 sub cl,BYTE PTR [edx]
  41e4fe:	and    esi,DWORD PTR ds:0x7fad5452
  41e504:	pop    edi
  41e505:	cmp    ecx,0xbf903c71
  41e50b:	cdq    
  41e50c:	test   al,0x73
  41e50e:	sub    DWORD PTR [ebx-0x46],edi
  41e511:	pop    ecx
  41e512:	push   edi
  41e513:	int    0x4f
  41e515:	ds dec eax
  41e517:	aas    
  41e518:	mov    ah,0xb4
  41e51a:	pop    es
  41e51b:	fnstcw WORD PTR [eax-0x3]
  41e51e:	mov    al,ds:0x891b8382
  41e523:	xchg   edx,eax
  41e524:	stos   BYTE PTR es:[edi],al
  41e525:	in     eax,0x53
  41e527:	cwde   
  41e528:	dec    esp
  41e529:	int3   
  41e52a:	adc    ebp,DWORD PTR [ebx]
  41e52c:	and    al,0xbf
  41e52e:	inc    esi
  41e52f:	mov    ah,0xed
  41e531:	nop
  41e532:	jg     0x41e58e
  41e534:	pushf  
  41e535:	aam    0xa2
  41e537:	aad    0xb1
  41e539:	sbb    DWORD PTR [ecx-0x67],ecx
  41e53c:	pop    edx
  41e53d:	sub    al,0xb9
  41e53f:	(bad)  
  41e540:	imul   eax,ecx,0xffffffa9
  41e543:	or     BYTE PTR [esi],al
  41e545:	(bad)  
  41e546:	retf   
  41e547:	push   ds
  41e548:	xor    al,0xdb
  41e54a:	std    
  41e54b:	rcl    bl,1
  41e54d:	outs   dx,BYTE PTR ds:[esi]
  41e54e:	cdq    
  41e54f:	sbb    dl,ch
  41e551:	sbb    al,ch
  41e553:	call   FWORD PTR [ebx]
  41e555:	jno    0x41e589
  41e557:	mov    al,ds:0x3c6330eb
  41e55c:	add    eax,0xf5eeb1c7
  41e561:	mov    BYTE PTR [esi+0x50cf201c],ch
  41e567:	lods   al,BYTE PTR ds:[esi]
  41e568:	clc    
  41e569:	hlt    
  41e56a:	call   0x85e9:0x8bfa877e
  41e571:	add    eax,0x793af843
  41e576:	mov    eax,0xdd65f3a5
  41e57b:	call   0x18e0fbf4
  41e580:	cmp    DWORD PTR [edx+ecx*8-0x32],0x7
  41e585:	daa    
  41e586:	pop    es
  41e587:	add    eax,0x85a61630
  41e58c:	add    al,0x97
  41e58e:	pop    ecx
  41e58f:	popa   
  41e590:	mov    dl,0xfd
  41e592:	pop    ds
  41e593:	jnp    0x41e541
  41e595:	adc    DWORD PTR [ecx+0x2fffb656],esi
  41e59b:	mov    dh,0x17
  41e59d:	add    esi,DWORD PTR [edx+0x37f79214]
  41e5a3:	lods   eax,DWORD PTR ds:[esi]
  41e5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a5:	or     al,BYTE PTR [ebx-0x52]
  41e5a8:	add    BYTE PTR [edx-0x44936743],bh
  41e5ae:	mov    ds:0xeadad9e7,eax
  41e5b3:	pop    ebx
  41e5b4:	das    
  41e5b5:	pushf  
  41e5b6:	inc    edi
  41e5b7:	ss push cs
  41e5b9:	xor    al,0xe4
  41e5bb:	in     eax,0x81
  41e5bd:	xor    DWORD PTR [edi+0x4c39f61e],ecx
  41e5c3:	nop
  41e5c4:	push   esp
  41e5c5:	sbb    eax,0x8ac5d393
  41e5ca:	frstpm(287 only) 
  41e5cc:	iret   
  41e5cd:	inc    esi
  41e5ce:	pop    ss
  41e5cf:	cmp    ah,BYTE PTR [ecx]
  41e5d1:	and    BYTE PTR [edx-0x44],0x80
  41e5d5:	jecxz  0x41e64b
  41e5d7:	call   0xec1713ab
  41e5dc:	lds    ebx,FWORD PTR [edi-0x364dad82]
  41e5e2:	cmp    eax,0x1271f83e
  41e5e7:	cmp    al,0x69
  41e5e9:	dec    ebx
  41e5ea:	sbb    ah,ah
  41e5ec:	cmp    DWORD PTR [ecx+ebp*2+0x58],esp
  41e5f0:	(bad)  
  41e5f1:	lock into 
  41e5f3:	ret    0x2948
  41e5f6:	(bad)  
  41e5f7:	jb     0x41e57c
  41e5f9:	(bad)  
  41e5fc:	push   cs
  41e5fd:	sahf   
  41e5fe:	dec    eax
  41e5ff:	les    ecx,FWORD PTR [esi]
  41e601:	mov    ch,0xf3
  41e603:	test   al,0x11
  41e605:	pop    esp
  41e606:	cmc    
  41e607:	jg     0x41e5bc
  41e609:	pop    ss
  41e60a:	les    ebp,FWORD PTR [edi+0x7189958]
  41e610:	rol    DWORD PTR [edi],1
  41e612:	outs   dx,DWORD PTR ds:[esi]
  41e613:	lds    eax,FWORD PTR [eax+0x3e]
  41e616:	and    cl,ah
  41e618:	cwde   
  41e619:	inc    eax
  41e61a:	outs   dx,BYTE PTR ds:[esi]
  41e61b:	mov    ebp,esp
  41e61d:	xor    BYTE PTR [edx-0x708d8c37],al
  41e623:	mov    ecx,0x7947a7ec
  41e628:	push   ebx
  41e629:	and    ecx,esi
  41e62b:	ins    BYTE PTR es:[edi],dx
  41e62c:	mov    ecx,DWORD PTR fs:[ebx+0x34]
  41e630:	dec    esi
  41e631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e632:	mov    eax,0x3cfebf48
  41e637:	mov    ebx,0x9b1fdfe2
  41e63c:	out    0xe9,al
  41e63e:	cmp    ah,BYTE PTR [ebx+eax*8-0x7]
  41e642:	daa    
  41e643:	icebp  
  41e644:	in     al,dx
  41e645:	clc    
  41e646:	xchg   ecx,eax
  41e647:	rcr    DWORD PTR [edx-0x1b905338],cl
  41e64d:	add    al,0x8d
  41e64f:	and    ebx,DWORD PTR [eax+0x2742ff16]
  41e655:	xchg   esp,eax
  41e656:	jmp    DWORD PTR [ebp+0x735cbdc1]
  41e65c:	push   ebp
  41e65d:	cmp    DWORD PTR [ecx+ebx*1],0xd70d40b1
  41e664:	xor    al,0x78
  41e666:	mov    ds:0x71908c82,al
  41e66b:	fwait
  41e66c:	mov    eax,ds:0x4ee3d5b8
  41e671:	inc    ecx
  41e672:	clc    
  41e673:	scas   eax,DWORD PTR es:[edi]
  41e674:	loop   0x41e615
  41e676:	jno    0x41e6a2
  41e678:	(bad)  [eax-0x2d699c6e]
  41e67e:	out    0xec,eax
  41e680:	lds    ebp,FWORD PTR [ecx+ebx*8]
  41e683:	adc    al,0x53
  41e685:	int    0xb2
  41e687:	mov    ds:0x27035ff7,eax
  41e68c:	push   esp
  41e68d:	shl    DWORD PTR [edi-0x7d],1
  41e690:	mov    edi,0x98b838fe
  41e695:	fild   WORD PTR [esi-0x2da55e19]
  41e69b:	add    al,BYTE PTR [esi-0x5d]
  41e69e:	mov    ah,0xb1
  41e6a0:	pop    esi
  41e6a1:	(bad)  
  41e6a2:	hlt    
  41e6a3:	(bad)  
  41e6a4:	mov    ds:0x6446c3ef,al
  41e6a9:	lahf   
  41e6aa:	push   ss
  41e6ab:	call   0xae80804e
  41e6b0:	cmp    al,cl
  41e6b2:	dec    ebx
  41e6b3:	ds es in ax,0x6
  41e6b8:	nop
  41e6b9:	sbb    bl,BYTE PTR [eax-0x5d1f4d31]
  41e6bf:	arpl   WORD PTR [edx-0x5ce8a92],si
  41e6c5:	test   eax,0x144fa3e3
  41e6ca:	imul   edx,DWORD PTR [ecx+eax*8+0x7e],0xffffffeb
  41e6cf:	dec    ecx
  41e6d0:	jnp    0x41e72f
  41e6d2:	into   
  41e6d3:	cmp    eax,0x2a25b47
  41e6d8:	push   edx
  41e6d9:	pop    ebx
  41e6da:	and    al,0x65
  41e6dc:	inc    ecx
  41e6dd:	mov    ecx,0x3fb983ad
  41e6e2:	sbb    edi,esi
  41e6e4:	shl    DWORD PTR [ecx+eiz*1],1
  41e6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e8:	xor    bh,BYTE PTR [edx-0x3d]
  41e6eb:	and    al,0xe4
  41e6ed:	xchg   DWORD PTR [edx-0x2c10bf87],eax
  41e6f3:	push   es
  41e6f4:	mov    ecx,DWORD PTR [edi+edi*8+0x26]
  41e6f8:	(bad)  
  41e6f9:	mov    al,0xb
  41e6fb:	mov    cl,BYTE PTR [edi]
  41e6fd:	jg     0x41e757
  41e6ff:	jge    0x41e6ec
  41e701:	add    bl,bh
  41e703:	stc    
  41e704:	push   ebx
  41e705:	scas   eax,DWORD PTR es:[edi]
  41e706:	mov    ah,BYTE PTR [esi*2+0x5849a589]
  41e70d:	daa    
  41e70e:	pop    ebx
  41e70f:	inc    ebx
  41e710:	ror    DWORD PTR es:[ecx*8+0x677d3593],1
  41e718:	xor    DWORD PTR [ebp-0x2f923784],ebp
  41e71e:	fnstcw WORD PTR [edi]
  41e720:	repz mov cs,WORD PTR [edi+eiz*8-0x795614a7]
  41e728:	pop    esp
  41e729:	shr    BYTE PTR [edi+ebx*4+0x339d41fd],0xef
  41e731:	add    bl,BYTE PTR [ebx+eiz*8]
  41e734:	sub    eax,0xd19534f5
  41e739:	add    DWORD PTR [ebx+esi*4+0xa],ebp
  41e73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73e:	add    DWORD PTR [bx],ebx
  41e741:	aad    0xae
  41e743:	or     al,0xee
  41e745:	mov    BYTE PTR [eax],dl
  41e747:	clc    
  41e748:	sar    DWORD PTR [edx],cl
  41e74a:	cmc    
  41e74b:	iretw  
  41e74d:	daa    
  41e74e:	pusha  
  41e74f:	out    0xdd,eax
  41e751:	pop    ecx
  41e752:	jmp    0x30dd:0x27d6ee02
  41e759:	pop    eax
  41e75a:	pop    edx
  41e75b:	mov    bh,0x6c
  41e75d:	test   BYTE PTR [eiz*4+0x5224af60],0x59
  41e765:	(bad)  
  41e766:	sub    ebx,DWORD PTR [ecx-0x66]
  41e769:	ds fwait
  41e76b:	xor    eax,0x6aff60db
  41e770:	add    DWORD PTR [ebp-0x642f6f6d],0xffffff81
  41e777:	test   al,0x68
  41e779:	je     0x41e73a
  41e77b:	xor    esp,esi
  41e77d:	add    DWORD PTR [ebx+edi*4+0xac67d15],ecx
  41e784:	aaa    
  41e785:	rol    BYTE PTR [ebx],1
  41e787:	enter  0xc414,0x41
  41e78b:	cli    
  41e78c:	bound  eax,QWORD PTR [ecx-0x7bfe6994]
  41e792:	dec    edi
  41e793:	fidivr DWORD PTR [edx+0x49e43f71]
  41e799:	pop    esi
  41e79a:	push   edx
  41e79b:	out    dx,al
  41e79c:	inc    eax
  41e79d:	in     al,0x32
  41e79f:	sbb    BYTE PTR [edx-0xf802e74],bh
  41e7a5:	das    
  41e7a6:	js     0x841ac471
  41e7ac:	sahf   
  41e7ad:	lock les si,DWORD PTR [ebp+0xa625383]
  41e7b5:	jae    0x41e7ec
  41e7b7:	jmp    0x41e831
  41e7b9:	popa   
  41e7ba:	sub    BYTE PTR [esp+edx*2+0xae0bbcf],dh
  41e7c1:	clc    
  41e7c2:	mov    dh,0x9d
  41e7c4:	mov    edi,esp
  41e7c6:	(bad)  
  41e7c7:	call   0xd0a30952
  41e7cc:	mov    al,0xe9
  41e7ce:	xchg   edx,eax
  41e7cf:	test   eax,0x95614aaa
  41e7d4:	scas   eax,DWORD PTR es:[edi]
  41e7d5:	mov    dl,0x4d
  41e7d7:	scas   al,BYTE PTR es:[edi]
  41e7d8:	mov    esi,0x1e4dc99b
  41e7dd:	jbe    0x41e7ad
  41e7df:	stc    
  41e7e0:	and    BYTE PTR [edx],ah
  41e7e2:	loopne 0x41e787
  41e7e4:	adc    dl,ah
  41e7e6:	push   esi
  41e7e7:	adc    eax,0x6f22b334
  41e7ec:	add    eax,0x6b3c0a7b
  41e7f1:	loop   0x41e795
  41e7f3:	loope  0x41e782
  41e7f5:	daa    
  41e7f6:	mov    edi,0xeaf531e1
  41e7fb:	pop    ds
  41e7fc:	mov    bx,WORD PTR [ebp-0x19]
  41e800:	loopne 0x41e7f7
  41e802:	(bad)  
  41e803:	mov    dl,0xda
  41e805:	imul   esp,edx,0xe
  41e808:	xchg   DWORD PTR [ecx],ebx
  41e80a:	lds    edi,FWORD PTR [edi+0x4f5ee069]
  41e810:	cmp    ch,0x91
  41e813:	add    BYTE PTR [ecx+0x7049ece6],dl
  41e819:	retf   
  41e81a:	mov    WORD PTR [ebx-0x13ee67d7],ds
  41e820:	jbe    0x41e82e
  41e822:	cmp    esp,DWORD PTR ds:0x88b88183
  41e828:	scas   al,BYTE PTR es:[edi]
  41e829:	adc    al,0x45
  41e82b:	push   ss
  41e82c:	pop    eax
  41e82d:	ror    BYTE PTR [eax+0x14594f7],1
  41e833:	xor    DWORD PTR [ecx],0x25ce38db
  41e839:	pop    edi
  41e83a:	and    BYTE PTR [ecx+0x32],ch
  41e83d:	push   esi
  41e83e:	sub    BYTE PTR [ecx],dl
  41e840:	out    dx,eax
  41e841:	pop    ds
  41e842:	or     DWORD PTR [esi+edi*2],0x7e171b0
  41e849:	cmc    
  41e84a:	jl     0x41e80e
  41e84c:	cmp    al,0x18
  41e84e:	add    edi,DWORD PTR [eax-0x26]
  41e851:	das    
  41e852:	add    ebp,eax
  41e854:	ret    0x5d10
  41e857:	pushf  
  41e858:	(bad)  [esi-0x4e]
  41e85b:	xlat   BYTE PTR ds:[ebx]
  41e85c:	popa   
  41e85d:	jecxz  0x41e82e
  41e85f:	or     bl,ah
  41e861:	sub    eax,0xf0a0c56f
  41e866:	jns    0x41e870
  41e868:	sbb    DWORD PTR [edx-0x7da30270],0xffffffa4
  41e86f:	out    0xf9,al
  41e871:	add    al,0x89
  41e873:	popa   
  41e874:	test   BYTE PTR [eax],bl
  41e876:	shl    DWORD PTR [eax],1
  41e878:	repz lds esi,FWORD PTR [ebp+0x3297f2a2]
  41e87f:	popa   
  41e880:	fmul   QWORD PTR [ecx]
  41e882:	call   0x2932:0x5b1902b1
  41e889:	(bad)  
  41e88a:	stc    
  41e88b:	pop    esi
  41e88c:	push   cs
  41e88d:	sbb    al,0x30
  41e88f:	in     eax,0xea
  41e891:	xor    eax,0x9fedc48d
  41e896:	(bad)  [edi+0x2292ba9]
  41e89c:	lods   al,BYTE PTR ds:[esi]
  41e89d:	dec    ebp
  41e89e:	imul   eax,DWORD PTR [ebp-0x47],0x3690e35f
  41e8a5:	fild   QWORD PTR [esi+0x73d3a5cb]
  41e8ab:	ret    0x3e50
  41e8ae:	pusha  
  41e8af:	fdiv   st(7),st
  41e8b1:	int3   
  41e8b2:	push   ebp
  41e8b3:	or     bh,BYTE PTR [esi-0x6111a72e]
  41e8b9:	lahf   
  41e8ba:	mov    edx,0x26ef388c
  41e8bf:	(bad)  
  41e8c0:	cmp    eax,0xfa6a6dda
  41e8c5:	push   ss
  41e8c6:	mov    BYTE PTR ds:0x6dab05b0,cl
  41e8cc:	int    0xc9
  41e8ce:	dec    ebp
  41e8cf:	or     esp,DWORD PTR [eax+esi*8-0x66]
  41e8d3:	cdq    
  41e8d4:	mov    cl,0x32
  41e8d6:	fistp  QWORD PTR [ebx+0x52b3aeff]
  41e8dc:	xchg   ecx,eax
  41e8dd:	aaa    
  41e8de:	adc    al,0xfa
  41e8e0:	mov    dh,0x50
  41e8e2:	sahf   
  41e8e3:	ins    DWORD PTR es:[edi],dx
  41e8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e5:	enter  0xe2f9,0x58
  41e8e9:	mov    ebp,0xca78995d
  41e8ee:	(bad)  
  41e8ef:	lock std 
  41e8f1:	add    DWORD PTR [esi-0x39],ecx
  41e8f4:	pop    ebx
  41e8f5:	pop    ds
  41e8f6:	sbb    al,0xe5
  41e8f8:	push   ss
  41e8f9:	inc    ecx
  41e8fa:	retf   
  41e8fb:	jae    0x41e8b8
  41e8fd:	ja     0x41e955
  41e8ff:	fcomp  st(4)
  41e901:	fwait
  41e902:	adc    BYTE PTR [edx-0x281a418b],dh
  41e908:	or     eax,0x24e3a1d2
  41e90d:	shl    BYTE PTR [eax-0x11],cl
  41e910:	(bad)
  41e913:	outs   dx,BYTE PTR ds:[esi]
  41e914:	in     eax,dx
  41e915:	sub    BYTE PTR [eax],dl
  41e917:	imul   edi,DWORD PTR [ecx-0x66],0x9561553
  41e91e:	or     esp,DWORD PTR [ebx+ebp*4+0x6e]
  41e922:	sbb    al,0xc
  41e924:	loope  0x41e96a
  41e926:	push   es
  41e927:	aad    0x38
  41e929:	push   0xffffffb5
  41e92b:	test   DWORD PTR [edi-0x27],0xff1b43a2
  41e932:	jp     0x41e8fb
  41e934:	sub    al,0x8c
  41e936:	sub    eax,0xe0c39fd2
  41e93b:	push   ebp
  41e93c:	pop    DWORD PTR [esi+0x5]
  41e93f:	in     al,0x23
  41e941:	sahf   
  41e942:	out    0x1b,al
  41e944:	xchg   edx,esi
  41e946:	in     al,0x73
  41e948:	and    al,BYTE PTR [ebp+0x76]
  41e94b:	in     eax,dx
  41e94c:	pop    eax
  41e94d:	mov    WORD PTR ds:0x127481af,ds
  41e953:	fisub  DWORD PTR [ecx+0x1f]
  41e956:	int3   
  41e957:	fxrstor gs:[ecx]
  41e95b:	cdq    
  41e95c:	or     eax,DWORD PTR [ecx]
  41e95e:	lods   eax,DWORD PTR ds:[esi]
  41e95f:	mov    esp,0x317e0e1c
  41e964:	xchg   esp,eax
  41e965:	mov    BYTE PTR [edx-0x7283f971],bl
  41e96b:	pop    esi
  41e96c:	pop    ss
  41e96d:	fidiv  DWORD PTR ds:0x8cb55c09
  41e973:	and    eax,0xfbaa0de8
  41e978:	addr16 daa 
  41e97a:	inc    edi
  41e97b:	mov    BYTE PTR [esi],al
  41e97d:	arpl   WORD PTR [eax+0x47d9c66d],dx
  41e983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e984:	jbe    0x41e9f8
  41e986:	sbb    BYTE PTR [esi+0x78],cl
  41e989:	imul   edx,DWORD PTR [edx],0x43da60b7
  41e98f:	scas   al,BYTE PTR es:[edi]
  41e990:	(bad)  
  41e991:	pop    es
  41e992:	jae    0x41e968
  41e994:	mov    esi,ecx
  41e996:	ins    BYTE PTR es:[edi],dx
  41e997:	push   ebx
  41e998:	adc    al,0x8e
  41e99a:	xchg   dx,ax
  41e99c:	mov    eax,0x6d350342
  41e9a1:	repnz jecxz 0x41e968
  41e9a4:	aaa    
  41e9a5:	jae    0x41e97e
  41e9a7:	call   esi
  41e9a9:	jecxz  0x41e9bb
  41e9ab:	je     0x41e9a6
  41e9ad:	xchg   DWORD PTR [edi],esp
  41e9af:	data16 sbb BYTE PTR [ebp-0x34],bl
  41e9b3:	or     eax,0x9c47b2db
  41e9b8:	imul   esp,DWORD PTR [edx+0x18c00864],0x80b389db
  41e9c2:	push   0xffffffb0
  41e9c4:	fcom   QWORD PTR [eax]
  41e9c6:	dec    ecx
  41e9c7:	in     al,dx
  41e9c8:	mov    bh,0x99
  41e9ca:	pushf  
  41e9cb:	xchg   edi,eax
  41e9cc:	mov    es,WORD PTR [ebp-0x50]
  41e9cf:	and    DWORD PTR [eax-0x4a25053e],edx
  41e9d5:	mov    bl,0x4d
  41e9d7:	sub    al,0xbe
  41e9d9:	lods   al,BYTE PTR ds:[esi]
  41e9da:	mov    ch,BYTE PTR [edx]
  41e9dc:	sbb    ch,dh
  41e9de:	shl    DWORD PTR [ebx-0x20bf1dd5],0xc0
  41e9e5:	cmp    al,0xa9
  41e9e7:	lock cmp DWORD PTR [edi+esi*1+0x3b128d29],0xdf6d25bf
  41e9f3:	jmp    0x41e9c9
  41e9f5:	into   
  41e9f6:	jo     0x41ea29
  41e9f8:	retf   0xc90b
  41e9fb:	cmp    esi,esp
  41e9fd:	mov    ah,0x91
  41e9ff:	jo     0x41ea23
  41ea01:	test   eax,0x36776a09
  41ea06:	lods   al,BYTE PTR ds:[esi]
  41ea07:	pop    ebp
  41ea08:	add    cl,al
  41ea0a:	push   ebx
  41ea0b:	clc    
  41ea0c:	adc    eax,DWORD PTR [edi-0x1fc5c4b3]
  41ea12:	mov    cl,0x2e
  41ea14:	into   
  41ea15:	or     eax,0x6251094a
  41ea1a:	and    BYTE PTR [esi],0x79
  41ea1d:	in     al,0xa8
  41ea1f:	sbb    edi,edx
  41ea21:	imul   esi,ecx,0x55fce042
  41ea27:	mov    ebx,0xa13aee31
  41ea2c:	lea    esp,ds:0x8fe90cca
  41ea32:	jg     0x41ea0f
  41ea34:	push   0x50
  41ea36:	ror    esi,0x34
  41ea39:	ss (bad) 
  41ea3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3c:	int    0xbe
  41ea3e:	xchg   esp,eax
  41ea3f:	jp     0x41ea9d
  41ea41:	jmp    0x44ea:0xdc9a87c9
  41ea48:	inc    edi
  41ea49:	repnz int3 
  41ea4b:	push   edi
  41ea4c:	adc    bh,ch
  41ea4e:	adc    ebp,ecx
  41ea50:	das    
  41ea51:	xor    eax,0xc9f6f744
  41ea56:	jo     0x41ea81
  41ea58:	in     eax,dx
  41ea59:	pop    esp
  41ea5a:	jne    0x41ea5c
  41ea5c:	das    
  41ea5d:	dec    ebp
  41ea5e:	mov    al,0xa2
  41ea60:	fs mov ebp,0xdd0ae1a8
  41ea66:	scas   al,BYTE PTR es:[edi]
  41ea67:	es ret 0x75c8
  41ea6b:	jo     0x41e9ef
  41ea6d:	or     al,BYTE PTR [esi-0x7915c291]
  41ea73:	or     al,0xec
  41ea75:	lods   eax,DWORD PTR ds:[esi]
  41ea76:	add    BYTE PTR [ebx-0x39],ah
  41ea79:	sbb    ebx,esi
  41ea7b:	pop    eax
  41ea7c:	pop    ss
  41ea7d:	xchg   ecx,eax
  41ea7e:	push   0xaa1b8cd0
  41ea83:	inc    eax
  41ea84:	fucom  st(4)
  41ea86:	cld    
  41ea87:	(bad)  
  41ea88:	dec    edi
  41ea89:	or     eax,DWORD PTR [esp+eax*8-0x9]
  41ea8d:	push   es
  41ea8e:	nop
  41ea8f:	out    dx,al
  41ea90:	(bad)  
  41ea91:	push   ds
  41ea92:	xor    eax,0x4580f465
  41ea97:	cmp    al,0xb7
  41ea99:	xor    eax,0x22a90302
  41ea9e:	add    al,dh
  41eaa0:	popa   
  41eaa1:	out    dx,al
  41eaa2:	popf   
  41eaa3:	arpl   WORD PTR [ebx+0x2bcc5e],dx
  41eaa9:	fist   WORD PTR [eax]
  41eaab:	adc    al,0xf9
  41eaad:	fnstenv [edx]
  41eaaf:	scas   eax,DWORD PTR es:[edi]
  41eab0:	add    BYTE PTR [ecx+0x710eb858],dl
  41eab6:	or     ah,ch
  41eab8:	shr    bl,0x38
  41eabb:	mov    ecx,0x15b1d7a3
  41eac0:	jp     0x61bd6ca7
  41eac6:	enter  0x1ed1,0xfa
  41eaca:	in     al,dx
  41eacb:	add    eax,0x298a6da5
  41ead0:	jne    0x41eacc
  41ead2:	lock jnp 0x41ea9c
  41ead5:	jne    0x41ea61
  41ead7:	cdq    
  41ead8:	jl     0x37fb0544
  41eade:	push   edx
  41eadf:	xchg   esp,eax
  41eae0:	inc    eax
  41eae1:	shr    DWORD PTR [esi],cl
  41eae3:	scas   eax,DWORD PTR es:[edi]
  41eae4:	inc    ecx
  41eae5:	(bad)  
  41eae6:	push   0xbeeb9936
  41eaeb:	(bad)  
  41eaec:	cmp    edi,edx
  41eaee:	sub    al,0xd6
  41eaf0:	xor    al,0x88
  41eaf2:	imul   esp,ebx,0x66d2e71b
  41eaf8:	inc    ecx
  41eaf9:	fimul  DWORD PTR [esi]
  41eafb:	push   ss
  41eafc:	test   DWORD PTR [ebx+0x2e],0x7726737
  41eb03:	adc    ah,BYTE PTR [edx+0x6f]
  41eb06:	addr16 movs BYTE PTR es:[di],BYTE PTR ds:[si]
  41eb09:	dec    ebp
  41eb0a:	cmp    BYTE PTR [edx],0x14
  41eb0d:	xchg   edx,eax
  41eb0e:	xor    esp,DWORD PTR [edx]
  41eb10:	xor    DWORD PTR [ebp-0xf],edi
  41eb13:	pop    edi
  41eb14:	push   ds
  41eb15:	fldenv [edi]
  41eb17:	sbb    al,0x53
  41eb19:	es mov ch,0x66
  41eb1c:	xor    al,0x16
  41eb1e:	and    al,0x72
  41eb20:	mov    bl,BYTE PTR [esi-0x2ad8b924]
  41eb26:	sar    DWORD PTR [esi-0x79131400],1
  41eb2c:	mov    bl,0x4b
  41eb2e:	cmp    eax,0x792a21
  41eb33:	sub    ah,BYTE PTR [edx-0x1c]
  41eb36:	jmp    0x8a:0xf0564381
  41eb3d:	ror    DWORD PTR [eax],cl
  41eb3f:	xor    al,0xf3
  41eb41:	jnp    0x41eb82
  41eb43:	adc    eax,0xec85bdac
  41eb48:	xchg   ecx,eax
  41eb49:	fld    TBYTE PTR [ebp-0xc85faab]
  41eb4f:	mov    ebx,0x36860fca
  41eb54:	and    bh,BYTE PTR cs:[ecx-0x16897938]
  41eb5b:	add    DWORD PTR [esi+edi*8+0x57],ecx
  41eb5f:	push   edx
  41eb60:	cwde   
  41eb61:	adc    eax,0xeaee5476
  41eb66:	dec    ecx
  41eb67:	sub    cl,cl
  41eb69:	div    DWORD PTR [edx-0x7f]
  41eb6c:	adc    edi,DWORD PTR [ecx]
  41eb6e:	xchg   ebp,eax
  41eb6f:	fld    QWORD PTR ds:0xda45858b
  41eb75:	xor    al,0x32
  41eb77:	dec    ebx
  41eb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb79:	jmp    0x3cca8677
  41eb7e:	lahf   
  41eb7f:	in     al,0x56
  41eb81:	sahf   
  41eb82:	inc    edx
  41eb83:	mov    al,0xe7
  41eb85:	ins    BYTE PTR es:[edi],dx
  41eb86:	les    ebp,FWORD PTR [edi-0x56c62c1c]
  41eb8c:	mov    BYTE PTR [edi+0x55405025],dh
  41eb92:	push   ecx
  41eb93:	push   eax
  41eb94:	fisub  DWORD PTR ds:0xc1fb8860
  41eb9a:	xchg   edi,eax
  41eb9b:	or     cl,BYTE PTR [esi-0x315c22c1]
  41eba1:	icebp  
  41eba2:	fadd   QWORD PTR [ecx+0x2]
  41eba5:	and    al,0x87
  41eba7:	dec    ebx
  41eba8:	and    eax,0xe5775425
  41ebad:	rol    esi,cl
  41ebaf:	fsub   st(7),st
  41ebb1:	call   0xc774b188
  41ebb6:	lock pusha 
  41ebb8:	push   eax
  41ebb9:	sbb    dl,dh
  41ebbb:	push   ebp
  41ebbc:	dec    ecx
  41ebbd:	fistp  WORD PTR [esi+0x35eb8113]
  41ebc3:	fwait
  41ebc4:	dec    edi
  41ebc5:	mov    esp,0x200081ba
  41ebca:	das    
  41ebcb:	xchg   ecx,eax
  41ebcc:	push   esp
  41ebcd:	jb     0x41ec21
  41ebcf:	stos   BYTE PTR es:[edi],al
  41ebd0:	dec    ebp
  41ebd1:	mov    dh,0x39
  41ebd3:	adc    esp,DWORD PTR [ecx+0x1ba1e08d]
  41ebd9:	jmp    0xe6cb:0x81ef8f85
  41ebe0:	mov    ds:0xbf0101bc,eax
  41ebe5:	dec    eax
  41ebe6:	pop    ebp
  41ebe7:	fiadd  DWORD PTR [ecx+0x4a]
  41ebea:	out    dx,al
  41ebeb:	adc    al,0x90
  41ebed:	sub    DWORD PTR [ebx+eax*2+0x6c],esi
  41ebf1:	jl     0x41eb9d
  41ebf3:	fdiv   DWORD PTR [ecx-0x61]
  41ebf6:	mov    bh,0x2
  41ebf8:	out    0x77,al
  41ebfa:	xchg   esi,eax
  41ebfb:	pushaw 
  41ebfd:	fbstp  TBYTE PTR [esi-0x7ccb118c]
  41ec03:	jg     0x41ebe4
  41ec05:	icebp  
  41ec06:	jge    0x41ec77
  41ec08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec09:	outs   dx,DWORD PTR ds:[esi]
  41ec0a:	mov    ecx,0x84f39e6e
  41ec0f:	add    dl,BYTE PTR [ebx]
  41ec11:	add    bh,BYTE PTR [edx]
  41ec13:	jp     0x41ebc8
  41ec15:	or     eax,0xb1ac333d
  41ec1a:	leave  
  41ec1b:	inc    ebx
  41ec1c:	pop    esi
  41ec1d:	fst    st(5)
  41ec1f:	inc    edi
  41ec20:	sbb    BYTE PTR [ecx+0x45b60858],al
  41ec26:	js     0x41ebc7
  41ec28:	ror    ebx,cl
  41ec2a:	xchg   BYTE PTR ss:[ecx+eiz*2+0x6162a056],cl
  41ec32:	adc    al,0x7b
  41ec34:	pop    ss
  41ec35:	and    DWORD PTR [ebx+0x3d],ecx
  41ec38:	andps  xmm5,XMMWORD PTR [eax+0x42d4a547]
  41ec3f:	or     DWORD PTR [ebp-0x6a],edi
  41ec42:	jo     0x41ebd5
  41ec44:	mov    edi,0xa38bb54c
  41ec49:	pop    DWORD PTR [ebx-0x2149d25f]
  41ec4f:	mov    al,0x1e
  41ec51:	aam    0x2a
  41ec53:	pushf  
  41ec54:	dec    esi
  41ec55:	fwait
  41ec56:	jbe    0x41ec6c
  41ec58:	inc    ebp
  41ec59:	sub    BYTE PTR [edx+0x34ea3497],ch
  41ec5f:	inc    ecx
  41ec60:	imul   edx,DWORD PTR [eax+0x5df9afbe],0x7f
  41ec67:	jecxz  0x41ec7f
  41ec69:	ficom  DWORD PTR [ebp+0x29d9f350]
  41ec6f:	das    
  41ec70:	nop
  41ec71:	loop   0x41ec61
  41ec73:	pop    es
  41ec74:	mov    dh,0x77
  41ec76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec77:	mov    ah,0x44
  41ec79:	pop    ebx
  41ec7a:	les    eax,FWORD PTR [ebx+0x6d]
  41ec7d:	shl    DWORD PTR cs:[ebp+0x4f],0xda
  41ec82:	sbb    al,0x42
  41ec84:	shl    ch,1
  41ec86:	mov    al,0xc5
  41ec88:	shl    DWORD PTR [esi+edi*4+0x29],cl
  41ec8c:	add    al,al
  41ec8e:	aam    0xe2
  41ec90:	cmp    al,0x9
  41ec92:	and    ebx,ecx
  41ec94:	jb     0x41ec95
  41ec96:	sub    eax,0x8bd160c7
  41ec9b:	mov    al,0x48
  41ec9d:	dec    edx
  41ec9e:	hlt    
  41ec9f:	push   cs
  41eca0:	std    
  41eca1:	xchg   esi,eax
  41eca2:	pusha  
  41eca3:	out    dx,al
  41eca4:	adc    al,0x78
  41eca6:	sbb    DWORD PTR ds:0x648ddc40,edi
  41ecac:	mov    esi,0x59f2a0d2
  41ecb1:	dec    ebp
  41ecb2:	adc    ah,0x1d
  41ecb5:	mov    edi,0xa1b1cda0
  41ecba:	jmp    0x37a6:0x5a9635d7
  41ecc1:	imul   edi,DWORD PTR [ecx+0x4b],0xffffffa7
  41ecc5:	retf   0xd1e7
  41ecc8:	xlat   BYTE PTR ds:[ebx]
  41ecc9:	repz test eax,0xd0b32197
  41eccf:	mov    esp,0x65322085
  41ecd4:	enter  0x766a,0x50
  41ecd8:	aam    0xd1
  41ecda:	scas   al,BYTE PTR es:[edi]
  41ecdb:	mov    eax,ds:0x819c7cda
  41ece0:	mov    al,ds:0x295df52d
  41ece5:	das    
  41ece6:	pop    ss
  41ece7:	cmp    ecx,DWORD PTR [ecx]
  41ece9:	jecxz  0x41ed52
  41eceb:	pop    edi
  41ecec:	(bad)  
  41ecee:	mov    ch,0xd5
  41ecf0:	das    
  41ecf1:	gs cmp eax,0xc30e3102
  41ecf7:	jecxz  0x41ecc0
  41ecf9:	push   0xd220c5f4
  41ecfe:	inc    bh
  41ed00:	outs   dx,DWORD PTR ds:[esi]
  41ed01:	push   eax
  41ed02:	call   0x6b2b:0xe46ac731
  41ed09:	adc    al,0x65
  41ed0b:	mov    eax,ecx
  41ed0d:	or     DWORD PTR es:[eax-0x624232a1],edi
  41ed14:	fld    TBYTE PTR [eax-0x1e481470]
  41ed1a:	aam    0x11
  41ed1c:	adc    DWORD PTR [ebp+0x29],ecx
  41ed1f:	xor    al,0x4
  41ed21:	sbb    esp,edx
  41ed23:	jg     0x41eced
  41ed25:	push   0xffffffbf
  41ed27:	jle    0x41ed7a
  41ed29:	adc    al,0xad
  41ed2b:	sbb    esi,DWORD PTR [esi]
  41ed2d:	cwde   
  41ed2e:	sbb    esp,DWORD PTR [edx+0x63]
  41ed31:	xor    al,0x90
  41ed33:	sbb    eax,0xc582f86f
  41ed38:	mov    bh,0xf9
  41ed3a:	or     al,0xf3
  41ed3c:	pop    ss
  41ed3d:	pop    edx
  41ed3e:	jbe    0x41ed3f
  41ed40:	pop    ds
  41ed41:	das    
  41ed42:	dec    ebp
  41ed43:	in     al,dx
  41ed44:	lock fild DWORD PTR [ebp+0x9]
  41ed48:	pop    es
  41ed49:	fld    DWORD PTR [eax+edx*1-0x9]
  41ed4d:	mov    dl,0xfa
  41ed4f:	fcom   QWORD PTR [esi-0x6d]
  41ed52:	sub    BYTE PTR [eax],cl
  41ed54:	jo     0x41ed28
  41ed56:	inc    ecx
  41ed57:	mov    DWORD PTR [edi],ebx
  41ed59:	sbb    al,0x80
  41ed5b:	jae    0x41ecf4
  41ed5d:	sbb    al,bl
  41ed5f:	push   edx
  41ed60:	jl     0x41ecf1
  41ed62:	dec    ebx
  41ed63:	pop    ds
  41ed64:	jbe    0x41ecf5
  41ed66:	stos   BYTE PTR es:[edi],al
  41ed67:	sbb    bh,BYTE PTR [ebx]
  41ed69:	xor    BYTE PTR [ebx],ch
  41ed6b:	xor    ch,BYTE PTR [ecx-0x63]
  41ed6e:	sbb    eax,0xd6e5e76b
  41ed73:	or     eax,0x33b2fd2a
  41ed78:	xchg   esi,eax
  41ed79:	test   al,0x71
  41ed7b:	mov    al,0x40
  41ed7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed7e:	add    al,0xb4
  41ed80:	das    
  41ed81:	mov    ecx,0x5a7ef946
  41ed86:	and    al,0x6e
  41ed88:	pop    es
  41ed89:	mov    al,ds:0xa164522
  41ed8e:	inc    esp
  41ed8f:	stos   DWORD PTR es:[edi],eax
  41ed90:	popf   
  41ed91:	or     al,0x43
  41ed93:	std    
  41ed94:	pop    ecx
  41ed95:	xor    eax,0xbc827887
  41ed9a:	(bad)  [edi-0x1e]
  41ed9d:	fidiv  WORD PTR [esi]
  41ed9f:	mov    ecx,0x85731737
  41eda4:	fwait
  41eda5:	mov    bh,0xad
  41eda7:	push   es
  41eda8:	jne    0x41ee1e
  41edaa:	in     al,dx
  41edab:	jl     0x41ed6c
  41edad:	ss cdq 
  41edaf:	dec    DWORD PTR [edi+0x70]
  41edb2:	(bad)  
  41edb3:	push   ds
  41edb4:	sbb    DWORD PTR [esi-0x36469638],ebp
  41edba:	cwde   
  41edbb:	fidivr DWORD PTR [eax+0x38]
  41edbe:	int3   
  41edbf:	cld    
  41edc0:	(bad)  
  41edc2:	dec    esp
  41edc3:	and    eax,0xd0c1f998
  41edc8:	loop   0x41ee31
  41edca:	mov    ebx,0x54d092fc
  41edcf:	scas   eax,DWORD PTR es:[edi]
  41edd0:	popa   
  41edd1:	out    0xe8,al
  41edd3:	push   0xb
  41edd5:	mov    edi,0xcb88f385
  41edda:	sahf   
  41eddb:	cdq    
  41eddc:	xchg   edi,eax
  41eddd:	aaa    
  41edde:	dec    ebx
  41eddf:	fld    TBYTE PTR [eax+eax*2]
  41ede2:	out    dx,eax
  41ede3:	call   0x7af0f384
  41ede8:	push   ebp
  41ede9:	add    bh,BYTE PTR [ebx]
  41edeb:	xchg   edx,eax
  41edec:	mov    BYTE PTR [edx+edx*8],al
  41edef:	xlat   BYTE PTR ds:[ebx]
  41edf0:	mov    edi,0x5f4e63b4
  41edf5:	xchg   edi,eax
  41edf6:	shr    BYTE PTR [edx],0x79
  41edf9:	and    eax,DWORD PTR [edi*8+0x2aa1fd7a]
  41ee00:	rcpps  xmm7,XMMWORD PTR ds:0x7eee61d5
  41ee07:	out    dx,al
  41ee08:	push   ebx
  41ee09:	mov    ah,0x49
  41ee0b:	les    esi,FWORD PTR [ecx]
  41ee0d:	aad    0x84
  41ee0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee10:	xor    eax,esi
  41ee12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee13:	pop    eax
  41ee14:	call   0xc818:0x77163bb8
  41ee1b:	push   0xffffffb9
  41ee1d:	pop    edx
  41ee1e:	cmp    ebp,DWORD PTR [ecx+0x28]
  41ee21:	not    edi
  41ee23:	xchg   ebx,eax
  41ee24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee25:	sbb    DWORD PTR [eax-0x19],eax
  41ee28:	psubb  mm1,mm3
  41ee2b:	shl    cl,1
  41ee2d:	pop    ss
  41ee2e:	vpaddsb ymm4,ymm0,YMMWORD PTR [ebp-0x7d77ea56]
  41ee36:	jb     0x41edca
  41ee38:	pop    edx
  41ee39:	rol    DWORD PTR [edi+0x38],1
  41ee3c:	adc    ah,cl
  41ee3e:	adc    ebp,ebp
  41ee40:	adc    al,0xcd
  41ee42:	loope  0x41ee04
  41ee44:	data16 cs int 0xcf
  41ee48:	pop    edx
  41ee49:	push   ebx
  41ee4a:	jp     0x41ee9b
  41ee4c:	mov    edi,DWORD PTR [ebp+0x61eed643]
  41ee52:	ins    BYTE PTR es:[edi],dx
  41ee53:	adc    al,0xd6
  41ee55:	les    ebx,FWORD PTR [ebx-0x67a58549]
  41ee5b:	add    al,dh
  41ee5d:	int    0x78
  41ee5f:	xchg   ecx,eax
  41ee60:	iret   
  41ee61:	mov    al,ds:0xab3b5046
  41ee66:	add    ch,al
  41ee68:	mov    esp,0x8b5dfbbc
  41ee6d:	popa   
  41ee6e:	dec    edi
  41ee6f:	(bad)  
  41ee70:	jg     0x41eec8
  41ee72:	test   DWORD PTR [ebx+ebx*1+0x734336ca],eax
  41ee79:	sbb    DWORD PTR [ecx],eax
  41ee7b:	push   es
  41ee7c:	shl    esp,0x5e
  41ee7f:	in     al,dx
  41ee80:	test   al,0xe7
  41ee82:	xchg   esi,eax
  41ee83:	push   esi
  41ee84:	(bad)  
  41ee85:	rol    BYTE PTR [edi-0x71],1
  41ee88:	sar    BYTE PTR [esi],1
  41ee8a:	jmp    0xf132750e
  41ee8f:	push   edi
  41ee90:	pop    ds
  41ee91:	add    ch,BYTE PTR [edx]
  41ee93:	or     DWORD PTR [ebx],ebx
  41ee95:	test   BYTE PTR [ecx+0x27942b22],0x9a
  41ee9c:	push   0xa28b3cf5
  41eea1:	jno    0x41ee98
  41eea3:	pop    esi
  41eea4:	jmp    0x18da:0x484ea1b8
  41eeab:	jo     0x41eeef
  41eead:	mov    bl,0x86
  41eeaf:	cmp    BYTE PTR [ebx],bh
  41eeb1:	test   eax,0x881c7e17
  41eeb6:	rol    DWORD PTR [esi+0x40],1
  41eeb9:	cmp    eax,0xeb79a8a4
  41eebe:	(bad)  
  41eebf:	pop    ss
  41eec0:	mov    DWORD PTR [edi-0x69f85675],0xf8490abb
  41eeca:	pop    ss
  41eecb:	test   DWORD PTR [eax],ebp
  41eecd:	test   eax,0x9fc10d10
  41eed2:	cli    
  41eed3:	cs sbb al,0xee
  41eed6:	mov    al,0x44
  41eed8:	sahf   
  41eed9:	mov    ebx,0x361c4228
  41eede:	xor    bh,BYTE PTR [edi+0x58e03103]
  41eee4:	je     0x41ef56
  41eee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee7:	cmp    DWORD PTR [ebx],ecx
  41eee9:	popf   
  41eeea:	mov    DWORD PTR [esi+0x1b],esp
  41eeed:	repnz sbb DWORD PTR [esi-0x63],ebp
  41eef1:	and    ah,BYTE PTR [ebp+0x1e940bc1]
  41eef7:	addr16 es cmp eax,0x68
  41eefc:	jno    0x41eec2
  41eefe:	jp     0x41ee8d
  41ef00:	sbb    al,0xd4
  41ef02:	and    BYTE PTR [edi+ecx*1],bl
  41ef05:	out    dx,al
  41ef06:	mov    al,0xb4
  41ef08:	fidiv  WORD PTR [ebx-0x23]
  41ef0b:	neg    edx
  41ef0d:	sub    al,0x34
  41ef0f:	or     eax,0xf0ee6f
  41ef14:	push   esp
  41ef15:	pop    ss
  41ef16:	call   esi
  41ef18:	sbb    dh,0xd5
  41ef1b:	jo     0x41eed8
  41ef1d:	icebp  
  41ef1e:	push   0x78a8a6
  41ef23:	gs repz scas eax,DWORD PTR es:[edi]
  41ef26:	mov    ah,BYTE PTR [ebx-0x7b]
  41ef29:	or     al,0x5f
  41ef2b:	test   ebp,esi
  41ef2d:	mov    eax,ds:0xca36f1fc
  41ef32:	aas    
  41ef33:	fstp   TBYTE PTR [edx-0x574fcca9]
  41ef39:	mov    eax,0x59fd508a
  41ef3e:	lds    ebx,FWORD PTR [edx]
  41ef40:	sub    DWORD PTR [edx],edx
  41ef42:	sub    al,0xe9
  41ef44:	cmp    edx,ecx
  41ef46:	jle    0x41ef32
  41ef48:	fmul   st,st(5)
  41ef4a:	sbb    esp,DWORD PTR [ebp+0x365254f7]
  41ef50:	out    0xf0,eax
  41ef52:	(bad)  [edx-0x41]
  41ef55:	(bad)  
  41ef57:	icebp  
  41ef58:	inc    ebx
  41ef59:	push   ss
  41ef5a:	jle    0x41ef17
  41ef5c:	data16 ror dh,1
  41ef5f:	scas   eax,DWORD PTR es:[edi]
  41ef60:	sti    
  41ef61:	jae    0x41ef9c
  41ef63:	mov    bh,0xfc
  41ef65:	repnz mov DWORD PTR [ecx+0xdc8e3e8],esp
  41ef6c:	lahf   
  41ef6d:	xchg   edi,eax
  41ef6e:	dec    edi
  41ef6f:	outs   dx,DWORD PTR ds:[esi]
  41ef70:	pop    ebx
  41ef71:	mov    ?,eax
  41ef73:	retf   
  41ef74:	stos   DWORD PTR es:[edi],eax
  41ef75:	sbb    DWORD PTR [eax-0x1f],ebx
  41ef78:	mov    ch,0x6d
  41ef7a:	test   edi,0xb239d6e4
  41ef80:	test   eax,0x2dba260b
  41ef85:	jo     0x41ef45
  41ef87:	xor    esp,ebp
  41ef89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef8a:	cmp    al,0x89
  41ef8c:	or     BYTE PTR [eax],dl
  41ef8e:	jmp    0xceeb:0x5df50b8e
  41ef95:	popa   
  41ef96:	mov    bl,0x5b
  41ef98:	push   es
  41ef99:	add    ebx,edi
  41ef9b:	jmp    0x4485c03d
  41efa0:	call   0x4a117e14
  41efa5:	lahf   
  41efa6:	add    al,0xad
  41efa8:	jb     0x41efc0
  41efaa:	dec    ebp
  41efab:	ficom  WORD PTR [edx-0x7ae18147]
  41efb1:	jmp    0x41ef66
  41efb3:	jbe    0x41f033
  41efb5:	rcr    BYTE PTR [esi],cl
  41efb7:	ret    0x8173
  41efba:	adc    eax,DWORD PTR [ecx-0x1e]
  41efbd:	mov    ds:0x134c80f7,al
  41efc2:	mov    esi,0x908a0a33
  41efc7:	sub    eax,0xd84c19ca
  41efcc:	sbb    ah,BYTE PTR ds:0x3f8641b8
  41efd2:	cdq    
  41efd3:	mov    ebx,0xfc1417b4
  41efd8:	sbb    ah,al
  41efda:	lea    edx,[ebx]
  41efdc:	mov    ebp,0x8847ee45
  41efe1:	xlat   BYTE PTR ds:[ebx]
  41efe2:	mov    dh,0xc0
  41efe4:	add    al,0xb1
  41efe6:	cmp    DWORD PTR [esi+0x1a532e0c],0x3c
  41efed:	jmp    0x41f026
  41efef:	cwde   
  41eff0:	cld    
  41eff1:	add    ebp,eax
  41eff3:	out    dx,eax
  41eff4:	mov    bl,BYTE PTR [eax+ebx*2+0x5474cc29]
  41effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effc:	in     eax,0x7c
  41effe:	je     0x41f040
  41f000:	xchg   ebp,eax
  41f001:	ins    BYTE PTR es:[di],dx
  41f003:	xchg   edi,eax
  41f004:	add    ch,dh
  41f006:	pop    edx
  41f007:	test   BYTE PTR [ebx],ah
  41f009:	pop    esi
  41f00a:	rcr    BYTE PTR [ebx+0x21ea9926],0xb0
  41f011:	and    BYTE PTR [edx],cl
  41f013:	add    eax,0xe50321b7
  41f018:	xchg   ecx,eax
  41f019:	pop    ebx
  41f01a:	pop    ecx
  41f01b:	pop    edi
  41f01c:	data16 jge 0x41eff0
  41f01f:	push   cs
  41f020:	xlat   BYTE PTR ds:[ebx]
  41f021:	sub    bl,BYTE PTR [ebx+esi*1-0x4c784bce]
  41f028:	es and bh,BYTE PTR cs:[ebx+ebp*4]
  41f02d:	inc    ebp
  41f02e:	adc    dh,BYTE PTR [ebp+ecx*2-0x2dd49a6d]
  41f035:	sub    BYTE PTR [esi-0x17],0xd9
  41f039:	addr16 lock push 0x4014ac09
  41f040:	or     ecx,DWORD PTR [ebp-0x2684edce]
  41f046:	outs   dx,BYTE PTR ds:[esi]
  41f047:	pushf  
  41f048:	mov    eax,ds:0x609c4cbe
  41f04d:	pop    es
  41f04e:	push   edx
  41f04f:	in     al,dx
  41f050:	inc    esp
  41f051:	jge    0x41eff8
  41f053:	and    al,ah
  41f055:	leave  
  41f056:	jp     0x41efdc
  41f058:	sahf   
  41f059:	div    BYTE PTR [ebp+0x1596e37b]
  41f05f:	in     eax,0x6
  41f061:	xor    BYTE PTR [esi-0x5],bl
  41f064:	mov    eax,ds:0x7166aa12
  41f069:	cmp    DWORD PTR [ecx+0x30b92e59],esp
  41f06f:	xchg   esp,eax
  41f070:	imul   ecx,DWORD PTR [ecx+0x71],0x58
  41f074:	sbb    al,0xe0
  41f076:	fadd   QWORD PTR [esi-0x6b204d40]
  41f07c:	out    dx,al
  41f07d:	jle    0x41f0a6
  41f07f:	jb     0x41f012
  41f081:	shl    esi,cl
  41f083:	outs   dx,DWORD PTR ds:[esi]
  41f084:	mov    ecx,0x4e46858e
  41f089:	(bad)  
  41f08a:	adc    ch,BYTE PTR [edx+0x69]
  41f08d:	or     esp,DWORD PTR [edx-0x4a]
  41f090:	outs   dx,DWORD PTR es:[esi]
  41f092:	and    al,0x7d
  41f094:	das    
  41f095:	xlat   BYTE PTR ds:[ebx]
  41f096:	or     dh,BYTE PTR [ebp+0x52]
  41f099:	into   
  41f09a:	mov    dh,0x64
  41f09c:	cmp    eax,DWORD PTR [edx]
  41f09e:	js     0x41f0c3
  41f0a0:	push   0x23
  41f0a2:	pop    ds
  41f0a3:	xchg   edi,eax
  41f0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a5:	fsub   DWORD PTR [ecx-0x18230cdc]
  41f0ab:	lods   al,BYTE PTR ds:[esi]
  41f0ac:	sbb    dh,dh
  41f0ae:	mov    es,WORD PTR [edi+0x68]
  41f0b1:	aam    0x51
  41f0b3:	add    eax,0xff79078d
  41f0b8:	dec    eax
  41f0b9:	cwde   
  41f0ba:	xchg   esi,eax
  41f0bb:	imul   ecx,DWORD PTR [ecx],0x7b
  41f0be:	xchg   BYTE PTR [edx],bl
  41f0c0:	rcr    DWORD PTR [ebp-0x72],1
  41f0c3:	stos   BYTE PTR es:[edi],al
  41f0c4:	xchg   edi,eax
  41f0c5:	xor    esi,ebp
  41f0c7:	dec    edi
  41f0c8:	ins    DWORD PTR es:[edi],dx
  41f0c9:	pop    esi
  41f0ca:	cmp    bh,dh
  41f0cc:	dec    ecx
  41f0cd:	rol    DWORD PTR [eax],0x9c
  41f0d0:	or     BYTE PTR [eax],ah
  41f0d2:	int3   
  41f0d3:	xor    bh,BYTE PTR [edi-0x6000712c]
  41f0d9:	sub    edi,DWORD PTR [esi+0x180ccb18]
  41f0df:	dec    eax
  41f0e0:	add    ebp,DWORD PTR [edi]
  41f0e2:	ds push es
  41f0e4:	and    eax,0x21820ab2
  41f0e9:	push   ds
  41f0ea:	clc    
  41f0eb:	push   0x6cd7f25
  41f0f0:	xor    al,0x49
  41f0f2:	or     al,0x1e
  41f0f4:	mov    ?,WORD PTR fs:[eax+0x46]
  41f0f8:	out    dx,eax
  41f0f9:	je     0x41f0ff
  41f0fb:	sti    
  41f0fc:	pop    ss
  41f0fd:	cmp    eax,0xba7d1581
  41f102:	dec    esi
  41f103:	xchg   ch,al
  41f105:	xor    ecx,ecx
  41f107:	int    0x61
  41f109:	fstp   DWORD PTR [edx-0x69a9676a]
  41f10f:	pop    edi
  41f110:	xchg   ecx,eax
  41f111:	mov    ds:0x705b8699,eax
  41f116:	rol    BYTE PTR [edi],cl
  41f118:	leave  
  41f119:	arpl   WORD PTR [esi+0x56],sp
  41f11c:	jle    0x41f0ac
  41f11e:	and    ch,BYTE PTR [eax-0x2c]
  41f121:	sub    edi,DWORD PTR [edi-0x69]
  41f124:	mov    eax,ds:0x222df247
  41f129:	push   ebp
  41f12a:	rol    BYTE PTR [ecx],0xbd
  41f12d:	fiadd  WORD PTR [edx+0x1f]
  41f130:	loop   0x41f131
  41f132:	loopne 0x41f184
  41f134:	cdq    
  41f135:	in     eax,dx
  41f136:	shr    DWORD PTR [ebx-0x2d],0xf
  41f13a:	es push ds
  41f13c:	neg    ch
  41f13e:	inc    ecx
  41f13f:	sbb    BYTE PTR [ecx+0x7918dedc],dh
  41f145:	push   0x4ad5df61
  41f14a:	test   eax,0xd5ea5d2e
  41f14f:	dec    ecx
  41f150:	jo     0x41f1a9
  41f152:	ss and edx,esi
  41f155:	xchg   esi,eax
  41f156:	jne    0x41f141
  41f158:	loopne 0x41f1c0
  41f15a:	fchs   
  41f15c:	mov    dl,0x79
  41f15e:	leave  
  41f15f:	push   ecx
  41f160:	or     BYTE PTR [edi-0x63d48b62],bl
  41f166:	std    
  41f167:	(bad)  
  41f168:	das    
  41f169:	inc    edx
  41f16a:	xchg   ebx,eax
  41f16b:	test   dh,0xa5
  41f16e:	(bad)  
  41f16f:	enter  0x2fb7,0x5
  41f173:	mov    dh,0xbb
  41f175:	(bad)  
  41f176:	out    0xf9,eax
  41f178:	push   ecx
  41f179:	push   ecx
  41f17a:	ins    DWORD PTR es:[edi],dx
  41f17b:	scas   al,BYTE PTR es:[edi]
  41f17c:	(bad)  
  41f17d:	or     ebx,DWORD PTR [eax]
  41f17f:	aas    
  41f180:	arpl   si,bp
  41f182:	aam    0x11
  41f184:	add    eax,0x53866da3
  41f189:	mov    al,ds:0xddeeb8a
  41f18e:	xor    ecx,esp
  41f190:	mov    ch,0x5
  41f192:	sbb    edx,esp
  41f194:	lods   eax,DWORD PTR ds:[esi]
  41f195:	xchg   edi,eax
  41f196:	js     0x41f18d
  41f198:	shl    DWORD PTR [esi-0x58],0x85
  41f19c:	outs   dx,DWORD PTR ds:[esi]
  41f19d:	fwait
  41f19e:	stos   BYTE PTR es:[edi],al
  41f19f:	jmp    0x41f122
  41f1a1:	and    DWORD PTR ds:0x4ec2c09c,0xffffffd0
  41f1a8:	mov    WORD PTR [ebp+0x7095f48c],ds
  41f1ae:	repz jnp 0x41f15f
  41f1b1:	leave  
  41f1b2:	iret   
  41f1b3:	mov    dh,0x5
  41f1b5:	shl    eax,0xb4
  41f1b8:	repz or ah,dh
  41f1bb:	push   0xa06f1531
  41f1c0:	call   0x6421:0xe6638f38
  41f1c7:	sbb    esp,ebx
  41f1c9:	adc    BYTE PTR [ecx-0x5ca670f9],bl
  41f1cf:	inc    esi
  41f1d0:	les    eax,FWORD PTR [esi]
  41f1d2:	outs   dx,BYTE PTR ds:[esi]
  41f1d3:	and    DWORD PTR [ecx+0x2f4a4302],ebx
  41f1d9:	pop    esi
  41f1da:	lahf   
  41f1db:	adc    al,0x92
  41f1dd:	pop    esp
  41f1de:	mov    eax,ds:0x42f543b1
  41f1e3:	mov    bh,0x77
  41f1e5:	(bad)  
  41f1e6:	outs   dx,BYTE PTR gs:[esi]
  41f1e8:	xchg   BYTE PTR [esi+0x55ea7f3],dh
  41f1ee:	mov    eax,0x92777ce4
  41f1f3:	sahf   
  41f1f4:	and    BYTE PTR [edi+0xe],dl
  41f1f7:	or     DWORD PTR [edi-0x5a],eax
  41f1fa:	cs xchg edi,eax
  41f1fc:	inc    eax
  41f1fd:	dec    ecx
  41f1fe:	js     0x41f1e0
  41f200:	sbb    al,0x43
  41f202:	imul   ecx,eax,0x52
  41f205:	or     BYTE PTR [edx+0x3a],0x3f
  41f209:	sub    eax,0xef599884
  41f20e:	pop    eax
  41f20f:	ss loopne 0x41f241
  41f212:	xchg   BYTE PTR [ebx-0x6a],dh
  41f215:	mov    eax,0x1ce8710a
  41f21a:	adc    dl,dh
  41f21c:	dec    esi
  41f21d:	push   ebp
  41f21e:	push   es
  41f21f:	or     DWORD PTR [ebx+eax*2+0x78],edx
  41f223:	in     eax,dx
  41f224:	sahf   
  41f225:	mov    bl,0xd3
  41f227:	sub    DWORD PTR [ebx],0xfffffff4
  41f22a:	mov    al,ds:0xb72084eb
  41f22f:	sbb    ah,BYTE PTR [ebp+0x47fb9632]
  41f235:	add    eax,0x97c7a262
  41f23a:	sub    eax,DWORD PTR [esi-0x27e0db7]
  41f240:	push   cs
  41f241:	pop    edx
  41f242:	push   di
  41f244:	pop    di
  41f246:	or     al,0x48
  41f248:	sub    BYTE PTR [ecx+0x10f8ba4],al
  41f24e:	jne    0x41f21b
  41f250:	dec    eax
  41f251:	add    BYTE PTR [esi+eiz*4-0x49869442],bh
  41f258:	xor    cl,BYTE PTR [ecx]
  41f25a:	mov    ebp,0xe9dfd84b
  41f25f:	jg     0x41f2ba
  41f261:	dec    ebp
  41f262:	jle    0x41f27f
  41f264:	add    al,0x51
  41f266:	sub    BYTE PTR [ecx-0x1],ah
  41f269:	or     dl,BYTE PTR [eax+esi*2+0x19]
  41f26d:	jge    0x41f226
  41f26f:	popa   
  41f270:	sub    eax,0xffffffab
  41f273:	shr    BYTE PTR [ebx+0x74194620],cl
  41f279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f27a:	mov    bl,0xc2
  41f27c:	repz fst st(6)
  41f27f:	add    ebx,DWORD PTR ds:[ebx-0x2a]
  41f283:	shl    edx,cl
  41f285:	ja     0x41f20d
  41f287:	inc    edi
  41f288:	push   ebx
  41f289:	pusha  
  41f28a:	xchg   ecx,eax
  41f28b:	push   es
  41f28c:	loop   0x41f268
  41f28e:	adc    al,0x4f
  41f290:	xchg   esp,eax
  41f291:	xor    edi,DWORD PTR [ebp-0xf]
  41f294:	fcmovnbe st,st(6)
  41f296:	repz add ebx,DWORD PTR [edx]
  41f299:	das    
  41f29a:	xchg   BYTE PTR [edx+ebp*2],ah
  41f29d:	ret    
  41f29e:	mov    ebp,DWORD PTR [edx-0x698224f4]
  41f2a4:	cmp    DWORD PTR [eax],ecx
  41f2a6:	add    BYTE PTR [eax-0x80],dh
  41f2a9:	mov    cl,bh
  41f2ab:	cmp    BYTE PTR [eax],dh
  41f2ad:	jae    0x41f2b2
  41f2af:	mov    edi,0xd2ca81dd
  41f2b4:	sbb    BYTE PTR [esi-0x17b21b28],ch
  41f2ba:	je     0x41f31d
  41f2bc:	cmovns ebp,DWORD PTR [edi]
  41f2bf:	push   0x2c
  41f2c1:	clc    
  41f2c2:	adc    dl,dh
  41f2c4:	pop    ds
  41f2c5:	sub    BYTE PTR [edx+0x1de9fe98],cl
  41f2cb:	sbb    BYTE PTR [edx+0x77],0x7c
  41f2cf:	test   eax,0xa672c5e2
  41f2d4:	gs adc al,0x4f
  41f2d7:	adc    edx,DWORD PTR [esi-0x175d1ddb]
  41f2dd:	int    0x95
  41f2df:	sub    al,0x4e
  41f2e1:	push   cs
  41f2e2:	adc    ah,bh
  41f2e4:	hlt    
  41f2e5:	(bad)  
  41f2e6:	mov    edx,0x624e9aa7
  41f2eb:	adc    ch,dh
  41f2ed:	jno    0x41f353
  41f2ef:	js     0x41f2a2
  41f2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f3:	jno    0x41f2e5
  41f2f5:	imul   ebp,DWORD PTR [ecx-0x9],0x2
  41f2f9:	add    ebp,esp
  41f2fb:	lea    esi,[esi+0x1134fb53]
  41f301:	and    BYTE PTR [eax+0x471e38c3],ah
  41f307:	sub    eax,0xac1b73c5
  41f30c:	xor    eax,0x140413e2
  41f311:	mov    ebx,0x64d46ad4
  41f316:	sub    DWORD PTR [ebp-0x1b],0x3be14b0a
  41f31d:	pop    esp
  41f31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f320:	mov    bh,0x79
  41f322:	cli    
  41f323:	repnz pop es
  41f325:	je     0x41f2ae
  41f327:	daa    
  41f328:	(bad)  
  41f329:	stc    
  41f32a:	call   eax
  41f32c:	sbb    DWORD PTR [eax+0x54],0xfffffffc
  41f330:	sti    
  41f331:	pop    edi
  41f332:	loope  0x41f2eb
  41f334:	cmp    BYTE PTR [eax],al
  41f336:	ja     0x41f347
  41f338:	into   
  41f339:	mov    BYTE PTR [ebx+eiz*4-0x5f],al
  41f33d:	adc    eax,0xffdb19c8
  41f342:	and    DWORD PTR [ecx],0x41ef4599
  41f348:	inc    edx
  41f349:	loope  0x41f383
  41f34b:	loopne 0x41f308
  41f34d:	or     bl,dl
  41f34f:	daa    
  41f350:	push   ebp
  41f351:	mov    ebx,0x9d9d0b8
  41f356:	pushf  
  41f357:	sub    al,BYTE PTR [esi-0x1c]
  41f35a:	adc    ecx,DWORD PTR [ebx]
  41f35c:	outs   dx,DWORD PTR ds:[esi]
  41f35d:	fldcw  WORD PTR [ebx]
  41f35f:	xor    ah,BYTE PTR [eax]
  41f361:	dec    esi
  41f362:	rcl    DWORD PTR [ebx],cl
  41f364:	loope  0x41f39c
  41f366:	push   esp
  41f367:	hlt    
  41f368:	jnp    0x41f329
  41f36a:	aad    0xb7
  41f36c:	rcl    DWORD PTR [edx-0x843fe55],cl
  41f372:	sub    ch,bl
  41f374:	cli    
  41f375:	dec    ebp
  41f376:	pop    edx
  41f377:	(bad)  
  41f379:	repz cdq 
  41f37b:	jns    0x41f36a
  41f37d:	cmp    esi,ecx
  41f37f:	aad    0x83
  41f381:	sub    eax,0xaaef5ce0
  41f386:	loop   0x41f401
  41f388:	adc    ebx,DWORD PTR [edx+0x15c045b4]
  41f38e:	call   0x557f622e
  41f393:	test   eax,0xf39c847e
  41f398:	xor    eax,0xd7bcaec2
  41f39d:	int3   
  41f39e:	lods   eax,DWORD PTR ds:[esi]
  41f39f:	jmp    0x41f355
  41f3a1:	(bad)  
  41f3a2:	jne    0x41f399
  41f3a4:	mov    WORD PTR ds:0x51901aa1,?
  41f3aa:	fnsave [eax+0x2dcdb0a5]
  41f3b0:	fst    DWORD PTR [esi+0x43]
  41f3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b4:	lock sbb BYTE PTR [eax+0x24],al
  41f3b8:	ins    BYTE PTR es:[edi],dx
  41f3b9:	sub    cl,BYTE PTR [esi-0x8623a68]
  41f3bf:	inc    edi
  41f3c0:	repz mov edi,0x82cfc05a
  41f3c6:	mov    dh,BYTE PTR [esi-0x5b]
  41f3c9:	mov    WORD PTR [ecx+0x637a84f8],fs
  41f3cf:	test   al,0xc0
  41f3d1:	jb     0x41f362
  41f3d3:	addr16 int 0xdc
  41f3d6:	sbb    al,0xb9
  41f3d8:	mov    eax,ds:0x8fd614ed
  41f3dd:	xor    bl,ah
  41f3df:	xlat   BYTE PTR ds:[ebx]
  41f3e0:	jl     0x41f412
  41f3e2:	xchg   ecx,eax
  41f3e3:	lahf   
  41f3e4:	outs   dx,BYTE PTR ds:[esi]
  41f3e5:	fs mov di,0x8933
  41f3ea:	or     bl,BYTE PTR [edi-0x6d87396]
  41f3f0:	jnp    0x41f422
  41f3f2:	stos   BYTE PTR es:[edi],al
  41f3f3:	mov    dh,0x9b
  41f3f5:	adc    DWORD PTR [ecx-0x497ca82d],esi
  41f3fb:	mov    ah,BYTE PTR [ebp+0x6ea84de0]
  41f401:	mov    al,ds:0xa61386b
  41f406:	mov    dh,0xac
  41f408:	mov    ebx,0x6fe88708
  41f40d:	outs   dx,BYTE PTR ds:[esi]
  41f40e:	mov    ds:0xba73baa5,eax
  41f413:	(bad)  
  41f414:	xor    esp,DWORD PTR [ebx+0x70860e3a]
  41f41a:	dec    ebp
  41f41b:	stc    
  41f41c:	pusha  
  41f41d:	xchg   BYTE PTR [edi+0x55c66d78],al
  41f423:	jp     0x41f489
  41f425:	add    BYTE PTR [esi+edx*2],dl
  41f428:	cdq    
  41f429:	adc    al,0xfa
  41f42b:	push   eax
  41f42c:	or     ecx,DWORD PTR [edx+edi*8-0x3a72a042]
  41f433:	xor    DWORD PTR [edi+ebx*2+0x55],edx
  41f437:	or     DWORD PTR [ecx-0x3bc084aa],edi
  41f43d:	jno    0x41f4a8
  41f43f:	push   edx
  41f440:	daa    
  41f441:	sbb    ch,BYTE PTR [ebp-0x56]
  41f444:	xchg   ebx,eax
  41f445:	lods   eax,DWORD PTR ds:[esi]
  41f446:	jns    0x41f408
  41f448:	cmc    
  41f449:	add    al,0x5a
  41f44b:	jb     0x41f402
  41f44d:	xchg   esp,eax
  41f44e:	mov    cl,0x29
  41f450:	xor    DWORD PTR [eax],edx
  41f452:	inc    esi
  41f453:	and    al,0x84
  41f455:	pop    ecx
  41f456:	fcom   DWORD PTR [ecx+0x4e94ffad]
  41f45c:	sub    ebp,edi
  41f45e:	out    dx,al
  41f45f:	and    eax,0xd035382c
  41f464:	cmc    
  41f465:	mov    bl,0x5f
  41f467:	pop    ebp
  41f468:	or     ebp,DWORD PTR [edx]
  41f46a:	adc    ch,BYTE PTR [ecx]
  41f46c:	inc    ecx
  41f46d:	mov    ah,0x8f
  41f46f:	mov    DWORD PTR [ecx-0x1f],edi
  41f472:	stos   BYTE PTR es:[edi],al
  41f473:	sbb    esi,DWORD PTR [eax-0x596dbd07]
  41f479:	inc    ebp
  41f47a:	inc    edx
  41f47b:	xchg   esp,eax
  41f47c:	ins    DWORD PTR es:[edi],dx
  41f47d:	xchg   dh,bl
  41f47f:	cld    
  41f480:	jbe    0x41f4c9
  41f482:	(bad)  
  41f483:	js     0x41f4ea
  41f485:	add    bh,BYTE PTR [ebx-0x27f47710]
  41f48b:	cwde   
  41f48c:	pop    esi
  41f48d:	ins    BYTE PTR es:[edi],dx
  41f48e:	lahf   
  41f48f:	jb     0x41f43e
  41f491:	test   al,0xfb
  41f493:	dec    ebp
  41f494:	icebp  
  41f495:	jnp    0x41f4dc
  41f497:	ret    0x7a9b
  41f49a:	inc    edx
  41f49b:	psubsb mm0,mm1
  41f49e:	je     0x41f4b4
  41f4a0:	loop   0x41f43e
  41f4a2:	les    esi,FWORD PTR [ebx+edx*2]
  41f4a5:	outs   dx,BYTE PTR ds:[esi]
  41f4a6:	lods   eax,DWORD PTR ds:[esi]
  41f4a7:	sahf   
  41f4a8:	ss mov ecx,cs
  41f4ab:	mov    esp,DWORD PTR [ecx-0x66462ed1]
  41f4b1:	pop    ds
  41f4b2:	mov    eax,0x37837687
  41f4b7:	pop    sp
  41f4b9:	push   0x7c13bbb6
  41f4be:	jnp    0x41f520
  41f4c0:	fyl2xp1 
  41f4c2:	icebp  
  41f4c3:	pop    ecx
  41f4c4:	push   es
  41f4c5:	inc    ecx
  41f4c6:	(bad)  
  41f4c7:	sub    bh,cl
  41f4c9:	inc    eax
  41f4ca:	sbb    al,0xb8
  41f4cc:	outs   dx,BYTE PTR ds:[esi]
  41f4cd:	aam    0xb4
  41f4cf:	(bad)  
  41f4d0:	xchg   bl,al
  41f4d2:	ror    BYTE PTR [esi],0x16
  41f4d5:	rol    DWORD PTR [esi+0x15b83283],cl
  41f4db:	pop    esp
  41f4dc:	sti    
  41f4dd:	mov    eax,ds:0xc3e81caa
  41f4e2:	inc    esp
  41f4e3:	dec    ebp
  41f4e4:	cmp    bl,cl
  41f4e6:	mov    ebp,0x1dc9959b
  41f4eb:	(bad)  
  41f4ec:	mov    ebp,0x3434f820
  41f4f1:	jmp    0x3b809f75
  41f4f6:	jne    0x41f4e7
  41f4f8:	pop    esp
  41f4f9:	sbb    eax,0x2b8e89e2
  41f4fe:	mov    al,0x2c
  41f500:	dec    ebx
  41f501:	rol    ch,0x9f
  41f504:	push   es
  41f505:	push   esp
  41f506:	jns    0x41f492
  41f508:	xchg   ebx,eax
  41f509:	mov    WORD PTR [esi-0x1d],es
  41f50c:	in     eax,dx
  41f50d:	in     eax,0x74
  41f50f:	fwait
  41f510:	xor    BYTE PTR [ecx],bl
  41f512:	jmp    0x41f4db
  41f514:	dec    edi
  41f515:	or     eax,0xe08d6b6f
  41f51a:	jp     0x41f4a5
  41f51c:	xor    eax,0xd311dc4d
  41f521:	enter  0x9da0,0x8f
  41f525:	mov    ah,0xa9
  41f527:	inc    edx
  41f528:	sub    ebp,DWORD PTR ds:0xf8ec03f1
  41f52e:	lock mov edi,0x7bbd8d38
  41f534:	adc    ebx,DWORD PTR [esi]
  41f536:	jecxz  0x41f57a
  41f538:	ins    DWORD PTR es:[edi],dx
  41f539:	shr    DWORD PTR fs:[ebx],0xd2
  41f53d:	fsub   DWORD PTR [ebp+0xb]
  41f540:	loop   0x41f55e
  41f542:	xor    ch,BYTE PTR [eax-0x5afe456b]
  41f548:	sub    cl,dl
  41f54a:	add    al,BYTE PTR [ecx+0x3bcbf8bd]
  41f550:	add    eax,0x880e95e4
  41f555:	or     BYTE PTR [edi-0x7f],0x9e
  41f559:	ss pop edx
  41f55b:	setns  BYTE PTR [edx]
  41f55e:	mov    al,ds:0x1a51a9c8
  41f563:	sbb    esp,ebx
  41f565:	add    BYTE PTR [ebx-0x5f],ch
  41f568:	in     al,0x5
  41f56a:	out    dx,eax
  41f56b:	pushf  
  41f56c:	aam    0xed
  41f56e:	adc    eax,0x5cb10080
  41f573:	popa   
  41f574:	xlat   BYTE PTR ds:[ebx]
  41f575:	scas   al,BYTE PTR es:[edi]
  41f576:	test   DWORD PTR [edi-0x60d7dbf4],0x4229bcb8
  41f580:	div    DWORD PTR [ebp-0x40]
  41f583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f584:	std    
  41f585:	jbe    0x41f54d
  41f587:	jno    0x41f526
  41f589:	jo     0x41f571
  41f58b:	stc    
  41f58c:	xchg   BYTE PTR ds:0x848bb8a6,dl
  41f592:	(bad)  
  41f593:	in     al,0xde
  41f595:	dec    edx
  41f596:	mov    cl,0x5b
  41f598:	cwde   
  41f599:	jcxz   0x41f544
  41f59c:	ror    BYTE PTR [edx-0x1986679a],0xc0
  41f5a3:	jge    0x41f591
  41f5a5:	out    0x3,eax
  41f5a7:	xchg   edx,eax
  41f5a8:	inc    ebx
  41f5a9:	cmp    cl,0xc7
  41f5ac:	push   0xffffffac
  41f5ae:	loope  0x41f5eb
  41f5b0:	mov    esp,esp
  41f5b2:	xchg   ebp,eax
  41f5b3:	(bad)
  41f5b7:	dec    edi
  41f5b8:	and    al,0xff
  41f5ba:	add    edx,ecx
  41f5bc:	dec    esi
  41f5bd:	sti    
  41f5be:	dec    esi
  41f5bf:	inc    edx
  41f5c0:	and    ecx,DWORD PTR [eax-0x23]
  41f5c3:	lods   eax,DWORD PTR ds:[esi]
  41f5c4:	pop    eax
  41f5c5:	lahf   
  41f5c6:	arpl   WORD PTR [esp+ebx*1+0x26],dx
  41f5ca:	mov    ds:0x1a94239a,al
  41f5cf:	xchg   edx,ebx
  41f5d1:	les    esp,FWORD PTR [ebp+ecx*2-0x2a72276c]
  41f5d8:	and    DWORD PTR [ebp+0x6a],0x1e
  41f5dc:	cld    
  41f5dd:	and    esp,ebp
  41f5df:	aam    0xf5
  41f5e1:	jb     0x41f566
  41f5e3:	call   0xe44e9a1
  41f5e8:	mov    ebp,0x175a3b3e
  41f5ed:	repz and esp,DWORD PTR [eax+ecx*2+0x6ab6eaee]
  41f5f5:	mov    ah,BYTE PTR [ebx]
  41f5f7:	aaa    
  41f5f8:	mov    eax,ds:0x2e390b02
  41f5fd:	and    eax,0x2ea0773a
  41f602:	out    dx,eax
  41f603:	out    dx,eax
  41f604:	out    0xf5,al
  41f606:	jecxz  0x41f686
  41f608:	out    0x26,eax
  41f60a:	push   ds
  41f60b:	aaa    
  41f60c:	sbb    DWORD PTR [esi],esp
  41f60e:	adc    al,0x3b
  41f610:	mov    ebx,0xef46c6a9
  41f615:	(bad)  
  41f616:	and    ah,BYTE PTR [eax-0x71600e2c]
  41f61c:	dec    ebx
  41f61d:	fadd   st,st(7)
  41f61f:	and    al,0x69
  41f621:	push   cs
  41f622:	dec    edx
  41f623:	mov    dh,BYTE PTR [edx]
  41f625:	inc    ecx
  41f626:	push   edi
  41f627:	xor    DWORD PTR [ecx],edx
  41f629:	xlat   BYTE PTR ds:[ebx]
  41f62a:	leave  
  41f62b:	sahf   
  41f62c:	push   eax
  41f62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f62e:	ins    DWORD PTR es:[edi],dx
  41f62f:	xchg   edx,eax
  41f630:	loope  0x41f5da
  41f632:	mov    edx,0xd027192
  41f637:	and    bl,dh
  41f639:	jne    0x41f619
  41f63b:	jne    0x41f6b7
  41f63d:	int    0x1c
  41f63f:	push   eax
  41f640:	jmp    0x41f5d2
  41f642:	jo     0x41f630
  41f644:	mov    BYTE PTR [ecx-0x2e],cl
  41f647:	mov    ebx,0x43513b7
  41f64c:	les    ebp,FWORD PTR [edx+edi*2+0x88bea9]
  41f653:	iret   
  41f654:	inc    edi
  41f655:	cmp    eax,0xe2f1fee5
  41f65a:	fstp   QWORD PTR [esi+0x30efdf8e]
  41f660:	ficomp DWORD PTR [edi]
  41f662:	and    eax,0xd5271600
  41f667:	(bad)  
  41f668:	sbb    al,bh
  41f66a:	xor    BYTE PTR [ecx+0x294aea7c],dl
  41f670:	nop    DWORD PTR [esi]
  41f673:	cmp    eax,0x3c728286
  41f678:	fcmovnbe st,st(6)
  41f67a:	aaa    
  41f67b:	pop    esi
  41f67c:	xchg   ebx,eax
  41f67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67e:	inc    edx
  41f680:	jg     0x41f693
  41f682:	ins    DWORD PTR es:[edi],dx
  41f683:	fld    TBYTE PTR [esi+0x6b]
  41f686:	mov    bh,0x37
  41f688:	in     eax,0x65
  41f68a:	xor    al,0x7d
  41f68c:	jmp    0xfeaed072
  41f691:	dec    eax
  41f692:	stos   DWORD PTR es:[edi],eax
  41f693:	es mov bl,0xaa
  41f696:	push   ebx
  41f697:	push   esp
  41f698:	mov    bl,0xf8
  41f69a:	push   ss
  41f69b:	or     DWORD PTR [edi+0x7efecc4],ebx
  41f6a1:	(bad)  
  41f6a2:	jg     0x41f6b3
  41f6a4:	pop    ss
  41f6a5:	daa    
  41f6a6:	int3   
  41f6a7:	test   ecx,ecx
  41f6a9:	mov    ah,0x55
  41f6ab:	mov    bh,0x56
  41f6ad:	jmp    0xbe9878bc
  41f6b2:	aaa    
  41f6b3:	test   DWORD PTR [edi-0x45],ecx
  41f6b6:	dec    esp
  41f6b7:	das    
  41f6b8:	(bad)  
  41f6b9:	pop    esp
  41f6ba:	jp     0x41f64c
  41f6bc:	lahf   
  41f6bd:	loope  0x41f726
  41f6bf:	pop    ds
  41f6c0:	push   ss
  41f6c1:	fcomp  DWORD PTR [edx+ecx*4]
  41f6c4:	push   ecx
  41f6c5:	push   ebp
  41f6c6:	arpl   WORD PTR [ecx-0x8626540],bp
  41f6cc:	outs   dx,BYTE PTR ds:[esi]
  41f6cd:	out    0xb7,al
  41f6cf:	mov    edi,0xbf2d9496
  41f6d4:	out    dx,eax
  41f6d5:	mov    DWORD PTR [ebp-0x737d9607],edi
  41f6db:	jge    0x292334bb
  41f6e1:	sar    esp,cl
  41f6e3:	out    0xb5,eax
  41f6e5:	pop    eax
  41f6e6:	(bad)  
  41f6e7:	mov    esp,0xa2915643
  41f6ec:	and    al,0xab
  41f6ee:	add    ecx,esp
  41f6f0:	jmp    0xf61aeec8
  41f6f5:	or     esi,DWORD PTR [ecx+0x3c]
  41f6f8:	jae    0x41f6fc
  41f6fa:	data16 loop 0x41f6d3
  41f6fd:	mov    al,0x76
  41f6ff:	inc    edx
  41f700:	sbb    BYTE PTR [ebx],al
  41f702:	push   0xebbba94b
  41f707:	test   al,0x1b
  41f709:	test   eax,0x73ffc473
  41f70e:	ins    DWORD PTR es:[edi],dx
  41f70f:	xor    eax,0xb10e3454
  41f714:	dec    eax
  41f715:	xor    DWORD PTR [ecx-0x4d],0x9c8fc33c
  41f71c:	pop    ds
  41f71d:	jno    0x41f6cb
  41f71f:	sbb    al,0xcd
  41f721:	lods   eax,DWORD PTR ds:[esi]
  41f722:	and    bl,dh
  41f724:	not    BYTE PTR [ebx]
  41f726:	jae    0x41f720
  41f728:	or     BYTE PTR [ebx],bh
  41f72a:	out    0xd4,al
  41f72c:	push   ss
  41f72d:	mov    edx,0xa8a17ab6
  41f732:	push   ebp
  41f733:	hlt    
  41f734:	and    eax,0x69cf4750
  41f739:	xchg   edi,eax
  41f73a:	aas    
  41f73b:	adc    eax,0xed65b87
  41f740:	xchg   ecx,eax
  41f741:	fst    st(5)
  41f743:	idiv   eax
  41f745:	popf   
  41f746:	sbb    eax,0xc540f4eb
  41f74b:	pop    eax
  41f74c:	sahf   
  41f74d:	jl     0x41f6f4
  41f74f:	adc    BYTE PTR [edx+0x13a22697],0xe
  41f756:	cdq    
  41f757:	daa    
  41f758:	fwait
  41f759:	or     DWORD PTR [eax],ecx
  41f75b:	mov    edi,0x930daa3b
  41f760:	adc    cl,BYTE PTR [ebx]
  41f762:	into   
  41f763:	push   es
  41f764:	lds    eax,FWORD PTR [edi-0x4b96f67]
  41f76a:	loope  0x41f7e9
  41f76c:	ins    BYTE PTR es:[edi],dx
  41f76d:	mov    ebp,0x57cacdd4
  41f772:	pop    esp
  41f773:	aad    0x5c
  41f775:	adc    DWORD PTR [eax],eax
  41f777:	pop    ecx
  41f778:	mov    edx,0xaac10380
  41f77d:	lods   al,BYTE PTR ds:[esi]
  41f77e:	data16 mov ds:0x45b80d14,al
  41f784:	xor    eax,0x60fb730
  41f789:	ins    BYTE PTR es:[edi],dx
  41f78a:	shl    BYTE PTR [edi+0x1e3df3e8],0x5f
  41f791:	loop   0x41f7c0
  41f793:	div    dl
  41f795:	sub    ecx,DWORD PTR [edi]
  41f797:	push   ds
  41f798:	mov    bh,BYTE PTR ds:0xb0a5505f
  41f79e:	jle    0x41f728
  41f7a0:	out    0x78,al
  41f7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a3:	shl    BYTE PTR [edx-0x4],cl
  41f7a6:	jnp    0x41f783
  41f7a8:	in     eax,dx
  41f7a9:	jo     0x41f750
  41f7ab:	std    
  41f7ac:	sub    al,0x96
  41f7ae:	xchg   BYTE PTR [esi],dh
  41f7b0:	push   ebp
  41f7b1:	lds    esp,FWORD PTR [esi+0x65]
  41f7b4:	jp     0x41f77f
  41f7b6:	repz jl 0x41f765
  41f7b9:	add    dh,dl
  41f7bb:	stos   BYTE PTR es:[edi],al
  41f7bc:	cld    
  41f7bd:	addr16 call 0x9483de69
  41f7c3:	sbb    cl,bh
  41f7c5:	dec    eax
  41f7c6:	inc    edi
  41f7c7:	inc    edi
  41f7c8:	pop    ss
  41f7c9:	stc    
  41f7ca:	inc    eax
  41f7cb:	push   esi
  41f7cc:	into   
  41f7cd:	inc    ebp
  41f7ce:	aad    0xa0
  41f7d0:	dec    edx
  41f7d1:	bound  esp,QWORD PTR [eax+0x55f4d041]
  41f7d7:	aad    0x7
  41f7d9:	test   eax,0xb83feaef
  41f7de:	sbb    ah,BYTE PTR [esi-0x504db506]
  41f7e4:	mov    bh,0xe5
  41f7e6:	cdq    
  41f7e7:	leave  
  41f7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e9:	fdiv   QWORD PTR [edi]
  41f7eb:	and    al,0xe9
  41f7ed:	mov    esi,0xa9b13951
  41f7f2:	std    
  41f7f3:	mov    esp,ebp
  41f7f5:	pop    es
  41f7f6:	sub    DWORD PTR [eax],esi
  41f7f8:	in     al,dx
  41f7f9:	shl    BYTE PTR [ebx],1
  41f7fb:	dec    eax
  41f7fc:	bound  esi,QWORD PTR [eax]
  41f7fe:	rcr    BYTE PTR [eax+0x1ef84baa],0xda
  41f805:	inc    esp
  41f806:	mov    ebx,0xe89d35f9
  41f80b:	mov    DWORD PTR [esi+edi*8-0x3a1f12e7],ebx
  41f812:	pop    eax
  41f813:	mov    edx,0x1c0c0de6
  41f818:	mov    ebp,0x57f49cd4
  41f81d:	sahf   
  41f81e:	jbe    0x41f7c6
  41f820:	add    DWORD PTR [esi],ebx
  41f822:	(bad)  
  41f824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f825:	ins    BYTE PTR es:[edi],dx
  41f826:	sub    eax,0x2a1d8bb5
  41f82b:	mov    bl,0x4d
  41f82d:	push   edi
  41f82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82f:	enter  0xb814,0x67
  41f833:	fisubr DWORD PTR [edx+0x339afcf5]
  41f839:	nop
  41f83a:	dec    ebp
  41f83b:	test   bl,dh
  41f83d:	ret    0x17fa
  41f840:	jp     0x41f8a4
  41f842:	fcom   QWORD PTR [eax]
  41f844:	ins    BYTE PTR es:[edi],dx
  41f845:	or     esp,ebx
  41f847:	clc    
  41f848:	sti    
  41f849:	ins    BYTE PTR es:[edi],dx
  41f84a:	pop    es
  41f84b:	push   0xffffffaf
  41f84d:	xchg   ebp,eax
  41f84e:	sbb    dl,ch
  41f850:	ret    
  41f851:	out    dx,eax
  41f852:	cmp    DWORD PTR [edi],edi
  41f854:	jle    0x41f854
  41f856:	mov    al,0x1a
  41f858:	dec    ebx
  41f859:	xchg   edi,eax
  41f85a:	cmp    bl,0xbc
  41f85d:	jbe    0x41f857
  41f85f:	cld    
  41f860:	jmp    0x232e:0xb93bd12
  41f867:	(bad)  
  41f869:	adc    ch,BYTE PTR [ecx]
  41f86b:	in     eax,0xc7
  41f86d:	out    dx,eax
  41f86e:	aam    0x7a
  41f870:	mov    ah,0xf7
  41f872:	(bad)  
  41f873:	pop    esp
  41f874:	pop    es
  41f875:	fsubr  QWORD PTR [edi]
  41f877:	daa    
  41f878:	jge    0x41f8f2
  41f87a:	ds test eax,0x85d1e94
  41f880:	cmp    edx,DWORD PTR [edi+0x11]
  41f883:	mov    ah,0x5e
  41f885:	pushf  
  41f886:	fist   WORD PTR [esi+0x4c]
  41f889:	das    
  41f88a:	xor    dh,BYTE PTR [edx-0x29]
  41f88d:	es push esp
  41f88f:	outs   dx,BYTE PTR ds:[esi]
  41f890:	or     edi,DWORD PTR [esi]
  41f892:	scas   eax,DWORD PTR es:[edi]
  41f893:	out    0x72,eax
  41f895:	rol    BYTE PTR [edi+0x35672f39],1
  41f89b:	mov    ch,0xfe
  41f89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f89e:	sbb    bl,0xc8
  41f8a1:	leave  
  41f8a2:	jno    0x41f8d3
  41f8a4:	fnstenv [ebx+0x71]
  41f8a7:	repnz sub bh,dh
  41f8aa:	inc    edi
  41f8ab:	outs   dx,DWORD PTR ds:[esi]
  41f8ac:	adc    DWORD PTR [eax+0x21],esp
  41f8af:	mov    al,ds:0x7c6a01c7
  41f8b4:	cmp    BYTE PTR ds:0x4a0f706a,0x28
  41f8bb:	popf   
  41f8bc:	adc    BYTE PTR [ecx+0x5fb497cb],dl
  41f8c2:	mov    ebp,0x5b55e6f0
  41f8c7:	xor    DWORD PTR [edi],esi
  41f8c9:	arpl   WORD PTR [edx+0x4b],cx
  41f8cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8cd:	jl     0x41f89f
  41f8cf:	adc    al,0x98
  41f8d1:	pop    eax
  41f8d2:	(bad)
  41f8d5:	loopne 0x41f8b0
  41f8d7:	adc    BYTE PTR [edx],ah
  41f8d9:	(bad)  [ebx-0x1d]
  41f8dc:	call   0x7b64:0xd15a429e
  41f8e3:	sbb    bh,dl
  41f8e5:	mov    edx,0x768c5507
  41f8ea:	sbb    DWORD PTR ds:0x561283db,edx
  41f8f0:	scas   eax,DWORD PTR es:[edi]
  41f8f1:	add    DWORD PTR [ebp+0x58c5b1],esi
  41f8f7:	sub    DWORD PTR [ebx+0x68bff488],ebx
  41f8fd:	fdiv   st,st(3)
  41f8ff:	inc    ebx
  41f900:	and    bh,BYTE PTR [eax+0x71ce4d5]
  41f906:	push   ebp
  41f907:	call   0x1995b13
  41f90c:	lock sahf 
  41f90e:	(bad)  
  41f90f:	sbb    al,0x52
  41f911:	call   0x9b99ae4b
  41f916:	mov    edi,DWORD PTR [edi-0x12]
  41f919:	adc    al,0xfe
  41f91b:	xor    ah,BYTE PTR [ecx-0xb]
  41f91e:	out    dx,al
  41f91f:	js     0x41f946
  41f921:	xor    al,0xe3
  41f923:	daa    
  41f924:	push   edx
  41f925:	dec    edi
  41f926:	mov    al,0x7d
  41f928:	mov    BYTE PTR [ecx+edi*1+0xd],cl
  41f92c:	jne    0x41f8ff
  41f92e:	dec    ecx
  41f92f:	ss js  0x41f904
  41f932:	add    eax,0xda5c6ac4
  41f937:	in     eax,dx
  41f938:	and    al,0xb2
  41f93a:	dec    ebx
  41f93b:	dec    ecx
  41f93c:	xchg   esi,eax
  41f93d:	lock adc eax,ebp
  41f940:	or     BYTE PTR [ebx+eax*4-0x5e45207c],cl
  41f947:	sub    al,0xc8
  41f949:	mov    WORD PTR [eax+0x1d],?
  41f94c:	sub    eax,0x4950baad
  41f951:	and    edx,ecx
  41f953:	add    eax,0x564a8683
  41f958:	jo     0x41f916
  41f95a:	es leave 
  41f95c:	mov    cl,0xb2
  41f95e:	imul   eax,DWORD PTR ds:0x7cb68f87,0x864352d3
  41f968:	adc    DWORD PTR [eax+0x13dc02a1],ebx
  41f96e:	jnp    0x41f921
  41f970:	adc    eax,0x649eca6d
  41f975:	add    dl,BYTE PTR [edx-0x396335af]
  41f97b:	shl    ecx,0xff
  41f97e:	adc    DWORD PTR [eax+edi*4],esp
  41f981:	and    BYTE PTR [ecx+0x5],0x9d
  41f985:	push   es
  41f986:	repz popf 
  41f988:	mov    al,0x80
  41f98a:	or     ch,bh
  41f98c:	pcmpeqb mm3,QWORD PTR [eax+0x43]
  41f990:	sub    eax,DWORD PTR [edi+0x51]
  41f993:	push   ecx
  41f994:	sub    edi,DWORD PTR [ecx+0x3914a84]
  41f99a:	xor    dl,bl
  41f99c:	repnz push 0xb5136da6
  41f9a2:	(bad)  
  41f9a3:	mov    ds:0xe4588f3a,eax
  41f9a8:	inc    esi
  41f9a9:	jge    0x41f972
  41f9ab:	ror    DWORD PTR [esi+0x8],0x89
  41f9af:	fsubr  st(6),st
  41f9b1:	sbb    BYTE PTR [eax],al
  41f9b3:	push   ds
  41f9b4:	xchg   ebp,eax
  41f9b5:	sub    BYTE PTR [eax-0x11638927],bh
  41f9bb:	in     eax,0xce
  41f9bd:	jge    0x41f9d3
  41f9bf:	and    ebp,DWORD PTR [edi+0x731477ee]
  41f9c5:	pop    edi
  41f9c6:	dec    ebp
  41f9c7:	inc    ebp
  41f9c8:	jle    0x41f9be
  41f9ca:	and    BYTE PTR [edi],0xd3
  41f9cd:	mov    bl,0x98
  41f9cf:	ins    DWORD PTR es:[edi],dx
  41f9d0:	push   es
  41f9d1:	sti    
  41f9d2:	(bad)  
  41f9d3:	sti    
  41f9d4:	mov    ch,ah
  41f9d6:	mov    esi,0x96ab39
  41f9db:	ins    BYTE PTR es:[edi],dx
  41f9dc:	mov    ah,0xa9
  41f9de:	fdiv   st(1),st
  41f9e0:	inc    ecx
  41f9e1:	ja     0x41fa17
  41f9e3:	leave  
  41f9e4:	jno    0x41f994
  41f9e6:	pop    esp
  41f9e7:	jne    0x41f9f6
  41f9e9:	inc    edx
  41f9ea:	push   edi
  41f9eb:	mov    bh,0x23
  41f9ed:	imul   eax,eax,0x41bef09b
  41f9f3:	cld    
  41f9f4:	popf   
  41f9f5:	shl    bh,cl
  41f9f7:	test   eax,0x12a2472b
  41f9fc:	push   esp
  41f9fd:	pop    ecx
  41f9fe:	ja     0x41fa18
  41fa00:	fnstenv [edx-0x32]
  41fa03:	sbb    cl,dl
  41fa05:	es imul esp,ebp,0xffffffe4
  41fa09:	scas   eax,DWORD PTR es:[edi]
  41fa0a:	clc    
  41fa0b:	sub    ecx,ebx
  41fa0d:	(bad)  
  41fa0e:	inc    esi
  41fa0f:	out    0x8c,al
  41fa11:	pop    edi
  41fa12:	das    
  41fa13:	popa   
  41fa14:	je     0x41fa2e
  41fa16:	jno    0x41fa1a
  41fa18:	push   esi
  41fa19:	adc    cl,BYTE PTR [edi+0x40856d5b]
  41fa1f:	test   eax,0x8e8e1ff4
  41fa24:	pushf  
  41fa25:	mov    eax,ds:0xb88500c6
  41fa2a:	retf   0x966c
  41fa2d:	call   0x5329:0x918fffb0
  41fa34:	push   ecx
  41fa35:	jmp    0xf6040f2f
  41fa3a:	add    DWORD PTR [ebp-0x4803bc36],esi
  41fa40:	xchg   esp,eax
  41fa41:	ss push ebx
  41fa43:	mov    dh,0x4f
  41fa45:	cdq    
  41fa46:	ret    0x121b
  41fa49:	in     eax,0xf7
  41fa4b:	fcmovnbe st,st(5)
  41fa4d:	sbb    eax,0xe2519dfe
  41fa52:	fwait
  41fa53:	jmp    0x8b8c2e46
  41fa58:	or     eax,0x6a4f329f
  41fa5d:	inc    ecx
  41fa5e:	xlat   BYTE PTR ds:[ebx]
  41fa5f:	enter  0x8f82,0x8f
  41fa63:	sub    BYTE PTR [ebx+ecx*8],0x1f
  41fa67:	inc    edx
  41fa68:	daa    
  41fa69:	jae    0x41fa88
  41fa6b:	shl    BYTE PTR [esi+edx*8],cl
  41fa6e:	and    ebx,DWORD PTR [ebx-0x1fdb80b2]
  41fa74:	pop    ss
  41fa75:	rcr    ah,0xbf
  41fa78:	loopne 0x41faea
  41fa7a:	inc    ebx
  41fa7b:	xor    al,dh
  41fa7d:	das    
  41fa7e:	gs stos DWORD PTR es:[edi],eax
  41fa80:	adc    al,0xac
  41fa82:	jge    0x41fa4a
  41fa84:	xor    al,0xa2
  41fa86:	xor    BYTE PTR [esi+0x3e],al
  41fa89:	mov    esp,0xddcfeef1
  41fa8e:	clc    
  41fa8f:	sub    eax,0x61451ef1
  41fa94:	mov    ds:0x4b4d96b3,eax
  41fa99:	sbb    BYTE PTR [edx-0x4f4397e9],dl
  41fa9f:	bound  ebx,QWORD PTR [ebx-0x7447153b]
  41faa5:	xor    ebx,DWORD PTR [ecx]
  41faa7:	lea    esi,[esi+0x1bcf24ff]
  41faad:	retf   0x4e39
  41fab0:	sbb    al,0xb0
  41fab2:	sub    al,0x76
  41fab4:	iret   
  41fab5:	das    
  41fab6:	(bad)  
  41fab8:	cli    
  41fab9:	stos   BYTE PTR es:[edi],al
  41faba:	sahf   
  41fabb:	(bad)
  41fabe:	sub    eax,0xfa931ff9
  41fac3:	lds    ebx,FWORD PTR [ebp+0x30f94d34]
  41fac9:	in     al,0x4a
  41facb:	shr    DWORD PTR [ecx],cl
  41facd:	cld    
  41face:	adc    DWORD PTR [edi],esi
  41fad0:	xor    edi,DWORD PTR ds:0xca3a8775
  41fad6:	enter  0xc99a,0xd6
  41fada:	test   BYTE PTR [ebx-0x11d7ca72],dh
  41fae0:	add    cl,BYTE PTR [edi-0x62]
  41fae3:	fcom   st(7)
  41fae5:	shr    bl,0x93
  41fae8:	std    
  41fae9:	push   0xed674f90
  41faee:	sahf   
  41faef:	inc    ebp
  41faf0:	mov    dh,0x26
  41faf2:	and    ebx,DWORD PTR [eax-0x4]
  41faf5:	loop   0x41fb76
  41faf7:	mov    bh,0x13
  41faf9:	sub    DWORD PTR ds:0x9f0c15dd,0x56
  41fb00:	xchg   esi,eax
  41fb01:	mov    eax,0xbae4919
  41fb06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb07:	jb     0x41faad
  41fb09:	loopne 0x41fb6f
  41fb0b:	mov    dl,0xfe
  41fb0d:	push   ss
  41fb0e:	mov    ss,eax
  41fb10:	sub    eax,0x3d71ec61
  41fb15:	dec    eax
  41fb16:	bnd jb 0x41fae3
  41fb19:	pop    edi
  41fb1a:	or     al,0x3
  41fb1c:	int    0x9f
  41fb1e:	mov    bl,0x65
  41fb20:	pop    eax
  41fb21:	mov    ds:0x4a2aa1a1,eax
  41fb26:	cmp    ebp,ebx
  41fb28:	jge    0x41fb6c
  41fb2a:	sub    al,0x93
  41fb2c:	fs cdq 
  41fb2e:	lods   al,BYTE PTR ds:[esi]
  41fb2f:	mov    fs,WORD PTR [esi+0xb8d72f9]
  41fb35:	pop    edx
  41fb36:	push   es
  41fb37:	dec    ecx
  41fb38:	int    0x1f
  41fb3a:	mov    ch,BYTE PTR [ebx+0x5acba135]
  41fb40:	adc    al,BYTE PTR [edx-0x25]
  41fb43:	xchg   edi,eax
  41fb44:	jbe    0x41fb1b
  41fb46:	or     DWORD PTR [edi+0x39a5556],ebx
  41fb4c:	data16 (bad) 
  41fb4e:	jno    0x41fad7
  41fb50:	cmp    dl,BYTE PTR [edx+0xb]
  41fb53:	push   ebx
  41fb54:	sbb    ebp,edi
  41fb56:	icebp  
  41fb57:	test   eax,eax
  41fb59:	push   ss
  41fb5a:	hlt    
  41fb5b:	sub    DWORD PTR [esi-0x14b18b05],esp
  41fb61:	xchg   ecx,eax
  41fb62:	mov    ds:0x79bf9e62,al
  41fb67:	cmp    DWORD PTR ds:0x95293401,esi
  41fb6d:	sub    BYTE PTR [ecx],cl
  41fb6f:	bound  eax,QWORD PTR [edi+0x52c38de6]
  41fb75:	mov    esp,0xc9605d95
  41fb7a:	xor    al,0x91
  41fb7c:	popa   
  41fb7d:	scas   al,BYTE PTR es:[edi]
  41fb7e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb80:	pop    edi
  41fb81:	in     al,0xd4
  41fb83:	mov    cl,0x5
  41fb85:	xchg   BYTE PTR [edi+0x73],dl
  41fb88:	and    al,0x46
  41fb8a:	push   ss
  41fb8b:	in     eax,0x4b
  41fb8d:	loop   0x41fb93
  41fb8f:	lods   eax,DWORD PTR ds:[esi]
  41fb90:	loope  0x41fbba
  41fb92:	mov    ebp,0xae4d1c1f
  41fb97:	add    BYTE PTR [edx+0x3a],dh
  41fb9a:	xor    al,0x88
  41fb9c:	pop    di
  41fb9e:	ret    
  41fb9f:	pop    eax
  41fba0:	xchg   ebx,eax
  41fba1:	outs   dx,DWORD PTR ds:[esi]
  41fba2:	mov    BYTE PTR [ebx-0x478bcdab],bl
  41fba8:	test   al,0xc8
  41fbaa:	xor    eax,0x13e60387
  41fbaf:	imul   bl
  41fbb1:	add    BYTE PTR [edi-0x1c],bh
  41fbb4:	sbb    al,0x77
  41fbb6:	retf   
  41fbb7:	ins    DWORD PTR es:[edi],dx
  41fbb8:	mov    edi,0x59c0b3fe
  41fbbd:	mov    ebx,0xd23f74a8
  41fbc2:	loop   0x41fc2c
  41fbc4:	or     al,0xe6
  41fbc6:	add    ebp,ebp
  41fbc8:	shl    DWORD PTR cs:[ecx],0x12
  41fbcc:	iret   
  41fbcd:	and    ah,BYTE PTR [eax-0x3a528170]
  41fbd3:	mov    ch,0xf4
  41fbd5:	(bad)  
  41fbd6:	ror    esi,1
  41fbd8:	enter  0x4a6,0x9c
  41fbdc:	test   BYTE PTR [ebx-0x15226062],dh
  41fbe2:	loope  0x41fbb3
  41fbe4:	scas   eax,DWORD PTR es:[edi]
  41fbe5:	add    ch,BYTE PTR [esi]
  41fbe7:	push   ecx
  41fbe8:	pop    esi
  41fbe9:	icebp  
  41fbea:	push   edi
  41fbeb:	pop    edx
  41fbec:	xlat   BYTE PTR ds:[ebx]
  41fbed:	je     0x41fb76
  41fbef:	shl    esp,0x15
  41fbf2:	mov    al,ds:0x8158ed4c
  41fbf7:	mov    esi,0x3ab77a0d
  41fbfc:	pop    edi
  41fbfd:	dec    ebp
  41fbfe:	lahf   
  41fbff:	mov    bl,0x68
  41fc01:	push   ecx
  41fc02:	inc    edi
  41fc03:	cmp    al,BYTE PTR [ebx+0x9b9041b]
  41fc09:	data16 stos BYTE PTR es:[edi],al
  41fc0b:	cmp    al,BYTE PTR [eax+0x65678d94]
  41fc11:	pop    eax
  41fc12:	and    BYTE PTR [edx+ebx*8],bh
  41fc15:	adc    DWORD PTR [esi-0x3a74842e],eax
  41fc1b:	fwait
  41fc1c:	outs   dx,BYTE PTR ds:[esi]
  41fc1d:	add    DWORD PTR [edx-0x80],0xffffffd8
  41fc21:	adc    eax,0x4826f4d2
  41fc26:	push   0xdf1d707d
  41fc2b:	pop    ebx
  41fc2c:	dec    edi
  41fc2d:	xchg   ebx,eax
  41fc2e:	fmul   QWORD PTR [edi-0x27]
  41fc31:	mov    dh,0x2d
  41fc33:	mov    ecx,0xec133097
  41fc38:	xchg   esp,eax
  41fc39:	inc    esp
  41fc3a:	jns    0x41fbfd
  41fc3c:	xchg   edx,eax
  41fc3d:	test   ebp,0xde83d91b
  41fc43:	and    ebp,edx
  41fc45:	jb     0x41fc7d
  41fc47:	add    BYTE PTR [esi+0xf75d185],ch
  41fc4d:	int    0xad
  41fc4f:	or     ch,al
  41fc51:	and    bh,BYTE PTR [ecx+0x22]
  41fc54:	fwait
  41fc55:	out    0xb4,al
  41fc57:	dec    esi
  41fc58:	fimul  WORD PTR [edi]
  41fc5a:	cdq    
  41fc5b:	ja     0x41fc67
  41fc5d:	loopne 0x41fcde
  41fc5f:	pop    ecx
  41fc60:	sbb    bl,BYTE PTR [ebp-0x6d8d5216]
  41fc66:	xchg   edi,eax
  41fc67:	and    eax,0x608350c4
  41fc6c:	inc    esp
  41fc6d:	outs   dx,DWORD PTR ds:[esi]
  41fc6e:	(bad)  
  41fc6f:	into   
  41fc70:	fistp  DWORD PTR [ebx-0x4f]
  41fc73:	imul   ebx,DWORD PTR ds:0x9e70ea10,0xe6ef45ad
  41fc7d:	xchg   edx,eax
  41fc7e:	xor    ch,BYTE PTR [eiz*8-0x5c280516]
  41fc85:	in     al,0xca
  41fc87:	cmp    DWORD PTR [esi],eax
  41fc89:	xchg   ebx,eax
  41fc8a:	dec    ecx
  41fc8b:	retf   
  41fc8c:	mov    eax,ds:0x477efdf5
  41fc91:	push   ebp
  41fc92:	call   0xf130:0x570114ab
  41fc99:	out    dx,al
  41fc9a:	fwait
  41fc9b:	push   0x64
  41fc9d:	or     al,0x50
  41fc9f:	int    0xc3
  41fca1:	hlt    
  41fca2:	dec    esi
  41fca3:	loope  0x41fc34
  41fca5:	mov    dh,0xb3
  41fca7:	adc    dh,ch
  41fca9:	test   BYTE PTR [ecx],0xbc
  41fcac:	lods   eax,DWORD PTR ds:[esi]
  41fcad:	mov    WORD PTR ds:0x37e11b89,gs
  41fcb3:	clc    
  41fcb4:	dec    edx
  41fcb5:	fisub  WORD PTR [edx]
  41fcb7:	dec    edi
  41fcb8:	in     eax,dx
  41fcb9:	xor    bh,BYTE PTR [esp+ebp*4]
  41fcbc:	arpl   WORD PTR [edx],bx
  41fcbe:	inc    edx
  41fcbf:	cmc    
  41fcc0:	lods   al,BYTE PTR ds:[esi]
  41fcc1:	popf   
  41fcc2:	cld    
  41fcc3:	jb     0x41fd07
  41fcc5:	sbb    DWORD PTR [edi-0x503fb864],ebp
  41fccb:	mov    eax,0x3d5245de
  41fcd0:	mov    al,0xd2
  41fcd2:	imul   ecx,esi,0xe51af069
  41fcd8:	inc    edx
  41fcd9:	loope  0x41fd3a
  41fcdb:	js     0x41fd46
  41fcdd:	outs   dx,DWORD PTR ds:[esi]
  41fcde:	inc    edi
  41fcdf:	aam    0x82
  41fce1:	jle    0x41fcc8
  41fce3:	sub    dh,bh
  41fce5:	dec    BYTE PTR [ebp-0x13]
  41fce8:	retf   0x799b
  41fceb:	mov    ch,0x77
  41fced:	mov    edx,0x635800c3
  41fcf2:	pusha  
  41fcf3:	stc    
  41fcf4:	bound  ebp,QWORD PTR [esi]
  41fcf6:	or     al,0xe1
  41fcf8:	ds or  al,0xf4
  41fcfb:	call   DWORD PTR [eax+0x31]
  41fcfe:	or     al,0x9a
  41fd00:	addr16 mov ds:0x25c6,al
  41fd04:	test   al,0x1d
  41fd06:	cli    
  41fd07:	push   0xb0c78ed8
  41fd0c:	call   0xd17c:0x3cb1b048
  41fd13:	mov    dh,0xa3
  41fd15:	std    
  41fd16:	cli    
  41fd17:	xlat   BYTE PTR ds:[ebx]
  41fd19:	inc    ebp
  41fd1a:	dec    esp
  41fd1b:	(bad)  
  41fd1c:	mov    ds:0x16616af2,al
  41fd21:	mov    al,ds:0xce1df39a
  41fd26:	pop    edi
  41fd27:	shr    DWORD PTR [ecx+0x62fabf75],1
  41fd2d:	or     bh,BYTE PTR [eax]
  41fd2f:	into   
  41fd30:	dec    ebp
  41fd31:	imul   edx,DWORD PTR [edi+ebx*8-0x53],0xead21530
  41fd39:	xor    al,0xb2
  41fd3b:	push   0xffffff83
  41fd3d:	aas    
  41fd3e:	cwde   
  41fd3f:	rcl    ch,0xd9
  41fd42:	dec    esp
  41fd43:	pop    ebp
  41fd44:	xor    dh,BYTE PTR [ecx-0x2]
  41fd47:	pop    es
  41fd48:	cmp    ebp,DWORD PTR ss:[eax]
  41fd4b:	ss inc edx
  41fd4d:	dec    edi
  41fd4e:	je     0x41fcfe
  41fd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd51:	cdq    
  41fd52:	cmp    esp,DWORD PTR [eax]
  41fd54:	xchg   edi,eax
  41fd55:	xchg   ebp,eax
  41fd56:	xor    eax,0xf0e6b01f
  41fd5b:	enter  0xb4e6,0x10
  41fd5f:	popa   
  41fd60:	pusha  
  41fd61:	jns    0x41fd29
  41fd63:	jg     0x41fd89
  41fd65:	int    0x89
  41fd67:	inc    BYTE PTR [eax]
  41fd69:	ins    BYTE PTR es:[edi],dx
  41fd6a:	jle    0x41fdbf
  41fd6c:	or     BYTE PTR [ecx+esi*1],dh
  41fd6f:	mov    ebp,0x9bb33d58
  41fd74:	repnz xor al,0xd4
  41fd77:	jns    0x41fd2f
  41fd79:	fcomp  DWORD PTR [edi+eiz*2]
  41fd7c:	fstp   DWORD PTR [esp+ecx*1-0x7bed661d]
  41fd83:	(bad)  
  41fd84:	sbb    DWORD PTR [ebx+0x70],eax
  41fd87:	jne    0x41fd1a
  41fd89:	push   edx
  41fd8a:	adc    ebp,edx
  41fd8c:	sub    bl,ch
  41fd8e:	es xor esp,edx
  41fd91:	pop    fs
  41fd93:	bswap  ebp
  41fd95:	mov    ebx,0x91a331d4
  41fd9a:	ficomp DWORD PTR [ecx+eax*2]
  41fd9d:	mov    ebp,0xe82d1ccb
  41fda2:	push   esp
  41fda3:	lock sbb al,0x33
  41fda6:	mov    ds:0xdccf5f0b,al
  41fdab:	mov    edx,0xd83b344e
  41fdb0:	push   eax
  41fdb1:	cmp    al,BYTE PTR [edi-0x51730fde]
  41fdb7:	jne    0x41fd7d
  41fdb9:	aad    0x7c
  41fdbb:	rol    DWORD PTR [ebx],1
  41fdbd:	mov    ds:0x8a090eb2,al
  41fdc2:	cmp    al,0xbb
  41fdc4:	sub    ebp,DWORD PTR ds:0x18fde4a1
  41fdca:	sub    ebp,eax
  41fdcc:	jg     0x41fd97
  41fdce:	inc    eax
  41fdcf:	add    DWORD PTR [ebp+0x2c],esi
  41fdd2:	ins    DWORD PTR es:[edi],dx
  41fdd3:	mov    edi,0x19769677
  41fdd8:	jmp    0x2ccb:0xddd8474a
  41fddf:	out    dx,eax
  41fde0:	ds ret 
  41fde2:	dec    esp
  41fde3:	arpl   WORD PTR [edx-0x55],dx
  41fde6:	add    eax,0x9b56a242
  41fdeb:	aaa    
  41fdec:	mov    ds:0x8c3e0be3,al
  41fdf1:	sub    DWORD PTR [edi+0x2a516f1d],esp
  41fdf7:	inc    esp
  41fdf8:	mov    edi,0x1b57f11c
  41fdfd:	lahf   
  41fdfe:	push   edx
  41fe00:	pusha  
  41fe01:	adc    DWORD PTR [esi-0x7c],0x642ffde3
  41fe08:	or     al,0x7f
  41fe0a:	push   esi
  41fe0b:	jae    0x41fdcf
  41fe0d:	ja     0x41fe55
  41fe0f:	ja     0x41fe0b
  41fe11:	and    al,0x8b
  41fe13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe14:	push   eax
  41fe15:	cs sahf 
  41fe17:	je     0x41fe1a
  41fe19:	adc    DWORD PTR [esi+eiz*1+0x65],ebp
  41fe1d:	je     0x41fe05
  41fe1f:	pop    eax
  41fe20:	xchg   ebx,eax
  41fe21:	mov    edi,0xa9dd6793
  41fe26:	je     0x41fe9c
  41fe28:	cmp    BYTE PTR [ecx+0x58],dl
  41fe2b:	cmp    eax,0x757bdfb6
  41fe30:	or     dh,bl
  41fe32:	jl     0x41fe40
  41fe34:	add    al,0x87
  41fe36:	shl    DWORD PTR [edi-0x6cd91cfe],1
  41fe3c:	sbb    ch,BYTE PTR [ecx-0x1df8a28d]
  41fe42:	cwde   
  41fe43:	mov    bh,0x40
  41fe45:	mov    BYTE PTR [edi],cl
  41fe47:	jne    0x41fe6b
  41fe49:	cmp    BYTE PTR [ebx+eax*1-0x732cf79],dl
  41fe50:	aas    
  41fe51:	lods   al,BYTE PTR ds:[esi]
  41fe52:	lahf   
  41fe53:	jmp    0x5cfd7cf5
  41fe58:	fstp   TBYTE PTR [edi]
  41fe5a:	sbb    ah,BYTE PTR [edi+0x479bf1b7]
  41fe60:	jno    0x41fe75
  41fe62:	lea    ebx,[esi]
  41fe64:	mov    ecx,0x95fe7287
  41fe69:	and    BYTE PTR [ebx],dl
  41fe6b:	pop    edx
  41fe6c:	and    al,0xf0
  41fe6e:	inc    edi
  41fe6f:	call   0xf898:0x192ecd56
  41fe76:	adc    BYTE PTR [edx],ah
  41fe78:	imul   BYTE PTR [edx+edx*2-0x27d87065]
  41fe7f:	out    dx,al
  41fe80:	mov    ecx,0xbbe97c2e
  41fe85:	push   ebp
  41fe86:	hlt    
  41fe87:	adc    BYTE PTR [edi+0x2adec8a5],al
  41fe8d:	cli    
  41fe8e:	fisttp WORD PTR [eax]
  41fe90:	das    
  41fe91:	xchg   ebp,eax
  41fe92:	mov    bh,0x7f
  41fe94:	retf   
  41fe95:	sub    ch,0x18
  41fe98:	mov    edx,0xe8d3aab3
  41fe9d:	call   0xd481:0x22069bd3
  41fea4:	shl    BYTE PTR [ebx+eiz*1-0x1439483f],cl
  41feab:	sbb    ch,BYTE PTR [esp+ecx*4-0x11]
  41feaf:	jnp    0x41fe86
  41feb1:	ror    ebx,0x32
  41feb4:	cdq    
  41feb5:	inc    ebx
  41feb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb7:	popa   
  41feb8:	and    BYTE PTR [ecx+0x4],al
  41febb:	popa   
  41febc:	cmp    eax,0xa0c64002
  41fec1:	xor    edi,DWORD PTR ds:0x84a79673
  41fec7:	or     edx,DWORD PTR [edi+0x7c]
  41feca:	es popf 
  41fecc:	fst    DWORD PTR [esi+0x625cce27]
  41fed2:	pop    esi
  41fed3:	jne    0x41ff20
  41fed5:	jmp    0x41ff31
  41fed7:	sub    DWORD PTR [ebx],edi
  41fed9:	inc    edx
  41feda:	pop    es
  41fedb:	mov    esp,0xa7eb7cbc
  41fee0:	add    al,0x23
  41fee2:	mov    al,ds:0x57ee46ba
  41fee7:	test   eax,eax
  41fee9:	clc    
  41feea:	xlat   BYTE PTR ds:[ebx]
  41feeb:	(bad)  
  41feec:	fcmovnu st,st(0)
  41feee:	in     al,0x43
  41fef0:	push   ebx
  41fef1:	xchg   BYTE PTR [ebx],dl
  41fef3:	les    ecx,FWORD PTR ss:[edi-0x76]
  41fef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef8:	(bad)  
  41fef9:	pmaxub mm4,mm7
  41fefc:	in     eax,dx
  41fefd:	push   es
  41fefe:	jge    0x41ff16
  41ff00:	adc    eax,0x56053017
  41ff05:	pushf  
  41ff06:	std    
  41ff07:	cwde   
  41ff08:	fst    QWORD PTR [edx+0x34]
  41ff0b:	mov    ds:0xcacaa31b,al
  41ff10:	or     eax,0xbb66b2b3
  41ff15:	xor    BYTE PTR ds:0x2b5961a7,ch
  41ff1b:	pop    ds
  41ff1c:	popf   
  41ff1d:	pop    ecx
  41ff1e:	daa    
  41ff1f:	xlat   BYTE PTR ds:[ebx]
  41ff20:	popf   
  41ff21:	into   
  41ff22:	push   ebx
  41ff23:	pop    ss
  41ff24:	fwait
  41ff25:	and    esp,DWORD PTR [edi-0x5fb5e2d9]
  41ff2b:	xor    al,0x76
  41ff2d:	cli    
  41ff2e:	mov    cl,BYTE PTR [ebp+esi*2+0x7c]
  41ff32:	or     bl,BYTE PTR [esp+ebp*2]
  41ff35:	paddusb mm5,mm1
  41ff38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff39:	test   al,0xac
  41ff3b:	cs xchg ebp,eax
  41ff3d:	cmc    
  41ff3e:	pop    eax
  41ff3f:	outs   dx,DWORD PTR ds:[esi]
  41ff40:	push   DWORD PTR [edx-0x52d73ad0]
  41ff46:	dec    ebx
  41ff47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff48:	add    ah,ah
  41ff4a:	cmp    bh,dl
  41ff4c:	or     edx,DWORD PTR [esi+0x1d]
  41ff4f:	in     al,0x13
  41ff51:	sbb    al,0xfb
  41ff53:	ja     0x41ff2b
  41ff55:	cs mov ecx,0xa29a491b
  41ff5b:	pusha  
  41ff5c:	xor    bl,ch
  41ff5e:	push   es
  41ff5f:	or     al,0x2
  41ff61:	cdq    
  41ff62:	or     BYTE PTR [ebp-0x16],al
  41ff65:	xor    BYTE PTR [ecx+0x280450f4],al
  41ff6b:	stos   BYTE PTR es:[edi],al
  41ff6c:	adc    cl,BYTE PTR [esi]
  41ff6e:	(bad)  
  41ff6f:	sub    eax,0x3ac2db2c
  41ff74:	push   esi
  41ff75:	push   edx
  41ff76:	out    0x2c,al
  41ff78:	mov    al,BYTE PTR [edi-0x109ca309]
  41ff7e:	mov    fs,WORD PTR [esi-0x1face7f2]
  41ff84:	push   ecx
  41ff85:	hlt    
  41ff86:	das    
  41ff87:	bound  ebx,QWORD PTR [ecx+0x1d80d186]
  41ff8d:	xchg   ebx,eax
  41ff8e:	dec    edi
  41ff8f:	gs lock mov al,0x5e
  41ff93:	mov    bh,0xfa
  41ff95:	(bad)  
  41ff96:	scas   al,BYTE PTR es:[edi]
  41ff97:	and    DWORD PTR [edi],ebp
  41ff99:	lea    edi,[edx-0x6ae6d87e]
  41ff9f:	cmp    dh,BYTE PTR [esi*4-0x7a7c3727]
  41ffa6:	sub    BYTE PTR [esi],bl
  41ffa8:	push   eax
  41ffa9:	push   edx
  41ffaa:	je     0x41ff42
  41ffac:	pop    ebx
  41ffad:	shr    DWORD PTR [ebx+esi*2-0x3182e9ad],1
  41ffb4:	sbb    al,0x5e
  41ffb6:	pusha  
  41ffb7:	mov    WORD PTR [ebx],?
  41ffb9:	mov    ds:0xab53f00d,eax
  41ffbe:	jno    0x41ff70
  41ffc0:	stos   BYTE PTR es:[edi],al
  41ffc1:	mov    DWORD PTR [ebp+0x39],0xf985969b
  41ffc8:	cmp    al,0xbe
  41ffca:	js     0x41ff9f
  41ffcc:	es push ds
  41ffce:	xor    al,BYTE PTR [esp+eax*1-0x3511db14]
  41ffd5:	jns    0x420050
  41ffd7:	push   0xfa0fe020
  41ffdc:	fld    TBYTE PTR [esi-0x2d]
  41ffdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe0:	loopne 0x41ff67
  41ffe2:	inc    BYTE PTR [eax+edi*8+0x67]
  41ffe6:	lea    edi,[eax+0x29]
  41ffe9:	adc    ch,cl
  41ffeb:	dec    edx
  41ffec:	pop    ecx
  41ffed:	adc    eax,0x1447c565
  41fff2:	inc    eax
  41fff3:	mov    ds:0x57dbd995,eax
  41fff8:	ja     0x41ffd8
  41fffa:	clc    
  41fffb:	hlt    
  41fffc:	jmp    0xb1c29804
  420001:	int    0x93
  420003:	lea    edx,[ecx-0xf0a69ca]
  420009:	(bad)  
  42000a:	or     edx,DWORD PTR [eax]
  42000c:	mov    ch,0x56
  42000e:	test   DWORD PTR [ecx],0x7884a7bd
  420014:	dec    esp
  420015:	mov    WORD PTR [edi+0x55],fs
  420018:	pushf  
  420019:	jge    0x42001a
  42001b:	addr16 xchg edi,eax
  42001d:	icebp  
  42001e:	and    DWORD PTR [ebx],edi
  420020:	xchg   DWORD PTR [ebp+0x2beeb505],edi
  420026:	cmp    ch,BYTE PTR [ebx-0x3f]
  420029:	xchg   esi,eax
  42002a:	mov    esi,0x412db9d2
  42002f:	hlt    
  420030:	out    dx,eax
  420031:	lahf   
  420032:	xchg   DWORD PTR [eax],esi
  420034:	pop    ds
  420035:	outs   dx,BYTE PTR ds:[esi]
  420036:	stos   BYTE PTR es:[edi],al
  420037:	idiv   DWORD PTR [ecx+0x6e7e01f3]
  42003d:	lahf   
  42003e:	push   ebx
  42003f:	outs   dx,DWORD PTR ds:[esi]
  420040:	sbb    dl,bh
  420042:	inc    ebx
  420043:	scas   al,BYTE PTR es:[edi]
  420044:	fadd   QWORD PTR ds:0x323b8bf0
  42004a:	stc    
  42004b:	pusha  
  42004c:	(bad)  
  42004d:	sti    
  42004e:	jle    0x41ffdb
  420050:	mov    WORD PTR [edx-0x58],?
  420053:	sbb    DWORD PTR [eax+0x5c],ecx
  420056:	or     eax,DWORD PTR [ebx+0x2b]
  420059:	lea    ebp,[eax+0x776a23a0]
  42005f:	add    BYTE PTR [eax+0x7dab828d],ch
  420065:	scas   eax,DWORD PTR es:[edi]
  420066:	lock dec esp
  420068:	icebp  
  420069:	inc    eax
  42006a:	xor    al,0x1
  42006c:	mov    al,ds:0xa481f23e
  420071:	push   esi
  420072:	xor    edx,edi
  420074:	cmp    BYTE PTR es:[ecx+0x78],al
  420078:	mov    ah,0x34
  42007a:	jae    0x42008a
  42007c:	jl     0x420093
  42007e:	sbb    eax,0x57dc484d
  420083:	pop    ds
  420084:	xor    cl,BYTE PTR [esi]
  420086:	add    al,bl
  420088:	loopne 0x420100
  42008a:	in     eax,dx
  42008b:	dec    edi
  42008c:	jae    0x42004d
  42008e:	stc    
  42008f:	je     0x420055
  420091:	sbb    BYTE PTR [ebx-0x6091be99],ah
  420097:	retf   
  420098:	jo     0x4200a0
  42009a:	fmul   st(1),st
  42009c:	and    eax,DWORD PTR [eax]
  42009e:	jb     0x420085
  4200a0:	fdivr  QWORD PTR [edi-0x6eaeb1bc]
  4200a6:	pop    ebp
  4200a7:	or     DWORD PTR [edi-0x3bece96d],edx
  4200ad:	or     ah,BYTE PTR [ebx-0x264cc747]
  4200b3:	jns    0x42008b
  4200b5:	cs fwait
  4200b7:	les    ebp,FWORD PTR [edi+0x13]
  4200ba:	call   0x6cb4ae24
  4200bf:	bnd jle 0x42010f
  4200c2:	push   ecx
  4200c3:	xor    al,0x67
  4200c5:	inc    edi
  4200c6:	add    eax,0x256187f8
  4200cb:	adc    DWORD PTR [esi-0x3aadd3de],esp
  4200d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d2:	mov    ecx,0xca8dcde4
  4200d7:	fs pop eax
  4200d9:	push   eax
  4200da:	iret   
  4200db:	pop    ds
  4200dc:	bound  edi,QWORD PTR ds:0x5c828e44
  4200e2:	(bad)  
  4200e3:	mov    ebx,0xa27fe42a
  4200e8:	lea    esi,[edi]
  4200ea:	lahf   
  4200eb:	clc    
  4200ec:	xor    eax,0xa98292b6
  4200f1:	and    dh,0x9e
  4200f4:	push   0xffffffec
  4200f6:	jns    0x42012a
  4200f8:	add    eax,0xeee74be9
  4200fd:	add    dh,BYTE PTR [ecx+0x659a1d6f]
  420103:	cwde   
  420104:	cli    
  420105:	retf   
  420106:	fiadd  WORD PTR [edi-0x35]
  420109:	xchg   edi,eax
  42010a:	push   ecx
  42010b:	jo     0x4200e9
  42010d:	arpl   WORD PTR ds:0x8a62f55d,sp
  420113:	fmul   st,st(2)
  420115:	sbb    DWORD PTR [ecx],edx
  420117:	add    al,0xbb
  420119:	push   cs
  42011a:	push   es
  42011b:	ja     0x4200ed
  42011d:	jns    0x4200ef
  42011f:	xor    BYTE PTR [edx+0x3a],cl
  420122:	xchg   ebp,eax
  420123:	dec    ebx
  420124:	mov    eax,ds:0xa56e208b
  420129:	inc    edx
  42012a:	cld    
  42012b:	pop    ecx
  42012c:	lods   al,BYTE PTR ds:[esi]
  42012d:	mul    DWORD PTR [edx+0xb]
  420130:	push   eax
  420131:	inc    eax
  420132:	stos   BYTE PTR es:[edi],al
  420133:	das    
  420134:	sbb    esi,DWORD PTR ds:0xd9b7537a
  42013a:	inc    ebp
  42013b:	sub    DWORD PTR [edi-0xd],esi
  42013e:	mov    edi,0xc90c496c
  420143:	or     DWORD PTR [esi],0x4be51567
  420149:	ret    0x530e
  42014c:	pop    ss
  42014d:	retf   
  42014e:	bound  edx,QWORD PTR [ecx-0x6adfb2ba]
  420154:	jmp    FWORD PTR [edi+0x6a8ced0a]
  42015a:	nop
  42015b:	lods   al,BYTE PTR ds:[esi]
  42015c:	fimul  WORD PTR [ebx+0x19]
  42015f:	(bad)  
  420160:	out    dx,al
  420161:	dec    ecx
  420162:	mov    ?,WORD PTR ds:0x88d4380
  420168:	xchg   DWORD PTR [eax+eiz*2],esp
  42016b:	adc    DWORD PTR [ecx+eax*8],ebx
  42016e:	mov    ds:0x4cc23cac,eax
  420173:	adc    DWORD PTR [eax+0x10a7ebb],ecx
  420179:	mov    dl,0xe4
  42017b:	or     eax,0x75a1d643
  420180:	cwde   
  420181:	cwde   
  420182:	push   esp
  420183:	lea    ebp,[edi]
  420185:	xor    DWORD PTR [eax+0x7e],ecx
  420188:	fist   WORD PTR [ebx-0x52cdb8f]
  42018e:	cmp    BYTE PTR [ebp-0x71],0x44
  420192:	xchg   esp,eax
  420193:	inc    eax
  420194:	ja     0x420190
  420196:	dec    esi
  420197:	push   ebx
  420198:	adc    ah,BYTE PTR [ebx*8+0x5f39c5c9]
  42019f:	cmp    al,0xf1
  4201a1:	test   BYTE PTR [esi-0x6f],0x8
  4201a5:	ds scas eax,DWORD PTR es:[edi]
  4201a7:	stos   BYTE PTR es:[edi],al
  4201a8:	imul   al
  4201aa:	sahf   
  4201ab:	or     eax,0x427b7044
  4201b0:	cmp    DWORD PTR [eax+0x4d],edi
  4201b3:	lods   eax,DWORD PTR ds:[esi]
  4201b4:	mov    dh,0xe8
  4201b6:	xchg   edi,eax
  4201b7:	mov    BYTE PTR es:[ecx-0x4a],0xb4
  4201bc:	cmp    DWORD PTR [esi],ebp
  4201be:	add    cl,BYTE PTR [ebx-0x16]
  4201c1:	xchg   ebp,eax
  4201c2:	lods   eax,DWORD PTR ds:[esi]
  4201c3:	push   edi
  4201c4:	dec    ebp
  4201c5:	imul   ecx,edi,0x2c97d89
  4201cb:	popa   
  4201cc:	adc    eax,DWORD PTR [edx-0x4d]
  4201cf:	mov    ch,dh
  4201d1:	sub    eax,0x9777c156
  4201d6:	test   eax,0x6a4daf1e
  4201db:	data16 or dl,BYTE PTR [eax-0x5]
  4201df:	sub    ecx,edx
  4201e1:	and    al,0xb0
  4201e3:	xor    eax,0xabafdb2a
  4201e8:	or     ebp,DWORD PTR [ebx]
  4201ea:	dec    esi
  4201eb:	push   ds
  4201ec:	(bad)  
  4201ed:	aad    0x2c
  4201ef:	stos   BYTE PTR es:[edi],al
  4201f0:	loopne 0x42023f
  4201f2:	jnp    0x420271
  4201f4:	fimul  DWORD PTR [ecx+0x7e82218b]
  4201fa:	mov    ss,edi
  4201fc:	pushf  
  4201fd:	fwait
  4201fe:	or     al,0x5c
  420200:	out    0x12,al
  420202:	sub    BYTE PTR [edi+0x2],0xe6
  420206:	xchg   ebp,eax
  420207:	jnp    0x4201e8
  420209:	fnstcw WORD PTR [ecx]
  42020b:	js     0x42027c
  42020d:	sbb    ch,al
  42020f:	cmc    
  420210:	aam    0x53
  420212:	lods   eax,DWORD PTR ds:[esi]
  420213:	popa   
  420214:	cwde   
  420215:	adc    DWORD PTR [edi+0x3b],eax
  420218:	arpl   WORD PTR [esi+0x60],bx
  42021b:	push   esi
  42021c:	fist   DWORD PTR [ebx]
  42021e:	test   BYTE PTR [esi-0x44],dh
  420221:	loop   0x4201b0
  420223:	jnp    0x420225
  420225:	sbb    ebp,DWORD PTR [ebp+0x25]
  420228:	jno    0x42028e
  42022a:	or     eax,0x85b75443
  42022f:	sti    
  420230:	sti    
  420231:	mov    es,WORD PTR [eax]
  420233:	mov    cl,0xc8
  420235:	shr    DWORD PTR [ecx],0x8f
  420238:	clc    
  420239:	adc    cl,BYTE PTR [edx]
  42023b:	ret    
  42023c:	dec    eax
  42023d:	mov    ds:0x19177d1b,eax
  420242:	mov    ds:0xce0fbab2,al
  420247:	or     eax,0x98bc5fbd
  42024c:	ja     0x4202a7
  42024e:	in     eax,dx
  42024f:	mov    edi,cs
  420251:	shr    ah,1
  420253:	pop    eax
  420254:	xor    BYTE PTR [edi+0x6eca368f],ch
  42025a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42025b:	add    al,0xbb
  42025d:	mov    al,ds:0x707bb4e7
  420262:	and    al,0x32
  420264:	mov    bh,0x5c
  420266:	daa    
  420267:	add    eax,0x760ba627
  42026c:	(bad)  
  42026d:	fld    TBYTE PTR [edx-0x45]
  420270:	pop    esp
  420271:	arpl   WORD PTR [ecx+0x317293c5],bp
  420277:	jl     0x420234
  420279:	shl    BYTE PTR [esi-0x35f3993d],0x50
  420280:	xlat   BYTE PTR ds:[ebx]
  420281:	mov    esp,0xe2416c24
  420286:	aam    0xb8
  420288:	sbb    ah,cl
  42028a:	out    0x76,al
  42028c:	outs   dx,BYTE PTR ds:[esi]
  42028d:	jnp    0x420292
  42028f:	imul   ebx,edi,0x5f
  420292:	dec    esp
  420293:	inc    esp
  420294:	adc    DWORD PTR [edi-0x7998dada],0x3f
  42029b:	add    al,0xa4
  42029d:	mov    ds:0xf100e67f,eax
  4202a2:	in     al,dx
  4202a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a4:	xchg   ebp,eax
  4202a5:	adc    DWORD PTR [esp+edi*4+0xa5a532],ecx
  4202ac:	and    al,0x53
  4202ae:	ret    
  4202af:	or     eax,0xf8b619fa
  4202b4:	js     0x420246
  4202b6:	repz sti 
  4202b8:	push   eax
  4202b9:	add    eax,0x80af4345
  4202be:	xor    bh,ch
  4202c0:	mov    dl,0x21
  4202c2:	mov    dh,BYTE PTR [ecx]
  4202c4:	sub    ah,bh
  4202c6:	pop    edx
  4202c7:	int3   
  4202c8:	ficomp WORD PTR [ebp-0x31f3570]
  4202ce:	dec    esp
  4202cf:	pop    ebp
  4202d0:	cmp    al,0x14
  4202d2:	int3   
  4202d3:	mov    BYTE PTR [esi-0x5d],ah
  4202d6:	pop    edi
  4202d7:	(bad)  
  4202d8:	stc    
  4202d9:	fwait
  4202da:	inc    esp
  4202db:	iret   
  4202dc:	lds    edi,FWORD PTR [edi+0x55]
  4202df:	sbb    DWORD PTR [edx+0x675df90d],0x6b
  4202e6:	data16 (bad) 
  4202e8:	xor    BYTE PTR [ebx-0x33],dh
  4202eb:	xchg   ebp,eax
  4202ec:	push   ebp
  4202ed:	sub    al,0x31
  4202ef:	clc    
  4202f0:	push   ss
  4202f1:	rol    DWORD PTR [ecx+edi*2],0x6a
  4202f5:	sub    cl,dl
  4202f7:	not    bh
  4202f9:	popf   
  4202fa:	(bad)  
  4202fb:	push   esi
  4202fc:	push   ebx
  4202fd:	push   ebp
  4202fe:	shr    DWORD PTR [ebp+eax*8-0x502b1084],1
  420305:	dec    esp
  420306:	cmp    BYTE PTR [edi+0x0],dh
  420309:	cmp    BYTE PTR [ecx-0x66],ah
  42030c:	pop    DWORD PTR [eax-0x99470cf]
  420312:	sbb    DWORD PTR [esi],0xffffffd5
  420315:	lock mul BYTE PTR [edi-0x5232c406]
  42031c:	bound  ebx,QWORD PTR [edi-0x7ad8d3a]
  420322:	adc    eax,0xafe5f7f8
  420327:	jno    0x42036c
  420329:	mov    al,ds:0x3d456064
  42032e:	mov    DWORD PTR [ebp+0x69576e78],esi
  420334:	mov    eax,0x9aff65b5
  420339:	out    dx,al
  42033a:	inc    edx
  42033b:	jne    0x420323
  42033d:	lock push ecx
  42033f:	jp     0x4203ae
  420341:	adc    dh,BYTE PTR [ebx+eax*2+0x4dcedba3]
  420348:	push   0xffffffa6
  42034a:	imul   ebp,DWORD PTR [ebx-0x1e],0x7e
  42034e:	sub    ebx,DWORD PTR [edx-0x2]
  420351:	mov    dl,0x4
  420353:	lahf   
  420354:	xchg   ebp,eax
  420355:	bound  ebp,QWORD PTR [ecx+0x5a56c6cd]
  42035b:	and    DWORD PTR [edi],ecx
  42035d:	sub    DWORD PTR [eax-0x4df49051],esi
  420363:	hlt    
  420364:	or     bl,bh
  420366:	iret   
  420367:	mov    bh,0xf7
  420369:	inc    esp
  42036a:	pop    ecx
  42036b:	imul   edi,DWORD PTR [ebp-0x22],0x140d881f
  420372:	mov    ah,0x9b
  420374:	mov    ebx,0xfb58159f
  420379:	out    0xe5,eax
  42037b:	jne    0x420300
  42037d:	sar    DWORD PTR ds:0xe0a11300,1
  420383:	mov    di,0x56b1
  420387:	into   
  420388:	je     0x4203db
  42038a:	sbb    esi,DWORD PTR [ebx+0x260600ed]
  420390:	imul   edx,DWORD PTR [esp+edi*8],0x1935ec0c
  420397:	adc    esp,DWORD PTR [esi+0xae2ef42]
  42039d:	cmp    BYTE PTR [eax],0x9b
  4203a0:	icebp  
  4203a1:	(bad)  
  4203a2:	out    dx,al
  4203a3:	xchg   ebp,eax
  4203a4:	xor    DWORD PTR [ebx-0x18],ebp
  4203a7:	inc    eax
  4203a8:	ja     0x420358
  4203aa:	jmp    0x691bcbf6
  4203af:	xor    cl,BYTE PTR [eax+0x61]
  4203b2:	xor    edx,esp
  4203b4:	mov    cs,esp
  4203b6:	mov    al,ds:0xec6fe472
  4203bb:	pop    edx
  4203bc:	scas   al,BYTE PTR es:[edi]
  4203bd:	jp     0x420374
  4203bf:	or     al,BYTE PTR [eax+ebx*2-0x43]
  4203c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203c4:	pop    edx
  4203c5:	call   0x486412f6
  4203ca:	mov    ebp,0xada807ec
  4203cf:	pop    ebp
  4203d0:	sahf   
  4203d1:	or     eax,DWORD PTR [eax-0x272d2d40]
  4203d7:	test   edi,esp
  4203d9:	inc    ecx
  4203da:	arpl   bx,di
  4203dc:	mov    ah,0x7b
  4203de:	mov    dl,0x63
  4203e0:	add    ebx,DWORD PTR [ebx-0x42]
  4203e3:	inc    edi
  4203e4:	lea    ebx,[ebx+edx*8-0x7a]
  4203e8:	cli    
  4203e9:	dec    ebx
  4203ea:	int    0xa3
  4203ec:	out    dx,eax
  4203ed:	ja     0x42037d
  4203ef:	xor    al,0xb8
  4203f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f2:	xchg   esi,ebx
  4203f4:	dec    eax
  4203f5:	sbb    esp,DWORD PTR [ecx+0x7e]
  4203f8:	sbb    BYTE PTR [ebx],cl
  4203fa:	lea    esp,[esi+0x23]
  4203fd:	xchg   esp,eax
  4203fe:	jle    0x4203db
  420400:	push   0xc
  420402:	out    0xb0,al
  420404:	mov    cl,BYTE PTR [edx+0x1a]
  420407:	jle    0x4203d5
  420409:	ret    
  42040a:	pop    eax
  42040b:	xchg   ebp,eax
  42040c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42040e:	mov    esi,0xab3e2c6f
  420413:	rol    BYTE PTR [ebp+0x65],1
  420416:	ret    0xbc2
  420419:	ins    BYTE PTR es:[edi],dx
  42041a:	or     ebp,DWORD PTR [esi-0xd92af91]
  420420:	fiadd  DWORD PTR [ecx]
  420422:	pop    ecx
  420423:	fcom   DWORD PTR [edi+eiz*8+0x7feeea68]
  42042a:	cmp    dl,BYTE PTR [ebx+0x178dd657]
  420430:	adc    bh,al
  420432:	das    
  420433:	inc    ebx
  420434:	xor    al,0x87
  420436:	retf   0x712a
  420439:	dec    ecx
  42043a:	pop    edx
  42043b:	or     edi,esp
  42043d:	cmp    al,BYTE PTR [esi]
  42043f:	mov    ah,0x41
  420441:	dec    eax
  420442:	retf   0x6ad3
  420445:	aam    0xa
  420447:	es in  al,dx
  420449:	popf   
  42044a:	sti    
  42044b:	fs lahf 
  42044d:	mov    edi,0x57ba2285
  420452:	pop    esi
  420453:	in     al,0x4
  420455:	xchg   edx,eax
  420456:	push   ss
  420457:	mov    esp,0xdbbb2c9f
  42045c:	enter  0xd28c,0x83
  420460:	mov    esp,0xd7fb5854
  420465:	iret   
  420466:	sbb    al,0x4e
  420468:	gs mov bx,0x2626
  42046d:	sub    ah,BYTE PTR [edi]
  42046f:	xor    eax,0xd5273a9b
  420474:	add    DWORD PTR [ebx],ecx
  420476:	push   esp
  420477:	cmp    bl,BYTE PTR es:[eax+0x27a067ac]
  42047e:	imul   ebp,DWORD PTR [eax+0x4a8e001a],0x12
  420485:	clc    
  420486:	daa    
  420487:	nop
  420488:	(bad)  
  420489:	(bad)  
  42048b:	or     BYTE PTR [esi+0x55dfbad0],0xd9
  420492:	aaa    
  420493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420494:	xor    esp,DWORD PTR ds:0xecf6e4fa
  42049a:	or     eax,0x6c73d087
  42049f:	imul   ebx,DWORD PTR [ebp+0x6e91b229],0xb873c794
  4204a9:	pop    ds
  4204aa:	add    bh,bh
  4204ac:	vpavgb xmm6,xmm7,XMMWORD PTR [edx]
  4204b0:	cmp    DWORD PTR es:[edi+ebp*4-0x7],edx
  4204b5:	clc    
  4204b6:	push   ecx
  4204b7:	push   ds
  4204b8:	jp     0x4204c8
  4204ba:	xor    BYTE PTR [ecx+edi*8-0x3b33a40b],bh
  4204c1:	push   ecx
  4204c2:	retf   0xb56c
  4204c5:	inc    edx
  4204c6:	push   ds
  4204c7:	ror    DWORD PTR [ebx],1
  4204c9:	cmp    DWORD PTR [ebp-0x7e],esi
  4204cc:	xor    al,0x79
  4204ce:	jmp    DWORD PTR [ebx]
  4204d0:	pushf  
  4204d1:	xchg   esi,eax
  4204d2:	addr16 enter 0x2c7f,0x8f
  4204d7:	adc    ecx,DWORD PTR [esi-0x27]
  4204da:	pop    edi
  4204db:	call   FWORD PTR [esi+eax*4-0x52ec4268]
  4204e2:	add    al,al
  4204e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204e5:	bnd ss jp 0x42049f
  4204e9:	stos   BYTE PTR es:[edi],al
  4204ea:	or     edi,DWORD PTR [esi-0x47]
  4204ed:	cmp    ch,dl
  4204ef:	xor    DWORD PTR [edx-0x1e],ecx
  4204f2:	shl    BYTE PTR [ecx+edx*4-0x401b66a0],0x8c
  4204fa:	lahf   
  4204fb:	jmp    0x5ec70769
  420500:	inc    esi
  420501:	sbb    DWORD PTR [ecx+0xb],0xffffffaf
  420505:	out    0x91,al
  420507:	jmp    0xbeb5:0x6367421e
  42050e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42050f:	dec    ecx
  420510:	add    ah,BYTE PTR [esp+eiz*2-0x38fee2c0]
  420517:	out    0x9c,al
  420519:	dec    esi
  42051a:	adc    eax,0x7d1436e0
  42051f:	adc    edi,DWORD PTR [ebp-0x5ceac8a7]
  420525:	jo     0x42052e
  420527:	loopne 0x420538
  420529:	push   edx
  42052a:	retf   0x22cc
  42052d:	adc    BYTE PTR [ecx+esi*2-0xdbd4e35],bh
  420534:	pop    edx
  420535:	mov    ah,0xec
  420537:	push   edi
  420538:	push   esi
  420539:	cdq    
  42053a:	ret    0x598c
  42053d:	ficomp WORD PTR [edx]
  42053f:	sbb    DWORD PTR [ecx+eax*2],ebp
  420542:	or     ch,BYTE PTR [ecx]
  420544:	jb     0x420584
  420546:	cli    
  420547:	xchg   ebx,eax
  420548:	push   DWORD PTR [eax]
  42054a:	aaa    
  42054b:	mov    al,0xf9
  42054d:	add    eax,0xc61bbbbf
  420552:	mov    esp,0x1d79b5e0
  420557:	repnz inc esp
  420559:	out    0xe3,eax
  42055b:	cmc    
  42055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055d:	sbb    BYTE PTR [ecx+0x320d3dc4],dl
  420563:	push   ds
  420564:	stos   BYTE PTR es:[edi],al
  420565:	mov    edx,0xd67a7a50
  42056a:	test   DWORD PTR [ebp+0x143c1b13],edx
  420570:	jl     0x42052b
  420572:	inc    ebx
  420573:	or     al,0x1d
  420575:	loop   0x420531
  420577:	jo     0x420516
  420579:	loope  0x420520
  42057b:	loopne 0x4205b0
  42057d:	int3   
  42057e:	xor    eax,0xeee94283
  420583:	mov    eax,0x3e92d2d
  420588:	popa   
  420589:	mov    bh,0xe9
  42058b:	xchg   DWORD PTR [esi],eax
  42058d:	stc    
  42058e:	cmp    ebp,DWORD PTR [edx]
  420590:	(bad)  
  420592:	xchg   esi,eax
  420593:	xor    al,0x5f
  420595:	and    BYTE PTR [edi],ah
  420597:	mov    cl,0xa9
  420599:	out    0x89,eax
  42059b:	cli    
  42059c:	inc    ecx
  42059d:	and    al,0x21
  42059f:	xchg   BYTE PTR [edx-0x37],al
  4205a2:	inc    esi
  4205a3:	(bad)  
  4205a4:	imul   edx,DWORD PTR [edx-0x6341a337],0xffffffd1
  4205ab:	adc    DWORD PTR [ecx-0x7e],ecx
  4205ae:	dec    esp
  4205af:	push   eax
  4205b0:	(bad)  
  4205b1:	stc    
  4205b2:	or     eax,0x9e6c8927
  4205b7:	mov    eax,DWORD PTR [edx]
  4205b9:	and    DWORD PTR [esi],edx
  4205bb:	gs out 0x86,eax
  4205be:	cmp    DWORD PTR [edi],0x96be76f1
  4205c4:	add    eax,0x667340c6
  4205c9:	rcr    BYTE PTR [edx-0x5d],0x7c
  4205cd:	xchg   esi,eax
  4205ce:	ss pop ss
  4205d0:	sbb    al,0xc8
  4205d2:	adc    BYTE PTR [ebp+0x6d2ecd20],0x29
  4205d9:	test   al,0x7c
  4205db:	jne    0x420619
  4205dd:	sahf   
  4205de:	xchg   ecx,eax
  4205df:	js     0x4205d8
  4205e1:	dec    esp
  4205e2:	sbb    cl,cl
  4205e4:	cmp    ebp,edx
  4205e6:	mov    esi,0x98e0bfa3
  4205eb:	jbe    0x4205dc
  4205ed:	lahf   
  4205ee:	or     bl,BYTE PTR [edx]
  4205f0:	daa    
  4205f1:	loop   0x42066e
  4205f3:	lods   al,BYTE PTR ds:[esi]
  4205f4:	jne    0x420620
  4205f6:	jno    0x4205d4
  4205f8:	shr    BYTE PTR [edi-0x294b7f60],0xc3
  4205ff:	pop    es
  420600:	xchg   edi,eax
  420601:	mov    ?,ecx
  420603:	xchg   ecx,eax
  420604:	int3   
  420605:	xor    eax,DWORD PTR [edi+edi*1]
  420608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420609:	call   0xcbe75cbc
  42060e:	jmp    0x4205e1
  420610:	idiv   BYTE PTR [eax+0x53]
  420613:	retf   0xeae5
  420616:	aas    
  420617:	or     BYTE PTR [edx+0x14],bl
  42061a:	fmul   QWORD PTR [edx-0xd]
  42061d:	xlat   BYTE PTR ds:[ebx]
  42061e:	mov    eax,ds:0x638b640b
  420623:	push   esp
  420624:	inc    esi
  420625:	and    ah,BYTE PTR [ebx-0x4598691c]
  42062b:	mov    ebp,0x7794a092
  420630:	inc    edi
  420631:	scas   al,BYTE PTR es:[edi]
  420632:	and    ah,al
  420634:	jp     0x42067c
  420636:	daa    
  420637:	adc    eax,0x830eae26
  42063c:	mov    ebp,0xcddbef10
  420641:	inc    edi
  420642:	cwde   
  420643:	push   ecx
  420644:	jmp    0x4206a9
  420646:	pop    edi
  420647:	inc    edi
  420648:	dec    ebp
  420649:	nop
  42064a:	jmp    0x7f84:0x953a4f00
  420651:	mov    dh,0xe0
  420653:	mov    al,0x7d
  420655:	ins    DWORD PTR es:[edi],dx
  420656:	in     eax,dx
  420657:	jecxz  0x42068b
  420659:	lods   al,BYTE PTR ds:[esi]
  42065a:	sub    BYTE PTR [eax+0x1c622a23],0x1b
  420661:	jne    0x420660
  420663:	lds    ecx,FWORD PTR [edi+ebx*8+0x2]
  420667:	mov    al,0x86
  420669:	ror    DWORD PTR [ebx+0x494b87ee],cl
  42066f:	cmp    al,0x93
  420671:	jns    0x42060f
  420673:	mov    edx,0xfc334fff
  420678:	dec    ebx
  420679:	adc    al,0xdd
  42067b:	nop
  42067c:	cmp    eax,0xc6462d26
  420681:	scas   al,BYTE PTR es:[edi]
  420682:	pop    ds
  420683:	stos   DWORD PTR es:[edi],eax
  420684:	jns    0x4206c7
  420686:	xchg   ecx,eax
  420687:	push   ebx
  420688:	outs   dx,BYTE PTR ds:[esi]
  420689:	fldenv [eax-0x6036a99]
  42068f:	cld    
  420690:	aad    0xe5
  420692:	cwde   
  420693:	mov    esp,0xf2c10cda
  420698:	cmc    
  420699:	xchg   BYTE PTR [ecx-0x6e],ch
  42069c:	cmp    bh,0xf6
  42069f:	daa    
  4206a0:	jb     0x4206bf
  4206a2:	fcomp  DWORD PTR [eax+ebp*2]
  4206a5:	xchg   ebp,eax
  4206a6:	inc    ecx
  4206a7:	test   edx,ebx
  4206a9:	(bad)  
  4206aa:	sub    bh,ah
  4206ac:	dec    ebx
  4206ad:	pop    ss
  4206ae:	retf   0xaf9e
  4206b1:	retf   
  4206b2:	pusha  
  4206b3:	ins    BYTE PTR es:[edi],dx
  4206b4:	in     eax,dx
  4206b5:	pushf  
  4206b6:	dec    eax
  4206b7:	call   0x532d:0x4ab2a80c
  4206be:	ss loop 0x42066e
  4206c1:	ret    0xb5
  4206c4:	cli    
  4206c5:	out    dx,eax
  4206c6:	push   ecx
  4206c7:	cli    
  4206c8:	dec    edx
  4206c9:	pop    eax
  4206ca:	dec    eax
  4206cb:	aaa    
  4206cc:	inc    edi
  4206cd:	aaa    
  4206ce:	mov    dl,0x32
  4206d0:	sbb    ebp,eax
  4206d2:	or     dh,0x10
  4206d5:	bound  ebx,QWORD PTR [eax+edx*2-0x54]
  4206d9:	pop    esp
  4206da:	push   eax
  4206db:	or     DWORD PTR [eax],edx
  4206dd:	push   ds
  4206de:	add    eax,0x3b454427
  4206e3:	add    al,0x7a
  4206e6:	(bad)  
  4206e7:	shl    dl,cl
  4206e9:	or     esp,0xffffff9b
  4206ec:	out    0x99,al
  4206ee:	sti    
  4206ef:	jg     0x42068b
  4206f1:	mov    edx,DWORD PTR [eax+eax*8]
  4206f4:	sub    eax,ebx
  4206f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f7:	xor    al,0x16
  4206f9:	mov    edi,0x8178e4e7
  4206fe:	inc    ebp
  4206ff:	dec    eax
  420700:	xlat   BYTE PTR ds:[ebx]
  420701:	jbe    0x4206c7
  420703:	fsubr  st(0),st
  420705:	stos   DWORD PTR es:[edi],eax
  420706:	add    eax,DWORD PTR [esi+0x2e]
  420709:	hlt    
  42070a:	rcr    DWORD PTR [ecx-0x51],0xe8
  42070e:	fadd   QWORD PTR [edi-0x1228fc89]
  420714:	jge    0x420699
  420716:	stos   DWORD PTR es:[edi],eax
  420717:	pop    edx
  420718:	sbb    eax,0x763cde64
  42071d:	and    BYTE PTR [edx-0x30fb4b71],0xf1
  420724:	ins    BYTE PTR es:[edi],dx
  420725:	xchg   edx,eax
  420726:	inc    edx
  420727:	mov    DWORD PTR [esi-0x194dc17b],ebx
  42072d:	mov    al,0x5f
  42072f:	jp     0x420751
  420731:	pop    ecx
  420732:	(bad)  
  420733:	adc    eax,0x9eaca05
  420738:	mov    bh,0x2d
  42073a:	xchg   edi,eax
  42073b:	shl    DWORD PTR [ebp+0x1d],1
  42073e:	inc    ecx
  42073f:	dec    esi
  420740:	rol    DWORD PTR [edx+0x5f],cl
  420743:	fidivr WORD PTR [edi+0x19]
  420746:	or     eax,ecx
  420748:	pop    ss
  420749:	imul   ebp,edx,0xfa339c2b
  42074f:	jo     0x420706
  420751:	mov    ds:0x4b9e518e,eax
  420756:	jp     0x4206dc
  420758:	push   edi
  420759:	inc    ebx
  42075a:	out    dx,al
  42075b:	(bad)  
  42075c:	std    
  42075d:	mov    al,0x9a
  42075f:	adc    eax,0x23f55102
  420764:	xor    esi,DWORD PTR [ecx+0x17296d87]
  42076a:	in     eax,0xa7
  42076c:	retf   0x1ac8
  42076f:	fst    QWORD PTR [edi-0x5f]
  420772:	fisubr DWORD PTR [esi]
  420774:	and    al,0xd1
  420776:	sub    al,BYTE PTR [ebx+0x3e]
  420779:	fwait
  42077a:	push   edx
  42077b:	inc    esp
  42077c:	das    
  42077d:	ror    BYTE PTR [esi-0x70844a51],0xf8
  420784:	repz icebp 
  420786:	push   ss
  420787:	ror    BYTE PTR [edx],1
  420789:	mov    cl,0x88
  42078b:	mov    dl,0xd7
  42078d:	das    
  42078e:	pop    ebp
  42078f:	clc    
  420790:	mov    al,ds:0x90aeb1fd
  420795:	ss (bad) 
  420797:	fistp  QWORD PTR [esi+0xa]
  42079a:	push   ebp
  42079b:	addr16 push es
  42079d:	addr16 iret 
  42079f:	inc    eax
  4207a0:	push   esp
  4207a1:	cmp    ah,BYTE PTR fs:[eax]
  4207a4:	mov    ch,0x3e
  4207a6:	xor    BYTE PTR [edx],dl
  4207a8:	fisubr DWORD PTR [eax-0x2ed2118d]
  4207ae:	mov    WORD PTR [edi-0x44],cs
  4207b1:	pop    esp
  4207b2:	dec    edi
  4207b3:	push   esi
  4207b4:	mov    DWORD PTR [ebp+0x38af40c6],ebx
  4207ba:	mov    BYTE PTR [ebp+0x59],bl
  4207bd:	and    edx,DWORD PTR [ecx-0x3]
  4207c0:	lahf   
  4207c1:	cdq    
  4207c2:	add    DWORD PTR [edi-0x41],ecx
  4207c5:	shl    DWORD PTR [esi-0x5d848bbd],cl
  4207cb:	test   al,0x15
  4207cd:	sub    dh,ch
  4207cf:	xor    al,0x73
  4207d1:	inc    edx
  4207d3:	inc    ebp
  4207d4:	aas    
  4207d5:	outs   dx,BYTE PTR ds:[esi]
  4207d6:	cmp    esi,eax
  4207d8:	test   BYTE PTR [esi+0x5eba6c71],0x2f
  4207df:	push   esi
  4207e0:	ins    BYTE PTR es:[edi],dx
  4207e1:	jecxz  0x4207d2
  4207e3:	mov    ds:0x971470e0,eax
  4207e8:	dec    esp
  4207e9:	jl     0x420868
  4207eb:	call   0x8656:0x8cdb1b27
  4207f2:	pop    esp
  4207f3:	dec    ebx
  4207f4:	mov    eax,0x944ab800
  4207f9:	das    
  4207fa:	call   0x7b03:0x6da467c8
  420801:	jae    0x4207a4
  420803:	sbb    dl,dl
  420805:	adc    cl,ch
  420807:	test   al,0x22
  420809:	xchg   cl,cl
  42080b:	outs   dx,BYTE PTR ds:[esi]
  42080c:	pop    ecx
  42080d:	jl     0x42087a
  42080f:	and    eax,0x34502434
  420814:	mov    cl,0x5a
  420816:	test   eax,0x4500515d
  42081b:	ror    ch,0xc7
  42081e:	mov    eax,ds:0x203ab137
  420823:	cli    
  420824:	mov    edx,0x8f4757a0
  420829:	cmp    eax,0xb0bcbc1d
  42082e:	daa    
  42082f:	mov    WORD PTR [edx-0x1e2c9be5],?
  420835:	pop    es
  420836:	call   0xb908:0x14bcf49c
  42083d:	add    esp,DWORD PTR [ebp+0x4ee34fad]
  420843:	mov    bh,0x11
  420845:	fsqrt  
  420847:	mov    al,BYTE PTR [eax+0x2c33532c]
  42084d:	ins    BYTE PTR es:[edi],dx
  42084e:	loope  0x420808
  420850:	dec    ebp
  420851:	pusha  
  420852:	cmc    
  420853:	pop    eax
  420854:	xor    esp,DWORD PTR [edx-0x2ac8f984]
  42085a:	pop    ebx
  42085b:	mov    cl,0xc
  42085d:	push   ds
  42085e:	int    0x1a
  420860:	mov    ds:0xa2a2d24c,al
  420865:	dec    edi
  420866:	pop    ebx
  420867:	dec    edi
  420868:	pop    es
  420869:	mov    eax,0x628078d0
  42086e:	out    dx,eax
  42086f:	ret    
  420870:	in     eax,0x90
  420872:	xor    ebx,DWORD PTR [edi]
  420874:	sbb    DWORD PTR [edx+ecx*4],0xa10f29c7
  42087b:	add    DWORD PTR [edx-0x5e],edx
  42087e:	sti    
  42087f:	ficomp WORD PTR [eax*2+0x77f91882]
  420886:	mov    WORD PTR [ebx+edi*4+0x3e4f568e],es
  42088d:	outs   dx,BYTE PTR ds:[esi]
  42088e:	mov    ebp,0x3756504b
  420893:	pop    edi
  420894:	(bad)  
  420896:	jp     0x420881
  420898:	sub    bh,ch
  42089a:	fcmovb st,st(1)
  42089c:	jmp    0x42084a
  42089e:	adc    BYTE PTR [edx-0x6146ff86],bh
  4208a4:	and    DWORD PTR [esi-0x7eeeb1a8],edx
  4208aa:	jne    0x420863
  4208ac:	dec    esi
  4208ad:	xchg   edi,eax
  4208ae:	sub    BYTE PTR [edi+0x2f21865],al
  4208b4:	loope  0x42085c
  4208b6:	sbb    al,0x79
  4208b8:	mov    bl,0x19
  4208ba:	loopne 0x4208e9
  4208bc:	jno    0x42090d
  4208be:	dec    edx
  4208bf:	push   edx
  4208c0:	bound  esp,QWORD PTR [eax+0x26493cd9]
  4208c6:	jge    0x42092c
  4208c8:	test   al,0x8b
  4208ca:	sti    
  4208cb:	jns    0x420854
  4208cd:	mov    eax,ds:0x9f06fdb4
  4208d2:	jno    0x420916
  4208d4:	sbb    al,0x24
  4208d6:	lods   eax,DWORD PTR ds:[esi]
  4208d7:	ss push eax
  4208d9:	jne    0x4208f2
  4208db:	shl    ah,cl
  4208dd:	xchg   BYTE PTR [ebx+0xf],ah
  4208e0:	cld    
  4208e1:	sub    bl,BYTE PTR [edx+0x5c]
  4208e4:	cmp    DWORD PTR ds:0x512e975f,edi
  4208ea:	or     ebx,0xa948b32d
  4208f0:	jae    0x420929
  4208f2:	ret    0xcaf9
  4208f5:	hlt    
  4208f6:	int    0x30
  4208f8:	inc    eax
  4208f9:	mov    al,ds:0x98c3b671
  4208fe:	inc    ebp
  4208ff:	xor    BYTE PTR [esi+0xf],dl
  420902:	in     eax,0xfb
  420904:	scas   eax,DWORD PTR es:[edi]
  420905:	fidiv  DWORD PTR [esi]
  420907:	fisub  DWORD PTR [ecx-0x27a91e6f]
  42090d:	lock int3 
  42090f:	in     al,0xb5
  420911:	adc    DWORD PTR [edi],ebx
  420913:	jo     0x42090a
  420915:	xor    BYTE PTR [edx],bh
  420917:	xchg   esp,eax
  420918:	jp     0x420919
  42091a:	inc    eax
  42091b:	add    eax,0x81777e0d
  420920:	mov    ebx,0x984cd9c9
  420925:	rcr    DWORD PTR gs:[esi+0x3d3826dd],cl
  42092c:	mov    esi,0x144adc92
  420931:	dec    ebp
  420932:	mov    es,esi
  420934:	dec    ebx
  420935:	push   edx
  420936:	scas   eax,DWORD PTR es:[edi]
  420937:	repnz mov dl,0x5b
  42093a:	mov    ebp,DWORD PTR [edi+0x5da42464]
  420940:	mov    ds:0x16bc4175,al
  420945:	int    0xef
  420947:	inc    esp
  420948:	rcr    BYTE PTR [edi],1
  42094a:	test   eax,0xf1d62fdb
  42094f:	icebp  
  420950:	fwait
  420951:	xchg   BYTE PTR [ebx],ah
  420953:	outs   dx,BYTE PTR ds:[esi]
  420954:	imul   edx,ebx,0x8fa3360
  42095a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42095b:	(bad)  
  42095c:	sbb    ah,BYTE PTR [edx]
  42095e:	jmp    0x420934
  420960:	mov    eax,0x7923e44c
  420965:	add    bh,BYTE PTR [edi]
  420967:	ja     0x42093e
  420969:	aas    
  42096a:	jecxz  0x4209b6
  42096c:	nop
  42096d:	fcom   DWORD PTR [ecx+0x7]
  420970:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420972:	mov    WORD PTR [eax+0x69],es
  420975:	or     DWORD PTR [ebp+ebp*4-0x7a],0x37
  42097a:	xor    eax,0x64fe3ba
  42097f:	int3   
  420980:	ret    
  420981:	out    0xea,eax
  420983:	enter  0xe279,0x59
  420987:	xchg   edi,eax
  420988:	mov    BYTE PTR [edi],ah
  42098a:	fsubr  QWORD PTR [ebx-0x20d83e7f]
  420990:	cmp    bl,bh
  420992:	mov    ebx,0xc55e43cd
  420997:	(bad)  
  420998:	in     eax,dx
  420999:	std    
  42099a:	pop    edx
  42099b:	cmp    al,0xf8
  42099d:	lods   al,BYTE PTR ss:[esi]
  42099f:	fisub  WORD PTR [ecx+0xc]
  4209a2:	push   cs
  4209a3:	pop    edi
  4209a4:	in     eax,dx
  4209a5:	and    eax,0xfb34fe00
  4209aa:	pop    ss
  4209ab:	and    eax,0x2092896a
  4209b0:	dec    edx
  4209b1:	ja     0x4209c8
  4209b3:	jmp    0x7fad:0xa0e0f91c
  4209ba:	enter  0xd95a,0xe
  4209be:	(bad)  
  4209bf:	lods   al,BYTE PTR ds:[esi]
  4209c0:	sbb    bl,BYTE PTR [ecx+0x557d434b]
  4209c6:	lds    ebx,FWORD PTR [ecx+0x51]
  4209c9:	mov    al,0xd1
  4209cb:	dec    esi
  4209cc:	aad    0x72
  4209ce:	inc    ebx
  4209cf:	icebp  
  4209d0:	aas    
  4209d1:	data16 clc 
  4209d3:	mov    ebx,0xe9be22ed
  4209d8:	cli    
  4209d9:	ins    DWORD PTR es:[edi],dx
  4209da:	pop    esi
  4209db:	pop    ebx
  4209dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209dd:	fcmovne st,st(6)
  4209df:	iret   
  4209e0:	jl     0x4209e4
  4209e2:	mov    ch,0x2a
  4209e4:	ins    BYTE PTR es:[edi],dx
  4209e5:	iret   
  4209e6:	int3   
  4209e7:	int    0xbf
  4209e9:	jno    0x420a5e
  4209eb:	imul   esi,DWORD PTR [esi+eax*4+0x78],0xc2c1df98
  4209f3:	mov    al,0x8c
  4209f5:	cld    
  4209f6:	fdiv   st(6),st
  4209f8:	add    ch,BYTE PTR [edx-0x16]
  4209fb:	retf   0xf4be
  4209fe:	ja     0x420a44
  420a00:	xor    ch,dh
  420a02:	pop    ebx
  420a03:	retf   
  420a04:	mov    DWORD PTR [esi+edx*2-0x5478d6d0],esp
  420a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a0c:	cmp    eax,ebp
  420a0e:	lea    eax,[edi]
  420a10:	rcr    eax,0x38
  420a13:	or     esp,DWORD PTR [eax]
  420a15:	mov    dh,BYTE PTR [edx-0x7b1d1b46]
  420a1b:	xchg   DWORD PTR [esi+0x4a0290d4],esp
  420a21:	inc    ecx
  420a22:	and    DWORD PTR [ebx+0x2f991cfa],0xffffffac
  420a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a2a:	xchg   esp,eax
  420a2b:	ss cld 
  420a2d:	enter  0x7b22,0xf9
  420a31:	jns    0x4209d0
  420a33:	and    dl,BYTE PTR [ecx-0x31]
  420a36:	add    ebp,edx
  420a38:	or     edx,DWORD PTR [eax+0x2c]
  420a3b:	and    BYTE PTR [ebp-0x2b],bl
  420a3e:	test   dh,0xbe
  420a41:	lea    edi,[edi+0x60]
  420a44:	mov    al,0xf9
  420a46:	setnp  bl
  420a49:	fadd   QWORD PTR [esi-0x24b431b1]
  420a4f:	ja     0x420a87
  420a51:	in     al,0xd7
  420a53:	iret   
  420a54:	inc    ebx
  420a55:	cmc    
  420a56:	mov    ch,0x3
  420a58:	or     BYTE PTR [edi],0xdd
  420a5b:	ror    BYTE PTR [ecx-0x5fd351c9],cl
  420a61:	pop    ss
  420a62:	ins    DWORD PTR es:[edi],dx
  420a63:	mov    ebp,0x6b24e0f0
  420a68:	out    0x94,al
  420a6a:	cli    
  420a6b:	shr    dh,1
  420a6d:	cmp    al,0x22
  420a6f:	jl     0x420a60
  420a71:	xor    DWORD PTR [ecx+0xc],edi
  420a74:	retf   
  420a75:	je     0x420ad4
  420a77:	test   BYTE PTR [ecx],ah
  420a79:	and    BYTE PTR [ebp+0x754af17b],cl
  420a7f:	int    0x27
  420a81:	cmc    
  420a82:	fcmovbe st,st(7)
  420a84:	std    
  420a85:	out    0xc9,eax
  420a87:	call   0xadf2:0x3a91d31
  420a8e:	aam    0xa9
  420a90:	and    BYTE PTR [ecx],bl
  420a92:	push   edi
  420a93:	mov    ch,0x18
  420a95:	push   eax
  420a96:	add    esp,DWORD PTR [esi-0x40d0f5e]
  420a9c:	dec    esp
  420a9d:	mov    edi,0x43cc081e
  420aa2:	gs ret 
  420aa4:	fimul  DWORD PTR [edi]
  420aa6:	mov    dl,0x9f
  420aa8:	sub    eax,0xe3d550a0
  420aad:	jno    0x420add
  420aaf:	push   ebx
  420ab0:	sbb    BYTE PTR [eax+0x1d],dh
  420ab3:	rcr    edx,1
  420ab5:	pop    es
  420ab6:	or     eax,0x6c57a505
  420abb:	inc    esp
  420abc:	push   ds
  420abd:	enter  0xddba,0x84
  420ac1:	or     bl,bl
  420ac3:	(bad)  
  420ac4:	push   cs
  420ac5:	sub    bl,BYTE PTR ds:0xb5cc6108
  420acb:	ret    
  420acc:	call   0xb0f1:0x4867eaa8
  420ad3:	cmovl  ebp,DWORD PTR ds:0xd4412dc6
  420ada:	jle    0x420ac2
  420adc:	sar    BYTE PTR [edi],0x86
  420adf:	add    dl,BYTE PTR [eiz*8-0x1dd53050]
  420ae6:	nop
  420ae7:	dec    eax
  420ae8:	push   eax
  420ae9:	aaa    
  420aea:	aaa    
  420aeb:	mov    dh,BYTE PTR [ebp-0x33f1e8be]
  420af1:	inc    edx
  420af2:	mov    es,WORD PTR [esi-0x58f9a74f]
  420af8:	sar    DWORD PTR [edi+edx*2],1
  420afb:	mov    ch,0x40
  420afd:	or     edi,DWORD PTR [ecx]
  420aff:	cmp    edx,DWORD PTR [ecx]
  420b01:	sub    eax,0x5c623ca2
  420b06:	push   cs
  420b07:	sbb    al,0x24
  420b09:	dec    edx
  420b0a:	mov    edx,0x18cf20d3
  420b0f:	repnz enter 0xca19,0xf1
  420b14:	jae    0x420aee
  420b16:	sbb    bh,dl
  420b18:	addr16 xchg esp,eax
  420b1a:	inc    edi
  420b1b:	jne    0x420b7d
  420b1d:	push   ebp
  420b1e:	inc    BYTE PTR [eax+0x4]
  420b21:	jmp    eax
  420b23:	inc    ecx
  420b24:	mov    al,0x81
  420b26:	stos   BYTE PTR es:[edi],al
  420b27:	push   DWORD PTR [edx+0x69]
  420b2a:	out    0x22,al
  420b2c:	mov    eax,0xf770b2d7
  420b31:	inc    edx
  420b32:	fidivr DWORD PTR [edi+0x54da4610]
  420b38:	xchg   ah,ah
  420b3a:	dec    edx
  420b3b:	inc    ebx
  420b3c:	cli    
  420b3d:	push   0x3
  420b3f:	adc    ebp,DWORD PTR [esi+0x75]
  420b42:	push   es
  420b43:	out    0xd5,al
  420b45:	test   eax,0x65a341db
  420b4a:	rol    DWORD PTR [edx-0x7],1
  420b4d:	test   al,0x95
  420b50:	jge    0x420b38
  420b52:	xor    edx,ebp
  420b54:	pop    eax
  420b55:	add    dh,dh
  420b57:	jge    0x420b06
  420b59:	inc    ecx
  420b5a:	popa   
  420b5b:	lds    ebx,FWORD PTR [ebx+0x646c8439]
  420b61:	mov    ebx,0xe2833712
  420b66:	push   ecx
  420b67:	mov    ecx,0xd887db8d
  420b6c:	inc    edx
  420b6d:	mov    ss,ebx
  420b6f:	imul   BYTE PTR [ebp+0x66]
  420b72:	adc    BYTE PTR [edx],0xde
  420b75:	xchg   ecx,eax
  420b76:	scas   eax,DWORD PTR es:[edi]
  420b77:	and    eax,0xbb75b8be
  420b7c:	pushf  
  420b7d:	sti    
  420b7e:	adc    ebx,DWORD PTR [esi]
  420b80:	call   0x7ecf:0x4dab71e2
  420b87:	xchg   edx,eax
  420b88:	call   0x3946:0x3f46ff8f
  420b8f:	push   esi
  420b90:	dec    edx
  420b91:	sbb    al,dl
  420b93:	aaa    
  420b94:	iret   
  420b95:	push   ss
  420b96:	out    0xf5,eax
  420b98:	rcl    DWORD PTR [edx+0x6b32572b],cl
  420b9e:	sbb    ebx,DWORD PTR [edi+0x60]
  420ba1:	add    ebp,DWORD PTR [edx-0x758716c]
  420ba7:	cmp    DWORD PTR [edx],ebx
  420ba9:	cli    
  420baa:	pop    es
  420bab:	cmp    al,0x4d
  420bad:	mov    esi,DWORD PTR [ecx+0x5e]
  420bb0:	xchg   ebx,eax
  420bb1:	stos   DWORD PTR es:[edi],eax
  420bb2:	ins    DWORD PTR es:[edi],dx
  420bb3:	mov    ah,0xce
  420bb5:	cs jns 0x420c25
  420bb8:	sbb    dh,BYTE PTR [ebp+0x5a]
  420bbb:	int3   
  420bbc:	cli    
  420bbd:	inc    esi
  420bbe:	jecxz  0x420b5b
  420bc0:	inc    edx
  420bc1:	das    
  420bc2:	(bad)  
  420bc3:	mov    al,0x44
  420bc5:	add    eax,0xed8a677f
  420bca:	mov    dl,al
  420bcc:	pop    ds
  420bcd:	jnp    0x420c27
  420bcf:	cmp    eax,edi
  420bd1:	mov    esp,0x922930e4
  420bd6:	and    bl,dh
  420bd8:	out    dx,al
  420bd9:	mov    ah,0x16
  420bdb:	xor    eax,0x6b079505
  420be0:	adc    al,0x6a
  420be2:	inc    ebx
  420be3:	push   ss
  420be4:	sbb    edi,ecx
  420be6:	aas    
  420be7:	nop
  420be8:	ds stos DWORD PTR es:[edi],eax
  420bea:	es in  eax,dx
  420bec:	mov    ah,0x23
  420bee:	and    eax,0xf61ab9e9
  420bf3:	aad    0x24
  420bf5:	dec    ebx
  420bf6:	push   cs
  420bf7:	loopne 0x420bb5
  420bf9:	sbb    eax,0xb9b67133
  420bfe:	cli    
  420bff:	outs   dx,BYTE PTR ds:[esi]
  420c00:	test   BYTE PTR ds:0xed834e61,cl
  420c06:	jecxz  0x420c50
  420c08:	push   ebp
  420c09:	ja     0x420c07
  420c0b:	icebp  
  420c0c:	outs   dx,BYTE PTR ds:[esi]
  420c0d:	sub    eax,0xff75e925
  420c12:	inc    ecx
  420c13:	jbe    0x420c20
  420c15:	out    0x2a,al
  420c17:	push   0x9f462929
  420c1c:	clc    
  420c1d:	push   0x86d32ac7
  420c22:	aas    
  420c23:	sub    al,0xb9
  420c25:	out    0x71,al
  420c27:	or     eax,0xa3cef34e
  420c2c:	out    dx,eax
  420c2d:	push   ecx
  420c2e:	scas   al,BYTE PTR es:[edi]
  420c2f:	ins    BYTE PTR es:[edi],dx
  420c30:	and    DWORD PTR [edx+0x5715f55a],esi
  420c36:	int    0xac
  420c38:	rcl    BYTE PTR [esp+ebp*4],1
  420c3b:	aam    0xb5
  420c3d:	ins    DWORD PTR es:[edi],dx
  420c3e:	push   eax
  420c3f:	outs   dx,BYTE PTR ds:[esi]
  420c40:	sbb    DWORD PTR [edx],ecx
  420c42:	enter  0x84f1,0xf5
  420c46:	sub    ebp,ebx
  420c48:	xor    al,0x82
  420c4a:	std    
  420c4b:	mov    gs,WORD PTR [edx+edx*4+0x6b120f24]
  420c52:	add    al,0x1a
  420c54:	or     bh,BYTE PTR [ebx]
  420c56:	out    dx,al
  420c57:	lods   al,BYTE PTR ds:[esi]
  420c58:	fst    DWORD PTR [esi-0x4067b755]
  420c5e:	sbb    DWORD PTR [ebp+0x36],ebx
  420c61:	ror    DWORD PTR [eax+0x6d1577b6],0x4d
  420c68:	ficomp DWORD PTR ds:0x85e02782
  420c6e:	retf   0x2b0b
  420c71:	retf   0x7e1e
  420c74:	leave  
  420c75:	cmp    ecx,DWORD PTR [edx+edi*2+0x4a]
  420c79:	push   ss
  420c7a:	nop
  420c7b:	sbb    al,0x39
  420c7d:	nop
  420c7e:	lea    eax,[edi-0x20]
  420c81:	jmp    0x6730:0xa2f886bc
  420c88:	ja     0x420c52
  420c8a:	add    DWORD PTR [ebp+eax*4-0x46a4b51c],ebx
  420c91:	pop    es
  420c92:	or     ah,cl
  420c94:	add    bh,BYTE PTR [edx-0x68]
  420c97:	cdq    
  420c98:	jmp    0x8890aadf
  420c9d:	xchg   ebp,eax
  420c9e:	ja     0x420cbe
  420ca0:	fisubr DWORD PTR [esi+0x12]
  420ca3:	inc    ecx
  420ca4:	or     esp,DWORD PTR [eax+edx*2+0x1ecddc65]
  420cab:	(bad)  [esi-0x75a8f347]
  420cb1:	cmc    
  420cb2:	sbb    eax,0xbe3bf4ba
  420cb7:	sbb    ch,BYTE PTR ds:0xd1ffb44a
  420cbd:	jno    0x420d2c
  420cbf:	push   eax
  420cc0:	xchg   esi,eax
  420cc1:	stos   BYTE PTR es:[edi],al
  420cc2:	add    ebx,ebp
  420cc4:	adc    al,0xbc
  420cc6:	pop    eax
  420cc7:	or     eax,DWORD PTR [ebp+0x10]
  420cca:	popa   
  420ccb:	call   0xa6bf9407
  420cd0:	jg     0x420cd4
  420cd2:	fisub  WORD PTR [eax-0x15]
  420cd5:	rol    ch,cl
  420cd7:	add    eax,0x3cd5a9d5
  420cdc:	xor    DWORD PTR [edx],ecx
  420cde:	mov    esp,0xae9daa24
  420ce3:	and    bh,bh
  420ce5:	and    eax,0xc0dec52b
  420cea:	lock xor esi,ebp
  420ced:	imul   esp,DWORD PTR [ecx],0xffffffd8
  420cf0:	leave  
  420cf1:	addr16 cli 
  420cf3:	aad    0x78
  420cf5:	jge    0x420d00
  420cf7:	xchg   edi,eax
  420cf8:	cmp    al,0x57
  420cfa:	(bad)  
  420cfb:	in     al,dx
  420cfc:	shr    cl,0x2
  420cff:	popf   
  420d00:	pop    esi
  420d01:	jmp    0x9c8c:0x3098e013
  420d08:	and    DWORD PTR [ecx-0x6621d613],ebp
  420d0e:	leave  
  420d0f:	mov    edx,0x85a0960c
  420d14:	aad    0xab
  420d16:	or     eax,0xc6d489c5
  420d1b:	jmp    0xc199ee8e
  420d20:	lock (bad) 
  420d22:	adc    ah,BYTE PTR [edx]
  420d24:	repz mov edi,0x80bebe4
  420d2a:	dec    eax
  420d2b:	mov    al,ds:0xf3d28f56
  420d30:	dec    ebp
  420d31:	in     eax,0x30
  420d33:	dec    edx
  420d34:	or     edx,DWORD PTR [ebp+0x4]
  420d37:	inc    esi
  420d38:	xor    al,0x11
  420d3a:	inc    ebx
  420d3b:	mov    eax,0xa2aeab4b
  420d40:	xchg   edi,eax
  420d41:	push   esp
  420d42:	loope  0x420d81
  420d44:	inc    ecx
  420d45:	(bad)  
  420d46:	lea    esi,[edi-0x7a]
  420d49:	push   esp
  420d4a:	mov    bh,0x6d
  420d4c:	add    edx,ecx
  420d4e:	sbb    al,BYTE PTR [eax-0x76]
  420d51:	retf   
  420d52:	aam    0xcd
  420d54:	mov    ebx,0xad32b4a9
  420d59:	leave  
  420d5a:	inc    edx
  420d5b:	mov    dl,0xb3
  420d5d:	pop    edx
  420d5e:	aas    
  420d5f:	div    BYTE PTR [esi+0x555f45ec]
  420d65:	shr    edx,0x3d
  420d68:	inc    edx
  420d69:	adc    ch,cl
  420d6b:	adc    DWORD PTR [esp+esi*8+0xba4454],edi
  420d72:	mov    ebx,0xc61d42c2
  420d77:	inc    esp
  420d78:	mov    al,0x73
  420d7a:	push   esi
  420d7b:	pushfw 
  420d7d:	sbb    eax,0x10f9c86
  420d82:	rcr    DWORD PTR [ecx+0x10],1
  420d85:	cli    
  420d86:	mov    al,0xfe
  420d88:	jl     0x420d89
  420d8a:	mov    eax,ds:0xd90eded4
  420d8f:	ins    BYTE PTR es:[edi],dx
  420d90:	(bad)  
  420d92:	arpl   WORD PTR [esi+0x3d],bx
  420d95:	xchg   DWORD PTR [edx-0x4d],ebp
  420d98:	pop    es
  420d99:	jle    0x420d4e
  420d9b:	psadbw mm0,mm4
  420d9e:	add    esi,DWORD PTR [edx-0x57]
  420da1:	dec    DWORD PTR [edx]
  420da3:	add    bh,0x61
  420da6:	dec    edi
  420da7:	mov    dl,0x5b
  420da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420daa:	mov    eax,ds:0xcbf9e813
  420daf:	cmp    eax,0xce7b539f
  420db4:	inc    esp
  420db5:	in     eax,0xfb
  420db7:	jecxz  0x420d95
  420db9:	fdiv   DWORD PTR [eax-0x294a51bd]
  420dbf:	nop
  420dc0:	ins    DWORD PTR es:[edi],dx
  420dc1:	dec    eax
  420dc2:	push   cs
  420dc3:	inc    eax
  420dc4:	dec    eax
  420dc5:	pop    esi
  420dc6:	retf   0x3e24
  420dc9:	outs   dx,BYTE PTR ds:[esi]
  420dca:	mov    esp,0x30aa9f6d
  420dcf:	(bad)  
  420dd0:	mov    bh,0x4d
  420dd2:	sub    DWORD PTR [eax+0x44],0xe6183479
  420dd9:	or     cl,dh
  420ddb:	add    al,0x1e
  420ddd:	xchg   esi,eax
  420dde:	mov    ds:0x1299bd03,eax
  420de3:	mov    bl,0x9f
  420de5:	mov    ds:0xa980798f,eax
  420dea:	inc    edx
  420deb:	push   ebx
  420dec:	shl    BYTE PTR [edx-0x47],0x36
  420df0:	nop
  420df1:	xlat   BYTE PTR ds:[ebx]
  420df2:	push   esi
  420df3:	xchg   ecx,eax
  420df4:	dec    eax
  420df5:	pushf  
  420df6:	call   0x25de4b81
  420dfb:	repnz scas al,BYTE PTR es:[edi]
  420dfd:	push   edx
  420dfe:	pop    ecx
  420dff:	sbb    eax,0x73a974a1
  420e04:	xor    DWORD PTR [eax+0x5],ebx
  420e07:	push   ecx
  420e08:	pop    ecx
  420e09:	aad    0x0
  420e0b:	addr16 int3 
  420e0d:	scas   al,BYTE PTR es:[edi]
  420e0e:	dec    ebp
  420e0f:	(bad)  
  420e10:	cmp    BYTE PTR [ebx],bl
  420e12:	nop
  420e13:	xchg   ebx,eax
  420e14:	pop    ds
  420e15:	mov    eax,0xfdefaf28
  420e1a:	mov    cl,0xac
  420e1c:	push   edx
  420e1d:	test   ch,al
  420e1f:	and    eax,0x68afe932
  420e24:	aas    
  420e25:	imul   eax,DWORD PTR [ebp+0x76d74d18],0xe1a5d919
  420e2f:	xor    eax,DWORD PTR [ebp-0x6b106d27]
  420e35:	adc    dl,BYTE PTR ds:[ebp+0x5f35189d]
  420e3c:	cmp    eax,edx
  420e3e:	add    BYTE PTR [ebp-0x200f998d],ah
  420e44:	(bad)
  420e47:	and    DWORD PTR [edx-0x6a],ebx
  420e4a:	xor    BYTE PTR [esi],bl
  420e4c:	sbb    ecx,edi
  420e4e:	push   edx
  420e4f:	and    ebx,esp
  420e51:	push   ecx
  420e52:	jmp    0x420eb6
  420e54:	in     al,dx
  420e55:	and    DWORD PTR [ecx],esi
  420e57:	ss mov ch,0x17
  420e5a:	push   eax
  420e5b:	scas   eax,DWORD PTR es:[edi]
  420e5c:	mov    esp,0x35f7041f
  420e61:	mov    cl,0x29
  420e63:	dec    edi
  420e64:	xchg   edi,eax
  420e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e66:	jl     0x420e92
  420e68:	nop
  420e69:	mov    edx,0xe56a3e36
  420e6e:	cdq    
  420e6f:	push   0x996b906e
  420e74:	push   es
  420e75:	jp     0x420eaf
  420e77:	pop    ebp
  420e78:	sar    BYTE PTR [edx+ebp*4-0x634c5b7d],cl
  420e7f:	test   eax,0xfb492f9b
  420e84:	imul   ebp,DWORD PTR [esi-0x28],0xc48dc9d7
  420e8b:	mov    ebp,0xfeee093c
  420e90:	push   edx
  420e91:	and    DWORD PTR [edx+0x7d87967f],edi
  420e97:	retf   
  420e98:	imul   edx,DWORD PTR [edx-0x6b463c66],0xffffffcb
  420e9f:	or     al,0x24
  420ea1:	icebp  
  420ea2:	outs   dx,BYTE PTR ds:[esi]
  420ea3:	dec    ecx
  420ea4:	ret    0x207e
  420ea7:	push   ebp
  420ea8:	fisub  DWORD PTR [esi+0x51]
  420eab:	popa   
  420eac:	and    DWORD PTR [esi],ebp
  420eae:	jne    0x420ea3
  420eb0:	mov    dl,0x30
  420eb2:	and    edx,esi
  420eb4:	pop    ecx
  420eb5:	xchg   edx,eax
  420eb6:	shl    BYTE PTR fs:[ecx-0x18],0xf4
  420ebb:	and    ah,dh
  420ebd:	dec    edx
  420ebe:	mov    al,ds:0xb919f72
  420ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ec4:	(bad)  
  420ec5:	cmp    eax,0x47705d66
  420eca:	cmc    
  420ecb:	lods   al,BYTE PTR ds:[esi]
  420ecc:	mov    bl,0x1b
  420ece:	cwde   
  420ecf:	test   DWORD PTR [esi+ebp*1],esp
  420ed2:	cbw    
  420ed4:	mov    al,0xc6
  420ed6:	dec    ebp
  420ed7:	popf   
  420ed8:	mov    ds,WORD PTR [edi-0x71]
  420edb:	mov    cl,BYTE PTR [ecx]
  420edd:	and    ah,BYTE PTR [ecx+0x381e6ca6]
  420ee3:	pop    es
  420ee4:	sti    
  420ee5:	jb     0x420e77
  420ee7:	scas   al,BYTE PTR es:[edi]
  420ee8:	lods   al,BYTE PTR ds:[esi]
  420ee9:	sub    al,0x81
  420eeb:	jg     0x420e96
  420eed:	mov    ds:0x86fa1968,eax
  420ef2:	cmp    ah,BYTE PTR [eax]
  420ef4:	mov    ecx,es
  420ef6:	or     DWORD PTR [edi],eax
  420ef8:	rcl    BYTE PTR [ebx],0xb2
  420efb:	adc    DWORD PTR [ebx],edi
  420efd:	mov    esi,0xae005a93
  420f02:	xchg   esp,eax
  420f03:	push   cs
  420f04:	fisttp DWORD PTR [ebp-0x67]
  420f07:	adc    edx,ecx
  420f09:	xor    DWORD PTR [ebp-0x546cb236],0x74af145
  420f13:	loop   0x420f4b
  420f15:	aaa    
  420f16:	push   ebp
  420f17:	jns    0x420f3c
  420f19:	cmp    eax,0xf8d5866f
  420f1e:	(bad)  
  420f1f:	(bad)  
  420f20:	mov    al,ds:0xbfd9db1e
  420f25:	cli    
  420f26:	hlt    
  420f27:	jns    0x420ee0
  420f29:	sub    al,0xb8
  420f2b:	div    BYTE PTR [edi-0x49]
  420f2e:	and    al,0xb4
  420f30:	imul   ebp,esi,0x20
  420f33:	call   0xf25e1018
  420f38:	push   0xffffffbe
  420f3a:	scas   al,BYTE PTR es:[edi]
  420f3b:	xor    dh,BYTE PTR fs:[eax]
  420f3e:	sahf   
  420f3f:	fnclex 
  420f41:	daa    
  420f42:	shr    DWORD PTR [ebp-0x62],cl
  420f45:	fidiv  WORD PTR [edi]
  420f47:	push   edx
  420f48:	(bad)  
  420f49:	xchg   BYTE PTR ds:[edi+ebp*2],ch
  420f4d:	or     al,0xc
  420f4f:	outs   dx,DWORD PTR ds:[esi]
  420f50:	or     al,0x40
  420f52:	sub    bh,ah
  420f54:	sbb    bl,BYTE PTR [ebp+0x14e5ff94]
  420f5a:	dec    ebp
  420f5b:	sub    bh,ah
  420f5d:	sub    al,BYTE PTR es:[ebp-0xd7fbb3]
  420f64:	aaa    
  420f65:	retf   
  420f66:	(bad)  
  420f67:	fcomp  DWORD PTR [eax+0x3]
  420f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f6b:	adc    ch,dl
  420f6d:	cmp    edi,esp
  420f6f:	jl     0x420fe5
  420f71:	stc    
  420f72:	cmp    al,0x92
  420f74:	loop   0x420f81
  420f76:	popa   
  420f77:	(bad)  
  420f78:	rcl    ebp,0x4e
  420f7b:	jns    0x420fb3
  420f7d:	cmp    DWORD PTR [eax-0x1e],ecx
  420f80:	adc    eax,0x11df2679
  420f85:	jb     0x420f45
  420f87:	ret    
  420f88:	icebp  
  420f89:	into   
  420f8a:	xor    ebp,DWORD PTR [edi-0x4d]
  420f8d:	pop    edx
  420f8e:	pop    esi
  420f8f:	jmp    0x1dae:0x90bb17fd
  420f96:	sbb    BYTE PTR [eax+0x77],ch
  420f99:	add    al,ch
  420f9b:	cli    
  420f9c:	inc    ecx
  420f9d:	lea    edi,[eax]
  420f9f:	mov    ah,0x67
  420fa1:	fidivr DWORD PTR [ebx]
  420fa3:	(bad)  
  420fa5:	push   edx
  420fa6:	repnz sub dl,ah
  420fa9:	and    al,0x43
  420fab:	or     al,BYTE PTR [ecx+0x55]
  420fae:	in     eax,0x68
  420fb0:	dec    esi
  420fb1:	mov    ebp,0x325d93c
  420fb6:	cld    
  420fb7:	xchg   esp,eax
  420fb8:	daa    
  420fb9:	out    0xc3,eax
  420fbb:	mov    esi,0xb657f906
  420fc0:	adc    al,dh
  420fc2:	idiv   BYTE PTR ss:[edi-0x183a1ce1]
  420fc9:	fadd   QWORD PTR [esi]
  420fcb:	sub    ecx,esi
  420fcd:	fsub   QWORD PTR [edi]
  420fcf:	scas   al,BYTE PTR es:[edi]
  420fd0:	and    ebx,ebx
  420fd2:	push   0xffffffe1
  420fd4:	lods   eax,DWORD PTR ds:[esi]
  420fd5:	xchg   edx,eax
  420fd6:	jo     0x42100f
  420fd8:	xlat   BYTE PTR ds:[ebx]
  420fd9:	inc    esi
  420fda:	cld    
  420fdb:	fldpi  
  420fdd:	shl    BYTE PTR es:[esi],cl
  420fe0:	shl    BYTE PTR [edx+0x64],1
  420fe3:	pop    es
  420fe4:	daa    
  420fe5:	mov    esi,0x97b0ead7
  420fea:	es xor esi,edx
  420fed:	xchg   ebx,eax
  420fee:	xchg   edx,esp
  420ff0:	pop    ss
  420ff1:	mov    gs,WORD PTR [edi-0x42559f89]
  420ff7:	outs   dx,BYTE PTR ds:[esi]
  420ff8:	stos   BYTE PTR es:[edi],al
  420ff9:	push   eax
  420ffa:	mov    eax,ds:0x2bf24ab4
  420fff:	enter  0xea40,0xef
  421003:	mov    ah,0x38
  421005:	mov    esi,0x8d602878
  42100a:	sbb    eax,0x9e0571da
  42100f:	mov    eax,ds:0xcc80a2a5
  421014:	jbe    0x421084
  421016:	sub    BYTE PTR [edi+0x73af16e1],cl
  42101c:	xchg   edi,eax
  42101d:	mov    dl,0x64
  42101f:	(bad)  [esi-0x5146f395]
  421025:	xchg   ebx,eax
  421026:	imul   edx,DWORD PTR [ecx],0x5a
  421029:	out    0x57,al
  42102b:	nop
  42102c:	and    eax,esi
  42102e:	dec    ecx
  42102f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421030:	mov    ebx,0x39b78899
  421035:	lock xchg edi,eax
  421037:	jge    0x421088
  421039:	loopne 0x421090
  42103b:	js     0x42109a
  42103d:	add    BYTE PTR [ecx],dl
  42103f:	rcl    BYTE PTR [ebp+0x56],cl
  421042:	and    BYTE PTR [ecx+ebx*2],0x47
  421046:	xor    ecx,DWORD PTR [esi+0x20e9a4d7]
  42104c:	mov    ch,0xdf
  42104e:	inc    edi
  42104f:	mov    eax,0xa4730f70
  421054:	in     al,dx
  421055:	dec    ebx
  421056:	xor    BYTE PTR [eax],cl
  421058:	call   0x68e5:0xc5a2a61a
  42105f:	pusha  
  421060:	mov    dl,0x42
  421062:	mov    esp,0xc85a352
  421067:	pop    esi
  421068:	jb     0x4210c6
  42106a:	sub    ah,BYTE PTR [esi-0x74cc6ad6]
  421070:	pop    ds
  421071:	stc    
  421072:	arpl   WORD PTR [edx-0xe834e53],cx
  421078:	mov    ebp,DWORD PTR [ebp-0x5d]
  42107b:	or     eax,0xe2824e2f
  421081:	inc    edx
  421082:	push   ebp
  421083:	inc    esp
  421084:	lea    esp,[ecx+0x489d832e]
  42108a:	retf   0x5590
  42108d:	sub    eax,0xb613224c
  421092:	adc    eax,0xe3b86b16
  421097:	push   es
  421098:	jb     0x4210fa
  42109a:	mov    ch,0x6a
  42109c:	adc    BYTE PTR [ebx+esi*4-0x24140182],bl
  4210a3:	ret    0xc7fd
  4210a6:	xchg   edi,eax
  4210a7:	sub    edi,DWORD PTR [edi-0x64]
  4210aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ab:	retf   
  4210ac:	ret    
  4210ad:	jmp    0x6279:0xd044b8d0
  4210b4:	adc    edi,DWORD PTR [ebp+0xf318a8f]
  4210ba:	pop    esi
  4210bb:	inc    esp
  4210bc:	cwde   
  4210bd:	into   
  4210be:	mov    es,WORD PTR [eax-0x320b9a7]
  4210c4:	fist   WORD PTR [esi-0x12ffda55]
  4210ca:	(bad)  
  4210cb:	jne    0x42111e
  4210cd:	jmp    0x490dbca
  4210d2:	call   0xdf14:0x56c1d056
  4210d9:	dec    ecx
  4210da:	(bad)  
  4210db:	mov    edi,0x3fc1a33a
  4210e0:	mov    ah,0xe3
  4210e2:	xchg   DWORD PTR [esi+0x1f216eb],ebx
  4210e8:	pop    ds
  4210e9:	sti    
  4210ea:	xor    eax,0x3d865962
  4210ef:	mov    DWORD PTR [edi],ebx
  4210f1:	aas    
  4210f2:	in     eax,0xaf
  4210f4:	mov    ds:0xbbe1f785,al
  4210f9:	ins    BYTE PTR es:[edi],dx
  4210fa:	sahf   
  4210fb:	imul   ebx,esi,0x37
  4210fe:	xor    edi,DWORD PTR [ecx-0x3f7586f1]
  421104:	retf   
  421105:	addr16 and eax,0xe9b1055b
  42110b:	xor    al,0xcc
  42110d:	repnz xchg esp,eax
  42110f:	das    
  421110:	fcom   st(6)
  421112:	clc    
  421113:	test   BYTE PTR ds:0x9d6c6caa,ah
  421119:	jmp    0x2ac9649b
  42111e:	xchg   DWORD PTR [ebx-0x22],eax
  421121:	push   es
  421122:	scas   eax,DWORD PTR es:[edi]
  421123:	jbe    0x421166
  421125:	test   eax,0x5fca0636
  42112a:	pop    ds
  42112b:	(bad)  
  42112c:	fs sub bl,0x33
  421130:	sub    bh,al
  421132:	push   edi
  421133:	mov    ds:0x9d22f279,eax
  421138:	adc    al,0x5e
  42113a:	mov    bh,BYTE PTR [edi+0x186430b]
  421140:	mov    eax,ebp
  421142:	adc    DWORD PTR ds:0xb93f87a3,ebx
  421148:	and    DWORD PTR [edi+eiz*8],edi
  42114b:	sbb    bh,al
  42114d:	mov    edx,0xbc3dfccb
  421152:	in     al,dx
  421153:	shl    BYTE PTR [ebp-0x2c98b7ac],cl
  421159:	push   eax
  42115a:	and    eax,0x63404816
  42115f:	pusha  
  421160:	enter  0xa97b,0x19
  421164:	xchg   BYTE PTR ds:0xc8f7559c,dh
  42116a:	inc    ebp
  42116b:	jmp    0xdb5c:0xa96e63d7
  421172:	xchg   ebx,eax
  421173:	adc    BYTE PTR [esi],dh
  421175:	std    
  421176:	(bad)  [ebp-0x42]
  421179:	ins    DWORD PTR es:[edi],dx
  42117a:	jmp    0x7496:0x6157d7db
  421181:	add    ebp,DWORD PTR [eax-0x56]
  421184:	inc    esi
  421185:	xor    BYTE PTR [edx],0x73
  421188:	mov    edx,0x53db5d12
  42118d:	and    BYTE PTR [ebx],0xe3
  421190:	cdq    
  421191:	push   edi
  421192:	jb     0x4211c3
  421194:	(bad)  
  421195:	cmc    
  421196:	call   0xbab8:0x405fca74
  42119d:	stos   BYTE PTR es:[edi],al
  42119e:	pop    edx
  42119f:	call   0x35e9:0xb8d16ac1
  4211a6:	(bad)  
  4211a7:	fs push eax
  4211a9:	xchg   ebx,eax
  4211aa:	call   0x61512381
  4211af:	xchg   ecx,eax
  4211b0:	dec    ecx
  4211b1:	in     eax,0xc6
  4211b3:	daa    
  4211b4:	cmp    BYTE PTR [ecx+0x51a9efd9],0x4f
  4211bb:	psubb  mm2,QWORD PTR [edi-0xe]
  4211bf:	test   eax,0x3525db0c
  4211c4:	imul   BYTE PTR [esi]
  4211c6:	fist   DWORD PTR [esi-0x1b32aed4]
  4211cc:	xor    ecx,edi
  4211ce:	aam    0xe7
  4211d0:	(bad)  
  4211d2:	fcom   QWORD PTR [ecx-0x73]
  4211d5:	out    dx,al
  4211d6:	jno    0x4211da
  4211d8:	gs sub al,0x97
  4211db:	out    dx,al
  4211dc:	sub    edi,DWORD PTR [esi]
  4211de:	cld    
  4211df:	cwde   
  4211e0:	push   esp
  4211e1:	js     0x42120b
  4211e3:	out    dx,eax
  4211e4:	pop    eax
  4211e5:	ss ds inc ecx
  4211e8:	jo     0x3738e577
  4211ee:	call   0xd0a:0xef714a27
  4211f5:	sti    
  4211f6:	stos   DWORD PTR es:[edi],eax
  4211f7:	lods   eax,DWORD PTR ds:[esi]
  4211f8:	and    eax,0x59a88fb3
  4211fd:	xchg   edi,eax
  4211fe:	inc    ebp
  4211ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421200:	jmp    0x57d0:0x995fc500
  421207:	cmp    eax,0xe17452f
  42120c:	lock aas 
  42120e:	aad    0xb4
  421210:	js     0x421208
  421212:	icebp  
  421213:	xor    eax,0x9ae188de
  421218:	and    eax,0x8a2c82a1
  42121d:	loopne 0x421206
  42121f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421220:	dec    esi
  421221:	add    eax,DWORD PTR [ecx-0x33531137]
  421227:	push   esp
  421228:	cmp    cl,BYTE PTR [edx]
  42122a:	iret   
  42122b:	(bad)
  42122e:	fild   QWORD PTR ds:0xa654ad5e
  421234:	rcl    DWORD PTR [esi-0x2e61d3d7],0xa2
  42123b:	bound  eax,QWORD PTR [edi-0xbd636dd]
  421241:	shr    DWORD PTR [eax+0x5d],1
  421244:	adc    ebx,ebp
  421246:	dec    edi
  421247:	rcr    dh,0xff
  42124a:	push   0xffffff9e
  42124c:	or     al,BYTE PTR [esi-0xeef8844]
  421252:	dec    eax
  421253:	jmp    0x960233a0
  421258:	retf   
  421259:	ins    BYTE PTR es:[edi],dx
  42125a:	xchg   esp,eax
  42125b:	push   es
  42125c:	cli    
  42125d:	popa   
  42125e:	mov    dl,0x72
  421260:	push   ss
  421261:	scas   al,BYTE PTR es:[edi]
  421262:	mov    ch,0x8b
  421264:	addr16 xchg ecx,eax
  421266:	sub    al,0x63
  421268:	lods   al,BYTE PTR ds:[esi]
  421269:	jnp    0x4212d7
  42126b:	loopne 0x42123f
  42126d:	sti    
  42126e:	daa    
  42126f:	ret    0x1eae
  421272:	xchg   esi,eax
  421273:	adc    bl,BYTE PTR [esp+ebp*2-0x2369f00c]
  42127a:	dec    edi
  42127b:	mov    eax,ds:0x7699aabf
  421280:	retf   
  421281:	xor    dl,dh
  421283:	inc    esp
  421284:	retf   
  421285:	sub    bl,al
  421287:	sti    
  421288:	or     al,0x71
  42128a:	jmp    0x558f:0x81cb23e7
  421291:	mov    WORD PTR [esi-0x50],fs
  421294:	stos   DWORD PTR es:[edi],eax
  421295:	xor    ebx,DWORD PTR [ecx+0x1dff5936]
  42129b:	push   edx
  42129c:	pusha  
  42129d:	dec    esp
  42129e:	test   BYTE PTR [eax-0x7c],0xad
  4212a2:	push   ecx
  4212a3:	ret    0xcf5b
  4212a6:	fwait
  4212a7:	test   al,0x6e
  4212a9:	iret   
  4212aa:	and    BYTE PTR [ebx+0x4f73c4d],cl
  4212b0:	sar    ecx,cl
  4212b2:	in     eax,0x5a
  4212b4:	shl    BYTE PTR [eax+edx*4],0x30
  4212b8:	je     0x4212bd
  4212ba:	arpl   WORD PTR [ecx],bx
  4212bc:	int    0x69
  4212be:	fwait
  4212bf:	push   eax
  4212c0:	ins    DWORD PTR es:[edi],dx
  4212c1:	mov    ss,WORD PTR [esi]
  4212c3:	ret    
  4212c4:	push   DWORD PTR [ecx+0x5bf76dcf]
  4212ca:	or     al,0xeb
  4212cc:	arpl   dx,di
  4212ce:	and    eax,0xf4ed8618
  4212d3:	jge    0x421287
  4212d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d6:	add    edi,ebp
  4212d8:	cmc    
  4212d9:	mov    edi,DWORD PTR [edx+0x5ef2fbc2]
  4212df:	jp     0x421360
  4212e1:	mov    ch,0x6a
  4212e3:	and    al,0xe1
  4212e5:	arpl   WORD PTR fs:[edi+0x25],ax
  4212e9:	sbb    eax,0x58bce3ef
  4212ee:	add    eax,0xa11542ba
  4212f3:	add    eax,0xfc3b572e
  4212f8:	in     eax,dx
  4212f9:	in     al,0xa0
  4212fb:	adc    esp,edi
  4212fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fe:	bound  ebp,QWORD PTR [ebx+0x29]
  421301:	jmp    0x4212e2
  421303:	and    esp,DWORD PTR [ebp-0x4ab005aa]
  421309:	xlat   BYTE PTR ds:[ebx]
  42130a:	ja     0x4212b6
  42130c:	jp     0x421309
  42130e:	fmul   QWORD PTR [ecx]
  421310:	lods   al,BYTE PTR ds:[esi]
  421311:	stos   BYTE PTR es:[edi],al
  421312:	xor    DWORD PTR [eax+0x2],0xffffff96
  421316:	test   DWORD PTR [eax],eax
  421318:	pop    ebx
  421319:	push   edx
  42131a:	dec    edx
  42131b:	jmp    FWORD PTR ds:0x688de730
  421321:	cmp    dl,BYTE PTR [ebp+0x96162e9]
  421327:	stc    
  421328:	mov    al,ds:0x97287308
  42132d:	cld    
  42132e:	dec    eax
  42132f:	dec    esi
  421330:	push   ecx
  421331:	shr    dh,cl
  421333:	fist   WORD PTR [ecx+0x27c731b0]
  421339:	rcl    BYTE PTR [eax],1
  42133b:	xchg   esp,eax
  42133c:	test   DWORD PTR [ebx-0x663a97b5],0x119cb5ef
  421346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421347:	adc    DWORD PTR [esi],edi
  421349:	cmp    DWORD PTR [eax],edx
  42134b:	and    esi,eax
  42134d:	xor    al,0x79
  42134f:	cwde   
  421350:	std    
  421351:	inc    ecx
  421352:	aad    0x84
  421354:	addr16 adc al,0x6a
  421357:	jne    0x421357
  421359:	mov    esi,0xa67260c1
  42135e:	in     al,0x6d
  421360:	out    0x3c,al
  421362:	in     al,dx
  421363:	xchg   ebx,eax
  421364:	rol    BYTE PTR [edx],0x27
  421367:	gs mov bl,0xb5
  42136a:	pusha  
  42136b:	int3   
  42136c:	nop
  42136d:	inc    ebp
  42136e:	retf   
  42136f:	ror    cl,0x21
  421372:	add    al,BYTE PTR [ebx+0x4d]
  421375:	imul   ebx,DWORD PTR [ebx],0x1a
  421378:	xor    esp,DWORD PTR [esi+0x1ca452f3]
  42137e:	add    BYTE PTR [ecx-0x4ca468ac],ah
  421384:	sub    edi,ebx
  421386:	mov    BYTE PTR [eax],0x67
  421389:	in     al,dx
  42138a:	pushfw 
  42138c:	call   DWORD PTR [ebx+0x54]
  42138f:	jge    0x421358
  421391:	pop    ecx
  421392:	or     edi,ebp
  421394:	push   ss
  421395:	sbb    eax,0xbc1714d8
  42139a:	leave  
  42139b:	mov    eax,0xbc0a9f96
  4213a0:	addr16 adc eax,0xe32f4fe8
  4213a6:	sbb    al,0x9d
  4213a8:	mov    bl,0x54
  4213aa:	sub    al,0x35
  4213ac:	push   eax
  4213ad:	adc    al,0xaa
  4213af:	mov    esp,0x56d735
  4213b4:	mov    eax,ds:0x2a146872
  4213b9:	pop    edi
  4213ba:	or     al,0x37
  4213bc:	in     eax,0xf1
  4213be:	ins    DWORD PTR es:[edi],dx
  4213bf:	ja     0x4213ff
  4213c1:	popa   
  4213c2:	sbb    al,0x62
  4213c4:	stc    
  4213c5:	inc    edi
  4213c6:	xor    eax,0xa6589a
  4213cb:	pop    ds
  4213cc:	std    
  4213cd:	add    DWORD PTR [ebp+0x1dd9913],esp
  4213d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d4:	sub    al,0xb2
  4213d6:	push   edx
  4213d7:	mov    eax,DWORD PTR [edi+0xf]
  4213da:	adc    DWORD PTR [ecx+0x5a42872b],eax
  4213e0:	dec    ebx
  4213e1:	xor    bh,BYTE PTR [ecx-0x24]
  4213e4:	test   al,0x2b
  4213e6:	lods   eax,DWORD PTR ds:[esi]
  4213e7:	call   0xe5c2d5a1
  4213ec:	or     BYTE PTR [eax],dh
  4213ee:	jo     0x4213d0
  4213f0:	daa    
  4213f1:	loop   0x421386
  4213f3:	mov    ds:0x257430c4,al
  4213f8:	shl    DWORD PTR [ebp+edx*1-0x5a098d2e],0xb6
  421400:	mov    edx,0xfc75c2
  421405:	int    0xf
  421407:	adc    edx,ebx
  421409:	(bad)  
  42140a:	push   edx
  42140b:	das    
  42140c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140d:	enter  0xd348,0xa1
  421411:	(bad)  
  421412:	jnp    0x421436
  421414:	push   ebx
  421415:	(bad)  
  421416:	out    0xe8,eax
  421418:	ret    0xffff
  42141b:	stos   DWORD PTR es:[edi],eax
  42141c:	daa    
  42141d:	test   eax,0xd22414b7
  421422:	into   
  421423:	fwait
  421424:	push   ss
  421425:	repnz sub ecx,DWORD PTR [edx+0x52]
  421429:	dec    ecx
  42142a:	inc    edx
  42142b:	jge    0x42144a
  42142d:	push   ds
  42142e:	xchg   BYTE PTR [esi+0x65],dl
  421431:	mov    esp,0x9f6a6786
  421436:	sbb    BYTE PTR [edx+0x7119bbd],0x89
  42143d:	dec    esp
  42143e:	and    al,0x7f
  421440:	xchg   esp,eax
  421441:	dec    esi
  421442:	push   es
  421443:	mov    ebx,0xc08f4655
  421448:	mov    ch,0x16
  42144a:	popf   
  42144b:	push   ss
  42144c:	lods   eax,DWORD PTR ds:[esi]
  42144d:	sub    dh,BYTE PTR [ebx]
  42144f:	jmp    0x3fc1:0xea953f38
  421456:	aaa    
  421457:	test   cl,bh
  421459:	scas   eax,DWORD PTR es:[edi]
  42145a:	sbb    BYTE PTR [ecx+0x39],bl
  42145d:	cld    
  42145e:	(bad)  
  42145f:	dec    esp
  421460:	cmp    eax,0xf997b2f8
  421465:	fld    QWORD PTR fs:[ecx-0x1341debe]
  42146c:	jno    0x42147a
  42146e:	(bad)  
  42146f:	fidiv  DWORD PTR [esi+eiz*2-0x4f]
  421473:	jmp    0x2c59:0xffc22e09
  42147a:	cmp    edx,ebp
  42147c:	fcmovnu st,st(3)
  42147e:	sbb    dh,ah
  421480:	cmp    dl,bh
  421482:	xor    DWORD PTR [ecx+0x79],edi
  421485:	cmp    al,cl
  421487:	jl     0x4214d6
  421489:	mov    DWORD PTR [ecx+esi*4+0x54290494],esi
  421490:	jae    0x4214ce
  421492:	xchg   ebp,eax
  421493:	mov    ebp,0x89b6b287
  421498:	scas   al,BYTE PTR es:[edi]
  421499:	lahf   
  42149a:	lods   eax,DWORD PTR ds:[esi]
  42149b:	push   edi
  42149c:	imul   esi,esp,0xce1235ee
  4214a2:	jg     0x4214d2
  4214a4:	pop    ss
  4214a5:	lods   eax,DWORD PTR ds:[esi]
  4214a6:	mov    ds:0x39a79533,eax
  4214ab:	mov    ah,0x69
  4214ad:	inc    edi
  4214ae:	stos   BYTE PTR es:[edi],al
  4214af:	mov    WORD PTR [ebx-0x27],cs
  4214b2:	dec    ebx
  4214b3:	into   
  4214b4:	dec    eax
  4214b5:	aad    0x20
  4214b7:	dec    ebx
  4214b8:	std    
  4214b9:	push   ss
  4214ba:	push   esp
  4214bb:	or     al,0xd8
  4214bd:	repz adc BYTE PTR [ebx+0x71],bh
  4214c1:	pop    ss
  4214c2:	shr    DWORD PTR ds:0x8d008ec1,0x8f
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x333c9be3
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x39ea44a1
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   DWORD PTR [esi-0x2b]
  421830:	sbb    al,0x9d
  421832:	shl    BYTE PTR [ebp+eax*2+0xa],0x18
  421837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421839:	js     0x421868
  42183b:	les    ecx,FWORD PTR [edi+0x64c3258c]
  421841:	inc    ebp
  421842:	or     bl,BYTE PTR [eiz*4+0x3bd238a5]
  421849:	(bad)  
  42184a:	mov    WORD PTR [ebp+0xa4564c3],ds
  421850:	sbb    al,0xa5
  421852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421853:	js     0x421827
  421855:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  42185b:	inc    ebp
  42185c:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421863:	(bad)  
  421864:	mov    WORD PTR [ebp+0xa4564c3],ds
  42186a:	in     al,0xa5
  42186c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186d:	js     0x42184b
  42186f:	and    al,0x35
  421871:	sbb    BYTE PTR [ebp+0x2b886d77],0xa4
  421878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421879:	jmp    0xe7b20c33
  42187e:	in     eax,0xee
  421880:	jecxz  0x421896
  421882:	aaa    
  421883:	gs jnp 0x42185d
  421886:	les    edx,FWORD PTR ds:0xe2ee58f2
  42188c:	rep lods al,BYTE PTR ds:[esi]
  42188e:	adc    BYTE PTR [ebp+0x68],ah
  421891:	jns    0x421818
  421893:	xlat   BYTE PTR ds:[ebx]
  421894:	or     eax,0xe2e61bbc
  421899:	mov    ebp,0x2a162b87
  42189e:	jno    0x42186a
  4218a0:	rcr    DWORD PTR ds:0x868236fc,0xb9
  4218a7:	ret    
  4218a8:	fs inc ebp
  4218aa:	or     bl,BYTE PTR [eiz*4-0x38b4805b]
  4218b1:	(bad)  
  4218b2:	iret   
  4218b3:	gs push ecx
  4218b5:	outs   dx,BYTE PTR ds:[esi]
  4218b6:	push   es
  4218b7:	repnz mov gs,WORD PTR [edi+0x314080e6]
  4218be:	xlat   BYTE PTR ds:[ebx]
  4218bf:	jmp    0xbd7de255
  4218c4:	cwde   
  4218c5:	push   ss
  4218c6:	std    
  4218c7:	rol    BYTE PTR [eax-0x28],0xf9
  4218cb:	ja     0x4218eb
  4218cd:	xchg   edi,eax
  4218ce:	fwait
  4218cf:	add    DWORD PTR [eax+eax*1+0x74],edi
  4218d3:	pop    ebp
  4218d4:	aaa    
  4218d5:	jb     0x4218d5
  4218d7:	mov    ch,0xb6
  4218d9:	xchg   bl,bl
  4218db:	cmp    esi,esi
  4218dd:	dec    edi
  4218de:	inc    eax
  4218df:	pushf  
  4218e0:	mov    ah,0xaf
  4218e2:	xor    ch,BYTE PTR [edx]
  4218e4:	test   eax,0xc21dc685
  4218e9:	outs   dx,BYTE PTR ds:[esi]
  4218ea:	sbb    eax,0xe6af8ef2
  4218ef:	add    BYTE PTR [ecx+0x31],0xa7
  4218f3:	jne    0x421904
  4218f5:	leave  
  4218f6:	fistp  DWORD PTR [ebp+0x5de8168a]
  4218fc:	jmp    0xcb97:0xb1ea63d8
  421903:	pushf  
  421904:	xlat   BYTE PTR ds:[ebx]
  421905:	add    BYTE PTR [eax+eax*8-0x53],al
  421909:	jb     0x42189b
  42190b:	ret    
  42190c:	sbb    eax,0x6ba6c586
  421911:	dec    edi
  421912:	dec    eax
  421913:	in     al,0x37
  421915:	scas   eax,DWORD PTR es:[edi]
  421916:	sub    bh,BYTE PTR [ebx+0x65cfe758]
  42191c:	push   ecx
  42191d:	outs   dx,BYTE PTR ds:[esi]
  42191e:	inc    ebp
  42191f:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421926:	(bad)  
  421928:	popf   
  421929:	ret    
  42192a:	sub    BYTE PTR [eax+ecx*1+0x1c],al
  42192e:	add    eax,0x3b9d1375
  421933:	(bad)  
  421934:	mov    WORD PTR [ebp+0xa4564c3],ds
  42193a:	cld    
  42193b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42193d:	jns    0x421918
  42193f:	cmp    al,BYTE PTR [ebp+0x602d9d8c]
  421945:	inc    ebp
  421946:	or     ah,BYTE PTR [eax-0x2d875a5d]
  42194c:	cmp    ecx,DWORD PTR [edi+0x64c3209d]
  421952:	inc    ebp
  421953:	sbb    bl,BYTE PTR [eiz*4+0x3bd778a5]
  42195a:	(bad)  
  42195b:	mov    esp,ds
  42195d:	ret    
  42195e:	fs push ebp
  421960:	or     bl,BYTE PTR [eiz*4+0x3ed278a7]
  421967:	(bad)  
  421968:	lea    ebx,[ebp+0xa4564c3]
  42196e:	sbb    DWORD PTR [ebp+0x3bd278a4],esp
  421974:	(bad)  
  421975:	mov    WORD PTR [ebp+0xa456893],ds
  42197b:	sbb    BYTE PTR [ebp+0x3e3679a5],ah
  421981:	(bad)  
  421982:	mov    ds,WORD PTR [ebp+0xa45e4c3]
  421988:	or     al,0xa5
  42198a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42198b:	push   0x8c8f3bd2
  421990:	(bad)  
  421991:	ret    
  421992:	fs push ebp
  421994:	or     bl,BYTE PTR [eiz*4+0x2bd278a5]
  42199b:	(bad)  
  42199c:	mov    WORD PTR [ebp+0xa4564c3],ds
  4219a2:	sbb    al,0xa5
  4219a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a5:	js     0x4219cd
  4219a7:	add    al,BYTE PTR [ebx+0x64c0f48c]
  4219ad:	inc    ebp
  4219ae:	or     ch,ah
  4219b0:	scas   al,BYTE PTR es:[edi]
  4219b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219b2:	aaa    
  4219b3:	fwait
  4219b4:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  4219ba:	inc    ebp
  4219bb:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  4219c2:	(bad)  
  4219c3:	mov    WORD PTR [ebp+0xa4564c3],ds
  4219c9:	sbb    al,0xa5
  4219cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219cc:	js     0x4219a0
  4219ce:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  4219d4:	inc    ebp
  4219d5:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  4219dc:	(bad)  
  4219dd:	mov    WORD PTR [ebp+0xa4564c3],ds
  4219e3:	sbb    al,0xa5
  4219e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219e6:	js     0x4219ba
  4219e8:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  4219ee:	inc    ebp
  4219ef:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  4219f6:	(bad)  
  4219f7:	mov    WORD PTR [ebp+0xa4564c3],ds
  4219fd:	sbb    al,0xa5
  4219ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a00:	js     0x4219d4
  421a02:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421a08:	inc    ebp
  421a09:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421a10:	(bad)  
  421a11:	mov    WORD PTR [ebp+0xa4564c3],ds
  421a17:	sbb    al,0xa5
  421a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a1a:	js     0x4219ee
  421a1c:	cmp    ecx,DWORD PTR [edi+0x1ca6e9a2]
  421a22:	xor    DWORD PTR [edx],ecx
  421a24:	sbb    al,0xa5
  421a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a27:	cwde   
  421a28:	fnstcw WORD PTR [ebx]
  421a2a:	(bad)  
  421a2b:	pushf  
  421a2c:	popf   
  421a2d:	ret    
  421a2e:	fs xchg ecx,eax
  421a30:	push   cs
  421a31:	sbb    al,0xa5
  421a33:	mov    eax,ds:0xca6bd278
  421a38:	iret   
  421a39:	scas   eax,DWORD PTR es:[edi]
  421a3a:	xchg   edi,eax
  421a3b:	sub    eax,DWORD PTR [ebp+0xa]
  421a3e:	sbb    al,0xa5
  421a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a41:	js     0x421a35
  421a43:	cmp    ecx,DWORD PTR [edi+0x17b1b36c]
  421a49:	aaa    
  421a4a:	imul   ebx,DWORD PTR [eiz*4+0x3bb278a5],0xc86d8c8f
  421a55:	fs inc ebp
  421a57:	push   eax
  421a58:	sbb    al,0xa5
  421a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a5b:	mov    al,ds:0x8c8f3bd6
  421a60:	popf   
  421a61:	ret    
  421a62:	fs inc ebp
  421a64:	or     bl,BYTE PTR [eiz*4+0x1bd278a5]
  421a6b:	(bad)  
  421a6c:	mov    WORD PTR [ebp-0x3d],?
  421a6f:	fs inc ebp
  421a71:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421a78:	(bad)  
  421a79:	mov    WORD PTR [ebp+0xa4564c3],ds
  421a7f:	sbb    al,0xa5
  421a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a82:	js     0x421a56
  421a84:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421a8a:	inc    ebp
  421a8b:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421a92:	(bad)  
  421a93:	mov    WORD PTR [ebp+0xa4564c3],ds
  421a99:	sbb    al,0xa5
  421a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a9c:	js     0x421a70
  421a9e:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421aa4:	inc    ebp
  421aa5:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421aac:	(bad)  
  421aad:	mov    WORD PTR [ebp+0xa4564c3],ds
  421ab3:	sbb    al,0xa5
  421ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab6:	js     0x421a8a
  421ab8:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421abe:	inc    ebp
  421abf:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421ac6:	(bad)  
  421ac7:	mov    WORD PTR [ebp+0xa4564c3],ds
  421acd:	sbb    al,0xa5
  421acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad0:	js     0x421aa4
  421ad2:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421ad8:	inc    ebp
  421ad9:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421ae0:	(bad)  
  421ae1:	mov    WORD PTR [ebp+0xa4564c3],ds
  421ae7:	sbb    al,0xa5
  421ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aea:	js     0x421abe
  421aec:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421af2:	inc    ebp
  421af3:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421afa:	(bad)  
  421afb:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b01:	sbb    al,0xa5
  421b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b04:	js     0x421ad8
  421b06:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b0c:	inc    ebp
  421b0d:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b14:	(bad)  
  421b15:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b1b:	sbb    al,0xa5
  421b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b1e:	js     0x421af2
  421b20:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b26:	inc    ebp
  421b27:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b2e:	(bad)  
  421b2f:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b35:	sbb    al,0xa5
  421b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b38:	js     0x421b0c
  421b3a:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b40:	inc    ebp
  421b41:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b48:	(bad)  
  421b49:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b4f:	sbb    al,0xa5
  421b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b52:	js     0x421b26
  421b54:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b5a:	inc    ebp
  421b5b:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b62:	(bad)  
  421b63:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b69:	sbb    al,0xa5
  421b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b6c:	js     0x421b40
  421b6e:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b74:	inc    ebp
  421b75:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b7c:	(bad)  
  421b7d:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b83:	sbb    al,0xa5
  421b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b86:	js     0x421b5a
  421b88:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421b8e:	inc    ebp
  421b8f:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421b96:	(bad)  
  421b97:	mov    WORD PTR [ebp+0xa4564c3],ds
  421b9d:	sbb    al,0xa5
  421b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ba0:	js     0x421b74
  421ba2:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421ba8:	inc    ebp
  421ba9:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421bb0:	(bad)  
  421bb1:	mov    WORD PTR [ebp+0xa4564c3],ds
  421bb7:	sbb    al,0xa5
  421bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bba:	js     0x421b8e
  421bbc:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421bc2:	inc    ebp
  421bc3:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421bca:	(bad)  
  421bcb:	mov    WORD PTR [ebp+0xa4564c3],ds
  421bd1:	sbb    al,0xa5
  421bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd4:	js     0x421ba8
  421bd6:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421bdc:	inc    ebp
  421bdd:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421be4:	(bad)  
  421be5:	mov    WORD PTR [ebp+0xa4564c3],ds
  421beb:	sbb    al,0xa5
  421bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bee:	js     0x421bc2
  421bf0:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421bf6:	inc    ebp
  421bf7:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421bfe:	(bad)  
  421bff:	mov    WORD PTR [ebp+0xa4564c3],ds
  421c05:	sbb    al,0xa5
  421c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c08:	js     0x421bdc
  421c0a:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421c10:	inc    ebp
  421c11:	or     bl,BYTE PTR [eiz*4+0x3bd278a5]
  421c18:	(bad)  
  421c19:	mov    WORD PTR [ebp+0xa4564c3],ds
  421c1f:	sbb    al,0xa5
  421c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c22:	js     0x421bf6
  421c24:	cmp    ecx,DWORD PTR [edi+0x64c39d8c]
  421c2a:	inc    ebp
  421c2b:	or     bl,BYTE PTR [eiz*4+0x3bd9d0ca]
  421c32:	mov    al,ds:0x64d39d8c
  421c37:	inc    ebp
  421c38:	and    BYTE PTR [esi+0x2d1ed47f],bh
  421c3e:	push   ss
  421c3f:	adc    DWORD PTR [ebx],ecx
  421c41:	int    0x2e
  421c43:	push   edx
  421c44:	lods   eax,DWORD PTR ds:[esi]
  421c45:	sbb    DWORD PTR [eax+0x5609c330],ebp
  421c4b:	popa   
  421c4c:	pushf  
  421c4d:	cmp    eax,0xa109d52a
  421c52:	sbb    BYTE PTR [ebp+0x421a8b63],0x4
  421c59:	mov    dh,0xbf
  421c5b:	shl    BYTE PTR [edx+0x73],cl
  421c5e:	or     bh,BYTE PTR [bp+di]
  421c61:	add    ch,BYTE PTR ds:0x2656832d
  421c67:	mov    esi,0xf4701ea0
  421c6c:	push   0x13
  421c6e:	jnp    0x421bf1
  421c70:	ret    
  421c71:	sahf   
  421c72:	call   0x5da7bfc1
  421c77:	outs   dx,BYTE PTR ds:[esi]
  421c78:	stos   BYTE PTR es:[edi],al
  421c79:	outs   dx,BYTE PTR ds:[esi]
  421c7a:	cmp    al,0x6
  421c7c:	stos   BYTE PTR es:[edi],al
  421c7d:	mov    DWORD PTR [eax+0x16],edi
  421c80:	retf   0xdbf4
  421c83:	xchg   edx,eax
  421c84:	daa    
  421c85:	mov    edi,DWORD PTR [ebx-0x1a2773a6]
  421c8b:	push   ebx
  421c8c:	popa   
  421c8d:	ins    DWORD PTR es:[edi],dx
  421c8e:	mov    ebp,DWORD PTR [ecx]
  421c90:	inc    ecx
  421c91:	push   edi
  421c92:	cs out dx,al
  421c94:	cmp    eax,0xb2f3c455
  421c99:	popf   
  421c9a:	fwait
  421c9b:	mov    al,ds:0xe4c687a
  421ca0:	in     eax,dx
  421ca1:	and    eax,DWORD PTR ds:0x816027be
  421ca7:	leave  
  421ca8:	xor    dh,ah
  421caa:	jmp    0x6994:0x2df56b26
  421cb1:	iret   
  421cb2:	fst    QWORD PTR [ebp+0x2d]
  421cb5:	shl    BYTE PTR [eax],cl
  421cb7:	out    dx,al
  421cb8:	outs   dx,BYTE PTR ds:[esi]
  421cb9:	add    dh,cl
  421cbb:	mov    esp,ebp
  421cbd:	sub    cl,BYTE PTR [ebx-0x4a]
  421cc0:	sub    bl,bh
  421cc2:	or     esi,DWORD PTR [ebp-0x483cc77f]
  421cc8:	xor    DWORD PTR [edi-0x51],edx
  421ccb:	hlt    
  421ccc:	and    DWORD PTR [ebx],0x3c
  421ccf:	mov    dh,BYTE PTR [edx]
  421cd1:	mov    DWORD PTR [edi+ebx*2-0x4215a37d],edx
  421cd8:	push   esp
  421cd9:	shl    DWORD PTR fs:[edi],1
  421cdc:	div    BYTE PTR [ecx+0x60ca9555]
  421ce2:	sub    al,0xb0
  421ce4:	(bad)  
  421ce5:	jg     0x421c8e
  421ce7:	push   eax
  421ce8:	jge    0x421d26
  421cea:	mov    ds:0xf68ea751,eax
  421cef:	adc    eax,0xfba27bb
  421cf4:	(bad)  
  421cf5:	lods   al,BYTE PTR ds:[esi]
  421cf6:	arpl   WORD PTR [edx],si
  421cf8:	sbb    al,0xb5
  421cfa:	retf   0x4a22
  421cfd:	imul   edi,DWORD PTR [ecx-0x14],0xffffffc5
  421d01:	inc    ecx
  421d02:	mov    dl,0x7a
  421d04:	xchg   ebx,eax
  421d05:	test   BYTE PTR [eax+0x89719e5],dl
  421d0b:	sbb    bh,ch
  421d0d:	pop    edx
  421d0e:	cmp    dl,dl
  421d10:	fs push 0xffffffbb
  421d13:	jbe    0x421d1e
  421d15:	sbb    dl,bh
  421d17:	pop    ebx
  421d18:	dec    edx
  421d19:	sub    BYTE PTR [edx],ah
  421d1b:	mov    bl,0xfe
  421d1d:	mov    WORD PTR [bx],?
  421d20:	mov    eax,0x797e2aa4
  421d25:	mov    esp,0x6671af5c
  421d2a:	mov    al,0x1e
  421d2c:	sbb    ebx,DWORD PTR [edi+0x76]
  421d2f:	pop    ecx
  421d30:	call   0x98f:0x768f72c9
  421d37:	or     DWORD PTR es:[eax-0x23b42453],0xffffff83
  421d3f:	imul   ebx,edi,0x63
  421d42:	cwde   
  421d43:	icebp  
  421d44:	sub    bh,al
  421d46:	push   ebx
  421d47:	cwde   
  421d48:	dec    edx
  421d49:	push   ss
  421d4a:	scas   eax,DWORD PTR es:[edi]
  421d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d4c:	cdq    
  421d4d:	loope  0x421cfd
  421d4f:	jbe    0x421d0b
  421d51:	adc    eax,0x2c65179d
  421d56:	push   ecx
  421d57:	retf   
  421d58:	push   esp
  421d59:	xor    dh,BYTE PTR [edi+0x57]
  421d5c:	inc    ecx
  421d5d:	dec    ebx
  421d5e:	dec    ebp
  421d5f:	lods   al,BYTE PTR ds:[esi]
  421d60:	cmp    dh,ch
  421d62:	or     DWORD PTR [edi+0x5642d45d],0x8
  421d69:	jl     0x421de9
  421d6b:	cmp    eax,0x8b756264
  421d70:	xsha256 (bad)
  421d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d72:	push   ecx
  421d73:	shl    BYTE PTR [esi],1
  421d75:	push   ds
  421d76:	cvtps2pd xmm3,xmm3
  421d79:	dec    ebp
  421d7a:	mov    ebp,0x2da00990
  421d7f:	sub    esp,ecx
  421d81:	mov    ch,dl
  421d83:	adc    al,0xf2
  421d85:	sub    eax,DWORD PTR [esi]
  421d87:	int    0x4a
  421d89:	jne    0x421d2d
  421d8b:	ja     0x421e05
  421d8d:	mov    edx,0xab77166c
  421d92:	imul   eax,DWORD PTR [esi-0x55],0x5b981a6b
  421d99:	mov    esp,0xb7d42d5d
  421d9e:	dec    esp
  421d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421da0:	pop    ebx
  421da1:	scas   al,BYTE PTR es:[edi]
  421da2:	adc    esi,esp
  421da4:	imul   esp,DWORD PTR [ebx+0x16fe0f39],0xebb2c476
  421dae:	bound  esp,QWORD PTR [eax-0xdc7a0c5]
  421db4:	icebp  
  421db5:	push   ebp
  421db6:	fdiv   QWORD PTR [edx+0x69c1112f]
  421dbc:	mov    ch,0x4c
  421dbe:	or     al,0x32
  421dc0:	(bad)  
  421dc1:	sbb    al,BYTE PTR [esi+0x3af073a2]
  421dc7:	or     al,0x8d
  421dc9:	xor    dl,dh
  421dcb:	add    ch,BYTE PTR [edi+edx*8+0x62]
  421dcf:	ds (bad) 
  421dd1:	sbb    esi,esi
  421dd3:	daa    
  421dd4:	mov    edi,0x376f7da0
  421dd9:	repz inc ebx
  421ddb:	fcmovnb st,st(1)
  421ddd:	mov    ebx,0xfbc984b9
  421de2:	mov    dl,0xe2
  421de4:	xlat   BYTE PTR ds:[ebx]
  421de5:	cmc    
  421de6:	jne    0x421dec
  421de8:	fist   WORD PTR [esp+eax*1+0xff1c419]
  421def:	mov    ds:0xe004007b,al
  421df4:	test   al,0xd
  421df6:	out    0x58,al
  421df8:	cmp    edx,ecx
  421dfa:	sbb    al,0xe5
  421dfc:	ret    
  421dfd:	xor    DWORD PTR [ecx*4-0x197b8c28],ebp
  421e04:	or     DWORD PTR [esi+0x74471a88],esi
  421e0a:	jb     0x421e21
  421e0c:	xchg   ecx,eax
  421e0d:	mov    ds:0xbc7c3873,eax
  421e12:	push   ebx
  421e13:	xor    eax,0x189975e6
  421e18:	popf   
  421e19:	push   eax
  421e1a:	pop    ecx
  421e1b:	push   eax
  421e1c:	and    al,0xe7
  421e1e:	or     DWORD PTR [eax],0x8f363d76
  421e24:	call   0x67b1e3b9
  421e29:	fcom   QWORD PTR [eax+0x30]
  421e2c:	bound  edx,QWORD PTR ss:[ecx]
  421e2f:	adc    DWORD PTR ds:0x94783eb5,ecx
  421e35:	(bad)  ds:0x460229b4
  421e3b:	or     al,0x78
  421e3d:	ror    BYTE PTR [esi],0xb1
  421e40:	inc    esi
  421e41:	sar    DWORD PTR [edx+0x22ebbe96],1
  421e47:	and    eax,0xae455e90
  421e4c:	retf   0x17b6
  421e4f:	mov    DWORD PTR [edi-0x358a8297],esi
  421e55:	adc    al,0xb3
  421e57:	xchg   edi,eax
  421e58:	mov    ecx,0xbb6f3e08
  421e5d:	inc    esp
  421e5e:	cmp    ebx,esi
  421e60:	pusha  
  421e61:	outs   dx,DWORD PTR ds:[esi]
  421e62:	nop
  421e63:	sub    esp,ecx
  421e65:	inc    ebx
  421e66:	jge    0x421e7c
  421e68:	xchg   ebx,eax
  421e69:	in     al,0x1b
  421e6b:	sbb    esp,DWORD PTR [esi+0x4bb80626]
  421e71:	push   esp
  421e72:	mov    ebx,0xe30e191a
  421e77:	jae    0x421ede
  421e79:	add    edi,edi
  421e7b:	fisub  WORD PTR [ebp+0x3c]
  421e7e:	xchg   BYTE PTR [ebx+eax*2+0x5],bl
  421e82:	addr16 push cs
  421e84:	in     eax,0x5e
  421e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e87:	loop   0x421e60
  421e89:	das    
  421e8a:	xchg   BYTE PTR [ecx+0x10d61365],al
  421e90:	cli    
  421e91:	xor    al,0x48
  421e93:	js     0x421ef3
  421e95:	xchg   edx,eax
  421e96:	mov    cl,0xde
  421e98:	cmp    ebx,DWORD PTR [edx-0x39f8c3b2]
  421e9e:	call   0x88f3:0x7b982b9f
  421ea5:	mov    edx,0x840d159a
  421eaa:	push   0xffffffed
  421eac:	xlat   BYTE PTR ds:[ebx]
  421ead:	or     ecx,edx
  421eaf:	jecxz  0x421ea1
  421eb1:	popa   
  421eb2:	jg     0x421ed8
  421eb4:	aam    0xde
  421eb6:	es scas al,BYTE PTR es:[edi]
  421eb8:	pop    ds
  421eb9:	ins    BYTE PTR es:[edi],dx
  421eba:	jo     0x421efc
  421ebc:	inc    ebx
  421ebd:	jmp    0x5775:0xd58eb729
  421ec4:	jne    0x421eb5
  421ec6:	add    BYTE PTR [edx-0x41],ch
  421ec9:	jl     0x421f2b
  421ecb:	neg    esp
  421ecd:	jecxz  0x421ed8
  421ecf:	mov    WORD PTR [ebx-0x46],ss
  421ed2:	inc    edx
  421ed3:	sub    DWORD PTR [edi+0x33],edi
  421ed6:	sbb    DWORD PTR [eax+eiz*1-0x7fcd31a6],ecx
  421edd:	push   es
  421ede:	sub    eax,0xd39371a7
  421ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ee4:	inc    esp
  421ee5:	imul   eax,DWORD PTR [eax+0x4859fe2d],0xc9d39509
  421eef:	dec    ebx
  421ef0:	push   0xffffff9b
  421ef2:	in     al,0xa6
  421ef4:	stos   BYTE PTR es:[edi],al
  421ef5:	enter  0xa67,0xe8
  421ef9:	imul   edi,edi,0x39
  421efc:	call   0xa80cbed8
  421f01:	push   sp
  421f03:	mov    dl,0x67
  421f05:	and    al,0x2e
  421f07:	fsubr  QWORD PTR [eax]
  421f09:	sub    al,0xaf
  421f0b:	push   ss
  421f0c:	pop    eax
  421f0d:	jmp    0x421ecb
  421f0f:	shl    DWORD PTR [eax-0x15],0xb2
  421f13:	(bad)
  421f16:	test   al,0xdf
  421f18:	jmp    0xbacee3ab
  421f1d:	out    dx,al
  421f1e:	(bad)  
  421f1f:	mov    ds:0x29b4dadb,al
  421f24:	cli    
  421f25:	clc    
  421f26:	and    bl,BYTE PTR [ebp-0x7b77ed80]
  421f2c:	dec    edi
  421f2d:	jle    0x421f7d
  421f2f:	jae    0x421f04
  421f31:	addr16 xchg edx,eax
  421f33:	cmc    
  421f34:	inc    ebx
  421f35:	jns    0x421f91
  421f37:	jge    0x421fb8
  421f39:	dec    ebp
  421f3a:	lods   eax,DWORD PTR ds:[esi]
  421f3b:	pop    edi
  421f3c:	inc    edx
  421f3d:	int    0x51
  421f3f:	cmp    eax,0x6e7bf15
  421f44:	sub    BYTE PTR ds:0xe476117e,dh
  421f4a:	and    DWORD PTR ds:0xa2d1889a,eax
  421f50:	shl    BYTE PTR [edx],0xdf
  421f53:	imul   edi,DWORD PTR ds:0x8916b697,0x60
  421f5a:	clc    
  421f5b:	xor    ebx,DWORD PTR [ebx]
  421f5d:	int    0xd7
  421f5f:	dec    edi
  421f60:	push   cs
  421f61:	ret    0x1840
  421f64:	push   ebp
  421f65:	mov    ds:0xadcdbb50,al
  421f6a:	cdq    
  421f6b:	dec    ebp
  421f6c:	and    DWORD PTR [edx],0x770fa4e7
  421f72:	leave  
  421f73:	fstp   TBYTE PTR [ebp+0x53]
  421f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f77:	test   ch,bh
  421f79:	mov    eax,ds:0xcb3c1dab
  421f7e:	leave  
  421f7f:	push   eax
  421f80:	adc    BYTE PTR [esi],ah
  421f82:	or     al,0x49
  421f84:	loop   0x421ffe
  421f86:	pop    esp
  421f87:	cmp    DWORD PTR [ebp-0x144a0151],ecx
  421f8d:	jo     0x421fbf
  421f8f:	cmp    al,0x7c
  421f91:	and    edx,0xffffffbd
  421f94:	lods   eax,DWORD PTR ds:[esi]
  421f95:	stos   BYTE PTR es:[edi],al
  421f96:	into   
  421f97:	and    BYTE PTR ds:0x754684f5,dh
  421f9d:	in     eax,dx
  421f9e:	clc    
  421f9f:	jecxz  0x421f4b
  421fa1:	mov    ds:0x63982c15,al
  421fa6:	lock jmp 0x34f4:0x4bc8
  421fad:	sub    dh,BYTE PTR [esi+ebp*2+0x75]
  421fb1:	mov    gs,WORD PTR [ebx+0xd]
  421fb4:	popa   
  421fb5:	inc    edx
  421fb6:	js     0x421fe1
  421fb8:	mov    eax,ds:0x2e4270a9
  421fbd:	out    dx,eax
  421fbe:	pop    edi
  421fbf:	sub    eax,0xd01d5c7e
  421fc4:	cs pop ds
  421fc6:	xlat   BYTE PTR ds:[ebx]
  421fc7:	sbb    dh,bh
  421fc9:	les    esp,FWORD PTR ds:0x1a2e6431
  421fcf:	jae    0x421ffb
  421fd1:	sbb    esi,edi
  421fd3:	inc    edi
  421fd4:	push   0x36
  421fd6:	das    
  421fd7:	adc    eax,0x67e10072
  421fdc:	mov    ebx,DWORD PTR [eax]
  421fde:	pop    es
  421fdf:	test   eax,0x7d406a99
  421fe4:	test   eax,0x7afc2a01
  421fe9:	shl    BYTE PTR gs:[edi+0x2f44dfcf],1
  421ff0:	std    
  421ff1:	jo     0x42205b
  421ff3:	pop    esp
  421ff4:	ja     0x421fce
  421ff6:	addr16 js 0x421fd7
  421ff9:	mov    ah,0x2e
  421ffb:	inc    edx
  421ffc:	sub    al,0xd1
  421ffe:	in     al,dx
  421fff:	in     al,0x3b
  422001:	xchg   edx,eax
  422002:	je     0x421ff3
  422004:	xor    al,0x71
  422006:	lahf   
  422007:	(bad)  
  422009:	in     al,0x8b
  42200b:	fdivr  DWORD PTR [esp+ebx*4]
  42200e:	xchg   ecx,eax
  42200f:	js     0x421fe7
  422011:	std    
  422012:	inc    ebx
  422013:	jg     0x422078
  422015:	int    0xc8
  422017:	mov    dh,0xcb
  422019:	or     eax,DWORD PTR [edx+0x5215231d]
  42201f:	mov    edi,DWORD PTR [edi-0x502c358d]
  422025:	or     DWORD PTR [ecx],esi
  422027:	in     eax,0xa6
  422029:	adc    eax,DWORD PTR [ebp+0x1002a35c]
  42202f:	or     edi,DWORD PTR [edx+eax*4-0x40bae3d9]
  422036:	mov    dh,0xc4
  422038:	into   
  422039:	jmp    0xacf:0x64055d1d
  422040:	add    al,0xd4
  422042:	jb     0x422083
  422044:	push   es
  422045:	fimul  DWORD PTR [esi-0x7cb4b242]
  42204b:	rcr    esi,0x26
  42204e:	cmp    eax,0x3c5c5215
  422053:	xor    DWORD PTR [edi+0x3ec1391f],ebx
  422059:	push   ss
  42205a:	pop    edi
  42205b:	cs pop sp
  42205e:	inc    ebp
  42205f:	(bad)  
  422060:	push   edx
  422061:	mov    al,0x63
  422063:	icebp  
  422064:	(bad)  
  422065:	mov    db3,edi
  422068:	xchg   esi,eax
  422069:	es mov bh,0x2
  42206c:	repz test edi,0x3b331544
  422073:	dec    esp
  422074:	push   0x3c
  422076:	xchg   ebp,eax
  422077:	xlat   BYTE PTR ds:[ebx]
  422078:	cdq    
  422079:	fmul   st(4),st
  42207b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207c:	push   eax
  42207d:	lods   al,BYTE PTR ds:[esi]
  42207e:	repnz iret 
  422080:	ins    BYTE PTR es:[edi],dx
  422081:	test   al,0x32
  422083:	cdq    
  422084:	add    dh,BYTE PTR [ecx+0xf]
  422087:	push   esp
  422088:	retf   0xcb30
  42208b:	icebp  
  42208c:	mov    edi,0x7c17fd22
  422091:	or     eax,0x6bcd3a5b
  422096:	mov    eax,ds:0x7232798f
  42209b:	mov    ecx,0xf572e5ec
  4220a0:	ins    BYTE PTR es:[edi],dx
  4220a1:	jg     0x4220e9
  4220a3:	pop    esi
  4220a4:	mov    ?,WORD PTR [esi-0x7c03eb07]
  4220aa:	inc    edx
  4220ab:	(bad)  
  4220ac:	into   
  4220ad:	xlat   BYTE PTR ds:[ebx]
  4220ae:	jecxz  0x422060
  4220b0:	dec    ecx
  4220b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b2:	dec    ebx
  4220b3:	or     ebp,DWORD PTR [ecx-0x4800fda7]
  4220b9:	je     0x422099
  4220bb:	mov    ebx,0x90dfa135
  4220c0:	jg     0x4220a1
  4220c2:	mov    ds:0x5f139d7d,eax
  4220c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c8:	pop    es
  4220c9:	dec    ecx
  4220ca:	xchg   DWORD PTR [ecx+eax*1-0x3f3053bf],edi
  4220d1:	jmp    FWORD PTR [ebx+eiz*8]
  4220d4:	xchg   esi,eax
  4220d5:	std    
  4220d6:	gs cdq 
  4220d8:	adc    ecx,DWORD PTR [ecx+0x5f]
  4220db:	pop    es
  4220dc:	xor    al,0xf5
  4220de:	push   0x6f72b1f9
  4220e3:	test   eax,0xb189f07c
  4220e8:	aaa    
  4220e9:	jbe    0x4220ef
  4220eb:	adc    BYTE PTR [edx-0x4],bh
  4220ee:	mov    edi,0x23b2aa6d
  4220f3:	imul   esp,DWORD PTR [ecx],0x1e
  4220f6:	iret   
  4220f7:	add    bl,BYTE PTR [ebx-0x71]
  4220fa:	test   DWORD PTR [esi],ebx
  4220fc:	hlt    
  4220fd:	jnp    0x4220e2
  4220ff:	(bad)  
  422101:	xchg   ecx,eax
  422102:	cmc    
  422103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422104:	or     DWORD PTR [ecx+0x993942f],ebx
  42210a:	push   eax
  42210b:	sub    BYTE PTR [edx-0x139df7f7],bh
  422111:	ret    
  422112:	pop    ds
  422113:	packuswb mm2,QWORD PTR [edi]
  422116:	cwde   
  422117:	es mov edi,0x7029be19
  42211d:	pusha  
  42211e:	jbe    0x32c80a20
  422124:	mov    dl,0xf3
  422126:	sbb    al,0x84
  422128:	das    
  422129:	jmp    0x6ee50be9
  42212e:	xor    DWORD PTR [esi-0x7d7bc2b],ecx
  422134:	sub    BYTE PTR [eax+0x35],ah
  422137:	aam    0xb
  422139:	xchg   edx,eax
  42213a:	(bad)
  42213d:	add    BYTE PTR [eax-0x4],dl
  422140:	test   DWORD PTR [eax+0x64524c00],esi
  422146:	sub    BYTE PTR [edi],0x25
  422149:	xor    eax,0xdb55af69
  42214e:	mov    cl,0x6c
  422150:	or     BYTE PTR cs:[eax],al
  422153:	and    bl,BYTE PTR ds:0x686780d0
  422159:	pop    es
  42215a:	fst    QWORD PTR [edx]
  42215c:	or     al,0x81
  42215e:	xor    eax,0xefc183aa
  422163:	mov    gs,WORD PTR [esp+ecx*2-0x78]
  422167:	int    0x10
  422169:	sub    ecx,eax
  42216b:	sar    DWORD PTR [eax],cl
  42216d:	(bad)
  422170:	mov    esp,0xeb574ad1
  422175:	pop    eax
  422176:	pop    ebx
  422177:	(bad)  
  422178:	push   ds
  422179:	adc    ecx,DWORD PTR [edx-0x12]
  42217c:	not    DWORD PTR [ebp-0x49]
  42217f:	adc    BYTE PTR [edx-0x37f51f78],dh
  422185:	mov    eax,ds:0x6bbde28b
  42218a:	jle    0x42218d
  42218c:	(bad)  
  42218d:	sar    BYTE PTR [ecx+0x50],1
  422190:	xchg   edx,eax
  422191:	mov    DWORD PTR [ecx],edi
  422193:	pop    edx
  422194:	jb     0x422211
  422196:	in     eax,dx
  422197:	into   
  422198:	xlat   BYTE PTR ds:[ebx]
  422199:	cmp    eax,0xde9c89b1
  42219e:	push   0xffffff91
  4221a0:	pop    ebp
  4221a1:	mov    esp,0x6bd8bf51
  4221a6:	cs (bad) 
  4221a8:	clc    
  4221a9:	jne    0x42216c
  4221ab:	in     al,0xbf
  4221ad:	jge    0x42213a
  4221af:	test   BYTE PTR [eax-0x613942db],dh
  4221b5:	syscall 
  4221b7:	jne    0x4221ea
  4221b9:	mov    DWORD PTR [ebx+0x2e91ec74],0x60a74087
  4221c3:	mov    DWORD PTR [ebx-0x6648f331],ecx
  4221c9:	dec    edi
  4221ca:	dec    ebx
  4221cb:	inc    ebp
  4221cc:	out    dx,eax
  4221cd:	clc    
  4221ce:	push   esi
  4221cf:	loopne 0x422222
  4221d1:	mov    bh,0x42
  4221d3:	xor    bl,BYTE PTR [esi+ebp*8+0x6a]
  4221d7:	mov    edi,ds
  4221d9:	push   ds
  4221da:	cmc    
  4221db:	mov    bl,BYTE PTR [edi-0x66fac407]
  4221e1:	jmp    0xf2257575
  4221e6:	sub    edi,DWORD PTR [edx+edi*8]
  4221e9:	mov    ah,0x9
  4221eb:	cmp    ch,BYTE PTR [ebx+ebp*4-0x40]
  4221ef:	cwde   
  4221f0:	ins    BYTE PTR es:[edi],dx
  4221f1:	pop    eax
  4221f2:	xor    BYTE PTR [esi+esi*1-0x1319d20e],ah
  4221f9:	jle    0x4221cb
  4221fb:	inc    esp
  4221fc:	test   BYTE PTR [ebp-0x5c3d5abd],ch
  422202:	push   esi
  422203:	adc    BYTE PTR ds:0xf4b44ab2,0xa0
  42220a:	ror    DWORD PTR [edx],1
  42220c:	push   esi
  42220d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220e:	loope  0x422201
  422210:	fnstenv [esi-0x3d3112b1]
  422216:	inc    ebp
  422217:	pop    ss
  422218:	sub    eax,0x7f102daf
  42221d:	jo     0x422252
  42221f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422220:	stos   DWORD PTR es:[edi],eax
  422221:	stos   DWORD PTR es:[edi],eax
  422222:	retf   
  422223:	and    esi,ebp
  422225:	mov    ds:0x7efcdb70,al
  42222a:	rcr    BYTE PTR [eax+0x9438b00],cl
  422230:	ja     0x4222aa
  422232:	mov    al,ds:0x5c53ec0d
  422237:	icebp  
  422238:	sti    
  422239:	or     BYTE PTR [esi+edx*1],bl
  42223c:	dec    edx
  42223d:	inc    esp
  42223e:	lock call 0x2af7:0xa36ac8c1
  422246:	xchg   DWORD PTR [esp+esi*2+0x79],esi
  42224a:	fimul  WORD PTR [ebx-0x41b38cf0]
  422250:	mov    fs,WORD PTR [edi+0xf82a23b]
  422256:	fwait
  422257:	mov    cl,0xd
  422259:	inc    eax
  42225a:	(bad)  
  42225b:	jmp    0x422295
  42225d:	loop   0x42224b
  42225f:	mov    DWORD PTR [eax+0x54],ebx
  422262:	pop    DWORD PTR [edi+edi*8]
  422265:	gs cmp ecx,ebx
  422268:	lock mov eax,ds:0x93482c53
  42226e:	mov    edx,DWORD PTR [eax-0x5109d694]
  422274:	fidivr WORD PTR [eax+ebx*4]
  422277:	js     0x42221d
  422279:	fs or  eax,0xfd777b18
  42227f:	(bad)  
  422280:	cmp    eax,0x415705e4
  422285:	cwde   
  422286:	cmp    al,0x1
  422288:	dec    ebp
  422289:	dec    edx
  42228a:	jno    0x422210
  42228c:	scas   eax,DWORD PTR es:[edi]
  42228d:	fstp   st(4)
  42228f:	sar    BYTE PTR [ecx-0x6af44a2],cl
  422295:	lea    ebx,[ebx+eiz*1+0x76]
  422299:	gs das 
  42229b:	retf   0xadee
  42229e:	fidiv  WORD PTR [eax+0x4abefe52]
  4222a4:	push   cs
  4222a5:	out    dx,al
  4222a6:	mov    esp,0x4cacfd81
  4222ab:	cmp    edi,DWORD PTR [edi]
  4222ad:	cwde   
  4222ae:	lock xchg ebp,eax
  4222b0:	or     DWORD PTR [ebx-0x25],0xffffffae
  4222b4:	inc    eax
  4222b5:	pusha  
  4222b6:	push   edx
  4222b7:	inc    ecx
  4222b8:	les    ebx,FWORD PTR [esi]
  4222ba:	inc    ecx
  4222bb:	mov    eax,ds:0xc85c6523
  4222c0:	push   esp
  4222c1:	cmp    BYTE PTR [ebp+0x9f4bb2c],dl
  4222c7:	inc    edx
  4222c8:	sub    BYTE PTR [edi-0x5feb7ace],bl
  4222ce:	into   
  4222cf:	loop   0x4222c0
  4222d1:	cwde   
  4222d2:	xchg   BYTE PTR [eax-0x2b],bl
  4222d5:	push   ecx
  4222d6:	loop   0x4222d2
  4222d8:	int    0xeb
  4222da:	inc    edi
  4222db:	inc    BYTE PTR [ebx+0xf]
  4222de:	mov    WORD PTR [eax-0x3d],ss
  4222e1:	stos   DWORD PTR es:[edi],eax
  4222e2:	mov    ah,0xb7
  4222e4:	dec    ecx
  4222e5:	shl    BYTE PTR [ecx],0x36
  4222e8:	in     al,dx
  4222e9:	popf   
  4222ea:	sahf   
  4222eb:	shl    ebp,1
  4222ed:	retf   0x2321
  4222f0:	cmp    al,0xce
  4222f2:	ins    DWORD PTR es:[edi],dx
  4222f3:	mov    BYTE PTR [ebp+edx*1+0x1c],bh
  4222f7:	std    
  4222f8:	inc    eax
  4222f9:	pop    es
  4222fa:	and    ecx,DWORD PTR [ebx]
  4222fc:	cmp    cl,BYTE PTR [esi-0x36d89c2c]
  422302:	mov    al,0xd0
  422304:	pop    edx
  422305:	cli    
  422306:	or     BYTE PTR [edx],cl
  422308:	sbb    bl,0x33
  42230b:	push   cs
  42230c:	mov    edx,0xf799b403
  422311:	sti    
  422312:	(bad)  
  422313:	popf   
  422314:	mov    al,ds:0x1436bb75
  422319:	xor    DWORD PTR [ecx+0x7051b7b6],eax
  42231f:	(bad)  
  422320:	push   ebp
  422321:	in     eax,dx
  422322:	mov    ah,0x9e
  422324:	mov    WORD PTR ds:0xced5135d,ss
  42232a:	push   esp
  42232b:	dec    ecx
  42232c:	int3   
  42232d:	fwait
  42232e:	sar    DWORD PTR [esi-0x4c8e36c6],cl
  422334:	fwait
  422335:	cmp    esi,DWORD PTR [ecx+ebp*4]
  422338:	das    
  422339:	xor    DWORD PTR [ebp+0x7a],ebp
  42233c:	push   DWORD PTR [edx-0x53f6c7a0]
  422342:	sahf   
  422343:	or     eax,0xf378ede1
  422348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422349:	cmp    ch,BYTE PTR [esi+0x7b]
  42234c:	cmp    dl,BYTE PTR [ebp+0x70]
  42234f:	mov    DWORD PTR [eax-0x6b829d03],ebp
  422355:	dec    esp
  422356:	mov    ebp,0xf310eacd
  42235b:	iret   
  42235c:	test   eax,0x100039ec
  422361:	xor    edx,DWORD PTR [ecx+eiz*2+0x3f5f769a]
  422368:	xor    ebp,edx
  42236a:	mov    ss,WORD PTR [edi]
  42236c:	pop    es
  42236d:	mov    ah,0xe8
  42236f:	jo     0x4223b8
  422371:	imul   edx,DWORD PTR [edx],0x3d
  422374:	jo     0x4223c9
  422376:	aaa    
  422377:	mov    eax,ds:0x63e83841
  42237c:	mov    ch,0xdb
  42237e:	clc    
  42237f:	ret    0xeeab
  422382:	mov    ch,BYTE PTR [ebx*2+0x3bb4b45b]
  422389:	scas   eax,DWORD PTR es:[edi]
  42238a:	xchg   esi,eax
  42238b:	(bad)  
  42238c:	ficom  WORD PTR [ebp+0x4c23bae6]
  422392:	sub    eax,0xb149cd97
  422397:	dec    ecx
  422398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422399:	mov    esi,DWORD PTR [esp+edi*4-0x62abdf57]
  4223a0:	ror    bh,0xe6
  4223a3:	xor    DWORD PTR [edi+eiz*4+0x3020056d],edi
  4223aa:	xchg   esp,eax
  4223ab:	and    al,0xa2
  4223ad:	ins    BYTE PTR es:[edi],dx
  4223ae:	sub    ah,BYTE PTR ds:0x94b18b5b
  4223b4:	inc    edi
  4223b5:	hlt    
  4223b6:	xchg   ebp,eax
  4223b7:	mov    BYTE PTR [ebx-0x6bdfefc1],dl
  4223bd:	and    dh,ch
  4223bf:	lock mov dl,0xf3
  4223c2:	ss aas 
  4223c4:	outs   dx,BYTE PTR ds:[esi]
  4223c5:	pop    esp
  4223c6:	or     bl,BYTE PTR [eax+edi*8+0x10]
  4223ca:	aaa    
  4223cb:	scas   eax,DWORD PTR es:[edi]
  4223cc:	in     al,dx
  4223cd:	call   0x884b:0x6a5baaf1
  4223d4:	mov    al,0xf0
  4223d6:	lea    ecx,[ebp-0x7b]
  4223d9:	jle    0x4223ad
  4223db:	sub    BYTE PTR [ebx],ah
  4223dd:	sbb    DWORD PTR [esi+0x54],ebx
  4223e0:	and    dh,ah
  4223e2:	clc    
  4223e3:	jae    0x422428
  4223e5:	inc    edi
  4223e6:	fs inc esp
  4223e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223e9:	scas   al,BYTE PTR es:[edi]
  4223ea:	or     eax,0xc3af8070
  4223ef:	xor    eax,0xe96d64b4
  4223f4:	mov    bh,dh
  4223f6:	xor    al,0x8a
  4223f8:	mov    bl,0xe6
  4223fa:	xor    bl,BYTE PTR [edx]
  4223fc:	sbb    ch,BYTE PTR [ecx-0x77]
  4223ff:	fs es jmp 0x7c3321bf
  422406:	addr16 inc edx
  422408:	add    DWORD PTR [ebx],0xffffffea
  42240b:	jg     0x42243d
  42240d:	mov    al,ds:0x1ef1ee98
  422412:	cmc    
  422413:	add    DWORD PTR [eax],edx
  422415:	aad    0x67
  422417:	in     ax,dx
  422419:	pop    ebp
  42241a:	lock (bad) 
  42241d:	dec    esp
  42241e:	add    bh,BYTE PTR [ebx+0x34]
  422421:	imul   esp,DWORD PTR [esi-0x24047df1],0x4d2cf03a
  42242b:	enter  0x90c1,0xf4
  42242f:	out    dx,al
  422430:	inc    edi
  422431:	mov    WORD PTR [esi],fs
  422433:	in     eax,0xa8
  422435:	xchg   edx,eax
  422436:	mov    ecx,0x7b24cb5a
  42243b:	inc    ebx
  42243c:	add    DWORD PTR [edx-0x1d6a31ed],ecx
  422442:	out    0x4d,eax
  422444:	or     ah,al
  422446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422447:	inc    esi
  422448:	fnstsw ax
  42244a:	(bad)  [ebx-0x7eb835b9]
  422450:	cs (bad) 
  422452:	in     al,0x12
  422454:	mov    eax,ds:0x7c79ed3c
  422459:	loop   0x4224c4
  42245b:	fs jb  0x422465
  42245e:	xor    cl,bh
  422460:	pop    es
  422461:	pop    es
  422462:	jnp    0x42248a
  422464:	jp     0x4224ab
  422466:	popa   
  422467:	(bad)  
  422468:	cmp    bl,BYTE PTR [ecx+ecx*4-0x4e015d0c]
  42246f:	sub    DWORD PTR [edi-0xce87a0d],0x6
  422476:	int    0x95
  422478:	push   ds
  422479:	cmp    dl,BYTE PTR [ebp+ebx*8-0x73]
  42247d:	mov    ecx,0xb18ff0ae
  422482:	std    
  422483:	loope  0x42247b
  422485:	adc    al,0x1e
  422487:	jnp    0x4224ad
  422489:	xor    al,0x4d
  42248b:	pop    ebp
  42248c:	test   eax,0x8de26ef8
  422491:	lock out dx,eax
  422493:	and    BYTE PTR [ebx],bl
  422495:	or     DWORD PTR [esi+0x2ccb909b],ebp
  42249b:	aad    0xa9
  42249d:	pop    ds
  42249e:	push   ebp
  42249f:	push   ebx
  4224a0:	dec    ebp
  4224a1:	dec    ecx
  4224a2:	push   edi
  4224a3:	add    ebx,DWORD PTR [eiz*4-0x42fdd2]
  4224aa:	popa   
  4224ab:	daa    
  4224ac:	adc    dl,cl
  4224ae:	test   eax,0x99b1f865
  4224b3:	adc    eax,0xcbd85c95
  4224b8:	jle    0x42251e
  4224ba:	nop
  4224bb:	jmp    0xe8c2e3ba
  4224c0:	(bad)  
  4224c1:	pop    esp
  4224c2:	scas   eax,DWORD PTR es:[edi]
  4224c3:	or     ebx,esp
  4224c5:	xor    ebp,DWORD PTR [ebx]
  4224c7:	pop    eax
  4224c8:	outs   dx,BYTE PTR ds:[esi]
  4224c9:	pop    es
  4224ca:	dec    eax
  4224cb:	jl     0x422471
  4224cd:	sub    DWORD PTR [esi+0x4],ebp
  4224d0:	dec    ebp
  4224d1:	popa   
  4224d2:	jne    0x42246b
  4224d4:	add    al,0xf7
  4224d6:	lock or DWORD PTR [eax-0x5d9814ef],ecx
  4224dd:	sbb    BYTE PTR [esi],0x6
  4224e0:	pop    edx
  4224e1:	pusha  
  4224e2:	mov    bl,0x58
  4224e4:	push   ecx
  4224e5:	stc    
  4224e6:	mov    bh,0x13
  4224e8:	push   ebp
  4224e9:	sbb    BYTE PTR [eax],0xaf
  4224ec:	push   ds
  4224ed:	shr    DWORD PTR ds:0xcb22f57f,cl
  4224f3:	aaa    
  4224f4:	fild   DWORD PTR [eax]
  4224f6:	ficomp WORD PTR [eax-0x46012f97]
  4224fc:	inc    ebx
  4224fd:	pop    ss
  4224fe:	repnz out 0xd6,eax
  422501:	fbstp  TBYTE PTR [edx]
  422503:	loopne 0x4224bb
  422505:	pushf  
  422506:	xlat   BYTE PTR ds:[ebx]
  422507:	cmp    dh,dl
  422509:	inc    ebx
  42250a:	jmp    0x422508
  42250c:	daa    
  42250d:	push   0x15
  42250f:	test   DWORD PTR [esp+eiz*4-0x25],edx
  422513:	jnp    0x4224d1
  422515:	dec    edi
  422516:	mov    al,0x72
  422518:	mov    ah,0xd7
  42251a:	jmp    0x7596b40d
  42251f:	inc    ecx
  422520:	outs   dx,DWORD PTR cs:[esi]
  422522:	mov    eax,ds:0x1a772ebf
  422527:	xor    BYTE PTR ds:0xa8daa8e2,ch
  42252d:	sub    DWORD PTR ds:0xbf0d6443,eax
  422533:	xchg   ebp,eax
  422534:	inc    edi
  422535:	fnstenv [ebp-0x65c6defa]
  42253b:	adc    ebp,0x45
  42253e:	loope  0x422581
  422540:	xchg   edx,eax
  422541:	jnp    0x4225a4
  422543:	xchg   BYTE PTR [eax+0x38683efb],bh
  422549:	pop    eax
  42254a:	mov    esi,0x9da0780b
  42254f:	xor    BYTE PTR [edi+0x52],0x16
  422553:	jg     0x422508
  422555:	sub    al,0x92
  422557:	pop    ecx
  422558:	sub    BYTE PTR [ebx-0x41],0xc6
  42255c:	lahf   
  42255d:	push   ds
  42255e:	out    dx,al
  42255f:	jo     0x4224e4
  422561:	pop    esi
  422562:	in     eax,dx
  422563:	add    eax,0x4ae8da2c
  422568:	cmp    eax,0xdb3ed970
  42256d:	jg     0x422522
  42256f:	sbb    ah,BYTE PTR [ebx-0x60]
  422572:	cmp    ah,cl
  422574:	(bad)  
  422575:	push   0xf6c94c81
  42257a:	xchg   edi,eax
  42257b:	adc    eax,0x773deba4
  422580:	xor    eax,0x6af6e03d
  422585:	scas   eax,DWORD PTR es:[edi]
  422586:	fdivr  QWORD PTR [edi+edx*8-0x22]
  42258a:	and    ebx,eax
  42258c:	push   cs
  42258d:	jl     0x4225ca
  42258f:	jno    0x4225ee
  422591:	and    DWORD PTR [eax+0x183e7a27],edi
  422597:	pop    edi
  422598:	add    cl,BYTE PTR [eax]
  42259a:	and    ebx,edi
  42259c:	scas   eax,DWORD PTR es:[edi]
  42259d:	ins    BYTE PTR es:[edi],dx
  42259e:	add    eax,edi
  4225a0:	dec    ecx
  4225a1:	pop    ss
  4225a2:	push   cs
  4225a3:	(bad)  
  4225a5:	mov    bl,0x92
  4225a7:	clc    
  4225a8:	mov    bh,0xe7
  4225aa:	jns    0x4225b0
  4225ac:	dec    ebp
  4225ad:	cli    
  4225ae:	dec    ebp
  4225af:	and    dl,dl
  4225b1:	mov    WORD PTR [edx],?
  4225b3:	mov    eax,0xbf88299d
  4225b8:	mov    al,ds:0x9208d7bd
  4225bd:	(bad)  
  4225be:	in     al,0xa3
  4225c0:	dec    esp
  4225c1:	mov    ch,0xf8
  4225c3:	mov    edx,0xbdc950f1
  4225c8:	jmp    0x42262a
  4225ca:	repz in al,dx
  4225cc:	mov    eax,0xcad71832
  4225d1:	out    dx,al
  4225d2:	xchg   edi,eax
  4225d3:	aaa    
  4225d4:	push   edx
  4225d5:	mov    dl,0xc2
  4225d7:	lea    ebp,[esi]
  4225d9:	dec    ebp
  4225da:	sbb    BYTE PTR [eax],cl
  4225dc:	mov    edi,0x3fe79ede
  4225e1:	mov    ch,0x49
  4225e3:	pusha  
  4225e4:	shl    ecx,1
  4225e6:	(bad)  
  4225e7:	(bad)  
  4225e8:	or     al,BYTE PTR [ebp+eax*2-0x3477427a]
  4225ef:	or     eax,0xbc6de6ec
  4225f4:	outs   dx,BYTE PTR ds:[esi]
  4225f5:	push   edx
  4225f6:	jnp    0x422672
  4225f8:	sub    ebx,ecx
  4225fa:	aad    0x12
  4225fc:	sbb    al,0xea
  4225fe:	fisub  DWORD PTR [esi-0x47]
  422601:	retf   
  422602:	ret    
  422603:	neg    BYTE PTR [edi]
  422605:	scas   eax,DWORD PTR es:[edi]
  422606:	je     0x422613
  422608:	push   esi
  422609:	mov    dh,0x1d
  42260b:	or     ch,BYTE PTR [esi+0x67]
  42260e:	pop    eax
  42260f:	mov    BYTE PTR [edx-0x31],dl
  422612:	mov    ds:0x2f5eb3c9,eax
  422617:	and    eax,0x56317d8c
  42261c:	dec    edx
  42261d:	mov    bh,0xb4
  42261f:	xchg   DWORD PTR [eax-0x62238aeb],edi
  422625:	jp     0x42264e
  422627:	push   esp
  422628:	and    BYTE PTR [ecx+ecx*2-0x6b],dh
  42262c:	call   0xf35e:0xe2bbb192
  422633:	inc    ecx
  422634:	mov    edx,0xfb900431
  422639:	xor    cl,BYTE PTR [ebp-0x28]
  42263c:	jo     0x422622
  42263e:	dec    esi
  42263f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422640:	ja     0x4226b7
  422642:	fidivr DWORD PTR [ebx-0x7d7d28be]
  422648:	sbb    al,0x5f
  42264a:	xchg   BYTE PTR [ebx-0x9fdbd87],bh
  422650:	ins    BYTE PTR es:[edi],dx
  422651:	push   ds
  422652:	sbb    bl,BYTE PTR [esi-0x22]
  422655:	mov    al,ds:0x4f7c0e0b
  42265a:	scas   al,BYTE PTR es:[edi]
  42265b:	mov    dh,0xb8
  42265d:	test   ebx,eax
  42265f:	push   ds
  422660:	sub    BYTE PTR [ebx+edx*4+0x11cd2ae5],dl
  422667:	fadd   DWORD PTR [esi-0x65a6f535]
  42266d:	and    BYTE PTR [ebx],0x47
  422670:	push   ds
  422671:	mov    al,0xda
  422673:	fcmovnu st,st(5)
  422675:	xor    esp,ecx
  422677:	push   ds
  422678:	fcomp  DWORD PTR [edx+0x379fead7]
  42267e:	pop    ebp
  42267f:	and    esp,esp
  422681:	mov    BYTE PTR [edi+0x1ed8ea9],dl
  422687:	hlt    
  422688:	sub    al,0x25
  42268a:	mov    edi,0x1ad4e72e
  42268f:	test   BYTE PTR [ebx-0x55],ah
  422692:	push   es
  422693:	mov    ds:0x7f5fa7c4,al
  422698:	sub    ebp,eax
  42269a:	xor    ebp,DWORD PTR [ebp+0x1dc2a6ad]
  4226a0:	sbb    BYTE PTR [ecx-0x5f],dh
  4226a3:	call   0x455f672f
  4226a8:	inc    eax
  4226a9:	mov    BYTE PTR [eax],bh
  4226ab:	inc    edx
  4226ac:	inc    ebx
  4226ad:	aam    0x92
  4226af:	mov    al,BYTE PTR [esi-0xa6ba36a]
  4226b5:	fisttp DWORD PTR [ebx+0x57]
  4226b8:	dec    ecx
  4226b9:	dec    ebx
  4226ba:	mov    ah,BYTE PTR [edi]
  4226bc:	inc    eax
  4226bd:	add    DWORD PTR [ebx],eax
  4226bf:	shl    BYTE PTR [edi+0x3b],0x96
  4226c3:	mov    ebp,DWORD PTR [edi-0x65ead02c]
  4226c9:	jle    0x42272a
  4226cb:	fs clc 
  4226cd:	mov    al,ds:0x11664aa3
  4226d2:	xchg   esi,eax
  4226d3:	aaa    
  4226d4:	and    al,0x36
  4226d6:	and    al,0xfc
  4226d8:	and    BYTE PTR [ebx+0x7ae87156],bh
  4226de:	ins    BYTE PTR es:[edi],dx
  4226df:	and    BYTE PTR [ebp-0x26222bb2],ch
  4226e5:	data16 (bad) 
  4226e8:	in     eax,0x2e
  4226ea:	push   edi
  4226eb:	jbe    0x4226b2
  4226ed:	dec    edx
  4226ee:	push   ds
  4226ef:	xlat   BYTE PTR ds:[ebx]
  4226f0:	out    0x60,eax
  4226f2:	sbb    eax,0xbebe58c
  4226f7:	outs   dx,DWORD PTR ds:[si]
  4226f9:	mov    dh,0x87
  4226fb:	push   edx
  4226fc:	test   BYTE PTR [esi-0x33],0x6a
  422700:	mov    edi,0xaaad95b6
  422705:	xor    dh,al
  422707:	loop   0x4226c1
  422709:	adc    BYTE PTR [esp+ecx*8-0x23d976f1],al
  422710:	mov    bh,0x31
  422712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422714:	lock (bad) 
  422716:	imul   BYTE PTR [esp+ecx*4]
  422719:	mov    edi,0x6c38fb94
  42271e:	push   eax
  42271f:	sbb    edi,eax
  422721:	mov    edx,0x5f24a409
  422726:	into   
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	add    BYTE PTR [eax-0x354de1c4],0xf
  42272f:	cld    
  422730:	jmp    0x422720
  422732:	mov    ch,0x2f
  422734:	fbstp  TBYTE PTR [edx+0x10abf15b]
  42273a:	pusha  
  42273b:	test   bh,ah
  42273d:	mov    dh,0xf4
  42273f:	mov    al,ds:0xdcade191
  422744:	aad    0x9e
  422746:	pop    ss
  422747:	cmc    
  422748:	cli    
  422749:	pop    ecx
  42274a:	xchg   ebx,eax
  42274b:	xchg   dl,bl
  42274d:	pop    ecx
  42274e:	xor    BYTE PTR [edi-0x46],dh
  422751:	pop    ecx
  422752:	fisub  WORD PTR [ebx+esi*2-0x71]
  422756:	and    eax,0x3d404a61
  42275b:	out    0x61,eax
  42275d:	and    BYTE PTR [ebp*4+0x57664d76],0x6b
  422765:	dec    ebp
  422766:	mov    esi,0x5efa6bbe
  42276b:	nop
  42276c:	sbb    al,0x99
  42276e:	xor    BYTE PTR [ebp-0x4f417148],bh
  422774:	sub    ch,BYTE PTR [edi-0x2]
  422777:	pop    ss
  422778:	add    al,0xb
  42277a:	adc    eax,0xe88442e9
  42277f:	out    0x78,eax
  422781:	ret    
  422782:	lea    edi,[edx+0x16]
  422785:	dec    edx
  422786:	test   eax,0x4b678bbc
  42278b:	xor    DWORD PTR [esi+ebx*4+0x1f83d0b],esp
  422792:	mov    ecx,0xabe7f5ee
  422797:	in     eax,dx
  422798:	pop    edx
  422799:	push   ecx
  42279a:	and    BYTE PTR ds:0x247f2723,ah
  4227a0:	sar    BYTE PTR [ebp+0x6d],1
  4227a3:	lock add esi,DWORD PTR [ebp+0x30d8e1a4]
  4227aa:	push   ds
  4227ab:	aam    0x84
  4227ad:	out    dx,al
  4227ae:	mov    ah,0x6c
  4227b0:	xor    al,0x50
  4227b2:	xor    dh,BYTE PTR [ebx+0x3d]
  4227b5:	inc    ecx
  4227b6:	mov    ch,0xe
  4227b8:	pinsrw mm2,WORD PTR [eax-0xc],0xdd
  4227bd:	dec    ebx
  4227be:	out    0xb1,eax
  4227c0:	inc    ecx
  4227c1:	scas   eax,DWORD PTR es:[edi]
  4227c2:	pop    ebp
  4227c3:	push   DWORD PTR [edi-0x66]
  4227c6:	jb     0x422818
  4227c8:	mov    ecx,0x7dea50b7
  4227cd:	rol    DWORD PTR [edx+0x41],1
  4227d0:	call   FWORD PTR [esp+ebx*2]
  4227d3:	mov    gs,edx
  4227d5:	xchg   edx,eax
  4227d6:	lods   eax,DWORD PTR ds:[esi]
  4227d7:	mul    BYTE PTR [edi+0x78288837]
  4227dd:	adc    al,0x71
  4227df:	test   al,0x9e
  4227e1:	jmp    FWORD PTR [ebx-0xed25dac]
  4227e7:	ins    DWORD PTR es:[edi],dx
  4227e8:	sbb    ah,BYTE PTR [ecx]
  4227ea:	push   0xffffffa6
  4227ec:	out    0x1b,al
  4227ee:	les    esi,FWORD PTR [ebx-0x188e1063]
  4227f4:	or     BYTE PTR [edx-0x55],ch
  4227f7:	cmp    eax,0xcf7bdf4f
  4227fc:	sbb    BYTE PTR [eax+0x6a6843e3],0x97
  422803:	addr16 enter 0xba88,0x54
  422808:	push   esp
  422809:	sar    bl,1
  42280b:	xchg   al,ch
  42280d:	lea    ebp,ds:0xc51ea124
  422813:	push   ebx
  422814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422815:	jmp    0x669f:0xa2f324eb
  42281c:	xor    BYTE PTR cs:[esi+esi*2],dh
  422820:	lea    edi,[ebp-0x7288c120]
  422826:	jmp    0x4227f5
  422828:	mov    al,0xb3
  42282a:	xchg   edx,eax
  42282b:	lea    edi,[edx-0x6]
  42282e:	mov    WORD PTR [eax],ds
  422830:	fs push ss
  422832:	dec    edi
  422833:	push   eax
  422834:	mov    dl,BYTE PTR [ebx+0x5e]
  422837:	data16 sahf 
  422839:	(bad)  
  42283a:	fdivp  st(5),st
  42283c:	pushf  
  42283d:	fwait
  42283e:	or     DWORD PTR [eax],0xffffff87
  422841:	adc    eax,esi
  422843:	mul    DWORD PTR [ecx]
  422845:	mov    ah,0x80
  422847:	fisttp WORD PTR [ecx]
  422849:	fsub   st,st(2)
  42284b:	push   0xb202bafa
  422850:	mov    bh,0xeb
  422852:	jb     0x422800
  422854:	dec    edi
  422855:	and    edx,DWORD PTR [eax+0x6e]
  422858:	mov    eax,0x50756813
  42285d:	out    0x19,al
  42285f:	mov    eax,ds:0x590c4487
  422864:	pop    edi
  422865:	xor    bl,bh
  422867:	in     eax,dx
  422868:	mov    eax,ds:0x6126ede6
  42286d:	mov    WORD PTR [edx+0x26],cs
  422870:	pop    esi
  422871:	pushf  
  422872:	jl     0x4228b1
  422874:	jp     0x42283b
  422876:	rol    DWORD PTR [ebp+0x5c],0xa
  42287a:	daa    
  42287b:	int3   
  42287c:	sbb    DWORD PTR [esi],esp
  42287e:	mov    ch,0xf4
  422880:	adc    ecx,DWORD PTR [eax+0x3c076339]
  422886:	test   edi,edx
  422888:	das    
  422889:	cmp    eax,DWORD PTR [ebp+0x29c14356]
  42288f:	push   0xfffffff1
  422891:	out    0x60,eax
  422893:	out    0x24,al
  422895:	pushf  
  422896:	lea    edx,[edi-0xf]
  422899:	iret   
  42289a:	daa    
  42289b:	sbb    BYTE PTR [eax-0x73cece49],al
  4228a1:	retf   
  4228a2:	or     edx,DWORD PTR [eax]
  4228a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228a5:	leave  
  4228a6:	sub    edx,DWORD PTR [eax]
  4228a8:	scas   eax,DWORD PTR es:[edi]
  4228a9:	adc    esp,DWORD PTR [edx-0x35]
  4228ac:	push   cs
  4228ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ae:	inc    esi
  4228af:	jne    0x42292d
  4228b1:	test   al,0xad
  4228b3:	sbb    cl,dl
  4228b5:	mov    ds:0x5add7a93,al
  4228ba:	xchg   ebp,eax
  4228bb:	jmp    0x422902
  4228bd:	xor    eax,DWORD PTR [eax+0x10284c19]
  4228c3:	xchg   ebx,eax
  4228c4:	pop    ecx
  4228c5:	(bad)  
  4228c7:	pop    esp
  4228c8:	add    eax,0x95212e7e
  4228cd:	int    0xb7
  4228cf:	cli    
  4228d0:	jl     0x422877
  4228d2:	inc    ebx
  4228d3:	push   bx
  4228d5:	sti    
  4228d6:	jne    0x42291b
  4228d8:	call   DWORD PTR [ecx+0x48]
  4228db:	arpl   WORD PTR [eax-0x1f2625e2],bx
  4228e1:	jp     0x4228dd
  4228e3:	xchg   edx,eax
  4228e4:	cmp    al,0x3f
  4228e6:	adc    DWORD PTR [esi-0x2e33b851],eax
  4228ec:	outs   dx,BYTE PTR gs:[esi]
  4228ee:	scas   eax,DWORD PTR es:[edi]
  4228ef:	cwde   
  4228f0:	(bad)  
  4228f1:	xor    eax,0x238eb8d0
  4228f6:	push   esi
  4228f7:	mov    al,ds:0x2b743ac2
  4228fc:	aad    0x14
  4228fe:	xchg   edi,eax
  4228ff:	imul   BYTE PTR [esi-0xe5a8fae]
  422905:	dec    DWORD PTR [edi+0x47f47cfe]
  42290b:	pop    ss
  42290c:	xor    al,cl
  42290e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42290f:	xor    BYTE PTR [edx+0x28],0x60
  422913:	pop    edi
  422914:	ins    DWORD PTR es:[edi],dx
  422915:	cmp    DWORD PTR [edi+eax*8-0x1a2f4867],ecx
  42291c:	or     BYTE PTR [ebx+0x2e4c6654],bh
  422922:	pop    eax
  422923:	fist   DWORD PTR [eax-0x1b]
  422926:	leave  
  422927:	add    al,0x25
  422929:	jmp    0x5d3883fe
  42292e:	test   BYTE PTR [esi],0xf5
  422931:	mov    ch,0xa6
  422933:	ins    DWORD PTR es:[edi],dx
  422934:	pop    edi
  422935:	ss jb  0x422915
  422938:	push   edi
  422939:	aad    0x7d
  42293b:	rcr    DWORD PTR [edx],cl
  42293d:	test   al,0x8d
  42293f:	add    DWORD PTR [esi+0x46],0xffffffe6
  422943:	jmp    0x7d46:0x1982ccdd
  42294a:	out    dx,al
  42294b:	sub    al,0xca
  42294d:	adc    BYTE PTR [edi],0xfd
  422950:	mov    esp,0xce3d481e
  422955:	inc    ebx
  422956:	sbb    eax,0x3311bd65
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
