
d1900bd9ce438d399851ae3871638a43a64509750c752b3b06978549323dea9a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42b010,0x42a004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42b000,0x42a014
  40101e:	push   0x42d423
  401023:	dec    DWORD PTR ds:0x429018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42801c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42dca3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42a004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42c00c,0x42c014
  401060:	call   DWORD PTR ds:0x42dc6b
  401066:	mov    DWORD PTR ds:0x42900c,0x7907
  401070:	jmp    0x402bbe
  401075:	sub    DWORD PTR ds:0x429010,0x42901c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42dcaf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x428004,0x42b000
  401092:	push   0x42d433
  401097:	sub    DWORD PTR ds:0x428000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42a000,0x42c010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42a000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42c014,0x429004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42c008
  4010d3:	call   DWORD PTR ds:0x42dc6b
  4010d9:	jmp    0x402bbd
  4010de:	xor    DWORD PTR ds:0x429008,0x428000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42dc7b
  4010ef:	add    DWORD PTR ds:0x428004,0x5c52
  4010f9:	push   0x42d443
  4010fe:	adc    DWORD PTR ds:0x42b014,0x42a014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x428020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42a018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x429010,0x428004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42b000,0x428008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x428000,0x4b22
  40114a:	call   DWORD PTR ds:0x42dc6b
  401150:	mov    DWORD PTR ds:0x428004,0x6e7d
  40115a:	jmp    0x402bbc
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42c014,0x5298
  40116b:	push   0x42d467
  401170:	sbb    DWORD PTR ds:0x42b010,0x42b008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42c000
  401182:	test   eax,eax
  401184:	jne    0x401dcc
  40118a:	push   0x7
  40118c:	push   0x42d47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x428014,0x42800c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42b000,0x2037
  4011a9:	jne    0x401dcc
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42c010,0x428014
  4011bb:	push   0x42d48b
  4011c0:	and    DWORD PTR ds:0x42c010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x428014,0x43a5
  4011d8:	jne    0x401dcc
  4011de:	push   0x42d49b
  4011e3:	adc    DWORD PTR ds:0x428014,0x42a00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42dca3
  4011f5:	xor    DWORD PTR ds:0x428008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42a004,0x1e9f
  40120b:	jne    0x401dcc
  401211:	sbb    DWORD PTR ds:0x42a008,0x42901c
  40121b:	push   0x42d4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42a000,0x42a018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x429008,0x42b00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42901c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42c014,0x5190
  40124e:	jne    0x401dcc
  401254:	sub    DWORD PTR ds:0x42a000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42c018,0x42b000
  40126a:	push   0x42d4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x429014,0x465b
  40127d:	jne    0x401dcc
  401283:	or     DWORD PTR ds:0x42c014,0x42800c
  40128d:	push   0x7
  40128f:	push   0x42d4e3
  401294:	xor    DWORD PTR ds:0x42b014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42901c,0x4b6
  4012ac:	jne    0x401dcc
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x428028,0x428010
  4012be:	push   0x42d4f3
  4012c3:	sbb    DWORD PTR ds:0x429010,0x428008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42900c,0x7915
  4012db:	jne    0x401dcc
  4012e1:	or     DWORD PTR ds:0x42a000,0xa15
  4012eb:	push   0x42d503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42801c,0x42b008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42901c,0x42c010
  401306:	call   DWORD PTR ds:0x42dca3
  40130c:	test   eax,eax
  40130e:	jne    0x401dcc
  401314:	sub    DWORD PTR ds:0x42c014,0x429000
  40131e:	push   0x42d513
  401323:	adc    DWORD PTR ds:0x42a018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42b008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42901c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x428014,0x42a00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42c00c,0x550a
  40135b:	jne    0x401dcc
  401361:	push   0xc
  401363:	push   0x42d537
  401368:	adc    DWORD PTR ds:0x42b00c,0x428018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x428024,0x758e
  401380:	jne    0x401dcc
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x428010,0x1615
  401392:	push   0x42d54b
  401397:	sub    DWORD PTR ds:0x428008,0x42a01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42b01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401dcc
  4013b5:	or     DWORD PTR ds:0x428000,0x428008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x429000,0x50c8
  4013cb:	push   0x42d55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x429018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x429010,0x4d09
  4013e8:	jne    0x401dcc
  4013ee:	push   0x42d56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42b00c,0x428018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42dca3
  401405:	sbb    DWORD PTR ds:0x42c008,0x42c004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x429010,0xbaa
  40141b:	jne    0x401dcc
  401421:	push   0x42d57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42a000,0x428014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42c008,0x1c53
  401440:	jne    0x401dcc
  401446:	adc    DWORD PTR ds:0x42900c,0x428024
  401450:	push   0xc
  401452:	push   0x42d59f
  401457:	sbb    DWORD PTR ds:0x428028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42c004,0x2bd4
  40146f:	jne    0x401dcc
  401475:	mov    DWORD PTR ds:0x42c014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42a01c,0x629c
  40148b:	push   0x42d5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x428020,0x42b014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42a008,0x386
  4014a8:	jne    0x401dcc
  4014ae:	push   0x8
  4014b0:	push   0x42d5c3
  4014b5:	sub    DWORD PTR ds:0x428024,0x429008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42a004,0x42b018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42800c,0x6fc8
  4014d7:	jne    0x401dcc
  4014dd:	xor    DWORD PTR ds:0x42c010,0x42801c
  4014e7:	push   0x42d5d3
  4014ec:	and    DWORD PTR ds:0x42c014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42a000,0x3361
  401502:	call   DWORD PTR ds:0x42dca3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42a008,0x5d56
  401514:	jne    0x401dcc
  40151a:	xor    DWORD PTR ds:0x429000,0x4d69
  401524:	push   0x42d5e3
  401529:	and    DWORD PTR ds:0x428024,0x429014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42b004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x428024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x428028,0x42a00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42a00c,0x17fe
  401561:	jne    0x401dcc
  401567:	mov    DWORD PTR ds:0x42b014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x428024,0x5a57
  40157d:	push   0x42d607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42a00c,0xc7e
  401590:	jne    0x401dcc
  401596:	sbb    DWORD PTR ds:0x429000,0x42c01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42a00c,0x428010
  4015ac:	push   0x42d61b
  4015b1:	mov    DWORD PTR ds:0x42b004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42b00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401dcc
  4015cf:	or     DWORD PTR ds:0x428008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x428020,0x42c018
  4015e5:	push   0x42d62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x428010,0x43d8
  4015f8:	jne    0x401dcc
  4015fe:	push   0x42d63b
  401603:	sub    DWORD PTR ds:0x429008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42a004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42a018,0x428000
  401623:	call   DWORD PTR ds:0x42dca3
  401629:	add    DWORD PTR ds:0x42a014,0x42b014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42b010,0x9db
  40163f:	jne    0x401dcc
  401645:	add    DWORD PTR ds:0x42a01c,0x42b010
  40164f:	push   0x42d64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401dcc
  401660:	sub    DWORD PTR ds:0x429010,0x42a00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x429000,0x46f8
  401676:	push   0x42d66f
  40167b:	sub    DWORD PTR ds:0x428028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42a000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x429010,0x1824
  401699:	jne    0x401dcc
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42c004
  4016a7:	push   0x42d683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x428020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401dcc
  4016c0:	sub    DWORD PTR ds:0x428014,0x42b01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x428000
  4016d2:	push   0x42d693
  4016d7:	or     DWORD PTR ds:0x42b01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401dcc
  4016eb:	or     DWORD PTR ds:0x42a010,0x6614
  4016f5:	push   0x42d6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42a01c,0x429008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42dca3
  40170c:	sub    DWORD PTR ds:0x428010,0x429018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42a004,0x423f
  401722:	jne    0x401dcc
  401728:	push   0x42d6b3
  40172d:	and    DWORD PTR ds:0x42c014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x429004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401dcc
  40174d:	push   0xc
  40174f:	push   0x42d6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x429014,0x792e
  401760:	test   eax,eax
  401762:	jne    0x401dcc
  401768:	add    DWORD PTR ds:0x42c004,0x428000
  401772:	push   0x7
  401774:	sub    DWORD PTR ds:0x42b010,0x560a
  40177e:	push   0x42d6eb
  401783:	call   esi
  401785:	test   eax,eax
  401787:	mov    DWORD PTR ds:0x42a008,0x3099
  401791:	jne    0x401dcc
  401797:	xor    DWORD PTR ds:0x42901c,0x42b010
  4017a1:	push   0x8
  4017a3:	push   0x42d6fb
  4017a8:	sub    DWORD PTR ds:0x42801c,0x42b000
  4017b2:	call   esi
  4017b4:	test   eax,eax
  4017b6:	mov    DWORD PTR ds:0x42b010,0x6a70
  4017c0:	jne    0x401dcc
  4017c6:	push   0x42d70b
  4017cb:	push   edi
  4017cc:	push   edi
  4017cd:	mov    DWORD PTR ds:0x42c01c,0x630d
  4017d7:	call   DWORD PTR ds:0x42dca3
  4017dd:	sbb    DWORD PTR ds:0x428024,0x42a018
  4017e7:	test   eax,eax
  4017e9:	mov    DWORD PTR ds:0x42801c,0x686
  4017f3:	jne    0x401dcc
  4017f9:	push   0x42d71b
  4017fe:	and    DWORD PTR ds:0x42b008,0x4bbd
  401808:	push   edi
  401809:	or     DWORD PTR ds:0x428024,0x42c000
  401813:	push   edi
  401814:	call   ebx
  401816:	and    DWORD PTR ds:0x42a018,0x1774
  401820:	test   eax,eax
  401822:	jne    0x401dcc
  401828:	push   0xc
  40182a:	or     DWORD PTR ds:0x42a000,0x3dd
  401834:	push   0x42d73f
  401839:	call   esi
  40183b:	test   eax,eax
  40183d:	jne    0x401dcc
  401843:	push   0x7
  401845:	sub    DWORD PTR ds:0x428010,0x42b004
  40184f:	push   0x42d753
  401854:	or     DWORD PTR ds:0x42c014,0x42b010
  40185e:	call   esi
  401860:	or     DWORD PTR ds:0x42a010,0x42a018
  40186a:	test   eax,eax
  40186c:	jne    0x401dcc
  401872:	push   0x8
  401874:	push   0x42d763
  401879:	call   esi
  40187b:	test   eax,eax
  40187d:	jne    0x401dcc
  401883:	and    DWORD PTR ds:0x42b004,0x42800c
  40188d:	push   0x42d773
  401892:	push   edi
  401893:	push   edi
  401894:	call   DWORD PTR ds:0x42dca3
  40189a:	mov    DWORD PTR ds:0x429004,0x7c46
  4018a4:	test   eax,eax
  4018a6:	jne    0x401dcc
  4018ac:	push   0x42d783
  4018b1:	sbb    DWORD PTR ds:0x42a010,0x429010
  4018bb:	push   edi
  4018bc:	push   edi
  4018bd:	or     DWORD PTR ds:0x42c014,0x42800c
  4018c7:	call   ebx
  4018c9:	test   eax,eax
  4018cb:	jne    0x401dcc
  4018d1:	adc    DWORD PTR ds:0x42b000,0x428028
  4018db:	push   0xc
  4018dd:	sub    DWORD PTR ds:0x429014,0xc65
  4018e7:	push   0x42d7a7
  4018ec:	call   esi
  4018ee:	test   eax,eax
  4018f0:	mov    DWORD PTR ds:0x42b014,0x6571
  4018fa:	jne    0x401dcc
  401900:	push   0x7
  401902:	adc    DWORD PTR ds:0x429014,0x42a00c
  40190c:	push   0x42d7bb
  401911:	mov    DWORD PTR ds:0x42c004,0x12ce
  40191b:	call   esi
  40191d:	dec    DWORD PTR ds:0x429010
  401923:	test   eax,eax
  401925:	mov    DWORD PTR ds:0x42a004,0x22d3
  40192f:	jne    0x401dcc
  401935:	xor    DWORD PTR ds:0x42c018,0x7580
  40193f:	push   0x8
  401941:	mov    DWORD PTR ds:0x42c014,0x4bef
  40194b:	push   0x42d7cb
  401950:	add    DWORD PTR ds:0x42a000,0x4980
  40195a:	call   esi
  40195c:	test   eax,eax
  40195e:	jne    0x401dcc
  401964:	and    DWORD PTR ds:0x42a000,0x472c
  40196e:	push   0x42d7db
  401973:	push   edi
  401974:	push   edi
  401975:	xor    DWORD PTR ds:0x42b014,0x42a018
  40197f:	call   DWORD PTR ds:0x42dca3
  401985:	or     DWORD PTR ds:0x42800c,0x428020
  40198f:	test   eax,eax
  401991:	mov    DWORD PTR ds:0x42b00c,0x6dbd
  40199b:	jne    0x401dcc
  4019a1:	not    DWORD PTR ds:0x42a00c
  4019a7:	push   0x42d7eb
  4019ac:	or     DWORD PTR ds:0x42c000,0x4414
  4019b6:	push   edi
  4019b7:	sub    DWORD PTR ds:0x428020,0x7e0
  4019c1:	push   edi
  4019c2:	xor    DWORD PTR ds:0x42c010,0x4db0
  4019cc:	call   ebx
  4019ce:	test   eax,eax
  4019d0:	jne    0x401dcc
  4019d6:	sub    DWORD PTR ds:0x429014,0x10f4
  4019e0:	push   0xc
  4019e2:	sub    DWORD PTR ds:0x42a004,0x42c014
  4019ec:	push   0x42d80f
  4019f1:	call   esi
  4019f3:	test   eax,eax
  4019f5:	jne    0x401dcc
  4019fb:	push   0x7
  4019fd:	xor    DWORD PTR ds:0x42a000,0x360b
  401a07:	push   0x42d823
  401a0c:	call   esi
  401a0e:	test   eax,eax
  401a10:	jne    0x401dcc
  401a16:	push   0x8
  401a18:	or     DWORD PTR ds:0x42b01c,0x6aa9
  401a22:	push   0x42d833
  401a27:	add    DWORD PTR ds:0x42c014,0x21f
  401a31:	call   esi
  401a33:	or     DWORD PTR ds:0x42c004,0x505e
  401a3d:	test   eax,eax
  401a3f:	mov    DWORD PTR ds:0x42b00c,0x1afa
  401a49:	jne    0x401dcc
  401a4f:	push   0x42d843
  401a54:	or     DWORD PTR ds:0x42a01c,0x4806
  401a5e:	push   edi
  401a5f:	push   edi
  401a60:	call   DWORD PTR ds:0x42dca3
  401a66:	or     DWORD PTR ds:0x42b018,0x6442
  401a70:	test   eax,eax
  401a72:	jne    0x401dcc
  401a78:	push   0x42d853
  401a7d:	push   edi
  401a7e:	not    DWORD PTR ds:0x42c018
  401a84:	push   edi
  401a85:	adc    DWORD PTR ds:0x428028,0x26c2
  401a8f:	call   ebx
  401a91:	sbb    DWORD PTR ds:0x429000,0x42c010
  401a9b:	test   eax,eax
  401a9d:	mov    DWORD PTR ds:0x42a000,0x1a50
  401aa7:	jne    0x401dcc
  401aad:	adc    DWORD PTR ds:0x42b00c,0x5a53
  401ab7:	push   0xc
  401ab9:	push   0x42d877
  401abe:	or     DWORD PTR ds:0x42800c,0x964
  401ac8:	call   esi
  401aca:	sbb    DWORD PTR ds:0x428014,0x5b18
  401ad4:	test   eax,eax
  401ad6:	jne    0x401dcc
  401adc:	push   0x7
  401ade:	add    DWORD PTR ds:0x42c01c,0x42c000
  401ae8:	push   0x42d88b
  401aed:	and    DWORD PTR ds:0x42800c,0x4f3f
  401af7:	call   esi
  401af9:	xor    DWORD PTR ds:0x429018,0x42901c
  401b03:	test   eax,eax
  401b05:	jne    0x401dcc
  401b0b:	sbb    DWORD PTR ds:0x428018,0xc00
  401b15:	push   0x8
  401b17:	add    DWORD PTR ds:0x42b004,0x3ea1
  401b21:	push   0x42d89b
  401b26:	call   esi
  401b28:	sub    DWORD PTR ds:0x42b000,0x352b
  401b32:	test   eax,eax
  401b34:	mov    DWORD PTR ds:0x42801c,0x47d2
  401b3e:	jne    0x401dcc
  401b44:	push   0x42d8ab
  401b49:	or     DWORD PTR ds:0x429004,0x22e5
  401b53:	push   edi
  401b54:	push   edi
  401b55:	add    DWORD PTR ds:0x42b008,0x2ef5
  401b5f:	call   DWORD PTR ds:0x42dca3
  401b65:	test   eax,eax
  401b67:	mov    DWORD PTR ds:0x428000,0xe12
  401b71:	jne    0x401dcc
  401b77:	push   0x42d8bb
  401b7c:	inc    DWORD PTR ds:0x428008
  401b82:	push   edi
  401b83:	push   edi
  401b84:	and    DWORD PTR ds:0x428020,0x42b008
  401b8e:	call   ebx
  401b90:	mov    DWORD PTR ds:0x42c01c,0x65ff
  401b9a:	test   eax,eax
  401b9c:	jne    0x401dcc
  401ba2:	add    DWORD PTR ds:0x42c00c,0x8c2
  401bac:	push   0xc
  401bae:	and    DWORD PTR ds:0x429010,0x428020
  401bb8:	push   0x42d8df
  401bbd:	call   esi
  401bbf:	test   eax,eax
  401bc1:	jne    0x401dcc
  401bc7:	push   0x7
  401bc9:	not    DWORD PTR ds:0x429004
  401bcf:	push   0x42d8f3
  401bd4:	call   esi
  401bd6:	test   eax,eax
  401bd8:	jne    0x401dcc
  401bde:	push   0x8
  401be0:	push   0x42d903
  401be5:	add    DWORD PTR ds:0x428028,0x63a0
  401bef:	call   esi
  401bf1:	test   eax,eax
  401bf3:	mov    DWORD PTR ds:0x42b01c,0x185a
  401bfd:	jne    0x401dcc
  401c03:	xor    DWORD PTR ds:0x42c00c,0x42b018
  401c0d:	push   0x42d913
  401c12:	push   edi
  401c13:	adc    DWORD PTR ds:0x429008,0x42c004
  401c1d:	push   edi
  401c1e:	sbb    DWORD PTR ds:0x42c010,0x4b82
  401c28:	call   DWORD PTR ds:0x42dca3
  401c2e:	test   eax,eax
  401c30:	mov    DWORD PTR ds:0x42b00c,0x2dd4
  401c3a:	jne    0x401dcc
  401c40:	adc    DWORD PTR ds:0x42c004,0x429004
  401c4a:	push   0x42d923
  401c4f:	push   edi
  401c50:	sbb    DWORD PTR ds:0x42b008,0x42a004
  401c5a:	push   edi
  401c5b:	sub    DWORD PTR ds:0x429010,0x42a000
  401c65:	call   ebx
  401c67:	test   eax,eax
  401c69:	jne    0x401dcc
  401c6f:	inc    DWORD PTR ds:0x42a014
  401c75:	push   0xc
  401c77:	mov    DWORD PTR ds:0x42c01c,0xa60
  401c81:	push   0x42d947
  401c86:	sub    DWORD PTR ds:0x42b00c,0x3e85
  401c90:	call   esi
  401c92:	test   eax,eax
  401c94:	mov    DWORD PTR ds:0x42a010,0x6d5c
  401c9e:	jne    0x401dcc
  401ca4:	push   0x7
  401ca6:	and    DWORD PTR ds:0x428000,0x42a000
  401cb0:	push   0x42d95b
  401cb5:	add    DWORD PTR ds:0x42a008,0x429018
  401cbf:	call   esi
  401cc1:	test   eax,eax
  401cc3:	mov    DWORD PTR ds:0x42b014,0x2a16
  401ccd:	jne    0x401dcc
  401cd3:	add    DWORD PTR ds:0x42c000,0x428000
  401cdd:	push   0x8
  401cdf:	push   0x42d96b
  401ce4:	call   esi
  401ce6:	test   eax,eax
  401ce8:	jne    0x401dcc
  401cee:	add    DWORD PTR ds:0x42a01c,0x42901c
  401cf8:	push   0x42d97b
  401cfd:	sbb    DWORD PTR ds:0x428018,0x3807
  401d07:	push   edi
  401d08:	adc    DWORD PTR ds:0x42b014,0x42a01c
  401d12:	push   edi
  401d13:	call   DWORD PTR ds:0x42dca3
  401d19:	xor    DWORD PTR ds:0x42b000,0x727e
  401d23:	test   eax,eax
  401d25:	mov    DWORD PTR ds:0x42800c,0x2a1e
  401d2f:	jne    0x401dcc
  401d35:	push   0x42d98b
  401d3a:	and    DWORD PTR ds:0x429008,0x1639
  401d44:	push   edi
  401d45:	adc    DWORD PTR ds:0x428008,0x42c000
  401d4f:	push   edi
  401d50:	sbb    DWORD PTR ds:0x42b00c,0x1404
  401d5a:	call   ebx
  401d5c:	sbb    DWORD PTR ds:0x429000,0x162a
  401d66:	test   eax,eax
  401d68:	jne    0x401dcc
  401d6e:	add    DWORD PTR ds:0x428010,0x42ec
  401d78:	push   0xc
  401d7a:	push   0x42d9af
  401d7f:	call   esi
  401d81:	or     DWORD PTR ds:0x429014,0x42b008
  401d8b:	test   eax,eax
  401d8d:	jne    0x401dcc
  401d93:	and    DWORD PTR ds:0x42b01c,0x53f3
  401d9d:	push   0x7
  401d9f:	sub    DWORD PTR ds:0x42b000,0x428010
  401da9:	push   0x42d9c3
  401dae:	call   esi
  401db0:	xor    DWORD PTR ds:0x42c000,0x42800c
  401dba:	test   eax,eax
  401dbc:	mov    DWORD PTR ds:0x42a010,0x732d
  401dc6:	je     0x401de7
  401dcc:	sbb    DWORD PTR ds:0x428008,0x54d2
  401dd6:	xor    eax,eax
  401dd8:	mov    DWORD PTR ds:0x428010,0xb2
  401de2:	jmp    0x402bbc
  401de7:	mov    DWORD PTR [ebp-0x10],0x0
  401dee:	dec    edi
  401def:	mov    eax,DWORD PTR [ebp-0x34]
  401df2:	mov    DWORD PTR ds:0x42a004,0x3f1
  401dfc:	mov    DWORD PTR [ebp-0x34],eax
  401dff:	mov    ecx,0xf89c85b9
  401e04:	mov    DWORD PTR ds:0x42a008,0x14
  401e0e:	cmp    DWORD PTR ds:0x42a008,0x0
  401e15:	je     0x401e57
  401e1b:	cmp    DWORD PTR ds:0x42a008,0x1c
  401e22:	jne    0x401e3d
  401e28:	push   0x42a01c
  401e2d:	push   0x428028
  401e32:	push   0x42a014
  401e37:	call   DWORD PTR ds:0x42dc73
  401e3d:	xor    edi,edi
  401e3f:	xor    edi,DWORD PTR ds:0x42a008
  401e45:	dec    edi
  401e46:	mov    DWORD PTR ds:0x42a008,edi
  401e4c:	jmp    0x401e0e
  401e51:	dec    DWORD PTR ds:0x428020
  401e57:	mov    DWORD PTR [ebp-0x8],ecx
  401e5a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401e61:	not    edi
  401e63:	lea    eax,[ebp-0x3c]
  401e66:	sbb    DWORD PTR ds:0x42a000,0x42a008
  401e70:	mov    DWORD PTR [ebp-0x2c],eax
  401e73:	mov    edx,DWORD PTR ds:0x42b000
  401e79:	add    edx,DWORD PTR ds:0x42b00c
  401e7f:	mov    DWORD PTR ds:0x42b000,edx
  401e85:	lea    eax,[ebp-0x38]
  401e88:	inc    edi
  401e89:	mov    DWORD PTR [ebp-0x18],eax
  401e8c:	adc    esi,esi
  401e8e:	mov    eax,ds:0x42d313
  401e93:	and    DWORD PTR ds:0x428014,ebx
  401e99:	mov    eax,DWORD PTR [eax+0x1c8]
  401e9f:	mov    eax,DWORD PTR [eax]
  401ea1:	mov    edi,DWORD PTR ds:0x42a010
  401ea7:	sub    edi,DWORD PTR ds:0x42c008
  401ead:	mov    DWORD PTR ds:0x42a010,edi
  401eb3:	mov    edx,DWORD PTR [ebp-0x18]
  401eb6:	and    DWORD PTR ds:0x42b00c,0x0
  401ec0:	jmp    0x401ed2
  401ec5:	mov    edi,DWORD PTR ds:0x42b00c
  401ecb:	inc    edi
  401ecc:	mov    DWORD PTR ds:0x42b00c,edi
  401ed2:	cmp    DWORD PTR ds:0x42b00c,0x12
  401ed9:	jae    0x401f21
  401edf:	cmp    DWORD PTR ds:0x42b00c,0xc
  401ee6:	jne    0x401efc
  401eec:	push   0x0
  401eee:	push   0x7fec
  401ef3:	push   DWORD PTR [ebp-0x28]
  401ef6:	call   DWORD PTR ds:0x42dc77
  401efc:	cmp    DWORD PTR ds:0x42b00c,0xb
  401f03:	jne    0x401f16
  401f09:	mov    edi,DWORD PTR ds:0x42b00c
  401f0f:	inc    edi
  401f10:	mov    DWORD PTR ds:0x42b00c,edi
  401f16:	jmp    0x401ec5
  401f1b:	xor    edi,DWORD PTR ds:0x42c01c
  401f21:	mov    esi,0x7510899
  401f26:	movzx  edi,WORD PTR ds:0x42a000
  401f2d:	add    DWORD PTR ds:0x42c010,edi
  401f33:	xor    eax,esi
  401f35:	movzx  edi,BYTE PTR ds:0x428008
  401f3c:	xor    DWORD PTR ds:0x428010,edi
  401f42:	mov    edi,0x3272e0
  401f47:	sub    DWORD PTR ds:0x429004,0x2e7b
  401f51:	add    eax,edi
  401f53:	mov    DWORD PTR ds:0x428010,0xa86
  401f5d:	mov    DWORD PTR [edx],eax
  401f5f:	mov    eax,ds:0x42daab
  401f64:	cmp    eax,0x312bc9f6
  401f69:	mov    DWORD PTR ds:0x42c014,0x7fe
  401f73:	jne    0x402159
  401f79:	mov    eax,DWORD PTR [ebp-0x8]
  401f7c:	and    DWORD PTR ds:0x42800c,0x0
  401f86:	mov    edx,DWORD PTR ds:0x42800c
  401f8c:	inc    edx
  401f8d:	mov    DWORD PTR ds:0x42800c,edx
  401f93:	cmp    DWORD PTR ds:0x42800c,0x1e
  401f9a:	jne    0x401fc5
  401fa0:	push   DWORD PTR [ebp-0x1c]
  401fa3:	push   0x1928
  401fa8:	push   0x42b014
  401fad:	push   0x166d
  401fb2:	push   0x7171
  401fb7:	push   0x2c0a
  401fbc:	push   DWORD PTR [ebp-0x1c]
  401fbf:	call   DWORD PTR ds:0x42dc7f
  401fc5:	cmp    DWORD PTR ds:0x42800c,0x1a
  401fcc:	jb     0x401f86
  401fd2:	and    DWORD PTR ds:0x42c014,0x0
  401fdc:	jmp    0x401fee
  401fe1:	mov    edx,DWORD PTR ds:0x42c014
  401fe7:	inc    edx
  401fe8:	mov    DWORD PTR ds:0x42c014,edx
  401fee:	cmp    DWORD PTR ds:0x42c014,0x1e
  401ff5:	jae    0x402082
  401ffb:	cmp    DWORD PTR ds:0x42c014,0x20
  402002:	jne    0x402021
  402008:	push   0x42b008
  40200d:	push   DWORD PTR [ebp-0xc]
  402010:	push   0x42d000
  402015:	push   DWORD PTR [ebp-0x20]
  402018:	push   DWORD PTR [ebp-0x20]
  40201b:	call   DWORD PTR ds:0x42dc83
  402021:	jmp    0x401fe1
  402026:	and    DWORD PTR ds:0x42c008,0x0
  402030:	mov    ebx,DWORD PTR ds:0x42c008
  402036:	inc    ebx
  402037:	mov    DWORD PTR ds:0x42c008,ebx
  40203d:	cmp    DWORD PTR ds:0x42c008,0x6
  402044:	jne    0x402055
  40204a:	push   0x428000
  40204f:	call   DWORD PTR ds:0x42dc8b
  402055:	cmp    DWORD PTR ds:0x42c008,0x5
  40205c:	jne    0x40206f
  402062:	mov    ebx,DWORD PTR ds:0x42c008
  402068:	inc    ebx
  402069:	mov    DWORD PTR ds:0x42c008,ebx
  40206f:	cmp    DWORD PTR ds:0x42c008,0x11
  402076:	jb     0x402030
  40207c:	sbb    edx,0x8e9
  402082:	mov    edx,DWORD PTR ds:0x42d313
  402088:	mov    edx,DWORD PTR [edx+0x198]
  40208e:	xor    DWORD PTR ds:0x429018,edx
  402094:	xor    eax,esi
  402096:	and    DWORD PTR ds:0x42b00c,0x0
  4020a0:	jmp    0x4020b2
  4020a5:	mov    ebx,DWORD PTR ds:0x42b00c
  4020ab:	inc    ebx
  4020ac:	mov    DWORD PTR ds:0x42b00c,ebx
  4020b2:	cmp    DWORD PTR ds:0x42b00c,0x1f
  4020b9:	jae    0x4020eb
  4020bf:	cmp    DWORD PTR ds:0x42b00c,0x21
  4020c6:	jne    0x4020e0
  4020cc:	push   DWORD PTR [ebp-0x18]
  4020cf:	push   DWORD PTR [ebp-0xc]
  4020d2:	push   0x429000
  4020d7:	push   DWORD PTR [ebp-0x24]
  4020da:	call   DWORD PTR ds:0x42dc8f
  4020e0:	jmp    0x4020a5
  4020e5:	adc    ebx,DWORD PTR ds:0x428020
  4020eb:	add    eax,edi
  4020ed:	mov    ebx,DWORD PTR ds:0x42a004
  4020f3:	sbb    DWORD PTR ds:0x429010,ebx
  4020f9:	mov    DWORD PTR [edx],eax
  4020fb:	and    DWORD PTR ds:0x428004,0x0
  402105:	mov    eax,ds:0x428004
  40210a:	inc    eax
  40210b:	mov    ds:0x428004,eax
  402110:	cmp    DWORD PTR ds:0x428004,0x27
  402117:	jne    0x402123
  40211d:	call   DWORD PTR ds:0x42dc93
  402123:	cmp    DWORD PTR ds:0x428004,0x1a
  40212a:	jb     0x402105
  402130:	mov    eax,DWORD PTR [ebp-0x8]
  402133:	add    ebx,0x5fb6
  402139:	xor    eax,esi
  40213b:	movzx  ebx,WORD PTR ds:0x42b008
  402142:	or     DWORD PTR ds:0x42b004,ebx
  402148:	add    eax,edi
  40214a:	adc    DWORD PTR ds:0x42b014,0x5b68
  402154:	mov    ds:0x42daab,eax
  402159:	and    eax,DWORD PTR ds:0x42c008
  40215f:	mov    eax,ds:0x42d313
  402164:	mov    eax,DWORD PTR [eax+0x18c]
  40216a:	or     DWORD PTR ds:0x42a000,0x2b6e
  402174:	mov    eax,DWORD PTR [eax]
  402176:	mov    ebx,DWORD PTR ds:0x418f49
  40217c:	mov    ebx,DWORD PTR [ebx]
  40217e:	sbb    DWORD PTR ds:0x428018,ebx
  402184:	mov    DWORD PTR [ebp-0x7c],eax
  402187:	and    DWORD PTR ds:0x428020,0x0
  402191:	mov    eax,ds:0x428020
  402196:	inc    eax
  402197:	mov    ds:0x428020,eax
  40219c:	cmp    DWORD PTR ds:0x428020,0x24
  4021a3:	jne    0x4021cd
  4021a9:	push   0x6154
  4021ae:	push   0x428028
  4021b3:	push   0x8833
  4021b8:	push   0x2ef1
  4021bd:	push   0x2977
  4021c2:	push   0x6125
  4021c7:	call   DWORD PTR ds:0x42dc97
  4021cd:	cmp    DWORD PTR ds:0x428020,0x18
  4021d4:	jb     0x402191
  4021da:	mov    ebx,0xf89c85bd
  4021df:	neg    eax
  4021e1:	mov    DWORD PTR [ebp-0x10],ebx
  4021e4:	mov    DWORD PTR ds:0x428020,0x18
  4021ee:	cmp    DWORD PTR ds:0x428020,0x0
  4021f5:	je     0x402224
  4021fb:	cmp    DWORD PTR ds:0x428020,0x26
  402202:	jne    0x40220e
  402208:	call   DWORD PTR ds:0x42dc9b
  40220e:	mov    eax,ds:0x428020
  402213:	dec    eax
  402214:	mov    ds:0x428020,eax
  402219:	jmp    0x4021ee
  40221e:	or     DWORD PTR ds:0x429004,ecx
  402224:	mov    DWORD PTR [ebp-0x10],ebx
  402227:	and    DWORD PTR ds:0x42a014,0x0
  402231:	jmp    0x402241
  402236:	mov    eax,ds:0x42a014
  40223b:	inc    eax
  40223c:	mov    ds:0x42a014,eax
  402241:	cmp    DWORD PTR ds:0x42a014,0x1c
  402248:	jae    0x402279
  40224e:	cmp    DWORD PTR ds:0x42a014,0x22
  402255:	jne    0x40226e
  40225b:	push   0x62db
  402260:	push   0x42a018
  402265:	push   DWORD PTR [ebp-0x20]
  402268:	call   DWORD PTR ds:0x42dc9f
  40226e:	jmp    0x402236
  402273:	sbb    eax,DWORD PTR ds:0x42a00c
  402279:	mov    DWORD PTR [ebp-0x10],ebx
  40227c:	movzx  eax,BYTE PTR ds:0x428000
  402283:	add    eax,DWORD PTR ds:0x42a01c
  402289:	mov    ds:0x428000,eax
  40228e:	mov    DWORD PTR [ebp-0x18],ecx
  402291:	xor    DWORD PTR ds:0x42801c,ecx
  402297:	mov    DWORD PTR [ebp-0x10],ebx
  40229a:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4022a1:	and    DWORD PTR ds:0x42b018,0x0
  4022ab:	mov    eax,ds:0x42b018
  4022b0:	inc    eax
  4022b1:	mov    ds:0x42b018,eax
  4022b6:	cmp    DWORD PTR ds:0x42b018,0xe
  4022bd:	jne    0x4022d8
  4022c3:	push   0x42d0b3
  4022c8:	push   0x42d0f9
  4022cd:	push   0x400000
  4022d2:	call   DWORD PTR ds:0x42dca7
  4022d8:	cmp    DWORD PTR ds:0x42b018,0xd
  4022df:	jne    0x4022f0
  4022e5:	mov    eax,ds:0x42b018
  4022ea:	inc    eax
  4022eb:	mov    ds:0x42b018,eax
  4022f0:	cmp    DWORD PTR ds:0x42b018,0x18
  4022f7:	jb     0x4022ab
  4022fd:	and    DWORD PTR ds:0x429008,0x0
  402307:	jmp    0x402317
  40230c:	mov    eax,ds:0x429008
  402311:	inc    eax
  402312:	mov    ds:0x429008,eax
  402317:	cmp    DWORD PTR ds:0x429008,0x12
  40231e:	jae    0x402362
  402324:	cmp    DWORD PTR ds:0x429008,0x4
  40232b:	jne    0x40233c
  402331:	push   0x42d0b3
  402336:	call   DWORD PTR ds:0x42dcab
  40233c:	cmp    DWORD PTR ds:0x429008,0x3
  402343:	jne    0x402357
  402349:	xor    eax,eax
  40234b:	add    eax,DWORD PTR ds:0x429008
  402351:	inc    eax
  402352:	mov    ds:0x429008,eax
  402357:	jmp    0x40230c
  40235c:	sub    DWORD PTR ds:0x428010,ebx
  402362:	mov    eax,DWORD PTR [ebp-0x8]
  402365:	xor    eax,esi
  402367:	sub    DWORD PTR ds:0x42c004,0x3268
  402371:	add    eax,edi
  402373:	mov    DWORD PTR ds:0x42801c,0x7c76
  40237d:	jmp    0x40245e
  402382:	mov    eax,DWORD PTR [ebp-0xc]
  402385:	mov    ecx,DWORD PTR [ebp-0x1c]
  402388:	xor    eax,esi
  40238a:	and    DWORD PTR ds:0x42901c,0x42b014
  402394:	lea    eax,[eax+ecx*1+0x3272e0]
  40239b:	push   eax
  40239c:	mov    eax,DWORD PTR [ebp-0x18]
  40239f:	or     DWORD PTR ds:0x42c008,0x79cb
  4023a9:	xor    eax,esi
  4023ab:	or     DWORD PTR ds:0x42a014,0x428004
  4023b5:	lea    eax,[ebp+eax*1+0x3272e8]
  4023bc:	push   eax
  4023bd:	mov    eax,ds:0x42d313
  4023c2:	add    DWORD PTR ds:0x42b010,0x2a0c
  4023cc:	push   DWORD PTR [eax+0x1bc]
  4023d2:	sub    DWORD PTR ds:0x428014,0x775c
  4023dc:	call   0x402bd1
  4023e1:	and    ecx,DWORD PTR ds:0x42a00c
  4023e7:	mov    eax,DWORD PTR [ebp-0xc]
  4023ea:	dec    DWORD PTR ds:0x42b00c
  4023f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4023f3:	and    DWORD PTR ds:0x428014,0x0
  4023fd:	jmp    0x40240f
  402402:	mov    edx,DWORD PTR ds:0x428014
  402408:	inc    edx
  402409:	mov    DWORD PTR ds:0x428014,edx
  40240f:	cmp    DWORD PTR ds:0x428014,0x1e
  402416:	jae    0x402455
  40241c:	cmp    DWORD PTR ds:0x428014,0x6
  402423:	jne    0x402434
  402429:	push   0x42b010
  40242e:	call   DWORD PTR ds:0x42dcb3
  402434:	cmp    DWORD PTR ds:0x428014,0x5
  40243b:	jne    0x402450
  402441:	xor    edx,edx
  402443:	add    edx,DWORD PTR ds:0x428014
  402449:	inc    edx
  40244a:	mov    DWORD PTR ds:0x428014,edx
  402450:	jmp    0x402402
  402455:	xor    eax,esi
  402457:	lea    eax,[ecx+eax*1+0x3272e0]
  40245e:	sub    ecx,ecx
  402460:	mov    ecx,DWORD PTR [ebp-0xc]
  402463:	mov    edx,DWORD PTR [ebp-0xc]
  402466:	mov    DWORD PTR ds:0x42b014,0x77e
  402470:	xor    edx,esi
  402472:	add    DWORD PTR ds:0x42c014,0x42b014
  40247c:	xor    ecx,esi
  40247e:	add    ecx,edx
  402480:	sbb    DWORD PTR ds:0x42c000,0x43eb
  40248a:	mov    edx,DWORD PTR [ebp-0xc]
  40248d:	adc    DWORD PTR ds:0x42a01c,0x42b018
  402497:	xor    edx,esi
  402499:	lea    ecx,[ecx+edx*1+0x9758a0]
  4024a0:	mov    DWORD PTR ds:0x42a008,0xdf3
  4024aa:	mov    DWORD PTR [ebp-0x1c],eax
  4024ad:	cmp    eax,ecx
  4024af:	jbe    0x402382
  4024b5:	mov    eax,DWORD PTR [ebp+0xc]
  4024b8:	mov    ds:0x42d197,eax
  4024bd:	mov    eax,DWORD PTR [ebp+0x10]
  4024c0:	mov    DWORD PTR ds:0x42c010,0x1c
  4024ca:	cmp    DWORD PTR ds:0x42c010,0x0
  4024d1:	je     0x402527
  4024d7:	cmp    DWORD PTR ds:0x42c010,0xf
  4024de:	jne    0x4024f9
  4024e4:	push   0x42800c
  4024e9:	push   0x42800c
  4024ee:	push   0x428018
  4024f3:	call   DWORD PTR ds:0x42dc73
  4024f9:	cmp    DWORD PTR ds:0x42c010,0x10
  402500:	jne    0x402513
  402506:	mov    ecx,DWORD PTR ds:0x42c010
  40250c:	dec    ecx
  40250d:	mov    DWORD PTR ds:0x42c010,ecx
  402513:	xor    ecx,ecx
  402515:	or     ecx,DWORD PTR ds:0x42c010
  40251b:	dec    ecx
  40251c:	mov    DWORD PTR ds:0x42c010,ecx
  402522:	jmp    0x4024ca
  402527:	mov    ds:0x42d3eb,eax
  40252c:	mov    eax,ds:0x42d197
  402531:	mov    ecx,DWORD PTR [ebp-0x2c]
  402534:	sub    eax,edi
  402536:	xor    eax,esi
  402538:	mov    DWORD PTR [ecx],eax
  40253a:	mov    eax,DWORD PTR [ebp-0x34]
  40253d:	cmp    eax,0xf89c85b9
  402542:	jne    0x40261f
  402548:	lea    eax,[ebp-0x48]
  40254b:	mov    DWORD PTR [ebp-0x9c],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x48],eax
  402557:	mov    eax,DWORD PTR [ebp-0x48]
  40255a:	test   eax,eax
  40255c:	je     0x402ba1
  402562:	mov    eax,DWORD PTR [ebp-0x24]
  402565:	mov    eax,DWORD PTR [ebp-0xc]
  402568:	mov    eax,DWORD PTR [ebp-0x8]
  40256b:	mov    DWORD PTR [ebp+0xc],eax
  40256e:	mov    eax,eax
  402570:	mov    eax,ds:0x42d313
  402575:	mov    eax,DWORD PTR [eax+0x1c8]
  40257b:	mov    eax,DWORD PTR [eax]
  40257d:	cdq    
  40257e:	mov    ebx,eax
  402580:	mov    eax,0xfabdbee9
  402585:	add    ebx,eax
  402587:	adc    edx,0xffffffff
  40258a:	and    DWORD PTR [ebp-0x10],0x0
  40258e:	xor    edx,0x0
  402591:	mov    DWORD PTR [ebp-0x6c],edx
  402594:	mov    edx,DWORD PTR [ebp+0xc]
  402597:	mov    DWORD PTR [ebp-0x14],edx
  40259a:	mov    ecx,0x8a29a12b
  40259f:	xor    ebx,ecx
  4025a1:	add    DWORD PTR [ebp-0x14],eax
  4025a4:	mov    edx,DWORD PTR [ebp-0x14]
  4025a7:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ab:	xor    edx,ecx
  4025ad:	mov    DWORD PTR [ebp-0x58],edx
  4025b0:	mov    edx,DWORD PTR [ebp-0x10]
  4025b3:	xor    edx,0x0
  4025b6:	mov    DWORD PTR [ebp-0x54],edx
  4025b9:	cmp    DWORD PTR [ebp-0x58],ebx
  4025bc:	jne    0x4025ce
  4025c2:	mov    edx,DWORD PTR [ebp-0x6c]
  4025c5:	cmp    DWORD PTR [ebp-0x54],edx
  4025c8:	je     0x4025fd
  4025ce:	mov    edx,DWORD PTR ds:0x42d313
  4025d4:	mov    edx,DWORD PTR [edx+0x1c0]
  4025da:	mov    edx,DWORD PTR [edx]
  4025dc:	xor    ebx,ebx
  4025de:	add    edx,eax
  4025e0:	adc    ebx,0xffffffff
  4025e3:	xor    edx,ecx
  4025e5:	xor    ebx,0x0
  4025e8:	cmp    edx,0x70941fc1
  4025ee:	jne    0x402ba1
  4025f4:	cmp    ebx,0xffffffff
  4025f7:	jne    0x402ba1
  4025fd:	mov    edx,DWORD PTR ds:0x42d38f
  402603:	mov    ebx,DWORD PTR ds:0x42d397
  402609:	xor    edx,ebx
  40260b:	mov    DWORD PTR ds:0x42d38f,edx
  402611:	mov    ebx,DWORD PTR ds:0x42d38f
  402617:	mov    edx,DWORD PTR [ebp-0x48]
  40261a:	jmp    0x402b60
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	cmp    eax,0xf89c85b8
  402627:	je     0x402684
  40262d:	mov    eax,DWORD PTR [ebp-0x8]
  402630:	mov    ecx,DWORD PTR [ebp-0x38]
  402633:	xor    eax,esi
  402635:	add    eax,edi
  402637:	cmp    eax,ecx
  402639:	je     0x402684
  40263f:	mov    eax,ds:0x42d313
  402644:	mov    eax,DWORD PTR [eax+0x194]
  40264a:	mov    ecx,DWORD PTR [eax]
  40264c:	mov    eax,DWORD PTR [ecx+0x3c]
  40264f:	push   DWORD PTR ds:0x42d3eb
  402655:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402659:	push   DWORD PTR ds:0x42d197
  40265f:	add    eax,ecx
  402661:	mov    ecx,DWORD PTR ds:0x42d313
  402667:	mov    ecx,DWORD PTR [ecx+0x194]
  40266d:	push   DWORD PTR [ecx]
  40266f:	call   eax
  402671:	mov    ecx,DWORD PTR ds:0x42d313
  402677:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40267d:	mov    DWORD PTR [ecx],eax
  40267f:	jmp    0x402ba1
  402684:	mov    eax,DWORD PTR [ebp-0x8]
  402687:	mov    ecx,DWORD PTR [ebp-0x7c]
  40268a:	xor    eax,esi
  40268c:	add    eax,edi
  40268e:	cmp    eax,ecx
  402690:	jne    0x402a61
  402696:	mov    eax,DWORD PTR [ebp-0x8]
  402699:	mov    ecx,DWORD PTR ds:0x42d313
  40269f:	mov    ecx,DWORD PTR [ecx+0x198]
  4026a5:	xor    eax,esi
  4026a7:	add    eax,edi
  4026a9:	cmp    eax,DWORD PTR [ecx]
  4026ab:	jne    0x4026ca
  4026b1:	mov    eax,DWORD PTR [ebp-0x8]
  4026b4:	push   0xf89c85b9
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	push   eax
  4026be:	push   ebx
  4026bf:	push   DWORD PTR [ebp-0xc]
  4026c2:	push   DWORD PTR [ebp-0x8]
  4026c5:	call   0x40c7f6
  4026ca:	mov    eax,DWORD PTR [ebp-0xc]
  4026cd:	mov    DWORD PTR [ebp-0x40],eax
  4026d0:	mov    eax,DWORD PTR [ebp-0x8]
  4026d3:	mov    DWORD PTR [ebp-0x1c],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4026d9:	xor    eax,esi
  4026db:	add    eax,edi
  4026dd:	mov    DWORD PTR [ebp+0x10],eax
  4026e0:	mov    eax,ds:0x42d193
  4026e5:	mov    eax,DWORD PTR [eax]
  4026e7:	mov    DWORD PTR [ebp+0x10],eax
  4026ea:	mov    eax,ds:0x42d39b
  4026ef:	mov    eax,DWORD PTR [eax]
  4026f1:	mov    DWORD PTR [ebp-0x18],eax
  4026f4:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4026fb:	mov    eax,DWORD PTR [ebp+0xc]
  4026fe:	xor    eax,esi
  402700:	add    eax,edi
  402702:	mov    DWORD PTR [ebp+0xc],eax
  402705:	mov    eax,ds:0x42d313
  40270a:	mov    DWORD PTR [ebp+0xc],eax
  40270d:	mov    eax,DWORD PTR [ebp+0x10]
  402710:	mov    DWORD PTR [ebp+0xc],eax
  402713:	mov    eax,DWORD PTR [ebp+0xc]
  402716:	push   0x4
  402718:	pop    ecx
  402719:	sub    ecx,eax
  40271b:	add    ecx,DWORD PTR [ebp-0x18]
  40271e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  402725:	mov    DWORD PTR [ebp+0x10],ecx
  402728:	mov    DWORD PTR [ebp-0xe4],ebx
  40272e:	mov    eax,DWORD PTR [ebp+0xc]
  402731:	mov    DWORD PTR [ebp-0xe0],eax
  402737:	mov    eax,DWORD PTR [ebp+0x10]
  40273a:	mov    DWORD PTR [ebp-0xdc],eax
  402740:	mov    eax,DWORD PTR [ebp-0x2c]
  402743:	xor    eax,esi
  402745:	add    eax,edi
  402747:	mov    DWORD PTR [ebp-0xd8],eax
  40274d:	lea    eax,[ebp-0x88]
  402753:	mov    DWORD PTR [ebp-0xd4],eax
  402759:	mov    eax,DWORD PTR [ebp-0xe4]
  40275f:	xor    eax,esi
  402761:	add    eax,edi
  402763:	mov    DWORD PTR [ebp-0xe4],eax
  402769:	lea    eax,[ebp-0xe4]
  40276f:	push   eax
  402770:	mov    eax,DWORD PTR [ebp-0x40]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	push   eax
  402778:	mov    eax,ds:0x42d333
  40277d:	push   0x42d289
  402782:	push   DWORD PTR [eax]
  402784:	call   0x405286
  402789:	mov    eax,DWORD PTR [ebp+0xc]
  40278c:	mov    ecx,DWORD PTR [ebp+0x10]
  40278f:	mov    DWORD PTR [ebp-0x84],ecx
  402795:	mov    ecx,DWORD PTR [ebp-0x1c]
  402798:	xor    ecx,esi
  40279a:	mov    DWORD PTR [ebp-0x18],eax
  40279d:	add    ecx,edi
  40279f:	jmp    0x402a02
  4027a4:	lea    edx,[ecx+eax*1]
  4027a7:	mov    DWORD PTR [ebp+0x10],edx
  4027aa:	mov    edx,DWORD PTR [ebp-0x84]
  4027b0:	sub    edx,ecx
  4027b2:	mov    DWORD PTR [ebp+0xc],edx
  4027b5:	mov    edx,DWORD PTR [ebp+0xc]
  4027b8:	mov    DWORD PTR [ebp-0x4c],edx
  4027bb:	mov    edx,DWORD PTR [ebp+0x10]
  4027be:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4027c5:	mov    DWORD PTR [ebp-0x6c],edx
  4027c8:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4027cf:	mov    edx,DWORD PTR [ebp-0x50]
  4027d2:	xor    edx,esi
  4027d4:	add    edx,edi
  4027d6:	mov    DWORD PTR [ebp+0x10],edx
  4027d9:	mov    edx,DWORD PTR [ebp-0x50]
  4027dc:	xor    edx,esi
  4027de:	add    edx,edi
  4027e0:	mov    DWORD PTR [ebp+0xc],edx
  4027e3:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4027ea:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4027f1:	mov    edx,DWORD PTR [ebp-0x50]
  4027f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4027f7:	xor    edx,esi
  4027f9:	add    edx,edi
  4027fb:	cmp    ebx,edx
  4027fd:	je     0x4029f6
  402803:	mov    eax,DWORD PTR [ebp-0x20]
  402806:	xor    eax,esi
  402808:	mov    edx,0xffcd8d20
  40280d:	sub    edx,eax
  40280f:	add    edx,DWORD PTR [ebp-0x4c]
  402812:	mov    eax,DWORD PTR [ebp-0x20]
  402815:	mov    ebx,DWORD PTR [ebp+0x10]
  402818:	xor    eax,esi
  40281a:	add    eax,edi
  40281c:	imul   eax,ebx
  40281f:	cmp    eax,edx
  402821:	ja     0x4029f3
  402827:	mov    edx,DWORD PTR [ebp+0x10]
  40282a:	mov    eax,DWORD PTR [ebp-0x4c]
  40282d:	mov    ebx,DWORD PTR [ebp-0x68]
  402830:	sub    eax,edx
  402832:	xor    ebx,esi
  402834:	xor    edx,edx
  402836:	add    ebx,edi
  402838:	div    ebx
  40283a:	mov    DWORD PTR [ebp+0xc],eax
  40283d:	mov    eax,DWORD PTR [ebp-0x74]
  402840:	mov    edx,DWORD PTR [ebp+0xc]
  402843:	xor    eax,esi
  402845:	add    eax,edi
  402847:	cmp    edx,eax
  402849:	jbe    0x402859
  40284f:	mov    eax,DWORD PTR [ebp-0x74]
  402852:	xor    eax,esi
  402854:	add    eax,edi
  402856:	mov    DWORD PTR [ebp+0xc],eax
  402859:	mov    eax,DWORD PTR [ebp-0x68]
  40285c:	mov    edx,DWORD PTR [ebp+0xc]
  40285f:	xor    eax,esi
  402861:	add    eax,edi
  402863:	imul   eax,edx
  402866:	mov    DWORD PTR [ebp+0xc],eax
  402869:	mov    eax,DWORD PTR [ebp-0x50]
  40286c:	mov    edx,DWORD PTR [ebp+0xc]
  40286f:	xor    eax,esi
  402871:	add    eax,edi
  402873:	cmp    edx,eax
  402875:	je     0x4029dc
  40287b:	mov    eax,DWORD PTR [ebp+0xc]
  40287e:	mov    DWORD PTR [ebp-0x34],eax
  402881:	mov    eax,DWORD PTR [ebp+0x10]
  402884:	add    eax,DWORD PTR [ebp-0x6c]
  402887:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40288e:	mov    DWORD PTR [ebp-0x30],eax
  402891:	mov    eax,0xf89c85b8
  402896:	mov    DWORD PTR [ebp-0x5c],eax
  402899:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4028a0:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4028a7:	mov    DWORD PTR [ebp-0x28],eax
  4028aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4028ad:	xor    eax,esi
  4028af:	add    eax,edi
  4028b1:	jmp    0x402998
  4028b6:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4028bd:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x30]
  4028d4:	mov    al,BYTE PTR [eax+edx*1]
  4028d7:	mov    BYTE PTR [ebp-0x1],al
  4028da:	mov    eax,DWORD PTR [ebp-0x28]
  4028dd:	mov    edx,DWORD PTR [ebp+0xc]
  4028e0:	xor    eax,esi
  4028e2:	add    eax,edi
  4028e4:	imul   eax,edx
  4028e7:	mov    edx,DWORD PTR [ebp-0x54]
  4028ea:	xor    edx,esi
  4028ec:	add    eax,edx
  4028ee:	mov    edx,DWORD PTR [ebp-0x30]
  4028f1:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4028f9:	mov    edx,DWORD PTR [ebp-0x78]
  4028fc:	xor    edx,esi
  4028fe:	lea    eax,[edx+eax*1+0x3272e0]
  402905:	movzx  edx,BYTE PTR [ebp-0x1]
  402909:	xor    edx,eax
  40290b:	mov    BYTE PTR [ebp-0x1],dl
  40290e:	mov    al,BYTE PTR [ebp-0x1]
  402911:	mov    edx,DWORD PTR [ebp-0x28]
  402914:	mov    ebx,DWORD PTR [ebp+0xc]
  402917:	xor    edx,esi
  402919:	add    edx,edi
  40291b:	imul   edx,ebx
  40291e:	mov    ebx,DWORD PTR [ebp-0x30]
  402921:	mov    BYTE PTR [edx+ebx*1],al
  402924:	mov    eax,DWORD PTR [ebp-0x28]
  402927:	mov    edx,DWORD PTR [ebp+0xc]
  40292a:	xor    eax,esi
  40292c:	add    eax,edi
  40292e:	imul   eax,edx
  402931:	mov    edx,DWORD PTR [ebp-0x30]
  402934:	mov    al,BYTE PTR [eax+edx*1]
  402937:	mov    BYTE PTR [ebp-0x1],al
  40293a:	mov    eax,DWORD PTR [ebp-0x28]
  40293d:	mov    edx,DWORD PTR [ebp+0xc]
  402940:	xor    eax,esi
  402942:	add    eax,edi
  402944:	imul   eax,edx
  402947:	mov    edx,DWORD PTR [ebp-0x5c]
  40294a:	xor    edx,esi
  40294c:	add    eax,edx
  40294e:	mov    edx,DWORD PTR [ebp-0x30]
  402951:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402959:	mov    edx,DWORD PTR [ebp-0x80]
  40295c:	xor    edx,esi
  40295e:	lea    eax,[edx+eax*1+0x3272e0]
  402965:	movzx  edx,BYTE PTR [ebp-0x1]
  402969:	xor    edx,eax
  40296b:	mov    BYTE PTR [ebp-0x1],dl
  40296e:	mov    al,BYTE PTR [ebp-0x1]
  402971:	mov    edx,DWORD PTR [ebp-0x28]
  402974:	mov    ebx,DWORD PTR [ebp+0xc]
  402977:	xor    edx,esi
  402979:	add    edx,edi
  40297b:	imul   edx,ebx
  40297e:	mov    ebx,DWORD PTR [ebp-0x30]
  402981:	mov    BYTE PTR [edx+ebx*1],al
  402984:	mov    eax,DWORD PTR [ebp-0x10]
  402987:	mov    edx,DWORD PTR [ebp-0x5c]
  40298a:	xor    eax,esi
  40298c:	xor    edx,esi
  40298e:	add    eax,edi
  402990:	add    edx,edi
  402992:	imul   eax,edx
  402995:	add    eax,DWORD PTR [ebp+0xc]
  402998:	mov    DWORD PTR [ebp+0xc],eax
  40299b:	mov    eax,DWORD PTR [ebp+0xc]
  40299e:	mov    edx,DWORD PTR [ebp-0x34]
  4029a1:	cmp    edx,eax
  4029a3:	jb     0x4028b6
  4029a9:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ac:	mov    edx,DWORD PTR [ebp-0x34]
  4029af:	xor    eax,esi
  4029b1:	add    eax,edi
  4029b3:	imul   eax,edx
  4029b6:	mov    edx,DWORD PTR [ebp-0x2c]
  4029b9:	xor    edx,esi
  4029bb:	add    edx,edi
  4029bd:	or     eax,edx
  4029bf:	mov    edx,DWORD PTR [ebp-0x20]
  4029c2:	xor    edx,esi
  4029c4:	add    eax,edx
  4029c6:	mov    edx,DWORD PTR [ebp-0x20]
  4029c9:	xor    edx,esi
  4029cb:	add    eax,edx
  4029cd:	mov    edx,DWORD PTR [ebp+0x10]
  4029d0:	lea    eax,[eax+edx*1+0x64e5c0]
  4029d7:	jmp    0x4029eb
  4029dc:	mov    eax,DWORD PTR [ebp-0x20]
  4029df:	mov    edx,DWORD PTR [ebp+0x10]
  4029e2:	xor    eax,esi
  4029e4:	lea    eax,[eax+edx*1+0x3272e0]
  4029eb:	mov    DWORD PTR [ebp+0x10],eax
  4029ee:	jmp    0x402803
  4029f3:	mov    eax,DWORD PTR [ebp-0x18]
  4029f6:	mov    edx,DWORD PTR [ebp-0x40]
  4029f9:	xor    edx,esi
  4029fb:	lea    ecx,[ecx+edx*1+0x3272e0]
  402a02:	lea    edx,[ecx-0x3272e0]
  402a08:	xor    edx,esi
  402a0a:	cmp    edx,0xf89c95b9
  402a10:	jne    0x4027a4
  402a16:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a19:	mov    edx,DWORD PTR [ebp-0x40]
  402a1c:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a1f:	xor    edx,esi
  402a21:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402a28:	xor    ecx,esi
  402a2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402a31:	xor    ebx,esi
  402a33:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402a3a:	mov    edx,DWORD PTR [ebp-0x40]
  402a3d:	xor    edx,esi
  402a3f:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  402a46:	mov    eax,DWORD PTR [ebp-0x40]
  402a49:	mov    eax,DWORD PTR [ebp-0x8]
  402a4c:	xor    eax,esi
  402a4e:	add    eax,edi
  402a50:	mov    ds:0x42d397,eax
  402a55:	mov    eax,DWORD PTR [ebp-0x8]
  402a58:	xor    eax,esi
  402a5a:	add    eax,edi
  402a5c:	mov    ds:0x42d38f,eax
  402a61:	lea    eax,[ebp-0x44]
  402a64:	mov    DWORD PTR [ebp-0x90],eax
  402a6a:	lea    eax,[ebp+0x4]
  402a6d:	mov    DWORD PTR [ebp-0x44],eax
  402a70:	mov    eax,DWORD PTR [ebp-0x44]
  402a73:	test   eax,eax
  402a75:	je     0x402ba1
  402a7b:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  402a85:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402a8f:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402a99:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402aa3:	call   0x40c40e
  402aa8:	mov    eax,DWORD PTR [ebp-0x24]
  402aab:	mov    eax,DWORD PTR [ebp-0xc]
  402aae:	mov    eax,DWORD PTR [ebp-0x8]
  402ab1:	mov    DWORD PTR [ebp+0xc],eax
  402ab4:	mov    eax,eax
  402ab6:	mov    eax,ds:0x42d313
  402abb:	mov    eax,DWORD PTR [eax+0x1c8]
  402ac1:	mov    eax,DWORD PTR [eax]
  402ac3:	cdq    
  402ac4:	mov    ebx,eax
  402ac6:	mov    eax,0xfabdbee9
  402acb:	add    ebx,eax
  402acd:	adc    edx,0xffffffff
  402ad0:	and    DWORD PTR [ebp-0x10],0x0
  402ad4:	xor    edx,0x0
  402ad7:	mov    DWORD PTR [ebp-0x6c],edx
  402ada:	mov    edx,DWORD PTR [ebp+0xc]
  402add:	mov    DWORD PTR [ebp-0x14],edx
  402ae0:	mov    ecx,0x8a29a12b
  402ae5:	xor    ebx,ecx
  402ae7:	add    DWORD PTR [ebp-0x14],eax
  402aea:	mov    edx,DWORD PTR [ebp-0x14]
  402aed:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402af1:	xor    edx,ecx
  402af3:	mov    DWORD PTR [ebp-0x58],edx
  402af6:	mov    edx,DWORD PTR [ebp-0x10]
  402af9:	xor    edx,0x0
  402afc:	mov    DWORD PTR [ebp-0x54],edx
  402aff:	cmp    DWORD PTR [ebp-0x58],ebx
  402b02:	jne    0x402b14
  402b08:	mov    edx,DWORD PTR [ebp-0x6c]
  402b0b:	cmp    DWORD PTR [ebp-0x54],edx
  402b0e:	je     0x402b43
  402b14:	mov    edx,DWORD PTR ds:0x42d313
  402b1a:	mov    edx,DWORD PTR [edx+0x1c0]
  402b20:	mov    edx,DWORD PTR [edx]
  402b22:	xor    ebx,ebx
  402b24:	add    edx,eax
  402b26:	adc    ebx,0xffffffff
  402b29:	xor    edx,ecx
  402b2b:	xor    ebx,0x0
  402b2e:	cmp    edx,0x70941fc1
  402b34:	jne    0x402ba1
  402b3a:	cmp    ebx,0xffffffff
  402b3d:	jne    0x402ba1
  402b43:	mov    edx,DWORD PTR ds:0x42d38f
  402b49:	mov    ebx,DWORD PTR ds:0x42d397
  402b4f:	xor    edx,ebx
  402b51:	mov    DWORD PTR ds:0x42d38f,edx
  402b57:	mov    ebx,DWORD PTR ds:0x42d38f
  402b5d:	mov    edx,DWORD PTR [ebp-0x44]
  402b60:	add    DWORD PTR [edx],ebx
  402b62:	mov    edx,DWORD PTR [ebp+0xc]
  402b65:	xor    esi,edx
  402b67:	mov    edx,DWORD PTR ds:0x42d38f
  402b6d:	add    esi,edi
  402b6f:	xor    ebx,ebx
  402b71:	add    esi,eax
  402b73:	adc    ebx,0xffffffff
  402b76:	xor    edi,edi
  402b78:	xor    esi,ecx
  402b7a:	xor    ebx,0x0
  402b7d:	add    edx,eax
  402b7f:	adc    edi,0xffffffff
  402b82:	xor    edx,ecx
  402b84:	xor    edi,0x0
  402b87:	cmp    edx,esi
  402b89:	jne    0x402ba1
  402b8f:	cmp    edi,ebx
  402b91:	jne    0x402ba1
  402b97:	mov    eax,ds:0x42d38f
  402b9c:	mov    ds:0x42d397,eax
  402ba1:	mov    eax,ds:0x42d313
  402ba6:	push   0x4
  402ba8:	add    eax,0x1cc
  402bad:	push   eax
  402bae:	lea    eax,[ebp-0x24]
  402bb1:	push   eax
  402bb2:	call   0x402bd1
  402bb7:	mov    eax,DWORD PTR [ebp-0x24]
  402bba:	mov    eax,DWORD PTR [eax]
  402bbc:	pop    ebx
  402bbd:	pop    esi
  402bbe:	pop    edi
  402bbf:	leave  
  402bc0:	ret    0xc
  402bc3:	xor    eax,eax
  402bc5:	and    DWORD PTR ds:0x42801c,0x42c008
  402bcf:	inc    eax
  402bd0:	ret    
  402bd1:	push   ebp
  402bd2:	mov    ebp,esp
  402bd4:	sub    esp,0x10
  402bd7:	mov    eax,0xf89c85b9
  402bdc:	mov    DWORD PTR [ebp-0x4],eax
  402bdf:	sub    DWORD PTR ds:0x42b01c,ebx
  402be5:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402bec:	mov    ecx,DWORD PTR [ebp-0x4]
  402bef:	mov    edx,DWORD PTR ds:0x429010
  402bf5:	sbb    edx,DWORD PTR ds:0x42a014
  402bfb:	mov    DWORD PTR ds:0x429010,edx
  402c01:	push   esi
  402c02:	adc    edx,DWORD PTR ds:0x42b014
  402c08:	mov    edx,0x7510899
  402c0d:	xor    ecx,edx
  402c0f:	mov    esi,0x3272e0
  402c14:	and    DWORD PTR ds:0x42901c,0x483b
  402c1e:	push   edi
  402c1f:	or     DWORD PTR ds:0x42a018,ebx
  402c25:	mov    edi,DWORD PTR [ebp+0x10]
  402c28:	sbb    DWORD PTR ds:0x42b018,0x6469
  402c32:	add    ecx,esi
  402c34:	mov    DWORD PTR ds:0x42a00c,0x7c8c
  402c3e:	cmp    ecx,edi
  402c40:	mov    DWORD PTR ds:0x42800c,0x2470
  402c4a:	je     0x405144
  402c50:	and    DWORD PTR ds:0x42a000,0x0
  402c5a:	jmp    0x402c6c
  402c5f:	mov    edi,DWORD PTR ds:0x42a000
  402c65:	inc    edi
  402c66:	mov    DWORD PTR ds:0x42a000,edi
  402c6c:	cmp    DWORD PTR ds:0x42a000,0x1d
  402c73:	jae    0x402c9f
  402c79:	cmp    DWORD PTR ds:0x42a000,0x2c
  402c80:	jne    0x402c94
  402c86:	push   0x1
  402c88:	push   DWORD PTR [ebp-0x20]
  402c8b:	push   DWORD PTR [ebp-0x10]
  402c8e:	call   DWORD PTR ds:0x42dc77
  402c94:	jmp    0x402c5f
  402c99:	sub    edi,DWORD PTR ds:0x42b004
  402c9f:	mov    ecx,DWORD PTR [ebp-0x4]
  402ca2:	xor    DWORD PTR ds:0x42a018,0x2a2c
  402cac:	mov    edi,DWORD PTR [ebp+0x10]
  402caf:	jmp    0x405034
  402cb4:	inc    edi
  402cb5:	stos   BYTE PTR es:[edi],al
  402cb6:	pop    ss
  402cb7:	mov    edx,0x77b7a777
  402cbc:	mov    ebp,0xd4deab7c
  402cc1:	rol    DWORD PTR [edx+eiz*4+0x7a7a7a7a],cl
  402cc8:	add    bl,BYTE PTR [edi+0x7a]
  402ccb:	jp     0x402cde
  402ccd:	sub    BYTE PTR [edi],dl
  402ccf:	cmp    eax,0x2f1b2115
  402cd4:	popa   
  402cd5:	dec    esi
  402cd6:	gs pop dx
  402cd9:	lea    ebp,[edx+0x6a]
  402cdc:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402ce2:	inc    esp
  402ce3:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402ce7:	jl     0x402d52
  402ce9:	push   ebp
  402cea:	iret   
  402ceb:	pop    ecx
  402cec:	dec    edx
  402ced:	cmp    al,0x88
  402cef:	cli    
  402cf0:	xchg   DWORD PTR [esi+0x57],esi
  402cf3:	dec    ecx
  402cf4:	jg     0x402d2d
  402cf6:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402cfc:	sub    bh,bh
  402cfe:	data16 fdivr st,st(2)
  402d01:	push   ebx
  402d02:	jg     0x402d22
  402d04:	jmp    0xe9faf63e
  402d09:	xchg   DWORD PTR [ebx],edx
  402d0b:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d11:	mov    al,al
  402d13:	imul   DWORD PTR [ecx-0x27]
  402d16:	add    al,dl
  402d18:	push   cs
  402d19:	cli    
  402d1a:	es adc al,0x44
  402d1d:	or     BYTE PTR [esi],ah
  402d1f:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d24:	pop    ebp
  402d25:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d2b:	jo     0x402d5f
  402d2d:	les    ebx,FWORD PTR [ebx-0xb]
  402d30:	sbb    bh,dl
  402d32:	test   BYTE PTR [edx-0x13],dl
  402d35:	adc    DWORD PTR ds:0x1c2af3a2,esi
  402d3b:	cmp    al,0x6
  402d3d:	dec    ebx
  402d3e:	pextrw esi,mm4,0x7b
  402d42:	loope  0x402db5
  402d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d45:	out    0x1b,eax
  402d47:	mov    bl,BYTE PTR [eax-0x58cc320e]
  402d4d:	sbb    BYTE PTR [edi-0x34a3f4f],ah
  402d53:	scas   al,BYTE PTR es:[edi]
  402d54:	push   es
  402d55:	imul   ecx,DWORD PTR [ebx+0x3f39e769],0x3e9663db
  402d5f:	(bad)  
  402d60:	mov    eax,ds:0xe00a03fe
  402d65:	cwde   
  402d66:	sub    DWORD PTR [esi-0xdd4dc10],0x10
  402d6d:	and    edx,ecx
  402d6f:	dec    ebx
  402d70:	ds iret 
  402d72:	arpl   WORD PTR [edi],di
  402d74:	das    
  402d75:	xor    dl,BYTE PTR [edi]
  402d77:	data16 ss lock je 0x402d7e
  402d7c:	cmp    BYTE PTR [ebx+0x3e],ch
  402d7f:	dec    ebp
  402d80:	fistp  DWORD PTR [ebp+edi*8-0x3a]
  402d84:	scas   eax,DWORD PTR es:[edi]
  402d85:	fwait
  402d86:	sbb    BYTE PTR [ebx],cl
  402d88:	dec    ecx
  402d89:	in     eax,dx
  402d8a:	adc    al,0x2f
  402d8c:	fld    QWORD PTR [ebx+ebp*1+0x3b]
  402d90:	push   eax
  402d91:	pop    esi
  402d92:	std    
  402d93:	call   0x1b2c:0x94a1c3c3
  402d9a:	mov    bh,0x9a
  402d9c:	push   edx
  402d9d:	pop    esi
  402d9e:	test   BYTE PTR [ebp+eax*8-0x5a25c8f4],bh
  402da5:	dec    edx
  402da6:	jb     0x402db4
  402da8:	mov    cl,0xc5
  402daa:	retf   0xbf5d
  402dad:	or     BYTE PTR [edi+ebx*1+0x1b317cd],bh
  402db4:	and    DWORD PTR [ebx],esp
  402db6:	sbb    ebx,DWORD PTR [edx+edi*8+0x5b17bc90]
  402dbd:	shl    BYTE PTR [ebp+0x54b9ae],1
  402dc3:	inc    ebp
  402dc4:	in     al,0x9b
  402dc6:	xchg   ebx,eax
  402dc7:	(bad)  
  402dc8:	xchg   ecx,eax
  402dc9:	les    eax,FWORD PTR [ebx]
  402dcb:	cmp    eax,0x175e802e
  402dd0:	dec    esp
  402dd1:	push   ebx
  402dd2:	out    0xce,al
  402dd4:	push   es
  402dd5:	pop    edx
  402dd6:	mov    eax,0xa9d8d88
  402ddb:	push   esi
  402ddc:	pop    esi
  402ddd:	jle    0x402e5c
  402ddf:	push   edx
  402de0:	sbb    esi,DWORD PTR [ecx+0x53]
  402de3:	dec    esi
  402de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de5:	(bad)  
  402de6:	not    DWORD PTR [eax+0x440b08a6]
  402dec:	pop    ds
  402ded:	jns    0x402d99
  402def:	push   edi
  402df0:	jmp    0x402e2b
  402df2:	hlt    
  402df3:	pop    ecx
  402df4:	ret    0x74ed
  402df7:	sbb    dl,cl
  402df9:	inc    ebx
  402dfa:	std    
  402dfb:	(bad)  
  402dfc:	leave  
  402dfd:	cli    
  402dfe:	xchg   ecx,eax
  402dff:	ror    ebx,0xf1
  402e02:	rol    ebp,1
  402e04:	mov    esp,0x60814383
  402e09:	mov    ebp,?
  402e0b:	pop    es
  402e0c:	pop    ecx
  402e0d:	cmc    
  402e0e:	and    eax,0x4510eb8f
  402e13:	das    
  402e14:	mov    ebx,0xad037315
  402e19:	sub    DWORD PTR [eax+0xc],esi
  402e1c:	pushf  
  402e1d:	xor    cl,al
  402e1f:	out    dx,al
  402e20:	cs loopne 0x402e9b
  402e23:	push   ebp
  402e24:	mov    edi,0xc87e22e5
  402e29:	scas   al,BYTE PTR es:[edi]
  402e2a:	xchg   ebp,eax
  402e2b:	mul    BYTE PTR [eax+0x258d9dce]
  402e31:	jl     0x402e5a
  402e33:	ja     0x402dc3
  402e35:	scas   al,BYTE PTR es:[edi]
  402e36:	loopne 0x402e60
  402e38:	(bad)  
  402e39:	loopne 0x402e8e
  402e3b:	push   edx
  402e3c:	out    0xd7,al
  402e3e:	adc    eax,0xb369304f
  402e43:	xor    edi,DWORD PTR [ebp+edi*2-0x5a]
  402e47:	sub    eax,0xbdb848a0
  402e4c:	push   0x6466fd22
  402e51:	ret    
  402e52:	inc    eax
  402e53:	xor    edi,0x3f244f42
  402e59:	outs   dx,BYTE PTR ds:[esi]
  402e5a:	xor    DWORD PTR [eax+0x46],edx
  402e5d:	mov    edi,0x39cab276
  402e62:	or     al,BYTE PTR [edx+0x7e0b524b]
  402e68:	mov    DWORD PTR [ecx-0x66],edx
  402e6b:	cmp    al,0x9c
  402e6d:	ror    BYTE PTR [esi],0xbd
  402e70:	sub    cl,BYTE PTR [ebp-0x78]
  402e73:	mov    edi,0x6c04b5c0
  402e78:	jb     0x402e88
  402e7a:	mov    bl,BYTE PTR ds:0x130eae0e
  402e80:	fistp  QWORD PTR [ebx]
  402e82:	in     eax,0x4d
  402e84:	in     eax,dx
  402e85:	mov    DWORD PTR es:[ecx],0x6e619a9a
  402e8c:	ror    BYTE PTR [ebp-0x52],1
  402e8f:	and    bh,BYTE PTR [esi+0x1d]
  402e92:	iret   
  402e93:	(bad)
  402e98:	test   DWORD PTR [ebx+0x7fba7c48],0x4882da4a
  402ea2:	xor    BYTE PTR [ebp-0x23844806],bh
  402ea8:	adc    BYTE PTR [esi],ch
  402eaa:	sbb    bl,BYTE PTR [edx+0x60]
  402ead:	sbb    al,0x7b
  402eaf:	sbb    al,0xfc
  402eb1:	jae    0x402e9a
  402eb3:	(bad)  
  402eb4:	push   ecx
  402eb5:	push   esi
  402eb6:	xor    ebp,DWORD PTR [ecx+0xd8bd0bb]
  402ebc:	sub    bh,BYTE PTR [edi+0x211a32fb]
  402ec2:	xchg   ecx,eax
  402ec3:	out    dx,al
  402ec4:	fsubrp st(1),st
  402ec6:	sahf   
  402ec7:	xchg   edx,ebx
  402ec9:	push   ss
  402eca:	hlt    
  402ecb:	push   cs
  402ecc:	popf   
  402ecd:	test   BYTE PTR [ecx],ah
  402ecf:	xchg   ebp,eax
  402ed0:	jmp    0x402f1d
  402ed2:	fcom   DWORD PTR [esi]
  402ed4:	sbb    ecx,DWORD PTR [esi]
  402ed6:	bound  eax,QWORD PTR [ecx-0x62]
  402ed9:	inc    edx
  402eda:	fisttp WORD PTR ds:0x16984cc3
  402ee0:	cwde   
  402ee1:	inc    edi
  402ee2:	(bad)
  402ee5:	cli    
  402ee6:	adc    eax,0xf51e6994
  402eeb:	xchg   esp,eax
  402eec:	outs   dx,BYTE PTR ds:[esi]
  402eed:	call   0xc5482c72
  402ef2:	stos   DWORD PTR es:[edi],eax
  402ef3:	aad    0x56
  402ef5:	add    edi,edi
  402ef7:	fisttp DWORD PTR [ecx-0x2f]
  402efa:	rcr    BYTE PTR [edx-0x37],0xc9
  402efe:	jmp    0x4f36:0x338485c
  402f05:	imul   esp,DWORD PTR ss:[eax-0x56],0x23467de
  402f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f0e:	je     0x402eb5
  402f10:	fstp   DWORD PTR [eax]
  402f12:	pop    edx
  402f13:	sub    esp,DWORD PTR [eax-0x16]
  402f16:	mov    cl,0x95
  402f18:	stos   BYTE PTR es:[edi],al
  402f19:	inc    edi
  402f1a:	or     eax,0xc2e3f0dd
  402f1f:	xchg   edi,eax
  402f20:	add    ecx,DWORD PTR [edi+0x57]
  402f23:	push   es
  402f24:	and    esp,DWORD PTR [edi-0x5996398b]
  402f2a:	es mov ebx,0x96351758
  402f30:	pop    ebx
  402f31:	inc    edx
  402f32:	call   0x141e08f9
  402f37:	js     0x402f33
  402f39:	and    al,0x9c
  402f3b:	mov    BYTE PTR [ebx-0x6d48c127],0xe1
  402f42:	mov    esp,0x52ce7fb8
  402f47:	shl    DWORD PTR [esp+eax*8],0x8c
  402f4b:	and    eax,0x5dfa4579
  402f50:	add    eax,0x9b280a9d
  402f55:	xor    dh,BYTE PTR [ebx]
  402f57:	mov    bh,0xe
  402f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f5a:	clc    
  402f5b:	jo     0x402f23
  402f5d:	test   esp,ecx
  402f5f:	mov    al,BYTE PTR [eax]
  402f61:	pop    esp
  402f62:	sub    al,bl
  402f64:	inc    ebx
  402f65:	fcmovu st,st(0)
  402f67:	push   ds
  402f68:	cs retf 0x3ccd
  402f6c:	shl    edx,0x7f
  402f6f:	test   al,0x56
  402f71:	loop   0x402f4a
  402f73:	mov    BYTE PTR [esi],dl
  402f75:	nop
  402f76:	sub    ah,BYTE PTR [edi-0x545f15f1]
  402f7c:	add    eax,0xb19ca89e
  402f81:	jbe    0x402fc3
  402f83:	repz mov esp,0x4f2b60eb
  402f89:	xor    al,0x81
  402f8b:	mov    ebx,0x84db1117
  402f90:	add    DWORD PTR [ecx-0x6ef9ae16],ebp
  402f96:	not    edx
  402f98:	nop
  402f99:	(bad)
  402f9c:	sbb    eax,esp
  402f9e:	jne    0x402f29
  402fa0:	jne    0x402ff4
  402fa2:	dec    edx
  402fa3:	add    bh,dl
  402fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa6:	push   0x73835620
  402fab:	mov    eax,0x7869cffc
  402fb0:	test   eax,0x52f70a3
  402fb5:	xchg   esp,eax
  402fb6:	imul   esi,DWORD PTR [esi+0x2d],0x2a
  402fba:	and    dl,cl
  402fbc:	dec    eax
  402fbd:	out    dx,eax
  402fbe:	rcl    DWORD PTR [ebp+0x54dbb33f],1
  402fc4:	pop    es
  402fc5:	dec    eax
  402fc6:	aas    
  402fc7:	inc    ecx
  402fc8:	std    
  402fc9:	sbb    eax,0x50e51493
  402fce:	lds    ecx,FWORD PTR [ebx-0x2b]
  402fd1:	push   edx
  402fd2:	add    al,0xd
  402fd4:	mov    al,BYTE PTR [ebx-0x3aa34d53]
  402fda:	dec    ebp
  402fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fdc:	je     0x403027
  402fde:	outs   dx,BYTE PTR ds:[esi]
  402fdf:	sub    eax,0x36e74011
  402fe4:	jns    0x402f66
  402fe6:	mov    bh,0x91
  402fe8:	push   esi
  402fe9:	push   edi
  402fea:	sub    edx,ebx
  402fec:	in     eax,0x8c
  402fee:	push   ds
  402fef:	dec    ebx
  402ff0:	daa    
  402ff1:	icebp  
  402ff2:	push   ebx
  402ff3:	(bad)  
  402ff4:	es scas al,BYTE PTR es:[edi]
  402ff6:	cmp    al,BYTE PTR [eax-0x11798bb9]
  402ffc:	and    DWORD PTR [ebx+0x68],esp
  402fff:	pop    edi
  403000:	adc    al,0xf0
  403002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403003:	outs   dx,DWORD PTR ds:[esi]
  403004:	push   edx
  403005:	sbb    DWORD PTR [eax-0x250c8c13],edi
  40300b:	leave  
  40300c:	leave  
  40300d:	popf   
  40300e:	out    dx,al
  40300f:	pop    esp
  403010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403011:	mov    ch,0xbd
  403013:	mov    ds:0xac0eb5ff,eax
  403018:	or     BYTE PTR [eax],bh
  40301a:	pusha  
  40301b:	jne    0x402fa7
  40301d:	push   cs
  40301e:	jg     0x402faf
  403020:	dec    eax
  403021:	mov    ah,0x3b
  403023:	jnp    0x40304f
  403025:	add    cl,BYTE PTR [edx+0x29]
  403028:	mov    bh,0x65
  40302a:	lods   al,BYTE PTR ds:[esi]
  40302b:	mov    cl,0xbe
  40302d:	inc    ebx
  40302e:	xchg   ebx,eax
  40302f:	shld   DWORD PTR [ebx+0x3d],ebx,0x83
  403034:	loop   0x403021
  403036:	push   esp
  403037:	xchg   ebp,eax
  403038:	dec    ebx
  403039:	mov    ds:0xbcd94ac1,eax
  40303e:	test   DWORD PTR [ecx-0x40],ebp
  403041:	jbe    0x40301c
  403043:	mov    ?,WORD PTR [esi-0x54ac9f61]
  403049:	sbb    ebx,DWORD PTR [ebp+0x19]
  40304c:	inc    ebp
  40304d:	jnp    0x4030be
  40304f:	shl    BYTE PTR [eax],1
  403051:	loope  0x403037
  403053:	rcl    DWORD PTR [esi-0x5c],cl
  403056:	inc    eax
  403057:	xchg   ecx,edi
  403059:	fs call 0x50e2dc2d
  40305f:	fld    TBYTE PTR [esi+0x71456453]
  403065:	fnstcw WORD PTR fs:[ecx+ebx*4]
  403069:	stc    
  40306a:	nop
  40306b:	fisttp DWORD PTR ds:0x9e636823
  403071:	inc    esp
  403072:	inc    DWORD PTR [edx]
  403074:	scas   al,BYTE PTR es:[edi]
  403075:	fdivr  QWORD PTR [eax+0x3ab6052f]
  40307b:	scas   al,BYTE PTR es:[edi]
  40307c:	adc    al,0x8
  40307e:	pusha  
  40307f:	mov    cl,0x9a
  403081:	sbb    BYTE PTR [ebx-0x23118fb0],bh
  403087:	(bad)
  40308b:	mov    WORD PTR [bx],fs
  40308e:	xor    esi,DWORD PTR [edi+0x7f]
  403091:	sub    edx,DWORD PTR [eax+0x36]
  403094:	(bad)  
  403095:	mov    BYTE PTR [ebx+ebx*1-0x1bc642e3],dl
  40309c:	cwde   
  40309d:	test   BYTE PTR [edx+0x77],bl
  4030a0:	jns    0x403026
  4030a2:	mov    DWORD PTR [edx+0x24],esi
  4030a5:	mov    bh,0x98
  4030a7:	add    al,0xe4
  4030a9:	imul   ebp
  4030ab:	dec    esi
  4030ac:	test   BYTE PTR [ecx-0x38c7f1b1],cl
  4030b2:	shl    BYTE PTR [esi-0x29],0xbd
  4030b6:	jecxz  0x4030b2
  4030b8:	aas    
  4030b9:	or     DWORD PTR [ecx+0x44],0x8c5dce61
  4030c0:	cmp    bh,BYTE PTR [edx]
  4030c2:	cmp    DWORD PTR ds:0x1e297893,0x89dd62fd
  4030cc:	mov    ecx,0x556ec949
  4030d1:	jle    0x4030e2
  4030d3:	mov    WORD PTR [ecx+0x6adb8336],ds
  4030d9:	jp     0x403110
  4030db:	es xchg esp,eax
  4030dd:	add    eax,DWORD PTR [esi+0x35ba3937]
  4030e3:	dec    esi
  4030e4:	sbb    ebx,DWORD PTR [ecx+0x2b85fc6f]
  4030ea:	dec    ebp
  4030eb:	xchg   DWORD PTR [eax],ebp
  4030ed:	or     dh,0xa8
  4030f0:	add    al,0xe9
  4030f2:	sbb    eax,DWORD PTR [edi]
  4030f4:	addr16 pop ebx
  4030f6:	out    dx,eax
  4030f7:	in     al,0x11
  4030f9:	push   ebp
  4030fa:	inc    ebp
  4030fb:	pushf  
  4030fc:	js     0x4030b6
  4030fe:	sub    eax,0xc1167aa2
  403103:	xor    bl,ah
  403105:	xchg   DWORD PTR [ebx-0x3a],ebx
  403108:	xor    ecx,ebx
  40310a:	and    esi,DWORD PTR [edx+0x573a9c6c]
  403110:	cmc    
  403111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403112:	ret    
  403113:	or     ebp,DWORD PTR [edi-0x2f]
  403116:	and    ebx,esp
  403118:	dec    esp
  403119:	fsubr  QWORD PTR [esi+0x2a]
  40311c:	ins    DWORD PTR es:[edi],dx
  40311d:	iret   
  40311e:	dec    esp
  40311f:	sub    al,0x11
  403121:	jecxz  0x40313e
  403123:	mov    dh,BYTE PTR [edi+ebx*2]
  403126:	(bad)  
  403127:	scas   al,BYTE PTR es:[edi]
  403128:	mov    eax,DWORD PTR ds:0x6637f3e9
  40312e:	fidiv  WORD PTR [ebp-0x74]
  403131:	pop    edi
  403132:	out    0x8e,al
  403134:	mov    ds:0x787a049,eax
  403139:	aam    0x1
  40313b:	int3   
  40313c:	pop    esp
  40313d:	cmp    edi,DWORD PTR gs:[bx+si-0x5772]
  403143:	hlt    
  403144:	pushf  
  403145:	inc    eax
  403146:	out    0x28,al
  403148:	out    dx,eax
  403149:	mov    ebx,0x348c0cb6
  40314e:	in     eax,dx
  40314f:	xlat   BYTE PTR ds:[ebx]
  403150:	icebp  
  403151:	int3   
  403152:	sahf   
  403153:	cli    
  403154:	ds int3 
  403156:	rol    eax,0x4b
  403159:	loope  0x40316c
  40315b:	inc    ebx
  40315c:	add    DWORD PTR [edx],esi
  40315e:	ins    DWORD PTR es:[edi],dx
  40315f:	shl    BYTE PTR [esi],1
  403161:	mov    dh,0x7a
  403163:	xor    ch,BYTE PTR [eax]
  403165:	arpl   WORD PTR [ebx-0x7b58df2e],cx
  40316b:	push   ecx
  40316c:	sti    
  40316d:	and    eax,0xba774b15
  403172:	lods   al,BYTE PTR ds:[esi]
  403173:	push   edx
  403174:	popa   
  403175:	aas    
  403176:	xchg   ebx,eax
  403177:	cmp    edx,DWORD PTR [ebx]
  403179:	xor    edi,edx
  40317b:	sub    al,0xda
  40317d:	adc    eax,0x5c985897
  403182:	pop    esi
  403183:	xchg   DWORD PTR [esi-0x7a],eax
  403186:	push   es
  403187:	xor    BYTE PTR [eax-0x18a03ec],bh
  40318d:	xor    cl,0xee
  403190:	scas   al,BYTE PTR es:[edi]
  403191:	xor    ah,cl
  403193:	fld    TBYTE PTR [eax+0x1c]
  403196:	neg    BYTE PTR [eax]
  403198:	aas    
  403199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40319a:	neg    esi
  40319c:	xor    BYTE PTR [esi],al
  40319e:	xor    ebx,DWORD PTR [edi-0x36]
  4031a1:	cmp    cl,BYTE PTR [edx]
  4031a3:	push   edx
  4031a4:	lods   al,BYTE PTR ds:[esi]
  4031a5:	cld    
  4031a6:	fsubr  QWORD PTR [ebx]
  4031a8:	cmovbe esp,DWORD PTR ds:0xe89c6f6e
  4031af:	mov    ds:0x9191d756,al
  4031b4:	idiv   BYTE PTR [eax+0x1e252400]
  4031ba:	mov    dh,0x87
  4031bc:	out    0xe3,eax
  4031be:	pop    edi
  4031bf:	push   eax
  4031c0:	pop    eax
  4031c1:	mov    dl,0xf6
  4031c3:	push   edx
  4031c4:	cmp    DWORD PTR [eax+eax*8],esp
  4031c7:	inc    ebp
  4031c8:	mov    ds:0x8d7af3cd,eax
  4031cd:	jmp    0x99ca5bbc
  4031d2:	sbb    BYTE PTR [eax+0x77136847],al
  4031d8:	jo     0x4031f3
  4031da:	sbb    ebp,DWORD PTR [edx+edi*2-0x66]
  4031de:	sub    DWORD PTR [esp+edi*8],esi
  4031e1:	addr16 xchg esi,eax
  4031e3:	xchg   esp,eax
  4031e4:	popa   
  4031e5:	push   edx
  4031e6:	ror    BYTE PTR [esi+0x6f],cl
  4031e9:	adc    ebx,DWORD PTR [esi-0x5c4d10a4]
  4031ef:	outs   dx,BYTE PTR ds:[esi]
  4031f0:	cmc    
  4031f1:	cmp    eax,0xdfba0306
  4031f6:	jmp    0x403187
  4031f8:	dec    ebx
  4031f9:	pop    ds
  4031fa:	push   0xfffffff9
  4031fc:	ficomp WORD PTR [ecx*4-0x244f2ec9]
  403203:	or     al,0x2f
  403205:	pop    ds
  403206:	mov    edi,0x22b78661
  40320b:	adc    al,0xe9
  40320d:	call   0x7ead775c
  403212:	sub    BYTE PTR [edx-0x33a00c41],cl
  403218:	add    al,0x6b
  40321a:	add    cl,BYTE PTR [edx+0x39181f1e]
  403220:	inc    ebp
  403221:	in     eax,dx
  403222:	xor    dh,dh
  403224:	mov    esi,0xbf5db9c0
  403229:	add    cl,cl
  40322b:	lock cmc 
  40322d:	(bad)  
  40322e:	in     al,dx
  40322f:	sub    eax,0xdb052615
  403234:	arpl   WORD PTR [ebp-0x7e2b24cf],cx
  40323a:	xor    BYTE PTR [ebx+0x782af7cd],bl
  403240:	xchg   esi,eax
  403241:	adc    al,0xa3
  403243:	ss ja  0x28ee2256
  40324a:	add    bh,BYTE PTR [ebp+0xb]
  40324d:	sbb    eax,DWORD PTR [ecx+0x16]
  403250:	jbe    0x40326c
  403252:	lds    edx,FWORD PTR ds:0xc71050ef
  403258:	cdq    
  403259:	xchg   ecx,eax
  40325a:	ins    DWORD PTR es:[edi],dx
  40325b:	call   0x15e3d7b0
  403260:	jp     0x40326b
  403262:	mov    ch,0xd
  403264:	dec    eax
  403265:	inc    eax
  403266:	(bad)  
  403267:	jmp    0x7049:0xeaa23964
  40326e:	pop    ss
  40326f:	jge    0x403259
  403271:	ds mov al,0xda
  403274:	fnstenv [ebp+0x70]
  403277:	cld    
  403278:	push   esp
  403279:	int    0x2b
  40327b:	rol    DWORD PTR ds:[eax+0x43e2c554],cl
  403282:	(bad)  
  403283:	outs   dx,DWORD PTR ds:[esi]
  403284:	arpl   WORD PTR [ebp-0x61],bp
  403287:	ret    0x5e0
  40328a:	test   eax,0xa189cfb2
  40328f:	ds and al,0x7c
  403292:	or     BYTE PTR [ebx-0x3a688408],bl
  403298:	mov    ds,WORD PTR [ebp+0x4e]
  40329b:	pop    eax
  40329c:	neg    DWORD PTR [ecx-0x52830b52]
  4032a2:	test   eax,0x39fc9756
  4032a7:	dec    ebx
  4032a8:	loope  0x4032fa
  4032aa:	(bad)  
  4032ac:	call   0xa2c9799b
  4032b1:	loopne 0x4032ce
  4032b3:	or     al,0xc4
  4032b5:	retf   0x3c0c
  4032b8:	aam    0x5b
  4032ba:	ret    
  4032bb:	cmp    eax,0xadf97c92
  4032c0:	sti    
  4032c1:	popf   
  4032c2:	sub    bh,BYTE PTR [edi-0x5eb2658b]
  4032c8:	push   ebx
  4032c9:	mov    WORD PTR [edi],?
  4032cb:	test   al,0x26
  4032cd:	add    DWORD PTR [eax],ebp
  4032cf:	add    al,0x22
  4032d1:	jno    0x4032fd
  4032d3:	adc    al,bl
  4032d5:	cwde   
  4032d6:	popa   
  4032d7:	mov    esp,0x8a34b43
  4032dc:	mov    ds:0x62562702,al
  4032e1:	jg     0x403337
  4032e3:	or     cl,bl
  4032e5:	push   edi
  4032e6:	addr16 mov cl,0xe6
  4032e9:	call   0x4464:0xe21e668
  4032f0:	sti    
  4032f1:	sbb    dl,cl
  4032f3:	dec    esi
  4032f4:	je     0x4032c9
  4032f6:	stc    
  4032f7:	test   DWORD PTR [esi+ecx*8-0x7bc8d091],edx
  4032fe:	aam    0x33
  403300:	xlat   BYTE PTR ds:[ebx]
  403301:	addr16 xchg ebx,eax
  403303:	jge    0x40335d
  403305:	pop    es
  403306:	or     BYTE PTR [ebx+0x7be47952],ah
  40330c:	(bad)  
  40330d:	push   eax
  40330e:	in     eax,0x55
  403310:	imul   DWORD PTR [ebx+0x50]
  403313:	arpl   WORD PTR [edx],bp
  403315:	aaa    
  403316:	rcl    ah,cl
  403318:	jno    0x40333d
  40331a:	add    esi,DWORD PTR [edx+ecx*4]
  40331d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40331e:	pushf  
  40331f:	xchg   ebp,eax
  403320:	outs   dx,DWORD PTR ds:[esi]
  403321:	mov    dl,0xe2
  403323:	jae    0x4032e8
  403325:	push   0x993869dc
  40332a:	jl     0x403390
  40332c:	call   0x654d:0xc1e878ac
  403333:	lock call 0xe478:0x4bc3c66d
  40333b:	mov    esp,0xd4c779bd
  403340:	jl     0x403315
  403342:	xchg   esi,eax
  403343:	dec    eax
  403344:	jg     0x4033c1
  403346:	push   esi
  403347:	repz xchg ebx,eax
  403349:	jb     0x4033b0
  40334b:	retf   0xb069
  40334e:	mov    ebp,0xc786c6b3
  403353:	push   ebp
  403354:	call   0xc632eb51
  403359:	pusha  
  40335a:	lock push ebp
  40335c:	cmp    cl,ch
  40335e:	sbb    DWORD PTR [eax],ecx
  403360:	mov    ebp,edx
  403362:	in     eax,dx
  403363:	mov    ebp,0x94af2ca4
  403368:	add    eax,0x62f8f22c
  40336d:	push   ss
  40336e:	pop    es
  40336f:	mov    edx,0xcc650d5d
  403374:	fld    TBYTE PTR [eax]
  403376:	xlat   BYTE PTR ds:[ebx]
  403377:	xchg   edi,eax
  403378:	mov    edi,0x8604658
  40337d:	and    edi,ebx
  40337f:	jp     0x4033dd
  403381:	fwait
  403382:	push   0x75147eaf
  403387:	std    
  403388:	xor    esp,DWORD PTR [ebp+esi*4-0x158e8c7c]
  40338f:	xor    eax,0x42d6491d
  403394:	mov    WORD PTR [eax],gs
  403396:	add    al,0xe2
  403398:	sahf   
  403399:	les    esp,FWORD PTR [edi-0x69f98447]
  40339f:	pop    es
  4033a0:	enter  0x98c5,0x9d
  4033a4:	(bad)  
  4033a6:	bound  esi,QWORD PTR [edi+edx*2-0x7201e0fb]
  4033ad:	dec    esp
  4033ae:	sub    DWORD PTR [edi+esi*4+0x17b8df94],0xcc75d6b0
  4033b9:	push   0xfffffff0
  4033bb:	dec    ecx
  4033bc:	mov    ecx,0x8b38ff4f
  4033c1:	call   0x18a8ea06
  4033c6:	cwde   
  4033c7:	enter  0x8407,0x51
  4033cb:	adc    BYTE PTR [ecx-0x47d92676],bh
  4033d1:	cmp    DWORD PTR ds:0x80ce1c99,edx
  4033d7:	scas   eax,DWORD PTR es:[edi]
  4033d8:	sbb    BYTE PTR [edx+0x269177be],0xe1
  4033df:	inc    esp
  4033e0:	push   esp
  4033e1:	cmp    DWORD PTR [eax+0x6e07213b],ebx
  4033e7:	push   eax
  4033e8:	inc    ebx
  4033e9:	popa   
  4033ea:	fdivp  st(0),st
  4033ec:	mov    edi,0xa5d050d7
  4033f1:	ds aad 0x5b
  4033f4:	test   al,0xaf
  4033f6:	(bad)  
  4033f7:	jns    0x40339a
  4033f9:	test   eax,0x5a2d327d
  4033fe:	push   0x52
  403400:	mov    DWORD PTR [eax+0x7f79d97c],esp
  403406:	cmp    eax,0xdd157c56
  40340b:	ins    DWORD PTR es:[edi],dx
  40340c:	scas   eax,DWORD PTR es:[edi]
  40340d:	pusha  
  40340e:	test   DWORD PTR [edx+0x74705c5e],edx
  403414:	xor    BYTE PTR [eax],cl
  403416:	scas   al,BYTE PTR es:[edi]
  403417:	pop    ss
  403418:	mov    eax,ds:0x4cbaf7a7
  40341d:	mov    bl,ch
  40341f:	add    DWORD PTR [ecx-0x4e],eax
  403422:	imul   ebp,ebx,0xd4cfd952
  403428:	clc    
  403429:	sbb    al,0xdb
  40342b:	dec    ebp
  40342c:	(bad)  
  40342d:	ins    BYTE PTR es:[edi],dx
  40342e:	cmc    
  40342f:	or     DWORD PTR [edi-0x357da4a7],0x83c8d760
  403439:	jb     0x403457
  40343b:	les    ecx,FWORD PTR [esi+edi*8-0x2e2dc670]
  403442:	xchg   eax,eax
  403444:	and    ecx,0xffffff85
  403447:	mov    es,WORD PTR [eax-0x6e]
  40344a:	jle    0x4033cf
  40344c:	dec    eax
  40344d:	push   ss
  40344e:	sar    BYTE PTR [edx+0x32],cl
  403451:	push   esp
  403452:	(bad)  [ebx]
  403454:	jnp    0x403418
  403456:	and    esp,DWORD PTR [edi-0x31]
  403459:	adc    DWORD PTR gs:[eax+0x5],eax
  40345d:	add    BYTE PTR gs:[ebp-0xe0c73bc],dh
  403464:	lds    ebp,FWORD PTR ds:0xe7183b97
  40346a:	es in  al,0xb3
  40346d:	rol    edi,0x7c
  403470:	mov    cl,0xd1
  403472:	sub    ebp,ebx
  403474:	leave  
  403475:	fild   WORD PTR [esi-0x15129e28]
  40347b:	push   ds
  40347c:	ins    DWORD PTR es:[edi],dx
  40347d:	mov    DWORD PTR ds:0x2ff00fe4,ebp
  403483:	outs   dx,BYTE PTR ds:[esi]
  403484:	sbb    edi,DWORD PTR [edx+0x68]
  403487:	mov    edi,0xe3d2630c
  40348c:	xor    al,0x11
  40348e:	jbe    0x4034e9
  403490:	hlt    
  403491:	(bad)  
  403493:	add    ah,0xed
  403496:	dec    edi
  403497:	xchg   ecx,eax
  403498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403499:	jmp    0x4034d4
  40349b:	and    ecx,ebp
  40349d:	mov    ch,0x3c
  40349f:	add    eax,0x29703464
  4034a4:	inc    ecx
  4034a5:	pop    edi
  4034a6:	inc    eax
  4034a7:	loopne 0x40345d
  4034a9:	(bad)  
  4034aa:	push   ss
  4034ab:	lahf   
  4034ac:	dec    ebx
  4034ad:	lds    esp,FWORD PTR [eax]
  4034af:	scas   al,BYTE PTR es:[edi]
  4034b0:	clc    
  4034b1:	shl    BYTE PTR [esi+0xb7351f1],cl
  4034b7:	mov    cl,0xf0
  4034b9:	fisttp DWORD PTR [esi]
  4034bb:	adc    eax,0xefac5a5b
  4034c0:	sbb    DWORD PTR [bx+di-0x237e],ebx
  4034c5:	add    ah,dl
  4034c7:	rol    BYTE PTR [edi+0x365ebd84],0xb5
  4034ce:	enter  0x43f,0x61
  4034d2:	push   cs
  4034d3:	push   ss
  4034d4:	jl     0x4034ad
  4034d6:	imul   edi,DWORD PTR [edi-0x443cfa8],0x2ad07274
  4034e0:	mov    ebp,0x2f429eee
  4034e5:	cdq    
  4034e6:	(bad)  
  4034e7:	bound  esi,QWORD PTR [edi+0x7e]
  4034ea:	jle    0x4034e6
  4034ec:	pop    edx
  4034ed:	lds    edx,FWORD PTR [ebx-0x2aaaa3eb]
  4034f3:	popf   
  4034f4:	lea    ecx,[edi]
  4034f6:	sub    eax,0xa96a0d70
  4034fb:	arpl   WORD PTR [ebp-0x72],cx
  4034fe:	test   ebp,ebp
  403500:	daa    
  403501:	xor    BYTE PTR [edi-0x66],bl
  403504:	clc    
  403505:	fmulp  st(1),st
  403507:	fadd   DWORD PTR [edx+0x44]
  40350a:	push   edx
  40350b:	xor    al,0x14
  40350d:	sub    BYTE PTR [edi+0x4d],0xac
  403511:	fisttp WORD PTR [esi+0x37]
  403514:	call   0x7e0b6faf
  403519:	scas   eax,DWORD PTR es:[edi]
  40351a:	pop    eax
  40351b:	jecxz  0x4034f0
  40351d:	mov    ebx,0xff04c37
  403522:	dec    edi
  403523:	mov    ebp,0x73897ee5
  403528:	cmc    
  403529:	jbe    0x4034d0
  40352b:	dec    esi
  40352c:	sub    al,0x13
  40352e:	xchg   esp,eax
  40352f:	sbb    edx,DWORD PTR ds:0x4c75fcfe
  403535:	shl    cl,cl
  403537:	sar    DWORD PTR [edx],1
  403539:	cmp    DWORD PTR [ecx+eax*1+0x5b],0xcc4bf245
  403541:	push   es
  403542:	sub    eax,0xd14b90e6
  403547:	or     BYTE PTR [ebx],al
  403549:	jg     0x4034d1
  40354b:	pop    ebx
  40354c:	push   ecx
  40354d:	ret    
  40354e:	mov    ebx,0x1fbb156a
  403553:	jp     0x4034e4
  403555:	sar    BYTE PTR [ecx],1
  403557:	stos   BYTE PTR es:[edi],al
  403558:	ret    0xa8c0
  40355b:	cmp    bl,BYTE PTR [ebp-0x3f]
  40355e:	retf   0xf727
  403561:	pop    eax
  403562:	mov    eax,ds:0x1c6a1967
  403567:	mov    edx,0xb92c9427
  40356c:	pop    eax
  40356d:	cwde   
  40356e:	or     DWORD PTR [eax-0x10],edi
  403571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403572:	ficom  WORD PTR [esi+0x603bfd7d]
  403578:	push   0xfffffff6
  40357a:	xchg   esi,eax
  40357b:	or     bl,BYTE PTR [ecx]
  40357d:	fcmovnu st,st(2)
  40357f:	fisttp DWORD PTR [esi]
  403581:	xlat   BYTE PTR ds:[ebx]
  403582:	pop    edx
  403583:	add    eax,0x6ff486e1
  403588:	mov    cl,0x81
  40358a:	inc    esi
  40358b:	jno    0x40358c
  40358d:	cmp    ebx,DWORD PTR [esi+0x5d]
  403590:	hlt    
  403591:	retf   
  403592:	push   ss
  403593:	fmul   QWORD PTR [edx+0x45]
  403596:	repz sub esi,DWORD PTR [ebp-0x3b75db4f]
  40359d:	mov    ds:0x188cd727,eax
  4035a2:	push   esp
  4035a3:	adc    ebp,0xffffffb7
  4035a6:	sub    eax,0x2ad5d04e
  4035ab:	xchg   ecx,eax
  4035ac:	sbb    bl,al
  4035ae:	jns    0x40360d
  4035b0:	aam    0x99
  4035b2:	js     0x40354c
  4035b4:	or     BYTE PTR [eax-0x43],dl
  4035b7:	mov    BYTE PTR [edx],dh
  4035b9:	pop    ss
  4035ba:	pop    esp
  4035bb:	pop    esp
  4035bc:	jl     0x403543
  4035be:	mov    cl,0xec
  4035c0:	push   0xffffffdd
  4035c2:	push   DWORD PTR [ebx+edx*2+0x46]
  4035c6:	call   0x3c7c:0xc59e6c62
  4035cd:	dec    eax
  4035ce:	or     BYTE PTR [ecx+eiz*2+0x6c],ah
  4035d2:	sub    edx,DWORD PTR [ecx]
  4035d4:	(bad)  
  4035d5:	mov    dl,0xa
  4035d7:	retf   0x7b4a
  4035da:	loope  0x4035c9
  4035dc:	cmc    
  4035dd:	imul   BYTE PTR [ebp+0xad044b2]
  4035e3:	sbb    edx,DWORD PTR [edx-0x13]
  4035e6:	scas   eax,DWORD PTR es:[edi]
  4035e7:	enter  0xda5f,0x97
  4035eb:	repz sub al,0x93
  4035ee:	sub    al,0x4
  4035f0:	or     BYTE PTR [esi-0x7005a1c8],bl
  4035f6:	fmul   DWORD PTR [ebx]
  4035f8:	fcom   DWORD PTR [edi+0x27e570ea]
  4035fe:	fistp  DWORD PTR [ecx]
  403600:	mov    gs:0x2c517c1d,eax
  403606:	mov    bl,0xba
  403608:	mov    edx,0x3a15eca9
  40360d:	pushf  
  40360e:	sub    dh,BYTE PTR [edi-0x12]
  403611:	and    BYTE PTR gs:[ebx+0x53],dh
  403615:	push   esi
  403616:	mov    ebx,0x4712c1df
  40361b:	fadd   QWORD PTR [eax]
  40361d:	sub    cl,ah
  40361f:	xchg   BYTE PTR [ecx],ah
  403621:	or     dh,BYTE PTR ds:0xfb5bea15
  403627:	aas    
  403628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403629:	dec    ebp
  40362a:	ret    0x4a66
  40362d:	push   cs
  40362e:	cmp    DWORD PTR [edi+0x2b],ebp
  403631:	add    al,ch
  403633:	addr16 pop di
  403636:	sub    eax,0x731985c3
  40363b:	cmc    
  40363c:	retf   
  40363d:	mov    WORD PTR [eax],gs
  40363f:	sub    BYTE PTR [esp+edi*2+0x75ad9352],0x29
  403647:	sbb    edx,eax
  403649:	mov    ebp,0xa1cc8f8c
  40364e:	repz jecxz 0x4036b5
  403651:	ror    DWORD PTR [esi],0xfb
  403654:	sub    ebx,DWORD PTR [edi-0x58f3070]
  40365a:	cmp    ch,BYTE PTR [ebx]
  40365c:	fwait
  40365d:	inc    ebp
  40365e:	pop    esp
  40365f:	jae    0x403628
  403661:	std    
  403662:	sub    DWORD PTR [edx-0x20d1b09e],esi
  403668:	jp     0x403671
  40366a:	(bad)  
  40366b:	ds xchg ebp,edx
  40366e:	or     edx,eax
  403670:	and    esi,DWORD PTR [esi-0x2b]
  403673:	imul   edi,ebx,0x31
  403676:	mov    al,ds:0x58fa2b26
  40367b:	bound  esp,QWORD PTR [edx+0x6727ba02]
  403681:	adc    al,0x18
  403683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403684:	sub    dl,BYTE PTR [ebx-0x79]
  403687:	pop    ds
  403688:	or     eax,0xde31feac
  40368d:	sbb    eax,0xef57a460
  403692:	int3   
  403693:	add    BYTE PTR [edx],al
  403695:	push   ebp
  403696:	mov    DWORD PTR [edx+0x7f012601],ebx
  40369c:	lea    ebp,[edi-0x71]
  40369f:	in     eax,0x98
  4036a1:	and    DWORD PTR [ebx],0x2c
  4036a4:	and    eax,0x11d9c1e9
  4036a9:	(bad)  [edx]
  4036ab:	mov    dl,0x5a
  4036ad:	sub    eax,0x85c0baa
  4036b2:	iret   
  4036b3:	sbb    edi,DWORD PTR [esi+0x74]
  4036b6:	or     esi,eax
  4036b8:	xor    al,0x33
  4036ba:	cli    
  4036bb:	cmp    ebx,ebx
  4036bd:	dec    ecx
  4036be:	xchg   ebx,eax
  4036bf:	mov    WORD PTR [edi+0x50d4c45b],gs
  4036c5:	(bad)  
  4036c6:	setb   al
  4036c9:	or     edi,0xb682fdfe
  4036cf:	jo     0x40371e
  4036d1:	mov    dl,0xfb
  4036d3:	fwait
  4036d4:	mov    ah,0x48
  4036d6:	mov    esi,0x30f91428
  4036db:	adc    al,0x68
  4036dd:	leave  
  4036de:	ss jl  0x4036b3
  4036e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e2:	inc    eax
  4036e3:	(bad)  
  4036e4:	loope  0x403696
  4036e6:	push   ecx
  4036e7:	cmp    eax,0x5d6caacf
  4036ec:	push   ebp
  4036ed:	fimul  WORD PTR [ebx]
  4036ef:	jne    0x4036ec
  4036f1:	xchg   edi,eax
  4036f2:	dec    esi
  4036f3:	into   
  4036f4:	sti    
  4036f5:	fadd   DWORD PTR [ebp-0x70]
  4036f8:	add    ebx,DWORD PTR [eax]
  4036fa:	mov    ecx,0x6099cf18
  4036ff:	ja     0x403693
  403701:	xchg   esp,eax
  403702:	int    0x38
  403704:	call   0xd51c:0xf549ae6d
  40370b:	(bad)  
  40370c:	hlt    
  40370d:	inc    esp
  40370e:	pop    ss
  40370f:	xor    bl,dh
  403711:	sub    dh,BYTE PTR [ebx]
  403713:	popa   
  403714:	test   eax,0xcf80fcd9
  403719:	pop    esp
  40371a:	fild   DWORD PTR [ecx]
  40371c:	cdq    
  40371d:	jne    0x4036a5
  40371f:	inc    ebp
  403720:	nop
  403721:	test   eax,0x723d1113
  403726:	mov    esi,0x1639989d
  40372b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40372c:	or     BYTE PTR [ecx],0xf4
  40372f:	out    dx,al
  403730:	inc    edx
  403731:	xor    al,0xe5
  403733:	in     eax,0x8b
  403735:	std    
  403736:	scas   eax,DWORD PTR es:[edi]
  403737:	icebp  
  403738:	fwait
  403739:	xchg   ebp,eax
  40373a:	loopne 0x4036f6
  40373c:	and    esi,DWORD PTR [edi]
  40373e:	jno    0x4037a0
  403740:	pusha  
  403741:	jb     0x4036f1
  403743:	pop    esp
  403744:	fsubr  st,st(5)
  403746:	xor    DWORD PTR [edx-0x2c50835],esp
  40374c:	add    BYTE PTR [ebx-0x31],cl
  40374f:	mov    edx,0x1b43d423
  403754:	cmp    DWORD PTR [edx],0x14da6ded
  40375a:	sub    eax,0xf12706de
  40375f:	inc    ebp
  403760:	adc    DWORD PTR [esi-0x63],edi
  403763:	mov    WORD PTR [esi+0x3319dda0],ss
  403769:	and    BYTE PTR [ebp+0x3a78f645],0x42
  403770:	repnz adc ch,BYTE PTR [edi+0xea430ba]
  403777:	adc    ah,ah
  403779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377a:	xor    al,0x29
  40377c:	jge    0x4037a5
  40377e:	mov    eax,ds:0x931a3e4f
  403783:	jmp    0xb63e:0x84e885c4
  40378a:	mov    eax,ds:0x3e302bbf
  40378f:	mov    ebp,0x19995f2e
  403794:	test   eax,0x885c4122
  403799:	add    eax,0x219c1ece
  40379e:	mov    edi,0xb91fbeea
  4037a3:	add    BYTE PTR [edx+ecx*8+0x77],ah
  4037a7:	mov    esp,0x946613a8
  4037ac:	fisttp QWORD PTR [edx-0x3]
  4037af:	pop    ss
  4037b0:	sar    BYTE PTR [ebx+0x27],0xdb
  4037b4:	ins    DWORD PTR es:[edi],dx
  4037b5:	mov    bl,BYTE PTR [eax-0x5561a098]
  4037bb:	mov    dl,0xb0
  4037bd:	push   0x3044b2f
  4037c2:	cld    
  4037c3:	dec    eax
  4037c4:	ins    DWORD PTR es:[edi],dx
  4037c5:	ins    BYTE PTR es:[edi],dx
  4037c6:	fstp   DWORD PTR [ecx-0x46]
  4037c9:	int3   
  4037ca:	lock pushf 
  4037cc:	jmp    FWORD PTR [ebx-0x3c06a335]
  4037d2:	and    BYTE PTR [ecx],dh
  4037d4:	mov    esi,0x4c1a0e60
  4037d9:	ins    BYTE PTR es:[edi],dx
  4037da:	inc    eax
  4037db:	jl     0x4037c0
  4037dd:	adc    al,0x4c
  4037df:	lahf   
  4037e0:	retf   
  4037e1:	retf   
  4037e2:	cmp    al,BYTE PTR ds:0xc38f517a
  4037e8:	dec    edi
  4037e9:	push   ecx
  4037ea:	dec    esp
  4037eb:	loopne 0x40385d
  4037ed:	mov    dl,BYTE PTR [ebp+esi*2+0x9df4d9a]
  4037f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f5:	push   0xfa757fc0
  4037fa:	mov    ?,edi
  4037fc:	(bad)
  4037ff:	and    DWORD PTR [edx-0x18a18621],edi
  403805:	cli    
  403806:	cmp    ah,BYTE PTR [edx+esi*8-0x7b6961db]
  40380d:	mov    WORD PTR [eax+ebp*8],fs
  403810:	stos   DWORD PTR es:[edi],eax
  403811:	jle    0x403885
  403813:	mov    DWORD PTR [esi-0x4],eax
  403816:	sti    
  403817:	mov    edx,0x32c3c957
  40381c:	pop    ds
  40381d:	xor    esi,DWORD PTR [ebx+ebx*8-0x4c152b8f]
  403824:	dec    eax
  403825:	xor    eax,0xc49a3bb3
  40382a:	cmp    eax,0xf83d7861
  40382f:	and    al,0x0
  403831:	mov    esi,0x3fb939d5
  403836:	nop
  403837:	sbb    eax,0xb7ac7e12
  40383c:	cmp    bl,BYTE PTR [ecx-0x6f]
  40383f:	xor    cl,BYTE PTR [edi-0x6c0c8f58]
  403845:	mov    cl,0xbb
  403847:	jae    0x4038b4
  403849:	jg     0x403802
  40384b:	jae    0x4037e5
  40384d:	fsincos 
  40384f:	stc    
  403850:	add    cl,cl
  403852:	repnz test al,0x36
  403855:	mov    edi,0x788b713d
  40385a:	iret   
  40385b:	adc    dl,ch
  40385d:	stos   DWORD PTR es:[edi],eax
  40385e:	mov    esi,0x601825cf
  403863:	mov    edi,0xe0bb92ad
  403868:	or     BYTE PTR [ebp-0x14c79625],ah
  40386e:	xor    al,0xc0
  403870:	(bad)  
  403871:	div    BYTE PTR [ebx]
  403873:	inc    edi
  403874:	cmp    al,0x51
  403876:	jmp    esp
  403878:	mov    ds:0x66c844fa,al
  40387d:	scas   eax,DWORD PTR es:[edi]
  40387e:	(bad)  
  40387f:	test   DWORD PTR [ebp+0x8],0x36798705
  403886:	test   eax,0xcf2ed6a8
  40388b:	inc    ebp
  40388c:	lods   eax,DWORD PTR ds:[esi]
  40388d:	arpl   WORD PTR ds:0x5e30c5bc,cx
  403893:	in     al,dx
  403894:	mov    eax,ds:0x7958b198
  403899:	ins    BYTE PTR es:[edi],dx
  40389a:	adc    BYTE PTR [edx+0x0],0x6e
  40389e:	mov    ds:0x3e0679d2,al
  4038a3:	cdq    
  4038a4:	div    DWORD PTR [ecx-0x58]
  4038a7:	clc    
  4038a8:	ds jmp 0x9bf8415
  4038ae:	add    bl,dl
  4038b0:	mov    ecx,0xb59cbf4f
  4038b5:	inc    eax
  4038b6:	push   0xffffff81
  4038b8:	sahf   
  4038b9:	pop    ss
  4038ba:	xchg   edi,eax
  4038bb:	das    
  4038bc:	outs   dx,BYTE PTR ds:[esi]
  4038bd:	stc    
  4038be:	pop    ss
  4038bf:	jnp    0x403914
  4038c1:	cmp    esp,esi
  4038c3:	or     al,0xbc
  4038c5:	dec    edx
  4038c6:	ds mov al,0xdb
  4038c9:	cmp    al,0x41
  4038cb:	nop
  4038cc:	das    
  4038cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038cf:	inc    esp
  4038d0:	jge    0x403912
  4038d2:	cmp    eax,0x658b24c7
  4038d7:	gs jmp 0xfcee:0x20ecb1b7
  4038df:	sahf   
  4038e0:	outs   dx,DWORD PTR fs:[esi]
  4038e2:	and    DWORD PTR [eax+ebp*1],0x3a902d52
  4038e9:	sub    BYTE PTR [edx-0x2d],ah
  4038ec:	jp     0x4038bc
  4038ee:	pop    eax
  4038ef:	push   ss
  4038f0:	pop    edi
  4038f1:	leave  
  4038f2:	xchg   ebp,eax
  4038f3:	cdq    
  4038f4:	mov    bl,0xf6
  4038f6:	jmp    0x9039:0xee4ed3ed
  4038fd:	and    cl,0xf4
  403900:	outs   dx,BYTE PTR ds:[esi]
  403901:	add    DWORD PTR [esi+0x1e3e342],esp
  403907:	(bad)  
  403908:	cmp    BYTE PTR [ecx-0x6db90b7b],bh
  40390e:	sub    bh,BYTE PTR [esi]
  403910:	call   0x1e70bb14
  403915:	jecxz  0x4038d2
  403917:	and    edx,DWORD PTR [ebp+0x2a]
  40391a:	sbb    BYTE PTR [ecx-0x6c],bl
  40391d:	add    DWORD PTR [ecx+0x27a33ead],esi
  403923:	mov    ah,0xd8
  403925:	mov    DWORD PTR [ecx],ecx
  403927:	out    0x8c,eax
  403929:	mov    cl,0x89
  40392b:	icebp  
  40392c:	sti    
  40392d:	mov    bh,0x91
  40392f:	imul   DWORD PTR [eax]
  403931:	mov    cl,0xb5
  403933:	mov    eax,ds:0x45c82e58
  403938:	imul   eax,DWORD PTR [ebx-0x1968a0bc],0x62
  40393f:	jmp    0xa245cea9
  403944:	cld    
  403945:	shl    bh,cl
  403947:	inc    esi
  403948:	inc    esp
  403949:	fst    QWORD PTR [ecx+eax*2]
  40394c:	dec    edi
  40394d:	sub    ch,dh
  40394f:	and    dh,BYTE PTR [edx-0x5b]
  403952:	loope  0x403906
  403954:	push   ecx
  403955:	push   ds
  403956:	mov    ch,0xf1
  403958:	outs   dx,DWORD PTR ds:[esi]
  403959:	popf   
  40395a:	dec    ecx
  40395b:	mov    eax,0xc59e5286
  403960:	xlat   BYTE PTR ds:[ebx]
  403961:	xor    BYTE PTR [edx+0x55695ae],bh
  403967:	pop    esp
  403968:	jb     0x403971
  40396a:	sub    al,0x24
  40396c:	inc    ebx
  40396d:	js     0x403915
  40396f:	add    eax,0x2274ddec
  403974:	cmp    al,0x79
  403976:	inc    esi
  403977:	pop    ss
  403978:	or     al,0xaa
  40397a:	sti    
  40397b:	mov    dh,bl
  40397d:	sub    al,0x66
  40397f:	mov    dl,0x86
  403981:	push   edx
  403982:	jmp    DWORD PTR [ecx+0x1856414d]
  403988:	mov    ecx,0xde667d4d
  40398d:	jl     0x403986
  40398f:	imul   esp,DWORD PTR [esi-0x76],0x26e9dce
  403996:	dec    esi
  403997:	cmp    ebp,eax
  403999:	pop    es
  40399a:	adc    al,0x38
  40399c:	sbb    al,0xa1
  40399e:	into   
  40399f:	ins    BYTE PTR es:[edi],dx
  4039a0:	repz iret 
  4039a2:	popf   
  4039a3:	jbe    0x403953
  4039a5:	cmp    BYTE PTR [ebx-0x53],0x66
  4039a9:	into   
  4039aa:	xor    ecx,DWORD PTR [edx]
  4039ac:	adc    dh,bl
  4039ae:	inc    edx
  4039af:	cmp    al,0xa8
  4039b1:	and    al,0xa6
  4039b3:	adc    eax,0x65556514
  4039b8:	mov    gs,edi
  4039ba:	out    0x13,al
  4039bc:	pop    ebp
  4039bd:	mov    DWORD PTR [edx-0x6ac2f129],esi
  4039c3:	sti    
  4039c4:	jnp    0x403962
  4039c6:	inc    edx
  4039c7:	inc    edx
  4039c8:	xchg   BYTE PTR [esi],dl
  4039ca:	shr    DWORD PTR [esp+edx*8+0x70],0x1a
  4039cf:	ins    BYTE PTR es:[edi],dx
  4039d0:	or     eax,0x8e790fb1
  4039d5:	add    DWORD PTR [edi+edi*2-0x5c],ebx
  4039d9:	mov    eax,esp
  4039db:	push   ss
  4039dc:	fstp   TBYTE PTR [esi+0x10e31ede]
  4039e2:	js     0x4039f6
  4039e4:	push   0x1d
  4039e6:	ror    ah,cl
  4039e8:	jecxz  0x403a0f
  4039ea:	xchg   ah,al
  4039ec:	aaa    
  4039ed:	nop
  4039ee:	fimul  WORD PTR [ebp-0x4b]
  4039f1:	leave  
  4039f2:	cmp    edx,DWORD PTR [ebp+0x12]
  4039f5:	mov    dh,bh
  4039f7:	das    
  4039f8:	inc    esp
  4039f9:	adc    esi,DWORD PTR [ebx+0xcc27c04]
  4039ff:	add    edi,DWORD PTR [ecx-0x6e7405be]
  403a05:	jle    0x4039fd
  403a07:	(bad)  
  403a08:	cmp    al,BYTE PTR [esi+0x70f21e42]
  403a0e:	cld    
  403a0f:	ja     0x403a5e
  403a11:	xchg   ecx,eax
  403a12:	int    0x49
  403a14:	cmp    eax,0x7c0af5e9
  403a19:	cmp    BYTE PTR [edx+0x27],ah
  403a1c:	nop
  403a1d:	retf   0x3b7c
  403a20:	xchg   esi,eax
  403a21:	dec    ebx
  403a22:	push   edx
  403a23:	inc    ecx
  403a24:	add    DWORD PTR [eax+0x6c],ebx
  403a27:	test   bl,bh
  403a29:	ds pop esi
  403a2b:	retf   0x2b9f
  403a2e:	pop    ecx
  403a2f:	jmp    0x3c409cfe
  403a34:	adc    BYTE PTR [edi+0x45],ch
  403a37:	add    al,0x47
  403a39:	test   DWORD PTR es:[edx-0x520c2a3a],edx
  403a40:	fimul  WORD PTR [eax+0x6792e154]
  403a46:	inc    edx
  403a47:	sub    DWORD PTR [eax],0x4d0eb56b
  403a4d:	sahf   
  403a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a4f:	imul   ebx,DWORD PTR [eax-0x1fa4f52c],0xe916e084
  403a59:	dec    esp
  403a5a:	sahf   
  403a5b:	call   0xd852f938
  403a60:	jae    0x403aa7
  403a62:	in     al,0x8f
  403a64:	dec    BYTE PTR [ebx+0x53]
  403a67:	cmp    dh,dh
  403a69:	test   BYTE PTR [ecx+esi*8],cl
  403a6c:	das    
  403a6d:	or     BYTE PTR [ecx],0x74
  403a70:	ja     0x403aa6
  403a72:	and    bl,BYTE PTR [ebx]
  403a74:	retf   
  403a75:	inc    ebx
  403a76:	test   DWORD PTR [edx+0x67],ecx
  403a79:	or     DWORD PTR [edi+0x77f3a379],0xffffff84
  403a80:	sub    al,0xa7
  403a82:	in     eax,dx
  403a83:	les    esi,FWORD PTR [ebp-0x4e112847]
  403a89:	sbb    al,0x98
  403a8b:	loop   0x403a87
  403a8d:	inc    ebp
  403a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8f:	xchg   edx,eax
  403a90:	ins    DWORD PTR es:[edi],dx
  403a91:	push   ebx
  403a92:	push   0xffffff96
  403a94:	leave  
  403a95:	adc    eax,0xe68c6fbb
  403a9a:	sbb    BYTE PTR [ecx-0x76],ch
  403a9d:	sahf   
  403a9e:	mov    ?,ebx
  403aa0:	xor    bl,BYTE PTR [ebp+0x6f]
  403aa3:	pop    ebp
  403aa4:	mov    ah,0x30
  403aa6:	pusha  
  403aa7:	xchg   esp,eax
  403aa8:	int    0xab
  403aaa:	pushf  
  403aab:	lods   eax,DWORD PTR ds:[esi]
  403aac:	je     0x403b25
  403aae:	out    dx,al
  403aaf:	fmul   QWORD PTR [edi]
  403ab1:	sahf   
  403ab2:	fcmovnu st,st(6)
  403ab4:	jmp    0xee05a46d
  403ab9:	mov    eax,0x246e9881
  403abf:	sar    DWORD PTR [ebx-0x76],cl
  403ac2:	inc    ebx
  403ac3:	sub    BYTE PTR [ecx+ecx*8+0xa],dl
  403ac7:	js     0x403b0c
  403ac9:	sahf   
  403aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403acb:	xchg   edx,eax
  403acc:	push   ds
  403acd:	fisubr WORD PTR [esi+0x6cab4a7c]
  403ad3:	scas   eax,DWORD PTR es:[edi]
  403ad4:	pop    ebp
  403ad5:	pop    ebx
  403ad6:	(bad)  [edx+0x7098ec7d]
  403adc:	arpl   ax,bx
  403ade:	inc    edx
  403adf:	adc    ecx,DWORD PTR [edx-0x337b82a3]
  403ae5:	xchg   ebp,eax
  403ae6:	push   ds
  403ae7:	or     DWORD PTR [edx-0x7cf0d1df],edi
  403aed:	mov    ch,0x9b
  403aef:	and    bh,ch
  403af1:	mov    dh,0x5e
  403af3:	jle    0x403b5b
  403af5:	test   DWORD PTR [ebx],edx
  403af7:	fild   QWORD PTR [ebx-0x4a49755b]
  403afd:	push   es
  403afe:	ror    DWORD PTR [ecx],0x3
  403b01:	sbb    al,0xd7
  403b03:	cmp    eax,0x3f0a4484
  403b08:	gs inc ecx
  403b0a:	add    eax,0xa92a5e1f
  403b0f:	sub    ebp,DWORD PTR [ebx-0x5e]
  403b12:	in     al,0x69
  403b14:	inc    eax
  403b15:	mov    cl,0xbf
  403b17:	jbe    0x403b11
  403b19:	rcl    BYTE PTR [edi+eiz*2+0xdc1f75],cl
  403b20:	jne    0x403b01
  403b22:	jp     0x403ade
  403b24:	dec    esi
  403b25:	inc    eax
  403b26:	or     edx,DWORD PTR [ebx+0x57a5ee7]
  403b2c:	add    al,ch
  403b2e:	clc    
  403b2f:	ins    DWORD PTR es:[edi],dx
  403b30:	fisub  DWORD PTR [edx-0x6d]
  403b33:	add    bh,bl
  403b35:	ret    0x3b00
  403b38:	cmp    eax,0xcad7ba93
  403b3d:	xchg   ecx,eax
  403b3e:	cs inc eax
  403b40:	adc    cl,BYTE PTR [esi+0x68]
  403b43:	neg    esi
  403b45:	pop    ds
  403b46:	mov    ebp,?
  403b48:	push   edi
  403b49:	push   esi
  403b4a:	push   0x51
  403b4c:	sub    al,0x31
  403b4e:	call   0x8c840e2e
  403b53:	jmp    0xb361804f
  403b58:	sbb    DWORD PTR [edi],esp
  403b5a:	adc    edi,DWORD PTR [eax+eax*8-0x741c56aa]
  403b61:	jmp    0x403ae5
  403b63:	out    0x15,eax
  403b65:	cwde   
  403b66:	popw   fs
  403b69:	loope  0x403b7c
  403b6b:	push   ebp
  403b6c:	cmp    al,0xd8
  403b6f:	dec    eax
  403b70:	mov    esp,0xdafe7980
  403b75:	arpl   WORD PTR [eax-0x6a5a781b],bx
  403b7b:	je     0x403b7e
  403b7d:	adc    al,BYTE PTR [edi+0x4087bf47]
  403b83:	dec    eax
  403b84:	test   eax,0x18f77b17
  403b89:	mov    WORD PTR ds:0x8eb221da,gs
  403b8f:	mov    eax,0xd3508c75
  403b94:	dec    ecx
  403b95:	push   ds
  403b96:	jecxz  0x403b26
  403b98:	call   0xf84ec964
  403b9d:	int    0xb8
  403b9f:	icebp  
  403ba0:	popa   
  403ba1:	repz mov edx,0x91d17c5
  403ba7:	enter  0xb3c3,0x30
  403bab:	sub    ch,BYTE PTR [edi-0x142f7aff]
  403bb1:	inc    esi
  403bb2:	test   BYTE PTR [edi],dh
  403bb4:	pusha  
  403bb5:	sti    
  403bb6:	arpl   WORD PTR [ebx],ax
  403bb8:	fcomp  QWORD PTR [edx+edi*1+0x59a55904]
  403bbf:	(bad)  
  403bc0:	std    
  403bc1:	mov    ds:0xea9c1c8b,al
  403bc6:	xor    al,0x6f
  403bc8:	sub    BYTE PTR [esp+esi*8+0x36],0xf1
  403bcd:	and    BYTE PTR ds:0x70277fab,bh
  403bd3:	pop    esi
  403bd4:	popf   
  403bd5:	pop    esi
  403bd6:	sbb    al,0xa5
  403bd8:	mov    ?,WORD PTR [edx+0x32]
  403bdb:	mov    edi,0xd59e7228
  403be0:	icebp  
  403be1:	dec    ecx
  403be2:	cmc    
  403be3:	popa   
  403be4:	or     dh,BYTE PTR [eiz*1+0x56d36c60]
  403beb:	adc    BYTE PTR [edi+0x33769902],dl
  403bf1:	mov    ecx,0xeb3add7c
  403bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf7:	rol    bl,0x28
  403bfa:	sbb    al,0x40
  403bfc:	stos   DWORD PTR es:[edi],eax
  403bfd:	(bad)  
  403bfe:	loope  0x403ba2
  403c00:	push   0xfb032f66
  403c05:	add    bl,ah
  403c07:	sbb    ebp,DWORD PTR [ecx+eiz*1]
  403c0a:	hlt    
  403c0b:	test   BYTE PTR [ebx-0x2a],ch
  403c0e:	fcomi  st,st(2)
  403c10:	les    eax,FWORD PTR [eax+esi*8]
  403c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c14:	bound  edx,QWORD PTR [ebx]
  403c16:	mov    bh,0x9e
  403c18:	pop    edx
  403c19:	and    eax,0x40e4109b
  403c1e:	xor    al,0xbc
  403c20:	popa   
  403c21:	inc    ebx
  403c22:	dec    esp
  403c23:	ficomp WORD PTR [esi+ecx*2-0x2f07d471]
  403c2a:	arpl   WORD PTR [edx-0x2a],bp
  403c2d:	push   edi
  403c2e:	aas    
  403c2f:	mov    ds:0xa99c4803,al
  403c34:	adc    DWORD PTR [edi],ebp
  403c36:	mov    ecx,0x7c2e50e0
  403c3b:	(bad)  
  403c3d:	hlt    
  403c3e:	cmp    ebx,DWORD PTR fs:0x5b19d769
  403c45:	dec    esi
  403c46:	add    dl,BYTE PTR [ecx-0x7c]
  403c49:	add    al,0xd8
  403c4b:	aaa    
  403c4c:	test   DWORD PTR [eax+0x5463cea0],ebx
  403c52:	and    eax,0x22c42f68
  403c57:	dec    esi
  403c58:	add    ah,BYTE PTR [edx]
  403c5a:	sbb    eax,0x61eab934
  403c5f:	jb     0x403c7c
  403c61:	sbb    DWORD PTR [ebp-0x7a],esi
  403c64:	pop    ebx
  403c65:	jno    0x403cd0
  403c67:	idiv   DWORD PTR [ebp+0x6b]
  403c6a:	mov    esp,0x45f31cab
  403c6f:	push   esi
  403c70:	jbe    0x403c9f
  403c72:	xor    eax,0x4e0902f7
  403c77:	loopne 0x403c24
  403c79:	xor    ah,BYTE PTR [ebx+0x1b8470e2]
  403c7f:	into   
  403c80:	stos   BYTE PTR es:[edi],al
  403c81:	push   cs
  403c82:	bound  edx,QWORD PTR [edi+eiz*2-0x570e6db2]
  403c89:	in     eax,dx
  403c8a:	pop    es
  403c8b:	fldenv [eax-0x4e]
  403c8e:	mov    esp,0xc33590b6
  403c93:	mov    cl,0xad
  403c95:	out    0x4f,al
  403c97:	add    ch,ah
  403c99:	es push edx
  403c9b:	sbb    al,BYTE PTR [eax*1-0x243c027e]
  403ca2:	cmc    
  403ca3:	or     esi,DWORD PTR [ebx-0x17]
  403ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca7:	pop    ds
  403ca8:	loop   0x403cb5
  403caa:	fld    QWORD PTR [ebp-0x3d]
  403cad:	jecxz  0x403cb4
  403caf:	xchg   BYTE PTR [ebp+0x2f7daa81],al
  403cb5:	call   0xb633:0x653601db
  403cbc:	fidiv  WORD PTR [eax+0x4354a09b]
  403cc2:	data16 or BYTE PTR [esi],bh
  403cc5:	sub    edx,0xed7d1ebc
  403ccb:	clc    
  403ccc:	sub    al,BYTE PTR [eax-0x6d]
  403ccf:	jg     0x403cb0
  403cd1:	(bad)  
  403cd2:	jge    0x403d2f
  403cd4:	(bad)  
  403cd5:	pop    ds
  403cd6:	xor    esp,edx
  403cd8:	or     dl,BYTE PTR [edi+ecx*2+0x7abcc27c]
  403cdf:	ss dec esp
  403ce1:	iret   
  403ce2:	(bad)  
  403ce3:	push   esi
  403ce4:	and    cl,BYTE PTR ds:[edi+ebx*1]
  403ce8:	jecxz  0x403d3c
  403cea:	pop    eax
  403ceb:	scas   al,BYTE PTR es:[edi]
  403cec:	or     edi,ebx
  403cee:	mov    ds:0x3378bb72,al
  403cf3:	pop    edi
  403cf4:	add    DWORD PTR ds:0x9d8cc044,0x3a
  403cfb:	xor    DWORD PTR [esi],0x66
  403cfe:	int3   
  403cff:	xor    al,0xfa
  403d01:	add    edx,DWORD PTR [ebx]
  403d03:	rcr    DWORD PTR [edx+0x43bc3894],cl
  403d09:	mov    bh,0xa5
  403d0b:	dec    esp
  403d0c:	sbb    ah,ch
  403d0e:	jns    0x403cb6
  403d10:	neg    bl
  403d12:	sbb    ah,ch
  403d14:	sbb    eax,0x53e62d01
  403d19:	in     al,dx
  403d1a:	stos   BYTE PTR es:[edi],al
  403d1b:	inc    ebp
  403d1c:	mov    esp,0x2be41103
  403d21:	jmp    0x5f0a:0xe7a1c6d6
  403d28:	cdq    
  403d29:	repz push 0x4c76f10f
  403d2f:	sub    al,0xd8
  403d31:	and    eax,0x2ffe9b90
  403d36:	leave  
  403d37:	(bad)  
  403d39:	adc    ah,BYTE PTR [ebp+0x218665b9]
  403d3f:	sbb    BYTE PTR [edi+0x53],al
  403d42:	pushf  
  403d43:	jno    0x403d0f
  403d45:	sbb    ebp,ecx
  403d47:	add    edi,DWORD PTR [edx]
  403d49:	mov    edi,0x62fcd279
  403d4e:	cmp    esp,ebx
  403d50:	std    
  403d51:	fwait
  403d52:	mov    ebx,0x815d9ea1
  403d57:	xor    BYTE PTR [eax-0x63],0xa9
  403d5b:	push   esp
  403d5c:	inc    edi
  403d5d:	inc    ebp
  403d5e:	loope  0x403cf1
  403d60:	push   ebx
  403d61:	xchg   ecx,eax
  403d62:	aas    
  403d63:	leave  
  403d64:	out    dx,al
  403d65:	mov    al,0x0
  403d67:	add    al,0x8f
  403d69:	inc    ebx
  403d6a:	or     esi,DWORD PTR ds:0x52431cd5
  403d70:	fwait
  403d71:	xchg   esi,eax
  403d72:	fidivr DWORD PTR [ebp-0x4d43a982]
  403d78:	cmp    DWORD PTR [ebx],esi
  403d7a:	fcmovnu st,st(1)
  403d7c:	repz add edx,DWORD PTR [eax+0x3e03b1d6]
  403d83:	mov    edx,cs
  403d85:	or     edi,DWORD PTR ds:0x3e5eaa54
  403d8b:	repnz push es
  403d8d:	out    0xe8,eax
  403d8f:	(bad)  
  403d90:	cld    
  403d91:	scas   eax,DWORD PTR es:[edi]
  403d92:	popf   
  403d93:	inc    ebp
  403d94:	mov    esp,0x8ba4a44a
  403d99:	int3   
  403d9a:	push   ebp
  403d9b:	pop    ds
  403d9c:	mov    ebp,edi
  403d9e:	pop    eax
  403d9f:	pop    eax
  403da0:	call   0xd86c:0xc658c8f9
  403da7:	ror    al,cl
  403da9:	je     0x403dbb
  403dab:	hlt    
  403dac:	cld    
  403dad:	(bad)  
  403dae:	cmp    ch,BYTE PTR [edx]
  403db0:	pop    ebp
  403db1:	mov    ds:0x6dad4a2c,al
  403db6:	outs   dx,DWORD PTR ds:[esi]
  403db7:	mov    edx,DWORD PTR [ecx+0xf03678a]
  403dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dbe:	cmp    bh,BYTE PTR [ebp-0x4a]
  403dc1:	mov    ecx,0x8c69a5b9
  403dc6:	and    bh,bl
  403dc8:	xchg   bh,ah
  403dca:	fistp  QWORD PTR [esi+0x3ec4653c]
  403dd0:	add    DWORD PTR [eax+0x6c],0x147c92e8
  403dd7:	popa   
  403dd8:	mov    edx,0x2b3319f2
  403ddd:	scas   eax,DWORD PTR es:[edi]
  403dde:	or     eax,DWORD PTR [ebx-0x1172b053]
  403de4:	cmp    al,0xd3
  403de6:	clc    
  403de7:	push   ebx
  403de8:	push   esi
  403de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dea:	jecxz  0x403e01
  403dec:	sbb    edx,0xfffffff7
  403def:	add    eax,0xe33c39a0
  403df4:	ins    BYTE PTR es:[edi],dx
  403df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df6:	pusha  
  403df7:	dec    ecx
  403df8:	(bad)  
  403df9:	xlat   BYTE PTR ds:[ebx]
  403dfa:	mov    WORD PTR [edx],ss
  403dfc:	retf   0xfb66
  403dff:	xchg   edx,eax
  403e00:	adc    al,0xb2
  403e02:	or     eax,0xec11b4d6
  403e07:	lea    esi,[ebp-0x1b3b3e59]
  403e0d:	jmp    0x403df4
  403e0f:	test   al,0x7b
  403e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e12:	sti    
  403e13:	leave  
  403e14:	mov    al,ds:0xeee89472
  403e19:	call   0xaacc0dbd
  403e1e:	mov    ebx,0x5bffbd47
  403e23:	jb     0x403e20
  403e25:	push   esp
  403e26:	sub    eax,0xecd0a314
  403e2b:	ins    DWORD PTR es:[edi],dx
  403e2c:	pop    edi
  403e2d:	inc    edx
  403e2e:	(bad)  
  403e30:	sub    al,0xa2
  403e32:	jecxz  0x403e92
  403e34:	xchg   BYTE PTR [di],al
  403e37:	sbb    cx,WORD PTR [edx-0x3]
  403e3b:	out    dx,al
  403e3c:	addr16 addr16 jg 0x403e9d
  403e40:	les    esi,FWORD PTR [esi]
  403e42:	mov    ebx,0x79a08773
  403e47:	popa   
  403e48:	add    BYTE PTR [ecx+eax*1+0x235bb096],cl
  403e4f:	je     0x403dff
  403e51:	lahf   
  403e52:	rol    BYTE PTR [ecx+0x32],cl
  403e55:	lods   eax,DWORD PTR ds:[esi]
  403e56:	es dec ecx
  403e58:	je     0x403ed1
  403e5a:	mov    ah,0xfc
  403e5c:	push   es
  403e5d:	pop    ss
  403e5e:	test   edx,ebx
  403e60:	inc    edx
  403e61:	pop    eax
  403e62:	push   ds
  403e63:	mov    al,0x23
  403e65:	mov    ecx,0x802a2a2f
  403e6a:	mov    esp,0x7ebe127f
  403e6f:	push   edi
  403e70:	pop    edi
  403e71:	(bad)  
  403e72:	jg     0x403ee3
  403e74:	nop
  403e75:	test   al,0x47
  403e77:	jb     0x403e03
  403e79:	xchg   edx,eax
  403e7a:	xor    BYTE PTR [ecx],cl
  403e7c:	ds aam 0x80
  403e7f:	stc    
  403e80:	(bad)  
  403e81:	cmovns esi,DWORD PTR [eax-0x6e]
  403e85:	adc    al,0x1f
  403e87:	xlat   BYTE PTR ds:[ebx]
  403e88:	call   esp
  403e8a:	dec    ebp
  403e8b:	xchg   edx,eax
  403e8c:	mov    eax,ecx
  403e8e:	pushf  
  403e8f:	je     0x403e42
  403e91:	mov    dh,0xf
  403e93:	jnp    0x403e88
  403e95:	or     al,0x18
  403e97:	and    eax,0x26e6a707
  403e9c:	pop    eax
  403e9d:	fisttp QWORD PTR [edx+0x7017a186]
  403ea3:	mov    eax,0x1d52207e
  403ea8:	popa   
  403ea9:	inc    esi
  403eaa:	add    eax,0xe4b31d9f
  403eaf:	mov    dh,0x78
  403eb1:	(bad)  
  403eb2:	out    dx,al
  403eb3:	inc    edx
  403eb4:	call   0x3aa1:0x2447e129
  403ebb:	xor    al,0x9a
  403ebd:	rol    DWORD PTR [esi+0x78],0x3
  403ec1:	push   es
  403ec2:	inc    esi
  403ec3:	xor    DWORD PTR [eax-0x409707ed],edx
  403ec9:	pop    es
  403eca:	dec    ebp
  403ecb:	mov    cl,0xfe
  403ecd:	ret    
  403ece:	rcr    BYTE PTR [edx-0x30],cl
  403ed1:	fst    QWORD PTR ds:0x46bdc09
  403ed7:	iret   
  403ed8:	jmp    0x4cc6a54
  403edd:	rol    DWORD PTR [eax],cl
  403edf:	(bad)  
  403ee0:	das    
  403ee1:	add    eax,0x59cafbe4
  403ee6:	jg     0x403e8d
  403ee8:	shl    BYTE PTR [eax+0x5d444400],cl
  403eee:	jl     0x403e77
  403ef0:	pop    ss
  403ef1:	shr    DWORD PTR [eax+edi*1-0x63927c66],0xb9
  403ef9:	jg     0x403ed4
  403efb:	push   eax
  403efc:	mov    ch,0xcf
  403efe:	xchg   ebx,eax
  403eff:	daa    
  403f00:	push   0x28
  403f02:	lods   al,BYTE PTR ds:[esi]
  403f03:	out    dx,eax
  403f04:	xor    al,0x53
  403f06:	shl    dl,cl
  403f08:	dec    BYTE PTR [ebx]
  403f0a:	aam    0x5e
  403f0c:	call   0xa282:0xa6076fa8
  403f13:	pop    edx
  403f14:	ficomp DWORD PTR [ecx+0x33]
  403f17:	dec    esi
  403f18:	mov    eax,ds:0x88007a7a
  403f1d:	add    eax,0x1cc76251
  403f22:	js     0x403f43
  403f24:	adc    ebp,DWORD PTR [edx+0x13]
  403f27:	jnp    0x403ee7
  403f29:	push   es
  403f2a:	(bad)  
  403f2b:	mov    al,0x74
  403f2d:	hlt    
  403f2e:	cmp    dl,al
  403f30:	sbb    eax,0x19f549f1
  403f35:	xchg   BYTE PTR [ebp-0x29],bh
  403f38:	(bad)  
  403f39:	xchg   edx,eax
  403f3a:	test   DWORD PTR [esi+edx*4-0x40],0x1ae1e263
  403f42:	mov    ecx,0x9f746f40
  403f47:	mov    WORD PTR [ecx+0x65],?
  403f4a:	outs   dx,DWORD PTR ds:[esi]
  403f4b:	inc    esi
  403f4c:	add    al,0xab
  403f4e:	xchg   ebx,eax
  403f4f:	out    0x2a,eax
  403f51:	and    al,0xb3
  403f53:	mov    ds:0x88c10918,eax
  403f58:	dec    edx
  403f59:	mov    bl,0x49
  403f5b:	pop    eax
  403f5c:	lods   al,BYTE PTR ds:[esi]
  403f5d:	mov    edi,0x53597766
  403f62:	xchg   ebx,eax
  403f63:	hlt    
  403f64:	shl    BYTE PTR [ebx-0x1ba32b81],0x93
  403f6b:	fwait
  403f6c:	pop    esp
  403f6d:	lea    eax,[edx]
  403f6f:	adc    dh,BYTE PTR [ebx-0x14162388]
  403f75:	int    0xa1
  403f77:	pop    ebx
  403f78:	xchg   ebp,eax
  403f79:	mov    ecx,0xace35361
  403f7e:	and    al,0xff
  403f80:	and    bh,BYTE PTR [eax*1-0x23c5112b]
  403f87:	jne    0x403f3c
  403f89:	mov    ah,0xf
  403f8b:	pushf  
  403f8c:	jnp    0x403fac
  403f8e:	ret    0x5a51
  403f91:	ss push edx
  403f93:	add    DWORD PTR [edx],edx
  403f95:	test   al,0x87
  403f97:	and    bh,bh
  403f99:	out    dx,eax
  403f9a:	or     BYTE PTR [edx-0x208d7a6],bl
  403fa0:	dec    edi
  403fa1:	jg     0x403f4b
  403fa3:	ja     0x403f3f
  403fa5:	mov    edi,0x67ed52c8
  403faa:	into   
  403fab:	mov    esp,0x98affda0
  403fb0:	test   eax,0x4e92a9e
  403fb5:	ds push eax
  403fb7:	loope  0x40402b
  403fb9:	pop    eax
  403fba:	sub    BYTE PTR [ecx-0x46],dh
  403fbd:	lock xchg DWORD PTR [di-0x7174],ebp
  403fc3:	pop    ecx
  403fc4:	sub    bl,ah
  403fc6:	retf   0xbc11
  403fc9:	dec    ecx
  403fca:	sti    
  403fcb:	ja     0x403f84
  403fcd:	shl    BYTE PTR [ecx-0x80],cl
  403fd0:	ins    DWORD PTR es:[edi],dx
  403fd1:	adc    al,0x71
  403fd3:	ins    BYTE PTR es:[edi],dx
  403fd4:	imul   edx,DWORD PTR [ecx+0x67756906],0x29
  403fdb:	pop    ds
  403fdc:	xchg   ah,cl
  403fde:	(bad)  
  403fe0:	jnp    0x403f99
  403fe2:	shr    WORD PTR [ebx-0x2d0839fb],0x65
  403fea:	add    DWORD PTR [edi+ebp*1+0x44b278eb],edx
  403ff1:	add    BYTE PTR [edi],0x85
  403ff4:	pushf  
  403ff5:	sar    cl,1
  403ff7:	push   ebx
  403ff8:	or     esp,esi
  403ffa:	daa    
  403ffb:	mov    edi,0x37a9fc9c
  404000:	cmc    
  404001:	xchg   esp,eax
  404002:	sub    BYTE PTR [eax+0x5e],0x19
  404006:	xchg   BYTE PTR [esi-0x4935be45],ah
  40400c:	test   eax,0x1df2a8e1
  404011:	push   ebx
  404012:	mov    BYTE PTR [ebp+0x4bc70953],dh
  404018:	inc    ecx
  404019:	mov    esi,0x5101e21e
  40401e:	mov    ebx,0xaf6caac1
  404024:	fild   WORD PTR [ebx+0x2f98b05e]
  40402a:	fbld   TBYTE PTR ds:0x4425682d
  404030:	xor    DWORD PTR [esi+0x40],esi
  404033:	inc    esp
  404034:	and    al,0xe8
  404036:	push   ds
  404037:	inc    ebx
  404038:	out    dx,eax
  404039:	mov    ebp,edx
  40403b:	pop    ebx
  40403c:	test   BYTE PTR [esi-0x5d],dh
  40403f:	out    dx,al
  404040:	xor    DWORD PTR [ebx-0x47],0xe8eb0aaf
  404047:	cmp    esp,esi
  404049:	clc    
  40404a:	in     al,dx
  40404b:	pop    ecx
  40404c:	jae    0x403fe7
  40404e:	push   cs
  40404f:	jae    0x403ff6
  404051:	jne    0x403fde
  404053:	mov    al,0x98
  404055:	jl     0x4040ad
  404057:	jo     0x404046
  404059:	push   esp
  40405a:	pushw  0x6bc0
  40405e:	and    BYTE PTR [eax-0x2bbf7f34],cl
  404064:	add    DWORD PTR [ebx],0x61
  404067:	les    edi,FWORD PTR [edx+eiz*4-0x45]
  40406b:	push   esi
  40406c:	and    al,bl
  40406e:	loope  0x404059
  404070:	sub    BYTE PTR [edx-0x70],cl
  404073:	jg     0x404030
  404075:	stos   BYTE PTR es:[edi],al
  404076:	iret   
  404077:	cmp    esp,DWORD PTR [eax+0x46]
  40407a:	inc    edx
  40407b:	lods   eax,DWORD PTR ds:[esi]
  40407c:	mov    edx,0x1e7c44d9
  404081:	ret    0x8287
  404084:	adc    al,0x42
  404086:	cld    
  404087:	mov    ecx,0x60c50286
  40408c:	lahf   
  40408d:	lods   eax,DWORD PTR ds:[esi]
  40408e:	add    bl,BYTE PTR [eax+0x79]
  404091:	mov    ecx,0x4118e9f9
  404096:	mov    WORD PTR [ebx+edx*4-0x77affbee],gs
  40409d:	or     DWORD PTR [ecx],edi
  40409f:	push   cs
  4040a0:	sbb    bl,0xe3
  4040a3:	xor    DWORD PTR [ecx],0xffffffb9
  4040a6:	pxor   mm3,QWORD PTR [ebx]
  4040a9:	push   ecx
  4040aa:	inc    edx
  4040ab:	out    dx,al
  4040ac:	test   eax,0x5df2b34b
  4040b1:	sbb    BYTE PTR [ebx],cl
  4040b3:	push   es
  4040b4:	leave  
  4040b5:	fld    QWORD PTR [edx]
  4040b7:	ja     0x404121
  4040b9:	or     edi,esi
  4040bb:	xor    esi,DWORD PTR [eax-0x37]
  4040be:	ret    0x61cb
  4040c1:	test   ah,al
  4040c3:	add    bh,bl
  4040c5:	scas   al,BYTE PTR es:[edi]
  4040c6:	sti    
  4040c7:	test   DWORD PTR [ebx+0x58],eax
  4040ca:	add    esp,DWORD PTR [edi+0x34dbaba5]
  4040d0:	sahf   
  4040d1:	out    0xdf,eax
  4040d3:	in     al,dx
  4040d4:	xchg   esp,eax
  4040d5:	add    DWORD PTR [ebx],eax
  4040d7:	dec    edi
  4040d8:	fnstenv [ecx+0x7833da4d]
  4040de:	rcl    BYTE PTR [edx+0x47db57de],1
  4040e4:	or     BYTE PTR [ebx-0xe],cl
  4040e7:	add    eax,DWORD PTR [eax-0x3d]
  4040ea:	fcom   DWORD PTR [ebp-0x48]
  4040ed:	jbe    0x404119
  4040ef:	pushf  
  4040f0:	mov    ah,BYTE PTR [esi+eax*1]
  4040f3:	xchg   esi,eax
  4040f4:	out    0xac,al
  4040f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040f7:	fwait
  4040f8:	pop    ebp
  4040f9:	repz ds xchg esi,eax
  4040fc:	arpl   WORD PTR ds:[esi+0x1ecbea48],ax
  404103:	adc    DWORD PTR [esi-0x78372e15],esi
  404109:	stos   DWORD PTR es:[edi],eax
  40410a:	push   ebx
  40410b:	cmp    BYTE PTR [ebp-0x54],ah
  40410e:	pop    ecx
  40410f:	jmp    0x78ed:0x56b8c8e4
  404116:	jbe    0x40409f
  404118:	pop    es
  404119:	ins    DWORD PTR es:[edi],dx
  40411a:	cmp    bh,BYTE PTR gs:[ecx+ebp*2-0x2d]
  40411f:	add    eax,0xf5762692
  404124:	ins    DWORD PTR es:[edi],dx
  404125:	sbb    ebp,edx
  404127:	cmp    ebp,DWORD PTR [ecx-0x31663b3a]
  40412d:	add    esi,DWORD PTR [edx-0x46]
  404130:	dec    esi
  404131:	dec    esi
  404132:	dec    ebp
  404133:	retf   0x890d
  404136:	inc    edi
  404137:	xor    DWORD PTR [esi-0x6b91d9dc],ebp
  40413d:	push   ebx
  40413e:	mov    ebp,DWORD PTR [ecx+0x41439d99]
  404144:	stos   DWORD PTR es:[edi],eax
  404145:	push   edi
  404146:	cmp    eax,DWORD PTR [esi-0x4b92ff0]
  40414c:	pop    ds
  40414d:	test   BYTE PTR [eax+0x6d6db2b4],cl
  404153:	mov    al,ds:0x277b8d62
  404158:	cli    
  404159:	cmp    cl,al
  40415b:	xor    dh,cl
  40415d:	add    esp,esi
  40415f:	stos   BYTE PTR es:[edi],al
  404160:	sar    BYTE PTR ds:0x160c442d,0x5d
  404167:	(bad)  
  404168:	jmp    0x2136b30e
  40416d:	cmp    al,0xf5
  40416f:	out    dx,eax
  404170:	cmp    esi,esp
  404172:	sar    DWORD PTR [edi+0x52acfc38],cl
  404178:	jb     0x404180
  40417a:	lods   eax,DWORD PTR ds:[esi]
  40417b:	push   es
  40417c:	sbb    DWORD PTR [edi],esi
  40417e:	sbb    BYTE PTR [eax],0xd5
  404181:	sub    DWORD PTR [eax],esp
  404183:	mov    eax,0xe8d45e0c
  404188:	cmp    al,0xf9
  40418a:	(bad)  
  40418b:	adc    DWORD PTR [eax+0x6ad8049b],esi
  404191:	or     cl,BYTE PTR [ebx+eiz*4-0x172d70a1]
  404198:	div    ch
  40419a:	sub    al,0x18
  40419c:	retf   
  40419d:	cbw    
  40419f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a0:	mov    dh,0x23
  4041a2:	mov    dh,0x55
  4041a4:	adc    esp,0x4
  4041a7:	jl     0x40414e
  4041a9:	(bad)  
  4041aa:	sahf   
  4041ab:	mov    bh,0xa9
  4041ad:	ins    BYTE PTR es:[edi],dx
  4041ae:	jns    0x404218
  4041b0:	nop
  4041b1:	das    
  4041b2:	test   cl,ch
  4041b4:	inc    ebp
  4041b5:	int    0x3a
  4041b7:	repz out 0xc1,eax
  4041ba:	pop    ss
  4041bb:	inc    esp
  4041bc:	sub    cl,BYTE PTR [esi+edi*4-0x4b950d92]
  4041c3:	gs inc ebx
  4041c5:	sub    esi,DWORD PTR [edx+0x5dcf55eb]
  4041cb:	ds nop
  4041cd:	stos   DWORD PTR es:[edi],eax
  4041ce:	retf   
  4041cf:	cdq    
  4041d0:	dec    esi
  4041d1:	outs   dx,BYTE PTR ds:[esi]
  4041d2:	imul   edi,esi,0x57
  4041d5:	cwde   
  4041d6:	xor    al,0xf0
  4041d8:	dec    eax
  4041d9:	aad    0x5c
  4041db:	dec    eax
  4041dc:	mov    dh,0x88
  4041de:	sub    ebx,DWORD PTR [edx+0x3a]
  4041e1:	jle    0x4041de
  4041e3:	push   0x70
  4041e5:	jb     0x404183
  4041e7:	dec    edx
  4041e8:	mov    ecx,0x229a8244
  4041ed:	xor    eax,0xbc086a80
  4041f2:	sbb    al,0x86
  4041f4:	xchg   edi,eax
  4041f5:	(bad)  
  4041f6:	adc    dh,dl
  4041f8:	iret   
  4041f9:	fnstcw WORD PTR [edi*4-0x24d8d7df]
  404200:	pop    esi
  404201:	loopne 0x4041e2
  404203:	fs pop ss
  404205:	les    ecx,FWORD PTR [ebx]
  404207:	(bad)  
  404208:	mov    DWORD PTR [esi],esp
  40420a:	hlt    
  40420b:	jb     0x4041c2
  40420d:	or     esp,DWORD PTR [edx-0x6ba83c2b]
  404213:	cmp    BYTE PTR ds:0xd827c588,bl
  404219:	fisttp DWORD PTR ds:0xbf381e9a
  40421f:	call   FWORD PTR [edx]
  404221:	les    esi,FWORD PTR ds:[esi]
  404224:	jnp    0x4041b2
  404226:	in     al,dx
  404227:	jge    0x4041ac
  404229:	adc    al,0x97
  40422b:	jnp    0x4041d8
  40422d:	pop    edi
  40422e:	mov    ?,WORD PTR [ecx+0x6b]
  404231:	or     ebx,DWORD PTR [ecx-0x5d53c291]
  404237:	(bad)  
  404238:	in     al,0xd7
  40423a:	test   eax,0xec0a2a7
  40423f:	sub    dh,dl
  404241:	es ins BYTE PTR es:[edi],dx
  404243:	neg    BYTE PTR [esp+edi*1]
  404246:	pop    esp
  404247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404248:	push   fs
  40424a:	and    bl,BYTE PTR [ecx]
  40424c:	lods   al,BYTE PTR ds:[esi]
  40424d:	and    eax,0xb62a9b4
  404252:	fcmovu st,st(6)
  404254:	(bad)  
  404255:	cmp    esp,DWORD PTR [eax+ebp*2-0x39]
  404259:	enter  0xda79,0x8d
  40425d:	mov    dl,0xe8
  40425f:	fsubr  QWORD PTR [eax-0x7ad73d41]
  404265:	clc    
  404266:	dec    ebp
  404267:	jmp    0x7d6b6fe5
  40426c:	adc    ah,bl
  40426e:	arpl   WORD PTR [esi-0x1d4cdfc],bx
  404274:	ret    
  404275:	mov    edi,0x185f22
  40427a:	push   edx
  40427b:	push   ss
  40427c:	pop    edi
  40427d:	stos   BYTE PTR es:[edi],al
  40427e:	jmp    0x97ea:0x6779ca50
  404285:	call   0x86accea6
  40428a:	popa   
  40428b:	cvtdq2ps xmm6,XMMWORD PTR [eax]
  40428e:	sbb    al,0xb9
  404290:	pop    eax
  404291:	addr16 mov ds:0xc2a7,eax
  404295:	test   al,0x40
  404297:	push   ecx
  404298:	inc    edi
  404299:	jecxz  0x404259
  40429b:	or     DWORD PTR cs:[ebp-0x5a],eax
  40429f:	not    DWORD PTR [ecx+0x3708ddfa]
  4042a5:	shl    DWORD PTR [ebx+ebp*1-0x2b8a62a9],1
  4042ac:	in     eax,0x50
  4042ae:	pop    ebp
  4042af:	jge    0x404270
  4042b1:	loopne 0x40427d
  4042b3:	mov    DWORD PTR [eax+0x40],edi
  4042b6:	push   ds
  4042b7:	jmp    0xafa47cc
  4042bc:	scas   al,BYTE PTR es:[edi]
  4042bd:	hlt    
  4042be:	xacquire xchg BYTE PTR [edi+0x13],bh
  4042c2:	jp     0x4042ae
  4042c4:	xlat   BYTE PTR ds:[ebx]
  4042c5:	and    esi,edx
  4042c7:	jae    0x404277
  4042c9:	sub    ebx,DWORD PTR [ebx]
  4042cb:	inc    ecx
  4042cc:	cwde   
  4042cd:	mov    eax,ds:0xd1d30abd
  4042d2:	jecxz  0x4042e1
  4042d4:	mov    ecx,0x624dcc42
  4042d9:	mov    eax,ds:0xd739a831
  4042de:	pop    ecx
  4042df:	ja     0x4042fe
  4042e1:	aaa    
  4042e2:	outs   dx,DWORD PTR ds:[esi]
  4042e3:	(bad)
  4042e6:	add    eax,0xb2b4756d
  4042eb:	pop    edi
  4042ec:	in     al,0x8f
  4042ee:	and    dh,BYTE PTR [edi+ebx*1+0x26]
  4042f2:	push   cs
  4042f3:	add    al,0xa5
  4042f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f6:	adc    eax,0xfb4097f2
  4042fb:	xchg   edx,eax
  4042fc:	push   ebx
  4042fd:	mov    ecx,0xb006ae25
  404302:	clc    
  404303:	and    ch,BYTE PTR [eax]
  404305:	and    dh,BYTE PTR [ebp-0x77]
  404308:	adc    ecx,ebp
  40430a:	cmp    al,0x37
  40430c:	pmulhuw mm7,QWORD PTR [ebp-0x82ed81]
  404313:	add    DWORD PTR [eax+0x39],edx
  404316:	in     eax,dx
  404317:	pop    eax
  404318:	add    DWORD PTR [edi-0xe],ebp
  40431b:	pop    ds
  40431c:	jp     0x40436e
  40431e:	fnstcw WORD PTR ds:0x87c9ee71
  404324:	mov    ds,WORD PTR [eax]
  404326:	(bad)  
  404328:	push   esi
  404329:	mov    ds,WORD PTR [eax+eax*8+0x21]
  40432d:	xchg   ebx,esi
  40432f:	xchg   DWORD PTR [edx+0x5d959632],edx
  404335:	pushf  
  404336:	and    DWORD PTR [edx-0x555fb991],0xd9cf722e
  404340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404341:	cmp    DWORD PTR [esi],0x682638e5
  404347:	dec    ebx
  404348:	push   ecx
  404349:	scas   al,BYTE PTR es:[edi]
  40434a:	sti    
  40434b:	dec    edi
  40434c:	fs inc esi
  40434e:	mov    al,ds:0x15be1509
  404353:	rcl    BYTE PTR [eax+eax*1+0x41],1
  404357:	out    0xd9,al
  404359:	jnp    0x404385
  40435b:	cmp    BYTE PTR [eax-0x56fc718d],bl
  404361:	inc    esi
  404362:	push   eax
  404363:	adc    DWORD PTR [ecx+edi*8],0xffffffd7
  404367:	and    eax,0x378f6e7d
  40436c:	dec    esp
  40436d:	pop    ecx
  40436e:	out    dx,eax
  40436f:	fs mov ch,0x5b
  404372:	in     al,dx
  404373:	inc    ecx
  404374:	mul    ch
  404376:	arpl   cx,cx
  404378:	popf   
  404379:	loope  0x404312
  40437b:	sti    
  40437c:	xchg   esi,eax
  40437d:	xchg   BYTE PTR [edi+edx*1],cl
  404380:	into   
  404381:	jle    0x4043cd
  404383:	imul   eax,esp,0x6f9631e1
  404389:	sti    
  40438a:	sub    eax,0x44e2302e
  40438f:	ja     0x404404
  404391:	mov    al,ds:0x56ea9f6c
  404396:	enter  0xed4b,0x6c
  40439a:	clc    
  40439b:	ret    0x97d0
  40439e:	jecxz  0x404385
  4043a0:	mov    dh,0xe
  4043a2:	fnstenv [ebp+0x46adebc6]
  4043a8:	ret    
  4043a9:	mov    BYTE PTR [ecx-0x1c],al
  4043ac:	fs ret 0x3cbd
  4043b0:	(bad)  
  4043b1:	xchg   ecx,eax
  4043b2:	dec    ebp
  4043b3:	mov    ds:0x96c827e4,al
  4043b8:	and    edx,DWORD PTR [ebx+0x64]
  4043bb:	xchg   esi,eax
  4043bc:	and    bl,BYTE PTR [edi+0x2849899c]
  4043c2:	dec    esi
  4043c3:	push   cs
  4043c4:	and    al,0x63
  4043c6:	lds    edi,FWORD PTR [edi]
  4043c8:	popf   
  4043c9:	je     0x404424
  4043cb:	dec    edi
  4043cc:	jnp    0x404385
  4043ce:	adc    edi,0x88e6be81
  4043d4:	mov    dl,0x66
  4043d6:	fucomip st,st(6)
  4043d8:	sahf   
  4043d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043da:	ja     0x404392
  4043dc:	adc    DWORD PTR [eax+0x5c],edi
  4043df:	add    DWORD PTR [eax-0x304cc03c],ecx
  4043e5:	int3   
  4043e6:	cld    
  4043e7:	pop    esi
  4043e8:	dec    eax
  4043e9:	adc    DWORD PTR [esi],ebp
  4043eb:	loopne 0x4043ae
  4043ed:	iret   
  4043ee:	lock (bad) 
  4043f0:	pop    ecx
  4043f1:	and    DWORD PTR ds:0xa0ed6d7a,ebx
  4043f7:	dec    edx
  4043f8:	imul   ebp,DWORD PTR [esp+esi*1-0x79c2d80d],0x48
  404400:	cmc    
  404401:	push   ebx
  404402:	ret    0x32a1
  404405:	fidiv  WORD PTR [ecx]
  404407:	xchg   esi,eax
  404408:	mov    esi,0xb2eaac3
  40440d:	je     0x404478
  40440f:	mov    esi,0x70d9a247
  404414:	aaa    
  404415:	adc    cl,BYTE PTR [edi-0x48]
  404418:	sbb    eax,0xb358d81f
  40441d:	repz sbb al,0x3b
  404420:	scas   eax,DWORD PTR es:[edi]
  404421:	push   0xee53d5d6
  404426:	mov    bl,0x1c
  404428:	fcomi  st,st(6)
  40442a:	pop    ecx
  40442b:	ror    dh,0xb5
  40442e:	adc    eax,0x604c86d2
  404433:	(bad)
  404436:	mov    ds:0xf2c9619f,al
  40443b:	sub    al,0x7e
  40443d:	xchg   esp,eax
  40443e:	fs or  ebx,ecx
  404441:	and    BYTE PTR ds:0x58d71e08,0x19
  404448:	les    ebx,FWORD PTR [ebx-0x634c2362]
  40444e:	icebp  
  40444f:	push   cs
  404450:	pop    ecx
  404451:	mov    edx,0x37be347b
  404456:	pop    esp
  404457:	mov    edx,0x63e3d250
  40445c:	imul   ecx,DWORD PTR [ecx],0x1993995b
  404462:	cdq    
  404463:	pop    ebp
  404464:	or     al,0x59
  404466:	jno    0x40446b
  404468:	cwde   
  404469:	xor    al,0x9a
  40446b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446c:	fdivp  st(3),st
  40446e:	sub    BYTE PTR [ebx-0x70795276],dl
  404474:	(bad)  
  404475:	xor    ebx,DWORD PTR [ebx+0x7cd162e7]
  40447b:	jo     0x4044ae
  40447d:	add    DWORD PTR [esi-0x33],0x39
  404481:	jl     0x40442c
  404483:	outs   dx,BYTE PTR ds:[esi]
  404484:	jp     0x404505
  404486:	jmp    0xc6023463
  40448b:	dec    eax
  40448c:	dec    ecx
  40448d:	push   0x3c
  40448f:	push   esi
  404490:	and    DWORD PTR [ecx],esi
  404492:	bound  ebp,QWORD PTR [eax-0xa]
  404495:	shr    ecx,cl
  404497:	clc    
  404498:	mov    dl,0x2a
  40449a:	xchg   ecx,eax
  40449b:	or     eax,0xaf2182fd
  4044a0:	mov    BYTE PTR [edx+edx*8+0x18d08e61],bh
  4044a7:	push   0x8209f579
  4044ac:	repnz or cl,BYTE PTR [ecx+edi*2-0x5269c173]
  4044b4:	lds    eax,FWORD PTR [esi+ebx*4]
  4044b7:	ins    BYTE PTR es:[edi],dx
  4044b8:	dec    ecx
  4044b9:	test   al,0xeb
  4044bb:	jge    0x40448b
  4044bd:	xchg   edx,eax
  4044be:	pop    ss
  4044bf:	test   dl,dl
  4044c1:	inc    edi
  4044c2:	call   0x6608f180
  4044c7:	jge    0x404493
  4044c9:	jnp    0x404509
  4044cb:	pushaw 
  4044cd:	inc    ebp
  4044ce:	addr16 loopne 0x404486
  4044d1:	sar    BYTE PTR [edi+0x3],0x53
  4044d5:	rcl    DWORD PTR [eax+edx*8+0x2297e7fa],1
  4044dc:	mov    cl,0xa6
  4044de:	jne    0x404557
  4044e0:	(bad)  
  4044e1:	cmp    ebx,DWORD PTR [ecx]
  4044e3:	mov    DWORD PTR [edx],ecx
  4044e5:	aam    0x7b
  4044e7:	iret   
  4044e8:	jns    0x404540
  4044ea:	nop
  4044eb:	inc    esp
  4044ec:	das    
  4044ed:	fsub   DWORD PTR [edx-0x678f8ebf]
  4044f3:	jmp    0x40455e
  4044f5:	fld    QWORD PTR [ecx]
  4044f7:	xor    al,0xc
  4044f9:	scas   al,BYTE PTR es:[edi]
  4044fa:	add    ebp,DWORD PTR [ecx+0x71]
  4044fd:	push   edi
  4044fe:	mov    BYTE PTR [edx],ch
  404500:	fidivr WORD PTR [ecx]
  404502:	mov    edi,0x99f2c5f
  404507:	add    ch,ah
  404509:	lods   al,BYTE PTR ds:[esi]
  40450a:	ret    
  40450b:	lods   eax,DWORD PTR ds:[esi]
  40450c:	stos   DWORD PTR es:[edi],eax
  40450d:	mov    esp,0x3a1a17dc
  404512:	adc    eax,0x9af1cf8f
  404517:	mov    ds:0xb195ded9,al
  40451c:	pusha  
  40451d:	lock ret 
  40451f:	pop    ebp
  404520:	fs test eax,0xc84cfaf2
  404526:	loop   0x404568
  404528:	outs   dx,DWORD PTR ds:[esi]
  404529:	ss push ebp
  40452b:	(bad)  
  40452c:	jmp    0xe370:0xf633dd93
  404533:	jl     0x4045b4
  404535:	adc    al,0xf2
  404537:	arpl   WORD PTR [edi-0x6c341490],cx
  40453d:	leave  
  40453e:	cmp    ebp,DWORD PTR [edi-0x70b53389]
  404544:	adc    edx,DWORD PTR [edx]
  404546:	hlt    
  404547:	or     DWORD PTR [ecx+eax*2+0x29],ebx
  40454b:	fcom   QWORD PTR [ecx+0x30]
  40454e:	jno    0x40457b
  404550:	push   ebx
  404551:	xor    al,0x9b
  404553:	and    eax,0xb5799d0d
  404558:	scas   al,BYTE PTR es:[edi]
  404559:	ins    BYTE PTR es:[edi],dx
  40455a:	rol    al,cl
  40455c:	cmp    eax,ecx
  40455e:	(bad)  
  40455f:	scas   al,BYTE PTR es:[edi]
  404560:	inc    esp
  404561:	or     bl,BYTE PTR [ebx+0x7f]
  404564:	xchg   edx,eax
  404565:	imul   esi,DWORD PTR [eax+0x39de414b],0xffffffcc
  40456c:	call   FWORD PTR ds:0xb8bcc514
  404572:	rcr    BYTE PTR [eax],0xcd
  404575:	push   ebp
  404576:	aam    0x3e
  404578:	cmp    dl,0x67
  40457b:	cmovs  ecx,DWORD PTR [ecx]
  40457e:	clc    
  40457f:	not    ch
  404581:	cmp    edx,DWORD PTR [edi+0x709f881a]
  404587:	ja     0x4045aa
  404589:	test   eax,0x5b215ebe
  40458e:	sbb    DWORD PTR es:[edi-0x6bae9995],ebx
  404595:	cmp    eax,0x52974de0
  40459a:	lock imul ecx,DWORD PTR [edi+0x76a10a1a],0xffffffb4
  4045a2:	sbb    eax,0x5e150b18
  4045a7:	adc    esp,0xac73301f
  4045ad:	sbb    dl,cl
  4045af:	pop    ecx
  4045b0:	out    dx,al
  4045b1:	les    ebx,FWORD PTR [edx+ecx*1+0x4c]
  4045b5:	sub    ecx,edi
  4045b7:	pusha  
  4045b8:	mov    DWORD PTR [ebx+0x50],ebx
  4045bb:	inc    esp
  4045bc:	aam    0x8a
  4045be:	stos   DWORD PTR es:[edi],eax
  4045bf:	mov    eax,ds:0xc8be0
  4045c4:	cli    
  4045c5:	and    DWORD PTR [eax+0x3f],0x13785cc8
  4045cc:	mov    ds:0x80a0d98f,eax
  4045d1:	adc    al,0x90
  4045d3:	jecxz  0x4045e9
  4045d5:	xor    BYTE PTR [esi+0x2f],dl
  4045d8:	pop    es
  4045d9:	leave  
  4045da:	fimul  DWORD PTR [ecx]
  4045dc:	or     eax,0x2a582a73
  4045e1:	pop    ebp
  4045e2:	jbe    0x40463a
  4045e4:	mov    ah,0xfd
  4045e6:	retf   0x909
  4045e9:	sbb    BYTE PTR [eax],dl
  4045eb:	nop
  4045ec:	stos   DWORD PTR es:[edi],eax
  4045ed:	shr    BYTE PTR [esi+ecx*1],cl
  4045f0:	mov    WORD PTR [edx],?
  4045f2:	mov    bl,0x67
  4045f4:	jno    0x4045d5
  4045f6:	mov    ds:0xeedbf9d,al
  4045fb:	push   ss
  4045fc:	sub    DWORD PTR [eax+0x19],0xe431be9e
  404603:	dec    ebp
  404604:	mov    al,0x97
  404606:	pop    ss
  404607:	test   eax,0xfa1f800f
  40460c:	mov    cl,0x70
  40460e:	xchg   ebx,eax
  40460f:	pop    ds
  404610:	jnp    0x40461f
  404612:	mov    bh,0x47
  404614:	aaa    
  404615:	aas    
  404616:	bound  ebp,QWORD PTR [edx]
  404618:	(bad)  
  40461a:	xor    ah,ch
  40461c:	inc    esi
  40461d:	cmp    eax,0x7d7fe959
  404622:	jne    0x4045de
  404624:	pop    edi
  404625:	clc    
  404626:	xchg   edx,eax
  404627:	ja     0x40460b
  404629:	and    bh,al
  40462b:	mov    al,0x93
  40462d:	push   eax
  40462e:	inc    ecx
  40462f:	jg     0x4045e3
  404631:	cwde   
  404632:	push   ebx
  404633:	xchg   esi,eax
  404634:	neg    BYTE PTR [ebx+0x500059c6]
  40463a:	out    dx,al
  40463b:	jo     0x4045dc
  40463d:	cwde   
  40463e:	ds cld 
  404640:	sub    ecx,0x724e00a3
  404646:	xor    DWORD PTR [ebx-0x2a],ebx
  404649:	ds sub eax,0xe6dcde72
  40464f:	pop    es
  404650:	xchg   esp,eax
  404651:	fist   WORD PTR [ebx+eiz*2]
  404654:	inc    esp
  404655:	mov    eax,0x50a0be1b
  40465a:	fbstp  TBYTE PTR [esi+0x4975019d]
  404660:	inc    ebp
  404661:	bound  ecx,QWORD PTR [edi-0x6df241f0]
  404667:	imul   eax,DWORD PTR [edx-0xf],0x5d
  40466b:	lods   al,BYTE PTR ds:[esi]
  40466c:	cmp    BYTE PTR ds:0xce889286,0xdc
  404673:	out    0x75,al
  404675:	jmp    0x4046db
  404677:	add    BYTE PTR [ecx-0x5f],dl
  40467a:	push   edi
  40467b:	loope  0x4046a4
  40467d:	cmp    eax,edx
  40467f:	(bad)  [esi-0x155bd86a]
  404685:	pop    ebx
  404686:	out    0x4b,eax
  404688:	jmp    0x9203a8f0
  40468d:	push   0xc98648ef
  404692:	sub    eax,0x67eff0f
  404697:	call   0xc801aff1
  40469c:	inc    ebx
  40469d:	jle    0x40470e
  40469f:	call   0x5037:0xf6d547aa
  4046a6:	hlt    
  4046a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a8:	push   esp
  4046a9:	sbb    al,0x81
  4046ab:	(bad)
  4046af:	cdq    
  4046b0:	mov    di,0x2d7d
  4046b4:	imul   edi,DWORD PTR [edx+0x71fd3217],0x2a6261ba
  4046be:	ss dec ecx
  4046c0:	cmp    BYTE PTR [esi+0x12],bl
  4046c3:	in     al,dx
  4046c4:	imul   DWORD PTR [esi+edx*2+0x713a3a94]
  4046cb:	std    
  4046cc:	mov    bl,BYTE PTR [esi+0x164b6b0a]
  4046d2:	mov    ch,0x3b
  4046d4:	aaa    
  4046d5:	jnp    0x40473a
  4046d7:	cwde   
  4046d8:	jnp    0x4046b7
  4046da:	test   al,0xb0
  4046dc:	iret   
  4046dd:	fisub  WORD PTR [esi-0x49]
  4046e0:	in     al,dx
  4046e1:	sbb    ebx,edi
  4046e3:	sbb    edi,ebp
  4046e5:	icebp  
  4046e6:	or     BYTE PTR [ecx+eiz*8+0x5b5be646],0xda
  4046ee:	mov    esp,0xe14e3337
  4046f3:	and    al,0x86
  4046f6:	mov    DWORD PTR [ecx+ebx*1],edi
  4046f9:	fs in  eax,dx
  4046fb:	push   ds
  4046fc:	and    eax,0x61cd9b4e
  404701:	sar    DWORD PTR [esi],0x92
  404704:	pop    edi
  404705:	adc    DWORD PTR [ebp-0x75],ebx
  404708:	mov    dl,0xa0
  40470a:	enter  0x4903,0xd2
  40470e:	mov    edi,0xfd26d47
  404713:	mov    esi,0x4d6c4ab7
  404718:	pop    es
  404719:	push   ds
  40471a:	popa   
  40471b:	repnz pop ebp
  40471d:	jo     0x4046f6
  40471f:	add    DWORD PTR [ebx-0x21],esi
  404722:	outs   dx,DWORD PTR ds:[esi]
  404723:	cmc    
  404724:	mov    ebx,0xa32e524f
  404729:	jbe    0x4046f8
  40472b:	mov    BYTE PTR [edi],ah
  40472d:	cmp    al,0x9a
  40472f:	jl     0x404795
  404731:	fld    QWORD PTR [ecx+0x49]
  404734:	sub    al,0x96
  404736:	(bad)  
  404737:	jmp    0x40470b
  404739:	retf   
  40473a:	in     eax,dx
  40473b:	sahf   
  40473c:	in     al,dx
  40473d:	ds cmp al,0x2d
  404740:	retf   0x3d85
  404743:	jge    0x404728
  404745:	dec    ebx
  404746:	push   esi
  404747:	cld    
  404748:	add    DWORD PTR [ecx+0x6a],0x49d1257
  40474f:	(bad)  
  404750:	jo     0x40470e
  404752:	cmp    DWORD PTR [ebp-0x80],edi
  404755:	xchg   esp,eax
  404756:	hlt    
  404757:	add    eax,0xc2984c40
  40475c:	xchg   ecx,eax
  40475d:	mov    al,fs:0xa3fe82cb
  404763:	or     eax,0x95f0bf35
  404768:	pop    esp
  404769:	pop    eax
  40476a:	test   al,0x9a
  40476c:	xor    eax,0x292e6fee
  404771:	xchg   ebp,eax
  404772:	jp     0x404753
  404774:	cmp    BYTE PTR [edx],ah
  404776:	cdq    
  404777:	lods   eax,DWORD PTR ds:[esi]
  404778:	retf   0x5eb4
  40477b:	add    ch,ah
  40477d:	fisub  WORD PTR ds:0x805ffe2a
  404783:	cmc    
  404784:	cmc    
  404785:	xchg   ecx,eax
  404786:	mov    esp,0xad20e31a
  40478b:	fadd   QWORD PTR [esi+0x6371aa66]
  404791:	sub    eax,DWORD PTR [eax*2+0x152f7e9c]
  404798:	mov    ds:0x64a99969,al
  40479d:	adc    BYTE PTR [edx+0x40],0x27
  4047a1:	test   bh,bl
  4047a3:	add    cl,dh
  4047a5:	xor    DWORD PTR [edi-0x6c945dce],0x24de7a8f
  4047af:	and    eax,0x9f240d9b
  4047b4:	jmp    0x462cd39b
  4047b9:	xor    eax,0xfef18bef
  4047be:	scas   eax,DWORD PTR es:[edi]
  4047bf:	mov    ecx,0x845e507f
  4047c4:	sbb    dh,BYTE PTR [ebx+0x155c9b52]
  4047ca:	fucomp st(1)
  4047cc:	dec    esp
  4047cd:	clc    
  4047ce:	xor    cl,BYTE PTR ds:0xa05b5f7d
  4047d4:	mov    bh,0x49
  4047d6:	xchg   ebp,eax
  4047d7:	call   0x5dc4:0x7bea2429
  4047de:	add    cl,BYTE PTR fs:0x84c288a2
  4047e5:	test   ch,al
  4047e7:	add    edx,DWORD PTR [edx-0x2a]
  4047ea:	test   DWORD PTR [ebx],ebp
  4047ec:	je     0x40480f
  4047ee:	dec    eax
  4047ef:	inc    ebp
  4047f0:	adc    eax,0xb5349d91
  4047f5:	in     al,dx
  4047f6:	pop    ds
  4047f7:	lods   eax,DWORD PTR ds:[esi]
  4047f8:	xlat   BYTE PTR ds:[ebx]
  4047f9:	mov    esp,0x6577f969
  4047fe:	mov    ah,0xf1
  404800:	shl    BYTE PTR [esi+0x44],0x34
  404804:	xor    edi,DWORD PTR [esi+0x3e8b9e48]
  40480a:	imul   ebp,DWORD PTR [edi-0x6ce86ab5],0x8
  404811:	pop    edi
  404812:	mov    eax,ds:0x8ed3c6a7
  404817:	pop    ebx
  404818:	fucom  st(6)
  40481a:	push   ecx
  40481b:	mov    ds:0xdc85dc09,al
  404820:	cld    
  404821:	rol    BYTE PTR [edx+ecx*8-0x57],cl
  404825:	ins    DWORD PTR es:[edi],dx
  404826:	mov    cl,0xb
  404828:	repz sub edi,DWORD PTR [eax-0x44]
  40482c:	sti    
  40482d:	sbb    DWORD PTR [ecx+ecx*4-0x3c],eax
  404831:	mov    cl,0x12
  404833:	fdivr  DWORD PTR [ecx+edi*4-0x63]
  404837:	in     al,dx
  404838:	fldenv [ebx-0x5aa070f8]
  40483e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483f:	test   DWORD PTR [esp+edi*1+0x34],ebx
  404843:	pusha  
  404844:	nop
  404845:	sub    eax,0xcf574dc8
  40484a:	cmp    ebp,DWORD PTR [ebx+0x1a]
  40484d:	pusha  
  40484e:	test   eax,0x4e2c111
  404853:	add    ecx,edx
  404855:	or     ebx,ebx
  404857:	ret    
  404858:	inc    esi
  404859:	push   es
  40485a:	stc    
  40485b:	retf   0xaabb
  40485e:	outs   dx,BYTE PTR ds:[esi]
  40485f:	pop    eax
  404860:	pop    ebx
  404861:	out    dx,al
  404862:	js     0x40485d
  404864:	jp     0x4048ba
  404866:	test   al,0x7e
  404868:	lods   al,BYTE PTR ds:[esi]
  404869:	sub    al,0xa6
  40486b:	and    bl,bl
  40486d:	sub    ebp,DWORD PTR [ecx+eax*1+0x2f9aef86]
  404874:	adc    ecx,DWORD PTR [edx+0x1c]
  404877:	pop    edx
  404878:	out    0x14,eax
  40487a:	push   edi
  40487b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487c:	ficomp WORD PTR [ebx+0x7d]
  40487f:	jle    0x4048a8
  404881:	pop    ebp
  404882:	sub    bh,BYTE PTR [ebp-0x5b]
  404885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404886:	inc    eax
  404887:	sbb    ebx,0xffffffe2
  40488a:	loopne 0x404870
  40488c:	and    al,ah
  40488e:	lahf   
  40488f:	add    al,0xe0
  404891:	fnstcw WORD PTR [esi]
  404893:	stos   BYTE PTR es:[edi],al
  404894:	(bad)  
  404895:	push   edx
  404896:	jl     0x4048cc
  404898:	cmp    dh,BYTE PTR [edi]
  40489a:	cld    
  40489b:	cld    
  40489c:	add    DWORD PTR [ebx+0x1efc801b],ebp
  4048a2:	sub    al,0x31
  4048a4:	push   ebp
  4048a5:	clc    
  4048a6:	inc    ebx
  4048a7:	xlat   BYTE PTR ds:[ebx]
  4048a8:	mov    ?,WORD PTR [edi-0x6a]
  4048ab:	mov    cr3,ecx
  4048ae:	lock or eax,0xf5308f95
  4048b4:	mov    ?,ebx
  4048b6:	xchg   esi,eax
  4048b7:	xor    al,0x3c
  4048b9:	ss repz stc 
  4048bc:	mov    WORD PTR es:[edx+ebp*4-0x27],gs
  4048c1:	out    dx,eax
  4048c2:	and    bh,bl
  4048c4:	iret   
  4048c5:	fisttp WORD PTR [ecx+0x23ec2ab0]
  4048cb:	mov    edi,0x904b00ad
  4048d0:	loop   0x4048a7
  4048d2:	jl     0x404930
  4048d4:	mov    ecx,0xa57341d3
  4048d9:	add    eax,0xb6c293c9
  4048de:	dec    esp
  4048df:	mov    edx,0x83d44ef8
  4048e4:	popf   
  4048e5:	dec    ecx
  4048e6:	fwait
  4048e7:	push   esp
  4048e8:	pop    ebp
  4048e9:	call   0xff10f72b
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	xor    eax,0x6bedacf5
  4048f4:	jecxz  0x404923
  4048f6:	pop    eax
  4048f7:	in     al,dx
  4048f8:	sbb    ah,BYTE PTR [ebp-0xe]
  4048fb:	cmp    DWORD PTR [esi-0x57],eax
  4048fe:	cmc    
  4048ff:	jae    0x404922
  404901:	sub    bl,0xf6
  404904:	repnz add eax,0xfaf28ac1
  40490a:	scas   al,BYTE PTR es:[edi]
  40490b:	dec    esp
  40490c:	pop    esp
  40490d:	popa   
  40490e:	lods   eax,DWORD PTR ds:[esi]
  40490f:	stos   DWORD PTR es:[edi],eax
  404910:	das    
  404911:	pop    es
  404912:	popa   
  404913:	or     al,0xbd
  404915:	ret    0xd4fe
  404918:	std    
  404919:	cmp    BYTE PTR [edi+0xe],bh
  40491c:	(bad)  
  40491e:	xor    BYTE PTR [eax+0x1b5a856],al
  404924:	or     ah,cl
  404926:	bound  ebx,QWORD PTR [edi+0x6839d7b4]
  40492c:	mov    ds:0xa354e2d6,eax
  404931:	sub    ecx,DWORD PTR [eax]
  404933:	jl     0x404938
  404935:	add    DWORD PTR [eax+ebx*4+0x57b276e4],ebx
  40493c:	bound  edx,QWORD PTR [edx]
  40493e:	mov    edi,DWORD PTR [eax+0x1443e3ad]
  404944:	rcr    ch,cl
  404946:	jge    0x4048db
  404948:	cmc    
  404949:	stos   DWORD PTR es:[edi],eax
  40494a:	sbb    eax,0x11f64b1a
  40494f:	xchg   esp,eax
  404950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404951:	fist   DWORD PTR [esp+eiz*2+0x4ba05796]
  404958:	cs dec esi
  40495a:	xchg   ecx,eax
  40495b:	push   esi
  40495c:	ror    ecx,1
  40495e:	outs   dx,BYTE PTR ds:[esi]
  40495f:	fadd   QWORD PTR [esi]
  404961:	sub    DWORD PTR [esi+0x1a],esp
  404964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404965:	adc    BYTE PTR [edi],bl
  404967:	les    ebx,FWORD PTR [edi+0x23]
  40496a:	adc    eax,0xecd4b099
  40496f:	cmp    BYTE PTR [edi],ah
  404971:	dec    esp
  404972:	mov    al,ds:0xfe7885d0
  404977:	ss or  al,0xd8
  40497a:	lock adc esi,DWORD PTR [esp+eax*2-0x70465d0f]
  404982:	aaa    
  404983:	gs push ss
  404985:	dec    ecx
  404986:	and    DWORD PTR [eax],0x61b4850c
  40498c:	mov    ds,WORD PTR [edx]
  40498e:	out    dx,al
  40498f:	icebp  
  404990:	int    0x58
  404992:	mov    ch,0x4d
  404994:	mov    dh,0x24
  404996:	sbb    ch,0x3e
  404999:	push   ebx
  40499a:	test   BYTE PTR [ebx-0x18],bh
  40499d:	push   esp
  40499e:	out    0x39,al
  4049a0:	add    dl,ah
  4049a2:	or     dh,BYTE PTR [ebx+0x57]
  4049a5:	xchg   edi,eax
  4049a6:	or     al,0xb4
  4049a8:	in     eax,0x5a
  4049aa:	push   ds
  4049ab:	shr    ebp,0xed
  4049ae:	xchg   esp,eax
  4049af:	mov    edi,0x4b1389b4
  4049b4:	out    0xde,eax
  4049b6:	mov    ebx,0xa3abf724
  4049bb:	mov    eax,0x71d21d3f
  4049c0:	mov    eax,0xeed67f25
  4049c5:	xor    dh,dh
  4049c7:	lea    esi,[ecx-0x5]
  4049ca:	gs pop ss
  4049cc:	sub    BYTE PTR [edi+edi*1+0x7f],ah
  4049d0:	scas   eax,DWORD PTR es:[edi]
  4049d1:	cwde   
  4049d2:	xor    al,0xf7
  4049d4:	sub    ecx,DWORD PTR [ebp+0x54f7a216]
  4049da:	jns    0x404a54
  4049dc:	ret    
  4049dd:	mov    eax,0xfdec7704
  4049e2:	fs aam 0x57
  4049e5:	ret    
  4049e6:	fist   DWORD PTR [ebx]
  4049e8:	sub    BYTE PTR [ebx-0x4b21a5d1],0xe3
  4049ef:	in     al,0x40
  4049f1:	fbld   TBYTE PTR ds:[edx]
  4049f4:	add    eax,0x4da5e9ff
  4049f9:	xchg   BYTE PTR [ebp+eiz*4+0x3269954],dl
  404a00:	nop
  404a01:	jno    0x40499e
  404a03:	jmp    0x4049e4
  404a05:	cli    
  404a06:	push   edi
  404a07:	gs or  al,0x66
  404a0a:	mov    esp,DWORD PTR [edi+0x5eba8fb5]
  404a10:	cmp    eax,0x936ba74b
  404a15:	or     al,0x7d
  404a17:	jecxz  0x404a42
  404a19:	out    0x37,eax
  404a1b:	cmp    DWORD PTR [eax],0x3f
  404a1e:	pop    es
  404a1f:	leave  
  404a20:	ins    BYTE PTR es:[di],dx
  404a22:	rcl    BYTE PTR [ebx-0x450cfd66],cl
  404a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a29:	and    eax,esi
  404a2b:	push   ds
  404a2c:	and    al,0x9d
  404a2e:	scas   al,BYTE PTR es:[edi]
  404a2f:	stos   DWORD PTR es:[edi],eax
  404a30:	mov    edi,0xe581d297
  404a35:	jnp    0x4049f0
  404a37:	imul   ebp,DWORD PTR [ecx],0xffffffa2
  404a3a:	inc    ebp
  404a3b:	addr16 jns 0x404a09
  404a3e:	or     al,0xb7
  404a40:	cs jns 0x4049f9
  404a43:	pusha  
  404a44:	adc    dh,al
  404a46:	imul   ebp,DWORD PTR [edi-0x74cb90e9],0x32bd37f1
  404a50:	not    BYTE PTR [edi-0x69]
  404a53:	pop    ecx
  404a54:	pop    ecx
  404a55:	add    eax,DWORD PTR [esi]
  404a57:	push   0x38aec53a
  404a5c:	rcl    ah,cl
  404a5e:	adc    ch,ch
  404a60:	add    eax,DWORD PTR [edx]
  404a62:	scas   al,BYTE PTR es:[edi]
  404a63:	call   0x42e47b0c
  404a68:	mov    ebp,0x772d69e0
  404a6d:	xchg   ebx,eax
  404a6e:	outs   dx,BYTE PTR ds:[esi]
  404a6f:	sub    ah,bl
  404a71:	repnz inc edx
  404a73:	(bad)  
  404a75:	mov    edx,0x7a8db489
  404a7a:	ficomp WORD PTR [ebp+0xfe97b7b]
  404a80:	ins    BYTE PTR es:[edi],dx
  404a81:	fwait
  404a82:	mov    ds:0x3d17287,al
  404a87:	mov    al,0x87
  404a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a8a:	daa    
  404a8b:	inc    dh
  404a8d:	rcr    BYTE PTR [ebx],cl
  404a8f:	pop    ebx
  404a90:	adc    al,0x59
  404a92:	sub    eax,DWORD PTR [edx-0x65]
  404a95:	loopne 0x404ac8
  404a97:	mov    edx,0x5324aa1d
  404a9c:	add    al,0xeb
  404a9e:	(bad)  
  404a9f:	in     eax,dx
  404aa0:	pusha  
  404aa1:	push   es
  404aa2:	mov    eax,0x86f6e63a
  404aa7:	push   0xce8e6dfe
  404aac:	mov    esi,ebx
  404aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aaf:	mov    ebp,0x9e42b431
  404ab5:	xchg   ebx,eax
  404ab6:	adc    eax,0x66d421f3
  404abb:	and    BYTE PTR [eax+eiz*4-0x622a0b9f],dh
  404ac2:	mov    dl,0xf1
  404ac4:	pop    esi
  404ac5:	and    BYTE PTR [ebx+0x7b],ah
  404ac8:	cmp    al,0xd8
  404aca:	jl     0x404a86
  404acc:	repz ss add al,0x1e
  404ad0:	add    DWORD PTR [edx],0x8310df59
  404ad6:	fld    QWORD PTR [ebp+0x5c]
  404ad9:	lods   al,BYTE PTR ds:[esi]
  404ada:	lods   al,BYTE PTR ds:[esi]
  404adb:	mov    ebp,0xb2f8a45d
  404ae0:	jle    0x404b36
  404ae2:	ficom  DWORD PTR ds:0x8dfc4ea9
  404ae8:	test   BYTE PTR [edx+0x55],cl
  404aeb:	shr    DWORD PTR [edx+0x2a],1
  404aee:	ret    
  404aef:	ror    DWORD PTR [edi+edi*8],cl
  404af2:	fisttp DWORD PTR [ebx-0x6a]
  404af5:	stos   BYTE PTR es:[edi],al
  404af6:	cmp    edi,ecx
  404af8:	sub    eax,0xc9722e02
  404afd:	mov    al,ds:0x2d8af6fa
  404b02:	mov    ebx,0x7c656338
  404b07:	push   eax
  404b08:	addr16 mov eax,ds:0x6052
  404b0c:	inc    ebx
  404b0d:	mov    esp,0xc9d0783a
  404b12:	pop    edx
  404b13:	stos   DWORD PTR es:[edi],eax
  404b14:	sbb    al,0x89
  404b16:	loop   0x404ab5
  404b18:	push   edi
  404b19:	cmp    dl,BYTE PTR [ebx+0x58]
  404b1c:	xchg   edi,eax
  404b1d:	jle    0x404b40
  404b1f:	jno    0x404b3c
  404b21:	pusha  
  404b22:	fsub   DWORD PTR [ebx+0x20]
  404b25:	and    ah,BYTE PTR [edx+edi*8]
  404b28:	or     DWORD PTR [esi-0x193723c5],edi
  404b2e:	fst    QWORD PTR [esi+0x7ad9270d]
  404b34:	push   edx
  404b35:	fiadd  WORD PTR [edi]
  404b37:	(bad)  
  404b38:	cmp    DWORD PTR [esi+0x22b772e7],esi
  404b3e:	es inc ecx
  404b40:	add    BYTE PTR [eax-0x51f8c403],bh
  404b46:	lahf   
  404b47:	loopne 0x404af1
  404b49:	xor    BYTE PTR ds:0x33e61929,al
  404b4f:	loope  0x404bbb
  404b51:	adc    al,0x2e
  404b53:	imul   ecx,DWORD PTR [ecx+0x3d],0xfffffffb
  404b57:	xchg   ecx,eax
  404b58:	xchg   esp,eax
  404b59:	popfw  
  404b5b:	mov    al,0x8a
  404b5d:	lea    ecx,[eax]
  404b5f:	jle    0x404b1f
  404b61:	hlt    
  404b62:	aam    0x51
  404b64:	mov    dl,BYTE PTR [ebx+0x54]
  404b67:	ror    esi,1
  404b69:	sbb    BYTE PTR [esi+0x2c],dl
  404b6c:	(bad)  
  404b6d:	sbb    al,0xaa
  404b6f:	(bad)  
  404b71:	dec    edx
  404b72:	fs cli 
  404b74:	cs stos BYTE PTR es:[edi],al
  404b76:	js     0x404bb3
  404b78:	and    al,BYTE PTR [edx]
  404b7a:	add    BYTE PTR [ecx+0x6bd63d1f],dh
  404b80:	mov    esi,DWORD PTR [ebp+0x26c9b17a]
  404b86:	retf   
  404b87:	sbb    BYTE PTR [esi-0x6b903c62],dh
  404b8d:	and    eax,0x29307dd2
  404b92:	cmc    
  404b93:	lahf   
  404b94:	icebp  
  404b95:	xchg   ecx,eax
  404b96:	cmp    cl,BYTE PTR [esi+0x6]
  404b99:	inc    edx
  404b9a:	mov    eax,DWORD PTR [ecx]
  404b9c:	sub    bh,BYTE PTR [ebx]
  404b9e:	push   ecx
  404b9f:	fmul   DWORD PTR [edi]
  404ba1:	dec    ecx
  404ba2:	aad    0x1a
  404ba4:	inc    ebx
  404ba5:	cmc    
  404ba6:	cmp    esi,DWORD PTR [ebp-0x1e19867c]
  404bac:	cli    
  404bad:	and    dh,BYTE PTR [edi+edx*8-0x14]
  404bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb2:	div    BYTE PTR [edx]
  404bb4:	mov    ds:0x2a74265d,al
  404bb9:	test   eax,0x63d4f529
  404bbe:	push   0xffffffb8
  404bc0:	lds    edx,FWORD PTR [edi]
  404bc2:	loope  0x404bac
  404bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc5:	or     eax,0x39b55bf5
  404bca:	mov    ebx,ecx
  404bcc:	push   esp
  404bcd:	ret    0xcadd
  404bd0:	ret    0x7f0f
  404bd3:	sbb    eax,0x79d6315b
  404bd8:	je     0x404c36
  404bda:	pop    eax
  404bdb:	mov    BYTE PTR [ebp-0x37369d72],ch
  404be1:	cmp    al,0x23
  404be3:	aaa    
  404be4:	nop
  404be5:	sbb    ah,BYTE PTR [ebx+0x5a]
  404be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be9:	hlt    
  404bea:	xchg   ecx,eax
  404beb:	sti    
  404bec:	ret    
  404bed:	(bad)  
  404bef:	xchg   ebx,eax
  404bf0:	ja     0x404c37
  404bf2:	and    BYTE PTR [ebp+0x79],0x1d
  404bf6:	das    
  404bf7:	retf   0xca99
  404bfa:	mov    dl,0xfa
  404bfc:	or     al,0x38
  404bfe:	es jp  0x404bc9
  404c01:	pop    ebx
  404c02:	push   ecx
  404c03:	fisubr WORD PTR [edx]
  404c05:	into   
  404c06:	push   0xffffffb6
  404c08:	xor    BYTE PTR [edx+0x4b],0x9d
  404c0c:	mov    dl,BYTE PTR [esi]
  404c0e:	mov    DWORD PTR [eax],esi
  404c10:	jnp    0x404c8d
  404c12:	sti    
  404c13:	push   ds
  404c14:	push   0x13091340
  404c19:	and    al,0xf6
  404c1b:	and    DWORD PTR [ebx-0x5d],ebp
  404c1e:	loop   0x404c94
  404c20:	int3   
  404c21:	(bad)  
  404c22:	sub    BYTE PTR [edi+edx*1+0x23],ah
  404c26:	ret    0x101f
  404c29:	or     BYTE PTR [edi],bh
  404c2b:	fsub   st(5),st
  404c2d:	pop    es
  404c2e:	js     0x404bdf
  404c30:	push   ecx
  404c31:	or     ch,bl
  404c33:	fcmovne st,st(6)
  404c35:	vandnps ymm6,ymm4,YMMWORD PTR [ebp+0x7eabaa35]
  404c3d:	pop    ecx
  404c3e:	cmp    DWORD PTR [esi],esi
  404c40:	popa   
  404c41:	fbstp  TBYTE PTR [esp+eiz*4+0x3444b863]
  404c48:	loop   0x404cb6
  404c4a:	lea    ecx,[eax+0xf150e73]
  404c50:	push   0x1a
  404c52:	mov    esi,0xbd2a1b04
  404c57:	fisubr WORD PTR gs:[ecx-0x59d87d7a]
  404c5e:	cwde   
  404c5f:	xchg   edx,eax
  404c60:	add    BYTE PTR [edi+eax*4],0xae
  404c64:	mov    DWORD PTR [ebx],esp
  404c66:	sub    dl,BYTE PTR ss:[edx-0x16]
  404c6a:	nop
  404c6b:	inc    ebx
  404c6c:	add    eax,0xc21bb96d
  404c71:	xchg   edi,ecx
  404c73:	arpl   cx,bx
  404c75:	add    eax,0x37b00e2e
  404c7a:	cdq    
  404c7b:	les    edx,FWORD PTR [edx-0x3cb1e9f3]
  404c81:	adc    esi,DWORD PTR [esp+ecx*1-0x69]
  404c85:	cld    
  404c86:	jne    0x404cc4
  404c88:	sbb    DWORD PTR [bp+di+0x16],edi
  404c8c:	pop    esi
  404c8d:	or     bh,BYTE PTR [ebp-0x3c]
  404c90:	loopne 0x404c2e
  404c92:	xlat   BYTE PTR ds:[ebx]
  404c93:	popf   
  404c94:	daa    
  404c95:	adc    al,0xb4
  404c97:	mov    bh,cl
  404c99:	dec    ebx
  404c9a:	stc    
  404c9b:	das    
  404c9c:	sub    BYTE PTR [esp+edi*2],al
  404c9f:	push   ds
  404ca0:	pop    ebx
  404ca1:	fisubr WORD PTR [edi+0x40]
  404ca4:	dec    esp
  404ca5:	cdq    
  404ca6:	cs or  ch,0xe7
  404caa:	jb     0x404cac
  404cac:	retf   
  404cad:	fcom   DWORD PTR [esi+0x6d9a823a]
  404cb3:	mov    DWORD PTR [edx],edi
  404cb5:	inc    ebx
  404cb6:	pop    edx
  404cb7:	jnp    0x404d26
  404cb9:	fild   WORD PTR [edi+ecx*4+0x6f]
  404cbd:	adc    BYTE PTR fs:[esi+0x426cbac5],ch
  404cc4:	mov    al,ds:0x9b0dd90e
  404cc9:	or     al,0x37
  404ccb:	xor    DWORD PTR [esi],0x4b9560ea
  404cd1:	lea    edi,ds:0xd4193fc5
  404cd7:	fist   DWORD PTR [eax-0x71ad5312]
  404cdd:	dec    esi
  404cde:	add    eax,0xb61b8ad9
  404ce3:	lea    esi,[ecx]
  404ce5:	push   esi
  404ce6:	lds    ebp,FWORD PTR [ebp+0x6b]
  404ce9:	lods   al,BYTE PTR ds:[esi]
  404cea:	int3   
  404ceb:	sbb    al,0xa4
  404ced:	or     esp,DWORD PTR [edi+0x46be0261]
  404cf3:	js     0x404cf1
  404cf5:	jg     0x404d72
  404cf7:	gs lahf 
  404cf9:	adc    al,ch
  404cfb:	add    al,0x3b
  404cfd:	cmp    cl,dh
  404cff:	ins    BYTE PTR es:[edi],dx
  404d00:	push   esi
  404d01:	(bad)  
  404d02:	mov    dh,0x9d
  404d04:	lods   eax,DWORD PTR ds:[esi]
  404d05:	sub    DWORD PTR [ecx],ebx
  404d07:	icebp  
  404d08:	sub    BYTE PTR [ecx+ecx*1],al
  404d0b:	das    
  404d0c:	shl    BYTE PTR [esi-0xf],0xe5
  404d10:	mov    dh,0x89
  404d12:	xor    ecx,eax
  404d14:	rcl    BYTE PTR [ebp-0xe],1
  404d17:	sbb    cl,BYTE PTR [esi+0x12]
  404d1a:	and    ebx,ebx
  404d1c:	sub    BYTE PTR [edx+0x4eadc5b5],dh
  404d22:	push   edi
  404d23:	sub    cl,BYTE PTR [edx+0xbaa886a]
  404d29:	sub    al,0x60
  404d2b:	push   eax
  404d2c:	ins    DWORD PTR es:[edi],dx
  404d2d:	xchg   esp,eax
  404d2e:	imul   esp,DWORD PTR [esi],0x6c
  404d31:	sub    BYTE PTR [ecx+eax*1+0x147465ea],bh
  404d38:	mov    ch,0x92
  404d3a:	add    DWORD PTR [esp+eax*1],ebp
  404d3d:	jbe    0x404d35
  404d3f:	mov    eax,ds:0x195d8c15
  404d44:	ret    0xf4b4
  404d47:	nop
  404d48:	mov    edi,0xd22c67e4
  404d4d:	jmp    0x134a:0xd74f33fb
  404d54:	aam    0x11
  404d56:	or     DWORD PTR [edx+0x6d],ebp
  404d59:	mov    ch,0x94
  404d5b:	out    dx,al
  404d5c:	adc    BYTE PTR [ecx+ebx*2],ah
  404d5f:	or     ebx,eax
  404d61:	xchg   DWORD PTR [ebp-0x76],ecx
  404d64:	sub    BYTE PTR [ebp+esi*2+0x4a],al
  404d68:	mov    ds:0x6f7726d5,al
  404d6d:	push   edi
  404d6e:	jecxz  0x404d8b
  404d70:	mov    cl,bh
  404d72:	jle    0x404d68
  404d74:	sbb    eax,0x79baeae5
  404d79:	sbb    al,0x1a
  404d7b:	mov    dl,0x77
  404d7d:	push   es
  404d7e:	retf   0x934
  404d81:	es dec esp
  404d83:	shl    BYTE PTR [edi+0x28],cl
  404d86:	dec    ebx
  404d87:	mov    esp,0x477dbae0
  404d8c:	dec    esi
  404d8d:	adc    eax,0xd8aa827e
  404d92:	dec    esp
  404d93:	cmp    ecx,edx
  404d95:	outs   dx,BYTE PTR ds:[esi]
  404d96:	and    BYTE PTR [esi+ebx*2-0x55907fd8],bh
  404d9d:	bound  eax,QWORD PTR [ebx-0x62ccb719]
  404da3:	test   eax,0x6926bae0
  404da8:	sti    
  404da9:	sbb    al,0xdf
  404dab:	(bad)  
  404dac:	and    edi,edi
  404dae:	dec    ecx
  404daf:	xchg   ebp,eax
  404db0:	dec    ebp
  404db1:	cs jne 0x404de7
  404db4:	fdivr  st(1),st
  404db6:	mov    gs:0xd11ba7ed,al
  404dbc:	jbe    0x404d88
  404dbe:	or     eax,0x21656f3c
  404dc3:	hlt    
  404dc4:	and    cl,BYTE PTR [edi]
  404dc6:	je     0x404e46
  404dc8:	jg     0x404e01
  404dca:	outs   dx,DWORD PTR ds:[esi]
  404dcb:	ror    DWORD PTR [ebx-0x30],cl
  404dce:	xchg   ebp,eax
  404dcf:	mov    esi,0x3b438f09
  404dd4:	outs   dx,BYTE PTR ds:[esi]
  404dd5:	dec    edi
  404dd6:	mov    esp,0xf2931dac
  404ddb:	fistp  QWORD PTR [ebp-0x4f]
  404dde:	cld    
  404ddf:	pop    esp
  404de0:	out    0xa3,al
  404de2:	not    DWORD PTR [ecx+0x34]
  404de5:	push   cs
  404de6:	(bad)  
  404de7:	ficom  WORD PTR [ecx-0x3a]
  404dea:	lahf   
  404deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dec:	test   DWORD PTR [ebp+0x33],ebp
  404def:	in     eax,dx
  404df0:	push   eax
  404df1:	rol    DWORD PTR [edi],0xac
  404df4:	ds jbe 0x404e3f
  404df7:	ret    
  404df8:	push   esi
  404df9:	dec    ebp
  404dfa:	dec    eax
  404dfb:	ins    BYTE PTR es:[edi],dx
  404dfc:	adc    al,dl
  404dfe:	and    al,0x6f
  404e00:	pop    esp
  404e01:	cmp    BYTE PTR [edx+0x1f7efb52],bl
  404e07:	xor    BYTE PTR [eax],bh
  404e09:	xor    eax,DWORD PTR [ebp+0x4caa6554]
  404e0f:	pop    ebp
  404e10:	pop    edi
  404e11:	cdq    
  404e12:	pop    esi
  404e13:	into   
  404e14:	xchg   edx,eax
  404e15:	or     edi,esi
  404e17:	aam    0xfe
  404e19:	jmp    0x404e3a
  404e1b:	sub    al,0x37
  404e1d:	or     BYTE PTR ds:0x7d064624,dh
  404e23:	popf   
  404e24:	or     dl,BYTE PTR [esp+eax*2-0x17]
  404e28:	stos   BYTE PTR es:[edi],al
  404e29:	cwde   
  404e2a:	call   0x97b1:0x2be53b8b
  404e31:	ss int 0xce
  404e34:	mov    eax,0xea92c40e
  404e39:	popa   
  404e3a:	lods   eax,DWORD PTR ds:[esi]
  404e3b:	pop    edx
  404e3c:	pop    ecx
  404e3d:	popa   
  404e3e:	inc    ebx
  404e3f:	pop    ss
  404e40:	mov    bh,BYTE PTR [esi+eiz*8+0x4e97fd44]
  404e47:	and    al,BYTE PTR [esi]
  404e49:	leave  
  404e4a:	xlat   BYTE PTR ds:[ebx]
  404e4b:	mov    edx,0xcafa60ab
  404e50:	sub    eax,0x228d0947
  404e56:	jbe    0x404e38
  404e58:	mov    dh,0x55
  404e5a:	jle    0x404dfd
  404e5c:	mul    DWORD PTR [ecx-0x2c102939]
  404e62:	in     eax,dx
  404e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e64:	pop    ebp
  404e65:	xor    eax,0x2c5ff60e
  404e6a:	lea    esp,[ecx]
  404e6c:	(bad)  
  404e6d:	in     eax,0x18
  404e6f:	push   cs
  404e70:	xchg   ebx,eax
  404e71:	or     dh,ch
  404e73:	ror    eax,0x18
  404e76:	aas    
  404e77:	lods   al,BYTE PTR ds:[esi]
  404e78:	xor    BYTE PTR [edi+0x73521f65],cl
  404e7e:	push   es
  404e7f:	sbb    dl,dl
  404e81:	(bad)  
  404e82:	xchg   esi,eax
  404e83:	mov    bl,0x73
  404e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e86:	pop    esp
  404e87:	enter  0x2036,0xf7
  404e8b:	adc    eax,0xb5ddca38
  404e90:	jne    0x404e9c
  404e92:	icebp  
  404e93:	aas    
  404e94:	jecxz  0x404e25
  404e96:	or     eax,0xb39e1ba2
  404e9b:	and    dl,dl
  404e9d:	xor    eax,0x9bbcb110
  404ea2:	(bad)  
  404ea3:	jg     0x404e89
  404ea5:	shr    BYTE PTR [edx],cl
  404ea7:	std    
  404ea8:	jo     0x404e46
  404eaa:	mov    bh,0x25
  404eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ead:	pop    ss
  404eae:	mov    esi,0xe858711b
  404eb3:	call   0x1f3ba4a7
  404eb8:	leave  
  404eb9:	rcr    BYTE PTR [ebx],0xe8
  404ebc:	ss xchg edi,eax
  404ebe:	dec    eax
  404ebf:	mov    fs,WORD PTR [edx-0x55f712c7]
  404ec5:	jmp    0x93051571
  404eca:	jns    0x404e7d
  404ecc:	and    eax,0x4da647fd
  404ed1:	mov    ds:0xd2a66a60,al
  404ed6:	cmp    edi,DWORD PTR [esi+0x47]
  404ed9:	lahf   
  404eda:	mov    edx,0xed1aa624
  404edf:	setg   BYTE PTR [eax]
  404ee2:	inc    ebp
  404ee3:	cmp    cl,0xce
  404ee6:	shl    ebx,1
  404ee8:	mov    WORD PTR [edi],ss
  404eea:	jne    0x404ee8
  404eec:	sub    esp,DWORD PTR [eax]
  404eee:	lea    esp,[esi-0x2a]
  404ef1:	adc    al,0x19
  404ef3:	pushf  
  404ef4:	pop    ss
  404ef5:	xor    al,0x4
  404ef7:	xor    BYTE PTR [edx],ah
  404ef9:	cmp    ebx,ebp
  404efb:	pop    es
  404efc:	jge    0x404ea7
  404efe:	dec    edx
  404eff:	push   ebp
  404f00:	retf   0x15e5
  404f03:	inc    edi
  404f04:	jb     0x404f34
  404f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f07:	mov    ebx,0x5f578d64
  404f0c:	dec    ebp
  404f0d:	sub    DWORD PTR [edx],0x57448d3a
  404f13:	lock push esp
  404f15:	cmp    BYTE PTR [ecx-0x45],0x96
  404f19:	lock pop es
  404f1b:	xchg   ebx,eax
  404f1c:	cs pusha 
  404f1e:	mov    eax,ds:0xf1c99b8d
  404f23:	ds sbb ebx,edx
  404f26:	jnp    0x404f91
  404f28:	imul   edi,esi,0x7e
  404f2b:	ss into 
  404f2d:	call   0xc1ce017
  404f32:	or     BYTE PTR [ebp-0x58a859e3],dl
  404f38:	std    
  404f39:	dec    edi
  404f3a:	or     al,dl
  404f3c:	ret    0xc725
  404f3f:	fs leave 
  404f41:	mov    eax,0xe490eef6
  404f46:	xor    al,BYTE PTR [ebx-0x61]
  404f49:	xchg   edx,eax
  404f4a:	sub    eax,0x8a731471
  404f4f:	int    0xd
  404f51:	push   edx
  404f52:	scas   ax,WORD PTR es:[edi]
  404f54:	sti    
  404f55:	ins    DWORD PTR es:[edi],dx
  404f56:	js     0x404f35
  404f58:	xlat   BYTE PTR ds:[ebx]
  404f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f5a:	cmp    DWORD PTR [edx-0x25],esi
  404f5d:	sbb    ecx,DWORD PTR [esi-0x47951c5b]
  404f63:	aaa    
  404f64:	sahf   
  404f65:	pop    ebx
  404f66:	jmp    0x2139:0x554cafde
  404f6d:	sub    DWORD PTR [ebx],esi
  404f6f:	sub    eax,0xd12fec81
  404f74:	shl    DWORD PTR [edi],0xd0
  404f77:	jmp    0x404f8c
  404f79:	retf   0x38da
  404f7c:	pop    ebx
  404f7d:	loope  0x404fb2
  404f7f:	ret    
  404f80:	std    
  404f81:	imul   edx,DWORD PTR [esi+ecx*8-0x1bfb61f0],0xe065e3
  404f8c:	adc    esp,DWORD PTR [edi]
  404f8e:	inc    eax
  404f8f:	(bad)  
  404f91:	inc    esi
  404f92:	(bad)  [edi]
  404f94:	out    dx,al
  404f95:	repnz push esp
  404f97:	cli    
  404f98:	mov    bl,0x8b
  404f9a:	aam    0x1f
  404f9c:	pop    ebx
  404f9d:	jmp    0x404fe9
  404f9f:	add    BYTE PTR [ebp-0x8],bl
  404fa2:	retf   0x2d53
  404fa5:	xchg   edi,eax
  404fa6:	push   0xef6b7e13
  404fab:	idiv   esp
  404fad:	dec    esp
  404fae:	sahf   
  404faf:	mov    ds:0x502af575,eax
  404fb4:	mov    edi,esi
  404fb6:	cmp    dl,al
  404fb8:	ja     0x404f92
  404fba:	imul   ecx,DWORD PTR [ebx+0x4e],0x97f049dd
  404fc1:	(bad)  
  404fc2:	jp     0x404fc4
  404fc4:	inc    esi
  404fc5:	dec    ecx
  404fc6:	dec    ecx
  404fc7:	jb     0x405027
  404fc9:	outs   dx,BYTE PTR ds:[esi]
  404fca:	shl    eax,0x6b
  404fcd:	adc    dh,ah
  404fcf:	or     al,0x14
  404fd1:	out    dx,eax
  404fd2:	inc    eax
  404fd3:	xchg   edx,eax
  404fd4:	nop
  404fd5:	mov    BYTE PTR [edx-0x7546c042],dh
  404fdb:	mov    DWORD PTR [edi+edx*2],edi
  404fde:	adc    DWORD PTR [esi],edi
  404fe0:	pop    edx
  404fe1:	mov    eax,ds:0xec360014
  404fe6:	fdiv   DWORD PTR [eax+edx*1]
  404fe9:	jge    0x405024
  404feb:	aas    
  404fec:	mov    bh,BYTE PTR [esp+esi*8]
  404fef:	jecxz  0x405045
  404ff1:	push   0x45
  404ff3:	inc    esi
  404ff4:	test   al,0x74
  404ff6:	dec    edi
  404ff7:	imul   ebx,edx,0xffed2d1e
  404ffd:	or     ebp,eax
  404fff:	and    edx,DWORD PTR [edx-0x70]
  405002:	push   cs
  405003:	cld    
  405004:	sub    al,0x5e
  405006:	xchg   ebp,eax
  405007:	cwde   
  405008:	jb     0x40506b
  40500a:	outs   dx,DWORD PTR ds:[esi]
  40500b:	dec    ebx
  40500c:	dec    esi
  40500d:	stos   BYTE PTR es:[edi],al
  40500e:	adc    BYTE PTR [esi],bh
  405010:	dec    esp
  405011:	mov    edi,0x22774c55
  405016:	mov    eax,ds:0x87d8badc
  40501b:	mov    ch,0xbb
  40501d:	add    ecx,DWORD PTR [eax]
  40501f:	imul   DWORD PTR [eax]
  405021:	lea    edx,[ebp+0x42]
  405024:	lea    edi,[edi+0x6effab]
  40502a:	imul   ebp,DWORD PTR [edx+edx*8-0x77b12cc7],0x6a
  405032:	fcomp  DWORD PTR [ebx+0xd81c033]
  405038:	adc    al,0xb0
  40503a:	inc    edx
  40503b:	add    BYTE PTR [eax+edx*4],al
  40503e:	inc    edx
  40503f:	add    BYTE PTR [ebx],dh
  405041:	retf   0xd81
  405044:	adc    al,al
  405046:	inc    edx
  405047:	add    BYTE PTR [ebp+0x300000d],ch
  40504d:	into   
  40504e:	add    edi,0xfabdbee9
  405054:	mov    DWORD PTR ds:0x429014,0x6728
  40505e:	adc    eax,0xffffffff
  405061:	and    DWORD PTR ds:0x428014,0x429000
  40506b:	xor    eax,0x0
  40506e:	mov    DWORD PTR [ebp-0xc],eax
  405071:	push   ebx
  405072:	add    DWORD PTR ds:0x429000,ebx
  405078:	xor    ebx,ebx
  40507a:	xor    edi,0x8a29a12b
  405080:	sbb    eax,0xb3d
  405085:	mov    eax,ecx
  405087:	add    eax,0xfabdbee9
  40508c:	mov    DWORD PTR ds:0x42c000,0x688f
  405096:	adc    ebx,0xffffffff
  405099:	xor    eax,0x8a29a12b
  40509e:	or     DWORD PTR ds:0x429010,0x42800c
  4050a8:	xor    ebx,0x0
  4050ab:	mov    DWORD PTR ds:0x428024,0x3d4a
  4050b5:	cmp    eax,edi
  4050b7:	jne    0x4050d6
  4050bd:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050c0:	je     0x40513e
  4050c6:	jmp    0x4050d6
  4050cb:	or     esi,DWORD PTR ds:0x42a01c
  4050d1:	mov    esi,0x3272e0
  4050d6:	mov    eax,DWORD PTR [ebp-0x4]
  4050d9:	mov    edi,DWORD PTR [ebp-0x8]
  4050dc:	xor    edi,edx
  4050de:	add    edi,esi
  4050e0:	mov    esi,DWORD PTR [ebp+0x8]
  4050e3:	imul   edi,ecx
  4050e6:	mov    ebx,DWORD PTR [ebp+0xc]
  4050e9:	xor    eax,edx
  4050eb:	add    eax,ecx
  4050ed:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  4050f4:	mov    BYTE PTR [edi+esi*1],al
  4050f7:	mov    eax,DWORD PTR [ebp-0x8]
  4050fa:	mov    esi,DWORD PTR [ebp+0x10]
  4050fd:	xor    eax,edx
  4050ff:	xor    ebx,ebx
  405101:	add    esi,0xfabdbee9
  405107:	adc    ebx,0xffffffff
  40510a:	lea    ecx,[ecx+eax*1+0x3272e0]
  405111:	xor    edi,edi
  405113:	xor    esi,0x8a29a12b
  405119:	xor    ebx,0x0
  40511c:	mov    eax,ecx
  40511e:	add    eax,0xfabdbee9
  405123:	adc    edi,0xffffffff
  405126:	xor    eax,0x8a29a12b
  40512b:	xor    edi,0x0
  40512e:	cmp    eax,esi
  405130:	jne    0x4050cb
  405136:	cmp    edi,ebx
  405138:	jne    0x4050cb
  40513e:	mov    eax,0xf89c85b8
  405143:	pop    ebx
  405144:	pop    edi
  405145:	pop    esi
  405146:	leave  
  405147:	ret    0xc
  40514a:	push   ebp
  40514b:	mov    ebp,esp
  40514d:	push   ecx
  40514e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  405155:	sub    ecx,0x3f14
  40515b:	mov    eax,DWORD PTR [ebp+0x8]
  40515e:	and    DWORD PTR ds:0x42a008,0x0
  405168:	xor    edx,edx
  40516a:	add    edx,DWORD PTR ds:0x42a008
  405170:	inc    edx
  405171:	mov    DWORD PTR ds:0x42a008,edx
  405177:	cmp    DWORD PTR ds:0x42a008,0xc
  40517e:	jne    0x4051a5
  405184:	push   DWORD PTR [ebp-0x10]
  405187:	push   DWORD PTR [ebp-0xc]
  40518a:	push   0x428000
  40518f:	push   0x12c2
  405194:	push   0x648f
  405199:	push   DWORD PTR [ebp-0x14]
  40519c:	push   DWORD PTR [ebp-0x20]
  40519f:	call   DWORD PTR ds:0x42dc7f
  4051a5:	cmp    DWORD PTR ds:0x42a008,0xb
  4051ac:	jne    0x4051bf
  4051b2:	mov    edx,DWORD PTR ds:0x42a008
  4051b8:	inc    edx
  4051b9:	mov    DWORD PTR ds:0x42a008,edx
  4051bf:	cmp    DWORD PTR ds:0x42a008,0x15
  4051c6:	jb     0x405168
  4051cc:	and    DWORD PTR ds:0x42800c,0x0
  4051d6:	mov    edx,DWORD PTR ds:0x42800c
  4051dc:	inc    edx
  4051dd:	mov    DWORD PTR ds:0x42800c,edx
  4051e3:	cmp    DWORD PTR ds:0x42800c,0xd
  4051ea:	jne    0x40520d
  4051f0:	push   0x42a018
  4051f5:	push   0x46e1
  4051fa:	push   0x42d0d9
  4051ff:	push   DWORD PTR [ebp-0x1c]
  405202:	push   0x1518
  405207:	call   DWORD PTR ds:0x42dc83
  40520d:	cmp    DWORD PTR ds:0x42800c,0xc
  405214:	jne    0x405229
  40521a:	xor    edx,edx
  40521c:	add    edx,DWORD PTR ds:0x42800c
  405222:	inc    edx
  405223:	mov    DWORD PTR ds:0x42800c,edx
  405229:	cmp    DWORD PTR ds:0x42800c,0x14
  405230:	jb     0x4051d6
  405236:	movsx  eax,BYTE PTR [eax]
  405239:	mov    edx,0x3272e0
  40523e:	sub    eax,edx
  405240:	mov    ecx,0x7510899
  405245:	xor    eax,ecx
  405247:	cmp    eax,0xf89c85f4
  40524c:	jne    0x40527b
  405252:	mov    eax,DWORD PTR [ebp+0x8]
  405255:	push   esi
  405256:	mov    esi,DWORD PTR [ebp+0x8]
  405259:	add    esi,DWORD PTR [eax+0x3c]
  40525c:	mov    DWORD PTR [ebp+0x8],esi
  40525f:	mov    eax,DWORD PTR [ebp-0x4]
  405262:	mov    esi,DWORD PTR [ebp+0x8]
  405265:	xor    eax,ecx
  405267:	add    eax,edx
  405269:	cmp    DWORD PTR [esi+0x54],eax
  40526c:	pop    esi
  40526d:	je     0x40527b
  405273:	mov    eax,DWORD PTR [ebp+0x8]
  405276:	jmp    0x405282
  40527b:	mov    eax,DWORD PTR [ebp-0x4]
  40527e:	xor    eax,ecx
  405280:	add    eax,edx
  405282:	leave  
  405283:	ret    0x4
  405286:	push   ebp
  405287:	mov    ebp,esp
  405289:	sub    esp,0x40
  40528c:	push   ebx
  40528d:	sub    DWORD PTR ds:0x42a010,0x42b014
  405297:	push   esi
  405298:	mov    DWORD PTR ds:0x42c018,0x7544
  4052a2:	push   edi
  4052a3:	add    DWORD PTR ds:0x429004,0x428008
  4052ad:	lea    eax,[ebp-0x24]
  4052b0:	push   eax
  4052b1:	sub    DWORD PTR ds:0x42b014,0x154
  4052bb:	lea    eax,[ebp-0x20]
  4052be:	add    DWORD PTR ds:0x42901c,0x429000
  4052c8:	push   eax
  4052c9:	call   DWORD PTR ds:0x42dc87
  4052cf:	xor    DWORD PTR ds:0x428008,0x42c01c
  4052d9:	push   0x21
  4052db:	sbb    DWORD PTR ds:0x42c01c,0x42a014
  4052e5:	jmp    0x40766a
  4052ea:	push   ss
  4052eb:	xor    BYTE PTR [ecx-0xb6c4a5d],0x77
  4052f2:	es loop 0x4052d5
  4052f5:	and    DWORD PTR [ebx+0x24661c7],ebp
  4052fb:	pop    edi
  4052fc:	jp     0x405378
  4052fe:	add    bl,BYTE PTR [edi+0x7a]
  405301:	jp     0x40531e
  405303:	in     al,dx
  405304:	jg     0x405299
  405306:	repnz popa 
  405308:	pop    eax
  405309:	mov    edi,0x987f8b17
  40530e:	out    0x61,al
  405310:	jl     0x405381
  405312:	dec    edi
  405313:	xchg   BYTE PTR [eax+0x29],dh
  405316:	xchg   ebp,eax
  405317:	push   ebx
  405318:	loop   0x4052b9
  40531a:	cli    
  40531b:	adc    BYTE PTR [eax-0x4d56e188],0x6a
  405322:	add    bl,BYTE PTR [esi]
  405324:	jne    0x4052ff
  405326:	or     BYTE PTR [ecx],bl
  405328:	add    al,0x4a
  40532a:	push   edi
  40532b:	cmp    BYTE PTR ds:0x26366b21,0x2b
  405332:	fs out dx,eax
  405334:	and    esp,DWORD PTR [eax+0x5338df2a]
  40533a:	jae    0x4052d6
  40533c:	xchg   ebx,eax
  40533d:	mov    cl,0x56
  40533f:	cmp    DWORD PTR [ecx+eiz*1+0x563c7c19],edx
  405346:	dec    edx
  405347:	cmp    al,0x6d
  405349:	xchg   edi,eax
  40534a:	pop    ds
  40534b:	jae    0x405395
  40534d:	xor    BYTE PTR [ecx+eiz*8-0x72f7b829],cl
  405354:	loop   0x40530c
  405356:	into   
  405357:	in     eax,0xfd
  405359:	cmp    dh,BYTE PTR [ebx]
  40535b:	lea    edi,[eax]
  40535d:	idiv   eax
  40535f:	hlt    
  405360:	(bad)  
  405361:	gs pop edx
  405363:	addr16 cld 
  405365:	(bad)  
  405366:	mov    edi,0x20ec88a5
  40536b:	fstp   st(0)
  40536d:	xor    ebp,DWORD PTR [ebx]
  40536f:	std    
  405370:	mov    ebp,DWORD PTR [ebx+ebx*1+0x15]
  405374:	lahf   
  405375:	mov    DWORD PTR gs:[esi+0x50],ebx
  405379:	(bad)  [edx]
  40537b:	fstp   QWORD PTR cs:[edx-0x67]
  40537f:	jle    0x405349
  405381:	aad    0x9d
  405383:	retw   
  405385:	and    cl,al
  405387:	ins    BYTE PTR es:[edi],dx
  405388:	aad    0x1
  40538a:	sbb    BYTE PTR [ecx-0x197e00d],cl
  405390:	mov    eax,0x45411c14
  405395:	jb     0x4053be
  405397:	lods   eax,DWORD PTR ds:[esi]
  405398:	test   al,0xa2
  40539a:	test   eax,0xf75792ab
  40539f:	mov    ds,WORD PTR ds:[ebx+0x7c]
  4053a3:	cmc    
  4053a4:	test   BYTE PTR [ebx],cl
  4053a6:	mov    ebx,0x769f7589
  4053ab:	shl    BYTE PTR [ebp+0x204db358],0xa9
  4053b2:	or     dh,cl
  4053b4:	jmp    0x40539e
  4053b6:	xchg   esp,eax
  4053b7:	fadd   QWORD PTR [esi]
  4053b9:	(bad)  
  4053ba:	sub    BYTE PTR [edi],al
  4053bc:	inc    ebp
  4053bd:	(bad)  
  4053be:	sbb    ebx,eax
  4053c0:	push   cs
  4053c1:	retf   
  4053c2:	mov    ds:0x71cda706,al
  4053c7:	gs jmp 0x56cb:0xc60a0704
  4053cf:	jno    0x4053fe
  4053d1:	test   DWORD PTR [edi+0x7a],ecx
  4053d4:	inc    eax
  4053d5:	in     al,0x7d
  4053d7:	mov    edi,0xb859c6b7
  4053dc:	daa    
  4053dd:	lahf   
  4053de:	push   ss
  4053df:	mov    cl,0xf7
  4053e1:	and    al,0xd7
  4053e3:	call   0xf455:0xfb7240e4
  4053ea:	sbb    DWORD PTR [eax+0x3db4a468],ebx
  4053f0:	or     esp,DWORD PTR [ecx-0x411b96a8]
  4053f6:	dec    esi
  4053f7:	mov    BYTE PTR [ebp-0x27],cl
  4053fa:	js     0x40541d
  4053fc:	jge    0x405429
  4053fe:	retf   0x7e88
  405401:	pop    esp
  405402:	xchg   ebx,eax
  405403:	sub    al,BYTE PTR [esi]
  405405:	push   ss
  405406:	jnp    0x40540e
  405408:	add    BYTE PTR [ecx+0x21],cl
  40540b:	xor    dl,dl
  40540d:	inc    eax
  40540e:	jnp    0x405404
  405410:	jmp    0x28ab14f0
  405415:	out    dx,al
  405416:	mov    ch,0x58
  405418:	xchg   BYTE PTR [ebx],bl
  40541a:	dec    esi
  40541b:	dec    ebp
  40541c:	push   es
  40541d:	cs pop esp
  40541f:	outs   dx,DWORD PTR ds:[esi]
  405420:	fadd   DWORD PTR ss:[esi]
  405423:	push   ds
  405424:	or     al,BYTE PTR [ebp-0x11]
  405427:	jno    0x40543e
  405429:	cmp    ecx,ebx
  40542b:	mov    ecx,0x4777ab64
  405430:	repnz and cl,0xe4
  405434:	dec    ebp
  405435:	test   DWORD PTR ds:0xe8b04f66,eax
  40543b:	test   BYTE PTR [ebp+0x1bfed83],ah
  405441:	sub    DWORD PTR [esi],esi
  405443:	into   
  405444:	push   es
  405445:	lods   eax,DWORD PTR ds:[esi]
  405446:	ficomp WORD PTR [esi+0x26]
  405449:	and    esp,DWORD PTR [ebx]
  40544b:	cld    
  40544c:	loope  0x4053ea
  40544e:	mov    dh,0x5e
  405450:	xchg   esp,eax
  405451:	and    al,0xed
  405453:	test   BYTE PTR [edi+0x44],bh
  405456:	pop    eax
  405457:	loopne 0x4054a9
  405459:	mov    ebp,0x64208925
  40545e:	into   
  40545f:	enter  0x765,0xbf
  405463:	xor    dl,BYTE PTR [ebp-0x108d5aec]
  405469:	inc    ebp
  40546a:	jb     0x40548f
  40546c:	mov    al,ds:0xf21f8f0
  405471:	out    dx,eax
  405472:	mov    ebp,0x7448ac9d
  405477:	sub    ebx,DWORD PTR [esi]
  405479:	sub    BYTE PTR ds:0xfad88f,0xe4
  405480:	push   es
  405481:	inc    ebp
  405482:	div    DWORD PTR [edi-0x36]
  405485:	cmp    BYTE PTR [eax],bh
  405487:	pop    esp
  405488:	jbe    0x40544b
  40548a:	inc    esi
  40548b:	mov    eax,ds:0x7c564e1b
  405490:	stos   DWORD PTR es:[edi],eax
  405491:	and    DWORD PTR [esi-0x6f08a66b],0xf384af6c
  40549b:	(bad)  
  40549c:	addr16 sbb eax,0x65f52f52
  4054a2:	xchg   edx,eax
  4054a3:	fdiv   st(6),st
  4054a5:	pop    esp
  4054a6:	push   edi
  4054a7:	scas   eax,DWORD PTR es:[edi]
  4054a8:	xchg   esi,eax
  4054a9:	xchg   edi,eax
  4054aa:	sbb    BYTE PTR [ebp-0x4d1ca1ca],ch
  4054b0:	lock cmp BYTE PTR [eax],bh
  4054b3:	xchg   BYTE PTR [edi-0x2f3b092c],cl
  4054b9:	pop    ecx
  4054ba:	icebp  
  4054bb:	dec    edi
  4054bc:	sub    bh,BYTE PTR [esi+0x15]
  4054bf:	arpl   WORD PTR [eax+0x73],di
  4054c2:	sub    eax,0x1ca20d29
  4054c7:	cli    
  4054c8:	dec    ebx
  4054c9:	mov    al,BYTE PTR [ebp-0x4476ded8]
  4054cf:	mov    edx,0xf40ff80e
  4054d4:	push   edi
  4054d5:	(bad)  
  4054d6:	popf   
  4054d7:	clc    
  4054d8:	cmp    BYTE PTR [eax-0xb],ah
  4054db:	jnp    0x405514
  4054dd:	in     al,dx
  4054de:	outs   dx,DWORD PTR ds:[esi]
  4054df:	jno    0x405502
  4054e1:	sbb    al,0xf5
  4054e3:	nop
  4054e4:	enter  0x1eac,0x4e
  4054e8:	push   ebx
  4054e9:	and    edx,DWORD PTR [ecx+0x49358056]
  4054ef:	inc    ebp
  4054f0:	es ins BYTE PTR es:[edi],dx
  4054f2:	pop    ebp
  4054f3:	and    ebp,ebx
  4054f5:	loop   0x405539
  4054f7:	pushf  
  4054f8:	cmp    esp,DWORD PTR ds:[ecx]
  4054fb:	mov    cl,0x51
  4054fd:	(bad)  
  4054fe:	into   
  4054ff:	fmul   DWORD PTR [esi-0x21d4c414]
  405505:	leave  
  405506:	pop    ebp
  405507:	leave  
  405508:	enter  0x63c9,0x50
  40550c:	call   DWORD PTR [eax+0x68566813]
  405512:	outs   dx,BYTE PTR ds:[esi]
  405513:	mov    edx,0xf9d99d4e
  405519:	adc    BYTE PTR [eax+0x32],cl
  40551c:	popf   
  40551d:	push   0xffffff8d
  40551f:	push   edx
  405520:	sub    al,0xcd
  405522:	mov    esi,0xbcd09268
  405527:	movd   DWORD PTR ds:0x93060e4e,mm3
  40552e:	ins    DWORD PTR es:[edi],dx
  40552f:	test   DWORD PTR [ebx+0x50aa31ed],eax
  405535:	xchg   esi,eax
  405536:	jecxz  0x405548
  405538:	sub    ch,BYTE PTR [ebp+esi*8-0x60feb55e]
  40553f:	mov    esi,0x1309778f
  405544:	push   esp
  405545:	inc    esp
  405546:	ja     0x40552c
  405548:	(bad)  
  405549:	pop    eax
  40554a:	mov    ds:0xe2a66703,al
  40554f:	jle    0x4054d4
  405551:	imul   edx,eax,0xffffffdd
  405554:	hlt    
  405555:	daa    
  405556:	(bad)  
  405558:	imul   DWORD PTR [ebx]
  40555a:	and    DWORD PTR [ecx],ebx
  40555c:	loope  0x405549
  40555e:	cmp    edx,DWORD PTR [ebx+esi*2+0xb942a78]
  405565:	test   eax,0x8d15ae3a
  40556a:	and    al,0x57
  40556c:	shr    DWORD PTR cs:[ebx+0x43b7e4c0],1
  405573:	out    0xef,eax
  405575:	sbb    eax,0x59f11c3c
  40557a:	xor    ebx,DWORD PTR [esi-0x72]
  40557d:	mov    cl,BYTE PTR [ecx]
  40557f:	inc    edi
  405580:	ins    BYTE PTR es:[edi],dx
  405581:	int    0xcb
  405583:	jae    0x4055b5
  405585:	fild   WORD PTR [ebp+0x796375bc]
  40558b:	adc    al,0xc
  40558d:	les    eax,FWORD PTR [eax-0x3045b319]
  405593:	repnz inc eax
  405595:	push   cs
  405596:	loop   0x4055e4
  405598:	scas   eax,DWORD PTR es:[edi]
  405599:	sbb    eax,0x1a143cb0
  40559e:	sar    BYTE PTR [edx+edx*4-0x7c],0xc7
  4055a3:	cld    
  4055a4:	adc    BYTE PTR ds:0x30943e5b,0xb1
  4055ab:	(bad)  
  4055ac:	sub    al,0xa8
  4055ae:	xchg   esp,eax
  4055af:	(bad)  
  4055b0:	fsub   st(1),st
  4055b2:	mov    ds:0x64779c1d,eax
  4055b7:	xor    ah,bh
  4055b9:	loop   0x405554
  4055bb:	sub    dh,al
  4055bd:	mov    edi,0x3bc3d3f5
  4055c2:	fimul  DWORD PTR cs:[esi]
  4055c5:	fiadd  WORD PTR [edx+0x5c]
  4055c8:	fcom   DWORD PTR ds:0xdfc5e380
  4055ce:	test   DWORD PTR [edi+0x56598024],ebp
  4055d4:	test   BYTE PTR [ebp+0x2a],dh
  4055d7:	je     0x405651
  4055d9:	pusha  
  4055da:	pusha  
  4055db:	push   edi
  4055dc:	repnz pop esi
  4055de:	int3   
  4055df:	imul   esi,ebp,0x7a
  4055e2:	or     al,0x9f
  4055e4:	xor    al,0x18
  4055e6:	in     al,0xdf
  4055e8:	fisubr DWORD PTR [ecx-0x48c0db36]
  4055ee:	loop   0x4055ea
  4055f0:	(bad)  
  4055f1:	pop    edx
  4055f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f3:	int    0xdd
  4055f5:	rcl    DWORD PTR [ecx-0xd],1
  4055f8:	pusha  
  4055f9:	or     al,0x3d
  4055fb:	and    ecx,DWORD PTR [edx+0x741b9fe6]
  405601:	(bad)  
  405602:	je     0x4055e6
  405604:	and    edi,ebp
  405606:	xor    DWORD PTR ds:0xb12780e1,ecx
  40560c:	pop    edi
  40560d:	loope  0x405674
  40560f:	xchg   DWORD PTR [esi],eax
  405611:	loope  0x4055e9
  405613:	pop    ds
  405614:	xchg   ebp,eax
  405615:	(bad)  
  405616:	mov    eax,ds:0xa97f9294
  40561b:	mov    ds:0x8194bfc8,al
  405620:	inc    eax
  405621:	aam    0xec
  405623:	ficomp WORD PTR [esi]
  405625:	out    dx,eax
  405626:	retf   0x63bc
  405629:	cmp    eax,ebp
  40562b:	call   0x72084c4f
  405630:	pop    ebx
  405631:	add    eax,ebx
  405633:	xor    eax,0x616754e5
  405638:	lods   eax,DWORD PTR ds:[esi]
  405639:	pop    edi
  40563a:	cdq    
  40563b:	and    al,BYTE PTR [eax]
  40563d:	sbb    dh,bl
  40563f:	mov    DWORD PTR [edi],esi
  405641:	xor    eax,0xcfe5a03b
  405646:	stos   DWORD PTR es:[edi],eax
  405647:	test   BYTE PTR [eax+0xf],ch
  40564a:	daa    
  40564b:	xor    DWORD PTR [ebx],edx
  40564d:	(bad)  
  40564e:	dec    esp
  40564f:	xchg   ecx,eax
  405650:	lock repz call 0x4234:0xa71b02bd
  405659:	mov    bl,0xd3
  40565b:	loope  0x4056b8
  40565d:	bound  esp,QWORD PTR [esi+0x68]
  405660:	test   DWORD PTR [ecx+0x13],0x187aa1
  405667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405668:	jmp    0x4af091dc
  40566d:	xchg   edx,eax
  40566e:	push   0x3feb60d5
  405673:	jmp    FWORD PTR [eax+eax*8+0x39]
  405677:	pop    ebx
  405678:	clc    
  405679:	mov    bh,BYTE PTR [edx]
  40567b:	cmp    edx,DWORD PTR [ebp+0x73]
  40567e:	into   
  40567f:	adc    al,0xb6
  405681:	xchg   esi,eax
  405682:	clc    
  405683:	jle    0x405698
  405685:	jmp    0x628:0x8d8a0ac9
  40568c:	xor    al,0x9
  40568e:	xor    bh,dl
  405690:	(bad)  
  405691:	jne    0x4056c4
  405693:	jnp    0x4056f4
  405695:	jo     0x4056d5
  405697:	in     al,dx
  405698:	leave  
  405699:	dec    ecx
  40569a:	test   DWORD PTR [esp+ecx*8],ebp
  40569d:	mov    eax,ds:0x44d47494
  4056a2:	out    0x80,eax
  4056a4:	cmp    BYTE PTR [eax+0x2],bh
  4056a7:	js     0x4056b5
  4056a9:	push   eax
  4056aa:	xor    BYTE PTR ds:0x2828573,ah
  4056b0:	sbb    edi,DWORD PTR [ebx+0x7c6da1a2]
  4056b6:	test   al,0xd3
  4056b8:	out    0xe6,eax
  4056ba:	push   ecx
  4056bb:	adc    bh,BYTE PTR [ebx]
  4056bd:	sar    BYTE PTR [ecx+ebx*2-0x5975de30],cl
  4056c4:	ds mov ecx,0xb9958606
  4056ca:	int3   
  4056cb:	daa    
  4056cc:	mov    cl,0x4b
  4056ce:	inc    ebx
  4056cf:	xor    bl,BYTE PTR [ebx]
  4056d1:	jge    0x40573f
  4056d3:	popf   
  4056d4:	test   al,0x13
  4056d6:	test   BYTE PTR [ebp-0x60],bh
  4056d9:	stos   BYTE PTR es:[edi],al
  4056da:	mov    dh,0x9f
  4056dc:	jns    0x4056d3
  4056de:	scas   al,BYTE PTR es:[edi]
  4056df:	mov    edi,DWORD PTR [eax-0x4a]
  4056e2:	(bad)  [ecx]
  4056e4:	stos   DWORD PTR es:[edi],eax
  4056e5:	and    BYTE PTR [ecx+0x4c5c9e75],0x3a
  4056ec:	sbb    eax,0x2b57e36a
  4056f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f2:	xchg   edx,eax
  4056f3:	push   ss
  4056f4:	dec    esi
  4056f5:	es int3 
  4056f7:	inc    edx
  4056f8:	shl    BYTE PTR [ebp-0x5253c30a],0x9d
  4056ff:	pop    ss
  405700:	pop    ecx
  405701:	lock adc DWORD PTR [esi],ebx
  405704:	fisubr WORD PTR ds:0x57cd158b
  40570a:	mov    DWORD PTR [eax+0x37],esi
  40570d:	inc    eax
  40570e:	rcr    BYTE PTR [edx],1
  405710:	int    0x1b
  405712:	scas   eax,DWORD PTR es:[edi]
  405713:	aas    
  405714:	jbe    0x40575d
  405716:	jae    0x40570e
  405718:	out    dx,eax
  405719:	fild   DWORD PTR [ebp+0x4d]
  40571c:	adc    eax,0x30c4541b
  405721:	hlt    
  405722:	pop    es
  405723:	dec    edx
  405724:	mov    al,ds:0xc9c5f769
  405729:	fsubrp st(5),st
  40572b:	dec    ebp
  40572c:	cmp    edi,DWORD PTR [ebp+0x335c384d]
  405732:	push   0xfffffffb
  405734:	dec    ecx
  405735:	shl    BYTE PTR [edx-0x2d],cl
  405738:	sub    bh,dl
  40573a:	mov    ds:0xd0429e7a,al
  40573f:	in     eax,dx
  405740:	add    DWORD PTR [esi-0x7406cfd1],esp
  405746:	fnstenv [ebx]
  405748:	push   0x27
  40574a:	call   esp
  40574c:	xor    eax,0xcb03668d
  405751:	or     al,0x21
  405753:	cmc    
  405754:	addr16 (bad) 
  405756:	mov    ch,0xd5
  405758:	sbb    eax,0x862691cf
  40575d:	mov    ds:0x9ee63055,al
  405762:	ret    
  405763:	lods   al,BYTE PTR ds:[esi]
  405764:	sar    DWORD PTR [ecx-0x689a7353],1
  40576a:	popf   
  40576b:	sbb    BYTE PTR [eax],0x13
  40576e:	nop
  40576f:	xchg   esp,eax
  405770:	and    BYTE PTR [esi],dl
  405772:	loopne 0x405712
  405774:	jno    0x40572d
  405776:	sbb    eax,0x91a80535
  40577b:	adc    BYTE PTR [esi-0xe7462ae],bh
  405781:	and    ebp,eax
  405783:	xchg   ebx,eax
  405784:	jge    0x40578f
  405786:	outs   dx,DWORD PTR ds:[esi]
  405787:	or     BYTE PTR [ebx],bh
  405789:	ret    0x815
  40578c:	sbb    ch,BYTE PTR [ebp-0x5435e268]
  405792:	xchg   edx,eax
  405793:	xor    eax,0x2d366a93
  405798:	mov    ch,0x6a
  40579a:	xchg   esi,eax
  40579b:	cmp    BYTE PTR [edx-0x42],ch
  40579e:	sub    al,0xe1
  4057a0:	jmp    0x40581c
  4057a2:	mov    eax,ds:0x223aa083
  4057a7:	cld    
  4057a8:	stos   DWORD PTR es:[edi],eax
  4057a9:	scas   al,BYTE PTR es:[edi]
  4057aa:	inc    ebx
  4057ab:	les    ecx,FWORD PTR [ecx-0x2722795]
  4057b1:	clc    
  4057b2:	push   ss
  4057b3:	and    dl,BYTE PTR [edi-0x1247f50a]
  4057b9:	repz or eax,0x5df5a6d
  4057bf:	add    edx,edx
  4057c1:	outs   dx,DWORD PTR ds:[esi]
  4057c2:	and    edx,DWORD PTR [eax-0x4c]
  4057c5:	cwde   
  4057c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c7:	clc    
  4057c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c9:	sbb    esi,edi
  4057cb:	popa   
  4057cc:	push   cs
  4057cd:	inc    edi
  4057ce:	pop    edx
  4057cf:	push   eax
  4057d0:	fsub   DWORD PTR [edi+edx*8+0x5523634a]
  4057d7:	pop    edx
  4057d8:	ja     0x4057b2
  4057da:	push   cs
  4057db:	fwait
  4057dc:	iret   
  4057dd:	mov    BYTE PTR [ecx-0x4a5854e5],al
  4057e3:	push   esp
  4057e4:	cmp    DWORD PTR [ebx],edx
  4057e6:	jg     0x40579b
  4057e8:	bound  ebp,QWORD PTR [eax]
  4057ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057eb:	xor    al,0xdc
  4057ed:	out    0x47,eax
  4057ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f0:	in     al,dx
  4057f1:	addr16 dec eax
  4057f3:	xchg   ebx,eax
  4057f4:	sub    al,0xb9
  4057f6:	xchg   eax,ebx
  4057f8:	add    eax,0x544723a8
  4057fd:	pop    es
  4057fe:	or     eax,0x4149debe
  405803:	into   
  405804:	enter  0xc170,0x3d
  405808:	sahf   
  405809:	sbb    DWORD PTR [esp+edi*2+0x79],esi
  40580d:	hlt    
  40580e:	pop    ebp
  40580f:	lahf   
  405810:	ins    DWORD PTR es:[edi],dx
  405811:	mov    eax,0x69775d0d
  405816:	nop
  405817:	or     eax,0xa0c95c8d
  40581c:	pusha  
  40581d:	sbb    DWORD PTR [edi+ebx*4-0x55438287],esp
  405824:	add    al,0x2e
  405826:	shl    edx,0x32
  405829:	aam    0xc0
  40582b:	arpl   bp,bp
  40582d:	jecxz  0x405876
  40582f:	sar    BYTE PTR [eax],0x1e
  405832:	shl    ch,0xae
  405835:	jne    0x405887
  405837:	int3   
  405838:	push   esi
  405839:	(bad)  
  40583a:	adc    edi,DWORD PTR [eax+0x34]
  40583d:	call   0xd2298e92
  405842:	push   ss
  405843:	adc    DWORD PTR [edi-0x5d],0xffffffa7
  405847:	mov    ah,0xce
  405849:	mov    esp,0xcad4dcc9
  40584e:	fstp   st(0)
  405850:	jl     0x40583c
  405852:	sbb    eax,0x82deb603
  405857:	or     al,0x34
  405859:	retf   
  40585a:	imul   ecx,DWORD PTR [edi+0x1af924de],0xc57200bb
  405864:	or     BYTE PTR [ebx+0x2ddd3b38],al
  40586a:	mov    BYTE PTR [ebp-0x604280b8],0x2f
  405871:	pop    eax
  405872:	(bad)  
  405873:	icebp  
  405874:	sti    
  405875:	lock sbb cl,dl
  405878:	or     dh,dh
  40587a:	mov    al,ds:0x15848bde
  40587f:	push   ecx
  405880:	call   0x8b19:0x4ca60646
  405887:	mov    ds:0xd782ae13,al
  40588c:	or     eax,esp
  40588e:	seta   BYTE PTR [edx]
  405891:	cmp    BYTE PTR [ebp+0x71ea10a7],bh
  405897:	loopne 0x405915
  405899:	outs   dx,DWORD PTR ds:[esi]
  40589a:	ins    BYTE PTR es:[edi],dx
  40589b:	or     eax,0x88059a94
  4058a0:	or     DWORD PTR [edx],esi
  4058a2:	xor    eax,0x7935c0fa
  4058a7:	cmc    
  4058a8:	jo     0x4058f7
  4058aa:	push   esi
  4058ab:	xchg   edx,eax
  4058ac:	nop
  4058ad:	scas   eax,DWORD PTR es:[edi]
  4058ae:	hlt    
  4058af:	rol    DWORD PTR [edx],cl
  4058b1:	inc    esp
  4058b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b3:	loop   0x4058d4
  4058b5:	inc    edi
  4058b6:	fld    TBYTE PTR [ebx]
  4058b8:	inc    ebp
  4058b9:	cmp    cl,bh
  4058bb:	pop    esp
  4058bc:	mov    esi,ss
  4058be:	popa   
  4058bf:	adc    BYTE PTR [esi-0xc29d77a],bl
  4058c5:	cmp    DWORD PTR [ebx-0x1e],esp
  4058c8:	xchg   edx,eax
  4058c9:	push   es
  4058ca:	inc    edx
  4058cb:	dec    esp
  4058cc:	(bad)  
  4058cd:	(bad)  [edx]
  4058cf:	lock nop
  4058d1:	jb     0x40585c
  4058d3:	xchg   DWORD PTR [edx-0x51],edi
  4058d6:	pop    ds
  4058d7:	xchg   esp,eax
  4058d8:	cmp    bl,BYTE PTR [edx-0x2d419652]
  4058de:	push   ecx
  4058df:	inc    edi
  4058e0:	dec    BYTE PTR [ecx]
  4058e2:	test   eax,0xccddb119
  4058e7:	hlt    
  4058e8:	jge    0x405908
  4058ea:	sbb    DWORD PTR [edi],ecx
  4058ec:	std    
  4058ed:	arpl   cx,bx
  4058ef:	xor    eax,0x2576da1a
  4058f4:	mov    al,0x6f
  4058f6:	push   cs
  4058f7:	cmp    ebx,esp
  4058f9:	popf   
  4058fa:	cmc    
  4058fb:	inc    esp
  4058fc:	and    eax,DWORD PTR [ebx-0x583d8151]
  405902:	xchg   DWORD PTR [ecx-0xf],ebx
  405905:	xchg   edx,eax
  405906:	pop    ecx
  405907:	sbb    al,0xdc
  405909:	(bad)  
  40590a:	jno    0x4058e4
  40590c:	ss imul ebp,edx,0xfb40b5bd
  405913:	rcl    DWORD PTR [ebp+0x2],0x66
  405917:	pushf  
  405918:	lods   eax,DWORD PTR ds:[esi]
  405919:	and    al,0x1
  40591b:	cmp    ebx,esp
  40591d:	mov    eax,ds:0xbd01433
  405922:	and    BYTE PTR [esi-0x7],ch
  405925:	adc    bl,BYTE PTR [edi+0x1b]
  405928:	loope  0x405964
  40592a:	fstp   DWORD PTR [esi-0x172cb8c3]
  405930:	or     eax,0x4edba84e
  405935:	jno    0x4058cf
  405937:	add    DWORD PTR [edi+ecx*8],0x8fbb9f0d
  40593e:	xor    BYTE PTR [esi+0xb41729a],0x6d
  405945:	dec    ebx
  405946:	sbb    dh,BYTE PTR ds:0x269d13f4
  40594c:	mov    DWORD PTR ds:0x226e6f2c,esp
  405952:	jle    0x405925
  405954:	addr16 jge 0x405961
  405957:	imul   esi,DWORD PTR [edi],0xe3a8201e
  40595d:	(bad)  
  40595e:	push   eax
  40595f:	out    dx,al
  405960:	fstp   st(0)
  405962:	mov    ecx,0xb0bbf444
  405967:	jo     0x405988
  405969:	push   esp
  40596a:	jbe    0x4059b2
  40596c:	push   ecx
  40596d:	clc    
  40596e:	jge    0x405906
  405970:	adc    BYTE PTR [ecx],cl
  405972:	mov    ebp,0x9645f183
  405977:	sub    eax,0xcb3ee78d
  40597c:	ret    
  40597d:	lahf   
  40597e:	outs   dx,BYTE PTR ds:[esi]
  40597f:	push   0xffffff97
  405981:	lods   eax,DWORD PTR ds:[esi]
  405982:	mov    gs,WORD PTR [esi]
  405984:	sbb    ecx,DWORD PTR fs:[eax+edx*1-0x65]
  405989:	data16 xor al,BYTE PTR [edi-0x2a]
  40598d:	xchg   edi,eax
  40598e:	pop    ebx
  40598f:	inc    ecx
  405990:	cmp    cl,BYTE PTR [ebp+0x46]
  405993:	sub    al,0x76
  405996:	mov    BYTE PTR [edi],0x16
  405999:	(bad)  
  40599a:	bnd jmp 0x40591d
  40599d:	sbb    eax,DWORD PTR [edi+0x1824049d]
  4059a3:	xor    eax,0xff21fa78
  4059a8:	ret    0x7c40
  4059ab:	sub    edi,ecx
  4059ad:	cmp    DWORD PTR [esi+ebp*4-0x30],eax
  4059b1:	fucompp 
  4059b3:	mov    bh,0x55
  4059b5:	dec    esp
  4059b6:	in     al,0xb3
  4059b8:	adc    BYTE PTR [esi-0x151bf17],dh
  4059be:	cmp    bl,bh
  4059c0:	push   esi
  4059c1:	iret   
  4059c2:	xor    DWORD PTR [edx],ebx
  4059c4:	sub    BYTE PTR [esi-0x7a],bl
  4059c7:	dec    esi
  4059c8:	adc    BYTE PTR [ebx],cl
  4059ca:	js     0x4059b2
  4059cc:	rcl    DWORD PTR [eax+0x5f9279e6],0xa8
  4059d3:	stos   BYTE PTR es:[edi],al
  4059d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d5:	add    al,0x6e
  4059d7:	sub    dh,BYTE PTR [eax+0x1e22f237]
  4059dd:	sbb    cl,BYTE PTR ds:0x35d40ca4
  4059e3:	jle    0x405980
  4059e5:	sahf   
  4059e6:	inc    esi
  4059e7:	xchg   ebp,eax
  4059e8:	mov    WORD PTR [ecx],cs
  4059ea:	cwde   
  4059eb:	sbb    al,0xff
  4059ed:	pop    esp
  4059ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ef:	repnz lds esp,FWORD PTR [eax+0x15]
  4059f3:	arpl   WORD PTR ds:[eax],bp
  4059f6:	mov    esi,0xdc6b6a1c
  4059fb:	add    al,0x82
  4059fd:	adc    BYTE PTR [eax+0x4b],dl
  405a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a01:	out    0xb4,eax
  405a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a04:	out    0x25,al
  405a06:	stc    
  405a07:	je     0x405a4d
  405a09:	test   eax,0x6a620415
  405a0e:	scas   eax,DWORD PTR es:[edi]
  405a0f:	hlt    
  405a10:	lods   eax,DWORD PTR ds:[esi]
  405a11:	fstp   DWORD PTR [esi+0x39]
  405a14:	scas   eax,DWORD PTR es:[edi]
  405a15:	mov    ah,0x57
  405a17:	adc    BYTE PTR [edx+0x1cff1f05],al
  405a1d:	push   ebp
  405a1e:	daa    
  405a1f:	ja     0x405a74
  405a21:	int3   
  405a22:	jmp    0x3f9f:0xfa688a44
  405a29:	sub    ch,ah
  405a2b:	sub    cl,dh
  405a2d:	dec    ebp
  405a2e:	les    esi,FWORD PTR [eax]
  405a30:	adc    ebp,DWORD PTR [ebp-0x3a]
  405a33:	std    
  405a34:	adc    esi,DWORD PTR [ebp-0x35037b95]
  405a3a:	js     0x405a9d
  405a3c:	adc    bh,ah
  405a3e:	js     0x405a5b
  405a40:	stos   DWORD PTR es:[edi],eax
  405a41:	or     ah,al
  405a43:	jle    0x405a68
  405a45:	xor    eax,0xfd6c341e
  405a4a:	push   esp
  405a4b:	or     bl,BYTE PTR [esi+edi*1+0x56]
  405a4f:	xchg   ecx,eax
  405a50:	jb     0x4059da
  405a52:	inc    ebx
  405a53:	dec    ecx
  405a54:	outs   dx,DWORD PTR ds:[esi]
  405a55:	xor    edx,DWORD PTR [ebx]
  405a57:	scas   eax,DWORD PTR es:[edi]
  405a58:	push   cs
  405a59:	push   eax
  405a5a:	ret    
  405a5b:	call   0xa26ac883
  405a60:	popa   
  405a61:	cmp    BYTE PTR [ebx+0x4],dl
  405a64:	push   eax
  405a65:	scas   eax,DWORD PTR es:[edi]
  405a66:	pop    ebx
  405a67:	sub    al,0x25
  405a69:	xor    eax,0x967f90d1
  405a6e:	pop    edi
  405a6f:	push   edx
  405a70:	push   eax
  405a71:	push   edx
  405a72:	push   esi
  405a73:	out    dx,al
  405a74:	mov    ah,al
  405a76:	sub    al,0xe6
  405a78:	rcl    DWORD PTR [esp+ecx*8+0x24],cl
  405a7c:	ror    DWORD PTR [eax-0x20],1
  405a7f:	not    esp
  405a81:	and    al,BYTE PTR [edi]
  405a83:	outs   dx,DWORD PTR ds:[esi]
  405a84:	sub    edi,DWORD PTR [ebp-0x3eb0d01d]
  405a8a:	aaa    
  405a8b:	push   ds
  405a8c:	(bad)  
  405a8d:	mov    cs,WORD PTR [ebp-0x21e2d000]
  405a93:	sub    bh,BYTE PTR [edi]
  405a95:	icebp  
  405a96:	clc    
  405a97:	push   edx
  405a98:	pop    ss
  405a99:	fiadd  WORD PTR [edx]
  405a9b:	in     eax,dx
  405a9c:	popf   
  405a9d:	fstp   DWORD PTR [esi]
  405a9f:	push   0x3b
  405aa1:	ss ret 0x72f1
  405aa5:	jo     0x405afd
  405aa7:	mov    ch,0xec
  405aa9:	xchg   ebx,eax
  405aaa:	sub    BYTE PTR gs:0x132f2aa0,ch
  405ab1:	mov    al,0x7
  405ab3:	fs cwde 
  405ab5:	mov    edx,0xebd4895e
  405aba:	mov    esp,0xe3234340
  405abf:	jp     0x405a57
  405ac1:	sbb    eax,edx
  405ac3:	cs scas al,BYTE PTR es:[edi]
  405ac5:	test   eax,0x93b7a058
  405aca:	ins    BYTE PTR es:[edi],dx
  405acb:	aaa    
  405acc:	xchg   ebp,eax
  405acd:	push   eax
  405ace:	jbe    0x405a74
  405ad0:	xor    edi,DWORD PTR [eax-0xa]
  405ad3:	mov    WORD PTR [ebx-0x6065dde8],fs
  405ad9:	mov    dh,0xf4
  405adb:	sbb    bh,BYTE PTR [esi-0x33]
  405ade:	rsm    
  405ae0:	xor    DWORD PTR [ecx+ebx*2+0x2dda5f6d],0xffffffc2
  405ae8:	lea    edi,[ebx-0x6e08d7d1]
  405aee:	sar    DWORD PTR es:[ecx],1
  405af1:	dec    eax
  405af2:	and    BYTE PTR [edx],bh
  405af4:	adc    eax,0x41dafbc8
  405af9:	outs   dx,DWORD PTR ds:[esi]
  405afa:	pop    ss
  405afb:	mov    bl,0x8d
  405afd:	push   cs
  405afe:	inc    esp
  405aff:	inc    ebx
  405b00:	pusha  
  405b01:	bound  edi,QWORD PTR [esi+0x35635e8c]
  405b07:	aad    0x54
  405b09:	and    edx,eax
  405b0b:	dec    ebx
  405b0c:	push   ds
  405b0d:	outs   dx,BYTE PTR ds:[esi]
  405b0e:	(bad)  
  405b0f:	dec    ecx
  405b10:	cli    
  405b11:	shr    esp,cl
  405b13:	in     eax,dx
  405b14:	push   ebp
  405b15:	retf   
  405b16:	nop
  405b17:	popf   
  405b18:	or     ebp,DWORD PTR [edi+0x3c]
  405b1b:	push   edi
  405b1c:	jb     0x405b61
  405b1e:	xor    BYTE PTR [edx-0x43],0x57
  405b22:	into   
  405b23:	les    edx,FWORD PTR [esi+0x3a8a79e0]
  405b29:	test   al,0xbb
  405b2b:	jg     0x405b60
  405b2d:	imul   ebp,DWORD PTR [edi+0x40],0x2ce7d0c4
  405b34:	mov    DWORD PTR [ebx],edx
  405b36:	xchg   esp,eax
  405b37:	scas   al,BYTE PTR es:[edi]
  405b38:	xor    DWORD PTR [edi],ebp
  405b3a:	jnp    0x405ac0
  405b3c:	push   ebp
  405b3d:	mov    esp,0x810cfe76
  405b42:	retf   0xc85a
  405b45:	(bad)  [edi+0x57]
  405b48:	add    cl,BYTE PTR [esi+ecx*4-0x6b]
  405b4c:	push   edi
  405b4d:	push   ecx
  405b4e:	mov    WORD PTR [edi+0x756dc929],ds
  405b54:	dec    edi
  405b55:	sub    esi,ebx
  405b57:	push   edi
  405b58:	fstp   QWORD PTR [ebx-0x55]
  405b5b:	jmp    0x405bc5
  405b5d:	fldcw  WORD PTR [edx]
  405b5f:	pushf  
  405b60:	dec    esi
  405b61:	scas   eax,DWORD PTR es:[edi]
  405b62:	jge    0x405bd4
  405b64:	ficom  WORD PTR [eax]
  405b66:	div    BYTE PTR [ebx-0x13]
  405b69:	adc    al,0x4d
  405b6b:	lods   al,BYTE PTR ds:[esi]
  405b6c:	push   ebx
  405b6d:	pop    esp
  405b6e:	rcl    DWORD PTR [edx],0x2f
  405b71:	mov    esi,0xa722af62
  405b76:	push   ss
  405b77:	int3   
  405b78:	mov    ah,BYTE PTR [ecx-0x3a36c88a]
  405b7e:	dec    DWORD PTR [ebp+0xc]
  405b81:	mov    ch,0x39
  405b83:	in     al,dx
  405b84:	and    ch,ch
  405b86:	mov    edi,0xe839415a
  405b8b:	mov    esi,0x92286cc4
  405b90:	mov    ebx,DWORD PTR [esi]
  405b92:	dec    edi
  405b93:	sar    ebx,cl
  405b95:	jmp    0x405b5b
  405b97:	sub    al,BYTE PTR ds:0x45af230e
  405b9d:	push   es
  405b9e:	sar    ch,cl
  405ba0:	dec    ecx
  405ba1:	out    0x21,al
  405ba3:	sbb    al,0x3a
  405ba5:	ret    0x3236
  405ba8:	xor    ecx,ebp
  405baa:	sbb    DWORD PTR [ecx],0x72ea388d
  405bb0:	xor    eax,edx
  405bb2:	and    BYTE PTR [eax],dl
  405bb4:	push   ss
  405bb5:	ds dec ebp
  405bb7:	(bad)  
  405bb8:	mov    eax,0x45a0613c
  405bbd:	pusha  
  405bbe:	mov    dh,0x83
  405bc0:	ins    DWORD PTR es:[edi],dx
  405bc1:	or     al,0xef
  405bc3:	(bad)  
  405bc4:	mov    ecx,DWORD PTR [esi]
  405bc6:	je     0x405c0c
  405bc8:	sbb    BYTE PTR [esi-0x477d058e],cl
  405bce:	inc    ebx
  405bcf:	sub    al,0x67
  405bd1:	outs   dx,DWORD PTR ds:[esi]
  405bd2:	test   al,0x87
  405bd4:	cli    
  405bd5:	push   ss
  405bd6:	pop    ebx
  405bd8:	fld    TBYTE PTR [ecx-0x2b0d537d]
  405bde:	mov    al,0x63
  405be0:	xchg   esi,eax
  405be1:	pop    edi
  405be2:	push   ecx
  405be3:	fucomi st,st(4)
  405be5:	xlat   BYTE PTR ds:[ebx]
  405be6:	xor    al,0xf5
  405be8:	jecxz  0x405b87
  405bea:	pop    es
  405beb:	in     al,0x87
  405bed:	clc    
  405bee:	mov    dl,0x82
  405bf0:	lds    ebp,FWORD PTR [ebx-0x33]
  405bf3:	lods   eax,DWORD PTR ds:[esi]
  405bf4:	ins    DWORD PTR es:[edi],dx
  405bf5:	jp     0x405b7f
  405bf7:	jnp    0x405bda
  405bf9:	pop    ds
  405bfa:	xchg   ebx,eax
  405bfb:	pusha  
  405bfc:	and    al,0xc7
  405bfe:	xchg   ebp,eax
  405bff:	xchg   BYTE PTR [esi-0xa],dl
  405c02:	push   ss
  405c03:	and    esp,DWORD PTR [esp+ecx*8]
  405c06:	inc    edx
  405c07:	fadd   st(7),st
  405c09:	push   edx
  405c0a:	jmp    0x405c02
  405c0c:	imul   ebp,DWORD PTR [esi+edi*8-0x20c3b9c1],0x7
  405c14:	mov    cl,0x7a
  405c16:	(bad)  
  405c17:	xchg   ebx,eax
  405c18:	xor    esi,eax
  405c1a:	loopne 0x405bd3
  405c1c:	cmp    esi,DWORD PTR [ecx+0x110bfefb]
  405c22:	fwait
  405c23:	sub    eax,0xcdc3c833
  405c28:	cld    
  405c29:	sub    ebp,eax
  405c2b:	out    0xf0,al
  405c2d:	out    0x47,eax
  405c2f:	repnz mov cl,0x61
  405c32:	xor    al,bh
  405c34:	fmul   QWORD PTR [eax]
  405c36:	(bad)  
  405c37:	inc    esp
  405c38:	mov    bh,0xe5
  405c3a:	mov    edx,0xc1664639
  405c3f:	mov    cl,0x45
  405c41:	dec    edx
  405c42:	cwde   
  405c43:	jl     0x405c56
  405c45:	pop    edi
  405c46:	idiv   BYTE PTR [esi+ebp*1-0x363e1b7]
  405c4d:	shl    DWORD PTR [ecx],1
  405c4f:	jmp    0x2dda40a8
  405c54:	sbb    BYTE PTR [ebx],0x1a
  405c57:	jo     0x405c84
  405c59:	sbb    eax,0xaf29ae1d
  405c5e:	ds jmp 0xeeef:0x8f5e8937
  405c66:	aam    0x1f
  405c68:	push   esp
  405c69:	and    BYTE PTR [ecx+ecx*1+0x16],bl
  405c6d:	popa   
  405c6e:	jnp    0x405c3f
  405c70:	push   ds
  405c71:	data16 add al,0x15
  405c74:	not    BYTE PTR [esi]
  405c76:	int    0xdc
  405c78:	jge    0x405c7d
  405c7a:	fwait
  405c7b:	data16 pushw 0xffc6
  405c7f:	hlt    
  405c80:	mov    bl,BYTE PTR [edx]
  405c82:	add    al,0x97
  405c84:	push   0x97809458
  405c89:	ins    BYTE PTR es:[edi],dx
  405c8a:	mov    ecx,DWORD PTR [esi]
  405c8c:	cld    
  405c8d:	loop   0x405c1e
  405c8f:	fsub   QWORD PTR [eax]
  405c91:	aaa    
  405c92:	scas   al,BYTE PTR es:[edi]
  405c93:	push   ebp
  405c94:	in     eax,0xfa
  405c96:	jmp    0x405c7c
  405c98:	inc    esp
  405c99:	pop    es
  405c9a:	jo     0x405ca4
  405c9c:	js     0x405ca4
  405c9e:	cmp    eax,DWORD PTR [ebx]
  405ca0:	mov    dh,0x3b
  405ca2:	int3   
  405ca3:	test   al,0xa9
  405ca5:	mov    bh,0xf4
  405ca7:	test   DWORD PTR [edi-0x42f613b9],ebx
  405cad:	dec    ebp
  405cae:	xor    cl,BYTE PTR [esi-0x42d06ae3]
  405cb4:	mov    ds:0xbf5241f1,al
  405cb9:	int    0xa7
  405cbb:	jp     0x405c7f
  405cbd:	fiadd  DWORD PTR ss:[esi+0x46]
  405cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc2:	rcr    ecx,cl
  405cc4:	lock jnp 0x405c7f
  405cc7:	or     dl,dl
  405cc9:	cmc    
  405cca:	pop    eax
  405ccb:	aaa    
  405ccc:	scas   al,BYTE PTR es:[edi]
  405ccd:	inc    edi
  405cce:	dec    esp
  405ccf:	cmp    eax,0x7a33922a
  405cd4:	xchg   ebx,eax
  405cd5:	and    BYTE PTR [edx],dh
  405cd7:	in     al,dx
  405cd8:	sti    
  405cd9:	mov    ?,WORD PTR ds:0xc05632f4
  405cdf:	xor    BYTE PTR [eax+0x41404b4b],0xe7
  405ce6:	xlat   BYTE PTR ds:[ebx]
  405ce7:	jbe    0x405d13
  405ce9:	bound  ecx,QWORD PTR [edi]
  405ceb:	frstor [edi-0x16]
  405cee:	mov    ah,0x60
  405cf0:	call   0x9448:0xc7f21434
  405cf7:	sub    eax,0x1da74e43
  405cfc:	pop    ecx
  405cfd:	scas   eax,DWORD PTR es:[edi]
  405cfe:	fld    DWORD PTR [esi+0x1091b3ab]
  405d04:	jecxz  0x405c9e
  405d06:	fsubr  DWORD PTR [ecx+0x50]
  405d09:	mov    cs,edi
  405d0b:	neg    BYTE PTR [ebp-0x17]
  405d0e:	scas   eax,DWORD PTR es:[edi]
  405d0f:	jp     0x405cad
  405d11:	dec    ebx
  405d12:	and    eax,0x1235dfb3
  405d17:	leave  
  405d18:	jbe    0x405cfd
  405d1a:	xchg   ebp,eax
  405d1b:	mov    ebp,0xc6174ddd
  405d20:	shl    edx,cl
  405d22:	iret   
  405d23:	jmp    0xed41043b
  405d28:	adc    eax,0x5c9c2285
  405d2d:	shr    DWORD PTR [ecx+ecx*1-0x15ab82e6],1
  405d34:	mov    eax,0xbd4a9798
  405d39:	mov    BYTE PTR [edx-0x40882886],ah
  405d3f:	adc    DWORD PTR [bx+di-0x79],edi
  405d43:	shl    DWORD PTR [edx+0x605b9f7c],cl
  405d49:	fnstsw WORD PTR [eax+0x2addeb48]
  405d4f:	into   
  405d50:	cmp    cl,ch
  405d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d53:	cld    
  405d54:	xchg   ebx,eax
  405d55:	adc    eax,0xbc8c63b8
  405d5a:	ins    DWORD PTR es:[edi],dx
  405d5b:	repnz inc esp
  405d5d:	sub    edi,DWORD PTR [ecx+0x0]
  405d60:	push   edx
  405d61:	fsub   QWORD PTR [edi-0x49]
  405d64:	mov    ebp,edi
  405d66:	xchg   ecx,eax
  405d67:	das    
  405d68:	shl    DWORD PTR [eax],1
  405d6a:	mov    ds:0xe4c4ebef,al
  405d6f:	mov    al,0x5f
  405d71:	pop    esp
  405d72:	xor    edi,DWORD PTR [ebx]
  405d74:	aam    0x6e
  405d76:	sub    eax,0x318a7bac
  405d7b:	push   edx
  405d7c:	adc    al,0x44
  405d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d7f:	xchg   ecx,eax
  405d80:	jmp    0x405d63
  405d82:	jle    0x405d52
  405d84:	test   DWORD PTR [eax],edi
  405d86:	pop    edx
  405d87:	mov    ch,0xd4
  405d89:	inc    esi
  405d8a:	call   FWORD PTR [edi+0x6c]
  405d8d:	hlt    
  405d8e:	ins    BYTE PTR es:[edi],dx
  405d8f:	xchg   esp,eax
  405d90:	inc    eax
  405d91:	ret    0x2256
  405d94:	rcr    BYTE PTR [edx-0xda88fc4],0x64
  405d9b:	jmp    0x405de4
  405d9d:	xchg   esi,eax
  405d9e:	cwde   
  405d9f:	jmp    0x3082:0xced598db
  405da6:	in     al,dx
  405da7:	sbb    eax,0xee98cdb6
  405dac:	imul   BYTE PTR [esi]
  405dae:	adc    BYTE PTR ds:0xbce2517d,al
  405db4:	mov    cl,0x8
  405db6:	jns    0x405d8c
  405db8:	or     BYTE PTR [edi-0x75],ah
  405dbb:	aad    0x67
  405dbd:	les    ebx,FWORD PTR [esp+edi*8-0xad161d7]
  405dc4:	arpl   si,si
  405dc6:	push   es
  405dc7:	fcom   DWORD PTR [esi+0x3cecca9d]
  405dcd:	dec    ecx
  405dce:	push   ds
  405dcf:	inc    edi
  405dd0:	int    0xcf
  405dd2:	sbb    al,0x30
  405dd4:	ins    DWORD PTR es:[edi],dx
  405dd5:	mov    eax,ds:0x51153b8b
  405dda:	mov    al,0xd4
  405ddc:	mov    dh,0x4c
  405dde:	bound  ebx,QWORD PTR [ebx-0xc60e985]
  405de4:	mov    bh,0xef
  405de6:	pop    esp
  405de7:	adc    al,0x7c
  405de9:	lea    ebp,[edx-0x344c1278]
  405def:	mov    ds:0x2b1f991d,al
  405df4:	cmp    edx,DWORD PTR [ebx+0x70]
  405df7:	sub    eax,0x1dc342e
  405dfc:	xchg   ecx,eax
  405dfd:	jne    0x405d92
  405dff:	sbb    BYTE PTR [esi],0xd7
  405e02:	cs (bad) 
  405e04:	adc    eax,0xdf7434c4
  405e09:	std    
  405e0a:	pop    ebp
  405e0b:	xor    al,0xba
  405e0d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405e0f:	pop    ss
  405e10:	sub    DWORD PTR [edx-0x66],ecx
  405e13:	retf   0xcb56
  405e16:	dec    ebx
  405e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e18:	iret   
  405e19:	paddb  mm0,mm6
  405e1c:	leave  
  405e1d:	or     esi,DWORD PTR [edi]
  405e1f:	dec    ecx
  405e20:	je     0x405e98
  405e22:	sub    DWORD PTR [esi+0x3b],esp
  405e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e26:	shl    BYTE PTR [edi+0x7b623ecd],cl
  405e2c:	or     BYTE PTR [ebx+0x4bf22c2c],bl
  405e32:	(bad)  
  405e33:	jle    0x405e2b
  405e35:	mov    ebp,0x2f5489fc
  405e3a:	pop    ecx
  405e3b:	js     0x405e6e
  405e3d:	jae    0x405e50
  405e3f:	pop    es
  405e40:	pushf  
  405e41:	mov    esi,0x1c19c877
  405e46:	mov    ch,BYTE PTR [ecx-0x5]
  405e49:	leave  
  405e4a:	sbb    DWORD PTR [ebx-0x613b40db],edx
  405e50:	jne    0x405dda
  405e52:	aam    0x73
  405e54:	xchg   ebp,eax
  405e55:	mov    ebx,0xd4f16aaf
  405e5a:	repnz add esp,DWORD PTR [ebx-0x3d]
  405e5e:	or     eax,0xf7b8c2bd
  405e63:	test   al,0x4d
  405e65:	in     al,dx
  405e66:	dec    ecx
  405e67:	and    al,0xb1
  405e69:	loope  0x405e92
  405e6b:	adc    ecx,DWORD PTR [eax+edi*8+0x434b891a]
  405e72:	sbb    bl,BYTE PTR [ebx]
  405e74:	(bad)  
  405e76:	call   0x68aa:0x54909d2e
  405e7d:	push   ebp
  405e7e:	adc    eax,0x4659fb94
  405e83:	add    esp,DWORD PTR [edx+eiz*8-0x30e6dcbe]
  405e8a:	xchg   ecx,eax
  405e8b:	aad    0x10
  405e8d:	iret   
  405e8e:	out    dx,al
  405e8f:	(bad)  
  405e90:	(bad)  
  405e92:	(bad)  
  405e94:	or     ch,bl
  405e96:	mov    al,ds:0xac71bb2f
  405e9b:	rcl    DWORD PTR ds:0x940a8564,cl
  405ea1:	jmp    0x73f47d7f
  405ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ea7:	in     al,dx
  405ea8:	stos   BYTE PTR es:[edi],al
  405ea9:	pop    es
  405eaa:	jne    0x405e39
  405eac:	mov    ds:0xd0e1bba1,eax
  405eb1:	pop    esi
  405eb2:	xchg   ebp,eax
  405eb3:	inc    esi
  405eb4:	mov    bl,0x33
  405eb6:	sub    BYTE PTR [ebx+0x5598cc82],dl
  405ebc:	clc    
  405ebd:	shl    BYTE PTR [esi-0x61],1
  405ec0:	cwde   
  405ec1:	sub    eax,0xa79e441a
  405ec6:	dec    ebp
  405ec7:	adc    BYTE PTR ds:0x59808e95,al
  405ecd:	stos   DWORD PTR es:[edi],eax
  405ece:	or     DWORD PTR [eax-0x113c96d2],ebp
  405ed4:	sbb    al,0xb0
  405ed6:	mov    eax,0x3735730b
  405edb:	add    bh,BYTE PTR [ebx+0x3e]
  405ede:	stos   BYTE PTR es:[edi],al
  405edf:	idiv   BYTE PTR [esp+edi*1-0x1012255c]
  405ee6:	and    esp,DWORD PTR [edi+0xae22bc9]
  405eec:	dec    edx
  405eed:	adc    cl,ch
  405eef:	bound  eax,QWORD PTR [edx]
  405ef1:	push   esi
  405ef2:	jmp    0x405ef9
  405ef4:	aad    0xb9
  405ef6:	lds    ebp,FWORD PTR [esp+edi*4+0x317b43d9]
  405efd:	mov    ah,0xc7
  405eff:	and    al,0xb9
  405f01:	push   ecx
  405f02:	ror    DWORD PTR [edi+eiz*1+0x14],cl
  405f06:	gs int3 
  405f08:	xchg   ebx,eax
  405f09:	scas   al,BYTE PTR es:[edi]
  405f0a:	jge    0x405ed8
  405f0c:	adc    BYTE PTR [edi+esi*1+0x19],dh
  405f10:	es push cs
  405f12:	out    0xc3,eax
  405f14:	and    DWORD PTR [esi+0x42],esi
  405f17:	jg     0x405f62
  405f19:	stos   BYTE PTR es:[edi],al
  405f1a:	mov    dh,0x97
  405f1c:	push   cs
  405f1d:	fistp  QWORD PTR [esp+ebp*2+0x8]
  405f21:	push   edx
  405f22:	sbb    cl,BYTE PTR [eax+0x287faf1e]
  405f28:	sub    ebx,eax
  405f2a:	dec    ebx
  405f2b:	push   ebx
  405f2c:	push   esi
  405f2d:	retf   0xffdd
  405f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f31:	sub    cl,BYTE PTR [ebx-0x516743d8]
  405f37:	push   0x6e
  405f39:	mov    ds:0xe1439c9a,eax
  405f3e:	shl    DWORD PTR [edx-0x5],0xfa
  405f42:	lds    eax,FWORD PTR [esi]
  405f44:	retf   0xc424
  405f47:	inc    esi
  405f48:	or     eax,DWORD PTR [edi]
  405f4a:	imul   esp,DWORD PTR [esi-0xf565f23],0x13
  405f51:	cmp    eax,0xbd968554
  405f56:	and    DWORD PTR [ebp+0x63e12393],ecx
  405f5c:	push   esi
  405f5d:	xor    ah,ah
  405f5f:	inc    ebx
  405f60:	sbb    eax,0x50cfa0b8
  405f65:	pop    ds
  405f66:	mov    esi,DWORD PTR [ebx]
  405f68:	add    DWORD PTR [edi],ebp
  405f6a:	mov    ah,0xad
  405f6c:	pop    ebp
  405f6d:	mov    al,0x33
  405f6f:	cmp    BYTE PTR [ebx],dh
  405f71:	je     0x405f69
  405f73:	mov    al,ds:0xf71b4328
  405f78:	inc    edx
  405f79:	repz xchg esi,eax
  405f7b:	cld    
  405f7c:	js     0x405f4c
  405f7e:	aad    0xd1
  405f80:	lods   al,BYTE PTR ds:[esi]
  405f81:	je     0x405f41
  405f83:	mov    esi,esp
  405f85:	stos   BYTE PTR es:[edi],al
  405f86:	and    bh,bl
  405f88:	lods   eax,DWORD PTR ds:[esi]
  405f89:	pop    esp
  405f8a:	mov    DWORD PTR [edi-0x5d224588],edx
  405f90:	test   bh,0x45
  405f93:	out    0xc5,eax
  405f95:	xchg   edx,eax
  405f96:	fst    DWORD PTR [eax+0x64f387e8]
  405f9c:	pop    eax
  405f9d:	out    dx,al
  405f9e:	das    
  405f9f:	ror    DWORD PTR [edx+edi*1-0x619d7c46],cl
  405fa6:	int    0x36
  405fa8:	sub    bl,BYTE PTR [ebx*2-0x527da083]
  405faf:	jp     0x405fb1
  405fb1:	mov    ebp,0x10337261
  405fb6:	sbb    dl,BYTE PTR [edx+edx*8+0x55]
  405fba:	jae    0x405f72
  405fbc:	stos   BYTE PTR es:[edi],al
  405fbd:	mov    dl,0xff
  405fbf:	pusha  
  405fc0:	sub    ebp,ebx
  405fc2:	mul    DWORD PTR [ebx+0x78d38f9d]
  405fc8:	xchg   BYTE PTR [edi+0x66],al
  405fcb:	mov    edx,0x20497b70
  405fd0:	jl     0x405fd2
  405fd2:	lea    esi,[esi]
  405fd4:	xchg   esi,eax
  405fd5:	jns    0x40603e
  405fd7:	sti    
  405fd8:	stos   BYTE PTR es:[edi],al
  405fd9:	xor    al,0xf6
  405fdb:	cmc    
  405fdc:	push   ecx
  405fdd:	inc    esp
  405fde:	ror    BYTE PTR [edx-0x21],1
  405fe1:	ins    BYTE PTR es:[edi],dx
  405fe2:	pop    eax
  405fe3:	pop    eax
  405fe4:	adc    DWORD PTR [edx-0x20],eax
  405fe7:	jno    0x40601f
  405fe9:	call   0x384a6df3
  405fee:	pop    ecx
  405fef:	push   ds
  405ff0:	lock shl DWORD PTR es:0x379a388b,cl
  405ff8:	fbld   TBYTE PTR [ebx]
  405ffa:	jb     0x405f94
  405ffc:	sub    ah,BYTE PTR [edx]
  405ffe:	icebp  
  405fff:	aad    0xc1
  406001:	push   ecx
  406002:	inc    ecx
  406003:	adc    al,0x15
  406005:	out    0xb6,eax
  406007:	sub    DWORD PTR [esi+0x21],ebp
  40600a:	daa    
  40600b:	jle    0x406051
  40600d:	lahf   
  40600e:	pop    es
  40600f:	out    0x93,eax
  406011:	sbb    bl,cl
  406013:	jns    0x405fd1
  406015:	cmp    dl,0x25
  406018:	pop    ecx
  406019:	mov    DWORD PTR [esi-0x1bdb4f61],esp
  40601f:	faddp  st(0),st
  406021:	mov    al,ds:0x343a7783
  406026:	fisub  WORD PTR [ebx+eax*8+0x6258caad]
  40602d:	sub    edx,ebp
  40602f:	(bad)  
  406030:	call   0xa053:0x41c8e151
  406037:	inc    esi
  406038:	cld    
  406039:	mov    cs,WORD PTR [eax]
  40603b:	sbb    eax,DWORD PTR [edi-0x5b]
  40603e:	cmp    DWORD PTR [ebx+edi*2+0x3a],ebp
  406042:	pop    ds
  406043:	push   cs
  406044:	mov    WORD PTR [ebx-0x6c96517b],ss
  40604a:	mov    bh,0xdb
  40604c:	push   edi
  40604d:	lods   al,BYTE PTR ds:[esi]
  40604e:	jb     0x40600d
  406050:	(bad)  
  406051:	sbb    esp,DWORD PTR [ecx]
  406053:	jl     0x4060c2
  406055:	and    eax,0xa24321cf
  40605a:	and    eax,0xdd811628
  40605f:	jge    0x406051
  406061:	cwde   
  406062:	sahf   
  406063:	(bad)  
  406064:	(bad)  
  406065:	retf   
  406066:	mov    esi,0x12749ee4
  40606b:	dec    ebx
  40606c:	xchg   ecx,eax
  40606d:	adc    DWORD PTR [edi+0x52],ecx
  406070:	pop    eax
  406071:	int3   
  406072:	and    BYTE PTR [esi+eax*1-0x34cf0bf1],0x3c
  40607a:	add    eax,0x80879e71
  40607f:	cmp    BYTE PTR [esp+eiz*2],dh
  406082:	xchg   edx,eax
  406083:	ja     0x4060e0
  406085:	jp     0x4060d9
  406087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406088:	mov    bh,0xc0
  40608a:	sbb    eax,DWORD PTR [ecx+0x1d]
  40608d:	jnp    0x4060a8
  40608f:	add    eax,0x6c5d32a8
  406094:	repz rol BYTE PTR [bx+di-0x5fd8],cl
  40609a:	dec    edx
  40609b:	mov    WORD PTR [esi+0x5f7207f3],cs
  4060a1:	repnz outs dx,DWORD PTR ds:[esi]
  4060a3:	rol    BYTE PTR [eax],1
  4060a5:	mov    ah,0x9f
  4060a7:	imul   DWORD PTR [edi-0x1e93f93a]
  4060ad:	es (bad) 
  4060af:	fsubr  st(7),st
  4060b1:	pop    ss
  4060b2:	pop    es
  4060b3:	mov    es,WORD PTR [eax]
  4060b5:	mov    al,0x35
  4060b7:	dec    ebx
  4060b8:	xor    BYTE PTR [eax+ecx*1+0x9],ch
  4060bc:	pop    ebx
  4060bd:	and    edx,esi
  4060bf:	mov    ebx,0x8fb7c0c9
  4060c4:	dec    edi
  4060c5:	mov    ds:0xb449f3b3,al
  4060ca:	out    dx,eax
  4060cb:	inc    esp
  4060cc:	shr    BYTE PTR [ecx+0x164a22db],1
  4060d2:	push   es
  4060d3:	rcr    BYTE PTR [ebp+0x38],1
  4060d6:	push   0xa91a943a
  4060db:	ins    BYTE PTR es:[edi],dx
  4060dc:	sbb    DWORD PTR ss:[edx],ebp
  4060df:	jp     0x406083
  4060e1:	in     al,dx
  4060e2:	mov    ebp,0x9b9d4a48
  4060e7:	sbb    al,0xb1
  4060e9:	repz js 0x406079
  4060ec:	aam    0x2c
  4060ee:	jns    0x40616d
  4060f0:	rcr    BYTE PTR [edx+0x506d637a],1
  4060f6:	daa    
  4060f7:	inc    eax
  4060f8:	leave  
  4060f9:	xor    cl,dl
  4060fb:	pop    ds
  4060fc:	sbb    eax,ecx
  4060fe:	js     0x4060d1
  406100:	sub    eax,0x5b0cfcec
  406105:	adc    DWORD PTR [edx+0x59],0xc185fe93
  40610c:	leave  
  40610d:	repz xchg esi,eax
  40610f:	push   0xfffffff0
  406111:	pop    edi
  406112:	inc    esi
  406113:	sub    ebx,DWORD PTR [edi]
  406115:	mov    al,ds:0x3ce68ece
  40611a:	pop    esp
  40611b:	push   ebx
  40611c:	dec    esi
  40611d:	data16 js 0x4060b4
  406120:	push   esi
  406121:	or     BYTE PTR [edi-0x599fa73],ah
  406127:	std    
  406128:	mov    WORD PTR [esi],es
  40612a:	in     al,0xc3
  40612c:	jmp    0xe254:0xa416b630
  406133:	cmc    
  406134:	push   ebx
  406135:	inc    esi
  406136:	mov    fs,WORD PTR [ecx+0x8]
  406139:	or     al,0x96
  40613b:	inc    ecx
  40613c:	cmp    al,0xaf
  40613e:	inc    ebx
  40613f:	mov    ch,0x8d
  406141:	arpl   WORD PTR [esi-0x1e],ax
  406144:	ins    BYTE PTR es:[edi],dx
  406145:	ja     0x40616d
  406147:	cmp    BYTE PTR [ecx+0x37e4dc1c],0xae
  40614e:	cdq    
  40614f:	xor    BYTE PTR [eax],bh
  406151:	fsub   st(3),st
  406153:	fmul   DWORD PTR [ecx+0x5d]
  406156:	xor    BYTE PTR [edi],0x16
  406159:	sbb    BYTE PTR [edx+0x7f],bh
  40615c:	jge    0x40619e
  40615e:	dec    esi
  40615f:	xchg   edx,eax
  406160:	outs   dx,BYTE PTR ds:[esi]
  406161:	cmp    al,0x3
  406163:	mov    eax,0x994bb74
  406168:	push   cs
  406169:	and    ch,bl
  40616b:	dec    ebx
  40616c:	jbe    0x4061bc
  40616e:	pop    edx
  40616f:	xor    al,0x5c
  406171:	push   ecx
  406172:	mov    al,ds:0xdcec115
  406177:	inc    esi
  406178:	pop    ebx
  406179:	aad    0x4e
  40617b:	push   ebx
  40617c:	leave  
  40617d:	out    dx,eax
  40617e:	xor    ecx,ecx
  406180:	and    eax,0x46aae8b1
  406185:	push   esi
  406186:	pop    edx
  406187:	xor    dh,bh
  406189:	int3   
  40618a:	call   0xaf5d:0x519c0af6
  406191:	mov    esp,DWORD PTR [ecx-0xfc1ee01]
  406197:	fwait
  406198:	xchg   ebx,eax
  406199:	neg    DWORD PTR [edx-0x6e0b7704]
  40619f:	lds    edi,FWORD PTR [esi]
  4061a1:	xor    DWORD PTR [ebx-0x29a58f7b],ebx
  4061a7:	pop    ds
  4061a8:	or     al,0x5d
  4061aa:	cmp    ebp,DWORD PTR [ecx+eiz*8+0x25]
  4061ae:	sub    ebp,DWORD PTR [ecx+0x19431044]
  4061b4:	pusha  
  4061b5:	fldenv [edi+ecx*4+0xc9ca308]
  4061bc:	jnp    0x4061f6
  4061be:	out    0x21,eax
  4061c0:	pop    edi
  4061c1:	popa   
  4061c2:	dec    eax
  4061c3:	inc    esp
  4061c4:	pop    eax
  4061c5:	mov    BYTE PTR ds:0xe1dd469e,ch
  4061cb:	pop    ds
  4061cc:	dec    ebx
  4061cd:	icebp  
  4061ce:	ds jg  0x4061c8
  4061d1:	fsubr  QWORD PTR ds:0x2b4e1722
  4061d7:	mov    ebp,0x7df79da2
  4061dc:	dec    esi
  4061dd:	adc    eax,edi
  4061df:	fild   WORD PTR [edi+esi*8]
  4061e2:	in     al,dx
  4061e3:	call   0x7890:0x48216b59
  4061ea:	sub    eax,0xc6310f32
  4061ef:	pop    edi
  4061f0:	(bad)  
  4061f1:	imul   eax,DWORD PTR [edx+0x1348cbf],0x73d58aed
  4061fb:	push   esi
  4061fc:	popa   
  4061fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061fe:	outs   dx,BYTE PTR ds:[esi]
  4061ff:	push   cs
  406200:	mov    eax,ds:0xa8527055
  406205:	and    ch,bh
  406207:	jbe    0x406203
  406209:	and    ecx,DWORD PTR [edx+ecx*4]
  40620c:	cmp    BYTE PTR [eax],0x59
  40620f:	mov    ebp,0x8c223830
  406214:	adc    ebx,esp
  406216:	outs   dx,BYTE PTR ds:[esi]
  406217:	(bad)  
  406218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406219:	push   edi
  40621a:	popf   
  40621b:	imul   eax,DWORD PTR [ecx],0xd2b5d4e
  406221:	dec    ecx
  406222:	jns    0x4061b5
  406224:	sbb    eax,DWORD PTR [esi]
  406226:	and    bh,BYTE PTR [edi-0x43d9b253]
  40622c:	dec    ebp
  40622d:	arpl   WORD PTR [edi+0x31],sp
  406230:	lea    esp,ds:0xe2db772c
  406236:	add    bh,0x11
  406239:	fimul  WORD PTR [esi+0x4]
  40623c:	jne    0x4062a8
  40623e:	int    0xa7
  406240:	xor    BYTE PTR [ecx-0x3b],ah
  406243:	stc    
  406244:	inc    esi
  406245:	mov    edx,DWORD PTR [eax]
  406247:	jge    0x40624c
  406249:	into   
  40624a:	ret    0x233e
  40624d:	aaa    
  40624e:	xchg   ebp,eax
  40624f:	mov    ds:0x8e199402,al
  406254:	loope  0x4062a0
  406256:	push   cs
  406257:	xor    eax,0x4394bcce
  40625c:	sbb    al,0x9c
  40625e:	xor    bl,BYTE PTR [ebp-0x4]
  406261:	sbb    al,0x51
  406263:	adc    ecx,DWORD PTR [esi+eax*8+0xe]
  406267:	in     al,dx
  406268:	adc    ch,BYTE PTR [ebp+0x2b260d69]
  40626e:	cmp    al,0x32
  406270:	popa   
  406271:	mov    al,0x19
  406273:	mov    ebx,DWORD PTR [edi+edi*4-0x395eeff8]
  40627a:	cwde   
  40627b:	iret   
  40627c:	mov    DWORD PTR [ecx],0x1b50b444
  406282:	push   cs
  406283:	test   eax,0x31fbf4a8
  406288:	mov    al,0x25
  40628a:	(bad)  
  40628b:	sar    DWORD PTR [ebp-0x2d2ef380],1
  406291:	mov    ds:0x6ef72709,al
  406296:	scas   al,BYTE PTR es:[edi]
  406297:	les    ebp,FWORD PTR [edi+0x5e]
  40629a:	(bad)  [eax+0x4]
  40629d:	fdivr  DWORD PTR [ebx-0x67bdccc2]
  4062a3:	fstp   QWORD PTR [ecx-0x60]
  4062a6:	sub    DWORD PTR [esi+0x4a5da85a],0x52f19f9f
  4062b0:	hlt    
  4062b1:	jae    0x40632e
  4062b3:	push   ds
  4062b4:	mov    esi,0xa6c2d235
  4062b9:	dec    esp
  4062ba:	xlat   BYTE PTR ds:[ebx]
  4062bb:	mov    ds:0x562ff286,al
  4062c0:	sbb    al,0x9e
  4062c2:	dec    eax
  4062c3:	loope  0x4062f5
  4062c5:	pop    ebp
  4062c6:	mov    al,ds:0x9fbf7f57
  4062cb:	mov    bh,0x1
  4062cd:	test   DWORD PTR ds:0xdfd4126b,ebp
  4062d3:	mov    cl,ah
  4062d5:	mov    bl,0xf8
  4062d7:	inc    edx
  4062d8:	out    dx,eax
  4062d9:	add    esi,DWORD PTR [esi]
  4062db:	int    0x15
  4062dd:	pop    edi
  4062de:	fldcw  WORD PTR [eax-0x47]
  4062e1:	data16 fisttp DWORD PTR [ebp+0x25]
  4062e5:	retf   0xa669
  4062e8:	popf   
  4062e9:	inc    edi
  4062ea:	push   edx
  4062eb:	push   0xdf9635c1
  4062f0:	(bad)  
  4062f1:	in     eax,dx
  4062f2:	lea    ebp,[edi-0x2ec5f869]
  4062f8:	scas   eax,DWORD PTR es:[edi]
  4062f9:	ja     0x40634e
  4062fb:	(bad)  
  4062fc:	dec    eax
  4062fd:	popa   
  4062fe:	pop    ecx
  4062ff:	push   edx
  406300:	pop    es
  406301:	hlt    
  406302:	pminsw mm3,QWORD PTR [ecx-0x56]
  406306:	dec    esp
  406307:	adc    bh,BYTE PTR [edi]
  406309:	and    esi,DWORD PTR [esi-0x72dffef8]
  40630f:	jecxz  0x406309
  406311:	push   ds
  406312:	popa   
  406313:	aam    0x80
  406315:	push   eax
  406316:	sbb    al,0xd2
  406318:	mov    al,0x1e
  40631a:	test   al,0x30
  40631c:	jb     0x406339
  40631e:	add    ch,al
  406320:	rcr    DWORD PTR [edx+0x13ab2b6f],1
  406326:	loope  0x4062ff
  406328:	sub    eax,DWORD PTR [ecx]
  40632a:	loopne 0x4062f3
  40632c:	cwde   
  40632d:	test   DWORD PTR [ebx+0x59dc78d1],0x26ad2697
  406337:	jg     0x406387
  406339:	dec    ebp
  40633a:	loopne 0x406366
  40633c:	push   ebx
  40633d:	adc    DWORD PTR [ebx+0x5479051a],eax
  406343:	int    0x85
  406345:	xchg   ecx,eax
  406346:	mov    bh,0x4a
  406348:	cmp    dl,BYTE PTR [eax]
  40634a:	ins    DWORD PTR es:[edi],dx
  40634b:	add    edi,DWORD PTR [edi+0x21ff4d35]
  406351:	sbb    edx,ebp
  406353:	and    al,0x68
  406355:	push   esi
  406356:	push   0x7a
  406358:	fbstp  TBYTE PTR [edi+esi*2+0x77]
  40635c:	int    0xa5
  40635e:	xor    dh,dl
  406360:	fnstsw WORD PTR [edi-0x6b789754]
  406366:	sub    ebp,esi
  406368:	xchg   ch,ch
  40636a:	hlt    
  40636b:	inc    edi
  40636c:	xor    ebx,ebx
  40636e:	inc    esp
  40636f:	fnstsw WORD PTR [edx]
  406371:	add    DWORD PTR [edx+0x29],eax
  406374:	mov    al,0x68
  406376:	adc    cl,BYTE PTR [esi-0x40]
  406379:	mov    ds:0x4d85935,eax
  40637e:	mov    bl,0xfc
  406380:	pop    ss
  406381:	rcr    DWORD PTR [edx+ecx*8-0x30c473bb],1
  406388:	or     al,BYTE PTR [ecx]
  40638a:	in     eax,dx
  40638b:	mov    ebx,0x3128d3ed
  406390:	lea    ebx,[ecx-0x7c]
  406393:	fwait
  406394:	push   ebp
  406395:	dec    edi
  406396:	adc    ebp,ecx
  406398:	dec    esi
  406399:	stc    
  40639a:	adc    al,0xd4
  40639c:	or     dl,dh
  40639e:	xlat   BYTE PTR ds:[ebx]
  40639f:	fcmovnu st,st(5)
  4063a1:	mov    esp,0xc5d0483
  4063a6:	cld    
  4063a7:	cmp    cl,BYTE PTR [ebx]
  4063a9:	mov    WORD PTR [bp+0x26f],fs
  4063ae:	ret    0x2d75
  4063b1:	leave  
  4063b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b3:	jno    0x40641d
  4063b5:	cmp    BYTE PTR [eax],cl
  4063b7:	pop    ebp
  4063b8:	sbb    cl,BYTE PTR [ebp+esi*1+0x1c8ba5fd]
  4063bf:	lock rcl DWORD PTR [ecx+0x2d8737f8],1
  4063c6:	fucom  st(7)
  4063c8:	in     eax,0xfb
  4063ca:	xchg   ebp,eax
  4063cb:	jns    0x406433
  4063cd:	inc    edx
  4063ce:	add    al,0xf7
  4063d0:	sbb    eax,0xdd85445d
  4063d5:	(bad)  
  4063d6:	nop
  4063d7:	adc    BYTE PTR ds:0xc0ce82c,al
  4063dd:	lahf   
  4063de:	into   
  4063df:	or     BYTE PTR [ebp+0x6a],ch
  4063e2:	rol    eax,1
  4063e4:	std    
  4063e5:	stc    
  4063e6:	je     0x4063df
  4063e8:	in     eax,0x6e
  4063ea:	fsubr  QWORD PTR [edi-0x74a38bb1]
  4063f0:	mov    cl,0x8f
  4063f2:	lods   eax,DWORD PTR ds:[esi]
  4063f3:	sbb    bh,cl
  4063f5:	mov    eax,DWORD PTR [ebx]
  4063f7:	push   ebx
  4063f8:	xor    ebp,edi
  4063fa:	or     al,0x4c
  4063fc:	adc    DWORD PTR ds:0x41d4070,esi
  406402:	adc    bl,ah
  406404:	push   edx
  406405:	mov    DWORD PTR [eax-0xf499b86],eax
  40640b:	xor    eax,0xe15c63e2
  406410:	mov    eax,ds:0x4742c9d3
  406415:	stos   DWORD PTR es:[edi],eax
  406416:	iret   
  406417:	push   es
  406418:	push   esi
  406419:	mov    esp,0x8cc186ad
  40641e:	fs push eax
  406420:	pop    edx
  406421:	loop   0x4063a9
  406423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406424:	and    DWORD PTR [esi+ebx*2+0x6bd7fd55],ecx
  40642b:	xchg   esi,eax
  40642c:	sbb    al,0x52
  40642e:	add    dh,BYTE PTR [ebx-0x37c3aee0]
  406434:	mov    dl,0xb0
  406436:	aad    0xbe
  406438:	vmread DWORD PTR [eax-0x6ab53217],eax
  40643f:	out    0xb8,al
  406441:	fnsave [ecx-0x24386880]
  406447:	popa   
  406448:	mov    ch,0x89
  40644a:	add    eax,0x8d0a7a72
  40644f:	mov    ecx,0xae4de3ba
  406454:	mov    ds:0x99171712,al
  406459:	adc    cl,ch
  40645b:	ss inc esp
  40645d:	pop    edi
  40645e:	dec    ebp
  40645f:	adc    ecx,DWORD PTR ds:0xfa27d624
  406465:	pop    ss
  406466:	mov    edi,0xafdc7c4e
  40646b:	mov    dl,0x13
  40646d:	pop    es
  40646e:	lods   eax,DWORD PTR ds:[esi]
  40646f:	addr16 add al,0x5e
  406472:	ja     0x40640f
  406474:	adc    eax,0xd923fc78
  406479:	sub    ecx,eax
  40647b:	stc    
  40647c:	out    dx,eax
  40647d:	mov    ebx,0x9286bbb1
  406482:	mov    DWORD PTR [ecx-0x62162060],ebx
  406488:	mov    esp,0xd1636f4c
  40648d:	xchg   ebx,eax
  40648e:	inc    ebx
  40648f:	dec    esp
  406490:	jbe    0x40647b
  406492:	mov    eax,ds:0xa014f2ae
  406497:	fwait
  406498:	sbb    ch,dl
  40649a:	imul   di,WORD PTR [edi+0x5f],0xa82e
  4064a0:	int    0xdb
  4064a2:	jge    0x406485
  4064a4:	push   0x20
  4064a6:	xor    dh,bh
  4064a8:	pushf  
  4064a9:	ja     0x406452
  4064ab:	pop    ebx
  4064ac:	fiadd  WORD PTR [ebp-0x50]
  4064af:	and    eax,0xd2a16b64
  4064b4:	xor    ah,cl
  4064b6:	movd   DWORD PTR [esp+ebx*1-0x12],mm6
  4064bb:	jb     0x4f6ada83
  4064c1:	dec    eax
  4064c2:	repnz aaa 
  4064c4:	adc    BYTE PTR [di-0x5a],bh
  4064c8:	dec    edx
  4064c9:	fisttp WORD PTR [ebp*4-0x19260d8a]
  4064d0:	ret    0x4eef
  4064d3:	mov    cs,eax
  4064d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d6:	leave  
  4064d7:	and    edx,DWORD PTR es:[ebx+0x70]
  4064db:	pop    ss
  4064dc:	add    al,0x90
  4064de:	mov    BYTE PTR [edi+0x5bc3d891],bl
  4064e4:	sar    BYTE PTR [eax],0x22
  4064e7:	fiadd  DWORD PTR [ebx-0x44450ed8]
  4064ed:	pop    edi
  4064ee:	jmp    0x845081ac
  4064f3:	sub    al,0x45
  4064f5:	sar    BYTE PTR [edx+0x3e],cl
  4064f8:	and    al,BYTE PTR fs:[edi-0x24]
  4064fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fd:	adc    ecx,esp
  4064ff:	or     eax,0x7a077a33
  406504:	rol    BYTE PTR [ecx],1
  406506:	dec    ecx
  406507:	lahf   
  406508:	ja     0x40657e
  40650a:	push   edx
  40650b:	sbb    eax,0xbaf3da19
  406510:	test   al,0xa8
  406512:	mov    esi,0xec1a43ad
  406517:	retf   
  406518:	or     BYTE PTR [edx],dh
  40651a:	mov    fs,edi
  40651c:	mov    DWORD PTR [esi+ebx*4],ebx
  40651f:	out    dx,eax
  406520:	pop    ebp
  406521:	in     al,0xc4
  406523:	ja     0x4064b0
  406525:	mov    ebp,DWORD PTR [ebx+0x76ef6d91]
  40652b:	sub    ebp,eax
  40652d:	cmp    bh,ch
  40652f:	mov    ah,0xf8
  406531:	pushf  
  406532:	inc    BYTE PTR [ebx]
  406534:	cli    
  406535:	jns    0x406593
  406537:	jae    0x4064d7
  406539:	mov    dh,al
  40653b:	repz and edx,DWORD PTR [ebx-0x6e78715e]
  406542:	fbld   TBYTE PTR [esi]
  406544:	loope  0x40656d
  406546:	or     DWORD PTR [esi-0x46],esi
  406549:	ror    DWORD PTR [ebx],cl
  40654b:	ret    0xeaf0
  40654e:	xor    DWORD PTR [esi-0xe],edi
  406551:	sub    al,0xcf
  406553:	mov    edi,0xe657daf3
  406558:	ss mov dl,0x53
  40655b:	dec    ebx
  40655c:	add    eax,0xe0c39e7b
  406561:	call   0xc94e:0x2442b81b
  406568:	sub    edi,DWORD PTR [eax+0x18]
  40656b:	inc    ebx
  40656c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40656d:	and    DWORD PTR [esi+ebp*4+0x27dd5eb5],0xa1a9731c
  406578:	loopne 0x40650d
  40657a:	ror    DWORD PTR [edx],0xe
  40657d:	pushf  
  40657e:	pop    edi
  40657f:	stos   DWORD PTR es:[edi],eax
  406580:	scas   eax,DWORD PTR es:[edi]
  406581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406582:	xor    edi,DWORD PTR [edx-0x2c]
  406585:	lock shl DWORD PTR [esp+edi*8-0x730f4d76],1
  40658d:	fsub   QWORD PTR [ebx-0x76]
  406590:	fisubr DWORD PTR [esp+ecx*2]
  406593:	dec    ecx
  406594:	and    BYTE PTR [edx],0xb1
  406597:	gs in  al,0x3d
  40659a:	(bad)
  40659e:	mov    ecx,0xb405e32
  4065a3:	es mov edx,ss
  4065a6:	in     eax,dx
  4065a7:	repz jecxz 0x406608
  4065aa:	inc    ecx
  4065ab:	mov    al,0x97
  4065ad:	(bad)  
  4065ae:	fst    QWORD PTR [ebp-0x7a]
  4065b1:	scas   al,BYTE PTR es:[edi]
  4065b2:	cld    
  4065b3:	jmp    0x406593
  4065b5:	pop    ecx
  4065b6:	adc    eax,0xa7fa18b0
  4065bb:	das    
  4065bc:	aad    0x21
  4065be:	lods   eax,DWORD PTR ds:[esi]
  4065bf:	test   BYTE PTR [edx],al
  4065c1:	gs in  al,dx
  4065c3:	inc    eax
  4065c4:	sub    eax,0x33cdf3a3
  4065c9:	jmp    0x40657b
  4065cb:	(bad)  
  4065cd:	les    edx,FWORD PTR [esi-0x41685b7a]
  4065d3:	imul   esi,DWORD PTR [eax-0x49],0x49d6a29d
  4065da:	(bad)
  4065de:	icebp  
  4065df:	sub    bl,ah
  4065e1:	xchg   edi,eax
  4065e2:	loope  0x406587
  4065e4:	cld    
  4065e5:	jl     0x40660a
  4065e7:	mov    esi,0x2be9c5c1
  4065ec:	pop    ds
  4065ed:	lahf   
  4065ee:	or     BYTE PTR ss:[eax+0x64409e81],bl
  4065f5:	mov    bl,0x12
  4065f7:	xchg   edx,eax
  4065f8:	arpl   WORD PTR [edx+0x2510e597],cx
  4065fe:	out    0x59,al
  406600:	test   al,0xf0
  406602:	cmp    bh,ah
  406604:	adc    ebx,DWORD PTR [edx+0x5e]
  406607:	movd   ebp,mm0
  40660a:	aaa    
  40660b:	fwait
  40660c:	out    dx,al
  40660d:	sub    eax,0x7d32da3c
  406612:	(bad)  
  406613:	jns    0x406663
  406615:	in     eax,dx
  406616:	add    BYTE PTR [esi+0x5b],dl
  406619:	jmp    0xe93256b7
  40661e:	mov    dl,0xd5
  406620:	push   ebp
  406621:	jae    0x40662c
  406623:	rol    BYTE PTR [esi],0x58
  406626:	loope  0x40666d
  406628:	cwde   
  406629:	lahf   
  40662a:	mov    eax,ds:0x9ccdb9b4
  40662f:	in     al,dx
  406630:	sub    bx,ax
  406633:	adc    edx,DWORD PTR [ebp-0x3c]
  406636:	jp     0x406616
  406638:	pop    ecx
  406639:	aaa    
  40663a:	je     0x4065ce
  40663c:	bound  ebx,QWORD PTR [ebx+0x28]
  40663f:	dec    ebx
  406640:	sti    
  406641:	iret   
  406642:	adc    eax,0x5fbb89c2
  406647:	gs mov dl,0x81
  40664a:	mov    WORD PTR [edx],es
  40664c:	scas   al,BYTE PTR es:[edi]
  40664d:	push   esp
  40664e:	pusha  
  40664f:	lock aad 0x85
  406652:	cmp    bh,ah
  406654:	(bad)  
  406655:	xchg   ebx,eax
  406656:	mov    WORD PTR [eax-0x7a738bf3],fs
  40665c:	call   0x1761:0xa128030b
  406663:	punpckhbw mm6,QWORD PTR [ecx+edx*4+0x63]
  406668:	int3   
  406669:	mov    es,WORD PTR [ecx+0x71]
  40666c:	add    al,0x21
  40666e:	imul   eax,DWORD PTR [edi+edi*8+0x65],0xffffffec
  406673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406674:	jg     0x406639
  406676:	pop    ecx
  406677:	sbb    DWORD PTR [eax-0x2e],ecx
  40667a:	mov    dl,0xc2
  40667c:	jge    0x4066b5
  40667e:	retf   0x40ac
  406681:	sti    
  406682:	cdq    
  406683:	pandn  mm6,mm3
  406686:	lods   eax,DWORD PTR ds:[esi]
  406687:	and    ebx,eax
  406689:	jo     0x4066b0
  40668b:	inc    eax
  40668c:	push   ss
  40668d:	mov    bl,dl
  40668f:	lahf   
  406690:	sub    eax,0x367a4aa9
  406695:	xor    al,0x80
  406697:	shr    DWORD PTR ds:0x6baac144,0x1e
  40669e:	fadd   DWORD PTR [edi-0xd]
  4066a1:	lods   eax,DWORD PTR ds:[esi]
  4066a2:	out    dx,eax
  4066a3:	scas   al,BYTE PTR es:[edi]
  4066a4:	clc    
  4066a5:	or     edi,DWORD PTR [eax+0x23]
  4066a8:	xor    edx,DWORD PTR ds:0x987f0da2
  4066ae:	addr16 inc ebp
  4066b0:	xchg   dh,ah
  4066b2:	mov    bl,0x73
  4066b4:	dec    ebp
  4066b5:	sahf   
  4066b6:	int    0x87
  4066b8:	cli    
  4066b9:	int    0xf5
  4066bb:	pop    esi
  4066bc:	cmc    
  4066bd:	out    dx,al
  4066be:	call   0x335d:0x1e7cf19d
  4066c5:	pushf  
  4066c6:	or     al,0xeb
  4066c8:	push   ss
  4066c9:	call   0x1405ed5f
  4066ce:	pop    esi
  4066cf:	xchg   esp,eax
  4066d0:	sub    esi,DWORD PTR [ecx]
  4066d2:	pop    esp
  4066d3:	jge    0x4066f1
  4066d5:	sub    DWORD PTR [ecx+0x517830a6],0xffffff9d
  4066dc:	shl    DWORD PTR [edx-0x3f],1
  4066df:	push   esi
  4066e0:	scas   al,BYTE PTR es:[edi]
  4066e1:	jmp    0x65403846
  4066e6:	jno    0x4066ec
  4066e8:	cmp    eax,0x8ad02e39
  4066ed:	or     eax,0x4d627bf0
  4066f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f3:	repz xchg esi,eax
  4066f5:	jmp    0x40667b
  4066f7:	and    bl,BYTE PTR [ebx+esi*2-0x6065b8ac]
  4066fe:	pop    es
  4066ff:	mov    bh,0x6f
  406701:	addr16 sub eax,0x9118de46
  406707:	std    
  406708:	jecxz  0x4066a4
  40670a:	cmc    
  40670b:	xchg   esi,eax
  40670c:	out    0x44,al
  40670e:	push   ecx
  40670f:	push   ss
  406710:	fwait
  406711:	xor    ebx,DWORD PTR [ebx+ecx*2+0x449a6595]
  406718:	loopne 0x4066fd
  40671a:	into   
  40671b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40671c:	cmp    ch,al
  40671e:	enter  0x3e9a,0x5a
  406722:	dec    esi
  406723:	dec    edi
  406724:	inc    ecx
  406725:	xchg   ebx,eax
  406726:	pushf  
  406727:	xor    esp,DWORD PTR [esi+0x17]
  40672a:	loop   0x406785
  40672c:	retf   0x35dc
  40672f:	add    DWORD PTR [ebx],0x17
  406732:	sbb    cl,BYTE PTR [ecx-0x2a]
  406735:	sbb    ebx,DWORD PTR [esi]
  406737:	or     eax,0x66217234
  40673c:	push   ebp
  40673d:	pusha  
  40673e:	mov    DWORD PTR [edi+edx*4],ebp
  406741:	mov    cl,dl
  406743:	dec    ebp
  406744:	cs xchg edi,eax
  406746:	retf   
  406747:	imul   esi,DWORD PTR [ecx-0x4],0x3d1fd924
  40674e:	shl    BYTE PTR [ecx-0x74a7e2c],0x6c
  406755:	add    al,0x48
  406757:	add    al,cl
  406759:	mov    dl,0x0
  40675b:	xacquire xchg BYTE PTR [eax+0x60],ch
  40675f:	lock popf 
  406761:	jmp    0x94a4a2cf
  406766:	(bad)  
  406768:	jle    0x406758
  40676a:	sbb    eax,0xc6046bec
  40676f:	sahf   
  406770:	lahf   
  406771:	or     BYTE PTR [esi+ecx*2],0x11
  406775:	cmp    ecx,DWORD PTR [ebp+0x35b0c142]
  40677b:	mov    eax,0x14979752
  406780:	xchg   esi,eax
  406781:	inc    eax
  406782:	je     0x406711
  406784:	xchg   ah,bl
  406786:	enter  0x1d50,0xe3
  40678a:	mov    bh,0xe7
  40678c:	push   edi
  40678d:	mov    DWORD PTR [eax],edx
  40678f:	xchg   edx,eax
  406790:	pop    edx
  406791:	test   DWORD PTR es:[eax+0x2c8232ed],esp
  406798:	popa   
  406799:	xor    esp,edx
  40679b:	aam    0x94
  40679d:	aad    0x66
  40679f:	mov    ds:0x6662aea1,eax
  4067a4:	es (bad) 
  4067a6:	cmp    DWORD PTR [edi+0x6c],ecx
  4067a9:	call   0xafbedb23
  4067ae:	sub    BYTE PTR [ebx-0x6b199a38],al
  4067b4:	(bad)  
  4067b5:	push   ebx
  4067b6:	mov    ecx,0x374a9b35
  4067bb:	gs jno 0x40678f
  4067be:	xor    esi,DWORD PTR [eax+0x60]
  4067c1:	sbb    eax,DWORD PTR [ebp-0x38]
  4067c4:	push   ebx
  4067c5:	adc    cl,BYTE PTR [edx-0x4db6592]
  4067cb:	mov    ch,0x5a
  4067cd:	mov    al,ds:0x87c42892
  4067d2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4067d4:	push   esi
  4067d5:	mov    ebp,0xa6c81b6f
  4067da:	inc    ecx
  4067db:	inc    esi
  4067dc:	dec    ebx
  4067dd:	jmp    0x8b7cfd25
  4067e2:	inc    ecx
  4067e3:	sub    esp,ebp
  4067e5:	hlt    
  4067e6:	mov    ecx,DWORD PTR [ebp-0x2]
  4067e9:	pop    es
  4067ea:	mov    esp,0xaf87ba7e
  4067ef:	retf   0xbb91
  4067f2:	mov    al,ds:0x15df8559
  4067f7:	cmovns edi,DWORD PTR [ebx-0x46b0dde3]
  4067fe:	mov    ch,0x7c
  406800:	xlat   BYTE PTR ds:[ebx]
  406801:	stos   DWORD PTR es:[edi],eax
  406802:	mov    al,0x27
  406804:	rcl    esp,cl
  406806:	rol    BYTE PTR [eax],1
  406808:	pushf  
  406809:	retf   
  40680a:	ds data16 stc 
  40680d:	jb     0x40683e
  40680f:	(bad)  
  406810:	lock dec ecx
  406812:	jp     0x4067cb
  406814:	fcom   QWORD PTR [edx-0x2921e4f4]
  40681a:	test   DWORD PTR [edx-0x1e5d2c8d],edi
  406820:	in     al,0x18
  406822:	inc    esi
  406823:	fsub   st,st(7)
  406825:	push   es
  406826:	adc    DWORD PTR [ecx+0x710af81b],edi
  40682c:	dec    esp
  40682d:	das    
  40682e:	ins    BYTE PTR es:[edi],dx
  40682f:	(bad)  
  406830:	xor    bl,bh
  406832:	xchg   ebp,eax
  406833:	push   esp
  406834:	pop    eax
  406835:	cmp    eax,0xe8e97790
  40683a:	dec    ebp
  40683b:	mov    ebx,0xd2a02c40
  406840:	mov    esp,0x2f9da5b
  406845:	leave  
  406846:	add    DWORD PTR [ebx],ebp
  406848:	cmp    ebp,DWORD PTR [edx+0x78ba911f]
  40684e:	lds    esp,FWORD PTR [ebx]
  406850:	mov    dl,0xf3
  406852:	mov    eax,ds:0x682cbe45
  406857:	in     al,0xec
  406859:	mov    DWORD PTR [edi],edx
  40685b:	add    ah,cl
  40685d:	inc    eax
  40685e:	push   0xffffff9d
  406860:	cmova  esp,eax
  406863:	jg     0x4068cd
  406865:	fst    QWORD PTR [edi+0x48c99b4e]
  40686b:	xchg   ecx,eax
  40686c:	call   0xd509:0xe1dd1c4c
  406873:	mov    ecx,DWORD PTR [ebx-0x72]
  406876:	sbb    ah,0x95
  406879:	imul   eax,DWORD PTR [esi],0xb152eab3
  40687f:	call   0xd5bd:0x6080a247
  406886:	pop    es
  406887:	xor    BYTE PTR [eax+edx*1-0x35966fe4],0xfa
  40688f:	xor    ebx,DWORD PTR ds:0xc4fa0993
  406895:	aaa    
  406896:	mov    WORD PTR [ecx+0x15b263ce],es
  40689c:	jb     0x406872
  40689e:	mov    ah,dh
  4068a0:	pop    ebp
  4068a1:	push   0x4a6a5d5e
  4068a6:	jmp    0x40683f
  4068a8:	aam    0xf8
  4068aa:	add    BYTE PTR [ecx],ah
  4068ac:	inc    ebp
  4068ad:	ins    WORD PTR es:[edi],dx
  4068af:	and    al,0x5
  4068b1:	cmp    eax,0x4f6acd11
  4068b6:	xor    al,0x28
  4068b8:	mov    eax,0xdbb6d10c
  4068bd:	lock jne 0x40691f
  4068c0:	shl    DWORD PTR [edx],1
  4068c2:	or     DWORD PTR [ecx+0x59],0x75928ba6
  4068c9:	dec    ecx
  4068ca:	mov    cl,0xee
  4068cc:	mov    ss,ebx
  4068ce:	xor    DWORD PTR [ebp-0x66],0x7e
  4068d2:	clc    
  4068d3:	ins    BYTE PTR es:[edi],dx
  4068d4:	in     al,0xde
  4068d6:	lahf   
  4068d7:	pop    es
  4068d8:	push   cs
  4068d9:	push   ds
  4068da:	fstp   QWORD PTR [esi+0x335b6b94]
  4068e0:	iret   
  4068e1:	xor    eax,0xb1a33361
  4068e6:	lea    ebx,[edx-0x49]
  4068e9:	xlat   BYTE PTR ds:[ebx]
  4068ea:	dec    ax
  4068ec:	mov    ch,0xce
  4068ee:	ds mov eax,0x9a71e725
  4068f4:	(bad)
  4068f9:	sti    
  4068fa:	mov    dl,0x6c
  4068fc:	inc    ebp
  4068fd:	or     BYTE PTR [edi],dh
  4068ff:	aad    0xd2
  406901:	sbb    BYTE PTR [eax+esi*4],al
  406904:	mov    cl,0xeb
  406906:	loope  0x40690c
  406908:	ss inc ecx
  40690a:	or     esi,ebx
  40690c:	ret    
  40690d:	icebp  
  40690e:	mov    bl,0xe3
  406910:	pop    esi
  406911:	ror    BYTE PTR [edx+0x497d2751],cl
  406917:	loope  0x406992
  406919:	es add al,0x92
  40691c:	mov    ?,WORD PTR [ebx]
  40691e:	test   DWORD PTR [ecx+ecx*4+0x31],edx
  406922:	jbe    0x406962
  406924:	sbb    DWORD PTR [esp+edi*1],edx
  406927:	cmp    BYTE PTR [ebx+0x59],dh
  40692a:	or     eax,0x8d9d15f3
  40692f:	fdiv   QWORD PTR [edi+0x1785a0e7]
  406935:	mul    BYTE PTR [eax+eiz*1+0x6a58e4d8]
  40693c:	clc    
  40693d:	inc    eax
  40693e:	sub    ebp,edi
  406940:	sbb    esp,DWORD PTR [ecx-0x78bf81d2]
  406946:	in     al,0x1c
  406948:	add    al,0x14
  40694a:	inc    ecx
  40694b:	dec    BYTE PTR [ecx-0x7c9a4eb6]
  406951:	pop    es
  406952:	sub    BYTE PTR [esi+0x6a],dl
  406955:	je     0x406957
  406957:	fs pop edx
  406959:	inc    eax
  40695a:	mov    cl,0x20
  40695c:	outs   dx,DWORD PTR ds:[esi]
  40695d:	loop   0x4069bf
  40695f:	ins    BYTE PTR es:[edi],dx
  406960:	ds stos DWORD PTR es:[edi],eax
  406962:	int3   
  406963:	add    edx,esp
  406965:	int    0xa4
  406967:	lock test DWORD PTR ds:0x84117164,edi
  40696f:	test   DWORD PTR [edx+0x59],ebp
  406972:	xchg   esp,eax
  406973:	add    ah,bh
  406975:	in     al,dx
  406976:	xchg   ecx,eax
  406977:	mov    bh,0x69
  406979:	outs   dx,BYTE PTR ds:[esi]
  40697a:	fadd   st(1),st
  40697c:	adc    BYTE PTR [ebx+ebp*8-0x1cc5b648],0xb6
  406984:	pusha  
  406985:	add    al,0x9a
  406987:	je     0x4069aa
  406989:	jbe    0x406985
  40698b:	and    esi,esp
  40698d:	aaa    
  40698e:	fidivr DWORD PTR [eax+ecx*1]
  406991:	pop    es
  406992:	pop    edx
  406993:	jmp    0x617cbc5a
  406998:	rcl    BYTE PTR [edx],cl
  40699a:	shr    dl,0xaf
  40699d:	pop    ebp
  40699e:	pushf  
  40699f:	jecxz  0x406a12
  4069a1:	cmp    al,0xd9
  4069a3:	lahf   
  4069a4:	push   0x69
  4069a6:	cdq    
  4069a7:	sbb    al,BYTE PTR [ecx-0x77]
  4069aa:	scas   eax,DWORD PTR es:[edi]
  4069ab:	or     ebp,ecx
  4069ad:	scas   al,BYTE PTR es:[edi]
  4069ae:	inc    esp
  4069af:	call   0x18cf5bbd
  4069b4:	in     eax,0xc3
  4069b6:	fnstsw WORD PTR [ebx+0x68121fe4]
  4069bc:	daa    
  4069bd:	cld    
  4069be:	or     al,ch
  4069c0:	cdq    
  4069c1:	sbb    dl,BYTE PTR [ecx+0x5d]
  4069c4:	dec    edi
  4069c5:	xchg   bx,ax
  4069c7:	das    
  4069c8:	cmp    al,0xc4
  4069ca:	jb     0x406980
  4069cc:	into   
  4069cd:	push   esi
  4069ce:	push   0x50
  4069d0:	imul   ebp,DWORD PTR [ebp+0x758eae52],0xe7be791c
  4069da:	leave  
  4069db:	mov    bl,0xff
  4069dd:	dec    edi
  4069de:	adc    ebx,ebp
  4069e0:	or     dh,BYTE PTR ds:0xbe40efab
  4069e6:	sub    eax,0xfcfa9b72
  4069eb:	cld    
  4069ec:	cmp    cl,ch
  4069ee:	xchg   BYTE PTR [eax+0xab393a3],al
  4069f4:	and    dl,BYTE PTR es:[edx-0x4643cc08]
  4069fb:	div    DWORD PTR [esi+0x5]
  4069fe:	sti    
  4069ff:	jo     0x4069cd
  406a01:	arpl   WORD PTR [esi+eiz*8+0x832b2e1],sp
  406a08:	jo     0x406a29
  406a0a:	xchg   ch,al
  406a0c:	pop    es
  406a0d:	clc    
  406a0e:	mov    eax,DWORD PTR [ebp+ecx*8+0x79ca3f36]
  406a15:	repnz mov ebp,0xbdbb6330
  406a1b:	mov    ebp,0x387eec00
  406a20:	mov    ch,0x4b
  406a22:	jo     0x406a60
  406a24:	pop    edi
  406a25:	jno    0x406a96
  406a27:	pusha  
  406a28:	int    0x4e
  406a2a:	xchg   DWORD PTR [ebp-0x39],edx
  406a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a2e:	adc    eax,0x22cae1ec
  406a33:	(bad)  
  406a34:	adc    al,0x3b
  406a36:	add    al,0xa5
  406a38:	sbb    al,0x41
  406a3a:	out    dx,eax
  406a3b:	mov    dh,0x85
  406a3d:	js     0x406a18
  406a3f:	inc    ecx
  406a40:	fcom   QWORD PTR [ebx-0x3d]
  406a43:	push   cs
  406a44:	ret    0x4d73
  406a47:	fisttp WORD PTR [ebx-0x1e3e8de7]
  406a4d:	push   ds
  406a4e:	mov    eax,0x7520d2fa
  406a53:	es test ah,0x3d
  406a57:	scas   al,BYTE PTR es:[edi]
  406a58:	sbb    eax,0x73b9f92c
  406a5d:	ds add bl,0x8d
  406a61:	push   cs
  406a62:	jl     0x406ab1
  406a64:	gs loop 0x406a7f
  406a67:	sbb    ebx,DWORD PTR [edi-0x54867c72]
  406a6d:	xor    eax,0xa2232056
  406a72:	lds    ecx,FWORD PTR [edx+0x59]
  406a75:	or     al,0x98
  406a77:	outs   dx,BYTE PTR ds:[esi]
  406a78:	dec    eax
  406a79:	xchg   BYTE PTR [edi+0x4e],ah
  406a7c:	dec    ebx
  406a7d:	mov    ecx,0xa179b499
  406a82:	add    dl,BYTE PTR ds:0x7f791c76
  406a88:	adc    eax,0xb1087d61
  406a8d:	retf   0xc850
  406a90:	mov    ch,BYTE PTR [edx+0x76]
  406a93:	test   eax,0x2e9c02af
  406a98:	and    ebp,eax
  406a9a:	jae    0x406a4e
  406a9c:	add    edx,edi
  406a9e:	dec    edx
  406a9f:	mov    al,0x9a
  406aa1:	outs   dx,BYTE PTR ds:[esi]
  406aa2:	(bad)  
  406aa3:	into   
  406aa4:	cmp    BYTE PTR [esi-0x15],ah
  406aa7:	sub    bh,BYTE PTR [edi]
  406aa9:	js     0x406b0f
  406aab:	push   esi
  406aac:	dec    edx
  406aad:	fcomp  DWORD PTR [esi+ecx*4]
  406ab0:	jge    0x406a64
  406ab2:	push   eax
  406ab3:	xchg   edx,eax
  406ab4:	xor    DWORD PTR [eax-0x71],ecx
  406ab7:	idiv   bh
  406ab9:	push   cs
  406aba:	mov    esp,DWORD PTR [edx]
  406abc:	add    al,0x59
  406abe:	gs (bad) 
  406ac0:	in     al,0x8b
  406ac2:	add    BYTE PTR [ebp-0x58ed0949],0x2a
  406ac9:	add    DWORD PTR [ebp-0x7f23cad1],edx
  406acf:	sub    BYTE PTR [ebp-0x4f],0xd1
  406ad3:	or     edx,esp
  406ad5:	or     ecx,edi
  406ad7:	xchg   edi,eax
  406ad8:	mov    ebp,0x8b8d6a20
  406add:	push   0x6f5e84af
  406ae2:	aam    0x29
  406ae4:	push   0x38
  406ae6:	out    0xc4,eax
  406ae8:	les    esp,FWORD PTR [ecx-0x474b1ad7]
  406aee:	lods   al,BYTE PTR ds:[esi]
  406aef:	popa   
  406af0:	jle    0x406a74
  406af2:	out    0x0,eax
  406af4:	call   0xc89f83a2
  406af9:	cwde   
  406afa:	cmp    al,0x60
  406afc:	xor    dl,0x24
  406aff:	xchg   BYTE PTR [edi-0x23],bl
  406b02:	imul   esi,ecx,0xe02e6cb9
  406b08:	jp     0x406aff
  406b0a:	leave  
  406b0b:	pop    ebp
  406b0c:	cli    
  406b0d:	push   ebx
  406b0e:	bound  ebp,QWORD PTR [ebx+0x2337aa29]
  406b14:	jecxz  0x406ae7
  406b16:	test   DWORD PTR [ecx-0x68],edx
  406b19:	ins    DWORD PTR es:[edi],dx
  406b1a:	imul   ebx,DWORD PTR [eax+0x90b7fd2],0x49
  406b21:	out    dx,al
  406b22:	dec    ebx
  406b23:	ins    DWORD PTR es:[edi],dx
  406b24:	add    al,0x73
  406b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b27:	adc    eax,0x3f8a17b9
  406b2c:	cdq    
  406b2d:	fdivr  DWORD PTR [eax-0x13]
  406b30:	test   BYTE PTR [edx-0x16],dl
  406b33:	daa    
  406b34:	shl    BYTE PTR [ecx],cl
  406b36:	cmp    esp,DWORD PTR [esi+0x41f211ce]
  406b3c:	jmp    0x406bb1
  406b3e:	rcl    BYTE PTR fs:[ebx],0x24
  406b42:	arpl   WORD PTR [ecx-0x4],bp
  406b45:	imul   ch
  406b47:	jo     0x406b26
  406b49:	inc    edi
  406b4a:	add    bl,BYTE PTR [ecx-0x2c12cae8]
  406b50:	addr16 repz inc ecx
  406b53:	vsubss xmm0,xmm1,DWORD PTR [ebx]
  406b57:	bound  ecx,QWORD PTR [ebx+0x121b133d]
  406b5d:	icebp  
  406b5e:	in     al,0x9e
  406b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b61:	mov    edi,0x12b78690
  406b66:	or     eax,0xee658a0c
  406b6b:	xor    DWORD PTR [esi+0x5],eax
  406b6e:	jle    0x406b65
  406b70:	xor    eax,0x8529b693
  406b75:	std    
  406b76:	xchg   esi,eax
  406b77:	mov    di,WORD PTR [edi]
  406b7a:	pop    ds
  406b7b:	jg     0x406b4e
  406b7d:	adc    BYTE PTR [esi],dl
  406b7f:	imul   ecx,ecx,0xffffffbb
  406b82:	sub    edi,DWORD PTR [esi]
  406b84:	jae    0x406bdd
  406b86:	mov    al,ds:0xd09d4549
  406b8b:	popa   
  406b8c:	jp     0x406b56
  406b8e:	in     al,dx
  406b8f:	push   0xffffffb8
  406b91:	mov    eax,ds:0xd55707c0
  406b96:	push   edx
  406b97:	jnp    0x406bb7
  406b99:	sti    
  406b9a:	pop    edx
  406b9b:	mov    bl,0x1c
  406b9d:	cwde   
  406b9e:	or     BYTE PTR [edi-0x11144dc3],ah
  406ba4:	sub    edi,DWORD PTR [ebx]
  406ba6:	fst    QWORD PTR [esp+esi*4]
  406ba9:	sbb    DWORD PTR [ebx+0x38b014fe],edx
  406baf:	cmp    ebp,0x6ccb3492
  406bb5:	dec    edi
  406bb6:	or     dh,BYTE PTR [edx]
  406bb8:	aam    0xd
  406bba:	bound  ebp,QWORD PTR [ecx-0x116f1eab]
  406bc0:	dec    ebp
  406bc1:	jo     0x406c0d
  406bc3:	repnz adc eax,0xca2aabeb
  406bc9:	and    al,0xb6
  406bcb:	imul   esi,DWORD PTR [eax-0x19],0xdd52db3b
  406bd2:	ret    
  406bd3:	outs   dx,BYTE PTR ds:[esi]
  406bd4:	es stos BYTE PTR es:[edi],al
  406bd6:	mov    al,BYTE PTR [ebx-0x6fb3ca38]
  406bdc:	add    DWORD PTR [eax],eax
  406bde:	add    al,0xaa
  406be0:	and    DWORD PTR [eax],0x1a835d71
  406be6:	adc    al,0xb9
  406be8:	leave  
  406be9:	cdq    
  406bea:	out    0xa5,eax
  406bec:	jmp    0x406bc8
  406bee:	in     al,0x1
  406bf0:	add    ch,ch
  406bf2:	mov    cl,0x16
  406bf4:	cli    
  406bf5:	fild   QWORD PTR cs:[ebx+0x10]
  406bf9:	mov    DWORD PTR ds:0xbb290220,edi
  406bff:	hlt    
  406c00:	push   ebx
  406c01:	cld    
  406c02:	pop    edx
  406c03:	fs pop ebx
  406c05:	xchg   ecx,eax
  406c06:	iret   
  406c07:	add    eax,0x5e6417c7
  406c0c:	sbb    BYTE PTR [edx-0x5b],ah
  406c0f:	les    esi,FWORD PTR [ecx+0x4d1ed7c4]
  406c15:	push   esp
  406c16:	pop    esp
  406c17:	int3   
  406c18:	xchg   DWORD PTR [ebx+ecx*8+0x1f],ebp
  406c1c:	push   es
  406c1d:	xor    bh,BYTE PTR [ebx-0x32]
  406c20:	sbb    esp,DWORD PTR [edi+esi*4-0x7c]
  406c24:	addr16 pop edx
  406c26:	add    DWORD PTR [esi],esi
  406c28:	sti    
  406c29:	dec    ebx
  406c2a:	add    DWORD PTR [edi+0x50c0bfb3],0x59e0986c
  406c34:	cmp    ah,ah
  406c36:	push   ecx
  406c37:	sub    BYTE PTR [ebx],al
  406c39:	jmp    0x5e51:0x40c725d6
  406c40:	adc    al,0xe5
  406c42:	mov    ebx,0xaf4f076f
  406c47:	and    bl,BYTE PTR [ecx+0x4fb309b7]
  406c4d:	scas   al,BYTE PTR es:[edi]
  406c4e:	lea    edi,[esi+0x4e9c6d9e]
  406c54:	jmp    0x406c67
  406c56:	mov    cl,0x0
  406c58:	jmp    0x406ca8
  406c5a:	aas    
  406c5b:	imul   ebx,eax,0x55
  406c5e:	lea    eax,[edx-0x483d3c5e]
  406c64:	push   eax
  406c65:	dec    esp
  406c66:	lock xchg BYTE PTR [ebp+0x21eca39f],al
  406c6d:	xor    BYTE PTR [ecx+ecx*1],ch
  406c70:	mov    DWORD PTR [edi-0x246a4d20],ebx
  406c76:	retf   
  406c77:	or     al,0x9e
  406c79:	mov    bh,0xa7
  406c7b:	mov    dl,BYTE PTR [ebp+0x25]
  406c7e:	or     BYTE PTR [eax+eax*4+0x47210efa],dh
  406c85:	shl    ebx,cl
  406c87:	pop    ecx
  406c88:	adc    ebp,edi
  406c8a:	pop    edi
  406c8b:	mov    bh,0xae
  406c8d:	jp     0x406cf8
  406c8f:	das    
  406c90:	xchg   edx,eax
  406c91:	pop    ebx
  406c92:	scas   eax,DWORD PTR es:[edi]
  406c93:	mov    DWORD PTR [ebp-0x483f2151],edx
  406c99:	ret    
  406c9a:	out    dx,eax
  406c9b:	sub    ebx,ebp
  406c9d:	clc    
  406c9e:	arpl   bx,dx
  406ca0:	and    al,0x8e
  406ca2:	xor    bl,dl
  406ca4:	in     eax,dx
  406ca5:	pop    ebx
  406ca6:	or     BYTE PTR [edx+ecx*4],dl
  406ca9:	fstp   QWORD PTR [edx]
  406cab:	cmp    eax,0x9254d0d2
  406cb0:	sbb    eax,0xe435250
  406cb5:	stos   BYTE PTR es:[edi],al
  406cb6:	and    BYTE PTR [ecx-0x4f],0x3a
  406cba:	add    DWORD PTR [esi+0x39],ecx
  406cbd:	mov    ds:0xf0d12b6e,eax
  406cc2:	sbb    DWORD PTR ds:0x6eadd91d,0xba82f8c
  406ccc:	outs   dx,BYTE PTR ds:[esi]
  406ccd:	sub    eax,0xba47de07
  406cd2:	push   eax
  406cd3:	lea    ecx,[ebp-0x160df749]
  406cd9:	sbb    DWORD PTR [edx+0x3043dd3],esp
  406cdf:	jecxz  0x406c75
  406ce1:	and    DWORD PTR [eax+0x2d],ecx
  406ce4:	sbb    esp,DWORD PTR ds:0x3e787c06
  406cea:	pop    ebx
  406ceb:	sbb    bl,al
  406ced:	cmovbe edi,DWORD PTR [ebx+eax*1-0x24]
  406cf2:	(bad)  
  406cf3:	rcl    cl,cl
  406cf5:	jmp    0x1ba9:0x2eaa41e8
  406cfc:	lock test eax,0x2afc16fb
  406d02:	sahf   
  406d03:	adc    BYTE PTR [eax],ch
  406d05:	call   0x1a3e:0x3a68a4f4
  406d0c:	mov    ebp,0x6046ed26
  406d11:	rol    DWORD PTR [esi+0x7d],0x6d
  406d15:	push   esi
  406d16:	xchg   ebx,eax
  406d17:	push   esi
  406d18:	push   edx
  406d19:	out    0x7b,al
  406d1b:	jo     0x406d3b
  406d1d:	adc    DWORD PTR [ebp+0x7a],eax
  406d20:	les    edx,FWORD PTR [ecx]
  406d22:	or     DWORD PTR [ebx],esp
  406d24:	inc    ecx
  406d25:	dec    ebp
  406d26:	pop    esi
  406d27:	add    DWORD PTR [edx+0x28],0xffffffdd
  406d2b:	jge    0x406cbe
  406d2d:	test   al,0x93
  406d2f:	call   0x8f9a:0xc56b4d87
  406d36:	cmc    
  406d37:	jo     0x406ceb
  406d39:	cmp    al,bl
  406d3b:	cs cli 
  406d3d:	pop    eax
  406d3e:	out    0x1a,al
  406d40:	add    eax,DWORD PTR [esi]
  406d42:	pop    ebp
  406d43:	jno    0x406d25
  406d45:	jle    0x406d50
  406d47:	shl    DWORD PTR ds:[edi],cl
  406d4a:	out    0x6e,al
  406d4c:	enter  0x9cee,0xab
  406d50:	inc    edi
  406d51:	cmp    BYTE PTR [ebx],0x69
  406d54:	rcl    esi,cl
  406d56:	sub    BYTE PTR [esi-0x39fbd4c2],ah
  406d5c:	js     0x406d94
  406d5e:	add    ah,cl
  406d60:	loopne 0x406d08
  406d62:	or     eax,0x8bf1b5d5
  406d67:	xor    cl,ah
  406d69:	es pop edi
  406d6b:	jne    0x406d6a
  406d6d:	xor    BYTE PTR [edx+ebp*2+0x7a0b55fc],cl
  406d74:	out    dx,eax
  406d75:	push   edi
  406d76:	xor    BYTE PTR [esi+0x59],0x9c
  406d7a:	ss int 0x82
  406d7d:	xor    eax,0xb26c4cda
  406d82:	repz pop ds
  406d84:	jp     0x406dec
  406d86:	lds    edi,FWORD PTR [edx+0x59]
  406d89:	test   DWORD PTR [eax+0x5e],eax
  406d8c:	mov    ah,0xa5
  406d8e:	lods   eax,DWORD PTR ds:[esi]
  406d8f:	test   DWORD PTR [edi+0x165e18f4],eax
  406d95:	jmp    0x406dcd
  406d97:	out    dx,al
  406d98:	js     0x406d8d
  406d9a:	ja     0x406d3d
  406d9c:	aam    0x3d
  406d9e:	icebp  
  406d9f:	push   DWORD PTR [ecx]
  406da1:	icebp  
  406da2:	fcomp  DWORD PTR [eax-0x66]
  406da5:	push   0xb56755a3
  406daa:	cld    
  406dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dac:	imul   eax,DWORD PTR [edx+0x8],0xffffffff
  406db0:	pop    edi
  406db1:	xchg   esp,eax
  406db2:	ins    BYTE PTR es:[edi],dx
  406db3:	fnstcw WORD PTR [eax]
  406db5:	jae    0x406dd4
  406db7:	xchg   ebp,eax
  406db8:	add    BYTE PTR [edi+0x9],ch
  406dbb:	pop    ebp
  406dbc:	mov    WORD PTR [eax+0x15619be2],?
  406dc2:	inc    eax
  406dc3:	push   eax
  406dc4:	ret    0x922a
  406dc7:	push   es
  406dc8:	popa   
  406dc9:	out    dx,eax
  406dca:	in     al,dx
  406dcb:	fst    DWORD PTR [ecx]
  406dcd:	rcr    BYTE PTR [edi-0x6f],1
  406dd0:	in     al,dx
  406dd1:	add    DWORD PTR [edx+eiz*1],ecx
  406dd4:	add    edi,ebp
  406dd6:	xor    BYTE PTR [edx-0x2f5dbd0b],ch
  406ddc:	push   ebx
  406ddd:	inc    esi
  406dde:	je     0x406d98
  406de0:	repnz mov fs,WORD PTR [eax-0x27dcf004]
  406de7:	(bad)  
  406de8:	gs push eax
  406dea:	pop    ss
  406deb:	mov    esp,0x651f7763
  406df0:	imul   edx,DWORD PTR [edi-0x549d951e],0xdbc64b1c
  406dfa:	loope  0x406e75
  406dfc:	jae    0x406e37
  406dfe:	sbb    BYTE PTR [edx-0x6f],dl
  406e01:	sub    BYTE PTR ds:0xa513448b,dl
  406e07:	lahf   
  406e08:	out    0x13,al
  406e0a:	inc    esi
  406e0b:	push   ds
  406e0c:	sbb    al,0x66
  406e0e:	cmp    eax,0xbeb5f1b7
  406e13:	mov    ds:0x3611d0a9,eax
  406e18:	or     BYTE PTR [ecx-0x13ecd25c],ah
  406e1e:	xchg   ebp,eax
  406e1f:	fsubr  QWORD PTR [esi+0x644e9091]
  406e25:	lods   eax,DWORD PTR ds:[esi]
  406e26:	cmp    ch,ah
  406e28:	cld    
  406e29:	mov    edi,0x1d5f5fac
  406e2e:	adc    DWORD PTR [esi],ecx
  406e30:	or     DWORD PTR [ecx-0x9],esi
  406e33:	shl    DWORD PTR [ecx-0x16],cl
  406e36:	adc    eax,0x704914c5
  406e3b:	jb     0x406e61
  406e3d:	ss dec edi
  406e3f:	cmp    BYTE PTR [ebx-0x9d95b9f],bl
  406e45:	sbb    al,0xa7
  406e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e48:	sahf   
  406e49:	mov    edi,0x6ec756de
  406e4e:	adc    edi,esi
  406e50:	xchg   esp,eax
  406e51:	(bad)  
  406e52:	mov    ch,0xb2
  406e54:	or     BYTE PTR ss:[ebx],dh
  406e57:	jmp    0xfdc2:0xced7a55
  406e5e:	mov    bl,0xa2
  406e60:	xor    ecx,edi
  406e62:	fnstenv [esi+0x684225f7]
  406e68:	leave  
  406e69:	daa    
  406e6a:	mov    ebp,0xbd0e287b
  406e6f:	inc    esp
  406e70:	in     eax,dx
  406e71:	pop    esi
  406e72:	retf   0x37ad
  406e75:	loope  0x406e28
  406e77:	mov    dl,0xd5
  406e79:	stc    
  406e7a:	retf   
  406e7b:	ret    0x88ba
  406e7e:	iret   
  406e7f:	mov    bh,0x6d
  406e81:	mov    bh,0x23
  406e83:	ins    BYTE PTR es:[edi],dx
  406e84:	dec    eax
  406e85:	xor    BYTE PTR [ebx+0x30],bh
  406e88:	push   esp
  406e89:	adc    DWORD PTR [esp+ecx*8+0x280eb619],edx
  406e90:	inc    edi
  406e91:	and    al,0xbd
  406e93:	out    0xfa,al
  406e95:	aad    0x4e
  406e97:	adc    cl,dl
  406e99:	inc    BYTE PTR [edx+0x0]
  406e9c:	je     0x406e7a
  406e9e:	gs iret 
  406ea0:	and    ecx,DWORD PTR [edx]
  406ea2:	daa    
  406ea3:	sti    
  406ea4:	(bad)  
  406ea5:	enter  0x98a,0xd9
  406ea9:	cmp    ah,BYTE PTR [edx-0x80]
  406eac:	sbb    esp,eax
  406eae:	daa    
  406eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb0:	mov    esi,0xa2988938
  406eb5:	loop   0x406e92
  406eb7:	(bad)  
  406eb8:	call   0x7dbe12d2
  406ebd:	(bad)  
  406ebe:	loope  0x406ee6
  406ec0:	add    DWORD PTR [edx+0x3eac7260],0x43dba493
  406eca:	inc    eax
  406ecb:	and    BYTE PTR [ebp+0x36e79df4],bl
  406ed1:	or     DWORD PTR [edi-0x3108d6d],edx
  406ed7:	push   edx
  406ed8:	das    
  406ed9:	lds    ecx,FWORD PTR [esi-0x46be4204]
  406edf:	arpl   WORD PTR [edx-0x4f38c1c0],ax
  406ee5:	sub    edx,DWORD PTR [ecx]
  406ee7:	adc    BYTE PTR [eax-0x6b86d657],0x4e
  406eee:	test   BYTE PTR [eax+esi*1+0xb571fc8],0x57
  406ef6:	dec    ecx
  406ef7:	data16 daa 
  406ef9:	and    eax,0xfade815d
  406efe:	add    eax,0xf75e9538
  406f03:	jb     0x406eb1
  406f05:	mov    ah,ch
  406f07:	in     eax,0x67
  406f09:	inc    edi
  406f0a:	idiv   DWORD PTR [esi]
  406f0c:	cli    
  406f0d:	add    DWORD PTR ds:0x1f9f5810,edx
  406f13:	fnstsw WORD PTR [edx+0x7f1fad3e]
  406f19:	mov    ecx,0x3edae716
  406f1e:	and    cl,BYTE PTR ds:0xaa85f7e5
  406f24:	sub    edi,DWORD PTR [ebp-0x6be5d70e]
  406f2a:	or     al,0x85
  406f2c:	jo     0x406f9f
  406f2e:	inc    edi
  406f2f:	fst    DWORD PTR [ebx-0x25]
  406f32:	outs   dx,BYTE PTR ds:[esi]
  406f33:	adc    eax,0xea06763a
  406f38:	enter  0x8577,0x6e
  406f3c:	cli    
  406f3d:	jmp    0x4772:0x9e4271cd
  406f44:	fs sbb al,0x6c
  406f47:	cmp    DWORD PTR [ebx],esp
  406f49:	cmp    al,0xdf
  406f4b:	push   eax
  406f4c:	lods   al,BYTE PTR ds:[esi]
  406f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4e:	mov    esp,0x5e706f39
  406f53:	lods   eax,DWORD PTR fs:[esi]
  406f55:	pusha  
  406f56:	fbstp  TBYTE PTR [edx]
  406f58:	dec    eax
  406f59:	or     DWORD PTR [esi+0x601ef700],edi
  406f5f:	imul   ebx,DWORD PTR [ebp+edx*2-0x3de9e27a],0xdefff8c3
  406f6a:	jnp    0x406ef0
  406f6c:	stc    
  406f6d:	and    BYTE PTR [edx-0x77cb78a4],0x30
  406f74:	inc    edx
  406f75:	mov    bl,0x6
  406f77:	and    eax,0x5ab76a47
  406f7c:	push   ebx
  406f7d:	mov    dl,0x40
  406f7f:	inc    edi
  406f80:	imul   esp,DWORD PTR [esi-0x5cfc8aed],0xf5e38808
  406f8a:	cmp    eax,0xd74cbfea
  406f8f:	popa   
  406f90:	sar    bl,cl
  406f92:	into   
  406f93:	nop
  406f94:	cli    
  406f95:	sbb    DWORD PTR [edi+0x9f6798f],ebx
  406f9b:	push   esi
  406f9c:	lods   eax,DWORD PTR ds:[esi]
  406f9d:	dec    esi
  406f9e:	ret    
  406f9f:	mov    ch,0x79
  406fa1:	jle    0x81b0bc37
  406fa7:	push   ebp
  406fa8:	popf   
  406fa9:	jecxz  0x406fef
  406fab:	jg     0x406fad
  406fad:	cmp    al,cl
  406faf:	xor    ah,BYTE PTR [edx+0xf882977]
  406fb5:	adc    BYTE PTR ds:0x25679738,ch
  406fbb:	xor    DWORD PTR [esp+esi*4-0x41],esi
  406fbf:	pop    ecx
  406fc0:	bound  eax,QWORD PTR [ecx+0x4ffdc335]
  406fc6:	out    dx,eax
  406fc7:	jnp    0x406ffe
  406fc9:	push   es
  406fca:	aam    0x44
  406fcc:	jno    0x407008
  406fce:	gs ja  0x406fc0
  406fd1:	leave  
  406fd2:	ds xchg edi,eax
  406fd4:	pop    edx
  406fd5:	mov    edi,?
  406fd7:	jecxz  0x406fb1
  406fd9:	mov    ch,0x61
  406fdb:	xor    cl,BYTE PTR ds:0xa7daffe3
  406fe1:	dec    esp
  406fe2:	fnstcw WORD PTR [ecx]
  406fe4:	cmp    al,0x8b
  406fe6:	mov    bl,0xba
  406fe8:	sub    esp,esi
  406fea:	int3   
  406feb:	in     al,dx
  406fec:	pop    ebx
  406fed:	fwait
  406fee:	ins    DWORD PTR es:[edi],dx
  406fef:	repz into 
  406ff1:	sub    eax,DWORD PTR [ebp+eiz*2+0x1]
  406ff5:	stc    
  406ff6:	cmp    edx,DWORD PTR ds:0xfb23e978
  406ffc:	repz sbb al,BYTE PTR [eax-0x76]
  407000:	mov    WORD PTR [edx],ss
  407002:	test   eax,0x441032ba
  407007:	call   0xf02e:0x835f94d4
  40700e:	arpl   WORD PTR [ebx+0x4949f6ed],bx
  407014:	jb     0x407065
  407016:	cmp    al,0xb8
  407018:	in     al,dx
  407019:	jns    0x407096
  40701b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40701c:	fbstp  TBYTE PTR [ebp+0x1c]
  40701f:	adc    DWORD PTR [esi],esp
  407021:	add    eax,0x51ffef32
  407026:	bnd jnp 0x407014
  407029:	lods   eax,DWORD PTR ds:[esi]
  40702a:	aad    0xd8
  40702c:	xchg   ebp,eax
  40702d:	jl     0x40704f
  40702f:	pop    edx
  407030:	add    eax,DWORD PTR [edx+0x25]
  407033:	mov    esp,0x82e71b15
  407038:	xlat   BYTE PTR ds:[ebx]
  407039:	retf   0x3c47
  40703c:	pop    ebp
  40703d:	js     0x40703e
  40703f:	cdq    
  407040:	mov    cl,0x44
  407042:	mov    edi,esi
  407044:	dec    edi
  407045:	pop    es
  407046:	mov    ds:0xa293685c,eax
  40704b:	xchg   ebp,eax
  40704c:	outs   dx,DWORD PTR ds:[esi]
  40704d:	push   ss
  40704e:	and    DWORD PTR [edi],0xf21155e7
  407054:	pop    esp
  407055:	bound  ebp,QWORD PTR [edx-0x5b]
  407058:	and    ah,bl
  40705a:	aaa    
  40705b:	in     al,0x45
  40705d:	outs   dx,BYTE PTR ds:[esi]
  40705e:	or     BYTE PTR [edx+ecx*1+0x7757c50],al
  407065:	pop    edi
  407066:	fdivr  QWORD PTR [edx+eax*4+0x2fea4fc0]
  40706d:	jmp    0x423c180b
  407072:	rcr    DWORD PTR [edx+0x4],cl
  407075:	test   esi,eax
  407077:	sahf   
  407078:	sub    al,0x94
  40707a:	adc    ebx,DWORD PTR [edi+0x1d]
  40707d:	es das 
  40707f:	mov    ch,0xde
  407081:	mov    edi,0xf72c26b5
  407086:	scas   al,BYTE PTR es:[edi]
  407087:	xchg   ecx,eax
  407088:	push   ds
  407089:	adc    DWORD PTR [eax+ecx*4],0xaf306e44
  407090:	shr    DWORD PTR [ecx+0x5981d5b1],cl
  407096:	push   0xffffffd8
  407098:	xlat   BYTE PTR ds:[ebx]
  407099:	or     DWORD PTR [eax-0x54],eax
  40709c:	test   BYTE PTR [edi+0x2b7302ff],ch
  4070a2:	addr16 div dh
  4070a5:	nop
  4070a6:	out    0x9d,eax
  4070a8:	arpl   WORD PTR [esi+0x79],cx
  4070ab:	shr    DWORD PTR [ebp-0x385ade59],1
  4070b1:	pop    ss
  4070b2:	aad    0xb9
  4070b4:	test   DWORD PTR ds:[ebx-0x17],ebp
  4070b8:	cs xor al,0x3e
  4070bb:	push   esi
  4070bc:	cli    
  4070bd:	dec    esp
  4070be:	mov    eax,0xd39c3a8b
  4070c3:	mov    al,ds:0x9124a9e8
  4070c8:	push   ds
  4070c9:	and    BYTE PTR [edi+0x2a729d1f],0xbc
  4070d0:	add    DWORD PTR [eax+ecx*8+0x36],0xffffffa4
  4070d5:	outs   dx,DWORD PTR ds:[esi]
  4070d6:	cmp    eax,edx
  4070d8:	and    ebp,DWORD PTR [ecx+0x30]
  4070db:	pop    edi
  4070dc:	cld    
  4070dd:	outs   dx,DWORD PTR ds:[esi]
  4070de:	or     DWORD PTR [edi],edi
  4070e0:	dec    edi
  4070e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e2:	dec    edi
  4070e3:	mov    ebx,0xd232350a
  4070e8:	(bad)  
  4070e9:	jecxz  0x407141
  4070eb:	fadd   QWORD PTR [eax]
  4070ed:	dec    esp
  4070ee:	mov    dl,0xd3
  4070f0:	pushf  
  4070f1:	(bad)  
  4070f2:	adc    BYTE PTR [edi+0x39e81484],0x13
  4070f9:	int3   
  4070fa:	xlat   BYTE PTR ds:[ebx]
  4070fb:	sub    BYTE PTR [edi],al
  4070fd:	mov    ebp,0x1c7cbf22
  407102:	or     BYTE PTR [ebx-0x61],0x6
  407106:	jmp    0x4070ab
  407108:	inc    esi
  407109:	pop    es
  40710a:	cld    
  40710b:	test   BYTE PTR [ebx],dl
  40710d:	popf   
  40710e:	int3   
  40710f:	(bad)  
  407110:	pushf  
  407111:	mov    ds:0x91b3181e,eax
  407116:	sub    DWORD PTR [ecx+0x2597efe9],edx
  40711c:	pop    ds
  40711d:	lods   eax,DWORD PTR ds:[esi]
  40711e:	xchg   ebx,eax
  40711f:	mov    al,0x9f
  407121:	sbb    dh,ch
  407123:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  407125:	mov    ah,0x46
  407127:	retf   0x1178
  40712a:	ss push 0x6f
  40712d:	jmp    0x4070b0
  40712f:	nop
  407130:	pop    esp
  407131:	mov    dl,0x4e
  407133:	rol    dh,1
  407135:	xor    al,BYTE PTR [edx+0x3a58a4fb]
  40713b:	adc    bh,BYTE PTR [esi+0x37]
  40713e:	fwait
  40713f:	outs   dx,BYTE PTR ds:[esi]
  407140:	mov    edx,0x631d6dde
  407145:	out    dx,eax
  407146:	push   0xffffff92
  407148:	cdq    
  407149:	inc    ebx
  40714a:	sar    BYTE PTR [ebx],0xa2
  40714d:	jbe    0x4071ac
  40714f:	sub    esp,DWORD PTR [ebx-0x74]
  407152:	loope  0x407151
  407154:	push   esi
  407155:	test   eax,0xd6205d33
  40715a:	pop    ebp
  40715b:	jle    0x4070ec
  40715d:	in     eax,0x7f
  40715f:	shr    DWORD PTR ds:0xba0c8dcb,cl
  407165:	lahf   
  407166:	cwde   
  407167:	inc    esi
  407168:	mov    dh,0x91
  40716a:	fwait
  40716b:	pop    ecx
  40716c:	sub    ecx,esp
  40716e:	cmp    ebp,DWORD PTR [ebp+0x3e559890]
  407174:	pop    ss
  407175:	add    al,0xe1
  407177:	(bad)  
  407178:	hlt    
  407179:	pop    ebx
  40717a:	xor    edx,eax
  40717c:	pop    ecx
  40717d:	mov    ds:0x18bf10c4,al
  407182:	call   0x595eb0b
  407187:	push   cs
  407188:	lock ds call 0x88075aed
  40718f:	sbb    BYTE PTR [ecx-0x43],ch
  407192:	mov    bh,0x84
  407194:	cwde   
  407195:	sbb    DWORD PTR [esi+0x615ee945],esi
  40719b:	jnp    0x4071fd
  40719d:	dec    ebp
  40719e:	mov    ds,WORD PTR [edi+0x19]
  4071a1:	sbb    dl,bh
  4071a3:	inc    esi
  4071a4:	cmp    esp,DWORD PTR [edx]
  4071a6:	jo     0x407218
  4071a8:	dec    esi
  4071a9:	xchg   eax,ebx
  4071ab:	xchg   ebx,eax
  4071ac:	add    al,0x6f
  4071ae:	inc    esi
  4071af:	and    DWORD PTR [ebx-0x6b],ebp
  4071b2:	or     ah,dh
  4071b4:	add    BYTE PTR [edi+0x47],dh
  4071b7:	xchg   DWORD PTR [ebp+0x1edc293f],esi
  4071bd:	pop    edi
  4071be:	retf   
  4071bf:	test   DWORD PTR [edi+0x75],eax
  4071c2:	or     al,0x39
  4071c4:	int    0x45
  4071c6:	(bad)
  4071c9:	hlt    
  4071ca:	jmp    0x40722f
  4071cc:	mov    dl,0xf7
  4071ce:	in     eax,dx
  4071cf:	jbe    0x4071e0
  4071d1:	mov    ebp,?
  4071d3:	std    
  4071d4:	fild   QWORD PTR ds:0x247c992d
  4071da:	fcmovbe st,st(7)
  4071dc:	fcomp  DWORD PTR [edi+edi*1-0x588bca59]
  4071e3:	sbb    BYTE PTR [edi],ah
  4071e5:	aam    0xa0
  4071e7:	retf   
  4071e8:	xor    al,0x90
  4071ea:	and    al,0xe6
  4071ec:	retf   0x351b
  4071ef:	push   ecx
  4071f0:	pop    edi
  4071f1:	dec    esi
  4071f2:	int3   
  4071f3:	mov    ch,0x2a
  4071f5:	cmc    
  4071f6:	sub    eax,0x5db77b77
  4071fb:	fisubr DWORD PTR [edx-0x6e]
  4071fe:	inc    eax
  4071ff:	ss cmp al,0x4e
  407202:	inc    edi
  407203:	aas    
  407204:	add    al,0x76
  407206:	(bad)  
  407207:	lock cmp al,0xcd
  40720a:	sub    BYTE PTR [edx],0x1b
  40720d:	(bad)  
  40720e:	or     eax,0xf654e67e
  407213:	push   ebx
  407214:	sub    WORD PTR [edx+ebp*1],0x1a7a
  40721a:	das    
  40721b:	retf   
  40721c:	ds jo  0x407247
  40721f:	mov    cl,0xc0
  407221:	xchg   esp,eax
  407222:	mov    ch,0xd5
  407224:	jbe    0x4071fe
  407226:	inc    ebp
  407227:	fistp  QWORD PTR [ecx+esi*2+0x71]
  40722b:	mov    ebx,0x448da209
  407230:	mov    ecx,DWORD PTR [ecx*2+0x701931a4]
  407237:	mov    dl,0x65
  407239:	jmp    0xe73fd91e
  40723e:	ficomp DWORD PTR [esi+0xd]
  407241:	adc    eax,0x4d68e11c
  407246:	xchg   ebp,eax
  407247:	fild   DWORD PTR [ecx]
  407249:	aaa    
  40724a:	imul   eax,DWORD PTR [ebp+esi*8+0xfeb62ab],0x3d899533
  407255:	in     eax,0x3d
  407257:	repz in al,dx
  407259:	sub    bl,BYTE PTR [edi]
  40725b:	or     eax,edx
  40725d:	jbe    0x4071f4
  40725f:	mov    WORD PTR [edx-0x4d],es
  407262:	sar    DWORD PTR [ebx+ebp*2-0x3a40beb1],1
  407269:	inc    esi
  40726a:	push   cs
  40726b:	push   eax
  40726c:	push   edi
  40726d:	jmp    0x4072e3
  40726f:	popf   
  407270:	not    BYTE PTR [ecx+0x3d]
  407273:	mov    ebx,0xa9cdfb5e
  407278:	jbe    0x407289
  40727a:	fld    DWORD PTR [eax+0x52b1018d]
  407280:	pushf  
  407281:	sbb    dh,cl
  407283:	aam    0x30
  407285:	xchg   BYTE PTR [esi+esi*2-0x5],dl
  407289:	jp     0x40724a
  40728b:	loopne 0x407247
  40728d:	inc    eax
  40728e:	jbe    0x40729e
  407290:	or     DWORD PTR [esi+0x2d1e954],ebx
  407296:	rcl    DWORD PTR [eax-0x11],cl
  407299:	div    edi
  40729b:	cmp    ch,BYTE PTR [ebx]
  40729d:	aam    0xc8
  40729f:	mov    gs:0xcce12d20,al
  4072a5:	iret   
  4072a6:	fwait
  4072a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a8:	mov    ecx,0x439bb94b
  4072ad:	dec    esi
  4072ae:	std    
  4072af:	xor    eax,0x3edbffa9
  4072b4:	dec    edi
  4072b5:	in     eax,dx
  4072b6:	xlat   BYTE PTR ds:[ebx]
  4072b7:	jge    0x407302
  4072b9:	out    0x2f,eax
  4072bb:	xor    eax,0xed2c6ffa
  4072c0:	pop    DWORD PTR [ebp-0x16043f67]
  4072c6:	or     al,0x17
  4072c8:	jmp    0x407277
  4072ca:	inc    edi
  4072cb:	push   ds
  4072cc:	punpckhbw mm0,mm7
  4072cf:	dec    edi
  4072d0:	neg    BYTE PTR [edx]
  4072d2:	inc    edi
  4072d3:	bound  ebx,QWORD PTR [eax+0x6eff6167]
  4072d9:	dec    eax
  4072da:	jae    0x407317
  4072dc:	sbb    ebp,ecx
  4072de:	xchg   ecx,eax
  4072df:	or     BYTE PTR [ecx],dl
  4072e1:	aaa    
  4072e2:	ror    ecx,cl
  4072e4:	pop    ecx
  4072e5:	mov    esi,0xf6b4add
  4072ea:	daa    
  4072eb:	push   DWORD PTR [eax-0x69f78b28]
  4072f1:	test   BYTE PTR [ebx],dh
  4072f3:	ret    0x20b2
  4072f6:	add    al,0xd7
  4072f8:	fwait
  4072f9:	jmp    0x639a:0xa6391c34
  407300:	cmc    
  407301:	mov    al,0x9d
  407303:	jo     0x407302
  407305:	mov    ah,0xec
  407307:	cli    
  407308:	push   eax
  407309:	and    DWORD PTR [ecx],ebp
  40730b:	(bad)  
  40730c:	mov    ecx,0xc98e0bda
  407311:	dec    esi
  407312:	cmp    DWORD PTR [ecx],edx
  407314:	mov    ebp,0x955f24e6
  407319:	lahf   
  40731a:	f2xm1  
  40731c:	repz jmp 0x4072b1
  40731f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407320:	scas   eax,DWORD PTR es:[edi]
  407321:	sub    ebx,esi
  407323:	gs or  cl,bh
  407326:	sub    al,0x26
  407328:	pop    edx
  407329:	sbb    edi,DWORD PTR [ebx-0x60a1f930]
  40732f:	push   ss
  407330:	jg     0x4072f4
  407332:	push   ss
  407333:	sbb    dh,BYTE PTR [eax+0x3b]
  407336:	test   BYTE PTR [ebx+0x4e],ah
  407339:	mov    dh,0xfd
  40733b:	or     bl,dh
  40733d:	repz push 0x2e90a588
  407343:	jge    0x407353
  407345:	fimul  DWORD PTR ds:0xa3b50961
  40734b:	cli    
  40734c:	inc    ecx
  40734d:	rcr    BYTE PTR [edx-0x365197dd],0xae
  407354:	adc    DWORD PTR ds:0x56c404f8,ebx
  40735a:	cmp    al,0x81
  40735c:	or     BYTE PTR [esi],cl
  40735e:	mov    ch,0x75
  407360:	xchg   ebp,eax
  407361:	mov    bh,0xd1
  407363:	sub    al,0xc4
  407365:	ror    BYTE PTR [ebp-0x7394628b],1
  40736b:	adc    DWORD PTR [eax-0x40],eax
  40736e:	push   ds
  40736f:	add    eax,0x38f04bc5
  407374:	inc    ecx
  407375:	std    
  407376:	dec    edi
  407377:	(bad)  
  407379:	xor    dl,dl
  40737b:	shl    BYTE PTR [eax-0x4fbd18b0],cl
  407381:	inc    ebx
  407382:	push   eax
  407383:	pushf  
  407384:	addr16 or ah,bh
  407387:	iret   
  407388:	imul   esp,DWORD PTR ds:0x4cff50b8,0xffffff98
  40738f:	call   0xfcce:0x1eacec47
  407396:	loop   0x407327
  407398:	lods   eax,DWORD PTR ds:[esi]
  407399:	loopne 0x407387
  40739b:	aam    0xa
  40739d:	fs cmc 
  40739f:	fsubr  DWORD PTR [edi-0x5f5e1b5c]
  4073a5:	dec    ebx
  4073a6:	xchg   edx,eax
  4073a7:	out    dx,eax
  4073a8:	xor    eax,0xe527a966
  4073ad:	and    edx,DWORD PTR [ebx+0x719516e1]
  4073b3:	adc    al,0x7d
  4073b5:	loopne 0x407396
  4073b7:	jecxz  0x4073bc
  4073b9:	dec    ebx
  4073ba:	not    BYTE PTR [esp+esi*2+0x54]
  4073be:	mov    ecx,0x86535db6
  4073c3:	out    0xf8,al
  4073c5:	and    eax,DWORD PTR [esi]
  4073c7:	inc    edx
  4073c8:	mov    DWORD PTR [ebp-0x316974ce],ebp
  4073ce:	fadd   DWORD PTR [esi-0x47]
  4073d1:	retf   
  4073d2:	inc    esi
  4073d3:	repz sub al,0x9
  4073d6:	ss pushf 
  4073d8:	imul   ebx,ebp,0x22
  4073db:	inc    eax
  4073dc:	neg    DWORD PTR [esi]
  4073de:	mov    WORD PTR [ebp+0x7a],?
  4073e1:	(bad)  
  4073e3:	mov    BYTE PTR [eax-0x37ddca12],dl
  4073e9:	aas    
  4073ea:	bound  ebx,QWORD PTR [ebx+0x5b]
  4073ed:	or     esi,eax
  4073ef:	outs   dx,BYTE PTR ds:[esi]
  4073f0:	jmp    0x751f289c
  4073f5:	bound  esp,QWORD PTR [esi]
  4073f7:	push   esp
  4073f8:	ficomp WORD PTR [eax-0x64ea2a1f]
  4073fe:	inc    edi
  4073ff:	cld    
  407400:	in     eax,0xd7
  407402:	mov    edi,cs
  407404:	push   es
  407405:	int    0x63
  407407:	mov    ecx,0x399b50a2
  40740c:	cmp    bl,cl
  40740e:	add    dl,BYTE PTR [ecx+0x1b53bc29]
  407414:	dec    edx
  407415:	test   eax,0x8d0d702d
  40741a:	adc    eax,0xbf52aff3
  40741f:	mov    ecx,0x4eb99bfd
  407424:	cmp    eax,0xf21c5a76
  407429:	xchg   esp,eax
  40742a:	rcl    ebx,cl
  40742c:	mov    gs,WORD PTR [ebx-0x4d]
  40742f:	shl    DWORD PTR [esi+ebp*4],0x37
  407433:	push   DWORD PTR [esi-0x5be2eac7]
  407439:	mov    al,0x7c
  40743b:	inc    ebp
  40743c:	arpl   WORD PTR [edx],di
  40743e:	retf   0x1614
  407441:	test   ecx,edi
  407443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407444:	jns    0x407468
  407446:	sbb    cl,BYTE PTR [edi+0x73f24697]
  40744c:	sub    esp,DWORD PTR [edx+0x3]
  40744f:	push   0x53f4f601
  407454:	xor    BYTE PTR [esi],dh
  407456:	int    0x93
  407458:	mov    cl,0xcf
  40745a:	sub    al,0x1
  40745c:	mov    bh,0xa0
  40745e:	rol    DWORD PTR [eax+edi*1+0x3c94d13f],1
  407465:	mov    edi,0x13557719
  40746a:	dec    ecx
  40746b:	shl    dl,1
  40746d:	mov    ss,eax
  40746f:	push   ss
  407470:	xchg   DWORD PTR [ebx],eax
  407472:	fldcw  WORD PTR [ebx]
  407474:	mov    esi,DWORD PTR [eax]
  407476:	mov    ecx,0xef60a618
  40747b:	leave  
  40747c:	test   ecx,esp
  40747e:	fwait
  40747f:	mov    bl,ch
  407481:	mov    ch,0x48
  407483:	shr    BYTE PTR [eax+0x2d],cl
  407486:	nop    DWORD PTR [ebx-0x68ca2f80]
  40748d:	xor    eax,0x5decb676
  407492:	pop    edi
  407493:	jnp    0x407474
  407495:	js     0x4074d0
  407497:	push   esp
  407498:	fwait
  407499:	das    
  40749a:	shl    ebx,1
  40749c:	add    eax,0x2038b5c3
  4074a1:	shl    DWORD PTR ds:0x6eeff715,0xc6
  4074a8:	mov    BYTE PTR [edi+0x3cfda205],ah
  4074ae:	dec    edi
  4074af:	xor    dl,ah
  4074b1:	add    dl,BYTE PTR [ecx+edx*2-0x4d]
  4074b5:	aam    0xb9
  4074b7:	out    0xe7,al
  4074b9:	mov    BYTE PTR [ebp+0x2b4afba],al
  4074bf:	sub    eax,0xb508328d
  4074c4:	in     al,0x32
  4074c6:	push   ebp
  4074c7:	test   eax,0xcac0abff
  4074cc:	addr16 jmp 0x61a1e2fb
  4074d2:	fld    QWORD PTR [ecx+ebx*1+0x1cf698a6]
  4074d9:	(bad)  
  4074da:	xchg   edx,eax
  4074db:	push   ss
  4074dc:	sub    ecx,edi
  4074de:	xor    al,0x71
  4074e0:	sar    BYTE PTR [ebx-0x7994571],0x19
  4074e7:	stos   DWORD PTR es:[edi],eax
  4074e8:	jp     0x4074f7
  4074ea:	mov    ds:0x9a6c6be8,eax
  4074ef:	push   esp
  4074f0:	add    ch,BYTE PTR [ecx-0x78]
  4074f3:	int3   
  4074f4:	mov    WORD PTR [ebp+0x454aa1bd],?
  4074fa:	je     0x40755a
  4074fc:	inc    ebx
  4074fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074fe:	fidiv  DWORD PTR [edi]
  407500:	nop
  407501:	call   0x2c698243
  407506:	jmp    0x26c5c049
  40750b:	cwde   
  40750c:	js     0x407555
  40750e:	nop
  40750f:	push   esi
  407510:	add    esp,0x5
  407513:	or     eax,0xc69330ca
  407518:	retf   
  407519:	or     DWORD PTR [ebx*8-0x66459e1f],0xffffffde
  407521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407522:	dec    ecx
  407523:	(bad)  
  407524:	loope  0x407554
  407526:	cld    
  407527:	xor    BYTE PTR [eax-0x16],dl
  40752a:	xchg   ebp,eax
  40752b:	daa    
  40752c:	repz mov esp,0xeaf45e09
  407532:	test   DWORD PTR [edi+0x59],edx
  407535:	cmp    BYTE PTR [ecx-0x3ea54f00],dh
  40753b:	ins    BYTE PTR es:[edi],dx
  40753c:	xchg   edi,eax
  40753d:	jg     0x407539
  40753f:	jnp    0x407599
  407541:	fcomp  st(5)
  407543:	cmp    al,BYTE PTR [eax*1-0x729a3dcc]
  40754a:	inc    esi
  40754b:	loopne 0x4075a4
  40754d:	mov    ecx,0x801f8528
  407552:	xor    al,BYTE PTR [edi+0x51]
  407555:	mov    WORD PTR [edx+edx*1-0x46],es
  407559:	mov    al,ds:0xa312f629
  40755e:	mov    dh,0xc8
  407560:	lds    edx,FWORD PTR [edx+ebp*2]
  407563:	ins    DWORD PTR es:[edi],dx
  407564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407565:	retf   
  407566:	pop    eax
  407567:	cmc    
  407568:	and    eax,0x1cd673fd
  40756d:	and    BYTE PTR ds:[ecx],dh
  407570:	(bad)  
  407572:	mov    al,0x2c
  407574:	push   ds
  407575:	and    al,0xa4
  407577:	pop    esi
  407578:	xor    al,0x7f
  40757a:	fs stc 
  40757c:	xchg   ebp,esp
  40757e:	mov    esi,edx
  407580:	mov    ebx,DWORD PTR [ebp-0x2]
  407583:	inc    edx
  407584:	pop    esp
  407585:	ficom  WORD PTR [ecx-0x4e]
  407588:	fld    DWORD PTR [esi]
  40758a:	lods   al,BYTE PTR ds:[esi]
  40758b:	daa    
  40758c:	cli    
  40758d:	sbb    DWORD PTR [eax-0x4e],esi
  407590:	pushw  ds
  407592:	sub    cl,dl
  407594:	mov    ecx,0xecee30ad
  407599:	push   eax
  40759a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40759b:	jne    0x40753f
  40759d:	push   0xe
  40759f:	sub    bh,BYTE PTR [edi-0x546b992f]
  4075a5:	jmp    0xcee95161
  4075aa:	mov    edx,0x8dffef08
  4075af:	aas    
  4075b0:	leave  
  4075b1:	mov    al,ds:0x72362d38
  4075b6:	inc    esi
  4075b7:	call   0x9792:0x90f025a9
  4075be:	pop    edx
  4075bf:	gs out dx,al
  4075c1:	les    ecx,FWORD PTR [ecx-0x2ebc5459]
  4075c7:	retf   
  4075c8:	mov    eax,ds:0xaf388224
  4075cd:	outs   dx,DWORD PTR ds:[esi]
  4075ce:	mov    esi,0x34703b6c
  4075d3:	pop    ecx
  4075d4:	push   ds
  4075d5:	shr    DWORD PTR [ebx],1
  4075d7:	addr16 in al,dx
  4075d9:	inc    ebp
  4075da:	cmp    eax,0x10c42b2c
  4075df:	inc    ebp
  4075e0:	push   ss
  4075e1:	add    al,0x72
  4075e3:	bound  ebx,QWORD PTR [eax]
  4075e5:	inc    esi
  4075e6:	call   0x37761446
  4075eb:	adc    al,0x69
  4075ed:	retf   0x8e4e
  4075f0:	inc    eax
  4075f1:	cmc    
  4075f2:	fstp   TBYTE PTR [edx-0x62b45372]
  4075f8:	imul   edi,DWORD PTR [esi],0x78
  4075fb:	mov    WORD PTR [eax-0x573999],cs
  407601:	inc    eax
  407602:	js     0x407640
  407604:	push   eax
  407605:	jl     0x407659
  407607:	out    dx,al
  407608:	dec    ebp
  407609:	lahf   
  40760a:	jg     0x40758d
  40760c:	loopne 0x4075bd
  40760e:	aas    
  40760f:	cld    
  407610:	mov    cs,edx
  407612:	dec    esp
  407613:	inc    ebx
  407614:	jns    0x4075cc
  407616:	dec    esp
  407617:	xchg   esp,eax
  407618:	hlt    
  407619:	outs   dx,DWORD PTR ds:[esi]
  40761a:	mov    ds:0xe2717f8,al
  40761f:	push   edi
  407620:	cdq    
  407621:	clc    
  407622:	push   ebx
  407623:	dec    eax
  407624:	mov    eax,ds:0x77323cac
  407629:	rcr    BYTE PTR [eax-0x6794b871],1
  40762f:	add    al,0x2b
  407631:	cs loop 0x4075ee
  407634:	pusha  
  407635:	push   es
  407636:	mov    ebx,0x8f4915a6
  40763b:	clc    
  40763c:	mov    eax,ds:0x5fc5f4dd
  407641:	lea    ebx,[ebx+0x6a]
  407644:	add    BYTE PTR [ecx-0x29affeac],ah
  40764a:	inc    BYTE PTR [edx+0x4f]
  40764d:	cmp    bh,BYTE PTR [edx+ebp*2+0x94f4240]
  407654:	sahf   
  407655:	mov    ch,0xea
  407657:	pop    eax
  407658:	dec    ecx
  407659:	icebp  
  40765a:	and    al,0xd7
  40765c:	and    DWORD PTR [edi],0x5719f487
  407662:	cdq    
  407663:	sbb    esi,eax
  407665:	test   ebx,0x680f7a3e
  40766b:	xor    al,0x4
  40766d:	add    BYTE PTR [eax],al
  40766f:	or     DWORD PTR ds:0x428018,0x42a014
  407679:	push   0x98678765
  40767e:	call   DWORD PTR ds:0x42dc63
  407684:	adc    eax,DWORD PTR ds:0x42c008
  40768a:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  407691:	add    DWORD PTR ds:0x428024,0x6cdb
  40769b:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4076a2:	neg    eax
  4076a4:	mov    eax,DWORD PTR [ebp-0x4]
  4076a7:	mov    esi,0x7510899
  4076ac:	dec    DWORD PTR ds:0x42b014
  4076b2:	xor    eax,esi
  4076b4:	and    DWORD PTR ds:0x42c010,ebx
  4076ba:	mov    edi,0x3272e0
  4076bf:	and    DWORD PTR ds:0x42b00c,0x622d
  4076c9:	add    eax,edi
  4076cb:	mov    DWORD PTR [ebp-0x1c],eax
  4076ce:	sub    DWORD PTR ds:0x429008,ecx
  4076d4:	mov    eax,DWORD PTR [ebp+0x14]
  4076d7:	test   eax,eax
  4076d9:	je     0x407700
  4076df:	and    eax,DWORD PTR ds:0x42b010
  4076e5:	mov    eax,DWORD PTR [ebp+0x14]
  4076e8:	movzx  ebx,BYTE PTR ds:0x429010
  4076ef:	sub    ebx,DWORD PTR ds:0x42a000
  4076f5:	mov    DWORD PTR ds:0x429010,ebx
  4076fb:	mov    eax,DWORD PTR [eax]
  4076fd:	mov    DWORD PTR [ebp-0x1c],eax
  407700:	mov    eax,DWORD PTR [ebp-0x4]
  407703:	xor    DWORD PTR ds:0x42901c,0x6981
  40770d:	xor    eax,esi
  40770f:	dec    ebx
  407710:	add    eax,edi
  407712:	sbb    ebx,0x28a0
  407718:	mov    DWORD PTR [ebp-0x8],eax
  40771b:	xor    eax,0x6e91
  407720:	mov    eax,DWORD PTR [ebp-0xc]
  407723:	neg    ebx
  407725:	xor    eax,esi
  407727:	and    DWORD PTR ds:0x428004,0x0
  407731:	jmp    0x407743
  407736:	mov    ebx,DWORD PTR ds:0x428004
  40773c:	inc    ebx
  40773d:	mov    DWORD PTR ds:0x428004,ebx
  407743:	cmp    DWORD PTR ds:0x428004,0x17
  40774a:	jae    0x40776d
  407750:	cmp    DWORD PTR ds:0x428004,0x22
  407757:	jne    0x407768
  40775d:	push   0x42c014
  407762:	call   DWORD PTR ds:0x42dc8b
  407768:	jmp    0x407736
  40776d:	add    eax,edi
  40776f:	mov    DWORD PTR [ebp-0x2c],eax
  407772:	mov    eax,DWORD PTR [ebp-0x4]
  407775:	adc    ebx,DWORD PTR ds:0x42b01c
  40777b:	xor    eax,esi
  40777d:	add    eax,edi
  40777f:	sbb    DWORD PTR ds:0x42b008,edi
  407785:	mov    DWORD PTR [ebp-0x38],eax
  407788:	and    DWORD PTR ds:0x429000,0x0
  407792:	jmp    0x4077a2
  407797:	mov    eax,ds:0x429000
  40779c:	inc    eax
  40779d:	mov    ds:0x429000,eax
  4077a2:	cmp    DWORD PTR ds:0x429000,0x1d
  4077a9:	jae    0x4077fc
  4077af:	cmp    DWORD PTR ds:0x429000,0xc
  4077b6:	jne    0x4077d3
  4077bc:	push   0x27ff
  4077c1:	push   0x1
  4077c3:	push   0x429000
  4077c8:	push   0x69ee
  4077cd:	call   DWORD PTR ds:0x42dc8f
  4077d3:	cmp    DWORD PTR ds:0x429000,0xb
  4077da:	jne    0x4077eb
  4077e0:	mov    eax,ds:0x429000
  4077e5:	inc    eax
  4077e6:	mov    ds:0x429000,eax
  4077eb:	jmp    0x407797
  4077f0:	mov    ebx,DWORD PTR ds:0x429004
  4077f6:	sbb    DWORD PTR ds:0x428004,ebx
  4077fc:	mov    ebx,DWORD PTR [ebp-0x4]
  4077ff:	xor    ebx,esi
  407801:	sbb    DWORD PTR ds:0x42800c,ebx
  407807:	add    ebx,edi
  407809:	mov    eax,DWORD PTR [ebp-0x2c]
  40780c:	add    DWORD PTR ds:0x42c004,0x19e2
  407816:	sub    eax,edi
  407818:	lea    ecx,[ebx-0x3272e0]
  40781e:	add    DWORD PTR ds:0x42901c,0x7b3b
  407828:	xor    eax,esi
  40782a:	xor    DWORD PTR ds:0x42b01c,0x2532
  407834:	xor    ecx,esi
  407836:	mov    DWORD PTR ds:0x42a014,0x5b4d
  407840:	cmp    ecx,eax
  407842:	mov    DWORD PTR ds:0x42a008,0x5311
  40784c:	je     0x409eee
  407852:	mov    eax,ds:0x418f51
  407857:	mov    eax,DWORD PTR [eax]
  407859:	adc    DWORD PTR ds:0x428018,eax
  40785f:	mov    eax,DWORD PTR [ebp-0x4]
  407862:	adc    DWORD PTR ds:0x42c008,0x429004
  40786c:	xor    eax,esi
  40786e:	adc    DWORD PTR ds:0x429008,0x6af5
  407878:	add    eax,edi
  40787a:	cmp    ebx,eax
  40787c:	mov    DWORD PTR ds:0x42a008,0x1a7e
  407886:	jne    0x407b46
  40788c:	sub    DWORD PTR ds:0x42b008,0x42a00c
  407896:	push   DWORD PTR [ebp+0x8]
  407899:	xor    DWORD PTR ds:0x42b01c,0x429018
  4078a3:	call   0x40514a
  4078a8:	mov    DWORD PTR ds:0x42900c,0x1b
  4078b2:	cmp    DWORD PTR ds:0x42900c,0x0
  4078b9:	je     0x407906
  4078bf:	cmp    DWORD PTR ds:0x42900c,0xa
  4078c6:	jne    0x4078d2
  4078cc:	call   DWORD PTR ds:0x42dc93
  4078d2:	cmp    DWORD PTR ds:0x42900c,0xb
  4078d9:	jne    0x4078ee
  4078df:	xor    ecx,ecx
  4078e1:	xor    ecx,DWORD PTR ds:0x42900c
  4078e7:	dec    ecx
  4078e8:	mov    DWORD PTR ds:0x42900c,ecx
  4078ee:	mov    ecx,DWORD PTR ds:0x42900c
  4078f4:	dec    ecx
  4078f5:	mov    DWORD PTR ds:0x42900c,ecx
  4078fb:	jmp    0x4078b2
  407900:	or     ecx,0x1d45
  407906:	mov    DWORD PTR [ebp-0x14],eax
  407909:	mov    eax,DWORD PTR [ebp-0x4]
  40790c:	mov    ecx,DWORD PTR [ebp-0x14]
  40790f:	xor    eax,esi
  407911:	dec    DWORD PTR ds:0x42801c
  407917:	add    eax,edi
  407919:	cmp    ecx,eax
  40791b:	je     0x40c2de
  407921:	and    DWORD PTR ds:0x42b000,0x7708
  40792b:	push   DWORD PTR [ebp-0x14]
  40792e:	push   DWORD PTR [ebp+0x8]
  407931:	xor    DWORD PTR ds:0x429018,0x428008
  40793b:	call   0x40f0e2
  407940:	mov    DWORD PTR [ebp-0x14],eax
  407943:	and    DWORD PTR ds:0x428018,0x0
  40794d:	mov    eax,ds:0x428018
  407952:	inc    eax
  407953:	mov    ds:0x428018,eax
  407958:	cmp    DWORD PTR ds:0x428018,0x1e
  40795f:	jne    0x407987
  407965:	push   0x6c13
  40796a:	push   0x42c014
  40796f:	push   DWORD PTR [ebp-0x1c]
  407972:	push   0x4b90
  407977:	push   0x1e8a
  40797c:	push   0x4e24
  407981:	call   DWORD PTR ds:0x42dc97
  407987:	cmp    DWORD PTR ds:0x428018,0x14
  40798e:	jb     0x40794d
  407994:	mov    eax,DWORD PTR [ebp-0x4]
  407997:	mov    ecx,DWORD PTR [ebp-0x14]
  40799a:	xor    eax,esi
  40799c:	add    eax,edi
  40799e:	cmp    ecx,eax
  4079a0:	je     0x40c2de
  4079a6:	mov    DWORD PTR ds:0x429008,0x19
  4079b0:	cmp    DWORD PTR ds:0x429008,0x0
  4079b7:	je     0x4079e6
  4079bd:	cmp    DWORD PTR ds:0x429008,0x24
  4079c4:	jne    0x4079d0
  4079ca:	call   DWORD PTR ds:0x42dc9b
  4079d0:	mov    eax,ds:0x429008
  4079d5:	dec    eax
  4079d6:	mov    ds:0x429008,eax
  4079db:	jmp    0x4079b0
  4079e0:	or     ecx,DWORD PTR ds:0x42a00c
  4079e6:	mov    eax,DWORD PTR [ebp-0x14]
  4079e9:	and    DWORD PTR ds:0x428000,0x0
  4079f3:	jmp    0x407a07
  4079f8:	xor    ecx,ecx
  4079fa:	or     ecx,DWORD PTR ds:0x428000
  407a00:	inc    ecx
  407a01:	mov    DWORD PTR ds:0x428000,ecx
  407a07:	cmp    DWORD PTR ds:0x428000,0x14
  407a0e:	jae    0x407a3d
  407a14:	cmp    DWORD PTR ds:0x428000,0x18
  407a1b:	jne    0x407a32
  407a21:	push   DWORD PTR [ebp-0x18]
  407a24:	push   0x42c000
  407a29:	push   DWORD PTR [ebp-0x1c]
  407a2c:	call   DWORD PTR ds:0x42dc9f
  407a32:	jmp    0x4079f8
  407a37:	xor    DWORD PTR ds:0x42a00c,ecx
  407a3d:	mov    eax,DWORD PTR [eax+0x18]
  407a40:	mov    DWORD PTR [ebp-0x2c],eax
  407a43:	mov    ecx,DWORD PTR ds:0x418f4d
  407a49:	mov    eax,ds:0x418f65
  407a4e:	sub    eax,ecx
  407a50:	and    ecx,DWORD PTR [ecx+eax*1]
  407a53:	mov    eax,DWORD PTR [ebp-0x14]
  407a56:	mov    ecx,DWORD PTR [ebp+0x8]
  407a59:	add    ecx,DWORD PTR [eax+0x20]
  407a5c:	mov    DWORD PTR ds:0x428014,0x11
  407a66:	cmp    DWORD PTR ds:0x428014,0x0
  407a6d:	je     0x407ac8
  407a73:	cmp    DWORD PTR ds:0x428014,0x9
  407a7a:	jne    0x407a93
  407a80:	push   0x42d127
  407a85:	push   0x42d111
  407a8a:	push   DWORD PTR [ebp-0x20]
  407a8d:	call   DWORD PTR ds:0x42dca7
  407a93:	cmp    DWORD PTR ds:0x428014,0xa
  407a9a:	jne    0x407aab
  407aa0:	mov    eax,ds:0x428014
  407aa5:	dec    eax
  407aa6:	mov    ds:0x428014,eax
  407aab:	xor    eax,eax
  407aad:	or     eax,DWORD PTR ds:0x428014
  407ab3:	dec    eax
  407ab4:	mov    ds:0x428014,eax
  407ab9:	jmp    0x407a66
  407abe:	and    DWORD PTR ds:0x42c000,0x2b86
  407ac8:	mov    DWORD PTR [ebp-0x34],ecx
  407acb:	xor    DWORD PTR ds:0x42900c,edx
  407ad1:	mov    eax,DWORD PTR [ebp-0x14]
  407ad4:	and    DWORD PTR ds:0x428018,0x0
  407ade:	xor    ecx,ecx
  407ae0:	or     ecx,DWORD PTR ds:0x428018
  407ae6:	inc    ecx
  407ae7:	mov    DWORD PTR ds:0x428018,ecx
  407aed:	cmp    DWORD PTR ds:0x428018,0xa
  407af4:	jne    0x407b05
  407afa:	push   0x42d139
  407aff:	call   DWORD PTR ds:0x42dcab
  407b05:	cmp    DWORD PTR ds:0x428018,0x9
  407b0c:	jne    0x407b1f
  407b12:	mov    ecx,DWORD PTR ds:0x428018
  407b18:	inc    ecx
  407b19:	mov    DWORD PTR ds:0x428018,ecx
  407b1f:	cmp    DWORD PTR ds:0x428018,0x1e
  407b26:	jb     0x407ade
  407b2c:	mov    ecx,DWORD PTR [ebp+0x8]
  407b2f:	add    ecx,DWORD PTR [eax+0x24]
  407b32:	mov    DWORD PTR [ebp-0x3c],ecx
  407b35:	mov    eax,DWORD PTR [ebp-0x14]
  407b38:	mov    ecx,DWORD PTR [ebp+0x8]
  407b3b:	add    ecx,DWORD PTR [eax+0x1c]
  407b3e:	mov    DWORD PTR [ebp-0x14],ecx
  407b41:	jmp    0x409f21
  407b46:	mov    eax,DWORD PTR [ebp-0x34]
  407b49:	mov    ecx,DWORD PTR [ebp+0x8]
  407b4c:	add    ecx,DWORD PTR [eax+ebx*4]
  407b4f:	mov    DWORD PTR [ebp-0x30],ecx
  407b52:	mov    eax,DWORD PTR [ebp-0x4]
  407b55:	jmp    0x409eda
  407b5a:	icebp  
  407b5b:	pop    ebx
  407b5c:	call   DWORD PTR [edx-0x4408697d]
  407b62:	das    
  407b63:	sbb    DWORD PTR [eax],ecx
  407b65:	mov    bl,0xe2
  407b67:	or     DWORD PTR [esi],ecx
  407b69:	jbe    0x407b15
  407b6b:	cmp    al,0x7a
  407b6d:	jp     0x407b71
  407b6f:	pop    edi
  407b70:	jp     0x407bec
  407b72:	pop    ebp
  407b73:	push   esi
  407b74:	mov    ch,BYTE PTR [ecx-0x4b]
  407b77:	stos   BYTE PTR es:[edi],al
  407b78:	imul   eax,DWORD PTR [ebp-0x610897af],0x1f116b45
  407b82:	fwait
  407b83:	or     ebx,DWORD PTR [edx+0x4f]
  407b86:	ret    0xdcc2
  407b89:	or     DWORD PTR [edx+0x4831d066],edi
  407b8f:	jecxz  0x407b6a
  407b91:	leave  
  407b92:	(bad)  
  407b94:	or     DWORD PTR [esi+0x3e],edx
  407b97:	sub    ebx,esp
  407b99:	xchg   esi,eax
  407b9a:	out    0x44,eax
  407b9c:	dec    ebp
  407b9d:	push   ss
  407b9e:	outs   dx,BYTE PTR ds:[esi]
  407b9f:	aaa    
  407ba0:	dec    edi
  407ba1:	aas    
  407ba2:	mov    al,0x63
  407ba4:	arpl   WORD PTR [ebx],ax
  407ba6:	test   ebx,ebx
  407ba8:	js     0x407c03
  407baa:	sti    
  407bab:	push   eax
  407bac:	jmp    0xa0b06285
  407bb1:	pop    ss
  407bb2:	adc    ebx,DWORD PTR [esi]
  407bb4:	mov    edx,0x3f9e0aae
  407bb9:	pop    esp
  407bba:	adc    ecx,esi
  407bbc:	inc    edi
  407bbd:	xor    DWORD PTR [edx-0x5c],0x4ba870f2
  407bc4:	mov    al,0x4b
  407bc6:	outs   dx,DWORD PTR ds:[esi]
  407bc7:	cld    
  407bc8:	lods   eax,DWORD PTR ds:[esi]
  407bc9:	and    esp,DWORD PTR [eax]
  407bcb:	fidivr DWORD PTR [esi]
  407bcd:	jle    0x407bdd
  407bcf:	adc    eax,0x29a96219
  407bd4:	lock popa 
  407bd6:	add    cl,bl
  407bd8:	xor    al,0x2d
  407bda:	ss dec edx
  407bdc:	dec    edi
  407bdd:	mov    al,ds:0xb669ff29
  407be2:	out    0x84,al
  407be4:	mov    cl,0xf6
  407be6:	ins    DWORD PTR es:[edi],dx
  407be7:	and    eax,0x5657e037
  407bec:	push   ebx
  407bed:	fs xor al,0x7d
  407bf0:	sahf   
  407bf1:	mov    esi,gs
  407bf3:	retf   
  407bf4:	shl    DWORD PTR [edi-0x32044865],cl
  407bfa:	jne    0x407b9f
  407bfc:	sub    eax,0x2336d067
  407c01:	dec    edx
  407c02:	mov    ebx,0xe2a9fc9f
  407c07:	mov    WORD PTR [edx-0x4b],ds
  407c0a:	repz cld 
  407c0c:	daa    
  407c0d:	mov    BYTE PTR [ecx-0xe],bl
  407c10:	call   0xd9d4:0xd320549f
  407c17:	adc    cl,BYTE PTR [ecx-0x1ade79a0]
  407c1d:	sbb    DWORD PTR [ecx+0x2f],esp
  407c20:	push   esi
  407c21:	pop    es
  407c22:	lds    eax,FWORD PTR [esi+0x1f089466]
  407c28:	pop    es
  407c29:	(bad)  
  407c2a:	adc    eax,0x5926540d
  407c2f:	push   eax
  407c30:	(bad)  
  407c31:	dec    eax
  407c32:	jno    0x407bf6
  407c34:	inc    ebx
  407c35:	inc    ecx
  407c36:	add    eax,0x79218bf1
  407c3b:	in     eax,dx
  407c3c:	shr    DWORD PTR [edi-0x46],0x25
  407c40:	cs sub al,0x50
  407c43:	xchg   BYTE PTR [edx+0x53],ah
  407c46:	mov    eax,ds:0x8795ebc5
  407c4b:	mov    cl,0x28
  407c4d:	sub    al,0xb6
  407c4f:	cmp    eax,0xaa9853cc
  407c54:	lods   eax,DWORD PTR ds:[esi]
  407c55:	and    DWORD PTR [eax-0x369243e0],0x1ce07c1a
  407c5f:	gs loop 0x407c7a
  407c62:	inc    eax
  407c63:	in     al,0x97
  407c65:	icebp  
  407c66:	(bad)  
  407c67:	push   esi
  407c68:	mov    esi,0x19c2085f
  407c6d:	stos   DWORD PTR es:[edi],eax
  407c6e:	dec    ebp
  407c6f:	pop    edx
  407c70:	pop    ds
  407c71:	inc    ecx
  407c72:	lods   eax,DWORD PTR ds:[esi]
  407c73:	add    al,0x86
  407c75:	ret    
  407c76:	ins    BYTE PTR es:[edi],dx
  407c77:	aas    
  407c78:	mov    esi,cs
  407c7a:	dec    DWORD PTR [esi]
  407c7c:	jge    0x407c0c
  407c7e:	adc    edx,edx
  407c80:	and    esi,DWORD PTR [ecx]
  407c82:	inc    di
  407c84:	mov    bh,0x48
  407c86:	xchg   DWORD PTR [ebx+0x41],esi
  407c89:	push   0xffffff9c
  407c8b:	imul   ecx,DWORD PTR [edi+edi*8],0x9fe0748f
  407c92:	adc    edi,DWORD PTR [esi*4+0x3dca426f]
  407c99:	xchg   BYTE PTR [ecx+0xc4beefc],dl
  407c9f:	adc    DWORD PTR [eax],ecx
  407ca1:	or     edi,DWORD PTR [edi-0x39d71e1e]
  407ca7:	bound  esi,QWORD PTR [ebp+0x7cb1f336]
  407cad:	pop    esi
  407cae:	mul    BYTE PTR [ebx+0x78a4dc80]
  407cb4:	jnp    0x407cf6
  407cb6:	std    
  407cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb8:	dec    ecx
  407cb9:	cdq    
  407cba:	das    
  407cbb:	subps  xmm4,xmm1
  407cbe:	jnp    0x407c52
  407cc0:	into   
  407cc1:	imul   ecx,DWORD PTR [edx],0xffffffeb
  407cc4:	push   ecx
  407cc5:	outs   dx,BYTE PTR ds:[esi]
  407cc6:	cmp    cl,BYTE PTR [ecx-0x6c]
  407cc9:	cld    
  407cca:	and    ecx,DWORD PTR [edx+0x42]
  407ccd:	jmp    0x407d34
  407ccf:	test   eax,0x1e595fe7
  407cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd5:	je     0x407c80
  407cd7:	mov    edi,0x74b12a34
  407cdc:	xor    al,0x33
  407cde:	sbb    bh,BYTE PTR es:0x60a22e6e
  407ce5:	pop    esp
  407ce6:	fadd   st,st(6)
  407ce8:	ret    
  407ce9:	je     0x407caf
  407ceb:	lock and eax,0x25bb2f82
  407cf1:	inc    eax
  407cf2:	mov    cl,0xb9
  407cf4:	inc    eax
  407cf5:	aas    
  407cf6:	push   esp
  407cf7:	or     esp,DWORD PTR [esp+eax*1-0x7bf41ead]
  407cfe:	xchg   ebp,eax
  407cff:	icebp  
  407d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d01:	pop    ebp
  407d02:	test   BYTE PTR [esp+eax*2],cl
  407d05:	dec    edi
  407d06:	add    BYTE PTR [edx-0x7],ch
  407d09:	(bad)  
  407d0a:	ret    0x2ebc
  407d0d:	int3   
  407d0e:	daa    
  407d0f:	fisub  DWORD PTR [edx-0x48e81dad]
  407d15:	pop    ecx
  407d16:	pop    ebx
  407d17:	push   ecx
  407d18:	jl     0x407d27
  407d1a:	call   0x13bf1fec
  407d1f:	leave  
  407d20:	xchg   BYTE PTR [edi-0x7c],cl
  407d23:	int3   
  407d24:	in     eax,0x12
  407d26:	mov    eax,0x93a1387f
  407d2b:	pop    ebx
  407d2c:	push   ds
  407d2d:	mov    dl,0x21
  407d2f:	fs pop edx
  407d31:	adc    eax,0xb86c25ee
  407d36:	das    
  407d37:	cmp    BYTE PTR [ebx-0x444da360],dh
  407d3d:	sahf   
  407d3e:	push   ss
  407d3f:	fwait
  407d40:	jno    0x407d4b
  407d42:	out    0x4d,eax
  407d44:	sub    cl,BYTE PTR ds:0xa0a75a6f
  407d4a:	out    dx,eax
  407d4b:	mov    edi,0xf5ca5554
  407d50:	jmp    0x407d13
  407d52:	fisubr DWORD PTR gs:[eax-0x4a]
  407d56:	push   ebp
  407d57:	and    al,0x3b
  407d59:	inc    ebp
  407d5a:	inc    ebp
  407d5b:	mov    eax,ds:0x151679f2
  407d60:	jbe    0x407d12
  407d62:	rcr    DWORD PTR [esi],0xfa
  407d65:	popf   
  407d66:	jg     0x407d83
  407d68:	clc    
  407d69:	ror    ah,cl
  407d6b:	and    al,0x9a
  407d6d:	inc    edx
  407d6e:	jne    0x407d5e
  407d70:	xchg   ebx,eax
  407d71:	enter  0x7096,0xde
  407d75:	ins    BYTE PTR es:[edi],dx
  407d76:	pop    eax
  407d77:	xchg   esp,eax
  407d78:	dec    ebp
  407d79:	(bad)  
  407d7a:	mov    cl,0x57
  407d7c:	cmc    
  407d7d:	jbe    0x407d36
  407d7f:	sbb    bl,BYTE PTR [ebp-0x7f]
  407d82:	jmp    0xdac1bd3e
  407d87:	inc    esi
  407d88:	arpl   WORD PTR [esi],cx
  407d8a:	dec    ebx
  407d8b:	repz sbb BYTE PTR [ecx+0x73],0x62
  407d90:	dec    edx
  407d91:	push   ds
  407d92:	sub    al,BYTE PTR [edx+0x2965aae]
  407d98:	(bad)  
  407d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d9b:	cdq    
  407d9c:	ins    DWORD PTR es:[edi],dx
  407d9d:	bound  eax,QWORD PTR [ebp+0x70f63b44]
  407da3:	jbe    0x407df4
  407da5:	je     0x407dd6
  407da7:	dec    esp
  407da8:	sub    DWORD PTR [ebx-0x11],edx
  407dab:	xor    BYTE PTR [esi+0x4234a9d9],0xb9
  407db2:	hlt    
  407db3:	jbe    0x407dfa
  407db5:	(bad)  
  407db6:	loop   0x407d97
  407db8:	pop    ebx
  407db9:	(bad)  
  407dba:	fist   DWORD PTR [edx]
  407dbc:	add    BYTE PTR [ebx],ah
  407dbe:	test   BYTE PTR [ebx+0x1021ee86],cl
  407dc4:	ret    
  407dc5:	inc    ecx
  407dc6:	or     esi,DWORD PTR [eax+0x17da351]
  407dcc:	sub    eax,0xb9327630
  407dd1:	add    eax,0xc6e57df1
  407dd6:	xor    BYTE PTR [ebp+0x182e3157],cl
  407ddc:	inc    esi
  407ddd:	cmc    
  407dde:	jge    0x407e40
  407de0:	dec    BYTE PTR fs:[esi-0x2823a4b2]
  407de7:	inc    edx
  407de8:	(bad)  
  407de9:	scas   al,BYTE PTR es:[edi]
  407dea:	popf   
  407deb:	sar    DWORD PTR [edi+0x78],0xf
  407def:	adc    eax,DWORD PTR [esi+edi*1-0x6d]
  407df3:	call   0xd597:0x99e1c3b7
  407dfa:	sub    edx,DWORD PTR [edi-0x3]
  407dfd:	or     dl,BYTE PTR [edi]
  407dff:	xchg   edi,eax
  407e00:	inc    esp
  407e01:	fdiv   st(7),st
  407e03:	hlt    
  407e04:	add    bh,BYTE PTR [eax]
  407e06:	(bad)  
  407e07:	imul   esi
  407e09:	ror    bl,cl
  407e0b:	pop    edx
  407e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e0d:	jmp    0x407e15
  407e0f:	iret   
  407e10:	(bad)  
  407e11:	dec    ecx
  407e12:	mov    cl,0xbb
  407e14:	xchg   edi,eax
  407e15:	pushf  
  407e16:	out    0xeb,al
  407e18:	and    BYTE PTR [edx],bh
  407e1a:	or     ebp,eax
  407e1c:	cwde   
  407e1d:	xor    al,0x4f
  407e1f:	pop    ebx
  407e20:	gs repz mov ebp,0xecc76a24
  407e28:	arpl   WORD PTR [edi],bx
  407e2a:	xchg   esp,eax
  407e2b:	ret    0x623d
  407e2e:	out    dx,al
  407e2f:	mov    cl,0x39
  407e31:	outs   dx,BYTE PTR ds:[esi]
  407e32:	lods   eax,DWORD PTR ds:[esi]
  407e33:	mov    esi,0xb5ac7b5d
  407e38:	push   ds
  407e39:	dec    ebp
  407e3a:	imul   edx,eax,0x7ae02ada
  407e40:	lock xchg ebx,eax
  407e42:	xor    BYTE PTR [ebx+0x46],ch
  407e45:	in     al,dx
  407e46:	test   al,0x3c
  407e48:	pop    esi
  407e49:	pop    ecx
  407e4a:	in     al,dx
  407e4b:	out    0x15,eax
  407e4d:	xchg   DWORD PTR [ebp+0x24567bcf],ebp
  407e53:	cdq    
  407e54:	mov    eax,0x2de72cb0
  407e59:	in     eax,dx
  407e5a:	imul   eax,DWORD PTR [eax],0xe883fe9c
  407e60:	push   edx
  407e61:	xor    eax,DWORD PTR [esi+ebx*4-0x7ebfb9db]
  407e68:	aaa    
  407e69:	inc    edx
  407e6a:	or     BYTE PTR [edi-0x3c],dl
  407e6d:	mov    ds:0xd7f85f0a,eax
  407e72:	test   BYTE PTR [ebp+ebx*4+0x7b],bh
  407e76:	ror    BYTE PTR ds:0x834b5e97,0xd3
  407e7d:	cwde   
  407e7e:	push   esp
  407e7f:	adc    al,0x61
  407e81:	add    eax,0x158bdad0
  407e86:	out    0x64,eax
  407e88:	test   al,0x45
  407e8a:	sub    DWORD PTR [ecx+ebp*2-0x1032d81b],ecx
  407e91:	mov    esi,DWORD PTR [eax+0x2f]
  407e94:	mov    cs,ebx
  407e96:	pop    DWORD PTR [eax-0xc]
  407e99:	movups xmm6,XMMWORD PTR [esi+0x2fb9593]
  407ea0:	jle    0x407e48
  407ea2:	jae    0x407e7d
  407ea4:	push   esi
  407ea5:	clc    
  407ea6:	push   ecx
  407ea7:	pop    ebx
  407ea8:	loopne 0x407eea
  407eaa:	shl    BYTE PTR [ebx-0x2490f777],1
  407eb0:	pop    ds
  407eb1:	popa   
  407eb2:	sub    ch,cl
  407eb4:	mov    DWORD PTR [eax],esi
  407eb6:	or     ah,BYTE PTR [eax+0x6d7a762b]
  407ebc:	pop    esp
  407ebd:	dec    esi
  407ebe:	or     eax,0xdad608fc
  407ec3:	mov    dh,0x71
  407ec5:	mov    ebp,0xd51e911c
  407eca:	sar    DWORD PTR [edi],cl
  407ecc:	dec    eax
  407ecd:	and    ecx,esi
  407ecf:	rcr    BYTE PTR [eax+0x2968ff98],cl
  407ed5:	or     al,0xb5
  407ed7:	push   esi
  407ed8:	sub    BYTE PTR [ebx+0x4dd572b9],bl
  407ede:	cmp    eax,0x2a1d817a
  407ee3:	or     eax,0x84864eab
  407ee8:	jae    0x407e79
  407eea:	leave  
  407eeb:	xchg   edx,edi
  407eed:	imul   esp,DWORD PTR [eax],0x73bf843a
  407ef3:	cmp    dh,BYTE PTR [edi-0x430ab173]
  407ef9:	pop    edi
  407efa:	js     0x407f47
  407efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407efd:	sar    BYTE PTR [edx+0x79e6d38c],1
  407f03:	inc    ebp
  407f04:	inc    edx
  407f05:	rcr    BYTE PTR ds:0x27512342,cl
  407f0b:	cld    
  407f0c:	out    0xc6,eax
  407f0e:	stos   DWORD PTR es:[edi],eax
  407f0f:	int    0x19
  407f11:	rol    BYTE PTR [esp+edx*1+0x2f1f67b2],1
  407f18:	jmp    0x31c4:0xe59a6426
  407f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f20:	and    eax,0xe46fd064
  407f25:	xchg   edx,eax
  407f26:	int    0x9e
  407f28:	inc    eax
  407f29:	sub    edi,esp
  407f2b:	dec    esp
  407f2c:	in     eax,0xa1
  407f2e:	dec    eax
  407f2f:	xor    DWORD PTR [ecx-0x7d],ebx
  407f32:	jbe    0x407f23
  407f34:	add    edi,ebx
  407f36:	sti    
  407f37:	push   0x419a0e15
  407f3c:	loopne 0x407f8c
  407f3e:	mov    bl,0xef
  407f40:	(bad)  
  407f42:	jg     0x407ede
  407f44:	sub    DWORD PTR [edi+0x75],ebx
  407f47:	aaa    
  407f48:	(bad)  
  407f49:	sub    dh,al
  407f4b:	mov    ?,eax
  407f4d:	outs   dx,DWORD PTR ds:[esi]
  407f4e:	cli    
  407f4f:	push   edx
  407f50:	bound  ebx,QWORD PTR [esi-0x11]
  407f53:	adc    DWORD PTR [esi+0x52c2dea3],esi
  407f59:	cwde   
  407f5a:	fmul   DWORD PTR [edi]
  407f5c:	hlt    
  407f5d:	inc    ebp
  407f5e:	int    0x85
  407f60:	push   edi
  407f61:	scas   al,BYTE PTR es:[edi]
  407f62:	xor    al,0x59
  407f64:	in     al,0x1c
  407f66:	mov    al,fs:0x6558c901
  407f6c:	push   edi
  407f6d:	das    
  407f6e:	ja     0x407fcc
  407f70:	or     DWORD PTR cs:[ecx],ecx
  407f73:	and    al,0xa0
  407f75:	inc    ebx
  407f76:	out    0xb1,eax
  407f78:	xlat   BYTE PTR ds:[ebx]
  407f79:	mov    eax,0x3e71c55d
  407f7e:	mov    ch,0x52
  407f80:	popa   
  407f81:	mov    WORD PTR [ebp+ecx*1+0x33],gs
  407f85:	sahf   
  407f86:	loop   0x407f89
  407f88:	pop    esp
  407f89:	gs jae 0x407fe0
  407f8c:	jnp    0x407f6a
  407f8e:	mov    esi,0x18652bc
  407f93:	(bad)  
  407f94:	cmp    eax,DWORD PTR [ebx+ebp*8-0x3a]
  407f98:	out    0xef,eax
  407f9a:	sub    ebx,DWORD PTR [edx+0x76f91831]
  407fa0:	mov    ebx,0x7db31461
  407fa5:	(bad)  
  407fa6:	ret    
  407fa7:	dec    esp
  407fa8:	lods   eax,DWORD PTR ds:[esi]
  407fa9:	dec    edi
  407faa:	jecxz  0x407f61
  407fac:	cmp    DWORD PTR [esi-0xf4da55],esp
  407fb2:	or     ecx,0xffffffe6
  407fb5:	cwde   
  407fb6:	mov    dh,0x3f
  407fb8:	cli    
  407fb9:	imul   eax,edx,0xbae54ca
  407fbf:	pop    eax
  407fc0:	stc    
  407fc1:	jecxz  0x407f9e
  407fc3:	push   ss
  407fc4:	sub    ebp,DWORD PTR [ebp+0x4a]
  407fc7:	mov    ds:0x81754de6,eax
  407fcc:	dec    ecx
  407fcd:	pop    ds
  407fce:	mov    dh,0xc1
  407fd0:	sub    eax,0xc25c4696
  407fd5:	and    dh,dl
  407fd7:	push   cs
  407fd8:	lods   al,BYTE PTR fs:[esi]
  407fda:	aaa    
  407fdb:	sbb    DWORD PTR [ecx],edi
  407fdd:	adc    eax,0x339887b9
  407fe2:	inc    esp
  407fe3:	(bad)  
  407fe4:	(bad)  
  407fe5:	adc    al,0x2f
  407fe7:	in     al,0xad
  407fe9:	inc    eax
  407fea:	xchg   DWORD PTR [ecx+ebp*2],esi
  407fed:	xchg   DWORD PTR [edx+eiz*1-0x4c],ebp
  407ff1:	sub    al,0x6c
  407ff3:	push   edi
  407ff4:	jecxz  0x408042
  407ff6:	lea    ebx,[eax+0x655c289c]
  407ffc:	cdq    
  407ffd:	mov    edi,0x6691a943
  408002:	jns    0x407fc5
  408004:	fcmovnbe st,st(1)
  408006:	lods   al,BYTE PTR ds:[esi]
  408007:	dec    esi
  408008:	nop
  408009:	adc    al,0x1e
  40800b:	mov    DWORD PTR [ebx],0xea5fa4f5
  408011:	lock mov BYTE PTR [eax+0x6ca3ae75],al
  408018:	adc    edx,edi
  40801a:	adc    BYTE PTR [esi],bh
  40801c:	mov    ch,0x48
  40801e:	adc    ebx,edi
  408020:	popf   
  408021:	icebp  
  408022:	sbb    al,0xbd
  408024:	inc    ebp
  408025:	call   0x5ea:0x9d8065a4
  40802c:	mov    eax,0xdeac128d
  408031:	jns    0x40807c
  408033:	out    dx,al
  408034:	jle    0x408084
  408036:	or     edx,ebx
  408038:	sub    dh,BYTE PTR [eax-0x3b]
  40803b:	lods   eax,DWORD PTR ds:[esi]
  40803c:	bound  ecx,QWORD PTR [ebp-0xc]
  40803f:	addr16 cmp eax,0xf72649c5
  408045:	in     eax,0x29
  408047:	or     dl,BYTE PTR [edi-0x1dd6b3c3]
  40804d:	cli    
  40804e:	adc    BYTE PTR [edx-0x4a],bh
  408051:	add    BYTE PTR [esi-0x6],al
  408054:	lahf   
  408055:	ror    BYTE PTR [ebp-0x524371f1],1
  40805b:	mov    dh,0x26
  40805d:	xor    al,0x97
  40805f:	sub    eax,0x6ede69c2
  408064:	mov    edx,esp
  408066:	call   0x2502:0xd7a0d947
  40806d:	fsub   DWORD PTR [edx-0x10fbae44]
  408073:	xor    dh,BYTE PTR [ecx+ecx*2+0x72]
  408077:	out    dx,eax
  408078:	or     bl,BYTE PTR [eax-0x458db913]
  40807e:	scas   al,BYTE PTR es:[edi]
  40807f:	bound  edx,QWORD PTR [eax-0x4e]
  408082:	imul   esp,DWORD PTR [eax+0x56e4c7a2],0x2c76b117
  40808c:	clc    
  40808d:	pop    esp
  40808e:	rcl    BYTE PTR [ebx+eiz*4+0x72],cl
  408092:	jecxz  0x4080aa
  408094:	dec    eax
  408095:	xor    eax,0x66346b53
  40809a:	jno    0x4080d9
  40809c:	std    
  40809d:	xor    esp,edx
  40809f:	jg     0x408089
  4080a1:	mov    BYTE PTR [ebp+0x6d0fe491],cl
  4080a7:	xchg   edi,eax
  4080a8:	jp     0x4080b0
  4080aa:	sub    eax,0xc0396215
  4080af:	mov    ebx,0xcd1cf190
  4080b4:	fsub   DWORD PTR ss:[esi-0x54]
  4080b8:	(bad)  
  4080ba:	data16 mov ch,0xa5
  4080bd:	adc    eax,0x502842ad
  4080c2:	push   ds
  4080c3:	xchg   ecx,eax
  4080c4:	or     ebp,DWORD PTR [ebx+eax*4]
  4080c7:	jnp    0x4080db
  4080c9:	push   ss
  4080ca:	sbb    al,0xca
  4080cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080cd:	mov    dl,0xd2
  4080cf:	fdivr  DWORD PTR [edi-0x4aea7ab9]
  4080d5:	cmp    eax,0x9c4ba0c9
  4080da:	inc    edi
  4080db:	ficom  WORD PTR [ebx]
  4080dd:	mov    DWORD PTR [ecx-0x52a67c5],ebx
  4080e3:	ret    0x8855
  4080e6:	and    al,0xee
  4080e8:	xchg   esp,eax
  4080e9:	sahf   
  4080ea:	or     DWORD PTR [esp+esi*2],ebx
  4080ed:	mov    WORD PTR [ecx-0x26fa924e],?
  4080f3:	paddsb mm0,QWORD PTR [eax+0x63]
  4080f7:	outs   dx,DWORD PTR ds:[esi]
  4080f8:	add    BYTE PTR [esi],0xcb
  4080fb:	sti    
  4080fc:	mov    eax,0xee3b3a27
  408101:	xchg   ebp,eax
  408102:	mov    ebx,0x1b55817b
  408107:	xchg   bl,al
  408109:	or     dh,bh
  40810b:	in     al,dx
  40810c:	icebp  
  40810d:	mov    cl,0x6d
  40810f:	fs add al,0xe9
  408112:	xor    al,0xc3
  408114:	ficom  WORD PTR [esi]
  408116:	lock clc 
  408118:	sbb    edi,DWORD PTR ds:0x58579ac8
  40811e:	dec    ecx
  40811f:	ret    0x7c83
  408122:	stc    
  408123:	and    eax,0x5de56776
  408128:	mov    eax,0x58371354
  40812d:	clc    
  40812e:	xchg   BYTE PTR [edx+ebp*2+0x3a],dh
  408132:	or     ch,BYTE PTR [edx+0x5d]
  408135:	dec    ebx
  408136:	mov    eax,ds:0xfe77ebd6
  40813b:	pushf  
  40813c:	mov    ds:0xd5c157f8,eax
  408141:	jnp    0x40817a
  408143:	into   
  408144:	into   
  408145:	mov    edi,0x9f2ab214
  40814a:	cmp    BYTE PTR [esi+0x43],0xa
  40814e:	stos   DWORD PTR es:[edi],eax
  40814f:	sub    DWORD PTR [edi],edx
  408151:	mov    ebp,0x60b33cfa
  408156:	xchg   ebp,eax
  408157:	not    DWORD PTR [eax]
  408159:	cwde   
  40815a:	sub    DWORD PTR [esi+0x4805ef85],esp
  408160:	loope  0x4080fa
  408162:	hlt    
  408163:	dec    ecx
  408164:	enter  0x1343,0xeb
  408168:	push   cs
  408169:	sub    al,0xec
  40816b:	sub    esp,DWORD PTR [ebx]
  40816d:	aam    0x74
  40816f:	aaa    
  408170:	out    dx,al
  408171:	fs ins DWORD PTR es:[edi],dx
  408173:	mov    es,WORD PTR [ebx-0x53]
  408176:	mov    bl,0x59
  408178:	mov    ecx,ebp
  40817a:	std    
  40817b:	adc    al,0xa5
  40817d:	dec    edi
  40817e:	inc    ebx
  40817f:	fcmovnu st,st(5)
  408181:	adc    dl,0xc8
  408184:	pop    edi
  408185:	stos   DWORD PTR es:[edi],eax
  408186:	cmp    bh,dl
  408188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408189:	mov    edx,0x55baf780
  40818e:	cmp    al,0x28
  408190:	mov    ecx,0xf6e7fcb5
  408195:	mov    ecx,eax
  408197:	xchg   ecx,eax
  408198:	(bad)  [ebp-0x23584c8a]
  40819e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819f:	xlat   BYTE PTR ds:[ebx]
  4081a0:	ficom  DWORD PTR [edi]
  4081a2:	mov    ebp,DWORD PTR [esi+0x3ca70448]
  4081a8:	enter  0x4786,0x26
  4081ac:	fcomp  DWORD PTR [edx]
  4081ae:	ins    DWORD PTR es:[edi],dx
  4081af:	mov    bl,0x22
  4081b1:	in     al,dx
  4081b2:	push   cs
  4081b3:	inc    eax
  4081b4:	data16 stc 
  4081b6:	xor    ebp,ecx
  4081b8:	fstp   TBYTE PTR [ecx-0x6c]
  4081bb:	cmp    ch,ch
  4081bd:	icebp  
  4081be:	mov    bh,bl
  4081c0:	mov    bl,0xc4
  4081c2:	mov    ebx,0xf332dfba
  4081c7:	cmp    dl,al
  4081c9:	xchg   ecx,eax
  4081ca:	inc    ebp
  4081cb:	mov    ds:0x958ea2a4,al
  4081d0:	pop    eax
  4081d1:	mov    dl,0x71
  4081d3:	xor    esi,eax
  4081d5:	mov    edx,0x2e0cf00e
  4081da:	fst    st(0)
  4081dc:	mov    al,ds:0xb59ff54a
  4081e1:	sbb    esi,DWORD PTR [ebx+0x26]
  4081e4:	cmp    DWORD PTR [ebp-0x6d],ebp
  4081e7:	arpl   WORD PTR [esp+edi*8-0x72],si
  4081eb:	xor    eax,esp
  4081ed:	rcl    BYTE PTR [ecx+edi*8+0x7457275c],1
  4081f4:	cmp    esp,DWORD PTR [edi+0x2fcb97e0]
  4081fa:	inc    edi
  4081fb:	or     esi,0x5b
  4081fe:	sti    
  4081ff:	mov    bl,cl
  408201:	stos   BYTE PTR es:[edi],al
  408202:	adc    ecx,DWORD PTR [ecx-0x46]
  408205:	fnstenv [esi-0x46b235e5]
  40820b:	inc    edi
  40820c:	mov    bl,0x59
  40820e:	add    BYTE PTR [ebx+0x6f],bh
  408211:	and    edi,DWORD PTR [edx]
  408213:	jmp    0xe3f541ca
  408218:	in     al,dx
  408219:	or     bh,0xec
  40821c:	loopne 0x40822d
  40821e:	mov    ds:0x3a227fc5,eax
  408223:	and    edi,DWORD PTR [ebp+0xdbddf9e]
  408229:	aam    0x1c
  40822b:	adc    dl,bh
  40822d:	xor    DWORD PTR [edx],edi
  40822f:	jns    0x408238
  408231:	inc    ebp
  408232:	jle    0x408229
  408234:	add    BYTE PTR [ebp-0x2a],dl
  408237:	sbb    BYTE PTR [ebx-0x4d],cl
  40823a:	cli    
  40823b:	pop    ss
  40823c:	cld    
  40823d:	mov    ds:0x88e6ffba,al
  408242:	inc    ecx
  408243:	add    esi,DWORD PTR [ebx]
  408245:	xchg   DWORD PTR [ecx],esp
  408247:	sub    al,BYTE PTR [eax+0x34a61206]
  40824d:	mov    edx,0xa8978a8e
  408252:	push   ebx
  408253:	ja     0x40827d
  408255:	cld    
  408256:	ficomp WORD PTR ss:[edx+0x39]
  40825a:	int    0x49
  40825c:	inc    esp
  40825d:	(bad)  
  40825e:	jo     0x408209
  408260:	cld    
  408261:	sub    ah,BYTE PTR [ebx+0x7d]
  408264:	pop    es
  408265:	sub    DWORD PTR [ebp-0x54],edi
  408268:	inc    ebx
  408269:	aaa    
  40826a:	rcl    BYTE PTR [edx+0x7fa45731],0x9e
  408271:	test   al,0x3e
  408273:	pop    esi
  408274:	inc    eax
  408275:	sub    DWORD PTR [ebx],ebx
  408277:	mov    WORD PTR ds:0x39f50f2d,fs
  40827d:	mov    bh,0x70
  40827f:	neg    dl
  408281:	sub    DWORD PTR [ecx-0x73],0xa92e8791
  408288:	inc    edx
  408289:	nop
  40828a:	int3   
  40828b:	adc    ecx,ecx
  40828d:	div    BYTE PTR [esi-0x3b]
  408290:	scas   eax,DWORD PTR es:[edi]
  408291:	fisub  WORD PTR [esi]
  408293:	inc    edx
  408294:	in     al,dx
  408295:	cli    
  408296:	cmp    DWORD PTR [ebx+ecx*4-0x1a],esp
  40829a:	repnz imul eax,DWORD PTR [edx-0x6cdd7fef],0x5f593447
  4082a5:	das    
  4082a6:	sbb    eax,DWORD PTR [esi]
  4082a8:	js     0x4082b1
  4082aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082ab:	(bad)  
  4082ac:	xlat   BYTE PTR ds:[ebx]
  4082ad:	sub    eax,0xc111c227
  4082b2:	scas   al,BYTE PTR es:[edi]
  4082b3:	push   ebx
  4082b4:	cmp    BYTE PTR [eax],dl
  4082b6:	icebp  
  4082b7:	outs   dx,DWORD PTR ds:[esi]
  4082b8:	dec    esp
  4082b9:	clc    
  4082ba:	lock fisub DWORD PTR [ecx-0x2dfb8721]
  4082c1:	shl    BYTE PTR ds:0xc53c8c0b,0xb6
  4082c8:	dec    eax
  4082c9:	dec    eax
  4082ca:	shr    BYTE PTR [esp+ebx*4],cl
  4082cd:	cmp    DWORD PTR [edx-0x1575e069],eax
  4082d3:	jle    0x408345
  4082d5:	pop    esp
  4082d6:	jmp    0x1db5:0xcc02e19c
  4082dd:	pusha  
  4082de:	add    DWORD PTR fs:[ebx],esp
  4082e1:	cmp    ebx,ecx
  4082e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e4:	ret    0x77c8
  4082e7:	inc    ebp
  4082e8:	xchg   ebx,eax
  4082e9:	cmc    
  4082ea:	(bad)  
  4082eb:	adc    al,0xaa
  4082ed:	fsubr  QWORD PTR [ebx+0x16]
  4082f0:	js     0x40834f
  4082f2:	inc    ebp
  4082f3:	adc    BYTE PTR [edx],ch
  4082f5:	(bad)  
  4082f6:	sub    DWORD PTR [ebp-0x39],0xdc24079b
  4082fd:	mov    esp,0x6b99f35
  408302:	add    edx,ebp
  408304:	mov    ds:0xec6e41ad,al
  408309:	je     0x4082b6
  40830b:	lahf   
  40830c:	xor    esi,DWORD PTR [edx+ebx*1+0x79]
  408310:	and    bl,BYTE PTR [ebx-0x410b84b4]
  408316:	jge    0x408337
  408318:	pop    esp
  408319:	inc    esp
  40831a:	pop    edx
  40831b:	loop   0x40834a
  40831d:	xchg   BYTE PTR [esi-0x2],ah
  408320:	cmp    al,0xb8
  408322:	sbb    ebp,edi
  408324:	push   ebx
  408325:	shl    BYTE PTR [eax+0x69],1
  408328:	jg     0x408391
  40832a:	inc    ebx
  40832b:	add    al,0xd
  40832d:	icebp  
  40832e:	cmp    eax,0x16fecc67
  408333:	les    edx,FWORD PTR [eax-0x7413bcdd]
  408339:	fnstcw WORD PTR [edx+0xf]
  40833c:	jmp    0x4082e8
  40833e:	push   0x86a8fd17
  408343:	mov    ds,edi
  408345:	mov    dl,0x72
  408347:	sti    
  408348:	pop    edi
  40834a:	js     0x4083c0
  40834c:	adc    dh,BYTE PTR [edi]
  40834e:	push   ecx
  40834f:	or     eax,0xf2ad4c34
  408354:	xchg   esi,eax
  408355:	or     BYTE PTR [edi-0x57],cl
  408358:	dec    edi
  408359:	cli    
  40835a:	cli    
  40835b:	or     eax,0x94e2e02d
  408360:	cmp    ebx,ebx
  408362:	add    esi,ebp
  408364:	inc    eax
  408365:	stc    
  408366:	inc    ebx
  408367:	sbb    ebx,eax
  408369:	xchg   ebp,eax
  40836a:	std    
  40836b:	fmul   DWORD PTR ds:0xb0c0c09f
  408371:	xchg   esp,eax
  408372:	fsub   st(1),st
  408374:	inc    ecx
  408375:	out    dx,al
  408376:	ret    
  408377:	pop    es
  408378:	xchg   BYTE PTR [esp+edx*2+0x4a],al
  40837c:	jl     0x4083ce
  40837e:	jg     0x40836f
  408380:	xchg   ecx,ebp
  408382:	push   eax
  408383:	inc    edx
  408384:	pop    ebx
  408385:	lahf   
  408386:	adc    dh,bl
  408388:	or     dh,ah
  40838a:	clc    
  40838b:	inc    ecx
  40838c:	push   ss
  40838d:	rol    BYTE PTR [esi+0x446bc5b0],cl
  408393:	test   eax,0x5599cfa3
  408398:	out    0xa1,al
  40839a:	xchg   DWORD PTR [edi-0x12],edi
  40839d:	mov    ds:0xe86f2e8a,al
  4083a2:	pop    ebx
  4083a3:	mov    esp,0x3b6f9c62
  4083a8:	call   0x7820bb54
  4083ad:	ficom  WORD PTR [ecx]
  4083af:	or     BYTE PTR [edx+0x706a1440],dh
  4083b5:	imul   edx,edx,0xffffffa4
  4083b8:	cwde   
  4083b9:	pop    esp
  4083ba:	sti    
  4083bb:	xor    ch,BYTE PTR [esi+0x27]
  4083be:	xor    edx,DWORD PTR [edi]
  4083c0:	jp     0x408368
  4083c2:	cmp    esp,DWORD PTR cs:[ecx+0x5c]
  4083c6:	clc    
  4083c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c8:	xchg   edi,eax
  4083c9:	push   0xffffffc8
  4083cb:	jae    0x40842c
  4083cd:	push   es
  4083ce:	xchg   ebx,eax
  4083cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d0:	imul   esi,eax,0x72
  4083d3:	cmp    eax,0x5f5ce525
  4083d8:	jle    0x4083f0
  4083da:	mov    esp,0xd130dfd2
  4083df:	outs   dx,DWORD PTR ds:[esi]
  4083e0:	fdiv   DWORD PTR ds:0xeb2ab575
  4083e6:	xor    DWORD PTR [edx-0x41],0xa43bc88c
  4083ed:	pop    ebx
  4083ee:	sbb    DWORD PTR [ecx-0x22b3512],0x8b404b8
  4083f8:	(bad)  [eax]
  4083fa:	popf   
  4083fb:	pcmpeqw mm0,QWORD PTR [eax+eax*8+0x57394824]
  408403:	sbb    BYTE PTR ds:0x961d,ch
  408408:	stos   DWORD PTR es:[edi],eax
  408409:	es aaa 
  40840b:	jl     0x408464
  40840d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840e:	mov    eax,0xe1de7e84
  408413:	mov    ch,0x3b
  408415:	pop    ds
  408416:	je     0x408414
  408418:	jmp    0x37d7:0xdc5ab9a4
  40841f:	rcr    DWORD PTR [ebp+0x2065b3c9],1
  408425:	xor    BYTE PTR [ebx],cl
  408427:	(bad)  
  40842a:	mov    dh,0x8c
  40842c:	in     al,dx
  40842d:	mov    ds:0xaf18a3ed,eax
  408432:	xchg   ecx,eax
  408433:	sub    al,0xcc
  408435:	push   ebp
  408436:	add    eax,0x39b0bc99
  40843b:	shl    DWORD PTR [edi+0x50],cl
  40843e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843f:	mov    esp,0xd0dbca6b
  408444:	push   esi
  408445:	scas   al,BYTE PTR es:[edi]
  408446:	ds imul eax,ebp,0xfd9d46f9
  40844d:	mov    edx,0xcc008ebd
  408452:	call   0xa9856252
  408457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408458:	mov    bh,0x4
  40845a:	sub    al,0x1a
  40845c:	ins    DWORD PTR es:[edi],dx
  40845d:	inc    edi
  40845e:	jnp    0x4083f6
  408460:	shl    DWORD PTR [eax+ecx*2-0x17cbd272],1
  408467:	mov    ds:0x4e350cd1,eax
  40846c:	shl    BYTE PTR [ecx-0x1e4de88e],0xb9
  408473:	nop
  408474:	ror    BYTE PTR [ecx+0x4d],cl
  408477:	(bad)  
  408478:	pop    esi
  408479:	ror    BYTE PTR [eax],0x28
  40847c:	xchg   ebx,eax
  40847d:	xchg   ebp,eax
  40847e:	ins    DWORD PTR es:[edi],dx
  40847f:	lods   al,BYTE PTR ds:[esi]
  408480:	push   ss
  408481:	mov    ebx,0xd0d47d7b
  408486:	cdq    
  408487:	add    DWORD PTR [eax-0x16976e08],ebx
  40848d:	mov    dl,0x79
  40848f:	mov    edi,?
  408491:	pop    esi
  408492:	ss cmp eax,0x1370e15c
  408498:	(bad)  
  408499:	call   0x924b1be5
  40849e:	in     al,dx
  40849f:	and    al,0xcf
  4084a1:	add    bh,bl
  4084a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a4:	add    al,0x5e
  4084a6:	add    ecx,DWORD PTR [esi*8-0x6f004ac6]
  4084ad:	fwait
  4084ae:	dec    ebx
  4084af:	xchg   edx,eax
  4084b0:	retf   
  4084b1:	jmp    0x4084e2
  4084b3:	push   esi
  4084b4:	cld    
  4084b5:	je     0x408451
  4084b7:	sub    eax,0x5922531
  4084bc:	inc    esi
  4084bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084be:	scas   al,BYTE PTR es:[edi]
  4084bf:	inc    edx
  4084c0:	push   eax
  4084c1:	dec    ebp
  4084c2:	imul   esp,DWORD PTR [edx],0x4e6f8c69
  4084c8:	ficomp WORD PTR [edi]
  4084ca:	and    eax,0x31b02756
  4084cf:	lds    ebp,FWORD PTR [edi]
  4084d1:	push   ebx
  4084d2:	loope  0x408532
  4084d4:	outs   dx,BYTE PTR ds:[esi]
  4084d5:	rol    DWORD PTR [ecx+0x19],1
  4084d8:	sub    edi,DWORD PTR [ebx]
  4084da:	hlt    
  4084db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084dc:	push   eax
  4084dd:	mov    ds:0x55bbe6f9,eax
  4084e2:	gs dec esi
  4084e4:	xchg   BYTE PTR [ebx],dh
  4084e6:	adc    eax,0x46f91385
  4084eb:	mov    WORD PTR [esi],?
  4084ed:	dec    eax
  4084ee:	ret    
  4084ef:	mov    bl,0xb0
  4084f1:	sar    BYTE PTR [eax-0x80],0xe6
  4084f5:	shr    DWORD PTR [eax-0x2c],1
  4084f8:	or     dl,BYTE PTR [edx+0x3c]
  4084fb:	push   ss
  4084fc:	push   edx
  4084fd:	mov    dh,0x86
  4084ff:	in     eax,0x9
  408501:	push   ebp
  408502:	mov    ah,0x4a
  408504:	or     al,0x19
  408506:	cdq    
  408507:	add    dh,al
  408509:	xchg   DWORD PTR [ebx],eax
  40850b:	mov    esi,0x2889c683
  408510:	rcr    BYTE PTR [ecx+0x6ec23d24],0xde
  408517:	pusha  
  408518:	push   edx
  408519:	cdq    
  40851a:	push   0x79
  40851c:	pop    edi
  40851d:	push   ss
  40851e:	popa   
  40851f:	imul   BYTE PTR [eax-0x1]
  408522:	rol    BYTE PTR [ebp-0x1d],1
  408525:	xchg   BYTE PTR [ebp-0x744d953e],dh
  40852b:	and    DWORD PTR [eax+0x71],edi
  40852e:	fadd   st(1),st
  408530:	add    DWORD PTR [ebx+0x6a11fd41],edx
  408536:	add    DWORD PTR [edi],ecx
  408538:	test   ch,0xf0
  40853b:	xor    eax,0xdd7eaef4
  408540:	in     eax,0x97
  408542:	popa   
  408543:	repnz pusha 
  408545:	push   ebx
  408546:	das    
  408547:	shl    BYTE PTR [ebp+0x74bda485],1
  40854d:	mov    ecx,0x78ea0bd9
  408552:	inc    ebx
  408553:	(bad)  
  408554:	mov    DWORD PTR [edi],esi
  408556:	les    ebx,FWORD PTR [edx+0x6f64a162]
  40855c:	sub    ecx,DWORD PTR [esi+esi*8+0x5cf72f33]
  408563:	cmp    eax,0x999114eb
  408568:	push   0x76
  40856a:	in     al,dx
  40856b:	dec    edx
  40856c:	sahf   
  40856d:	scas   al,BYTE PTR es:[edi]
  40856e:	jbe    0x4085c9
  408570:	mov    esi,eax
  408572:	inc    esi
  408573:	es add eax,0xbfd59b5d
  408579:	(bad)  
  40857b:	icebp  
  40857c:	daa    
  40857d:	adc    ah,BYTE PTR [ebp-0x1f0a9865]
  408583:	pop    edi
  408584:	sub    eax,0x99683054
  408589:	das    
  40858a:	cwde   
  40858b:	sbb    al,0x71
  40858d:	leave  
  40858e:	jl     0x408604
  408590:	jbe    0x4085a7
  408592:	lahf   
  408593:	xchg   ebx,eax
  408594:	int    0x8f
  408596:	sahf   
  408597:	lock cmp ebp,DWORD PTR [edi+0x37a50d7e]
  40859e:	pop    ebp
  40859f:	sub    DWORD PTR [eax],ecx
  4085a1:	push   edx
  4085a2:	outs   dx,DWORD PTR ds:[esi]
  4085a3:	js     0x4085d3
  4085a5:	and    eax,0xf3f5d70f
  4085aa:	push   esp
  4085ab:	call   0xf76f:0x386c79bd
  4085b2:	push   esp
  4085b3:	sub    ecx,ebp
  4085b5:	es std 
  4085b7:	test   DWORD PTR [edi+0x1c436165],ebx
  4085bd:	mov    edx,0x4e7f18b3
  4085c2:	cdq    
  4085c3:	pop    ds
  4085c4:	sub    DWORD PTR [edx+ebp*1-0x6cd3b761],0x303161db
  4085cf:	pop    edx
  4085d0:	rol    ebx,0x13
  4085d3:	adc    ebp,ecx
  4085d5:	jo     0x40864a
  4085d7:	lock mov cl,0x69
  4085da:	test   BYTE PTR [edi],0x72
  4085dd:	fnsave [edi]
  4085df:	or     al,0x3e
  4085e1:	lods   al,BYTE PTR ds:[esi]
  4085e2:	mov    ah,0xa8
  4085e4:	pushf  
  4085e5:	enter  0x2fd4,0x3c
  4085e9:	inc    ecx
  4085ea:	sbb    al,0xa2
  4085ec:	aas    
  4085ed:	pop    ebx
  4085ee:	outs   dx,BYTE PTR ds:[esi]
  4085ef:	xchg   esp,eax
  4085f0:	jae    0x408601
  4085f2:	mov    gs,WORD PTR [edx*4-0x5b8c7fc7]
  4085f9:	add    edi,DWORD PTR [edi-0x1]
  4085fc:	test   DWORD PTR [ebx-0x4a847735],ecx
  408602:	test   eax,0x552020de
  408607:	cmc    
  408608:	(bad)  
  408609:	mov    ch,BYTE PTR [edi+0x1772c0d4]
  40860f:	int3   
  408610:	sti    
  408611:	mov    ds:0xffa72cf5,al
  408616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408617:	fld    TBYTE PTR [ebx]
  408619:	add    eax,DWORD PTR [ecx-0x1acc441d]
  40861f:	mov    ds:0xefb2c252,eax
  408624:	je     0x408625
  408626:	xchg   esp,eax
  408627:	inc    ebp
  408628:	retf   
  408629:	repz push ebx
  40862b:	jmp    0xef8f:0xd22e463
  408632:	(bad)  
  408633:	xchg   esp,eax
  408634:	call   DWORD PTR [eax-0x1e76a99a]
  40863a:	lds    ebp,FWORD PTR [edi]
  40863c:	sbb    DWORD PTR [esi],esp
  40863e:	xlat   BYTE PTR ds:[ebx]
  40863f:	ds cs popa 
  408642:	enter  0xf6d1,0x67
  408646:	shr    ch,0xda
  408649:	mov    ah,0x98
  40864b:	dec    esp
  40864c:	jle    0x408621
  40864e:	adc    esp,DWORD PTR [ebx-0x7aef4c4b]
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	daa    
  408656:	es aam 0xee
  408659:	mov    fs,esp
  40865b:	inc    edi
  40865c:	shl    DWORD PTR [edx-0x786376f4],0xc5
  408663:	addr16 mov ebx,0x7bddaaf2
  408669:	add    BYTE PTR [ebp+edx*2-0x19ee80cb],al
  408670:	cmp    al,BYTE PTR ds:[esi]
  408673:	clc    
  408674:	dec    ebp
  408675:	mov    bh,dl
  408677:	dec    eax
  408678:	scas   eax,DWORD PTR es:[edi]
  408679:	test   al,0xd3
  40867b:	jb     0x4086bb
  40867d:	push   ebp
  40867e:	dec    edi
  40867f:	mov    al,0xe7
  408681:	xor    DWORD PTR [edx+0x2f8870d9],ebx
  408687:	lea    ebp,[ecx-0x7d]
  40868a:	or     bh,ah
  40868c:	dec    eax
  40868d:	cmp    al,0x1a
  408690:	rcr    BYTE PTR [edx],cl
  408692:	rcr    DWORD PTR [esi+0x69],1
  408695:	mov    ebp,0x37beb227
  40869a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40869c:	mov    dh,0xe
  40869e:	add    edx,DWORD PTR [ecx+eax*8-0x714f0f06]
  4086a5:	or     dl,al
  4086a7:	inc    esi
  4086a8:	test   BYTE PTR [ecx],bh
  4086aa:	jg     0x408667
  4086ac:	aam    0x27
  4086ae:	into   
  4086af:	mov    eax,0x83bbbf51
  4086b4:	xchg   esp,eax
  4086b5:	jp     0x408735
  4086b7:	out    0xbf,eax
  4086b9:	fwait
  4086ba:	(bad)  
  4086bb:	call   0xed84:0xec7f0e7b
  4086c2:	dec    esi
  4086c3:	lds    ebx,FWORD PTR [ebp+0x42]
  4086c6:	xor    BYTE PTR [ebp-0x4a171f4b],cl
  4086cc:	inc    edx
  4086cd:	pop    es
  4086ce:	ror    DWORD PTR [eax+0x6ab54c8f],cl
  4086d4:	jb     0x40874f
  4086d6:	int    0xbf
  4086d8:	sbb    DWORD PTR [eax+0x26],edi
  4086db:	lds    esi,FWORD PTR [ecx-0x65]
  4086de:	mov    cl,0xff
  4086e0:	fstp   TBYTE PTR [ecx]
  4086e2:	sbb    edx,DWORD PTR [ebp-0x2]
  4086e5:	xor    BYTE PTR [edi+0x60],0x1a
  4086e9:	inc    esp
  4086ea:	xchg   ebx,eax
  4086eb:	xchg   BYTE PTR [edi+0x32a8e695],ah
  4086f1:	jl     0x4086aa
  4086f3:	pop    ds
  4086f4:	je     0x4086a0
  4086f6:	pop    eax
  4086f7:	jno    0x408737
  4086f9:	mov    esi,0x1a902027
  4086fe:	ret    
  4086ff:	ror    DWORD PTR [eax],cl
  408701:	jne    0x408763
  408703:	popf   
  408704:	div    eax
  408706:	jge    0x408722
  408708:	inc    esi
  408709:	sub    BYTE PTR [ebx+0x2071ba1e],bl
  40870f:	push   esi
  408710:	loope  0x408729
  408712:	js     0x408787
  408714:	push   es
  408715:	js     0x408713
  408717:	add    DWORD PTR [edx],edi
  408719:	mov    BYTE PTR [esi+0x17],bh
  40871c:	add    al,0xf4
  40871e:	pop    esi
  40871f:	js     0x4086c1
  408721:	cmp    ch,BYTE PTR [esi]
  408723:	mov    ss,WORD PTR [ecx-0x7b3aa993]
  408729:	call   0x55cd0190
  40872e:	clc    
  40872f:	mov    WORD PTR [eax],?
  408731:	xor    eax,0xb1b9f8b9
  408736:	in     eax,dx
  408737:	cmc    
  408738:	lds    ebp,FWORD PTR [eax+0x119cb672]
  40873e:	repz mov cl,BYTE PTR ds:[edx-0x1f]
  408743:	dec    eax
  408744:	add    bl,0x91
  408747:	inc    esi
  408748:	sub    BYTE PTR [ebx+0x5009cc7e],bl
  40874e:	cmp    esp,edx
  408750:	add    ah,BYTE PTR [edi+eax*1-0x15]
  408754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408755:	pop    ebx
  408756:	inc    edi
  408757:	and    esp,DWORD PTR [esi+ebx*8-0x70]
  40875b:	adc    BYTE PTR [edi],dl
  40875d:	mov    ch,0xd
  40875f:	push   ss
  408760:	jp     0x408720
  408762:	xor    BYTE PTR [ecx],ah
  408764:	add    ecx,DWORD PTR [edi+esi*8-0x63a05116]
  40876b:	pop    esi
  40876c:	adc    DWORD PTR [esi],edx
  40876e:	(bad)  
  40876f:	jmp    0x4087a5
  408771:	or     eax,0x32708925
  408776:	xor    edx,edi
  408778:	and    BYTE PTR [edi+0x403bc0dd],ch
  40877e:	sub    DWORD PTR [edi-0xa],esi
  408781:	jbe    0x408732
  408783:	(bad)  
  408784:	jg     0x40870f
  408786:	pop    ds
  408787:	dec    ecx
  408788:	push   edi
  408789:	mov    al,ds:0xf968318
  40878e:	aad    0xc7
  408790:	int3   
  408791:	in     eax,0x3b
  408793:	iret   
  408794:	ficom  DWORD PTR [edx]
  408796:	push   esi
  408797:	pusha  
  408798:	or     ebx,DWORD PTR [eax-0x6e8e8812]
  40879e:	sbb    DWORD PTR [eax],esi
  4087a0:	lock imul ebp,DWORD PTR [ebp+ebp*8+0xf],0x68010ce3
  4087a9:	adc    DWORD PTR [esi-0x7fd6119a],ecx
  4087af:	shl    DWORD PTR [edx+0x35],1
  4087b2:	ja     0x40874e
  4087b4:	sti    
  4087b5:	(bad)  
  4087b6:	jbe    0x408818
  4087b8:	mov    esi,0x31f8a140
  4087bd:	dec    edi
  4087be:	dec    edx
  4087bf:	es push ebp
  4087c1:	jmp    0xb186:0xc575c7c3
  4087c8:	gs push ds
  4087ca:	push   ds
  4087cb:	sbb    eax,0x202a20d0
  4087d0:	gs cmp al,bl
  4087d3:	jo     0x40883d
  4087d5:	cmp    al,0x98
  4087d7:	stos   DWORD PTR es:[edi],eax
  4087d8:	gs popf 
  4087da:	leave  
  4087db:	sar    DWORD PTR [esi+eiz*8-0x6115d4de],cl
  4087e2:	ds fwait
  4087e4:	cmp    al,0x1c
  4087e6:	jne    0x4087a2
  4087e8:	test   DWORD PTR [ebx],edx
  4087ea:	sub    al,0x9
  4087ec:	add    ecx,eax
  4087ee:	mov    dl,0xf7
  4087f0:	shl    DWORD PTR [ebp-0x54],cl
  4087f3:	out    0x28,al
  4087f5:	add    al,0xad
  4087f7:	in     eax,dx
  4087f8:	or     ah,BYTE PTR [ebx]
  4087fa:	imul   ebp,DWORD PTR [ecx+0x2b],0x7e
  4087fe:	mov    ds:0xec0e8001,eax
  408803:	xor    eax,0xe9957bd7
  408808:	dec    ebx
  408809:	or     DWORD PTR [eax],esi
  40880b:	fldenv [esi+0x3ed8a1a5]
  408811:	pop    ecx
  408812:	xchg   ecx,eax
  408813:	jno    0x408803
  408815:	pop    ss
  408816:	dec    esp
  408817:	cmp    cl,BYTE PTR [ebp-0x75c6a6e8]
  40881d:	fstp   QWORD PTR [edx+0x4e]
  408820:	inc    ebp
  408821:	je     0x4088a0
  408823:	mov    ah,0xe6
  408825:	or     esi,DWORD PTR [ebx]
  408827:	adc    esi,DWORD PTR [edi]
  408829:	xchg   DWORD PTR [eax-0x21dd405b],ebx
  40882f:	cmc    
  408830:	xchg   ebp,eax
  408831:	pop    cx
  408833:	adc    al,BYTE PTR [eax*4+0x4f59c1b3]
  40883a:	sbb    edi,DWORD PTR [edx+eax*4-0xc]
  40883e:	call   0xc3e5:0x57f49270
  408845:	popf   
  408846:	loop   0x40884d
  408848:	je     0x4088ae
  40884a:	sub    BYTE PTR [edx+0x55],0xd5
  40884e:	mov    eax,0xfce66510
  408853:	pop    edi
  408854:	jp     0x40884e
  408856:	enter  0xfe81,0x5f
  40885a:	sub    BYTE PTR [ebx+0x1e],dl
  40885d:	mov    ch,0x72
  40885f:	add    al,0xd
  408861:	cs stc 
  408863:	adc    eax,0x8fd07e72
  408868:	mov    bh,0x2b
  40886a:	push   cs
  40886b:	imul   edx,eax,0x76
  40886e:	mov    ecx,0x5c3f36c0
  408873:	fisttp QWORD PTR [esi+0x756ef734]
  408879:	loopne 0x40881e
  40887b:	sbb    DWORD PTR [ebp+edx*1-0x29ff8c48],eax
  408882:	imul   ebp,DWORD PTR [eax],0x2b
  408885:	stos   DWORD PTR es:[edi],eax
  408886:	add    eax,0xe7ae1817
  40888b:	mov    fs,WORD PTR [ecx-0x172afa52]
  408891:	movd   DWORD PTR [esi],mm5
  408894:	xor    edx,ebp
  408896:	jg     0x38eaa88f
  40889c:	jp     0x408865
  40889e:	jecxz  0x4088c9
  4088a0:	xchg   esi,eax
  4088a1:	cmc    
  4088a2:	sub    eax,0xf16319f4
  4088a7:	(bad)  
  4088a8:	out    0x1d,al
  4088aa:	pusha  
  4088ab:	sub    cl,BYTE PTR [ebx+edx*4-0x48546724]
  4088b2:	nop
  4088b3:	pop    edi
  4088b4:	dec    esi
  4088b5:	xchg   ecx,eax
  4088b6:	or     al,0xf
  4088b8:	cmp    BYTE PTR [ebp-0x4d],al
  4088bb:	sub    eax,0x27a7f132
  4088c0:	jmp    0x40893b
  4088c2:	adc    DWORD PTR [edx+0x57cf835d],edi
  4088c8:	mov    ds:0x379a45de,al
  4088cd:	sub    DWORD PTR [edi-0x7f8653f4],ecx
  4088d3:	xor    al,0x40
  4088d5:	mov    ds:0x3a024c37,al
  4088da:	out    0xf4,eax
  4088dc:	stc    
  4088dd:	adc    al,0x30
  4088df:	mov    dl,0x52
  4088e1:	cli    
  4088e2:	enter  0xc14c,0xcb
  4088e6:	sub    eax,0xe022e95b
  4088eb:	inc    ebx
  4088ec:	mov    dh,0xdf
  4088ee:	or     DWORD PTR [edx+edx*4-0x70],esp
  4088f2:	out    0xae,eax
  4088f4:	test   DWORD PTR [edi+ecx*1],eax
  4088f7:	mov    ah,0x59
  4088f9:	inc    edx
  4088fa:	xor    al,0x25
  4088fc:	fbstp  TBYTE PTR [ebx]
  4088fe:	call   0xfb7f:0x140baa4f
  408905:	sbb    al,0x1d
  408907:	pop    eax
  408908:	dec    esi
  408909:	fisubr DWORD PTR [eax-0x530f8220]
  40890f:	add    BYTE PTR ds:0xdaaa9067,ah
  408915:	bound  ebx,QWORD PTR [ebx+0x2253cbe8]
  40891b:	addr16 je 0x4088ac
  40891e:	int3   
  40891f:	push   0xdc4e0b49
  408924:	mov    ds:0xace63af2,eax
  408929:	out    dx,al
  40892a:	or     BYTE PTR [esi+0x59841884],0x7f
  408931:	rcl    DWORD PTR ds:[edi-0x308bf960],1
  408938:	cmp    eax,0x248836bd
  40893d:	dec    edx
  40893e:	inc    eax
  40893f:	(bad)  
  408940:	mov    eax,ds:0xf42f53f4
  408945:	jae    0x4089bf
  408947:	pop    edx
  408948:	dec    esi
  408949:	lds    edi,FWORD PTR [ecx]
  40894b:	into   
  40894c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40894d:	xor    eax,0x2e53d836
  408952:	es inc ebx
  408954:	sbb    al,0x90
  408956:	cmp    edi,esp
  408958:	shl    edi,1
  40895a:	rol    DWORD PTR [ebx],0x9
  40895d:	int    0x83
  40895f:	xchg   BYTE PTR [eax-0x3a],dh
  408962:	(bad)  
  408963:	and    BYTE PTR [esi],bl
  408965:	or     eax,0x1b121a00
  40896a:	lods   al,BYTE PTR ds:[esi]
  40896b:	pop    edx
  40896c:	scas   al,BYTE PTR es:[edi]
  40896d:	mov    esi,0xf3b02021
  408972:	sbb    al,0x8f
  408974:	mov    esp,0x24567fcb
  408979:	mov    eax,0x38cf99e5
  40897e:	sub    DWORD PTR [ebp-0x12cf1e85],edx
  408984:	dec    ecx
  408985:	pop    ecx
  408986:	mov    cl,0xe
  408988:	mov    ch,0xba
  40898a:	mov    al,ds:0xa887f22a
  40898f:	xchg   eax,edi
  408991:	cmc    
  408992:	(bad)  
  408993:	cli    
  408994:	jb     0x4089ce
  408996:	xchg   ecx,eax
  408997:	jb     0x4089dc
  408999:	pushf  
  40899a:	rcl    DWORD PTR [eax-0x38],0x97
  40899e:	frstor [eax+0x6ac89af5]
  4089a4:	ja     0x4089df
  4089a6:	repz popf 
  4089a8:	jnp    0x40896c
  4089aa:	popa   
  4089ab:	test   DWORD PTR [esi+0x33],0xbd0b56b5
  4089b2:	test   al,0x6c
  4089b4:	or     BYTE PTR [esi+edi*8+0x0],ah
  4089b8:	sub    BYTE PTR [edx+0x7ebd1761],al
  4089be:	stc    
  4089bf:	bound  ebp,QWORD PTR [eax-0x34]
  4089c2:	shl    BYTE PTR [ecx],1
  4089c4:	adc    bh,dh
  4089c6:	stos   BYTE PTR es:[edi],al
  4089c7:	icebp  
  4089c8:	and    ebx,DWORD PTR [edi]
  4089ca:	dec    edi
  4089cb:	enter  0xe659,0xec
  4089cf:	jbe    0x408a35
  4089d1:	pop    es
  4089d2:	dec    edx
  4089d3:	add    ch,BYTE PTR [ecx]
  4089d5:	cmc    
  4089d6:	out    0x85,eax
  4089d8:	out    dx,ax
  4089da:	outs   dx,DWORD PTR ds:[esi]
  4089db:	inc    esp
  4089dc:	out    0x6d,al
  4089de:	rcl    BYTE PTR [edx-0x21],1
  4089e1:	and    dh,BYTE PTR [edx+0x1f]
  4089e4:	das    
  4089e5:	mov    al,ch
  4089e7:	mov    ah,0x26
  4089e9:	adc    eax,0xe8ffd40e
  4089ee:	and    dh,BYTE PTR [ebx+0x16]
  4089f1:	inc    esi
  4089f2:	or     eax,0x7bb05480
  4089f7:	(bad)  
  4089f8:	ficomp WORD PTR [edx+0x2a4a8a2f]
  4089fe:	adc    BYTE PTR [eax-0x408bbc22],0x8
  408a05:	cmc    
  408a06:	or     al,0x19
  408a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a09:	fsubr  DWORD PTR [edx]
  408a0b:	popf   
  408a0c:	scas   al,BYTE PTR es:[edi]
  408a0d:	cmc    
  408a0e:	(bad)  
  408a0f:	ins    BYTE PTR es:[edi],dx
  408a10:	fisub  DWORD PTR [ebx+0x35]
  408a13:	in     eax,dx
  408a14:	(bad)  
  408a16:	sub    BYTE PTR [ebx],ch
  408a18:	xor    esp,DWORD PTR gs:[eax-0x13379826]
  408a1f:	sub    BYTE PTR [eax+0x32],dl
  408a22:	rcl    BYTE PTR [ecx+0x66],cl
  408a25:	(bad)  
  408a26:	aam    0x1e
  408a28:	sbb    eax,0x310c95c7
  408a2d:	jmp    0xc60fb39b
  408a32:	mov    cl,0x43
  408a34:	mov    ds:0x9c24d34f,eax
  408a39:	inc    ecx
  408a3a:	outs   dx,DWORD PTR ds:[esi]
  408a3b:	jg     0x408aa6
  408a3d:	mov    WORD PTR [eax+0x27a391c2],ds
  408a43:	por    mm5,QWORD PTR [eax]
  408a46:	add    eax,0x64135489
  408a4b:	xchg   edx,eax
  408a4c:	sahf   
  408a4d:	scas   al,BYTE PTR es:[edi]
  408a4e:	xchg   DWORD PTR [eiz*2-0x7363bd4a],esp
  408a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a57:	xchg   ebx,eax
  408a58:	mov    esp,DWORD PTR [eax]
  408a5a:	stos   BYTE PTR es:[edi],al
  408a5b:	mov    ds:0xd5e4bb10,eax
  408a60:	stos   DWORD PTR es:[edi],eax
  408a61:	add    eax,ecx
  408a63:	adc    edx,DWORD PTR ds:0xfd98f3a0
  408a69:	mov    edi,0x8c3ebd53
  408a6e:	ror    BYTE PTR [ecx-0x2597d10b],1
  408a74:	jnp    0x408a09
  408a76:	sbb    DWORD PTR [eax],ecx
  408a78:	lahf   
  408a79:	stos   BYTE PTR es:[edi],al
  408a7a:	sbb    BYTE PTR [eax],0x3e
  408a7d:	sub    BYTE PTR [ecx+0x6d713222],0xcd
  408a84:	xchg   DWORD PTR [eax-0x63],esp
  408a87:	into   
  408a88:	pop    es
  408a89:	push   ebx
  408a8a:	xor    cl,BYTE PTR [ecx]
  408a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8d:	xor    edi,esp
  408a8f:	or     cl,BYTE PTR gs:[edx]
  408a92:	add    edx,ebx
  408a94:	retf   0x52fe
  408a97:	mov    bh,0xca
  408a99:	sub    BYTE PTR [eax+0x5df4658e],0x19
  408aa0:	fstp   TBYTE PTR [edx]
  408aa2:	test   DWORD PTR [esi],eax
  408aa4:	jae    0x408a7b
  408aa6:	xchg   esp,eax
  408aa7:	ret    0x5a38
  408aaa:	push   esp
  408aab:	cli    
  408aac:	lea    ebx,[ebp+0x370ce15]
  408ab2:	pop    edx
  408ab3:	pop    edx
  408ab4:	push   esi
  408ab5:	rol    edx,cl
  408ab7:	shl    BYTE PTR [edi-0x6d],1
  408aba:	cmp    DWORD PTR [edx+eax*4+0x1c08dc09],0xffffff89
  408ac2:	xor    eax,DWORD PTR [ebp-0x73]
  408ac5:	or     eax,0x3f588f8a
  408aca:	rcl    BYTE PTR [esp+ecx*4-0x7d],1
  408ace:	ret    
  408acf:	ds jmp 0x408a99
  408ad2:	xor    bh,ah
  408ad4:	inc    esp
  408ad5:	or     eax,0xbe6edd9a
  408ada:	mov    cl,0x1e
  408adc:	pop    eax
  408add:	cmp    eax,0x299f2873
  408ae2:	aaa    
  408ae3:	pop    edx
  408ae4:	jge    0x408b5f
  408ae6:	inc    ebp
  408ae7:	push   0xa6cd4974
  408aec:	popa   
  408aed:	mov    dh,0xd4
  408aef:	dec    eax
  408af0:	dec    ecx
  408af1:	jp     0x408af3
  408af3:	sbb    DWORD PTR [ebx+0x7c],ecx
  408af6:	jnp    0x408af2
  408af8:	inc    eax
  408af9:	pop    esp
  408afa:	mov    cl,0x22
  408afc:	mov    edi,0x155154d2
  408b01:	sbb    DWORD PTR [eax-0x75],eax
  408b04:	mov    ah,0xf3
  408b06:	and    dh,BYTE PTR [ecx+0x15ff3293]
  408b0c:	sbb    eax,0x31614d2a
  408b11:	neg    DWORD PTR [ebp+edx*4+0x3332f580]
  408b18:	not    BYTE PTR [esi]
  408b1a:	fisub  WORD PTR [ecx]
  408b1c:	inc    ebx
  408b1d:	lahf   
  408b1e:	gs (bad) 
  408b20:	jae    0x408aaa
  408b22:	adc    eax,0x908e5aaf
  408b27:	xchg   edi,eax
  408b28:	ficomp DWORD PTR [esp+edi*1]
  408b2b:	mov    dl,0xbe
  408b2d:	fisub  DWORD PTR [ebx-0x14]
  408b30:	sbb    bh,BYTE PTR [ebp-0x5d5bf621]
  408b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b37:	xlat   BYTE PTR ds:[ebx]
  408b38:	sahf   
  408b39:	xchg   ecx,eax
  408b3a:	lahf   
  408b3b:	adc    BYTE PTR [ebp-0x3e7bc9be],dl
  408b41:	popf   
  408b42:	clc    
  408b43:	(bad)  
  408b44:	lahf   
  408b45:	test   DWORD PTR [eax-0x1fccd377],eax
  408b4b:	sbb    ecx,edx
  408b4d:	dec    ecx
  408b4e:	(bad)  
  408b4f:	test   al,0xbd
  408b51:	xor    eax,0x527b51cd
  408b56:	fwait
  408b57:	cmp    ch,BYTE PTR [eax-0x78]
  408b5a:	fwait
  408b5b:	sub    BYTE PTR [ebp+0x1d1e803],bl
  408b61:	or     al,0xee
  408b63:	sub    cl,ch
  408b65:	mov    ds:0x91e58043,eax
  408b6a:	(bad)  
  408b6b:	pop    eax
  408b6c:	inc    edx
  408b6d:	(bad)  
  408b6f:	push   ecx
  408b70:	cmp    al,0xf5
  408b72:	fwait
  408b73:	das    
  408b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b75:	das    
  408b76:	daa    
  408b77:	add    edi,esp
  408b79:	test   esi,eax
  408b7b:	iret   
  408b7c:	pop    ss
  408b7d:	and    eax,DWORD PTR [bx+di+0x5f]
  408b81:	and    edi,DWORD PTR [ebp+0x3cfc3094]
  408b87:	mov    eax,ds:0x3309f84e
  408b8c:	scas   al,BYTE PTR es:[edi]
  408b8d:	retf   0x3976
  408b90:	dec    ecx
  408b91:	call   0xb40398e9
  408b96:	aam    0x24
  408b98:	ss loope 0x408bb3
  408b9b:	fimul  DWORD PTR [esi]
  408b9d:	cs js  0x408b23
  408ba0:	cs clc 
  408ba2:	dec    esi
  408ba3:	push   esp
  408ba4:	(bad)  
  408ba5:	jecxz  0x408bd4
  408ba7:	pusha  
  408ba8:	test   al,0x84
  408baa:	out    dx,al
  408bab:	lock sbb BYTE PTR [edx+ecx*1+0x6],ah
  408bb0:	jno    0x408b91
  408bb2:	xor    esp,esp
  408bb4:	cmp    BYTE PTR [ebx-0x4c],cl
  408bb7:	jnp    0x408b88
  408bb9:	scas   al,BYTE PTR es:[edi]
  408bba:	out    0x4c,eax
  408bbc:	daa    
  408bbd:	loopne 0x408c17
  408bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc0:	lds    edi,FWORD PTR [ebp-0x79]
  408bc3:	pusha  
  408bc4:	aas    
  408bc5:	sbb    al,0x92
  408bc7:	jmp    0x6f98:0x3921e0d4
  408bce:	cwde   
  408bcf:	(bad)
  408bd2:	mov    dh,0xc1
  408bd4:	dec    edi
  408bd5:	jns    0x408b92
  408bd7:	xchg   esp,eax
  408bd8:	or     BYTE PTR [ecx-0xba38ea5],0x79
  408bdf:	and    DWORD PTR fs:[esi],edi
  408be2:	sbb    bh,BYTE PTR [esi]
  408be4:	int    0x23
  408be6:	jae    0x408bb1
  408be8:	bound  ecx,QWORD PTR [edi-0x11]
  408beb:	lods   al,BYTE PTR ds:[esi]
  408bec:	push   ebx
  408bed:	inc    edi
  408bee:	mov    ?,WORD PTR [edx+eiz*1+0x19]
  408bf2:	arpl   WORD PTR [ecx+esi*8-0x704a3367],di
  408bf9:	lea    esi,[edx+edi*8+0x2b2116a8]
  408c00:	xor    ebp,0xa80a97d2
  408c06:	idiv   DWORD PTR [eax+ebp*8-0x7]
  408c0a:	pop    eax
  408c0b:	popa   
  408c0c:	out    0xd3,al
  408c0e:	into   
  408c0f:	aas    
  408c10:	xchg   ebp,eax
  408c11:	mov    edx,0x2d6a83b0
  408c16:	test   eax,0x630a3ca0
  408c1b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408c1d:	repz je 0x408c00
  408c20:	xchg   esi,eax
  408c21:	xor    eax,0x67b8b87d
  408c26:	sub    DWORD PTR [eax+0x49702e9e],ecx
  408c2c:	mov    dh,0x85
  408c2e:	fucomip st,st(0)
  408c30:	retf   0x40c6
  408c33:	call   0x6240:0x571727d6
  408c3a:	adc    al,0x62
  408c3c:	pop    ss
  408c3d:	in     al,dx
  408c3e:	call   0x2faefc89
  408c43:	jns    0x408bc6
  408c45:	mov    bl,0xc9
  408c47:	ins    DWORD PTR es:[edi],dx
  408c48:	mov    al,ch
  408c4a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4c:	jns    0x408c12
  408c4e:	aam    0x0
  408c50:	dec    ecx
  408c51:	test   al,0xef
  408c53:	add    WORD PTR [edx-0x3de305a1],si
  408c5a:	jg     0x408c48
  408c5c:	push   edi
  408c5d:	push   eax
  408c5e:	jl     0x408c5a
  408c60:	(bad)  
  408c62:	sub    eax,0xfd70e7b1
  408c67:	outs   dx,BYTE PTR ds:[esi]
  408c68:	cwde   
  408c69:	inc    esp
  408c6a:	lahf   
  408c6b:	inc    esp
  408c6c:	jne    0x408c00
  408c6e:	cmp    BYTE PTR [ecx+0x4],dh
  408c71:	les    esp,FWORD PTR [esi-0x33]
  408c74:	jmp    0x408c22
  408c76:	mov    es,WORD PTR [edx+0x316adbe5]
  408c7c:	dec    edx
  408c7d:	mov    ecx,0x6ffdea55
  408c82:	xchg   esi,eax
  408c83:	jo     0x408c24
  408c85:	pop    edi
  408c86:	jmp    0x177e:0x63fa0d71
  408c8d:	add    al,0x35
  408c8f:	and    ch,0xfc
  408c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c93:	cmp    ecx,edi
  408c95:	sub    al,0x3f
  408c97:	sbb    DWORD PTR [ebx+0x4d],ecx
  408c9a:	out    0x5a,eax
  408c9c:	bound  esi,QWORD PTR [edi+esi*1-0x17b2c6bb]
  408ca3:	int3   
  408ca4:	je     0x408c7d
  408ca6:	xor    al,0x64
  408ca8:	rcl    BYTE PTR [ebp+0x63e534a7],cl
  408cae:	xor    ecx,0xa1db2c7d
  408cb4:	mov    ebx,0xf73a209f
  408cb9:	jae    0x408d02
  408cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cbc:	push   0xffffffb5
  408cbe:	in     al,0x30
  408cc0:	adc    edx,DWORD PTR [ebp+0xd]
  408cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc4:	les    edi,FWORD PTR [edx]
  408cc6:	sub    DWORD PTR [edi+0x2c313918],ebx
  408ccc:	mov    eax,?
  408cce:	fldenv ds:[ebp+0x59f3123c]
  408cd5:	cmp    bh,BYTE PTR [edx]
  408cd7:	pushf  
  408cd8:	mov    cl,0x3c
  408cda:	int    0x1b
  408cdc:	shl    DWORD PTR [edx+0x399549ff],0xaa
  408ce3:	mov    ebp,eax
  408ce5:	push   edx
  408ce6:	ins    BYTE PTR es:[edi],dx
  408ce7:	xchg   ecx,eax
  408ce8:	push   ebp
  408ce9:	add    edx,DWORD PTR [esi]
  408ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cec:	rol    cl,cl
  408cee:	pop    ebp
  408cef:	test   eax,0x48eb3e9b
  408cf4:	les    edx,FWORD PTR [edi*8-0xd5b86d4]
  408cfb:	imul   eax,DWORD PTR [ebx+0x15],0x7c
  408cff:	cmp    cl,al
  408d01:	cwde   
  408d02:	retf   
  408d03:	mov    esp,0x44214a0a
  408d08:	repz je 0x408ce4
  408d0b:	cmc    
  408d0c:	pop    eax
  408d0d:	or     dl,BYTE PTR [eax-0x48aaa3e7]
  408d13:	mov    ebp,0x3a27a3e1
  408d18:	jb     0x408d6b
  408d1a:	cmp    al,BYTE PTR [ebp+0x5b]
  408d1d:	pop    ecx
  408d1e:	sub    eax,0x63e48aa4
  408d23:	lock fimul WORD PTR [ebx]
  408d26:	push   0x1e
  408d28:	popa   
  408d29:	sub    BYTE PTR [edi-0x1b810f7e],bh
  408d2f:	xor    dh,BYTE PTR [edx-0xb]
  408d32:	adc    bh,BYTE PTR [ecx-0x4a3482b4]
  408d38:	lods   eax,DWORD PTR ds:[esi]
  408d39:	test   BYTE PTR [edi],al
  408d3b:	cli    
  408d3c:	call   0x10a5:0xc33f907c
  408d43:	adc    bh,BYTE PTR [ecx]
  408d45:	inc    edx
  408d46:	or     DWORD PTR [ebp-0x13],0xc1ff6cf
  408d4d:	push   edi
  408d4e:	lea    edi,[eax+0x6f]
  408d51:	lea    esp,[edi+0x1305c7c0]
  408d57:	jl     0x408d94
  408d59:	mov    ebp,0x211e2ef
  408d5e:	mov    cs,esp
  408d60:	and    al,0xf5
  408d62:	inc    edx
  408d63:	mov    BYTE PTR ds:0xdcd576d7,bl
  408d69:	push   edx
  408d6a:	in     al,dx
  408d6b:	mov    eax,ds:0x4227fd5a
  408d70:	test   DWORD PTR [eax-0xec8f0e5],ebx
  408d76:	sub    ecx,DWORD PTR [edx+ecx*8]
  408d79:	out    dx,eax
  408d7a:	aam    0x6e
  408d7c:	push   es
  408d7d:	scas   al,BYTE PTR es:[edi]
  408d7e:	push   ds
  408d7f:	(bad)
  408d82:	sbb    DWORD PTR [ebx+0x1f4b992c],edx
  408d88:	cld    
  408d89:	mov    al,ds:0xf64a8cc9
  408d8e:	xchg   ecx,eax
  408d8f:	sub    BYTE PTR [edi],al
  408d91:	or     DWORD PTR [eax-0x2d06aa3d],edx
  408d97:	ret    
  408d98:	dec    esi
  408d99:	inc    ebx
  408d9a:	mov    BYTE PTR [esi-0x67],cl
  408d9d:	xlat   BYTE PTR ds:[ebx]
  408d9e:	aam    0x1a
  408da0:	mov    al,0x6a
  408da2:	mov    al,0x86
  408da4:	and    al,0x4b
  408da6:	les    esi,FWORD PTR [ebx-0x35]
  408da9:	xor    edi,ebx
  408dab:	loop   0x408e04
  408dad:	sub    ah,al
  408daf:	dec    ebx
  408db0:	dec    esi
  408db1:	mov    dl,0x1b
  408db3:	xor    eax,0x7a819829
  408db8:	jg     0x408d4c
  408dba:	in     al,dx
  408dbb:	mov    eax,ds:0xaa4bd07b
  408dc0:	push   es
  408dc1:	in     eax,dx
  408dc2:	fadd   QWORD PTR [edx+0x32]
  408dc5:	ficomp DWORD PTR [eax]
  408dc7:	mov    dl,0x9a
  408dc9:	pop    ecx
  408dca:	adc    cl,BYTE PTR ds:0xa997cc07
  408dd0:	loope  0x408dc0
  408dd2:	pop    ss
  408dd3:	cmp    edx,ecx
  408dd5:	call   0xa36345dc
  408dda:	lahf   
  408ddb:	fst    QWORD PTR [ecx-0xa]
  408dde:	mov    cl,0x0
  408de0:	sbb    BYTE PTR [edi],ch
  408de2:	add    ch,dh
  408de4:	push   es
  408de5:	stos   BYTE PTR es:[edi],al
  408de6:	inc    ecx
  408de7:	cmp    bl,BYTE PTR [edi]
  408de9:	mov    ch,0xeb
  408deb:	out    dx,eax
  408dec:	sbb    bl,ch
  408dee:	dec    edx
  408def:	add    BYTE PTR [edi-0x44],ah
  408df2:	push   eax
  408df3:	pop    ebx
  408df4:	push   ebx
  408df5:	out    dx,al
  408df6:	dec    esi
  408df7:	rcr    BYTE PTR [ebp+0x26958e3a],0xd3
  408dfe:	push   ecx
  408dff:	and    al,BYTE PTR [edi+eiz*8-0x1207f823]
  408e06:	inc    ecx
  408e07:	rcr    BYTE PTR [edx+0x3a6e4595],cl
  408e0d:	adc    ecx,DWORD PTR [edx-0x5d933965]
  408e13:	mov    dl,0xeb
  408e15:	stos   DWORD PTR es:[edi],eax
  408e16:	pop    ss
  408e17:	jge    0x408e8d
  408e19:	fs gs call 0x9a822a49
  408e20:	retf   
  408e21:	fstp   QWORD PTR [esi-0x2b]
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	cmc    
  408e26:	sub    al,0x7c
  408e28:	es pop ebp
  408e2a:	loopne 0x408e85
  408e2c:	jmp    0xc7e3:0xdeced434
  408e33:	into   
  408e34:	mov    ah,0x32
  408e36:	test   BYTE PTR gs:[esi],ah
  408e39:	mov    ah,0x3d
  408e3b:	in     eax,0x4
  408e3d:	(bad)  
  408e3e:	out    dx,al
  408e3f:	jmp    0x7b221b87
  408e44:	or     DWORD PTR [ebx],esp
  408e46:	fbld   TBYTE PTR [ebx+0x2d]
  408e49:	push   ds
  408e4a:	push   edi
  408e4b:	push   ss
  408e4c:	sub    ebp,DWORD PTR [ebp+edx*4-0x52]
  408e50:	cld    
  408e51:	jecxz  0x408e3d
  408e53:	xor    ebx,DWORD PTR [ebx-0x5ef1a1d4]
  408e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e5a:	repnz dec ebx
  408e5c:	popa   
  408e5d:	pop    edx
  408e5e:	sub    eax,0xa6ceac32
  408e63:	ror    BYTE PTR [eax-0x5b9efe87],1
  408e69:	shr    DWORD PTR ds:0xe16e70a,cl
  408e6f:	xchg   BYTE PTR [eax],cl
  408e71:	or     esi,ecx
  408e73:	cs push es
  408e75:	int    0x0
  408e77:	mov    ecx,0xe4cd4590
  408e7c:	jmp    0x408e97
  408e7e:	pop    esp
  408e7f:	call   0xa94c0c47
  408e84:	scas   al,BYTE PTR es:[edi]
  408e85:	dec    esp
  408e86:	call   0xdb6b59fa
  408e8b:	mov    edi,0x38a72b2c
  408e90:	pop    ss
  408e91:	repnz imul ebp,DWORD PTR [esi],0x29
  408e95:	jp     0x408e69
  408e97:	sub    ebp,DWORD PTR [ebx-0x3a8f984]
  408e9d:	or     BYTE PTR [ebx],ah
  408e9f:	mov    ch,0xa1
  408ea1:	lea    edx,[ebx+0x13]
  408ea4:	jne    0x408e44
  408ea6:	ror    BYTE PTR [esi*2+0x39b52200],1
  408ead:	sahf   
  408eae:	jo     0x408ef8
  408eb0:	loop   0x408eb3
  408eb2:	cwde   
  408eb3:	xor    dl,BYTE PTR [ebp+0x1f]
  408eb6:	repz pop ss
  408eb8:	aas    
  408eb9:	pop    edx
  408eba:	jnp    0x408e59
  408ebc:	sbb    dl,BYTE PTR [ebp-0x13db8ae4]
  408ec2:	mov    bl,0x51
  408ec4:	das    
  408ec5:	inc    DWORD PTR [ecx]
  408ec7:	dec    edx
  408ec8:	fs jmp 0x65bc:0x2758f4f9
  408ed0:	imul   edi,DWORD PTR [eax-0x7b],0xe9709920
  408ed7:	into   
  408ed8:	ins    BYTE PTR es:[edi],dx
  408ed9:	push   esi
  408eda:	mov    esi,DWORD PTR [edx]
  408edc:	and    dl,BYTE PTR [eax-0x42]
  408edf:	pop    es
  408ee0:	sub    eax,0x7ad010c8
  408ee5:	xchg   ebx,eax
  408ee6:	test   esp,0x1110d0a3
  408eec:	mov    ch,0xca
  408eee:	jl     0x408f48
  408ef0:	mov    ds:0xe60be318,al
  408ef5:	mov    ?,WORD PTR [eax]
  408ef7:	xchg   edx,eax
  408ef8:	rol    BYTE PTR [edx],cl
  408efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efb:	aas    
  408efc:	push   ds
  408efd:	jg     0x408ead
  408eff:	push   es
  408f00:	xor    cl,bh
  408f02:	and    BYTE PTR [eax+0x7c],cl
  408f05:	ins    BYTE PTR es:[edi],dx
  408f06:	outs   dx,BYTE PTR ds:[esi]
  408f07:	daa    
  408f08:	es mov esp,edi
  408f0b:	popf   
  408f0c:	jne    0x408e99
  408f0e:	add    al,0x9c
  408f10:	dec    ebp
  408f11:	sti    
  408f12:	popf   
  408f13:	add    eax,0x80b007a9
  408f18:	fldcw  WORD PTR [edx+0x22]
  408f1b:	sbb    dl,BYTE PTR [edi-0x1fc3c1b9]
  408f21:	dec    esi
  408f22:	outs   dx,BYTE PTR ds:[esi]
  408f23:	pushw  0xffa8
  408f26:	cld    
  408f27:	lahf   
  408f28:	(bad)
  408f2b:	stc    
  408f2c:	push   ss
  408f2d:	jp     0x408eb7
  408f2f:	(bad)  
  408f30:	in     al,dx
  408f31:	cmc    
  408f32:	fnsave [edi]
  408f34:	xor    BYTE PTR [eax],0x84
  408f37:	add    al,0x9b
  408f39:	fsubr  QWORD PTR [eax]
  408f3c:	mov    ds:0x3714cb54,eax
  408f41:	sbb    bh,BYTE PTR [eiz*1-0xbc4e88b]
  408f48:	push   eax
  408f49:	loope  0x408efe
  408f4b:	or     eax,0x9f130fe2
  408f50:	jp     0x408f9a
  408f52:	std    
  408f53:	sbb    eax,0x708e3e9b
  408f58:	fbstp  TBYTE PTR [ebp-0x71]
  408f5b:	lods   eax,DWORD PTR ds:[esi]
  408f5c:	sub    edx,DWORD PTR [esi+0x5c5c04ea]
  408f62:	scas   al,BYTE PTR es:[edi]
  408f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f64:	sbb    al,0x54
  408f66:	rol    DWORD PTR [esi-0x130e1534],0xe6
  408f6d:	mov    ebp,0xc512738
  408f72:	jmp    0x7033:0xc6e4bbe2
  408f79:	and    al,bh
  408f7b:	xchg   edx,eax
  408f7c:	loope  0x408fd2
  408f7e:	dec    eax
  408f7f:	jl     0x408f27
  408f81:	mov    ecx,0x15f0815b
  408f86:	stos   BYTE PTR es:[edi],al
  408f87:	std    
  408f88:	sbb    al,0x65
  408f8a:	jle    0x408f7f
  408f8c:	xor    BYTE PTR [eax-0x64b60b6e],al
  408f92:	push   edx
  408f93:	add    BYTE PTR [ebp-0x79],dh
  408f96:	sar    ch,1
  408f98:	ja     0x408f36
  408f9a:	das    
  408f9b:	and    BYTE PTR [esi+ebx*2+0x4b],dh
  408f9f:	aas    
  408fa0:	fwait
  408fa1:	(bad)  
  408fa2:	jle    0x408f5d
  408fa4:	adc    dh,dh
  408fa6:	test   eax,0xe770764b
  408fab:	daa    
  408fac:	lahf   
  408fad:	mov    ch,0xc
  408faf:	sbb    ch,BYTE PTR ds:0xa100ba4f
  408fb5:	mov    esi,0xd7c3a4a9
  408fba:	in     eax,0xc6
  408fbc:	das    
  408fbd:	jae    0x409022
  408fbf:	sbb    eax,0x84cf99fa
  408fc4:	jl     0x408fd0
  408fc6:	lahf   
  408fc7:	das    
  408fc8:	ins    BYTE PTR es:[edi],dx
  408fc9:	and    BYTE PTR [ecx-0x2b8eb98a],ch
  408fcf:	sub    eax,0x899ef161
  408fd4:	inc    esp
  408fd5:	mov    ebp,0xe9b969c1
  408fda:	int    0x4f
  408fdc:	aad    0x49
  408fde:	push   cs
  408fdf:	call   FWORD PTR [eax+0x70f9dcfc]
  408fe5:	and    al,0x68
  408fe7:	adc    edx,ebx
  408fe9:	data16 sahf 
  408feb:	xor    DWORD PTR [ecx],edi
  408fed:	pop    edi
  408fee:	lea    ecx,[ecx-0x21002fe0]
  408ff4:	iret   
  408ff5:	jmp    0x24fc:0x8bf09b0a
  408ffc:	xor    ebx,DWORD PTR [ebp+0x68]
  408fff:	or     BYTE PTR [ebx+0x10],bl
  409002:	shl    BYTE PTR [ebx-0x7e],1
  409005:	sbb    eax,0x6fc61363
  40900a:	add    al,0xad
  40900d:	(bad)  
  40900e:	fcomp  QWORD PTR [esi+edi*8]
  409011:	(bad)  
  409012:	mov    BYTE PTR [esi+0x2a86392e],cl
  409018:	or     DWORD PTR [ecx+0x79060bf1],0x6f
  40901f:	mov    esp,0x27d13d1c
  409024:	inc    eax
  409025:	inc    esi
  409026:	mov    al,ds:0x38cb239d
  40902b:	out    dx,eax
  40902c:	or     al,BYTE PTR [ebp+0x18c651a7]
  409032:	mov    edi,0xff5a6fc0
  409037:	out    dx,eax
  409038:	aam    0x4c
  40903a:	or     BYTE PTR [edx+0x27],bl
  40903d:	push   ss
  40903e:	pop    edi
  40903f:	rol    DWORD PTR [edx+0x3d],1
  409042:	mov    ah,0xf2
  409044:	iret   
  409045:	xor    DWORD PTR [edi+0x2c],ebp
  409048:	out    0xd,al
  40904a:	adc    DWORD PTR [eax+ebp*2+0x54],esp
  40904e:	mov    ah,0xc5
  409050:	jmp    0x409026
  409052:	jne    0x40901c
  409054:	dec    eax
  409055:	retf   
  409056:	cmp    DWORD PTR [ebp+0x17a1da52],edi
  40905c:	lea    edi,[esi+ebp*4-0x12]
  409060:	dec    ebx
  409061:	mov    eax,DWORD PTR [ebp-0x1d]
  409064:	pushw  0x6f
  409067:	std    
  409068:	sub    edi,DWORD PTR [eax-0x1e]
  40906b:	xchg   ecx,ebp
  40906d:	jne    0x4090cb
  40906f:	or     esi,0x8d6b8403
  409075:	inc    ecx
  409076:	xor    dh,BYTE PTR [ecx+0x1f]
  409079:	lods   eax,DWORD PTR ds:[esi]
  40907a:	or     DWORD PTR [ecx+0x46],edi
  40907d:	ret    0xbe08
  409080:	add    DWORD PTR [eax-0x2086631a],eax
  409086:	jae    0x409019
  409088:	cld    
  409089:	ret    
  40908a:	call   0x69e4:0xf89c72f5
  409091:	dec    edx
  409092:	stos   DWORD PTR es:[edi],eax
  409093:	scas   eax,DWORD PTR es:[edi]
  409094:	jo     0x4090d3
  409096:	int3   
  409097:	inc    edx
  409098:	int3   
  409099:	inc    ecx
  40909a:	dec    edi
  40909b:	jecxz  0x40904b
  40909d:	mov    edi,0x4cf791e
  4090a2:	inc    edx
  4090a3:	(bad)  
  4090a4:	lds    edx,FWORD PTR [esi+0x13678721]
  4090aa:	gs ja  0x4090ec
  4090ad:	adc    al,dh
  4090af:	cmp    esi,DWORD PTR ds:0x50b91001
  4090b5:	js     0x4090c4
  4090b7:	sub    bl,bl
  4090b9:	popa   
  4090ba:	aam    0xc5
  4090bc:	and    bl,BYTE PTR [ebx+0x19611515]
  4090c2:	outs   dx,BYTE PTR ds:[esi]
  4090c3:	clc    
  4090c4:	add    esp,DWORD PTR [edi-0x73dba184]
  4090ca:	sub    BYTE PTR [ebx-0x4f],bh
  4090cd:	add    BYTE PTR [ebp-0x2a],0xe6
  4090d1:	xchg   BYTE PTR [ecx-0x51],ch
  4090d4:	xchg   BYTE PTR [esi+0x6d],bh
  4090d7:	inc    ecx
  4090d8:	adc    ebx,ebp
  4090da:	retf   0x3ff8
  4090dd:	push   es
  4090de:	mov    bh,0xab
  4090e0:	loopne 0x4090b7
  4090e2:	(bad)  
  4090e3:	push   edx
  4090e4:	into   
  4090e5:	retf   
  4090e6:	jno    0x40913b
  4090e8:	mov    eax,0xe824680c
  4090ed:	ja     0x40916a
  4090ef:	mov    cl,0x62
  4090f1:	xlat   BYTE PTR ds:[ebx]
  4090f2:	ss cld 
  4090f4:	xchg   esi,eax
  4090f5:	fadd   DWORD PTR [edx]
  4090f7:	ret    0x79b2
  4090fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fb:	mov    WORD PTR [eax-0x26c9e1c4],ds
  409101:	mov    al,ds:0x4f85e949
  409106:	icebp  
  409107:	addps  xmm1,xmm6
  40910a:	test   al,0x2d
  40910c:	add    bh,cl
  40910e:	pop    esp
  40910f:	or     DWORD PTR [eax-0xb],0x8d3573da
  409116:	int    0xf
  409118:	rcr    BYTE PTR [edx-0x73ca1ce5],0xbf
  40911f:	push   ebp
  409120:	jns    0x4090b7
  409122:	ret    0x629d
  409125:	and    cl,BYTE PTR [edi]
  409127:	push   ebp
  409128:	mov    ebp,0xd628cb6e
  40912d:	mov    ds:0x984c19cc,al
  409132:	test   BYTE PTR [eax],cl
  409134:	cmp    ecx,DWORD PTR ds:0x364abf95
  40913a:	cmp    ah,BYTE PTR [ebp-0x7a]
  40913d:	mov    DWORD PTR [eax],esp
  40913f:	jle    0x409116
  409141:	fnstcw WORD PTR [esp+eax*1-0x7]
  409145:	std    
  409146:	mov    DWORD PTR [esi+0x27dc2090],edi
  40914c:	leave  
  40914d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40914e:	cli    
  40914f:	cmp    BYTE PTR [ebx-0x290e463e],dh
  409155:	push   ds
  409156:	add    ah,BYTE PTR [eax-0x7fdb61fc]
  40915c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915d:	bound  esi,QWORD PTR [edi+0x910cc09]
  409163:	icebp  
  409164:	xor    BYTE PTR [edx-0x49],bl
  409167:	jge    0x409190
  409169:	mov    es,WORD PTR [edi-0x3a]
  40916c:	aaa    
  40916d:	in     eax,0xc1
  40916f:	sbb    DWORD PTR [edx-0x2094f941],ecx
  409175:	mov    BYTE PTR [ebp-0x41],ah
  409178:	cwde   
  409179:	xchg   edi,eax
  40917a:	loopne 0x4091ed
  40917c:	dec    edx
  40917d:	jo     0x409106
  40917f:	int    0x46
  409181:	push   edx
  409182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409183:	outs   dx,BYTE PTR ds:[esi]
  409184:	repnz add ah,BYTE PTR [eax]
  409187:	jbe    0x40911d
  409189:	dec    esi
  40918a:	fwait
  40918b:	popa   
  40918c:	jo     0x40917e
  40918e:	jne    0x4091c4
  409190:	pop    ds
  409191:	jmp    0x72ff:0x8c2f4e60
  409198:	jae    0x4091fc
  40919a:	jg     0x409161
  40919c:	int    0x56
  40919e:	test   DWORD PTR [esp+ecx*2+0x19acb187],esi
  4091a5:	dec    ebp
  4091a6:	fs enter 0x20d6,0xca
  4091ab:	xchg   dh,bl
  4091ad:	add    ch,dl
  4091af:	sub    eax,0x1b3ad190
  4091b4:	mov    ah,0xb8
  4091b6:	sub    eax,0x24ca3158
  4091bb:	icebp  
  4091bc:	loop   0x40913f
  4091be:	cmp    eax,0xa27d46e0
  4091c3:	test   BYTE PTR [ebp-0x19c2ca09],ch
  4091c9:	xchg   esi,eax
  4091ca:	jnp    0x409235
  4091cc:	xchg   BYTE PTR [edi+0x19d758fd],al
  4091d2:	lods   al,BYTE PTR ds:[esi]
  4091d3:	inc    edi
  4091d4:	and    esi,esi
  4091d6:	or     al,0x83
  4091d8:	fmul   st(0),st
  4091da:	pop    eax
  4091db:	or     BYTE PTR [esi-0x2688db53],dh
  4091e1:	mov    ebx,0x2965fc9a
  4091e6:	pop    esp
  4091e7:	fcom   DWORD PTR [ebx]
  4091e9:	js     0x40920c
  4091eb:	stos   BYTE PTR es:[edi],al
  4091ec:	push   0xffffffd5
  4091ee:	sub    cl,BYTE PTR [ebx+0x7]
  4091f1:	dec    edx
  4091f2:	sub    eax,0x3a793a11
  4091f7:	in     eax,0xa1
  4091f9:	inc    esi
  4091fa:	mov    esi,0xc2c71bdf
  4091ff:	bound  edx,QWORD PTR [ebx+0x47]
  409202:	or     eax,0x8e6bf68d
  409207:	mov    ch,0xaf
  409209:	mov    ebx,0xb58e02d7
  40920e:	(bad)  
  40920f:	(bad)  
  409210:	out    dx,ax
  409212:	test   BYTE PTR [eax-0x1a],0x75
  409216:	mov    al,ds:0xfed4ee39
  40921b:	jge    0x40923a
  40921d:	jecxz  0x40922e
  40921f:	mov    bh,0x62
  409221:	test   eax,0x26cc5ed7
  409226:	sbb    ch,dl
  409228:	or     eax,0x27950c37
  40922d:	stos   BYTE PTR es:[edi],al
  40922e:	adc    al,0xb4
  409230:	push   0xd03511d9
  409235:	into   
  409236:	aas    
  409237:	xchg   ebp,eax
  409238:	int3   
  409239:	xchg   esi,eax
  40923a:	mov    ebx,0x640705e5
  40923f:	xor    DWORD PTR [esi-0x553528f7],0xffffffac
  409246:	pop    ecx
  409247:	icebp  
  409248:	cmp    eax,0x8e2e70d6
  40924d:	xchg   esp,eax
  40924e:	xor    BYTE PTR [esi+edx*4],ch
  409251:	jns    0x4091d3
  409253:	mov    ebp,ebp
  409255:	mov    bl,0x78
  409257:	jmp    0x4091fe
  409259:	aas    
  40925a:	xchg   esi,eax
  40925b:	stc    
  40925c:	jl     0x40923d
  40925e:	fs aam 0x1
  409261:	pushf  
  409262:	aad    0xec
  409264:	rcr    bl,cl
  409266:	push   es
  409267:	pop    edi
  409268:	scas   eax,DWORD PTR es:[edi]
  409269:	cs inc edi
  40926b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40926c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926d:	dec    ecx
  40926e:	push   0x7ac1e548
  409273:	(bad)  
  409274:	mov    ds:0x390c076e,al
  409279:	lods   al,BYTE PTR ds:[esi]
  40927a:	xchg   ebx,eax
  40927b:	in     eax,0x13
  40927d:	mov    ebx,0xfeafb926
  409282:	xchg   ebp,eax
  409283:	mov    ecx,0xd3c6d923
  409288:	sub    DWORD PTR [eax],edx
  40928a:	xor    bh,BYTE PTR [ebx+0x79688e1c]
  409290:	mov    WORD PTR [edx+0x2695b070],cs
  409296:	dec    ebp
  409297:	into   
  409298:	in     al,0x78
  40929a:	sahf   
  40929b:	mov    esp,0xa8296b3b
  4092a0:	call   0xfa5a302
  4092a5:	dec    eax
  4092a6:	xchg   esp,eax
  4092a7:	cmp    bl,BYTE PTR [eax+0x16]
  4092aa:	mov    al,0xf0
  4092ac:	mov    dl,0x7a
  4092ae:	mov    ch,0xcb
  4092b0:	out    dx,eax
  4092b1:	cli    
  4092b2:	nop
  4092b3:	inc    ecx
  4092b4:	pusha  
  4092b5:	mov    ds:0x1304756f,eax
  4092ba:	ss and eax,0x9cd31c4b
  4092c0:	pop    ebx
  4092c1:	xor    edi,DWORD PTR fs:[edx+edi*4+0x4f]
  4092c6:	jae    0x409344
  4092c8:	aaa    
  4092c9:	int3   
  4092ca:	mov    edx,0xef0f79ae
  4092cf:	sub    cl,BYTE PTR es:[ecx]
  4092d2:	pop    ebp
  4092d3:	fimul  DWORD PTR [ecx]
  4092d5:	cli    
  4092d6:	loope  0x4092ee
  4092d8:	js     0x40925e
  4092da:	(bad)  
  4092db:	sbb    BYTE PTR [edi+0x5b69e633],ch
  4092e1:	or     edi,DWORD PTR [edx]
  4092e3:	aad    0xdb
  4092e5:	aam    0x14
  4092e7:	or     edi,DWORD PTR [ecx]
  4092e9:	pop    es
  4092ea:	mov    esi,0x6d849ed1
  4092ef:	enter  0xb120,0x5f
  4092f3:	sub    DWORD PTR [eax-0x65],ecx
  4092f6:	std    
  4092f7:	pop    ss
  4092f8:	dec    ecx
  4092f9:	lods   eax,DWORD PTR ds:[esi]
  4092fa:	es pop edi
  4092fc:	and    ebx,DWORD PTR [eax+0x10157083]
  409302:	test   DWORD PTR [edi+ebp*4],edx
  409305:	fist   WORD PTR [esi]
  409308:	lods   eax,DWORD PTR ds:[esi]
  409309:	icebp  
  40930a:	adc    edi,DWORD PTR [ecx+edx*1+0x7119279b]
  409311:	dec    edx
  409312:	out    dx,eax
  409313:	xchg   esp,eax
  409314:	push   ebx
  409315:	xchg   edi,eax
  409316:	scas   eax,DWORD PTR es:[edi]
  409317:	not    ah
  409319:	adc    ch,BYTE PTR [ecx]
  40931b:	pop    es
  40931c:	repz mov edi,0x8fa3ecd7
  409322:	outs   dx,DWORD PTR ds:[esi]
  409323:	add    al,0xb2
  409325:	fst    QWORD PTR [edx+0x7]
  409328:	push   eax
  409329:	scas   al,BYTE PTR es:[edi]
  40932a:	dec    ebx
  40932b:	lods   eax,DWORD PTR ds:[esi]
  40932c:	mov    ecx,0x17deb85c
  409331:	mov    ah,0x72
  409333:	pop    esi
  409334:	mov    BYTE PTR [ebx-0x1255ee45],al
  40933a:	fsubr  DWORD PTR [edx]
  40933c:	jns    0x4092c1
  40933e:	ret    0x6ffc
  409341:	or     ebx,edi
  409343:	xor    eax,0x216b561e
  409348:	aas    
  409349:	or     BYTE PTR [ecx+0x25a55eb9],ah
  40934f:	rol    BYTE PTR [esi],0x37
  409352:	xor    eax,0x1f45fb68
  409357:	das    
  409358:	dec    DWORD PTR [edx]
  40935a:	jecxz  0x40932b
  40935c:	sub    al,0x9e
  40935e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935f:	jmp    0xc10d:0x10cea50d
  409366:	adc    ebx,eax
  409368:	sbb    eax,DWORD PTR [edi]
  40936a:	scas   eax,DWORD PTR es:[edi]
  40936b:	arpl   WORD PTR ds:0xafeb745e,di
  409371:	fist   DWORD PTR [eax-0x4f087970]
  409377:	stos   DWORD PTR es:[edi],eax
  409378:	jp     0x409365
  40937a:	mov    ecx,0xc8e0bda0
  40937f:	les    ebp,FWORD PTR [ebp+0x2941028e]
  409385:	pushf  
  409386:	inc    esp
  409387:	stos   DWORD PTR es:[edi],eax
  409388:	pushf  
  409389:	push   ecx
  40938a:	adc    al,BYTE PTR [ecx+0x1e]
  40938d:	mov    bl,0xd5
  40938f:	dec    esi
  409390:	gs loopne 0x40931d
  409393:	lea    cx,[edi-0x63c2c6ed]
  40939a:	sub    DWORD PTR [esi+0x26e4b6fe],esp
  4093a0:	adc    DWORD PTR ds:0xff0cf98c,0xffffffa3
  4093a7:	mov    esi,0xb0556a56
  4093ac:	fild   DWORD PTR fs:0x828601d0
  4093b3:	outs   dx,DWORD PTR ds:[esi]
  4093b4:	aaa    
  4093b5:	jo     0x4093fd
  4093b7:	int3   
  4093b8:	popa   
  4093b9:	jp     0x409385
  4093bb:	jo     0x409389
  4093bd:	adc    eax,ebx
  4093bf:	or     eax,0xad5378d7
  4093c4:	loope  0x40941d
  4093c6:	pop    esi
  4093c7:	in     eax,dx
  4093c8:	mov    ecx,0x5f814d01
  4093cd:	ins    DWORD PTR es:[edi],dx
  4093ce:	int3   
  4093cf:	into   
  4093d0:	in     eax,0xa6
  4093d2:	(bad)  
  4093d4:	aad    0x45
  4093d6:	sub    eax,0x8c138a3b
  4093db:	aas    
  4093dc:	jbe    0x4093b6
  4093de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093df:	jne    0x4093bc
  4093e1:	mov    al,0x6a
  4093e3:	pop    ds
  4093e4:	sub    DWORD PTR [ecx+0xb],0x33325528
  4093eb:	mov    cl,0x3b
  4093ed:	push   edx
  4093ee:	shl    DWORD PTR [eax+0x30],0xf
  4093f2:	cs ins DWORD PTR es:[edi],dx
  4093f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093f5:	pop    edi
  4093f6:	aas    
  4093f7:	mov    dh,0x6
  4093f9:	sti    
  4093fa:	dec    edx
  4093fb:	out    dx,eax
  4093fc:	loop   0x409475
  4093fe:	mov    ah,0xf2
  409400:	stos   BYTE PTR es:[edi],al
  409401:	jge    0x4093a4
  409403:	das    
  409404:	jb     0x409429
  409406:	scas   al,BYTE PTR es:[edi]
  409407:	cmp    dh,BYTE PTR [esi+0x66c72e08]
  40940d:	sbb    DWORD PTR [ebx-0x44],esi
  409410:	sti    
  409411:	adc    esi,edi
  409413:	jns    0x40942a
  409415:	and    DWORD PTR [edx],ebx
  409417:	sub    al,bh
  409419:	in     al,0xf9
  40941b:	lods   al,BYTE PTR ds:[esi]
  40941c:	or     BYTE PTR [ebp-0x46e2cf6b],bh
  409422:	mov    ah,0x14
  409424:	and    al,0x10
  409426:	icebp  
  409427:	popf   
  409428:	xchg   ecx,eax
  409429:	mov    esp,0x270141c6
  40942e:	leave  
  40942f:	inc    edi
  409430:	jbe    0x40949a
  409432:	aam    0x1b
  409434:	(bad)  
  409435:	pop    ebp
  409436:	daa    
  409437:	stc    
  409438:	rol    BYTE PTR [eax+eax*4],cl
  40943b:	arpl   WORD PTR [ebx+0x8e48359],ax
  409441:	or     eax,0xa240a818
  409446:	lods   eax,DWORD PTR ds:[esi]
  409447:	mov    eax,ds:0x459a9bac
  40944c:	rcr    BYTE PTR [edx-0x536ef671],cl
  409452:	cmp    DWORD PTR [ebp-0x613c5059],esp
  409458:	pop    es
  409459:	lods   al,BYTE PTR ds:[esi]
  40945a:	pop    esp
  40945b:	imul   ecx,DWORD PTR [ebp+0x7db9bbec],0xffffffd8
  409462:	or     DWORD PTR [ebx+eax*1+0x2c],edi
  409466:	dec    edx
  409467:	inc    edi
  409468:	dec    edx
  409469:	fabs   
  40946b:	daa    
  40946c:	dec    esp
  40946d:	mov    ebp,0x5ce2c6f9
  409472:	mov    ds:0xa906fe93,al
  409477:	jbe    0x409414
  409479:	ins    BYTE PTR es:[edi],dx
  40947a:	cld    
  40947b:	inc    ebx
  40947c:	mov    dh,al
  40947e:	mov    dh,0x9f
  409480:	rcl    BYTE PTR [ebp-0x5126ff6b],1
  409486:	cmc    
  409487:	fist   WORD PTR [bp-0x6b]
  40948b:	call   0x5661878f
  409490:	dec    esp
  409491:	pop    ecx
  409492:	jo     0x40950a
  409494:	fdiv   DWORD PTR [ebp-0x63c95e8c]
  40949a:	and    ebp,DWORD PTR [edx-0x4d6c18d7]
  4094a0:	jge    0x40949a
  4094a2:	bound  ebx,QWORD PTR [edi-0x4fa52cd5]
  4094a8:	inc    ebx
  4094a9:	or     al,0x2b
  4094ab:	test   BYTE PTR es:[esp+edx*8-0x6de43730],cl
  4094b3:	nop
  4094b4:	add    al,0x78
  4094b6:	outs   dx,DWORD PTR ds:[esi]
  4094b7:	lods   eax,DWORD PTR ds:[esi]
  4094b8:	inc    ecx
  4094b9:	test   eax,0xc7fa33db
  4094be:	jbe    0x4094fb
  4094c0:	pop    esi
  4094c1:	int3   
  4094c2:	xchg   edx,eax
  4094c3:	jmp    0x172b4939
  4094c8:	fst    QWORD PTR [ebp+0x21]
  4094cb:	cs cmc 
  4094cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ce:	ja     0x40951e
  4094d0:	add    al,0x2c
  4094d2:	in     al,0xad
  4094d4:	inc    ebp
  4094d5:	push   esp
  4094d6:	sbb    eax,esp
  4094d8:	test   BYTE PTR [esp+eax*2+0x59],0xf7
  4094dd:	or     al,0xbb
  4094df:	mov    al,0x8
  4094e1:	dec    esp
  4094e2:	(bad)  
  4094e3:	mov    BYTE PTR [eax],ch
  4094e5:	and    DWORD PTR [eax+0x5c],edx
  4094e8:	xchg   edx,eax
  4094e9:	and    DWORD PTR [esi+0x217efd98],0xeff47cbe
  4094f3:	sub    BYTE PTR [esi-0x4c],0xd6
  4094f7:	test   ah,cl
  4094f9:	adc    DWORD PTR [ebx],eax
  4094fb:	das    
  4094fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fd:	pop    edx
  4094fe:	or     BYTE PTR [ebx+0x41f796f],dl
  409504:	lods   eax,DWORD PTR ds:[esi]
  409505:	xchg   DWORD PTR [ebx-0x5e3fffe1],eax
  40950b:	out    0xa,al
  40950d:	test   eax,0xbc06f2d0
  409512:	push   cs
  409513:	mov    ebp,0xa0849be0
  409518:	mov    dl,0x2b
  40951a:	pusha  
  40951b:	sar    ebp,1
  40951d:	fisttp DWORD PTR cs:[ecx-0x4a46c834]
  409524:	dec    esp
  409525:	jmp    esp
  409527:	mov    dh,0x27
  409529:	mov    ebp,0xd4b3312b
  40952e:	add    al,0xa9
  409530:	mov    eax,0xc1fd74a5
  409535:	add    esp,eax
  409537:	push   ds
  409538:	dec    esi
  409539:	or     bl,BYTE PTR [eax-0x6d]
  40953c:	mov    esi,0x2b0d04e
  409541:	sub    DWORD PTR [edx-0x28],edi
  409544:	nop
  409545:	ja     0x40953f
  409547:	sub    DWORD PTR [ecx+0x5],esp
  40954a:	xor    esi,DWORD PTR [esi]
  40954c:	mov    cl,0xc0
  40954e:	test   BYTE PTR ds:0x489e809b,al
  409554:	jb     0x4095a9
  409556:	sub    esi,DWORD PTR [eax+0x6]
  409559:	sbb    BYTE PTR [edx+0x1f5921cb],dh
  40955f:	mov    edi,0xc93eeea3
  409564:	add    BYTE PTR [ebp-0x5ca1c225],bh
  40956a:	jbe    0x40951e
  40956c:	loope  0x409550
  40956e:	cwde   
  40956f:	fmul   QWORD PTR [eax]
  409571:	add    eax,0xbd810517
  409576:	sbb    edx,DWORD PTR ds:0xec949d77
  40957c:	pop    eax
  40957d:	xchg   ecx,eax
  40957e:	lock scas eax,DWORD PTR es:[edi]
  409580:	push   es
  409581:	fs ret 0x35d9
  409585:	pop    ebp
  409586:	pop    edi
  409587:	adc    al,0xe
  409589:	test   DWORD PTR [ecx],0x613f3911
  40958f:	xor    eax,0x6e6cf395
  409594:	mov    cl,0x7a
  409596:	sbb    BYTE PTR [ebp+esi*4-0x48],dh
  40959a:	pop    eax
  40959b:	add    al,0xd4
  40959d:	sub    esi,0xfffffff3
  4095a0:	and    eax,0x35bca6ef
  4095a5:	jmp    0x341a3621
  4095aa:	pop    ss
  4095ab:	mov    edi,0xb17ea139
  4095b0:	push   esi
  4095b1:	arpl   WORD PTR [eax+0x50],bp
  4095b4:	ja     0x409609
  4095b6:	nop
  4095b7:	xchg   edx,eax
  4095b8:	neg    DWORD PTR [ebp-0x5a118850]
  4095be:	lock int3 
  4095c0:	mov    al,ds:0xd6a5f75d
  4095c5:	xchg   ebx,eax
  4095c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c7:	add    al,BYTE PTR [edi-0x80]
  4095ca:	aaa    
  4095cb:	jne    0x4095fc
  4095cd:	adc    dl,BYTE PTR [ebx+0x6638b42d]
  4095d3:	int3   
  4095d4:	mov    bh,0x17
  4095d6:	mov    eax,ds:0x5d9b490
  4095db:	xor    BYTE PTR [esi+0x1326595c],al
  4095e1:	test   al,0x5c
  4095e3:	dec    eax
  4095e4:	sub    BYTE PTR [ecx+0x20],bh
  4095e7:	pop    ebp
  4095e8:	test   BYTE PTR [ecx+0x6d],cl
  4095eb:	xor    al,BYTE PTR [esi-0x26]
  4095ee:	mov    gs,ebx
  4095f0:	adc    ebp,DWORD PTR [ecx+0x6b4bdaae]
  4095f6:	(bad)  
  4095f7:	(bad)  
  4095f8:	mov    eax,0x7283f7ec
  4095fd:	les    ebx,FWORD PTR ds:0x26a8c188
  409603:	add    BYTE PTR es:0xadc65530,bl
  40960a:	lock ret 
  40960c:	imul   esp,DWORD PTR [ebx+eax*2],0xffffffd0
  409610:	femms  
  409612:	scas   al,BYTE PTR es:[edi]
  409613:	xor    al,0xc8
  409615:	and    ebx,DWORD PTR [eax+0x66]
  409618:	inc    edx
  409619:	lock jb 0x409621
  40961c:	xor    al,0xbf
  40961e:	push   ecx
  40961f:	sub    DWORD PTR [ebx+0x3583961e],esp
  409625:	dec    ebx
  409626:	leave  
  409627:	pop    ds
  409628:	mov    ?,esi
  40962a:	repz stc 
  40962c:	lds    edx,FWORD PTR [esi]
  40962e:	cmp    DWORD PTR [esi],esi
  409630:	mov    ch,0xd8
  409632:	mov    eax,ds
  409634:	sub    esi,edi
  409636:	and    ebx,DWORD PTR [esp+eiz*8]
  409639:	test   DWORD PTR [esi-0x2c58596],eax
  40963f:	call   0x4f9:0xa4259e21
  409646:	pusha  
  409647:	sti    
  409648:	rcr    esi,cl
  40964a:	mov    eax,ds:0xc98f7dc
  40964f:	sub    BYTE PTR [ebx+0x56],ch
  409652:	out    dx,al
  409653:	mov    edi,0x4ba4c7b0
  409658:	shl    ecx,cl
  40965a:	cmp    eax,0x3ee06eba
  40965f:	fwait
  409660:	aam    0x94
  409662:	mov    esp,DWORD PTR [edi]
  409664:	sbb    dl,dl
  409666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409667:	ja     0x4096b5
  409669:	inc    ebx
  40966a:	mov    ecx,0x29fe9939
  40966f:	nop
  409670:	adc    eax,0xd0cc40fb
  409675:	rcl    BYTE PTR [edx+ecx*1-0x2f],0x4d
  40967a:	mov    eax,0x79b272f0
  40967f:	nop
  409680:	mov    ebp,0xc8ac17cd
  409685:	aam    0xfc
  409687:	dec    ecx
  409688:	xchg   ebx,eax
  409689:	data16 and al,0xc7
  40968c:	jae    0x409685
  40968e:	push   es
  40968f:	add    DWORD PTR [eax],0x26
  409692:	inc    edi
  409693:	iret   
  409694:	mov    DWORD PTR [esi],edx
  409696:	std    
  409697:	xlat   BYTE PTR ds:[ebx]
  409698:	mov    bh,BYTE PTR [edx+0x7df7492e]
  40969e:	xchg   DWORD PTR [ecx],ebx
  4096a0:	pop    ebx
  4096a1:	mov    al,ds:0xf3b8b2
  4096a6:	dec    edx
  4096a7:	mov    ah,0x23
  4096a9:	mov    DWORD PTR [edx],ecx
  4096ab:	jmp    0x276e838
  4096b0:	outs   dx,DWORD PTR ds:[esi]
  4096b1:	(bad)  
  4096b2:	xor    BYTE PTR [esi+0x630baf7b],dl
  4096b8:	sbb    ah,0xee
  4096bb:	mov    ch,0x89
  4096bd:	daa    
  4096be:	sbb    edx,DWORD PTR [edx-0x9]
  4096c1:	lock and al,0xf9
  4096c4:	out    0x25,al
  4096c6:	or     ebp,DWORD PTR [esi+0x48]
  4096c9:	mov    dh,0x3b
  4096cb:	in     eax,0x6f
  4096cd:	(bad)  
  4096ce:	sbb    BYTE PTR fs:[esi],dh
  4096d1:	lock add DWORD PTR ds:0x7af9ff3b,0x7083ffeb
  4096dc:	scas   al,BYTE PTR es:[edi]
  4096dd:	cmc    
  4096de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096df:	jle    0x409677
  4096e1:	inc    esi
  4096e2:	and    ah,BYTE PTR [esi+0x296b5d75]
  4096e8:	arpl   WORD PTR [ecx],cx
  4096ea:	sti    
  4096eb:	rol    esi,1
  4096ed:	sahf   
  4096ee:	int3   
  4096ef:	es xchg esp,eax
  4096f1:	jns    0x409746
  4096f3:	cli    
  4096f4:	jno    0x409690
  4096f6:	and    eax,0x5d418ea7
  4096fb:	into   
  4096fc:	mulps  xmm4,XMMWORD PTR [ebx-0x29b24520]
  409703:	pop    esp
  409704:	push   edi
  409705:	mov    eax,edi
  409707:	inc    edi
  409708:	dec    ebx
  409709:	mov    dh,0x4e
  40970b:	mov    ecx,0x81254ec8
  409710:	daa    
  409711:	jl     0x40975e
  409713:	in     eax,dx
  409714:	mov    BYTE PTR [ecx-0x52],bl
  409717:	jb     0x409763
  409719:	cs xchg ecx,eax
  40971b:	or     eax,0x78877d45
  409720:	mov    ecx,0x629fe0fe
  409725:	pop    ds
  409726:	shl    BYTE PTR [ecx+eax*2-0x6],cl
  40972a:	pop    ecx
  40972b:	fiadd  WORD PTR [ebp+0x2c]
  40972e:	cdq    
  40972f:	stos   DWORD PTR es:[edi],eax
  409730:	cwde   
  409731:	mov    dh,0xff
  409733:	push   ecx
  409734:	fisubr DWORD PTR [esi+0x1e]
  409737:	loope  0x409765
  409739:	mov    dh,0x2
  40973b:	gs add al,0xec
  40973e:	imul   ecx,DWORD PTR [ecx],0x9db563c5
  409744:	pop    esp
  409745:	xlat   BYTE PTR ds:[ebx]
  409746:	pop    ebx
  409747:	out    dx,eax
  409748:	sbb    al,0xb9
  40974a:	push   ecx
  40974b:	push   eax
  40974c:	cwde   
  40974d:	aam    0x21
  40974f:	jge    0x4096df
  409751:	adc    eax,0x2811e3c6
  409756:	and    DWORD PTR [ecx+edx*4+0x6702747b],esp
  40975d:	mov    ch,0xae
  40975f:	pop    ds
  409760:	jo     0x409707
  409762:	mov    ?,WORD PTR [edx]
  409764:	adc    ah,BYTE PTR [eax-0x381a6de6]
  40976a:	push   ss
  40976b:	and    BYTE PTR [bx-0x70],0x0
  409770:	sti    
  409771:	scas   al,BYTE PTR es:[edi]
  409772:	inc    ebx
  409773:	xor    ah,dl
  409775:	sbb    bl,BYTE PTR [eax+0x23]
  409778:	inc    DWORD PTR ds:0x9cc44631
  40977e:	ds out dx,eax
  409780:	ror    DWORD PTR [ecx],0x3d
  409783:	dec    ebx
  409784:	aam    0x73
  409786:	mov    ebp,0xb877ed9b
  40978b:	sbb    eax,0xea4d6fd2
  409790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409791:	cmc    
  409792:	mov    BYTE PTR es:[ebp-0x56483a40],cl
  409799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40979a:	popf   
  40979b:	pop    edx
  40979c:	call   0x77dee510
  4097a1:	push   ecx
  4097a2:	addr16 jo 0x4097b7
  4097a5:	sub    al,BYTE PTR [edx+0x6e]
  4097a8:	je     0x409824
  4097aa:	jmp    0x409820
  4097ac:	sti    
  4097ad:	or     al,0xf4
  4097af:	stc    
  4097b0:	mov    edx,0x57bb7588
  4097b5:	mov    DWORD PTR [ecx+0x6d],eax
  4097b8:	sbb    BYTE PTR [ecx+0x38],cl
  4097bb:	dec    ecx
  4097bc:	fidiv  WORD PTR ds:0x6bc00af5
  4097c2:	pop    edi
  4097c3:	pop    esi
  4097c4:	enter  0x401b,0xc2
  4097c8:	push   ds
  4097c9:	mov    cl,0xc
  4097cb:	je     0x409817
  4097cd:	retf   0xdc87
  4097d0:	out    dx,al
  4097d1:	outs   dx,DWORD PTR ds:[esi]
  4097d2:	mov    ecx,0xe07cb4e7
  4097d7:	arpl   WORD PTR [edx-0x630a03ef],cx
  4097dd:	clc    
  4097de:	popf   
  4097df:	push   0x60
  4097e1:	add    esp,DWORD PTR [edx-0x42]
  4097e4:	adc    DWORD PTR [edi+eiz*2+0x7975feaa],0x9bf9b1e3
  4097ef:	inc    ebp
  4097f0:	in     al,0x25
  4097f2:	jge    0x409850
  4097f4:	js     0x4097b1
  4097f6:	xor    ah,BYTE PTR [ebx+0x5590ab45]
  4097fc:	shl    esi,cl
  4097fe:	mov    eax,ds:0x79f88b6e
  409803:	sbb    edx,DWORD PTR [eax-0x21]
  409806:	add    al,0x1
  409808:	jmp    0x4d3a:0x4504f0d3
  40980f:	retf   
  409810:	cvttps2pi mm5,QWORD PTR [ebx]
  409813:	push   ss
  409814:	mov    DWORD PTR [edi+0x3e],esp
  409817:	sub    eax,ecx
  409819:	data16 (bad) 
  40981b:	sbb    DWORD PTR [esi+edi*8-0x42ed2b02],esp
  409822:	push   ebx
  409823:	mov    ch,dh
  409825:	pop    ebp
  409826:	or     esi,edx
  409828:	test   eax,0x178dbaa4
  40982d:	add    eax,eax
  40982f:	bnd je 0x409872
  409832:	imul   esi,DWORD PTR [esi-0x3c8b97b2],0x801fa43a
  40983c:	(bad)  
  40983d:	ins    DWORD PTR es:[edi],dx
  40983e:	mov    ebp,0x15e16a6e
  409843:	inc    ebp
  409844:	jne    0x409871
  409846:	les    ebx,FWORD PTR [esi]
  409848:	and    dh,BYTE PTR [edx-0x6b823e2e]
  40984e:	shl    cl,cl
  409850:	adc    eax,0xc3bd7d29
  409855:	mov    al,ds:0xe9df8db8
  40985a:	fisub  DWORD PTR [esi+0xe]
  40985d:	jmp    0x4097e1
  40985f:	pop    ebp
  409860:	jb     0x409811
  409862:	in     al,dx
  409863:	inc    esp
  409864:	add    ecx,ecx
  409866:	inc    edi
  409867:	or     DWORD PTR [edx],eax
  409869:	mov    ?,WORD PTR [esi-0x460a6bb9]
  40986f:	cmp    BYTE PTR [edi+0x3],al
  409872:	in     al,0x38
  409874:	idiv   DWORD PTR [edx+0x258094a6]
  40987a:	lea    edi,[ebx+0x1e]
  40987d:	xchg   DWORD PTR [ebx-0x25393632],ebx
  409883:	cwde   
  409884:	pop    ebx
  409885:	cwde   
  409886:	and    esi,DWORD PTR [edx]
  409888:	xchg   edx,eax
  409889:	xor    al,BYTE PTR [ebx+0x52]
  40988c:	popf   
  40988d:	popa   
  40988e:	lods   al,BYTE PTR ds:[esi]
  40988f:	xchg   ecx,eax
  409890:	xchg   BYTE PTR [esi],bl
  409892:	jl     0x409829
  409894:	push   eax
  409895:	xlat   BYTE PTR ds:[ebx]
  409896:	stos   BYTE PTR es:[edi],al
  409897:	fsub   QWORD PTR ds:0x68a03361
  40989d:	retf   
  40989e:	xlat   BYTE PTR ds:[ebx]
  40989f:	pusha  
  4098a0:	dec    esi
  4098a1:	adc    cl,BYTE PTR [ebx+esi*1]
  4098a4:	scas   al,BYTE PTR es:[edi]
  4098a5:	pop    es
  4098a6:	ficom  WORD PTR [edx+edi*8+0x516e134f]
  4098ad:	and    al,0x50
  4098af:	xchg   ebx,eax
  4098b0:	fnsave [esi+edx*4]
  4098b3:	sti    
  4098b4:	(bad)  
  4098b5:	psubd  mm0,mm0
  4098b8:	cs je  0x4098e3
  4098bb:	mov    ds:0x782d395,al
  4098c0:	add    al,0xa0
  4098c2:	out    0xe7,eax
  4098c4:	in     al,0x3e
  4098c6:	xor    eax,0x20b04067
  4098cb:	fst    DWORD PTR [ebx]
  4098cd:	pop    es
  4098ce:	xchg   esi,eax
  4098cf:	fimul  WORD PTR [edi]
  4098d1:	adc    BYTE PTR [ebp-0x1e9cdc1f],al
  4098d7:	push   esp
  4098d8:	scas   eax,DWORD PTR es:[edi]
  4098d9:	and    dh,BYTE PTR [edi-0x7bedda00]
  4098df:	leave  
  4098e0:	mov    esi,cs
  4098e2:	nop
  4098e3:	lods   al,BYTE PTR ds:[esi]
  4098e4:	push   ebx
  4098e5:	sti    
  4098e6:	adc    edi,ebp
  4098e8:	xchg   ebp,eax
  4098e9:	sub    BYTE PTR [ecx-0x5b],ch
  4098ec:	ficomp WORD PTR [eax+0x18]
  4098ef:	pop    ss
  4098f0:	push   ecx
  4098f1:	imul   edx,ebx,0x6e
  4098f4:	push   ss
  4098f5:	jge    0x4098a8
  4098f7:	loopne 0x4098b4
  4098f9:	cmp    eax,DWORD PTR [eax-0x33]
  4098fc:	mov    ebx,0x35b3bd4
  409901:	pop    ebx
  409902:	rcr    DWORD PTR [ebp-0x3058751a],0x4
  409909:	cli    
  40990a:	and    DWORD PTR [edx+0x49],ebp
  40990d:	lods   al,BYTE PTR ds:[esi]
  40990e:	mov    eax,ds:0xcdcaf3db
  409913:	ficomp DWORD PTR [ebx]
  409915:	xor    ah,al
  409917:	add    cl,BYTE PTR [edi]
  409919:	dec    ebx
  40991a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40991b:	retf   0x676d
  40991e:	push   es
  40991f:	push   es
  409920:	aaa    
  409921:	in     eax,0x20
  409923:	pcmpgtw mm2,QWORD PTR [esi]
  409926:	popf   
  409927:	jmp    0x4617:0x530197e7
  40992e:	push   ss
  40992f:	pusha  
  409930:	out    0x22,eax
  409932:	(bad)  
  409933:	sbb    eax,0x97f45a47
  409938:	ror    DWORD PTR [eax],cl
  40993a:	sub    al,0x2c
  40993c:	pop    edi
  40993d:	adc    al,0xa6
  40993f:	icebp  
  409940:	and    esp,DWORD PTR [ecx-0x2e]
  409943:	adc    eax,0xcb8b4fb6
  409948:	stc    
  409949:	test   dl,0xce
  40994c:	sbb    DWORD PTR [edi],edi
  40994e:	adc    DWORD PTR [ecx-0x7a36be00],0xb0f8581d
  409958:	ret    0xf228
  40995b:	cmp    edx,DWORD PTR [edi+0x5980fe35]
  409961:	or     DWORD PTR [esi+eiz*2],edx
  409964:	pop    es
  409965:	dec    esp
  409966:	(bad)  
  409968:	fld    st(4)
  40996a:	pop    ebx
  40996b:	idiv   BYTE PTR [ebp+0x50293668]
  409971:	xor    edx,DWORD PTR [edx+0x17]
  409974:	inc    esi
  409975:	lds    ebp,FWORD PTR [ebp+0x41]
  409978:	add    DWORD PTR [ebp-0x37],0xb02bf9ad
  40997f:	scas   eax,DWORD PTR es:[edi]
  409980:	bound  eax,QWORD PTR [edx]
  409982:	xor    BYTE PTR ds:0x2756f2c9,ah
  409988:	fimul  WORD PTR [edx+0x1262b06]
  40998e:	cwde   
  40998f:	push   0x3ac729a4
  409994:	xchg   esp,eax
  409995:	loopne 0x40991c
  409997:	mov    dh,0x78
  409999:	jne    0x40995b
  40999b:	sar    esi,cl
  40999d:	mov    cl,0xe0
  40999f:	stc    
  4099a0:	cld    
  4099a1:	loope  0x409a1c
  4099a3:	aas    
  4099a4:	add    al,0xd8
  4099a6:	jge    0x4099ac
  4099a8:	jmp    0x409a20
  4099aa:	icebp  
  4099ab:	mov    ebx,0x80d24da9
  4099b0:	lds    esp,FWORD PTR [ecx]
  4099b2:	iret   
  4099b3:	or     DWORD PTR [edi+esi*8],esi
  4099b6:	sbb    ebx,ecx
  4099b8:	xor    edx,DWORD PTR [eax]
  4099ba:	sub    ch,bh
  4099bc:	push   eax
  4099bd:	sar    BYTE PTR [eax],cl
  4099bf:	jl     0x4099e7
  4099c1:	dec    ebx
  4099c2:	aas    
  4099c3:	or     ch,BYTE PTR [edx-0x65]
  4099c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c7:	inc    bp
  4099c9:	jl     0x4099ae
  4099cb:	or     al,0x3a
  4099cd:	shr    BYTE PTR [edi+0x4901b988],1
  4099d3:	fwait
  4099d4:	cmp    DWORD PTR [edx+0x28],esi
  4099d7:	adc    edi,DWORD PTR [ebx+0x2e]
  4099da:	int    0xfc
  4099dc:	lock ror DWORD PTR [eax-0x24],cl
  4099e0:	stos   DWORD PTR es:[edi],eax
  4099e1:	push   edi
  4099e2:	imul   eax,esp,0x3b33a15
  4099e8:	mov    ebp,0x4b2e2510
  4099ed:	test   eax,0x23021f8a
  4099f2:	bound  edi,QWORD PTR [ebx-0x5e37feb8]
  4099f8:	pop    ebx
  4099f9:	shl    BYTE PTR [ebx-0x564aa07],0x39
  409a00:	nop
  409a01:	rol    DWORD PTR [ecx*4-0x79e37458],1
  409a08:	sbb    esp,eax
  409a0a:	out    dx,eax
  409a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a0c:	call   0xacd6:0x2f89418a
  409a13:	push   cs
  409a14:	xor    al,ah
  409a16:	mov    ebp,0xdb10df3f
  409a1b:	fimul  DWORD PTR [eax+0x58707e2]
  409a21:	add    dl,dl
  409a23:	sar    ebx,1
  409a25:	xchg   edx,eax
  409a26:	shl    ebx,1
  409a28:	int    0xea
  409a2a:	or     dl,BYTE PTR [ecx-0x2fb9e07f]
  409a30:	stos   DWORD PTR es:[edi],eax
  409a31:	cmp    al,0xff
  409a33:	loop   0x409a31
  409a35:	test   BYTE PTR [edx-0x4c1eed41],ch
  409a3b:	and    DWORD PTR [esi],eax
  409a3d:	adc    eax,0x31adbbc9
  409a42:	cmp    dl,ch
  409a44:	hlt    
  409a45:	aaa    
  409a46:	push   edx
  409a48:	jl     0x4099f7
  409a4a:	call   0x926d57bd
  409a4f:	mov    eax,0xf23d2b83
  409a54:	add    DWORD PTR [ebx-0x28],esi
  409a57:	xchg   edi,eax
  409a58:	push   ds
  409a59:	in     eax,0xc8
  409a5b:	and    al,0x52
  409a5d:	fs pushf 
  409a5f:	shr    DWORD PTR [esi],cl
  409a61:	icebp  
  409a62:	fsubr  QWORD PTR [eax+0x4e]
  409a65:	retf   
  409a66:	inc    edi
  409a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a68:	pushf  
  409a69:	pusha  
  409a6a:	mov    ebx,eax
  409a6c:	mov    edx,0x4c2e27d3
  409a71:	js     0x409a50
  409a73:	dec    edx
  409a74:	or     DWORD PTR [esi],ebx
  409a76:	dec    esp
  409a77:	push   es
  409a78:	ret    
  409a79:	mov    bh,0x89
  409a7b:	and    eax,0xf31dc296
  409a80:	add    cl,al
  409a82:	popa   
  409a83:	sub    ecx,eax
  409a85:	add    bl,ch
  409a87:	enter  0xa1b5,0xbf
  409a8b:	je     0x409a5e
  409a8d:	jg     0x409a11
  409a8f:	mov    ds:0xa7e6e132,eax
  409a94:	addr16 retf 0x9299
  409a98:	enter  0x2608,0x3c
  409a9c:	cmp    BYTE PTR [edx],dl
  409a9e:	and    al,BYTE PTR [ecx+eiz*4+0x48]
  409aa2:	xor    eax,0xa559274d
  409aa7:	and    ecx,DWORD PTR [esi+0x73]
  409aaa:	jb     0x409a68
  409aac:	into   
  409aad:	push   ds
  409aae:	xchg   edx,eax
  409aaf:	call   DWORD PTR [edi+0x72]
  409ab2:	and    eax,0x78ef47aa
  409ab7:	cmp    bl,BYTE PTR [edi]
  409ab9:	inc    edx
  409aba:	pusha  
  409abb:	xor    eax,DWORD PTR [eax-0x7d4c7c97]
  409ac1:	xchg   ebp,eax
  409ac2:	gs jge 0x409a85
  409ac5:	(bad)  
  409ac6:	jo     0x409b32
  409ac8:	jle    0x409a54
  409aca:	mov    esi,0xc68e5bcf
  409acf:	dec    eax
  409ad0:	cmp    ecx,ecx
  409ad2:	add    DWORD PTR [ebx+0x5a445c6f],ebx
  409ad8:	mov    ah,0x25
  409ada:	ficom  WORD PTR [eax-0x13]
  409add:	push   esp
  409ade:	inc    ebx
  409adf:	in     eax,dx
  409ae0:	mov    bl,BYTE PTR [esi]
  409ae2:	inc    ecx
  409ae3:	dec    ecx
  409ae4:	jb     0x409ad5
  409ae6:	ret    
  409ae7:	push   cs
  409ae8:	fmul   QWORD PTR [ebp+0x3f]
  409aeb:	add    eax,0xe56b6eb3
  409af0:	sbb    eax,0x65bfa2a4
  409af5:	fist   WORD PTR [eax+0x6ed018e2]
  409afb:	push   edx
  409afc:	aad    0xd2
  409afe:	jmp    0x62cc:0x21807c
  409b05:	retf   0xb1bb
  409b08:	pop    ds
  409b09:	lods   eax,DWORD PTR ds:[esi]
  409b0a:	fcmove st,st(5)
  409b0c:	js     0x409b43
  409b0e:	pop    ebp
  409b0f:	pop    ebp
  409b10:	mov    bl,0xaa
  409b12:	in     eax,dx
  409b13:	pop    edx
  409b14:	inc    esp
  409b15:	mov    bl,0x9e
  409b17:	mov    ebp,0xb0b8ecbd
  409b1c:	or     eax,0x1392cb4
  409b21:	fnstcw WORD PTR ds:0xdcb78548
  409b27:	aad    0x68
  409b29:	ja     0x409ad0
  409b2b:	mov    edi,0x2c74b79c
  409b30:	pop    ss
  409b31:	fstp   QWORD PTR [esi]
  409b33:	popa   
  409b34:	sbb    al,0x11
  409b36:	pop    ds
  409b37:	and    DWORD PTR [ebx],ebp
  409b39:	xchg   esi,eax
  409b3a:	mov    al,0x26
  409b3c:	fld    QWORD PTR [ecx+0x15]
  409b3f:	and    al,0xb2
  409b41:	push   eax
  409b42:	les    ebp,FWORD PTR [ecx]
  409b44:	mov    WORD PTR [edi-0x54],es
  409b47:	sub    BYTE PTR [edi],al
  409b49:	imul   esp
  409b4b:	nop
  409b4c:	push   esi
  409b4d:	daa    
  409b4e:	adc    eax,0x50a27cd1
  409b53:	dec    ebp
  409b54:	xor    eax,0x5484ebfc
  409b59:	mov    esi,0x2947391e
  409b5e:	pusha  
  409b5f:	call   0x1cb3:0x41d0da1a
  409b66:	cmp    BYTE PTR [ecx],dh
  409b68:	inc    esp
  409b69:	inc    ebx
  409b6a:	push   ecx
  409b6b:	arpl   bp,ax
  409b6d:	mov    ?,WORD PTR ds:0x247d372b
  409b73:	sti    
  409b74:	pop    ss
  409b75:	or     al,0x62
  409b77:	lea    esp,[eax-0x25ce27e]
  409b7d:	std    
  409b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b7f:	retf   0x3b45
  409b82:	not    BYTE PTR [ebx]
  409b84:	or     esi,DWORD PTR [edi]
  409b86:	sbb    DWORD PTR [esi-0x26b3420e],eax
  409b8c:	jo     0x409bd2
  409b8e:	fdiv   QWORD PTR ds:0x8b7679ca
  409b94:	adc    DWORD PTR [ecx+0x6e],edi
  409b97:	sti    
  409b98:	inc    esi
  409b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b9a:	into   
  409b9b:	in     eax,dx
  409b9c:	ret    
  409b9d:	pop    ds
  409b9e:	cwde   
  409b9f:	mov    ah,0x5e
  409ba1:	call   FWORD PTR [esi+0x4dcc9f5f]
  409ba7:	je     0x409b67
  409ba9:	in     al,0x99
  409bab:	mov    cr1,ebx
  409bae:	into   
  409baf:	ds cmp ecx,edx
  409bb2:	pop    esi
  409bb3:	add    BYTE PTR ds:0x123d9c7f,dh
  409bb9:	rcr    ebp,0x28
  409bbc:	inc    ebx
  409bbd:	stos   BYTE PTR es:[edi],al
  409bbe:	jbe    0x409bff
  409bc0:	and    DWORD PTR [ebp+0x13487a9f],edx
  409bc6:	mov    esp,0xd18eab6d
  409bcb:	shl    bl,1
  409bcd:	sub    eax,0x327bb65d
  409bd2:	fidivr DWORD PTR [ebp-0x77]
  409bd5:	pop    ds
  409bd6:	lock add ah,BYTE PTR [esi+ebx*2-0x2d]
  409bdb:	ror    dl,cl
  409bdd:	(bad)  
  409bde:	iret   
  409bdf:	ins    DWORD PTR es:[edi],dx
  409be0:	in     al,0xec
  409be2:	out    dx,al
  409be3:	mov    edi,0x7049835e
  409be8:	push   ebx
  409be9:	push   ecx
  409bea:	xchg   DWORD PTR [ecx],esp
  409bec:	xchg   edi,eax
  409bed:	stos   BYTE PTR es:[edi],al
  409bee:	add    BYTE PTR [esi+eiz*2],0x6d
  409bf2:	dec    edi
  409bf3:	stos   DWORD PTR es:[edi],eax
  409bf4:	cmp    DWORD PTR [eax-0xe],0xffffffb7
  409bf8:	jbe    0x409c0a
  409bfa:	test   eax,0xcf6a899c
  409bff:	inc    ebx
  409c00:	adc    al,0xa0
  409c02:	dec    edx
  409c03:	jmp    0x7bbcbfd
  409c08:	mov    al,0x9c
  409c0a:	loop   0x409c44
  409c0c:	aas    
  409c0d:	test   BYTE PTR [ebx],dl
  409c0f:	pop    edi
  409c10:	cdq    
  409c11:	add    al,0xd6
  409c13:	(bad)  [ecx+0x70447d53]
  409c19:	inc    ebx
  409c1a:	int    0xc0
  409c1c:	xor    DWORD PTR [ecx+0x4a4def0a],ebp
  409c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c23:	test   eax,0x5cc38793
  409c28:	sbb    al,0x85
  409c2a:	sub    al,0x4a
  409c2c:	fdivr  QWORD PTR [edi+eiz*1]
  409c2f:	stos   BYTE PTR es:[edi],al
  409c30:	adc    dl,al
  409c32:	dec    edx
  409c33:	jecxz  0x409bc4
  409c35:	xchg   edi,eax
  409c36:	adc    al,BYTE PTR [eax-0x6684ff94]
  409c3c:	repz in al,dx
  409c3e:	and    eax,0xb92cdbbb
  409c43:	pop    edx
  409c44:	sbb    bh,BYTE PTR [ebp-0x436ee7fe]
  409c4a:	and    dl,BYTE PTR [eax]
  409c4c:	jl     0x409cc3
  409c4e:	call   0xa75a:0xc530087d
  409c55:	imul   edx,DWORD PTR [edx+0x69],0x51
  409c59:	ins    BYTE PTR es:[edi],dx
  409c5a:	pop    edi
  409c5b:	inc    edx
  409c5c:	outs   dx,BYTE PTR ss:[esi]
  409c5e:	mov    bl,0x3f
  409c60:	mov    ah,0x9
  409c62:	cmp    al,0x86
  409c64:	ins    DWORD PTR es:[edi],dx
  409c65:	inc    esi
  409c66:	or     esi,DWORD PTR [esi+eiz*8-0x79]
  409c6a:	sub    DWORD PTR [eax],eax
  409c6c:	pop    esi
  409c6d:	or     ebp,DWORD PTR [eax+eax*1]
  409c70:	int3   
  409c71:	pop    edi
  409c72:	inc    esp
  409c73:	sub    dl,BYTE PTR [edi+0x7f]
  409c76:	sbb    DWORD PTR [edx+esi*4+0x3],eax
  409c7a:	fiadd  WORD PTR [eax-0x22]
  409c7d:	adc    ebx,esi
  409c7f:	sbb    edx,DWORD PTR [edi-0x3]
  409c82:	add    BYTE PTR [ebp+0x70b6d733],0x56
  409c89:	out    0x44,eax
  409c8b:	mov    DWORD PTR ds:0xa7357382,eax
  409c91:	test   eax,0x10ecf9c9
  409c96:	pop    eax
  409c97:	jb     0x409d16
  409c99:	stos   BYTE PTR es:[edi],al
  409c9a:	pop    ecx
  409c9b:	test   al,0xbe
  409c9d:	mov    edx,0x172bf8fa
  409ca2:	jl     0x409c55
  409ca4:	addr16 popa 
  409ca6:	stos   BYTE PTR es:[edi],al
  409ca7:	dec    edi
  409ca8:	(bad)  
  409ca9:	leave  
  409caa:	sub    bl,bh
  409cac:	stc    
  409cad:	(bad)  
  409cae:	loope  0x409c6b
  409cb0:	cli    
  409cb1:	cmp    al,0x24
  409cb3:	icebp  
  409cb4:	nop
  409cb5:	das    
  409cb6:	aaa    
  409cb7:	pop    es
  409cb8:	jmp    0x6a1f31bb
  409cbd:	pop    ebp
  409cbe:	adc    esi,DWORD PTR [ebp+ecx*1+0x619bc8c0]
  409cc5:	cli    
  409cc6:	add    ch,dl
  409cc8:	repnz pusha 
  409cca:	test   eax,0x3602d9b3
  409ccf:	sti    
  409cd0:	popf   
  409cd1:	and    ah,cl
  409cd3:	out    dx,al
  409cd4:	pop    es
  409cd5:	sbb    al,0x6b
  409cd7:	fild   WORD PTR [ecx-0x3a8f7907]
  409cdd:	test   BYTE PTR [edx],al
  409cdf:	jno    0x409c70
  409ce1:	pushf  
  409ce2:	jbe    0x409ca4
  409ce4:	or     dh,BYTE PTR [edx+0x6b09b84]
  409cea:	fistp  DWORD PTR [edx]
  409cec:	ret    
  409ced:	push   0xffffffd7
  409cef:	mov    eax,0x30e0d3d9
  409cf4:	data16 arpl WORD PTR [eax],cx
  409cf7:	daa    
  409cf8:	sbb    al,dl
  409cfa:	pop    edx
  409cfb:	loop   0x409d58
  409cfd:	std    
  409cfe:	imul   BYTE PTR [ebp-0xedd60f9]
  409d04:	or     al,0x4a
  409d06:	sar    cl,0x57
  409d09:	icebp  
  409d0a:	das    
  409d0b:	jb     0x409cb2
  409d0d:	inc    edx
  409d0e:	adc    dh,BYTE PTR [edx]
  409d10:	fisttp WORD PTR [ecx+0x8]
  409d13:	add    eax,0x9b219687
  409d18:	xchg   ecx,eax
  409d19:	je     0x409d4d
  409d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d1c:	xor    bh,BYTE PTR [ebx]
  409d1e:	fs push 0xc8fbdb43
  409d24:	sbb    eax,DWORD PTR [edi+0x7b8538c2]
  409d2a:	call   0xaa806143
  409d2f:	not    edi
  409d31:	cmp    eax,0x4c89245e
  409d36:	xchg   edi,eax
  409d37:	shr    cl,cl
  409d39:	adc    bl,cl
  409d3b:	push   ds
  409d3c:	sbb    esi,edx
  409d3e:	mov    eax,ds:0xc9e27fcf
  409d43:	add    al,0xd8
  409d45:	sub    BYTE PTR [esp+ebx*8-0x11916537],ah
  409d4c:	(bad)  
  409d4d:	fstp   QWORD PTR [ecx]
  409d4f:	pop    ebp
  409d50:	fs lahf 
  409d52:	push   edi
  409d53:	dec    ebp
  409d54:	adc    DWORD PTR [ecx],ecx
  409d56:	es mov bl,0xf6
  409d59:	cwde   
  409d5a:	test   BYTE PTR [ebx-0x70247e8],dl
  409d60:	pop    edx
  409d61:	cmp    eax,0x478f279f
  409d66:	(bad)  
  409d67:	(bad)  
  409d68:	fidivr DWORD PTR [edi-0x55]
  409d6b:	and    DWORD PTR [eax+0x6b],ebx
  409d6e:	xor    BYTE PTR [ecx+0x7e579510],0x76
  409d75:	cmc    
  409d76:	les    edi,FWORD PTR [ebx-0x7cefe442]
  409d7c:	ins    BYTE PTR es:[edi],dx
  409d7d:	sti    
  409d7e:	ss jne 0x409d24
  409d81:	and    BYTE PTR [ebp-0x456a392f],al
  409d87:	sbb    ecx,DWORD PTR [ebx+0x72]
  409d8a:	je     0x409d30
  409d8c:	loop   0x409db7
  409d8e:	cdq    
  409d8f:	out    dx,al
  409d90:	ins    BYTE PTR es:[edi],dx
  409d91:	mov    ecx,0x411d37fe
  409d96:	fidivr WORD PTR [ebx]
  409d98:	retf   0xd68e
  409d9b:	rcr    DWORD PTR [edx-0x5ebe994d],1
  409da1:	popf   
  409da2:	and    BYTE PTR [edx],bh
  409da4:	popf   
  409da5:	inc    ebp
  409da6:	xchg   edi,eax
  409da7:	xchg   BYTE PTR [ecx+eax*1+0x46],bh
  409dab:	in     eax,dx
  409dac:	mov    edx,0xc4945b5c
  409db1:	sahf   
  409db2:	adc    DWORD PTR ds:0xd870925d,0x1f7156fa
  409dbc:	sub    al,0x2f
  409dbe:	mov    ds:0xa785b522,eax
  409dc3:	shr    BYTE PTR [ebx],1
  409dc5:	cs xor eax,0xdb42bea6
  409dcb:	mov    ds:0x6414613f,al
  409dd0:	lds    eax,FWORD PTR [edx]
  409dd2:	sbb    dl,BYTE PTR [esi+edx*4]
  409dd5:	dec    DWORD PTR [edx-0x42c92e99]
  409ddb:	mov    bl,0xa5
  409ddd:	lea    esp,[edi+0x53]
  409de0:	je     0x409dad
  409de2:	push   cs
  409de3:	add    edx,DWORD PTR [ebp+0x12]
  409de6:	out    0xfa,eax
  409de8:	nop
  409de9:	mov    al,BYTE PTR [edx+0x4e]
  409dec:	cdq    
  409ded:	loopne 0x409e1b
  409def:	scas   al,BYTE PTR es:[edi]
  409df0:	sub    al,0xed
  409df2:	jnp    0x409e62
  409df4:	cdq    
  409df5:	aas    
  409df6:	bound  esi,QWORD PTR fs:[edx+esi*2+0x48ccfbbe]
  409dfe:	fadd   DWORD PTR [edx-0x28]
  409e01:	adc    BYTE PTR ds:0xfdd4d42,bl
  409e07:	mov    dl,0xe1
  409e09:	in     al,dx
  409e0a:	mov    bh,0xc1
  409e0c:	and    eax,0xdb111827
  409e11:	ret    
  409e12:	xchg   ecx,eax
  409e13:	pop    edi
  409e14:	adc    eax,0x64842358
  409e19:	div    DWORD PTR [edi-0x60]
  409e1c:	adc    BYTE PTR [esi+0x61],ah
  409e1f:	fcomp  DWORD PTR [esi]
  409e21:	shl    BYTE PTR [edx],1
  409e23:	outs   dx,BYTE PTR ds:[esi]
  409e24:	sub    eax,0x3f53f39
  409e29:	sbb    eax,0xe2eda7ec
  409e2e:	scas   eax,DWORD PTR es:[edi]
  409e2f:	je     0x409e20
  409e31:	push   edi
  409e32:	or     dh,BYTE PTR [ebx-0x64d7e0f0]
  409e38:	mov    edx,0x4b2b9c8b
  409e3d:	mov    edx,0x45b41cc1
  409e42:	hlt    
  409e43:	stos   DWORD PTR es:[edi],eax
  409e44:	mov    esi,0xf878b08
  409e49:	iret   
  409e4a:	sahf   
  409e4b:	jp     0x409eb7
  409e4d:	pushf  
  409e4e:	sub    ebx,DWORD PTR [ecx]
  409e50:	adc    eax,0x50afe023
  409e55:	pushf  
  409e56:	mov    BYTE PTR [ecx+ebx*1],ch
  409e59:	cmp    edx,DWORD PTR [edx+0x586b0004]
  409e5f:	mov    edx,0x11d1fc3
  409e64:	jae    0x409e9c
  409e66:	mov    DWORD PTR [ebx],esp
  409e68:	(bad)  
  409e69:	std    
  409e6a:	mov    esp,0x17ddfb40
  409e6f:	shl    DWORD PTR [ecx-0x1e8135d6],cl
  409e75:	and    eax,0x8e848e0b
  409e7a:	cmp    al,0x63
  409e7c:	lea    eax,[ebx+edi*2-0x63cf2e3a]
  409e83:	daa    
  409e84:	mov    edi,0x38c1e7f2
  409e89:	inc    eax
  409e8a:	cld    
  409e8b:	push   esp
  409e8c:	daa    
  409e8d:	lods   eax,DWORD PTR ds:[esi]
  409e8e:	(bad)  
  409e90:	push   eax
  409e91:	pop    ebp
  409e92:	std    
  409e93:	push   0x65
  409e95:	lea    esp,[eax+0x68887ce5]
  409e9b:	add    esi,DWORD PTR [edi+0x56]
  409e9e:	ins    DWORD PTR es:[edi],dx
  409e9f:	push   es
  409ea0:	sbb    al,0xdb
  409ea2:	arpl   WORD PTR [edx],ax
  409ea4:	pushf  
  409ea5:	or     DWORD PTR [ebp+0x37],0xbbc4b597
  409eac:	xor    esp,edx
  409eae:	(bad)  
  409eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eb0:	dec    ebp
  409eb1:	jle    0x409ec0
  409eb3:	sbb    eax,0x65b8dd19
  409eb8:	xor    al,0xe6
  409eba:	ja     0x409ea1
  409ebc:	pop    edx
  409ebd:	sar    bl,0x65
  409ec0:	js     0x409e71
  409ec2:	and    al,dh
  409ec4:	daa    
  409ec5:	inc    edx
  409ec6:	and    al,0xe8
  409ec8:	fldcw  WORD PTR [eax+0x21]
  409ecb:	cld    
  409ecc:	in     al,dx
  409ecd:	pusha  
  409ece:	pop    edi
  409ecf:	out    0xbf,al
  409ed1:	cmp    ecx,esp
  409ed3:	aaa    
  409ed4:	inc    ecx
  409ed5:	aaa    
  409ed6:	js     0x409f50
  409ed8:	mov    ds:0xd04d8bf7,al
  409edd:	xor    eax,esi
  409edf:	add    eax,edi
  409ee1:	cmp    ecx,eax
  409ee3:	je     0x409f21
  409ee9:	jmp    0x409f12
  409eee:	mov    eax,DWORD PTR [ebp-0x4]
  409ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  409ef4:	xor    eax,esi
  409ef6:	add    eax,edi
  409ef8:	cmp    ecx,eax
  409efa:	mov    eax,DWORD PTR [ebp-0x4]
  409efd:	je     0x40c2e1
  409f03:	mov    ecx,DWORD PTR [ebp-0x38]
  409f06:	xor    eax,esi
  409f08:	add    eax,edi
  409f0a:	cmp    ecx,eax
  409f0c:	je     0x40c2ea
  409f12:	lea    eax,[ebp-0x8]
  409f15:	push   eax
  409f16:	push   DWORD PTR [ebp-0x30]
  409f19:	push   DWORD PTR [ebp+0xc]
  409f1c:	call   0x41169e
  409f21:	mov    eax,DWORD PTR [ebp-0x4]
  409f24:	mov    ecx,DWORD PTR [ebp-0x8]
  409f27:	jmp    0x40c2ac
  409f2c:	inc    DWORD PTR [ebp+edi*2+0x29]
  409f30:	(bad)
  409f33:	je     0x409f70
  409f35:	fs and eax,0x106a7af0
  409f3b:	inc    edi
  409f3c:	xor    al,BYTE PTR [eax]
  409f3e:	jp     0x409fba
  409f40:	add    bl,BYTE PTR [edi+0x7a]
  409f43:	jp     0x409f43
  409f45:	addr16 mov dh,0xbf
  409f48:	jge    0x409fa4
  409f4a:	loope  0x409f4a
  409f4c:	or     dl,BYTE PTR [edx]
  409f4e:	xor    BYTE PTR [esi-0x250d3531],bl
  409f54:	shr    DWORD PTR [esi+0x274fd60a],0x5f
  409f5b:	or     eax,0xdb579b4c
  409f60:	sbb    esp,ebx
  409f62:	out    0x5,al
  409f64:	jge    0x409f45
  409f66:	call   0xe0b3:0x5d69cbd3
  409f6d:	mov    BYTE PTR [ebx+0x48e92b71],ah
  409f73:	pop    ss
  409f74:	aaa    
  409f75:	sub    bh,cl
  409f77:	push   0x5f
  409f79:	xchg   esp,eax
  409f7a:	xor    eax,0xc0fd0293
  409f7f:	push   fs
  409f81:	mov    ecx,0x68fba6d2
  409f86:	pop    eax
  409f87:	ret    0x9f2b
  409f8a:	je     0x409f3e
  409f8c:	nop
  409f8d:	jmp    0x409ffa
  409f8f:	or     eax,0xf3345c4a
  409f94:	inc    eax
  409f95:	call   0xf47a10be
  409f9a:	xchg   esp,eax
  409f9b:	scas   eax,DWORD PTR es:[edi]
  409f9c:	retf   
  409f9d:	outs   dx,DWORD PTR ds:[esi]
  409f9e:	push   esp
  409f9f:	cmp    DWORD PTR [eax+0x43cc1bbd],0xffffff85
  409fa6:	add    al,ah
  409fa8:	inc    ebx
  409fa9:	les    esp,FWORD PTR [edi+ebp*2-0x73]
  409fad:	mov    dh,BYTE PTR ds:0xe83b8b00
  409fb3:	mov    ecx,0xfa96887b
  409fb8:	push   ebx
  409fb9:	mov    al,ah
  409fbb:	(bad)  [eax-0x384d4066]
  409fc1:	popf   
  409fc2:	add    DWORD PTR [edx],0x1090bffa
  409fc8:	test   DWORD PTR [edi-0x596f0df6],ebx
  409fce:	mov    bh,BYTE PTR ds:0xb73497d2
  409fd4:	sti    
  409fd5:	jecxz  0x409f79
  409fd7:	xlat   BYTE PTR ds:[ebx]
  409fd8:	and    esp,DWORD PTR [eax-0x74]
  409fdb:	and    DWORD PTR ds:0xe4d1664f,esp
  409fe1:	push   es
  409fe2:	enter  0xfab3,0x54
  409fe6:	(bad)  
  409fe7:	push   cs
  409fe8:	pushf  
  409fe9:	push   ebp
  409fea:	cmp    ecx,0x60
  409fed:	sub    BYTE PTR [ecx-0x52d2bdcb],ah
  409ff3:	test   BYTE PTR [eax+0x32620225],cl
  409ff9:	xor    BYTE PTR [ecx],cl
  409ffb:	push   es
  409ffc:	dec    edx
  409ffd:	jne    0x40a060
  409fff:	lahf   
  40a000:	loopne 0x40a01c
  40a002:	inc    eax
  40a003:	mov    bh,BYTE PTR [ebp+0x4ddadb7b]
  40a009:	ret    
  40a00a:	in     eax,0xee
  40a00c:	aad    0x7c
  40a00e:	stos   BYTE PTR es:[edi],al
  40a00f:	int    0xde
  40a011:	icebp  
  40a012:	cs adc eax,0x7983ad7d
  40a018:	popf   
  40a019:	ror    BYTE PTR [eax+0x283b1d9f],0xac
  40a020:	adc    bl,BYTE PTR [edx+0x72222be6]
  40a026:	inc    ecx
  40a027:	inc    esi
  40a028:	mov    al,ds:0x7d645307
  40a02d:	cmp    BYTE PTR [esi+0x5f],ch
  40a030:	div    BYTE PTR [edx-0x5ceb2a81]
  40a036:	mov    al,ds:0x28d803ea
  40a03b:	(bad)  [edx-0x61]
  40a03e:	xadd   ch,ah
  40a041:	inc    eax
  40a042:	push   ss
  40a043:	or     BYTE PTR [esi],dl
  40a045:	scas   eax,DWORD PTR es:[edi]
  40a046:	and    ch,ah
  40a048:	jne    0x409fcd
  40a04a:	cmc    
  40a04b:	jmp    0xa57b:0x64f832a3
  40a052:	inc    edi
  40a053:	cmp    BYTE PTR [ebx],0x8b
  40a056:	dec    esp
  40a057:	add    ecx,ecx
  40a059:	mov    dl,0xe5
  40a05b:	mov    gs,WORD PTR [esp+esi*4+0x3d264c09]
  40a062:	lahf   
  40a063:	push   0x73
  40a065:	sub    eax,0xca90cc24
  40a06a:	repz (bad) 
  40a06c:	out    dx,al
  40a06d:	adc    bl,ah
  40a06f:	adc    cl,0xe3
  40a072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a073:	retf   0xd781
  40a076:	mov    ds:0xc91f1433,eax
  40a07b:	es hlt 
  40a07d:	or     BYTE PTR [ebx-0x7b67c96f],0x12
  40a084:	mov    esp,DWORD PTR [ecx]
  40a086:	pop    ebx
  40a087:	rcl    BYTE PTR [eax+0x74],cl
  40a08a:	lds    edx,FWORD PTR [esi-0x5a]
  40a08d:	daa    
  40a08e:	adc    al,0x88
  40a090:	push   0xffffff84
  40a092:	lahf   
  40a093:	pop    ecx
  40a094:	fmul   DWORD PTR [ebx+0x17bceed3]
  40a09a:	stc    
  40a09b:	sub    DWORD PTR [edx+0x7ac5da33],esp
  40a0a1:	adc    dl,BYTE PTR ds:0x183bf8c0
  40a0a7:	adc    eax,0xcf0ab78c
  40a0ac:	xchg   ecx,eax
  40a0ad:	or     DWORD PTR [edi-0x22],0x7a
  40a0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b2:	cmc    
  40a0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b4:	int3   
  40a0b5:	scas   eax,DWORD PTR es:[edi]
  40a0b6:	inc    esp
  40a0b7:	shl    BYTE PTR ds:0xd35ce4,0xba
  40a0be:	dec    ecx
  40a0bf:	cdq    
  40a0c0:	jns    0x40a0bc
  40a0c2:	pop    ebp
  40a0c3:	dec    esp
  40a0c4:	mov    bh,0xd0
  40a0c6:	repnz mov cl,0x9
  40a0c9:	push   edi
  40a0ca:	lea    ebx,[esp+ebx*1]
  40a0cd:	add    DWORD PTR [edx-0x48cbc2ab],edx
  40a0d3:	sbb    al,0x9f
  40a0d5:	fld    QWORD PTR [edx+0x7f303ace]
  40a0db:	add    al,al
  40a0dd:	mov    dl,ah
  40a0df:	daa    
  40a0e0:	push   ebp
  40a0e1:	jnp    0x40a0ab
  40a0e3:	test   al,0xe3
  40a0e5:	adc    eax,0x2f9619b
  40a0ea:	push   ds
  40a0eb:	adc    esi,ebx
  40a0ed:	shl    DWORD PTR ds:0x83827a9a,1
  40a0f3:	fstp   TBYTE PTR [eax+0x46]
  40a0f6:	mov    cl,0xce
  40a0f8:	adc    al,0x70
  40a0fa:	mov    eax,0xec65c971
  40a0ff:	sub    eax,0xbe4b9ce4
  40a104:	into   
  40a105:	leave  
  40a106:	loope  0x40a139
  40a108:	sub    al,0xe9
  40a10a:	mov    esi,0xee21a0a
  40a10f:	inc    esi
  40a110:	shr    DWORD PTR [edi+0x724ed0f1],cl
  40a116:	mov    cl,BYTE PTR [ebp+eax*2-0x2e5af98a]
  40a11d:	popa   
  40a11e:	cld    
  40a11f:	xchg   DWORD PTR [edi],eax
  40a121:	push   es
  40a122:	aaa    
  40a123:	and    dh,0xd6
  40a126:	pusha  
  40a127:	push   es
  40a128:	cmp    BYTE PTR [eax-0x20488997],ah
  40a12e:	inc    eax
  40a12f:	adc    BYTE PTR [ecx],dl
  40a131:	dec    ecx
  40a132:	push   0x4f
  40a134:	fs mov ss:0x868d2315,eax
  40a13b:	or     eax,0x3acebcea
  40a140:	mov    dl,0x9f
  40a142:	js     0x40a0cf
  40a144:	icebp  
  40a145:	fcom   QWORD PTR [ecx-0x50]
  40a148:	sbb    al,BYTE PTR ds:0xdf431072
  40a14e:	jo     0x40a14f
  40a150:	rol    BYTE PTR [ebx],1
  40a152:	mov    WORD PTR [ecx+0x7e],?
  40a155:	jmp    FWORD PTR [edi-0xb]
  40a158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a159:	cmc    
  40a15a:	mov    ebx,0x31f019b0
  40a15f:	(bad)  
  40a160:	sbb    esi,DWORD PTR [edx-0xe8e5597]
  40a166:	aas    
  40a167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a168:	(bad)  
  40a169:	inc    esi
  40a16a:	pop    ebx
  40a16b:	cmp    DWORD PTR [eax+eiz*4+0x7d],edx
  40a16f:	fwait
  40a170:	jp     0x40a1d6
  40a172:	xchg   ecx,eax
  40a173:	ins    BYTE PTR es:[edi],dx
  40a174:	mov    bl,0x6b
  40a176:	mov    WORD PTR [edi+0x137901c6],ds
  40a17c:	lock sbb al,0x0
  40a17f:	cwde   
  40a180:	dec    edx
  40a181:	mov    dl,BYTE PTR [edx]
  40a183:	fdivr  st,st(2)
  40a185:	cmp    al,0x7e
  40a187:	rcr    DWORD PTR [ebx-0x70e370e],0xe3
  40a18e:	outs   dx,DWORD PTR ds:[esi]
  40a18f:	out    0xe1,eax
  40a191:	jge    0x40a152
  40a193:	jno    0x40a1f1
  40a195:	bound  esp,QWORD PTR [edx+0x71]
  40a198:	dec    esp
  40a199:	arpl   WORD PTR [bp+0x6c],di
  40a19d:	cmp    dl,BYTE PTR [edx]
  40a19f:	push   edx
  40a1a0:	sbb    BYTE PTR [ebp-0x16c4feaa],0xd8
  40a1a7:	mov    eax,ds:0x808c2234
  40a1ac:	sbb    al,0x1d
  40a1ae:	loop   0x40a1f2
  40a1b0:	mov    ds:0xe379257a,al
  40a1b5:	test   eax,0xd7c1ec98
  40a1ba:	neg    ebp
  40a1bc:	fdivr  DWORD PTR [ebp+0x3b]
  40a1bf:	call   0xfa3c:0x17bf7e58
  40a1c6:	fld    DWORD PTR [ebp-0x54]
  40a1c9:	pop    ebp
  40a1ca:	jecxz  0x40a232
  40a1cc:	sbb    dh,0x6
  40a1cf:	fild   QWORD PTR [ebx]
  40a1d1:	jne    0x40a1cc
  40a1d3:	and    esp,DWORD PTR [edi+0x3c]
  40a1d6:	arpl   WORD PTR [ebx-0x1],si
  40a1d9:	int3   
  40a1da:	repnz daa 
  40a1dc:	repz or bl,bh
  40a1df:	pop    edx
  40a1e0:	jp     0x40a1ac
  40a1e2:	ret    
  40a1e3:	jns    0x40a192
  40a1e5:	and    eax,0x9cb915c3
  40a1ea:	push   cs
  40a1eb:	or     BYTE PTR [ebx],dl
  40a1ed:	jae    0x40a18f
  40a1ef:	fnstsw WORD PTR [esi+eiz*4]
  40a1f2:	hlt    
  40a1f3:	xor    al,0xb2
  40a1f5:	adc    al,0xc4
  40a1f7:	gs push eax
  40a1f9:	adc    edx,edx
  40a1fb:	repnz sbb BYTE PTR ds:0x51be53d5,0xc3
  40a203:	leave  
  40a204:	or     edx,0xffffffae
  40a207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a208:	fs (bad) 
  40a20a:	test   al,0x1c
  40a20c:	int3   
  40a20d:	test   al,0x1d
  40a20f:	sub    BYTE PTR [edx+0x7],dh
  40a212:	add    al,0xbb
  40a214:	les    esp,FWORD PTR [ecx-0x23]
  40a217:	and    ecx,edx
  40a219:	mov    ebx,0xf0757d2a
  40a21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a21f:	mov    al,ds:0x91225d0f
  40a224:	aaa    
  40a225:	pop    ss
  40a226:	std    
  40a227:	mov    fs,WORD PTR [esi-0x22857abc]
  40a22d:	sbb    BYTE PTR [ebx],bl
  40a22f:	jbe    0x40a260
  40a231:	cmp    al,0x24
  40a233:	mov    al,0x4a
  40a235:	jns    0x40a288
  40a237:	jmp    0xcc5c:0x91076a1f
  40a23e:	xor    ecx,DWORD PTR [ebp+ebp*8+0x35]
  40a242:	aas    
  40a243:	pop    ebp
  40a244:	xchg   ebx,eax
  40a245:	cmc    
  40a246:	call   0x629aedb9
  40a24b:	aas    
  40a24c:	and    al,0x93
  40a24e:	jmp    0xb70edaf3
  40a253:	push   ss
  40a254:	nop
  40a255:	pop    eax
  40a256:	cmp    al,0x1d
  40a258:	mov    edi,edi
  40a25a:	push   ebp
  40a25b:	mov    ch,0x3b
  40a25d:	pop    ds
  40a25e:	rcl    BYTE PTR [ecx+ecx*2+0x58],cl
  40a262:	sub    bl,ah
  40a264:	cdq    
  40a265:	mov    ebx,0x65d0e6f3
  40a26a:	daa    
  40a26b:	cmp    eax,0xd7e5cb9
  40a270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a271:	data16 fcmove st,st(1)
  40a274:	call   0x7f577047
  40a279:	es or  al,0x4c
  40a27c:	icebp  
  40a27d:	aad    0x14
  40a27f:	mov    edi,0xa54bf6ba
  40a284:	sub    ecx,esp
  40a286:	ss inc ecx
  40a288:	scas   al,BYTE PTR es:[edi]
  40a289:	xchg   ecx,eax
  40a28a:	pop    esp
  40a28b:	fwait
  40a28c:	mov    dl,0x42
  40a28e:	popa   
  40a28f:	(bad)  
  40a290:	cmc    
  40a291:	sbb    DWORD PTR [esi+0x5a4424f5],ecx
  40a297:	push   0x57
  40a299:	in     al,0x1a
  40a29b:	dec    edx
  40a29c:	or     esi,DWORD PTR [edi-0x2a8d15b6]
  40a2a2:	mov    eax,0x437fd694
  40a2a7:	sub    BYTE PTR [ebp-0x36],cl
  40a2aa:	js     0x40a274
  40a2ac:	loop   0x40a240
  40a2ae:	cli    
  40a2af:	inc    edx
  40a2b0:	pop    edx
  40a2b1:	push   esi
  40a2b2:	(bad)  
  40a2b3:	fwait
  40a2b4:	sub    eax,0x1fae916c
  40a2b9:	retf   
  40a2ba:	lea    eax,[edx-0x482fe162]
  40a2c0:	scas   eax,DWORD PTR es:[edi]
  40a2c1:	jmp    0x3f0cc4e6
  40a2c6:	sahf   
  40a2c7:	and    BYTE PTR [eax+0xb],dh
  40a2ca:	xor    al,0x95
  40a2cc:	repnz mov dh,0x12
  40a2cf:	mov    ah,0xc5
  40a2d1:	lods   eax,DWORD PTR ds:[esi]
  40a2d2:	in     eax,0x53
  40a2d4:	loop   0x40a273
  40a2d6:	cld    
  40a2d7:	and    al,0x9e
  40a2d9:	adc    eax,0x5fee7ab6
  40a2de:	rol    DWORD PTR [ebx],0xb2
  40a2e1:	gs stos DWORD PTR es:[edi],eax
  40a2e3:	xchg   edi,eax
  40a2e4:	and    esp,edx
  40a2e6:	jo     0x40a2ad
  40a2e8:	int3   
  40a2e9:	test   DWORD PTR [ecx+eiz*2],ecx
  40a2ec:	xlat   BYTE PTR ds:[ebx]
  40a2ed:	cmp    edx,DWORD PTR [ebx+0x3c]
  40a2f0:	das    
  40a2f1:	hlt    
  40a2f2:	pop    ds
  40a2f3:	adc    eax,0x9ca611be
  40a2f8:	leave  
  40a2f9:	mov    cs,eax
  40a2fb:	es stos DWORD PTR es:[edi],eax
  40a2fd:	cdq    
  40a2fe:	pop    ds
  40a2ff:	addr16 or eax,0xd58b2f91
  40a305:	scas   eax,DWORD PTR es:[edi]
  40a306:	xor    DWORD PTR [esi-0x2d1c1d38],edi
  40a30c:	pop    eax
  40a30d:	scas   eax,DWORD PTR es:[edi]
  40a30e:	add    BYTE PTR [edi-0x6e],ah
  40a311:	(bad)  
  40a312:	sti    
  40a313:	in     al,dx
  40a314:	sbb    eax,0xffffffac
  40a317:	adc    al,0x98
  40a319:	(bad)  
  40a31a:	test   BYTE PTR cs:[ebx],0xb7
  40a31e:	sbb    DWORD PTR [esi],edi
  40a320:	push   eax
  40a321:	pop    ds
  40a322:	cmc    
  40a323:	dec    esp
  40a324:	dec    esi
  40a325:	mov    ds:0xb9e9cb4e,eax
  40a32a:	sub    BYTE PTR [esi-0x2f4a7522],ah
  40a330:	(bad)  
  40a331:	int    0x6f
  40a333:	jmp    0x57f3:0x300e9b32
  40a33a:	pusha  
  40a33b:	jno    0x40a2fc
  40a33d:	push   0xe956ff93
  40a342:	mov    eax,ds:0xea8a339
  40a347:	push   es
  40a348:	rcr    BYTE PTR [ebp-0x31],0x7e
  40a34c:	xor    eax,0x770114e4
  40a351:	inc    ecx
  40a352:	vminpd xmm5,xmm1,XMMWORD PTR [edi-0x38]
  40a357:	dec    edi
  40a358:	sub    ebp,DWORD PTR [ebp+0x3fe20940]
  40a35e:	push   edi
  40a35f:	push   0xb
  40a361:	ds call 0x30c6:0x77d59dc5
  40a369:	sub    esp,0xffffffac
  40a36c:	pop    esi
  40a36d:	dec    esi
  40a36e:	mov    cl,0x57
  40a370:	cmp    al,0x6d
  40a372:	popa   
  40a373:	scas   eax,DWORD PTR es:[edi]
  40a374:	dec    eax
  40a375:	nop
  40a376:	inc    ecx
  40a377:	iret   
  40a378:	cmp    edi,DWORD PTR [ebx-0x17680d85]
  40a37e:	scas   eax,DWORD PTR es:[edi]
  40a37f:	xchg   BYTE PTR [edx],cl
  40a381:	es jp  0x40a326
  40a384:	pop    eax
  40a385:	fcmovnu st,st(7)
  40a387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a388:	ss ja  0x40a3c3
  40a38b:	lods   eax,DWORD PTR ds:[esi]
  40a38c:	mov    dl,0x66
  40a38e:	in     al,dx
  40a38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a390:	jp     0x40a3d5
  40a392:	dec    ebp
  40a393:	xor    ah,BYTE PTR [ebp+0x4b558d9]
  40a399:	pusha  
  40a39a:	int    0x9d
  40a39c:	mov    al,BYTE PTR [ebp-0x6b81f4a9]
  40a3a2:	lahf   
  40a3a3:	cld    
  40a3a4:	(bad)  
  40a3a5:	add    DWORD PTR [eax+0x6e],esi
  40a3a8:	dec    ebx
  40a3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3aa:	enter  0x71a4,0x65
  40a3ae:	imul   edi,ebp,0x3abe7b23
  40a3b4:	jp     0x40a3cb
  40a3b6:	scas   eax,DWORD PTR es:[edi]
  40a3b7:	test   esi,eax
  40a3b9:	xchg   DWORD PTR [ebx+ecx*1+0x69],edi
  40a3bd:	sub    bh,dl
  40a3bf:	aad    0xcf
  40a3c1:	xchg   esp,eax
  40a3c2:	aas    
  40a3c3:	push   gs
  40a3c5:	inc    esi
  40a3c6:	inc    edi
  40a3c7:	mov    ds:0x9f50a50d,eax
  40a3cc:	das    
  40a3cd:	xchg   ecx,eax
  40a3ce:	fcom   QWORD PTR [esi+ebp*4]
  40a3d1:	cld    
  40a3d2:	and    eax,0xf849d244
  40a3d7:	mov    edi,0x1e557578
  40a3dc:	xchg   edi,eax
  40a3dd:	pop    esp
  40a3de:	xchg   dl,dh
  40a3e0:	sbb    BYTE PTR [edx-0x445fd3e4],ch
  40a3e6:	sti    
  40a3e7:	loope  0x40a3ff
  40a3e9:	mov    esi,0xa151351f
  40a3ee:	push   edi
  40a3ef:	jmp    0xbfd7da9c
  40a3f4:	ficomp WORD PTR [esp-0x34]
  40a3f8:	or     eax,0xd801a2d0
  40a3fd:	pusha  
  40a3fe:	sbb    esp,esp
  40a400:	lods   eax,DWORD PTR ds:[esi]
  40a401:	mov    bh,0x7
  40a403:	clc    
  40a404:	loop   0x40a423
  40a406:	adc    esp,DWORD PTR [edx+0x3b709405]
  40a40c:	mov    dh,0x26
  40a40e:	cwde   
  40a40f:	sub    al,0x53
  40a411:	sbb    bl,cl
  40a413:	mov    DWORD PTR [edx+ebp*2-0x62d99450],edx
  40a41a:	ins    BYTE PTR es:[edi],dx
  40a41b:	dec    eax
  40a41c:	outs   dx,BYTE PTR ds:[esi]
  40a41d:	jp     0x40a3c5
  40a41f:	call   0xa5144541
  40a424:	fwait
  40a425:	lods   eax,DWORD PTR ds:[esi]
  40a426:	data16 data16 test al,0x59
  40a42a:	jmp    0xd8d3599b
  40a42f:	fnstcw WORD PTR [ecx]
  40a431:	ror    BYTE PTR [eax],cl
  40a433:	mov    ds:0xf323400c,al
  40a438:	mov    al,ds:0x1e3c40fb
  40a43d:	sbb    al,0xad
  40a43f:	in     al,dx
  40a440:	ds add eax,0xd80cb913
  40a446:	push   ebp
  40a447:	xlat   BYTE PTR ds:[ebx]
  40a448:	mov    bl,BYTE PTR [edi]
  40a44a:	inc    esi
  40a44b:	adc    esp,0x6dc15db8
  40a451:	les    eax,FWORD PTR [ebx+esi*1-0x75af6f99]
  40a458:	push   cs
  40a459:	push   ds
  40a45a:	dec    esi
  40a45b:	or     DWORD PTR [edi],ebx
  40a45d:	aad    0xc7
  40a45f:	gs push esi
  40a461:	scas   al,BYTE PTR es:[edi]
  40a462:	std    
  40a463:	cmc    
  40a464:	push   ss
  40a465:	jg     0x40a430
  40a467:	mov    WORD PTR [ebp-0x6ca3f3d5],?
  40a46d:	lods   eax,DWORD PTR ds:[esi]
  40a46e:	mov    BYTE PTR [ebp+0x63],0xe9
  40a472:	jbe    0x40a442
  40a474:	sub    al,0xab
  40a476:	or     eax,DWORD PTR [ebp-0x7b]
  40a479:	push   cs
  40a47a:	inc    ebx
  40a47b:	scas   al,BYTE PTR es:[edi]
  40a47c:	dec    ebx
  40a47d:	and    DWORD PTR [ebx-0x1f],eax
  40a480:	stos   DWORD PTR es:[edi],eax
  40a481:	jecxz  0x40a40d
  40a483:	out    0x50,al
  40a485:	aam    0x41
  40a487:	call   0x494e:0xb9234ecf
  40a48e:	fcomp  QWORD PTR ds:[eax+0x5c]
  40a492:	jnp    0x40a4a8
  40a494:	xchg   esp,eax
  40a495:	or     dl,al
  40a497:	rcl    DWORD PTR [ecx-0x4d],0x9d
  40a49b:	mov    edx,0x6d4e5a6d
  40a4a0:	pusha  
  40a4a1:	dec    ecx
  40a4a2:	outs   dx,BYTE PTR ds:[esi]
  40a4a3:	mov    edx,0x32f4a3f5
  40a4a8:	imul   BYTE PTR [ecx+0x24]
  40a4ab:	mov    dl,0x40
  40a4ad:	leave  
  40a4ae:	or     cl,BYTE PTR [ebx]
  40a4b0:	call   0x1f29:0xebc421bf
  40a4b7:	xchg   ebp,eax
  40a4b8:	cmc    
  40a4b9:	jbe    0x40a4a1
  40a4bb:	scas   al,BYTE PTR es:[edi]
  40a4bc:	push   edi
  40a4bd:	daa    
  40a4be:	jae    0x40a484
  40a4c0:	or     BYTE PTR [ebx+0x5c6df15],cl
  40a4c6:	ffreep st(3)
  40a4c8:	sub    al,0x64
  40a4ca:	jmp    0x9230a1a4
  40a4cf:	push   esp
  40a4d0:	es in  al,0x9
  40a4d3:	push   ebx
  40a4d4:	test   BYTE PTR [ebx+edi*4],0xc2
  40a4d8:	dec    ecx
  40a4d9:	test   DWORD PTR [eax-0x2b],esp
  40a4dc:	idiv   BYTE PTR [edx-0x6f]
  40a4df:	jns    0x40a474
  40a4e1:	or     BYTE PTR [ecx],cl
  40a4e3:	jno    0x40a4c5
  40a4e5:	call   0xdb64:0x7272cefd
  40a4ec:	xchg   BYTE PTR [ecx],ah
  40a4ee:	jno    0x40a4b8
  40a4f0:	sub    al,dl
  40a4f2:	push   cs
  40a4f3:	shl    BYTE PTR [esi],1
  40a4f5:	jbe    0x40a4ff
  40a4f7:	pop    ds
  40a4f8:	daa    
  40a4f9:	mov    ebp,0x45eb918
  40a4fe:	push   ds
  40a4ff:	mov    eax,ds:0xc912bc00
  40a504:	aam    0xcc
  40a506:	jne    0x40a501
  40a508:	clc    
  40a509:	fs jmp eax
  40a50c:	in     eax,dx
  40a50d:	pop    edi
  40a50e:	mov    WORD PTR [ebp-0x65e1e6be],cs
  40a514:	pop    eax
  40a515:	leave  
  40a516:	adc    eax,0x6a7b6bdc
  40a51b:	xchg   edx,eax
  40a51c:	jecxz  0x40a4c9
  40a51e:	rcr    BYTE PTR [edi+0x60],0xe1
  40a522:	fsubrp st(2),st
  40a524:	outs   dx,DWORD PTR ds:[esi]
  40a525:	and    eax,0x4eac53b2
  40a52a:	mov    esi,edi
  40a52c:	pop    ebp
  40a52d:	xchg   ebx,eax
  40a52e:	popa   
  40a52f:	out    0x51,eax
  40a531:	push   ds
  40a532:	and    ecx,DWORD PTR [eax-0x4afc4106]
  40a538:	retf   
  40a539:	fisttp DWORD PTR [ebp+eax*4+0x635a635]
  40a540:	dec    ebx
  40a541:	cmp    DWORD PTR [ecx+0x11397bbd],ecx
  40a547:	or     DWORD PTR [esi-0x2e],ebp
  40a54a:	jmp    0x40a5b6
  40a54c:	cdq    
  40a54d:	outs   dx,DWORD PTR ds:[esi]
  40a54e:	xor    eax,DWORD PTR [edx]
  40a550:	push   ecx
  40a551:	add    ecx,DWORD PTR [edx-0x779dbacf]
  40a557:	sti    
  40a558:	pop    esi
  40a559:	aad    0x38
  40a55b:	sbb    eax,0x9d5130cd
  40a560:	in     al,dx
  40a561:	add    BYTE PTR [ebx+0x50990f80],ch
  40a567:	arpl   WORD PTR [edi],di
  40a569:	pop    eax
  40a56a:	in     al,0xab
  40a56c:	mov    edi,0x869e556e
  40a571:	ins    DWORD PTR es:[edi],dx
  40a572:	sbb    eax,0x3393bbf0
  40a577:	imul   edi,DWORD PTR [esi+eax*2],0xffffffdd
  40a57b:	retf   0xf217
  40a57e:	and    eax,0x3d147cbe
  40a583:	repz xor dh,ch
  40a586:	mov    eax,ds:0x2edf5ec8
  40a58b:	loop   0x40a563
  40a58d:	sahf   
  40a58e:	pop    ebp
  40a58f:	xchg   DWORD PTR [eax],ebp
  40a591:	adc    DWORD PTR [eax-0x4b],ebx
  40a594:	cld    
  40a595:	push   ds
  40a596:	stos   DWORD PTR es:[edi],eax
  40a597:	bound  esi,QWORD PTR [ecx-0x342a92b6]
  40a59d:	js     0x40a5b7
  40a59f:	xor    al,0x61
  40a5a1:	test   eax,0xcb413532
  40a5a6:	in     eax,0x6f
  40a5a8:	mov    bh,0xff
  40a5aa:	inc    eax
  40a5ab:	push   edx
  40a5ac:	cmp    al,BYTE PTR [ebp+0x4118bcda]
  40a5b2:	cmp    eax,0xcd8c2bbc
  40a5b7:	sbb    BYTE PTR [edi],dl
  40a5b9:	pop    ss
  40a5ba:	rcl    ch,cl
  40a5bc:	nop
  40a5bd:	push   edx
  40a5be:	dec    ecx
  40a5bf:	ret    0x5056
  40a5c2:	loope  0x40a5ec
  40a5c4:	sbb    ebp,ecx
  40a5c6:	jmp    0x40a63d
  40a5c8:	out    dx,eax
  40a5c9:	pop    edx
  40a5ca:	or     BYTE PTR [edx+0x11c72db9],ah
  40a5d0:	sbb    eax,0xc28c3de4
  40a5d5:	(bad)  
  40a5d6:	test   ax,0xa9ff
  40a5da:	cmc    
  40a5db:	adc    BYTE PTR fs:[edx-0x23c2ab6b],dl
  40a5e2:	fstp   DWORD PTR [eax-0x51a48a00]
  40a5e8:	mov    gs,WORD PTR [eax]
  40a5ea:	out    0xf0,eax
  40a5ec:	and    al,0x7c
  40a5ee:	and    al,0x26
  40a5f0:	stos   BYTE PTR es:[edi],al
  40a5f1:	pop    esp
  40a5f2:	enter  0x1dd5,0x91
  40a5f6:	ret    0xafc3
  40a5f9:	sub    al,0x4a
  40a5fb:	push   edi
  40a5fc:	xor    dh,BYTE PTR [ebp-0x34]
  40a5ff:	stos   BYTE PTR es:[edi],al
  40a600:	dec    ecx
  40a601:	jbe    0x40a5ac
  40a603:	mov    dl,ah
  40a605:	add    esi,DWORD PTR [ecx]
  40a607:	and    eax,0x4cb5421e
  40a60c:	loop   0x40a59a
  40a60e:	mov    esp,0x38038c4
  40a613:	or     edi,DWORD PTR [esi+0x4c]
  40a616:	pop    eax
  40a617:	int3   
  40a618:	mov    esi,?
  40a61a:	push   esi
  40a61b:	out    0xfb,al
  40a61d:	int    0x97
  40a61f:	addr16 inc ebx
  40a621:	addps  xmm3,xmm3
  40a624:	xchg   BYTE PTR [ecx-0x6c],dl
  40a627:	jne    0x40a644
  40a629:	cmp    DWORD PTR [ebp+0x6a],0x473e9c2
  40a630:	loop   0x40a674
  40a632:	jmp    0xc325:0x6d804735
  40a639:	in     al,dx
  40a63a:	jecxz  0x40a5d7
  40a63c:	popa   
  40a63d:	xchg   esp,eax
  40a63e:	enter  0xa12b,0xfb
  40a642:	xor    bl,BYTE PTR ds:0xd0d97cf9
  40a648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a649:	js     0x40a611
  40a64b:	mov    BYTE PTR [edx+0x2b],ch
  40a64e:	and    eax,0x96d01103
  40a653:	xor    DWORD PTR [ecx],edi
  40a655:	lods   al,BYTE PTR ds:[esi]
  40a656:	sub    eax,0x3c76ded
  40a65b:	mov    esi,0x6ef5417b
  40a660:	fld    DWORD PTR [edx-0x22]
  40a663:	xor    DWORD PTR [eax+esi*8+0x0],edi
  40a667:	ja     0x40a6c7
  40a669:	sbb    ch,bl
  40a66b:	int3   
  40a66c:	repz jnp 0x40a697
  40a66f:	pop    ebx
  40a670:	ss fneni(8087 only) 
  40a673:	pusha  
  40a674:	call   0x7dc7:0xcfe9716b
  40a67b:	inc    ebx
  40a67c:	pop    ds
  40a67d:	add    DWORD PTR [eax],ecx
  40a67f:	xor    ebx,DWORD PTR [edx]
  40a681:	push   0x46
  40a683:	mov    ch,0x78
  40a685:	mov    edx,0x75fc853
  40a68a:	pop    es
  40a68b:	push   DWORD PTR [ebx]
  40a68d:	leave  
  40a68e:	clc    
  40a68f:	outs   dx,DWORD PTR ds:[esi]
  40a690:	cld    
  40a691:	push   edi
  40a692:	test   dl,ch
  40a694:	arpl   ax,bx
  40a696:	mov    edx,0x7173f004
  40a69b:	jmp    0xbe02f0ac
  40a6a0:	lock stos BYTE PTR es:[edi],al
  40a6a2:	xchg   DWORD PTR [eax],ebx
  40a6a4:	test   eax,0xedf0f9d8
  40a6a9:	imul   DWORD PTR [ebp-0x7f]
  40a6ac:	clc    
  40a6ad:	aaa    
  40a6ae:	xor    eax,0xcc769c7b
  40a6b3:	ds jp  0x40a662
  40a6b6:	call   DWORD PTR [esi]
  40a6b8:	bound  ebx,QWORD PTR [ebx+0x7a]
  40a6bb:	(bad)  
  40a6bc:	dec    ebx
  40a6bd:	(bad)  [edx-0x1617372f]
  40a6c3:	mov    al,0x91
  40a6c5:	or     DWORD PTR [edi-0x3972762b],ecx
  40a6cb:	mov    ch,0xf
  40a6cd:	pop    esi
  40a6ce:	cdq    
  40a6cf:	jle    0x40a688
  40a6d1:	dec    esi
  40a6d2:	mov    WORD PTR [esi+0x4f7be031],fs
  40a6d8:	and    cl,al
  40a6da:	dec    eax
  40a6db:	out    dx,al
  40a6dc:	outs   dx,DWORD PTR ds:[esi]
  40a6dd:	imul   eax,DWORD PTR ds:0xf77ef41a,0xffffffd9
  40a6e4:	and    BYTE PTR [eax],dl
  40a6e6:	test   eax,0xe354d698
  40a6eb:	dec    edx
  40a6ec:	ins    BYTE PTR es:[edi],dx
  40a6ed:	cdq    
  40a6ee:	je     0x40a6bc
  40a6f0:	xchg   ecx,eax
  40a6f1:	imul   ecx,ebx,0x6ca34a99
  40a6f7:	ins    BYTE PTR es:[edi],dx
  40a6f8:	adc    eax,0xe7d96b39
  40a6fd:	cmp    ecx,DWORD PTR [edi+ebp*1]
  40a700:	xor    BYTE PTR gs:0x56ae79d3,dh
  40a707:	int    0x3b
  40a709:	jb     0x40a75b
  40a70b:	sub    al,0x30
  40a70d:	or     eax,0x73bcda6
  40a712:	xchg   esi,eax
  40a713:	mov    WORD PTR [esi-0x335a4201],ss
  40a719:	(bad)  
  40a71a:	adc    DWORD PTR [ebp+0x66],ebp
  40a71d:	add    DWORD PTR [eax+0xf],0xffffffba
  40a721:	fs inc eax
  40a723:	sbb    eax,0x9ab1c838
  40a728:	adc    dl,BYTE PTR [eax+ebp*1]
  40a72b:	jmp    0xd1c7:0x650f3d63
  40a732:	xchg   bx,ax
  40a734:	jmp    0x40a7a7
  40a736:	jmp    0x40a764
  40a738:	out    0xd,eax
  40a73a:	div    DWORD PTR [edx+0xc]
  40a73d:	gs aas 
  40a73f:	jae    0x40a72a
  40a741:	mov    esp,0xc26b6aae
  40a746:	push   ebx
  40a747:	adc    al,0x16
  40a749:	hlt    
  40a74a:	xchg   esi,eax
  40a74b:	push   eax
  40a74c:	in     eax,dx
  40a74d:	test   eax,0xa7884fbe
  40a752:	cs mov esp,0x28c11a9e
  40a758:	adc    ch,bl
  40a75a:	or     eax,0xef1e8680
  40a75f:	add    bl,BYTE PTR [edx+0x13]
  40a762:	test   eax,0x74afdaa9
  40a767:	adc    al,0x4d
  40a769:	cli    
  40a76a:	call   0x79107281
  40a76f:	adc    DWORD PTR [edx],esi
  40a771:	adc    ecx,ebp
  40a773:	das    
  40a774:	jne    0x40a756
  40a776:	cmc    
  40a777:	iret   
  40a778:	xor    dh,BYTE PTR [esi]
  40a77a:	out    0x77,al
  40a77c:	cmp    dl,BYTE PTR [ecx+0x34464a24]
  40a782:	adc    DWORD PTR [ebp+0x657002bf],0x48
  40a789:	pop    ebx
  40a78a:	inc    ecx
  40a78b:	daa    
  40a78c:	pusha  
  40a78d:	outs   dx,DWORD PTR ds:[esi]
  40a78e:	push   0x3b7dee03
  40a793:	scas   eax,DWORD PTR es:[edi]
  40a794:	xchg   edx,eax
  40a795:	sub    ch,0x14
  40a798:	push   ebx
  40a799:	sub    BYTE PTR [esi+0x38],al
  40a79c:	pushf  
  40a79d:	inc    esi
  40a79e:	add    al,0x57
  40a7a0:	push   ebp
  40a7a1:	push   es
  40a7a2:	pop    ecx
  40a7a3:	xchg   esp,eax
  40a7a4:	shl    DWORD PTR [ebp+ebp*2-0x5adf498e],1
  40a7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ac:	cld    
  40a7ad:	int    0x82
  40a7af:	sbb    esi,DWORD PTR [ebx-0x67]
  40a7b2:	mov    dh,0x2f
  40a7b4:	sub    al,0xb5
  40a7b6:	sbb    eax,0x75b72b39
  40a7bb:	jecxz  0x40a7e6
  40a7bd:	test   al,0xc
  40a7bf:	jge    0x40a7b0
  40a7c1:	dec    ecx
  40a7c2:	xlat   BYTE PTR ds:[ebx]
  40a7c3:	xchg   edx,eax
  40a7c4:	retf   0x152d
  40a7c7:	cld    
  40a7c8:	stc    
  40a7c9:	mov    ch,0x29
  40a7cb:	or     esp,DWORD PTR [ebp+ecx*8-0x2]
  40a7cf:	adc    dh,0xcd
  40a7d2:	mov    edi,0x8b02afc8
  40a7d7:	pop    es
  40a7d8:	mov    esp,0xe0a30493
  40a7dd:	or     DWORD PTR [esi-0x4f],eax
  40a7e0:	jb     0x40a788
  40a7e2:	cmc    
  40a7e3:	adc    dl,BYTE PTR [ecx-0x23bac57e]
  40a7e9:	aam    0x5a
  40a7eb:	mov    bh,0x29
  40a7ed:	ret    
  40a7ee:	idiv   BYTE PTR [esp+edi*2-0x43]
  40a7f2:	xor    DWORD PTR [ebx],esp
  40a7f4:	pop    eax
  40a7f5:	rol    DWORD PTR [edi-0x7],cl
  40a7f8:	prefetch BYTE PTR [eax+0x419e2d67]
  40a7ff:	or     al,0xc2
  40a801:	aam    0x5e
  40a803:	sbb    dl,0xb
  40a806:	pop    ds
  40a807:	jecxz  0x40a829
  40a809:	aas    
  40a80a:	mov    bl,0xcc
  40a80c:	sbb    al,0x1f
  40a80e:	popf   
  40a80f:	inc    ebp
  40a810:	cld    
  40a811:	ds mov cl,0xbb
  40a814:	rol    dh,1
  40a816:	jno    0x40a7fc
  40a818:	mov    BYTE PTR [esi+0xf41ec26],bh
  40a81e:	aaa    
  40a81f:	add    BYTE PTR [ebx],bh
  40a821:	sbb    ch,0x9
  40a824:	pusha  
  40a825:	cld    
  40a826:	fsubr  QWORD PTR [edx]
  40a828:	fisttp WORD PTR [edx+0xf]
  40a82b:	xchg   edi,esi
  40a82d:	mov    ch,0x68
  40a82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a830:	pop    ecx
  40a831:	stc    
  40a832:	add    eax,0x70760f01
  40a837:	in     eax,dx
  40a838:	mov    bl,0xc6
  40a83b:	or     DWORD PTR [ecx],0x1b05f255
  40a841:	scas   eax,DWORD PTR es:[edi]
  40a842:	rcl    DWORD PTR [eax-0x37446171],0x4
  40a849:	push   cs
  40a84a:	shl    esi,1
  40a84c:	pop    ebx
  40a84d:	and    ebx,eax
  40a84f:	dec    edi
  40a850:	add    DWORD PTR [ecx-0x61e62e3c],ecx
  40a856:	test   al,0xa9
  40a858:	cmp    bl,bh
  40a85a:	mov    dl,0x95
  40a85c:	lods   al,BYTE PTR es:[esi]
  40a85e:	icebp  
  40a85f:	jle    0x40a8bd
  40a861:	sbb    al,BYTE PTR [eax-0x59]
  40a864:	mov    edx,0x86c8904
  40a869:	fimul  DWORD PTR [esi+0x71]
  40a86c:	arpl   WORD PTR [ebx],ax
  40a86e:	add    dl,BYTE PTR fs:[edx-0x42dee96b]
  40a875:	pop    ebp
  40a876:	or     dl,cl
  40a878:	neg    DWORD PTR ds:0x76bfc62b
  40a87e:	ret    
  40a87f:	hlt    
  40a880:	cs lock sub cl,ah
  40a884:	fsub   QWORD PTR [ebp-0x6e019bfc]
  40a88a:	and    al,0xc5
  40a88c:	call   0x2fe9fc40
  40a891:	lahf   
  40a892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a893:	xor    BYTE PTR [edx+0x6e9e0019],0x4a
  40a89a:	repz ret 
  40a89c:	out    0x3a,al
  40a89e:	ret    0xe255
  40a8a1:	fldcw  WORD PTR ds:0xaf0d3df0
  40a8a7:	arpl   cx,bp
  40a8a9:	fcomp  st(3)
  40a8ab:	sbb    edi,DWORD PTR [ebx+0x24]
  40a8ae:	cli    
  40a8af:	test   DWORD PTR [edi+0x434ec326],esi
  40a8b5:	adc    dl,BYTE PTR [esi+0x52]
  40a8b8:	xchg   ecx,eax
  40a8b9:	fidivr WORD PTR [ebx+0x29cb4676]
  40a8bf:	in     eax,dx
  40a8c0:	inc    eax
  40a8c1:	mov    al,ds:0xc30d5cb0
  40a8c6:	xchg   BYTE PTR [ebp-0x12],bh
  40a8c9:	pop    eax
  40a8ca:	xchg   edi,eax
  40a8cb:	sub    ch,BYTE PTR [ecx]
  40a8cd:	ss (bad) 
  40a8cf:	cwde   
  40a8d0:	sub    eax,0x4fdf82aa
  40a8d5:	adc    ebx,DWORD PTR [ebp+ebx*1+0x78b5d630]
  40a8dc:	adc    BYTE PTR [ecx],ch
  40a8de:	sbb    al,0x5a
  40a8e0:	mov    dh,0xb8
  40a8e2:	push   edi
  40a8e3:	and    al,BYTE PTR [edx]
  40a8e5:	mov    ecx,0x6fdaf9d3
  40a8ea:	dec    esi
  40a8eb:	push   cs
  40a8ec:	scas   al,BYTE PTR es:[edi]
  40a8ed:	inc    edx
  40a8ee:	push   cs
  40a8ef:	dec    ebx
  40a8f0:	jne    0x40a91f
  40a8f2:	out    0x98,eax
  40a8f4:	mov    al,ds:0x768e6737
  40a8f9:	div    esp
  40a8fb:	cs in  eax,dx
  40a8fd:	clc    
  40a8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ff:	rcr    eax,0x8d
  40a902:	or     BYTE PTR [edi],ch
  40a904:	pop    esi
  40a905:	adc    eax,0x31ecf0b0
  40a90a:	mov    eax,0xc2c239d1
  40a90f:	cmp    al,0xf0
  40a911:	mov    eax,0xccb35f1a
  40a916:	fcmovnb st,st(5)
  40a918:	jmp    FWORD PTR [ebx+0x3a0ffbb2]
  40a91e:	adc    bl,BYTE PTR [eax+eiz*1+0x16]
  40a922:	xchg   ebp,eax
  40a923:	push   0xa153814b
  40a928:	add    BYTE PTR [edx+eiz*8+0x5b5080d9],dl
  40a92f:	jns    0x40a998
  40a931:	add    BYTE PTR [ecx+0x40],al
  40a934:	sub    DWORD PTR [ecx-0x37b9fca9],0x5f6e9f2e
  40a93e:	jg     0x40a99a
  40a940:	jbe    0x40a96c
  40a942:	inc    ecx
  40a943:	jnp    0x40a900
  40a945:	test   BYTE PTR [edi-0x26],bh
  40a948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a949:	push   edx
  40a94a:	adc    BYTE PTR [ecx+0x3907d106],ah
  40a950:	mov    cl,0x57
  40a952:	push   esp
  40a953:	(bad)  
  40a954:	cmp    dh,BYTE PTR [eax-0x3e2b2310]
  40a95a:	push   esp
  40a95b:	dec    edi
  40a95c:	retf   
  40a95d:	xchg   ebp,eax
  40a95e:	retf   0x6902
  40a961:	into   
  40a962:	pushf  
  40a963:	jle    0x40a944
  40a965:	fdivr  DWORD PTR [ebx+eiz*4+0x36]
  40a969:	pop    ebp
  40a96a:	mov    ecx,0x2c3c04d4
  40a96f:	xchg   edi,eax
  40a970:	jno    0x40a996
  40a972:	ret    0x2dee
  40a975:	inc    eax
  40a976:	repz fld TBYTE PTR [esi-0x745bee6d]
  40a97d:	shr    DWORD PTR [edx],1
  40a97f:	adc    dh,BYTE PTR [eax+0xe]
  40a982:	sub    ebx,DWORD PTR [esi+0x72]
  40a985:	dec    ebp
  40a986:	shr    BYTE PTR [edx+ebx*2+0x2e5a419a],0xae
  40a98e:	xor    cl,BYTE PTR [ebx-0x550e98f2]
  40a994:	test   BYTE PTR [eax+0x2c],bh
  40a997:	jp     0x40aa05
  40a999:	dec    ebx
  40a99a:	sub    edx,DWORD PTR [eax-0x3a]
  40a99d:	xchg   ebp,eax
  40a99e:	ret    0xdf84
  40a9a1:	lods   eax,DWORD PTR ds:[esi]
  40a9a2:	adc    DWORD PTR [eax+esi*1],esi
  40a9a5:	mov    eax,ds:0xfde6160
  40a9aa:	pop    esp
  40a9ab:	sub    BYTE PTR [edx+0x8],cl
  40a9ae:	add    eax,0x45dd7e6d
  40a9b3:	or     al,BYTE PTR [edx+0x76]
  40a9b6:	mov    ebx,DWORD PTR [edx+0xb]
  40a9b9:	xchg   BYTE PTR ds:0xf644a308,dl
  40a9bf:	inc    ebp
  40a9c0:	adc    BYTE PTR [ebp+0x4efb4ea4],dl
  40a9c6:	sub    DWORD PTR ds:0x1f38ac1e,ebx
  40a9cc:	push   edi
  40a9cd:	pop    ebx
  40a9ce:	aad    0x9c
  40a9d0:	test   eax,0x84aae5fc
  40a9d5:	je     0x40a9ce
  40a9d7:	gs push esp
  40a9d9:	(bad)  
  40a9da:	jmp    0x40a963
  40a9dc:	cmp    ebp,DWORD PTR [esi-0x44]
  40a9df:	scas   eax,DWORD PTR es:[edi]
  40a9e0:	pop    ebp
  40a9e1:	mov    ebx,0x216ea5d1
  40a9e6:	add    DWORD PTR [eax+edx*1+0x73],esp
  40a9ea:	dec    BYTE PTR [edx+eiz*2]
  40a9ed:	xor    BYTE PTR [ecx+0x6dbadfac],ah
  40a9f3:	shl    edi,0x66
  40a9f6:	mov    dl,0x10
  40a9f8:	bound  si,DWORD PTR [edx]
  40a9fb:	adc    esp,eax
  40a9fd:	cli    
  40a9fe:	pop    ss
  40a9ff:	jmp    0x40aa77
  40aa01:	sub    eax,eax
  40aa03:	jns    0x40aa51
  40aa05:	ds int 0x9
  40aa08:	ss inc ebp
  40aa0a:	retf   0xe136
  40aa0d:	xor    eax,0xec63fbae
  40aa12:	adc    cl,BYTE PTR ds:[ecx+ecx*8-0x76]
  40aa17:	popa   
  40aa18:	mov    edi,0x11976f97
  40aa1d:	gs push esp
  40aa1f:	cmp    eax,0x7288eb09
  40aa24:	mov    esi,0x556bf087
  40aa29:	gs mov edi,0x5e0704e3
  40aa2f:	xchg   esp,eax
  40aa30:	xor    eax,0xd98e2670
  40aa35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa36:	mov    eax,0x3f1b08a
  40aa3b:	stos   BYTE PTR es:[edi],al
  40aa3c:	jae    0x40a9c0
  40aa3e:	stos   DWORD PTR es:[edi],eax
  40aa3f:	mov    edx,edi
  40aa41:	pop    ecx
  40aa42:	imul   DWORD PTR [esi]
  40aa44:	pop    esp
  40aa45:	add    dl,BYTE PTR [edi]
  40aa47:	mov    ah,BYTE PTR [ecx+eiz*2]
  40aa4a:	xchg   ebx,eax
  40aa4b:	jmp    0x5653:0x4d7a9a5c
  40aa52:	jle    0x40aa6c
  40aa54:	fisttp QWORD PTR [eax+0x47]
  40aa57:	mov    dh,0x60
  40aa59:	clc    
  40aa5a:	sub    eax,0x6e28bb24
  40aa5f:	pop    ss
  40aa60:	cld    
  40aa61:	(bad)  
  40aa62:	lock xor BYTE PTR [esi],dh
  40aa65:	ins    DWORD PTR es:[edi],dx
  40aa66:	pavgw  mm7,QWORD PTR [edi]
  40aa69:	lods   al,BYTE PTR ds:[esi]
  40aa6a:	into   
  40aa6b:	das    
  40aa6c:	lea    ebx,[ecx+ecx*8+0x11]
  40aa70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa71:	int    0x5b
  40aa73:	mov    ds:0xc2bca82a,eax
  40aa78:	popf   
  40aa79:	or     al,0x65
  40aa7b:	mov    edx,0x75acada9
  40aa80:	std    
  40aa81:	dec    edx
  40aa82:	data16 jp 0x40aa34
  40aa85:	ins    DWORD PTR es:[edi],dx
  40aa86:	jo     0x40aa32
  40aa88:	and    DWORD PTR [edi],edi
  40aa8a:	cmp    BYTE PTR [ebx],dh
  40aa8c:	imul   ecx,DWORD PTR [ebp+0x39],0x7c
  40aa90:	fcom   DWORD PTR [ebp+0x6a0b2a28]
  40aa96:	xchg   ebp,eax
  40aa97:	sub    BYTE PTR [edx],0x6a
  40aa9a:	pop    esp
  40aa9b:	jbe    0x40aa60
  40aa9d:	gs dec esp
  40aa9f:	and    al,0x74
  40aaa1:	jge    0x40aa2b
  40aaa3:	js     0x40ab1d
  40aaa5:	mov    eax,ds:0xe73b04a0
  40aaaa:	dec    ebx
  40aaab:	cld    
  40aaac:	hlt    
  40aaad:	dec    BYTE PTR [ebp+0x60203daa]
  40aab3:	adc    DWORD PTR [ebx+0x1c],ecx
  40aab6:	jbe    0x40aafa
  40aab8:	fcom   QWORD PTR [ecx]
  40aaba:	push   cs
  40aabb:	int    0x43
  40aabd:	jle    0x40ab00
  40aabf:	in     eax,dx
  40aac0:	int    0xaa
  40aac2:	test   al,0x7f
  40aac4:	push   edx
  40aac5:	arpl   WORD PTR [edi+0x7f],sp
  40aac8:	sbb    eax,0xe9f2e6f4
  40aacd:	xor    bh,0xf
  40aad0:	imul   ebp,DWORD PTR [ebx-0x896b8a8],0x20
  40aad7:	cmc    
  40aad8:	bound  edi,QWORD PTR [edi+0x1a49c814]
  40aade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aadf:	enter  0x4b4e,0x66
  40aae3:	dec    ebx
  40aae4:	jmp    0x40aafb
  40aae6:	mov    cl,0x6c
  40aae8:	lods   eax,DWORD PTR ds:[esi]
  40aae9:	sub    DWORD PTR [esi+0x5b],edi
  40aaec:	ss inc eax
  40aaee:	inc    ebx
  40aaef:	lods   al,BYTE PTR ds:[esi]
  40aaf0:	ja     0x40ab69
  40aaf2:	xchg   esp,eax
  40aaf3:	dec    edi
  40aaf4:	push   edx
  40aaf5:	fs jge 0x40ab0e
  40aaf8:	jg     0x40ab77
  40aafa:	cmp    BYTE PTR [ecx+eax*1-0x1c],bh
  40aafe:	mov    bl,0x2d
  40ab00:	cmp    ebp,DWORD PTR [edx]
  40ab02:	xchg   ecx,eax
  40ab03:	call   0x1912324b
  40ab08:	je     0x40ab7b
  40ab0a:	and    dh,ah
  40ab0c:	cld    
  40ab0d:	mov    ebp,0x4836a817
  40ab12:	add    edx,DWORD PTR [edx+0x3f]
  40ab15:	sbb    edi,ebx
  40ab17:	test   DWORD PTR [esi],ebp
  40ab19:	lods   eax,DWORD PTR ds:[esi]
  40ab1a:	push   eax
  40ab1b:	rcr    BYTE PTR [ebp-0x1e],cl
  40ab1e:	pop    ecx
  40ab1f:	ret    0xc633
  40ab22:	lods   eax,DWORD PTR ds:[esi]
  40ab23:	mov    dl,ch
  40ab25:	add    esp,DWORD PTR [ebp+edx*1-0x4b]
  40ab29:	push   0xffffffdb
  40ab2b:	enter  0x3392,0x9b
  40ab2f:	add    edx,DWORD PTR [ecx-0x40]
  40ab32:	popa   
  40ab33:	and    eax,0x922a9bf8
  40ab38:	rol    bh,cl
  40ab3a:	dec    ecx
  40ab3b:	push   cs
  40ab3c:	les    eax,FWORD PTR [eax-0x693ee6c]
  40ab42:	out    dx,al
  40ab43:	push   ebp
  40ab44:	and    al,0xae
  40ab46:	loope  0x40ab4f
  40ab48:	stc    
  40ab49:	stos   DWORD PTR es:[edi],eax
  40ab4a:	nop
  40ab4b:	or     edi,DWORD PTR [edi+0x3708510e]
  40ab51:	adc    eax,0xb6595077
  40ab56:	mov    eax,ds:0x2b440bf6
  40ab5b:	leave  
  40ab5c:	push   ebp
  40ab5d:	shr    BYTE PTR [ebx],0xbc
  40ab60:	sbb    al,0xfb
  40ab62:	les    ecx,FWORD PTR [edx]
  40ab64:	adc    ebx,ecx
  40ab66:	xor    eax,0x60cd482d
  40ab6b:	out    0xe8,eax
  40ab6d:	mov    al,ds:0xe5043a24
  40ab72:	sub    al,0x0
  40ab74:	mov    bl,0x32
  40ab76:	lods   al,BYTE PTR ds:[esi]
  40ab77:	dec    ecx
  40ab78:	jge    0x40ab2b
  40ab7a:	pop    eax
  40ab7c:	xor    al,0x4e
  40ab7e:	dec    edi
  40ab7f:	dec    esi
  40ab80:	cs sbb ecx,eax
  40ab83:	add    DWORD PTR es:[ebx-0x58490fb1],eax
  40ab8a:	leave  
  40ab8b:	jp     0x40ab86
  40ab8d:	and    ebx,ebx
  40ab8f:	pusha  
  40ab90:	loop   0x40ab74
  40ab92:	sub    ebx,DWORD PTR ds:[ebx+0x7a]
  40ab96:	mov    bl,0x2b
  40ab98:	test   eax,0x43577785
  40ab9d:	shr    BYTE PTR [ecx-0x57],1
  40aba0:	xchg   ebp,eax
  40aba1:	imul   ebx,DWORD PTR [ecx-0x7a],0xb8822fb4
  40aba8:	(bad)  
  40aba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abaa:	xchg   edi,eax
  40abab:	inc    ebp
  40abac:	or     ch,0xf
  40abaf:	neg    DWORD PTR [ecx]
  40abb1:	scas   al,BYTE PTR es:[edi]
  40abb2:	fwait
  40abb3:	jno    0x40ab78
  40abb5:	mov    dl,ch
  40abb7:	sub    eax,0x9944281a
  40abbc:	hlt    
  40abbd:	jno    0x40abf0
  40abbf:	arpl   WORD PTR ds:0x3d015a2,sp
  40abc5:	and    bl,BYTE PTR [ebx]
  40abc7:	loope  0x40ac0b
  40abc9:	daa    
  40abca:	retf   
  40abcb:	fld    QWORD PTR [edx]
  40abcd:	and    bl,BYTE PTR [ebp+0x6028537a]
  40abd3:	xchg   ebx,eax
  40abd4:	jge    0x40abb3
  40abd6:	test   al,0x26
  40abd8:	inc    eax
  40abd9:	xor    BYTE PTR [ebx],al
  40abdb:	xor    bh,ch
  40abdd:	je     0x40ac4d
  40abdf:	dec    ecx
  40abe0:	cmp    cl,BYTE PTR [edi-0x2]
  40abe3:	mov    ds:0xc655c33f,al
  40abe8:	fcomip st,st(4)
  40abea:	pop    esp
  40abeb:	inc    BYTE PTR [eax]
  40abed:	mov    DWORD PTR [eax-0x4],ecx
  40abf0:	pop    ebp
  40abf1:	fwait
  40abf2:	pusha  
  40abf3:	add    bh,BYTE PTR [edi+0x15ee0540]
  40abf9:	ins    BYTE PTR es:[edi],dx
  40abfa:	cmc    
  40abfb:	mov    edx,0xce144eb2
  40ac00:	xlat   BYTE PTR ds:[ebx]
  40ac01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac02:	jmp    0xa96:0x67f6549d
  40ac09:	shr    esp,1
  40ac0b:	dec    esi
  40ac0c:	add    BYTE PTR [ebx],al
  40ac0e:	mov    fs,WORD PTR [ecx+0x3765ccd7]
  40ac14:	div    ah
  40ac16:	cmp    al,0xe1
  40ac18:	xor    esp,0x27
  40ac1b:	adc    esp,ebp
  40ac1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac1e:	sub    DWORD PTR [esi+0x52],ebp
  40ac21:	pop    ecx
  40ac22:	int3   
  40ac23:	out    0x7f,eax
  40ac25:	pop    ds
  40ac26:	aad    0x28
  40ac28:	sbb    cl,BYTE PTR [eax]
  40ac2a:	inc    eax
  40ac2b:	xchg   edx,eax
  40ac2c:	or     edi,eax
  40ac2e:	add    eax,ebp
  40ac30:	(bad)  
  40ac31:	cwde   
  40ac32:	mov    ebx,eax
  40ac34:	retf   
  40ac35:	ins    DWORD PTR es:[edi],dx
  40ac36:	mov    dh,0x2f
  40ac38:	mov    edx,DWORD PTR [eax]
  40ac3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac3b:	lods   eax,DWORD PTR ds:[esi]
  40ac3c:	call   0x671:0xc58f95cb
  40ac43:	inc    ebp
  40ac44:	mov    esi,0xba956102
  40ac49:	mov    ebp,DWORD PTR [edx]
  40ac4b:	mov    dl,0xd6
  40ac4d:	inc    eax
  40ac4e:	push   ss
  40ac4f:	pop    ebp
  40ac50:	pop    ss
  40ac51:	sub    cl,0x5b
  40ac54:	jge    0x40acbc
  40ac56:	shl    dh,1
  40ac58:	jns    0x40ac81
  40ac5a:	mov    eax,ds:0xa389da36
  40ac5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac60:	jae    0x40ac7d
  40ac62:	add    cl,BYTE PTR [ebx-0x55a220a1]
  40ac68:	or     BYTE PTR [ebp+ebx*8-0xc3c18d1],ch
  40ac6f:	je     0x40ace5
  40ac71:	jecxz  0x40ac02
  40ac73:	das    
  40ac74:	push   0xa0706b5c
  40ac79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac7a:	sub    eax,DWORD PTR ds:0xd32b5907
  40ac80:	cli    
  40ac81:	repz inc ecx
  40ac83:	inc    esi
  40ac84:	push   cs
  40ac85:	xchg   ebp,eax
  40ac86:	mov    ecx,0x65a6200f
  40ac8b:	dec    ecx
  40ac8c:	(bad)  
  40ac8d:	jmp    0x40ac97
  40ac8f:	test   BYTE PTR [esi-0x59],al
  40ac92:	cmp    bl,BYTE PTR [ecx]
  40ac94:	jae    0x40ac40
  40ac96:	out    dx,al
  40ac97:	mov    edx,0xdb827117
  40ac9c:	ror    ecx,0x96
  40ac9f:	jle    0x40acc6
  40aca1:	mov    edi,0x8614d431
  40aca6:	push   ecx
  40aca7:	add    al,0x6
  40aca9:	add    DWORD PTR [ecx],edx
  40acab:	and    al,0x5
  40acad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acae:	(bad)  
  40acaf:	xchg   ebx,eax
  40acb0:	js     0x40acb2
  40acb2:	pop    esp
  40acb3:	mov    eax,ds:0x8a8398f7
  40acb8:	mov    dh,BYTE PTR [esi]
  40acba:	rcl    DWORD PTR [edx+0x3d913c1],1
  40acc0:	mov    ebp,0x9b0b8f2
  40acc5:	jae    0x40ac59
  40acc7:	dec    ebp
  40acc8:	aam    0xd
  40acca:	xchg   esp,eax
  40accb:	xor    DWORD PTR [esi-0x19db04d0],edi
  40acd1:	xor    BYTE PTR [esi+ecx*8-0x56],dh
  40acd5:	sub    ebp,DWORD PTR [edi+0x59]
  40acd8:	mov    ah,0xaf
  40acda:	xchg   edx,eax
  40acdb:	push   ds
  40acdc:	int    0x85
  40acde:	pop    esp
  40acdf:	in     al,dx
  40ace0:	and    al,0x45
  40ace2:	pop    ds
  40ace3:	stc    
  40ace4:	sbb    esi,DWORD PTR [ecx+esi*1-0x3b50835e]
  40aceb:	inc    eax
  40acec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aced:	out    dx,al
  40acee:	adc    DWORD PTR [ecx-0x7d],0x6d
  40acf2:	pushf  
  40acf3:	aam    0x65
  40acf5:	jg     0x40ad23
  40acf7:	je     0x40aca9
  40acf9:	jne    0x40ad5c
  40acfb:	sbb    BYTE PTR [ebp+0x76],0x6e
  40acff:	push   bp
  40ad01:	mov    edx,0x91bad929
  40ad06:	adc    eax,0xa992ce88
  40ad0b:	cwde   
  40ad0c:	sub    esi,DWORD PTR [eax+0x7f5aebbd]
  40ad12:	aaa    
  40ad13:	adc    al,0xe5
  40ad15:	rcl    ah,0x73
  40ad18:	inc    ebx
  40ad19:	imul   esi,DWORD PTR [ebp+0x64ed4f38],0xd8c1b44
  40ad23:	mov    esp,DWORD PTR [ebx-0x74]
  40ad26:	pop    edx
  40ad27:	aad    0x9d
  40ad29:	sbb    bl,BYTE PTR [edx]
  40ad2b:	sahf   
  40ad2c:	push   ds
  40ad2d:	std    
  40ad2e:	sbb    DWORD PTR [esi+0x15],ecx
  40ad31:	(bad)  
  40ad32:	jp     0x40adac
  40ad34:	pop    ecx
  40ad35:	aaa    
  40ad36:	push   ebx
  40ad37:	stos   DWORD PTR es:[edi],eax
  40ad38:	ja     0x40acfc
  40ad3a:	mov    esp,0x16fa8339
  40ad3f:	outs   dx,BYTE PTR ds:[esi]
  40ad40:	jp     0x40ad79
  40ad42:	and    esp,DWORD PTR [ebx]
  40ad44:	fadd   st(2),st
  40ad46:	popa   
  40ad47:	fiadd  DWORD PTR [ebx-0x163a0b13]
  40ad4d:	in     eax,dx
  40ad4e:	and    cl,BYTE PTR [eax-0x35]
  40ad51:	es dec ebp
  40ad53:	into   
  40ad54:	sbb    dh,BYTE PTR [ebx]
  40ad56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad57:	pop    edi
  40ad58:	push   es
  40ad59:	dec    ebp
  40ad5a:	inc    ecx
  40ad5b:	mov    bh,0x91
  40ad5d:	fisttp DWORD PTR [edi-0x65]
  40ad60:	sahf   
  40ad61:	rol    DWORD PTR [esi-0x6450e2cd],1
  40ad67:	jmp    0xbac6:0x2150e513
  40ad6e:	into   
  40ad6f:	test   DWORD PTR [ecx-0x1c0678ca],esp
  40ad75:	inc    edx
  40ad76:	adc    BYTE PTR [edx+ebx*2+0x69483dd2],ah
  40ad7d:	ss stos BYTE PTR es:[edi],al
  40ad7f:	mov    esi,0x247209fc
  40ad84:	rcl    BYTE PTR [edx+eax*4],0x21
  40ad88:	aad    0xfd
  40ad8a:	mov    eax,ds:0x30e9d64
  40ad8f:	(bad)  
  40ad90:	daa    
  40ad91:	fdivr  DWORD PTR [eax]
  40ad93:	jns    0x40ad25
  40ad95:	sub    al,0x4d
  40ad97:	sbb    ebx,DWORD PTR [edi]
  40ad99:	sub    al,ch
  40ad9b:	and    al,0x53
  40ad9d:	paddsw mm1,mm1
  40ada0:	jnp    0x40adb2
  40ada2:	cld    
  40ada3:	inc    eax
  40ada4:	nop
  40ada5:	adc    al,0xb0
  40ada7:	sbb    al,0xe0
  40ada9:	ret    0x5313
  40adac:	vshufpd xmm1,xmm1,xmm2,0x3
  40adb1:	fs jmp 0x40ada6
  40adb4:	jmp    0xb67c55d
  40adb9:	xchg   BYTE PTR [ebp+0x41cad6f7],bl
  40adbf:	mov    bl,0x8f
  40adc1:	pop    edx
  40adc2:	mul    BYTE PTR [edi]
  40adc4:	cmp    al,0x6c
  40adc6:	sub    BYTE PTR [eiz*2-0x73cdf7d3],al
  40adcd:	retf   0x989e
  40add0:	test   BYTE PTR [ebx+0x3a],al
  40add3:	fbstp  TBYTE PTR [edi*1+0x1703af52]
  40adda:	js     0x40ae37
  40addc:	cli    
  40addd:	ds xchg ebx,eax
  40addf:	lods   al,BYTE PTR ds:[esi]
  40ade0:	jnp    0x40ae20
  40ade2:	test   DWORD PTR [edx+0x1e],esp
  40ade5:	das    
  40ade6:	repnz or eax,0xdf15a8a2
  40adec:	jno    0x40ae5c
  40adee:	inc    eax
  40adef:	into   
  40adf0:	dec    ebx
  40adf1:	out    dx,eax
  40adf2:	mov    esi,esp
  40adf4:	and    eax,0x960ebad6
  40adf9:	das    
  40adfa:	jle    0x40ae2d
  40adfc:	out    dx,eax
  40adfd:	stc    
  40adfe:	inc    esi
  40adff:	cwde   
  40ae00:	in     al,dx
  40ae01:	nop
  40ae02:	mov    ?,WORD PTR [esi-0x3e125061]
  40ae08:	pop    es
  40ae09:	retf   0xf3da
  40ae0c:	xchg   BYTE PTR [ebp-0x53],dh
  40ae0f:	fistp  WORD PTR [ebp+eax*4+0x2e]
  40ae13:	sbb    DWORD PTR [ebx-0x225b3083],0xf3ebbeeb
  40ae1d:	jmp    0xaa1a014b
  40ae22:	cld    
  40ae23:	fisub  WORD PTR [esi+0x7f]
  40ae26:	pop    edi
  40ae27:	inc    edi
  40ae28:	inc    ebx
  40ae29:	icebp  
  40ae2a:	mov    edx,0x7be7ad5
  40ae2f:	mov    ecx,0x59a46247
  40ae34:	loopne 0x40ae87
  40ae36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae37:	and    edx,DWORD PTR [eax-0x418f034d]
  40ae3d:	stos   BYTE PTR es:[edi],al
  40ae3e:	div    BYTE PTR [ecx+0x2d]
  40ae41:	fadd   st(1),st
  40ae43:	lods   eax,DWORD PTR ds:[esi]
  40ae44:	cmp    al,0x69
  40ae46:	xchg   esp,eax
  40ae47:	test   DWORD PTR [ecx-0x22],esi
  40ae4a:	push   edi
  40ae4b:	mov    esi,0x32d83192
  40ae50:	sbb    BYTE PTR [ecx+0x1],ah
  40ae53:	xor    eax,0xd773a6cb
  40ae58:	icebp  
  40ae59:	addr16 mov edx,0xad32aa99
  40ae5f:	nop
  40ae60:	jmp    0xb2e2db5e
  40ae65:	inc    eax
  40ae66:	mov    ebx,0x3065db45
  40ae6b:	mov    ds:0xc8329daa,eax
  40ae70:	int    0xa1
  40ae72:	jns    0x40adf4
  40ae74:	arpl   WORD PTR [edi-0x776664d4],si
  40ae7a:	leave  
  40ae7b:	inc    eax
  40ae7c:	adc    al,0xe7
  40ae7e:	ss jnp 0x40aeca
  40ae81:	pusha  
  40ae82:	mov    eax,0x90c21148
  40ae87:	mov    edx,0xfd2fb12d
  40ae8c:	push   0x7c8450ea
  40ae91:	xor    DWORD PTR [eax],0xffffffd7
  40ae94:	fnstsw WORD PTR [eax-0x3394c961]
  40ae9a:	mov    bl,0x5b
  40ae9c:	in     eax,dx
  40ae9d:	sti    
  40ae9e:	mov    bl,BYTE PTR [edx-0x385cffdf]
  40aea4:	lods   eax,DWORD PTR ds:[esi]
  40aea5:	fnstenv [ecx+0x19]
  40aea8:	adc    eax,0xb10baee6
  40aead:	in     al,0x93
  40aeaf:	hlt    
  40aeb0:	xchg   edx,eax
  40aeb1:	stos   BYTE PTR es:[edi],al
  40aeb2:	fwait
  40aeb3:	outs   dx,BYTE PTR ds:[esi]
  40aeb4:	test   al,0xff
  40aeb6:	push   esi
  40aeb7:	sub    eax,ebx
  40aeb9:	sub    bl,BYTE PTR [ebp+0x46ea9c59]
  40aebf:	loope  0x40ae96
  40aec1:	sbb    DWORD PTR [eax+0x7091df7],0xffffffea
  40aec8:	sbb    DWORD PTR [ecx+0x26],edx
  40aecb:	int    0xd5
  40aecd:	add    eax,0x1716db76
  40aed2:	and    BYTE PTR ds:0x2e2c5658,ah
  40aed8:	imul   edi,eax,0x39
  40aedb:	mov    esi,0x882012e3
  40aee0:	call   0x2281:0xd22b75a3
  40aee7:	test   ah,bl
  40aee9:	iret   
  40aeea:	xlat   BYTE PTR ds:[ebx]
  40aeeb:	xor    al,ah
  40aeed:	mov    edx,0x83476f81
  40aef2:	sbb    al,BYTE PTR [edi+0xde3beae]
  40aef8:	and    DWORD PTR [ecx-0x68862134],0x42
  40aeff:	mov    DWORD PTR [eax+0x5dcfa800],edx
  40af05:	pop    es
  40af06:	cmp    al,BYTE PTR [eax+0x40]
  40af09:	dec    edi
  40af0a:	add    DWORD PTR [ecx+0x6],edx
  40af0d:	dec    edx
  40af0e:	jmp    0x7607:0x72baa3a4
  40af15:	in     eax,0x4a
  40af17:	icebp  
  40af18:	fs adc eax,0x27b3762a
  40af1e:	pop    esi
  40af1f:	xor    BYTE PTR [edx],ch
  40af21:	ret    
  40af22:	cld    
  40af23:	arpl   WORD PTR [edi+0x48],sp
  40af26:	sub    BYTE PTR [ebx],cl
  40af28:	mov    ch,ah
  40af2a:	stos   DWORD PTR es:[edi],eax
  40af2b:	lahf   
  40af2c:	inc    edx
  40af2d:	(bad)  
  40af2e:	fimul  DWORD PTR [esi-0x5636b730]
  40af34:	fwait
  40af35:	xor    al,0x6
  40af37:	push   ebx
  40af38:	xor    cl,al
  40af3a:	push   ebp
  40af3b:	and    ebp,DWORD PTR [eax+eax*8+0x7f]
  40af3f:	sub    esp,DWORD PTR [eax]
  40af41:	cmp    DWORD PTR [edi],ebp
  40af43:	mov    dh,0x53
  40af45:	mov    ebx,0x6c49818b
  40af4a:	sbb    bh,dh
  40af4c:	jo     0x40afc3
  40af4e:	dec    ebp
  40af4f:	popa   
  40af50:	mov    ch,0xb4
  40af52:	xchg   DWORD PTR ds:0xf8e0f742,ebp
  40af58:	test   BYTE PTR [edi+0x45c36f93],0x3b
  40af5f:	lea    ebx,[eax+edi*2]
  40af62:	jno    0x40aeef
  40af64:	fucomp st(7)
  40af66:	retf   
  40af67:	stc    
  40af68:	xor    BYTE PTR fs:[ecx+0x71],0x62
  40af6d:	cdq    
  40af6e:	fcom   DWORD PTR [ebx-0x487a22bc]
  40af74:	inc    ebx
  40af75:	xchg   ebx,eax
  40af76:	out    dx,al
  40af77:	stos   BYTE PTR es:[edi],al
  40af78:	imul   ebp,DWORD PTR [edx],0x1339219f
  40af7e:	push   edx
  40af7f:	sub    DWORD PTR [ecx+0x4d],edi
  40af82:	pop    es
  40af83:	in     eax,0xdd
  40af85:	ss push 0x46
  40af88:	(bad)  
  40af89:	(bad)  
  40af8a:	in     al,0xd2
  40af8c:	sbb    dh,BYTE PTR [ebp+0x53578f10]
  40af92:	mov    dh,0xb
  40af94:	push   0xffffffb6
  40af96:	mov    dh,0x14
  40af98:	jae    0x40af83
  40af9a:	inc    ebx
  40af9b:	cmp    bl,bl
  40af9d:	fiadd  DWORD PTR [esi+0x3168eb63]
  40afa3:	ds adc eax,0x7944dd68
  40afa9:	or     DWORD PTR [ebp-0x2045592b],ebp
  40afaf:	repz enter 0x1858,0x20
  40afb4:	popf   
  40afb5:	dec    edx
  40afb6:	loope  0x40af60
  40afb8:	inc    edx
  40afb9:	out    0x19,eax
  40afbb:	test   DWORD PTR [edx],edi
  40afbd:	jb     0x40b002
  40afbf:	arpl   cx,si
  40afc1:	and    BYTE PTR [edi],0xe1
  40afc4:	mul    DWORD PTR [ebx+0x65]
  40afc7:	cdq    
  40afc8:	mov    bh,0xd8
  40afca:	sbb    al,BYTE PTR [ebx]
  40afcc:	loop   0x40b007
  40afce:	xchg   edx,eax
  40afcf:	add    eax,0xe41ce74c
  40afd4:	int    0x89
  40afd6:	dec    edi
  40afd7:	jnp    0x8920b048
  40afdd:	xor    BYTE PTR [ebx],cl
  40afdf:	aas    
  40afe0:	dec    esp
  40afe1:	int3   
  40afe2:	imul   esi,DWORD PTR [esi-0x65],0x98005384
  40afe9:	fdiv   DWORD PTR [ecx-0x31]
  40afec:	mov    ecx,0xaa8eea0b
  40aff1:	repnz cmp DWORD PTR [ebx+0x13],ecx
  40aff5:	test   al,0x9a
  40aff7:	(bad)  
  40aff8:	mov    bh,0xdb
  40affa:	and    dh,BYTE PTR ds:0x6abddf94
  40b000:	sub    eax,0x66686430
  40b005:	jne    0x40b074
  40b007:	cmp    cl,ch
  40b009:	pop    edi
  40b00a:	cwde   
  40b00b:	imul   ebx,DWORD PTR [ebx+ecx*8],0x3
  40b00f:	fisttp DWORD PTR [eax+edx*4]
  40b012:	mov    ebx,0x76d1c47c
  40b017:	jl     0x40afa6
  40b019:	sbb    al,0x8a
  40b01b:	xchg   ecx,eax
  40b01c:	mov    cl,0xdd
  40b01e:	mov    cl,0x21
  40b020:	sub    bh,BYTE PTR [edx-0x13e80503]
  40b026:	into   
  40b027:	test   al,0x13
  40b029:	icebp  
  40b02a:	push   eax
  40b02b:	sbb    eax,DWORD PTR [ecx]
  40b02d:	out    dx,al
  40b02e:	xchg   ebx,eax
  40b02f:	mov    bl,0xa6
  40b031:	ret    
  40b032:	push   0x3d
  40b034:	cmp    DWORD PTR [ebx+0x5e8a0d6f],esp
  40b03a:	imul   esi,DWORD PTR ds:0x891d3fa2,0xffffffba
  40b041:	xchg   ebx,eax
  40b042:	sbb    esi,DWORD PTR [edi+ebp*4+0x2d9766]
  40b049:	out    dx,eax
  40b04a:	sar    BYTE PTR [edi],1
  40b04c:	inc    edi
  40b04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b04e:	out    0x8c,eax
  40b050:	call   0x57e011ef
  40b055:	fsubr  DWORD PTR [ebx+0xe]
  40b058:	mov    cl,0x92
  40b05a:	addr16 add edi,ecx
  40b05d:	aad    0xab
  40b05f:	data16 (bad) 
  40b061:	aad    0x95
  40b063:	or     DWORD PTR [esi+0x65],esi
  40b066:	inc    esp
  40b067:	inc    ebp
  40b068:	jge    0x40b008
  40b06a:	inc    esi
  40b06b:	test   DWORD PTR [eax+edi*1-0x17],edi
  40b06f:	pop    edx
  40b070:	adc    ebx,edx
  40b072:	pop    DWORD PTR [ecx+ecx*8]
  40b075:	mov    al,ds:0x3e52af4e
  40b07a:	add    al,0x52
  40b07c:	or     eax,0x31613fab
  40b081:	mov    al,0xbb
  40b083:	ins    DWORD PTR es:[edi],dx
  40b084:	shl    BYTE PTR [ebx+edx*2],1
  40b087:	mov    cl,0x28
  40b089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08a:	dec    esp
  40b08b:	scas   eax,DWORD PTR es:[edi]
  40b08c:	and    bl,al
  40b08e:	mov    cl,0xa4
  40b090:	aaa    
  40b091:	cwde   
  40b092:	or     DWORD PTR [eax-0x20],0x248d13aa
  40b099:	mov    ah,0x63
  40b09b:	mov    bl,0x2c
  40b09d:	mov    ds:0x3f02b266,al
  40b0a2:	push   edi
  40b0a3:	jbe    0x40b0a6
  40b0a5:	sbb    esp,DWORD PTR [eax-0x60]
  40b0a8:	mov    al,BYTE PTR [ecx-0x28fcc4f5]
  40b0ae:	test   DWORD PTR ds:0xe20ec338,0xbb70cd04
  40b0b8:	mov    esi,ds
  40b0ba:	mov    ah,BYTE PTR [ebx+0x4c6cd946]
  40b0c0:	jg     0x40b091
  40b0c2:	mov    ebp,0x1723a08b
  40b0c7:	cmp    ecx,DWORD PTR [eax]
  40b0c9:	cmp    eax,0x3b172ddd
  40b0ce:	or     eax,0xb58d8a28
  40b0d3:	retf   
  40b0d4:	aad    0x9f
  40b0d6:	fcomp  st(0)
  40b0d8:	xchg   ebx,eax
  40b0d9:	xor    eax,0xfa122e7d
  40b0de:	(bad)  
  40b0df:	fcom   QWORD PTR [edi]
  40b0e1:	sahf   
  40b0e2:	nop
  40b0e3:	adc    al,0x27
  40b0e5:	add    eax,DWORD PTR [eax]
  40b0e7:	mov    BYTE PTR [ebx+ebp*4-0x67],ch
  40b0eb:	clc    
  40b0ec:	push   ecx
  40b0ed:	adc    ah,BYTE PTR [ebx-0x31]
  40b0f0:	(bad)  
  40b0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f3:	push   ebx
  40b0f4:	rcr    DWORD PTR [ecx],1
  40b0f6:	xor    eax,0x99c692da
  40b0fb:	mov    bl,0x2f
  40b0fd:	sub    eax,0xd88f9fde
  40b102:	jno    0x40b174
  40b104:	imul   esi,DWORD PTR [edi+edi*1+0x14],0x1a199d2a
  40b10c:	and    eax,0x4f1c91c6
  40b111:	push   ds
  40b112:	dec    esp
  40b113:	in     al,dx
  40b114:	mov    ch,0x98
  40b116:	inc    ebx
  40b117:	xor    al,0x25
  40b119:	sbb    al,0xf1
  40b11b:	nop
  40b11c:	mov    bl,0x6e
  40b11e:	dec    esi
  40b11f:	pop    eax
  40b120:	mov    DWORD PTR [eax+0x60],ebp
  40b123:	adc    DWORD PTR [eax+0x51],edi
  40b126:	jnp    0x40b15e
  40b128:	stos   DWORD PTR es:[edi],eax
  40b129:	imul   ebx,DWORD PTR [edi],0x62c43f22
  40b12f:	inc    ebp
  40b130:	aam    0x16
  40b132:	jmp    DWORD PTR [edi-0x58]
  40b135:	ins    DWORD PTR es:[edi],dx
  40b136:	xchg   DWORD PTR [ecx+0x4e430957],esp
  40b13c:	add    BYTE PTR [ecx+0x4284bc14],cl
  40b142:	dec    esp
  40b143:	inc    esp
  40b144:	popf   
  40b145:	fldcw  WORD PTR [esi+0x7d19d56b]
  40b14b:	xlat   BYTE PTR ds:[ebx]
  40b14c:	push   ebp
  40b14d:	pop    eax
  40b14e:	fiadd  WORD PTR [ecx+edx*4+0x2f]
  40b152:	call   0xaaa35157
  40b157:	cmp    DWORD PTR ds:0xbe0ffd8b,ecx
  40b15d:	das    
  40b15e:	mov    edi,0x73bf4cc8
  40b163:	inc    eax
  40b164:	ds mov edx,0x98360ae4
  40b16a:	mov    BYTE PTR ds:0x3165f8e2,dl
  40b170:	add    BYTE PTR [eax],bh
  40b172:	sti    
  40b173:	mov    ds:0xf141d1e3,eax
  40b178:	push   0x41
  40b17a:	push   esp
  40b17b:	dec    ecx
  40b17c:	ins    DWORD PTR es:[edi],dx
  40b17d:	shl    BYTE PTR [eax-0x32afe485],0x97
  40b184:	xchg   DWORD PTR [edx+0x4afcaeb7],ebx
  40b18a:	jg     0x40b1be
  40b18c:	stos   DWORD PTR es:[edi],eax
  40b18d:	gs ins BYTE PTR es:[edi],dx
  40b18f:	cmp    BYTE PTR [eax+ebp*4],ch
  40b192:	clc    
  40b193:	fdiv   QWORD PTR [edx+ebp*2-0x464f12]
  40b19a:	push   0x6162431e
  40b19f:	lods   eax,DWORD PTR ds:[esi]
  40b1a0:	aam    0xe6
  40b1a2:	test   DWORD PTR [ebx],ecx
  40b1a4:	stc    
  40b1a5:	fdivr  st,st(0)
  40b1a7:	in     eax,dx
  40b1a8:	pop    ss
  40b1a9:	test   BYTE PTR [ebx-0x5b27fd88],0xc9
  40b1b0:	(bad)
  40b1b3:	xchg   BYTE PTR ds:0xc6bb76b6,al
  40b1b9:	pop    edx
  40b1ba:	popf   
  40b1bb:	xor    al,0x13
  40b1bd:	repz xor dh,BYTE PTR [esp+eax*8-0x27a09654]
  40b1c5:	mov    ebx,ss
  40b1c7:	inc    esp
  40b1c8:	int    0x53
  40b1ca:	pop    ds
  40b1cb:	push   ss
  40b1cc:	gs jg  0x40b15a
  40b1cf:	mov    ebp,0xdaa91aac
  40b1d4:	sahf   
  40b1d5:	ror    edi,0x18
  40b1d8:	jg     0x40b1c7
  40b1da:	outs   dx,BYTE PTR ds:[esi]
  40b1db:	add    al,0xe1
  40b1dd:	loop   0x40b231
  40b1df:	loop   0x40b1d3
  40b1e1:	mov    ecx,0x88e5feb4
  40b1e6:	cmp    DWORD PTR [eax],eax
  40b1e8:	push   ecx
  40b1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ea:	push   ecx
  40b1eb:	pop    edi
  40b1ec:	push   esp
  40b1ed:	mov    bl,0x7e
  40b1ef:	push   eax
  40b1f0:	pusha  
  40b1f1:	ins    DWORD PTR es:[edi],dx
  40b1f2:	mov    ss:0x1537c07a,eax
  40b1f8:	mov    eax,ds:0x4d3010d9
  40b1fd:	cli    
  40b1fe:	lock mov dh,0xab
  40b201:	pop    ecx
  40b202:	adc    dl,BYTE PTR [esi-0x9]
  40b205:	(bad)  
  40b206:	cs popa 
  40b208:	add    ebx,ebx
  40b20a:	push   es
  40b20b:	call   0xedac:0x9a949d42
  40b212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b213:	sub    eax,0x6e5a14d7
  40b218:	push   ds
  40b219:	retf   
  40b21a:	jb     0x40b283
  40b21c:	mov    ecx,0x92cb2925
  40b221:	or     al,0x7e
  40b223:	scas   al,BYTE PTR es:[edi]
  40b224:	mov    WORD PTR ss:[edi-0x1e0cd55a],es
  40b22b:	sub    BYTE PTR [edx-0x35abe4ae],bl
  40b231:	lods   al,BYTE PTR ds:[esi]
  40b232:	data16 jmp 0x40b259
  40b235:	sub    ebx,DWORD PTR [ebx-0x5cc3eb99]
  40b23b:	inc    edi
  40b23c:	mov    WORD PTR [ebx-0x2ee9ced8],fs
  40b242:	xchg   ecx,eax
  40b243:	pop    edi
  40b244:	mov    ds:0xdc21b762,eax
  40b249:	sbb    BYTE PTR [eax-0x3a],al
  40b24c:	mov    ch,0x7a
  40b24e:	rcr    edi,cl
  40b250:	inc    esi
  40b251:	dec    esp
  40b252:	adc    eax,0xeddb0a3b
  40b257:	pop    esi
  40b258:	push   0xffffff9f
  40b25a:	lock adc bl,BYTE PTR [edi]
  40b25d:	das    
  40b25e:	adc    cl,BYTE PTR [esi+0xb040465]
  40b264:	xchg   BYTE PTR [eax-0x7e6788d7],dl
  40b26a:	dec    edx
  40b26b:	lods   eax,DWORD PTR ds:[esi]
  40b26c:	(bad)  
  40b26d:	out    0x87,al
  40b26f:	stc    
  40b270:	jb     0x40b21a
  40b272:	fiadd  DWORD PTR [ecx+0x8]
  40b275:	fs jmp 0x40b289
  40b278:	mov    dh,BYTE PTR [ebx]
  40b27a:	jmp    0x758c3530
  40b27f:	fcomp  DWORD PTR [ebp+0x6f005741]
  40b285:	adc    al,0xc5
  40b287:	pusha  
  40b288:	repnz push esp
  40b28a:	and    dl,BYTE PTR [esi+0x1b]
  40b28d:	inc    edx
  40b28e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40b290:	or     eax,0x2e68fb9
  40b295:	sub    esi,ebp
  40b297:	xchg   edx,eax
  40b298:	test   BYTE PTR [edx+ecx*8],bl
  40b29b:	mov    ds:0xfff40363,al
  40b2a0:	daa    
  40b2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a3:	add    edx,eax
  40b2a5:	test   BYTE PTR [edx+0x36],al
  40b2a8:	stos   BYTE PTR es:[edi],al
  40b2a9:	mov    dh,0xce
  40b2ab:	and    esi,DWORD PTR [ecx]
  40b2ad:	mov    ch,0x79
  40b2af:	lock (bad) 
  40b2b1:	ds dec ebp
  40b2b3:	ret    
  40b2b4:	les    esi,FWORD PTR [eax+eiz*8+0x75ae8036]
  40b2bb:	jmp    0xefd5:0xb14da48b
  40b2c2:	shl    DWORD PTR [edx],1
  40b2c4:	mov    ecx,0xe949e55c
  40b2c9:	sbb    dh,0x7e
  40b2cc:	scas   eax,DWORD PTR es:[edi]
  40b2cd:	faddp  st(7),st
  40b2cf:	xor    al,0x26
  40b2d1:	fisub  WORD PTR [eax]
  40b2d3:	retf   0xf05c
  40b2d6:	sbb    DWORD PTR [edx],esi
  40b2d8:	test   al,0x5a
  40b2da:	dec    edx
  40b2db:	js     0x40b306
  40b2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2de:	mov    al,ds:0xc82afac3
  40b2e3:	cld    
  40b2e4:	pop    es
  40b2e5:	and    DWORD PTR [ecx-0x49],0x60
  40b2e9:	dec    edi
  40b2ea:	lods   al,BYTE PTR ds:[esi]
  40b2eb:	dec    ecx
  40b2ec:	or     edx,0xffffffcb
  40b2ef:	xchg   edx,eax
  40b2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f1:	jns    0x40b332
  40b2f3:	fcom   QWORD PTR [ecx-0x1dff5276]
  40b2f9:	jp     0x40b314
  40b2fb:	dec    esp
  40b2fc:	aad    0x59
  40b2fe:	mov    edi,0x903f6666
  40b303:	sahf   
  40b304:	retf   0xe24a
  40b307:	cli    
  40b308:	jnp    0x40b2ef
  40b30a:	xchg   edx,eax
  40b30b:	push   ebx
  40b30d:	aaa    
  40b30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b30f:	ss ds hlt 
  40b312:	and    BYTE PTR [edx+ebx*2],ah
  40b315:	cmp    dh,BYTE PTR [edx-0x4f]
  40b318:	mov    bl,0xcc
  40b31a:	out    dx,al
  40b31b:	inc    ebx
  40b31c:	out    0x4b,al
  40b31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b31f:	outs   dx,BYTE PTR ds:[esi]
  40b320:	inc    ebx
  40b321:	popa   
  40b322:	shl    DWORD PTR [eax-0x356299ac],cl
  40b328:	sbb    bh,ah
  40b32a:	mov    ch,0xfb
  40b32c:	and    DWORD PTR [edx+edx*1-0x5],0x0
  40b331:	adc    ecx,ebx
  40b333:	xchg   edi,eax
  40b334:	loop   0x40b308
  40b336:	scas   eax,DWORD PTR es:[edi]
  40b337:	mov    ds:0x53c17880,eax
  40b33c:	test   al,dl
  40b33e:	add    DWORD PTR [edi+0x1069b470],esp
  40b344:	or     eax,0x3acef1ad
  40b349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34a:	sbb    cl,BYTE PTR [edi-0x2d]
  40b34d:	or     dh,cl
  40b34f:	stos   BYTE PTR es:[edi],al
  40b350:	cs mov al,0x1b
  40b353:	das    
  40b354:	sub    al,0x3a
  40b356:	call   0xf8a4:0x9de56d1a
  40b35d:	push   es
  40b35e:	jns    0x40b353
  40b360:	dec    edx
  40b361:	fldcw  WORD PTR [edx+0x47]
  40b364:	dec    edx
  40b365:	inc    esi
  40b366:	mov    ecx,0x1772b7e2
  40b36b:	stc    
  40b36c:	push   0x7c
  40b36e:	cmp    DWORD PTR [edi],0x79
  40b371:	popa   
  40b372:	clc    
  40b373:	sti    
  40b374:	ins    DWORD PTR es:[edi],dx
  40b375:	pusha  
  40b376:	sub    DWORD PTR [ebx-0x1380b2c1],0x38
  40b37d:	sub    BYTE PTR [edi],ch
  40b37f:	cmp    cl,bl
  40b381:	retf   0xf5a1
  40b384:	pop    ebx
  40b385:	mov    eax,ds:0xff2d42e6
  40b38a:	mov    eax,ds:0x2779f318
  40b38f:	aaa    
  40b390:	xchg   BYTE PTR [esi-0x5a],ch
  40b393:	aaa    
  40b394:	out    0x42,eax
  40b396:	mov    ah,0x3c
  40b398:	push   0x684b9597
  40b39d:	mov    ds:0x1b29371,eax
  40b3a2:	adc    edx,DWORD PTR [ebx-0x3f]
  40b3a5:	loopne 0x40b38e
  40b3a7:	mov    ch,0xc7
  40b3a9:	hlt    
  40b3aa:	mov    ds:0x4a3c585e,eax
  40b3af:	cmp    edx,DWORD PTR [ebp-0x4ae67978]
  40b3b5:	inc    eax
  40b3b6:	and    eax,0x7c218c5a
  40b3bb:	push   0xc8c0fb2e
  40b3c0:	fisttp WORD PTR [ecx-0x4a]
  40b3c3:	and    DWORD PTR [esi+ecx*8+0x51],esp
  40b3c7:	push   es
  40b3c8:	add    eax,0x177bc93a
  40b3cd:	xor    bh,dh
  40b3cf:	sti    
  40b3d0:	push   ebx
  40b3d1:	mov    eax,0x64bd3770
  40b3d6:	mov    al,0x31
  40b3d8:	shl    BYTE PTR [edx],1
  40b3da:	adc    eax,0x8519de6d
  40b3df:	test   DWORD PTR [ebp+0x16db28b4],0x85b0d93f
  40b3e9:	js     0x40b3ed
  40b3eb:	or     BYTE PTR [ecx-0x58],ch
  40b3ee:	mov    bh,BYTE PTR [ecx+0xe]
  40b3f1:	sub    al,0xd2
  40b3f3:	sbb    esp,edx
  40b3f5:	mov    edi,0x5158c783
  40b3fa:	cmp    ebx,DWORD PTR [esi]
  40b3fc:	xor    esp,ecx
  40b3fe:	stc    
  40b3ff:	std    
  40b400:	bndldx (bad),[eax+0x12fe77e8]
  40b407:	xchg   ebx,eax
  40b408:	data16 mov bl,0x8f
  40b40b:	out    0x9,eax
  40b40d:	rol    DWORD PTR [ecx+0x1390a365],0xe1
  40b414:	xlat   BYTE PTR ds:[ebx]
  40b415:	xchg   DWORD PTR [ebp-0xaaad11b],ecx
  40b41b:	xor    BYTE PTR [edx],0xbc
  40b41e:	add    al,BYTE PTR [ecx-0x468f4909]
  40b424:	add    esi,edi
  40b426:	in     eax,dx
  40b427:	sbb    esp,DWORD PTR [ecx]
  40b429:	outs   dx,DWORD PTR ds:[esi]
  40b42a:	sub    eax,esp
  40b42c:	and    al,bl
  40b42e:	in     eax,0xa
  40b430:	jae    0x40b3dd
  40b432:	daa    
  40b433:	xor    al,0xc8
  40b435:	pusha  
  40b436:	adc    BYTE PTR [ebx-0x2253d5d8],bh
  40b43c:	mov    edx,0x78516a1b
  40b441:	aas    
  40b442:	int    0x9a
  40b444:	pop    ds
  40b445:	sub    DWORD PTR [ebp-0x7c],ebp
  40b448:	cmp    dh,BYTE PTR [eax-0x40]
  40b44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b44c:	sub    DWORD PTR ds:0x1e094735,eax
  40b452:	xchg   esi,eax
  40b453:	pop    esp
  40b454:	and    dh,BYTE PTR [ecx-0x6ffda625]
  40b45a:	xor    edx,DWORD PTR [eax+0x30]
  40b45d:	syscall 
  40b45f:	mov    dh,0x8d
  40b461:	int3   
  40b462:	mov    BYTE PTR [edx+0x3],ah
  40b465:	cmp    ecx,DWORD PTR [eax-0x72ff0878]
  40b46b:	adc    eax,0x43478978
  40b470:	mov    bl,0x79
  40b472:	and    eax,0x94ebfce2
  40b477:	mov    BYTE PTR [edx-0x179ac4bb],ch
  40b47d:	pop    ss
  40b47e:	pop    edi
  40b47f:	mov    bl,0xb8
  40b481:	sub    dl,BYTE PTR [ebp-0x4]
  40b484:	mov    ch,0xa2
  40b486:	mov    ah,0x4c
  40b488:	lods   al,BYTE PTR ds:[esi]
  40b489:	xor    esi,DWORD PTR [esi]
  40b48b:	dec    esi
  40b48c:	mov    al,ds:0xcea704a6
  40b491:	ror    ch,cl
  40b493:	jecxz  0x40b4bf
  40b495:	push   ds
  40b496:	into   
  40b497:	(bad)  
  40b498:	fbstp  TBYTE PTR [eax]
  40b49a:	stos   BYTE PTR es:[edi],al
  40b49b:	jnp    0x40b471
  40b49d:	out    0x3f,eax
  40b49f:	push   edx
  40b4a0:	jmp    0x40b482
  40b4a2:	mov    BYTE PTR [ebp+0x4a51372e],al
  40b4a8:	mov    edx,0x3958ccb7
  40b4ad:	adc    bh,BYTE PTR [edx+0x12]
  40b4b0:	fidiv  DWORD PTR [edi+0xaf692d2]
  40b4b6:	cmp    al,0xce
  40b4b8:	push   eax
  40b4b9:	mov    WORD PTR [ebx-0x7bdb954],ds
  40b4bf:	mov    ebx,0x2899ccaf
  40b4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4c5:	ret    0xde35
  40b4c8:	ja     0x40b465
  40b4ca:	cmp    BYTE PTR ds:0x9a0ac5cd,dh
  40b4d0:	jp     0x40b4ab
  40b4d2:	add    ah,BYTE PTR [eax]
  40b4d4:	in     eax,dx
  40b4d5:	and    eax,0x9320b98f
  40b4da:	mov    ah,0xf6
  40b4dc:	mov    dl,BYTE PTR [esi-0x652ac57d]
  40b4e2:	outs   dx,BYTE PTR ds:[esi]
  40b4e3:	adc    DWORD PTR [eax+0xe],edx
  40b4e6:	loopne 0x40b4f6
  40b4e8:	xchg   ecx,eax
  40b4e9:	dec    esi
  40b4ea:	push   ss
  40b4eb:	push   ds
  40b4ec:	xor    eax,DWORD PTR ss:[ecx-0x61c7fcb6]
  40b4f3:	or     dh,dh
  40b4f5:	cmp    eax,DWORD PTR [edi+ebx*2]
  40b4f8:	xchg   esi,eax
  40b4f9:	leave  
  40b4fa:	sti    
  40b4fb:	hlt    
  40b4fc:	cmp    bh,BYTE PTR ds:0xb719306d
  40b502:	loope  0x40b51b
  40b504:	blsic  esp,DWORD PTR [ecx]
  40b509:	sub    eax,0xf0be0009
  40b50e:	or     BYTE PTR [edx],cl
  40b510:	jle    0x40b583
  40b512:	xor    eax,0x7599e1d6
  40b517:	dec    ebx
  40b518:	loop   0x40b57e
  40b51a:	out    dx,eax
  40b51b:	xor    dh,0xa6
  40b51e:	pop    ss
  40b51f:	ret    
  40b520:	add    eax,ebp
  40b522:	pop    edx
  40b523:	inc    eax
  40b524:	test   BYTE PTR [edx-0x588056c6],ah
  40b52a:	imul   esi,DWORD PTR [esp+ebx*1-0x40ea0a8c],0x40
  40b532:	arpl   bx,cx
  40b534:	adc    bl,BYTE PTR [esp+esi*2+0x39bc6047]
  40b53b:	inc    eax
  40b53c:	fild   QWORD PTR [edx+0x208dc853]
  40b542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b543:	mov    al,0x2c
  40b545:	clc    
  40b546:	ins    BYTE PTR es:[edi],dx
  40b547:	fdivp  st(1),st
  40b549:	xchg   ecx,eax
  40b54a:	mov    eax,ds:0x27422dcc
  40b54f:	jecxz  0x40b5ad
  40b551:	jo     0x40b594
  40b553:	jle    0x40b548
  40b555:	inc    eax
  40b556:	push   ebx
  40b557:	loope  0x40b551
  40b559:	jnp    0x40b5a3
  40b55b:	loopne 0x40b5d7
  40b55d:	add    al,0x56
  40b55f:	stos   BYTE PTR es:[edi],al
  40b560:	lock loopne 0x40b4e3
  40b563:	(bad)  [eax+0x6c73cedc]
  40b569:	and    al,0xb5
  40b56b:	pusha  
  40b56c:	retf   
  40b56d:	dec    ebx
  40b56e:	push   edi
  40b56f:	aad    0x66
  40b571:	push   ecx
  40b572:	retf   0x98cf
  40b575:	sahf   
  40b576:	jae    0x40b5d2
  40b578:	mov    edi,0x94bf7fb5
  40b57d:	scas   al,BYTE PTR es:[edi]
  40b57e:	shr    BYTE PTR [ebp+0x24c7da46],1
  40b584:	sub    eax,DWORD PTR [edx+0x72ddf571]
  40b58a:	lahf   
  40b58b:	jbe    0x40b516
  40b58d:	(bad)  
  40b58e:	hlt    
  40b58f:	loope  0x40b535
  40b591:	push   edx
  40b592:	retf   
  40b593:	sti    
  40b594:	or     DWORD PTR [ecx+0xa2cb56e],edi
  40b59a:	jge    0x40b56c
  40b59c:	test   BYTE PTR [edi],ah
  40b59e:	cmc    
  40b59f:	(bad)  
  40b5a0:	(bad)  
  40b5a2:	cli    
  40b5a3:	sti    
  40b5a4:	sbb    esp,DWORD PTR [eax-0x537ddce5]
  40b5aa:	inc    esp
  40b5ab:	sub    al,0xe9
  40b5ad:	test   al,0x17
  40b5af:	xchg   ebx,eax
  40b5b0:	rcr    DWORD PTR [ebx],1
  40b5b2:	mov    ch,0x1f
  40b5b4:	out    0x9,al
  40b5b6:	sbb    al,0x9b
  40b5b8:	add    BYTE PTR [ebp+0x2a],bh
  40b5bb:	xor    DWORD PTR [ecx-0x6c0f272a],edi
  40b5c1:	and    DWORD PTR [eax+ebx*2],esp
  40b5c4:	into   
  40b5c5:	inc    esi
  40b5c6:	jns    0x40b635
  40b5c8:	add    BYTE PTR [ecx],0x97
  40b5cb:	sub    DWORD PTR [ebx-0x649fac99],0x1
  40b5d2:	sbb    al,al
  40b5d4:	pop    ds
  40b5d5:	add    esp,ecx
  40b5d7:	fsubr  st(1),st
  40b5d9:	mov    edx,0xaa5d0485
  40b5de:	in     eax,dx
  40b5df:	push   esi
  40b5e0:	cmc    
  40b5e1:	dec    esp
  40b5e2:	jge    0x40b5eb
  40b5e4:	dec    esi
  40b5e5:	cmp    BYTE PTR [eax-0x38],bh
  40b5e8:	lds    edx,FWORD PTR [ebp+0x4a]
  40b5eb:	loopne 0x40b56d
  40b5ed:	cmp    DWORD PTR [edi],edi
  40b5ef:	jne    0x40b5f1
  40b5f1:	sbb    DWORD PTR [esi],edx
  40b5f3:	sub    ecx,DWORD PTR [ecx]
  40b5f5:	mov    esi,0x9b229fad
  40b5fa:	cmp    eax,esi
  40b5fc:	dec    esi
  40b5fd:	push   edx
  40b5fe:	mov    edi,0xd8af5e80
  40b603:	adc    al,BYTE PTR [edx-0x2cb540a4]
  40b609:	test   BYTE PTR [esi+0x576ec596],0xf6
  40b610:	retf   0xf62e
  40b613:	add    edx,DWORD PTR [ebp-0x1f7a4ab5]
  40b619:	hlt    
  40b61a:	arpl   WORD PTR [edx],bx
  40b61c:	and    ebp,DWORD PTR [esi]
  40b61e:	add    esp,DWORD PTR [ebx]
  40b620:	xor    ebx,DWORD PTR [ebx+0x7fb0f028]
  40b626:	jno    0x40b656
  40b628:	lahf   
  40b629:	push   ebx
  40b62a:	cmp    eax,ecx
  40b62c:	inc    eax
  40b62d:	imul   esi,DWORD PTR [eax+0x31b2cb05],0xffffffed
  40b634:	test   ebx,eax
  40b636:	mov    ch,dl
  40b638:	sbb    eax,0x8b9fb4d7
  40b63d:	jnp    0x40b691
  40b63f:	test   DWORD PTR ds:0xdb04629f,esi
  40b645:	jno    0x40b672
  40b647:	in     eax,dx
  40b648:	lea    esi,[edx-0x2e533d4c]
  40b64e:	shl    DWORD PTR [edx-0x4a5839f7],1
  40b654:	mov    al,0x57
  40b656:	inc    edi
  40b657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b658:	or     edi,DWORD PTR [eax+0x16]
  40b65b:	call   0x8d07a056
  40b660:	(bad)  
  40b661:	imul   ebp,eax,0x821cebca
  40b667:	call   0x3127:0x749f8bd6
  40b66e:	mov    eax,0xe2b5b15e
  40b673:	pop    ecx
  40b674:	mov    al,BYTE PTR [ecx+eiz*1]
  40b677:	and    eax,0x7d61f9e7
  40b67c:	and    BYTE PTR [ecx+0x1cd5cb94],ah
  40b682:	lahf   
  40b683:	(bad)  
  40b684:	jge    0x40b60a
  40b686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b687:	out    dx,eax
  40b688:	mov    ebx,0xa052b9b4
  40b68d:	imul   BYTE PTR [edi+0x367fcd6c]
  40b693:	pop    esi
  40b694:	dec    esi
  40b695:	aas    
  40b696:	repnz add al,0xea
  40b699:	es mov dh,0x6d
  40b69c:	int3   
  40b69d:	add    bl,BYTE PTR [ecx-0x56]
  40b6a0:	cmc    
  40b6a1:	arpl   WORD PTR [ecx-0x38081996],ax
  40b6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a8:	jp     0x40b62c
  40b6aa:	jge    0x40b705
  40b6ac:	dec    ebx
  40b6ad:	(bad)  
  40b6af:	out    0x81,eax
  40b6b1:	not    cl
  40b6b3:	hlt    
  40b6b4:	push   cs
  40b6b5:	mov    eax,ds:0x779a56d5
  40b6ba:	cmp    DWORD PTR [edx+ebp*8-0x50],esi
  40b6be:	loopne 0x40b6cf
  40b6c0:	rol    DWORD PTR [esi+0x13],0xce
  40b6c4:	push   ebx
  40b6c5:	add    BYTE PTR [edx-0x79],ch
  40b6c8:	pop    eax
  40b6c9:	rcl    ebp,cl
  40b6cb:	push   cs
  40b6cc:	test   ecx,ebp
  40b6ce:	lock (bad) 
  40b6d0:	xlat   BYTE PTR ds:[ebx]
  40b6d1:	cli    
  40b6d2:	mov    bl,0x6f
  40b6d4:	xchg   edi,eax
  40b6d5:	frstor [eax]
  40b6d7:	int    0x1b
  40b6d9:	pop    ebx
  40b6da:	pop    eax
  40b6db:	test   BYTE PTR [ebx-0x4e],0xd9
  40b6df:	and    al,ah
  40b6e1:	(bad)  
  40b6e2:	sbb    dh,al
  40b6e4:	xor    eax,0xa450771c
  40b6e9:	inc    bp
  40b6eb:	(bad)  
  40b6ec:	mov    bh,0x78
  40b6ee:	test   esp,esp
  40b6f0:	jecxz  0x40b6e5
  40b6f2:	sub    eax,0xb4e3e2f7
  40b6f7:	sub    bh,BYTE PTR [edi+0x55302f7d]
  40b6fd:	pop    es
  40b6fe:	push   cs
  40b6ff:	rcl    DWORD PTR [eax+ecx*4],0xe3
  40b703:	stos   DWORD PTR es:[edi],eax
  40b704:	icebp  
  40b705:	xchg   ecx,eax
  40b706:	imul   ebp,DWORD PTR [esi],0x21fe075f
  40b70c:	adc    DWORD PTR [ebp-0x45e033bd],ebp
  40b712:	std    
  40b713:	enter  0x2a5b,0xad
  40b717:	jo     0x40b77c
  40b719:	and    eax,DWORD PTR [edx-0x6cb1a314]
  40b71f:	pop    esp
  40b720:	mov    al,ds:0x972c079a
  40b725:	jne    0x40b6e5
  40b727:	inc    edi
  40b728:	cwde   
  40b729:	adc    ebx,edx
  40b72b:	cld    
  40b72c:	inc    edi
  40b72d:	mov    cs,WORD PTR [ecx+0x12]
  40b730:	or     eax,0xadc073d2
  40b735:	mov    al,ds:0x539a7c3e
  40b73a:	xchg   ebp,eax
  40b73b:	aam    0x5f
  40b73d:	sti    
  40b73e:	mov    al,0xda
  40b740:	jmp    0x40b6eb
  40b742:	pop    ss
  40b743:	aaa    
  40b744:	jae    0x40b774
  40b746:	(bad)  
  40b747:	rcl    BYTE PTR [edi-0x68de9810],cl
  40b74d:	(bad)  [eax]
  40b74f:	ret    
  40b750:	xchg   esi,eax
  40b751:	push   ds
  40b752:	retf   0xfcf9
  40b755:	push   esi
  40b756:	and    ebp,DWORD PTR [ebp+0x3f42ca1a]
  40b75c:	loop   0x40b70d
  40b75e:	adc    al,0xbe
  40b760:	ins    BYTE PTR es:[edi],dx
  40b761:	jecxz  0x40b75a
  40b763:	iret   
  40b764:	sub    al,0xe3
  40b766:	je     0x40b765
  40b768:	sub    al,0x12
  40b76a:	retf   
  40b76b:	call   DWORD PTR [edi-0x476b168c]
  40b771:	or     DWORD PTR [ecx-0x30],esi
  40b774:	mov    esi,0x57914a2f
  40b779:	xor    eax,0xd7dbee2d
  40b77e:	mov    ss,eax
  40b780:	mov    esp,0xf85fa451
  40b785:	and    ah,BYTE PTR [eax+0x2e]
  40b788:	aad    0x36
  40b78a:	sub    al,0xd4
  40b78c:	dec    ebp
  40b78d:	shl    DWORD PTR [ecx-0x1efb1eca],0xbe
  40b794:	jno    0x40b7c6
  40b796:	into   
  40b797:	jae    0x40b71b
  40b799:	leave  
  40b79a:	mov    dl,0xae
  40b79c:	(bad)  
  40b79d:	cmp    DWORD PTR [ebx],ecx
  40b79f:	sahf   
  40b7a0:	ror    DWORD PTR [eax+esi*4+0x11],1
  40b7a4:	std    
  40b7a5:	fistp  WORD PTR [eax+eax*2]
  40b7a8:	push   0x8b8d97a0
  40b7ad:	sbb    cl,BYTE PTR [edi+ebp*8]
  40b7b0:	mov    esp,0x1437fa93
  40b7b5:	mov    ch,0x22
  40b7b7:	loope  0x40b7a6
  40b7b9:	sar    cl,0xeb
  40b7bc:	mov    esi,0x29c7c964
  40b7c1:	inc    esi
  40b7c2:	pop    eax
  40b7c3:	adc    eax,0x6aa3db49
  40b7c8:	cmp    eax,edx
  40b7ca:	mov    eax,ds:0x7407226f
  40b7cf:	xor    ebp,DWORD PTR [eax]
  40b7d1:	ja     0x40b849
  40b7d3:	jmp    0xdd9c:0x1f69d79f
  40b7da:	loope  0x40b77e
  40b7dc:	out    0x7b,eax
  40b7de:	pop    edi
  40b7df:	(bad)  
  40b7e0:	cmp    edx,DWORD PTR [edi-0xdc47a93]
  40b7e6:	pop    ebx
  40b7e7:	sar    dh,1
  40b7e9:	bound  edi,QWORD PTR ds:0x37fe346
  40b7ef:	aas    
  40b7f0:	shl    BYTE PTR [ebx-0x7b],1
  40b7f3:	xor    BYTE PTR [esi],dh
  40b7f5:	scas   al,BYTE PTR es:[edi]
  40b7f6:	and    eax,0x3d033c3f
  40b7fb:	std    
  40b7fc:	sub    edx,DWORD PTR [ebx+0x37657ac9]
  40b802:	mov    eax,0x8a5f198e
  40b807:	add    edx,ebp
  40b809:	push   ds
  40b80a:	ss loope 0x40b7af
  40b80d:	xchg   esi,ecx
  40b80f:	push   edx
  40b810:	jle    0x40b84f
  40b812:	div    BYTE PTR [ebx-0x9]
  40b815:	sbb    eax,0x40c2dce
  40b81a:	outs   dx,BYTE PTR ds:[esi]
  40b81b:	sub    al,BYTE PTR [edx]
  40b81d:	aad    0x7e
  40b81f:	xchg   edi,eax
  40b820:	sti    
  40b821:	ds es mov edi,edi
  40b825:	adc    ebx,DWORD PTR [edi]
  40b827:	call   FWORD PTR [eax+0x3a]
  40b82a:	sub    al,0xd4
  40b82c:	cli    
  40b82d:	das    
  40b82e:	into   
  40b82f:	mov    ebx,0x7053b64e
  40b834:	out    0x91,eax
  40b836:	mov    ebp,0x3d2de395
  40b83b:	push   edi
  40b83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b83d:	push   edi
  40b83e:	iret   
  40b83f:	and    dl,bl
  40b841:	(bad)
  40b844:	loope  0x40b8bd
  40b846:	xchg   DWORD PTR [ecx-0x7227aec8],eax
  40b84c:	retf   
  40b84d:	mov    edi,0xb4e52441
  40b852:	inc    ebp
  40b853:	push   0xffffffd9
  40b855:	inc    eax
  40b856:	xor    dl,BYTE PTR [ebx-0x27]
  40b859:	or     DWORD PTR [ebx],0x23289f0e
  40b85f:	and    dl,bh
  40b861:	and    edi,DWORD PTR fs:[esp+edx*4]
  40b865:	adc    DWORD PTR [edx+0x462b3059],eax
  40b86b:	mov    dl,BYTE PTR [ecx]
  40b86d:	daa    
  40b86e:	jmp    0x40b801
  40b870:	ja     0x40b87d
  40b872:	mov    edx,0x4b28b7e
  40b877:	mov    ecx,0x5ebe363
  40b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87d:	mov    eax,0xe21ca3b3
  40b882:	cdq    
  40b883:	mov    esi,0xf3f7a7c1
  40b888:	dec    ebp
  40b889:	cmp    BYTE PTR [ecx],ah
  40b88b:	into   
  40b88c:	add    ebx,DWORD PTR [esi-0x1f]
  40b88f:	(bad)
  40b894:	mov    BYTE PTR [ebp-0x7b8d57d2],al
  40b89a:	arpl   WORD PTR [esi],bx
  40b89c:	mov    dl,0xff
  40b89e:	mov    BYTE PTR [edx],al
  40b8a0:	dec    ebp
  40b8a1:	xchg   BYTE PTR [esi+0x7fb5be90],cl
  40b8a7:	xchg   esp,edi
  40b8a9:	mov    ds:0xd8d78d2a,eax
  40b8ae:	cmp    al,0x77
  40b8b0:	sahf   
  40b8b1:	sub    DWORD PTR [eax+0xdde0647],eax
  40b8b7:	mov    ?,WORD PTR [esi]
  40b8b9:	(bad)  
  40b8ba:	pop    esi
  40b8bb:	add    BYTE PTR [eax-0x6828a494],al
  40b8c1:	int    0xbd
  40b8c3:	popa   
  40b8c4:	add    DWORD PTR [edx-0x125236],edx
  40b8ca:	stos   DWORD PTR es:[edi],eax
  40b8cb:	daa    
  40b8cc:	dec    esp
  40b8cd:	sar    ch,cl
  40b8cf:	div    DWORD PTR [ebx-0x456dbe25]
  40b8d5:	jmp    0x40b8fd
  40b8d7:	sti    
  40b8d8:	jns    0x40b93c
  40b8da:	jae    0x40b8e3
  40b8dc:	add    ch,bl
  40b8de:	aaa    
  40b8df:	test   DWORD PTR [edx+0x15d3d04f],edi
  40b8e5:	mov    ch,0xf4
  40b8e7:	inc    edx
  40b8e8:	jbe    0x40b896
  40b8ea:	xchg   esi,eax
  40b8eb:	push   ss
  40b8ec:	inc    edx
  40b8ed:	sar    BYTE PTR [ecx+0x41186df7],cl
  40b8f3:	cmp    BYTE PTR [edi-0x2b],ah
  40b8f6:	mov    ds:0xcaa79f8,eax
  40b8fb:	icebp  
  40b8fc:	xchg   dh,dl
  40b8fe:	jmp    DWORD PTR [ebp+ebp*4+0xc]
  40b902:	inc    ebp
  40b903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b904:	outs   dx,DWORD PTR ds:[esi]
  40b905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b906:	leave  
  40b907:	test   BYTE PTR [ebx+0x76],ch
  40b90a:	icebp  
  40b90b:	aam    0x6a
  40b90d:	xchg   ecx,eax
  40b90e:	das    
  40b90f:	sbb    edi,edx
  40b911:	repz pop ebx
  40b913:	rcl    DWORD PTR [edx],0xce
  40b916:	cmp    al,0xdf
  40b918:	pushf  
  40b919:	ror    BYTE PTR [esi+ebp*8+0x29],0xfe
  40b91e:	pop    eax
  40b91f:	or     al,BYTE PTR [edi]
  40b921:	imul   edx,DWORD PTR [ebp-0x23],0x8a76b158
  40b928:	int3   
  40b929:	lds    esp,FWORD PTR [ebx]
  40b92b:	push   esp
  40b92c:	push   ds
  40b92d:	dec    edi
  40b92e:	arpl   WORD PTR cs:[esi-0x3fd4fd55],ax
  40b935:	enter  0xea80,0x7c
  40b939:	jo     0x40b8bf
  40b93b:	sub    BYTE PTR [ebp-0x1226552e],ch
  40b941:	out    0x1d,eax
  40b943:	nop
  40b944:	pop    ebp
  40b945:	sbb    BYTE PTR [ebp-0x56023dfa],dh
  40b94b:	ss pushf 
  40b94d:	ins    BYTE PTR es:[edi],dx
  40b94e:	jle    0x40b941
  40b950:	jle    0x40b929
  40b952:	mov    ecx,0x1fb0074
  40b957:	sbb    DWORD PTR [ebx-0x3b547ba0],edx
  40b95d:	sub    eax,0xebe4a38e
  40b962:	dec    esp
  40b963:	push   eax
  40b964:	mov    esp,0xd2603f31
  40b969:	mov    ecx,0x99101e9e
  40b96e:	inc    ebp
  40b96f:	cli    
  40b970:	dec    eax
  40b971:	repnz adc bl,BYTE PTR [esi]
  40b974:	push   ss
  40b975:	jno    0x40b9a3
  40b977:	push   ebp
  40b978:	push   edi
  40b979:	xchg   edi,eax
  40b97a:	or     eax,0xad3aee25
  40b97f:	out    0xe3,al
  40b981:	aas    
  40b982:	or     BYTE PTR [esp+ebp*1-0x3],0xf6
  40b987:	sub    al,0x64
  40b989:	xchg   DWORD PTR [eax],edx
  40b98b:	xor    DWORD PTR [edx],edx
  40b98d:	arpl   WORD PTR ds:0xfe942819,bp
  40b993:	(bad)  
  40b994:	loop   0x40b97d
  40b996:	or     dh,cl
  40b998:	inc    esi
  40b999:	repnz mov dh,0xc7
  40b99c:	jbe    0x40b95a
  40b99e:	xor    DWORD PTR [ebx-0x6bfd66f],esp
  40b9a4:	(bad)  
  40b9a5:	ja     0x40b930
  40b9a7:	xor    esi,DWORD PTR [esi]
  40b9a9:	scas   al,BYTE PTR es:[edi]
  40b9aa:	xchg   ecx,eax
  40b9ab:	add    eax,DWORD PTR [ebx]
  40b9ad:	jbe    0x40b964
  40b9af:	scas   eax,DWORD PTR es:[edi]
  40b9b0:	xchg   edi,eax
  40b9b1:	(bad)  
  40b9b2:	pop    ds
  40b9b3:	jecxz  0x40b943
  40b9b5:	ret    0x74ca
  40b9b8:	jecxz  0x40b99b
  40b9ba:	and    BYTE PTR [eax],dl
  40b9bc:	aam    0x0
  40b9be:	sub    al,0xbe
  40b9c0:	cmc    
  40b9c1:	lock popf 
  40b9c3:	lods   eax,DWORD PTR ds:[esi]
  40b9c4:	add    edx,DWORD PTR ss:[eax]
  40b9c7:	mov    eax,ds:0x3df922eb
  40b9cc:	mov    esp,0x76524670
  40b9d1:	pop    ecx
  40b9d2:	adc    DWORD PTR [ecx-0x79],ebp
  40b9d5:	stc    
  40b9d6:	jbe    0x40b95a
  40b9d8:	and    DWORD PTR [ebx-0x7c],esi
  40b9db:	sti    
  40b9dc:	xchg   ebp,eax
  40b9dd:	or     BYTE PTR [esp],0x8f
  40b9e1:	jae    0x40ba58
  40b9e3:	mov    bl,0xa0
  40b9e5:	ds (bad) 
  40b9e7:	mov    esp,0x5ead296e
  40b9ec:	push   edx
  40b9ed:	mov    edi,0x482cf6ac
  40b9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f3:	mov    al,0x8
  40b9f5:	inc    edi
  40b9f6:	or     edx,eax
  40b9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f9:	jae    0x40ba27
  40b9fb:	cmp    BYTE PTR [ebx-0x69],0x4e
  40b9ff:	sti    
  40ba00:	lds    edi,FWORD PTR [eax]
  40ba02:	mov    WORD PTR [edx+0x17],?
  40ba05:	call   0xa663:0x90ac2987
  40ba0c:	jmp    0xb1ca:0x272061d7
  40ba13:	sbb    BYTE PTR [bx+si],0xdd
  40ba17:	mov    eax,ds:0x17aae799
  40ba1c:	cwde   
  40ba1d:	dec    edx
  40ba1e:	mov    esi,0xcf01f1d7
  40ba23:	loopne 0x40b9ef
  40ba25:	mov    ah,0x4f
  40ba27:	in     eax,dx
  40ba28:	push   ebp
  40ba29:	test   DWORD PTR ds:0x1cef30dc,esp
  40ba2f:	mov    ebp,0x318c2eea
  40ba34:	xchg   edi,eax
  40ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba36:	mov    eax,ds:0x508026f5
  40ba3b:	push   ds
  40ba3c:	(bad)  
  40ba3e:	cdq    
  40ba3f:	push   es
  40ba40:	ins    DWORD PTR es:[edi],dx
  40ba41:	jl     0x40baad
  40ba43:	in     eax,0x33
  40ba45:	jmp    0xd97a6ace
  40ba4a:	push   ebx
  40ba4b:	lds    esi,FWORD PTR [edi+0x46154149]
  40ba51:	xor    al,0xec
  40ba53:	cli    
  40ba54:	xor    BYTE PTR [edx-0x1d],bh
  40ba57:	aam    0xfe
  40ba59:	mov    edx,0x1522fa75
  40ba5e:	(bad)  
  40ba5f:	cmp    eax,0x437e07e8
  40ba64:	mov    eax,0x384af43f
  40ba69:	fmul   DWORD PTR [edi-0xf7adc4f]
  40ba6f:	mov    eax,0x580ed4e2
  40ba74:	and    ecx,esi
  40ba76:	cmc    
  40ba77:	inc    eax
  40ba78:	ins    DWORD PTR es:[edi],dx
  40ba79:	mov    edi,0x6c8e6c6a
  40ba7e:	jno    0x40ba34
  40ba80:	ja     0x40badc
  40ba82:	and    eax,0x378f4372
  40ba87:	jae    0x40ba38
  40ba89:	mov    bl,0x93
  40ba8b:	test   DWORD PTR [eax+0x1b433a5e],ebx
  40ba91:	fprem  
  40ba93:	xchg   edx,eax
  40ba94:	push   ds
  40ba95:	jle    0x40baad
  40ba97:	call   FWORD PTR [eax]
  40ba99:	pusha  
  40ba9a:	add    bh,BYTE PTR [eax+0x66]
  40ba9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9e:	inc    esp
  40ba9f:	mov    dl,0x58
  40baa1:	inc    ecx
  40baa2:	dec    ebx
  40baa3:	sub    esi,DWORD PTR ds:0x798036ad
  40baa9:	and    BYTE PTR [bx-0x6292],dh
  40baae:	add    DWORD PTR [ebx+eiz*4-0x37],ecx
  40bab2:	mov    al,ds:0x26aa1e85
  40bab7:	retf   
  40bab8:	cwde   
  40bab9:	add    eax,0x6a7cc33f
  40babe:	add    al,0x6d
  40bac0:	pop    ss
  40bac1:	xor    ecx,DWORD PTR [edx+ebx*4-0x3d]
  40bac5:	test   al,0x1
  40bac7:	pop    ecx
  40bac8:	push   ebx
  40bac9:	mov    cl,0x68
  40bacb:	xchg   ebx,eax
  40bacc:	sar    BYTE PTR [esi+0x2b6760db],1
  40bad2:	sub    bh,cl
  40bad4:	call   0xb3785138
  40bad9:	int    0xb6
  40badb:	pop    eax
  40badc:	add    DWORD PTR [edx],ebx
  40bade:	sbb    cl,dh
  40bae0:	popa   
  40bae1:	mov    ch,0xe1
  40bae3:	dec    edx
  40bae4:	int3   
  40bae5:	mov    esi,0x2c40be76
  40baea:	out    dx,al
  40baeb:	aad    0x5
  40baed:	outs   dx,BYTE PTR ds:[esi]
  40baee:	adc    al,0x6e
  40baf0:	sahf   
  40baf1:	(bad)  
  40baf2:	jg     0x40ba84
  40baf4:	push   es
  40baf5:	mov    ch,BYTE PTR [esi-0x21]
  40baf8:	out    0x8a,al
  40bafa:	lahf   
  40bafb:	dec    esp
  40bafc:	sub    al,0x59
  40bafe:	inc    ebp
  40baff:	outs   dx,DWORD PTR ds:[esi]
  40bb00:	xchg   esi,eax
  40bb01:	mov    ds,WORD PTR [ecx-0x24]
  40bb04:	ins    DWORD PTR es:[edi],dx
  40bb05:	imul   esi,eax,0x3d
  40bb08:	ficom  DWORD PTR [eax+0x4d9748e]
  40bb0e:	mov    bl,0x44
  40bb10:	arpl   WORD PTR [ebx],sp
  40bb12:	jl     0x40bb39
  40bb14:	inc    ecx
  40bb15:	enter  0x369a,0x7e
  40bb19:	sar    BYTE PTR [ecx+esi*1+0x6],cl
  40bb1d:	sar    BYTE PTR [eax-0x6f],1
  40bb20:	repnz ins BYTE PTR es:[edi],dx
  40bb22:	sti    
  40bb23:	dec    esp
  40bb24:	sbb    al,0x86
  40bb26:	arpl   WORD PTR [edi+0x6e6c7a13],sp
  40bb2c:	cmp    BYTE PTR [ebx-0x3b],0x1d
  40bb30:	and    esi,DWORD PTR [esp+edx*2]
  40bb33:	imul   esi,DWORD PTR [edx],0x59614b05
  40bb39:	jecxz  0x40baf9
  40bb3b:	jo     0x40bbbb
  40bb3d:	bound  ebx,QWORD PTR [ebx+ecx*4+0x43]
  40bb41:	cld    
  40bb42:	xor    dh,BYTE PTR [ebx+0x66ae74d8]
  40bb48:	mov    edx,0x4e78f345
  40bb4d:	daa    
  40bb4e:	pop    edi
  40bb4f:	adc    ch,BYTE PTR [eax+ebp*4-0x59]
  40bb53:	loop   0x40bb5a
  40bb55:	jb     0x40bb42
  40bb57:	jo     0x40bb40
  40bb59:	(bad)  
  40bb5a:	pop    ebp
  40bb5b:	jle    0x40bae3
  40bb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb5e:	pop    esi
  40bb5f:	push   0x73735165
  40bb64:	outs   dx,BYTE PTR ds:[esi]
  40bb65:	xor    esp,DWORD PTR [edx-0x22c8023f]
  40bb6b:	ret    0x5f9
  40bb6e:	pop    es
  40bb6f:	jno    0x40bbd9
  40bb71:	out    0x18,eax
  40bb73:	loopne 0x40bb43
  40bb75:	fwait
  40bb76:	clc    
  40bb77:	clc    
  40bb78:	mov    al,bl
  40bb7a:	push   ebx
  40bb7b:	jmp    0xecff:0x8488099f
  40bb82:	sti    
  40bb83:	int3   
  40bb84:	cmp    eax,0xe9e2f0cb
  40bb89:	jns    0x40bb65
  40bb8b:	xchg   BYTE PTR [edi-0x7e],cl
  40bb8e:	jns    0x40bb2f
  40bb90:	xchg   esi,eax
  40bb91:	push   es
  40bb92:	dec    ebx
  40bb93:	sub    BYTE PTR [esi+0x5404f9b7],0xda
  40bb9a:	cs dec ebx
  40bb9c:	div    dh
  40bb9e:	test   DWORD PTR [ecx+0x378b093a],ebp
  40bba4:	mov    ebx,es
  40bba6:	or     BYTE PTR [ebx+0x33],ch
  40bba9:	mov    DWORD PTR [edx-0x18ab81ce],esi
  40bbaf:	mov    WORD PTR gs:[edi],ds
  40bbb2:	and    DWORD PTR [ebp+0x7d],esi
  40bbb5:	cwde   
  40bbb6:	jbe    0x40bc35
  40bbb8:	and    BYTE PTR [eax-0x2a],ah
  40bbbb:	xchg   ebx,eax
  40bbbc:	lahf   
  40bbbd:	inc    edx
  40bbbe:	popa   
  40bbbf:	pop    edi
  40bbc0:	lahf   
  40bbc1:	cmp    bl,BYTE PTR cs:[esp+edx*4]
  40bbc5:	(bad)  
  40bbc6:	cwde   
  40bbc7:	jmp    0xb00e:0xa6c03168
  40bbce:	pusha  
  40bbcf:	std    
  40bbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd1:	xchg   edi,edi
  40bbd3:	xor    esi,DWORD PTR [eax]
  40bbd5:	sahf   
  40bbd6:	pop    eax
  40bbd7:	jecxz  0x40bbad
  40bbd9:	aam    0x2
  40bbdb:	int    0xfe
  40bbdd:	add    al,0xd3
  40bbdf:	jb     0x40bbf9
  40bbe1:	scas   al,BYTE PTR es:[edi]
  40bbe2:	ins    BYTE PTR es:[edi],dx
  40bbe3:	cwde   
  40bbe4:	bound  eax,QWORD PTR [esi]
  40bbe6:	push   dx
  40bbe8:	sub    eax,0xd33bf918
  40bbed:	int    0x2
  40bbef:	dec    eax
  40bbf0:	or     DWORD PTR [ecx-0x35],ebx
  40bbf3:	mov    ah,0xd6
  40bbf5:	cmp    ebx,edx
  40bbf7:	ds add al,0x37
  40bbfa:	xchg   edx,eax
  40bbfb:	pop    edi
  40bbfc:	xchg   ebx,eax
  40bbfd:	repz (bad) 
  40bbff:	jno    0x40bbe0
  40bc01:	inc    edx
  40bc02:	test   al,0x4c
  40bc04:	pusha  
  40bc05:	ret    
  40bc06:	retf   
  40bc07:	sbb    eax,0x9b3180ce
  40bc0c:	push   0x875f4aff
  40bc11:	cmp    al,ch
  40bc13:	jmp    0x61f6:0xa17fbbcc
  40bc1a:	cs mov edi,0x2c2c652c
  40bc20:	push   ss
  40bc21:	pop    es
  40bc22:	jb     0x40bc7c
  40bc24:	jbe    0x40bc8e
  40bc26:	test   DWORD PTR [ebx],0x5a972083
  40bc2c:	cdq    
  40bc2d:	fs ret 
  40bc2f:	gs dec edi
  40bc31:	icebp  
  40bc32:	sub    al,0xf9
  40bc34:	loop   0x40bbd3
  40bc36:	push   es
  40bc37:	sub    ecx,DWORD PTR [edx+0x25]
  40bc3a:	cdq    
  40bc3b:	push   ss
  40bc3c:	mov    edi,eax
  40bc3e:	mov    dl,BYTE PTR [edi]
  40bc40:	fwait
  40bc41:	mov    ebp,0x2b95a16f
  40bc46:	aaa    
  40bc47:	sub    al,0xef
  40bc49:	xchg   ebp,eax
  40bc4a:	mov    dh,0xfb
  40bc4c:	rcr    dl,1
  40bc4e:	retf   
  40bc4f:	jae    0x40bc67
  40bc51:	or     eax,0x130ad124
  40bc56:	fsubrp st(4),st
  40bc58:	mov    WORD PTR cs:[eax+0x42c1f8cb],fs
  40bc5f:	adc    eax,0x54e3523d
  40bc64:	sbb    ecx,DWORD PTR [edx+0x20]
  40bc67:	dec    edi
  40bc68:	xor    ebx,edx
  40bc6a:	enter  0x1f5d,0x28
  40bc6e:	fadd   QWORD PTR [ebx+ebx*1]
  40bc71:	inc    ebx
  40bc72:	pusha  
  40bc73:	and    edi,DWORD PTR [esi-0x2e]
  40bc76:	test   DWORD PTR [esi-0x421b550c],esi
  40bc7c:	pop    esi
  40bc7d:	push   eax
  40bc7e:	retf   
  40bc7f:	(bad)  
  40bc80:	fst    QWORD PTR [esi+0x7dec7896]
  40bc86:	xchg   edx,eax
  40bc87:	adc    al,0x80
  40bc89:	addr16 xor eax,0xde90a1ed
  40bc8f:	add    DWORD PTR [edx-0x27],edi
  40bc92:	les    esi,FWORD PTR [esi-0x2a]
  40bc95:	and    al,0xe7
  40bc97:	cs jno 0x40bc28
  40bc9a:	lea    esi,[esi]
  40bc9c:	xadd   BYTE PTR [ecx+0x56295d11],bh
  40bca3:	mov    esi,0xc877d724
  40bca8:	test   al,0x6c
  40bcaa:	sub    al,0xca
  40bcac:	and    edi,esi
  40bcae:	jge    0x40bc54
  40bcb0:	pop    ss
  40bcb1:	cli    
  40bcb2:	pusha  
  40bcb3:	jno    0x40bc61
  40bcb5:	push   esi
  40bcb6:	jmp    0x7482f8bc
  40bcbb:	mov    ds:0xdd17668f,eax
  40bcc0:	xchg   edi,eax
  40bcc1:	sub    DWORD PTR [edx+0x1],edx
  40bcc4:	test   BYTE PTR [ebx],bl
  40bcc6:	pop    ecx
  40bcc7:	in     eax,dx
  40bcc8:	sub    ebp,edx
  40bcca:	fstp   QWORD PTR [edx-0x4755f90d]
  40bcd0:	jns    0x40bce8
  40bcd2:	cmc    
  40bcd3:	into   
  40bcd4:	mov    esi,0xcb62157d
  40bcd9:	sbb    BYTE PTR [ebp-0x1426749a],ah
  40bcdf:	adc    edi,0xb2f7e6c1
  40bce5:	int    0xd5
  40bce7:	imul   esp,DWORD PTR [esi-0x79],0x26
  40bceb:	sub    al,0xe5
  40bced:	inc    esp
  40bcee:	out    dx,al
  40bcef:	aam    0x68
  40bcf1:	scas   eax,DWORD PTR es:[edi]
  40bcf2:	push   0x9c9593eb
  40bcf7:	sbb    al,ch
  40bcf9:	jle    0x40bcac
  40bcfb:	dec    edx
  40bcfc:	imul   esi,esp,0x7f
  40bcff:	push   0x7e
  40bd01:	pop    es
  40bd02:	dec    esp
  40bd03:	ins    DWORD PTR es:[edi],dx
  40bd04:	jg     0x40bcd2
  40bd06:	jle    0x40bcd6
  40bd08:	push   ebx
  40bd09:	sbb    eax,0x2abebfee
  40bd0e:	fdiv   DWORD PTR [ecx]
  40bd10:	and    dl,BYTE PTR [esi+0x1132c405]
  40bd16:	mov    ebp,0x5ea3829a
  40bd1b:	fwait
  40bd1c:	xchg   esi,edi
  40bd1e:	rcl    DWORD PTR [eax-0x6],cl
  40bd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd22:	jl     0x40bd41
  40bd24:	inc    ebp
  40bd25:	xchg   edx,eax
  40bd26:	ret    
  40bd27:	add    DWORD PTR [ecx],esp
  40bd29:	loopne 0x40bcf7
  40bd2b:	shr    BYTE PTR [ebx+ecx*1-0x3d],0xaf
  40bd30:	retf   
  40bd31:	jg     0x40bd0b
  40bd33:	shl    ebp,0x79
  40bd36:	dec    ebp
  40bd37:	mov    DWORD PTR [eax*1+0x60c35426],edx
  40bd3e:	xchg   ebp,eax
  40bd3f:	cld    
  40bd40:	js     0x40bcd6
  40bd42:	pop    eax
  40bd43:	popa   
  40bd44:	call   0xf9dd:0x4c67c2e3
  40bd4b:	push   0x4
  40bd4d:	cdq    
  40bd4e:	add    al,bl
  40bd50:	jbe    0x40bd4a
  40bd52:	and    ah,ch
  40bd54:	fisttp WORD PTR [eax-0x73ae08e9]
  40bd5a:	retf   0xe971
  40bd5d:	push   es
  40bd5e:	retf   0x471a
  40bd61:	fyl2x  
  40bd63:	test   esi,ebp
  40bd65:	add    al,0xae
  40bd67:	pop    esp
  40bd68:	sbb    BYTE PTR [ecx],ah
  40bd6a:	add    eax,0xf3cedcad
  40bd6f:	xlat   BYTE PTR ds:[ebx]
  40bd70:	dec    ecx
  40bd71:	(bad)  
  40bd72:	mov    edi,0xdd31dbb2
  40bd77:	and    dh,BYTE PTR [ecx-0x3ec40a21]
  40bd7d:	and    eax,0x5925dfa6
  40bd82:	cmp    dh,BYTE PTR [esi]
  40bd84:	sub    eax,0x7828cda4
  40bd89:	mov    bl,0xf2
  40bd8b:	mov    al,bh
  40bd8d:	imul   edi,DWORD PTR [ebx],0xf44714a8
  40bd93:	cs mov al,0x9f
  40bd96:	mov    ds:0x5c80710b,al
  40bd9b:	in     al,dx
  40bd9c:	shl    DWORD PTR [esi+0x4e],0x6f
  40bda0:	inc    ebp
  40bda1:	test   DWORD PTR [eax],0x5ddf6dd
  40bda7:	xlat   BYTE PTR ds:[ebx]
  40bda8:	dec    esp
  40bda9:	cdq    
  40bdaa:	xchg   ecx,eax
  40bdab:	cdq    
  40bdac:	adc    BYTE PTR [edx-0x3d439d9d],dl
  40bdb2:	aas    
  40bdb3:	sbb    bh,BYTE PTR [esi-0x35b58942]
  40bdb9:	cmp    al,0x96
  40bdbb:	dec    esi
  40bdbc:	retf   
  40bdbd:	jne    0x40bd75
  40bdbf:	or     DWORD PTR [eax],ebp
  40bdc1:	shl    DWORD PTR [esi+0x1f],cl
  40bdc4:	xchg   edx,eax
  40bdc5:	jae    0x40be21
  40bdc7:	xchg   edx,eax
  40bdc8:	and    al,0x3b
  40bdca:	mov    edx,0x3b3551a0
  40bdcf:	lock inc esi
  40bdd1:	add    eax,0x92e2e1c8
  40bdd6:	iret   
  40bdd7:	mov    eax,0x6e2e317f
  40bddc:	inc    edi
  40bddd:	pop    ebp
  40bdde:	aam    0x93
  40bde0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40bde2:	scas   eax,DWORD PTR es:[edi]
  40bde3:	pop    ebp
  40bde4:	stc    
  40bde5:	mov    al,ds:0xd978a677
  40bdea:	xchg   edi,eax
  40bdeb:	out    dx,eax
  40bdec:	and    BYTE PTR [edx+0x1b],ch
  40bdef:	out    dx,al
  40bdf0:	loope  0x40bd87
  40bdf2:	hlt    
  40bdf3:	dec    esp
  40bdf4:	xlat   BYTE PTR ds:[ebx]
  40bdf5:	aaa    
  40bdf6:	sbb    ebp,edx
  40bdf8:	(bad)  
  40bdf9:	pop    ecx
  40bdfa:	mov    ebx,0x734b507f
  40bdff:	sar    dl,0xe9
  40be02:	pushf  
  40be03:	call   0xe8eb:0x553d7905
  40be0a:	aam    0x3e
  40be0c:	enter  0x8a0c,0x20
  40be10:	add    eax,0x33bb1822
  40be15:	std    
  40be16:	push   ss
  40be17:	or     ch,al
  40be19:	dec    ebx
  40be1a:	lds    esp,FWORD PTR [esi-0x56]
  40be1d:	fs dec eax
  40be1f:	(bad)  
  40be20:	repz or eax,0xf7f72bf6
  40be26:	and    edx,0x9a0a24a5
  40be2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2d:	sub    eax,DWORD PTR [edx+0x1a01dd65]
  40be33:	imul   eax,DWORD PTR [ecx-0x7f62df23],0x6a
  40be3a:	dec    eax
  40be3b:	jecxz  0x40bdc8
  40be3d:	or     DWORD PTR [esi+0x16],eax
  40be40:	test   al,0x8c
  40be42:	loop   0x40bea3
  40be44:	mov    eax,0x8e969784
  40be49:	sub    dh,BYTE PTR ds:0x48ab6739
  40be4f:	and    eax,0xfd0f847b
  40be54:	mov    esp,0x3d320fc1
  40be59:	sbb    DWORD PTR [eax],eax
  40be5b:	cld    
  40be5c:	aas    
  40be5d:	jns    0x40be0e
  40be5f:	inc    ebp
  40be60:	imul   eax,ecx,0x4c
  40be63:	clc    
  40be64:	sbb    cl,BYTE PTR [eax+0x158f4ee3]
  40be6a:	xchg   BYTE PTR [ebx],ah
  40be6c:	dec    ecx
  40be6d:	xchg   BYTE PTR [esi],al
  40be6f:	jne    0x40be45
  40be71:	(bad)  
  40be72:	push   0x77861d42
  40be77:	inc    edx
  40be78:	aad    0x8a
  40be7a:	adc    BYTE PTR [esi],cl
  40be7c:	cli    
  40be7d:	mov    ecx,0x6095a2ef
  40be82:	inc    esp
  40be83:	cli    
  40be84:	fadd   DWORD PTR [ebp+0x1e]
  40be87:	jp     0x40befc
  40be89:	push   ecx
  40be8a:	scas   eax,DWORD PTR es:[edi]
  40be8b:	dec    esi
  40be8c:	dec    edx
  40be8d:	scas   al,BYTE PTR es:[edi]
  40be8e:	or     al,0xcb
  40be90:	aad    0x74
  40be92:	test   BYTE PTR [edx+0x33],0x3e
  40be96:	retf   0x4ec2
  40be99:	sbb    edx,esp
  40be9b:	cs jae 0x40bee6
  40be9e:	loop   0x40be6b
  40bea0:	test   BYTE PTR [eax+0x44],dl
  40bea3:	or     eax,0xaebf5a47
  40bea8:	fwait
  40bea9:	mov    ds:0xa39c72ac,al
  40beae:	add    eax,0x6963f4bc
  40beb3:	scas   al,BYTE PTR es:[edi]
  40beb4:	out    0x6f,al
  40beb6:	xor    eax,edx
  40beb8:	push   ebp
  40beb9:	mov    ds:0xfec3c778,eax
  40bebe:	push   ecx
  40bebf:	sti    
  40bec0:	push   ebx
  40bec1:	mov    ah,0x32
  40bec3:	adc    BYTE PTR [ebp+0x57],al
  40bec6:	(bad)  
  40bec7:	imul   edx,DWORD PTR [ecx+0x2d],0x60895c76
  40bece:	mov    esi,0x5b060f53
  40bed3:	pop    esi
  40bed4:	dec    ecx
  40bed5:	in     al,0x8d
  40bed7:	cmp    al,0x6d
  40bed9:	sahf   
  40beda:	imul   edx,edi,0x8c1f01fc
  40bee0:	cmp    bl,BYTE PTR [ebx]
  40bee2:	shl    BYTE PTR [ecx-0x72],1
  40bee5:	add    dh,BYTE PTR [esi]
  40bee7:	mov    bh,0xd6
  40bee9:	inc    ecx
  40beea:	sti    
  40beeb:	pop    edi
  40beec:	shl    BYTE PTR gs:[ecx-0x20],1
  40bef0:	push   ebp
  40bef1:	pop    esp
  40bef2:	mov    DWORD PTR [ecx],ebx
  40bef4:	push   eax
  40bef5:	pop    ss
  40bef6:	icebp  
  40bef7:	sbb    BYTE PTR [eax+0x3],0x59
  40befb:	pop    ds
  40befc:	pop    ebx
  40befd:	js     0x40bf4e
  40beff:	xor    al,0x8f
  40bf01:	or     esi,DWORD PTR [eax-0x66]
  40bf04:	pop    ss
  40bf05:	dec    esp
  40bf06:	mov    ds:0x3810d156,al
  40bf0b:	(bad)  
  40bf0c:	call   0xff7f290b
  40bf11:	inc    esp
  40bf12:	cmp    DWORD PTR [edi-0x757758c],edi
  40bf18:	mov    al,ds:0xcf5fae4a
  40bf1d:	mov    esp,0xf1bec75f
  40bf22:	mov    dh,0x29
  40bf24:	mov    BYTE PTR [ebx+eax*8-0x1],bh
  40bf28:	retf   0x8ef
  40bf2b:	pop    edi
  40bf2c:	jle    0x40bfa8
  40bf2e:	fcom   st(6)
  40bf30:	mov    esi,0x2bc8ffae
  40bf35:	pop    edx
  40bf36:	mov    al,ds:0xba573aab
  40bf3b:	xor    al,BYTE PTR [edx]
  40bf3d:	das    
  40bf3e:	clc    
  40bf3f:	jg     0x40bee1
  40bf41:	mov    eax,ds:0xa27fb588
  40bf46:	hlt    
  40bf47:	das    
  40bf48:	(bad)  
  40bf49:	imul   DWORD PTR [ecx-0x37]
  40bf4c:	jno    0x40bf7c
  40bf4e:	sub    BYTE PTR [esp+eax*4],0xc5
  40bf52:	mov    edi,0x7e77502f
  40bf57:	test   eax,0x83daf471
  40bf5c:	ja     0x40bfc6
  40bf5e:	sub    eax,0x81fe1d1b
  40bf63:	push   esp
  40bf64:	inc    edx
  40bf65:	out    0x90,eax
  40bf67:	or     cl,BYTE PTR [edx+edx*2-0x30]
  40bf6b:	jmp    0x40bf21
  40bf6d:	mov    cl,0x48
  40bf6f:	(bad)  
  40bf71:	mov    eax,ds:0xbfb53fe5
  40bf76:	nop
  40bf77:	shl    ecx,cl
  40bf79:	push   ebp
  40bf7a:	add    al,0x64
  40bf7c:	loopne 0x40bf1d
  40bf7e:	mov    BYTE PTR [ebx+0x6063885c],cl
  40bf84:	add    BYTE PTR ds:0x9887094,dh
  40bf8a:	pop    esi
  40bf8b:	push   edx
  40bf8c:	push   esi
  40bf8d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40bf8f:	scas   al,BYTE PTR es:[edi]
  40bf90:	or     DWORD PTR [eax],esp
  40bf92:	ficom  DWORD PTR [ebp+edx*8-0x5]
  40bf96:	inc    ecx
  40bf97:	xchg   edx,eax
  40bf98:	popa   
  40bf99:	clc    
  40bf9a:	jmp    0x8545:0x362cc615
  40bfa1:	cmp    al,0xb9
  40bfa3:	sbb    DWORD PTR [ebx+edi*2+0x3949262d],edx
  40bfaa:	repz mov bl,0x25
  40bfad:	(bad)  
  40bfae:	dec    eax
  40bfaf:	add    bh,BYTE PTR [ebp-0x2a]
  40bfb2:	pop    es
  40bfb3:	(bad)  [esi-0x40]
  40bfb6:	inc    ebx
  40bfb7:	popf   
  40bfb8:	mov    cl,cl
  40bfba:	fstp   QWORD PTR [ecx]
  40bfbc:	cmc    
  40bfbd:	int    0x32
  40bfbf:	push   es
  40bfc0:	gs test eax,0x80c3dcf6
  40bfc6:	pop    eax
  40bfc7:	pop    ebx
  40bfc8:	dec    edx
  40bfc9:	inc    esi
  40bfca:	push   esi
  40bfcb:	xchg   ecx,eax
  40bfcc:	ins    DWORD PTR es:[edi],dx
  40bfcd:	ret    0xbc02
  40bfd0:	mov    DWORD PTR ds:0xcead41a8,eax
  40bfd6:	data16 add bl,BYTE PTR [ebp-0x72f0edb7]
  40bfdd:	inc    ebx
  40bfde:	xchg   edi,eax
  40bfdf:	mov    bh,0x27
  40bfe1:	mov    ds:0x4488abb4,eax
  40bfe6:	leave  
  40bfe7:	push   ds
  40bfe8:	adc    DWORD PTR [ecx-0x3f930f7e],ecx
  40bfee:	inc    ecx
  40bfef:	pop    es
  40bff0:	push   es
  40bff1:	mov    al,ds:0x59a96540
  40bff6:	ret    
  40bff7:	adc    ah,BYTE PTR [edi]
  40bff9:	in     al,dx
  40bffa:	hlt    
  40bffb:	xchg   DWORD PTR [edx+0x2d],eax
  40bffe:	popf   
  40bfff:	mov    ch,0xc6
  40c001:	rol    DWORD PTR [edi-0x19],0x93
  40c005:	add    dh,cl
  40c007:	xlat   BYTE PTR ds:[ebx]
  40c008:	xchg   edi,eax
  40c009:	pop    ss
  40c00a:	pop    ebp
  40c00b:	push   0xd29cb654
  40c010:	xor    al,0x61
  40c012:	mov    DWORD PTR [ebx+ebp*1-0x6cad3fe3],edi
  40c019:	popf   
  40c01a:	in     al,0xa3
  40c01c:	dec    ecx
  40c01d:	jp     0x40bfbb
  40c01f:	outs   dx,BYTE PTR ds:[esi]
  40c020:	ja     0x40c01d
  40c022:	dec    esp
  40c023:	xchg   esi,eax
  40c024:	iret   
  40c025:	sub    eax,0xba2c4334
  40c02a:	push   cs
  40c02b:	shl    BYTE PTR [eax+0x1b2c4477],cl
  40c031:	adc    ebp,DWORD PTR [edi]
  40c033:	scas   al,BYTE PTR es:[edi]
  40c034:	pop    ecx
  40c035:	jmp    0x40bfec
  40c037:	jl     0x40c02d
  40c039:	mov    ebp,0xcc7c0c7c
  40c03e:	or     al,0xcc
  40c040:	mov    cl,0x31
  40c042:	adc    eax,0x69c7a6c1
  40c047:	mov    ch,0xc7
  40c049:	fsubr  st,st(4)
  40c04b:	fistp  WORD PTR [edx+0x57]
  40c04e:	aaa    
  40c04f:	inc    edi
  40c050:	cmp    DWORD PTR [esi+0x144f6b67],esi
  40c056:	lahf   
  40c057:	inc    edi
  40c058:	loope  0x40c069
  40c05a:	leave  
  40c05b:	mov    esp,0x322052fd
  40c060:	test   eax,0x5914e50b
  40c065:	mov    edi,0xbb16a9a8
  40c06a:	or     BYTE PTR [esi],ah
  40c06c:	popa   
  40c06d:	fsubr  DWORD PTR [edx+edi*4+0x55]
  40c071:	outs   dx,BYTE PTR ds:[esi]
  40c072:	add    eax,0x986d9b3c
  40c077:	cdq    
  40c078:	neg    DWORD PTR [esi]
  40c07a:	lds    esp,FWORD PTR ds:0x2daf3790
  40c080:	ins    BYTE PTR es:[edi],dx
  40c081:	loope  0x40c028
  40c083:	aas    
  40c084:	pop    edi
  40c085:	jl     0x40c098
  40c087:	push   esi
  40c089:	nop
  40c08a:	sub    al,0x66
  40c08d:	add    BYTE PTR [ecx+0x3fcb3ef7],ch
  40c093:	cmc    
  40c094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c095:	xchg   dl,dh
  40c097:	or     eax,DWORD PTR cs:[esi-0x5]
  40c09b:	(bad)  
  40c09c:	in     al,dx
  40c09d:	push   ebx
  40c09e:	cli    
  40c09f:	add    DWORD PTR [ebx],ebp
  40c0a1:	dec    edx
  40c0a2:	out    0x95,al
  40c0a4:	add    bl,BYTE PTR [edi-0x4ccace3c]
  40c0aa:	arpl   si,bx
  40c0ac:	pop    ebx
  40c0ad:	stos   BYTE PTR es:[edi],al
  40c0ae:	mov    ch,0xef
  40c0b0:	mov    BYTE PTR [ebx],ah
  40c0b2:	lods   eax,DWORD PTR ds:[esi]
  40c0b3:	das    
  40c0b4:	dec    BYTE PTR [edi+0x47]
  40c0b7:	add    al,0x22
  40c0b9:	cwde   
  40c0ba:	inc    BYTE PTR [eax-0x319503a3]
  40c0c0:	add    DWORD PTR [edx],edx
  40c0c2:	jb     0x40c096
  40c0c4:	ror    DWORD PTR [esi+0x9],cl
  40c0c7:	les    ebx,FWORD PTR [edx-0x53442173]
  40c0cd:	and    esi,DWORD PTR [edx]
  40c0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d0:	leave  
  40c0d1:	jne    0x40c06b
  40c0d3:	in     eax,dx
  40c0d4:	ja     0x40c0b3
  40c0d6:	push   ecx
  40c0d7:	jmp    0x5442:0x61212949
  40c0de:	jmp    0x296:0xc5131267
  40c0e5:	out    dx,eax
  40c0e6:	call   0x2f816d7f
  40c0eb:	inc    ebx
  40c0ec:	test   BYTE PTR [eax+0x14],dl
  40c0ef:	xor    DWORD PTR [edi-0x68],edx
  40c0f2:	lds    esp,FWORD PTR [ecx+0x36]
  40c0f5:	in     eax,dx
  40c0f6:	sub    bh,ah
  40c0f8:	sahf   
  40c0f9:	cwde   
  40c0fa:	sbb    al,0xef
  40c0fc:	push   ebp
  40c0fd:	cmp    al,0xbe
  40c0ff:	dec    ecx
  40c100:	mov    al,ds:0x4361bd7e
  40c105:	add    ecx,DWORD PTR [eax+0x6f289aae]
  40c10b:	adc    BYTE PTR fs:[edi+0x2cc11610],0x57
  40c113:	dec    edi
  40c114:	mov    al,0xdc
  40c116:	lods   al,BYTE PTR ds:[esi]
  40c117:	or     BYTE PTR [edx],cl
  40c119:	test   DWORD PTR [ecx+0x4b],ebp
  40c11c:	pop    esi
  40c11d:	xor    ah,BYTE PTR [ebp+0xd0701ae]
  40c123:	sbb    ecx,ecx
  40c125:	stos   BYTE PTR es:[edi],al
  40c126:	pop    eax
  40c127:	xor    al,0xd
  40c129:	cmp    bl,ah
  40c12b:	add    ebx,DWORD PTR [ebx+0x56]
  40c12e:	cmc    
  40c12f:	and    edi,ebx
  40c131:	in     eax,0x5e
  40c133:	rcr    DWORD PTR [ecx],1
  40c135:	and    bl,BYTE PTR ds:0xac7e0ab9
  40c13b:	ja     0x40c0d0
  40c13d:	(bad)  
  40c13e:	jle    0x40c186
  40c140:	dec    ebp
  40c141:	pop    esp
  40c142:	or     ch,BYTE PTR [edx]
  40c144:	scas   al,BYTE PTR es:[edi]
  40c145:	jg     0x40c154
  40c147:	int3   
  40c148:	shl    eax,0xab
  40c14b:	pop    DWORD PTR [bp+si]
  40c14e:	mov    ds:0xb8b84eec,eax
  40c153:	dec    ebx
  40c154:	fisttp WORD PTR [esi]
  40c156:	xchg   DWORD PTR [ebx-0x53],edi
  40c159:	pop    esp
  40c15a:	xor    BYTE PTR [edx],0xfb
  40c15d:	xchg   esp,eax
  40c15e:	ins    BYTE PTR es:[edi],dx
  40c15f:	out    dx,al
  40c160:	sti    
  40c161:	test   eax,0xaffdca01
  40c166:	les    esi,FWORD PTR [edx+0x3b]
  40c169:	inc    ecx
  40c16a:	addr16 aad 0x23
  40c16d:	ins    BYTE PTR es:[edi],dx
  40c16e:	fcom   DWORD PTR [ecx]
  40c170:	add    BYTE PTR [edx],bh
  40c172:	mov    WORD PTR [eax-0x16],fs
  40c175:	xor    edx,DWORD PTR [ebx]
  40c177:	xor    al,BYTE PTR [edx-0x217e39e8]
  40c17d:	or     edx,DWORD PTR [eax-0x36]
  40c180:	cmp    ebx,edx
  40c182:	mov    ds:0xc945e14a,al
  40c187:	(bad)  
  40c188:	mov    al,ds:0xef7f40c5
  40c18d:	push   edx
  40c18e:	daa    
  40c18f:	dec    ebx
  40c190:	nop
  40c191:	fsubr  QWORD PTR [ebx-0x56]
  40c194:	fstp   TBYTE PTR [ecx+0x7a6b5de7]
  40c19a:	xor    eax,0xd3282cd4
  40c19f:	pop    es
  40c1a0:	add    al,0x54
  40c1a2:	sbb    DWORD PTR [ecx],eax
  40c1a4:	mov    ecx,0x8bd4b50
  40c1a9:	xchg   DWORD PTR [ecx-0x7958c63f],edi
  40c1af:	inc    edx
  40c1b0:	sti    
  40c1b1:	out    0x86,al
  40c1b3:	lahf   
  40c1b4:	jmp    0x5144:0xb8cd5c8e
  40c1bb:	xchg   esi,eax
  40c1bc:	cmp    al,0x6
  40c1be:	test   al,0xbc
  40c1c0:	mov    ah,0xb1
  40c1c2:	or     ebx,ebx
  40c1c4:	mov    dl,0xb
  40c1c6:	hlt    
  40c1c7:	adc    eax,0x499adce1
  40c1cc:	xchg   ecx,eax
  40c1cd:	(bad)  
  40c1ce:	loope  0x40c248
  40c1d0:	scas   al,BYTE PTR es:[edi]
  40c1d1:	mov    BYTE PTR [ecx+0x40],bl
  40c1d4:	push   es
  40c1d5:	pop    eax
  40c1d6:	repz jmp 0xecdc:0x22159c4f
  40c1de:	int3   
  40c1df:	stos   DWORD PTR es:[edi],eax
  40c1e0:	popa   
  40c1e1:	out    0x33,eax
  40c1e3:	sahf   
  40c1e4:	(bad)  
  40c1e5:	sahf   
  40c1e6:	sar    BYTE PTR [ebx],cl
  40c1e8:	jg     0x40c222
  40c1ea:	imul   ebp,DWORD PTR [esi-0x8d2af27],0xfffffffc
  40c1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f2:	retf   0xe104
  40c1f5:	cs dec ebp
  40c1f7:	inc    ebp
  40c1f8:	enter  0xea23,0x82
  40c1fc:	ins    DWORD PTR es:[edi],dx
  40c1fd:	int3   
  40c1fe:	xor    edx,DWORD PTR [eax]
  40c200:	sahf   
  40c201:	(bad)  
  40c202:	loope  0x40c225
  40c204:	aad    0xb9
  40c206:	mov    eax,0x655eaa07
  40c20b:	test   eax,0x1502e51d
  40c210:	neg    DWORD PTR [eax-0x2fc3dcdd]
  40c216:	or     BYTE PTR [ecx],bl
  40c218:	dec    edx
  40c219:	scas   eax,DWORD PTR es:[edi]
  40c21a:	xchg   bl,cl
  40c21c:	inc    esi
  40c21d:	or     BYTE PTR [ecx],0x1
  40c220:	jge    0x40c213
  40c222:	test   eax,0xc987a408
  40c227:	xlat   BYTE PTR ds:[ebx]
  40c228:	xchg   edi,eax
  40c229:	or     edx,esp
  40c22b:	int    0xe9
  40c22d:	xor    BYTE PTR [esi],bh
  40c22f:	mov    esp,DWORD PTR [ecx-0x2]
  40c232:	iret   
  40c233:	pop    esp
  40c234:	inc    esi
  40c235:	mov    bl,BYTE PTR [esp+esi*4+0x7c02e74e]
  40c23c:	add    ah,dl
  40c23e:	jle    0x40c277
  40c240:	ror    BYTE PTR ds:0x78bdd14d,0xb3
  40c247:	and    DWORD PTR [eax-0x4e850bc3],eax
  40c24d:	or     DWORD PTR [edx],esp
  40c24f:	(bad)
  40c252:	lock and DWORD PTR [esi-0x158a210b],ebp
  40c259:	push   0xca227e4c
  40c25e:	or     BYTE PTR [eax+0x46786ff9],bl
  40c264:	shr    BYTE PTR ds:0xb7a7f211,0x5f
  40c26b:	or     edx,ecx
  40c26d:	iret   
  40c26e:	les    ecx,FWORD PTR [edx]
  40c270:	out    dx,al
  40c271:	nop
  40c272:	clc    
  40c273:	enter  0x914c,0x39
  40c277:	fbld   TBYTE PTR [edx+0x5130634e]
  40c27d:	scas   eax,DWORD PTR es:[edi]
  40c27e:	mov    eax,0x9b54910e
  40c283:	pop    edx
  40c284:	nop
  40c285:	dec    esi
  40c286:	adc    al,BYTE PTR [edx-0x5e968720]
  40c28c:	outs   dx,DWORD PTR ds:[esi]
  40c28d:	pop    esp
  40c28e:	xor    al,0x1e
  40c290:	iret   
  40c291:	cmp    eax,DWORD PTR [edi]
  40c293:	loope  0x40c2a5
  40c295:	lock jl 0x40c237
  40c298:	fcmovne st,st(1)
  40c29a:	ret    
  40c29b:	adc    BYTE PTR ds:0xf6385d45,cl
  40c2a1:	mov    WORD PTR [eax+0xb],fs
  40c2a4:	aad    0x3e
  40c2a6:	jbe    0x40c295
  40c2a8:	mov    eax,ds:0x33ffe516
  40c2ad:	mov    BYTE PTR [ebx],0xc7
  40c2b0:	cmp    ecx,eax
  40c2b2:	je     0x40c2cd
  40c2b8:	mov    eax,DWORD PTR [ebp-0x3c]
  40c2bb:	movzx  eax,WORD PTR [eax+ebx*2]
  40c2bf:	mov    ecx,DWORD PTR [ebp-0x14]
  40c2c2:	mov    eax,DWORD PTR [ecx+eax*4]
  40c2c5:	mov    DWORD PTR [ebp-0x40],eax
  40c2c8:	jmp    0x409eee
  40c2cd:	mov    eax,DWORD PTR [ebp-0xc]
  40c2d0:	xor    eax,esi
  40c2d2:	lea    ebx,[ebx+eax*1+0x3272e0]
  40c2d9:	jmp    0x407809
  40c2de:	mov    eax,DWORD PTR [ebp-0x4]
  40c2e1:	xor    eax,esi
  40c2e3:	add    eax,edi
  40c2e5:	jmp    0x40c407
  40c2ea:	mov    eax,DWORD PTR [ebp-0x40]
  40c2ed:	add    eax,DWORD PTR [ebp+0x8]
  40c2f0:	mov    DWORD PTR [ebp-0x18],eax
  40c2f3:	mov    eax,DWORD PTR [ebp-0x1c]
  40c2f6:	test   eax,eax
  40c2f8:	je     0x40c392
  40c2fe:	mov    DWORD PTR [ebp-0x28],0x0
  40c305:	push   0x3
  40c307:	xor    edx,edx
  40c309:	pop    edx
  40c30a:	add    edx,0x8
  40c30d:	push   edx
  40c30e:	pop    ecx
  40c30f:	push   0x6
  40c311:	dec    ecx
  40c312:	pop    ebx
  40c313:	dec    ebx
  40c314:	xchg   ebx,ecx
  40c316:	sub    ebx,ecx
  40c318:	xchg   ebx,ecx
  40c31a:	dec    ecx
  40c31b:	mov    eax,DWORD PTR [ebp-0x1c]
  40c31e:	imul   eax,ecx
  40c321:	sub    esp,eax
  40c323:	mov    DWORD PTR [ebp-0x28],esp
  40c326:	mov    eax,DWORD PTR [ebp-0x4]
  40c329:	xor    eax,esi
  40c32b:	add    eax,edi
  40c32d:	jmp    0x40c36b
  40c332:	mov    ecx,DWORD PTR [ebp-0xc]
  40c335:	mov    eax,DWORD PTR [ebp+0x8]
  40c338:	mov    edx,DWORD PTR [ebp+0x14]
  40c33b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c33f:	xor    ecx,esi
  40c341:	add    ecx,edi
  40c343:	xor    edx,edx
  40c345:	div    ecx
  40c347:	mov    ecx,DWORD PTR [ebp-0x4]
  40c34a:	xor    ecx,esi
  40c34c:	lea    eax,[ecx+eax*1+0x3272e0]
  40c353:	mov    ecx,DWORD PTR [ebp+0x8]
  40c356:	mov    edx,DWORD PTR [ebp-0x28]
  40c359:	mov    DWORD PTR [edx+ecx*4],eax
  40c35c:	mov    eax,DWORD PTR [ebp-0xc]
  40c35f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c362:	xor    eax,esi
  40c364:	lea    eax,[eax+ecx*1+0x3272e0]
  40c36b:	mov    DWORD PTR [ebp+0x8],eax
  40c36e:	mov    eax,DWORD PTR [ebp-0xc]
  40c371:	mov    ecx,DWORD PTR [ebp+0x14]
  40c374:	xor    eax,esi
  40c376:	add    eax,edi
  40c378:	imul   eax,DWORD PTR [ecx]
  40c37b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c37e:	mov    edx,DWORD PTR [ebp+0x8]
  40c381:	xor    ecx,esi
  40c383:	lea    ecx,[ecx+edx*1+0x3272e0]
  40c38a:	cmp    ecx,eax
  40c38c:	jne    0x40c332
  40c392:	mov    eax,DWORD PTR [ebp-0x4]
  40c395:	xor    eax,esi
  40c397:	add    eax,edi
  40c399:	mov    DWORD PTR [ebp-0x10],eax
  40c39c:	mov    ebx,0x65655
  40c3a1:	add    ebx,0x3234
  40c3a7:	xchg   ebx,esi
  40c3a9:	xor    ebx,ebx
  40c3ab:	push   esi
  40c3ac:	mov    esi,ebx
  40c3ae:	pop    ebx
  40c3af:	mov    edx,esi
  40c3b1:	add    ebx,0x1002
  40c3b7:	lea    eax,[ebp-0x18]
  40c3ba:	add    edx,eax
  40c3bc:	add    edx,0x5
  40c3bf:	push   edx
  40c3c0:	inc    esi
  40c3c1:	pop    ecx
  40c3c2:	dec    ecx
  40c3c3:	xchg   ecx,eax
  40c3c4:	dec    eax
  40c3c5:	xchg   ecx,eax
  40c3c6:	dec    ecx
  40c3c7:	xchg   ecx,edx
  40c3c9:	dec    edx
  40c3ca:	push   edx
  40c3cb:	mov    edx,ebx
  40c3cd:	pop    ebx
  40c3ce:	dec    ebx
  40c3cf:	call   DWORD PTR [ebx]
  40c3d1:	cmp    DWORD PTR [ebp+0x10],esi
  40c3d4:	je     0x40c3f3
  40c3da:	xchg   edx,eax
  40c3db:	push   0xb
  40c3dd:	pop    ecx
  40c3de:	push   0x4
  40c3e0:	pop    ebx
  40c3e1:	inc    ebx
  40c3e2:	xchg   ebx,ecx
  40c3e4:	sub    ebx,ecx
  40c3e6:	xchg   ebx,ecx
  40c3e8:	dec    ecx
  40c3e9:	dec    ecx
  40c3ea:	mov    eax,DWORD PTR [ebp-0x1c]
  40c3ed:	imul   eax,ecx
  40c3f0:	add    esp,eax
  40c3f2:	xchg   edx,eax
  40c3f3:	push   eax
  40c3f4:	xor    ebx,ebx
  40c3f6:	mov    edx,esp
  40c3f8:	dec    edx
  40c3f9:	inc    ebx
  40c3fa:	add    ebx,DWORD PTR [edx+ebx*1]
  40c3fd:	dec    ebx
  40c3fe:	xor    edx,edx
  40c400:	add    DWORD PTR [ebp-0x10],ebx
  40c403:	pop    ebx
  40c404:	mov    eax,DWORD PTR [ebp-0x10]
  40c407:	pop    edi
  40c408:	pop    esi
  40c409:	pop    ebx
  40c40a:	leave  
  40c40b:	ret    0x10
  40c40e:	push   ebp
  40c40f:	mov    ebp,esp
  40c411:	sub    esp,0x7c
  40c414:	push   esi
  40c415:	xor    ecx,esi
  40c417:	push   edi
  40c418:	mov    eax,ds:0x42d313
  40c41d:	mov    DWORD PTR [ebp-0x24],eax
  40c420:	mov    eax,ds:0x42d41f
  40c425:	mov    DWORD PTR [ebp-0x34],eax
  40c428:	mov    DWORD PTR ds:0x42c01c,0x1b
  40c432:	cmp    DWORD PTR ds:0x42c01c,0x0
  40c439:	je     0x40c519
  40c43f:	cmp    DWORD PTR ds:0x42c01c,0x22
  40c446:	jne    0x40c457
  40c44c:	push   0x428028
  40c451:	call   DWORD PTR ds:0x42dcb3
  40c457:	xor    eax,eax
  40c459:	add    eax,DWORD PTR ds:0x42c01c
  40c45f:	dec    eax
  40c460:	mov    ds:0x42c01c,eax
  40c465:	jmp    0x40c432
  40c46a:	and    DWORD PTR ds:0x428010,0x0
  40c474:	xor    ecx,ecx
  40c476:	xor    ecx,DWORD PTR ds:0x428010
  40c47c:	inc    ecx
  40c47d:	mov    DWORD PTR ds:0x428010,ecx
  40c483:	cmp    DWORD PTR ds:0x428010,0x6
  40c48a:	jne    0x40c4a5
  40c490:	push   0x429004
  40c495:	push   0x42a01c
  40c49a:	push   0x428010
  40c49f:	call   DWORD PTR ds:0x42dc73
  40c4a5:	cmp    DWORD PTR ds:0x428010,0x5
  40c4ac:	jne    0x40c4bf
  40c4b2:	mov    ecx,DWORD PTR ds:0x428010
  40c4b8:	inc    ecx
  40c4b9:	mov    DWORD PTR ds:0x428010,ecx
  40c4bf:	cmp    DWORD PTR ds:0x428010,0x16
  40c4c6:	jb     0x40c474
  40c4cc:	and    DWORD PTR ds:0x42b004,0x0
  40c4d6:	jmp    0x40c4e8
  40c4db:	mov    esi,DWORD PTR ds:0x42b004
  40c4e1:	inc    esi
  40c4e2:	mov    DWORD PTR ds:0x42b004,esi
  40c4e8:	cmp    DWORD PTR ds:0x42b004,0x1a
  40c4ef:	jae    0x40c519
  40c4f5:	cmp    DWORD PTR ds:0x42b004,0x23
  40c4fc:	jne    0x40c514
  40c502:	push   0x1
  40c504:	push   0x6fde
  40c509:	push   0x44e1
  40c50e:	call   DWORD PTR ds:0x42dc77
  40c514:	jmp    0x40c4db
  40c519:	and    DWORD PTR [ebp-0x30],0x0
  40c51d:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40c524:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  40c52b:	mov    eax,DWORD PTR [ebp-0x10]
  40c52e:	and    DWORD PTR ds:0x428020,0x0
  40c538:	mov    ecx,DWORD PTR ds:0x428020
  40c53e:	inc    ecx
  40c53f:	mov    DWORD PTR ds:0x428020,ecx
  40c545:	cmp    DWORD PTR ds:0x428020,0x18
  40c54c:	jne    0x40c571
  40c552:	push   DWORD PTR [ebp-0x1c]
  40c555:	push   DWORD PTR [ebp-0x18]
  40c558:	push   0x42c004
  40c55d:	push   0x3a2d
  40c562:	push   DWORD PTR [ebp-0x18]
  40c565:	push   DWORD PTR [ebp-0x14]
  40c568:	push   DWORD PTR [ebp-0x1c]
  40c56b:	call   DWORD PTR ds:0x42dc7f
  40c571:	cmp    DWORD PTR ds:0x428020,0x10
  40c578:	jb     0x40c538
  40c57e:	xor    edi,ecx
  40c580:	mov    ecx,DWORD PTR [ebp-0x10]
  40c583:	mov    esi,DWORD PTR ds:0x42c000
  40c589:	and    DWORD PTR ds:0x42b018,esi
  40c58f:	sub    eax,ecx
  40c591:	sub    DWORD PTR ds:0x428028,edx
  40c597:	mov    DWORD PTR [ebp-0x10],eax
  40c59a:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c5a1:	mov    eax,DWORD PTR [ebp-0x18]
  40c5a4:	and    DWORD PTR ds:0x428000,0x0
  40c5ae:	jmp    0x40c5c2
  40c5b3:	xor    esi,esi
  40c5b5:	xor    esi,DWORD PTR ds:0x428000
  40c5bb:	inc    esi
  40c5bc:	mov    DWORD PTR ds:0x428000,esi
  40c5c2:	cmp    DWORD PTR ds:0x428000,0x19
  40c5c9:	jae    0x40c645
  40c5cf:	cmp    DWORD PTR ds:0x428000,0x26
  40c5d6:	jne    0x40c5f7
  40c5dc:	push   0x429000
  40c5e1:	push   DWORD PTR [ebp-0xc]
  40c5e4:	push   0x42d000
  40c5e9:	push   DWORD PTR [ebp-0x20]
  40c5ec:	push   0x21f7
  40c5f1:	call   DWORD PTR ds:0x42dc83
  40c5f7:	jmp    0x40c5b3
  40c5fc:	mov    DWORD PTR ds:0x429018,0x13
  40c606:	cmp    DWORD PTR ds:0x429018,0x0
  40c60d:	je     0x40c645
  40c613:	cmp    DWORD PTR ds:0x429018,0x21
  40c61a:	jne    0x40c62b
  40c620:	push   0x42c008
  40c625:	call   DWORD PTR ds:0x42dc8b
  40c62b:	xor    esi,esi
  40c62d:	xor    esi,DWORD PTR ds:0x429018
  40c633:	dec    esi
  40c634:	mov    DWORD PTR ds:0x429018,esi
  40c63a:	jmp    0x40c606
  40c63f:	sub    DWORD PTR ds:0x42c01c,edx
  40c645:	mov    ecx,DWORD PTR [ebp-0x18]
  40c648:	sbb    edi,esi
  40c64a:	sub    eax,ecx
  40c64c:	and    DWORD PTR ds:0x428020,0x0
  40c656:	jmp    0x40c66a
  40c65b:	xor    esi,esi
  40c65d:	or     esi,DWORD PTR ds:0x428020
  40c663:	inc    esi
  40c664:	mov    DWORD PTR ds:0x428020,esi
  40c66a:	cmp    DWORD PTR ds:0x428020,0x14
  40c671:	jae    0x40c6b9
  40c677:	cmp    DWORD PTR ds:0x428020,0x5
  40c67e:	jne    0x40c69a
  40c684:	push   0x2bc2
  40c689:	push   DWORD PTR [ebp-0x28]
  40c68c:	push   0x42a010
  40c691:	push   DWORD PTR [ebp-0x14]
  40c694:	call   DWORD PTR ds:0x42dc8f
  40c69a:	cmp    DWORD PTR ds:0x428020,0x4
  40c6a1:	jne    0x40c6b4
  40c6a7:	mov    esi,DWORD PTR ds:0x428020
  40c6ad:	inc    esi
  40c6ae:	mov    DWORD PTR ds:0x428020,esi
  40c6b4:	jmp    0x40c65b
  40c6b9:	mov    DWORD PTR [ebp-0x18],eax
  40c6bc:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c6c3:	mov    eax,DWORD PTR [ebp-0xc]
  40c6c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40c6c9:	sub    eax,ecx
  40c6cb:	mov    DWORD PTR [ebp-0xc],eax
  40c6ce:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c6d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40c6d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c6db:	sub    eax,ecx
  40c6dd:	mov    DWORD PTR [ebp-0x1c],eax
  40c6e0:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c6e7:	mov    eax,DWORD PTR [ebp-0x20]
  40c6ea:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6ed:	sub    eax,ecx
  40c6ef:	mov    DWORD PTR [ebp-0x20],eax
  40c6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40c6f5:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6f8:	mov    esi,0x7510899
  40c6fd:	xor    eax,esi
  40c6ff:	mov    edi,0x3272e0
  40c704:	add    eax,edi
  40c706:	or     eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x20],eax
  40c70b:	mov    eax,DWORD PTR [ebp-0x4]
  40c70e:	mov    ecx,DWORD PTR [ebp-0x4]
  40c711:	sub    eax,ecx
  40c713:	mov    DWORD PTR [ebp-0x4],eax
  40c716:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c71d:	mov    eax,DWORD PTR [ebp-0xc]
  40c720:	xor    eax,esi
  40c722:	add    eax,edi
  40c724:	push   eax
  40c725:	mov    eax,DWORD PTR [ebp-0x10]
  40c728:	xor    eax,esi
  40c72a:	add    eax,edi
  40c72c:	push   eax
  40c72d:	mov    eax,DWORD PTR [ebp-0x4]
  40c730:	xor    eax,esi
  40c732:	add    eax,edi
  40c734:	push   eax
  40c735:	lea    eax,[ebp-0x7c]
  40c738:	push   eax
  40c739:	push   DWORD PTR [ebp-0x2c]
  40c73c:	push   DWORD PTR [ebp-0x28]
  40c73f:	call   0x4115b7
  40c744:	test   eax,eax
  40c746:	je     0x40c774
  40c74c:	lea    eax,[ebp-0x7c]
  40c74f:	push   eax
  40c750:	mov    eax,DWORD PTR [ebp-0x28]
  40c753:	xor    eax,esi
  40c755:	add    eax,edi
  40c757:	push   eax
  40c758:	mov    eax,DWORD PTR [ebp-0x24]
  40c75b:	add    eax,0xaa
  40c760:	push   eax
  40c761:	mov    eax,DWORD PTR [ebp-0x24]
  40c764:	mov    eax,DWORD PTR [eax+0x198]
  40c76a:	push   DWORD PTR [eax]
  40c76c:	call   0x405286
  40c771:	mov    DWORD PTR [ebp-0x14],eax
  40c774:	lea    eax,[ebp+0x4]
  40c777:	mov    DWORD PTR [ebp-0x30],eax
  40c77a:	mov    eax,DWORD PTR [ebp-0x14]
  40c77d:	test   eax,eax
  40c77f:	je     0x40c7e7
  40c785:	lea    eax,[ebp-0x8]
  40c788:	mov    DWORD PTR [ebp-0x38],eax
  40c78b:	mov    eax,DWORD PTR [ebp-0x34]
  40c78e:	mov    DWORD PTR [ebp-0x8],eax
  40c791:	mov    eax,DWORD PTR [ebp-0x8]
  40c794:	mov    ecx,DWORD PTR [ebp-0x14]
  40c797:	sub    eax,ecx
  40c799:	mov    DWORD PTR [ebp-0x8],eax
  40c79c:	mov    ecx,DWORD PTR [ebp-0x4]
  40c79f:	xor    ecx,esi
  40c7a1:	mov    eax,0xffcd8d20
  40c7a6:	sub    eax,ecx
  40c7a8:	add    DWORD PTR [ebp-0x8],eax
  40c7ab:	mov    eax,DWORD PTR [ebp-0x8]
  40c7ae:	mov    ecx,DWORD PTR [ebp-0x14]
  40c7b1:	mov    DWORD PTR [ecx+0x1],eax
  40c7b4:	mov    eax,DWORD PTR [ebp-0x14]
  40c7b7:	push   DWORD PTR [ebp-0x24]
  40c7ba:	mov    BYTE PTR [eax],0xe9
  40c7bd:	mov    eax,ds:0x42d18f
  40c7c2:	push   DWORD PTR [eax]
  40c7c4:	push   DWORD PTR ds:0x42d3eb
  40c7ca:	push   DWORD PTR ds:0x42d197
  40c7d0:	push   DWORD PTR ds:0x42d3cb
  40c7d6:	push   DWORD PTR ds:0x42d9db
  40c7dc:	push   DWORD PTR [ebp-0x28]
  40c7df:	push   DWORD PTR [ebp-0x2c]
  40c7e2:	mov    eax,DWORD PTR [ebp-0x14]
  40c7e5:	call   eax
  40c7e7:	mov    eax,DWORD PTR [ebp-0x30]
  40c7ea:	mov    ecx,DWORD PTR ds:0x42d38f
  40c7f0:	add    DWORD PTR [eax],ecx
  40c7f2:	pop    edi
  40c7f3:	pop    esi
  40c7f4:	leave  
  40c7f5:	ret    
  40c7f6:	push   ebp
  40c7f7:	mov    ebp,esp
  40c7f9:	sub    esp,0x18
  40c7fc:	adc    edx,ecx
  40c7fe:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c805:	add    edx,ecx
  40c807:	lea    eax,[ebp+0x14]
  40c80a:	and    DWORD PTR ds:0x42c014,0x0
  40c814:	jmp    0x40c826
  40c819:	mov    ecx,DWORD PTR ds:0x42c014
  40c81f:	inc    ecx
  40c820:	mov    DWORD PTR ds:0x42c014,ecx
  40c826:	cmp    DWORD PTR ds:0x42c014,0x18
  40c82d:	jae    0x40c86f
  40c833:	cmp    DWORD PTR ds:0x42c014,0x8
  40c83a:	jne    0x40c846
  40c840:	call   DWORD PTR ds:0x42dc93
  40c846:	cmp    DWORD PTR ds:0x42c014,0x7
  40c84d:	jne    0x40c860
  40c853:	mov    ecx,DWORD PTR ds:0x42c014
  40c859:	inc    ecx
  40c85a:	mov    DWORD PTR ds:0x42c014,ecx
  40c860:	jmp    0x40c819
  40c865:	xor    DWORD PTR ds:0x42c004,0x7da9
  40c86f:	mov    DWORD PTR [ebp-0x4],eax
  40c872:	dec    edx
  40c873:	push   esi
  40c874:	and    DWORD PTR ds:0x42a004,0x0
  40c87e:	mov    esi,DWORD PTR ds:0x42a004
  40c884:	inc    esi
  40c885:	mov    DWORD PTR ds:0x42a004,esi
  40c88b:	cmp    DWORD PTR ds:0x42a004,0x4
  40c892:	jne    0x40c8b6
  40c898:	push   DWORD PTR [ebp-0x24]
  40c89b:	push   0x42b000
  40c8a0:	push   DWORD PTR [ebp-0x1c]
  40c8a3:	push   0x1834
  40c8a8:	push   0x14e1
  40c8ad:	push   DWORD PTR [ebp-0x24]
  40c8b0:	call   DWORD PTR ds:0x42dc97
  40c8b6:	cmp    DWORD PTR ds:0x42a004,0x3
  40c8bd:	jne    0x40c8d2
  40c8c3:	xor    esi,esi
  40c8c5:	xor    esi,DWORD PTR ds:0x42a004
  40c8cb:	inc    esi
  40c8cc:	mov    DWORD PTR ds:0x42a004,esi
  40c8d2:	cmp    DWORD PTR ds:0x42a004,0x16
  40c8d9:	jb     0x40c87e
  40c8df:	mov    esi,0xf89c85b9
  40c8e4:	adc    edx,DWORD PTR ds:0x428004
  40c8ea:	mov    DWORD PTR [ebp-0xc],esi
  40c8ed:	lea    eax,[ebp-0xc]
  40c8f0:	sbb    edx,DWORD PTR ds:0x429004
  40c8f6:	mov    DWORD PTR [ebp-0x14],eax
  40c8f9:	xor    ecx,ecx
  40c8fb:	or     ecx,DWORD PTR ds:0x418f85
  40c901:	mov    ecx,DWORD PTR [ecx]
  40c903:	adc    DWORD PTR ds:0x42b018,ecx
  40c909:	mov    eax,DWORD PTR [ebp-0xc]
  40c90c:	add    DWORD PTR ds:0x42c004,0x428008
  40c916:	mov    edx,DWORD PTR [ebp-0x14]
  40c919:	mov    ecx,0x7510899
  40c91e:	xor    eax,ecx
  40c920:	sbb    DWORD PTR ds:0x42b010,0x428000
  40c92a:	add    eax,0x3272e0
  40c92f:	xor    DWORD PTR ds:0x42b018,0x1738
  40c939:	mov    DWORD PTR [edx],eax
  40c93b:	or     DWORD PTR ds:0x429008,0x34e
  40c945:	mov    eax,ds:0x42d18b
  40c94a:	mov    edx,DWORD PTR [ebp-0x4]
  40c94d:	mov    eax,DWORD PTR [eax]
  40c94f:	sbb    DWORD PTR ds:0x429010,0x361f
  40c959:	add    eax,DWORD PTR [edx]
  40c95b:	dec    edx
  40c95c:	push   edi
  40c95d:	mov    DWORD PTR ds:0x42901c,0x1f
  40c967:	cmp    DWORD PTR ds:0x42901c,0x0
  40c96e:	je     0x40c9b5
  40c974:	cmp    DWORD PTR ds:0x42901c,0x3
  40c97b:	jne    0x40c987
  40c981:	call   DWORD PTR ds:0x42dc9b
  40c987:	cmp    DWORD PTR ds:0x42901c,0x4
  40c98e:	jne    0x40c9a3
  40c994:	xor    edx,edx
  40c996:	or     edx,DWORD PTR ds:0x42901c
  40c99c:	dec    edx
  40c99d:	mov    DWORD PTR ds:0x42901c,edx
  40c9a3:	mov    edx,DWORD PTR ds:0x42901c
  40c9a9:	dec    edx
  40c9aa:	mov    DWORD PTR ds:0x42901c,edx
  40c9b0:	jmp    0x40c967
  40c9b5:	mov    DWORD PTR [ebp-0x8],eax
  40c9b8:	or     edi,edi
  40c9ba:	mov    edi,DWORD PTR [ebp+0x8]
  40c9bd:	adc    edx,edx
  40c9bf:	mov    eax,ds:0x42d313
  40c9c4:	mov    eax,DWORD PTR [eax+0x198]
  40c9ca:	xor    edi,ecx
  40c9cc:	mov    edx,0x3272e0
  40c9d1:	sub    DWORD PTR ds:0x42a00c,0x42b010
  40c9db:	add    edi,edx
  40c9dd:	mov    DWORD PTR ds:0x428010,0x673c
  40c9e7:	cmp    DWORD PTR [eax],edi
  40c9e9:	je     0x40c9f6
  40c9ef:	mov    eax,DWORD PTR [eax]
  40c9f1:	jmp    0x40f0dc
  40c9f6:	mov    eax,DWORD PTR [ebp+0x18]
  40c9f9:	mov    DWORD PTR ds:0x42a01c,0x6325
  40ca03:	cmp    eax,esi
  40ca05:	jne    0x40ca1f
  40ca0b:	push   0xf89c85b8
  40ca10:	mov    DWORD PTR ds:0x42a00c,0x25aa
  40ca1a:	jmp    0x40f0cb
  40ca1f:	mov    esi,0x6599
  40ca24:	mov    esi,DWORD PTR [ebp+0x18]
  40ca27:	mov    eax,0xf89c85bb
  40ca2c:	mov    DWORD PTR ds:0x42c00c,0x595f
  40ca36:	cmp    esi,eax
  40ca38:	mov    DWORD PTR ds:0x429008,0x11a1
  40ca42:	jne    0x40f0bb
  40ca48:	add    eax,DWORD PTR ds:0x42a004
  40ca4e:	mov    eax,DWORD PTR [ebp+0x10]
  40ca51:	xor    eax,ecx
  40ca53:	add    eax,edx
  40ca55:	and    DWORD PTR ds:0x428014,0x0
  40ca5f:	jmp    0x40ca71
  40ca64:	mov    esi,DWORD PTR ds:0x428014
  40ca6a:	inc    esi
  40ca6b:	mov    DWORD PTR ds:0x428014,esi
  40ca71:	cmp    DWORD PTR ds:0x428014,0x16
  40ca78:	jae    0x40caa5
  40ca7e:	cmp    DWORD PTR ds:0x428014,0x1b
  40ca85:	jne    0x40ca9e
  40ca8b:	push   DWORD PTR [ebp-0x28]
  40ca8e:	push   0x428018
  40ca93:	push   0x4f77
  40ca98:	call   DWORD PTR ds:0x42dc9f
  40ca9e:	jmp    0x40ca64
  40caa3:	not    esi
  40caa5:	mov    DWORD PTR [ebp-0x18],eax
  40caa8:	sub    DWORD PTR ds:0x428014,ecx
  40caae:	mov    eax,DWORD PTR [ebp+0xc]
  40cab1:	mov    esi,DWORD PTR ds:0x428008
  40cab7:	or     DWORD PTR ds:0x428028,esi
  40cabd:	mov    esi,DWORD PTR [ebp-0x8]
  40cac0:	xor    eax,ecx
  40cac2:	add    eax,edx
  40cac4:	adc    DWORD PTR ds:0x429000,0x42900c
  40cace:	imul   eax,DWORD PTR [esi]
  40cad1:	and    DWORD PTR ds:0x42c004,0x0
  40cadb:	mov    esi,DWORD PTR ds:0x42c004
  40cae1:	inc    esi
  40cae2:	mov    DWORD PTR ds:0x42c004,esi
  40cae8:	cmp    DWORD PTR ds:0x42c004,0x5
  40caef:	jne    0x40cb08
  40caf5:	push   0x42d0b3
  40cafa:	push   0x42d127
  40caff:	push   DWORD PTR [ebp-0x24]
  40cb02:	call   DWORD PTR ds:0x42dca7
  40cb08:	cmp    DWORD PTR ds:0x42c004,0x4
  40cb0f:	jne    0x40cb22
  40cb15:	mov    esi,DWORD PTR ds:0x42c004
  40cb1b:	inc    esi
  40cb1c:	mov    DWORD PTR ds:0x42c004,esi
  40cb22:	cmp    DWORD PTR ds:0x42c004,0x14
  40cb29:	jb     0x40cadb
  40cb2f:	mov    esi,DWORD PTR [ebp+0x8]
  40cb32:	and    DWORD PTR ds:0x42a008,0x408f
  40cb3c:	xor    esi,ecx
  40cb3e:	add    esi,edx
  40cb40:	cmp    esi,eax
  40cb42:	mov    DWORD PTR ds:0x429000,0x45f2
  40cb4c:	mov    eax,DWORD PTR [ebp-0x4]
  40cb4f:	mov    DWORD PTR ds:0x428010,0x639a
  40cb59:	push   ebx
  40cb5a:	mov    DWORD PTR ds:0x428004,0x7615
  40cb64:	je     0x40cbb2
  40cb6a:	sub    esi,DWORD PTR ds:0x42b01c
  40cb70:	mov    esi,DWORD PTR [ebp-0x18]
  40cb73:	add    DWORD PTR [eax],esi
  40cb75:	dec    eax
  40cb76:	mov    eax,DWORD PTR [ebp-0x4]
  40cb79:	mov    esi,DWORD PTR [ebp+0xc]
  40cb7c:	adc    DWORD PTR ds:0x42b014,0x3307
  40cb86:	xor    esi,ecx
  40cb88:	add    DWORD PTR ds:0x42c004,0x3241
  40cb92:	add    esi,edx
  40cb94:	sub    DWORD PTR ds:0x42800c,0x6cc3
  40cb9e:	imul   esi,DWORD PTR [eax]
  40cba1:	mov    DWORD PTR ds:0x428000,0x39ad
  40cbab:	mov    DWORD PTR [eax],esi
  40cbad:	jmp    0x40cbb7
  40cbb2:	mov    esi,DWORD PTR [ebp+0x14]
  40cbb5:	xor    DWORD PTR [eax],esi
  40cbb7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbba:	mov    edi,DWORD PTR [ebp+0x10]
  40cbbd:	xor    edi,ecx
  40cbbf:	mov    esi,0xffcd8d20
  40cbc4:	mov    ebx,esi
  40cbc6:	sub    ebx,edi
  40cbc8:	add    DWORD PTR [eax],ebx
  40cbca:	mov    eax,DWORD PTR [ebp-0x4]
  40cbcd:	mov    edi,DWORD PTR [ebp-0x8]
  40cbd0:	add    edi,DWORD PTR [eax]
  40cbd2:	mov    DWORD PTR [ebp-0x8],edi
  40cbd5:	mov    eax,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edi,DWORD PTR [ebp+0xc]
  40cbdb:	xor    edi,ecx
  40cbdd:	xor    eax,ecx
  40cbdf:	lea    eax,[eax+edi*1+0x64e5c0]
  40cbe6:	mov    edi,DWORD PTR [ebp+0xc]
  40cbe9:	xor    edi,ecx
  40cbeb:	add    edi,edx
  40cbed:	imul   eax,edi
  40cbf0:	mov    edi,DWORD PTR [ebp+0xc]
  40cbf3:	xor    edi,ecx
  40cbf5:	sub    edi,eax
  40cbf7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbfa:	add    edi,edx
  40cbfc:	cmp    DWORD PTR [eax],edi
  40cbfe:	mov    eax,DWORD PTR [ebp-0x4]
  40cc01:	mov    edi,DWORD PTR [ebp+0x10]
  40cc04:	jg     0x40cc17
  40cc0a:	xor    edi,ecx
  40cc0c:	mov    ebx,esi
  40cc0e:	sub    ebx,edi
  40cc10:	add    DWORD PTR [eax],ebx
  40cc12:	jmp    0x40cc1d
  40cc17:	xor    edi,ecx
  40cc19:	add    edi,edx
  40cc1b:	add    DWORD PTR [eax],edi
  40cc1d:	mov    eax,DWORD PTR [ebp-0x8]
  40cc20:	mov    edi,DWORD PTR [ebp-0x10]
  40cc23:	mov    eax,DWORD PTR [eax]
  40cc25:	xor    edi,ecx
  40cc27:	add    edi,0x3272df
  40cc2d:	jmp    0x40efd7
  40cc32:	xchg   ebx,eax
  40cc33:	rol    BYTE PTR [ebx+ebx*8-0x5],0xdb
  40cc38:	jae    0x40cbba
  40cc3a:	fs lock inc edx
  40cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3e:	pop    ebx
  40cc3f:	je     0x40cc61
  40cc41:	pushf  
  40cc42:	(bad)  
  40cc44:	jp     0x40ccc0
  40cc46:	in     eax,0x5f
  40cc48:	jp     0x40ccc4
  40cc4a:	sbb    al,0xd2
  40cc4c:	mov    ah,dl
  40cc4e:	imul   BYTE PTR [esi]
  40cc50:	mov    cl,al
  40cc52:	in     al,0xdc
  40cc54:	mov    ebx,esp
  40cc56:	std    
  40cc57:	(bad)  [edx+0x4a59acf4]
  40cc5d:	retf   
  40cc5e:	shl    BYTE PTR [ebx-0x6f],cl
  40cc61:	pusha  
  40cc62:	sub    al,0x8a
  40cc64:	push   ds
  40cc65:	mov    esi,0x7f07dfd1
  40cc6a:	ins    BYTE PTR es:[edi],dx
  40cc6b:	dec    edi
  40cc6c:	push   edi
  40cc6d:	mov    ds:0x5ed96221,al
  40cc72:	jmp    0x1d42434d
  40cc77:	rcl    DWORD PTR [edi+ebp*4-0x57],cl
  40cc7b:	jecxz  0x40cc41
  40cc7d:	push   esp
  40cc7e:	mov    dh,0xe2
  40cc80:	lods   eax,DWORD PTR ds:[esi]
  40cc81:	ins    DWORD PTR es:[edi],dx
  40cc82:	add    eax,0xa6425c55
  40cc87:	push   ds
  40cc88:	scas   eax,DWORD PTR es:[edi]
  40cc89:	fadd   QWORD PTR [ebp+eax*1+0x2c5bd558]
  40cc90:	in     al,0x1c
  40cc92:	test   BYTE PTR [edx],al
  40cc94:	enter  0x58ad,0xb6
  40cc98:	and    edx,DWORD PTR [ebp-0x6cf69bb7]
  40cc9e:	(bad)  
  40cc9f:	out    0xfa,eax
  40cca1:	mov    edi,0x540b2a25
  40cca6:	inc    eax
  40cca7:	(bad)  
  40cca8:	fimul  WORD PTR [ebp+0x1e94d6af]
  40ccae:	mov    dh,0xd9
  40ccb0:	mov    esp,0x29babee6
  40ccb5:	aad    0x7d
  40ccb7:	pop    esi
  40ccb8:	adc    ecx,DWORD PTR [ebp+0x4c]
  40ccbb:	(bad)  [ebx+0x48]
  40ccbe:	ins    DWORD PTR es:[edi],dx
  40ccbf:	push   ebx
  40ccc0:	mov    al,ds:0xc7323227
  40ccc5:	shl    DWORD PTR [eax+0x5a71acaf],cl
  40cccb:	cmp    al,0x3
  40cccd:	mov    bl,0x6a
  40cccf:	xchg   al,al
  40ccd1:	loope  0x40cd40
  40ccd3:	xchg   ebp,eax
  40ccd4:	stc    
  40ccd5:	add    al,0xb1
  40ccd7:	ror    BYTE PTR [ecx+0x76],cl
  40ccda:	ja     0x40cd4b
  40ccdc:	and    DWORD PTR ds:0xd52d1061,esp
  40cce2:	call   0xad700611
  40cce7:	rol    DWORD PTR [ebp-0x5d],cl
  40ccea:	out    dx,al
  40cceb:	shl    DWORD PTR [eax-0x62b283e5],1
  40ccf1:	sub    eax,0xa68a4880
  40ccf6:	or     esp,eax
  40ccf8:	lods   ax,WORD PTR ds:[esi]
  40ccfa:	and    BYTE PTR [ecx+0x7d],ch
  40ccfd:	adc    edx,DWORD PTR [ebx+0x6d]
  40cd00:	fisubr DWORD PTR [ecx]
  40cd02:	mov    bh,0x46
  40cd04:	cld    
  40cd05:	aad    0x1e
  40cd07:	lea    edi,[edx+0x4cc0ed60]
  40cd0d:	arpl   WORD PTR [edx],cx
  40cd0f:	lds    esi,FWORD PTR [edi+0x4c62708c]
  40cd15:	fs inc esp
  40cd17:	jne    0x40cd4f
  40cd19:	fcom   QWORD PTR [edi+eax*1+0x77711459]
  40cd20:	or     BYTE PTR [edx-0x12113ba4],cl
  40cd26:	push   ss
  40cd27:	fdiv   QWORD PTR [esi-0x76]
  40cd2a:	fsubr  st,st(1)
  40cd2c:	push   0xdc8b1ee9
  40cd31:	xlat   BYTE PTR ds:[ebx]
  40cd32:	jb     0x40cd5d
  40cd34:	retf   
  40cd35:	ror    DWORD PTR ds:0x3d2886de,1
  40cd3b:	ficomp WORD PTR [esi+0x5a40d33a]
  40cd41:	jb     0x40cd02
  40cd43:	cmp    BYTE PTR [esi],dh
  40cd45:	fisttp WORD PTR [eax-0x11]
  40cd48:	iret   
  40cd49:	inc    ecx
  40cd4a:	test   DWORD PTR [edi-0x63],ebx
  40cd4d:	xor    al,0xe8
  40cd4f:	jge    0x40cd75
  40cd51:	dec    edx
  40cd52:	cmp    edx,ecx
  40cd54:	into   
  40cd55:	call   FWORD PTR [ebx]
  40cd57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd58:	push   ecx
  40cd59:	lock sbb DWORD PTR [esi-0x1f054938],edi
  40cd60:	mov    BYTE PTR [ebx-0x6e],ch
  40cd63:	inc    ebx
  40cd64:	mov    esp,0x4fbbe641
  40cd69:	adc    DWORD PTR [ebx-0x401e0863],0xa4929127
  40cd73:	push   ss
  40cd74:	dec    esp
  40cd75:	cs cs or esp,esp
  40cd79:	in     eax,0xeb
  40cd7b:	aam    0x6
  40cd7d:	push   eax
  40cd7e:	sbb    al,0xb
  40cd80:	mov    bl,0xb2
  40cd82:	sbb    dl,BYTE PTR [edx+0x72]
  40cd85:	mov    WORD PTR [ebx-0x1],gs
  40cd88:	add    DWORD PTR [edx],ebx
  40cd8a:	sbb    eax,DWORD PTR [edx+ebp*8-0x4c]
  40cd8e:	mov    BYTE PTR [eax],dl
  40cd90:	sub    BYTE PTR [ebx+0x60],ch
  40cd93:	xor    eax,0x5faa6299
  40cd98:	call   FWORD PTR ds:0x272b6f1e
  40cd9e:	mov    esp,0x33a16f62
  40cda3:	pop    edi
  40cda4:	cs pushw ds
  40cda7:	dec    edx
  40cda8:	add    al,0x3b
  40cdaa:	mov    BYTE PTR [esi-0x38b53e1b],cl
  40cdb0:	mov    dl,0xbd
  40cdb2:	mov    ebp,0x8017f89b
  40cdb7:	out    0x50,eax
  40cdb9:	in     al,dx
  40cdba:	sbb    al,BYTE PTR [ecx+0x1d5cca52]
  40cdc0:	dec    ebp
  40cdc1:	xchg   DWORD PTR [ecx-0x70f50794],ecx
  40cdc7:	xor    al,0x90
  40cdc9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcb:	push   0x22
  40cdcd:	mov    dh,0x74
  40cdcf:	mov    dl,0xb
  40cdd1:	mov    ch,0xa1
  40cdd3:	test   eax,0xf7eb6494
  40cdd8:	dec    ebx
  40cdd9:	mov    BYTE PTR [edi],ah
  40cddb:	cmp    bh,al
  40cddd:	out    dx,al
  40cdde:	or     BYTE PTR [eax+0x3f],ch
  40cde1:	aad    0x91
  40cde3:	(bad)  
  40cde4:	fstp   DWORD PTR [edi-0x52]
  40cde7:	gs cli 
  40cde9:	jae    0x40cd83
  40cdeb:	lock sub BYTE PTR ds:0x1ed8d295,0x7d
  40cdf3:	xlat   BYTE PTR ds:[ebx]
  40cdf4:	gs pop ebp
  40cdf6:	(bad)  [ebp+edx*8+0x58]
  40cdfa:	cmp    eax,0x1416c8aa
  40cdff:	and    ebp,ebx
  40ce01:	xor    dl,BYTE PTR [ebp+0x3]
  40ce04:	pop    eax
  40ce05:	loope  0x40cda6
  40ce07:	mov    eax,0x8b081476
  40ce0c:	mov    eax,ds:0x67220919
  40ce11:	sbb    bh,BYTE PTR [eax+0x2cf68f01]
  40ce17:	ret    0x422f
  40ce1a:	je     0x40ce89
  40ce1c:	out    0xd5,al
  40ce1e:	ret    
  40ce1f:	dec    eax
  40ce20:	loop   0x40ce29
  40ce22:	and    eax,0x4bcd7470
  40ce27:	nop
  40ce28:	fadd   DWORD PTR [edi+0x8779a08]
  40ce2e:	sub    BYTE PTR [ecx],0x2a
  40ce31:	jns    0x40ce0f
  40ce33:	call   0x2d8c951b
  40ce38:	push   ebp
  40ce39:	ja     0x40ce46
  40ce3b:	xchg   ebp,eax
  40ce3c:	mov    DWORD PTR [eax+0x50],eax
  40ce3f:	push   edi
  40ce40:	dec    ebx
  40ce41:	cs mov cl,0x84
  40ce44:	jmp    DWORD PTR [ecx]
  40ce46:	sub    al,0x40
  40ce48:	xchg   ebx,eax
  40ce49:	fisubr WORD PTR [ebp+0x50296c19]
  40ce4f:	push   ebp
  40ce50:	in     eax,0xfc
  40ce52:	pop    esp
  40ce53:	xchg   ebx,eax
  40ce54:	adc    DWORD PTR [edi-0x1a],0xffffff81
  40ce58:	push   edx
  40ce59:	test   BYTE PTR [ebx],cl
  40ce5b:	jl     0x40cece
  40ce5d:	js     0x40ce9c
  40ce5f:	or     DWORD PTR [ecx],ebp
  40ce61:	dec    eax
  40ce62:	sti    
  40ce63:	out    dx,al
  40ce64:	test   DWORD PTR [esi-0x6b],0x6cff2fde
  40ce6b:	adc    al,0xde
  40ce6d:	call   0x6b07db09
  40ce72:	mov    ch,0x1f
  40ce74:	pop    eax
  40ce75:	push   esp
  40ce76:	iret   
  40ce77:	ins    DWORD PTR es:[edi],dx
  40ce78:	outs   dx,BYTE PTR ds:[esi]
  40ce79:	inc    ecx
  40ce7a:	or     eax,0xab883e4f
  40ce7f:	sub    BYTE PTR [eax-0x1c],ch
  40ce82:	xchg   esp,eax
  40ce83:	aas    
  40ce84:	inc    eax
  40ce85:	fmulp  st(2),st
  40ce87:	dec    ecx
  40ce88:	jnp    0x40ce55
  40ce8a:	sbb    eax,0xbbb9b4
  40ce8f:	inc    edx
  40ce90:	push   es
  40ce91:	loope  0x40ce6d
  40ce93:	add    al,0x41
  40ce95:	es scas al,BYTE PTR es:[edi]
  40ce97:	add    ecx,DWORD PTR [edi+edi*1]
  40ce9a:	inc    edi
  40ce9b:	stos   DWORD PTR es:[edi],eax
  40ce9c:	ins    BYTE PTR es:[edi],dx
  40ce9d:	leave  
  40ce9e:	push   DWORD PTR fs:[edx-0x6c51cb49]
  40cea5:	ja     0x40ced9
  40cea7:	cli    
  40cea8:	sub    BYTE PTR [ecx+0x55],al
  40ceab:	or     edi,DWORD PTR [esi-0xf3c3b73]
  40ceb1:	adc    DWORD PTR [ebx-0x7f0a96bc],edi
  40ceb7:	fcomi  st,st(2)
  40ceb9:	sub    DWORD PTR [edx],ecx
  40cebb:	push   edx
  40cebc:	fs retf 0xfcdc
  40cec0:	fwait
  40cec1:	push   cs
  40cec2:	es in  al,0x27
  40cec5:	jle    0x40ce7a
  40cec7:	scas   eax,DWORD PTR es:[edi]
  40cec8:	fucomp st(3)
  40ceca:	dec    esi
  40cecb:	adc    DWORD PTR [esi],esi
  40cecd:	loop   0x40cf49
  40cecf:	jno    0x40cf21
  40ced1:	inc    ecx
  40ced2:	out    0x20,eax
  40ced4:	cmp    al,0x2a
  40ced6:	mov    ecx,0xcc88d4b4
  40cedb:	daa    
  40cedc:	leave  
  40cedd:	ins    DWORD PTR es:[edi],dx
  40cede:	cli    
  40cedf:	not    BYTE PTR [esi+0x6a9a969]
  40cee5:	or     ebx,DWORD PTR [esi+ebp*4-0x59dd1ff]
  40ceec:	fdiv   DWORD PTR [edx+0x7a]
  40ceef:	inc    ebx
  40cef0:	xor    BYTE PTR [eax-0x37],0xa4
  40cef4:	inc    eax
  40cef5:	(bad)  
  40cef6:	push   ss
  40cef7:	inc    esp
  40cef8:	sti    
  40cef9:	push   ds
  40cefa:	out    0xe6,eax
  40cefc:	retf   0x85c
  40ceff:	sbb    eax,0xdb2994db
  40cf04:	imul   DWORD PTR [ebp+0x204500a8]
  40cf0a:	sub    eax,edi
  40cf0c:	js     0x40cf7f
  40cf0e:	clc    
  40cf0f:	cmp    esp,DWORD PTR [esi]
  40cf11:	repz mov ecx,0xf52f89af
  40cf17:	cmp    ah,BYTE PTR [eax]
  40cf19:	aam    0x80
  40cf1b:	aas    
  40cf1c:	ret    
  40cf1d:	lea    edi,ds:0x3a70b05e
  40cf23:	aaa    
  40cf24:	jbe    0x40ced8
  40cf26:	add    al,0xd1
  40cf28:	add    edx,DWORD PTR ds:0x42e5ead4
  40cf2e:	ficom  DWORD PTR ds:0xf595d027
  40cf34:	xchg   edx,eax
  40cf35:	pop    edi
  40cf36:	mov    eax,0xee38d0ee
  40cf3b:	jnp    0x40cee5
  40cf3d:	sti    
  40cf3e:	pop    edx
  40cf3f:	push   edi
  40cf40:	ds mov al,0x7e
  40cf43:	dec    ecx
  40cf44:	inc    ebx
  40cf45:	inc    esp
  40cf46:	out    0x15,eax
  40cf48:	or     edi,DWORD PTR [ebx-0x16]
  40cf4b:	out    dx,eax
  40cf4c:	dec    ebp
  40cf4d:	(bad)  
  40cf4f:	out    0x52,eax
  40cf51:	jmp    0x49042ad
  40cf56:	jge    0x40cf85
  40cf58:	ins    DWORD PTR es:[edi],dx
  40cf59:	outs   dx,DWORD PTR ds:[esi]
  40cf5a:	sti    
  40cf5b:	mov    esp,0x16961703
  40cf60:	sbb    esi,DWORD PTR [esi+ecx*4-0x14]
  40cf64:	not    BYTE PTR [edi]
  40cf66:	adc    bl,BYTE PTR [eax-0x3d]
  40cf69:	test   BYTE PTR cs:[esp+eiz*2-0x4a],dl
  40cf6e:	pop    ebp
  40cf6f:	std    
  40cf70:	pop    esi
  40cf71:	sbb    bl,BYTE PTR [edi]
  40cf73:	retf   
  40cf74:	sbb    bh,BYTE PTR [edi]
  40cf76:	stos   BYTE PTR es:[edi],al
  40cf77:	ja     0x40cf3d
  40cf79:	cmp    ebx,DWORD PTR [ebx+0x0]
  40cf7c:	inc    ecx
  40cf7d:	out    0x87,eax
  40cf7f:	aam    0x3
  40cf81:	xchg   ebp,eax
  40cf82:	or     ecx,ecx
  40cf84:	or     BYTE PTR [esi],ah
  40cf86:	outs   dx,BYTE PTR ds:[esi]
  40cf87:	inc    ebx
  40cf88:	jo     0x40d009
  40cf8a:	cmc    
  40cf8b:	pop    ss
  40cf8c:	lea    ecx,[edi+0x421261eb]
  40cf92:	xor    BYTE PTR [ebx-0x294bcb],bl
  40cf98:	fcomip st,st(6)
  40cf9a:	or     eax,0xbed93d83
  40cf9f:	push   es
  40cfa0:	xchg   edi,eax
  40cfa1:	repnz dec esi
  40cfa3:	in     eax,0xda
  40cfa5:	sub    ebx,DWORD PTR [edx+edi*2-0x635964b]
  40cfac:	gs xchg edx,eax
  40cfae:	sub    eax,0x64bc4223
  40cfb3:	in     al,dx
  40cfb4:	push   ecx
  40cfb5:	push   ecx
  40cfb6:	ror    DWORD PTR [edi],1
  40cfb8:	push   ebp
  40cfb9:	div    esi
  40cfbb:	inc    ebp
  40cfbc:	ss (bad) 
  40cfbe:	mov    dh,0xc
  40cfc0:	mov    edx,0x63f0993d
  40cfc5:	rcr    esp,cl
  40cfc7:	aad    0x8c
  40cfc9:	add    BYTE PTR [eax+0x4b86052d],dh
  40cfcf:	lods   eax,DWORD PTR ds:[esi]
  40cfd0:	mov    edx,0x5dff6e74
  40cfd5:	cmp    BYTE PTR [esi+0x1c],bh
  40cfd8:	leave  
  40cfd9:	cdq    
  40cfda:	jno    0x40cf84
  40cfdc:	adc    BYTE PTR [eax+0x3b],0xcf
  40cfe0:	mov    ecx,0xfc7d7587
  40cfe5:	inc    ecx
  40cfe6:	xor    BYTE PTR [edx+0x37],bl
  40cfe9:	scas   al,BYTE PTR es:[edi]
  40cfea:	cs ins BYTE PTR es:[edi],dx
  40cfec:	pop    ds
  40cfed:	in     al,0xa1
  40cfef:	ins    DWORD PTR es:[edi],dx
  40cff0:	mov    dh,0x5c
  40cff2:	cmp    eax,0xdd6f75b3
  40cff7:	adc    cl,cl
  40cff9:	push   0xbf1a98a9
  40cffe:	dec    edi
  40cfff:	stos   BYTE PTR es:[edi],al
  40d000:	sbb    BYTE PTR [ecx+0x6ee28ca5],bh
  40d006:	(bad)  
  40d007:	push   ds
  40d008:	sub    ecx,DWORD PTR [edi-0x42046cd0]
  40d00e:	ror    esi,1
  40d010:	or     edx,ebp
  40d012:	xchg   esi,eax
  40d013:	jmp    0x40cfe8
  40d015:	pop    ecx
  40d016:	and    DWORD PTR [eax-0x6a0ff4ac],esi
  40d01c:	lock add ah,dl
  40d01f:	cwde   
  40d020:	and    eax,0x9b74d62f
  40d025:	dec    esp
  40d026:	inc    edi
  40d027:	sub    cl,ch
  40d029:	xchg   BYTE PTR [esi+0x68],ah
  40d02c:	and    esp,DWORD PTR [edx]
  40d02e:	sbb    eax,0x5858fbd8
  40d033:	sbb    eax,0xcafe3bfd
  40d038:	popa   
  40d039:	push   edx
  40d03a:	dec    edx
  40d03b:	outs   dx,DWORD PTR ds:[esi]
  40d03c:	inc    ebx
  40d03d:	cwde   
  40d03e:	pop    eax
  40d03f:	dec    ecx
  40d040:	adc    eax,0xd12b7898
  40d045:	leave  
  40d046:	(bad)  
  40d047:	sbb    eax,0xbc32ace
  40d04c:	ins    BYTE PTR es:[edi],dx
  40d04d:	pop    ecx
  40d04e:	fbld   TBYTE PTR [ebp-0x36665734]
  40d054:	fmul   st(4),st
  40d056:	shl    BYTE PTR [ecx],1
  40d058:	and    al,0x6c
  40d05a:	jmp    0xeb9d:0xe9b14f9f
  40d061:	fs and al,0xc8
  40d064:	sbb    DWORD PTR [eax+0x44],eax
  40d067:	popa   
  40d068:	dec    edi
  40d069:	daa    
  40d06a:	clc    
  40d06b:	mov    esi,DWORD PTR [ecx-0x7fa6e55f]
  40d071:	push   0xffffff83
  40d073:	je     0x40d090
  40d075:	xor    BYTE PTR ds:[esi],bl
  40d078:	fstp   TBYTE PTR [ebp+0x50]
  40d07b:	push   ss
  40d07c:	jmp    0x7ac8:0xa21feb79
  40d083:	(bad)  
  40d084:	jne    0x40d02a
  40d086:	mov    dl,0xa3
  40d088:	xchg   ebx,eax
  40d089:	rcr    DWORD PTR [esi-0x60],cl
  40d08c:	dec    ebp
  40d08d:	jp     0x40d089
  40d08f:	lods   eax,DWORD PTR ds:[esi]
  40d090:	mov    esi,0x2d2d1e1f
  40d095:	push   ss
  40d096:	cmp    edi,DWORD PTR [ebp+0x75]
  40d099:	mov    edi,0xda4ed174
  40d09e:	je     0x40d02b
  40d0a0:	icebp  
  40d0a1:	sbb    esi,DWORD PTR [esi-0x3cd4732f]
  40d0a7:	sar    DWORD PTR [esi-0x23419fa7],0xc1
  40d0ae:	loope  0x40d096
  40d0b0:	cmp    dl,BYTE PTR [ebp+0x60]
  40d0b3:	(bad)  
  40d0b4:	push   ds
  40d0b5:	rcl    ebp,cl
  40d0b7:	inc    edx
  40d0b8:	mov    eax,esi
  40d0ba:	aam    0xe0
  40d0bc:	cli    
  40d0bd:	fwait
  40d0be:	shr    BYTE PTR [eax-0xa],cl
  40d0c1:	sbb    al,BYTE PTR [ecx+0x9]
  40d0c4:	inc    esp
  40d0c5:	je     0x40d07b
  40d0c7:	xchg   edi,eax
  40d0c8:	in     al,dx
  40d0c9:	or     esi,DWORD PTR [eax-0x7263c63f]
  40d0cf:	loopne 0x40d067
  40d0d1:	fidiv  DWORD PTR [ecx+0x70]
  40d0d4:	es shr ch,0x22
  40d0d8:	int    0x3a
  40d0da:	in     eax,dx
  40d0db:	jl     0x40d13a
  40d0dd:	lahf   
  40d0de:	add    ch,BYTE PTR [esi+0x53]
  40d0e1:	push   ss
  40d0e2:	dec    esp
  40d0e3:	sbb    edx,DWORD PTR [ebx+0x5e]
  40d0e6:	out    0x3,eax
  40d0e8:	and    ebp,DWORD PTR [ebp+0x24280b3]
  40d0ee:	ins    BYTE PTR es:[edi],dx
  40d0ef:	out    0x51,al
  40d0f1:	add    eax,0x1a1cc2c0
  40d0f6:	mov    ch,0xd7
  40d0f8:	push   ebp
  40d0f9:	mov    ebx,gs
  40d0fb:	adc    al,BYTE PTR [edi-0x3c53abcd]
  40d101:	add    eax,eax
  40d103:	push   0xb769ad1e
  40d108:	or     ebp,ebx
  40d10a:	jmp    0x9dfb9e14
  40d10f:	pop    eax
  40d110:	jb     0x40d0ec
  40d112:	mov    bl,0x26
  40d114:	push   ebx
  40d115:	in     eax,0x88
  40d117:	inc    ebp
  40d118:	cld    
  40d119:	ja     0x40d19a
  40d11b:	jmp    0x40d09f
  40d11d:	jno    0x40d0dc
  40d11f:	xlat   BYTE PTR ds:[ebx]
  40d120:	jae    0x40d16b
  40d122:	(bad)  
  40d123:	ss jne 0x40d173
  40d126:	xor    al,0x11
  40d128:	xchg   BYTE PTR [ebp-0x65fb369],bh
  40d12e:	js     0x40d116
  40d130:	inc    eax
  40d131:	mov    esi,0xc86a5765
  40d136:	add    DWORD PTR [ebx],ebx
  40d138:	je     0x40d0f8
  40d13a:	sub    bl,BYTE PTR [ecx+0x4a]
  40d13d:	aam    0x43
  40d13f:	dec    ebx
  40d140:	adc    ecx,eax
  40d142:	call   0xf248:0x4ee8d43b
  40d149:	pop    esp
  40d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d14b:	or     eax,0xc4e0f9a1
  40d150:	lds    edx,FWORD PTR [ebx]
  40d152:	(bad)  
  40d154:	mov    edx,0x29543a5e
  40d159:	or     bh,ah
  40d15b:	mov    ch,0xc6
  40d15d:	mov    ah,0x60
  40d15f:	popf   
  40d160:	mov    edi,0x413b5b25
  40d165:	int3   
  40d166:	js     0x40d1e5
  40d168:	jle    0x40d166
  40d16a:	mov    dl,0x94
  40d16c:	sub    bl,BYTE PTR [ebx+0xc514482]
  40d172:	(bad)  
  40d173:	retf   0xfc17
  40d176:	lea    ebp,[edi]
  40d178:	lock mov dl,0x4e
  40d17b:	mov    bh,0x3a
  40d17d:	fstp   st(3)
  40d17f:	adc    edx,ecx
  40d181:	out    dx,al
  40d182:	ds fcmovne st,st(4)
  40d185:	mov    ?,WORD PTR ds:0xf30d11de
  40d18b:	daa    
  40d18c:	test   BYTE PTR ss:0x62db19df,0xae
  40d194:	loope  0x40d1fd
  40d196:	inc    ecx
  40d197:	and    eax,0xafd10957
  40d19c:	dec    edx
  40d19d:	outs   dx,DWORD PTR ds:[esi]
  40d19e:	add    ch,dh
  40d1a0:	pop    ss
  40d1a1:	jb     0x40d20a
  40d1a3:	sbb    al,BYTE PTR [ebx]
  40d1a5:	cmc    
  40d1a6:	outs   dx,DWORD PTR ds:[esi]
  40d1a7:	xchg   ecx,eax
  40d1a8:	jmp    0x8a96:0x7aa1c571
  40d1af:	daa    
  40d1b0:	dec    eax
  40d1b1:	or     DWORD PTR [ebx],0x66b9da76
  40d1b7:	nop    DWORD PTR [ecx-0x16]
  40d1bb:	adc    al,ch
  40d1bd:	ds jns 0x40d1ce
  40d1c0:	mov    edx,0xbe3c2bc5
  40d1c5:	xchg   ecx,eax
  40d1c6:	xor    BYTE PTR [esi+0x1def757e],ch
  40d1cc:	sti    
  40d1cd:	shl    BYTE PTR [eax+ebp*8+0x23f80634],1
  40d1d4:	fistp  QWORD PTR [eax-0x28e45a30]
  40d1da:	jae    0x40d192
  40d1dc:	popa   
  40d1dd:	into   
  40d1de:	xor    eax,0x85af9095
  40d1e3:	or     ebp,DWORD PTR [esi-0x35]
  40d1e6:	xchg   esi,eax
  40d1e7:	xor    esp,DWORD PTR ds:0xbc2c6be1
  40d1ed:	add    eax,0xdb81d0ed
  40d1f2:	sahf   
  40d1f3:	mov    eax,0x5d13bba6
  40d1f8:	iret   
  40d1f9:	pop    ebp
  40d1fa:	lock push ds
  40d1fc:	pushf  
  40d1fd:	inc    ebx
  40d1fe:	and    DWORD PTR [ebx+0x11bcf0df],0xc
  40d205:	add    eax,0x4b0f267c
  40d20a:	ror    BYTE PTR [eax+edi*1-0x54ab1f42],cl
  40d211:	pushf  
  40d212:	shl    DWORD PTR [edx-0x2d],0x67
  40d216:	sbb    cl,BYTE PTR [eax-0x35]
  40d219:	jbe    0x40d23a
  40d21b:	scas   al,BYTE PTR es:[edi]
  40d21c:	pop    ecx
  40d21d:	adc    dl,dl
  40d21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d220:	xor    DWORD PTR [edx+0x2dd7f9bf],eax
  40d226:	repnz aaa 
  40d228:	test   BYTE PTR [edi+0x236949b],cl
  40d22e:	push   0x7
  40d230:	and    eax,0xfb86bd9
  40d235:	fbstp  TBYTE PTR [eax]
  40d237:	sub    ebp,DWORD PTR [edi+0x285a3943]
  40d23d:	or     edi,DWORD PTR ds:0x2e0a0fad
  40d243:	mov    ds:0x5ba3e3e2,al
  40d248:	fwait
  40d249:	mov    eax,ds:0xd912dddf
  40d24e:	cld    
  40d24f:	les    ecx,FWORD PTR [ebx-0x71]
  40d252:	xor    al,0x60
  40d254:	or     eax,0x566268f
  40d259:	in     al,dx
  40d25a:	cmp    DWORD PTR [ecx],edi
  40d25c:	sbb    bh,bl
  40d25e:	(bad)  
  40d25f:	mov    bl,0x44
  40d261:	sub    DWORD PTR [edx],eax
  40d263:	int    0x9
  40d265:	and    BYTE PTR cs:[eax-0x2],ch
  40d269:	dec    esi
  40d26a:	push   ebx
  40d26b:	sbb    al,0x4a
  40d26d:	ins    DWORD PTR es:[edi],dx
  40d26e:	mov    bl,0x84
  40d270:	cwde   
  40d271:	daa    
  40d272:	lods   al,BYTE PTR ds:[esi]
  40d273:	clc    
  40d274:	xchg   ebx,eax
  40d275:	inc    edi
  40d276:	add    dh,ah
  40d278:	mov    ecx,0xdf628494
  40d27d:	aad    0xac
  40d27f:	fadd   QWORD PTR cs:[edi+0x46ede095]
  40d286:	and    esp,eax
  40d288:	stc    
  40d289:	push   0x7aec479b
  40d28e:	mov    ecx,0x6781443f
  40d293:	arpl   WORD PTR [eax-0x76937922],ax
  40d299:	jnp    0x40d251
  40d29b:	mov    ds:0x8e4af785,al
  40d2a0:	jmp    0xcbd0c546
  40d2a5:	sbb    DWORD PTR es:[ebx-0x4844931a],eax
  40d2ac:	jo     0x40d285
  40d2ae:	sahf   
  40d2af:	mov    ds:0x7c05577f,eax
  40d2b4:	jae    0x40d310
  40d2b6:	aad    0x86
  40d2b8:	sub    DWORD PTR [edx],edx
  40d2ba:	adc    bh,BYTE PTR [edi]
  40d2bc:	scas   al,BYTE PTR es:[edi]
  40d2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2be:	imul   esi,DWORD PTR [ecx],0x62453053
  40d2c4:	(bad)  [ebp+0x2b56d1e]
  40d2ca:	(bad)  
  40d2cb:	hlt    
  40d2cc:	imul   ecx,eax,0xffffffcc
  40d2cf:	aaa    
  40d2d0:	(bad)  
  40d2d1:	lock in al,0x9a
  40d2d4:	add    DWORD PTR [esp+esi*2+0x72f5a72e],0xc04d2ff8
  40d2df:	icebp  
  40d2e0:	cwde   
  40d2e1:	jbe    0x40d30b
  40d2e3:	jp     0x40d310
  40d2e5:	dec    ecx
  40d2e6:	mov    ch,0xe3
  40d2e8:	lea    ebp,[ebx]
  40d2ea:	fcomi  st,st(3)
  40d2ec:	mov    BYTE PTR [ebp+eax*4-0x6a3acbb9],0x4b
  40d2f4:	ror    cl,1
  40d2f6:	push   edx
  40d2f7:	or     BYTE PTR [eax+0x7832c302],ch
  40d2fd:	loop   0x40d299
  40d2ff:	or     DWORD PTR [ecx-0x3d],0xffffff82
  40d303:	fucomp st(1)
  40d305:	arpl   WORD PTR [ecx+0x3437f593],sp
  40d30b:	into   
  40d30c:	ds inc edi
  40d30e:	push   ebp
  40d30f:	pop    ds
  40d310:	mov    eax,ds:0x1775e1fa
  40d315:	mov    ebp,0xbe4732a7
  40d31a:	or     al,0x3c
  40d31c:	mov    cl,0x1a
  40d31e:	fild   WORD PTR [ecx+ecx*1+0x3f]
  40d322:	inc    edi
  40d323:	scas   al,BYTE PTR es:[edi]
  40d324:	xchg   DWORD PTR es:[ebx+eiz*2+0x20f3756c],ebx
  40d32c:	xlat   BYTE PTR ds:[ebx]
  40d32d:	repz cmp edx,eax
  40d330:	inc    ebx
  40d331:	jnp    0x40d358
  40d333:	lods   al,BYTE PTR cs:[esi]
  40d335:	retf   0x17b4
  40d338:	jmp    0x183da09a
  40d33d:	jge    0x40d38a
  40d33f:	arpl   bx,sp
  40d341:	jmp    0x54421162
  40d346:	fistp  DWORD PTR [ecx+0x511a32e6]
  40d34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d34d:	xor    al,0xd9
  40d34f:	push   ecx
  40d350:	push   ss
  40d351:	add    al,0xa0
  40d353:	xor    esp,edi
  40d355:	dec    edx
  40d356:	pusha  
  40d357:	(bad)  
  40d358:	mov    esi,0xa16f3934
  40d35d:	stc    
  40d35e:	rcl    edi,cl
  40d360:	popf   
  40d361:	push   ds
  40d362:	in     al,0x92
  40d364:	mov    edx,0x9b342d13
  40d369:	or     eax,0x7d86fa30
  40d36e:	clc    
  40d36f:	stos   BYTE PTR es:[edi],al
  40d370:	nop
  40d371:	xchg   esp,eax
  40d372:	lahf   
  40d373:	scas   al,BYTE PTR es:[edi]
  40d374:	dec    edi
  40d375:	xor    ebx,DWORD PTR [eax-0x469ff36e]
  40d37b:	rcr    BYTE PTR [edi+0x62541911],1
  40d381:	inc    edi
  40d382:	test   BYTE PTR [eax-0x7e],al
  40d385:	jne    0x40d363
  40d387:	jg     0x40d3a8
  40d389:	add    esp,DWORD PTR [esi+0x36]
  40d38c:	or     bh,dh
  40d38e:	popa   
  40d38f:	inc    ebx
  40d390:	cmp    ebp,esi
  40d392:	add    DWORD PTR [esi+0x14],edi
  40d395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d396:	rol    BYTE PTR [edx],cl
  40d398:	out    dx,eax
  40d399:	jno    0x40d3f7
  40d39b:	retf   0x4c89
  40d39e:	enter  0xa669,0xaa
  40d3a2:	call   0xa4f0d962
  40d3a7:	outs   dx,BYTE PTR ds:[esi]
  40d3a8:	jg     0x40d356
  40d3aa:	xor    BYTE PTR [ecx+0x36],bh
  40d3ad:	xchg   esi,eax
  40d3ae:	fs pop ecx
  40d3b0:	icebp  
  40d3b1:	pop    ss
  40d3b2:	add    bh,BYTE PTR [ecx+ecx*4+0x1e]
  40d3b6:	push   ebx
  40d3b7:	(bad)  
  40d3b8:	call   0xb942:0x91099742
  40d3bf:	mov    ah,0x57
  40d3c1:	sahf   
  40d3c2:	cmp    eax,0x238d1ddc
  40d3c7:	stos   BYTE PTR es:[edi],al
  40d3c8:	loope  0x40d430
  40d3ca:	or     al,0x87
  40d3cc:	xlat   BYTE PTR ds:[ebx]
  40d3cd:	xchg   ebx,eax
  40d3ce:	cmp    eax,0x1f
  40d3d1:	pop    ebx
  40d3d2:	pop    esp
  40d3d3:	stos   DWORD PTR es:[edi],eax
  40d3d4:	cmp    DWORD PTR ds:0xe0ea8fa3,esi
  40d3da:	mov    ah,0x83
  40d3dc:	mov    ds:0xe8c3ba01,eax
  40d3e1:	push   ebp
  40d3e2:	pop    esp
  40d3e3:	mov    esp,0x249b72cf
  40d3e8:	and    BYTE PTR [eax+ecx*8-0x6e9f2834],ah
  40d3ef:	cmp    eax,0xa3c265a0
  40d3f4:	adc    BYTE PTR [ebx-0x7771d03f],dh
  40d3fa:	or     al,0x75
  40d3fc:	repnz mov BYTE PTR [esi+0x45efb5e2],dh
  40d403:	cmp    bl,bh
  40d405:	ds mov esi,0xdd429429
  40d40b:	mov    eax,0x72866a69
  40d410:	xchg   edi,eax
  40d411:	sbb    al,0x20
  40d413:	outs   dx,BYTE PTR ds:[esi]
  40d414:	jg     0x40d422
  40d416:	stc    
  40d417:	shl    BYTE PTR ds:0x13949eca,1
  40d41d:	or     edi,esp
  40d41f:	inc    edi
  40d420:	iret   
  40d421:	pusha  
  40d422:	dec    ebx
  40d423:	xor    DWORD PTR [eax-0x3ba74524],edi
  40d429:	rcl    DWORD PTR [edi+ebp*4],cl
  40d42c:	in     al,0xda
  40d42e:	inc    esi
  40d42f:	or     ebx,DWORD PTR [edx-0x32]
  40d432:	les    edi,FWORD PTR [eax-0x80a350b]
  40d438:	retf   
  40d439:	pop    edx
  40d43a:	loop   0x40d47e
  40d43c:	in     eax,dx
  40d43d:	mov    ds:0x1baefab0,eax
  40d442:	outs   dx,BYTE PTR ds:[esi]
  40d443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d444:	nop
  40d445:	(bad)  
  40d446:	cmp    DWORD PTR [edx],eax
  40d448:	push   esp
  40d449:	add    ch,dl
  40d44b:	imul   ebp,DWORD PTR [edi+0x6a667379],0x6121b884
  40d455:	or     al,0x9
  40d457:	or     eax,0x74793ee5
  40d45c:	push   0xb8f84d1e
  40d461:	(bad)  
  40d462:	idiv   al
  40d464:	mov    ch,0xad
  40d466:	fs pop esp
  40d468:	rol    DWORD PTR [ebx+0x22],cl
  40d46b:	mov    esp,0xa27d5063
  40d470:	mov    DWORD PTR [esi+0x6992daa0],ebx
  40d476:	inc    eax
  40d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d478:	cmc    
  40d479:	xor    eax,0x26a25926
  40d47e:	pop    edx
  40d47f:	mov    al,0x2d
  40d481:	adc    cl,BYTE PTR [ebx-0x20]
  40d484:	xchg   ebp,eax
  40d485:	dec    edi
  40d486:	mov    DWORD PTR [edx-0x1c],edi
  40d489:	mov    eax,ds:0xd06749e0
  40d48e:	dec    esi
  40d48f:	cmp    cl,al
  40d491:	jmp    0xb2afdbac
  40d496:	xor    edx,DWORD PTR [edi]
  40d498:	dec    esp
  40d499:	jns    0x40d471
  40d49b:	jmp    0x40d505
  40d49d:	pushf  
  40d49e:	js     0x40d456
  40d4a0:	std    
  40d4a1:	dec    edx
  40d4a2:	dec    esi
  40d4a3:	scas   al,BYTE PTR es:[edi]
  40d4a4:	jp     0x40d4b7
  40d4a6:	xchg   esp,eax
  40d4a7:	cmp    DWORD PTR [ecx-0x62],edx
  40d4aa:	lds    eax,FWORD PTR [ebx]
  40d4ac:	leave  
  40d4ad:	sbb    bl,0x6
  40d4b0:	or     bl,cl
  40d4b2:	jo     0x40d48b
  40d4b4:	xchg   edx,eax
  40d4b5:	push   esi
  40d4b6:	and    eax,edi
  40d4b8:	mov    eax,0x1563f035
  40d4bd:	stos   DWORD PTR es:[edi],eax
  40d4be:	bound  ebx,QWORD PTR [edi]
  40d4c0:	sti    
  40d4c1:	movsx  edx,BYTE PTR [bx+di]
  40d4c5:	jge    0x40d46f
  40d4c7:	push   ebp
  40d4c8:	out    0x97,eax
  40d4ca:	lods   eax,DWORD PTR ds:[esi]
  40d4cb:	repnz faddp st(1),st
  40d4ce:	mov    cl,0xba
  40d4d0:	mov    eax,ds:0x86c9a8cd
  40d4d5:	xchg   edi,eax
  40d4d6:	call   FWORD PTR [ecx-0x393e101b]
  40d4dc:	mov    edx,0x96106b0a
  40d4e1:	jmp    0x26f1:0x39db7ad
  40d4e8:	addr16 xchg cl,al
  40d4eb:	ror    edx,cl
  40d4ed:	add    DWORD PTR [esi-0x75f617fe],esp
  40d4f3:	mov    BYTE PTR fs:[ecx+eax*2+0x13fa64e3],ah
  40d4fb:	inc    ebx
  40d4fc:	lock and edx,DWORD PTR [bx+di-0x39]
  40d501:	je     0x40d552
  40d503:	scas   al,BYTE PTR es:[edi]
  40d504:	cmp    ebx,DWORD PTR [ecx+0x6418777]
  40d50a:	mov    dh,BYTE PTR [esi+0x54de1e78]
  40d510:	aaa    
  40d511:	stos   DWORD PTR es:[edi],eax
  40d512:	xor    DWORD PTR ds:0x35b5baf,edi
  40d518:	outs   dx,BYTE PTR ds:[esi]
  40d519:	(bad)  
  40d51a:	retf   
  40d51b:	mov    ecx,0xbb676f56
  40d520:	and    DWORD PTR es:[edx-0x1b280806],ebx
  40d527:	jmp    0x40d521
  40d529:	imul   ebx,DWORD PTR [eax]
  40d52c:	add    al,0x50
  40d52e:	sbb    ebp,ebp
  40d530:	dec    eax
  40d531:	and    al,BYTE PTR ds:0x131fd3aa
  40d537:	popa   
  40d538:	pop    ecx
  40d539:	jno    0x40d521
  40d53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53c:	or     ch,BYTE PTR [ebp-0x67]
  40d53f:	js     0x40d513
  40d541:	adc    BYTE PTR ds:0xe9ccc372,bh
  40d547:	cmp    al,0xe0
  40d549:	sub    ebx,DWORD PTR [esp+ecx*1-0x64]
  40d54d:	adc    DWORD PTR [ebx],eax
  40d54f:	leave  
  40d550:	add    DWORD PTR [esi+0x65],eax
  40d553:	xchg   esp,edx
  40d555:	fst    QWORD PTR [ebx-0x7c]
  40d558:	lock shl DWORD PTR [eax+edx*8+0x46],0xdf
  40d55e:	cmc    
  40d55f:	add    BYTE PTR [ebx+0x66],bh
  40d562:	pop    ds
  40d563:	retf   
  40d564:	popa   
  40d565:	push   esi
  40d566:	lahf   
  40d567:	imul   esp,esi,0xffffff88
  40d56a:	rcl    DWORD PTR [ecx],1
  40d56c:	cmp    cl,al
  40d56e:	sub    DWORD PTR [eax+0x6c],edx
  40d571:	push   ebx
  40d572:	add    BYTE PTR [ebp-0x6e4c196e],0xeb
  40d579:	int    0xa5
  40d57b:	shl    BYTE PTR [ecx],cl
  40d57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d57e:	ja     0x40d55e
  40d580:	jle    0x40d571
  40d582:	aam    0x61
  40d584:	sub    DWORD PTR ss:[eax],0x827657e1
  40d58b:	aad    0xd9
  40d58d:	in     eax,dx
  40d58e:	sti    
  40d58f:	int3   
  40d590:	and    bh,BYTE PTR [ecx]
  40d592:	cmp    eax,0x43c648c1
  40d597:	adc    al,0xbe
  40d599:	sbb    DWORD PTR [edx-0x56],ebx
  40d59c:	mov    ds:0x39a46722,al
  40d5a1:	scas   eax,DWORD PTR es:[edi]
  40d5a2:	cmp    bl,BYTE PTR [ebp-0x51f4e349]
  40d5a8:	retf   
  40d5a9:	or     DWORD PTR [edx],esp
  40d5ab:	adc    ebp,DWORD PTR [esp+ecx*1-0x48]
  40d5af:	inc    eax
  40d5b0:	out    0x9b,eax
  40d5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b3:	int    0xe9
  40d5b5:	mov    edi,0x195d3c4d
  40d5ba:	sbb    DWORD PTR [ecx-0x3103833b],eax
  40d5c0:	jno    0x40d5b1
  40d5c2:	push   edi
  40d5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c4:	ds stos BYTE PTR es:[edi],al
  40d5c6:	loope  0x40d587
  40d5c8:	mov    eax,0xa5344e0e
  40d5cd:	pusha  
  40d5ce:	push   edx
  40d5cf:	cli    
  40d5d0:	mov    ecx,0x88b9b3e4
  40d5d5:	add    eax,0x639c9312
  40d5da:	into   
  40d5db:	xchg   ebx,eax
  40d5dc:	cld    
  40d5dd:	ror    DWORD PTR [eax],1
  40d5df:	and    al,0xb8
  40d5e1:	cdq    
  40d5e2:	xor    BYTE PTR [ebp+eax*8-0x3c2af21e],dh
  40d5e9:	in     al,0x91
  40d5eb:	sbb    edx,esi
  40d5ed:	xor    edx,DWORD PTR [edi+0x75]
  40d5f0:	pushf  
  40d5f1:	(bad)  
  40d5f3:	sub    edi,ebp
  40d5f5:	mov    esp,0xbe0b9c21
  40d5fa:	xchg   esp,eax
  40d5fb:	mov    al,ds:0x33ecda07
  40d600:	xchg   ebx,eax
  40d601:	sub    DWORD PTR [ebp*4+0x79b99fe4],0xffffffe4
  40d609:	xchg   esp,eax
  40d60a:	shl    esi,1
  40d60c:	xor    al,0x1d
  40d60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d60f:	xor    BYTE PTR [ebp+0x61],0x2b
  40d613:	xchg   esi,eax
  40d614:	inc    esp
  40d615:	sbb    edi,DWORD PTR [ecx-0x1d]
  40d618:	lods   eax,DWORD PTR ds:[esi]
  40d619:	inc    ebx
  40d61a:	(bad)  
  40d61c:	retf   0xa6d4
  40d61f:	daa    
  40d620:	add    al,0x93
  40d622:	push   edx
  40d623:	pop    esp
  40d624:	enter  0xe2d0,0x7b
  40d628:	into   
  40d629:	xchg   esp,eax
  40d62a:	and    al,0x9
  40d62c:	xor    al,0xc5
  40d62e:	test   BYTE PTR [ebp+eiz*4+0x2d80332a],0x4d
  40d636:	clc    
  40d637:	xor    al,0x71
  40d639:	mov    WORD PTR [edi-0x5d],ds
  40d63c:	jbe    0x40d604
  40d63e:	xchg   edi,eax
  40d63f:	shl    BYTE PTR [eax-0xccc4e96],0x26
  40d646:	sub    BYTE PTR ds:0xacdda336,0x41
  40d64d:	push   0x21593913
  40d652:	cmp    al,0xd
  40d654:	sbb    edi,0x36
  40d657:	repz and BYTE PTR [edx+0x3e],0xfb
  40d65c:	adc    bl,BYTE PTR [ebx]
  40d65e:	add    DWORD PTR [ebp+0x717b5e6c],edx
  40d664:	aad    0xf7
  40d666:	xor    al,0xa0
  40d668:	scas   eax,DWORD PTR es:[edi]
  40d669:	fstp   QWORD PTR [edx-0x76]
  40d66c:	mov    edi,0x4eceb770
  40d671:	fbld   TBYTE PTR [ebp+0x40]
  40d674:	dec    edi
  40d675:	sar    DWORD PTR [edx+0x20],1
  40d678:	retf   0x7b05
  40d67b:	jecxz  0x40d67f
  40d67d:	out    dx,eax
  40d67e:	xchg   esi,eax
  40d67f:	std    
  40d680:	hlt    
  40d681:	out    dx,al
  40d682:	sbb    eax,0x659192b7
  40d687:	lea    esi,[eax-0x53376215]
  40d68d:	ficom  WORD PTR [eax-0x79]
  40d690:	push   esi
  40d691:	and    al,BYTE PTR [edi+0x6c]
  40d694:	sti    
  40d695:	rcr    bl,1
  40d697:	cs xchg ebp,eax
  40d699:	popa   
  40d69a:	push   es
  40d69b:	mov    eax,ds:0xc52377c5
  40d6a0:	mov    ah,0xde
  40d6a2:	popa   
  40d6a3:	pop    esp
  40d6a4:	(bad)  
  40d6a6:	fst    DWORD PTR [ebx]
  40d6a8:	rol    DWORD PTR [esp+eax*4+0x23],cl
  40d6ac:	dec    edx
  40d6ad:	jae    0x40d665
  40d6af:	mov    edi,0x4504a2
  40d6b4:	mov    BYTE PTR [edx-0x35b2b64],al
  40d6ba:	jmp    0x13f4:0x982d9e0f
  40d6c1:	rcr    dh,cl
  40d6c3:	inc    esi
  40d6c4:	sub    eax,0xcf9483b1
  40d6c9:	cmp    dl,BYTE PTR [esi-0x1a78bd51]
  40d6cf:	inc    ebx
  40d6d0:	(bad)  
  40d6d1:	sbb    dh,BYTE PTR [edx]
  40d6d3:	into   
  40d6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d5:	aad    0xc7
  40d6d7:	cmp    DWORD PTR [edx],eax
  40d6d9:	fadd   QWORD PTR [esi]
  40d6db:	(bad)  
  40d6dc:	jmp    0x40d66b
  40d6de:	sbb    edx,DWORD PTR ss:[eax]
  40d6e1:	daa    
  40d6e2:	loope  0x40d694
  40d6e4:	fimul  WORD PTR [edx-0x36ec5d2]
  40d6ea:	jns    0x40d748
  40d6ec:	stc    
  40d6ed:	push   ds
  40d6ee:	inc    edx
  40d6ef:	clc    
  40d6f0:	cwde   
  40d6f1:	retf   
  40d6f2:	pop    eax
  40d6f3:	scas   al,BYTE PTR es:[edi]
  40d6f4:	xchg   bh,dh
  40d6f6:	pop    ecx
  40d6f7:	xor    ah,BYTE PTR [ebp+ebx*8-0x26]
  40d6fb:	stos   DWORD PTR es:[edi],eax
  40d6fc:	pop    ecx
  40d6fd:	loope  0x40d76e
  40d6ff:	or     dl,BYTE PTR [ebx-0x237a6703]
  40d705:	shl    ebx,cl
  40d707:	add    DWORD PTR [edx],eax
  40d709:	ds xchg ecx,eax
  40d70b:	pop    edx
  40d70c:	fcom   DWORD PTR [ebp+0x31]
  40d70f:	inc    ebp
  40d710:	add    eax,0xa5e3f3bc
  40d715:	or     edx,ebx
  40d717:	(bad)  
  40d718:	test   eax,0x49a7e3e0
  40d71d:	mov    WORD PTR [esp+edi*1-0x4b085d48],cs
  40d724:	(bad)  
  40d725:	iret   
  40d726:	data16 xor al,0x50
  40d729:	(bad)  
  40d72a:	jmp    0xedc32151
  40d72f:	bnd jle 0x40d71d
  40d732:	cld    
  40d733:	jae    0x40d6d9
  40d735:	retf   0x8751
  40d738:	call   0x874c:0x306ea17b
  40d73f:	push   es
  40d740:	js     0x40d700
  40d742:	pushf  
  40d743:	jbe    0x40d798
  40d745:	lahf   
  40d746:	or     al,0x40
  40d748:	mov    eax,ebp
  40d74a:	imul   edx,ecx,0x6323e47e
  40d750:	mov    bl,ah
  40d752:	sub    BYTE PTR [eax],0x70
  40d755:	lds    edx,FWORD PTR [ebx-0x35]
  40d758:	pushf  
  40d759:	int    0xd0
  40d75b:	sub    al,BYTE PTR [edx+0x10]
  40d75e:	mov    BYTE PTR [edi+0x34],bl
  40d761:	int    0x2e
  40d763:	(bad)  
  40d764:	jl     0x40d777
  40d766:	or     BYTE PTR [ebp-0x59],ch
  40d769:	repz xor edx,DWORD PTR cs:[edi+esi*4+0x31]
  40d76f:	repnz aad 0x1c
  40d772:	mov    edi,0x2b365037
  40d777:	and    edi,esp
  40d779:	mov    cl,BYTE PTR [ecx+eiz*2+0x44]
  40d77d:	out    dx,eax
  40d77e:	test   DWORD PTR [ebx-0x4e3a7343],esp
  40d784:	add    DWORD PTR [ecx-0x6a],0xa8f3d03
  40d78b:	es ja  0x40d759
  40d78e:	int3   
  40d78f:	test   DWORD PTR [esi+ebp*8+0x1f2b5455],esi
  40d796:	adc    DWORD PTR [ecx-0x57],esi
  40d799:	pop    edx
  40d79a:	call   0xc34d4cc4
  40d79f:	sbb    cl,BYTE PTR [esi-0x7c]
  40d7a2:	pushf  
  40d7a3:	mov    ?,WORD PTR ds:0xa4d5089
  40d7a9:	and    dl,BYTE PTR [ebp+0x19]
  40d7ac:	jecxz  0x40d768
  40d7ae:	fstp   QWORD PTR [ebx-0x79]
  40d7b1:	and    eax,0xef925c53
  40d7b6:	daa    
  40d7b7:	mov    esp,0xb2ab3597
  40d7bc:	dec    ebx
  40d7bd:	push   eax
  40d7be:	ds push esi
  40d7c0:	aad    0x7f
  40d7c2:	int    0xfb
  40d7c4:	test   eax,0x4cca8fca
  40d7c9:	jb     0x40d755
  40d7cb:	or     DWORD PTR [eax-0xcbfa56f],eax
  40d7d1:	test   BYTE PTR [ebp+0x6],cl
  40d7d4:	mov    cl,0xe2
  40d7d6:	mov    eax,0x4794f79d
  40d7db:	adc    DWORD PTR [ecx],ebx
  40d7dd:	add    dh,dh
  40d7df:	or     al,0xce
  40d7e1:	cmc    
  40d7e2:	fild   WORD PTR [esi+0x3d]
  40d7e5:	(bad)  
  40d7e6:	dec    esp
  40d7e7:	jo     0x40d860
  40d7e9:	mov    eax,ecx
  40d7eb:	push   es
  40d7ec:	push   edi
  40d7ed:	pop    eax
  40d7ee:	pop    edx
  40d7ef:	daa    
  40d7f0:	mov    ebx,0x968bcd5e
  40d7f5:	xor    BYTE PTR [edx+0x6d],cl
  40d7f8:	inc    esi
  40d7f9:	push   edx
  40d7fa:	sbb    BYTE PTR [edi+0x2b2b7575],ch
  40d800:	xchg   esp,eax
  40d801:	outs   dx,BYTE PTR ds:[esi]
  40d802:	arpl   WORD PTR [esi],dx
  40d804:	cli    
  40d805:	mov    ebx,DWORD PTR [edx+edx*1-0x32]
  40d809:	jp     0x40d87e
  40d80b:	outs   dx,BYTE PTR ds:[esi]
  40d80c:	add    al,0x4b
  40d80e:	fld    st(3)
  40d810:	(bad)  
  40d811:	mov    ecx,0x1ec9ec1
  40d816:	mov    ebx,0x15030d02
  40d81b:	scas   eax,DWORD PTR es:[edi]
  40d81c:	sbb    dh,BYTE PTR [eax+0x37]
  40d81f:	aas    
  40d820:	dec    eax
  40d821:	pop    esp
  40d822:	cmp    BYTE PTR [edx+0x71],bl
  40d825:	mov    ebx,0xac06520a
  40d82a:	inc    eax
  40d82b:	hlt    
  40d82c:	xchg   DWORD PTR [eax],esp
  40d82e:	lods   eax,DWORD PTR ds:[esi]
  40d82f:	das    
  40d830:	dec    edi
  40d831:	bnd ja 0x40d828
  40d834:	xchg   edi,eax
  40d835:	(bad)  
  40d836:	pop    esp
  40d837:	scas   eax,DWORD PTR es:[edi]
  40d838:	out    0xd2,al
  40d83a:	cs mov ch,0x10
  40d83d:	out    dx,eax
  40d83e:	movhps QWORD PTR [ebx],xmm7
  40d841:	jns    0x40d87a
  40d843:	ins    BYTE PTR es:[edi],dx
  40d844:	jnp    0x40d89a
  40d846:	(bad)  
  40d848:	rcr    BYTE PTR [esi-0x4c65f199],cl
  40d84e:	mov    DWORD PTR [ebp-0x46bee66b],eax
  40d854:	add    ah,BYTE PTR [edx]
  40d856:	jnp    0x40d80b
  40d858:	dec    ebp
  40d859:	jg     0x40d7de
  40d85b:	jecxz  0x40d8a5
  40d85d:	adc    DWORD PTR ds:0xc4162bb7,ebp
  40d863:	mov    eax,ds:0xc409a8be
  40d868:	add    al,0x1d
  40d86a:	imul   edi,DWORD PTR [ebp-0x24],0xa54268e6
  40d871:	push   0x8ac36f22
  40d876:	repnz ins BYTE PTR es:[edi],dx
  40d878:	push   ebx
  40d879:	stos   BYTE PTR es:[edi],al
  40d87a:	aad    0xec
  40d87c:	aaa    
  40d87d:	ret    
  40d87e:	adc    al,0x5c
  40d880:	cmp    DWORD PTR [ebx+0x365d74ff],0x94779c86
  40d88a:	retf   
  40d88b:	push   0xf0e1e9c4
  40d890:	stc    
  40d891:	pusha  
  40d892:	xchg   esp,eax
  40d893:	cmp    BYTE PTR [ebx],bl
  40d895:	idiv   BYTE PTR [eax]
  40d897:	mov    ecx,0x47cd5f61
  40d89c:	push   esi
  40d89d:	inc    edi
  40d89e:	jo     0x40d8cf
  40d8a0:	sbb    bh,ch
  40d8a2:	inc    edi
  40d8a3:	push   cs
  40d8a4:	jae    0x40d8e1
  40d8a6:	xchg   edx,eax
  40d8a7:	and    DWORD PTR ds:0x7031034,ebp
  40d8ad:	ror    BYTE PTR [edx-0x7699a48],1
  40d8b3:	inc    esp
  40d8b4:	adc    cl,bh
  40d8b6:	mov    al,ds:0xeaf1d7f5
  40d8bb:	test   DWORD PTR [ebp+0x6c3dc0b8],edi
  40d8c1:	outs   dx,BYTE PTR ds:[esi]
  40d8c2:	test   DWORD PTR [esi+0x7c956340],edx
  40d8c8:	bound  esi,QWORD PTR [edi]
  40d8ca:	jne    0x40d909
  40d8cc:	dec    esi
  40d8cd:	ins    BYTE PTR es:[edi],dx
  40d8ce:	add    cl,dh
  40d8d0:	aaa    
  40d8d1:	push   esi
  40d8d2:	xchg   edi,eax
  40d8d3:	imul   edx,DWORD PTR [esp+ebp*8],0x63924072
  40d8da:	in     eax,dx
  40d8db:	inc    esp
  40d8dc:	jmp    0xdd28:0x808cb655
  40d8e3:	outs   dx,DWORD PTR ds:[esi]
  40d8e4:	sti    
  40d8e5:	cld    
  40d8e6:	js     0x40d8ea
  40d8e8:	scas   al,BYTE PTR es:[edi]
  40d8e9:	push   0x8a6e08
  40d8ee:	pop    ebx
  40d8ef:	inc    eax
  40d8f0:	loop   0x40d8f2
  40d8f2:	push   esi
  40d8f3:	retf   0xd5e5
  40d8f6:	jne    0x40d909
  40d8f8:	mov    DWORD PTR [ebx],edi
  40d8fa:	iret   
  40d8fb:	and    al,0x52
  40d8fd:	div    BYTE PTR [esp+esi*8+0x4b09fa84]
  40d904:	xchg   ebp,eax
  40d905:	repnz sbb DWORD PTR [esi],eax
  40d908:	ret    
  40d909:	clc    
  40d90a:	lds    edi,FWORD PTR [esi+0x1667b497]
  40d910:	ds pop ds
  40d912:	add    al,ah
  40d914:	xchg   esp,eax
  40d915:	push   esp
  40d916:	lea    ecx,[ecx-0x3d]
  40d919:	and    esi,DWORD PTR [edx+ebp*4]
  40d91c:	mov    edx,0x83517375
  40d921:	dec    esp
  40d922:	mov    bh,0x68
  40d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d925:	mov    ecx,0x807a6031
  40d92a:	push   ebp
  40d92b:	bound  eax,QWORD PTR [ebp-0x7f3dbc79]
  40d931:	sahf   
  40d932:	pop    ss
  40d933:	fdivp  st(1),st
  40d935:	lds    edx,FWORD PTR [eax-0x23005409]
  40d93b:	les    eax,FWORD PTR [eax]
  40d93d:	mov    ds:0xbd5967d1,al
  40d942:	sti    
  40d943:	fs call 0x54d793d8
  40d949:	or     ebp,0x3c030ef7
  40d94f:	add    eax,0x88955a15
  40d954:	mov    edi,ebp
  40d956:	mov    ah,0xc7
  40d958:	dec    ebx
  40d959:	ficom  WORD PTR [esi-0x31]
  40d95c:	hlt    
  40d95d:	add    BYTE PTR [eax+0x7],0x43
  40d961:	or     DWORD PTR [ecx+0x6c],eax
  40d964:	xor    DWORD PTR [eax+0x82ded54],ebp
  40d96a:	mov    dh,0x11
  40d96c:	cmc    
  40d96d:	add    eax,DWORD PTR [ebp+0x2017415a]
  40d973:	xchg   BYTE PTR [edi],al
  40d975:	push   edi
  40d976:	pop    ss
  40d977:	fst    QWORD PTR [edi+ecx*4]
  40d97a:	jmp    0x3016:0x210ef457
  40d981:	sbb    DWORD PTR [eax],0x97b1ce14
  40d987:	icebp  
  40d988:	bound  edx,QWORD PTR [edx+0x6d]
  40d98b:	rol    BYTE PTR [edx-0x58],0xc0
  40d98f:	pop    ebx
  40d990:	mov    eax,0xeab54e67
  40d995:	ret    
  40d996:	sub    cl,BYTE PTR [edi+eiz*8-0x3ed0215d]
  40d99d:	mov    ebx,0x8a586e7b
  40d9a2:	rol    DWORD PTR [edx],1
  40d9a4:	add    edx,esi
  40d9a6:	mov    ds:0x6b8ecd52,al
  40d9ab:	mov    ds:0xb9b3b41d,al
  40d9b0:	add    al,0x1a
  40d9b2:	adc    BYTE PTR [eax+0xb],dl
  40d9b5:	(bad)  
  40d9b6:	xchg   esi,eax
  40d9b7:	adc    eax,0x749d50a2
  40d9bc:	int    0x2b
  40d9be:	jp     0x40da2e
  40d9c0:	pop    esi
  40d9c1:	test   al,0x8c
  40d9c3:	mov    al,ch
  40d9c5:	popa   
  40d9c6:	cdq    
  40d9c7:	lock call 0xc037:0x40f93805
  40d9cf:	aam    0xb6
  40d9d1:	pusha  
  40d9d2:	jge    0x40da1c
  40d9d4:	ds xchg esp,eax
  40d9d6:	daa    
  40d9d7:	in     al,0x51
  40d9d9:	add    al,0x52
  40d9db:	dec    eax
  40d9dc:	pop    esi
  40d9dd:	shr    BYTE PTR [ebx],1
  40d9df:	mov    ebx,0x1f119001
  40d9e4:	(bad)  
  40d9e5:	int3   
  40d9e6:	out    0x7,eax
  40d9e8:	outs   dx,BYTE PTR ds:[esi]
  40d9e9:	clc    
  40d9ea:	add    BYTE PTR [ebp-0x2f262ab0],cl
  40d9f0:	push   ss
  40d9f1:	arpl   bx,di
  40d9f3:	push   ebx
  40d9f4:	sar    BYTE PTR [ebx-0x6e0fdbb2],0x4
  40d9fb:	mov    ebp,DWORD PTR [ebx+0x7c]
  40d9fe:	std    
  40d9ff:	xchg   esi,eax
  40da00:	sar    DWORD PTR [esi],1
  40da02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da03:	push   esp
  40da04:	fs push ss
  40da06:	lds    ecx,FWORD PTR [ebx]
  40da08:	jb     0x40da43
  40da0a:	adc    DWORD PTR [eax+0x65233aa2],0xffffff8b
  40da11:	(bad)
  40da14:	push   esi
  40da15:	cld    
  40da16:	xor    bh,BYTE PTR [eax]
  40da18:	mov    esi,0xa29ce93a
  40da1d:	mov    ebx,0x2bfa4f8
  40da22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da23:	pop    ebp
  40da24:	push   esi
  40da25:	fnstsw WORD PTR [edx-0x72031d89]
  40da2b:	jl     0x40da8d
  40da2d:	popa   
  40da2e:	adc    eax,0xefc88d2a
  40da33:	push   edx
  40da34:	ins    BYTE PTR es:[edi],dx
  40da35:	jmp    0xe45cf13b
  40da3a:	sbb    DWORD PTR [edi-0x2f2ea2f0],eax
  40da40:	ins    BYTE PTR es:[edi],dx
  40da41:	call   0x201cda2e
  40da46:	dec    esi
  40da47:	jmp    0xf1afd29
  40da4c:	fimul  WORD PTR [ebp+0x50683f12]
  40da52:	shl    BYTE PTR [edi-0x51],0x8e
  40da56:	lds    edx,FWORD PTR [ecx-0x2c]
  40da59:	sub    eax,0x81eba30f
  40da5e:	xchg   ebx,eax
  40da5f:	out    dx,al
  40da60:	push   0x34b60441
  40da65:	add    eax,0x91f20247
  40da6a:	aam    0x7b
  40da6c:	inc    ecx
  40da6d:	sar    cl,1
  40da6f:	and    al,0xc5
  40da71:	adc    DWORD PTR [edx+0x101d5de5],esi
  40da77:	or     esp,DWORD PTR [ebp-0x13430ec9]
  40da7d:	shr    BYTE PTR [esi-0x240ddfc5],1
  40da83:	popf   
  40da84:	cmp    dh,BYTE PTR [eax]
  40da86:	mov    bh,0x68
  40da88:	enter  0x6059,0x6e
  40da8c:	test   BYTE PTR [edx],bl
  40da8e:	sub    eax,0x2f90aa24
  40da93:	xor    eax,DWORD PTR [ecx]
  40da95:	fdivr  QWORD PTR [esi]
  40da97:	loope  0x40daa8
  40da99:	pop    eax
  40da9a:	loop   0x40dadf
  40da9c:	iret   
  40da9d:	and    bl,BYTE PTR [ebp-0x1e]
  40daa0:	ss jmp 0x69ff59c9
  40daa6:	mov    al,BYTE PTR [edi-0x45049930]
  40daac:	push   edi
  40daad:	push   es
  40daae:	cmp    eax,0x60aca89f
  40dab3:	popf   
  40dab4:	(bad)  
  40dab5:	jne    0x40daf8
  40dab7:	lahf   
  40dab8:	sahf   
  40dab9:	loope  0x40da51
  40dabb:	fnstsw WORD PTR [edx+ecx*8]
  40dabe:	or     BYTE PTR [ebp+0x66a85f34],0xd
  40dac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac6:	sbb    edx,DWORD PTR [ecx-0x69]
  40dac9:	test   al,0x2
  40dacb:	fimul  WORD PTR [eax-0x23c4d988]
  40dad1:	test   DWORD PTR [ecx-0x1b],esi
  40dad4:	aad    0x63
  40dad6:	ret    
  40dad7:	xchg   esi,eax
  40dad8:	sbb    ecx,eax
  40dada:	rcl    DWORD PTR [esi+0x27],cl
  40dadd:	js     0x40db37
  40dadf:	sbb    al,0xbd
  40dae1:	pop    ss
  40dae2:	pop    ebp
  40dae3:	test   bh,dl
  40dae5:	sahf   
  40dae6:	mov    eax,0xfb1e4d08
  40daeb:	xchg   esp,eax
  40daec:	into   
  40daed:	aam    0x9b
  40daef:	sbb    BYTE PTR [edx+edi*4],cl
  40daf2:	push   ebp
  40daf3:	mov    ebx,0xf9b63344
  40daf8:	push   cs
  40daf9:	ins    BYTE PTR es:[edi],dx
  40dafa:	xlat   BYTE PTR ds:[ebx]
  40dafb:	mov    edi,esp
  40dafd:	mov    ch,0x17
  40daff:	aad    0x74
  40db01:	icebp  
  40db02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db03:	inc    DWORD PTR [esi]
  40db05:	xor    dh,ch
  40db07:	mov    ch,0x7f
  40db09:	add    al,bl
  40db0b:	jmp    0x40db69
  40db0d:	(bad)
  40db10:	fidivr DWORD PTR [esp+edx*4-0x47ebcb65]
  40db17:	fstp   QWORD PTR [esi]
  40db19:	shl    BYTE PTR [ebx+0x483f2793],1
  40db1f:	mov    ebp,0xf6c5968
  40db24:	add    eax,0x90c0c6b7
  40db29:	cwde   
  40db2a:	ret    0xfb5b
  40db2d:	xchg   esi,eax
  40db2e:	test   al,0xe6
  40db30:	cli    
  40db31:	ja     0x40db38
  40db33:	sbb    ebx,edx
  40db35:	ins    DWORD PTR es:[edi],dx
  40db36:	adc    eax,0x84014b42
  40db3b:	or     ebp,eax
  40db3d:	(bad)  
  40db3e:	push   esi
  40db3f:	adc    bh,bl
  40db41:	(bad)  
  40db42:	arpl   ax,ax
  40db44:	loope  0x40db16
  40db46:	mov    cl,0xd1
  40db48:	jge    0x40db06
  40db4a:	xchg   DWORD PTR [esi-0x747ff377],eax
  40db50:	mov    edx,0x762fc4bf
  40db55:	pop    ebp
  40db56:	push   ecx
  40db57:	adc    DWORD PTR [eax-0x8f8b0f9],ebx
  40db5d:	mov    eax,0xd296f7f5
  40db62:	cmc    
  40db63:	adc    BYTE PTR [edx+0x13],dh
  40db66:	xchg   ebp,eax
  40db67:	adc    ebp,DWORD PTR [ebp-0x6766dd00]
  40db6d:	inc    eax
  40db6e:	ja     0x40dbac
  40db70:	sub    eax,0x649cd335
  40db75:	push   edx
  40db76:	sbb    esi,DWORD PTR [edi-0x62540416]
  40db7c:	into   
  40db7d:	retf   0xadbf
  40db80:	and    ebx,DWORD PTR [eax+0x1462c621]
  40db86:	pavgw  mm5,mm7
  40db89:	jp     0x40db9e
  40db8b:	pop    ss
  40db8c:	call   0x68974a88
  40db91:	add    DWORD PTR [ecx+ebp*8-0x563b548],ecx
  40db98:	sbb    BYTE PTR [ecx+ebp*2-0x2],cl
  40db9c:	ins    BYTE PTR es:[edi],dx
  40db9d:	dec    esi
  40db9e:	in     eax,0xaf
  40dba0:	sbb    eax,0xdc979b34
  40dba5:	mov    al,ds:0x63f3b44f
  40dbaa:	sbb    al,0xa8
  40dbac:	mov    ds:0x12ef452b,eax
  40dbb1:	sub    eax,0x3f09211e
  40dbb6:	push   DWORD PTR [edi-0x1d94f949]
  40dbbc:	call   0x1138a2af
  40dbc1:	pop    esi
  40dbc2:	in     eax,0x53
  40dbc4:	jge    0x40db50
  40dbc6:	jns    0x40dc11
  40dbc8:	inc    ecx
  40dbc9:	ja     0x40dc01
  40dbcb:	pushf  
  40dbcc:	jne    0x40dc07
  40dbce:	lds    ecx,FWORD PTR [ecx-0x35]
  40dbd1:	mov    ah,0x13
  40dbd3:	mov    al,0x1f
  40dbd5:	in     eax,0x24
  40dbd7:	test   DWORD PTR [ecx+ebp*2-0x6a71b14b],ebp
  40dbde:	xor    eax,0x5ecf42b6
  40dbe3:	adc    DWORD PTR [edi],0xfffffff8
  40dbe6:	(bad)  
  40dbe7:	sub    BYTE PTR [edx+0x63],cl
  40dbea:	dec    edx
  40dbeb:	mov    ds:0xd7854e97,al
  40dbf0:	(bad)  
  40dbf1:	or     DWORD PTR [edx-0x110fbd3a],esi
  40dbf7:	jecxz  0x40dc5e
  40dbf9:	xor    DWORD PTR [ebp+0x6f],ebp
  40dbfc:	adc    eax,0x3f2c5e22
  40dc01:	sbb    bh,BYTE PTR [ecx]
  40dc03:	xor    DWORD PTR [ecx+0x25f0acb1],ecx
  40dc09:	mov    edx,es
  40dc0b:	call   0x7a3a:0xa56e33d2
  40dc12:	rep ins DWORD PTR es:[edi],dx
  40dc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc16:	mov    bh,0x2a
  40dc18:	call   edi
  40dc1a:	sbb    ah,BYTE PTR [eax+0x66849b6c]
  40dc20:	retf   0x577e
  40dc23:	push   es
  40dc24:	push   edi
  40dc25:	mov    esp,0x332d928
  40dc2a:	popfw  
  40dc2c:	adc    al,0x2f
  40dc2e:	jle    0x40dbcd
  40dc30:	dec    ecx
  40dc31:	ror    DWORD PTR [esi],1
  40dc33:	push   eax
  40dc34:	loope  0x40dc8b
  40dc36:	out    0xea,eax
  40dc38:	cmp    esi,DWORD PTR [esi-0x66]
  40dc3b:	jmp    0x5e1a:0x291ad5e1
  40dc42:	mov    ebp,0x17eeecc0
  40dc47:	popa   
  40dc48:	mov    dl,0x0
  40dc4a:	inc    esi
  40dc4b:	push   ds
  40dc4c:	cmp    al,0xce
  40dc4e:	ss fs out dx,al
  40dc51:	mov    ch,ch
  40dc53:	test   eax,0xeacbb9cb
  40dc58:	hlt    
  40dc59:	daa    
  40dc5a:	jge    0x40dccd
  40dc5c:	fld    DWORD PTR [esi]
  40dc5e:	call   0x9c4ba771
  40dc63:	mov    ecx,0x458293de
  40dc68:	push   eax
  40dc69:	daa    
  40dc6a:	inc    ebx
  40dc6b:	push   cs
  40dc6c:	enter  0xeb56,0x44
  40dc70:	inc    edx
  40dc71:	js     0x40dcab
  40dc73:	or     dh,BYTE PTR [edx+0x43]
  40dc76:	dec    esi
  40dc77:	(bad)  [ebp+0x56]
  40dc7a:	sub    bl,BYTE PTR [ebx]
  40dc7c:	jl     0x40dc2b
  40dc7e:	fnstcw WORD PTR [esp+ecx*2]
  40dc81:	xchg   DWORD PTR [ebx-0x33],ecx
  40dc84:	pop    esp
  40dc85:	xchg   edx,eax
  40dc86:	or     BYTE PTR [eax+0x71105a00],bh
  40dc8c:	(bad)  
  40dc8d:	mul    BYTE PTR [esi+0x3]
  40dc90:	mov    al,0x58
  40dc92:	xor    eax,0xf14fb3a7
  40dc97:	imul   ecx,DWORD PTR [eax],0x1ef3e736
  40dc9d:	shl    DWORD PTR [esi+0x10480e69],cl
  40dca3:	ss sub ebp,ebp
  40dca6:	repz cmp al,0x2f
  40dca9:	ins    BYTE PTR es:[edi],dx
  40dcaa:	xlat   BYTE PTR ds:[ebx]
  40dcab:	jle    0x40dd00
  40dcad:	inc    eax
  40dcae:	ficom  DWORD PTR [ecx-0x7f]
  40dcb1:	adc    eax,0x4bca78a4
  40dcb6:	imul   BYTE PTR [edi-0x42]
  40dcb9:	push   0xefa09849
  40dcbe:	leave  
  40dcbf:	inc    ebp
  40dcc0:	xor    al,BYTE PTR [ebp+ecx*1-0x61cc0cd]
  40dcc7:	jmp    0x40dd44
  40dcc9:	mov    dl,0xca
  40dccb:	aaa    
  40dccc:	(bad)  
  40dccd:	mov    bh,0x70
  40dccf:	cs or  al,0x6e
  40dcd2:	pop    edi
  40dcd3:	pop    esp
  40dcd4:	jmp    0x6353628f
  40dcd9:	inc    ecx
  40dcda:	push   esp
  40dcdb:	push   edi
  40dcdc:	jae    0x40dca5
  40dcde:	adc    ebp,ebx
  40dce0:	add    eax,0x87072fd4
  40dce5:	daa    
  40dce6:	mov    ebx,fs
  40dce8:	cs xor eax,0x372f0a94
  40dcee:	mov    ah,0xc1
  40dcf0:	xor    edx,esp
  40dcf2:	in     eax,0x60
  40dcf4:	je     0x40dc95
  40dcf6:	xor    BYTE PTR ds:0xa967cdf5,cl
  40dcfc:	cmp    edi,0x10
  40dcff:	push   ecx
  40dd00:	jne    0x40dd26
  40dd02:	push   ebp
  40dd03:	dec    esp
  40dd04:	or     eax,0x9a71311c
  40dd09:	loopne 0x40dd63
  40dd0b:	jl     0x40dd52
  40dd0d:	or     ebp,DWORD PTR [ecx]
  40dd0f:	mov    ah,0xbe
  40dd11:	imul   edi,DWORD PTR [edx-0x1],0xffffffda
  40dd15:	jecxz  0x40dcb1
  40dd17:	repnz clc 
  40dd19:	fwait
  40dd1a:	pop    eax
  40dd1b:	jmp    DWORD PTR [esi-0xd]
  40dd1e:	push   eax
  40dd1f:	add    DWORD PTR [eax],ebp
  40dd21:	jecxz  0x40dcdb
  40dd23:	add    dl,bl
  40dd25:	pop    edx
  40dd26:	add    BYTE PTR [ebx],0x60
  40dd29:	sbb    al,0x35
  40dd2b:	mov    al,0xed
  40dd2d:	ret    
  40dd2e:	(bad)
  40dd31:	mov    esp,0xb8df4286
  40dd36:	jmp    0xc7427c3f
  40dd3b:	das    
  40dd3c:	out    0xb4,eax
  40dd3e:	mov    eax,0x46b3b8d5
  40dd43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd44:	je     0x40dcdb
  40dd46:	mov    ah,0xf8
  40dd48:	stos   BYTE PTR es:[edi],al
  40dd49:	pop    ecx
  40dd4a:	push   0xffffffd6
  40dd4c:	je     0x40dd4d
  40dd4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd4f:	add    esi,DWORD PTR [ebx+0x1d1bfea7]
  40dd55:	fstp   DWORD PTR [esi]
  40dd57:	and    al,0x90
  40dd59:	and    esp,0xffffff92
  40dd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd5d:	(bad)  
  40dd5e:	(bad)  
  40dd60:	sysenter 
  40dd62:	dec    eax
  40dd63:	rcl    cl,cl
  40dd65:	push   esp
  40dd66:	sbb    al,0x45
  40dd68:	add    esi,DWORD PTR [esp+ebx*8+0x41]
  40dd6c:	sbb    al,0x86
  40dd6e:	cmp    eax,0x11efd829
  40dd73:	jle    0x40dd80
  40dd75:	test   DWORD PTR [edi-0x720ddb05],edi
  40dd7b:	(bad)  
  40dd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd7d:	mov    ah,0xf8
  40dd7f:	sbb    esi,DWORD PTR [ebx-0xd]
  40dd82:	aaa    
  40dd83:	ins    BYTE PTR es:[edi],dx
  40dd84:	outs   dx,DWORD PTR ds:[esi]
  40dd85:	jbe    0x40dd75
  40dd87:	push   0xce1c77c3
  40dd8c:	mov    cl,0xcd
  40dd8e:	shl    DWORD PTR [eax-0x549c5c88],1
  40dd94:	pop    edx
  40dd95:	ficomp DWORD PTR [edx+ebp*2+0x1b80f208]
  40dd9c:	test   BYTE PTR [eax+0x5671f2a3],ah
  40dda2:	adc    DWORD PTR [edx],ebp
  40dda4:	jae    0x4926f530
  40ddaa:	shl    BYTE PTR ds:0xf1ca42a0,0x8b
  40ddb1:	loop   0x40de2c
  40ddb3:	test   eax,0xd9c4f0dc
  40ddb8:	ins    DWORD PTR es:[edi],dx
  40ddb9:	(bad)  
  40ddba:	ss mov bh,0xf1
  40ddbd:	into   
  40ddbe:	adc    ebx,eax
  40ddc0:	fdivr  DWORD PTR [esi+0x5c]
  40ddc3:	in     al,dx
  40ddc4:	or     eax,0xcc89665e
  40ddc9:	lods   eax,DWORD PTR ds:[esi]
  40ddca:	dec    edx
  40ddcb:	xor    DWORD PTR [ebx],eax
  40ddcd:	jmp    0xeab6:0xdcda9091
  40ddd4:	aad    0x50
  40ddd6:	mov    eax,ds:0xad715514
  40dddb:	xchg   esp,eax
  40dddc:	ficomp WORD PTR [edi]
  40ddde:	dec    esi
  40dddf:	cld    
  40dde0:	popf   
  40dde1:	mov    edx,0x6cf8f1fb
  40dde6:	push   0x75bff9ab
  40ddeb:	cld    
  40ddec:	push   cs
  40dded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddee:	mov    ds,WORD PTR [esi+0x21f67b8a]
  40ddf4:	or     BYTE PTR [ecx-0x6f],0x36
  40ddf8:	sbb    bl,0x8f
  40ddfb:	call   0x9d10:0x58f5565c
  40de02:	dec    esp
  40de03:	dec    ebx
  40de04:	ud0    esi,eax
  40de07:	dec    esi
  40de08:	mov    ebp,0xa72c4926
  40de0d:	aad    0xb7
  40de0f:	pop    edi
  40de10:	or     BYTE PTR [edi+edx*4],dh
  40de13:	out    dx,al
  40de14:	ds xchg esp,eax
  40de16:	clc    
  40de17:	xor    DWORD PTR [eax],0x3734ae2f
  40de1d:	xor    DWORD PTR [edx-0x6f48610d],eax
  40de23:	xchg   ebx,eax
  40de24:	mov    cl,0xe
  40de26:	jmp    0xd5f0:0x886c3789
  40de2d:	jne    0x40de58
  40de2f:	xor    al,0x6
  40de31:	push   eax
  40de32:	adc    al,0x30
  40de34:	(bad)  
  40de35:	cmp    al,0x20
  40de37:	or     edi,DWORD PTR [esi-0x154257c4]
  40de3d:	je     0x40ddf7
  40de3f:	jnp    0x40de62
  40de41:	cmp    ch,cl
  40de43:	sbb    esp,eax
  40de45:	or     BYTE PTR [ebx-0x76],bh
  40de48:	sbb    al,0x8c
  40de4a:	xor    eax,0xfcec98af
  40de4f:	pusha  
  40de50:	xchg   esi,eax
  40de51:	pop    edi
  40de52:	mov    esp,0x842dc447
  40de57:	inc    edx
  40de58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de59:	mov    ebx,0xfa470f4d
  40de5e:	sub    esi,ecx
  40de60:	ins    BYTE PTR es:[edi],dx
  40de61:	cmp    al,0x27
  40de63:	jl     0x40de1f
  40de65:	imul   eax,DWORD PTR [ebp+0x18],0xffffffe7
  40de69:	retf   0x2c10
  40de6c:	cmc    
  40de6d:	mov    bh,0xba
  40de6f:	push   ecx
  40de70:	enter  0x142c,0x64
  40de74:	shr    DWORD PTR [ebx-0x1da8f902],0x4d
  40de7b:	adc    al,0x85
  40de7d:	add    ebp,edi
  40de7f:	pop    ecx
  40de80:	jns    0x40de66
  40de82:	ror    BYTE PTR [esp+edx*2],cl
  40de85:	bound  esp,QWORD PTR [eax-0x7b]
  40de88:	adc    eax,0x17bc880
  40de8d:	mov    dl,BYTE PTR [edx+0x36af48a8]
  40de93:	sbb    ch,BYTE PTR [ebx]
  40de95:	push   0x6c569203
  40de9a:	and    ah,dl
  40de9c:	mov    al,0xe8
  40de9e:	icebp  
  40de9f:	test   DWORD PTR [edi+esi*2+0x5fe03c31],eax
  40dea6:	xchg   edi,eax
  40dea7:	or     ch,BYTE PTR [edx]
  40dea9:	dec    ebp
  40deaa:	and    dh,dh
  40deac:	push   0xffffffd9
  40deae:	les    esi,FWORD PTR [ebp-0x2351cfcd]
  40deb4:	pop    edx
  40deb5:	call   0x528d:0xc32260cc
  40debc:	fcomp  DWORD PTR [ebx-0x24dce8a9]
  40dec2:	mov    eax,ds:0xf189e605
  40dec7:	loope  0x40df28
  40dec9:	and    eax,DWORD PTR [esi+0x26]
  40decc:	dec    edx
  40decd:	inc    eax
  40dece:	int    0xd7
  40ded0:	outs   dx,BYTE PTR ds:[esi]
  40ded1:	sub    eax,0x2cda239a
  40ded6:	xchg   esp,eax
  40ded7:	pop    ss
  40ded8:	dec    edi
  40ded9:	into   
  40deda:	leave  
  40dedb:	fs pop ds
  40dedd:	pusha  
  40dede:	lea    ecx,[esi]
  40dee0:	pop    ebp
  40dee1:	rcl    DWORD PTR [ebx],1
  40dee3:	repz cwde 
  40dee5:	test   DWORD PTR ds:0x77cf188c,ecx
  40deeb:	hlt    
  40deec:	xor    DWORD PTR [esi-0x1c],ecx
  40deef:	or     eax,0xe966e88f
  40def4:	aad    0x66
  40def6:	xlat   BYTE PTR ds:[ebx]
  40def7:	jbe    0x40ded2
  40def9:	push   eax
  40defa:	cs std 
  40defc:	or     BYTE PTR ds:0x1e5c0b70,bl
  40df02:	int3   
  40df03:	push   eax
  40df04:	sub    DWORD PTR [eax+0x10d6cc71],edx
  40df0a:	jo     0x40def4
  40df0c:	mov    ds:0xfb46702b,eax
  40df11:	(bad)  
  40df12:	push   ebp
  40df13:	f2xm1  
  40df15:	aaa    
  40df16:	xchg   edi,eax
  40df17:	pusha  
  40df18:	pushf  
  40df19:	sub    ch,bl
  40df1b:	jge    0x40df42
  40df1d:	cli    
  40df1e:	xchg   edi,eax
  40df1f:	stc    
  40df20:	push   edi
  40df21:	pop    esp
  40df22:	jp     0x40dee4
  40df24:	loope  0x40df24
  40df26:	xchg   esi,eax
  40df27:	test   BYTE PTR [ebx+ecx*1-0x6630f1fd],ch
  40df2e:	add    eax,edx
  40df30:	mov    eax,ds:0x1a8e680d
  40df35:	cmp    BYTE PTR [ebp+0xd],bh
  40df38:	and    eax,0x17acf033
  40df3d:	jle    0x40df22
  40df3f:	fucomip st,st(3)
  40df41:	scas   al,BYTE PTR es:[edi]
  40df42:	pop    ebp
  40df43:	test   al,0xdd
  40df45:	leave  
  40df46:	dec    ebx
  40df47:	test   DWORD PTR [ecx+0x767e7649],eax
  40df4d:	jbe    0x40ded1
  40df4f:	imul   ebx,ebx,0x244beb68
  40df55:	add    esi,DWORD PTR [ebx+ebx*1]
  40df58:	jae    0x40df5c
  40df5a:	adc    cl,al
  40df5c:	cdq    
  40df5d:	pop    ds
  40df5e:	inc    ebx
  40df5f:	xor    BYTE PTR [edx+ecx*4+0x20f30ed0],dh
  40df66:	out    dx,al
  40df67:	in     al,0xc8
  40df69:	int3   
  40df6a:	and    BYTE PTR [edx-0x9e2c717],cl
  40df70:	retf   0x818d
  40df73:	pop    esi
  40df74:	std    
  40df75:	push   0xf6dc4808
  40df7a:	mov    edx,0xfd3af1ed
  40df7f:	mov    ecx,0xc50dd4b2
  40df84:	or     eax,0xbe82b5cb
  40df89:	shr    dh,cl
  40df8b:	adc    eax,0xe0d411c8
  40df90:	add    al,BYTE PTR [eax+0x7572134]
  40df96:	in     eax,0x18
  40df98:	jns    0x40df61
  40df9a:	jns    0x40e010
  40df9c:	(bad)  
  40df9d:	jmp    0x627d:0xd7736bb1
  40dfa4:	push   edx
  40dfa5:	sub    DWORD PTR [esi+edi*4-0x79],ebx
  40dfa9:	stos   BYTE PTR es:[edi],al
  40dfaa:	mov    ah,0x5c
  40dfac:	inc    edx
  40dfad:	loop   0x40df5a
  40dfaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfb0:	ins    DWORD PTR es:[edi],dx
  40dfb1:	scas   eax,DWORD PTR es:[edi]
  40dfb2:	dec    ebx
  40dfb3:	popa   
  40dfb4:	cmp    edx,DWORD PTR [eax]
  40dfb6:	in     eax,0xd6
  40dfb8:	fisttp QWORD PTR [ebx+0x290ea46d]
  40dfbe:	and    DWORD PTR [edx+0x15279d03],esp
  40dfc4:	cs daa 
  40dfc6:	(bad)  
  40dfc7:	jne    0x40df6d
  40dfc9:	ins    DWORD PTR es:[edi],dx
  40dfca:	inc    ebx
  40dfcb:	mov    esi,0xaa3db318
  40dfd0:	jmp    0x40dfc8
  40dfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd3:	fwait
  40dfd4:	xchg   edi,eax
  40dfd5:	mov    ebp,0x78264583
  40dfda:	fist   DWORD PTR [eax-0x28]
  40dfdd:	sbb    al,0xd9
  40dfdf:	jg     0x40e042
  40dfe1:	sbb    ah,cl
  40dfe3:	in     al,0x7b
  40dfe5:	push   ds
  40dfe6:	cmp    DWORD PTR [edi-0x7f],eax
  40dfe9:	ins    BYTE PTR es:[edi],dx
  40dfea:	xchg   ebp,eax
  40dfeb:	aas    
  40dfec:	ret    0xe631
  40dfef:	lds    esi,FWORD PTR [ebx+0x2e47d6b2]
  40dff5:	loope  0x40e02f
  40dff7:	inc    ecx
  40dff8:	mov    ebp,0xe8a45929
  40dffd:	cld    
  40dffe:	jb     0x40e008
  40e000:	jmp    0xea4d276b
  40e005:	mov    dh,0x75
  40e007:	into   
  40e008:	inc    ecx
  40e009:	int3   
  40e00a:	sub    ah,BYTE PTR [edi]
  40e00c:	daa    
  40e00d:	sahf   
  40e00e:	xor    dl,BYTE PTR [ecx+0x26]
  40e011:	xchg   DWORD PTR ds:0x2d2e661f,esp
  40e017:	out    0x65,al
  40e019:	je     0x40e071
  40e01b:	pop    eax
  40e01c:	(bad)  
  40e01e:	hlt    
  40e01f:	xchg   esp,eax
  40e020:	js     0x40e082
  40e022:	and    DWORD PTR [edi-0x7bee57fe],ebx
  40e028:	retf   0xf7a2
  40e02b:	sbb    al,0xa5
  40e02d:	es fwait
  40e02f:	es sbb al,0xb
  40e032:	jnp    0x40e05a
  40e034:	js     0x40e06f
  40e036:	in     al,0x6b
  40e038:	mov    al,0xa5
  40e03a:	and    BYTE PTR [ecx],0x61
  40e03d:	ss adc al,0xcb
  40e040:	test   al,0xfe
  40e042:	(bad)  
  40e043:	in     al,0xb0
  40e045:	fcom   DWORD PTR [ebx-0x2071cf00]
  40e04b:	and    al,0xc
  40e04d:	sub    bh,BYTE PTR [eax-0x5f469f40]
  40e053:	mov    dh,0x54
  40e055:	mov    al,0x29
  40e057:	lds    esp,FWORD PTR [esi+0x578954e3]
  40e05d:	cs out dx,eax
  40e05f:	cmp    BYTE PTR [edx-0x70],0xab
  40e063:	jecxz  0x40e0aa
  40e065:	sub    al,0xd5
  40e067:	les    eax,FWORD PTR [ecx+0x3c13e87c]
  40e06d:	and    BYTE PTR [edi-0x40],cl
  40e070:	mov    eax,0xc72d332c
  40e075:	in     al,0xf8
  40e077:	stc    
  40e078:	sub    ch,BYTE PTR ds:0xcc38b47
  40e07e:	xchg   dl,ch
  40e080:	cmp    DWORD PTR [edi-0x18],edi
  40e083:	shl    ebx,0xa
  40e086:	rcr    BYTE PTR [edi+esi*4-0x62],0x84
  40e08b:	int3   
  40e08c:	cs mov esp,0x2432ca61
  40e092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e093:	adc    BYTE PTR [esi-0x32],0x23
  40e097:	cwde   
  40e098:	and    ebx,ebx
  40e09a:	mov    esi,DWORD PTR [esi]
  40e09c:	inc    edi
  40e09d:	rcr    DWORD PTR [ecx-0x449d5438],1
  40e0a3:	mov    ds:0x562576fe,al
  40e0a8:	lods   eax,DWORD PTR ds:[esi]
  40e0a9:	adc    ah,ah
  40e0ab:	push   ds
  40e0ac:	and    BYTE PTR [edx-0x46],al
  40e0af:	js     0x40e0f1
  40e0b1:	pusha  
  40e0b2:	and    eax,0xc130d47a
  40e0b7:	scas   eax,DWORD PTR es:[edi]
  40e0b8:	mov    ebp,es
  40e0ba:	fldenv [edx-0x38]
  40e0bd:	fisttp QWORD PTR [edi+0x64]
  40e0c0:	ficom  DWORD PTR [esi-0xd95a622]
  40e0c6:	stos   BYTE PTR es:[edi],al
  40e0c7:	push   ds
  40e0c8:	xor    esi,DWORD PTR [ecx]
  40e0ca:	mov    cl,0x1
  40e0cc:	mov    bh,0xa2
  40e0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0cf:	les    ebx,FWORD PTR [edx+0xef0c6b2]
  40e0d5:	push   ss
  40e0d6:	aam    0xc9
  40e0d8:	mov    ebp,edx
  40e0da:	pop    edi
  40e0db:	xor    al,0x1f
  40e0dd:	loope  0x40e0dc
  40e0df:	xchg   dl,dh
  40e0e1:	adc    BYTE PTR [edx],al
  40e0e3:	outs   dx,BYTE PTR ds:[esi]
  40e0e4:	fisubr DWORD PTR [esi-0x5d]
  40e0e7:	cmp    ebp,DWORD PTR [edx+eiz*4]
  40e0ea:	sbb    al,0x1f
  40e0ec:	push   edx
  40e0ed:	out    dx,al
  40e0ee:	lods   eax,DWORD PTR ds:[esi]
  40e0ef:	fsubr  DWORD PTR ss:[ebx]
  40e0f2:	repz mov dl,0xe4
  40e0f5:	mov    dh,BYTE PTR [esi]
  40e0f7:	fwait
  40e0f8:	dec    esi
  40e0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fa:	inc    eax
  40e0fb:	out    dx,al
  40e0fc:	dec    esi
  40e0fd:	stos   DWORD PTR es:[edi],eax
  40e0fe:	adc    dh,ah
  40e100:	adc    al,0xb0
  40e102:	inc    edi
  40e103:	dec    edi
  40e104:	mov    dl,0x63
  40e106:	sub    eax,0x358c2132
  40e10b:	push   ss
  40e10c:	mov    DWORD PTR [ebp+0x75],edi
  40e10f:	push   ecx
  40e110:	add    esi,DWORD PTR [edi]
  40e112:	xchg   esi,eax
  40e113:	cs fcmovnu st,st(6)
  40e116:	and    BYTE PTR [edx-0x21],dh
  40e119:	sahf   
  40e11a:	cmp    esi,DWORD PTR [edx-0x31dd58d4]
  40e120:	push   0xb21713cc
  40e125:	hlt    
  40e126:	xlat   BYTE PTR ds:[ebx]
  40e127:	adc    ebp,DWORD PTR [esi+0x2a4d9890]
  40e12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12e:	js     0x40e0be
  40e130:	sub    al,bl
  40e132:	push   ebp
  40e133:	and    ah,cl
  40e135:	sti    
  40e136:	inc    esp
  40e137:	shl    ah,0xea
  40e13a:	ret    0x4461
  40e13d:	imul   esi,DWORD PTR [ecx-0x4c857acc],0xffffffb4
  40e144:	jo     0x40e13f
  40e146:	ins    DWORD PTR es:[edi],dx
  40e147:	adc    eax,DWORD PTR [esi-0x5731dd9d]
  40e14d:	rcr    BYTE PTR [edi-0xf],1
  40e150:	test   eax,0xe0ab9481
  40e155:	add    al,0xf
  40e157:	test   al,0x9c
  40e159:	mov    edx,0x243b7abe
  40e15e:	xchg   esi,eax
  40e15f:	jnp    0x40e1bb
  40e161:	add    ebx,DWORD PTR [ebx]
  40e163:	pop    es
  40e164:	mov    ebx,0x14971aaa
  40e169:	cli    
  40e16a:	dec    esi
  40e16b:	and    al,0x32
  40e16d:	mul    BYTE PTR [ebp-0x157ab149]
  40e173:	lahf   
  40e174:	push   cs
  40e175:	mov    ds:0xe56af5ae,al
  40e17a:	cmc    
  40e17b:	in     al,dx
  40e17c:	(bad)  
  40e17d:	fadd   DWORD PTR [edx+0x28]
  40e180:	xlat   BYTE PTR ds:[ebx]
  40e181:	add    DWORD PTR [eax],ecx
  40e183:	imul   ecx,DWORD PTR [ebp+ebp*1+0x10567433],0xffffffa3
  40e18b:	and    bh,BYTE PTR [edi-0x2891cd14]
  40e191:	xchg   ebp,eax
  40e192:	mov    ds:0xc28abf9a,eax
  40e197:	out    dx,eax
  40e198:	lods   al,BYTE PTR ds:[esi]
  40e199:	jbe    0x40e130
  40e19b:	mov    bh,0x6b
  40e19d:	daa    
  40e19e:	mov    edx,0x76085e9a
  40e1a3:	mov    al,ds:0x8bdae72e
  40e1a8:	iret   
  40e1a9:	retf   
  40e1aa:	jge    0x40e130
  40e1ac:	cwde   
  40e1ad:	in     al,0xb8
  40e1af:	add    al,0xe5
  40e1b1:	ret    
  40e1b2:	test   BYTE PTR [edi+0x61],bl
  40e1b5:	xor    DWORD PTR [edi],ecx
  40e1b7:	cdq    
  40e1b8:	push   ecx
  40e1b9:	jg     0x40e206
  40e1bb:	mov    ah,0x4d
  40e1bd:	pop    edx
  40e1be:	xchg   esp,eax
  40e1bf:	lahf   
  40e1c0:	xchg   ecx,eax
  40e1c1:	sbb    al,0xb8
  40e1c3:	mov    bh,0x74
  40e1c5:	ret    0xeb1a
  40e1c8:	jmp    0x40e180
  40e1ca:	dec    edx
  40e1cb:	arpl   WORD PTR [edx],bx
  40e1cd:	jnp    0x40e1ae
  40e1cf:	cmp    eax,0xd1c7ae57
  40e1d4:	mov    bl,BYTE PTR [edi]
  40e1d6:	les    esi,FWORD PTR [edx+0x1d44d23c]
  40e1dc:	clc    
  40e1dd:	arpl   sp,bp
  40e1df:	sbb    ch,BYTE PTR [ebp+ebx*1-0x15b9a6da]
  40e1e6:	out    0x86,al
  40e1e8:	pop    ss
  40e1e9:	jmp    0x7069:0x13ac26c8
  40e1f0:	and    BYTE PTR [ebx+0x13cc7482],bl
  40e1f6:	and    ch,BYTE PTR [edi-0x711e1df6]
  40e1fc:	jl     0x40e1f5
  40e1fe:	clc    
  40e1ff:	out    dx,al
  40e200:	mov    DWORD PTR [ecx+edi*8-0x9b280b6],eax
  40e207:	ins    DWORD PTR es:[edi],dx
  40e208:	inc    esp
  40e209:	jno    0x40e199
  40e20b:	xchg   edx,eax
  40e20c:	dec    esi
  40e20d:	mov    esi,0x5cfb8b7f
  40e212:	loopne 0x40e197
  40e214:	ins    DWORD PTR es:[edi],dx
  40e215:	cmp    al,0x96
  40e217:	xchg   esi,eax
  40e218:	rcl    dl,0x6e
  40e21b:	push   cs
  40e21c:	out    dx,al
  40e21d:	int    0x15
  40e21f:	popa   
  40e220:	in     al,dx
  40e221:	ja     0x40e1f9
  40e223:	jmp    0xa6cc:0x7a9c03c6
  40e22a:	je     0x40e241
  40e22c:	ror    edi,0xb4
  40e22f:	clc    
  40e230:	div    BYTE PTR [esi-0x80]
  40e233:	les    eax,FWORD PTR [ecx]
  40e235:	mov    ds:0x51eeb7da,eax
  40e23a:	shl    DWORD PTR [ecx+0xaf5a3ec],cl
  40e240:	pop    eax
  40e241:	loop   0x40e26e
  40e243:	iret   
  40e244:	outs   dx,BYTE PTR ds:[esi]
  40e245:	push   ss
  40e246:	fsubr  DWORD PTR [ecx]
  40e248:	sbb    ecx,edx
  40e24a:	lods   al,BYTE PTR ds:[esi]
  40e24b:	out    dx,al
  40e24c:	call   0x3500:0xcf8ada94
  40e253:	test   BYTE PTR [eax+0xe14e09f],0xbf
  40e25a:	(bad)  
  40e25c:	and    DWORD PTR [ebx+0x369a1327],ecx
  40e262:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e264:	fwait
  40e265:	bound  esp,QWORD PTR [ebx]
  40e267:	xlat   BYTE PTR ds:[ebx]
  40e268:	and    eax,0x90523321
  40e26d:	add    BYTE PTR [ecx+0x1],al
  40e270:	mov    WORD PTR [esi-0x1063a3b9],es
  40e276:	test   DWORD PTR [esp+ebx*1],0xbd2fd63e
  40e27d:	jns    0x40e27a
  40e27f:	cs call 0x3ec8:0xd89d33dc
  40e287:	jg     0x40e29a
  40e289:	dec    eax
  40e28a:	mov    ds:0x48783f39,al
  40e28f:	mov    dl,0xaf
  40e291:	fdivr  QWORD PTR [ecx+ebx*2+0x55e814e0]
  40e298:	aas    
  40e299:	inc    ebp
  40e29a:	(bad)  [ebx+eax*1]
  40e29d:	pop    eax
  40e29e:	xchg   esp,eax
  40e29f:	and    BYTE PTR [edi],ch
  40e2a1:	daa    
  40e2a2:	push   ds
  40e2a3:	push   cs
  40e2a4:	mov    eax,ds:0x418e05d6
  40e2a9:	js     0x40e293
  40e2ab:	mov    BYTE PTR [esi-0x3f],dh
  40e2ae:	dec    DWORD PTR [ebp+eiz*1+0x49d932b6]
  40e2b5:	xchg   edi,eax
  40e2b6:	loope  0x40e26b
  40e2b8:	iret   
  40e2b9:	jmp    0xadffb6d5
  40e2be:	xchg   esi,eax
  40e2bf:	in     al,dx
  40e2c0:	repnz sbb eax,DWORD PTR gs:[edx+0x41]
  40e2c5:	sbb    eax,0x1d227c3f
  40e2ca:	add    BYTE PTR [ebx],ch
  40e2cc:	inc    eax
  40e2cd:	push   es
  40e2ce:	push   es
  40e2cf:	lods   al,BYTE PTR ds:[esi]
  40e2d0:	je     0x40e2df
  40e2d2:	mov    ecx,0x937b0f1d
  40e2d7:	cmp    BYTE PTR [edx-0x29],0xca
  40e2db:	fsub   st(1),st
  40e2dd:	add    al,0x35
  40e2df:	test   eax,0x5b67ecfe
  40e2e4:	fcmovnu st,st(1)
  40e2e6:	retf   
  40e2e7:	sub    BYTE PTR [eax+edi*4],0xc6
  40e2eb:	cs xor dh,ah
  40e2ee:	jmp    0x77fa:0xae065763
  40e2f5:	sub    al,0x2e
  40e2f7:	jle    0x40e35a
  40e2f9:	add    al,BYTE PTR [eax]
  40e2fb:	cmp    bh,BYTE PTR ds:0x7c39b214
  40e301:	movlps xmm6,QWORD PTR [ebx+0x5b]
  40e305:	test   DWORD PTR [ebp+0x1e6f82c8],esp
  40e30b:	xchg   esp,eax
  40e30c:	aam    0xd8
  40e30e:	loop   0x40e315
  40e310:	sub    DWORD PTR [eax+0x1a19190b],ebp
  40e316:	push   ds
  40e317:	sub    BYTE PTR [edx],al
  40e319:	cmp    BYTE PTR [eax+0x76b74bcc],ch
  40e31f:	int    0xd0
  40e321:	inc    edx
  40e322:	mov    edx,0x29a00126
  40e327:	dec    edx
  40e328:	push   0xd4c4af95
  40e32d:	pop    es
  40e32e:	dec    ebx
  40e32f:	add    al,BYTE PTR [ebx+ecx*4+0x1098854b]
  40e336:	push   esp
  40e337:	into   
  40e338:	xchg   DWORD PTR [esp+ecx*2],edi
  40e33b:	xchg   edi,eax
  40e33c:	add    eax,DWORD PTR [edi]
  40e33e:	add    ecx,DWORD PTR [esi+eiz*1+0x79c85b23]
  40e345:	sahf   
  40e346:	ins    DWORD PTR es:[edi],dx
  40e347:	outs   dx,DWORD PTR ds:[esi]
  40e348:	sub    ebx,ebx
  40e34a:	pop    esp
  40e34b:	ret    
  40e34c:	cmp    BYTE PTR [ecx+0x39d17272],ah
  40e352:	dec    ebx
  40e353:	jo     0x40e392
  40e355:	pop    eax
  40e356:	stos   BYTE PTR es:[edi],al
  40e357:	adc    ch,dl
  40e359:	mov    bl,0x7f
  40e35b:	inc    esi
  40e35c:	xchg   edx,eax
  40e35d:	jne    0x40e307
  40e35f:	adc    eax,0xa271a9e6
  40e364:	lahf   
  40e365:	shr    BYTE PTR [ecx],0xc4
  40e368:	lock dec edi
  40e36a:	pop    es
  40e36b:	xchg   esi,eax
  40e36c:	jae    0x40e384
  40e36e:	adc    DWORD PTR [edx+eiz*2],eax
  40e371:	in     eax,0x7d
  40e373:	aaa    
  40e374:	retf   
  40e375:	jne    0x40e3ed
  40e377:	call   0xe9d5:0xb7fd7773
  40e37e:	sub    dh,0xa7
  40e381:	(bad)  
  40e382:	push   edi
  40e383:	adc    DWORD PTR [edx+0x18f30167],esp
  40e389:	or     DWORD PTR [edx-0x68d8fe21],ebp
  40e38f:	lock xchg ebx,eax
  40e391:	jb     0x40e405
  40e393:	imul   DWORD PTR [esi+0x5e]
  40e396:	xor    DWORD PTR [eax],edx
  40e398:	cwde   
  40e399:	or     BYTE PTR [esi-0x6025b901],al
  40e39f:	rol    DWORD PTR ds:[eax],cl
  40e3a2:	push   0x64
  40e3a4:	retf   0xcf21
  40e3a7:	addr16 sbb al,0x32
  40e3aa:	test   eax,0x9610b10
  40e3af:	push   0x3eaaea69
  40e3b4:	adc    eax,0x3f518cab
  40e3b9:	jmp    0xb27c:0xb78ce8df
  40e3c0:	daa    
  40e3c1:	inc    esp
  40e3c2:	je     0x40e393
  40e3c4:	rcl    BYTE PTR [esi+eiz*1-0x67],cl
  40e3c8:	das    
  40e3c9:	nop
  40e3ca:	test   eax,0xdf42716a
  40e3cf:	jmp    0xfb14:0x7a06b51e
  40e3d6:	sbb    eax,0x5a65006
  40e3db:	sub    DWORD PTR [edx+edx*8-0x6e],0x24
  40e3e0:	push   ecx
  40e3e1:	and    edi,esi
  40e3e3:	vpmacsdqh xmm3,xmm2,xmm1,xmm7
  40e3e9:	enter  0x12a2,0x5a
  40e3ed:	adc    bl,BYTE PTR ds:0x8769e292
  40e3f3:	cld    
  40e3f4:	mov    ah,0xb3
  40e3f6:	pop    ebx
  40e3f7:	outs   dx,DWORD PTR ds:[esi]
  40e3f8:	fmul   QWORD PTR ds:0xe8f484d
  40e3fe:	sub    ch,BYTE PTR [edi+0x786f89da]
  40e404:	rcl    DWORD PTR [edx],cl
  40e406:	scas   al,BYTE PTR es:[edi]
  40e407:	add    al,0xce
  40e409:	add    ch,BYTE PTR [ecx-0x4d0f6c73]
  40e40f:	push   edi
  40e410:	or     DWORD PTR [ebx+0x6fce69db],0xffffff93
  40e417:	sti    
  40e418:	inc    DWORD PTR [edx-0x3bef856c]
  40e41e:	mov    ebx,0xcfa52167
  40e423:	mov    ds:0x485af20c,eax
  40e428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e429:	pushf  
  40e42a:	sub    al,0xd2
  40e42c:	and    eax,eax
  40e42e:	loopne 0x40e3e2
  40e430:	retf   
  40e431:	cmp    ecx,DWORD PTR [esi+0x3aae7353]
  40e437:	(bad)  
  40e438:	mov    ebx,0x43f6eb73
  40e43d:	out    0x97,eax
  40e43f:	imul   ebx,DWORD PTR [edx-0x6382eb72],0x32
  40e446:	mov    eax,gs
  40e448:	data16 ficomp WORD PTR [ebp-0x7becfbfd]
  40e44f:	sahf   
  40e450:	mov    DWORD PTR [esi],esi
  40e452:	stc    
  40e453:	mov    al,0x3b
  40e455:	jmp    0x9d42:0xd9dfef36
  40e45c:	xor    DWORD PTR [ebx],eax
  40e45e:	aas    
  40e45f:	test   cl,bl
  40e461:	test   eax,0x315709f7
  40e466:	or     eax,0x311552df
  40e46b:	mov    ds:0xfb61be,eax
  40e470:	mov    ch,0xf1
  40e472:	xor    bh,BYTE PTR [ebx*2+0x7c89203b]
  40e479:	dec    ebx
  40e47a:	stos   BYTE PTR es:[edi],al
  40e47b:	sahf   
  40e47c:	pop    esi
  40e47d:	rcr    eax,cl
  40e47f:	xchg   ebp,eax
  40e480:	mov    cl,0xcb
  40e482:	pushf  
  40e483:	xor    al,BYTE PTR [ebx+0x23654c3a]
  40e489:	or     ecx,DWORD PTR [edi+0x4e]
  40e48c:	adc    ebx,eax
  40e48e:	shl    DWORD PTR [esi+0x7b51d5e9],0x39
  40e495:	dec    edx
  40e496:	stos   DWORD PTR es:[edi],eax
  40e497:	cmp    eax,0x29393a8
  40e49c:	mov    ebx,0xaf260c4a
  40e4a1:	push   0xffffffab
  40e4a3:	xchg   edi,eax
  40e4a4:	ret    0x768
  40e4a7:	add    eax,0x560a351a
  40e4ac:	cs pusha 
  40e4ae:	jae    0x40e509
  40e4b0:	(bad)  
  40e4b1:	jmp    0x40e4ee
  40e4b3:	mov    edx,0x9e9f9617
  40e4b9:	test   eax,0xb39bf4b7
  40e4be:	movaps XMMWORD PTR [ebx+ebx*4+0x4ea5bb9d],xmm4
  40e4c6:	imul   eax,DWORD PTR [ebx],0xa9c43b62
  40e4cc:	addr16 sysret 
  40e4cf:	or     ebx,esp
  40e4d1:	fidiv  DWORD PTR [ebp+0x6c9e7e92]
  40e4d7:	mov    ebp,0xa9944b0e
  40e4dc:	mov    edi,0xb629b815
  40e4e1:	mov    dh,0x8d
  40e4e3:	cmp    DWORD PTR [edx-0x49b2fb2b],ebp
  40e4e9:	jp     0x40e555
  40e4eb:	sbb    DWORD PTR [ebp-0x24],ecx
  40e4ee:	push   eax
  40e4ef:	xor    edx,edi
  40e4f1:	jns    0x40e548
  40e4f3:	jnp    0x40e53a
  40e4f5:	popf   
  40e4f6:	push   ds
  40e4f7:	sub    DWORD PTR [ebp-0x342af63e],0xfddc1a6a
  40e501:	jbe    0x40e56e
  40e503:	add    DWORD PTR [edi+0x0],ecx
  40e506:	shl    DWORD PTR [esi-0x359a4443],cl
  40e50c:	sbb    eax,0x94072b07
  40e511:	addr16 loop 0x40e4bd
  40e514:	push   ebp
  40e515:	mov    bl,0x68
  40e517:	mov    al,0xac
  40e519:	ds pop ds
  40e51b:	and    ah,BYTE PTR ds:0x96cb613d
  40e521:	fucom  st(6)
  40e523:	xchg   edi,eax
  40e524:	fisubr WORD PTR [ecx+0xd0debb8]
  40e52a:	das    
  40e52b:	outs   dx,BYTE PTR ds:[esi]
  40e52c:	dec    edi
  40e52d:	pop    ss
  40e52e:	adc    dh,ch
  40e530:	shl    DWORD PTR [edx+0x4e],1
  40e533:	xchg   edi,eax
  40e534:	loopne 0x40e4ff
  40e536:	push   ebx
  40e537:	inc    ebx
  40e538:	pop    ecx
  40e539:	shl    BYTE PTR [eax-0x40],0x55
  40e53d:	cdq    
  40e53e:	adc    ch,dl
  40e540:	adc    DWORD PTR [esp+eax*8+0x74],ebx
  40e544:	mov    ebx,0xfa26d7d8
  40e549:	shr    BYTE PTR [ebx-0x46720a6f],1
  40e54f:	xchg   DWORD PTR ds:0xe1c578f0,ebx
  40e555:	iret   
  40e556:	sbb    ecx,esi
  40e558:	mov    al,0xbc
  40e55a:	cmc    
  40e55b:	inc    edx
  40e55c:	jp     0x40e5d4
  40e55e:	xor    DWORD PTR [edx-0x3e],0xfffffff1
  40e562:	jb     0x40e59e
  40e564:	popa   
  40e565:	out    dx,al
  40e566:	fcomi  st,st(1)
  40e568:	pop    ebp
  40e569:	xchg   edx,eax
  40e56a:	mov    ds:0x85e5ca5c,eax
  40e56f:	xlat   BYTE PTR ds:[ebx]
  40e570:	add    al,0xba
  40e572:	aam    0x88
  40e574:	xlat   BYTE PTR ds:[ebx]
  40e575:	vxorps xmm3,xmm7,XMMWORD PTR [bp+di-0x4b74]
  40e57d:	ret    0x12b0
  40e580:	inc    edi
  40e581:	test   eax,0xc0400257
  40e586:	xchg   esp,eax
  40e587:	mov    eax,ds:0x2499e35c
  40e58c:	mov    ebp,0x99bf46e9
  40e591:	shl    BYTE PTR [eax+edx*2-0x338b2882],0xa5
  40e599:	sub    BYTE PTR [ebp-0x1f],ah
  40e59c:	xor    DWORD PTR [ebp-0xd15a5f7],edx
  40e5a2:	and    DWORD PTR [ebp-0x28],ecx
  40e5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a6:	in     eax,dx
  40e5a7:	je     0x40e599
  40e5a9:	out    0xeb,eax
  40e5ab:	mov    eax,ds:0x1912edc9
  40e5b0:	pop    es
  40e5b1:	pop    edi
  40e5b2:	pop    eax
  40e5b3:	adc    DWORD PTR [ecx+0x7162c9df],ebx
  40e5b9:	xchg   ecx,eax
  40e5ba:	(bad)  
  40e5bb:	dec    edx
  40e5bc:	in     eax,dx
  40e5bd:	inc    eax
  40e5be:	mov    eax,edx
  40e5c0:	ins    DWORD PTR es:[edi],dx
  40e5c1:	(bad)
  40e5c4:	jbe    0x40e645
  40e5c6:	scas   eax,DWORD PTR es:[edi]
  40e5c7:	adc    esi,esp
  40e5c9:	jecxz  0x40e62d
  40e5cb:	test   DWORD PTR [ecx-0x779b416b],0x8863b535
  40e5d5:	push   ebp
  40e5d6:	mov    al,0x30
  40e5d8:	push   edx
  40e5d9:	mov    bh,0x2b
  40e5db:	adc    edi,DWORD PTR [edx+0x20]
  40e5de:	push   edx
  40e5df:	dec    edx
  40e5e0:	(bad)  
  40e5e1:	adc    eax,0x29fc7a16
  40e5e6:	mov    cl,0x7a
  40e5e8:	ss inc edi
  40e5ea:	(bad)
  40e5ed:	fxch   st(5)
  40e5ef:	jns    0x40e60d
  40e5f1:	jg     0x40e57a
  40e5f3:	neg    cl
  40e5f5:	retf   
  40e5f6:	and    BYTE PTR [ebx+0x16f07e4a],0xef
  40e5fd:	sahf   
  40e5fe:	pop    edx
  40e5ff:	test   al,0x2
  40e601:	stc    
  40e602:	jl     0x40e585
  40e604:	shl    bl,1
  40e606:	pop    es
  40e607:	dec    edx
  40e608:	(bad)  
  40e609:	call   DWORD PTR [esi]
  40e60b:	cmp    eax,0xb3ef38b0
  40e610:	mov    bl,0xc1
  40e612:	adc    eax,0xf91c4626
  40e617:	das    
  40e618:	add    esi,DWORD PTR [ebp+0xf]
  40e61b:	clc    
  40e61c:	xor    eax,0x8fa23d8b
  40e621:	push   0xffffffe5
  40e623:	fsub   DWORD PTR [esi]
  40e625:	inc    edx
  40e626:	sbb    ebx,DWORD PTR [ebp-0x17]
  40e629:	loope  0x40e6a6
  40e62b:	iret   
  40e62c:	imul   DWORD PTR [edx]
  40e62e:	inc    esp
  40e62f:	enter  0x7163,0xd3
  40e633:	sbb    BYTE PTR [edi-0x7cfc6711],0x5f
  40e63a:	lods   eax,DWORD PTR ds:[esi]
  40e63b:	iret   
  40e63c:	loope  0x40e60a
  40e63e:	or     edi,DWORD PTR [edx+0x5fb32ffc]
  40e644:	push   ecx
  40e645:	push   ebx
  40e646:	add    esi,DWORD PTR [esi+0x978c24d]
  40e64c:	or     DWORD PTR [esi],ebx
  40e64e:	pop    es
  40e64f:	out    0x1c,eax
  40e651:	mov    bh,0xe8
  40e653:	mov    esp,0xe5c6c655
  40e658:	or     eax,0x33b7c630
  40e65d:	pop    eax
  40e65e:	iret   
  40e65f:	sbb    cl,dl
  40e661:	pop    ss
  40e662:	hlt    
  40e663:	sub    eax,0x53f2bc97
  40e668:	inc    esi
  40e669:	(bad)  
  40e66a:	fcmove st,st(7)
  40e66c:	fistp  QWORD PTR [esi+0x5099ce21]
  40e672:	xor    ebx,DWORD PTR [eax]
  40e674:	out    0xb1,al
  40e676:	jl     0x40e6d6
  40e678:	xchg   edi,eax
  40e679:	xor    eax,0x720bc3fd
  40e67e:	adc    DWORD PTR [edi-0x51],edx
  40e681:	cwde   
  40e682:	mov    dl,0x32
  40e684:	mov    al,0xa0
  40e686:	test   DWORD PTR [edx-0x568f41a9],ebx
  40e68c:	and    eax,0x6360a6c3
  40e691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e692:	lods   al,BYTE PTR ds:[esi]
  40e693:	xor    edi,DWORD PTR [eax+0x29]
  40e696:	mov    edx,esi
  40e698:	jl     0x40e62f
  40e69a:	std    
  40e69b:	pop    esp
  40e69c:	adc    al,0x78
  40e69e:	push   esp
  40e69f:	or     eax,0x36ef20fe
  40e6a4:	mov    dh,0x31
  40e6a6:	bound  edi,QWORD PTR ds:0x1d91c726
  40e6ac:	cmp    eax,0x3b6fba
  40e6b1:	xchg   dh,bl
  40e6b3:	xor    edi,ebp
  40e6b5:	mov    DWORD PTR [edx-0x2632dc0],eax
  40e6bb:	xchg   edi,eax
  40e6bc:	test   eax,0x40e273fb
  40e6c1:	and    dl,bl
  40e6c3:	mov    cl,0xcc
  40e6c5:	fwait
  40e6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c7:	xchg   edx,eax
  40e6c8:	stos   DWORD PTR es:[edi],eax
  40e6c9:	jle    0x40e669
  40e6cb:	clc    
  40e6cc:	aad    0xbc
  40e6ce:	and    esi,edx
  40e6d0:	ret    0xc49a
  40e6d3:	jmp    0x5334:0x9d560f47
  40e6da:	mov    db0,esi
  40e6dd:	dec    ecx
  40e6de:	pop    ecx
  40e6df:	lahf   
  40e6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e1:	repz clc 
  40e6e3:	stos   BYTE PTR es:[edi],al
  40e6e4:	sub    cl,bh
  40e6e6:	pop    edi
  40e6e7:	dec    eax
  40e6e8:	jae    0x40e745
  40e6ea:	out    dx,al
  40e6eb:	sub    DWORD PTR [ebx+0x15],eax
  40e6ee:	pusha  
  40e6ef:	xor    al,0xc5
  40e6f1:	sbb    BYTE PTR [edx],cl
  40e6f3:	fcomi  st,st(5)
  40e6f5:	inc    edx
  40e6f6:	sahf   
  40e6f7:	and    eax,0xe6f9826c
  40e6fc:	sub    al,0x65
  40e6fe:	les    edi,FWORD PTR [ebx+0x47527d99]
  40e704:	cwde   
  40e705:	sub    ebp,eax
  40e707:	jl     0x40e69b
  40e709:	push   ss
  40e70a:	cmp    DWORD PTR [eax-0x63],eax
  40e70d:	sub    BYTE PTR [eax-0x12],bl
  40e710:	ret    0x813d
  40e713:	push   cs
  40e714:	inc    ecx
  40e715:	adc    al,BYTE PTR [edx+0x5e]
  40e718:	sub    cl,bl
  40e71a:	dec    eax
  40e71b:	mov    ch,0x8e
  40e71d:	int    0x23
  40e71f:	or     al,0xd3
  40e721:	xchg   esi,eax
  40e722:	mov    ss,WORD PTR [esi]
  40e724:	stc    
  40e725:	es cdq 
  40e727:	and    al,0x3f
  40e729:	cli    
  40e72a:	add    al,0x16
  40e72c:	jp     0x40e6d5
  40e72e:	dec    eax
  40e72f:	mov    bl,0xcd
  40e731:	test   DWORD PTR [ebx+0x32],0xf2154356
  40e738:	iret   
  40e739:	pop    esp
  40e73a:	icebp  
  40e73b:	cmp    al,0x36
  40e73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e73e:	and    eax,esi
  40e740:	xlat   BYTE PTR ds:[ebx]
  40e741:	ins    DWORD PTR es:[edi],dx
  40e742:	test   DWORD PTR [ebx+eax*1],ebx
  40e745:	and    eax,ecx
  40e747:	cld    
  40e748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e749:	push   ebx
  40e74a:	fcmovb st,st(2)
  40e74c:	add    eax,0x400ec7ee
  40e751:	sub    DWORD PTR [esi+0x30],0x593f71c1
  40e758:	xchg   esi,eax
  40e759:	jae    0x40e6e3
  40e75b:	cli    
  40e75c:	sbb    BYTE PTR [eax+0x2d],dl
  40e75f:	popf   
  40e760:	push   ebp
  40e761:	mov    ds:0xa88df741,eax
  40e766:	inc    esi
  40e768:	xchg   edx,eax
  40e769:	pop    eax
  40e76a:	mov    al,ds:0x7d81d381
  40e76f:	test   BYTE PTR [edi+esi*8-0x7d0f99ad],0x37
  40e777:	ds (bad) 
  40e779:	stc    
  40e77a:	hlt    
  40e77b:	and    al,0x2d
  40e77d:	mov    esi,0xa418f1a0
  40e782:	mov    al,ds:0x95f55e6b
  40e787:	mov    cl,0x9c
  40e789:	pushf  
  40e78a:	sti    
  40e78b:	(bad)  
  40e78e:	add    DWORD PTR [ebx],ecx
  40e790:	pushf  
  40e791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e792:	retf   0x34f9
  40e795:	dec    esi
  40e796:	pop    edx
  40e797:	dec    edi
  40e798:	daa    
  40e799:	sub    eax,0x9193e9eb
  40e79e:	icebp  
  40e79f:	cmp    eax,0xdf708551
  40e7a4:	neg    BYTE PTR [ebx+0x23]
  40e7a7:	fstp   TBYTE PTR [edx-0x30]
  40e7aa:	rcl    BYTE PTR [edi],cl
  40e7ac:	add    BYTE PTR [edx],ch
  40e7ae:	hlt    
  40e7af:	push   esp
  40e7b0:	ror    BYTE PTR [eax],1
  40e7b2:	fcom   st(3)
  40e7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b5:	imul   esi,ebp,0x50
  40e7b8:	mov    edi,0xb0067005
  40e7bd:	mov    al,0x5a
  40e7bf:	pusha  
  40e7c0:	imul   eax,DWORD PTR [ecx-0x7d],0xfd0e14d4
  40e7c7:	hlt    
  40e7c8:	mov    ch,BYTE PTR [ebp+0x1d]
  40e7cb:	sahf   
  40e7cc:	pop    ds
  40e7cd:	jb     0x40e7d6
  40e7cf:	adc    ebx,ebx
  40e7d1:	push   edx
  40e7d2:	mov    dh,BYTE PTR [eax]
  40e7d4:	scas   al,BYTE PTR es:[edi]
  40e7d5:	mov    ch,0x2f
  40e7d7:	imul   ecx,DWORD PTR [esi-0x43791ea9],0x20
  40e7de:	mov    ecx,0xfb1071a9
  40e7e3:	stos   DWORD PTR es:[edi],eax
  40e7e4:	rcl    DWORD PTR [esi+edi*1],0x65
  40e7e8:	jbe    0x40e827
  40e7ea:	je     0x40e795
  40e7ec:	lods   al,BYTE PTR ds:[esi]
  40e7ed:	or     BYTE PTR [eax],bl
  40e7ef:	mov    edx,DWORD PTR [ecx]
  40e7f1:	dec    eax
  40e7f2:	(bad)  
  40e7f3:	repnz stos DWORD PTR es:[edi],eax
  40e7f5:	imul   esi,DWORD PTR [ebx+0x6b],0xbb13987a
  40e7fc:	iret   
  40e7fd:	dec    edx
  40e7fe:	sbb    DWORD PTR ds:0x1847,edx
  40e803:	mov    edx,0xb1237200
  40e808:	test   eax,0x88f346a7
  40e80d:	ds cmp edx,ebp
  40e810:	aaa    
  40e811:	out    0xe0,eax
  40e813:	outs   dx,BYTE PTR ds:[esi]
  40e814:	pop    esp
  40e815:	mov    al,0xf1
  40e817:	mov    ds:0xda9bb1ed,eax
  40e81c:	push   edi
  40e81d:	test   edi,esi
  40e81f:	jmp    0xa73c:0x7e465e9b
  40e826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e827:	push   cs
  40e828:	lods   al,BYTE PTR ds:[esi]
  40e829:	add    al,BYTE PTR [esi-0x491451af]
  40e82f:	call   0x9c3d89a1
  40e834:	outs   dx,DWORD PTR ds:[esi]
  40e835:	fnstenv [eax]
  40e837:	inc    ecx
  40e838:	jns    0x40e8b5
  40e83a:	pop    edx
  40e83b:	test   eax,0x87940f10
  40e840:	out    0xe6,eax
  40e842:	shl    ecx,0x96
  40e845:	inc    ebx
  40e846:	imul   ebp,DWORD PTR [ebp+0x2b],0x77023e58
  40e84d:	pop    eax
  40e84e:	or     ebp,DWORD PTR [ecx+0x1a7f5bf0]
  40e854:	sub    eax,0xabd70148
  40e859:	push   ds
  40e85a:	imul   BYTE PTR [esp+ebx*2-0x18]
  40e85e:	push   0x5c
  40e860:	sbb    eax,0x138ae5a7
  40e865:	loope  0x40e897
  40e867:	and    ebx,ecx
  40e869:	xor    al,0x3c
  40e86b:	sbb    bl,BYTE PTR [ebx]
  40e86d:	aad    0x10
  40e86f:	mov    al,ds:0xf13dca68
  40e874:	pop    ebx
  40e875:	xor    al,0xc8
  40e877:	std    
  40e878:	into   
  40e879:	or     al,0xc5
  40e87b:	xor    bl,BYTE PTR [eax-0x4]
  40e87e:	(bad)  
  40e87f:	xor    BYTE PTR [ecx-0x59],ch
  40e882:	ret    
  40e883:	shl    DWORD PTR [esi+0x2e],cl
  40e886:	mov    esi,0xc474b577
  40e88b:	mov    bl,BYTE PTR [esi]
  40e88d:	mov    BYTE PTR [edx+0x1542b70a],ch
  40e893:	addr16 es push edx
  40e896:	ins    BYTE PTR es:[edi],dx
  40e897:	popf   
  40e898:	or     esp,DWORD PTR [edi-0x54]
  40e89b:	out    dx,eax
  40e89c:	pop    edi
  40e89d:	sub    dh,BYTE PTR [ecx]
  40e89f:	push   es
  40e8a0:	cli    
  40e8a1:	mov    esi,0xcdbb3beb
  40e8a6:	jnp    0x40e8a0
  40e8a8:	cmp    ecx,DWORD PTR [esp+eiz*8]
  40e8ab:	mov    ds:0x213efa84,al
  40e8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b1:	cmova  edx,DWORD PTR [ebp+0x2d039afa]
  40e8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b9:	sub    esp,edi
  40e8bb:	push   ss
  40e8bc:	xor    dl,dl
  40e8be:	jg     0x40e8f9
  40e8c0:	test   eax,edx
  40e8c2:	popf   
  40e8c3:	or     eax,0xfc076f3c
  40e8c8:	pop    ds
  40e8c9:	arpl   WORD PTR [ecx+0x480acad9],di
  40e8cf:	jg     0x40e938
  40e8d1:	aam    0x1
  40e8d3:	lea    esi,[edi+0x5e]
  40e8d6:	mov    DWORD PTR [ebp+0x11],ebp
  40e8d9:	fs jno 0x40e8ad
  40e8dc:	mov    al,ds:0x4d1bb236
  40e8e1:	fiadd  WORD PTR [edx+0x29]
  40e8e4:	xor    eax,0x85b05fd6
  40e8e9:	rcl    BYTE PTR [edx-0x3],cl
  40e8ec:	stos   BYTE PTR es:[edi],al
  40e8ed:	lahf   
  40e8ee:	xor    al,0x3d
  40e8f0:	fmul   QWORD PTR [eax-0x7de78bbf]
  40e8f6:	jb     0x40e88d
  40e8f8:	std    
  40e8f9:	jp     0x40e90b
  40e8fb:	iret   
  40e8fc:	push   ebx
  40e8fd:	jo     0x40e911
  40e8ff:	inc    esi
  40e900:	into   
  40e901:	jp     0x40e955
  40e903:	(bad)  [ecx+0x49]
  40e906:	fs push ebp
  40e908:	stos   DWORD PTR es:[edi],eax
  40e909:	imul   esi,DWORD PTR [esi+0x27],0x49
  40e90d:	cmp    dl,BYTE PTR [esi-0x63bcf9e5]
  40e913:	mov    esp,0x2f67d3bf
  40e918:	shl    DWORD PTR [edx-0x19],0x5b
  40e91c:	pop    esp
  40e91d:	mov    bh,0x8a
  40e91f:	lock scas eax,DWORD PTR es:[edi]
  40e921:	push   ebx
  40e922:	cmp    al,0xe4
  40e924:	mov    ecx,?
  40e926:	ins    BYTE PTR es:[edi],dx
  40e927:	scas   eax,DWORD PTR es:[edi]
  40e928:	push   eax
  40e929:	jae    0x40e9a3
  40e92b:	dec    edi
  40e92c:	fcmovnb st,st(6)
  40e92e:	dec    edx
  40e92f:	xor    DWORD PTR [edx+0x5],esi
  40e932:	call   0x68639be8
  40e937:	xchg   ecx,eax
  40e938:	xchg   esi,eax
  40e939:	pop    edi
  40e93a:	jo     0x40e8dd
  40e93c:	xchg   ebx,eax
  40e93d:	cmp    BYTE PTR [edi],dl
  40e93f:	div    BYTE PTR [esi]
  40e941:	inc    esp
  40e942:	jnp    0x40e969
  40e944:	push   ss
  40e945:	fcom   QWORD PTR [ecx]
  40e947:	dec    edi
  40e948:	push   ebp
  40e949:	test   ebx,eax
  40e94b:	or     ch,BYTE PTR [ecx+0x38]
  40e94e:	out    0x23,al
  40e950:	mov    WORD PTR [edx+edx*4+0x5b],?
  40e954:	pop    esp
  40e955:	pop    ss
  40e956:	and    al,0xa2
  40e958:	arpl   ax,si
  40e95a:	ds stos DWORD PTR es:[edi],eax
  40e95c:	mov    ebx,0x56cfccee
  40e961:	xchg   esi,eax
  40e962:	int    0x94
  40e964:	inc    ebx
  40e965:	fst    DWORD PTR [eax]
  40e967:	cli    
  40e968:	inc    edi
  40e969:	push   ebp
  40e96a:	xchg   BYTE PTR [edx+0x71],dh
  40e96d:	xchg   ecx,eax
  40e96e:	ret    
  40e96f:	icebp  
  40e970:	out    dx,eax
  40e971:	xor    dh,BYTE PTR [eax]
  40e973:	fiadd  WORD PTR [ecx-0x52]
  40e976:	mov    al,ds:0x690fe37b
  40e97b:	xlat   BYTE PTR ds:[ebx]
  40e97c:	cmc    
  40e97d:	shr    BYTE PTR [ecx],0x1a
  40e980:	mov    edi,0x78dec5a7
  40e985:	outs   dx,DWORD PTR ds:[esi]
  40e986:	mov    DWORD PTR [eax],ebx
  40e988:	arpl   WORD PTR [edi],si
  40e98a:	fldenv [eax+ebx*1+0x75]
  40e98e:	in     eax,0xe6
  40e990:	jns    0x40e9b0
  40e992:	ret    0x8955
  40e995:	mov    cl,0x82
  40e997:	jle    0x40e9f6
  40e999:	jmp    0x45c7d5a7
  40e99e:	loopne 0x40e9d0
  40e9a0:	icebp  
  40e9a1:	or     ah,BYTE PTR [ebx+0x45055687]
  40e9a7:	into   
  40e9a8:	mov    dl,0x38
  40e9aa:	dec    esi
  40e9ab:	mov    dh,0x6b
  40e9ad:	add    BYTE PTR [edi],0xd7
  40e9b0:	pop    edx
  40e9b1:	adc    BYTE PTR [esi-0x76],0x41
  40e9b5:	cdq    
  40e9b6:	aas    
  40e9b7:	lea    esp,[edi-0x2f206f55]
  40e9bd:	add    DWORD PTR ds:[eax-0xd],esp
  40e9c1:	pushf  
  40e9c2:	and    ah,BYTE PTR [edi+eiz*1-0x2e]
  40e9c6:	(bad)
  40e9ca:	ret    
  40e9cb:	push   ecx
  40e9cc:	push   ss
  40e9cd:	lods   al,BYTE PTR ds:[esi]
  40e9ce:	add    al,0xbd
  40e9d0:	jge    0x40e9e4
  40e9d2:	stc    
  40e9d3:	cli    
  40e9d4:	mov    edi,0x9428814e
  40e9d9:	or     eax,0x24144ccd
  40e9de:	inc    edi
  40e9df:	test   DWORD PTR [edx+0x7],ecx
  40e9e2:	pushf  
  40e9e3:	inc    edx
  40e9e4:	rcl    ecx,1
  40e9e6:	mov    bl,0xb7
  40e9e8:	sbb    ecx,esp
  40e9ea:	jmp    0x40e9f4
  40e9ec:	or     al,0x91
  40e9ee:	ds add ecx,DWORD PTR es:[ebp-0x20d5a1f7]
  40e9f6:	mov    edi,0x61697429
  40e9fb:	mov    bl,BYTE PTR ds:[eax-0x7c38ff56]
  40ea02:	pop    esi
  40ea03:	pop    edi
  40ea04:	add    bh,BYTE PTR [ebx+0x3fa249a]
  40ea0a:	cmp    bh,BYTE PTR [esi+0x163a950d]
  40ea10:	and    DWORD PTR [eax],eax
  40ea12:	sti    
  40ea13:	xor    BYTE PTR [ecx],ah
  40ea15:	pusha  
  40ea16:	cmc    
  40ea17:	retf   
  40ea18:	dec    ebx
  40ea19:	lds    ebp,FWORD PTR [ebp+eiz*1-0x12a4c79b]
  40ea20:	adc    eax,0x44a813ca
  40ea25:	test   al,0xd4
  40ea27:	xor    esp,DWORD PTR [eax]
  40ea29:	in     al,dx
  40ea2a:	mov    edi,0xb8192cce
  40ea2f:	enter  0xcf91,0x65
  40ea33:	aad    0xc6
  40ea35:	pusha  
  40ea36:	mov    esp,0xa4d48545
  40ea3b:	(bad)  
  40ea3d:	pushf  
  40ea3e:	cmp    ecx,esp
  40ea40:	adc    dl,BYTE PTR [ebx+0x479a7834]
  40ea46:	retf   
  40ea47:	shl    DWORD PTR ds:0xe9f142a,1
  40ea4d:	or     DWORD PTR [edi+0x283db865],esi
  40ea53:	ret    0xee01
  40ea56:	mov    WORD PTR [ebx+0x6e],gs
  40ea59:	inc    ebx
  40ea5a:	ins    BYTE PTR es:[edi],dx
  40ea5b:	sbb    BYTE PTR [ebp-0x3df191ff],dh
  40ea61:	jl     0x40ea14
  40ea63:	pusha  
  40ea64:	cld    
  40ea65:	push   edi
  40ea66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea67:	stc    
  40ea68:	pushf  
  40ea69:	nop
  40ea6a:	pop    eax
  40ea6b:	xchg   esi,eax
  40ea6c:	mov    ah,0x91
  40ea6e:	mov    ah,0x76
  40ea70:	enter  0xf892,0xef
  40ea74:	sti    
  40ea75:	dec    edx
  40ea76:	sub    eax,0x6ae8be1a
  40ea7b:	jb     0x40ea16
  40ea7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea7e:	and    al,0x4d
  40ea80:	sub    BYTE PTR [esi+0x3e38844f],al
  40ea86:	adc    BYTE PTR [edx+0x1359c9ee],al
  40ea8c:	mov    dh,BYTE PTR [edx-0x5917475f]
  40ea92:	and    bh,BYTE PTR [edx+0x2f]
  40ea95:	lea    ebx,[edx-0x289f116b]
  40ea9b:	jg     0x40eaff
  40ea9d:	scas   al,BYTE PTR es:[edi]
  40ea9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9f:	mov    esp,0x1ab9831f
  40eaa4:	sti    
  40eaa5:	les    edi,FWORD PTR [ebp-0x18]
  40eaa8:	out    dx,eax
  40eaa9:	gs dec esi
  40eaab:	lods   al,BYTE PTR ds:[esi]
  40eaac:	cwde   
  40eaad:	call   0x7b555038
  40eab2:	idiv   BYTE PTR [ebp+0x46]
  40eab5:	push   ss
  40eab6:	mov    dh,0x60
  40eab8:	add    BYTE PTR [ecx],bh
  40eaba:	push   ebx
  40eabb:	ret    
  40eabc:	push   esi
  40eabd:	push   edi
  40eabe:	xchg   DWORD PTR [ebp+0x1bc328e9],esi
  40eac4:	cli    
  40eac5:	jle    0x40eb1c
  40eac7:	add    DWORD PTR [ecx+0x6edfe527],edx
  40eacd:	xchg   ebp,eax
  40eace:	aas    
  40eacf:	fst    QWORD PTR [ebp-0xe]
  40ead2:	call   0x7034:0x6b2e20fa
  40ead9:	(bad)  
  40eada:	push   0xa
  40eadc:	je     0x40eb12
  40eade:	mulps  xmm4,XMMWORD PTR [ecx]
  40eae1:	std    
  40eae2:	out    0xe4,al
  40eae4:	lahf   
  40eae5:	lahf   
  40eae6:	push   ebx
  40eae7:	test   eax,0xd9ace8c6
  40eaec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaed:	pop    esp
  40eaee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaef:	fisub  DWORD PTR [edx+ebp*8-0x50]
  40eaf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf4:	jl     0x40ea8b
  40eaf6:	or     ch,BYTE PTR [edx+0x1eac8bd3]
  40eafc:	addr16 pop esi
  40eafe:	std    
  40eaff:	add    DWORD PTR [edi],esp
  40eb01:	mov    ecx,0xa13dfd3d
  40eb06:	jmp    0x4dad6b08
  40eb0b:	sar    DWORD PTR [edx],cl
  40eb0d:	jmp    DWORD PTR [esi]
  40eb0f:	dec    eax
  40eb10:	sub    edx,DWORD PTR [edi-0x4a227b8b]
  40eb16:	pop    esp
  40eb17:	mov    al,ds:0x6ba4d226
  40eb1c:	jecxz  0x40eafb
  40eb1e:	pop    es
  40eb1f:	and    al,0x46
  40eb21:	inc    ebx
  40eb22:	mov    al,0x98
  40eb24:	lods   al,BYTE PTR ds:[esi]
  40eb25:	or     BYTE PTR [eax+0x36],dl
  40eb28:	mov    eax,ds:0x58ded772
  40eb2d:	mov    al,ds:0xe393e94e
  40eb32:	xor    al,ah
  40eb34:	cmp    ebp,edx
  40eb36:	je     0x40eb04
  40eb38:	mov    cs,WORD PTR [eax]
  40eb3a:	add    al,0x76
  40eb3c:	sub    DWORD PTR [ebp+ebp*2-0x14ca3061],edx
  40eb43:	and    dl,BYTE PTR [esi+0x63]
  40eb46:	inc    ecx
  40eb47:	mov    ebp,DWORD PTR [ebx]
  40eb49:	mov    ds:0x4eeda22b,al
  40eb4e:	xchg   DWORD PTR [eax+0x39b5cf50],esp
  40eb54:	unpcklps xmm3,xmm1
  40eb57:	ficomp WORD PTR ds:0xd930419d
  40eb5d:	sub    al,0xcd
  40eb5f:	or     al,0x93
  40eb61:	jecxz  0x40ebc7
  40eb63:	call   DWORD PTR [ecx-0x4480a979]
  40eb69:	pop    eax
  40eb6a:	icebp  
  40eb6b:	dec    esp
  40eb6c:	pop    edx
  40eb6d:	cmp    BYTE PTR [ebx],cl
  40eb6f:	mov    eax,ds:0x3ff2658b
  40eb74:	sub    BYTE PTR [edi+0x61ee2dc0],0x6c
  40eb7b:	fdivr  DWORD PTR [esi-0x155ebc61]
  40eb81:	fwait
  40eb82:	mov    ds:0xad1178e9,al
  40eb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb88:	xor    dl,0x9c
  40eb8b:	pop    ds
  40eb8c:	(bad)  
  40eb8d:	dec    DWORD PTR [edi-0x6e57d1de]
  40eb93:	dec    eax
  40eb94:	sub    edi,DWORD PTR [edi]
  40eb96:	pop    esi
  40eb97:	sti    
  40eb98:	or     eax,0xcc16c7a3
  40eb9d:	test   bh,ah
  40eb9f:	xchg   edx,eax
  40eba0:	mov    DWORD PTR [ebx-0x3c],eax
  40eba3:	jno    0x40eb6b
  40eba5:	mov    edx,0xd04b1839
  40ebaa:	jnp    0x40ebd2
  40ebac:	mov    edx,edi
  40ebae:	sub    DWORD PTR [ecx+0x2f],esp
  40ebb1:	pop    esp
  40ebb2:	or     al,0x82
  40ebb4:	pop    edx
  40ebb5:	shr    BYTE PTR [esi+0x39c93073],1
  40ebbb:	test   al,0x8
  40ebbd:	test   eax,0x4f12e866
  40ebc2:	loope  0x40ebce
  40ebc4:	pop    ecx
  40ebc5:	mov    dh,0x1c
  40ebc7:	pop    edi
  40ebc8:	mov    esi,0xa181993e
  40ebcd:	jbe    0x40eb62
  40ebcf:	or     eax,0x2b722126
  40ebd4:	shl    DWORD PTR [eax],1
  40ebd6:	dec    edx
  40ebd7:	mov    DWORD PTR [esi-0x2d],esi
  40ebda:	and    cl,bh
  40ebdc:	mov    esi,0xe134af8e
  40ebe1:	xor    al,0xf3
  40ebe3:	(bad)  [eax-0xb32a2a8]
  40ebe9:	into   
  40ebea:	pop    edx
  40ebeb:	add    BYTE PTR [esi-0x75],0x55
  40ebef:	lahf   
  40ebf0:	pop    es
  40ebf1:	sub    DWORD PTR [edi],ebp
  40ebf3:	or     al,0x98
  40ebf5:	call   0xd189:0xd48bc804
  40ebfc:	pop    ebp
  40ebfd:	loope  0x40eb96
  40ebff:	and    DWORD PTR [edx-0x72],0x34
  40ec03:	xor    ah,BYTE PTR [ecx-0x6e]
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	jmp    0xf0b17fc1
  40ec0c:	dec    eax
  40ec0d:	or     eax,0x3bf7dfd5
  40ec12:	hlt    
  40ec13:	mov    DWORD PTR [edx-0x2c],ebp
  40ec16:	int    0x21
  40ec18:	or     ebp,ecx
  40ec1a:	loop   0x40ec18
  40ec1c:	gs mov ebp,0x3c85a6be
  40ec22:	test   al,0xb
  40ec24:	adc    ah,dh
  40ec26:	mov    ebp,DWORD PTR [eax-0x33]
  40ec29:	lods   eax,DWORD PTR ds:[esi]
  40ec2a:	mov    dh,ch
  40ec2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec2d:	adc    DWORD PTR [eax-0x37],0x7466258d
  40ec34:	(bad)
  40ec37:	adc    DWORD PTR [bx+0x39],ecx
  40ec3b:	adc    DWORD PTR ds:0x6bc8ddb7,esi
  40ec41:	nop
  40ec42:	mov    esi,0x5e11ed6b
  40ec47:	cdq    
  40ec48:	jp     0x40ecaa
  40ec4a:	in     eax,dx
  40ec4b:	rol    BYTE PTR [edi-0x2c],cl
  40ec4e:	cwde   
  40ec4f:	jae    0x40ec9e
  40ec51:	xor    BYTE PTR [edx],bl
  40ec53:	mov    ebx,0x549ac920
  40ec58:	mov    bl,BYTE PTR [edx]
  40ec5a:	mov    eax,gs:0x681139dd
  40ec60:	push   eax
  40ec61:	in     al,dx
  40ec62:	adc    esp,eax
  40ec64:	ins    BYTE PTR es:[edi],dx
  40ec65:	cli    
  40ec66:	sub    DWORD PTR [edx+0x4479e5b0],ebx
  40ec6c:	int3   
  40ec6d:	arpl   bx,sp
  40ec6f:	std    
  40ec70:	clc    
  40ec71:	add    BYTE PTR [eax+0x1a],ch
  40ec74:	mov    WORD PTR [edi],ss
  40ec76:	idiv   eax
  40ec78:	call   0x18b3b736
  40ec7d:	and    ebp,esi
  40ec7f:	arpl   WORD PTR [ecx-0x77],cx
  40ec82:	pushf  
  40ec83:	retf   
  40ec84:	jnp    0x40ec77
  40ec86:	mov    al,0xc8
  40ec88:	js     0x40ec84
  40ec8a:	fsubr  st,st(4)
  40ec8c:	add    eax,0x77b949fa
  40ec91:	jbe    0x40ec25
  40ec93:	push   0xfffffff5
  40ec95:	outs   dx,DWORD PTR ds:[esi]
  40ec96:	lahf   
  40ec97:	sar    BYTE PTR [edi],0x1a
  40ec9a:	std    
  40ec9b:	pushf  
  40ec9c:	cmp    DWORD PTR [ebp-0x51c29c20],ebx
  40eca2:	mov    ebx,0xb84fc2f6
  40eca7:	jns    0x40eca0
  40eca9:	dec    edx
  40ecaa:	cmp    ecx,DWORD PTR ds:0xdce6df27
  40ecb0:	sub    DWORD PTR [ecx],eax
  40ecb2:	mov    ah,0xc1
  40ecb4:	cmp    al,0x8d
  40ecb6:	inc    edi
  40ecb7:	mov    esp,0xc1ae80d3
  40ecbc:	cli    
  40ecbd:	dec    edi
  40ecbe:	out    0xf7,eax
  40ecc0:	call   0x94f0:0xb4723de5
  40ecc7:	or     BYTE PTR [ecx+ebx*1-0x2398bc59],bl
  40ecce:	ds cli 
  40ecd0:	lock jae 0x40ecc2
  40ecd3:	addr16 sub ecx,0x135e8fe5
  40ecda:	retf   0x8e19
  40ecdd:	pop    ebp
  40ecde:	es aam 0x19
  40ece1:	or     BYTE PTR [edx*1+0x3995e165],ah
  40ece8:	sahf   
  40ece9:	ret    0xa6ac
  40ecec:	shr    BYTE PTR ds:0x70015921,cl
  40ecf2:	leave  
  40ecf3:	mov    esi,0x53cb6ea3
  40ecf8:	mov    eax,ds:0x4c05317d
  40ecfd:	test   eax,0xf0b802f3
  40ed02:	stos   DWORD PTR es:[edi],eax
  40ed03:	and    BYTE PTR ds:0xd4821375,dl
  40ed09:	jae    0x40ed59
  40ed0b:	out    0x3f,eax
  40ed0d:	ret    
  40ed0e:	pop    ebp
  40ed0f:	enter  0x623d,0x5c
  40ed13:	pop    eax
  40ed14:	je     0x40ed62
  40ed16:	test   DWORD PTR [ecx+0x64a1de68],esp
  40ed1c:	pop    es
  40ed1d:	into   
  40ed1e:	sbb    BYTE PTR [edx],al
  40ed20:	(bad)  
  40ed21:	xchg   esi,eax
  40ed22:	rcr    DWORD PTR [eax-0xba38477],cl
  40ed28:	daa    
  40ed29:	rol    esi,cl
  40ed2b:	and    DWORD PTR [ebx+0xd],ebp
  40ed2e:	js     0x40ed34
  40ed30:	loope  0x40ecc9
  40ed32:	pinsrw mm7,esp,0x9
  40ed36:	xor    DWORD PTR [ebp+0x29],ebx
  40ed39:	lock icebp 
  40ed3b:	push   edx
  40ed3c:	rol    DWORD PTR [eax-0x65d9d8a0],0x36
  40ed43:	push   0x5c8e1de1
  40ed48:	or     eax,0xe8f47f19
  40ed4d:	push   es
  40ed4e:	pop    ss
  40ed4f:	inc    esi
  40ed50:	inc    DWORD PTR [ebx+ecx*2+0xa]
  40ed54:	sub    eax,0x7606a607
  40ed59:	outs   dx,BYTE PTR ds:[esi]
  40ed5a:	cmp    bh,BYTE PTR [ebx]
  40ed5c:	test   al,0x37
  40ed5e:	bound  dx,DWORD PTR [ebx-0x5a]
  40ed62:	ss scas al,BYTE PTR es:[edi]
  40ed64:	pusha  
  40ed65:	in     eax,dx
  40ed66:	sub    al,0xae
  40ed68:	cwde   
  40ed69:	xor    ecx,0x59a0ebaf
  40ed6f:	adc    ah,BYTE PTR [esp+esi*8]
  40ed72:	lock fdivp st(7),st
  40ed75:	clc    
  40ed76:	pop    ebp
  40ed77:	xor    cl,BYTE PTR [ebp+0x35bffe46]
  40ed7d:	in     eax,dx
  40ed7e:	pop    edx
  40ed7f:	iret   
  40ed80:	sub    ebx,DWORD PTR [esp+edi*2+0x64]
  40ed84:	mov    eax,0x5efdd47
  40ed89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed8a:	fistp  DWORD PTR [eax]
  40ed8c:	and    bh,bl
  40ed8e:	dec    eax
  40ed8f:	or     BYTE PTR [ecx-0x7b2b18e3],0xc4
  40ed96:	shl    DWORD PTR [edx],cl
  40ed98:	xchg   ebp,eax
  40ed9a:	cmp    ebx,DWORD PTR [edi]
  40ed9c:	sbb    BYTE PTR [esi-0x14],al
  40ed9f:	repz push ebp
  40eda1:	push   ss
  40eda2:	loopne 0x40ed9e
  40eda4:	adc    edi,DWORD PTR [esi-0x6a]
  40eda7:	enter  0xd914,0x24
  40edab:	cmp    eax,0xbf5faf86
  40edb0:	popa   
  40edb1:	int    0xc2
  40edb3:	scas   eax,DWORD PTR es:[edi]
  40edb4:	dec    esp
  40edb5:	mov    dh,0xc8
  40edb7:	leave  
  40edb8:	mov    bl,0x39
  40edba:	and    al,0x82
  40edbc:	gs in  eax,0xde
  40edbf:	and    al,0xd2
  40edc1:	mov    esp,0x4234171c
  40edc6:	sahf   
  40edc7:	pop    es
  40edc8:	inc    BYTE PTR ds:0x983a7e81
  40edce:	dec    edi
  40edcf:	pop    ds
  40edd0:	mov    edi,cs
  40edd2:	add    DWORD PTR [eax+0x42],esp
  40edd5:	stc    
  40edd6:	(bad)  
  40edd7:	pop    ss
  40edd8:	jae    0x40ed82
  40edda:	out    0x78,eax
  40eddc:	add    al,0x43
  40edde:	inc    ecx
  40eddf:	xor    al,0xb6
  40ede1:	retf   
  40ede2:	setl   BYTE PTR [ecx]
  40ede5:	adc    ebx,DWORD PTR ds:0x1483f884
  40edeb:	sbb    al,0x54
  40eded:	inc    ecx
  40edee:	hlt    
  40edef:	mov    bl,0xef
  40edf1:	call   0xef706abf
  40edf6:	sti    
  40edf7:	dec    esi
  40edf8:	call   0xf123:0xe749e1c1
  40edff:	push   ebx
  40ee00:	pop    edi
  40ee01:	in     al,dx
  40ee02:	repz pop ds
  40ee04:	inc    esp
  40ee05:	getsec 
  40ee07:	test   al,0xcb
  40ee09:	pop    ds
  40ee0a:	or     al,0xbd
  40ee0c:	push   ebx
  40ee0d:	mov    cl,0x1d
  40ee0f:	xlat   BYTE PTR ds:[ebx]
  40ee10:	jne    0x40ee3b
  40ee12:	push   ss
  40ee13:	das    
  40ee14:	jmp    0xef9210f7
  40ee19:	aad    0x1
  40ee1b:	adc    eax,0x99576fab
  40ee20:	out    dx,eax
  40ee21:	mov    DWORD PTR [esi],esi
  40ee23:	adc    DWORD PTR [edi],0x6c1c2fde
  40ee29:	pop    eax
  40ee2a:	aaa    
  40ee2b:	popf   
  40ee2c:	int3   
  40ee2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee2e:	mov    DWORD PTR [ebx],ecx
  40ee30:	(bad)  
  40ee31:	jne    0x40ee30
  40ee33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee34:	and    al,BYTE PTR [edi-0x552555bd]
  40ee3a:	loop   0x40edd1
  40ee3c:	or     dh,ch
  40ee3e:	push   ebp
  40ee3f:	jnp    0x40ee1f
  40ee41:	jmp    0x40ee81
  40ee43:	mov    ds:0x62d68411,eax
  40ee48:	push   0xfc426a6b
  40ee4d:	and    eax,0x137c257c
  40ee52:	fisubr WORD PTR [eax]
  40ee54:	div    BYTE PTR [esi+0x3]
  40ee57:	js     0x40ee44
  40ee59:	xchg   esi,eax
  40ee5a:	xchg   ecx,eax
  40ee5b:	das    
  40ee5c:	int    0x43
  40ee5e:	or     eax,0x7a9a6e83
  40ee63:	iret   
  40ee64:	pop    es
  40ee65:	pop    eax
  40ee66:	jmp    0xa5d3:0x90da1094
  40ee6d:	or     DWORD PTR ds:0xbd54dc77,0x59204a51
  40ee77:	add    BYTE PTR [esi-0x6318cc52],cl
  40ee7d:	sub    al,BYTE PTR [ecx+0x4f]
  40ee80:	sub    al,0xb
  40ee82:	inc    esp
  40ee83:	(bad)  
  40ee84:	bound  esp,QWORD PTR [ebx-0x64]
  40ee87:	adc    eax,0x34186f4b
  40ee8c:	shl    BYTE PTR [ebx+0x7f],0xdd
  40ee90:	lods   eax,DWORD PTR ds:[esi]
  40ee91:	jno    0x40ee87
  40ee93:	repz pusha 
  40ee95:	pop    esp
  40ee96:	arpl   WORD PTR [ebx-0x1f],ax
  40ee99:	iret   
  40ee9a:	xor    eax,0x585b7200
  40ee9f:	sahf   
  40eea0:	and    al,0xc9
  40eea2:	pushf  
  40eea3:	push   esp
  40eea4:	dec    esp
  40eea5:	inc    ebx
  40eea6:	xlat   BYTE PTR ds:[ebx]
  40eea7:	sar    DWORD PTR [edx+eax*8],cl
  40eeaa:	imul   eax,DWORD PTR [ecx+edx*4+0x113b9e38],0x36bd7a16
  40eeb5:	repnz xor esi,edx
  40eeb8:	(bad)  
  40eeb9:	sahf   
  40eeba:	js     0x40ee57
  40eebc:	icebp  
  40eebd:	adc    cl,BYTE PTR [edi+0x13]
  40eec0:	int3   
  40eec1:	fistp  DWORD PTR [ebx]
  40eec3:	xchg   DWORD PTR [edx+0x43bbf6d1],ebx
  40eec9:	ret    
  40eeca:	(bad)  
  40eecb:	cdq    
  40eecc:	into   
  40eecd:	dec    edi
  40eece:	inc    esp
  40eecf:	inc    eax
  40eed0:	in     eax,dx
  40eed1:	ror    BYTE PTR [edi+0x4a7ad47e],0xd3
  40eed8:	retf   
  40eed9:	push   ecx
  40eeda:	mov    bl,0x5b
  40eedc:	add    eax,0x7a6d3097
  40eee1:	push   edx
  40eee2:	mov    WORD PTR [edx],ss
  40eee4:	xchg   esp,eax
  40eee5:	into   
  40eee6:	or     bl,BYTE PTR [edx]
  40eee8:	(bad)  
  40eee9:	sahf   
  40eeea:	mov    BYTE PTR [ecx-0x10],0x5c
  40eeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeef:	or     BYTE PTR [edx-0x5fd4e42e],ch
  40eef5:	mov    bh,0xba
  40eef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef8:	inc    esi
  40eef9:	dec    ecx
  40eefa:	push   ecx
  40eefb:	out    dx,al
  40eefc:	sbb    edx,esp
  40eefe:	cmp    esi,DWORD PTR [edi-0x6eeefb7d]
  40ef04:	icebp  
  40ef05:	xchg   ebp,eax
  40ef06:	jge    0x40ef31
  40ef08:	add    eax,0xb37ade47
  40ef0d:	sbb    ecx,eax
  40ef0f:	into   
  40ef10:	pop    ss
  40ef11:	idiv   BYTE PTR [ebx]
  40ef13:	(bad)  
  40ef14:	bound  esp,QWORD PTR [ebx]
  40ef16:	mov    ds:0x3b45f3bb,al
  40ef1b:	add    ch,BYTE PTR [esi-0x53e9badd]
  40ef21:	shl    al,cl
  40ef23:	in     eax,0xbb
  40ef25:	push   ebp
  40ef26:	ins    DWORD PTR es:[edi],dx
  40ef27:	cs inc edx
  40ef29:	jmp    0x7365cf29
  40ef2e:	leave  
  40ef2f:	leave  
  40ef30:	hlt    
  40ef31:	test   eax,esi
  40ef33:	pusha  
  40ef34:	das    
  40ef35:	mov    ebx,0x4cb77be6
  40ef3a:	mov    ch,0x65
  40ef3c:	sar    BYTE PTR [edx+0xc],cl
  40ef3f:	adc    bh,ch
  40ef41:	aaa    
  40ef42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef43:	pop    ss
  40ef44:	aaa    
  40ef45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef46:	mov    dl,0x15
  40ef48:	lds    ebp,FWORD PTR ds:0x6ef44dbc
  40ef4e:	jle    0x40ef95
  40ef50:	inc    esi
  40ef51:	inc    edx
  40ef52:	fidiv  DWORD PTR [edi-0x7c]
  40ef55:	inc    edi
  40ef56:	out    0xa3,al
  40ef58:	mov    al,BYTE PTR [esi-0x4e]
  40ef5b:	cmp    dl,BYTE PTR [esi]
  40ef5d:	xchg   esi,eax
  40ef5e:	jo     0x40efda
  40ef60:	fidiv  DWORD PTR [edi+0x1c7004c]
  40ef66:	and    DWORD PTR [edx+0x5096a075],eax
  40ef6c:	mov    bl,0xd8
  40ef6e:	outs   dx,DWORD PTR ds:[esi]
  40ef6f:	ss sub al,0x7b
  40ef72:	enter  0xff9e,0x2b
  40ef76:	call   0xc728becf
  40ef7b:	aad    0x3
  40ef7d:	xchg   esp,eax
  40ef7e:	add    eax,0x217ec700
  40ef83:	and    bl,BYTE PTR ds:0x4e0ccb7c
  40ef89:	jb     0x40ef43
  40ef8b:	pop    edx
  40ef8c:	std    
  40ef8d:	sub    dl,BYTE PTR [ebx]
  40ef8f:	sbb    eax,0x85356982
  40ef94:	or     edx,edx
  40ef96:	ret    
  40ef97:	imul   edi,DWORD PTR [edi],0x5e38805c
  40ef9d:	mov    edi,DWORD PTR [edi+edx*1-0x72]
  40efa1:	and    DWORD PTR [edi],edx
  40efa3:	cmp    DWORD PTR [edx+ebp*2-0x13],edx
  40efa7:	out    0x3a,al
  40efa9:	fs push esp
  40efab:	std    
  40efac:	pop    ebp
  40efad:	lds    ebx,FWORD PTR [edx-0x603efce4]
  40efb3:	arpl   WORD PTR [ebx+0x60],bp
  40efb6:	and    al,0x2
  40efb8:	popf   
  40efb9:	inc    ebx
  40efba:	sti    
  40efbb:	sbb    BYTE PTR [esi-0x2643ebb0],0xcf
  40efc2:	adc    esp,ecx
  40efc4:	jmp    0x8896999c
  40efc9:	adc    cl,BYTE PTR ds:0x4a387a99
  40efcf:	mov    ds:0x2d538881,al
  40efd4:	inc    esp
  40efd5:	test   eax,0x23d7f749
  40efda:	(bad)  
  40efdb:	movsx  di,BYTE PTR [eax+0x1]
  40efe0:	mov    ebx,0x3b50
  40efe5:	sub    di,bx
  40efe8:	mov    ebx,0x8a8c
  40efed:	xor    di,bx
  40eff0:	mov    ebx,0x4f86
  40eff5:	cmp    di,bx
  40eff8:	jne    0x40f020
  40effe:	movsx  di,BYTE PTR [eax]
  40f002:	mov    ebx,0x3b50
  40f007:	sub    di,bx
  40f00a:	mov    ebx,0x8a8c
  40f00f:	xor    di,bx
  40f012:	mov    ebx,0x4e71
  40f017:	cmp    di,bx
  40f01a:	je     0x40f030
  40f020:	mov    edi,DWORD PTR [ebp-0x10]
  40f023:	xor    edi,ecx
  40f025:	mov    ebx,esi
  40f027:	sub    ebx,edi
  40f029:	add    eax,ebx
  40f02b:	jmp    0x40efdb
  40f030:	mov    esi,DWORD PTR [ebp-0x14]
  40f033:	mov    esi,DWORD PTR [esi]
  40f035:	mov    edi,DWORD PTR [eax+0x3c]
  40f038:	lea    esi,[edi+esi*8+0x78]
  40f03c:	mov    esi,DWORD PTR [esi+eax*1]
  40f03f:	mov    DWORD PTR [ebp-0x8],esi
  40f042:	mov    esi,DWORD PTR [ebp+0x8]
  40f045:	xor    esi,ecx
  40f047:	add    esi,edx
  40f049:	mov    DWORD PTR [ebp-0x14],esi
  40f04c:	mov    esi,DWORD PTR [ebp+0x8]
  40f04f:	mov    edi,DWORD PTR [ebp-0x8]
  40f052:	xor    esi,ecx
  40f054:	add    esi,edx
  40f056:	pop    ebx
  40f057:	cmp    edi,esi
  40f059:	jne    0x40f077
  40f05f:	mov    eax,DWORD PTR [ebp+0xc]
  40f062:	xor    eax,ecx
  40f064:	mov    ecx,DWORD PTR [ebp-0x8]
  40f067:	add    eax,edx
  40f069:	imul   eax,ecx
  40f06c:	mov    DWORD PTR [ebp-0x8],eax
  40f06f:	push   DWORD PTR [ebp+0x18]
  40f072:	jmp    0x40f0cb
  40f077:	mov    ecx,DWORD PTR [ebp-0x8]
  40f07a:	add    ecx,eax
  40f07c:	mov    DWORD PTR [ebp-0x14],ecx
  40f07f:	mov    ecx,DWORD PTR [ebp-0x14]
  40f082:	mov    ecx,DWORD PTR [ecx+0xc]
  40f085:	movsx  cx,BYTE PTR [ecx+eax*1]
  40f08a:	mov    edx,0x3b50
  40f08f:	sub    cx,dx
  40f092:	mov    edx,0x8a8c
  40f097:	xor    cx,dx
  40f09a:	mov    edx,0x4e77
  40f09f:	cmp    cx,dx
  40f0a2:	jne    0x40f06f
  40f0a8:	mov    ecx,DWORD PTR ds:0x42d313
  40f0ae:	mov    ecx,DWORD PTR [ecx+0x198]
  40f0b4:	mov    DWORD PTR [ecx],eax
  40f0b6:	jmp    0x40f0dc
  40f0bb:	mov    ecx,DWORD PTR [ebp+0x18]
  40f0be:	cmp    ecx,0xf89c85b8
  40f0c4:	jne    0x40f0dc
  40f0ca:	push   eax
  40f0cb:	push   DWORD PTR [ebp+0x14]
  40f0ce:	push   DWORD PTR [ebp+0x10]
  40f0d1:	push   DWORD PTR [ebp+0xc]
  40f0d4:	push   DWORD PTR [ebp+0x8]
  40f0d7:	call   0x40c7f6
  40f0dc:	pop    edi
  40f0dd:	pop    esi
  40f0de:	leave  
  40f0df:	ret    0x14
  40f0e2:	push   ebp
  40f0e3:	mov    ebp,esp
  40f0e5:	sub    esp,0xc
  40f0e8:	xor    ecx,ecx
  40f0ea:	push   esi
  40f0eb:	mov    esi,DWORD PTR ds:0x418f55
  40f0f1:	mov    edx,DWORD PTR ds:0x418f5d
  40f0f7:	sub    edx,esi
  40f0f9:	add    esi,DWORD PTR [esi+edx*1]
  40f0fc:	mov    esi,0xf89c85b9
  40f101:	add    DWORD PTR ds:0x42b008,0x5d21
  40f10b:	mov    DWORD PTR [ebp-0x8],esi
  40f10e:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40f115:	push   edi
  40f116:	or     edi,DWORD PTR ds:0x429014
  40f11c:	mov    eax,eax
  40f11e:	mov    edi,DWORD PTR ds:0x42c000
  40f124:	xor    DWORD PTR ds:0x429000,edi
  40f12a:	mov    eax,DWORD PTR [ebp-0x4]
  40f12d:	mov    edi,DWORD PTR [ebp-0x8]
  40f130:	mov    ecx,0x7510899
  40f135:	inc    DWORD PTR ds:0x428014
  40f13b:	xor    eax,ecx
  40f13d:	movzx  edx,WORD PTR ds:0x42b018
  40f144:	adc    edx,DWORD PTR ds:0x428028
  40f14a:	mov    DWORD PTR ds:0x42b018,edx
  40f150:	xor    edi,ecx
  40f152:	mov    edx,0x3272e0
  40f157:	and    DWORD PTR ds:0x428028,0x42a018
  40f161:	add    edi,edx
  40f163:	add    eax,edx
  40f165:	imul   eax,edi
  40f168:	movzx  edi,WORD PTR ds:0x42b018
  40f16f:	mov    edi,DWORD PTR [ebp+0xc]
  40f172:	cmp    edi,eax
  40f174:	mov    DWORD PTR ds:0x42c014,0x3f58
  40f17e:	je     0x4115a0
  40f184:	mov    DWORD PTR [ebp-0xc],esi
  40f187:	sub    esi,eax
  40f189:	mov    eax,DWORD PTR [ebp-0xc]
  40f18c:	xor    esi,esi
  40f18e:	add    esi,DWORD PTR ds:0x42c01c
  40f194:	adc    DWORD PTR ds:0x42b008,esi
  40f19a:	mov    esi,DWORD PTR [ebp+0xc]
  40f19d:	xor    eax,ecx
  40f19f:	add    DWORD PTR ds:0x429014,0x1458
  40f1a9:	lea    eax,[eax*8+0x1939778]
  40f1b0:	xor    DWORD PTR ds:0x428008,0x1867
  40f1ba:	mov    eax,DWORD PTR [esi+eax*1]
  40f1bd:	or     esi,DWORD PTR ds:0x428020
  40f1c3:	mov    DWORD PTR [ebp+0xc],eax
  40f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f1c9:	mov    DWORD PTR ds:0x429004,0x19
  40f1d3:	cmp    DWORD PTR ds:0x429004,0x0
  40f1da:	je     0x40f224
  40f1e0:	cmp    DWORD PTR ds:0x429004,0x6
  40f1e7:	jne    0x40f1f8
  40f1ed:	push   0x42d000
  40f1f2:	call   DWORD PTR ds:0x42dcab
  40f1f8:	cmp    DWORD PTR ds:0x429004,0x7
  40f1ff:	jne    0x40f212
  40f205:	mov    esi,DWORD PTR ds:0x429004
  40f20b:	dec    esi
  40f20c:	mov    DWORD PTR ds:0x429004,esi
  40f212:	mov    esi,DWORD PTR ds:0x429004
  40f218:	dec    esi
  40f219:	mov    DWORD PTR ds:0x429004,esi
  40f21f:	jmp    0x40f1d3
  40f224:	mov    esi,DWORD PTR [ebp-0x8]
  40f227:	xor    eax,ecx
  40f229:	xor    esi,ecx
  40f22b:	add    esi,edx
  40f22d:	add    eax,edx
  40f22f:	imul   eax,esi
  40f232:	mov    esi,DWORD PTR [ebp+0xc]
  40f235:	cmp    esi,eax
  40f237:	je     0x4115a0
  40f23d:	jmp    0x411585
  40f242:	xor    DWORD PTR [ebx+0x7483b0d9],ebx
  40f248:	aaa    
  40f249:	fwait
  40f24a:	mov    eax,0x345ef52d
  40f24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f250:	cmp    DWORD PTR [edi+0x45],eax
  40f253:	leave  
  40f254:	jp     0x40f2d0
  40f256:	inc    edi
  40f257:	pop    edi
  40f258:	jp     0x40f2d4
  40f25a:	out    dx,al
  40f25b:	pop    ds
  40f25c:	inc    edi
  40f25d:	test   BYTE PTR [ecx-0x3f],bh
  40f260:	retf   0x61e1
  40f263:	jg     0x40f234
  40f265:	xor    BYTE PTR [edx],ah
  40f267:	ss pop ss
  40f269:	inc    ebx
  40f26a:	pop    ax
  40f26c:	and    DWORD PTR [ecx],eax
  40f26e:	or     ebx,esp
  40f270:	out    0x3e,al
  40f272:	jl     0x40f245
  40f274:	sti    
  40f275:	inc    esp
  40f276:	addr16 aad 0x65
  40f279:	fwait
  40f27a:	push   DWORD PTR [ecx]
  40f27c:	xor    ch,BYTE PTR [eax-0x61]
  40f27f:	int    0xb1
  40f281:	sub    eax,0x604b6b91
  40f286:	sub    eax,0x6c8d7e00
  40f28b:	scas   al,BYTE PTR es:[edi]
  40f28c:	mov    ah,0x76
  40f28e:	sti    
  40f28f:	jb     0x40f228
  40f291:	arpl   WORD PTR fs:[ecx],si
  40f294:	add    ebp,DWORD PTR [edx+0x52]
  40f297:	out    0xa0,al
  40f299:	xchg   edx,eax
  40f29a:	mov    esi,esp
  40f29c:	mov    esp,0x4aa199da
  40f2a1:	xchg   esi,eax
  40f2a2:	and    eax,0xa7414d97
  40f2a7:	test   DWORD PTR [esi-0x5a],eax
  40f2aa:	es data16 je 0x40f30e
  40f2ae:	dec    eax
  40f2af:	icebp  
  40f2b0:	xor    eax,0xba46ea8d
  40f2b5:	mov    edx,0x7c71d037
  40f2ba:	ins    BYTE PTR es:[edi],dx
  40f2bb:	pop    ss
  40f2bc:	cmp    DWORD PTR ds:0x2259de12,edi
  40f2c2:	shl    DWORD PTR [ebp+0x452d3c83],0xb8
  40f2c9:	rcl    BYTE PTR [ebp+0x2754b1c1],1
  40f2cf:	xchg   ecx,eax
  40f2d0:	test   al,0x85
  40f2d2:	jae    0x40f26a
  40f2d4:	jmp    DWORD PTR [edi-0x51]
  40f2d7:	push   cs
  40f2d8:	(bad)  
  40f2d9:	dec    esp
  40f2da:	neg    DWORD PTR [ebx+esi*8+0xf]
  40f2de:	inc    ebx
  40f2df:	loope  0x40f2c1
  40f2e1:	inc    ecx
  40f2e2:	fcom   QWORD PTR es:[edi+0x5e918597]
  40f2e9:	mov    cl,0xab
  40f2eb:	xor    al,0xd3
  40f2ed:	test   eax,0x8d652bf3
  40f2f2:	pop    edi
  40f2f3:	and    cl,bl
  40f2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f6:	mov    edx,0x54a452da
  40f2fb:	mov    ecx,0xa3f90c5e
  40f300:	or     al,BYTE PTR [edx-0x3f]
  40f303:	pop    edi
  40f304:	aam    0xdf
  40f306:	hlt    
  40f307:	dec    ebx
  40f308:	stos   BYTE PTR es:[edi],al
  40f309:	dec    ebx
  40f30a:	shl    BYTE PTR [eax],cl
  40f30c:	ins    BYTE PTR es:[edi],dx
  40f30d:	cmp    DWORD PTR [eax-0x5e3a31bc],0x783eae1f
  40f317:	pop    es
  40f318:	not    DWORD PTR [esp+edi*8]
  40f31b:	mov    cl,bh
  40f31d:	inc    esi
  40f31e:	jg     0x40f2e5
  40f320:	dec    ecx
  40f321:	frstor [ecx+eiz*2]
  40f324:	mov    BYTE PTR [eax],dl
  40f326:	and    BYTE PTR [ebx],dl
  40f328:	cmc    
  40f329:	out    0x59,al
  40f32b:	out    0xa8,eax
  40f32d:	imul   ebx,DWORD PTR [eax],0xffffffd4
  40f330:	add    ecx,edx
  40f332:	gs jnp 0x40f356
  40f335:	inc    eax
  40f336:	pusha  
  40f337:	imul   ecx,DWORD PTR ds:0xb223238c,0x310d1413
  40f341:	mov    dh,0xe3
  40f343:	sub    BYTE PTR [edi+0x3b0eda8],dh
  40f349:	cmp    cl,BYTE PTR cs:[ecx]
  40f34c:	xchg   DWORD PTR [edx],eax
  40f34e:	xor    ebp,DWORD PTR [ebx-0x64]
  40f351:	mov    ah,0x70
  40f353:	pop    ebp
  40f354:	imul   edi,DWORD PTR [edi],0x56
  40f357:	fst    DWORD PTR [eax-0x1f]
  40f35a:	dec    esp
  40f35b:	sbb    BYTE PTR [ecx-0x1b],0x15
  40f35f:	inc    ecx
  40f360:	jnp    0x40f370
  40f362:	and    eax,0x222f806f
  40f367:	pusha  
  40f368:	jbe    0x40f30f
  40f36a:	inc    edi
  40f36b:	fsubr  st,st(0)
  40f36d:	push   eax
  40f36e:	xlat   BYTE PTR ds:[ebx]
  40f36f:	sbb    ebx,DWORD PTR [esi+0x7ef81a42]
  40f375:	cmp    al,BYTE PTR [esp+edi*4-0x6f]
  40f379:	fist   WORD PTR [ebp+0x4f26c2ae]
  40f37f:	aam    0xb6
  40f381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f382:	jnp    0x40f352
  40f384:	in     al,0x3d
  40f386:	sub    al,0x9e
  40f388:	or     al,0x94
  40f38a:	pop    esp
  40f38b:	jns    0x40f3db
  40f38d:	icebp  
  40f38e:	push   0x470ffa4b
  40f393:	mov    ecx,0xefd0d90b
  40f398:	rol    esi,0xba
  40f39b:	outs   dx,DWORD PTR ds:[esi]
  40f39c:	jbe    0x40f39c
  40f39e:	repz das 
  40f3a0:	or     BYTE PTR [eax],0xb8
  40f3a3:	pop    ebp
  40f3a4:	adc    BYTE PTR [edi+0x4d89b058],dh
  40f3aa:	pusha  
  40f3ab:	in     eax,dx
  40f3ac:	and    BYTE PTR [edx-0x79aafeb1],0xf9
  40f3b3:	cwde   
  40f3b4:	scas   al,BYTE PTR es:[edi]
  40f3b5:	popa   
  40f3b6:	sbb    BYTE PTR [edx],dh
  40f3b8:	jmp    0x40f3c7
  40f3ba:	dec    edx
  40f3bb:	cmp    ebp,ebp
  40f3bd:	jle    0x40f42f
  40f3bf:	pop    esi
  40f3c0:	pushf  
  40f3c1:	xchg   DWORD PTR [ebx+edi*2+0x3044a24c],esp
  40f3c8:	fbld   TBYTE PTR [esi+0x1ea52673]
  40f3ce:	fisubr WORD PTR [ebp-0x59]
  40f3d1:	rcl    dl,0xe9
  40f3d4:	scas   al,BYTE PTR es:[edi]
  40f3d5:	js     0x40f455
  40f3d7:	(bad)  [ecx-0x142b4aa5]
  40f3dd:	dec    ebx
  40f3de:	dec    esp
  40f3df:	mov    ah,0xf0
  40f3e1:	mov    ch,bh
  40f3e3:	nop
  40f3e4:	mov    bl,0x51
  40f3e6:	cmp    BYTE PTR [edi+0x77ca68d2],0x86
  40f3ed:	jae    0x40f3d3
  40f3ef:	jae    0x40f3ac
  40f3f1:	ja     0x40f419
  40f3f3:	jl     0x40f3f1
  40f3f5:	xchg   esp,eax
  40f3f6:	aam    0x83
  40f3f8:	dec    edi
  40f3f9:	jg     0x40f405
  40f3fb:	cmp    BYTE PTR [ebx],dh
  40f3fd:	pop    ebx
  40f3fe:	ins    BYTE PTR es:[edi],dx
  40f3ff:	mov    esp,0x3cd9196c
  40f404:	and    BYTE PTR [ebp-0x291e7912],ah
  40f40a:	sbb    esp,esi
  40f40c:	mov    al,0xed
  40f40e:	add    al,0x34
  40f410:	and    DWORD PTR [eax+eiz*1-0x76],esp
  40f414:	mov    eax,ds:0x6665c098
  40f419:	adc    ebx,esp
  40f41b:	fld    DWORD PTR [eax+0x47e77172]
  40f421:	sub    BYTE PTR [ebx-0x35da65d],bl
  40f427:	mov    BYTE PTR [eax+0x625c85b6],0x5e
  40f42e:	aas    
  40f42f:	retf   0x7e22
  40f432:	and    eax,0x62045935
  40f437:	neg    DWORD PTR [ecx-0x3980d08f]
  40f43d:	jmp    0x7e6b4adc
  40f442:	ins    BYTE PTR es:[edi],dx
  40f443:	mov    esp,0x63c67137
  40f448:	mov    DWORD PTR [edi-0x20d3f5da],esp
  40f44e:	outs   dx,DWORD PTR ds:[esi]
  40f44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f450:	in     al,dx
  40f451:	add    edi,esp
  40f453:	push   ecx
  40f454:	mov    al,0x9a
  40f456:	(bad)  
  40f457:	pop    ebp
  40f458:	jl     0x40f454
  40f45a:	inc    esi
  40f45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45c:	sbb    ah,BYTE PTR [esi-0x598c684f]
  40f462:	sti    
  40f463:	fs cli 
  40f465:	xchg   BYTE PTR [edi],bl
  40f467:	or     bl,BYTE PTR [eax]
  40f469:	mov    dl,0x41
  40f46b:	pop    esp
  40f46c:	push   cs
  40f46d:	leave  
  40f46e:	std    
  40f46f:	outs   dx,DWORD PTR ds:[esi]
  40f470:	retf   
  40f471:	jnp    0x40f482
  40f473:	pop    es
  40f474:	sbb    BYTE PTR [esi-0x64],bl
  40f477:	dec    edx
  40f478:	and    eax,0x914b42ef
  40f47d:	add    eax,0x3b2ead3
  40f482:	inc    ebx
  40f483:	bound  esp,QWORD PTR ds:0x4a4dd295
  40f489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48a:	push   edi
  40f48b:	pop    ebp
  40f48c:	aas    
  40f48d:	jmp    0x40f4be
  40f48f:	or     ecx,DWORD PTR [edx]
  40f491:	mov    al,BYTE PTR [esi-0x46]
  40f494:	cmp    dl,dh
  40f496:	cmc    
  40f497:	into   
  40f498:	jle    0x40f44e
  40f49a:	cmp    DWORD PTR [eax-0x2a5c7bed],0x5f
  40f4a1:	imul   eax,DWORD PTR [ecx+0x6ac3f80f],0x828b2ec4
  40f4ab:	cld    
  40f4ac:	adc    eax,0x71bbb95d
  40f4b1:	push   0xffffffbd
  40f4b3:	jne    0x40f4f5
  40f4b5:	jl     0x40f4ce
  40f4b7:	mov    ecx,0x5a8e6698
  40f4bc:	mov    ch,0x7c
  40f4be:	mov    bh,0xbb
  40f4c0:	sahf   
  40f4c1:	mov    ebx,0x22d8d70e
  40f4c6:	add    al,al
  40f4c8:	popa   
  40f4c9:	inc    ebx
  40f4ca:	loop   0x40f50b
  40f4cc:	sub    DWORD PTR [eax],esp
  40f4ce:	pop    esi
  40f4cf:	mov    DWORD PTR [ecx-0xd],eax
  40f4d2:	nop
  40f4d3:	test   eax,0x67a9eea2
  40f4d8:	leave  
  40f4d9:	cdq    
  40f4da:	mov    edx,0x82c1dd26
  40f4df:	fisub  WORD PTR [edi+edx*4-0x1dce557a]
  40f4e6:	outs   dx,DWORD PTR ds:[esi]
  40f4e7:	adc    al,0x4c
  40f4e9:	(bad)  
  40f4ea:	adc    DWORD PTR [esi-0x1b],esp
  40f4ed:	test   eax,0xefacc37d
  40f4f2:	fiadd  DWORD PTR [ebp-0x76e57dbd]
  40f4f8:	pop    ds
  40f4f9:	jbe    0x40f4b1
  40f4fb:	pop    ds
  40f4fc:	pop    edx
  40f4fd:	pop    ds
  40f4fe:	fbld   TBYTE PTR [eax]
  40f500:	mov    ds:0x11ccb781,eax
  40f505:	fisub  DWORD PTR [esi+0x1f]
  40f508:	lods   al,BYTE PTR fs:[esi]
  40f50a:	dec    ecx
  40f50b:	sbb    edi,edx
  40f50d:	in     eax,0x52
  40f50f:	pop    esi
  40f510:	retf   
  40f511:	or     BYTE PTR [ecx+0x5b],dh
  40f514:	sahf   
  40f515:	(bad)
  40f519:	xor    BYTE PTR [esi-0x11],bh
  40f51c:	push   ebx
  40f51d:	cmp    eax,0x3c0f0432
  40f522:	xchg   ebx,eax
  40f523:	pop    es
  40f524:	cdq    
  40f525:	cmp    bl,BYTE PTR [ebp+0x64]
  40f528:	sbb    DWORD PTR [edx+0x2],ecx
  40f52b:	sub    dl,dl
  40f52d:	ins    BYTE PTR es:[edi],dx
  40f52e:	int    0x9
  40f530:	mov    edx,ebx
  40f532:	cmp    esp,esi
  40f534:	and    DWORD PTR [ecx],ebx
  40f536:	ja     0x40f5b2
  40f538:	and    eax,esp
  40f53a:	fnstsw WORD PTR [edx-0x2d422859]
  40f540:	sub    cl,BYTE PTR [edx+0x51]
  40f543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f544:	jp     0x40f4f2
  40f546:	loope  0x40f596
  40f548:	in     al,dx
  40f549:	cmp    BYTE PTR [esi+ebx*1+0x1f],dh
  40f54d:	xor    ecx,DWORD PTR [esi-0x58f1103f]
  40f553:	pushf  
  40f554:	popa   
  40f555:	mov    ds:0xaad9c690,eax
  40f55a:	dec    esp
  40f55b:	(bad)  
  40f55c:	mov    eax,ds:0xf9be1e5b
  40f561:	imul   ecx,eax,0x8596bf77
  40f567:	sub    eax,0x7c8a9a2a
  40f56c:	into   
  40f56d:	dec    esi
  40f56e:	mov    WORD PTR ds:0x9ca4722b,ds
  40f574:	xor    BYTE PTR [ebp+0x39f66f39],bh
  40f57a:	adc    al,0xba
  40f57c:	loop   0x40f5c2
  40f57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f57f:	dec    ebx
  40f580:	inc    DWORD PTR [esi-0x7]
  40f583:	repz or eax,0xc0e8914c
  40f589:	fsubr  st(5),st
  40f58b:	pop    edx
  40f58c:	and    eax,ebx
  40f58e:	out    0x3a,eax
  40f590:	out    dx,eax
  40f591:	ins    BYTE PTR es:[edi],dx
  40f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f593:	push   ebp
  40f594:	xchg   edx,eax
  40f595:	xchg   DWORD PTR [ebx],ebp
  40f597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f598:	scas   al,BYTE PTR es:[edi]
  40f599:	adc    ebx,ebp
  40f59b:	add    eax,0x8fb74ca9
  40f5a0:	adc    al,0xe7
  40f5a2:	mov    edi,0xbbf0198a
  40f5a7:	jae    0x40f5dd
  40f5a9:	adc    eax,0x73730411
  40f5ae:	shr    BYTE PTR [edx-0x1fc1d9c7],1
  40f5b4:	fwait
  40f5b5:	sbb    dh,ch
  40f5b7:	xor    al,0xdd
  40f5b9:	test   DWORD PTR [ecx-0xf1eef3],0x57f0ae53
  40f5c3:	mov    edx,0x56fdddf9
  40f5c8:	div    BYTE PTR [eax]
  40f5ca:	mov    ah,0x50
  40f5cc:	(bad)  
  40f5cd:	shr    DWORD PTR [edx],cl
  40f5cf:	sub    DWORD PTR [eax+0x7a],esp
  40f5d2:	sbb    edx,ecx
  40f5d4:	jb     0x40f608
  40f5d6:	or     BYTE PTR [edi+eiz*2-0xdba9d38],bh
  40f5dd:	jns    0x40f644
  40f5df:	sub    bh,BYTE PTR [esi]
  40f5e1:	add    eax,0x40624b96
  40f5e6:	test   eax,0x1aece850
  40f5eb:	pusha  
  40f5ec:	push   esp
  40f5ed:	mov    ch,0x7e
  40f5ef:	and    bh,cl
  40f5f1:	adc    bl,BYTE PTR [ebp-0x5b42fbf4]
  40f5f7:	arpl   WORD PTR [ebx-0x4ecee29d],bp
  40f5fd:	push   ecx
  40f5fe:	or     ecx,ebp
  40f600:	or     dl,BYTE PTR [ebx]
  40f602:	jp     0x40f66b
  40f604:	stos   BYTE PTR es:[edi],al
  40f605:	lea    esp,[eax]
  40f607:	dec    ecx
  40f608:	ret    0x93bb
  40f60b:	sbb    bh,cl
  40f60d:	(bad)  
  40f60e:	jo     0x40f632
  40f610:	bound  bx,DWORD PTR [ecx-0x4bae5428]
  40f617:	leave  
  40f618:	push   edx
  40f619:	mov    bh,0xbe
  40f61b:	fcom   st(7)
  40f61d:	int3   
  40f61e:	aam    0xa4
  40f620:	jp     0x40f60d
  40f622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f623:	test   al,0xfa
  40f625:	xchg   ebp,eax
  40f626:	dec    edi
  40f627:	cli    
  40f628:	sti    
  40f629:	jns    0x40f674
  40f62b:	and    cl,BYTE PTR [esi-0x6ab95926]
  40f631:	adc    al,BYTE PTR [edx-0x233df057]
  40f637:	mov    ebx,0x8c5d3347
  40f63c:	or     BYTE PTR [edx+eax*1],ah
  40f63f:	cmc    
  40f640:	inc    eax
  40f641:	inc    ebx
  40f642:	cmc    
  40f643:	fisttp DWORD PTR [eax-0x6ba5e41]
  40f649:	and    dl,bl
  40f64b:	jo     0x40f609
  40f64d:	adc    esi,DWORD PTR [edi+ebx*4+0x4167a79d]
  40f654:	mov    ch,0x7e
  40f656:	dec    esi
  40f657:	scas   eax,DWORD PTR es:[edi]
  40f658:	mov    edi,0x1a410da8
  40f65d:	popf   
  40f65e:	inc    ebp
  40f65f:	mov    bh,0xb8
  40f661:	out    dx,al
  40f662:	mov    ds:0x20d63bfe,eax
  40f667:	mov    ds:0x48102bc,al
  40f66c:	jmp    0x40f66e
  40f66e:	fld    QWORD PTR [ebp+0x1d]
  40f671:	sbb    cl,BYTE PTR [esi-0x6552d1cc]
  40f677:	or     bh,bl
  40f679:	push   esp
  40f67a:	jbe    0x40f671
  40f67c:	jg     0x40f625
  40f67e:	inc    edi
  40f67f:	inc    esp
  40f680:	lahf   
  40f681:	iret   
  40f682:	fcomp  DWORD PTR [eax-0x22d144c3]
  40f688:	enter  0xb932,0xc4
  40f68c:	cld    
  40f68d:	ss sub al,0x4e
  40f690:	nop
  40f691:	sbb    bl,BYTE PTR [ecx+0x66e5fec4]
  40f697:	mov    ebp,0x45a40e1a
  40f69c:	adc    ebp,DWORD PTR [ecx+0x61141a5e]
  40f6a2:	push   esi
  40f6a3:	popf   
  40f6a4:	in     eax,dx
  40f6a5:	mov    ch,bl
  40f6a7:	rol    DWORD PTR [ebp+0x4ae6435],1
  40f6ad:	or     bh,0xca
  40f6b0:	loop   0x40f6cb
  40f6b2:	mov    bh,0x94
  40f6b4:	addr16 or dl,BYTE PTR [bp+si]
  40f6b8:	(bad)  
  40f6b9:	xchg   esi,eax
  40f6ba:	push   edx
  40f6bb:	int    0xaf
  40f6bd:	int    0xf1
  40f6bf:	xchg   DWORD PTR [eax+0x33],edx
  40f6c2:	mov    ebp,0x318bf23d
  40f6c7:	ds js  0x40f6a1
  40f6ca:	dec    esi
  40f6cb:	push   0x77
  40f6cd:	jnp    0x40f6e3
  40f6cf:	pop    ebx
  40f6d0:	dec    edi
  40f6d1:	leave  
  40f6d2:	shr    BYTE PTR [esi],0x63
  40f6d5:	fstp   DWORD PTR [eax]
  40f6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d8:	out    dx,eax
  40f6d9:	jno    0x40f711
  40f6db:	and    DWORD PTR [edx+0x71],esi
  40f6de:	imul   esp,DWORD PTR [ebp-0x43],0x4
  40f6e2:	xchg   ebx,eax
  40f6e3:	fisttp DWORD PTR [eax]
  40f6e5:	lods   al,BYTE PTR ds:[esi]
  40f6e6:	push   eax
  40f6e7:	test   BYTE PTR [edx-0x7ab394d7],bl
  40f6ed:	xor    eax,0x456397a9
  40f6f2:	ja     0x40f724
  40f6f4:	and    eax,0xd0065549
  40f6f9:	idiv   DWORD PTR [edx+0x41825753]
  40f6ff:	out    0xd0,eax
  40f701:	push   eax
  40f702:	sbb    cl,bl
  40f704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f705:	jb     0x40f722
  40f707:	sbb    dl,BYTE PTR [ecx+0x3fda65f9]
  40f70d:	dec    ecx
  40f70e:	xor    BYTE PTR gs:[ebp-0x38],ch
  40f712:	aas    
  40f713:	xchg   ebp,eax
  40f714:	dec    edx
  40f715:	sbb    BYTE PTR [esp+esi*4],0xe9
  40f719:	outs   dx,BYTE PTR ds:[esi]
  40f71a:	mov    ecx,0xd6ca2d7e
  40f71f:	scas   eax,DWORD PTR es:[edi]
  40f720:	popa   
  40f721:	push   ds
  40f722:	dec    ebp
  40f723:	loop   0x40f71e
  40f725:	mov    al,ds:0xcae0ac19
  40f72a:	retf   
  40f72b:	or     edi,esp
  40f72d:	jmp    0x84be:0x174f90d3
  40f734:	aam    0xfe
  40f736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f737:	mov    ah,0x60
  40f739:	push   ss
  40f73a:	in     eax,dx
  40f73b:	inc    ebx
  40f73c:	cwde   
  40f73d:	aaa    
  40f73e:	clc    
  40f73f:	inc    edi
  40f740:	ss push 0x1092ead1
  40f746:	dec    BYTE PTR [esi+0x2c]
  40f749:	xor    eax,0xb784b5bc
  40f74e:	iret   
  40f74f:	mov    al,ds:0xe27b1792
  40f754:	fwait
  40f755:	mov    dl,0x3b
  40f757:	jne    0x40f70b
  40f759:	inc    esi
  40f75a:	cmp    BYTE PTR [ecx+ecx*2-0x25],bh
  40f75e:	fdiv   DWORD PTR [edx+0x34]
  40f761:	push   ss
  40f762:	lods   al,BYTE PTR ds:[esi]
  40f763:	inc    ebx
  40f764:	test   ebp,eax
  40f766:	mov    bl,0x1c
  40f768:	fs sbb al,0x77
  40f76b:	popf   
  40f76c:	ins    BYTE PTR es:[edi],dx
  40f76d:	xor    al,0x10
  40f76f:	mov    ah,0x9b
  40f771:	jb     0x40f729
  40f773:	and    esi,ebx
  40f775:	ret    0x34c9
  40f778:	jo     0x40f72b
  40f77a:	shl    DWORD PTR [edi+edx*2-0x46885de5],0x4
  40f782:	xor    al,0xb9
  40f784:	mov    edx,0x6dfc7238
  40f789:	out    0xae,eax
  40f78b:	(bad)  
  40f78c:	cmp    DWORD PTR [edx-0x62],edx
  40f78f:	call   0xb032238a
  40f794:	pop    ebx
  40f795:	inc    ecx
  40f796:	(bad)
  40f79b:	adc    eax,DWORD PTR [edi]
  40f79d:	xor    BYTE PTR [ecx+ebp*4-0x6dfd88be],cl
  40f7a4:	add    eax,0x3b8282e3
  40f7a9:	dec    ebp
  40f7aa:	sbb    al,0xe0
  40f7ac:	adc    al,0x7a
  40f7ae:	mov    dl,0xbd
  40f7b0:	pushf  
  40f7b1:	into   
  40f7b2:	std    
  40f7b3:	xchg   esi,eax
  40f7b4:	cmp    DWORD PTR [edx],ebp
  40f7b6:	cld    
  40f7b7:	sub    esi,edi
  40f7b9:	pop    es
  40f7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7bb:	pop    esi
  40f7bc:	adc    DWORD PTR [ecx],ebx
  40f7be:	int3   
  40f7bf:	popf   
  40f7c0:	cmp    al,0x46
  40f7c2:	imul   edi,DWORD PTR [edx-0x5d759bf5],0xfc04730e
  40f7cc:	dec    ebx
  40f7cd:	dec    ebp
  40f7ce:	inc    edx
  40f7cf:	ror    eax,cl
  40f7d1:	out    dx,eax
  40f7d2:	xchg   ebx,eax
  40f7d3:	jl     0x40f776
  40f7d5:	mov    al,ds:0xff5dadcc
  40f7da:	mov    eax,0x52758944
  40f7df:	cmp    eax,0x2b9bf8bf
  40f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e5:	xor    al,0x62
  40f7e7:	sub    BYTE PTR [edx],dh
  40f7e9:	inc    edx
  40f7ea:	jl     0x40f7b7
  40f7ec:	(bad)  
  40f7ed:	daa    
  40f7ee:	pop    es
  40f7ef:	scas   eax,DWORD PTR es:[edi]
  40f7f0:	sbb    ah,ch
  40f7f2:	and    dh,BYTE PTR [edi+0x670285a7]
  40f7f8:	inc    esi
  40f7f9:	push   eax
  40f7fa:	push   cs
  40f7fb:	nop
  40f7fc:	ror    BYTE PTR ds:0x8d7c33f3,cl
  40f802:	(bad)  [ebx]
  40f804:	sbb    al,0x6a
  40f806:	out    dx,eax
  40f807:	sbb    ebp,DWORD PTR [esi-0x6b]
  40f80a:	repz sub al,0xcf
  40f80d:	add    DWORD PTR [esi],esi
  40f80f:	pop    ecx
  40f810:	outs   dx,DWORD PTR ds:[esi]
  40f811:	cmp    ebx,ecx
  40f813:	dec    edi
  40f814:	or     dl,BYTE PTR [esi]
  40f816:	hlt    
  40f817:	mov    WORD PTR [ebp-0x6a],?
  40f81a:	call   0x7868:0xea1f8f97
  40f821:	mov    ebx,0x5f44b6b5
  40f826:	aam    0xbc
  40f828:	(bad)  
  40f829:	gs nop
  40f82b:	mov    eax,esi
  40f82d:	pop    ecx
  40f82e:	push   ebx
  40f82f:	mov    ch,0x6c
  40f831:	push   es
  40f832:	test   DWORD PTR [ecx-0x5d],esp
  40f835:	jle    0x40f854
  40f837:	mov    bl,0xa8
  40f839:	shl    DWORD PTR [ebx-0x6445bfb1],1
  40f83f:	ja     0x40f7f0
  40f841:	lea    eax,[esi-0x2670a39]
  40f847:	mov    al,0xff
  40f849:	mov    dh,0x3c
  40f84b:	push   0x2afde028
  40f850:	pushw  cs
  40f852:	aam    0x46
  40f854:	xor    edi,DWORD PTR [edx-0x62]
  40f857:	push   edx
  40f858:	fstp   QWORD PTR [esi]
  40f85a:	cmp    al,0xf0
  40f85c:	addr16 in al,dx
  40f85e:	retf   0x424a
  40f861:	jns    0x40f7fb
  40f863:	adc    eax,0x863518aa
  40f868:	or     al,0xa3
  40f86a:	pop    ecx
  40f86b:	add    eax,0xd619953b
  40f870:	adc    dl,BYTE PTR [ebp+0x5c6e8d97]
  40f876:	enter  0xe512,0xd6
  40f87a:	(bad)  
  40f87b:	jo     0x40f819
  40f87d:	xchg   ebp,eax
  40f87e:	dec    esp
  40f87f:	and    al,0xcf
  40f881:	pop    esp
  40f882:	ds jmp 0x86b8db1
  40f888:	inc    ecx
  40f889:	mov    eax,DWORD PTR [esi+0x124e9a8f]
  40f88f:	rol    DWORD PTR [edi+0x1a],0x47
  40f893:	fiadd  WORD PTR [eax-0x10]
  40f896:	ss ret 
  40f898:	cmp    eax,0x40f4807d
  40f89d:	mov    WORD PTR ss:[ebp-0x123eb2b3],ss
  40f8a4:	push   eax
  40f8a5:	arpl   WORD PTR [edi-0x4e5a0e77],sp
  40f8ab:	out    0xd3,eax
  40f8ad:	xchg   ebx,eax
  40f8ae:	push   0x99333fb6
  40f8b3:	repnz pusha 
  40f8b5:	test   BYTE PTR [ecx],bh
  40f8b7:	push   ebp
  40f8b8:	push   ebx
  40f8b9:	cdq    
  40f8ba:	lea    ebp,[ebp+0x3d171c17]
  40f8c0:	jne    0x40f8c5
  40f8c2:	mov    dh,0x93
  40f8c4:	jae    0x40f8b0
  40f8c6:	sbb    ebp,DWORD PTR [edx]
  40f8c8:	int3   
  40f8c9:	dec    ecx
  40f8ca:	std    
  40f8cb:	outs   dx,BYTE PTR ds:[esi]
  40f8cc:	ins    DWORD PTR es:[edi],dx
  40f8cd:	mov    DWORD PTR [ebx+eax*4+0x7319a996],ebx
  40f8d4:	mov    esi,0xa62ca681
  40f8d9:	in     al,dx
  40f8da:	lock fnsave [ecx]
  40f8dd:	push   eax
  40f8de:	lods   eax,DWORD PTR ds:[esi]
  40f8df:	ret    
  40f8e0:	loopne 0x40f903
  40f8e2:	mov    ecx,0xfc0db5fb
  40f8e7:	and    al,0x92
  40f8e9:	fiadd  WORD PTR [ebp+0x24]
  40f8ec:	daa    
  40f8ed:	sub    esi,DWORD PTR [ebp+0x6e08d55b]
  40f8f3:	scas   eax,DWORD PTR es:[edi]
  40f8f4:	push   edx
  40f8f5:	aam    0xf
  40f8f7:	dec    esi
  40f8f8:	hlt    
  40f8f9:	dec    edx
  40f8fa:	stos   DWORD PTR es:[edi],eax
  40f8fb:	out    dx,al
  40f8fc:	jl     0x40f944
  40f8fe:	ins    DWORD PTR es:[edi],dx
  40f8ff:	and    esp,ebp
  40f901:	fidiv  WORD PTR [esi-0x42]
  40f904:	cmp    eax,0xacedcf5d
  40f909:	(bad)  
  40f90b:	mov    eax,ds:0x4fdd8765
  40f910:	stos   DWORD PTR es:[edi],eax
  40f911:	bound  edi,QWORD PTR [esi-0xd]
  40f914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f915:	sub    ah,BYTE PTR [ebx+0x6d]
  40f918:	fucomip st,st(7)
  40f91a:	aad    0x94
  40f91c:	inc    edi
  40f91d:	stc    
  40f91e:	(bad)  
  40f91f:	rcl    DWORD PTR [ecx+0x3c],cl
  40f922:	pop    ebx
  40f923:	icebp  
  40f924:	sbb    BYTE PTR [ebx],dl
  40f926:	and    al,0x4c
  40f928:	rcl    DWORD PTR [edx+0x35],1
  40f92b:	pop    ebx
  40f92c:	jp     0x40f95e
  40f92e:	xlat   BYTE PTR ds:[ebx]
  40f92f:	sbb    BYTE PTR ds:[ecx],0xee
  40f933:	mov    BYTE PTR [esi-0x20ca315d],cl
  40f939:	xor    al,0x3b
  40f93b:	sbb    ecx,DWORD PTR [edi+0x68b796d9]
  40f941:	loop   0x40f93d
  40f943:	xor    dl,bl
  40f945:	ins    DWORD PTR es:[edi],dx
  40f946:	rol    DWORD PTR [eax],0x79
  40f949:	pop    ecx
  40f94a:	ret    
  40f94b:	imul   eax,DWORD PTR [ecx],0x23
  40f94e:	(bad)  
  40f94f:	pop    esp
  40f950:	mov    dh,0x41
  40f952:	or     eax,DWORD PTR [edx]
  40f954:	push   0x21
  40f956:	xor    cl,ch
  40f958:	mov    ?,edi
  40f95a:	jnp    0x40f99b
  40f95c:	ins    BYTE PTR es:[edi],dx
  40f95d:	call   0x3a963340
  40f962:	or     eax,edx
  40f964:	inc    ebp
  40f965:	aaa    
  40f966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f967:	pop    edi
  40f968:	out    0x42,eax
  40f96a:	pop    edx
  40f96b:	test   ebp,ebp
  40f96d:	add    eax,0xf1482997
  40f972:	out    dx,eax
  40f973:	loop   0x40f90b
  40f975:	inc    esp
  40f976:	in     al,dx
  40f977:	(bad)  
  40f978:	in     eax,0x33
  40f97a:	(bad)  
  40f97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97c:	fild   DWORD PTR [edx]
  40f97e:	retf   0x3206
  40f981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f982:	into   
  40f983:	mov    BYTE PTR [ebp-0x2bbb43c2],al
  40f989:	mov    ebp,0xdf2df152
  40f98e:	int3   
  40f98f:	ss inc edi
  40f991:	add    al,0x5
  40f993:	dec    eax
  40f994:	cmc    
  40f995:	dec    ecx
  40f996:	call   0xc43217eb
  40f99b:	sbb    DWORD PTR [ecx+0x42],esp
  40f99e:	add    esi,ebx
  40f9a0:	hlt    
  40f9a1:	scas   eax,DWORD PTR es:[edi]
  40f9a2:	dec    ebp
  40f9a3:	xchg   esp,eax
  40f9a4:	mov    al,0xe1
  40f9a6:	jmp    0x13d5cec2
  40f9ab:	add    esi,DWORD PTR [ebp+ecx*1+0x7d]
  40f9af:	repnz sbb ecx,DWORD PTR [ebx+0x37]
  40f9b3:	and    bh,dl
  40f9b5:	div    BYTE PTR ds:0xad766fb7
  40f9bb:	daa    
  40f9bc:	pop    ecx
  40f9bd:	jle    0x40fa07
  40f9bf:	cs jb  0x40f972
  40f9c2:	xchg   edx,eax
  40f9c3:	sti    
  40f9c4:	fstp   QWORD PTR [ecx]
  40f9c6:	xchg   ecx,eax
  40f9c7:	fwait
  40f9c8:	dec    esp
  40f9c9:	dec    ebx
  40f9ca:	lods   eax,DWORD PTR ds:[esi]
  40f9cb:	ins    DWORD PTR es:[edi],dx
  40f9cc:	mov    bh,0xa7
  40f9ce:	fcomp  st(0)
  40f9d0:	in     al,0x61
  40f9d2:	jmp    0x40fa26
  40f9d4:	sub    eax,0x1e31c9cc
  40f9d9:	leave  
  40f9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9db:	and    ecx,DWORD PTR [edi]
  40f9dd:	dec    ecx
  40f9de:	pop    esi
  40f9df:	sbb    esi,ebx
  40f9e1:	dec    ebx
  40f9e2:	aas    
  40f9e3:	fidivr DWORD PTR [ebx-0x17]
  40f9e6:	pusha  
  40f9e7:	les    edi,FWORD PTR [eax]
  40f9e9:	push   ecx
  40f9ea:	jmp    0x19a0:0xb64f4dc1
  40f9f1:	push   esi
  40f9f2:	test   eax,0xb68a3a50
  40f9f7:	(bad)  
  40f9f8:	repnz xor BYTE PTR [ebx+0x1d60397b],0xb9
  40fa00:	fst    DWORD PTR [eax-0x75]
  40fa03:	lock jp 0x40f98d
  40fa06:	and    al,0xc8
  40fa08:	push   es
  40fa09:	mov    dl,0x3b
  40fa0b:	add    DWORD PTR ds:0x18ef4e61,ebp
  40fa11:	es je  0x40fa15
  40fa14:	(bad)  
  40fa15:	jmp    0x29e4e529
  40fa1a:	mov    ebx,0x8659361d
  40fa1f:	cmp    dh,BYTE PTR [esi]
  40fa21:	sbb    ah,BYTE PTR [ebx]
  40fa23:	mov    al,0xad
  40fa25:	xchg   ebx,eax
  40fa26:	pop    ebx
  40fa27:	test   eax,0x819f934
  40fa2c:	jbe    0x40fa56
  40fa2e:	into   
  40fa2f:	ss cmp bh,dh
  40fa32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa33:	stos   BYTE PTR es:[edi],al
  40fa34:	pop    eax
  40fa35:	mov    ds:0xecb040df,al
  40fa3a:	cmc    
  40fa3b:	test   DWORD PTR [ebp+0x24],0xcd096992
  40fa42:	fild   DWORD PTR [ebp-0x2c]
  40fa45:	popa   
  40fa46:	xor    ebx,esp
  40fa48:	and    esi,DWORD PTR [esi+0x6a331783]
  40fa4e:	mov    edx,ebp
  40fa50:	sbb    cl,BYTE PTR [esi]
  40fa52:	xchg   ebx,eax
  40fa53:	out    dx,eax
  40fa54:	pop    esp
  40fa55:	shr    DWORD PTR [eax+0x68],0xc6
  40fa59:	inc    ebx
  40fa5a:	xchg   ecx,eax
  40fa5b:	xor    esi,eax
  40fa5d:	aas    
  40fa5e:	out    dx,al
  40fa5f:	out    0x94,eax
  40fa61:	fmul   QWORD PTR [esi-0x3c]
  40fa64:	inc    ecx
  40fa65:	push   ebp
  40fa66:	hlt    
  40fa67:	add    eax,0x2f87906d
  40fa6c:	ror    BYTE PTR [eax+eiz*4+0x2c],cl
  40fa70:	stos   DWORD PTR es:[edi],eax
  40fa71:	sub    eax,0x243f27c8
  40fa76:	pop    es
  40fa77:	test   eax,0x2ef170b3
  40fa7c:	(bad)  [esp+0x12950b47]
  40fa83:	hlt    
  40fa84:	adc    ecx,DWORD PTR [edi+0x496a3f86]
  40fa8a:	(bad)  
  40fa8b:	xlat   BYTE PTR ds:[ebx]
  40fa8c:	jae    0x40fac6
  40fa8e:	rcr    DWORD PTR [esi],cl
  40fa90:	jns    0x40fa62
  40fa92:	sbb    al,0xcc
  40fa94:	in     eax,0x66
  40fa96:	sub    eax,0xf271de25
  40fa9b:	ins    DWORD PTR es:[edi],dx
  40fa9c:	mov    esi,0x1bc96023
  40faa1:	ret    0x7a05
  40faa4:	xchg   esp,eax
  40faa5:	and    al,0xe0
  40faa7:	ret    
  40faa8:	sub    al,0x12
  40faaa:	add    ebp,DWORD PTR [edx]
  40faac:	stos   BYTE PTR es:[edi],al
  40faad:	outs   dx,BYTE PTR ds:[esi]
  40faae:	jecxz  0x40fac6
  40fab0:	cld    
  40fab1:	sahf   
  40fab2:	test   eax,0x52ab2414
  40fab7:	cdq    
  40fab8:	pop    esp
  40fab9:	imul   esi,esp,0x60
  40fabc:	fs iret 
  40fabe:	fld    QWORD PTR [ebx-0x1a9fc8e1]
  40fac4:	aam    0x7e
  40fac6:	mov    ecx,0xf51b4408
  40facb:	mov    ch,0x19
  40facd:	lock fild QWORD PTR [edi-0x8]
  40fad1:	aad    0xe0
  40fad3:	out    dx,al
  40fad4:	cmp    al,0x9a
  40fad6:	cwde   
  40fad7:	psubsb mm2,mm6
  40fada:	test   DWORD PTR [edx-0x3fdfa61],edi
  40fae0:	rcr    bl,cl
  40fae2:	mov    ebp,0xd19b3a66
  40fae7:	and    al,BYTE PTR ds:0x5e947371
  40faed:	sahf   
  40faee:	test   al,0x70
  40faf0:	ss jecxz 0x40fa7b
  40faf3:	xor    al,0xf9
  40faf5:	pop    ecx
  40faf6:	sti    
  40faf7:	add    ebp,DWORD PTR [ebp-0x225b7914]
  40fafd:	and    cl,BYTE PTR [ebp-0x5bb1f1d1]
  40fb03:	loopne 0x40fb57
  40fb05:	jmp    0xb2d38085
  40fb0a:	sbb    eax,0xd69ebbc5
  40fb10:	xor    ebx,DWORD PTR [edx*4+0x3f8a7fe0]
  40fb17:	les    ecx,FWORD PTR [ebx+0x53]
  40fb1a:	inc    esi
  40fb1b:	not    DWORD PTR [edi]
  40fb1d:	call   0x5b2f:0x7354cf41
  40fb24:	les    esi,FWORD PTR [ebx+0xa]
  40fb27:	iret   
  40fb28:	xchg   esp,eax
  40fb29:	ja     0x40fb07
  40fb2b:	cmp    BYTE PTR [ebx-0x3e1aacd5],0x35
  40fb32:	data16 mov bl,0x44
  40fb35:	loop   0x40fae9
  40fb37:	ret    0xdb5c
  40fb3a:	cmp    DWORD PTR ds:0xa3488c29,esi
  40fb40:	and    BYTE PTR [eax],bl
  40fb42:	add    al,0xdf
  40fb44:	inc    ebp
  40fb45:	push   edi
  40fb46:	xor    al,0x51
  40fb48:	xlat   BYTE PTR ds:[ebx]
  40fb49:	lds    esi,FWORD PTR [ebx+0x1b857f20]
  40fb4f:	push   esp
  40fb50:	mov    bh,0x1e
  40fb52:	mov    ch,0x99
  40fb54:	push   esp
  40fb55:	out    dx,eax
  40fb56:	dec    ecx
  40fb57:	leave  
  40fb58:	add    ebx,0x2165c248
  40fb5e:	pop    eax
  40fb5f:	push   ebx
  40fb60:	stos   DWORD PTR es:[edi],eax
  40fb61:	out    dx,al
  40fb62:	or     DWORD PTR [edx],esp
  40fb64:	test   DWORD PTR [esi+0x25c04570],edi
  40fb6a:	test   BYTE PTR [ebp-0x2ef9e43f],bl
  40fb70:	sub    al,0xcf
  40fb72:	aas    
  40fb73:	fisttp DWORD PTR [eax-0x21dd2e03]
  40fb79:	push   edx
  40fb7a:	iret   
  40fb7b:	xchg   BYTE PTR [esi+0x7d],bh
  40fb7e:	pop    ebp
  40fb7f:	sbb    edx,DWORD PTR [esi+0x7b795006]
  40fb85:	mov    cl,0x4d
  40fb87:	pusha  
  40fb88:	sahf   
  40fb89:	nop
  40fb8a:	pop    ebp
  40fb8b:	pop    eax
  40fb8c:	push   0x52bc6153
  40fb91:	lock cs lock pushw 0x33
  40fb97:	pop    edi
  40fb98:	jmp    0xb84219d5
  40fb9d:	shl    DWORD PTR [ebp+0x4776efe5],1
  40fba3:	sbb    al,0x66
  40fba5:	pop    edx
  40fba6:	fstp   QWORD PTR [eax+eiz*4]
  40fba9:	mov    bl,0x2f
  40fbab:	inc    edx
  40fbac:	shl    BYTE PTR [eax-0x3c],1
  40fbaf:	pop    ebp
  40fbb0:	fcmove st,st(3)
  40fbb2:	icebp  
  40fbb3:	xchg   bh,dh
  40fbb5:	jne    0x40fb54
  40fbb7:	pop    edx
  40fbb8:	int3   
  40fbb9:	lods   eax,DWORD PTR ds:[esi]
  40fbba:	int3   
  40fbbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbc:	pop    ebp
  40fbbd:	pop    esp
  40fbbe:	pop    ecx
  40fbbf:	mov    ds:0xb0a37a9b,eax
  40fbc4:	cs aam 0xc4
  40fbc7:	sbb    eax,edi
  40fbc9:	adc    al,0x40
  40fbcb:	mov    edx,0x2d0da484
  40fbd0:	out    dx,eax
  40fbd1:	jle    0x40fbd9
  40fbd3:	nop
  40fbd4:	es (bad) 
  40fbd6:	in     eax,dx
  40fbd7:	retf   
  40fbd8:	push   esp
  40fbd9:	jae    0x40fb75
  40fbdb:	adc    cl,bh
  40fbdd:	lahf   
  40fbde:	shr    DWORD PTR [esi+ebx*8+0x4fe5c709],0x27
  40fbe6:	mov    ds,WORD PTR [esp+edi*8+0x35]
  40fbea:	sub    ebp,DWORD PTR [eax-0x4b]
  40fbed:	call   0xf28702a4
  40fbf2:	xchg   BYTE PTR [eax-0x49e38199],ch
  40fbf8:	or     ebx,DWORD PTR [ebx]
  40fbfa:	ret    0x3e3
  40fbfd:	push   ss
  40fbfe:	repz mov WORD PTR [eax-0x595c0dda],cs
  40fc05:	leave  
  40fc06:	pop    esp
  40fc07:	in     al,dx
  40fc08:	lock cmp bh,bh
  40fc0b:	addps  xmm1,XMMWORD PTR [ecx+0x60]
  40fc0f:	stos   DWORD PTR es:[edi],eax
  40fc10:	popa   
  40fc11:	shr    DWORD PTR [esi],1
  40fc13:	mov    WORD PTR [edi-0xac082f2],gs
  40fc19:	repz pop es
  40fc1b:	dec    esi
  40fc1c:	(bad)  
  40fc1d:	or     bh,BYTE PTR [edx-0xd]
  40fc20:	add    DWORD PTR [ebx-0x23],edx
  40fc23:	pop    edx
  40fc24:	or     BYTE PTR ds:0x1d17e08,bl
  40fc2a:	cmp    bl,BYTE PTR [eax+ebp*8+0x4835eaa4]
  40fc31:	sbb    DWORD PTR [esi-0x74],eax
  40fc34:	(bad)  
  40fc35:	and    cl,BYTE PTR [esi+0x41]
  40fc38:	push   esp
  40fc39:	and    eax,0xbf06cad7
  40fc3e:	pop    eax
  40fc3f:	and    dl,ch
  40fc41:	pop    eax
  40fc42:	stos   DWORD PTR es:[edi],eax
  40fc43:	div    ch
  40fc45:	xchg   esp,eax
  40fc46:	jp     0x40fc4c
  40fc48:	xor    al,0xb4
  40fc4a:	add    cl,bh
  40fc4c:	shl    DWORD PTR [ecx+0xfdcf620],1
  40fc52:	dec    esp
  40fc53:	retf   
  40fc54:	fstp   TBYTE PTR [ebp-0x19be56ba]
  40fc5a:	and    al,0xc1
  40fc5c:	sub    eax,DWORD PTR [ebp+edx*8-0x14417cea]
  40fc63:	fs mov ah,0xe
  40fc66:	xchg   ecx,eax
  40fc67:	sbb    al,0x6e
  40fc69:	sub    bl,BYTE PTR [ebx+eax*1-0x17]
  40fc6d:	xchg   edx,eax
  40fc6e:	cli    
  40fc6f:	or     ebx,DWORD PTR [ebp-0x38c655b3]
  40fc75:	setno  BYTE PTR [esi+0x11]
  40fc79:	cdq    
  40fc7a:	adc    ebx,DWORD PTR [edx+0x267340e8]
  40fc80:	imul   edx,DWORD PTR [ebp+0x2a],0x22c43ec9
  40fc87:	push   edx
  40fc88:	call   0x3196e248
  40fc8d:	push   ebp
  40fc8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc8f:	test   DWORD PTR [ebx],ecx
  40fc91:	imul   ebx,edx,0x3d3f6b01
  40fc97:	pushf  
  40fc98:	les    esp,FWORD PTR [edi]
  40fc9a:	(bad)  
  40fc9b:	and    eax,0x62f5c069
  40fca0:	ss pop ds
  40fca2:	call   0xacc0:0x22069f65
  40fca9:	(bad)  [edx-0x20]
  40fcac:	shr    al,cl
  40fcae:	(bad)  
  40fcb0:	imul   ebp,DWORD PTR [edx-0x50],0x5ddaa863
  40fcb7:	xchg   edi,eax
  40fcb8:	mov    bl,0x77
  40fcba:	add    DWORD PTR ds:0x382b7c8e,edi
  40fcc0:	out    0x96,al
  40fcc2:	hlt    
  40fcc3:	cmp    eax,0x9a75cdfd
  40fcc8:	and    eax,0x3cab869f
  40fccd:	pop    esi
  40fcce:	xchg   esi,eax
  40fccf:	xchg   ebx,eax
  40fcd0:	jmp    0x50d227bd
  40fcd5:	inc    ebx
  40fcd6:	mov    eax,ds:0x15f29137
  40fcdb:	ret    
  40fcdc:	jns    0x40fd37
  40fcde:	stos   BYTE PTR es:[edi],al
  40fcdf:	fstp   DWORD PTR [ebp-0x6a22e831]
  40fce5:	call   0xf47d:0x54bfa424
  40fcec:	mov    esp,0x319c6908
  40fcf1:	data16 mov bl,0x9f
  40fcf4:	int    0x58
  40fcf6:	retf   
  40fcf7:	inc    ebp
  40fcf8:	fmul   st(2),st
  40fcfa:	dec    esi
  40fcfb:	sbb    eax,0x91071b2e
  40fd00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd01:	nop
  40fd02:	nop
  40fd03:	lea    ebp,[ebx-0x2e8cb748]
  40fd09:	into   
  40fd0a:	or     eax,0x1cc01ab7
  40fd0f:	daa    
  40fd10:	aas    
  40fd11:	sub    al,0x92
  40fd13:	xchg   ebp,eax
  40fd14:	mov    eax,0xb0dde21e
  40fd19:	sbb    dh,ah
  40fd1b:	in     al,dx
  40fd1c:	sub    dh,BYTE PTR [edx*2-0x101dc022]
  40fd23:	(bad)  
  40fd24:	cmp    al,0x3
  40fd26:	mov    ecx,0x528e6189
  40fd2b:	ret    0xc3c1
  40fd2e:	lock mov WORD PTR [edi-0x49],ds
  40fd32:	push   ds
  40fd33:	dec    eax
  40fd34:	fbld   TBYTE PTR [edi+0x2e]
  40fd37:	mov    esi,DWORD PTR [esi]
  40fd39:	mov    al,0xe7
  40fd3b:	loop   0x40fd53
  40fd3d:	(bad)  
  40fd3e:	loop   0x40fdad
  40fd40:	xchg   esp,eax
  40fd41:	xchg   ebp,eax
  40fd42:	ins    BYTE PTR es:[edi],dx
  40fd43:	sbb    al,0x16
  40fd45:	xchg   BYTE PTR [ecx+0x782f0676],bh
  40fd4b:	dec    edx
  40fd4c:	jge    0x40fd7d
  40fd4e:	pop    ss
  40fd4f:	sbb    eax,0x3e24457f
  40fd54:	ret    0xa70b
  40fd57:	popa   
  40fd58:	xchg   BYTE PTR [ebx-0x7d547a65],ah
  40fd5e:	loop   0x40fd94
  40fd60:	dec    ah
  40fd62:	iret   
  40fd63:	mov    ebp,0x7f38c25a
  40fd68:	das    
  40fd69:	test   al,0xa3
  40fd6b:	test   ebx,eax
  40fd6d:	xchg   ebp,eax
  40fd6e:	pop    ss
  40fd6f:	lods   al,BYTE PTR ds:[esi]
  40fd70:	mov    ebx,0x45bc6340
  40fd75:	xor    cl,ah
  40fd77:	mov    eax,ds:0xc37f7077
  40fd7c:	mov    bh,0x48
  40fd7e:	jb     0x40fda3
  40fd80:	jnp    0x40fdff
  40fd82:	outs   dx,BYTE PTR ds:[esi]
  40fd83:	imul   edx,DWORD PTR [ebx-0x26ad2174],0xb6c54f87
  40fd8d:	jl     0x40fdf4
  40fd8f:	sti    
  40fd90:	pop    eax
  40fd91:	mov    ch,BYTE PTR [edx+edx*1]
  40fd94:	scas   al,BYTE PTR es:[edi]
  40fd95:	fsubp  st(1),st
  40fd97:	xchg   edx,eax
  40fd98:	(bad)  
  40fd99:	jecxz  0x40fd8d
  40fd9b:	ja     0x40fdac
  40fd9d:	and    ebp,DWORD PTR [eax+0x62]
  40fda0:	int    0xfe
  40fda2:	sbb    eax,0x2f2a7d4b
  40fda7:	mov    esp,0xe9aadc30
  40fdac:	add    bl,dh
  40fdae:	(bad)  
  40fdb0:	js     0x40fdd9
  40fdb2:	xchg   esp,eax
  40fdb3:	or     eax,0x829b004b
  40fdb8:	das    
  40fdb9:	add    al,0x53
  40fdbb:	test   esi,edi
  40fdbd:	cmp    ebp,DWORD PTR [ecx+0x68]
  40fdc0:	inc    eax
  40fdc1:	push   ecx
  40fdc2:	mov    ds:0xcf5eb1b1,al
  40fdc7:	loope  0x40fd60
  40fdc9:	aaa    
  40fdca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdcb:	sbb    DWORD PTR [eax+0x6e3adea8],edx
  40fdd1:	out    0x5d,eax
  40fdd3:	call   0x7a86c7d7
  40fdd8:	or     al,BYTE PTR [eax]
  40fdda:	adc    eax,DWORD PTR [edx]
  40fddc:	jmp    0x40fdcf
  40fdde:	das    
  40fddf:	stc    
  40fde0:	mov    al,0xcd
  40fde2:	ret    
  40fde3:	mov    ebp,0xcc7a69d7
  40fde8:	lea    edi,[edi+0x61]
  40fdeb:	loope  0x40fdc9
  40fded:	test   BYTE PTR [ebp+0x1e],0x47
  40fdf1:	ins    DWORD PTR es:[edi],dx
  40fdf2:	xor    esi,eax
  40fdf4:	aaa    
  40fdf5:	in     al,0xcb
  40fdf7:	cmc    
  40fdf8:	inc    ecx
  40fdf9:	cmc    
  40fdfa:	xor    al,0x24
  40fdfc:	popa   
  40fdfd:	or     DWORD PTR [ecx-0x65ada55c],edx
  40fe03:	lock sbb BYTE PTR [eax-0x3b],0x77
  40fe08:	sub    DWORD PTR [esi],ebp
  40fe0a:	fwait
  40fe0b:	xor    eax,0xd35d4f06
  40fe10:	or     cl,al
  40fe12:	in     al,dx
  40fe13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe14:	push   es
  40fe15:	(bad)  
  40fe16:	push   edx
  40fe17:	mov    ds:0x8d45d0bc,al
  40fe1c:	add    esi,eax
  40fe1e:	jp     0x40fdcb
  40fe20:	leave  
  40fe21:	call   0xd94:0xf7b27d75
  40fe28:	sbb    eax,DWORD PTR [edi]
  40fe2a:	call   0xc7f40a4b
  40fe2f:	jle    0x40fe39
  40fe31:	add    eax,0xbec3df06
  40fe36:	icebp  
  40fe37:	fcmovu st,st(2)
  40fe39:	ds and al,cl
  40fe3c:	mov    eax,ds:0x3b79f60c
  40fe41:	pop    esp
  40fe42:	dec    eax
  40fe43:	jne    0x40fe87
  40fe45:	repnz inc ebp
  40fe47:	clc    
  40fe48:	mov    dh,ch
  40fe4a:	push   ebx
  40fe4b:	push   edx
  40fe4c:	jnp    0x40fe51
  40fe4e:	out    0x56,al
  40fe50:	push   ebx
  40fe51:	into   
  40fe52:	ins    BYTE PTR es:[edi],dx
  40fe53:	jle    0x40fdf9
  40fe55:	pop    ebx
  40fe56:	jae    0x40fe3d
  40fe58:	into   
  40fe59:	xor    BYTE PTR [edx+eax*4+0x2def33a],al
  40fe60:	jmp    0xea22:0xcd521bf6
  40fe67:	push   edi
  40fe68:	aam    0x81
  40fe6a:	loop   0x40fdf4
  40fe6c:	pop    ebx
  40fe6d:	stos   BYTE PTR es:[edi],al
  40fe6e:	sbb    BYTE PTR [edi-0x498e58b1],ch
  40fe74:	pop    es
  40fe75:	mov    eax,0x454cd980
  40fe7a:	or     ecx,esp
  40fe7c:	fld    TBYTE PTR [ebx]
  40fe7e:	push   edx
  40fe80:	mov    ch,0xd3
  40fe82:	sbb    al,0x25
  40fe84:	(bad)  
  40fe85:	les    ebx,FWORD PTR [edx-0x10]
  40fe88:	lods   al,BYTE PTR ds:[esi]
  40fe89:	test   DWORD PTR [ecx+ecx*2+0x81b4a7c],ecx
  40fe90:	add    eax,0xf2f0f735
  40fe95:	sbb    ecx,0xffffffb5
  40fe98:	mov    bl,0x2c
  40fe9a:	push   ds
  40fe9b:	fild   WORD PTR [edx-0x4d6cdc58]
  40fea1:	dec    ecx
  40fea2:	dec    ebx
  40fea3:	pop    es
  40fea4:	jp     0x40fe7b
  40fea6:	out    0x18,al
  40fea8:	sahf   
  40fea9:	lock (bad) 
  40feab:	test   al,0xff
  40fead:	loop   0x40ff0e
  40feaf:	ss enter 0xadb,0x6d
  40feb4:	push   ecx
  40feb5:	scas   eax,DWORD PTR es:[edi]
  40feb6:	mov    ch,0x79
  40feb8:	mov    ebp,0xfbddb6ff
  40febd:	retf   
  40febe:	imul   ecx,DWORD PTR [edx+0x2d867930],0xa4a3c481
  40fec8:	test   al,0x55
  40feca:	push   0x46
  40fecc:	outs   dx,BYTE PTR ds:[esi]
  40fecd:	bound  edx,QWORD PTR [edx+edi*8-0x2]
  40fed1:	xchg   ecx,eax
  40fed2:	pop    esp
  40fed3:	xor    eax,0xad1a7265
  40fed8:	xchg   esp,eax
  40fed9:	adc    ecx,DWORD PTR [esi+eiz*4]
  40fedc:	ins    BYTE PTR es:[edi],dx
  40fedd:	in     al,dx
  40fede:	aas    
  40fedf:	mov    ds:0xc10aa9c0,eax
  40fee4:	leave  
  40fee5:	add    eax,0xb4ac5081
  40feea:	sti    
  40feeb:	fdiv   DWORD PTR [ecx]
  40feed:	xchg   esi,eax
  40feee:	enter  0x92ae,0x26
  40fef2:	inc    esi
  40fef3:	into   
  40fef4:	and    edx,DWORD PTR [edx+0x6280db73]
  40fefa:	mov    eax,esp
  40fefc:	push   0xffffff86
  40fefe:	es (bad) 
  40ff00:	aaa    
  40ff01:	pop    esi
  40ff02:	ret    
  40ff03:	clc    
  40ff04:	jb     0x40ff7d
  40ff06:	push   ss
  40ff07:	mov    dl,0x3b
  40ff09:	test   eax,0x336a9c78
  40ff0e:	dec    edi
  40ff0f:	lea    ebp,[edi+eax*1]
  40ff12:	icebp  
  40ff13:	jae    0x40ff49
  40ff15:	test   eax,0xe0e0a5f4
  40ff1a:	hlt    
  40ff1b:	jne    0x40ff4d
  40ff1d:	sbb    al,0x38
  40ff1f:	fcom   DWORD PTR [ebp+0x6d7b84b4]
  40ff26:	ret    
  40ff27:	add    ch,BYTE PTR [esi+0x7e]
  40ff2a:	sub    ebx,esp
  40ff2c:	(bad)  
  40ff2d:	dec    esi
  40ff2e:	sbb    bl,ah
  40ff30:	retf   
  40ff31:	fdiv   DWORD PTR [edi+0x7a]
  40ff34:	mov    edx,0x387c7848
  40ff39:	cmp    bh,BYTE PTR [edx+0x49a0d4d1]
  40ff3f:	ins    BYTE PTR es:[edi],dx
  40ff40:	mov    edi,0x6c26631c
  40ff45:	xchg   ebx,eax
  40ff46:	outs   dx,DWORD PTR ds:[esi]
  40ff47:	scas   al,BYTE PTR es:[edi]
  40ff48:	enter  0xbc99,0xd5
  40ff4c:	xchg   ecx,eax
  40ff4d:	adc    BYTE PTR [eax+0x0],bh
  40ff50:	xchg   ecx,eax
  40ff51:	dec    ebp
  40ff52:	scas   al,BYTE PTR es:[edi]
  40ff53:	lds    edi,FWORD PTR [esp+ecx*1+0x6d]
  40ff57:	sbb    eax,0x6adde30
  40ff5c:	jp     0x40ff17
  40ff5e:	jmp    0x4cba:0x1c77f7e2
  40ff65:	inc    ebx
  40ff66:	ret    0xa81d
  40ff69:	rcr    BYTE PTR [ebx],cl
  40ff6b:	jmp    0x532d9cc5
  40ff70:	enter  0x7eea,0x8d
  40ff74:	push   ds
  40ff75:	test   eax,0xd10c9f33
  40ff7a:	aas    
  40ff7b:	sbb    ebx,DWORD PTR [esi-0x1dee88e4]
  40ff81:	jns    0x40ffa6
  40ff83:	push   0xc46e1046
  40ff88:	in     eax,dx
  40ff89:	push   0xffffffaa
  40ff8b:	sbb    dh,BYTE PTR ds:0x5307d744
  40ff91:	xor    al,0x7a
  40ff93:	ss stc 
  40ff95:	mov    bh,0xf2
  40ff98:	mov    al,0x69
  40ff9a:	retf   0xea17
  40ff9d:	cld    
  40ff9e:	scas   eax,DWORD PTR es:[edi]
  40ff9f:	jmp    0x98b7:0x2d3a43a4
  40ffa6:	push   cs
  40ffa7:	imul   edx,ebx,0x2a21fcf0
  40ffad:	dec    esp
  40ffae:	dec    edx
  40ffaf:	aam    0x2e
  40ffb1:	popa   
  40ffb2:	mov    al,0x86
  40ffb4:	mov    eax,ds:0x3d98c2e9
  40ffb9:	shl    BYTE PTR [ecx],1
  40ffbb:	je     0x41001f
  40ffbd:	aad    0xe
  40ffbf:	mov    al,0xc1
  40ffc1:	icebp  
  40ffc2:	xor    BYTE PTR [ebp+ecx*1-0x784a7691],ch
  40ffc9:	xchg   esp,eax
  40ffca:	sahf   
  40ffcb:	cmp    ebx,DWORD PTR [eax+0x8a38ab]
  40ffd1:	inc    ebx
  40ffd2:	inc    esi
  40ffd3:	sbb    BYTE PTR [ebx+esi*1],dh
  40ffd6:	int    0x77
  40ffd8:	add    al,0xfd
  40ffda:	jmp    0xd0b3d58c
  40ffdf:	add    DWORD PTR [ebp+ecx*1-0x39],ebp
  40ffe3:	dec    edi
  40ffe4:	pop    esi
  40ffe5:	(bad)  
  40ffe6:	hlt    
  40ffe7:	xchg   ebp,eax
  40ffe8:	int    0xe3
  40ffea:	push   esi
  40ffeb:	jge    0x410001
  40ffed:	jno    0x40ff90
  40ffef:	xchg   edi,eax
  40fff0:	scas   eax,DWORD PTR es:[edi]
  40fff1:	jae    0x40ffeb
  40fff3:	in     al,dx
  40fff4:	sub    dl,0xd4
  40fff7:	sbb    BYTE PTR [ecx+0x5cc4e58],ah
  40fffd:	cwde   
  40fffe:	ins    DWORD PTR es:[edi],dx
  40ffff:	sub    dl,BYTE PTR [esi+edi*8+0x6e193cef]
  410006:	xchg   ecx,eax
  410007:	mov    al,0x2f
  410009:	jmp    0xb43401fe
  41000e:	stos   BYTE PTR es:[edi],al
  41000f:	dec    edx
  410010:	arpl   WORD PTR [eax-0x5],sp
  410013:	mov    al,bl
  410015:	adc    DWORD PTR [ecx-0x69a19d27],ebp
  41001b:	jmp    0x410098
  41001d:	aas    
  41001e:	and    eax,0x978b1513
  410023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410024:	push   edx
  410025:	gs lahf 
  410027:	mov    dh,0x7d
  410029:	pop    ds
  41002a:	sbb    eax,eax
  41002c:	and    edi,DWORD PTR [ecx]
  41002e:	sbb    cl,BYTE PTR [ecx+0x39]
  410031:	xor    cl,BYTE PTR [eax-0x14]
  410034:	pop    esi
  410035:	pop    eax
  410036:	push   0xfffffff5
  410038:	cwde   
  410039:	sar    BYTE PTR [esi-0x421bb79f],cl
  41003f:	mov    ds:0xdf7939a7,eax
  410044:	mov    esi,0x27185557
  410049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004a:	int3   
  41004b:	aas    
  41004c:	xchg   ebx,eax
  41004d:	mov    ds:0x56bd77e8,eax
  410052:	scas   eax,DWORD PTR es:[edi]
  410053:	clc    
  410054:	pop    ecx
  410055:	adc    BYTE PTR [esi],0x27
  410058:	xor    eax,0x7f8c40e3
  41005d:	(bad)  
  41005e:	jge    0x410040
  410060:	and    bh,BYTE PTR [ecx+eax*8-0x2857e18f]
  410067:	shl    esp,cl
  410069:	mov    eax,ds:0xeb78fd8a
  41006e:	lds    eax,FWORD PTR es:[edx]
  410071:	je     0x410005
  410073:	call   0xb326:0x41238129
  41007a:	clc    
  41007b:	add    DWORD PTR [esi+0x4eb0eef9],ebx
  410081:	xor    DWORD PTR [esp+esi*8+0xddc39cc],edx
  410088:	adc    al,0xdb
  41008a:	retf   
  41008b:	xchg   ebp,eax
  41008c:	adc    eax,0xae9afbcb
  410091:	cmp    al,0x9f
  410093:	or     eax,ecx
  410095:	push   edi
  410096:	and    eax,0xb5b8668b
  41009b:	push   ds
  41009c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41009d:	pusha  
  41009e:	or     edx,DWORD PTR [ebx-0x7e]
  4100a1:	mov    ds:0xc2b8ec7c,eax
  4100a6:	xchg   edi,eax
  4100a7:	ror    BYTE PTR [esi],0xc7
  4100aa:	aam    0x30
  4100ac:	sub    eax,DWORD PTR [edi]
  4100ae:	pusha  
  4100af:	das    
  4100b0:	stc    
  4100b1:	inc    edi
  4100b2:	jb     0x410052
  4100b4:	xchg   ebx,eax
  4100b5:	adc    al,0x75
  4100b7:	pushf  
  4100b8:	sbb    al,0xce
  4100ba:	jl     0x410066
  4100bc:	inc    edx
  4100bd:	mov    edx,0xb9546458
  4100c2:	sub    eax,0xec45231a
  4100c7:	and    al,0x82
  4100c9:	leave  
  4100ca:	add    DWORD PTR [ebx-0x5607c0bc],0x9ce15e50
  4100d4:	mov    ds:0x13308b2,al
  4100d9:	add    eax,DWORD PTR [ecx-0x36520f5b]
  4100df:	mov    edx,0xcc1e29e
  4100e4:	test   al,0x2c
  4100e6:	push   0x12
  4100e8:	loop   0x41011f
  4100ea:	sub    BYTE PTR [ebx-0x49],dh
  4100ed:	adc    ecx,DWORD PTR [ebp-0x1b288266]
  4100f3:	mov    edi,0xeb273d6b
  4100f8:	outs   dx,DWORD PTR ds:[esi]
  4100f9:	cmp    DWORD PTR [edi-0x5abfda45],esp
  4100ff:	sti    
  410100:	jns    0x41011e
  410102:	aad    0xa8
  410104:	mov    ch,BYTE PTR [ebx+edx*8]
  410107:	mov    edx,0xd38a7cb8
  41010c:	push   ebx
  41010d:	add    ecx,DWORD PTR [eax+0x5d]
  410110:	loop   0x410143
  410112:	imul   esi,DWORD PTR [edx-0x26591183],0xffffffaa
  410119:	int    0x47
  41011b:	scas   eax,DWORD PTR es:[edi]
  41011c:	je     0x4100f5
  41011e:	xchg   esi,eax
  41011f:	sbb    edx,ebp
  410121:	mov    BYTE PTR [eax+eiz*1+0x7b9905a5],cl
  410128:	fwait
  410129:	aam    0xed
  41012b:	not    DWORD PTR [ecx]
  41012d:	or     bl,BYTE PTR [ecx+0x71]
  410130:	shl    DWORD PTR [esi+eax*1-0x3100022c],0x47
  410138:	in     al,dx
  410139:	mov    ds,WORD PTR [esp+esi*8+0x223d1ec0]
  410140:	lahf   
  410141:	xchg   ebx,eax
  410142:	add    DWORD PTR [ebp+0x1eb34845],0xffffffc7
  410149:	inc    eax
  41014a:	sbb    esi,eax
  41014c:	mov    al,ds:0xcbd72ee1
  410151:	int    0x65
  410153:	popf   
  410154:	loop   0x4100f3
  410156:	and    eax,0x652ed412
  41015b:	jecxz  0x410108
  41015d:	lds    ecx,FWORD PTR [edi-0x36]
  410160:	dec    ecx
  410161:	push   ebp
  410162:	or     ah,BYTE PTR [edx-0x4]
  410165:	sbb    BYTE PTR [eax+eax*4],al
  410168:	dec    esi
  410169:	inc    eax
  41016a:	in     al,0x60
  41016c:	cmp    ebp,0x80926f15
  410172:	neg    DWORD PTR [eax]
  410174:	int3   
  410175:	inc    esi
  410176:	dec    ebx
  410177:	cmp    eax,0x6b7101b0
  41017c:	inc    ebp
  41017d:	mov    al,0x4a
  41017f:	mov    ah,0x82
  410181:	(bad)  [esi-0x24]
  410184:	fld    TBYTE PTR [edx-0x25]
  410187:	(bad)  
  410188:	jns    0x410126
  41018a:	ins    BYTE PTR es:[edi],dx
  41018b:	mov    edi,ecx
  41018d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018e:	icebp  
  41018f:	in     al,dx
  410190:	mov    gs,edx
  410192:	mov    ah,0xc0
  410194:	outs   dx,BYTE PTR ds:[esi]
  410195:	call   0xba98:0x7511899e
  41019c:	in     al,dx
  41019d:	xchg   esp,eax
  41019e:	mov    eax,ds:0x4b3cb5b2
  4101a3:	mov    bh,BYTE PTR [ecx+0x100db0d]
  4101a9:	ret    0x1a10
  4101ac:	adc    ch,BYTE PTR [edx-0x39f1d85e]
  4101b2:	xchg   esi,eax
  4101b3:	dec    BYTE PTR [edx]
  4101b5:	push   ebx
  4101b6:	xchg   esp,eax
  4101b7:	sbb    eax,0x571e4108
  4101bc:	xchg   esi,eax
  4101bd:	add    bh,BYTE PTR [esi-0x7f]
  4101c0:	cwde   
  4101c1:	(bad)  
  4101c2:	xchg   esp,eax
  4101c3:	int    0xf9
  4101c5:	(bad)  
  4101c6:	jne    0x410206
  4101c8:	or     DWORD PTR [ebx+0x47637ceb],edx
  4101ce:	test   ch,0x6f
  4101d1:	mov    ebp,0x4c3c17ba
  4101d6:	jnp    0x41022e
  4101d8:	or     esi,DWORD PTR [edi-0x7f]
  4101db:	adc    cl,BYTE PTR [ebx]
  4101dd:	pop    ss
  4101de:	push   edi
  4101df:	(bad)  
  4101e0:	sbb    DWORD PTR [ecx],ebp
  4101e2:	sub    al,0x2e
  4101e4:	jae    0x41019c
  4101e6:	mov    dh,0xc3
  4101e8:	clc    
  4101e9:	test   DWORD PTR [eax+eax*4-0x1b],esp
  4101ed:	fwait
  4101ee:	xchg   ebx,esi
  4101f0:	push   0xe5505b9e
  4101f5:	fmul   QWORD PTR [edi-0x73e94805]
  4101fb:	mov    al,0xcf
  4101fd:	xlat   BYTE PTR ds:[ebx]
  4101fe:	nop
  4101ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410200:	ins    BYTE PTR es:[edi],dx
  410201:	in     al,dx
  410202:	sub    ch,BYTE PTR [ebp+0x26]
  410205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410206:	mov    ecx,0x862076c2
  41020b:	jmp    0x917a:0xe108f348
  410212:	sub    BYTE PTR [ebx-0x24],0xe7
  410216:	cdq    
  410217:	inc    edx
  410218:	cmp    eax,0x5dfd6b75
  41021d:	imul   ebp,DWORD PTR [edx],0xffffffda
  410220:	mov    ecx,0xf8610525
  410225:	xchg   edx,eax
  410226:	xor    BYTE PTR [edi+ebp*4+0x7a127bab],ch
  41022d:	push   ecx
  41022e:	mov    al,0x67
  410230:	jae    0x4102a0
  410232:	repnz loope 0x410262
  410235:	add    eax,0x732b9494
  41023a:	fisttp DWORD PTR [ecx+edi*1]
  41023d:	fwait
  41023e:	pop    eax
  41023f:	loop   0x410285
  410241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410242:	or     ebx,DWORD PTR [esi-0x6d]
  410245:	hlt    
  410246:	popa   
  410247:	and    ebx,DWORD PTR ds:0x1d84cba
  41024d:	retf   0x512f
  410250:	call   0x9103:0x8b07c0a7
  410257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410258:	xor    edx,DWORD PTR [eax+0x75]
  41025b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025c:	out    dx,eax
  41025d:	(bad)  
  41025e:	mov    al,ds:0x31cf6ca3
  410263:	inc    ebp
  410264:	fs out 0x5e,eax
  410267:	in     eax,0xe2
  410269:	or     ecx,DWORD PTR [edi]
  41026b:	pop    edx
  41026c:	(bad)  
  41026d:	dec    esi
  41026e:	pop    eax
  41026f:	jle    0x41025d
  410271:	fdiv   QWORD PTR [esp+edi*2+0x4a]
  410275:	sbb    BYTE PTR [ebp-0x21b9326a],dl
  41027b:	or     al,0x8a
  41027d:	ficom  WORD PTR [ebx]
  41027f:	pushf  
  410280:	pop    es
  410281:	or     eax,0x7b08c194
  410286:	cmp    bh,dl
  410288:	leave  
  410289:	aas    
  41028a:	std    
  41028b:	lahf   
  41028c:	test   DWORD PTR [edi+ecx*2-0x2aa9506b],ebp
  410293:	push   eax
  410294:	and    ebx,esp
  410296:	mov    eax,0xc8391133
  41029b:	mov    ecx,0x83802cad
  4102a0:	or     BYTE PTR [ebx],al
  4102a2:	xor    DWORD PTR [esp+edi*1-0x4595406c],0xeb7d6295
  4102ad:	les    eax,FWORD PTR [eax+0x6a]
  4102b0:	push   cs
  4102b1:	or     DWORD PTR [edx-0x6750ea7d],esp
  4102b7:	icebp  
  4102b8:	pop    ebp
  4102b9:	shl    edi,0x10
  4102bc:	nop
  4102bd:	add    al,0xfe
  4102bf:	lock rol DWORD PTR [eax-0x3f],0x32
  4102c4:	jae    0x410340
  4102c6:	xor    esi,edi
  4102c8:	dec    ebx
  4102c9:	pop    ebp
  4102ca:	or     dl,BYTE PTR [esi]
  4102cc:	push   esi
  4102cd:	adc    esp,DWORD PTR [esi+0x66935d06]
  4102d3:	lods   al,BYTE PTR ds:[esi]
  4102d4:	dec    esi
  4102d5:	xor    al,0xbf
  4102d7:	aaa    
  4102d8:	sahf   
  4102d9:	add    DWORD PTR [ecx-0x686524cb],ebp
  4102df:	cmp    al,0xff
  4102e1:	push   esi
  4102e2:	sub    ecx,DWORD PTR [ebp-0x6a]
  4102e5:	inc    esi
  4102e6:	pop    ecx
  4102e7:	adc    dh,BYTE PTR [ebx+0x7a5b1a83]
  4102ed:	dec    esp
  4102ee:	ret    0xec3f
  4102f1:	xchg   ebp,eax
  4102f2:	(bad)  
  4102f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f5:	mov    WORD PTR [ecx],fs
  4102f7:	test   eax,0xf0f4d02e
  4102fc:	mov    esi,0x22ab7b03
  410301:	(bad)  
  410302:	imul   edx,DWORD PTR [eax+0x6d],0xffffff89
  410306:	imul   ebx,DWORD PTR [eax],0xcf0a9aff
  41030c:	in     al,dx
  41030d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41030f:	push   edx
  410310:	loopne 0x4102d7
  410312:	jg     0x41030a
  410314:	sti    
  410315:	xchg   ebp,eax
  410316:	cmp    BYTE PTR [eax],0x62
  410319:	inc    edi
  41031a:	fidivr DWORD PTR [esi+esi*1]
  41031d:	inc    edi
  41031e:	adc    esp,DWORD PTR [edi+0x21]
  410321:	or     ch,bh
  410323:	test   al,0xe1
  410325:	mov    al,0xae
  410327:	mov    esp,0x7cad39c5
  41032c:	(bad)  
  41032d:	lock cmp eax,0x1d057efb
  410333:	test   BYTE PTR [esp+esi*8],dl
  410336:	mov    ss,ebx
  410338:	(bad)  
  410339:	push   ss
  41033a:	cmp    dh,BYTE PTR [edi]
  41033c:	test   BYTE PTR [ebp+0x17],0x92
  410340:	mov    ds,esp
  410342:	cmp    BYTE PTR [edx-0x13f2347],dh
  410348:	test   BYTE PTR [edi+eax*2],0xb6
  41034c:	fldenv [eax]
  41034e:	mov    cl,0x65
  410350:	ss or  al,0x9
  410353:	jne    0x410387
  410355:	les    ebp,FWORD PTR [ebp-0x1175d790]
  41035b:	mov    ebp,0x348b3a4
  410360:	in     al,dx
  410361:	add    BYTE PTR [ebx],0xc4
  410364:	mov    dh,ch
  410366:	jg     0x410397
  410368:	push   ds
  410369:	ins    DWORD PTR es:[edi],dx
  41036a:	xor    eax,eax
  41036c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41036d:	das    
  41036e:	jle    0x4103ef
  410370:	jmp    0xabe5:0x2b2d913c
  410377:	and    bh,BYTE PTR [edx+0x2e]
  41037a:	sbb    al,0x4a
  41037c:	push   edx
  41037d:	add    eax,0x171a24af
  410382:	(bad)  
  410383:	idiv   BYTE PTR [ebx+0x59b13969]
  410389:	mov    al,0xbb
  41038b:	fcmovnbe st,st(3)
  41038d:	jne    0x4103e2
  41038f:	xor    dl,BYTE PTR [edx-0x6d]
  410392:	cld    
  410393:	mov    dh,0xe1
  410395:	fadd   st(7),st
  410397:	dec    ebx
  410398:	sti    
  410399:	leave  
  41039a:	push   0xffffff89
  41039c:	and    DWORD PTR [ebx-0x6ec0481e],esp
  4103a2:	mov    ebp,0x9e1ecf39
  4103a7:	jl     0x4103bb
  4103a9:	aam    0xb4
  4103ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ac:	js     0x4103ee
  4103ae:	push   ds
  4103af:	xor    esp,DWORD PTR [ebx+eax*4-0x16]
  4103b3:	fbld   TBYTE PTR [ebx]
  4103b5:	icebp  
  4103b6:	test   al,0xbf
  4103b8:	xchg   ch,al
  4103ba:	mov    eax,ds:0xab9f70ed
  4103bf:	imul   edi,DWORD PTR [ebx-0x26],0x8
  4103c3:	fsub   DWORD PTR [edi-0x53]
  4103c6:	add    ecx,DWORD PTR [esi+0x17]
  4103c9:	(bad)  
  4103ca:	int3   
  4103cb:	ret    0x63d9
  4103ce:	in     al,0x2d
  4103d0:	xchg   DWORD PTR [ecx],ebx
  4103d2:	dec    ecx
  4103d3:	jbe    0x41039e
  4103d5:	mov    WORD PTR [ebp-0x664951fc],ds
  4103db:	aad    0x18
  4103dd:	sub    ebp,DWORD PTR [ebx-0x7e8e72cd]
  4103e3:	fnstsw WORD PTR [esp+esi*4-0x6d9ea3f5]
  4103ea:	imul   BYTE PTR [esi]
  4103ec:	mov    ch,0xf8
  4103ee:	loope  0x41037e
  4103f0:	xor    al,0x8c
  4103f2:	aad    0x11
  4103f4:	or     bh,BYTE PTR [edx-0x69]
  4103f7:	cs clc 
  4103f9:	clc    
  4103fa:	pop    ds
  4103fb:	clc    
  4103fc:	dec    edi
  4103fd:	sbb    DWORD PTR [edx-0x4382fee],eax
  410403:	push   ebx
  410404:	lds    eax,FWORD PTR [edi]
  410406:	xchg   ebp,eax
  410407:	sahf   
  410408:	jg     0x4103a5
  41040a:	int3   
  41040b:	and    dl,BYTE PTR [eax+0x1eb27baa]
  410411:	pop    ss
  410412:	dec    esp
  410413:	sbb    ch,BYTE PTR ds:0x1878de35
  410419:	daa    
  41041a:	ja     0x4103e3
  41041c:	sahf   
  41041d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041e:	iret   
  41041f:	das    
  410420:	fiadd  WORD PTR [ebx]
  410422:	add    eax,0x20f6bb45
  410427:	jp     0x410449
  410429:	add    esp,DWORD PTR [ebp+edx*1-0x5079a737]
  410430:	inc    esp
  410431:	sub    BYTE PTR [ebx+0x4be00a6c],al
  410437:	(bad)  
  410438:	mov    ecx,0xf7975d01
  41043d:	int    0x1c
  41043f:	jmp    0x410466
  410441:	ret    0x44fe
  410444:	aas    
  410445:	(bad)  
  410446:	enter  0xa442,0x56
  41044a:	ins    BYTE PTR es:[edi],dx
  41044b:	push   0xffffffbd
  41044d:	mov    ecx,0xfe09be8d
  410452:	std    
  410453:	and    BYTE PTR [edx+edx*2],bh
  410456:	jl     0x41043e
  410458:	adc    dl,BYTE PTR [ecx+0x5f]
  41045b:	pop    es
  41045c:	push   esi
  41045d:	test   BYTE PTR [ecx+0x52f8dfb9],bh
  410463:	inc    ecx
  410464:	push   edi
  410465:	mov    esp,0x5b893a9e
  41046a:	mov    dl,0x2
  41046c:	and    eax,0xc25bfc64
  410471:	test   eax,0xc26eec6e
  410476:	and    cl,dh
  410478:	in     al,dx
  410479:	jg     0x410443
  41047b:	fild   DWORD PTR [edx+0x4b]
  41047e:	cdq    
  41047f:	and    DWORD PTR [edx+0x2a0b920e],esi
  410485:	shr    BYTE PTR ds:0xb76c39a4,1
  41048b:	jne    0x4104bb
  41048d:	sbb    cl,BYTE PTR [edi]
  41048f:	pop    ecx
  410490:	es xchg ecx,eax
  410492:	xchg   DWORD PTR [ebx+ecx*2],edi
  410495:	xchg   DWORD PTR [eax],ebp
  410497:	and    eax,DWORD PTR [ecx-0x37]
  41049a:	popa   
  41049b:	mov    eax,0xae332106
  4104a0:	pop    eax
  4104a1:	sbb    DWORD PTR [ecx+0x52],ecx
  4104a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a5:	push   ss
  4104a6:	inc    edi
  4104a7:	mov    eax,0xffa894aa
  4104ac:	xchg   DWORD PTR [ebx],ebx
  4104ae:	push   ss
  4104af:	sub    eax,0x7ccfcd5a
  4104b4:	shr    BYTE PTR [edx],0xe7
  4104b7:	sbb    eax,0x321a734e
  4104bc:	pop    ds
  4104bd:	push   esp
  4104be:	mov    ch,0x45
  4104c1:	(bad)  
  4104c2:	(bad)
  4104c6:	je     0x410486
  4104c8:	or     DWORD PTR [ecx+esi*1],ecx
  4104cb:	and    BYTE PTR [eax+0x58fa5ad2],0x8b
  4104d2:	xor    edi,eax
  4104d4:	data16 mov ds:0xf32dc4a8,al
  4104da:	add    edx,DWORD PTR [eax+edx*1+0x41165e53]
  4104e1:	out    0x70,al
  4104e3:	mov    ecx,0xe4d388eb
  4104e8:	outs   dx,DWORD PTR ds:[esi]
  4104e9:	test   al,0x63
  4104eb:	sbb    eax,0xba203e83
  4104f0:	sar    BYTE PTR [eax],cl
  4104f2:	mov    dh,0x52
  4104f4:	sbb    DWORD PTR [esi+0x7ed55b09],eax
  4104fa:	fwait
  4104fb:	retf   0x7e9f
  4104fe:	or     al,0x51
  410500:	mov    esi,0x9d565e28
  410505:	lahf   
  410506:	pop    ebx
  410507:	or     BYTE PTR [edx],ch
  410509:	jl     0x4104f9
  41050b:	ins    DWORD PTR es:[edi],dx
  41050c:	push   es
  41050d:	cmc    
  41050e:	dec    eax
  41050f:	in     al,0xa9
  410511:	scas   eax,DWORD PTR es:[edi]
  410512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410513:	cmp    esp,ebx
  410515:	mov    fs,esp
  410517:	arpl   WORD PTR [ecx],si
  410519:	inc    edx
  41051a:	xchg   ecx,eax
  41051b:	xchg   esi,eax
  41051c:	mov    ah,0xfe
  41051e:	or     DWORD PTR [esi],0xffffff92
  410521:	ret    0xf27d
  410524:	in     eax,0xea
  410526:	push   ss
  410527:	adc    eax,0x38228206
  41052c:	sub    esi,DWORD PTR [edi+0x1d2f6a3d]
  410532:	adc    BYTE PTR [ebx-0x7572ee2e],al
  410538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410539:	add    eax,0x50e979b
  41053e:	pushf  
  41053f:	into   
  410540:	sbb    esp,ebp
  410542:	add    BYTE PTR [ebp+0x33f706c2],cl
  410548:	adc    ah,dh
  41054a:	dec    ebp
  41054b:	push   ds
  41054c:	and    eax,0x2e82abf7
  410551:	js     0x410525
  410553:	adc    ebx,DWORD PTR [ebx-0x41b664b]
  410559:	jns    0x4104e8
  41055b:	mov    es,WORD PTR [ecx-0x11604bf6]
  410561:	xor    eax,DWORD PTR [ecx]
  410563:	ins    DWORD PTR es:[edi],dx
  410564:	adc    DWORD PTR [ebp+edi*8-0x13],0xffffff82
  410569:	inc    esp
  41056a:	stos   BYTE PTR es:[edi],al
  41056b:	aam    0xc2
  41056d:	pop    ebp
  41056e:	fs dec eax
  410570:	mov    dh,0xd9
  410572:	sbb    al,0x54
  410574:	xor    DWORD PTR [ebp+edx*4+0x50d00139],ebp
  41057b:	aas    
  41057c:	push   0x2d
  41057e:	loop   0x41057e
  410580:	aad    0x1b
  410582:	push   ebp
  410583:	out    0x20,al
  410585:	xor    eax,0x1cc485f2
  41058a:	les    edx,FWORD PTR [ebx+0x21d8ccd1]
  410590:	sub    DWORD PTR [ecx-0x30e3c68e],esi
  410596:	xor    al,0xfc
  410598:	pop    ecx
  410599:	test   al,0x3d
  41059b:	mov    bl,0xfe
  41059d:	aam    0x5b
  41059f:	popa   
  4105a0:	enter  0x937,0xc3
  4105a4:	scas   eax,DWORD PTR es:[edi]
  4105a5:	dec    esi
  4105a6:	(bad)  
  4105a7:	and    eax,0xb05da7a7
  4105ac:	xchg   edx,eax
  4105ad:	cmp    BYTE PTR [ebx],ah
  4105af:	ins    BYTE PTR es:[edi],dx
  4105b0:	imul   eax,DWORD PTR [edi+0x5d],0x49
  4105b4:	mov    ds:0x8aacbdfa,al
  4105b9:	ror    DWORD PTR [edx+0x3aa801c],1
  4105bf:	mov    ebp,0x9315fda9
  4105c4:	fild   QWORD PTR [edx-0xa5d80f5]
  4105ca:	mov    cl,0xb0
  4105cc:	jge    0x4105f7
  4105ce:	fcomp  DWORD PTR [eax]
  4105d0:	jnp    0x4105f7
  4105d2:	xchg   ebx,eax
  4105d3:	mov    esi,0x56e03582
  4105d8:	dec    ebp
  4105d9:	xchg   esi,eax
  4105da:	inc    ebp
  4105db:	jg     0x410576
  4105dd:	mov    gs,WORD PTR [ebp-0x3af3ca96]
  4105e3:	mov    bl,0x8d
  4105e5:	pop    ss
  4105e6:	into   
  4105e7:	pop    edi
  4105e8:	inc    edi
  4105e9:	mov    edx,0xfd03c87d
  4105ee:	dec    ebp
  4105ef:	mov    ds:0x9dada1e5,eax
  4105f4:	jae    0x4105a7
  4105f6:	mov    ebp,0x60d20fc5
  4105fb:	add    al,0x95
  4105fd:	mov    eax,0xb8323c7d
  410602:	add    ch,BYTE PTR [esi-0x1d4601bc]
  410608:	cmp    DWORD PTR [esi-0x7a2ebd77],ecx
  41060e:	(bad)  
  410610:	fst    QWORD PTR [ecx]
  410612:	jbe    0x4105c2
  410614:	nop
  410615:	pop    es
  410616:	and    DWORD PTR [ecx+eax*2-0x6013125e],esp
  41061d:	ret    0x37df
  410620:	adc    DWORD PTR [ebx+eax*2],0x37
  410624:	cmp    esi,DWORD PTR cs:[edx-0x6d]
  410628:	jge    0x4105c1
  41062a:	mov    ebx,0x56f7b012
  41062f:	adc    ch,dh
  410631:	inc    ebp
  410632:	in     al,dx
  410633:	push   0xffffffcd
  410635:	cmp    ch,bl
  410637:	push   0x17
  410639:	push   0xffffff98
  41063b:	test   ecx,edx
  41063d:	cdq    
  41063e:	hlt    
  41063f:	repnz xor esp,edi
  410642:	and    bh,BYTE PTR [ebx]
  410644:	in     al,0xa5
  410646:	cs shr dh,1
  410649:	mov    DWORD PTR [ebp-0x40bc4b2c],0x4ffb89ac
  410653:	jge    0x410648
  410655:	cs push es
  410657:	(bad)  
  410658:	dec    eax
  410659:	cmp    dh,BYTE PTR [ecx-0x6850bac1]
  41065f:	imul   ecx,DWORD PTR [edi+0x10f049d3],0xffffffd4
  410666:	scas   eax,DWORD PTR es:[edi]
  410667:	mov    ?,esp
  410669:	stos   DWORD PTR es:[edi],eax
  41066a:	nop
  41066b:	pop    esi
  41066c:	jecxz  0x410677
  41066e:	xchg   ecx,eax
  41066f:	ss push 0xffffffba
  410672:	push   ecx
  410673:	ds pop ds
  410675:	mov    al,0xc9
  410677:	aam    0x3e
  410679:	jo     0x410638
  41067b:	fmul   QWORD PTR [eax-0x6dc542b1]
  410681:	inc    edx
  410682:	add    cl,BYTE PTR [ebp+0x10e20841]
  410688:	sub    eax,DWORD PTR [ecx-0x21631338]
  41068e:	jl     0x41069e
  410690:	stos   BYTE PTR es:[edi],al
  410691:	es scas al,BYTE PTR es:[edi]
  410693:	mov    al,0x29
  410695:	out    0xe1,eax
  410697:	pop    es
  410698:	sti    
  410699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41069a:	jne    0x4106a8
  41069c:	sub    eax,0x81f6efe8
  4106a1:	bound  esi,QWORD PTR [esi+0x1d166e2f]
  4106a7:	jecxz  0x41070b
  4106a9:	cwde   
  4106aa:	lds    eax,FWORD PTR [edx]
  4106ac:	jg     0x41069f
  4106ae:	lahf   
  4106af:	push   cs
  4106b0:	loopne 0x410716
  4106b2:	rcl    DWORD PTR [ecx-0x476e2921],1
  4106b8:	jecxz  0x4106d3
  4106ba:	mov    ebp,0x57cc7d00
  4106bf:	and    eax,0xd5b8768c
  4106c4:	shr    DWORD PTR [ecx-0x6e18756b],1
  4106ca:	out    dx,al
  4106cb:	fwait
  4106cc:	mov    edx,0x80e853bf
  4106d1:	out    0xb6,eax
  4106d3:	neg    DWORD PTR [ebp-0x5c]
  4106d6:	aas    
  4106d7:	mov    esi,0x5884c992
  4106dc:	lock ds pop ds
  4106df:	cmp    DWORD PTR es:[edx+0xfba3b16],ebp
  4106e6:	shl    BYTE PTR [ebp-0x580a7386],1
  4106ec:	cmp    ebx,DWORD PTR [ecx+0x52cdf22b]
  4106f2:	ins    BYTE PTR es:[edi],dx
  4106f3:	fadd   QWORD PTR [edi]
  4106f5:	jmp    WORD PTR [edx+eiz*1]
  4106f9:	lea    ebx,[edx-0x758f7b4e]
  4106ff:	aad    0xe6
  410701:	js     0x410777
  410703:	scas   al,BYTE PTR es:[edi]
  410704:	xor    eax,0xf77552a7
  410709:	scas   eax,DWORD PTR es:[edi]
  41070a:	outs   dx,BYTE PTR ds:[esi]
  41070b:	mov    esp,0xe73b3196
  410710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410711:	int    0xcd
  410713:	mov    ecx,0xe67defe2
  410718:	and    eax,0xe050c98d
  41071d:	lods   eax,DWORD PTR ds:[esi]
  41071e:	xor    bh,dl
  410720:	mov    bh,0xe1
  410722:	int    0x8f
  410724:	mov    eax,ds:0x182e6024
  410729:	push   eax
  41072a:	int3   
  41072b:	dec    ecx
  41072c:	dec    ebp
  41072d:	dec    ebx
  41072e:	fcom   st(7)
  410730:	xchg   esi,eax
  410731:	add    eax,esi
  410733:	xchg   edx,eax
  410734:	jne    0x410700
  410736:	mov    al,ds:0x36bd29f4
  41073b:	mov    ebx,0xe70b9c41
  410740:	test   eax,0x14a92c1
  410745:	out    0xef,eax
  410747:	call   0x91af6382
  41074c:	jp     0x4106f9
  41074e:	mov    bl,0x38
  410750:	ret    0xcb5e
  410753:	or     eax,ecx
  410755:	mov    bl,0xe6
  410757:	and    eax,0xd2ad539d
  41075c:	xor    dl,BYTE PTR [ebp-0xb63a1c5]
  410762:	outs   dx,BYTE PTR ds:[esi]
  410763:	jae    0x41079a
  410765:	fld    TBYTE PTR [eax-0x6]
  410768:	pusha  
  410769:	scas   al,BYTE PTR es:[edi]
  41076a:	sbb    al,BYTE PTR [ebp+0x76]
  41076d:	mov    edi,0x449301d2
  410772:	cs call 0x3ad7:0x5539e194
  41077a:	shr    BYTE PTR [edx+eax*1-0x7b],cl
  41077e:	sub    eax,0xe02b0fe9
  410783:	stos   DWORD PTR es:[edi],eax
  410784:	add    DWORD PTR [ecx+0x51a3be50],edi
  41078a:	popa   
  41078b:	mov    ds:0x35dae0b2,al
  410790:	shl    ch,cl
  410792:	popf   
  410793:	retf   
  410794:	add    bl,BYTE PTR ds:0x734ff467
  41079a:	aam    0xc1
  41079c:	div    BYTE PTR [ebx]
  41079e:	shr    DWORD PTR [esi],cl
  4107a0:	out    0xdc,al
  4107a2:	add    dh,BYTE PTR ds:0xc9545dd8
  4107a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a9:	adc    eax,0xb5168e36
  4107ae:	mov    esi,0xf9d11ef3
  4107b3:	and    ebx,DWORD PTR [edx+0x34]
  4107b6:	faddp  st(5),st
  4107b8:	xor    eax,0x2ea4b00c
  4107bd:	scas   eax,DWORD PTR es:[edi]
  4107be:	jmp    0x410807
  4107c0:	jp     0x410743
  4107c2:	xor    BYTE PTR [eax-0x62],ah
  4107c5:	xor    al,0xc4
  4107c7:	imul   edi,edx,0x4d
  4107ca:	and    DWORD PTR [ecx-0x58],ebx
  4107cd:	mov    edx,0x6a7f27e5
  4107d2:	cmp    BYTE PTR [esi],0x4f
  4107d5:	jb     0x4107eb
  4107d7:	pop    es
  4107d8:	fidiv  DWORD PTR [eax-0x62d3d87d]
  4107de:	and    ebp,edi
  4107e0:	jecxz  0x41085d
  4107e2:	add    bl,BYTE PTR [esi+0x6c]
  4107e5:	mov    ?,WORD PTR [ebx+0x6c]
  4107e8:	dec    esi
  4107e9:	mov    ebx,0x1ff598a7
  4107ee:	or     DWORD PTR [esi+0x5bc1fb0],esp
  4107f4:	sahf   
  4107f5:	and    edi,DWORD PTR [esi-0x37]
  4107f8:	pusha  
  4107f9:	pop    eax
  4107fa:	mov    al,ds:0xea3aa231
  4107ff:	call   0xd808:0x27a64660
  410806:	ins    DWORD PTR es:[edi],dx
  410807:	ins    DWORD PTR es:[edi],dx
  410808:	dec    eax
  410809:	and    ebp,DWORD PTR [edx-0x2e8e9405]
  41080f:	cld    
  410810:	dec    edx
  410811:	in     eax,0xf8
  410813:	pop    ebx
  410814:	and    al,BYTE PTR [ecx]
  410816:	pop    es
  410817:	sub    eax,0x1996a998
  41081c:	xor    al,0xf2
  41081e:	lods   al,BYTE PTR ds:[esi]
  41081f:	pop    ecx
  410820:	pop    esi
  410821:	dec    ecx
  410822:	in     eax,dx
  410823:	retf   0x214a
  410826:	nop
  410827:	rol    ebx,0x4d
  41082a:	out    dx,eax
  41082b:	mov    al,0x70
  41082d:	test   eax,0x2e77eaa7
  410832:	sti    
  410833:	(bad)  
  410834:	popf   
  410835:	into   
  410836:	pop    ss
  410837:	ret    
  410838:	push   0xfffffff5
  41083a:	xchg   BYTE PTR [ecx+0x425e434d],bh
  410840:	adc    DWORD PTR [edx],edx
  410842:	fwait
  410843:	sbb    esp,ecx
  410845:	pop    edx
  410846:	mov    ebx,0x9678e67e
  41084b:	lock add eax,ebx
  41084e:	cld    
  41084f:	fbstp  TBYTE PTR es:[ecx]
  410852:	mov    WORD PTR [ebx-0x2512ada4],cs
  410858:	sbb    BYTE PTR [edi+ebx*1-0xee96f80],dl
  41085f:	(bad)  
  410860:	jl     0x41080f
  410862:	scas   al,BYTE PTR es:[edi]
  410863:	(bad)  
  410864:	inc    bp
  410866:	cmp    DWORD PTR [ebp-0xfa40414],edi
  41086c:	mov    edi,0x587afa12
  410871:	mov    si,0x9a60
  410875:	cmc    
  410876:	cmc    
  410877:	pop    ebp
  410878:	mov    fs,ebp
  41087a:	adc    BYTE PTR [eax+0x2c1f5c2a],al
  410880:	dec    ebx
  410881:	out    0x12,eax
  410883:	push   0x54
  410885:	sbb    al,0xb3
  410887:	loop   0x410824
  410889:	mov    ebp,0x37bb235
  41088e:	pushf  
  41088f:	push   0x5afbe2e2
  410894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410895:	inc    BYTE PTR [edi-0x7064187]
  41089b:	and    ebp,DWORD PTR [edi]
  41089d:	xlat   BYTE PTR ds:[ebx]
  41089e:	push   esi
  41089f:	pop    esp
  4108a0:	pop    es
  4108a1:	cmp    eax,esp
  4108a3:	dec    ecx
  4108a4:	ds mov eax,0x93fbf4bb
  4108aa:	sub    DWORD PTR [edx+0x4c7ddb8b],ecx
  4108b0:	add    BYTE PTR [ebx],bl
  4108b2:	mov    eax,0x53cb7101
  4108b7:	mov    bl,0xb4
  4108b9:	shr    cl,cl
  4108bb:	push   0x884a7359
  4108c0:	fiadd  DWORD PTR [ecx-0xffcb1c5]
  4108c6:	mov    ds:0x2d652416,al
  4108cb:	xchg   ebp,eax
  4108cc:	in     eax,0x56
  4108ce:	xor    al,0x49
  4108d0:	mov    bh,BYTE PTR [edx-0x50c632d2]
  4108d6:	jne    0x41086b
  4108d8:	fwait
  4108d9:	ins    DWORD PTR es:[edi],dx
  4108da:	jbe    0x41087d
  4108dc:	cmp    al,0x3
  4108de:	mov    al,bl
  4108e0:	cmp    eax,0x7591f8a6
  4108e5:	xor    ebp,DWORD PTR [esi]
  4108e7:	and    dl,BYTE PTR [ebx+0x4]
  4108ea:	jno    0x410889
  4108ec:	jnp    0x410930
  4108ee:	jo     0x4108cf
  4108f0:	mov    edi,0xb473f7c2
  4108f5:	cmp    esp,DWORD PTR [esi]
  4108f7:	or     DWORD PTR [eax+0x56da6825],ecx
  4108fd:	stc    
  4108fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ff:	int    0xbd
  410901:	out    dx,al
  410902:	(bad)
  410906:	mov    cl,0xcd
  410908:	into   
  410909:	sbb    BYTE PTR [edi+0x9a7d59f],0xdc
  410910:	in     al,dx
  410911:	sbb    eax,0x206a1157
  410916:	pop    es
  410917:	push   ebx
  410918:	inc    edi
  410919:	pop    ebx
  41091a:	or     al,0xd8
  41091c:	out    0x0,eax
  41091e:	mov    esp,0x98fc12b4
  410923:	pusha  
  410924:	test   DWORD PTR [ebx],esp
  410926:	adc    BYTE PTR [esi],ch
  410928:	lods   al,BYTE PTR ds:[esi]
  410929:	cmp    eax,0xb778b834
  41092e:	push   eax
  41092f:	pop    ecx
  410930:	in     al,dx
  410931:	pop    esp
  410932:	adc    BYTE PTR [esi+0x7a],bh
  410935:	mov    DWORD PTR [ecx],esi
  410937:	in     al,0x17
  410939:	sbb    bh,BYTE PTR [edx+0x437b296c]
  41093f:	and    edx,DWORD PTR [esi+0x19]
  410942:	ja     0x4108fa
  410944:	clc    
  410945:	add    DWORD PTR [edi+0x3c282378],esi
  41094b:	jnp    0x410909
  41094d:	cmp    esi,eax
  41094f:	xchg   esp,eax
  410950:	xchg   edx,eax
  410951:	and    al,0x22
  410953:	ror    DWORD PTR [bp+si-0x7d],cl
  410957:	xchg   BYTE PTR [edx+ebp*4-0x283b56fd],dl
  41095e:	mov    al,ds:0x2c31b451
  410963:	push   ebx
  410964:	dec    ebp
  410965:	in     eax,dx
  410966:	scas   al,BYTE PTR es:[edi]
  410967:	loopne 0x410968
  410969:	bound  ecx,QWORD PTR [eax-0xe6884f6]
  41096f:	sar    DWORD PTR [ecx+0xf],0xd2
  410973:	xchg   ebp,eax
  410974:	add    DWORD PTR [edx-0x29],edx
  410977:	mov    ah,0x92
  410979:	loope  0x410986
  41097b:	pop    ss
  41097c:	sbb    bh,BYTE PTR [eax-0x7e]
  41097f:	add    eax,0x36c4dda
  410984:	add    eax,0x93944c27
  410989:	cld    
  41098a:	inc    esi
  41098b:	jmp    0x410994
  41098d:	out    0xf1,al
  41098f:	mov    dh,0xfb
  410991:	call   DWORD PTR [edx-0x6e014b77]
  410997:	cmp    bx,sp
  41099a:	ja     0x410925
  41099c:	cdq    
  41099d:	push   cs
  41099e:	xchg   esp,eax
  41099f:	mov    ?,WORD PTR [esi+0x70]
  4109a2:	xchg   DWORD PTR [ecx-0x171aa478],eax
  4109a8:	and    al,0x67
  4109aa:	clc    
  4109ab:	xlat   BYTE PTR ds:[ebx]
  4109ac:	aas    
  4109ad:	dec    eax
  4109ae:	xor    BYTE PTR [ebx-0x268e5a06],bl
  4109b4:	mov    dh,0xb7
  4109b6:	cmp    BYTE PTR [ecx+0x21],0xdf
  4109ba:	retf   
  4109bb:	push   0xc80d2e91
  4109c0:	push   ss
  4109c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c2:	lods   eax,DWORD PTR ds:[esi]
  4109c3:	clc    
  4109c4:	push   cs
  4109c5:	jg     0x410a18
  4109c7:	push   esp
  4109c8:	scas   eax,DWORD PTR es:[edi]
  4109c9:	ja     0x41099c
  4109cb:	xor    eax,0x645e5f3d
  4109d0:	mov    ebx,0x62756ed2
  4109d5:	daa    
  4109d6:	imul   edx,DWORD PTR [edi+0x7dc3ff99],0xa64b582d
  4109e0:	adc    DWORD PTR [ecx+ebp*1-0x33],0x521f03e3
  4109e8:	scas   al,BYTE PTR es:[edi]
  4109e9:	retf   0x1cfa
  4109ec:	out    dx,al
  4109ed:	retf   0x9604
  4109f0:	xchg   ebx,eax
  4109f1:	fiadd  WORD PTR [ebx+0x285acbc1]
  4109f7:	inc    edx
  4109f8:	xchg   ebp,eax
  4109f9:	aas    
  4109fa:	dec    edx
  4109fb:	je     0x410a7a
  4109fd:	pop    esi
  4109fe:	push   ebx
  4109ff:	jecxz  0x410a01
  410a01:	fdiv   DWORD PTR [ebx+ebp*8]
  410a04:	cwde   
  410a05:	cld    
  410a06:	sbb    al,0x9
  410a08:	das    
  410a09:	inc    esp
  410a0a:	cmp    al,dh
  410a0c:	(bad)  
  410a0e:	inc    ebp
  410a0f:	clc    
  410a10:	je     0x4109aa
  410a12:	adc    ecx,eax
  410a14:	adc    edi,DWORD PTR ds:0xe5783b21
  410a1a:	xchg   edx,eax
  410a1b:	add    DWORD PTR [ebx+0x49766e34],edi
  410a21:	ins    DWORD PTR es:[edi],dx
  410a22:	fist   WORD PTR [esi-0x621255e6]
  410a29:	fdiv   QWORD PTR [edx]
  410a2b:	xor    ch,al
  410a2d:	lods   al,BYTE PTR ss:[esi]
  410a2f:	(bad)  
  410a33:	mov    dh,0xd4
  410a35:	adc    al,0x90
  410a37:	shl    DWORD PTR [ebx],0x2f
  410a3a:	dec    esp
  410a3b:	xchg   esp,eax
  410a3c:	test   BYTE PTR ds:0xd834ef3f,0x7c
  410a43:	dec    esp
  410a44:	push   edi
  410a45:	cmp    al,0xb
  410a47:	outs   dx,BYTE PTR ds:[esi]
  410a48:	adc    al,0x2f
  410a4a:	jb     0x410a1a
  410a4c:	sub    ch,BYTE PTR [ebx+0x73]
  410a4f:	fstp   QWORD PTR [edi-0x11]
  410a52:	xor    BYTE PTR [edi],ah
  410a54:	push   ds
  410a55:	ror    DWORD PTR [eax],1
  410a57:	imul   DWORD PTR ss:[ebp-0x32a53959]
  410a5e:	mov    esp,0x4c30cd0f
  410a63:	(bad)  
  410a65:	dec    ebx
  410a66:	pop    esp
  410a67:	jl     0x410a74
  410a69:	xchg   DWORD PTR [edx+0x4],ecx
  410a6c:	or     eax,0x5fcb93c
  410a71:	das    
  410a72:	cwde   
  410a73:	push   ebx
  410a74:	pop    edx
  410a75:	adc    BYTE PTR [edx+edx*1+0x51],dl
  410a79:	or     al,dh
  410a7b:	(bad)  
  410a7c:	or     eax,0xa45d83a0
  410a81:	gs xchg edi,eax
  410a83:	or     BYTE PTR [ecx],0xb5
  410a86:	sbb    ebx,esi
  410a88:	clc    
  410a89:	and    al,BYTE PTR [eax+esi*2]
  410a8c:	je     0x410b0d
  410a8e:	jmp    FWORD PTR [eax]
  410a90:	clc    
  410a91:	aad    0x95
  410a93:	sub    edx,DWORD PTR [ecx]
  410a95:	adc    ebx,ebp
  410a97:	sar    BYTE PTR [edx+0x2e],1
  410a9a:	jg     0x410af2
  410a9c:	sahf   
  410a9d:	stos   BYTE PTR es:[edi],al
  410a9e:	adc    BYTE PTR [edi],ah
  410aa0:	je     0x410b0f
  410aa2:	in     eax,dx
  410aa3:	inc    BYTE PTR [eax-0x4e9ecbaf]
  410aa9:	jmp    0x62d03e6f
  410aae:	dec    eax
  410aaf:	imul   edi,DWORD PTR [edx+0x41],0xf40a771b
  410ab6:	mov    edx,0x44dafe53
  410abb:	ss retf 0xdabf
  410abf:	popaw  
  410ac1:	dec    esi
  410ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac3:	and    eax,0x7ce7d002
  410ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac9:	div    BYTE PTR [eax+0x54]
  410acc:	or     DWORD PTR [esi-0x6e59be3e],ecx
  410ad2:	adc    esi,edx
  410ad4:	cmp    edi,0xbc1188fa
  410ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410adb:	xchg   edx,eax
  410adc:	ins    DWORD PTR es:[edi],dx
  410add:	jp     0x410afd
  410adf:	arpl   si,dx
  410ae1:	out    dx,al
  410ae2:	int    0x96
  410ae4:	imul   BYTE PTR ds:0x5d03c651
  410aea:	push   ecx
  410aeb:	push   ss
  410aec:	xchg   esp,eax
  410aed:	push   ss
  410aee:	mov    dl,0x8c
  410af0:	mov    eax,0x15f18870
  410af5:	xlat   BYTE PTR ds:[ebx]
  410af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af8:	pop    es
  410af9:	pop    esp
  410afa:	retf   0x60aa
  410afd:	jae    0x410b09
  410aff:	and    dl,ah
  410b01:	clc    
  410b02:	mov    dl,0x3d
  410b04:	dec    DWORD PTR [ecx]
  410b06:	dec    ebp
  410b07:	pop    ds
  410b08:	(bad)  
  410b09:	push   ecx
  410b0a:	mov    esp,eax
  410b0c:	stos   DWORD PTR es:[edi],eax
  410b0d:	loopne 0x410abf
  410b0f:	pop    ecx
  410b10:	xor    al,0xb2
  410b12:	fmul   QWORD PTR [ecx+0x33]
  410b15:	loopne 0x410b5a
  410b17:	sbb    al,bh
  410b19:	out    0xd0,eax
  410b1b:	sbb    eax,0x65b946bb
  410b20:	dec    ebx
  410b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b22:	fisttp WORD PTR [esi+0x5]
  410b25:	mov    ch,0xe6
  410b27:	mov    ch,0x39
  410b29:	inc    ebx
  410b2a:	mov    ebx,0x137a46d3
  410b2f:	mov    ebp,0xb0759012
  410b34:	adc    BYTE PTR [ebx+0x70],0x67
  410b38:	cmp    DWORD PTR [eax],0x6
  410b3b:	(bad)  
  410b3c:	push   cs
  410b3d:	mov    esp,fs
  410b3f:	push   ecx
  410b40:	sub    ah,BYTE PTR [ecx-0x7c]
  410b43:	mov    ebp,0xaab1e906
  410b48:	mov    ch,0xa9
  410b4a:	mov    ecx,gs
  410b4c:	xchg   ebx,eax
  410b4d:	retf   
  410b4e:	js     0x410bb4
  410b50:	cmp    eax,0x567b663
  410b55:	hlt    
  410b56:	push   ds
  410b57:	stos   DWORD PTR es:[edi],eax
  410b58:	out    dx,eax
  410b59:	(bad)  
  410b5a:	(bad)  
  410b5b:	cwde   
  410b5c:	or     al,al
  410b5e:	dec    edx
  410b5f:	sar    edx,0x23
  410b62:	(bad)
  410b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b67:	xchg   ebx,eax
  410b68:	or     DWORD PTR [edi],edx
  410b6a:	sub    al,0x37
  410b6c:	ret    
  410b6d:	add    BYTE PTR [ecx-0x21],ah
  410b70:	mov    al,0xc
  410b72:	(bad)  
  410b73:	iret   
  410b74:	outs   dx,DWORD PTR ds:[esi]
  410b75:	inc    al
  410b77:	dec    si
  410b79:	out    0x1a,al
  410b7b:	jb     0x410bdd
  410b7d:	fild   QWORD PTR [eax-0x1dd23834]
  410b83:	fstp   st(5)
  410b85:	adc    ah,ch
  410b87:	add    edi,esp
  410b89:	mov    bh,0x9c
  410b8b:	arpl   ax,bp
  410b8d:	test   al,0x70
  410b8f:	and    edx,eax
  410b91:	loope  0x410ba8
  410b93:	inc    ebx
  410b94:	repz in ax,0xa
  410b98:	arpl   WORD PTR [ebx-0x50],bp
  410b9b:	pop    es
  410b9c:	xor    BYTE PTR [ebp+0x271d3a14],bl
  410ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba3:	test   BYTE PTR [ecx-0x5],bl
  410ba6:	shl    BYTE PTR [ecx],1
  410ba8:	inc    edi
  410ba9:	enter  0xb549,0x9b
  410bad:	mov    al,ds:0x35dc1610
  410bb2:	ss ss stos DWORD PTR es:[edi],eax
  410bb5:	mov    ah,BYTE PTR [ebp+0x4cd6a58f]
  410bbb:	into   
  410bbc:	xor    al,0xcc
  410bbe:	cmp    eax,0x201f85e3
  410bc3:	pop    edi
  410bc4:	jmp    0x3b74dc47
  410bc9:	jmp    0x410c27
  410bcb:	mov    eax,ds:0xb46cb33c
  410bd0:	xor    esi,DWORD PTR [ecx+edi*2+0x7caa7d01]
  410bd7:	arpl   WORD PTR [ecx+edi*8+0x65aabcb9],ax
  410bde:	mov    cl,0x8f
  410be0:	shufps xmm0,xmm0,0xcb
  410be4:	stos   DWORD PTR es:[edi],eax
  410be5:	pop    esp
  410be6:	pop    edi
  410be7:	scas   al,BYTE PTR es:[edi]
  410be8:	das    
  410be9:	repnz add ecx,ebx
  410bec:	mov    WORD PTR [ecx-0x51],es
  410bef:	aad    0x16
  410bf1:	jmp    0x1e9b:0x91750070
  410bf8:	mov    ebx,0x6e054e25
  410bfd:	inc    edi
  410bfe:	clc    
  410bff:	or     al,0x40
  410c01:	or     ch,bl
  410c03:	loopne 0x410c5d
  410c05:	shr    edx,1
  410c07:	ret    0x5a36
  410c0a:	adc    esi,DWORD PTR [eax]
  410c0c:	shr    DWORD PTR [edx+edi*4],0xf1
  410c10:	pop    es
  410c11:	test   BYTE PTR [edx],bh
  410c13:	xor    BYTE PTR [edx-0x4f],ch
  410c16:	mov    dh,0xb2
  410c18:	popa   
  410c19:	(bad)  
  410c1a:	cmp    ebp,esp
  410c1c:	(bad)  
  410c1d:	lock pop ebp
  410c1f:	adc    al,0x8c
  410c21:	or     esp,DWORD PTR [eax+eiz*4]
  410c24:	jne    0x410c54
  410c26:	fdivr  QWORD PTR [ebx+0x3c]
  410c29:	cmovo  ebp,DWORD PTR [ebx]
  410c2c:	pusha  
  410c2d:	imul   BYTE PTR [esi-0x54]
  410c30:	(bad)  
  410c31:	cld    
  410c32:	imul   ebp,DWORD PTR [edi],0xd24fe03b
  410c38:	cli    
  410c39:	xchg   esp,eax
  410c3a:	sub    eax,0xae9001b4
  410c3f:	imul   edx,DWORD PTR [eax+0x7c],0xffffffa5
  410c43:	sub    eax,eax
  410c45:	fwait
  410c46:	jnp    0x410c2e
  410c48:	cdq    
  410c49:	cwde   
  410c4a:	ds into 
  410c4c:	jmp    0x410bd6
  410c4e:	jno    0x410bd4
  410c50:	xchg   dl,dh
  410c52:	ds (bad) 
  410c54:	fcom   QWORD PTR ds:0x4198e40e
  410c5a:	xor    BYTE PTR ds:0x7ff57d8e,al
  410c60:	pushf  
  410c61:	imul   edx,DWORD PTR [eax],0xe28c6262
  410c67:	enter  0xf95a,0x9e
  410c6b:	lahf   
  410c6c:	dec    edi
  410c6d:	aad    0x36
  410c6f:	push   edx
  410c70:	pop    ebx
  410c71:	and    DWORD PTR [ebx+eiz*1-0x368d689b],eax
  410c78:	retf   
  410c79:	iret   
  410c7a:	cmp    BYTE PTR [eax-0xd60e904],bh
  410c80:	or     BYTE PTR [ecx-0x26],dl
  410c83:	rcr    ecx,cl
  410c85:	mov    cs,esi
  410c87:	sub    bl,BYTE PTR [ebp-0x6d]
  410c8a:	stos   DWORD PTR es:[edi],eax
  410c8b:	inc    ebx
  410c8c:	cmp    BYTE PTR [ecx+0x36],dl
  410c8f:	inc    edx
  410c90:	xor    eax,0x61312758
  410c95:	jno    0x410cda
  410c97:	stos   BYTE PTR es:[edi],al
  410c98:	mov    BYTE PTR [eax],dl
  410c9a:	or     eax,0xdfcaecfa
  410c9f:	call   0x9e42:0x4086ec2e
  410ca6:	mov    al,0x4c
  410ca8:	xor    eax,0x83532213
  410cad:	xchg   DWORD PTR [ecx+eax*1-0x7930c44d],edx
  410cb4:	lods   eax,DWORD PTR ds:[esi]
  410cb5:	mov    WORD PTR [ecx],ds
  410cb7:	mov    cl,0xa5
  410cb9:	pop    ecx
  410cba:	inc    ebx
  410cbb:	add    eax,0xe72e1499
  410cc0:	(bad)  
  410cc1:	out    0x9a,eax
  410cc3:	clc    
  410cc4:	cmp    DWORD PTR [edx+edi*4+0x33],ebx
  410cc8:	out    0x80,eax
  410cca:	add    eax,0x36e6401e
  410ccf:	xchg   esp,eax
  410cd0:	(bad)  
  410cd1:	sub    eax,0xd47ecc5d
  410cd6:	fsubr  DWORD PTR [edx-0x127a3370]
  410cdc:	or     bh,dh
  410cde:	xchg   esp,eax
  410cdf:	inc    eax
  410ce0:	mov    eax,0x671a7e21
  410ce5:	daa    
  410ce6:	and    edx,esi
  410ce8:	xchg   ebp,esi
  410cea:	into   
  410ceb:	sbb    dh,bh
  410ced:	cmp    eax,0x6c23d42e
  410cf2:	cli    
  410cf3:	mov    ds:0xe7776378,eax
  410cf8:	xchg   bh,bh
  410cfa:	loop   0x410c89
  410cfc:	int    0xce
  410cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cff:	push   esp
  410d00:	push   ds
  410d01:	or     eax,0x8a7a195e
  410d06:	add    eax,0x5c369349
  410d0b:	jns    0x410d3b
  410d0d:	push   es
  410d0e:	bound  esp,QWORD PTR [edi+0x1a0e1ae9]
  410d14:	fdivr  QWORD PTR [edx-0x6605b675]
  410d1a:	lock scas eax,DWORD PTR es:[edi]
  410d1c:	repnz scas eax,DWORD PTR es:[edi]
  410d1e:	adc    eax,eax
  410d20:	add    eax,0xa174945e
  410d25:	xlat   BYTE PTR ds:[ebx]
  410d26:	mov    eax,0xdab9da1b
  410d2b:	xchg   edx,eax
  410d2c:	dec    esi
  410d2d:	sub    al,0xeb
  410d2f:	xor    DWORD PTR [esi],edi
  410d31:	or     DWORD PTR [edi],eax
  410d33:	xchg   BYTE PTR [eax+ecx*2+0x1b53af68],ah
  410d3a:	mov    al,BYTE PTR [ebx]
  410d3c:	push   eax
  410d3d:	loope  0x410d15
  410d3f:	sbb    BYTE PTR [esi+0x4c0498e0],ah
  410d45:	rol    al,1
  410d47:	sti    
  410d48:	mov    dl,0xc3
  410d4a:	fadd   DWORD PTR [ebp-0x696e56c6]
  410d50:	mov    al,ds:0xee2d3184
  410d55:	imul   ebx,ecx,0xead79611
  410d5b:	scas   al,BYTE PTR es:[edi]
  410d5c:	lahf   
  410d5d:	or     DWORD PTR [ecx],0x56
  410d60:	and    al,0x70
  410d62:	push   esi
  410d63:	das    
  410d64:	not    DWORD PTR [eax+0x565f74b5]
  410d6a:	scas   eax,DWORD PTR es:[edi]
  410d6b:	popf   
  410d6c:	jo     0x410ddd
  410d6e:	adc    al,0x65
  410d70:	jle    0x410d94
  410d72:	add    al,0x48
  410d74:	mov    ds:0x79f4e161,al
  410d79:	push   edi
  410d7a:	pop    ecx
  410d7b:	pop    edx
  410d7c:	mov    ds:0x28572cb2,al
  410d81:	pop    eax
  410d82:	sub    BYTE PTR [edx-0x11ab260b],0x9f
  410d89:	sub    esi,DWORD PTR [ebp+0x3a]
  410d8c:	mov    ds:0x16249719,eax
  410d91:	shl    BYTE PTR [edx-0xc68e506],cl
  410d97:	das    
  410d98:	or     ebx,DWORD PTR ds:0xfe7a3b7d
  410d9e:	test   esi,esi
  410da0:	sub    eax,0xe95dcb8a
  410da5:	in     eax,dx
  410da6:	scas   al,BYTE PTR es:[edi]
  410da7:	imul   ebx,DWORD PTR [ebx+eax*1+0x25],0x5a906c61
  410daf:	mov    ebp,0x61e2469d
  410db4:	add    DWORD PTR [edx-0x6c],esi
  410db7:	push   esi
  410db8:	xchg   BYTE PTR [esi-0x1021c5b8],al
  410dbe:	shl    DWORD PTR [ecx+0x1],cl
  410dc1:	imul   DWORD PTR [ebx+0x6f8051c6]
  410dc7:	stos   DWORD PTR es:[edi],eax
  410dc8:	shr    DWORD PTR [ebx],0xb6
  410dcb:	mov    ebp,0x2644fb60
  410dd0:	pop    ebx
  410dd1:	clc    
  410dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd3:	xchg   ecx,eax
  410dd4:	sub    DWORD PTR [eax+esi*2-0x7c9f9256],esp
  410ddb:	(bad)
  410dde:	nop
  410ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de0:	rcr    BYTE PTR [edi+0x50],cl
  410de3:	ss inc esi
  410de5:	in     eax,0x1a
  410de7:	mov    ch,BYTE PTR [ebp+esi*2+0x59]
  410deb:	(bad)  
  410dec:	and    edi,DWORD PTR [ebx]
  410dee:	scas   eax,DWORD PTR es:[edi]
  410def:	mov    ebp,0x3854f6ac
  410df4:	and    eax,DWORD PTR [ebx+0x6d]
  410df7:	mov    DWORD PTR [edx+edi*1-0x61],ebp
  410dfb:	fsub   QWORD PTR [ebx+ebx*1+0x17050b4b]
  410e02:	mov    al,ds:0xa1a2a6e8
  410e07:	jle    0x410e5b
  410e09:	and    cl,dh
  410e0b:	xchg   esp,eax
  410e0c:	mov    al,0x94
  410e0e:	loope  0x410e56
  410e10:	lahf   
  410e11:	sub    ebx,esi
  410e13:	xchg   esi,eax
  410e14:	bound  edx,QWORD PTR [ecx-0x12128339]
  410e1a:	inc    ebx
  410e1b:	inc    ebx
  410e1c:	mov    dh,0x89
  410e1e:	outs   dx,DWORD PTR ds:[esi]
  410e1f:	xchg   DWORD PTR [ebp+0x4e],esi
  410e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e23:	leave  
  410e24:	mov    edi,0xe0df13a8
  410e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e2a:	aas    
  410e2b:	call   0xfb43f03
  410e30:	test   eax,0xe1dc0768
  410e35:	dec    ebx
  410e36:	dec    esp
  410e37:	dec    edx
  410e38:	test   BYTE PTR [ebx+0x26],0x30
  410e3c:	push   ss
  410e3d:	lods   al,BYTE PTR ds:[esi]
  410e3e:	in     eax,0x9
  410e40:	out    dx,eax
  410e41:	pop    edi
  410e42:	push   es
  410e43:	mov    bh,0x3d
  410e45:	sbb    DWORD PTR [ebp+0x4319cfd4],0xf910517e
  410e4f:	iret   
  410e50:	jb     0x410ddc
  410e52:	out    0xf0,al
  410e54:	xor    eax,0x588c2d71
  410e59:	cld    
  410e5a:	repnz lds ecx,FWORD PTR [ebp+0x59db5a77]
  410e61:	and    BYTE PTR ds:0x3be46645,dl
  410e67:	or     dl,0x1e
  410e6a:	pop    ecx
  410e6b:	xor    BYTE PTR [eax-0x66],dh
  410e6e:	dec    edi
  410e6f:	mov    gs,WORD PTR [ebx]
  410e71:	xlat   BYTE PTR ds:[ebx]
  410e72:	or     al,bh
  410e74:	mov    WORD PTR [ebp+0x6],gs
  410e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e78:	clc    
  410e79:	lds    ecx,FWORD PTR [ebx+0x34]
  410e7c:	mov    ds:0x3c48dd9b,eax
  410e81:	ret    
  410e82:	push   ebp
  410e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e84:	xchg   esi,eax
  410e85:	rol    BYTE PTR [ebx+0x75],cl
  410e88:	and    al,0x43
  410e8a:	cmp    eax,0xb5d4763d
  410e8f:	and    cl,BYTE PTR [esi+ebp*4+0x6f0997b1]
  410e96:	dec    eax
  410e97:	(bad)  
  410e98:	jo     0x410f0b
  410e9a:	mov    al,BYTE PTR [eax]
  410e9c:	fisubr DWORD PTR [ebp+0x2d]
  410e9f:	xchg   edx,eax
  410ea0:	xor    bh,BYTE PTR [ecx+ebp*1-0x80]
  410ea4:	cmp    esi,edx
  410ea6:	aaa    
  410ea7:	ins    BYTE PTR es:[edi],dx
  410ea8:	sbb    BYTE PTR [ebx-0x34],cl
  410eab:	push   edx
  410eac:	rol    DWORD PTR [eax],1
  410eae:	sub    ebx,DWORD PTR [ebx]
  410eb0:	push   ebx
  410eb1:	hlt    
  410eb2:	mov    ah,0xaa
  410eb4:	xor    BYTE PTR [ebx-0x3],al
  410eb7:	aam    0x42
  410eb9:	xchg   ebx,eax
  410eba:	inc    edi
  410ebb:	sub    DWORD PTR [ebx+0x37f7d3e9],0x1e
  410ec2:	xor    edx,edx
  410ec4:	mov    bl,0x6b
  410ec6:	add    eax,0x3cde102b
  410ecb:	fild   QWORD PTR [ecx-0x71]
  410ece:	sub    BYTE PTR [ecx-0x17],ah
  410ed1:	out    dx,eax
  410ed2:	arpl   WORD PTR [edi-0x6c],di
  410ed5:	icebp  
  410ed6:	fwait
  410ed7:	xor    eax,esi
  410ed9:	gs jge 0x410e90
  410edc:	inc    ebx
  410edd:	cmp    al,0xc9
  410edf:	popa   
  410ee0:	out    0xda,al
  410ee2:	pusha  
  410ee3:	push   ecx
  410ee4:	sub    bh,dh
  410ee6:	pop    edx
  410ee7:	pop    esp
  410ee8:	clc    
  410ee9:	push   es
  410eea:	cmc    
  410eeb:	xor    BYTE PTR [ebx-0x34],cl
  410eee:	inc    edi
  410eef:	add    eax,0x52187aaf
  410ef4:	or     ecx,DWORD PTR [esi+ebp*2+0xd57e61a]
  410efb:	push   edx
  410efc:	fisttp WORD PTR [edi+esi*1+0x662cc178]
  410f03:	push   ebx
  410f04:	xchg   edi,eax
  410f05:	or     ebx,DWORD PTR [ebx+0x17]
  410f08:	fisttp WORD PTR [ebp-0x73]
  410f0b:	inc    edx
  410f0c:	xor    al,0xb
  410f0e:	adc    BYTE PTR [edi],cl
  410f10:	les    esp,FWORD PTR [ecx+0x4ea079ee]
  410f16:	jl     0x410f3d
  410f18:	mov    DWORD PTR [eax+0x7e],esi
  410f1b:	adc    ah,ch
  410f1d:	xchg   ecx,eax
  410f1e:	sbb    bh,BYTE PTR [ebx+ebx*1+0xb]
  410f22:	retf   0x4c9e
  410f25:	push   0x54
  410f27:	xchg   ebx,eax
  410f28:	cmp    DWORD PTR [ebx+0x5e],esi
  410f2b:	jo     0x410f24
  410f2d:	mov    ds:0x6df56020,eax
  410f32:	sub    ah,dh
  410f34:	outs   dx,DWORD PTR ds:[esi]
  410f35:	lahf   
  410f36:	and    eax,0x90f727a8
  410f3b:	mov    WORD PTR [esi+0x5c1747b],cs
  410f41:	lods   eax,DWORD PTR ds:[esi]
  410f42:	stos   DWORD PTR es:[edi],eax
  410f43:	loope  0x410f77
  410f45:	and    eax,0xb5d588b4
  410f4a:	test   eax,0x3e20a929
  410f4f:	mov    ds,edi
  410f51:	sub    ch,BYTE PTR [ebp+0x5f1fe1fd]
  410f57:	dec    bl
  410f59:	xchg   esp,eax
  410f5a:	repz push ebp
  410f5c:	or     DWORD PTR [ebx],ebp
  410f5e:	test   DWORD PTR [ebx],edx
  410f60:	dec    ebp
  410f61:	nop
  410f62:	mov    dh,0xbe
  410f64:	mov    eax,DWORD PTR [ebx]
  410f66:	outs   dx,DWORD PTR ds:[esi]
  410f67:	push   edi
  410f68:	lahf   
  410f69:	mov    dh,0x85
  410f6b:	inc    edx
  410f6c:	pop    edx
  410f6d:	sbb    dh,dl
  410f6f:	das    
  410f70:	mov    ecx,0x175cde6e
  410f75:	add    ecx,esp
  410f77:	(bad)  
  410f78:	mov    al,ds:0x2cb3afd9
  410f7d:	pop    ecx
  410f7e:	inc    eax
  410f7f:	fldcw  WORD PTR [ecx-0x9]
  410f82:	retf   
  410f83:	popf   
  410f84:	inc    ecx
  410f85:	dec    esp
  410f86:	and    edx,DWORD PTR [esi-0x16]
  410f89:	mov    ecx,DWORD PTR [edi]
  410f8b:	mov    ?,WORD PTR [edi]
  410f8d:	das    
  410f8e:	retf   0x4371
  410f91:	or     eax,eax
  410f93:	arpl   WORD PTR [edi-0x45],di
  410f96:	or     al,0xdb
  410f98:	sub    esi,edx
  410f9a:	imul   esp,edx,0xd1e71280
  410fa0:	arpl   ax,di
  410fa2:	pop    edi
  410fa3:	xchg   DWORD PTR [edi-0x78d4cf8a],esp
  410fa9:	popf   
  410faa:	pusha  
  410fab:	mov    ecx,0x6743cfeb
  410fb0:	jo     0x410f3c
  410fb2:	pusha  
  410fb3:	sahf   
  410fb4:	mov    edx,DWORD PTR [ebp+0x5e]
  410fb7:	into   
  410fb8:	adc    bl,BYTE PTR [di-0x72cf]
  410fbd:	mov    ch,0xe6
  410fbf:	cmp    al,0x4f
  410fc1:	mov    bl,0x19
  410fc3:	push   cs
  410fc4:	fcom   st(1)
  410fc6:	gs mov al,0x23
  410fc9:	adc    DWORD PTR [eax+ecx*4+0x40fc1247],esi
  410fd0:	jmp    0xc6b3:0x64303fba
  410fd7:	bound  edi,QWORD PTR [eax]
  410fd9:	mov    BYTE PTR [ebx+0x4d5c3815],ch
  410fdf:	push   esp
  410fe0:	or     DWORD PTR [ebp-0x5b14d17f],ecx
  410fe6:	mov    ecx,0x25d1d775
  410feb:	push   0x69
  410fed:	ret    0xa024
  410ff0:	rcr    DWORD PTR [ecx+0x5b],cl
  410ff3:	pop    es
  410ff4:	lods   al,BYTE PTR ds:[esi]
  410ff5:	pop    ds
  410ff6:	sbb    dl,BYTE PTR ds:0xac28f931
  410ffc:	xchg   esi,eax
  410ffd:	push   eax
  410ffe:	xor    eax,0x39f154df
  411003:	fs push 0x2f93016b
  411009:	in     al,0x4f
  41100b:	push   esi
  41100c:	jl     0x410fae
  41100e:	loopne 0x411076
  411010:	mov    edi,0xc5318090
  411015:	jae    0x411069
  411017:	fwait
  411018:	in     eax,0xa2
  41101a:	xchg   edi,eax
  41101b:	mov    ah,0x88
  41101d:	aam    0xe4
  41101f:	add    ah,BYTE PTR [edx]
  411021:	xchg   ecx,eax
  411022:	add    al,0x19
  411024:	pop    ebx
  411025:	rcr    DWORD PTR [edx-0x106b980f],cl
  41102b:	mov    ds:0xf7b6f122,al
  411030:	sub    eax,0x6ed4dad
  411035:	jns    0x411080
  411037:	ds inc edi
  411039:	dec    ebp
  41103a:	sar    al,cl
  41103c:	inc    edi
  41103d:	mov    esp,DWORD PTR [ebx]
  41103f:	cmc    
  411040:	hlt    
  411041:	xchg   eax,eax
  411043:	xor    cl,0x74
  411046:	jge    0x411029
  411048:	mov    cl,0xd3
  41104a:	push   ds
  41104b:	pop    edi
  41104c:	dec    ebx
  41104d:	push   bx
  41104f:	or     cl,ch
  411051:	lea    esi,[edi]
  411053:	dec    ebx
  411054:	rcl    BYTE PTR [ebp+0x17],cl
  411057:	push   ds
  411058:	pop    ss
  411059:	test   dh,0xca
  41105c:	dec    esi
  41105d:	stos   DWORD PTR es:[edi],eax
  41105e:	std    
  41105f:	scas   al,BYTE PTR es:[edi]
  411060:	or     dl,bl
  411062:	sub    BYTE PTR [edx-0x8],dl
  411065:	clc    
  411066:	call   0x73662c34
  41106b:	cs in  eax,dx
  41106d:	(bad)  
  41106e:	xlat   BYTE PTR ds:[ebx]
  41106f:	mov    dh,0x64
  411071:	retf   0xaadd
  411074:	aaa    
  411075:	mov    edx,0x81209157
  41107a:	jne    0x411058
  41107c:	or     BYTE PTR ds:0xb457d742,bh
  411082:	jmp    0x2102:0xde61945
  411089:	sub    DWORD PTR [ecx+0x4],esi
  41108c:	xor    BYTE PTR [ebx],ah
  41108e:	lea    esi,[ebp-0x23a6e7d9]
  411094:	jecxz  0x41105c
  411096:	leave  
  411097:	icebp  
  411098:	js     0x411100
  41109a:	sahf   
  41109b:	mov    esp,0x2cc196ba
  4110a0:	dec    eax
  4110a1:	call   0x7d06:0x8a182ab8
  4110a8:	adc    eax,esp
  4110aa:	inc    edi
  4110ab:	retf   
  4110ac:	mov    esp,0xbc073bb4
  4110b1:	aas    
  4110b2:	push   0xc216da2e
  4110b7:	pushf  
  4110b8:	popf   
  4110b9:	arpl   WORD PTR [ecx],dx
  4110bb:	pushf  
  4110bc:	fisubr DWORD PTR [eax]
  4110be:	mov    edi,0x33c52d31
  4110c3:	jno    0x411144
  4110c5:	xor    cl,bl
  4110c7:	(bad)  
  4110c8:	xor    cl,ch
  4110ca:	pushf  
  4110cb:	pop    esi
  4110cc:	push   es
  4110cd:	cmp    dh,BYTE PTR [edx+0x3f]
  4110d0:	fwait
  4110d1:	hlt    
  4110d2:	xor    eax,0xa419a722
  4110d7:	ins    BYTE PTR es:[edi],dx
  4110d8:	fsqrt  
  4110da:	mov    ds:0xe0a111be,eax
  4110df:	pop    ecx
  4110e0:	mov    dl,0x1a
  4110e2:	idiv   cl
  4110e4:	xchg   ecx,eax
  4110e5:	cmp    eax,0xb32897b7
  4110ea:	mov    eax,ds:0x79a268e9
  4110ef:	mov    dl,0x5d
  4110f1:	xchg   ebx,eax
  4110f2:	aad    0xb
  4110f4:	sbb    al,0xcd
  4110f6:	or     eax,0x1f4760c5
  4110fb:	mov    bl,0x89
  4110fd:	rcl    BYTE PTR [eax+0x6f23feb1],cl
  411103:	es in  eax,dx
  411105:	pop    ss
  411106:	dec    edi
  411107:	sar    bl,0x27
  41110a:	cmp    BYTE PTR [edi-0x71],dl
  41110d:	ret    
  41110e:	or     BYTE PTR [edx-0x70],dl
  411111:	mov    dl,0xf7
  411113:	mov    cl,0x4
  411115:	jae    0x41118f
  411117:	fimul  DWORD PTR [edx]
  411119:	fisttp WORD PTR [edx+0x75]
  41111c:	push   eax
  41111d:	pop    ebx
  41111e:	cwde   
  41111f:	clc    
  411120:	out    dx,al
  411121:	adc    cl,BYTE PTR [edi+0x30]
  411124:	mov    ecx,0xa75854a6
  411129:	dec    esp
  41112a:	xchg   esi,eax
  41112b:	push   ebp
  41112c:	sbb    edx,DWORD PTR [eax+0x37]
  41112f:	inc    edi
  411130:	fld    QWORD PTR [eax+0x6f]
  411133:	aaa    
  411134:	mov    ch,0xa5
  411136:	ins    BYTE PTR es:[edi],dx
  411137:	mov    bh,0x63
  411139:	jle    0x411195
  41113b:	push   0xffffffc3
  41113d:	in     al,dx
  41113e:	dec    esi
  41113f:	(bad)  
  411141:	test   eax,0xc13d678
  411146:	xor    DWORD PTR [esi-0x6d],eax
  411149:	stos   BYTE PTR es:[edi],al
  41114a:	adc    DWORD PTR [ebp+0x1b77c258],0x37
  411151:	pushf  
  411152:	int    0xf5
  411154:	fs iret 
  411156:	mov    eax,ds:0x21728bbe
  41115b:	pop    edx
  41115c:	sbb    eax,0xcdad2c00
  411161:	(bad)  
  411162:	sar    DWORD PTR [ecx],cl
  411164:	cmp    esp,edi
  411166:	sub    BYTE PTR [esi],al
  411168:	cmp    dh,BYTE PTR [ecx-0x1f]
  41116b:	jae    0x4111c4
  41116d:	loope  0x41118a
  41116f:	xchg   edx,eax
  411170:	out    dx,al
  411171:	in     eax,dx
  411172:	inc    eax
  411173:	push   ss
  411174:	fdiv   DWORD PTR [ebp-0xef64d23]
  41117a:	and    eax,0x1bba0056
  41117f:	lods   al,BYTE PTR ds:[esi]
  411180:	popa   
  411181:	lock data16 je 0x41112b
  411185:	push   ss
  411186:	xor    ebx,ebx
  411188:	cld    
  411189:	dec    edi
  41118a:	out    0x2,al
  41118c:	loop   0x41115f
  41118e:	push   eax
  41118f:	shl    ebx,1
  411191:	outs   dx,BYTE PTR ds:[esi]
  411192:	fs sub ah,cl
  411195:	jl     0x4111e4
  411197:	xchg   ebx,eax
  411198:	jl     0x4111e1
  41119a:	stc    
  41119b:	pop    ss
  41119c:	mov    bl,ch
  41119e:	push   ecx
  41119f:	mov    bl,0x97
  4111a1:	aas    
  4111a2:	fistp  QWORD PTR [eax-0x6]
  4111a5:	test   BYTE PTR [edx],dl
  4111a7:	es sbb eax,0x940d10d5
  4111ad:	fimul  DWORD PTR [edi]
  4111af:	push   es
  4111b0:	(bad)  
  4111b1:	pop    ebp
  4111b2:	nop
  4111b3:	pusha  
  4111b4:	add    DWORD PTR [eax-0xc],edi
  4111b7:	into   
  4111b8:	xor    bl,ah
  4111ba:	sti    
  4111bb:	pop    gs
  4111bd:	and    eax,0x9b53ecb3
  4111c2:	cwde   
  4111c3:	and    eax,0x7f2ba668
  4111c8:	jle    0x411249
  4111ca:	xchg   bl,dh
  4111cc:	ins    BYTE PTR es:[edi],dx
  4111cd:	push   eax
  4111ce:	add    DWORD PTR [edi-0x30],edi
  4111d1:	shr    BYTE PTR [eax-0x6d],1
  4111d4:	mov    ebp,0x7c3a3123
  4111d9:	std    
  4111da:	or     ebx,DWORD PTR [ecx]
  4111dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111de:	(bad)  
  4111df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e0:	inc    ecx
  4111e1:	xchg   ecx,eax
  4111e2:	out    0x58,al
  4111e4:	xor    BYTE PTR [edi-0x34ea49b5],ch
  4111ea:	call   0xce7f:0x32474ce4
  4111f1:	adc    DWORD PTR [eax],ecx
  4111f3:	push   ebx
  4111f4:	jmp    0xba57:0xc2754f22
  4111fb:	fnsave [ebx*1+0x24acd88]
  411202:	int3   
  411203:	cmp    eax,0x349c5eb4
  411208:	repnz ds fcmovu st,st(0)
  41120c:	jae    0x41124c
  41120e:	cmp    BYTE PTR [ebp-0x66d2d87d],0x2
  411215:	push   0x3e
  411217:	inc    edx
  411218:	push   eax
  411219:	pop    ss
  41121a:	jmp    0x4111f1
  41121c:	or     DWORD PTR [eax],ebp
  41121e:	push   DWORD PTR [edx-0x4e]
  411221:	in     eax,dx
  411222:	xor    edx,ebx
  411224:	retf   
  411225:	sbb    BYTE PTR [ebx-0x7c],bl
  411228:	daa    
  411229:	fxch   st(6)
  41122b:	pushf  
  41122c:	popa   
  41122d:	stos   DWORD PTR es:[edi],eax
  41122e:	or     dl,cl
  411230:	push   cs
  411231:	adc    BYTE PTR [edx+0x23],dh
  411234:	mov    ebp,0x47bd7ebc
  411239:	sti    
  41123a:	ins    DWORD PTR es:[edi],dx
  41123b:	sub    al,0xd4
  41123d:	test   DWORD PTR [ecx],esp
  41123f:	clc    
  411240:	or     al,0xd2
  411242:	push   ss
  411243:	fmul   QWORD PTR [ebp+0x4a024455]
  411249:	xor    al,0x7
  41124b:	xor    dl,BYTE PTR [edi]
  41124d:	adc    BYTE PTR [eax+edx*4],0xaf
  411251:	pop    esp
  411252:	push   ebx
  411253:	mov    bh,0x98
  411255:	or     ecx,DWORD PTR [ecx]
  411257:	sub    ecx,DWORD PTR [edi]
  411259:	pop    ecx
  41125a:	inc    ebx
  41125b:	push   ebp
  41125c:	pop    ebp
  41125d:	xor    DWORD PTR [esi],ebx
  41125f:	sub    bl,BYTE PTR [ecx+0x4336dbdf]
  411265:	dec    edi
  411266:	(bad)  
  411269:	bound  ebp,QWORD PTR [ebp+esi*8+0x20]
  41126d:	bound  ebx,QWORD PTR [eax+edi*8+0x76]
  411271:	pop    ds
  411272:	fistp  DWORD PTR [ebp-0x8]
  411275:	ficom  DWORD PTR [edx+esi*4-0x15]
  411279:	call   0x5c5abb1a
  41127e:	popf   
  41127f:	mov    edx,0xdd350849
  411284:	stos   BYTE PTR es:[edi],al
  411285:	cmp    dh,BYTE PTR [ecx-0x7b]
  411288:	dec    ebx
  411289:	aas    
  41128a:	cli    
  41128b:	jo     0x4112ab
  41128d:	out    0x8b,al
  41128f:	jae    0x41127a
  411291:	in     eax,0xe7
  411293:	shl    DWORD PTR [esi],0x9d
  411296:	jmp    0xaeada49a
  41129b:	inc    edi
  41129c:	scas   eax,DWORD PTR es:[edi]
  41129d:	add    al,0xcc
  41129f:	or     DWORD PTR [eax],esp
  4112a1:	retf   
  4112a2:	push   ds
  4112a3:	inc    ebp
  4112a4:	repnz pop ebp
  4112a6:	inc    ebx
  4112a7:	shl    BYTE PTR [esi+0x6d],1
  4112aa:	cmp    edi,ecx
  4112ac:	jmp    0x646a:0x824dfb6a
  4112b3:	dec    eax
  4112b4:	pushf  
  4112b5:	lods   eax,DWORD PTR ds:[esi]
  4112b6:	scas   eax,DWORD PTR es:[edi]
  4112b7:	ret    
  4112b8:	jb     0x4112c7
  4112ba:	inc    eax
  4112bb:	add    al,bh
  4112bd:	inc    esi
  4112be:	jb     0x4112c1
  4112c0:	and    DWORD PTR [ebp-0x2b],0xaf585b0c
  4112c7:	inc    esp
  4112c8:	das    
  4112c9:	sub    DWORD PTR ds:0x1e79d8f1,ebx
  4112cf:	add    DWORD PTR [ecx+0x500d036],eax
  4112d5:	jne    0x411321
  4112d7:	lods   al,BYTE PTR ds:[esi]
  4112d8:	or     BYTE PTR ds:0xfcd6849f,ah
  4112de:	mov    ebp,0x4c21cadb
  4112e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e4:	imul   esi,DWORD PTR [edx+0x6f],0xb1573f84
  4112eb:	je     0x411357
  4112ed:	ror    DWORD PTR [edx],cl
  4112ef:	cli    
  4112f0:	popf   
  4112f1:	out    dx,eax
  4112f2:	sbb    ah,BYTE PTR [edx-0x79ee1b39]
  4112f8:	mov    esp,0x7b3a1722
  4112fd:	icebp  
  4112fe:	and    al,bl
  411300:	sar    DWORD PTR [ebp+0x0],cl
  411303:	and    BYTE PTR [edi+0x6d],0xcb
  411307:	cmp    eax,0xcaf5b23d
  41130c:	call   0x4c485165
  411311:	pop    ebx
  411312:	fxch   st(6)
  411314:	aam    0x50
  411316:	repz cmp dl,BYTE PTR [eax+0x3ce5da76]
  41131d:	(bad)  
  41131e:	mov    dh,0x5f
  411320:	xor    eax,0x111bc1eb
  411325:	jbe    0x41135f
  411327:	inc    esi
  411328:	xor    cl,BYTE PTR ds:0xdd575457
  41132e:	imul   eax,ebx,0x7e
  411331:	xchg   esi,eax
  411332:	pop    edx
  411333:	popf   
  411334:	ins    DWORD PTR es:[edi],dx
  411335:	in     eax,dx
  411336:	mov    ch,0x82
  411338:	mov    ds:0x27cea825,eax
  41133d:	shl    BYTE PTR ds:0x144a2050,1
  411343:	bnd jne 0x411337
  411346:	popa   
  411347:	push   edx
  411348:	cmc    
  411349:	jae    0x411349
  41134b:	scas   eax,DWORD PTR es:[edi]
  41134c:	jecxz  0x411317
  41134e:	fld    TBYTE PTR [ebx+0x3b]
  411351:	adc    eax,0xf2c39026
  411356:	dec    eax
  411357:	jmp    0x411376
  411359:	enter  0x5142,0x2f
  41135d:	mov    bl,0x20
  41135f:	xlat   BYTE PTR ds:[ebx]
  411360:	or     eax,0x7b69672c
  411365:	(bad)  [edi+0x139bab7]
  41136b:	scas   eax,DWORD PTR es:[edi]
  41136c:	aaa    
  41136d:	arpl   WORD PTR [edi+0x18],bx
  411370:	push   eax
  411371:	push   esi
  411372:	jmp    0xcb15ab1d
  411377:	sbb    DWORD PTR [eax-0x32],esi
  41137a:	lea    ebp,[edi+0x24f569ae]
  411380:	sbb    al,0xe6
  411382:	adc    BYTE PTR [ebx-0x77],dh
  411385:	mov    edi,DWORD PTR [eax+0x3056d2b3]
  41138b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138c:	xlat   BYTE PTR ds:[ebx]
  41138d:	and    al,0xa6
  41138f:	imul   eax,DWORD PTR [eax-0x6b2518fe],0xcdc07093
  411399:	mov    ds,WORD PTR [edi+0xcafd0e2]
  41139f:	push   es
  4113a0:	jge    0x411369
  4113a2:	dec    esi
  4113a3:	sbb    al,ah
  4113a5:	xchg   edx,eax
  4113a6:	mov    al,ds:0x5b3477ae
  4113ab:	add    BYTE PTR [esi-0xd8de34e],0x33
  4113b2:	ss mov edx,0xaf97c32
  4113b8:	and    bl,BYTE PTR [edx]
  4113ba:	bound  edx,QWORD PTR [ecx-0x5c]
  4113bd:	mov    DWORD PTR [ecx-0x70a1c78c],ebx
  4113c3:	mov    WORD PTR ss:[eax],cs
  4113c6:	shl    BYTE PTR [edi+0xc5a6ce4],1
  4113cc:	sti    
  4113cd:	push   edx
  4113ce:	cmp    eax,edi
  4113d0:	push   0xfffffff6
  4113d2:	loop   0x41135b
  4113d4:	ins    BYTE PTR es:[edi],dx
  4113d5:	and    eax,0x7377705
  4113da:	bound  ebx,QWORD PTR [edi]
  4113dc:	test   DWORD PTR [edi+eax*1],ecx
  4113df:	or     ebx,ebx
  4113e1:	fimul  DWORD PTR [ebp-0x3a]
  4113e4:	lods   eax,DWORD PTR ds:[esi]
  4113e5:	int    0x2f
  4113e7:	pop    ebp
  4113e8:	es js  0x4113c2
  4113eb:	cmp    eax,0x12ad1009
  4113f0:	mov    al,ds:0xac5a7da3
  4113f5:	jnp    0x4113a1
  4113f7:	cdq    
  4113f8:	loop   0x4113db
  4113fa:	mov    ds:0xa152796a,al
  4113ff:	arpl   WORD PTR [esi-0x3deb097],si
  411405:	int3   
  411406:	sbb    dl,BYTE PTR [edi-0x41]
  411409:	push   ds
  41140a:	cld    
  41140b:	dec    ecx
  41140c:	ins    BYTE PTR es:[edi],dx
  41140d:	pop    ds
  41140e:	stos   DWORD PTR es:[edi],eax
  41140f:	icebp  
  411410:	push   0xffffffcf
  411412:	xor    al,0xae
  411414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411415:	fcom   DWORD PTR [ecx-0x6204c270]
  41141b:	je     0x411451
  41141d:	or     ah,BYTE PTR [ebp+0x5d7b3a9b]
  411423:	stos   BYTE PTR es:[edi],al
  411424:	mov    eax,ds:0xc9390931
  411429:	test   DWORD PTR [esi-0x6ae80b25],0x9733bb12
  411433:	ins    DWORD PTR es:[edi],dx
  411434:	or     al,0xf5
  411436:	lods   eax,DWORD PTR ds:[esi]
  411437:	outs   dx,DWORD PTR ds:[esi]
  411438:	iret   
  411439:	jnp    0x4113e7
  41143b:	cli    
  41143c:	add    al,0x50
  41143e:	mov    ds:0xbb09e7b3,eax
  411443:	inc    edx
  411444:	pop    edx
  411445:	cld    
  411446:	mov    es,WORD PTR gs:[edi-0x219a6ee0]
  41144d:	sub    BYTE PTR [eax+edx*1+0x2468c94e],dl
  411454:	mov    ch,0xcf
  411456:	cmp    ebx,ebx
  411458:	mov    dh,0x23
  41145a:	xor    BYTE PTR [edi-0x530ba865],0x2d
  411461:	push   edx
  411462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411463:	cdq    
  411464:	sub    BYTE PTR [esi+0x7adff28f],0x7b
  41146b:	iret   
  41146c:	xor    ah,BYTE PTR [eax-0x5d7471a7]
  411472:	add    BYTE PTR [edx],0x9c
  411475:	xchg   edi,eax
  411476:	jl     0x4114d2
  411478:	cmc    
  411479:	int    0xf5
  41147b:	daa    
  41147c:	xor    ebx,DWORD PTR [ebp-0x43b757b3]
  411482:	ret    0xfead
  411485:	pop    esi
  411486:	mov    ebx,DWORD PTR ds:0xb61ede0f
  41148c:	or     eax,0x81f77b3c
  411491:	rcl    BYTE PTR [eax+0x7f],0x8a
  411495:	jmp    0x2e3:0x55b10a0a
  41149c:	pop    esi
  41149d:	push   ds
  41149e:	ds push edx
  4114a0:	jmp    0x2e97:0xfc7eee20
  4114a7:	cmp    DWORD PTR [esi-0x505bdd7],eax
  4114ad:	adc    BYTE PTR [ecx],0x37
  4114b0:	inc    esp
  4114b1:	mov    ds:0x88e589d1,al
  4114b6:	dec    ebp
  4114b7:	cmc    
  4114b8:	ins    DWORD PTR es:[edi],dx
  4114b9:	sub    ch,BYTE PTR [eax]
  4114bb:	or     al,0x9
  4114bd:	fild   WORD PTR [ecx+0x59]
  4114c0:	mov    ah,0x43
  4114c2:	xchg   edx,eax
  4114c3:	data16 mov ah,0x3d
  4114c6:	mov    bh,0x5c
  4114c8:	jge    0x4114af
  4114ca:	(bad)  
  4114cb:	out    0x37,al
  4114cd:	test   BYTE PTR [edi-0x245dcf22],dh
  4114d3:	aad    0x59
  4114d5:	or     bh,BYTE PTR [edx]
  4114d7:	(bad)  
  4114d8:	or     al,0x6b
  4114da:	shl    BYTE PTR cs:[ebx-0x6d],cl
  4114de:	add    eax,DWORD PTR [ebx]
  4114e0:	hlt    
  4114e1:	mov    dl,BYTE PTR [esi]
  4114e3:	inc    edx
  4114e4:	enter  0xfa8c,0xa0
  4114e8:	(bad)  
  4114e9:	fwait
  4114ea:	xchg   edi,eax
  4114eb:	jne    0x4114fa
  4114ed:	or     ch,BYTE PTR [edx]
  4114ef:	ss jb  0x4114e0
  4114f2:	add    dl,BYTE PTR [ebx-0x4fd0dd3e]
  4114f8:	in     al,dx
  4114f9:	jae    0x411550
  4114fb:	outs   dx,BYTE PTR ds:[esi]
  4114fc:	mov    cl,0x31
  4114fe:	pop    esp
  4114ff:	out    0x99,eax
  411501:	ret    0xef0c
  411504:	xchg   ebx,eax
  411505:	icebp  
  411506:	add    eax,DWORD PTR [edx-0x4a]
  411509:	idiv   BYTE PTR [ecx]
  41150b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41150c:	jecxz  0x4114f8
  41150e:	add    al,0x87
  411510:	xor    ecx,DWORD PTR [ebp-0x79]
  411513:	pop    es
  411514:	in     al,0x1
  411516:	sti    
  411517:	xor    BYTE PTR [edx],0xab
  41151a:	adc    BYTE PTR [ebp+eiz*1+0x16],dl
  41151e:	add    eax,0xba8b8d12
  411523:	xchg   DWORD PTR [ebx-0x37],ebp
  411526:	adc    DWORD PTR [eax],esp
  411528:	rcl    dh,0x8a
  41152b:	inc    ebx
  41152c:	pop    ebp
  41152d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41152e:	sbb    edx,DWORD PTR [esi]
  411530:	mov    cl,0x29
  411532:	xchg   ebp,eax
  411533:	ins    DWORD PTR es:[edi],dx
  411534:	mov    eax,0xbc9e67c5
  411539:	xchg   DWORD PTR [esi-0x244e55c8],ebx
  41153f:	push   ss
  411540:	call   DWORD PTR [edi]
  411542:	xchg   ebp,eax
  411543:	int3   
  411544:	and    eax,0xdd00ba1a
  411549:	xchg   esi,eax
  41154a:	ja     0x411568
  41154c:	dec    edi
  41154d:	add    eax,edx
  41154f:	adc    bh,BYTE PTR [edx+0x1953b208]
  411555:	je     0x41154a
  411557:	std    
  411558:	xor    al,0x3e
  41155a:	imul   edi,DWORD PTR [eax-0x1fb61c6d],0x4
  411561:	loop   0x411571
  411563:	add    al,0x4c
  411565:	and    cl,BYTE PTR ds:[edi]
  411568:	fwait
  411569:	in     eax,dx
  41156a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156b:	pop    es
  41156c:	fisubr DWORD PTR [esi+0x46]
  41156f:	in     al,0x97
  411571:	dec    esi
  411572:	addr16 and ah,cl
  411575:	mov    es,edi
  411577:	sbb    al,0x2a
  411579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157a:	shr    BYTE PTR [edx+0x36846b4e],1
  411580:	in     eax,0xfd
  411582:	sahf   
  411583:	mov    edi,0xfc458b59
  411588:	xor    eax,ecx
  41158a:	mov    ecx,DWORD PTR [ebp+0xc]
  41158d:	add    eax,edx
  41158f:	imul   eax,ecx
  411592:	add    eax,DWORD PTR [ebp+0x8]
  411595:	mov    DWORD PTR [ebp+0xc],eax
  411598:	mov    eax,DWORD PTR [ebp+0xc]
  41159b:	jmp    0x4115b1
  4115a0:	mov    eax,DWORD PTR [ebp-0x4]
  4115a3:	mov    esi,DWORD PTR [ebp-0x8]
  4115a6:	xor    esi,ecx
  4115a8:	xor    eax,ecx
  4115aa:	add    esi,edx
  4115ac:	add    eax,edx
  4115ae:	imul   eax,esi
  4115b1:	pop    edi
  4115b2:	pop    esi
  4115b3:	leave  
  4115b4:	ret    0x8
  4115b7:	push   ebp
  4115b8:	mov    ebp,esp
  4115ba:	push   ecx
  4115bb:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  4115c2:	xor    DWORD PTR ds:0x42b000,0x5835
  4115cc:	mov    eax,DWORD PTR [ebp-0x4]
  4115cf:	mov    edx,DWORD PTR [ebp+0x10]
  4115d2:	adc    DWORD PTR ds:0x42b018,0x22a2
  4115dc:	mov    ecx,0x7510899
  4115e1:	xor    eax,ecx
  4115e3:	sbb    DWORD PTR ds:0x429014,0x72a0
  4115ed:	add    eax,0x3272e0
  4115f2:	or     DWORD PTR ds:0x42c000,0x429000
  4115fc:	mov    DWORD PTR [edx],eax
  4115fe:	and    DWORD PTR ds:0x42a014,0x0
  411608:	jmp    0x411618
  41160d:	mov    eax,ds:0x42a014
  411612:	inc    eax
  411613:	mov    ds:0x42a014,eax
  411618:	cmp    DWORD PTR ds:0x42a014,0x1d
  41161f:	jae    0x411664
  411625:	cmp    DWORD PTR ds:0x42a014,0x9
  41162c:	jne    0x41163d
  411632:	push   0x428004
  411637:	call   DWORD PTR ds:0x42dcb3
  41163d:	cmp    DWORD PTR ds:0x42a014,0x8
  411644:	jne    0x411655
  41164a:	mov    eax,ds:0x42a014
  41164f:	inc    eax
  411650:	mov    ds:0x42a014,eax
  411655:	jmp    0x41160d
  41165a:	and    DWORD PTR ds:0x42b01c,0x369c
  411664:	mov    eax,DWORD PTR [ebp+0xc]
  411667:	xor    eax,ecx
  411669:	push   esi
  41166a:	mov    esi,DWORD PTR [ebp+0x10]
  41166d:	mov    edx,0x3272e0
  411672:	add    eax,edx
  411674:	mov    DWORD PTR [esi+0x4],eax
  411677:	mov    eax,DWORD PTR [ebp+0x14]
  41167a:	mov    esi,DWORD PTR [ebp+0x10]
  41167d:	mov    DWORD PTR [esi+0x8],eax
  411680:	mov    eax,DWORD PTR [ebp+0x18]
  411683:	mov    esi,DWORD PTR [ebp+0x10]
  411686:	mov    DWORD PTR [esi+0xc],eax
  411689:	mov    eax,DWORD PTR [ebp+0x1c]
  41168c:	mov    esi,DWORD PTR [ebp+0x10]
  41168f:	mov    DWORD PTR [esi+0x10],eax
  411692:	mov    eax,DWORD PTR [ebp+0x8]
  411695:	xor    eax,ecx
  411697:	add    eax,edx
  411699:	pop    esi
  41169a:	leave  
  41169b:	ret    0x18
  41169e:	push   ebp
  41169f:	mov    ebp,esp
  4116a1:	sub    esp,0x9c
  4116a7:	add    eax,DWORD PTR ds:0x428004
  4116ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4116b0:	movzx  eax,BYTE PTR ds:0x42801c
  4116b7:	adc    DWORD PTR ds:0x42a010,eax
  4116bd:	mov    eax,0x8a8c
  4116c2:	adc    DWORD PTR ds:0x42a00c,0x7010
  4116cc:	xor    ax,WORD PTR [ecx+0x20]
  4116d0:	mov    ecx,0x3b50
  4116d5:	or     DWORD PTR ds:0x428020,0x429018
  4116df:	add    ax,cx
  4116e2:	xor    DWORD PTR ds:0x42b014,0x42c014
  4116ec:	movzx  eax,ax
  4116ef:	mov    DWORD PTR [ebp-0x10],eax
  4116f2:	mov    BYTE PTR [ebp-0x1],0x79
  4116f6:	adc    ecx,DWORD PTR ds:0x42a000
  4116fc:	lea    eax,[ebp-0x1]
  4116ff:	mov    DWORD PTR [ebp-0xc],eax
  411702:	sub    ecx,0x24e1
  411708:	mov    al,BYTE PTR [ebp-0x1]
  41170b:	or     DWORD PTR ds:0x42b01c,0x3fe4
  411715:	mov    ecx,DWORD PTR [ebp-0xc]
  411718:	and    DWORD PTR ds:0x42800c,0x429000
  411722:	xor    al,0x73
  411724:	or     DWORD PTR ds:0x428024,0x42800c
  41172e:	sub    al,0x9
  411730:	or     DWORD PTR ds:0x428010,0x42c008
  41173a:	mov    BYTE PTR [ecx],al
  41173c:	and    DWORD PTR ds:0x428010,0x6711
  411746:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  41174d:	xor    DWORD PTR ds:0x42b004,ecx
  411753:	push   ebx
  411754:	mov    DWORD PTR ds:0x42801c,0x1f
  41175e:	cmp    DWORD PTR ds:0x42801c,0x0
  411765:	je     0x4117b8
  41176b:	cmp    DWORD PTR ds:0x42801c,0xf
  411772:	jne    0x41178d
  411778:	push   0x428024
  41177d:	push   0x42c010
  411782:	push   0x42c004
  411787:	call   DWORD PTR ds:0x42dc73
  41178d:	cmp    DWORD PTR ds:0x42801c,0x10
  411794:	jne    0x4117a8
  41179a:	xor    eax,eax
  41179c:	or     eax,DWORD PTR ds:0x42801c
  4117a2:	dec    eax
  4117a3:	mov    ds:0x42801c,eax
  4117a8:	mov    eax,ds:0x42801c
  4117ad:	dec    eax
  4117ae:	mov    ds:0x42801c,eax
  4117b3:	jmp    0x41175e
  4117b8:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  4117bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4117c2:	add    DWORD PTR ds:0x42b004,0x3f3f
  4117cc:	push   esi
  4117cd:	add    DWORD PTR ds:0x42b018,edx
  4117d3:	mov    eax,0x7510899
  4117d8:	mov    DWORD PTR ds:0x42b01c,0x1b
  4117e2:	cmp    DWORD PTR ds:0x42b01c,0x0
  4117e9:	je     0x411895
  4117ef:	cmp    DWORD PTR ds:0x42b01c,0x2b
  4117f6:	jne    0x41180f
  4117fc:	push   DWORD PTR [ebp-0x24]
  4117ff:	push   0x19b0
  411804:	push   0x7260
  411809:	call   DWORD PTR ds:0x42dc77
  41180f:	xor    esi,esi
  411811:	xor    esi,DWORD PTR ds:0x42b01c
  411817:	dec    esi
  411818:	mov    DWORD PTR ds:0x42b01c,esi
  41181e:	jmp    0x4117e2
  411823:	and    DWORD PTR ds:0x428020,0x0
  41182d:	xor    esi,esi
  41182f:	add    esi,DWORD PTR ds:0x428020
  411835:	inc    esi
  411836:	mov    DWORD PTR ds:0x428020,esi
  41183c:	cmp    DWORD PTR ds:0x428020,0x10
  411843:	jne    0x41186e
  411849:	push   0x1225
  41184e:	push   0x6cf4
  411853:	push   0x429010
  411858:	push   DWORD PTR [ebp-0x28]
  41185b:	push   DWORD PTR [ebp-0x10]
  41185e:	push   0x51d6
  411863:	push   0x29de
  411868:	call   DWORD PTR ds:0x42dc7f
  41186e:	cmp    DWORD PTR ds:0x428020,0xf
  411875:	jne    0x411888
  41187b:	mov    esi,DWORD PTR ds:0x428020
  411881:	inc    esi
  411882:	mov    DWORD PTR ds:0x428020,esi
  411888:	cmp    DWORD PTR ds:0x428020,0x1b
  41188f:	jb     0x41182d
  411895:	xor    ecx,eax
  411897:	mov    esi,0x3272e0
  41189c:	push   edi
  41189d:	add    ecx,esi
  41189f:	mov    DWORD PTR ds:0x428024,0x3aa4
  4118a9:	jmp    0x4118cd
  4118ae:	mov    dl,BYTE PTR [ebp-0x1]
  4118b1:	mov    DWORD PTR ds:0x429004,0x1ec
  4118bb:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4118c2:	mov    DWORD PTR ds:0x428024,0x3051
  4118cc:	inc    ecx
  4118cd:	mov    DWORD PTR ds:0x42b000,0x19d9
  4118d7:	cmp    ecx,0x40
  4118da:	jb     0x4118ae
  4118e0:	mov    edx,DWORD PTR [ebp-0x18]
  4118e3:	add    DWORD PTR ds:0x429004,0x42b00c
  4118ed:	xor    edx,eax
  4118ef:	adc    DWORD PTR ds:0x42b00c,0x428010
  4118f9:	add    edx,esi
  4118fb:	mov    DWORD PTR ds:0x42b004,0x7d7
  411905:	jmp    0x4119f4
  41190a:	mov    edi,DWORD PTR [ebp+0x8]
  41190d:	movzx  ecx,WORD PTR ds:0x42a018
  411914:	sub    ecx,DWORD PTR ds:0x429004
  41191a:	mov    DWORD PTR ds:0x42a018,ecx
  411920:	mov    ecx,0x8a8c
  411925:	dec    DWORD PTR ds:0x42900c
  41192b:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411930:	mov    edi,0x3b50
  411935:	and    DWORD PTR ds:0x429018,0x6b4e
  41193f:	add    cx,di
  411942:	and    DWORD PTR ds:0x428028,0x42a01c
  41194c:	movzx  ecx,cx
  41194f:	mov    DWORD PTR [ebp-0xc],ecx
  411952:	and    DWORD PTR ds:0x42a008,0x0
  41195c:	jmp    0x41196e
  411961:	mov    ecx,DWORD PTR ds:0x42a008
  411967:	inc    ecx
  411968:	mov    DWORD PTR ds:0x42a008,ecx
  41196e:	cmp    DWORD PTR ds:0x42a008,0x16
  411975:	jae    0x4119ca
  41197b:	cmp    DWORD PTR ds:0x42a008,0x5
  411982:	jne    0x4119a5
  411988:	push   0x42a01c
  41198d:	push   DWORD PTR [ebp-0x28]
  411990:	push   0x42d111
  411995:	push   0x1c03
  41199a:	push   0x29bc
  41199f:	call   DWORD PTR ds:0x42dc83
  4119a5:	cmp    DWORD PTR ds:0x42a008,0x4
  4119ac:	jne    0x4119bf
  4119b2:	mov    ecx,DWORD PTR ds:0x42a008
  4119b8:	inc    ecx
  4119b9:	mov    DWORD PTR ds:0x42a008,ecx
  4119bf:	jmp    0x411961
  4119c4:	add    ecx,0x3957
  4119ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4119cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4119d1:	or     DWORD PTR ds:0x42900c,0x1f94
  4119db:	xor    ecx,0x8a8c
  4119e1:	add    ecx,edi
  4119e3:	mov    edi,DWORD PTR ds:0x429000
  4119e9:	mov    edi,DWORD PTR [ebp-0xc]
  4119ec:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4119f3:	inc    edx
  4119f4:	mov    DWORD PTR ds:0x42900c,0x4266
  4119fe:	mov    ecx,DWORD PTR [ebp-0x10]
  411a01:	mov    DWORD PTR ds:0x42b014,0x5a0e
  411a0b:	cmp    edx,ecx
  411a0d:	mov    DWORD PTR ds:0x42b014,0x51cd
  411a17:	jne    0x41190a
  411a1d:	sub    DWORD PTR ds:0x428004,ebx
  411a23:	mov    ecx,DWORD PTR [ebp-0x18]
  411a26:	adc    edx,0x568c
  411a2c:	mov    edx,DWORD PTR [ebp+0x10]
  411a2f:	and    DWORD PTR ds:0x429000,0x0
  411a39:	jmp    0x411a4b
  411a3e:	mov    edi,DWORD PTR ds:0x429000
  411a44:	inc    edi
  411a45:	mov    DWORD PTR ds:0x429000,edi
  411a4b:	cmp    DWORD PTR ds:0x429000,0x18
  411a52:	jae    0x411a91
  411a58:	cmp    DWORD PTR ds:0x429000,0xf
  411a5f:	jne    0x411a70
  411a65:	push   0x42a00c
  411a6a:	call   DWORD PTR ds:0x42dc8b
  411a70:	cmp    DWORD PTR ds:0x429000,0xe
  411a77:	jne    0x411a8c
  411a7d:	xor    edi,edi
  411a7f:	xor    edi,DWORD PTR ds:0x429000
  411a85:	inc    edi
  411a86:	mov    DWORD PTR ds:0x429000,edi
  411a8c:	jmp    0x411a3e
  411a91:	xor    ecx,eax
  411a93:	and    DWORD PTR ds:0x42c018,0x0
  411a9d:	mov    edi,DWORD PTR ds:0x42c018
  411aa3:	inc    edi
  411aa4:	mov    DWORD PTR ds:0x42c018,edi
  411aaa:	cmp    DWORD PTR ds:0x42c018,0xf
  411ab1:	jne    0x411acd
  411ab7:	push   0x3d1c
  411abc:	push   DWORD PTR [ebp-0x24]
  411abf:	push   0x42b010
  411ac4:	push   DWORD PTR [ebp-0x20]
  411ac7:	call   DWORD PTR ds:0x42dc8f
  411acd:	cmp    DWORD PTR ds:0x42c018,0xe
  411ad4:	jne    0x411ae7
  411ada:	mov    edi,DWORD PTR ds:0x42c018
  411ae0:	inc    edi
  411ae1:	mov    DWORD PTR ds:0x42c018,edi
  411ae7:	cmp    DWORD PTR ds:0x42c018,0x1c
  411aee:	jb     0x411a9d
  411af4:	add    ecx,esi
  411af6:	mov    DWORD PTR ds:0x429014,0x11ec
  411b00:	mov    DWORD PTR [edx],ecx
  411b02:	mov    ecx,DWORD PTR [ebp-0x18]
  411b05:	adc    edi,0xc83
  411b0b:	xor    ecx,eax
  411b0d:	sbb    DWORD PTR ds:0x428010,ecx
  411b13:	add    ecx,esi
  411b15:	or     DWORD PTR ds:0x42c010,edx
  411b1b:	mov    DWORD PTR [ebp-0xc],ecx
  411b1e:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411b25:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  411b2c:	mov    DWORD PTR ds:0x42b014,0x1e
  411b36:	cmp    DWORD PTR ds:0x42b014,0x0
  411b3d:	je     0x411b6a
  411b43:	cmp    DWORD PTR ds:0x42b014,0x21
  411b4a:	jne    0x411b56
  411b50:	call   DWORD PTR ds:0x42dc93
  411b56:	xor    edi,edi
  411b58:	xor    edi,DWORD PTR ds:0x42b014
  411b5e:	dec    edi
  411b5f:	mov    DWORD PTR ds:0x42b014,edi
  411b65:	jmp    0x411b36
  411b6a:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  411b71:	mov    ecx,DWORD PTR [ebp-0x14]
  411b74:	or     edi,DWORD PTR ds:0x42b018
  411b7a:	mov    DWORD PTR [ebp+0x8],ecx
  411b7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411b80:	xor    ecx,eax
  411b82:	add    DWORD PTR ds:0x42b00c,edi
  411b88:	add    ecx,esi
  411b8a:	mov    DWORD PTR ds:0x42b010,0x3ca8
  411b94:	mov    ecx,0x242ebed
  411b99:	mov    edi,DWORD PTR ds:0x429004
  411b9f:	mov    edi,0xf641bea
  411ba4:	je     0x4145ae
  411baa:	mov    edx,DWORD PTR [ebp+0x8]
  411bad:	mov    ebx,DWORD PTR [ebp-0x8]
  411bb0:	jmp    0x413f6f
  411bb5:	mov    edx,0x77290712
  411bba:	pshufw mm2,QWORD PTR [ecx-0x127d1cb5],0x9e
  411bc2:	arpl   WORD PTR [eax],bp
  411bc4:	out    0x12,al
  411bc6:	scas   al,BYTE PTR es:[edi]
  411bc7:	jp     0x411c43
  411bc9:	fcomp  DWORD PTR [edi+0x7a]
  411bcc:	jp     0x411c36
  411bce:	mov    dl,bh
  411bd0:	mov    esp,0x1c8f7c5b
  411bd5:	jmp    0x5c4bf6bb
  411bda:	setne  BYTE PTR [ebx+0x23]
  411bde:	sub    dh,ah
  411be0:	xchg   ebx,eax
  411be1:	test   eax,0x938c83d5
  411be6:	mov    esp,0xbbaf995d
  411beb:	icebp  
  411bec:	out    dx,al
  411bed:	stos   BYTE PTR es:[edi],al
  411bee:	ret    0x5cb7
  411bf1:	sbb    bl,bh
  411bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf4:	sub    DWORD PTR [edi],edx
  411bf6:	jecxz  0x411c0b
  411bf8:	out    0x4a,eax
  411bfa:	or     dh,BYTE PTR [eax-0x35]
  411bfd:	cmp    esp,DWORD PTR [eax-0x7f56ac59]
  411c03:	add    eax,0x58c7055f
  411c08:	jle    0x411c6a
  411c0a:	and    edx,DWORD PTR [ebp-0x6b61e76f]
  411c10:	dec    esi
  411c11:	sbb    al,0x7c
  411c13:	mov    esi,0xc9c9b5c2
  411c18:	sahf   
  411c19:	mov    bh,0x4a
  411c1b:	jb     0x411c37
  411c1d:	pop    ecx
  411c1e:	adc    eax,0x7b34ec67
  411c23:	jno    0x411c28
  411c25:	mov    bl,0xd9
  411c27:	push   ecx
  411c28:	ins    DWORD PTR es:[edi],dx
  411c29:	test   BYTE PTR [edi-0x72],bl
  411c2c:	pop    esp
  411c2d:	aam    0xcb
  411c2f:	xor    ah,bh
  411c31:	loope  0x411bd8
  411c33:	(bad)  [ebp+0x5488c28c]
  411c39:	fld    DWORD PTR [esi-0xbd0c9e4]
  411c3f:	in     al,0xaf
  411c41:	dec    ecx
  411c42:	pop    ds
  411c43:	ss inc ebp
  411c45:	(bad)  
  411c46:	cmp    al,BYTE PTR [edi]
  411c48:	int3   
  411c49:	push   eax
  411c4a:	sti    
  411c4b:	inc    esp
  411c4c:	imul   DWORD PTR [ebx-0x1be46321]
  411c52:	imul   DWORD PTR [esi]
  411c54:	adc    al,0x83
  411c56:	(bad)  
  411c57:	cmp    al,0xc1
  411c59:	clc    
  411c5a:	push   es
  411c5b:	in     eax,dx
  411c5c:	push   esp
  411c5d:	sbb    dl,BYTE PTR [ebx-0x1a]
  411c60:	adc    al,0x2e
  411c62:	fs push cx
  411c65:	fdivr  QWORD PTR [edi+0x281429d4]
  411c6b:	popa   
  411c6c:	pop    ebx
  411c6d:	pushf  
  411c6e:	xchg   BYTE PTR ds:0xdbc153bc,cl
  411c74:	shl    edi,0x5f
  411c77:	dec    ebx
  411c78:	jns    0x411c18
  411c7a:	sub    DWORD PTR [ebx+ebp*4+0x5e9748c9],esp
  411c81:	dec    ebx
  411c82:	mov    ds,WORD PTR [esi]
  411c84:	xchg   DWORD PTR [ebp*8-0x3a7e72cd],esp
  411c8b:	mov    BYTE PTR [esi+0x2a],ch
  411c8e:	loop   0x411c6f
  411c90:	add    eax,0xcbf87cc1
  411c95:	mov    ds:0x412a51dc,eax
  411c9a:	or     eax,DWORD PTR [esi+0x36f2c1a3]
  411ca0:	dec    ebp
  411ca1:	aad    0x84
  411ca3:	sbb    esp,DWORD PTR [esp+ebp*1-0x392a204f]
  411caa:	xor    BYTE PTR [ebp-0xe],0xe5
  411cae:	add    eax,0x1f8a634c
  411cb3:	mov    ah,0xdc
  411cb5:	mov    ch,0x14
  411cb7:	xor    al,0x3b
  411cb9:	mov    al,BYTE PTR [ecx+0x6a043e22]
  411cbf:	leave  
  411cc0:	jb     0x411d0f
  411cc2:	out    dx,eax
  411cc3:	gs jg  0x411cc8
  411cc6:	cmc    
  411cc7:	push   edx
  411cc8:	add    al,0x87
  411ccb:	sbb    al,0xa7
  411ccd:	mov    dl,BYTE PTR [ecx+0x6f5be94e]
  411cd3:	and    BYTE PTR [edx-0x67c793e9],0x8a
  411cda:	xchg   esp,eax
  411cdb:	pop    es
  411cdc:	cli    
  411cdd:	add    DWORD PTR [ebx+0x5d],edi
  411ce0:	push   eax
  411ce1:	push   edx
  411ce2:	jmp    0x8d118f0f
  411ce7:	ja     0x411cd6
  411ce9:	int3   
  411cea:	jle    0x411c84
  411cec:	enter  0x2c58,0x4b
  411cf0:	sbb    eax,0x741bdc37
  411cf5:	cmp    DWORD PTR [edi+0x63],eax
  411cf8:	mov    DWORD PTR [esi-0x71],esp
  411cfb:	jno    0x411cd7
  411cfd:	pushf  
  411cfe:	or     al,cl
  411d00:	shl    edi,0x5f
  411d03:	xchg   ebp,eax
  411d04:	out    dx,eax
  411d05:	ja     0x411cd8
  411d07:	(bad)  
  411d08:	sbb    ax,0x3271
  411d0c:	leave  
  411d0d:	pop    ebp
  411d0e:	sub    BYTE PTR [edx+0x3f],bh
  411d11:	xchg   ebp,eax
  411d12:	add    BYTE PTR [edx],0x75
  411d15:	lods   al,BYTE PTR ds:[esi]
  411d16:	call   0xb01d:0x6005aeb0
  411d1d:	test   eax,0xabd86d4e
  411d22:	jo     0x411d59
  411d24:	pushf  
  411d25:	and    dl,BYTE PTR [ecx+eax*8+0x7d]
  411d29:	jns    0x411d37
  411d2b:	cmc    
  411d2c:	test   al,0xe0
  411d2e:	pop    ds
  411d2f:	pop    ebp
  411d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d31:	push   ebx
  411d32:	ror    ch,1
  411d34:	mov    WORD PTR [edi+ebp*8+0x55539e7c],es
  411d3b:	in     al,0xa9
  411d3d:	(bad)  
  411d3e:	sub    eax,0x42b999ba
  411d43:	cs mov cl,0x2b
  411d46:	call   0xd8ce1c27
  411d4b:	les    ecx,FWORD PTR [ecx]
  411d4d:	rol    BYTE PTR [ebp+ecx*4-0xb],cl
  411d51:	(bad)  
  411d52:	xchg   esi,eax
  411d53:	push   0xffffff8c
  411d55:	xlat   BYTE PTR ds:[ebx]
  411d56:	(bad)  
  411d57:	lea    ebp,[ebx+0x73]
  411d5a:	inc    ebp
  411d5b:	mov    al,ds:0x73684a24
  411d60:	pop    ecx
  411d61:	jmp    0x362080f4
  411d66:	int3   
  411d67:	push   edx
  411d68:	pop    ebp
  411d69:	pop    ds
  411d6a:	cmp    al,0xa4
  411d6c:	scas   al,BYTE PTR es:[edi]
  411d6d:	jp     0x411dd0
  411d6f:	ret    0x7706
  411d72:	lock adc eax,DWORD PTR [ebp+0x6b01d69a]
  411d79:	(bad)  
  411d7a:	jecxz  0x411d72
  411d7c:	stc    
  411d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7e:	or     edi,DWORD PTR [eax]
  411d80:	add    bh,ah
  411d82:	add    BYTE PTR [ecx-0x21653ed5],bh
  411d88:	(bad)  
  411d8a:	xchg   BYTE PTR [esi-0x7b],bl
  411d8d:	push   cs
  411d8e:	inc    ebp
  411d8f:	or     DWORD PTR [ebp-0x74fdfa08],ecx
  411d95:	enter  0x7264,0x27
  411d99:	add    BYTE PTR [esi+0x19],al
  411d9c:	icebp  
  411d9d:	aas    
  411d9e:	leave  
  411d9f:	loope  0x411d71
  411da1:	(bad)  
  411da2:	push   ebp
  411da3:	mov    ebp,0xff7b1496
  411da8:	sbb    al,0xa8
  411daa:	push   esi
  411dac:	aad    0x9e
  411dae:	cmp    esi,DWORD PTR [edi-0x6]
  411db1:	mov    DWORD PTR [ebp+0x5f],eax
  411db4:	dec    ebp
  411db5:	xor    BYTE PTR [eax+0x7a48de1b],dl
  411dbb:	jl     0x411dc4
  411dbd:	(bad)  
  411dbe:	lahf   
  411dbf:	pop    es
  411dc0:	in     al,dx
  411dc1:	sub    cl,ch
  411dc3:	hlt    
  411dc4:	mov    esp,0x37a0830e
  411dc9:	shl    ecx,0xdd
  411dcc:	and    eax,0xbec1fc25
  411dd1:	aad    0x2a
  411dd3:	lds    esp,FWORD PTR [ecx+0x7cb2d144]
  411dd9:	inc    ebp
  411dda:	dec    edi
  411ddb:	mov    dl,0x1a
  411ddd:	stc    
  411dde:	sub    DWORD PTR [ebp+0x57],ebx
  411de1:	mov    eax,0xb994c464
  411de6:	(bad)  
  411de7:	push   esp
  411de8:	pop    esi
  411de9:	test   ebp,ecx
  411deb:	or     al,0xee
  411ded:	fsubr  DWORD PTR [eax+0x702c22d6]
  411df3:	sub    al,0x6
  411df5:	xchg   edx,eax
  411df6:	sub    al,0x8a
  411df8:	push   0x733617f8
  411dfd:	xor    al,0x68
  411dff:	sbb    BYTE PTR [eax+0xdd470c7],0x46
  411e06:	addr16 retf 
  411e08:	(bad)  
  411e09:	clc    
  411e0a:	sti    
  411e0b:	ror    esi,cl
  411e0d:	pop    eax
  411e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0f:	xlat   BYTE PTR ds:[ebx]
  411e10:	scas   eax,DWORD PTR es:[edi]
  411e11:	into   
  411e12:	cdq    
  411e13:	std    
  411e14:	cmp    dl,al
  411e16:	mov    DWORD PTR [ebx+0x16],ebp
  411e19:	mov    cl,0xb
  411e1b:	jecxz  0x411e60
  411e1d:	adc    DWORD PTR ds:0xc2271fe,ecx
  411e23:	mov    al,BYTE PTR [edx+0x65f2f397]
  411e29:	push   esp
  411e2a:	pop    ebx
  411e2b:	pop    ss
  411e2c:	mov    bl,0x74
  411e2e:	push   ecx
  411e2f:	cmp    al,0xc8
  411e31:	int    0x2e
  411e33:	call   0xaf33571e
  411e38:	sbb    BYTE PTR [ebp-0x67],bh
  411e3b:	pop    DWORD PTR [ebx+0x6e]
  411e3e:	xor    bh,bl
  411e40:	pop    ebp
  411e41:	push   es
  411e42:	call   0xbb3c0516
  411e47:	dec    esi
  411e48:	scas   al,BYTE PTR es:[edi]
  411e49:	jg     0x411e47
  411e4b:	cmp    al,0xfa
  411e4d:	aad    0x76
  411e4f:	adc    bl,BYTE PTR [ebx+edx*1+0x2a4e6705]
  411e56:	pop    edx
  411e57:	fwait
  411e58:	std    
  411e59:	out    dx,eax
  411e5a:	cmp    al,0x3a
  411e5c:	sub    BYTE PTR [eax],0x88
  411e5f:	push   ebp
  411e60:	pushf  
  411e61:	outs   dx,DWORD PTR ds:[esi]
  411e62:	and    eax,0xddb1f553
  411e67:	jae    0x411eba
  411e69:	jmp    0x3cc0adc7
  411e6e:	cmp    eax,0xd106c710
  411e73:	dec    eax
  411e74:	add    edx,DWORD PTR [edi+ebx*1-0x78]
  411e78:	lea    esp,[esi+0x7fac4558]
  411e7e:	out    0x1d,al
  411e80:	mov    al,0x37
  411e82:	pop    edx
  411e83:	jo     0x411e07
  411e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e86:	mov    esi,0x74fb26c7
  411e8b:	and    BYTE PTR [ebx+0x68],dl
  411e8e:	fisub  WORD PTR [esi-0x372b6bbe]
  411e94:	nop
  411e95:	mov    eax,ds:0x477711ab
  411e9a:	dec    ebp
  411e9b:	jnp    0x411ec4
  411e9d:	and    eax,0xfccd8f8f
  411ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea3:	inc    esp
  411ea4:	push   ds
  411ea5:	cmp    dh,bh
  411ea7:	test   DWORD PTR [ecx-0x15b49511],0xc61cdc95
  411eb1:	mov    bh,0x92
  411eb3:	out    dx,al
  411eb4:	inc    esp
  411eb5:	add    al,0xe2
  411eb7:	inc    ebp
  411eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb9:	jl     0x411e5c
  411ebb:	(bad)  
  411ebc:	sub    ch,BYTE PTR [edx-0x7b]
  411ebf:	add    edi,esp
  411ec1:	enter  0x6629,0xf2
  411ec5:	loopne 0x411e5f
  411ec7:	(bad)  
  411ec8:	icebp  
  411ec9:	inc    ebx
  411eca:	sbb    DWORD PTR [ebp+0xb2cc187],esp
  411ed0:	inc    esp
  411ed1:	and    bh,BYTE PTR ds:0xc4d3647e
  411ed8:	xchg   ebx,eax
  411ed9:	xor    BYTE PTR [ebx-0x7f22da9b],cl
  411edf:	mov    ch,0xf6
  411ee1:	iret   
  411ee2:	mov    ah,0x59
  411ee5:	sbb    dl,BYTE PTR [ebp+0x28a4da29]
  411eeb:	push   0x1054984c
  411ef0:	aaa    
  411ef1:	xchg   DWORD PTR [edx],eax
  411ef3:	mov    ds:0xfb90c5d3,eax
  411ef8:	sub    eax,0xeac3a380
  411efd:	lods   al,BYTE PTR ds:[esi]
  411efe:	jmp    0x4732:0xdb4cc8c3
  411f05:	pop    es
  411f06:	fnstcw WORD PTR [ecx+0x7ccf5b33]
  411f0c:	(bad)  
  411f0d:	pushf  
  411f0e:	push   esi
  411f0f:	pusha  
  411f10:	int3   
  411f11:	sbb    esi,0xb42e2ea0
  411f17:	dec    edx
  411f18:	jg     0x411ebd
  411f1a:	sti    
  411f1b:	shl    esi,0xdf
  411f1e:	dec    ebp
  411f1f:	not    BYTE PTR es:[esi]
  411f22:	mov    ebx,0xcbcadbf1
  411f27:	pop    esi
  411f28:	sahf   
  411f29:	jecxz  0x411f7d
  411f2b:	sub    DWORD PTR ds:0xf5ac87e4,ecx
  411f31:	adc    al,0xaa
  411f33:	jp     0x411f91
  411f35:	jb     0x411f2b
  411f37:	push   eax
  411f38:	adc    ch,BYTE PTR [ebp+0x5815db8]
  411f3e:	sub    BYTE PTR [edi],bh
  411f40:	aas    
  411f41:	into   
  411f42:	mov    ch,0x2e
  411f44:	adc    DWORD PTR [edx],eax
  411f46:	mov    eax,0xdf977ff8
  411f4b:	or     al,0xd3
  411f4d:	into   
  411f4e:	inc    ecx
  411f4f:	out    dx,eax
  411f50:	inc    edx
  411f51:	xchg   BYTE PTR [ecx],dh
  411f53:	xchg   DWORD PTR [ebx+0x3b],eax
  411f56:	ja     0x411f49
  411f58:	lea    eax,[edi+0x1546d147]
  411f5e:	or     BYTE PTR [esi],cl
  411f60:	ins    BYTE PTR es:[edi],dx
  411f61:	cli    
  411f62:	xor    ah,bl
  411f64:	pop    es
  411f65:	imul   ebp
  411f67:	and    edi,DWORD PTR [ecx-0x11]
  411f6a:	scas   al,BYTE PTR es:[edi]
  411f6b:	nop
  411f6c:	mov    bl,0x59
  411f6e:	and    eax,ecx
  411f70:	jge    0x411f90
  411f72:	xlat   BYTE PTR ds:[ebx]
  411f73:	lds    ecx,FWORD PTR [edx-0x57]
  411f76:	cmp    DWORD PTR [edx*4+0x3cc7fd7f],edi
  411f7d:	popf   
  411f7e:	std    
  411f7f:	pushf  
  411f80:	(bad)  
  411f81:	mov    esp,0xd1488c19
  411f86:	mov    edx,0xc68cb150
  411f8b:	jl     0x411fbb
  411f8d:	iret   
  411f8e:	lods   eax,DWORD PTR ds:[esi]
  411f8f:	cli    
  411f90:	cli    
  411f91:	retf   0xfc06
  411f94:	xchg   edi,eax
  411f95:	sub    ch,BYTE PTR [eax-0x24]
  411f98:	in     al,0x4b
  411f9a:	or     DWORD PTR [edx],edi
  411f9c:	pop    ds
  411f9d:	stos   DWORD PTR es:[edi],eax
  411f9e:	in     al,0xd7
  411fa0:	cmc    
  411fa1:	scas   eax,DWORD PTR es:[edi]
  411fa2:	ffreep st(7)
  411fa4:	outs   dx,BYTE PTR ds:[esi]
  411fa5:	add    eax,0xfa8efa8d
  411faa:	aaa    
  411fab:	ins    BYTE PTR es:[edi],dx
  411fac:	dec    ebp
  411fad:	jnp    0x411f75
  411faf:	(bad)  
  411fb0:	(bad)  
  411fb2:	pop    edx
  411fb3:	ror    DWORD PTR [esi+0x2499686a],1
  411fb9:	add    DWORD PTR [ecx+edi*2+0x4d],eax
  411fbd:	mov    esi,0x6ad6c9fa
  411fc2:	in     al,0x17
  411fc4:	pop    edi
  411fc5:	cmp    al,0x61
  411fc7:	iret   
  411fc8:	lock adc DWORD PTR [ebx-0x73],esp
  411fcc:	ror    BYTE PTR [ebx-0x23],cl
  411fcf:	sbb    BYTE PTR [edx+ecx*4+0x2a],bl
  411fd3:	loope  0x411f65
  411fd5:	cs faddp st(4),st
  411fd8:	jo     0x411f7e
  411fda:	mov    al,ds:0x6f9a658d
  411fdf:	pop    ss
  411fe0:	rcl    DWORD PTR [ebx+0x2f],cl
  411fe3:	mov    edx,0xcdbcee89
  411fe8:	mov    eax,0x8ebe5036
  411fed:	inc    ebp
  411fee:	pop    ds
  411fef:	adc    al,0xf5
  411ff1:	retf   0xd233
  411ff4:	pushf  
  411ff5:	data16 xor al,0x38
  411ff8:	inc    ecx
  411ff9:	dec    ebp
  411ffa:	cmc    
  411ffb:	push   0x7e
  411ffd:	ja     0x411f8f
  411fff:	aam    0x47
  412001:	or     eax,0x5c52b43b
  412006:	rcl    BYTE PTR [edi+0x35],1
  412009:	dec    esp
  41200a:	pop    ss
  41200b:	dec    edi
  41200c:	fstp   TBYTE PTR [edi-0x6d]
  41200f:	sbb    BYTE PTR [esp+eiz*4],cl
  412012:	jl     0x411ff3
  412014:	jecxz  0x41201f
  412016:	sar    BYTE PTR [esi],0x5b
  412019:	sub    ah,dh
  41201b:	pop    es
  41201c:	(bad)  
  41201d:	push   ebp
  41201e:	(bad)  
  41201f:	cld    
  412020:	cmc    
  412021:	sbb    ch,BYTE PTR [edx+0x72c7200c]
  412027:	xchg   ebx,eax
  412028:	jp     0x412094
  41202a:	lods   eax,DWORD PTR ds:[esi]
  41202b:	ins    DWORD PTR es:[edi],dx
  41202c:	popa   
  41202d:	adc    BYTE PTR [ecx+edi*4-0x19],0x7a
  412032:	or     bh,dh
  412034:	jp     0x412057
  412036:	jp     0x411ff1
  412038:	dec    ebp
  412039:	popa   
  41203a:	outs   dx,DWORD PTR ds:[esi]
  41203b:	in     eax,0x1e
  41203d:	fmul   DWORD PTR [eax+0x7223393b]
  412043:	xor    al,0x5
  412045:	mov    eax,ds:0xe9efe0a1
  41204a:	mov    eax,ds:0xb9855205
  41204f:	fs pop ecx
  412051:	popf   
  412052:	dec    ebx
  412053:	(bad)  
  412054:	jmp    0xf3c3:0x22d5ddab
  41205b:	pop    ss
  41205c:	aas    
  41205d:	ss jne 0x412032
  412060:	les    esp,FWORD PTR [esi-0x71]
  412063:	sti    
  412064:	push   eax
  412065:	cli    
  412066:	out    dx,al
  412067:	sbb    ecx,esi
  412069:	neg    BYTE PTR [eax-0x78eadbab]
  41206f:	add    al,0x2f
  412071:	(bad)  
  412073:	add    eax,0x32c5fe37
  412078:	jb     0x412076
  41207a:	je     0x412073
  41207c:	fstp   QWORD PTR ds:0x6a7be5b8
  412082:	pop    edx
  412083:	or     eax,edx
  412085:	lahf   
  412086:	das    
  412087:	ficomp DWORD PTR [ecx+ebp*1-0x568888f7]
  41208e:	loope  0x41207c
  412090:	pushf  
  412091:	(bad)
  412095:	cmp    DWORD PTR [edi-0x31],esi
  412098:	icebp  
  412099:	outs   dx,BYTE PTR ds:[esi]
  41209a:	xor    al,BYTE PTR [edx]
  41209c:	imul   edi,ecx,0x9a8892ba
  4120a2:	test   BYTE PTR [eax-0x11],dh
  4120a5:	sahf   
  4120a6:	mov    ss,WORD PTR [edi-0x38b595da]
  4120ac:	mov    ah,0x92
  4120ae:	mov    eax,ds:0x3a88dc1b
  4120b3:	aas    
  4120b4:	jbe    0x41205c
  4120b6:	sub    esp,edx
  4120b8:	(bad)  
  4120ba:	jge    0x4120f7
  4120bc:	push   ds
  4120bd:	arpl   WORD PTR [edx+edx*8],ax
  4120c0:	(bad)  ds:0x16120689
  4120c6:	or     al,0xef
  4120c8:	jl     0x4120a0
  4120ca:	cs cdq 
  4120cc:	in     eax,dx
  4120cd:	into   
  4120ce:	jge    0x412078
  4120d0:	(bad)  
  4120d1:	clc    
  4120d2:	mov    ch,0x8e
  4120d4:	and    BYTE PTR [edi],dh
  4120d6:	or     eax,0xcc1533c1
  4120db:	xchg   di,ax
  4120dd:	pushf  
  4120de:	push   ds
  4120df:	dec    edi
  4120e0:	xchg   edi,eax
  4120e1:	or     bh,al
  4120e3:	in     al,0xb1
  4120e5:	sub    DWORD PTR [edx+0x6b5cc42a],edx
  4120eb:	inc    edx
  4120ec:	xchg   ebp,eax
  4120ed:	ins    DWORD PTR es:[edi],dx
  4120ee:	mov    edi,0x8da632f1
  4120f3:	sub    BYTE PTR [edx-0x1c],dh
  4120f6:	cmp    bl,al
  4120f8:	mov    eax,0xe12f8335
  4120fd:	sar    BYTE PTR [edx],0x36
  412100:	sub    edi,DWORD PTR [ebx-0x4373c21c]
  412106:	out    0xaf,al
  412108:	mov    esp,0xc5926544
  41210d:	xchg   ebp,eax
  41210e:	and    eax,0x899eb03
  412113:	aas    
  412114:	fs daa 
  412116:	push   ebp
  412117:	and    DWORD PTR [eax+0x6b416298],edi
  41211d:	gs jecxz 0x4120cf
  412120:	mov    ebp,0x4cedd1b9
  412125:	mov    bl,0x13
  412127:	jecxz  0x412127
  412129:	mov    ebx,eax
  41212b:	ret    
  41212c:	and    DWORD PTR [eax],0x88ad776
  412132:	cmp    ch,dl
  412134:	inc    DWORD PTR [edi+eiz*1-0x21]
  412138:	jb     0x4120fe
  41213a:	(bad)  
  41213b:	add    edi,DWORD PTR [edi+ebx*4-0x738dbb6c]
  412142:	push   ebx
  412143:	out    0x4d,al
  412145:	cs xor eax,ebp
  412148:	xor    eax,0x576279e7
  41214d:	jns    0x4121c7
  41214f:	test   eax,0x98ffacc0
  412154:	rcr    BYTE PTR [eax-0x7cd55cbb],cl
  41215a:	psraw  mm0,QWORD PTR [esp+edx*2+0x738ea13c]
  412162:	pop    ebx
  412163:	aam    0xee
  412165:	mov    ds:0x1bedbb60,eax
  41216a:	jge    0x412196
  41216c:	push   esi
  41216d:	arpl   WORD PTR [ebp+0x466b937d],sp
  412173:	add    dh,BYTE PTR [esi]
  412175:	out    0xa6,al
  412177:	div    BYTE PTR [edi-0x11]
  41217a:	inc    edi
  41217b:	lahf   
  41217c:	faddp  st(5),st
  41217e:	push   0xde0ce0ac
  412183:	xor    al,0x4
  412185:	sti    
  412186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412187:	loop   0x4121cb
  412189:	xchg   ecx,eax
  41218a:	mov    ch,0x15
  41218c:	mov    ecx,0x835d95f3
  412191:	mov    al,ds:0x8fc2be51
  412196:	sbb    eax,0xa7363690
  41219b:	fbld   TBYTE PTR [ebp+0x46]
  41219e:	das    
  41219f:	sbb    al,0xb7
  4121a1:	mov    al,ds:0xd5f9cdd1
  4121a6:	ins    BYTE PTR es:[edi],dx
  4121a7:	adc    al,0x39
  4121a9:	mov    ch,0xe0
  4121ab:	pop    es
  4121ac:	and    bl,bh
  4121ae:	cmp    BYTE PTR [ebp+0xc],0x89
  4121b2:	xor    al,0x9c
  4121b4:	aas    
  4121b5:	je     0x412221
  4121b7:	not    BYTE PTR [eax]
  4121b9:	xor    ebp,DWORD PTR [edi-0x4c]
  4121bc:	ss add esp,edx
  4121bf:	or     cl,BYTE PTR [ebx+0x72]
  4121c2:	cmp    esi,DWORD PTR [eax+ecx*2]
  4121c5:	add    BYTE PTR [esi-0x482656c1],dl
  4121cb:	stos   DWORD PTR es:[edi],eax
  4121cc:	mov    edx,0xcc183e99
  4121d1:	jns    0x412176
  4121d3:	enter  0xb11e,0x2d
  4121d7:	xchg   ecx,eax
  4121d8:	loop   0x412181
  4121da:	mov    cl,0x66
  4121dc:	(bad)  
  4121dd:	push   edx
  4121de:	std    
  4121df:	es and eax,0xb4620a60
  4121e5:	mov    ebx,0x171f2bf
  4121ea:	push   edx
  4121eb:	cmp    eax,0xbe62a920
  4121f0:	mov    ecx,0x2ee7dc70
  4121f5:	push   es
  4121f6:	std    
  4121f7:	jbe    0x41224e
  4121f9:	mov    ebx,0xbc71b491
  4121fe:	mov    cl,0x22
  412200:	(bad)  [eax-0x20]
  412203:	adc    dh,ah
  412205:	sbb    DWORD PTR [edx],ebx
  412207:	fbld   TBYTE PTR [esi-0x2b4e9616]
  41220d:	jae    0x412268
  41220f:	add    eax,0x154584c
  412214:	sbb    al,0xcc
  412216:	pop    ss
  412217:	es dec ebx
  412219:	retf   
  41221a:	rcl    BYTE PTR [esp+edx*4],1
  41221d:	inc    esi
  41221e:	xor    BYTE PTR [edi-0x48b0281],bh
  412224:	add    edi,DWORD PTR [eax-0x1541c164]
  41222a:	(bad)  
  41222b:	jo     0x412257
  41222d:	test   DWORD PTR [esi],ecx
  41222f:	leave  
  412230:	imul   eax,esp,0xe
  412233:	dec    ebp
  412234:	xchg   edx,edi
  412236:	pop    eax
  412237:	cmp    DWORD PTR [eax-0xb4ea714],edx
  41223d:	data16 aas 
  41223f:	gs jmp 0x50ca:0x77e09f55
  412247:	inc    ebp
  412248:	loope  0x41227d
  41224a:	adc    ecx,edi
  41224c:	xchg   ebp,eax
  41224d:	repz mov al,0x3e
  412250:	mov    DWORD PTR [ecx+eiz*2-0x49],edi
  412254:	hlt    
  412255:	adc    ebp,DWORD PTR [esi*8+0x5a96164e]
  41225c:	pop    ebx
  41225d:	adc    al,0xf8
  41225f:	stos   DWORD PTR es:[edi],eax
  412260:	rep ins BYTE PTR es:[edi],dx
  412262:	repnz adc BYTE PTR [ecx-0x61],bh
  412266:	mov    ah,0x91
  412268:	imul   ebx,DWORD PTR [ecx-0x25b69645],0x9ed17e13
  412272:	push   esi
  412273:	or     al,0x28
  412275:	jp     0x41224f
  412277:	cs dec ebp
  412279:	xor    esi,ecx
  41227b:	call   0xa5e3:0xc5c6c11f
  412282:	sahf   
  412283:	gs popf 
  412285:	aaa    
  412286:	mov    ds:0x386edc2b,eax
  41228b:	or     esi,edx
  41228d:	loopne 0x4122b4
  41228f:	jns    0x4122cd
  412291:	ret    0xfa9a
  412294:	jae    0x4122df
  412296:	jo     0x4122bf
  412298:	xchg   esp,eax
  412299:	or     eax,0x26af1110
  41229e:	jge    0x412246
  4122a0:	adc    bl,BYTE PTR [edx-0x525aa1eb]
  4122a6:	mov    dh,bh
  4122a8:	xchg   edi,eax
  4122a9:	dec    edx
  4122aa:	mov    bh,0x12
  4122ac:	push   esi
  4122ad:	aam    0xc6
  4122af:	data16 mov dh,0x4f
  4122b2:	fld    TBYTE PTR cs:[ebp-0x48]
  4122b6:	mov    bl,0x3d
  4122b8:	shr    BYTE PTR [esp+eax*8-0x29],1
  4122bc:	pop    ss
  4122bd:	sbb    al,0x71
  4122bf:	sbb    DWORD PTR [esi-0x4b],esp
  4122c2:	in     eax,0x44
  4122c4:	or     al,0x5c
  4122c6:	mov    bh,ch
  4122c8:	loope  0x41231a
  4122ca:	ins    DWORD PTR es:[edi],dx
  4122cb:	sub    al,0x51
  4122cd:	dec    ebx
  4122ce:	sbb    eax,0xafb74383
  4122d3:	mov    eax,ds:0x8ba5082d
  4122d8:	ret    0xff73
  4122db:	jmp    0x4122f7
  4122dd:	(bad)  
  4122de:	sbb    edx,eax
  4122e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e1:	adc    dh,BYTE PTR [edx]
  4122e3:	mov    ds:0x18df2531,al
  4122e8:	sar    dl,0xb3
  4122eb:	mov    eax,DWORD PTR [ebx+0x5bdb928c]
  4122f1:	and    dh,BYTE PTR [edi-0x2710d98d]
  4122f7:	inc    esp
  4122f8:	xor    BYTE PTR [ecx-0x27a7b783],ch
  4122fe:	xor    eax,DWORD PTR [eax+edx*2+0x55]
  412302:	sar    esi,0xa8
  412305:	sbb    DWORD PTR [ecx],edi
  412307:	mov    ch,0xb7
  412309:	add    cl,ch
  41230b:	push   ss
  41230c:	xchg   edi,eax
  41230d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41230e:	mov    al,ds:0xccfc128f
  412313:	jmp    0x44d8:0x95b63632
  41231a:	in     al,0xa0
  41231c:	add    al,0x8d
  41231e:	sbb    DWORD PTR [edi],ebp
  412320:	push   0xbec5b955
  412325:	je     0x41239a
  412327:	cmp    eax,0x33bd9542
  41232c:	jecxz  0x4122c6
  41232e:	xchg   DWORD PTR [eax+0x31a7f89],ebp
  412334:	in     eax,0x4c
  412336:	pop    esp
  412337:	ds push ecx
  412339:	repz xor ebp,DWORD PTR [edi]
  41233c:	enter  0xb3b4,0x70
  412340:	jnp    0x412355
  412342:	fisub  DWORD PTR [ebp-0x19fe0fa4]
  412348:	cs inc esp
  41234a:	dec    edi
  41234b:	int    0x10
  41234d:	pop    ss
  41234e:	inc    esp
  41234f:	les    ebx,FWORD PTR [edi]
  412351:	loopne 0x412381
  412353:	dec    eax
  412354:	mov    ch,0x5c
  412356:	jmp    0x38b0:0x4c28d94c
  41235d:	in     eax,0xf9
  41235f:	mov    BYTE PTR [edi],bh
  412361:	cli    
  412362:	pop    eax
  412363:	and    DWORD PTR [ebx-0x467b37bf],0x13
  41236a:	iret   
  41236b:	xor    bh,dl
  41236d:	mov    eax,0x5740a2bb
  412372:	bound  esp,QWORD PTR [eax-0x457236ce]
  412378:	xchg   BYTE PTR [edx+edi*2],al
  41237b:	loope  0x4123da
  41237d:	sbb    bl,BYTE PTR [ecx+0x7303bf34]
  412383:	push   edi
  412384:	cmp    DWORD PTR [esi+0x26],edi
  412387:	mov    eax,ds:0x9725b1e8
  41238c:	gs adc al,0x80
  41238f:	push   0x7f
  412391:	std    
  412392:	push   edx
  412393:	pusha  
  412394:	nop
  412395:	adc    eax,0x346e99e1
  41239a:	mov    bh,0x55
  41239c:	and    BYTE PTR [edi-0x26bb38f],cl
  4123a2:	cld    
  4123a3:	loope  0x41241e
  4123a5:	dec    esi
  4123a6:	xor    dh,cl
  4123a8:	bndstx [edx+0x3f],(bad)
  4123ac:	(bad)  
  4123ad:	retf   
  4123ae:	xchg   ecx,eax
  4123af:	sub    DWORD PTR [edi-0xd],eax
  4123b2:	push   ebp
  4123b3:	xor    al,0x9b
  4123b5:	addr16 push es
  4123b7:	enter  0x3c1e,0x4a
  4123bb:	leave  
  4123bc:	sub    eax,0x7b2d3ee
  4123c1:	dec    ebx
  4123c2:	in     al,dx
  4123c3:	aam    0xbe
  4123c5:	div    BYTE PTR [edi-0x11462de4]
  4123cb:	or     DWORD PTR [ecx+0x36],eax
  4123ce:	or     ebx,DWORD PTR [edi+0x755e8fb8]
  4123d4:	or     DWORD PTR [esi+0x2a],edi
  4123d7:	pop    ebp
  4123d8:	jne    0x4123b7
  4123da:	dec    ecx
  4123db:	or     DWORD PTR ss:[edi-0x14],eax
  4123df:	xchg   DWORD PTR [edx-0x7],ebp
  4123e2:	dec    esp
  4123e3:	jle    0x41241b
  4123e5:	ficom  WORD PTR [ecx+0x8c835d7]
  4123eb:	and    eax,0xed9ef744
  4123f0:	cli    
  4123f1:	adc    al,bh
  4123f3:	dec    ebp
  4123f4:	frstor [ebx-0x5f]
  4123f7:	stos   DWORD PTR es:[edi],eax
  4123f8:	or     bh,ah
  4123fa:	in     eax,dx
  4123fb:	sti    
  4123fc:	ret    0x4020
  4123ff:	adc    BYTE PTR [ecx+0x46],dl
  412402:	dec    edx
  412403:	mov    bh,0xc7
  412405:	inc    ecx
  412406:	das    
  412407:	push   0x67722e9
  41240c:	mov    dl,0xf5
  41240e:	call   0xb408b96c
  412413:	ret    
  412414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412415:	pop    ecx
  412416:	pop    ebx
  412417:	add    dl,bh
  412419:	add    DWORD PTR [edx-0x29cdd904],ebx
  41241f:	inc    eax
  412420:	pop    esi
  412421:	outs   dx,BYTE PTR ds:[esi]
  412422:	das    
  412423:	das    
  412424:	(bad)  
  412425:	jl     0x41245a
  412427:	shr    cl,cl
  412429:	push   ecx
  41242a:	ss int3 
  41242c:	cmc    
  41242d:	stc    
  41242e:	lea    ebx,ds:0x2e0f2940
  412434:	sti    
  412435:	sub    al,0x3d
  412437:	dec    edi
  412438:	cmc    
  412439:	push   es
  41243a:	fistp  DWORD PTR [edx]
  41243c:	sbb    esp,DWORD PTR [edi-0x73b67615]
  412442:	loope  0x4124aa
  412444:	test   al,0x5b
  412446:	pop    ebp
  412447:	mov    ah,BYTE PTR [edx-0x548b8b49]
  41244d:	clc    
  41244e:	add    DWORD PTR [esi+edi*1],ebp
  412451:	call   0x933:0xc60decc8
  412458:	jp     0x4123f6
  41245a:	lahf   
  41245b:	mov    gs,WORD PTR [edi]
  41245d:	fst    QWORD PTR [edi-0xc9df42b]
  412463:	jb     0x412474
  412465:	add    eax,0x9a36fc70
  41246a:	aad    0xbe
  41246c:	scas   eax,DWORD PTR es:[edi]
  41246d:	inc    esi
  41246e:	cmp    al,0xd9
  412470:	push   esp
  412471:	mov    bh,0x18
  412473:	arpl   WORD PTR [edx+0x533de292],di
  412479:	pusha  
  41247a:	or     eax,0xe798d20f
  41247f:	inc    edx
  412480:	sub    eax,0x2cad55bd
  412485:	or     al,BYTE PTR [ebp+ecx*1-0x12]
  412489:	clc    
  41248a:	jmp    0x4ad7:0x13e0c95a
  412491:	test   eax,0x8dacd920
  412496:	xor    esi,eax
  412498:	mov    eax,0x51833b89
  41249d:	cmp    al,0xa9
  41249f:	or     DWORD PTR ds:0xf6e9312b,eax
  4124a5:	mov    ds:0x77c8ff06,eax
  4124aa:	push   eax
  4124ab:	in     al,0xea
  4124ad:	(bad)  [ebp+0x55]
  4124b0:	or     eax,0x1fd6a417
  4124b5:	and    ebx,ebx
  4124b7:	icebp  
  4124b8:	ja     0x4124a8
  4124ba:	xor    ch,bh
  4124bc:	in     eax,dx
  4124bd:	loop   0x412470
  4124bf:	mov    eax,0x82310dba
  4124c4:	pop    eax
  4124c5:	push   cs
  4124c6:	jo     0x412464
  4124c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c9:	jle    0x4124c4
  4124cb:	pop    es
  4124cc:	iret   
  4124cd:	adc    ebx,edx
  4124cf:	and    esp,DWORD PTR [edi+0xd]
  4124d2:	out    0x5e,eax
  4124d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d5:	dec    eax
  4124d6:	(bad)  [ebx]
  4124d8:	(bad)  
  4124d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124da:	popa   
  4124db:	push   esi
  4124dc:	xchg   edx,eax
  4124dd:	inc    esp
  4124de:	push   esi
  4124df:	sbb    eax,DWORD PTR [edi-0x23]
  4124e2:	cwde   
  4124e3:	cmp    cl,bh
  4124e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e6:	jl     0x412505
  4124e8:	jmp    0x412530
  4124ea:	cmp    al,0xa8
  4124ec:	pop    edx
  4124ed:	lods   eax,DWORD PTR ds:[esi]
  4124ee:	addr16 pop ss
  4124f0:	int    0x8
  4124f2:	icebp  
  4124f3:	test   edi,esi
  4124f5:	not    BYTE PTR [ebx]
  4124f7:	test   eax,0x7387d805
  4124fc:	repnz sub bl,BYTE PTR ds:[esi+0x59]
  412501:	inc    eax
  412502:	adc    al,0xd0
  412504:	jnp    0x41251c
  412506:	mov    ecx,ecx
  412508:	pop    esp
  412509:	outs   dx,DWORD PTR ds:[esi]
  41250a:	mov    ah,BYTE PTR [ecx+ebx*8]
  41250d:	add    esi,DWORD PTR [ecx+0x35]
  412510:	retf   0x33d9
  412513:	xchg   edx,eax
  412514:	repnz adc BYTE PTR [esi],bh
  412517:	dec    eax
  412518:	loop   0x4124f1
  41251a:	cmp    al,BYTE PTR [ebx]
  41251c:	mov    esp,0x916d4758
  412521:	aaa    
  412522:	bound  ebx,QWORD PTR [esp+eiz*2-0x2a968ceb]
  412529:	fdivrp st(1),st
  41252b:	dec    ebp
  41252c:	pop    edx
  41252d:	mov    al,ds:0x4e857a6a
  412532:	inc    ebp
  412533:	mov    eax,0x2a035d68
  412538:	sbb    eax,DWORD PTR [ecx-0x52]
  41253b:	stos   BYTE PTR es:[edi],al
  41253c:	in     eax,0x65
  41253e:	aaa    
  41253f:	or     eax,0xa9f32f14
  412544:	push   cs
  412545:	sbb    ch,al
  412547:	jno    0x412567
  412549:	dec    esp
  41254a:	and    ecx,DWORD PTR [ecx+0x2a3050df]
  412550:	mov    esi,0xc72e1fba
  412555:	jo     0x412549
  412557:	inc    edi
  412558:	pop    edi
  412559:	adc    BYTE PTR [ecx-0x74],ah
  41255c:	neg    BYTE PTR [ebx]
  41255e:	cmp    esp,edx
  412560:	lods   al,BYTE PTR ds:[esi]
  412561:	push   es
  412562:	add    BYTE PTR [edx],0xff
  412565:	cs xchg ebp,eax
  412567:	add    ecx,esi
  412569:	out    dx,eax
  41256a:	pop    esi
  41256b:	popf   
  41256c:	pop    eax
  41256d:	jecxz  0x4125d4
  41256f:	fisubr WORD PTR [eax]
  412571:	push   ss
  412572:	adc    al,0xf6
  412574:	mul    BYTE PTR [eax]
  412576:	test   eax,0xa73358dc
  41257b:	mov    ecx,0xcacc4b7f
  412580:	in     al,0x9a
  412582:	jge    0x412592
  412584:	(bad)  
  412585:	sub    al,0x31
  412587:	jge    0x412513
  412589:	stos   DWORD PTR es:[edi],eax
  41258a:	aad    0x65
  41258c:	push   0xa
  41258e:	nop
  41258f:	sbb    dh,bl
  412591:	stc    
  412592:	jp     0x41257c
  412594:	sbb    DWORD PTR [eax+0x4c345ef1],0xffffffd0
  41259b:	xchg   ecx,eax
  41259c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259d:	int3   
  41259e:	jl     0x412560
  4125a0:	iret   
  4125a1:	cmp    al,0x9b
  4125a3:	cmp    eax,DWORD PTR [esi]
  4125a5:	and    eax,0xf13d4ca7
  4125aa:	jecxz  0x412599
  4125ac:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4125ae:	addr16 fwait
  4125b0:	(bad)  
  4125b1:	mov    esi,0x5f94dce9
  4125b6:	lods   al,BYTE PTR ds:[esi]
  4125b7:	cmp    bl,BYTE PTR [edx+0x7]
  4125ba:	test   DWORD PTR [esi+0x3929a512],0xa6f7e9d0
  4125c4:	fistp  WORD PTR [ebx+0x25e7c5f4]
  4125ca:	out    0x52,eax
  4125cc:	test   al,0x53
  4125ce:	test   DWORD PTR [edi],esp
  4125d0:	mov    dh,BYTE PTR [esi+0x7e]
  4125d3:	pop    esi
  4125d4:	test   eax,0x42b8b70
  4125d9:	pop    edi
  4125da:	aas    
  4125db:	push   ss
  4125dc:	sbb    eax,0x314369e2
  4125e1:	loopne 0x412588
  4125e3:	sub    ah,bh
  4125e5:	in     al,dx
  4125e6:	pop    ecx
  4125e7:	push   cs
  4125e8:	pop    edi
  4125e9:	push   eax
  4125ea:	icebp  
  4125eb:	int    0xf
  4125ed:	lods   eax,DWORD PTR ds:[esi]
  4125ee:	dec    BYTE PTR [edx]
  4125f0:	enter  0x182e,0xd7
  4125f4:	or     bh,BYTE PTR [ebx-0x31]
  4125f7:	cld    
  4125f8:	pop    ebp
  4125f9:	sbb    ah,BYTE PTR [eax]
  4125fb:	xlat   BYTE PTR ds:[ebx]
  4125fc:	push   edx
  4125fd:	popa   
  4125fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ff:	jmp    0x5e53a817
  412604:	mov    edi,0xa8a04c0a
  412609:	cmp    eax,eax
  41260b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260c:	imul   ebp,DWORD PTR [edi],0x2c
  41260f:	pop    es
  412610:	sar    DWORD PTR [ebx],cl
  412612:	ins    BYTE PTR es:[edi],dx
  412613:	sub    DWORD PTR [ebx+esi*1+0x71],ecx
  412617:	pop    edi
  412618:	pop    ss
  412619:	push   edx
  41261a:	mov    ds:0xdcd62a2d,eax
  41261f:	nop
  412620:	sbb    DWORD PTR [esi],ebx
  412622:	push   esi
  412623:	and    al,BYTE PTR [eax+0x1b]
  412626:	icebp  
  412627:	push   ss
  412628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412629:	push   0xfffffff6
  41262b:	fsub   DWORD PTR [eax]
  41262d:	pop    edi
  41262e:	das    
  41262f:	pop    eax
  412630:	push   ds
  412631:	xchg   edi,eax
  412632:	ins    BYTE PTR es:[edi],dx
  412633:	adc    al,0x40
  412635:	mov    ds:0x5018e3e1,al
  41263a:	add    eax,DWORD PTR [ebp-0x6c]
  41263d:	xor    esp,esp
  41263f:	mov    al,ds:0x70b452cc
  412644:	in     al,dx
  412645:	cs ret 
  412647:	or     BYTE PTR [esi],0xe3
  41264a:	and    ah,dh
  41264c:	popf   
  41264d:	inc    esp
  41264e:	sti    
  41264f:	adc    sp,di
  412652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412653:	aad    0xe8
  412655:	mov    al,0x41
  412657:	retf   
  412658:	or     BYTE PTR [edi+0x6],0xb8
  41265c:	add    BYTE PTR [ebx+0x36433d24],ah
  412662:	lods   al,BYTE PTR ds:[esi]
  412663:	shl    BYTE PTR [ecx+edx*1-0x51795a87],cl
  41266a:	add    ebp,ebp
  41266c:	push   ds
  41266d:	fld    st(3)
  41266f:	mov    bl,0xa0
  412671:	lock in eax,0x9e
  412674:	enter  0x5313,0x9f
  412678:	outs   dx,DWORD PTR ds:[esi]
  412679:	and    al,0xf2
  41267b:	sbb    DWORD PTR [edi-0x18],ebp
  41267e:	sbb    eax,0x97756246
  412683:	sar    BYTE PTR [edx],1
  412685:	mov    ss,WORD PTR [edi+esi*4+0x3360909d]
  41268c:	test   DWORD PTR [edi+edx*1+0x4c],ecx
  412690:	xor    eax,0x6036cc20
  412695:	ds aad 0x71
  412698:	mov    DWORD PTR [ebx+0x76],eax
  41269b:	jnp    0x412630
  41269d:	push   0x3d593995
  4126a2:	add    BYTE PTR [ecx],bh
  4126a4:	popa   
  4126a5:	enter  0xdd0b,0x51
  4126a9:	rcr    dh,cl
  4126ab:	jnp    0x4126cb
  4126ad:	pop    ecx
  4126ae:	jns    0x412667
  4126b0:	xchg   ebx,eax
  4126b1:	pusha  
  4126b2:	ds jno 0x41271d
  4126b5:	cs stc 
  4126b7:	and    ecx,DWORD PTR ds:0x7a00f57f
  4126bd:	mov    ebp,0xd5ba601d
  4126c2:	adc    eax,0xc6ee501a
  4126c7:	xchg   ecx,eax
  4126c8:	gs add esp,ebx
  4126cb:	lock hlt 
  4126cd:	push   es
  4126ce:	cwde   
  4126cf:	sbb    eax,0xa9e936c8
  4126d4:	ja     0x412696
  4126d6:	add    ebp,DWORD PTR [ecx-0x760c5fa5]
  4126dc:	inc    esp
  4126dd:	push   0x488abdf
  4126e2:	mov    edi,0x3ec00add
  4126e7:	retf   0xd892
  4126ea:	shl    bl,cl
  4126ec:	mov    esi,0xc752204c
  4126f1:	cmp    al,BYTE PTR [eax+0x55edec97]
  4126f7:	or     bl,BYTE PTR es:[ecx]
  4126fa:	dec    ebp
  4126fb:	cdq    
  4126fc:	push   cs
  4126fd:	not    DWORD PTR [edx-0x36]
  412700:	pop    edx
  412701:	jb     0x4126e2
  412703:	jge    0x41272e
  412705:	fild   DWORD PTR [ecx+0x7a]
  412708:	add    DWORD PTR [ebp+0x76c5057a],ecx
  41270e:	iret   
  41270f:	test   eax,0xfc7f09b0
  412714:	add    eax,0x9324c9f5
  412719:	dec    esp
  41271a:	inc    esi
  41271b:	aad    0x77
  41271d:	adc    BYTE PTR [ecx-0x61],ah
  412720:	pop    ecx
  412721:	mov    al,0x15
  412723:	jecxz  0x4126ef
  412725:	add    esi,DWORD PTR [edx+ecx*1-0x4a]
  412729:	ret    
  41272a:	arpl   WORD PTR [edi+0x1e03cbcf],sp
  412730:	es aaa 
  412732:	ins    BYTE PTR es:[edi],dx
  412733:	jmp    0x41273f
  412735:	jp     0x4126d8
  412737:	rol    DWORD PTR [ecx],1
  412739:	jmp    0xae98:0xd8e07f04
  412740:	sbb    BYTE PTR [esp+ecx*2+0x2f],al
  412744:	inc    ebp
  412745:	cld    
  412746:	or     esi,DWORD PTR ds:0x52389623
  41274c:	lods   eax,DWORD PTR ds:[esi]
  41274d:	pop    esi
  41274e:	push   edx
  41274f:	xchg   esp,eax
  412750:	pop    ebx
  412751:	xchg   esp,eax
  412752:	stos   BYTE PTR es:[edi],al
  412753:	mov    ds:0xbb498fcd,al
  412758:	sub    bh,BYTE PTR [ebx]
  41275a:	dec    edx
  41275b:	out    0xe8,eax
  41275d:	xlat   BYTE PTR ds:[ebx]
  41275e:	push   edx
  41275f:	inc    edi
  412760:	sahf   
  412761:	xchg   ebp,eax
  412762:	mov    edi,0x941d4004
  412767:	push   ebp
  412768:	dec    edi
  412769:	jge    0x41272c
  41276b:	xchg   edi,eax
  41276c:	inc    esp
  41276d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276e:	mov    esp,0x4d7fbec7
  412773:	jecxz  0x4127d9
  412775:	shl    ebx,0xb
  412778:	xchg   edx,eax
  412779:	mov    cl,0x51
  41277b:	sar    esp,1
  41277d:	jno    0x412797
  41277f:	stos   BYTE PTR es:[edi],al
  412780:	jmp    0xdd48:0xd6514576
  412787:	xchg   edx,eax
  412788:	or     bl,BYTE PTR [edx+edx*8-0x72]
  41278c:	push   ss
  41278d:	ins    DWORD PTR es:[edi],dx
  41278e:	xor    dl,BYTE PTR [edi-0x4a5dfc4]
  412794:	(bad)  
  412795:	push   ebp
  412796:	mov    ecx,0x99e98766
  41279b:	loope  0x412722
  41279d:	xchg   esi,eax
  41279e:	xchg   al,bh
  4127a0:	inc    ebx
  4127a1:	fnstsw WORD PTR [edx]
  4127a3:	and    dl,BYTE PTR [eax-0x18]
  4127a6:	scas   al,BYTE PTR es:[edi]
  4127a7:	int    0xd0
  4127a9:	loopne 0x412813
  4127ab:	adc    al,0x1c
  4127ad:	pop    edi
  4127ae:	test   al,0xca
  4127b0:	iret   
  4127b1:	mov    esi,0x42db62d2
  4127b6:	xchg   ebx,eax
  4127b7:	dec    edx
  4127b8:	pop    esp
  4127b9:	shl    BYTE PTR [ebx+0x37],0xa3
  4127bd:	mov    bh,BYTE PTR [edx-0x64]
  4127c0:	add    esp,DWORD PTR [ecx-0x7e]
  4127c3:	and    ch,bl
  4127c5:	mov    ds:0x6ecc0335,al
  4127ca:	sub    BYTE PTR [ecx*4-0x16b34674],al
  4127d1:	fdiv   DWORD PTR [ebx]
  4127d3:	mov    fs,WORD PTR [esi-0x51c5dfe4]
  4127d9:	dec    edx
  4127da:	int    0xf8
  4127dc:	push   eax
  4127dd:	clc    
  4127de:	pop    DWORD PTR [edi+eiz*2-0x3c96026c]
  4127e5:	mov    al,ds:0xed5c1ebe
  4127ea:	add    cl,BYTE PTR [edx]
  4127ec:	mov    al,ds:0xd5c68f18
  4127f1:	lea    eax,[esi-0x56]
  4127f4:	jmp    0x412835
  4127f6:	cli    
  4127f7:	pop    DWORD PTR [ebx+ebx*4]
  4127fa:	jp     0x412859
  4127fc:	aaa    
  4127fd:	sbb    DWORD PTR [eax+0x2a8f3bf4],0x198b7518
  412807:	mov    ecx,0x275ebf7d
  41280c:	jl     0x412835
  41280e:	data16 loope 0x41286f
  412811:	dec    ecx
  412812:	stc    
  412813:	adc    eax,0x53f6dea2
  412818:	dec    ecx
  412819:	mov    ebp,0xa25794f3
  41281e:	int    0xb3
  412820:	mov    bh,BYTE PTR [eax+ecx*8+0x35]
  412824:	mov    al,ds:0xfd5d5790
  412829:	leave  
  41282a:	mov    ch,0x89
  41282c:	cwde   
  41282d:	mov    BYTE PTR [ecx+0x8],cl
  412830:	mov    BYTE PTR [ecx+0x60ed526c],cl
  412836:	push   ecx
  412837:	std    
  412838:	jno    0x412863
  41283a:	inc    ebx
  41283b:	inc    esp
  41283c:	push   ecx
  41283d:	add    dl,dl
  41283f:	repz loope 0x41289b
  412842:	and    DWORD PTR [edi],edi
  412844:	sbb    ch,BYTE PTR [ecx+0x6ab4faed]
  41284a:	or     DWORD PTR ss:[ebp+ebp*1+0x13],ebp
  41284f:	ins    DWORD PTR es:[edi],dx
  412850:	cs push ebx
  412852:	icebp  
  412853:	ins    BYTE PTR es:[edi],dx
  412854:	xor    eax,0x9517c3c2
  412859:	fiadd  DWORD PTR [edi-0x53]
  41285c:	call   0x603b55bc
  412861:	daa    
  412862:	(bad)  
  412863:	stc    
  412864:	ror    DWORD PTR [eax+esi*8-0x5cfe315],cl
  41286b:	ins    DWORD PTR es:[edi],dx
  41286c:	std    
  41286d:	adc    eax,0xf9941515
  412872:	ins    DWORD PTR es:[edi],dx
  412873:	push   eax
  412874:	mov    eax,DWORD PTR [edi+0x69ccc66c]
  41287a:	mov    dl,0x3
  41287c:	xor    edx,eax
  41287e:	into   
  41287f:	fwait
  412880:	int3   
  412881:	call   DWORD PTR [esi]
  412883:	lods   eax,DWORD PTR ds:[esi]
  412884:	mov    al,0x72
  412886:	and    BYTE PTR [edi-0x15],bl
  412889:	jbe    0x412867
  41288b:	(bad)  
  41288c:	xchg   ebp,eax
  41288d:	mov    al,BYTE PTR [edi-0x4c]
  412890:	aad    0xea
  412892:	pusha  
  412893:	aaa    
  412894:	dec    edx
  412895:	div    BYTE PTR [ecx-0x5907348]
  41289b:	adc    DWORD PTR [edx+0x54483cf4],0xe68d124c
  4128a5:	in     al,dx
  4128a6:	cdq    
  4128a7:	mov    esi,0xaef8d3b0
  4128ac:	arpl   WORD PTR ds:0xe7ef46fc,si
  4128b2:	fdiv   QWORD PTR [esi-0x331afb65]
  4128b8:	mov    WORD PTR [edi],?
  4128ba:	jl     0x412908
  4128bc:	in     al,0xd1
  4128be:	inc    ebp
  4128bf:	ss fwait
  4128c1:	xchg   esi,eax
  4128c2:	and    BYTE PTR [ebx+0x32],dl
  4128c5:	scas   eax,DWORD PTR es:[edi]
  4128c6:	stos   BYTE PTR es:[edi],al
  4128c7:	in     al,dx
  4128c8:	xor    eax,DWORD PTR [edx]
  4128ca:	hlt    
  4128cb:	icebp  
  4128cc:	cmp    BYTE PTR ds:0x26a6de3f,al
  4128d2:	jl     0x412936
  4128d4:	mov    al,0x8d
  4128d6:	mov    cl,cl
  4128d8:	push   edi
  4128d9:	rcr    DWORD PTR [eax-0x14762c32],1
  4128df:	or     dh,dh
  4128e1:	mov    eax,ds:0x3dc0b705
  4128e6:	push   ecx
  4128e7:	xlat   BYTE PTR ds:[ebx]
  4128e8:	jne    0x41290c
  4128ea:	idiv   DWORD PTR [eax-0x20f55afc]
  4128f0:	retf   
  4128f1:	loope  0x412968
  4128f3:	adc    bl,bl
  4128f5:	push   esi
  4128f6:	jle    0x4128cf
  4128f8:	ins    BYTE PTR es:[edi],dx
  4128f9:	ss jmp 0xbd3c:0xb4f17a56
  412901:	mov    edi,0xf07bdf5d
  412906:	cmp    BYTE PTR [esi+0x2cea9fa0],dh
  41290c:	and    eax,0x92bbe16e
  412911:	ds imul esp,ebx,0xffffffb8
  412915:	sti    
  412916:	inc    edx
  412917:	pushf  
  412918:	pop    ecx
  412919:	ins    DWORD PTR es:[edi],dx
  41291a:	in     eax,0xf
  41291c:	mov    ds:0xabc2252,eax
  412921:	pop    ss
  412922:	sbb    BYTE PTR [ecx-0x34],ch
  412925:	xor    ebx,DWORD PTR [ebx-0x1032ea55]
  41292b:	xor    ah,bl
  41292d:	out    0xa,al
  41292f:	push   0x18d3ae94
  412934:	(bad)  
  412935:	jl     0x4129b0
  412937:	push   ebp
  412938:	jge    0x412923
  41293a:	jo     0x41295c
  41293c:	repnz fimul WORD PTR [edi+0x70]
  412940:	xchg   edi,eax
  412941:	test   al,0xe8
  412943:	push   edi
  412944:	jecxz  0x412980
  412946:	sbb    DWORD PTR [ecx-0x34eff794],0xfffffff8
  41294d:	add    ebx,DWORD PTR ds:0x6b0d352
  412953:	pop    ds
  412954:	scas   al,BYTE PTR es:[edi]
  412955:	bound  ebp,QWORD PTR [edx-0x488769d4]
  41295b:	aaa    
  41295c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295d:	push   cs
  41295e:	xchg   DWORD PTR ds:0x56367106,ebp
  412964:	pop    edi
  412965:	dec    edx
  412966:	(bad)  
  412967:	push   ds
  412968:	mov    dl,0xc7
  41296a:	inc    ecx
  41296b:	enter  0xc182,0x2b
  41296f:	or     al,0xf2
  412971:	mov    ebp,0x8c1faeca
  412976:	fsub   QWORD PTR [edi-0x12d5dd00]
  41297c:	add    al,0x94
  41297e:	std    
  41297f:	test   BYTE PTR [edx+0x7e],ch
  412982:	les    esi,FWORD PTR [ebx-0x68]
  412985:	sti    
  412986:	push   0xafcfcffd
  41298b:	fcom   DWORD PTR [ebx+0x41]
  41298e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412990:	fistp  DWORD PTR [esi+edi*4-0x78]
  412994:	in     eax,0xd0
  412996:	mov    dl,0x90
  412998:	les    edi,FWORD PTR [edi+ecx*4]
  41299b:	cli    
  41299c:	icebp  
  41299d:	sub    eax,0x37cbc045
  4129a2:	pop    eax
  4129a3:	mov    ch,0xc3
  4129a5:	fwait
  4129a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a7:	mov    eax,ds:0x62dbfd4c
  4129ac:	adc    eax,0x15a1de8a
  4129b1:	xor    BYTE PTR [ebp+0x49ef247d],bl
  4129b7:	pop    es
  4129b8:	xor    al,0xce
  4129ba:	aaa    
  4129bb:	aam    0x39
  4129bd:	mov    ecx,0x5ed50183
  4129c2:	lock lds ebx,FWORD PTR [esi-0x4a69497]
  4129c9:	inc    edi
  4129ca:	loope  0x4129b1
  4129cc:	pop    eax
  4129cd:	int    0x3f
  4129cf:	jg     0x4129bf
  4129d1:	dec    edi
  4129d2:	pop    ebp
  4129d3:	pop    esp
  4129d4:	cdq    
  4129d5:	inc    edx
  4129d6:	push   eax
  4129d7:	(bad)  
  4129d8:	jb     0x412a02
  4129da:	sar    BYTE PTR [eax],0xff
  4129dd:	(bad)  
  4129de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129df:	mov    es,edx
  4129e1:	repz mov edx,0xdc99afd9
  4129e7:	stc    
  4129e8:	rcl    cl,cl
  4129ea:	and    esi,DWORD PTR [esi]
  4129ec:	sti    
  4129ed:	pop    edi
  4129ee:	popa   
  4129ef:	sar    DWORD PTR [eax-0x4e045378],1
  4129f5:	into   
  4129f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f7:	lock cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  4129fa:	sub    al,0x62
  4129fc:	rcr    BYTE PTR [ecx-0x5d],cl
  4129ff:	inc    ecx
  412a00:	shl    BYTE PTR [edi-0xa],cl
  412a03:	out    dx,eax
  412a04:	dec    ecx
  412a05:	gs out dx,al
  412a07:	loopne 0x4129b3
  412a09:	mov    ?,WORD PTR [esi-0x6b5ffa32]
  412a0f:	lds    esp,FWORD PTR [esi-0x14a6dae6]
  412a15:	ja     0x412a39
  412a17:	arpl   WORD PTR [eax],ax
  412a19:	mov    ebx,DWORD PTR [eax-0x33]
  412a1c:	push   edx
  412a1d:	jge    0x4129bf
  412a1f:	in     al,dx
  412a20:	ror    DWORD PTR [ebx-0x15],0x3c
  412a24:	jl     0x412aa1
  412a26:	push   ebx
  412a27:	jae    0x4129e3
  412a29:	mov    al,0x73
  412a2b:	jecxz  0x4129d5
  412a2d:	rcr    ebx,0xce
  412a30:	xor    BYTE PTR [edi-0x2887de13],ch
  412a36:	xchg   BYTE PTR [edi-0x1193b094],dh
  412a3c:	sub    al,0x25
  412a3e:	test   eax,0x3f3c2d29
  412a43:	sub    DWORD PTR ds:0x55a2d5aa,ecx
  412a49:	pop    ebp
  412a4a:	repz sub eax,0x23547ec7
  412a50:	icebp  
  412a51:	cld    
  412a52:	retf   0x6af0
  412a55:	shr    BYTE PTR [ecx],cl
  412a57:	mov    ds,WORD PTR ds:0x42fcbb88
  412a5d:	mov    ch,0xde
  412a5f:	and    ebx,DWORD PTR [edi-0x5c]
  412a62:	div    DWORD PTR [edx]
  412a64:	adc    bl,BYTE PTR [ebx]
  412a66:	(bad)  
  412a67:	push   ecx
  412a68:	cmp    eax,0xbc275777
  412a6d:	lods   al,BYTE PTR ds:[esi]
  412a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a6f:	fs mov ecx,0xd2b69350
  412a75:	sbb    BYTE PTR [ecx],ah
  412a77:	xor    BYTE PTR [ecx+0x29],bh
  412a7a:	fisttp WORD PTR [eax+0x77]
  412a7d:	mov    eax,DWORD PTR [edx]
  412a7f:	mov    esi,0x7c9ccb2b
  412a84:	scas   eax,DWORD PTR es:[edi]
  412a85:	clc    
  412a86:	inc    eax
  412a87:	xchg   ebx,eax
  412a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a89:	add    ah,al
  412a8b:	sub    dh,ah
  412a8d:	jg     0x412af0
  412a8f:	mov    al,0xbc
  412a91:	mov    dl,0x7b
  412a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a94:	and    bh,BYTE PTR [edx-0x3375c070]
  412a9a:	dec    ebp
  412a9b:	xor    al,0x47
  412a9d:	leave  
  412a9e:	push   0x2a
  412aa0:	or     DWORD PTR [edi+0x4d82b94c],edi
  412aa6:	mov    bh,cl
  412aa8:	push   0xf109611f
  412aad:	lea    eax,[ecx]
  412aaf:	pop    ebx
  412ab0:	mov    ecx,0xe0b7a1cf
  412ab5:	add    bl,ah
  412ab7:	dec    edi
  412ab8:	loope  0x412b2c
  412aba:	push   edx
  412abb:	pop    ss
  412abc:	add    DWORD PTR [ebx+0x2f07335c],edx
  412ac2:	out    0x2b,eax
  412ac4:	sbb    BYTE PTR [ecx],dl
  412ac6:	dec    esp
  412ac7:	mov    DWORD PTR [ecx+0x18],ecx
  412aca:	hlt    
  412acb:	in     al,dx
  412acc:	push   es
  412acd:	in     al,0xf7
  412acf:	and    edx,ecx
  412ad1:	sub    al,0x4c
  412ad3:	mov    bl,0x2e
  412ad5:	repnz or al,0xd4
  412ad8:	sbb    al,0x24
  412ada:	push   es
  412adb:	aas    
  412adc:	add    bh,BYTE PTR [ebx]
  412ade:	mov    edi,0x26bba021
  412ae3:	mov    cl,0xd4
  412ae5:	adc    al,0x63
  412ae7:	jo     0x412b34
  412ae9:	mov    dh,0xf0
  412aeb:	or     DWORD PTR [eax+0x54],ebp
  412aee:	inc    eax
  412aef:	ins    BYTE PTR es:[edi],dx
  412af0:	mov    ebx,0x6d03386b
  412af5:	popf   
  412af6:	pop    ss
  412af7:	jns    0x412b41
  412af9:	xchg   edi,eax
  412afa:	pop    edi
  412afb:	dec    esi
  412afc:	jge    0x412a9b
  412afe:	inc    edi
  412aff:	mov    eax,0x9568b3de
  412b04:	pushf  
  412b05:	inc    esp
  412b06:	mov    bh,0x4f
  412b08:	xor    cl,0x15
  412b0b:	mov    cl,0xee
  412b0d:	sti    
  412b0e:	jo     0x412b68
  412b10:	lods   eax,DWORD PTR ds:[esi]
  412b11:	mov    BYTE PTR [edx+0x32],al
  412b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b15:	out    0x81,eax
  412b17:	cwde   
  412b18:	pop    esi
  412b19:	jbe    0x412ab6
  412b1b:	mov    bh,0x39
  412b1d:	and    ah,BYTE PTR [ebx-0x3cc296e3]
  412b23:	mov    ah,0x19
  412b25:	sbb    eax,0x3fed1d8c
  412b2a:	scas   al,BYTE PTR es:[edi]
  412b2b:	xor    DWORD PTR [ecx],esp
  412b2d:	push   esp
  412b2e:	mov    ds:0x870d6783,eax
  412b33:	xor    DWORD PTR [ecx],edx
  412b35:	mov    dl,0x13
  412b37:	jp     0x412bb7
  412b39:	fstp   st(1)
  412b3b:	cvtps2pi mm3,QWORD PTR [ecx-0x40d987a8]
  412b42:	pop    edi
  412b43:	out    0x40,al
  412b45:	dec    ebx
  412b46:	cmp    dh,BYTE PTR [edi+0x4b]
  412b49:	adc    eax,0x4971dcac
  412b4e:	inc    edx
  412b4f:	mov    bh,0xbb
  412b51:	xor    bl,ch
  412b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b54:	and    DWORD PTR [esi+0x7efaaa1a],ecx
  412b5a:	in     al,0xf9
  412b5c:	add    DWORD PTR [ecx],edx
  412b5e:	jecxz  0x412b60
  412b60:	mov    ?,WORD PTR [ecx-0x66]
  412b63:	ja     0x412b93
  412b65:	mov    ?,WORD PTR [esi]
  412b67:	jmp    0x412aff
  412b69:	inc    ecx
  412b6a:	dec    eax
  412b6b:	push   edi
  412b6c:	xchg   edi,eax
  412b6d:	(bad)  
  412b6e:	outs   dx,DWORD PTR ds:[esi]
  412b6f:	div    DWORD PTR [ebx+0x755ed632]
  412b75:	sub    DWORD PTR [ebx+0x5],esp
  412b78:	adc    eax,DWORD PTR [ecx+0x3]
  412b7b:	in     eax,dx
  412b7c:	mov    ah,BYTE PTR [eax]
  412b7e:	pop    esi
  412b7f:	out    0x82,al
  412b81:	push   0xa
  412b83:	ins    DWORD PTR es:[edi],dx
  412b84:	add    al,0x22
  412b86:	and    esp,ebx
  412b88:	sub    al,0x3e
  412b8a:	xor    DWORD PTR [edi],esp
  412b8c:	lea    edi,[edx+ebx*1]
  412b8f:	sbb    al,0xbd
  412b91:	sub    BYTE PTR [edx-0xc64ba19],ch
  412b97:	push   eax
  412b98:	sub    eax,0xb0bb0835
  412b9d:	add    ch,BYTE PTR [ebx+0x62c1546]
  412ba3:	and    al,0xe9
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	sub    dh,bh
  412ba8:	std    
  412ba9:	out    0xca,al
  412bab:	les    edi,FWORD PTR [ecx]
  412bad:	dec    ecx
  412bae:	dec    edi
  412baf:	jg     0x412c0b
  412bb1:	sub    DWORD PTR [esi],0x43
  412bb4:	dec    eax
  412bb5:	mov    esp,0xf5d24c1
  412bba:	pop    edx
  412bbb:	mov    ds:0x385fa172,eax
  412bc0:	inc    edx
  412bc1:	xchg   edx,eax
  412bc2:	scas   eax,DWORD PTR es:[edi]
  412bc3:	and    edi,DWORD PTR [ecx+0x1a]
  412bc6:	sbb    al,0x35
  412bc8:	jns    0x412b67
  412bca:	int3   
  412bcb:	ss xchg esp,eax
  412bcd:	ret    0x8b06
  412bd0:	sbb    BYTE PTR [edx-0x68c0fd0d],al
  412bd6:	gs cmp al,0xaf
  412bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bda:	rcr    BYTE PTR [ebx],1
  412bdc:	sbb    BYTE PTR [ebx-0x35],cl
  412bdf:	push   es
  412be0:	mov    ebp,0x6463c44c
  412be5:	addr16 loope 0x412c18
  412be8:	nop
  412be9:	rcr    bl,0xb6
  412bec:	hlt    
  412bed:	adc    ah,BYTE PTR [ebx+eiz*2]
  412bf0:	aas    
  412bf1:	mov    ebp,0x4659a13c
  412bf6:	push   edi
  412bf7:	in     ax,dx
  412bf9:	call   0x1f88d0fe
  412bfe:	xor    edi,eax
  412c00:	or     al,0x99
  412c02:	aam    0x75
  412c04:	clc    
  412c05:	mov    eax,ds:0xf43f1aa5
  412c0a:	or     eax,0xba0cee38
  412c0f:	sar    BYTE PTR [eax],cl
  412c11:	sahf   
  412c12:	mov    WORD PTR [edx-0x4bbbfe89],ds
  412c18:	dec    ebp
  412c19:	inc    ebx
  412c1a:	repz ret 0xe758
  412c1e:	outs   dx,DWORD PTR ds:[esi]
  412c1f:	seto   BYTE PTR [ecx+esi*4-0x6959b84]
  412c27:	cmp    DWORD PTR [edx-0x3b],edi
  412c2a:	lods   al,BYTE PTR ds:[esi]
  412c2b:	(bad)  [edi+ebx*2+0xe]
  412c2f:	rcl    dh,cl
  412c31:	push   ds
  412c32:	mov    ecx,0x9749dbfe
  412c37:	in     al,0x4e
  412c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c3a:	pushf  
  412c3b:	rcl    DWORD PTR [edx],0xc2
  412c3e:	aam    0x64
  412c40:	mov    dh,0x7d
  412c42:	out    0x3c,eax
  412c44:	inc    esp
  412c45:	nop
  412c46:	sub    cl,cl
  412c48:	out    dx,al
  412c49:	jns    0x412bfc
  412c4b:	lock ds xchg esp,eax
  412c4e:	inc    ebp
  412c4f:	inc    ebx
  412c50:	dec    BYTE PTR gs:[edx+edx*2]
  412c54:	cwde   
  412c55:	xchg   ebp,eax
  412c56:	mov    ds:0xe3c19583,al
  412c5b:	or     ah,BYTE PTR [eax+0x4d]
  412c5e:	fild   QWORD PTR [esp+ebx*4]
  412c61:	lahf   
  412c62:	mov    ebp,0x7d2db19
  412c67:	adc    bl,BYTE PTR [ebp-0x5fba7166]
  412c6d:	or     DWORD PTR [eax+0x2f],edi
  412c70:	(bad)  
  412c71:	jecxz  0x412cac
  412c73:	pop    ebx
  412c74:	not    DWORD PTR [ebp+0x25]
  412c77:	mov    ds:0x876b0ffe,al
  412c7c:	mov    bl,0xfc
  412c7e:	das    
  412c7f:	ror    DWORD PTR [edi+0x22ff8be8],1
  412c85:	add    al,0xe
  412c87:	mov    ecx,0x78912282
  412c8c:	clc    
  412c8d:	jae    0x412c4d
  412c8f:	xchg   ecx,eax
  412c90:	sbb    BYTE PTR [ecx-0x63],bl
  412c93:	out    dx,al
  412c94:	mov    eax,0x91456a8a
  412c99:	int3   
  412c9a:	sub    esi,DWORD PTR [ecx+0x0]
  412c9d:	fdivp  st(3),st
  412c9f:	out    0x4f,al
  412ca1:	inc    esp
  412ca2:	imul   eax,DWORD PTR [eax-0x4b9f713d],0xa8376874
  412cac:	scas   al,BYTE PTR es:[edi]
  412cad:	push   esp
  412cae:	out    dx,eax
  412caf:	or     eax,0xb2a09f0f
  412cb4:	pop    ecx
  412cb5:	rol    edx,cl
  412cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb8:	in     eax,0x16
  412cba:	mov    DWORD PTR [ebx-0x77],ebx
  412cbd:	adc    DWORD PTR [edx],edi
  412cbf:	mulps  xmm7,xmm4
  412cc2:	dec    esp
  412cc3:	jbe    0x412cd1
  412cc5:	fist   WORD PTR [ebx-0x2a755ee5]
  412ccb:	fbld   TBYTE PTR ds:0x55cff7ba
  412cd1:	scas   al,BYTE PTR es:[edi]
  412cd2:	adc    ch,cl
  412cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd5:	adc    eax,0x9c847b43
  412cda:	and    edi,DWORD PTR [ebp+0x53d9af94]
  412ce0:	inc    esp
  412ce1:	and    al,0xa1
  412ce3:	fs pusha 
  412ce5:	pop    eax
  412ce6:	mov    eax,ds:0x6a116bb5
  412ceb:	retf   0x8e3
  412cee:	mov    edi,0xfe03f7fa
  412cf3:	clc    
  412cf4:	push   ss
  412cf5:	mov    dl,0x4
  412cf7:	sbb    edi,0x84773073
  412cfd:	addr16 pop ds
  412cff:	sar    DWORD PTR [edx+0x5f],0x5c
  412d03:	or     eax,0x5e42f93c
  412d08:	cmp    BYTE PTR [ebx],0x6c
  412d0b:	mov    DWORD PTR ds:0xc184124d,esi
  412d11:	push   esp
  412d12:	dec    ebx
  412d13:	pop    ds
  412d14:	and    ebx,esi
  412d16:	xor    BYTE PTR [ebp-0x49f0a835],0x83
  412d1d:	aam    0xf6
  412d1f:	lds    eax,FWORD PTR [edi]
  412d21:	jbe    0x412d75
  412d23:	hlt    
  412d24:	sbb    edi,ebp
  412d26:	mov    esp,0x46fea1d3
  412d2b:	sbb    BYTE PTR [esi-0x25ab392d],dl
  412d31:	sbb    eax,DWORD PTR [ecx+0x75]
  412d34:	fist   DWORD PTR [edi]
  412d36:	test   DWORD PTR [esi-0x50],ebp
  412d39:	hlt    
  412d3a:	mov    esp,0x3b1f0ae1
  412d3f:	xor    bh,BYTE PTR [ebp-0x3]
  412d42:	pushf  
  412d43:	adc    eax,0xe803b042
  412d49:	push   cs
  412d4a:	jecxz  0x412cf4
  412d4c:	lods   al,BYTE PTR ds:[esi]
  412d4d:	dec    ebx
  412d4e:	sub    BYTE PTR [ebp-0x41b34d28],ah
  412d54:	sub    al,0xa2
  412d56:	push   0x37
  412d58:	cdq    
  412d59:	std    
  412d5a:	or     eax,DWORD PTR [esi-0x3d]
  412d5d:	out    0xc1,eax
  412d5f:	push   ebp
  412d60:	dec    edx
  412d61:	sar    DWORD PTR [edi-0xd16957c],cl
  412d67:	retf   0x79e6
  412d6a:	stos   BYTE PTR es:[edi],al
  412d6b:	xchg   BYTE PTR [eax+0x68],ch
  412d6e:	xor    ebp,DWORD PTR [eax]
  412d70:	cli    
  412d71:	(bad)  
  412d72:	push   ebx
  412d73:	in     eax,dx
  412d74:	jge    0x412dec
  412d76:	adc    ah,dl
  412d78:	mov    ax,WORD PTR [eax-0x3c259d47]
  412d7f:	pop    esp
  412d80:	mov    bh,0xe9
  412d82:	push   ss
  412d83:	inc    ebx
  412d84:	jnp    0x412d50
  412d86:	loop   0x412dc4
  412d88:	out    dx,eax
  412d89:	or     al,0x92
  412d8b:	cld    
  412d8c:	pop    ebx
  412d8d:	pusha  
  412d8e:	or     ecx,DWORD PTR [eax+0xb]
  412d91:	fiadd  WORD PTR [ebp+eiz*1-0x4f]
  412d95:	test   BYTE PTR ds:0xc51524a0,ch
  412d9b:	sbb    ah,BYTE PTR [edx+0x77]
  412d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9f:	in     al,dx
  412da0:	inc    ebx
  412da1:	jbe    0x412dde
  412da3:	push   0xc654fb85
  412da8:	test   eax,0x8297179
  412dad:	int    0xa2
  412daf:	xor    BYTE PTR [edi+ebp*1+0x7d],bh
  412db3:	jb     0x412e20
  412db5:	mov    dh,0xc4
  412db7:	lock xor esp,DWORD PTR [edi+0xc]
  412dbb:	or     al,0x5d
  412dbd:	mov    dh,0x2a
  412dbf:	ins    BYTE PTR es:[edi],dx
  412dc0:	push   ds
  412dc1:	iret   
  412dc2:	pop    es
  412dc3:	mov    ds:0x28dd74c,eax
  412dc8:	push   es
  412dc9:	inc    eax
  412dca:	out    dx,al
  412dcb:	jmp    0x8f1806f7
  412dd0:	(bad)  
  412dd1:	inc    eax
  412dd2:	les    eax,FWORD PTR [eax]
  412dd4:	inc    esi
  412dd5:	mov    al,0x1f
  412dd7:	loope  0x412e0a
  412dd9:	fcmovnb st,st(3)
  412ddb:	or     BYTE PTR [ebx],bl
  412ddd:	dec    edi
  412dde:	fistp  WORD PTR [ebx+edx*1+0x78]
  412de2:	mov    bh,0x53
  412de4:	sar    al,cl
  412de6:	cs inc di
  412de9:	into   
  412dea:	pushf  
  412deb:	mov    ds:0xa8c2b9f2,eax
  412df0:	mov    bl,0x0
  412df2:	fstp   TBYTE PTR [ecx]
  412df4:	xchg   edi,eax
  412df5:	jmp    0x2ac71a13
  412dfa:	xchg   esp,eax
  412dfb:	pop    edx
  412dfc:	pop    es
  412dfd:	sub    al,0xa6
  412dff:	sbb    cl,BYTE PTR [ebx-0x72b4a815]
  412e05:	sbb    DWORD PTR [ebp-0x1013d4e],esi
  412e0b:	ins    BYTE PTR es:[edi],dx
  412e0c:	fisubr DWORD PTR [ecx]
  412e0e:	mov    esi,edx
  412e10:	ret    0x6a27
  412e13:	ins    DWORD PTR es:[edi],dx
  412e14:	inc    ecx
  412e15:	or     BYTE PTR [edx],ch
  412e17:	aaa    
  412e18:	jp     0x412e71
  412e1a:	mov    dl,0xfe
  412e1c:	retf   
  412e1d:	xchg   ebx,eax
  412e1e:	jp     0x412e16
  412e20:	js     0x412e0d
  412e22:	stos   DWORD PTR es:[edi],eax
  412e23:	lahf   
  412e24:	popf   
  412e25:	mov    eax,0xed11f6e6
  412e2a:	mov    edx,0x317b49b8
  412e2f:	gs xor esi,0xdb627407
  412e36:	call   0x4a1a:0x90bb62a
  412e3d:	mov    al,ds:0xd8c9c0db
  412e42:	shl    DWORD PTR [ebx+0x5932e461],cl
  412e48:	ja     0x412dfc
  412e4a:	xchg   al,bh
  412e4c:	rcr    al,0x8a
  412e4f:	cmp    al,0xe5
  412e51:	mov    ch,0x51
  412e53:	jecxz  0x412e5a
  412e55:	xchg   DWORD PTR [esi],eax
  412e57:	or     BYTE PTR [edi+0x55147f17],ch
  412e5d:	mov    eax,ds:0x470cd7b3
  412e62:	dec    bh
  412e64:	pusha  
  412e65:	ficomp DWORD PTR ds:0xa5db9d6d
  412e6b:	pop    ecx
  412e6c:	jb     0x412e80
  412e6e:	fs mov bl,0xa4
  412e71:	out    dx,al
  412e72:	cmp    ebp,DWORD PTR [esi]
  412e74:	jb     0x412e48
  412e76:	cmp    eax,ecx
  412e78:	ss lock jae 0x412eb2
  412e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e7d:	leave  
  412e7e:	shl    BYTE PTR [ebx+0x564ee850],0x57
  412e85:	mov    ds:0x8291de11,al
  412e8a:	adc    al,0x53
  412e8c:	push   ebx
  412e8d:	push   es
  412e8e:	(bad)  
  412e8f:	aam    0x4
  412e91:	lea    esp,[edx]
  412e93:	lahf   
  412e94:	sub    eax,0x5f0b9269
  412e99:	xchg   esp,eax
  412e9a:	mov    eax,0xabf8f519
  412e9f:	lahf   
  412ea0:	rol    dh,0x5d
  412ea3:	rcl    DWORD PTR [edi-0x15],cl
  412ea6:	sub    DWORD PTR [esi+edx*1-0x1d],esp
  412eaa:	ins    DWORD PTR es:[edi],dx
  412eab:	cmc    
  412eac:	adc    BYTE PTR ds:0x406281b7,al
  412eb2:	fbld   TBYTE PTR [eax+ebp*2+0x725d4638]
  412eb9:	xchg   DWORD PTR [eax+0x31],eax
  412ebc:	jle    0x412e64
  412ebe:	aaa    
  412ebf:	mov    ch,0xa9
  412ec1:	clc    
  412ec2:	dec    edi
  412ec3:	nop
  412ec4:	loopne 0x412eb6
  412ec6:	mov    ds:0xdf62b9b4,al
  412ecb:	jle    0x412e75
  412ecd:	sbb    DWORD PTR [ecx-0x6fce85db],ebx
  412ed3:	enter  0xf459,0x70
  412ed7:	add    eax,0x3235e191
  412edc:	mov    ds:0x5ec723e8,al
  412ee1:	pop    edi
  412ee2:	fsubr  DWORD PTR [ebx-0x1c]
  412ee5:	mov    eax,0xf9a8ce49
  412eea:	rol    BYTE PTR [esi],cl
  412eec:	jo     0x412f24
  412eee:	or     BYTE PTR [ecx+ecx*4+0x1192a2c3],0xe1
  412ef6:	adc    eax,DWORD PTR [esi]
  412ef8:	xchg   BYTE PTR [edi],ah
  412efa:	adc    DWORD PTR [ecx],ebx
  412efc:	das    
  412efd:	pop    ebp
  412efe:	loope  0x412f78
  412f00:	cmp    dl,BYTE PTR [esi+0x7b]
  412f03:	jbe    0x412f21
  412f05:	mov    ah,0x23
  412f07:	sub    eax,0xcb585d56
  412f0c:	mov    ebp,0x1a034409
  412f11:	xlat   BYTE PTR ds:[ebx]
  412f12:	dec    edx
  412f13:	aas    
  412f14:	bound  edx,QWORD PTR ds:[ecx]
  412f17:	xor    DWORD PTR [edi-0x61],esp
  412f1a:	pop    es
  412f1b:	cmp    al,0x81
  412f1d:	sbb    esp,ebx
  412f1f:	mov    ebx,0x2122880f
  412f24:	mov    es,WORD PTR [ebp-0x7f1918f5]
  412f2a:	sub    eax,0x4f0baf44
  412f2f:	bound  eax,QWORD PTR [edi+edx*4]
  412f32:	popa   
  412f33:	in     eax,0x4
  412f35:	rcl    bl,0x45
  412f38:	(bad)  
  412f3a:	mov    esp,0xc3fdf7ab
  412f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f40:	and    ecx,esi
  412f42:	push   ebp
  412f43:	sahf   
  412f44:	mov    edi,0x71418a30
  412f49:	pusha  
  412f4a:	or     bh,dl
  412f4c:	pop    ds
  412f4d:	add    ebx,edi
  412f4f:	dec    edi
  412f50:	jle    0x412f51
  412f52:	mov    DWORD PTR [eax],ebp
  412f54:	pop    es
  412f55:	xchg   ecx,eax
  412f56:	xchg   DWORD PTR [edi],ecx
  412f58:	fldcw  WORD PTR [ebp-0x6b]
  412f5b:	fimul  WORD PTR [eax+0x35]
  412f5e:	push   edx
  412f5f:	xchg   edi,eax
  412f60:	mov    ah,0x39
  412f62:	cmp    eax,0x19357690
  412f67:	jb     0x412f9e
  412f69:	pop    es
  412f6a:	or     al,0xd5
  412f6c:	sti    
  412f6d:	xchg   DWORD PTR [ecx+0x64801237],edi
  412f73:	cwde   
  412f74:	int    0xb8
  412f76:	scas   eax,DWORD PTR es:[edi]
  412f77:	mov    BYTE PTR [ebx-0x388b604],bl
  412f7d:	mov    bh,0x12
  412f7f:	cmc    
  412f80:	adc    DWORD PTR [esi+0x52],ecx
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	xor    edx,ebp
  412f86:	neg    DWORD PTR [ecx-0x10b5b647]
  412f8c:	adc    al,dh
  412f8e:	pop    ebp
  412f8f:	push   0x17f8ad46
  412f94:	and    eax,0x83c4444c
  412f99:	xchg   esi,eax
  412f9a:	inc    esp
  412f9b:	or     edi,DWORD PTR [ecx-0x694fad78]
  412fa1:	mov    ds:0x1de88eb4,al
  412fa6:	pop    esp
  412fa7:	dec    edi
  412fa8:	mov    ss:0xab9a71f6,eax
  412fae:	push   ebx
  412faf:	in     eax,0x88
  412fb1:	test   eax,0x5cbc2605
  412fb6:	scas   al,BYTE PTR es:[edi]
  412fb7:	inc    edi
  412fb8:	stos   DWORD PTR es:[edi],eax
  412fb9:	pop    edx
  412fba:	mov    eax,0xe5f6b0b7
  412fbf:	xor    BYTE PTR [esi+edi*8+0x30ae8d74],0x34
  412fc7:	out    0x1c,eax
  412fc9:	ss push ebx
  412fcb:	pusha  
  412fcc:	fld    DWORD PTR [eax+0x6a82e146]
  412fd2:	in     eax,0x33
  412fd4:	ss repz std 
  412fd7:	bound  edx,QWORD PTR [edi+eiz*2]
  412fda:	push   ebx
  412fdb:	test   DWORD PTR [edi-0x5e],edi
  412fde:	adc    al,BYTE PTR [ecx+0x61]
  412fe1:	(bad)  
  412fe2:	mov    ebx,DWORD PTR [eax-0x7ca6ef57]
  412fe8:	mov    edi,0x7f817cc
  412fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fee:	inc    edi
  412fef:	adc    eax,0x17d41e43
  412ff4:	inc    edi
  412ff5:	popa   
  412ff6:	call   0xc47277ea
  412ffb:	pop    ecx
  412ffc:	retf   
  412ffd:	mov    esp,0x5716e998
  413002:	mov    ds:0xc72fe01b,eax
  413007:	dec    ebx
  413008:	pop    ss
  413009:	stos   BYTE PTR es:[edi],al
  41300a:	xchg   ebx,eax
  41300b:	ja     0x412fbe
  41300d:	test   BYTE PTR [esi],ch
  41300f:	sub    DWORD PTR [ecx-0xd],edx
  413012:	rol    BYTE PTR [eax-0x7a82f5cf],1
  413018:	jnp    0x413033
  41301a:	test   BYTE PTR [esi+0x35],0xce
  41301e:	das    
  41301f:	js     0x41309c
  413021:	aas    
  413022:	adc    al,0xe9
  413024:	repz add ecx,ebp
  413027:	clc    
  413028:	adc    eax,0x8699dfa3
  41302d:	je     0x412fd1
  41302f:	and    DWORD PTR [edi-0x1b],edi
  413032:	cmp    esi,edx
  413034:	das    
  413035:	(bad)  
  413036:	into   
  413037:	aas    
  413038:	pop    ds
  413039:	jae    0x41300e
  41303b:	mov    ch,0x1
  41303d:	(bad)  
  41303e:	popa   
  41303f:	sbb    edx,edx
  413041:	xchg   edi,eax
  413042:	rcl    cl,0xa8
  413045:	push   esi
  413046:	sub    eax,DWORD PTR [ecx+0x3a]
  413049:	sbb    eax,0xa949c14
  41304e:	add    BYTE PTR [ecx+0x1],dh
  413051:	add    DWORD PTR [edi+0x6a7b1cd5],ebp
  413057:	mov    dh,dl
  413059:	jbe    0x413018
  41305b:	push   ebx
  41305c:	or     DWORD PTR [ebx+esi*4],0x1fb4c031
  413063:	add    DWORD PTR [edx+0x8],ecx
  413066:	test   BYTE PTR [ebx],cl
  413068:	fwait
  413069:	push   ecx
  41306a:	xchg   ecx,eax
  41306b:	packsswb mm0,QWORD PTR [ebx+eax*4]
  41306f:	iret   
  413070:	cdq    
  413071:	inc    ebp
  413072:	adc    bl,BYTE PTR [edi-0x5f]
  413075:	sahf   
  413076:	push   ss
  413077:	rcl    DWORD PTR [ecx+edx*2+0x8],1
  41307b:	fwait
  41307c:	dec    edx
  41307d:	test   al,0x5b
  41307f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413080:	pop    ds
  413081:	dec    edi
  413082:	adc    ah,bl
  413084:	ret    0x4b28
  413087:	imul   edi,DWORD PTR [esi+esi*4-0x14],0x1584d1b7
  41308f:	fadd   DWORD PTR [eax+0x42]
  413092:	popa   
  413093:	js     0x41307b
  413095:	push   ebx
  413096:	shl    DWORD PTR [edx+0x30],0xac
  41309a:	scas   eax,DWORD PTR es:[edi]
  41309b:	je     0x4130bf
  41309d:	mov    edx,0x24681417
  4130a2:	lock fild WORD PTR [esi+edi*2+0x28ea3ef8]
  4130aa:	adc    edx,esp
  4130ac:	mov    ds:0xa16404ff,eax
  4130b1:	dec    eax
  4130b2:	push   0xc6382c27
  4130b7:	jb     0x413131
  4130b9:	loopne 0x41310e
  4130bb:	imul   edi,edx,0xffffffab
  4130be:	(bad)  
  4130bf:	jge    0x41309d
  4130c1:	jecxz  0x4130a6
  4130c3:	push   cs
  4130c4:	push   esi
  4130c5:	pop    ecx
  4130c6:	and    ecx,DWORD PTR [eax-0x42]
  4130c9:	rcl    BYTE PTR [ebx],1
  4130cb:	lahf   
  4130cc:	call   esi
  4130ce:	jne    0x413138
  4130d0:	test   DWORD PTR [ebx+eiz*8-0x355bbb3],edx
  4130d7:	imul   DWORD PTR [eax]
  4130d9:	test   al,0x95
  4130db:	jecxz  0x413086
  4130dd:	lods   al,BYTE PTR ds:[esi]
  4130de:	sbb    ebx,DWORD PTR [ecx+eax*4-0x674e3c62]
  4130e5:	nop
  4130e6:	pop    esi
  4130e7:	dec    esp
  4130e8:	stc    
  4130e9:	cmp    bl,BYTE PTR [ebx+ecx*4]
  4130ec:	pusha  
  4130ed:	cmp    ch,cl
  4130ef:	ret    
  4130f0:	xchg   edx,eax
  4130f1:	out    0x94,eax
  4130f3:	sub    BYTE PTR [edi],0xc5
  4130f6:	jecxz  0x413084
  4130f8:	mov    ah,BYTE PTR [esi+0x53]
  4130fb:	sub    bh,bh
  4130fd:	fnstcw WORD PTR [ebx+0x55d5d2e0]
  413103:	test   eax,0x9d5ebec
  413108:	add    ebp,ecx
  41310a:	ret    0x796e
  41310d:	add    BYTE PTR [eax-0x2167af20],0x5c
  413114:	cmc    
  413115:	shl    BYTE PTR [ecx-0x5a31aa03],1
  41311b:	jns    0x413121
  41311d:	sub    DWORD PTR [ecx-0x2c],ecx
  413120:	pop    es
  413121:	dec    esi
  413122:	and    BYTE PTR [ebx],bh
  413124:	jl     0x41313d
  413126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413128:	inc    ecx
  413129:	inc    ebp
  41312a:	arpl   WORD PTR [edx],ax
  41312c:	cmp    DWORD PTR cs:[ebp+0x3fa75d0d],0xee4d2a5a
  413137:	cmc    
  413138:	jl     0x41311b
  41313a:	or     dl,bl
  41313c:	pusha  
  41313d:	ret    0x8ffd
  413140:	jecxz  0x4131bc
  413142:	xor    DWORD PTR [edi+0x26],edi
  413145:	int3   
  413146:	in     al,0x71
  413148:	ins    BYTE PTR es:[edi],dx
  413149:	ficomp WORD PTR [eax-0x34]
  41314c:	sahf   
  41314d:	mov    ds:0xdfaa7c69,eax
  413152:	stc    
  413153:	and    BYTE PTR [esi-0x671e6818],dh
  413159:	scas   eax,DWORD PTR es:[edi]
  41315a:	icebp  
  41315b:	push   ebx
  41315c:	push   esi
  41315d:	push   esp
  41315e:	lock popf 
  413160:	ss popa 
  413162:	retf   
  413163:	jbe    0x4131b9
  413165:	mov    ecx,0x66d42ece
  41316a:	jecxz  0x413136
  41316c:	and    DWORD PTR [edx],esi
  41316e:	sbb    DWORD PTR [esi],ebp
  413170:	and    ch,0x1f
  413173:	fnstsw WORD PTR [ecx+0x52]
  413176:	(bad)  
  413177:	mov    esp,0xd7849e1f
  41317c:	fidiv  DWORD PTR [edx-0x80]
  41317f:	inc    ebx
  413180:	not    DWORD PTR [edx+0xe0ebd08]
  413186:	fst    QWORD PTR [esi+0x4737d336]
  41318c:	mov    esp,0x3882b702
  413191:	lds    edx,FWORD PTR [ecx-0x75]
  413194:	stc    
  413195:	mov    ebp,0xdcd04c1e
  41319a:	es gs aam 0xf1
  41319e:	daa    
  41319f:	jl     0x413209
  4131a1:	out    dx,eax
  4131a2:	and    BYTE PTR [ecx-0x2f],dh
  4131a5:	sub    DWORD PTR [ebx-0x5feb9a26],0x68b1ef24
  4131af:	in     al,dx
  4131b0:	inc    ebp
  4131b1:	push   ecx
  4131b2:	pop    ss
  4131b3:	lock cld 
  4131b5:	daa    
  4131b6:	ret    0x5bbf
  4131b9:	xchg   esp,eax
  4131ba:	sub    DWORD PTR [esi],esp
  4131bc:	sub    al,0xf3
  4131be:	push   ecx
  4131bf:	pop    eax
  4131c0:	inc    eax
  4131c1:	sub    DWORD PTR [ecx-0x2c2549e3],ebp
  4131c7:	mov    es,esp
  4131c9:	pop    ds
  4131ca:	stos   BYTE PTR es:[edi],al
  4131cb:	add    eax,0xaaf0b7ef
  4131d0:	push   cs
  4131d1:	lods   eax,DWORD PTR ds:[esi]
  4131d2:	dec    ebp
  4131d3:	cwde   
  4131d4:	jno    0x41317b
  4131d6:	push   edi
  4131d7:	fwait
  4131d8:	popa   
  4131d9:	addr16 cwde 
  4131db:	dec    edi
  4131dc:	(bad)  
  4131dd:	(bad)  
  4131de:	repnz or cl,ch
  4131e1:	sahf   
  4131e2:	enter  0xc060,0xb0
  4131e6:	lods   eax,DWORD PTR ds:[esi]
  4131e7:	push   esi
  4131e8:	bnd ret 
  4131ea:	pop    ss
  4131eb:	ror    DWORD PTR [ebx+0x19],cl
  4131ee:	jb     0x4131a0
  4131f0:	dec    ebp
  4131f1:	and    eax,0x1795a218
  4131f6:	ja     0x4131cb
  4131f8:	daa    
  4131f9:	sbb    BYTE PTR [ebx+0xc9c4faf],dh
  4131ff:	push   DWORD PTR [edi+ebp*1]
  413202:	js     0x4131cb
  413204:	push   ecx
  413205:	mov    fs,ecx
  413207:	push   esp
  413208:	push   eax
  413209:	inc    esp
  41320a:	add    al,0x28
  41320c:	icebp  
  41320d:	xchg   ebx,eax
  41320e:	dec    esi
  41320f:	cs inc ebx
  413211:	retf   
  413212:	push   eax
  413213:	sub    BYTE PTR [edi-0x42],0x86
  413217:	push   cs
  413218:	lock mov WORD PTR [edx+0x51665e7c],ss
  41321f:	rcr    DWORD PTR ds:0x818a692e,1
  413225:	jno    0x413289
  413227:	dec    ecx
  413228:	es xchg esp,eax
  41322a:	(bad)  
  41322b:	(bad)  [eax-0x59d01b99]
  413231:	cli    
  413232:	cmp    eax,0x87bd57bc
  413237:	inc    ebx
  413238:	push   esp
  413239:	adc    BYTE PTR [edx-0x6d518669],bl
  41323f:	jno    0x4131e7
  413241:	gs cli 
  413243:	add    ch,BYTE PTR [eax+ecx*1+0x0]
  413247:	aam    0x4e
  413249:	repnz hlt 
  41324b:	dec    esp
  41324c:	test   al,0xb0
  41324e:	pop    edi
  41324f:	pusha  
  413250:	inc    eax
  413251:	mov    al,0xad
  413253:	loop   0x4131e0
  413255:	jle    0x41320f
  413257:	ja     0x4131fa
  413259:	jno    0x41324f
  41325b:	js     0x4131e3
  41325d:	int3   
  41325e:	outs   dx,DWORD PTR ds:[esi]
  41325f:	imul   eax,DWORD PTR [ecx-0x63],0xffffffef
  413263:	nop
  413264:	mov    al,ds:0x91318157
  413269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41326a:	out    dx,al
  41326b:	cdq    
  41326c:	xchg   ebp,eax
  41326d:	les    ebp,FWORD PTR [esi+edx*4]
  413270:	mov    bh,0x46
  413272:	mov    esi,0x42b9b563
  413277:	aaa    
  413278:	jne    0x4132b7
  41327a:	in     al,dx
  41327b:	fadd   QWORD PTR ds:0x21229060
  413281:	jno    0x41329d
  413283:	xchg   DWORD PTR [edi-0x2c],esi
  413286:	leave  
  413287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413288:	or     eax,0xacc6ed5d
  41328d:	jae    0x41330e
  41328f:	add    DWORD PTR cs:[esi+ecx*1],ecx
  413293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413294:	iret   
  413295:	imul   ebp,DWORD PTR [esi+0x5b],0x5c
  413299:	xor    dh,BYTE PTR [edx+0x6ae4d756]
  41329f:	imul   ecx,DWORD PTR [esi-0x565e0434],0xffffff98
  4132a6:	jmp    0xb837:0xd64848c1
  4132ad:	mov    ecx,0x5e2239a3
  4132b2:	popf   
  4132b3:	rcl    DWORD PTR [esi-0x7c],cl
  4132b6:	ffreep st(3)
  4132b8:	(bad)  
  4132b9:	dec    eax
  4132ba:	cs add ah,ah
  4132bd:	mov    dl,BYTE PTR [ebx+esi*2+0x1a]
  4132c1:	iret   
  4132c2:	sbb    al,0x5
  4132c4:	bound  ebx,QWORD PTR [ecx-0x630ef8a2]
  4132ca:	mov    ecx,0x14059f4a
  4132cf:	push   0xffffff95
  4132d1:	mov    dh,0xc9
  4132d3:	mov    bh,0x96
  4132d5:	inc    eax
  4132d6:	dec    ebx
  4132d7:	int    0x17
  4132d9:	push   edx
  4132da:	jmp    0x4132a4
  4132dc:	in     eax,dx
  4132dd:	iret   
  4132de:	js     0x41335d
  4132e0:	or     al,BYTE PTR [ebx+0x76]
  4132e3:	jb     0x413335
  4132e5:	fwait
  4132e6:	push   es
  4132e7:	dec    eax
  4132e8:	in     al,dx
  4132e9:	push   esp
  4132ea:	pusha  
  4132eb:	int    0x26
  4132ed:	sub    al,0xd9
  4132ef:	(bad)  
  4132f0:	mov    ebp,es
  4132f2:	pop    edx
  4132f3:	enter  0x8cfe,0xb2
  4132f7:	test   BYTE PTR [edx+esi*8],dh
  4132fa:	cli    
  4132fb:	call   0xb410d34b
  413300:	pop    ss
  413301:	adc    DWORD PTR [ecx+ecx*4+0x17655ec9],esi
  413308:	pop    edi
  413309:	mov    ah,0x1b
  41330b:	and    esp,eax
  41330d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41330e:	ret    0x2781
  413311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413312:	xor    DWORD PTR [eax+0x5deb83fe],0x54cbc5f1
  41331c:	dec    esp
  41331d:	mov    ch,0x85
  41331f:	(bad)  
  413320:	arpl   WORD PTR [esi],bx
  413322:	popa   
  413323:	dec    DWORD PTR [ebx-0x3fb3bc1e]
  413329:	test   eax,ebx
  41332b:	mov    ?,WORD PTR [edi+0x514843e3]
  413331:	icebp  
  413332:	fdivr  QWORD PTR [edi]
  413334:	mov    edx,DWORD PTR gs:[ebp+0x64]
  413338:	mov    al,ds:0x37d2bec7
  41333d:	lock add cl,dh
  413340:	nop
  413341:	cmc    
  413342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413343:	add    al,0x24
  413345:	sub    dh,bl
  413347:	jl     0x413335
  413349:	enter  0xbfd,0x5
  41334d:	add    ebx,DWORD PTR [ebp-0x21]
  413350:	inc    edi
  413351:	inc    esp
  413352:	imul   edx
  413354:	mov    esi,0x8768e7f5
  413359:	or     BYTE PTR [ebx+0x35],0xc2
  41335d:	repz icebp 
  41335f:	retf   
  413360:	loope  0x41339d
  413362:	sbb    BYTE PTR [ebp-0x39c57884],bh
  413368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413369:	jnp    0x413392
  41336b:	das    
  41336c:	inc    eax
  41336d:	rol    DWORD PTR [ecx+0x61618bb4],cl
  413373:	add    BYTE PTR [ebx-0x5c6753fa],0x4f
  41337a:	xor    ebx,esi
  41337c:	adc    eax,0x3cb32fef
  413381:	sahf   
  413382:	popf   
  413383:	pop    edi
  413384:	jns    0x413382
  413386:	fsubr  st,st(3)
  413388:	mov    edi,0xdc11b097
  41338d:	ds sbb al,0x58
  413390:	add    DWORD PTR [edx+0x1b],esi
  413393:	or     al,0x31
  413395:	test   BYTE PTR [ecx+edi*8-0x7c],bl
  413399:	mov    WORD PTR [ebp-0x7b],cs
  41339c:	mov    ds:0x7675c143,al
  4133a1:	jle    0x413403
  4133a3:	sbb    dl,bl
  4133a5:	sahf   
  4133a6:	push   edi
  4133a7:	lods   eax,DWORD PTR ds:[esi]
  4133a8:	xchg   edx,eax
  4133a9:	mov    ecx,0x2d483e86
  4133ae:	mov    dh,0x9
  4133b0:	inc    ebp
  4133b1:	lds    ebp,FWORD PTR [eax+eax*4-0x64]
  4133b5:	es xchg esi,eax
  4133b7:	aaa    
  4133b8:	jle    0x413346
  4133ba:	setnp  BYTE PTR [ecx]
  4133bd:	shl    DWORD PTR [esp+ecx*2-0x4acf847c],1
  4133c4:	adc    BYTE PTR [edx],al
  4133c6:	jo     0x413429
  4133c8:	sub    eax,0xd1de38c8
  4133cd:	inc    ebp
  4133ce:	call   0x32b5:0x89c5e4bd
  4133d5:	gs adc al,0x1
  4133d8:	and    bh,ch
  4133da:	int3   
  4133db:	mov    BYTE PTR [edx+0x44],dl
  4133de:	cmp    DWORD PTR [eax],edx
  4133e0:	jmp    0x1a9b:0x11a606bf
  4133e7:	retf   
  4133e8:	aaa    
  4133e9:	add    al,0xf7
  4133eb:	and    BYTE PTR [ecx-0x5a],0x5c
  4133ef:	jmp    0xf280:0xa531e4d0
  4133f6:	ja     0x4133f4
  4133f8:	loope  0x413392
  4133fa:	stos   DWORD PTR es:[edi],eax
  4133fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133fc:	add    edx,DWORD PTR [esi-0x74b2caf3]
  413402:	ins    DWORD PTR es:[edi],dx
  413403:	or     al,0xaa
  413405:	in     al,dx
  413406:	in     al,0x74
  413408:	enter  0xbeb2,0x8a
  41340c:	int    0x71
  41340e:	dec    ebp
  41340f:	xchg   edx,eax
  413410:	inc    edx
  413411:	xor    bh,BYTE PTR [eax]
  413413:	adc    ah,BYTE PTR [ebx+0x1c]
  413416:	fisub  WORD PTR cs:[ecx-0x22]
  41341a:	aaa    
  41341b:	pop    ebp
  41341c:	icebp  
  41341d:	out    0x5,al
  41341f:	mov    ah,0x36
  413421:	(bad)  
  413422:	cmp    ebp,DWORD PTR [edx]
  413424:	(bad)  
  413425:	adc    BYTE PTR [ebx+0x42ced8],bh
  41342b:	adc    eax,0xcabdd241
  413430:	je     0x4134b1
  413432:	mov    ecx,0xf2e0a039
  413437:	jmp    0x7f2e1f34
  41343c:	push   esi
  41343d:	cmp    ebp,DWORD PTR ds:0x45a5595a
  413443:	repnz sbb DWORD PTR [ecx],ebp
  413446:	int    0xa
  413448:	(bad)  
  413449:	pop    eax
  41344a:	std    
  41344b:	cmp    edx,DWORD PTR [ecx]
  41344d:	gs pop eax
  41344f:	inc    esi
  413450:	(bad)  
  413451:	push   ss
  413452:	xor    bl,BYTE PTR [ebx+0x62]
  413455:	mov    bh,0x6b
  413457:	rcl    edi,1
  413459:	je     0x413407
  41345b:	xchg   esp,eax
  41345c:	push   ebp
  41345d:	xchg   edx,eax
  41345e:	ret    
  41345f:	dec    edx
  413460:	or     dh,BYTE PTR [edi]
  413462:	test   BYTE PTR ds:0xcfb775c4,0x67
  413469:	inc    edx
  41346a:	stos   DWORD PTR es:[edi],eax
  41346b:	jno    0x413409
  41346d:	cmp    ch,BYTE PTR [edx+0x1bbb37e5]
  413473:	inc    esi
  413474:	nop    DWORD PTR [esi+0x37]
  413478:	je     0x4134f1
  41347a:	pop    ecx
  41347b:	std    
  41347c:	jo     0x4134a6
  41347e:	or     ch,BYTE PTR [ebp-0x7993dfab]
  413484:	lock sub cl,BYTE PTR [esi]
  413487:	or     ch,BYTE PTR [ebx-0x10]
  41348a:	adc    eax,0x745993ae
  41348f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413490:	push   eax
  413491:	jnp    0x413421
  413493:	pop    ecx
  413494:	fmul   DWORD PTR ds:0xa4574187
  41349a:	rol    BYTE PTR [eax-0x6f],1
  41349d:	mov    ds:0x6e9df882,eax
  4134a2:	arpl   WORD PTR [esi-0x1e],ax
  4134a5:	sti    
  4134a6:	adc    eax,0x9b1d25c5
  4134ab:	rcr    DWORD PTR [eax],1
  4134ad:	out    dx,eax
  4134ae:	jl     0x41345e
  4134b0:	test   BYTE PTR [edx+0x66],0xd0
  4134b4:	int3   
  4134b5:	into   
  4134b6:	in     eax,0xfe
  4134b8:	xchg   BYTE PTR [edx+0x1be4c222],bl
  4134be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134bf:	xor    bh,BYTE PTR [eax+edx*4]
  4134c2:	test   eax,0xab4985fa
  4134c7:	dec    esi
  4134c8:	dec    DWORD PTR [edx+0x2bd3bc66]
  4134ce:	sub    esp,DWORD PTR [edx+0x551f723c]
  4134d4:	(bad)  [esi]
  4134d6:	add    esp,DWORD PTR [ecx-0x547165]
  4134dc:	mov    ch,bh
  4134de:	sti    
  4134df:	gs aad 0x78
  4134e2:	push   ebp
  4134e3:	test   al,0xf8
  4134e5:	pop    esp
  4134e6:	xor    BYTE PTR [edi+0x13],bl
  4134e9:	outs   dx,DWORD PTR ds:[esi]
  4134ea:	mov    bl,0xca
  4134ec:	and    al,0xeb
  4134ee:	push   0x51
  4134f0:	or     al,0xe7
  4134f2:	lds    eax,FWORD PTR [ecx+edi*8+0x319d1948]
  4134f9:	retf   0xe1a
  4134fc:	sar    BYTE PTR [edx+0x36],1
  4134ff:	sub    eax,0xef078254
  413504:	fs pop esi
  413506:	or     ebx,DWORD PTR [ecx-0x707a7ba1]
  41350c:	cmp    DWORD PTR [eax+0x6d1bec4e],esi
  413512:	xchg   ebp,eax
  413513:	(bad)  
  413514:	clc    
  413515:	xchg   esi,eax
  413516:	pop    edi
  413517:	adc    BYTE PTR ds:0x8f72e368,dh
  41351d:	adc    DWORD PTR [ebp+0x26],0xb22ec05b
  413524:	bnd jbe 0x4134aa
  413527:	pop    ebp
  413528:	loopne 0x413565
  41352a:	mul    DWORD PTR [edi-0x59]
  41352d:	pop    ss
  41352e:	mov    eax,ds:0xd4f5bb20
  413533:	xor    al,0x38
  413535:	cmp    DWORD PTR [edx-0x3fd53653],0x8
  41353c:	rcl    DWORD PTR [ebp+0x17793949],cl
  413542:	mov    BYTE PTR [esi],0xb5
  413545:	les    edi,FWORD PTR [edi+0x4b]
  413548:	xchg   esp,eax
  413549:	leave  
  41354a:	pop    ebp
  41354b:	fcmovu st,st(1)
  41354d:	inc    esi
  41354e:	pop    edi
  41354f:	je     0x41358b
  413551:	inc    ebx
  413552:	or     al,BYTE PTR [eax+ebp*4+0x3f]
  413556:	jecxz  0x413558
  413558:	(bad)  
  413559:	push   eax
  41355a:	stos   DWORD PTR es:[edi],eax
  41355b:	jo     0x4134fb
  41355d:	xchg   edi,eax
  41355e:	repnz pop ebx
  413560:	aad    0xb1
  413562:	test   al,0xc0
  413564:	stos   DWORD PTR es:[edi],eax
  413565:	push   cs
  413566:	clc    
  413567:	lds    ebp,FWORD PTR [ecx-0x5a]
  41356a:	adc    ch,ch
  41356c:	enter  0x95ab,0x9c
  413570:	pop    es
  413571:	jge    0x41357c
  413573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413574:	jle    0x413528
  413576:	clc    
  413577:	sbb    DWORD PTR [esi+0x67],esi
  41357a:	fldenv [ecx]
  41357c:	ret    0xbace
  41357f:	in     eax,0x2a
  413581:	dec    edx
  413582:	xchg   ebp,eax
  413583:	pop    ecx
  413584:	or     ch,BYTE PTR [ecx+edx*8+0x3a]
  413588:	jmp    0x413538
  41358a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358b:	jne    0x41360c
  41358d:	xchg   edi,eax
  41358e:	fs inc esp
  413590:	pop    edi
  413591:	ss gs or ch,BYTE PTR gs:[ebx+esi*8+0x33]
  413598:	jp     0x41354b
  41359a:	pop    esi
  41359b:	rcr    esp,cl
  41359d:	sub    al,0xa7
  41359f:	xor    al,0xac
  4135a1:	inc    ecx
  4135a2:	cmp    eax,0xf9f21423
  4135a7:	out    0x11,eax
  4135a9:	cwde   
  4135aa:	jp     0x41356f
  4135ac:	retf   0xe64d
  4135af:	pop    ebp
  4135b0:	fidivr WORD PTR [edi-0x467b0322]
  4135b6:	mov    DWORD PTR [eax+0x285a1ac4],ecx
  4135bc:	or     al,0xaf
  4135be:	add    dh,ah
  4135c0:	lods   eax,DWORD PTR ds:[esi]
  4135c1:	dec    edi
  4135c2:	and    ecx,DWORD PTR [ebp+0x4e]
  4135c5:	inc    edi
  4135c6:	js     0x413578
  4135c8:	pushf  
  4135c9:	mov    ebp,0xc5caeae6
  4135ce:	or     al,0x52
  4135d0:	iret   
  4135d1:	inc    ecx
  4135d2:	cs push 0x58
  4135d5:	js     0x413634
  4135d7:	adc    dl,BYTE PTR [edx-0x45d75729]
  4135dd:	mov    edi,0x555ccd0e
  4135e2:	rcl    BYTE PTR [eax-0x19],cl
  4135e5:	inc    ecx
  4135e6:	sbb    DWORD PTR [edi-0x552a0c7e],eax
  4135ec:	or     cl,BYTE PTR [edi-0x7eac4986]
  4135f2:	stos   DWORD PTR es:[edi],eax
  4135f3:	or     esi,ecx
  4135f5:	jne    0x413597
  4135f7:	jo     0x413593
  4135f9:	rcl    BYTE PTR [eax+0x6d5a0e62],0x5a
  413600:	jae    0x41363f
  413602:	mov    ds,WORD PTR ds:0x35576542
  413608:	push   esp
  413609:	in     al,0x60
  41360b:	dec    ebp
  41360c:	xor    eax,0x414a0aec
  413611:	mul    ah
  413613:	push   ebx
  413614:	mov    BYTE PTR [edx],bl
  413616:	cmp    bl,dl
  413618:	jno    0x41367c
  41361a:	and    esi,ebx
  41361c:	mov    WORD PTR [edi-0x10],fs
  41361f:	bound  ebp,QWORD PTR [eax-0x5e98fdc2]
  413625:	add    dl,BYTE PTR [ebx+0x5c2a6e19]
  41362b:	into   
  41362c:	pop    eax
  41362d:	stc    
  41362e:	neg    DWORD PTR [edx+0x38eba411]
  413634:	jge    0x41363c
  413636:	add    eax,0xa96ea913
  41363b:	scas   al,BYTE PTR es:[edi]
  41363c:	push   esp
  41363d:	fsub   st,st(1)
  41363f:	jp     0x4135ff
  413641:	sbb    dh,ah
  413643:	jle    0x4135ec
  413645:	push   es
  413646:	bswap  ebp
  413648:	test   eax,0xa14aea48
  41364d:	pusha  
  41364e:	mov    eax,0x5776f0d4
  413653:	stos   DWORD PTR es:[edi],eax
  413654:	xchg   ebx,eax
  413655:	jnp    0x4136cf
  413657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413658:	dec    eax
  413659:	and    esi,DWORD PTR [edx-0x7b8f57d5]
  41365f:	cld    
  413660:	clc    
  413661:	sbb    esp,0xfffffffd
  413664:	in     eax,dx
  413665:	enter  0x2b93,0x37
  413669:	xchg   ebx,eax
  41366a:	xchg   ebx,eax
  41366b:	push   edx
  41366c:	add    BYTE PTR [ebx],ah
  41366e:	sub    BYTE PTR [ecx],al
  413670:	pop    ebx
  413671:	bndldx bnd1,[edi]
  413674:	xchg   esi,eax
  413675:	aas    
  413676:	repnz inc ecx
  413678:	cli    
  413679:	daa    
  41367a:	sbb    DWORD PTR [edx+0x38dd3973],esi
  413680:	xchg   edi,eax
  413681:	pop    ebx
  413682:	add    edx,esi
  413684:	outs   dx,DWORD PTR ds:[esi]
  413685:	jmp    FWORD PTR [ecx+0x52]
  413688:	test   DWORD PTR [esi-0x7260de70],ecx
  41368e:	jp     0x413622
  413690:	retf   
  413691:	adc    ch,dh
  413693:	mov    ch,0x9c
  413695:	mov    edi,0x5b470908
  41369a:	std    
  41369b:	mov    bl,0xfa
  41369d:	mov    DWORD PTR [esi],edi
  41369f:	jge    0x4136b5
  4136a1:	xchg   ecx,eax
  4136a2:	(bad)  
  4136a3:	(bad)  [edi]
  4136a5:	jmp    0x413629
  4136a7:	into   
  4136a8:	inc    edx
  4136a9:	or     al,0x6f
  4136ab:	aaa    
  4136ac:	iret   
  4136ad:	mov    DWORD PTR [edx-0x63082a57],esp
  4136b3:	mov    eax,0x4ac0f1e1
  4136b8:	inc    edx
  4136b9:	fidiv  WORD PTR [ebp+0x2]
  4136bc:	out    dx,eax
  4136bd:	inc    esp
  4136be:	push   esi
  4136bf:	jmp    0x4136da
  4136c1:	stos   DWORD PTR es:[edi],eax
  4136c2:	stos   DWORD PTR es:[edi],eax
  4136c3:	in     al,0x27
  4136c5:	adc    al,0x23
  4136c7:	pop    ss
  4136c8:	inc    ecx
  4136c9:	ret    0x485f
  4136cc:	stos   DWORD PTR es:[edi],eax
  4136cd:	ins    BYTE PTR es:[edi],dx
  4136ce:	ror    DWORD PTR [eax+0x2fd4c40d],0x8d
  4136d5:	leave  
  4136d6:	(bad)
  4136d9:	adc    al,0xb
  4136db:	ret    
  4136dc:	out    0xdf,eax
  4136de:	push   ss
  4136df:	inc    esi
  4136e0:	xchg   edx,eax
  4136e1:	gs mov eax,ds
  4136e4:	into   
  4136e5:	aad    0x2
  4136e7:	rcl    BYTE PTR [ebp+ebp*4-0x6b],1
  4136eb:	les    edi,FWORD PTR [edi]
  4136ed:	and    eax,0x21895ca
  4136f2:	xor    ecx,0x999cf2ad
  4136f8:	mov    cl,0xe7
  4136fa:	es pop edi
  4136fc:	outs   dx,BYTE PTR ds:[esi]
  4136fd:	xor    BYTE PTR [ecx+0x6e6e8a7a],bl
  413703:	xchg   ebp,eax
  413704:	mov    ch,0x1c
  413706:	inc    edi
  413707:	imul   ecx,DWORD PTR ds:0xb166c6a9,0xed9f5128
  413711:	and    eax,0xa74b0fe4
  413716:	or     al,0x3b
  413718:	fcmovbe st,st(0)
  41371a:	das    
  41371b:	aas    
  41371c:	test   al,0x6c
  41371e:	aas    
  41371f:	in     eax,dx
  413720:	fidivr DWORD PTR [edx-0x41]
  413723:	repz dec ebx
  413725:	lods   al,BYTE PTR ds:[esi]
  413726:	fistp  QWORD PTR [ebx+0x3]
  413729:	ret    
  41372a:	jmp    0x77df2d4f
  41372f:	adc    DWORD PTR [ebx+0x39],0xffffffb6
  413733:	dec    esp
  413734:	or     eax,0x5b3474fd
  413739:	pop    esp
  41373a:	lahf   
  41373b:	(bad)  
  41373c:	repnz sbb edx,esp
  41373f:	and    al,0x74
  413741:	jne    0x41376d
  413743:	imul   ecx,DWORD PTR [ebx],0x1745588
  413749:	adc    eax,0x67febbb
  41374f:	ret    
  413750:	mov    eax,ds:0xb1e502c8
  413755:	cmp    esi,ecx
  413757:	enter  0xf222,0x38
  41375b:	adc    DWORD PTR [ebx+eiz*1+0x4d],0xffffffdb
  413760:	imul   esp,ecx,0x45fb3d68
  413766:	push   es
  413767:	jmp    0x4137e6
  413769:	jo     0x41378e
  41376b:	mov    bh,0xc7
  41376d:	jmp    0x413723
  41376f:	jmp    0x413700
  413771:	xchg   edi,eax
  413772:	mov    eax,0xa3935da
  413777:	ret    
  413778:	sub    eax,0x395b5c87
  41377d:	adc    eax,0x2a36aaea
  413782:	ds fincstp 
  413785:	push   0xffffffb8
  413787:	ins    BYTE PTR es:[edi],dx
  413788:	mov    ecx,0xc5cf6925
  41378d:	jmp    0x41374f
  41378f:	and    eax,edi
  413791:	xchg   esi,eax
  413792:	pop    ecx
  413793:	test   BYTE PTR [ebp-0x2c9e7e91],bh
  413799:	aas    
  41379a:	lahf   
  41379b:	(bad)  
  41379c:	sbb    DWORD PTR [esi-0x1883de7],edx
  4137a2:	sbb    DWORD PTR [edi+0x3d240c0b],0xffffff93
  4137a9:	in     eax,0x1a
  4137ab:	call   0xa9d9:0x5bb3806d
  4137b2:	and    bl,BYTE PTR [esp+ecx*8-0x2e11f4b7]
  4137b9:	push   ebp
  4137ba:	popa   
  4137bb:	imul   ebx,DWORD PTR [esi],0xffffffb9
  4137be:	jno    0x413810
  4137c0:	dec    ecx
  4137c1:	gs (bad) 
  4137c3:	pop    ebp
  4137c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c5:	sbb    DWORD PTR [esi+edi*2+0x2e677158],ebx
  4137cc:	xlat   BYTE PTR ds:[ebx]
  4137cd:	adc    DWORD PTR [eax-0x54],esp
  4137d0:	not    cl
  4137d2:	mov    ebx,0xb11cbbdb
  4137d7:	sub    ch,BYTE PTR [edi-0x4e751a0]
  4137dd:	mov    edi,0x56801afc
  4137e2:	add    BYTE PTR [ecx],0x21
  4137e5:	cld    
  4137e6:	or     dh,ch
  4137e8:	jmp    0x3a69:0x3a4f1562
  4137ef:	or     edx,ebx
  4137f1:	push   esp
  4137f2:	ja     0x4137d0
  4137f4:	or     edx,DWORD PTR [ecx-0x8a40b21]
  4137fa:	and    eax,0x3f83b2d9
  4137ff:	inc    edx
  413800:	out    0x49,eax
  413802:	mov    esp,0x390d4752
  413807:	cs jp  0x41386a
  41380a:	lahf   
  41380b:	bound  eax,QWORD PTR [ebx+0x7dfaea15]
  413811:	or     DWORD PTR [ecx],edi
  413813:	jp     0x41380c
  413815:	in     al,dx
  413816:	and    BYTE PTR [ecx+0x63],ch
  413819:	cs jecxz 0x41384f
  41381c:	mov    ds:0xef50de99,al
  413821:	jno    0x4137ab
  413823:	mov    dl,0x3
  413825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413826:	adc    dl,BYTE PTR [edx+edx*4-0x34]
  41382a:	clc    
  41382b:	inc    DWORD PTR [ebp+0x5c]
  41382e:	ror    ebx,0xb9
  413831:	repz sbb al,0x14
  413834:	jge    0x413881
  413836:	(bad)  
  413837:	xchg   ecx,eax
  413838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413839:	es into 
  41383b:	(bad)  
  41383d:	push   esp
  41383e:	fwait
  41383f:	mov    edx,0x549d3761
  413844:	lods   al,BYTE PTR ds:[esi]
  413845:	rol    BYTE PTR [eax-0xf4fea58],1
  41384b:	fst    DWORD PTR [edx]
  41384d:	fld    QWORD PTR [ecx+0xc]
  413850:	cmp    BYTE PTR [esi],al
  413852:	push   cs
  413853:	adc    BYTE PTR [ebx+0x17],dh
  413856:	or     al,0x69
  413858:	pop    ss
  413859:	(bad)  
  41385a:	cwde   
  41385b:	mov    edi,0x127f7389
  413860:	inc    ebx
  413861:	xchg   edx,eax
  413862:	xchg   edi,eax
  413863:	imul   eax,DWORD PTR [edi],0x34251cda
  413869:	adc    eax,0x97d9cedd
  41386e:	pop    es
  41386f:	rcl    DWORD PTR [edx+0x54],1
  413872:	xchg   edx,eax
  413873:	stos   BYTE PTR es:[edi],al
  413874:	fnstsw WORD PTR [eax+0x5d6abf91]
  41387a:	jmp    0x41383b
  41387c:	std    
  41387d:	stos   BYTE PTR es:[edi],al
  41387e:	adc    DWORD PTR [edx],eax
  413880:	sbb    ah,BYTE PTR [eax]
  413882:	test   al,0x46
  413884:	cmp    al,0x21
  413886:	test   DWORD PTR [ecx-0x6c],edx
  413889:	enter  0xb94c,0x25
  41388d:	mov    ds:0x5eb79f50,eax
  413892:	scas   al,BYTE PTR es:[edi]
  413893:	jne    0x41381c
  413895:	sbb    DWORD PTR [eax-0x53],ebx
  413898:	mov    WORD PTR [edi],ds
  41389a:	cs fsubp st(4),st
  41389d:	mov    edx,0xf4acf47a
  4138a2:	pop    edi
  4138a3:	rol    DWORD PTR [eax],1
  4138a5:	mov    bh,0xc0
  4138a7:	add    ecx,eax
  4138a9:	(bad)  
  4138aa:	fadd   DWORD PTR [ebx-0x1a5c2556]
  4138b0:	dec    esp
  4138b1:	mov    ch,0x94
  4138b3:	repz rcr BYTE PTR [edx],1
  4138b6:	es pop es
  4138b8:	ja     0x4138c2
  4138ba:	aad    0x7
  4138bc:	ret    0x3b0
  4138bf:	stc    
  4138c0:	jg     0x4138ea
  4138c2:	stos   DWORD PTR es:[edi],eax
  4138c3:	xor    eax,0x68e7d69f
  4138c8:	add    ebx,DWORD PTR [esi]
  4138ca:	mov    dh,0x17
  4138cc:	dec    esi
  4138cd:	mov    eax,ds:0x35d73c35
  4138d2:	jb     0x413859
  4138d4:	or     edi,DWORD PTR ds:0xe3dbcfcd
  4138da:	mov    ebx,0xea2e7960
  4138df:	ins    DWORD PTR es:[edi],dx
  4138e0:	ret    
  4138e1:	repnz mov bh,ch
  4138e4:	add    al,0xc7
  4138e6:	lods   eax,DWORD PTR ds:[esi]
  4138e7:	js     0x4138f7
  4138e9:	mov    al,ds:0xc8843722
  4138ee:	int    0xbb
  4138f0:	or     al,0xb
  4138f2:	cmp    dl,cl
  4138f4:	data16 idiv bh
  4138f7:	retf   0xf4ee
  4138fa:	in     al,0xe0
  4138fc:	pop    edi
  4138fd:	icebp  
  4138fe:	loop   0x4138ae
  413900:	loope  0x413974
  413902:	fidiv  WORD PTR [ecx]
  413904:	mov    eax,0x299fad10
  413909:	mov    bl,0xf8
  41390b:	jl     0x4138b8
  41390d:	mov    edx,0x2534e6be
  413912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413913:	mov    bl,BYTE PTR [eax]
  413915:	lds    ecx,FWORD PTR [eax-0x72]
  413918:	xlat   BYTE PTR ds:[ebx]
  413919:	pop    esi
  41391a:	xor    eax,0x5bf339df
  41391f:	rcl    dh,1
  413921:	cmc    
  413922:	fiadd  DWORD PTR [edi-0x64]
  413925:	push   edx
  413926:	in     eax,0xca
  413928:	fwait
  413929:	inc    eax
  41392a:	loop   0x4138f2
  41392c:	ins    DWORD PTR es:[edi],dx
  41392d:	inc    DWORD PTR [ebx+0x2b]
  413930:	(bad)  
  413931:	xchg   ebx,eax
  413932:	sbb    esi,ebx
  413934:	mov    al,0x98
  413936:	or     esi,ebx
  413938:	jbe    0x4139b7
  41393a:	or     al,0x33
  41393c:	pop    ds
  41393d:	mov    ds:0x9c8086db,al
  413942:	les    ebp,FWORD PTR [esi+0x6]
  413945:	call   0x3e2e2c01
  41394a:	das    
  41394b:	repnz imul eax,DWORD PTR [ecx],0xc245459b
  413952:	jne    0x4139b7
  413954:	test   BYTE PTR [eax],bl
  413956:	mov    eax,DWORD PTR [ebx+0x77dd1158]
  41395c:	mov    DWORD PTR [ecx-0x1b],edi
  41395f:	xchg   ebp,eax
  413960:	push   esi
  413961:	jne    0x4139b2
  413963:	dec    ecx
  413964:	loopne 0x4139de
  413966:	cmp    esp,ecx
  413968:	das    
  413969:	addr16 in eax,dx
  41396b:	jbe    0x41394a
  41396d:	adc    al,0x69
  41396f:	fsubrp st(5),st
  413971:	into   
  413972:	mov    bl,0x76
  413974:	cmp    al,0x63
  413976:	add    al,0xe9
  413978:	bound  edx,QWORD PTR [ebx+eax*1]
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	mov    ds:0xef1b7606,al
  413981:	mov    bh,0x81
  413983:	or     al,0xc5
  413985:	dec    ebp
  413986:	pop    edi
  413987:	ss cwde 
  413989:	cs dec eax
  41398b:	dec    ebp
  41398c:	push   esi
  41398d:	repz test esi,0x34348cd3
  413994:	lock mov dl,0xf4
  413997:	pop    edx
  413998:	xchg   ecx,eax
  413999:	shr    BYTE PTR [edx],cl
  41399b:	stc    
  41399c:	rol    dl,cl
  41399e:	sbb    al,0xc5
  4139a0:	(bad)  
  4139a1:	lods   al,BYTE PTR ds:[esi]
  4139a2:	popa   
  4139a3:	sub    eax,0xfbf02351
  4139a8:	clc    
  4139a9:	mov    dh,ah
  4139ab:	hlt    
  4139ac:	dec    ecx
  4139ad:	ret    0x79ff
  4139b0:	xor    eax,0x50587d29
  4139b5:	(bad)  
  4139b6:	jne    0x413958
  4139b8:	pop    ss
  4139b9:	fbstp  TBYTE PTR [eax+0x2d]
  4139bc:	fstp   QWORD PTR [ebx-0x3ad029ab]
  4139c2:	pop    ds
  4139c3:	sub    eax,DWORD PTR [edi]
  4139c5:	jg     0x4139a1
  4139c7:	xchg   edx,eax
  4139c8:	cdq    
  4139c9:	sub    edx,DWORD PTR [edx+0x40]
  4139cc:	psubw  mm7,QWORD PTR [edi+0x4e2525cb]
  4139d3:	fadd   QWORD PTR [ecx]
  4139d5:	pop    ebx
  4139d6:	xchg   esi,eax
  4139d7:	mov    edi,DWORD PTR [ecx-0xb]
  4139da:	mov    edx,0x9d0f19d8
  4139df:	(bad)  
  4139e1:	aas    
  4139e2:	mov    WORD PTR [ebp+edx*4-0x58],fs
  4139e6:	(bad)  
  4139e7:	jmp    0x6aea5c3f
  4139ec:	scas   eax,DWORD PTR es:[edi]
  4139ed:	int3   
  4139ee:	mov    edx,0x86abe095
  4139f3:	or     BYTE PTR [ecx-0x8468710],ch
  4139f9:	fwait
  4139fa:	pop    esp
  4139fb:	jmp    0x4ac2:0x52018c1c
  413a02:	pop    ebp
  413a03:	jbe    0x413a3c
  413a05:	jmp    0x4139fc
  413a07:	pop    ebp
  413a08:	icebp  
  413a09:	lock jae 0x413a58
  413a0c:	(bad)  
  413a0d:	sub    eax,0xc527b5b5
  413a12:	scas   eax,DWORD PTR es:[edi]
  413a13:	sub    eax,0x9de04556
  413a18:	adc    al,0x8
  413a1a:	jo     0x4139dd
  413a1c:	sub    cl,bl
  413a1e:	mov    ebp,0xb77dd7da
  413a23:	lahf   
  413a24:	vpavgw ymm4,ymm4,YMMWORD PTR [esi]
  413a28:	cdq    
  413a29:	sbb    BYTE PTR [edx-0x68fffa4a],ch
  413a2f:	test   DWORD PTR [ebx-0x5b],esi
  413a32:	adc    al,0xca
  413a34:	xor    al,BYTE PTR [esp+esi*2]
  413a37:	sar    DWORD PTR [eax],0x74
  413a3a:	mov    esp,0x24b4e94d
  413a3f:	inc    ebp
  413a40:	and    BYTE PTR [ebp+0x69],bh
  413a43:	mov    eax,ds:0x92bc94ce
  413a48:	rol    DWORD PTR [esi+0x1d],cl
  413a4b:	pop    ebx
  413a4c:	hlt    
  413a4d:	test   eax,0x5e4663cd
  413a52:	aas    
  413a53:	retf   0xb94c
  413a56:	mov    bl,0x3a
  413a58:	push   esp
  413a59:	icebp  
  413a5a:	add    esi,DWORD PTR [ecx+esi*1+0x41]
  413a5e:	sbb    BYTE PTR [ecx-0x503dafb0],dl
  413a64:	je     0x413a60
  413a66:	mov    fs,WORD PTR [ecx+0x23]
  413a69:	sub    al,BYTE PTR [esi+0x69]
  413a6c:	xchg   esi,eax
  413a6d:	sub    dh,BYTE PTR [edi]
  413a6f:	pop    ebx
  413a70:	push   edx
  413a71:	mov    dh,0x54
  413a73:	fs mov bl,0xba
  413a76:	int3   
  413a77:	jmp    0xe1229ac4
  413a7c:	nop
  413a7d:	or     eax,0x10fb05a4
  413a82:	hlt    
  413a83:	push   ebp
  413a84:	enter  0xc607,0x34
  413a88:	fist   DWORD PTR [esi-0x51]
  413a8b:	xor    eax,0x97897d4
  413a90:	test   DWORD PTR [eax],esi
  413a92:	jmp    0x413a6c
  413a94:	jmp    0x500d:0x28a3660c
  413a9b:	xchg   edx,eax
  413a9c:	imul   ecx,DWORD PTR [ecx+0x3],0x3ffd7fe7
  413aa3:	and    BYTE PTR [eax+eiz*8+0x73],0x5
  413aa8:	add    DWORD PTR [edx-0x10],0xdec43d0a
  413aaf:	inc    ecx
  413ab0:	pusha  
  413ab1:	inc    esi
  413ab2:	in     al,dx
  413ab3:	shl    edx,0x95
  413ab6:	inc    ebp
  413ab7:	dec    edi
  413ab8:	push   edi
  413ab9:	push   ecx
  413aba:	std    
  413abb:	xchg   ebp,eax
  413abc:	in     al,dx
  413abd:	adc    eax,0xbacb5f2d
  413ac2:	lea    ebp,[ebx+0x774a2a22]
  413ac8:	call   0x4f1d5269
  413acd:	ins    DWORD PTR es:[edi],dx
  413ace:	mov    ch,0x1
  413ad0:	mov    eax,ds:0x926a8540
  413ad5:	das    
  413ad6:	mov    eax,0xc84d820c
  413adb:	add    esp,DWORD PTR [edi]
  413add:	jb     0x413b2a
  413adf:	(bad)  
  413ae1:	xlat   BYTE PTR ds:[ebx]
  413ae2:	fild   QWORD PTR [edx]
  413ae4:	inc    esp
  413ae5:	adc    eax,0x698520ff
  413aea:	xor    DWORD PTR [edi-0x50],eax
  413aed:	jmp    0x91c4:0xd3e44b01
  413af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af5:	loopne 0x413b28
  413af7:	(bad)  
  413af8:	fimul  WORD PTR [edx]
  413afa:	outs   dx,BYTE PTR ds:[esi]
  413afb:	and    al,0x2c
  413afd:	dec    edx
  413afe:	test   BYTE PTR [esi+0x33],dl
  413b01:	mov    WORD PTR [ebx+0x62452ef6],?
  413b07:	pop    esi
  413b08:	jbe    0x413b4a
  413b0a:	ins    DWORD PTR es:[edi],dx
  413b0b:	lods   eax,DWORD PTR ds:[esi]
  413b0c:	sub    al,0xcb
  413b0e:	aam    0x67
  413b10:	(bad)  [esp+ecx*2]
  413b13:	sahf   
  413b14:	mov    dl,0x33
  413b16:	rcr    BYTE PTR [ebx+0x2e],cl
  413b19:	pop    edi
  413b1a:	(bad)  
  413b1c:	pusha  
  413b1d:	add    esi,DWORD PTR [ebx+0x5161835d]
  413b23:	xor    DWORD PTR [ecx],ebp
  413b25:	cld    
  413b26:	test   al,0xa2
  413b28:	mov    edi,0x16ae5cd3
  413b2d:	lods   eax,DWORD PTR ds:[esi]
  413b2e:	dec    eax
  413b2f:	and    DWORD PTR [esi],0xfffffff4
  413b32:	dec    ebx
  413b33:	aam    0x18
  413b35:	fisubr DWORD PTR [ecx]
  413b37:	add    eax,0x29a3afa9
  413b3c:	stos   BYTE PTR es:[edi],al
  413b3d:	sbb    bl,dh
  413b3f:	data16 xor BYTE PTR [ecx+0x5e],dl
  413b43:	jmp    0xc522fdc2
  413b48:	scas   al,BYTE PTR es:[edi]
  413b49:	dec    ebx
  413b4a:	inc    eax
  413b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b4c:	cmp    dl,BYTE PTR [edi-0x3c]
  413b4f:	add    eax,0x2789038d
  413b54:	lods   al,BYTE PTR ds:[esi]
  413b55:	cs dec eax
  413b57:	fmul   st(4),st
  413b59:	scas   eax,DWORD PTR es:[edi]
  413b5a:	mov    eax,DWORD PTR [edx+0x56]
  413b5d:	arpl   WORD PTR [edi+edx*4-0x516f028c],ax
  413b64:	hlt    
  413b65:	ret    
  413b66:	outs   dx,DWORD PTR ds:[esi]
  413b67:	mov    al,0x52
  413b69:	(bad)  
  413b6a:	or     eax,0x8275f414
  413b6f:	sub    BYTE PTR [ebp-0x70],al
  413b72:	mov    ch,0xb
  413b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b75:	ins    BYTE PTR es:[edi],dx
  413b76:	dec    eax
  413b77:	sbb    cl,BYTE PTR [ebx]
  413b79:	and    eax,0xa66a3ddb
  413b7e:	xchg   DWORD PTR [ecx],ebp
  413b80:	push   ebp
  413b81:	loop   0x413b16
  413b83:	inc    ebp
  413b84:	shl    DWORD PTR [edx-0x6d],1
  413b87:	mov    ebp,0xdf487862
  413b8c:	push   0xe18c1051
  413b91:	arpl   WORD PTR [ecx-0x4f],bp
  413b94:	add    eax,0x10f0d517
  413b99:	sub    esp,DWORD PTR [ecx-0x215c2e1d]
  413b9f:	jmp    0x413baf
  413ba1:	aad    0x7e
  413ba3:	push   esi
  413ba4:	mov    ds:0xaea0f20,eax
  413ba9:	cmp    ebp,DWORD PTR [esi+0x14]
  413bac:	jbe    0x413b69
  413bae:	lods   al,BYTE PTR ds:[esi]
  413baf:	add    ah,bh
  413bb1:	ret    0x748d
  413bb4:	xchg   BYTE PTR [ecx+0x43],bh
  413bb7:	mov    ds:0xc6d4c4ef,eax
  413bbc:	int    0x2f
  413bbe:	leave  
  413bbf:	fwait
  413bc0:	mov    eax,ds:0x57a9d127
  413bc5:	shl    BYTE PTR ds:0x9fa2ddc4,0x84
  413bcc:	push   ss
  413bcd:	add    ebp,ebp
  413bcf:	shl    dl,cl
  413bd1:	or     BYTE PTR [edi+0x16],bh
  413bd4:	loopne 0x413bc2
  413bd6:	cmp    al,0x5f
  413bd8:	dec    edx
  413bda:	cmp    BYTE PTR ss:[esi-0x27],bl
  413bde:	imul   ecx,DWORD PTR [esi-0x31],0x333fa653
  413be5:	repz (bad) 
  413be9:	pushf  
  413bea:	jae    0x413bfa
  413bec:	add    bl,BYTE PTR [eax+0x214a29ea]
  413bf2:	iret   
  413bf3:	fnstenv ds:0x61ab7d60
  413bf9:	jle    0x413ba7
  413bfb:	cmp    eax,0x5cf52b45
  413c00:	xchg   ebx,eax
  413c01:	aas    
  413c02:	inc    ebp
  413c03:	jg     0x413b91
  413c05:	mov    edx,0x2e4b383d
  413c0a:	ja     0x413c69
  413c0c:	mov    BYTE PTR [edx+0x15],0x2e
  413c10:	and    ecx,DWORD PTR [edx]
  413c12:	jmp    0xafbe:0x7f90ae97
  413c19:	jecxz  0x413bb0
  413c1b:	je     0x413bba
  413c1d:	ret    0xa234
  413c20:	scas   al,BYTE PTR es:[edi]
  413c21:	jb     0x413c10
  413c23:	ret    0xb7c1
  413c26:	mov    edx,0xb1914260
  413c2b:	jns    0x413c3b
  413c2d:	sub    DWORD PTR [ecx],esp
  413c2f:	int    0x55
  413c31:	jecxz  0x413c48
  413c33:	or     eax,0xc17fa8a0
  413c38:	lods   al,BYTE PTR ds:[esi]
  413c39:	cld    
  413c3a:	(bad)  
  413c3b:	lahf   
  413c3c:	stos   BYTE PTR es:[edi],al
  413c3d:	data16 jb 0x413bcc
  413c40:	and    al,0x64
  413c42:	scas   al,BYTE PTR es:[edi]
  413c43:	es inc ebx
  413c45:	inc    ecx
  413c46:	shl    BYTE PTR [esi],1
  413c48:	push   eax
  413c49:	inc    edx
  413c4a:	xchg   ecx,eax
  413c4b:	mov    ebx,0xda2d3a0c
  413c50:	push   cs
  413c51:	and    ebp,DWORD PTR [ecx]
  413c53:	in     eax,0x61
  413c55:	test   BYTE PTR [esi+0x627165fa],dl
  413c5b:	jmp    0x413bec
  413c5d:	test   al,0x57
  413c5f:	push   cs
  413c60:	test   BYTE PTR [ebp-0x6dacfde3],dh
  413c66:	std    
  413c67:	aaa    
  413c68:	ja     0x413cc0
  413c6a:	inc    esi
  413c6b:	aad    0x6c
  413c6d:	das    
  413c6e:	in     al,dx
  413c6f:	lahf   
  413c70:	imul   esi,DWORD PTR [edi+0x1d],0xffffff8d
  413c74:	and    DWORD PTR [ebp+0x2287e299],esp
  413c7a:	arpl   WORD PTR [ebx+0x5c8f1db5],bp
  413c80:	fadd   DWORD PTR [eax+0x46]
  413c83:	xchg   edx,eax
  413c84:	mov    ebx,0x7d25fc1b
  413c89:	pop    esp
  413c8a:	xchg   bl,dl
  413c8c:	fstp   TBYTE PTR [eax+0x7df5986]
  413c92:	vmulps xmm5,xmm6,xmm2
  413c96:	jmp    0xe727:0x5e07c99f
  413c9d:	mov    BYTE PTR [ecx+0x20b7fc4f],ah
  413ca3:	rcr    BYTE PTR [edx+0x7734795c],cl
  413ca9:	cmc    
  413caa:	mov    esi,0xe361b454
  413caf:	movzx  esp,BYTE PTR [ebp-0x62a37524]
  413cb6:	lods   al,BYTE PTR ds:[esi]
  413cb7:	mov    edi,0x564bfba3
  413cbc:	ret    0xb356
  413cbf:	js     0x413c5a
  413cc1:	ss cli 
  413cc3:	inc    eax
  413cc4:	cmp    al,0x47
  413cc6:	push   ebp
  413cc7:	add    al,0xec
  413cc9:	jmp    0x413c83
  413ccb:	pop    ebx
  413ccc:	add    cl,cl
  413cce:	jge    0xcb9ab7b0
  413cd4:	inc    ebx
  413cd5:	add    esp,edi
  413cd7:	sub    esi,DWORD PTR [eax-0x1672a2b6]
  413cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cde:	mov    eax,ds:0x546d128b
  413ce3:	test   ebp,edx
  413ce5:	mov    eax,eax
  413ce7:	aam    0xf6
  413ce9:	retf   
  413cea:	outs   dx,BYTE PTR ds:[esi]
  413ceb:	xlat   BYTE PTR ds:[ebx]
  413cec:	neg    DWORD PTR [esi]
  413cee:	jno    0x413d32
  413cf0:	out    dx,eax
  413cf1:	fcomi  st,st(4)
  413cf3:	adc    bh,BYTE PTR [edi+eax*2]
  413cf6:	pop    ebp
  413cf7:	mov    ebx,0x586344c
  413cfc:	push   ebx
  413cfd:	ret    0x2e1f
  413d00:	dec    edx
  413d01:	jo     0x413cb6
  413d03:	add    esi,DWORD PTR [ebp+0x7c]
  413d06:	daa    
  413d07:	fdiv   QWORD PTR [ebx-0x62]
  413d0a:	rcl    DWORD PTR [eax+0x17],cl
  413d0d:	jnp    0x413d4a
  413d0f:	jg     0x413c9e
  413d11:	loop   0x413cee
  413d13:	mov    edi,0x6b0f96c5
  413d18:	cmc    
  413d19:	mov    edx,0xad54903e
  413d1e:	sahf   
  413d1f:	adc    ch,BYTE PTR [esi-0x6d641caa]
  413d25:	repnz push 0x6f
  413d28:	add    BYTE PTR [ebx],dh
  413d2a:	xlat   BYTE PTR ds:[ebx]
  413d2b:	retf   0xe168
  413d2e:	mov    ecx,0xd56842ae
  413d33:	(bad)  
  413d35:	shl    esi,1
  413d37:	mov    al,0xfb
  413d39:	daa    
  413d3a:	xchg   ecx,eax
  413d3b:	push   edi
  413d3c:	mov    esp,0xe09139f8
  413d41:	or     ebx,esp
  413d43:	into   
  413d44:	js     0x413cf1
  413d46:	cmp    esi,esi
  413d48:	xor    bh,al
  413d4a:	pop    edx
  413d4b:	add    ebp,DWORD PTR [edx+0x36]
  413d4e:	repz bound edi,QWORD PTR [esi-0x16]
  413d52:	shl    DWORD PTR [ecx-0xc],cl
  413d55:	mov    edx,0xbb1ff9c2
  413d5a:	repz int 0xe1
  413d5d:	out    0x1f,eax
  413d5f:	aad    0x18
  413d61:	mov    DWORD PTR [ecx+0x47],ebp
  413d64:	jge    0x413d64
  413d66:	in     al,0xc
  413d68:	mov    ds:0x8ffbf244,al
  413d6d:	shr    BYTE PTR [ebp-0x3],cl
  413d70:	aaa    
  413d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d72:	ds lock jmp 0x8a4:0x81d45d00
  413d7b:	xlat   BYTE PTR ds:[ebx]
  413d7c:	call   0x35b8f6a8
  413d81:	inc    ecx
  413d82:	or     esi,DWORD PTR [ebp+eax*2+0x1c124f1f]
  413d89:	(bad)  
  413d8a:	hlt    
  413d8b:	imul   edx,DWORD PTR [eax-0x24],0x1f8a38a2
  413d92:	mov    BYTE PTR [eax],bh
  413d94:	push   ebp
  413d95:	retf   0x9b5d
  413d98:	xchg   ebp,eax
  413d99:	mov    WORD PTR [ebp-0x2916197b],ss
  413d9f:	out    0xc3,eax
  413da1:	add    al,0x1c
  413da3:	ret    0x279e
  413da6:	mov    dh,0x94
  413da8:	mov    ?,eax
  413daa:	or     eax,0x7529001b
  413daf:	lds    ecx,FWORD PTR [edi]
  413db1:	mov    bl,0xa5
  413db3:	imul   esp,DWORD PTR [ebp-0x32f3522f],0xfb5d3778
  413dbd:	pop    esp
  413dbe:	or     al,0x6a
  413dc0:	push   edi
  413dc1:	retf   0x91b2
  413dc4:	adc    ch,BYTE PTR [ebp+ebx*1-0x52]
  413dc8:	sbb    edx,DWORD PTR [esi+edx*8-0x11162662]
  413dcf:	adc    cl,BYTE PTR ds:0xcf07b5cb
  413dd5:	jmp    0x6791:0x559ca6ce
  413ddc:	inc    ebp
  413ddd:	in     al,0xb1
  413ddf:	cmp    al,BYTE PTR [esi+ebp*2+0x6161bf6a]
  413de6:	mov    al,ds:0x1268dcfe
  413deb:	repnz loope 0x413d73
  413dee:	fst    DWORD PTR [edx-0x522fb51]
  413df4:	push   cs
  413df5:	jecxz  0x413e2d
  413df7:	scas   eax,DWORD PTR es:[edi]
  413df8:	shl    BYTE PTR [ebx+0x47],1
  413dfb:	pop    edi
  413dfc:	push   0x55
  413dfe:	push   ds
  413dff:	xchg   edx,eax
  413e00:	dec    edx
  413e01:	push   esp
  413e02:	xchg   edi,eax
  413e03:	xchg   ebx,eax
  413e04:	gs inc edi
  413e06:	dec    ecx
  413e07:	push   esi
  413e08:	dec    ecx
  413e09:	mov    ecx,DWORD PTR [edx]
  413e0b:	mul    DWORD PTR [esi]
  413e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e0e:	stos   DWORD PTR es:[edi],eax
  413e0f:	test   al,0x1a
  413e11:	std    
  413e12:	iret   
  413e13:	fwait
  413e14:	mul    BYTE PTR [edi+0x677079d1]
  413e1a:	ja     0x413e4d
  413e1c:	ds stc 
  413e1e:	push   0x390f1c44
  413e23:	xchg   esi,eax
  413e24:	or     eax,DWORD PTR [eax+ebx*2-0x8]
  413e28:	and    DWORD PTR [edx],edx
  413e2a:	jnp    0x413e83
  413e2c:	clc    
  413e2d:	sub    eax,0x8f951168
  413e32:	sar    DWORD PTR [eax],cl
  413e34:	stos   BYTE PTR es:[edi],al
  413e35:	mov    ds:0xb8c4c929,al
  413e3a:	scas   al,BYTE PTR es:[edi]
  413e3b:	jbe    0x413e64
  413e3d:	nop
  413e3e:	dec    esp
  413e3f:	pusha  
  413e40:	xor    edx,ecx
  413e42:	dec    ebp
  413e43:	retf   
  413e44:	ret    
  413e45:	sar    ch,0xc6
  413e48:	fadd   DWORD PTR [ebx+0x68340957]
  413e4e:	sub    esi,DWORD PTR [ecx]
  413e50:	outs   dx,DWORD PTR ds:[esi]
  413e51:	pop    edx
  413e52:	not    DWORD PTR [ebx-0x612e68cb]
  413e58:	mov    ebp,DWORD PTR [ebp-0x7]
  413e5b:	add    BYTE PTR [edx+0x7aa65747],cl
  413e61:	inc    esp
  413e62:	xchg   edx,eax
  413e63:	pop    edi
  413e64:	inc    esi
  413e65:	xor    bl,BYTE PTR [edi+0x7cd5613e]
  413e6b:	xchg   dl,bl
  413e6d:	xor    ebp,DWORD PTR ds:0x3b0bc28
  413e73:	test   DWORD PTR [ebp-0x1f],eax
  413e76:	jmp    0x413e16
  413e78:	cmp    BYTE PTR [ecx],dh
  413e7a:	in     eax,dx
  413e7b:	aam    0xe4
  413e7d:	aad    0x50
  413e7f:	xor    al,BYTE PTR [edx+edi*1]
  413e82:	je     0x413e1e
  413e84:	mov    bl,0x4c
  413e86:	mov    DWORD PTR [edi+0x727636a],ecx
  413e8c:	adc    al,0xc4
  413e8e:	jecxz  0x413ed3
  413e90:	aas    
  413e91:	push   ebp
  413e92:	push   0xea7618b9
  413e97:	shr    DWORD PTR [eax+0x68],1
  413e9a:	rcl    DWORD PTR [ebx+0xb],cl
  413e9d:	jmp    0x413ecf
  413e9f:	shl    DWORD PTR [ebp-0xfc8f28c],1
  413ea5:	mov    edx,0x26dcf867
  413eaa:	mov    bl,0xc8
  413eac:	cmp    eax,DWORD PTR [eax+0x7b]
  413eaf:	mov    dl,0x10
  413eb1:	mov    ch,0x3d
  413eb3:	(bad)  
  413eb4:	ins    BYTE PTR es:[edi],dx
  413eb5:	les    edx,FWORD PTR [esi+0x7022b82a]
  413ebb:	leave  
  413ebc:	into   
  413ebd:	dec    ebp
  413ebe:	dec    ebx
  413ebf:	mov    ds:0xb470d71e,eax
  413ec4:	test   cl,dh
  413ec6:	outs   dx,BYTE PTR ds:[esi]
  413ec7:	mov    dl,0x33
  413ec9:	das    
  413eca:	xchg   esp,eax
  413ecb:	mov    al,0xf5
  413ecd:	jmp    0x8e46:0x29a54435
  413ed4:	xor    ch,dl
  413ed6:	into   
  413ed7:	mov    eax,ds:0x774e5afa
  413edc:	orps   xmm1,XMMWORD PTR [edi+0x36]
  413ee0:	dec    esi
  413ee1:	inc    ebp
  413ee2:	pop    ss
  413ee3:	jmp    0x189f:0x5f56f92a
  413eea:	dec    esi
  413eeb:	aas    
  413eec:	scas   al,BYTE PTR es:[edi]
  413eed:	push   edi
  413eee:	dec    esp
  413eef:	fisttp QWORD PTR [ebx]
  413ef1:	test   al,0x22
  413ef3:	lods   eax,DWORD PTR ds:[esi]
  413ef4:	or     dh,bh
  413ef6:	inc    edi
  413ef7:	stc    
  413ef8:	(bad)  
  413ef9:	pop    ds
  413efa:	sbb    ecx,ebx
  413efc:	in     eax,0xa9
  413efe:	iret   
  413eff:	(bad)  
  413f00:	xchg   ebp,eax
  413f01:	in     eax,dx
  413f02:	repnz xchg esi,eax
  413f04:	fadd   st,st(3)
  413f06:	ror    bl,0xfa
  413f09:	and    edx,DWORD PTR [edi+0x3f]
  413f0c:	ja     0x413f09
  413f0e:	xlat   BYTE PTR ds:[ebx]
  413f0f:	push   eax
  413f10:	mov    edi,eax
  413f12:	stc    
  413f13:	bound  esi,QWORD PTR [esi+edx*8]
  413f16:	stc    
  413f17:	push   0xfffffffe
  413f19:	push   ecx
  413f1a:	lds    ecx,FWORD PTR [esi-0x1a]
  413f1d:	and    BYTE PTR [esi-0x40],cl
  413f20:	clc    
  413f21:	mov    bh,0x82
  413f23:	arpl   bx,di
  413f25:	xchg   ecx,eax
  413f26:	sbb    ebx,DWORD PTR [ecx+ebp*4+0x1d]
  413f2a:	test   eax,0xddee46ef
  413f2f:	fild   QWORD PTR [edx]
  413f31:	and    dh,BYTE PTR [esp+edi*4+0x46]
  413f35:	pop    ebx
  413f36:	retf   
  413f37:	in     al,0x6e
  413f39:	popf   
  413f3a:	stos   DWORD PTR es:[edi],eax
  413f3b:	lock fwait
  413f3d:	pop    ecx
  413f3e:	pop    edx
  413f3f:	ret    0x233f
  413f42:	gs dec esi
  413f45:	xchg   esp,eax
  413f46:	int3   
  413f47:	xor    esp,DWORD PTR [esi-0x6456ddb9]
  413f4d:	aam    0x91
  413f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f50:	pop    edx
  413f51:	mov    bl,0x91
  413f53:	imul   edi,DWORD PTR [esi],0x6afbb5de
  413f59:	outs   dx,DWORD PTR ds:[esi]
  413f5a:	imul   ebp,DWORD PTR gs:[edi+0x25],0x2b
  413f5f:	and    eax,0x77dd92cb
  413f64:	sbb    DWORD PTR [edx+0x2],esi
  413f67:	sub    DWORD PTR [ebp+edx*4-0x72],0x71
  413f6c:	sbb    BYTE PTR [eax+0x67],dl
  413f6f:	xor    edx,eax
  413f71:	xor    ebx,eax
  413f73:	xor    DWORD PTR ds:0x42a00c,0x42800c
  413f7d:	sub    edx,ebx
  413f7f:	mov    DWORD PTR ds:0x42a010,0x4d7f
  413f89:	sub    edx,esi
  413f8b:	or     ebx,0x6e50
  413f91:	xor    edx,eax
  413f93:	mov    DWORD PTR ds:0x428008,0x2a34
  413f9d:	mov    DWORD PTR [ebp+0x8],edx
  413fa0:	mov    edx,DWORD PTR [ebp+0x8]
  413fa3:	mov    ebx,DWORD PTR [ebp-0x58]
  413fa6:	add    edx,0x5708f8
  413fac:	or     DWORD PTR ds:0x42b008,0x42b014
  413fb6:	imul   edx,ebx
  413fb9:	and    DWORD PTR ds:0x42c000,0x0
  413fc3:	jmp    0x413fd5
  413fc8:	mov    ebx,DWORD PTR ds:0x42c000
  413fce:	inc    ebx
  413fcf:	mov    DWORD PTR ds:0x42c000,ebx
  413fd5:	cmp    DWORD PTR ds:0x42c000,0x1c
  413fdc:	jae    0x414018
  413fe2:	cmp    DWORD PTR ds:0x42c000,0x1d
  413fe9:	jne    0x41400d
  413fef:	push   DWORD PTR [ebp-0x10]
  413ff2:	push   0x42b004
  413ff7:	push   0x1feb
  413ffc:	push   DWORD PTR [ebp-0x28]
  413fff:	push   DWORD PTR [ebp-0x28]
  414002:	push   0x72a4
  414007:	call   DWORD PTR ds:0x42dc97
  41400d:	jmp    0x413fc8
  414012:	adc    ebx,0x7a0c
  414018:	mov    DWORD PTR [ebp-0x58],edx
  41401b:	and    DWORD PTR ds:0x428000,0x0
  414025:	jmp    0x414037
  41402a:	mov    edx,DWORD PTR ds:0x428000
  414030:	inc    edx
  414031:	mov    DWORD PTR ds:0x428000,edx
  414037:	cmp    DWORD PTR ds:0x428000,0x19
  41403e:	jae    0x414083
  414044:	cmp    DWORD PTR ds:0x428000,0x4
  41404b:	jne    0x414057
  414051:	call   DWORD PTR ds:0x42dc9b
  414057:	cmp    DWORD PTR ds:0x428000,0x3
  41405e:	jne    0x414071
  414064:	mov    edx,DWORD PTR ds:0x428000
  41406a:	inc    edx
  41406b:	mov    DWORD PTR ds:0x428000,edx
  414071:	jmp    0x41402a
  414076:	movzx  edx,BYTE PTR ds:0x42801c
  41407d:	or     DWORD PTR ds:0x42b008,edx
  414083:	mov    edx,DWORD PTR [ebp+0x8]
  414086:	mov    DWORD PTR ds:0x428004,0x6b93
  414090:	mov    ebx,DWORD PTR [ebp-0x54]
  414093:	add    DWORD PTR ds:0x42b00c,0x428000
  41409d:	add    edx,0x64f8da
  4140a3:	xor    DWORD PTR ds:0x42a004,0x45d1
  4140ad:	or     edx,ebx
  4140af:	mov    DWORD PTR [ebp-0x54],edx
  4140b2:	not    ebx
  4140b4:	mov    edx,DWORD PTR [ebp+0x8]
  4140b7:	mov    ebx,DWORD PTR [ebp-0x50]
  4140ba:	add    edx,ecx
  4140bc:	xor    edx,ebx
  4140be:	adc    DWORD PTR ds:0x42c008,0x7f53
  4140c8:	mov    DWORD PTR [ebp-0x50],edx
  4140cb:	mov    edx,DWORD PTR [ebp+0x8]
  4140ce:	not    ebx
  4140d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4140d3:	sub    DWORD PTR ds:0x42901c,0x30e3
  4140dd:	add    edx,edi
  4140df:	sub    DWORD PTR ds:0x42c01c,0x42c000
  4140e9:	and    edx,ebx
  4140eb:	sub    DWORD PTR ds:0x42a018,0x3308
  4140f5:	mov    DWORD PTR [ebp-0x4c],edx
  4140f8:	and    DWORD PTR ds:0x42b018,0x0
  414102:	jmp    0x414114
  414107:	mov    ebx,DWORD PTR ds:0x42b018
  41410d:	inc    ebx
  41410e:	mov    DWORD PTR ds:0x42b018,ebx
  414114:	cmp    DWORD PTR ds:0x42b018,0x1c
  41411b:	jae    0x414160
  414121:	cmp    DWORD PTR ds:0x42b018,0x9
  414128:	jne    0x41413f
  41412e:	push   DWORD PTR [ebp-0x1c]
  414131:	push   0x428028
  414136:	push   DWORD PTR [ebp-0x20]
  414139:	call   DWORD PTR ds:0x42dc9f
  41413f:	cmp    DWORD PTR ds:0x42b018,0x8
  414146:	jne    0x41415b
  41414c:	xor    ebx,ebx
  41414e:	add    ebx,DWORD PTR ds:0x42b018
  414154:	inc    ebx
  414155:	mov    DWORD PTR ds:0x42b018,ebx
  41415b:	jmp    0x414107
  414160:	mov    edx,DWORD PTR [ebp+0x8]
  414163:	mov    ebx,DWORD PTR [ebp-0x48]
  414166:	mov    DWORD PTR ds:0x428008,0x1eac
  414170:	lea    edx,[ebx+edx*1+0x241fc1f]
  414177:	and    DWORD PTR ds:0x42800c,0x77ed
  414181:	mov    DWORD PTR [ebp-0x48],edx
  414184:	mov    edx,DWORD PTR [ebp+0x8]
  414187:	mov    ebx,0xfa5e15e2
  41418c:	sub    ebx,edx
  41418e:	add    ebx,DWORD PTR [ebp-0x44]
  414191:	sub    DWORD PTR ds:0x429010,0x32d9
  41419b:	mov    DWORD PTR [ebp-0x44],ebx
  41419e:	mov    edx,DWORD PTR [ebp+0x8]
  4141a1:	or     DWORD PTR ds:0x428000,0x42a018
  4141ab:	xor    edx,eax
  4141ad:	add    edx,esi
  4141af:	mov    DWORD PTR ds:0x42c004,0x438b
  4141b9:	jne    0x411baa
  4141bf:	mov    DWORD PTR ds:0x42b008,0x3945
  4141c9:	jmp    0x4145ae
  4141ce:	mov    edx,DWORD PTR [ebp-0xc]
  4141d1:	sub    edx,esi
  4141d3:	and    DWORD PTR ds:0x428004,0x0
  4141dd:	jmp    0x4141ef
  4141e2:	mov    ebx,DWORD PTR ds:0x428004
  4141e8:	inc    ebx
  4141e9:	mov    DWORD PTR ds:0x428004,ebx
  4141ef:	cmp    DWORD PTR ds:0x428004,0x10
  4141f6:	jae    0x414243
  4141fc:	cmp    DWORD PTR ds:0x428004,0x9
  414203:	jne    0x41421e
  414209:	push   0x42d127
  41420e:	push   0x42d000
  414213:	push   0x400000
  414218:	call   DWORD PTR ds:0x42dca7
  41421e:	cmp    DWORD PTR ds:0x428004,0x8
  414225:	jne    0x414238
  41422b:	mov    ebx,DWORD PTR ds:0x428004
  414231:	inc    ebx
  414232:	mov    DWORD PTR ds:0x428004,ebx
  414238:	jmp    0x4141e2
  41423d:	sub    DWORD PTR ds:0x42a004,ecx
  414243:	xor    edx,eax
  414245:	mov    DWORD PTR [ebp-0x5c],edx
  414248:	sub    DWORD PTR ds:0x42a000,edx
  41424e:	mov    edx,DWORD PTR [ebp-0x10]
  414251:	sbb    DWORD PTR ds:0x428000,0x7854
  41425b:	mov    ebx,DWORD PTR [ebp-0x8]
  41425e:	inc    DWORD PTR ds:0x42c010
  414264:	xor    edx,eax
  414266:	add    DWORD PTR ds:0x42b008,0x42a018
  414270:	xor    ebx,eax
  414272:	mov    DWORD PTR ds:0x42901c,0x61e1
  41427c:	sub    edx,ebx
  41427e:	sub    DWORD PTR ds:0x42b014,0x2136
  414288:	sub    edx,esi
  41428a:	xor    edx,eax
  41428c:	mov    DWORD PTR ds:0x42901c,0x74d4
  414296:	mov    DWORD PTR [ebp-0x10],edx
  414299:	mov    edx,DWORD PTR [ebp-0x14]
  41429c:	mov    DWORD PTR ds:0x429008,0x2bcf
  4142a6:	mov    DWORD PTR [ebp+0x8],edx
  4142a9:	jmp    0x414392
  4142ae:	mov    edx,DWORD PTR [ebp+0x8]
  4142b1:	neg    ebx
  4142b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4142b6:	xor    DWORD PTR ds:0x428000,0x42a004
  4142c0:	xor    edx,eax
  4142c2:	add    DWORD PTR ds:0x42901c,0x428024
  4142cc:	xor    ebx,eax
  4142ce:	sub    edx,ebx
  4142d0:	and    DWORD PTR ds:0x428028,edi
  4142d6:	sub    edx,esi
  4142d8:	xor    edx,eax
  4142da:	mov    DWORD PTR [ebp+0x8],edx
  4142dd:	mov    ebx,DWORD PTR ds:0x428000
  4142e3:	adc    DWORD PTR ds:0x429018,ebx
  4142e9:	mov    edx,DWORD PTR [ebp+0x8]
  4142ec:	xor    ebx,ebx
  4142ee:	xor    ebx,DWORD PTR ds:0x428014
  4142f4:	adc    ebx,DWORD PTR ds:0x42a000
  4142fa:	mov    DWORD PTR ds:0x428014,ebx
  414300:	mov    ebx,DWORD PTR [ebp-0x58]
  414303:	xor    DWORD PTR ds:0x429004,0x428028
  41430d:	add    edx,0x5708f8
  414313:	imul   edx,ebx
  414316:	xor    ebx,ebx
  414318:	or     ebx,DWORD PTR ds:0x429018
  41431e:	add    ebx,DWORD PTR ds:0x42c010
  414324:	mov    DWORD PTR ds:0x429018,ebx
  41432a:	mov    DWORD PTR [ebp-0x58],edx
  41432d:	mov    ebx,DWORD PTR ds:0x429014
  414333:	sbb    DWORD PTR ds:0x42c008,ebx
  414339:	mov    edx,DWORD PTR [ebp+0x8]
  41433c:	xor    ebx,ebx
  41433e:	xor    ebx,DWORD PTR ds:0x42900c
  414344:	add    DWORD PTR ds:0x428004,ebx
  41434a:	mov    ebx,DWORD PTR [ebp-0x54]
  41434d:	add    edx,0x64f8da
  414353:	or     edx,ebx
  414355:	mov    DWORD PTR [ebp-0x54],edx
  414358:	mov    edx,DWORD PTR [ebp+0x8]
  41435b:	mov    ebx,DWORD PTR [ebp-0x50]
  41435e:	add    edx,ecx
  414360:	xor    edx,ebx
  414362:	mov    DWORD PTR [ebp-0x50],edx
  414365:	mov    edx,DWORD PTR [ebp+0x8]
  414368:	mov    ebx,DWORD PTR [ebp-0x4c]
  41436b:	add    edx,edi
  41436d:	and    edx,ebx
  41436f:	mov    DWORD PTR [ebp-0x4c],edx
  414372:	mov    edx,DWORD PTR [ebp+0x8]
  414375:	mov    ebx,DWORD PTR [ebp-0x48]
  414378:	lea    edx,[ebx+edx*1+0x241fc1f]
  41437f:	mov    DWORD PTR [ebp-0x48],edx
  414382:	mov    edx,DWORD PTR [ebp+0x8]
  414385:	mov    ebx,0xfa5e15e2
  41438a:	sub    ebx,edx
  41438c:	add    ebx,DWORD PTR [ebp-0x44]
  41438f:	mov    DWORD PTR [ebp-0x44],ebx
  414392:	mov    edx,DWORD PTR [ebp+0x8]
  414395:	xor    edx,eax
  414397:	add    edx,esi
  414399:	jne    0x4142ae
  41439f:	mov    edx,DWORD PTR [ebp-0xc]
  4143a2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143a9:	mov    bl,BYTE PTR [ebp-0x1]
  4143ac:	cmp    dl,bl
  4143ae:	je     0x41448c
  4143b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143b7:	mov    edx,DWORD PTR [ebp-0xc]
  4143ba:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143c1:	mov    ebx,DWORD PTR [ebp+0xc]
  4143c4:	xor    ecx,eax
  4143c6:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  4143cd:	jne    0x4145c0
  4143d3:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143d6:	mov    edx,DWORD PTR [ebp+0xc]
  4143d9:	xor    ecx,eax
  4143db:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  4143e3:	mov    edx,DWORD PTR [ebp-0x18]
  4143e6:	xor    edx,eax
  4143e8:	add    edx,esi
  4143ea:	cmp    ecx,edx
  4143ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ef:	mov    DWORD PTR [ebp+0x8],ecx
  4143f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f5:	je     0x416a87
  4143fb:	xor    ecx,eax
  4143fd:	add    ecx,esi
  4143ff:	mov    ecx,0x242ebed
  414404:	je     0x414514
  41440a:	mov    edx,DWORD PTR [ebp+0x8]
  41440d:	mov    ebx,DWORD PTR [ebp-0x8]
  414410:	xor    edx,eax
  414412:	xor    ebx,eax
  414414:	sub    edx,ebx
  414416:	sub    edx,esi
  414418:	xor    edx,eax
  41441a:	mov    DWORD PTR [ebp+0x8],edx
  41441d:	mov    edx,DWORD PTR [ebp+0x8]
  414420:	mov    ebx,DWORD PTR [ebp-0x58]
  414423:	add    edx,0x5708f8
  414429:	imul   edx,ebx
  41442c:	mov    DWORD PTR [ebp-0x58],edx
  41442f:	mov    edx,DWORD PTR [ebp+0x8]
  414432:	mov    ebx,DWORD PTR [ebp-0x54]
  414435:	add    edx,0x64f8da
  41443b:	or     edx,ebx
  41443d:	mov    DWORD PTR [ebp-0x54],edx
  414440:	mov    edx,DWORD PTR [ebp+0x8]
  414443:	mov    ebx,DWORD PTR [ebp-0x50]
  414446:	add    edx,ecx
  414448:	xor    edx,ebx
  41444a:	mov    DWORD PTR [ebp-0x50],edx
  41444d:	mov    edx,DWORD PTR [ebp+0x8]
  414450:	mov    ebx,DWORD PTR [ebp-0x4c]
  414453:	add    edx,edi
  414455:	and    edx,ebx
  414457:	mov    DWORD PTR [ebp-0x4c],edx
  41445a:	mov    edx,DWORD PTR [ebp+0x8]
  41445d:	mov    ebx,DWORD PTR [ebp-0x48]
  414460:	lea    edx,[ebx+edx*1+0x241fc1f]
  414467:	mov    DWORD PTR [ebp-0x48],edx
  41446a:	mov    edx,DWORD PTR [ebp+0x8]
  41446d:	mov    ebx,0xfa5e15e2
  414472:	sub    ebx,edx
  414474:	add    ebx,DWORD PTR [ebp-0x44]
  414477:	mov    DWORD PTR [ebp-0x44],ebx
  41447a:	mov    edx,DWORD PTR [ebp+0x8]
  41447d:	xor    edx,eax
  41447f:	add    edx,esi
  414481:	jne    0x41440a
  414487:	jmp    0x414514
  41448c:	mov    edx,DWORD PTR [ebp-0x14]
  41448f:	mov    DWORD PTR [ebp+0x8],edx
  414492:	jmp    0x414507
  414497:	mov    edx,DWORD PTR [ebp+0x8]
  41449a:	mov    ebx,DWORD PTR [ebp-0x8]
  41449d:	xor    edx,eax
  41449f:	xor    ebx,eax
  4144a1:	sub    edx,ebx
  4144a3:	sub    edx,esi
  4144a5:	xor    edx,eax
  4144a7:	mov    DWORD PTR [ebp+0x8],edx
  4144aa:	mov    edx,DWORD PTR [ebp+0x8]
  4144ad:	mov    ebx,DWORD PTR [ebp-0x58]
  4144b0:	add    edx,0x5708f8
  4144b6:	imul   edx,ebx
  4144b9:	mov    DWORD PTR [ebp-0x58],edx
  4144bc:	mov    edx,DWORD PTR [ebp+0x8]
  4144bf:	mov    ebx,DWORD PTR [ebp-0x54]
  4144c2:	add    edx,0x64f8da
  4144c8:	or     edx,ebx
  4144ca:	mov    DWORD PTR [ebp-0x54],edx
  4144cd:	mov    edx,DWORD PTR [ebp+0x8]
  4144d0:	mov    ebx,DWORD PTR [ebp-0x50]
  4144d3:	add    edx,ecx
  4144d5:	xor    edx,ebx
  4144d7:	mov    DWORD PTR [ebp-0x50],edx
  4144da:	mov    edx,DWORD PTR [ebp+0x8]
  4144dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4144e0:	add    edx,edi
  4144e2:	and    edx,ebx
  4144e4:	mov    DWORD PTR [ebp-0x4c],edx
  4144e7:	mov    edx,DWORD PTR [ebp+0x8]
  4144ea:	mov    ebx,DWORD PTR [ebp-0x48]
  4144ed:	lea    edx,[ebx+edx*1+0x241fc1f]
  4144f4:	mov    DWORD PTR [ebp-0x48],edx
  4144f7:	mov    edx,DWORD PTR [ebp+0x8]
  4144fa:	mov    ebx,0xfa5e15e2
  4144ff:	sub    ebx,edx
  414501:	add    ebx,DWORD PTR [ebp-0x44]
  414504:	mov    DWORD PTR [ebp-0x44],ebx
  414507:	mov    edx,DWORD PTR [ebp+0x8]
  41450a:	xor    edx,eax
  41450c:	add    edx,esi
  41450e:	jne    0x414497
  414514:	mov    edx,DWORD PTR [ebp-0x14]
  414517:	mov    DWORD PTR [ebp+0x8],edx
  41451a:	jmp    0x41458f
  41451f:	mov    edx,DWORD PTR [ebp+0x8]
  414522:	mov    ebx,DWORD PTR [ebp-0x8]
  414525:	xor    edx,eax
  414527:	xor    ebx,eax
  414529:	sub    edx,ebx
  41452b:	sub    edx,esi
  41452d:	xor    edx,eax
  41452f:	mov    DWORD PTR [ebp+0x8],edx
  414532:	mov    edx,DWORD PTR [ebp+0x8]
  414535:	mov    ebx,DWORD PTR [ebp-0x58]
  414538:	add    edx,0x5708f8
  41453e:	imul   edx,ebx
  414541:	mov    DWORD PTR [ebp-0x58],edx
  414544:	mov    edx,DWORD PTR [ebp+0x8]
  414547:	mov    ebx,DWORD PTR [ebp-0x54]
  41454a:	add    edx,0x64f8da
  414550:	or     edx,ebx
  414552:	mov    DWORD PTR [ebp-0x54],edx
  414555:	mov    edx,DWORD PTR [ebp+0x8]
  414558:	mov    ebx,DWORD PTR [ebp-0x50]
  41455b:	add    edx,ecx
  41455d:	xor    edx,ebx
  41455f:	mov    DWORD PTR [ebp-0x50],edx
  414562:	mov    edx,DWORD PTR [ebp+0x8]
  414565:	mov    ebx,DWORD PTR [ebp-0x4c]
  414568:	add    edx,edi
  41456a:	and    edx,ebx
  41456c:	mov    DWORD PTR [ebp-0x4c],edx
  41456f:	mov    edx,DWORD PTR [ebp+0x8]
  414572:	mov    ebx,DWORD PTR [ebp-0x48]
  414575:	lea    edx,[ebx+edx*1+0x241fc1f]
  41457c:	mov    DWORD PTR [ebp-0x48],edx
  41457f:	mov    edx,DWORD PTR [ebp+0x8]
  414582:	mov    ebx,0xfa5e15e2
  414587:	sub    ebx,edx
  414589:	add    ebx,DWORD PTR [ebp-0x44]
  41458c:	mov    DWORD PTR [ebp-0x44],ebx
  41458f:	mov    edx,DWORD PTR [ebp+0x8]
  414592:	xor    edx,eax
  414594:	add    edx,esi
  414596:	jne    0x41451f
  41459c:	mov    edx,DWORD PTR [ebp-0x8]
  41459f:	mov    ebx,DWORD PTR [ebp-0xc]
  4145a2:	xor    edx,eax
  4145a4:	lea    edx,[edx+ebx*1+0x3272e0]
  4145ab:	mov    DWORD PTR [ebp-0xc],edx
  4145ae:	mov    edx,DWORD PTR [ebp-0x10]
  4145b1:	xor    edx,eax
  4145b3:	add    edx,esi
  4145b5:	jne    0x4141ce
  4145bb:	jmp    0x418e50
  4145c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4145c3:	mov    DWORD PTR [ebp+0x8],ecx
  4145c6:	jmp    0x41463f
  4145cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4145ce:	mov    edx,DWORD PTR [ebp-0x8]
  4145d1:	xor    ecx,eax
  4145d3:	xor    edx,eax
  4145d5:	sub    ecx,edx
  4145d7:	sub    ecx,esi
  4145d9:	xor    ecx,eax
  4145db:	mov    DWORD PTR [ebp+0x8],ecx
  4145de:	mov    ecx,DWORD PTR [ebp+0x8]
  4145e1:	mov    edx,DWORD PTR [ebp-0x58]
  4145e4:	add    ecx,0x5708f8
  4145ea:	imul   ecx,edx
  4145ed:	mov    DWORD PTR [ebp-0x58],ecx
  4145f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4145f3:	mov    edx,DWORD PTR [ebp-0x54]
  4145f6:	add    ecx,0x64f8da
  4145fc:	or     ecx,edx
  4145fe:	mov    DWORD PTR [ebp-0x54],ecx
  414601:	mov    ecx,DWORD PTR [ebp+0x8]
  414604:	mov    edx,DWORD PTR [ebp-0x50]
  414607:	add    ecx,0x242ebed
  41460d:	xor    ecx,edx
  41460f:	mov    DWORD PTR [ebp-0x50],ecx
  414612:	mov    ecx,DWORD PTR [ebp+0x8]
  414615:	mov    edx,DWORD PTR [ebp-0x4c]
  414618:	add    ecx,edi
  41461a:	and    ecx,edx
  41461c:	mov    DWORD PTR [ebp-0x4c],ecx
  41461f:	mov    ecx,DWORD PTR [ebp+0x8]
  414622:	mov    edx,DWORD PTR [ebp-0x48]
  414625:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41462c:	mov    DWORD PTR [ebp-0x48],ecx
  41462f:	mov    ecx,DWORD PTR [ebp+0x8]
  414632:	mov    edx,0xfa5e15e2
  414637:	sub    edx,ecx
  414639:	add    edx,DWORD PTR [ebp-0x44]
  41463c:	mov    DWORD PTR [ebp-0x44],edx
  41463f:	mov    ecx,DWORD PTR [ebp+0x8]
  414642:	xor    ecx,eax
  414644:	add    ecx,esi
  414646:	jne    0x4145cb
  41464c:	jmp    0x418e5c
  414651:	mov    ecx,DWORD PTR [ebp+0x8]
  414654:	mov    edx,DWORD PTR [ebp-0x8]
  414657:	xor    ecx,eax
  414659:	xor    edx,eax
  41465b:	sub    ecx,edx
  41465d:	sub    ecx,esi
  41465f:	xor    ecx,eax
  414661:	mov    DWORD PTR [ebp+0x8],ecx
  414664:	mov    ecx,DWORD PTR [ebp+0x8]
  414667:	mov    edx,DWORD PTR [ebp-0x58]
  41466a:	add    ecx,0x5708f8
  414670:	imul   ecx,edx
  414673:	mov    DWORD PTR [ebp-0x58],ecx
  414676:	mov    ecx,DWORD PTR [ebp+0x8]
  414679:	mov    edx,DWORD PTR [ebp-0x54]
  41467c:	add    ecx,0x64f8da
  414682:	or     ecx,edx
  414684:	mov    DWORD PTR [ebp-0x54],ecx
  414687:	mov    ecx,DWORD PTR [ebp+0x8]
  41468a:	mov    edx,DWORD PTR [ebp-0x50]
  41468d:	add    ecx,0x242ebed
  414693:	xor    ecx,edx
  414695:	mov    DWORD PTR [ebp-0x50],ecx
  414698:	mov    ecx,DWORD PTR [ebp+0x8]
  41469b:	mov    edx,DWORD PTR [ebp-0x4c]
  41469e:	add    ecx,edi
  4146a0:	and    ecx,edx
  4146a2:	mov    DWORD PTR [ebp-0x4c],ecx
  4146a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4146a8:	mov    edx,DWORD PTR [ebp-0x48]
  4146ab:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4146b2:	mov    DWORD PTR [ebp-0x48],ecx
  4146b5:	jmp    0x416a74
  4146ba:	sub    dl,BYTE PTR [esi]
  4146bc:	jg     0x41469d
  4146be:	imul   edi,DWORD PTR [ebx-0x76],0x7b
  4146c2:	stc    
  4146c3:	nop
  4146c4:	inc    esp
  4146c5:	sub    al,0x4b
  4146c7:	iret   
  4146c8:	adc    al,0x3
  4146ca:	jo     0x41473f
  4146cc:	jp     0x414748
  4146ce:	fcomp  DWORD PTR [edi+0x7a]
  4146d1:	jp     0x4146d4
  4146d3:	xchg   ebp,eax
  4146d4:	outs   dx,BYTE PTR ds:[esi]
  4146d5:	jns    0x41468e
  4146d7:	push   ds
  4146d8:	adc    eax,0x90f57ae6
  4146dd:	int    0x1c
  4146df:	das    
  4146e0:	dec    esi
  4146e1:	pop    ss
  4146e2:	pop    es
  4146e3:	call   0xb3b4:0x4fe42ef4
  4146ea:	mov    BYTE PTR [esi+eax*2-0x27],bh
  4146ee:	add    al,0xf9
  4146f0:	sbb    BYTE PTR [edx+0x7b],dh
  4146f3:	jno    0x41476d
  4146f5:	jnp    0x4146d8
  4146f7:	in     eax,dx
  4146f8:	mov    cl,0x9f
  4146fa:	pop    edx
  4146fb:	out    0xb1,eax
  4146fd:	add    dh,BYTE PTR [esi-0xd]
  414700:	mov    eax,ds:0xe720d4e6
  414705:	fwait
  414706:	loope  0x414704
  414708:	push   es
  414709:	mov    ah,0xc0
  41470b:	mov    al,0x7d
  41470d:	xor    BYTE PTR [edx+0x4ee73d51],bh
  414713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414714:	fadd   DWORD PTR [ebx-0x2e]
  414717:	xlat   BYTE PTR ds:[ebx]
  414718:	jno    0x4146c5
  41471a:	add    BYTE PTR [edx],ch
  41471c:	retf   0x4711
  41471f:	adc    ah,BYTE PTR ds:0x851cd2f8
  414725:	lock dec ecx
  414727:	bound  edi,QWORD PTR [ecx-0x5598ce6a]
  41472d:	jmp    0x414740
  41472f:	call   0x2820e071
  414734:	mov    bl,0x9c
  414736:	fs pop ebp
  414738:	test   BYTE PTR [ebp-0x2043de8f],ch
  41473e:	inc    esp
  41473f:	xchg   edi,eax
  414740:	adc    DWORD PTR [ebx],0x1f
  414743:	mov    eax,0x2f47f19d
  414748:	test   DWORD PTR [esi+0x37],eax
  41474b:	rcl    DWORD PTR [esi],1
  41474d:	and    bl,dh
  41474f:	adc    esi,ebp
  414751:	xchg   BYTE PTR [eax],dh
  414753:	adc    eax,0x65b45892
  414758:	call   0x7379f6a2
  41475d:	and    al,0xe2
  41475f:	jmp    DWORD PTR [eax+edi*1-0x4747b0f]
  414766:	xchg   esi,eax
  414767:	adc    DWORD PTR [ebp-0x1530fc9c],ecx
  41476d:	adc    DWORD PTR [ebx],ebx
  41476f:	jb     0x414777
  414771:	(bad)  
  414773:	in     eax,0x68
  414775:	enter  0x7104,0x71
  414779:	pop    edx
  41477a:	ror    DWORD PTR es:[ecx],0x49
  41477e:	sbb    eax,0xe8eebc63
  414783:	test   bl,0xb4
  414786:	or     BYTE PTR [ebx],dl
  414788:	cli    
  414789:	popa   
  41478a:	dec    edx
  41478b:	xor    al,0x68
  41478d:	addr16 int3 
  41478f:	mov    cl,0x39
  414791:	xor    edi,ebp
  414793:	jno    0x41472f
  414795:	sbb    esp,edi
  414797:	popf   
  414798:	mov    bh,0xa9
  41479a:	lea    esi,[edx+esi*1+0x588842b1]
  4147a1:	pop    es
  4147a2:	or     ax,0x6ce9
  4147a6:	xor    dl,dh
  4147a8:	dec    eax
  4147a9:	adc    eax,ecx
  4147ab:	sub    ecx,DWORD PTR [ebp+0x753f44db]
  4147b1:	mov    ch,0xfd
  4147b3:	pop    ebx
  4147b4:	inc    eax
  4147b5:	push   esi
  4147b6:	jp     0x414827
  4147b8:	(bad)  
  4147b9:	and    esi,eax
  4147bb:	add    al,0xff
  4147bd:	inc    ebx
  4147be:	jnp    0x41475a
  4147c0:	shl    DWORD PTR [edx+edi*2+0x46606ba2],0x57
  4147c8:	retf   
  4147c9:	push   ecx
  4147ca:	jb     0x4147de
  4147cc:	outs   dx,DWORD PTR ds:[esi]
  4147cd:	push   ss
  4147ce:	pusha  
  4147cf:	out    0x41,eax
  4147d1:	or     al,0xcd
  4147d3:	push   es
  4147d4:	adc    DWORD PTR gs:[eax-0x56],edx
  4147d8:	cmp    eax,DWORD PTR [eax]
  4147da:	sbb    BYTE PTR [ebx-0x20],dh
  4147dd:	xor    esi,DWORD PTR [edx+0x12e8e8a3]
  4147e3:	mov    ds:0xb7b1e369,al
  4147e8:	and    eax,0x5fa341dd
  4147ed:	jo     0x4147bf
  4147ef:	push   esp
  4147f0:	daa    
  4147f1:	mov    esp,edi
  4147f3:	adc    al,0xdb
  4147f5:	mov    ds:0xcdc0e40e,eax
  4147fa:	inc    esi
  4147fb:	mov    cl,0xb1
  4147fd:	hlt    
  4147fe:	leave  
  4147ff:	push   edx
  414800:	pushw  ss
  414802:	xchg   esp,eax
  414803:	(bad)  
  414804:	ja     0x414834
  414806:	pop    es
  414807:	nop
  414808:	push   ebp
  414809:	inc    eax
  41480a:	adc    ch,bh
  41480c:	scas   al,BYTE PTR es:[edi]
  41480d:	jmp    0xed0ffa94
  414812:	in     eax,0xfb
  414814:	inc    eax
  414815:	lahf   
  414816:	call   0xf837e028
  41481b:	dec    ebp
  41481c:	loopne 0x41487a
  41481e:	jb     0x414845
  414820:	push   ecx
  414821:	cdq    
  414822:	stos   DWORD PTR es:[edi],eax
  414823:	xor    al,0xb9
  414825:	arpl   WORD PTR [esi],si
  414827:	dec    esi
  414828:	pop    ecx
  414829:	add    BYTE PTR [edi-0x4e],ah
  41482c:	jb     0x4147de
  41482e:	mov    ss,WORD PTR ds:0xa0d86d23
  414834:	out    dx,al
  414835:	scas   eax,DWORD PTR es:[edi]
  414836:	inc    ecx
  414837:	call   0xb1c23bb0
  41483c:	shl    ebx,0x83
  41483f:	mov    edx,0x9f379bc0
  414844:	aas    
  414845:	xor    DWORD PTR [ebx],esp
  414847:	fwait
  414848:	inc    ecx
  414849:	rcr    BYTE PTR [ecx],1
  41484b:	ror    BYTE PTR [ebx],0x61
  41484e:	sub    bl,BYTE PTR [ebx]
  414850:	popa   
  414851:	stc    
  414852:	les    esp,FWORD PTR [edi]
  414854:	pushf  
  414855:	jge    0x41487a
  414857:	loop   0x4148ac
  414859:	loope  0x4147fa
  41485b:	mov    ah,0x50
  41485d:	call   0xb903f40a
  414862:	xchg   esi,eax
  414863:	nop
  414864:	fld    DWORD PTR [ecx+esi*1]
  414868:	sbb    DWORD PTR [eax+0x5],ecx
  41486b:	pop    es
  41486c:	aad    0xb2
  41486e:	dec    ecx
  41486f:	pusha  
  414870:	fsubr  DWORD PTR [edi+0x6f1f43f]
  414876:	mov    esp,0xd80feb03
  41487b:	add    BYTE PTR [edx-0x2bcc0a0c],cl
  414881:	and    eax,0x49441d6f
  414886:	jnp    0x41488d
  414888:	or     ch,bh
  41488a:	adc    bh,BYTE PTR [ebp+0x38c3eef3]
  414890:	gs pop ebx
  414892:	and    cl,bl
  414894:	jne    0x41490f
  414896:	add    eax,0x3f846aa6
  41489b:	xor    esp,DWORD PTR [edx]
  41489d:	retf   0x503a
  4148a0:	adc    BYTE PTR [ebx+edi*1-0x3bce4958],ch
  4148a7:	sbb    ecx,DWORD PTR [ebx]
  4148a9:	jmp    0xf84c:0x9c5923ff
  4148b0:	sbb    ch,dh
  4148b2:	mov    esi,0x70271bfe
  4148b7:	mov    ds:0x4184de5,al
  4148bc:	ins    DWORD PTR es:[edi],dx
  4148bd:	mov    eax,0x75706027
  4148c2:	mov    al,ds:0x2c575227
  4148c7:	je     0x41484c
  4148c9:	in     al,dx
  4148ca:	dec    ebp
  4148cb:	test   al,0x1d
  4148cd:	mov    ds:0xdade81aa,al
  4148d2:	mov    dl,0x1b
  4148d4:	mov    bh,0x73
  4148d6:	jge    0x414894
  4148d8:	retf   
  4148d9:	xchg   esp,eax
  4148da:	call   0xe4a052a8
  4148df:	imul   esp,eax,0xebc7cd85
  4148e5:	stos   BYTE PTR es:[edi],al
  4148e6:	add    DWORD PTR [eax-0x27],ebp
  4148e9:	jp     0x414935
  4148eb:	jae    0x41491c
  4148ed:	xor    BYTE PTR [ecx],dh
  4148ef:	cmc    
  4148f0:	ss jmp 0x414874
  4148f3:	mov    ebp,0x1b8d5c58
  4148f8:	cmp    BYTE PTR [ecx+0x4b],al
  4148fb:	xor    al,0xc2
  4148fd:	inc    esp
  4148fe:	rol    ch,cl
  414900:	mov    dl,0xcb
  414902:	push   ebx
  414903:	loopne 0x41497d
  414905:	retf   0x572c
  414908:	aaa    
  414909:	xchg   ecx,eax
  41490a:	in     eax,0x5c
  41490c:	retf   
  41490d:	jbe    0x414901
  41490f:	js     0x41496f
  414911:	push   edi
  414912:	and    DWORD PTR [ebx],esp
  414914:	jbe    0x41494c
  414916:	cwde   
  414917:	jae    0x4148f0
  414919:	iret   
  41491a:	sub    BYTE PTR ds:[ebx+0x33],bh
  41491e:	and    edx,edx
  414920:	cmp    DWORD PTR [ecx],edi
  414922:	sar    DWORD PTR [eax-0x23983bf4],1
  414928:	test   eax,0xa35647c2
  41492d:	fsubr  QWORD PTR [edx-0x15]
  414930:	pop    ebx
  414931:	jg     0x4148d4
  414933:	pop    ss
  414934:	mov    eax,0x69599b7d
  414939:	cdq    
  41493a:	inc    eax
  41493b:	mov    ebp,edx
  41493d:	std    
  41493e:	fdiv   QWORD PTR [ecx+0x52]
  414941:	ja     0x414945
  414943:	sub    ecx,DWORD PTR [edi]
  414945:	pusha  
  414946:	pop    ss
  414947:	rcr    DWORD PTR [edi+0x154a72c3],cl
  41494d:	nop
  41494e:	dec    esi
  41494f:	arpl   WORD PTR [edi+0x6a27a483],di
  414955:	and    al,0x61
  414957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414958:	add    esp,eax
  41495a:	mov    eax,0xf592f526
  41495f:	jne    0x414988
  414961:	idiv   BYTE PTR [ecx+0x50]
  414964:	(bad)  
  414966:	out    0x72,al
  414968:	dec    DWORD PTR [ecx-0x2d7cc254]
  41496e:	sub    BYTE PTR [ebp-0x29],dh
  414971:	push   es
  414972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414973:	rol    DWORD PTR [edx+edi*2+0x77],1
  414977:	push   eax
  414978:	pop    esi
  414979:	cmp    eax,0x2f5cb947
  41497e:	and    esi,DWORD PTR [edx+0x36]
  414981:	mov    al,0x4
  414983:	(bad)  
  414984:	les    edx,FWORD PTR [ecx-0x6795dc8f]
  41498a:	jmp    FWORD PTR [ebx+0x63e830e1]
  414990:	ds push 0x32
  414993:	and    esi,DWORD PTR [edx-0x62a86084]
  414999:	aad    0x24
  41499b:	data16 fstp DWORD PTR ds:0x71dd31ab
  4149a2:	mov    eax,0x70cc44ec
  4149a7:	mov    esp,0x5acb4db1
  4149ac:	neg    BYTE PTR [ecx+0x40]
  4149af:	or     BYTE PTR [edx+0x2438cecd],ch
  4149b5:	frstor ds:0x105575c0
  4149bb:	push   edx
  4149bc:	cwde   
  4149bd:	add    eax,0x5fab24cc
  4149c2:	cmp    BYTE PTR [ebx-0xfc2f99e],bl
  4149c8:	sub    BYTE PTR [edx],0x56
  4149cb:	mov    edi,0xe83f9107
  4149d0:	mov    ebx,0xa7577ec5
  4149d5:	ins    BYTE PTR es:[edi],dx
  4149d6:	repnz add BYTE PTR [ecx+0x650c264a],0x47
  4149de:	adc    ebx,DWORD PTR [esi-0x15997035]
  4149e4:	fst    QWORD PTR [esi]
  4149e6:	shl    ebx,1
  4149e8:	pop    ss
  4149e9:	jo     0x414992
  4149eb:	inc    eax
  4149ec:	div    ch
  4149ee:	rcr    cl,1
  4149f0:	int    0x57
  4149f2:	jne    0x41498b
  4149f4:	pop    ss
  4149f5:	xor    edx,esp
  4149f7:	add    ch,BYTE PTR [edi-0x19c8c6bf]
  4149fd:	sar    DWORD PTR ds:0x42dd59a1,0x62
  414a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a05:	ror    edx,0xc7
  414a08:	xchg   ebx,eax
  414a09:	imul   ecx,DWORD PTR [edx+ebx*8+0x4f46a76f],0x937719dc
  414a14:	retf   
  414a15:	fld    QWORD PTR [esi]
  414a17:	mov    ebx,0x1d186217
  414a1c:	cmc    
  414a1d:	pop    ss
  414a1e:	in     eax,0xa7
  414a20:	or     al,0x65
  414a22:	and    DWORD PTR [eax],eax
  414a24:	pop    ebp
  414a25:	sbb    BYTE PTR [ecx],al
  414a27:	mov    bl,0xb3
  414a29:	dec    ebp
  414a2a:	xor    bh,bl
  414a2c:	cmp    DWORD PTR [ecx+0x2aad49b3],edi
  414a32:	rcr    DWORD PTR [esi+0x47b3589],0x66
  414a39:	push   ebx
  414a3a:	sbb    DWORD PTR [ebp+0xd],ebx
  414a3d:	xor    al,0xed
  414a3f:	push   esp
  414a40:	mov    esi,0xead61301
  414a45:	std    
  414a46:	cli    
  414a47:	and    BYTE PTR [esi-0x1c000587],ch
  414a4d:	jne    0x414a19
  414a4f:	stos   BYTE PTR es:[edi],al
  414a50:	add    al,0x38
  414a52:	in     al,0xe9
  414a54:	xor    bl,0x27
  414a57:	jne    0x414a36
  414a59:	sub    DWORD PTR [edi],eax
  414a5b:	mov    DWORD PTR [edi],esp
  414a5d:	repz fmul DWORD PTR [ebp+0x249c6bff]
  414a64:	and    ebp,esi
  414a66:	out    0xf9,eax
  414a68:	in     al,0x39
  414a6a:	xlat   BYTE PTR ds:[ebx]
  414a6b:	mov    dl,0xaf
  414a6d:	mov    es,ecx
  414a6f:	popf   
  414a70:	sbb    DWORD PTR ds:0x171f442,edx
  414a76:	mov    ah,0xd3
  414a78:	mov    eax,ds:0x6c00384a
  414a7d:	mov    ah,0xdc
  414a7f:	aad    0x97
  414a81:	xchg   edx,eax
  414a82:	cdq    
  414a83:	or     ch,al
  414a85:	dec    esp
  414a86:	jg     0x414adc
  414a88:	pop    esi
  414a89:	xchg   ah,ch
  414a8b:	jge    0x414ad3
  414a8d:	fcmovnb st,st(7)
  414a8f:	xor    BYTE PTR [eax+0x5],0x6a
  414a93:	test   BYTE PTR [edi-0x55255eb1],ah
  414a99:	xor    eax,0xa3e1ef69
  414a9e:	dec    edx
  414a9f:	inc    ebp
  414aa0:	jmp    0xeffe:0x91c50f4b
  414aa7:	popa   
  414aa8:	lds    esi,FWORD PTR [ebp+0x26]
  414aab:	mov    dh,0x9f
  414aad:	or     BYTE PTR [ebx-0x763b46d2],0xa3
  414ab4:	pop    ss
  414ab5:	cmp    ah,BYTE PTR [edx]
  414ab7:	add    esp,DWORD PTR [ebx]
  414ab9:	cmp    DWORD PTR [ebp+0x6c48bc29],ecx
  414abf:	dec    edx
  414ac0:	fild   DWORD PTR [esi]
  414ac2:	mov    al,0x24
  414ac4:	fidivr WORD PTR [esi-0x5]
  414ac7:	shl    ch,cl
  414ac9:	jns    0x414ab7
  414acb:	rcl    DWORD PTR [edi],1
  414acd:	test   BYTE PTR [ebx-0x32],0x48
  414ad1:	cli    
  414ad2:	je     0x414b02
  414ad4:	mov    BYTE PTR [eax+0x10383c],ah
  414ada:	fidivr WORD PTR [edx]
  414adc:	jp     0x414a9d
  414ade:	inc    ebp
  414adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ae0:	add    ch,ch
  414ae2:	(bad)  
  414ae3:	jl     0x414b5b
  414ae5:	pop    edi
  414ae6:	push   eax
  414ae7:	adc    eax,0x625224d2
  414aec:	pop    ds
  414aed:	stos   BYTE PTR es:[edi],al
  414aee:	out    dx,al
  414aef:	dec    ebx
  414af0:	pop    ecx
  414af1:	rol    ecx,0x3
  414af4:	popf   
  414af5:	ret    
  414af6:	outs   dx,BYTE PTR ds:[esi]
  414af7:	das    
  414af8:	popa   
  414af9:	ins    DWORD PTR es:[edi],dx
  414afa:	xchg   esi,eax
  414afb:	popa   
  414afc:	repnz or BYTE PTR [edx],ah
  414aff:	adc    ecx,ebp
  414b01:	iret   
  414b02:	mov    esp,0xaee411b9
  414b07:	mov    ecx,0x6df5d324
  414b0c:	outs   dx,DWORD PTR ds:[esi]
  414b0d:	mov    ebx,DWORD PTR [edx]
  414b0f:	clc    
  414b10:	imul   ecx,DWORD PTR [ebp-0x1f],0x33c7142f
  414b17:	mov    ecx,DWORD PTR [ebx]
  414b19:	add    ch,BYTE PTR [edx]
  414b1b:	mov    ah,0x8f
  414b1d:	jecxz  0x414ae9
  414b1f:	inc    esi
  414b20:	dec    esp
  414b21:	iret   
  414b22:	sbb    al,0x27
  414b24:	sbb    esp,0x2d
  414b27:	test   DWORD PTR [esi],esi
  414b29:	mov    dh,0xbe
  414b2b:	fldenv [edi+0x65]
  414b2e:	mov    al,BYTE PTR [ebx+eiz*2]
  414b31:	sti    
  414b32:	(bad)  
  414b33:	adc    al,0xd0
  414b35:	push   ebp
  414b36:	or     dh,0x14
  414b39:	mov    ch,0x1b
  414b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3c:	adc    esi,0xffffffaa
  414b3f:	add    edi,ecx
  414b41:	add    DWORD PTR fs:[esi+esi*8+0x503e7575],0xffffffed
  414b4a:	ja     0x414b92
  414b4c:	push   ebx
  414b4d:	(bad)  
  414b4e:	xor    eax,0x6fb1998c
  414b53:	inc    ecx
  414b54:	inc    ecx
  414b55:	into   
  414b56:	cvtps2pd xmm1,xmm0
  414b59:	stos   DWORD PTR es:[edi],eax
  414b5a:	and    eax,0x5f57a96d
  414b5f:	mov    eax,0x2a50e2aa
  414b64:	xor    al,0x4c
  414b67:	push   eax
  414b68:	pop    ss
  414b69:	mov    ah,0x1b
  414b6b:	(bad)  [edx]
  414b6d:	movnti DWORD PTR [ecx-0x62],ebp
  414b71:	ja     0x414b19
  414b73:	jg     0x414bc2
  414b75:	xchg   ebp,eax
  414b76:	and    BYTE PTR [edi+0x19],dl
  414b79:	mov    eax,ds:0x34ed23ba
  414b7e:	push   cs
  414b7f:	sbb    al,0x65
  414b81:	in     al,dx
  414b82:	or     DWORD PTR [eax],esp
  414b84:	sti    
  414b85:	pop    ebx
  414b86:	int    0xf2
  414b88:	push   edi
  414b89:	xor    ebx,eax
  414b8b:	mov    edx,0xfc43a0ef
  414b90:	and    dh,dh
  414b92:	dec    ebp
  414b93:	push   ebx
  414b94:	es push es
  414b96:	fiadd  WORD PTR [eax-0x3b]
  414b99:	jecxz  0x414b46
  414b9b:	in     eax,dx
  414b9c:	sub    dh,bh
  414b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b9f:	jbe    0x414b3b
  414ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba2:	jle    0x414bae
  414ba4:	adc    bh,ch
  414ba6:	scas   al,BYTE PTR es:[edi]
  414ba7:	adc    dl,dh
  414ba9:	mov    ebx,0xec245062
  414bae:	out    dx,eax
  414baf:	ds (bad) 
  414bb2:	daa    
  414bb3:	cmp    dl,BYTE PTR [esi]
  414bb5:	sbb    DWORD PTR [edi],edx
  414bb7:	ss adc eax,0x983eb9d7
  414bbd:	sbb    ch,dh
  414bbf:	xor    edi,esp
  414bc1:	xor    eax,0x9f08c7f6
  414bc6:	call   0xbd2b862d
  414bcb:	loopne 0x414bad
  414bcd:	cmp    BYTE PTR [edi+edx*2],ah
  414bd0:	adc    BYTE PTR [edi+0x4ea1dac],ch
  414bd6:	imul   esi,DWORD PTR [eax+ecx*2-0x1],0xe5b04697
  414bde:	push   DWORD PTR [esi]
  414be0:	out    0xa6,eax
  414be2:	enter  0x1ba8,0xc0
  414be6:	repz dec ebx
  414be8:	sti    
  414be9:	fcmovnb st,st(2)
  414beb:	rcr    esi,1
  414bed:	push   ecx
  414bee:	shl    DWORD PTR [ebx-0xf],0x12
  414bf2:	sbb    DWORD PTR [esi],ebx
  414bf4:	shr    ah,1
  414bf6:	xchg   DWORD PTR [edi],esi
  414bf8:	dec    ebx
  414bf9:	pop    ss
  414bfa:	xor    edx,DWORD PTR [ecx+eiz*4+0x5127e26d]
  414c01:	jmp    0x6f4d1495
  414c06:	pop    ebx
  414c07:	popa   
  414c08:	mul    BYTE PTR [esi]
  414c0a:	pop    es
  414c0b:	jae    0x414be5
  414c0d:	test   eax,0x51722a7b
  414c12:	push   ds
  414c13:	xchg   BYTE PTR [esi],ch
  414c15:	popf   
  414c16:	mov    bl,0x86
  414c18:	sub    cl,BYTE PTR [ebx+0xd160499]
  414c1e:	sub    esi,DWORD PTR [edx+0x3a64e90a]
  414c24:	dec    esp
  414c25:	(bad)
  414c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c2b:	ror    eax,cl
  414c2d:	aaa    
  414c2e:	sahf   
  414c2f:	sbb    WORD PTR [esi-0x3495ca00],ax
  414c36:	push   es
  414c37:	pop    esp
  414c38:	sub    eax,0x92516d58
  414c3d:	pop    edx
  414c3e:	dec    esp
  414c3f:	cmp    DWORD PTR [esi+eiz*2+0x5f4d07cc],eax
  414c46:	aas    
  414c47:	test   eax,0x89610e
  414c4c:	pop    ecx
  414c4d:	lahf   
  414c4e:	cmp    ch,BYTE PTR [edx-0x1e]
  414c51:	cmp    BYTE PTR [edi],dh
  414c53:	pop    ecx
  414c54:	or     BYTE PTR [esi],ch
  414c56:	repz jmp 0xbaa9da10
  414c5c:	test   BYTE PTR [esi-0x73],al
  414c5f:	inc    ebx
  414c60:	int    0x7d
  414c62:	sub    DWORD PTR [ebx],edx
  414c64:	dec    edx
  414c65:	jo     0x414ccb
  414c67:	mov    fs,WORD PTR [eax+ebx*4-0x1347c9c5]
  414c6e:	xor    DWORD PTR [edx],0x17e0eda
  414c74:	fst    DWORD PTR [edi-0x78c7fac]
  414c7a:	mov    al,fs:0x6cecc7d9
  414c80:	cld    
  414c81:	fnstsw WORD PTR [esi+0x2d]
  414c84:	sbb    edi,DWORD PTR [ebx-0x30c08f0c]
  414c8a:	xor    cl,dl
  414c8c:	(bad)  
  414c8e:	mov    al,ds:0x8d9012b5
  414c93:	fs add ecx,edx
  414c96:	adc    bh,BYTE PTR [edi-0x7f]
  414c99:	gs aad 0x2f
  414c9c:	or     ebx,DWORD PTR [esi-0x6cf46dfb]
  414ca2:	in     al,dx
  414ca3:	jmp    0xd4cf:0xa3bdd1cb
  414caa:	int    0x26
  414cac:	cdq    
  414cad:	in     eax,dx
  414cae:	and    BYTE PTR [eax],bh
  414cb0:	xchg   ecx,eax
  414cb1:	(bad)  
  414cb2:	pop    edx
  414cb3:	or     BYTE PTR [ebx-0x1d],bh
  414cb6:	xor    cl,dl
  414cb8:	mov    ecx,0x1925dded
  414cbd:	outs   dx,DWORD PTR ds:[esi]
  414cbe:	and    DWORD PTR [ebp-0x6d],eax
  414cc1:	ss aad 0x67
  414cc4:	and    edi,eax
  414cc6:	or     eax,0x5e463969
  414ccb:	pop    esp
  414ccc:	mov    ch,0x5a
  414cce:	push   esp
  414ccf:	mov    cl,0xa4
  414cd1:	call   0x6edd6955
  414cd6:	mov    ebx,0xc7573223
  414cdb:	(bad)  
  414cdc:	std    
  414cdd:	ret    
  414cde:	mov    ch,0x85
  414ce0:	aam    0xb7
  414ce2:	dec    edx
  414ce3:	adc    ah,dl
  414ce5:	mov    esp,0xa3df660c
  414cea:	daa    
  414ceb:	xor    BYTE PTR [esi-0x12],bh
  414cee:	lods   al,BYTE PTR ds:[esi]
  414cef:	ja     0x414cef
  414cf1:	cwde   
  414cf2:	jne    0x414d5d
  414cf4:	scas   al,BYTE PTR es:[edi]
  414cf5:	and    edx,esp
  414cf7:	iret   
  414cf8:	mov    edi,0xe9b753e8
  414cfd:	mov    al,0x54
  414cff:	jmp    0x414d0f
  414d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d02:	jp     0x414d22
  414d04:	scas   al,BYTE PTR es:[edi]
  414d05:	and    BYTE PTR [eax-0x64],cl
  414d08:	outs   dx,DWORD PTR ds:[esi]
  414d09:	jl     0x414d08
  414d0b:	fadd   DWORD PTR [edi-0x40ad8a56]
  414d11:	cdq    
  414d12:	retf   0xcea3
  414d15:	push   ds
  414d16:	test   ch,dl
  414d18:	outs   dx,DWORD PTR ds:[esi]
  414d19:	test   ah,bl
  414d1b:	mov    ebx,0xc2f77fcc
  414d20:	ins    DWORD PTR es:[edi],dx
  414d21:	ins    DWORD PTR es:[edi],dx
  414d22:	sub    bl,bl
  414d24:	dec    ecx
  414d25:	lods   eax,DWORD PTR ds:[esi]
  414d26:	jno    0x414d0a
  414d28:	lods   al,BYTE PTR ds:[esi]
  414d29:	mov    esp,0x693748b3
  414d2e:	or     al,0xc3
  414d30:	cmc    
  414d31:	test   BYTE PTR [ebx-0x59],al
  414d34:	sti    
  414d35:	fstp   TBYTE PTR [eax-0x2c]
  414d38:	ins    DWORD PTR es:[edi],dx
  414d39:	shl    WORD PTR [eax],0xe5
  414d3d:	mov    al,ds:0x33e495b3
  414d42:	test   DWORD PTR [esi+0x1e],eax
  414d45:	cmp    ah,BYTE PTR [ecx-0x77dad2bc]
  414d4b:	and    BYTE PTR [eax+ebx*4-0x7511fd4b],ah
  414d52:	call   0x7be7e450
  414d57:	xchg   edx,eax
  414d58:	sbb    ebx,DWORD PTR [edx-0x65717ca3]
  414d5e:	shl    bh,cl
  414d60:	adc    eax,0x629bd394
  414d65:	outs   dx,DWORD PTR ds:[esi]
  414d66:	dec    ebp
  414d67:	call   0x961:0x2404c6ad
  414d6e:	imul   edx,DWORD PTR [edx+0x14a8c25b],0x42
  414d75:	inc    ebp
  414d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d77:	sub    bl,0x37
  414d7a:	mov    cl,0x4f
  414d7c:	test   DWORD PTR ds:0x4db6cac1,ebp
  414d82:	(bad)  
  414d83:	xchg   ebx,eax
  414d84:	out    0x46,al
  414d86:	test   DWORD PTR [ebx+0x648359a9],0x9b9355a
  414d90:	cs enter 0xb877,0xfb
  414d95:	out    0x3f,eax
  414d97:	jmp    0x414e15
  414d99:	inc    ecx
  414d9a:	adc    al,0x38
  414d9c:	fwait
  414d9d:	jle    0x414d3b
  414d9f:	popa   
  414da0:	pop    eax
  414da1:	pop    ss
  414da2:	pushf  
  414da3:	lock leave 
  414da5:	pushf  
  414da6:	addr16 aad 0xa5
  414da9:	pusha  
  414daa:	mov    bh,0xda
  414dac:	in     al,0x2f
  414dae:	jecxz  0x414d4b
  414db0:	popf   
  414db1:	sub    BYTE PTR es:[edi],bl
  414db4:	fwait
  414db5:	push   edx
  414db6:	add    eax,0x153dd897
  414dbb:	jne    0x414d97
  414dbd:	adc    edx,DWORD PTR [ecx]
  414dbf:	ja     0x414de7
  414dc1:	push   es
  414dc2:	jb     0x414dc4
  414dc4:	add    ecx,DWORD PTR [edi+edx*8+0x500bee5d]
  414dcb:	xchg   DWORD PTR [ecx-0x7e],eax
  414dce:	scas   eax,DWORD PTR es:[edi]
  414dcf:	push   edi
  414dd0:	repnz or ebp,eax
  414dd3:	leave  
  414dd4:	push   ss
  414dd5:	mov    esp,0xd810b8b4
  414dda:	(bad)
  414dde:	mov    ds:0x2935413f,al
  414de3:	adc    al,0x3
  414de5:	cmp    al,0xc
  414de7:	jmp    0x414e0d
  414de9:	adc    ah,BYTE PTR [eax]
  414deb:	and    DWORD PTR [esi],0xffffffbc
  414dee:	repnz in al,0xc6
  414df1:	xchg   ebp,eax
  414df2:	push   edi
  414df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df4:	add    BYTE PTR [esi],dh
  414df6:	cmp    al,0x3b
  414df8:	jecxz  0x414e00
  414dfa:	adc    DWORD PTR [eax-0x2],eax
  414dfd:	dec    edi
  414dfe:	fwait
  414dff:	adc    eax,DWORD PTR [ecx]
  414e01:	fdivr  st,st(1)
  414e03:	inc    esi
  414e04:	test   eax,0x59541126
  414e09:	pop    eax
  414e0a:	stc    
  414e0b:	pop    edi
  414e0c:	and    DWORD PTR [edi+ebp*2-0x66],eax
  414e10:	test   BYTE PTR [eax+eiz*2+0x43],al
  414e14:	pusha  
  414e15:	enter  0x547c,0xa8
  414e19:	pop    ds
  414e1a:	jno    0x414e15
  414e1c:	jmp    0x614a:0x62d4aa48
  414e23:	sub    BYTE PTR [ebp+0x696518ec],0x51
  414e2a:	icebp  
  414e2b:	push   DWORD PTR [esi+0x7f]
  414e2e:	sbb    ah,0xef
  414e31:	mov    ebx,0x7d994ef2
  414e36:	cs retf 
  414e38:	sbb    ch,bl
  414e3a:	mov    al,ds:0xc615f6ab
  414e3f:	test   BYTE PTR [esp+esi*4],al
  414e42:	(bad)  
  414e43:	pop    esi
  414e44:	out    0x60,al
  414e46:	fbstp  TBYTE PTR [ebp+edx*2+0x3f32e1cf]
  414e4d:	sub    eax,0xad2961ca
  414e52:	xchg   edx,eax
  414e53:	pop    esi
  414e54:	shl    al,0xa3
  414e57:	das    
  414e58:	xor    eax,edi
  414e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5b:	add    BYTE PTR [ebp+0x77bbdd0e],bh
  414e61:	pop    eax
  414e62:	mov    bh,0x59
  414e64:	and    DWORD PTR [ebx+0x5269ec47],edi
  414e6a:	fist   WORD PTR [ebx]
  414e6c:	xchg   ecx,eax
  414e6d:	fdivr  QWORD PTR [edi]
  414e6f:	inc    esi
  414e70:	into   
  414e71:	mov    ebp,0xd047f4c5
  414e76:	mov    DWORD PTR [eax+0x24343ff6],ebx
  414e7c:	std    
  414e7d:	xlat   BYTE PTR ds:[ebx]
  414e7e:	ins    DWORD PTR es:[edi],dx
  414e7f:	scas   al,BYTE PTR es:[edi]
  414e80:	shr    DWORD PTR [esi-0x36],cl
  414e83:	rcr    BYTE PTR [ebx+0x79],1
  414e86:	es pushf 
  414e88:	push   eax
  414e89:	cs jmp 0x414e84
  414e8c:	adc    BYTE PTR [ebx-0x1f],dl
  414e8f:	xchg   edi,eax
  414e90:	(bad)  
  414e92:	jle    0x414eae
  414e94:	int3   
  414e95:	jp     0x414e76
  414e97:	dec    esp
  414e98:	js     0x414ed8
  414e9a:	push   edx
  414e9b:	fdiv   QWORD PTR [ecx+0x40]
  414e9e:	push   edi
  414e9f:	icebp  
  414ea0:	dec    esp
  414ea1:	jmp    0x45db:0x146dcb48
  414ea8:	aas    
  414ea9:	sbb    dl,cl
  414eab:	mov    al,ds:0x775b0d32
  414eb0:	lock dec esp
  414eb2:	or     eax,0x3f34777f
  414eb7:	pop    esp
  414eb8:	inc    edx
  414eb9:	fmul   st(3),st
  414ebb:	add    al,0x98
  414ebd:	add    eax,0x6ff00d17
  414ec2:	pop    ebp
  414ec3:	fiadd  DWORD PTR [ecx+0x3e030b4]
  414ec9:	mov    ds:0x1ac9284,eax
  414ece:	fstp   TBYTE PTR [eax]
  414ed0:	push   edi
  414ed1:	xor    al,0xf3
  414ed3:	enter  0x5f4c,0x5
  414ed7:	mov    dh,0xa1
  414ed9:	mov    edi,0x1a807875
  414ede:	sbb    eax,0x32f5aa6d
  414ee3:	cld    
  414ee4:	xchg   ebp,eax
  414ee5:	push   esp
  414ee6:	sub    dl,BYTE PTR [ebx]
  414ee8:	das    
  414ee9:	loop   0x414ed4
  414eeb:	(bad)  
  414eec:	fldenv [ebp-0x36a4202]
  414ef2:	fimul  WORD PTR [esi]
  414ef4:	and    al,0x7a
  414ef6:	not    BYTE PTR [ecx+0x1e10bbc7]
  414efc:	and    ecx,DWORD PTR [ebx]
  414efe:	inc    ebp
  414eff:	add    ecx,DWORD PTR [edi-0x2e1c5aa8]
  414f05:	mov    esi,0xc0ac768a
  414f0a:	mov    al,ds:0xecfbcdbb
  414f0f:	fbld   TBYTE PTR [ebx-0x2d]
  414f12:	inc    edx
  414f13:	pop    ebp
  414f14:	icebp  
  414f15:	cmp    eax,0x87dc59d7
  414f1a:	xchg   edi,eax
  414f1b:	dec    ecx
  414f1c:	mov    bh,0x65
  414f1e:	sbb    al,0xdc
  414f20:	mov    cl,0x5c
  414f22:	pop    esp
  414f23:	pop    eax
  414f24:	jns    0x414f0d
  414f26:	xor    dl,ch
  414f28:	ins    DWORD PTR es:[edi],dx
  414f29:	int    0x95
  414f2b:	push   eax
  414f2c:	in     eax,dx
  414f2d:	loope  0x414f54
  414f2f:	lahf   
  414f30:	pop    esi
  414f31:	and    dh,BYTE PTR [edi]
  414f33:	(bad)  
  414f34:	(bad)  
  414f35:	pop    ecx
  414f36:	sbb    al,0x99
  414f38:	sbb    al,0xb0
  414f3a:	sub    DWORD PTR [edi],eax
  414f3c:	sub    eax,0x1fe4a9d3
  414f41:	(bad)  
  414f42:	inc    ebx
  414f43:	jo     0x414efa
  414f45:	icebp  
  414f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f47:	sub    al,0xa9
  414f49:	pop    ebp
  414f4a:	cdq    
  414f4b:	dec    esp
  414f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4d:	rol    BYTE PTR gs:[ebp+0x75],1
  414f51:	jno    0x414f42
  414f53:	(bad)  
  414f54:	and    bh,BYTE PTR [ecx]
  414f56:	lahf   
  414f57:	sub    eax,0x90bf3be4
  414f5c:	inc    ebx
  414f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5e:	aaa    
  414f5f:	sti    
  414f60:	xor    BYTE PTR [ebp+0x48a9b5c4],dl
  414f66:	icebp  
  414f67:	fbstp  TBYTE PTR [edi+0x40642169]
  414f6d:	mov    dh,0xd2
  414f6f:	add    BYTE PTR [edi-0x647facca],bl
  414f75:	sbb    ah,ah
  414f77:	jo     0x414f6f
  414f79:	ds ins DWORD PTR es:[edi],dx
  414f7b:	loopne 0x414fed
  414f7d:	add    BYTE PTR [eax+ebx*2+0x68941cb6],0xdf
  414f85:	or     eax,0xe64d0574
  414f8a:	ds icebp 
  414f8c:	cmp    ch,0x80
  414f8f:	out    0x3b,al
  414f91:	imul   edi,eax,0x4c
  414f94:	int3   
  414f95:	and    bh,BYTE PTR [edx-0x5a]
  414f98:	mov    dh,0x15
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	sub    dl,BYTE PTR [eax+0x52]
  414f9e:	in     eax,dx
  414f9f:	test   eax,0xba100ec3
  414fa4:	push   ecx
  414fa5:	sub    DWORD PTR [edx],esp
  414fa7:	push   ebx
  414fa8:	push   ecx
  414fa9:	or     dl,BYTE PTR [eax]
  414fab:	push   esi
  414fac:	and    edi,DWORD PTR [edx]
  414fae:	sub    bh,BYTE PTR [ebx-0xc]
  414fb1:	adc    al,BYTE PTR [ebx+0x54]
  414fb4:	jmp    0xa360eab8
  414fb9:	(bad)  
  414fba:	ds int 0x48
  414fbd:	mov    WORD PTR [ebx-0x63e66444],?
  414fc3:	setbe  BYTE PTR [ecx-0x18]
  414fc7:	(bad)  
  414fc8:	lods   eax,DWORD PTR ds:[esi]
  414fc9:	test   eax,0x3fdef7d0
  414fce:	xor    eax,0xdceff408
  414fd3:	pop    ebp
  414fd4:	add    DWORD PTR [edi-0x75],esi
  414fd7:	push   0x91cde2ba
  414fdc:	jo     0x414f93
  414fde:	ins    BYTE PTR es:[edi],dx
  414fdf:	dec    edx
  414fe0:	or     BYTE PTR [ecx],0x8
  414fe3:	ins    DWORD PTR es:[edi],dx
  414fe4:	mov    eax,0x92f66756
  414fe9:	ror    bh,1
  414feb:	shl    BYTE PTR [eax-0x360f9486],0xb1
  414ff2:	je     0x415051
  414ff4:	lods   eax,DWORD PTR ds:[esi]
  414ff5:	adc    ch,bh
  414ff7:	fimul  WORD PTR [edi+0x44d428ab]
  414ffd:	inc    edi
  414ffe:	jge    0x414fda
  415000:	and    bl,BYTE PTR [esi-0x19661b0b]
  415006:	jle    0x414fba
  415008:	pop    edx
  415009:	iret   
  41500a:	imul   ebp,DWORD PTR [ebx*1+0x2192969a],0xffffffbc
  415012:	out    dx,al
  415013:	in     al,dx
  415014:	pop    ebx
  415015:	popa   
  415016:	je     0x414fbb
  415018:	jb     0x414fb7
  41501a:	iret   
  41501b:	push   eax
  41501c:	pop    edx
  41501d:	std    
  41501e:	xor    cl,al
  415020:	or     al,0x99
  415023:	test   esp,0x7c1299ec
  415029:	sar    DWORD PTR ds:0xde14c0f4,0x54
  415030:	adc    ah,ah
  415032:	mov    eax,ds:0xfe161b04
  415037:	adc    eax,0xeaf0aaf9
  41503c:	out    0xbf,al
  41503e:	addr16 cld 
  415040:	xchg   edi,eax
  415041:	mov    ebx,0x29abf7dc
  415046:	xchg   esi,eax
  415047:	ins    BYTE PTR es:[edi],dx
  415048:	and    al,0x4f
  41504a:	and    al,0xba
  41504c:	mov    eax,0xf38ccf48
  415051:	(bad)  
  415052:	pop    edi
  415053:	fwait
  415054:	lds    ebx,FWORD PTR [edx-0x5d806474]
  41505a:	cmp    dh,0x7e
  41505d:	stos   DWORD PTR es:[edi],eax
  41505e:	mov    ds:0xb23a2f14,al
  415063:	ret    
  415064:	mov    BYTE PTR [ebp+0x8],cl
  415067:	sub    bh,BYTE PTR [ecx]
  415069:	cmp    ebx,DWORD PTR [esi+eiz*8]
  41506c:	push   esp
  41506d:	xor    al,0x84
  41506f:	cli    
  415070:	and    eax,0xad42c58d
  415075:	popf   
  415076:	mov    ebp,0x6cd7ee1e
  41507b:	shl    ebx,0x6a
  41507e:	jmp    0xa8df:0xbe718d42
  415085:	in     al,0xa3
  415087:	fs mov dh,0x65
  41508a:	mov    cl,BYTE PTR [esi+0x693d69a4]
  415090:	sub    eax,0x85775704
  415095:	jp     0x415029
  415097:	add    esp,DWORD PTR [ecx]
  415099:	pop    ebx
  41509a:	push   esp
  41509b:	xchg   DWORD PTR [ecx+esi*1],edx
  41509e:	nop
  41509f:	inc    edx
  4150a0:	(bad)  
  4150a1:	mov    al,ds:0xddebb332
  4150a6:	jno    0x415043
  4150a8:	sbb    bh,BYTE PTR [ebp+0x6b]
  4150ab:	aad    0xa7
  4150ad:	iret   
  4150ae:	imul   ecx,DWORD PTR [ecx-0x64869477],0x3c6b9060
  4150b8:	mov    eax,0x8d9f59ad
  4150bd:	loop   0x41505d
  4150bf:	adc    ebx,ebp
  4150c1:	ja     0x415086
  4150c3:	push   ebx
  4150c4:	cmp    BYTE PTR [eax-0x24],ch
  4150c7:	js     0x415116
  4150c9:	mov    bh,0x55
  4150cb:	mov    dh,0x85
  4150cd:	test   eax,0x846a3457
  4150d2:	xchg   DWORD PTR [ebx-0x1fe56b91],esi
  4150d8:	jmp    0xcf8f74c
  4150dd:	xlat   BYTE PTR ds:[ebx]
  4150de:	pusha  
  4150df:	dec    eax
  4150e0:	ret    0xb685
  4150e3:	scas   al,BYTE PTR es:[edi]
  4150e4:	rol    BYTE PTR [ebx-0x20],1
  4150e7:	clc    
  4150e8:	int    0x62
  4150ea:	push   0xffffffe8
  4150ec:	test   BYTE PTR [eax-0x38],al
  4150ef:	push   0xa0d2f003
  4150f4:	push   ecx
  4150f5:	clc    
  4150f6:	scas   eax,DWORD PTR es:[edi]
  4150f7:	inc    edx
  4150f8:	sub    BYTE PTR [ebx+esi*8],bl
  4150fb:	mov    ds:0x39733a58,al
  415100:	adc    BYTE PTR [edi+0x7072c16d],0x56
  415107:	ins    BYTE PTR es:[edi],dx
  415108:	pop    esi
  415109:	jp     0x415093
  41510b:	clc    
  41510c:	or     al,0xcf
  41510e:	fsubr  QWORD PTR [eax+ebp*4-0x3f]
  415112:	sti    
  415113:	sbb    eax,0x4c17d70c
  415118:	std    
  415119:	mov    edi,0xbffc5d52
  41511e:	in     al,dx
  41511f:	jg     0x415164
  415121:	fisttp DWORD PTR [esp+ebp*1]
  415124:	jb     0x415198
  415126:	jl     0x415138
  415128:	push   0x1155b914
  41512d:	call   0xf8d5793e
  415132:	inc    edi
  415133:	mov    ?,WORD PTR [ecx]
  415135:	cli    
  415136:	dec    ebx
  415137:	clc    
  415138:	push   0xffffffe1
  41513a:	(bad)  
  41513b:	(bad)  
  41513c:	or     eax,0x3116b27e
  415141:	stc    
  415142:	pushf  
  415143:	enter  0xda00,0xca
  415147:	ss and al,0x39
  41514a:	jnp    0x4151cb
  41514c:	mov    ch,0x78
  41514e:	mov    bl,BYTE PTR [edi]
  415150:	push   0xffffffe1
  415152:	fst    DWORD PTR [esi+0x33]
  415155:	(bad)  
  415156:	jle    0x4150f8
  415158:	inc    ebp
  415159:	arpl   WORD PTR [edx-0x2437fa0d],ax
  41515f:	mov    dh,0x9
  415161:	cmp    esi,0x5b2c719b
  415167:	mov    dl,0x44
  415169:	sub    cl,ch
  41516b:	mov    WORD PTR [ebx],ss
  41516d:	add    BYTE PTR [eax],bh
  41516f:	add    dl,ch
  415171:	sub    BYTE PTR [edx+0x1289a05],dh
  415177:	add    al,BYTE PTR [ebx]
  415179:	(bad)  
  41517b:	lds    esp,FWORD PTR [edx]
  41517d:	(bad)  [edi+edx*4+0x17dad861]
  415184:	push   ds
  415185:	js     0x415147
  415187:	repnz cmc 
  415189:	sar    ah,cl
  41518b:	pop    ebp
  41518c:	nop
  41518d:	ja     0x415149
  41518f:	sbb    eax,0xd18b77c4
  415194:	ins    DWORD PTR es:[edi],dx
  415195:	add    eax,0xfd240781
  41519a:	mov    BYTE PTR [edi*2+0x3f9744b5],dh
  4151a1:	mov    edi,0xecfacfa3
  4151a6:	retf   0xc1b9
  4151a9:	(bad)  
  4151aa:	ss or  eax,0x3a7d0cb8
  4151b0:	or     al,0xe3
  4151b2:	jo     0x4151d3
  4151b4:	sub    ebx,DWORD PTR [ebp+0x24d2862d]
  4151ba:	xor    al,0x25
  4151bc:	xchg   edi,eax
  4151bd:	stos   DWORD PTR es:[edi],eax
  4151be:	mov    eax,ds:0xc4c08663
  4151c3:	hlt    
  4151c4:	mov    al,ds:0x15533d32
  4151c9:	retf   
  4151ca:	xchg   ebp,eax
  4151cb:	jbe    0x4151a4
  4151cd:	add    DWORD PTR [ecx-0x22],0x2752716
  4151d4:	addr16 (bad) 
  4151d6:	loop   0x415176
  4151d8:	stc    
  4151d9:	add    ch,BYTE PTR [ebp+eax*2+0x35fe59d4]
  4151e0:	mov    al,ds:0x89ee806
  4151e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e6:	pop    ebx
  4151e7:	pop    ebx
  4151e8:	test   DWORD PTR [ebx+0x5f],esi
  4151eb:	sbb    BYTE PTR [edi],ch
  4151ed:	lods   eax,DWORD PTR ds:[esi]
  4151ee:	mov    ah,0xf0
  4151f0:	add    esp,DWORD PTR [edx]
  4151f2:	dec    ebp
  4151f3:	pop    edx
  4151f4:	inc    esp
  4151f5:	mov    eax,0x61705e7a
  4151fa:	jmp    0x3a226a48
  4151ff:	dec    ebx
  415200:	pop    esi
  415201:	sub    eax,0x2696517d
  415206:	push   ebp
  415207:	jecxz  0x415248
  415209:	mov    bh,0x13
  41520b:	add    BYTE PTR [ebx],0x33
  41520e:	sbb    DWORD PTR [esi],ebp
  415210:	sbb    al,0x27
  415212:	push   edx
  415213:	push   edx
  415214:	call   0xcec00172
  415219:	shr    esp,1
  41521b:	dec    eax
  41521c:	jmp    0xcc95:0x24679f3c
  415223:	jge    0x4151cc
  415225:	mul    DWORD PTR [ecx-0x2390d895]
  41522b:	(bad)  
  41522c:	jmp    0x2a79b1db
  415231:	ins    BYTE PTR es:[edi],dx
  415232:	jns    0x4152a4
  415234:	sub    BYTE PTR [esi+ecx*2-0x52802143],ah
  41523b:	test   BYTE PTR [ecx],ah
  41523d:	(bad)
  415240:	pop    ds
  415241:	test   BYTE PTR [ebp-0x7cc9d40c],dl
  415247:	iret   
  415248:	sub    eax,0xfd5e8939
  41524d:	in     al,dx
  41524e:	bound  ecx,QWORD PTR [ebx]
  415250:	lods   eax,DWORD PTR ds:[esi]
  415251:	rcr    BYTE PTR [edx-0x3a09df5e],1
  415257:	sbb    ecx,DWORD PTR [eax]
  415259:	retf   0xaa28
  41525c:	jp     0x41528e
  41525e:	aam    0xb8
  415260:	rcl    DWORD PTR [ecx],0x58
  415263:	mov    ds:0xc2b67298,eax
  415268:	mov    DWORD PTR [esi+0x419a3e7c],edx
  41526e:	(bad)  
  41526f:	adc    ebp,DWORD PTR [ecx-0x2b]
  415272:	call   0x5aee:0xa175d631
  415279:	pop    ebp
  41527a:	sbb    esp,eax
  41527c:	mov    ch,0xf8
  41527e:	push   ds
  41527f:	les    edi,FWORD PTR [eax]
  415281:	jle    0x415269
  415283:	imul   eax,DWORD PTR [esp+eiz*4-0x64a3fda3],0xa1f6ffbe
  41528e:	add    eax,DWORD PTR [ecx-0x4d]
  415291:	lods   al,BYTE PTR ds:[esi]
  415292:	fnsave [ecx+eiz*2-0x71]
  415296:	mov    esi,0xd59d641a
  41529b:	stos   BYTE PTR es:[edi],al
  41529c:	into   
  41529d:	into   
  41529e:	add    al,0x35
  4152a0:	or     bh,al
  4152a2:	fsub   QWORD PTR [ebx*8+0x5cf6fcfa]
  4152a9:	hlt    
  4152aa:	add    eax,DWORD PTR [edi-0x4bc551e7]
  4152b0:	cdq    
  4152b1:	cli    
  4152b2:	in     eax,dx
  4152b3:	push   DWORD PTR [esp+edx*4-0x6]
  4152b7:	icebp  
  4152b8:	mov    cl,0x95
  4152ba:	jecxz  0x4152e1
  4152bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152bd:	in     al,dx
  4152be:	inc    edx
  4152bf:	ins    DWORD PTR es:[edi],dx
  4152c0:	fistp  WORD PTR [eax-0x4]
  4152c3:	push   edx
  4152c4:	inc    ecx
  4152c5:	push   esp
  4152c6:	ins    BYTE PTR es:[edi],dx
  4152c7:	in     eax,0x40
  4152c9:	pop    ebx
  4152ca:	jo     0x415325
  4152cc:	or     al,0xb7
  4152ce:	mov    BYTE PTR [eax+0x42a7fcfc],dl
  4152d4:	loope  0x4152be
  4152d6:	cmp    esp,DWORD PTR [edi-0x28cd0a15]
  4152dc:	jne    0x4152d3
  4152de:	sbb    ah,BYTE PTR [ebx]
  4152e0:	call   0x7a6a:0xe88f6810
  4152e7:	outs   dx,DWORD PTR ds:[esi]
  4152e8:	outs   dx,BYTE PTR ds:[esi]
  4152e9:	js     0x41534f
  4152eb:	jb     0x4152b9
  4152ed:	dec    esi
  4152ee:	lods   al,BYTE PTR ds:[esi]
  4152ef:	in     al,0x7d
  4152f1:	mov    ah,0x8d
  4152f3:	test   eax,0x2fe4a0bd
  4152f8:	add    BYTE PTR [ecx-0x54],ch
  4152fb:	xlat   BYTE PTR ds:[ebx]
  4152fc:	dec    edx
  4152fd:	jg     0x41534c
  4152ff:	nop
  415300:	adc    ebx,0x2fe74582
  415306:	xchg   esp,eax
  415307:	cmp    eax,0x60303066
  41530c:	aas    
  41530d:	xchg   ecx,eax
  41530e:	mov    ch,0xe9
  415310:	fild   WORD PTR [ecx+0xd4e9a]
  415316:	aaa    
  415317:	push   ecx
  415318:	not    ebp
  41531a:	dec    ebx
  41531b:	jne    0x4152cf
  41531d:	jb     0x415369
  41531f:	jmp    0x6899:0x1b5a1f38
  415326:	aam    0x47
  415328:	or     DWORD PTR [ecx-0x1e6074a2],0xf26699e3
  415332:	das    
  415333:	in     eax,dx
  415334:	ror    DWORD PTR [edi+edi*4-0x61],1
  415338:	fstp   QWORD PTR ds:0x104d9467
  41533e:	cs (bad) 
  415340:	retf   
  415341:	inc    ebx
  415342:	int3   
  415343:	and    DWORD PTR [edi],ebp
  415345:	and    BYTE PTR [eax],al
  415347:	push   ss
  415348:	cmp    bh,al
  41534a:	int3   
  41534b:	into   
  41534c:	push   esi
  41534d:	and    DWORD PTR [ebx+0x49],ecx
  415350:	and    BYTE PTR [esi+0x32efef5f],cl
  415356:	jno    0x4153c0
  415358:	mov    esp,0xd562debb
  41535d:	fnstcw WORD PTR [ecx-0x4d]
  415360:	stc    
  415361:	mov    bh,0x47
  415363:	adc    ecx,DWORD PTR [esi-0x17]
  415366:	push   ss
  415367:	pop    eax
  415368:	dec    edx
  415369:	pushf  
  41536a:	scas   eax,DWORD PTR es:[edi]
  41536b:	pop    ebp
  41536c:	ret    0x23da
  41536f:	ins    DWORD PTR es:[edi],dx
  415370:	adc    eax,0x6c7a9282
  415375:	cmc    
  415376:	in     eax,0x6e
  415378:	push   cs
  415379:	outs   dx,DWORD PTR ds:[esi]
  41537a:	jmp    0x3117:0xc7977c0a
  415381:	sbb    ecx,DWORD PTR [ebp-0x37]
  415384:	jmp    0x4153fd
  415386:	or     BYTE PTR [ecx+0x15],0x8f
  41538a:	xchg   ecx,eax
  41538b:	sub    al,0xef
  41538d:	fcom   QWORD PTR [eax]
  41538f:	xor    esi,DWORD PTR [edi-0x8]
  415392:	and    DWORD PTR [ebp-0x3a],esi
  415395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415396:	fwait
  415397:	jmp    0x3f92054
  41539c:	ret    0x3ab7
  41539f:	jmp    0x41539a
  4153a1:	outs   dx,BYTE PTR ds:[esi]
  4153a2:	jbe    0x415344
  4153a4:	xchg   edx,eax
  4153a5:	mov    eax,ds:0xae4e13d6
  4153aa:	fisttp DWORD PTR [edi+0x64]
  4153ad:	mov    ch,0xe0
  4153af:	iret   
  4153b0:	sub    dh,BYTE PTR [eax+0x4559e05b]
  4153b6:	mov    ebx,0x64993e23
  4153bb:	jge    0x415376
  4153bd:	sub    ch,BYTE PTR [eax]
  4153bf:	push   ebp
  4153c0:	and    al,BYTE PTR es:0x95f589fb
  4153c7:	retf   0xfaa8
  4153ca:	mov    dl,0xa2
  4153cc:	ds push ds
  4153ce:	jp     0x415414
  4153d0:	(bad)  
  4153d1:	sar    DWORD PTR [esi+0x28aba874],1
  4153d7:	jmp    0x4153f0
  4153d9:	ss inc ecx
  4153db:	jecxz  0x415449
  4153dd:	xor    dl,BYTE PTR [edi-0x6849fad9]
  4153e3:	into   
  4153e4:	jb     0x415379
  4153e6:	sub    BYTE PTR [edi],0x0
  4153e9:	mov    ebx,DWORD PTR [ebp+0x4c2fda05]
  4153ef:	push   ebx
  4153f0:	push   ebp
  4153f1:	fidiv  WORD PTR [ebp+eiz*2+0x37]
  4153f5:	mov    esi,0xcba2ae3f
  4153fa:	mul    BYTE PTR [ebp+0x34febc67]
  415400:	xchg   ebp,eax
  415401:	push   ds
  415402:	mov    ebx,0xaa12ab26
  415407:	xchg   ebx,eax
  415408:	ds pop eax
  41540a:	outs   dx,DWORD PTR ds:[esi]
  41540b:	push   edi
  41540c:	and    BYTE PTR [eax+0x733e4635],0xda
  415413:	(bad)  
  415415:	cmp    bh,BYTE PTR [edx-0x3f9543b8]
  41541b:	je     0x41544d
  41541d:	or     DWORD PTR [ebp+edx*1+0x6d],0x53e0f5e8
  415425:	add    DWORD PTR [eax+0x29],ebx
  415428:	ins    BYTE PTR es:[edi],dx
  415429:	push   ds
  41542a:	aam    0xde
  41542c:	aaa    
  41542d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41542e:	cwde   
  41542f:	loopne 0x4154a0
  415431:	xor    edx,DWORD PTR [esi+0x5ad9632e]
  415437:	mov    eax,0x90bd7e40
  41543c:	popf   
  41543d:	mov    dh,BYTE PTR [ebp-0x3f]
  415440:	and    bh,0x49
  415443:	bound  edx,QWORD PTR [eax+eax*1]
  415446:	inc    esp
  415447:	pusha  
  415448:	rcl    DWORD PTR [eax*4+0x3ae1a343],cl
  41544f:	repnz sub BYTE PTR [ebx],ah
  415452:	push   esp
  415453:	stos   BYTE PTR es:[edi],al
  415454:	pop    es
  415455:	jmp    0x9d79:0xb5caed89
  41545c:	outs   dx,BYTE PTR ds:[esi]
  41545d:	jo     0x41548d
  41545f:	inc    ebp
  415460:	push   esi
  415461:	bound  ebx,QWORD PTR [esi]
  415463:	add    bh,BYTE PTR [ebx*1+0x45ffab9d]
  41546a:	mov    al,ds:0xed5847d7
  41546f:	cmp    DWORD PTR [edi-0x6c3aa0a8],ecx
  415475:	jbe    0x415408
  415477:	sub    BYTE PTR [ecx],al
  415479:	sar    DWORD PTR [eax+ebx*4+0x63],1
  41547d:	pusha  
  41547e:	sub    BYTE PTR [ebx+edx*4-0x64],0x58
  415483:	addr16 jne 0x415469
  415486:	cli    
  415487:	pop    ebp
  415488:	push   edi
  415489:	lahf   
  41548a:	leave  
  41548b:	mov    ah,dl
  41548d:	mov    ch,0xd2
  41548f:	rcl    ebx,cl
  415491:	pusha  
  415492:	test   eax,0xa37f861d
  415497:	inc    edi
  415498:	iret   
  415499:	mov    cl,0x53
  41549b:	lods   al,BYTE PTR ds:[esi]
  41549c:	call   eax
  41549e:	shr    BYTE PTR [esi+0x1bf60bf],0x62
  4154a5:	cld    
  4154a6:	dec    ebx
  4154a7:	xchg   ebx,eax
  4154a8:	aaa    
  4154a9:	mov    cl,dh
  4154ab:	cmp    ch,BYTE PTR [edi]
  4154ad:	jae    0x415516
  4154af:	ffreep st(0)
  4154b1:	adc    ebp,DWORD PTR [esi+0x573d1ef8]
  4154b7:	pop    edx
  4154b8:	mov    ss,WORD PTR [edi+0x22]
  4154bb:	out    dx,eax
  4154bc:	lds    edx,FWORD PTR [ecx-0x7706cce2]
  4154c2:	xchg   ecx,eax
  4154c3:	iret   
  4154c4:	ins    DWORD PTR es:[edi],dx
  4154c5:	(bad)  
  4154c6:	or     eax,0x6ff04453
  4154cb:	xor    ebx,DWORD PTR [ecx-0x32f6d968]
  4154d1:	lods   al,BYTE PTR ds:[esi]
  4154d2:	fcomp  st(4)
  4154d4:	dec    ebx
  4154d5:	add    DWORD PTR [ecx],esi
  4154d7:	sti    
  4154d8:	dec    ecx
  4154d9:	adc    al,0xe2
  4154db:	mov    ecx,0xd56f0409
  4154e0:	xchg   edi,eax
  4154e1:	sti    
  4154e2:	adc    eax,0xd1f42e41
  4154e7:	jnp    0x415518
  4154e9:	aam    0x56
  4154eb:	into   
  4154ec:	xor    eax,0xeb92d0eb
  4154f1:	push   esi
  4154f2:	adc    al,0x0
  4154f4:	push   eax
  4154f5:	(bad)  
  4154f6:	xchg   edi,eax
  4154f7:	adc    eax,0x3cdbceb5
  4154fc:	stos   BYTE PTR es:[edi],al
  4154fd:	test   BYTE PTR [eax-0x46a30ae2],al
  415503:	mov    ds:0x87f62a35,eax
  415508:	popf   
  415509:	into   
  41550a:	popf   
  41550b:	test   BYTE PTR [ebx-0x5a591c1c],al
  415511:	ror    DWORD PTR [esi+edi*2-0x2eaa10c9],cl
  415518:	jle    0x4154ec
  41551a:	mov    cs,esp
  41551c:	iret   
  41551d:	push   esi
  41551e:	dec    ecx
  41551f:	je     0x41550f
  415521:	stos   DWORD PTR es:[edi],eax
  415522:	dec    ebx
  415523:	mov    al,ds:0xa1dc9b65
  415528:	dec    eax
  415529:	in     eax,0xb0
  41552b:	push   esp
  41552c:	loopne 0x4154df
  41552e:	jmp    0x9cee:0xf2726a83
  415535:	xor    BYTE PTR [ebx+0x32484bff],0xfc
  41553c:	test   DWORD PTR [eax],0xb50968a9
  415542:	jbe    0x41556b
  415544:	inc    eax
  415545:	push   es
  415546:	cli    
  415547:	(bad)  
  415548:	ja     0x4154d8
  41554a:	mov    esp,0xee965631
  41554f:	fdiv   st(2),st
  415551:	in     eax,0x86
  415553:	push   ds
  415554:	rcr    BYTE PTR [ebx-0xc],cl
  415557:	add    edx,DWORD PTR [eax-0x2c]
  41555a:	stc    
  41555b:	sbb    BYTE PTR [esi],0x53
  41555e:	mov    ch,0xbb
  415560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415561:	jg     0x41555c
  415563:	sub    DWORD PTR [eax],ebp
  415565:	(bad)  
  415566:	leave  
  415567:	dec    ecx
  415568:	push   DWORD PTR [esi+0x1b]
  41556b:	xor    al,0x11
  41556d:	ret    
  41556e:	xchg   edi,eax
  41556f:	mov    cl,0xc
  415571:	ins    BYTE PTR es:[edi],dx
  415572:	jne    0x4154f7
  415574:	fcmovnbe st,st(6)
  415576:	in     eax,dx
  415577:	hlt    
  415578:	jmp    0xe9abaaa8
  41557d:	push   ecx
  41557e:	pop    esp
  41557f:	std    
  415580:	cmp    BYTE PTR [ebp+0x66],dl
  415583:	jno    0x415546
  415585:	dec    esi
  415586:	in     al,0xe3
  415588:	cld    
  415589:	jp     0x4155ca
  41558b:	mov    ?,WORD PTR [eax+0x51b7f3aa]
  415591:	cmp    eax,DWORD PTR [ecx+0x4b]
  415594:	aas    
  415595:	ret    0x4a37
  415598:	push   cs
  415599:	inc    ecx
  41559a:	(bad)
  41559d:	dec    esp
  41559e:	popa   
  41559f:	add    BYTE PTR [eax+0x34],ch
  4155a2:	aas    
  4155a3:	or     eax,DWORD PTR [edx-0x3d]
  4155a6:	jg     0x4155f7
  4155a8:	add    al,0x38
  4155aa:	fdiv   st(5),st
  4155ac:	loop   0x415548
  4155ae:	adc    al,0xd5
  4155b0:	jle    0x415582
  4155b2:	aad    0x10
  4155b4:	jmp    0xf345:0x5144a48c
  4155bb:	xchg   esi,eax
  4155bc:	(bad)  
  4155be:	into   
  4155bf:	call   0x86ff:0x757873d2
  4155c6:	add    bh,BYTE PTR [esi]
  4155c8:	xor    esp,ebp
  4155ca:	adc    al,0xa7
  4155cc:	sub    al,0x8a
  4155ce:	fdiv   DWORD PTR [edi-0x332e60f0]
  4155d4:	sti    
  4155d5:	ins    BYTE PTR es:[edi],dx
  4155d6:	hlt    
  4155d7:	xor    DWORD PTR [ecx],ebp
  4155d9:	mov    dh,0xd4
  4155db:	int    0x18
  4155dd:	out    0x65,eax
  4155df:	cmp    ebx,esp
  4155e1:	test   DWORD PTR ds:0x954b448f,edi
  4155e7:	stos   DWORD PTR es:[edi],eax
  4155e8:	cwde   
  4155e9:	push   eax
  4155ea:	call   0x741361a0
  4155ef:	cmp    bl,BYTE PTR [edx+ecx*4-0x28]
  4155f3:	scas   al,BYTE PTR es:[edi]
  4155f4:	xchg   edi,eax
  4155f5:	sub    cl,bh
  4155f7:	call   0xc73e6dc1
  4155fc:	sub    ebx,ebx
  4155fe:	mov    edx,0x34af5737
  415603:	mov    cl,0x1e
  415605:	jmp    0x7944:0x5e6cff50
  41560c:	je     0x415601
  41560e:	inc    edx
  41560f:	xlat   BYTE PTR ds:[ebx]
  415610:	adc    cl,BYTE PTR [edi+ecx*2+0x45]
  415614:	push   0xfffffffe
  415616:	or     DWORD PTR [ecx],esp
  415618:	enter  0xc6b8,0xd
  41561c:	es jno 0x415621
  41561f:	cld    
  415620:	je     0x415684
  415622:	ja     0x415600
  415624:	call   0xa0b51f76
  415629:	mov    ebx,DWORD PTR [ebx-0x4fe65449]
  41562f:	jae    0x41568a
  415631:	mov    al,ds:0x28a3af4d
  415636:	add    BYTE PTR [ebx+0x39ba779],al
  41563c:	add    eax,0x119f43bb
  415641:	mov    al,BYTE PTR [eax-0x398f3e1b]
  415647:	pop    esp
  415648:	push   edx
  415649:	mov    al,ds:0x41d7a1a7
  41564e:	dec    edi
  41564f:	push   edi
  415650:	push   esi
  415651:	rcr    DWORD PTR [ebx],1
  415653:	adc    al,0x27
  415655:	ds mov bh,0x6f
  415658:	(bad)  
  415659:	cs dec edi
  41565b:	sbb    DWORD PTR [edi],esi
  41565d:	lods   al,BYTE PTR ds:[esi]
  41565e:	outs   dx,BYTE PTR cs:[esi]
  415660:	leave  
  415661:	add    ch,0x7
  415664:	add    BYTE PTR [ebp-0x334071cc],ah
  41566a:	fwait
  41566b:	xor    al,0x4b
  41566d:	lods   eax,DWORD PTR ds:[esi]
  41566e:	lods   al,BYTE PTR ds:[esi]
  41566f:	jmp    0x29e2:0x88884b7d
  415676:	xchg   ecx,eax
  415677:	jne    0x415680
  415679:	pop    es
  41567a:	add    BYTE PTR [eax+0x79],bl
  41567d:	adc    eax,0xe10d5baf
  415682:	or     ebp,DWORD PTR [edx+eax*1+0x5218d8a2]
  415689:	adc    cl,cl
  41568b:	(bad)  
  41568c:	xor    bh,ah
  41568e:	inc    esi
  41568f:	or     DWORD PTR ds:0xa9ec399d,edi
  415695:	nop
  415696:	lds    ecx,FWORD PTR [eax+0x34]
  415699:	nop
  41569a:	shr    dh,cl
  41569c:	es das 
  41569e:	push   0x79bc9d67
  4156a3:	cmp    cl,BYTE PTR ss:[ecx]
  4156a6:	pop    ss
  4156a7:	enter  0x7ff4,0x3e
  4156ab:	call   0x7a71:0x5c2dbe69
  4156b2:	cmp    ah,BYTE PTR [ebp+0x46]
  4156b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b6:	and    DWORD PTR [edx+esi*8+0x7dedf32a],edx
  4156bd:	fwait
  4156be:	sbb    ah,bl
  4156c0:	nop
  4156c1:	add    dl,BYTE PTR [edx-0x7a2f0dc6]
  4156c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c8:	out    0x82,al
  4156ca:	push   cs
  4156cb:	and    ebp,DWORD PTR ds:0xfc22782b
  4156d1:	adc    al,0xda
  4156d3:	sub    eax,esi
  4156d5:	mov    edi,0xbc52fa06
  4156da:	sbb    BYTE PTR [eax],bh
  4156dc:	dec    ecx
  4156dd:	push   ds
  4156de:	xchg   BYTE PTR [esi-0x3c],bh
  4156e1:	das    
  4156e2:	xchg   DWORD PTR [eax+0x35907252],edx
  4156e8:	jecxz  0x4156a2
  4156ea:	shl    DWORD PTR [edi-0x44a18134],1
  4156f0:	mov    ch,0xed
  4156f2:	xor    BYTE PTR [edi],dl
  4156f4:	loop   0x4156ff
  4156f6:	ds out 0x3e,eax
  4156f9:	add    BYTE PTR [ecx+0x377e4b1d],bl
  4156ff:	pusha  
  415700:	cmp    al,0x33
  415702:	jo     0x415711
  415704:	xor    ebx,DWORD PTR [edi-0x67]
  415707:	mov    cl,0x49
  415709:	rol    DWORD PTR [ebx-0x45],1
  41570c:	push   edi
  41570d:	test   al,0x1f
  41570f:	in     al,0x65
  415711:	rcl    DWORD PTR [ebx],1
  415713:	and    al,0xdf
  415715:	stos   BYTE PTR es:[edi],al
  415716:	cmp    BYTE PTR [esi-0x73],dl
  415719:	aas    
  41571a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571b:	fld    DWORD PTR [eax]
  41571d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571e:	cmc    
  41571f:	mul    DWORD PTR [ebx+0x40ea80e]
  415725:	loopne 0x4156fb
  415727:	test   BYTE PTR [edx+ebp*2+0x2ea0c9c1],0x98
  41572f:	push   esp
  415730:	jbe    0x415751
  415732:	inc    eax
  415733:	sbb    ecx,edi
  415735:	cwde   
  415736:	pop    edi
  415737:	add    esi,DWORD PTR [ecx+0x33]
  41573a:	inc    edi
  41573b:	xor    esi,DWORD PTR [ebx]
  41573d:	sbb    dl,dl
  41573f:	call   0x7786d1e3
  415744:	dec    eax
  415745:	pop    ss
  415746:	pop    esp
  415747:	(bad)  
  415748:	xor    DWORD PTR [edi],ebp
  41574a:	je     0x41575b
  41574c:	popf   
  41574d:	xchg   esp,eax
  41574e:	vandnps ymm1,ymm3,YMMWORD PTR [ebp-0x37]
  415753:	into   
  415754:	push   ebp
  415755:	and    eax,DWORD PTR [eax-0x5801001c]
  41575b:	jne    0x41574b
  41575d:	jp     0x4156f7
  41575f:	out    0x33,al
  415761:	aas    
  415762:	jbe    0x4157b7
  415764:	adc    eax,0xec3414da
  415769:	popa   
  41576a:	(bad)  
  41576b:	mov    eax,0xfe2a51c3
  415770:	pop    ds
  415771:	stos   DWORD PTR es:[edi],eax
  415772:	adc    cl,BYTE PTR [ecx]
  415774:	sar    BYTE PTR [ebx+0x5b018a15],cl
  41577a:	mov    bh,0xc0
  41577c:	outs   dx,BYTE PTR ds:[esi]
  41577d:	cmp    eax,0x4a14cc84
  415782:	mov    bh,0x5f
  415784:	(bad)  [eax+0x3f2dcb2d]
  41578a:	adc    dl,BYTE PTR [edx+0x59]
  41578d:	xor    ch,cl
  41578f:	(bad)  
  415790:	aas    
  415791:	sbb    bl,bh
  415793:	and    ebp,ecx
  415795:	add    BYTE PTR [edx+0xb16e7d3],bh
  41579b:	mov    edx,0xa50190bb
  4157a0:	pop    eax
  4157a1:	jg     0x41574f
  4157a3:	xlat   BYTE PTR ds:[ebx]
  4157a4:	cmp    bl,ah
  4157a6:	pop    ebp
  4157a7:	retf   
  4157a8:	stos   BYTE PTR es:[edi],al
  4157a9:	mov    ebp,DWORD PTR [edx+0x6f]
  4157ac:	enter  0xebc0,0x6a
  4157b0:	popf   
  4157b1:	push   ebp
  4157b2:	sbb    DWORD PTR [esi+0x6fc1a593],ebx
  4157b8:	add    edi,ebp
  4157ba:	push   ss
  4157bb:	lods   al,BYTE PTR ds:[esi]
  4157bc:	dec    esp
  4157bd:	icebp  
  4157be:	push   ebp
  4157bf:	inc    ebx
  4157c0:	cmc    
  4157c1:	cdq    
  4157c2:	inc    esp
  4157c3:	add    al,0xdd
  4157c5:	imul   esi
  4157c7:	mov    edi,0xbde033f
  4157cc:	ret    
  4157cd:	pop    edi
  4157ce:	gs push esp
  4157d0:	xchg   esi,eax
  4157d1:	dec    edi
  4157d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d3:	aaa    
  4157d4:	jmp    0xdba2:0x8b0ef341
  4157db:	jb     0x415829
  4157dd:	sub    edx,DWORD PTR [ecx]
  4157df:	cmp    al,0x84
  4157e1:	fdivp  st(7),st
  4157e3:	or     esp,DWORD PTR ds:0xf3098f3d
  4157e9:	xchg   BYTE PTR [ebx+0x651cc8a5],al
  4157ef:	xchg   BYTE PTR [eax-0x34],cl
  4157f2:	pop    eax
  4157f3:	enter  0x8e91,0xb
  4157f7:	data16 js 0x415825
  4157fa:	jae    0x4157f7
  4157fc:	sub    al,0xc
  4157fe:	or     al,0x5e
  415800:	(bad)  
  415801:	jp     0x415816
  415803:	mov    ch,0x38
  415805:	shl    BYTE PTR [ecx],1
  415807:	daa    
  415808:	cdq    
  415809:	push   esi
  41580a:	adc    eax,0xdcf69e26
  41580f:	(bad)  
  415810:	mov    cl,0x50
  415812:	mov    eax,ds:0x9678fc6
  415817:	outs   dx,DWORD PTR ds:[esi]
  415818:	push   cs
  415819:	cmp    BYTE PTR [esi],bl
  41581b:	xchg   ebp,eax
  41581c:	ror    esi,1
  41581e:	jmp    0x4157ad
  415820:	xor    al,0x1d
  415822:	push   edi
  415823:	jns    0x41582f
  415825:	jbe    0x415884
  415827:	jmp    0xcd993f32
  41582c:	in     eax,0x6f
  41582e:	sbb    BYTE PTR [edx+0x405d1f5c],0xec
  415835:	jo     0x415852
  415837:	jbe    0x41586d
  415839:	into   
  41583a:	rep lods eax,DWORD PTR ds:[esi]
  41583c:	neg    DWORD PTR [edx]
  41583e:	stc    
  41583f:	or     esp,eax
  415841:	(bad)  
  415842:	loop   0x41586e
  415844:	adc    esp,DWORD PTR [edx-0x7e1a07e6]
  41584a:	push   edi
  41584b:	fld    DWORD PTR [edx+esi*8]
  41584e:	rol    DWORD PTR [ebp+0x76],0xd2
  415852:	inc    edi
  415853:	dec    ebx
  415854:	call   0x8b7c:0x353e0f1e
  41585b:	sub    edi,DWORD PTR [edi+0x33c3da93]
  415861:	dec    ebp
  415862:	or     ax,0xfe50
  415866:	xor    eax,0xc09be33a
  41586b:	xchg   ebp,eax
  41586c:	(bad)  
  41586d:	bound  edx,QWORD PTR [edi-0x3a]
  415870:	or     eax,0xa84772e
  415875:	mov    WORD PTR [ebx-0x15],fs
  415878:	(bad)  
  415879:	jno    0x415826
  41587b:	push   ecx
  41587c:	xchg   si,ax
  41587e:	test   al,0x35
  415880:	dec    ebx
  415881:	mov    eax,0x4b4af36d
  415886:	and    edx,DWORD PTR ds:0x23d18f18
  41588c:	add    eax,0x77710251
  415891:	push   ds
  415892:	add    al,0x63
  415894:	xchg   BYTE PTR [eax],ch
  415896:	call   0x1a0e44c4
  41589b:	(bad)  
  41589c:	jae    0x4158dc
  41589e:	pusha  
  41589f:	mov    edx,0x2e800ddf
  4158a4:	shr    DWORD PTR [eax],cl
  4158a6:	xchg   DWORD PTR [esi-0x5b76bc2d],esi
  4158ac:	or     esp,DWORD PTR [esi-0x57f2fae3]
  4158b2:	mov    ch,0x2f
  4158b4:	ret    
  4158b5:	jecxz  0x41588a
  4158b7:	adc    eax,0x56a578d7
  4158bc:	sbb    esi,esi
  4158be:	cmp    esp,ebp
  4158c0:	sbb    bh,dh
  4158c2:	jnp    0x4158e4
  4158c4:	inc    eax
  4158c5:	mov    cl,0xca
  4158c7:	shr    ebx,cl
  4158c9:	adc    DWORD PTR [edi+edx*4],ebp
  4158cc:	ret    0x7b96
  4158cf:	xchg   edx,eax
  4158d0:	inc    ebp
  4158d1:	mov    al,ds:0xd22f8236
  4158d6:	jmp    0x4158e8
  4158d8:	out    0x28,eax
  4158da:	adc    esp,esp
  4158dc:	(bad)  
  4158dd:	outs   dx,DWORD PTR ds:[esi]
  4158de:	jno    0x4158f1
  4158e0:	in     eax,dx
  4158e1:	imul   eax,DWORD PTR [ebx-0x6e],0xffffff8d
  4158e5:	hlt    
  4158e6:	mov    ch,0x1d
  4158e8:	mov    al,ds:0xe5ee739f
  4158ed:	push   ds
  4158ee:	mov    bh,0xca
  4158f0:	push   edi
  4158f1:	mov    esp,0x298215ee
  4158f6:	inc    ebx
  4158f7:	iret   
  4158f8:	imul   esp,DWORD PTR [ecx-0x29],0x24701dc1
  4158ff:	ret    
  415900:	retf   
  415901:	mov    ch,bl
  415903:	jno    0x4158e2
  415905:	outs   dx,BYTE PTR ds:[esi]
  415906:	dec    eax
  415907:	mov    esi,0xc121554a
  41590c:	sub    al,0xfc
  41590e:	add    esi,ecx
  415910:	add    al,0x83
  415912:	xchg   edx,esi
  415914:	inc    eax
  415915:	mov    fs,WORD PTR [ebp+eiz*1-0x4f]
  415919:	in     eax,0xda
  41591b:	add    esi,edi
  41591d:	fst    st(6)
  41591f:	mov    esp,0x6807d610
  415924:	mov    esi,0x4a2201f0
  415929:	daa    
  41592a:	popa   
  41592b:	pop    edi
  41592c:	cmp    dl,cl
  41592e:	shl    DWORD PTR [ebx],0x4
  415931:	inc    BYTE PTR [edi]
  415933:	loopne 0x415919
  415935:	mov    ?,WORD PTR [ebx-0x54]
  415938:	pushf  
  415939:	jb     0x4158f6
  41593b:	shr    DWORD PTR [ebx+0x6b7f1b48],1
  415941:	push   es
  415942:	inc    esi
  415943:	dec    ecx
  415944:	scas   eax,DWORD PTR es:[edi]
  415945:	jmp    0x4159b4
  415947:	mov    ecx,0xc25a071e
  41594c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594d:	in     eax,dx
  41594e:	fistp  QWORD PTR [edi+0x3c]
  415951:	sbb    dh,BYTE PTR ds:0x46842ac1
  415957:	loopne 0x41590e
  415959:	push   cs
  41595a:	inc    edx
  41595b:	out    dx,al
  41595c:	sub    DWORD PTR [ebp-0x7a],edi
  41595f:	xchg   esi,eax
  415960:	or     eax,DWORD PTR [edx+0x14d64758]
  415966:	jl     0x41594d
  415968:	add    al,dl
  41596a:	xor    al,0xa5
  41596c:	stos   DWORD PTR es:[edi],eax
  41596d:	(bad)  
  41596e:	lock sar DWORD PTR cs:[esi-0x62],1
  415973:	ins    DWORD PTR es:[edi],dx
  415974:	mov    dl,0xf
  415976:	data16 (bad) 
  415978:	(bad)  
  415979:	xlat   BYTE PTR ds:[ebx]
  41597a:	mov    edi,DWORD PTR [esi+0x1bbef1ca]
  415980:	lock sbb DWORD PTR [ebx-0x4b],ebp
  415984:	ja     0x415915
  415986:	sbb    DWORD PTR [edi],ebp
  415988:	push   ecx
  415989:	add    DWORD PTR [esp+ecx*1+0x7f8d167e],ebx
  415990:	inc    esp
  415991:	pop    ecx
  415992:	cmp    cl,BYTE PTR ds:0x7987cd2a
  415998:	scas   al,BYTE PTR es:[edi]
  415999:	das    
  41599a:	stos   DWORD PTR es:[edi],eax
  41599b:	fs retf 0x5e2c
  41599f:	sbb    al,bh
  4159a1:	sbb    al,0xe8
  4159a3:	das    
  4159a4:	mov    al,ds:0xb5dc6751
  4159a9:	push   edi
  4159aa:	cmp    DWORD PTR [esi-0xd],edx
  4159ad:	mov    DWORD PTR [edi+edx*8+0x2cd53349],esi
  4159b4:	and    BYTE PTR [eax],dh
  4159b6:	out    0xe2,eax
  4159b8:	mov    al,ds:0x9d67d1b4
  4159bd:	or     DWORD PTR [edx],ebx
  4159bf:	inc    ecx
  4159c0:	sar    esp,cl
  4159c2:	add    DWORD PTR [eax],ebp
  4159c4:	adc    eax,0x2328e9d0
  4159c9:	outs   dx,DWORD PTR ds:[esi]
  4159ca:	sbb    DWORD PTR [ecx-0xf5d2702],0x9a92d5e
  4159d4:	adc    ecx,DWORD PTR [edi+0x9]
  4159d7:	test   eax,edi
  4159d9:	push   ds
  4159da:	add    DWORD PTR [esi-0x152733f0],edi
  4159e0:	lock or al,BYTE PTR [eax-0x13fc2092]
  4159e7:	cmp    BYTE PTR [edx-0x6fb250c0],ch
  4159ed:	shl    DWORD PTR [ebx+0x7],1
  4159f0:	aaa    
  4159f1:	jbe    0x415979
  4159f3:	nop
  4159f4:	push   eax
  4159f5:	jl     0x415a10
  4159f7:	dec    edi
  4159f8:	cdq    
  4159f9:	fs push ds
  4159fb:	js     0x415a1b
  4159fd:	adc    al,0x42
  4159ff:	test   BYTE PTR [eax-0x7cd1bb16],dl
  415a05:	retf   0x1362
  415a08:	jmp    0x415a4a
  415a0a:	mov    al,0x91
  415a0c:	or     DWORD PTR [edx-0x151154cf],ecx
  415a12:	mov    ebp,0xc2998d3c
  415a17:	fimul  WORD PTR [edx]
  415a19:	mov    DWORD PTR [edx+edi*1-0x20],0x866eaa5d
  415a21:	adc    al,0x1b
  415a23:	out    0x8b,eax
  415a25:	sub    DWORD PTR [edi+0x57],0xffffff9c
  415a29:	pop    esi
  415a2a:	lods   eax,DWORD PTR ds:[esi]
  415a2c:	loope  0x415a06
  415a2e:	popf   
  415a2f:	arpl   WORD PTR [edi-0x54],di
  415a32:	pop    edi
  415a33:	jecxz  0x415a46
  415a35:	dec    esp
  415a36:	bound  eax,QWORD PTR [ebp+0x37]
  415a39:	mov    ebp,0x8982632a
  415a3e:	gs push 0x2c
  415a41:	test   BYTE PTR [edi+0x7370e9c9],bl
  415a47:	add    eax,0xf6f584e4
  415a4c:	nop
  415a4d:	push   ss
  415a4e:	mov    ecx,0x35ed67cf
  415a53:	inc    edi
  415a54:	or     ah,BYTE PTR [ebx-0xf]
  415a57:	ret    
  415a58:	mov    ah,BYTE PTR [esi-0x56480623]
  415a5e:	in     al,dx
  415a5f:	lds    eax,FWORD PTR [eax]
  415a61:	add    al,BYTE PTR [esp+eiz*2]
  415a64:	outs   dx,BYTE PTR ds:[esi]
  415a65:	std    
  415a66:	inc    esp
  415a67:	pusha  
  415a68:	adc    al,0xbc
  415a6a:	fisttp QWORD PTR [edi+0x1b]
  415a6d:	mov    cl,bl
  415a6f:	push   0x56
  415a71:	mov    ebx,0x7735fb57
  415a76:	data16 shl BYTE PTR [edx-0x7653c733],1
  415a7d:	sub    eax,0x5e386ac3
  415a82:	or     ch,al
  415a84:	jp     0x415aa9
  415a86:	pop    ebx
  415a87:	mov    al,ds:0x756f7a0d
  415a8c:	xchg   edi,eax
  415a8d:	repnz (bad) 
  415a90:	enter  0x865a,0x24
  415a94:	adc    eax,0xd0caa5fb
  415a99:	cmp    DWORD PTR [edx+ebp*2-0x3be1facd],ebx
  415aa0:	fidiv  DWORD PTR [eax+ecx*2+0x6d799a04]
  415aa7:	dec    ebp
  415aa8:	out    dx,al
  415aa9:	pop    edx
  415aaa:	jmp    0x415a9c
  415aac:	sar    BYTE PTR [ebx+0xfad4aaf],cl
  415ab2:	xor    DWORD PTR [eax-0x31],edx
  415ab5:	sar    DWORD PTR [edx],cl
  415ab7:	cmp    DWORD PTR [edx-0x34e223d9],esp
  415abd:	push   edx
  415abe:	retf   
  415abf:	push   edx
  415ac0:	clc    
  415ac1:	ins    DWORD PTR es:[edi],dx
  415ac2:	rcl    BYTE PTR [edx],cl
  415ac4:	call   0xf24e:0x3d74862
  415acb:	fsubr  st,st(6)
  415acd:	test   DWORD PTR [edx],ebx
  415acf:	sub    ebp,DWORD PTR [ebx+0x3944c161]
  415ad5:	fld    QWORD PTR [ecx]
  415ad7:	mov    esp,0x94cbd87e
  415adc:	aam    0x97
  415ade:	mov    al,0x64
  415ae0:	sub    bh,BYTE PTR [ecx+eax*4-0x58c22a85]
  415ae7:	or     dh,BYTE PTR [edi-0xa704e74]
  415aed:	pop    es
  415aee:	sbb    al,0x8a
  415af0:	sub    eax,0x1b458886
  415af5:	inc    ecx
  415af6:	mov    BYTE PTR [edi+0x46],dl
  415af9:	lods   al,BYTE PTR ds:[esi]
  415afa:	push   eax
  415afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afc:	xchg   ebx,eax
  415afd:	pop    edi
  415afe:	jg     0x415b3b
  415b00:	push   0x64
  415b02:	pop    edi
  415b03:	cdq    
  415b04:	das    
  415b05:	jne    0x415ae3
  415b07:	adc    ah,bh
  415b09:	and    BYTE PTR [edx+0x25],cl
  415b0c:	adc    eax,0xd23f8a18
  415b11:	ficom  WORD PTR ds:[ebx-0x6096fe6]
  415b18:	cmp    dl,BYTE PTR [edi]
  415b1a:	or     DWORD PTR [ebx],esi
  415b1c:	call   0xa4e8e4e8
  415b21:	in     al,0xec
  415b23:	pop    edi
  415b24:	mov    al,ds:0xe477de78
  415b29:	and    al,0x84
  415b2b:	pusha  
  415b2c:	repz inc esp
  415b2e:	cmp    DWORD PTR [edx],ecx
  415b30:	fdivr  QWORD PTR [ebx]
  415b32:	(bad)
  415b35:	dec    esi
  415b36:	das    
  415b37:	pushf  
  415b38:	stc    
  415b39:	fstp   DWORD PTR [edi-0x957e647]
  415b3f:	fisttp WORD PTR [edx+eiz*8+0x9]
  415b43:	inc    edx
  415b44:	loope  0x415b19
  415b46:	addr16 mov ch,0x14
  415b49:	je     0x415bc5
  415b4b:	xchg   esp,eax
  415b4c:	(bad)  
  415b4d:	push   eax
  415b4e:	(bad)  
  415b4f:	rcr    DWORD PTR [edx-0x73],cl
  415b52:	adc    dh,bh
  415b54:	mov    gs,WORD PTR [edi-0x4a]
  415b57:	adc    ebp,ecx
  415b59:	ret    
  415b5a:	inc    BYTE PTR [bp+di]
  415b5d:	imul   ecx,DWORD PTR [ecx+eiz*1-0x498b6005],0xffffffee
  415b65:	pop    ss
  415b66:	mov    ds:0xffb8f9d2,eax
  415b6b:	and    edi,ebx
  415b6d:	push   ecx
  415b6e:	mov    eax,0xd36728c8
  415b73:	mov    bx,di
  415b76:	or     DWORD PTR [edi+0x49],esi
  415b79:	jmp    0xc9747a5d
  415b7e:	xlat   BYTE PTR ds:[ebx]
  415b7f:	jno    0x415b1a
  415b81:	mov    ds:0xea6c4933,al
  415b86:	mov    edi,0x94cdfca8
  415b8b:	repz sub cl,cl
  415b8e:	sub    dl,BYTE PTR [edx-0x8]
  415b91:	push   esp
  415b92:	(bad)  
  415b93:	int    0x6b
  415b95:	pop    es
  415b96:	aas    
  415b97:	push   es
  415b98:	cmp    al,0xdf
  415b9a:	cdq    
  415b9b:	jne    0x415b56
  415b9d:	push   DWORD PTR [bp+di]
  415ba0:	mov    ah,0x28
  415ba2:	pop    esi
  415ba3:	jecxz  0x415b9f
  415ba5:	(bad)  
  415ba6:	aam    0x18
  415ba8:	lods   eax,DWORD PTR ds:[esi]
  415ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415baa:	adc    al,0x27
  415bac:	sub    edi,DWORD PTR [ebx+0x7127b394]
  415bb2:	sbb    DWORD PTR [eax],eax
  415bb4:	mov    bl,BYTE PTR [edx+0x762a0475]
  415bba:	ja     0x415b4a
  415bbc:	and    DWORD PTR ds:0x7e0f73de,edi
  415bc2:	cmp    eax,0x6417a0d2
  415bc7:	aas    
  415bc8:	(bad)  
  415bc9:	inc    ebp
  415bca:	inc    edi
  415bcb:	inc    esi
  415bcc:	mov    dh,0x3e
  415bce:	in     eax,0x3
  415bd0:	xlat   BYTE PTR ds:[ebx]
  415bd1:	mov    al,ds:0xf246b13e
  415bd6:	cmp    eax,0xde14cca7
  415bdb:	mov    al,0x57
  415bdd:	lods   al,BYTE PTR ds:[esi]
  415bde:	cwde   
  415bdf:	cdq    
  415be0:	push   edx
  415be1:	out    0xa0,eax
  415be3:	in     eax,0x2
  415be5:	sub    ebp,DWORD PTR [esi+esi*4+0x6a]
  415be9:	adc    esp,edx
  415beb:	cmp    esp,DWORD PTR [edi+0x4b23cbeb]
  415bf1:	mov    cl,0x74
  415bf3:	dec    esp
  415bf4:	inc    esp
  415bf5:	in     al,0x8
  415bf7:	lahf   
  415bf8:	sub    DWORD PTR [ecx-0x57],edx
  415bfb:	mov    al,0x43
  415bfd:	addr16 push edi
  415bff:	or     BYTE PTR [esi+0x10],cl
  415c02:	push   esp
  415c03:	cdq    
  415c04:	push   eax
  415c05:	cmp    BYTE PTR [edx+0x26],0xd3
  415c09:	xlat   BYTE PTR ds:[ebx]
  415c0a:	shr    DWORD PTR [ebx],1
  415c0c:	xchg   ebx,eax
  415c0d:	scas   al,BYTE PTR es:[edi]
  415c0e:	and    eax,0xa091025a
  415c13:	jb     0x415bd2
  415c15:	mov    edx,0x6360d7f1
  415c1a:	mov    bl,0x14
  415c1c:	sub    ebx,eax
  415c1e:	pop    esp
  415c1f:	sar    DWORD PTR [edx-0x2d180cbc],0xb4
  415c26:	test   al,0x7b
  415c28:	sub    DWORD PTR [edx+0x5d],0x48
  415c2c:	pop    ds
  415c2d:	sti    
  415c2e:	mov    eax,ds:0xc45e49ab
  415c33:	dec    ebx
  415c34:	cmp    dl,BYTE PTR [ebx]
  415c36:	push   ebp
  415c37:	pop    edi
  415c38:	jmp    0x415c36
  415c3a:	pusha  
  415c3b:	test   DWORD PTR [ecx+0x2d],0x94fe5269
  415c42:	leave  
  415c43:	push   bx
  415c45:	test   al,0xe
  415c47:	pop    edi
  415c48:	loop   0x415c1f
  415c4a:	add    eax,0x96e5c849
  415c4f:	cld    
  415c50:	mov    al,ds:0x3025d187
  415c55:	and    BYTE PTR [edx-0x15],dl
  415c58:	pop    esi
  415c59:	scas   al,BYTE PTR es:[edi]
  415c5a:	repz sbb dl,BYTE PTR cs:[ebx+0x41]
  415c5f:	dec    ebx
  415c60:	mov    bl,0x11
  415c62:	sub    BYTE PTR [eax-0x49],dh
  415c65:	mov    al,ds:0x663f0945
  415c6a:	and    dl,BYTE PTR [eax+0xd9d4730]
  415c70:	out    0x76,al
  415c72:	hlt    
  415c73:	sbb    ah,BYTE PTR [ecx]
  415c75:	jmp    DWORD PTR [ebp+0x21024bad]
  415c7b:	movlps QWORD PTR [ebx+0x3],xmm7
  415c7f:	and    al,0x3e
  415c81:	fld    QWORD PTR [edi+0x5d430711]
  415c87:	ret    0x6df3
  415c8a:	adc    cl,cl
  415c8c:	sar    DWORD PTR [edi+0x3aa993f4],1
  415c92:	adc    edi,esp
  415c94:	daa    
  415c95:	pop    ss
  415c96:	xchg   edi,eax
  415c98:	out    dx,eax
  415c99:	cmp    dl,BYTE PTR [edi+0x20]
  415c9c:	retf   
  415c9d:	sbb    DWORD PTR ds:0xc2569e92,0x7f
  415ca4:	dec    esi
  415ca5:	push   es
  415ca6:	aam    0xb7
  415ca8:	pop    ebx
  415ca9:	xor    BYTE PTR [ecx],al
  415cab:	and    al,0x7b
  415cad:	dec    edx
  415cae:	sar    ecx,0x69
  415cb1:	sti    
  415cb2:	and    BYTE PTR [edx+0x3da9f336],ah
  415cb8:	test   eax,0x4754da25
  415cbd:	sub    BYTE PTR [edi],ah
  415cbf:	in     eax,dx
  415cc0:	repz js 0x415cbc
  415cc3:	sbb    eax,0x92061542
  415cc8:	out    dx,al
  415cc9:	loop   0x415c74
  415ccb:	xchg   ebp,eax
  415ccc:	(bad)  
  415ccd:	or     eax,0xde938c23
  415cd2:	jge    0x415c58
  415cd4:	xor    eax,0x27ab27ed
  415cd9:	scas   eax,DWORD PTR es:[edi]
  415cda:	and    al,0x7c
  415cdc:	cmp    cl,0xb3
  415cdf:	push   esp
  415ce0:	into   
  415ce1:	(bad)  
  415ce2:	cmp    bl,BYTE PTR [edi+0x1c]
  415ce5:	fcomp  QWORD PTR [eax-0x6b677e85]
  415ceb:	ud2    
  415ced:	aas    
  415cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cef:	test   ah,dh
  415cf1:	das    
  415cf2:	push   es
  415cf3:	mov    BYTE PTR [ebx+0x19],bh
  415cf6:	cmp    ecx,DWORD PTR [ecx]
  415cf8:	daa    
  415cf9:	xchg   edx,eax
  415cfa:	jbe    0x415ca2
  415cfc:	inc    edi
  415cfd:	inc    ebp
  415cfe:	pop    esi
  415cff:	xor    al,0x35
  415d01:	les    ecx,FWORD PTR [edx]
  415d03:	xchg   ecx,eax
  415d04:	inc    DWORD PTR [edi+0x71f5219a]
  415d0a:	mov    DWORD PTR [ebp-0xc],ebp
  415d0d:	dec    esp
  415d0e:	rep stos BYTE PTR es:[edi],al
  415d10:	(bad)  
  415d11:	xchg   ecx,eax
  415d12:	ficom  DWORD PTR [esi+0x2d]
  415d15:	lahf   
  415d16:	clc    
  415d17:	push   edi
  415d18:	pushf  
  415d19:	(bad)  
  415d1a:	push   0x29a5be61
  415d1f:	ja     0x415d39
  415d21:	xchg   ecx,eax
  415d22:	mov    esi,0xce27dda7
  415d27:	cs clc 
  415d29:	(bad)  
  415d2a:	xchg   esp,eax
  415d2b:	push   ecx
  415d2c:	sbb    DWORD PTR [edi-0x6f2aa3fa],edi
  415d32:	inc    esp
  415d33:	mov    DWORD PTR [edx-0x1ade30fd],esp
  415d39:	repz out dx,al
  415d3b:	and    bl,dh
  415d3d:	adc    eax,DWORD PTR [eax+0x1b]
  415d40:	fadd   QWORD PTR [ebp-0x33]
  415d43:	imul   DWORD PTR [esi-0x26]
  415d46:	imul   DWORD PTR [edi]
  415d48:	nop
  415d49:	mov    eax,0x2ecf6bcb
  415d4e:	push   esi
  415d4f:	test   al,0xc3
  415d51:	push   0xffffffc8
  415d53:	ja     0x415d8c
  415d55:	pop    ss
  415d56:	enter  0x6f78,0xcb
  415d5a:	stos   DWORD PTR es:[edi],eax
  415d5b:	pop    ecx
  415d5c:	(bad)  
  415d5d:	jno    0x415d56
  415d5f:	pop    ds
  415d60:	or     ch,BYTE PTR [edi-0x7e]
  415d63:	cmp    ebx,DWORD PTR [edx+0x3f]
  415d66:	out    0xa5,al
  415d68:	pop    ecx
  415d69:	loopne 0x415d77
  415d6b:	stos   BYTE PTR es:[edi],al
  415d6c:	aam    0xe6
  415d6e:	dec    eax
  415d6f:	inc    ebx
  415d70:	mov    ecx,0xf70381f3
  415d75:	mov    cl,0x3d
  415d77:	jmp    0x7c05604
  415d7c:	push   edi
  415d7d:	daa    
  415d7e:	inc    eax
  415d7f:	shl    DWORD PTR [ebp+0x28e6b20c],1
  415d85:	sub    bl,BYTE PTR [ebx+0x49]
  415d88:	push   ebx
  415d89:	fucomip st,st(4)
  415d8b:	inc    eax
  415d8c:	mov    ch,ch
  415d8e:	ss call 0x6c24915e
  415d94:	lock sbb al,0xd6
  415d97:	xor    eax,0x5e82198b
  415d9c:	jo     0xa9a1316a
  415da2:	jmp    0x2afe0de2
  415da7:	(bad)  
  415da8:	test   eax,0x2a555cca
  415dad:	jp     0x415dba
  415daf:	in     al,dx
  415db0:	xor    al,0x3f
  415db2:	add    esi,DWORD PTR [ecx+0x4761b323]
  415db8:	cmp    BYTE PTR es:[ebp+edx*1-0x2e],dl
  415dbd:	dec    esp
  415dbe:	or     DWORD PTR [eax],0xd672e122
  415dc4:	xchg   esp,eax
  415dc5:	jns    0x415df7
  415dc7:	lock push esi
  415dc9:	inc    ecx
  415dca:	mov    eax,ds:0x2199c1a1
  415dcf:	cmp    ch,dh
  415dd1:	push   ebx
  415dd2:	lea    ebp,[ebx]
  415dd4:	inc    ebx
  415dd5:	fisttp DWORD PTR [edx+ecx*4-0x5f]
  415dd9:	shl    DWORD PTR [edx+0x2a00e6c2],1
  415ddf:	adc    cl,BYTE PTR [ecx+edi*4-0x7beef549]
  415de6:	mov    esi,0xa8c2e1fc
  415deb:	and    al,0xb0
  415ded:	lock cs cmp eax,0x7ff294b7
  415df4:	jo     0x415de8
  415df6:	push   DWORD PTR [edi+edi*2]
  415df9:	clc    
  415dfa:	sbb    al,0x44
  415dfc:	sbb    eax,0x42e4b311
  415e01:	imul   edi,DWORD PTR [eax+edx*4+0x3f],0x3602a26b
  415e09:	sub    dl,BYTE PTR [ebx-0x8]
  415e0c:	inc    BYTE PTR [ebx+edi*1+0x4c]
  415e10:	dec    eax
  415e11:	loop   0x415e3b
  415e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e14:	mov    bh,0x6b
  415e16:	out    dx,al
  415e17:	xchg   ecx,eax
  415e18:	pop    esi
  415e19:	sar    DWORD PTR [ecx-0x5409591d],cl
  415e1f:	sar    DWORD PTR [eax+0x1df42fcb],cl
  415e25:	jecxz  0x415e9c
  415e27:	test   BYTE PTR [ebp-0x4e421699],ch
  415e2d:	ins    DWORD PTR es:[edi],dx
  415e2e:	adc    DWORD PTR [ecx+0x45],esi
  415e31:	xchg   esp,eax
  415e32:	mov    eax,esp
  415e34:	stos   BYTE PTR es:[edi],al
  415e35:	aam    0x30
  415e37:	inc    esp
  415e38:	test   eax,0x10bf59a0
  415e3d:	jmp    0xc492:0x2c7a2dd
  415e44:	repnz test al,0xc5
  415e47:	or     BYTE PTR ds:0x9ec077d6,ah
  415e4d:	cmp    esi,DWORD PTR [ecx+ebp*4]
  415e50:	rcr    esi,cl
  415e52:	lods   al,BYTE PTR ds:[esi]
  415e53:	clc    
  415e54:	cvtpi2ps xmm2,QWORD PTR [edx-0x79]
  415e58:	adc    eax,0x879dbe7e
  415e5d:	dec    esi
  415e5e:	pop    edx
  415e5f:	imul   ecx,DWORD PTR [ebx+edx*2],0xffffffe7
  415e63:	retf   0x9d8d
  415e66:	sub    DWORD PTR [esi+0x48],eax
  415e69:	outs   dx,DWORD PTR ds:[esi]
  415e6a:	push   es
  415e6b:	loop   0x415e34
  415e6d:	ret    0x2968
  415e70:	clc    
  415e71:	ins    BYTE PTR es:[edi],dx
  415e72:	dec    ebx
  415e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e74:	pop    ebp
  415e75:	sub    ebp,ecx
  415e77:	and    eax,0xed2af036
  415e7c:	and    DWORD PTR [edi+0x3e69f16e],ebp
  415e82:	and    esi,DWORD PTR [eax-0x24]
  415e85:	adc    al,0x83
  415e87:	cmp    eax,0xb325661a
  415e8c:	shr    DWORD PTR [esi-0x45da2a23],1
  415e92:	std    
  415e93:	inc    ebx
  415e94:	lock mov ebp,0xeb8f1723
  415e9b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415e9d:	pop    esi
  415e9e:	retf   0xdfb3
  415ea1:	dec    esp
  415ea2:	mov    ebp,fs
  415ea4:	fidiv  DWORD PTR [eax+ecx*1-0x359d210]
  415eab:	(bad)  
  415eac:	pop    edi
  415ead:	call   0x1d1b:0x7710a260
  415eb4:	je     0x415ea9
  415eb6:	clc    
  415eb7:	(bad)  
  415eb8:	out    0xdb,al
  415eba:	lods   eax,DWORD PTR ds:[esi]
  415ebb:	sub    eax,0xf97a98b5
  415ec0:	push   0xa0a1e528
  415ec5:	xor    eax,0xb1634fd4
  415eca:	cdq    
  415ecb:	std    
  415ecc:	popf   
  415ecd:	out    0xe1,eax
  415ecf:	iret   
  415ed0:	ins    DWORD PTR es:[edi],dx
  415ed1:	neg    DWORD PTR [edi]
  415ed3:	and    dh,BYTE PTR [esp+ebx*4-0x78cd03e4]
  415eda:	sahf   
  415edb:	jmp    0x6fda9d75
  415ee0:	jne    0x415eb7
  415ee2:	lahf   
  415ee3:	mov    ecx,0x6649dc57
  415ee8:	xor    eax,0x27595ed3
  415eed:	mov    al,BYTE PTR [ecx+0x4a084daf]
  415ef3:	ins    BYTE PTR es:[edi],dx
  415ef4:	scas   al,BYTE PTR es:[edi]
  415ef5:	fidivr WORD PTR [ecx+0x51248fdd]
  415efb:	mov    ecx,0x7e92142d
  415f00:	jnp    0x415f4a
  415f02:	xchg   esp,eax
  415f03:	arpl   WORD PTR ds:0xbd9c357a,dx
  415f09:	and    eax,0x4b3b0190
  415f0e:	icebp  
  415f0f:	mov    ecx,0x246a9bc6
  415f14:	jle    0x415ed1
  415f16:	pop    edx
  415f17:	rcr    BYTE PTR ds:[eax],1
  415f1a:	jae    0x415eae
  415f1c:	xchg   ecx,eax
  415f1d:	or     al,ah
  415f1f:	fdivr  DWORD PTR [ebx]
  415f21:	(bad)  
  415f22:	in     al,dx
  415f23:	inc    ebp
  415f24:	adc    edi,0x19
  415f27:	and    cl,BYTE PTR ds:0x9de8f3e1
  415f2d:	add    BYTE PTR [esi+0x3dae0a62],dl
  415f33:	and    al,BYTE PTR [ebx]
  415f35:	sub    al,0xa
  415f37:	loope  0x415ef0
  415f39:	(bad)  
  415f3a:	scas   al,BYTE PTR es:[edi]
  415f3b:	and    eax,0xf52b1645
  415f40:	loope  0x415f18
  415f42:	scas   al,BYTE PTR es:[edi]
  415f43:	push   edi
  415f44:	je     0x415f4f
  415f46:	cld    
  415f47:	bound  esi,QWORD PTR [ebp+edx*4+0x68]
  415f4b:	lods   al,BYTE PTR ds:[esi]
  415f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4d:	jnp    0x415fb8
  415f4f:	test   DWORD PTR [ecx-0x33b3b96f],edi
  415f55:	ja     0x415f1d
  415f57:	pop    edx
  415f58:	pop    ebx
  415f59:	pop    edx
  415f5a:	(bad)  
  415f5b:	pop    eax
  415f5c:	out    0x96,al
  415f5e:	lock gs dec ebx
  415f61:	jmp    0x415f08
  415f63:	add    eax,0x1cb53e72
  415f68:	add    al,0x98
  415f6a:	mov    bl,0x23
  415f6c:	ins    BYTE PTR es:[edi],dx
  415f6d:	mov    ds,WORD PTR [esi]
  415f6f:	out    0x1e,eax
  415f71:	inc    ecx
  415f72:	adc    bl,dh
  415f74:	dec    esp
  415f75:	or     DWORD PTR [edx+0x16],ecx
  415f78:	push   0xfffffffd
  415f7a:	retf   0xb661
  415f7d:	stos   BYTE PTR es:[edi],al
  415f7e:	mov    ds:0x77c4cef4,eax
  415f83:	or     dl,cl
  415f85:	mov    edx,0xf80f36b1
  415f8a:	stc    
  415f8b:	sahf   
  415f8c:	ret    
  415f8d:	sub    DWORD PTR [ebx],esi
  415f8f:	out    dx,al
  415f90:	pop    eax
  415f91:	jnp    0x415fbf
  415f93:	pop    es
  415f94:	cmp    bl,BYTE PTR [ebp-0x3b588541]
  415f9a:	sbb    BYTE PTR [ebx+0x4db59151],bh
  415fa0:	rol    BYTE PTR [ebp-0x4ac509e6],cl
  415fa6:	jae    0x416005
  415fa8:	jbe    0x415ff3
  415faa:	sahf   
  415fab:	inc    ecx
  415fac:	out    dx,eax
  415fad:	imul   ebp,esi,0x7d2f7c2a
  415fb3:	and    dh,BYTE PTR [esp+edi*8+0x3af06f8a]
  415fba:	cwde   
  415fbb:	pop    ebp
  415fbc:	call   0x54fac271
  415fc1:	mov    cl,0xaf
  415fc3:	repnz and al,0x61
  415fc6:	pusha  
  415fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fc8:	sbb    DWORD PTR [ecx-0x6261f58d],ebp
  415fce:	pop    esp
  415fcf:	std    
  415fd0:	aad    0x36
  415fd2:	and    DWORD PTR [ecx],0x6aa26375
  415fd8:	mov    bh,0xc7
  415fda:	outs   dx,DWORD PTR ds:[esi]
  415fdb:	mov    dh,0x85
  415fdd:	jbe    0x416013
  415fdf:	xchg   esp,eax
  415fe0:	push   cs
  415fe1:	dec    esp
  415fe2:	rcl    BYTE PTR [ecx],1
  415fe4:	adc    BYTE PTR ds:0xeca9b35e,ch
  415fea:	mov    DWORD PTR [edi+0xf3c80f2],ecx
  415ff0:	pop    ecx
  415ff1:	les    edi,FWORD PTR [ebx]
  415ff3:	lds    ebx,FWORD PTR [eax]
  415ff5:	push   eax
  415ff6:	sub    al,0x7c
  415ff8:	arpl   si,sp
  415ffa:	jmp    0x49d360f9
  415fff:	dec    edi
  416000:	addr16 stc 
  416002:	pop    eax
  416003:	pop    ds
  416004:	push   esp
  416005:	fisttp DWORD PTR [ebp-0x2e68e953]
  41600b:	lods   eax,DWORD PTR ds:[esi]
  41600c:	add    al,0xa2
  41600e:	daa    
  41600f:	pop    ds
  416010:	mov    DWORD PTR [edx+edx*2+0x37],ebx
  416014:	ret    0x2061
  416017:	push   ecx
  416018:	popa   
  416019:	rcl    BYTE PTR [edi+0x4959811e],0xe1
  416020:	addr16 inc edx
  416022:	iret   
  416023:	mov    ebx,0x745ae9c6
  416028:	cld    
  416029:	push   ebp
  41602a:	adc    al,0xf3
  41602c:	mov    ch,0x1
  41602e:	xor    DWORD PTR [ecx],edx
  416030:	int3   
  416031:	or     esp,DWORD PTR [esi]
  416033:	jecxz  0x41602d
  416035:	repnz mov edx,DWORD PTR [esi]
  416038:	adc    DWORD PTR [ecx-0x22],0x404fedeb
  41603f:	and    eax,DWORD PTR [ecx-0x28761fb]
  416045:	adc    DWORD PTR ds:0xf7735708,eax
  41604b:	sub    al,ch
  41604d:	jno    0x415ff8
  41604f:	push   ebp
  416050:	outs   dx,DWORD PTR ds:[esi]
  416051:	dec    edi
  416052:	out    dx,al
  416053:	inc    edi
  416054:	and    eax,0x47c22969
  416059:	popf   
  41605a:	and    eax,edx
  41605c:	cmp    dl,BYTE PTR [esi+0x33f2f4fa]
  416062:	mov    ecx,?
  416064:	out    dx,eax
  416065:	(bad)  
  416066:	adc    bh,ch
  416068:	nop
  416069:	push   es
  41606a:	or     DWORD PTR [ecx-0x3f],edi
  41606d:	mov    DWORD PTR [ecx],edi
  41606f:	mov    al,BYTE PTR [eax+0x3ada6103]
  416075:	aam    0x76
  416077:	sub    ecx,ebp
  416079:	mov    edx,0x49757805
  41607e:	xchg   ebp,eax
  41607f:	call   0x55a9:0x7559f9a6
  416086:	call   0x95ef5201
  41608b:	test   DWORD PTR [ecx+ebp*8-0x61],eax
  41608f:	xchg   esi,eax
  416090:	rcr    BYTE PTR [esi],1
  416092:	mov    eax,ds:0x2b7e52f9
  416097:	add    eax,0xa55dd21c
  41609c:	retf   
  41609d:	jne    0x416054
  41609f:	test   BYTE PTR [edi],ch
  4160a1:	test   al,0xf
  4160a3:	push   0x4b
  4160a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a6:	jle    0x416050
  4160a8:	hlt    
  4160a9:	outs   dx,BYTE PTR ds:[esi]
  4160aa:	adc    al,0x35
  4160ac:	lods   al,BYTE PTR ds:[esi]
  4160ad:	pop    esi
  4160ae:	push   ss
  4160af:	ds dec ebp
  4160b1:	sub    ecx,eax
  4160b3:	push   ebx
  4160b4:	popf   
  4160b5:	lds    ebp,FWORD PTR [esi-0x5a23e80b]
  4160bb:	mov    bh,0x5a
  4160bd:	jae    0x416091
  4160bf:	push   eax
  4160c0:	mov    ebp,0x3bcf4cf6
  4160c5:	(bad)  
  4160c6:	sub    al,0xeb
  4160c8:	sub    ecx,DWORD PTR [ecx]
  4160ca:	lea    edi,[eax+esi*1+0x38]
  4160ce:	sbb    al,0xf1
  4160d0:	pop    ebp
  4160d1:	and    BYTE PTR [eax],ah
  4160d3:	das    
  4160d4:	stc    
  4160d5:	mov    BYTE PTR [eax+0xe5fa9ef],0x9d
  4160dc:	push   es
  4160dd:	in     eax,dx
  4160de:	mov    ebx,0x8e7e8294
  4160e3:	or     eax,0x6f9449a7
  4160e8:	mov    edi,0xb3a8ce69
  4160ed:	pushf  
  4160ee:	mov    bl,0xb7
  4160f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f1:	imul   ecx,edi,0x77
  4160f4:	cmp    ebp,ebp
  4160f6:	paddq  mm1,QWORD PTR ds:0xa6cdbdf8
  4160fd:	out    dx,eax
  4160fe:	add    DWORD PTR [edx-0x5bcd624d],edi
  416104:	push   ebx
  416105:	retf   
  416106:	jecxz  0x416148
  416108:	retf   
  416109:	xchg   ebp,eax
  41610a:	mov    ds:0x67fd4650,eax
  41610f:	in     al,0xee
  416111:	dec    ebp
  416112:	xchg   ecx,eax
  416113:	arpl   WORD PTR [edx],sp
  416115:	(bad)  
  416116:	mov    WORD PTR [esi-0x28f4aea2],ss
  41611c:	hlt    
  41611d:	sahf   
  41611e:	popa   
  41611f:	inc    si
  416121:	popf   
  416122:	addr16 push ecx
  416124:	iret   
  416125:	jne    0x416183
  416127:	or     DWORD PTR [esi],0x1ed85334
  41612d:	dec    esp
  41612e:	lods   al,BYTE PTR ds:[esi]
  41612f:	jb     0x4160c1
  416131:	mov    ch,0x92
  416133:	jg     0x4160d1
  416135:	inc    ebp
  416136:	mov    dh,0x8a
  416138:	push   esi
  416139:	outs   dx,BYTE PTR ds:[esi]
  41613a:	add    DWORD PTR ds:0x653949f7,eax
  416140:	and    eax,DWORD PTR [eax+0x56549e41]
  416146:	(bad)  
  416147:	pop    ebx
  416148:	lea    esp,[eax*1-0x50d9799f]
  41614f:	add    esi,DWORD PTR [edi]
  416151:	cmp    bh,ah
  416153:	std    
  416154:	mov    edx,0xb20796a5
  416159:	adc    al,0xdb
  41615b:	outs   dx,DWORD PTR ds:[esi]
  41615c:	xor    BYTE PTR [eax-0x25],0xd3
  416160:	ss jno 0x4161a6
  416163:	xor    BYTE PTR [edi+ebx*2],al
  416166:	and    eax,0x92610bd0
  41616b:	retf   
  41616c:	xchg   edi,eax
  41616d:	xchg   edx,eax
  41616e:	mov    ds:0xbf73bef8,al
  416173:	call   0xe72e688
  416178:	std    
  416179:	das    
  41617a:	push   esp
  41617b:	dec    esi
  41617c:	mov    ebx,es
  41617e:	call   0xbf5fc4b1
  416183:	and    eax,0x121e1c3d
  416188:	pop    esi
  416189:	mov    edx,0xd9cbe60e
  41618e:	pop    esi
  41618f:	dec    ecx
  416190:	out    dx,eax
  416191:	mov    eax,0x4c20df0e
  416196:	nop
  416197:	add    al,dh
  416199:	push   0xfffffff7
  41619b:	and    eax,0x28dd5236
  4161a0:	mov    gs,WORD PTR [ebp-0x5af0c6fb]
  4161a6:	ins    BYTE PTR es:[edi],dx
  4161a7:	inc    edi
  4161a8:	add    BYTE PTR [ecx-0x1a],bl
  4161ab:	or     ebp,edx
  4161ad:	mov    eax,ds:0xdb9205be
  4161b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b3:	dec    eax
  4161b4:	ds ins DWORD PTR es:[edi],dx
  4161b6:	daa    
  4161b7:	jb     0x41618d
  4161b9:	repz mov ah,0x41
  4161bc:	xlat   BYTE PTR ds:[ebx]
  4161bd:	jle    0x4161d1
  4161bf:	in     eax,0x31
  4161c1:	clc    
  4161c2:	std    
  4161c3:	std    
  4161c4:	mov    al,ds:0x42fbc05b
  4161c9:	dec    eax
  4161ca:	and    esp,DWORD PTR [edx-0x41]
  4161cd:	xor    al,0xad
  4161cf:	fild   DWORD PTR [edi+ebx*4]
  4161d2:	xor    ebx,DWORD PTR ds:0xc5c167b
  4161d8:	das    
  4161d9:	or     ah,BYTE PTR [esi-0x4aa02971]
  4161df:	adc    al,0x1b
  4161e1:	push   esp
  4161e2:	mov    edx,ebx
  4161e4:	mov    eax,0x4775becc
  4161e9:	lock in eax,dx
  4161eb:	xchg   ebp,eax
  4161ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ed:	push   ss
  4161ee:	aam    0xb1
  4161f0:	sub    DWORD PTR [ebx],eax
  4161f2:	and    BYTE PTR [edx+0x54370d2d],0xce
  4161f9:	cmp    BYTE PTR [ecx+esi*8-0x1a],bl
  4161fd:	popf   
  4161fe:	xchg   DWORD PTR [esi],edx
  416200:	outs   dx,BYTE PTR ds:[esi]
  416201:	lea    ebp,[ebx]
  416203:	retf   
  416204:	add    eax,0xb23504f2
  416209:	jecxz  0x416272
  41620b:	or     eax,0x9db0b87
  416210:	cmp    al,0x9d
  416212:	rol    DWORD PTR [ecx-0x503ddbea],0xac
  416219:	cli    
  41621a:	out    0xe1,al
  41621c:	jnp    0x4161a7
  41621e:	mov    edi,0x277c7a2d
  416223:	and    cl,al
  416225:	sbb    dh,BYTE PTR [esi-0x6737a239]
  41622b:	cli    
  41622c:	or     al,0xc7
  41622e:	cli    
  41622f:	xchg   ecx,eax
  416230:	xor    eax,0xb172bb7c
  416235:	cdq    
  416236:	or     ebp,esi
  416238:	bound  esp,QWORD PTR [ecx]
  41623a:	shl    edi,0xfc
  41623d:	inc    ebx
  41623e:	rcl    DWORD PTR [esi-0x5f],cl
  416241:	scas   eax,DWORD PTR es:[edi]
  416242:	xchg   esi,eax
  416243:	dec    edi
  416244:	xor    eax,0x7bec4a69
  416249:	fst    QWORD PTR [ebx]
  41624b:	nop
  41624c:	mov    al,ds:0x1dbebb87
  416251:	dec    esp
  416252:	scas   al,BYTE PTR es:[edi]
  416253:	adc    DWORD PTR [eax+ebp*8-0xc09b89c],edx
  41625a:	jno    0x4162d4
  41625c:	xor    esi,DWORD PTR [eax-0x1d1df0c2]
  416262:	mov    ebp,0xd2a106ea
  416267:	dec    ecx
  416268:	add    esp,DWORD PTR [edx+0x783cf439]
  41626e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626f:	xor    eax,DWORD PTR [ebp-0x29]
  416272:	push   cs
  416273:	or     ebx,DWORD PTR [edi-0x4a8ff2c7]
  416279:	add    DWORD PTR [edx+0x1d771b38],esp
  41627f:	lea    esp,[edi-0xb]
  416282:	push   esi
  416283:	lods   al,BYTE PTR ds:[esi]
  416285:	jnp    0x4162e3
  416287:	fld    DWORD PTR [ebx-0x45f96710]
  41628d:	mov    al,BYTE PTR [ebp+0x3e756cd6]
  416293:	inc    eax
  416294:	pop    edi
  416295:	test   al,0xb2
  416297:	outs   dx,DWORD PTR ds:[esi]
  416298:	fwait
  416299:	xor    eax,0xe1e6e7b5
  41629e:	je     0x416276
  4162a0:	mov    ds:0x19144c5f,al
  4162a5:	or     dl,ch
  4162a7:	push   cs
  4162a8:	xchg   BYTE PTR [eax],cl
  4162aa:	stc    
  4162ab:	mov    ebx,0x4d342e10
  4162b0:	jp     0x4162f7
  4162b2:	hlt    
  4162b3:	xchg   edx,eax
  4162b4:	adc    ecx,DWORD PTR [ecx+ebp*2-0x61]
  4162b8:	out    dx,al
  4162b9:	lods   eax,DWORD PTR ds:[esi]
  4162ba:	aam    0xe0
  4162bc:	jo     0x416322
  4162be:	test   al,0xce
  4162c0:	(bad)  
  4162c1:	fidivr DWORD PTR [ecx+0x1e]
  4162c4:	repz mov al,0xc5
  4162c7:	add    BYTE PTR [ebx-0x4a],ch
  4162ca:	adc    al,0x8e
  4162cc:	outs   dx,DWORD PTR ds:[esi]
  4162cd:	fild   DWORD PTR [eax-0x38]
  4162d0:	xchg   ecx,ecx
  4162d2:	inc    esi
  4162d3:	or     ebx,DWORD PTR [edi-0x60368659]
  4162d9:	xchg   BYTE PTR [ebp+0x3a],dh
  4162dc:	fst    QWORD PTR [edx-0x4d]
  4162df:	sbb    eax,0xf6d5d5d0
  4162e4:	pop    esi
  4162e5:	add    BYTE PTR [ecx],0x97
  4162e8:	test   DWORD PTR [ecx+edi*4+0x35db18bb],edx
  4162ef:	mov    ds:0xc243a96c,eax
  4162f4:	pushf  
  4162f5:	daa    
  4162f6:	addr16 or eax,0xf32717f
  4162fc:	fiadd  DWORD PTR [eax]
  4162fe:	mov    eax,0xa605dac2
  416303:	adc    dl,al
  416305:	sub    bl,BYTE PTR [edi+0x44]
  416308:	mul    ch
  41630a:	xor    eax,0xb9e6ca83
  41630f:	retf   
  416310:	mov    bl,0x42
  416312:	daa    
  416313:	mov    ch,0xec
  416315:	adc    BYTE PTR [ecx],dh
  416317:	aad    0x28
  416319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631a:	pop    ebp
  41631b:	inc    edi
  41631c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631d:	push   es
  41631e:	adc    eax,0x7c57f6e2
  416323:	xor    ecx,DWORD PTR [edi]
  416325:	xchg   esi,eax
  416326:	pop    ebp
  416327:	pop    eax
  416328:	out    0xa2,eax
  41632a:	repnz pop esi
  41632c:	pop    ds
  41632d:	mov    esi,0x4542c482
  416332:	pop    es
  416333:	jl     0x416327
  416335:	adc    al,0x2f
  416337:	pop    ebx
  416338:	dec    esi
  416339:	jmp    0x416345
  41633b:	sub    esp,edx
  41633d:	lods   al,BYTE PTR ds:[esi]
  41633e:	xchg   edx,eax
  41633f:	push   es
  416340:	push   eax
  416341:	dec    esp
  416342:	inc    ecx
  416343:	in     eax,dx
  416344:	hlt    
  416345:	mov    WORD PTR [edx],ss
  416347:	adc    al,0xcd
  416349:	cwde   
  41634a:	add    cl,BYTE PTR [edx+0x104b71fa]
  416350:	sbb    edx,ebx
  416352:	mov    cl,0xf9
  416354:	repnz or BYTE PTR [eax-0x13b782ed],0xe4
  41635c:	push   esp
  41635d:	or     eax,0xbcf9a108
  416362:	sub    BYTE PTR [ecx+0x35],0x48
  416366:	mov    ds:0xa7d5336f,al
  41636b:	jle    0x4163b5
  41636d:	pop    es
  41636e:	pop    esp
  41636f:	fstp   QWORD PTR [esi-0x4fea561b]
  416375:	adc    eax,0x84edfed1
  41637a:	mov    DWORD PTR [ebp+0x7c632421],esp
  416380:	cmp    eax,0xd54b61a3
  416385:	stc    
  416386:	into   
  416387:	inc    eax
  416388:	(bad)
  41638c:	div    ch
  41638e:	push   ecx
  41638f:	inc    edx
  416390:	cmp    al,BYTE PTR [esi+ebx*4-0x7924e59f]
  416397:	xor    DWORD PTR [ebx],ebx
  416399:	add    al,0xe2
  41639b:	jns    0x4163fc
  41639d:	mov    eax,0xd8b62820
  4163a2:	js     0x41634f
  4163a4:	xchg   esp,eax
  4163a5:	xchg   DWORD PTR [edi+0x10],ecx
  4163a8:	rcr    BYTE PTR [eax+0x27],cl
  4163ab:	fs cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ae:	cmp    bh,ah
  4163b0:	mov    al,ds:0x5eb8e143
  4163b5:	scas   al,BYTE PTR es:[edi]
  4163b6:	mov    bl,0x78
  4163b8:	pop    ecx
  4163b9:	xchg   esi,eax
  4163ba:	jb     0x4163fd
  4163bc:	es pushf 
  4163be:	cmc    
  4163bf:	cmp    al,0xe6
  4163c1:	lahf   
  4163c2:	mov    BYTE PTR [ecx+ebp*1],cl
  4163c5:	stos   DWORD PTR es:[edi],eax
  4163c6:	daa    
  4163c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c8:	add    cl,BYTE PTR [edx]
  4163ca:	mov    BYTE PTR [eax],0xd
  4163cd:	mov    al,0xda
  4163cf:	jle    0x416368
  4163d1:	push   eax
  4163d2:	(bad)  
  4163d3:	adc    eax,0x8b571a14
  4163d8:	inc    ebx
  4163d9:	scas   al,BYTE PTR es:[edi]
  4163da:	jecxz  0x416452
  4163dc:	aaa    
  4163dd:	sbb    cl,BYTE PTR [eax-0x2f413cfc]
  4163e3:	mov    al,ds:0xbfa0dfce
  4163e8:	mov    DWORD PTR [ecx],esi
  4163ea:	repnz sub esp,esi
  4163ed:	imul   esp,DWORD PTR [esi+0x286c208a],0xffffffc5
  4163f4:	jp     0x4163be
  4163f6:	add    ebp,DWORD PTR [esi+0x276667fd]
  4163fc:	ret    0x86cc
  4163ff:	adc    edi,DWORD PTR ss:[esi-0x28]
  416403:	sahf   
  416404:	int    0x16
  416406:	(bad)  
  416407:	lock and edx,DWORD PTR [edx-0x72]
  41640b:	call   0xcd47:0x8f29e56a
  416412:	iret   
  416413:	mov    ds:0x9380d365,eax
  416418:	add    DWORD PTR [edx+0x570943b8],esp
  41641e:	cmp    BYTE PTR [ecx],dl
  416420:	mov    ebp,0x6b2ad0f0
  416425:	stos   DWORD PTR es:[edi],eax
  416426:	loope  0x41646a
  416428:	xor    eax,0xdb17330a
  41642d:	scas   eax,DWORD PTR es:[edi]
  41642e:	lea    eax,[edx+0x2f]
  416431:	xor    BYTE PTR [edi],0x29
  416434:	sahf   
  416435:	dec    esp
  416436:	scas   eax,DWORD PTR es:[edi]
  416437:	adc    al,0xb6
  416439:	lock jb 0x41643c
  41643c:	pop    esp
  41643d:	mov    eax,ds:0xc91daf0a
  416442:	fcmovnu st,st(1)
  416444:	or     cl,dh
  416446:	sub    eax,0x7c31b5fa
  41644b:	jnp    0x4163f1
  41644d:	xchg   ebp,eax
  41644e:	fdiv   DWORD PTR [esi+0x79]
  416451:	or     eax,0xec2e4bc1
  416456:	aam    0x20
  416458:	mov    dh,0x5c
  41645a:	sub    eax,0x86b16718
  41645f:	mov    bl,0x6d
  416461:	sub    BYTE PTR [ecx-0xd99a855],dl
  416467:	inc    ebp
  416468:	lahf   
  416469:	scas   al,BYTE PTR es:[edi]
  41646a:	add    eax,0xbe3d8685
  41646f:	out    dx,al
  416470:	mov    esi,0x274b27f
  416475:	nop
  416476:	sahf   
  416477:	cli    
  416478:	jmp    0x41640c
  41647a:	call   0x62cd:0x585f445b
  416481:	call   0xe7e0:0x960dcb0e
  416488:	inc    eax
  416489:	pop    ebp
  41648a:	imul   edx,DWORD PTR [edi+edx*1],0x9fd8c9c5
  416491:	outs   dx,DWORD PTR ds:[esi]
  416492:	mov    al,0x13
  416494:	inc    ebx
  416495:	adc    al,0xc3
  416497:	js     0x416497
  416499:	jecxz  0x4164d4
  41649b:	and    eax,0xdbf1fb3
  4164a0:	adc    eax,0xcb452d86
  4164a5:	and    esp,esi
  4164a7:	fst    st(5)
  4164a9:	push   es
  4164aa:	les    ecx,FWORD PTR [edx+0x38]
  4164ad:	add    dh,al
  4164af:	fs sar edx,1
  4164b2:	cmp    al,0xe
  4164b4:	sub    ecx,0xffffffa8
  4164b7:	push   ebx
  4164b8:	dec    esp
  4164b9:	mov    edi,0xfaa5020a
  4164be:	into   
  4164bf:	std    
  4164c0:	dec    edi
  4164c1:	ins    DWORD PTR es:[edi],dx
  4164c2:	jg     0x416488
  4164c4:	sbb    al,0x86
  4164c6:	je     0x416471
  4164c8:	dec    ebx
  4164c9:	xchg   edx,eax
  4164ca:	or     esi,DWORD PTR [edx]
  4164cc:	push   0x3bd96d86
  4164d1:	repz sub eax,0x6e2ecf1d
  4164d7:	dec    ebp
  4164d8:	fbstp  TBYTE PTR [ebx]
  4164da:	xor    eax,0x401b716a
  4164df:	push   ds
  4164e0:	cmp    BYTE PTR [edi-0x80],ah
  4164e3:	pop    ebp
  4164e4:	mov    dh,0x35
  4164e6:	add    DWORD PTR [ecx],edi
  4164e8:	add    ch,cl
  4164ea:	shl    ebp,0x38
  4164ed:	mov    eax,0x5a8d7176
  4164f2:	inc    esp
  4164f3:	mov    eax,ds:0xfe36cfdb
  4164f8:	sbb    BYTE PTR [ecx+eiz*1],cl
  4164fb:	jne    0x41650a
  4164fd:	xor    DWORD PTR [ecx],ecx
  4164ff:	scas   eax,DWORD PTR es:[edi]
  416500:	jns    0x4164ff
  416502:	pushf  
  416503:	sub    ebp,DWORD PTR [eax+ebx*8+0x37]
  416507:	xchg   edx,eax
  416508:	xchg   edi,eax
  416509:	fld    DWORD PTR [ebp+0x2b]
  41650c:	stos   BYTE PTR es:[edi],al
  41650d:	mov    esi,0xc61d0cd5
  416512:	mov    ss,WORD PTR [edi+0x777f8dc9]
  416518:	in     eax,0x3b
  41651a:	inc    edx
  41651b:	or     BYTE PTR [ebx+0xd],0x83
  41651f:	xor    ebx,DWORD PTR [esi]
  416521:	inc    ebp
  416522:	mov    WORD PTR [edx+0x71d6d3e4],fs
  416528:	dec    esp
  416529:	mov    bh,0x2a
  41652b:	fstp   QWORD PTR [ebx]
  41652d:	lods   al,BYTE PTR ds:[esi]
  41652e:	cmp    al,0xa3
  416530:	loopne 0x4164de
  416532:	aam    0x50
  416534:	push   ecx
  416535:	jle    0x416565
  416537:	ss mov edi,0xb3e4ad46
  41653d:	adc    eax,0xb99c5715
  416542:	test   BYTE PTR [eax+0x75],al
  416545:	xchg   edi,eax
  416546:	add    dh,BYTE PTR [edx+0x77]
  416549:	xlat   BYTE PTR ds:[ebx]
  41654a:	jo     0x4164fb
  41654c:	push   ss
  41654d:	ret    0x8a82
  416550:	ret    0xa252
  416553:	test   eax,0xd67e2377
  416558:	xchg   ebp,eax
  416559:	lea    edi,[ebp-0x49]
  41655c:	push   esi
  41655d:	mov    WORD PTR [ebp-0x787b80a4],ss
  416563:	jae    0x416508
  416565:	xchg   BYTE PTR [esi-0x4],ch
  416568:	xchg   edi,eax
  416569:	test   al,bl
  41656b:	pop    es
  41656c:	pop    edx
  41656d:	aaa    
  41656e:	xchg   BYTE PTR [edi+0x24],bl
  416571:	loopne 0x416516
  416573:	and    BYTE PTR [edi],dl
  416575:	push   esp
  416576:	add    DWORD PTR [esi],0x57fd266d
  41657c:	les    ebp,FWORD PTR [edi]
  41657e:	aaa    
  41657f:	pop    ebp
  416580:	sbb    ecx,DWORD PTR [ecx+0x1019c71c]
  416586:	test   DWORD PTR [esi+0x13f6af55],esi
  41658c:	push   es
  41658d:	loope  0x416510
  41658f:	call   0x73b:0xc9f52a50
  416596:	les    esp,FWORD PTR [edi]
  416598:	sub    eax,0x50c37910
  41659d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659e:	enter  0x188f,0xc
  4165a2:	shr    BYTE PTR [ecx-0xc],0xda
  4165a6:	jb     0x4165fd
  4165a8:	je     0x4165a5
  4165aa:	stos   DWORD PTR es:[edi],eax
  4165ab:	mov    cl,0xe3
  4165ad:	pop    ss
  4165ae:	rcr    BYTE PTR [edx],1
  4165b0:	inc    ebx
  4165b1:	xor    BYTE PTR ds:0xd67b4c59,0x30
  4165b8:	pop    ss
  4165b9:	push   esp
  4165ba:	add    ecx,DWORD PTR [eax+0x76a13af3]
  4165c0:	adc    eax,edi
  4165c2:	stos   DWORD PTR es:[edi],eax
  4165c3:	data16 mov di,0xbbab
  4165c8:	bound  edi,QWORD PTR [eax+0x39]
  4165cb:	rcr    BYTE PTR [edx],0xac
  4165ce:	in     eax,0xcf
  4165d0:	or     ecx,DWORD PTR [edi+esi*1-0x3]
  4165d4:	fstp   QWORD PTR [ecx]
  4165d6:	sub    DWORD PTR [ecx+0x3f],edi
  4165d9:	xor    eax,0x7d6b2fc0
  4165de:	pushf  
  4165df:	add    eax,0x3d29a7ea
  4165e4:	or     DWORD PTR [eax+ebp*2-0x79],0xffffff9a
  4165e9:	les    ebp,FWORD PTR [esi-0x495a833e]
  4165ef:	or     eax,0x259d3943
  4165f4:	das    
  4165f5:	fstp   QWORD PTR [ecx+0x5d856501]
  4165fb:	push   ds
  4165fc:	dec    ebx
  4165fd:	push   ebp
  4165fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416600:	jecxz  0x41661e
  416602:	pop    es
  416603:	aad    0xac
  416605:	fs sbb al,0x22
  416608:	fcmovb st,st(5)
  41660a:	xchg   BYTE PTR [eax*4-0x4f29282c],ch
  416611:	jnp    0x4165bf
  416613:	shr    DWORD PTR [ebp-0x3d23186e],0x61
  41661a:	in     eax,0xa
  41661c:	cmp    dh,bh
  41661e:	arpl   WORD PTR [ebx+edx*8+0x7e5342e2],dx
  416625:	dec    esi
  416626:	push   ds
  416627:	loopne 0x41667d
  416629:	(bad)  
  41662b:	shl    DWORD PTR [ebx],cl
  41662d:	jae    0x416605
  41662f:	imul   ecx,DWORD PTR [edx],0x11d53804
  416635:	cmp    dh,ah
  416637:	push   edx
  416638:	sub    cl,dl
  41663a:	sub    dl,ah
  41663c:	push   ss
  41663d:	call   0x9b5f:0x20a3689f
  416644:	and    DWORD PTR [ebp+0x1],eax
  416647:	adc    BYTE PTR [ecx],al
  416649:	adc    al,0x7d
  41664b:	pushf  
  41664c:	dec    esp
  41664d:	leave  
  41664e:	out    dx,al
  41664f:	in     al,0x2d
  416651:	in     eax,dx
  416652:	or     ch,BYTE PTR [eax-0x7d]
  416655:	inc    ebx
  416656:	xor    DWORD PTR [eax-0x52],edi
  416659:	jp     0x4165e5
  41665b:	sbb    DWORD PTR [ecx-0x1ea55268],ecx
  416661:	in     al,0xf5
  416663:	jp     0x416670
  416665:	xor    edx,DWORD PTR [ecx-0x1c]
  416668:	pop    ebp
  416669:	add    ecx,edi
  41666b:	mov    WORD PTR [edx+0x22],fs
  41666e:	dec    esp
  41666f:	mov    al,ds:0xde5e5642
  416674:	adc    al,ah
  416676:	cli    
  416677:	dec    edx
  416678:	adc    ch,BYTE PTR [edx]
  41667a:	int    0x17
  41667c:	jns    0x416654
  41667e:	iret   
  41667f:	popa   
  416680:	mov    ds:0x681499d7,eax
  416685:	push   ebp
  416686:	sub    ecx,DWORD PTR [ecx+esi*1-0x1fbc43b3]
  41668d:	or     bl,BYTE PTR fs:[ebx]
  416690:	cmp    BYTE PTR [esi+0x2a],0x4e
  416694:	and    esi,ecx
  416696:	(bad)  
  416697:	dec    esi
  416698:	inc    esp
  416699:	loop   0x4166cd
  41669b:	xchg   edx,eax
  41669c:	mov    ecx,0x460c9c73
  4166a1:	push   0xffffffa0
  4166a3:	je     0x4166e4
  4166a5:	outs   dx,BYTE PTR ds:[esi]
  4166a6:	jmp    0x2cc4:0x38474c7e
  4166ad:	push   ds
  4166ae:	dec    edi
  4166af:	jne    0x41664e
  4166b1:	lods   eax,DWORD PTR ds:[esi]
  4166b2:	retf   0x627a
  4166b5:	in     al,0x80
  4166b7:	js     0x416710
  4166b9:	jnp    0x49c57a04
  4166bf:	fist   DWORD PTR [eax-0x60]
  4166c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c3:	inc    esi
  4166c4:	sbb    edi,DWORD PTR [ecx+0x1f]
  4166c7:	pop    ebp
  4166c8:	hlt    
  4166c9:	xor    DWORD PTR [eax+eiz*1],esp
  4166cc:	and    ah,BYTE PTR [edx+0x2625d64a]
  4166d2:	adc    al,0xac
  4166d4:	loope  0x416684
  4166d6:	or     eax,0x674fe6de
  4166db:	adc    al,0x5b
  4166dd:	mov    bl,0x96
  4166df:	jae    0x41666b
  4166e1:	test   ebp,0xa66b24d
  4166e7:	(bad)  
  4166e8:	pop    edi
  4166e9:	or     DWORD PTR [eax],0x80880d85
  4166ef:	inc    esi
  4166f0:	loopne 0x4166ec
  4166f2:	rcl    DWORD PTR ss:[ecx],0x89
  4166f6:	dec    edx
  4166f7:	sar    DWORD PTR [esp+eiz*8-0x23],1
  4166fb:	jmp    0xa87de8b4
  416700:	js     0x4166d3
  416702:	dec    ebp
  416703:	and    eax,0x6b3b5ab4
  416708:	adc    DWORD PTR [eax+0x45],edx
  41670b:	out    dx,al
  41670c:	pop    ebx
  41670d:	int3   
  41670e:	into   
  41670f:	or     eax,DWORD PTR [edi]
  416711:	jns    0x416694
  416713:	xchg   esp,eax
  416714:	aam    0xc6
  416716:	pop    ss
  416717:	stos   DWORD PTR es:[edi],eax
  416718:	or     al,0xd0
  41671a:	les    ebx,FWORD PTR [eax]
  41671c:	push   cs
  41671d:	out    dx,eax
  41671e:	inc    esi
  41671f:	leave  
  416720:	inc    ebx
  416721:	aas    
  416722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416723:	enter  0xb6ed,0x5f
  416727:	jb     0x4167a7
  416729:	jge    0x4166f3
  41672b:	gs (bad) 
  41672d:	cdq    
  41672e:	hlt    
  41672f:	shl    DWORD PTR [ecx+0x3faa9ab6],cl
  416735:	add    eax,0x35b055b1
  41673a:	sbb    al,0x1f
  41673c:	test   DWORD PTR [edx],edx
  41673e:	enter  0xb4dc,0x32
  416742:	dec    edx
  416743:	mov    ch,0x74
  416745:	adc    eax,0x5774fa1b
  41674a:	jmp    0x41671f
  41674c:	fadd   QWORD PTR [ecx+0x45]
  41674f:	push   ebp
  416750:	mov    eax,0x6bf6cae6
  416756:	mov    ch,0x54
  416758:	test   BYTE PTR [ebx-0x3c],bl
  41675b:	and    al,0xfb
  41675d:	inc    ebx
  41675e:	je     0x4167d8
  416760:	enter  0x1e21,0xbd
  416764:	or     eax,0xae077a12
  416769:	mov    dl,0xea
  41676b:	mov    cl,0x46
  41676d:	ss mov ebp,0x3f9d8845
  416773:	pop    ds
  416774:	mov    esp,0x96c3249f
  416779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41677a:	cmp    BYTE PTR [edi],0x71
  41677d:	xlat   BYTE PTR ds:[ebx]
  41677e:	jecxz  0x416712
  416780:	or     ecx,ebp
  416782:	mov    dh,dh
  416784:	retf   0xb05
  416787:	pop    ebx
  416788:	fs sbb eax,0xa1d1917c
  41678e:	mov    al,ds:0x90ffde5e
  416793:	daa    
  416794:	idiv   cl
  416796:	or     eax,0x11a84257
  41679b:	pop    es
  41679c:	in     al,dx
  41679d:	fwait
  41679e:	jg     0x416780
  4167a0:	mov    bh,0xe3
  4167a2:	mov    ebx,ss
  4167a4:	jp     0x416804
  4167a6:	inc    ecx
  4167a7:	pop    eax
  4167a8:	rcr    ecx,0x86
  4167ab:	(bad)  
  4167ac:	call   0x248a2527
  4167b1:	and    ah,BYTE PTR [eax+0x7c556a7d]
  4167b7:	enter  0x4488,0x4f
  4167bb:	push   esi
  4167bc:	jge    0x416784
  4167be:	dec    esi
  4167bf:	shl    BYTE PTR [eax+0x35f6a3ff],1
  4167c5:	mov    cl,0xc0
  4167c7:	pop    ebp
  4167c8:	sub    eax,0xe56739a4
  4167cd:	enter  0x6eed,0x70
  4167d1:	cmp    BYTE PTR [edi+0x3a],0x97
  4167d5:	stos   BYTE PTR es:[edi],al
  4167d6:	lock scas eax,DWORD PTR es:[edi]
  4167d8:	mov    al,ds:0x5fbc982b
  4167dd:	mov    ecx,DWORD PTR [edi+0x61]
  4167e0:	xchg   esp,eax
  4167e1:	inc    ebx
  4167e2:	adc    eax,0x21cbc389
  4167e7:	xchg   edx,eax
  4167e8:	retf   
  4167e9:	rcl    ah,0x7d
  4167ec:	fisubr WORD PTR [ecx-0x7b]
  4167ef:	add    al,0x14
  4167f1:	out    dx,al
  4167f2:	dec    ebp
  4167f3:	test   ebp,edi
  4167f5:	and    ch,BYTE PTR [eax-0x404716c4]
  4167fb:	adc    ch,bl
  4167fd:	inc    edi
  4167fe:	ror    BYTE PTR [ecx],cl
  416800:	popf   
  416801:	jge    0x416796
  416803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416804:	dec    esi
  416805:	push   0xffffff95
  416807:	enter  0xd9ac,0x7a
  41680b:	call   DWORD PTR [eax+0x1]
  41680e:	jnp    0x416832
  416810:	out    0x74,eax
  416812:	sbb    ecx,DWORD PTR [ecx+0x2c]
  416815:	inc    esp
  416816:	adc    DWORD PTR [esi],esi
  416818:	jae    0x416837
  41681a:	cdq    
  41681b:	dec    ebx
  41681c:	mov    ds:0xd5c8ea16,eax
  416821:	sub    eax,0x1e132dbe
  416826:	and    eax,0xbb6feb37
  41682b:	mov    bh,dl
  41682d:	je     0x416861
  41682f:	aaa    
  416830:	sbb    ah,0xe5
  416833:	stos   BYTE PTR es:[edi],al
  416834:	repnz lahf 
  416836:	in     al,0xfe
  416838:	jmp    0x416810
  41683a:	jo     0x416885
  41683c:	sub    eax,0x118f604d
  416841:	mov    bl,cl
  416843:	pop    edx
  416844:	and    al,0xb6
  416846:	shr    DWORD PTR [esi-0xc],1
  416849:	in     al,0xd1
  41684b:	jecxz  0x41688d
  41684d:	gs jge 0x416881
  416850:	adc    ebp,DWORD PTR [ecx]
  416852:	bound  edi,QWORD PTR ds:0x171c9bcd
  416858:	mov    bh,BYTE PTR [esi-0x4a]
  41685b:	call   0x22d5:0x7cfdffa9
  416862:	or     ah,ah
  416864:	out    0xbe,al
  416866:	stc    
  416867:	pop    ecx
  416868:	rcr    DWORD PTR [eax+0x1a148bf8],1
  41686e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41686f:	out    dx,al
  416870:	arpl   WORD PTR ds:0x5ee73132,ax
  416876:	xor    al,0x4e
  416878:	neg    DWORD PTR [eax]
  41687a:	and    DWORD PTR [edx-0x3bd5bd9a],esp
  416880:	arpl   WORD PTR [eax+0x7e9c916b],cx
  416886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416887:	cmp    al,BYTE PTR [edx-0x74e02e79]
  41688d:	and    DWORD PTR [ecx+0x453b67ee],ebp
  416893:	dec    esp
  416894:	cmp    BYTE PTR [ebx],ah
  416896:	xor    dl,dl
  416898:	in     al,0x59
  41689a:	push   ebp
  41689b:	pop    ss
  41689c:	sbb    dl,BYTE PTR [esi]
  41689e:	push   ss
  41689f:	arpl   WORD PTR [esi-0x49751aec],bx
  4168a5:	jg     0x416884
  4168a7:	push   ecx
  4168a8:	bound  ebx,QWORD PTR [esp+edx*1+0x3c]
  4168ac:	xor    ebx,DWORD PTR [ecx+0x26]
  4168af:	in     eax,dx
  4168b0:	xchg   esp,eax
  4168b1:	cdq    
  4168b2:	out    dx,eax
  4168b3:	ds ds and al,0x33
  4168b7:	mov    esi,DWORD PTR [ecx+ebp*2-0x48]
  4168bb:	cs jmp 0xcd67:0xbc55d8a3
  4168c3:	arpl   sp,cx
  4168c5:	dec    ebp
  4168c6:	mov    ah,0x30
  4168c8:	xchg   ebx,eax
  4168c9:	or     al,0x56
  4168cb:	and    BYTE PTR [eax+0x4fc8108],bh
  4168d1:	iret   
  4168d2:	iret   
  4168d3:	(bad)  
  4168d4:	xchg   edx,eax
  4168d5:	mov    ebp,0x3475bc9
  4168da:	mov    ah,0x92
  4168dc:	add    esi,DWORD PTR [edx+eiz*1]
  4168df:	adc    al,0x80
  4168e1:	adc    esi,DWORD PTR [esi-0x48]
  4168e4:	dec    ebx
  4168e5:	adc    esi,DWORD PTR [ebx-0xfd36e5b]
  4168eb:	lea    ebx,[edi]
  4168ed:	sbb    ecx,DWORD PTR [esi+ebp*2-0x62070cd]
  4168f4:	jne    0x416958
  4168f6:	cmp    DWORD PTR [ebp-0xe],ebx
  4168f9:	int3   
  4168fa:	dec    ebx
  4168fb:	nop
  4168fc:	jle    0x41691b
  4168fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ff:	stos   BYTE PTR es:[edi],al
  416900:	rol    DWORD PTR [ebp-0x42f99b19],cl
  416906:	addr16 xchg ebp,eax
  416908:	(bad)
  41690b:	push   ebx
  41690c:	cwde   
  41690d:	jnp    0x416960
  41690f:	cmc    
  416910:	push   esp
  416911:	xchg   BYTE PTR [ecx],dh
  416913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416914:	xor    eax,0x87829b62
  416919:	in     eax,dx
  41691a:	rcl    BYTE PTR [ecx+0x36],0x21
  41691e:	sbb    al,ch
  416920:	dec    edi
  416921:	jl     0x416931
  416923:	(bad)  
  416925:	js     0x4168c4
  416927:	stos   BYTE PTR es:[edi],al
  416928:	sbb    eax,0x875700fb
  41692d:	shl    BYTE PTR ss:[ecx],0x65
  416931:	ss mov dl,0xc3
  416934:	xor    eax,0x8226f58d
  416939:	pop    ss
  41693a:	data16 (bad) 
  41693c:	repnz rol BYTE PTR [eax-0x54be8b70],cl
  416943:	jo     0x4168d8
  416945:	call   0x6a4e79e7
  41694a:	pusha  
  41694b:	or     esi,eax
  41694d:	xchg   edx,eax
  41694e:	or     esi,0xffffff89
  416951:	sub    BYTE PTR [edi+0x5b],ah
  416954:	sbb    DWORD PTR [eax],edx
  416956:	cmp    al,0x4e
  416958:	inc    ecx
  416959:	add    dh,BYTE PTR [edx+0x53]
  41695c:	js     0x41692a
  41695e:	ins    DWORD PTR es:[edi],dx
  41695f:	jbe    0x416912
  416961:	loope  0x416972
  416963:	pop    ebx
  416964:	shl    DWORD PTR [edi],1
  416966:	add    eax,0xa4b7c180
  41696b:	div    BYTE PTR [eax-0x3c]
  41696e:	mov    esp,0x793c183c
  416973:	mov    esp,0x74cf1365
  416978:	adc    BYTE PTR [eax-0x55],ah
  41697b:	lds    esi,FWORD PTR [esi]
  41697d:	mov    esp,ss
  41697f:	xor    al,0xb5
  416981:	mov    DWORD PTR [ecx+edx*4+0x40],edi
  416985:	daa    
  416986:	out    0xae,al
  416988:	fsubr  QWORD PTR ds:0xd31a1ad3
  41698e:	and    DWORD PTR [edx+0x1e],ebx
  416991:	add    BYTE PTR [edx],al
  416993:	scas   eax,DWORD PTR es:[edi]
  416994:	xor    DWORD PTR [eax],ebp
  416996:	dec    eax
  416997:	push   ss
  416998:	nop
  416999:	jbe    0x416992
  41699b:	fistp  QWORD PTR [ebx-0x3a5d621c]
  4169a1:	adc    BYTE PTR [edx+0x33],0x9f
  4169a5:	push   ebx
  4169a6:	pop    es
  4169a7:	add    ebx,DWORD PTR [eax]
  4169a9:	sbb    edi,DWORD PTR [ebx]
  4169ab:	ret    
  4169ac:	test   cl,bl
  4169ae:	pop    edi
  4169af:	xchg   BYTE PTR [ebp-0x4e],dh
  4169b2:	pop    edi
  4169b3:	xor    al,bh
  4169b5:	pushf  
  4169b6:	push   esp
  4169b7:	cwde   
  4169b8:	xchg   BYTE PTR [esi],ah
  4169ba:	mov    ?,WORD PTR [esi+0x5]
  4169bd:	sbb    al,0xc5
  4169bf:	fwait
  4169c0:	out    dx,eax
  4169c1:	(bad)  
  4169c2:	fistp  DWORD PTR [ebx+0x15a416c4]
  4169c8:	shl    BYTE PTR [ecx-0xbae5a28],1
  4169ce:	sbb    BYTE PTR [ecx],bl
  4169d0:	fsubrp st(0),st
  4169d2:	ss ss mov bh,0x3a
  4169d6:	cld    
  4169d7:	fldlg2 
  4169d9:	inc    edx
  4169da:	das    
  4169db:	push   es
  4169dc:	loopne 0x416984
  4169de:	adc    ah,BYTE PTR [edx+ecx*4+0x10aee752]
  4169e5:	sub    ah,BYTE PTR [ebx+eiz*1]
  4169e8:	mov    ah,0x1
  4169ea:	adc    DWORD PTR [eax],0xffffff91
  4169ed:	jg     0x4169ea
  4169ef:	inc    edx
  4169f0:	out    dx,al
  4169f1:	inc    eax
  4169f2:	mov    al,BYTE PTR [ebp+0x63db301a]
  4169f8:	pop    es
  4169f9:	xchg   edx,eax
  4169fa:	pop    esi
  4169fc:	jl     0x416a53
  4169fe:	adc    bl,BYTE PTR [ebx]
  416a00:	lods   al,BYTE PTR ds:[esi]
  416a01:	mov    ebp,ebp
  416a03:	sub    eax,DWORD PTR [ecx-0x7f]
  416a06:	int    0x2f
  416a08:	pop    ss
  416a09:	jle    0x416a75
  416a0b:	std    
  416a0c:	enter  0xf5f1,0x60
  416a10:	mov    BYTE PTR [esi],bl
  416a12:	jae    0x416a1d
  416a14:	outs   dx,DWORD PTR ds:[esi]
  416a15:	xchg   esi,eax
  416a16:	push   edx
  416a17:	enter  0x7b5,0x86
  416a1b:	jno    0x416a08
  416a1d:	inc    esp
  416a1e:	or     al,0xf6
  416a20:	cmp    ah,ah
  416a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a23:	in     eax,dx
  416a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a25:	add    ebp,edx
  416a27:	push   ss
  416a28:	sbb    DWORD PTR [eax],edx
  416a2a:	xchg   esi,eax
  416a2b:	add    esp,DWORD PTR [ebx]
  416a2d:	pusha  
  416a2e:	pop    esp
  416a2f:	idiv   BYTE PTR [edi]
  416a31:	add    dh,dl
  416a33:	push   edi
  416a34:	std    
  416a35:	cli    
  416a36:	loope  0x416a78
  416a38:	stos   DWORD PTR es:[edi],eax
  416a39:	sbb    ebx,ebx
  416a3b:	outs   dx,DWORD PTR ds:[esi]
  416a3c:	aam    0xb1
  416a3e:	cwde   
  416a3f:	or     BYTE PTR [edx+0x3f],cl
  416a42:	push   ecx
  416a43:	or     al,0x90
  416a45:	jbe    0x4169fd
  416a47:	int3   
  416a48:	ss retf 0x257d
  416a4c:	inc    ecx
  416a4d:	push   edi
  416a4e:	xchg   ecx,eax
  416a4f:	je     0x416a77
  416a51:	sbb    bh,BYTE PTR [edi]
  416a53:	in     al,0xe2
  416a55:	adc    BYTE PTR [eax],ah
  416a57:	std    
  416a58:	adc    al,dl
  416a5a:	aad    0x2d
  416a5c:	call   ecx
  416a5e:	sub    eax,0x4ba29043
  416a63:	push   cs
  416a64:	xor    BYTE PTR [ebx+0x7afb43b3],bl
  416a6a:	pop    ebx
  416a6b:	lods   eax,DWORD PTR ds:[esi]
  416a6c:	and    DWORD PTR [ecx-0x56],ecx
  416a6f:	fadd   QWORD PTR [ebp+0x16]
  416a72:	and    edi,0xffffff8b
  416a75:	dec    ebp
  416a76:	or     BYTE PTR [edx-0x5a1ea1e],bh
  416a7c:	sub    edx,ecx
  416a7e:	add    edx,DWORD PTR [ebp-0x44]
  416a81:	mov    DWORD PTR [ebp-0x44],edx
  416a84:	mov    ecx,DWORD PTR [ebp+0x8]
  416a87:	xor    ecx,eax
  416a89:	add    ecx,esi
  416a8b:	jmp    0x418e4a
  416a90:	(bad)  
  416a91:	clc    
  416a92:	fsub   st,st(6)
  416a94:	mov    ah,0xc6
  416a96:	mov    ah,0xe8
  416a98:	mov    cl,0x4b
  416a9a:	cmp    DWORD PTR [esi+edi*1-0x2920a7cb],edi
  416aa1:	push   edi
  416aa2:	jns    0x416b1e
  416aa4:	fcomp  DWORD PTR [edi+0x7a]
  416aa7:	jp     0x416ad6
  416aa9:	dec    esp
  416aaa:	sar    BYTE PTR ds:0x4d777383,cl
  416ab0:	inc    esp
  416ab1:	in     eax,dx
  416ab2:	and    BYTE PTR [ecx-0x6],0x29
  416ab6:	arpl   WORD PTR fs:[ebx],di
  416ab9:	lods   eax,DWORD PTR ds:[esi]
  416aba:	jle    0x416a45
  416abc:	hlt    
  416abd:	xchg   DWORD PTR [eax-0x1f8a8f19],edi
  416ac3:	ins    DWORD PTR es:[edi],dx
  416ac4:	fxam   
  416ac6:	push   ebx
  416ac7:	mov    WORD PTR [ebp-0x6a7a6e75],?
  416acd:	mov    esi,0x5f2a3fbc
  416ad2:	jns    0x416aef
  416ad4:	addr16 inc ebp
  416ad6:	icebp  
  416ad7:	push   cs
  416ad8:	xor    al,0x7
  416ada:	adc    DWORD PTR [ecx+0x73],esi
  416add:	mov    ah,0x9d
  416adf:	scas   al,BYTE PTR es:[edi]
  416ae0:	inc    eax
  416ae1:	push   eax
  416ae2:	dec    esp
  416ae3:	jmp    esi
  416ae5:	inc    edx
  416ae6:	popa   
  416ae7:	dec    edi
  416ae8:	jno    0x416ab7
  416aea:	repnz cmp eax,0xad6c7bf1
  416af0:	or     cl,BYTE PTR [esi]
  416af2:	sbb    eax,0x30ad8b0c
  416af7:	popf   
  416af8:	repnz pushf 
  416afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416afb:	cmp    DWORD PTR [esi-0x16],edi
  416afe:	call   0x7b713036
  416b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b04:	pop    esi
  416b05:	icebp  
  416b06:	add    dh,BYTE PTR [esi]
  416b08:	push   0x67ab5809
  416b0d:	mov    ebx,eax
  416b0f:	loopne 0x416aa0
  416b11:	push   ecx
  416b12:	adc    ebp,DWORD PTR [ecx-0x2a]
  416b15:	cmp    eax,DWORD PTR [esi+0x66]
  416b18:	call   0x684a2b69
  416b1d:	add    DWORD PTR [edi+0x6e],ecx
  416b20:	sbb    al,ch
  416b22:	ret    0xb54f
  416b25:	dec    ebx
  416b26:	retf   
  416b27:	ins    BYTE PTR es:[edi],dx
  416b28:	mov    ?,edx
  416b2a:	mov    dh,0xfe
  416b2c:	jns    0x416b77
  416b2e:	mov    ch,0xd
  416b30:	(bad)  
  416b31:	adc    ebx,edx
  416b33:	jns    0x416b4b
  416b35:	xor    cl,bl
  416b37:	call   0xc2fa7e60
  416b3c:	mov    bl,0xf1
  416b3e:	jmp    0x5c38:0x8f4e5c0e
  416b45:	dec    ebp
  416b46:	retf   
  416b47:	xor    edx,esp
  416b49:	add    BYTE PTR [ecx+0x54],0xce
  416b4d:	fisttp QWORD PTR [ebx+0xdcc9bf1]
  416b53:	pop    eax
  416b54:	or     BYTE PTR [eax+0x45],bh
  416b57:	push   edi
  416b58:	adc    eax,0x15881a24
  416b5d:	xor    dh,BYTE PTR es:[ebx]
  416b60:	test   eax,0xd43c1e9f
  416b65:	out    dx,al
  416b66:	cmp    BYTE PTR [ecx-0x55],bh
  416b69:	arpl   WORD PTR [ebx-0x5d6bd885],cx
  416b6f:	xchg   ebx,eax
  416b70:	cmp    BYTE PTR [eax+eax*1-0x42],ah
  416b74:	inc    ebx
  416b75:	xlat   BYTE PTR ds:[ebx]
  416b76:	pop    esp
  416b77:	mov    bl,0x9c
  416b79:	mov    edi,ebp
  416b7b:	cld    
  416b7c:	test   al,0x4a
  416b7e:	pop    es
  416b7f:	or     al,BYTE PTR [edx]
  416b81:	out    dx,al
  416b82:	mov    esp,0x923ae15
  416b87:	dec    ecx
  416b88:	pop    ebp
  416b89:	and    ebp,DWORD PTR [esi]
  416b8b:	fdiv   QWORD PTR [ebx]
  416b8d:	mov    al,0x15
  416b8f:	cmp    eax,0x6c27c6d1
  416b94:	mov    bl,BYTE PTR [esi]
  416b96:	pop    es
  416b97:	repnz push edi
  416b99:	je     0x416bae
  416b9b:	or     edx,DWORD PTR [ecx]
  416b9d:	aas    
  416b9e:	mov    edx,0x4a257042
  416ba3:	sbb    DWORD PTR [esi-0x4c],0xaf0e1dcf
  416baa:	adc    DWORD PTR [edx-0x4d],ebp
  416bad:	(bad)  
  416bae:	(bad)  
  416baf:	fidiv  DWORD PTR [esi-0x3d70c6f5]
  416bb5:	retf   
  416bb6:	mov    DWORD PTR [ebx],edx
  416bb8:	rcr    al,1
  416bba:	mov    edi,0xe74d993d
  416bbf:	push   0x8c5c2f6d
  416bc4:	add    al,0x6b
  416bc6:	out    0xb8,al
  416bc8:	loop   0x416c0b
  416bca:	pop    ebx
  416bcb:	add    dh,BYTE PTR [edx-0x4dc9dc35]
  416bd1:	ret    
  416bd2:	inc    edi
  416bd3:	pop    es
  416bd4:	and    esp,DWORD PTR [eax]
  416bd6:	cld    
  416bd7:	jmp    0x63d614c3
  416bdc:	popa   
  416bdd:	inc    ecx
  416bde:	add    DWORD PTR [ebp+0x13],edx
  416be1:	mov    esi,ebx
  416be3:	or     BYTE PTR [ecx-0x40bb9a80],al
  416be9:	js     0x416c0f
  416beb:	fidivr DWORD PTR [ebp+0x7a]
  416bee:	inc    edi
  416bef:	std    
  416bf0:	add    DWORD PTR [ebp+0xa6db99f],ebp
  416bf6:	or     eax,0x2ffbf5b3
  416bfb:	push   ecx
  416bfc:	scas   eax,DWORD PTR es:[edi]
  416bfd:	jmp    0xb285:0x56a45f1a
  416c04:	out    dx,al
  416c05:	loope  0x416c61
  416c07:	add    eax,esi
  416c09:	xchg   edx,eax
  416c0a:	or     al,0x7f
  416c0c:	push   es
  416c0d:	ss iret 
  416c0f:	data16 cmp al,0x17
  416c12:	sub    eax,0xac9f5bf9
  416c17:	int    0xe3
  416c19:	fiadd  WORD PTR [eax+0x43]
  416c1c:	jmp    0x416c26
  416c1e:	ret    0x3b31
  416c21:	pop    esi
  416c22:	mov    ebp,0x34763e2
  416c27:	pusha  
  416c28:	and    eax,0x8217745e
  416c2d:	adc    ebx,DWORD PTR [ebx-0x6cd03f91]
  416c33:	(bad)  
  416c34:	and    DWORD PTR [edx],esp
  416c36:	xlat   BYTE PTR ds:[ebx]
  416c37:	cs pushfw 
  416c3a:	mov    ah,0x31
  416c3c:	in     al,dx
  416c3d:	aad    0xca
  416c3f:	fild   DWORD PTR [ecx+0x246096dd]
  416c45:	jnp    0x416c25
  416c47:	dec    ebp
  416c48:	jns    0x416bee
  416c4a:	mov    ebx,0x1b13e96e
  416c4f:	rcr    BYTE PTR [ebx+0x55b3c159],cl
  416c55:	imul   eax,DWORD PTR [ebp-0x2b7e83bb],0x8f245182
  416c5f:	popa   
  416c60:	leave  
  416c61:	and    edx,esp
  416c63:	jg     0x416c54
  416c65:	mov    al,0x59
  416c67:	fst    DWORD PTR ds:0xf7cce6bc
  416c6d:	js     0x416c45
  416c6f:	scas   al,BYTE PTR es:[edi]
  416c70:	retf   0xb5db
  416c73:	mov    esi,0xdae43f6a
  416c78:	stos   BYTE PTR es:[edi],al
  416c79:	cld    
  416c7a:	ins    DWORD PTR es:[edi],dx
  416c7b:	push   edi
  416c7c:	sbb    dl,dh
  416c7e:	popa   
  416c7f:	iret   
  416c80:	adc    ecx,ecx
  416c82:	push   ds
  416c83:	sbb    dl,bl
  416c85:	dec    edx
  416c86:	sub    DWORD PTR [eax+0x6e],edx
  416c89:	in     al,dx
  416c8a:	pop    esi
  416c8b:	jb     0x416cba
  416c8d:	cmp    DWORD PTR [eax+0x4dab1cab],ebx
  416c93:	in     al,dx
  416c94:	dec    edi
  416c95:	je     0x416ca3
  416c97:	lds    edi,FWORD PTR [esi+0x86934a]
  416c9d:	mov    ds,esi
  416c9f:	xor    al,al
  416ca1:	and    al,0xe9
  416ca3:	into   
  416ca4:	iret   
  416ca5:	inc    esp
  416ca6:	jb     0x416cd5
  416ca8:	(bad)  
  416ca9:	out    0x2d,eax
  416cab:	std    
  416cac:	imul   eax,DWORD PTR [ebp+0x78],0xffffff9c
  416cb0:	lock jp 0x416d18
  416cb3:	or     BYTE PTR [ecx+edi*1+0x43],cl
  416cb7:	ror    BYTE PTR [edx-0x787d8c45],cl
  416cbd:	(bad)  
  416cbe:	test   dh,ch
  416cc0:	mov    BYTE PTR [eax],bh
  416cc2:	pop    ebx
  416cc3:	mov    WORD PTR [edi],fs
  416cc5:	and    edi,DWORD PTR [esi+0x1453bd01]
  416ccb:	push   ss
  416ccc:	ja     0x416d21
  416cce:	scas   al,BYTE PTR es:[edi]
  416ccf:	and    bl,BYTE PTR [edx]
  416cd1:	cmp    BYTE PTR [edx+0xee9db39],al
  416cd7:	xor    al,0x4b
  416cd9:	jb     0x416cc7
  416cdb:	sbb    eax,0xc60ac7c5
  416ce0:	ins    BYTE PTR es:[edi],dx
  416ce1:	jecxz  0x416d1f
  416ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ce4:	xchg   edx,eax
  416ce5:	adc    dl,BYTE PTR [eax]
  416ce7:	jno    0x416c99
  416ce9:	inc    esi
  416cea:	jl     0x416d04
  416cec:	adc    al,0xf1
  416cee:	inc    eax
  416cef:	pusha  
  416cf0:	add    esi,DWORD PTR [ebp-0x29c7c23]
  416cf6:	add    bl,BYTE PTR [eax]
  416cf8:	stos   DWORD PTR es:[edi],eax
  416cf9:	and    al,0x36
  416cfb:	cmp    BYTE PTR [ebp-0x32],cl
  416cfe:	adc    bh,BYTE PTR [ebp+0x62]
  416d01:	cwde   
  416d02:	out    0x4b,al
  416d04:	daa    
  416d05:	cmp    eax,0x79094a73
  416d0a:	xlat   BYTE PTR ds:[ebx]
  416d0b:	jns    0x416cd7
  416d0d:	mov    ch,0xef
  416d0f:	mov    ch,0x53
  416d11:	jae    0x416cb5
  416d13:	inc    edi
  416d14:	pushf  
  416d15:	repz mov dh,0x8a
  416d18:	bound  esi,QWORD PTR [ebx-0x2]
  416d1b:	mov    bh,0x2a
  416d1d:	push   eax
  416d1e:	xlat   BYTE PTR ds:[ebx]
  416d1f:	push   0x18
  416d21:	xchg   BYTE PTR [edx+0x54],ah
  416d24:	mov    al,ds:0xd785c699
  416d29:	adc    eax,eax
  416d2b:	aam    0x68
  416d2d:	dec    esi
  416d2e:	jae    0x416d0a
  416d30:	xor    eax,ebx
  416d32:	imul   edi,DWORD PTR [eax+0x221eb48b],0x14b0baa6
  416d3c:	call   0xc23a:0x4a13fa91
  416d43:	push   0xffffffe8
  416d45:	sti    
  416d46:	or     ecx,DWORD PTR [esi]
  416d48:	repnz (bad) 
  416d4a:	pusha  
  416d4b:	mov    ebx,0xb2008636
  416d50:	jb     0x416d56
  416d52:	mov    bl,0x14
  416d54:	sub    al,0x9a
  416d56:	jno    0x416d9d
  416d58:	popa   
  416d59:	das    
  416d5a:	fmul   QWORD PTR [eax+0x38]
  416d5d:	ss loopne 0x416d4c
  416d60:	push   esp
  416d61:	mov    eax,ds:0xb10e583f
  416d66:	das    
  416d67:	mov    ds:0x373a1297,eax
  416d6c:	sbb    DWORD PTR [edi-0x70],0xffffffc8
  416d70:	sub    DWORD PTR [edx+ecx*4+0x5b],ebx
  416d74:	retf   
  416d75:	iret   
  416d76:	std    
  416d77:	pop    es
  416d78:	lahf   
  416d79:	mov    dl,0xed
  416d7b:	adc    ch,BYTE PTR [esp+ebp*1]
  416d7e:	mov    dh,0x5a
  416d80:	xlat   BYTE PTR ds:[ebx]
  416d81:	ficom  DWORD PTR [ebx+0x38]
  416d84:	std    
  416d85:	test   BYTE PTR [ebx+edi*8],bh
  416d88:	test   BYTE PTR [ebx*4+0xe936fd7],dh
  416d8f:	mov    ?,WORD PTR [ecx+ebp*4+0x583f173b]
  416d96:	lock pop es
  416d98:	cmp    BYTE PTR [ebx],ah
  416d9a:	xchg   ecx,eax
  416d9b:	ret    0x15ae
  416d9e:	cmc    
  416d9f:	mov    ds:0x94f1b6dd,eax
  416da4:	xor    al,0xff
  416da6:	adc    ebx,esp
  416da8:	iret   
  416da9:	pop    edi
  416daa:	xchg   ebp,eax
  416dab:	mov    bh,0x60
  416dad:	retf   0xb8bf
  416db0:	ds mov dh,0x8c
  416db3:	jb     0x416e19
  416db5:	adc    DWORD PTR [ecx+0x52],edi
  416db8:	mov    bl,0x58
  416dba:	gs xor esp,0xf2614a16
  416dc1:	aas    
  416dc2:	add    al,0xda
  416dc4:	ins    DWORD PTR es:[edi],dx
  416dc5:	adc    bh,BYTE PTR [ebx]
  416dc7:	jecxz  0x416e30
  416dc9:	dec    esi
  416dca:	out    dx,al
  416dcb:	push   eax
  416dcc:	neg    DWORD PTR [edx+0x338f4b82]
  416dd2:	shl    BYTE PTR [edi-0x5a],cl
  416dd5:	add    esi,ebx
  416dd7:	xor    eax,0x40216a66
  416ddc:	push   0xffffffcb
  416dde:	mov    dl,0xcd
  416de0:	dec    esp
  416de1:	or     al,0xca
  416de3:	icebp  
  416de4:	xchg   edx,eax
  416de5:	or     eax,0x8849deaa
  416dea:	add    ebx,DWORD PTR [ebx+0x1a]
  416ded:	rol    BYTE PTR [edi+0x3f],1
  416df0:	rol    BYTE PTR [edi+0x55],cl
  416df3:	(bad)  
  416df4:	dec    ebx
  416df5:	fild   WORD PTR [edi]
  416df7:	pusha  
  416df8:	retf   
  416df9:	sbb    esi,DWORD PTR [ebp+edx*4-0x5]
  416dfd:	cwde   
  416dfe:	inc    esp
  416dff:	(bad)  
  416e00:	cmc    
  416e01:	fisttp QWORD PTR [esi-0x4f]
  416e04:	mov    ecx,0x4f43d1d5
  416e09:	cmp    dl,bh
  416e0b:	int    0x75
  416e0d:	xor    DWORD PTR [ecx-0x2d],ecx
  416e10:	or     al,0xf7
  416e12:	fisub  DWORD PTR [ebx+esi*1+0x68]
  416e16:	sbb    eax,DWORD PTR [ebp+0x3bee91c4]
  416e1c:	scas   eax,DWORD PTR es:[edi]
  416e1d:	scas   al,BYTE PTR es:[edi]
  416e1e:	(bad)  
  416e1f:	iret   
  416e20:	scas   eax,DWORD PTR es:[edi]
  416e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e22:	or     dh,BYTE PTR [ebp+0x6fa31e77]
  416e28:	push   edi
  416e29:	mov    ds:0xbf92adfc,al
  416e2e:	dec    ebx
  416e2f:	or     al,0xeb
  416e31:	push   ebx
  416e32:	and    al,0xc5
  416e34:	mov    eax,0x7f805fcd
  416e39:	or     al,0x24
  416e3b:	imul   ecx,DWORD PTR [ecx+eiz*8+0x5721ae9d],0xffffffe9
  416e43:	cli    
  416e44:	mov    ah,0x23
  416e46:	jno    0x416e05
  416e48:	mov    ch,0x31
  416e4a:	mov    cl,0xca
  416e4c:	rep ins BYTE PTR es:[edi],dx
  416e4e:	mov    eax,DWORD PTR [edi]
  416e50:	mov    ah,0x5e
  416e52:	cmp    DWORD PTR [edi+0x244d1326],ebx
  416e58:	or     BYTE PTR gs:[ebx],al
  416e5b:	sti    
  416e5c:	lods   al,BYTE PTR ds:[esi]
  416e5d:	cmp    al,BYTE PTR [ebp+eax*4+0x4a78699f]
  416e64:	ja     0x416e04
  416e66:	pop    ds
  416e67:	pop    ebp
  416e68:	fnstsw WORD PTR [edx+0x6d]
  416e6b:	cmp    eax,DWORD PTR es:[eax+0x29]
  416e6f:	mov    edx,0x64248d7d
  416e74:	jle    0x416e25
  416e76:	shl    BYTE PTR [ebp-0x58],0x48
  416e7a:	(bad)  
  416e7b:	push   edx
  416e7c:	push   cs
  416e7d:	push   ebp
  416e7e:	ret    
  416e7f:	sti    
  416e80:	int    0x3d
  416e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e83:	lock pop ecx
  416e85:	pop    ebp
  416e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e88:	xlat   BYTE PTR ds:[ebx]
  416e89:	jecxz  0x416ee4
  416e8b:	xchg   ebx,eax
  416e8c:	cli    
  416e8d:	out    dx,al
  416e8e:	test   BYTE PTR [edi-0x2a],ch
  416e91:	pop    ebx
  416e92:	ins    BYTE PTR es:[edi],dx
  416e93:	js     0x416e9c
  416e95:	daa    
  416e96:	stos   BYTE PTR es:[edi],al
  416e97:	sub    esi,DWORD PTR [esi-0x7c]
  416e9a:	cs pop ds
  416e9c:	pop    DWORD PTR [edi-0x5c]
  416e9f:	cmp    eax,0x72c91c93
  416ea4:	adc    BYTE PTR [ecx+0x55],0x3f
  416ea8:	inc    edi
  416ea9:	scas   al,BYTE PTR es:[edi]
  416eaa:	push   es
  416eab:	cmc    
  416eac:	dec    ebx
  416ead:	adc    esp,DWORD PTR [edi-0x40]
  416eb0:	ja     0x416ec2
  416eb2:	stc    
  416eb3:	sahf   
  416eb4:	inc    ecx
  416eb5:	mov    bl,BYTE PTR [ebp+0x20]
  416eb8:	xor    DWORD PTR [edx-0x4c],ebx
  416ebb:	jmp    0x416ef6
  416ebd:	loopne 0x416e8a
  416ebf:	(bad)  
  416ec0:	mov    ch,0xd9
  416ec2:	mov    dl,0xa9
  416ec4:	jnp    0x416e70
  416ec6:	inc    ecx
  416ec7:	push   ebx
  416ec8:	fnstsw ax
  416eca:	mov    ?,WORD PTR [esi-0x1cf7e645]
  416ed0:	ret    0xd146
  416ed3:	in     eax,dx
  416ed4:	fist   DWORD PTR [ebp-0x5b]
  416ed7:	or     ebx,esi
  416ed9:	push   eax
  416eda:	int3   
  416edb:	push   es
  416edc:	mov    edx,0x42941cd
  416ee1:	pop    edx
  416ee2:	inc    ecx
  416ee3:	stos   BYTE PTR es:[edi],al
  416ee4:	mov    edx,0xc7bdafb0
  416ee9:	lahf   
  416eea:	lock es inc ebx
  416eed:	jmp    0x1f11c989
  416ef2:	rcr    DWORD PTR [ebx+0x42],cl
  416ef5:	and    dh,dh
  416ef7:	retf   0x7bee
  416efa:	aaa    
  416efb:	or     ebp,0xffffffa2
  416efe:	jmp    0x416e87
  416f00:	pop    ebx
  416f01:	arpl   WORD PTR [ecx+0x4f668f],si
  416f07:	icebp  
  416f08:	mov    cl,0x21
  416f0a:	mov    dh,cl
  416f0c:	adc    BYTE PTR [eax+0x5cbe7ba3],dh
  416f12:	add    ch,ch
  416f14:	rep lods al,BYTE PTR ds:[esi]
  416f16:	int    0xc1
  416f18:	xor    ebp,DWORD PTR [ebp-0x55]
  416f1b:	mov    ecx,0xc0a02175
  416f20:	mov    dl,0x82
  416f22:	aas    
  416f23:	inc    ebx
  416f24:	fisttp DWORD PTR [esi+0x533394c1]
  416f2a:	leave  
  416f2b:	pop    edi
  416f2c:	jbe    0x416f93
  416f2e:	xchg   edi,eax
  416f2f:	sbb    al,0xd
  416f31:	fidivr DWORD PTR [ebp+0x44b87a1]
  416f37:	push   0x4c
  416f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f3a:	mov    cl,0x58
  416f3c:	cmp    al,0x94
  416f3e:	mov    edx,0x8ea19adb
  416f43:	mov    BYTE PTR [edi],al
  416f45:	scas   eax,DWORD PTR es:[edi]
  416f46:	aas    
  416f47:	add    BYTE PTR [edx+eiz*2],0x37
  416f4b:	call   0xbedf:0xd768a323
  416f52:	test   DWORD PTR gs:[edx+esi*4+0x57b95651],esi
  416f5a:	ss stos DWORD PTR es:[edi],eax
  416f5c:	mov    esi,0xc60c724a
  416f61:	adc    al,0x16
  416f63:	nop
  416f64:	add    al,al
  416f66:	sub    al,0x1e
  416f68:	add    ah,BYTE PTR [ebp+edx*1-0x3fe32681]
  416f6f:	in     al,dx
  416f70:	sub    cl,BYTE PTR [esi+0x71]
  416f73:	push   ebx
  416f74:	cli    
  416f75:	fcom   QWORD PTR [esi+esi*4-0x8]
  416f7a:	pop    edx
  416f7b:	arpl   WORD PTR [esi],ax
  416f7d:	adc    DWORD PTR [ebx+0x1f],esi
  416f80:	jb     0x416fb1
  416f82:	mov    cl,0x9c
  416f84:	test   DWORD PTR [esi-0x5d],edx
  416f87:	lds    ebx,FWORD PTR [ebp-0x5f]
  416f8a:	push   cs
  416f8b:	ss ret 
  416f8d:	cli    
  416f8e:	jmp    0x416f18
  416f90:	xor    ecx,ecx
  416f92:	icebp  
  416f93:	adc    DWORD PTR [ecx+0x50],0x31
  416f97:	repnz add dl,BYTE PTR [edx-0x1f]
  416f9b:	mov    ch,0xde
  416f9d:	inc    ecx
  416f9e:	ffree  st(0)
  416fa0:	sbb    eax,0xfe6ab3f2
  416fa5:	or     al,0xa1
  416fa7:	out    0x4,al
  416fa9:	cld    
  416faa:	xchg   ebx,eax
  416fab:	xchg   ebx,eax
  416fac:	cmp    al,0xaf
  416fae:	sahf   
  416faf:	shr    bh,cl
  416fb1:	sub    edx,DWORD PTR [esi]
  416fb3:	mov    bh,0xa7
  416fb5:	adc    edx,DWORD PTR [eax+0x72f6150e]
  416fbb:	(bad)  ds:0x19966487
  416fc1:	cmp    esi,DWORD PTR [edx+ebx*4]
  416fc4:	aad    0xb8
  416fc6:	std    
  416fc7:	jmp    0x32d1:0x60d20085
  416fce:	jecxz  0x417038
  416fd0:	ret    
  416fd1:	popf   
  416fd2:	retf   0xb5ac
  416fd5:	stos   BYTE PTR es:[edi],al
  416fd6:	xor    ebx,edi
  416fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd9:	sbb    cl,dh
  416fdb:	pushf  
  416fdc:	adc    al,0x55
  416fde:	push   esp
  416fdf:	ret    0x7980
  416fe2:	adc    DWORD PTR [ecx+0x3f],0xffffff9e
  416fe6:	in     al,dx
  416fe7:	clc    
  416fe8:	rol    DWORD PTR [eax-0x10],1
  416feb:	dec    edx
  416fec:	adc    DWORD PTR [ebx],ebx
  416fee:	mov    ecx,0x37fdc1b8
  416ff3:	mov    ch,0x7a
  416ff5:	pop    es
  416ff6:	sti    
  416ff7:	test   dl,dh
  416ff9:	popa   
  416ffa:	push   0xfffffff7
  416ffc:	out    dx,al
  416ffd:	and    eax,0xa5dde9d2
  417002:	push   ebp
  417003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417004:	xor    DWORD PTR [ebx-0x16],ecx
  417007:	mov    cs:0x38685251,eax
  41700d:	or     eax,esp
  41700f:	add    BYTE PTR [eax+ebp*4-0x37e8938b],ch
  417016:	and    al,0xa
  417018:	mov    cl,0x96
  41701a:	out    0x77,eax
  41701c:	ret    
  41701d:	(bad)  
  41701e:	rol    bh,1
  417020:	inc    edi
  417021:	jg     0x417012
  417023:	das    
  417024:	pop    ss
  417025:	fimul  WORD PTR [esi+0x12]
  417028:	push   eax
  417029:	jb     0x417053
  41702b:	test   al,0xab
  41702d:	pop    ds
  41702e:	push   ss
  41702f:	nop
  417030:	fisubr WORD PTR [esi+edx*1-0x5]
  417034:	sub    DWORD PTR [ebx-0x45],edi
  417037:	dec    ebx
  417038:	shr    eax,1
  41703a:	mov    ecx,0x68839e5e
  41703f:	rcr    DWORD PTR [edx],1
  417041:	mov    esi,0xb030c051
  417046:	and    BYTE PTR [eax+0x11a382c4],dl
  41704c:	pshufw mm1,QWORD PTR [edx-0x71],0xc7
  417051:	bnd jno 0x4170bd
  417054:	and    ebx,eax
  417056:	xor    ebp,ebp
  417058:	pop    esi
  417059:	cmp    al,0x69
  41705b:	sbb    ebx,DWORD PTR [esi+0x4dc1ef89]
  417061:	cmc    
  417062:	das    
  417063:	mov    ebp,DWORD PTR [edi]
  417065:	push   edx
  417066:	or     ebp,0xffffffdd
  417069:	scas   al,BYTE PTR es:[edi]
  41706a:	mov    ds:0x60dc7bb1,al
  41706f:	mov    ebp,0x4a24afbd
  417074:	cmp    BYTE PTR [ebx-0x4b6d7d62],cl
  41707a:	mul    DWORD PTR [esi+0x6cfc7f7f]
  417080:	push   eax
  417081:	adc    DWORD PTR [edi+0x1c],ebp
  417084:	in     al,0x1c
  417086:	in     al,0xaf
  417088:	push   ds
  417089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41708a:	jns    0x4170c6
  41708c:	icebp  
  41708d:	retf   0x64f1
  417090:	sbb    esi,DWORD PTR [ecx+0x5103d5fc]
  417096:	fstp   TBYTE PTR [edi-0xaf88cf8]
  41709c:	arpl   WORD PTR [edi-0x1],dx
  41709f:	inc    esp
  4170a0:	lods   al,BYTE PTR ds:[esi]
  4170a1:	sbb    eax,0x41c5d9a1
  4170a6:	dec    edi
  4170a7:	or     ch,dl
  4170a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170aa:	xchg   ecx,eax
  4170ab:	cwde   
  4170ac:	cwde   
  4170ad:	lahf   
  4170ae:	jae    0x4170ee
  4170b0:	ror    al,cl
  4170b2:	adc    BYTE PTR [eax],dh
  4170b4:	pop    ds
  4170b5:	adc    edi,DWORD PTR [eax+eax*8]
  4170b8:	dec    ecx
  4170b9:	and    al,0x62
  4170bb:	xchg   edx,eax
  4170bc:	pop    edx
  4170bd:	mov    ecx,0xe7ff835d
  4170c2:	mov    DWORD PTR ds:0xa3d505c2,esp
  4170c8:	mul    BYTE PTR [ebx-0x69460107]
  4170ce:	iret   
  4170cf:	lds    ecx,FWORD PTR [edx]
  4170d1:	jnp    0x417070
  4170d3:	cdq    
  4170d4:	ret    0xd3e
  4170d7:	mov    ebp,0x44dd0ad2
  4170dc:	mov    edi,0x7255100e
  4170e1:	inc    ebp
  4170e2:	aad    0x5e
  4170e4:	outs   dx,BYTE PTR ds:[esi]
  4170e5:	mov    ds:0x853eccc8,al
  4170ea:	and    ebx,esp
  4170ec:	mov    al,0x4a
  4170ee:	ror    DWORD PTR [edi+0x4f],1
  4170f1:	pop    DWORD PTR [esi+eiz*8+0x67794801]
  4170f8:	and    eax,0xd0389e2d
  4170fd:	jne    0x4170af
  4170ff:	mov    bh,0x28
  417101:	fwait
  417102:	or     edx,esp
  417104:	(bad)  
  417105:	pop    esp
  417106:	imul   ecx,DWORD PTR [esi+edx*8-0x2af45852],0x3ef57660
  417111:	(bad)  
  417112:	ins    DWORD PTR es:[edi],dx
  417113:	xchg   ebp,eax
  417114:	(bad)  
  417115:	xor    ch,cl
  417117:	cwde   
  417118:	cld    
  417119:	rcr    BYTE PTR [ecx+ebx*4],1
  41711c:	sbb    esp,DWORD PTR [esp+ecx*1-0x65df9598]
  417123:	cmp    eax,0x890e7de5
  417128:	outs   dx,BYTE PTR ds:[esi]
  417129:	ficom  DWORD PTR [edi+0x18b0c97]
  41712f:	sub    eax,0xded1c714
  417134:	jl     0x4171a7
  417136:	mov    al,0xfa
  417138:	test   al,0xdd
  41713a:	js     0x41713e
  41713c:	ret    0xf115
  41713f:	jnp    0x41715d
  417141:	pop    es
  417142:	aam    0x5a
  417144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417146:	mov    al,ds:0xb9ee48d1
  41714b:	nop
  41714c:	test   eax,0x5e72fe4d
  417151:	ins    DWORD PTR es:[edi],dx
  417152:	sub    bl,BYTE PTR [edi+0x68]
  417155:	xor    BYTE PTR [ebx],dh
  417157:	iret   
  417158:	adc    DWORD PTR [ecx],ebp
  41715a:	call   0xd1846c92
  41715f:	nop
  417160:	push   ecx
  417161:	mov    edi,0xd6f5afa7
  417166:	jmp    0x28b3c71e
  41716b:	(bad)  
  41716c:	scas   eax,DWORD PTR es:[edi]
  41716d:	xor    eax,0x620d7642
  417172:	jne    0x41712f
  417174:	mov    cl,0x85
  417176:	je     0x417157
  417178:	clc    
  417179:	test   eax,0x79ccd498
  41717e:	adc    eax,0x3e80aad3
  417183:	jmp    0x5ecd:0x1b8e91ec
  41718a:	shl    esi,cl
  41718c:	sahf   
  41718d:	adc    BYTE PTR [ebp+0x29],dl
  417190:	aas    
  417191:	(bad)  
  417192:	jecxz  0x417170
  417194:	loope  0x41716e
  417196:	call   0x84dd:0x6341f34e
  41719d:	push   edi
  41719e:	or     eax,0xbfaec86c
  4171a3:	mov    ss,WORD PTR [ebx+0x5066a50e]
  4171a9:	dec    ebx
  4171aa:	mov    al,ds:0x582d056b
  4171af:	fwait
  4171b0:	pop    ds
  4171b1:	jle    0x4171b8
  4171b3:	shr    DWORD PTR [eax-0x21],cl
  4171b6:	fwait
  4171b7:	cld    
  4171b8:	mov    dh,0xe
  4171ba:	sub    ebp,esi
  4171bc:	mov    ebp,DWORD PTR [edi+0x7cf1fb0c]
  4171c2:	retf   
  4171c3:	push   esi
  4171c4:	xor    ebp,eax
  4171c6:	jne    0x417229
  4171c8:	pop    esi
  4171c9:	(bad)  [ebx-0x42]
  4171cc:	sar    DWORD PTR [ecx+0x62],1
  4171cf:	or     eax,0xb4c3bdea
  4171d4:	les    eax,FWORD PTR [eax-0x7]
  4171d7:	push   0x7b4d8c1f
  4171dc:	test   dl,dh
  4171de:	adc    ch,BYTE PTR [esi+0x79]
  4171e1:	popa   
  4171e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e3:	pop    es
  4171e4:	sbb    al,0x5f
  4171e6:	add    ecx,DWORD PTR [ebx+0x72]
  4171e9:	lods   eax,DWORD PTR ds:[esi]
  4171ea:	ret    
  4171eb:	push   ds
  4171ec:	jae    0x4171a5
  4171ee:	clc    
  4171ef:	or     DWORD PTR [ebx],eax
  4171f1:	add    ah,ch
  4171f3:	xor    BYTE PTR [esi],0xcd
  4171f6:	outs   dx,DWORD PTR ds:[esi]
  4171f7:	mov    esi,0x10b613ff
  4171fc:	cmp    DWORD PTR [ebx-0x7046e6be],ecx
  417202:	cmp    BYTE PTR [eax-0x25603843],dh
  417208:	xchg   esp,eax
  417209:	mov    BYTE PTR [ecx+0x26b51eb],bh
  41720f:	and    dh,bh
  417211:	test   eax,0xf119e33a
  417216:	xchg   esp,eax
  417217:	in     al,0xac
  417219:	jns    0x41723e
  41721b:	jecxz  0x41728b
  41721d:	sbb    BYTE PTR [esi],ch
  41721f:	frstor [edi+edx*2+0xd8d1e43]
  417226:	retf   0x4db
  417229:	sub    edx,DWORD PTR [eax]
  41722b:	inc    edx
  41722c:	stos   BYTE PTR es:[edi],al
  41722d:	cmp    al,BYTE PTR [eax-0x2193937f]
  417233:	mov    dh,BYTE PTR [ebp-0x4e23aaec]
  417239:	mov    edx,0x51ce7b84
  41723e:	rcl    BYTE PTR ds:0x6c3dd4ec,cl
  417244:	into   
  417245:	xchg   edx,eax
  417246:	xlat   BYTE PTR ds:[ebx]
  417247:	dec    DWORD PTR [edx-0xe]
  41724a:	xor    ebp,DWORD PTR [edx+0x3b]
  41724d:	mov    ch,0x18
  41724f:	test   DWORD PTR [ebp+0x16081076],0xfb41dd53
  417259:	inc    edi
  41725a:	mov    ebx,0xaff72759
  41725f:	je     0x4172a2
  417261:	cld    
  417262:	scas   eax,DWORD PTR es:[edi]
  417263:	mov    esp,ebp
  417265:	out    dx,eax
  417266:	sbb    bh,BYTE PTR [ecx]
  417268:	and    al,0xa9
  41726a:	arpl   ax,ax
  41726c:	setbe  BYTE PTR ss:[edx-0x49]
  417271:	mov    ch,0xbb
  417273:	les    edi,FWORD PTR [esp+ebx*4+0x22]
  417277:	jge    0x4172e4
  417279:	jbe    0x4172c7
  41727b:	xchg   ecx,eax
  41727c:	xor    dl,BYTE PTR ds:0x72c6b1a4
  417282:	retf   0x310e
  417285:	cmp    BYTE PTR [edx-0x78],bl
  417288:	mov    ch,0xf4
  41728a:	add    eax,0xa83c52a
  41728f:	pop    esp
  417290:	dec    edi
  417291:	xlat   BYTE PTR ds:[ebx]
  417292:	mov    dh,0xc8
  417294:	subps  xmm5,xmm5
  417297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417298:	xchg   dh,ch
  41729a:	sti    
  41729b:	daa    
  41729c:	dec    edi
  41729d:	mov    edx,0x52dc8884
  4172a2:	sbb    bh,BYTE PTR [esi+0x1e244f3d]
  4172a8:	daa    
  4172a9:	pop    edx
  4172aa:	cld    
  4172ab:	mov    WORD PTR [edi+0x11f325f9],gs
  4172b1:	ds dec esp
  4172b3:	mov    dh,BYTE PTR [ecx]
  4172b5:	push   ebp
  4172b6:	sar    DWORD PTR [edi],0x53
  4172b9:	retf   
  4172ba:	lea    ebp,[edi-0x1a]
  4172bd:	fstp   QWORD PTR [ecx]
  4172bf:	test   al,0x82
  4172c1:	xchg   edi,eax
  4172c2:	loop   0x4172aa
  4172c4:	and    BYTE PTR [ecx],dl
  4172c6:	repz aas 
  4172c8:	mov    DWORD PTR [edx],eax
  4172ca:	dec    ecx
  4172cb:	xor    al,0x96
  4172cd:	retf   
  4172ce:	jle    0x417288
  4172d0:	push   edi
  4172d1:	push   ss
  4172d2:	push   ebp
  4172d3:	inc    ebp
  4172d4:	push   ebx
  4172d5:	sahf   
  4172d6:	xlat   BYTE PTR ds:[ebx]
  4172d7:	mov    esi,0x8d2966d2
  4172dc:	pop    ebp
  4172dd:	dec    esi
  4172de:	test   eax,0x4cb05937
  4172e3:	cmp    eax,0x79063fb8
  4172e8:	(bad)  [ecx]
  4172ea:	pushf  
  4172eb:	xchg   ebp,eax
  4172ec:	fnsave [esi+0x39129034]
  4172f2:	xor    al,0xdc
  4172f4:	icebp  
  4172f5:	cmp    ebx,DWORD PTR [ecx+ebx*1+0xfe42bf1]
  4172fc:	iret   
  4172fd:	bnd jmp 0x417373
  417300:	or     al,0xe1
  417302:	cmp    al,0x73
  417304:	or     al,0x19
  417306:	fidiv  DWORD PTR [edx+0x15eed5e2]
  41730c:	cmp    al,0x45
  41730e:	int3   
  41730f:	ds adc al,0x18
  417312:	es cdq 
  417314:	jne    0x4172a7
  417316:	aaa    
  417317:	and    DWORD PTR [eax+0x74],ecx
  41731a:	retf   0x8c25
  41731d:	jmp    0x417390
  41731f:	push   edx
  417320:	add    bh,BYTE PTR [eax]
  417322:	adc    eax,0x13b78e71
  417327:	bound  ecx,QWORD PTR [edi]
  417329:	inc    eax
  41732a:	or     dl,ah
  41732c:	(bad)  
  41732d:	mov    ah,0xe5
  41732f:	int    0xdb
  417331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417332:	cld    
  417333:	nop
  417334:	cmp    DWORD PTR [ebx*2-0x6d568389],0x3b636bd9
  41733f:	cmp    DWORD PTR [edi+0x4f],0x7b
  417343:	(bad)  
  417345:	mov    es,eax
  417347:	leave  
  417348:	cwde   
  417349:	or     eax,0x88f36d31
  41734e:	jae    0x417311
  417350:	imul   ebp,ebp,0xe2363666
  417356:	outs   dx,DWORD PTR ds:[esi]
  417357:	push   edx
  417358:	pop    ebp
  417359:	cmp    al,0x2c
  41735b:	rcr    edx,1
  41735d:	cmp    ch,bh
  41735f:	out    0xe1,eax
  417361:	mov    DWORD PTR [ebp+0x2f4a6b26],esp
  417367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417368:	inc    edi
  417369:	xor    eax,0x97162c23
  41736e:	mov    edx,0xb2383478
  417373:	mov    ds:0x5b0084a6,al
  417378:	mov    al,ds:0x9f87ed1f
  41737d:	(bad)  
  41737f:	popa   
  417380:	mov    eax,ds:0xd424c41e
  417385:	ret    
  417386:	retf   0x56b0
  417389:	arpl   sp,bp
  41738b:	int    0xb7
  41738d:	dec    ecx
  41738e:	inc    eax
  41738f:	sahf   
  417390:	fstp   QWORD PTR ds:0x1dd477ac
  417396:	je     0x41735c
  417398:	mov    eax,0xf8195fdb
  41739d:	outs   dx,BYTE PTR ds:[esi]
  41739e:	inc    esp
  41739f:	xchg   ebp,eax
  4173a0:	push   edx
  4173a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173a2:	rol    BYTE PTR [ecx+0x6b3354cf],0xe7
  4173a9:	popf   
  4173aa:	iret   
  4173ab:	enter  0xd23,0x4c
  4173af:	mov    eax,ds:0x5284a32a
  4173b4:	gs xchg esp,eax
  4173b6:	dec    ebx
  4173b7:	ret    
  4173b8:	in     eax,0xb3
  4173ba:	jmp    0x4173df
  4173bc:	xor    al,0x78
  4173be:	lods   al,BYTE PTR ds:[esi]
  4173bf:	jo     0x41742b
  4173c1:	dec    esp
  4173c3:	call   0x45c5c93b
  4173c8:	jmp    0x4d64:0xb05550bc
  4173cf:	lea    esi,[ecx]
  4173d1:	dec    esp
  4173d2:	xchg   ebx,eax
  4173d3:	sub    eax,0xc4f87edc
  4173d8:	aaa    
  4173d9:	push   ebx
  4173da:	mov    eax,DWORD PTR [edx]
  4173dc:	mov    eax,ds:0x34a6e9f7
  4173e1:	jno    0x4173a7
  4173e3:	std    
  4173e4:	std    
  4173e5:	loop   0x417435
  4173e7:	add    dh,dh
  4173e9:	ss sub al,0x73
  4173ec:	mov    ds,edx
  4173ee:	push   ebp
  4173ef:	cmp    BYTE PTR [ebx-0x58],cl
  4173f2:	mov    esi,0x6792e73e
  4173f7:	sub    al,0xd1
  4173f9:	xchg   edx,eax
  4173fa:	enter  0x5851,0xef
  4173fe:	imul   edx,edx,0xcacec97e
  417404:	mov    eax,ds:0xd30a1502
  417409:	icebp  
  41740a:	shl    BYTE PTR [ecx],0xe0
  41740d:	rcr    dl,1
  41740f:	test   esp,edi
  417411:	push   edi
  417412:	add    DWORD PTR [esi+0x3624e5c2],edi
  417418:	mov    ah,0x9b
  41741a:	sub    al,BYTE PTR [eax+edi*8+0x2177c55a]
  417421:	and    DWORD PTR cs:[edi+edi*2+0x5d27b3e2],ecx
  417429:	out    dx,al
  41742a:	rol    DWORD PTR [edi+0x32],0x41
  41742e:	xor    BYTE PTR [edx-0x73],ah
  417431:	add    BYTE PTR [edx+ebp*2],ch
  417434:	inc    ebx
  417435:	dec    ebx
  417436:	adc    esi,ebx
  417438:	stos   BYTE PTR es:[edi],al
  417439:	sub    DWORD PTR [edx+0x49fc9bd2],eax
  41743f:	cld    
  417440:	jecxz  0x41748a
  417442:	mov    bh,0xcb
  417444:	sbb    al,0x3e
  417446:	add    BYTE PTR [ecx-0x1187c600],ah
  41744c:	icebp  
  41744d:	xor    eax,0x2e561558
  417452:	imul   eax,ecx,0x2b769e5f
  417458:	dec    esp
  417459:	lods   eax,DWORD PTR ds:[esi]
  41745a:	jne    0x4173f5
  41745c:	dec    edi
  41745d:	jne    0x41741c
  41745f:	popa   
  417460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417461:	ret    0x7c72
  417464:	push   ebp
  417465:	ja     0x41744e
  417467:	ja     0x4174a6
  417469:	push   0xffffffb7
  41746b:	aaa    
  41746c:	cli    
  41746d:	jecxz  0x417435
  41746f:	clc    
  417470:	or     DWORD PTR [edx],ecx
  417472:	push   esp
  417473:	aaa    
  417474:	pusha  
  417475:	(bad)  
  417476:	out    0xc,eax
  417478:	add    eax,0x4df4411d
  41747d:	nop
  41747e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41747f:	inc    edi
  417480:	out    dx,al
  417481:	push   0x291a6852
  417486:	inc    eax
  417487:	ja     0x41742f
  417489:	jecxz  0x417489
  41748b:	or     cl,dh
  41748d:	ins    DWORD PTR es:[edi],dx
  41748e:	into   
  41748f:	jae    0x417495
  417491:	(bad)
  417496:	fwait
  417497:	push   0xffffffab
  417499:	shl    BYTE PTR [eax+0x50],cl
  41749c:	sub    al,0x24
  41749e:	out    dx,eax
  41749f:	jns    0x41751e
  4174a1:	sub    DWORD PTR [ecx+0x1],0x1c
  4174a5:	inc    ecx
  4174a6:	inc    ebp
  4174a7:	dec    edi
  4174a8:	pop    ecx
  4174a9:	jge    0x4174ae
  4174ab:	push   esi
  4174ac:	lea    edx,[eax-0x1f0f869b]
  4174b2:	pop    ss
  4174b3:	sahf   
  4174b4:	aad    0xe5
  4174b6:	mov    ebp,DWORD PTR [edx]
  4174b8:	pop    ecx
  4174b9:	pusha  
  4174ba:	popf   
  4174bb:	js     0x4174a4
  4174bd:	inc    ecx
  4174be:	lea    eax,[ebp-0x7be05f1a]
  4174c4:	fs call 0x2fa672b1
  4174ca:	jo     0x41749f
  4174cc:	bound  ebx,QWORD PTR [ecx-0x7c]
  4174cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174d0:	push   ss
  4174d1:	clc    
  4174d2:	mov    ah,0x21
  4174d4:	jb     0x417488
  4174d6:	adc    al,0x90
  4174d8:	cli    
  4174d9:	ins    DWORD PTR es:[edi],dx
  4174da:	nop
  4174db:	lods   al,BYTE PTR ds:[esi]
  4174dc:	fiadd  WORD PTR [ebp-0x36e6829c]
  4174e2:	stc    
  4174e3:	cmp    BYTE PTR [edi],al
  4174e5:	inc    esi
  4174e6:	scas   al,BYTE PTR es:[edi]
  4174e7:	rcr    esi,0xed
  4174ea:	mov    esp,0x505a1e74
  4174ef:	xor    DWORD PTR [eax-0x72],edi
  4174f2:	mov    DWORD PTR [esi-0x9001c69],ecx
  4174f8:	push   ebx
  4174f9:	fsub   DWORD PTR [ebx-0x37]
  4174fc:	inc    edx
  4174fd:	sub    BYTE PTR [edi+0x25],0xf6
  417501:	pop    ebx
  417502:	fcom   DWORD PTR [ebx]
  417504:	out    dx,al
  417505:	fs ins DWORD PTR es:[edi],dx
  417507:	push   edx
  417508:	mov    ecx,0xa3d0d413
  41750d:	out    dx,al
  41750e:	jmp    0xabc5:0x66dd6a23
  417515:	xor    edi,DWORD PTR [ecx]
  417517:	xchg   edi,eax
  417518:	and    ebp,DWORD PTR ss:[eax]
  41751b:	xchg   ebp,eax
  41751c:	sar    DWORD PTR [ebx+0x3c762259],0x93
  417523:	mov    ss,WORD PTR [edi+eiz*1+0x60]
  417527:	scas   al,BYTE PTR es:[edi]
  417528:	call   0x1056:0x8218a496
  41752f:	xor    DWORD PTR [ebp-0x668c5c71],ecx
  417535:	aam    0x6a
  417537:	fiadd  DWORD PTR [ebp+ecx*8+0x2e617d60]
  41753e:	xchg   edx,ebx
  417540:	push   edx
  417541:	sbb    eax,0x82373f98
  417546:	loopne 0x4175b8
  417548:	sub    BYTE PTR [esp+ebp*2+0x3f],ah
  41754c:	jno    0xbb372a48
  417552:	repnz pusha 
  417554:	xor    eax,0x5c63b55a
  417559:	jg     0x417563
  41755b:	and    eax,0x5184492c
  417560:	out    dx,al
  417561:	xor    al,0xd4
  417563:	xchg   edx,eax
  417564:	xchg   ebx,eax
  417565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417566:	pop    ecx
  417567:	std    
  417568:	cmp    eax,0x230f5b46
  41756d:	popf   
  41756e:	xchg   esi,eax
  41756f:	in     al,dx
  417570:	lds    ebp,FWORD PTR [esi-0x7b391c0b]
  417576:	mov    esi,DWORD PTR [ebx-0x1705c4f5]
  41757c:	pop    ss
  41757d:	xlat   BYTE PTR ds:[ebx]
  41757e:	into   
  41757f:	mov    cl,0xd2
  417581:	mov    eax,0x4ebd4e73
  417586:	daa    
  417587:	inc    ebp
  417588:	mov    edi,0x5dee3d23
  41758d:	mov    esi,0x583ba431
  417592:	sbb    edi,DWORD PTR [ecx]
  417594:	ds mov ebp,0x92b9ae22
  41759a:	jg     0x41754f
  41759c:	fldenv [ebx]
  41759e:	cli    
  41759f:	mov    bh,0xa7
  4175a1:	fisttp QWORD PTR [eax]
  4175a3:	rol    cl,0xcc
  4175a6:	xchg   ebx,eax
  4175a7:	jl     0x41753d
  4175a9:	and    al,cl
  4175ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ac:	xchg   edx,eax
  4175ad:	int    0x34
  4175af:	xchg   esi,eax
  4175b0:	(bad)  
  4175b1:	push   ss
  4175b2:	pop    ecx
  4175b3:	sub    DWORD PTR [ecx],ecx
  4175b5:	daa    
  4175b6:	stos   BYTE PTR es:[edi],al
  4175b7:	cs pop es
  4175b9:	loopne 0x4175af
  4175bb:	add    edx,DWORD PTR [eax+0x34]
  4175be:	das    
  4175bf:	pushf  
  4175c0:	aaa    
  4175c1:	mov    dl,0x38
  4175c3:	ret    
  4175c4:	sar    bh,cl
  4175c6:	shr    BYTE PTR [ebx+0x28],1
  4175c9:	cs mov cs,esp
  4175cc:	sbb    BYTE PTR [ebx-0x7888e9fe],bh
  4175d2:	mov    dl,0xe9
  4175d4:	nop
  4175d5:	xor    edx,DWORD PTR [ebp-0x4a]
  4175d8:	or     eax,0x1abfabc5
  4175dd:	mov    al,ds:0x893a68a1
  4175e2:	retf   0x23cb
  4175e5:	ins    BYTE PTR es:[edi],dx
  4175e6:	mov    ch,0x26
  4175e8:	add    DWORD PTR [ecx+0x1edcaa7e],0x1fa89ea1
  4175f2:	ret    0xa7dd
  4175f5:	bound  ebp,QWORD PTR [edx-0x62]
  4175f8:	add    al,0x22
  4175fa:	add    DWORD PTR [ebx+0x4a35c055],eax
  417600:	xchg   esi,eax
  417601:	jne    0x417682
  417603:	xchg   DWORD PTR [ebp+ecx*4-0xc],ebp
  417607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417608:	stos   DWORD PTR es:[edi],eax
  417609:	xor    DWORD PTR [edi+0x3e52e20b],eax
  41760f:	arpl   WORD PTR [esp+esi*8-0xe],bp
  417613:	xchg   DWORD PTR [eax],edi
  417615:	loop   0x417640
  417617:	inc    ebx
  417618:	test   BYTE PTR [edi+0x60a7f11],ch
  41761e:	push   edi
  41761f:	popa   
  417620:	mov    ds:0x2e731600,eax
  417625:	cwde   
  417626:	cmp    BYTE PTR [ecx-0x61],0xe4
  41762a:	outs   dx,DWORD PTR ds:[esi]
  41762b:	push   esp
  41762c:	daa    
  41762d:	mov    eax,0x6e15f371
  417632:	adc    esi,esp
  417634:	fs mov eax,0x6041c108
  41763a:	hlt    
  41763b:	jnp    0x417625
  41763d:	push   es
  41763e:	lea    ecx,[edx+0x1a4236a4]
  417644:	rcl    BYTE PTR [ebx+0x368e418b],0x2
  41764b:	adc    al,0xbb
  41764d:	mov    ds:0x7c798416,eax
  417652:	jne    0x417665
  417654:	stos   DWORD PTR es:[edi],eax
  417655:	mov    ebp,ebx
  417657:	sbb    dl,BYTE PTR ds:0xfcc82b09
  41765d:	xor    ah,dl
  41765f:	jne    0x4175fc
  417661:	mov    dh,0xc1
  417663:	in     al,0xdf
  417665:	in     eax,0xd7
  417667:	(bad)  
  417668:	sub    BYTE PTR [esi],ch
  41766a:	or     al,BYTE PTR ds:0x1f753a64
  417670:	push   ds
  417671:	jg     0x417667
  417673:	xor    eax,0x3a01ce4e
  417678:	push   esp
  417679:	lock pop esp
  41767b:	jmp    0x41761e
  41767d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767f:	mov    dl,0xdc
  417681:	sub    BYTE PTR [ecx+0x11b263e0],bh
  417687:	pop    ds
  417688:	mov    ds:0x136e89e5,eax
  41768d:	lods   al,BYTE PTR ds:[esi]
  41768e:	pop    esi
  41768f:	call   0x1d12:0x3f8349cc
  417696:	jmp    0x83ae1d32
  41769b:	test   DWORD PTR [ebp+0x643db481],esp
  4176a1:	cmp    ah,BYTE PTR [eax]
  4176a3:	into   
  4176a4:	lahf   
  4176a5:	mov    ebp,fs
  4176a7:	jb     0x417709
  4176a9:	lock outs dx,DWORD PTR ds:[esi]
  4176ab:	stos   DWORD PTR es:[edi],eax
  4176ac:	inc    edx
  4176ad:	scas   eax,DWORD PTR es:[edi]
  4176ae:	adc    eax,0x3249e2e3
  4176b3:	jge    0x41766e
  4176b5:	mov    bh,cl
  4176b7:	or     al,0x28
  4176b9:	lods   eax,DWORD PTR ds:[esi]
  4176ba:	sbb    DWORD PTR [ebx],ebx
  4176bc:	mov    dl,0x67
  4176be:	jp     0x41772e
  4176c0:	lods   eax,DWORD PTR ds:[esi]
  4176c1:	fisttp QWORD PTR [edi]
  4176c3:	mov    ds:0x3f0ca666,al
  4176c8:	mov    esi,0x94f67559
  4176cd:	fiadd  WORD PTR [ebx]
  4176cf:	shl    BYTE PTR [eax],1
  4176d1:	add    ebp,DWORD PTR [edx+0x29]
  4176d4:	out    dx,eax
  4176d5:	jg     0x417733
  4176d7:	mov    ch,0xb6
  4176d9:	popf   
  4176da:	imul   ebx,edi,0x93b0c5f8
  4176e0:	and    eax,0x6f74b448
  4176e5:	jne    0x417742
  4176e7:	push   edi
  4176e8:	lods   eax,DWORD PTR ds:[esi]
  4176e9:	xor    eax,0x2af6370e
  4176ee:	mov    edi,0x5c743f3f
  4176f3:	imul   esp,DWORD PTR [edi],0xffffffc6
  4176f6:	aas    
  4176f7:	inc    esp
  4176f8:	xor    al,0x69
  4176fa:	loope  0x41768e
  4176fc:	mov    WORD PTR [edi-0x28],fs
  4176ff:	or     eax,0xbe2fc918
  417704:	jmp    0x417772
  417706:	pop    esi
  417707:	mov    WORD PTR [eax-0x78],es
  41770a:	(bad)  
  41770b:	pop    edi
  41770c:	(bad)  
  41770d:	adc    BYTE PTR [esi],cl
  41770f:	pop    edx
  417710:	div    BYTE PTR [ebp-0x368fae40]
  417716:	mov    ds:0xaeaa5eab,eax
  41771b:	mov    ds,WORD PTR ds:[eax]
  41771e:	jecxz  0x4176a4
  417720:	xor    esi,DWORD PTR [esi-0x37]
  417723:	cli    
  417724:	mov    bl,0x41
  417726:	jge    0x41771a
  417728:	mov    ds:0x745e314f,al
  41772d:	or     dl,BYTE PTR [ecx+0x66]
  417730:	ins    DWORD PTR es:[edi],dx
  417731:	jg     0x417706
  417733:	mov    bl,0x29
  417735:	fist   DWORD PTR [edx-0x4f]
  417738:	rol    ecx,1
  41773a:	pop    edx
  41773b:	jl     0x4176cd
  41773d:	push   ecx
  41773e:	jnp    0x4177a5
  417740:	adc    BYTE PTR [esi+ecx*4-0x7e1b5c59],0x30
  417748:	sahf   
  417749:	push   ebp
  41774a:	or     BYTE PTR [ebx+0x59a944b0],dl
  417750:	cmp    al,0xe9
  417752:	cmp    BYTE PTR [ecx-0x3856a866],ch
  417758:	xor    eax,0x70e599e7
  41775d:	mov    dl,0xa0
  41775f:	nop
  417760:	test   dl,cl
  417762:	push   ebp
  417763:	sar    DWORD PTR [esi+0x60],0x9
  417767:	jbe    0x417710
  417769:	jbe    0x41772f
  41776b:	mov    edx,0x8a96c60d
  417770:	xchg   ebp,eax
  417771:	jmp    0x4177ce
  417773:	mov    BYTE PTR [ebx-0x57],al
  417776:	jge    0x4177a7
  417778:	shr    DWORD PTR [ebp+0x37e41b94],1
  41777e:	in     eax,dx
  41777f:	repnz cmp DWORD PTR [ecx],eax
  417782:	jnp    0x4177ed
  417784:	leave  
  417785:	mov    eax,0x48bee262
  41778a:	lods   al,BYTE PTR ds:[esi]
  41778b:	sbb    eax,0x13d259a2
  417790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417791:	shl    BYTE PTR [ebx+0x1052f1d0],cl
  417797:	iret   
  417798:	sbb    eax,0xbb8e9cf9
  41779d:	sub    esi,0x69
  4177a0:	cwde   
  4177a1:	push   eax
  4177a2:	aad    0x9a
  4177a4:	push   edx
  4177a5:	stos   DWORD PTR es:[edi],eax
  4177a6:	mov    ebx,0xb9efcaac
  4177ab:	out    dx,eax
  4177ac:	inc    DWORD PTR [eax+0x7a]
  4177af:	mov    dl,0x4e
  4177b1:	add    eax,0x90650fc4
  4177b6:	retf   
  4177b7:	mov    ch,0x89
  4177b9:	jge    0x41782a
  4177bb:	repnz sti 
  4177bd:	test   BYTE PTR [ebp-0x3c],ch
  4177c0:	xor    ch,BYTE PTR [ebp+0x20fdf12a]
  4177c6:	mul    BYTE PTR ds:0x2ff0f7a5
  4177cc:	out    dx,al
  4177cd:	cmp    eax,0x16b7e6d5
  4177d2:	imul   esp,eax,0x12
  4177d5:	inc    edx
  4177d6:	sbb    edx,0x7f
  4177d9:	cmp    al,0x21
  4177db:	mov    eax,ds:0x208656c1
  4177e0:	in     al,0xb7
  4177e2:	pop    ds
  4177e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e4:	mov    ecx,0x4070b0b2
  4177e9:	jbe    0x417838
  4177eb:	ret    0xadd2
  4177ee:	adc    ah,BYTE PTR [eax+0x3a]
  4177f1:	inc    eax
  4177f2:	mov    esp,0xe10bdfc9
  4177f7:	xchg   BYTE PTR [eax-0x15f0e8d5],bl
  4177fd:	add    BYTE PTR [ebx],0x81
  417800:	dec    ebx
  417801:	dec    ebx
  417802:	outs   dx,DWORD PTR ds:[esi]
  417803:	jae    0x417835
  417805:	xchg   esi,eax
  417806:	pop    ds
  417807:	out    0xfc,ax
  41780a:	leave  
  41780b:	push   0xd2a74319
  417810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417811:	lods   eax,DWORD PTR ds:[esi]
  417812:	jg     0x417802
  417814:	inc    esi
  417815:	mov    dh,BYTE PTR ss:[ecx+0x595328bb]
  41781c:	(bad)  
  41781d:	fiadd  DWORD PTR [edx+0x49]
  417820:	xor    BYTE PTR [esp+ecx*1],0xed
  417824:	stc    
  417825:	and    BYTE PTR [eax+0x66],dh
  417828:	push   ebx
  417829:	je     0x4178a9
  41782b:	add    ah,BYTE PTR [esi-0x2faed0ad]
  417831:	in     eax,dx
  417832:	cdq    
  417833:	ins    BYTE PTR es:[edi],dx
  417834:	xchg   ebp,eax
  417835:	cld    
  417836:	mov    esp,0xa49c5d45
  41783b:	mov    ecx,es
  41783d:	xchg   ebx,eax
  41783e:	(bad)  
  41783f:	not    DWORD PTR [esi-0x71]
  417842:	push   0x4a78ad11
  417847:	pop    edi
  417848:	(bad)  
  417849:	(bad)  
  41784a:	ror    DWORD PTR [eax-0x183b8491],1
  417850:	cmp    DWORD PTR [ebx-0x3c7fc02],ecx
  417856:	test   al,0x4d
  417858:	push   0x1c
  41785a:	jecxz  0x41788e
  41785c:	or     bl,cl
  41785e:	(bad)  [ebx-0x51]
  417861:	or     al,0xb6
  417863:	mov    dl,0x93
  417865:	mov    ebx,0xa98e5be3
  41786a:	out    dx,al
  41786b:	or     ah,BYTE PTR [ebx+edi*2+0x22]
  41786f:	jne    0x41786d
  417871:	loope  0x4178e8
  417873:	mov    BYTE PTR [edx],ch
  417875:	push   0xb
  417877:	adc    BYTE PTR [esi+0x467e907],dh
  41787d:	stos   BYTE PTR es:[edi],al
  41787e:	pop    WORD PTR ds:0x839d8f5b
  417885:	cdq    
  417886:	loopne 0x417878
  417888:	arpl   ax,si
  41788a:	dec    ebx
  41788b:	inc    esi
  41788d:	lods   al,BYTE PTR ds:[esi]
  41788e:	mov    edx,0x301f54b2
  417893:	mov    edi,0xad8369df
  417898:	repz jb 0x41788a
  41789b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41789c:	call   0xc35a611b
  4178a1:	or     DWORD PTR [ecx],ecx
  4178a3:	adc    BYTE PTR [edi-0x7d1e4aac],bh
  4178a9:	retf   
  4178aa:	xor    ch,ch
  4178ac:	adc    dl,ah
  4178ae:	mov    BYTE PTR [ebx+edi*2+0x16],bl
  4178b2:	(bad)  
  4178b3:	ins    DWORD PTR es:[edi],dx
  4178b4:	jle    0x417925
  4178b6:	jno    0x41789f
  4178b8:	loope  0x4178c0
  4178ba:	leave  
  4178bb:	je     0x417843
  4178bd:	xchg   edx,eax
  4178be:	xor    esi,DWORD PTR [ebx-0x4c]
  4178c1:	(bad)  
  4178c2:	stc    
  4178c3:	movaps xmm5,XMMWORD PTR [eax]
  4178c6:	or     eax,DWORD PTR [edi]
  4178c8:	dec    esp
  4178c9:	pop    ds
  4178ca:	push   ebx
  4178cb:	das    
  4178cc:	mov    fs,WORD PTR [edi+0x28]
  4178cf:	jmp    0x417877
  4178d1:	test   eax,0x83d874be
  4178d6:	xchg   edx,eax
  4178d7:	out    0xcc,al
  4178d9:	pop    ebx
  4178da:	repnz neg DWORD PTR [eax]
  4178dd:	push   es
  4178de:	add    al,0x6a
  4178e0:	not    DWORD PTR [eax]
  4178e2:	adc    DWORD PTR [ebx-0x7bb6ec7b],esi
  4178e8:	dec    edx
  4178e9:	xor    eax,0x1d0f858a
  4178ee:	scas   al,BYTE PTR es:[edi]
  4178ef:	mov    ah,0xd6
  4178f1:	xchg   ecx,eax
  4178f2:	nop
  4178f3:	aam    0x15
  4178f5:	sub    DWORD PTR [eax+0x6c],0x1b
  4178f9:	leave  
  4178fa:	xchg   esp,eax
  4178fb:	sub    al,0x84
  4178fd:	cs cli 
  4178ff:	bound  ebx,QWORD PTR [esi]
  417901:	stc    
  417902:	mov    bh,0xc2
  417905:	mov    ah,0x14
  417907:	pop    ebp
  417908:	mov    ds:0x8295fcf6,al
  41790d:	add    esi,DWORD PTR [ecx]
  41790f:	and    bl,cl
  417911:	jmp    0x417894
  417913:	les    ebp,FWORD PTR [eax-0x78]
  417916:	int3   
  417917:	pop    ebp
  417918:	adc    BYTE PTR [ebx+eiz*4],0xc9
  41791c:	fidiv  DWORD PTR [ebx+edx*4]
  41791f:	cmovno edx,DWORD PTR [ebx-0x51]
  417923:	aam    0x71
  417925:	int    0x52
  417927:	fisttp DWORD PTR [ebp+0x53]
  41792a:	shl    DWORD PTR [ecx+0x2fb096fe],1
  417930:	retf   
  417931:	inc    edx
  417932:	or     DWORD PTR [esp+ebx*2+0x5e],ebp
  417936:	mov    al,0x20
  417938:	inc    edi
  417939:	and    BYTE PTR [ecx],0xe1
  41793c:	cli    
  41793d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41793e:	leave  
  41793f:	js     0x4178dd
  417941:	pop    ecx
  417942:	fstp   QWORD PTR [edi+edx*2-0x3]
  417946:	sub    ebp,ebx
  417948:	ror    BYTE PTR [edx-0x16da8a01],1
  41794e:	cwde   
  41794f:	jno    0x4178dc
  417951:	xlat   BYTE PTR ds:[ebx]
  417952:	inc    ecx
  417953:	pop    ebx
  417954:	and    BYTE PTR [esi],bl
  417956:	rol    DWORD PTR [edx+0x38d21bbf],1
  41795c:	jmp    0x417957
  41795e:	adc    DWORD PTR [ebp+0x79543309],edi
  417964:	imul   ebx,DWORD PTR [esi+0x20],0x1
  417968:	pop    ecx
  417969:	sar    BYTE PTR [eax-0x7b],1
  41796c:	stos   BYTE PTR es:[edi],al
  41796d:	push   esi
  41796e:	add    ch,BYTE PTR [edx]
  417970:	neg    DWORD PTR [eax+0x274746d2]
  417976:	call   0x5e93:0x1d0d8446
  41797d:	es ins BYTE PTR es:[edi],dx
  41797f:	pmullw mm0,QWORD PTR fs:[eax]
  417983:	retf   0xc17e
  417986:	fstp   st(4)
  417988:	mov    dh,BYTE PTR [esi+0x17ae82b]
  41798e:	xor    ch,BYTE PTR [ecx-0x6632b50c]
  417994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417995:	inc    ebp
  417996:	cmp    eax,0xd98f187e
  41799b:	(bad)  
  41799c:	bound  esp,QWORD PTR [ebx]
  41799e:	xor    BYTE PTR [edi+0x4eab7c92],ah
  4179a4:	jnp    0x4179fa
  4179a6:	inc    ecx
  4179a7:	mov    eax,ds:0x9630cf8a
  4179ac:	jnp    0x417a13
  4179ae:	popf   
  4179af:	mov    edi,eax
  4179b1:	mov    edx,0xdaa756bf
  4179b6:	inc    BYTE PTR [esi+0x368c9bb3]
  4179bc:	pop    ss
  4179bd:	ja     0x417978
  4179bf:	nop
  4179c0:	or     cl,BYTE PTR [edx+0x4d866708]
  4179c6:	xchg   esi,eax
  4179c7:	mov    edi,0xebd07257
  4179cc:	xor    al,0x57
  4179ce:	js     0x4179f6
  4179d0:	imul   edi,DWORD PTR [ebp+ebx*8+0x1e],0x160f7c5
  4179d8:	imul   edi,ebp,0x1cfe257a
  4179de:	lock hlt 
  4179e0:	in     eax,0xb1
  4179e2:	xlat   BYTE PTR ds:[ebx]
  4179e3:	mov    eax,ds:0xf7c28124
  4179e8:	xchg   DWORD PTR [edi+0x50693f80],ecx
  4179ee:	xchg   ebp,esi
  4179f0:	xchg   esi,eax
  4179f1:	or     al,0xc6
  4179f3:	pop    es
  4179f4:	or     esi,DWORD PTR [eax+0x49]
  4179f7:	hlt    
  4179f8:	cmp    dh,bl
  4179fa:	sbb    esp,ebx
  4179fc:	pop    esi
  4179fd:	xor    ebp,DWORD PTR [edx-0xd8db87]
  417a03:	push   edi
  417a04:	lock and al,0xb
  417a07:	stos   DWORD PTR es:[edi],eax
  417a08:	clc    
  417a09:	dec    edx
  417a0a:	mov    ds:0xc6000f8e,al
  417a0f:	stos   BYTE PTR es:[edi],al
  417a10:	mov    eax,ds:0x64dcbf27
  417a15:	adc    cl,BYTE PTR [eax+eiz*2]
  417a18:	add    eax,0xb7575f5c
  417a1d:	xchg   esi,eax
  417a1e:	sbb    edx,DWORD PTR [edi-0x353acdb3]
  417a24:	mov    bl,0x80
  417a26:	push   ds
  417a27:	icebp  
  417a28:	addr16 (bad) 
  417a2a:	ftst   
  417a2c:	xlat   BYTE PTR ds:[ebx]
  417a2d:	es push edi
  417a2f:	cmc    
  417a30:	sbb    eax,0x4f7c6428
  417a35:	gs jbe 0x4179c0
  417a38:	xor    eax,0xf1b0e58f
  417a3d:	xchg   esp,eax
  417a3e:	sub    al,0xb1
  417a40:	add    al,0x22
  417a42:	and    eax,DWORD PTR [eax+edi*1]
  417a45:	aaa    
  417a46:	ds mov esp,0xd19eb23f
  417a4c:	pop    ebp
  417a4d:	push   ds
  417a4e:	pop    eax
  417a4f:	ror    dh,0x37
  417a52:	inc    eax
  417a53:	(bad)  [edi+0x24267479]
  417a59:	inc    esp
  417a5a:	pop    edi
  417a5b:	retf   0x5e09
  417a5e:	push   ecx
  417a5f:	jp     0x417ac6
  417a61:	loop   0x417ad7
  417a63:	mov    ecx,0xa6ad75a2
  417a68:	jns    0x4179f8
  417a6a:	stc    
  417a6b:	(bad)  
  417a6c:	out    dx,al
  417a6d:	clc    
  417a6e:	mov    es,WORD PTR [esi-0x53]
  417a71:	sub    al,0x3c
  417a73:	test   BYTE PTR [ebp-0xe285761],dh
  417a79:	adc    eax,0xcaffdadd
  417a7e:	pop    esp
  417a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a80:	fwait
  417a81:	inc    esi
  417a82:	xlat   BYTE PTR ds:[ebx]
  417a83:	or     al,0x2c
  417a85:	pop    ebx
  417a86:	push   ebp
  417a87:	xchg   ebx,eax
  417a88:	lock rcr dl,0xcb
  417a8c:	(bad)  
  417a8e:	adc    dl,al
  417a90:	push   eax
  417a91:	dec    ebx
  417a92:	test   DWORD PTR [ecx+0x4d],0x58a5fb4b
  417a99:	pop    ecx
  417a9a:	cmp    ch,cl
  417a9c:	cli    
  417a9d:	mov    ebp,0x39a2b5ef
  417aa2:	hlt    
  417aa3:	dec    ebx
  417aa4:	ss inc ebx
  417aa6:	mov    ah,0x6d
  417aa8:	xlat   BYTE PTR ds:[ebx]
  417aa9:	imul   eax,DWORD PTR ds:0xc8325773,0xffffffff
  417ab0:	xchg   BYTE PTR [edx+0x3],bh
  417ab3:	ds dec ebp
  417ab5:	push   eax
  417ab6:	cmp    bh,BYTE PTR ds:0x7668a5f9
  417abc:	inc    ecx
  417abd:	idiv   DWORD PTR [ebp+0x5315f3ea]
  417ac3:	adc    BYTE PTR [esp+esi*1-0xc],dh
  417ac7:	xor    DWORD PTR [edi+edx*1],ebp
  417aca:	sti    
  417acb:	nop
  417acc:	mov    ds:0xd083c69f,al
  417ad1:	pop    ebp
  417ad2:	sbb    al,dh
  417ad4:	cmp    DWORD PTR ds:0xf3c1c7d9,0xc6a724f9
  417ade:	popf   
  417adf:	add    BYTE PTR [edi],dl
  417ae1:	cwde   
  417ae2:	push   0x24d17d2d
  417ae7:	inc    BYTE PTR [edi]
  417ae9:	push   ss
  417aea:	add    al,0x54
  417aec:	ins    BYTE PTR es:[edi],dx
  417aed:	push   edi
  417aee:	fisubr WORD PTR [ecx-0x22]
  417af1:	pop    esi
  417af2:	scas   eax,DWORD PTR es:[edi]
  417af3:	pop    esi
  417af4:	pop    esp
  417af5:	mov    ebp,0x9105113e
  417afa:	xchg   edi,eax
  417afb:	push   ss
  417afc:	xchg   esi,eax
  417afd:	mov    bh,0x85
  417aff:	es mov esi,0xfe052167
  417b05:	mov    edx,0x6bfb9eb4
  417b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b0b:	jp     0x417b10
  417b0d:	mov    DWORD PTR [eax-0x595882a3],ecx
  417b13:	jmp    0x9ab9:0x428d8532
  417b1a:	leave  
  417b1b:	mov    ebx,0xcd0be4af
  417b20:	add    ch,dl
  417b22:	adc    BYTE PTR ds:0x881efcc2,bl
  417b28:	enter  0x5aa6,0x6b
  417b2c:	iret   
  417b2d:	(bad)
  417b31:	push   edx
  417b32:	mov    ah,0x47
  417b34:	div    BYTE PTR [ebx+ecx*8]
  417b37:	out    0x21,al
  417b39:	mov    ebp,DWORD PTR [edx]
  417b3b:	push   ecx
  417b3c:	rcl    BYTE PTR [ebx-0x61505878],cl
  417b42:	jle    0x417b19
  417b44:	xor    ebx,eax
  417b46:	sub    eax,0x63a22892
  417b4b:	nop
  417b4c:	icebp  
  417b4d:	inc    eax
  417b4e:	pop    ebp
  417b4f:	or     cl,BYTE PTR [eax]
  417b51:	repz into 
  417b53:	inc    eax
  417b54:	push   0xbd665294
  417b59:	ja     0x417b07
  417b5b:	cwde   
  417b5c:	xchg   ecx,ebx
  417b5e:	(bad)  
  417b5f:	clts   
  417b61:	dec    ecx
  417b62:	rcl    al,1
  417b64:	retf   0xcf09
  417b67:	ins    DWORD PTR es:[edi],dx
  417b68:	xor    eax,0x47f3ed74
  417b6d:	mov    al,ds:0xe441bee0
  417b72:	pop    es
  417b73:	cmp    eax,0x9cd388d9
  417b78:	cmp    dl,cl
  417b7a:	dec    ebx
  417b7b:	mov    ch,0x17
  417b7d:	into   
  417b7e:	jne    0x417b23
  417b80:	lds    esi,FWORD PTR [eax]
  417b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b83:	ja     0x417ba9
  417b85:	iret   
  417b86:	xor    esi,ebx
  417b88:	dec    ebp
  417b89:	addr16 leave 
  417b8b:	int    0xaa
  417b8d:	jl     0x417b64
  417b8f:	xor    ebx,esp
  417b91:	mov    ds:0x6051591f,eax
  417b96:	xor    dl,BYTE PTR [edx-0x73f3ea43]
  417b9c:	mov    edi,0xb5dd3f1
  417ba1:	xor    cl,BYTE PTR [edi]
  417ba3:	ret    0x95e3
  417ba6:	ss out dx,al
  417ba8:	test   eax,0x1e201ac
  417bad:	sub    BYTE PTR [ebp-0x7056f14],dl
  417bb3:	adc    ebx,DWORD PTR [esi]
  417bb5:	cwde   
  417bb6:	xchg   ebp,eax
  417bb7:	jae    0x417bbd
  417bb9:	sbb    eax,0xe8e94bfb
  417bbe:	and    eax,0xeb9b182d
  417bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc4:	and    eax,0x90033a26
  417bc9:	aaa    
  417bca:	(bad)  
  417bcb:	inc    eax
  417bcc:	int3   
  417bcd:	sub    esp,ebp
  417bcf:	popa   
  417bd0:	push   cs
  417bd1:	jle    0x417b5b
  417bd3:	sub    al,BYTE PTR [ebp+0x2ca67837]
  417bd9:	dec    esp
  417bda:	mov    eax,ds:0x5686b7c5
  417bdf:	test   eax,edx
  417be1:	push   es
  417be2:	ds xchg ecx,eax
  417be4:	or     ebx,DWORD PTR [esi]
  417be6:	xchg   ebx,eax
  417be7:	adc    ecx,DWORD PTR [eax+0x33]
  417bea:	mov    WORD PTR [edx-0x68],ss
  417bed:	pop    edx
  417bee:	ficom  DWORD PTR [esp+esi*2-0x6620c943]
  417bf5:	push   eax
  417bf6:	inc    eax
  417bf8:	hlt    
  417bf9:	lods   eax,DWORD PTR ds:[esi]
  417bfa:	out    0x1c,eax
  417bfc:	xor    DWORD PTR [edx+0x73],esp
  417bff:	daa    
  417c00:	sar    BYTE PTR [ebp+eax*1-0x6d],0xcb
  417c05:	sti    
  417c06:	int    0x7
  417c08:	stos   BYTE PTR es:[edi],al
  417c09:	xlat   BYTE PTR ds:[ebx]
  417c0a:	cld    
  417c0b:	fadd   st(1),st
  417c0d:	push   cs
  417c0e:	mov    eax,0xe047b28b
  417c13:	cld    
  417c14:	repz or dl,BYTE PTR [edx+esi*2]
  417c18:	test   al,0xc2
  417c1a:	add    ah,BYTE PTR [ebp+0x7f]
  417c1d:	pop    ss
  417c1e:	ja     0x417bfe
  417c20:	fwait
  417c21:	dec    ebp
  417c22:	shr    DWORD PTR [edx+0x6043adbc],cl
  417c28:	lock lahf 
  417c2a:	mov    WORD PTR [esi+0x16],cs
  417c2d:	stc    
  417c2e:	aam    0x9d
  417c30:	mov    ebx,0x5e3d912f
  417c35:	sti    
  417c36:	ins    DWORD PTR es:[edi],dx
  417c37:	cmp    ebp,0x41a27489
  417c3d:	sub    al,0xf9
  417c3f:	and    ebp,DWORD PTR [eax+eax*2-0x582a3934]
  417c46:	cmc    
  417c47:	push   edx
  417c48:	dec    ecx
  417c49:	mov    ds:0x1e2bfad1,al
  417c4e:	js     0x417bf4
  417c50:	cmp    al,0xb3
  417c52:	in     al,0x3b
  417c54:	adc    cl,BYTE PTR [eax+eax*4]
  417c57:	inc    ecx
  417c58:	les    ecx,FWORD PTR [ecx+0xc621b87]
  417c5e:	repz mov esi,eax
  417c61:	cld    
  417c62:	or     ebx,DWORD PTR ds:0xe30ee16
  417c68:	mov    eax,0x96964821
  417c6d:	(bad)  [ecx]
  417c6f:	xchg   ebx,eax
  417c70:	imul   ecx,DWORD PTR [ecx+0x4477d95b],0x2a
  417c77:	mov    WORD PTR [ebx+0x64],ss
  417c7a:	xchg   edi,eax
  417c7b:	or     al,0x48
  417c7d:	cmp    eax,0x8bfe9ce7
  417c82:	int3   
  417c83:	fdivr  DWORD PTR [edx+ebx*8-0x30a3c88d]
  417c8a:	mov    edi,0xc464c3f9
  417c8f:	sbb    eax,0xbf665952
  417c94:	jbe    0x417c29
  417c96:	or     al,0x5b
  417c98:	fmul   st,st(1)
  417c9a:	fs in  eax,dx
  417c9c:	maskmovq mm3,(bad)
  417c9d:	neg    DWORD PTR [edx]
  417c9f:	les    ecx,FWORD PTR [eax+0x6b8dc895]
  417ca5:	mul    edx
  417ca7:	dec    ecx
  417ca8:	push   ebx
  417ca9:	pusha  
  417caa:	adc    DWORD PTR [eax+0x1f9cff8d],0xffffffca
  417cb1:	js     0x417ce6
  417cb3:	mov    edi,0xd782cae7
  417cb8:	addps  xmm2,XMMWORD PTR [edx]
  417cbb:	pop    ebx
  417cbc:	adc    eax,0x9acf401f
  417cc1:	pop    ecx
  417cc2:	lea    ebp,[edx+ebp*1-0x67]
  417cc6:	cmp    bh,al
  417cc8:	pop    ss
  417cc9:	xchg   BYTE PTR [edx-0x4dc38d62],ah
  417ccf:	(bad)  
  417cd0:	mov    dh,0xce
  417cd2:	stos   DWORD PTR es:[edi],eax
  417cd3:	xchg   edi,eax
  417cd4:	mov    eax,ds:0x6bc57f04
  417cd9:	sub    eax,0xb39410a0
  417cde:	push   eax
  417cdf:	por    mm2,QWORD PTR [ecx+ecx*8]
  417ce3:	jb     0x417c86
  417ce5:	(bad)  
  417ce7:	in     al,dx
  417ce8:	sar    BYTE PTR [esi],cl
  417cea:	rcl    DWORD PTR [edi],cl
  417cec:	repz test BYTE PTR [ecx+0x2ec001c],cl
  417cf3:	mov    ecx,0x5b163904
  417cf8:	fmul   QWORD PTR ds:[edx-0x1de082da]
  417cff:	mov    BYTE PTR ds:0x96e52836,al
  417d05:	inc    ecx
  417d06:	inc    ecx
  417d07:	sbb    dl,0x26
  417d0a:	and    cl,dh
  417d0c:	enter  0xbcbc,0x57
  417d10:	push   ebx
  417d11:	sbb    eax,0xa2fdc227
  417d16:	fnstcw WORD PTR [edi+0x57]
  417d19:	mov    ch,0xfb
  417d1b:	push   0xb7618b1c
  417d20:	out    dx,al
  417d21:	and    al,0x81
  417d23:	push   eax
  417d24:	xchg   ecx,eax
  417d25:	fwait
  417d26:	pusha  
  417d27:	mov    ah,0x78
  417d29:	loop   0x417d44
  417d2b:	inc    ebp
  417d2c:	dec    edi
  417d2d:	jno    0x417d13
  417d2f:	scas   al,BYTE PTR es:[edi]
  417d30:	(bad)  
  417d31:	test   BYTE PTR [ecx],0x3f
  417d34:	mov    BYTE PTR [ecx+0x239be164],bh
  417d3a:	(bad)  
  417d3b:	push   edi
  417d3c:	call   0x1351:0xe3f32362
  417d43:	cwde   
  417d44:	push   esp
  417d45:	and    BYTE PTR [eax],al
  417d47:	push   esp
  417d48:	mov    cl,bl
  417d4a:	icebp  
  417d4b:	jb     0x417db3
  417d4d:	adc    dh,BYTE PTR cs:[ebp+0x27]
  417d51:	mov    al,0x7e
  417d53:	mov    dh,0x32
  417d55:	push   ss
  417d56:	pushf  
  417d57:	fist   DWORD PTR [esi]
  417d59:	repz or eax,0x8ada1fb
  417d5f:	scas   al,BYTE PTR es:[edi]
  417d60:	or     BYTE PTR [esi+0x19d06d87],bh
  417d66:	(bad)  
  417d67:	icebp  
  417d68:	call   0xbe07c80a
  417d6d:	mov    WORD PTR [ecx],fs
  417d6f:	scas   eax,DWORD PTR es:[edi]
  417d70:	ds popf 
  417d72:	jne    0x417de1
  417d74:	pop    es
  417d75:	repz jb 0x417df4
  417d78:	sbb    BYTE PTR [ebp-0xc789279],ch
  417d7e:	pmaddwd mm4,QWORD PTR [edx]
  417d81:	int    0xd2
  417d83:	addr16 jbe 0x417df8
  417d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d87:	lds    ebx,FWORD PTR [ecx+0x4]
  417d8a:	xchg   ecx,eax
  417d8b:	jge    0x417d66
  417d8d:	push   ebx
  417d8e:	mov    WORD PTR [eax],ds
  417d90:	jbe    0x417d9c
  417d92:	mov    ds:0x66db06ae,eax
  417d97:	add    ebp,DWORD PTR [edi+edi*2+0x23ba1d4e]
  417d9e:	int3   
  417d9f:	rcr    DWORD PTR [ecx*8-0x30a017bd],cl
  417da6:	lahf   
  417da7:	cli    
  417da8:	ror    BYTE PTR [eax-0x355fbf4],1
  417dae:	jae    0x417dcb
  417db0:	mov    edx,0xe738678a
  417db5:	test   DWORD PTR [ebp-0x26],ecx
  417db8:	sbb    eax,0x88cb2e2e
  417dbd:	pusha  
  417dbe:	fsubr  DWORD PTR [ebp-0x66]
  417dc1:	loop   0x417e23
  417dc3:	mov    dh,0x8
  417dc5:	arpl   WORD PTR [eax+0x49],dx
  417dc8:	inc    edi
  417dc9:	sub    eax,0x18193aee
  417dce:	cmp    al,0x67
  417dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd1:	pop    esi
  417dd2:	sbb    bh,BYTE PTR [eax]
  417dd4:	mov    dl,0x2e
  417dd6:	into   
  417dd7:	ins    DWORD PTR es:[edi],dx
  417dd8:	aaa    
  417dd9:	xchg   eax,ecx
  417ddb:	pop    esp
  417ddc:	addr16 xchg ebp,eax
  417dde:	and    DWORD PTR [esi+0x73],0x64bc67cf
  417de5:	je     0x417dc8
  417de7:	inc    edx
  417de8:	push   ds
  417de9:	das    
  417dea:	loopne 0x417d75
  417dec:	ficom  WORD PTR [ebx-0x509e32c1]
  417df2:	mov    edx,0x697c753a
  417df7:	(bad)  
  417df8:	pusha  
  417df9:	xchg   dh,bh
  417dfb:	or     DWORD PTR [ebx+0x3e1cbc0a],0xf03c6bb5
  417e05:	lea    edx,[esi+0x5691a602]
  417e0b:	(bad)  [ebp+0x1109ee9c]
  417e11:	adc    BYTE PTR [eax+0x4c],dh
  417e14:	test   al,0x8e
  417e16:	xor    BYTE PTR [edi-0x23aa1a8],bh
  417e1c:	fld    QWORD PTR [edx+0x3b59d1d0]
  417e22:	jns    0x417e4e
  417e24:	ss ret 0xa3af
  417e28:	cmp    al,0xbe
  417e2a:	into   
  417e2b:	fisubr WORD PTR [ecx]
  417e2d:	daa    
  417e2e:	lahf   
  417e2f:	jp     0x417e15
  417e31:	and    al,0x62
  417e33:	popf   
  417e34:	fadd   DWORD PTR [ecx]
  417e36:	and    dl,BYTE PTR [ebx]
  417e38:	jo     0x417eb6
  417e3a:	sti    
  417e3b:	imul   ebp,DWORD PTR [ebp+0x6118e9ee],0x5b958aab
  417e45:	xchg   ebp,eax
  417e46:	inc    ebp
  417e47:	xchg   DWORD PTR [edi],edx
  417e49:	fdivr  DWORD PTR [ecx+0x71]
  417e4c:	lock ficom DWORD PTR [edi]
  417e4f:	(bad)  
  417e50:	sub    eax,0x92d3d346
  417e55:	mov    bh,0x59
  417e57:	bswap  ecx
  417e59:	ins    BYTE PTR es:[edi],dx
  417e5a:	pop    eax
  417e5b:	and    ch,BYTE PTR [ebp-0x20ff99a2]
  417e61:	cmp    eax,0x2740d3c0
  417e66:	xchg   BYTE PTR [ecx],al
  417e68:	call   0xb8fc:0xd333455a
  417e6f:	in     eax,dx
  417e70:	cmp    DWORD PTR [edx],edi
  417e72:	fisttp WORD PTR [eax+0x62]
  417e75:	imul   eax,DWORD PTR [eax-0xbaf634e],0xffffffd2
  417e7c:	stos   BYTE PTR es:[edi],al
  417e7d:	sbb    BYTE PTR ds:[edi-0x42f137e3],ah
  417e84:	rcr    BYTE PTR [edx+0x6d7c1674],0xc3
  417e8b:	or     BYTE PTR [ecx],al
  417e8d:	aaa    
  417e8e:	cdq    
  417e8f:	repz cdq 
  417e91:	bnd jb 0x417e5c
  417e94:	add    al,0x94
  417e96:	push   es
  417e97:	inc    edi
  417e98:	outs   dx,BYTE PTR ds:[esi]
  417e99:	xor    ecx,DWORD PTR [eax]
  417e9b:	xor    BYTE PTR [esi-0x59],0x93
  417e9f:	pop    ebx
  417ea0:	add    eax,0x159da3ad
  417ea5:	test   eax,esp
  417ea7:	pop    esp
  417ea8:	jge    0x417e69
  417eaa:	mov    dl,0x47
  417eac:	cs inc eax
  417eae:	fwait
  417eaf:	inc    edi
  417eb0:	jns    0x417e74
  417eb2:	push   ds
  417eb3:	add    DWORD PTR [eax-0x1f655b42],ebp
  417eb9:	retf   
  417eba:	sub    al,0xab
  417ebc:	cmp    ebx,eax
  417ebe:	fwait
  417ebf:	xlat   BYTE PTR ds:[ebx]
  417ec0:	pop    edi
  417ec1:	mov    ch,BYTE PTR ds:0x407d1134
  417ec7:	add    eax,0x90a3a79
  417ecc:	in     al,dx
  417ecd:	mov    ds:0x3753a360,eax
  417ed2:	adc    BYTE PTR [edi],dh
  417ed4:	ret    
  417ed5:	inc    edx
  417ed6:	mov    al,0xce
  417ed8:	add    BYTE PTR [eax-0x1],dh
  417edb:	inc    ecx
  417edc:	aam    0xe5
  417ede:	and    al,0x6c
  417ee0:	sar    DWORD PTR ds:0x98ea451f,1
  417ee6:	cdq    
  417ee7:	and    DWORD PTR [esi-0x2c],ebx
  417eea:	sub    bh,BYTE PTR [eax+0x6c]
  417eed:	jae    0x417e94
  417eef:	inc    ecx
  417ef0:	add    bl,BYTE PTR [esi-0x6628cad1]
  417ef6:	adc    al,ah
  417ef8:	xchg   ebx,eax
  417ef9:	jg     0x417f21
  417efb:	daa    
  417efc:	bound  ecx,QWORD PTR [ebx-0x42]
  417eff:	mov    ch,0x4f
  417f01:	sbb    BYTE PTR [edx-0x29],bl
  417f04:	push   0xffffffbe
  417f06:	les    eax,FWORD PTR [eax-0x2955918]
  417f0c:	mov    edi,0x67b137de
  417f11:	dec    esp
  417f12:	ds xor eax,0x6ac5c812
  417f18:	dec    BYTE PTR [ecx]
  417f1a:	inc    edx
  417f1b:	les    ebx,FWORD PTR [edi+edx*2+0x5eac727d]
  417f22:	in     eax,dx
  417f23:	jl     0x417f8a
  417f25:	inc    esi
  417f26:	stos   BYTE PTR es:[edi],al
  417f27:	shr    DWORD PTR [edx],0xb2
  417f2a:	jmp    0x417ecf
  417f2c:	je     0x417ee0
  417f2e:	inc    ebp
  417f2f:	push   ebp
  417f30:	push   ecx
  417f31:	out    dx,eax
  417f32:	bound  edx,QWORD PTR [ebp-0x30]
  417f35:	dec    eax
  417f36:	inc    edx
  417f37:	mul    DWORD PTR [eax+esi*1+0x481cd4cf]
  417f3e:	stos   DWORD PTR es:[edi],eax
  417f3f:	int    0xf8
  417f41:	ja     0x417f45
  417f43:	fbstp  TBYTE PTR [edx+0x2f]
  417f46:	out    dx,al
  417f47:	jp     0x417f0f
  417f49:	(bad)  
  417f4a:	mov    ebx,0x96d9869
  417f4f:	(bad)  
  417f50:	call   0xa11c:0xc4a1abee
  417f57:	fisttp WORD PTR [ebx-0x9]
  417f5a:	(bad)  
  417f5c:	pop    es
  417f5d:	pop    ecx
  417f5e:	pop    edx
  417f5f:	sahf   
  417f60:	hlt    
  417f61:	mov    al,ds:0x301db7b4
  417f66:	jmp    0x5cb3:0xa8958c9d
  417f6d:	mov    eax,esp
  417f6f:	aam    0x3e
  417f71:	popa   
  417f72:	sbb    ch,BYTE PTR [ebp-0x3d]
  417f75:	ins    DWORD PTR es:[edi],dx
  417f76:	std    
  417f77:	xchg   ebx,eax
  417f78:	hlt    
  417f79:	(bad)  
  417f7b:	sbb    ebx,DWORD PTR [edi-0x7b9ac21f]
  417f81:	inc    ebp
  417f82:	push   edi
  417f83:	addr16 push ebp
  417f85:	(bad)  
  417f86:	pop    ss
  417f87:	push   esi
  417f88:	(bad)  [ebx]
  417f8a:	dec    ebp
  417f8b:	loope  0x417fa9
  417f8d:	and    BYTE PTR [esi],bh
  417f8f:	into   
  417f90:	cld    
  417f91:	int    0xc4
  417f93:	ficomp WORD PTR [ebp-0x49edb3c8]
  417f99:	out    dx,al
  417f9a:	adc    al,0x12
  417f9c:	outs   dx,BYTE PTR ds:[esi]
  417f9d:	aas    
  417f9e:	add    esi,DWORD PTR [esi+0x9]
  417fa1:	fild   WORD PTR [edi+ebx*1+0x6b229d3e]
  417fa8:	sub    eax,0xd3837ffe
  417fad:	jmp    0xbe78:0xa9c29573
  417fb4:	sub    DWORD PTR [eax-0x73b615f5],0xa6f6da46
  417fbe:	ror    BYTE PTR [edx-0x213a9747],cl
  417fc4:	sub    ch,BYTE PTR ds:0x97ea7af7
  417fca:	iret   
  417fcb:	jne    0x417fa2
  417fcd:	mov    dl,0x95
  417fcf:	and    dl,BYTE PTR ds:0xb6c8fd24
  417fd5:	pop    eax
  417fd6:	jg     0x418045
  417fd8:	push   es
  417fd9:	mov    edx,0xcbbe5a3
  417fde:	ja     0x418010
  417fe0:	xchg   edi,eax
  417fe1:	dec    edi
  417fe2:	in     al,dx
  417fe3:	pop    ebp
  417fe4:	sahf   
  417fe5:	pop    ss
  417fe6:	or     BYTE PTR [ebp-0x14],ch
  417fe9:	lea    esp,[ebx+0x53]
  417fec:	xor    ebp,DWORD PTR [ebx+0x71]
  417fef:	in     eax,0x76
  417ff1:	outs   dx,BYTE PTR ds:[esi]
  417ff2:	pop    ds
  417ff3:	into   
  417ff4:	pushf  
  417ff5:	xchg   cl,ch
  417ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff8:	and    dl,al
  417ffa:	xchg   BYTE PTR [esi-0x1b388d63],dl
  418000:	push   ebx
  418001:	cli    
  418002:	in     eax,dx
  418003:	cmp    bh,BYTE PTR [edi+0x41d24296]
  418009:	or     eax,0x93e1b0ee
  41800e:	(bad)  
  41800f:	xlat   BYTE PTR ds:[ebx]
  418010:	scas   al,BYTE PTR es:[edi]
  418011:	adc    eax,eax
  418013:	movzx  edi,BYTE PTR [edi]
  418016:	test   eax,0x19d0aa14
  41801b:	mov    edi,DWORD PTR [ecx]
  41801d:	popa   
  41801e:	xchg   ebx,eax
  41801f:	je     0x418023
  418021:	push   eax
  418022:	push   ecx
  418023:	sub    al,0xcb
  418025:	push   DWORD PTR [esi-0x5eb2427a]
  41802b:	pop    edx
  41802c:	mov    ch,0x3c
  41802e:	and    cl,BYTE PTR ds:0x8a16659
  418034:	cld    
  418035:	jl     0x417ff3
  418037:	pop    esp
  418038:	and    ebp,DWORD PTR [esi-0x7c9ab954]
  41803e:	(bad)  
  41803f:	mov    edx,0x863672fa
  418044:	push   edi
  418045:	retf   
  418046:	pop    ebx
  418047:	jg     0x417ffd
  418049:	scas   eax,DWORD PTR es:[edi]
  41804a:	fisubr WORD PTR [eax+ebx*4-0x7e5211f]
  418051:	mov    ebp,0x92c30f5e
  418056:	gs aam 0x4a
  418059:	daa    
  41805a:	inc    eax
  41805b:	scas   al,BYTE PTR es:[edi]
  41805c:	jmp    0xb778a881
  418061:	fwait
  418062:	pop    ecx
  418063:	push   ebx
  418064:	out    dx,eax
  418065:	shl    BYTE PTR [ebp+0x3af13887],1
  41806b:	jecxz  0x4180be
  41806d:	into   
  41806e:	pop    es
  41806f:	push   esp
  418070:	mov    al,ds:0xfffdc97a
  418075:	adc    al,0xa5
  418077:	mov    ecx,ds
  418079:	dec    ebx
  41807a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41807b:	sub    DWORD PTR [eax+0x584f9b56],esp
  418081:	jmp    0xdf10:0x1129dbd1
  418088:	inc    edi
  418089:	sti    
  41808a:	push   ebx
  41808b:	in     eax,dx
  41808c:	or     DWORD PTR [esi],0xffffffe5
  41808f:	retf   0x5f2f
  418092:	aaa    
  418093:	jae    0x4180c6
  418095:	js     0x41808f
  418097:	js     0x418075
  418099:	sbb    BYTE PTR [eax],ch
  41809b:	jo     0x41808d
  41809d:	push   eax
  41809e:	lahf   
  41809f:	pop    edi
  4180a0:	(bad)  
  4180a2:	ret    0x7b83
  4180a5:	xchg   ebp,eax
  4180a6:	jg     0x418032
  4180a8:	dec    esp
  4180a9:	fwait
  4180aa:	mov    fs,WORD PTR [ecx-0x1ba0950c]
  4180b0:	mov    ds:0xde5ce2ee,eax
  4180b5:	cmp    dl,BYTE PTR [edx+0x7c5b546f]
  4180bb:	sub    al,dh
  4180bd:	push   bp
  4180bf:	and    DWORD PTR [edx+0x7d],eax
  4180c2:	or     eax,0x8c90235b
  4180c7:	push   ebp
  4180c8:	mov    bh,0xca
  4180ca:	mov    bl,BYTE PTR [ebx-0x6e96a229]
  4180d0:	push   cs
  4180d1:	js     0x418118
  4180d3:	or     BYTE PTR [eax+eiz*4],ah
  4180d6:	dec    edx
  4180d7:	out    dx,eax
  4180d8:	cs xchg ecx,eax
  4180da:	(bad)  
  4180db:	and    BYTE PTR [edi-0x5b48a89d],bh
  4180e1:	cmp    edx,DWORD PTR [edi+0xb]
  4180e4:	sub    DWORD PTR ds:0x2b8edd56,ebp
  4180ea:	or     al,0x65
  4180ec:	shl    BYTE PTR [eax+0x4b77011d],cl
  4180f2:	popa   
  4180f3:	sub    BYTE PTR [ebx-0x61],al
  4180f6:	push   eax
  4180f7:	jbe    0x418150
  4180f9:	pop    esp
  4180fa:	jmp    0x4e70:0x8a41887a
  418101:	push   esi
  418102:	cli    
  418103:	sub    BYTE PTR [ebx],0x16
  418106:	jg     0x418090
  418108:	add    dh,al
  41810a:	mov    ch,0xea
  41810c:	xor    BYTE PTR [ecx],dl
  41810e:	and    al,0xeb
  418110:	cmp    eax,0xe1a65f53
  418115:	xchg   al,dh
  418117:	(bad)  
  418118:	jg     0x418173
  41811a:	mov    ds:0x319e29f,al
  41811f:	aaa    
  418120:	pop    eax
  418121:	mov    edi,0x8546eaa5
  418126:	mov    ch,0x8f
  418128:	and    DWORD PTR [ebx-0x2067713b],ebp
  41812e:	(bad)  
  41812f:	(bad)  
  418130:	dec    edx
  418131:	lods   eax,DWORD PTR ds:[esi]
  418132:	adc    al,0x8f
  418134:	daa    
  418135:	ret    0x2866
  418138:	mov    ah,0x4
  41813a:	mov    al,BYTE PTR ds:0x6871e7d5
  418140:	rcr    BYTE PTR [edi],cl
  418142:	lods   al,BYTE PTR ds:[esi]
  418143:	mov    cl,BYTE PTR ds:0xfe5e5226
  418149:	test   DWORD PTR [edx-0x6e8e23a5],0x65e96c5d
  418153:	xchg   ebx,eax
  418154:	shl    ebx,1
  418156:	xchg   BYTE PTR [ebx+0x56d8593a],al
  41815c:	push   ecx
  41815d:	pusha  
  41815e:	dec    esp
  41815f:	fwait
  418160:	mov    ds:0xcbf9873e,al
  418165:	or     bh,dh
  418167:	ja     0x418178
  418169:	mov    dh,0x17
  41816b:	iret   
  41816c:	or     ebp,DWORD PTR [eax+0x450a1e87]
  418172:	lods   al,BYTE PTR ds:[esi]
  418173:	ret    0xea42
  418176:	push   esp
  418177:	xchg   ebp,eax
  418178:	pop    ds
  418179:	das    
  41817a:	data16 arpl sp,bx
  41817d:	imul   bl
  41817f:	jns    0x41814d
  418181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418182:	fdivr  DWORD PTR [ecx]
  418184:	adc    al,0xfa
  418186:	push   edx
  418187:	xor    al,0x8
  418189:	aam    0x96
  41818b:	or     esi,DWORD PTR [esi+eax*4+0x6a81d22c]
  418192:	retf   0x863c
  418195:	or     BYTE PTR [eax],0xac
  418198:	(bad)  
  418199:	iret   
  41819a:	mov    edi,0x4dfa21fc
  41819f:	push   ss
  4181a0:	dec    esi
  4181a1:	pop    esi
  4181a2:	or     BYTE PTR [ebx+0x61],al
  4181a5:	add    DWORD PTR [ebp+0xd],ecx
  4181a8:	push   edx
  4181a9:	or     edi,DWORD PTR [edx]
  4181ab:	in     eax,dx
  4181ac:	shr    DWORD PTR [edx-0x720b1386],0xd5
  4181b3:	retf   
  4181b4:	inc    ecx
  4181b5:	jnp    0x418149
  4181b7:	call   0x9ff207bf
  4181bc:	out    0x51,al
  4181be:	stc    
  4181bf:	rcr    BYTE PTR [edi+ebx*8-0x68895d19],cl
  4181c6:	cwde   
  4181c7:	les    ecx,FWORD PTR [edi]
  4181c9:	inc    ebx
  4181ca:	sub    al,0x44
  4181cc:	pop    ebp
  4181cd:	jl     0x41820b
  4181cf:	rol    BYTE PTR [edx+eax*8+0xc],1
  4181d3:	lods   eax,DWORD PTR ds:[esi]
  4181d4:	cmp    BYTE PTR [esi],dh
  4181d6:	add    ebx,DWORD PTR [edi+0x785dbf8f]
  4181dc:	inc    edx
  4181dd:	push   es
  4181de:	call   0x7289:0x345836bd
  4181e5:	iret   
  4181e6:	sbb    bh,BYTE PTR [eax+0x43e7f518]
  4181ec:	inc    ecx
  4181ed:	iret   
  4181ee:	daa    
  4181ef:	pop    ss
  4181f0:	call   0xf1b1:0xbfe177ee
  4181f7:	xchg   esp,eax
  4181f8:	fstp   TBYTE PTR ss:0x7769fcb4
  4181ff:	fsubr  st(0),st
  418201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418202:	ds (bad) 
  418204:	call   0x2f93:0xa7b75ff6
  41820b:	stc    
  41820c:	repnz push ebp
  41820e:	int3   
  41820f:	jl     0x418228
  418211:	aam    0xa3
  418213:	outs   dx,DWORD PTR ds:[esi]
  418214:	xchg   esi,eax
  418215:	repz jnp 0x418224
  418218:	(bad)  
  418219:	mov    dh,0x19
  41821b:	stc    
  41821c:	jne    0x4181f3
  41821e:	sub    esi,DWORD PTR [ebx]
  418220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418221:	mov    WORD PTR [esi+0x3b],es
  418224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418225:	aas    
  418226:	fs inc ebp
  418228:	mov    DWORD PTR [edx+0x32],ecx
  41822b:	stos   DWORD PTR es:[edi],eax
  41822c:	push   cs
  41822d:	lds    edi,FWORD PTR [ebp+edi*1+0x73]
  418231:	(bad)  
  418232:	out    dx,eax
  418233:	int3   
  418234:	ss jmp 0x4182ac
  418237:	cmp    eax,0x52e14d90
  41823c:	fwait
  41823d:	clc    
  41823e:	push   edi
  41823f:	mov    ecx,0xd23cf0b8
  418244:	cld    
  418245:	retf   0x9c34
  418248:	pop    ecx
  418249:	sti    
  41824a:	jl     0x4181d9
  41824c:	push   esi
  41824d:	or     ah,BYTE PTR ds:0x83d66628
  418253:	lahf   
  418254:	sub    ebp,edi
  418256:	nop
  418257:	jl     0x418245
  418259:	arpl   sp,bx
  41825b:	fst    DWORD PTR [esi+0x6c]
  41825e:	sub    DWORD PTR ds:0xe1a4786,ebp
  418264:	test   eax,0x8d1630f6
  418269:	sub    BYTE PTR ds:0x95051f5a,dh
  41826f:	repz xchg esp,eax
  418271:	out    dx,eax
  418272:	mov    ss,esi
  418274:	mov    eax,ds:0x5da124ab
  418279:	xchg   edi,eax
  41827a:	lahf   
  41827b:	pop    esi
  41827c:	xor    BYTE PTR [edx-0x74],0x96
  418280:	test   BYTE PTR [eax+0x69],0x54
  418284:	jg     0x4182ac
  418286:	jno    0x41820d
  418288:	mov    ebp,DWORD PTR [edx]
  41828a:	outs   dx,BYTE PTR es:[esi]
  41828c:	jle    0x4182de
  41828e:	inc    esi
  41828f:	fidiv  DWORD PTR [ebx]
  418291:	fisubr WORD PTR [eax]
  418293:	loope  0x418241
  418295:	lahf   
  418296:	fmul   QWORD PTR [edx+edx*1-0x3a]
  41829a:	sbb    esi,DWORD PTR [eax+0x476b2e20]
  4182a0:	lock jl 0x4182ce
  4182a3:	ds jmp 0x41831b
  4182a6:	jb     0x418244
  4182a8:	call   FWORD PTR [edx]
  4182aa:	push   0xa90547f0
  4182af:	(bad)  
  4182b0:	and    esi,edx
  4182b2:	iret   
  4182b3:	mov    ds:0xffa7f69f,eax
  4182b8:	fwait
  4182b9:	call   0x7e24:0x8f36ca10
  4182c0:	leave  
  4182c1:	xchg   edx,eax
  4182c2:	stos   DWORD PTR es:[edi],eax
  4182c3:	bound  edx,QWORD PTR [edi-0x62]
  4182c6:	xchg   DWORD PTR [ebx],edi
  4182c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182c9:	aad    0xf8
  4182cb:	fdiv   st,st(4)
  4182cd:	retf   0x8622
  4182d0:	ror    edx,0xb6
  4182d3:	fsub   DWORD PTR [ebx+ebx*2]
  4182d6:	lea    edx,[ebp+0x53]
  4182d9:	mov    al,ah
  4182db:	adc    eax,0xf2e64e84
  4182e0:	rcl    BYTE PTR [esi+0x67],cl
  4182e3:	mov    eax,ds:0xeaea9b93
  4182e8:	add    al,0x2
  4182ea:	into   
  4182eb:	push   eax
  4182ec:	pop    ebp
  4182ed:	sahf   
  4182ee:	popa   
  4182ef:	push   ds
  4182f0:	(bad)  
  4182f1:	ss es loop 0x41829d
  4182f5:	stc    
  4182f6:	inc    ebx
  4182f7:	pop    ebx
  4182f8:	aam    0xfa
  4182fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fb:	(bad)  
  4182fc:	mov    BYTE PTR [esi+0x55043da7],dh
  418302:	push   ecx
  418303:	jb     0x4182f9
  418305:	leave  
  418306:	mov    esp,0x94ddc39b
  41830b:	test   dl,bh
  41830d:	add    al,0xb9
  41830f:	lds    esi,FWORD PTR [edi-0x67b0b99e]
  418315:	ins    BYTE PTR es:[edi],dx
  418316:	mov    WORD PTR [ebp+0x49],?
  418319:	mov    dh,0x35
  41831b:	data16 loopne 0x4182ba
  41831e:	dec    edi
  41831f:	imul   ebp,DWORD PTR [edx-0x29dd2916],0xf7bb430e
  418329:	add    bh,dl
  41832b:	ret    
  41832c:	in     eax,0xb
  41832e:	enter  0x7582,0xcd
  418332:	(bad)  [edi+eiz*1]
  418335:	mov    edx,esp
  418337:	or     ebp,ecx
  418339:	aam    0xd3
  41833b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833c:	and    ah,BYTE PTR [eax]
  41833e:	call   0x65c2:0xcf201512
  418345:	pop    ss
  418346:	popf   
  418347:	fcmovnu st,st(7)
  418349:	mov    dl,0xcc
  41834b:	aad    0xf8
  41834d:	cmp    DWORD PTR [ecx+ebx*1+0x48],eax
  418351:	sub    al,0x7
  418353:	cmc    
  418354:	into   
  418355:	cmp    eax,0xd3aa0c58
  41835a:	out    0x18,al
  41835c:	outs   dx,BYTE PTR ds:[esi]
  41835d:	test   al,0x5e
  41835f:	js     0x4183b3
  418361:	mov    edx,0x4975b67
  418366:	sub    BYTE PTR [edi-0x507b85dc],0x50
  41836d:	sbb    al,0x82
  41836f:	cmp    ebp,0x6f
  418372:	pop    es
  418373:	ret    0xf2e8
  418376:	out    0x9,eax
  418378:	pushf  
  418379:	sahf   
  41837a:	out    dx,eax
  41837b:	adc    edi,ebx
  41837d:	cmp    al,0x90
  41837f:	cmp    al,0xd1
  418381:	popa   
  418382:	push   eax
  418383:	inc    eax
  418384:	dec    edi
  418385:	dec    esi
  418386:	hlt    
  418387:	mov    bl,0x8c
  418389:	addr16 cmp eax,0xa3afd873
  41838f:	jle    0x41833d
  418391:	or     ebx,ecx
  418393:	inc    edx
  418394:	mov    eax,ds:0x99bcc0a3
  418399:	daa    
  41839a:	ss aaa 
  41839c:	xor    DWORD PTR [esi+eax*1-0x40],eax
  4183a0:	jnp    0x418326
  4183a2:	ja     0x4183ea
  4183a4:	aad    0xcf
  4183a6:	sar    BYTE PTR [ebx+edx*2-0x24c0af3a],0x47
  4183ae:	in     al,0xeb
  4183b0:	mov    edx,0xf6a2e1ed
  4183b5:	shl    BYTE PTR [eax+ecx*4-0x50],cl
  4183b9:	xor    eax,0xf0171b73
  4183be:	shr    ebx,0xf3
  4183c1:	xchg   edi,eax
  4183c2:	or     al,0x53
  4183c4:	dec    ebp
  4183c5:	cmp    DWORD PTR [edi+ecx*2],edx
  4183c8:	push   ebp
  4183c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183ca:	mov    cs,esi
  4183cc:	dec    ecx
  4183cd:	out    0x61,eax
  4183cf:	sti    
  4183d0:	sahf   
  4183d1:	ja     0x418440
  4183d3:	mov    eax,0xa57362a1
  4183d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d9:	loop   0x418394
  4183db:	arpl   WORD PTR fs:[esp+ebx*8+0xa],ax
  4183e0:	cmp    esp,DWORD PTR [ebx+0x24]
  4183e3:	inc    esp
  4183e4:	dec    ecx
  4183e5:	(bad)  
  4183e6:	push   ecx
  4183e7:	cli    
  4183e8:	imul   eax,esi,0xffffff8f
  4183eb:	(bad)  
  4183ec:	pop    ds
  4183ed:	adc    edx,DWORD PTR [edi-0x5eafe8c2]
  4183f3:	pop    esi
  4183f4:	fcomp  QWORD PTR [edx+0x34]
  4183f7:	mov    cs,ecx
  4183f9:	and    al,BYTE PTR [ecx+0x1c]
  4183fc:	mov    ebx,es
  4183fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ff:	mov    DWORD PTR [ebx-0x330d8b7d],edi
  418405:	mov    eax,ds:0x260a24bb
  41840a:	jo     0x41842d
  41840c:	push   eax
  41840d:	gs aam 0xcb
  418410:	stos   BYTE PTR es:[edi],al
  418411:	or     DWORD PTR [edx],edx
  418413:	push   esp
  418414:	pop    edx
  418415:	scas   eax,DWORD PTR es:[edi]
  418416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418417:	int    0x5a
  418419:	sar    ebx,cl
  41841b:	outs   dx,DWORD PTR ds:[esi]
  41841c:	scas   eax,DWORD PTR es:[edi]
  41841d:	retf   
  41841e:	xor    eax,0xe994a57b
  418423:	mov    dh,0x55
  418425:	cmp    bl,0x58
  418428:	push   esp
  418429:	cmp    eax,DWORD PTR [ecx+edi*1+0x7f]
  41842d:	sub    dl,BYTE PTR [ebp+0x6334b556]
  418433:	sbb    BYTE PTR [esi+0x4f09fa],bh
  418439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843a:	icebp  
  41843b:	mov    al,BYTE PTR [edi-0x141e2d51]
  418441:	cli    
  418442:	pop    es
  418443:	js     0x418415
  418445:	ds js  0x41844f
  418448:	and    al,0xce
  41844a:	scas   al,BYTE PTR es:[edi]
  41844b:	push   0x65
  41844d:	sti    
  41844e:	mov    esp,DWORD PTR fs:[esi]
  418451:	lea    edi,[edi+0x3a]
  418454:	or     al,dh
  418456:	mov    esp,0x97efc969
  41845b:	xchg   BYTE PTR [esi-0x7a],al
  41845e:	add    bh,dh
  418460:	lods   al,BYTE PTR ds:[esi]
  418461:	xchg   ecx,eax
  418462:	dec    ebp
  418463:	(bad)  
  418464:	aad    0x67
  418466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418467:	inc    ebx
  418468:	adc    BYTE PTR [ecx+0x20f2fbca],dl
  41846e:	imul   ebp,edx,0x55235a37
  418474:	jp     0x4184d7
  418476:	out    0xf6,al
  418478:	inc    eax
  418479:	bound  eax,QWORD PTR [ebx-0x27]
  41847c:	test   DWORD PTR [edi-0xc],esp
  41847f:	pop    eax
  418480:	and    DWORD PTR ds:0x8d282c6f,edi
  418486:	mov    ebp,0x68703e7d
  41848b:	adc    ch,BYTE PTR [eax]
  41848d:	push   0x80f464ca
  418492:	stos   BYTE PTR es:[edi],al
  418493:	leave  
  418494:	lock stos DWORD PTR es:[edi],eax
  418496:	push   cs
  418497:	div    edx
  418499:	jmp    0x4184c5
  41849b:	imul   BYTE PTR [eax-0x52]
  41849e:	add    DWORD PTR [ebp+esi*8+0xb4cffec],edi
  4184a5:	mov    gs,WORD PTR [edx-0x8]
  4184a8:	loopne 0x418445
  4184aa:	icebp  
  4184ab:	mov    esi,0xb8323072
  4184b0:	sahf   
  4184b1:	arpl   WORD PTR [ebx+ecx*2+0x742f178d],di
  4184b8:	xor    BYTE PTR [ebx+eiz*8-0x5e5e12e7],cl
  4184bf:	jmp    0x4184d9
  4184c1:	mov    eax,ds:0xe2ce1ff1
  4184c6:	ds jge 0x41853f
  4184c9:	frstor [edx+0x30]
  4184cc:	into   
  4184cd:	dec    ebp
  4184ce:	cmp    eax,ebx
  4184d0:	and    BYTE PTR [ecx],ah
  4184d2:	xlat   BYTE PTR ds:[ebx]
  4184d3:	test   DWORD PTR [ebx],esi
  4184d5:	div    BYTE PTR [edi+0x22]
  4184d8:	fisub  DWORD PTR [ebx-0x78f2e5f]
  4184de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184df:	mov    es,WORD PTR [edx]
  4184e1:	mov    ah,0xee
  4184e3:	test   eax,0x5756fe30
  4184e8:	or     ebp,DWORD PTR [edi+0x23ec7794]
  4184ee:	push   ds
  4184ef:	retf   0x487f
  4184f2:	shr    DWORD PTR [eax-0x7cfafb52],0xfc
  4184f9:	popf   
  4184fa:	push   esi
  4184fb:	inc    edx
  4184fc:	xchg   ebx,eax
  4184fd:	aad    0x56
  4184ff:	sub    ch,0xd6
  418502:	xor    ecx,DWORD PTR [eax]
  418504:	leave  
  418505:	sbb    esi,ebx
  418507:	or     edx,esp
  418509:	cdq    
  41850a:	add    dh,0xa1
  41850d:	pop    ebx
  41850e:	sahf   
  41850f:	jnp    0x41853f
  418511:	push   eax
  418512:	pop    ss
  418513:	or     eax,0x1e15be04
  418518:	jmp    0x4184ff
  41851a:	xor    dh,BYTE PTR [ecx+0x62]
  41851d:	jmp    0x418564
  41851f:	and    BYTE PTR [eax],al
  418521:	retf   
  418522:	mov    eax,ds:0xc6e86e03
  418527:	fidivr DWORD PTR ss:[esp+ecx*2-0x33]
  41852c:	mov    al,ds:0x13ffb43e
  418531:	cli    
  418532:	int    0x9
  418534:	sti    
  418535:	pop    ss
  418536:	loopne 0x4184e1
  418538:	(bad)  
  41853a:	aad    0x16
  41853c:	and    esi,DWORD PTR [ecx-0x15]
  41853f:	and    cl,BYTE PTR [ebx-0xc0738ac]
  418545:	pop    edi
  418546:	dec    ebx
  418547:	inc    esi
  418548:	stos   BYTE PTR es:[edi],al
  418549:	test   eax,0xedb9c491
  41854e:	mov    ecx,0x74a3451b
  418553:	shr    DWORD PTR [esi+0x1dd9e9a9],cl
  418559:	call   0x9b611452
  41855e:	or     DWORD PTR [ebp+0x50e6143e],esp
  418564:	stc    
  418565:	cmp    BYTE PTR [edi],al
  418567:	adc    DWORD PTR [edx+0x4e5cadc9],esi
  41856d:	cs jl  0x4185ae
  418570:	dec    ecx
  418571:	push   esp
  418572:	pop    eax
  418573:	mov    ecx,0x2c2fe951
  418578:	sti    
  418579:	mov    al,ds:0x10c3dfff
  41857e:	out    0xc3,eax
  418580:	mov    esp,0x3cbe43e6
  418585:	sbb    al,0x9e
  418587:	fist   WORD PTR [ecx]
  418589:	nop
  41858a:	and    edx,ebx
  41858c:	and    al,0x38
  41858e:	iret   
  41858f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418590:	fadd   st,st(2)
  418592:	fnstenv [eax+0x3dfa28ba]
  418598:	add    bh,BYTE PTR [ecx]
  41859a:	inc    eax
  41859b:	sub    BYTE PTR [esp+esi*2-0x3b],dl
  41859f:	in     al,dx
  4185a0:	fbld   TBYTE PTR [ecx+eiz*2]
  4185a3:	das    
  4185a4:	leave  
  4185a5:	(bad)  
  4185a7:	scas   eax,DWORD PTR es:[edi]
  4185a8:	les    eax,FWORD PTR fs:[edx-0x13]
  4185ac:	(bad)  
  4185ad:	(bad)  [esp+ebp*2]
  4185b0:	xor    ecx,0x7
  4185b3:	sahf   
  4185b4:	iret   
  4185b5:	fwait
  4185b6:	rcr    DWORD PTR [ebp+0x2e],0xbc
  4185ba:	fwait
  4185bb:	push   esi
  4185bc:	popf   
  4185bd:	idiv   DWORD PTR [esi-0x13c2723a]
  4185c3:	mov    eax,0x3ab3f0b4
  4185c8:	mul    BYTE PTR [ecx]
  4185ca:	mov    dl,0xb9
  4185cc:	sbb    eax,0x78639651
  4185d1:	daa    
  4185d2:	mul    DWORD PTR [edi-0x1b1496a4]
  4185d8:	xchg   eax,esi
  4185da:	jle    0x41864f
  4185dc:	sbb    eax,ecx
  4185de:	jns    0x418589
  4185e0:	(bad)  
  4185e1:	int3   
  4185e2:	mov    edi,0x61687184
  4185e7:	ret    
  4185e8:	mov    eax,ds:0x8466ff96
  4185ed:	arpl   WORD PTR [esi+0x6c90e00a],bx
  4185f3:	mov    esp,0xa72d3a2d
  4185f8:	bound  ecx,QWORD PTR [edx]
  4185fa:	push   cs
  4185fb:	fisubr WORD PTR [eax+0x76bcfd0a]
  418601:	jle    0x418672
  418603:	mov    esp,0x2537b409
  418608:	add    BYTE PTR [esi+ebp*8+0x6],bl
  41860c:	xor    BYTE PTR [edx+0x40bce4c1],bh
  418612:	arpl   WORD PTR [eax+0x13],ax
  418615:	dec    esp
  418616:	sbb    dh,0x23
  418619:	imul   edx,edi,0x3078e5d9
  41861f:	mov    al,BYTE PTR [ebx]
  418621:	sub    DWORD PTR [ebx+eiz*4+0x59],eax
  418625:	aam    0x1
  418627:	xor    DWORD PTR [eax+0x3a],0x53e907ef
  41862e:	add    ebx,DWORD PTR [esi-0x25]
  418631:	out    0xc5,al
  418633:	add    al,0xe3
  418635:	jmp    0x447b513e
  41863a:	xlat   BYTE PTR ds:[ebx]
  41863b:	inc    edx
  41863c:	inc    ecx
  41863d:	cmp    DWORD PTR [edx],0x6d
  418640:	call   0x9d52114c
  418645:	adc    DWORD PTR [ebx+0x229a71fa],esp
  41864b:	push   edx
  41864c:	out    dx,eax
  41864d:	jbe    0x4185dd
  41864f:	mov    esp,0x54c9a688
  418654:	adc    BYTE PTR [ecx],0xc6
  418657:	jbe    0x4186bd
  418659:	sbb    BYTE PTR [ecx-0x69],ah
  41865c:	out    0x51,al
  41865e:	imul   edi,DWORD PTR [ebx],0xffffffa2
  418661:	(bad)  [esi-0x43]
  418664:	jmp    0x41862e
  418666:	and    al,0x38
  418669:	cmc    
  41866a:	clc    
  41866b:	and    DWORD PTR [ecx+0x5a],edx
  41866e:	pop    es
  41866f:	inc    edi
  418670:	aam    0xca
  418672:	outs   dx,BYTE PTR ds:[esi]
  418673:	jb     0x418607
  418675:	cmp    al,0xcd
  418677:	mov    ds:0xbc74fb1b,al
  41867c:	cmp    al,0x29
  41867e:	jns    0x41869e
  418680:	mov    ecx,0xfb02ffe8
  418685:	cmp    BYTE PTR [edi-0x47],0xc5
  418689:	stc    
  41868a:	pop    ebp
  41868b:	mov    eax,0x3f15f7eb
  418690:	and    al,0x77
  418692:	retf   0xc718
  418695:	push   ss
  418696:	mov    eax,ds:0xbbfd4ad6
  41869b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869c:	mov    al,0x96
  41869e:	fld    DWORD PTR ds:0x26d760ac
  4186a4:	jp     0x4186da
  4186a6:	in     al,0x13
  4186a8:	cs or  ebp,ebp
  4186ab:	lds    edx,FWORD PTR [ebp-0x7e]
  4186ae:	mov    al,0x69
  4186b0:	push   es
  4186b1:	sahf   
  4186b2:	stos   BYTE PTR es:[edi],al
  4186b3:	adc    ebp,edi
  4186b5:	jae    0x41866c
  4186b7:	add    BYTE PTR [eax-0x60],cl
  4186ba:	pop    eax
  4186bb:	inc    esp
  4186bc:	or     al,0xfe
  4186be:	sahf   
  4186bf:	clc    
  4186c0:	push   ds
  4186c1:	mov    bl,0xdb
  4186c3:	test   cl,al
  4186c5:	inc    edx
  4186c6:	shl    DWORD PTR [edx],1
  4186c8:	lds    edx,FWORD PTR [esi+0x1a9f015d]
  4186ce:	add    DWORD PTR [esi-0x65],esp
  4186d1:	dec    edx
  4186d2:	pop    ds
  4186d3:	lds    ecx,FWORD PTR [edi+0x3099c969]
  4186d9:	(bad)  
  4186da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186db:	lods   eax,DWORD PTR ds:[esi]
  4186dc:	jo     0x418733
  4186de:	push   0x45
  4186e0:	in     eax,dx
  4186e1:	and    al,0x5f
  4186e3:	and    bl,BYTE PTR [ecx+eax*4+0x26]
  4186e7:	mov    edi,0x1a619fd
  4186ec:	cmp    BYTE PTR ds:0xefa35aa9,ah
  4186f2:	add    ebx,eax
  4186f4:	ret    0xf843
  4186f7:	fdivp  st(6),st
  4186f9:	(bad)  [esi+esi*4]
  4186fc:	in     eax,dx
  4186fd:	lea    ebx,[esi-0x2724fd16]
  418703:	sub    edi,edx
  418705:	aas    
  418706:	icebp  
  418707:	dec    esi
  418708:	mov    dh,0x5f
  41870a:	fsubr  DWORD PTR [ebp+0x7f]
  41870d:	fnstsw WORD PTR [ebp+0x4c]
  418710:	aaa    
  418711:	dec    ecx
  418712:	pushf  
  418713:	cmp    edx,eax
  418715:	xchg   edx,eax
  418716:	mov    dh,0xf1
  418718:	jle    0x4186c4
  41871a:	xchg   BYTE PTR [ebx+0x7744380a],bh
  418720:	sar    bh,cl
  418722:	mov    ax,0x8c79
  418726:	sbb    al,0x18
  418728:	xor    ecx,edx
  41872a:	xchg   esi,eax
  41872b:	div    cl
  41872d:	mov    esp,DWORD PTR [ecx+edx*4]
  418730:	sub    eax,0xb7403a17
  418735:	mov    eax,ds:0x9813d4e7
  41873a:	push   edi
  41873b:	mov    BYTE PTR [eax+0x1b],al
  41873e:	popf   
  41873f:	nop
  418740:	or     al,0x3c
  418742:	pop    ebp
  418743:	xchg   ebp,eax
  418744:	push   eax
  418745:	xor    BYTE PTR [ebx],0x54
  418748:	jno    0x418726
  41874a:	mov    ecx,DWORD PTR [eax-0x579fa392]
  418750:	aaa    
  418751:	cwde   
  418752:	test   al,0x3a
  418754:	leave  
  418755:	aaa    
  418756:	mov    ch,0x47
  418758:	fcmovnu st,st(4)
  41875a:	sti    
  41875b:	fstp   DWORD PTR [eax+0x44]
  41875e:	es cli 
  418760:	sbb    bh,al
  418762:	test   eax,0x3a856670
  418767:	xor    BYTE PTR ds:0x8dfce423,0x74
  41876e:	lods   eax,DWORD PTR ds:[esi]
  41876f:	rcl    BYTE PTR [edi-0x7c],1
  418772:	jno    0x418777
  418774:	add    al,BYTE PTR [ebx]
  418776:	jmp    FWORD PTR fs:[ebp+0x8]
  41877a:	sar    bl,0x23
  41877d:	clc    
  41877e:	xchg   ebp,eax
  41877f:	mov    eax,0xc0d3e539
  418784:	mov    edi,0xeb2f99d7
  418789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41878a:	in     al,dx
  41878b:	imul   esp,DWORD PTR [ecx+0x15],0xdb83182f
  418792:	push   ss
  418793:	aad    0x4c
  418795:	lock mov bl,0x42
  418798:	addr16 aam 0x7f
  41879b:	daa    
  41879c:	adc    al,0xb7
  41879e:	jns    0x41874e
  4187a0:	fisubr WORD PTR [edi+eiz*2+0x10]
  4187a4:	test   eax,ebx
  4187a6:	lock inc esp
  4187a8:	outs   dx,DWORD PTR ds:[esi]
  4187a9:	(bad)  
  4187aa:	fdivp  st(5),st
  4187ac:	rol    BYTE PTR [ecx-0x53],1
  4187af:	xor    ebx,DWORD PTR [eax]
  4187b1:	dec    edx
  4187b2:	add    al,0x77
  4187b4:	imul   DWORD PTR [esi+edi*4]
  4187b7:	out    dx,eax
  4187b8:	adc    DWORD PTR [edx+0x7c],eax
  4187bb:	cwde   
  4187bc:	push   ecx
  4187bd:	in     al,0x75
  4187bf:	mov    WORD PTR [ebp+0x69a10804],fs
  4187c5:	inc    ebp
  4187c6:	mov    ds:0xae364571,eax
  4187cb:	(bad)  
  4187cc:	fs iret 
  4187ce:	test   DWORD PTR [ecx-0x7f],0xe3f09f09
  4187d5:	lds    ecx,FWORD PTR ds:0xc3392454
  4187db:	std    
  4187dc:	push   es
  4187dd:	test   DWORD PTR [edi-0x1551cf6a],ecx
  4187e3:	imul   ax,WORD PTR [edx-0x42],0x8c83
  4187e9:	add    eax,0x79de40c1
  4187ee:	rcr    BYTE PTR [ebx+0x56],0xc2
  4187f2:	adc    DWORD PTR [esi],esp
  4187f4:	cmpps  xmm3,XMMWORD PTR [edi],0x47
  4187f8:	fimul  WORD PTR [edx-0x4e]
  4187fb:	xchg   DWORD PTR [ebx+ebp*1+0x563dbac],ebx
  418802:	pop    edx
  418803:	xchg   ebx,eax
  418804:	dec    ebp
  418805:	xor    al,0x2d
  418807:	add    ch,BYTE PTR [edi]
  418809:	test   eax,0xeb3e8902
  41880e:	jle    0x41879b
  418810:	jne    0x4187bf
  418812:	call   0x6198:0xe65e2e09
  418819:	mov    esp,0x7b7d50e4
  41881e:	push   es
  41881f:	cmp    edx,DWORD PTR [edx+0x4e71fd10]
  418825:	(bad)  
  418826:	add    cl,bl
  418828:	jp     0x418834
  41882a:	xor    BYTE PTR [edi-0x3e],dl
  41882d:	sahf   
  41882e:	xor    DWORD PTR [eax+0x27],0x4304d9eb
  418835:	mov    dh,0xf0
  418837:	not    DWORD PTR [ebx-0x71f0c7a3]
  41883d:	pop    ebx
  41883e:	xor    eax,0xbc80a8f5
  418843:	(bad)  
  418845:	add    ah,BYTE PTR [ebx]
  418847:	push   eax
  418848:	xchg   edi,eax
  418849:	pop    edx
  41884a:	pop    ebx
  41884b:	adc    ebx,DWORD PTR [esi+0x5bbdf2c]
  418851:	push   0x9da39404
  418856:	dec    esi
  418857:	aas    
  418858:	xlat   BYTE PTR ds:[ebx]
  418859:	test   eax,0xd1d74708
  41885e:	fs mov ah,0x7
  418861:	pop    ebp
  418862:	popf   
  418863:	xor    ch,BYTE PTR ds:[ebx-0x62]
  418867:	ret    
  418868:	dec    esi
  418869:	pushf  
  41886a:	int    0x82
  41886c:	xor    DWORD PTR [ebx+0x231e926b],0xa0ecd296
  418876:	nop
  418877:	adc    DWORD PTR [edi],0xffffffd2
  41887a:	jg     0x4188bd
  41887c:	ds push esp
  41887e:	xchg   edx,eax
  41887f:	dec    ebx
  418880:	mov    esp,0xf52bd362
  418885:	dec    ecx
  418886:	shl    BYTE PTR [ebp-0x1d],1
  418889:	or     eax,DWORD PTR [edi+0x7d13d404]
  41888f:	push   cs
  418890:	dec    esp
  418891:	xchg   ecx,eax
  418892:	ins    DWORD PTR es:[edi],dx
  418893:	pop    esi
  418894:	add    DWORD PTR [ebx-0x3],0xa289b98b
  41889b:	into   
  41889c:	jne    0x418823
  41889e:	push   edi
  41889f:	adc    DWORD PTR [edx+eiz*2-0x157a48da],0x14cdaf92
  4188aa:	imul   ebp,DWORD PTR [ebx-0x6d331209],0xffffffd4
  4188b1:	mov    ch,0x51
  4188b3:	inc    ecx
  4188b4:	jne    0x418928
  4188b6:	cmp    dh,0x78
  4188b9:	repnz sub eax,0xf84cfa0c
  4188bf:	mov    ebp,DWORD PTR [ebx-0x490f12f6]
  4188c5:	xchg   edi,eax
  4188c6:	int    0xe5
  4188c8:	xchg   DWORD PTR [ebx+0x1f40cca5],ebx
  4188ce:	fisub  WORD PTR [eax+eiz*1]
  4188d1:	cdq    
  4188d2:	in     eax,0x62
  4188d4:	cwde   
  4188d5:	xchg   ebx,eax
  4188d6:	or     ecx,ecx
  4188d8:	daa    
  4188d9:	or     DWORD PTR [esi+edx*2+0x4219f987],edi
  4188e0:	jmp    0xa7d57916
  4188e5:	retf   0xb8c5
  4188e8:	in     al,dx
  4188e9:	pushf  
  4188ea:	push   ecx
  4188eb:	in     al,0x81
  4188ed:	sub    eax,0x7dd40650
  4188f2:	inc    esi
  4188f3:	sbb    al,0xc0
  4188f5:	add    BYTE PTR [edx-0x6b],bl
  4188f8:	xor    BYTE PTR [edi],cl
  4188fa:	jbe    0x41892c
  4188fc:	adc    dh,dl
  4188fe:	(bad)  [edx]
  418900:	retf   0xcc57
  418903:	add    eax,0xa7a3f927
  418908:	daa    
  418909:	int    0xe
  41890b:	ds (bad) 
  41890d:	and    ch,al
  41890f:	mov    esi,0xbce5e90e
  418914:	pop    esp
  418915:	push   ebp
  418916:	xchg   esi,eax
  418917:	or     BYTE PTR [ebx-0x1e0d594e],0xae
  41891e:	jecxz  0x418996
  418920:	sbb    al,0x81
  418922:	(bad)  
  418923:	retf   0x5098
  418926:	pop    edi
  418927:	xchg   ecx,eax
  418928:	test   cl,al
  41892a:	jle    0x418980
  41892c:	jmp    0x41892b
  41892e:	arpl   si,dx
  418930:	mov    ah,0x93
  418932:	sbb    eax,ebx
  418934:	sub    esi,0xffffffac
  418937:	pop    ss
  418938:	push   eax
  418939:	push   0x970da53f
  41893e:	popa   
  41893f:	nop
  418940:	hlt    
  418941:	mov    BYTE PTR [ebp+0x4e],dl
  418944:	int3   
  418945:	test   eax,0xa396b604
  41894a:	retf   0x9e56
  41894d:	inc    ebp
  41894e:	inc    ebx
  41894f:	hlt    
  418950:	adc    ebx,ebx
  418952:	cmp    BYTE PTR [eax],bh
  418954:	mov    esi,0xb8867233
  418959:	sbb    ah,BYTE PTR [edi-0x53]
  41895c:	call   0xe12d1fad
  418961:	inc    eax
  418962:	pmaddwd mm0,QWORD PTR [edx-0x6ec43acb]
  418969:	repnz adc BYTE PTR [edx],dl
  41896c:	jnp    0x418946
  41896e:	cld    
  41896f:	push   cs
  418970:	jp     0x418917
  418972:	cdq    
  418973:	pop    ebp
  418974:	std    
  418975:	dec    ebx
  418976:	shl    DWORD PTR [edx-0x3d],1
  418979:	imul   ebx,ebx,0x2ac0f6bb
  41897f:	xlat   BYTE PTR ds:[ebx]
  418980:	(bad)  
  418981:	idiv   DWORD PTR [edi]
  418983:	pop    ebp
  418984:	dec    ecx
  418985:	hlt    
  418986:	xchg   ecx,eax
  418987:	and    dh,al
  418989:	mov    esp,0xc303a9e3
  41898e:	stos   DWORD PTR es:[edi],eax
  41898f:	sub    esp,edi
  418991:	xchg   edx,eax
  418992:	(bad)  
  418993:	sar    BYTE PTR [edx+0x19],1
  418996:	shr    DWORD PTR [edx],0x27
  418999:	inc    ebx
  41899a:	mov    ch,0xc6
  41899c:	or     DWORD PTR [esi],esp
  41899e:	add    al,0x1e
  4189a0:	ror    DWORD PTR [ecx],cl
  4189a2:	xchg   BYTE PTR [eax],ch
  4189a4:	outs   dx,DWORD PTR ds:[esi]
  4189a5:	les    eax,FWORD PTR [esp-0x49]
  4189a9:	xor    al,BYTE PTR [edi*8+0x6bb58197]
  4189b0:	daa    
  4189b1:	mov    ebx,?
  4189b3:	jmp    0x418965
  4189b5:	inc    ebx
  4189b6:	in     al,0x0
  4189b8:	or     BYTE PTR [edi+0x34],cl
  4189bb:	jns    0x4189d0
  4189bd:	xor    DWORD PTR [esi+0x33],0x38
  4189c1:	jmp    0xc673:0x3c84a798
  4189c8:	sub    eax,0xbe37d478
  4189cd:	lods   al,BYTE PTR ds:[esi]
  4189ce:	mov    ds:0x14cf0d25,eax
  4189d3:	mov    ah,0x89
  4189d5:	and    eax,0x55eed012
  4189da:	push   cs
  4189db:	mov    eax,0x11635dfa
  4189e0:	ret    0x994
  4189e3:	int    0xe4
  4189e5:	lahf   
  4189e6:	test   al,0xdc
  4189e8:	leave  
  4189e9:	rcr    edx,0xdb
  4189ec:	lods   eax,DWORD PTR ds:[esi]
  4189ed:	out    dx,al
  4189ee:	xchg   DWORD PTR [ecx+0x1c],eax
  4189f1:	lock add ebx,DWORD PTR [esp+esi*2]
  4189f5:	push   esp
  4189f6:	pop    edx
  4189f7:	aaa    
  4189f8:	dec    esi
  4189f9:	push   cs
  4189fa:	xlat   BYTE PTR ds:[ebx]
  4189fb:	mov    dh,0x94
  4189fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189fe:	jns    0x418a6a
  418a00:	aas    
  418a01:	jne    0x4189b0
  418a03:	stos   DWORD PTR es:[edi],eax
  418a04:	jp     0x4189d6
  418a06:	jmp    0xb85388da
  418a0b:	cwde   
  418a0c:	dec    esp
  418a0d:	stos   BYTE PTR es:[edi],al
  418a0e:	xchg   ebx,eax
  418a0f:	dec    edx
  418a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a11:	mov    eax,ds:0x27516f12
  418a16:	adc    al,0xac
  418a18:	xor    BYTE PTR [esi+ebx*2-0x6300619d],bh
  418a1f:	add    dh,BYTE PTR [ecx-0x2c]
  418a22:	mov    al,0xc7
  418a24:	mov    esp,0x45228b36
  418a29:	rol    BYTE PTR [eax-0x48],1
  418a2c:	sbb    BYTE PTR [edx+0x4e],bl
  418a2f:	inc    ecx
  418a30:	and    eax,0x1c2d83bc
  418a35:	or     eax,0x8bd4b78c
  418a3a:	arpl   WORD PTR [esp+esi*4+0x4d1fbbbe],di
  418a41:	mov    DWORD PTR [ebx-0x17],edx
  418a44:	lods   eax,DWORD PTR ds:[esi]
  418a45:	ret    0xd9a3
  418a48:	enter  0x318d,0x51
  418a4c:	mov    ah,0x48
  418a4e:	(bad)  
  418a4f:	ret    
  418a50:	lea    esp,[eax+0x2a]
  418a53:	dec    ecx
  418a54:	inc    ebx
  418a55:	fxch   st(7)
  418a57:	sub    DWORD PTR fs:[esi-0x7acb196c],edi
  418a5e:	ret    0xcec7
  418a61:	inc    edx
  418a62:	push   DWORD PTR [ebp-0x58175b6c]
  418a68:	mov    eax,0x9e14da74
  418a6d:	sbb    al,bh
  418a6f:	jg     0x4189f5
  418a71:	push   es
  418a72:	cmp    eax,0xbc4b33a8
  418a77:	hlt    
  418a78:	xchg   esp,eax
  418a79:	jecxz  0x418a38
  418a7b:	cwde   
  418a7c:	pop    esi
  418a7d:	push   edx
  418a7e:	mov    ds:0x910340dc,eax
  418a83:	es (bad) 
  418a85:	jl     0x418a45
  418a87:	mov    esp,0xa240a87b
  418a8c:	fcomp  QWORD PTR [esi-0x64]
  418a8f:	xor    eax,esp
  418a91:	rol    dl,cl
  418a93:	sub    al,0x28
  418a95:	leave  
  418a96:	and    BYTE PTR [ebx-0x34f1d464],bh
  418a9c:	adc    BYTE PTR [edx-0x77],cl
  418a9f:	scas   al,BYTE PTR es:[edi]
  418aa0:	stc    
  418aa1:	inc    ebx
  418aa2:	fs ds aas 
  418aa5:	fld    TBYTE PTR [eax+0x17]
  418aa8:	xchg   ebp,eax
  418aa9:	push   cs
  418aaa:	mul    DWORD PTR [ebp-0x4e]
  418aad:	push   edx
  418aae:	adc    ecx,DWORD PTR [edi]
  418ab0:	sbb    eax,ebp
  418ab2:	mov    ch,0x4d
  418ab4:	adc    edx,edx
  418ab6:	mov    ah,0x66
  418ab8:	xor    eax,0x7cb04412
  418abd:	pushf  
  418abe:	mov    ?,WORD PTR [ebp-0x47]
  418ac1:	xchg   edi,eax
  418ac2:	pusha  
  418ac3:	test   al,0x50
  418ac5:	cwde   
  418ac6:	cmp    eax,DWORD PTR [eax+0x26]
  418ac9:	push   ds
  418aca:	cmp    DWORD PTR [ecx-0x4c],edx
  418acd:	mov    dh,0x1c
  418acf:	rcl    bl,1
  418ad1:	mov    edx,0x158d534
  418ad6:	rcr    DWORD PTR [ebp+ebx*4+0x4757237f],cl
  418add:	daa    
  418ade:	cmp    ebp,ebp
  418ae0:	into   
  418ae1:	rcr    BYTE PTR [edi+eax*8-0x9],1
  418ae5:	xchg   ecx,edx
  418ae7:	sbb    BYTE PTR [ecx+ecx*4-0x2a],dh
  418aeb:	adc    DWORD PTR [edi+0x31],edi
  418aee:	cmc    
  418aef:	repz pop ecx
  418af1:	enter  0x5927,0x6b
  418af5:	mov    dl,0x6
  418af7:	outs   dx,DWORD PTR ds:[esi]
  418af8:	(bad)  
  418af9:	ds pop ss
  418afb:	fild   DWORD PTR [edx]
  418afd:	ja     0x418a91
  418aff:	scas   al,BYTE PTR es:[edi]
  418b00:	add    ecx,DWORD PTR [edx]
  418b02:	test   BYTE PTR [edx-0xc],bh
  418b05:	pop    esi
  418b06:	cmp    esi,eax
  418b08:	cmp    eax,0x3aa288cd
  418b0d:	push   cs
  418b0e:	dec    eax
  418b0f:	push   esp
  418b10:	and    DWORD PTR [ebx-0xd5e355b],esi
  418b16:	pop    ds
  418b17:	lea    edx,[eax-0x6a]
  418b1a:	lods   al,BYTE PTR ds:[esi]
  418b1b:	out    dx,al
  418b1c:	sub    BYTE PTR [esi-0x5f05c325],cl
  418b22:	xchg   esp,eax
  418b23:	jl     0x418aad
  418b25:	pop    ebp
  418b26:	pop    ebp
  418b27:	dec    edi
  418b28:	cwde   
  418b29:	pusha  
  418b2a:	ins    BYTE PTR es:[edi],dx
  418b2b:	push   ebp
  418b2c:	jmp    0x482f:0x49d9ebc0
  418b33:	call   FWORD PTR [eax+0x79]
  418b36:	inc    ebx
  418b37:	sub    DWORD PTR [eax+ebx*2-0x764c0d23],ecx
  418b3e:	mov    DWORD PTR [edi],ecx
  418b40:	pop    DWORD PTR fs:[ebx+eiz*1-0x6ea20292]
  418b48:	aad    0x3c
  418b4a:	jb     0x418bc5
  418b4c:	xor    eax,ebx
  418b4e:	mov    BYTE PTR [edx+0x66],bh
  418b51:	mov    esp,0xebe9fea7
  418b56:	enter  0x5a72,0x91
  418b5a:	leave  
  418b5b:	pop    ebp
  418b5c:	in     eax,0x99
  418b5e:	jl     0x418bac
  418b60:	and    ch,BYTE PTR [edi+0x33ea1f1b]
  418b66:	inc    DWORD PTR [esp+esi*1+0x70e22ba0]
  418b6d:	adc    cl,ch
  418b6f:	retf   0x35d3
  418b72:	pop    esp
  418b73:	xchg   esi,eax
  418b74:	int    0xc1
  418b76:	push   0xeef1e2ed
  418b7b:	(bad)  
  418b7d:	sub    al,0xb4
  418b7f:	pop    ebx
  418b80:	in     eax,0xdf
  418b82:	inc    ecx
  418b83:	cld    
  418b84:	nop
  418b85:	jecxz  0x418b09
  418b87:	jns    0x418b16
  418b89:	jecxz  0x418ba6
  418b8b:	clc    
  418b8c:	sub    cl,BYTE PTR [eax+0x132a6c39]
  418b92:	std    
  418b93:	dec    ebx
  418b94:	pop    ss
  418b95:	add    BYTE PTR [ecx-0x1bf3a505],ah
  418b9b:	addr16 push ds
  418b9d:	jmp    0xff93:0xe8e92445
  418ba4:	dec    ebx
  418ba5:	or     bl,bl
  418ba7:	mov    ebp,0xae7656c2
  418bac:	aam    0x76
  418bae:	icebp  
  418baf:	jl     0x418c21
  418bb1:	clc    
  418bb2:	mov    bh,0x5e
  418bb4:	cwde   
  418bb5:	call   0xd58a8be4
  418bba:	lods   al,BYTE PTR ds:[esi]
  418bbb:	add    DWORD PTR [edi+0x6b4687e3],ecx
  418bc1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418bc3:	ffree  st(7)
  418bc5:	add    eax,0x2347aa35
  418bca:	pop    ss
  418bcb:	test   eax,0x7f68b02b
  418bd0:	jp     0x418bc7
  418bd2:	dec    ebp
  418bd3:	mov    ah,0x43
  418bd5:	jbe    0x418b93
  418bd7:	test   al,0x95
  418bd9:	popf   
  418bda:	jge    0x418bcd
  418bdc:	push   edx
  418bdd:	dec    ecx
  418bde:	repnz lea edi,[edi+0x74212638]
  418be5:	dec    edx
  418be6:	stc    
  418be7:	call   0x1f30:0xa0d37194
  418bee:	fisttp DWORD PTR [ecx+ecx*8-0x63fc8c16]
  418bf5:	mov    esp,gs
  418bf7:	lods   al,BYTE PTR ds:[esi]
  418bf8:	sbb    al,0xe6
  418bfa:	pop    esp
  418bfb:	ror    BYTE PTR [esp+edi*1-0x16],0x9b
  418c00:	out    0xad,eax
  418c02:	mov    ch,0x34
  418c04:	dec    esi
  418c05:	cwde   
  418c06:	push   eax
  418c07:	cmp    DWORD PTR [ecx],edi
  418c09:	sti    
  418c0a:	repnz mov cl,0xf9
  418c0d:	and    ch,bl
  418c0f:	fbstp  TBYTE PTR [esi-0x5a60b65c]
  418c15:	pop    eax
  418c16:	retf   
  418c17:	xchg   edx,eax
  418c18:	sbb    edi,DWORD PTR ds:0x124e3d3d
  418c1e:	push   cs
  418c1f:	adc    BYTE PTR [eax],0xa6
  418c22:	test   BYTE PTR [ebp+ebx*8+0x5e],0x8c
  418c27:	(bad)  
  418c28:	pushf  
  418c29:	jle    0x418c98
  418c2b:	(bad)  
  418c2c:	std    
  418c2d:	mov    al,ds:0x9f2b765f
  418c32:	jb     0x418c83
  418c34:	(bad)  
  418c35:	jecxz  0x418c1f
  418c37:	aaa    
  418c38:	or     eax,0xe257dbdc
  418c3d:	or     DWORD PTR [edx-0x28e05088],edi
  418c43:	pop    ecx
  418c44:	repnz dec edx
  418c46:	test   BYTE PTR [edi],bl
  418c48:	xchg   edi,eax
  418c49:	bound  eax,QWORD PTR [edi-0x2450033a]
  418c4f:	mov    ds:0x6fc61cf1,al
  418c54:	ja     0x418cae
  418c56:	pop    ss
  418c57:	loop   0x418c48
  418c59:	shr    BYTE PTR [eax],cl
  418c5b:	out    0xa2,eax
  418c5d:	daa    
  418c5e:	retf   
  418c5f:	hlt    
  418c60:	ins    DWORD PTR es:[edi],dx
  418c61:	stc    
  418c62:	jle    0x418c12
  418c64:	data16 jge 0x418c63
  418c67:	sub    esp,ebp
  418c69:	inc    edx
  418c6a:	out    0xf9,al
  418c6c:	add    BYTE PTR [edi],ah
  418c6e:	or     BYTE PTR [eax-0x5c31e843],cl
  418c74:	repnz frstor [edi-0x51]
  418c78:	and    eax,0x8ff6341f
  418c7d:	leave  
  418c7e:	ja     0x418c78
  418c80:	or     eax,0xbf8d3ece
  418c85:	jecxz  0x418c9b
  418c87:	clc    
  418c88:	test   al,0x1
  418c8a:	mov    al,0x8
  418c8c:	or     eax,0x4575f21b
  418c91:	std    
  418c92:	cmc    
  418c93:	push   DWORD PTR [edi]
  418c95:	jne    0x418c77
  418c97:	ret    
  418c98:	mov    esi,0x4fe4421
  418c9d:	sub    BYTE PTR [eax],ch
  418c9f:	(bad)  
  418ca0:	rcl    bh,cl
  418ca2:	xor    DWORD PTR [ecx+0x1ac21321],0xbb084188
  418cac:	retf   0xd072
  418caf:	xor    ebx,DWORD PTR ds:0x2b3ffad2
  418cb5:	mov    edi,0xa3b8ae8a
  418cba:	stc    
  418cbb:	(bad)  
  418cbc:	xor    eax,0x8bcb9cce
  418cc1:	xchg   sp,ax
  418cc3:	fisttp WORD PTR [ecx-0x40e97155]
  418cc9:	fwait
  418cca:	sar    DWORD PTR [edx],cl
  418ccc:	push   ds
  418ccd:	out    0x86,eax
  418ccf:	sub    eax,0x751be41a
  418cd4:	and    bh,BYTE PTR [edx]
  418cd6:	xchg   edx,eax
  418cd7:	cwde   
  418cd8:	punpckhwd mm0,QWORD PTR [edi+0x184e4849]
  418cdf:	call   0x22c7:0x98050ab8
  418ce6:	fsubr  st(6),st
  418ce8:	mov    dh,0x75
  418cea:	jge    0x418d2c
  418cec:	jb     0x418ca3
  418cee:	mov    ds:0xe0ef5735,al
  418cf3:	pop    edx
  418cf4:	xchg   edi,eax
  418cf5:	xor    esp,DWORD PTR [eax+0x6fc71deb]
  418cfb:	dec    ebx
  418cfc:	vpcmpgtd xmm6,xmm1,XMMWORD PTR [ebp-0xcdc9eac]
  418d04:	adc    DWORD PTR [eax-0x18ce5280],esp
  418d0a:	push   es
  418d0b:	mov    ecx,?
  418d0d:	into   
  418d0e:	push   edx
  418d0f:	ins    DWORD PTR es:[edi],dx
  418d10:	bound  esp,QWORD PTR [esi+ebp*1-0x28]
  418d14:	cld    
  418d15:	cmp    dh,BYTE PTR [ecx+0x7c]
  418d18:	jl     0x418ca2
  418d1a:	out    dx,eax
  418d1b:	(bad)  
  418d1c:	jecxz  0x418d77
  418d1e:	dec    ebp
  418d1f:	mov    edi,DWORD PTR [ebx]
  418d21:	inc    edx
  418d22:	xor    al,0x73
  418d24:	mov    al,ds:0xcc67210f
  418d29:	xchg   ebx,eax
  418d2a:	push   edi
  418d2b:	fnstenv [esi+0x41]
  418d2e:	fadd   DWORD PTR [eax-0x4c1e1d60]
  418d34:	fwait
  418d35:	sbb    BYTE PTR [ebx],dl
  418d37:	das    
  418d38:	push   ebx
  418d39:	dec    edx
  418d3a:	or     al,0xaf
  418d3c:	out    dx,eax
  418d3d:	xor    al,0x82
  418d3f:	sbb    al,0xf
  418d41:	int    0x18
  418d43:	add    ebx,esp
  418d45:	jmp    0x418d7b
  418d47:	pop    eax
  418d48:	popa   
  418d49:	dec    eax
  418d4a:	in     al,dx
  418d4b:	jo     0x418d95
  418d4d:	sbb    eax,0x59e6548d
  418d52:	push   esp
  418d53:	(bad)  
  418d55:	push   ss
  418d56:	and    al,0xb
  418d58:	pop    ebx
  418d59:	jecxz  0x418d48
  418d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d5c:	ins    DWORD PTR es:[edi],dx
  418d5d:	in     eax,0x8c
  418d5f:	mov    ch,0x78
  418d61:	pop    ebx
  418d62:	fcmovnu st,st(2)
  418d64:	mov    esp,0xabf702a0
  418d69:	push   ecx
  418d6a:	into   
  418d6b:	cmc    
  418d6c:	loop   0x418d57
  418d6e:	ror    DWORD PTR [esi],0xe8
  418d71:	(bad)  
  418d72:	mov    al,0x6a
  418d74:	add    al,0xf2
  418d76:	inc    edi
  418d77:	sub    DWORD PTR [eax+0x33],0x2ed00ba6
  418d7e:	arpl   WORD PTR [edi-0x722dea8],ax
  418d84:	popf   
  418d85:	sbb    BYTE PTR [ebp+edi*8+0x7c05cfe3],bl
  418d8c:	xchg   bh,al
  418d8e:	cmp    eax,0x48a8bcc1
  418d93:	ret    
  418d94:	jp     0x418d61
  418d96:	adc    eax,0x84aedf1
  418d9b:	or     eax,0x6d72e23b
  418da0:	or     bh,BYTE PTR [ebx+edi*8+0x4070a70f]
  418da7:	or     DWORD PTR [eax+0x266cbcd5],ebp
  418dad:	cmp    DWORD PTR [edi+0x1461078c],eax
  418db3:	outs   dx,BYTE PTR ds:[esi]
  418db4:	out    dx,eax
  418db5:	out    0x7,al
  418db7:	mov    cs,WORD PTR [eax]
  418db9:	jg     0x418e37
  418dbb:	test   BYTE PTR [ebx-0x72],cl
  418dbe:	adc    bh,BYTE PTR [esi]
  418dc0:	cdq    
  418dc1:	mov    edx,0xada21983
  418dc6:	add    al,0xc4
  418dc8:	mov    al,0x86
  418dca:	aaa    
  418dcb:	jmp    0x418e05
  418dcd:	pop    esp
  418dce:	int    0x45
  418dd0:	bound  edi,QWORD PTR [ecx+0x2a]
  418dd3:	mov    bh,0xfa
  418dd5:	and    DWORD PTR [eax-0x62],eax
  418dd8:	lea    eax,[edi-0x2168d053]
  418dde:	mov    ebx,0xfce17e65
  418de3:	ds ud1 edi,eax
  418de7:	popf   
  418de8:	sbb    esi,0x12c94f45
  418dee:	imul   si,si,0xac6f
  418df3:	cdq    
  418df4:	sti    
  418df5:	mov    bl,BYTE PTR [eax]
  418df7:	bound  esp,QWORD PTR [edx]
  418df9:	push   edi
  418dfa:	xchg   esp,eax
  418dfb:	dec    esi
  418dfc:	out    0x51,al
  418dfe:	retf   0x104a
  418e01:	mov    eax,0x1a8e94cf
  418e06:	fstp   DWORD PTR [edi+eiz*1-0x2b]
  418e0a:	xchg   ecx,eax
  418e0b:	xchg   edx,eax
  418e0c:	mov    DWORD PTR [eax+0x37e96ae9],esi
  418e12:	cwde   
  418e13:	jne    0x418e6c
  418e15:	std    
  418e16:	int    0x5e
  418e18:	mov    ch,0xb0
  418e1a:	xlat   BYTE PTR ds:[ebx]
  418e1b:	mov    ch,0x49
  418e1d:	popa   
  418e1e:	sub    bl,BYTE PTR [di]
  418e21:	fld    TBYTE PTR [edi-0x256e6208]
  418e27:	adc    eax,0x5f8efee2
  418e2c:	jnp    0x418e68
  418e2e:	lahf   
  418e2f:	(bad)  
  418e30:	mov    edx,0x9377f51b
  418e35:	xchg   DWORD PTR gs:[ecx-0xb],eax
  418e39:	mov    ds:0x50c43f1a,eax
  418e3e:	scas   al,BYTE PTR es:[edi]
  418e3f:	stc    
  418e40:	out    dx,al
  418e41:	jecxz  0x418e1b
  418e43:	sbb    eax,0xa2d55e16
  418e48:	xchg   esp,eax
  418e49:	mov    cs,WORD PTR [edi]
  418e4b:	test   DWORD PTR [ecx],eax
  418e4d:	mov    eax,0x4d8bffff
  418e52:	clc    
  418e53:	xor    ecx,eax
  418e55:	mov    eax,DWORD PTR [ebp+0x10]
  418e58:	add    ecx,esi
  418e5a:	mov    DWORD PTR [eax],ecx
  418e5c:	pop    edi
  418e5d:	pop    esi
  418e5e:	pop    ebx
  418e5f:	leave  
  418e60:	ret    0xc
  418e63:	add    BYTE PTR [eax-0x6ffbffbe],dl
  418e69:	inc    edx
  418e6a:	add    BYTE PTR [eax],cl
  418e6c:	nop
  418e6d:	inc    edx
  418e6e:	add    BYTE PTR [eax+edx*4],cl
  418e71:	inc    edx
  418e72:	add    BYTE PTR [eax],dl
  418e74:	nop
  418e75:	inc    edx
  418e76:	add    BYTE PTR [eax+edx*4],dl
  418e79:	inc    edx
  418e7a:	add    BYTE PTR [eax],bl
  418e7c:	nop
  418e7d:	inc    edx
  418e7e:	add    BYTE PTR [eax+edx*4],bl
  418e81:	inc    edx
  418e82:	add    BYTE PTR [eax],al
  418e84:	rol    BYTE PTR [edx+0x0],0x4
  418e88:	rol    BYTE PTR [edx+0x0],0x8
  418e8c:	rol    BYTE PTR [edx+0x0],0xc
  418e90:	rol    BYTE PTR [edx+0x0],0x10
  418e94:	rol    BYTE PTR [edx+0x0],0x14
  418e98:	rol    BYTE PTR [edx+0x0],0x18
  418e9c:	rol    BYTE PTR [edx+0x0],0x1c
  418ea0:	rol    BYTE PTR [edx+0x0],0x0
	...
  418eb4:	sub    al,0x84
  418eb6:	pop    esi
  418eb7:	dec    ebp
  418eb8:	add    BYTE PTR [eax],al
  418eba:	add    BYTE PTR [eax],al
  418ebc:	add    al,BYTE PTR [eax]
  418ebe:	add    BYTE PTR [eax],al
  418ec0:	cmp    eax,0xb0000000
  418ec5:	pop    DWORD PTR [ecx]
  418ec7:	add    BYTE PTR [eax+0x183],dh
  418ecd:	add    BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [eax],al
  418ed1:	add    BYTE PTR [eax],al
  418ed3:	add    BYTE PTR [esp+eax*4],ch
  418ed6:	pop    esi
  418ed7:	dec    ebp
  418ed8:	add    BYTE PTR [eax],al
  418eda:	add    BYTE PTR [eax],al
  418edc:	add    cl,BYTE PTR [edi+0x10001]
  418ee2:	add    BYTE PTR [eax],al
  418ee4:	add    DWORD PTR [eax],eax
  418ee6:	add    BYTE PTR [eax],al
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [eax],al
  418eec:	clc    
  418eed:	mov    es,WORD PTR [ecx]
  418eef:	add    ah,bh
  418ef1:	mov    es,WORD PTR [ecx]
  418ef3:	add    BYTE PTR [eax],al
  418ef5:	pop    DWORD PTR [ecx]
  418ef7:	add    bl,al
  418ef9:	sub    eax,DWORD PTR [eax]
  418efb:	add    BYTE PTR [esi],cl
  418efd:	pop    DWORD PTR [ecx]
  418eff:	add    BYTE PTR [eax],al
  418f01:	add    BYTE PTR [ecx+edi*2+0x6e],al
  418f05:	popa   
  418f06:	ins    DWORD PTR es:[edi],dx
  418f07:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  418f0e:	aas    
  418f0f:	inc    edi
  418f10:	gs je  0x418f68
  418f13:	jae    0x418f7a
  418f15:	jb     0x418f66
  418f17:	bound  ebp,QWORD PTR [edx+0x65]
  418f1a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f1e:	arpl   WORD PTR [ebp+0x72],si
  418f21:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  418f29:	gs jb  0x418f7b
  418f2c:	bound  ebp,QWORD PTR [edx+0x65]
  418f2f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f33:	arpl   WORD PTR [ebp+0x0],si
  418f36:	add    BYTE PTR [edx+0x0],0x4
  418f3a:	add    BYTE PTR [edx+0x0],0x8
  418f3e:	add    BYTE PTR [edx+0x0],0xc
  418f42:	add    BYTE PTR [edx+0x0],0x10
  418f46:	add    BYTE PTR [edx+0x0],0x14
  418f4a:	add    BYTE PTR [edx+0x0],0x18
  418f4e:	add    BYTE PTR [edx+0x0],0x1c
  418f52:	add    BYTE PTR [edx+0x0],0x20
  418f56:	add    BYTE PTR [edx+0x0],0x24
  418f5a:	add    BYTE PTR [edx+0x0],0x28
  418f5e:	add    BYTE PTR [edx+0x0],0x0
  418f62:	mov    al,ds:0xa0040042
  418f67:	inc    edx
  418f68:	add    BYTE PTR [eax],cl
  418f6a:	mov    al,ds:0xa00c0042
  418f6f:	inc    edx
  418f70:	add    BYTE PTR [eax],dl
  418f72:	mov    al,ds:0xa0140042
  418f77:	inc    edx
  418f78:	add    BYTE PTR [eax],bl
  418f7a:	mov    al,ds:0xa01c0042
  418f7f:	inc    edx
  418f80:	add    BYTE PTR [eax],al
  418f82:	mov    al,0x42
  418f84:	add    BYTE PTR [eax+esi*4],al
  418f87:	inc    edx
  418f88:	add    BYTE PTR [eax],cl
  418f8a:	mov    al,0x42
  418f8c:	add    BYTE PTR [eax+esi*4],cl
  418f8f:	inc    edx
  418f90:	add    BYTE PTR [eax],dl
  418f92:	mov    al,0x42
  418f94:	add    BYTE PTR [eax+esi*4],dl
  418f97:	inc    edx
  418f98:	add    BYTE PTR [eax],bl
  418f9a:	mov    al,0x42
  418f9c:	add    BYTE PTR [eax+esi*4],bl
  418f9f:	inc    edx
	...
  418fb0:	push   edx
  418fb1:	push   ebx
  418fb2:	inc    esp
  418fb3:	push   ebx
  418fb4:	clc    
  418fb5:	inc    ecx
  418fb6:	(bad)  
  418fb7:	inc    BYTE PTR [ebx]
  418fb9:	push   0x55904cca
  418fbe:	push   esp
  418fbf:	scas   eax,DWORD PTR es:[edi]
  418fc0:	pop    esp
  418fc1:	retf   0x8afa
  418fc4:	add    DWORD PTR [eax],eax
  418fc6:	add    BYTE PTR [eax],al
  418fc8:	inc    ebx
  418fc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  418fcd:	jb     0x419041
  418fcf:	outs   dx,BYTE PTR gs:[esi]
  418fd1:	je     0x419017
  418fd3:	popa   
  418fd4:	je     0x419037
  418fd6:	pop    esp
  418fd7:	dec    ebp
  418fd8:	outs   dx,DWORD PTR ds:[esi]
  418fd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  418fe1:	ins    BYTE PTR es:[edi],dx
  418fe2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  418fe9:	dec    esi
  418fea:	gs ja  0x418fed
  418fed:	mov    edx,DWORD PTR [ebp-0x14]
  418ff0:	sub    esp,0xe4
  418ff6:	push   ebx
  418ff7:	mov    eax,ebx
  418ff9:	xchg   ecx,eax
  418ffa:	mov    eax,DWORD PTR [ebp+0x8]
  418ffd:	cmp    eax,0xf89c85b9
  419002:	jne    0x419394
  419008:	mov    eax,DWORD PTR [ebp+0xc]
  41900b:	cmp    eax,0xf89c85b8
  419010:	jne    0x419394
  419016:	mov    eax,DWORD PTR [ebp+0x24]
  419019:	mov    DWORD PTR [ebp-0x4],eax
  41901c:	mov    BYTE PTR [ebp-0x18],0x3
  419020:	mov    BYTE PTR [ebp-0x17],0x1e
  419024:	mov    BYTE PTR [ebp-0x16],0x1
  419028:	mov    BYTE PTR [ebp-0x15],0x4f
  41902c:	mov    BYTE PTR [ebp-0x14],0x48
  419030:	mov    BYTE PTR [ebp-0x13],0x7a
  419034:	mov    BYTE PTR [ebp-0x20],0xd
  419038:	mov    BYTE PTR [ebp-0x1f],0xf
  41903c:	mov    BYTE PTR [ebp-0x1e],0x1d
  419040:	mov    BYTE PTR [ebp-0x1d],0x8
  419044:	mov    BYTE PTR [ebp-0x1c],0x4f
  419048:	mov    BYTE PTR [ebp-0x1b],0x48
  41904c:	mov    BYTE PTR [ebp-0x1a],0x7a
  419050:	mov    BYTE PTR [ebp-0x28],0xf
  419054:	mov    BYTE PTR [ebp-0x27],0x2
  419058:	push   esi
  419059:	mov    BYTE PTR [ebp-0x26],0x6
  41905d:	mov    BYTE PTR [ebp-0x25],0xf3
  419061:	push   edi
  419062:	mov    BYTE PTR [ebp-0x24],0x19
  419066:	mov    BYTE PTR [ebp-0x23],0xa
  41906a:	push   0x73
  41906c:	mov    BYTE PTR [ebp-0x22],0x1
  419070:	xor    edi,edi
  419072:	mov    BYTE PTR [ebp-0x21],0x7a
  419076:	xor    esi,esi
  419078:	pop    edx
  419079:	mov    eax,0xf7
  41907e:	lea    ecx,[ebp+esi*1-0x18]
  419082:	movzx  ebx,BYTE PTR [ecx]
  419085:	xor    ebx,edx
  419087:	add    ebx,eax
  419089:	inc    esi
  41908a:	mov    BYTE PTR [ecx],bl
  41908c:	cmp    esi,0x6
  41908f:	jb     0x41907e
  419091:	xor    esi,esi
  419093:	lea    ecx,[ebp+esi*1-0x20]
  419097:	movzx  ebx,BYTE PTR [ecx]
  41909a:	xor    ebx,edx
  41909c:	add    ebx,eax
  41909e:	inc    esi
  41909f:	mov    BYTE PTR [ecx],bl
  4190a1:	cmp    esi,0x7
  4190a4:	jb     0x419093
  4190a6:	xor    esi,esi
  4190a8:	lea    ecx,[ebp+esi*1-0x28]
  4190ac:	movzx  ebx,BYTE PTR [ecx]
  4190af:	xor    ebx,edx
  4190b1:	add    ebx,eax
  4190b3:	push   0x8
  4190b5:	mov    BYTE PTR [ecx],bl
  4190b7:	inc    esi
  4190b8:	pop    ecx
  4190b9:	cmp    esi,ecx
  4190bb:	jb     0x4190a8
  4190bd:	lea    eax,[ebp-0x2c]
  4190c0:	mov    DWORD PTR [ebp-0x8],eax
  4190c3:	mov    esi,DWORD PTR [ebp-0x8]
  4190c6:	mov    eax,0x7113fcef
  4190cb:	mov    DWORD PTR [esi],eax
  4190cd:	mov    esi,DWORD PTR [ebp-0x2c]
  4190d0:	cmp    esi,eax
  4190d2:	jne    0x4190e2
  4190d4:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4190db:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  4190e2:	mov    eax,DWORD PTR [ebp-0x4]
  4190e5:	mov    eax,DWORD PTR [eax+0x18c]
  4190eb:	cmp    DWORD PTR [eax],edi
  4190ed:	jne    0x41933d
  4190f3:	mov    eax,DWORD PTR [ebp-0x4]
  4190f6:	mov    eax,DWORD PTR [eax+0x17c]
  4190fc:	mov    DWORD PTR [eax],edi
  4190fe:	mov    eax,DWORD PTR [ebp-0x4]
  419101:	mov    eax,DWORD PTR [eax+0x180]
  419107:	mov    DWORD PTR [eax],edi
  419109:	mov    edi,0x4e3c
  41910e:	mov    eax,0x4f8f
  419113:	mov    WORD PTR [ebp-0x78],ax
  419117:	mov    eax,edi
  419119:	mov    WORD PTR [ebp-0x76],ax
  41911d:	add    eax,0x43
  419120:	mov    WORD PTR [ebp-0x74],ax
  419124:	lea    eax,[edi+0x3]
  419127:	mov    WORD PTR [ebp-0x72],ax
  41912b:	mov    eax,0x4fac
  419130:	mov    WORD PTR [ebp-0x70],ax
  419134:	lea    eax,[edi-0x4]
  419137:	mov    WORD PTR [ebp-0x6e],ax
  41913b:	add    eax,0x45
  41913e:	mov    WORD PTR [ebp-0x6c],ax
  419142:	lea    eax,[edi-0x2]
  419145:	mov    WORD PTR [ebp-0x6a],ax
  419149:	mov    eax,edi
  41914b:	mov    WORD PTR [ebp-0x68],ax
  41914f:	dec    eax
  419150:	mov    WORD PTR [ebp-0x66],ax
  419154:	mov    eax,0x99ff
  419159:	mov    WORD PTR [ebp-0x64],ax
  41915d:	mov    eax,0x8288
  419162:	mov    WORD PTR [ebp-0x62],ax
  419166:	mov    eax,0xd78d
  41916b:	mov    WORD PTR [ebp-0x60],ax
  41916f:	add    eax,0x1c
  419172:	mov    WORD PTR [ebp-0x5e],ax
  419176:	mov    eax,0x27aa
  41917b:	mov    WORD PTR [ebp-0x5c],ax
  41917f:	mov    eax,0x47aa
  419184:	mov    WORD PTR [ebp-0x5a],ax
  419188:	lea    eax,[edi-0x3]
  41918b:	mov    WORD PTR [ebp-0x58],ax
  41918f:	mov    DWORD PTR [ebp-0x10],0xf306020f
  419196:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41919d:	lea    eax,[ebp-0x10]
  4191a0:	mov    bl,BYTE PTR [eax]
  4191a2:	xor    bl,dl
  4191a4:	sub    bl,0x9
  4191a7:	mov    BYTE PTR [eax],bl
  4191a9:	inc    eax
  4191aa:	dec    ecx
  4191ab:	jne    0x4191a0
  4191ad:	lea    eax,[ebp-0x10]
  4191b0:	mov    DWORD PTR [ebp-0xb8],eax
  4191b6:	lea    eax,[ebp-0xbc]
  4191bc:	push   eax
  4191bd:	mov    eax,DWORD PTR [ebp+0xc]
  4191c0:	mov    ebx,0x7510899
  4191c5:	xor    eax,ebx
  4191c7:	mov    esi,0x3272e0
  4191cc:	add    eax,esi
  4191ce:	push   eax
  4191cf:	mov    eax,DWORD PTR [ebp-0x4]
  4191d2:	add    eax,0x66
  4191d5:	push   eax
  4191d6:	mov    eax,DWORD PTR [ebp-0x4]
  4191d9:	mov    eax,DWORD PTR [eax+0x198]
  4191df:	mov    DWORD PTR [ebp-0xbc],0x1
  4191e9:	push   DWORD PTR [eax]
  4191eb:	mov    eax,DWORD PTR [ebp+0x10]
  4191ee:	call   eax
  4191f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f3:	xor    ecx,ebx
  4191f5:	add    ecx,esi
  4191f7:	mov    DWORD PTR [ebp-0x8],eax
  4191fa:	cmp    eax,ecx
  4191fc:	jne    0x419217
  4191fe:	mov    eax,ds:0x33730bee
  419203:	or     eax,0x22150bef
  419208:	mov    ds:0x33730bee,eax
  41920d:	add    eax,0x3372e90f
  419212:	mov    ds:0x33730bee,eax
  419217:	mov    ecx,0x4f84
  41921c:	mov    eax,ecx
  41921e:	mov    WORD PTR [ebp-0x40],ax
  419222:	mov    eax,0x4e71
  419227:	mov    edx,eax
  419229:	mov    WORD PTR [ebp-0x3e],dx
  41922d:	lea    edx,[ecx+0x15]
  419230:	mov    WORD PTR [ebp-0x3c],dx
  419234:	add    edx,0xfffffff8
  419237:	mov    WORD PTR [ebp-0x3a],dx
  41923b:	lea    edx,[ecx+0xf]
  41923e:	mov    WORD PTR [ebp-0x38],dx
  419242:	add    edx,0x1b
  419245:	mov    WORD PTR [ebp-0x36],dx
  419249:	lea    edx,[ecx+0x21]
  41924c:	mov    WORD PTR [ebp-0x34],dx
  419250:	mov    WORD PTR [ebp-0x32],cx
  419254:	mov    ecx,edi
  419256:	mov    WORD PTR [ebp-0x30],cx
  41925a:	lea    ecx,[edx-0x1]
  41925d:	mov    edx,ecx
  41925f:	mov    WORD PTR [ebp-0x54],dx
  419263:	mov    edx,eax
  419265:	mov    WORD PTR [ebp-0x52],dx
  419269:	add    edx,0x8
  41926c:	mov    WORD PTR [ebp-0x50],dx
  419270:	mov    WORD PTR [ebp-0x4e],ax
  419274:	add    eax,0x2
  419277:	mov    WORD PTR [ebp-0x4c],ax
  41927b:	lea    eax,[ecx-0x16]
  41927e:	mov    WORD PTR [ebp-0x4a],ax
  419282:	add    eax,0xfffffff7
  419285:	mov    WORD PTR [ebp-0x48],ax
  419289:	mov    WORD PTR [ebp-0x46],cx
  41928d:	mov    WORD PTR [ebp-0x44],di
  419291:	mov    eax,DWORD PTR [ebp+0x8]
  419294:	movzx  ecx,WORD PTR [ebp-0x54]
  419298:	xor    eax,ebx
  41929a:	add    eax,esi
  41929c:	xor    eax,ecx
  41929e:	mov    WORD PTR [ebp-0x54],ax
  4192a2:	mov    eax,DWORD PTR [ebp+0x8]
  4192a5:	movzx  ecx,WORD PTR [ebp-0x40]
  4192a9:	xor    eax,ebx
  4192ab:	add    eax,esi
  4192ad:	xor    eax,ecx
  4192af:	mov    WORD PTR [ebp-0x40],ax
  4192b3:	xor    eax,eax
  4192b5:	mov    WORD PTR [ebp-0xd0],ax
  4192bc:	mov    WORD PTR [ebp-0xe4],ax
  4192c3:	mov    edi,DWORD PTR [ebp+0x24]
  4192c6:	lea    eax,[ebp-0xd0]
  4192cc:	lea    edx,[ebp-0x54]
  4192cf:	mov    DWORD PTR [ebp-0xbc],0x2
  4192d9:	mov    DWORD PTR [ebp-0xb8],eax
  4192df:	call   0x41bcc3
  4192e4:	mov    DWORD PTR [ebp-0xb4],eax
  4192ea:	lea    eax,[ebp-0xbc]
  4192f0:	push   eax
  4192f1:	mov    eax,DWORD PTR [ebp+0xc]
  4192f4:	xor    eax,ebx
  4192f6:	add    eax,esi
  4192f8:	push   eax
  4192f9:	lea    eax,[ebp-0x78]
  4192fc:	push   eax
  4192fd:	push   DWORD PTR [ebp-0x8]
  419300:	mov    eax,DWORD PTR [ebp+0x10]
  419303:	call   eax
  419305:	mov    edi,DWORD PTR [ebp+0x24]
  419308:	lea    eax,[ebp-0xe4]
  41930e:	lea    edx,[ebp-0x40]
  419311:	mov    DWORD PTR [ebp-0xb8],eax
  419317:	call   0x41bcc3
  41931c:	mov    DWORD PTR [ebp-0xb4],eax
  419322:	lea    eax,[ebp-0xbc]
  419328:	push   eax
  419329:	mov    eax,DWORD PTR [ebp+0xc]
  41932c:	xor    eax,ebx
  41932e:	add    eax,esi
  419330:	push   eax
  419331:	lea    eax,[ebp-0x78]
  419334:	push   eax
  419335:	push   DWORD PTR [ebp-0x8]
  419338:	mov    eax,DWORD PTR [ebp+0x10]
  41933b:	call   eax
  41933d:	mov    eax,DWORD PTR [ebp+0x14]
  419340:	push   DWORD PTR [ebp-0x4]
  419343:	push   DWORD PTR [ebp+0x20]
  419346:	push   DWORD PTR [ebp+0x1c]
  419349:	push   DWORD PTR [ebp+0x18]
  41934c:	push   DWORD PTR [ebp+0x10]
  41934f:	push   DWORD PTR [ebp+0x8]
  419352:	push   DWORD PTR [ebp+0xc]
  419355:	call   0x41a4ec
  41935a:	add    DWORD PTR [ebp-0x4],eax
  41935d:	mov    eax,DWORD PTR [ebp-0x4]
  419360:	mov    eax,DWORD PTR [ebp-0x4]
  419363:	mov    edi,DWORD PTR [eax+0x190]
  419369:	mov    eax,DWORD PTR [ebp-0x4]
  41936c:	mov    eax,DWORD PTR [eax+0x18c]
  419372:	mov    esi,DWORD PTR [eax]
  419374:	lea    ecx,[ebp+0x4]
  419377:	mov    edx,DWORD PTR [ecx]
  419379:	cmp    edx,esi
  41937b:	jb     0x419392
  41937d:	mov    eax,DWORD PTR [edi]
  41937f:	mov    edi,DWORD PTR [eax+0x3c]
  419382:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  419386:	add    edi,esi
  419388:	cmp    edx,edi
  41938a:	jae    0x419392
  41938c:	sub    eax,esi
  41938e:	add    eax,edx
  419390:	mov    DWORD PTR [ecx],eax
  419392:	pop    edi
  419393:	pop    esi
  419394:	pop    ebx
  419395:	leave  
  419396:	ret    0x20
  419399:	push   edi
  41939a:	push   esi
  41939b:	push   ebx
  41939c:	push   ebp
  41939d:	mov    ebp,esp
  41939f:	mov    eax,DWORD PTR [ebp+0x24]
  4193a2:	add    DWORD PTR [ebp+0x28],eax
  4193a5:	push   eax
  4193a6:	cld    
  4193a7:	mov    esi,DWORD PTR [ebp+0x18]
  4193aa:	add    DWORD PTR [ebp+0x1c],esi
  4193ad:	push   esi
  4193ae:	mov    esi,DWORD PTR [ebp+0x14]
  4193b1:	lods   eax,DWORD PTR ds:[esi]
  4193b2:	xchg   edx,eax
  4193b3:	push   edx
  4193b4:	mov    cl,BYTE PTR [esi-0x2]
  4193b7:	or     eax,0xffffffff
  4193ba:	shl    eax,cl
  4193bc:	not    eax
  4193be:	push   eax
  4193bf:	mov    cl,dh
  4193c1:	or     eax,0xffffffff
  4193c4:	shl    eax,cl
  4193c6:	not    eax
  4193c8:	push   eax
  4193c9:	add    cl,dl
  4193cb:	mov    edi,esi
  4193cd:	sub    esp,0xc
  4193d0:	sub    eax,eax
  4193d2:	inc    eax
  4193d3:	push   eax
  4193d4:	push   eax
  4193d5:	push   eax
  4193d6:	push   eax
  4193d7:	push   eax
  4193d8:	push   edi
  4193d9:	sub    esi,esi
  4193db:	push   esi
  4193dc:	or     ebx,0xffffffff
  4193df:	mov    eax,0x300
  4193e4:	shl    eax,cl
  4193e6:	lea    ecx,[eax+0x736]
  4193ec:	mov    eax,0x4000400
  4193f1:	shr    ecx,1
  4193f3:	rep stos DWORD PTR es:[edi],eax
  4193f5:	push   0x5
  4193f7:	pop    ecx
  4193f8:	call   0x4196e3
  4193fd:	loop   0x4193f8
  4193ff:	lea    esi,[esi]
  419401:	lea    edi,[edi]
  419403:	mov    edi,DWORD PTR [ebp-0x4]
  419406:	mov    eax,DWORD PTR [ebp-0x10]
  419409:	sub    edi,DWORD PTR [ebp+0x24]
  41940c:	and    eax,edi
  41940e:	mov    DWORD PTR [ebp-0x18],eax
  419411:	mov    al,0x0
  419413:	call   0x4196fb
  419418:	jne    0x4194b3
  41941e:	mov    cl,BYTE PTR [ebp-0xc]
  419421:	and    edi,DWORD PTR [ebp-0x14]
  419424:	shl    edi,cl
  419426:	sub    cl,0x8
  419429:	neg    cl
  41942b:	shr    esi,cl
  41942d:	pop    eax
  41942e:	add    edi,esi
  419430:	pop    esi
  419431:	lea    edi,[edi+edi*2]
  419434:	shl    edi,0x8
  419437:	cmp    al,0x7
  419439:	pop    edx
  41943a:	lea    ecx,[esi+edi*2+0xe6c]
  419441:	push   ecx
  419442:	push   esi
  419443:	mov    esi,0x100
  419448:	push   eax
  419449:	mov    al,0x1
  41944b:	jb     0x419481
  41944d:	mov    edi,DWORD PTR [ebp-0x4]
  419450:	sub    edi,DWORD PTR [ebp-0x24]
  419453:	movzx  edi,BYTE PTR [edi]
  419456:	mov    ebp,DWORD PTR [ebp-0x34]
  419459:	shl    edi,1
  41945b:	mov    ecx,esi
  41945d:	and    esi,edi
  41945f:	add    ecx,esi
  419461:	lea    ebp,[ebp+ecx*2+0x0]
  419465:	call   0x41971a
  41946a:	mov    ecx,eax
  41946c:	shr    esi,0x8
  41946f:	and    ecx,0x1
  419472:	cmp    esi,ecx
  419474:	mov    esi,0x100
  419479:	jne    0x419489
  41947b:	cmp    eax,esi
  41947d:	jb     0x419456
  41947f:	jmp    0x419495
  419481:	mov    ebp,DWORD PTR [ebp-0x34]
  419484:	call   0x41971a
  419489:	inc    eax
  41948a:	inc    esi
  41948b:	sub    eax,0x1
  41948e:	sub    esi,0x1
  419491:	cmp    eax,esi
  419493:	jb     0x419481
  419495:	pop    edx
  419496:	inc    edx
  419497:	cmp    edx,0x5
  41949a:	dec    edx
  41949b:	mov    ecx,edx
  41949d:	jb     0x4194ae
  41949f:	inc    edx
  4194a0:	cmp    edx,0xb
  4194a3:	dec    edx
  4194a4:	mov    cl,0x4
  4194a6:	dec    cl
  4194a8:	jb     0x4194ae
  4194aa:	mov    cl,0x7
  4194ac:	dec    cl
  4194ae:	sub    edx,ecx
  4194b0:	push   edx
  4194b1:	jmp    0x419502
  4194b3:	mov    al,0xc1
  4194b5:	dec    al
  4194b7:	call   0x41970b
  4194bc:	jne    0x4194d2
  4194be:	pop    eax
  4194bf:	pop    edi
  4194c0:	pop    edx
  4194c1:	pop    ecx
  4194c2:	pop    edx
  4194c3:	pop    ecx
  4194c4:	push   DWORD PTR [esp]
  4194c7:	push   ecx
  4194c8:	push   edx
  4194c9:	mov    edx,0x664
  4194ce:	mov    cl,0x0
  4194d0:	jmp    0x419545
  4194d2:	mov    al,0xcd
  4194d4:	dec    al
  4194d6:	call   0x41970b
  4194db:	jne    0x41950b
  4194dd:	mov    al,0xf1
  4194df:	dec    al
  4194e1:	call   0x4196fb
  4194e6:	jne    0x41953b
  4194e8:	pop    eax
  4194e9:	cmp    al,0x7
  4194eb:	mov    al,0x9
  4194ed:	jb     0x4194f1
  4194ef:	mov    al,0xb
  4194f1:	push   eax
  4194f2:	mov    esi,DWORD PTR [ebp-0x4]
  4194f5:	sub    esi,DWORD PTR [ebp-0x24]
  4194f8:	cmp    esi,DWORD PTR [ebp+0x24]
  4194fb:	jb     0x4196d2
  419501:	lods   al,BYTE PTR ds:[esi]
  419502:	mov    edi,DWORD PTR [ebp-0x4]
  419505:	stos   BYTE PTR es:[edi],al
  419506:	jmp    0x419699
  41950b:	mov    al,0xd8
  41950d:	call   0x41970b
  419512:	mov    esi,DWORD PTR [ebp-0x28]
  419515:	je     0x419532
  419517:	mov    al,0xe4
  419519:	call   0x41970b
  41951e:	mov    esi,DWORD PTR [ebp-0x2c]
  419521:	je     0x41952c
  419523:	mov    esi,DWORD PTR [ebp-0x30]
  419526:	mov    ecx,DWORD PTR [ebp-0x2c]
  419529:	mov    DWORD PTR [ebp-0x30],ecx
  41952c:	mov    ecx,DWORD PTR [ebp-0x28]
  41952f:	mov    DWORD PTR [ebp-0x2c],ecx
  419532:	mov    ecx,DWORD PTR [ebp-0x24]
  419535:	mov    DWORD PTR [ebp-0x28],ecx
  419538:	mov    DWORD PTR [ebp-0x24],esi
  41953b:	pop    eax
  41953c:	pop    edi
  41953d:	pop    ecx
  41953e:	mov    edx,0xa68
  419543:	mov    cl,0x8
  419545:	add    edx,edi
  419547:	push   edx
  419548:	push   edi
  419549:	cmp    al,0x7
  41954b:	mov    al,cl
  41954d:	jb     0x419551
  41954f:	add    al,0x3
  419551:	push   eax
  419552:	mov    ebp,DWORD PTR [ebp-0x34]
  419555:	call   0x419718
  41955a:	jne    0x419570
  41955c:	mov    eax,DWORD PTR [ebp-0x18]
  41955f:	mov    edi,DWORD PTR [ebp-0x34]
  419562:	shl    eax,0x3
  419565:	sub    ecx,ecx
  419567:	push   0x8
  419569:	pop    esi
  41956a:	lea    edi,[edi+eax*2+0x4]
  41956e:	jmp    0x4195a5
  419570:	mov    ebp,DWORD PTR [ebp-0x34]
  419573:	add    ebp,0x2
  419576:	call   0x419718
  41957b:	jne    0x419595
  41957d:	mov    eax,DWORD PTR [ebp-0x18]
  419580:	mov    edi,DWORD PTR [ebp-0x34]
  419583:	shl    eax,0x3
  419586:	push   0x8
  419588:	pop    ecx
  419589:	push   0x8
  41958b:	pop    esi
  41958c:	lea    edi,[edi+eax*2+0x104]
  419593:	jmp    0x4195a5
  419595:	mov    edi,0x204
  41959a:	add    edi,DWORD PTR [ebp-0x34]
  41959d:	push   0x10
  41959f:	pop    ecx
  4195a0:	mov    esi,0x100
  4195a5:	mov    DWORD PTR [ebp-0x1c],ecx
  4195a8:	sub    eax,eax
  4195aa:	inc    eax
  4195ab:	mov    ebp,edi
  4195ad:	call   0x41971a
  4195b2:	mov    ecx,eax
  4195b4:	sub    ecx,esi
  4195b6:	jb     0x4195ab
  4195b8:	add    DWORD PTR [ebp-0x1c],ecx
  4195bb:	cmp    DWORD PTR [ebp-0x3c],0x4
  4195bf:	jae    0x419675
  4195c5:	add    DWORD PTR [ebp-0x3c],0x7
  4195c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4195cc:	cmp    ecx,0x4
  4195cf:	jb     0x4195d4
  4195d1:	push   0x3
  4195d3:	pop    ecx
  4195d4:	mov    edi,DWORD PTR [ebp-0x38]
  4195d7:	shl    ecx,0x6
  4195da:	sub    eax,eax
  4195dc:	inc    eax
  4195dd:	push   0x40
  4195df:	pop    esi
  4195e0:	lea    edi,[edi+ecx*2+0x360]
  4195e7:	mov    ebp,edi
  4195e9:	call   0x41971a
  4195ee:	mov    ecx,eax
  4195f0:	sub    ecx,esi
  4195f2:	jb     0x4195e7
  4195f4:	mov    DWORD PTR [ebp-0x18],ecx
  4195f7:	mov    DWORD PTR [ebp-0x24],ecx
  4195fa:	cmp    ecx,0x4
  4195fd:	jb     0x419672
  4195ff:	mov    esi,ecx
  419601:	and    DWORD PTR [ebp-0x24],0x1
  419605:	shr    esi,1
  419607:	or     DWORD PTR [ebp-0x24],0x2
  41960b:	dec    esi
  41960c:	cmp    ecx,0xe
  41960f:	jae    0x41962a
  419611:	mov    eax,0x2af
  419616:	sub    eax,ecx
  419618:	mov    ecx,esi
  41961a:	shl    BYTE PTR [ebp-0x24],cl
  41961d:	add    eax,DWORD PTR [ebp-0x24]
  419620:	shl    eax,1
  419622:	add    eax,DWORD PTR [ebp-0x38]
  419625:	mov    DWORD PTR [ebp-0x34],eax
  419628:	jmp    0x419657
  41962a:	sub    esi,0x4
  41962d:	call   0x4196d7
  419632:	shr    ebx,1
  419634:	shl    DWORD PTR [ebp-0x24],1
  419637:	cmp    DWORD PTR [ebp-0x20],ebx
  41963a:	jb     0x419642
  41963c:	inc    DWORD PTR [ebp-0x24]
  41963f:	sub    DWORD PTR [ebp-0x20],ebx
  419642:	dec    esi
  419643:	jne    0x41962d
  419645:	mov    eax,0x644
  41964a:	add    eax,DWORD PTR [ebp-0x38]
  41964d:	mov    DWORD PTR [ebp-0x34],eax
  419650:	shl    DWORD PTR [ebp-0x24],0x4
  419654:	push   0x4
  419656:	pop    esi
  419657:	sub    edi,edi
  419659:	inc    edi
  41965a:	mov    eax,edi
  41965c:	mov    ebp,DWORD PTR [ebp-0x34]
  41965f:	call   0x41971a
  419664:	test   al,0x1
  419666:	je     0x41966b
  419668:	or     DWORD PTR [ebp-0x24],edi
  41966b:	shl    edi,1
  41966d:	dec    esi
  41966e:	jne    0x41965c
  419670:	jmp    0x419672
  419672:	inc    DWORD PTR [ebp-0x24]
  419675:	mov    ecx,DWORD PTR [ebp-0x1c]
  419678:	add    ecx,0x2
  41967b:	mov    edi,DWORD PTR [ebp-0x4]
  41967e:	mov    eax,edi
  419680:	sub    eax,DWORD PTR [ebp+0x24]
  419683:	cmp    DWORD PTR [ebp-0x24],eax
  419686:	ja     0x4196d2
  419688:	mov    esi,edi
  41968a:	sub    esi,DWORD PTR [ebp-0x24]
  41968d:	mov    edx,DWORD PTR [ebp+0x28]
  419690:	lods   al,BYTE PTR ds:[esi]
  419691:	stos   BYTE PTR es:[edi],al
  419692:	cmp    edi,edx
  419694:	jae    0x419699
  419696:	dec    ecx
  419697:	jne    0x419690
  419699:	mov    DWORD PTR [ebp-0x4],edi
  41969c:	movzx  esi,al
  41969f:	cmp    edi,DWORD PTR [ebp+0x28]
  4196a2:	jb     0x419403
  4196a8:	call   0x4196d7
  4196ad:	sub    eax,eax
  4196af:	lea    ebp,[esp+0x3c]
  4196b3:	mov    edx,DWORD PTR [ebp+0x20]
  4196b6:	mov    esi,DWORD PTR [ebp-0x8]
  4196b9:	sub    esi,DWORD PTR [ebp+0x18]
  4196bc:	mov    DWORD PTR [edx],esi
  4196be:	mov    edx,DWORD PTR [ebp+0x2c]
  4196c1:	mov    edi,DWORD PTR [ebp-0x4]
  4196c4:	sub    edi,DWORD PTR [ebp+0x24]
  4196c7:	mov    DWORD PTR [edx],edi
  4196c9:	leave  
  4196ca:	pop    ebx
  4196cb:	pop    esi
  4196cc:	pop    edi
  4196cd:	ret    0x1c
  4196d0:	pop    esi
  4196d1:	pop    eax
  4196d2:	sub    eax,eax
  4196d4:	inc    eax
  4196d5:	jmp    0x4196af
  4196d7:	cmp    ebx,0x1000000
  4196dd:	jb     0x4196e0
  4196df:	ret    
  4196e0:	shl    ebx,0x8
  4196e3:	push   esi
  4196e4:	mov    esi,DWORD PTR [ebp-0x8]
  4196e7:	cmp    esi,DWORD PTR [ebp+0x1c]
  4196ea:	jae    0x4196d0
  4196ec:	mov    eax,DWORD PTR [ebp-0x20]
  4196ef:	shl    eax,0x8
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	mov    DWORD PTR [ebp-0x20],eax
  4196f6:	mov    DWORD PTR [ebp-0x8],esi
  4196f9:	pop    esi
  4196fa:	ret    
  4196fb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4196fe:	movzx  eax,al
  419701:	shl    ecx,0x4
  419704:	add    eax,DWORD PTR [ebp-0x18]
  419707:	add    eax,ecx
  419709:	jmp    0x419711
  41970b:	movzx  eax,al
  41970e:	add    eax,DWORD PTR [ebp-0x3c]
  419711:	mov    ebp,DWORD PTR [ebp-0x38]
  419714:	lea    ebp,[ebp+eax*2+0x0]
  419718:	sub    eax,eax
  41971a:	lea    ebp,[ebp+eax*2+0x0]
  41971e:	cmp    ebx,0x1000000
  419724:	jae    0x419742
  419726:	mov    ecx,DWORD PTR [esp+0x38]
  41972a:	shl    DWORD PTR [esp+0x20],0x8
  41972f:	cmp    ecx,DWORD PTR [esp+0x5c]
  419733:	jae    0x4196d1
  419735:	mov    dl,BYTE PTR [ecx]
  419737:	inc    DWORD PTR [esp+0x38]
  41973b:	shl    ebx,0x8
  41973e:	mov    BYTE PTR [esp+0x20],dl
  419742:	mov    ecx,ebx
  419744:	movzx  edx,WORD PTR [ebp+0x0]
  419748:	shr    ecx,0xb
  41974b:	imul   ecx,edx
  41974e:	cmp    DWORD PTR [esp+0x20],ecx
  419752:	jae    0x41976b
  419754:	mov    ebx,ecx
  419756:	mov    ecx,0x800
  41975b:	sub    ecx,edx
  41975d:	shr    ecx,0x5
  419760:	add    WORD PTR [ebp+0x0],cx
  419764:	add    eax,eax
  419766:	lea    ebp,[esp+0x40]
  41976a:	ret    
  41976b:	shr    edx,0x5
  41976e:	sub    DWORD PTR [esp+0x20],ecx
  419772:	sub    ebx,ecx
  419774:	sub    WORD PTR [ebp+0x0],dx
  419778:	add    eax,eax
  41977a:	add    eax,0x1
  41977d:	lea    ebp,[esp+0x40]
  419781:	ret    
  419782:	push   ebp
  419783:	mov    ebp,esp
  419785:	sub    esp,0x104
  41978b:	push   ebx
  41978c:	push   esi
  41978d:	push   edi
  41978e:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  419795:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41979c:	mov    eax,DWORD PTR [ebp+0x8]
  41979f:	mov    DWORD PTR [ebp+0x8],eax
  4197a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4197a5:	mov    ebx,0x7510899
  4197aa:	xor    ecx,ebx
  4197ac:	mov    eax,0x3272e0
  4197b1:	add    ecx,eax
  4197b3:	mov    DWORD PTR [ebp-0x28],ecx
  4197b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4197b9:	xor    ecx,ebx
  4197bb:	add    ecx,eax
  4197bd:	mov    DWORD PTR [ebp-0x40],ecx
  4197c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4197c3:	xor    ecx,ebx
  4197c5:	add    ecx,eax
  4197c7:	mov    DWORD PTR [ebp-0x3c],ecx
  4197ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4197cd:	xor    ecx,ebx
  4197cf:	add    ecx,eax
  4197d1:	mov    DWORD PTR [ebp-0xa0],ecx
  4197d7:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4197de:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4197e5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  4197ec:	push   0x25
  4197ee:	pop    ecx
  4197ef:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f2:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f5:	push   0x65
  4197f7:	pop    ecx
  4197f8:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fb:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fe:	mov    DWORD PTR [ebp-0x2c],0x4d
  419805:	mov    DWORD PTR [ebp-0x2c],0x43
  41980c:	mov    ecx,DWORD PTR [ebp-0x14]
  41980f:	xor    ecx,ebx
  419811:	add    ecx,eax
  419813:	mov    DWORD PTR [ebp-0x2c],ecx
  419816:	mov    ecx,DWORD PTR [ebp-0x14]
  419819:	xor    ecx,ebx
  41981b:	add    ecx,eax
  41981d:	mov    DWORD PTR [ebp-0x2c],ecx
  419820:	mov    DWORD PTR [ebp-0x24],0x257
  419827:	mov    DWORD PTR [ebp-0x34],0x35
  41982e:	mov    DWORD PTR [ebp-0x10],0x79
  419835:	lea    edi,[ebp-0xe4]
  41983b:	lea    esi,[ebp-0x104]
  419841:	call   0x41a45b
  419846:	dec    DWORD PTR [ebp-0x10]
  419849:	jne    0x419835
  41984b:	dec    DWORD PTR [ebp-0x34]
  41984e:	jne    0x41982e
  419850:	dec    DWORD PTR [ebp-0x24]
  419853:	jne    0x419827
  419855:	mov    DWORD PTR [ebp-0x24],0x400d
  41985c:	mov    eax,DWORD PTR [ebp-0x14]
  41985f:	xor    eax,ebx
  419861:	mov    esi,0x3272e0
  419866:	add    eax,esi
  419868:	mov    DWORD PTR [ebp-0x8],eax
  41986b:	mov    eax,DWORD PTR [ebp-0x14]
  41986e:	and    DWORD PTR [ebp-0x94],0x0
  419875:	xor    eax,ebx
  419877:	add    eax,esi
  419879:	mov    DWORD PTR [ebp-0x38],eax
  41987c:	mov    eax,fs:0x18
  419882:	mov    DWORD PTR [ebp-0x94],eax
  419888:	mov    eax,DWORD PTR [eax+0x30]
  41988b:	mov    DWORD PTR [ebp-0x98],eax
  419891:	mov    eax,DWORD PTR [eax+0xc]
  419894:	mov    DWORD PTR [ebp-0xc0],eax
  41989a:	mov    eax,DWORD PTR [ebp+0x8]
  41989d:	lea    ecx,[ebp-0x94]
  4198a3:	mov    DWORD PTR [eax+0x1a0],ecx
  4198a9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ac:	lea    ecx,[ebp-0x98]
  4198b2:	mov    DWORD PTR [eax+0x1a4],ecx
  4198b8:	mov    eax,DWORD PTR [ebp+0x8]
  4198bb:	push   DWORD PTR [ebp+0x8]
  4198be:	lea    ecx,[ebp-0xc0]
  4198c4:	mov    DWORD PTR [eax+0x1a8],ecx
  4198ca:	call   0x41bc94
  4198cf:	mov    ecx,DWORD PTR [ebp-0x14]
  4198d2:	xor    ecx,ebx
  4198d4:	add    ecx,esi
  4198d6:	cmp    ecx,eax
  4198d8:	je     0x419bb5
  4198de:	mov    eax,DWORD PTR [ebp+0x8]
  4198e1:	mov    eax,DWORD PTR [eax+0x194]
  4198e7:	mov    ecx,DWORD PTR [eax]
  4198e9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ec:	mov    eax,DWORD PTR [eax+0x194]
  4198f2:	mov    eax,DWORD PTR [eax]
  4198f4:	add    eax,DWORD PTR [ecx+0x3c]
  4198f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4198fa:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419900:	lea    edx,[ebp-0xc4]
  419906:	push   edx
  419907:	mov    edx,DWORD PTR [ebp+0x8]
  41990a:	mov    edx,DWORD PTR [edx+0x18c]
  419910:	mov    edx,DWORD PTR [edx]
  419912:	add    edx,DWORD PTR [eax+0x88]
  419918:	push   0x4
  41991a:	push   DWORD PTR [eax+0x8c]
  419920:	push   edx
  419921:	call   DWORD PTR [ecx+0x1c]
  419924:	push   DWORD PTR [ebp+0x8]
  419927:	mov    edi,DWORD PTR [ebp+0x8]
  41992a:	mov    eax,DWORD PTR [ebp+0x8]
  41992d:	mov    edx,DWORD PTR [eax+0x1b8]
  419933:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41993a:	mov    DWORD PTR [ebp-0x64],0x10a051f
  419941:	mov    WORD PTR [ebp-0x60],0x7a39
  419947:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  419951:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41995b:	mov    DWORD PTR [ebp-0x88],0x2419020a
  419965:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41996f:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  419976:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41997d:	mov    DWORD PTR [ebp-0x78],0x6390819
  419984:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41998b:	mov    DWORD PTR [ebp-0x70],0x81d050d
  419992:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  419999:	call   0x41bcc3
  41999e:	push   eax
  41999f:	mov    eax,DWORD PTR [ebp+0x8]
  4199a2:	mov    eax,DWORD PTR [eax+0x1a8]
  4199a8:	push   DWORD PTR [eax]
  4199aa:	call   0x41b965
  4199af:	test   eax,eax
  4199b1:	jne    0x419a03
  4199b3:	mov    eax,DWORD PTR [ebp+0x8]
  4199b6:	mov    eax,DWORD PTR [eax+0x1d8]
  4199bc:	mov    edi,DWORD PTR [ebp+0x8]
  4199bf:	add    eax,0x4
  4199c2:	mov    DWORD PTR [ebp-0x20],eax
  4199c5:	mov    eax,DWORD PTR [ebp+0x8]
  4199c8:	mov    edx,DWORD PTR [eax+0x1b8]
  4199ce:	call   0x41bcc3
  4199d3:	push   eax
  4199d4:	mov    eax,DWORD PTR [ebp-0x20]
  4199d7:	call   DWORD PTR [eax]
  4199d9:	test   eax,eax
  4199db:	jne    0x419a03
  4199dd:	mov    eax,DWORD PTR [ebp+0x8]
  4199e0:	mov    eax,DWORD PTR [eax+0x1d8]
  4199e6:	mov    edi,DWORD PTR [ebp+0x8]
  4199e9:	add    eax,0x10
  4199ec:	mov    DWORD PTR [ebp-0x20],eax
  4199ef:	mov    eax,DWORD PTR [ebp+0x8]
  4199f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4199f8:	call   0x41bcc3
  4199fd:	push   eax
  4199fe:	mov    eax,DWORD PTR [ebp-0x20]
  419a01:	call   DWORD PTR [eax]
  419a03:	mov    eax,DWORD PTR [ebp-0x14]
  419a06:	mov    ecx,DWORD PTR [ebp-0x24]
  419a09:	xor    eax,ebx
  419a0b:	add    eax,esi
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b8e
  419a15:	mov    eax,DWORD PTR [ebp-0x18]
  419a18:	xor    eax,ebx
  419a1a:	mov    ecx,0xffcd8d20
  419a1f:	sub    ecx,eax
  419a21:	add    ecx,DWORD PTR [ebp-0x24]
  419a24:	mov    eax,DWORD PTR [ebp-0x8]
  419a27:	cmp    eax,ecx
  419a29:	ja     0x419b8e
  419a2f:	mov    DWORD PTR [ebp-0x34],0x0
  419a36:	push   DWORD PTR [ebp+0x8]
  419a39:	mov    edi,DWORD PTR [ebp+0x8]
  419a3c:	mov    eax,DWORD PTR [ebp+0x8]
  419a3f:	mov    edx,DWORD PTR [eax+0x1b4]
  419a45:	call   0x41bcc3
  419a4a:	push   eax
  419a4b:	mov    eax,DWORD PTR [ebp+0x8]
  419a4e:	mov    eax,DWORD PTR [eax+0x1a8]
  419a54:	push   DWORD PTR [eax]
  419a56:	call   0x41b965
  419a5b:	mov    ecx,DWORD PTR [ebp+0x8]
  419a5e:	mov    ecx,DWORD PTR [ecx+0x19c]
  419a64:	mov    DWORD PTR [ecx],eax
  419a66:	mov    eax,DWORD PTR [ebp+0x8]
  419a69:	mov    edi,DWORD PTR [eax+0x1d8]
  419a6f:	mov    esi,DWORD PTR [ebp+0x8]
  419a72:	xor    eax,eax
  419a74:	lea    edx,[ebp-0x7c]
  419a77:	call   0x41bcf9
  419a7c:	push   eax
  419a7d:	mov    eax,DWORD PTR [ebp+0x8]
  419a80:	mov    eax,DWORD PTR [eax+0x19c]
  419a86:	push   DWORD PTR [eax]
  419a88:	call   DWORD PTR [edi+0x8]
  419a8b:	mov    DWORD PTR [ebp-0x20],eax
  419a8e:	mov    eax,DWORD PTR [ebp+0x8]
  419a91:	mov    edi,DWORD PTR [eax+0x1d8]
  419a97:	mov    esi,DWORD PTR [ebp+0x8]
  419a9a:	xor    eax,eax
  419a9c:	lea    edx,[ebp-0x90]
  419aa2:	call   0x41bcf9
  419aa7:	push   eax
  419aa8:	mov    eax,DWORD PTR [ebp+0x8]
  419aab:	mov    eax,DWORD PTR [eax+0x19c]
  419ab1:	push   DWORD PTR [eax]
  419ab3:	call   DWORD PTR [edi+0x8]
  419ab6:	and    DWORD PTR [ebp-0x1c],0x0
  419aba:	mov    eax,DWORD PTR [ebp-0x1c]
  419abd:	and    eax,0x7
  419ac0:	add    eax,0x31
  419ac3:	push   eax
  419ac4:	call   DWORD PTR [ebp-0x20]
  419ac7:	test   eax,eax
  419ac9:	jne    0x419ad0
  419acb:	and    DWORD PTR [ebp-0x10],eax
  419ace:	jmp    0x419af8
  419ad0:	mov    eax,DWORD PTR [ebp+0x8]
  419ad3:	mov    edi,DWORD PTR [eax+0x1d8]
  419ad9:	mov    esi,DWORD PTR [ebp+0x8]
  419adc:	xor    eax,eax
  419ade:	lea    edx,[ebp-0x68]
  419ae1:	call   0x41bcf9
  419ae6:	push   eax
  419ae7:	mov    eax,DWORD PTR [ebp+0x8]
  419aea:	mov    eax,DWORD PTR [eax+0x198]
  419af0:	push   DWORD PTR [eax]
  419af2:	call   DWORD PTR [edi+0x8]
  419af5:	mov    DWORD PTR [ebp-0x10],eax
  419af8:	inc    DWORD PTR [ebp-0x1c]
  419afb:	cmp    DWORD PTR [ebp-0x1c],0x10
  419aff:	jb     0x419aba
  419b01:	mov    eax,DWORD PTR [ebp-0x18]
  419b04:	mov    esi,DWORD PTR [ebp+0x8]
  419b07:	xor    eax,ebx
  419b09:	mov    edi,0x3272e0
  419b0e:	add    eax,edi
  419b10:	lea    edx,[ebp-0xe4]
  419b16:	call   0x41bcf9
  419b1b:	push   eax
  419b1c:	mov    eax,DWORD PTR [ebp-0x14]
  419b1f:	mov    esi,DWORD PTR [ebp+0x8]
  419b22:	xor    eax,ebx
  419b24:	add    eax,edi
  419b26:	lea    edx,[ebp-0x104]
  419b2c:	call   0x41bcf9
  419b31:	push   eax
  419b32:	call   DWORD PTR [ebp-0x10]
  419b35:	mov    ecx,DWORD PTR [ebp-0x14]
  419b38:	xor    ecx,ebx
  419b3a:	add    ecx,edi
  419b3c:	cmp    ecx,eax
  419b3e:	jne    0x419b47
  419b40:	mov    DWORD PTR [ebp-0x34],0x1
  419b47:	mov    eax,DWORD PTR [ebp-0x18]
  419b4a:	mov    ecx,DWORD PTR [ebp-0x8]
  419b4d:	xor    eax,ebx
  419b4f:	lea    eax,[eax+ecx*1+0x3272e0]
  419b56:	mov    DWORD PTR [ebp-0x8],eax
  419b59:	mov    eax,DWORD PTR [ebp-0x34]
  419b5c:	test   eax,eax
  419b5e:	je     0x419b72
  419b60:	mov    eax,DWORD PTR [ebp-0x18]
  419b63:	mov    ecx,DWORD PTR [ebp-0x38]
  419b66:	xor    eax,ebx
  419b68:	lea    eax,[eax+ecx*1+0x3272e0]
  419b6f:	mov    DWORD PTR [ebp-0x38],eax
  419b72:	mov    eax,DWORD PTR [ebp-0x18]
  419b75:	xor    eax,ebx
  419b77:	mov    ecx,0xffcd8d20
  419b7c:	sub    ecx,eax
  419b7e:	add    ecx,DWORD PTR [ebp-0x24]
  419b81:	mov    eax,DWORD PTR [ebp-0x8]
  419b84:	cmp    eax,ecx
  419b86:	jbe    0x419a2f
  419b8c:	mov    esi,edi
  419b8e:	mov    eax,DWORD PTR [ebp-0x38]
  419b91:	mov    ecx,DWORD PTR [ebp-0x8]
  419b94:	cmp    ecx,eax
  419b96:	jne    0x419ba9
  419b98:	push   DWORD PTR [ebp+0x8]
  419b9b:	lea    eax,[ebp-0x40]
  419b9e:	push   eax
  419b9f:	call   0x41c772
  419ba4:	mov    DWORD PTR [ebp-0x28],eax
  419ba7:	jmp    0x419bb5
  419ba9:	mov    eax,DWORD PTR [ebp-0x28]
  419bac:	mov    ecx,DWORD PTR [ebp-0x18]
  419baf:	xor    ecx,ebx
  419bb1:	add    ecx,esi
  419bb3:	xor    DWORD PTR [eax],ecx
  419bb5:	mov    eax,DWORD PTR [ebp-0x14]
  419bb8:	mov    ecx,DWORD PTR [ebp-0x28]
  419bbb:	xor    eax,ebx
  419bbd:	add    eax,esi
  419bbf:	cmp    eax,ecx
  419bc1:	je     0x41a339
  419bc7:	mov    eax,DWORD PTR [ebp-0x14]
  419bca:	mov    ecx,DWORD PTR [ebp-0x40]
  419bcd:	xor    eax,ebx
  419bcf:	add    eax,esi
  419bd1:	cmp    eax,ecx
  419bd3:	je     0x41a339
  419bd9:	mov    eax,DWORD PTR [ebp-0x14]
  419bdc:	xor    eax,ebx
  419bde:	add    eax,esi
  419be0:	jmp    0x419bfe
  419be2:	mov    edi,DWORD PTR [ebp-0x28]
  419be5:	mov    cl,al
  419be7:	and    cl,0x1f
  419bea:	or     dl,0xff
  419bed:	sub    dl,cl
  419bef:	add    BYTE PTR [edi+eax*1],dl
  419bf2:	mov    ecx,DWORD PTR [ebp-0x18]
  419bf5:	xor    ecx,ebx
  419bf7:	lea    eax,[eax+ecx*1+0x3272e0]
  419bfe:	mov    ecx,DWORD PTR [ebp-0x40]
  419c01:	cmp    eax,ecx
  419c03:	jb     0x419be2
  419c05:	mov    eax,DWORD PTR [ebp-0x40]
  419c08:	mov    DWORD PTR [ebp-0x24],eax
  419c0b:	mov    eax,DWORD PTR [ebp-0x28]
  419c0e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  419c15:	mov    DWORD PTR [ebp-0xbc],eax
  419c1b:	mov    edi,0xf89c85b8
  419c20:	mov    DWORD PTR [ebp-0x30],edi
  419c23:	mov    eax,DWORD PTR [ebp-0x38]
  419c26:	xor    eax,ebx
  419c28:	add    eax,esi
  419c2a:	mov    DWORD PTR [ebp-0xc],eax
  419c2d:	mov    eax,DWORD PTR [ebp-0x38]
  419c30:	xor    eax,ebx
  419c32:	add    eax,esi
  419c34:	mov    DWORD PTR [ebp-0x8],eax
  419c37:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  419c3e:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  419c45:	mov    eax,DWORD PTR [ebp-0x38]
  419c48:	mov    ecx,DWORD PTR [ebp-0x24]
  419c4b:	xor    eax,ebx
  419c4d:	add    eax,esi
  419c4f:	cmp    ecx,eax
  419c51:	je     0x419e50
  419c57:	jmp    0x419e2c
  419c5c:	mov    ecx,DWORD PTR [ebp-0xc]
  419c5f:	mov    eax,DWORD PTR [ebp-0x24]
  419c62:	sub    eax,ecx
  419c64:	mov    ecx,DWORD PTR [ebp-0x48]
  419c67:	xor    ecx,ebx
  419c69:	add    ecx,esi
  419c6b:	xor    edx,edx
  419c6d:	div    ecx
  419c6f:	mov    DWORD PTR [ebp-0x8],eax
  419c72:	mov    eax,DWORD PTR [ebp-0x54]
  419c75:	mov    ecx,DWORD PTR [ebp-0x8]
  419c78:	xor    eax,ebx
  419c7a:	add    eax,esi
  419c7c:	cmp    ecx,eax
  419c7e:	jbe    0x419c8a
  419c80:	mov    eax,DWORD PTR [ebp-0x54]
  419c83:	xor    eax,ebx
  419c85:	add    eax,esi
  419c87:	mov    DWORD PTR [ebp-0x8],eax
  419c8a:	mov    eax,DWORD PTR [ebp-0x48]
  419c8d:	mov    ecx,DWORD PTR [ebp-0x8]
  419c90:	xor    eax,ebx
  419c92:	add    eax,esi
  419c94:	imul   eax,ecx
  419c97:	mov    DWORD PTR [ebp-0x8],eax
  419c9a:	mov    eax,DWORD PTR [ebp-0x38]
  419c9d:	mov    ecx,DWORD PTR [ebp-0x8]
  419ca0:	xor    eax,ebx
  419ca2:	add    eax,esi
  419ca4:	cmp    ecx,eax
  419ca6:	je     0x419e1a
  419cac:	mov    eax,DWORD PTR [ebp-0x8]
  419caf:	mov    DWORD PTR [ebp-0x10],eax
  419cb2:	mov    eax,DWORD PTR [ebp-0xc]
  419cb5:	add    eax,DWORD PTR [ebp-0xbc]
  419cbb:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  419cc2:	mov    DWORD PTR [ebp-0x34],edi
  419cc5:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  419ccf:	mov    DWORD PTR [ebp-0x8],eax
  419cd2:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  419cd9:	mov    DWORD PTR [ebp-0x1c],edi
  419cdc:	mov    eax,DWORD PTR [ebp-0x20]
  419cdf:	xor    eax,ebx
  419ce1:	add    eax,esi
  419ce3:	jmp    0x419dd9
  419ce8:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  419cf2:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  419cfc:	mov    eax,DWORD PTR [ebp-0x1c]
  419cff:	mov    ecx,DWORD PTR [ebp-0x44]
  419d02:	xor    eax,ebx
  419d04:	add    eax,esi
  419d06:	imul   eax,ecx
  419d09:	mov    ecx,DWORD PTR [ebp-0x8]
  419d0c:	mov    al,BYTE PTR [eax+ecx*1]
  419d0f:	mov    BYTE PTR [ebp-0x2],al
  419d12:	mov    eax,DWORD PTR [ebp-0x1c]
  419d15:	mov    ecx,DWORD PTR [ebp-0x44]
  419d18:	xor    eax,ebx
  419d1a:	add    eax,esi
  419d1c:	imul   eax,ecx
  419d1f:	mov    ecx,DWORD PTR [ebp-0xa8]
  419d25:	xor    ecx,ebx
  419d27:	add    eax,ecx
  419d29:	mov    ecx,DWORD PTR [ebp-0x8]
  419d2c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d34:	mov    ecx,DWORD PTR [ebp-0xb0]
  419d3a:	xor    ecx,ebx
  419d3c:	lea    eax,[ecx+eax*1+0x3272e0]
  419d43:	movzx  ecx,BYTE PTR [ebp-0x2]
  419d47:	xor    ecx,eax
  419d49:	mov    BYTE PTR [ebp-0x2],cl
  419d4c:	mov    al,BYTE PTR [ebp-0x2]
  419d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  419d52:	mov    edx,DWORD PTR [ebp-0x44]
  419d55:	xor    ecx,ebx
  419d57:	add    ecx,esi
  419d59:	imul   ecx,edx
  419d5c:	mov    edx,DWORD PTR [ebp-0x8]
  419d5f:	mov    BYTE PTR [ecx+edx*1],al
  419d62:	mov    eax,DWORD PTR [ebp-0x1c]
  419d65:	mov    ecx,DWORD PTR [ebp-0x44]
  419d68:	xor    eax,ebx
  419d6a:	add    eax,esi
  419d6c:	imul   eax,ecx
  419d6f:	mov    ecx,DWORD PTR [ebp-0x8]
  419d72:	mov    al,BYTE PTR [eax+ecx*1]
  419d75:	mov    BYTE PTR [ebp-0x2],al
  419d78:	mov    eax,DWORD PTR [ebp-0x1c]
  419d7b:	mov    ecx,DWORD PTR [ebp-0x44]
  419d7e:	xor    eax,ebx
  419d80:	add    eax,esi
  419d82:	imul   eax,ecx
  419d85:	mov    ecx,DWORD PTR [ebp-0x34]
  419d88:	xor    ecx,ebx
  419d8a:	add    eax,ecx
  419d8c:	mov    ecx,DWORD PTR [ebp-0x8]
  419d8f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d97:	mov    ecx,DWORD PTR [ebp-0xb8]
  419d9d:	xor    ecx,ebx
  419d9f:	lea    eax,[ecx+eax*1+0x3272e0]
  419da6:	movzx  ecx,BYTE PTR [ebp-0x2]
  419daa:	xor    ecx,eax
  419dac:	mov    BYTE PTR [ebp-0x2],cl
  419daf:	mov    al,BYTE PTR [ebp-0x2]
  419db2:	mov    ecx,DWORD PTR [ebp-0x1c]
  419db5:	mov    edx,DWORD PTR [ebp-0x44]
  419db8:	xor    ecx,ebx
  419dba:	add    ecx,esi
  419dbc:	imul   ecx,edx
  419dbf:	mov    edx,DWORD PTR [ebp-0x8]
  419dc2:	mov    BYTE PTR [ecx+edx*1],al
  419dc5:	mov    eax,DWORD PTR [ebp-0x2c]
  419dc8:	mov    ecx,DWORD PTR [ebp-0x34]
  419dcb:	xor    eax,ebx
  419dcd:	xor    ecx,ebx
  419dcf:	add    eax,esi
  419dd1:	add    ecx,esi
  419dd3:	imul   eax,ecx
  419dd6:	add    eax,DWORD PTR [ebp-0x44]
  419dd9:	mov    DWORD PTR [ebp-0x44],eax
  419ddc:	mov    eax,DWORD PTR [ebp-0x44]
  419ddf:	mov    ecx,DWORD PTR [ebp-0x10]
  419de2:	cmp    ecx,eax
  419de4:	jb     0x419ce8
  419dea:	mov    eax,DWORD PTR [ebp-0x34]
  419ded:	mov    ecx,DWORD PTR [ebp-0x10]
  419df0:	xor    eax,ebx
  419df2:	add    eax,esi
  419df4:	imul   eax,ecx
  419df7:	mov    ecx,DWORD PTR [ebp-0x20]
  419dfa:	xor    ecx,ebx
  419dfc:	add    ecx,esi
  419dfe:	or     eax,ecx
  419e00:	mov    ecx,DWORD PTR [ebp-0x30]
  419e03:	xor    ecx,ebx
  419e05:	add    eax,ecx
  419e07:	mov    ecx,DWORD PTR [ebp-0x30]
  419e0a:	xor    ecx,ebx
  419e0c:	add    eax,ecx
  419e0e:	mov    ecx,DWORD PTR [ebp-0xc]
  419e11:	lea    eax,[eax+ecx*1+0x64e5c0]
  419e18:	jmp    0x419e29
  419e1a:	mov    eax,DWORD PTR [ebp-0x30]
  419e1d:	mov    ecx,DWORD PTR [ebp-0xc]
  419e20:	xor    eax,ebx
  419e22:	lea    eax,[eax+ecx*1+0x3272e0]
  419e29:	mov    DWORD PTR [ebp-0xc],eax
  419e2c:	mov    eax,DWORD PTR [ebp-0x30]
  419e2f:	xor    eax,ebx
  419e31:	mov    ecx,0xffcd8d20
  419e36:	sub    ecx,eax
  419e38:	add    ecx,DWORD PTR [ebp-0x24]
  419e3b:	mov    eax,DWORD PTR [ebp-0x30]
  419e3e:	mov    edx,DWORD PTR [ebp-0xc]
  419e41:	xor    eax,ebx
  419e43:	add    eax,esi
  419e45:	imul   eax,edx
  419e48:	cmp    eax,ecx
  419e4a:	jbe    0x419c5c
  419e50:	mov    eax,DWORD PTR [ebp-0x14]
  419e53:	mov    ecx,DWORD PTR [ebp-0x40]
  419e56:	mov    eax,DWORD PTR [ebp+0x8]
  419e59:	mov    edx,DWORD PTR [ebp-0x4c]
  419e5c:	mov    eax,DWORD PTR [eax+0x1d8]
  419e62:	xor    edx,ebx
  419e64:	add    edx,esi
  419e66:	push   edx
  419e67:	mov    edx,DWORD PTR [ebp-0x3c]
  419e6a:	xor    edx,ebx
  419e6c:	add    edx,esi
  419e6e:	push   edx
  419e6f:	push   ecx
  419e70:	mov    DWORD PTR [ebp-0x2c],ecx
  419e73:	mov    ecx,DWORD PTR [ebp-0x14]
  419e76:	xor    ecx,ebx
  419e78:	add    ecx,esi
  419e7a:	push   ecx
  419e7b:	call   DWORD PTR [eax+0x14]
  419e7e:	mov    edi,eax
  419e80:	mov    eax,DWORD PTR [ebp-0x14]
  419e83:	xor    eax,ebx
  419e85:	add    eax,esi
  419e87:	cmp    eax,edi
  419e89:	je     0x419ee4
  419e8b:	mov    eax,DWORD PTR [ebp-0x14]
  419e8e:	jmp    0x419eb1
  419e90:	mov    ecx,DWORD PTR [ebp-0x28]
  419e93:	xor    eax,ebx
  419e95:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  419e9c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  419ea3:	mov    ecx,DWORD PTR [ebp-0x18]
  419ea6:	xor    ecx,ebx
  419ea8:	lea    eax,[ecx+eax*1+0x3272e0]
  419eaf:	xor    eax,ebx
  419eb1:	mov    ecx,DWORD PTR [ebp-0x40]
  419eb4:	sub    ecx,esi
  419eb6:	xor    ecx,ebx
  419eb8:	cmp    eax,ecx
  419eba:	jne    0x419e90
  419ebc:	mov    eax,DWORD PTR [ebp+0x8]
  419ebf:	mov    ecx,DWORD PTR [ebp-0x50]
  419ec2:	mov    eax,DWORD PTR [eax+0x1d8]
  419ec8:	xor    ecx,ebx
  419eca:	add    ecx,esi
  419ecc:	push   ecx
  419ecd:	mov    ecx,DWORD PTR [ebp-0x14]
  419ed0:	xor    ecx,ebx
  419ed2:	add    ecx,esi
  419ed4:	push   ecx
  419ed5:	push   DWORD PTR [ebp-0x28]
  419ed8:	call   DWORD PTR [eax+0x18]
  419edb:	mov    eax,DWORD PTR [ebp-0x2c]
  419ede:	mov    DWORD PTR [ebp-0x28],edi
  419ee1:	mov    DWORD PTR [ebp-0x40],eax
  419ee4:	mov    edi,DWORD PTR [ebp-0x28]
  419ee7:	mov    eax,DWORD PTR [ebp-0x18]
  419eea:	mov    ecx,DWORD PTR [ebp-0x14]
  419eed:	xor    eax,ebx
  419eef:	mov    DWORD PTR [ebp-0x2c],edi
  419ef2:	add    eax,esi
  419ef4:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  419efb:	mov    DWORD PTR [ebp-0x58],0x27123f12
  419f02:	jmp    0x419f36
  419f04:	xor    ecx,ebx
  419f06:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  419f0d:	xor    dl,0x73
  419f10:	sub    dl,0x9
  419f13:	mov    DWORD PTR [ebp-0x3c],ecx
  419f16:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  419f1e:	movzx  edx,dl
  419f21:	cmp    ecx,edx
  419f23:	jne    0x419f40
  419f25:	mov    ecx,DWORD PTR [ebp-0x18]
  419f28:	mov    edx,DWORD PTR [ebp-0x3c]
  419f2b:	xor    ecx,ebx
  419f2d:	lea    ecx,[ecx+edx*1+0x3272e0]
  419f34:	xor    ecx,ebx
  419f36:	cmp    ecx,0xf89c85b1
  419f3c:	jne    0x419f04
  419f3e:	jmp    0x419f47
  419f40:	mov    eax,DWORD PTR [ebp-0x14]
  419f43:	xor    eax,ebx
  419f45:	add    eax,esi
  419f47:	mov    ecx,DWORD PTR [ebp-0x14]
  419f4a:	xor    ecx,ebx
  419f4c:	add    ecx,esi
  419f4e:	cmp    ecx,eax
  419f50:	je     0x41a0c3
  419f56:	mov    eax,DWORD PTR [edi+0x8]
  419f59:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  419f60:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  419f67:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  419f6e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  419f75:	mov    DWORD PTR [ebp-0x10],eax
  419f78:	mov    eax,DWORD PTR [ebp+0x8]
  419f7b:	mov    ecx,DWORD PTR [ebp-0x20]
  419f7e:	xor    ecx,ebx
  419f80:	add    ecx,esi
  419f82:	push   ecx
  419f83:	mov    ecx,DWORD PTR [ebp-0x48]
  419f86:	mov    eax,DWORD PTR [eax+0x1d8]
  419f8c:	xor    ecx,ebx
  419f8e:	add    ecx,esi
  419f90:	push   ecx
  419f91:	mov    ecx,DWORD PTR [ebp-0x3c]
  419f94:	xor    ecx,ebx
  419f96:	add    ecx,esi
  419f98:	push   ecx
  419f99:	mov    ecx,DWORD PTR [ebp-0xc]
  419f9c:	xor    ecx,ebx
  419f9e:	add    ecx,esi
  419fa0:	push   ecx
  419fa1:	call   DWORD PTR [eax+0x14]
  419fa4:	mov    edi,eax
  419fa6:	mov    eax,DWORD PTR [ebp+0x8]
  419fa9:	mov    ecx,DWORD PTR [ebp-0x20]
  419fac:	mov    eax,DWORD PTR [eax+0x1d8]
  419fb2:	xor    ecx,ebx
  419fb4:	add    ecx,esi
  419fb6:	push   ecx
  419fb7:	mov    ecx,DWORD PTR [ebp-0x48]
  419fba:	xor    ecx,ebx
  419fbc:	add    ecx,esi
  419fbe:	push   ecx
  419fbf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fc2:	push   DWORD PTR [ebp-0x10]
  419fc5:	xor    ecx,ebx
  419fc7:	add    ecx,esi
  419fc9:	push   ecx
  419fca:	call   DWORD PTR [eax+0x14]
  419fcd:	mov    ecx,DWORD PTR [ebp-0xc]
  419fd0:	xor    ecx,ebx
  419fd2:	add    ecx,esi
  419fd4:	mov    DWORD PTR [ebp-0x20],eax
  419fd7:	cmp    ecx,edi
  419fd9:	je     0x41a366
  419fdf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fe2:	xor    ecx,ebx
  419fe4:	add    ecx,esi
  419fe6:	cmp    ecx,eax
  419fe8:	je     0x41a366
  419fee:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  419ff5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  419ffc:	mov    ecx,DWORD PTR [ebp-0x3c]
  419fff:	xor    cl,0x99
  41a002:	sub    cl,0x20
  41a005:	mov    BYTE PTR [edi],cl
  41a007:	mov    ecx,DWORD PTR [ebp-0xc]
  41a00a:	xor    cl,0x99
  41a00d:	sub    cl,0x20
  41a010:	mov    BYTE PTR [edi+0x1],cl
  41a013:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a016:	xor    cl,0x99
  41a019:	sub    cl,0x20
  41a01c:	mov    BYTE PTR [edi+0x2],cl
  41a01f:	and    DWORD PTR [ebp-0xb4],0x0
  41a026:	and    DWORD PTR [ebp-0xa4],0x0
  41a02d:	lea    ecx,[ebp-0xa4]
  41a033:	push   ecx
  41a034:	push   DWORD PTR [ebp-0x10]
  41a037:	push   eax
  41a038:	lea    eax,[ebp-0xb4]
  41a03e:	push   eax
  41a03f:	mov    eax,DWORD PTR [ebp-0x2c]
  41a042:	push   DWORD PTR [eax+0xc]
  41a045:	mov    eax,DWORD PTR [ebp-0x28]
  41a048:	add    eax,0x10
  41a04b:	push   eax
  41a04c:	push   edi
  41a04d:	call   0x419399
  41a052:	mov    DWORD PTR [ebp-0x3c],eax
  41a055:	mov    eax,DWORD PTR [ebp+0x8]
  41a058:	mov    ecx,DWORD PTR [ebp-0x50]
  41a05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41a061:	xor    ecx,ebx
  41a063:	add    ecx,esi
  41a065:	push   ecx
  41a066:	mov    ecx,DWORD PTR [ebp-0xc]
  41a069:	xor    ecx,ebx
  41a06b:	add    ecx,esi
  41a06d:	push   ecx
  41a06e:	push   edi
  41a06f:	call   DWORD PTR [eax+0x18]
  41a072:	mov    eax,DWORD PTR [ebp-0x3c]
  41a075:	add    eax,0xffcd8d20
  41a07a:	xor    eax,ebx
  41a07c:	cmp    eax,0xf89c85b9
  41a081:	mov    eax,DWORD PTR [ebp+0x8]
  41a084:	mov    eax,DWORD PTR [eax+0x1d8]
  41a08a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a08d:	jne    0x41a0b0
  41a08f:	xor    ecx,ebx
  41a091:	add    ecx,esi
  41a093:	push   ecx
  41a094:	mov    ecx,DWORD PTR [ebp-0xc]
  41a097:	xor    ecx,ebx
  41a099:	add    ecx,esi
  41a09b:	push   ecx
  41a09c:	push   DWORD PTR [ebp-0x28]
  41a09f:	call   DWORD PTR [eax+0x18]
  41a0a2:	mov    eax,DWORD PTR [ebp-0x20]
  41a0a5:	mov    DWORD PTR [ebp-0x28],eax
  41a0a8:	mov    eax,DWORD PTR [ebp-0x10]
  41a0ab:	mov    DWORD PTR [ebp-0x40],eax
  41a0ae:	jmp    0x41a0c3
  41a0b0:	xor    ecx,ebx
  41a0b2:	add    ecx,esi
  41a0b4:	push   ecx
  41a0b5:	mov    ecx,DWORD PTR [ebp-0xc]
  41a0b8:	xor    ecx,ebx
  41a0ba:	add    ecx,esi
  41a0bc:	push   ecx
  41a0bd:	push   DWORD PTR [ebp-0x20]
  41a0c0:	call   DWORD PTR [eax+0x18]
  41a0c3:	mov    eax,DWORD PTR [ebp-0x40]
  41a0c6:	mov    DWORD PTR [ebp-0x38],eax
  41a0c9:	mov    eax,DWORD PTR [ebp-0x28]
  41a0cc:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41a0d3:	mov    DWORD PTR [ebp-0x3c],eax
  41a0d6:	mov    edi,0xf89c85b8
  41a0db:	mov    DWORD PTR [ebp-0x30],edi
  41a0de:	mov    eax,DWORD PTR [ebp-0x24]
  41a0e1:	xor    eax,ebx
  41a0e3:	add    eax,esi
  41a0e5:	mov    DWORD PTR [ebp-0xc],eax
  41a0e8:	mov    eax,DWORD PTR [ebp-0x24]
  41a0eb:	xor    eax,ebx
  41a0ed:	add    eax,esi
  41a0ef:	mov    DWORD PTR [ebp-0x10],eax
  41a0f2:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41a0f9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41a100:	mov    eax,DWORD PTR [ebp-0x24]
  41a103:	mov    ecx,DWORD PTR [ebp-0x38]
  41a106:	xor    eax,ebx
  41a108:	add    eax,esi
  41a10a:	cmp    ecx,eax
  41a10c:	je     0x41a302
  41a112:	jmp    0x41a2de
  41a117:	mov    ecx,DWORD PTR [ebp-0xc]
  41a11a:	mov    eax,DWORD PTR [ebp-0x38]
  41a11d:	sub    eax,ecx
  41a11f:	mov    ecx,DWORD PTR [ebp-0x48]
  41a122:	xor    ecx,ebx
  41a124:	add    ecx,esi
  41a126:	xor    edx,edx
  41a128:	div    ecx
  41a12a:	mov    DWORD PTR [ebp-0x10],eax
  41a12d:	mov    eax,DWORD PTR [ebp-0x20]
  41a130:	mov    ecx,DWORD PTR [ebp-0x10]
  41a133:	xor    eax,ebx
  41a135:	add    eax,esi
  41a137:	cmp    ecx,eax
  41a139:	jbe    0x41a145
  41a13b:	mov    eax,DWORD PTR [ebp-0x20]
  41a13e:	xor    eax,ebx
  41a140:	add    eax,esi
  41a142:	mov    DWORD PTR [ebp-0x10],eax
  41a145:	mov    eax,DWORD PTR [ebp-0x48]
  41a148:	mov    ecx,DWORD PTR [ebp-0x10]
  41a14b:	xor    eax,ebx
  41a14d:	add    eax,esi
  41a14f:	imul   eax,ecx
  41a152:	mov    DWORD PTR [ebp-0x10],eax
  41a155:	mov    eax,DWORD PTR [ebp-0x24]
  41a158:	mov    ecx,DWORD PTR [ebp-0x10]
  41a15b:	xor    eax,ebx
  41a15d:	add    eax,esi
  41a15f:	cmp    ecx,eax
  41a161:	je     0x41a2cc
  41a167:	mov    eax,DWORD PTR [ebp-0x10]
  41a16a:	mov    DWORD PTR [ebp-0x34],eax
  41a16d:	mov    eax,DWORD PTR [ebp-0xc]
  41a170:	add    eax,DWORD PTR [ebp-0x3c]
  41a173:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41a17a:	mov    DWORD PTR [ebp-0x10],edi
  41a17d:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41a184:	mov    DWORD PTR [ebp-0x1c],eax
  41a187:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41a18e:	mov    DWORD PTR [ebp-0x8],edi
  41a191:	mov    eax,DWORD PTR [ebp-0x54]
  41a194:	xor    eax,ebx
  41a196:	add    eax,esi
  41a198:	jmp    0x41a28b
  41a19d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41a1a7:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41a1b1:	mov    eax,DWORD PTR [ebp-0x8]
  41a1b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1b7:	xor    eax,ebx
  41a1b9:	add    eax,esi
  41a1bb:	imul   eax,ecx
  41a1be:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1c1:	mov    al,BYTE PTR [eax+ecx*1]
  41a1c4:	mov    BYTE PTR [ebp-0x1],al
  41a1c7:	mov    eax,DWORD PTR [ebp-0x8]
  41a1ca:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1cd:	xor    eax,ebx
  41a1cf:	add    eax,esi
  41a1d1:	imul   eax,ecx
  41a1d4:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a1d7:	xor    ecx,ebx
  41a1d9:	add    eax,ecx
  41a1db:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1de:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a1e6:	mov    ecx,DWORD PTR [ebp-0xac]
  41a1ec:	xor    ecx,ebx
  41a1ee:	lea    eax,[ecx+eax*1+0x3272e0]
  41a1f5:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a1f9:	xor    ecx,eax
  41a1fb:	mov    BYTE PTR [ebp-0x1],cl
  41a1fe:	mov    al,BYTE PTR [ebp-0x1]
  41a201:	mov    ecx,DWORD PTR [ebp-0x8]
  41a204:	mov    edx,DWORD PTR [ebp-0x18]
  41a207:	xor    ecx,ebx
  41a209:	add    ecx,esi
  41a20b:	imul   ecx,edx
  41a20e:	mov    edx,DWORD PTR [ebp-0x1c]
  41a211:	mov    BYTE PTR [ecx+edx*1],al
  41a214:	mov    eax,DWORD PTR [ebp-0x8]
  41a217:	mov    ecx,DWORD PTR [ebp-0x18]
  41a21a:	xor    eax,ebx
  41a21c:	add    eax,esi
  41a21e:	imul   eax,ecx
  41a221:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a224:	mov    al,BYTE PTR [eax+ecx*1]
  41a227:	mov    BYTE PTR [ebp-0x1],al
  41a22a:	mov    eax,DWORD PTR [ebp-0x8]
  41a22d:	mov    ecx,DWORD PTR [ebp-0x18]
  41a230:	xor    eax,ebx
  41a232:	add    eax,esi
  41a234:	imul   eax,ecx
  41a237:	mov    ecx,DWORD PTR [ebp-0x10]
  41a23a:	xor    ecx,ebx
  41a23c:	add    eax,ecx
  41a23e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a241:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a249:	mov    ecx,DWORD PTR [ebp-0x9c]
  41a24f:	xor    ecx,ebx
  41a251:	lea    eax,[ecx+eax*1+0x3272e0]
  41a258:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a25c:	xor    ecx,eax
  41a25e:	mov    BYTE PTR [ebp-0x1],cl
  41a261:	mov    al,BYTE PTR [ebp-0x1]
  41a264:	mov    ecx,DWORD PTR [ebp-0x8]
  41a267:	mov    edx,DWORD PTR [ebp-0x18]
  41a26a:	xor    ecx,ebx
  41a26c:	add    ecx,esi
  41a26e:	imul   ecx,edx
  41a271:	mov    edx,DWORD PTR [ebp-0x1c]
  41a274:	mov    BYTE PTR [ecx+edx*1],al
  41a277:	mov    eax,DWORD PTR [ebp-0x2c]
  41a27a:	mov    ecx,DWORD PTR [ebp-0x10]
  41a27d:	xor    eax,ebx
  41a27f:	xor    ecx,ebx
  41a281:	add    eax,esi
  41a283:	add    ecx,esi
  41a285:	imul   eax,ecx
  41a288:	add    eax,DWORD PTR [ebp-0x18]
  41a28b:	mov    DWORD PTR [ebp-0x18],eax
  41a28e:	mov    eax,DWORD PTR [ebp-0x18]
  41a291:	mov    ecx,DWORD PTR [ebp-0x34]
  41a294:	cmp    ecx,eax
  41a296:	jb     0x41a19d
  41a29c:	mov    eax,DWORD PTR [ebp-0x10]
  41a29f:	mov    ecx,DWORD PTR [ebp-0x34]
  41a2a2:	xor    eax,ebx
  41a2a4:	add    eax,esi
  41a2a6:	imul   eax,ecx
  41a2a9:	mov    ecx,DWORD PTR [ebp-0x54]
  41a2ac:	xor    ecx,ebx
  41a2ae:	add    ecx,esi
  41a2b0:	or     eax,ecx
  41a2b2:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2b5:	xor    ecx,ebx
  41a2b7:	add    eax,ecx
  41a2b9:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2bc:	xor    ecx,ebx
  41a2be:	add    eax,ecx
  41a2c0:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2c3:	lea    eax,[eax+ecx*1+0x64e5c0]
  41a2ca:	jmp    0x41a2db
  41a2cc:	mov    eax,DWORD PTR [ebp-0x30]
  41a2cf:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2d2:	xor    eax,ebx
  41a2d4:	lea    eax,[eax+ecx*1+0x3272e0]
  41a2db:	mov    DWORD PTR [ebp-0xc],eax
  41a2de:	mov    eax,DWORD PTR [ebp-0x30]
  41a2e1:	xor    eax,ebx
  41a2e3:	mov    ecx,0xffcd8d20
  41a2e8:	sub    ecx,eax
  41a2ea:	add    ecx,DWORD PTR [ebp-0x38]
  41a2ed:	mov    eax,DWORD PTR [ebp-0x30]
  41a2f0:	mov    edx,DWORD PTR [ebp-0xc]
  41a2f3:	xor    eax,ebx
  41a2f5:	add    eax,esi
  41a2f7:	imul   eax,edx
  41a2fa:	cmp    eax,ecx
  41a2fc:	jbe    0x41a117
  41a302:	push   DWORD PTR [ebp+0x8]
  41a305:	mov    eax,DWORD PTR [ebp+0x8]
  41a308:	push   DWORD PTR [eax+0x1cc]
  41a30e:	lea    eax,[ebp-0xa0]
  41a314:	push   eax
  41a315:	mov    eax,DWORD PTR [ebp+0x8]
  41a318:	mov    eax,DWORD PTR [eax+0x1c4]
  41a31e:	push   DWORD PTR [eax]
  41a320:	mov    eax,DWORD PTR [ebp+0x8]
  41a323:	mov    eax,DWORD PTR [eax+0x1c0]
  41a329:	push   DWORD PTR [eax]
  41a32b:	push   DWORD PTR [ebp-0x40]
  41a32e:	push   DWORD PTR [ebp-0x28]
  41a331:	call   0x41ae07
  41a336:	mov    DWORD PTR [ebp-0x3c],eax
  41a339:	mov    eax,DWORD PTR [ebp-0x14]
  41a33c:	mov    ecx,DWORD PTR [ebp-0x28]
  41a33f:	xor    eax,ebx
  41a341:	add    eax,esi
  41a343:	cmp    eax,ecx
  41a345:	je     0x41a366
  41a347:	mov    eax,DWORD PTR [ebp+0x8]
  41a34a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a34d:	mov    eax,DWORD PTR [eax+0x1d8]
  41a353:	xor    ecx,ebx
  41a355:	add    ecx,esi
  41a357:	push   ecx
  41a358:	mov    ecx,DWORD PTR [ebp-0x14]
  41a35b:	xor    ecx,ebx
  41a35d:	add    ecx,esi
  41a35f:	push   ecx
  41a360:	push   DWORD PTR [ebp-0x28]
  41a363:	call   DWORD PTR [eax+0x18]
  41a366:	pop    edi
  41a367:	pop    esi
  41a368:	pop    ebx
  41a369:	leave  
  41a36a:	ret    0x4
  41a36d:	push   ebp
  41a36e:	mov    ebp,esp
  41a370:	push   ecx
  41a371:	push   ecx
  41a372:	lea    eax,[ebp-0x8]
  41a375:	mov    DWORD PTR [ebp-0x4],eax
  41a378:	push   esi
  41a379:	mov    esi,DWORD PTR [ebp-0x4]
  41a37c:	mov    eax,0xf881ba0f
  41a381:	mov    DWORD PTR [esi],eax
  41a383:	mov    esi,DWORD PTR [ebp-0x8]
  41a386:	cmp    esi,eax
  41a388:	pop    esi
  41a389:	jne    0x41a393
  41a38b:	mov    BYTE PTR [ecx+0xa],0x7a
  41a38f:	mov    BYTE PTR [edx+0x8],0x2f
  41a393:	mov    BYTE PTR [edx+0xa],0x7a
  41a397:	mov    BYTE PTR [ecx+0x2],0x4
  41a39b:	leave  
  41a39c:	ret    
  41a39d:	push   ebp
  41a39e:	mov    ebp,esp
  41a3a0:	push   ecx
  41a3a1:	push   ecx
  41a3a2:	lea    eax,[ebp-0x8]
  41a3a5:	mov    DWORD PTR [ebp-0x4],eax
  41a3a8:	mov    edx,DWORD PTR [ebp-0x4]
  41a3ab:	mov    eax,0xf88b0be3
  41a3b0:	mov    DWORD PTR [edx],eax
  41a3b2:	mov    edx,DWORD PTR [ebp-0x8]
  41a3b5:	cmp    edx,eax
  41a3b7:	jne    0x41a3c8
  41a3b9:	mov    eax,DWORD PTR [ebp+0x8]
  41a3bc:	mov    BYTE PTR [ecx+0x9],0xe
  41a3c0:	mov    BYTE PTR [eax+0x7],0x47
  41a3c4:	mov    BYTE PTR [ecx+0x6],0xf
  41a3c8:	mov    BYTE PTR [ecx+0x3],0x1e
  41a3cc:	leave  
  41a3cd:	ret    0x4
  41a3d0:	push   ebp
  41a3d1:	mov    ebp,esp
  41a3d3:	push   ecx
  41a3d4:	push   ecx
  41a3d5:	lea    eax,[ebp-0x8]
  41a3d8:	mov    DWORD PTR [ebp-0x4],eax
  41a3db:	mov    edx,DWORD PTR [ebp-0x4]
  41a3de:	mov    eax,0x7e0da0f
  41a3e3:	mov    DWORD PTR [edx],eax
  41a3e5:	mov    edx,DWORD PTR [ebp-0x8]
  41a3e8:	cmp    edx,eax
  41a3ea:	jne    0x41a3f0
  41a3ec:	mov    BYTE PTR [ecx+0x7],0x47
  41a3f0:	mov    eax,DWORD PTR [ebp+0x8]
  41a3f3:	mov    BYTE PTR [ecx+0x1],0x1
  41a3f7:	mov    BYTE PTR [eax+0x9],0x2e
  41a3fb:	leave  
  41a3fc:	ret    0x4
  41a3ff:	push   ebp
  41a400:	mov    ebp,esp
  41a402:	push   ecx
  41a403:	push   ecx
  41a404:	lea    eax,[ebp-0x8]
  41a407:	mov    DWORD PTR [ebp-0x4],eax
  41a40a:	push   esi
  41a40b:	mov    esi,DWORD PTR [ebp-0x4]
  41a40e:	mov    eax,0x7060e3e
  41a413:	mov    DWORD PTR [esi],eax
  41a415:	mov    esi,DWORD PTR [ebp-0x8]
  41a418:	cmp    esi,eax
  41a41a:	pop    esi
  41a41b:	jne    0x41a427
  41a41d:	mov    BYTE PTR [edx+0x4],0xb
  41a421:	mov    WORD PTR [ecx+0x3],0xb1e
  41a427:	mov    BYTE PTR [edx],0x3f
  41a42a:	leave  
  41a42b:	ret    
  41a42c:	push   ebp
  41a42d:	mov    ebp,esp
  41a42f:	push   ecx
  41a430:	push   ecx
  41a431:	lea    eax,[ebp-0x8]
  41a434:	mov    DWORD PTR [ebp-0x4],eax
  41a437:	mov    edx,DWORD PTR [ebp-0x4]
  41a43a:	mov    eax,0xf8870b3f
  41a43f:	mov    DWORD PTR [edx],eax
  41a441:	mov    edx,DWORD PTR [ebp-0x8]
  41a444:	cmp    edx,eax
  41a446:	jne    0x41a453
  41a448:	mov    eax,DWORD PTR [ebp+0x8]
  41a44b:	mov    BYTE PTR [ecx+0x8],0xf
  41a44f:	mov    BYTE PTR [eax+0x1],0x1
  41a453:	mov    BYTE PTR [ecx+0x5],0xf3
  41a457:	leave  
  41a458:	ret    0x4
  41a45b:	push   esi
  41a45c:	mov    ecx,edi
  41a45e:	call   0x41a42c
  41a463:	mov    edx,edi
  41a465:	mov    ecx,esi
  41a467:	mov    BYTE PTR [esi],0x1f
  41a46a:	call   0x41a3ff
  41a46f:	push   esi
  41a470:	mov    ecx,edi
  41a472:	mov    BYTE PTR [esi+0x5],0xf3
  41a476:	call   0x41a3d0
  41a47b:	push   esi
  41a47c:	mov    BYTE PTR [esi+0x6],0xf
  41a480:	call   0x41a39d
  41a485:	mov    BYTE PTR [esi+0x2],0x4
  41a489:	mov    edx,esi
  41a48b:	jmp    0x41a36d
  41a490:	push   ebp
  41a491:	mov    ebp,esp
  41a493:	push   ecx
  41a494:	mov    ecx,DWORD PTR [edx+0x194]
  41a49a:	push   esi
  41a49b:	mov    esi,DWORD PTR [ebp+0x8]
  41a49e:	mov    esi,DWORD PTR [esi]
  41a4a0:	mov    DWORD PTR [ecx],esi
  41a4a2:	mov    ecx,DWORD PTR [edx+0x194]
  41a4a8:	mov    ecx,DWORD PTR [ecx]
  41a4aa:	mov    esi,DWORD PTR [edx+0x190]
  41a4b0:	mov    DWORD PTR [esi],ecx
  41a4b2:	mov    eax,DWORD PTR [edx+0x194]
  41a4b8:	mov    ecx,DWORD PTR [eax]
  41a4ba:	mov    ecx,DWORD PTR [ecx+0x3c]
  41a4bd:	add    ecx,DWORD PTR [eax]
  41a4bf:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41a4c6:	mov    eax,DWORD PTR [ebp-0x4]
  41a4c9:	movzx  ecx,WORD PTR [ecx+0x16]
  41a4cd:	xor    eax,0x7510899
  41a4d2:	add    eax,0x3272e0
  41a4d7:	pop    esi
  41a4d8:	test   ecx,eax
  41a4da:	je     0x41a4e8
  41a4dc:	mov    eax,DWORD PTR [edx+0x1c8]
  41a4e2:	mov    DWORD PTR [eax],0xf89c85b8
  41a4e8:	leave  
  41a4e9:	ret    0x4
  41a4ec:	push   ebp
  41a4ed:	mov    ebp,esp
  41a4ef:	sub    esp,0x70
  41a4f2:	and    DWORD PTR [ebp-0x20],0x0
  41a4f6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41a4fd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41a504:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41a50b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41a512:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41a519:	mov    eax,DWORD PTR [ebp+0x20]
  41a51c:	mov    eax,DWORD PTR [eax+0x194]
  41a522:	mov    DWORD PTR [ebp-0xc],eax
  41a525:	mov    eax,DWORD PTR [ebp+0x20]
  41a528:	push   ebx
  41a529:	push   esi
  41a52a:	mov    esi,DWORD PTR [eax+0x190]
  41a530:	mov    eax,DWORD PTR [ebp+0x20]
  41a533:	mov    eax,DWORD PTR [eax+0x18c]
  41a539:	mov    DWORD PTR [ebp-0x8],eax
  41a53c:	mov    eax,DWORD PTR [eax]
  41a53e:	push   edi
  41a53f:	mov    DWORD PTR [ebp-0x4],esi
  41a542:	test   eax,eax
  41a544:	jne    0x41a551
  41a546:	push   DWORD PTR [ebp+0x1c]
  41a549:	mov    edx,DWORD PTR [ebp+0x20]
  41a54c:	call   0x41a490
  41a551:	mov    eax,DWORD PTR [esi]
  41a553:	mov    ebx,DWORD PTR [esi]
  41a555:	add    ebx,DWORD PTR [eax+0x3c]
  41a558:	mov    eax,DWORD PTR [ebp+0xc]
  41a55b:	mov    ecx,DWORD PTR [ebp-0x8]
  41a55e:	mov    ecx,DWORD PTR [ecx]
  41a560:	mov    esi,0x7510899
  41a565:	xor    eax,esi
  41a567:	mov    edi,0x3272e0
  41a56c:	add    eax,edi
  41a56e:	cmp    eax,ecx
  41a570:	jne    0x41a7a8
  41a576:	mov    eax,DWORD PTR [ebp-0xc]
  41a579:	mov    eax,DWORD PTR [eax]
  41a57b:	mov    DWORD PTR [ebp-0x10],eax
  41a57e:	mov    eax,DWORD PTR [ebx+0x50]
  41a581:	mov    DWORD PTR [ebp-0x68],eax
  41a584:	mov    eax,DWORD PTR [ebp-0x18]
  41a587:	xor    eax,esi
  41a589:	add    eax,edi
  41a58b:	mov    DWORD PTR [ebp-0x64],eax
  41a58e:	mov    eax,DWORD PTR [ebp-0x14]
  41a591:	and    DWORD PTR [ebp-0x6c],0x0
  41a595:	xor    eax,esi
  41a597:	add    eax,edi
  41a599:	mov    DWORD PTR [ebp-0x60],eax
  41a59c:	lea    eax,[ebp-0x70]
  41a59f:	push   eax
  41a5a0:	mov    eax,DWORD PTR [ebp+0x8]
  41a5a3:	xor    eax,esi
  41a5a5:	add    eax,edi
  41a5a7:	push   eax
  41a5a8:	mov    eax,DWORD PTR [ebp+0x20]
  41a5ab:	add    eax,0xaa
  41a5b0:	push   eax
  41a5b1:	mov    eax,DWORD PTR [ebp+0x20]
  41a5b4:	mov    eax,DWORD PTR [eax+0x198]
  41a5ba:	mov    DWORD PTR [ebp-0x70],0x4
  41a5c1:	push   DWORD PTR [eax]
  41a5c3:	mov    eax,DWORD PTR [ebp+0x10]
  41a5c6:	call   eax
  41a5c8:	mov    ecx,DWORD PTR [ebp-0xc]
  41a5cb:	mov    ecx,DWORD PTR [ecx]
  41a5cd:	mov    edx,DWORD PTR [ebp-0x8]
  41a5d0:	mov    DWORD PTR [ebp-0x6c],eax
  41a5d3:	mov    DWORD PTR [ebp+0x1c],eax
  41a5d6:	mov    DWORD PTR [edx],ecx
  41a5d8:	mov    ecx,DWORD PTR [ebp-0x4]
  41a5db:	mov    DWORD PTR [ecx],eax
  41a5dd:	mov    eax,DWORD PTR [ebx+0x50]
  41a5e0:	mov    DWORD PTR [ebp-0x68],eax
  41a5e3:	mov    eax,DWORD PTR [ebp-0x1c]
  41a5e6:	xor    eax,esi
  41a5e8:	add    eax,edi
  41a5ea:	mov    DWORD PTR [ebp-0x64],eax
  41a5ed:	lea    eax,[ebp-0x20]
  41a5f0:	mov    DWORD PTR [ebp-0x60],eax
  41a5f3:	lea    eax,[ebp-0x70]
  41a5f6:	push   eax
  41a5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41a5fa:	xor    eax,esi
  41a5fc:	add    eax,edi
  41a5fe:	push   eax
  41a5ff:	mov    eax,DWORD PTR [ebp+0x20]
  41a602:	add    eax,0xee
  41a607:	push   eax
  41a608:	mov    eax,DWORD PTR [ebp+0x20]
  41a60b:	mov    eax,DWORD PTR [eax+0x198]
  41a611:	mov    DWORD PTR [ebp-0x70],0x4
  41a618:	push   DWORD PTR [eax]
  41a61a:	mov    eax,DWORD PTR [ebp+0x10]
  41a61d:	call   eax
  41a61f:	test   eax,eax
  41a621:	je     0x41a646
  41a623:	and    DWORD PTR [ebp+0xc],0x0
  41a627:	cmp    DWORD PTR [ebx+0x50],0x0
  41a62b:	jbe    0x41a646
  41a62d:	mov    eax,DWORD PTR [ebp+0x1c]
  41a630:	mov    ecx,DWORD PTR [ebp-0x10]
  41a633:	sub    ecx,eax
  41a635:	mov    dl,BYTE PTR [ecx+eax*1]
  41a638:	inc    DWORD PTR [ebp+0xc]
  41a63b:	mov    BYTE PTR [eax],dl
  41a63d:	mov    edx,DWORD PTR [ebp+0xc]
  41a640:	inc    eax
  41a641:	cmp    edx,DWORD PTR [ebx+0x50]
  41a644:	jb     0x41a635
  41a646:	mov    edx,DWORD PTR [ebp+0x1c]
  41a649:	mov    ecx,DWORD PTR [edx+0x3c]
  41a64c:	add    ecx,edx
  41a64e:	mov    eax,DWORD PTR [ecx+0xa0]
  41a654:	mov    ebx,DWORD PTR [ecx+0x28]
  41a657:	add    eax,edx
  41a659:	sub    edx,DWORD PTR [ebp-0x10]
  41a65c:	add    ebx,DWORD PTR [ebp+0x1c]
  41a65f:	mov    DWORD PTR [ebp+0xc],edx
  41a662:	mov    DWORD PTR [ebp-0x2c],ecx
  41a665:	mov    DWORD PTR [ebp-0x14],ebx
  41a668:	mov    DWORD PTR [ebp-0x8],0x0
  41a66f:	jmp    0x41a6eb
  41a671:	add    edx,0xfffffff8
  41a674:	shr    edx,1
  41a676:	mov    DWORD PTR [ebp-0x18],edx
  41a679:	je     0x41a6d7
  41a67b:	lea    edx,[eax+0x8]
  41a67e:	mov    DWORD PTR [ebp-0x4],edx
  41a681:	mov    edx,DWORD PTR [ebp-0x18]
  41a684:	mov    DWORD PTR [ebp-0x18],edx
  41a687:	mov    edx,DWORD PTR [ebp-0x4]
  41a68a:	movzx  edx,WORD PTR [edx]
  41a68d:	mov    DWORD PTR [ebp-0x24],edx
  41a690:	and    edx,0xfff
  41a696:	mov    DWORD PTR [ebp-0x28],edx
  41a699:	mov    edx,DWORD PTR [ebp-0x24]
  41a69c:	shr    edx,0xc
  41a69f:	add    edx,0xffcd8d20
  41a6a5:	xor    edx,esi
  41a6a7:	cmp    edx,0xf89c85ba
  41a6ad:	jne    0x41a6ce
  41a6af:	mov    edx,DWORD PTR [ebp-0x28]
  41a6b2:	add    edx,DWORD PTR [ebp+0x1c]
  41a6b5:	mov    ebx,DWORD PTR [eax]
  41a6b7:	cmp    DWORD PTR [ebx+edx*1],0x0
  41a6bb:	je     0x41a6cb
  41a6bd:	mov    ecx,DWORD PTR [ebp+0xc]
  41a6c0:	add    ecx,DWORD PTR [ebx+edx*1]
  41a6c3:	mov    ebx,DWORD PTR [eax]
  41a6c5:	mov    DWORD PTR [edx+ebx*1],ecx
  41a6c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41a6cb:	mov    ebx,DWORD PTR [ebp-0x14]
  41a6ce:	add    DWORD PTR [ebp-0x4],0x2
  41a6d2:	dec    DWORD PTR [ebp-0x18]
  41a6d5:	jne    0x41a687
  41a6d7:	mov    edx,DWORD PTR [ebp-0xc]
  41a6da:	add    DWORD PTR [ebp-0x8],edx
  41a6dd:	mov    edx,DWORD PTR [ebp-0x8]
  41a6e0:	cmp    edx,DWORD PTR [ecx+0xa4]
  41a6e6:	jae    0x41a6f9
  41a6e8:	add    eax,DWORD PTR [ebp-0xc]
  41a6eb:	mov    edx,DWORD PTR [eax+0x4]
  41a6ee:	mov    DWORD PTR [ebp-0xc],edx
  41a6f1:	test   edx,edx
  41a6f3:	jne    0x41a671
  41a6f9:	mov    eax,DWORD PTR [ebp-0x10]
  41a6fc:	mov    DWORD PTR [ebp-0x6c],eax
  41a6ff:	mov    DWORD PTR [ebp-0x70],0x4
  41a706:	mov    eax,DWORD PTR [ecx+0x50]
  41a709:	mov    DWORD PTR [ebp-0x68],eax
  41a70c:	mov    eax,DWORD PTR [ebp-0x1c]
  41a70f:	xor    eax,esi
  41a711:	add    eax,edi
  41a713:	mov    DWORD PTR [ebp-0x64],eax
  41a716:	lea    eax,[ebp-0x20]
  41a719:	mov    DWORD PTR [ebp-0x60],eax
  41a71c:	lea    eax,[ebp-0x70]
  41a71f:	push   eax
  41a720:	mov    eax,DWORD PTR [ebp+0x8]
  41a723:	xor    eax,esi
  41a725:	add    eax,edi
  41a727:	push   eax
  41a728:	mov    eax,DWORD PTR [ebp+0x20]
  41a72b:	add    eax,0xee
  41a730:	push   eax
  41a731:	mov    eax,DWORD PTR [ebp+0x20]
  41a734:	mov    eax,DWORD PTR [eax+0x198]
  41a73a:	push   DWORD PTR [eax]
  41a73c:	mov    eax,DWORD PTR [ebp+0x10]
  41a73f:	call   eax
  41a741:	mov    eax,DWORD PTR [ebp+0x20]
  41a744:	mov    eax,DWORD PTR [eax+0x180]
  41a74a:	add    eax,DWORD PTR [ebp+0xc]
  41a74d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a750:	push   DWORD PTR [ebp+0x18]
  41a753:	mov    DWORD PTR [eax],ecx
  41a755:	push   DWORD PTR [ebp+0x14]
  41a758:	push   DWORD PTR [ebp+0x1c]
  41a75b:	call   ebx
  41a75d:	mov    eax,DWORD PTR [ebp+0xc]
  41a760:	add    eax,DWORD PTR [ebp+0x20]
  41a763:	lea    ecx,[ebp+0x4]
  41a766:	mov    DWORD PTR [ebp+0x20],eax
  41a769:	mov    eax,DWORD PTR [ebp+0x20]
  41a76c:	mov    eax,DWORD PTR [ebp+0x20]
  41a76f:	mov    edx,DWORD PTR [eax+0x190]
  41a775:	mov    eax,DWORD PTR [ebp+0x20]
  41a778:	mov    eax,DWORD PTR [eax+0x18c]
  41a77e:	mov    esi,DWORD PTR [eax]
  41a780:	cmp    DWORD PTR [ecx],esi
  41a782:	jb     0x41a7a3
  41a784:	mov    esi,DWORD PTR [edx]
  41a786:	mov    edi,DWORD PTR [edx]
  41a788:	mov    esi,DWORD PTR [esi+0x3c]
  41a78b:	lea    esi,[edi+esi*1+0x50]
  41a78f:	mov    edi,DWORD PTR [eax]
  41a791:	add    edi,DWORD PTR [esi]
  41a793:	cmp    DWORD PTR [ecx],edi
  41a795:	jae    0x41a7a3
  41a797:	mov    esi,DWORD PTR [eax]
  41a799:	mov    eax,DWORD PTR [ecx]
  41a79b:	mov    edx,DWORD PTR [edx]
  41a79d:	sub    eax,esi
  41a79f:	add    edx,eax
  41a7a1:	mov    DWORD PTR [ecx],edx
  41a7a3:	mov    eax,DWORD PTR [ebp+0xc]
  41a7a6:	jmp    0x41a7e9
  41a7a8:	push   DWORD PTR [ebp+0x20]
  41a7ab:	call   0x419782
  41a7b0:	mov    eax,DWORD PTR [ebp+0x20]
  41a7b3:	mov    eax,DWORD PTR [eax+0x1c8]
  41a7b9:	mov    eax,DWORD PTR [eax]
  41a7bb:	xor    eax,esi
  41a7bd:	add    eax,edi
  41a7bf:	mov    eax,DWORD PTR [ebp+0x20]
  41a7c2:	jne    0x41a7da
  41a7c4:	mov    ecx,DWORD PTR [ebp+0x20]
  41a7c7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41a7cd:	push   DWORD PTR [ecx]
  41a7cf:	mov    eax,DWORD PTR [eax+0x1d8]
  41a7d5:	call   DWORD PTR [eax+0x28]
  41a7d8:	jmp    0x41a7e7
  41a7da:	mov    eax,DWORD PTR [eax+0x17c]
  41a7e0:	mov    ecx,DWORD PTR [eax]
  41a7e2:	lea    eax,[ebp+0x4]
  41a7e5:	add    DWORD PTR [eax],ecx
  41a7e7:	xor    eax,eax
  41a7e9:	pop    edi
  41a7ea:	pop    esi
  41a7eb:	pop    ebx
  41a7ec:	leave  
  41a7ed:	ret    0x1c
  41a7f0:	push   ebp
  41a7f1:	mov    ebp,esp
  41a7f3:	sub    esp,0x1c
  41a7f6:	push   esi
  41a7f7:	mov    esi,eax
  41a7f9:	mov    eax,DWORD PTR [ecx+0x190]
  41a7ff:	cmp    DWORD PTR [eax],0x0
  41a802:	je     0x41a912
  41a808:	test   edx,edx
  41a80a:	je     0x41a912
  41a810:	test   esi,esi
  41a812:	je     0x41a912
  41a818:	mov    eax,DWORD PTR [esi+0x88]
  41a81e:	test   eax,eax
  41a820:	je     0x41a90d
  41a826:	cmp    DWORD PTR [esi+0x8c],0x10
  41a82d:	je     0x41a90d
  41a833:	cmp    DWORD PTR [esi+0x34],edx
  41a836:	je     0x41a90d
  41a83c:	mov    esi,DWORD PTR [ecx+0x18c]
  41a842:	and    DWORD PTR [ebp-0x10],0x0
  41a846:	mov    ecx,edx
  41a848:	sub    ecx,DWORD PTR [esi]
  41a84a:	add    eax,edx
  41a84c:	movzx  edx,WORD PTR [eax+0xc]
  41a850:	mov    DWORD PTR [ebp-0x1c],ecx
  41a853:	movzx  ecx,WORD PTR [eax+0xe]
  41a857:	add    ecx,edx
  41a859:	je     0x41a90d
  41a85f:	lea    ecx,[eax+0x14]
  41a862:	push   ebx
  41a863:	mov    DWORD PTR [ebp-0x18],ecx
  41a866:	mov    esi,0x7fffffff
  41a86b:	push   edi
  41a86c:	test   DWORD PTR [ecx],esi
  41a86e:	je     0x41a8ef
  41a870:	mov    edx,DWORD PTR [ecx]
  41a872:	and    DWORD PTR [ebp-0xc],0x0
  41a876:	and    edx,esi
  41a878:	add    edx,eax
  41a87a:	movzx  edi,WORD PTR [edx+0xe]
  41a87e:	movzx  ebx,WORD PTR [edx+0xc]
  41a882:	add    edi,ebx
  41a884:	je     0x41a8ef
  41a886:	lea    ecx,[edx+0x14]
  41a889:	mov    DWORD PTR [ebp-0x14],ecx
  41a88c:	test   DWORD PTR [ecx],esi
  41a88e:	je     0x41a8d1
  41a890:	mov    ecx,DWORD PTR [ecx]
  41a892:	and    DWORD PTR [ebp-0x8],0x0
  41a896:	and    ecx,esi
  41a898:	add    ecx,eax
  41a89a:	movzx  edi,WORD PTR [ecx+0xe]
  41a89e:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8a2:	add    edi,ebx
  41a8a4:	je     0x41a8d1
  41a8a6:	lea    edi,[ecx+0x14]
  41a8a9:	mov    DWORD PTR [ebp-0x4],edi
  41a8ac:	mov    edi,DWORD PTR [ebp-0x4]
  41a8af:	mov    edi,DWORD PTR [edi]
  41a8b1:	test   edi,edi
  41a8b3:	je     0x41a8bb
  41a8b5:	mov    ebx,DWORD PTR [ebp-0x1c]
  41a8b8:	add    DWORD PTR [edi+eax*1],ebx
  41a8bb:	movzx  edi,WORD PTR [ecx+0xe]
  41a8bf:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8c3:	inc    DWORD PTR [ebp-0x8]
  41a8c6:	add    DWORD PTR [ebp-0x4],0x8
  41a8ca:	add    edi,ebx
  41a8cc:	cmp    DWORD PTR [ebp-0x8],edi
  41a8cf:	jb     0x41a8ac
  41a8d1:	movzx  edi,WORD PTR [edx+0xe]
  41a8d5:	movzx  ebx,WORD PTR [edx+0xc]
  41a8d9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8dc:	inc    DWORD PTR [ebp-0xc]
  41a8df:	add    ecx,0x8
  41a8e2:	add    edi,ebx
  41a8e4:	mov    DWORD PTR [ebp-0x14],ecx
  41a8e7:	cmp    DWORD PTR [ebp-0xc],edi
  41a8ea:	jb     0x41a88c
  41a8ec:	mov    ecx,DWORD PTR [ebp-0x18]
  41a8ef:	movzx  edx,WORD PTR [eax+0xe]
  41a8f3:	movzx  edi,WORD PTR [eax+0xc]
  41a8f7:	inc    DWORD PTR [ebp-0x10]
  41a8fa:	add    ecx,0x8
  41a8fd:	add    edx,edi
  41a8ff:	mov    DWORD PTR [ebp-0x18],ecx
  41a902:	cmp    DWORD PTR [ebp-0x10],edx
  41a905:	jb     0x41a86c
  41a90b:	pop    edi
  41a90c:	pop    ebx
  41a90d:	xor    eax,eax
  41a90f:	inc    eax
  41a910:	jmp    0x41a914
  41a912:	xor    eax,eax
  41a914:	pop    esi
  41a915:	leave  
  41a916:	ret    
  41a917:	push   ebp
  41a918:	mov    ebp,esp
  41a91a:	mov    ecx,DWORD PTR [ecx+0x190]
  41a920:	mov    eax,DWORD PTR [ebp+0xc]
  41a923:	sub    esp,0x10
  41a926:	push   ebx
  41a927:	xor    ebx,ebx
  41a929:	push   esi
  41a92a:	push   edi
  41a92b:	cmp    DWORD PTR [ecx],ebx
  41a92d:	je     0x41a9b5
  41a933:	cmp    eax,ebx
  41a935:	je     0x41a9b5
  41a937:	cmp    DWORD PTR [eax+0x78],ebx
  41a93a:	jne    0x41a941
  41a93c:	xor    eax,eax
  41a93e:	inc    eax
  41a93f:	jmp    0x41a9b7
  41a941:	mov    eax,DWORD PTR [eax+0x78]
  41a944:	add    eax,DWORD PTR [ebp+0x8]
  41a947:	mov    ecx,DWORD PTR [eax+0x1c]
  41a94a:	mov    edx,DWORD PTR [eax+0x24]
  41a94d:	mov    esi,DWORD PTR [eax+0x14]
  41a950:	mov    edi,DWORD PTR [eax+0x18]
  41a953:	add    ecx,DWORD PTR [ebp+0x8]
  41a956:	add    edx,DWORD PTR [ebp+0x8]
  41a959:	mov    DWORD PTR [ebp-0x4],esi
  41a95c:	cmp    esi,edi
  41a95e:	ja     0x41a963
  41a960:	mov    DWORD PTR [ebp-0x4],edi
  41a963:	mov    DWORD PTR [ebp-0x8],ebx
  41a966:	cmp    DWORD PTR [ebp-0x4],ebx
  41a969:	jbe    0x41a93c
  41a96b:	cmp    ebx,DWORD PTR [eax+0x14]
  41a96e:	jae    0x41a976
  41a970:	movzx  esi,WORD PTR [edx+ebx*2]
  41a974:	jmp    0x41a978
  41a976:	mov    esi,ebx
  41a978:	lea    esi,[ecx+esi*4]
  41a97b:	mov    edi,DWORD PTR [esi]
  41a97d:	test   edi,edi
  41a97f:	je     0x41a9aa
  41a981:	add    edi,DWORD PTR [ebp+0x8]
  41a984:	mov    DWORD PTR [ebp-0x10],edi
  41a987:	cmp    edi,eax
  41a989:	jbe    0x41a99b
  41a98b:	mov    ebx,DWORD PTR [ebp+0xc]
  41a98e:	mov    ebx,DWORD PTR [ebx+0x7c]
  41a991:	add    ebx,eax
  41a993:	cmp    edi,ebx
  41a995:	jae    0x41a99b
  41a997:	mov    esi,DWORD PTR [esi]
  41a999:	jmp    0x41a9a3
  41a99b:	sub    edi,DWORD PTR [ebp+0x8]
  41a99e:	mov    DWORD PTR [esi],edi
  41a9a0:	mov    esi,DWORD PTR [ebp-0x10]
  41a9a3:	test   esi,esi
  41a9a5:	je     0x41a9b5
  41a9a7:	mov    ebx,DWORD PTR [ebp-0x8]
  41a9aa:	inc    ebx
  41a9ab:	mov    DWORD PTR [ebp-0x8],ebx
  41a9ae:	cmp    ebx,DWORD PTR [ebp-0x4]
  41a9b1:	jb     0x41a96b
  41a9b3:	jmp    0x41a93c
  41a9b5:	xor    eax,eax
  41a9b7:	pop    edi
  41a9b8:	pop    esi
  41a9b9:	pop    ebx
  41a9ba:	leave  
  41a9bb:	ret    0x8
  41a9be:	push   ebp
  41a9bf:	mov    ebp,esp
  41a9c1:	sub    esp,0x2c
  41a9c4:	mov    edx,0xf89c85b9
  41a9c9:	mov    DWORD PTR [ebp-0x4],edx
  41a9cc:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41a9d3:	mov    eax,DWORD PTR [ebp-0x4]
  41a9d6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9d9:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9dc:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9df:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e2:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e5:	push   ebx
  41a9e6:	mov    ebx,DWORD PTR [ebp+0x10]
  41a9e9:	push   esi
  41a9ea:	mov    esi,0x7510899
  41a9ef:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41a9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9f9:	mov    ebx,DWORD PTR [ebx+0x190]
  41a9ff:	push   edi
  41aa00:	mov    edi,0x3272e0
  41aa05:	xor    ecx,esi
  41aa07:	xor    eax,esi
  41aa09:	add    eax,edi
  41aa0b:	add    ecx,edi
  41aa0d:	mov    DWORD PTR [ebp-0x18],eax
  41aa10:	cmp    ecx,DWORD PTR [ebx]
  41aa12:	je     0x41ac93
  41aa18:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa1b:	mov    ecx,DWORD PTR [ebp+0xc]
  41aa1e:	xor    ebx,esi
  41aa20:	add    ebx,edi
  41aa22:	cmp    ebx,ecx
  41aa24:	je     0x41ac93
  41aa2a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa2d:	mov    ecx,DWORD PTR [ecx+0x80]
  41aa33:	xor    ebx,esi
  41aa35:	add    ebx,edi
  41aa37:	cmp    ecx,ebx
  41aa39:	je     0x41ac8e
  41aa3f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa42:	mov    DWORD PTR [ebp-0x2c],ecx
  41aa45:	mov    ebx,edx
  41aa47:	xor    ebx,esi
  41aa49:	add    ebx,edi
  41aa4b:	mov    DWORD PTR [ebp-0x10],ebx
  41aa4e:	mov    ebx,DWORD PTR [ebp-0x10]
  41aa51:	cmp    ebx,edx
  41aa53:	je     0x41aa67
  41aa55:	mov    edx,DWORD PTR [ebp-0x10]
  41aa58:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa5b:	imul   edx,edx,0x14
  41aa5e:	xor    ebx,esi
  41aa60:	add    ebx,edi
  41aa62:	cmp    DWORD PTR [edx+ecx*1],ebx
  41aa65:	jne    0x41aa7e
  41aa67:	mov    edx,DWORD PTR [ebp-0x10]
  41aa6a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa6d:	imul   edx,edx,0x14
  41aa70:	xor    ebx,esi
  41aa72:	add    ebx,edi
  41aa74:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41aa78:	je     0x41ac80
  41aa7e:	mov    eax,DWORD PTR [ebp-0x4]
  41aa81:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa84:	mov    eax,DWORD PTR [ebp-0x10]
  41aa87:	imul   eax,eax,0x14
  41aa8a:	add    eax,ecx
  41aa8c:	mov    ecx,DWORD PTR [eax+0x10]
  41aa8f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa92:	xor    ebx,esi
  41aa94:	mov    DWORD PTR [ebp-0x1c],ecx
  41aa97:	mov    ecx,DWORD PTR [ebp-0x4]
  41aa9a:	mov    edx,DWORD PTR [ebp-0x4]
  41aa9d:	xor    ecx,esi
  41aa9f:	add    ecx,edi
  41aaa1:	xor    edx,esi
  41aaa3:	mov    DWORD PTR [ebp-0x24],ecx
  41aaa6:	mov    ecx,DWORD PTR [eax]
  41aaa8:	add    edx,edi
  41aaaa:	add    ebx,edi
  41aaac:	cmp    ecx,edx
  41aaae:	je     0x41aab6
  41aab0:	add    ecx,DWORD PTR [ebp+0x8]
  41aab3:	mov    DWORD PTR [ebp-0x24],ecx
  41aab6:	mov    ecx,DWORD PTR [ebp-0x4]
  41aab9:	xor    ecx,esi
  41aabb:	add    ecx,DWORD PTR [eax+0xc]
  41aabe:	mov    eax,DWORD PTR [ebp+0x8]
  41aac1:	lea    eax,[ecx+eax*1+0x3272e0]
  41aac8:	mov    DWORD PTR [ebp+0xc],eax
  41aacb:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41aad2:	mov    eax,DWORD PTR [ebp+0x10]
  41aad5:	push   DWORD PTR [ebp+0xc]
  41aad8:	mov    eax,DWORD PTR [eax+0x1d8]
  41aade:	call   DWORD PTR [eax]
  41aae0:	mov    ecx,DWORD PTR [ebp-0x4]
  41aae3:	xor    ecx,esi
  41aae5:	add    ecx,edi
  41aae7:	mov    DWORD PTR [ebp-0xc],eax
  41aaea:	cmp    ecx,eax
  41aaec:	jne    0x41ab00
  41aaee:	mov    eax,DWORD PTR [ebp+0x10]
  41aaf1:	push   DWORD PTR [ebp+0xc]
  41aaf4:	mov    eax,DWORD PTR [eax+0x1d8]
  41aafa:	call   DWORD PTR [eax+0xc]
  41aafd:	mov    DWORD PTR [ebp-0xc],eax
  41ab00:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41ab07:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41ab0e:	mov    eax,DWORD PTR [ebp-0x4]
  41ab11:	xor    eax,esi
  41ab13:	add    eax,edi
  41ab15:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab18:	jne    0x41ab3d
  41ab1a:	mov    eax,DWORD PTR [ebp-0x8]
  41ab1d:	mov    ecx,DWORD PTR [ebp-0x20]
  41ab20:	xor    eax,esi
  41ab22:	xor    ecx,esi
  41ab24:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ab2b:	mov    eax,DWORD PTR [ebp+0x10]
  41ab2e:	mov    eax,DWORD PTR [eax+0x1d8]
  41ab34:	add    ecx,edi
  41ab36:	imul   ecx,ebx
  41ab39:	push   ecx
  41ab3a:	call   DWORD PTR [eax+0x24]
  41ab3d:	mov    eax,DWORD PTR [ebp-0x4]
  41ab40:	xor    eax,esi
  41ab42:	add    eax,edi
  41ab44:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab47:	jne    0x41ab58
  41ab49:	mov    eax,DWORD PTR [ebp-0x28]
  41ab4c:	xor    eax,esi
  41ab4e:	add    eax,edi
  41ab50:	cmp    ebx,eax
  41ab52:	jbe    0x41aad2
  41ab58:	mov    eax,DWORD PTR [ebp-0x4]
  41ab5b:	xor    eax,esi
  41ab5d:	add    eax,edi
  41ab5f:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab62:	jne    0x41ab7b
  41ab64:	mov    eax,DWORD PTR [ebp-0x8]
  41ab67:	mov    ecx,DWORD PTR [ebp-0x18]
  41ab6a:	xor    eax,esi
  41ab6c:	lea    eax,[ecx+eax*1+0x3272e0]
  41ab73:	mov    DWORD PTR [ebp-0x18],eax
  41ab76:	jmp    0x41ac6a
  41ab7b:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41ab82:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ab89:	mov    ebx,DWORD PTR [ebp-0x4]
  41ab8c:	xor    ebx,esi
  41ab8e:	add    ebx,edi
  41ab90:	jmp    0x41ac57
  41ab95:	mov    eax,DWORD PTR [ebp-0x4]
  41ab98:	xor    eax,esi
  41ab9a:	add    eax,edi
  41ab9c:	mov    DWORD PTR [ebp-0x14],eax
  41ab9f:	mov    eax,DWORD PTR [ebp-0x4]
  41aba2:	xor    eax,esi
  41aba4:	add    eax,edi
  41aba6:	mov    DWORD PTR [ebp+0xc],eax
  41aba9:	mov    ecx,DWORD PTR [ebp-0x4]
  41abac:	mov    eax,DWORD PTR [ebp-0x24]
  41abaf:	xor    ecx,esi
  41abb1:	add    ecx,edi
  41abb3:	cmp    ecx,eax
  41abb5:	je     0x41abbd
  41abb7:	mov    eax,DWORD PTR [eax+ebx*4]
  41abba:	mov    DWORD PTR [ebp-0x14],eax
  41abbd:	mov    eax,DWORD PTR [ebp-0x1c]
  41abc0:	mov    eax,DWORD PTR [eax+ebx*4]
  41abc3:	mov    DWORD PTR [ebp+0xc],eax
  41abc6:	mov    eax,DWORD PTR [ebp-0x4]
  41abc9:	mov    ecx,DWORD PTR [ebp-0x14]
  41abcc:	xor    eax,esi
  41abce:	add    eax,edi
  41abd0:	cmp    eax,ecx
  41abd2:	je     0x41abfd
  41abd4:	mov    eax,DWORD PTR [ebp-0x4]
  41abd7:	mov    ecx,DWORD PTR [ebp-0x14]
  41abda:	xor    eax,esi
  41abdc:	add    eax,edi
  41abde:	shr    ecx,0x1f
  41abe1:	cmp    eax,ecx
  41abe3:	je     0x41abfd
  41abe5:	mov    ecx,DWORD PTR [ebp-0x14]
  41abe8:	mov    eax,DWORD PTR [ebp+0x10]
  41abeb:	mov    eax,DWORD PTR [eax+0x1d8]
  41abf1:	movzx  ecx,cx
  41abf4:	push   ecx
  41abf5:	push   DWORD PTR [ebp-0xc]
  41abf8:	call   DWORD PTR [eax+0x8]
  41abfb:	jmp    0x41ac16
  41abfd:	mov    eax,DWORD PTR [ebp+0xc]
  41ac00:	add    eax,DWORD PTR [ebp+0x8]
  41ac03:	mov    ecx,DWORD PTR [ebp+0x10]
  41ac06:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ac0c:	add    eax,0x2
  41ac0f:	push   eax
  41ac10:	push   DWORD PTR [ebp-0xc]
  41ac13:	call   DWORD PTR [ecx+0x8]
  41ac16:	mov    DWORD PTR [ebp+0xc],eax
  41ac19:	mov    eax,DWORD PTR [ebp-0x4]
  41ac1c:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac1f:	xor    eax,esi
  41ac21:	add    eax,edi
  41ac23:	cmp    eax,ecx
  41ac25:	mov    eax,DWORD PTR [ebp-0x8]
  41ac28:	jne    0x41ac3b
  41ac2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41ac2d:	xor    eax,esi
  41ac2f:	lea    eax,[ecx+eax*1+0x3272e0]
  41ac36:	mov    DWORD PTR [ebp-0x18],eax
  41ac39:	jmp    0x41ac4b
  41ac3b:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac3e:	xor    eax,esi
  41ac40:	add    eax,edi
  41ac42:	imul   eax,ecx
  41ac45:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac48:	mov    DWORD PTR [ecx+ebx*4],eax
  41ac4b:	mov    eax,DWORD PTR [ebp-0x8]
  41ac4e:	xor    eax,esi
  41ac50:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ac57:	mov    eax,DWORD PTR [ebp-0x4]
  41ac5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac5d:	xor    eax,esi
  41ac5f:	add    eax,edi
  41ac61:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ac64:	jne    0x41ab95
  41ac6a:	mov    edx,DWORD PTR [ebp-0x10]
  41ac6d:	mov    eax,DWORD PTR [ebp-0x18]
  41ac70:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ac73:	sub    edx,0x3272df
  41ac79:	xor    edx,esi
  41ac7b:	jmp    0x41aa45
  41ac80:	mov    ecx,DWORD PTR [ebp-0x4]
  41ac83:	xor    ecx,esi
  41ac85:	add    ecx,edi
  41ac87:	cmp    eax,ecx
  41ac89:	mov    eax,DWORD PTR [ebp-0x4]
  41ac8c:	jne    0x41ac96
  41ac8e:	mov    eax,DWORD PTR [ebp-0x8]
  41ac91:	jmp    0x41ac96
  41ac93:	mov    eax,DWORD PTR [ebp-0x4]
  41ac96:	xor    eax,esi
  41ac98:	add    eax,edi
  41ac9a:	pop    edi
  41ac9b:	pop    esi
  41ac9c:	pop    ebx
  41ac9d:	leave  
  41ac9e:	ret    0xc
  41aca1:	push   ebp
  41aca2:	mov    ebp,esp
  41aca4:	sub    esp,0x28
  41aca7:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41acae:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41acb5:	mov    eax,DWORD PTR [ebp+0xc]
  41acb8:	mov    DWORD PTR [ebp+0xc],eax
  41acbb:	push   esi
  41acbc:	mov    eax,eax
  41acbe:	mov    eax,DWORD PTR [ebp-0x4]
  41acc1:	mov    esi,DWORD PTR [ebp+0x8]
  41acc4:	mov    ecx,0x7510899
  41acc9:	xor    eax,ecx
  41accb:	mov    edx,0x3272e0
  41acd0:	add    eax,edx
  41acd2:	cmp    esi,eax
  41acd4:	je     0x41adfb
  41acda:	mov    eax,DWORD PTR [ebp+0x8]
  41acdd:	mov    esi,DWORD PTR [ebp+0x8]
  41ace0:	add    esi,DWORD PTR [eax+0x3c]
  41ace3:	push   edi
  41ace4:	mov    DWORD PTR [ebp+0xc],esi
  41ace7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41acee:	mov    eax,DWORD PTR [ebp-0x1c]
  41acf1:	mov    esi,DWORD PTR [ebp-0x4]
  41acf4:	mov    edi,DWORD PTR [ebp+0xc]
  41acf7:	xor    esi,ecx
  41acf9:	xor    eax,ecx
  41acfb:	add    esi,edx
  41acfd:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41ad04:	je     0x41adf5
  41ad0a:	mov    esi,DWORD PTR [ebp+0xc]
  41ad0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ad10:	add    eax,DWORD PTR [esi+0xa0]
  41ad16:	mov    esi,DWORD PTR [ebp+0x8]
  41ad19:	mov    edi,DWORD PTR [ebp+0xc]
  41ad1c:	sub    esi,DWORD PTR [edi+0x34]
  41ad1f:	mov    edi,DWORD PTR [ebp-0x4]
  41ad22:	xor    edi,ecx
  41ad24:	add    edi,edx
  41ad26:	mov    DWORD PTR [ebp-0x24],esi
  41ad29:	cmp    esi,edi
  41ad2b:	je     0x41adf5
  41ad31:	mov    esi,DWORD PTR [ebp-0x4]
  41ad34:	xor    esi,ecx
  41ad36:	add    esi,edx
  41ad38:	mov    DWORD PTR [ebp-0x8],esi
  41ad3b:	push   ebx
  41ad3c:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ad43:	jmp    0x41addf
  41ad48:	mov    esi,DWORD PTR [ebp-0x4]
  41ad4b:	xor    esi,ecx
  41ad4d:	lea    edi,[ebx-0x8]
  41ad50:	add    esi,edx
  41ad52:	shr    edi,1
  41ad54:	cmp    esi,edi
  41ad56:	jae    0x41adc5
  41ad58:	sub    edi,esi
  41ad5a:	lea    ebx,[eax+esi*2+0x8]
  41ad5e:	mov    DWORD PTR [ebp-0x18],edi
  41ad61:	movzx  esi,WORD PTR [ebx]
  41ad64:	and    esi,0xfff
  41ad6a:	mov    DWORD PTR [ebp-0x14],esi
  41ad6d:	mov    edi,DWORD PTR [ebp-0x14]
  41ad70:	mov    esi,DWORD PTR [eax]
  41ad72:	sub    esi,edx
  41ad74:	add    edi,esi
  41ad76:	movzx  esi,WORD PTR [ebx]
  41ad79:	shr    esi,0xc
  41ad7c:	xor    edi,ecx
  41ad7e:	mov    DWORD PTR [ebp-0x20],edi
  41ad81:	mov    DWORD PTR [ebp-0x14],esi
  41ad84:	mov    esi,DWORD PTR [ebp-0x20]
  41ad87:	mov    edi,DWORD PTR [ebp+0x8]
  41ad8a:	xor    esi,ecx
  41ad8c:	lea    esi,[esi+edi*1+0x3272e0]
  41ad93:	mov    DWORD PTR [ebp-0x20],esi
  41ad96:	mov    esi,DWORD PTR [ebp-0x10]
  41ad99:	mov    edi,DWORD PTR [ebp-0x14]
  41ad9c:	xor    esi,ecx
  41ad9e:	add    esi,edx
  41ada0:	cmp    edi,esi
  41ada2:	jne    0x41adba
  41ada4:	mov    esi,DWORD PTR [ebp-0x10]
  41ada7:	mov    edi,DWORD PTR [ebp-0x14]
  41adaa:	xor    esi,ecx
  41adac:	add    esi,edx
  41adae:	cmp    edi,esi
  41adb0:	jne    0x41adba
  41adb2:	mov    esi,DWORD PTR [ebp-0x20]
  41adb5:	mov    edi,DWORD PTR [ebp-0x24]
  41adb8:	add    DWORD PTR [esi],edi
  41adba:	add    ebx,0x2
  41adbd:	dec    DWORD PTR [ebp-0x18]
  41adc0:	jne    0x41ad61
  41adc2:	mov    ebx,DWORD PTR [ebp-0xc]
  41adc5:	add    DWORD PTR [ebp-0x8],ebx
  41adc8:	mov    esi,DWORD PTR [ebp-0x1c]
  41adcb:	mov    edi,DWORD PTR [ebp-0x8]
  41adce:	mov    ebx,DWORD PTR [ebp+0xc]
  41add1:	xor    esi,ecx
  41add3:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41adda:	jae    0x41adf4
  41addc:	add    eax,DWORD PTR [ebp-0xc]
  41addf:	mov    esi,DWORD PTR [ebp-0x4]
  41ade2:	mov    ebx,DWORD PTR [eax+0x4]
  41ade5:	xor    esi,ecx
  41ade7:	add    esi,edx
  41ade9:	mov    DWORD PTR [ebp-0xc],ebx
  41adec:	cmp    ebx,esi
  41adee:	jne    0x41ad48
  41adf4:	pop    ebx
  41adf5:	mov    eax,DWORD PTR [ebp-0x28]
  41adf8:	pop    edi
  41adf9:	jmp    0x41adfe
  41adfb:	mov    eax,DWORD PTR [ebp-0x4]
  41adfe:	xor    eax,ecx
  41ae00:	add    eax,edx
  41ae02:	pop    esi
  41ae03:	leave  
  41ae04:	ret    0x8
  41ae07:	push   ebp
  41ae08:	mov    ebp,esp
  41ae0a:	sub    esp,0xcc
  41ae10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41ae17:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41ae1e:	mov    eax,DWORD PTR [ebp-0x4]
  41ae21:	push   ebx
  41ae22:	push   esi
  41ae23:	mov    esi,0x7510899
  41ae28:	xor    eax,esi
  41ae2a:	push   edi
  41ae2b:	mov    edi,0x3272e0
  41ae30:	add    eax,edi
  41ae32:	mov    DWORD PTR [ebp-0x1c],eax
  41ae35:	mov    eax,DWORD PTR [ebp-0x4]
  41ae38:	xor    eax,esi
  41ae3a:	add    eax,edi
  41ae3c:	mov    DWORD PTR [ebp-0x8],eax
  41ae3f:	mov    ebx,DWORD PTR [ebp+0x20]
  41ae42:	mov    eax,DWORD PTR [ebp-0x14]
  41ae45:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae48:	xor    eax,ecx
  41ae4a:	mov    DWORD PTR [ebp-0x14],eax
  41ae4d:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41ae54:	mov    eax,DWORD PTR [ebp-0xc]
  41ae57:	mov    ecx,DWORD PTR [ebp-0xc]
  41ae5a:	xor    eax,ecx
  41ae5c:	mov    DWORD PTR [ebp-0xc],eax
  41ae5f:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41ae66:	mov    eax,DWORD PTR [ebp-0x10]
  41ae69:	mov    ecx,DWORD PTR [ebp-0x10]
  41ae6c:	xor    eax,ecx
  41ae6e:	mov    DWORD PTR [ebp-0x10],eax
  41ae71:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41ae78:	mov    eax,DWORD PTR [ebp-0x20]
  41ae7b:	mov    ecx,DWORD PTR [ebp-0x20]
  41ae7e:	xor    eax,ecx
  41ae80:	mov    DWORD PTR [ebp-0x20],eax
  41ae83:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41ae8a:	mov    eax,0x9471
  41ae8f:	mov    WORD PTR [ebp+0x20],ax
  41ae93:	mov    eax,DWORD PTR [ebp+0x8]
  41ae96:	test   eax,eax
  41ae98:	je     0x41b2f5
  41ae9e:	mov    eax,DWORD PTR [ebp+0xc]
  41aea1:	test   eax,eax
  41aea3:	je     0x41b2f5
  41aea9:	mov    eax,DWORD PTR [ebp+0x18]
  41aeac:	test   eax,eax
  41aeae:	je     0x41b2f5
  41aeb4:	mov    ax,WORD PTR [ebp+0x20]
  41aeb8:	mov    ecx,0x8a8c
  41aebd:	xor    ax,cx
  41aec0:	mov    ecx,0x3b50
  41aec5:	add    ax,cx
  41aec8:	mov    ecx,DWORD PTR [ebp+0x8]
  41aecb:	cmp    WORD PTR [ecx],ax
  41aece:	jne    0x41b2f5
  41aed4:	mov    eax,DWORD PTR [ebp-0x4]
  41aed7:	xor    eax,esi
  41aed9:	add    eax,edi
  41aedb:	mov    DWORD PTR [ebp-0x30],eax
  41aede:	mov    eax,DWORD PTR [ebp-0x4]
  41aee1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aee4:	mov    eax,DWORD PTR [ebp+0x8]
  41aee7:	add    eax,DWORD PTR [ecx+0x3c]
  41aeea:	mov    DWORD PTR [ebp+0xc],eax
  41aeed:	mov    eax,DWORD PTR [eax+0x50]
  41aef0:	test   eax,eax
  41aef2:	je     0x41b2f5
  41aef8:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41aeff:	mov    eax,DWORD PTR [ebp-0x2c]
  41af02:	xor    eax,esi
  41af04:	add    eax,edi
  41af06:	mov    DWORD PTR [ebp-0x2c],eax
  41af09:	mov    eax,DWORD PTR [ebp-0x4]
  41af0c:	mov    eax,DWORD PTR [ebx+0x190]
  41af12:	mov    ecx,DWORD PTR [eax]
  41af14:	mov    ecx,DWORD PTR [ecx+0x3c]
  41af17:	add    ecx,DWORD PTR [eax]
  41af19:	mov    eax,DWORD PTR [ebp-0x4]
  41af1c:	mov    eax,DWORD PTR [ebx+0x18c]
  41af22:	mov    edx,DWORD PTR [eax]
  41af24:	mov    DWORD PTR [ebp-0x18],ecx
  41af27:	mov    DWORD PTR [ebp+0x20],edx
  41af2a:	cmp    edx,edx
  41af2c:	jne    0x41af61
  41af2e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41af34:	lea    edx,[ebp-0x1c]
  41af37:	push   edx
  41af38:	mov    edx,DWORD PTR [ebp-0xc]
  41af3b:	xor    edx,esi
  41af3d:	add    edx,edi
  41af3f:	push   edx
  41af40:	push   DWORD PTR [ecx+0x50]
  41af43:	push   DWORD PTR [ebp+0x20]
  41af46:	call   DWORD PTR [eax+0x1c]
  41af49:	mov    ecx,DWORD PTR [ebp-0x18]
  41af4c:	mov    eax,DWORD PTR [ecx+0x54]
  41af4f:	mov    ecx,DWORD PTR [ecx+0x50]
  41af52:	sub    ecx,eax
  41af54:	add    eax,DWORD PTR [ebp+0x20]
  41af57:	push   ecx
  41af58:	push   eax
  41af59:	call   0x41b909
  41af5e:	mov    edx,DWORD PTR [ebp+0x20]
  41af61:	mov    eax,DWORD PTR [ebx+0x194]
  41af67:	mov    DWORD PTR [eax],edx
  41af69:	mov    eax,DWORD PTR [ebp+0xc]
  41af6c:	push   DWORD PTR [eax+0x54]
  41af6f:	push   DWORD PTR [ebp+0x8]
  41af72:	push   edx
  41af73:	call   0x41b7b0
  41af78:	mov    ecx,DWORD PTR [ebp+0x20]
  41af7b:	mov    eax,DWORD PTR [ecx+0x3c]
  41af7e:	add    eax,ecx
  41af80:	movzx  ecx,WORD PTR [eax+0x14]
  41af84:	lea    ecx,[ecx+eax*1+0x18]
  41af88:	mov    DWORD PTR [ebp+0x18],ecx
  41af8b:	mov    ecx,DWORD PTR [ebp-0x4]
  41af8e:	movzx  edx,WORD PTR [eax+0x6]
  41af92:	xor    ecx,esi
  41af94:	add    ecx,edi
  41af96:	mov    DWORD PTR [ebp+0xc],eax
  41af99:	cmp    edx,ecx
  41af9b:	je     0x41b049
  41afa1:	mov    ecx,DWORD PTR [ebp-0x4]
  41afa4:	xor    ecx,esi
  41afa6:	add    ecx,edi
  41afa8:	mov    DWORD PTR [ebp-0x8],ecx
  41afab:	mov    ecx,DWORD PTR [ebp-0x24]
  41afae:	movzx  edx,WORD PTR [eax+0x6]
  41afb2:	xor    ecx,esi
  41afb4:	sub    edx,ecx
  41afb6:	sub    edx,edi
  41afb8:	cmp    DWORD PTR [ebp-0x8],edx
  41afbb:	ja     0x41b049
  41afc1:	mov    edx,DWORD PTR [ebp+0x18]
  41afc4:	add    edx,0x8
  41afc7:	mov    DWORD PTR [ebp+0x18],edx
  41afca:	jmp    0x41afcf
  41afcc:	mov    edx,DWORD PTR [ebp+0x18]
  41afcf:	mov    eax,DWORD PTR [eax+0x38]
  41afd2:	lea    ecx,[eax-0x1]
  41afd5:	mov    DWORD PTR [ebp-0x34],eax
  41afd8:	mov    eax,DWORD PTR [edx]
  41afda:	test   ecx,eax
  41afdc:	je     0x41afe5
  41afde:	not    ecx
  41afe0:	and    eax,ecx
  41afe2:	add    eax,DWORD PTR [ebp-0x34]
  41afe5:	push   eax
  41afe6:	mov    eax,DWORD PTR [edx+0x4]
  41afe9:	add    eax,DWORD PTR [ebp+0x20]
  41afec:	push   eax
  41afed:	call   0x41b909
  41aff2:	mov    edx,DWORD PTR [ebp-0x4]
  41aff5:	mov    eax,DWORD PTR [ebp+0x18]
  41aff8:	mov    ecx,DWORD PTR [eax+0x8]
  41affb:	xor    edx,esi
  41affd:	add    edx,edi
  41afff:	cmp    ecx,edx
  41b001:	je     0x41b01a
  41b003:	push   ecx
  41b004:	mov    ecx,DWORD PTR [ebp+0x8]
  41b007:	add    ecx,DWORD PTR [eax+0xc]
  41b00a:	mov    eax,DWORD PTR [eax+0x4]
  41b00d:	add    eax,DWORD PTR [ebp+0x20]
  41b010:	push   ecx
  41b011:	push   eax
  41b012:	call   0x41b7b0
  41b017:	mov    eax,DWORD PTR [ebp+0x18]
  41b01a:	mov    ecx,DWORD PTR [ebp-0x24]
  41b01d:	mov    edx,DWORD PTR [ebp-0x8]
  41b020:	add    eax,0x28
  41b023:	xor    ecx,esi
  41b025:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b02c:	mov    edx,DWORD PTR [ebp+0xc]
  41b02f:	mov    DWORD PTR [ebp+0x18],eax
  41b032:	mov    eax,DWORD PTR [ebp-0x24]
  41b035:	movzx  edx,WORD PTR [edx+0x6]
  41b039:	xor    eax,esi
  41b03b:	sub    edx,eax
  41b03d:	mov    eax,DWORD PTR [ebp+0xc]
  41b040:	sub    edx,edi
  41b042:	mov    DWORD PTR [ebp-0x8],ecx
  41b045:	cmp    ecx,edx
  41b047:	jbe    0x41afcc
  41b049:	mov    edx,DWORD PTR [ebx+0x18c]
  41b04f:	mov    ecx,DWORD PTR [ebp+0x20]
  41b052:	cmp    ecx,DWORD PTR [edx]
  41b054:	jne    0x41b07d
  41b056:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b05c:	lea    edx,[ebp-0x1c]
  41b05f:	push   edx
  41b060:	mov    edx,DWORD PTR [ebp-0x10]
  41b063:	xor    edx,esi
  41b065:	add    edx,edi
  41b067:	push   edx
  41b068:	mov    edx,DWORD PTR [ebp-0x18]
  41b06b:	push   DWORD PTR [edx+0x54]
  41b06e:	push   ecx
  41b06f:	call   DWORD PTR [eax+0x1c]
  41b072:	test   eax,eax
  41b074:	je     0x41b2e6
  41b07a:	mov    eax,DWORD PTR [ebp+0xc]
  41b07d:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41b083:	mov    ecx,DWORD PTR [ecx]
  41b085:	xor    ecx,esi
  41b087:	add    ecx,edi
  41b089:	je     0x41b211
  41b08f:	and    DWORD PTR [ebp-0x28],0x0
  41b093:	and    DWORD PTR [ebp+0x8],0x0
  41b097:	mov    eax,0xf89c851d
  41b09c:	lea    ecx,[eax-0x8]
  41b09f:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41b0a6:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41b0ad:	mov    DWORD PTR [ebp-0x44],eax
  41b0b0:	mov    DWORD PTR [ebp-0x40],ecx
  41b0b3:	mov    DWORD PTR [ebp-0x3c],ecx
  41b0b6:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b0bd:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c0:	mov    ecx,0x899
  41b0c5:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41b0ca:	mov    edx,0x72e0
  41b0cf:	add    cx,dx
  41b0d2:	mov    edx,DWORD PTR [ebp+0x8]
  41b0d5:	inc    DWORD PTR [ebp+0x8]
  41b0d8:	cmp    DWORD PTR [ebp+0x8],0x6
  41b0dc:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41b0e4:	jb     0x41b0bd
  41b0e6:	mov    ecx,0xf89c850b
  41b0eb:	mov    DWORD PTR [ebp-0xa4],eax
  41b0f1:	mov    DWORD PTR [ebp-0x90],eax
  41b0f7:	mov    DWORD PTR [ebp-0x68],eax
  41b0fa:	mov    DWORD PTR [ebp-0x64],eax
  41b0fd:	lea    eax,[ecx-0x1]
  41b100:	mov    edx,0xf89c85ff
  41b105:	mov    DWORD PTR [ebp-0x58],eax
  41b108:	mov    DWORD PTR [ebp-0x54],eax
  41b10b:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41b115:	mov    DWORD PTR [ebp-0xa0],ecx
  41b11b:	mov    DWORD PTR [ebp-0x9c],edx
  41b121:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41b12b:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41b135:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41b13f:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41b149:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41b153:	mov    DWORD PTR [ebp-0x80],ecx
  41b156:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41b15d:	mov    DWORD PTR [ebp-0x78],edx
  41b160:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41b167:	mov    DWORD PTR [ebp-0x70],ecx
  41b16a:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41b171:	mov    DWORD PTR [ebp-0x60],ecx
  41b174:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41b17b:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41b182:	xor    eax,eax
  41b184:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41b18b:	xor    cl,0x99
  41b18e:	sub    cl,0x20
  41b191:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41b198:	inc    eax
  41b199:	cmp    eax,0x17
  41b19c:	jb     0x41b184
  41b19e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b1a4:	lea    ecx,[ebp-0xb4]
  41b1aa:	push   ecx
  41b1ab:	call   DWORD PTR [eax+0x4]
  41b1ae:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41b1b4:	lea    edx,[ebp-0xcc]
  41b1ba:	push   edx
  41b1bb:	push   eax
  41b1bc:	call   DWORD PTR [ecx+0x8]
  41b1bf:	lea    ecx,[ebp-0x28]
  41b1c2:	push   ecx
  41b1c3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1c9:	push   DWORD PTR [ecx]
  41b1cb:	call   eax
  41b1cd:	mov    eax,DWORD PTR [ebp-0x28]
  41b1d0:	test   eax,eax
  41b1d2:	je     0x41b20e
  41b1d4:	mov    DWORD PTR [ebp+0x8],eax
  41b1d7:	jmp    0x41b1e3
  41b1d9:	mov    eax,DWORD PTR [eax]
  41b1db:	mov    DWORD PTR [ebp-0x28],eax
  41b1de:	cmp    eax,DWORD PTR [ebp+0x8]
  41b1e1:	je     0x41b1f0
  41b1e3:	mov    edx,DWORD PTR [eax+0x18]
  41b1e6:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1ec:	cmp    edx,DWORD PTR [ecx]
  41b1ee:	jne    0x41b1d9
  41b1f0:	mov    edx,DWORD PTR [eax+0x18]
  41b1f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1f9:	cmp    edx,DWORD PTR [ecx]
  41b1fb:	jne    0x41b20e
  41b1fd:	mov    edx,DWORD PTR [ebp-0x18]
  41b200:	mov    ecx,DWORD PTR [ebx+0x190]
  41b206:	mov    edx,DWORD PTR [edx+0x28]
  41b209:	add    edx,DWORD PTR [ecx]
  41b20b:	mov    DWORD PTR [eax+0x1c],edx
  41b20e:	mov    eax,DWORD PTR [ebp+0xc]
  41b211:	push   ebx
  41b212:	push   eax
  41b213:	push   DWORD PTR [ebp+0x20]
  41b216:	call   0x41a9be
  41b21b:	test   eax,eax
  41b21d:	je     0x41b2e6
  41b223:	push   DWORD PTR [ebp+0xc]
  41b226:	mov    ecx,ebx
  41b228:	push   DWORD PTR [ebp+0x20]
  41b22b:	call   0x41a917
  41b230:	test   eax,eax
  41b232:	je     0x41b2e6
  41b238:	mov    eax,DWORD PTR [ebp+0xc]
  41b23b:	mov    edx,DWORD PTR [ebp+0x20]
  41b23e:	mov    ecx,ebx
  41b240:	call   0x41a7f0
  41b245:	test   eax,eax
  41b247:	je     0x41b2e6
  41b24d:	push   ebx
  41b24e:	push   DWORD PTR [ebp+0x20]
  41b251:	call   0x41aca1
  41b256:	test   eax,eax
  41b258:	je     0x41b2e6
  41b25e:	mov    eax,DWORD PTR [ebx+0x18c]
  41b264:	mov    edx,DWORD PTR [ebp+0x20]
  41b267:	cmp    edx,DWORD PTR [eax]
  41b269:	jne    0x41b285
  41b26b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b271:	lea    ecx,[ebp-0x1c]
  41b274:	push   ecx
  41b275:	push   DWORD PTR [ebp-0x1c]
  41b278:	mov    ecx,DWORD PTR [ebp-0x18]
  41b27b:	push   DWORD PTR [ecx+0x54]
  41b27e:	push   edx
  41b27f:	call   DWORD PTR [eax+0x1c]
  41b282:	mov    edx,DWORD PTR [ebp+0x20]
  41b285:	mov    eax,DWORD PTR [ebx+0x1c8]
  41b28b:	mov    eax,DWORD PTR [eax]
  41b28d:	xor    eax,esi
  41b28f:	add    eax,edi
  41b291:	je     0x41b2ca
  41b293:	mov    ecx,DWORD PTR [ebp+0xc]
  41b296:	mov    eax,DWORD PTR [ecx+0x28]
  41b299:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41b2a0:	mov    esi,DWORD PTR [ebp+0x8]
  41b2a3:	push   DWORD PTR [ebp+0x14]
  41b2a6:	xor    esi,0x899
  41b2ac:	push   DWORD PTR [ebp+0x10]
  41b2af:	add    esi,0x72e0
  41b2b5:	or     WORD PTR [ecx+0x16],si
  41b2b9:	add    eax,edx
  41b2bb:	push   edx
  41b2bc:	call   eax
  41b2be:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41b2c8:	jmp    0x41b2d4
  41b2ca:	mov    eax,DWORD PTR [ebp+0xc]
  41b2cd:	mov    eax,DWORD PTR [eax+0x28]
  41b2d0:	add    eax,edx
  41b2d2:	call   eax
  41b2d4:	mov    DWORD PTR [ebp-0x8],eax
  41b2d7:	mov    eax,DWORD PTR [ebp-0x8]
  41b2da:	mov    ecx,DWORD PTR [ebp+0x1c]
  41b2dd:	mov    DWORD PTR [ecx],eax
  41b2df:	mov    DWORD PTR [ebp-0x30],0x1
  41b2e6:	cmp    DWORD PTR [ebp-0x30],0x0
  41b2ea:	jne    0x41b2f0
  41b2ec:	and    DWORD PTR [ebp+0x20],0x0
  41b2f0:	mov    eax,DWORD PTR [ebp+0x20]
  41b2f3:	jmp    0x41b2f7
  41b2f5:	xor    eax,eax
  41b2f7:	pop    edi
  41b2f8:	pop    esi
  41b2f9:	pop    ebx
  41b2fa:	leave  
  41b2fb:	ret    0x1c
  41b2fe:	push   ebp
  41b2ff:	mov    ebp,esp
  41b301:	movzx  edx,WORD PTR [ecx+0x6]
  41b305:	movzx  eax,WORD PTR [ecx+0x14]
  41b309:	push   ebx
  41b30a:	push   edi
  41b30b:	xor    edi,edi
  41b30d:	lea    eax,[eax+ecx*1+0x18]
  41b311:	test   edx,edx
  41b313:	je     0x41b334
  41b315:	mov    ecx,DWORD PTR [eax+0xc]
  41b318:	lea    ebx,[ecx+esi*1]
  41b31b:	cmp    DWORD PTR [ebp+0x8],ebx
  41b31e:	jb     0x41b32c
  41b320:	mov    ebx,DWORD PTR [eax+0x8]
  41b323:	add    ebx,ecx
  41b325:	add    ebx,esi
  41b327:	cmp    DWORD PTR [ebp+0x8],ebx
  41b32a:	jb     0x41b336
  41b32c:	add    eax,0x28
  41b32f:	inc    edi
  41b330:	cmp    edi,edx
  41b332:	jb     0x41b315
  41b334:	xor    eax,eax
  41b336:	pop    edi
  41b337:	pop    ebx
  41b338:	pop    ebp
  41b339:	ret    0x4
  41b33c:	push   ebp
  41b33d:	mov    ebp,esp
  41b33f:	sub    esp,0x28
  41b342:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41b349:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41b350:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  41b357:	mov    eax,0x4f9d
  41b35c:	mov    WORD PTR [ebp-0xc],ax
  41b360:	mov    eax,0x4e7d
  41b365:	mov    WORD PTR [ebp-0x4],ax
  41b369:	mov    eax,0x4fa6
  41b36e:	mov    WORD PTR [ebp-0x8],ax
  41b372:	add    eax,0xffffffe0
  41b375:	mov    WORD PTR [ebp-0x8],ax
  41b379:	mov    eax,DWORD PTR [ebp+0x8]
  41b37c:	mov    DWORD PTR [ebp-0x14],eax
  41b37f:	mov    eax,DWORD PTR [ebp+0xc]
  41b382:	mov    DWORD PTR [ebp-0x18],eax
  41b385:	mov    eax,DWORD PTR [ebp-0x10]
  41b388:	push   ebx
  41b389:	mov    ecx,0x7510899
  41b38e:	xor    eax,ecx
  41b390:	push   esi
  41b391:	mov    esi,DWORD PTR [ebp-0x14]
  41b394:	mov    edx,0x3272e0
  41b399:	add    eax,edx
  41b39b:	push   edi
  41b39c:	cmp    esi,eax
  41b39e:	je     0x41b59c
  41b3a4:	mov    eax,DWORD PTR [ebp-0x10]
  41b3a7:	mov    esi,DWORD PTR [ebp-0x18]
  41b3aa:	xor    eax,ecx
  41b3ac:	add    eax,edx
  41b3ae:	cmp    esi,eax
  41b3b0:	je     0x41b59c
  41b3b6:	mov    eax,DWORD PTR [ebp-0x10]
  41b3b9:	xor    eax,ecx
  41b3bb:	add    eax,edx
  41b3bd:	mov    DWORD PTR [ebp-0x20],eax
  41b3c0:	mov    eax,DWORD PTR [ebp-0x10]
  41b3c3:	xor    eax,ecx
  41b3c5:	add    eax,edx
  41b3c7:	mov    DWORD PTR [ebp-0x24],eax
  41b3ca:	movzx  esi,WORD PTR [ebp-0x4]
  41b3ce:	movzx  edi,WORD PTR [ebp-0xc]
  41b3d2:	mov    eax,0x8a8c
  41b3d7:	xor    si,ax
  41b3da:	mov    ebx,0x8a8c
  41b3df:	xor    di,bx
  41b3e2:	mov    eax,0x3b50
  41b3e7:	add    si,ax
  41b3ea:	add    di,ax
  41b3ed:	sub    edi,esi
  41b3ef:	mov    WORD PTR [ebp-0xc],di
  41b3f3:	mov    esi,DWORD PTR [ebp-0x20]
  41b3f6:	mov    edi,DWORD PTR [ebp-0x14]
  41b3f9:	mov    si,WORD PTR [edi+esi*2]
  41b3fd:	mov    WORD PTR [ebp+0x8],si
  41b401:	mov    esi,DWORD PTR [ebp-0x24]
  41b404:	mov    edi,DWORD PTR [ebp-0x18]
  41b407:	mov    si,WORD PTR [edi+esi*2]
  41b40b:	mov    WORD PTR [ebp+0xc],si
  41b40f:	mov    esi,0x72e0
  41b414:	jmp    0x41b521
  41b419:	mov    edi,DWORD PTR [ebp-0x10]
  41b41c:	mov    bx,WORD PTR [ebp+0xc]
  41b420:	xor    edi,0x899
  41b426:	add    edi,esi
  41b428:	cmp    bx,di
  41b42b:	je     0x41b54b
  41b431:	mov    edi,DWORD PTR [ebp-0x10]
  41b434:	mov    ebx,DWORD PTR [ebp+0x10]
  41b437:	xor    edi,ecx
  41b439:	add    edi,edx
  41b43b:	cmp    ebx,edi
  41b43d:	mov    di,WORD PTR [ebp+0xc]
  41b441:	mov    bx,WORD PTR [ebp+0x8]
  41b445:	je     0x41b4d8
  41b44b:	cmp    bx,di
  41b44e:	je     0x41b4e1
  41b454:	mov    di,WORD PTR [ebp-0x4]
  41b458:	mov    ebx,0x8a8c
  41b45d:	xor    di,bx
  41b460:	mov    bx,WORD PTR [ebp+0x8]
  41b464:	add    di,ax
  41b467:	cmp    bx,di
  41b46a:	jb     0x41b492
  41b46c:	mov    di,WORD PTR [ebp-0x8]
  41b470:	mov    ebx,0x8a8c
  41b475:	xor    di,bx
  41b478:	mov    bx,WORD PTR [ebp+0x8]
  41b47c:	add    di,ax
  41b47f:	cmp    bx,di
  41b482:	ja     0x41b492
  41b484:	movzx  edi,WORD PTR [ebp+0x8]
  41b488:	movzx  ebx,WORD PTR [ebp-0xc]
  41b48c:	add    edi,ebx
  41b48e:	mov    WORD PTR [ebp+0x8],di
  41b492:	mov    di,WORD PTR [ebp-0x4]
  41b496:	mov    ebx,0x8a8c
  41b49b:	xor    di,bx
  41b49e:	mov    bx,WORD PTR [ebp+0xc]
  41b4a2:	add    di,ax
  41b4a5:	cmp    bx,di
  41b4a8:	jb     0x41b4d0
  41b4aa:	mov    di,WORD PTR [ebp-0x8]
  41b4ae:	mov    ebx,0x8a8c
  41b4b3:	xor    di,bx
  41b4b6:	mov    bx,WORD PTR [ebp+0xc]
  41b4ba:	add    di,ax
  41b4bd:	cmp    bx,di
  41b4c0:	ja     0x41b4d0
  41b4c2:	movzx  edi,WORD PTR [ebp+0xc]
  41b4c6:	movzx  ebx,WORD PTR [ebp-0xc]
  41b4ca:	add    edi,ebx
  41b4cc:	mov    WORD PTR [ebp+0xc],di
  41b4d0:	mov    di,WORD PTR [ebp+0xc]
  41b4d4:	mov    bx,WORD PTR [ebp+0x8]
  41b4d8:	cmp    bx,di
  41b4db:	jne    0x41b59c
  41b4e1:	mov    edi,DWORD PTR [ebp-0x28]
  41b4e4:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4e7:	xor    edi,ecx
  41b4e9:	lea    edi,[edi+ebx*1+0x3272e0]
  41b4f0:	mov    DWORD PTR [ebp-0x14],edi
  41b4f3:	mov    edi,DWORD PTR [ebp-0x28]
  41b4f6:	mov    ebx,DWORD PTR [ebp-0x18]
  41b4f9:	xor    edi,ecx
  41b4fb:	lea    edi,[edi+ebx*1+0x3272e0]
  41b502:	mov    DWORD PTR [ebp-0x18],edi
  41b505:	mov    edi,DWORD PTR [ebp-0x20]
  41b508:	mov    ebx,DWORD PTR [ebp-0x14]
  41b50b:	mov    di,WORD PTR [ebx+edi*2]
  41b50f:	mov    WORD PTR [ebp+0x8],di
  41b513:	mov    edi,DWORD PTR [ebp-0x24]
  41b516:	mov    ebx,DWORD PTR [ebp-0x18]
  41b519:	mov    di,WORD PTR [ebx+edi*2]
  41b51d:	mov    WORD PTR [ebp+0xc],di
  41b521:	mov    edi,DWORD PTR [ebp-0x10]
  41b524:	mov    bx,WORD PTR [ebp+0x8]
  41b528:	xor    edi,0x899
  41b52e:	add    edi,esi
  41b530:	cmp    bx,di
  41b533:	jne    0x41b419
  41b539:	mov    esi,DWORD PTR [ebp-0x1c]
  41b53c:	xor    esi,ecx
  41b53e:	mov    ecx,DWORD PTR [ebp-0x10]
  41b541:	add    esi,edx
  41b543:	imul   esi,ecx
  41b546:	mov    DWORD PTR [ebp-0x10],esi
  41b549:	jmp    0x41b55d
  41b54b:	mov    edx,DWORD PTR [ebp-0x10]
  41b54e:	xor    edx,ecx
  41b550:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b553:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b55a:	mov    DWORD PTR [ebp-0x1c],ecx
  41b55d:	mov    edx,DWORD PTR [ebp-0x20]
  41b560:	mov    esi,DWORD PTR [ebp-0x14]
  41b563:	mov    si,WORD PTR [esi+edx*2]
  41b567:	mov    ecx,eax
  41b569:	sub    si,cx
  41b56c:	mov    edx,0x8a8c
  41b571:	xor    si,dx
  41b574:	mov    ecx,0x4e3c
  41b579:	cmp    si,cx
  41b57c:	jne    0x41b597
  41b57e:	mov    esi,DWORD PTR [ebp-0x24]
  41b581:	mov    edi,DWORD PTR [ebp-0x18]
  41b584:	mov    si,WORD PTR [edi+esi*2]
  41b588:	sub    si,ax
  41b58b:	xor    si,dx
  41b58e:	cmp    si,cx
  41b591:	jne    0x41b597
  41b593:	xor    eax,eax
  41b595:	jmp    0x41b5a3
  41b597:	xor    eax,eax
  41b599:	inc    eax
  41b59a:	jmp    0x41b5a3
  41b59c:	mov    eax,DWORD PTR [ebp-0x1c]
  41b59f:	xor    eax,ecx
  41b5a1:	add    eax,edx
  41b5a3:	pop    edi
  41b5a4:	pop    esi
  41b5a5:	pop    ebx
  41b5a6:	leave  
  41b5a7:	ret    0xc
  41b5aa:	push   ebp
  41b5ab:	mov    ebp,esp
  41b5ad:	push   ecx
  41b5ae:	mov    cx,WORD PTR [eax]
  41b5b1:	push   esi
  41b5b2:	mov    esi,0x3b50
  41b5b7:	sub    cx,si
  41b5ba:	mov    esi,0x8a8c
  41b5bf:	xor    cx,si
  41b5c2:	mov    esi,0x4e3c
  41b5c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b5ce:	mov    edx,0xf89c85b9
  41b5d3:	cmp    cx,si
  41b5d6:	je     0x41b635
  41b5d8:	push   ebx
  41b5d9:	push   edi
  41b5da:	movzx  ecx,cx
  41b5dd:	mov    edi,0xffcd8d20
  41b5e2:	mov    esi,0x7510899
  41b5e7:	mov    ebx,0x4f80
  41b5ec:	cmp    cx,bx
  41b5ef:	jne    0x41b5f4
  41b5f1:	mov    DWORD PTR [ebp-0x4],edx
  41b5f4:	lea    edx,[edi+0x1]
  41b5f7:	xor    edx,esi
  41b5f9:	mov    edi,edx
  41b5fb:	xor    edi,esi
  41b5fd:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41b605:	mov    ebx,0x3b50
  41b60a:	sub    cx,bx
  41b60d:	mov    ebx,0x8a8c
  41b612:	xor    cx,bx
  41b615:	mov    ebx,0x4e3c
  41b61a:	cmp    cx,bx
  41b61d:	jne    0x41b5e7
  41b61f:	mov    ecx,DWORD PTR [ebp-0x4]
  41b622:	pop    edi
  41b623:	pop    ebx
  41b624:	cmp    ecx,0xf89c8586
  41b62a:	je     0x41b635
  41b62c:	xor    ecx,esi
  41b62e:	lea    eax,[eax+ecx*2+0x64e5c2]
  41b635:	pop    esi
  41b636:	leave  
  41b637:	ret    
  41b638:	push   ebp
  41b639:	mov    ebp,esp
  41b63b:	push   ecx
  41b63c:	push   esi
  41b63d:	push   edi
  41b63e:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b645:	mov    esi,0xf89c85b9
  41b64a:	call   0x41b5aa
  41b64f:	mov    edi,eax
  41b651:	mov    al,BYTE PTR [edi]
  41b653:	add    al,0x9
  41b655:	xor    al,0x73
  41b657:	cmp    al,0x7a
  41b659:	je     0x41b6bc
  41b65b:	mov    eax,edi
  41b65d:	mov    edx,0xffcd8d20
  41b662:	mov    ecx,0x7510899
  41b667:	push   ebx
  41b668:	mov    ax,WORD PTR [eax]
  41b66b:	mov    ebx,0x3b50
  41b670:	sub    ax,bx
  41b673:	mov    ebx,0x8a8c
  41b678:	xor    ax,bx
  41b67b:	mov    ebx,0x4e52
  41b680:	cmp    ax,bx
  41b683:	jne    0x41b688
  41b685:	mov    DWORD PTR [ebp-0x4],esi
  41b688:	lea    esi,[edx+0x1]
  41b68b:	xor    esi,ecx
  41b68d:	mov    edx,esi
  41b68f:	xor    edx,ecx
  41b691:	lea    eax,[edi+edx*2+0x64e5c0]
  41b698:	mov    bl,BYTE PTR [eax]
  41b69a:	add    bl,0x9
  41b69d:	xor    bl,0x73
  41b6a0:	cmp    bl,0x7a
  41b6a3:	jne    0x41b668
  41b6a5:	mov    eax,DWORD PTR [ebp-0x4]
  41b6a8:	pop    ebx
  41b6a9:	cmp    eax,0xf89c8586
  41b6ae:	je     0x41b6bc
  41b6b0:	xor    eax,ecx
  41b6b2:	xor    ecx,ecx
  41b6b4:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41b6bc:	mov    eax,edi
  41b6be:	pop    edi
  41b6bf:	pop    esi
  41b6c0:	leave  
  41b6c1:	ret    
  41b6c2:	push   ebp
  41b6c3:	mov    ebp,esp
  41b6c5:	push   ecx
  41b6c6:	push   esi
  41b6c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b6ce:	mov    esi,0xf89c85b9
  41b6d3:	call   0x41b5aa
  41b6d8:	mov    cx,WORD PTR [eax]
  41b6db:	mov    edx,0x3b50
  41b6e0:	sub    cx,dx
  41b6e3:	mov    edx,0x8a8c
  41b6e8:	xor    cx,dx
  41b6eb:	mov    edx,0x4e3c
  41b6f0:	cmp    cx,dx
  41b6f3:	je     0x41b74c
  41b6f5:	push   ebx
  41b6f6:	push   edi
  41b6f7:	movzx  ecx,cx
  41b6fa:	mov    edx,0xffcd8d20
  41b6ff:	mov    edi,0x7510899
  41b704:	mov    ebx,0x4e52
  41b709:	cmp    cx,bx
  41b70c:	jne    0x41b711
  41b70e:	mov    DWORD PTR [ebp-0x4],esi
  41b711:	lea    esi,[edx+0x1]
  41b714:	xor    esi,edi
  41b716:	mov    edx,esi
  41b718:	xor    edx,edi
  41b71a:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41b722:	mov    ebx,0x3b50
  41b727:	sub    cx,bx
  41b72a:	mov    ebx,0x8a8c
  41b72f:	xor    cx,bx
  41b732:	mov    ebx,0x4e3c
  41b737:	cmp    cx,bx
  41b73a:	jne    0x41b704
  41b73c:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41b743:	pop    edi
  41b744:	pop    ebx
  41b745:	je     0x41b74c
  41b747:	xor    eax,eax
  41b749:	inc    eax
  41b74a:	jmp    0x41b74e
  41b74c:	xor    eax,eax
  41b74e:	pop    esi
  41b74f:	leave  
  41b750:	ret    
  41b751:	push   ebp
  41b752:	mov    ebp,esp
  41b754:	push   ecx
  41b755:	mov    eax,DWORD PTR [ebp+0x8]
  41b758:	movzx  ecx,WORD PTR [eax]
  41b75b:	push   esi
  41b75c:	lea    eax,[ecx-0x3b50]
  41b762:	mov    esi,0x8a8c
  41b767:	push   edi
  41b768:	xor    eax,esi
  41b76a:	mov    edi,0x4e3c
  41b76f:	mov    DWORD PTR [ebp-0x4],edx
  41b772:	cmp    ax,di
  41b775:	je     0x41b7a2
  41b777:	mov    eax,DWORD PTR [ebp+0x8]
  41b77a:	sub    eax,edx
  41b77c:	mov    DWORD PTR [ebp+0x8],eax
  41b77f:	jmp    0x41b784
  41b781:	mov    eax,DWORD PTR [ebp+0x8]
  41b784:	mov    WORD PTR [edx],cx
  41b787:	add    edx,0x2
  41b78a:	movzx  edi,WORD PTR [eax+edx*1]
  41b78e:	mov    ecx,edi
  41b790:	add    edi,0xffffc4b0
  41b796:	xor    edi,esi
  41b798:	mov    eax,0x4e3c
  41b79d:	cmp    di,ax
  41b7a0:	jne    0x41b781
  41b7a2:	xor    eax,eax
  41b7a4:	pop    edi
  41b7a5:	mov    WORD PTR [edx],ax
  41b7a8:	mov    eax,DWORD PTR [ebp-0x4]
  41b7ab:	pop    esi
  41b7ac:	leave  
  41b7ad:	ret    0x4
  41b7b0:	push   ebp
  41b7b1:	mov    ebp,esp
  41b7b3:	sub    esp,0x18
  41b7b6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b7bd:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b7c4:	mov    eax,DWORD PTR [ebp-0x14]
  41b7c7:	xor    eax,0x7510899
  41b7cc:	add    eax,0x3272e0
  41b7d1:	mov    DWORD PTR [ebp-0x8],eax
  41b7d4:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41b7db:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41b7e2:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41b7e9:	mov    eax,DWORD PTR [ebp-0x14]
  41b7ec:	xor    eax,0x7510899
  41b7f1:	mov    ecx,DWORD PTR [ebp-0x8]
  41b7f4:	lea    eax,[ecx+eax*1+0x3272e0]
  41b7fb:	mov    ecx,DWORD PTR [ebp-0x18]
  41b7fe:	xor    ecx,0x7510899
  41b804:	add    ecx,0x3272e0
  41b80a:	mov    edx,DWORD PTR [ebp+0x10]
  41b80d:	imul   edx,ecx
  41b810:	cmp    eax,edx
  41b812:	jae    0x41b905
  41b818:	mov    eax,DWORD PTR [ebp+0x10]
  41b81b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b81e:	sub    eax,ecx
  41b820:	mov    ecx,DWORD PTR [ebp-0x10]
  41b823:	xor    ecx,0x7510899
  41b829:	add    ecx,0x3272e0
  41b82f:	cmp    eax,ecx
  41b831:	jbe    0x41b863
  41b833:	mov    eax,DWORD PTR [ebp+0x8]
  41b836:	add    eax,DWORD PTR [ebp-0x8]
  41b839:	mov    ecx,DWORD PTR [ebp+0xc]
  41b83c:	add    ecx,DWORD PTR [ebp-0x8]
  41b83f:	mov    edx,DWORD PTR [ecx]
  41b841:	mov    DWORD PTR [eax],edx
  41b843:	mov    ecx,DWORD PTR [ecx+0x4]
  41b846:	mov    DWORD PTR [eax+0x4],ecx
  41b849:	mov    eax,DWORD PTR [ebp-0x10]
  41b84c:	xor    eax,0x7510899
  41b851:	mov    ecx,DWORD PTR [ebp-0x8]
  41b854:	lea    eax,[ecx+eax*1+0x3272e0]
  41b85b:	mov    DWORD PTR [ebp-0x8],eax
  41b85e:	jmp    0x41b900
  41b863:	mov    eax,DWORD PTR [ebp+0x10]
  41b866:	mov    ecx,DWORD PTR [ebp-0x8]
  41b869:	sub    eax,ecx
  41b86b:	mov    ecx,DWORD PTR [ebp-0xc]
  41b86e:	xor    ecx,0x7510899
  41b874:	add    ecx,0x3272e0
  41b87a:	cmp    eax,ecx
  41b87c:	jbe    0x41b8a5
  41b87e:	mov    eax,DWORD PTR [ebp+0x8]
  41b881:	add    eax,DWORD PTR [ebp-0x8]
  41b884:	mov    ecx,DWORD PTR [ebp+0xc]
  41b887:	add    ecx,DWORD PTR [ebp-0x8]
  41b88a:	mov    ecx,DWORD PTR [ecx]
  41b88c:	mov    DWORD PTR [eax],ecx
  41b88e:	mov    eax,DWORD PTR [ebp-0xc]
  41b891:	xor    eax,0x7510899
  41b896:	mov    ecx,DWORD PTR [ebp-0x8]
  41b899:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8a0:	mov    DWORD PTR [ebp-0x8],eax
  41b8a3:	jmp    0x41b900
  41b8a5:	mov    eax,DWORD PTR [ebp+0x10]
  41b8a8:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8ab:	sub    eax,ecx
  41b8ad:	mov    ecx,DWORD PTR [ebp-0x4]
  41b8b0:	xor    ecx,0x7510899
  41b8b6:	add    ecx,0x3272e0
  41b8bc:	cmp    eax,ecx
  41b8be:	jbe    0x41b8e9
  41b8c0:	mov    eax,DWORD PTR [ebp+0x8]
  41b8c3:	add    eax,DWORD PTR [ebp-0x8]
  41b8c6:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8c9:	add    ecx,DWORD PTR [ebp-0x8]
  41b8cc:	mov    cx,WORD PTR [ecx]
  41b8cf:	mov    WORD PTR [eax],cx
  41b8d2:	mov    eax,DWORD PTR [ebp-0x4]
  41b8d5:	xor    eax,0x7510899
  41b8da:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8dd:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8e4:	mov    DWORD PTR [ebp-0x8],eax
  41b8e7:	jmp    0x41b900
  41b8e9:	mov    eax,DWORD PTR [ebp+0x8]
  41b8ec:	add    eax,DWORD PTR [ebp-0x8]
  41b8ef:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8f2:	add    ecx,DWORD PTR [ebp-0x8]
  41b8f5:	mov    cl,BYTE PTR [ecx]
  41b8f7:	mov    BYTE PTR [eax],cl
  41b8f9:	mov    eax,DWORD PTR [ebp-0x8]
  41b8fc:	inc    eax
  41b8fd:	mov    DWORD PTR [ebp-0x8],eax
  41b900:	jmp    0x41b7e9
  41b905:	leave  
  41b906:	ret    0xc
  41b909:	push   ebp
  41b90a:	mov    ebp,esp
  41b90c:	push   ecx
  41b90d:	push   ecx
  41b90e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b915:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41b91c:	xor    eax,eax
  41b91e:	inc    eax
  41b91f:	je     0x41b961
  41b921:	mov    eax,DWORD PTR [ebp-0x4]
  41b924:	xor    eax,0x7510899
  41b929:	add    eax,0x3272e0
  41b92e:	cmp    DWORD PTR [ebp+0xc],eax
  41b931:	jne    0x41b935
  41b933:	jmp    0x41b961
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	xor    eax,0x7510899
  41b93d:	add    eax,0x3272e0
  41b942:	mov    ecx,DWORD PTR [ebp+0xc]
  41b945:	sub    ecx,eax
  41b947:	mov    DWORD PTR [ebp+0xc],ecx
  41b94a:	mov    eax,DWORD PTR [ebp-0x4]
  41b94d:	xor    eax,0x7510899
  41b952:	add    eax,0x3272e0
  41b957:	mov    ecx,DWORD PTR [ebp+0x8]
  41b95a:	add    ecx,DWORD PTR [ebp+0xc]
  41b95d:	mov    BYTE PTR [ecx],al
  41b95f:	jmp    0x41b91c
  41b961:	leave  
  41b962:	ret    0x8
  41b965:	push   ebp
  41b966:	mov    ebp,esp
  41b968:	sub    esp,0x21c
  41b96e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b975:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41b97c:	mov    eax,DWORD PTR [ebp+0x10]
  41b97f:	mov    eax,DWORD PTR [ebp-0x4]
  41b982:	mov    ecx,DWORD PTR [ebp+0x8]
  41b985:	push   esi
  41b986:	push   edi
  41b987:	mov    edi,0x7510899
  41b98c:	xor    eax,edi
  41b98e:	mov    esi,0x3272e0
  41b993:	add    eax,esi
  41b995:	cmp    eax,ecx
  41b997:	mov    eax,DWORD PTR [ebp-0x4]
  41b99a:	jne    0x41b9a5
  41b99c:	xor    eax,edi
  41b99e:	add    eax,esi
  41b9a0:	jmp    0x41ba51
  41b9a5:	mov    ecx,DWORD PTR [ebp+0xc]
  41b9a8:	xor    eax,edi
  41b9aa:	add    eax,esi
  41b9ac:	cmp    eax,ecx
  41b9ae:	jne    0x41b9b5
  41b9b0:	mov    eax,DWORD PTR [ebp-0x4]
  41b9b3:	jmp    0x41b99c
  41b9b5:	lea    eax,[ebp-0x21c]
  41b9bb:	mov    DWORD PTR [ebp-0x8],eax
  41b9be:	mov    eax,DWORD PTR [ebp+0xc]
  41b9c1:	mov    DWORD PTR [ebp-0x10],eax
  41b9c4:	mov    eax,DWORD PTR [ebp-0x4]
  41b9c7:	xor    eax,edi
  41b9c9:	add    eax,esi
  41b9cb:	mov    DWORD PTR [ebp+0x10],eax
  41b9ce:	mov    eax,DWORD PTR [ebp+0xc]
  41b9d1:	push   ebx
  41b9d2:	call   0x41b6c2
  41b9d7:	mov    ebx,eax
  41b9d9:	mov    eax,DWORD PTR [ebp+0x8]
  41b9dc:	mov    eax,DWORD PTR [eax+0x14]
  41b9df:	jmp    0x41ba39
  41b9e1:	mov    eax,DWORD PTR [ebp+0xc]
  41b9e4:	sub    eax,0x8
  41b9e7:	mov    DWORD PTR [ebp-0xc],eax
  41b9ea:	mov    eax,DWORD PTR [ebp-0xc]
  41b9ed:	mov    eax,DWORD PTR [eax+0x28]
  41b9f0:	call   0x41b5aa
  41b9f5:	mov    DWORD PTR [ebp+0x10],eax
  41b9f8:	push   DWORD PTR [ebp+0x10]
  41b9fb:	mov    edx,DWORD PTR [ebp-0x8]
  41b9fe:	call   0x41b751
  41ba03:	mov    eax,DWORD PTR [ebp-0x4]
  41ba06:	xor    eax,edi
  41ba08:	add    eax,esi
  41ba0a:	cmp    eax,ebx
  41ba0c:	jne    0x41ba16
  41ba0e:	mov    eax,DWORD PTR [ebp-0x8]
  41ba11:	call   0x41b638
  41ba16:	mov    eax,DWORD PTR [ebp-0x14]
  41ba19:	xor    eax,edi
  41ba1b:	add    eax,esi
  41ba1d:	push   eax
  41ba1e:	push   DWORD PTR [ebp-0x10]
  41ba21:	push   DWORD PTR [ebp-0x8]
  41ba24:	call   0x41b33c
  41ba29:	mov    ecx,DWORD PTR [ebp-0x4]
  41ba2c:	xor    ecx,edi
  41ba2e:	add    ecx,esi
  41ba30:	cmp    eax,ecx
  41ba32:	je     0x41ba57
  41ba34:	mov    eax,DWORD PTR [ebp+0xc]
  41ba37:	mov    eax,DWORD PTR [eax]
  41ba39:	mov    DWORD PTR [ebp+0xc],eax
  41ba3c:	mov    eax,DWORD PTR [ebp+0x8]
  41ba3f:	mov    ecx,DWORD PTR [ebp+0xc]
  41ba42:	add    eax,0x14
  41ba45:	cmp    ecx,eax
  41ba47:	jne    0x41b9e1
  41ba49:	mov    eax,DWORD PTR [ebp-0x4]
  41ba4c:	xor    eax,edi
  41ba4e:	add    eax,esi
  41ba50:	pop    ebx
  41ba51:	pop    edi
  41ba52:	pop    esi
  41ba53:	leave  
  41ba54:	ret    0xc
  41ba57:	mov    eax,DWORD PTR [ebp-0xc]
  41ba5a:	mov    eax,DWORD PTR [eax+0x18]
  41ba5d:	jmp    0x41ba50
  41ba5f:	push   ebp
  41ba60:	mov    ebp,esp
  41ba62:	mov    eax,DWORD PTR [ebp+0xc]
  41ba65:	sub    esp,0x10
  41ba68:	cmp    DWORD PTR [ebp+0x8],0x0
  41ba6c:	push   ebx
  41ba6d:	push   esi
  41ba6e:	push   edi
  41ba6f:	je     0x41bb24
  41ba75:	test   eax,eax
  41ba77:	je     0x41bb24
  41ba7d:	movzx  eax,WORD PTR [eax+0x20]
  41ba81:	mov    ecx,eax
  41ba83:	mov    DWORD PTR [ebp-0x10],eax
  41ba86:	xor    edx,edx
  41ba88:	and    DWORD PTR [ebp-0x8],edx
  41ba8b:	mov    eax,0x8a8c
  41ba90:	xor    ecx,eax
  41ba92:	add    ecx,0x3b50
  41ba98:	mov    DWORD PTR [ebp-0xc],ecx
  41ba9b:	and    DWORD PTR [ebp-0x4],0x0
  41ba9f:	xor    ecx,ecx
  41baa1:	push   0x78
  41baa3:	pop    edi
  41baa4:	cmp    cx,WORD PTR [ebp-0xc]
  41baa8:	jae    0x41bb0e
  41baaa:	lea    esi,[edx-0x3b50]
  41bab0:	xor    esi,eax
  41bab2:	movzx  ecx,WORD PTR [ebp-0x4]
  41bab6:	mov    ebx,DWORD PTR [ebp+0xc]
  41bab9:	lea    ecx,[ebx+ecx*4]
  41babc:	cmp    WORD PTR [ecx+0x2],si
  41bac0:	jne    0x41baf9
  41bac2:	movzx  ecx,WORD PTR [ecx]
  41bac5:	mov    edi,0x4e3c
  41baca:	cmp    cx,di
  41bacd:	jne    0x41badb
  41bacf:	mov    ebx,DWORD PTR [ebp+0x8]
  41bad2:	movzx  edi,dx
  41bad5:	cmp    BYTE PTR [edi+ebx*1],0x0
  41bad9:	je     0x41bb08
  41badb:	mov    ebx,DWORD PTR [ebp+0x8]
  41bade:	movzx  edi,dx
  41bae1:	movsx  di,BYTE PTR [edi+ebx*1]
  41bae6:	mov    ebx,0x3b50
  41baeb:	sub    di,bx
  41baee:	xor    di,ax
  41baf1:	cmp    cx,di
  41baf4:	je     0x41bb08
  41baf6:	push   0x7a
  41baf8:	pop    edi
  41baf9:	inc    DWORD PTR [ebp-0x4]
  41bafc:	mov    cx,WORD PTR [ebp-0xc]
  41bb00:	cmp    WORD PTR [ebp-0x4],cx
  41bb04:	jb     0x41bab2
  41bb06:	jmp    0x41bb0e
  41bb08:	inc    DWORD PTR [ebp-0x8]
  41bb0b:	push   0x79
  41bb0d:	pop    edi
  41bb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41bb11:	movzx  ecx,dx
  41bb14:	cmp    BYTE PTR [ecx+esi*1],0x0
  41bb18:	je     0x41bb2d
  41bb1a:	inc    edx
  41bb1b:	cmp    edi,0x7a
  41bb1e:	jne    0x41ba9b
  41bb24:	xor    eax,eax
  41bb26:	pop    edi
  41bb27:	pop    esi
  41bb28:	pop    ebx
  41bb29:	leave  
  41bb2a:	ret    0x8
  41bb2d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bb30:	add    ecx,0xffffc4b0
  41bb36:	xor    cx,ax
  41bb39:	xor    eax,eax
  41bb3b:	cmp    cx,WORD PTR [ebp-0x10]
  41bb3f:	sete   al
  41bb42:	jmp    0x41bb26
  41bb44:	push   ebp
  41bb45:	mov    ebp,esp
  41bb47:	sub    esp,0x50
  41bb4a:	push   edi
  41bb4b:	mov    edi,eax
  41bb4d:	mov    eax,DWORD PTR [edi+0x1a8]
  41bb53:	cmp    DWORD PTR [eax],0x0
  41bb56:	jne    0x41bb5f
  41bb58:	xor    eax,eax
  41bb5a:	jmp    0x41bc8f
  41bb5f:	push   0x2c
  41bb61:	push   DWORD PTR [ebp+0x8]
  41bb64:	call   0x41b909
  41bb69:	mov    edx,DWORD PTR [edi+0x1ac]
  41bb6f:	lea    eax,[edi+0x22]
  41bb72:	mov    DWORD PTR [ebp-0x4c],eax
  41bb75:	lea    eax,[edi+0x44]
  41bb78:	mov    DWORD PTR [ebp-0x48],eax
  41bb7b:	lea    eax,[edi+0x66]
  41bb7e:	mov    DWORD PTR [ebp-0x44],eax
  41bb81:	lea    eax,[edi+0x88]
  41bb87:	mov    DWORD PTR [ebp-0x40],eax
  41bb8a:	lea    eax,[edi+0xaa]
  41bb90:	mov    DWORD PTR [ebp-0x3c],eax
  41bb93:	lea    eax,[edi+0xcc]
  41bb99:	mov    DWORD PTR [ebp-0x38],eax
  41bb9c:	lea    eax,[edi+0xee]
  41bba2:	mov    DWORD PTR [ebp-0x34],eax
  41bba5:	lea    eax,[edi+0x110]
  41bbab:	mov    DWORD PTR [ebp-0x30],eax
  41bbae:	lea    eax,[edi+0x132]
  41bbb4:	mov    DWORD PTR [ebp-0x2c],eax
  41bbb7:	lea    eax,[edi+0x154]
  41bbbd:	push   edi
  41bbbe:	mov    DWORD PTR [ebp-0x50],edi
  41bbc1:	mov    DWORD PTR [ebp-0x28],eax
  41bbc4:	call   0x41bcc3
  41bbc9:	push   eax
  41bbca:	mov    eax,DWORD PTR [edi+0x1a8]
  41bbd0:	push   DWORD PTR [eax]
  41bbd2:	call   0x41b965
  41bbd7:	mov    DWORD PTR [ebp-0x10],eax
  41bbda:	test   eax,eax
  41bbdc:	je     0x41bc8f
  41bbe2:	mov    ecx,DWORD PTR [eax+0x3c]
  41bbe5:	push   ebx
  41bbe6:	push   esi
  41bbe7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41bbeb:	add    esi,eax
  41bbed:	mov    edi,DWORD PTR [esi+0x24]
  41bbf0:	mov    ecx,DWORD PTR [esi+0x1c]
  41bbf3:	mov    edx,DWORD PTR [esi+0x20]
  41bbf6:	mov    ebx,DWORD PTR [esi+0x18]
  41bbf9:	add    edi,eax
  41bbfb:	mov    DWORD PTR [ebp-0x20],edi
  41bbfe:	mov    edi,DWORD PTR [esi+0x14]
  41bc01:	add    ecx,eax
  41bc03:	add    edx,eax
  41bc05:	mov    DWORD PTR [ebp-0xc],ecx
  41bc08:	mov    DWORD PTR [ebp-0x1c],edx
  41bc0b:	mov    DWORD PTR [ebp-0x8],edi
  41bc0e:	cmp    edi,ebx
  41bc10:	ja     0x41bc15
  41bc12:	mov    DWORD PTR [ebp-0x8],ebx
  41bc15:	xor    ebx,ebx
  41bc17:	mov    DWORD PTR [ebp-0x18],ebx
  41bc1a:	cmp    DWORD PTR [ebp-0x8],ebx
  41bc1d:	jbe    0x41bc8d
  41bc1f:	jmp    0x41bc24
  41bc21:	mov    edx,DWORD PTR [ebp-0x1c]
  41bc24:	mov    edi,DWORD PTR [ebp-0x20]
  41bc27:	movzx  edi,WORD PTR [edi+ebx*2]
  41bc2b:	cmp    ebx,DWORD PTR [esi+0x18]
  41bc2e:	jae    0x41bc8d
  41bc30:	cmp    edi,DWORD PTR [esi+0x14]
  41bc33:	jae    0x41bc8d
  41bc35:	mov    ebx,DWORD PTR [edx+ebx*4]
  41bc38:	mov    edx,DWORD PTR [ebp+0x8]
  41bc3b:	mov    edi,DWORD PTR [ecx+edi*4]
  41bc3e:	mov    DWORD PTR [ebp-0x4],edx
  41bc41:	lea    edx,[ebp-0x50]
  41bc44:	add    ebx,eax
  41bc46:	add    edi,eax
  41bc48:	sub    edx,DWORD PTR [ebp+0x8]
  41bc4b:	mov    DWORD PTR [ebp-0x14],0xb
  41bc52:	mov    DWORD PTR [ebp-0x24],edx
  41bc55:	mov    edx,DWORD PTR [ebp-0x4]
  41bc58:	cmp    DWORD PTR [edx],0x0
  41bc5b:	jne    0x41bc78
  41bc5d:	mov    eax,DWORD PTR [ebp-0x24]
  41bc60:	push   DWORD PTR [eax+edx*1]
  41bc63:	push   ebx
  41bc64:	call   0x41ba5f
  41bc69:	mov    ecx,DWORD PTR [ebp-0xc]
  41bc6c:	test   eax,eax
  41bc6e:	je     0x41bc75
  41bc70:	mov    eax,DWORD PTR [ebp-0x4]
  41bc73:	mov    DWORD PTR [eax],edi
  41bc75:	mov    eax,DWORD PTR [ebp-0x10]
  41bc78:	add    DWORD PTR [ebp-0x4],0x4
  41bc7c:	dec    DWORD PTR [ebp-0x14]
  41bc7f:	jne    0x41bc55
  41bc81:	mov    ebx,DWORD PTR [ebp-0x18]
  41bc84:	inc    ebx
  41bc85:	mov    DWORD PTR [ebp-0x18],ebx
  41bc88:	cmp    ebx,DWORD PTR [ebp-0x8]
  41bc8b:	jb     0x41bc21
  41bc8d:	pop    esi
  41bc8e:	pop    ebx
  41bc8f:	pop    edi
  41bc90:	leave  
  41bc91:	ret    0x4
  41bc94:	push   ebp
  41bc95:	mov    ebp,esp
  41bc97:	mov    eax,DWORD PTR [ebp+0x8]
  41bc9a:	push   esi
  41bc9b:	push   DWORD PTR [eax+0x1d8]
  41bca1:	lea    esi,[eax+0x198]
  41bca7:	mov    eax,DWORD PTR [ebp+0x8]
  41bcaa:	call   0x41bb44
  41bcaf:	mov    ecx,DWORD PTR [esi]
  41bcb1:	mov    DWORD PTR [ecx],eax
  41bcb3:	mov    eax,DWORD PTR [esi]
  41bcb5:	xor    ecx,ecx
  41bcb7:	cmp    DWORD PTR [eax],ecx
  41bcb9:	pop    esi
  41bcba:	setne  cl
  41bcbd:	mov    eax,ecx
  41bcbf:	pop    ebp
  41bcc0:	ret    0x4
  41bcc3:	mov    ecx,DWORD PTR [edi+0x188]
  41bcc9:	push   ebx
  41bcca:	jmp    0x41bcdf
  41bccc:	xor    eax,0x8a8c
  41bcd1:	add    eax,0x3b50
  41bcd6:	mov    WORD PTR [ecx],ax
  41bcd9:	add    ecx,0x2
  41bcdc:	add    edx,0x2
  41bcdf:	movzx  eax,WORD PTR [edx]
  41bce2:	mov    ebx,0x4e3c
  41bce7:	cmp    ax,bx
  41bcea:	jne    0x41bccc
  41bcec:	xor    eax,eax
  41bcee:	mov    WORD PTR [ecx],ax
  41bcf1:	mov    eax,DWORD PTR [edi+0x188]
  41bcf7:	pop    ebx
  41bcf8:	ret    
  41bcf9:	push   edi
  41bcfa:	mov    edi,eax
  41bcfc:	mov    eax,DWORD PTR [esi+0x188]
  41bd02:	shl    edi,0x6
  41bd05:	add    eax,edi
  41bd07:	jmp    0x41bd13
  41bd09:	xor    cl,0x73
  41bd0c:	sub    cl,0x9
  41bd0f:	mov    BYTE PTR [eax],cl
  41bd11:	inc    eax
  41bd12:	inc    edx
  41bd13:	mov    cl,BYTE PTR [edx]
  41bd15:	cmp    cl,0x7a
  41bd18:	jne    0x41bd09
  41bd1a:	mov    BYTE PTR [eax],0x0
  41bd1d:	mov    eax,DWORD PTR [esi+0x188]
  41bd23:	add    eax,edi
  41bd25:	pop    edi
  41bd26:	ret    
  41bd27:	push   ebp
  41bd28:	mov    ebp,esp
  41bd2a:	sub    esp,0x38
  41bd2d:	push   ebx
  41bd2e:	mov    ebx,0xf89c85b9
  41bd33:	mov    DWORD PTR [ebp-0x4],ebx
  41bd36:	lea    eax,[ebx-0x1]
  41bd39:	push   esi
  41bd3a:	mov    DWORD PTR [ebp-0x24],eax
  41bd3d:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd40:	mov    edx,DWORD PTR [ebp+0x8]
  41bd43:	mov    esi,0x7510899
  41bd48:	push   edi
  41bd49:	xor    ecx,esi
  41bd4b:	mov    edi,0x3272e0
  41bd50:	add    ecx,edi
  41bd52:	cmp    edx,ecx
  41bd54:	je     0x41bec2
  41bd5a:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd5d:	mov    edx,DWORD PTR [ebp+0xc]
  41bd60:	xor    ecx,esi
  41bd62:	add    ecx,edi
  41bd64:	cmp    edx,ecx
  41bd66:	je     0x41bec2
  41bd6c:	mov    ecx,DWORD PTR [ebp+0x10]
  41bd6f:	mov    DWORD PTR [ebp-0x18],ecx
  41bd72:	mov    ecx,DWORD PTR [ebp+0xc]
  41bd75:	mov    DWORD PTR [ebp-0x14],ecx
  41bd78:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd7b:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41bd82:	mov    DWORD PTR [ebp-0x20],eax
  41bd85:	mov    DWORD PTR [ebp-0x10],ebx
  41bd88:	mov    DWORD PTR [ebp+0xc],eax
  41bd8b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41bd92:	mov    eax,DWORD PTR [ebp+0xc]
  41bd95:	mov    DWORD PTR [ebp-0xc],ecx
  41bd98:	xor    eax,esi
  41bd9a:	mov    ecx,0xffcd8d20
  41bd9f:	sub    ecx,eax
  41bda1:	add    ecx,DWORD PTR [ebp-0x14]
  41bda4:	mov    DWORD PTR [ebp+0x8],ecx
  41bda7:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41bdae:	jmp    0x41beb2
  41bdb3:	mov    eax,DWORD PTR [ebp+0xc]
  41bdb6:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdb9:	xor    eax,esi
  41bdbb:	xor    ecx,esi
  41bdbd:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41bdc4:	mov    eax,DWORD PTR [ebp+0x8]
  41bdc7:	xor    edx,edx
  41bdc9:	div    ecx
  41bdcb:	mov    eax,DWORD PTR [ebp+0x10]
  41bdce:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdd1:	xor    eax,esi
  41bdd3:	xor    ecx,esi
  41bdd5:	sub    eax,ecx
  41bdd7:	cmp    edx,eax
  41bdd9:	jne    0x41be6e
  41bddf:	mov    eax,DWORD PTR [ebp+0x8]
  41bde2:	add    eax,DWORD PTR [ebp-0xc]
  41bde5:	mov    dl,BYTE PTR [eax]
  41bde7:	mov    eax,DWORD PTR [ebp-0x10]
  41bdea:	mov    ecx,DWORD PTR [ebp-0x8]
  41bded:	xor    eax,esi
  41bdef:	xor    ecx,esi
  41bdf1:	add    eax,edi
  41bdf3:	add    ecx,edi
  41bdf5:	cmp    eax,ecx
  41bdf7:	jae    0x41be3f
  41bdf9:	lea    ecx,[eax-0x3272e0]
  41bdff:	mov    DWORD PTR [ebp-0x4],ecx
  41be02:	mov    ebx,DWORD PTR [ebp-0x4]
  41be05:	xor    ebx,esi
  41be07:	add    ebx,0x7f55d8fb
  41be0d:	lea    ecx,[ebp+eax*4-0x38]
  41be11:	mov    DWORD PTR [ecx],ebx
  41be13:	mov    ebx,DWORD PTR [ecx]
  41be15:	cmp    ebx,0x244ecbda
  41be1b:	jbe    0x41be25
  41be1d:	add    DWORD PTR [ecx],0x405fc1d
  41be23:	jmp    0x41be2b
  41be25:	add    DWORD PTR [ecx],0xfdaf43e3
  41be2b:	mov    ecx,DWORD PTR [ebp-0x8]
  41be2e:	xor    ecx,esi
  41be30:	inc    eax
  41be31:	inc    DWORD PTR [ebp-0x4]
  41be34:	add    ecx,edi
  41be36:	cmp    eax,ecx
  41be38:	jb     0x41be02
  41be3a:	mov    ebx,0xf89c85b9
  41be3f:	mov    eax,DWORD PTR [ebp-0x18]
  41be42:	test   eax,eax
  41be44:	jne    0x41be4e
  41be46:	xor    dl,0x73
  41be49:	sub    dl,0x9
  41be4c:	jmp    0x41be64
  41be4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41be51:	xor    al,0x99
  41be53:	mov    cl,0x20
  41be55:	sub    cl,al
  41be57:	add    dl,cl
  41be59:	mov    ecx,DWORD PTR [ebp-0x20]
  41be5c:	xor    cl,0x99
  41be5f:	sub    cl,0x20
  41be62:	ror    dl,cl
  41be64:	xor    eax,eax
  41be66:	mov    eax,DWORD PTR [ebp+0x8]
  41be69:	add    eax,DWORD PTR [ebp-0xc]
  41be6c:	mov    BYTE PTR [eax],dl
  41be6e:	mov    eax,DWORD PTR [ebp+0x8]
  41be71:	mov    ecx,DWORD PTR [ebp-0x10]
  41be74:	sub    eax,edi
  41be76:	xor    eax,esi
  41be78:	cmp    eax,ecx
  41be7a:	jne    0x41bea0
  41be7c:	mov    eax,DWORD PTR [ebp+0x10]
  41be7f:	mov    ecx,DWORD PTR [ebp+0xc]
  41be82:	xor    eax,esi
  41be84:	xor    ecx,esi
  41be86:	sub    eax,ecx
  41be88:	sub    eax,edi
  41be8a:	xor    eax,esi
  41be8c:	mov    DWORD PTR [ebp+0x10],eax
  41be8f:	mov    eax,DWORD PTR [ebp+0xc]
  41be92:	xor    eax,esi
  41be94:	mov    ecx,0xffcd8d20
  41be99:	sub    ecx,eax
  41be9b:	add    ecx,DWORD PTR [ebp-0x14]
  41be9e:	jmp    0x41beaf
  41bea0:	mov    eax,DWORD PTR [ebp+0xc]
  41bea3:	xor    eax,esi
  41bea5:	mov    ecx,0xffcd8d20
  41beaa:	sub    ecx,eax
  41beac:	add    ecx,DWORD PTR [ebp+0x8]
  41beaf:	mov    DWORD PTR [ebp+0x8],ecx
  41beb2:	mov    eax,DWORD PTR [ebp+0x10]
  41beb5:	cmp    eax,ebx
  41beb7:	jne    0x41bdb3
  41bebd:	mov    eax,DWORD PTR [ebp-0x24]
  41bec0:	jmp    0x41bec5
  41bec2:	mov    eax,DWORD PTR [ebp-0x4]
  41bec5:	xor    eax,esi
  41bec7:	add    eax,edi
  41bec9:	pop    edi
  41beca:	pop    esi
  41becb:	pop    ebx
  41becc:	leave  
  41becd:	ret    0xc
  41bed0:	push   ebp
  41bed1:	mov    ebp,esp
  41bed3:	sub    esp,0x14
  41bed6:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41bedd:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41bee4:	mov    eax,DWORD PTR [ebx]
  41bee6:	mov    DWORD PTR [ebp-0x8],eax
  41bee9:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41bef0:	push   esi
  41bef1:	push   edi
  41bef2:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41bef9:	mov    edi,DWORD PTR [ebp-0x4]
  41befc:	mov    ecx,DWORD PTR [ebp-0x10]
  41beff:	mov    eax,0x7510899
  41bf04:	xor    edi,eax
  41bf06:	mov    edx,0x3272e0
  41bf0b:	xor    ecx,eax
  41bf0d:	add    edi,edx
  41bf0f:	add    ecx,edx
  41bf11:	imul   edi,ecx
  41bf14:	jmp    0x41bf5c
  41bf16:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf19:	mov    esi,DWORD PTR [ebp-0x4]
  41bf1c:	xor    ecx,eax
  41bf1e:	xor    esi,eax
  41bf20:	add    ecx,edx
  41bf22:	add    esi,edx
  41bf24:	test   esi,ecx
  41bf26:	mov    esi,DWORD PTR [ebp-0x8]
  41bf29:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf2c:	je     0x41bf43
  41bf2e:	xor    ecx,eax
  41bf30:	xor    esi,eax
  41bf32:	add    ecx,edx
  41bf34:	add    esi,edx
  41bf36:	shr    esi,cl
  41bf38:	mov    ecx,DWORD PTR [ebp-0x14]
  41bf3b:	xor    ecx,eax
  41bf3d:	add    ecx,edx
  41bf3f:	xor    esi,ecx
  41bf41:	jmp    0x41bf4d
  41bf43:	xor    esi,eax
  41bf45:	xor    ecx,eax
  41bf47:	add    esi,edx
  41bf49:	add    ecx,edx
  41bf4b:	shr    esi,cl
  41bf4d:	mov    DWORD PTR [ebp-0x8],esi
  41bf50:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf53:	xor    ecx,eax
  41bf55:	lea    edi,[edi+ecx*1+0x3272e0]
  41bf5c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bf5f:	mov    esi,DWORD PTR [ebp-0x4]
  41bf62:	xor    esi,eax
  41bf64:	xor    ecx,eax
  41bf66:	sub    ecx,esi
  41bf68:	cmp    edi,ecx
  41bf6a:	jbe    0x41bf16
  41bf6c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf6f:	pop    edi
  41bf70:	mov    DWORD PTR [ebx],eax
  41bf72:	mov    eax,DWORD PTR [ebp-0x8]
  41bf75:	pop    esi
  41bf76:	leave  
  41bf77:	ret    
  41bf78:	push   ebp
  41bf79:	mov    ebp,esp
  41bf7b:	sub    esp,0x420
  41bf81:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41bf88:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41bf8f:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41bf96:	push   ebx
  41bf97:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41bf9e:	mov    eax,DWORD PTR [ebp-0x14]
  41bfa1:	push   esi
  41bfa2:	mov    esi,0x7510899
  41bfa7:	push   edi
  41bfa8:	xor    eax,esi
  41bfaa:	mov    edi,0x3272e0
  41bfaf:	add    eax,edi
  41bfb1:	mov    DWORD PTR [ebp-0x8],eax
  41bfb4:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41bfbb:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41bfc2:	mov    DWORD PTR [ebp-0x10],0x8
  41bfc9:	mov    ecx,ecx
  41bfcb:	mov    eax,DWORD PTR [ebp-0xc]
  41bfce:	mov    ecx,DWORD PTR [ebp-0x14]
  41bfd1:	xor    eax,esi
  41bfd3:	xor    ecx,esi
  41bfd5:	add    eax,edi
  41bfd7:	add    ecx,edi
  41bfd9:	imul   eax,ecx
  41bfdc:	jmp    0x41c00f
  41bfde:	mov    eax,DWORD PTR [ebp-0x4]
  41bfe1:	sub    eax,edi
  41bfe3:	xor    eax,esi
  41bfe5:	mov    DWORD PTR [ebp-0x8],eax
  41bfe8:	lea    ebx,[ebp-0x8]
  41bfeb:	call   0x41bed0
  41bff0:	mov    DWORD PTR [ebp-0x8],eax
  41bff3:	mov    eax,DWORD PTR [ebp-0x8]
  41bff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bff9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41c000:	mov    eax,DWORD PTR [ebp-0xc]
  41c003:	mov    ecx,DWORD PTR [ebp-0x4]
  41c006:	xor    eax,esi
  41c008:	lea    eax,[eax+ecx*1+0x3272e0]
  41c00f:	mov    DWORD PTR [ebp-0x4],eax
  41c012:	mov    eax,DWORD PTR [ebp-0x18]
  41c015:	mov    ecx,DWORD PTR [ebp-0xc]
  41c018:	xor    ecx,esi
  41c01a:	xor    eax,esi
  41c01c:	sub    eax,ecx
  41c01e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c021:	cmp    ecx,eax
  41c023:	jbe    0x41bfde
  41c025:	mov    eax,DWORD PTR [ebp-0x1c]
  41c028:	xor    eax,esi
  41c02a:	add    eax,edi
  41c02c:	mov    DWORD PTR [ebp-0x8],eax
  41c02f:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41c036:	mov    ebx,ebx
  41c038:	jmp    0x41c09b
  41c03a:	mov    ecx,DWORD PTR [ebp-0x20]
  41c03d:	mov    eax,DWORD PTR [ebp-0x8]
  41c040:	xor    ecx,esi
  41c042:	add    ecx,edi
  41c044:	shr    eax,cl
  41c046:	mov    DWORD PTR [ebp-0x4],eax
  41c049:	mov    eax,DWORD PTR [ebp+0x8]
  41c04c:	mov    cl,BYTE PTR [eax]
  41c04e:	mov    BYTE PTR [ebp+0xb],cl
  41c051:	mov    cl,BYTE PTR [ebp+0xb]
  41c054:	mov    edx,DWORD PTR [ebp-0x8]
  41c057:	movzx  ecx,cl
  41c05a:	xor    ecx,edx
  41c05c:	mov    DWORD PTR [ebp+0x8],ecx
  41c05f:	mov    ecx,DWORD PTR [ebp-0x18]
  41c062:	mov    edx,DWORD PTR [ebp+0x8]
  41c065:	xor    ecx,esi
  41c067:	add    ecx,edi
  41c069:	and    ecx,edx
  41c06b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41c072:	mov    edx,DWORD PTR [ebp-0x4]
  41c075:	xor    ecx,edx
  41c077:	mov    DWORD PTR [ebp-0x8],ecx
  41c07a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c07d:	xor    ecx,esi
  41c07f:	lea    eax,[eax+ecx*1+0x3272e0]
  41c086:	mov    DWORD PTR [ebp+0x8],eax
  41c089:	mov    eax,DWORD PTR [ebp-0xc]
  41c08c:	xor    eax,esi
  41c08e:	mov    ecx,0xffcd8d20
  41c093:	sub    ecx,eax
  41c095:	add    ecx,DWORD PTR [ebp-0x10]
  41c098:	mov    DWORD PTR [ebp-0x10],ecx
  41c09b:	mov    eax,DWORD PTR [ebp-0x14]
  41c09e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0a1:	xor    eax,esi
  41c0a3:	add    eax,edi
  41c0a5:	cmp    ecx,eax
  41c0a7:	jne    0x41c03a
  41c0a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c0ac:	mov    ecx,DWORD PTR [ebp-0x8]
  41c0af:	xor    eax,esi
  41c0b1:	add    eax,edi
  41c0b3:	pop    edi
  41c0b4:	pop    esi
  41c0b5:	xor    eax,ecx
  41c0b7:	pop    ebx
  41c0b8:	leave  
  41c0b9:	ret    0x4
  41c0bc:	push   ebp
  41c0bd:	mov    ebp,esp
  41c0bf:	mov    eax,DWORD PTR [ebp+0x1c]
  41c0c2:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0c5:	mov    edx,DWORD PTR [ebp+0x10]
  41c0c8:	mov    eax,DWORD PTR [eax+0x190]
  41c0ce:	mov    eax,DWORD PTR [eax]
  41c0d0:	sub    esp,0x64
  41c0d3:	push   ebx
  41c0d4:	push   esi
  41c0d5:	push   edi
  41c0d6:	mov    edi,0x7510899
  41c0db:	xor    ecx,edi
  41c0dd:	mov    ebx,0x3272e0
  41c0e2:	add    ecx,ebx
  41c0e4:	cmp    ecx,edx
  41c0e6:	jne    0x41c0f7
  41c0e8:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41c0f2:	jmp    0x41c5f4
  41c0f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0fa:	mov    esi,DWORD PTR [ebp+0x14]
  41c0fd:	mov    edx,DWORD PTR [esi]
  41c0ff:	xor    ecx,edi
  41c101:	add    ecx,ebx
  41c103:	cmp    edx,ecx
  41c105:	je     0x41c5af
  41c10b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c10e:	mov    DWORD PTR [ebp-0x1c],eax
  41c111:	mov    DWORD PTR [ebp+0x1c],ecx
  41c114:	mov    ecx,DWORD PTR [ebp+0x18]
  41c117:	mov    eax,DWORD PTR [esi]
  41c119:	mov    DWORD PTR [ebp-0x20],eax
  41c11c:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41c123:	mov    edx,0xf89c85b8
  41c128:	mov    DWORD PTR [ebp-0x8],edx
  41c12b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c12e:	mov    DWORD PTR [ebp+0x1c],eax
  41c131:	mov    eax,DWORD PTR [ebp+0x1c]
  41c134:	mov    eax,DWORD PTR [eax+0x190]
  41c13a:	mov    eax,DWORD PTR [eax]
  41c13c:	mov    DWORD PTR [ebp-0x24],ecx
  41c13f:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c142:	mov    ecx,DWORD PTR [ecx+0x190]
  41c148:	mov    ecx,DWORD PTR [ecx]
  41c14a:	add    ecx,DWORD PTR [eax+0x3c]
  41c14d:	mov    DWORD PTR [ebp+0x10],ecx
  41c150:	mov    eax,DWORD PTR [ebp+0x8]
  41c153:	xor    eax,edi
  41c155:	add    eax,ebx
  41c157:	mov    DWORD PTR [ebp-0x4],eax
  41c15a:	mov    eax,DWORD PTR [ebp+0x8]
  41c15d:	xor    eax,edi
  41c15f:	add    eax,ebx
  41c161:	mov    DWORD PTR [ebp+0x18],eax
  41c164:	mov    eax,DWORD PTR [ebp+0x10]
  41c167:	mov    eax,DWORD PTR [eax+0x50]
  41c16a:	sub    eax,0xc
  41c16d:	mov    DWORD PTR [ebp-0x28],eax
  41c170:	mov    eax,DWORD PTR [ebp+0x10]
  41c173:	mov    eax,DWORD PTR [eax+0x38]
  41c176:	mov    ecx,DWORD PTR [ebp+0x10]
  41c179:	dec    eax
  41c17a:	test   DWORD PTR [ecx+0x54],eax
  41c17d:	mov    eax,DWORD PTR [ebp+0x10]
  41c180:	je     0x41c19a
  41c182:	mov    eax,DWORD PTR [eax+0x38]
  41c185:	mov    ecx,DWORD PTR [ebp+0x10]
  41c188:	mov    ecx,DWORD PTR [ecx+0x54]
  41c18b:	dec    eax
  41c18c:	not    eax
  41c18e:	and    ecx,eax
  41c190:	mov    eax,DWORD PTR [ebp+0x10]
  41c193:	mov    eax,DWORD PTR [eax+0x38]
  41c196:	add    eax,ecx
  41c198:	jmp    0x41c19d
  41c19a:	mov    eax,DWORD PTR [eax+0x54]
  41c19d:	mov    DWORD PTR [ebp+0x1c],eax
  41c1a0:	mov    eax,DWORD PTR [ebp+0x8]
  41c1a3:	xor    eax,edi
  41c1a5:	add    eax,ebx
  41c1a7:	mov    DWORD PTR [ebp+0x18],eax
  41c1aa:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ad:	xor    eax,edi
  41c1af:	add    eax,ebx
  41c1b1:	mov    DWORD PTR [ebp+0x18],eax
  41c1b4:	mov    eax,DWORD PTR [ebp+0x8]
  41c1b7:	mov    ecx,DWORD PTR [ebp-0x24]
  41c1ba:	xor    eax,edi
  41c1bc:	add    eax,ebx
  41c1be:	mov    DWORD PTR [ecx],eax
  41c1c0:	mov    DWORD PTR [ebp+0x18],edx
  41c1c3:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41c1ca:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41c1d1:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41c1d8:	mov    eax,DWORD PTR [ebp-0x8]
  41c1db:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c1de:	xor    eax,edi
  41c1e0:	add    eax,ebx
  41c1e2:	imul   eax,ecx
  41c1e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c1e8:	mov    edx,DWORD PTR [ebp-0x28]
  41c1eb:	xor    ecx,edi
  41c1ed:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c1f4:	cmp    eax,ecx
  41c1f6:	jae    0x41c5a8
  41c1fc:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ff:	xor    eax,edi
  41c201:	add    eax,ebx
  41c203:	mov    DWORD PTR [ebp+0x18],eax
  41c206:	mov    eax,DWORD PTR [ebp+0x1c]
  41c209:	add    eax,DWORD PTR [ebp-0x1c]
  41c20c:	mov    DWORD PTR [ebp-0x4],eax
  41c20f:	push   DWORD PTR [ebp-0x4]
  41c212:	mov    esi,DWORD PTR [ebp-0x1c]
  41c215:	mov    ecx,DWORD PTR [ebp+0x10]
  41c218:	call   0x41b2fe
  41c21d:	mov    DWORD PTR [ebp+0xc],eax
  41c220:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41c227:	mov    eax,DWORD PTR [ebp-0x18]
  41c22a:	xor    eax,edi
  41c22c:	add    eax,ebx
  41c22e:	push   eax
  41c22f:	lea    eax,[ebp-0x40]
  41c232:	push   eax
  41c233:	call   0x41b909
  41c238:	mov    eax,DWORD PTR [ebp+0xc]
  41c23b:	test   eax,eax
  41c23d:	je     0x41c28d
  41c23f:	mov    eax,DWORD PTR [ebp-0x18]
  41c242:	xor    eax,edi
  41c244:	add    eax,ebx
  41c246:	push   eax
  41c247:	push   DWORD PTR [ebp+0xc]
  41c24a:	lea    eax,[ebp-0x40]
  41c24d:	push   eax
  41c24e:	call   0x41b7b0
  41c253:	mov    eax,DWORD PTR [ebp-0x4]
  41c256:	mov    DWORD PTR [ebp-0x18],eax
  41c259:	mov    eax,DWORD PTR [ebp-0x18]
  41c25c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c25f:	sub    eax,ecx
  41c261:	mov    DWORD PTR [ebp-0x18],eax
  41c264:	mov    eax,DWORD PTR [ebp+0xc]
  41c267:	mov    ecx,DWORD PTR [ebp+0xc]
  41c26a:	mov    eax,DWORD PTR [eax+0x10]
  41c26d:	add    eax,DWORD PTR [ecx+0xc]
  41c270:	mov    ecx,DWORD PTR [ebp-0x18]
  41c273:	cmp    ecx,eax
  41c275:	jb     0x41c28d
  41c277:	mov    eax,DWORD PTR [ebp+0xc]
  41c27a:	mov    eax,DWORD PTR [eax+0xc]
  41c27d:	mov    ecx,DWORD PTR [ebp+0xc]
  41c280:	add    eax,DWORD PTR [ecx+0x8]
  41c283:	mov    ecx,DWORD PTR [ebp-0x18]
  41c286:	sub    eax,ecx
  41c288:	jmp    0x41c57b
  41c28d:	push   0xc
  41c28f:	push   DWORD PTR [ebp-0x4]
  41c292:	lea    eax,[ebp-0x4c]
  41c295:	push   eax
  41c296:	call   0x41b7b0
  41c29b:	mov    eax,0xf89c85b9
  41c2a0:	mov    DWORD PTR [ebp-0x2c],eax
  41c2a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41c2aa:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41c2b1:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41c2b8:	lea    ecx,[ebp-0x2c]
  41c2bb:	mov    DWORD PTR [ebp-0xc],ecx
  41c2be:	lea    ecx,[ebp-0x30]
  41c2c1:	mov    DWORD PTR [ebp-0x10],ecx
  41c2c4:	lea    ecx,[ebp-0x34]
  41c2c7:	mov    DWORD PTR [ebp+0xc],ecx
  41c2ca:	lea    ecx,[ebp-0x38]
  41c2cd:	mov    DWORD PTR [ebp-0x14],ecx
  41c2d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c2d3:	xor    ecx,edi
  41c2d5:	add    ecx,ebx
  41c2d7:	mov    DWORD PTR [ebp-0x18],ecx
  41c2da:	jmp    0x41c4d6
  41c2df:	cmp    eax,0xf89c85bb
  41c2e4:	je     0x41c4e8
  41c2ea:	mov    ecx,DWORD PTR [ebp-0x8]
  41c2ed:	xor    ecx,edi
  41c2ef:	mov    esi,eax
  41c2f1:	add    ecx,ebx
  41c2f3:	mov    DWORD PTR [ebp+0x18],ecx
  41c2f6:	mov    eax,DWORD PTR [ebp-0x18]
  41c2f9:	xor    esi,edi
  41c2fb:	lea    eax,[eax+esi*1+0x3272e0]
  41c302:	mov    DWORD PTR [ebp-0x18],eax
  41c305:	mov    eax,DWORD PTR [ebp-0x8]
  41c308:	mov    ecx,DWORD PTR [ebp-0x18]
  41c30b:	xor    eax,edi
  41c30d:	add    eax,ebx
  41c30f:	cmp    ecx,eax
  41c311:	jne    0x41c326
  41c313:	mov    eax,DWORD PTR [ebp+0x8]
  41c316:	xor    eax,edi
  41c318:	add    eax,ebx
  41c31a:	push   eax
  41c31b:	push   0xc
  41c31d:	lea    eax,[ebp-0x4c]
  41c320:	push   eax
  41c321:	call   0x41bd27
  41c326:	mov    eax,DWORD PTR [ebp-0xc]
  41c329:	mov    eax,DWORD PTR [eax]
  41c32b:	xor    eax,edi
  41c32d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c334:	mov    ecx,DWORD PTR [ebp+0x8]
  41c337:	xor    ecx,edi
  41c339:	movzx  eax,al
  41c33c:	add    ecx,ebx
  41c33e:	cmp    eax,ecx
  41c340:	je     0x41c4be
  41c346:	mov    eax,DWORD PTR [ebp-0x10]
  41c349:	mov    eax,DWORD PTR [eax]
  41c34b:	xor    eax,edi
  41c34d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c354:	mov    ecx,DWORD PTR [ebp+0x8]
  41c357:	xor    ecx,edi
  41c359:	movzx  eax,al
  41c35c:	add    ecx,ebx
  41c35e:	cmp    eax,ecx
  41c360:	je     0x41c4be
  41c366:	mov    eax,DWORD PTR [ebp+0xc]
  41c369:	mov    eax,DWORD PTR [eax]
  41c36b:	xor    eax,edi
  41c36d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c374:	mov    ecx,DWORD PTR [ebp+0x8]
  41c377:	xor    ecx,edi
  41c379:	movzx  eax,al
  41c37c:	add    ecx,ebx
  41c37e:	cmp    eax,ecx
  41c380:	je     0x41c4be
  41c386:	mov    eax,DWORD PTR [ebp-0x14]
  41c389:	mov    eax,DWORD PTR [eax]
  41c38b:	xor    eax,edi
  41c38d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c394:	mov    ecx,DWORD PTR [ebp+0x8]
  41c397:	xor    ecx,edi
  41c399:	movzx  eax,al
  41c39c:	add    ecx,ebx
  41c39e:	cmp    eax,ecx
  41c3a0:	je     0x41c4be
  41c3a6:	mov    eax,DWORD PTR [ebp-0x10]
  41c3a9:	mov    eax,DWORD PTR [eax]
  41c3ab:	xor    eax,edi
  41c3ad:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3b7:	mov    ecx,DWORD PTR [ecx]
  41c3b9:	xor    ecx,edi
  41c3bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3c2:	xor    al,cl
  41c3c4:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3c7:	mov    ecx,DWORD PTR [ecx]
  41c3c9:	xor    ecx,edi
  41c3cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3d2:	or     al,cl
  41c3d4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3d7:	mov    ecx,DWORD PTR [ecx]
  41c3d9:	xor    ecx,edi
  41c3db:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c3e2:	cmp    cl,al
  41c3e4:	jne    0x41c4be
  41c3ea:	mov    eax,DWORD PTR [ebp+0xc]
  41c3ed:	mov    eax,DWORD PTR [eax]
  41c3ef:	xor    eax,edi
  41c3f1:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3f8:	mov    ecx,DWORD PTR [ebp-0x10]
  41c3fb:	mov    ecx,DWORD PTR [ecx]
  41c3fd:	xor    ecx,edi
  41c3ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c406:	xor    al,cl
  41c408:	mov    ecx,DWORD PTR [ebp-0x14]
  41c40b:	mov    ecx,DWORD PTR [ecx]
  41c40d:	xor    ecx,edi
  41c40f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c416:	or     al,cl
  41c418:	mov    ecx,DWORD PTR [ebp-0x10]
  41c41b:	mov    ecx,DWORD PTR [ecx]
  41c41d:	xor    ecx,edi
  41c41f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c426:	cmp    cl,al
  41c428:	jne    0x41c4be
  41c42e:	mov    eax,DWORD PTR [ebp-0x14]
  41c431:	mov    eax,DWORD PTR [eax]
  41c433:	xor    eax,edi
  41c435:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c43c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c43f:	mov    ecx,DWORD PTR [ecx]
  41c441:	xor    ecx,edi
  41c443:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c44a:	xor    al,cl
  41c44c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c44f:	mov    ecx,DWORD PTR [ecx]
  41c451:	xor    ecx,edi
  41c453:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c45a:	or     al,cl
  41c45c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45f:	mov    ecx,DWORD PTR [ecx]
  41c461:	xor    ecx,edi
  41c463:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c46a:	cmp    cl,al
  41c46c:	jne    0x41c4be
  41c46e:	mov    eax,DWORD PTR [ebp-0x14]
  41c471:	mov    eax,DWORD PTR [eax]
  41c473:	xor    eax,edi
  41c475:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c47c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c47f:	mov    ecx,DWORD PTR [ecx]
  41c481:	xor    ecx,edi
  41c483:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c48a:	xor    al,cl
  41c48c:	mov    ecx,DWORD PTR [ebp-0x10]
  41c48f:	mov    ecx,DWORD PTR [ecx]
  41c491:	xor    ecx,edi
  41c493:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c49a:	or     al,cl
  41c49c:	mov    ecx,DWORD PTR [ebp-0x14]
  41c49f:	mov    ecx,DWORD PTR [ecx]
  41c4a1:	xor    ecx,edi
  41c4a3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c4aa:	cmp    cl,al
  41c4ac:	jne    0x41c4be
  41c4ae:	lea    eax,[ebp-0x4c]
  41c4b1:	push   eax
  41c4b2:	call   0x41bf78
  41c4b7:	mov    ecx,DWORD PTR [ebp-0x44]
  41c4ba:	cmp    eax,ecx
  41c4bc:	je     0x41c4c8
  41c4be:	mov    eax,DWORD PTR [ebp+0x8]
  41c4c1:	xor    eax,edi
  41c4c3:	add    eax,ebx
  41c4c5:	mov    DWORD PTR [ebp+0x18],eax
  41c4c8:	mov    eax,DWORD PTR [ebp-0x8]
  41c4cb:	xor    eax,edi
  41c4cd:	lea    eax,[eax+esi*1+0x3272e0]
  41c4d4:	xor    eax,edi
  41c4d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4d9:	mov    edx,DWORD PTR [ebp+0x18]
  41c4dc:	xor    ecx,edi
  41c4de:	add    ecx,ebx
  41c4e0:	cmp    edx,ecx
  41c4e2:	je     0x41c2df
  41c4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41c4eb:	mov    ecx,DWORD PTR [ebp+0x18]
  41c4ee:	xor    eax,edi
  41c4f0:	add    eax,ebx
  41c4f2:	cmp    ecx,eax
  41c4f4:	jne    0x41c507
  41c4f6:	mov    eax,DWORD PTR [ebp-0x8]
  41c4f9:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c4fc:	xor    eax,edi
  41c4fe:	lea    eax,[eax+ecx*1+0x3272e0]
  41c505:	jmp    0x41c57e
  41c507:	push   0x18
  41c509:	push   DWORD PTR [ebp-0x4]
  41c50c:	lea    eax,[ebp-0x64]
  41c50f:	push   eax
  41c510:	call   0x41b7b0
  41c515:	mov    eax,DWORD PTR [ebp+0x8]
  41c518:	mov    ecx,DWORD PTR [ebp-0x18]
  41c51b:	xor    eax,edi
  41c51d:	add    eax,ebx
  41c51f:	cmp    eax,ecx
  41c521:	je     0x41c536
  41c523:	mov    eax,DWORD PTR [ebp+0x8]
  41c526:	xor    eax,edi
  41c528:	add    eax,ebx
  41c52a:	push   eax
  41c52b:	push   0x18
  41c52d:	lea    eax,[ebp-0x64]
  41c530:	push   eax
  41c531:	call   0x41bd27
  41c536:	mov    eax,DWORD PTR [ebp-0x4]
  41c539:	add    eax,0x18
  41c53c:	mov    DWORD PTR [ebp+0x18],eax
  41c53f:	push   DWORD PTR [ebp-0x50]
  41c542:	push   DWORD PTR [ebp+0x18]
  41c545:	mov    eax,DWORD PTR [ebp-0x54]
  41c548:	add    eax,DWORD PTR [ebp-0x20]
  41c54b:	push   eax
  41c54c:	call   0x41b7b0
  41c551:	mov    eax,DWORD PTR [ebp+0x8]
  41c554:	mov    ecx,DWORD PTR [ebp-0x18]
  41c557:	xor    eax,edi
  41c559:	add    eax,ebx
  41c55b:	cmp    eax,ecx
  41c55d:	je     0x41c570
  41c55f:	push   0x0
  41c561:	push   DWORD PTR [ebp-0x50]
  41c564:	mov    eax,DWORD PTR [ebp-0x54]
  41c567:	add    eax,DWORD PTR [ebp-0x20]
  41c56a:	push   eax
  41c56b:	call   0x41bd27
  41c570:	mov    eax,DWORD PTR [ebp-0x24]
  41c573:	mov    ecx,DWORD PTR [ebp-0x50]
  41c576:	add    DWORD PTR [eax],ecx
  41c578:	mov    eax,DWORD PTR [ebp-0x50]
  41c57b:	add    eax,DWORD PTR [ebp+0x1c]
  41c57e:	mov    DWORD PTR [ebp+0x1c],eax
  41c581:	mov    eax,DWORD PTR [ebp-0x8]
  41c584:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c587:	xor    eax,edi
  41c589:	add    eax,ebx
  41c58b:	imul   eax,ecx
  41c58e:	mov    ecx,DWORD PTR [ebp+0x8]
  41c591:	mov    edx,DWORD PTR [ebp-0x28]
  41c594:	xor    ecx,edi
  41c596:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c59d:	cmp    eax,ecx
  41c59f:	jb     0x41c1fc
  41c5a5:	mov    esi,DWORD PTR [ebp+0x14]
  41c5a8:	mov    eax,DWORD PTR [ebp-0x20]
  41c5ab:	mov    DWORD PTR [esi],eax
  41c5ad:	jmp    0x41c5f4
  41c5af:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5b2:	mov    edx,DWORD PTR [ebp+0xc]
  41c5b5:	xor    ecx,edi
  41c5b7:	xor    edx,edi
  41c5b9:	add    ecx,ebx
  41c5bb:	add    edx,ebx
  41c5bd:	cmp    ecx,edx
  41c5bf:	jne    0x41c5d3
  41c5c1:	mov    eax,ds:0x7f642d1e
  41c5c6:	imul   eax,eax,0x9f15fcef
  41c5cc:	mov    ds:0x7f642d1e,eax
  41c5d1:	jmp    0x41c5f4
  41c5d3:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5d6:	xor    ecx,edi
  41c5d8:	add    ecx,ebx
  41c5da:	cmp    eax,ecx
  41c5dc:	je     0x41c5ea
  41c5de:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41c5e8:	jmp    0x41c5f4
  41c5ea:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41c5f4:	pop    edi
  41c5f5:	pop    esi
  41c5f6:	pop    ebx
  41c5f7:	leave  
  41c5f8:	ret    0x18
  41c5fb:	push   ebp
  41c5fc:	mov    ebp,esp
  41c5fe:	and    esp,0xfffffff8
  41c601:	mov    eax,DWORD PTR [ebp+0x20]
  41c604:	sub    esp,0x14
  41c607:	push   ebx
  41c608:	mov    ebx,DWORD PTR [ebp+0x14]
  41c60b:	push   esi
  41c60c:	push   edi
  41c60d:	cmp    eax,0xf89c85b9
  41c612:	jne    0x41c61e
  41c614:	push   0xf89c85b8
  41c619:	jmp    0x41c750
  41c61e:	mov    eax,DWORD PTR [ebp+0x20]
  41c621:	cmp    eax,0xf89c85b8
  41c626:	jne    0x41c632
  41c628:	push   0xf89c85bb
  41c62d:	jmp    0x41c750
  41c632:	mov    eax,DWORD PTR [ebp+0x20]
  41c635:	cmp    eax,0xf89c85bb
  41c63a:	jne    0x41c646
  41c63c:	push   0xf89c85ba
  41c641:	jmp    0x41c750
  41c646:	mov    eax,DWORD PTR [ebp+0x20]
  41c649:	cmp    eax,0xf89c85ba
  41c64e:	jne    0x41c65a
  41c650:	push   0xf89c85bd
  41c655:	jmp    0x41c750
  41c65a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c65d:	mov    eax,0xf89c85be
  41c662:	cmp    ecx,eax
  41c664:	jne    0x41c720
  41c66a:	mov    eax,DWORD PTR [ebp+0x10]
  41c66d:	mov    DWORD PTR [esp+0xc],eax
  41c671:	mov    eax,DWORD PTR [ebp+0x18]
  41c674:	mov    DWORD PTR [esp+0x14],eax
  41c678:	mov    eax,DWORD PTR [ebp+0xc]
  41c67b:	mov    DWORD PTR [esp+0x18],eax
  41c67f:	mov    eax,DWORD PTR [ebp+0x8]
  41c682:	mov    DWORD PTR [esp+0x10],eax
  41c686:	mov    eax,DWORD PTR [esp+0x10]
  41c68a:	mov    ecx,DWORD PTR [esp+0x14]
  41c68e:	mov    edi,0x7510899
  41c693:	xor    eax,edi
  41c695:	mov    esi,0x3272e0
  41c69a:	add    eax,esi
  41c69c:	mov    DWORD PTR [ecx],eax
  41c69e:	mov    eax,DWORD PTR [esp+0xc]
  41c6a2:	mov    eax,DWORD PTR [eax+0x194]
  41c6a8:	mov    ecx,DWORD PTR [eax]
  41c6aa:	mov    eax,DWORD PTR [esp+0xc]
  41c6ae:	mov    eax,DWORD PTR [eax+0x194]
  41c6b4:	mov    eax,DWORD PTR [eax]
  41c6b6:	add    eax,DWORD PTR [ecx+0x3c]
  41c6b9:	mov    ecx,DWORD PTR [esp+0xc]
  41c6bd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c6c3:	mov    ecx,DWORD PTR [ecx+0x14]
  41c6c6:	push   0x4
  41c6c8:	push   0x3000
  41c6cd:	push   DWORD PTR [eax+0x50]
  41c6d0:	push   0x0
  41c6d2:	call   ecx
  41c6d4:	mov    DWORD PTR [ebx],eax
  41c6d6:	mov    eax,DWORD PTR [esp+0x10]
  41c6da:	push   DWORD PTR [esp+0xc]
  41c6de:	xor    eax,edi
  41c6e0:	add    eax,esi
  41c6e2:	mov    DWORD PTR [esp+0x20],eax
  41c6e6:	lea    eax,[esp+0x20]
  41c6ea:	push   eax
  41c6eb:	push   ebx
  41c6ec:	push   DWORD PTR [esp+0x20]
  41c6f0:	push   DWORD PTR [esp+0x28]
  41c6f4:	push   DWORD PTR [esp+0x24]
  41c6f8:	call   0x41c0bc
  41c6fd:	mov    eax,DWORD PTR [esp+0x10]
  41c701:	mov    ecx,DWORD PTR [ebx]
  41c703:	xor    eax,edi
  41c705:	add    eax,esi
  41c707:	cmp    ecx,eax
  41c709:	je     0x41c767
  41c70b:	mov    eax,DWORD PTR [esp+0x18]
  41c70f:	mov    ecx,DWORD PTR [esp+0x14]
  41c713:	xor    eax,edi
  41c715:	add    eax,esi
  41c717:	imul   eax,DWORD PTR [esp+0x1c]
  41c71c:	mov    DWORD PTR [ecx],eax
  41c71e:	jmp    0x41c767
  41c720:	mov    ecx,DWORD PTR [ebp+0x20]
  41c723:	cmp    ecx,0xf89c85bd
  41c729:	jne    0x41c732
  41c72b:	push   0xf89c85bc
  41c730:	jmp    0x41c750
  41c732:	mov    ecx,DWORD PTR [ebp+0x20]
  41c735:	cmp    ecx,0xf89c85bc
  41c73b:	jne    0x41c744
  41c73d:	push   0xf89c85bf
  41c742:	jmp    0x41c750
  41c744:	mov    ecx,DWORD PTR [ebp+0x20]
  41c747:	cmp    ecx,0xf89c85bf
  41c74d:	jne    0x41c767
  41c74f:	push   eax
  41c750:	push   DWORD PTR [ebp+0x1c]
  41c753:	push   DWORD PTR [ebp+0x18]
  41c756:	push   ebx
  41c757:	push   DWORD PTR [ebp+0x10]
  41c75a:	push   DWORD PTR [ebp+0xc]
  41c75d:	push   DWORD PTR [ebp+0x8]
  41c760:	call   0x41c5fb
  41c765:	mov    DWORD PTR [ebx],eax
  41c767:	mov    eax,DWORD PTR [ebx]
  41c769:	pop    edi
  41c76a:	pop    esi
  41c76b:	pop    ebx
  41c76c:	mov    esp,ebp
  41c76e:	pop    ebp
  41c76f:	ret    0x1c
  41c772:	push   ebp
  41c773:	mov    ebp,esp
  41c775:	sub    esp,0xc
  41c778:	mov    eax,0xf89c85b9
  41c77d:	mov    DWORD PTR [ebp-0x8],eax
  41c780:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41c787:	mov    ecx,DWORD PTR [ebp-0x8]
  41c78a:	xor    ecx,0x7510899
  41c790:	add    ecx,0x3272e0
  41c796:	mov    DWORD PTR [ebp-0x4],ecx
  41c799:	mov    ecx,DWORD PTR [ebp+0xc]
  41c79c:	push   eax
  41c79d:	mov    DWORD PTR [ebp+0xc],ecx
  41c7a0:	push   DWORD PTR [ebp+0xc]
  41c7a3:	lea    eax,[ebp-0x4]
  41c7a6:	push   DWORD PTR [ebp+0x8]
  41c7a9:	push   eax
  41c7aa:	push   DWORD PTR [ebp+0xc]
  41c7ad:	push   DWORD PTR [ebp-0xc]
  41c7b0:	push   DWORD PTR [ebp-0x8]
  41c7b3:	call   0x41c5fb
  41c7b8:	mov    DWORD PTR [ebp-0x4],eax
  41c7bb:	mov    eax,DWORD PTR [ebp-0x4]
  41c7be:	leave  
  41c7bf:	ret    0x8
  41c7c2:	jg     0x41c778
  41c7c4:	jge    0xf7418799
  41c7ca:	xor    BYTE PTR [ebp+0x16ab916e],0x61
  41c7d1:	xchg   edx,eax
  41c7d2:	ds aas 
  41c7d4:	add    DWORD PTR [eax],eax
  41c7d6:	int3   
  41c7d7:	add    al,BYTE PTR [eax]
  41c7d9:	add    BYTE PTR [eax-0x219b6424],ch
  41c7df:	push   ebx
  41c7e0:	lahf   
  41c7e1:	mov    esi,DWORD PTR [esi-0x1e]
  41c7e4:	fld    QWORD PTR [esi-0x63]
  41c7e7:	retf   0x1816
  41c7ea:	xchg   BYTE PTR [ebp+0x65],ch
  41c7ed:	xor    al,0xba
  41c7ef:	outs   dx,DWORD PTR ds:[esi]
  41c7f0:	cld    
  41c7f1:	jnp    0x41c839
  41c7f3:	xor    ch,bl
  41c7f5:	pop    ecx
  41c7f6:	xor    ch,0x32
  41c7f9:	mov    DWORD PTR [esi+0x3e],0x5ac4b4e8
  41c800:	xchg   ebx,eax
  41c801:	push   ecx
  41c802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c803:	mov    ebx,0xcd9e0b6e
  41c808:	xor    ch,BYTE PTR [edx+edx*4-0x45]
  41c80c:	xchg   edi,eax
  41c80d:	ss cld 
  41c80f:	push   ds
  41c810:	jle    0x41c7b6
  41c812:	lahf   
  41c813:	call   0xa23f5fe
  41c818:	mov    eax,0xf3a1c772
  41c81d:	inc    ecx
  41c81e:	rol    DWORD PTR [ecx],0x36
  41c821:	neg    DWORD PTR [esi]
  41c823:	mov    eax,ds:0x4da9475c
  41c828:	dec    ebx
  41c829:	and    ebx,DWORD PTR [edi+esi*1-0x4]
  41c82d:	or     ebp,DWORD PTR [eax-0xc8c1f0]
  41c833:	and    edi,DWORD PTR [edi]
  41c835:	std    
  41c836:	add    al,al
  41c838:	cmp    DWORD PTR ds:0x30d41c7b,0x51194aa4
  41c842:	sar    DWORD PTR [esi+ebx*2+0x223920a4],1
  41c849:	push   ebp
  41c84a:	inc    ecx
  41c84b:	jbe    0x41c828
  41c84d:	inc    edi
  41c84e:	lods   al,BYTE PTR ds:[esi]
  41c84f:	cmc    
  41c850:	and    BYTE PTR cs:[eax+eax*2-0x47],bl
  41c855:	ins    DWORD PTR es:[edi],dx
  41c856:	imul   edx,DWORD PTR [ebx],0x52
  41c859:	mov    al,ds:0x88f67a00
  41c85e:	ficomp WORD PTR [ebx-0x362dc653]
  41c864:	cwde   
  41c865:	ret    
  41c866:	pop    ds
  41c867:	push   esi
  41c868:	xchg   esp,eax
  41c869:	xchg   bl,ch
  41c86b:	out    dx,al
  41c86c:	sub    al,0xcc
  41c86e:	jle    0x41c81b
  41c870:	vpsubw ymm3,ymm0,YMMWORD PTR [ecx]
  41c874:	sub    DWORD PTR [di],ecx
  41c877:	push   cs
  41c878:	mov    ebp,0xaca594
  41c87d:	push   ds
  41c87e:	dec    edi
  41c87f:	leave  
  41c880:	push   ss
  41c881:	(bad)  
  41c882:	in     al,0x79
  41c884:	lods   al,BYTE PTR ds:[esi]
  41c885:	pop    edi
  41c886:	pop    eax
  41c887:	jg     0x41c889
  41c889:	loop   0x41c8c6
  41c88b:	xchg   ebx,eax
  41c88c:	push   ds
  41c88d:	in     ax,0xb8
  41c890:	and    BYTE PTR [ebx],ah
  41c892:	rcr    BYTE PTR [eax+edi*1-0x42],0xb8
  41c897:	push   edi
  41c898:	fmul   QWORD PTR [esi]
  41c89a:	loop   0x41c8f2
  41c89c:	int    0x24
  41c89e:	aam    0x1f
  41c8a0:	repnz daa 
  41c8a2:	mov    ah,dh
  41c8a4:	jmp    0x945aa136
  41c8a9:	adc    bl,BYTE PTR [esi-0x2e]
  41c8ac:	pushf  
  41c8ad:	scas   eax,DWORD PTR es:[edi]
  41c8ae:	and    BYTE PTR [edx],ah
  41c8b0:	sbb    DWORD PTR [esi],edx
  41c8b2:	or     ah,BYTE PTR [edi+ebx*4-0x4c43759f]
  41c8b9:	mov    eax,ds:0x77f52e5
  41c8be:	and    DWORD PTR [edi+0x11],edx
  41c8c1:	add    edx,ebx
  41c8c3:	and    ch,BYTE PTR [eax]
  41c8c5:	ja     0x41c941
  41c8c7:	out    dx,al
  41c8c8:	sub    esp,DWORD PTR [edi]
  41c8ca:	in     al,dx
  41c8cb:	add    eax,0x5388d39e
  41c8d0:	mov    DWORD PTR [edi],ebp
  41c8d2:	pop    ecx
  41c8d3:	jne    0x41c8f2
  41c8d5:	mov    ebx,0x25c91ba2
  41c8da:	pop    esi
  41c8db:	or     DWORD PTR [esi],edx
  41c8dd:	dec    eax
  41c8de:	add    ecx,DWORD PTR [ebx+0x33874228]
  41c8e4:	sbb    BYTE PTR [esi],ch
  41c8e6:	idiv   BYTE PTR [edi+0xf3f0762]
  41c8ec:	mov    bh,0xad
  41c8ee:	mov    edi,0x3aa3223b
  41c8f3:	sub    al,0x71
  41c8f5:	dec    ebx
  41c8f6:	fs leave 
  41c8f8:	xchg   ebx,eax
  41c8f9:	jne    0x41c950
  41c8fb:	dec    esp
  41c8fc:	adc    ah,BYTE PTR [esi]
  41c8fe:	lea    ebx,[edi]
  41c900:	pop    edi
  41c901:	cmp    esp,esi
  41c903:	mov    esp,0x11558bcc
  41c908:	in     eax,0xc4
  41c90a:	jecxz  0x41c973
  41c90c:	fldenv [ebx+0x14]
  41c90f:	lods   al,BYTE PTR ds:[esi]
  41c910:	pop    ebp
  41c911:	add    eax,0x63318380
  41c916:	or     al,0xf7
  41c918:	sbb    bh,BYTE PTR [esi+0x3]
  41c91b:	sub    DWORD PTR [ecx-0x39],esp
  41c91e:	ins    BYTE PTR es:[edi],dx
  41c91f:	add    eax,0xca3eaaa6
  41c924:	inc    esp
  41c925:	and    BYTE PTR [edx+0x53],0x5a
  41c929:	stc    
  41c92a:	inc    eax
  41c92b:	and    al,0x8e
  41c92d:	jb     0x41c942
  41c92f:	fnstenv [edi]
  41c931:	mov    dh,0xeb
  41c933:	cwde   
  41c934:	out    0x76,al
  41c936:	leave  
  41c937:	inc    ecx
  41c938:	jbe    0x41c95f
  41c93a:	sub    al,0x94
  41c93c:	mov    dh,0xbc
  41c93e:	inc    ebx
  41c93f:	and    esi,DWORD PTR [ecx]
  41c941:	xchg   ebx,eax
  41c942:	mov    cl,0xcc
  41c944:	add    al,0x55
  41c946:	mov    ch,0xe1
  41c948:	mov    al,BYTE PTR [esi-0x65]
  41c94b:	cmp    BYTE PTR [ebp-0x23],bl
  41c94e:	leave  
  41c94f:	sbb    edi,DWORD PTR [eax]
  41c951:	call   0xf312888f
  41c956:	adc    cl,BYTE PTR [ebp-0x3cf6ac94]
  41c95c:	adc    DWORD PTR [esi-0x3ff374c],0x38
  41c963:	imul   esp,eax,0xb2c5d5c8
  41c969:	bound  edx,QWORD PTR [eax]
  41c96b:	jns    0x41c922
  41c96d:	cli    
  41c96e:	out    dx,eax
  41c96f:	lods   al,BYTE PTR ds:[esi]
  41c970:	sub    al,0x6e
  41c972:	xchg   ebp,eax
  41c973:	jle    0x41c939
  41c975:	das    
  41c976:	lea    esp,[esi+ebx*4-0x27f22766]
  41c97d:	scas   al,BYTE PTR es:[edi]
  41c97e:	add    al,0x40
  41c980:	jae    0x41c9b3
  41c982:	int    0x4f
  41c984:	ds jle 0x41c952
  41c987:	xchg   edx,eax
  41c988:	cwde   
  41c989:	jns    0x41c9ce
  41c98b:	icebp  
  41c98c:	mov    ebp,0xca8b4a38
  41c991:	sar    bl,0x98
  41c994:	or     DWORD PTR [esi],ebp
  41c996:	adc    DWORD PTR [eax+0x29],edx
  41c999:	pop    edx
  41c99a:	mov    ds:0x270a899f,eax
  41c99f:	outs   dx,BYTE PTR ds:[esi]
  41c9a0:	fst    QWORD PTR [ecx+eiz*1]
  41c9a3:	rcr    al,1
  41c9a5:	lahf   
  41c9a6:	pushf  
  41c9a7:	in     eax,dx
  41c9a8:	call   0x2165:0xd1664769
  41c9af:	outs   dx,DWORD PTR ds:[esi]
  41c9b0:	inc    ebp
  41c9b1:	stos   DWORD PTR es:[edi],eax
  41c9b2:	inc    ebx
  41c9b3:	fild   QWORD PTR [edi+0x16]
  41c9b6:	push   cs
  41c9b7:	or     BYTE PTR [ebx+0x443abe54],bl
  41c9bd:	mov    ds:0x6cb3e6d3,al
  41c9c2:	add    eax,0x73668abe
  41c9c7:	push   esp
  41c9c8:	stos   DWORD PTR es:[edi],eax
  41c9c9:	jge    0x41c9d1
  41c9cb:	or     eax,0xe02581c2
  41c9d0:	das    
  41c9d1:	mov    al,ds:0x7d6e0a95
  41c9d6:	not    DWORD PTR [eax+ebp*4-0x8a02075]
  41c9dd:	in     al,dx
  41c9de:	add    dl,BYTE PTR [ebp+0x203e1753]
  41c9e4:	ss (bad) 
  41c9e6:	jmp    0x74cd:0x35dbb9df
  41c9ed:	xchg   esp,eax
  41c9ee:	add    DWORD PTR [edi-0x6df88b29],0x68
  41c9f5:	in     al,0xdc
  41c9f7:	push   DWORD PTR [ebp+0x6dbfaa42]
  41c9fd:	mov    BYTE PTR [esi],dl
  41c9ff:	ret    0x5cc5
  41ca02:	rcl    DWORD PTR [ebx-0x6aee24fe],cl
  41ca08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca09:	xchg   ebp,eax
  41ca0a:	jae    0x41ca20
  41ca0c:	adc    al,0xcb
  41ca0e:	push   ds
  41ca0f:	daa    
  41ca10:	push   eax
  41ca11:	ret    0x1c10
  41ca14:	or     al,BYTE PTR [eax-0x53]
  41ca17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca18:	stos   BYTE PTR es:[edi],al
  41ca19:	mov    edi,0x17abc1f6
  41ca1e:	sbb    BYTE PTR fs:[esp+eax*4],bl
  41ca22:	fimul  DWORD PTR [edx+eax*8-0x4d17a151]
  41ca29:	mov    WORD PTR [esi],?
  41ca2b:	enter  0xef19,0x81
  41ca2f:	mul    bl
  41ca31:	jb     0x41ca3f
  41ca33:	outs   dx,DWORD PTR ds:[esi]
  41ca34:	call   0x3a80:0x3b13310
  41ca3b:	sub    al,0x48
  41ca3d:	lea    eax,[eax]
  41ca3f:	adc    bl,BYTE PTR [edi+0x4164b406]
  41ca45:	mov    ah,0x5
  41ca47:	xor    eax,0xc157e69a
  41ca4c:	pop    es
  41ca4d:	rcr    BYTE PTR ds:0xa4bd674c,cl
  41ca53:	xlat   BYTE PTR ds:[ebx]
  41ca54:	(bad)  
  41ca55:	push   ss
  41ca56:	adc    eax,DWORD PTR [ecx-0x6f]
  41ca59:	wbinvd 
  41ca5b:	or     BYTE PTR [ecx],dh
  41ca5d:	pop    esp
  41ca5e:	ds icebp 
  41ca60:	jb     0x41ca7e
  41ca62:	mov    bl,0xd0
  41ca64:	call   0x3201:0xa9481764
  41ca6b:	jno    0x41ca0b
  41ca6d:	and    ebx,esi
  41ca6f:	jmp    0x8f06:0x9f24a19b
  41ca76:	nop
  41ca77:	sub    ebx,esp
  41ca79:	out    dx,eax
  41ca7a:	add    eax,edi
  41ca7c:	jecxz  0x41ca63
  41ca7e:	mov    esi,0xd4f4263e
  41ca83:	psubusb mm7,QWORD PTR [ebx+0x24fe00e6]
  41ca8a:	iret   
  41ca8b:	loope  0x41ca31
  41ca8d:	cld    
  41ca8e:	sbb    DWORD PTR [ebx+0x31],0x44
  41ca92:	ja     0x41cad5
  41ca94:	add    DWORD PTR [edi+0x1],ebx
  41ca97:	scas   eax,DWORD PTR es:[edi]
  41ca98:	pop    ds
  41ca99:	mov    ch,0x9e
  41ca9b:	jp     0x41cab6
  41ca9d:	lea    esp,[esi-0x4a]
  41caa0:	retf   
  41caa1:	cdq    
  41caa2:	daa    
  41caa3:	cdq    
  41caa4:	mov    ebp,0xee
	...
  41cab1:	add    BYTE PTR [edi+0x4c],dh
  41cab4:	idiv   dh
  41cab6:	(bad)  
  41cab7:	(bad)  
  41cab8:	jg     0x41ca87
  41caba:	mov    ah,0x6b
  41cabc:	mov    dh,0x14
  41cabe:	dec    ecx
  41cabf:	sub    eax,0x420a77c0
  41cac4:	add    DWORD PTR [eax],eax
  41cac6:	int3   
  41cac7:	add    al,BYTE PTR [eax]
  41cac9:	add    BYTE PTR [ebx-0x47],dl
  41cacc:	retf   0x148d
  41cacf:	enter  0x8ca0,0xee
  41cad3:	jmp    0xd04271ff
  41cad8:	push   ds
  41cad9:	test   DWORD PTR [esi+0x72],eax
  41cadc:	stos   BYTE PTR es:[edi],al
  41cadd:	call   0x11481f8c
  41cae2:	inc    edx
  41cae3:	inc    ebp
  41cae4:	repnz xor BYTE PTR [edx+0x7b157779],ah
  41caeb:	mov    ebp,0xdc483f25
  41caf0:	nop
  41caf1:	xchg   DWORD PTR [esi-0x52],eax
  41caf4:	mov    edx,DWORD PTR [esi-0x15]
  41caf7:	sbb    ebp,DWORD PTR [edi+0xa]
  41cafa:	sub    ebp,DWORD PTR [eax-0x44]
  41cafd:	xor    eax,0x37ef3553
  41cb02:	pop    ebx
  41cb03:	mov    WORD PTR [ecx+ebp*1-0x5b],?
  41cb07:	test   DWORD PTR [edx+0x7b1526a2],edi
  41cb0d:	sub    al,0x2e
  41cb0f:	or     dl,BYTE PTR [esi]
  41cb11:	rcl    esi,1
  41cb13:	sub    al,0xa9
  41cb15:	sbb    BYTE PTR [edi-0x5b],0xda
  41cb19:	leave  
  41cb1a:	xor    BYTE PTR [edx-0x75d92af9],dl
  41cb20:	pop    ebp
  41cb21:	in     eax,dx
  41cb22:	data16 int3 
  41cb24:	jp     0x41caaa
  41cb26:	and    BYTE PTR [ebp+ebp*1-0x2eb407d6],bh
  41cb2d:	rcr    BYTE PTR [edi+0x6948abc9],1
  41cb33:	jecxz  0x41cabd
  41cb35:	add    esi,DWORD PTR [esi-0x6f]
  41cb38:	das    
  41cb39:	scas   al,BYTE PTR es:[edi]
  41cb3a:	into   
  41cb3b:	mov    al,0x8c
  41cb3d:	int3   
  41cb3e:	std    
  41cb3f:	dec    ebp
  41cb40:	adc    bh,BYTE PTR [ebx-0x6e3f9020]
  41cb46:	out    dx,al
  41cb47:	popa   
  41cb48:	fnstsw WORD PTR [edx]
  41cb4a:	adc    BYTE PTR [ebx-0x594583f4],ah
  41cb50:	int3   
  41cb51:	pop    esi
  41cb52:	push   0x62
  41cb54:	(bad)  
  41cb55:	int    0x48
  41cb57:	shl    esp,cl
  41cb59:	cld    
  41cb5a:	mov    ebx,0x88177050
  41cb5f:	mov    ecx,0x4426f491
  41cb64:	push   edx
  41cb65:	jp     0x41cbd9
  41cb67:	out    dx,eax
  41cb68:	add    al,0xb0
  41cb6a:	dec    edx
  41cb6b:	xor    DWORD PTR [edx+edi*1],esi
  41cb6e:	pop    esp
  41cb6f:	lods   al,BYTE PTR ds:[esi]
  41cb70:	mov    ah,0x1b
  41cb72:	jecxz  0x41cb28
  41cb74:	imul   ecx,eax,0xffffff83
  41cb77:	icebp  
  41cb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb79:	inc    eax
  41cb7a:	mov    bl,0x10
  41cb7c:	xor    BYTE PTR [edi],bh
  41cb7e:	stos   DWORD PTR es:[edi],eax
  41cb7f:	popa   
  41cb80:	sbb    eax,0x26b8e97a
  41cb85:	mov    eax,ds:0x937f72ac
  41cb8a:	sub    DWORD PTR fs:[si],edi
  41cb8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8f:	push   ebx
  41cb90:	adc    al,0x99
  41cb92:	sub    bh,BYTE PTR gs:[ebp-0x30]
  41cb96:	jno    0x41cc04
  41cb98:	add    ecx,ebp
  41cb9a:	test   al,0x1c
  41cb9c:	inc    esp
  41cb9d:	xchg   DWORD PTR [esi+edx*8],eax
  41cba0:	jmp    0x41cb31
  41cba2:	clc    
  41cba3:	lds    ecx,FWORD PTR [esp+ecx*8]
  41cba6:	sub    al,0x39
  41cba8:	xor    dh,BYTE PTR [eax+esi*2]
  41cbab:	in     al,0x78
  41cbad:	sub    al,ch
  41cbaf:	jns    0x41cb3a
  41cbb1:	setne  BYTE PTR [ebx+0xdc61f58]
  41cbb8:	mov    al,ds:0x319c6e59
  41cbbd:	xor    dh,al
  41cbbf:	faddp  st(7),st
  41cbc1:	mov    ecx,0x1c617f0b
  41cbc6:	bnd jp 0x41cb4d
  41cbc9:	adc    al,0x4
  41cbcb:	xchg   ebp,eax
  41cbcc:	mov    esi,0x1b67b2f1
  41cbd1:	jno    0x41cbfa
  41cbd3:	pop    eax
  41cbd4:	(bad)  
  41cbd5:	jp     0x41cc29
  41cbd7:	mov    ds:0x6ec47793,al
  41cbdc:	(bad)  
  41cbdd:	mov    eax,ds:0x3a4f3ae7
  41cbe2:	les    ebp,FWORD PTR [eax-0x3b3d912b]
  41cbe8:	and    al,0x24
  41cbea:	mov    al,bh
  41cbec:	dec    ebx
  41cbed:	dec    ecx
  41cbee:	shr    dl,0xf4
  41cbf1:	les    esp,FWORD PTR [eax-0x23]
  41cbf4:	push   ss
  41cbf5:	xor    al,0xab
  41cbf7:	inc    ebp
  41cbf8:	push   ds
  41cbf9:	adc    BYTE PTR ds:0x49a63c98,dl
  41cbff:	sbb    esi,ebp
  41cc01:	cdq    
  41cc02:	cmp    BYTE PTR [edx],bh
  41cc04:	loopne 0x41cc3e
  41cc06:	repnz ror DWORD PTR [edx+0x7987e53e],1
  41cc0d:	mov    esi,0x195d74b9
  41cc12:	stos   BYTE PTR es:[edi],al
  41cc13:	mov    dh,0x89
  41cc15:	push   0xd484527a
  41cc1a:	mov    esi,0xb8f3182a
  41cc1f:	dec    esp
  41cc20:	xchg   esp,eax
  41cc21:	pop    esp
  41cc22:	rol    BYTE PTR [ecx-0x4fe9dca6],cl
  41cc28:	sub    eax,0x705ba305
  41cc2d:	sti    
  41cc2e:	or     esi,DWORD PTR [edx-0x1f6e6a51]
  41cc34:	imul   eax,DWORD PTR [eax],0xffffffdc
  41cc37:	mov    ch,BYTE PTR [esi-0x7adfabf]
  41cc3d:	es and al,0xb0
  41cc40:	sbb    eax,0x20152c97
  41cc45:	cmc    
  41cc46:	ss out dx,al
  41cc48:	cmp    esi,esp
  41cc4a:	scas   al,BYTE PTR es:[edi]
  41cc4b:	(bad)  [eax+0x66]
  41cc4e:	push   ss
  41cc4f:	jge    0x41cbf1
  41cc51:	or     BYTE PTR [ecx],dh
  41cc53:	lea    esp,[edx-0xf]
  41cc56:	fstp   QWORD PTR [edx]
  41cc58:	in     al,0x86
  41cc5a:	(bad)  
  41cc5b:	in     al,0xaf
  41cc5d:	icebp  
  41cc5e:	jle    0x41cc26
  41cc60:	sbb    bl,BYTE PTR [edx-0x66]
  41cc63:	cs aad 0x7d
  41cc66:	jbe    0x41cc16
  41cc68:	jo     0x41cc03
  41cc6a:	cwde   
  41cc6b:	addr16 push ds
  41cc6d:	xchg   BYTE PTR [edx],ah
  41cc6f:	mul    DWORD PTR ds:0x14da3242
  41cc75:	or     eax,0x7dac81a3
  41cc7a:	in     eax,0x84
  41cc7c:	inc    eax
  41cc7d:	fld    QWORD PTR [ebx+0x1fe4717f]
  41cc83:	stc    
  41cc84:	fmul   DWORD PTR [ebx+eiz*2-0x26]
  41cc88:	in     al,0x7d
  41cc8a:	(bad)  [esi+ebx*2]
  41cc8d:	repz idiv ch
  41cc90:	mov    ecx,0x36c5280c
  41cc95:	add    DWORD PTR [esi+ebx*8+0x59],0x43
  41cc9a:	je     0x41cc3c
  41cc9c:	fwait
  41cc9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc9e:	sahf   
  41cc9f:	dec    ecx
  41cca0:	(bad)  
  41cca1:	ror    BYTE PTR [ebx-0x3f6aacee],cl
  41cca7:	(bad)  
  41cca8:	test   al,0x3e
  41ccaa:	test   eax,0x3957e5ba
  41ccaf:	lds    esp,FWORD PTR [esi+eax*4]
  41ccb2:	mov    WORD PTR [ecx],ss
  41ccb4:	dec    eax
  41ccb5:	fcmove st,st(1)
  41ccb7:	lea    edx,[edi+eax*2+0x1a29a713]
  41ccbe:	daa    
  41ccbf:	imul   ecx,DWORD PTR [ecx+0xc6da616],0x5f06b393
  41ccc9:	mov    eax,0x36c625cf
  41ccce:	stos   BYTE PTR es:[edi],al
  41cccf:	mov    eax,0xbd8d4df9
  41ccd4:	add    BYTE PTR [ebx-0xc],0x1b
  41ccd8:	cmp    al,0xda
  41ccda:	mov    esp,0x758ed16e
  41ccdf:	(bad)  
  41cce0:	hlt    
  41cce1:	cdq    
  41cce2:	pop    esi
  41cce3:	out    0xd8,al
  41cce5:	mov    edx,DWORD PTR [esi]
  41cce7:	outs   dx,BYTE PTR ds:[esi]
  41cce8:	inc    ecx
  41cce9:	or     esi,DWORD PTR [edx+0x69]
  41ccec:	lods   al,BYTE PTR ds:[esi]
  41cced:	adc    ch,dl
  41ccef:	and    bh,BYTE PTR [eax]
  41ccf1:	push   0x55
  41ccf3:	js     0x41ccc3
  41ccf5:	idiv   DWORD PTR [edx]
  41ccf7:	mov    dl,0x23
  41ccf9:	push   ss
  41ccfa:	mov    DWORD PTR [ebx],0x2939f5af
  41cd00:	leave  
  41cd01:	imul   ebp,edx,0xd7f2390c
  41cd07:	nop
  41cd08:	and    DWORD PTR [ebx+0x1162efdf],esp
  41cd0e:	sbb    ebp,0x53
  41cd11:	pusha  
  41cd12:	pop    ds
  41cd13:	pop    ebp
  41cd14:	fisubr WORD PTR [ebx+0x8]
  41cd17:	pop    ebx
  41cd18:	sub    BYTE PTR [ebx],ah
  41cd1a:	jae    0x41ccf9
  41cd1c:	stc    
  41cd1d:	out    dx,al
  41cd1e:	not    esp
  41cd20:	lods   eax,DWORD PTR ds:[esi]
  41cd21:	pop    esp
  41cd22:	mov    esi,0x70200c53
  41cd27:	push   ds
  41cd28:	jbe    0x41cd87
  41cd2a:	pop    esi
  41cd2b:	pop    es
  41cd2c:	enter  0xfe,0xf7
  41cd30:	ja     0x41cd06
  41cd32:	lock adc edi,DWORD PTR [edi-0x25]
  41cd36:	mov    al,bh
  41cd38:	rol    BYTE PTR [ecx+0x7e],1
  41cd3b:	mov    ss,WORD PTR [esi*8+0x1cadaaf4]
  41cd42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd43:	fnstcw WORD PTR [ebx+ecx*8]
  41cd46:	nop
  41cd47:	mov    esp,0x9eef7e2b
  41cd4c:	or     al,0xea
  41cd4e:	rol    BYTE PTR [edx-0x24080bf6],1
  41cd54:	pop    edi
  41cd55:	out    dx,eax
  41cd56:	dec    edx
  41cd57:	xor    ebp,DWORD PTR [ebp-0x25]
  41cd5a:	sbb    al,0x4a
  41cd5c:	faddp  st(3),st
  41cd5e:	retf   
  41cd5f:	sbb    edi,edi
  41cd61:	xchg   ebx,eax
  41cd62:	mov    al,ch
  41cd64:	mov    ?,WORD PTR [edx+eiz*8]
  41cd67:	mov    dl,0x74
  41cd69:	mov    al,0x68
  41cd6b:	adc    esi,ecx
  41cd6d:	fisttp QWORD PTR [edx+esi*4+0x39]
  41cd71:	lods   al,BYTE PTR ds:[esi]
  41cd72:	jo     0x41cd04
  41cd74:	and    ebx,DWORD PTR [edx+0x6c]
  41cd77:	adc    al,0xdc
  41cd79:	mov    cl,0xf6
  41cd7b:	mov    edi,0xf3a2b05
  41cd80:	test   al,0x42
  41cd82:	(bad)  
  41cd83:	jle    0x41cd39
  41cd85:	inc    ecx
  41cd86:	icebp  
  41cd87:	mov    ebp,0xebc8d3e3
  41cd8c:	mov    esp,0xf9bfd982
  41cd91:	ficomp DWORD PTR [ebp+0x641083]
	...
  41cd9f:	add    BYTE PTR [eax],al
  41cda1:	add    BYTE PTR [edi],al
  41cda3:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41cda9:	pop    ds
  41cdaa:	xchg   BYTE PTR [ebx],bl
  41cdac:	mov    edx,0x711cf5d0
  41cdb1:	fcom   st(6)
  41cdb3:	inc    esp
  41cdb4:	add    DWORD PTR [eax],eax
  41cdb6:	int3   
  41cdb7:	add    al,BYTE PTR [eax]
  41cdb9:	add    BYTE PTR [edi],al
  41cdbb:	pop    eax
  41cdbc:	sbb    eax,0x48cdd5a5
  41cdc1:	fnsetpm(287 only) 
  41cdc3:	lock mov ah,0xaf
  41cdc6:	outs   dx,DWORD PTR ds:[esi]
  41cdc7:	out    dx,al
  41cdc8:	call   0x4c6e:0x636d18ce
  41cdcf:	jmp    0xbf84:0xba3cd401
  41cdd6:	push   cs
  41cdd7:	mov    DWORD PTR [esi-0x64c55740],ecx
  41cddd:	js     0x41ce5b
  41cddf:	inc    edx
  41cde0:	inc    esp
  41cde1:	sbb    eax,0x24e50b93
  41cde6:	and    ch,BYTE PTR [esi]
  41cde8:	call   0x31c679ee
  41cded:	and    DWORD PTR [esi-0x53],edx
  41cdf0:	or     eax,edi
  41cdf2:	imul   eax,DWORD PTR [edi+0x3a],0x5b
  41cdf6:	(bad)  
  41cdf7:	aaa    
  41cdf8:	add    eax,DWORD PTR [esi]
  41cdfa:	sub    eax,0xaac7f5f2
  41cdff:	push   es
  41ce00:	dec    edi
  41ce01:	xchg   ch,bh
  41ce03:	and    ch,BYTE PTR [eax+ebp*8+0x147338b4]
  41ce0a:	push   esi
  41ce0b:	mov    BYTE PTR [ebx+0x45],ah
  41ce0e:	fdiv   QWORD PTR [eax+ecx*8-0x560e6213]
  41ce15:	push   ss
  41ce16:	xor    ch,ah
  41ce18:	dec    esi
  41ce19:	call   0xcae1344
  41ce1e:	fisub  WORD PTR [eax-0x35edf715]
  41ce24:	test   al,0x3e
  41ce26:	mov    edx,0xe8c59017
  41ce2b:	sbb    edx,DWORD PTR [edi-0x3d]
  41ce2e:	call   0x7c1b:0x78840cdf
  41ce35:	(bad)  
  41ce36:	jae    0x41ce7b
  41ce38:	idiv   dh
  41ce3a:	fcomp  DWORD PTR [edi]
  41ce3c:	mov    bl,0xc1
  41ce3e:	sbb    edi,DWORD PTR [esi+ecx*1-0x73da9af8]
  41ce45:	scas   al,BYTE PTR es:[edi]
  41ce46:	jae    0x41ce1c
  41ce48:	retf   
  41ce49:	pop    ebx
  41ce4a:	push   0x4d5197bd
  41ce4f:	in     eax,dx
  41ce50:	and    edx,ebp
  41ce52:	pusha  
  41ce53:	sbb    bh,dl
  41ce55:	(bad)  
  41ce56:	push   0x7a
  41ce58:	add    esp,ecx
  41ce5a:	leave  
  41ce5b:	adc    eax,0xdae03a
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	xor    eax,0x8ed4ab20
  41ce66:	mov    ch,0x79
  41ce68:	add    bl,bl
  41ce6a:	pop    es
  41ce6b:	inc    ebx
  41ce6c:	xor    BYTE PTR [eax+0x58],bl
  41ce6f:	adc    edi,DWORD PTR [edx+edx*2]
  41ce72:	mov    bh,0x5
  41ce74:	ds xchg ebx,eax
  41ce76:	sbb    al,0x93
  41ce78:	xchg   DWORD PTR [eax-0x13db27ce],edx
  41ce7e:	or     al,0x28
  41ce80:	mov    ds:0x9dfcd02a,al
  41ce85:	hlt    
  41ce86:	sbb    eax,0x4af25b5d
  41ce8b:	mov    bl,BYTE PTR [ecx-0x21a0993c]
  41ce91:	xor    esp,DWORD PTR [edx+0x4c8f5ce1]
  41ce97:	or     edx,DWORD PTR [ecx+0x5e]
  41ce9a:	pop    edi
  41ce9b:	sub    BYTE PTR [eax-0x13cadc30],0x62
  41cea2:	pop    ebp
  41cea3:	aas    
  41cea4:	jbe    0x41cf21
  41cea6:	add    al,0x7a
  41cea8:	inc    ecx
  41cea9:	mov    edi,0x675f542
  41ceae:	inc    eax
  41ceaf:	nop
  41ceb0:	xchg   edx,eax
  41ceb1:	jg     0x41ce6c
  41ceb3:	test   DWORD PTR [ecx],esp
  41ceb5:	daa    
  41ceb6:	and    BYTE PTR [eax],ah
  41ceb8:	add    edi,DWORD PTR [edi-0x7f]
  41cebb:	mov    ds:0xed52591e,eax
  41cec0:	xlat   BYTE PTR ds:[ebx]
  41cec1:	in     al,dx
  41cec2:	mov    ecx,0x1e2ceeaa
  41cec7:	stos   DWORD PTR es:[edi],eax
  41cec8:	cmp    al,0x93
  41ceca:	jge    0x41cf47
  41cecc:	xor    ecx,esi
  41cece:	sub    esp,DWORD PTR [ecx+0x21bb5aec]
  41ced4:	jmp    0xc2a8:0xcd7838fd
  41cedb:	loop   0x41ce81
  41cedd:	mul    BYTE PTR [eax+0x50]
  41cee0:	leave  
  41cee1:	arpl   WORD PTR [ebx-0x23],sp
  41cee4:	pop    eax
  41cee5:	or     al,0x3e
  41cee7:	sbb    edi,ecx
  41cee9:	adc    BYTE PTR [ebp+ebp*8+0x629dece5],al
  41cef0:	cmp    edi,DWORD PTR [eax-0x237c9070]
  41cef6:	xor    BYTE PTR [edi+0x31],0x66
  41cefa:	cmp    al,0xe
  41cefc:	pop    DWORD PTR [esi+esi*4-0x19af88af]
  41cf03:	lea    edx,[ebp+0x74038191]
  41cf09:	mov    esp,0x68234c4f
  41cf0e:	mov    cl,0x4b
  41cf10:	jl     0x41cf8b
  41cf12:	jmp    0xbd3b:0xbff6eb13
  41cf19:	ret    
  41cf1a:	cmc    
  41cf1b:	ds out dx,eax
  41cf1d:	xor    cl,BYTE PTR [eax-0x4cd72e5d]
  41cf23:	(bad)  
  41cf24:	mov    eax,ds:0xd4a941bf
  41cf29:	jae    0x41cee9
  41cf2b:	cmp    edx,DWORD PTR [ecx+edx*1]
  41cf2e:	or     BYTE PTR [edi],dh
  41cf30:	sar    BYTE PTR [edx+esi*2],cl
  41cf33:	jecxz  0x41cf45
  41cf35:	cmp    BYTE PTR [ecx-0x1baa0e95],al
  41cf3b:	xlat   BYTE PTR ds:[ebx]
  41cf3c:	das    
  41cf3d:	push   edx
  41cf3e:	lock inc ecx
  41cf40:	ss and eax,0xad0f272b
  41cf46:	mov    al,0xf3
  41cf48:	aad    0x7e
  41cf4a:	push   esp
  41cf4b:	sbb    al,0xdb
  41cf4d:	cmp    BYTE PTR [ebp+0x773f5357],bl
  41cf53:	mov    eax,0xcde61aa
  41cf58:	and    esi,esp
  41cf5a:	sti    
  41cf5b:	push   0x65
  41cf5d:	add    DWORD PTR [esi+0x7d],ecx
  41cf60:	into   
  41cf61:	jmp    0x8498:0x561c5e76
  41cf68:	mov    WORD PTR [edi],fs
  41cf6a:	push   esp
  41cf6b:	stos   BYTE PTR es:[edi],al
  41cf6c:	rcl    DWORD PTR [eax-0x6f9cefe2],1
  41cf72:	pop    esi
  41cf73:	add    BYTE PTR [ebx],bh
  41cf75:	sbb    edx,DWORD PTR [ebp+0x2007a20c]
  41cf7b:	pop    ds
  41cf7c:	mov    dl,0x50
  41cf7e:	rcr    BYTE PTR [edx],cl
  41cf80:	sar    DWORD PTR [esi+eiz*2],cl
  41cf83:	adc    bl,BYTE PTR [ebp+ecx*1-0x5b109b57]
  41cf8a:	cmp    DWORD PTR [ebx],ebx
  41cf8c:	pop    esi
  41cf8d:	loop   0x41cfda
  41cf8f:	push   0xefb14dc3
  41cf94:	dec    ebp
  41cf95:	inc    ecx
  41cf96:	pop    ecx
  41cf97:	inc    ecx
  41cf98:	mov    edi,0x9598e425
  41cf9d:	adc    ebx,DWORD PTR [edi+0x7d]
  41cfa0:	add    eax,0xf1de2444
  41cfa5:	jmp    0x659f56b4
  41cfaa:	pop    ecx
  41cfab:	repnz in eax,0xcd
  41cfae:	int    0x56
  41cfb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb1:	mov    dl,0x8
  41cfb3:	punpckldq mm2,DWORD PTR [eax+0x68221d66]
  41cfba:	dec    ebx
  41cfbb:	retf   
  41cfbc:	std    
  41cfbd:	dec    edx
  41cfbe:	xor    BYTE PTR [ebx-0x5],al
  41cfc1:	shl    eax,cl
  41cfc3:	sbb    al,0xf2
  41cfc5:	loop   0x41cfdf
  41cfc7:	sbb    BYTE PTR [eax+esi*8-0x4f],bh
  41cfcb:	fld    DWORD PTR [ebp+edx*2-0x39]
  41cfcf:	mov    ebp,0x240cb481
  41cfd4:	ss addr16 int3 
  41cfd7:	retf   
  41cfd8:	call   0x2b66:0xa7e86a10
  41cfdf:	out    0x4f,al
  41cfe1:	imul   ebp,ecx,0xcfbf6cfb
  41cfe7:	shr    BYTE PTR [edi-0x5d],0x4e
  41cfeb:	push   esi
  41cfec:	popf   
  41cfed:	pop    edx
  41cfee:	jmp    FWORD PTR [eax+esi*2]
  41cff1:	push   edx
  41cff2:	shl    DWORD PTR ss:[esi+0x6738f5af],cl
  41cff9:	cmp    BYTE PTR [edi+ecx*2],al
  41cffc:	pop    esp
  41cffd:	or     ah,bh
  41cfff:	jb     0x41d064
  41d001:	popf   
  41d002:	mov    WORD PTR [edi+0x42a7d19e],?
  41d008:	(bad)  
  41d009:	loop   0x41d052
  41d00b:	into   
  41d00c:	js     0x41d011
  41d00e:	xor    DWORD PTR [ecx-0x4d],edx
  41d011:	cli    
  41d012:	push   edx
  41d013:	mov    cl,0x9d
  41d015:	mov    ds:0x8557e424,al
  41d01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01b:	fisub  DWORD PTR [edx]
  41d01d:	mov    WORD PTR [ebx-0x5],es
  41d020:	sti    
  41d021:	dec    esp
  41d022:	xchg   ebx,eax
  41d023:	ret    0x62ad
  41d026:	pop    ds
  41d027:	mov    bh,0xab
  41d029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d02a:	aas    
  41d02b:	xor    edx,DWORD PTR [ebx-0x7b31a9d3]
  41d031:	and    al,0x49
  41d033:	pushf  
  41d034:	mov    dl,0x76
  41d036:	push   0x23
  41d038:	in     al,0xe
  41d03a:	mov    ?,WORD PTR [ecx+0x22cc4421]
  41d040:	xchg   DWORD PTR [edi-0x7edc8dc1],esp
  41d046:	jbe    0x41d094
  41d048:	aas    
  41d049:	inc    edi
  41d04a:	dec    eax
  41d04b:	push   esp
  41d04c:	imul   esp,eax,0xffffffaa
  41d04f:	out    dx,al
  41d050:	iret   
  41d051:	jo     0x41d066
  41d053:	xchg   esi,eax
  41d054:	and    edx,DWORD PTR [ebx+edi*2+0x1053b0ec]
  41d05b:	out    dx,al
  41d05c:	and    DWORD PTR [ebx-0x2ea23d29],0x1a258a9a
  41d066:	cmp    dh,BYTE PTR [ebx+edx*8-0x12]
  41d06a:	idiv   ebx
  41d06c:	push   ecx
  41d06d:	and    eax,0x287a8e37
  41d072:	mov    dl,0x5c
  41d074:	mov    bh,0x3c
  41d076:	mov    eax,ds:0x949a8e1d
  41d07b:	xor    DWORD PTR [ebp+0x48],esp
  41d07e:	out    0xb4,eax
  41d080:	add    al,0xbc
  41d082:	or     al,0x3e
  41d084:	push   cs
  41d085:	xchg   esi,eax
	...
  41d092:	push   ds
  41d093:	add    al,0xa7
  41d095:	(bad)  
  41d096:	mov    edi,0xf6dd7ee7
  41d09b:	jp     0x41d066
  41d09d:	push   esi
  41d09e:	mov    eax,ds:0xa28b4766
  41d0a3:	inc    edi
  41d0a4:	add    DWORD PTR [eax],eax
  41d0a6:	int3   
  41d0a7:	add    al,BYTE PTR [eax]
  41d0a9:	add    BYTE PTR [esi-0x71],al
  41d0ac:	in     eax,dx
  41d0ad:	push   cs
  41d0ae:	(bad)  
  41d0b0:	inc    edx
  41d0b1:	add    al,0x3f
  41d0b3:	push   0x36f7ef4c
  41d0b8:	ffreep st(7)
  41d0ba:	and    ch,dl
  41d0bc:	mov    al,0x50
  41d0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0bf:	sar    BYTE PTR [eax],0xf9
  41d0c2:	and    edx,DWORD PTR [edi+0x7]
  41d0c5:	ja     0x41d0c7
  41d0c7:	call   0xc89:0x399aae6f
  41d0ce:	jmp    0x8e9466f2
  41d0d3:	xor    eax,0x3f47f80b
  41d0d8:	mov    DWORD PTR [ebx-0x80],ecx
  41d0db:	test   DWORD PTR [edx+edx*1],ebx
  41d0de:	sub    cl,BYTE PTR [edi+edx*2+0x5210429]
  41d0e5:	jne    0x41d0f9
  41d0e7:	xor    dh,BYTE PTR [eax]
  41d0e9:	fs jbe 0x41d145
  41d0ec:	clc    
  41d0ed:	jle    0x41d071
  41d0ef:	mov    dh,0xe5
  41d0f1:	adc    DWORD PTR [edx+0x2cdd9b1a],esi
  41d0f7:	ss call 0xdbb53f1f
  41d0fd:	or     al,0xd7
  41d0ff:	and    DWORD PTR [ebx-0x4cd0f682],0x21
  41d106:	adc    bl,ah
  41d108:	xor    ebx,DWORD PTR [eax-0x69ab0b6c]
  41d10e:	sbb    edx,DWORD PTR [eax+ebp*2-0x1f596bff]
  41d115:	ret    0xa5e1
  41d118:	retf   0xc163
  41d11b:	xchg   ebx,eax
  41d11c:	adc    al,0x61
  41d11e:	jl     0x41d155
  41d120:	add    ah,BYTE PTR [esi]
  41d122:	imul   edi,DWORD PTR [bx+si],0xc582d8b
  41d129:	lds    eax,FWORD PTR [esi-0x4a]
  41d12c:	mov    eax,0xcf96240a
  41d131:	in     al,0x88
  41d133:	mov    ah,0x6d
  41d135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d136:	nop
  41d137:	nop
  41d138:	mov    bh,0xe0
  41d13a:	and    BYTE PTR [ecx+esi*2],0x72
  41d13e:	jl     0x41d17a
  41d140:	or     al,0xb5
  41d142:	outs   dx,BYTE PTR ds:[esi]
  41d143:	mov    eax,ds:0x1f591d13
  41d148:	shr    ah,cl
  41d14a:	push   ss
  41d14b:	ret    
  41d14c:	inc    esi
  41d14d:	xchg   edi,eax
  41d14e:	dec    ebp
  41d14f:	popf   
  41d150:	cld    
  41d151:	jo     0x41d0f8
  41d153:	fmul   QWORD PTR [esi+0x55]
  41d156:	lods   eax,DWORD PTR ds:[esi]
  41d157:	lods   eax,DWORD PTR ds:[esi]
  41d158:	ins    DWORD PTR es:[edi],dx
  41d159:	mov    ch,0xf9
  41d15b:	sub    esi,DWORD PTR [esi]
  41d15d:	fwait
  41d15e:	pop    ecx
  41d15f:	test   BYTE PTR [edx-0x25],bl
  41d162:	pop    es
  41d163:	cs xor eax,0xa85df5ae
  41d169:	mov    eax,0xfffffe6c
  41d16e:	xchg   ecx,eax
  41d16f:	inc    ebx
  41d170:	rol    DWORD PTR [edx],1
  41d172:	mov    ds:0x21021252,eax
  41d177:	fs inc di
  41d17a:	enter  0xf2be,0x59
  41d17e:	in     eax,dx
  41d17f:	in     eax,0xf
  41d181:	aam    0x73
  41d183:	dec    ebp
  41d184:	cmp    BYTE PTR [ebx],dl
  41d186:	inc    ecx
  41d187:	mov    ebp,0x1cb55014
  41d18c:	jg     0x41d20a
  41d18e:	pop    ds
  41d18f:	push   es
  41d190:	dec    edx
  41d191:	mov    ds,WORD PTR [eax-0x4a]
  41d194:	aam    0x64
  41d196:	jmp    0x901c:0x55b53210
  41d19d:	jg     0x41d1ab
  41d19f:	jmp    0x82eb22fd
  41d1a4:	pop    ebx
  41d1a5:	mov    ch,0xc2
  41d1a7:	div    DWORD PTR [ecx+ecx*1]
  41d1aa:	inc    edi
  41d1ab:	jp     0x41d21b
  41d1ad:	mov    dl,0x8a
  41d1af:	add    BYTE PTR [ebx],0xd4
  41d1b2:	ret    
  41d1b3:	setnp  BYTE PTR [eax+0x5d]
  41d1b7:	sub    ecx,DWORD PTR [eax-0x30a15501]
  41d1bd:	fmul   DWORD PTR [eax]
  41d1bf:	lahf   
  41d1c0:	cld    
  41d1c1:	fdivr  DWORD PTR [eax]
  41d1c3:	push   0xffffffb5
  41d1c5:	xor    al,0x5d
  41d1c7:	jle    0x41d220
  41d1c9:	addr16 jge 0x41d246
  41d1cc:	xlat   BYTE PTR ds:[ebx]
  41d1cd:	add    eax,0x8f47a9fb
  41d1d2:	sbb    al,0x72
  41d1d4:	outs   dx,DWORD PTR ds:[esi]
  41d1d5:	(bad)  
  41d1d6:	fmul   DWORD PTR [ebx-0x6a]
  41d1d9:	sub    bh,BYTE PTR [eax]
  41d1db:	sbb    ecx,DWORD PTR [edx+ebp*2+0x46]
  41d1df:	mov    esi,0xdeb5db4a
  41d1e4:	inc    esi
  41d1e5:	pop    esi
  41d1e6:	cmp    eax,esi
  41d1e8:	fwait
  41d1e9:	les    esi,FWORD PTR [eax+0x3c8edede]
  41d1ef:	loope  0x41d17e
  41d1f1:	push   cs
  41d1f2:	in     al,dx
  41d1f3:	lea    edi,[edx-0x77]
  41d1f6:	scas   al,BYTE PTR es:[edi]
  41d1f7:	pop    ebx
  41d1f8:	and    al,0x66
  41d1fa:	sub    eax,0x43780b02
  41d200:	xor    DWORD PTR ds:0xd72ca1c6,ebx
  41d206:	sahf   
  41d207:	sbb    BYTE PTR [edx-0x21],dh
  41d20a:	in     eax,dx
  41d20b:	mov    dh,0xc9
  41d20d:	sbb    al,0x36
  41d20f:	lods   eax,DWORD PTR ds:[esi]
  41d210:	adc    al,0x40
  41d212:	out    0x89,al
  41d214:	xor    dh,BYTE PTR [ecx]
  41d216:	and    ah,ch
  41d218:	mov    dh,0xd6
  41d21a:	int3   
  41d21b:	aam    0xac
  41d21d:	ror    BYTE PTR [ebp-0x7e],cl
  41d220:	cmp    al,0x77
  41d222:	ss push esp
  41d224:	mov    ah,0x55
  41d226:	jae    0x41d283
  41d228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d229:	call   0x605773c
  41d22e:	arpl   WORD PTR ds:0x101cb095,cx
  41d234:	mov    BYTE PTR [ebx+0x729d6373],dl
  41d23a:	sbb    BYTE PTR [edi],ah
  41d23c:	adc    esp,edx
  41d23e:	add    al,dh
  41d240:	std    
  41d241:	sub    DWORD PTR [edi+edx*2+0x59],eax
  41d245:	call   FWORD PTR [ebp-0x36]
  41d248:	mov    fs,WORD PTR [ecx]
  41d24a:	in     al,0x75
  41d24c:	daa    
  41d24d:	fnstcw WORD PTR [ecx-0x77633ae8]
  41d253:	adc    BYTE PTR [eax+0x23],0x82
  41d257:	and    BYTE PTR [edx+ebp*1],ah
  41d25a:	sub    DWORD PTR [ebx-0xd0b5cf2],ebx
  41d260:	bound  ecx,QWORD PTR ss:[eax-0x65]
  41d264:	addr16 test dl,al
  41d267:	ror    edx,cl
  41d269:	or     al,0xe5
  41d26b:	mov    cl,0x4
  41d26d:	imul   ecx,edx,0x83b67de2
  41d273:	clc    
  41d274:	push   esi
  41d275:	push   ebx
  41d276:	pop    esp
  41d277:	out    dx,eax
  41d278:	cmp    ch,ah
  41d27a:	fst    QWORD PTR [ebx]
  41d27c:	push   cs
  41d27d:	or     BYTE PTR [esi],ch
  41d27f:	jne    0x41d284
  41d281:	mov    DWORD PTR [eax-0x2c],esi
  41d284:	jg     0x41d2c4
  41d286:	and    BYTE PTR [edi],0x37
  41d289:	stc    
  41d28a:	fmul   DWORD PTR [eax-0x4e]
  41d28d:	inc    edx
  41d28e:	jp     0x41d263
  41d290:	fwait
  41d291:	dec    ebx
  41d292:	hlt    
  41d293:	dec    ebp
  41d294:	xor    eax,0x30a4d358
  41d299:	addr16 jae 0x41d2b5
  41d29c:	aaa    
  41d29d:	sti    
  41d29e:	jae    0x41d304
  41d2a0:	dec    eax
  41d2a1:	sbb    al,0x14
  41d2a3:	xor    edi,DWORD PTR [eax+0x792869b9]
  41d2a9:	lock xchg edx,eax
  41d2ab:	push   edx
  41d2ac:	daa    
  41d2ad:	inc    ecx
  41d2ae:	and    al,BYTE PTR [esi-0x46d2f39c]
  41d2b4:	pop    esi
  41d2b5:	addr16 ja 0x41d2e8
  41d2b8:	fst    QWORD PTR [edx-0xf5046d8]
  41d2be:	add    DWORD PTR [esi+0x737000ea],edx
  41d2c4:	imul   edx,ecx,0xa3c1b6f3
  41d2ca:	scas   al,BYTE PTR es:[edi]
  41d2cb:	sti    
  41d2cc:	daa    
  41d2cd:	jb     0x41d2a3
  41d2cf:	adc    bh,bh
  41d2d1:	jp     0x41d2c7
  41d2d3:	in     al,0x65
  41d2d5:	push   esi
  41d2d6:	jmp    0xbf2654e7
  41d2db:	(bad)  
  41d2dc:	hlt    
  41d2dd:	retf   
  41d2de:	call   0xba63c7a5
  41d2e3:	(bad)  es:[ecx-0x34]
  41d2e7:	jne    0x41d2ce
  41d2e9:	fcom   st(2)
  41d2eb:	clc    
  41d2ec:	in     al,0x2c
  41d2ee:	inc    ebx
  41d2ef:	push   edx
  41d2f0:	push   eax
  41d2f1:	sub    BYTE PTR [edx+0x1d32bc24],0x12
  41d2f8:	xlat   BYTE PTR ds:[ebx]
  41d2f9:	test   al,0x66
  41d2fb:	test   eax,0xb75d2404
  41d300:	lock cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d303:	pop    ecx
  41d304:	push   ebx
  41d305:	xchg   esi,eax
  41d306:	fisttp DWORD PTR [esi]
  41d308:	int    0x77
  41d30a:	sbb    al,0x16
  41d30c:	mov    ecx,0x4c2fdc83
  41d311:	retf   
  41d312:	adc    al,0x1e
  41d314:	push   ss
  41d315:	adc    ebx,DWORD PTR [edi]
  41d317:	xlat   BYTE PTR ds:[ebx]
  41d318:	aas    
  41d319:	out    0x2d,al
  41d31b:	jne    0x41d2d0
  41d31d:	enter  0x5fd4,0x67
  41d321:	iret   
  41d322:	jge    0x41d381
  41d324:	sub    eax,0xc8dc1408
  41d329:	push   esp
  41d32a:	scas   eax,DWORD PTR es:[edi]
  41d32b:	xchg   edi,eax
  41d32c:	xor    al,0x20
  41d32e:	sahf   
  41d32f:	test   eax,ecx
  41d331:	arpl   WORD PTR [edx-0x61],di
  41d334:	pop    esp
  41d335:	dec    edx
  41d336:	add    DWORD PTR [ecx],edx
  41d338:	xor    eax,0xd1fe69be
  41d33d:	shl    BYTE PTR [eax],cl
  41d33f:	mov    dh,bl
  41d341:	mov    cs,eax
  41d343:	inc    eax
  41d344:	(bad)  
  41d345:	fidivr DWORD PTR [edi]
  41d347:	lahf   
  41d348:	arpl   bx,sp
  41d34a:	fld    QWORD PTR [esi-0x57]
  41d34d:	out    0xc0,eax
  41d34f:	test   eax,0x38b3261b
  41d354:	xchg   esp,eax
  41d355:	push   ebx
  41d356:	adc    BYTE PTR [esp+edx*2],bl
  41d359:	sbb    ah,BYTE PTR [edx]
  41d35b:	jmp    0xdf27:0x5a9903f0
  41d362:	xchg   ecx,eax
  41d363:	mov    ds:0x21a48f4c,al
  41d368:	jg     0x41d369
  41d36a:	aas    
  41d36b:	pop    ebx
  41d36c:	das    
  41d36d:	adc    edx,DWORD PTR [ebp+0x49c9fd66]
  41d373:	in     al,0x25
  41d375:	out    0x0,eax
	...
  41d37f:	add    BYTE PTR [eax],al
  41d381:	add    BYTE PTR [eax-0x77],bh
  41d384:	hlt    
  41d385:	mov    al,0xf5
  41d387:	std    
  41d388:	jl     0x41d353
  41d38a:	dec    edi
  41d38b:	pop    ds
  41d38c:	cmp    DWORD PTR [ebx+0x25],ebp
  41d38f:	out    0x9b,eax
  41d391:	adc    ebp,DWORD PTR [esi+0x4a]
  41d394:	add    DWORD PTR [eax],eax
  41d396:	int3   
  41d397:	add    al,BYTE PTR [eax]
  41d399:	add    BYTE PTR [edi+0x65],dh
  41d39c:	pop    ds
  41d39d:	push   ebx
  41d39e:	shl    DWORD PTR ds:0x9e2f4ef2,cl
  41d3a4:	pop    ds
  41d3a5:	cmp    BYTE PTR ds:0x35851d74,dl
  41d3ab:	mov    BYTE PTR [eax+0x5b3df158],al
  41d3b1:	sub    DWORD PTR [eax+0x20],ecx
  41d3b4:	mov    ds:0x2ff00efd,eax
  41d3b9:	lea    esp,[edx+0x796bdd9c]
  41d3bf:	cmp    DWORD PTR [edx+0x23],esp
  41d3c2:	add    edx,edx
  41d3c4:	iret   
  41d3c5:	lea    ebx,[edi+0x617d2c1e]
  41d3cb:	or     DWORD PTR ds:0x904b0c85,esi
  41d3d1:	jb     0x41d3db
  41d3d3:	sub    ecx,0x0
  41d3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d7:	mov    gs,edx
  41d3d9:	jbe    0x41d42b
  41d3db:	xor    al,ch
  41d3dd:	outs   dx,DWORD PTR ds:[esi]
  41d3de:	pop    edx
  41d3df:	dec    esp
  41d3e0:	push   eax
  41d3e1:	jmp    0x1603:0x34402e66
  41d3e8:	and    esi,edx
  41d3ea:	add    BYTE PTR [esi+ebx*8-0x64],al
  41d3ee:	outs   dx,DWORD PTR ds:[esi]
  41d3ef:	outs   dx,DWORD PTR ds:[esi]
  41d3f0:	dec    edi
  41d3f1:	push   esp
  41d3f2:	cmp    DWORD PTR [esi],ecx
  41d3f4:	jecxz  0x41d3c1
  41d3f6:	dec    edi
  41d3f7:	inc    esi
  41d3f8:	loop   0x41d3c4
  41d3fa:	fucom  st(7)
  41d3fc:	sbb    al,0xcb
  41d3fe:	loope  0x41d435
  41d400:	dec    ecx
  41d401:	ins    BYTE PTR es:[edi],dx
  41d402:	cld    
  41d403:	(bad)  
  41d404:	ds test edx,0x4ebbe30a
  41d40b:	or     BYTE PTR [ebx+0x5d18d918],0xd2
  41d412:	lock mov ecx,0x79e6bfb2
  41d418:	nop
  41d419:	aas    
  41d41a:	or     BYTE PTR [ebx-0x552ce7d4],cl
  41d420:	mov    ebp,0x9eab565f
  41d425:	pushf  
  41d426:	and    esp,ecx
  41d428:	loope  0x41d465
  41d42a:	inc    esp
  41d42b:	retf   
  41d42c:	je     0x41d3e2
  41d42e:	jo     0x41d41b
  41d430:	pop    edi
  41d431:	daa    
  41d432:	pop    ss
  41d433:	dec    edx
  41d434:	add    DWORD PTR [esi-0x24],edx
  41d437:	pusha  
  41d438:	jp     0x41d3bf
  41d43a:	(bad)  
  41d43b:	lahf   
  41d43c:	mov    esp,0x830cc852
  41d441:	mov    cl,0x3b
  41d443:	xor    eax,0x7aaf51c9
  41d448:	ficomp WORD PTR [esi+0x15ee7824]
  41d44e:	pop    ebx
  41d44f:	dec    ecx
  41d450:	adc    esp,edx
  41d452:	or     edi,DWORD PTR fs:[esi-0x7c]
  41d456:	fdiv   DWORD PTR [edi+0x77]
  41d459:	js     0x41d414
  41d45b:	fistp  WORD PTR [eax-0x23]
  41d45e:	adc    ecx,DWORD PTR [edx-0x287a4dbf]
  41d464:	inc    eax
  41d465:	lods   al,BYTE PTR ds:[esi]
  41d466:	or     BYTE PTR [eax+ebx*4],al
  41d469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d46a:	xchg   esp,eax
  41d46b:	xchg   bl,dl
  41d46d:	int    0x3d
  41d46f:	and    al,0xb0
  41d471:	std    
  41d472:	mov    DWORD PTR [ebx-0x62314ef5],eax
  41d478:	aaa    
  41d479:	pop    edi
  41d47a:	or     BYTE PTR [ecx+0x596579a3],dl
  41d480:	jmp    0x41d42d
  41d482:	enter  0x9c04,0x7
  41d486:	sbb    DWORD PTR [eax+edx*1-0x27],edx
  41d48a:	cdq    
  41d48b:	loopne 0x41d4f6
  41d48d:	stos   BYTE PTR es:[edi],al
  41d48e:	(bad)  
  41d48f:	fisub  DWORD PTR [ebp+0x41f2da21]
  41d495:	and    BYTE PTR [ecx-0x72],bh
  41d498:	adc    ebx,edi
  41d49a:	leave  
  41d49b:	test   DWORD PTR [ebx-0x3030dc34],edi
  41d4a1:	sub    eax,0x280290a8
  41d4a6:	cmp    BYTE PTR [ecx+0x6ca25d7c],ch
  41d4ac:	mov    cl,0xf
  41d4ae:	pop    ebp
  41d4af:	and    al,0xbc
  41d4b1:	in     eax,0xa4
  41d4b3:	jmp    FWORD PTR [eax]
  41d4b5:	dec    esp
  41d4b6:	pop    eax
  41d4b7:	inc    ebx
  41d4b8:	xchg   ebp,eax
  41d4b9:	sbb    BYTE PTR [ecx-0x582775a3],0x67
  41d4c0:	dec    esi
  41d4c1:	inc    ecx
  41d4c2:	and    edi,DWORD PTR [edx-0x1b]
  41d4c5:	aaa    
  41d4c6:	out    0x8c,al
  41d4c8:	enter  0xaddf,0x21
  41d4cc:	xchg   edx,eax
  41d4cd:	inc    esi
  41d4ce:	or     cl,BYTE PTR [eax]
  41d4d0:	mov    ch,0xd2
  41d4d2:	push   esp
  41d4d3:	scas   al,BYTE PTR es:[edi]
  41d4d4:	mov    bh,bl
  41d4d6:	pop    eax
  41d4d7:	jg     0x41d518
  41d4d9:	mov    ds:0xc5ca76a9,eax
  41d4de:	mov    WORD PTR [ebx],ss
  41d4e0:	out    0x2f,eax
  41d4e2:	ds popf 
  41d4e4:	(bad)  
  41d4e5:	push   esi
  41d4e6:	mov    esi,0xd9b0e2e0
  41d4eb:	inc    edi
  41d4ec:	or     si,WORD PTR [edi]
  41d4ef:	dec    ebx
  41d4f0:	mov    ch,0x6b
  41d4f2:	lods   eax,DWORD PTR ds:[esi]
  41d4f3:	xchg   ebp,eax
  41d4f4:	jg     0x41d48f
  41d4f6:	inc    ebx
  41d4f7:	and    cl,BYTE PTR [ebx+0x9]
  41d4fa:	fwait
  41d4fb:	(bad)  
  41d4fc:	daa    
  41d4fd:	pop    esi
  41d4fe:	mul    DWORD PTR [esi]
  41d500:	fistp  DWORD PTR [ebx]
  41d502:	ins    BYTE PTR es:[edi],dx
  41d503:	dec    ebp
  41d504:	lea    edx,[ebx+edx*1+0x79b9f070]
  41d50b:	push   edx
  41d50c:	test   DWORD PTR [eax],esi
  41d50e:	lods   al,BYTE PTR ds:[esi]
  41d50f:	mov    esp,0x98a26665
  41d514:	aad    0xf1
  41d516:	fcom   DWORD PTR [edi+eax*1-0x52]
  41d51a:	ss dec ebx
  41d51c:	icebp  
  41d51d:	mul    DWORD PTR [ecx+0x6]
  41d520:	mov    BYTE PTR [edi+ebx*1],bl
  41d523:	dec    esi
  41d524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d525:	pop    eax
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	cwde   
  41d528:	or     BYTE PTR [edi+edi*8],dl
  41d52b:	mov    esi,cr6
  41d52e:	nop
  41d52f:	retf   0xfdc5
  41d532:	xor    eax,eax
  41d534:	adc    eax,0x6aaf5d0b
  41d539:	mov    al,dh
  41d53b:	jne    0x41d5a3
  41d53d:	leave  
  41d53e:	dec    edx
  41d53f:	fistp  WORD PTR [ebp+0x62]
  41d542:	pop    ebp
  41d543:	jns    0x41d4ee
  41d545:	out    0xf2,al
  41d547:	and    BYTE PTR [edi+0x11f1ad7a],bl
  41d54d:	adc    DWORD PTR [ebx],0xffffffab
  41d550:	enter  0x2ca1,0x91
  41d554:	mov    ebx,0x8c74a365
  41d559:	fbstp  TBYTE PTR [edx+0x18]
  41d55c:	and    eax,0x430a376
  41d561:	fidivr WORD PTR [ebp+0x7d]
  41d564:	(bad)  
  41d565:	ror    BYTE PTR [eax],cl
  41d567:	cmp    eax,0xe0d261a5
  41d56c:	xchg   BYTE PTR [esp+edx*8-0xa7104bf],bl
  41d573:	clc    
  41d574:	cld    
  41d575:	aaa    
  41d576:	fidivr DWORD PTR [edx-0x54]
  41d579:	sahf   
  41d57a:	dec    ecx
  41d57b:	dec    edx
  41d57c:	in     al,0x9b
  41d57e:	es ror edx,cl
  41d581:	js     0x41d5b5
  41d583:	(bad)  
  41d584:	sub    edi,DWORD PTR ds:0x910cbacd
  41d58a:	ss pop esp
  41d58c:	repnz nop
  41d58e:	jne    0x41d574
  41d590:	push   es
  41d591:	or     BYTE PTR [ebp-0x34],bl
  41d594:	outs   dx,BYTE PTR ds:[esi]
  41d595:	ins    DWORD PTR es:[edi],dx
  41d596:	add    BYTE PTR ds:0xe4d893eb,dl
  41d59c:	sub    eax,0x6bf9842c
  41d5a1:	xor    bh,BYTE PTR [ebx+0x74]
  41d5a4:	popf   
  41d5a5:	shl    ecx,0xec
  41d5a8:	inc    edi
  41d5a9:	sub    ebp,ecx
  41d5ab:	push   esp
  41d5ac:	arpl   WORD PTR [ecx+0x6b],bx
  41d5af:	les    esp,FWORD PTR [esi]
  41d5b1:	mov    ch,0xe6
  41d5b3:	daa    
  41d5b4:	repnz dec ebp
  41d5b6:	sti    
  41d5b7:	sub    eax,0x7ee9b425
  41d5bc:	aam    0xee
  41d5be:	and    eax,0x89f3d657
  41d5c3:	je     0x41d626
  41d5c5:	lods   eax,DWORD PTR ds:[esi]
  41d5c6:	jmp    0x3a26:0x34f36e43
  41d5cd:	scas   al,BYTE PTR es:[edi]
  41d5ce:	jl     0x41d5ac
  41d5d0:	std    
  41d5d1:	or     BYTE PTR [ebx+0x66],bh
  41d5d4:	adc    dl,BYTE PTR [ecx+0x2173cbbe]
  41d5da:	push   es
  41d5db:	ret    
  41d5dc:	add    BYTE PTR [ebx+0x26],al
  41d5df:	lods   al,BYTE PTR ds:[esi]
  41d5e0:	or     BYTE PTR [ebp-0x38],0xef
  41d5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e5:	xor    al,0xcc
  41d5e7:	mov    bl,0x2b
  41d5e9:	pop    ebx
  41d5ea:	pop    edx
  41d5eb:	xchg   esi,eax
  41d5ec:	inc    ecx
  41d5ed:	adc    eax,0x2da574fa
  41d5f2:	push   cs
  41d5f3:	fisubr DWORD PTR [ebx-0x12]
  41d5f6:	mov    edi,fs
  41d5f8:	xor    eax,0x7731617e
  41d5fd:	int    0x76
  41d5ff:	sti    
  41d600:	push   edi
  41d601:	cdq    
  41d602:	aad    0xeb
  41d604:	cmp    BYTE PTR [edi+eiz*8-0x28fb6c38],bh
  41d60b:	shl    DWORD PTR [edx-0x12],1
  41d60e:	xor    al,0x3a
  41d610:	xchg   ecx,eax
  41d611:	inc    ecx
  41d612:	test   al,0xfb
  41d614:	mov    WORD PTR [ebp+0x4c2c5ff6],ds
  41d61a:	and    eax,0xa77205f2
  41d61f:	out    dx,eax
  41d620:	jmp    0x419e4304
  41d625:	dec    ebp
  41d626:	(bad)  
  41d627:	mov    esi,0x2b9c9814
  41d62c:	adc    dl,BYTE PTR [edi+0x50]
  41d62f:	hlt    
  41d630:	mov    dh,0x30
  41d632:	lods   eax,DWORD PTR ds:[esi]
  41d633:	(bad)  
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	and    ebp,ecx
  41d637:	(bad)  
  41d638:	outs   dx,BYTE PTR ds:[esi]
  41d639:	mov    esi,0xf93d61c5
  41d63e:	mov    WORD PTR [edx],es
  41d640:	add    esi,DWORD PTR [ebx+0x7b]
  41d643:	or     eax,0x53f4c586
  41d648:	shr    WORD PTR [edx+edi*4+0x55],1
  41d64d:	daa    
  41d64e:	xor    BYTE PTR [edx-0x3182281],ch
  41d654:	jb     0x41d6ae
  41d656:	aas    
  41d657:	lods   al,BYTE PTR ds:[esi]
  41d658:	or     al,0x13
  41d65a:	fadd   DWORD PTR [edx-0x5768d9c9]
  41d660:	jle    0x41d5fc
  41d662:	aaa    
  41d663:	adc    edx,DWORD PTR [ebp+0x2c]
	...
  41d671:	add    BYTE PTR [edx+ecx*4-0x49],bl
  41d675:	imul   esi,edi,0x7f
  41d678:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41d67e:	xchg   esp,eax
  41d67f:	push   0x61
  41d681:	mov    ecx,0x14d3a
  41d686:	int3   
  41d687:	add    al,BYTE PTR [eax]
  41d689:	add    BYTE PTR [eax],ah
  41d68b:	retf   0x4e77
  41d68e:	adc    dh,BYTE PTR [esi]
  41d690:	inc    eax
  41d691:	push   ebx
  41d692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d693:	cwde   
  41d694:	scas   eax,DWORD PTR es:[edi]
  41d695:	in     eax,dx
  41d696:	inc    ebp
  41d697:	mov    dl,0xa2
  41d699:	mov    ah,0xa2
  41d69b:	mov    al,0xb8
  41d69d:	cs loope 0x41d702
  41d6a0:	sbb    al,0x25
  41d6a2:	and    eax,0x3e0e2f97
  41d6a7:	(bad)  [ebx-0x7d]
  41d6aa:	imul   BYTE PTR [ebp+0x6a661234]
  41d6b0:	ss call 0x3402:0x55727840
  41d6b8:	sub    bh,BYTE PTR [ebx-0xc]
  41d6bb:	jnp    0x41d738
  41d6bd:	mov    eax,0xe6f14aeb
  41d6c2:	pusha  
  41d6c3:	mov    ah,0x29
  41d6c5:	xor    eax,0x376b7487
  41d6ca:	adc    cl,0x9e
  41d6cd:	ret    
  41d6ce:	push   eax
  41d6cf:	pop    ss
  41d6d0:	icebp  
  41d6d1:	fwait
  41d6d2:	enter  0x10d2,0xd6
  41d6d6:	mov    BYTE PTR [esi+ebx*4],bh
  41d6d9:	sub    edx,edi
  41d6db:	sbb    BYTE PTR [ebp+0x3718b30a],ch
  41d6e1:	ret    0x4b41
  41d6e4:	jg     0x41d758
  41d6e6:	jg     0x41d6cd
  41d6e8:	dec    edx
  41d6e9:	shr    DWORD PTR [ecx+0x588809da],0xd
  41d6f0:	or     ah,BYTE PTR [edx-0x255c5cd2]
  41d6f6:	dec    ebx
  41d6f7:	sub    esp,DWORD PTR [ebp+0x5b]
  41d6fa:	in     al,0x1d
  41d6fc:	jge    0x41d6f2
  41d6fe:	jg     0x41d717
  41d700:	je     0x41d725
  41d702:	pop    ss
  41d703:	loope  0x41d72a
  41d705:	rol    esp,0xb2
  41d708:	cs mov esp,edi
  41d70b:	sbb    bh,0x61
  41d70e:	mov    al,ds:0x8cafc7e4
  41d713:	xor    eax,0x342d3fe1
  41d718:	inc    BYTE PTR [edi-0x63]
  41d71b:	out    dx,eax
  41d71c:	and    esi,DWORD PTR [ebx+esi*2]
  41d71f:	sbb    bl,BYTE PTR [edx-0x34]
  41d722:	ja     0x41d6eb
  41d724:	mov    ds:0xd9c35fb9,al
  41d729:	add    al,BYTE PTR [esi-0x412eecaa]
  41d72f:	or     BYTE PTR [eax],al
  41d731:	dec    esi
  41d732:	add    al,0x11
  41d734:	sub    dh,BYTE PTR [eax]
  41d736:	xor    BYTE PTR [esi-0x6a],dh
  41d739:	xor    BYTE PTR [esp+eax*1-0x50],dh
  41d73d:	mov    ebp,0xe420becc
  41d742:	xor    eax,0xc7540cc2
  41d747:	dec    ebx
  41d748:	sub    eax,0x4a12b9aa
  41d74d:	inc    eax
  41d74e:	push   ecx
  41d74f:	inc    edi
  41d750:	ds daa 
  41d752:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41d754:	pop    ebx
  41d755:	cmc    
  41d756:	arpl   WORD PTR [esi],ax
  41d758:	inc    ebp
  41d759:	cmp    ebp,DWORD PTR ds:0xa2ebcac7
  41d75f:	(bad)  
  41d760:	in     eax,dx
  41d761:	bound  esi,QWORD PTR [esi]
  41d763:	push   ebx
  41d764:	mov    ch,0x23
  41d766:	jnp    0x41d79b
  41d768:	pop    ebp
  41d769:	nop
  41d76a:	or     dl,BYTE PTR [edi-0x56b12ac3]
  41d770:	push   ecx
  41d771:	add    eax,0x2078f0a7
  41d776:	push   edi
  41d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d778:	enter  0xc0fe,0x4d
  41d77c:	cs jge 0x41d77a
  41d77f:	mov    ch,0xa3
  41d781:	mov    cl,0xd2
  41d783:	jae    0x41d801
  41d785:	inc    ebp
  41d786:	dec    eax
  41d787:	pop    ss
  41d788:	test   DWORD PTR es:[ecx+0x7364f0bb],ebx
  41d78f:	stos   BYTE PTR es:[edi],al
  41d790:	add    al,0xc9
  41d792:	cli    
  41d793:	xlat   BYTE PTR ds:[ebx]
  41d794:	jecxz  0x41d72c
  41d796:	xor    eax,DWORD PTR [edi-0x3d1e3ab9]
  41d79c:	daa    
  41d79d:	stos   DWORD PTR es:[edi],eax
  41d79e:	dec    esp
  41d79f:	push   cs
  41d7a0:	mov    eax,0xcb02999c
  41d7a5:	gs mov edi,0x1591572
  41d7ab:	nop
  41d7ac:	mov    ebp,0x6fff79cc
  41d7b1:	jecxz  0x41d7fa
  41d7b3:	test   al,0x44
  41d7b5:	push   ds
  41d7b6:	call   0xf616e7aa
  41d7bb:	adc    al,0x2f
  41d7bd:	push   0x8579d7cb
  41d7c2:	cmp    al,0xe
  41d7c4:	inc    ebx
  41d7c5:	cdq    
  41d7c6:	add    eax,0xc289339f
  41d7cb:	push   es
  41d7cc:	pop    edi
  41d7cd:	lock js 0x41d831
  41d7d0:	outs   dx,DWORD PTR ds:[esi]
  41d7d1:	(bad)
  41d7d4:	mov    eax,ds:0x1d89d091
  41d7d9:	dec    ebx
  41d7da:	adc    eax,DWORD PTR [eax+0x53]
  41d7dd:	gs add eax,0x167400e3
  41d7e3:	fcomp  QWORD PTR [eax-0x3e]
  41d7e6:	dec    edi
  41d7e7:	adc    eax,esi
  41d7e9:	mov    ?,WORD PTR [ebx]
  41d7eb:	push   eax
  41d7ec:	cwde   
  41d7ed:	pop    ecx
  41d7ee:	stos   DWORD PTR es:[edi],eax
  41d7ef:	dec    ebx
  41d7f0:	sbb    al,0x62
  41d7f2:	adc    edx,eax
  41d7f4:	fdiv   st(5),st
  41d7f6:	push   0xf4371cde
  41d7fb:	dec    ecx
  41d7fc:	sbb    dl,BYTE PTR [edi-0x4148e781]
  41d802:	rol    DWORD PTR [edx+0x70],0x51
  41d806:	stc    
  41d807:	mov    al,0x6d
  41d809:	out    0xbe,eax
  41d80b:	test   bh,bh
  41d80d:	and    BYTE PTR [ebp-0xb],ch
  41d810:	stos   DWORD PTR es:[edi],eax
  41d811:	sahf   
  41d812:	and    al,0x74
  41d814:	xchg   edx,edi
  41d816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d817:	add    al,0x2d
  41d819:	dec    edx
  41d81a:	sub    ebx,0xffffff89
  41d81d:	xor    al,0x7c
  41d81f:	inc    esp
  41d820:	push   esi
  41d821:	fwait
  41d822:	aaa    
  41d823:	mov    eax,0x769a4443
  41d828:	adc    dl,0xee
  41d82b:	and    al,BYTE PTR [esi-0x44]
  41d82e:	outs   dx,DWORD PTR ds:[esi]
  41d82f:	out    0x20,al
  41d831:	sub    dh,BYTE PTR [ebx]
  41d833:	push   es
  41d834:	loopne 0x41d80d
  41d836:	icebp  
  41d837:	or     ecx,DWORD PTR [edi]
  41d839:	sub    al,0xbf
  41d83b:	mov    edi,0x208705c5
  41d840:	jae    0x41d7ec
  41d842:	pop    es
  41d843:	sub    DWORD PTR [eax+0x5b835627],edi
  41d849:	add    edi,DWORD PTR ds:0x95a6385f
  41d84f:	stc    
  41d850:	scas   eax,DWORD PTR es:[edi]
  41d851:	adc    bh,ch
  41d853:	(bad)
  41d856:	repnz std 
  41d858:	mov    bh,BYTE PTR [esi]
  41d85a:	mov    al,ds:0xf9a34ff4
  41d85f:	mov    bl,0x51
  41d861:	push   esi
  41d862:	pop    ecx
  41d863:	sub    esp,DWORD PTR [ebx-0x72bf1ffb]
  41d869:	cwde   
  41d86a:	mov    WORD PTR [ecx],ax
  41d86d:	sbb    eax,0x121686d8
  41d872:	xchg   edi,eax
  41d873:	mov    dl,0x81
  41d875:	ja     0x41d8e1
  41d877:	dec    ebp
  41d878:	ins    BYTE PTR es:[edi],dx
  41d879:	xchg   esi,eax
  41d87a:	shl    BYTE PTR [esi+0x3b],1
  41d87d:	nop
  41d87e:	pop    DWORD PTR [edi+0x5c6bb723]
  41d884:	and    bl,BYTE PTR [ebx-0x137bb9d3]
  41d88a:	repnz cs mov ebx,0xb1e8bad4
  41d891:	sbb    ah,BYTE PTR [eax+0x43d4b7b5]
  41d897:	test   DWORD PTR [edi-0x1d],esi
  41d89a:	dec    esp
  41d89b:	outs   dx,BYTE PTR ds:[esi]
  41d89c:	push   ebp
  41d89d:	sub    eax,0xea48dacb
  41d8a2:	inc    esi
  41d8a3:	int3   
  41d8a4:	mov    edi,0x5e389e04
  41d8a9:	add    bh,BYTE PTR [ebx]
  41d8ab:	popf   
  41d8ac:	jno    0x41d88e
  41d8ae:	xchg   esp,eax
  41d8af:	popa   
  41d8b0:	mov    cl,0xcb
  41d8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b3:	adc    esi,DWORD PTR [ebp+ecx*2+0x79]
  41d8b7:	and    dh,al
  41d8b9:	jb     0x41d87d
  41d8bb:	retf   
  41d8bc:	ja     0x41d887
  41d8be:	jl     0x41d927
  41d8c0:	sbb    BYTE PTR [eax+0x3d370304],ah
  41d8c6:	add    ebx,ebx
  41d8c8:	push   ebx
  41d8c9:	push   eax
  41d8ca:	add    edx,DWORD PTR [edx+edx*4-0x68]
  41d8ce:	jno    0x41d8d4
  41d8d0:	das    
  41d8d1:	xchg   ebp,ecx
  41d8d3:	pop    ebx
  41d8d4:	inc    BYTE PTR [ecx+0x6b29e5bf]
  41d8da:	jle    0x41d8c6
  41d8dc:	daa    
  41d8dd:	std    
  41d8de:	adc    BYTE PTR [ecx+0x454f88b7],dh
  41d8e4:	pop    esi
  41d8e5:	jmp    0x41d92a
  41d8e7:	sbb    al,0xfc
  41d8e9:	xchg   esp,eax
  41d8ea:	mov    ecx,0x5e5eaa84
  41d8ef:	push   edi
  41d8f0:	jl     0x41d922
  41d8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8f3:	push   edx
  41d8f4:	and    eax,0x92140f33
  41d8f9:	mov    ecx,0xd82bbc9a
  41d8fe:	dec    ebp
  41d8ff:	outs   dx,WORD PTR ds:[esi]
  41d901:	and    BYTE PTR [ebp-0x54],bl
  41d904:	lock dec ebx
  41d906:	xor    eax,esp
  41d908:	mov    bh,0x85
  41d90a:	xchg   edx,esi
  41d90c:	gs pop esi
  41d90e:	fnstenv [ecx+0x15]
  41d911:	mov    al,bl
  41d913:	adc    BYTE PTR [edi-0x7a],0xf3
  41d917:	imul   eax,DWORD PTR [ebp+0x1e],0xe5888f98
  41d91e:	(bad)  
  41d920:	push   ecx
  41d921:	aas    
  41d922:	inc    esi
  41d923:	push   ds
  41d924:	mov    ds:0x623a5a0d,al
  41d929:	xchg   ecx,eax
  41d92a:	xor    edx,DWORD PTR [edx+0x43]
  41d92d:	push   esi
  41d92e:	or     al,0x5d
  41d930:	mov    ds:0x698f6d97,eax
  41d935:	outs   dx,BYTE PTR ds:[esi]
  41d936:	pop    edx
  41d937:	in     eax,0xab
  41d939:	mov    bh,0x6b
  41d93b:	xchg   esi,eax
  41d93c:	pop    ebx
  41d93d:	(bad)  
  41d93e:	adc    esi,DWORD PTR [ebp-0x44d3b3c7]
  41d944:	test   bl,dh
  41d946:	int    0x7f
  41d948:	inc    edi
  41d949:	push   0xbeb26a97
  41d94e:	lea    eax,[ebx+0x5d]
  41d951:	in     eax,dx
  41d952:	push   eax
  41d953:	inc    edi
  41d954:	out    0xfc,al
	...
  41d962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d963:	sbb    al,BYTE PTR [edi-0x204026]
  41d969:	jg     0x41d917
  41d96b:	pop    ss
  41d96c:	aad    0x14
  41d96e:	mov    eax,ds:0x67a9c90
  41d973:	push   eax
  41d974:	add    DWORD PTR [eax],eax
  41d976:	int3   
  41d977:	add    al,BYTE PTR [eax]
  41d979:	add    bh,bh
  41d97b:	pop    ds
  41d97c:	(bad)  
  41d97d:	call   0x6c9b07f6
  41d982:	div    dl
  41d984:	mov    ah,0x13
  41d986:	bound  ebx,QWORD PTR [ebx+ecx*2-0x39bcfeed]
  41d98d:	scas   al,BYTE PTR es:[edi]
  41d98e:	ds push ebp
  41d990:	adc    ah,BYTE PTR [ebx]
  41d992:	iret   
  41d993:	jnp    0x41d966
  41d995:	adc    esi,DWORD PTR [esi]
  41d997:	xor    BYTE PTR [eax],0x7c
  41d99a:	pushf  
  41d99b:	inc    esp
  41d99c:	int3   
  41d99d:	sbb    al,BYTE PTR [ebx+0x799b6b39]
  41d9a3:	das    
  41d9a4:	and    eax,0x9d9bd0cc
  41d9a9:	or     edx,DWORD PTR [ecx+0x6bd891f1]
  41d9af:	inc    eax
  41d9b0:	mov    dh,dh
  41d9b2:	push   esp
  41d9b3:	sbb    esi,DWORD PTR [ebx+0x56]
  41d9b6:	sar    BYTE PTR [esp+edx*1-0x25],1
  41d9ba:	outs   dx,DWORD PTR ds:[esi]
  41d9bb:	cmp    al,0xc9
  41d9bd:	push   eax
  41d9be:	sti    
  41d9bf:	sbb    bl,BYTE PTR [esi+0x4e6c2cac]
  41d9c5:	(bad)  
  41d9c6:	push   ds
  41d9c7:	xchg   edi,eax
  41d9c8:	fild   QWORD PTR [ecx-0x1bd40fac]
  41d9ce:	xchg   esi,eax
  41d9cf:	sti    
  41d9d0:	and    esp,0xd82646c3
  41d9d6:	pop    ss
  41d9d7:	je     0x41d9c7
  41d9d9:	not    eax
  41d9db:	aad    0x5e
  41d9dd:	neg    BYTE PTR [edi+edx*2]
  41d9e0:	popf   
  41d9e1:	cli    
  41d9e2:	lea    eax,[edx+0x68]
  41d9e5:	mov    ch,0x3
  41d9e7:	call   0xc72b:0x708718a6
  41d9ee:	nop
  41d9ef:	lods   al,BYTE PTR ds:[esi]
  41d9f0:	out    dx,eax
  41d9f1:	retf   0x65ba
  41d9f4:	test   BYTE PTR cs:[edx-0x73],bh
  41d9f8:	loop   0x41da3c
  41d9fa:	push   es
  41d9fb:	iret   
  41d9fc:	retf   0xa7
  41d9ff:	mov    dl,0xe2
  41da01:	out    dx,al
  41da02:	jp     0x41d9a4
  41da04:	adc    eax,DWORD PTR [edi]
  41da06:	push   ecx
  41da07:	stos   DWORD PTR es:[edi],eax
  41da08:	repnz mov dl,bh
  41da0b:	pop    edi
  41da0c:	pushf  
  41da0d:	das    
  41da0e:	sbb    ah,dh
  41da10:	repnz and esp,DWORD PTR [edi+0x59c8e356]
  41da17:	outs   dx,DWORD PTR ds:[esi]
  41da18:	or     al,0x7
  41da1a:	push   esp
  41da1b:	cwde   
  41da1c:	fs call 0x5574:0x44e911d
  41da24:	sbb    ebx,DWORD PTR [ebx]
  41da26:	dec    ecx
  41da27:	sub    DWORD PTR [ebp+0x34259d6a],ebp
  41da2d:	sub    eax,0x9e96c3f5
  41da32:	mov    ebx,0x69eafebf
  41da37:	bound  ecx,QWORD PTR [ebx-0x7626f7b3]
  41da3d:	dec    ecx
  41da3e:	push   ds
  41da3f:	xchg   ebp,eax
  41da40:	mov    dh,0xf9
  41da42:	add    bl,BYTE PTR [ecx+0x714f064c]
  41da48:	jns    0x41d9d6
  41da4a:	jecxz  0x41daaf
  41da4c:	ins    DWORD PTR es:[edi],dx
  41da4d:	jb     0x41dac0
  41da4f:	mov    ds:0xdbba0538,eax
  41da54:	dec    ebp
  41da55:	inc    ecx
  41da56:	push   edx
  41da57:	xor    al,0x7c
  41da59:	and    DWORD PTR [ecx-0x73b3149e],eax
  41da5f:	std    
  41da60:	cwde   
  41da61:	pop    es
  41da62:	(bad)  
  41da63:	add    edx,DWORD PTR [eax+esi*2-0x6c3acabd]
  41da6a:	std    
  41da6b:	sbb    ebp,DWORD PTR fs:[ecx+edi*1]
  41da6f:	mov    ebx,DWORD PTR [ecx]
  41da71:	xchg   ecx,eax
  41da72:	mov    WORD PTR [eax-0x25],ss
  41da75:	jo     0x41dae2
  41da77:	push   ebp
  41da78:	mov    edi,?
  41da7a:	and    BYTE PTR [ebp-0x5f],0x24
  41da7e:	cmc    
  41da7f:	sahf   
  41da80:	dec    edx
  41da81:	xchg   BYTE PTR [ebx],dh
  41da83:	dec    ebp
  41da84:	nop
  41da85:	dec    esi
  41da86:	ds jne 0x41daa6
  41da89:	ss in  al,dx
  41da8b:	xor    ebp,DWORD PTR [ebx+ecx*8-0x6349517a]
  41da92:	pop    ecx
  41da93:	xor    DWORD PTR [eax],esi
  41da95:	or     eax,0x7776a040
  41da9a:	push   0xed46f84e
  41da9f:	lods   eax,DWORD PTR ds:[esi]
  41daa0:	xor    eax,0xfcb4e3cb
  41daa5:	mov    dl,0x55
  41daa7:	xchg   ebx,eax
  41daa8:	xor    al,0x82
  41daaa:	js     0x41da4b
  41daac:	fimul  WORD PTR [edi-0x76406466]
  41dab2:	ror    DWORD PTR [edi-0x33],0x2c
  41dab6:	mov    ds:0xe779bbf1,al
  41dabb:	dec    edx
  41dabc:	bound  esp,QWORD PTR [ebx+0x685fc37b]
  41dac2:	xchg   esi,eax
  41dac3:	mov    eax,ds:0x3a34f813
  41dac8:	xchg   esi,eax
  41dac9:	adc    al,0x40
  41dacb:	retf   0x1b8a
  41dace:	arpl   WORD PTR [ebx-0x51bfbe0b],cx
  41dad4:	dec    ecx
  41dad5:	enter  0x454c,0x5c
  41dad9:	or     ebx,DWORD PTR [ebx+0x7b86beeb]
  41dadf:	inc    esi
  41dae0:	push   ebp
  41dae1:	push   cs
  41dae2:	or     dl,bl
  41dae4:	jo     0x41dabc
  41dae6:	mov    eax,ds:0x7bc4f5fe
  41daeb:	add    al,BYTE PTR es:0xc1846773
  41daf2:	push   esp
  41daf3:	arpl   WORD PTR [edx-0x76],bp
  41daf6:	out    dx,al
  41daf7:	fwait
  41daf8:	mov    dl,0x46
  41dafa:	push   ebx
  41dafb:	rcr    BYTE PTR [edx],1
  41dafd:	xor    BYTE PTR [edx],bl
  41daff:	sbb    dl,BYTE PTR [edi+0x21]
  41db02:	dec    edi
  41db03:	cwde   
  41db04:	fs push esi
  41db06:	and    eax,0x5cf207fb
  41db0b:	aad    0xdb
  41db0d:	cs daa 
  41db0f:	xchg   ebx,eax
  41db10:	in     al,0x9
  41db12:	xor    BYTE PTR [edi],0xcd
  41db15:	retf   
  41db16:	jge    0x41db0e
  41db18:	push   ds
  41db19:	pop    eax
  41db1a:	in     al,dx
  41db1b:	sub    eax,0x4c43683b
  41db20:	js     0x41daa2
  41db22:	test   al,ah
  41db24:	push   0x3b
  41db26:	push   ecx
  41db27:	loope  0x41dab2
  41db29:	mov    ?,edi
  41db2b:	ret    0x663a
  41db2e:	jmp    0x41dafe
  41db30:	cmp    esp,DWORD PTR [ebx]
  41db32:	add    dh,BYTE PTR [ebx+0x4be28c42]
  41db38:	pop    ebx
  41db39:	(bad)
  41db3d:	xor    DWORD PTR [ebp-0x6c],0x7f
  41db41:	setge  bh
  41db44:	sub    DWORD PTR [edx],esi
  41db46:	pop    edx
  41db47:	in     eax,0x33
  41db49:	xchg   ecx,eax
  41db4a:	cmp    ebx,DWORD PTR [edi+0x4c]
  41db4d:	(bad)  
  41db4e:	pop    ecx
  41db4f:	aad    0x43
  41db51:	nop
  41db52:	les    ebx,FWORD PTR [edx]
  41db54:	repnz das 
  41db56:	je     0x41db33
  41db58:	cmp    DWORD PTR [edi-0x2834af3],ebx
  41db5e:	and    al,0x8e
  41db60:	shl    DWORD PTR [ebp+0xebe0f82],1
  41db66:	cmp    DWORD PTR es:[eax+edx*2-0x7b7cfdad],eax
  41db6e:	xor    cl,dl
  41db70:	aas    
  41db71:	adc    al,0x86
  41db73:	test   BYTE PTR [ebp+0x74],cl
  41db76:	jmp    0x884c:0x9285d37a
  41db7d:	retf   
  41db7e:	mov    ecx,fs
  41db80:	je     0x41db7d
  41db82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db83:	pop    ecx
  41db84:	(bad)  
  41db85:	sub    BYTE PTR [eax-0x20539b23],cl
  41db8b:	bound  ebx,QWORD PTR [edi]
  41db8d:	mov    dl,0x91
  41db8f:	repz mov WORD PTR fs:[edx],cs
  41db93:	lock popa 
  41db95:	fcmovb st,st(2)
  41db97:	add    DWORD PTR [edx+0x535ec22],esi
  41db9d:	sbb    ebx,DWORD PTR [ecx-0x3e22d6ca]
  41dba3:	cs dec eax
  41dba5:	xchg   edi,eax
  41dba6:	sbb    BYTE PTR [eax-0x61274c1b],ch
  41dbac:	shr    eax,0xc1
  41dbaf:	mov    al,0x9c
  41dbb1:	(bad)  
  41dbb2:	xlat   BYTE PTR ds:[ebx]
  41dbb3:	dec    eax
  41dbb4:	mov    edx,0xb55c4b85
  41dbb9:	push   es
  41dbba:	cmp    bl,BYTE PTR [edx]
  41dbbc:	pop    ebx
  41dbbd:	sub    al,0xdb
  41dbbf:	out    0x45,al
  41dbc1:	fldenv [ecx]
  41dbc4:	push   ecx
  41dbc5:	mul    BYTE PTR [eax-0x65a53ff5]
  41dbcb:	or     DWORD PTR [edi+edx*4],0xffffff90
  41dbcf:	retf   
  41dbd0:	sub    ebx,DWORD PTR [ecx]
  41dbd2:	xor    al,dl
  41dbd4:	retf   
  41dbd5:	mov    ds:0x6fe2e3fd,eax
  41dbda:	push   esp
  41dbdb:	sbb    eax,0x22ec3b08
  41dbe0:	aaa    
  41dbe1:	stos   DWORD PTR es:[edi],eax
  41dbe2:	pushf  
  41dbe3:	add    ch,BYTE PTR [ecx+0x4d3d3198]
  41dbe9:	push   esi
  41dbea:	scas   al,BYTE PTR es:[edi]
  41dbeb:	in     eax,dx
  41dbec:	in     eax,0xe2
  41dbee:	or     ebp,0xd05be901
  41dbf4:	loopne 0x41dbdf
  41dbf6:	fwait
  41dbf7:	inc    esi
  41dbf8:	or     ecx,DWORD PTR [ebx+0x152e3d52]
  41dbfe:	rcr    ebx,1
  41dc00:	test   al,0x10
  41dc02:	ret    0x533e
  41dc05:	adc    BYTE PTR [esi],ah
  41dc07:	xor    ebp,ecx
  41dc09:	out    dx,eax
  41dc0a:	xchg   esi,eax
  41dc0b:	push   ebp
  41dc0c:	xlat   BYTE PTR ds:[ebx]
  41dc0d:	xor    ecx,DWORD PTR [edi+0x7a60eb99]
  41dc13:	pop    ebp
  41dc14:	pop    esp
  41dc15:	in     al,0x82
  41dc17:	xchg   DWORD PTR [ecx-0x509292ec],esi
  41dc1d:	xchg   ebp,eax
  41dc1e:	jo     0xe065e509
  41dc24:	xchg   edi,eax
  41dc25:	adc    bl,dl
  41dc27:	jl     0x41dc6e
  41dc29:	xchg   ebp,eax
  41dc2a:	ss jo  0x41dc6d
  41dc2d:	ret    
  41dc2e:	retf   
  41dc2f:	jns    0x41dca8
  41dc31:	pop    es
  41dc32:	pusha  
  41dc33:	xor    BYTE PTR [edx-0x53],dh
  41dc36:	sub    ah,BYTE PTR [ebx]
  41dc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc39:	push   edx
  41dc3a:	out    dx,al
  41dc3b:	cmc    
  41dc3c:	and    ebx,DWORD PTR [edi+0x77]
  41dc3f:	adc    ah,BYTE PTR [esi]
  41dc41:	sbb    bh,BYTE PTR [ecx+0xf57936]
	...
  41dc4f:	add    BYTE PTR [eax],al
  41dc51:	add    BYTE PTR [ebp-0x15b01f1],bl
  41dc57:	cmc    
  41dc58:	fistp  QWORD PTR [edi]
  41dc5a:	stc    
  41dc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc5c:	mov    bl,0x6e
  41dc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc5f:	sbb    DWORD PTR [eax],0x48
  41dc62:	rcl    BYTE PTR [edx+0x1],cl
  41dc65:	add    ah,cl
  41dc67:	add    al,BYTE PTR [eax]
  41dc69:	add    BYTE PTR [ecx],dh
  41dc6b:	inc    esp
  41dc6c:	mov    al,0x81
  41dc6e:	push   ss
  41dc6f:	pop    edx
  41dc70:	ja     0x41dc3d
  41dc72:	adc    ch,BYTE PTR [esi]
  41dc74:	pop    eax
  41dc75:	jg     0x41dc10
  41dc77:	out    dx,eax
  41dc78:	mov    cl,0x65
  41dc7a:	or     eax,0x4e4e38c9
  41dc7f:	stc    
  41dc80:	fs ret 0xa5c1
  41dc84:	fidivr WORD PTR [ebx]
  41dc86:	mov    bl,0xb1
  41dc88:	sub    eax,0x27a79ce9
  41dc8d:	fisub  DWORD PTR [edi-0x4571e9fb]
  41dc93:	in     al,0x1c
  41dc95:	inc    eax
  41dc96:	aam    0xc2
  41dc98:	bnd call 0xdfd6af94
  41dc9e:	adc    esi,esi
  41dca0:	adc    al,0x93
  41dca2:	in     al,dx
  41dca3:	add    esp,DWORD PTR [eax]
  41dca5:	inc    esp
  41dca6:	push   0x38
  41dca8:	jns    0x41dc85
  41dcaa:	fimul  DWORD PTR [eax+0x5b13f525]
  41dcb0:	ins    BYTE PTR es:[edi],dx
  41dcb1:	(bad)  
  41dcb2:	jnp    0x41dd1d
  41dcb4:	fisub  WORD PTR [ecx]
  41dcb6:	idiv   BYTE PTR [esi-0x970abc1]
  41dcbc:	out    0x2f,eax
  41dcbe:	and    BYTE PTR [ebp+0x61],cl
  41dcc1:	mov    ch,0x72
  41dcc3:	pop    ecx
  41dcc4:	push   ebx
  41dcc5:	fcomp  DWORD PTR [ecx-0x55]
  41dcc8:	mov    ebp,0xbcae8aac
  41dccd:	cmp    al,0xde
  41dccf:	mov    edi,0x3c016c60
  41dcd4:	xchg   ebx,eax
  41dcd5:	sub    ecx,DWORD PTR [ebx-0x15d86a88]
  41dcdb:	adc    eax,0x899bba0d
  41dce0:	add    dl,BYTE PTR [ecx-0x12]
  41dce3:	and    al,0x29
  41dce5:	mov    BYTE PTR [ecx+0x13],bl
  41dce8:	xchg   edx,eax
  41dce9:	cmc    
  41dcea:	in     al,dx
  41dceb:	(bad)
  41dcef:	jb     0x41dd31
  41dcf1:	mov    WORD PTR [eax-0x381822dd],ss
  41dcf7:	mov    eax,ds:0xeba78ae7
  41dcfc:	add    ebp,edx
  41dcfe:	add    esi,edx
  41dd00:	xchg   edi,eax
  41dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd02:	xor    al,0x41
  41dd04:	sbb    DWORD PTR [ebx],ebp
  41dd06:	ss dec ebp
  41dd08:	fsubr  QWORD PTR [esi+0x4a9db398]
  41dd0e:	js     0x41dd6e
  41dd10:	hlt    
  41dd11:	mov    al,ds:0xf08f9b91
  41dd16:	mov    al,ds:0x9d3d0cf4
  41dd1b:	inc    edi
  41dd1c:	stos   DWORD PTR es:[edi],eax
  41dd1d:	inc    esp
  41dd1e:	test   BYTE PTR [ebx-0xe],ch
  41dd21:	cmp    eax,0x1c23700e
  41dd26:	imul   ebp,DWORD PTR [edi-0x1c],0x2c
  41dd2a:	xchg   esp,eax
  41dd2b:	push   ss
  41dd2c:	mov    ebx,0xaef639d4
  41dd31:	inc    eax
  41dd32:	jmp    0x41dcd6
  41dd34:	xchg   ebx,eax
  41dd35:	hlt    
  41dd36:	add    ch,ah
  41dd38:	and    ebp,edi
  41dd3a:	xchg   edi,eax
  41dd3b:	push   es
  41dd3c:	dec    eax
  41dd3d:	xor    al,0xaf
  41dd3f:	mov    esp,DWORD PTR [esi]
  41dd41:	jae    0x41ddab
  41dd43:	lods   al,BYTE PTR ds:[esi]
  41dd44:	sti    
  41dd45:	out    dx,eax
  41dd46:	enter  0xf189,0xcb
  41dd4a:	daa    
  41dd4b:	sbb    bh,ch
  41dd4d:	icebp  
  41dd4e:	xchg   edx,ebx
  41dd50:	push   ebx
  41dd51:	popf   
  41dd52:	daa    
  41dd53:	xor    ch,BYTE PTR [eax]
  41dd55:	mov    dh,0x85
  41dd57:	and    edx,edx
  41dd59:	mov    ds:0xcb4780ac,al
  41dd5e:	mov    DWORD PTR [ebx+0x62e0ed20],esp
  41dd64:	enter  0x4a38,0xb6
  41dd68:	cli    
  41dd69:	add    al,0xc0
  41dd6b:	cmp    al,0xc
  41dd6d:	jmp    0xf9dd:0x946bf4b0
  41dd74:	inc    ebx
  41dd75:	xchg   edx,eax
  41dd76:	lods   eax,DWORD PTR ds:[esi]
  41dd77:	xor    ecx,esi
  41dd79:	xchg   ecx,eax
  41dd7a:	inc    edi
  41dd7b:	pop    es
  41dd7c:	(bad)  
  41dd7d:	fdivr  st,st(6)
  41dd7f:	ins    DWORD PTR es:[edi],dx
  41dd80:	push   esp
  41dd81:	loope  0x41ddd7
  41dd83:	inc    edx
  41dd84:	push   ss
  41dd85:	mov    dl,0x29
  41dd87:	scas   eax,DWORD PTR es:[edi]
  41dd88:	inc    ebp
  41dd89:	push   edx
  41dd8a:	call   0x99843cb8
  41dd8f:	imul   esi,DWORD PTR [eax-0x4617f9b],0x6ae621ba
  41dd99:	scas   eax,DWORD PTR es:[edi]
  41dd9a:	shr    BYTE PTR [esi+0x62e0e26b],cl
  41dda0:	ins    DWORD PTR es:[edi],dx
  41dda1:	lods   al,BYTE PTR ds:[esi]
  41dda2:	popf   
  41dda3:	dec    ebx
  41dda4:	arpl   WORD PTR [ebx+0x284a23f1],ax
  41ddaa:	and    al,0x5
  41ddac:	clc    
  41ddad:	pop    eax
  41ddae:	xor    esi,esi
  41ddb0:	retf   
  41ddb1:	sub    eax,0x740a8006
  41ddb6:	(bad)  
  41ddb7:	fisttp WORD PTR [edx+0x9]
  41ddba:	inc    esi
  41ddbb:	cmp    eax,DWORD PTR [eax]
  41ddbd:	loop   0x41dd7e
  41ddbf:	sub    eax,0x969251f6
  41ddc4:	pop    esp
  41ddc5:	xchg   ebx,eax
  41ddc6:	jp     0x41ddf0
  41ddc8:	popa   
  41ddc9:	ret    0x309b
  41ddcc:	push   ebp
  41ddcd:	enter  0xc319,0x5a
  41ddd1:	aas    
  41ddd2:	add    al,0x9f
  41ddd4:	push   ecx
  41ddd5:	ins    DWORD PTR es:[edi],dx
  41ddd6:	mov    ecx,0x16a16c50
  41dddb:	ja     0x41de13
  41dddd:	test   DWORD PTR [edx],edx
  41dddf:	in     eax,dx
  41dde0:	out    dx,eax
  41dde1:	dec    edx
  41dde2:	jle    0x41de5b
  41dde4:	in     al,0x8c
  41dde6:	push   es
  41dde7:	sbb    eax,0x1afa9ce0
  41ddec:	inc    esi
  41dded:	add    BYTE PTR [esi],bl
  41ddef:	test   dl,cl
  41ddf1:	(bad)
  41ddf5:	(bad)  
  41ddf6:	fdiv   QWORD PTR [ebp+0x35]
  41ddf9:	fnsave [edx-0x4d8e02c2]
  41ddff:	cmp    ah,al
  41de01:	inc    ecx
  41de02:	fst    DWORD PTR [edi-0x5a]
  41de05:	sbb    eax,0xb7840bac
  41de0a:	pop    esi
  41de0b:	test   al,cl
  41de0d:	dec    esp
  41de0e:	pop    eax
  41de0f:	dec    ebx
  41de10:	jno    0x41de87
  41de12:	jge    0x41de49
  41de14:	mov    WORD PTR [eax+0x2],gs
  41de17:	scas   eax,DWORD PTR es:[edi]
  41de18:	sub    BYTE PTR [ecx],al
  41de1a:	test   al,0x7
  41de1c:	adc    BYTE PTR [eax],al
  41de1e:	push   cs
  41de1f:	or     eax,0xcf5fa119
  41de24:	xchg   DWORD PTR [ebx+0x0],ebx
  41de27:	pop    ss
  41de28:	in     al,dx
  41de29:	cs push esp
  41de2b:	xchg   esp,eax
  41de2c:	call   FWORD PTR [edi+edi*2+0x196d8482]
  41de33:	dec    edx
  41de34:	push   edi
  41de35:	inc    ebp
  41de36:	xor    edx,esp
  41de38:	mov    al,ds:0x68733c2a
  41de3d:	cmp    BYTE PTR [edx-0x42],ch
  41de40:	rol    dl,cl
  41de42:	cli    
  41de43:	adc    bl,BYTE PTR [ecx]
  41de45:	mov    dl,0x7f
  41de47:	sbb    edx,ebx
  41de49:	pusha  
  41de4a:	loop   0x41de0a
  41de4c:	popf   
  41de4d:	mov    edi,0x28d78afc
  41de52:	pusha  
  41de53:	fdivr  DWORD PTR [ebx]
  41de55:	mov    cl,bh
  41de57:	mov    al,ds:0xad8a88e1
  41de5c:	test   DWORD PTR [edi+0x55],0x603d125d
  41de63:	push   ebp
  41de64:	mov    dh,0xd3
  41de66:	pop    esi
  41de67:	add    al,0xf2
  41de69:	sub    DWORD PTR fs:[ebx+ecx*4-0x11],0x36aa7c87
  41de72:	push   cs
  41de73:	xor    edx,DWORD PTR [ebp+0x51c09903]
  41de79:	mov    ah,0xa1
  41de7b:	and    eax,0xd460924
  41de80:	cs and eax,0xfdcf9a45
  41de86:	mov    ebx,0xb89dc9eb
  41de8b:	daa    
  41de8c:	sub    eax,0x7a19fb2b
  41de91:	dec    eax
  41de92:	lods   al,BYTE PTR ds:[esi]
  41de93:	push   0x247eb8c2
  41de98:	sbb    ecx,ebx
  41de9a:	mov    ecx,ss
  41de9c:	imul   edi,DWORD PTR [eax+0x45],0xa
  41dea0:	jge    0x41dea0
  41dea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea3:	push   0xffffffb1
  41dea5:	mov    al,0x60
  41dea7:	mov    fs,ebx
  41dea9:	das    
  41deaa:	mov    ebp,DWORD PTR [eax]
  41deac:	jp     0x41de76
  41deae:	mov    al,ds:0x555adb25
  41deb3:	ins    WORD PTR es:[edi],dx
  41deb5:	repnz iret 
  41deb7:	mov    DWORD PTR [edi+ebp*4+0x14],ecx
  41debb:	fisub  WORD PTR [ecx-0x64]
  41debe:	shr    al,cl
  41dec0:	push   ds
  41dec1:	cmp    ebp,esi
  41dec3:	inc    edi
  41dec4:	jge    0x41de80
  41dec6:	shr    DWORD PTR [edx],cl
  41dec8:	mov    ah,0x29
  41deca:	xchg   edx,eax
  41decb:	test   DWORD PTR [edx-0x6285a8ac],esi
  41ded1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded2:	pop    ds
  41ded3:	mov    esp,0x767091b3
  41ded8:	sbb    eax,0x89eb0608
  41dedd:	and    ch,bh
  41dedf:	mov    ebp,0xd936ac6
  41dee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee5:	adc    al,0xb9
  41dee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee8:	push   0xffffffc2
  41deea:	xchg   cl,al
  41deec:	les    edi,FWORD PTR [edi]
  41deee:	and    edx,DWORD PTR [ecx-0x67]
  41def1:	mov    ebx,DWORD PTR [edi+edx*2]
  41def4:	es sub eax,0xafeb2d10
  41defa:	dec    esp
  41defb:	add    DWORD PTR [esi],esi
  41defd:	or     al,0x56
  41deff:	and    eax,0x39c2978a
  41df04:	inc    ebp
  41df05:	mov    ds:0x16d4f1b4,al
  41df0a:	sti    
  41df0b:	and    dh,BYTE PTR [eax+0x212db41f]
  41df11:	sub    esi,DWORD PTR [edi]
  41df13:	int    0xc7
  41df15:	ffree  st(1)
  41df17:	test   al,0xcc
  41df19:	mov    ds:0x13f9ab89,eax
  41df1e:	test   DWORD PTR [eax],eax
  41df20:	sbb    ah,cl
  41df22:	hlt    
  41df23:	sub    al,bh
  41df25:	push   edx
  41df26:	sbb    al,BYTE PTR [ecx-0x4c34f67c]
  41df2c:	push   cs
  41df2d:	mov    BYTE PTR [edi-0x64],cl
  41df30:	lea    edi,ds:[eax+0x40]
  41df34:	daa    
  41df35:	sbb    eax,0x0
	...
  41df42:	and    BYTE PTR [esi],dl
  41df44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df45:	lea    esi,[esi+0x25bf29bf]
  41df4b:	lods   eax,DWORD PTR ds:[esi]
  41df4c:	and    dl,al
  41df4e:	push   0x9e59e5f6
  41df53:	push   ebp
  41df54:	add    DWORD PTR [eax],eax
  41df56:	int3   
  41df57:	add    al,BYTE PTR [eax]
  41df59:	add    al,ah
  41df5b:	jl     0x41df7c
  41df5d:	in     eax,0xc9
  41df5f:	push   esi
  41df60:	xchg   ecx,eax
  41df61:	clc    
  41df62:	in     eax,0xcf
  41df64:	mov    gs,WORD PTR [ebp-0x7b]
  41df67:	cld    
  41df68:	ror    ecx,cl
  41df6a:	call   0xed455b4a
  41df6f:	inc    ebp
  41df70:	mov    BYTE PTR [di-0x4544],bl
  41df75:	dec    ebp
  41df76:	jo     0x41df60
  41df78:	pop    ebx
  41df79:	(bad)  
  41df7b:	fdivr  DWORD PTR ds:0x5a05301f
  41df81:	cmp    al,BYTE PTR [ecx+0x34ed6e76]
  41df87:	sbb    al,0x4f
  41df89:	sahf   
  41df8a:	jmp    0xd4466d63
  41df8f:	sbb    BYTE PTR [edx+0x276db2b],bh
  41df95:	jge    0x41df39
  41df97:	fisubr WORD PTR [ecx]
  41df99:	adc    bl,dl
  41df9b:	rcr    BYTE PTR [ebx],0x66
  41df9e:	in     eax,dx
  41df9f:	mov    ecx,0x417acbcb
  41dfa4:	xor    al,0xcb
  41dfa6:	lahf   
  41dfa7:	and    al,0xe9
  41dfa9:	(bad)  
  41dfab:	(bad)  
  41dfac:	(bad)  
  41dfad:	and    eax,0xb71cd390
  41dfb2:	xor    ch,ah
  41dfb4:	mov    eax,ds:0x5856b82f
  41dfb9:	outs   dx,BYTE PTR ds:[esi]
  41dfba:	xchg   BYTE PTR [esi+0x76e4f523],al
  41dfc0:	pop    edx
  41dfc1:	fmul   QWORD PTR [eax+0x2afe14bf]
  41dfc7:	cmp    BYTE PTR [eax],ch
  41dfc9:	cmp    al,0xa4
  41dfcb:	jl     0x41e007
  41dfcd:	mov    ch,0x52
  41dfcf:	pop    edx
  41dfd0:	adc    al,0x74
  41dfd2:	pop    edi
  41dfd3:	mov    ebp,0x1322d148
  41dfd8:	pop    es
  41dfd9:	pop    ss
  41dfda:	mov    bl,0x42
  41dfdc:	(bad)  
  41dfdd:	jns    0x41dfa3
  41dfdf:	inc    esp
  41dfe0:	mov    ds,ebx
  41dfe2:	push   es
  41dfe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe4:	call   0xd799:0x305abd18
  41dfeb:	enter  0xaae0,0x50
  41dfef:	les    ecx,FWORD PTR [edi-0x5f]
  41dff2:	push   0xffffff9d
  41dff4:	ss inc eax
  41dff6:	add    BYTE PTR [edx-0x4c],al
  41dff9:	inc    ebx
  41dffa:	clc    
  41dffb:	add    ch,0x8b
  41dffe:	sub    eax,0xf009e4b5
  41e003:	sub    eax,0x14d1701b
  41e008:	mov    eax,ds:0xc6d1d06d
  41e00d:	cdq    
  41e00e:	push   0x17
  41e010:	mov    ebp,ss
  41e012:	pop    ecx
  41e013:	xor    ecx,ecx
  41e015:	cmp    al,BYTE PTR [edi]
  41e017:	(bad)  
  41e019:	add    ah,BYTE PTR [ecx+0x58955289]
  41e01f:	jl     0x41dfa2
  41e021:	pop    ds
  41e022:	js     0x41e00e
  41e024:	ins    DWORD PTR es:[edi],dx
  41e025:	pop    ecx
  41e026:	aad    0xc8
  41e028:	jle    0x41e02d
  41e02a:	fsubr  QWORD PTR [ecx+0x2eed16cc]
  41e030:	sub    ebp,DWORD PTR [edx+eax*2]
  41e033:	imul   edi,ebx,0x1f94a4fc
  41e039:	retf   0x482e
  41e03c:	xchg   ebx,eax
  41e03d:	mov    eax,ds:0xfcd9f218
  41e042:	xor    eax,0xe06fed33
  41e047:	lods   eax,DWORD PTR ds:[esi]
  41e048:	push   cs
  41e049:	das    
  41e04a:	mov    ebp,0x28dba17e
  41e04f:	cmp    bl,BYTE PTR [ecx+0x5d]
  41e052:	add    BYTE PTR [ebx-0x3d7b91ff],ah
  41e058:	inc    ecx
  41e059:	mov    ecx,0xfa9d31f4
  41e05e:	(bad)  
  41e05f:	lahf   
  41e060:	mov    al,ds:0x53d14372
  41e065:	in     eax,dx
  41e066:	xor    eax,0xf801dce7
  41e06b:	mov    ebx,0x411d42e4
  41e070:	adc    eax,DWORD PTR [ebx]
  41e072:	cmp    DWORD PTR [ecx+eax*1+0x61fa3c36],0xf49c4652
  41e07d:	test   BYTE PTR [ecx+eiz*1+0x17],cl
  41e081:	mov    al,ds:0xc24f33d7
  41e086:	out    dx,al
  41e087:	int3   
  41e088:	mov    bl,0x1f
  41e08a:	push   ebp
  41e08b:	mov    esp,0xecf26977
  41e090:	inc    esp
  41e091:	out    dx,al
  41e092:	xchg   edx,eax
  41e093:	jb     0x41e0b6
  41e095:	imul   ebx,DWORD PTR [edi],0x55
  41e098:	mov    DWORD PTR [esi+0x73],esp
  41e09b:	xlat   BYTE PTR ds:[ebx]
  41e09c:	sub    eax,0x68f08aaa
  41e0a1:	in     al,0x36
  41e0a3:	(bad)  
  41e0a4:	hlt    
  41e0a5:	dec    ebx
  41e0a6:	cli    
  41e0a7:	mov    ds:0x33543d26,eax
  41e0ac:	in     al,0xdf
  41e0ae:	dec    ecx
  41e0af:	jge    0x41e11b
  41e0b1:	inc    ebx
  41e0b2:	stos   DWORD PTR es:[edi],eax
  41e0b3:	nop
  41e0b4:	xor    al,0xb
  41e0b6:	inc    eax
  41e0b7:	stos   DWORD PTR es:[edi],eax
  41e0b8:	ret    
  41e0b9:	stos   DWORD PTR es:[edi],eax
  41e0ba:	icebp  
  41e0bb:	jl     0x41e083
  41e0bd:	lods   al,BYTE PTR ds:[esi]
  41e0be:	pop    esi
  41e0bf:	clc    
  41e0c0:	retf   0xd492
  41e0c3:	dec    edi
  41e0c4:	dec    esi
  41e0c5:	add    edi,DWORD PTR [edx-0x4f9eab2e]
  41e0cb:	shl    DWORD PTR [edx+eiz*8],1
  41e0ce:	lea    ecx,[edx-0x17]
  41e0d1:	fwait
  41e0d2:	(bad)  
  41e0d3:	out    dx,al
  41e0d4:	scas   al,BYTE PTR es:[edi]
  41e0d5:	pop    edx
  41e0d6:	in     al,dx
  41e0d7:	mov    eax,ds:0x8465fdcc
  41e0dc:	mov    ds:0xf56d60e0,eax
  41e0e1:	inc    BYTE PTR [esi+0x8]
  41e0e4:	mov    ebp,0xf8cb711c
  41e0e9:	inc    ebp
  41e0ea:	inc    ebp
  41e0eb:	inc    eax
  41e0ec:	repz pop DWORD PTR [ecx]
  41e0ef:	inc    edi
  41e0f0:	sub    ch,BYTE PTR [eax]
  41e0f2:	adc    esp,DWORD PTR [ebx]
  41e0f4:	mov    eax,ds:0x9807881f
  41e0f9:	sbb    BYTE PTR [ebx+0x3cea6606],ah
  41e0ff:	jns    0x41e0f0
  41e101:	inc    edi
  41e102:	push   esp
  41e103:	xor    BYTE PTR [ebp+0xd],ch
  41e106:	ret    
  41e107:	repz test eax,0xfd8f79d7
  41e10d:	push   ebp
  41e10e:	hlt    
  41e10f:	xor    DWORD PTR [edx-0x34],esi
  41e112:	xchg   ebp,eax
  41e113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e114:	jo     0x41e11d
  41e116:	mov    al,0x4c
  41e118:	cmp    eax,0x3da7b03e
  41e11d:	mov    ds:0x4fa81807,al
  41e122:	arpl   WORD PTR [esi],bp
  41e124:	inc    edx
  41e125:	ins    DWORD PTR es:[edi],dx
  41e126:	data16 cld 
  41e128:	in     al,0x7f
  41e12a:	mov    cl,0x26
  41e12c:	mov    dl,0x41
  41e12e:	das    
  41e12f:	sar    BYTE PTR [esi],1
  41e131:	jmp    0x881821f0
  41e136:	sbb    al,0x1c
  41e138:	sub    dl,dl
  41e13a:	dec    esp
  41e13b:	cli    
  41e13c:	inc    esp
  41e13d:	xlat   BYTE PTR ds:[ebx]
  41e13e:	mov    eax,0x6dfb31f8
  41e143:	or     ecx,edx
  41e145:	xchg   esp,eax
  41e146:	xchg   esi,eax
  41e147:	mov    WORD PTR [edi],es
  41e149:	pop    eax
  41e14a:	lock mov al,ds:0xeedc36a9
  41e150:	rcr    al,0x5b
  41e153:	jecxz  0x41e193
  41e155:	or     cl,BYTE PTR [edx-0x30]
  41e158:	add    al,0x8c
  41e15a:	iret   
  41e15b:	pop    es
  41e15c:	and    cl,BYTE PTR [edi-0x21]
  41e15f:	sti    
  41e160:	add    al,0xa1
  41e162:	in     al,0xe4
  41e164:	dec    esp
  41e165:	sti    
  41e166:	pop    ebx
  41e167:	sti    
  41e168:	jmp    0xdd5304b2
  41e16d:	pop    esp
  41e16e:	sub    al,0xb0
  41e170:	pop    ecx
  41e171:	push   ds
  41e172:	jmp    0x8234:0x72e72c4f
  41e179:	pop    ss
  41e17a:	shr    BYTE PTR [edi],1
  41e17c:	sub    BYTE PTR [esi],dh
  41e17e:	add    BYTE PTR [edi-0x68b48b07],al
  41e184:	mov    cl,0xc8
  41e186:	sar    BYTE PTR [esi+0x7f],cl
  41e189:	sahf   
  41e18a:	add    BYTE PTR [ebx+0x1c],bl
  41e18d:	mov    edi,0xdcad1919
  41e192:	and    ebx,DWORD PTR [ebp+0x77]
  41e195:	int3   
  41e196:	inc    edx
  41e197:	cdq    
  41e198:	push   eax
  41e199:	push   esp
  41e19a:	push   ecx
  41e19b:	or     esp,DWORD PTR [edi+0x799236a5]
  41e1a1:	test   eax,0x6a0622a5
  41e1a6:	jecxz  0x41e1d7
  41e1a8:	fidiv  WORD PTR [edi+0x8]
  41e1ab:	mov    dh,0xa8
  41e1ad:	mov    ds:0x851ddb8e,al
  41e1b2:	sbb    esi,DWORD PTR [ecx]
  41e1b4:	fild   QWORD PTR [bx+di-0x6d82]
  41e1b9:	mov    DWORD PTR [eax+eiz*2],ebp
  41e1bc:	sub    dh,BYTE PTR [edx+0x5baa3768]
  41e1c2:	aaa    
  41e1c3:	sbb    al,0xdd
  41e1c5:	adc    eax,0xdb62ecd7
  41e1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1cb:	into   
  41e1cc:	cwde   
  41e1cd:	push   cs
  41e1ce:	arpl   WORD PTR [edx],cx
  41e1d0:	xchg   edi,eax
  41e1d1:	jnp    0x41e16e
  41e1d3:	cli    
  41e1d4:	adc    BYTE PTR [ebx-0x4],dh
  41e1d7:	mov    ah,0x1c
  41e1d9:	push   ds
  41e1da:	xor    DWORD PTR [edi-0xb3bbf45],eax
  41e1e0:	ss adc al,0xa1
  41e1e3:	sbb    edi,DWORD PTR [ecx-0xf]
  41e1e6:	cdq    
  41e1e7:	xchg   bl,cl
  41e1e9:	mov    ecx,0xb8dd5025
  41e1ee:	jle    0x41e1d6
  41e1f0:	ror    edx,0xbc
  41e1f3:	cmp    BYTE PTR [ecx-0x7c2aecf0],0xf
  41e1fa:	mov    dl,bh
  41e1fc:	mov    dl,0x7d
  41e1fe:	rol    DWORD PTR [edx-0x43155a79],0xf8
  41e205:	inc    ecx
  41e206:	sub    eax,0x2cf481fe
  41e20b:	jb     0x41e1a6
  41e20d:	mov    BYTE PTR [ecx-0x72],bh
  41e210:	cwde   
  41e211:	mov    ds:0x5df01bf5,eax
  41e216:	xchg   esi,eax
  41e217:	mov    eax,ds:0xfdcd32b9
  41e21c:	dec    esp
  41e21d:	cld    
  41e21e:	clc    
  41e21f:	aad    0xb4
  41e221:	mov    ebp,0x4e519ba9
	...
  41e232:	mov    al,0x33
  41e234:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41e23a:	test   DWORD PTR [edi-0x1ce8f342],esi
  41e240:	stc    
  41e241:	fldcw  WORD PTR [edx+0x58]
  41e244:	add    DWORD PTR [eax],eax
  41e246:	int3   
  41e247:	add    al,BYTE PTR [eax]
  41e249:	add    BYTE PTR [esi],ah
  41e24b:	jmp    0x41e267
  41e24d:	dec    edi
  41e24e:	data16 cmp BYTE PTR [esi-0x102dd585],0x71
  41e256:	and    eax,0x3b2745ad
  41e25b:	and    DWORD PTR [edx-0x31d5714a],esp
  41e261:	fwait
  41e262:	adc    eax,0xbced5425
  41e267:	inc    esp
  41e268:	outs   dx,BYTE PTR ds:[esi]
  41e269:	or     DWORD PTR [edi],0x57
  41e26c:	sbb    DWORD PTR [edi+0x5d],eax
  41e26f:	cmp    ah,BYTE PTR [ecx+0x53]
  41e272:	mov    dh,0x2b
  41e274:	mov    bh,0x43
  41e276:	scas   al,BYTE PTR es:[edi]
  41e277:	fcmovne st,st(1)
  41e279:	or     DWORD PTR [eax-0x5f3b6d21],0xf650612
  41e283:	ret    
  41e284:	push   es
  41e285:	les    eax,FWORD PTR [edi+ebx*8-0x5d]
  41e289:	lods   al,BYTE PTR ds:[esi]
  41e28a:	and    eax,edi
  41e28c:	sbb    DWORD PTR [ecx+edi*4],ebp
  41e28f:	add    eax,0x18803fed
  41e294:	add    DWORD PTR [ebx],eax
  41e296:	sub    DWORD PTR [ecx+0x13cb064c],esi
  41e29c:	jo     0x41e2f6
  41e29e:	shl    DWORD PTR [edi+0x10],1
  41e2a1:	dec    edx
  41e2a2:	cmp    al,0x3d
  41e2a4:	sub    BYTE PTR [esi],0x99
  41e2a7:	and    eax,0x75fd8f40
  41e2ac:	js     0x41e2c1
  41e2ae:	jp     0x41e300
  41e2b0:	sbb    eax,0xad539357
  41e2b5:	(bad)  
  41e2b6:	adc    al,0x75
  41e2b8:	inc    ecx
  41e2b9:	add    bh,BYTE PTR [eax-0x4]
  41e2bc:	dec    ebx
  41e2bd:	mov    ds:0x3a541056,eax
  41e2c2:	sbb    eax,DWORD PTR [ebx]
  41e2c4:	mov    ebp,0x7f447671
  41e2c9:	push   edx
  41e2ca:	shl    BYTE PTR [eax+0x65],cl
  41e2cd:	and    bh,dh
  41e2cf:	scas   eax,DWORD PTR es:[edi]
  41e2d0:	ja     0x41e2b0
  41e2d2:	cmp    eax,0xe4213fdf
  41e2d7:	mov    cl,0x1d
  41e2d9:	sub    al,0x3c
  41e2db:	mov    al,ds:0xddb4c83f
  41e2e0:	loop   0x41e32d
  41e2e2:	retf   0x2016
  41e2e5:	popw   ss
  41e2e7:	cli    
  41e2e8:	sub    eax,0xf948a27f
  41e2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ee:	cmc    
  41e2ef:	(bad)  
  41e2f0:	mul    DWORD PTR ds:0xe468e758
  41e2f6:	mov    ah,0x92
  41e2f8:	or     bh,BYTE PTR [ecx-0x6d]
  41e2fb:	sbb    DWORD PTR [edi-0x6d],edx
  41e2fe:	jl     0x41e2fa
  41e300:	inc    eax
  41e301:	cmovle edi,DWORD PTR [ebx+0x27]
  41e305:	sub    esi,DWORD PTR [edi-0x5f98aff6]
  41e30b:	dec    ebx
  41e30c:	jl     0x41e2a1
  41e30e:	rcr    esp,1
  41e310:	cmc    
  41e311:	sub    ch,BYTE PTR es:[edi-0x68]
  41e315:	push   esi
  41e316:	imul   eax,DWORD PTR [edi-0x201e1d4d],0x85e97bec
  41e320:	add    ebx,DWORD PTR [ecx-0x3a]
  41e323:	daa    
  41e324:	or     ecx,DWORD PTR [eax-0x5c]
  41e327:	outs   dx,DWORD PTR ds:[esi]
  41e328:	cmp    al,0x67
  41e32a:	jmp    0x4ba390b2
  41e32f:	fdivp  st(1),st
  41e331:	push   edi
  41e332:	mov    DWORD PTR [esi+0x5],esi
  41e335:	enter  0x23b9,0x3d
  41e339:	fwait
  41e33a:	cmp    bh,BYTE PTR [ebx-0x7751a68f]
  41e340:	mov    ds:0x6d2b22fd,ax
  41e346:	fsub   DWORD PTR [edi]
  41e348:	ror    DWORD PTR [edx],1
  41e34a:	ret    
  41e34b:	pop    ss
  41e34c:	push   edx
  41e34d:	retf   0x4ee5
  41e350:	aaa    
  41e351:	test   al,0x87
  41e353:	mov    BYTE PTR [eax+edi*8],0xbd
  41e357:	or     BYTE PTR [esi],ch
  41e359:	test   edi,edx
  41e35b:	cli    
  41e35c:	cmp    eax,0x5f85bb46
  41e361:	or     dh,BYTE PTR [edi]
  41e363:	mov    cs,WORD PTR [esp+edx*4-0x1ac5541e]
  41e36a:	push   cs
  41e36b:	stos   BYTE PTR es:[edi],al
  41e36c:	addr16 out dx,eax
  41e36e:	mov    edi,0x724164ca
  41e373:	popa   
  41e374:	pop    ebp
  41e375:	add    edx,DWORD PTR [esi]
  41e377:	cdq    
  41e378:	repz es push ecx
  41e37b:	mov    ch,BYTE PTR ds:0x4ecb1356
  41e381:	dec    ecx
  41e382:	jbe    0x41e3ec
  41e384:	in     eax,dx
  41e385:	adc    eax,0x8e046605
  41e38a:	dec    esp
  41e38b:	cld    
  41e38c:	sub    BYTE PTR [ebx+eax*1-0x7b],dl
  41e390:	push   ds
  41e391:	add    edx,DWORD PTR [ecx-0x518d64bb]
  41e397:	iret   
  41e398:	imul   edi,DWORD PTR [ecx],0xffffff84
  41e39b:	retf   0x58ea
  41e39e:	push   ss
  41e39f:	mov    ch,0xf5
  41e3a1:	mov    cs,WORD PTR [edi]
  41e3a3:	mov    BYTE PTR [edx+0x41e411b6],ah
  41e3a9:	ja     0x41e33d
  41e3ab:	hlt    
  41e3ac:	or     ecx,DWORD PTR [edi+0x7bb9bb0d]
  41e3b2:	es int3 
  41e3b4:	out    dx,al
  41e3b5:	mov    ecx,0xa77f2590
  41e3ba:	adc    eax,0xc9e0a16e
  41e3bf:	sub    al,BYTE PTR [ebx+0x26c71201]
  41e3c5:	sahf   
  41e3c6:	das    
  41e3c7:	or     eax,0x74303828
  41e3cc:	sbb    al,0xec
  41e3ce:	fwait
  41e3cf:	dec    edi
  41e3d0:	inc    esp
  41e3d1:	push   esp
  41e3d2:	sahf   
  41e3d3:	les    ebx,FWORD PTR [eax+0x4]
  41e3d6:	pop    eax
  41e3d7:	or     al,BYTE PTR [ebx+0x7e]
  41e3da:	cs jno 0x41e3ba
  41e3dd:	or     al,0xc3
  41e3df:	add    DWORD PTR [esi+edx*1-0x3454e0ca],0xfffffff7
  41e3e7:	arpl   WORD PTR [ecx+0x30c93d79],bx
  41e3ed:	xchg   esp,eax
  41e3ee:	pop    ebp
  41e3ef:	xor    dl,BYTE PTR [eax+eiz*2]
  41e3f2:	hlt    
  41e3f3:	push   esi
  41e3f4:	gs repnz sahf 
  41e3f7:	xor    BYTE PTR [esi+0x15],ch
  41e3fa:	mov    esi,0x79b12923
  41e3ff:	stc    
  41e400:	mov    cl,0xdb
  41e402:	lods   eax,DWORD PTR ds:[esi]
  41e403:	out    0x2b,eax
  41e405:	and    al,0x4c
  41e407:	aam    0x55
  41e409:	hlt    
  41e40a:	inc    ecx
  41e40b:	fadd   QWORD PTR [esi]
  41e40d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e40f:	lahf   
  41e410:	call   0xec34:0x1fdab760
  41e417:	xor    ebx,edx
  41e419:	lock dec ebx
  41e41b:	mov    dh,0x2e
  41e41d:	mov    ecx,0xa799a463
  41e422:	out    0xec,eax
  41e424:	mov    ebp,0xcb415157
  41e429:	cmp    dl,BYTE PTR [ebp-0x71]
  41e42c:	into   
  41e42d:	xor    esp,esi
  41e42f:	inc    esp
  41e430:	xchg   ecx,eax
  41e431:	mov    edx,0xa33ff758
  41e436:	adc    eax,0xf0ce14d6
  41e43b:	js     0x41e488
  41e43d:	mov    cl,0x3b
  41e43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e440:	mov    ah,0x2d
  41e442:	pop    edx
  41e443:	cmc    
  41e444:	test   edi,ebp
  41e446:	mov    al,ds:0x5a927043
  41e44b:	add    DWORD PTR [edx-0x28],0xc
  41e44f:	xor    ebx,DWORD PTR cs:[eax-0x31327210]
  41e456:	imul   edi,DWORD PTR [edi+0x4aa3ce1f],0xcc3bfc75
  41e460:	push   0xe34bf7d4
  41e465:	pop    ebp
  41e466:	outs   dx,DWORD PTR ds:[esi]
  41e467:	lods   al,BYTE PTR ds:[esi]
  41e468:	cwde   
  41e469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e46a:	jne    0x41e4dc
  41e46c:	dec    ebp
  41e46d:	(bad)  
  41e46e:	fwait
  41e46f:	add    bl,BYTE PTR [eax+0x70a7daa7]
  41e475:	xor    DWORD PTR [ebp+0x596053ea],eax
  41e47b:	outs   dx,DWORD PTR ds:[esi]
  41e47c:	add    edx,DWORD PTR [edx+0x48]
  41e47f:	lods   al,BYTE PTR ds:[esi]
  41e480:	enter  0xbe40,0x1b
  41e484:	xchg   esi,eax
  41e485:	xchg   ecx,eax
  41e486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e487:	push   esi
  41e488:	sbb    DWORD PTR [edi],esp
  41e48a:	jecxz  0x41e43c
  41e48c:	sti    
  41e48d:	retf   
  41e48e:	scas   eax,DWORD PTR es:[edi]
  41e48f:	pop    eax
  41e490:	jo     0x41e479
  41e492:	jle    0x41e4f1
  41e494:	dec    esp
  41e495:	ret    0xdd77
  41e498:	daa    
  41e499:	xchg   edi,eax
  41e49a:	aas    
  41e49b:	adc    esi,edx
  41e49d:	lods   eax,DWORD PTR ds:[esi]
  41e49e:	mov    edi,0xbd469be
  41e4a3:	dec    ecx
  41e4a4:	stos   BYTE PTR es:[edi],al
  41e4a5:	sub    eax,DWORD PTR [esi-0x61]
  41e4a8:	dec    edi
  41e4a9:	je     0x41e4a5
  41e4ab:	push   eax
  41e4ac:	jae    0x41e4dc
  41e4ae:	adc    eax,0xe5ffa86f
  41e4b3:	push   edi
  41e4b4:	mov    edi,0x71bf95e
  41e4b9:	fwait
  41e4ba:	(bad)
  41e4be:	and    eax,0x8ccfb6e4
  41e4c3:	xchg   ebp,eax
  41e4c4:	dec    edi
  41e4c5:	pop    esi
  41e4c6:	cs sbb al,0x9b
  41e4c9:	jmp    0x74e47655
  41e4ce:	in     eax,dx
  41e4cf:	imul   esp,DWORD PTR [ebx*8+0x1f0d3a7c],0xffffffdf
  41e4d7:	xchg   ecx,eax
  41e4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d9:	test   DWORD PTR [ebp+0x43],esi
  41e4dc:	ins    BYTE PTR es:[edi],dx
  41e4dd:	and    dh,BYTE PTR [ecx+eax*2]
  41e4e0:	and    edx,esp
  41e4e2:	sub    esi,DWORD PTR [ebx+0x8]
  41e4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e6:	imul   ecx,DWORD PTR cs:[edi],0xca5beef1
  41e4ed:	mov    ss,WORD PTR [eax+0x18]
  41e4f0:	(bad)  
  41e4f1:	push   cs
  41e4f2:	les    ecx,FWORD PTR [edi]
  41e4f4:	fmul   DWORD PTR [ebx-0x58543387]
  41e4fa:	and    al,0x52
  41e4fc:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e4fe:	cli    
  41e4ff:	je     0x41e4b4
  41e501:	jg     0x41e4e4
  41e503:	xlat   BYTE PTR ds:[ebx]
  41e504:	iret   
  41e505:	mov    cl,BYTE PTR [esp+eax*1-0x2b]
  41e509:	dec    edx
  41e50a:	cmp    eax,0xe4506aed
  41e50f:	pop    es
  41e510:	inc    edi
  41e511:	mov    dh,0x94
  41e513:	scas   eax,DWORD PTR es:[edi]
  41e514:	mov    eax,ds:0x9e
	...
  41e521:	add    BYTE PTR [ecx-0x6b36a2],ch
  41e527:	xchg   edi,eax
  41e528:	std    
  41e529:	jg     0x41e535
  41e52b:	in     al,0x99
  41e52d:	pop    ecx
  41e52e:	aam    0x4c
  41e530:	jno    0x41e548
  41e532:	ss pop ebx
  41e534:	add    DWORD PTR [eax],eax
  41e536:	int3   
  41e537:	add    al,BYTE PTR [eax]
  41e539:	add    ch,ah
  41e53b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53c:	in     eax,0xf4
  41e53e:	clc    
  41e53f:	and    DWORD PTR [ecx-0x20],ecx
  41e542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e543:	pop    ds
  41e544:	std    
  41e545:	cmp    DWORD PTR [esi+esi*2],0xd370088c
  41e54c:	fmul   QWORD PTR [edx]
  41e54e:	retf   
  41e54f:	sbb    eax,esp
  41e551:	leave  
  41e552:	cld    
  41e553:	mov    bh,0xaf
  41e555:	stos   DWORD PTR es:[edi],eax
  41e556:	lahf   
  41e557:	mov    al,dh
  41e559:	inc    esi
  41e55a:	and    BYTE PTR [ebp+0x41],0x99
  41e55e:	ret    
  41e55f:	pop    eax
  41e560:	sbb    eax,0xe13007eb
  41e565:	std    
  41e566:	(bad)  
  41e567:	xor    al,0xf6
  41e569:	jge    0x41e5b7
  41e56b:	mov    edi,0x6f4a008e
  41e570:	(bad)  
  41e572:	pusha  
  41e573:	fs dec edx
  41e575:	xchg   edx,esp
  41e577:	dec    ecx
  41e578:	leave  
  41e579:	sbb    al,0x76
  41e57b:	xor    eax,0x152a8b23
  41e580:	imul   eax,DWORD PTR [ebp-0x3c8baa93],0xbeed0553
  41e58a:	mov    eax,ds:0xa2d8969c
  41e58f:	mov    ebp,0xd90578cf
  41e594:	sub    bh,BYTE PTR cs:[edi+0x2b1e2dec]
  41e59b:	jge    0x41e5ae
  41e59d:	sbb    eax,0xe4eed281
  41e5a2:	sub    edx,DWORD PTR [eax+0xc]
  41e5a5:	dec    edx
  41e5a6:	repz xchg ebx,eax
  41e5a8:	fbld   TBYTE PTR [esi-0x7b065436]
  41e5ae:	adc    eax,0xaa4b623d
  41e5b3:	mov    dh,0xd0
  41e5b5:	pop    edx
  41e5b6:	pop    ebx
  41e5b7:	push   cs
  41e5b8:	cmp    eax,0xc7082638
  41e5bd:	pop    edx
  41e5be:	ins    DWORD PTR es:[edi],dx
  41e5bf:	call   0x88057815
  41e5c4:	xor    DWORD PTR [edx+0x54cfb883],eax
  41e5ca:	add    BYTE PTR [edi+0x1ad27b7b],0x3c
  41e5d1:	int    0x8f
  41e5d3:	pop    edi
  41e5d4:	jnp    0x41e5ce
  41e5d6:	popa   
  41e5d7:	pusha  
  41e5d8:	adc    DWORD PTR [ecx+esi*8],ecx
  41e5db:	cs sahf 
  41e5dd:	shl    DWORD PTR [ebx+0x1da69375],1
  41e5e3:	push   cs
  41e5e4:	sbb    dl,BYTE PTR [esi+0x1a5ac9a9]
  41e5ea:	push   ds
  41e5eb:	add    al,0x85
  41e5ed:	pop    esi
  41e5ee:	xchg   edi,eax
  41e5ef:	ss addr16 leave 
  41e5f2:	jns    0x41e60d
  41e5f4:	cmp    ch,ch
  41e5f6:	pusha  
  41e5f7:	mov    eax,ds:0x4ca60c31
  41e5fc:	(bad)  
  41e5fd:	je     0x41e5e6
  41e5ff:	les    edx,FWORD PTR [ecx-0x3633526a]
  41e605:	adc    ecx,DWORD PTR [ecx+edx*8-0x17545a21]
  41e60c:	cli    
  41e60d:	std    
  41e60e:	sub    BYTE PTR [ecx-0x2a],al
  41e611:	stos   DWORD PTR es:[edi],eax
  41e612:	popa   
  41e613:	sbb    al,0xe9
  41e615:	ja     0x41e5c7
  41e617:	mov    ds:0x4de52c36,al
  41e61c:	inc    ebx
  41e61d:	les    edx,FWORD PTR [ebx]
  41e61f:	mov    edi,0xefb646e1
  41e624:	pop    edx
  41e625:	pop    esp
  41e626:	cmp    al,0xa0
  41e628:	in     al,dx
  41e629:	ret    
  41e62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62b:	mov    WORD PTR [edx-0x2a14137c],gs
  41e631:	shl    BYTE PTR [esi+esi*8],1
  41e634:	nop
  41e635:	or     edx,DWORD PTR [ecx]
  41e637:	lock shl DWORD PTR [esi],cl
  41e63a:	loope  0x41e680
  41e63c:	dec    esi
  41e63d:	shl    BYTE PTR [esi+0x2150d810],1
  41e643:	retf   0xfd14
  41e646:	push   eax
  41e647:	imul   ecx,DWORD PTR fs:[ecx+ebx*1],0xfffffff6
  41e64c:	imul   ecx,DWORD PTR [ebp+0x5fe8b629],0xf098d7e9
  41e656:	pop    edx
  41e657:	push   esi
  41e658:	pusha  
  41e659:	arpl   si,dx
  41e65b:	xor    eax,0xd46dde40
  41e660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e661:	int3   
  41e662:	stc    
  41e663:	mov    edi,DWORD PTR [edi-0x1f]
  41e666:	rol    BYTE PTR [edi-0x59058a31],1
  41e66c:	adc    eax,0xe4cfc337
  41e671:	push   esi
  41e672:	sahf   
  41e673:	mov    esp,0xb0eefc8d
  41e678:	scas   al,BYTE PTR es:[edi]
  41e679:	pop    ss
  41e67a:	push   ds
  41e67b:	cld    
  41e67c:	dec    edx
  41e67d:	fwait
  41e67e:	imul   edx,DWORD PTR [ecx-0x3b],0x3d
  41e682:	or     BYTE PTR [edx-0x75be8ae],0xbe
  41e689:	or     ebp,DWORD PTR [edi]
  41e68b:	push   eax
  41e68c:	outs   dx,BYTE PTR ds:[esi]
  41e68d:	fnstenv ds:0x48bf3f71
  41e693:	rcr    DWORD PTR [ecx+edx*4-0x22],cl
  41e697:	jmp    0x991bf6b9
  41e69c:	adc    al,0x0
  41e69e:	out    dx,eax
  41e69f:	stos   BYTE PTR es:[edi],al
  41e6a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a1:	sar    DWORD PTR [ecx+0x7a],0x69
  41e6a5:	(bad)  
  41e6a7:	pop    esi
  41e6a8:	push   esi
  41e6a9:	jmp    0x41e640
  41e6ab:	shl    BYTE PTR [ecx+0x35],0xa0
  41e6af:	sbb    ah,BYTE PTR [esi+0x53f00067]
  41e6b5:	in     eax,0x8f
  41e6b7:	jl     0x41e725
  41e6b9:	jmp    0x41e677
  41e6bb:	push   esp
  41e6bc:	fimul  DWORD PTR [ecx-0x4b]
  41e6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c0:	pusha  
  41e6c1:	(bad)  
  41e6c2:	(bad)  
  41e6c3:	mov    DWORD PTR [eax+0x3e2b9556],eax
  41e6c9:	adc    bl,0xe7
  41e6cc:	les    ecx,FWORD PTR [esi]
  41e6ce:	or     al,0x58
  41e6d0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e6d2:	clc    
  41e6d3:	cld    
  41e6d4:	jmp    0x5a8af23d
  41e6d9:	in     al,dx
  41e6da:	sub    bl,BYTE PTR [ecx+0x7]
  41e6dd:	outs   dx,BYTE PTR ds:[esi]
  41e6de:	aaa    
  41e6df:	daa    
  41e6e0:	ret    
  41e6e1:	pop    esi
  41e6e2:	(bad)  
  41e6e3:	in     al,dx
  41e6e4:	xor    ah,BYTE PTR [esi]
  41e6e6:	mov    WORD PTR [ecx+0x5c],gs
  41e6e9:	sbb    edx,ebp
  41e6eb:	lea    edx,[esi-0x7]
  41e6ee:	mov    ebp,?
  41e6f0:	or     DWORD PTR [ebx-0x1edc1764],edi
  41e6f6:	mov    eax,0x13d0b135
  41e6fb:	sahf   
  41e6fc:	cwde   
  41e6fd:	mov    DWORD PTR [ecx+0x5eabc574],edx
  41e703:	mov    ebx,edi
  41e705:	leave  
  41e706:	ja     0x41e731
  41e708:	test   BYTE PTR [edi+0x2b],al
  41e70b:	xlat   BYTE PTR ds:[ebx]
  41e70c:	xor    BYTE PTR [ebx],0xb
  41e70f:	retf   0x51ac
  41e712:	mov    DWORD PTR [ebx-0x24729738],0x4e7b27a6
  41e71c:	inc    edi
  41e71d:	mov    dh,0x8
  41e71f:	aad    0xfa
  41e721:	sub    ch,BYTE PTR ds:0xe29a53e2
  41e727:	jg     0x41e6e5
  41e729:	clc    
  41e72a:	cmp    al,0x8f
  41e72c:	mov    eax,0x45a46700
  41e731:	sub    eax,0x62c17bb7
  41e736:	sub    dl,cl
  41e738:	jmp    0x41e6f8
  41e73a:	sbb    edx,DWORD PTR [ebx+edi*2-0x51a3d45f]
  41e741:	xor    eax,0xd1a3b362
  41e746:	pop    es
  41e747:	fcomp  QWORD PTR [edi-0x27]
  41e74a:	mov    eax,0x21b59c29
  41e74f:	xchg   ecx,eax
  41e750:	push   ecx
  41e751:	push   ebp
  41e752:	das    
  41e753:	fdivr  DWORD PTR [edx+ebp*4-0x25380bed]
  41e75a:	push   cs
  41e75b:	push   esi
  41e75c:	shl    DWORD PTR [ebx+ebp*8-0x13ae26ba],0x6d
  41e764:	adc    eax,0x1e469c9
  41e769:	push   eax
  41e76a:	stc    
  41e76b:	pop    ss
  41e76c:	out    dx,al
  41e76d:	inc    esp
  41e76e:	in     al,0x90
  41e770:	mov    esi,0x681d6f72
  41e775:	sub    ah,bl
  41e777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e778:	(bad)  
  41e779:	dec    esi
  41e77a:	mov    edi,0x9d7c5c46
  41e77f:	sub    eax,0x74422c37
  41e784:	mov    ebx,0x20713bf0
  41e789:	jns    0x41e7b1
  41e78b:	inc    eax
  41e78c:	cmp    eax,0xf45cef99
  41e791:	adc    al,0x6f
  41e793:	mov    bh,0xb0
  41e795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e796:	retf   0xe89
  41e799:	inc    esp
  41e79a:	loop   0x41e7df
  41e79c:	push   ebx
  41e79d:	dec    edx
  41e79e:	inc    ebp
  41e79f:	mov    ebx,0xf403e96c
  41e7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a5:	xchg   ebp,eax
  41e7a6:	icebp  
  41e7a7:	fs jecxz 0x41e7c5
  41e7aa:	mov    dl,0x7
  41e7ac:	retf   
  41e7ad:	in     al,0xc3
  41e7af:	call   0xba58:0x286372d7
  41e7b6:	mov    ecx,0x761390b0
  41e7bb:	fnstenv [ebp+eax*2-0x4]
  41e7bf:	dec    ebp
  41e7c0:	push   ecx
  41e7c1:	out    dx,eax
  41e7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7c3:	ds pop edx
  41e7c5:	nop
  41e7c6:	daa    
  41e7c7:	retf   0xe475
  41e7ca:	adc    BYTE PTR [ebx-0x3361950],dl
  41e7d0:	mov    edi,0xb2465d98
  41e7d5:	sbb    eax,0xed67e269
  41e7da:	add    esi,DWORD PTR [edi+0x209196df]
  41e7e0:	in     eax,dx
  41e7e1:	push   ds
  41e7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e3:	mov    al,0xf9
  41e7e5:	rol    BYTE PTR [edx],0xd0
  41e7e8:	ss pop ss
  41e7ea:	adc    al,0xc0
  41e7ec:	mov    al,0x35
  41e7ee:	mov    ch,0x78
  41e7f0:	pop    eax
  41e7f1:	fwait
  41e7f2:	push   eax
  41e7f3:	ja     0x41e865
  41e7f5:	mov    esp,0x22a363b1
  41e7fa:	lods   al,BYTE PTR ds:[esi]
  41e7fb:	hlt    
  41e7fc:	mov    ds:0xa75c2d05,eax
  41e801:	cmc    
  41e802:	scas   al,BYTE PTR es:[edi]
  41e803:	sbb    DWORD PTR [eax+0xf9],ebx
	...
  41e811:	add    BYTE PTR [ebx+0x7d7539cf],bh
  41e817:	idiv   edi
  41e819:	iret   
  41e81a:	std    
  41e81b:	mov    ecx,DWORD PTR [esi-0x3fbf04f1]
  41e821:	in     eax,0x2
  41e823:	pop    esi
  41e824:	add    DWORD PTR [eax],eax
  41e826:	int3   
  41e827:	add    al,BYTE PTR [eax]
  41e829:	add    BYTE PTR [eax-0x10e87fd1],ch
  41e82f:	shr    WORD PTR [eax+0x78ff556f],1
  41e836:	push   0xccdb510c
  41e83b:	mov    ah,0x22
  41e83d:	jmp    0x9d1a:0x84e09b2c
  41e844:	scas   eax,DWORD PTR es:[edi]
  41e845:	adc    bh,bh
  41e847:	jnp    0x41e86e
  41e849:	les    esi,FWORD PTR [ebx+ecx*2-0x794c5157]
  41e850:	mov    cl,0x43
  41e852:	ss in  al,dx
  41e854:	inc    ecx
  41e855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e856:	add    DWORD PTR [eax],ebp
  41e858:	inc    esp
  41e859:	sbb    ebp,DWORD PTR [ebp-0x6d]
  41e85c:	add    DWORD PTR [edi+edx*8+0x4ce80bdd],ebp
  41e863:	addr16 sub dh,cl
  41e866:	push   0x82181fab
  41e86b:	jge    0x41e848
  41e86d:	push   0x4d
  41e86f:	lock add DWORD PTR [edi],0xd0b6473f
  41e876:	inc    DWORD PTR [ebx]
  41e878:	push   edx
  41e879:	pop    esi
  41e87a:	mov    ebx,0xf8cec6b9
  41e87f:	(bad)  
  41e880:	mov    bl,0xff
  41e882:	add    al,0xe8
  41e884:	test   ecx,ecx
  41e886:	fmul   QWORD PTR [ebx+0x2d93bf5f]
  41e88c:	mov    dl,0xb3
  41e88e:	push   0x16ba8edc
  41e893:	adc    DWORD PTR [ebx-0x71f48f8b],esi
  41e899:	clc    
  41e89a:	fs pop esp
  41e89c:	and    eax,0xc6456629
  41e8a1:	arpl   WORD PTR [esi+eiz*8],sp
  41e8a4:	stos   BYTE PTR es:[edi],al
  41e8a5:	rcl    BYTE PTR [edi+ebp*2-0x9be6341],1
  41e8ac:	and    ecx,edx
  41e8ae:	mov    ebx,0xb7026c08
  41e8b3:	mov    esi,0x836aac87
  41e8b8:	ja     0x41e86d
  41e8ba:	and    DWORD PTR [edi+0x15],ebp
  41e8bd:	shl    ebx,cl
  41e8bf:	lods   eax,DWORD PTR ds:[esi]
  41e8c0:	cmp    al,0xca
  41e8c2:	pop    ds
  41e8c3:	(bad)
  41e8c7:	stc    
  41e8c8:	mov    ebp,0x854ecedb
  41e8cd:	mov    ?,WORD PTR [ecx-0x71a89b8b]
  41e8d3:	or     esi,ebp
  41e8d5:	pusha  
  41e8d6:	call   FWORD PTR [edi-0x4]
  41e8d9:	adc    BYTE PTR [edx+edi*2+0x40],bh
  41e8dd:	ret    
  41e8de:	mov    eax,ds:0xa3b778b4
  41e8e3:	out    dx,eax
  41e8e4:	retf   
  41e8e5:	arpl   WORD PTR [edi-0x374e5820],bx
  41e8eb:	cdq    
  41e8ec:	mov    dl,0x11
  41e8ee:	push   ecx
  41e8ef:	mov    bh,0x15
  41e8f1:	xchg   ecx,eax
  41e8f2:	mov    DWORD PTR [ecx+0x61f1240d],edx
  41e8f8:	sub    eax,0xf697fee0
  41e8fd:	sbb    eax,0xb26febd1
  41e902:	dec    esp
  41e903:	pop    edx
  41e904:	dec    edx
  41e905:	pop    eax
  41e906:	adc    esp,DWORD PTR [ebp+0x4e]
  41e909:	mov    eax,ds:0x6610f9ad
  41e90e:	xchg   DWORD PTR [ecx-0x79],edx
  41e911:	xchg   ecx,eax
  41e912:	add    edx,esp
  41e914:	call   0x3935c95e
  41e919:	push   eax
  41e91a:	and    BYTE PTR [ebp+0x24bde7f4],0x67
  41e921:	mov    edx,0x8f34b4ad
  41e926:	mov    ecx,0xf7882ccb
  41e92b:	push   eax
  41e92c:	jo     0x41e997
  41e92e:	mov    esi,0x87fc29c3
  41e933:	inc    ebx
  41e934:	in     eax,0xdd
  41e936:	xchg   edi,eax
  41e937:	mov    edi,DWORD PTR [esp+ebp*1-0x77]
  41e93b:	inc    ebx
  41e93c:	mov    ds:0x49bac85,al
  41e941:	and    DWORD PTR [ecx+0x5fea944d],ebx
  41e947:	mov    esp,0xea789803
  41e94c:	enter  0x75fa,0x66
  41e950:	in     al,0x88
  41e952:	adc    eax,0xd4860962
  41e957:	jne    0x41e9d7
  41e959:	push   edi
  41e95a:	push   edi
  41e95b:	std    
  41e95c:	dec    esi
  41e95d:	sbb    BYTE PTR ds:0x40d5b245,dh
  41e963:	rcl    dh,cl
  41e965:	stos   DWORD PTR es:[edi],eax
  41e966:	out    0x8,al
  41e968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e969:	mov    esp,0x37eb1506
  41e96e:	push   ecx
  41e96f:	jo     0x41e91b
  41e971:	je     0x41e988
  41e973:	cmp    al,0x54
  41e975:	mov    edi,DWORD PTR [esi+0x1d]
  41e978:	pop    ebp
  41e979:	push   0xf2181d7e
  41e97e:	mov    ecx,0xe7464736
  41e983:	loope  0x41e923
  41e985:	imul   ebp,DWORD PTR [esi+edx*4-0x5f88b0dc],0x27542e47
  41e990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e991:	(bad)  
  41e992:	push   esi
  41e993:	adc    ah,0xfa
  41e996:	push   ebx
  41e997:	shr    BYTE PTR [esi+ebp*4+0x6c],0x8f
  41e99c:	lods   eax,DWORD PTR ds:[esi]
  41e99d:	cmc    
  41e99e:	and    DWORD PTR [edi+0x14d5aa98],0x1981d70d
  41e9a8:	push   es
  41e9a9:	push   esi
  41e9aa:	scas   eax,DWORD PTR es:[edi]
  41e9ab:	jnp    0x41e9d9
  41e9ad:	sbb    BYTE PTR [eax],al
  41e9af:	mov    edi,DWORD PTR [bx+si+0x2101]
  41e9b4:	ror    BYTE PTR [esi],cl
  41e9b6:	out    dx,al
  41e9b7:	out    0x2,al
  41e9b9:	nop
  41e9ba:	and    al,0xc1
  41e9bc:	jmp    0x1966b055
  41e9c1:	loopne 0x41e973
  41e9c3:	jg     0x41ea0f
  41e9c5:	or     al,0x16
  41e9c7:	ficom  DWORD PTR [eax-0x6e]
  41e9ca:	repnz fistp QWORD PTR [ecx]
  41e9cd:	mov    ebp,0xfe3a9afa
  41e9d2:	loope  0x41e986
  41e9d4:	(bad)  
  41e9d5:	adc    BYTE PTR [edx-0x49],ch
  41e9d8:	jl     0x41e9fe
  41e9da:	inc    ebp
  41e9db:	or     al,0x26
  41e9dd:	xchg   ebx,eax
  41e9de:	jo     0x41e999
  41e9e0:	jmp    0x41e969
  41e9e2:	imul   edx,DWORD PTR [eax+0x26],0x10
  41e9e6:	rcr    DWORD PTR ds:0x79df1241,0x45
  41e9ed:	mov    ah,0x7d
  41e9ef:	fucom  st(1)
  41e9f1:	add    dh,dh
  41e9f3:	in     al,dx
  41e9f4:	dec    ebp
  41e9f5:	test   BYTE PTR [eax-0x26c5b326],al
  41e9fb:	add    esi,DWORD PTR [edx-0x2352bfac]
  41ea01:	pop    esp
  41ea02:	sub    al,BYTE PTR [ebx+edx*2+0x35]
  41ea06:	scas   eax,DWORD PTR es:[edi]
  41ea07:	aam    0xb7
  41ea09:	(bad)  
  41ea0a:	xchg   esp,eax
  41ea0b:	dec    edx
  41ea0c:	xchg   edx,eax
  41ea0d:	adc    DWORD PTR [esi+0x21f858fd],0xa0342f8d
  41ea17:	sub    edx,edi
  41ea19:	mov    BYTE PTR [edi-0x34ed8a35],bl
  41ea1f:	sbb    al,0x50
  41ea21:	xchg   BYTE PTR [eax],ah
  41ea23:	mov    ecx,0x34740f06
  41ea28:	jmp    0x41e9b4
  41ea2a:	or     esi,DWORD PTR [esi-0x13]
  41ea2d:	xchg   ah,cl
  41ea2f:	sbb    ecx,DWORD PTR [edi]
  41ea31:	leave  
  41ea32:	enter  0x896a,0x6b
  41ea36:	(bad)  [edx+0x72434c86]
  41ea3c:	pop    edi
  41ea3d:	mov    ecx,ebx
  41ea3f:	sbb    BYTE PTR [eax-0x6e0cd071],ah
  41ea45:	push   ebx
  41ea46:	lods   al,BYTE PTR ds:[esi]
  41ea47:	fucomi st,st(1)
  41ea49:	xchg   esp,eax
  41ea4a:	gs mov dh,dh
  41ea4d:	lea    ecx,[edx-0x75b080d5]
  41ea53:	push   es
  41ea54:	cmp    DWORD PTR [ecx+0x1099c373],0xfffffff2
  41ea5b:	and    DWORD PTR [edi-0x30],esp
  41ea5e:	fistp  QWORD PTR [edx-0x503f1ffd]
  41ea64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea65:	imul   ebx,DWORD PTR [eax-0x3f9a0159],0x5f
  41ea6c:	cmc    
  41ea6d:	sti    
  41ea6e:	fst    QWORD PTR [ebp-0x48fd077e]
  41ea74:	fcmovbe st,st(1)
  41ea76:	pop    esp
  41ea77:	shl    ah,1
  41ea79:	aad    0x24
  41ea7b:	mov    dh,0x39
  41ea7d:	xchg   esp,eax
  41ea7e:	ror    DWORD PTR [esi+0x7ab79b7d],cl
  41ea84:	mov    es,WORD PTR [ebx]
  41ea86:	or     DWORD PTR [esi+0x54c94b2],esp
  41ea8c:	or     al,0x9c
  41ea8e:	repnz mov ch,0xc
  41ea91:	out    dx,eax
  41ea92:	pop    ecx
  41ea93:	ret    0x72d0
  41ea96:	xor    al,0xab
  41ea98:	sub    al,0x5f
  41ea9a:	add    edi,DWORD PTR [edx]
  41ea9c:	test   bl,0xdd
  41ea9f:	pushf  
  41eaa0:	imul   ebx,eax,0x56
  41eaa3:	(bad)  
  41eaa5:	dec    edi
  41eaa6:	data16 mov bl,0x3d
  41eaa9:	fdivr  QWORD PTR [eax]
  41eaab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaac:	sbb    ebp,DWORD PTR [eax-0x273698cb]
  41eab2:	dec    edx
  41eab3:	mov    al,0x52
  41eab5:	and    bh,BYTE PTR [edi+0x49]
  41eab8:	mov    bl,0xd2
  41eaba:	and    eax,0x9e1895bf
  41eabf:	and    BYTE PTR [eax+0x5972ecc5],0x88
  41eac6:	inc    edi
  41eac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eac8:	pop    ebp
  41eac9:	jl     0x41eb4a
  41eacb:	jne    0x41eaeb
  41eacd:	inc    esi
  41eace:	and    al,dl
  41ead0:	pop    edx
  41ead1:	cmp    al,0x98
  41ead3:	sub    dh,BYTE PTR [edi-0x52]
  41ead6:	popa   
  41ead7:	inc    esp
  41ead8:	adc    dl,bl
  41eada:	mov    eax,DWORD PTR [ebx-0x10553078]
  41eae0:	int3   
  41eae1:	jmp    0x41eb1c
  41eae3:	cld    
  41eae4:	fimul  DWORD PTR [edi-0x2c]
  41eae7:	je     0x41ea7d
  41eae9:	dec    eax
  41eaea:	cld    
  41eaeb:	(bad)  
  41eaec:	jp     0x41eaec
  41eaee:	retfw  0xcf3
  41eaf2:	dec    ebp
  41eaf3:	fild   WORD PTR [ecx+0x79]
	...
  41eb02:	out    dx,al
  41eb03:	ret    0x2d9d
  41eb06:	mov    ebp,0x3fc3fe7f
  41eb0b:	out    dx,eax
  41eb0c:	mov    edi,0x91ab6b37
  41eb11:	addr16 into 
  41eb13:	pusha  
  41eb14:	add    DWORD PTR [eax],eax
  41eb16:	int3   
  41eb17:	add    al,BYTE PTR [eax]
  41eb19:	add    BYTE PTR [ebx-0xf],ah
  41eb1c:	inc    edx
  41eb1d:	mov    ebx,0xee01a1f
  41eb22:	rcl    BYTE PTR [eax+0x5a14ea31],1
  41eb28:	adc    eax,0x2128529a
  41eb2d:	xor    bh,BYTE PTR [ecx]
  41eb2f:	bound  ebp,QWORD PTR [ecx-0x4d]
  41eb32:	and    DWORD PTR ds:0xd78c1228,0xffffffa0
  41eb39:	fsubr  st(0),st
  41eb3b:	aad    0xc6
  41eb3d:	sub    eax,0x7e64dc95
  41eb42:	in     eax,dx
  41eb43:	aam    0xd0
  41eb45:	scas   eax,DWORD PTR es:[edi]
  41eb46:	popa   
  41eb47:	mov    dh,0xf5
  41eb49:	aam    0x81
  41eb4b:	pop    esp
  41eb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4d:	jbe    0x41eb25
  41eb4f:	push   esp
  41eb50:	cmp    ebx,DWORD PTR [ecx+ebx*8-0x1acbc4d7]
  41eb57:	pushf  
  41eb58:	mov    ecx,0xd52bcd2e
  41eb5d:	xor    edi,edi
  41eb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb60:	out    dx,al
  41eb61:	gs mov al,0xf4
  41eb64:	mov    cl,0x84
  41eb66:	shr    ebp,1
  41eb68:	cs push es
  41eb6a:	jl     0x41eba9
  41eb6c:	sbb    eax,0xf656a7c9
  41eb71:	shl    DWORD PTR [ebx],0xde
  41eb74:	enter  0x557,0xf5
  41eb78:	lahf   
  41eb79:	arpl   WORD PTR [edx+0x55],dx
  41eb7c:	xchg   ebx,eax
  41eb7d:	xchg   DWORD PTR [ebx],edx
  41eb7f:	rol    DWORD PTR [esi],cl
  41eb81:	ret    
  41eb82:	sti    
  41eb83:	dec    ebx
  41eb84:	jne    0x41ebe5
  41eb86:	loope  0x41ebd0
  41eb88:	or     BYTE PTR [eax],dl
  41eb8a:	fwait
  41eb8b:	daa    
  41eb8c:	pop    eax
  41eb8d:	inc    edx
  41eb8e:	clc    
  41eb8f:	retf   
  41eb90:	xchg   ecx,eax
  41eb91:	test   eax,0x550c2c2d
  41eb96:	jno    0x41ebec
  41eb98:	(bad)  
  41eb99:	push   ecx
  41eb9a:	mov    bh,0x8
  41eb9c:	xor    BYTE PTR [ebx+0x15182375],0x15
  41eba3:	inc    esp
  41eba5:	int3   
  41eba6:	fnstcw WORD PTR [edx]
  41eba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eba9:	dec    edx
  41ebaa:	aad    0xca
  41ebac:	sar    BYTE PTR [edi-0x5f609922],0xb5
  41ebb3:	mov    ebx,0xfb0c724f
  41ebb8:	aaa    
  41ebb9:	push   ebp
  41ebba:	daa    
  41ebbb:	(bad)  
  41ebbc:	repz fistp WORD PTR cs:[edx]
  41ebc0:	mov    esi,0xfdb1b4d9
  41ebc5:	les    edi,FWORD PTR [ebx-0x37]
  41ebc8:	mov    ah,0x2a
  41ebca:	sbb    al,0x11
  41ebcc:	jae    0x41ebe9
  41ebce:	loop   0x41ec40
  41ebd0:	loop   0x41ebd5
  41ebd2:	sbb    edi,DWORD PTR [ebx-0x71d7d4c2]
  41ebd8:	std    
  41ebd9:	xchg   edx,eax
  41ebda:	icebp  
  41ebdb:	mov    edx,0x18edd0ee
  41ebe0:	cld    
  41ebe1:	bswap  esi
  41ebe3:	or     bh,BYTE PTR [ebx-0x77a50061]
  41ebe9:	pusha  
  41ebea:	cmp    DWORD PTR [eax+0x5c],esi
  41ebed:	mov    edx,?
  41ebef:	hlt    
  41ebf0:	mov    al,ds:0x8a0def55
  41ebf5:	add    esi,DWORD PTR [eax-0x5b]
  41ebf8:	jo     0x41eba4
  41ebfa:	nop
  41ebfb:	jo     0x41ec56
  41ebfd:	cmp    dh,BYTE PTR [esi-0x14]
  41ec00:	outs   dx,BYTE PTR ds:[esi]
  41ec01:	(bad)  
  41ec02:	sbb    DWORD PTR [ebx],edx
  41ec04:	std    
  41ec05:	pop    ebx
  41ec06:	or     eax,0x68e842ac
  41ec0b:	inc    esi
  41ec0c:	xchg   esp,eax
  41ec0d:	adc    BYTE PTR [ebx],ah
  41ec0f:	push   esi
  41ec10:	ud0    esi,DWORD PTR [edi+0x45]
  41ec14:	fild   WORD PTR ds:0xa6948686
  41ec1a:	jl     0x41ec29
  41ec1c:	fnstcw WORD PTR [esi+ebx*8+0x3]
  41ec20:	push   ebp
  41ec21:	in     eax,0x3d
  41ec23:	cli    
  41ec24:	xchg   DWORD PTR [ecx-0x3c],esp
  41ec27:	or     eax,0xc1631c0d
  41ec2c:	mov    ch,0x32
  41ec2e:	mov    cs,WORD PTR [eax+eax*1-0x6c]
  41ec32:	es pop edx
  41ec34:	sbb    ebp,esi
  41ec36:	push   ds
  41ec37:	ror    DWORD PTR [edx-0x649c33b8],cl
  41ec3d:	and    al,0x13
  41ec3f:	mov    bh,0x34
  41ec41:	inc    ebp
  41ec42:	jp     0x41ecac
  41ec44:	push   esi
  41ec45:	inc    ebx
  41ec46:	jns    0x41ec68
  41ec48:	mov    dl,BYTE PTR [esi]
  41ec4a:	xchg   ebp,eax
  41ec4b:	(bad)  
  41ec4c:	aam    0x4a
  41ec4e:	and    eax,0x7c0e7d4c
  41ec53:	jmp    0x41ebea
  41ec55:	mov    edx,0x70059f84
  41ec5a:	sub    DWORD PTR [ecx+0x58],eax
  41ec5d:	sub    DWORD PTR [esi+0x1fa98ec5],edi
  41ec63:	les    eax,FWORD PTR [edx+0x5a]
  41ec66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec67:	jecxz  0x41ebf6
  41ec69:	leave  
  41ec6a:	pushf  
  41ec6b:	popa   
  41ec6c:	mov    BYTE PTR ds:[ecx+0x29],ah
  41ec70:	pop    eax
  41ec71:	mov    edi,0x398582ba
  41ec76:	ret    0xe1aa
  41ec79:	jbe    0x41ec65
  41ec7b:	sub    eax,0x193fb1f
  41ec80:	xchg   edi,eax
  41ec81:	xor    al,0x3f
  41ec83:	and    al,0x7
  41ec85:	imul   edi,esp,0x2c
  41ec88:	dec    ebx
  41ec89:	mov    bh,0x50
  41ec8b:	js     0x41ec6a
  41ec8d:	jno    0x41ec97
  41ec8f:	mov    al,ds:0xdf02168f
  41ec94:	mov    eax,ds:0x4a53b77d
  41ec99:	xchg   ebp,eax
  41ec9a:	mov    eax,ds:0xc1d384e2
  41ec9f:	mov    WORD PTR [edx+0x781787ef],?
  41eca5:	xor    eax,ecx
  41eca7:	sub    eax,0xe472d265
  41ecac:	lods   eax,DWORD PTR ds:[esi]
  41ecad:	shl    DWORD PTR [edi+0x2e7bf5bb],0xe4
  41ecb4:	add    BYTE PTR [edx-0x71ced2fe],ah
  41ecba:	ret    0xc37c
  41ecbd:	ja     0x41ec6e
  41ecbf:	es scas eax,DWORD PTR es:[di]
  41ecc2:	or     dh,BYTE PTR [edi-0x52]
  41ecc5:	pop    eax
  41ecc6:	jp     0x41ed1a
  41ecc8:	pusha  
  41ecc9:	inc    edi
  41ecca:	scas   eax,DWORD PTR es:[edi]
  41eccb:	mov    ah,0xc5
  41eccd:	mov    al,ds:0x623c9f4b
  41ecd2:	sub    bh,bh
  41ecd4:	sub    DWORD PTR [eax+0x64],ebp
  41ecd7:	push   0x52a279d0
  41ecdc:	les    esi,FWORD PTR [edx-0x770c9208]
  41ece2:	and    eax,0x3c424613
  41ece7:	inc    eax
  41ece8:	repz inc esp
  41ecea:	pop    esi
  41eceb:	(bad)  
  41ecec:	sbb    al,0x42
  41ecee:	xor    ecx,eax
  41ecf0:	sti    
  41ecf1:	sub    DWORD PTR [edx-0x7d588ac],ebp
  41ecf7:	inc    edi
  41ecf8:	xor    al,dh
  41ecfa:	popa   
  41ecfb:	stos   BYTE PTR es:[edi],al
  41ecfc:	imul   esp,DWORD PTR [edi],0x2c
  41ecff:	ins    BYTE PTR es:[edi],dx
  41ed00:	inc    edx
  41ed01:	(bad)  
  41ed03:	push   edx
  41ed04:	and    ah,dh
  41ed06:	fst    DWORD PTR [esi+ecx*2]
  41ed09:	pusha  
  41ed0a:	rcpps  xmm7,XMMWORD PTR [ebp+0x1c]
  41ed0e:	js     0x41ed79
  41ed10:	inc    ebp
  41ed11:	fyl2x  
  41ed13:	adc    BYTE PTR [eax+0x79],ah
  41ed16:	mov    bh,0x3f
  41ed18:	in     al,dx
  41ed19:	arpl   WORD PTR [ecx],si
  41ed1b:	std    
  41ed1c:	leave  
  41ed1d:	fisttp DWORD PTR [edi+0x41a48246]
  41ed23:	mov    esi,0xd875475c
  41ed28:	inc    ebx
  41ed29:	dec    esp
  41ed2a:	scas   eax,DWORD PTR es:[edi]
  41ed2b:	(bad)  
  41ed2c:	in     eax,dx
  41ed2d:	add    eax,0xa633e4c4
  41ed32:	jno    0x41ecb6
  41ed34:	lods   al,BYTE PTR ds:[esi]
  41ed35:	sbb    al,0x1f
  41ed37:	gs push ds
  41ed39:	pusha  
  41ed3a:	aaa    
  41ed3b:	pop    ss
  41ed3c:	pop    ebp
  41ed3d:	icebp  
  41ed3e:	cs mov esp,0xa2c56dbe
  41ed44:	test   bl,0x85
  41ed47:	push   ebx
  41ed48:	inc    ebp
  41ed49:	pop    ss
  41ed4a:	sub    edx,DWORD PTR ds:0xfe66765
  41ed50:	xor    eax,0x2472e3de
  41ed55:	or     BYTE PTR [edi+0x336d0150],dl
  41ed5b:	outs   dx,BYTE PTR ds:[esi]
  41ed5c:	fscale 
  41ed5e:	aaa    
  41ed5f:	imul   edx,DWORD PTR [ebx+edi*2],0xffffffec
  41ed63:	or     ebp,DWORD PTR [ebp+0x249be2ac]
  41ed69:	inc    esi
  41ed6a:	sbb    esi,esi
  41ed6c:	out    0xd8,al
  41ed6e:	add    eax,edx
  41ed70:	pusha  
  41ed71:	test   cl,bl
  41ed73:	bnd call 0xd40650d9
  41ed79:	mov    cl,0x2a
  41ed7b:	cmp    DWORD PTR [ecx*8+0x792c607f],esi
  41ed82:	push   ds
  41ed83:	mov    ch,0x4c
  41ed85:	mov    bl,0xf5
  41ed87:	xor    BYTE PTR [edi-0x1d],dh
  41ed8a:	test   DWORD PTR [esi-0x53],0x34d34efb
  41ed91:	sub    al,0xef
  41ed93:	inc    eax
  41ed94:	dec    ecx
  41ed95:	dec    ebx
  41ed96:	mov    ah,0x3
  41ed98:	pop    eax
  41ed99:	xor    BYTE PTR [edx],ah
  41ed9b:	jg     0x41edc5
  41ed9d:	mov    esp,0xc533d98e
  41eda2:	ja     0x41ed4d
  41eda4:	stos   DWORD PTR es:[edi],eax
  41eda5:	sub    esi,eax
  41eda7:	pop    ds
  41eda8:	loopne 0x41ede4
  41edaa:	jbe    0x41ed5c
  41edac:	push   esi
  41edad:	mov    ds:0xc97a2103,al
  41edb2:	fwait
  41edb3:	mov    edx,0xfaa47036
  41edb8:	push   esi
  41edb9:	xor    bh,bh
  41edbb:	mov    edx,0x303e9a2b
  41edc0:	xor    dh,BYTE PTR [esi+0x4814ea6f]
  41edc6:	inc    edi
  41edc7:	inc    ebp
  41edc8:	dec    esp
  41edc9:	sahf   
  41edca:	call   0x22f61c0e
  41edcf:	out    dx,eax
  41edd0:	sahf   
  41edd1:	je     0x41edaa
  41edd3:	iret   
  41edd4:	push   ds
  41edd5:	stos   DWORD PTR es:[edi],eax
  41edd6:	jge    0x41edba
  41edd8:	enter  0xe8e6,0xd5
  41eddc:	mov    esi,0xd0b712fc
  41ede1:	mov    ds:0xd5e25727,eax
	...
  41edf2:	push   ebx
  41edf3:	(bad)  
  41edf4:	(bad)  
  41edf5:	push   esi
  41edf6:	(bad)  
  41edf7:	jle    0x41edf4
  41edf9:	xlat   BYTE PTR ds:[ebx]
  41edfa:	outs   dx,DWORD PTR ds:[esi]
  41edfb:	mov    ah,0x77
  41edfd:	call   0x639a:0x818cebba
  41ee04:	add    DWORD PTR [eax],eax
  41ee06:	int3   
  41ee07:	add    al,BYTE PTR [eax]
  41ee09:	add    dh,dh
  41ee0b:	adc    ah,BYTE PTR gs:[edi]
  41ee0e:	add    eax,0x2e4e7218
  41ee13:	int3   
  41ee14:	je     0x41ee49
  41ee16:	and    al,0xb8
  41ee18:	and    cl,BYTE PTR [ebx-0x66901bd8]
  41ee1e:	mov    ch,0x1
  41ee20:	das    
  41ee21:	inc    edi
  41ee22:	mov    eax,0x44da6efa
  41ee27:	push   ebp
  41ee28:	dec    esp
  41ee29:	ss and eax,0xdfbed1d1
  41ee2f:	out    dx,eax
  41ee30:	push   ss
  41ee31:	ret    0x878f
  41ee34:	add    BYTE PTR [edx],al
  41ee36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee37:	jb     0x41eea5
  41ee39:	sub    DWORD PTR ds:0x520eaa02,edx
  41ee3f:	addr16 es push cs
  41ee42:	int    0x8b
  41ee44:	xchg   ebp,eax
  41ee45:	cmp    BYTE PTR [eax],bl
  41ee47:	mov    edi,esp
  41ee49:	pushf  
  41ee4a:	and    al,0x63
  41ee4c:	retf   0x3368
  41ee4f:	daa    
  41ee50:	or     cl,bh
  41ee52:	cmp    ch,bh
  41ee54:	fxtract 
  41ee56:	mov    eax,DWORD PTR [bp+si-0x2ad6]
  41ee5b:	cld    
  41ee5c:	inc    ecx
  41ee5d:	inc    ebp
  41ee5e:	sti    
  41ee5f:	cli    
  41ee60:	retf   
  41ee61:	cmp    edx,esi
  41ee63:	aam    0x7
  41ee65:	sub    edx,DWORD PTR [edi+0x14]
  41ee68:	jmp    0x41eecd
  41ee6a:	push   es
  41ee6b:	loope  0x41ee36
  41ee6d:	sub    al,0x28
  41ee6f:	in     eax,dx
  41ee70:	lea    edi,[ebp-0xb2aae7e]
  41ee76:	aaa    
  41ee77:	adc    cl,cl
  41ee79:	repnz inc ecx
  41ee7b:	ds (bad) 
  41ee7d:	sti    
  41ee7e:	stos   DWORD PTR es:[edi],eax
  41ee7f:	sbb    edi,DWORD PTR [esi]
  41ee81:	iret   
  41ee82:	mov    bh,0x1a
  41ee84:	mov    ds:0x1657fada,eax
  41ee89:	mov    ds:0xcb5beabd,al
  41ee8e:	add    BYTE PTR [ebx],bh
  41ee90:	aam    0x39
  41ee92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee93:	aaa    
  41ee94:	dec    edi
  41ee95:	cld    
  41ee96:	push   edi
  41ee97:	mov    esi,0x56f60ac0
  41ee9c:	imul   ebp,DWORD PTR [edx],0xffffffb5
  41ee9f:	psubb  mm3,QWORD PTR [ebx+0x31]
  41eea3:	jle    0x41eea5
  41eea5:	sahf   
  41eea6:	pop    edx
  41eea7:	cli    
  41eea8:	rcr    BYTE PTR [eax+0x4b8c9bd0],1
  41eeae:	pop    edi
  41eeaf:	dec    edx
  41eeb0:	dec    ebp
  41eeb1:	shr    ebp,0x5e
  41eeb4:	dec    ebx
  41eeb5:	sti    
  41eeb6:	fwait
  41eeb7:	shl    BYTE PTR [ebx],cl
  41eeb9:	pop    edi
  41eeba:	repnz mov edi,0xcc421dee
  41eec0:	not    edx
  41eec2:	or     al,0xc8
  41eec4:	fsubr  DWORD PTR [ebx-0x7a]
  41eec7:	iret   
  41eec8:	cmc    
  41eec9:	adc    BYTE PTR [ebx],dl
  41eecb:	sbb    ebx,DWORD PTR [ebx]
  41eecd:	call   0xc898:0x91571c0f
  41eed4:	sti    
  41eed5:	test   esp,0x1b8cc69c
  41eedb:	or     ebx,DWORD PTR [ebp-0x43fa5b1f]
  41eee1:	and    eax,0x490932c
  41eee6:	push   esi
  41eee7:	jno    0x41eed5
  41eee9:	(bad)  
  41eeea:	pop    edx
  41eeeb:	int3   
  41eeec:	inc    eax
  41eeed:	cld    
  41eeee:	mov    ch,0xcc
  41eef0:	mov    DWORD PTR [esi+ebx*8+0x2],esi
  41eef4:	ss in  al,0x9
  41eef7:	aaa    
  41eef8:	jnp    0x41eef0
  41eefa:	and    al,0x44
  41eefc:	aaa    
  41eefd:	ret    
  41eefe:	adc    al,dl
  41ef00:	jns    0x41eeec
  41ef02:	add    eax,0x1457b4d2
  41ef07:	fld    DWORD PTR [ebp-0x2952799a]
  41ef0d:	sub    al,0x63
  41ef0f:	xor    BYTE PTR [ecx+0x1c],0x12
  41ef13:	mov    ch,0xa5
  41ef15:	or     al,0xfb
  41ef17:	add    eax,0x8beb6bcd
  41ef1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1d:	cwde   
  41ef1e:	jnp    0x41eed2
  41ef20:	lods   al,BYTE PTR ds:[esi]
  41ef21:	jbe    0x41ef85
  41ef23:	push   cs
  41ef24:	mov    gs,WORD PTR [eax-0x27]
  41ef27:	(bad)  
  41ef28:	push   gs
  41ef2a:	loope  0x41ef31
  41ef2c:	or     dl,BYTE PTR [esi-0x7ea1331d]
  41ef32:	and    eax,0xd5f6689e
  41ef37:	sub    DWORD PTR [ecx-0x124dddb6],esp
  41ef3d:	jns    0x41ef9a
  41ef3f:	adc    ebx,DWORD PTR [esi+0xd9b6770]
  41ef45:	mov    al,ds:0xfadbe5ff
  41ef4a:	xchg   esi,eax
  41ef4b:	push   esp
  41ef4c:	add    eax,0xc8eb1124
  41ef51:	shr    BYTE PTR [edi-0x56],cl
  41ef54:	mov    ?,ecx
  41ef56:	inc    ebp
  41ef57:	fcomi  st,st(3)
  41ef59:	aas    
  41ef5a:	push   ebp
  41ef5b:	jns    0x41ef52
  41ef5d:	daa    
  41ef5e:	inc    esi
  41ef5f:	daa    
  41ef60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef61:	inc    edx
  41ef62:	or     al,0x56
  41ef64:	mov    DWORD PTR [ebx-0x78],esi
  41ef67:	mov    ecx,0x76173171
  41ef6c:	fistp  QWORD PTR [ebx+0x31]
  41ef6f:	imul   edi,DWORD PTR [edx],0x5ce16371
  41ef75:	mov    cl,bh
  41ef77:	outs   dx,BYTE PTR ds:[esi]
  41ef78:	xor    edi,DWORD PTR [ebp+0x51]
  41ef7b:	or     DWORD PTR [eax],0x96d8ae95
  41ef81:	jbe    0x41ef0e
  41ef83:	cld    
  41ef84:	and    al,0x73
  41ef86:	inc    esi
  41ef87:	jmp    0x48aef244
  41ef8c:	push   0x446107a1
  41ef91:	push   ecx
  41ef92:	popa   
  41ef93:	dec    edx
  41ef94:	and    al,0x31
  41ef96:	test   BYTE PTR [eax],bh
  41ef98:	fs push 0xffffffb4
  41ef9b:	ficom  WORD PTR [ebx]
  41ef9d:	inc    eax
  41ef9e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41efa0:	jae    0x41ef74
  41efa2:	imul   edx,DWORD PTR [esi+0x2dfa5f69],0x4e4c0af7
  41efac:	fbstp  TBYTE PTR ds:[eax+ebx*4]
  41efb0:	xor    al,0x7a
  41efb2:	push   esi
  41efb3:	mov    ch,0x7b
  41efb5:	shr    BYTE PTR [esp+edx*2+0x67],1
  41efb9:	inc    ebx
  41efba:	loope  0x41ef86
  41efbc:	setl   BYTE PTR [edx+0x44]
  41efc0:	mov    cl,BYTE PTR [edi+ebp*2+0x7d]
  41efc4:	push   edx
  41efc5:	loope  0x41f019
  41efc7:	mov    edi,0x645e913b
  41efcc:	in     eax,0x5
  41efce:	pop    ds
  41efcf:	les    ebp,FWORD PTR [ebx]
  41efd1:	rol    BYTE PTR [eax+0x6c10cb3e],cl
  41efd7:	push   es
  41efd8:	(bad)
  41efdb:	int    0x27
  41efdd:	mov    al,0x14
  41efdf:	stos   DWORD PTR es:[edi],eax
  41efe0:	pop    edx
  41efe1:	sbb    DWORD PTR [eax+0x8],esi
  41efe4:	dec    esp
  41efe5:	dec    ebp
  41efe6:	mov    al,0x7d
  41efe8:	aad    0xa4
  41efea:	cmp    BYTE PTR [esp+edi*1],cl
  41efed:	jmp    0x708:0x3e31133c
  41eff4:	cmp    al,0x65
  41eff6:	push   ebp
  41eff7:	push   esi
  41eff8:	loopne 0x41ef9f
  41effa:	and    BYTE PTR [edx],dl
  41effc:	xor    eax,0x7b09cb39
  41f001:	mov    di,gs
  41f004:	ret    
  41f005:	sbb    edi,esp
  41f007:	sub    ecx,DWORD PTR [ebp-0x65]
  41f00a:	push   edi
  41f00b:	and    edx,DWORD PTR [ebx-0x57aa6fb0]
  41f011:	adc    DWORD PTR [ebp+0xbb1e0bd],ebp
  41f017:	in     al,0xe1
  41f019:	sub    eax,0x8bf26bad
  41f01e:	in     al,0x9c
  41f020:	xor    BYTE PTR [edi-0x27352308],ch
  41f026:	shr    DWORD PTR [edx-0x9],0x28
  41f02a:	repz jmp 0xe01c:0xd5452c0d
  41f032:	cmp    ebp,DWORD PTR [ebx+eiz*2+0xe497d67]
  41f039:	xlat   BYTE PTR ds:[ebx]
  41f03a:	or     eax,0x75f9dec
  41f03f:	sahf   
  41f040:	outs   dx,DWORD PTR gs:[esi]
  41f042:	and    edx,DWORD PTR [edi-0x71]
  41f045:	addr16 pop ds
  41f047:	imul   esi,esi,0x5b
  41f04a:	pop    es
  41f04b:	outs   dx,DWORD PTR ds:[esi]
  41f04c:	xchg   ebp,eax
  41f04d:	or     bh,BYTE PTR [ebp+0x7c]
  41f050:	xchg   esi,eax
  41f051:	call   0x719ab3c0
  41f056:	ror    BYTE PTR [ebp-0x4d],cl
  41f059:	into   
  41f05a:	shl    BYTE PTR [ebx+eax*2],0xfe
  41f05e:	dec    edx
  41f05f:	push   esp
  41f060:	fld    TBYTE PTR [esi]
  41f062:	aaa    
  41f063:	sti    
  41f064:	sub    ch,BYTE PTR [ecx]
  41f066:	enter  0x449e,0x21
  41f06a:	js     0x41f0e3
  41f06c:	jmp    0x9babaf37
  41f071:	xor    bh,0xbe
  41f074:	fadd   DWORD PTR [ebx+ecx*4-0x71]
  41f078:	popf   
  41f079:	popf   
  41f07a:	inc    eax
  41f07b:	pop    eax
  41f07c:	bound  edi,QWORD PTR [edx+0x4272bff0]
  41f082:	pop    ebp
  41f083:	ret    0x3139
  41f086:	jle    0x41f0b6
  41f088:	or     bl,BYTE PTR [ebx+0x244259a]
  41f08e:	call   0xa18c:0xac56cbef
  41f095:	jg     0x41f0f4
  41f097:	or     DWORD PTR [edi],eax
  41f099:	repz push ebp
  41f09b:	or     eax,0x876cc63f
  41f0a0:	push   ebx
  41f0a1:	pop    esp
  41f0a2:	sbb    bl,BYTE PTR [ebx+0x5f]
  41f0a5:	ficomp DWORD PTR [edx]
  41f0a7:	mov    ecx,0x4f2ede0d
  41f0ac:	cmp    edi,esp
  41f0ae:	sbb    BYTE PTR [edi],al
  41f0b0:	popf   
  41f0b1:	fsub   QWORD PTR [edx-0x60]
  41f0b4:	xrelease mov BYTE PTR [esi+0x29],ch
  41f0b8:	xchg   ecx,eax
  41f0b9:	sbb    DWORD PTR [ebx],edx
  41f0bb:	retf   
  41f0bc:	lods   eax,DWORD PTR ds:[esi]
  41f0bd:	inc    edi
  41f0be:	xchg   ebp,eax
  41f0bf:	cmp    al,0xd2
  41f0c1:	xchg   ecx,eax
  41f0c2:	mov    edi,0xa0ba5d82
  41f0c7:	daa    
  41f0c8:	(bad)  
  41f0c9:	mov    eax,ds:0x35ff74d2
  41f0ce:	out    dx,eax
  41f0cf:	adc    BYTE PTR [ebx+0x56cb0852],bl
  41f0d5:	xor    DWORD PTR [eax],eax
	...
  41f0df:	add    BYTE PTR [eax],al
  41f0e1:	add    BYTE PTR [ecx],dl
  41f0e3:	push   cs
  41f0e4:	or     dl,ch
  41f0e6:	pop    ds
  41f0e7:	out    dx,al
  41f0e8:	repz jmp FWORD PTR [edi-0x5530fbda]
  41f0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f0:	inc    ecx
  41f0f1:	aas    
  41f0f2:	data16 add WORD PTR [eax],ax
  41f0f6:	int3   
  41f0f7:	add    al,BYTE PTR [eax]
  41f0f9:	add    BYTE PTR [edx+0x73241ead],ch
  41f0ff:	fs mov esi,0x5bef6c73
  41f105:	clc    
  41f106:	repz fucomp st(3)
  41f109:	inc    ebp
  41f10a:	jmp    0x690e:0x4c16245f
  41f111:	ret    
  41f112:	dec    edi
  41f113:	pshufw mm3,QWORD PTR [eiz*4-0x40b23a2c],0xf9
  41f11c:	js     0x41f124
  41f11e:	shr    DWORD PTR [edi],1
  41f120:	fnstcw WORD PTR [edx-0x2309bd01]
  41f126:	mov    ds:0x35c18c1d,eax
  41f12b:	out    0xfb,al
  41f12d:	xor    BYTE PTR [ebx-0x54bb833d],al
  41f133:	pop    ecx
  41f134:	sahf   
  41f135:	xchg   edx,eax
  41f136:	inc    eax
  41f137:	sbb    BYTE PTR [eax-0x22541d41],bh
  41f13d:	lock dec ecx
  41f13f:	jb     0x41f0d5
  41f141:	xor    DWORD PTR ds:0x36e6a782,ebp
  41f147:	aas    
  41f148:	mov    eax,0xb30745a3
  41f14d:	imul   esp,ebp,0x5fc8f2d8
  41f153:	cwde   
  41f154:	jmp    0x5fdafec1
  41f159:	call   0xfd3133c0
  41f15e:	fcom   QWORD PTR [ebp-0x5]
  41f161:	out    0x5f,al
  41f163:	sbb    al,0xbb
  41f165:	clc    
  41f166:	ja     0x41f131
  41f168:	ins    BYTE PTR es:[edi],dx
  41f169:	mov    dh,0x3e
  41f16b:	ficom  DWORD PTR [edx]
  41f16d:	iret   
  41f16e:	movsx  eax,BYTE PTR [ecx+0x6]
  41f172:	sub    al,0x13
  41f174:	pop    esp
  41f175:	retf   0xa740
  41f178:	pop    ebp
  41f179:	inc    eax
  41f17a:	je     0x41f191
  41f17c:	inc    eax
  41f17d:	in     eax,0xca
  41f17f:	and    ah,BYTE PTR [esi-0x2a8c28a4]
  41f185:	js     0x41f1cb
  41f187:	ja     0x41f17e
  41f189:	xchg   ecx,eax
  41f18a:	xchg   edx,eax
  41f18b:	in     al,dx
  41f18c:	loop   0x41f169
  41f18e:	add    edi,esi
  41f190:	outs   dx,DWORD PTR ds:[esi]
  41f191:	pushf  
  41f192:	mov    al,0x3c
  41f194:	lods   eax,DWORD PTR ds:[esi]
  41f195:	add    DWORD PTR [esi-0x1b],ebx
  41f198:	sahf   
  41f199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19a:	(bad)  
  41f19b:	in     eax,0xc2
  41f19d:	jl     0x41f12d
  41f19f:	push   0x7654dd6c
  41f1a4:	xor    eax,0xe3365ee8
  41f1a9:	cs sahf 
  41f1ab:	aaa    
  41f1ac:	dec    ebp
  41f1ad:	lods   eax,DWORD PTR ds:[esi]
  41f1ae:	shr    edi,1
  41f1b0:	push   edx
  41f1b1:	jmp    0xafe93b81
  41f1b6:	mov    ch,0x6b
  41f1b8:	xchg   edx,eax
  41f1b9:	jmp    0xce7c8802
  41f1be:	mov    ds:0x4aed09cc,al
  41f1c3:	gs dec edx
  41f1c5:	push   0x3b
  41f1c7:	(bad)  
  41f1c8:	mov    ds:0x668f1272,eax
  41f1cd:	push   ecx
  41f1ce:	jecxz  0x41f23f
  41f1d0:	pop    ds
  41f1d1:	mov    al,ds:0xc05a2670
  41f1d6:	out    dx,eax
  41f1d7:	cmp    al,0xb9
  41f1d9:	jg     0x41f200
  41f1db:	test   DWORD PTR [edi-0x2f],ebx
  41f1de:	xchg   DWORD PTR [eax+0x15],ecx
  41f1e1:	icebp  
  41f1e2:	sub    BYTE PTR [eax],0x8
  41f1e5:	inc    ecx
  41f1e6:	arpl   WORD PTR [edx-0x12],bx
  41f1e9:	jle    0x41f201
  41f1eb:	cdq    
  41f1ec:	pop    eax
  41f1ed:	xchg   ebx,eax
  41f1ee:	xchg   ebp,eax
  41f1ef:	inc    ecx
  41f1f0:	lds    edx,FWORD PTR [ecx*2-0x27184917]
  41f1f7:	push   esp
  41f1f8:	mov    BYTE PTR [edx-0x4d],ah
  41f1fb:	mov    ebx,0x2ad5e8b4
  41f200:	in     al,dx
  41f201:	mov    edx,0x30e8fd5f
  41f206:	das    
  41f207:	repz stc 
  41f209:	jecxz  0x41f260
  41f20b:	mov    eax,DWORD PTR [ebp+0x5f6d7949]
  41f211:	add    edx,DWORD PTR [edx+esi*1+0x585d973c]
  41f218:	jmp    FWORD PTR [edi-0x15973253]
  41f21e:	and    edx,edi
  41f220:	cmp    eax,0xb7679db3
  41f225:	cmp    dh,BYTE PTR [ebx]
  41f227:	adc    bl,BYTE PTR [esp+edi*1]
  41f22a:	jmp    0x5028b608
  41f22f:	pop    edx
  41f230:	mov    al,0x14
  41f232:	and    DWORD PTR [edx+0x57],0xffffff97
  41f236:	(bad)  
  41f237:	sbb    BYTE PTR [eax],bh
  41f239:	mov    esi,0x4b2f07e
  41f23e:	jge    0x41f223
  41f240:	sbb    eax,0x34b9f8c8
  41f245:	dec    eax
  41f246:	add    eax,0xdfcdc4be
  41f24b:	es cmp ebx,esi
  41f24e:	mov    cl,BYTE PTR [ebx]
  41f250:	fiadd  DWORD PTR [edi-0x34]
  41f253:	sbb    eax,0x210ab5ce
  41f258:	in     al,dx
  41f259:	xchg   DWORD PTR [eax],esp
  41f25b:	push   eax
  41f25c:	fadd   DWORD PTR [eax]
  41f25e:	xchg   ebx,eax
  41f25f:	mov    edi,0xf7eb3342
  41f264:	adc    BYTE PTR es:[esi+0x21a93363],ch
  41f26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f26c:	jl     0x41f2c7
  41f26e:	adc    BYTE PTR [ebx+0x33],bl
  41f271:	cmc    
  41f272:	pop    edi
  41f273:	xchg   edi,eax
  41f274:	aaa    
  41f275:	int    0x9b
  41f277:	mov    ebx,0x2d05f15a
  41f27c:	test   DWORD PTR [edi+0x487915ad],ebx
  41f282:	mov    bl,0x15
  41f284:	sbb    ecx,esp
  41f286:	xor    eax,0xae1f14f0
  41f28b:	cmp    al,0x65
  41f28d:	(bad)  
  41f28e:	mov    ch,0x1d
  41f290:	je     0x41f296
  41f292:	stos   DWORD PTR es:[edi],eax
  41f293:	in     al,dx
  41f294:	data16 lahf 
  41f296:	cmp    cl,BYTE PTR [eax+eiz*4+0x46b1e30a]
  41f29d:	jg     0x41f2f0
  41f29f:	out    0xcc,eax
  41f2a1:	arpl   di,bp
  41f2a3:	push   ss
  41f2a4:	shl    DWORD PTR [eax+eiz*2+0x23c8adbc],1
  41f2ab:	rcl    BYTE PTR [esi],0x9
  41f2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2af:	xchg   esp,eax
  41f2b0:	xlat   BYTE PTR ds:[ebx]
  41f2b1:	xchg   ebp,eax
  41f2b2:	xchg   ebp,eax
  41f2b3:	lods   al,BYTE PTR ds:[esi]
  41f2b4:	mov    al,BYTE PTR [eax-0x246de1cd]
  41f2ba:	sti    
  41f2bb:	mov    eax,ds:0x1b684564
  41f2c0:	(bad)  
  41f2c1:	push   edx
  41f2c2:	outs   dx,BYTE PTR ds:[esi]
  41f2c3:	lods   eax,DWORD PTR ds:[esi]
  41f2c4:	push   esp
  41f2c5:	push   ebp
  41f2c6:	aad    0x1f
  41f2c8:	mov    bl,0x69
  41f2ca:	fimul  WORD PTR ds:0x751d2cd3
  41f2d0:	fs popa 
  41f2d2:	mov    esp,0x69c33d00
  41f2d7:	xor    al,0xce
  41f2d9:	mov    ch,0x21
  41f2db:	sbb    eax,0x13a4c5c6
  41f2e0:	pushf  
  41f2e1:	xor    cl,0x66
  41f2e4:	mov    dl,BYTE PTR [edx+0xfd29631]
  41f2ea:	loop   0x41f2c6
  41f2ec:	add    eax,0xbb2e7f2a
  41f2f1:	push   ss
  41f2f2:	xor    eax,0xf5b30c68
  41f2f7:	imul   eax,DWORD PTR [eax-0x103ee24e],0x2b
  41f2fe:	ret    
  41f2ff:	sub    DWORD PTR [ecx-0x1],0xba93b425
  41f306:	sub    bl,BYTE PTR [ebp-0x79]
  41f309:	and    BYTE PTR [esi+0x10d54a50],bl
  41f30f:	sub    DWORD PTR [edi+edx*4-0x75],esi
  41f313:	mov    ds:0x883430ab,eax
  41f318:	in     eax,0x3
  41f31a:	ss xor esp,0x73001cbc
  41f321:	imul   DWORD PTR [edi-0x69]
  41f324:	pop    edx
  41f325:	sub    eax,0xaabb9a98
  41f32a:	and    DWORD PTR [ecx],esp
  41f32c:	sub    dl,bh
  41f32e:	push   edx
  41f32f:	ss aas 
  41f331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f332:	das    
  41f333:	add    eax,0x45b8da9d
  41f338:	sti    
  41f339:	dec    esp
  41f33a:	div    DWORD PTR [eax]
  41f33c:	mov    cl,0xbf
  41f33e:	cdq    
  41f33f:	into   
  41f340:	sbb    ch,BYTE PTR [ecx]
  41f342:	push   ds
  41f343:	push   0xffffffc1
  41f345:	aam    0xfa
  41f347:	xchg   ecx,eax
  41f348:	mov    cl,BYTE PTR [ebx+0x68]
  41f34b:	popa   
  41f34c:	shl    BYTE PTR [ebx],1
  41f34e:	and    ecx,DWORD PTR [eax-0x34]
  41f351:	add    ch,dl
  41f353:	retf   0x2194
  41f356:	(bad)  
  41f357:	xor    BYTE PTR [eax-0x33],ah
  41f35a:	inc    ecx
  41f35b:	sub    al,0xf4
  41f35d:	not    BYTE PTR ds:[ebp+ebx*8+0x400bb1af]
  41f365:	push   0x9a36b38
  41f36a:	jecxz  0x41f34c
  41f36c:	leave  
  41f36d:	pop    edx
  41f36e:	std    
  41f36f:	jns    0x41f3e3
  41f371:	cmp    ecx,DWORD PTR [edx]
  41f373:	cwde   
  41f374:	xchg   ebp,eax
  41f375:	sar    cl,cl
  41f377:	cmp    eax,0x4a382c18
  41f37c:	add    ah,cl
  41f37e:	pop    esp
  41f37f:	retf   0xcc1c
  41f382:	or     cl,ah
  41f384:	pop    ds
  41f385:	add    eax,edi
  41f387:	push   ebp
  41f388:	loopne 0x41f37d
  41f38a:	arpl   WORD PTR [edi-0x1],ax
  41f38d:	es or  esp,eax
  41f390:	dec    esp
  41f391:	inc    ecx
  41f392:	adc    edx,ecx
  41f394:	push   ecx
  41f395:	fstp   DWORD PTR [ebx-0x6]
  41f398:	push   cs
  41f399:	ja     0x41f402
  41f39b:	ror    al,0x28
  41f39e:	dec    ebx
  41f39f:	imul   ebp,DWORD PTR [ebx-0x1e93111f],0xffffff9e
  41f3a6:	mov    ebx,0x8ad741dd
  41f3ab:	pop    esi
  41f3ac:	push   ebx
  41f3ad:	mov    ds:0x47f50d92,al
  41f3b2:	das    
  41f3b3:	cmc    
  41f3b4:	repnz mov bh,0xc8
  41f3b7:	jmp    0xdc1528dc
  41f3bc:	(bad)  
  41f3bd:	retf   0x7e4f
  41f3c0:	xchg   ecx,eax
  41f3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c2:	fdivr  DWORD PTR [ebx+ebx*1]
  41f3c5:	in     eax,dx
	...
  41f3d2:	leave  
  41f3d3:	xchg   esi,eax
  41f3d4:	ins    DWORD PTR es:[edi],dx
  41f3d5:	mov    dh,0x7f
  41f3d7:	(bad)  
  41f3d8:	(bad)  
  41f3da:	aam    0xd9
  41f3dc:	inc    ebx
  41f3dd:	fmul   DWORD PTR [ecx]
  41f3df:	nop
  41f3e0:	inc    esp
  41f3e1:	pop    es
  41f3e2:	xor    ch,BYTE PTR [ecx+0x1]
  41f3e5:	add    ah,cl
  41f3e7:	add    al,BYTE PTR [eax]
  41f3e9:	add    ch,ah
  41f3eb:	dec    ebp
  41f3ec:	xchg   esi,eax
  41f3ed:	jge    0x41f36f
  41f3ef:	stc    
  41f3f0:	dec    ebp
  41f3f1:	iret   
  41f3f2:	push   esp
  41f3f3:	ss mov ebx,0x2a06c1f7
  41f3f9:	(bad)  
  41f3fa:	xor    DWORD PTR [edx-0x5baea673],ecx
  41f400:	out    dx,al
  41f401:	jmp    0x41f3c1
  41f403:	lds    edi,FWORD PTR [ebx]
  41f405:	xchg   edi,eax
  41f406:	ss js  0x41f3e7
  41f409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f40b:	dec    ebp
  41f40c:	sbb    al,0xac
  41f40e:	or     eax,0x9a97bb04
  41f413:	loop   0x41f451
  41f415:	pop    esp
  41f416:	int    0x2d
  41f418:	fbstp  TBYTE PTR [ebp+0x7c]
  41f41b:	jle    0x41f48e
  41f41d:	test   al,0x90
  41f41f:	mov    edi,0xcd34090f
  41f424:	repnz dec edx
  41f426:	ja     0x41f497
  41f428:	jbe    0x41f482
  41f42a:	ror    BYTE PTR [edx-0x59],0xb6
  41f42e:	jl     0x41f443
  41f430:	or     DWORD PTR [edx],esi
  41f432:	je     0x41f450
  41f434:	outs   dx,DWORD PTR ds:[esi]
  41f435:	out    0x80,al
  41f437:	in     eax,0xfa
  41f439:	mov    eax,0xe6fba845
  41f43e:	loop   0x41f42d
  41f440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f441:	(bad)  
  41f442:	sbb    DWORD PTR [ebx],edx
  41f444:	push   cs
  41f445:	jo     0x41f497
  41f447:	sub    DWORD PTR [ecx-0x405ac633],edi
  41f44d:	(bad)  
  41f44e:	sahf   
  41f44f:	push   ebp
  41f450:	pop    eax
  41f451:	stos   BYTE PTR es:[edi],al
  41f452:	into   
  41f453:	in     eax,0x52
  41f455:	pop    ebp
  41f456:	xchg   ebp,eax
  41f457:	mov    WORD PTR [eax-0x7687ac9e],gs
  41f45d:	popw   es
  41f45f:	adc    edi,DWORD PTR [ebx]
  41f461:	repnz in al,dx
  41f463:	sbb    DWORD PTR [esp+edx*1],ebx
  41f466:	jbe    0x41f477
  41f468:	sub    al,0xc8
  41f46a:	push   eax
  41f46b:	mov    dh,0x6d
  41f46d:	cmp    edi,DWORD PTR [ecx]
  41f46f:	mov    ecx,0x6c8a2111
  41f474:	push   ebp
  41f475:	aas    
  41f476:	data16 sub cl,bl
  41f479:	repz shl DWORD PTR [edi+0x412475a3],0xdb
  41f481:	test   eax,0xe37818b6
  41f486:	cli    
  41f487:	mov    eax,0x4503704
  41f48c:	out    0xc8,eax
  41f48e:	call   DWORD PTR [edi+0x3c338eab]
  41f494:	adc    al,0x1a
  41f496:	or     esi,DWORD PTR [ecx]
  41f498:	mov    ds:0xbfd6dc67,eax
  41f49d:	retf   0x57a2
  41f4a0:	cli    
  41f4a1:	sar    DWORD PTR [edi-0x2a],1
  41f4a4:	test   DWORD PTR [ebx],0x63fa2c0f
  41f4aa:	jle    0xaa5a766a
  41f4b0:	je     0x41f52e
  41f4b2:	mov    BYTE PTR [esi+0x2d],bl
  41f4b5:	mov    edi,0x7126c573
  41f4ba:	sar    DWORD PTR [edi-0x14],cl
  41f4bd:	add    ch,BYTE PTR [ebx-0x8f21fef]
  41f4c3:	shl    DWORD PTR [ecx-0x5163ccef],cl
  41f4c9:	clc    
  41f4ca:	pushf  
  41f4cb:	jl     0x41f4b4
  41f4cd:	mov    ds:0x94a63daa,al
  41f4d2:	and    DWORD PTR [edx],ebp
  41f4d4:	or     bh,0x10
  41f4d7:	arpl   cx,cx
  41f4d9:	xlat   BYTE PTR ds:[ebx]
  41f4da:	sbb    dh,BYTE PTR [ecx+ebx*2]
  41f4dd:	test   DWORD PTR [ecx+0x29],eax
  41f4e0:	std    
  41f4e1:	call   DWORD PTR [edi+0x2b44e0b9]
  41f4e7:	mov    ecx,DWORD PTR [ebx+eax*1]
  41f4ea:	xchg   esp,eax
  41f4eb:	inc    eax
  41f4ec:	ins    BYTE PTR es:[edi],dx
  41f4ed:	lods   al,BYTE PTR ds:[esi]
  41f4ee:	rcr    dh,0xf7
  41f4f1:	inc    edi
  41f4f2:	pop    ecx
  41f4f3:	or     BYTE PTR [ebp+ebp*1-0x7f],al
  41f4f7:	cmp    al,0xbb
  41f4f9:	mov    ebx,0x5d712874
  41f4fe:	mov    dl,0x50
  41f500:	bound  ebp,QWORD PTR [ebx]
  41f502:	sbb    al,0x28
  41f504:	xor    bh,BYTE PTR [eax+0x3a2fb781]
  41f50a:	nop    DWORD PTR [ebx]
  41f50d:	sti    
  41f50e:	data16 int3 
  41f510:	dec    edi
  41f511:	out    0xd1,eax
  41f513:	inc    ebx
  41f514:	mov    dh,0x0
  41f516:	loop   0x41f53b
  41f518:	(bad)  
  41f51c:	stos   DWORD PTR es:[edi],eax
  41f51d:	dec    esp
  41f51e:	jbe    0x41f53a
  41f520:	pop    edi
  41f521:	outs   dx,BYTE PTR ds:[esi]
  41f522:	call   0x887f5481
  41f527:	pop    esp
  41f528:	xchg   DWORD PTR [eax+0xdc10fd3],ebp
  41f52e:	push   esp
  41f52f:	and    al,0xb3
  41f531:	xor    bh,BYTE PTR [edi+0x53]
  41f534:	sar    BYTE PTR [ebx-0x23],1
  41f537:	in     al,0x87
  41f539:	(bad)  
  41f53a:	jge    0x41f503
  41f53c:	xchg   ebx,eax
  41f53d:	leave  
  41f53e:	pop    edi
  41f53f:	xor    ch,BYTE PTR [edi-0x205b7bba]
  41f545:	test   al,0x88
  41f547:	add    DWORD PTR [eax+ecx*1-0x2e],esi
  41f54b:	call   0x5a7e41a3
  41f550:	loop   0x41f515
  41f552:	dec    ecx
  41f553:	repz dec esi
  41f555:	jmp    DWORD PTR [edx+0x2cce9c39]
  41f55b:	dec    edx
  41f55c:	lahf   
  41f55d:	call   0x2ebe:0xb7bf98f4
  41f564:	or     ch,bl
  41f566:	mov    edx,fs
  41f568:	leave  
  41f569:	in     al,0x1a
  41f56b:	add    BYTE PTR [ecx+ecx*4+0x73b0454f],cl
  41f572:	or     DWORD PTR [edi+0x58967a81],edx
  41f578:	jl     0x41f596
  41f57a:	mov    al,ds:0x4d4deeaf
  41f57f:	ret    
  41f580:	iret   
  41f581:	xchg   ebp,eax
  41f582:	push   ds
  41f583:	sahf   
  41f584:	add    ebx,ecx
  41f586:	ror    DWORD PTR [esi],1
  41f588:	dec    ebp
  41f589:	stos   BYTE PTR es:[edi],al
  41f58a:	add    dh,dh
  41f58c:	cdq    
  41f58d:	into   
  41f58e:	shl    eax,1
  41f590:	mov    esp,DWORD PTR [eax+0x10]
  41f593:	imul   edi,DWORD PTR [edi+0x5b],0x79c3c7f9
  41f59a:	popf   
  41f59b:	fisttp DWORD PTR [edx]
  41f59d:	fs push ebp
  41f59f:	sub    al,0x9d
  41f5a1:	mov    BYTE PTR [ebx-0x19438f38],ch
  41f5a7:	inc    ecx
  41f5a8:	enter  0x89fe,0x51
  41f5ac:	fs mov ch,0xf9
  41f5af:	jb     0x41f629
  41f5b1:	xchg   esp,eax
  41f5b2:	push   0x592c4c2e
  41f5b7:	mov    al,ds:0x732db1bc
  41f5bc:	arpl   cx,ax
  41f5be:	mov    bl,0xe3
  41f5c0:	xchg   esi,eax
  41f5c1:	cdq    
  41f5c2:	cs mov ah,0x30
  41f5c5:	adc    edx,DWORD PTR [esi]
  41f5c7:	sbb    ebx,DWORD PTR [eax-0x1a]
  41f5ca:	push   eax
  41f5cb:	jmp    0xa60f:0xb40df8d0
  41f5d2:	loopne 0x41f5d5
  41f5d4:	sbb    edx,ebx
  41f5d6:	jp     0x41f5cf
  41f5d8:	push   es
  41f5d9:	mov    ch,0xfb
  41f5db:	or     dh,cl
  41f5dd:	dec    edx
  41f5de:	loopne 0x41f56d
  41f5e0:	jle    0x41f650
  41f5e2:	xchg   ecx,eax
  41f5e3:	xchg   ebp,eax
  41f5e4:	push   ds
  41f5e5:	xor    eax,0xd77ecc17
  41f5ea:	xor    BYTE PTR [ebp+edi*4+0x4046bb3e],dl
  41f5f1:	xor    bh,BYTE PTR [edi+edi*4+0x59]
  41f5f5:	mov    ecx,ss
  41f5f7:	fsubr  DWORD PTR [edi-0x4d237933]
  41f5fd:	or     al,0x25
  41f5ff:	dec    edx
  41f600:	dec    edi
  41f601:	jmp    0x981:0x58143004
  41f608:	int3   
  41f609:	mov    ebx,0x32d64a5a
  41f60e:	lods   eax,DWORD PTR ds:[esi]
  41f60f:	retf   0x1ece
  41f612:	aaa    
  41f613:	sub    DWORD PTR [ecx+0x4a],0x4a7faf1d
  41f61a:	and    al,0xc5
  41f61c:	xor    ah,BYTE PTR [edi]
  41f61e:	add    esp,DWORD PTR [ecx-0x2c2a2a66]
  41f624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f625:	ret    
  41f626:	sub    al,0xc0
  41f628:	or     al,0x8f
  41f62a:	cmp    eax,0xf131b13e
  41f62f:	fwait
  41f630:	enter  0xb957,0xb7
  41f634:	mov    esp,0x35e48b86
  41f639:	dec    esi
  41f63a:	out    0xe1,eax
  41f63c:	xor    ebx,0x98150bb
  41f642:	pusha  
  41f643:	pop    esp
  41f644:	(bad)
  41f647:	jae    0x41f6a5
  41f649:	jo     0x41f6a5
  41f64b:	ja     0x41f65a
  41f64d:	ror    DWORD PTR [ecx],cl
  41f64f:	leave  
  41f650:	std    
  41f651:	iret   
  41f652:	and    DWORD PTR [eax-0xf],0xfcfe4eb3
  41f659:	add    BYTE PTR [ecx],bl
  41f65b:	push   0x5d
  41f65d:	pusha  
  41f65e:	das    
  41f65f:	and    DWORD PTR [ebp+0x7fb86aa0],ebp
  41f665:	inc    ecx
  41f666:	sub    al,BYTE PTR [eax+0x2e9f020]
  41f66c:	jecxz  0x41f6db
  41f66e:	sub    ch,BYTE PTR [edi]
  41f670:	imul   edi,ebp,0xb4795ed
  41f676:	sub    eax,DWORD PTR ds:0xc8f9f7f6
  41f67c:	pusha  
  41f67d:	cmp    DWORD PTR ds:[eax],esp
  41f680:	aaa    
  41f681:	lds    edx,FWORD PTR [ebp+0x4bfdab98]
  41f687:	jecxz  0x41f6d3
  41f689:	rcr    BYTE PTR ds:0x48ef5f0f,1
  41f68f:	imul   ebp,DWORD PTR ds:0x4ce0dfff,0x53
  41f696:	lahf   
  41f697:	daa    
  41f698:	xchg   ebp,eax
  41f699:	inc    esp
  41f69a:	adc    eax,0xbde8e213
  41f69f:	ds popa 
  41f6a1:	xor    eax,0x1762c3d9
  41f6a6:	inc    eax
  41f6a7:	mov    cl,0xa6
  41f6a9:	clc    
  41f6aa:	stc    
  41f6ab:	xor    dh,BYTE PTR [edx+0x795440ff]
  41f6b1:	sbb    BYTE PTR [ebp+0x41991e],al
	...
  41f6bf:	add    BYTE PTR [eax],al
  41f6c1:	add    BYTE PTR [eax-0x11],cl
  41f6c4:	ja     0x41f731
  41f6c6:	idiv   ebx
  41f6c8:	pop    esp
  41f6c9:	out    dx,eax
  41f6ca:	dec    esp
  41f6cb:	mul    BYTE PTR [esi-0x7d]
  41f6ce:	stos   DWORD PTR es:[edi],eax
  41f6cf:	ret    0x3f64
  41f6d2:	(bad)  
  41f6d3:	imul   eax,DWORD PTR [ecx],0x0
  41f6d6:	int3   
  41f6d7:	add    al,BYTE PTR [eax]
  41f6d9:	add    BYTE PTR ds:0x2854fdac,cl
  41f6df:	pop    esp
  41f6e0:	ins    DWORD PTR es:[edi],dx
  41f6e1:	cmc    
  41f6e2:	sub    dh,BYTE PTR [edi+0x5de02d10]
  41f6e8:	mov    bh,0xbc
  41f6ea:	(bad)  
  41f6eb:	cli    
  41f6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ed:	mov    ecx,0xaa92c44e
  41f6f2:	xchg   esp,eax
  41f6f3:	mov    eax,ecx
  41f6f5:	jbe    0x41f6d2
  41f6f7:	into   
  41f6f8:	lds    eax,FWORD PTR [edi-0x33]
  41f6fb:	adc    al,0x6a
  41f6fd:	or     bh,BYTE PTR [eax]
  41f6ff:	sbb    ebp,0x28
  41f702:	addr16 pop eax
  41f704:	clc    
  41f705:	shr    DWORD PTR [ecx],cl
  41f707:	sti    
  41f708:	pop    ds
  41f709:	or     dl,dh
  41f70b:	pop    ebp
  41f70c:	mov    ?,WORD PTR [esi-0x1ccaa2cd]
  41f712:	(bad)
  41f715:	arpl   WORD PTR [ebx+esi*4],bp
  41f718:	sahf   
  41f719:	xchg   edx,eax
  41f71a:	sar    BYTE PTR [ebp-0x58ee7abf],1
  41f720:	mov    esi,0x8450a76b
  41f725:	add    al,0xef
  41f727:	and    BYTE PTR [edi+0x1b7ebaa9],0x83
  41f72e:	pushf  
  41f72f:	mov    ah,0x25
  41f731:	(bad)  
  41f732:	dec    eax
  41f733:	sbb    eax,esp
  41f735:	jne    0x41f7b0
  41f737:	out    dx,eax
  41f738:	mov    ch,0x2d
  41f73a:	rcr    BYTE PTR [ecx],cl
  41f73c:	cmc    
  41f73d:	dec    eax
  41f73e:	sbb    al,bl
  41f740:	add    ch,BYTE PTR [ebp+0xba64d64]
  41f746:	xchg   ecx,eax
  41f747:	jne    0x41f6e5
  41f749:	loopne 0x41f72a
  41f74b:	ror    BYTE PTR [ebx],1
  41f74d:	aaa    
  41f74e:	jle    0x41f711
  41f750:	xor    al,0x42
  41f752:	sub    BYTE PTR [ebx],ah
  41f754:	pop    ss
  41f755:	or     DWORD PTR [eax+0x2511c0e7],edx
  41f75b:	shr    DWORD PTR [ecx+edx*2],1
  41f75e:	xchg   BYTE PTR [ebp-0x364215],ch
  41f764:	jns    0x41f6fb
  41f766:	adc    BYTE PTR [ebx],dl
  41f768:	ins    BYTE PTR es:[edi],dx
  41f769:	inc    ebx
  41f76a:	fnsave [ebp+0x15]
  41f76d:	mov    BYTE PTR [edx],dh
  41f76f:	sbb    al,BYTE PTR [esi+0x51]
  41f772:	stos   BYTE PTR es:[edi],al
  41f773:	test   ecx,ecx
  41f775:	pop    ebx
  41f776:	outs   dx,BYTE PTR ds:[esi]
  41f777:	mov    esp,0x7cd71253
  41f77c:	aad    0xd0
  41f77e:	cmp    al,0x76
  41f780:	xor    edx,DWORD PTR [ecx]
  41f782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f783:	out    0xcc,al
  41f785:	mov    edi,DWORD PTR [ebx+0x30dbf03f]
  41f78b:	lods   al,BYTE PTR ds:[esi]
  41f78c:	shl    BYTE PTR [edx-0x5c],cl
  41f78f:	mov    eax,ds:0x2ca25857
  41f794:	dec    edi
  41f795:	sbb    eax,0x98f9516b
  41f79a:	jp     0x41f734
  41f79c:	xchg   BYTE PTR [edi+edx*1],al
  41f79f:	xchg   edi,eax
  41f7a0:	(bad)  
  41f7a1:	out    0xc7,eax
  41f7a3:	std    
  41f7a4:	bound  eax,QWORD PTR [eax]
  41f7a6:	in     al,0x76
  41f7a8:	in     al,0xc9
  41f7aa:	std    
  41f7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ac:	ror    DWORD PTR [edx+0x26],cl
  41f7af:	cdq    
  41f7b0:	mov    cl,0x88
  41f7b3:	inc    esi
  41f7b4:	sub    eax,0x9d67acb0
  41f7b9:	mov    dl,0x2c
  41f7bb:	fst    DWORD PTR [ebp-0x2e]
  41f7be:	jno    0x41f82b
  41f7c0:	pop    ebp
  41f7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c2:	pop    ebx
  41f7c3:	push   DWORD PTR [ecx+0x43952c6]
  41f7c9:	push   cs
  41f7ca:	xchg   edi,eax
  41f7cb:	jo     0x41f794
  41f7cd:	arpl   WORD PTR [edx+0x4c40453e],dx
  41f7d3:	pop    eax
  41f7d4:	mov    edi,0xe61d8fed
  41f7d9:	xor    DWORD PTR [edi+0xdf5ef7f],edi
  41f7df:	stos   DWORD PTR es:[di],eax
  41f7e1:	pop    edi
  41f7e2:	pop    ss
  41f7e3:	add    bl,0xda
  41f7e6:	bound  esi,QWORD PTR [edi+0x6c300f30]
  41f7ec:	call   0xc6ca:0xba677e37
  41f7f3:	or     eax,0x8f263066
  41f7f8:	mov    BYTE PTR [ecx],dl
  41f7fa:	jmp    0x8235ad13
  41f7ff:	lea    eax,[ebx+0x5a5a18d5]
  41f805:	jo     0x41f82f
  41f807:	aam    0x40
  41f809:	pop    edi
  41f80a:	les    edi,FWORD PTR [ebx+ebx*1]
  41f80d:	push   esi
  41f80e:	test   eax,0x6797c89c
  41f813:	(bad)  [ebx-0x6b9f9380]
  41f819:	jecxz  0x41f88e
  41f81b:	add    al,0xfd
  41f81d:	xor    esi,DWORD PTR [esi]
  41f81f:	cmp    bl,BYTE PTR [esi+ebp*2]
  41f822:	cld    
  41f823:	jp     0x41f7d1
  41f825:	jne    0x41f80b
  41f827:	cmp    BYTE PTR [ebp-0x8],al
  41f82a:	ret    
  41f82b:	push   ds
  41f82c:	adc    BYTE PTR [edi],bl
  41f82e:	mov    edi,cs
  41f830:	das    
  41f831:	call   0x77e1:0x3731ecf6
  41f838:	xchg   esi,eax
  41f839:	push   ebp
  41f83a:	cli    
  41f83b:	mov    edx,0x33caa3ee
  41f840:	shl    DWORD PTR [esi+0x56263a22],1
  41f846:	rol    BYTE PTR [eax-0x65d5d0bc],cl
  41f84c:	mov    dh,0xe1
  41f84e:	sbb    BYTE PTR [ecx+0x5db49620],al
  41f854:	fimul  WORD PTR [ebp-0x6]
  41f857:	call   0x13d8a5f1
  41f85c:	(bad)  
  41f85d:	(bad)  
  41f85e:	xor    eax,0x6f75a579
  41f863:	idiv   esi
  41f865:	dec    edx
  41f866:	sahf   
  41f867:	retf   0x7c46
  41f86a:	adc    BYTE PTR [eax+0x16318903],bl
  41f870:	sub    esi,eax
  41f872:	(bad)  
  41f873:	mov    ebx,0x75782267
  41f878:	xor    al,0x71
  41f87a:	test   eax,0xdbe92f34
  41f87f:	es scas eax,DWORD PTR es:[edi]
  41f881:	mov    bl,0xf5
  41f883:	sbb    eax,0xfcbe9823
  41f888:	inc    ebx
  41f889:	jg     0x41f8b9
  41f88b:	cld    
  41f88c:	gs sub dh,cl
  41f88f:	out    0x28,eax
  41f891:	mov    ch,0xdd
  41f893:	pop    eax
  41f894:	nop
  41f895:	leave  
  41f896:	pop    ebp
  41f897:	jns    0x41f8ee
  41f899:	mov    ebx,0xddf7a180
  41f89e:	dec    edx
  41f89f:	dec    esp
  41f8a0:	arpl   WORD PTR [ecx-0x699ba449],bx
  41f8a6:	std    
  41f8a7:	lods   al,BYTE PTR ds:[esi]
  41f8a8:	jo     0x41f8d4
  41f8aa:	jns    0x41f88e
  41f8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ad:	push   0xffffffae
  41f8af:	imul   edi,ebx,0x6e16b7c9
  41f8b5:	stc    
  41f8b6:	in     eax,dx
  41f8b7:	mov    al,0x38
  41f8b9:	pop    ecx
  41f8ba:	inc    ebp
  41f8bb:	shl    BYTE PTR [ebx+0xa5ddc1b],0x3c
  41f8c2:	mov    ds:0xb1e3ac37,al
  41f8c7:	mov    esp,DWORD PTR [ecx]
  41f8c9:	pushf  
  41f8ca:	pop    edx
  41f8cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8cc:	stc    
  41f8cd:	test   ebp,edx
  41f8cf:	mov    eax,0xa667ba66
  41f8d4:	jmp    0xc32e3ca8
  41f8d9:	pop    ss
  41f8da:	lods   eax,DWORD PTR ds:[esi]
  41f8db:	loopne 0x41f884
  41f8dd:	adc    eax,0x16ecd4a1
  41f8e2:	ficom  DWORD PTR [esi]
  41f8e4:	(bad)  
  41f8e5:	adc    edx,DWORD PTR [ebp+0x5a]
  41f8e8:	push   es
  41f8e9:	test   DWORD PTR [esp+ecx*1],0xbee420a4
  41f8f0:	add    al,0x69
  41f8f2:	or     edx,ecx
  41f8f4:	and    eax,0xcf903dfd
  41f8f9:	push   ebx
  41f8fa:	inc    ecx
  41f8fb:	mov    esp,0xdc323eb1
  41f900:	mov    al,ds:0x2c59bcc4
  41f905:	cmp    DWORD PTR [edx],ebp
  41f907:	dec    ebx
  41f908:	not    DWORD PTR fs:[edx]
  41f90b:	add    esi,DWORD PTR [ebx*2+0x3ab58984]
  41f912:	fiadd  DWORD PTR [esi+0x18]
  41f915:	mov    BYTE PTR [eax+edx*4+0x632b322f],dh
  41f91c:	out    dx,eax
  41f91d:	imul   eax,DWORD PTR [edx],0x5f
  41f920:	repnz push edx
  41f922:	stos   BYTE PTR es:[edi],al
  41f923:	imul   edi,DWORD PTR [esp+ebp*2-0xda68515],0xf794ae49
  41f92e:	jecxz  0x41f8b4
  41f930:	sub    ebx,esi
  41f932:	lea    edx,[ecx-0x3f]
  41f935:	push   es
  41f936:	mov    esp,0xcb7847bd
  41f93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f93d:	pop    ebp
  41f93e:	dec    esi
  41f93f:	mov    bh,BYTE PTR [ebx+0x63]
  41f942:	and    DWORD PTR [edx+0x6fac1507],ebp
  41f948:	popf   
  41f949:	sbb    al,0xf
  41f94b:	xchg   BYTE PTR [edi-0x30],bh
  41f94e:	scas   al,BYTE PTR es:[edi]
  41f94f:	adc    DWORD PTR [eax],edi
  41f951:	cmp    eax,0x5201e492
  41f956:	into   
  41f957:	fcomp  QWORD PTR [ebx]
  41f959:	sub    dl,ch
  41f95b:	lds    edx,FWORD PTR [ebx+esi*4]
  41f95e:	jecxz  0x41f9c3
  41f960:	sar    DWORD PTR ds:0x6cf03fa9,0xe9
  41f967:	test   bh,cl
  41f969:	push   esi
  41f96a:	adc    DWORD PTR [ebx+0x14868556],edi
  41f970:	cmovb  edi,DWORD PTR [eax-0x7e]
  41f974:	ins    BYTE PTR es:[edi],dx
  41f975:	push   ss
  41f976:	setl   BYTE PTR [ebx-0x15e55fea]
  41f97d:	jno    0x41f9a3
  41f97f:	dec    ecx
  41f980:	je     0x41f987
  41f982:	jmp    0x41f953
  41f984:	mov    edx,0xfac1be5e
  41f989:	dec    edx
  41f98a:	inc    esi
  41f98b:	mov    cs,WORD PTR es:[esi+0x46e7b583]
  41f992:	add    cl,BYTE PTR [edx]
  41f994:	dec    edi
  41f995:	dec    ebp
  41f996:	or     eax,0x6c6b7a5e
  41f99b:	jecxz  0x41f966
  41f99d:	pop    ds
  41f99e:	inc    esp
  41f99f:	jle    0x41f9d3
  41f9a1:	bound  esi,QWORD PTR [ebx+0x70]
  41f9a4:	loop   0x41fa1b
	...
  41f9b2:	mov    al,0xe3
  41f9b4:	pop    edx
  41f9b5:	jecxz  0x41fa12
  41f9b7:	sti    
  41f9b8:	mov    ecx,0x72415ff3
  41f9bd:	test   edx,esp
  41f9bf:	in     eax,0xcf
  41f9c1:	mov    bh,0xca
  41f9c3:	outs   dx,BYTE PTR ds:[esi]
  41f9c4:	add    DWORD PTR [eax],eax
  41f9c6:	int3   
  41f9c7:	add    al,BYTE PTR [eax]
  41f9c9:	add    BYTE PTR [eax],dl
  41f9cb:	mov    al,ds:0xe7588347
  41f9d0:	fstp   TBYTE PTR [ecx+0x1a0ce731]
  41f9d6:	add    ebx,DWORD PTR [esi+0x19]
  41f9d9:	pop    esi
  41f9da:	xchg   ebx,eax
  41f9db:	sub    DWORD PTR [edi+0x7bc736e1],eax
  41f9e1:	in     eax,dx
  41f9e2:	and    dh,0x1c
  41f9e5:	fld    st(5)
  41f9e7:	sub    edx,DWORD PTR [ecx+0xafeec79]
  41f9ed:	or     BYTE PTR [edi+0x40f75399],bh
  41f9f3:	push   edi
  41f9f4:	xor    BYTE PTR [ebp+ecx*4+0x58],ah
  41f9f8:	xlat   BYTE PTR ds:[ebx]
  41f9f9:	ror    DWORD PTR [ecx],cl
  41f9fb:	mov    esp,0xfbaf1569
  41fa00:	cmp    eax,0x16e26aba
  41fa05:	mov    bh,0xcb
  41fa07:	loop   0x41fa48
  41fa09:	push   esp
  41fa0a:	call   DWORD PTR [eax-0x63]
  41fa0d:	add    DWORD PTR [ecx+edi*4+0xe],eax
  41fa11:	and    ebp,esp
  41fa13:	inc    edi
  41fa14:	sub    edi,DWORD PTR [ebp+0x33]
  41fa17:	pop    ecx
  41fa18:	dec    edi
  41fa19:	mov    esi,0x26d1215d
  41fa1e:	sub    ebp,edi
  41fa20:	adc    DWORD PTR [ebx],ebp
  41fa22:	nop
  41fa23:	inc    BYTE PTR [edi-0x5b7cb0c5]
  41fa29:	mov    ecx,0xedee92e0
  41fa2e:	dec    eax
  41fa2f:	adc    edx,edx
  41fa31:	xor    al,0xac
  41fa33:	mov    edi,0x27312b9e
  41fa38:	or     al,0x57
  41fa3a:	ins    BYTE PTR es:[edi],dx
  41fa3b:	dec    esp
  41fa3c:	jae    0x41f9f2
  41fa3e:	jmp    0x41fa71
  41fa40:	jle    0x41f9cf
  41fa42:	retf   
  41fa43:	mov    ebx,0x4c54c915
  41fa48:	ror    BYTE PTR [ecx+0x40d52041],1
  41fa4e:	les    eax,FWORD PTR [ebx-0x72]
  41fa51:	cld    
  41fa52:	es shr ch,0x79
  41fa56:	sti    
  41fa57:	int3   
  41fa58:	pop    eax
  41fa59:	jmp    0x41fa34
  41fa5b:	or     eax,0x62cf5e79
  41fa60:	mov    ah,0x5a
  41fa62:	stos   DWORD PTR es:[edi],eax
  41fa63:	push   ebp
  41fa64:	inc    ebx
  41fa65:	cmp    DWORD PTR [eax+ebp*4-0x33],esp
  41fa69:	std    
  41fa6a:	xchg   DWORD PTR [eax],ebx
  41fa6c:	mov    edi,0x4774f272
  41fa71:	jge    0x41fad0
  41fa73:	je     0x41fa3a
  41fa75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa76:	pusha  
  41fa77:	dec    eax
  41fa78:	sub    al,0x24
  41fa7a:	arpl   WORD PTR [edi-0x763f2ce3],bx
  41fa80:	push   eax
  41fa81:	cmp    al,0xed
  41fa83:	jns    0x41fadc
  41fa85:	or     bh,bh
  41fa87:	clc    
  41fa88:	in     al,0xbb
  41fa8a:	and    edi,esi
  41fa8c:	xor    al,0xf9
  41fa8e:	psrlq  mm5,QWORD PTR [edi-0x1f]
  41fa92:	ror    al,cl
  41fa94:	pop    eax
  41fa95:	dec    ebp
  41fa96:	std    
  41fa97:	test   eax,0x5371fdda
  41fa9c:	leave  
  41fa9d:	je     0x41fa97
  41fa9f:	out    0xa,al
  41faa1:	fwait
  41faa2:	jmp    0x44e80311
  41faa7:	mov    al,0xd2
  41faa9:	mov    ecx,0x93650d2e
  41faae:	inc    esp
  41faaf:	aam    0x20
  41fab1:	cdq    
  41fab2:	out    dx,eax
  41fab3:	ret    0xecd4
  41fab6:	fadd   DWORD PTR [ecx]
  41fab8:	push   cs
  41fab9:	outs   dx,BYTE PTR ds:[esi]
  41faba:	fnsave [edx]
  41fabc:	push   0x9e3ffe10
  41fac1:	or     DWORD PTR [edi-0x326f9cb3],edx
  41fac7:	adc    DWORD PTR [edi+0x3caf1ca],ebx
  41facd:	(bad)  
  41facf:	adc    DWORD PTR [ebp-0x63],eax
  41fad2:	fmulp  st(0),st
  41fad4:	xor    DWORD PTR [edx-0x1ce456f0],esp
  41fada:	in     al,dx
  41fadb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadc:	inc    edi
  41fadd:	pop    ds
  41fade:	aad    0xd1
  41fae0:	ds test ah,bl
  41fae3:	ss dec edi
  41fae5:	cmp    edi,0x4
  41fae8:	pop    es
  41fae9:	ins    BYTE PTR es:[edi],dx
  41faea:	and    esi,DWORD PTR [esi]
  41faec:	cmp    eax,0x9eb0ec40
  41faf1:	xchg   esi,eax
  41faf2:	xor    al,0x32
  41faf4:	mov    ?,WORD PTR [ecx]
  41faf6:	std    
  41faf7:	(bad)  
  41faf8:	cmp    eax,0xf94e9fdb
  41fafd:	or     DWORD PTR [edi*8-0x4acc83c2],esi
  41fb04:	sub    DWORD PTR [esi-0x625a7f27],edi
  41fb0a:	or     DWORD PTR [edi-0x7b],esp
  41fb0d:	shr    BYTE PTR [ecx-0x1],0xb3
  41fb11:	mov    eax,0xef247ade
  41fb16:	inc    esp
  41fb17:	cmp    bl,BYTE PTR [ecx+0x63]
  41fb1a:	cwde   
  41fb1b:	retf   
  41fb1c:	test   al,0x73
  41fb1e:	sbb    BYTE PTR ds:0x8a490422,bl
  41fb24:	std    
  41fb25:	mov    bl,0xca
  41fb27:	pop    edx
  41fb28:	push   es
  41fb29:	xchg   ebx,eax
  41fb2a:	sub    BYTE PTR [ebx+ebx*8+0x15],al
  41fb2e:	stos   DWORD PTR es:[edi],eax
  41fb2f:	lock mov DWORD PTR [esi+0x33],ebp
  41fb33:	jle    0x41faeb
  41fb35:	jne    0x41fbb2
  41fb37:	lds    ebp,FWORD PTR [esi]
  41fb39:	neg    DWORD PTR [ecx+0x25]
  41fb3c:	cmp    esi,ebx
  41fb3e:	pop    ds
  41fb3f:	jmp    0x6dc5:0x9f39e1f3
  41fb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb47:	fwait
  41fb48:	cmp    cl,BYTE PTR [ebx+eax*2-0x189b9958]
  41fb4f:	and    eax,0xd9c0efd3
  41fb54:	pushf  
  41fb55:	jg     0x41fb03
  41fb57:	int    0xd0
  41fb59:	pop    ds
  41fb5a:	mov    ecx,0x7f81a88d
  41fb5f:	lahf   
  41fb60:	in     eax,0xfb
  41fb62:	inc    edx
  41fb63:	or     bh,cl
  41fb65:	das    
  41fb66:	loope  0x41fb18
  41fb68:	adc    bh,BYTE PTR [ecx-0xc99d833]
  41fb6e:	retf   
  41fb6f:	mov    esi,0xd7b785a3
  41fb74:	jg     0x41fb7e
  41fb76:	pushf  
  41fb77:	dec    eax
  41fb78:	(bad)  
  41fb79:	arpl   WORD PTR [ecx+0x37],cx
  41fb7c:	sub    esp,edx
  41fb7e:	add    esi,DWORD PTR ds:0x2a31970d
  41fb84:	push   cs
  41fb85:	mov    eax,ds:0xac81bc7f
  41fb8a:	mov    bl,0xce
  41fb8c:	pop    es
  41fb8d:	cs push esi
  41fb8f:	pop    esi
  41fb90:	mov    bh,0x7a
  41fb92:	sub    edi,DWORD PTR [eax]
  41fb94:	out    0x32,al
  41fb96:	fild   WORD PTR [edi-0xcc75ba]
  41fb9c:	sub    BYTE PTR ds:0x341b25dd,ah
  41fba2:	adc    BYTE PTR [ecx+0x69fada70],dh
  41fba8:	mov    eax,ds:0x2db31e4f
  41fbad:	sbb    DWORD PTR [eax+0x4b],ebx
  41fbb0:	push   0x17
  41fbb2:	repnz push edx
  41fbb4:	popf   
  41fbb5:	das    
  41fbb6:	adc    al,0xd7
  41fbb8:	mov    al,ds:0x32fc13e8
  41fbbd:	cs pop edx
  41fbbf:	xchg   esp,eax
  41fbc0:	out    0xa7,al
  41fbc2:	popf   
  41fbc3:	imul   edi,DWORD PTR [eax+0x37],0xdbebf5c5
  41fbca:	inc    ebp
  41fbcb:	imul   ebx
  41fbcd:	push   ecx
  41fbce:	out    0xf8,eax
  41fbd0:	shl    DWORD PTR [ebx-0x593035b1],1
  41fbd6:	xchg   ecx,eax
  41fbd7:	pop    esp
  41fbd8:	jno    0x41fba2
  41fbda:	(bad)  
  41fbdb:	fimul  DWORD PTR [edx-0x76]
  41fbde:	jge    0x41fc1e
  41fbe0:	jp     0x41fbfa
  41fbe2:	retf   0xd301
  41fbe5:	enter  0x240a,0x7f
  41fbe9:	ins    BYTE PTR es:[edi],dx
  41fbea:	pop    ebp
  41fbeb:	mov    cl,0x94
  41fbed:	repnz pop ds
  41fbef:	add    eax,0x5f1c2773
  41fbf4:	sbb    esi,DWORD PTR [ebp-0x57]
  41fbf7:	sbb    DWORD PTR [edx+0x6d],ebp
  41fbfa:	(bad)  
  41fbfb:	push   esp
  41fbfc:	mov    al,ds:0x9dc688f8
  41fc01:	xchg   esp,eax
  41fc02:	xchg   edx,eax
  41fc03:	cmc    
  41fc04:	add    DWORD PTR [ecx-0x5b],edx
  41fc07:	add    DWORD PTR [ebx+0x27],0x5f
  41fc0b:	imul   edx,DWORD PTR [esi+0x60],0xffffff8c
  41fc0f:	and    cl,BYTE PTR [ebx]
  41fc11:	sub    ah,BYTE PTR [edi-0x38]
  41fc14:	and    edx,DWORD PTR [edi]
  41fc16:	inc    esp
  41fc17:	repz (bad) 
  41fc19:	sbb    eax,0x7c48bb
  41fc1e:	cmc    
  41fc1f:	out    dx,eax
  41fc20:	lahf   
  41fc21:	sbb    esi,edi
  41fc23:	jbe    0x41fc2a
  41fc25:	mov    ds:0xbf76d401,eax
  41fc2a:	push   0xffffffac
  41fc2c:	rcr    DWORD PTR [ebx],cl
  41fc2e:	inc    esi
  41fc2f:	into   
  41fc30:	or     DWORD PTR [ebp-0x51de3ec0],ecx
  41fc36:	je     0x41fc00
  41fc38:	js     0x41fc47
  41fc3a:	lds    esp,FWORD PTR [edx+0x1f]
  41fc3d:	dec    esi
  41fc3e:	sahf   
  41fc3f:	mov    DWORD PTR ds:0xdbf285b1,edi
  41fc45:	pusha  
  41fc46:	inc    edx
  41fc47:	adc    al,0x5
  41fc49:	dec    esi
  41fc4a:	xchg   DWORD PTR [edx-0x41],esi
  41fc4d:	mov    BYTE PTR [ebx-0x2bfdf93c],0xc2
  41fc54:	pop    eax
  41fc55:	out    0x95,al
  41fc57:	test   DWORD PTR [edx],ecx
  41fc59:	push   ebp
  41fc5a:	cmp    BYTE PTR [esi],ch
  41fc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5d:	sbb    DWORD PTR [eax+ebx*4],ebp
  41fc60:	mov    ebx,0x3244792
  41fc65:	jmp    0x8b48:0x6f7453a3
  41fc6c:	clc    
  41fc6d:	int    0x81
  41fc6f:	or     edi,eax
  41fc71:	inc    ecx
  41fc72:	sub    bh,0xf4
  41fc75:	adc    edi,DWORD PTR [edx*1-0x6af406e4]
  41fc7c:	call   0x2bcf:0x5ab58003
  41fc83:	stc    
  41fc84:	fwait
  41fc85:	or     esi,0xec672b51
  41fc8b:	retf   0x7dad
  41fc8e:	mov    al,0x79
  41fc90:	loopne 0x41fc3a
  41fc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc93:	iret   
  41fc94:	imul   esp,DWORD PTR [ebx],0x0
	...
  41fca2:	xor    eax,0xbf06168e
  41fca7:	sahf   
  41fca8:	xor    eax,0xa0e807bf
  41fcad:	mov    edx,0xc2dacc1d
  41fcb2:	xchg   esi,eax
  41fcb3:	jno    0x41fcb6
  41fcb5:	add    ah,cl
  41fcb7:	add    al,BYTE PTR [eax]
  41fcb9:	add    BYTE PTR [ebx-0x6bb470d3],ch
  41fcbf:	sbb    cl,dh
  41fcc1:	js     0x41fc9b
  41fcc3:	data16 rol BYTE PTR [edi-0x3f],cl
  41fcc7:	sti    
  41fcc8:	push   eax
  41fcc9:	std    
  41fcca:	call   0xb637:0x4cb120a6
  41fcd1:	mov    edx,DWORD PTR [ecx]
  41fcd3:	push   0x67d739e4
  41fcd8:	or     al,0xc2
  41fcda:	in     eax,dx
  41fcdb:	and    edi,DWORD PTR [ebx-0x6d996e9d]
  41fce1:	xor    esi,DWORD PTR [ecx-0x71fa7a2]
  41fce7:	fs add al,0x95
  41fcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fceb:	jo     0x41fcb4
  41fced:	xchg   edi,eax
  41fcee:	xchg   edi,eax
  41fcef:	pop    ebp
  41fcf0:	push   cs
  41fcf1:	cmp    eax,0x1ddac16f
  41fcf6:	sub    esi,DWORD PTR ds:0xddee565b
  41fcfc:	sbb    eax,0xf9e39557
  41fd01:	out    dx,al
  41fd02:	inc    esi
  41fd03:	sub    DWORD PTR [edx],esi
  41fd05:	(bad)  
  41fd06:	cmp    al,0x3b
  41fd08:	leave  
  41fd09:	arpl   sp,si
  41fd0b:	xor    al,0xac
  41fd0d:	push   edx
  41fd0e:	dec    ebx
  41fd0f:	xchg   DWORD PTR [ecx+0x37],ecx
  41fd12:	femms  
  41fd14:	sar    DWORD PTR [esi-0x8],cl
  41fd17:	test   DWORD PTR [esi-0x5ab5e58d],eax
  41fd1d:	pushf  
  41fd1e:	push   0xffffff8d
  41fd20:	fist   DWORD PTR [edi+0x6a83f60f]
  41fd26:	jns    0x41fcd5
  41fd28:	nop
  41fd29:	fld    TBYTE PTR [eax-0x39]
  41fd2c:	aam    0x87
  41fd2e:	push   esi
  41fd2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd30:	mov    ah,0xab
  41fd32:	ins    BYTE PTR es:[edi],dx
  41fd33:	ret    0xe7af
  41fd36:	loope  0x41fd64
  41fd38:	popa   
  41fd39:	mov    cl,BYTE PTR [ecx]
  41fd3b:	sahf   
  41fd3c:	dec    eax
  41fd3d:	jg     0x41fcc7
  41fd3f:	mov    esi,0xa9ce9b9
  41fd44:	inc    esi
  41fd45:	pushf  
  41fd46:	xor    ah,BYTE PTR ds:0xee6434ad
  41fd4c:	les    ebx,FWORD PTR [ecx]
  41fd4e:	ficomp WORD PTR [edx-0x176e49a6]
  41fd54:	mov    eax,ds:0xb8f30b6a
  41fd59:	clc    
  41fd5a:	sbb    DWORD PTR [ebp+0x10b4fa18],eax
  41fd60:	mov    al,ds:0x5019b28e
  41fd65:	sub    al,0x8f
  41fd67:	and    dh,BYTE PTR [eax-0x49]
  41fd6a:	push   es
  41fd6b:	adc    al,0x36
  41fd6d:	lahf   
  41fd6e:	data16 in al,dx
  41fd70:	or     edi,DWORD PTR [eax-0x57]
  41fd73:	mov    bl,BYTE PTR [esi+0x22]
  41fd76:	out    0x5b,eax
  41fd78:	xor    al,0x47
  41fd7a:	mov    dh,0xe9
  41fd7c:	add    esp,DWORD PTR [edx+0x63]
  41fd7f:	jb     0x41fd8f
  41fd81:	dec    esp
  41fd82:	mov    edi,0x7bc1f7fd
  41fd87:	inc    edi
  41fd88:	mov    edi,0x78f7ee9d
  41fd8d:	in     al,0xc9
  41fd8f:	dec    edx
  41fd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd91:	jne    0x41fde6
  41fd93:	jmp    0x41fd82
  41fd95:	arpl   WORD PTR [edx+0x1d],sp
  41fd98:	call   0xd740:0x3a9e4a43
  41fd9f:	xor    ebx,DWORD PTR ds:0x69239443
  41fda5:	imul   ecx,esi,0x632e1538
  41fdab:	jno    0x41fe09
  41fdad:	sbb    eax,0x9c4eb77
  41fdb2:	fwait
  41fdb3:	pop    es
  41fdb4:	or     DWORD PTR [edi+ebp*1+0x7a],edi
  41fdb8:	fld    TBYTE PTR [eax-0x27]
  41fdbb:	pusha  
  41fdbc:	cmp    esp,DWORD PTR [ecx+0x238e59b]
  41fdc2:	rcr    BYTE PTR [esi+0x1b7efb4a],0xec
  41fdc9:	in     eax,dx
  41fdca:	mov    esp,0x61d5bfd5
  41fdcf:	pop    ebx
  41fdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd1:	popa   
  41fdd2:	loopne 0x41fd95
  41fdd4:	mov    ah,BYTE PTR ds:0xc2fded73
  41fdda:	jge    0x41fe44
  41fddc:	adc    al,0x2e
  41fdde:	sar    DWORD PTR [eax+0x63f45db8],1
  41fde4:	xchg   ebp,eax
  41fde5:	mov    ecx,0x4441133c
  41fdea:	jl     0x41fdd3
  41fdec:	mov    al,ds:0x31654538
  41fdf1:	outs   dx,DWORD PTR es:[esi]
  41fdf3:	ret    0xb4ca
  41fdf6:	xchg   edx,eax
  41fdf7:	xchg   edi,eax
  41fdf8:	sbb    al,BYTE PTR [ebp+0xe76057e]
  41fdfe:	jmp    0x41fe51
  41fe00:	xchg   ecx,eax
  41fe01:	cmp    DWORD PTR [esi-0x32],esp
  41fe04:	lds    edx,FWORD PTR [edi]
  41fe06:	aam    0x70
  41fe08:	cs mov dl,0x50
  41fe0b:	dec    edi
  41fe0c:	jmp    0x41fdb8
  41fe0e:	mov    al,0xfb
  41fe10:	dec    ecx
  41fe11:	mov    bh,0x15
  41fe13:	xor    ah,ch
  41fe15:	mov    al,ds:0xf1f5561a
  41fe1a:	mov    edx,0x558f3ed7
  41fe1f:	xchg   edi,eax
  41fe20:	retf   
  41fe21:	test   DWORD PTR [ebp+0x39],ecx
  41fe24:	inc    esi
  41fe25:	jle    0x41fdd7
  41fe27:	inc    ecx
  41fe28:	pop    eax
  41fe29:	jae    0x41fded
  41fe2b:	and    BYTE PTR [edx],dl
  41fe2d:	jecxz  0x41fe3f
  41fe2f:	daa    
  41fe30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe31:	test   DWORD PTR [esi],0x93ec565
  41fe37:	inc    eax
  41fe38:	or     edx,DWORD PTR [eax-0x312b62a6]
  41fe3e:	fld    TBYTE PTR [ebp-0x4355413e]
  41fe44:	or     edi,ebp
  41fe46:	daa    
  41fe47:	fisubr WORD PTR [ecx+0x1e]
  41fe4a:	int3   
  41fe4b:	ins    BYTE PTR es:[edi],dx
  41fe4c:	pop    edx
  41fe4d:	in     al,dx
  41fe4e:	jb     0x41fdd4
  41fe50:	adc    al,0xc1
  41fe52:	iret   
  41fe53:	icebp  
  41fe54:	xchg   esi,eax
  41fe55:	jecxz  0x41fe20
  41fe57:	mov    bl,0x96
  41fe59:	cmp    ebp,DWORD PTR [eax+0x5edd6521]
  41fe5f:	in     eax,dx
  41fe60:	push   esi
  41fe61:	fimul  WORD PTR fs:[ebx]
  41fe64:	inc    ebp
  41fe65:	aaa    
  41fe66:	loop   0x41feb8
  41fe68:	bound  ebx,QWORD PTR [ebx+0x1b]
  41fe6b:	neg    BYTE PTR [ebp-0x55]
  41fe6e:	and    al,0xd1
  41fe70:	mul    dh
  41fe72:	mov    dh,0x96
  41fe74:	das    
  41fe75:	loop   0x41fe4c
  41fe77:	xchg   edi,eax
  41fe78:	pop    ss
  41fe79:	or     al,0x7a
  41fe7b:	test   eax,0xf412c976
  41fe80:	arpl   ax,di
  41fe82:	rol    DWORD PTR [edi-0x6ee1b9f9],1
  41fe88:	jge    0x41fe8f
  41fe8a:	dec    DWORD PTR [esi+0x2a]
  41fe8d:	std    
  41fe8e:	xlat   BYTE PTR ds:[ebx]
  41fe8f:	jne    0x41fe66
  41fe91:	ret    
  41fe92:	push   cs
  41fe93:	retf   0xc557
  41fe96:	adc    eax,0x30f0b3cb
  41fe9b:	mov    cl,0x21
  41fe9d:	leave  
  41fe9e:	inc    esp
  41fe9f:	int    0xe3
  41fea1:	mov    eax,fs:0x7c7717b0
  41fea7:	(bad)  [eax+0x6c0c5b22]
  41fead:	(bad)  
  41feae:	mov    esp,esi
  41feb0:	add    DWORD PTR [eax],esp
  41feb2:	repz repz cmp dh,0x9e
  41feb7:	fadd   QWORD PTR [esp+edi*2-0x5438d5a2]
  41febe:	add    esp,DWORD PTR [edi+0x38]
  41fec1:	cmp    al,0xb2
  41fec3:	jl     0x41fe81
  41fec5:	fstp   TBYTE PTR [edx+0x56941da3]
  41fecb:	(bad)  
  41fecd:	mov    ds:0x5748b56a,eax
  41fed2:	jns    0x41fed2
  41fed4:	mov    esi,0xe07a0373
  41fed9:	pop    edi
  41feda:	imul   eax,ecx,0xeb2e8324
  41fee0:	mov    ecx,DWORD PTR [ebx]
  41fee2:	inc    eax
  41fee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee4:	and    BYTE PTR ss:[ecx+0x19dfa2b1],dh
  41feeb:	inc    eax
  41feec:	shl    DWORD PTR [eax-0x3d],1
  41feef:	out    0xec,eax
  41fef1:	push   esp
  41fef2:	leave  
  41fef3:	add    al,0x6
  41fef5:	sti    
  41fef6:	lods   eax,DWORD PTR ds:[esi]
  41fef7:	mov    al,bh
  41fef9:	sbb    DWORD PTR [ebx],esp
  41fefb:	loope  0x41feb6
  41fefd:	push   esp
  41fefe:	call   FWORD PTR [ecx-0x19a5a6b4]
  41ff04:	jo     0x41ff13
  41ff06:	mov    al,0x52
  41ff08:	sub    al,0xd1
  41ff0a:	cwde   
  41ff0b:	sbb    eax,0x7fb3f4e0
  41ff10:	stc    
  41ff11:	pop    es
  41ff12:	and    eax,DWORD PTR [edx+0x26]
  41ff15:	xor    DWORD PTR [ecx],ebx
  41ff17:	mov    ah,0x7d
  41ff19:	retf   0x3569
  41ff1c:	fsubr  st(2),st
  41ff1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff1f:	mov    ah,0x4a
  41ff21:	in     al,dx
  41ff22:	sub    eax,0xee5bcaaa
  41ff27:	js     0x41ff47
  41ff29:	aam    0x50
  41ff2b:	sub    eax,0xaa8ea4a4
  41ff30:	ss push ss
  41ff32:	inc    edx
  41ff33:	dec    eax
  41ff34:	adc    al,0xc9
  41ff36:	push   edi
  41ff37:	loop   0x41ff28
  41ff39:	cmp    ah,al
  41ff3b:	and    eax,0x62ef0be
  41ff40:	and    dl,cl
  41ff42:	mov    ah,0x61
  41ff44:	iret   
  41ff45:	or     BYTE PTR [eax],0xa9
  41ff48:	and    edi,DWORD PTR [ecx-0x671e5f21]
  41ff4e:	out    0x8d,al
  41ff50:	and    esi,DWORD PTR [edi+0x24]
  41ff53:	int    0x3a
  41ff55:	inc    edx
  41ff56:	push   esi
  41ff57:	cmp    al,0x8f
  41ff59:	lock cmp dh,bl
  41ff5c:	fisub  WORD PTR [edx-0x6d]
  41ff5f:	pop    ebp
  41ff60:	sub    BYTE PTR [esi+eax*1-0x7d8cf934],bh
  41ff67:	add    bl,cl
  41ff69:	(bad)  
  41ff6a:	in     al,0xd8
  41ff6c:	leave  
  41ff6d:	sbb    al,0xa7
  41ff6f:	enter  0x984a,0x7e
  41ff73:	scas   al,BYTE PTR es:[edi]
  41ff74:	in     al,dx
  41ff75:	test   eax,0x3c3baa13
  41ff7a:	add    ebx,DWORD PTR [ecx-0x7d]
  41ff7d:	(bad)  
  41ff7f:	clc    
  41ff80:	(bad)  
  41ff81:	xor    ecx,DWORD PTR [eax-0xd]
  41ff84:	inc    ecx
  41ff85:	outs   dx,BYTE PTR ds:[esi]
	...
  41ff92:	stc    
  41ff93:	std    
  41ff94:	in     eax,dx
  41ff95:	mov    cl,0xed
  41ff97:	mov    cl,0xfd
  41ff99:	std    
  41ff9a:	pop    ds
  41ff9b:	xor    dl,0xed
  41ff9e:	fsubr  st,st(5)
  41ffa0:	dec    esi
  41ffa1:	push   eax
  41ffa2:	bound  esi,QWORD PTR [ecx+eax*1+0x0]
  41ffa6:	int3   
  41ffa7:	add    al,BYTE PTR [eax]
  41ffa9:	add    BYTE PTR [edi+0x3097590],al
  41ffaf:	rol    bl,cl
  41ffb1:	mov    ds:0x533e4e19,eax
  41ffb6:	xchg   ebx,eax
  41ffb7:	pop    ebx
  41ffb8:	aam    0x5c
  41ffba:	rol    BYTE PTR [edi+0x2a2c41db],1
  41ffc0:	repz sub DWORD PTR [edi],eax
  41ffc3:	das    
  41ffc4:	dec    edx
  41ffc5:	fstp   DWORD PTR [ecx-0x456be928]
  41ffcb:	sub    bh,BYTE PTR [ebx+0x32a53385]
  41ffd1:	clc    
  41ffd2:	aaa    
  41ffd3:	iret   
  41ffd4:	imul   esp,DWORD PTR [eax],0x6cab30d2
  41ffda:	imul   ebx,DWORD PTR [ebp-0x27],0x46ffb88d
  41ffe1:	jae    0x41ff7c
  41ffe3:	call   FWORD PTR [ebx+0x40]
  41ffe6:	xor    eax,0x38c81fb8
  41ffeb:	ror    cl,1
  41ffed:	mov    ?,WORD PTR [edx+0x41]
  41fff0:	ret    
  41fff1:	adc    ch,BYTE PTR [edi+0x6bcf34c6]
  41fff7:	xor    BYTE PTR [eax+0x3203d7e3],bl
  41fffd:	es pop ebx
  41ffff:	adc    ch,ch
  420001:	mov    esp,0x5b72b10e
  420006:	js     0x41ff9e
  420008:	sbb    bh,al
  42000a:	mul    BYTE PTR [esi+0x19]
  42000d:	push   ebx
  42000e:	aam    0x64
  420010:	sbb    eax,0x832639c7
  420015:	cwde   
  420016:	mov    bl,0x7d
  420018:	into   
  420019:	es repz and eax,0x2c7a622f
  420020:	jmp    0x33ae:0x97c43f3c
  420027:	push   ebx
  420028:	jne    0x420070
  42002a:	ss cdq 
  42002c:	adc    ecx,esi
  42002e:	ja     0x42005b
  420030:	adc    BYTE PTR [ebx-0x4da618f0],bl
  420036:	jne    0x42006b
  420038:	jo     0x42004f
  42003a:	xchg   ebx,eax
  42003b:	mov    dh,0x99
  42003d:	bound  edx,QWORD PTR [ebx-0x2f]
  420040:	lea    ecx,[ebp+0x5f4ea7a4]
  420046:	fsubr  st(1),st
  420048:	xchg   edi,eax
  420049:	xor    al,BYTE PTR [edi]
  42004b:	add    edx,DWORD PTR ds:0x3198b040
  420051:	add    al,0xea
  420053:	xlat   BYTE PTR ds:[ebx]
  420054:	pop    esi
  420055:	cmp    ch,dh
  420057:	ins    DWORD PTR es:[edi],dx
  420058:	push   ds
  420059:	enter  0xa014,0x60
  42005d:	imul   ecx,DWORD PTR [edi+0x75f899ff],0x507f85e3
  420067:	jns    0x42007d
  420069:	mov    dl,0x46
  42006b:	push   edi
  42006c:	and    BYTE PTR [ebp+0x41],cl
  42006f:	xchg   ebx,eax
  420070:	add    BYTE PTR [esp+ebp*4],ch
  420073:	dec    esp
  420074:	aas    
  420075:	adc    eax,DWORD PTR [ebp-0x11f43f8d]
  42007b:	pop    eax
  42007c:	xor    DWORD PTR [edx+0x3d3e8e98],0x37
  420083:	pusha  
  420084:	fnsave [edi-0x579c3525]
  42008a:	xchg   al,al
  42008c:	cmp    edx,esi
  42008e:	push   cs
  42008f:	sub    ecx,DWORD PTR [ecx]
  420091:	cmp    al,0xf0
  420093:	cmp    eax,0x7083fbf4
  420098:	lods   al,BYTE PTR ds:[esi]
  420099:	fdivrp st(4),st
  42009b:	pop    es
  42009c:	adc    BYTE PTR [esi-0xe],al
  42009f:	xchg   ebp,eax
  4200a0:	xchg   ecx,eax
  4200a1:	retf   0x5210
  4200a4:	ja     0x42002e
  4200a6:	push   0x8e640a9e
  4200ab:	gs out dx,al
  4200ad:	or     eax,0x2aeaaa86
  4200b2:	dec    ebp
  4200b3:	bound  ebp,QWORD PTR [esi-0x5b]
  4200b6:	or     edx,DWORD PTR [ebx]
  4200b8:	fisub  DWORD PTR [ebx-0x5b]
  4200bb:	or     eax,0xb4e911ad
  4200c0:	jl     0x420127
  4200c2:	sub    DWORD PTR [eax],esi
  4200c4:	pop    ebx
  4200c5:	mov    DWORD PTR [esi],eax
  4200c7:	push   es
  4200c8:	add    ebx,DWORD PTR [ebp-0xc]
  4200cb:	mov    ebp,0x4cfdc9c7
  4200d0:	inc    ebx
  4200d1:	loopne 0x420054
  4200d3:	call   0x92be6db6
  4200d8:	test   BYTE PTR [ecx-0x60a68f57],0x95
  4200df:	ins    BYTE PTR es:[edi],dx
  4200e0:	pusha  
  4200e1:	retf   0x6e08
  4200e4:	movzx  esp,WORD PTR [eax+ebx*2-0x3]
  4200e9:	leave  
  4200ea:	mov    ds:0x820e6754,al
  4200ef:	clc    
  4200f0:	lods   eax,DWORD PTR ds:[esi]
  4200f1:	inc    ebp
  4200f2:	add    ah,BYTE PTR [eax+ecx*8]
  4200f5:	idiv   DWORD PTR [esp+edx*4+0x75ee9c05]
  4200fc:	inc    eax
  4200fd:	mov    dl,0x2d
  4200ff:	(bad)  
  420101:	sub    esi,eax
  420103:	dec    ebx
  420104:	out    dx,al
  420105:	nop
  420106:	mov    cl,0xd
  420108:	push   DWORD PTR [ecx-0x23]
  42010b:	add    al,0x29
  42010d:	xchg   ebx,eax
  42010e:	pop    ebx
  42010f:	jns    0x420147
  420111:	jg     0x420124
  420113:	aas    
  420114:	jb     0x42009f
  420116:	add    ah,bh
  420118:	and    esi,DWORD PTR [esi]
  42011a:	jl     0x42018d
  42011c:	jns    0x4200a9
  42011e:	fstp   st(1)
  420120:	in     eax,dx
  420121:	xor    al,0xe8
  420123:	ins    BYTE PTR es:[edi],dx
  420124:	dec    edi
  420125:	add    BYTE PTR [eax+0xd],bl
  420128:	dec    esi
  420129:	jge    0x420122
  42012b:	mov    eax,ds:0xb708eb91
  420130:	ret    0x8276
  420133:	rcl    DWORD PTR [edi+edi*4-0x16],1
  420137:	push   eax
  420138:	push   ebp
  420139:	pop    esp
  42013a:	shl    DWORD PTR [edi-0x790c52],cl
  420140:	or     BYTE PTR [esi+ecx*8],dl
  420143:	xor    bl,BYTE PTR [edi]
  420145:	cmp    BYTE PTR [ebp+ebp*4+0x5e],ah
  420149:	add    edx,eax
  42014b:	xor    al,0xea
  42014d:	mov    ?,WORD PTR [ebp+0x7a802f08]
  420153:	in     eax,0xeb
  420155:	lods   eax,DWORD PTR ds:[esi]
  420156:	xchg   edi,eax
  420157:	adc    eax,0xfcd1156e
  42015c:	rcr    BYTE PTR [edx],1
  42015e:	pop    ss
  42015f:	pop    DWORD PTR [eax]
  420161:	and    ah,BYTE PTR [ebx]
  420163:	dec    ebp
  420164:	mov    edx,0x8c85388a
  420169:	imul   esp,DWORD PTR [esi-0x60cecdac],0xc90a7b5e
  420173:	scas   eax,DWORD PTR es:[edi]
  420174:	inc    eax
  420175:	add    bl,BYTE PTR [eax-0x19]
  420178:	push   ebx
  420179:	call   0xb7c9:0x96fd736
  420180:	and    BYTE PTR [edi],bh
  420182:	mov    al,0x69
  420184:	repnz and eax,0x59983d31
  42018a:	jns    0x420133
  42018c:	data16 loop 0x420177
  42018f:	xor    ebx,DWORD PTR [eax]
  420191:	jo     0x4201d4
  420193:	div    DWORD PTR [edx+0x3d014ae1]
  420199:	dec    edx
  42019a:	daa    
  42019b:	int    0x76
  42019d:	adc    DWORD PTR [eax],esi
  42019f:	scas   eax,DWORD PTR es:[edi]
  4201a0:	and    ch,BYTE PTR [esp+esi*1-0x1e]
  4201a4:	les    edi,FWORD PTR [ecx-0x770beaef]
  4201aa:	xor    al,0x6b
  4201ac:	ds enter 0x38cd,0x3d
  4201b1:	call   0x2f44:0x819d690
  4201b8:	sub    al,dh
  4201ba:	imul   esi,DWORD PTR [eax+edx*2+0x77],0x374e698d
  4201c2:	jl     0x420229
  4201c4:	ds jo  0x4201f0
  4201c7:	push   cs
  4201c8:	jb     0x42014f
  4201ca:	mov    al,ds:0xddccebf1
  4201cf:	fimul  DWORD PTR [edx]
  4201d1:	add    BYTE PTR [ecx],al
  4201d3:	sti    
  4201d4:	xor    ecx,0xd549e6ad
  4201da:	and    ebx,0xebe844a3
  4201e0:	dec    ecx
  4201e1:	fcom   QWORD PTR [ebx-0x20]
  4201e4:	push   ebp
  4201e5:	call   FWORD PTR [esi-0x58f86a34]
  4201eb:	xchg   edi,eax
  4201ec:	or     al,0xf6
  4201ee:	push   edi
  4201ef:	pop    ebx
  4201f0:	xchg   ebp,eax
  4201f1:	dec    edi
  4201f2:	pop    eax
  4201f3:	out    0xa5,eax
  4201f5:	sub    eax,0xde145fcc
  4201fa:	mov    al,ds:0xc481cd77
  4201ff:	test   al,0x59
  420201:	test   ecx,edx
  420203:	xchg   DWORD PTR [esi+0x6c],edi
  420206:	adc    bl,BYTE PTR [esi]
  420208:	mov    esp,0xdbee8c35
  42020d:	out    0xba,eax
  42020f:	inc    ebx
  420210:	test   al,0x4f
  420212:	sti    
  420213:	test   DWORD PTR [eax-0x4b],ebp
  420216:	aaa    
  420217:	clc    
  420218:	push   esi
  420219:	jbe    0x420262
  42021b:	or     bl,BYTE PTR [esp+edi*2-0x3f]
  42021f:	in     eax,0xed
  420221:	stc    
  420222:	and    ebx,esi
  420224:	aaa    
  420225:	pop    ss
  420226:	loopne 0x42020c
  420228:	call   0x4a4d:0xcfa01079
  42022f:	shl    DWORD PTR [esi+0x6bdf59bb],0xdb
  420236:	out    dx,al
  420237:	pop    edi
  420238:	push   ds
  420239:	es fwait
  42023b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42023c:	and    eax,0xba3a70c3
  420241:	mov    edx,0x792f7da6
  420246:	mov    ds:0xe12ada82,al
  42024b:	adc    DWORD PTR [edx],ebx
  42024d:	mov    eax,0xc5a4f921
  420252:	inc    ebp
  420253:	pop    edi
  420254:	fisttp DWORD PTR [esp+ebx*8]
  420257:	and    BYTE PTR [edi-0x14904ea6],0xde
  42025e:	out    dx,eax
  42025f:	and    ch,bl
  420261:	inc    edx
  420262:	(bad)  
  420263:	test   BYTE PTR ds:0xcdc77933,dh
  420269:	fcom   DWORD PTR [edi]
  42026b:	icebp  
  42026c:	jns    0x420228
  42026e:	and    al,0xe2
  420270:	xchg   ebp,eax
  420272:	sbb    eax,0x44b052
	...
  42027f:	add    BYTE PTR [eax],al
  420281:	add    dl,dh
  420283:	rol    BYTE PTR ds:0xf6d53751,0xe3
  42028a:	out    dx,al
  42028b:	sub    ebp,esp
  42028d:	shrd   DWORD PTR [esi],ebx,cl
  420290:	pop    ebx
  420291:	aad    0x2e
  420293:	ja     0x420296
  420295:	add    ah,cl
  420297:	add    al,BYTE PTR [eax]
  420299:	add    BYTE PTR [ebp-0x316a2d8a],al
  42029f:	or     ah,BYTE PTR [eax]
  4202a1:	sbb    eax,0x6b29eb49
  4202a6:	fisubr DWORD PTR [ebx]
  4202a8:	inc    eax
  4202a9:	idiv   BYTE PTR [ebp-0x7e58f39b]
  4202af:	push   esp
  4202b0:	xchg   ebp,eax
  4202b1:	inc    edi
  4202b2:	loope  0x4202a5
  4202b4:	mov    dh,0xde
  4202b6:	lock out dx,eax
  4202b8:	mov    ebp,0xcda5b5c1
  4202bd:	jp     0x4202b3
  4202bf:	pop    esp
  4202c0:	sub    al,0x5a
  4202c2:	jecxz  0x42029b
  4202c4:	inc    edx
  4202c5:	and    eax,0xac44911e
  4202ca:	mov    dh,0x7f
  4202cc:	fisub  DWORD PTR [edi-0x43]
  4202cf:	push   es
  4202d0:	dec    ebp
  4202d1:	in     eax,0x23
  4202d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d4:	lea    ebx,[edi]
  4202d6:	push   eax
  4202d7:	scas   eax,DWORD PTR es:[edi]
  4202d8:	dec    ebx
  4202d9:	cmp    ch,BYTE PTR [ebx]
  4202db:	push   edx
  4202dc:	arpl   WORD PTR [ecx+0x61],si
  4202df:	sub    eax,0x85f8ccaa
  4202e4:	ins    DWORD PTR es:[edi],dx
  4202e5:	into   
  4202e6:	push   cs
  4202e7:	jmp    0x4202f4
  4202e9:	lea    edi,[ebx-0x6a]
  4202ec:	mov    WORD PTR [ebx+0x586888e5],es
  4202f2:	es adc al,0x9f
  4202f5:	adc    eax,0x342c7e04
  4202fa:	fcomip st,st(1)
  4202fc:	test   BYTE PTR [edi+0x1d],ch
  4202ff:	mov    esi,0xabd46065
  420304:	test   eax,0xad2504a6
  420309:	add    al,dh
  42030b:	or     DWORD PTR [edi-0x1a],ecx
  42030e:	add    al,0x3f
  420310:	adc    DWORD PTR [eax],ebx
  420312:	cs ja  0x420327
  420315:	leave  
  420316:	popf   
  420317:	test   eax,0x6d1a8bf6
  42031c:	test   esp,ebp
  42031e:	sub    eax,0x96788ca9
  420323:	imul   esp,ecx,0x9725ddcb
  420329:	lea    esi,[ebx+edx*1+0x74b2c39c]
  420330:	sbb    BYTE PTR [eax+ebx*1],bl
  420333:	sub    eax,0x84aaaa74
  420338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420339:	cmp    ch,BYTE PTR [ebx+0x6e92c336]
  42033f:	adc    eax,0xe45a3bbe
  420344:	dec    esi
  420345:	ror    bh,1
  420347:	sbb    eax,0xc1b727be
  42034c:	loop   0x420397
  42034e:	xor    DWORD PTR [edx-0x5b],eax
  420351:	arpl   WORD PTR [edi-0x25],ax
  420354:	cli    
  420355:	(bad)  
  420356:	mov    bl,0x12
  420358:	stos   BYTE PTR es:[edi],al
  420359:	int    0x10
  42035b:	or     ah,BYTE PTR [ebp-0x55]
  42035e:	xchg   esp,eax
  42035f:	push   eax
  420360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420361:	and    eax,0x608dfb9b
  420366:	push   edi
  420367:	or     al,0xda
  420369:	fisttp QWORD PTR [edi]
  42036b:	ins    DWORD PTR es:[edi],dx
  42036c:	jo     0x420300
  42036e:	test   eax,0x6d543350
  420373:	push   0x59
  420375:	clc    
  420376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420377:	jno    0x4203f5
  420379:	add    dh,BYTE PTR [eax+0x3a]
  42037c:	or     eax,0xdf929bb7
  420381:	les    edx,FWORD PTR [esi-0x46]
  420384:	push   esp
  420385:	cmp    al,0xbc
  420387:	sub    BYTE PTR [ecx-0x76fa00f7],0x8a
  42038e:	ss daa 
  420390:	sbb    eax,0xb29efe7e
  420395:	and    BYTE PTR [edx-0x640f9be1],ah
  42039b:	push   ds
  42039c:	cmp    eax,edx
  42039e:	dec    ecx
  42039f:	aas    
  4203a0:	adc    BYTE PTR [eax],ah
  4203a2:	ret    
  4203a3:	sbb    al,BYTE PTR [edx+0x55]
  4203a6:	adc    cl,ch
  4203a8:	fidiv  WORD PTR [ecx-0x51c29333]
  4203ae:	iret   
  4203af:	fcomi  st,st(5)
  4203b1:	arpl   WORD PTR ds:0x97e444b7,si
  4203b7:	pop    ebx
  4203b8:	cdq    
  4203b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ba:	push   0x808a6126
  4203bf:	sbb    cl,bh
  4203c1:	sub    BYTE PTR [ecx-0x276d1a42],bl
  4203c7:	sub    esp,DWORD PTR [edx+0x9]
  4203ca:	bound  ebp,QWORD PTR [ebx+eax*8]
  4203cd:	cld    
  4203ce:	pop    ss
  4203cf:	sub    DWORD PTR [edx-0x1d89e9ab],edi
  4203d5:	ja     0x42039a
  4203d7:	adc    eax,DWORD PTR ds:0x76c12e44
  4203dd:	add    DWORD PTR [ecx],esp
  4203df:	std    
  4203e0:	pop    ss
  4203e1:	fisttp WORD PTR [esi+0x5f9fbc01]
  4203e7:	push   eax
  4203e8:	jecxz  0x4203c7
  4203ea:	outs   dx,DWORD PTR ds:[esi]
  4203eb:	mov    DWORD PTR [ecx-0x67400f70],ecx
  4203f1:	add    eax,0xee84c5cb
  4203f6:	aam    0xdf
  4203f8:	mov    bl,bh
  4203fa:	jp     0x42045f
  4203fc:	xchg   esp,eax
  4203fd:	mov    al,0x7
  4203ff:	jns    0x420413
  420401:	add    bh,dl
  420403:	cmc    
  420404:	or     eax,0x20dbaa80
  420409:	lods   al,BYTE PTR ds:[esi]
  42040a:	xor    DWORD PTR [eax],edx
  42040c:	sub    ebx,DWORD PTR ds:0x4a859950
  420412:	out    dx,al
  420413:	aaa    
  420414:	imul   ecx,DWORD PTR [eax],0x75a09c46
  42041a:	les    edx,FWORD PTR [ebx-0x537c815e]
  420420:	dec    esi
  420421:	dec    eax
  420422:	je     0x4203a7
  420424:	out    dx,al
  420425:	push   ss
  420426:	imul   esi,DWORD PTR [eax-0xfea52d5],0xffffff94
  42042d:	adc    bl,bl
  42042f:	ds enter 0x448,0xdd
  420434:	out    dx,eax
  420435:	neg    DWORD PTR [ebp+0x61]
  420438:	ins    DWORD PTR es:[edi],dx
  420439:	loop   0x420424
  42043b:	push   es
  42043c:	or     ecx,DWORD PTR [esi]
  42043e:	(bad)  
  42043f:	cmp    BYTE PTR fs:[ebx+ecx*1-0x42],al
  420444:	ins    BYTE PTR es:[edi],dx
  420445:	adc    dl,BYTE PTR [eax+0x2a]
  420448:	arpl   bp,cx
  42044a:	mov    dh,0x55
  42044c:	nop
  42044d:	push   esi
  42044e:	ret    
  42044f:	pop    ebp
  420450:	outs   dx,DWORD PTR ds:[esi]
  420451:	retf   
  420452:	(bad)  
  420453:	fdivr  DWORD PTR [edx+0x6bef8b69]
  420459:	push   ds
  42045a:	add    dh,BYTE PTR [ebp+ebx*1+0x3]
  42045e:	dec    eax
  42045f:	js     0x42046d
  420461:	sub    ecx,DWORD PTR [ebp-0x66]
  420464:	pop    eax
  420465:	dec    esi
  420466:	pop    edi
  420467:	addr16 inc eax
  420469:	xor    DWORD PTR [ecx],esi
  42046b:	shl    al,0x3d
  42046e:	in     al,dx
  42046f:	leave  
  420470:	call   0xa513:0xc318b396
  420477:	out    dx,eax
  420478:	add    BYTE PTR [edx+0x36e6a4ed],0x91
  42047f:	test   ah,0xf1
  420482:	mov    ds:0x8cd1980e,eax
  420487:	inc    esp
  420488:	(bad)  
  420489:	fcom   QWORD PTR [ecx+ebx*1-0x74]
  42048d:	xchg   BYTE PTR [ebx],dl
  42048f:	int    0xc2
  420491:	xor    eax,0x6eb6c974
  420496:	pop    ds
  420497:	jmp    0x7e0e:0x3c8d7034
  42049e:	xchg   esp,eax
  42049f:	ror    DWORD PTR [ebx-0x73197ab9],0x15
  4204a6:	gs (bad) 
  4204a8:	mov    edi,0x570cf15a
  4204ad:	inc    esp
  4204ae:	(bad)  
  4204af:	jp     0x420503
  4204b1:	jg     0x420448
  4204b3:	xchg   edx,eax
  4204b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204b5:	mov    ch,BYTE PTR [ecx+0x40]
  4204b8:	push   ss
  4204b9:	inc    ecx
  4204ba:	xchg   DWORD PTR ds:0xb5c84f58,ecx
  4204c0:	or     al,0x3
  4204c2:	jns    0x420541
  4204c4:	lods   eax,DWORD PTR ds:[esi]
  4204c5:	cli    
  4204c6:	cmc    
  4204c7:	mov    esi,0x8d0dfeed
  4204cc:	bound  edi,QWORD PTR [ebx-0x1e13a50]
  4204d2:	inc    ebp
  4204d3:	bswap  ecx
  4204d5:	push   ecx
  4204d6:	addr16 (bad) 
  4204d8:	sti    
  4204d9:	push   ebx
  4204da:	or     BYTE PTR [edx+0xe7ef1f3],ch
  4204e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e1:	add    ebp,DWORD PTR [edi]
  4204e3:	inc    ebx
  4204e4:	mov    bl,BYTE PTR [eax+0x1a]
  4204e7:	mov    eax,0x9242b249
  4204ec:	push   0xffffff8d
  4204ee:	jns    0x4204f9
  4204f0:	xchg   ebp,eax
  4204f1:	in     al,dx
  4204f2:	push   eax
  4204f3:	mov    edi,0xf811ff8d
  4204f8:	aas    
  4204f9:	popa   
  4204fa:	xchg   BYTE PTR [esi],cl
  4204fc:	(bad)  
  4204fd:	mov    al,ds:0x5c731a65
  420502:	sub    BYTE PTR [esi+esi*4],al
  420505:	mov    bl,0x92
  420507:	fdiv   DWORD PTR [esi]
  420509:	mov    bl,0x7
  42050b:	ret    
  42050c:	xchg   BYTE PTR [ebx+0x5f],ah
  42050f:	jnp    0x420526
  420511:	int    0xb5
  420513:	call   0x194ab160
  420518:	clc    
  420519:	cmp    eax,0x8e3d629e
  42051e:	std    
  42051f:	icebp  
  420520:	into   
  420521:	xor    al,0x9a
  420523:	pop    edi
  420524:	xchg   esi,eax
  420525:	sub    al,BYTE PTR [ebx]
  420527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420528:	mov    cl,0x42
  42052a:	jle    0x42052e
  42052c:	or     bl,dh
  42052e:	out    dx,al
  42052f:	xor    BYTE PTR [esi-0xb],al
  420532:	bound  eax,QWORD PTR [edi-0x79]
  420535:	xor    eax,0xbfbcee1a
  42053a:	rcl    DWORD PTR [eax-0x62],cl
  42053d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053e:	bound  eax,QWORD PTR [ebp+0x4d]
  420541:	or     eax,0x14e33e25
  420546:	lods   eax,DWORD PTR ds:[esi]
  420547:	adc    al,0x34
  420549:	mov    edx,0x10b89e0f
  42054e:	popa   
  42054f:	stc    
  420550:	adc    esi,DWORD PTR [ecx+eax*1+0x4cdd1b1a]
  420557:	fwait
  420558:	pop    ds
  420559:	lds    eax,FWORD PTR [edi+ebx*4]
  42055c:	jbe    0x420515
  42055e:	clc    
  42055f:	sbb    DWORD PTR [esi],0xffffffb2
  420562:	es xor eax,0x1bc2
	...
  420570:	add    BYTE PTR [eax],al
  420572:	inc    ebx
  420573:	inc    ecx
  420574:	popa   
  420575:	data16 arpl WORD PTR [esi+0x47],sp
  420579:	rcr    DWORD PTR gs:[edi+0x16],cl
  42057d:	xor    BYTE PTR [ecx],dh
  42057f:	or     bh,bh
  420581:	adc    edi,edx
  420583:	jns    0x420586
  420585:	add    ah,cl
  420587:	add    al,BYTE PTR [eax]
  420589:	add    cl,cl
  42058b:	mov    esi,0x53edcef8
  420590:	sub    ch,BYTE PTR [esi-0x77c44ced]
  420596:	jecxz  0x420563
  420598:	bound  eax,QWORD PTR [edx+0x4e]
  42059b:	fs repnz xchg al,al
  42059f:	repnz cmc 
  4205a1:	fdiv   DWORD PTR ds:0xe34d03f7
  4205a7:	aaa    
  4205a8:	jge    0x420613
  4205aa:	cmc    
  4205ab:	ss jnp 0x4205fc
  4205ae:	jle    0x4205d1
  4205b0:	adc    DWORD PTR [eax+0x842883],eax
  4205b6:	push   cs
  4205b7:	sbb    cl,BYTE PTR [edi-0xf3f2ef1]
  4205bd:	pushf  
  4205be:	mov    ebp,0x23132702
  4205c3:	inc    esi
  4205c4:	add    al,0x69
  4205c6:	xor    eax,0xb8596b5c
  4205cb:	repnz add bh,cl
  4205ce:	call   0x25ea:0x2c8b5086
  4205d5:	jmp    0xee85d626
  4205da:	outs   dx,DWORD PTR ds:[esi]
  4205db:	jnp    0x4205fe
  4205dd:	xor    al,0x68
  4205df:	push   ss
  4205e0:	clc    
  4205e1:	scas   eax,DWORD PTR es:[edi]
  4205e2:	pop    esi
  4205e3:	cld    
  4205e4:	inc    esi
  4205e5:	sub    ah,bh
  4205e7:	popa   
  4205e8:	push   ebx
  4205e9:	(bad)  
  4205ea:	int3   
  4205eb:	push   0xa0fc5a62
  4205f0:	imul   esi,DWORD PTR [edi+0x319d524b],0xc51a1aa4
  4205fa:	inc    ebx
  4205fb:	ss mov dh,0xd3
  4205fe:	imul   edi,ebx,0xffffff8a
  420601:	shl    BYTE PTR [esi+0x4c130151],0x2e
  420608:	inc    eax
  420609:	or     esi,DWORD PTR ds:0x63385029
  42060f:	and    BYTE PTR [eax-0x86b505e],ah
  420615:	leave  
  420616:	(bad)  [eax+esi*4]
  420619:	push   0xd5fdc8c7
  42061e:	and    BYTE PTR [ebx+0x41],cl
  420621:	xchg   DWORD PTR [edi],ebx
  420623:	iret   
  420624:	mov    al,ds:0x9a66db27
  420629:	out    dx,al
  42062a:	fld    TBYTE PTR [ebp+0x6bbd2840]
  420630:	(bad)  
  420631:	dec    ecx
  420632:	xchg   edi,eax
  420633:	les    esp,FWORD PTR [ebp+0x5e]
  420636:	sub    ax,0xb945
  42063a:	push   eax
  42063b:	cmp    DWORD PTR [edi-0x3bc70425],edi
  420641:	fcomp  QWORD PTR [esi-0x9affbf0]
  420647:	leave  
  420648:	icebp  
  420649:	jae    0x420682
  42064b:	out    dx,eax
  42064c:	xchg   edx,eax
  42064d:	mov    edx,DWORD PTR [ebp-0x5e0cb4e3]
  420653:	pop    eax
  420654:	adc    BYTE PTR [ebp-0x5867cfc8],dl
  42065a:	das    
  42065b:	push   ss
  42065c:	jae    0x4206db
  42065e:	je     0x4206a4
  420660:	push   esi
  420661:	xchg   ecx,eax
  420662:	mov    esp,ebx
  420664:	mov    ds:0x5d49d476,al
  420669:	and    DWORD PTR [eax+0x731ea35a],ebp
  42066f:	jg     0x4206ed
  420671:	push   ss
  420672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420673:	sbb    eax,0x19721e4c
  420678:	retf   
  420679:	(bad)  
  42067a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42067b:	fprem  
  42067d:	imul   edx,edx,0xffffffbf
  420680:	dec    esi
  420681:	push   ebx
  420682:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  420684:	or     esi,DWORD PTR [ecx+0x49d73a68]
  42068a:	cmp    eax,0x665c295d
  42068f:	push   ebp
  420690:	mov    ebx,0x25009fae
  420695:	and    al,0xee
  420697:	les    esp,FWORD PTR [edx+0x5d9c8a50]
  42069d:	call   0x7f3d648b
  4206a2:	mov    ds:0xbe0019f5,eax
  4206a7:	fs cld 
  4206a9:	push   0xffffffa3
  4206ab:	fiadd  DWORD PTR [eax]
  4206ad:	dec    edx
  4206ae:	repz jp 0x42067d
  4206b1:	leave  
  4206b2:	and    edx,edx
  4206b4:	rol    ecx,1
  4206b6:	xor    edx,edi
  4206b8:	fimul  WORD PTR [ebx]
  4206ba:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4206bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bd:	or     eax,0xc68ff718
  4206c2:	enter  0x983a,0x9a
  4206c6:	pop    edi
  4206c7:	(bad)  
  4206c8:	adc    al,0x68
  4206ca:	arpl   bx,si
  4206cc:	jmp    0x4206c9
  4206ce:	xor    cl,cl
  4206d0:	rcr    BYTE PTR [ecx+0xe],1
  4206d3:	push   ebx
  4206d4:	push   0x9ac627f
  4206d9:	sub    DWORD PTR [edi+0x40],ebx
  4206dc:	repz daa 
  4206de:	arpl   WORD PTR [eax+eiz*8+0x4bb8191a],cx
  4206e5:	fwait
  4206e6:	das    
  4206e7:	loope  0x420730
  4206e9:	fst    QWORD PTR [edi]
  4206eb:	cmp    dh,BYTE PTR [eax-0x2f]
  4206ee:	loope  0x42072b
  4206f0:	dec    ebx
  4206f1:	xchg   edx,eax
  4206f2:	dec    eax
  4206f3:	jb     0x42076c
  4206f5:	inc    edi
  4206f6:	sti    
  4206f7:	(bad)  
  4206f8:	test   al,0x25
  4206fa:	inc    eax
  4206fb:	les    eax,FWORD PTR [edx-0x6a3c9bb9]
  420701:	aad    0xd0
  420703:	lods   eax,DWORD PTR ds:[esi]
  420704:	jmp    0x1b7e:0xf6f6ac30
  42070b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42070c:	mov    ebp,0x18f7b64f
  420712:	sub    bl,dh
  420714:	(bad)  [esi+0x73]
  420717:	pop    ss
  420718:	std    
  420719:	pop    ecx
  42071a:	sbb    esp,DWORD PTR [ebx-0x67]
  42071d:	lea    esp,[ebx-0x9]
  420720:	dec    esi
  420721:	and    al,0xb0
  420723:	(bad)  
  420724:	rcl    BYTE PTR [ebx],cl
  420726:	pop    ecx
  420727:	jb     0x4206c5
  420729:	lock out dx,eax
  42072b:	add    bl,BYTE PTR [ebp-0x6bed2c5f]
  420731:	jge    0x420773
  420733:	repz scas eax,DWORD PTR es:[edi]
  420735:	sbb    DWORD PTR [ebp+0x24],esp
  420738:	adc    dl,BYTE PTR [ecx+0x10]
  42073b:	sbb    al,0x68
  42073d:	enter  0x39f2,0xaa
  420741:	call   0x30c2e27a
  420746:	aas    
  420747:	inc    edx
  420748:	fst    DWORD PTR ds:0x2039eeea
  42074e:	shl    BYTE PTR ds:0xe547305a,cl
  420754:	mov    esp,0x6ae58820
  420759:	loope  0x420736
  42075b:	inc    ebx
  42075c:	pop    edi
  42075d:	fdiv   QWORD PTR [esi-0x24]
  420760:	loopne 0x420780
  420762:	(bad)  
  420763:	fwait
  420764:	es in  eax,dx
  420766:	in     al,dx
  420767:	sbb    ebp,0x4d831746
  42076d:	loopne 0x4207a9
  42076f:	pop    ecx
  420770:	and    esp,DWORD PTR [edx-0x2f]
  420773:	or     eax,DWORD PTR [eax]
  420775:	test   BYTE PTR [eax+ebp*4+0x56],bh
  420779:	pop    edi
  42077a:	lahf   
  42077b:	rol    DWORD PTR [ebx-0x28a39e81],0xb7
  420782:	(bad)  
  420783:	fidiv  DWORD PTR [edx+0x7a]
  420786:	shl    BYTE PTR [eax+0x656bf1d3],0x58
  42078d:	inc    edi
  42078e:	ins    DWORD PTR es:[edi],dx
  42078f:	adc    al,0xfe
  420791:	popf   
  420792:	mov    bh,0x7
  420794:	pushf  
  420795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420796:	push   0xfb302cea
  42079b:	fcmovb st,st(4)
  42079d:	daa    
  42079e:	push   0xf53ac54
  4207a3:	mov    ?,WORD PTR [edi+edx*8-0x52ca212c]
  4207aa:	outs   dx,BYTE PTR ds:[esi]
  4207ab:	and    al,0x7c
  4207ad:	out    dx,al
  4207ae:	sahf   
  4207af:	hlt    
  4207b0:	jno    0x4207eb
  4207b2:	repnz scas eax,DWORD PTR es:[edi]
  4207b4:	sbb    eax,0x4faee5ee
  4207b9:	mov    dh,0xc5
  4207bb:	pop    edx
  4207bc:	(bad)  
  4207bd:	xor    BYTE PTR [eax-0x78c17bb0],bh
  4207c3:	mov    WORD PTR [eax+eax*4+0x21],es
  4207c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c8:	das    
  4207c9:	lods   al,BYTE PTR ds:[esi]
  4207ca:	ss daa 
  4207cc:	fsubr  DWORD PTR [esi+0x9]
  4207cf:	adc    al,BYTE PTR [esi+0x378f00f4]
  4207d5:	inc    ecx
  4207d6:	call   0xe703:0xd5bdc9f8
  4207dd:	loop   0x420787
  4207df:	or     ebp,DWORD PTR [ebp-0x6e]
  4207e2:	or     BYTE PTR [eax+ebp*2-0x34],bh
  4207e6:	std    
  4207e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e8:	or     DWORD PTR [ebp+0x44],ecx
  4207eb:	shl    DWORD PTR [ecx+0x5c],0x96
  4207ef:	add    al,0xf5
  4207f1:	scas   eax,DWORD PTR es:[edi]
  4207f2:	xor    ch,BYTE PTR [edi]
  4207f4:	pop    esi
  4207f5:	sbb    bh,BYTE PTR [esp+eiz*8+0x58]
  4207f9:	add    ah,BYTE PTR [esi]
  4207fb:	push   es
  4207fc:	mov    esi,0x1a41e03f
  420801:	push   ebx
  420802:	call   0x79ea:0x3f177362
  420809:	in     al,dx
  42080a:	fcmovu st,st(6)
  42080c:	(bad)  
  42080d:	hlt    
  42080e:	pushf  
  42080f:	push   ebx
  420810:	xor    BYTE PTR [ecx-0x7d6ef9d3],0xf5
  420817:	mov    dl,BYTE PTR [edi-0x40e66637]
  42081d:	push   edx
  42081e:	push   DWORD PTR [edx+eiz*1]
  420821:	mov    cl,0x9f
  420823:	hlt    
  420824:	push   0xfffffffd
  420826:	aaa    
  420827:	cmp    BYTE PTR [ebp-0x48d24efb],dl
  42082d:	jae    0x42083d
  42082f:	ja     0x4207e2
  420831:	mov    al,ds:0x5e9022c6
  420836:	add    ebx,ebp
  420838:	call   0xd14e49a7
  42083d:	js     0x42082c
  42083f:	mov    al,0x79
  420841:	sub    edx,DWORD PTR [edx+0x69]
  420844:	adc    dh,bl
  420846:	xchg   ebx,eax
  420847:	rcr    BYTE PTR ds:0x26c7937b,0xfc
  42084e:	popf   
  42084f:	push   cs
  420850:	dec    eax
  420851:	(bad)  
  420852:	imul   ebx,DWORD PTR ds:0x5982,0x0
  42085c:	add    BYTE PTR [eax],al
  42085e:	add    BYTE PTR [eax],al
  420860:	add    BYTE PTR [eax],al
  420862:	mov    ebp,edx
  420864:	rcr    DWORD PTR [ebx],cl
  420866:	repz cmp ecx,ebx
  420869:	cli    
  42086a:	in     al,dx
  42086b:	jg     0x4208a4
  42086d:	loopne 0x420813
  42086f:	clc    
  420870:	xchg   esi,eax
  420871:	xchg   esi,eax
  420873:	jl     0x420876
  420875:	add    ah,cl
  420877:	add    al,BYTE PTR [eax]
  420879:	add    bl,ah
  42087b:	addr16 push ebx
  42087d:	xchg   ecx,eax
  42087e:	sbb    BYTE PTR [ecx+0xd],cl
  420881:	xor    esi,DWORD PTR [edi]
  420883:	loopne 0x4208fa
  420885:	mov    DWORD PTR [ecx+0x6e],esp
  420888:	sbb    eax,0x7721d127
  42088d:	push   edi
  42088e:	lds    edi,FWORD PTR [ebx-0x4a22c3bb]
  420894:	je     0x4208c8
  420896:	mov    cx,0x6afa
  42089a:	enter  0x7cfb,0xe0
  42089e:	adc    edi,0xe33b4af5
  4208a4:	xor    al,0x46
  4208a6:	add    edi,DWORD PTR [ecx]
  4208a8:	or     al,0xc
  4208aa:	popa   
  4208ab:	imul   esp,DWORD PTR [edx+0x32],0xbc16a152
  4208b2:	cdq    
  4208b3:	loop   0x420874
  4208b5:	sti    
  4208b6:	adc    eax,0x5bb2fbe1
  4208bb:	adc    bh,BYTE PTR [edi+0x33]
  4208be:	and    ebp,DWORD PTR [esi+0x4c]
  4208c1:	or     al,0x61
  4208c3:	cmp    BYTE PTR [edi-0x62],bh
  4208c6:	aas    
  4208c7:	fdivr  QWORD PTR [edx]
  4208c9:	push   ds
  4208ca:	xchg   BYTE PTR [ecx+0x7c],ch
  4208cd:	pop    eax
  4208ce:	xchg   edx,eax
  4208cf:	inc    ecx
  4208d0:	adc    ecx,edx
  4208d2:	add    BYTE PTR [esi+0x55],0x8f
  4208d6:	adc    cl,BYTE PTR [ebx]
  4208d8:	inc    esp
  4208d9:	push   ecx
  4208da:	jecxz  0x420872
  4208dc:	mov    dl,BYTE PTR [ebx]
  4208de:	xchg   BYTE PTR [edi+0x43],ah
  4208e1:	or     DWORD PTR [eax+0x611d01aa],ebp
  4208e7:	js     0x420899
  4208e9:	sub    BYTE PTR [ebx+edx*1],dl
  4208ec:	std    
  4208ed:	pop    esi
  4208ee:	call   0x1970:0xe43fb96b
  4208f5:	shrd   edi,ebp,0x5d
  4208f9:	(bad)  
  4208fa:	xchg   esp,eax
  4208fb:	mov    eax,ds:0x74f1fa0d
  420900:	lock sbb al,0x57
  420903:	shl    DWORD PTR [esi],0x6
  420906:	jp     0x4208f4
  420908:	test   eax,0xb8515c8c
  42090d:	add    bh,ch
  42090f:	inc    ebp
  420910:	ret    0xc1cd
  420913:	in     al,dx
  420914:	pop    edi
  420915:	(bad)  
  420916:	aaa    
  420917:	sub    al,0x7c
  420919:	imul   edi,DWORD PTR [ebp-0x77],0x757a20e7
  420920:	loopne 0x4208d3
  420922:	mov    al,0x6e
  420924:	adc    esi,DWORD PTR [esi-0x778fa9ed]
  42092a:	adc    edi,esp
  42092c:	pop    ecx
  42092d:	cmp    DWORD PTR [ecx-0x3caf3ee9],edx
  420933:	mov    ch,0x38
  420935:	popf   
  420936:	daa    
  420937:	rcr    DWORD PTR [ecx+0x500c5dde],cl
  42093d:	(bad)  
  42093e:	int    0x47
  420940:	mov    cs,WORD PTR [ecx]
  420942:	scas   al,BYTE PTR es:[edi]
  420943:	mov    cl,0x13
  420945:	(bad)  
  420946:	shl    DWORD PTR [esi],0x45
  420949:	in     al,0x55
  42094b:	xchg   ebx,eax
  42094c:	cmp    BYTE PTR [esi],ah
  42094e:	(bad)  
  42094f:	div    BYTE PTR [ebx]
  420951:	inc    edi
  420952:	out    dx,al
  420953:	imul   edi,DWORD PTR [eax+0x2266be2e],0x37e05348
  42095d:	nop
  42095e:	icebp  
  42095f:	adc    DWORD PTR [edi],0x2b
  420962:	test   DWORD PTR [ebx-0x4c],eax
  420965:	(bad)  
  420966:	pop    ss
  420967:	sbb    al,0x8d
  420969:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42096b:	inc    ecx
  42096c:	(bad)  
  42096d:	jbe    0x4209db
  42096f:	je     0x4209b1
  420971:	sbb    BYTE PTR [esi+0x27ae598d],dh
  420977:	or     BYTE PTR [edx+0x7b],bl
  42097a:	add    dl,0xa1
  42097d:	sbb    ecx,DWORD PTR [eax-0xa]
  420980:	sub    DWORD PTR [ebx-0x4c],eax
  420983:	xchg   esp,eax
  420984:	das    
  420985:	mov    ebx,0x7bfd2946
  42098a:	je     0x4209ed
  42098c:	jae    0x420932
  42098e:	add    DWORD PTR [ebx-0x2e18c390],eax
  420994:	leave  
  420995:	cli    
  420996:	arpl   WORD PTR [ecx+0x4c],bp
  420999:	dec    esi
  42099a:	and    DWORD PTR [esp+edi*4+0x31efba46],eax
  4209a1:	das    
  4209a2:	scas   al,BYTE PTR es:[edi]
  4209a3:	jg     0x420949
  4209a5:	mov    cl,0x89
  4209a7:	mov    al,cl
  4209a9:	jecxz  0x42093a
  4209ab:	sbb    ch,0x3e
  4209ae:	inc    edx
  4209af:	mov    gs,WORD PTR [bx+si+0x640]
  4209b4:	cmc    
  4209b5:	ja     0x420a1f
  4209b7:	test   DWORD PTR ds:0x186e6130,0x5c4dd6f1
  4209c1:	pop    ecx
  4209c2:	xor    DWORD PTR [eax],edx
  4209c4:	xor    eax,0xd049c783
  4209c9:	xchg   ecx,eax
  4209ca:	push   ebx
  4209cb:	mov    ebp,0xf9b3a43c
  4209d0:	in     eax,0x68
  4209d2:	push   esi
  4209d3:	int3   
  4209d4:	mov    ds:0x3e480a29,al
  4209d9:	add    ah,bh
  4209db:	jp     0x420a22
  4209dd:	add    DWORD PTR [edi-0x45a42f3],eax
  4209e3:	pop    eax
  4209e4:	lahf   
  4209e5:	rcl    dx,0x5b
  4209e9:	ja     0x420a32
  4209eb:	stos   DWORD PTR es:[edi],eax
  4209ec:	loope  0x4209fe
  4209ee:	js     0x420a31
  4209f0:	test   al,0x9a
  4209f2:	and    bh,BYTE PTR [edi+eax*2-0x336f371d]
  4209f9:	push   es
  4209fa:	cmp    eax,0x2e756946
  4209ff:	dec    edx
  420a00:	push   ebx
  420a01:	outs   dx,BYTE PTR ds:[esi]
  420a02:	mov    ds:0x4cc52d07,al
  420a07:	adc    eax,0x8eefa4b4
  420a0c:	jp     0x42099d
  420a0e:	test   eax,0x4e3dd2ee
  420a13:	pushf  
  420a14:	imul   ebp,edi,0xffffffa6
  420a17:	mov    edx,0x22c009ea
  420a1c:	and    ch,0xd6
  420a1f:	add    eax,0x430862b
  420a24:	dec    edi
  420a25:	mov    ebx,0xb268233e
  420a2a:	xor    edi,ecx
  420a2c:	dec    edi
  420a2d:	add    dl,BYTE PTR [eax+0x47295adc]
  420a33:	or     al,0x87
  420a35:	xchg   DWORD PTR [esi-0x7e8c0078],esp
  420a3b:	add    DWORD PTR [edx],ebx
  420a3d:	push   eax
  420a3e:	icebp  
  420a3f:	sahf   
  420a40:	(bad)  [edi]
  420a42:	jo     0x420a04
  420a44:	lods   al,BYTE PTR ds:[esi]
  420a45:	inc    esp
  420a46:	js     0x4209df
  420a48:	div    DWORD PTR [ecx-0x3cfad6c1]
  420a4e:	cmc    
  420a4f:	mov    esi,0xb007fb23
  420a54:	aaa    
  420a55:	inc    ebp
  420a56:	loop   0x420a52
  420a58:	sbb    eax,0x4dc1c9fe
  420a5d:	loopne 0x420a7f
  420a5f:	out    0x33,eax
  420a61:	xchg   BYTE PTR [edi],cl
  420a63:	lock or BYTE PTR [edx],ah
  420a66:	das    
  420a67:	and    dl,BYTE PTR gs:[edx+ecx*8]
  420a6b:	ins    BYTE PTR es:[edi],dx
  420a6c:	dec    edx
  420a6d:	ror    DWORD PTR [eax+0x62],cl
  420a70:	jg     0x4209f6
  420a72:	push   cs
  420a73:	sub    DWORD PTR [edi+0x3a],esi
  420a76:	data16 or al,0xba
  420a79:	pop    edx
  420a7a:	push   edx
  420a7b:	or     cl,ah
  420a7d:	ins    BYTE PTR es:[edi],dx
  420a7e:	add    BYTE PTR [ecx+0x60],bh
  420a81:	pop    ss
  420a82:	data16 jns 0x420a4f
  420a85:	and    BYTE PTR [edi],dl
  420a87:	psrlw  mm1,mm7
  420a8a:	push   ebp
  420a8b:	xor    esp,DWORD PTR [edi-0x70]
  420a8e:	(bad)  
  420a8f:	jbe    0x420aaa
  420a91:	or     esp,DWORD PTR [ecx]
  420a93:	cmp    DWORD PTR [eax-0x17eabc0],0x67
  420a9a:	and    DWORD PTR [edi],ebx
  420a9c:	into   
  420a9d:	push   eax
  420a9e:	mov    bl,0x5e
  420aa0:	cmp    bp,cx
  420aa3:	mov    ch,BYTE PTR [esi+0x3d]
  420aa6:	or     dh,al
  420aa8:	mov    bl,0xa1
  420aaa:	inc    edi
  420aab:	out    0xb7,eax
  420aad:	out    0x15,al
  420aaf:	scas   eax,DWORD PTR es:[edi]
  420ab0:	dec    esi
  420ab1:	xchg   ebp,eax
  420ab2:	sbb    bl,dl
  420ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab5:	inc    esp
  420ab6:	retf   0x73fa
  420ab9:	adc    DWORD PTR [eax+0x64],0x18
  420abd:	loop   0x420ab5
  420abf:	je     0x420b1a
  420ac1:	pop    ebp
  420ac2:	jae    0x420ac8
  420ac4:	cmp    al,0x63
  420ac6:	and    BYTE PTR [edi-0x46],ah
  420ac9:	add    BYTE PTR [ecx+0x10],0x96
  420acd:	pop    es
  420ace:	sti    
  420acf:	dec    esi
  420ad0:	mov    cl,0x4
  420ad2:	and    DWORD PTR [ecx+0x2a],esp
  420ad5:	dec    edi
  420ad6:	and    ch,BYTE PTR [edi+ebx*1+0x64]
  420ada:	mov    DWORD PTR [edi-0x4b],edi
  420add:	sub    BYTE PTR [esi+0x5db2339d],0xf3
  420ae4:	aad    0x36
  420ae6:	adc    eax,0x4786e26c
  420aeb:	push   esi
  420aec:	dec    ecx
  420aed:	(bad)  
  420aee:	push   ss
  420aef:	lock push ss
  420af1:	mul    BYTE PTR [ecx+0x11]
  420af4:	and    al,0x25
  420af6:	add    BYTE PTR [ecx],ch
  420af8:	mov    esi,0xb7a857dc
  420afd:	cwde   
  420afe:	lods   al,BYTE PTR ds:[esi]
  420aff:	ror    ecx,cl
  420b01:	div    BYTE PTR [ebp-0x4025c734]
  420b07:	add    cl,BYTE PTR [edi+0x30]
  420b0a:	inc    esp
  420b0b:	test   BYTE PTR [ebx+ecx*4+0x28],bl
  420b0f:	ja     0x420b02
  420b11:	or     bl,BYTE PTR ds:0xea071d67
  420b17:	jae    0x420b81
  420b19:	dec    eax
  420b1a:	mov    dh,0xb4
  420b1c:	push   ecx
  420b1d:	adc    dl,BYTE PTR fs:0xa83dda9b
  420b24:	cmc    
  420b25:	dec    edx
  420b26:	dec    ecx
  420b27:	fld    DWORD PTR [esi]
  420b29:	arpl   si,di
  420b2b:	lds    esi,FWORD PTR [edx]
  420b2d:	fmul   QWORD PTR [ecx*4+0x351c3472]
  420b34:	dec    ecx
  420b35:	les    ebx,FWORD PTR [edx+0x3f6374d1]
  420b3b:	outs   dx,BYTE PTR ds:[esi]
  420b3c:	mov    ds:0x4ced42ca,al
  420b41:	sahf   
  420b42:	cmp    bh,BYTE PTR [esi]
  420b44:	mov    bh,0xc3
	...
  420b52:	shl    BYTE PTR [edx],cl
  420b54:	xchg   esi,eax
  420b55:	call   0x1e52:0x6adebef6
  420b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5d:	and    dl,BYTE PTR [ebx+esi*4-0x65]
  420b61:	add    al,0x92
  420b63:	jg     0x420b66
  420b65:	add    ah,cl
  420b67:	add    al,BYTE PTR [eax]
  420b69:	add    al,dh
  420b6b:	(bad)  
  420b6c:	test   ch,0x5c
  420b6f:	sub    DWORD PTR [eax+0x41],eax
  420b72:	mov    BYTE PTR [ebp+0x3ddd2648],ch
  420b78:	xchg   esp,eax
  420b79:	push   ds
  420b7a:	scas   eax,DWORD PTR es:[edi]
  420b7b:	mov    al,0xdc
  420b7d:	cmp    eax,0x30b73dd
  420b82:	inc    ebp
  420b83:	add    edi,esp
  420b85:	push   es
  420b86:	adc    ebx,DWORD PTR [edx+0x5a5dfce6]
  420b8c:	inc    esi
  420b8d:	jmp    0x420b60
  420b8f:	mov    BYTE PTR [eax-0x5f],cl
  420b92:	test   BYTE PTR [esi+ebx*1-0x7f],dh
  420b96:	xor    DWORD PTR [edi-0x53],0xfdbafc1b
  420b9d:	push   0xd5660086
  420ba2:	adc    BYTE PTR [ecx-0x27c1f83f],0x44
  420ba9:	lods   eax,DWORD PTR ds:[esi]
  420baa:	dec    BYTE PTR [ebx-0x6a0c9c9d]
  420bb0:	jne    0x420b86
  420bb2:	rsqrtps xmm2,XMMWORD PTR [esi+0x6f]
  420bb6:	scas   al,BYTE PTR es:[edi]
  420bb7:	rcr    DWORD PTR [esi+eiz*8],1
  420bba:	and    al,0x46
  420bbc:	dec    bl
  420bbe:	jnp    0x420c09
  420bc0:	dec    esi
  420bc1:	outs   dx,DWORD PTR ds:[esi]
  420bc2:	or     eax,0xf1212918
  420bc7:	mov    ch,BYTE PTR [eax]
  420bc9:	or     BYTE PTR [ecx+0x6fc693f9],ah
  420bcf:	push   eax
  420bd0:	cwde   
  420bd1:	push   es
  420bd2:	sbb    bh,al
  420bd4:	mov    dl,BYTE PTR [esi-0x6c]
  420bd7:	mov    ebp,DWORD PTR [esp+eiz*2]
  420bda:	aaa    
  420bdb:	sub    BYTE PTR [edi],dh
  420bdd:	dec    ebx
  420bde:	pop    eax
  420bdf:	sbb    DWORD PTR [ebp+0x30cd8490],ebx
  420be5:	jne    0x420b89
  420be7:	and    esp,DWORD PTR [edi-0x29]
  420bea:	mov    ecx,0x850a3ac8
  420bef:	xor    BYTE PTR [eax-0x49a13625],0xc1
  420bf6:	int3   
  420bf7:	push   eax
  420bf8:	jmp    0xa045:0xa8e3ebb3
  420bff:	jecxz  0x420bda
  420c01:	add    al,0x16
  420c03:	addr16 inc esp
  420c05:	adc    dl,al
  420c07:	pop    ss
  420c08:	les    ebx,FWORD PTR [ebp-0x1b]
  420c0b:	scas   al,BYTE PTR es:[edi]
  420c0c:	mov    dl,0xd6
  420c0e:	fwait
  420c0f:	push   ds
  420c10:	sbb    ebx,DWORD PTR [eax-0x3f]
  420c13:	sub    al,0x81
  420c15:	or     DWORD PTR [esi-0x3c2f9707],ecx
  420c1b:	inc    esp
  420c1c:	push   ecx
  420c1d:	ret    0x781d
  420c20:	cmp    ebx,DWORD PTR [ecx]
  420c22:	call   0x8d571c0b
  420c27:	sub    dl,BYTE PTR [edx-0x5428f4ed]
  420c2d:	adc    DWORD PTR [edx-0x42],0x91373c30
  420c34:	icebp  
  420c35:	sub    edi,edi
  420c37:	bound  edi,QWORD PTR [esi+0x30]
  420c3a:	test   dl,ch
  420c3c:	dec    esp
  420c3d:	mov    bx,0xaa7a
  420c41:	retf   
  420c42:	lahf   
  420c43:	push   esi
  420c44:	mov    ds:0x3067b093,eax
  420c49:	jns    0x420c69
  420c4b:	retf   0xa73c
  420c4e:	pushf  
  420c4f:	ficom  DWORD PTR [esp+eiz*2-0x2128c55d]
  420c56:	in     eax,0x8e
  420c58:	mov    DWORD PTR [ebp+0x59],ebp
  420c5b:	add    DWORD PTR ss:[esi+0x12b156d1],ecx
  420c62:	rcr    DWORD PTR [edx],0x9c
  420c65:	aad    0x98
  420c67:	jge    0x420cb0
  420c69:	sbb    dl,BYTE PTR [ebp+0x73884ad]
  420c6f:	cmp    al,0x5e
  420c71:	mov    dh,0x51
  420c73:	mov    WORD PTR [esi-0x2898f528],?
  420c79:	enter  0x5df,0xf4
  420c7d:	in     eax,dx
  420c7e:	pop    ds
  420c7f:	imul   eax,ebx,0x52
  420c82:	ret    
  420c83:	pop    esp
  420c84:	mov    edi,0x4d206c75
  420c89:	mov    al,0xac
  420c8b:	ret    0xb170
  420c8e:	jg     0x420cd1
  420c90:	jg     0x420c67
  420c92:	cwde   
  420c93:	das    
  420c94:	add    ecx,edi
  420c96:	pop    edi
  420c97:	jmp    0x420cb9
  420c99:	mov    dh,0x3b
  420c9b:	dec    ecx
  420c9c:	and    BYTE PTR [eax-0xd],bl
  420c9f:	ds mov fs,ebp
  420ca2:	test   eax,0xe8e9292e
  420ca7:	mov    ds:0xe37072ce,al
  420cac:	or     dh,BYTE PTR [ebp-0x2f]
  420caf:	mov    ah,0x43
  420cb1:	popf   
  420cb2:	or     eax,0x3efd9e90
  420cb7:	push   ebx
  420cb8:	ins    DWORD PTR es:[edi],dx
  420cb9:	mov    esi,0x18795160
  420cbe:	or     DWORD PTR [ecx-0x169078ef],eax
  420cc4:	repnz or ch,BYTE PTR [esi+0x6b]
  420cc8:	div    BYTE PTR [edx]
  420cca:	popf   
  420ccb:	mov    esi,0x1d046fa7
  420cd0:	scas   eax,DWORD PTR es:[edi]
  420cd1:	sub    DWORD PTR [ecx],edi
  420cd3:	loope  0x420caf
  420cd5:	xchg   ebx,eax
  420cd6:	repz and esp,DWORD PTR es:[edi+0x7ca5ff2c]
  420cde:	mov    eax,0xbfd03cb
  420ce3:	and    BYTE PTR [ebx],0x20
  420ce6:	add    eax,0xb989d05a
  420ceb:	pop    esi
  420cec:	dec    esi
  420ced:	and    BYTE PTR [edx+0x41],bl
  420cf0:	cmp    ch,BYTE PTR [ecx-0xe]
  420cf3:	sbb    al,0xc4
  420cf5:	ja     0x420d39
  420cf7:	(bad)  
  420cf8:	cmp    DWORD PTR gs:[edi+0x3124ceef],esp
  420cff:	push   ecx
  420d00:	fs pop ebp
  420d02:	nop
  420d03:	adc    esi,edx
  420d05:	cmp    DWORD PTR [esi+0x6e],0xffffff8f
  420d09:	aaa    
  420d0a:	mov    esp,ebp
  420d0c:	inc    esi
  420d0d:	mov    al,0xf8
  420d0f:	sub    DWORD PTR [esi],ebp
  420d11:	rol    DWORD PTR [ecx-0x8642711],1
  420d17:	push   es
  420d18:	fcmovb st,st(0)
  420d1a:	mov    ss,WORD PTR [ebx-0x30]
  420d1d:	je     0x420d86
  420d1f:	mov    ds:0xd1710b61,eax
  420d24:	addr16 cli 
  420d26:	lahf   
  420d27:	mov    ebx,0x5431119f
  420d2c:	cdq    
  420d2d:	mov    bh,0xa0
  420d2f:	lea    edx,[ebx+0x75402dfd]
  420d35:	test   eax,0x12a64de3
  420d3a:	(bad)  
  420d3b:	cld    
  420d3c:	in     al,0x73
  420d3e:	ja     0x420d3d
  420d40:	adc    dl,BYTE PTR [ebx+0xc4e21c0]
  420d46:	lahf   
  420d47:	mov    dl,0xb7
  420d49:	aad    0xcb
  420d4b:	(bad)  
  420d4c:	(bad)  
  420d4d:	jmp    0x420dc0
  420d4f:	cmp    al,0xea
  420d51:	push   eax
  420d52:	xor    eax,0xb03c3a64
  420d57:	sahf   
  420d58:	xor    DWORD PTR [eax+ebp*4+0x23],esp
  420d5c:	cmp    edi,ecx
  420d5e:	inc    esp
  420d5f:	cdq    
  420d60:	xor    al,0xb4
  420d62:	dec    ebp
  420d63:	mov    dl,0xf8
  420d65:	cld    
  420d66:	pop    ecx
  420d67:	ret    
  420d68:	mov    dh,BYTE PTR [edi+0x1a7d8158]
  420d6e:	jo     0x420cfe
  420d70:	adc    bl,bl
  420d72:	pop    ds
  420d73:	push   eax
  420d74:	ud0    esp,DWORD PTR [ecx]
  420d77:	mov    esi,esi
  420d79:	lds    ebx,FWORD PTR [edx-0xbdff228]
  420d7f:	pop    edx
  420d80:	sti    
  420d81:	and    DWORD PTR [edi+0x439779f],0xffffffc4
  420d88:	pushf  
  420d89:	je     0x420d7e
  420d8b:	sahf   
  420d8c:	mov    al,ds:0xf90fe3e9
  420d91:	dec    ebx
  420d92:	inc    ebx
  420d93:	fs into 
  420d95:	in     eax,dx
  420d96:	in     al,dx
  420d97:	(bad)  
  420d98:	stos   DWORD PTR es:[edi],eax
  420d99:	push   ss
  420d9a:	adc    dh,BYTE PTR [esi+0x2dc343dd]
  420da0:	sub    eax,0xce6cc656
  420da5:	neg    BYTE PTR [edi+0x3d]
  420da8:	adc    DWORD PTR [edx+0x2b],edx
  420dab:	ins    DWORD PTR es:[edi],dx
  420dac:	test   al,0xb5
  420dae:	add    edi,DWORD PTR [eax-0x35]
  420db1:	push   0xfffffff0
  420db3:	lock sahf 
  420db5:	scas   al,BYTE PTR es:[edi]
  420db6:	adc    DWORD PTR [ebp+0x9],esp
  420db9:	mov    dl,0x87
  420dbb:	mov    dh,BYTE PTR [eax+0x79d2aa85]
  420dc1:	push   ecx
  420dc2:	cmp    edx,edx
  420dc4:	inc    eax
  420dc5:	sbb    ah,BYTE PTR [esi*8+0x88b502d]
  420dcc:	mov    ?,WORD PTR [ecx+eiz*2-0x4ea42fc8]
  420dd3:	rol    BYTE PTR [ebp-0x4f67792e],1
  420dd9:	test   al,0x5b
  420ddb:	or     BYTE PTR [ecx+0x278ee3dd],ch
  420de1:	fistp  WORD PTR [edi]
  420de3:	sbb    eax,0xf398c787
  420de8:	addr16 or edx,0xfffffffd
  420dec:	adc    ch,BYTE PTR [edx-0x69c7dbef]
  420df2:	adc    DWORD PTR [ebx+0x68781925],edx
  420df8:	(bad)  
  420dfa:	rcr    BYTE PTR [eax-0x4],0xde
  420dfe:	push   ebp
  420dff:	dec    ebp
  420e00:	loopne 0x420d92
  420e02:	outs   dx,DWORD PTR ds:[esi]
  420e03:	sub    DWORD PTR [ebp+0x7ff460df],esi
  420e09:	sub    al,0x22
  420e0b:	sub    al,0x8a
  420e0d:	pop    ds
  420e0e:	dec    edi
  420e0f:	data16 out 0x2b,al
  420e12:	pop    eax
  420e13:	and    DWORD PTR [ecx-0x6a0d257a],eax
  420e19:	push   es
  420e1a:	test   esi,0xa0ef436f
  420e20:	xor    eax,0x8f43abeb
  420e25:	pop    ss
  420e26:	add    bl,BYTE PTR ds:0xadb22075
  420e2c:	ss inc eax
  420e2e:	adc    eax,0x68532deb
  420e33:	inc    edx
  420e34:	daa    
  420e35:	in     eax,0x0
	...
  420e3f:	add    BYTE PTR [eax],al
  420e41:	add    ch,bl
  420e43:	cmp    al,0x8f
  420e45:	mov    esp,0x7dffbfef
  420e4a:	add    al,BYTE PTR [ebp-0x2571723f]
  420e50:	and    eax,0x1825e95
  420e55:	add    ah,cl
  420e57:	add    al,BYTE PTR [eax]
  420e59:	add    BYTE PTR [ebx+0x1d7d7f75],dl
  420e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e60:	and    al,0xc2
  420e62:	push   ebp
  420e63:	xchg   DWORD PTR [ebx],edx
  420e65:	aam    0xdf
  420e67:	or     eax,ebp
  420e69:	sbb    esi,DWORD PTR [edi-0x3ffcb36e]
  420e6f:	jno    0x420ea3
  420e71:	in     al,dx
  420e72:	mov    ss,WORD PTR [edi-0x67]
  420e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e76:	int3   
  420e77:	pop    ds
  420e78:	in     eax,0xa
  420e7a:	sti    
  420e7b:	pop    edx
  420e7c:	lods   eax,DWORD PTR ds:[esi]
  420e7d:	(bad)  
  420e7e:	lahf   
  420e7f:	xchg   esp,eax
  420e80:	sbb    DWORD PTR [edx-0x68],edx
  420e83:	sbb    eax,0xe520c2c7
  420e88:	cmp    BYTE PTR ds:0x568da457,0x5b
  420e8f:	sub    eax,0x433909be
  420e94:	inc    ebx
  420e95:	jmp    0xfc2811dd
  420e9a:	shl    bh,0x14
  420e9d:	add    BYTE PTR [ebx-0x2cc6d12c],al
  420ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea4:	mov    ch,0xce
  420ea6:	je     0x420eb3
  420ea8:	push   eax
  420ea9:	fucomi st,st(1)
  420eab:	out    dx,al
  420eac:	push   edx
  420ead:	lods   eax,DWORD PTR ds:[esi]
  420eae:	inc    ebp
  420eaf:	push   es
  420eb0:	jp     0x420e52
  420eb2:	ja     0x420f24
  420eb4:	aam    0x57
  420eb6:	add    ah,BYTE PTR [edi]
  420eb8:	(bad)  [eax+0x20]
  420ebb:	dec    edi
  420ebc:	aas    
  420ebd:	mov    al,ah
  420ebf:	jg     0x420e9f
  420ec1:	jmp    0xc54d:0x9e867894
  420ec8:	rcr    BYTE PTR [edx-0x1],cl
  420ecb:	aaa    
  420ecc:	xor    BYTE PTR [edx+0xe3cfefc],dl
  420ed2:	sub    eax,0xe93da090
  420ed7:	dec    ecx
  420ed8:	fisttp QWORD PTR [edx+0x273c9ca1]
  420ede:	std    
  420edf:	or     al,0x49
  420ee1:	pop    ecx
  420ee2:	popf   
  420ee3:	mov    dh,0x18
  420ee5:	ret    0x6e15
  420ee8:	cli    
  420ee9:	adc    esi,DWORD PTR [edx-0x5286e3e7]
  420eef:	pop    esi
  420ef0:	nop
  420ef1:	adc    BYTE PTR [eax-0xc35e160],ch
  420ef7:	shr    DWORD PTR [ecx],0xb7
  420efa:	outs   dx,DWORD PTR es:[esi]
  420efc:	mov    ecx,0xaea4de56
  420f01:	and    DWORD PTR [esi+0x3d],ecx
  420f04:	mov    BYTE PTR [ebx],al
  420f06:	or     eax,0xfaed3119
  420f0b:	and    ah,BYTE PTR [ecx-0x5]
  420f0e:	add    eax,0x75c4ab3e
  420f13:	mov    edx,0x54112eaf
  420f18:	pop    ss
  420f19:	pop    ss
  420f1a:	and    BYTE PTR [ecx+eiz*2-0x3fb012d7],0x8f
  420f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f23:	(bad)  
  420f24:	cwde   
  420f25:	mov    ebp,ecx
  420f27:	or     ebp,DWORD PTR [ebp-0x15]
  420f2a:	adc    DWORD PTR [esi+0x14581b0b],0x6afa5b3c
  420f34:	mov    cl,0xbc
  420f36:	test   eax,0x67b6b6c2
  420f3b:	or     bl,bh
  420f3d:	in     eax,dx
  420f3e:	mov    WORD PTR [edi-0xa],gs
  420f41:	out    0xd4,al
  420f43:	aam    0x28
  420f45:	call   0x94580e8a
  420f4a:	test   DWORD PTR [eax+0x3e96c27a],ebx
  420f50:	(bad)  
  420f51:	push   esi
  420f52:	jmp    0x420ee8
  420f54:	jmp    0x29e7806f
  420f59:	gs pop edx
  420f5b:	das    
  420f5c:	repz mov eax,0x56d23719
  420f62:	ds mov ecx,0x54b061f1
  420f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f69:	cmp    BYTE PTR ds:[ebx-0x58398dab],al
  420f70:	pusha  
  420f71:	and    ebx,DWORD PTR [eax+0x46e00032]
  420f77:	popa   
  420f78:	lahf   
  420f79:	lods   eax,DWORD PTR ds:[esi]
  420f7a:	pop    edi
  420f7b:	data16 out 0xda,al
  420f7e:	dec    DWORD PTR [eax]
  420f80:	push   ebx
  420f81:	jnp    0x420fe8
  420f83:	push   ecx
  420f84:	cdq    
  420f85:	inc    edi
  420f86:	test   BYTE PTR [ebx-0x6e],ch
  420f89:	jp     0x420f77
  420f8b:	iret   
  420f8c:	ss and ebx,ecx
  420f8f:	cmc    
  420f90:	loope  0x42100d
  420f92:	cwde   
  420f93:	mov    eax,eax
  420f95:	mov    ah,0x2c
  420f97:	mov    al,0x40
  420f99:	fwait
  420f9a:	repz mov al,ds:0x74a0b388
  420fa0:	push   ds
  420fa1:	sbb    esp,DWORD PTR [eax+0x5b878567]
  420fa7:	out    0x3,al
  420fa9:	retf   0x230d
  420fac:	shl    DWORD PTR [ecx+esi*2+0x5e84d6bc],cl
  420fb3:	clc    
  420fb4:	adc    ecx,eax
  420fb6:	mov    eax,DWORD PTR [ecx+0x7b]
  420fb9:	pop    ecx
  420fba:	mov    al,0x5d
  420fbc:	enter  0x538d,0x68
  420fc0:	push   ds
  420fc1:	xchg   edx,eax
  420fc2:	mov    esi,0x95933b5b
  420fc7:	xchg   ecx,eax
  420fc8:	dec    ebp
  420fc9:	sub    DWORD PTR [eax+0x40],edi
  420fcc:	inc    ebp
  420fcd:	push   ecx
  420fce:	push   esi
  420fcf:	gs mov ecx,0x802a8f78
  420fd5:	std    
  420fd6:	frstpm(287 only) 
  420fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd9:	das    
  420fda:	add    bl,bl
  420fdc:	(bad)  
  420fdd:	cs push ebp
  420fdf:	shl    esi,1
  420fe1:	xchg   esp,eax
  420fe2:	pop    ds
  420fe3:	sub    ah,ch
  420fe5:	es int3 
  420fe7:	fdivr  DWORD PTR [edi-0x123245e9]
  420fed:	mov    esi,0xc5cfab4b
  420ff2:	mov    es,WORD PTR ds:0x2b85e48d
  420ff8:	and    eax,0xf46ac059
  420ffd:	jecxz  0x421024
  420fff:	adc    al,0xe7
  421001:	mov    al,0x9a
  421003:	xchg   ecx,eax
  421004:	add    eax,0x698c7010
  421009:	mov    al,ds:0xf5924aad
  42100e:	sub    DWORD PTR [ebx+eax*1+0x71b1b43c],esi
  421015:	pop    edx
  421016:	repnz ds pop ss
  421019:	sub    al,0xd5
  42101b:	mov    al,0xd7
  42101d:	dec    edi
  42101e:	xchg   edi,eax
  42101f:	xor    esi,esi
  421021:	test   ebx,0x4b6e43e3
  421027:	push   edx
  421028:	sub    esp,DWORD PTR [eax+0x7155f953]
  42102e:	lahf   
  42102f:	push   ecx
  421030:	ror    cl,1
  421032:	dec    edi
  421033:	iret   
  421034:	fiadd  DWORD PTR [ecx+0x404e51fb]
  42103a:	mov    edi,0xe16d3458
  42103f:	mov    edi,0x5e9d586e
  421044:	or     eax,0xab496283
  421049:	sbb    ah,BYTE PTR [eax+0xe]
  42104c:	out    0xc1,eax
  42104e:	dec    esi
  42104f:	inc    ebp
  421050:	inc    ecx
  421051:	sbb    bh,BYTE PTR [eax]
  421053:	retf   0x69f9
  421056:	dec    esp
  421057:	sub    DWORD PTR [ebx+0x6dba2773],esi
  42105d:	and    cl,BYTE PTR [edi-0x16884a69]
  421063:	mov    edi,0xd095de65
  421068:	lods   eax,DWORD PTR ds:[esi]
  421069:	mov    ss,WORD PTR [esi]
  42106b:	aam    0xbf
  42106d:	lods   eax,DWORD PTR ds:[esi]
  42106e:	and    dh,cl
  421070:	inc    ebx
  421071:	sub    BYTE PTR [ebp+0x50a3a042],dh
  421077:	pop    eax
  421078:	jecxz  0x4210dc
  42107a:	or     DWORD PTR [ebp+eiz*8-0x23],ebx
  42107e:	outs   dx,BYTE PTR ds:[esi]
  42107f:	fstp   DWORD PTR [edi+0x77]
  421082:	cmp    al,0x3
  421085:	nop
  421086:	jl     0x421042
  421088:	sbb    ebx,DWORD PTR [eax-0x72]
  42108b:	xor    al,0x71
  42108d:	int    0x1e
  42108f:	dec    edi
  421090:	iret   
  421091:	mov    esp,0xcb194a8e
  421096:	xor    BYTE PTR [ecx-0x1],dl
  421099:	int3   
  42109a:	aaa    
  42109b:	mov    edi,DWORD PTR [esp+ecx*2]
  42109e:	jne    0x42106c
  4210a0:	mov    ch,0x6
  4210a2:	jns    0x421106
  4210a4:	sahf   
  4210a5:	pop    edx
  4210a6:	imul   ebx,DWORD PTR [ebp-0x24],0xc2cd8b84
  4210ad:	mov    ds:0x57bbad5e,eax
  4210b2:	mov    DWORD PTR [ebx-0x6a708e6c],ebp
  4210b8:	inc    ebx
  4210b9:	je     0x4210c4
  4210bb:	xchg   esp,eax
  4210bc:	sbb    al,0xeb
  4210be:	dec    ebx
  4210bf:	imul   BYTE PTR [ecx+0x7a]
  4210c2:	sbb    BYTE PTR [edi-0x52],bl
  4210c5:	jb     0x4210e9
  4210c7:	dec    ebp
  4210c8:	pop    edi
  4210c9:	lods   al,BYTE PTR ds:[esi]
  4210ca:	push   ebx
  4210cb:	mov    dl,0x3d
  4210cd:	call   0xaff290c
  4210d2:	jle    0x42111b
  4210d4:	stos   DWORD PTR es:[edi],eax
  4210d5:	stc    
  4210d6:	sbb    DWORD PTR [ebp+0x44d96205],ebx
  4210dc:	sub    BYTE PTR [esi],al
  4210de:	xchg   esi,eax
  4210df:	stos   BYTE PTR es:[edi],al
  4210e0:	repz clc 
  4210e2:	das    
  4210e3:	cmp    DWORD PTR [edx-0x10],0xeca1992b
  4210ea:	pop    DWORD PTR ds:0x8a05e849
  4210f0:	adc    BYTE PTR [edx-0x7b],dl
  4210f3:	push   DWORD PTR [eax+edx*2-0x4]
  4210f7:	or     eax,0x8af4b961
  4210fc:	hlt    
  4210fd:	mov    edx,DWORD PTR [esi+0x37]
  421100:	adc    BYTE PTR [esi-0x6c],0xec
  421104:	popa   
  421105:	pusha  
  421106:	adc    al,0xe4
  421108:	icebp  
  421109:	mov    eax,0xaf68f095
  42110e:	sbb    al,0xc1
  421110:	cmp    al,0x25
  421112:	jb     0x4210d4
  421114:	add    al,0xcb
  421116:	push   0x38
  421118:	cmp    DWORD PTR [esi],esi
  42111a:	and    eax,DWORD PTR [ecx]
  42111c:	pushf  
  42111d:	retf   0x91b5
  421120:	popf   
  421121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421122:	push   esi
  421123:	sub    BYTE PTR [eax+ebx*2],ah
	...
  421132:	mov    dh,0xdf
  421134:	fwait
  421135:	add    bh,bl
  421137:	inc    esi
  421138:	mov    edi,0x5e25f0ff
  42113d:	and    eax,0xfee62567
  421142:	sub    al,BYTE PTR [ebp+0x2cc0001]
  421148:	add    BYTE PTR [eax],al
  42114a:	idiv   edx
  42114c:	js     0x4211c2
  42114e:	(bad)  
  42114f:	ds ret 0x46ca
  421153:	rcr    DWORD PTR [esi],0x62
  421156:	enter  0x9b,0x5a
  42115a:	je     0x421150
  42115c:	push   ebp
  42115d:	xchg   esi,eax
  42115e:	retf   
  42115f:	es jp  0x42115a
  421162:	mov    ch,0xd9
  421164:	jg     0x4210fe
  421166:	js     0x421136
  421168:	ja     0x4210eb
  42116a:	mov    ss,ebx
  42116c:	or     ch,bh
  42116e:	hlt    
  42116f:	(bad)  
  421170:	test   al,0xa8
  421172:	test   al,0xae
  421174:	mov    eax,ds:0x2a3452f8
  421179:	jno    0x4210fc
  42117b:	ja     0x4211b5
  42117d:	scas   al,BYTE PTR es:[edi]
  42117e:	ret    
  42117f:	rol    DWORD PTR ds:0x447566db,0x3e
  421186:	push   ds
  421187:	iret   
  421188:	jge    0x421176
  42118a:	push   esp
  42118b:	adc    eax,0x22d32e9f
  421190:	f2xm1  
  421192:	sub    eax,0x5d89c549
  421197:	int    0xe7
  421199:	iret   
  42119a:	retf   0x3e4
  42119d:	test   DWORD PTR [edx+0x55],esi
  4211a0:	adc    al,0xf6
  4211a2:	mov    es,WORD PTR [edi+edx*2]
  4211a5:	lea    ebp,[edx]
  4211a7:	lods   al,BYTE PTR ds:[esi]
  4211a8:	xchg   esi,eax
  4211a9:	or     eax,0x83c14f7c
  4211ae:	add    eax,0xdf6ce330
  4211b3:	mov    al,ds:0xf4f8173d
  4211b8:	repz fdivr DWORD PTR [edx]
  4211bb:	lock xor eax,0x41bad0e
  4211c1:	push   ebp
  4211c2:	rol    edx,1
  4211c4:	pop    ds
  4211c5:	sub    BYTE PTR [esi+ecx*2+0x72],ah
  4211c9:	in     al,dx
  4211ca:	dec    esp
  4211cb:	pop    ss
  4211cc:	jmp    0xa76f:0x9d1d1812
  4211d3:	push   edx
  4211d4:	xchg   esp,eax
  4211d5:	pop    ebx
  4211d6:	adc    eax,0xd4742c08
  4211db:	cmp    ch,BYTE PTR [edx]
  4211dd:	cld    
  4211de:	or     BYTE PTR gs:[esi+0x38],dh
  4211e2:	sahf   
  4211e3:	fidivr DWORD PTR [ecx]
  4211e5:	xchg   esi,eax
  4211e6:	and    DWORD PTR [ebp-0x3c],ebx
  4211e9:	xchg   bl,al
  4211eb:	inc    ebx
  4211ec:	ins    DWORD PTR es:[edi],dx
  4211ed:	inc    esi
  4211ee:	dec    ebx
  4211ef:	sbb    DWORD PTR [eax+0x32],ecx
  4211f2:	inc    eax
  4211f3:	pushf  
  4211f4:	outs   dx,BYTE PTR ds:[esi]
  4211f5:	mov    ebx,0x93dba0c7
  4211fa:	rcl    edx,cl
  4211fc:	sub    ah,0x9b
  4211ff:	mov    al,ds:0xb3072e01
  421204:	lock leave 
  421206:	mov    dh,0xd8
  421208:	cld    
  421209:	in     eax,0x7b
  42120b:	mov    ecx,0xc005cf59
  421210:	jecxz  0x4211c0
  421212:	daa    
  421213:	mov    al,ds:0x8778c111
  421218:	fimul  DWORD PTR [ebp-0x74]
  42121b:	push   ebx
  42121c:	jmp    0x62d8:0xea4e7b79
  421223:	inc    eax
  421224:	imul   edi,DWORD PTR [edx+0x522aa0fa],0x30504fd8
  42122e:	fcom   QWORD PTR [esi+0x697e957e]
  421234:	jle    0x421252
  421236:	sar    ebx,cl
  421238:	xchg   DWORD PTR ds:0x40fecdea,ebp
  42123e:	pop    esi
  42123f:	mov    ebx,0xf8d50a3e
  421244:	or     esi,DWORD PTR [edx-0x65adde27]
  42124a:	fistp  DWORD PTR [esi-0x1d2867b2]
  421250:	fsub   DWORD PTR [ebx+0x12c6feae]
  421256:	add    edx,DWORD PTR [ecx-0x7e0f9500]
  42125c:	adc    bh,BYTE PTR [eax]
  42125e:	pop    ss
  42125f:	ins    DWORD PTR es:[edi],dx
  421260:	xchg   esp,eax
  421261:	in     al,0x11
  421263:	add    edx,edx
  421265:	xchg   bp,ax
  421267:	or     cl,BYTE PTR [edi+edi*4]
  42126a:	popf   
  42126b:	dec    edi
  42126c:	aas    
  42126d:	cmovb  esi,DWORD PTR [ebx]
  421270:	xor    DWORD PTR [ebp+0x2bcce87c],edx
  421276:	aaa    
  421277:	pop    edx
  421278:	inc    edi
  421279:	repnz fld st(3)
  42127c:	aam    0xd7
  42127e:	rol    DWORD PTR [ecx-0x663e25b9],cl
  421284:	mov    bl,0xf0
  421286:	cmp    esi,DWORD PTR [ecx+0x45]
  421289:	dec    edx
  42128a:	or     bl,BYTE PTR [eax-0x38]
  42128d:	mov    bh,0xe9
  42128f:	out    0xbd,eax
  421291:	dec    ebx
  421292:	stos   BYTE PTR es:[edi],al
  421293:	test   DWORD PTR [eax],0x2def5f85
  421299:	out    0x72,eax
  42129b:	fmul   QWORD PTR [edx+0x5adbd4d6]
  4212a1:	dec    ebp
  4212a2:	push   0xaf5d77e5
  4212a7:	cmp    ecx,edi
  4212a9:	jmp    0x421286
  4212ab:	jmp    0x6211:0x67bae940
  4212b2:	imul   eax,DWORD PTR ds:0x4026e099,0x418b7b4b
  4212bc:	ins    DWORD PTR es:[edi],dx
  4212bd:	jne    0x42130c
  4212bf:	sub    cl,BYTE PTR [ebx+edx*8]
  4212c2:	(bad)  
  4212c3:	loopne 0x4212af
  4212c5:	ret    
  4212c6:	in     eax,dx
  4212c7:	fs sahf 
  4212c9:	dec    eax
  4212ca:	push   ss
  4212cb:	inc    edi
  4212cc:	sbb    al,0xe3
  4212ce:	test   BYTE PTR [ecx],cl
  4212d0:	int    0x87
  4212d2:	sub    DWORD PTR [eax+eax*1],esi
  4212d5:	xor    cl,0x6d
  4212d8:	add    eax,0x5bf1fc11
  4212dd:	jmp    0x25e:0xdf5c9875
  4212e4:	jl     0x4212c3
  4212e6:	std    
  4212e7:	pushf  
  4212e8:	cmc    
  4212e9:	jle    0x421279
  4212eb:	sub    DWORD PTR [edi+eax*2],eax
  4212ee:	(bad)  
  4212ef:	xchg   bx,ax
  4212f1:	push   edx
  4212f2:	in     eax,dx
  4212f3:	je     0x42131d
  4212f5:	xor    dh,BYTE PTR [ebx-0x4069a670]
  4212fb:	xor    ah,ah
  4212fd:	jmp    0x51d5:0xcd87e3c7
  421304:	fsub   QWORD PTR [ecx]
  421306:	jle    0x42134d
  421308:	aad    0x87
  42130a:	mov    eax,ds:0x46d8cbf5
  42130f:	jns    0x42136b
  421311:	int    0xfe
  421313:	sbb    eax,0x5a703b21
  421318:	hlt    
  421319:	add    eax,0xd079764e
  42131e:	sub    al,0xf4
  421320:	push   ebp
  421321:	(bad)  
  421322:	in     al,0xb3
  421324:	outs   dx,BYTE PTR ds:[esi]
  421325:	mov    dh,0x5c
  421327:	mov    ds:0xf74ee758,eax
  42132c:	in     eax,dx
  42132d:	and    cl,BYTE PTR [eax-0x578233d2]
  421333:	fld    TBYTE PTR [edi]
  421335:	loop   0x421351
  421337:	test   al,0xb3
  421339:	push   ds
  42133a:	cld    
  42133b:	xor    DWORD PTR ds:0x3e64f17d,0x42b5853b
  421345:	inc    ebx
  421346:	or     BYTE PTR [ecx+ecx*8+0x36],ch
  42134a:	ret    
  42134b:	and    eax,DWORD PTR [ecx+0x41eab96]
  421351:	ds in  al,dx
  421353:	xchg   edi,eax
  421354:	ret    0xa90f
  421357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421358:	lea    edx,[ecx+0x33a2701f]
  42135e:	aaa    
  42135f:	pmullw mm7,QWORD PTR [ebx]
  421362:	cmp    DWORD PTR [edi+0x6e],ecx
  421365:	les    ecx,FWORD PTR [esi-0x7a]
  421368:	xchg   ebp,eax
  421369:	out    0xbd,al
  42136b:	inc    esp
  42136c:	cmp    eax,0x1ca500e0
  421371:	adc    DWORD PTR [ebx],0x5d
  421374:	push   es
  421375:	and    eax,0xbfc3c342
  42137a:	mov    esp,0x70765d7f
  42137f:	nop
  421380:	mov    ebx,ecx
  421382:	or     al,0xde
  421384:	hlt    
  421385:	out    0xe0,al
  421387:	inc    ebp
  421388:	sub    eax,0xb1800db6
  42138d:	xchg   ecx,eax
  42138e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42138f:	ja     0x421385
  421391:	xchg   DWORD PTR [eax-0x73d919d4],ebp
  421397:	adc    eax,0x45489900
  42139c:	repz cli 
  42139e:	fnstcw WORD PTR [edx]
  4213a0:	(bad)  [edi+0x4ad6a60b]
  4213a6:	shr    ebx,1
  4213a8:	inc    edx
  4213a9:	mov    ds:0xd3f304be,eax
  4213ae:	and    edi,0x6a
  4213b1:	pushf  
  4213b2:	bound  eax,QWORD PTR [esi+ebp*4+0x4d4831d0]
  4213b9:	fdiv   st,st(5)
  4213bb:	loope  0x42142b
  4213bd:	mov    BYTE PTR [edx],ah
  4213bf:	in     eax,dx
  4213c0:	cmp    esp,DWORD PTR [esi+0x53]
  4213c3:	mov    al,ds:0xc16c9e5c
  4213c8:	push   ebp
  4213c9:	push   ebx
  4213ca:	retf   0xbb63
  4213cd:	(bad)  
  4213ce:	lahf   
  4213cf:	imul   ebx,DWORD PTR [edx+esi*1+0x74512e20],0xffffffd4
  4213d7:	dec    ebp
  4213d8:	test   edx,0x918edf4e
  4213de:	mov    ds:0xa9c862a6,al
  4213e3:	sub    edx,DWORD PTR [ebx-0x11]
  4213e6:	jns    0x421388
  4213e8:	push   es
  4213e9:	std    
  4213ea:	or     al,0x1b
  4213ec:	mov    bl,0x15
  4213ee:	fcomp  DWORD PTR [edi-0x79]
  4213f1:	or     ebp,DWORD PTR [ebp+0x64]
  4213f4:	stos   BYTE PTR es:[edi],al
  4213f5:	pusha  
  4213f6:	jo     0x42140a
  4213f8:	js     0x421405
  4213fa:	push   es
  4213fb:	sub    al,0x2f
  4213fd:	loope  0x421468
  4213ff:	xlat   BYTE PTR ds:[ebx]
  421400:	xchg   DWORD PTR [edi+0x51],ecx
  421403:	jmp    0xc632dd70
  421408:	stos   DWORD PTR es:[edi],eax
  421409:	or     bl,BYTE PTR [edi-0xb]
  42140c:	mov    ah,0xae
  42140e:	out    dx,eax
  42140f:	mov    ah,0xfb
  421411:	pushf  
  421412:	test   eax,0x737888
	...
  42141f:	add    BYTE PTR [eax],al
  421421:	add    al,bh
  421423:	mov    ah,0x7f
  421425:	cmp    eax,0xf5faff7f
  42142a:	jle    0x42142e
  42142c:	xor    eax,DWORD PTR [esi+0x7]
  42142f:	ffree  st(1)
  421431:	out    0xf6,al
  421433:	xchg   DWORD PTR [ecx],eax
  421435:	add    ah,cl
  421437:	add    al,BYTE PTR [eax]
  421439:	add    BYTE PTR [esi+0x23],dl
  42143c:	xchg   ebx,eax
  42143d:	loop   0x42143e
  42143f:	lahf   
  421440:	or     DWORD PTR [ebx],ecx
  421442:	sbb    BYTE PTR [eax-0x3c96b51f],bh
  421448:	mov    eax,ds:0xa77eebb6
  42144d:	add    al,0xfc
  42144f:	xchg   esi,eax
  421450:	outs   dx,DWORD PTR ds:[esi]
  421451:	pop    esi
  421452:	mov    ebx,0x69ab8269
  421457:	adc    DWORD PTR [esp+eax*2],0xffffffbb
  42145b:	fmul   DWORD PTR [ecx+0x73]
  42145e:	push   DWORD PTR [ecx]
  421460:	mov    eax,0x2f79bc82
  421465:	les    esi,FWORD PTR [eax+0x7138a71a]
  42146b:	je     0x4214bb
  42146d:	js     0x42146d
  42146f:	mov    bh,0x7a
  421471:	fidiv  WORD PTR [ebx-0x14]
  421474:	mov    edx,0x975fbd69
  421479:	pop    esi
  42147a:	sub    ah,BYTE PTR [ebx]
  42147c:	int    0x4f
  42147e:	sub    DWORD PTR [ebp-0x59],edi
  421481:	jae    0x42140f
  421483:	mov    bh,0xb6
  421485:	xchg   DWORD PTR [esp+ecx*1],edx
  421488:	or     bl,ch
  42148a:	fcomp  QWORD PTR [edx+0x9294083]
  421490:	add    BYTE PTR [esi+0xea35a0c],dl
  421496:	mov    gs,WORD PTR [edx+0x1a]
  421499:	inc    ebp
  42149a:	icebp  
  42149b:	int3   
  42149c:	loope  0x4214b5
  42149e:	cli    
  42149f:	cld    
  4214a0:	rol    DWORD PTR [edx+0x72],1
  4214a3:	mov    gs,WORD PTR [esi]
  4214a5:	push   eax
  4214a6:	pop    eax
  4214a7:	loope  0x421502
  4214a9:	pop    ds
  4214aa:	loop   0x421504
  4214ac:	loop   0x4214fa
  4214ae:	pshufhw xmm6,XMMWORD PTR [ebx+0x62ae4dd9],0x2f
  4214b7:	cmp    bl,bh
  4214b9:	test   edx,eax
  4214bb:	jb     0x42144c
  4214bd:	fsub   QWORD PTR [ecx+0xd79c756]
  4214c3:	lods   eax,DWORD PTR ds:[esi]
  4214c4:	sub    BYTE PTR [edi+0x2c],bh
  4214c7:	mov    al,0x32
  4214c9:	fcomi  st,st(1)
  4214cb:	fadd   st,st(7)
  4214cd:	retf   
  4214ce:	mov    ebx,0x94533164
  4214d3:	or     bh,BYTE PTR [edx]
  4214d5:	and    eax,0xe002f6b6
  4214da:	mov    ecx,0xde80487
  4214df:	bound  esi,QWORD PTR [ebp+0x5f]
  4214e2:	fwait
  4214e3:	mov    DWORD PTR [ebx-0x77f00379],esp
  4214e9:	jle    0x4214e3
  4214eb:	js     0x421477
  4214ed:	adc    ebp,DWORD PTR [eax-0x14d6cd20]
  4214f3:	fild   QWORD PTR [edx]
  4214f5:	lock out dx,eax
  4214f7:	push   ss
  4214f8:	jl     0x4214ab
  4214fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fb:	(bad)  
  4214fc:	sahf   
  4214fd:	fsub   DWORD PTR [esi+esi*8+0x2ebcff1f]
  421504:	push   ss
  421505:	xchg   ebx,eax
  421506:	jecxz  0x4214ad
  421508:	ss mov edi,0x6bf1b514
  42150e:	iret   
  42150f:	(bad)  
  421510:	cld    
  421511:	outs   dx,DWORD PTR ds:[esi]
  421512:	dec    eax
  421513:	popa   
  421514:	pop    edi
  421515:	outs   dx,BYTE PTR ds:[esi]
  421516:	test   dl,bl
  421518:	out    dx,eax
  421519:	adc    DWORD PTR [ebx-0x5f],esi
  42151c:	loopne 0x421561
  42151e:	jmp    0x42154d
  421520:	add    al,0x42
  421522:	cmp    eax,0xf9bdd2e8
  421527:	ror    BYTE PTR [eax],cl
  421529:	or     ah,BYTE PTR [ecx]
  42152b:	mov    esp,0xd716651c
  421530:	push   0x4d1fe856
  421535:	sar    BYTE PTR [ecx-0x43],1
  421538:	sbb    al,0xfb
  42153a:	mov    bl,0x43
  42153c:	adc    al,0xd1
  42153e:	popf   
  42153f:	fist   DWORD PTR [ecx+0x5d]
  421542:	pushf  
  421543:	xchg   BYTE PTR [edi],bh
  421545:	sub    bl,BYTE PTR [ecx]
  421547:	jmp    0x4214fb
  421549:	mov    ebx,0xd81b872e
  42154e:	clc    
  42154f:	mov    bh,0xfc
  421551:	stos   DWORD PTR es:[edi],eax
  421552:	lea    esp,[ebp+edx*2-0x3646c13c]
  421559:	sbb    al,0x5f
  42155b:	sub    al,BYTE PTR [ebx]
  42155d:	pop    esi
  42155e:	shl    edi,1
  421560:	cmp    DWORD PTR [ebp+0x3f],edx
  421563:	(bad)  
  421566:	shl    dh,0xb1
  421569:	daa    
  42156a:	pop    ds
  42156b:	xor    eax,ebx
  42156d:	adc    al,0x66
  42156f:	xchg   edi,eax
  421570:	add    BYTE PTR [eax-0x7],bh
  421573:	iret   
  421574:	xor    eax,0xfb16a488
  421579:	xchg   DWORD PTR [edi-0x2629d3b2],ebp
  42157f:	pop    ebp
  421580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421581:	test   al,0xc9
  421583:	shl    ecx,cl
  421585:	mov    esi,0x984a3a75
  42158a:	sbb    bh,BYTE PTR [ebp-0x43018c50]
  421590:	aad    0x7e
  421592:	inc    esi
  421593:	daa    
  421594:	cmp    DWORD PTR [ebp+eax*2-0x15a66011],0x51
  42159c:	add    eax,edi
  42159e:	inc    ebx
  42159f:	out    0x1c,eax
  4215a1:	imul   ecx,DWORD PTR [edx],0xa9dcc2fc
  4215a7:	push   esp
  4215a8:	lea    esp,[edi-0x5c]
  4215ab:	dec    esp
  4215ac:	js     0x42153d
  4215ae:	shr    bl,cl
  4215b0:	cwde   
  4215b1:	and    esp,DWORD PTR [edx-0x30f27329]
  4215b7:	neg    eax
  4215b9:	inc    esi
  4215ba:	pop    ebp
  4215bb:	loope  0x4215d7
  4215bd:	test   eax,0x7063810
  4215c2:	and    eax,0x67ad09da
  4215c7:	xor    DWORD PTR [eax],ebx
  4215c9:	scas   al,BYTE PTR es:[edi]
  4215ca:	push   cs
  4215cb:	push   ss
  4215cc:	and    BYTE PTR ds:0x838d7973,dl
  4215d2:	sub    eax,0x6ded7480
  4215d7:	mov    al,0x6f
  4215d9:	xchg   esp,eax
  4215da:	jecxz  0x421653
  4215dc:	dec    esp
  4215dd:	push   ecx
  4215de:	add    ebx,DWORD PTR [esi]
  4215e0:	arpl   WORD PTR [esi+edi*8],cx
  4215e3:	retf   
  4215e4:	jmp    0x42162a
  4215e6:	push   ecx
  4215e7:	xor    al,0xa5
  4215e9:	leave  
  4215ea:	lea    ecx,[eax]
  4215ec:	rol    BYTE PTR [eax],0xa5
  4215ef:	nop
  4215f0:	sub    cl,0xd
  4215f3:	mov    edx,0x895b1e85
  4215f8:	cli    
  4215f9:	(bad)  
  4215fa:	fist   WORD PTR [ebx-0x51]
  4215fd:	jo     0x4215a2
  4215ff:	ja     0x42166b
  421601:	mov    dh,0x80
  421603:	(bad)  
  421604:	and    edi,DWORD PTR [edi+0x778c92d]
  42160a:	cs ins BYTE PTR es:[edi],dx
  42160c:	loope  0x42167d
  42160e:	int3   
  42160f:	imul   edx,DWORD PTR [edx+0x77],0xffffffd6
  421613:	jmp    0x6006:0x3bd6d5ce
  42161a:	cmc    
  42161b:	outs   dx,BYTE PTR ds:[esi]
  42161c:	mov    edx,0xdb92e7d8
  421621:	loope  0x42169a
  421623:	mov    edi,0x4b5ffa3a
  421628:	outs   dx,DWORD PTR ds:[esi]
  421629:	cmp    DWORD PTR [ecx+0x77f0dede],esi
  42162f:	outs   dx,BYTE PTR ds:[esi]
  421630:	vpsraw xmm2,xmm4,XMMWORD PTR [ebx]
  421634:	aaa    
  421635:	jae    0x4215c8
  421637:	test   BYTE PTR [edx-0x7ddf36],bl
  42163d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42163e:	outs   dx,BYTE PTR ds:[esi]
  42163f:	cmp    eax,0x66442cd5
  421644:	mov    dh,0x66
  421646:	shl    BYTE PTR [esi+edi*2-0x351d8221],1
  42164d:	pop    edx
  42164e:	xlat   BYTE PTR ds:[ebx]
  42164f:	je     0x4216bf
  421651:	dec    esi
  421652:	or     bl,BYTE PTR [ecx]
  421654:	out    dx,al
  421655:	dec    esp
  421656:	test   al,0xd6
  421658:	inc    ebx
  421659:	jnp    0x421694
  42165b:	enter  0x8b3f,0x4a
  42165f:	out    0xaa,eax
  421661:	idiv   BYTE PTR [ecx+0x12]
  421664:	pop    ss
  421665:	or     al,0x70
  421667:	push   ss
  421668:	repnz jmp 0xcda7:0x5454058
  421670:	push   0x5cc1dad1
  421675:	adc    esi,DWORD PTR [esi]
  421677:	pop    ecx
  421678:	pushf  
  421679:	mov    ds:0x6d4bb143,al
  42167e:	inc    esi
  42167f:	mov    BYTE PTR [esi+ebp*4],ch
  421682:	jo     0x4216a5
  421684:	or     BYTE PTR [esi+0x340c7923],0x56
  42168b:	pop    ds
  42168c:	sub    ebp,DWORD PTR [ecx-0x11]
  42168f:	inc    ecx
  421691:	or     ecx,DWORD PTR [ecx]
  421693:	push   eax
  421694:	add    ah,BYTE PTR [esi+0x4094cff8]
  42169a:	sbb    DWORD PTR [eax+0x6f782d26],esp
  4216a0:	xlat   BYTE PTR ds:[ebx]
  4216a1:	xchg   ecx,eax
  4216a2:	xlat   BYTE PTR ds:[ebx]
  4216a3:	jae    0x4216ff
  4216a5:	pop    edi
  4216a6:	mov    dl,bh
  4216a8:	or     BYTE PTR [edi],bl
  4216aa:	in     al,0xd6
  4216ac:	(bad)  
  4216ad:	in     eax,dx
  4216ae:	stc    
  4216af:	fcomp  QWORD PTR [ecx+0x5d]
  4216b2:	lea    esp,ds:0xcebf321
  4216b8:	rcr    DWORD PTR [ebp-0xb],1
  4216bb:	jp     0x42164d
  4216bd:	inc    edi
  4216be:	xor    dh,dh
  4216c0:	pop    edx
  4216c1:	sti    
  4216c2:	inc    ecx
  4216c3:	test   eax,0xddc50a70
  4216c8:	cld    
  4216c9:	scas   al,BYTE PTR es:[edi]
  4216ca:	pop    ecx
  4216cb:	dec    ebp
  4216cc:	fild   QWORD PTR [ebp-0x19]
  4216cf:	xchg   esi,eax
  4216d0:	mov    dh,0xac
  4216d2:	clc    
  4216d3:	imul   edi,DWORD PTR [esi-0x59],0xd7f21937
  4216da:	ins    DWORD PTR es:[edi],dx
  4216db:	outs   dx,BYTE PTR ds:[esi]
  4216dc:	mov    edi,ebx
  4216de:	call   0xc761b965
  4216e3:	outs   dx,BYTE PTR es:[esi]
  4216e5:	pop    es
  4216e6:	jl     0x421686
  4216e8:	call   FWORD PTR [ebp+0x4503cd01]
  4216ee:	movntq (bad),mm0
  4216ef:	out    0xc7,eax
  4216f1:	pusha  
  4216f2:	sar    bh,0x77
  4216f5:	test   DWORD PTR [ebx],edi
  4216f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216f8:	mov    bh,0xc1
  4216fa:	push   ss
  4216fb:	fisttp QWORD PTR [edi-0x22]
  4216fe:	xchg   edx,eax
  4216ff:	sar    DWORD PTR [bx+di-0x47],cl
  421703:	cmp    dh,BYTE PTR [edi+edi*8+0x0]
	...
  42170f:	add    BYTE PTR [eax],al
  421711:	add    BYTE PTR [ecx],bh
  421713:	sbb    al,0x89
  421715:	out    0xad,eax
  421717:	idiv   DWORD PTR [edi-0x22]
  42171a:	mov    DWORD PTR [edx+0x79],ebp
  42171d:	add    DWORD PTR [ebp-0x6c],0x8ac25515
  421724:	add    DWORD PTR [eax],eax
  421726:	int3   
  421727:	add    al,BYTE PTR [eax]
  421729:	add    BYTE PTR [esi+0x392043ef],ah
  42172f:	inc    edi
  421730:	and    dl,ah
  421732:	add    DWORD PTR [edx],ebx
  421734:	jne    0x42174b
  421736:	popf   
  421737:	shl    BYTE PTR [eax],cl
  421739:	xchg   ebx,eax
  42173a:	mov    edi,0xe5c1c321
  42173f:	ds xchg ebx,eax
  421741:	mov    ah,0x9
  421743:	pop    ebx
  421744:	jne    0x42176b
  421746:	pop    edi
  421747:	iret   
  421748:	les    ebp,FWORD PTR [ecx-0x2c274ff6]
  42174e:	cmc    
  42174f:	xor    BYTE PTR [esp+ebp*1-0x12acc618],ah
  421756:	and    ah,cl
  421758:	sbb    dh,BYTE PTR ds:0x57fc066e
  42175e:	stos   BYTE PTR es:[edi],al
  42175f:	inc    bl
  421761:	push   ss
  421762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421763:	xor    eax,0x47141c07
  421768:	call   0x5d21:0xb5bffb95
  42176f:	sbb    ah,dl
  421771:	iret   
  421772:	mov    dh,0x90
  421774:	idiv   BYTE PTR [ebx-0x3a3ce2f9]
  42177a:	daa    
  42177b:	cs xchg dh,bl
  42177e:	jbe    0x421744
  421780:	cli    
  421781:	mov    eax,ds:0x148f7b01
  421786:	mov    DWORD PTR [ebx],edx
  421788:	repz push ebx
  42178a:	ret    
  42178b:	push   edx
  42178c:	fwait
  42178d:	push   ss
  42178e:	sti    
  42178f:	xchg   ch,dh
  421791:	data16 mov ch,0x7
  421794:	inc    eax
  421795:	inc    edi
  421796:	shl    DWORD PTR [ebp+0x44bce3d],1
  42179c:	mov    ch,0xb7
  42179e:	pusha  
  42179f:	mov    edi,0xa7111f94
  4217a4:	outs   dx,DWORD PTR ds:[esi]
  4217a5:	out    dx,eax
  4217a6:	mov    esi,0x5c728577
  4217ab:	popf   
  4217ac:	cdq    
  4217ad:	sahf   
  4217ae:	test   DWORD PTR [eax-0x72],0x77829686
  4217b5:	push   es
  4217b6:	ins    DWORD PTR es:[edi],dx
  4217b7:	mov    ds:0x78f5345a,al
  4217bc:	inc    edi
  4217bd:	jns    0x421814
  4217bf:	or     eax,0xd2a6ee05
  4217c4:	cld    
  4217c5:	xor    eax,0x7b7a231b
  4217ca:	xchg   ecx,eax
  4217cb:	inc    ebp
  4217cc:	rcl    cl,0xb8
  4217cf:	stos   BYTE PTR es:[edi],al
  4217d0:	mov    esi,0xdac25ee5
  4217d5:	adc    al,0xf9
  4217d7:	(bad)  
  4217d9:	pop    es
  4217da:	in     eax,dx
  4217db:	or     ah,dh
  4217dd:	and    DWORD PTR [ecx],esp
  4217df:	and    bl,ah
  4217e1:	add    BYTE PTR [esi],dl
  4217e3:	adc    dh,BYTE PTR [edi+0x584fc16d]
  4217e9:	or     al,BYTE PTR ds:0xa94d4dc1
  4217ef:	imul   ebx,DWORD PTR [ecx],0xdeb6acfc
  4217f5:	inc    esi
  4217f6:	aam    0xcf
  4217f8:	push   ebp
  4217f9:	test   eax,0xe075c51b
  4217fe:	xor    DWORD PTR [edi+0x25],ecx
  421801:	test   BYTE PTR [edx],dl
  421803:	loopne 0x4217b6
  421805:	push   cs
  421806:	(bad)  
  421807:	fadd   st,st(6)
  421809:	lods   al,BYTE PTR ds:[esi]
  42180a:	inc    ebp
  42180b:	push   ebp
  42180c:	aas    
  42180d:	xchg   esp,eax
  42180e:	pop    ecx
  42180f:	hlt    
  421810:	stos   BYTE PTR es:[edi],al
  421811:	cmp    DWORD PTR [eax],ebp
  421813:	sub    BYTE PTR [edi-0x40ba3c5e],bh
  421819:	mov    ds:0x95b0f4d8,eax
  42181e:	fild   DWORD PTR [edx]
  421820:	nop
  421821:	repz mov bl,0x26
  421824:	jmp    0x421881
  421826:	repz sbb ah,BYTE PTR gs:[edi+0x43b25d2e]
  42182e:	lahf   
  42182f:	or     DWORD PTR [ebx+0x5013d91d],esp
  421835:	sbb    edi,DWORD PTR [edx]
  421837:	enter  0x9cb6,0x8d
  42183b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42183c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42183d:	fldenv [ecx]
  42183f:	add    BYTE PTR [edx-0x4042bc9],dh
  421845:	bound  eax,QWORD PTR [esi+edx*2]
  421848:	sbb    cl,BYTE PTR ds:0x96c5fb73
  42184e:	std    
  42184f:	jp     0x4218c4
  421851:	repz adc cl,BYTE PTR [ecx+0x2f7311ac]
  421858:	ja     0x4217ea
  42185a:	dec    eax
  42185b:	adc    ebx,DWORD PTR [ecx+0x59]
  42185e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42185f:	test   DWORD PTR ds:0x98c4e2de,ebp
  421865:	out    dx,eax
  421866:	pop    ebp
  421867:	mov    eax,0x4eab66e5
  42186c:	xchg   ebx,eax
  42186d:	mov    bh,0xef
  42186f:	std    
  421870:	dec    esi
  421871:	dec    eax
  421872:	hlt    
  421873:	fimul  DWORD PTR [ebx+eax*8+0x692e0160]
  42187a:	mov    WORD PTR [ecx+0x22],fs
  42187d:	jmp    0x4ff1:0x50873061
  421884:	fcomp  DWORD PTR [ebp-0x54]
  421887:	xchg   BYTE PTR [ebx],al
  421889:	xor    ebx,DWORD PTR [eax+0x9b48597]
  42188f:	mov    DWORD PTR [edx+eax*4-0x75],edi
  421893:	adc    eax,0xfc6e04b8
  421898:	int    0x42
  42189a:	shl    BYTE PTR [ebp-0x4d39f2fb],1
  4218a0:	test   al,0x98
  4218a2:	inc    esi
  4218a3:	in     al,0x43
  4218a5:	xchg   bh,dl
  4218a7:	fcom   QWORD PTR [edx-0x3759520d]
  4218ad:	cdq    
  4218ae:	jp     0x4218a3
  4218b0:	retf   0x54fa
  4218b3:	shl    al,1
  4218b5:	test   al,0xa8
  4218b7:	fstp   TBYTE PTR [eax+0x70]
  4218ba:	jno    0x421850
  4218bc:	dec    ecx
  4218bd:	adc    edx,DWORD PTR [eax]
  4218bf:	test   al,0x2d
  4218c1:	sub    BYTE PTR [eax+0x2b],dl
  4218c4:	popa   
  4218c5:	mov    bl,0x72
  4218c7:	dec    ebx
  4218c8:	adc    al,0x2c
  4218ca:	clc    
  4218cb:	cmc    
  4218cc:	fstp   DWORD PTR [ecx-0x8]
  4218cf:	push   cs
  4218d0:	imul   esp,ebx,0xffffffd8
  4218d3:	pop    eax
  4218d4:	rcl    DWORD PTR [edi+0x321022a8],cl
  4218da:	iret   
  4218db:	dec    ebp
  4218dc:	inc    ebp
  4218dd:	(bad)  
  4218de:	mov    bl,0x72
  4218e0:	sahf   
  4218e1:	push   ds
  4218e2:	fimul  DWORD PTR [edx+0x4cb78832]
  4218e8:	out    0xf3,al
  4218ea:	ins    BYTE PTR es:[edi],dx
  4218eb:	out    0x36,eax
  4218ed:	ret    0x3ea5
  4218f0:	std    
  4218f1:	test   BYTE PTR [edi+0x5503e80f],ah
  4218f7:	mov    ds:0xe96947cc,al
  4218fc:	(bad)  
  4218fd:	xchg   esi,eax
  4218fe:	xor    al,bl
  421900:	xchg   BYTE PTR [eax-0x61],dh
  421903:	cmp    cl,ah
  421905:	pop    ss
  421906:	push   ebp
  421907:	cmc    
  421908:	xchg   ebp,eax
  421909:	je     0x4218d8
  42190b:	sbb    al,0x15
  42190d:	jns    0x42189a
  42190f:	mov    ebx,0x98e3e972
  421914:	(bad)  
  421915:	sti    
  421916:	into   
  421917:	mov    ch,0x5b
  421919:	mov    bh,0x66
  42191b:	sbb    ebp,DWORD PTR [ecx+ebx*1-0x6c49bc1a]
  421922:	loopne 0x4218e7
  421924:	mov    WORD PTR [edx+0x66],?
  421927:	xor    cl,al
  421929:	dec    ecx
  42192a:	or     ah,BYTE PTR [edi]
  42192c:	ds mov cl,0x67
  42192f:	sbb    eax,0x4d22adc3
  421934:	sar    cl,1
  421936:	push   esi
  421937:	inc    ebp
  421938:	mov    WORD PTR [ebx+0x34],ds
  42193b:	xchg   ebp,eax
  42193c:	mov    esi,DWORD PTR [eax-0x33]
  42193f:	inc    ebp
  421940:	enter  0xf974,0x62
  421944:	mov    edi,0x5bf0f9d9
  421949:	push   es
  42194a:	jb     0x4218cf
  42194c:	les    esp,FWORD PTR [eax]
  42194e:	repz cmp eax,0x1b3b52b5
  421954:	stos   DWORD PTR es:[edi],eax
  421955:	push   ebp
  421956:	call   0xf279:0x6845b414
  42195d:	push   edx
  42195e:	shl    DWORD PTR [edi-0x2fcdfa2a],1
  421964:	into   
  421965:	loope  0x421987
  421967:	out    dx,al
  421968:	jbe    0x421962
  42196a:	pop    ebx
  42196b:	lahf   
  42196c:	xor    al,0xbb
  42196e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42196f:	cs es mov ah,0x68
  421973:	mov    edi,0x9840dd27
  421978:	adc    esp,DWORD PTR [edx]
  42197a:	sahf   
  42197b:	lahf   
  42197c:	test   eax,0x8ca61e2f
  421981:	sbb    dh,BYTE PTR [edi+edi*2+0x4f57257a]
  421988:	sub    ebp,edx
  42198a:	xchg   DWORD PTR [eax],esi
  42198c:	adc    esp,edx
  42198e:	adc    dl,bl
  421990:	cmp    DWORD PTR [eax+0x57b8094d],0xffffffbf
  421997:	into   
  421998:	mov    dl,0x1e
  42199a:	sbb    edx,eax
  42199c:	fnstenv [edx]
  42199e:	clc    
  42199f:	stos   BYTE PTR es:[edi],al
  4219a0:	stc    
  4219a1:	jo     0x4219d4
  4219a3:	jle    0x4219a3
  4219a5:	data16 sbb ah,dl
  4219a8:	les    esp,FWORD PTR [eax]
  4219aa:	mov    edi,0xdbf08f79
  4219af:	bnd jbe 0x4219cd
  4219b2:	daa    
  4219b3:	dec    ebx
  4219b4:	mov    ch,0x3a
  4219b6:	mov    ah,0xed
  4219b8:	add    DWORD PTR [ecx],esi
  4219ba:	cdq    
  4219bb:	out    0x7e,eax
  4219bd:	test   BYTE PTR [esi-0x73889215],bh
  4219c3:	mov    cs:0xdfff9db6,eax
  4219c9:	xor    dl,ch
  4219cb:	jo     0x421a23
  4219cd:	mov    ah,0xda
  4219cf:	dec    edi
  4219d0:	dec    ebp
  4219d1:	mov    al,0x84
  4219d3:	jmp    0x27813a
  4219d8:	jo     0x4219b2
  4219da:	aas    
  4219db:	mov    dl,0x7d
  4219dd:	or     bh,BYTE PTR [eax+edx*8]
  4219e0:	adc    edi,0x2d
  4219e3:	ja     0x421a5d
  4219e5:	and    eax,0x946ec737
  4219ea:	add    eax,0xba1f6d01
  4219ef:	stos   DWORD PTR es:[edi],eax
  4219f0:	push   es
  4219f1:	cmp    BYTE PTR [edx],al
  4219f3:	out    dx,al
  4219f4:	lods   eax,DWORD PTR ds:[esi]
  4219f5:	in     eax,dx
	...
  421a02:	gs mov ah,0x18
  421a05:	fcompp 
  421a07:	(bad)  
  421a08:	out    0xbf,eax
  421a0a:	gs mov ah,0x46
  421a0d:	mul    BYTE PTR [esi+0x16]
  421a10:	xor    DWORD PTR [eax-0x72],0xcc00018d
  421a17:	add    al,BYTE PTR [eax]
  421a19:	add    BYTE PTR [ebx+0x48a10b2e],ch
  421a1f:	arpl   WORD PTR [edi-0x494417cc],bp
  421a25:	out    0x5d,al
  421a27:	mov    ch,BYTE PTR [edx+0x40]
  421a2a:	pop    edx
  421a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2d:	test   eax,0x975fe000
  421a32:	xchg   ebx,eax
  421a33:	dec    ebp
  421a34:	aas    
  421a35:	pop    esi
  421a36:	aas    
  421a37:	add    eax,eax
  421a39:	cmp    dh,bh
  421a3b:	jmp    0xee0f:0x6787bdea
  421a42:	pop    ebx
  421a43:	pop    esp
  421a44:	lds    eax,FWORD PTR [eax-0x53]
  421a47:	xchg   DWORD PTR [eax+0x1f7b0c8c],esp
  421a4d:	jl     0x4219e2
  421a4f:	dec    esp
  421a50:	std    
  421a51:	daa    
  421a52:	fisttp QWORD PTR [edi-0x2c]
  421a55:	icebp  
  421a56:	out    dx,al
  421a57:	popa   
  421a58:	pop    edx
  421a59:	mov    bl,0x9b
  421a5b:	adc    DWORD PTR [edx],eax
  421a5d:	add    dh,BYTE PTR [eax+0x6181ccb]
  421a63:	mov    DWORD PTR [ecx+0x48],esi
  421a66:	retf   
  421a67:	pop    edi
  421a68:	jp     0x421acd
  421a6a:	popa   
  421a6b:	cmp    bh,BYTE PTR [ebx-0x4cc706fc]
  421a71:	mov    eax,0x5f303911
  421a76:	lahf   
  421a77:	aas    
  421a78:	inc    edx
  421a79:	mov    dl,BYTE PTR [esi-0x4f]
  421a7c:	sub    DWORD PTR [eax+ebx*2-0x6361b5ef],ecx
  421a83:	fist   DWORD PTR [edx-0x77]
  421a86:	aad    0xca
  421a88:	push   ds
  421a89:	stos   BYTE PTR es:[edi],al
  421a8a:	loopne 0x421aca
  421a8c:	cdq    
  421a8d:	(bad)  
  421a8e:	mov    dh,0x5b
  421a90:	xchg   ebp,eax
  421a91:	std    
  421a92:	xchg   edx,eax
  421a93:	and    BYTE PTR [edx-0x227181b6],al
  421a99:	adc    eax,0x27518a8c
  421a9e:	data16 jo 0x421a7e
  421aa1:	add    BYTE PTR [ecx-0x3cd4b0bc],dh
  421aa7:	int    0xea
  421aa9:	out    0xea,al
  421aab:	jl     0x421af1
  421aad:	or     eax,0x9ae262ab
  421ab2:	(bad)
  421ab5:	(bad)  
  421ab6:	jmp    0x629:0xdb31f2f8
  421abd:	push   0x7b81679f
  421ac2:	push   ecx
  421ac3:	retf   
  421ac4:	mov    ebp,0x9d4c33ef
  421ac9:	into   
  421aca:	stc    
  421acb:	jmp    0xfb14:0x151b3778
  421ad2:	push   esi
  421ad3:	sub    bh,bl
  421ad5:	push   0x70d59e42
  421ada:	mov    ebp,0x9d837e6b
  421adf:	adc    DWORD PTR [ecx],esp
  421ae1:	xchg   esi,eax
  421ae2:	fisttp DWORD PTR fs:[eax]
  421ae5:	fidiv  WORD PTR [ecx+0x49]
  421ae8:	or     eax,0xb3b9ab76
  421aed:	inc    DWORD PTR [ebx+0x76c5bbb9]
  421af3:	das    
  421af4:	(bad)  
  421af5:	sahf   
  421af6:	out    0x1d,eax
  421af8:	adc    eax,0x9e9dd079
  421afd:	mov    dl,0xf0
  421aff:	pop    eax
  421b00:	mov    cl,0x8c
  421b02:	jl     0x421b37
  421b04:	scas   eax,DWORD PTR es:[edi]
  421b05:	add    DWORD PTR [ebp+edx*8-0x21dd4326],0xffffff9b
  421b0d:	mov    cl,0x67
  421b0f:	and    DWORD PTR [ebx],edx
  421b11:	hlt    
  421b12:	scas   eax,DWORD PTR es:[edi]
  421b13:	dec    esi
  421b14:	push   ds
  421b15:	retf   0x2161
  421b18:	add    DWORD PTR [ebx-0x6e],esp
  421b1b:	push   es
  421b1c:	scas   al,BYTE PTR es:[edi]
  421b1d:	sbb    eax,0x1e9f2510
  421b22:	xchg   edi,eax
  421b23:	jno    0x421ab8
  421b25:	gs in  al,dx
  421b27:	pop    ss
  421b28:	jecxz  0x421b17
  421b2a:	mov    ?,edi
  421b2c:	out    0x2d,al
  421b2e:	push   ebp
  421b2f:	pop    esi
  421b30:	xor    eax,DWORD PTR [edi+0x67af0afc]
  421b36:	out    dx,eax
  421b37:	call   0x9b3d14
  421b3c:	icebp  
  421b3d:	nop
  421b3e:	pop    esi
  421b3f:	test   BYTE PTR [ebx+esi*1],ch
  421b42:	fld    DWORD PTR [ebp-0x52]
  421b45:	sahf   
  421b46:	iret   
  421b47:	outs   dx,DWORD PTR ds:[esi]
  421b48:	fadd   st(4),st
  421b4a:	mov    eax,0x96b0f979
  421b4f:	and    eax,0x3a513731
  421b54:	arpl   WORD PTR [ebp-0x3cd64b06],si
  421b5a:	pop    ebp
  421b5b:	and    DWORD PTR [ebx+0x143b6d58],esi
  421b61:	xor    BYTE PTR [ebx-0x58],dh
  421b64:	sbb    eax,0xd1a52c45
  421b69:	lds    ebp,FWORD PTR [edi]
  421b6b:	mov    dl,0x83
  421b6d:	in     eax,dx
  421b6e:	cdq    
  421b6f:	jb     0x421bba
  421b71:	fwait
  421b72:	cdq    
  421b73:	out    0x52,eax
  421b75:	data16 sbb al,0x77
  421b78:	cld    
  421b79:	xor    edx,eax
  421b7b:	mov    dh,0x9a
  421b7d:	jmp    0xa232:0xba7b34ed
  421b84:	or     bh,bh
  421b86:	js     0x421b5d
  421b88:	dec    DWORD PTR [ecx+esi*1+0x3c]
  421b8c:	jae    0x421b5b
  421b8e:	pop    ebx
  421b8f:	arpl   bp,si
  421b91:	pop    ecx
  421b92:	or     eax,ecx
  421b94:	(bad)  [eax-0x45]
  421b97:	adc    eax,0x69ef53ef
  421b9c:	jae    0x421b70
  421b9e:	adc    al,0xce
  421ba0:	arpl   WORD PTR [esi+0x23],sp
  421ba3:	pop    ebp
  421ba4:	push   ss
  421ba5:	lahf   
  421ba6:	icebp  
  421ba7:	mov    esp,0xb14deea0
  421bac:	enter  0x9d7,0xe2
  421bb0:	jl     0x421b88
  421bb2:	out    0x7,al
  421bb4:	push   es
  421bb5:	and    BYTE PTR [edi],dh
  421bb7:	mov    WORD PTR [edi+0x54af9ab9],ss
  421bbd:	xchg   ebp,eax
  421bbe:	or     DWORD PTR [edx+0x5b],ebp
  421bc1:	mov    cl,0x22
  421bc3:	pop    eax
  421bc4:	add    ah,BYTE PTR [esi+0x6ae6e52b]
  421bca:	adc    BYTE PTR [ebx+0x7a],ah
  421bcd:	jg     0x421bd9
  421bcf:	pop    es
  421bd0:	xchg   ebx,eax
  421bd1:	cmp    eax,0x2d1a5955
  421bd6:	inc    ebp
  421bd7:	jmp    0x901c:0x46e40ac
  421bde:	sbb    DWORD PTR [edi+ebx*2-0x11349699],eax
  421be5:	cmp    eax,0x9aca340c
  421bea:	jb     0x421c20
  421bec:	pop    eax
  421bed:	jo     0x421c56
  421bef:	xor    ah,BYTE PTR [ebx+0x2261b4aa]
  421bf5:	xchg   BYTE PTR [edx-0x30],bl
  421bf8:	pop    ebx
  421bf9:	popa   
  421bfa:	mov    BYTE PTR [edx],ch
  421bfc:	or     eax,0xa4892f47
  421c01:	inc    edx
  421c02:	stc    
  421c03:	daa    
  421c04:	jmp    0xe8c3:0x5b3efb05
  421c0b:	jmp    0x421bda
  421c0d:	popf   
  421c0e:	sub    eax,0xe5fbe70c
  421c13:	ret    0xa3a6
  421c16:	pop    esi
  421c17:	jns    0x421c5b
  421c19:	xor    edi,ebp
  421c1b:	fs loopne 0x421bda
  421c1e:	pop    ds
  421c1f:	loope  0x421c8c
  421c21:	int    0xfa
  421c23:	(bad)  
  421c24:	adc    eax,0xe8fad49d
  421c29:	loop   0x421bab
  421c2b:	jbe    0x421c19
  421c2d:	call   0x3fea5344
  421c32:	mov    esp,0x9e03fe86
  421c37:	rcl    dh,1
  421c39:	jae    0x421c36
  421c3b:	(bad)  
  421c3e:	stc    
  421c3f:	aam    0x3e
  421c41:	call   0x7933:0x376278d0
  421c48:	sbb    BYTE PTR [ecx+0x36],dl
  421c4b:	mov    ecx,0xf3a26e55
  421c50:	call   0xafba1280
  421c55:	(bad)  [esi]
  421c57:	jmp    0x421c5d
  421c59:	stc    
  421c5a:	imul   edx,DWORD PTR [eax],0xffffffa4
  421c5d:	ror    BYTE PTR [eax+0x14],cl
  421c60:	rcr    BYTE PTR [esi+0x41],1
  421c63:	cdq    
  421c64:	push   0x674a6188
  421c69:	mov    ds,WORD PTR [ecx+eiz*2+0x7a]
  421c6d:	inc    edi
  421c6e:	lock repz push 0xffffffd4
  421c72:	xor    DWORD PTR [ecx],ebp
  421c74:	dec    eax
  421c75:	leave  
  421c76:	clc    
  421c77:	jl     0x421c9a
  421c79:	call   0x736881c3
  421c7e:	out    0x6e,al
  421c80:	jge    0x421c49
  421c82:	mov    ds:0x77beb2d8,eax
  421c87:	push   ebx
  421c88:	pushf  
  421c89:	xlat   BYTE PTR ds:[ebx]
  421c8a:	sub    eax,0xb4d4cb05
  421c8f:	mov    dh,0x64
  421c91:	sub    ecx,esp
  421c93:	pop    ss
  421c94:	(bad)  
  421c95:	sbb    al,0x26
  421c97:	(bad)  
  421c98:	xor    ecx,eax
  421c9a:	jmp    0x421d11
  421c9c:	push   0xa4251902
  421ca1:	pop    edx
  421ca2:	sbb    ecx,edx
  421ca4:	stc    
  421ca5:	je     0x421ca1
  421ca7:	jmp    0xa42d8b00
  421cac:	sahf   
  421cad:	mov    BYTE PTR [edx+0x40701493],al
  421cb3:	push   edi
  421cb4:	xchg   edx,eax
  421cb5:	pop    es
  421cb6:	repz add ebp,esp
  421cb9:	cmp    ax,0x2541
  421cbd:	out    dx,al
  421cbe:	mov    bl,0x37
  421cc0:	add    al,0x12
  421cc2:	sbb    BYTE PTR [ecx],0x78
  421cc5:	(bad)  
  421cc6:	ret    
  421cc7:	imul   ebx,ecx,0xffffffdb
  421cca:	sbb    al,0x98
  421ccc:	into   
  421ccd:	addr16 cmp al,0xb4
  421cd0:	sbb    al,0x6e
  421cd2:	push   ebx
  421cd3:	sub    al,0x5b
  421cd5:	jno    0x421d2b
  421cd7:	dec    edx
  421cd8:	push   es
  421cd9:	jmp    0x31e818
  421cde:	dec    ecx
  421cdf:	cmp    BYTE PTR [ebx+0x41],ch
  421ce2:	push   edi
  421ce3:	test   BYTE PTR [ebp-0x6],cl
	...
  421cf2:	adc    bl,al
  421cf4:	arpl   WORD PTR [edx-0x15],si
  421cf7:	sti    
  421cf8:	adc    edi,eax
  421cfa:	sub    edi,DWORD PTR [ebx-0x7fd87709]
  421d00:	aam    0xf6
  421d02:	pop    edx
  421d03:	nop
  421d04:	add    DWORD PTR [eax],eax
  421d06:	int3   
  421d07:	add    al,BYTE PTR [eax]
  421d09:	add    BYTE PTR [ebx-0x1e],ah
  421d0c:	je     0x421cbd
  421d0e:	adc    eax,0xd736c475
  421d14:	dec    esp
  421d15:	test   eax,0xcbf50632
  421d1a:	and    al,0x6
  421d1c:	mov    ebx,0x4f1337ee
  421d21:	(bad)  
  421d22:	out    dx,eax
  421d23:	(bad)  
  421d24:	aad    0x9f
  421d26:	loopne 0x421d18
  421d28:	retf   0xab50
  421d2b:	cmp    bl,BYTE PTR [edx+0x49]
  421d2e:	mov    ebx,0x3b982b91
  421d33:	ficomp WORD PTR [ebp-0x75]
  421d36:	jp     0x421cc3
  421d38:	test   eax,0x8cd3bddd
  421d3d:	ret    
  421d3e:	push   eax
  421d3f:	int3   
  421d40:	add    al,0xb3
  421d42:	aam    0x59
  421d44:	imul   ecx,DWORD PTR [edx+0xc]
  421d48:	mov    dl,BYTE PTR [edi+0x134715a6]
  421d4e:	enter  0x8a0f,0x11
  421d52:	dec    ebp
  421d53:	std    
  421d54:	fwait
  421d55:	aam    0x5c
  421d57:	xor    esi,DWORD PTR [esi]
  421d59:	xchg   BYTE PTR [ebp+ebp*2+0x4a],cl
  421d5d:	dec    ebx
  421d5e:	retf   0xb6d1
  421d61:	aam    0x24
  421d63:	(bad)  
  421d64:	(bad)  
  421d65:	fnsave [ecx+0x5476d6dd]
  421d6b:	mov    esi,0x680ec72c
  421d70:	inc    esp
  421d71:	leave  
  421d72:	repnz fadd QWORD PTR [edi+ebx*2+0x5cd0b314]
  421d7a:	fsubr  DWORD PTR [ebx]
  421d7c:	leave  
  421d7d:	fwait
  421d7e:	xchg   edi,eax
  421d7f:	dec    ecx
  421d80:	adc    eax,0xe46262e9
  421d85:	je     0x421d4b
  421d87:	adc    dh,BYTE PTR [eax-0x73458db]
  421d8d:	repz cdq 
  421d8f:	adc    DWORD PTR [ebp+eax*2+0x0],edx
  421d93:	push   edx
  421d94:	ss (bad) 
  421d97:	pop    ds
  421d98:	sub    eax,0x33c127e5
  421d9d:	add    BYTE PTR [edx-0x2cd1f372],0x2
  421da4:	inc    ecx
  421da5:	dec    esi
  421da6:	std    
  421da7:	loope  0x421e26
  421da9:	pop    ebx
  421daa:	repz mov edi,0x7e16868f
  421db0:	sub    BYTE PTR [eax],bh
  421db2:	(bad)  
  421db4:	mov    bl,0xd1
  421db6:	add    al,0x9d
  421db8:	ret    
  421db9:	xor    eax,0x4de7d4c3
  421dbe:	fimul  WORD PTR [esi-0x4f]
  421dc1:	xor    BYTE PTR [edx+0x59],ah
  421dc4:	pop    ebx
  421dc5:	xchg   esp,eax
  421dc6:	popf   
  421dc7:	xchg   BYTE PTR ds:0xa2f398de,al
  421dcd:	jg     0x421dce
  421dcf:	cmp    bl,dh
  421dd1:	(bad)  
  421dd2:	cmc    
  421dd3:	xor    edi,edi
  421dd5:	cmp    eax,0x774232f0
  421dda:	sbb    BYTE PTR [ebp-0x31],0x8e
  421dde:	xor    BYTE PTR es:[edi-0x18527ce8],ch
  421de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de6:	jno    0x421df6
  421de8:	es pop eax
  421dea:	push   edx
  421deb:	cdq    
  421dec:	call   0x6ca223a2
  421df1:	call   0x78d0:0x335da12f
  421df8:	sub    ecx,0xffffffd7
  421dfb:	and    BYTE PTR ds:0xa3e7f7e,bh
  421e01:	dec    esp
  421e02:	mov    esp,DWORD PTR [esi]
  421e04:	inc    ebx
  421e05:	xlat   BYTE PTR gs:[ebx]
  421e07:	push   0xfffffff3
  421e09:	repnz stos DWORD PTR es:[edi],eax
  421e0b:	or     al,0xb9
  421e0d:	in     eax,0x7e
  421e0f:	outs   dx,BYTE PTR ds:[esi]
  421e10:	mov    esi,0x8426c8e6
  421e15:	sbb    DWORD PTR [eax-0x35],0xffffff87
  421e19:	mov    ebx,0x82739a21
  421e1e:	(bad)  
  421e1f:	adc    al,0x6a
  421e21:	sbb    eax,0xcbb8e007
  421e26:	mov    ch,BYTE PTR [edi+0x69baebf2]
  421e2c:	stc    
  421e2d:	out    0x99,eax
  421e2f:	popa   
  421e30:	pop    edi
  421e31:	and    dl,BYTE PTR [di+0x31]
  421e35:	mov    dl,0xc6
  421e37:	or     dl,BYTE PTR [ecx+0x5a04b85b]
  421e3d:	rcr    ch,cl
  421e3f:	sbb    BYTE PTR [esi+0xe1806ef],dh
  421e45:	pop    ecx
  421e46:	out    dx,eax
  421e47:	das    
  421e48:	or     ebx,DWORD PTR [esi-0x317ff1b7]
  421e4e:	mov    eax,ds:0x85bf2b4a
  421e53:	jmp    0x45d0a8d0
  421e58:	outs   dx,BYTE PTR ds:[esi]
  421e59:	shr    BYTE PTR [ecx],cl
  421e5b:	in     eax,0xcc
  421e5d:	(bad)  
  421e5e:	cmp    al,0x2d
  421e60:	cmp    edx,DWORD PTR [ecx]
  421e62:	retf   
  421e63:	ja     0x421e06
  421e65:	cmp    eax,0x725d150b
  421e6a:	add    BYTE PTR [ebp+0x56],bl
  421e6d:	iret   
  421e6e:	and    BYTE PTR [esi+0x4256a02a],ah
  421e74:	(bad)  
  421e75:	enter  0x82b0,0xcb
  421e79:	ret    0x5614
  421e7c:	loopne 0x421e4e
  421e7e:	(bad)  
  421e7f:	adc    DWORD PTR [ebp+0xf],esi
  421e82:	push   0x3314f6ff
  421e87:	retf   0x2b4
  421e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e8b:	dec    edi
  421e8c:	clc    
  421e8d:	jbe    0x421e96
  421e8f:	adc    BYTE PTR [ebx+edi*8],ah
  421e92:	jecxz  0x421ed4
  421e94:	mov    ch,0x3
  421e96:	js     0x421ee4
  421e98:	pop    ecx
  421e99:	or     bh,0x44
  421e9c:	adc    dl,BYTE PTR [edi+0x3]
  421e9f:	mov    esp,0xa6afc78c
  421ea4:	imul   DWORD PTR [ebp+ebp*4-0x555ff641]
  421eab:	mov    edi,0x4fe0052d
  421eb0:	lock jbe 0x421e3c
  421eb3:	call   0x602b:0xe4d5c3af
  421eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ebb:	into   
  421ebc:	jae    0x421f11
  421ebe:	inc    ebp
  421ebf:	push   ebx
  421ec0:	cmp    edx,ecx
  421ec2:	lods   eax,DWORD PTR ds:[esi]
  421ec3:	aam    0x3d
  421ec5:	aam    0x17
  421ec7:	mov    ds:0x5637fad1,al
  421ecc:	sub    al,BYTE PTR [esi+0x1e]
  421ecf:	mov    ch,0x4
  421ed1:	jbe    0x421ea5
  421ed3:	imul   eax,DWORD PTR [esi+0x77],0xe432065
  421eda:	das    
  421edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421edc:	push   ss
  421edd:	mov    ebx,gs
  421edf:	stos   BYTE PTR es:[edi],al
  421ee0:	les    esp,FWORD PTR [ebp+0xc9deefa]
  421ee6:	and    BYTE PTR [edx+0x0],bh
  421ee9:	pusha  
  421eea:	adc    al,0xa1
  421eec:	pushf  
  421eed:	xchg   ebx,eax
  421eee:	iret   
  421eef:	mov    bl,0xd5
  421ef1:	pop    esp
  421ef2:	ss xor edx,esi
  421ef5:	jmp    0x421ee8
  421ef7:	nop
  421ef8:	sbb    DWORD PTR [ebp-0x2],0xffffff88
  421efc:	into   
  421efd:	fwait
  421efe:	and    BYTE PTR [edi+0x11],al
  421f01:	mul    ebx
  421f03:	ja     0x421f6f
  421f05:	test   DWORD PTR [edx-0x7c],0xbab39dc4
  421f0c:	jl     0x421f24
  421f0e:	imul   edi,edx,0x5a754812
  421f14:	cmp    dl,BYTE PTR [ebx+0x358753af]
  421f1a:	in     al,0xd6
  421f1c:	jl     0x421f10
  421f1e:	and    eax,0xb4a94e7c
  421f23:	nop
  421f24:	stc    
  421f25:	cmp    eax,0xb507433e
  421f2a:	mov    eax,ds:0x9dcbc37b
  421f2f:	(bad)  
  421f30:	std    
  421f31:	xor    al,0x6a
  421f33:	xchg   edx,eax
  421f34:	jg     0x421f80
  421f36:	jnp    0x421f0b
  421f38:	bound  ebp,QWORD PTR [eax+0x7e]
  421f3b:	push   eax
  421f3c:	out    0x47,eax
  421f3e:	mov    edx,0xa765f945
  421f43:	xchg   edi,eax
  421f44:	push   ds
  421f45:	pop    dx
  421f47:	enter  0x951c,0x5d
  421f4b:	sbb    eax,DWORD PTR [ecx+0x67]
  421f4e:	cmp    BYTE PTR [edx-0x5bf32960],dh
  421f54:	int    0xc3
  421f56:	xchg   esp,eax
  421f57:	iret   
  421f58:	test   eax,0xab596bee
  421f5d:	inc    ebp
  421f5e:	test   DWORD PTR [eax+0x70],esi
  421f61:	cmp    DWORD PTR [esi],esp
  421f63:	out    dx,eax
  421f64:	adc    ch,BYTE PTR [eax]
  421f66:	inc    esi
  421f67:	and    ah,bl
  421f69:	fsubr  QWORD PTR ds:0x1fb174d
  421f6f:	int    0xf3
  421f71:	jb     0x421ff2
  421f73:	and    DWORD PTR [eax+0x2c57e274],0xffffffb2
  421f7a:	jge    0x421f8a
  421f7c:	xrelease xchg DWORD PTR [eax+0x787e2dda],edx
  421f83:	mov    eax,0xaa66ac49
  421f88:	hlt    
  421f89:	xchg   ecx,eax
  421f8a:	cmp    DWORD PTR [edi+0x3a9864be],eax
  421f90:	cld    
  421f91:	push   eax
  421f92:	shl    DWORD PTR [ebx],0xe3
  421f95:	mov    al,ds:0xf922db5e
  421f9a:	xchg   edi,eax
  421f9b:	scas   al,BYTE PTR es:[edi]
  421f9c:	inc    esp
  421f9d:	xlat   BYTE PTR ds:[ebx]
  421f9e:	fistp  DWORD PTR [edi]
  421fa0:	push   edx
  421fa1:	push   esp
  421fa2:	push   ds
  421fa3:	adc    ecx,ecx
  421fa5:	mov    ah,0xc4
  421fa7:	adc    al,0x8a
  421fa9:	nop
  421faa:	hlt    
  421fab:	add    bl,BYTE PTR [edi+0x30]
  421fae:	pop    ecx
  421faf:	xor    DWORD PTR [ebp-0x18],0x60
  421fb3:	ja     0x421ff8
  421fb5:	xor    cl,BYTE PTR [ecx-0x7e7cc6ca]
  421fbb:	arpl   WORD PTR [edi+0x39],bp
  421fbe:	mov    ebx,gs
  421fc0:	xor    dh,BYTE PTR [esi+0x62466d3f]
  421fc6:	push   ecx
  421fc7:	stos   DWORD PTR es:[edi],eax
  421fc8:	ret    
  421fc9:	out    dx,al
  421fca:	mov    ds:0x373b02fb,eax
  421fcf:	add    BYTE PTR [edx+0x484b2b94],ch
  421fd5:	mov    ch,0x0
	...
  421fdf:	add    BYTE PTR [eax],al
  421fe1:	add    BYTE PTR [esi],cl
  421fe3:	and    BYTE PTR [eax-0x404051c1],cl
  421fe9:	xor    DWORD PTR [ebx+0x2f9289bd],edx
  421fef:	push   0xfffffff1
  421ff1:	mov    eax,ds:0x19326
  421ff6:	int3   
  421ff7:	add    al,BYTE PTR [eax]
  421ff9:	add    BYTE PTR [edx],dl
  421ffb:	repz sahf 
  421ffd:	dec    esp
  421ffe:	cmp    esp,esi
  422000:	cmp    BYTE PTR [ebx],bh
  422002:	push   ds
  422003:	adc    edx,ecx
  422005:	inc    ecx
  422006:	adc    al,0x5f
  422008:	xchg   ebp,eax
  422009:	(bad)  
  42200a:	fdivr  QWORD PTR [eax-0x35]
  42200d:	xchg   ebx,eax
  42200e:	mov    cl,0xb1
  422010:	and    BYTE PTR [ebx-0x4614ca8a],dh
  422016:	mov    al,ds:0x22b9404c
  42201b:	add    DWORD PTR [eax+0x8],esi
  42201e:	jno    0x422039
  422020:	rcr    BYTE PTR [esi-0x6],cl
  422023:	pop    edi
  422024:	mov    cl,0xf8
  422026:	jnp    0x422008
  422028:	ds jnp 0x422050
  42202b:	mov    bl,0xe9
  42202d:	std    
  42202e:	xor    ebx,ecx
  422030:	xchg   ebp,eax
  422031:	call   0x8684:0x892f771
  422038:	push   ss
  422039:	adc    DWORD PTR [eax],eax
  42203b:	mov    esp,0x2ab27b10
  422040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422041:	popa   
  422042:	adc    al,0x0
  422045:	test   dh,al
  422047:	pop    ss
  422048:	jnp    0x421feb
  42204a:	imul   ebp,DWORD PTR [ebp+0x7af7db97],0x2d
  422051:	mov    DWORD PTR [esp+eax*1],edi
  422054:	mov    DWORD PTR [ecx-0x1e],0xc8d417b6
  42205b:	jmp    0x8c2f:0xa9e972e7
  422062:	fwait
  422063:	jbe    0x4220c2
  422065:	fisubr WORD PTR [ecx]
  422067:	sbb    BYTE PTR [ecx],0xcc
  42206a:	out    dx,al
  42206b:	je     0x422064
  42206d:	imul   esp,DWORD PTR [edx+0x6ba2edfa],0xffffffff
  422074:	cmp    DWORD PTR [eax-0x24008e0d],eax
  42207a:	cs dec ebx
  42207c:	test   dh,ch
  42207e:	aaa    
  42207f:	push   ebp
  422080:	mov    al,0x6f
  422082:	mov    ?,WORD PTR [ecx-0x2d]
  422085:	stos   BYTE PTR es:[edi],al
  422086:	icebp  
  422087:	outs   dx,BYTE PTR ds:[esi]
  422088:	scas   al,BYTE PTR es:[edi]
  422089:	sub    eax,0xca7a36c3
  42208e:	mov    cs,WORD PTR [edx+0x4e]
  422091:	ss popf 
  422093:	jmp    0x42206b
  422095:	mov    ebp,esi
  422097:	adc    ecx,DWORD PTR [ebp-0x57]
  42209a:	jecxz  0x4220a0
  42209c:	stos   BYTE PTR es:[edi],al
  42209d:	cmc    
  42209e:	xchg   esi,eax
  42209f:	loope  0x422103
  4220a1:	fst    QWORD PTR ds:0x3e11999c
  4220a7:	aam    0x57
  4220a9:	lods   al,BYTE PTR ds:[esi]
  4220aa:	fs test eax,0x79584e7f
  4220b0:	arpl   WORD PTR [ecx+0x4d0e3afa],cx
  4220b6:	push   ss
  4220b7:	jnp    0x422094
  4220b9:	mov    edx,0xc0d83f9
  4220be:	push   cs
  4220bf:	push   eax
  4220c0:	fild   QWORD PTR [ecx-0x6e]
  4220c3:	cld    
  4220c4:	(bad)  [ebp+0x2b555ea9]
  4220ca:	fisttp WORD PTR [ebx+0x346c745c]
  4220d0:	mov    dl,0xc
  4220d2:	call   0x1616346c
  4220d7:	leave  
  4220d8:	loop   0x4220a2
  4220da:	ret    0xbf91
  4220dd:	call   0x2bff0827
  4220e2:	and    BYTE PTR [ebx+ebp*2-0x669cf1a1],0x56
  4220ea:	pop    eax
  4220eb:	jne    0x422107
  4220ed:	ja     0x4220ac
  4220ef:	scas   eax,DWORD PTR es:[edi]
  4220f0:	fwait
  4220f1:	pop    es
  4220f2:	je     0x422149
  4220f4:	mov    cl,0x34
  4220f6:	repz jbe 0x4220ae
  4220f9:	aad    0x3b
  4220fb:	enter  0xb485,0x2
  4220ff:	push   ds
  422100:	pushf  
  422101:	jl     0x4220b5
  422103:	push   eax
  422104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422105:	xchg   ecx,eax
  422106:	add    al,0x9f
  422108:	sub    dh,BYTE PTR [edx+0x11]
  42210b:	ffreep st(3)
  42210d:	jecxz  0x42217c
  42210f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422110:	mov    edi,0xf0a5060e
  422115:	xor    al,0xa0
  422117:	adc    eax,0xc9123285
  42211c:	cmp    cl,bl
  42211e:	cmc    
  42211f:	(bad)  
  422120:	sub    esi,DWORD PTR [esi+0x23]
  422123:	mov    ch,0xf9
  422125:	xchg   ebx,eax
  422126:	dec    esp
  422127:	add    BYTE PTR [ecx+0x73a08c2c],al
  42212d:	sti    
  42212e:	sub    BYTE PTR [edx-0x36],cl
  422131:	nop
  422132:	cmp    DWORD PTR [esi],ecx
  422134:	xchg   BYTE PTR [esi],al
  422136:	pop    ebx
  422137:	ror    DWORD PTR [ebx*4-0x2e2f9c97],1
  42213e:	fs push cs
  422140:	lea    esi,[ebp-0x674fdb3e]
  422146:	lahf   
  422147:	mov    bh,0x75
  422149:	add    ch,BYTE PTR [eax]
  42214b:	retf   0xb2b9
  42214e:	xor    DWORD PTR [edx-0x629d9cfd],edi
  422154:	xchg   ebp,eax
  422155:	repnz test esi,0x4c44f6cf
  42215c:	jg     0x4221d5
  42215e:	sub    eax,0xe103a106
  422163:	push   ebx
  422164:	inc    edi
  422165:	pop    edx
  422166:	mov    eax,ds:0xa5a8bcca
  42216b:	js     0x42219a
  42216d:	push   0x8425bfa6
  422172:	scas   al,BYTE PTR es:[edi]
  422173:	in     eax,dx
  422174:	lds    esp,FWORD PTR [edi]
  422176:	lods   eax,DWORD PTR ds:[esi]
  422177:	mov    BYTE PTR [ebx],bh
  422179:	out    dx,eax
  42217a:	sbb    bl,BYTE PTR [edi+0x3d]
  42217d:	xlat   BYTE PTR ds:[ebx]
  42217e:	sub    BYTE PTR [ecx+0x1a],cl
  422181:	or     eax,0x1163fcb0
  422186:	sub    dh,ah
  422188:	enter  0xefac,0xb0
  42218c:	popf   
  42218d:	mov    eax,0xabc43e4c
  422192:	xchg   ecx,eax
  422193:	lods   al,BYTE PTR ds:[esi]
  422194:	outs   dx,DWORD PTR ds:[esi]
  422195:	inc    esp
  422196:	mov    al,ds:0xaa24e295
  42219b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42219c:	sbb    al,0xff
  42219f:	daa    
  4221a0:	push   0xffffff91
  4221a2:	arpl   WORD PTR [eax+0x5f],bx
  4221a5:	neg    BYTE PTR [esi]
  4221a7:	xchg   ebx,eax
  4221a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a9:	cdq    
  4221aa:	push   ebp
  4221ab:	sbb    al,0x8c
  4221ad:	or     ecx,DWORD PTR [ebp-0x75]
  4221b0:	scas   eax,DWORD PTR es:[edi]
  4221b1:	shl    BYTE PTR [eax-0x2afd178e],1
  4221b7:	xor    eax,DWORD PTR [ecx+0x7f]
  4221ba:	xchg   BYTE PTR [edx+0x739f71a5],bh
  4221c0:	sbb    DWORD PTR [ebx+0x7d],eax
  4221c3:	cmc    
  4221c4:	push   ss
  4221c5:	cmp    ah,BYTE PTR [esi]
  4221c7:	pop    edx
  4221c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c9:	(bad)
  4221cc:	cmp    eax,0x856e94c5
  4221d1:	sbb    al,0x94
  4221d3:	push   edi
  4221d4:	je     0x42218b
  4221d6:	adc    BYTE PTR [edx],ch
  4221d8:	push   esi
  4221d9:	loopne 0x422194
  4221db:	adc    ch,bh
  4221dd:	cmp    al,0xeb
  4221df:	inc    esp
  4221e0:	mov    edx,0x14709b2b
  4221e5:	pop    ebp
  4221e6:	popa   
  4221e7:	mov    BYTE PTR [eax],dh
  4221e9:	mov    eax,ds:0xd7d210d5
  4221ee:	jg     0x4221cc
  4221f0:	xchg   ch,cl
  4221f2:	stc    
  4221f3:	daa    
  4221f4:	and    esi,DWORD PTR [ecx-0xdb7266d]
  4221fa:	pusha  
  4221fb:	(bad)  
  4221fc:	in     al,dx
  4221fd:	push   eax
  4221fe:	es mov ecx,0xe6ae0a49
  422204:	iret   
  422205:	mov    esi,0x49cd0abd
  42220a:	(bad)  
  42220b:	adc    al,0xf6
  42220d:	rol    ebx,1
  42220f:	and    eax,0xf610b68f
  422214:	in     al,0x3e
  422216:	scas   al,BYTE PTR es:[edi]
  422217:	ja     0x422223
  422219:	push   edi
  42221a:	sbb    BYTE PTR [edi+eiz*1],dh
  42221d:	cwde   
  42221e:	sbb    dh,BYTE PTR [ecx-0x17]
  422221:	add    ecx,edi
  422223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422224:	and    eax,0x787a23bc
  422229:	add    BYTE PTR [edx-0x20],al
  42222c:	jle    0x4221bc
  42222e:	and    eax,0x18a4a9ef
  422233:	sbb    al,0x4d
  422235:	fidivr WORD PTR [ebp+0x676a5164]
  42223b:	add    al,0x83
  42223d:	sti    
  42223e:	lods   al,BYTE PTR ds:[esi]
  42223f:	out    dx,eax
  422240:	cdq    
  422241:	dec    ebp
  422242:	mov    dl,0x7f
  422244:	outs   dx,DWORD PTR ds:[esi]
  422245:	rcr    al,cl
  422247:	sbb    al,0xd4
  422249:	push   eax
  42224a:	fnsave [ebx-0x27]
  42224d:	fwait
  42224e:	add    al,0x35
  422250:	xor    cl,BYTE PTR [edi+ebx*1]
  422253:	push   ebx
  422254:	pop    ebp
  422255:	shl    dl,cl
  422257:	jmp    0x220f:0x9f714c08
  42225e:	push   cs
  42225f:	xor    ebp,eax
  422261:	enter  0x4206,0xe7
  422265:	pop    ebp
  422266:	movntps XMMWORD PTR [ecx-0x2df8e6e5],xmm1
  42226d:	fsubr  QWORD PTR [edi]
  42226f:	stos   BYTE PTR es:[edi],al
  422270:	test   BYTE PTR [ebx-0x27],cl
  422273:	cmp    ebx,DWORD PTR [ebx]
  422275:	sub    cl,BYTE PTR [edi-0x628b7de2]
  42227b:	push   ebp
  42227c:	xor    al,0xa7
  42227e:	or     ebp,DWORD PTR [ebx+0x34b1b3bf]
  422284:	add    eax,0xdc646764
  422289:	aaa    
  42228a:	stc    
  42228b:	dec    edx
  42228c:	sub    cl,BYTE PTR [ecx+0x1c4c054]
  422292:	mov    ch,0xb2
  422294:	fmul   QWORD PTR [esi]
  422296:	aad    0xc3
  422298:	sbb    ecx,DWORD PTR [edi+ebx*8]
  42229b:	mov    ah,0x9a
  42229d:	mov    bh,0x48
  42229f:	pextrw ebx,(bad),0xc5
  4222a1:	pop    esp
  4222a2:	fsubrp st(4),st
  4222a4:	push   ebp
  4222a5:	xchg   BYTE PTR [ebx-0x536219c],cl
  4222ab:	dec    eax
  4222ac:	xlat   BYTE PTR ds:[ebx]
  4222ad:	test   eax,0x2f01258d
  4222b2:	and    esi,DWORD PTR ds:0x1583ac50
  4222b8:	xchg   cl,ah
  4222ba:	dec    edi
  4222bb:	pop    edx
  4222bc:	scas   al,BYTE PTR es:[edi]
  4222bd:	mov    esp,0x63513cd3
  4222c2:	shr    BYTE PTR [eax+0x51c1],cl
	...
  4222d0:	add    BYTE PTR [eax],al
  4222d2:	pop    esp
  4222d3:	mov    edi,0xdce35063
  4222d8:	jg     0x422299
  4222da:	popa   
  4222db:	hlt    
  4222dc:	mov    esi,0x793fbd1d
  4222e1:	add    dl,dh
  4222e3:	xchg   ebp,eax
  4222e4:	add    DWORD PTR [eax],eax
  4222e6:	int3   
  4222e7:	add    al,BYTE PTR [eax]
  4222e9:	add    BYTE PTR [edi+0x2b],dh
  4222ec:	clc    
  4222ed:	(bad)  
  4222ee:	fcmovne st,st(0)
  4222f0:	mov    esp,0xed887112
  4222f5:	cmp    esi,edx
  4222f7:	mov    eax,ds:0x3326c551
  4222fc:	xchg   esp,eax
  4222fd:	mov    al,ds:0x442be301
  422302:	mov    al,0x6a
  422304:	jle    0x42234c
  422306:	fidivr WORD PTR [eax+0x61db4fe4]
  42230c:	cld    
  42230d:	pusha  
  42230e:	je     0x4222f4
  422310:	int    0x35
  422312:	cmp    eax,0x167575a8
  422317:	pop    es
  422318:	ins    DWORD PTR es:[edi],dx
  422319:	sti    
  42231a:	fisttp WORD PTR ds:0xdff55e55
  422320:	dec    esp
  422321:	jae    0x42232f
  422323:	or     ecx,DWORD PTR [edx]
  422325:	add    edx,DWORD PTR [esi]
  422327:	(bad)  
  422328:	(bad)  
  422329:	mov    ch,0xf5
  42232b:	push   esi
  42232c:	xchg   ebp,eax
  42232d:	ds jg  0x4222e7
  422330:	test   eax,0x6d7530fd
  422335:	dec    esi
  422336:	lock les ecx,FWORD PTR [ebp+0x3bd75587]
  42233d:	hlt    
  42233e:	mov    cl,dh
  422340:	call   0xdacfa0a6
  422345:	jmp    0xb61d77fa
  42234a:	jg     0x4223c1
  42234c:	clc    
  42234d:	push   ss
  42234e:	cmp    bl,BYTE PTR [edi-0x3a]
  422351:	ja     0x422332
  422353:	pop    esp
  422354:	fbstp  TBYTE PTR [edx-0x692f2a6a]
  42235a:	mov    DWORD PTR [edi-0x66a2972e],ebx
  422360:	dec    esi
  422361:	push   ecx
  422362:	xchg   edi,eax
  422363:	pop    eax
  422364:	jge    0x42238e
  422366:	mov    bh,0x79
  422368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422369:	sar    DWORD PTR [ebp+0x1a],0xb
  42236d:	outs   dx,DWORD PTR ds:[esi]
  42236e:	loop   0x422352
  422370:	xor    eax,0xec8eb057
  422375:	pop    ss
  422376:	jns    0x4222fd
  422378:	call   0x49bf:0x187d0a57
  42237f:	(bad)  
  422380:	mov    bl,0xd
  422382:	test   DWORD PTR [esi-0xbc05638],ebp
  422388:	js     0x4223e5
  42238a:	xor    bl,0x40
  42238d:	sbb    eax,0x20cd6f1e
  422392:	adc    ebx,DWORD PTR [ebp+0x55]
  422395:	sbb    esp,DWORD PTR [ebp-0x169f1c80]
  42239b:	pop    edi
  42239c:	add    al,0x6
  42239e:	lods   al,BYTE PTR ds:[esi]
  42239f:	into   
  4223a0:	fisub  DWORD PTR [edx+ecx*2+0x0]
  4223a4:	dec    edi
  4223a5:	dec    DWORD PTR [edx]
  4223a7:	call   0x80edfb12
  4223ac:	and    al,BYTE PTR [esi]
  4223ae:	push   eax
  4223af:	cdq    
  4223b0:	in     al,dx
  4223b1:	loope  0x42242d
  4223b3:	or     ebp,DWORD PTR [eax+eiz*8]
  4223b6:	add    dl,BYTE PTR [esi+0x1d]
  4223b9:	add    eax,0xfc0de62c
  4223be:	mov    ds:0x56eb770d,eax
  4223c3:	mov    esi,0xa0069395
  4223c8:	fnsave [esi-0x48]
  4223cb:	imul   DWORD PTR ds:0x26466806
  4223d1:	mov    eax,0x84d0f609
  4223d6:	mov    dh,0x9
  4223d8:	xor    DWORD PTR [eax],ebx
  4223da:	outs   dx,DWORD PTR ds:[esi]
  4223db:	cmp    DWORD PTR es:[edi-0x50033f0d],edi
  4223e2:	cmp    DWORD PTR [edx-0x9],edx
  4223e5:	in     eax,dx
  4223e6:	mov    ds:0x4e81da9c,eax
  4223eb:	xchg   edx,eax
  4223ec:	mov    ebp,0x5af6513c
  4223f1:	lods   al,BYTE PTR ds:[esi]
  4223f2:	mov    bh,0x37
  4223f4:	and    esi,DWORD PTR ds:0x23ca09e7
  4223fa:	push   edi
  4223fb:	add    bl,BYTE PTR [esi-0x27cd70b0]
  422401:	mov    eax,0xb976555e
  422406:	sub    BYTE PTR [ebx+0x377d9610],dh
  42240c:	jnp    0x422424
  42240e:	cmp    al,0x1d
  422410:	mov    bl,0x98
  422412:	scas   eax,DWORD PTR es:[edi]
  422413:	add    BYTE PTR [ebp+eiz*1-0x53c431],dh
  42241a:	cmp    DWORD PTR [ecx],edi
  42241c:	push   esi
  42241d:	and    dl,BYTE PTR [ebp+0x16]
  422420:	jge    0x42247c
  422422:	cmp    eax,0x5ab2cd67
  422427:	sbb    BYTE PTR [edi-0x14],dh
  42242a:	jae    0x42248a
  42242c:	adc    esi,ebp
  42242e:	fst    st(6)
  422430:	mov    bl,BYTE PTR [ecx]
  422432:	xor    BYTE PTR [edi],ah
  422434:	mov    ah,0x9e
  422436:	test   al,0x6e
  422438:	movlps QWORD PTR [esp+ebp*4-0x847802b],xmm2
  422440:	retf   0xb376
  422443:	retf   
  422444:	xchg   edx,eax
  422445:	mov    DWORD PTR [ebx],eax
  422447:	pop    ebx
  422448:	loopne 0x42248d
  42244a:	sbb    esi,DWORD PTR [ebx+0x4e46c042]
  422450:	int    0xfe
  422452:	arpl   dx,si
  422454:	xor    esp,DWORD PTR [ebp-0x2d]
  422457:	or     ah,BYTE PTR [ebx+0x31]
  42245a:	jle    0x422409
  42245c:	je     0x422435
  42245e:	xchg   edx,eax
  42245f:	or     al,ch
  422461:	push   esi
  422462:	or     edx,DWORD PTR [ebx-0x6d93a300]
  422468:	imul   edi,DWORD PTR [ebx-0x123941e8],0x52
  42246f:	pop    edi
  422470:	int    0xd4
  422472:	hlt    
  422473:	mov    ch,ah
  422475:	push   ebx
  422476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422477:	jge    0x4224a7
  422479:	mov    al,ds:0x4f9c2b2d
  42247e:	stc    
  42247f:	les    ecx,FWORD PTR [edi]
  422481:	jne    0x4224c5
  422483:	pop    esi
  422484:	jo     0x422444
  422486:	push   edi
  422487:	inc    ebp
  422488:	sbb    eax,DWORD PTR [edi+0x6e3154de]
  42248e:	or     DWORD PTR [edi-0x590bdd39],0xb1df896f
  422498:	test   eax,0x7fdc00dc
  42249d:	lods   al,BYTE PTR ds:[esi]
  42249e:	test   eax,0x4d6c24a0
  4224a3:	push   eax
  4224a4:	fs scas al,BYTE PTR es:[edi]
  4224a6:	mov    edx,edx
  4224a8:	pop    ecx
  4224a9:	mul    al
  4224ab:	test   al,0x80
  4224ad:	imul   ebx,DWORD PTR [eax+0x6e],0xffffffea
  4224b1:	or     eax,0xb47c81c9
  4224b6:	fbld   TBYTE PTR [ebp+0x2c]
  4224b9:	ins    BYTE PTR es:[edi],dx
  4224ba:	daa    
  4224bb:	xchg   DWORD PTR [esi],ebp
  4224bd:	leave  
  4224be:	adc    eax,0x125e1b74
  4224c3:	gs test eax,0x8ee92279
  4224c9:	xchg   DWORD PTR [ecx-0x768e2de2],edi
  4224cf:	xchg   esi,eax
  4224d0:	push   esi
  4224d1:	mov    ah,0xe3
  4224d3:	out    dx,al
  4224d4:	(bad)  
  4224d5:	fdiv   QWORD PTR [esi+0x444435ae]
  4224db:	jo     0x42246a
  4224dd:	mov    ebp,0x825aa75e
  4224e2:	inc    esp
  4224e3:	mov    ch,al
  4224e5:	mov    esp,0x1f85a175
  4224ea:	popa   
  4224eb:	and    al,0xbd
  4224ed:	push   es
  4224ee:	sbb    ah,BYTE PTR [esi+0x2f9bc98a]
  4224f4:	push   eax
  4224f5:	(bad)
  4224f9:	(bad)  
  4224fa:	mov    BYTE PTR [eax],bh
  4224fc:	cmp    ch,0x9b
  4224ff:	xor    al,0x62
  422501:	enter  0x9c7f,0x9d
  422505:	sbb    eax,0xbaec34d
  42250a:	repnz ins DWORD PTR es:[edi],dx
  42250c:	jbe    0x4224cc
  42250e:	ja     0x4224dd
  422510:	push   fs
  422512:	out    dx,eax
  422513:	dec    ebx
  422514:	fcom   QWORD PTR [eax]
  422516:	pop    edx
  422517:	mov    WORD PTR [eax+0x73c3c9de],cs
  42251d:	xchg   esp,eax
  42251e:	push   esp
  42251f:	repz pop edx
  422521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422522:	pop    edi
  422523:	mov    edi,0x4155e3a9
  422528:	stc    
  422529:	scas   al,BYTE PTR es:[edi]
  42252a:	adc    BYTE PTR [ebx-0x782f68dc],cl
  422530:	sub    al,0x47
  422532:	call   0xcbdb:0x58414f2d
  422539:	xchg   edi,eax
  42253a:	push   es
  42253b:	mov    bh,0x8a
  42253d:	or     DWORD PTR [ebp-0x7dc60592],esp
  422543:	add    cl,ah
  422545:	gs cmc 
  422547:	add    al,0x2c
  422549:	xlat   BYTE PTR ds:[ebx]
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	inc    ecx
  42254c:	push   esi
  42254d:	mov    bh,0xa1
  42254f:	leave  
  422550:	and    dl,BYTE PTR [edi+eiz*4]
  422553:	fild   QWORD PTR [eax-0x58bafa09]
  422559:	xchg   edx,eax
  42255a:	loope  0x42252f
  42255c:	push   DWORD PTR [ebp+0x1b527de0]
  422562:	jl     0x42256b
  422564:	mov    cl,0xa7
  422566:	pusha  
  422567:	aam    0xff
  422569:	and    al,0xda
  42256b:	adc    DWORD PTR [esi-0x74bcd852],ebx
  422571:	je     0x422519
  422573:	ins    BYTE PTR es:[edi],dx
  422574:	mov    esp,DWORD PTR [ecx+0x6b]
  422577:	sahf   
  422578:	scas   eax,DWORD PTR es:[edi]
  422579:	jae    0x4225cc
  42257b:	jo     0x42257d
  42257d:	sahf   
  42257e:	(bad)  
  42257f:	nop
  422580:	and    al,0xee
  422582:	out    0xcd,eax
  422584:	pop    ds
  422585:	adc    DWORD PTR [edx],edx
  422587:	cli    
  422588:	loop   0x4225b0
  42258a:	dec    ebp
  42258b:	adc    eax,DWORD PTR [ebp-0x30d101]
  422591:	lock stc 
  422593:	pusha  
  422594:	adc    al,0x8a
  422596:	jmp    0xe5b0:0x4ef51e97
  42259d:	enter  0x9d13,0x8a
  4225a1:	xchg   esi,eax
  4225a2:	call   0x31b4:0x83213568
  4225a9:	or     eax,0x5bf0c26f
  4225ae:	mov    WORD PTR [edx-0x7747f27a],es
  4225b4:	dec    ebx
  4225b5:	cmp    eax,0x0
	...
  4225c2:	inc    ebx
  4225c3:	push   ebp
  4225c4:	pusha  
  4225c5:	(bad)  
  4225c6:	jbe    0x422587
  4225c8:	out    dx,eax
  4225c9:	fnstsw WORD PTR [edx+0x644356c3]
  4225cf:	pop    ebp
  4225d0:	mov    ebx,0x198be59
  4225d5:	add    ah,cl
  4225d7:	add    al,BYTE PTR [eax]
  4225d9:	add    dl,dh
  4225db:	mov    cl,0x90
  4225dd:	or     al,0x2c
  4225df:	sbb    cl,BYTE PTR [ebx+0x23]
  4225e2:	int3   
  4225e3:	or     DWORD PTR [edi-0x26],ebp
  4225e6:	jge    0x422586
  4225e8:	jne    0x422611
  4225ea:	mov    BYTE PTR [ecx],dl
  4225ec:	cmp    ah,ah
  4225ee:	aad    0xe4
  4225f0:	pop    eax
  4225f1:	arpl   WORD PTR [ebp+0x30],ax
  4225f4:	ins    BYTE PTR es:[edi],dx
  4225f5:	hlt    
  4225f6:	dec    ebp
  4225f7:	mov    esi,0x134120c3
  4225fc:	mov    esi,es
  4225fe:	iret   
  4225ff:	sub    ebp,DWORD PTR [esi+0x1eb1350d]
  422605:	imul   ebx,DWORD PTR [ecx+0x7e],0xbc93b826
  42260c:	arpl   cx,ax
  42260e:	mov    al,0xbf
  422610:	pop    ds
  422611:	sti    
  422612:	fstp   DWORD PTR [eax]
  422614:	(bad)  
  422615:	repz sti 
  422617:	cmp    BYTE PTR [eax-0x15],0x86
  42261b:	retf   
  42261c:	xor    eax,0x51346bdf
  422621:	xlat   BYTE PTR ds:[ebx]
  422622:	pop    esp
  422623:	sub    ebp,DWORD PTR [ebp+0x4a]
  422626:	test   DWORD PTR [edx+0x2a],edx
  422629:	mov    edx,0x80c63ab1
  42262e:	xchg   edx,eax
  42262f:	das    
  422630:	out    0xf,al
  422632:	mov    ch,0x96
  422634:	icebp  
  422635:	fwait
  422636:	in     eax,0x4c
  422638:	cmc    
  422639:	sub    DWORD PTR [esp+edi*4+0x71],0xffffffe7
  42263e:	sahf   
  42263f:	jae    0x4226bc
  422641:	dec    edx
  422642:	push   ebx
  422643:	and    eax,0x28bd6c12
  422648:	imul   edx,DWORD PTR [esi],0x4b7cd8d5
  42264e:	push   ebx
  42264f:	aad    0x82
  422651:	push   eax
  422652:	mov    bl,0x9
  422654:	inc    ebp
  422655:	sbb    BYTE PTR [ecx-0x55],ah
  422658:	fbld   TBYTE PTR [ebx-0x214332f0]
  42265e:	shl    DWORD PTR [esi+0x49],cl
  422661:	or     al,0x88
  422663:	stos   DWORD PTR es:[edi],eax
  422664:	mov    ah,0xc0
  422666:	jl     0x4225ed
  422668:	and    BYTE PTR [esi-0xa050bbe],0x8a
  42266f:	pop    ebx
  422670:	cld    
  422671:	imul   BYTE PTR [esi+0x3b9b14b7]
  422677:	xchg   edi,eax
  422678:	hlt    
  422679:	pop    ebp
  42267a:	dec    ebp
  42267b:	adc    esi,DWORD PTR [esi+0x6abc5077]
  422681:	lahf   
  422682:	pop    edx
  422683:	not    esi
  422685:	aam    0xf1
  422687:	das    
  422688:	repz icebp 
  42268a:	aas    
  42268b:	iret   
  42268c:	mov    eax,0xa7bb2637
  422691:	sbb    al,0x3
  422693:	bound  esp,QWORD PTR [edx+0x38497c24]
  422699:	mov    eax,ds:0x49d9b707
  42269e:	sbb    eax,0xaf7486f3
  4226a3:	mov    bl,0x2a
  4226a5:	test   eax,0x554c78c6
  4226aa:	(bad)  
  4226ab:	test   DWORD PTR [edi],ebp
  4226ad:	mov    ds:0x98881ea9,eax
  4226b2:	iret   
  4226b3:	and    BYTE PTR [ecx],cl
  4226b5:	push   eax
  4226b6:	es dec ebp
  4226b8:	or     eax,edx
  4226ba:	shl    BYTE PTR [ecx+eax*2-0x6c],cl
  4226be:	add    dh,bh
  4226c0:	xor    edx,DWORD PTR [esi-0xe]
  4226c3:	mov    edi,0x1ea3d1b6
  4226c8:	pop    edi
  4226c9:	imul   ebx,DWORD PTR [eax-0x4c],0xffffff9f
  4226cd:	jp     0x4226ea
  4226cf:	sbb    BYTE PTR [edi+eax*1-0x5f],al
  4226d3:	cs scas al,BYTE PTR es:[edi]
  4226d5:	test   eax,0xacdfcb37
  4226da:	pop    ebp
  4226db:	adc    dh,BYTE PTR [esi-0xb]
  4226de:	retf   
  4226df:	xor    al,0xbf
  4226e1:	addr16 out 0xd6,al
  4226e4:	dec    edi
  4226e5:	sahf   
  4226e6:	outs   dx,BYTE PTR ss:[esi]
  4226e8:	jmp    0xf543f7b0
  4226ed:	mov    ch,0xa
  4226ef:	retf   0xa51d
  4226f2:	out    dx,eax
  4226f3:	sub    ecx,DWORD PTR [eax+ecx*8+0x40]
  4226f7:	inc    edx
  4226f8:	mov    edi,0x73498c8c
  4226fd:	cmp    ch,al
  4226ff:	dec    edi
  422700:	dec    ebx
  422701:	int    0x49
  422703:	xchg   DWORD PTR ds:0xc9100bad,edi
  422709:	pop    eax
  42270a:	dec    esi
  42270b:	dec    ebp
  42270c:	or     DWORD PTR [ebx-0x11a8ccb9],ebp
  422712:	(bad)  
  422713:	jl     0x422774
  422715:	not    DWORD PTR [ecx+edi*8+0x7f799f5d]
  42271c:	sub    dl,dh
  42271e:	jle    0x42274d
  422720:	mov    ah,0xa0
  422722:	rol    BYTE PTR [ebx-0x40],cl
  422725:	es sub edx,ecx
  422728:	std    
  422729:	(bad)  [ecx]
  42272b:	inc    ecx
  42272c:	adc    esi,DWORD PTR [edi-0x2f04bf86]
  422732:	pop    esp
  422733:	xchg   ebx,eax
  422734:	ins    DWORD PTR es:[edi],dx
  422735:	int3   
  422736:	popa   
  422737:	dec    edx
  422738:	adc    DWORD PTR [edx+0x34],edx
  42273b:	jecxz  0x422741
  42273d:	jae    0x42276b
  42273f:	fcom   st(2)
  422741:	cmp    bh,BYTE PTR [edx+esi*8-0x62df4777]
  422748:	jns    0x42274b
  42274a:	shr    BYTE PTR [esp+ebp*1-0x39],0xdd
  42274f:	mov    ebx,0xb2a82c8b
  422754:	xchg   edi,eax
  422755:	mov    es,WORD PTR [eax-0x79fb2163]
  42275b:	dec    DWORD PTR [ebx-0x7088ac28]
  422761:	pop    ebx
  422762:	es xor al,0x6d
  422765:	stos   DWORD PTR es:[edi],eax
  422766:	push   ss
  422767:	mov    esp,0x5739eb89
  42276c:	inc    edx
  42276d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276e:	stos   BYTE PTR es:[edi],al
  42276f:	fwait
  422770:	mov    ds:0x6712bd95,al
  422775:	mov    bh,0x82
  422777:	imul   edi
  422779:	cdq    
  42277a:	push   edx
  42277b:	div    DWORD PTR [edx+0x57]
  42277e:	push   es
  42277f:	inc    ecx
  422780:	int    0x8d
  422782:	loop   0x4227fe
  422784:	fst    QWORD PTR [edi]
  422786:	lea    esp,[eax+0x4b]
  422789:	in     al,0x1a
  42278b:	jecxz  0x4227af
  42278d:	rcl    BYTE PTR [eax],0xa3
  422790:	sub    eax,0x30a33ab1
  422795:	inc    ecx
  422796:	push   edx
  422797:	or     esp,DWORD PTR [ebx]
  422799:	fild   DWORD PTR [ebx-0x7c]
  42279c:	dec    edi
  42279d:	stos   DWORD PTR es:[edi],eax
  42279e:	sub    al,0xf0
  4227a0:	mov    BYTE PTR [edi],dh
  4227a2:	outs   dx,DWORD PTR ds:[esi]
  4227a3:	inc    edi
  4227a4:	sub    esp,ebp
  4227a6:	stos   DWORD PTR es:[edi],eax
  4227a7:	jne    0x422825
  4227a9:	sbb    cl,BYTE PTR [edx]
  4227ab:	add    BYTE PTR [ebx+ebx*4+0x576b58b9],dl
  4227b2:	jmp    DWORD PTR [ebp+0x5c]
  4227b5:	stos   BYTE PTR es:[edi],al
  4227b6:	inc    edi
  4227b7:	mov    ?,eax
  4227b9:	and    ebp,DWORD PTR [ebp+0x3f0ae648]
  4227bf:	into   
  4227c0:	pop    ecx
  4227c1:	fdiv   DWORD PTR [ecx+0x1f0b38d2]
  4227c7:	in     eax,dx
  4227c8:	push   ecx
  4227c9:	xor    eax,0xf27acb26
  4227ce:	add    esi,DWORD PTR [edx]
  4227d0:	xchg   ebx,eax
  4227d1:	hlt    
  4227d2:	outs   dx,BYTE PTR ds:[esi]
  4227d3:	sub    dh,bh
  4227d5:	cmp    bh,BYTE PTR [ecx-0x39]
  4227d8:	out    dx,eax
  4227d9:	jecxz  0x42284d
  4227db:	es xchg edi,eax
  4227dd:	loope  0x4227b3
  4227df:	(bad)  
  4227e0:	ins    DWORD PTR es:[edi],dx
  4227e1:	test   al,0x6c
  4227e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e4:	jmp    0xf215:0x23fa37a2
  4227eb:	and    al,0x1c
  4227ed:	add    al,BYTE PTR [ebx+ecx*4-0x66]
  4227f1:	test   al,0x2
  4227f3:	fs inc ebx
  4227f5:	mov    DWORD PTR [esi],ecx
  4227f7:	int3   
  4227f8:	imul   esi,ebx,0x45
  4227fb:	inc    ebx
  4227fc:	lea    eax,[edi-0x5b8a8ce3]
  422802:	push   edx
  422803:	pop    ss
  422804:	call   0xf963:0x5e91efcf
  42280b:	push   es
  42280c:	push   esp
  42280d:	jb     0x42280f
  42280f:	xor    al,0xde
  422811:	push   ebp
  422812:	jecxz  0x4227e4
  422814:	mov    dh,0x6
  422816:	mov    ah,0xa5
  422818:	inc    ecx
  422819:	xchg   esp,eax
  42281a:	push   eax
  42281b:	xlat   BYTE PTR ds:[ebx]
  42281c:	les    ecx,FWORD PTR [edi]
  42281e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42281f:	or     ch,dl
  422821:	cmp    esp,DWORD PTR ds:0x1efa7c53
  422827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422828:	in     eax,dx
  422829:	push   0x2b1cdca4
  42282e:	add    bh,BYTE PTR [edx-0x16]
  422831:	push   cs
  422832:	xor    eax,0x75c79449
  422837:	mov    esi,ecx
  422839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42283a:	inc    edi
  42283b:	push   esp
  42283c:	cmp    ecx,DWORD PTR [esi+0x747ef8a6]
  422842:	pop    esi
  422843:	inc    ecx
  422844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422845:	pop    esi
  422846:	fld    TBYTE PTR [ebp+0x66]
  422849:	or     esi,DWORD PTR [ecx-0x7123071b]
  42284f:	adc    DWORD PTR [esi+0x1d],ebx
  422852:	(bad)  
  422854:	xchg   DWORD PTR [eax-0x188b6517],edi
  42285a:	jmp    0x42283a
  42285c:	mov    ds:0x868c9525,al
  422861:	mov    ebx,edi
  422863:	jle    0x422867
  422865:	fidiv  WORD PTR [esi-0x1a]
  422868:	addr16 daa 
  42286a:	popa   
  42286b:	adc    BYTE PTR [esi-0x384209ff],bh
  422871:	jle    0x4228a4
  422873:	(bad)  
  422874:	fidivr DWORD PTR ds:[ecx-0x22b759ae]
  42287b:	fdiv   st(6),st
  42287d:	pushf  
  42287e:	jo     0x422833
  422880:	xchg   ebp,eax
  422881:	and    BYTE PTR [ebx+0x7a],bh
  422884:	lds    esp,FWORD PTR [edi-0x2195cd9e]
  42288a:	imul   ebx,ebx,0x3
  42288d:	push   ss
  42288e:	imul   ecx,DWORD PTR [ecx],0x8f2c1249
  422894:	test   eax,0x151e7406
  42289a:	fisub  WORD PTR [edx]
  42289c:	mov    edi,0xc76233f4
  4228a1:	retf   
  4228a2:	dec    ebx
  4228a3:	(bad)  
  4228a4:	pushf  
  4228a5:	ins    BYTE PTR es:[edi],dx
	...
  4228b2:	push   edi
  4228b3:	sub    eax,0xba7f9a07
  4228b8:	fucomip st,st(5)
  4228ba:	ficom  WORD PTR [ebp+0x41]
  4228bd:	adc    al,0x1e
  4228bf:	loop   0x422912
  4228c1:	nop
  4228c2:	mov    bl,BYTE PTR [ebx+0x2cc0001]
  4228c8:	add    BYTE PTR [eax],al
  4228ca:	jne    0x422923
  4228cc:	in     eax,0x29
  4228ce:	xlat   BYTE PTR ds:[ebx]
  4228cf:	push   edi
  4228d0:	xor    eax,0x3d11c230
  4228d5:	test   DWORD PTR [ebx],esp
  4228d7:	inc    esi
  4228d8:	fadd   QWORD PTR [ecx+0x5f23df7d]
  4228de:	jo     0x42290a
  4228e0:	or     DWORD PTR [ebp-0x7577123e],ebp
  4228e6:	mov    al,ds:0xf6045032
  4228eb:	mov    dl,0xfb
  4228ed:	call   0x7fbe:0xb14b3a81
  4228f4:	mov    ebp,0x871adfd3
  4228f9:	and    eax,0xd6cd23ca
  4228fe:	cld    
  4228ff:	ds jge 0x42289d
  422902:	xor    DWORD PTR [edx+edi*2+0x6e5d0436],0xb
  42290a:	jno    0x4228fe
  42290c:	imul   esi,DWORD PTR [bx+si+0x29],0xffffffdd
  422911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422912:	out    dx,eax
  422913:	and    cl,cl
  422915:	jb     0x42292c
  422917:	scas   al,BYTE PTR es:[edi]
  422918:	sbb    ah,BYTE PTR [edi-0x55]
  42291b:	push   ds
  42291c:	int3   
  42291d:	gs retf 
  42291f:	xor    al,0x96
  422921:	jp     0x422910
  422923:	mov    ecx,ebp
  422925:	repz and cl,dh
  422928:	fadd   DWORD PTR [eax-0x531184f2]
  42292e:	xor    BYTE PTR [ecx+ecx*1+0x76],bh
  422932:	sub    BYTE PTR [ebp-0x3a],0x6f
  422936:	mov    ah,0xb6
  422938:	xor    dh,BYTE PTR [esi+edi*2]
  42293b:	xchg   esp,eax
  42293c:	fwait
  42293d:	stos   BYTE PTR es:[edi],al
  42293e:	inc    ebx
  42293f:	jne    0x4229c0
  422941:	mov    al,0x3f
  422943:	xchg   edx,eax
  422944:	xchg   ebx,eax
  422945:	aas    
  422946:	sub    edx,DWORD PTR [ebp-0x60]
  422949:	jp     0x42292c
  42294b:	xchg   ecx,eax
  42294c:	loopne 0x422936
  42294e:	pop    esp
  42294f:	ja     0x4228ee
  422951:	loope  0x422909
  422953:	ja     0x422998
  422955:	pop    ecx
  422956:	sahf   
  422957:	and    eax,0x4caee454
  42295c:	mov    WORD PTR [eax-0x2c],?
  42295f:	aam    0xc9
  422961:	(bad)  
  422962:	fbstp  TBYTE PTR [eax-0x58]
  422965:	nop
  422966:	push   edi
  422967:	adc    ah,ch
  422969:	and    dh,BYTE PTR [ebx-0x32]
  42296c:	out    dx,al
  42296d:	bound  esp,QWORD PTR [edi+0xba82cb5]
  422973:	(bad)  
  422974:	jns    0x4229cf
  422976:	sbb    al,0x48
  422978:	sbb    edi,esi
  42297a:	inc    esi
  42297b:	jno    0x422986
  42297d:	ror    BYTE PTR [ebp-0x22],0x7f
  422981:	or     ecx,edi
  422983:	xchg   esi,eax
  422984:	daa    
  422985:	rcr    al,0xef
  422988:	faddp  st(2),st
  42298a:	mov    edx,0xe3bcec8c
  42298f:	daa    
  422990:	into   
  422991:	push   0xffffff95
  422993:	mov    dh,0x4e
  422995:	push   esi
  422996:	ret    
  422997:	dec    ebp
  422998:	pop    ebx
  422999:	cmp    DWORD PTR [eax+0x37],edi
  42299c:	sbb    DWORD PTR [edi],esi
  42299e:	repz mov eax,0x70d03964
  4229a4:	inc    edi
  4229a5:	xchg   ecx,eax
  4229a6:	jge    0x4229d7
  4229a8:	add    dl,bh
  4229aa:	ds mov ch,0x33
  4229ad:	mov    DWORD PTR [edi-0x70],edi
  4229b0:	pop    ss
  4229b1:	add    BYTE PTR [edx-0x42],ch
  4229b4:	add    DWORD PTR es:[ecx-0x57],0xd41523be
  4229bc:	iret   
  4229bd:	pop    ebx
  4229be:	pop    edx
  4229bf:	mov    edi,0x1dfd56b1
  4229c4:	test   BYTE PTR [esi-0x24],ch
  4229c7:	push   ds
  4229c8:	jae    0x422a28
  4229ca:	push   ebp
  4229cb:	sbb    dl,0x7a
  4229ce:	pop    ebp
  4229cf:	cmp    eax,0x1ba2ef95
  4229d4:	or     eax,DWORD PTR [eax]
  4229d6:	sub    ch,dl
  4229d8:	in     al,dx
  4229d9:	nop
  4229da:	mov    ebp,0x370aaef
  4229df:	mov    ds:0x73518968,al
  4229e4:	mov    ecx,ecx
  4229e6:	ret    0xafcb
  4229e9:	mov    ebp,0x729411a8
  4229ee:	mov    ss,edx
  4229f0:	or     esi,eax
  4229f2:	add    bl,bl
  4229f4:	mov    ecx,0xdfaeee0f
  4229f9:	dec    ebx
  4229fa:	mov    ds:0xc9cd30ea,al
  4229ff:	in     al,0xf6
  422a01:	pop    ds
  422a02:	mov    ebx,0xf5f97e95
  422a07:	inc    edi
  422a08:	fdiv   st,st(5)
  422a0a:	xchg   BYTE PTR [edi-0x53a6bee8],dh
  422a10:	popf   
  422a11:	test   ebp,0x9e2b18ee
  422a17:	mov    esp,0xd41e4976
  422a1c:	mov    ecx,0x56d19b1a
  422a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a22:	pop    ebp
  422a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a24:	aaa    
  422a25:	aam    0xa3
  422a27:	div    BYTE PTR [ecx+ebp*2-0x4e]
  422a2b:	xor    edi,eax
  422a2d:	(bad)  
  422a2e:	dec    eax
  422a2f:	xchg   ecx,ebp
  422a31:	xor    eax,0x281544a8
  422a36:	rcr    esi,1
  422a38:	popf   
  422a39:	jmp    0x422a5a
  422a3b:	mov    ebx,ebx
  422a3d:	xor    ecx,DWORD PTR [edi-0x4e306ef0]
  422a43:	xchg   ecx,eax
  422a44:	lahf   
  422a45:	lods   al,BYTE PTR ds:[esi]
  422a46:	loopne 0x4229d7
  422a48:	call   0xec03:0x8ce9cf36
  422a4f:	jg     0x422aaa
  422a51:	push   cs
  422a52:	adc    al,0x30
  422a54:	loop   0x422a4c
  422a56:	jmp    0xf3bb4d1d
  422a5b:	mov    dl,0x80
  422a5d:	ror    DWORD PTR [bx+0x49],0x82
  422a62:	mov    cl,dl
  422a64:	jne    0x422a74
  422a66:	mov    ecx,0x97d8d1db
  422a6b:	sbb    al,0xa5
  422a6d:	xchg   ebp,eax
  422a6e:	push   eax
  422a6f:	call   ebp
  422a71:	out    0xa2,al
  422a73:	dec    edx
  422a74:	fist   WORD PTR [edx-0x41f3fbdc]
  422a7a:	dec    esp
  422a7b:	dec    edx
  422a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a7d:	neg    DWORD PTR [edi+0x3d15e5d2]
  422a83:	call   0xe90f:0xcd230681
  422a8a:	inc    edi
  422a8b:	mov    eax,ds:0x284a97ab
  422a90:	in     eax,dx
  422a91:	arpl   WORD PTR [eax+0x4ed1ba26],bx
  422a97:	addr16 ds (bad) 
  422a9a:	jmp    DWORD PTR [esi-0x1de82897]
  422aa0:	mov    ch,0xbc
  422aa2:	and    ah,ch
  422aa4:	fisub  WORD PTR [edx]
  422aa6:	mov    al,0xa8
  422aa8:	sub    ecx,DWORD PTR [ebx+edi*8-0x36]
  422aac:	out    0x7f,al
  422aae:	xchg   DWORD PTR [ecx+0x3cc65777],ecx
  422ab4:	adc    eax,0x507e846
  422ab9:	(bad)  
  422aba:	(bad)  
  422abb:	nop
  422abc:	mov    esi,0x4b88f5ab
  422ac1:	xacquire xchg DWORD PTR [eax+0x2cf87bcf],esp
  422ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac9:	(bad)  
  422aca:	xlat   BYTE PTR ds:[ebx]
  422acb:	out    0x35,al
  422acd:	xchg   esi,eax
  422ace:	repz loope 0x422ad6
  422ad1:	push   edi
  422ad2:	sub    al,0x2
  422ad4:	ret    
  422ad5:	pop    edx
  422ad6:	pop    ds
  422ad7:	mov    bl,0xe
  422ad9:	add    eax,0xdb6af2d0
  422ade:	xchg   edi,eax
  422adf:	mov    esp,0xa4f99638
  422ae4:	sbb    eax,0x6637a15
  422ae9:	or     DWORD PTR [ebx],ebx
  422aeb:	mov    ds,edi
  422aed:	mov    eax,ds:0xd61a8edf
  422af2:	jl     0x422b67
  422af4:	mov    eax,ds:0x69ef11b6
  422af9:	std    
  422afa:	xchg   ecx,eax
  422afb:	aam    0xbe
  422afd:	jnp    0x422b31
  422aff:	pop    edi
  422b00:	cwde   
  422b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b03:	xchg   ebx,eax
  422b04:	mov    ebx,0x3100e139
  422b09:	or     bl,BYTE PTR [ecx]
  422b0b:	lods   al,BYTE PTR ds:[esi]
  422b0c:	sub    ebx,DWORD PTR [ebp-0x6692d75a]
  422b12:	rol    BYTE PTR [ebx-0x78],1
  422b15:	xchg   ebp,eax
  422b16:	test   eax,0x93b51cee
  422b1b:	(bad)  [edi]
  422b1d:	inc    eax
  422b1e:	sar    DWORD PTR [ecx-0x31],0x3f
  422b22:	push   eax
  422b23:	sub    bl,bl
  422b25:	adc    DWORD PTR [esi-0x18bb618c],esp
  422b2b:	cmp    edx,esp
  422b2d:	mov    al,ds:0xc929049d
  422b32:	fstp   TBYTE PTR [esi+0x7b]
  422b35:	xchg   esi,eax
  422b36:	xor    al,0xbe
  422b38:	xchg   ebx,eax
  422b39:	dec    esp
  422b3a:	jecxz  0x422b7b
  422b3c:	rcl    bh,0x6c
  422b3f:	lea    edx,[esi]
  422b41:	pop    ecx
  422b42:	loope  0x422ba3
  422b44:	sbb    DWORD PTR [edx+edi*1-0x441a7955],edi
  422b4b:	sub    BYTE PTR [ecx-0x49c80aa1],ch
  422b51:	push   ebx
  422b52:	in     al,dx
  422b53:	les    ecx,FWORD PTR [esi+0x8100e4e]
  422b59:	enter  0xa37c,0x22
  422b5d:	jmp    0x9402:0x250bd91
  422b64:	(bad)  [esp+edi*8]
  422b67:	adc    BYTE PTR [ebx+edx*1],ah
  422b6a:	sahf   
  422b6b:	(bad)
  422b6e:	mov    edi,0x9847fff0
  422b73:	in     al,dx
  422b74:	out    0x83,al
  422b76:	cmp    al,0x9e
  422b78:	mov    dl,0x45
  422b7a:	ret    
  422b7b:	stc    
  422b7c:	sub    BYTE PTR [edx+0x6c9b9685],0xe6
  422b83:	enter  0x8d9d,0x5d
  422b87:	addr16 sbb ebx,ebx
  422b8a:	xchg   ebp,eax
  422b8b:	xor    ebx,ebp
  422b8d:	sbb    al,0xc9
  422b8f:	stos   BYTE PTR es:[edi],al
  422b90:	loope  0x422bc2
  422b92:	and    DWORD PTR [ebx+0xa9b0],0x0
  422b9c:	add    BYTE PTR [eax],al
  422b9e:	add    BYTE PTR [eax],al
  422ba0:	add    BYTE PTR [eax],al
  422ba2:	ins    BYTE PTR es:[edi],dx
  422ba3:	sub    ch,BYTE PTR [ebx]
  422ba5:	outs   dx,DWORD PTR es:[esi]
  422ba7:	daa    
  422ba8:	ins    DWORD PTR es:[edi],dx
  422ba9:	push   0xfffffff2
  422bab:	push   esp
  422bac:	stos   DWORD PTR es:[edi],eax
  422bad:	adc    edi,edi
  422baf:	rcr    DWORD PTR [edi+ebx*8],cl
  422bb2:	push   esi
  422bb3:	sahf   
  422bb4:	add    DWORD PTR [eax],eax
  422bb6:	int3   
  422bb7:	add    al,BYTE PTR [eax]
  422bb9:	add    BYTE PTR [edx],bl
  422bbb:	bound  edx,QWORD PTR ds:0xe17193f4
  422bc1:	in     al,0xee
  422bc3:	sahf   
  422bc4:	mov    bl,BYTE PTR [ebx]
  422bc6:	sti    
  422bc7:	fdiv   QWORD PTR [eax-0x59]
  422bca:	sub    ebp,DWORD PTR [esi+0x54fb3317]
  422bd0:	mov    DWORD PTR [edi-0x7e],edi
  422bd3:	arpl   bp,di
  422bd5:	das    
  422bd6:	call   0xee5f:0x4b45060c
  422bdd:	rcl    BYTE PTR ds:[eax],0xea
  422be1:	iret   
  422be2:	mov    ecx,0x7c5b90f4
  422be7:	mov    bl,0x8f
  422be9:	mov    ?,esi
  422beb:	jae    0x422c1e
  422bed:	sub    eax,0x1c813c84
  422bf2:	push   edx
  422bf3:	rcl    dl,0xfe
  422bf6:	test   al,0x8e
  422bf8:	into   
  422bf9:	aam    0x2e
  422bfb:	xchg   esp,eax
  422bfc:	xor    ecx,DWORD PTR ds:0xd636676c
  422c02:	bound  esi,QWORD PTR [ebp-0x2b20b5fc]
  422c08:	add    al,BYTE PTR [ecx-0x4cdda9ea]
  422c0e:	jp     0x422c85
  422c10:	lds    esi,FWORD PTR [esi-0x68]
  422c13:	loope  0x422c6f
  422c15:	sbb    ecx,DWORD PTR [ebx-0x8]
  422c18:	jp     0x422be3
  422c1a:	mov    al,0x60
  422c1c:	add    cl,BYTE PTR [eax-0x36]
  422c1f:	loop   0x422c14
  422c21:	fistp  DWORD PTR [edi+0x5136cce4]
  422c27:	jmp    0x422bd6
  422c29:	push   esp
  422c2a:	loope  0x422c80
  422c2c:	jne    0x422c33
  422c2e:	cs jb  0x422c8a
  422c31:	jno    0x422c27
  422c33:	and    bh,BYTE PTR [edx-0x5ebd62e0]
  422c39:	aas    
  422c3a:	sub    DWORD PTR [eax+ecx*1+0x5d],0xffffffc2
  422c3f:	push   0xac3cb8ad
  422c44:	daa    
  422c45:	cdq    
  422c46:	enter  0xe9f2,0x6e
  422c4a:	cmp    esp,DWORD PTR [edx]
  422c4c:	retf   
  422c4d:	sbb    eax,0x7106a6b2
  422c52:	das    
  422c53:	imul   esp,DWORD PTR [ebp-0x11],0xffffff92
  422c57:	fidiv  DWORD PTR [esi]
  422c59:	out    0x98,al
  422c5b:	jae    0x422bf2
  422c5d:	ss popf 
  422c5f:	jle    0x422c8c
  422c61:	int    0x4d
  422c63:	jb     0x422c05
  422c65:	xor    BYTE PTR [ecx+0x27],al
  422c68:	or     edi,eax
  422c6a:	aas    
  422c6b:	push   esi
  422c6c:	xor    dh,BYTE PTR [eax+0xcf5ac47]
  422c72:	enter  0xd993,0xae
  422c76:	adc    DWORD PTR [esi+edi*1],eax
  422c79:	inc    esp
  422c7a:	mov    BYTE PTR ds:0x4fb1b274,bl
  422c80:	pop    ebp
  422c81:	push   ss
  422c82:	fcomp  DWORD PTR ds:0x9b2a858e
  422c88:	jge    0x422cff
  422c8a:	dec    ebx
  422c8b:	in     eax,0x8a
  422c8d:	mov    ebp,0x84aa3b17
  422c92:	xchg   ebp,eax
  422c93:	pushf  
  422c94:	inc    edi
  422c95:	mov    WORD PTR [edi+0x57],?
  422c98:	mov    al,0x98
  422c9a:	sub    BYTE PTR [ecx-0x56ff7d9e],al
  422ca0:	push   ds
  422ca1:	mov    esi,0x8a24ac8b
  422ca6:	add    ebx,DWORD PTR [eax-0x64]
  422ca9:	test   eax,0x66c2804d
  422cae:	aaa    
  422caf:	push   esp
  422cb0:	mov    fs,WORD PTR [ebp+0x5c9a3a63]
  422cb6:	in     al,dx
  422cb7:	data16 (bad) 
  422cba:	(bad)  
  422cbb:	push   eax
  422cbc:	scas   al,BYTE PTR es:[edi]
  422cbd:	idiv   DWORD PTR [edx-0x2bb4b324]
  422cc3:	mov    ah,0x12
  422cc5:	je     0x422c8e
  422cc7:	ja     0x422cdc
  422cc9:	fdivr  st(2),st
  422ccb:	add    edx,DWORD PTR [edi]
  422ccd:	or     DWORD PTR [esp+esi*4-0x412731df],eax
  422cd4:	and    BYTE PTR [edx+0x4c],al
  422cd7:	sub    BYTE PTR [eax-0xcb549a5],cl
  422cdd:	and    al,0x8f
  422cdf:	xor    bl,bh
  422ce1:	mov    bh,0xbb
  422ce3:	scas   eax,DWORD PTR es:[edi]
  422ce4:	out    0xc5,eax
  422ce6:	imul   ebx,DWORD PTR [ecx+0x490894fc],0x71067816
  422cf0:	xchg   ecx,eax
  422cf1:	cmp    esi,DWORD PTR [esi+esi*4+0x2429f60b]
  422cf8:	out    0x8,eax
  422cfa:	jg     0x422d25
  422cfc:	xchg   edx,eax
  422cfd:	push   ss
  422cfe:	jns    0x422ca4
  422d00:	test   DWORD PTR [esi-0x6],esp
  422d03:	cmp    BYTE PTR [esi-0x52],0xcf
  422d07:	lods   eax,DWORD PTR ds:[esi]
  422d08:	dec    ecx
  422d09:	shl    BYTE PTR [ebp-0x7c840689],cl
  422d0f:	(bad)  
  422d10:	push   ebp
  422d11:	popa   
  422d12:	push   esp
  422d13:	add    cl,BYTE PTR [ecx]
  422d15:	jne    0x422d05
  422d17:	push   eax
  422d19:	jp     0x422d26
  422d1b:	fadd   DWORD PTR ds:0xf22c0b1e
  422d21:	add    esi,DWORD PTR ds:0x364bff1c
  422d27:	repz mov ds:0x6ee8067f,al
  422d2d:	hlt    
  422d2e:	arpl   WORD PTR [esi],di
  422d30:	bndldx bnd2,[ebx-0x15]
  422d34:	xor    edi,DWORD PTR [ecx]
  422d36:	outs   dx,BYTE PTR ds:[esi]
  422d37:	hlt    
  422d38:	pushf  
  422d39:	(bad)  
  422d3a:	neg    DWORD PTR [eax+0x50]
  422d3d:	or     bl,BYTE PTR [ebx+0x399e3de0]
  422d43:	lds    ebp,FWORD PTR [esi]
  422d45:	out    0xa6,al
  422d47:	ror    BYTE PTR [ebx+0x2c934d99],0x3
  422d4e:	sub    al,0x83
  422d50:	sahf   
  422d51:	stos   BYTE PTR es:[edi],al
  422d52:	jmp    0x422cf0
  422d54:	cmp    BYTE PTR [edi-0x5a],ah
  422d57:	fbld   TBYTE PTR [ecx]
  422d59:	fist   DWORD PTR [edi]
  422d5b:	std    
  422d5c:	xor    al,0x1b
  422d5e:	jp     0x422d12
  422d60:	cmc    
  422d61:	adc    eax,0x1d7679d
  422d66:	jo     0x422da1
  422d68:	out    dx,eax
  422d69:	dec    eax
  422d6a:	mov    ch,ah
  422d6c:	das    
  422d6d:	cdq    
  422d6e:	push   edx
  422d6f:	cmc    
  422d70:	and    BYTE PTR [edx+ebx*1+0x27],ah
  422d74:	(bad)  
  422d75:	hlt    
  422d76:	out    0x2e,eax
  422d78:	adc    bh,BYTE PTR [ecx-0x47]
  422d7b:	inc    ebx
  422d7c:	sub    al,0x14
  422d7e:	sbb    eax,0x8c07d0fd
  422d83:	push   0xfffffffb
  422d85:	nop
  422d86:	dec    esp
  422d87:	pushf  
  422d88:	and    al,0x90
  422d8a:	sbb    DWORD PTR [eax+eiz*8+0x1],esi
  422d8e:	rcr    ebp,0x38
  422d91:	enter  0x89bf,0x6e
  422d95:	mov    edx,0xce88f29
  422d9a:	jns    0x422dd6
  422d9c:	adc    ch,BYTE PTR [ecx+ebp*8-0x13e2c27]
  422da3:	xchg   esp,eax
  422da4:	push   ebx
  422da5:	nop
  422da6:	scas   eax,DWORD PTR es:[edi]
  422da7:	popf   
  422da8:	rol    DWORD PTR [eax-0x4c],1
  422dab:	frstor [edx-0x2]
  422dae:	pop    eax
  422daf:	clc    
  422db0:	int3   
  422db1:	xchg   DWORD PTR [esi],ecx
  422db3:	sahf   
  422db4:	fmul   DWORD PTR [ebp+ebx*4+0x5cf15f1f]
  422dbb:	ds xchg esp,eax
  422dbd:	sub    esp,DWORD PTR [edi+0x13]
  422dc0:	push   ss
  422dc1:	dec    ebx
  422dc2:	and    cl,ah
  422dc4:	mov    al,BYTE PTR [edx+0x49]
  422dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dc8:	sub    DWORD PTR [eax+0x7d8ebb8a],ebp
  422dce:	jmp    FWORD PTR [edi]
  422dd0:	mov    cl,0x7e
  422dd2:	aas    
  422dd3:	cmp    al,0xae
  422dd5:	test   al,0xde
  422dd7:	xchg   ecx,eax
  422dd8:	pop    ds
  422dd9:	stc    
  422dda:	dec    edx
  422ddb:	mov    esi,0x1edc4fd1
  422de0:	pop    ebp
  422de1:	mov    bl,0xbe
  422de3:	xlat   BYTE PTR ds:[ebx]
  422de4:	ds aad 0xfc
  422de7:	mov    esp,ebp
  422de9:	xchg   edx,eax
  422dea:	push   ecx
  422deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dec:	mov    ds:0xb652ffa9,eax
  422df1:	scas   eax,DWORD PTR es:[edi]
  422df2:	loop   0x422e03
  422df4:	sub    cl,BYTE PTR [edx-0x41]
  422df7:	fmul   st(6),st
  422df9:	shr    BYTE PTR [ebp-0x74],1
  422dfc:	(bad)  
  422dfd:	adc    cl,BYTE PTR [ebx-0x7d]
  422e00:	test   DWORD PTR [ecx-0x477716a],ebx
  422e06:	cmp    dl,BYTE PTR [ebp-0x825861]
  422e0c:	dec    edi
  422e0d:	mov    DWORD PTR [edx+eiz*4],eax
  422e10:	sbb    al,0x3f
  422e12:	sub    BYTE PTR [eax+0x12],0x5f
  422e16:	jmp    0xc9b8:0x72df3757
  422e1d:	(bad)  [ebx]
  422e1f:	xlat   BYTE PTR ds:[ebx]
  422e20:	xchg   DWORD PTR [eax-0x4d],ecx
  422e23:	xor    esi,DWORD PTR [ecx-0x34]
  422e26:	mov    edi,0xbc6079b9
  422e2b:	jae    0x422ded
  422e2d:	adc    DWORD PTR [edx+0x653a0724],0x97b55b0e
  422e37:	je     0x422dbd
  422e39:	test   al,0xcd
  422e3b:	pushf  
  422e3c:	sti    
  422e3d:	or     dh,ch
  422e3f:	xor    edi,esp
  422e41:	in     eax,0x7c
  422e43:	mov    dl,0xa5
  422e45:	pop    ss
  422e46:	jmp    0x38e7:0x9c7812b3
  422e4d:	nop
  422e4e:	jae    0x422e6e
  422e50:	imul   edi,DWORD PTR [ecx-0x29e39837],0x10
  422e57:	mov    esi,0x57b20e12
  422e5c:	mov    cs,WORD PTR [eax+0x36]
  422e5f:	inc    edx
  422e60:	nop
  422e61:	outs   dx,BYTE PTR ds:[esi]
  422e62:	pop    edx
  422e63:	shl    DWORD PTR [eax-0x68],cl
  422e66:	test   cl,dl
  422e68:	push   eax
  422e69:	icebp  
  422e6a:	xchg   edi,eax
  422e6b:	mov    eax,ds:0x4c9f715a
  422e70:	iret   
  422e71:	ret    
  422e72:	sbb    eax,0x10f2ab46
  422e77:	daa    
  422e78:	xchg   esi,eax
  422e79:	or     al,0x7
  422e7b:	mov    al,ds:0xbd7a9ed1
  422e80:	mov    bh,0x55
  422e82:	fs fwait
  422e84:	or     eax,0xda
	...
  422e91:	add    BYTE PTR [ebx-0x73],al
  422e94:	pop    ds
  422e95:	and    bh,bl
  422e97:	mov    dl,0x7f
  422e99:	out    dx,eax
  422e9a:	add    BYTE PTR [ebx-0x42c8d8f0],dl
  422ea0:	out    dx,al
  422ea1:	lock and ah,BYTE PTR [ecx+0x2cc0001]
  422ea8:	add    BYTE PTR [eax],al
  422eaa:	push   ecx
  422eab:	pop    edx
  422eac:	arpl   WORD PTR [edi],bp
  422eae:	lahf   
  422eaf:	adc    eax,0x8af2dec7
  422eb4:	hlt    
  422eb5:	cmp    al,0xc7
  422eb7:	retf   
  422eb8:	test   eax,0xc3d0cdb0
  422ebd:	popf   
  422ebe:	adc    dl,BYTE PTR [esi]
  422ec0:	or     al,0x4f
  422ec2:	inc    esi
  422ec3:	je     0x422f13
  422ec5:	sbb    eax,0xed59d25f
  422eca:	push   es
  422ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ecc:	cvttps2pi mm0,QWORD PTR [edi-0x6e014fc0]
  422ed3:	lea    esi,[edx-0x3bacbdbd]
  422ed9:	adc    dl,al
  422edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422edc:	clc    
  422edd:	xor    esi,edi
  422edf:	loopne 0x422eb6
  422ee1:	lds    ecx,FWORD PTR [bx+di+0x7c]
  422ee5:	jnp    0x422e7a
  422ee7:	sbb    esi,DWORD PTR [edx]
  422ee9:	inc    edi
  422eea:	ja     0x422ea2
  422eec:	sub    BYTE PTR [eax-0x1f7e7fd6],ch
  422ef2:	mov    ch,dh
  422ef4:	int    0x93
  422ef6:	popa   
  422ef7:	ins    BYTE PTR es:[edi],dx
  422ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ef9:	and    al,0x1d
  422efb:	pop    ss
  422efc:	out    0xf9,al
  422efe:	cwde   
  422eff:	cmp    eax,0x89c6c5dc
  422f04:	in     al,dx
  422f05:	pop    ss
  422f06:	jnp    0x422ebe
  422f08:	jb     0x422e9e
  422f0a:	call   0xf402:0x7fede395
  422f11:	rol    BYTE PTR [ebx-0x19],cl
  422f14:	mov    ah,0xba
  422f16:	call   0x1a26:0x193392e8
  422f1d:	hlt    
  422f1e:	pop    ecx
  422f1f:	sub    DWORD PTR [ebx+0x6f],ebx
  422f22:	aam    0x54
  422f24:	sbb    eax,0x5a39c509
  422f29:	push   edx
  422f2a:	sub    al,0x91
  422f2c:	and    eax,0x327ecc9c
  422f31:	fcom   QWORD PTR [esi+0x9]
  422f34:	loopne 0x422f4c
  422f36:	adc    eax,0xf4bf6b49
  422f3b:	jne    0x422ee6
  422f3d:	shl    BYTE PTR [ebp-0x38],1
  422f40:	jae    0x422f53
  422f42:	rol    edx,1
  422f44:	cli    
  422f45:	dec    esp
  422f46:	lock lods al,BYTE PTR fs:[esi]
  422f49:	xor    esi,eax
  422f4b:	sub    ch,bh
  422f4d:	dec    bh
  422f4f:	pop    ecx
  422f50:	add    esi,DWORD PTR [ecx+ebp*2-0x1c]
  422f54:	in     al,dx
  422f55:	and    BYTE PTR [ebx+0x69],bl
  422f58:	stos   DWORD PTR es:[edi],eax
  422f59:	inc    eax
  422f5a:	push   edx
  422f5b:	in     eax,dx
  422f5c:	in     eax,0x70
  422f5e:	xor    BYTE PTR [ebx],al
  422f60:	int    0x4e
  422f62:	aas    
  422f63:	xchg   esi,eax
  422f64:	jb     0x422f01
  422f66:	(bad)  
  422f67:	push   0x25
  422f69:	push   es
  422f6a:	in     al,dx
  422f6b:	pop    edi
  422f6c:	fdiv   QWORD PTR [edx+0x15f68414]
  422f72:	sti    
  422f73:	lea    ecx,[ebx-0x586d3aa3]
  422f79:	shl    BYTE PTR [ebx-0x31],0xe8
  422f7d:	push   ebp
  422f7e:	les    eax,FWORD PTR ss:[esp+esi*1-0x43]
  422f83:	pop    ecx
  422f84:	xchg   BYTE PTR [eax],dl
  422f86:	ror    BYTE PTR [esi-0x57],cl
  422f89:	aas    
  422f8a:	pushf  
  422f8b:	jne    0x423004
  422f8d:	fs cmp ecx,esp
  422f90:	xchg   esp,eax
  422f91:	test   BYTE PTR [edx+0x6dabde42],al
  422f97:	mov    ch,0x4
  422f99:	repz loopne 0x422f97
  422f9c:	xchg   dl,bh
  422f9e:	pop    ds
  422f9f:	xor    al,0xc7
  422fa1:	inc    ebp
  422fa2:	push   esi
  422fa3:	out    0x8e,al
  422fa5:	out    0xbe,al
  422fa7:	test   eax,0x223f0cd5
  422fac:	adc    bh,dh
  422fae:	loopne 0x422fb7
  422fb0:	xor    DWORD PTR [edi-0x41],ecx
  422fb3:	inc    ebx
  422fb4:	(bad)  
  422fb5:	pop    edi
  422fb6:	mov    bl,BYTE PTR [edi+0x45fe95e0]
  422fbc:	dec    edi
  422fbd:	repz adc al,0x7
  422fc0:	dec    ebp
  422fc1:	stos   BYTE PTR es:[edi],al
  422fc2:	ins    DWORD PTR es:[edi],dx
  422fc3:	mov    al,0x3a
  422fc5:	ja     0x422fef
  422fc7:	cmp    al,0x6e
  422fc9:	imul   esp,DWORD PTR [eax],0xbb6b8853
  422fcf:	bound  ebp,QWORD PTR [edx]
  422fd1:	mov    edi,0xccc7158e
  422fd6:	pop    ebx
  422fd7:	push   ss
  422fd8:	cld    
  422fd9:	push   ds
  422fda:	scas   eax,DWORD PTR es:[edi]
  422fdb:	mov    esi,0x7d98f5d4
  422fe0:	test   al,0x52
  422fe2:	iret   
  422fe3:	xor    esi,esi
  422fe5:	sub    DWORD PTR [edi-0x22],esp
  422fe8:	fisub  WORD PTR [esi+0x4dd07950]
  422fee:	shl    DWORD PTR [esi+0x42],0xe9
  422ff2:	rcr    DWORD PTR fs:[edi+0x18],cl
  422ff6:	pop    es
  422ff7:	or     al,0x6
  422ff9:	mov    ds:0x36797f23,al
  422ffe:	leave  
  422fff:	mov    al,ds:0xfb7fd7b4
  423004:	sbb    esp,ecx
  423006:	ins    BYTE PTR es:[edi],dx
  423007:	repz mov esi,ecx
  42300a:	int    0x5e
  42300c:	cmp    al,bh
  42300e:	and    edi,eax
  423010:	jo     0x422fa6
  423012:	push   ebp
  423013:	repz adc al,0xd2
  423016:	sub    eax,0x9852dfda
  42301b:	cmp    bh,BYTE PTR [esi]
  42301d:	enter  0x2865,0x2e
  423021:	pop    esp
  423022:	shl    BYTE PTR [edi],0xef
  423025:	push   edx
  423026:	rol    esi,1
  423028:	mov    WORD PTR [edi-0x75],es
  42302b:	xchg   DWORD PTR [edx-0xa566ea9],eax
  423031:	xchg   edi,eax
  423032:	outs   dx,BYTE PTR ds:[esi]
  423033:	ins    DWORD PTR es:[edi],dx
  423034:	cmp    DWORD PTR [ecx+0x6f85f129],edx
  42303a:	jp     0x42307c
  42303c:	mov    dh,0x69
  42303e:	sbb    DWORD PTR [ecx+eax*8],ebp
  423041:	pushf  
  423042:	pop    ecx
  423043:	repnz fist DWORD PTR [ebx-0x3a]
  423047:	test   BYTE PTR [eax-0x63],dh
  42304a:	retf   
  42304b:	lds    edi,FWORD PTR [ecx]
  42304d:	mov    dh,0x54
  42304f:	sub    DWORD PTR ds:0x894a8549,ecx
  423055:	lods   eax,DWORD PTR ds:[esi]
  423056:	call   0x317cc067
  42305b:	popf   
  42305c:	pop    ebx
  42305d:	or     esp,DWORD PTR [edx+0x3d9aac15]
  423063:	mov    eax,0xffc67b3a
  423068:	fst    DWORD PTR [ecx-0x2b568b74]
  42306e:	push   esi
  42306f:	mov    esi,0x6c5d0a4e
  423074:	fld    TBYTE PTR [esi-0x54296e2]
  42307a:	repnz adc al,BYTE PTR [ebp+esi*2-0x29d3f4b6]
  423082:	pop    sp
  423084:	or     BYTE PTR cs:[ebx+0x3ec9b7a7],cl
  42308b:	inc    ecx
  42308c:	stc    
  42308d:	sbb    eax,0x9f228a54
  423092:	bound  ebx,QWORD PTR ds:0xd5ce9ed4
  423098:	pop    ebx
  423099:	ret    0x9391
  42309c:	mov    edx,0x99c59c7a
  4230a1:	pusha  
  4230a2:	push   0xb1e06757
  4230a7:	scas   al,BYTE PTR es:[edi]
  4230a8:	retf   
  4230a9:	mov    edi,0x1ae39f54
  4230ae:	mov    BYTE PTR [ebx+0x3204245f],dl
  4230b4:	inc    edi
  4230b5:	add    esi,esp
  4230b7:	inc    ebx
  4230b8:	sahf   
  4230b9:	in     eax,0xc3
  4230bb:	pop    esi
  4230bc:	arpl   WORD PTR [eax+0x7b],sp
  4230bf:	out    0xfd,eax
  4230c1:	cmp    BYTE PTR [ebx-0x3c741c8],dl
  4230c7:	pop    ecx
  4230c8:	rcr    edx,cl
  4230ca:	das    
  4230cb:	pushf  
  4230cc:	mov    ss,WORD PTR [ecx+0x61754c35]
  4230d2:	ins    BYTE PTR es:[edi],dx
  4230d3:	xchg   ebp,ebp
  4230d5:	cli    
  4230d6:	(bad)  
  4230d7:	iret   
  4230d8:	jecxz  0x4230f0
  4230da:	mov    bh,0x20
  4230dc:	or     ah,ch
  4230de:	jle    0x42310c
  4230e0:	sub    BYTE PTR [eax+0x17f0bb56],ch
  4230e6:	cdq    
  4230e7:	pop    ss
  4230e8:	ret    0xb17d
  4230eb:	iret   
  4230ec:	(bad)  
  4230ee:	ret    
  4230ef:	jmp    0x29d0:0xf20acbf8
  4230f6:	push   ecx
  4230f7:	xchg   ebx,eax
  4230f8:	sub    DWORD PTR ds:0xedae674b,0xb0be876e
  423102:	xor    al,0xfd
  423104:	mov    al,al
  423106:	cs push eax
  423108:	mulps  xmm1,XMMWORD PTR [esi]
  42310b:	mov    ecx,0xd93f3d4b
  423110:	cmp    DWORD PTR [ecx-0xc],eax
  423113:	(bad)  
  423114:	push   ecx
  423115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423116:	mov    ah,0x3e
  423118:	(bad)  
  423119:	push   ecx
  42311a:	xchg   ebx,eax
  42311b:	sub    al,0x9b
  42311d:	js     0x4230a1
  42311f:	repz dec eax
  423121:	xor    BYTE PTR [edi+edi*8+0x7f],ah
  423125:	pop    esp
  423126:	xor    al,0x3f
  423128:	sbb    BYTE PTR [edi],ah
  42312a:	or     al,0x40
  42312c:	and    eax,0x9a630523
  423131:	sbb    al,0xac
  423133:	pop    eax
  423134:	(bad)  
  423135:	into   
  423136:	add    bh,BYTE PTR [edx]
  423138:	dec    ecx
  423139:	xor    al,0xe0
  42313b:	jecxz  0x4230c7
  42313d:	ja     0xb0b38282
  423143:	mov    esp,0x4bebef41
  423148:	call   FWORD PTR ds:0x30d53628
  42314e:	jbe    0x4230f7
  423150:	xchg   ebx,eax
  423151:	cmp    al,0xe5
  423153:	std    
  423154:	cmp    ebp,DWORD PTR [eax]
  423156:	aas    
  423157:	mov    WORD PTR ds:0x3dd4c688,ss
  42315d:	mov    ds:0x43144c61,al
  423162:	and    DWORD PTR [ebx],eax
  423164:	push   cs
  423165:	sub    DWORD PTR [edx+0x7b31a86],esi
  42316b:	cmp    BYTE PTR [ebx+edx*8+0x35],dh
  42316f:	nop
  423170:	xchg   edx,eax
  423171:	sub    eax,DWORD PTR [eax+ebx*8+0x39]
  423175:	fiadd  WORD PTR [eax]
	...
  42317f:	add    BYTE PTR [eax],al
  423181:	add    ah,dh
  423183:	cmp    DWORD PTR [edx-0x2002081],edx
  423189:	mov    ebx,0xc0721507
  42318e:	je     0x4231d1
  423190:	sahf   
  423191:	push   ebp
  423192:	out    dx,al
  423193:	mov    ds:0x2cc0001,eax
  423198:	add    BYTE PTR [eax],al
  42319a:	retf   
  42319b:	lods   al,BYTE PTR ds:[esi]
  42319c:	push   cs
  42319d:	(bad)  
  42319e:	cli    
  42319f:	aam    0x2
  4231a1:	iret   
  4231a2:	push   eax
  4231a3:	nop
  4231a4:	ds cmp eax,0xe3289321
  4231aa:	jae    0x423162
  4231ac:	push   edi
  4231ad:	pop    edi
  4231ae:	mov    esp,0xb1777208
  4231b3:	xor    al,0xd
  4231b5:	adc    bl,ah
  4231b7:	jns    0x423233
  4231b9:	xchg   ecx,eax
  4231ba:	add    al,0xf
  4231bc:	aaa    
  4231bd:	jb     0x42314d
  4231bf:	stc    
  4231c0:	mov    ebp,0x903e0d44
  4231c5:	xchg   edi,eax
  4231c6:	sahf   
  4231c7:	(bad)  
  4231c8:	mov    eax,0x52f57dec
  4231cd:	or     BYTE PTR [ebx+ebp*1-0x77],cl
  4231d1:	jecxz  0x4231ad
  4231d3:	mov    dh,0xf9
  4231d5:	bound  eax,QWORD PTR [ebx+esi*1+0xbf8ba]
  4231dc:	pop    ss
  4231dd:	icebp  
  4231de:	dec    eax
  4231df:	(bad)  
  4231e0:	jp     0x423173
  4231e2:	xchg   DWORD PTR [esi],esp
  4231e4:	inc    ebx
  4231e5:	sub    al,0x35
  4231e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231e8:	pop    ebp
  4231e9:	add    BYTE PTR [edx],cl
  4231eb:	or     bl,bh
  4231ed:	jno    0x423198
  4231ef:	and    eax,0x8e2387bc
  4231f4:	stos   BYTE PTR es:[edi],al
  4231f5:	aam    0x4b
  4231f7:	mov    DWORD PTR [eax-0x56],ebx
  4231fa:	clc    
  4231fb:	mov    edx,0x56f40379
  423200:	sar    BYTE PTR [esp+eax*8+0x68],cl
  423204:	sub    BYTE PTR [edi-0x74],cl
  423207:	int3   
  423208:	lahf   
  423209:	pop    es
  42320a:	mov    cl,0x92
  42320c:	push   0x3e72865c
  423211:	mov    eax,0x6a1a868f
  423216:	sbb    BYTE PTR [ecx],bh
  423218:	xor    al,BYTE PTR [ebp-0xe]
  42321b:	pop    ebp
  42321c:	pop    esp
  42321d:	fs dec ecx
  42321f:	test   BYTE PTR [eax+0x33417ede],bh
  423225:	mov    cl,0xcd
  423227:	sidtd  [edi]
  42322a:	ins    BYTE PTR es:[edi],dx
  42322b:	out    dx,eax
  42322c:	cmp    ebp,DWORD PTR [esi-0x29837aa7]
  423232:	ja     0x423287
  423234:	les    esp,FWORD PTR [ebp+0x3c]
  423237:	sbb    eax,0x4e87cd0a
  42323c:	and    al,0xa1
  42323e:	(bad)  [edx]
  423240:	rcr    DWORD PTR [ecx-0xfc12681],1
  423246:	xor    al,0xa1
  423248:	mov    fs,esi
  42324a:	jnp    0x423268
  42324c:	cmp    al,0xa3
  42324e:	(bad)  
  42324f:	xchg   ebx,eax
  423250:	lods   eax,DWORD PTR ds:[esi]
  423251:	stos   BYTE PTR es:[edi],al
  423252:	and    BYTE PTR [esp+ecx*1],cl
  423255:	dec    ecx
  423256:	xchg   esi,eax
  423257:	js     0x4231e0
  423259:	lds    eax,FWORD PTR [edx]
  42325b:	retfw  0x8472
  42325f:	push   eax
  423260:	xchg   esi,esi
  423262:	ds mov esp,0xca7bdfc7
  423268:	adc    BYTE PTR [ecx-0x7d],dl
  42326b:	jo     0x423222
  42326d:	mov    al,0x87
  42326f:	inc    esi
  423270:	mov    ebp,0x8c70ea50
  423275:	cmp    BYTE PTR [ebx],dl
  423277:	cmp    esp,DWORD PTR [eax+0xb]
  42327a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42327b:	and    dh,BYTE PTR [eax+0x43b09911]
  423281:	push   ds
  423282:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  423284:	dec    eax
  423285:	adc    eax,0xb9aecca5
  42328a:	push   ebx
  42328b:	mov    dh,al
  42328d:	jmp    0x423243
  42328f:	mov    DWORD PTR [edi-0x10],eax
  423292:	pop    ebp
  423293:	hlt    
  423294:	(bad)  
  423296:	add    eax,0xeb839ceb
  42329b:	mov    ch,BYTE PTR [ebp-0x7931f51b]
  4232a1:	push   eax
  4232a2:	mov    bl,0xae
  4232a4:	mov    cl,0xa2
  4232a6:	inc    eax
  4232a7:	lock fnstsw WORD PTR [eax+0x3699eae0]
  4232ae:	sbb    al,0xfc
  4232b0:	pop    ecx
  4232b1:	or     BYTE PTR [edx-0x20],ah
  4232b4:	int3   
  4232b5:	rol    BYTE PTR cs:[edx+0x27],1
  4232b9:	out    dx,al
  4232ba:	and    BYTE PTR [ecx-0x7a],cl
  4232bd:	cdq    
  4232be:	out    dx,al
  4232bf:	int    0x5
  4232c1:	sbb    eax,0xe64b6184
  4232c6:	push   esp
  4232c7:	ret    0xcd70
  4232ca:	repnz setno BYTE PTR [ebx]
  4232ce:	enter  0xad2b,0x89
  4232d2:	outs   dx,DWORD PTR ds:[esi]
  4232d3:	retf   0xa756
  4232d6:	fstp   QWORD PTR [edx-0x63abd2fc]
  4232dc:	cmp    ebx,DWORD PTR [eax-0x13]
  4232df:	jmp    0x5495:0x7bde05ae
  4232e6:	fild   WORD PTR [esi]
  4232e8:	or     al,0x81
  4232ea:	daa    
  4232eb:	clc    
  4232ec:	in     al,0x99
  4232ee:	in     eax,0x56
  4232f0:	xchg   ebp,eax
  4232f1:	or     al,BYTE PTR [eax+0x94ce25b]
  4232f7:	pop    ds
  4232f8:	lea    edi,[edi+esi*1+0x14]
  4232fc:	call   0x161de2e2
  423301:	inc    ebp
  423302:	or     BYTE PTR [eax],al
  423304:	mov    eax,0xe871b83e
  423309:	sahf   
  42330a:	jns    0x4232fd
  42330c:	(bad)  
  42330d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42330e:	xchg   edx,eax
  42330f:	and    esi,DWORD PTR [edi+0x36]
  423312:	icebp  
  423313:	push   ss
  423314:	out    dx,al
  423315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423316:	jg     0x4232b2
  423318:	sub    eax,0x3524c084
  42331d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42331e:	jne    0x4232e2
  423320:	or     BYTE PTR [edi],al
  423322:	repz fimul WORD PTR [edi]
  423325:	push   ss
  423326:	dec    esi
  423327:	mov    bh,0x37
  423329:	jns    0x423392
  42332b:	pop    edx
  42332c:	mov    esp,0xf452b0e3
  423331:	lods   eax,DWORD PTR ds:[esi]
  423332:	call   0x37144f5b
  423337:	aaa    
  423338:	lock cmp BYTE PTR [edi],bl
  42333b:	(bad)  
  42333c:	call   eax
  42333e:	nop
  42333f:	push   edi
  423340:	and    al,0x69
  423342:	push   ebx
  423343:	sub    DWORD PTR [ebx+eiz*2+0x77],edx
  423347:	mov    al,0xd2
  423349:	arpl   WORD PTR [ebp-0x60],cx
  42334c:	pop    ebx
  42334d:	push   esp
  42334e:	xor    BYTE PTR [ebx+0x71],bh
  423351:	jg     0x4232f3
  423353:	or     al,0xa0
  423355:	fxch   st(7)
  423357:	iret   
  423358:	mov    esi,ds
  42335a:	fdivr  QWORD PTR [esi+0x6c98758f]
  423360:	mov    ebp,0xfd50e922
  423365:	jno    0x42334b
  423367:	(bad)  
  423368:	jno    0x4233e8
  42336a:	and    ecx,0x64
  42336d:	popf   
  42336e:	and    ebx,eax
  423370:	(bad)  
  423372:	cmp    ebx,DWORD PTR ds:[edx-0x2efda6cc]
  423379:	and    BYTE PTR [edx+ecx*1+0x50],dl
  42337d:	enter  0x7fdd,0x5a
  423381:	es popa 
  423383:	pop    es
  423384:	inc    eax
  423385:	mov    esi,0xe70db84a
  42338a:	fimul  DWORD PTR [esi+ebx*1+0xeff29e7]
  423391:	inc    edx
  423392:	leave  
  423393:	push   es
  423394:	mov    dh,0xf1
  423396:	mov    ebp,0x8065ce0d
  42339b:	xchg   DWORD PTR [ecx+eax*8],edx
  42339e:	out    0x99,al
  4233a0:	inc    edi
  4233a1:	xor    ebp,esi
  4233a3:	(bad)  
  4233a4:	fnsave ds:0xefd57c4
  4233aa:	popa   
  4233ab:	mov    ebx,0x9b4cb8b9
  4233b0:	pop    esp
  4233b1:	jb     0x423394
  4233b3:	sar    BYTE PTR [ebx+esi*2],cl
  4233b6:	fimul  DWORD PTR [edi]
  4233b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233b9:	call   0xda7f:0xcec6b288
  4233c0:	mov    ds,esp
  4233c2:	mov    ebx,0x3fb135fc
  4233c7:	das    
  4233c8:	cmp    BYTE PTR [ecx-0x15],ch
  4233cb:	mov    dh,0x7c
  4233cd:	inc    ebp
  4233ce:	ret    0x730
  4233d1:	mov    bh,0x94
  4233d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233d4:	jle    0x423428
  4233d6:	es mov ebp,0xe1224643
  4233dc:	iret   
  4233dd:	cmp    BYTE PTR [ecx+0x5675b3b3],bh
  4233e3:	mov    ds,WORD PTR [edx]
  4233e5:	add    al,0x8e
  4233e7:	pop    esp
  4233e8:	aaa    
  4233e9:	dec    esp
  4233ea:	addr16 (bad) 
  4233ec:	mov    esp,0x74df7234
  4233f1:	xchg   ebx,ecx
  4233f3:	(bad)  
  4233f4:	js     0x4233d4
  4233f6:	inc    edx
  4233f7:	mov    ecx,0xa45b4719
  4233fc:	adc    eax,0x6176a902
  423401:	inc    esp
  423402:	adc    ecx,DWORD PTR ds:0x9bd54683
  423408:	jnp    0x423482
  42340a:	jb     0x423420
  42340c:	jmp    0x2675445c
  423411:	add    BYTE PTR [esi-0x7dfeba73],dl
  423417:	dec    ebp
  423418:	jmp    0x8e3bb5b1
  42341d:	test   DWORD PTR [edi-0x7a],edx
  423420:	in     al,dx
  423421:	inc    eax
  423422:	xchg   DWORD PTR [esi],ebx
  423424:	jbe    0x4233d1
  423426:	inc    esp
  423427:	mov    WORD PTR [esp+eax*4],ds
  42342a:	dec    ebx
  42342b:	xchg   edx,eax
  42342c:	lods   al,BYTE PTR ds:[esi]
  42342d:	inc    edi
  42342e:	push   eax
  42342f:	test   DWORD PTR [ebx],0x4ad92317
  423435:	fisub  DWORD PTR [edi]
  423437:	addr16 cdq 
  423439:	push   ebx
  42343a:	dec    ebp
  42343b:	cmp    eax,0xa7c4f63d
  423440:	(bad)  
  423441:	push   ecx
  423442:	adc    BYTE PTR [edx+ebp*2-0x21fc5454],ah
  423449:	cwde   
  42344a:	mov    ebp,0xfee5fea5
  42344f:	sub    dl,BYTE PTR [eax+0x151d712]
  423455:	jge    0x4234c5
  423457:	loopne 0x42344d
  423459:	pop    eax
  42345a:	push   eax
  42345b:	sub    al,0x3a
  42345d:	loop   0x42341e
  42345f:	sub    DWORD PTR [edi-0x3c],edi
  423462:	int    0x2
  423464:	jne    0x423445
	...
  423472:	push   esp
  423473:	ds and al,0x19
  423476:	outs   dx,BYTE PTR ds:[esi]
  423477:	sbb    edi,DWORD PTR [ebp+0x7f]
  42347a:	(bad)  
  42347b:	mov    eax,0xb269cfc0
  423480:	jnp    0x4234fe
  423482:	mov    edx,0xcc0001a6
  423487:	add    al,BYTE PTR [eax]
  423489:	add    cl,bh
  42348b:	lods   al,BYTE PTR ds:[esi]
  42348c:	in     eax,dx
  42348d:	xchg   ecx,eax
  42348e:	jecxz  0x4234d8
  423490:	test   BYTE PTR [edi-0x597ca4],dl
  423496:	popf   
  423497:	jl     0x423427
  423499:	(bad)  
  42349a:	aad    0x5c
  42349c:	gs push es
  42349e:	mov    bl,0xb
  4234a0:	fstp   DWORD PTR [eax-0x10]
  4234a3:	sub    BYTE PTR [ebx],0x7d
  4234a6:	gs repnz or cl,cl
  4234aa:	inc    ebx
  4234ab:	jecxz  0x423527
  4234ad:	sar    bl,cl
  4234af:	addr16 int 0x90
  4234b2:	cs jmp 0x42349c
  4234b5:	out    dx,al
  4234b6:	sar    al,cl
  4234b8:	push   0xffffffe1
  4234ba:	sbb    ebp,esp
  4234bc:	xlat   BYTE PTR ds:[ebx]
  4234bd:	xor    DWORD PTR [edx+ebx*8-0x7a],esi
  4234c1:	cmp    DWORD PTR [ebx+0x14],esi
  4234c4:	mov    BYTE PTR [edx-0x494751d0],bl
  4234ca:	push   esi
  4234cb:	stc    
  4234cc:	data16 cld 
  4234ce:	push   eax
  4234cf:	push   ebp
  4234d0:	dec    esi
  4234d1:	xor    ecx,DWORD PTR ds:0xdc77e782
  4234d7:	pushf  
  4234d8:	sub    eax,0x6ff3c194
  4234dd:	sahf   
  4234de:	leave  
  4234df:	iret   
  4234e0:	into   
  4234e1:	out    0xd4,eax
  4234e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234e4:	cwde   
  4234e5:	in     eax,dx
  4234e6:	mov    dl,0x84
  4234e8:	pop    edi
  4234e9:	aaa    
  4234ea:	sbb    DWORD PTR [ebx-0x6b],esp
  4234ed:	pop    esi
  4234ee:	imul   ecx,DWORD PTR ds:0x9e9311d9,0x62345d0f
  4234f8:	add    eax,0xa9790efe
  4234fd:	adc    edx,DWORD PTR [eax+0x35]
  423500:	mov    eax,0xa2730e3b
  423505:	ret    
  423506:	jmp    0x4234fd
  423508:	aad    0xf2
  42350a:	leave  
  42350b:	test   esi,esi
  42350d:	outs   dx,DWORD PTR ds:[esi]
  42350e:	out    dx,eax
  42350f:	push   0xca65a0a5
  423514:	sub    DWORD PTR [esi],edi
  423516:	mov    ebp,0x61c28318
  42351b:	dec    ebx
  42351c:	xor    DWORD PTR ds:0xa6ec2d88,ebp
  423522:	xor    edi,DWORD PTR [ebx]
  423524:	dec    ebx
  423525:	xchg   esp,eax
  423526:	lods   al,BYTE PTR ds:[esi]
  423527:	jle    0x423503
  423529:	mov    edi,0xb978385c
  42352e:	(bad)  
  42352f:	mov    edi,0xe60ea414
  423534:	xchg   ebp,eax
  423535:	repz and bh,bh
  423538:	and    eax,0xfa382cf
  42353d:	jle    0x423566
  42353f:	ret    
  423540:	retf   0x4fbe
  423543:	repz sub esi,DWORD PTR [esi]
  423546:	arpl   WORD PTR [edi+edx*8-0x2d],bp
  42354a:	xor    dh,BYTE PTR [eax]
  42354c:	sbb    edx,DWORD PTR [edi+0x5]
  42354f:	cmp    dh,BYTE PTR [edi-0x4e14d2a0]
  423555:	adc    bh,dl
  423557:	out    0x79,al
  423559:	sub    BYTE PTR [edi-0x48],dl
  42355c:	cmp    al,0xc3
  42355e:	lods   al,BYTE PTR ds:[esi]
  42355f:	and    BYTE PTR [esi-0x2a56177b],bh
  423565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423566:	push   0x94af73e0
  42356b:	pop    es
  42356c:	xchg   ebp,eax
  42356d:	mov    DWORD PTR [edi-0x76e288ee],ecx
  423573:	mov    DWORD PTR [ebp+0x32],ebx
  423576:	and    al,0x31
  423578:	fisttp DWORD PTR [ebx+eax*4-0x2]
  42357c:	sub    dh,bh
  42357e:	inc    ecx
  42357f:	inc    esi
  423580:	fwait
  423581:	imul   edx,DWORD PTR [edi],0xffffffdc
  423584:	shl    DWORD PTR [edx-0x6e],1
  423587:	dec    eax
  423588:	and    cl,al
  42358a:	imul   edi,DWORD PTR [esi+0x15],0x7c
  42358e:	inc    eax
  42358f:	xchg   esp,eax
  423590:	mov    dl,0xdd
  423592:	fmul   QWORD PTR [edx]
  423594:	imul   esp,DWORD PTR [ecx],0xffffffc4
  423597:	pop    ds
  423598:	mov    dl,0xe6
  42359a:	fcmovnu st,st(7)
  42359c:	add    edi,edi
  42359e:	xchg   esi,eax
  42359f:	sub    eax,edx
  4235a1:	mov    bl,0x28
  4235a3:	sbb    esi,edx
  4235a5:	push   esp
  4235a6:	mov    WORD PTR [edi],ds
  4235a8:	adc    BYTE PTR [ebx+eiz*4-0x47ffa26c],dh
  4235af:	sbb    DWORD PTR [esi-0xba71668],ebx
  4235b5:	(bad)  
  4235b7:	scas   al,BYTE PTR es:[edi]
  4235b8:	push   eax
  4235b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ba:	call   FWORD PTR [edi+0x7a]
  4235bd:	pushf  
  4235be:	sub    DWORD PTR ds:0x68bac742,ebx
  4235c4:	jle    0x4235e8
  4235c6:	fs iret 
  4235c8:	das    
  4235c9:	out    0x98,al
  4235cb:	fwait
  4235cc:	sti    
  4235cd:	in     al,0xdf
  4235cf:	repz xor BYTE PTR [eax],dh
  4235d2:	mov    ebp,0xaa64979e
  4235d7:	jecxz  0x4235d4
  4235d9:	cmp    DWORD PTR [ebp-0x57a5373e],ebp
  4235df:	aad    0xd0
  4235e1:	inc    eax
  4235e2:	adc    BYTE PTR [ecx-0x1cf9e628],cl
  4235e8:	sub    al,0x28
  4235ea:	out    dx,al
  4235eb:	test   eax,0x9799da50
  4235f0:	outs   dx,DWORD PTR ds:[esi]
  4235f1:	add    DWORD PTR [ecx+0x1fd120b9],ebp
  4235f7:	popa   
  4235f8:	or     esp,DWORD PTR [edi+0x59]
  4235fb:	test   BYTE PTR [edx-0x6f],0xe6
  4235ff:	cmp    DWORD PTR [edi-0x2592b404],edi
  423605:	pop    edx
  423606:	lock in al,0x5c
  423609:	scas   eax,DWORD PTR es:[edi]
  42360a:	fld    TBYTE PTR [edi]
  42360c:	js     0x4235c2
  42360e:	mov    ecx,0xdc212496
  423613:	push   edx
  423614:	jmp    0x2fa15d0
  423619:	xchg   esp,eax
  42361a:	sbb    eax,0xc4eaf735
  42361f:	mov    BYTE PTR [eax+0x1222759],cl
  423625:	dec    ecx
  423626:	out    dx,al
  423627:	mov    WORD PTR [eax],gs
  423629:	stos   BYTE PTR es:[edi],al
  42362a:	outs   dx,BYTE PTR ds:[esi]
  42362b:	outs   dx,BYTE PTR ds:[esi]
  42362c:	sub    eax,0xb0bb2064
  423631:	or     eax,0xd6d54962
  423636:	mov    bh,0x1b
  423638:	pop    esi
  423639:	pop    ebp
  42363a:	adc    BYTE PTR [edi-0x1],0xaa
  42363e:	jmp    0xe097:0x57b3d520
  423645:	xchg   esp,eax
  423646:	imul   edx,DWORD PTR [ecx+0x33],0x78
  42364a:	in     eax,0x4f
  42364c:	push   ebp
  42364d:	dec    esi
  42364e:	outs   dx,DWORD PTR ds:[esi]
  42364f:	dec    eax
  423650:	pop    ss
  423651:	mov    ds:0xb9a2eba7,eax
  423656:	rcl    DWORD PTR [ebp-0x39500832],1
  42365c:	ins    BYTE PTR es:[edi],dx
  42365d:	stc    
  42365e:	sbb    al,0x8f
  423660:	sbb    dl,BYTE PTR [edx+edx*1-0x31a4313a]
  423667:	and    eax,DWORD PTR [ecx]
  423669:	cmp    al,0x4a
  42366b:	or     dh,ah
  42366d:	mov    dl,ah
  42366f:	xor    BYTE PTR [esi+0x46818d97],dl
  423675:	in     eax,dx
  423676:	retf   
  423677:	inc    edi
  423678:	stos   BYTE PTR es:[edi],al
  423679:	mov    ss,WORD PTR [edi-0x3225846c]
  42367f:	fild   DWORD PTR [esi-0x5]
  423682:	cs dec ecx
  423684:	pop    ecx
  423685:	sub    edx,DWORD PTR [ebx+ecx*2-0x587b9f9]
  42368c:	cmp    ah,BYTE PTR [ebp-0x56]
  42368f:	xchg   esp,eax
  423690:	mov    bh,0xe
  423692:	adc    BYTE PTR [edi],ah
  423694:	push   eax
  423695:	arpl   WORD PTR [ecx-0x68],cx
  423698:	inc    esp
  423699:	or     DWORD PTR [esi+ebp*4+0x4a],eax
  42369d:	mov    bh,0x42
  42369f:	test   eax,0x508141e8
  4236a4:	fwait
  4236a5:	bnd jle 0x42371f
  4236a8:	mov    dh,0x36
  4236aa:	call   0xc45f8348
  4236af:	sbb    BYTE PTR [ecx],al
  4236b1:	jecxz  0x4236ef
  4236b3:	bound  esp,QWORD PTR [ecx]
  4236b5:	fs in  al,0xc2
  4236b8:	lods   eax,DWORD PTR ds:[esi]
  4236b9:	jmp    0x42366e
  4236bb:	jb     0x4236e1
  4236bd:	cmp    eax,0x8bb9b778
  4236c2:	iret   
  4236c3:	mov    eax,ds:0xff731e85
  4236c8:	repnz push ebp
  4236ca:	inc    DWORD PTR [ecx+0x2146ec25]
  4236d0:	imul   ecx,DWORD PTR [ecx+0x271273e9],0x1a07a8d7
  4236da:	add    cl,BYTE PTR [ecx]
  4236dc:	sub    DWORD PTR [ecx-0x18],edi
  4236df:	jl     0x423729
  4236e1:	mov    bl,0xbd
  4236e3:	ins    DWORD PTR es:[edi],dx
  4236e4:	mov    BYTE PTR [ebx+0x12],ch
  4236e7:	(bad)  
  4236e8:	sub    edi,ebp
  4236ea:	cli    
  4236eb:	add    al,0x56
  4236ed:	pop    ebp
  4236ee:	dec    ebp
  4236ef:	js     0x4236fd
  4236f1:	fmul   DWORD PTR [ebx-0x39657303]
  4236f7:	cwd    
  4236f9:	mov    ecx,0xfeb1e630
  4236fe:	ret    
  4236ff:	mov    BYTE PTR [edi],ch
  423701:	xchg   ecx,eax
  423702:	inc    ebp
  423703:	cmc    
  423704:	push   es
  423705:	shld   DWORD PTR [edi+eiz*4],ebx,cl
  423709:	jae    0x4236f8
  42370b:	push   eax
  42370c:	addr16 dec edx
  42370e:	mov    dl,0x41
  423710:	ins    DWORD PTR es:[edi],dx
  423711:	inc    edi
  423712:	pop    es
  423713:	icebp  
  423714:	add    BYTE PTR [eax+ebp*4],ch
  423717:	ss jl  0x4236b2
  42371a:	push   edx
  42371b:	mov    ds:0xb4b05f8d,al
  423720:	dec    edx
  423721:	mov    WORD PTR [esi-0x61831e0],cs
  423727:	popf   
  423728:	cli    
  423729:	mov    ds:0xf71e4f6e,eax
  42372e:	stos   DWORD PTR es:[edi],eax
  42372f:	rcl    bl,0x9f
  423732:	test   BYTE PTR [ecx],cl
  423734:	loopne 0x423769
  423736:	mov    al,ds:0x70977c4e
  42373b:	jl     0x42371c
  42373d:	mov    ch,0x6b
  42373f:	mov    esp,0x58533326
  423744:	push   es
  423745:	dec    DWORD PTR [esi-0x63d77da2]
  42374b:	call   0x62c800f9
  423750:	ss pop ds
  423752:	sbb    al,0x64
  423754:	or     ebp,DWORD PTR [ebx+0x0]
	...
  423762:	mov    esi,0x74ef74ea
  423767:	(bad)  
  423768:	mov    edi,0x98b349fb
  42376d:	xor    cl,BYTE PTR [esi+0x2b]
  423770:	mov    bl,0x9
  423772:	xchg   BYTE PTR [ecx+0x2cc0001],ch
  423778:	add    BYTE PTR [eax],al
  42377a:	inc    ebp
  42377b:	cwde   
  42377c:	and    bl,ah
  42377e:	jmp    0x4237af
  423780:	add    BYTE PTR [ecx+eax*2],al
  423783:	cmp    bh,dh
  423785:	pop    ds
  423786:	inc    ebx
  423787:	dec    edi
  423788:	xchg   ebp,eax
  423789:	cdq    
  42378a:	fst    QWORD PTR [edi]
  42378c:	cli    
  42378d:	stos   DWORD PTR es:[edi],eax
  42378e:	mov    dh,0xfb
  423790:	pop    ds
  423791:	push   ds
  423792:	push   cs
  423793:	sub    eax,0x841787eb
  423798:	loop   0x4237cc
  42379a:	dec    esp
  42379b:	cmp    al,0xb0
  42379d:	inc    esp
  42379e:	pushf  
  42379f:	inc    esi
  4237a0:	push   eax
  4237a1:	push   edx
  4237a2:	add    edx,DWORD PTR ss:[edi+ebx*4]
  4237a6:	hlt    
  4237a7:	and    cl,BYTE PTR [edx+0x75a47eef]
  4237ad:	or     ah,BYTE PTR [ebp+0x45b88364]
  4237b3:	sub    al,0xb1
  4237b5:	jmp    0xd021c7d4
  4237ba:	out    dx,eax
  4237bb:	mov    al,0xce
  4237bd:	out    0x22,al
  4237bf:	adc    eax,0x1dea6e03
  4237c4:	shl    DWORD PTR [edi-0x3e],cl
  4237c7:	dec    ecx
  4237c8:	imul   ecx,esi,0xa8680f58
  4237ce:	loop   0x4237a8
  4237d0:	pop    ecx
  4237d1:	fsubp  st(6),st
  4237d3:	xchg   ecx,eax
  4237d4:	(bad)  
  4237d5:	in     al,dx
  4237d6:	dec    edx
  4237d7:	add    DWORD PTR [ebp+0x21],edx
  4237da:	sti    
  4237db:	jne    0x423763
  4237dd:	dec    ebp
  4237de:	shl    BYTE PTR ds:0x1eb7cb0d,0xe5
  4237e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237e6:	pop    ebx
  4237e7:	inc    edi
  4237e8:	push   cs
  4237e9:	fidivr WORD PTR ds:0x463e9c83
  4237ef:	loopne 0x4237c5
  4237f1:	inc    ecx
  4237f2:	jl     0x42381b
  4237f4:	jecxz  0x4237e3
  4237f6:	ins    BYTE PTR es:[edi],dx
  4237f7:	inc    esp
  4237f8:	retf   
  4237f9:	pop    ecx
  4237fa:	jne    0x42384f
  4237fc:	repz imul eax,eax,0xffa39a4f
  423803:	fnstcw WORD PTR [edi]
  423805:	out    0xbc,eax
  423807:	js     0x42378c
  423809:	mov    ds:0xb6764ede,al
  42380e:	dec    esp
  42380f:	or     eax,0x1cdf42ea
  423814:	data16 cli 
  423816:	jp     0x4237ee
  423818:	jb     0x423896
  42381a:	popf   
  42381b:	mov    al,0xf7
  42381d:	mov    ds:0xd052b10e,al
  423822:	ss jns 0x4237b0
  423825:	aam    0xb1
  423827:	sar    DWORD PTR [esi+edi*2],cl
  42382a:	inc    ebx
  42382b:	out    dx,eax
  42382c:	enter  0x23e0,0xea
  423830:	retf   
  423831:	push   ds
  423832:	clc    
  423833:	cli    
  423834:	adc    eax,0xcd1530ae
  423839:	stc    
  42383a:	loopne 0x423831
  42383c:	jno    0x423872
  42383e:	pop    esp
  42383f:	pushf  
  423840:	or     DWORD PTR [ecx-0x2a2981c6],esp
  423846:	adc    BYTE PTR [ebx-0x75aa1f7d],0x98
  42384d:	pushf  
  42384e:	adc    eax,0x845983f2
  423853:	aas    
  423854:	push   edx
  423855:	jae    0x423872
  423857:	shr    BYTE PTR ds:0x265bd628,0x59
  42385e:	push   es
  42385f:	fist   DWORD PTR [eax]
  423861:	out    dx,eax
  423862:	imul   eax,DWORD PTR [esi],0xe93d9bac
  423868:	cli    
  423869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42386a:	(bad)  
  42386b:	sub    dl,BYTE PTR [eax+0xddf7595]
  423871:	fmulp  st(5),st
  423873:	outs   dx,BYTE PTR ds:[esi]
  423874:	hlt    
  423875:	mov    eax,ds:0x781abc63
  42387a:	es mov ebp,0x89a22cfe
  423880:	jne    0x423864
  423882:	jo     0x423826
  423884:	mov    eax,ds:0x7709c37
  423889:	dec    esi
  42388a:	mov    ch,0x4a
  42388c:	jno    0x423826
  42388e:	out    0xa3,al
  423890:	mov    ah,BYTE PTR fs:[esi]
  423893:	xor    cl,BYTE PTR [ecx+edi*2+0x73]
  423897:	mov    bh,0x32
  423899:	inc    eax
  42389a:	mov    edx,0x9d00686c
  42389f:	sbb    al,0xff
  4238a1:	cmovbe ebp,DWORD PTR [esi]
  4238a4:	mov    edx,0xd290b461
  4238a9:	adc    edx,DWORD PTR [ecx+0x6299be29]
  4238af:	or     DWORD PTR [edi-0x55],edx
  4238b2:	push   es
  4238b3:	popa   
  4238b4:	push   0xd2fc76be
  4238b9:	hlt    
  4238ba:	out    0xa5,al
  4238bc:	jp     0x4238fa
  4238be:	dec    esp
  4238bf:	loope  0x4238bf
  4238c1:	adc    esi,DWORD PTR [ecx]
  4238c3:	xchg   edx,eax
  4238c4:	shl    BYTE PTR [ebx],cl
  4238c6:	(bad)  
  4238c7:	in     eax,dx
  4238c8:	loopne 0x42393a
  4238ca:	mov    edi,0xfdd8af36
  4238cf:	sti    
  4238d0:	xchg   BYTE PTR [esi-0x7eb47248],cl
  4238d6:	dec    edi
  4238d7:	inc    ecx
  4238d8:	imul   ecx,DWORD PTR [ebx+edi*2],0x45
  4238dc:	jo     0x4238f7
  4238de:	pushaw 
  4238e0:	or     DWORD PTR [edx+0x7f4975ce],esi
  4238e6:	dec    edi
  4238e7:	add    eax,esi
  4238e9:	fild   QWORD PTR [edx-0x1e]
  4238ec:	inc    eax
  4238ed:	jno    0x42391c
  4238ef:	inc    esi
  4238f0:	push   esp
  4238f1:	and    edi,DWORD PTR [ebp+0xa]
  4238f4:	push   ds
  4238f5:	sbb    DWORD PTR [ebx-0x5e0209b9],esi
  4238fb:	sbb    al,0x6
  4238fd:	test   DWORD PTR [edx+0x636b40af],ecx
  423903:	dec    ebp
  423904:	inc    ebp
  423905:	addr16 mov eax,0x8658d3a2
  42390b:	push   esp
  42390c:	sub    DWORD PTR [edx],edx
  42390e:	out    0x6b,al
  423910:	sub    al,BYTE PTR [edi+edi*1]
  423913:	add    dl,bh
  423915:	pop    esi
  423916:	dec    edx
  423917:	in     al,0xe6
  423919:	adc    DWORD PTR [ecx+0x2e74cd05],ecx
  42391f:	mov    ds:0x8701f7c,eax
  423924:	sub    DWORD PTR [ecx+0x4],ebx
  423927:	mov    cl,0x60
  423929:	enter  0x7a54,0x1a
  42392d:	pop    ebp
  42392e:	call   0xea4e221a
  423933:	cmp    al,0xeb
  423935:	inc    ecx
  423936:	test   dl,bh
  423938:	std    
  423939:	sbb    esp,edx
  42393b:	retf   
  42393c:	xor    eax,0x4ae8ff44
  423941:	test   al,0x48
  423943:	arpl   WORD PTR [ebx+0x60287ce3],ax
  423949:	call   0x6c305161
  42394e:	sbb    eax,0xf3a5f328
  423953:	addr16 sti 
  423955:	imul   ebp,DWORD PTR [edx-0x36199cd6],0x6a
  42395c:	std    
  42395d:	add    BYTE PTR [esi-0x80],ah
  423960:	hlt    
  423961:	mov    esp,0x99afe494
  423966:	sub    DWORD PTR [eax-0x64],esp
  423969:	ja     0x423956
  42396b:	pop    ss
  42396c:	popa   
  42396d:	push   es
  42396e:	mov    BYTE PTR [edx],ah
  423970:	dec    ecx
  423971:	and    esi,esi
  423973:	nop
  423974:	cwde   
  423975:	or     dh,BYTE PTR [ebx-0x1bc1d4de]
  42397b:	pop    ebx
  42397c:	xchg   esp,eax
  42397d:	fidivr DWORD PTR [ecx-0x77ff8ef3]
  423983:	xchg   ebx,edx
  423985:	and    esp,edx
  423987:	aaa    
  423988:	das    
  423989:	push   ecx
  42398a:	inc    esi
  42398b:	and    dh,dh
  42398d:	push   es
  42398e:	xchg   esp,eax
  42398f:	mov    edx,0xcdcba207
  423994:	fsubr  DWORD PTR [edx]
  423996:	das    
  423997:	xor    dh,ah
  423999:	pop    edx
  42399a:	repz scas eax,DWORD PTR es:[edi]
  42399c:	jmp    0xd01d81a2
  4239a1:	test   al,0xbf
  4239a3:	pop    esi
  4239a4:	xlat   BYTE PTR ds:[ebx]
  4239a5:	mov    ecx,0x84d5fe53
  4239aa:	aas    
  4239ab:	rol    BYTE PTR [edx+0x2],cl
  4239ae:	aam    0x8f
  4239b0:	pop    ss
  4239b1:	test   BYTE PTR [esi+0x22e59d4f],bh
  4239b7:	xchg   esi,eax
  4239b8:	jl     0x4239ff
  4239ba:	mov    bl,0x28
  4239bc:	dec    ebp
  4239bd:	aas    
  4239be:	push   DWORD PTR [esp+edx*8]
  4239c1:	inc    edx
  4239c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c3:	jmp    0x423989
  4239c5:	retf   
  4239c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c7:	push   esi
  4239c8:	or     dh,BYTE PTR [ebx+0x4e]
  4239cb:	loopne 0x423988
  4239cd:	mov    al,0xd8
  4239cf:	dec    eax
  4239d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239d1:	out    0xd7,al
  4239d3:	mov    ch,0xac
  4239d5:	nop
  4239d6:	inc    ebp
  4239d7:	dec    edx
  4239d8:	sbb    edi,edx
  4239da:	adc    BYTE PTR [eax-0x61],ch
  4239dd:	mov    ?,WORD PTR [ebx+0x2a87fd31]
  4239e3:	xor    ecx,DWORD PTR ss:[ebx]
  4239e6:	mov    ch,0xdc
  4239e8:	sbb    al,ah
  4239ea:	push   edx
  4239eb:	lods   al,BYTE PTR ds:[esi]
  4239ec:	ror    DWORD PTR [eax],1
  4239ee:	jnp    0x423a53
  4239f0:	retf   
  4239f1:	jge    0x4239f1
  4239f3:	or     BYTE PTR [edx],bl
  4239f5:	imul   eax,ecx,0x78
  4239f8:	pop    ds
  4239f9:	sti    
  4239fa:	iret   
  4239fb:	lods   ax,WORD PTR ds:[esi]
  4239fd:	mov    edi,0x62183355
  423a02:	int    0x78
  423a04:	pop    ebx
  423a05:	retf   0xe7d7
  423a08:	xor    eax,0x11ad34f7
  423a0d:	stos   DWORD PTR es:[edi],eax
  423a0e:	pop    ds
  423a0f:	or     ch,dh
  423a11:	pop    esp
  423a12:	sbb    BYTE PTR [ebp-0x1710fff0],al
  423a18:	clc    
  423a19:	push   ebx
  423a1a:	popf   
  423a1b:	push   ds
  423a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a1d:	add    eax,0x5a948d7c
  423a22:	adc    DWORD PTR [ebx+0x11],0xffffffe1
  423a26:	and    eax,0xb1e997c
  423a2b:	inc    eax
  423a2c:	and    DWORD PTR [ebx-0x76b3dbf],esi
  423a32:	lahf   
  423a33:	out    dx,eax
  423a34:	mov    al,0xc
  423a36:	mov    bl,0xf3
  423a38:	inc    esi
  423a39:	adc    DWORD PTR [eax],0x432aefe5
  423a3f:	repz sbb al,BYTE PTR [ecx-0x3c5b55d1]
	...
  423a52:	dec    ebx
  423a53:	inc    ebp
  423a54:	mov    edx,0x5fffbeee
  423a59:	in     eax,0x54
  423a5b:	stos   BYTE PTR es:[edi],al
  423a5c:	clc    
  423a5d:	adc    DWORD PTR [esp+eiz*4-0x53ad5d62],edi
  423a64:	add    DWORD PTR [eax],eax
  423a66:	int3   
  423a67:	add    al,BYTE PTR [eax]
  423a69:	add    BYTE PTR [edx-0x71],bl
  423a6c:	mov    ds:0xcf9b9828,eax
  423a71:	dec    ecx
  423a72:	push   eax
  423a73:	mov    eax,ds:0x874a68b3
  423a78:	not    BYTE PTR [esi]
  423a7a:	inc    ebx
  423a7b:	leave  
  423a7c:	icebp  
  423a7d:	pusha  
  423a7e:	jl     0x423a14
  423a80:	stos   BYTE PTR es:[edi],al
  423a81:	in     eax,0x4c
  423a83:	retf   0xcd1a
  423a86:	lock ja 0x423a53
  423a89:	out    0x2e,al
  423a8b:	test   BYTE PTR ds:0x9de5,bh
  423a90:	ins    DWORD PTR es:[edi],dx
  423a91:	fwait
  423a92:	pop    esp
  423a93:	sub    bl,BYTE PTR [edx-0x4831ba86]
  423a99:	sub    bl,BYTE PTR [esi+0x50]
  423a9c:	push   ecx
  423a9d:	xor    al,0x7f
  423a9f:	mov    ds,WORD PTR [ebx-0x4d4326f8]
  423aa5:	cs cmp dh,ah
  423aa8:	mov    dh,0xf1
  423aaa:	popf   
  423aab:	sti    
  423aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aad:	cdq    
  423aae:	xor    edi,DWORD PTR [eax-0x6bbc01be]
  423ab4:	pop    ss
  423ab5:	mov    ebx,0x5082012f
  423aba:	jle    0x423a9e
  423abc:	ret    
  423abd:	icebp  
  423abe:	es cmp al,0xdd
  423ac1:	scas   eax,DWORD PTR es:[edi]
  423ac2:	mov    bl,0xdc
  423ac4:	push   ebx
  423ac5:	test   eax,0x663cc982
  423aca:	fadd   DWORD PTR [edx+edx*4+0x6721630]
  423ad1:	xor    edx,ebx
  423ad3:	mov    edi,0xd0912c6c
  423ad8:	jne    0x423ad7
  423ada:	pop    esp
  423adb:	popf   
  423adc:	or     eax,0x36a51f80
  423ae1:	mov    ch,0x9a
  423ae3:	mov    ebp,0xf6da4f0d
  423ae8:	lds    ebx,FWORD PTR [ecx-0xc6c0029]
  423aee:	dec    edi
  423aef:	sub    eax,0x37dd19d4
  423af4:	(bad)  
  423af5:	mov    bh,0xc5
  423af7:	cmp    dl,cl
  423af9:	mov    ah,0xe5
  423afb:	pop    ds
  423afc:	add    bh,BYTE PTR [eax+eax*8+0x2b4c7808]
  423b03:	and    DWORD PTR [ebx+0x78],ebp
  423b06:	js     0x423b46
  423b08:	test   BYTE PTR [ebx],ah
  423b0a:	ret    0xc6e9
  423b0d:	pop    ebx
  423b0e:	(bad)  
  423b10:	jno    0x423b3e
  423b12:	inc    ebx
  423b13:	push   ss
  423b14:	push   ecx
  423b15:	pop    edx
  423b16:	push   ds
  423b17:	inc    eax
  423b18:	pop    ebx
  423b19:	dec    ebp
  423b1a:	mov    BYTE PTR [ecx+0x14],bl
  423b1d:	es cmp al,0x3e
  423b20:	repnz pop ecx
  423b22:	push   ds
  423b23:	xchg   ecx,eax
  423b24:	and    BYTE PTR [eax],bl
  423b26:	mov    ch,0xa9
  423b28:	adc    BYTE PTR [ebp+0x1cafa71f],cl
  423b2e:	out    0x94,al
  423b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b31:	les    edx,FWORD PTR ds:0xa5bbae6e
  423b37:	ins    BYTE PTR es:[edi],dx
  423b38:	into   
  423b39:	xchg   esi,eax
  423b3a:	or     al,0xd
  423b3c:	jmp    0x4db3:0x60e902ca
  423b43:	ja     0x423bb0
  423b45:	inc    esi
  423b46:	mov    esi,0x20b3253e
  423b4b:	hlt    
  423b4c:	(bad)  
  423b4d:	xchg   esp,eax
  423b4e:	mov    al,0x50
  423b50:	pop    edi
  423b51:	xor    al,0xe6
  423b53:	add    eax,DWORD PTR [esp+edx*4+0x50f5de21]
  423b5a:	jmp    0x337d50fb
  423b5f:	loope  0x423afc
  423b61:	retf   0x8f40
  423b64:	mov    ds:0xc9de3f18,al
  423b69:	push   edi
  423b6a:	jle    0x423bb7
  423b6c:	dec    edi
  423b6d:	mov    edi,DWORD PTR [edi-0xc]
  423b70:	mov    ah,0x55
  423b72:	inc    ebp
  423b73:	xchg   ebp,eax
  423b74:	jle    0x423b3e
  423b76:	fnsave [esi+0x64]
  423b79:	cmp    esp,DWORD PTR [edi-0x522bfae3]
  423b7f:	scas   eax,DWORD PTR es:[edi]
  423b80:	mul    DWORD PTR [esi+0x57]
  423b83:	(bad)  
  423b84:	push   esi
  423b85:	stos   DWORD PTR es:[edi],eax
  423b86:	fistp  DWORD PTR [edx-0x1e]
  423b89:	xchg   esp,eax
  423b8a:	mov    dl,0x52
  423b8c:	dec    eax
  423b8d:	inc    eax
  423b8e:	(bad)  
  423b90:	fiadd  DWORD PTR [esi+0x607c9bb7]
  423b96:	push   edi
  423b97:	fs push edx
  423b99:	rcl    bh,1
  423b9b:	mov    ds:0xff180c78,eax
  423ba0:	add    eax,0x208991fb
  423ba5:	lods   al,BYTE PTR ds:[esi]
  423ba6:	in     eax,dx
  423ba7:	cmp    DWORD PTR [edx+0x45],0xcfef05ce
  423bae:	sti    
  423baf:	(bad)  
  423bb1:	pop    es
  423bb2:	dec    esi
  423bb3:	ins    DWORD PTR es:[edi],dx
  423bb4:	push   0xb507239c
  423bb9:	outs   dx,DWORD PTR ds:[esi]
  423bba:	xchg   ecx,ebp
  423bbc:	retf   0x11e8
  423bbf:	ds sub eax,0x849ef4f8
  423bc5:	out    dx,al
  423bc6:	jle    0x423b64
  423bc8:	push   es
  423bc9:	xchg   ebp,eax
  423bca:	jno    0x423be3
  423bcc:	pop    ecx
  423bcd:	push   eax
  423bce:	push   es
  423bcf:	adc    edx,ecx
  423bd1:	xchg   ah,ch
  423bd3:	fnsave [edx+0x6838ca5d]
  423bd9:	repnz mov bl,0x8b
  423bdc:	sub    BYTE PTR [ebx-0x7a],bl
  423bdf:	ret    
  423be0:	pop    edi
  423be1:	xor    dl,0x8d
  423be4:	clc    
  423be5:	xor    dh,BYTE PTR [eax-0x50df8a3b]
  423beb:	xchg   esi,eax
  423bec:	xchg   esi,eax
  423bed:	enter  0x3cf3,0x2
  423bf1:	mov    ecx,0xfeeec8aa
  423bf6:	inc    edi
  423bf7:	les    ebp,FWORD PTR [eax+0x46f1e67c]
  423bfd:	sbb    eax,0x6cb218ce
  423c02:	dec    edx
  423c03:	inc    eax
  423c04:	pop    esi
  423c05:	add    bl,ch
  423c07:	jp     0x423c36
  423c09:	clc    
  423c0a:	les    esp,FWORD PTR [esi+0x471bc67c]
  423c10:	aas    
  423c11:	mov    esp,0xcc512755
  423c16:	xlat   BYTE PTR ds:[ebx]
  423c17:	lods   al,BYTE PTR ds:[esi]
  423c18:	daa    
  423c19:	mov    ebp,0xce1fb015
  423c1e:	fadd   QWORD PTR [edx]
  423c20:	sbb    edx,DWORD PTR [eax+0x68]
  423c23:	dec    edi
  423c24:	ds loopne 0x423c3d
  423c27:	pop    esp
  423c28:	cmp    BYTE PTR [edx-0x12],0x1c
  423c2c:	cmp    dl,dl
  423c2e:	out    dx,al
  423c2f:	adc    BYTE PTR [ebx+0x15],0x23
  423c33:	mov    edi,0xb2b42b99
  423c38:	cmp    esp,edx
  423c3a:	inc    ebp
  423c3b:	or     eax,DWORD PTR [ebx+0x32a76a21]
  423c41:	xchg   DWORD PTR [edi],edi
  423c43:	enter  0x73e6,0x57
  423c47:	cdq    
  423c48:	popf   
  423c49:	retf   0xdef9
  423c4c:	sbb    eax,0x2c6fd27e
  423c51:	arpl   WORD PTR [edx+0x270b2d48],si
  423c57:	inc    edx
  423c58:	dec    eax
  423c59:	jmp    0x423cd2
  423c5b:	arpl   ax,di
  423c5d:	and    ebp,0x8
  423c60:	jns    0x423c46
  423c62:	call   0x9f446192
  423c67:	loopne 0x423c14
  423c69:	mov    ds:0x83742760,eax
  423c6e:	push   esi
  423c6f:	les    edi,FWORD PTR [ebp-0x31]
  423c72:	pop    ebx
  423c73:	inc    ebx
  423c74:	(bad)  
  423c75:	cmp    DWORD PTR [esi],edx
  423c77:	pushf  
  423c78:	or     eax,0xddca988d
  423c7d:	sub    esp,DWORD PTR [edi]
  423c7f:	add    edi,DWORD PTR [edi]
  423c81:	ret    0x1e5a
  423c84:	ja     0x423c2e
  423c86:	repnz sub DWORD PTR [ebx],esi
  423c89:	dec    eax
  423c8a:	or     DWORD PTR [edx-0x4423e460],edx
  423c90:	in     eax,0x1b
  423c92:	stos   BYTE PTR es:[edi],al
  423c93:	jge    0x423cbb
  423c95:	push   ss
  423c96:	nop
  423c97:	jne    0x423c89
  423c99:	retf   
  423c9a:	scas   eax,DWORD PTR es:[edi]
  423c9b:	inc    esp
  423c9c:	retf   0x11cb
  423c9f:	sbb    al,0x6
  423ca1:	ret    
  423ca2:	(bad)
  423ca5:	clc    
  423ca6:	mov    al,0xae
  423ca8:	test   BYTE PTR [edx-0x71],dl
  423cab:	xchg   ebp,eax
  423cac:	call   0x59d7b830
  423cb1:	icebp  
  423cb2:	scas   eax,DWORD PTR es:[edi]
  423cb3:	mov    dh,0x88
  423cb5:	xchg   edi,eax
  423cb6:	push   0xffffffe5
  423cb8:	sar    BYTE PTR [edi-0x6361c7a3],cl
  423cbe:	push   0xbf40a0a3
  423cc3:	or     eax,0x113ef326
  423cc8:	stos   BYTE PTR es:[edi],al
  423cc9:	adc    eax,DWORD PTR [ebp-0xeadaa5a]
  423ccf:	mov    dh,0x9
  423cd1:	mov    bl,0x55
  423cd3:	xchg   BYTE PTR [ecx],bl
  423cd5:	xor    eax,0xe315768e
  423cda:	int3   
  423cdb:	mov    al,ds:0x8a044e76
  423ce0:	cmp    BYTE PTR [eax+eax*1+0x197a8f90],bh
  423ce7:	cs pusha 
  423ce9:	push   es
  423cea:	inc    ecx
  423ceb:	dec    edx
  423cec:	(bad)  [ecx]
  423cee:	clc    
  423cef:	mov    DWORD PTR [eax],0xee927707
  423cf5:	sub    DWORD PTR cs:[ecx-0x62],edi
  423cf9:	pop    edi
  423cfa:	adc    eax,DWORD PTR [eax-0x442e68b4]
  423d00:	lods   al,BYTE PTR ds:[esi]
  423d01:	push   esp
  423d02:	shl    DWORD PTR [ecx-0x64e855c7],1
  423d08:	push   0x45
  423d0a:	test   DWORD PTR ds:[ecx+0x39],0x4ee16e09
  423d12:	cld    
  423d13:	es jl  0x423d5a
  423d16:	cmp    al,BYTE PTR [edi]
  423d18:	inc    esi
  423d19:	dec    ebp
  423d1a:	or     eax,0x471a3e2f
  423d1f:	mov    bl,0x14
  423d21:	loopne 0x423cfd
  423d23:	aaa    
  423d24:	and    eax,0x4f06b6c3
  423d29:	out    0x97,al
  423d2b:	inc    edi
  423d2c:	lahf   
  423d2d:	cld    
  423d2e:	add    eax,0x840715dd
  423d33:	mov    ds,WORD PTR [edi-0xf]
	...
  423d42:	stos   BYTE PTR es:[edi],al
  423d43:	jo     0x423d25
  423d45:	dec    ecx
  423d46:	cli    
  423d47:	fldcw  WORD PTR [ebx-0x35bf70d]
  423d4d:	loopne 0x423cfb
  423d4f:	test   eax,0xaf1e0cfc
  423d54:	add    DWORD PTR [eax],eax
  423d56:	int3   
  423d57:	add    al,BYTE PTR [eax]
  423d59:	add    BYTE PTR ds:0xd9b06c8,dh
  423d5f:	lea    ebx,[edi-0x35]
  423d62:	call   0xdd39c342
  423d67:	mov    eax,0x93c71f3e
  423d6c:	lods   al,BYTE PTR ds:[esi]
  423d6d:	mov    esi,0x33740ae2
  423d72:	neg    DWORD PTR [ebx-0x73]
  423d75:	mov    al,0xc6
  423d77:	pop    edi
  423d78:	mov    ecx,0x3f65a813
  423d7d:	jo     0x423d1d
  423d7f:	dec    ecx
  423d80:	pop    ebp
  423d81:	imul   edx,DWORD PTR [esi],0x653ee021
  423d87:	in     al,dx
  423d88:	sub    al,0x95
  423d8a:	repz mov edx,0xa91e6c5d
  423d90:	neg    eax
  423d92:	mov    eax,ds:0x1d276d6a
  423d97:	sbb    al,0x22
  423d99:	push   cs
  423d9a:	(bad)  
  423d9b:	fwait
  423d9c:	xchg   DWORD PTR [edx+0x58],esi
  423d9f:	add    ah,BYTE PTR [ebx+eax*1+0xc2341bb]
  423da6:	sbb    BYTE PTR [ecx-0x62302778],cl
  423dac:	jns    0x423d96
  423dae:	inc    edx
  423daf:	shl    eax,1
  423db1:	mov    cl,0x1d
  423db3:	call   0xbe61:0xc6710444
  423dba:	jle    0x423dfb
  423dbc:	xlat   BYTE PTR ds:[ebx]
  423dbd:	jnp    0x423d7b
  423dbf:	push   ss
  423dc0:	cdq    
  423dc1:	xor    al,0x77
  423dc3:	mov    bh,0x37
  423dc5:	jl     0x423df1
  423dc7:	jnp    0x423d71
  423dc9:	cs sar al,0x1
  423dcd:	add    edx,ebx
  423dcf:	mov    ebx,edx
  423dd1:	push   ebx
  423dd2:	call   0xee005ee4
  423dd7:	daa    
  423dd8:	or     ebx,ebx
  423dda:	sub    edx,edi
  423ddc:	sbb    al,0xf5
  423dde:	(bad)  
  423ddf:	in     al,dx
  423de0:	lahf   
  423de1:	fimul  DWORD PTR [edx+0x24]
  423de4:	jno    0x423e17
  423de6:	and    eax,0x9891c9d9
  423deb:	(bad)  
  423dec:	mov    ds:0x804f84c,eax
  423df1:	popf   
  423df2:	jp     0x423e50
  423df4:	out    dx,al
  423df5:	ss xchg ebp,eax
  423df7:	xchg   BYTE PTR [esp+ebx*8],ch
  423dfa:	lods   eax,DWORD PTR ds:[esi]
  423dfb:	pop    edi
  423dfc:	or     eax,0xa3a6b7dd
  423e01:	add    eax,0x6543c647
  423e06:	jecxz  0x423da1
  423e08:	or     eax,0x84554024
  423e0d:	fisub  DWORD PTR [eax-0xb]
  423e10:	inc    eax
  423e11:	push   ds
  423e12:	add    eax,0x812556c4
  423e17:	mov    ebx,0x88d510e2
  423e1c:	dec    ebp
  423e1d:	sbb    DWORD PTR fs:[edi],eax
  423e20:	ja     0x423e7e
  423e22:	call   0x5daa:0x34709053
  423e29:	ss cld 
  423e2b:	push   cs
  423e2c:	lock cld 
  423e2e:	sbb    esi,DWORD PTR [edi-0x1737ac16]
  423e34:	imul   edx,DWORD PTR [ecx+0x29],0xffffff8a
  423e38:	sbb    cl,BYTE PTR [ebp-0x50]
  423e3b:	dec    esp
  423e3c:	shl    dh,1
  423e3e:	xchg   esp,eax
  423e3f:	lea    esi,[esi+0x1ad0ea39]
  423e45:	xchg   ecx,eax
  423e46:	cmp    cl,BYTE PTR [esi]
  423e48:	xchg   BYTE PTR [esi],dl
  423e4a:	int    0x85
  423e4c:	sub    BYTE PTR [edi],al
  423e4e:	out    0x39,eax
  423e50:	add    bl,BYTE PTR [esi]
  423e52:	pop    ecx
  423e53:	pop    eax
  423e54:	jmp    0x536d:0x987c46e
  423e5b:	das    
  423e5c:	ins    DWORD PTR es:[edi],dx
  423e5d:	add    BYTE PTR [edi-0x73],0xe3
  423e61:	adc    ebx,eax
  423e63:	jb     0x423eba
  423e65:	cmp    DWORD PTR [esi+ebp*4-0x24],ebx
  423e69:	add    ebx,edx
  423e6b:	dec    edx
  423e6c:	outs   dx,DWORD PTR ds:[esi]
  423e6d:	push   edx
  423e6e:	cld    
  423e6f:	xor    BYTE PTR [esi+eax*2-0x30],dl
  423e73:	mov    DWORD PTR [ebp+0x74389980],edx
  423e79:	test   BYTE PTR [edx+0x4a80df81],cl
  423e7f:	sub    BYTE PTR [esi-0x65002b49],bl
  423e85:	jecxz  0x423e5d
  423e87:	stos   BYTE PTR es:[edi],al
  423e88:	or     al,0x61
  423e8a:	out    0xe8,eax
  423e8c:	sbb    BYTE PTR [ebx+edx*8+0x3df267d9],0x87
  423e94:	in     eax,dx
  423e95:	repnz xor BYTE PTR [ecx-0x25],0x1c
  423e9a:	mov    ch,0x89
  423e9c:	add    bh,BYTE PTR [eax-0xe]
  423e9f:	leave  
  423ea0:	pop    ecx
  423ea1:	mov    bl,0x11
  423ea3:	or     DWORD PTR [esi+esi*4-0x8],ebp
  423ea7:	push   ecx
  423ea8:	iret   
  423ea9:	je     0x423e81
  423eab:	add    ch,al
  423ead:	push   ecx
  423eae:	push   cs
  423eaf:	or     ah,BYTE PTR [ebx+edi*2-0x3b]
  423eb3:	push   edi
  423eb4:	dec    esi
  423eb5:	les    edi,FWORD PTR [ebp-0xa61562b]
  423ebb:	mov    ebp,0x9b37640
  423ec0:	cmp    al,0x70
  423ec2:	inc    ebx
  423ec3:	jbe    0x423ec0
  423ec5:	adc    al,0x5c
  423ec7:	hlt    
  423ec8:	or     eax,0x52d88242
  423ecd:	add    DWORD PTR [ebp-0x6c824989],0xffffffcc
  423ed4:	push   0xa4a781d
  423ed9:	cwde   
  423eda:	fisub  WORD PTR [edx]
  423edc:	xor    esi,DWORD PTR [edx+0x37]
  423edf:	std    
  423ee0:	jno    0x423ebe
  423ee2:	loopne 0x423f50
  423ee4:	ja     0x423f23
  423ee6:	dec    eax
  423ee7:	aad    0x81
  423ee9:	xchg   DWORD PTR [esi-0x42],edx
  423eec:	mov    dl,0x24
  423eee:	mov    ds:0x1453b7a9,al
  423ef3:	outs   dx,DWORD PTR ds:[esi]
  423ef4:	fwait
  423ef5:	mov    ds:0xd006128,al
  423efa:	pusha  
  423efb:	push   cs
  423efc:	pusha  
  423efd:	cmp    bl,ch
  423eff:	cmp    BYTE PTR [ecx],ch
  423f01:	jp     0x423f11
  423f03:	xor    DWORD PTR [ebp+0xc622102],0xc6e5a528
  423f0d:	inc    edi
  423f0e:	inc    eax
  423f0f:	ret    
  423f10:	jge    0x423e93
  423f12:	sbb    eax,DWORD PTR ss:[ebx]
  423f15:	(bad)  [edi]
  423f17:	ror    BYTE PTR [edi+0x22],0xc8
  423f1b:	push   ecx
  423f1c:	(bad)  
  423f1d:	je     0x423f63
  423f1f:	xchg   ebx,eax
  423f20:	inc    esp
  423f21:	dec    ebx
  423f22:	mov    eax,0x5ca5ecbf
  423f27:	jle    0x423f18
  423f29:	cdq    
  423f2a:	test   eax,0x9bc68f3a
  423f2f:	fcomp  QWORD PTR [edx+0x64]
  423f32:	cmp    DWORD PTR [edx-0x39b18319],ecx
  423f38:	mov    esp,0x188fdf9
  423f3d:	jmp    FWORD PTR [edx]
  423f3f:	cmp    DWORD PTR [eax*8+0x4bf3c666],0xfffffffd
  423f47:	xor    BYTE PTR [eax-0x3f68b7a4],dh
  423f4d:	or     esi,DWORD PTR [ecx]
  423f4f:	ins    BYTE PTR es:[edi],dx
  423f50:	not    DWORD PTR [esi+0x28a3367c]
  423f56:	nop
  423f57:	inc    ecx
  423f58:	or     eax,0x1ba8ad7d
  423f5d:	xlat   BYTE PTR ds:[ebx]
  423f5e:	cmp    al,0xe5
  423f60:	cmp    BYTE PTR ds:0x6f6cec76,bh
  423f66:	lods   al,BYTE PTR ds:[esi]
  423f67:	or     bl,BYTE PTR [ebx+edi*1]
  423f6a:	jns    0x423f08
  423f6c:	inc    ebp
  423f6d:	repz loop 0x423f90
  423f70:	arpl   WORD PTR [esi+0x1d9cd3b0],ax
  423f76:	je     0x423f4c
  423f78:	pop    ebx
  423f79:	xchg   ecx,eax
  423f7a:	xchg   ebx,eax
  423f7b:	pop    ds
  423f7c:	and    dh,BYTE PTR [ebp+0x46]
  423f7f:	shl    al,cl
  423f81:	adc    edx,DWORD PTR [edi+eiz*2+0x3015fa12]
  423f88:	jmp    0x423fb1
  423f8a:	xchg   DWORD PTR [esi],esi
  423f8c:	ja     0x423f59
  423f8e:	test   DWORD PTR [edi],ecx
  423f90:	jo     0x423fc9
  423f92:	shr    BYTE PTR [eax-0x5910da82],1
  423f98:	mov    dl,0xbf
  423f9a:	or     BYTE PTR ds:0x65b8fd3b,ah
  423fa0:	inc    esi
  423fa1:	mov    BYTE PTR [esi],cl
  423fa3:	jae    0x423f2c
  423fa5:	cmp    al,bh
  423fa7:	fs or  BYTE PTR fs:[edi],bh
  423fab:	jbe    0x42401a
  423fad:	xchg   ebx,eax
  423fae:	shl    dh,cl
  423fb0:	mov    ebx,0x73264d9d
  423fb5:	xchg   esi,eax
  423fb6:	mov    ecx,DWORD PTR [edi+0x11b335d1]
  423fbc:	dec    ecx
  423fbd:	scas   al,BYTE PTR es:[edi]
  423fbe:	popf   
  423fbf:	add    ebp,DWORD PTR [edx]
  423fc1:	gs pop ecx
  423fc3:	shr    DWORD PTR [ebp-0x6b],1
  423fc6:	inc    eax
  423fc7:	xchg   esi,eax
  423fc8:	or     eax,0xf8007bc2
  423fcd:	add    dh,ch
  423fcf:	pop    ds
  423fd0:	mov    ecx,0xfb7fd5d8
  423fd5:	popf   
  423fd6:	dec    eax
  423fd7:	setg   BYTE PTR [ecx]
  423fda:	pop    es
  423fdb:	daa    
  423fdc:	retf   0x49e0
  423fdf:	(bad)  
  423fe0:	or     edi,eax
  423fe2:	push   edx
  423fe3:	mov    WORD PTR [ecx+0x5ced8359],fs
  423fe9:	ror    DWORD PTR [ecx-0x12],cl
  423fec:	adc    dh,BYTE PTR [edx+0xc]
  423fef:	pop    ebx
  423ff0:	mov    edx,0x4165676c
  423ff5:	frstor [ecx+0x4]
  423ff8:	(bad)  
  423ff9:	pop    edx
  423ffa:	pop    ebp
  423ffb:	outs   dx,BYTE PTR ds:[esi]
  423ffc:	push   edx
  423ffd:	and    eax,0xbd8614fe
  424002:	stc    
  424003:	mov    ebp,ecx
  424005:	inc    edx
  424006:	inc    ecx
  424007:	aam    0xb5
  424009:	(bad)  
  42400b:	push   ebx
  42400c:	mov    ds:0x1b5690ed,eax
  424011:	push   eax
  424012:	fmul   QWORD PTR [ebp+0xa]
  424015:	js     0x424088
  424017:	mov    ds:0x3e12aee5,al
  42401c:	mov    eax,0xad0a9e2a
  424021:	sub    eax,edx
  424023:	or     eax,0x12b8
	...
  424030:	add    BYTE PTR [eax],al
  424032:	dec    edx
  424033:	xchg   DWORD PTR [edx+0x4c],edx
  424036:	(bad)  
  424038:	pop    esi
  424039:	xchg   eax,esp
  42403b:	js     0x423fbe
  42403d:	mov    ebx,0x37934701
  424042:	jmp    0x2:0xcc0001b1
  424049:	add    BYTE PTR [edx-0x3543343c],dl
  42404f:	stc    
  424050:	fist   WORD PTR [esp+edi*4-0x11]
  424054:	inc    ecx
  424055:	xor    cl,cl
  424057:	cmp    al,0x9b
  424059:	mov    ds:0xa35917e6,al
  42405e:	adc    al,0xe0
  424060:	aaa    
  424061:	lds    edi,FWORD PTR [ebp+0x3fc22312]
  424067:	shl    BYTE PTR [edx],cl
  424069:	dec    eax
  42406a:	jbe    0x423ffc
  42406c:	cmp    eax,ecx
  42406e:	mov    al,0x84
  424070:	fcom   DWORD PTR [ecx*1+0x61eb6540]
  424077:	aad    0x6
  424079:	mov    BYTE PTR [edi+0x5cbd7097],ah
  42407f:	stos   DWORD PTR es:[edi],eax
  424080:	and    BYTE PTR [ecx],ch
  424082:	xor    DWORD PTR [esi],esi
  424084:	sbb    DWORD PTR [ebp+0x5794f475],ecx
  42408a:	fcomp  QWORD PTR [ebx+0x40fc8aa6]
  424090:	xor    BYTE PTR [edx+edi*8],ch
  424093:	fld    TBYTE PTR ds:0x7677c556
  424099:	jns    0x424089
  42409b:	retf   
  42409c:	aam    0x7f
  42409e:	xor    bh,BYTE PTR [edi+ecx*2]
  4240a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a2:	les    edx,FWORD PTR [esi+0x18bd6b8a]
  4240a8:	mov    BYTE PTR [edi],ch
  4240aa:	addr16 push esi
  4240ac:	aaa    
  4240ad:	aam    0xdb
  4240af:	sub    ebp,ebx
  4240b1:	mov    ss,WORD PTR [edi]
  4240b3:	pop    edi
  4240b4:	stc    
  4240b5:	cli    
  4240b6:	inc    edi
  4240b7:	test   DWORD PTR [eax-0x2],ebp
  4240ba:	xchg   esi,eax
  4240bb:	stos   DWORD PTR es:[edi],eax
  4240bc:	push   0xf6f44afb
  4240c1:	mov    ds:0xef38e8e7,al
  4240c6:	sbb    eax,0xd2ba8b50
  4240cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240cc:	mov    ebp,0x11090e07
  4240d1:	jns    0x42409b
  4240d3:	mov    bl,0x52
  4240d5:	push   es
  4240d6:	jl     0x42410a
  4240d8:	imul   edi,DWORD PTR [ecx+0x5d],0x1ffa652c
  4240df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e0:	xchg   esi,eax
  4240e1:	sbb    al,0xf1
  4240e3:	adc    DWORD PTR [eax],ebp
  4240e5:	or     ebp,ebp
  4240e7:	mov    dl,0x7
  4240e9:	clc    
  4240ea:	imul   dh
  4240ec:	retf   0xf0c2
  4240ef:	loope  0x424163
  4240f1:	jmp    0x1914:0x647c1cd2
  4240f8:	mov    WORD PTR [esi-0x35bb837b],?
  4240fe:	adc    dl,BYTE PTR [edi]
  424100:	push   ebp
  424101:	pop    ecx
  424102:	sub    al,0x24
  424104:	sar    DWORD PTR [edx+0x5d],cl
  424107:	mov    al,0xb4
  424109:	xor    BYTE PTR [eax-0x695edbb],dl
  42410f:	aad    0x38
  424111:	(bad)  [eax-0x7a9dc781]
  424117:	mov    ch,0xd8
  424119:	lahf   
  42411a:	fidiv  DWORD PTR [eax+eax*4]
  42411d:	cwde   
  42411e:	sub    BYTE PTR [edx-0x64],bh
  424121:	jne    0x424169
  424123:	pop    eax
  424124:	mov    bl,0x56
  424126:	cli    
  424127:	cdq    
  424128:	mov    cl,0x5c
  42412a:	and    eax,0xe4331154
  42412f:	inc    eax
  424130:	mov    ebp,DWORD PTR [esp+eiz*8-0x21293692]
  424137:	(bad)  
  424138:	xlat   BYTE PTR ds:[ebx]
  424139:	out    0x43,al
  42413b:	push   ecx
  42413c:	mov    ah,0x68
  42413e:	cmp    dl,0xea
  424141:	mov    edx,0xc40c6642
  424146:	push   0x9a9b012c
  42414b:	inc    ebp
  42414c:	int3   
  42414d:	fstp   st(1)
  42414f:	iret   
  424150:	push   cs
  424151:	mov    bl,0x27
  424153:	rcl    edx,0xde
  424156:	sub    eax,0x7d54eb4e
  42415b:	inc    esp
  42415c:	les    edi,FWORD PTR [ebp+eiz*1+0x45]
  424160:	inc    esi
  424161:	adc    al,0x9a
  424163:	das    
  424164:	imul   esp,DWORD PTR [edi-0x4d],0x16
  424168:	inc    ebx
  424169:	aaa    
  42416a:	jae    0x42414b
  42416c:	sti    
  42416d:	inc    edx
  42416e:	bound  edi,QWORD PTR [edi-0x54]
  424171:	in     al,0x0
  424173:	dec    edi
  424174:	dec    eax
  424175:	or     DWORD PTR [edi],esi
  424177:	sub    BYTE PTR [eax+ecx*8-0x5a96a71d],bl
  42417e:	mov    ds:0x8f6fc44a,al
  424183:	je     0x424135
  424185:	inc    edx
  424186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424187:	cmc    
  424188:	or     ebx,esp
  42418a:	pusha  
  42418b:	rcr    DWORD PTR [esi+edx*8],1
  42418e:	in     al,dx
  42418f:	mov    dl,0x34
  424191:	ret    
  424192:	adc    bl,BYTE PTR [edx]
  424194:	inc    eax
  424195:	imul   esp,DWORD PTR [eax-0x24d66987],0x9c590829
  42419f:	in     eax,0xca
  4241a1:	mov    edi,0x3b3c52c2
  4241a6:	sahf   
  4241a7:	imul   ecx,DWORD PTR [ecx],0x2d7a5109
  4241ad:	dec    esp
  4241ae:	and    BYTE PTR [ecx+0x70],bh
  4241b1:	popf   
  4241b2:	loopne 0x424221
  4241b4:	fdivr  DWORD PTR [esi-0x39]
  4241b7:	fstp   QWORD PTR [ebx+0x64e17cb]
  4241bd:	push   esi
  4241be:	test   ecx,0xdf892048
  4241c4:	leave  
  4241c5:	add    al,0x45
  4241c7:	push   0x36fb9a1e
  4241cc:	or     al,cl
  4241ce:	push   ebp
  4241cf:	mov    eax,esi
  4241d1:	loopne 0x4241b8
  4241d3:	jmp    0x6c5d39fe
  4241d8:	mov    ebx,0x545cb0de
  4241dd:	sub    BYTE PTR [ebp+0x1c9c53b0],ah
  4241e3:	xor    dh,ch
  4241e5:	push   edx
  4241e6:	shl    bh,1
  4241e8:	imul   ebp,eax,0xffffff8b
  4241eb:	push   eax
  4241ec:	fs (bad) 
  4241ee:	in     eax,0xf9
  4241f0:	js     0x424197
  4241f2:	bound  edi,QWORD PTR [esi+0x735f0f16]
  4241f8:	ja     0x4241d5
  4241fa:	mov    esi,DWORD PTR [ebx+0x506a0059]
  424200:	jle    0x424207
  424202:	xchg   ebp,eax
  424203:	jmp    0xbdde:0xe9b9f577
  42420a:	lods   al,BYTE PTR ds:[esi]
  42420b:	stos   DWORD PTR es:[edi],eax
  42420c:	outs   dx,DWORD PTR ds:[esi]
  42420d:	int3   
  42420e:	inc    edi
  42420f:	outs   dx,DWORD PTR ds:[esi]
  424210:	dec    edi
  424211:	aaa    
  424212:	mov    esi,0xaf3b1aa3
  424217:	arpl   WORD PTR [edi-0x37],ax
  42421a:	or     ah,BYTE PTR ds:0x27d7889b
  424220:	(bad)  
  424221:	xor    DWORD PTR ds:0xf8a8cef9,ebp
  424227:	inc    ecx
  424228:	mov    al,ds:0xb94f652b
  42422d:	jnp    0x4241f6
  42422f:	fs xchg ecx,eax
  424231:	mov    BYTE PTR [ebp+ecx*8+0x3e],bh
  424235:	push   es
  424236:	mov    ebp,0xd0af8ec5
  42423b:	popa   
  42423c:	sar    BYTE PTR [ecx+0x35474aa0],0x26
  424243:	inc    ebp
  424244:	jecxz  0x4241d7
  424246:	dec    eax
  424247:	dec    esp
  424248:	pop    ecx
  424249:	mov    fs,WORD PTR [eax-0x25b8106c]
  42424f:	jno    0x424249
  424251:	xchg   BYTE PTR [edx-0x73],dh
  424254:	xor    BYTE PTR [esi-0x1a189838],ch
  42425a:	in     al,dx
  42425b:	dec    esi
  42425c:	es nop
  42425e:	mov    ds:0x2cee996c,eax
  424263:	mov    WORD PTR [ecx],ds
  424265:	add    edi,DWORD PTR [esi]
  424267:	mov    ah,0xd2
  424269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42426a:	mov    eax,edi
  42426c:	xlat   BYTE PTR ds:[ebx]
  42426d:	sub    al,0x90
  42426f:	jae    0x424226
  424271:	cmp    DWORD PTR [ecx-0x6afc0ede],esi
  424277:	dec    edx
  424278:	je     0x4242a3
  42427a:	jmp    0x7e1e:0x3f65a81e
  424281:	dec    ebx
  424282:	ror    DWORD PTR [ecx],0xfa
  424285:	mov    ch,0x27
  424287:	ins    DWORD PTR es:[edi],dx
  424288:	inc    eax
  424289:	lahf   
  42428a:	lea    ecx,[eax-0x164b3205]
  424290:	je     0x424272
  424292:	xchg   BYTE PTR [eax-0xb],dl
  424295:	mov    WORD PTR [esi-0x6f443782],?
  42429b:	aaa    
  42429c:	or     al,0x67
  42429e:	test   eax,0xde06e1e6
  4242a3:	xchg   esp,eax
  4242a4:	aaa    
  4242a5:	mov    dh,0xe5
  4242a7:	jns    0x42422a
  4242a9:	lods   al,BYTE PTR ds:[esi]
  4242aa:	xchg   esp,ecx
  4242ac:	and    DWORD PTR [edi+0x6e],ecx
  4242af:	mov    al,0x71
  4242b1:	cwde   
  4242b2:	add    cl,dh
  4242b4:	push   0xbf89978
  4242b9:	lea    eax,[ebp-0x40]
  4242bc:	push   esp
  4242bd:	mov    cl,0x90
  4242bf:	pusha  
  4242c0:	push   esi
  4242c1:	into   
  4242c2:	outs   dx,DWORD PTR ds:[esi]
  4242c3:	xchg   ebp,eax
  4242c4:	inc    edi
  4242c5:	mov    esi,0x3a225bc5
  4242ca:	jg     0x4242bc
  4242cc:	cs push 0x54
  4242cf:	inc    edx
  4242d0:	mov    WORD PTR [eax+0x3b],?
  4242d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d4:	pop    ds
  4242d5:	ror    DWORD PTR [ecx+eax*8-0xd],1
  4242d9:	add    BYTE PTR [eax+0x5eb6f650],dl
  4242df:	pop    edx
  4242e0:	scas   al,BYTE PTR es:[edi]
  4242e1:	or     cl,BYTE PTR [eax-0x63]
  4242e4:	imul   eax,DWORD PTR [edx-0x71],0xe54fbd22
  4242eb:	mov    eax,ds:0xad5437b4
  4242f0:	mov    ecx,0x5676b415
  4242f5:	pusha  
  4242f6:	aas    
  4242f7:	rep stos BYTE PTR es:[edi],al
  4242f9:	scas   eax,DWORD PTR es:[edi]
  4242fa:	jmp    0xfea28a66
  4242ff:	ret    
  424300:	push   ss
  424301:	div    DWORD PTR [esi]
  424303:	mov    esi,0xd3cf8f4a
  424308:	adc    eax,0xcdaaacc
  42430d:	iret   
  42430e:	(bad)  
  424310:	stos   BYTE PTR es:[edi],al
  424311:	sbb    al,0xbb
  424313:	sahf   
  424314:	stos   DWORD PTR es:[edi],eax
  424315:	xor    al,0x0
	...
  42431f:	add    BYTE PTR [eax],al
  424321:	add    BYTE PTR [edx],cl
  424323:	xchg   edx,eax
  424324:	jl     0x42435f
  424326:	cld    
  424327:	dec    DWORD PTR [edi-0x4d]
  42432a:	in     al,dx
  42432b:	jo     0x4242e4
  42432d:	lea    ecx,[esi+ebx*8]
  424330:	pop    ebx
  424331:	loop   0x4242e9
  424333:	mov    ah,0x1
  424335:	add    ah,cl
  424337:	add    al,BYTE PTR [eax]
  424339:	add    BYTE PTR [edi],bh
  42433b:	mov    ebp,0x83f081a8
  424340:	jnp    0x4242cc
  424342:	push   ebx
  424343:	sub    eax,0x4e96a285
  424348:	jo     0x424333
  42434a:	ins    DWORD PTR es:[edi],dx
  42434b:	dec    esi
  42434c:	mov    ds:0x1134f856,eax
  424351:	mov    WORD PTR [esi],ss
  424353:	dec    esi
  424354:	xchg   edi,eax
  424355:	inc    ebx
  424356:	bound  edi,QWORD PTR [ecx+edi*2+0x69]
  42435a:	mov    ebp,0x5d56a72d
  42435f:	add    esi,DWORD PTR [esi]
  424361:	je     0x4243d0
  424363:	ret    
  424364:	arpl   WORD PTR [esi],ax
  424366:	imul   esp,DWORD PTR [edi+0x21],0x49
  42436a:	xchg   ebx,eax
  42436b:	dec    ch
  42436d:	out    dx,al
  42436e:	push   0xd0df45bf
  424373:	adc    eax,0xae039338
  424378:	ins    DWORD PTR es:[edi],dx
  424379:	and    al,0xf7
  42437b:	sub    eax,0x12397d92
  424380:	(bad)
  424384:	and    BYTE PTR [esi-0x6edf178b],ah
  42438a:	(bad)
  42438d:	in     eax,dx
  42438e:	ret    0xa7c4
  424391:	mov    ebp,0xc2d1f04e
  424396:	(bad)  
  424397:	push   esp
  424398:	mov    DWORD PTR ds:0x42bbeb65,0xe3070924
  4243a2:	hlt    
  4243a3:	inc    esi
  4243a4:	sbb    DWORD PTR [eax],esp
  4243a6:	ss icebp 
  4243a8:	jmp    0x8bf5:0x646594d9
  4243af:	rcr    BYTE PTR [ecx-0x1c],1
  4243b2:	cmp    eax,eax
  4243b4:	scas   al,BYTE PTR es:[edi]
  4243b5:	int    0x24
  4243b7:	into   
  4243b8:	fbstp  TBYTE PTR ds:0x334891bf
  4243be:	fwait
  4243bf:	or     bh,BYTE PTR [ebp+0x33]
  4243c2:	sub    eax,0xa9f5a557
  4243c7:	ja     0x4243e2
  4243c9:	dec    ecx
  4243ca:	cmp    eax,0x3c522ce
  4243cf:	in     al,dx
  4243d0:	add    BYTE PTR [esi+0x42],ah
  4243d3:	xor    esi,DWORD PTR [ecx+0x16]
  4243d6:	clc    
  4243d7:	cld    
  4243d8:	add    al,0x18
  4243da:	sbb    DWORD PTR [ecx+0x6b],ebx
  4243dd:	ins    BYTE PTR es:[edi],dx
  4243de:	push   ds
  4243df:	enter  0x9a6e,0xd
  4243e3:	outs   dx,BYTE PTR ds:[esi]
  4243e4:	or     al,0x46
  4243e6:	inc    ebx
  4243e7:	test   BYTE PTR [eax-0x53],0x23
  4243eb:	mov    al,0x54
  4243ed:	mov    bl,0xf5
  4243ef:	inc    edx
  4243f0:	pop    ecx
  4243f1:	ret    0x3d99
  4243f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243f5:	cld    
  4243f6:	xchg   BYTE PTR [eax+eax*1+0x367b1140],bl
  4243fd:	test   al,ah
  4243ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424400:	call   DWORD PTR [ebp+0x3248e988]
  424406:	(bad)  
  424407:	and    DWORD PTR [ebx-0x42758330],esi
  42440d:	retf   0xacdd
  424410:	imul   edx,DWORD PTR [edi],0xffffffb3
  424413:	mov    al,0xc4
  424415:	mov    ebp,0x396824c1
  42441a:	cwde   
  42441b:	jnp    0x4243cd
  42441d:	push   ecx
  42441e:	mov    ah,0x28
  424420:	xchg   ebp,eax
  424421:	sub    ah,ah
  424423:	cmp    al,ah
  424425:	shl    BYTE PTR [edi-0x33627ac],1
  42442b:	shr    DWORD PTR [esi],cl
  42442d:	jae    0x4244a6
  42442f:	push   cs
  424430:	mov    BYTE PTR [ebx-0x17],bl
  424433:	and    BYTE PTR [esi-0x1b],cl
  424436:	push   es
  424437:	mov    bh,0xbd
  424439:	and    BYTE PTR [eax],bh
  42443b:	pop    ebp
  42443c:	jns    0x42443f
  42443e:	nop
  42443f:	loopne 0x42440c
  424441:	push   edx
  424442:	cmp    BYTE PTR [edx],ch
  424444:	fs jb  0x4243c8
  424447:	dec    eax
  424448:	dec    ecx
  424449:	out    0x1c,eax
  42444b:	push   es
  42444c:	sbb    DWORD PTR [ebx],edi
  42444e:	in     eax,dx
  42444f:	popa   
  424450:	jns    0x4243d8
  424452:	(bad)  
  424453:	aam    0x9b
  424455:	pop    ebx
  424456:	jmp    0x42449d
  424458:	jnp    0x424401
  42445a:	ds test eax,0x21674982
  424460:	ficom  WORD PTR [ebx]
  424462:	(bad)  [ebx-0x762a2e98]
  424468:	ins    DWORD PTR es:[edi],dx
  424469:	pop    ebx
  42446a:	sbb    BYTE PTR [ebp+0x38],cl
  42446d:	mov    dl,0xd0
  42446f:	xchg   ebp,eax
  424470:	fild   WORD PTR [esi]
  424472:	add    DWORD PTR [edi],ecx
  424474:	sbb    BYTE PTR ds:0x836f2753,0x38
  42447b:	(bad)  
  42447d:	sbb    al,0xee
  42447f:	dec    edx
  424480:	and    eax,0xe8f3afb8
  424485:	imul   edi,DWORD PTR [ebx-0xe],0x45153524
  42448c:	mov    bl,0xc6
  42448e:	ins    BYTE PTR es:[edi],dx
  42448f:	pop    ebx
  424490:	daa    
  424491:	adc    eax,0x25dc5dbb
  424496:	xor    DWORD PTR [edx-0x7f],eax
  424499:	xchg   ebp,eax
  42449a:	lds    esp,FWORD PTR [eax+0x2bc19ca5]
  4244a0:	outs   dx,BYTE PTR ds:[esi]
  4244a1:	push   es
  4244a2:	out    dx,eax
  4244a3:	inc    ebp
  4244a4:	not    BYTE PTR [edx-0x22]
  4244a7:	cmp    cl,dh
  4244a9:	retf   
  4244aa:	adc    BYTE PTR [edi+0x6f],dl
  4244ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244ae:	dec    eax
  4244af:	inc    ebp
  4244b0:	(bad)  
  4244b1:	es mov edi,0x90d7ead0
  4244b7:	sti    
  4244b8:	mov    DWORD PTR [ebx+0x7],ecx
  4244bb:	lods   al,BYTE PTR ds:[esi]
  4244bc:	mov    edx,0xa2e02e9c
  4244c1:	popa   
  4244c2:	ficomp DWORD PTR [ebp+0x2caeedee]
  4244c8:	mov    cl,0x59
  4244ca:	lahf   
  4244cb:	dec    esi
  4244cc:	add    DWORD PTR [esi+0x40062127],0xffffffdd
  4244d3:	mov    cl,0xbc
  4244d5:	test   DWORD PTR [eax],edi
  4244d7:	pop    edi
  4244d8:	pop    edx
  4244d9:	pop    es
  4244da:	test   DWORD PTR [edx],esp
  4244dc:	lods   al,BYTE PTR ds:[esi]
  4244dd:	adc    eax,0x3f3fdf27
  4244e2:	cmp    DWORD PTR [esp+edx*8],0xe431b769
  4244e9:	mov    dl,0x61
  4244eb:	xor    DWORD PTR [esp+ecx*8],ecx
  4244ee:	fwait
  4244ef:	outs   dx,DWORD PTR ds:[esi]
  4244f0:	jg     0x4244fb
  4244f2:	mov    esp,0xbc4d428b
  4244f7:	and    BYTE PTR [esi+0x1f0cff8c],ch
  4244fd:	jl     0x4244d6
  4244ff:	dec    ecx
  424500:	push   ss
  424501:	stc    
  424502:	addr16 mov eax,ds:0x69d8
  424506:	shr    bh,1
  424508:	out    dx,eax
  424509:	cmc    
  42450a:	add    eax,0xf0121a2a
  42450f:	loopne 0x424580
  424511:	test   ebx,0x4a792470
  424517:	add    BYTE PTR [ebx-0x6604769d],0xab
  42451e:	call   0x8f63:0x8ade289e
  424525:	jge    0x424584
  424527:	test   eax,0x874b45da
  42452c:	(bad)  
  42452d:	mov    ecx,0x6995243a
  424532:	daa    
  424533:	jae    0x42450c
  424535:	or     esp,ecx
  424537:	xlat   BYTE PTR ds:[ebx]
  424538:	lods   al,BYTE PTR ds:[esi]
  424539:	jg     0x4244dc
  42453b:	int3   
  42453c:	pop    ss
  42453d:	lea    ebp,ds:0xef5f4f7b
  424543:	scas   eax,DWORD PTR es:[edi]
  424544:	mov    cl,0xe3
  424546:	sbb    esp,DWORD PTR [eax+0x6c19e398]
  42454c:	inc    edx
  42454d:	mov    ebx,0x68d3b835
  424552:	cmp    al,0xba
  424554:	ret    
  424555:	adc    cl,BYTE PTR [eax-0x43]
  424558:	mov    eax,0x7d8721c2
  42455d:	mov    DWORD PTR [eax],esp
  42455f:	mov    dl,0xd1
  424561:	jl     0x424583
  424563:	pop    edi
  424564:	rol    edx,cl
  424566:	jne    0x4245cb
  424568:	push   cs
  424569:	mov    cl,0x50
  42456b:	inc    esp
  42456c:	js     0x4244f0
  42456e:	test   BYTE PTR [esi+0x2d],ah
  424571:	xor    eax,0x50e57c2b
  424576:	fs std 
  424578:	cmp    al,0x76
  42457a:	scas   al,BYTE PTR es:[edi]
  42457b:	push   0xb5d0f6a
  424580:	in     eax,0xfa
  424582:	ffree  st(7)
  424584:	mov    WORD PTR [edx-0x1620a251],cs
  42458a:	push   esi
  42458b:	mov    ah,0xb3
  42458d:	jno    0x424541
  42458f:	das    
  424590:	add    al,0xd7
  424592:	xchg   esp,eax
  424593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424594:	leave  
  424595:	loopne 0x42456a
  424597:	dec    esi
  424598:	push   esi
  424599:	jno    0x424569
  42459b:	pop    ds
  42459c:	fsub   DWORD PTR [esi+0x21]
  42459f:	or     BYTE PTR [edx+0x13],bh
  4245a2:	out    0x2,al
  4245a4:	(bad)  
  4245a6:	mov    al,ds:0x91cce36c
  4245ab:	cdq    
  4245ac:	cdq    
  4245ad:	or     al,ah
  4245af:	sbb    DWORD PTR [eax-0x40233b77],esp
  4245b5:	or     BYTE PTR [eax-0x3a],bl
  4245b8:	xor    al,0x39
  4245ba:	bound  esp,QWORD PTR [ecx+0x3570a4f9]
  4245c0:	mov    BYTE PTR [edi+0x44],ch
  4245c3:	adc    DWORD PTR [ebx-0x8],ebx
  4245c6:	stos   DWORD PTR es:[edi],eax
  4245c7:	(bad)  [edx+0x585addce]
  4245cd:	shl    dh,cl
  4245cf:	in     al,0x41
  4245d1:	xchg   edx,eax
  4245d2:	(bad)  
  4245d3:	xchg   esi,eax
  4245d4:	mov    ecx,edi
  4245d6:	lahf   
  4245d7:	bnd jbe 0x4245e4
  4245da:	nop
  4245db:	call   0x7de58496
  4245e0:	push   esp
  4245e1:	lahf   
  4245e2:	loope  0x424631
  4245e4:	loop   0x4245cc
  4245e6:	add    DWORD PTR [ebx+eiz*8],edi
  4245e9:	inc    edi
  4245ea:	nop
  4245eb:	outs   dx,BYTE PTR ds:[esi]
  4245ec:	fld    TBYTE PTR [edi]
  4245ee:	lods   al,BYTE PTR ds:[esi]
  4245ef:	push   cs
  4245f0:	lds    esp,FWORD PTR [edx+0x76]
  4245f3:	aad    0xf1
  4245f5:	icebp  
  4245f6:	shr    BYTE PTR [ebx-0x7b5ae109],cl
  4245fc:	ret    0xa33a
  4245ff:	pop    esi
  424600:	fprem1 
  424602:	xchg   edi,eax
  424603:	dec    esp
  424604:	inc    edi
  424605:	loopne 0x424607
	...
  42460f:	add    BYTE PTR [eax],al
  424611:	add    bl,al
  424613:	and    ecx,edx
  424615:	dec    eax
  424616:	repz clc 
  424618:	fld    TBYTE PTR [ebx+0x202892a0]
  42461e:	adc    BYTE PTR [esi],bl
  424620:	popf   
  424621:	clc    
  424622:	xor    BYTE PTR [edi+0x2cc0001],0x0
  424629:	add    BYTE PTR [edx],dl
  42462b:	test   eax,0x6a2fe649
  424630:	cwde   
  424631:	lea    esp,[ebx+0x306eba09]
  424637:	add    esi,DWORD PTR [ecx]
  424639:	sub    edi,DWORD PTR [edx]
  42463b:	cs std 
  42463d:	adc    al,0xaf
  42463f:	pop    es
  424640:	outs   dx,DWORD PTR ds:[esi]
  424641:	sub    ecx,DWORD PTR [ecx+0x31cb462e]
  424647:	adc    eax,0x7ff1c272
  42464c:	in     eax,dx
  42464d:	scas   al,BYTE PTR es:[edi]
  42464e:	es mov esi,0xaadeb31e
  424654:	mov    edx,DWORD PTR [edi-0x35]
  424657:	jnp    0x42465b
  424659:	xchg   edx,eax
  42465a:	push   es
  42465b:	and    dh,cl
  42465d:	push   esi
  42465e:	(bad)  
  42465f:	fsubr  st(6),st
  424661:	inc    ebx
  424662:	retf   
  424663:	or     eax,DWORD PTR [esp+ecx*1-0x5c87bb7e]
  42466a:	xor    ch,dl
  42466c:	or     ah,BYTE PTR [esi]
  42466e:	jg     0x4246b7
  424670:	sub    esp,DWORD PTR [edx]
  424672:	xchg   ecx,eax
  424673:	mov    ah,BYTE PTR ds:0x31f46bb0
  424679:	xor    eax,0x6dd8a2a3
  42467e:	add    al,0xb4
  424680:	xchg   edi,eax
  424681:	and    eax,0xa0d4522b
  424686:	cwde   
  424687:	mov    edx,0x7531a5a8
  42468c:	rcr    BYTE PTR [edx],1
  42468e:	fistp  QWORD PTR [esi-0x1cc518a0]
  424694:	ret    
  424695:	aam    0x4f
  424697:	aas    
  424698:	xchg   BYTE PTR cs:[edx],al
  42469b:	ret    0x7a0c
  42469e:	lods   eax,DWORD PTR ds:[esi]
  42469f:	push   0xe7e47b90
  4246a4:	sbb    ch,BYTE PTR [esi+0x3]
  4246a7:	sub    DWORD PTR [ecx],ebx
  4246a9:	ror    DWORD PTR [ecx+0x56dc102e],0x9e
  4246b0:	adc    bh,BYTE PTR [eax-0x71c13f0d]
  4246b6:	dec    ecx
  4246b7:	outs   dx,DWORD PTR ds:[esi]
  4246b8:	out    0x32,al
  4246ba:	sti    
  4246bb:	ins    DWORD PTR es:[edi],dx
  4246bc:	adc    BYTE PTR [esi],cl
  4246be:	push   ds
  4246bf:	aad    0xe7
  4246c1:	das    
  4246c2:	push   ebp
  4246c3:	daa    
  4246c4:	aas    
  4246c5:	xchg   edi,eax
  4246c6:	ss aas 
  4246c8:	xchg   edx,eax
  4246c9:	xor    ebx,DWORD PTR [ebx+esi*4]
  4246cc:	dec    esp
  4246cd:	aam    0xff
  4246cf:	fild   DWORD PTR [ebx+esi*8]
  4246d2:	lea    esp,[esi-0x24bacafb]
  4246d8:	xor    ah,BYTE PTR [edi-0x50]
  4246db:	push   ss
  4246dc:	push   es
  4246dd:	in     ax,0x13
  4246e0:	mov    ebx,0xf2956c75
  4246e5:	dec    edx
  4246e6:	inc    esi
  4246e7:	bound  ecx,QWORD PTR [edx]
  4246e9:	stc    
  4246ea:	mov    gs,WORD PTR [ebp-0xe0453ef]
  4246f0:	cmp    BYTE PTR [ebx-0x4bb26504],bl
  4246f6:	dec    edi
  4246f7:	inc    esp
  4246f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f9:	jne    0x4246df
  4246fb:	jmp    0x9cc0f965
  424700:	test   ebx,esi
  424702:	mov    ebp,ebp
  424704:	sbb    ah,ch
  424706:	je     0x4246de
  424708:	adc    ch,0xc4
  42470b:	bound  ebx,QWORD PTR [ebp-0x28]
  42470e:	sub    bl,BYTE PTR [ebx+eiz*8+0x30dcc066]
  424715:	(bad)  
  424716:	push   ebp
  424717:	push   edx
  424718:	jmp    0x4246c0
  42471a:	cdq    
  42471b:	int    0x45
  42471d:	ret    0x773f
  424720:	push   edi
  424721:	xchg   DWORD PTR [ebx+0x5bcd14d],eax
  424727:	clc    
  424728:	jnp    0x4246d6
  42472a:	and    al,0xc9
  42472c:	add    eax,0xba9e532f
  424731:	or     BYTE PTR [ecx],bl
  424733:	mov    al,ds:0xad57fd99
  424738:	add    DWORD PTR [ebx],0x7a
  42473b:	jnp    0x4247ba
  42473d:	or     BYTE PTR [edx+0x18f73268],al
  424743:	fisttp WORD PTR [edx]
  424745:	cmp    bl,BYTE PTR [edx-0x78]
  424748:	test   al,0x4d
  42474a:	adc    DWORD PTR [ebx-0x45fa5108],ebx
  424750:	jle    0x424750
  424752:	mov    edi,0xc71340b1
  424757:	es push edx
  424759:	mov    ah,BYTE PTR [edi]
  42475b:	mov    BYTE PTR ds:0xaa3212b1,ah
  424761:	xchg   edi,eax
  424762:	sub    dl,BYTE PTR [ebx-0x6b9f01fb]
  424768:	pop    ecx
  424769:	sbb    BYTE PTR [edi],bh
  42476b:	xchg   edi,eax
  42476c:	scas   eax,DWORD PTR es:[edi]
  42476d:	adc    al,0x37
  42476f:	xchg   BYTE PTR [ecx],dl
  424771:	lods   al,BYTE PTR ds:[esi]
  424773:	xlat   BYTE PTR ds:[ebx]
  424774:	or     al,0xed
  424776:	div    DWORD PTR [esi+eiz*2]
  424779:	adc    esp,DWORD PTR [edx]
  42477b:	add    BYTE PTR [ebx+0x25],bl
  42477e:	mov    edi,0xdb76a73b
  424783:	loope  0x42477c
  424785:	dec    esp
  424786:	out    0xb4,eax
  424788:	enter  0xd3fd,0x2d
  42478c:	xor    DWORD PTR [esi-0x29],eax
  42478f:	mov    ds:0x7ba637a1,ax
  424795:	xchg   ebp,eax
  424796:	out    0x98,al
  424798:	pop    esp
  424799:	sub    BYTE PTR [edi+0x2608270f],bh
  42479f:	shld   DWORD PTR [ecx+0x1d],edi,cl
  4247a3:	or     DWORD PTR [edx+0x1a],ebx
  4247a6:	cmp    dh,BYTE PTR [ebp+0x6c958663]
  4247ac:	cmp    DWORD PTR [eax+0x15],ebp
  4247af:	xchg   edi,eax
  4247b0:	in     al,dx
  4247b1:	sbb    al,0xf6
  4247b3:	int3   
  4247b4:	in     eax,dx
  4247b5:	or     al,0x72
  4247b7:	inc    ecx
  4247b8:	popf   
  4247b9:	repz clc 
  4247bb:	(bad)  
  4247bc:	sub    al,0xd3
  4247be:	int3   
  4247bf:	pop    eax
  4247c0:	ffree  st(4)
  4247c2:	mov    dh,0x9e
  4247c4:	test   eax,0x843acc5
  4247c9:	stos   BYTE PTR es:[edi],al
  4247ca:	pop    ebx
  4247cb:	scas   eax,DWORD PTR es:[edi]
  4247cc:	daa    
  4247cd:	mov    WORD PTR [ecx+0x11],gs
  4247d0:	push   esi
  4247d1:	mov    ebx,0xe6ed5e2c
  4247d6:	sbb    eax,0x32279a88
  4247db:	sbb    BYTE PTR [ebx],dl
  4247dd:	mov    ds:0x9f5a7712,al
  4247e2:	push   ebx
  4247e3:	repz or edx,ebx
  4247e6:	test   al,0xb0
  4247e8:	push   ebx
  4247e9:	lods   al,BYTE PTR ds:[esi]
  4247ea:	aas    
  4247eb:	mov    bl,0x32
  4247ed:	inc    ebx
  4247ee:	jnp    0x424861
  4247f0:	sbb    DWORD PTR [edx],edi
  4247f2:	jns    0x424822
  4247f4:	int3   
  4247f5:	loop   0x42479e
  4247f7:	aam    0x7d
  4247f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247fa:	cmp    BYTE PTR [edx+0x38],dh
  4247fd:	outs   dx,BYTE PTR ds:[esi]
  4247fe:	hlt    
  4247ff:	jmp    DWORD PTR [esi]
  424801:	dec    eax
  424802:	je     0x42483d
  424804:	mov    edx,0x86f3f23e
  424809:	imul   esp,ebx,0x18bb183e
  42480f:	mov    cl,0x51
  424811:	in     eax,0xe9
  424813:	call   0x51ca:0x77a88265
  42481a:	push   esi
  42481b:	pop    edi
  42481c:	and    DWORD PTR [edx+0x7fe6bb25],0x9c17f9da
  424826:	mov    ah,0x52
  424828:	mov    ds,WORD PTR [ebx+esi*4-0x25]
  42482c:	int    0x84
  42482e:	ror    DWORD PTR [esi+ebx*4],0x4d
  424832:	outs   dx,BYTE PTR ds:[esi]
  424833:	pushf  
  424834:	stc    
  424835:	fadd   st(3),st
  424837:	fmulp  st(0),st
  424839:	das    
  42483a:	dec    ecx
  42483b:	int    0x3a
  42483d:	pop    edx
  42483e:	loope  0x42485c
  424840:	es push ecx
  424842:	mov    ebx,0x9b23f3d3
  424847:	cmp    bh,BYTE PTR [edx+0x49d897d2]
  42484d:	cmp    ch,BYTE PTR [eax+0x73]
  424850:	ss xchg ebp,eax
  424852:	ror    DWORD PTR [ecx+0x16d161b3],cl
  424858:	push   ebx
  424859:	xchg   eax,edi
  42485b:	push   0xd3744f11
  424860:	fcmovb st,st(4)
  424862:	sub    BYTE PTR [esi+0x69a8910f],ah
  424868:	xor    eax,0x2a0fd20c
  42486d:	cdq    
  42486e:	leave  
  42486f:	or     ch,BYTE PTR [edi+0xa719ec4]
  424875:	push   ebp
  424876:	ret    
  424877:	shl    BYTE PTR [ebx+0x6c229db1],1
  42487d:	push   cs
  42487e:	push   0x17940cae
  424883:	adc    BYTE PTR [ebx+eiz*1-0x62c325a2],ch
  42488a:	out    0x38,al
  42488c:	pop    ds
  42488d:	je     0x424835
  42488f:	je     0x4248eb
  424891:	ins    BYTE PTR es:[edi],dx
  424892:	(bad)  
  424893:	xor    ah,BYTE PTR ds:0x4be10170
  424899:	test   eax,0x5c04eefc
  42489e:	outs   dx,BYTE PTR ds:[esi]
  42489f:	iret   
  4248a0:	add    DWORD PTR [eax+0x75],esi
  4248a3:	fnstsw WORD PTR [ebp*8+0x49157374]
  4248aa:	dec    ebx
  4248ab:	or     eax,DWORD PTR [ebp-0x28eacf4f]
  4248b1:	or     eax,0x635c83f1
  4248b6:	mov    ch,0x9c
  4248b8:	repnz jecxz 0x42491a
  4248bb:	cli    
  4248bc:	mov    ecx,0x8ed78c9e
  4248c1:	icebp  
  4248c2:	je     0x4248ea
  4248c4:	dec    ebp
  4248c5:	mov    al,ds:0x2781d91
  4248ca:	dec    ebx
  4248cb:	adc    bh,BYTE PTR [ecx+0x65a2b82]
  4248d1:	pop    ecx
  4248d2:	out    0x53,eax
  4248d4:	sub    al,0xf5
  4248d6:	fidivr DWORD PTR [ecx-0x50d4838b]
  4248dc:	mov    esi,0x19c35aac
  4248e1:	retf   
  4248e2:	out    dx,al
  4248e3:	xchg   edi,eax
  4248e4:	jecxz  0x424937
  4248e6:	cmp    DWORD PTR [esi+0x650a9df4],esp
  4248ec:	push   0x7d
  4248ee:	pop    esi
  4248ef:	test   DWORD PTR gs:[ecx-0x2d278e5b],esi
	...
  424902:	call   0x9eff:0xefe9ef59
  424909:	jnp    0x42494e
  42490b:	pop    ebp
  42490c:	pop    esp
  42490d:	mov    cl,0xb0
  42490f:	push   0xba4e59cd
  424914:	add    DWORD PTR [eax],eax
  424916:	int3   
  424917:	add    al,BYTE PTR [eax]
  424919:	add    ch,ch
  42491b:	imul   ebp,esi,0x2
  42491e:	fadd   DWORD PTR [eax]
  424920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424921:	inc    edx
  424922:	sub    ch,BYTE PTR [edx]
  424924:	dec    edx
  424925:	neg    BYTE PTR [edi]
  424927:	mov    ebx,0x8c3462dc
  42492c:	repnz test eax,0x285f40c1
  424932:	add    DWORD PTR [esi+0x803bb38],ecx
  424938:	mov    esp,DWORD PTR [ebp-0x5931c594]
  42493e:	(bad)  
  42493f:	jl     0x424990
  424941:	std    
  424942:	rcr    BYTE PTR [esi-0x38bdbeaf],cl
  424948:	scas   eax,DWORD PTR es:[edi]
  424949:	jnp    0x42492e
  42494b:	jge    0x424994
  42494d:	out    0xc2,eax
  42494f:	fstp   DWORD PTR [eax-0x7a7d89a0]
  424955:	adc    eax,0xaade92de
  42495a:	loope  0x424909
  42495c:	lods   eax,DWORD PTR ds:[esi]
  42495d:	cmp    DWORD PTR [edx-0x1c],esp
  424960:	call   ebx
  424962:	aaa    
  424963:	mov    bh,dl
  424965:	jb     0x42490b
  424967:	jno    0x42497c
  424969:	pop    eax
  42496a:	sahf   
  42496b:	stc    
  42496c:	mov    ch,0x4
  42496e:	adc    esp,DWORD PTR [esi+0x41]
  424971:	jmp    0xcd6407ca
  424976:	adc    BYTE PTR [esi],al
  424978:	(bad)  
  424979:	iret   
  42497a:	cmp    eax,0xdac6e666
  42497f:	mov    ch,0xfe
  424981:	dec    ebx
  424982:	(bad)  
  424983:	ja     0x424967
  424985:	ja     0x42492c
  424987:	mov    esp,0xa6980fdf
  42498c:	sub    BYTE PTR [edi+0x6bcc7e95],ah
  424992:	mov    ebp,0xc032a76b
  424997:	gs sahf 
  424999:	sub    DWORD PTR [ebx+0x12],ebx
  42499c:	or     DWORD PTR [ebp-0x6d],ebx
  42499f:	aam    0x5d
  4249a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249a2:	dec    esi
  4249a3:	sub    eax,0x21b52732
  4249a8:	aas    
  4249a9:	sti    
  4249aa:	iret   
  4249ab:	mov    es,edx
  4249ad:	aam    0xb1
  4249af:	pop    ss
  4249b0:	fisubr WORD PTR [edi]
  4249b2:	jle    0x424985
  4249b4:	jl     0x424971
  4249b6:	ins    BYTE PTR es:[edi],dx
  4249b7:	cdq    
  4249b8:	ror    DWORD PTR [edi-0x59e43143],0x9e
  4249bf:	xlat   BYTE PTR ds:[ebx]
  4249c0:	inc    esp
  4249c1:	pop    ecx
  4249c2:	and    al,0xd6
  4249c4:	jmp    0x33f7c786
  4249c9:	int3   
  4249ca:	retf   0x94ac
  4249cd:	adc    al,0x2e
  4249cf:	mov    dl,0x4a
  4249d1:	int3   
  4249d2:	inc    ecx
  4249d3:	pushf  
  4249d4:	aas    
  4249d5:	(bad)  
  4249d6:	push   ebx
  4249d7:	(bad)  
  4249d8:	stc    
  4249d9:	out    0xae,al
  4249db:	icebp  
  4249dc:	sar    ch,0x6
  4249df:	shl    BYTE PTR [ecx*4+0x1c5ae1ee],0xeb
  4249e7:	call   0x85ec:0x92bf7939
  4249ee:	add    DWORD PTR [ebx+0x72],ebx
  4249f1:	push   esp
  4249f2:	(bad)
  4249f6:	dec    esp
  4249f7:	mov    ebx,0x7e114d92
  4249fc:	cmp    BYTE PTR [esi],bh
  4249fe:	push   esp
  4249ff:	jno    0x424a4f
  424a01:	mov    ds:0xa9720b28,al
  424a06:	clc    
  424a07:	xor    BYTE PTR [edx-0x16],ah
  424a0a:	fs jg  0x424a89
  424a0d:	push   esi
  424a0e:	push   eax
  424a0f:	es push esi
  424a11:	js     0x424a42
  424a13:	(bad)
  424a19:	lahf   
  424a1a:	sbb    DWORD PTR [eax+0x15660828],ebx
  424a20:	lea    edx,[eax]
  424a22:	fcmovne st,st(4)
  424a24:	mov    BYTE PTR [edx+ecx*2+0x38f60dc2],al
  424a2b:	(bad)
  424a2f:	shr    BYTE PTR [edi+0x75],1
  424a32:	dec    ebp
  424a33:	mov    bl,0xf0
  424a35:	(bad)  
  424a36:	or     eax,DWORD PTR [edi-0xc]
  424a39:	sub    ch,BYTE PTR [edx]
  424a3b:	imul   ecx,DWORD PTR [esi+0x39],0x77
  424a3f:	ror    DWORD PTR [ebx-0x3fa7e8f],cl
  424a45:	or     eax,0xb280e388
  424a4a:	ret    
  424a4b:	in     eax,0x96
  424a4d:	xchg   ebx,eax
  424a4e:	jp     0x424acb
  424a50:	xchg   ebp,eax
  424a51:	fwait
  424a52:	and    dl,bh
  424a54:	movaps xmm1,XMMWORD PTR [eax]
  424a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a59:	or     esp,ebp
  424a5b:	mov    ebp,0x91738606
  424a60:	stc    
  424a61:	clc    
  424a62:	cmp    DWORD PTR ds:0x3ca0db46,eax
  424a68:	mov    esi,0x5839fa3
  424a6d:	fstp   QWORD PTR [edi+0x12]
  424a70:	test   BYTE PTR [ecx],cl
  424a72:	push   0xfd33e215
  424a77:	(bad)  
  424a78:	pop    ss
  424a79:	and    bl,BYTE PTR [eax]
  424a7b:	icebp  
  424a7c:	push   eax
  424a7d:	mov    edx,0x4132f631
  424a82:	ja     0x424abb
  424a84:	in     al,0x83
  424a86:	jecxz  0x424aa9
  424a88:	sbb    BYTE PTR [ecx+0x4d],0xf4
  424a8c:	pushf  
  424a8d:	push   edx
  424a8e:	mov    ecx,0x3ef7fb6
  424a93:	sub    DWORD PTR [edi],0x12
  424a96:	jno    0x424a9b
  424a98:	dec    esi
  424a99:	sbb    BYTE PTR [ebp-0x7c094d15],bh
  424a9f:	mov    ebp,0x9ab47ed1
  424aa4:	push   ecx
  424aa5:	imul   esi,DWORD PTR [edi-0x784461d9],0xffffffab
  424aac:	jnp    0x424b2d
  424aae:	mov    ?,WORD PTR [edi+0x73d71a95]
  424ab4:	mov    BYTE PTR [ebp+0x1166caab],0x90
  424abb:	cmc    
  424abc:	fwait
  424abd:	scas   al,BYTE PTR es:[edi]
  424abe:	mov    eax,ds:0x983b1ed3
  424ac3:	pop    ss
  424ac4:	mov    esi,0xb27554f
  424ac9:	sbb    bl,BYTE PTR [edx-0x46a72568]
  424acf:	jle    0x424a6f
  424ad1:	adc    eax,0x28ff7c1d
  424ad6:	test   edx,ebx
  424ad8:	ret    0xf9ef
  424adb:	push   ebx
  424adc:	xor    edi,DWORD PTR [ebp-0x2e9c429]
  424ae2:	cmp    al,0x3a
  424ae4:	loopne 0x424a99
  424ae6:	and    al,0xd2
  424ae8:	test   eax,0xf09f46a7
  424aed:	jae    0x424ae6
  424aef:	xchg   esi,eax
  424af0:	outs   dx,BYTE PTR ds:[esi]
  424af1:	adc    eax,0xef3a10e5
  424af6:	add    ebx,DWORD PTR [ecx-0x2c]
  424af9:	fwait
  424afa:	enter  0xc959,0x15
  424afe:	cmp    al,al
  424b00:	sbb    DWORD PTR [eax],eax
  424b02:	jae    0x424afb
  424b04:	dec    eax
  424b05:	and    eax,0x59d819e8
  424b0a:	fmul   QWORD PTR [edx+0x2f67ca22]
  424b10:	xchg   edi,eax
  424b11:	and    bl,BYTE PTR [eax-0xf]
  424b14:	sbb    DWORD PTR [ebp-0x21],ebp
  424b17:	sub    eax,0x289bb8e2
  424b1c:	retf   0x9e1b
  424b1f:	test   DWORD PTR [esi-0x452e0813],ebx
  424b25:	push   eax
  424b26:	lods   eax,DWORD PTR ds:[esi]
  424b27:	fcomp  QWORD PTR [edx]
  424b29:	xlat   BYTE PTR ds:[ebx]
  424b2a:	ret    
  424b2b:	in     al,dx
  424b2c:	call   0x845b2d09
  424b31:	cmp    eax,0x9c375986
  424b36:	jne    0x424b83
  424b38:	xchg   ecx,eax
  424b39:	test   BYTE PTR [ebx+ecx*4],0xf9
  424b3d:	sub    eax,0x70430c9b
  424b42:	test   BYTE PTR [ebx-0x546c5323],dl
  424b48:	mov    edi,0x90b71516
  424b4d:	pop    ebp
  424b4e:	inc    ebp
  424b4f:	lahf   
  424b50:	xor    al,0x2
  424b52:	mov    dl,0xae
  424b54:	ja     0x424bd2
  424b56:	arpl   WORD PTR ds:0x9c101507,cx
  424b5c:	jns    0x424bc8
  424b5e:	daa    
  424b5f:	mov    al,0x46
  424b61:	imul   esp,DWORD PTR [esi-0x4cb27129],0x65865637
  424b6b:	sub    DWORD PTR [eax-0x78],ecx
  424b6e:	dec    edi
  424b6f:	jnp    0x424b9c
  424b71:	cmp    al,0x8e
  424b73:	inc    esi
  424b74:	imul   ebx,DWORD PTR [eax],0x3b
  424b77:	xchg   ebp,eax
  424b78:	mov    DWORD PTR [ebx],ebx
  424b7a:	popf   
  424b7b:	dec    esi
  424b7c:	sar    ecx,cl
  424b7e:	stos   BYTE PTR es:[edi],al
  424b7f:	xor    edx,DWORD PTR [edx+0x5f8f1d5d]
  424b85:	xor    al,0xfe
  424b87:	mov    ebx,0x5a7916dc
  424b8c:	in     al,dx
  424b8d:	adc    ecx,DWORD PTR [edi-0x71cce949]
  424b93:	mov    ch,0xc3
  424b95:	into   
  424b96:	in     al,0x45
  424b98:	fcom   QWORD PTR [eax]
  424b9a:	test   eax,0xdc04029f
  424b9f:	cdq    
  424ba0:	hlt    
  424ba1:	rcl    BYTE PTR [eax],cl
  424ba3:	test   eax,0xd256a888
  424ba8:	sbb    eax,0x2534634d
  424bad:	mov    BYTE PTR [esi-0x54],cl
  424bb0:	cmp    ebx,DWORD PTR [ebp-0x5b]
  424bb3:	jmp    0x139e0731
  424bb8:	out    0x3c,al
  424bba:	popf   
  424bbb:	jae    0x424bc4
  424bbd:	aas    
  424bbe:	and    al,al
  424bc0:	sub    ch,BYTE PTR [edx+0x6c]
  424bc3:	inc    esp
  424bc4:	test   eax,0x878c9e0c
  424bc9:	add    eax,0x432bfdae
  424bce:	lea    edx,[ebx]
  424bd0:	retf   0xf3
  424bd3:	(bad)  
  424bd4:	sub    ch,BYTE PTR [eax+0x5d]
  424bd7:	rcr    BYTE PTR [edi],cl
  424bd9:	xor    DWORD PTR [ebx],eax
  424bdb:	add    eax,0x580ee79
  424be0:	sub    eax,0x2e7dce80
  424be5:	xor    eax,0x0
	...
  424bf2:	(bad)  
  424bf3:	rol    BYTE PTR [edi],0x37
  424bf6:	dec    edi
  424bf7:	idiv   DWORD PTR [ebp+0x532a00fa]
  424bfd:	fnsave [eax+0x17]
  424c00:	(bad)  
  424c01:	fistp  WORD PTR [edx]
  424c03:	mov    ebp,0x2cc0001
  424c08:	add    BYTE PTR [eax],al
  424c0a:	jmp    0x424c3f
  424c0c:	inc    edi
  424c0d:	ins    BYTE PTR es:[edi],dx
  424c0e:	pushf  
  424c0f:	dec    esp
  424c10:	repnz call 0xe606:0xe625b
  424c18:	sbb    al,0x7
  424c1a:	mov    bh,0x80
  424c1c:	and    al,0xc5
  424c1e:	push   cs
  424c1f:	out    dx,eax
  424c20:	(bad)  
  424c21:	ds es jg 0x424bad
  424c25:	mov    ds:0x5a0b7aca,eax
  424c2a:	xor    BYTE PTR ds:[esi-0x1d],cl
  424c2e:	and    ch,ch
  424c30:	sbb    DWORD PTR [ebp-0x7d],0xffffff86
  424c34:	and    dl,BYTE PTR [ebx]
  424c36:	dec    esp
  424c37:	add    al,0xc8
  424c39:	mov    al,0xe1
  424c3b:	sub    al,0x36
  424c3d:	push   ds
  424c3e:	sahf   
  424c3f:	(bad)  
  424c40:	jae    0x424cbd
  424c42:	popf   
  424c43:	nop
  424c44:	mov    ebx,DWORD PTR [edi]
  424c46:	cld    
  424c47:	sbb    DWORD PTR [ecx+0x56cb08d6],edi
  424c4d:	or     esp,edi
  424c4f:	pop    edi
  424c50:	loopne 0x424c00
  424c52:	inc    ebp
  424c53:	aaa    
  424c54:	sbb    eax,0x7d618acc
  424c59:	(bad)  
  424c5a:	mov    edx,0x406405c0
  424c5f:	fs or  eax,0x47a47f14
  424c65:	mov    ebx,0xb26e90e0
  424c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c6b:	xor    BYTE PTR [esi+esi*1],bl
  424c6e:	nop
  424c6f:	fs das 
  424c71:	shl    BYTE PTR [ebx+0xffb3598],1
  424c77:	(bad)  
  424c78:	inc    ecx
  424c79:	ret    
  424c7a:	sub    bh,bh
  424c7c:	stc    
  424c7d:	cmp    DWORD PTR [eax],esp
  424c7f:	data16 mov WORD PTR fs:[edi],?
  424c83:	or     BYTE PTR [esi],0x85
  424c86:	int    0x96
  424c88:	stc    
  424c89:	mov    bh,0x75
  424c8b:	push   cs
  424c8c:	xchg   BYTE PTR [ecx],bl
  424c8e:	jo     0x424d09
  424c90:	add    al,0xf3
  424c92:	cmc    
  424c93:	mov    edi,0x61eed860
  424c98:	scas   eax,DWORD PTR es:[edi]
  424c99:	cld    
  424c9a:	lods   eax,DWORD PTR ds:[esi]
  424c9b:	cmp    DWORD PTR ss:[ebp-0x22e5315],eax
  424ca2:	sbb    DWORD PTR [edx],esp
  424ca4:	addr16 aam 0x80
  424ca7:	(bad)  
  424ca8:	and    ebx,esi
  424caa:	inc    ebp
  424cab:	xor    eax,0xcc987ba9
  424cb0:	cmp    cl,BYTE PTR [eax+ebx*2]
  424cb3:	inc    esp
  424cb4:	mov    ebx,0x2060686d
  424cb9:	adc    BYTE PTR [ecx+ebp*8-0x79],dl
  424cbd:	fst    st(7)
  424cbf:	shl    BYTE PTR [esi-0x6e3938e9],0xf7
  424cc6:	rcr    BYTE PTR [ebx+0x22b0c8ca],0xb3
  424ccd:	push   eax
  424cce:	add    DWORD PTR [esi-0x7fd57418],edx
  424cd4:	xchg   ebp,eax
  424cd5:	mov    ebp,fs
  424cd7:	in     eax,0x4
  424cd9:	mov    al,bh
  424cdb:	xor    DWORD PTR [ebx-0x51],edx
  424cde:	sub    ebx,DWORD PTR [edi+edi*1+0x29]
  424ce2:	xchg   esp,eax
  424ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ce4:	xor    edi,DWORD PTR [esi]
  424ce6:	jecxz  0x424d1f
  424ce8:	scas   eax,DWORD PTR es:[edi]
  424ce9:	inc    ecx
  424cea:	neg    BYTE PTR [edi]
  424cec:	clc    
  424ced:	mov    ecx,DWORD PTR [edx-0x77]
  424cf0:	dec    eax
  424cf1:	fdiv   DWORD PTR [ebp-0x5bc996a0]
  424cf7:	mov    ch,0xe0
  424cf9:	dec    bh
  424cfb:	jae    0x424cfe
  424cfd:	dec    eax
  424cfe:	imul   edx,esp,0x8eed3c54
  424d04:	inc    ecx
  424d05:	dec    esp
  424d06:	loope  0x424cdb
  424d08:	pop    DWORD PTR [ebx]
  424d0a:	pop    esi
  424d0b:	pop    esi
  424d0c:	jge    0x424cbb
  424d0e:	sbb    eax,0xf024c1
  424d13:	retf   
  424d14:	cdq    
  424d15:	mov    esp,0xb0e1b29
  424d1a:	xchg   ebx,eax
  424d1b:	and    al,ah
  424d1d:	and    eax,0x62448a1a
  424d22:	int3   
  424d23:	mov    bl,0x0
  424d25:	sub    al,0xb0
  424d27:	dec    edi
  424d28:	pop    eax
  424d29:	fucom  st(5)
  424d2b:	mov    edi,0x801b0bd5
  424d30:	mov    eax,0x3ba2da62
  424d35:	in     eax,dx
  424d36:	mov    ds:0x383a724b,eax
  424d3b:	xchg   ebx,eax
  424d3c:	dec    edi
  424d3d:	push   0xffffff85
  424d3f:	pop    ebp
  424d40:	sbb    ecx,DWORD PTR [edi+ebx*4+0x2f5aca6]
  424d47:	mov    esp,edi
  424d49:	retf   0x65b8
  424d4c:	clc    
  424d4d:	dec    esp
  424d4e:	int    0xae
  424d50:	and    edi,eax
  424d52:	push   esp
  424d53:	das    
  424d54:	push   ebx
  424d55:	pop    ebx
  424d56:	mov    eax,ds:0x1527a207
  424d5b:	and    edi,DWORD PTR [edx+0x13]
  424d5e:	(bad)  
  424d5f:	xlat   BYTE PTR ds:[ebx]
  424d60:	int3   
  424d61:	inc    esp
  424d62:	mov    edi,0xfb2e926b
  424d67:	xor    BYTE PTR [ebp+ebp*4+0x39],ah
  424d6b:	pop    edx
  424d6c:	xchg   ebp,eax
  424d6d:	int3   
  424d6e:	pop    ebp
  424d6f:	mov    ss:0xfb90be7,eax
  424d75:	mov    fs,WORD PTR [esi*4-0x50100df1]
  424d7c:	fidiv  WORD PTR [ecx+0xb]
  424d7f:	lods   eax,DWORD PTR ds:[esi]
  424d80:	push   ds
  424d81:	jg     0x424d03
  424d83:	pop    esi
  424d84:	dec    esp
  424d85:	fidiv  WORD PTR [ebx+0x4d]
  424d88:	mov    ds:0xfd2251c1,eax
  424d8d:	call   0x133f:0xc5da917d
  424d94:	in     eax,dx
  424d95:	rcl    bh,1
  424d97:	jl     0x424d77
  424d99:	push   ecx
  424d9a:	mov    BYTE PTR [esi+0x7c],bh
  424d9d:	adc    DWORD PTR [eax],ecx
  424d9f:	sub    edi,DWORD PTR [ecx+0x35]
  424da2:	adc    BYTE PTR [ebp+esi*8+0x15],cl
  424da6:	popf   
  424da7:	pop    esi
  424da8:	test   bl,ch
  424daa:	and    ecx,DWORD PTR [eax]
  424dac:	jge    0x424e19
  424dae:	inc    eax
  424daf:	(bad)  
  424db0:	stc    
  424db1:	xor    ch,BYTE PTR gs:[edi+0x808f0fb]
  424db8:	jmp    0x424d3e
  424dba:	sbb    DWORD PTR [ecx+0x56],esi
  424dbd:	dec    ecx
  424dbe:	dec    edi
  424dbf:	push   edi
  424dc0:	mov    esp,0xe85be93a
  424dc5:	(bad)  
  424dc6:	out    0xd9,al
  424dc8:	outs   dx,DWORD PTR ds:[esi]
  424dc9:	dec    ebp
  424dca:	adc    dh,BYTE PTR [eax-0x6a]
  424dcd:	repz iret 
  424dcf:	mov    ah,0x2f
  424dd1:	out    0xc2,al
  424dd3:	loop   0x424e29
  424dd5:	add    DWORD PTR [esi+0x22357497],0xffffffe9
  424ddc:	push   0x56
  424dde:	mov    ch,0xf8
  424de0:	mov    ebp,0x6bcf0771
  424de5:	ds cmc 
  424de7:	not    DWORD PTR [esi]
  424de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dea:	ins    BYTE PTR es:[edi],dx
  424deb:	pop    esi
  424dec:	and    bh,BYTE PTR ds:0x88e1ea5f
  424df2:	push   eax
  424df3:	inc    ebx
  424df4:	cmp    dl,BYTE PTR gs:[esi-0x1ebe73b4]
  424dfb:	cmp    eax,0xa16422c1
  424e00:	push   0xffffffac
  424e02:	add    al,0x18
  424e04:	dec    esp
  424e05:	lods   eax,DWORD PTR ds:[esi]
  424e06:	or     ebx,DWORD PTR [ecx+edi*4]
  424e09:	sti    
  424e0a:	outs   dx,BYTE PTR ds:[esi]
  424e0b:	std    
  424e0c:	test   al,0x9b
  424e0e:	cmp    DWORD PTR [eax],ecx
  424e10:	jge    0x424db8
  424e12:	arpl   sp,ax
  424e14:	pop    edi
  424e15:	mov    ch,0xc4
  424e17:	call   0xa518:0xb554629f
  424e1e:	mov    edi,0x2438ece9
  424e23:	ret    0x5db
  424e26:	xchg   edi,eax
  424e27:	sub    BYTE PTR [ecx+edx*4+0x74],al
  424e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e2c:	out    0xc5,eax
  424e2e:	inc    edi
  424e2f:	sub    eax,DWORD PTR [esi]
  424e31:	stc    
  424e32:	and    al,0xc7
  424e34:	imul   edx,DWORD PTR [edi-0x36],0x4f
  424e38:	cmp    eax,0x7343c407
  424e3d:	arpl   WORD PTR [edi+0x14],bx
  424e40:	jnp    0x424e09
  424e42:	add    edi,eax
  424e44:	test   DWORD PTR [esi+ecx*2+0x5d5b65f8],ebp
  424e4b:	out    dx,al
  424e4c:	or     eax,0xa2683366
  424e51:	cs mov ecx,0xac4694e0
  424e57:	fadd   QWORD PTR [ebx+0x59]
  424e5a:	xor    bl,BYTE PTR [esi+0x7d]
  424e5d:	dec    ecx
  424e5e:	sahf   
  424e5f:	add    BYTE PTR [esi],0x5f
  424e62:	pushf  
  424e63:	or     al,0x54
  424e65:	adc    BYTE PTR [esp+eiz*2-0x6dd4a0c],0x36
  424e6d:	mov    eax,0x30f8c8b8
  424e72:	adc    al,0x82
  424e74:	fadd   DWORD PTR [ebx]
  424e76:	jns    0x424e05
  424e78:	retf   
  424e79:	xchg   ecx,eax
  424e7a:	pop    edi
  424e7b:	aad    0xab
  424e7d:	mov    esi,DWORD PTR [ebx-0xfd4a18e]
  424e83:	xor    edi,DWORD PTR [ebp-0x7b5a70b6]
  424e89:	jl     0x424ee7
  424e8b:	mul    DWORD PTR [eax]
  424e8d:	cmp    DWORD PTR [ecx-0x36],esp
  424e90:	sub    ah,BYTE PTR [esp+eax*8-0x69e9afb2]
  424e97:	and    DWORD PTR [ebp-0x5b],esi
  424e9a:	xor    al,0xe3
  424e9c:	and    al,dl
  424e9e:	sbb    ebx,ebp
  424ea0:	cmp    dl,BYTE PTR [edi+0x7d95689c]
  424ea6:	xor    eax,0xa9c93ba0
  424eab:	dec    edx
  424eac:	dec    esi
  424ead:	and    ebx,0xdb730cd
  424eb3:	cmp    BYTE PTR [ebp+ebx*2+0x24],0xa3
  424eb8:	push   es
  424eb9:	xchg   esi,eax
  424eba:	or     BYTE PTR [esi],bl
  424ebc:	xor    bh,BYTE PTR [ecx-0x77]
  424ebf:	fisttp DWORD PTR [ebx-0x6]
  424ec2:	sbb    bh,BYTE PTR [ebp-0x1b]
  424ec5:	js     0x424e8a
  424ec7:	stos   DWORD PTR es:[edi],eax
  424ec8:	and    esp,DWORD PTR [ecx]
  424eca:	or     ebp,DWORD PTR [edx]
  424ecc:	icebp  
  424ecd:	in     al,0xe0
  424ecf:	mov    esp,0x3a6d4a96
  424ed4:	mov    eax,ds:0x67
	...
  424ee1:	add    BYTE PTR [eax-0x57e1776],dh
  424ee7:	jecxz  0x424ee2
  424ee9:	mov    ebx,0x99242062
  424eee:	ficomp DWORD PTR [edx-0x40197f6d]
  424ef4:	add    DWORD PTR [eax],eax
  424ef6:	int3   
  424ef7:	add    al,BYTE PTR [eax]
  424ef9:	add    BYTE PTR [ecx-0x31],al
  424efc:	xor    DWORD PTR [esi-0x1798bf46],edx
  424f02:	push   ss
  424f03:	lock cmp BYTE PTR [esi-0xb],0xf9
  424f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f09:	(bad)  
  424f0a:	mul    BYTE PTR [eax]
  424f0c:	scas   al,BYTE PTR es:[edi]
  424f0d:	jge    0x424f09
  424f0f:	and    BYTE PTR [esi+0x1c],dh
  424f12:	jne    0x424ec4
  424f14:	nop
  424f15:	pop    esp
  424f16:	unpckhps xmm6,XMMWORD PTR [ebp+0x26]
  424f1a:	outs   dx,WORD PTR ds:[esi]
  424f1c:	mov    bh,0x65
  424f1e:	sbb    DWORD PTR [edi-0x27c64e99],ebx
  424f24:	fist   WORD PTR [edi+0x4a3f84a2]
  424f2a:	test   al,0xc8
  424f2c:	ja     0x424ee3
  424f2e:	push   ebp
  424f2f:	fsubp  st(1),st
  424f31:	aas    
  424f32:	mov    ecx,0x309d2abe
  424f37:	jne    0x424f53
  424f39:	sub    DWORD PTR [ebp-0x2f],esp
  424f3c:	pop    ebx
  424f3d:	mov    eax,ds:0xd38a5662
  424f42:	add    al,0xb5
  424f44:	sub    al,BYTE PTR [eax-0x722c59ed]
  424f4a:	repz xor eax,0x2b727643
  424f50:	les    esp,FWORD PTR [ebp+0x2f6318ff]
  424f56:	hlt    
  424f57:	mov    fs,WORD PTR [ecx+eiz*2-0x10]
  424f5b:	imul   esp,DWORD PTR [esi-0x36],0x149faadc
  424f62:	sti    
  424f63:	lahf   
  424f64:	imul   ecx,ebp,0x96cff19b
  424f6a:	jecxz  0x424feb
  424f6c:	mov    ebx,0x81914d2
  424f71:	inc    edx
  424f72:	mov    al,0xdb
  424f74:	xchg   ebx,eax
  424f75:	mov    dl,cl
  424f77:	jl     0x424fbe
  424f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f7a:	leave  
  424f7b:	mov    ebx,0xce17388
  424f80:	lds    esi,FWORD PTR [edi+edx*8]
  424f83:	jecxz  0x424fd7
  424f85:	push   0xffffffdd
  424f87:	scas   al,BYTE PTR es:[edi]
  424f88:	call   0xe0b051ed
  424f8d:	jbe    0x424fd6
  424f8f:	inc    ebp
  424f90:	mov    cl,0x2
  424f92:	into   
  424f93:	xchg   esp,eax
  424f94:	push   ds
  424f95:	or     cl,bl
  424f97:	ins    DWORD PTR es:[edi],dx
  424f98:	or     BYTE PTR [ecx],0x5c
  424f9b:	cmp    edi,0xffffffc7
  424f9e:	shl    BYTE PTR [edx+0xa54fc70],0x39
  424fa5:	jns    0x424fe7
  424fa7:	aas    
  424fa8:	lea    ebp,[ebx]
  424faa:	add    cl,BYTE PTR [eax+0x493ad6ae]
  424fb0:	ins    BYTE PTR es:[edi],dx
  424fb1:	test   al,0xba
  424fb3:	add    BYTE PTR [edx],dl
  424fb5:	add    al,BYTE PTR [esi+0x1901fd98]
  424fbb:	aas    
  424fbc:	sti    
  424fbd:	bound  esp,QWORD PTR [ecx]
  424fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fc0:	mov    al,0xda
  424fc2:	in     eax,0x1f
  424fc4:	aam    0xba
  424fc6:	fisubr WORD PTR [ecx-0x43]
  424fc9:	mov    eax,ds:0xc141eb1d
  424fce:	sub    ah,BYTE PTR [esi+edi*1]
  424fd1:	fwait
  424fd2:	pop    ds
  424fd3:	adc    ebp,DWORD PTR [eax]
  424fd5:	dec    esp
  424fd6:	and    eax,0xdc59f2ae
  424fdb:	ss cmp eax,0x15e5643
  424fe1:	scas   eax,DWORD PTR es:[edi]
  424fe2:	retf   0x51b0
  424fe5:	scas   al,BYTE PTR es:[edi]
  424fe6:	jbe    0x424fa4
  424fe8:	mov    DWORD PTR [edi+0x4a0367c4],ebp
  424fee:	adc    al,0xce
  424ff0:	std    
  424ff1:	daa    
  424ff2:	push   ebx
  424ff3:	imul   esp,DWORD PTR [esi+esi*8],0x58
  424ff7:	in     al,dx
  424ff8:	dec    ebp
  424ff9:	or     ebp,0x4954c3b9
  424fff:	stc    
  425000:	pop    ss
  425001:	push   es
  425002:	(bad)  
  425004:	into   
  425005:	dec    ebx
  425006:	ins    DWORD PTR es:[edi],dx
  425007:	xchg   ecx,eax
  425008:	pop    ebx
  425009:	dec    esi
  42500a:	mov    dh,0xf3
  42500c:	mov    bh,0x1d
  42500e:	rcl    DWORD PTR [ebp-0x66],cl
  425011:	enter  0xc974,0x58
  425015:	test   BYTE PTR [ecx+0x7d],bl
  425018:	sbb    esi,DWORD PTR [edx-0x4e]
  42501b:	loope  0x425069
  42501d:	mov    edi,0x59d0f83e
  425022:	and    ch,cl
  425024:	fcomp  QWORD PTR [edx]
  425026:	jae    0x424fbb
  425028:	scas   eax,DWORD PTR es:[edi]
  425029:	add    al,0x43
  42502b:	cmp    BYTE PTR [edx+0x77bd6f12],0xad
  425032:	les    esi,FWORD PTR [esi]
  425034:	dec    esp
  425035:	pop    DWORD PTR [ebp-0x4f]
  425038:	sysret 
  42503a:	cdq    
  42503b:	and    eax,0x25433e5f
  425041:	xchg   esp,eax
  425042:	add    ah,BYTE PTR [ecx+0xe4cc29d]
  425048:	xchg   esi,eax
  425049:	jns    0x424fd7
  42504b:	adc    ebx,DWORD PTR [edx-0x1f]
  42504e:	xor    eax,0xb9ee91dd
  425053:	jmp    0x32fc8570
  425058:	mov    WORD PTR [esi-0x581f0e83],es
  42505e:	push   eax
  42505f:	dec    esp
  425060:	jo     0x42504d
  425062:	xchg   esp,eax
  425063:	dec    ebp
  425064:	nop
  425065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425066:	add    BYTE PTR [ebx+0x67],0xa1
  42506a:	mov    al,0x27
  42506c:	xchg   ebx,eax
  42506d:	fnstenv [ebx]
  42506f:	pop    esi
  425070:	mov    dl,0x91
  425072:	xchg   edi,eax
  425073:	in     eax,dx
  425074:	popf   
  425075:	mov    dh,0x8b
  425077:	mov    dh,0x59
  425079:	jmp    0xc2321277
  42507e:	jg     0x425011
  425080:	ss push ss
  425082:	std    
  425083:	popf   
  425084:	add    eax,0xb7cff1fa
  425089:	dec    ebp
  42508a:	mov    edi,0x21bcc84b
  42508f:	push   es
  425090:	stc    
  425091:	cs fmulp st(7),st
  425094:	jg     0x425111
  425096:	add    eax,0x7cba84aa
  42509b:	jecxz  0x42511b
  42509d:	jne    0x4250b6
  42509f:	out    0x2c,al
  4250a1:	btc    DWORD PTR [esi-0x80],ecx
  4250a5:	icebp  
  4250a6:	lods   al,BYTE PTR fs:[esi]
  4250a8:	xchg   ebp,edi
  4250aa:	dec    BYTE PTR [edi-0x42]
  4250ad:	(bad)  
  4250ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250b0:	mov    BYTE PTR [ebp-0x4f861978],cl
  4250b6:	arpl   WORD PTR [edi-0x13e66367],di
  4250bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250bd:	xchg   edx,eax
  4250be:	sbb    al,0xd4
  4250c0:	sub    edx,0x4d
  4250c3:	loop   0x425089
  4250c5:	or     al,0xd0
  4250c7:	fadd   DWORD PTR [edx+0xd]
  4250ca:	cmp    cl,cl
  4250cc:	enter  0x6b37,0xc3
  4250d0:	cs shr ch,cl
  4250d3:	and    BYTE PTR [ecx+0x7dc981bf],ah
  4250d9:	push   0x7d85a5ca
  4250de:	cwde   
  4250df:	xchg   edi,eax
  4250e0:	not    BYTE PTR fs:[ebx]
  4250e3:	aad    0x42
  4250e5:	cmp    al,0x1e
  4250e7:	add    BYTE PTR [edi-0x5a63cd28],0xf
  4250ee:	sub    eax,0x31c8c73c
  4250f3:	mov    edi,0xe946e4c8
  4250f8:	repnz xor esp,DWORD PTR [ecx-0x4e]
  4250fc:	out    dx,eax
  4250fd:	push   DWORD PTR [edi+0x140093ab]
  425103:	fiadd  WORD PTR [eax]
  425105:	leave  
  425106:	or     BYTE PTR [ecx*2+0x4e2eaa75],al
  42510d:	mov    ebx,0xd3b81b3c
  425112:	xor    DWORD PTR [ecx],edi
  425114:	xor    al,0xb4
  425116:	pop    edx
  425117:	es je  0x4250f9
  42511a:	ins    DWORD PTR es:[edi],dx
  42511b:	mov    ebx,DWORD PTR [edx]
  42511d:	adc    al,0x99
  42511f:	les    ebx,FWORD PTR [esi-0x58833f42]
  425125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425126:	pop    ecx
  425127:	adc    esi,esp
  425129:	inc    ebx
  42512a:	arpl   WORD PTR [ecx],dx
  42512c:	inc    esp
  42512d:	bound  ebx,QWORD PTR [ebx+0x42]
  425130:	in     eax,dx
  425131:	mov    ebp,0x223f0805
  425136:	sub    eax,0xea3edaa5
  42513b:	dec    edx
  42513c:	std    
  42513d:	leave  
  42513e:	jmp    0x4fe0:0x5f57c618
  425145:	aas    
  425146:	adc    dl,BYTE PTR [edi+eiz*1+0x23]
  42514a:	out    0x3b,al
  42514c:	aam    0xb6
  42514e:	iret   
  42514f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425150:	div    BYTE PTR [ecx-0x6b]
  425153:	inc    ebx
  425154:	jmp    0x425136
  425156:	xchg   esp,eax
  425157:	xchg   edx,ecx
  425159:	cwde   
  42515a:	out    dx,eax
  42515b:	out    0xae,al
  42515d:	pop    edi
  42515e:	es xchg ecx,eax
  425160:	arpl   WORD PTR [ebp-0x2848c451],sp
  425166:	jl     0x4250ef
  425168:	cmc    
  425169:	and    al,BYTE PTR [edi-0x4b2ca70b]
  42516f:	xchg   edi,ebx
  425171:	push   ebx
  425172:	ja     0x4251d1
  425174:	dec    DWORD PTR [ecx]
  425176:	push   esp
  425177:	repz mov ebp,0xcd5ab8e4
  42517d:	xor    BYTE PTR [edi],ah
  42517f:	sbb    DWORD PTR [edx+eiz*8-0x6f4bfd2f],edi
  425186:	(bad)  
  425187:	fcom   QWORD PTR [eax-0x2c]
  42518a:	mov    cl,0x76
  42518c:	dec    eax
  42518d:	mov    DWORD PTR gs:[edx-0x5991c0a3],ebp
  425194:	int3   
  425195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425196:	lock lods al,BYTE PTR ds:[esi]
  425198:	dec    esp
  425199:	push   ecx
  42519a:	aas    
  42519b:	jmp    0x2089:0xdd6fc032
  4251a2:	jne    0x425181
  4251a4:	gs or  eax,0x3ae13ce5
  4251aa:	and    DWORD PTR [edi-0x40f10e7a],0x686cb8ea
  4251b4:	repz pop ss
  4251b6:	jno    0x4251d3
  4251b8:	mov    DWORD PTR [ebp-0x215ec88b],ebp
  4251be:	xor    DWORD PTR [edx-0x1d7ff942],esi
  4251c4:	fs push ebp
	...
  4251d2:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4251d9:	fsubr  st(7),st
  4251db:	sub    DWORD PTR [ecx],0xffffff8c
  4251de:	xlat   BYTE PTR ds:[ebx]
  4251df:	cmp    al,0xbe
  4251e1:	shl    DWORD PTR [edx-0x33fffe3e],cl
  4251e7:	add    al,BYTE PTR [eax]
  4251e9:	add    BYTE PTR [esp+ebp*8-0x33],dh
  4251ed:	punpckldq mm3,DWORD PTR [ecx]
  4251f0:	add    dl,dh
  4251f2:	push   edi
  4251f3:	(bad)  
  4251f4:	push   eax
  4251f5:	sub    ecx,DWORD PTR [ebp-0x25f7f2af]
  4251fb:	xor    DWORD PTR [ebx],esi
  4251fd:	fscale 
  4251ff:	xchg   ecx,eax
  425200:	int    0xc5
  425202:	adc    edx,DWORD PTR [ecx+0x2770e277]
  425208:	cmc    
  425209:	stos   BYTE PTR es:[edi],al
  42520a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42520b:	sub    eax,0x3abf96c5
  425210:	shl    BYTE PTR [ecx+0xb],0x6
  425214:	hlt    
  425215:	sub    al,bl
  425217:	mov    ?,WORD PTR [ebp+0x67a724bf]
  42521d:	sub    ch,BYTE PTR [esp+esi*8]
  425220:	xchg   edi,eax
  425221:	and    eax,DWORD PTR [edi+0x75]
  425224:	xchg   ebx,eax
  425225:	pop    esp
  425226:	pop    edi
  425227:	xlat   BYTE PTR ds:[ebx]
  425228:	loope  0x4251af
  42522a:	mov    BYTE PTR [ebx],bl
  42522c:	pop    ebx
  42522d:	in     eax,dx
  42522e:	dec    ebx
  42522f:	jns    0x4251e6
  425231:	adc    al,0x8e
  425233:	sub    DWORD PTR [ecx+ebx*2-0xbd6747d],ebp
  42523a:	mov    esi,0x89c0ce6f
  42523f:	mov    cl,0x32
  425241:	inc    ebp
  425242:	adc    ah,BYTE PTR [esi+0x77]
  425245:	jnp    0x425256
  425247:	and    esp,DWORD PTR [eax+eiz*4-0x52]
  42524b:	xchg   eax,eax
  42524d:	out    dx,al
  42524e:	retf   0x42a6
  425251:	sar    DWORD PTR [edi],cl
  425253:	mov    ch,0xcd
  425255:	aam    0x7b
  425257:	push   eax
  425258:	rol    dh,0x95
  42525b:	pop    edx
  42525c:	mov    ch,BYTE PTR [edx+ebp*4]
  42525f:	jae    0x4252c1
  425261:	or     eax,DWORD PTR [edx-0xe]
  425264:	and    eax,0x34952f09
  425269:	scas   al,BYTE PTR es:[edi]
  42526a:	and    DWORD PTR [ecx],0xffffffed
  42526d:	inc    esp
  42526e:	(bad)  
  42526f:	pop    ecx
  425270:	and    edi,esi
  425272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425273:	jmp    0x7a74:0xec691409
  42527a:	sbb    BYTE PTR [esi+0x5c],bh
  42527d:	xchg   edi,eax
  42527e:	dec    edx
  42527f:	cs add esi,ebx
  425282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425283:	pop    ecx
  425284:	mov    edi,0x51d19307
  425289:	push   ebx
  42528a:	outs   dx,BYTE PTR ds:[esi]
  42528b:	and    eax,0x7dd67b5f
  425290:	pop    eax
  425291:	adc    al,bl
  425293:	pop    eax
  425294:	add    eax,0xd2f2e6d4
  425299:	lods   eax,DWORD PTR ds:[esi]
  42529a:	call   0xde22:0xead9f5ae
  4252a1:	or     esp,DWORD PTR [eax]
  4252a3:	and    dl,BYTE PTR [ebp+0x4e2d787d]
  4252a9:	cmp    eax,0x2c921d1d
  4252ae:	sahf   
  4252af:	std    
  4252b0:	ins    DWORD PTR es:[edi],dx
  4252b1:	out    dx,eax
  4252b2:	adc    DWORD PTR [ebx+ebx*8-0x7e862762],esi
  4252b9:	mov    edi,0x37dba4b0
  4252be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252bf:	dec    ebx
  4252c0:	fdivr  st(6),st
  4252c2:	(bad)  
  4252c4:	call   0x99be8019
  4252c9:	in     eax,dx
  4252ca:	mul    DWORD PTR [edi+0x45]
  4252cd:	jno    0x425322
  4252cf:	(bad)  
  4252d0:	ja     0x42531e
  4252d2:	jecxz  0x4252ef
  4252d4:	es clc 
  4252d6:	adc    eax,0x9ffd5403
  4252db:	xchg   ebx,eax
  4252dc:	push   edx
  4252dd:	and    DWORD PTR [edx],ebp
  4252df:	cmp    al,0x18
  4252e1:	lds    esi,FWORD PTR [ebx+0x658937e4]
  4252e7:	mov    dh,BYTE PTR ds:[edi]
  4252ea:	mov    al,0x4a
  4252ec:	les    edi,FWORD PTR [eax-0x15374fa]
  4252f2:	je     0x42529a
  4252f4:	and    esp,0x17
  4252f7:	outs   dx,DWORD PTR ds:[esi]
  4252f8:	mov    al,0x47
  4252fa:	ror    al,0xb9
  4252fd:	ins    BYTE PTR es:[edi],dx
  4252fe:	mov    eax,ds:0x73245c8a
  425303:	sbb    DWORD PTR [ebp+0x5d],esp
  425306:	ficomp WORD PTR [eax-0x24]
  425309:	mov    esi,0x28719527
  42530e:	std    
  42530f:	sub    DWORD PTR ds:0xb4413638,edx
  425315:	mov    ds:0x8bf5ac79,eax
  42531a:	jno    0x425332
  42531c:	mov    eax,DWORD PTR [edi]
  42531e:	test   al,0xe7
  425320:	fcmovnbe st,st(5)
  425322:	imul   ecx,DWORD PTR [ebx+0x52],0x11
  425326:	jmp    0xeda55428
  42532b:	repz popf 
  42532d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42532e:	push   edi
  42532f:	iret   
  425330:	loope  0x425366
  425332:	adc    BYTE PTR [ecx+esi*2+0x58],ah
  425336:	out    dx,eax
  425337:	pusha  
  425338:	inc    esp
  425339:	jmp    0xc0d0:0xb8940762
  425340:	shr    BYTE PTR [edx],1
  425342:	push   eax
  425343:	dec    esi
  425344:	and    ebp,DWORD PTR ds:0x4ccd9f91
  42534a:	sub    DWORD PTR [ebx],eax
  42534c:	popf   
  42534d:	popa   
  42534e:	in     eax,dx
  42534f:	pop    ebp
  425350:	pop    ebp
  425351:	sahf   
  425352:	and    DWORD PTR [eax-0x67ff5498],edi
  425358:	and    DWORD PTR [edi+0x76],esp
  42535b:	pop    eax
  42535c:	adc    eax,0xa5a6ee75
  425361:	sbb    DWORD PTR [eax-0x54414fb8],ebx
  425367:	nop
  425368:	mov    esi,0x7f5bf5c5
  42536d:	jmp    0x64a25e15
  425372:	inc    ebx
  425373:	add    edx,esp
  425375:	inc    ebp
  425376:	pop    es
  425377:	or     DWORD PTR [esi],ecx
  425379:	(bad)  
  42537a:	bound  edx,QWORD PTR [ebp-0x49]
  42537d:	mov    es,edi
  42537f:	gs xchg esi,eax
  425381:	xchg   DWORD PTR [ecx],edi
  425383:	pop    edx
  425384:	push   ecx
  425385:	addr16 loop 0x42531e
  425388:	lds    esp,FWORD PTR [eax-0x49]
  42538b:	mov    edx,0x7b2c498e
  425390:	lods   eax,DWORD PTR ds:[esi]
  425391:	out    0x2f,eax
  425393:	jg     0x425411
  425395:	pop    edi
  425396:	xor    BYTE PTR [edx+0x22b09312],dl
  42539c:	xchg   ebx,eax
  42539d:	sub    al,0x31
  42539f:	bound  ebp,QWORD PTR [ebx+eiz*2-0x2c]
  4253a3:	sbb    al,0xb1
  4253a5:	and    bl,BYTE PTR [eax+0x1e]
  4253a8:	cs mov esp,0xd3b2c209
  4253ae:	push   0x29c19ba6
  4253b3:	es cmp dh,ch
  4253b6:	in     al,0x14
  4253b8:	mov    cl,0x2e
  4253ba:	test   al,0xe4
  4253bc:	cmc    
  4253bd:	cmp    BYTE PTR [ebp-0x1a2837aa],0xa1
  4253c4:	shr    BYTE PTR ds:0x736747f3,0xa1
  4253cb:	or     ebp,esi
  4253cd:	push   ebx
  4253ce:	pop    esi
  4253cf:	(bad)  
  4253d0:	jne    0x4253b3
  4253d2:	mov    WORD PTR [ebp-0x14],ss
  4253d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d6:	xchg   ecx,eax
  4253d7:	mov    ebp,0xf91bb360
  4253dc:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4253de:	das    
  4253df:	rcr    BYTE PTR [esi],1
  4253e1:	and    BYTE PTR [edx+0x5ff96c4c],cl
  4253e7:	fucomip st,st(7)
  4253e9:	rcl    bl,1
  4253eb:	mov    ds:0x57b0d9b6,eax
  4253f0:	mov    ch,BYTE PTR [ebx+0x55]
  4253f3:	push   ecx
  4253f4:	jne    0x425462
  4253f6:	cwde   
  4253f7:	aaa    
  4253f8:	shr    BYTE PTR [ebx],1
  4253fa:	(bad)  
  4253fc:	pop    edx
  4253fd:	xor    BYTE PTR [ecx-0x100a6fe],cl
  425403:	sbb    eax,0x88fad9a3
  425408:	outs   dx,BYTE PTR ds:[esi]
  425409:	dec    eax
  42540a:	xor    DWORD PTR [ebp-0x7e],esp
  42540d:	adc    eax,0xb94766b4
  425412:	loop   0x425418
  425414:	xchg   edx,eax
  425415:	pushf  
  425416:	adc    eax,0x2ee8bf7
  42541b:	imul   eax,ecx,0xa0e1789
  425421:	repnz cmp ebp,ebx
  425424:	outs   dx,DWORD PTR ds:[esi]
  425425:	jecxz  0x425457
  425427:	jmp    0x42549d
  425429:	jecxz  0x425412
  42542b:	bound  ebp,QWORD PTR [esi-0x16]
  42542e:	neg    DWORD PTR [edi+0x7a7b1702]
  425434:	jmp    0xa77a:0xe1d7cec8
  42543b:	mov    ah,0xf7
  42543d:	cmp    al,0x52
  42543f:	call   0xbc4ca0f4
  425444:	shr    esp,cl
  425446:	dec    eax
  425447:	js     0x4253de
  425449:	lahf   
  42544a:	ins    BYTE PTR es:[edi],dx
  42544b:	and    eax,0x8f07b929
  425450:	jae    0x425451
  425452:	mov    ebp,0xe0b5ad61
  425457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425458:	fwait
  425459:	hlt    
  42545a:	inc    dl
  42545c:	xor    eax,0xb2e9faef
  425461:	cli    
  425462:	adc    DWORD PTR [ebx-0x5d],edi
  425465:	jb     0x425479
  425467:	daa    
  425468:	out    dx,eax
  425469:	in     al,0xc6
  42546b:	xchg   ebp,eax
  42546c:	in     eax,0x8e
  42546e:	ss cmp eax,0x550e048d
  425474:	sbb    bh,dl
  425476:	clc    
  425477:	ror    DWORD PTR [eax-0x2d],0x32
  42547b:	shl    DWORD PTR [ebp+edx*2-0x2e2b1afa],1
  425482:	xchg   edi,eax
  425483:	xchg   bl,ah
  425485:	lahf   
  425486:	in     al,0x83
  425488:	push   edi
  425489:	retf   0x742a
  42548c:	push   ds
  42548d:	cmp    BYTE PTR [eax-0x6a],bl
  425490:	adc    BYTE PTR [edi-0x59b234b0],bh
  425496:	dec    esi
  425497:	enter  0x284d,0xc7
  42549b:	lods   eax,DWORD PTR ds:[esi]
  42549c:	out    0xcb,eax
  42549e:	xchg   ebx,eax
  42549f:	cli    
  4254a0:	mov    ds,WORD PTR [edx-0x33]
  4254a3:	pop    edx
  4254a4:	pushf  
  4254a5:	lea    edi,[edi-0x29ba6dfa]
  4254ab:	maskmovq mm2,mm1
  4254ae:	pushf  
  4254af:	fisubr WORD PTR [ecx-0x21]
  4254b2:	pop    es
  4254b3:	xchg   edi,eax
  4254b4:	jmp    0x4254d7
	...
  4254c2:	inc    eax
  4254c3:	stos   BYTE PTR es:[edi],al
  4254c4:	pop    edx
  4254c5:	sbb    bh,dl
  4254c7:	cli    
  4254c8:	inc    eax
  4254c9:	cli    
  4254ca:	outs   dx,BYTE PTR ds:[esi]
  4254cb:	jmp    0xa4f7:0xf904e400
  4254d2:	jle    0x425499
  4254d4:	add    DWORD PTR [eax],eax
  4254d6:	int3   
  4254d7:	add    al,BYTE PTR [eax]
  4254d9:	add    BYTE PTR [esi],cl
  4254db:	push   es
  4254dc:	arpl   WORD PTR [ebp+0x6b],di
  4254df:	inc    ebx
  4254e0:	rcl    dh,cl
  4254e2:	xchg   DWORD PTR [eax+edi*1+0x40],edx
  4254e6:	out    dx,eax
  4254e7:	std    
  4254e8:	and    ch,0x55
  4254eb:	inc    esp
  4254ec:	adc    al,bl
  4254ee:	fs leave 
  4254f0:	mov    ah,BYTE PTR [esi+eax*4]
  4254f3:	ror    BYTE PTR [edi+eax*8+0x6c],1
  4254f7:	sbb    DWORD PTR [esi],edx
  4254f9:	jp     0x4254c8
  4254fb:	jp     0x4254b8
  4254fd:	add    BYTE PTR [ecx+0x72893bc9],dh
  425503:	mov    ecx,0xcc7d96fe
  425508:	in     eax,dx
  425509:	xchg   DWORD PTR [eax+0x4a9f1482],ebx
  42550f:	inc    edx
  425510:	mov    eax,0x87b5e4c2
  425515:	mov    cl,0x29
  425517:	popa   
  425518:	dec    ecx
  425519:	hlt    
  42551a:	fiadd  DWORD PTR [edx]
  42551c:	mov    dl,0x3a
  42551e:	sub    bh,dh
  425520:	in     al,dx
  425521:	jmp    0x2446:0xd7e73574
  425528:	add    esp,DWORD PTR ds:0x55ee8a8a
  42552e:	push   esp
  42552f:	push   es
  425530:	and    ebx,DWORD PTR [ebx+0x7b]
  425533:	cmp    esp,DWORD PTR [edx]
  425535:	sti    
  425536:	sbb    BYTE PTR [edx],ch
  425538:	pop    edi
  425539:	or     al,0x47
  42553b:	or     eax,0x49f7a51d
  425540:	mov    ah,0xe8
  425542:	in     al,dx
  425543:	xchg   ecx,eax
  425544:	xchg   edi,eax
  425545:	push   ebp
  425546:	popa   
  425547:	jge    0x4255c4
  425549:	dec    esi
  42554a:	sar    BYTE PTR [ecx],cl
  42554c:	nop
  42554d:	scas   al,BYTE PTR es:[edi]
  42554e:	xchg   ebx,eax
  42554f:	ins    DWORD PTR es:[edi],dx
  425550:	pop    es
  425551:	nop
  425552:	aad    0x9b
  425554:	add    BYTE PTR [ebp-0x56],0x48
  425558:	sbb    al,0xc2
  42555a:	adc    BYTE PTR [edi-0x292875ce],ah
  425560:	inc    ebx
  425561:	aas    
  425562:	jl     0x425585
  425564:	not    DWORD PTR [esi-0x71d34fdd]
  42556a:	pop    eax
  42556b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42556c:	inc    ecx
  42556d:	push   esi
  42556e:	pop    ss
  42556f:	mov    edx,DWORD PTR [edx+0x72856112]
  425575:	sahf   
  425576:	jmp    0x9b4497c2
  42557b:	push   es
  42557c:	es push 0x9568c9ba
  425582:	cld    
  425583:	inc    ebx
  425584:	inc    esp
  425585:	inc    ebx
  425586:	add    BYTE PTR [esi],0x73
  425589:	ss pop ecx
  42558b:	loopne 0x425529
  42558d:	jno    0x425597
  42558f:	loope  0x42551d
  425591:	pop    esi
  425592:	xor    edx,DWORD PTR [ebp-0x34928a5b]
  425598:	mov    eax,ds:0x3d8b0993
  42559d:	mul    BYTE PTR [eax]
  42559f:	mov    ebp,0x8d4adf1c
  4255a4:	inc    edx
  4255a5:	xchg   esi,eax
  4255a6:	sub    DWORD PTR [ecx-0x6f1f6a52],esp
  4255ac:	add    DWORD PTR [edi],ebx
  4255ae:	cmp    DWORD PTR [ebx],0xa85ee679
  4255b4:	clc    
  4255b5:	mov    bh,0x16
  4255b7:	sub    DWORD PTR [ebx+edi*4-0x15],ecx
  4255bb:	dec    edx
  4255bc:	stos   DWORD PTR es:[edi],eax
  4255bd:	ds jae 0x4255de
  4255c0:	setbe  BYTE PTR [ecx-0x1b]
  4255c4:	push   ebx
  4255c5:	and    al,0x32
  4255c7:	push   es
  4255c8:	stos   BYTE PTR es:[edi],al
  4255c9:	popf   
  4255ca:	or     bh,ah
  4255cc:	scas   eax,DWORD PTR es:[edi]
  4255cd:	(bad)  
  4255ce:	pop    ss
  4255cf:	mov    ecx,0xa6d3e32a
  4255d4:	jg     0x425602
  4255d6:	mov    cl,0x3c
  4255d8:	mov    eax,0x2efb4cfa
  4255dd:	(bad)  
  4255de:	bound  eax,QWORD PTR [ecx+0x1f]
  4255e1:	sbb    al,0xa
  4255e3:	fucom  st(7)
  4255e5:	sar    cl,1
  4255e7:	xchg   esp,eax
  4255e8:	push   esp
  4255e9:	hlt    
  4255ea:	mov    DWORD PTR [ebp+0x66],ebp
  4255ed:	and    esi,DWORD PTR [ecx]
  4255ef:	push   esi
  4255f0:	popf   
  4255f1:	loop   0x425607
  4255f3:	xchg   ebp,eax
  4255f4:	push   ecx
  4255f5:	pusha  
  4255f6:	out    dx,eax
  4255f7:	sbb    DWORD PTR [edi],edx
  4255f9:	mov    esi,0xbeab54aa
  4255fe:	retf   
  4255ff:	dec    esp
  425600:	out    0xe8,eax
  425602:	out    0x38,al
  425604:	pop    ecx
  425605:	push   edi
  425606:	pop    ecx
  425607:	mov    esi,0xa27323ab
  42560c:	lds    ecx,FWORD PTR [edi]
  42560e:	std    
  42560f:	jbe    0x425673
  425611:	aad    0x32
  425613:	sar    cl,cl
  425615:	adc    eax,0x4eddc67b
  42561a:	mov    al,ds:0xfc7d3955
  42561f:	jl     0x425619
  425621:	mov    dl,0x6c
  425623:	cdq    
  425624:	xchg   DWORD PTR [eax+0x14],esi
  425627:	(bad)  
  425628:	cli    
  425629:	sbb    ebp,edx
  42562b:	jns    0x425603
  42562d:	shr    BYTE PTR ds:0xc49e0645,0xe0
  425634:	xor    DWORD PTR [esi],ecx
  425636:	out    0x33,al
  425638:	nop
  425639:	mov    esi,0x29f1137a
  42563e:	push   0x24729e61
  425643:	les    edx,FWORD PTR [ecx]
  425645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425646:	cmovp  ebp,DWORD PTR [eax-0x7b8bb698]
  42564d:	mov    bl,0xdf
  42564f:	sbb    eax,0x9f37753c
  425654:	cs push ebp
  425656:	xchg   edx,eax
  425657:	jmp    0x4256b6
  425659:	ret    0x7347
  42565c:	ja     0x4256d7
  42565e:	push   esi
  42565f:	aad    0x4d
  425661:	ins    DWORD PTR es:[edi],dx
  425662:	push   ecx
  425663:	dec    eax
  425664:	(bad)  
  425665:	hlt    
  425666:	inc    edi
  425667:	lock and bl,dh
  42566a:	inc    edi
  42566b:	cld    
  42566c:	pop    ebp
  42566d:	dec    dx
  42566f:	scas   al,BYTE PTR es:[edi]
  425670:	lea    ebx,ds:0x746ff653
  425676:	adc    ah,bl
  425678:	fist   DWORD PTR [ecx+eiz*1+0x6b]
  42567c:	or     ebx,esi
  42567e:	mov    edi,0xcd285c6
  425683:	cmp    esi,DWORD PTR [eax+0x77]
  425686:	sbb    BYTE PTR [eax],al
  425688:	mov    WORD PTR [ebp-0x5c423f98],fs
  42568e:	push   0xffffff9f
  425690:	sbb    al,0x1b
  425692:	inc    esp
  425693:	dec    esp
  425694:	daa    
  425695:	test   al,0x87
  425697:	dec    esp
  425698:	push   esi
  425699:	mov    esi,0x22d9af78
  42569e:	into   
  42569f:	jnp    0x42564a
  4256a1:	mov    cl,0xc9
  4256a3:	aad    0xc0
  4256a5:	jl     0x4256a7
  4256a7:	mov    dh,0xa2
  4256a9:	icebp  
  4256aa:	sub    al,0x80
  4256ac:	cs mov dh,0xb1
  4256af:	(bad)
  4256b5:	aam    0xe0
  4256b7:	pop    esi
  4256b8:	pop    eax
  4256b9:	sub    eax,0x72eecc56
  4256be:	pop    es
  4256bf:	je     0x42572e
  4256c1:	xor    eax,0xe624a0d5
  4256c6:	(bad)  
  4256c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256c8:	and    al,0x2d
  4256ca:	std    
  4256cb:	xor    eax,DWORD PTR [ebp+0x37]
  4256ce:	cs xor eax,0x7825b313
  4256d4:	mov    es,WORD PTR [edx+0xfbeefb5]
  4256da:	mov    bl,BYTE PTR [edx-0x9]
  4256dd:	enter  0x25df,0x90
  4256e1:	out    0x18,al
  4256e3:	add    DWORD PTR [edx-0x3f],ebp
  4256e6:	push   0x2a0f0b5c
  4256eb:	push   edx
  4256ec:	iret   
  4256ed:	sub    al,cl
  4256ef:	adc    BYTE PTR [edi-0x73144614],dl
  4256f5:	inc    esi
  4256f6:	enter  0x350c,0x82
  4256fa:	mov    esp,ebp
  4256fc:	outs   dx,DWORD PTR ds:[esi]
  4256fd:	ins    DWORD PTR es:[edi],dx
  4256fe:	test   eax,0x9c4db9d7
  425704:	sub    al,0xf1
  425706:	adc    eax,0xb62fba46
  42570b:	jnp    0x425768
  42570d:	in     al,dx
  42570e:	adc    al,0x65
  425710:	idiv   DWORD PTR [ebp-0x17]
  425713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425714:	inc    esp
  425715:	clc    
  425716:	fiadd  DWORD PTR [ebp-0x4b]
  425719:	fs mov dh,0x61
  42571c:	ins    BYTE PTR es:[edi],dx
  42571d:	xchg   DWORD PTR [ecx-0x2aef4511],esp
  425723:	mov    esi,0x7842bd94
  425728:	jge    0x425770
  42572a:	inc    ebp
  42572b:	int    0x1c
  42572d:	add    al,0x67
  42572f:	adc    DWORD PTR [ebx+edx*4-0x4c6a6ace],esp
  425736:	loop   0x4256db
  425738:	inc    ecx
  425739:	imul   DWORD PTR [eax]
  42573b:	mov    esp,0xa2b6e5c7
  425740:	xchg   edi,eax
  425741:	in     eax,dx
  425742:	sbb    al,0x9
  425744:	imul   BYTE PTR [esi-0x3bdb1ed3]
  42574a:	xor    al,0x25
  42574c:	or     eax,DWORD PTR [ecx]
  42574e:	mov    al,0xef
  425750:	jns    0x42573b
  425752:	lds    edi,FWORD PTR [edx-0x69]
  425755:	dec    esp
  425756:	cwde   
  425757:	pop    esp
  425758:	mul    esi
  42575a:	int3   
  42575b:	xor    dh,ch
  42575d:	int3   
  42575e:	adc    eax,0x62302415
  425763:	dec    edx
  425764:	mov    ebp,0xf4e9f7c1
  425769:	xchg   edx,eax
  42576a:	loope  0x42570a
  42576c:	pop    edi
  42576d:	ds jae 0x4257d0
  425770:	jg     0x4257a7
  425772:	out    0x98,eax
  425774:	adc    DWORD PTR [edx+0x5a],edx
  425777:	or     al,al
  425779:	ja     0x4257d7
  42577b:	aas    
  42577c:	pop    edx
  42577d:	(bad)  
  42577e:	mov    ecx,0xc1cb7a1e
  425783:	sbb    cl,BYTE PTR [ebx-0x2a]
  425786:	cmp    BYTE PTR [esi],bl
  425788:	push   eax
  425789:	test   al,0xab
  42578c:	rcl    BYTE PTR [ecx-0x26350d88],1
  425792:	pop    esp
  425793:	mov    ?,WORD PTR [esi]
  425795:	ds push ds
  425797:	inc    ebp
  425798:	pop    ds
  425799:	mov    ebx,fs
  42579b:	mov    ch,0x83
  42579d:	aad    0xed
  42579f:	mov    cl,0x5d
  4257a1:	mov    ah,BYTE PTR [eax+0x22]
  4257a4:	lods   al,BYTE PTR ds:[esi]
  4257a5:	data16 add BYTE PTR [eax],al
	...
  4257b0:	add    BYTE PTR [eax],al
  4257b2:	mov    dh,0xe4
  4257b4:	xlat   BYTE PTR ds:[ebx]
  4257b5:	push   esp
  4257b6:	xlat   BYTE PTR ds:[ebx]
  4257b7:	ja     0x425770
  4257b9:	out    0xf3,al
  4257bb:	ss icebp 
  4257bd:	mov    esp,0x483e4e7a
  4257c2:	dec    edx
  4257c3:	enter  0x1,0xcc
  4257c7:	add    al,BYTE PTR [eax]
  4257c9:	add    BYTE PTR [ebx],ah
  4257cb:	push   edi
  4257cc:	sub    eax,0xdddce1c
  4257d1:	jl     0x425795
  4257d3:	mul    BYTE PTR [ebp-0x50]
  4257d6:	inc    ebp
  4257d7:	mov    edi,DWORD PTR [ebp+0x39]
  4257da:	cmp    eax,0xf1f41c96
  4257df:	popf   
  4257e0:	call   0x97ea:0xe384ffd0
  4257e7:	sub    DWORD PTR [edx+eax*4],ebp
  4257ea:	scas   eax,DWORD PTR es:[edi]
  4257eb:	mov    ebp,DWORD PTR [ecx+0x3aad17fb]
  4257f1:	data16 jecxz 0x425848
  4257f4:	(bad)  
  4257f5:	(bad)  
  4257f6:	test   dh,ah
  4257f8:	lahf   
  4257f9:	das    
  4257fa:	add    al,BYTE PTR [ebp-0x6f]
  4257fd:	inc    esp
  4257fe:	adc    DWORD PTR [eax-0x3],esp
  425801:	inc    edx
  425802:	sahf   
  425803:	mov    BYTE PTR [ebp+0x72e4d600],ah
  425809:	icebp  
  42580a:	pop    esp
  42580b:	retf   
  42580c:	xchg   edx,eax
  42580d:	xchg   edi,eax
  42580e:	sti    
  42580f:	(bad)  
  425810:	ins    DWORD PTR es:[edi],dx
  425811:	cmp    BYTE PTR [ebp-0x474041b7],bh
  425817:	mov    dh,0x1
  425819:	pop    ds
  42581a:	pop    ebp
  42581b:	jmp    0xff72:0x8189037d
  425822:	dec    edi
  425823:	sbb    esi,DWORD PTR [edi-0x4a7d5122]
  425829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42582a:	ja     0x4257c6
  42582c:	mov    ch,0xac
  42582e:	call   0x42f5d0ac
  425833:	outs   dx,BYTE PTR ds:[esi]
  425834:	inc    esi
  425835:	iret   
  425836:	test   DWORD PTR [ebp-0x57f4cbba],edi
  42583c:	gs mov esi,0x11e4656d
  425842:	(bad)
  425845:	lea    ecx,[edi+0x36932926]
  42584b:	repnz adc al,0x57
  42584e:	lahf   
  42584f:	enter  0xb10f,0x6f
  425853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425854:	ror    eax,cl
  425856:	fsubr  st(0),st
  425858:	scas   al,BYTE PTR es:[edi]
  425859:	sbb    eax,0xf559014f
  42585e:	pop    edi
  42585f:	push   ds
  425860:	mov    esi,0xe54f9c5e
  425865:	iret   
  425866:	mov    ecx,0x8f9403ba
  42586b:	leave  
  42586c:	loopne 0x425871
  42586e:	push   esi
  42586f:	cmp    esi,ebp
  425871:	xor    ah,bl
  425873:	daa    
  425874:	iret   
  425875:	lods   al,BYTE PTR ds:[esi]
  425876:	fstp   TBYTE PTR [ecx-0x1e]
  425879:	pop    ds
  42587a:	jp     0x425800
  42587c:	ror    edi,0xbc
  42587f:	shl    DWORD PTR [ebx],0x3d
  425882:	adc    al,0xff
  425884:	ror    BYTE PTR [eax-0x53],cl
  425887:	in     eax,0xf
  425889:	scas   eax,DWORD PTR es:[edi]
  42588a:	dec    eax
  42588b:	sbb    BYTE PTR ds:0x9f74d7ab,ah
  425891:	jp     0x425827
  425893:	(bad)  
  425895:	jmp    0x425898
  425897:	ret    
  425898:	mov    bl,0x26
  42589a:	dec    edx
  42589b:	mov    ch,0x48
  42589d:	ret    0x4c28
  4258a0:	dec    edx
  4258a1:	or     BYTE PTR [ebp+eax*4+0x597ac602],ah
  4258a8:	xchg   ebx,eax
  4258a9:	jne    0x425851
  4258ab:	outs   dx,DWORD PTR ds:[esi]
  4258ac:	pop    ecx
  4258ad:	or     eax,0xcafd587b
  4258b2:	outs   dx,DWORD PTR ds:[esi]
  4258b3:	xor    al,0xff
  4258b5:	ror    BYTE PTR [edx],cl
  4258b7:	mov    ch,0xa1
  4258b9:	push   ebx
  4258ba:	adc    edx,DWORD PTR [ebx-0x46]
  4258bd:	xchg   DWORD PTR [edi],esp
  4258bf:	(bad)  
  4258c0:	(bad)  
  4258c1:	xor    eax,0x18424bd4
  4258c6:	mov    esp,0x9d1bca0e
  4258cb:	adc    al,0xd1
  4258cd:	lds    edi,FWORD PTR [ecx]
  4258cf:	movups xmm3,XMMWORD PTR [ebx]
  4258d2:	in     eax,0xa4
  4258d4:	add    ah,BYTE PTR [ebp-0x4ce41280]
  4258da:	adc    BYTE PTR [ecx-0x1c],dl
  4258dd:	lods   al,BYTE PTR ds:[esi]
  4258de:	mov    edi,0xaa5de264
  4258e3:	outs   dx,DWORD PTR ds:[esi]
  4258e4:	inc    edi
  4258e5:	dec    ecx
  4258e6:	in     al,0x84
  4258e8:	sbb    eax,0x32f8749e
  4258ed:	add    eax,0x5f4c169e
  4258f2:	pusha  
  4258f3:	adc    esi,DWORD PTR [ebp+edx*2-0x61f6e658]
  4258fa:	jmp    0xc24f:0x171ba098
  425901:	or     al,0x57
  425903:	mov    ds:0x1a4ad665,al
  425908:	std    
  425909:	into   
  42590a:	leave  
  42590b:	adc    eax,0xa90f8442
  425910:	mov    cs,WORD PTR [edi+0x488420e4]
  425916:	lahf   
  425917:	sbb    al,0xcb
  425919:	dec    ebx
  42591a:	dec    edx
  42591b:	push   es
  42591c:	xor    esi,ebx
  42591e:	sbb    BYTE PTR ds:0x22166031,bl
  425924:	mov    esp,0xc2c592e8
  425929:	arpl   WORD PTR ds:0x3afbc4dc,sp
  42592f:	cmp    BYTE PTR [esi+esi*2+0x721f4a67],bh
  425936:	fimul  WORD PTR [ecx-0x8]
  425939:	inc    ebx
  42593a:	xor    eax,0x318345a
  42593f:	cdq    
  425940:	xchg   BYTE PTR [edi-0x4],ch
  425943:	xchg   ecx,eax
  425944:	call   0x5e68:0x47187b7e
  42594b:	sti    
  42594c:	and    BYTE PTR [ebx-0x6e],bh
  42594f:	pop    esi
  425950:	pop    edx
  425951:	sbb    DWORD PTR [edx+ebx*2+0x1d88d61e],ebx
  425958:	add    ebx,DWORD PTR [edx]
  42595a:	add    eax,0x585c8af8
  42595f:	int3   
  425960:	and    ebx,DWORD PTR [esi]
  425962:	sub    ah,BYTE PTR [esi]
  425964:	cdq    
  425965:	jo     0x4259de
  425967:	xor    al,0x46
  425969:	adc    al,0xba
  42596b:	mov    al,ds:0x29356948
  425970:	in     eax,0x40
  425972:	cmp    BYTE PTR [ebx],cl
  425974:	in     eax,0x77
  425976:	sbb    ecx,DWORD PTR [edx+0x72d4dbe5]
  42597c:	fs xchg esp,eax
  42597e:	lea    ebx,[ebx+0x1b]
  425981:	jb     0x4259bb
  425983:	pop    ebx
  425984:	in     al,dx
  425985:	dec    ecx
  425986:	jo     0x42592b
  425988:	mov    dh,0x7
  42598a:	ins    BYTE PTR es:[edi],dx
  42598b:	retf   0xa5a5
  42598e:	loope  0x425934
  425990:	mov    ebp,0x979ee3bc
  425995:	jge    0x4259d9
  425997:	push   ss
  425998:	mov    ecx,0x2c72fd25
  42599d:	xor    BYTE PTR [edi+0x4853b1fb],0x17
  4259a4:	mov    ecx,0x742b2351
  4259a9:	inc    ecx
  4259aa:	arpl   WORD PTR [ebp+ebp*2-0x31948cd3],dx
  4259b1:	xchg   edi,eax
  4259b2:	out    0xcc,eax
  4259b4:	loope  0x425a2e
  4259b6:	das    
  4259b7:	in     al,dx
  4259b8:	fsubp  st(6),st
  4259ba:	xor    dh,BYTE PTR [edx]
  4259bc:	sti    
  4259bd:	or     DWORD PTR [ebp+0x4f],edx
  4259c0:	dec    ebx
  4259c1:	push   ebx
  4259c2:	push   esi
  4259c3:	dec    edi
  4259c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259c5:	call   0xcad6da27
  4259ca:	(bad)  
  4259cb:	std    
  4259cc:	pushf  
  4259cd:	dec    edx
  4259ce:	cld    
  4259cf:	sub    DWORD PTR [edx-0x47],ebx
  4259d2:	mov    al,0xfe
  4259d4:	test   esp,edx
  4259d6:	int3   
  4259d7:	dec    eax
  4259d8:	xchg   BYTE PTR [eax-0x1b7ab05a],bl
  4259de:	cmp    al,0x46
  4259e0:	push   0xcf097e3
  4259e5:	icebp  
  4259e6:	clc    
  4259e7:	cmp    esi,DWORD PTR [eax]
  4259e9:	cdq    
  4259ea:	arpl   WORD PTR [ecx-0x72937cf],si
  4259f0:	fld    DWORD PTR [esi]
  4259f2:	daa    
  4259f3:	je     0x425a1a
  4259f5:	pop    es
  4259f6:	call   0x8203:0x2cc10abc
  4259fd:	test   al,0xca
  4259ff:	mov    edx,0x3306899f
  425a04:	cmp    esp,DWORD PTR [ebx-0x61c60ce3]
  425a0a:	out    0x4f,al
  425a0c:	js     0x4259bd
  425a0e:	cmp    al,0x90
  425a10:	xchg   ecx,eax
  425a11:	and    ebp,DWORD PTR [edi]
  425a13:	hlt    
  425a14:	sti    
  425a15:	rcl    dl,0x91
  425a18:	int    0xad
  425a1a:	xor    esi,ebp
  425a1c:	mov    cl,BYTE PTR [eax-0x6c]
  425a1f:	xchg   BYTE PTR [esi-0x6df62960],dh
  425a25:	mov    ah,0x76
  425a27:	sub    al,0x2e
  425a29:	mov    edi,0x29d27103
  425a2e:	mov    al,0x4d
  425a30:	mov    ebp,0x3379be83
  425a35:	pop    ebx
  425a36:	nop
  425a37:	cmp    al,0xba
  425a39:	sbb    esp,DWORD PTR [edi]
  425a3b:	in     eax,0x82
  425a3d:	mov    al,0x98
  425a3f:	dec    edx
  425a40:	nop
  425a41:	dec    edi
  425a42:	into   
  425a43:	cmp    DWORD PTR [esi+0x45],edx
  425a46:	cmp    eax,0xab9f699
  425a4b:	pop    ss
  425a4c:	xchg   BYTE PTR [ebp-0xbb594e2],dh
  425a52:	pop    esi
  425a53:	(bad)  
  425a55:	(bad)
  425a59:	xor    BYTE PTR [edi-0x408feb1b],bl
  425a5f:	pushf  
  425a60:	and    al,0xee
  425a62:	mov    fs,WORD PTR [edi-0x68]
  425a65:	imul   edi,DWORD PTR [ecx+0x27ad0651],0xffffffe9
  425a6c:	popa   
  425a6d:	cmp    ebx,DWORD PTR [eax]
  425a6f:	je     0x425a04
  425a71:	xor    esi,eax
  425a73:	adc    bh,BYTE PTR [edx-0x4cc4f691]
  425a79:	mov    al,0x47
  425a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a7c:	adc    al,0x99
  425a7e:	push   ecx
  425a7f:	scas   eax,DWORD PTR es:[edi]
  425a80:	or     BYTE PTR [eax+0x67],cl
  425a83:	add    al,0x75
  425a85:	mov    ebx,0x6a64c075
  425a8a:	lea    esp,[eax-0x69]
  425a8d:	mov    edx,DWORD PTR [edx+ecx*8+0x28]
  425a91:	xchg   edi,eax
  425a92:	push   edi
  425a93:	test   DWORD PTR ds:0x12,ebx
	...
  425aa1:	add    dl,bh
  425aa3:	rcl    DWORD PTR ds:0xfac73d07,cl
  425aa9:	push   DWORD PTR ds:0x991c7bfe
  425aaf:	and    al,0x25
  425ab1:	loope  0x425ac9
  425ab3:	retf   
  425ab4:	add    DWORD PTR [eax],eax
  425ab6:	int3   
  425ab7:	add    al,BYTE PTR [eax]
  425ab9:	add    BYTE PTR [edi+edi*1+0x43393401],cl
  425ac0:	outs   dx,DWORD PTR ds:[esi]
  425ac1:	inc    eax
  425ac2:	sub    DWORD PTR [eax-0x7],ebp
  425ac5:	fistp  WORD PTR [eax+eax*8-0x78]
  425ac9:	fistp  QWORD PTR [esp+esi*1-0x29]
  425acd:	leave  
  425ace:	push   edi
  425acf:	int3   
  425ad0:	add    eax,0x2d1af3fe
  425ad5:	sahf   
  425ad6:	out    0x1a,eax
  425ad8:	push   edx
  425ad9:	and    al,0x8
  425adb:	push   ds
  425adc:	fisttp WORD PTR [ecx+eiz*1]
  425adf:	and    DWORD PTR [ecx+0x521a2678],edx
  425ae5:	cmp    BYTE PTR [ecx-0x28],ah
  425ae8:	mov    dl,0x4e
  425aea:	mov    ch,0xe4
  425aec:	mov    BYTE PTR ds:0x1be9749e,ch
  425af2:	sub    BYTE PTR [ecx-0x1dee5e34],ah
  425af8:	inc    esp
  425af9:	stos   DWORD PTR es:[edi],eax
  425afa:	lea    ecx,[ebp-0x23]
  425afd:	jae    0x425a8c
  425aff:	dec    esp
  425b00:	out    0xfe,al
  425b02:	mov    ds:0x4a7bdf78,eax
  425b07:	mov    WORD PTR [eax+0x4f795fa4],cs
  425b0d:	dec    esi
  425b0e:	sbb    esi,DWORD PTR [eax-0x7c]
  425b11:	rcl    DWORD PTR [ebp+0x64c6779b],cl
  425b17:	aaa    
  425b18:	(bad)  
  425b19:	fadd   QWORD PTR [edi+edx*2+0x30]
  425b1d:	adc    eax,0x2adbc440
  425b22:	les    ebp,FWORD PTR [esi+0x4910f07]
  425b28:	sahf   
  425b29:	mov    edx,0x1a1a28a0
  425b2e:	jmp    DWORD PTR [ebp+0x48d7d372]
  425b34:	mov    al,0x63
  425b36:	fiadd  WORD PTR [ebp-0x532c0b29]
  425b3c:	cld    
  425b3d:	push   ss
  425b3e:	fisub  WORD PTR [esi-0x37]
  425b41:	pushf  
  425b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b43:	cs push edi
  425b45:	gs jb  0x425b04
  425b48:	lahf   
  425b49:	cmp    eax,DWORD PTR [edi+eiz*1]
  425b4c:	fld    QWORD PTR [ecx-0x29d29e3f]
  425b52:	inc    edx
  425b53:	nop
  425b54:	push   ecx
  425b55:	in     eax,0x36
  425b57:	es push edx
  425b59:	mov    ss:0x1e9aa94,eax
  425b5f:	(bad)  
  425b60:	repnz loop 0x425b96
  425b63:	data16 jne 0x425aeb
  425b66:	cld    
  425b67:	imul   edi,ebp,0xffffffd4
  425b6a:	jg     0x425b65
  425b6c:	ja     0x425be2
  425b6e:	loop   0x425bb8
  425b70:	dec    ecx
  425b71:	or     al,0x80
  425b73:	ins    BYTE PTR es:[edi],dx
  425b74:	push   0xffffffc5
  425b76:	xlat   BYTE PTR ds:[ebx]
  425b77:	and    DWORD PTR [ecx-0x32],ebp
  425b7a:	(bad)  
  425b7b:	call   DWORD PTR [esi]
  425b7d:	cld    
  425b7e:	adc    cl,BYTE PTR [eax+0x58568571]
  425b84:	adc    DWORD PTR [ecx-0x3e4a4c6],eax
  425b8a:	imul   edx,esi,0x83a886d5
  425b90:	xchg   BYTE PTR [esp+esi*2-0x19],al
  425b94:	xchg   esp,eax
  425b95:	or     al,0x5a
  425b97:	adc    eax,0xdde58ed8
  425b9c:	push   cs
  425b9d:	lock loope 0x425bff
  425ba0:	leave  
  425ba1:	repz sar ch,cl
  425ba4:	(bad)  
  425ba5:	sbb    esp,DWORD PTR [ebx+esi*8-0x7]
  425ba9:	cli    
  425baa:	push   esi
  425bab:	aad    0x62
  425bad:	and    ebx,ebx
  425baf:	cmp    al,0xbc
  425bb1:	xor    al,0x17
  425bb3:	sub    al,0xa3
  425bb5:	push   esp
  425bb6:	in     al,dx
  425bb7:	dec    esp
  425bb8:	dec    edi
  425bb9:	lds    eax,FWORD PTR [ebx]
  425bbb:	and    bh,ch
  425bbd:	call   0x827:0x71a56743
  425bc4:	mov    ebx,0x94891607
  425bc9:	mov    ecx,DWORD PTR [ebp-0xe]
  425bcc:	ret    0x9390
  425bcf:	jecxz  0x425bd7
  425bd1:	dec    edx
  425bd2:	add    ebx,DWORD PTR [esi+0x5e56b58c]
  425bd8:	or     ebp,ecx
  425bda:	inc    esp
  425bdb:	jp     0x425b74
  425bdd:	dec    ebp
  425bde:	and    DWORD PTR [edi+0x7fa0597d],ebx
  425be4:	popf   
  425be5:	add    eax,0x79dba608
  425bea:	mov    DWORD PTR [edx-0x43],edx
  425bed:	add    BYTE PTR [ebx],dl
  425bef:	jo     0x425bb4
  425bf1:	fs in  eax,0x5f
  425bf4:	retf   
  425bf5:	lods   eax,DWORD PTR ds:[esi]
  425bf6:	sub    BYTE PTR [edx+0xdf65ec4],bl
  425bfc:	push   ss
  425bfd:	sub    ecx,edx
  425bff:	repz fidivr WORD PTR [edi+0x37]
  425c03:	fcos   
  425c05:	sub    ebx,DWORD PTR [eax]
  425c07:	jbe    0x425c32
  425c09:	inc    esi
  425c0a:	mov    dl,0xb8
  425c0c:	shl    BYTE PTR [edx],0xc3
  425c0f:	mov    ds:0xdaf2d9a1,al
  425c14:	fwait
  425c15:	push   esp
  425c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c17:	sbb    DWORD PTR [esi],edi
  425c19:	arpl   WORD PTR [si],bp
  425c1c:	sub    al,BYTE PTR [ecx-0x312bb01c]
  425c22:	(bad)  
  425c23:	push   esp
  425c24:	rcl    esp,cl
  425c26:	rcl    DWORD PTR [ebp-0x47],cl
  425c29:	sete   BYTE PTR [eax+0x74e1317]
  425c30:	arpl   WORD PTR [edi],ax
  425c32:	int    0xb
  425c34:	in     eax,0x6e
  425c36:	std    
  425c37:	xchg   ebp,eax
  425c38:	mov    edx,0xee3a1b56
  425c3d:	ret    0x3393
  425c40:	sbb    DWORD PTR [ecx+0x144c868b],edi
  425c46:	loopne 0x425bee
  425c48:	lods   eax,DWORD PTR ds:[esi]
  425c49:	mov    BYTE PTR [ebx],bl
  425c4b:	loope  0x425c95
  425c4d:	and    BYTE PTR [edx+edi*4],dh
  425c50:	fimul  WORD PTR [edi]
  425c52:	mov    al,0xb1
  425c54:	cmp    DWORD PTR [esi+eax*2+0x77],eax
  425c58:	xchg   ecx,eax
  425c59:	fistp  DWORD PTR [esi]
  425c5b:	xchg   edx,eax
  425c5c:	adc    DWORD PTR [edi+eiz*8],ecx
  425c5f:	popf   
  425c60:	jmp    0x2a0e45c
  425c65:	dec    ebp
  425c66:	pop    ss
  425c67:	mov    eax,ds:0x827c2ad9
  425c6c:	xchg   ecx,eax
  425c6d:	inc    ebp
  425c6e:	call   0x1cc7:0x8f24b62a
  425c75:	mov    ecx,0x968f2b9f
  425c7a:	jne    0x425c79
  425c7c:	push   0x896dfaa
  425c81:	ret    
  425c82:	cmc    
  425c83:	sbb    al,0xb2
  425c85:	push   ebp
  425c86:	xchg   DWORD PTR [eax-0x51],esi
  425c89:	dec    ebp
  425c8a:	xchg   ebx,eax
  425c8b:	and    ah,BYTE PTR [ebp+0x7f]
  425c8e:	jg     0x425cb6
  425c90:	js     0x425ce1
  425c92:	es stc 
  425c94:	or     DWORD PTR [ecx+0x29],edi
  425c97:	lahf   
  425c98:	dec    esi
  425c99:	adc    ebp,edi
  425c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c9c:	dec    esp
  425c9d:	mov    eax,ds:0xd4f4d4d1
  425ca2:	pop    es
  425ca3:	out    dx,al
  425ca4:	sbb    DWORD PTR [ebp-0x2b9a078b],edi
  425caa:	xor    al,0xf1
  425cac:	mov    edx,0x60ecb6a1
  425cb1:	inc    esi
  425cb2:	mov    esp,0xabd23ab3
  425cb7:	and    cl,BYTE PTR [edx+eiz*2-0x27f9e4a9]
  425cbe:	(bad)  
  425cbf:	mov    edx,0xa71de2e3
  425cc4:	xchg   BYTE PTR [ebp-0x5fadbfab],bh
  425cca:	pusha  
  425ccb:	jge    0x425d1d
  425ccd:	gs pusha 
  425ccf:	pusha  
  425cd0:	sub    DWORD PTR [edi],0xee8566e6
  425cd6:	neg    BYTE PTR [ecx+0x23]
  425cd9:	(bad)  
  425cda:	pusha  
  425cdb:	jne    0x425d21
  425cdd:	push   edx
  425cde:	add    DWORD PTR ds:0xd19c1030,ebp
  425ce4:	test   edi,ebx
  425ce6:	shl    esp,0xc1
  425ce9:	(bad)  
  425cea:	pop    ss
  425ceb:	mov    bl,0xe8
  425ced:	sbb    al,0x97
  425cef:	out    dx,eax
  425cf0:	xor    esi,DWORD PTR [ebx]
  425cf2:	pop    edi
  425cf3:	pop    ds
  425cf4:	push   esp
  425cf5:	repnz xchg ebx,eax
  425cf7:	stc    
  425cf8:	push   0x22
  425cfa:	inc    edi
  425cfb:	es ror edx,cl
  425cfe:	fwait
  425cff:	in     al,0x90
  425d01:	sbb    eax,0xee7b37da
  425d06:	mov    gs,WORD PTR [eax-0x4b]
  425d09:	mov    ecx,0x266c13bc
  425d0e:	pop    es
  425d0f:	mov    WORD PTR [ebp+0x26db0916],cs
  425d15:	jge    0x425d73
  425d17:	pop    ss
  425d18:	or     al,BYTE PTR [esi-0x51]
  425d1b:	lods   eax,DWORD PTR ds:[esi]
  425d1c:	fwait
  425d1d:	scas   al,BYTE PTR es:[edi]
  425d1e:	fistp  QWORD PTR [ebx-0x498adbd7]
  425d24:	lea    esp,ds:0xdb4c9aa8
  425d2a:	or     BYTE PTR [ebx+0xd],ah
  425d2d:	cdq    
  425d2e:	std    
  425d2f:	mov    eax,0x3860823
  425d34:	dec    edi
  425d35:	repnz inc ebp
  425d37:	repz dec esi
  425d39:	ins    BYTE PTR es:[edi],dx
  425d3a:	mov    eax,ds:0x6817e0a0
  425d3f:	dec    edi
  425d40:	arpl   sp,bp
  425d42:	mov    bl,0xe8
  425d44:	jmp    0x24fb72cb
  425d49:	push   edx
  425d4a:	fimul  DWORD PTR [eax]
  425d4c:	(bad)  
  425d4d:	cmp    edx,DWORD PTR [ebx+0x1e]
  425d50:	int3   
  425d51:	push   ss
  425d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d53:	int    0x54
  425d55:	test   eax,0x56007ab8
  425d5a:	jbe    0x425dbe
  425d5c:	and    ax,0xa254
  425d60:	je     0x425dae
  425d62:	mov    ds:0x2712e921,al
  425d67:	dec    BYTE PTR [edx+esi*4+0x3836b202]
  425d6e:	mov    ebp,0xa45f6ed3
  425d73:	cs mov eax,0xc5c723e4
  425d79:	test   eax,0xc73bf86b
  425d7e:	mov    bl,0xfe
  425d80:	or     DWORD PTR [eax+edx*1-0x6f],edi
  425d84:	or     dh,0x0
	...
  425d8f:	add    BYTE PTR [eax],al
  425d91:	add    bh,cl
  425d93:	neg    BYTE PTR [ebp-0x308442b0]
  425d99:	(bad)  
  425d9a:	out    dx,eax
  425d9b:	lods   al,BYTE PTR ds:[esi]
  425d9c:	(bad)  
  425d9d:	push   ss
  425d9e:	popa   
  425d9f:	popa   
  425da0:	push   ss
  425da1:	ins    DWORD PTR es:[edi],dx
  425da2:	loop   0x425d71
  425da4:	add    DWORD PTR [eax],eax
  425da6:	int3   
  425da7:	add    al,BYTE PTR [eax]
  425da9:	add    BYTE PTR [ebp+0x5d],al
  425dac:	adc    DWORD PTR [ebx+0x45b2d969],ebp
  425db2:	mov    ebx,0x3b5c982a
  425db7:	(bad)  
  425db8:	jb     0xd1746c6c
  425dbe:	xor    al,0xcd
  425dc0:	rcl    bh,0xf0
  425dc3:	dec    ebx
  425dc4:	xchg   ebx,eax
  425dc5:	jge    0x425d60
  425dc7:	and    dh,BYTE PTR [esi]
  425dc9:	mul    BYTE PTR [edi-0x6630d3dd]
  425dcf:	push   edi
  425dd0:	and    eax,0x745a1632
  425dd5:	xchg   esp,eax
  425dd6:	retf   0xcb02
  425dd9:	in     al,dx
  425dda:	ficom  WORD PTR [ebx]
  425ddc:	dec    DWORD PTR [edi+0x5bc8c6ca]
  425de2:	stos   DWORD PTR es:[edi],eax
  425de3:	push   0xffffffc3
  425de5:	mov    eax,0x5c421fdb
  425dea:	xor    edi,esp
  425dec:	mov    DWORD PTR [edx-0x76a5e0c3],edi
  425df2:	pusha  
  425df3:	jb     0x425d84
  425df5:	add    ebx,ebp
  425df7:	sbb    al,0x81
  425df9:	jbe    0x425d8b
  425dfb:	sbb    ah,BYTE PTR [ebx-0x3d]
  425dfe:	or     eax,0x9371b1e0
  425e03:	gs in  eax,0xaa
  425e06:	(bad)  
  425e07:	adc    al,0xf8
  425e09:	cld    
  425e0a:	sti    
  425e0b:	pop    ss
  425e0c:	jg     0x425db6
  425e0e:	sti    
  425e0f:	stos   DWORD PTR es:[edi],eax
  425e10:	mov    edi,0x8998de1b
  425e15:	and    al,BYTE PTR [ecx+0x957cde8]
  425e1b:	retf   
  425e1c:	mov    eax,ds:0x2563f65e
  425e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e22:	xor    BYTE PTR [ebx+0x69],0x1
  425e26:	cmp    BYTE PTR [eax-0x2c6a285b],ah
  425e2c:	cwde   
  425e2d:	fisttp DWORD PTR ds:0x9cdddacb
  425e33:	pop    ss
  425e34:	add    esp,esp
  425e36:	inc    edi
  425e37:	std    
  425e38:	sub    ah,ah
  425e3a:	and    ah,ch
  425e3c:	fsubp  st(1),st
  425e3e:	pusha  
  425e3f:	hlt    
  425e40:	xor    ebp,DWORD PTR [edx+0x29]
  425e43:	jp     0x425dc8
  425e45:	pop    edi
  425e46:	into   
  425e47:	mov    ebx,0xca0268fe
  425e4c:	mov    eax,0x13d6639b
  425e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e53:	pop    es
  425e54:	xchg   esi,eax
  425e55:	pop    ecx
  425e56:	outs   dx,BYTE PTR ds:[esi]
  425e57:	cdq    
  425e58:	inc    esp
  425e59:	cli    
  425e5a:	cld    
  425e5b:	push   es
  425e5c:	rcr    BYTE PTR [ebx+eiz*4+0x2ab916e7],1
  425e63:	pop    edi
  425e64:	(bad)  
  425e65:	dec    ebx
  425e66:	add    eax,0x3862e1a8
  425e6b:	sub    bh,ch
  425e6d:	(bad)  
  425e6e:	add    al,0x5a
  425e70:	pushf  
  425e71:	int3   
  425e72:	inc    ebp
  425e73:	mov    ch,0x2b
  425e75:	adc    eax,DWORD PTR [edx+0x52]
  425e78:	outs   dx,BYTE PTR ds:[esi]
  425e79:	xchg   ebp,eax
  425e7a:	mov    al,0xb8
  425e7c:	clc    
  425e7d:	es gs int3 
  425e80:	sbb    bl,BYTE PTR [ebp-0x1f]
  425e83:	rol    ebp,0x8d
  425e86:	jg     0x425ebf
  425e88:	fmulp  st(6),st
  425e8a:	mov    ebp,0xd933b5df
  425e8f:	aas    
  425e90:	jne    0x425e18
  425e92:	pop    esp
  425e93:	stos   DWORD PTR es:[edi],eax
  425e94:	dec    esp
  425e95:	mov    eax,0x8931acdf
  425e9a:	lods   eax,DWORD PTR ds:[esi]
  425e9b:	es jecxz 0x425eb4
  425e9e:	adc    eax,0x2c905b6c
  425ea3:	pop    esp
  425ea4:	sbb    esp,DWORD PTR [esp+eax*4+0x3f5b0b77]
  425eab:	adc    DWORD PTR [edx+0x6f],esi
  425eae:	cli    
  425eaf:	pushf  
  425eb0:	inc    esp
  425eb1:	dec    ebp
  425eb2:	jmp    0x425ee4
  425eb4:	(bad)  
  425eb5:	cwde   
  425eb6:	push   esi
  425eb7:	inc    edx
  425eb8:	repnz in eax,0xbe
  425ebb:	cmp    DWORD PTR [eax],esp
  425ebd:	pop    ebp
  425ebe:	or     DWORD PTR [edx+edi*4+0x7d],esi
  425ec2:	jmp    0x7d1d:0xa833510
  425ec9:	xchg   edi,eax
  425eca:	sub    edi,DWORD PTR cs:[esi+0x35]
  425ece:	rcl    BYTE PTR [ebp+0x50],1
  425ed1:	pop    eax
  425ed2:	jmp    0x1819d638
  425ed7:	rep stos BYTE PTR es:[edi],al
  425ed9:	pop    es
  425eda:	ja     0x425f08
  425edc:	fdivr  st,st(0)
  425ede:	jle    0x425f1a
  425ee0:	add    eax,0xd716dedf
  425ee5:	and    al,0xba
  425ee7:	fiadd  DWORD PTR [edx+0x7ba38468]
  425eed:	sar    BYTE PTR ds:0xdfd421ad,cl
  425ef3:	xchg   esp,eax
  425ef4:	push   edx
  425ef5:	(bad)  
  425ef6:	xor    al,0x38
  425ef8:	add    al,BYTE PTR [ecx+ebp*8+0xa]
  425efc:	loopne 0x425f79
  425efe:	lods   al,BYTE PTR ds:[esi]
  425eff:	jg     0x425e90
  425f01:	mov    ebp,DWORD PTR [ebx]
  425f03:	jmp    0x425eaf
  425f05:	aaa    
  425f06:	stos   BYTE PTR es:[edi],al
  425f07:	pop    ss
  425f08:	test   BYTE PTR [esi],al
  425f0a:	cdq    
  425f0b:	(bad)  
  425f0c:	loope  0x425f32
  425f0e:	test   DWORD PTR [edi+0x10],ebx
  425f11:	and    DWORD PTR [edi],edi
  425f13:	jne    0x425ee2
  425f15:	(bad)  ss:[edi]
  425f18:	js     0x425f22
  425f1a:	rcl    ebx,1
  425f1c:	in     al,0x6a
  425f1e:	or     cl,cl
  425f20:	adc    edi,0xf3cab59
  425f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f27:	sar    BYTE PTR [ebx-0x2e],0x5
  425f2b:	adc    BYTE PTR [esi-0x16],dh
  425f2e:	cmp    eax,0x4b4d2a7
  425f33:	and    BYTE PTR [ebx+0x32],al
  425f36:	dec    esi
  425f37:	(bad)  
  425f38:	xor    bl,ch
  425f3a:	add    ecx,DWORD PTR ss:[edx-0x2930527d]
  425f41:	and    ebp,esi
  425f43:	xchg   esp,eax
  425f44:	and    DWORD PTR [eax-0x12caa524],esp
  425f4a:	push   ebp
  425f4b:	imul   esp,ecx,0x48
  425f4e:	mov    esp,0x24a59700
  425f53:	sbb    DWORD PTR [ebx+0x44],edi
  425f56:	or     dl,BYTE PTR [ecx]
  425f58:	nop
  425f59:	mov    dl,0x5
  425f5b:	sub    eax,0x3f56626
  425f60:	popa   
  425f61:	inc    ecx
  425f62:	ds mov bh,0x89
  425f65:	or     esp,DWORD PTR [ebp+0x79]
  425f68:	les    edx,FWORD PTR [esi-0x48]
  425f6b:	inc    esp
  425f6c:	out    0xc,eax
  425f6e:	addr16 mov ecx,0x5ddda042
  425f74:	pop    edi
  425f75:	lahf   
  425f76:	pop    eax
  425f77:	jmp    0xc61b8794
  425f7c:	mov    cl,0xec
  425f7e:	iret   
  425f7f:	idiv   ecx
  425f81:	jno    0x425fa1
  425f83:	jle    0x425fa2
  425f85:	popf   
  425f86:	add    al,0xc4
  425f88:	sub    BYTE PTR [eax-0x50b6b5db],bl
  425f8e:	std    
  425f8f:	xor    DWORD PTR [edx+0x44b95adf],ecx
  425f95:	fwait
  425f96:	adc    eax,0x51cf60a9
  425f9b:	loop   0x425f6c
  425f9d:	ret    0xc4b5
  425fa0:	aad    0xfd
  425fa2:	repnz imul ebx,DWORD PTR [edi+0x18b1fb28],0x49
  425faa:	addr16 mov ebx,0x3895e89d
  425fb0:	dec    ecx
  425fb1:	repnz (bad) 
  425fb4:	inc    eax
  425fb5:	add    al,0xfc
  425fb7:	inc    esi
  425fb8:	sbb    dh,ah
  425fba:	or     cl,ch
  425fbc:	gs or  esi,esi
  425fbf:	(bad)  
  425fc0:	mov    BYTE PTR [ecx-0x42ce1dad],bl
  425fc6:	sbb    BYTE PTR [ebp-0x76],bh
  425fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fca:	test   al,0xdd
  425fcc:	mov    edi,0xaa3de233
  425fd1:	jne    0x426018
  425fd3:	call   0xd7b0:0xc41589d4
  425fda:	or     eax,DWORD PTR [eax+0x35dc94b3]
  425fe0:	test   DWORD PTR [edi],esp
  425fe2:	sbb    al,0x1
  425fe4:	mov    ebp,0xc7383732
  425fe9:	mov    edx,0xa7ef0f24
  425fee:	sahf   
  425fef:	mov    esp,DWORD PTR [esi-0x57bfabd5]
  425ff5:	mov    al,ds:0x315b4d19
  425ffa:	add    ah,bl
  425ffc:	sbb    eax,0xeef7b10
  426001:	xchg   ebp,eax
  426002:	fsub   QWORD PTR [ebx+0x1b]
  426005:	push   es
  426006:	or     al,0x0
  426008:	sbb    BYTE PTR [ecx],0x5c
  42600b:	cld    
  42600c:	jnp    0x425fe0
  42600e:	test   al,0xf4
  426010:	dec    ecx
  426011:	enter  0x2d8,0xc
  426015:	aam    0x56
  426017:	enter  0x8abd,0x39
  42601b:	sub    BYTE PTR [esi-0x262ef534],bh
  426021:	aam    0x7c
  426023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426024:	mov    bh,0xb2
  426026:	mov    cl,0x9e
  426028:	pop    ss
  426029:	pusha  
  42602a:	mov    al,0xfa
  42602c:	mov    dl,0xf8
  42602e:	xor    BYTE PTR [edi-0x56dc0068],ah
  426034:	rcl    esp,0xf4
  426037:	sbb    ebx,ecx
  426039:	sahf   
  42603a:	cmp    ch,ah
  42603c:	sbb    BYTE PTR [ebx-0x45],0x0
  426040:	xchg   DWORD PTR [esi-0x51],esp
  426043:	in     eax,dx
  426044:	lahf   
  426045:	icebp  
  426046:	lock pop edi
  426048:	fwait
  426049:	xor    dh,BYTE PTR [ebx]
  42604b:	xlat   BYTE PTR ds:[ebx]
  42604c:	adc    bl,BYTE PTR [eax+0x7c]
  42604f:	test   al,0xa5
  426051:	xchg   ecx,eax
  426052:	outs   dx,BYTE PTR ds:[esi]
  426053:	xchg   esp,eax
  426054:	out    dx,al
  426055:	dec    ecx
  426056:	retf   
  426057:	das    
  426058:	and    bh,BYTE PTR [eax+0x22]
  42605b:	jmp    0x3f4628a2
  426060:	(bad)  
  426061:	cmc    
  426062:	mov    ecx,0x75288195
  426067:	retf   
  426068:	mov    ecx,0x99bf88bc
  42606d:	aad    0x55
  42606f:	dec    edi
  426070:	and    esp,DWORD PTR [ebx+0x8]
  426073:	out    dx,al
  426074:	lea    edx,[eax+eax*1+0x0]
	...
  426080:	add    BYTE PTR [eax],al
  426082:	push   0x6f1e2d23
  426087:	push   ds
  426088:	jnp    0x426101
  42608a:	fisub  WORD PTR [ebp+0x7832b036]
  426090:	sub    eax,0x1d0ae2f
  426095:	add    ah,cl
  426097:	add    al,BYTE PTR [eax]
  426099:	add    BYTE PTR [ecx-0x60],bl
  42609c:	adc    al,0x68
  42609e:	add    ebp,DWORD PTR [ebx]
  4260a0:	int3   
  4260a1:	dec    edx
  4260a2:	std    
  4260a3:	inc    eax
  4260a4:	int3   
  4260a5:	jo     0x4260cf
  4260a7:	imul   esp,eax,0xce1f613f
  4260ad:	jbe    0x42610a
  4260af:	and    BYTE PTR [eax+0x6a8e5b73],al
  4260b5:	test   al,0x2a
  4260b7:	(bad)  
  4260b8:	xor    bl,BYTE PTR [ebx-0x58]
  4260bb:	call   0xc173c0b3
  4260c0:	mov    ebp,?
  4260c2:	repnz imul ebp,DWORD PTR [ebx-0x46b2e44c],0xffffffca
  4260ca:	in     eax,dx
  4260cb:	inc    esp
  4260cc:	mov    cl,0x1f
  4260ce:	inc    esp
  4260cf:	push   0x262dea00
  4260d4:	mov    dh,0xf7
  4260d6:	lea    eax,fs:[edx]
  4260d9:	std    
  4260da:	fdiv   DWORD PTR [ebp+ebp*2+0x7abb8e10]
  4260e1:	mov    dl,0xce
  4260e3:	jne    0x4260fd
  4260e5:	mov    al,ds:0x7c4fb7af
  4260ea:	cdq    
  4260eb:	push   ss
  4260ec:	lea    edi,[ecx-0x23be7436]
  4260f2:	pusha  
  4260f3:	test   BYTE PTR [eax-0x5c],cl
  4260f6:	ret    0xd015
  4260f9:	mov    dl,0x5c
  4260fb:	or     edi,DWORD PTR [eax+ebx*8-0x1cce193a]
  426102:	jp     0x426136
  426104:	mov    ds:0x7f6a116e,eax
  426109:	sbb    al,0xa0
  42610b:	sahf   
  42610c:	jle    0x4260d6
  42610e:	push   ecx
  42610f:	pop    ebx
  426110:	jg     0x426138
  426112:	add    ch,BYTE PTR [edx+0x69]
  426115:	dec    esp
  426116:	outs   dx,DWORD PTR ds:[esi]
  426117:	mov    dl,0x34
  426119:	les    esp,FWORD PTR [ebp-0x6cc360d4]
  42611f:	xsaveopt [ebx-0x1c83ba18]
  426126:	mov    esi,0xe13a95d7
  42612b:	jg     0x426187
  42612d:	or     DWORD PTR [esi+0x30],eax
  426130:	and    DWORD PTR [esi-0x4999a4d],eax
  426136:	push   edx
  426137:	push   cs
  426138:	addr16 cli 
  42613a:	and    DWORD PTR [edi],0x51
  42613d:	loop   0x4260eb
  42613f:	sahf   
  426140:	pop    esp
  426141:	inc    ecx
  426142:	iret   
  426143:	push   edx
  426144:	xchg   ebx,eax
  426145:	test   al,0xac
  426147:	mov    ds:0x7c9dcf87,eax
  42614c:	xchg   edx,eax
  42614d:	fdivr  DWORD PTR [esp+ebp*4]
  426150:	jno    0x426137
  426152:	rcr    edx,0x71
  426155:	(bad)  
  426156:	mov    esp,0x88903d41
  42615b:	lods   al,BYTE PTR ds:[esi]
  42615c:	mov    eax,ds:0xf9801b1e
  426161:	das    
  426162:	lea    edx,[edi+eax*4+0x60]
  426166:	sub    BYTE PTR [ebx+0x1f],0x59
  42616a:	loopne 0x4261de
  42616c:	arpl   WORD PTR [edx-0x78],ax
  42616f:	sbb    eax,DWORD PTR [edx]
  426171:	das    
  426172:	push   0x37
  426174:	mov    ebx,DWORD PTR [ecx+0x2f]
  426177:	push   0x40616411
  42617c:	out    dx,al
  42617d:	push   edi
  42617e:	fldcw  WORD PTR [eax-0x19]
  426181:	dec    ecx
  426182:	jl     0x4261e6
  426184:	mov    ecx,DWORD PTR [ecx+0x5b]
  426187:	ret    0xcb0a
  42618a:	imul   edi,edi,0xced333dc
  426190:	outs   dx,BYTE PTR ds:[esi]
  426191:	jo     0x42615d
  426193:	les    ebx,FWORD PTR [ebx-0x75]
  426196:	inc    ecx
  426197:	imul   esi,DWORD PTR [esi+edi*1],0x5e8cf378
  42619e:	dec    esi
  42619f:	push   ebx
  4261a0:	clc    
  4261a1:	out    dx,eax
  4261a2:	jno    0x4261fd
  4261a4:	jno    0x426164
  4261a6:	or     al,0xd6
  4261a8:	div    eax
  4261aa:	loopne 0x42616a
  4261ac:	and    eax,ebx
  4261ae:	in     eax,0xf
  4261b0:	and    DWORD PTR [eax-0x7b1eb4fd],eax
  4261b6:	xor    eax,0x9e56cf6f
  4261bb:	adc    DWORD PTR [esi-0x4e9b705],eax
  4261c1:	cmp    DWORD PTR ds:0xb944f8d3,0x826719de
  4261cb:	pop    ebx
  4261cc:	out    0xf1,eax
  4261ce:	sahf   
  4261cf:	mov    dh,0xac
  4261d1:	enter  0x7712,0x47
  4261d5:	(bad)  
  4261d6:	mov    WORD PTR [eax],ds
  4261d8:	push   esi
  4261d9:	fcomp  DWORD PTR ds:0xf5500a41
  4261df:	dec    ebx
  4261e0:	popa   
  4261e1:	xchg   ebp,eax
  4261e2:	shr    cl,1
  4261e4:	mov    bh,0x31
  4261e6:	sub    edx,DWORD PTR [ebp-0xd]
  4261e9:	xchg   ebx,eax
  4261ea:	xchg   esi,eax
  4261eb:	mov    ebx,0x913f3c1d
  4261f0:	icebp  
  4261f1:	push   edx
  4261f2:	push   ds
  4261f3:	jle    0x426257
  4261f5:	jecxz  0x4261bc
  4261f7:	push   ecx
  4261f8:	jmp    0x4549:0xe6af533
  4261ff:	jmp    0x4261af
  426201:	push   esp
  426202:	pop    edx
  426203:	mov    gs,WORD PTR [edi+0x4096332f]
  426209:	jnp    0x4261f9
  42620b:	(bad)  
  42620c:	pop    ecx
  42620d:	test   bh,al
  42620f:	jbe    0x4261a1
  426211:	jp     0x4261be
  426213:	ss stos DWORD PTR es:[edi],eax
  426215:	outs   dx,DWORD PTR ds:[esi]
  426216:	pop    ebp
  426217:	inc    esi
  426218:	cmc    
  426219:	aam    0x98
  42621b:	sbb    ah,BYTE PTR [ebp+0x6e]
  42621e:	test   DWORD PTR [eax+0xb366d30],edi
  426224:	xor    al,ch
  426226:	(bad)
  426229:	(bad)  
  42622a:	fimul  WORD PTR [esi]
  42622c:	gs rcr al,cl
  42622f:	test   eax,0xecd422f4
  426234:	mov    ds:0xff720045,eax
  426239:	fist   DWORD PTR [ebx+0x1a]
  42623c:	cmc    
  42623d:	stos   BYTE PTR es:[edi],al
  42623e:	jmp    0x426227
  426240:	xor    BYTE PTR fs:[bx],al
  426244:	jl     0x4261ca
  426246:	mov    edi,0xd3226cad
  42624b:	mov    WORD PTR [ecx+esi*8+0x76becfac],gs
  426252:	shl    BYTE PTR [edi-0x2e],1
  426255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426256:	sti    
  426257:	das    
  426258:	loopne 0x42621c
  42625a:	mov    cl,0x69
  42625c:	xchg   ebp,eax
  42625d:	cmp    cl,BYTE PTR [edi+0x7b]
  426260:	mov    ds:0xc11f190a,al
  426265:	inc    ecx
  426266:	(bad)
  42626b:	fmul   QWORD PTR [eax-0x1adebf6a]
  426271:	xor    eax,0x4f62d4e0
  426276:	jle    0x4262bc
  426278:	xor    al,0x72
  42627a:	int    0x8f
  42627c:	sub    bh,BYTE PTR [ebx+edi*2-0x23f484a4]
  426283:	sbb    DWORD PTR [ecx-0x5b],esp
  426286:	fiadd  DWORD PTR [edx-0x6c]
  426289:	inc    ebx
  42628a:	adc    al,0x11
  42628c:	mov    al,ds:0x5435d42c
  426291:	jmp    0x1678e7c5
  426296:	dec    esi
  426297:	hlt    
  426298:	test   ebx,ecx
  42629a:	pop    esp
  42629b:	push   esp
  42629c:	inc    esi
  42629d:	test   al,0x63
  42629f:	cmp    cl,ch
  4262a1:	mov    edi,0x438e82a4
  4262a6:	inc    ecx
  4262a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262a8:	stos   DWORD PTR es:[edi],eax
  4262a9:	mov    edi,0x4351d37f
  4262ae:	mov    bh,0x3
  4262b0:	cwde   
  4262b1:	stc    
  4262b2:	out    dx,ax
  4262b4:	loope  0x426292
  4262b6:	add    al,0xc3
  4262b8:	shr    DWORD PTR [eax],1
  4262ba:	jmp    0x42625a
  4262bc:	jno    0x426291
  4262be:	sar    BYTE PTR [edi-0xe],0x69
  4262c2:	mov    ds:0x7ccccaf8,al
  4262c7:	inc    ebp
  4262c8:	and    DWORD PTR [ecx+ebp*1+0x30],0xddf86687
  4262d0:	and    dh,dh
  4262d2:	(bad)  
  4262d4:	(bad)  
  4262d5:	lock sahf 
  4262d7:	mov    ch,0x9f
  4262d9:	(bad)  
  4262da:	jg     0x4262ca
  4262dc:	ss xchg esp,eax
  4262de:	push   edi
  4262df:	(bad)
  4262e3:	inc    ebp
  4262e4:	adc    DWORD PTR [edx],0xffffffdd
  4262e7:	cmp    eax,0xea7c097f
  4262ec:	mov    cl,0x98
  4262ee:	mov    bh,0xfc
  4262f0:	pop    ebx
  4262f1:	dec    edi
  4262f2:	inc    ebp
  4262f3:	jp     0x4262a9
  4262f5:	jp     0x42635c
  4262f7:	hlt    
  4262f8:	jge    0x426364
  4262fa:	sub    BYTE PTR [edi+0x5b],dl
  4262fd:	mov    bh,0x4c
  4262ff:	push   edi
  426300:	mov    ds:0xc58f8569,al
  426305:	ret    0x7fa6
  426308:	fimul  DWORD PTR [esi]
  42630a:	sub    BYTE PTR [ecx+0x8c8e699],bh
  426310:	stc    
  426311:	fs push cs
  426313:	jg     0x426392
  426315:	mov    ecx,0xbedcece9
  42631a:	xor    bl,ah
  42631c:	sbb    ah,bh
  42631e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42631f:	stos   DWORD PTR es:[edi],eax
  426320:	jecxz  0x426354
  426322:	aas    
  426323:	inc    ebp
  426324:	pop    ecx
  426325:	pop    es
  426326:	iret   
  426327:	imul   edi,DWORD PTR [edx+0x2accf1e4],0x4969d610
  426331:	mov    gs,WORD PTR [ebx+0x22]
  426334:	adc    esi,DWORD PTR [esi]
  426336:	ins    BYTE PTR es:[edi],dx
  426337:	and    ch,dh
  426339:	repnz into 
  42633b:	adc    eax,0x5ecbdd30
  426340:	retf   0xb243
  426343:	iret   
  426344:	pop    ebp
  426345:	test   cl,al
  426347:	call   0x8158:0x18e11b71
  42634e:	jmp    0x426358
  426350:	and    DWORD PTR [edi+0x27],edx
  426353:	add    BYTE PTR [ecx],ch
  426355:	in     eax,0x85
  426357:	das    
  426358:	fiadd  WORD PTR [edi+0xf]
  42635b:	xor    ebp,DWORD PTR [eax+0x71]
  42635e:	pop    esi
  42635f:	dec    edi
  426360:	mov    ebx,0x4385d1cc
  426365:	imul   eax,DWORD PTR [eax],0x0
	...
  426370:	add    BYTE PTR [eax],al
  426372:	cdq    
  426373:	enter  0x9ff8,0xf9
  426377:	mov    edi,0xdf92ceff
  42637c:	push   ds
  42637d:	outs   dx,BYTE PTR ds:[esi]
  42637e:	mov    al,0xcf
  426380:	pop    eax
  426381:	loop   0x4263fd
  426383:	rol    DWORD PTR [ecx],cl
  426385:	add    ah,cl
  426387:	add    al,BYTE PTR [eax]
  426389:	add    BYTE PTR [esi+0x5f],cl
  42638c:	mov    ah,0x5e
  42638e:	inc    edi
  42638f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426390:	mov    DWORD PTR [ebx],ecx
  426392:	push   es
  426393:	dec    ebp
  426394:	inc    esi
  426395:	sbb    DWORD PTR [esi+0x9],ebp
  426398:	cmc    
  426399:	or     BYTE PTR [esi+0x4d],bl
  42639c:	shl    BYTE PTR [ebx-0x8671386],cl
  4263a2:	int    0xf2
  4263a4:	ins    BYTE PTR es:[edi],dx
  4263a5:	mov    dh,0xae
  4263a7:	(bad)  
  4263a8:	jge    0x426401
  4263aa:	pusha  
  4263ab:	fcomp  DWORD PTR [eax+0x6b]
  4263ae:	sub    eax,0xa43e9c35
  4263b3:	push   ss
  4263b4:	(bad)  [ecx]
  4263b6:	push   esp
  4263b7:	push   ebx
  4263b8:	push   cs
  4263b9:	sbb    dl,BYTE PTR ds:0xd11af8fc
  4263bf:	add    eax,0x7ae53bae
  4263c4:	(bad)  
  4263c5:	adc    al,0x50
  4263c7:	mov    ah,0x1a
  4263c9:	xchg   esi,eax
  4263ca:	sub    ebp,DWORD PTR [ebp-0x6f7dd795]
  4263d0:	sub    ch,BYTE PTR [esi]
  4263d2:	fwait
  4263d3:	or     BYTE PTR [edi],cl
  4263d5:	dec    ecx
  4263d6:	inc    ebx
  4263d7:	out    0x12,al
  4263d9:	jp     0x426380
  4263db:	add    al,0x6
  4263dd:	stos   BYTE PTR es:[edi],al
  4263de:	stc    
  4263df:	add    al,BYTE PTR [ecx+edx*2-0x49]
  4263e3:	aas    
  4263e4:	aas    
  4263e5:	ret    
  4263e6:	push   esp
  4263e7:	fnstcw WORD PTR [eax-0x65c491ab]
  4263ed:	outs   dx,BYTE PTR ds:[esi]
  4263ee:	xchg   esi,eax
  4263ef:	into   
  4263f0:	leave  
  4263f1:	out    0xa2,al
  4263f3:	fs in  eax,dx
  4263f5:	push   edi
  4263f6:	rcl    BYTE PTR ds:0x1bacf937,cl
  4263fc:	fsubr  st(6),st
  4263fe:	sar    al,cl
  426400:	ja     0x42642b
  426402:	xchg   edi,eax
  426403:	jnp    0x4263b2
  426405:	push   edi
  426406:	mov    ds:0x28a9a5b3,eax
  42640b:	sub    ch,ch
  42640d:	inc    ebx
  42640e:	aam    0x88
  426410:	mov    ds:0x3fbff5c,al
  426415:	retf   0xdb63
  426418:	pop    edx
  426419:	mov    DWORD PTR ds:0xf822ed53,eax
  42641f:	pop    edi
  426420:	jecxz  0x426410
  426422:	mov    al,ds:0x244fef4d
  426427:	rol    DWORD PTR [eax],0x80
  42642a:	jne    0x4263b6
  42642c:	test   eax,0x726977dd
  426431:	xchg   BYTE PTR [eax],al
  426433:	stos   BYTE PTR es:[edi],al
  426434:	into   
  426435:	xor    edx,eax
  426437:	(bad)  
  426438:	int    0x6d
  42643a:	sar    BYTE PTR [edi+0x4e],0x8a
  42643e:	and    bh,BYTE PTR [ecx-0x77]
  426441:	inc    ebp
  426442:	mov    ecx,0xaad8b0b0
  426447:	in     eax,dx
  426448:	or     al,0x68
  42644a:	inc    esp
  42644b:	pushf  
  42644c:	cmc    
  42644d:	popf   
  42644e:	rol    DWORD PTR [edi],1
  426450:	xchg   esi,eax
  426451:	(bad)  
  426452:	into   
  426453:	push   esi
  426454:	dec    eax
  426455:	pusha  
  426456:	(bad)
  42645a:	adc    DWORD PTR [edi+0x743770e6],esi
  426460:	shr    BYTE PTR [esi-0x41e8eef2],0xa6
  426467:	xchg   esi,ecx
  426469:	stc    
  42646a:	push   esp
  42646b:	push   0x5c
  42646d:	jne    0x42645f
  42646f:	stos   DWORD PTR es:[edi],eax
  426470:	cmp    al,0x2f
  426472:	or     dl,BYTE PTR [edi+eiz*4]
  426475:	lock sar DWORD PTR [esi+edx*8],0x4d
  42647a:	dec    ebx
  42647b:	(bad)  
  42647d:	ins    BYTE PTR es:[edi],dx
  42647e:	mov    WORD PTR [ecx],fs
  426480:	add    BYTE PTR [edi+eax*4],dh
  426483:	adc    eax,0x8a923023
  426488:	push   ds
  426489:	add    dh,cl
  42648b:	adc    bh,BYTE PTR [ebp-0x25]
  42648e:	sbb    eax,0xa4d7d3a3
  426493:	iret   
  426494:	lods   al,BYTE PTR ds:[esi]
  426495:	dec    ebx
  426496:	mov    eax,ds:0x278c468f
  42649b:	inc    eax
  42649c:	fnstenv [edi+0x69b8aa2]
  4264a2:	test   DWORD PTR [eax+0x24b947f7],0xb8e13328
  4264ac:	mov    DWORD PTR [edx],edi
  4264ae:	cmp    bh,bh
  4264b0:	dec    esi
  4264b1:	nop
  4264b2:	xchg   edx,eax
  4264b3:	jne    0x426514
  4264b5:	dec    edx
  4264b6:	or     eax,0x69b4a682
  4264bb:	stos   DWORD PTR es:[edi],eax
  4264bc:	pop    edi
  4264bd:	push   edx
  4264be:	xchg   edi,eax
  4264bf:	aad    0x7e
  4264c1:	or     ecx,DWORD PTR [edi+0x749fa41b]
  4264c7:	sbb    eax,ebp
  4264c9:	scas   eax,DWORD PTR es:[edi]
  4264ca:	mov    ecx,DWORD PTR fs:[ebx]
  4264cd:	and    edi,0x4d
  4264d0:	repnz stos BYTE PTR es:[edi],al
  4264d2:	mov    BYTE PTR [eax],dl
  4264d4:	retf   0xb62
  4264d7:	or     esp,esp
  4264d9:	hlt    
  4264da:	inc    edi
  4264db:	pusha  
  4264dc:	bswap  esp
  4264de:	xchg   esp,eax
  4264df:	push   esi
  4264e0:	(bad)  
  4264e1:	mov    dl,BYTE PTR [ebp-0x2823eb68]
  4264e7:	sub    eax,0xf90281d4
  4264ec:	mov    bh,0xe4
  4264ee:	(bad)  
  4264f0:	not    BYTE PTR [esi]
  4264f2:	shr    BYTE PTR [edi],cl
  4264f4:	in     eax,0x37
  4264f6:	adc    eax,0x28bfd249
  4264fb:	int3   
  4264fc:	fst    QWORD PTR [esi]
  4264fe:	rcr    esi,cl
  426500:	stos   DWORD PTR es:[edi],eax
  426501:	aad    0x43
  426503:	retf   0x30f7
  426506:	lock xor eax,0xea61f86f
  42650c:	jmp    0x50b6:0x4c123385
  426513:	mov    ah,0x1d
  426515:	lock (bad) 
  426517:	xchg   ebp,eax
  426518:	xor    al,ch
  42651a:	mov    esi,ecx
  42651c:	fldcw  WORD PTR [ebx+0x775f1713]
  426522:	mov    bh,cl
  426524:	mov    ch,0x8d
  426526:	push   ebp
  426527:	sub    ecx,DWORD PTR [esi]
  426529:	mov    dl,0xb8
  42652b:	or     eax,0xd9a5681a
  426530:	call   0xac20:0xbbf569b2
  426537:	jns    0x42656b
  426539:	mov    esi,DWORD PTR [edx+eiz*8]
  42653c:	inc    eax
  42653d:	pop    esp
  42653e:	inc    edi
  42653f:	or     DWORD PTR [esi-0x10],ecx
  426542:	jbe    0x426542
  426544:	lea    esi,[ebx]
  426546:	inc    esp
  426547:	in     al,dx
  426548:	retf   
  426549:	shr    cl,cl
  42654b:	jp     0x426547
  42654d:	loopne 0x42657f
  42654f:	repz inc edx
  426551:	test   BYTE PTR [ebx],dl
  426553:	mov    ecx,0x6a88c8b1
  426558:	cdq    
  426559:	in     eax,0x5f
  42655b:	test   al,0xe8
  42655d:	jl     0x42659a
  42655f:	cdq    
  426560:	(bad)  
  426561:	pop    ebx
  426562:	repz jmp 0x4265d3
  426565:	xchg   ecx,eax
  426566:	sub    BYTE PTR [edi+0x49],0xac
  42656a:	stc    
  42656b:	push   ebx
  42656c:	pop    esi
  42656d:	dec    ebx
  42656e:	push   edx
  42656f:	pushf  
  426570:	dec    ebp
  426571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426572:	sbb    BYTE PTR [esi+edx*1],0x63
  426576:	jl     0x426590
  426578:	clc    
  426579:	data16 mov WORD PTR [ecx-0x22f9d6c1],cs
  426580:	jmp    0x4f96898
  426585:	popa   
  426586:	jo     0x426596
  426588:	das    
  426589:	test   eax,0xee732cf7
  42658e:	jecxz  0x42656f
  426590:	pop    edx
  426591:	push   edx
  426592:	mov    dh,BYTE PTR [ecx+0x4f]
  426595:	pop    ds
  426596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426597:	xchg   edx,eax
  426598:	sahf   
  426599:	out    0x9d,al
  42659b:	adc    DWORD PTR [eax],edi
  42659d:	rcr    DWORD PTR [eax+0x0],0x9c
  4265a1:	sub    al,0xc3
  4265a3:	dec    esi
  4265a4:	mov    eax,0xa02da924
  4265a9:	or     esp,DWORD PTR [eax+0x41]
  4265ac:	loope  0x426626
  4265ae:	sar    DWORD PTR [ecx+0x2f],cl
  4265b1:	and    al,0xfb
  4265b3:	xor    eax,0x9f642043
  4265b8:	test   esp,edx
  4265ba:	jmp    0x93b1:0xe71a6644
  4265c1:	shr    DWORD PTR [edx+ebx*4+0x14],0x3f
  4265c6:	mov    cl,BYTE PTR [ebx]
  4265c8:	and    al,0xd0
  4265ca:	mov    esp,DWORD PTR [edi+0x15]
  4265cd:	mov    DWORD PTR [ebx+0x5a],ebp
  4265d0:	push   edx
  4265d1:	sahf   
  4265d2:	outs   dx,BYTE PTR ds:[esi]
  4265d3:	std    
  4265d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265d5:	fadd   QWORD PTR [ebx]
  4265d7:	pop    ss
  4265d8:	mov    WORD PTR ds:0x7423e40,?
  4265de:	adc    eax,0x9b1960
  4265e3:	xchg   edi,eax
  4265e4:	cmp    DWORD PTR [esi+0x15a684e6],edi
  4265ea:	bound  eax,QWORD PTR [eax+0x5a]
  4265ed:	mov    edx,0xd1d21539
  4265f2:	sar    DWORD PTR [eax+0x67],1
  4265f5:	mov    ecx,0xa1cce8c4
  4265fa:	add    eax,0x77be759
  4265ff:	add    dh,BYTE PTR [esi+0x2d537477]
  426605:	mov    ch,al
  426607:	or     BYTE PTR [ebx+0x28508d1c],dl
  42660d:	es push 0xffffffbf
  426610:	lock aam 0x23
  426613:	scas   eax,DWORD PTR es:[edi]
  426614:	xor    ebp,DWORD PTR [edi-0x3c]
  426617:	ins    BYTE PTR es:[edi],dx
  426618:	push   ebx
  426619:	addr16 jno 0x42661a
  42661c:	inc    ecx
  42661d:	xchg   ecx,eax
  42661e:	jns    0x4265c8
  426620:	retf   
  426621:	cdq    
  426622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426623:	add    BYTE PTR [edx-0x58],ch
  426626:	cmp    al,0x60
  426628:	iret   
  426629:	test   ch,0x77
  42662c:	jmp    0x4265b1
  42662e:	mov    ebp,0x9f63b26a
  426633:	cwde   
  426634:	mov    dh,BYTE PTR [eax+0x11ad3d88]
  42663a:	jns    0x42661c
  42663c:	jne    0x42660f
  42663e:	push   edx
  42663f:	sub    bh,BYTE PTR [ebx-0x33]
  426642:	test   BYTE PTR [edx+0x55],0x8f
  426646:	not    ebp
  426648:	and    esp,ebx
  42664a:	cmp    eax,0x1d3de0d7
  42664f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426650:	pop    esi
  426651:	and    bl,BYTE PTR [ecx]
  426653:	sbb    ch,BYTE PTR [edi-0x50]
	...
  426662:	jns    0x42666e
  426664:	sbb    BYTE PTR gs:[edi+0x7f],dh
  426668:	jge    0x4266d5
  42666a:	int3   
  42666b:	outs   dx,BYTE PTR ds:[esi]
  42666c:	xchg   esi,esi
  42666e:	mov    ch,0x7f
  426670:	neg    BYTE PTR [edi+0x46]
  426673:	(bad)  
  426674:	add    DWORD PTR [eax],eax
  426676:	int3   
  426677:	add    al,BYTE PTR [eax]
  426679:	add    BYTE PTR [ecx-0x592f61f7],al
  42667f:	ror    DWORD PTR gs:[edx],1
  426682:	jb     0x4266a1
  426684:	lahf   
  426685:	and    BYTE PTR [ecx],al
  426687:	mov    bh,BYTE PTR [ebp-0x1f]
  42668a:	or     al,0xe9
  42668c:	sbb    DWORD PTR [ecx+0x61c2f73e],edx
  426692:	loopne 0x42669b
  426694:	jp     0x4266ce
  426696:	lods   eax,DWORD PTR ds:[esi]
  426697:	popa   
  426698:	lea    ecx,[ebx+edi*1+0xe]
  42669c:	addr16 jg 0x426660
  42669f:	mov    ds:0x29f0d9b1,al
  4266a4:	jg     0x426707
  4266a6:	(bad)  
  4266a7:	repz jg 0x4266a8
  4266aa:	adc    esi,DWORD PTR [esi+eiz*4-0x388a0bbd]
  4266b1:	outs   dx,DWORD PTR ds:[esi]
  4266b2:	or     al,0x46
  4266b4:	pop    eax
  4266b5:	popf   
  4266b6:	mov    eax,0x6c24a81b
  4266bb:	push   ebx
  4266bc:	xchg   DWORD PTR [edi+ecx*1+0x30],esi
  4266c0:	shl    BYTE PTR [ebx],cl
  4266c2:	mov    dl,BYTE PTR [eax-0x75b47da9]
  4266c8:	sub    eax,0x20ba9c46
  4266cd:	jmp    0x426699
  4266cf:	dec    eax
  4266d0:	call   0x15ada70a
  4266d5:	pushf  
  4266d6:	pop    es
  4266d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d8:	popa   
  4266d9:	or     al,0x69
  4266db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266dc:	push   ds
  4266dd:	imul   DWORD PTR [edi+0x64]
  4266e0:	push   eax
  4266e1:	pop    ebp
  4266e2:	cmp    ebx,DWORD PTR [ebp+0x51fb1784]
  4266e8:	pop    ds
  4266e9:	inc    ebx
  4266ea:	and    al,0x96
  4266ec:	addr16 xor eax,eax
  4266ef:	adc    BYTE PTR [edi],bh
  4266f1:	out    0xec,eax
  4266f3:	lods   eax,DWORD PTR ds:[esi]
  4266f4:	dec    eax
  4266f5:	fs or  al,0x5f
  4266f8:	push   ebp
  4266f9:	pop    ebx
  4266fa:	mov    bh,0xca
  4266fc:	leave  
  4266fd:	pop    esi
  4266fe:	loope  0x426692
  426700:	cmp    eax,0xd9f70ba3
  426705:	(bad)  
  426706:	dec    esi
  426707:	sub    esi,DWORD PTR [esi+0x688e8497]
  42670d:	nop
  42670e:	(bad)  
  42670f:	mov    ebx,DWORD PTR [eax+0x2a]
  426712:	rcl    eax,cl
  426714:	dec    esp
  426715:	jge    0x426711
  426717:	jno    0x4266ef
  426719:	push   ecx
  42671a:	sub    bh,BYTE PTR [edx]
  42671c:	in     eax,dx
  42671d:	mov    ebp,0x1d57ee6f
  426722:	pop    edi
  426723:	xchg   dh,dl
  426725:	mov    dh,0xe3
  426727:	sub    dh,ch
  426729:	aaa    
  42672a:	arpl   WORD PTR es:[esp+esi*8],bx
  42672e:	and    al,0xec
  426730:	ins    BYTE PTR es:[edi],dx
  426731:	inc    eax
  426732:	test   BYTE PTR [ebp+0x18e2e254],cl
  426738:	xlat   BYTE PTR ds:[ebx]
  426739:	test   DWORD PTR [ecx],edx
  42673b:	stc    
  42673c:	call   DWORD PTR [ebx-0x1c7a1745]
  426742:	cli    
  426743:	lods   eax,DWORD PTR ds:[esi]
  426744:	mov    DWORD PTR [esp+eax*4-0x27],ebp
  426748:	push   edx
  426749:	push   0x69a20044
  42674e:	sub    ebp,0x2da24cf3
  426754:	mov    edx,0x1e093c3a
  426759:	fstp   st(2)
  42675b:	pop    ss
  42675c:	and    BYTE PTR [edi+0x515d0531],bl
  426762:	adc    bl,BYTE PTR [ebx-0x3ed29ea6]
  426768:	inc    esi
  426769:	add    al,0xf4
  42676b:	shl    dh,1
  42676d:	inc    ebp
  42676e:	cwde   
  42676f:	shr    DWORD PTR [ebx-0x2],cl
  426772:	mov    esp,0x2813cd2d
  426777:	and    BYTE PTR [eax],ch
  426779:	cmp    ah,ch
  42677b:	popa   
  42677c:	jns    0x426797
  42677e:	bnd jmp 0x42671c
  426781:	jg     0x426724
  426783:	lock mov esi,0xd3e5879f
  426789:	in     al,dx
  42678a:	mov    bl,0x49
  42678c:	(bad)  
  42678d:	pop    ds
  42678e:	outs   dx,DWORD PTR ds:[esi]
  42678f:	es push cs
  426791:	scas   al,BYTE PTR es:[edi]
  426792:	cdq    
  426793:	pop    ecx
  426794:	or     DWORD PTR [ecx],eax
  426796:	cmp    al,0x4f
  426798:	xor    edx,ebx
  42679a:	inc    ebp
  42679b:	mov    WORD PTR [eax],?
  42679d:	and    esi,DWORD PTR [ebp-0x53]
  4267a0:	inc    ecx
  4267a1:	mov    dl,0x7a
  4267a3:	mov    al,ds:0xacf72387
  4267a8:	cdq    
  4267a9:	outs   dx,DWORD PTR ds:[esi]
  4267aa:	out    0x29,eax
  4267ac:	icebp  
  4267ad:	xor    BYTE PTR [ecx-0x51],0x7d
  4267b1:	mov    dh,0x51
  4267b3:	dec    ebp
  4267b4:	pop    esp
  4267b5:	paddsw mm6,QWORD PTR [eax-0x44]
  4267b9:	push   cs
  4267ba:	std    
  4267bb:	mov    ecx,edx
  4267bd:	mov    ds:0x862b1e02,eax
  4267c2:	push   es
  4267c3:	mov    ds:0x4a12a2a4,eax
  4267c8:	pushf  
  4267c9:	push   ebp
  4267ca:	(bad)  
  4267cc:	ss push edx
  4267ce:	inc    ebx
  4267cf:	xor    al,0x58
  4267d1:	cwde   
  4267d2:	fnstsw WORD PTR [edi+0x1e08acd3]
  4267d8:	out    dx,eax
  4267d9:	mov    ecx,0x708fc652
  4267de:	sub    DWORD PTR [edi],edi
  4267e0:	dec    eax
  4267e1:	push   eax
  4267e2:	fild   QWORD PTR [edx+0x143c07d]
  4267e8:	xor    cl,dh
  4267ea:	mov    esi,0x338acadb
  4267ef:	(bad)  
  4267f0:	in     al,0x11
  4267f2:	pop    ebx
  4267f3:	add    esi,DWORD PTR [esi+esi*1-0x61]
  4267f7:	out    dx,eax
  4267f8:	mov    al,0x4d
  4267fa:	mov    eax,ds:0xb814ec3e
  4267ff:	pop    ebx
  426800:	or     bh,BYTE PTR [edx-0x4705dd31]
  426806:	bound  edx,QWORD PTR [esi-0x13]
  426809:	pop    ebx
  42680a:	push   edi
  42680b:	sub    edx,DWORD PTR [eax+0x4]
  42680e:	adc    BYTE PTR ss:[edi],dh
  426811:	ror    DWORD PTR [eax-0x3b80c418],cl
  426817:	pop    eax
  426818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426819:	push   ss
  42681a:	cmp    DWORD PTR [ebx-0x41cda618],ecx
  426820:	sub    eax,0xa5ce1110
  426825:	js     0x42681c
  426827:	std    
  426828:	gs loop 0x42682b
  42682b:	(bad)  
  42682c:	nop
  42682d:	adc    dl,dl
  42682f:	das    
  426830:	call   0x123d0b80
  426835:	mov    al,0x41
  426837:	add    eax,0xfa76fb52
  42683c:	dec    ebx
  42683d:	(bad)  
  42683e:	jmp    0x26e370cf
  426843:	cdq    
  426844:	jmp    0xbbbe60b2
  426849:	mov    ebp,0x3d2e56f
  42684e:	stos   BYTE PTR es:[edi],al
  42684f:	cmp    BYTE PTR [edx],bl
  426851:	jb     0x426829
  426853:	shr    DWORD PTR [ebp+0x316a8ff5],1
  426859:	cmp    ecx,eax
  42685b:	iret   
  42685c:	rcr    DWORD PTR [ebx+0x1c473c7f],1
  426862:	das    
  426863:	push   cs
  426864:	sub    dh,BYTE PTR [esi-0x71]
  426867:	jmp    0xe329cab9
  42686c:	mov    cl,BYTE PTR [ebx-0x26c5d248]
  426872:	adc    eax,0x1adb2738
  426877:	or     bh,dh
  426879:	push   ss
  42687a:	lahf   
  42687b:	into   
  42687c:	jg     0x426800
  42687e:	jae    0x426840
  426880:	aad    0xb3
  426882:	and    al,0x3f
  426884:	dec    esp
  426885:	mov    edi,0x27bd8756
  42688a:	sahf   
  42688b:	pusha  
  42688c:	sub    ebx,ebp
  42688e:	ja     0x426817
  426890:	enter  0x188d,0xb0
  426894:	cli    
  426895:	(bad)  
  426896:	jnp    0x426828
  426898:	xchg   edx,eax
  426899:	fadd   st(6),st
  42689b:	pop    edi
  42689c:	les    ebp,FWORD PTR es:[edx+eiz*4+0xd3ef7d1]
  4268a4:	retf   
  4268a5:	mov    al,0x8
  4268a7:	jmp    0x426863
  4268a9:	repz les edi,FWORD PTR [ecx-0x75]
  4268ad:	inc    esp
  4268ae:	pusha  
  4268af:	dec    ebx
  4268b0:	enter  0xc188,0xfc
  4268b4:	mov    dl,0xc2
  4268b6:	jno    0x4268ad
  4268b8:	cmp    cl,BYTE PTR [edi]
  4268ba:	and    DWORD PTR [eax],ebx
  4268bc:	fistp  DWORD PTR [eax-0x1e]
  4268bf:	mov    bh,0xf5
  4268c1:	mov    ecx,0x49244ef6
  4268c6:	fwait
  4268c7:	pop    ds
  4268c8:	div    DWORD PTR ds:0x8e5a69ab
  4268ce:	sub    al,0xd0
  4268d0:	popa   
  4268d1:	push   0x6c703b01
  4268d6:	add    BYTE PTR [ecx-0x2fbd4dcd],ah
  4268dc:	push   ebx
  4268dd:	inc    edi
  4268de:	dec    edi
  4268df:	lea    ebx,[eax+0x1b]
  4268e2:	mov    ebp,0x140eeccb
  4268e7:	sub    eax,0xc5cd67bf
  4268ec:	fisttp WORD PTR [ecx+edi*1-0xb8673b]
  4268f3:	pop    es
  4268f4:	fcom   st(3)
  4268f6:	rcr    ebx,1
  4268f8:	xchg   edi,eax
  4268f9:	mov    esp,DWORD PTR [edx]
  4268fb:	ret    0xb302
  4268fe:	ins    BYTE PTR es:[edi],dx
  4268ff:	stos   DWORD PTR es:[edi],eax
  426900:	push   0x46
  426902:	lahf   
  426903:	jp     0x4268b6
  426905:	add    ecx,ecx
  426907:	mov    ebx,0x23a3f968
  42690c:	(bad)  
  42690e:	add    BYTE PTR [eax-0x6a],bl
  426911:	call   0x85fa:0xd382af1f
  426918:	push   es
  426919:	and    eax,DWORD PTR [esi+0x75]
  42691c:	inc    ebx
  42691d:	in     eax,0x23
  42691f:	fs cli 
  426921:	(bad)  
  426922:	(bad)  [esi-0x686b006b]
  426928:	push   esi
  426929:	or     eax,0x78bd0950
  42692e:	sub    dl,BYTE PTR [ecx+esi*1-0x4c]
  426932:	cli    
  426933:	inc    esp
  426934:	or     DWORD PTR [edx-0x40],edx
  426937:	cli    
  426938:	cdq    
  426939:	and    dl,al
  42693b:	inc    esi
  42693c:	fcmove st,st(5)
  42693e:	push   edx
  42693f:	scas   al,BYTE PTR es:[edi]
  426940:	addr16 inc ebx
  426942:	test   eax,0x3f9eb3
	...
  42694f:	add    BYTE PTR [eax],al
  426951:	add    BYTE PTR [ecx+0x3],bl
  426954:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  426959:	pop    ds
  42695a:	sub    ebp,DWORD PTR [esi-0x40f8c146]
  426960:	or     DWORD PTR [edx+edx*1],eax
  426963:	fld    DWORD PTR [ecx]
  426965:	add    ah,cl
  426967:	add    al,BYTE PTR [eax]
  426969:	add    BYTE PTR [ecx-0x7c],ah
  42696c:	pushf  
  42696d:	dec    esi
  42696e:	inc    esp
  42696f:	popf   
  426970:	mov    ebx,0x49d024fa
  426975:	push   ebp
  426976:	shl    ebx,cl
  426978:	sub    DWORD PTR [ebx+0x3fc00342],esp
  42697e:	test   eax,0x84d895f6
  426983:	jno    0x4269d5
  426985:	push   es
  426986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426987:	mov    bh,0x5d
  426989:	inc    edi
  42698a:	push   edi
  42698b:	mul    ebx
  42698d:	fiadd  DWORD PTR [ecx+0x794fc44f]
  426993:	push   ds
  426994:	lods   eax,DWORD PTR ds:[esi]
  426995:	ins    BYTE PTR es:[edi],dx
  426996:	pushf  
  426997:	xchg   DWORD PTR [ebx+0x6d],edi
  42699a:	mov    ebp,ecx
  42699c:	in     eax,dx
  42699d:	pop    es
  42699e:	xchg   al,bh
  4269a0:	pop    edi
  4269a1:	fisttp WORD PTR [ebp+0x261d1743]
  4269a7:	push   esi
  4269a8:	add    DWORD PTR [eax-0x503f3b85],esi
  4269ae:	xchg   DWORD PTR [edx-0x65],ecx
  4269b1:	sub    ah,BYTE PTR [ecx+ecx*1]
  4269b4:	es pop ebp
  4269b6:	adc    esi,DWORD PTR [edi]
  4269b8:	mov    ah,0x10
  4269ba:	sbb    DWORD PTR [ebx+0x77fcbdaa],ebp
  4269c0:	stc    
  4269c1:	fwait
  4269c2:	dec    ebp
  4269c3:	fst    QWORD PTR [ecx]
  4269c5:	adc    DWORD PTR [eax-0x30155e7b],esi
  4269cb:	fsub   DWORD PTR [edx]
  4269cd:	aas    
  4269ce:	or     ebx,ecx
  4269d0:	adc    ecx,DWORD PTR [edi]
  4269d2:	push   edx
  4269d3:	cmp    eax,0x30844167
  4269d8:	push   ebp
  4269d9:	clc    
  4269da:	jno    0x4269e7
  4269dc:	add    eax,0x2217734f
  4269e1:	popf   
  4269e2:	ja     0x426a3d
  4269e4:	jp     0x42699d
  4269e6:	or     DWORD PTR [ebx],edi
  4269e8:	jl     0x426a43
  4269ea:	lea    edi,[ecx+0x21]
  4269ed:	sub    BYTE PTR [ecx-0x2f],cl
  4269f0:	jecxz  0x426a46
  4269f2:	fnstsw WORD PTR [edx-0x4881d227]
  4269f8:	pop    esp
  4269f9:	ror    BYTE PTR [esi],0x9f
  4269fc:	xchg   ecx,ebx
  4269fe:	cmc    
  4269ff:	push   edx
  426a00:	fidivr WORD PTR [eax+0x77052553]
  426a06:	int3   
  426a07:	xchg   edx,eax
  426a08:	inc    edx
  426a09:	jb     0x4269da
  426a0b:	out    dx,eax
  426a0c:	lahf   
  426a0d:	and    eax,0xae06c219
  426a12:	and    BYTE PTR [edi-0xe],dh
  426a15:	fstp   TBYTE PTR [ebp+0x2e]
  426a18:	scas   eax,DWORD PTR es:[edi]
  426a19:	adc    ebp,DWORD PTR [edi-0x9]
  426a1c:	(bad)  
  426a1d:	ja     0x426a82
  426a1f:	aas    
  426a20:	std    
  426a21:	xchg   ebp,eax
  426a22:	add    eax,0x2bc14907
  426a27:	ror    BYTE PTR [ecx+eax*8],0xae
  426a2b:	xor    DWORD PTR [edi+0x1167704a],edi
  426a31:	push   cs
  426a32:	shl    edx,0x58
  426a35:	repz sub ch,BYTE PTR [esi-0x6828912d]
  426a3c:	sti    
  426a3d:	cmp    BYTE PTR [ecx],dl
  426a3f:	xor    al,0x8e
  426a41:	(bad)  
  426a42:	gs daa 
  426a44:	xchg   ecx,eax
  426a45:	jne    0x426a5a
  426a47:	idiv   BYTE PTR [edi-0x1a]
  426a4a:	sub    DWORD PTR [edi-0x2],esi
  426a4d:	jne    0x426a7d
  426a4f:	jmp    0x21f1:0x98f159e7
  426a56:	outs   dx,DWORD PTR ds:[esi]
  426a57:	clc    
  426a58:	lea    edx,[ecx+0x5f]
  426a5b:	mov    bl,BYTE PTR [eax-0x78]
  426a5e:	fwait
  426a5f:	xchg   ebx,eax
  426a60:	mov    eax,ds:0x3307f31c
  426a65:	idiv   BYTE PTR [ecx+esi*8]
  426a68:	js     0x426a2b
  426a6a:	mov    ebx,ss
  426a6c:	jmp    0xe2a1bd80
  426a71:	xor    ah,BYTE PTR [ecx+0x1c]
  426a74:	outs   dx,DWORD PTR ds:[esi]
  426a75:	sub    BYTE PTR [edi],ch
  426a77:	xchg   ebx,eax
  426a78:	out    dx,al
  426a79:	addr16 jg 0x426a8f
  426a7c:	adc    DWORD PTR [esi+ecx*2-0x17],edx
  426a80:	gs stos BYTE PTR es:[edi],al
  426a82:	add    eax,0x16962486
  426a87:	dec    BYTE PTR [eax]
  426a89:	mov    ebp,0x8fa9fd9a
  426a8e:	out    dx,eax
  426a8f:	jg     0x426a29
  426a91:	push   esi
  426a92:	in     al,dx
  426a93:	add    edi,esp
  426a95:	or     eax,DWORD PTR [ecx]
  426a97:	cld    
  426a98:	loop   0x426a8f
  426a9a:	sbb    BYTE PTR [eax+0x78e41e48],ah
  426aa0:	cmp    BYTE PTR [ecx+0x16],0x3a
  426aa4:	test   eax,0x494a2fdc
  426aa9:	mov    al,0x58
  426aab:	(bad)  
  426aac:	push   esp
  426aad:	rol    esi,cl
  426aaf:	cmp    esi,DWORD PTR [ecx+eax*4+0x20]
  426ab3:	test   BYTE PTR [ebp+0x5c202e9],ch
  426ab9:	je     0x4d237a67
  426abf:	sbb    eax,0x710e1044
  426ac4:	mov    ebx,0x6977ddaa
  426ac9:	mov    ch,0xd2
  426acb:	mov    ds:0x1f2c33b4,al
  426ad0:	dec    esp
  426ad1:	pusha  
  426ad2:	psubb  mm6,QWORD PTR [ebp+0x6b81a619]
  426ad9:	mov    ds:0x4f73b77c,eax
  426ade:	test   al,0xe2
  426ae0:	mov    bh,0xaf
  426ae2:	idiv   BYTE PTR [eax]
  426ae4:	adc    edx,DWORD PTR [edi+0x45]
  426ae7:	push   ss
  426ae8:	lock sub ecx,DWORD PTR [edi]
  426aeb:	rol    BYTE PTR [ebx+ebx*1+0x5f],1
  426aef:	test   al,0x45
  426af1:	adc    al,0x10
  426af3:	mov    edx,0x3ce2ff65
  426af8:	sahf   
  426af9:	and    ebx,DWORD PTR [edx]
  426afb:	jp     0x426b2c
  426afd:	mov    bl,0xc1
  426aff:	dec    esp
  426b00:	mov    esi,0x8f4ea31b
  426b05:	outs   dx,DWORD PTR ds:[esi]
  426b06:	leave  
  426b07:	shr    bh,cl
  426b09:	test   DWORD PTR es:[edx-0x1d],ecx
  426b0d:	imul   ebp,DWORD PTR [eax+edi*8-0x74a05edc],0x5e90c5e5
  426b18:	pop    esp
  426b19:	cmp    edi,eax
  426b1b:	xor    ebp,DWORD PTR ss:[esi+0x410fe019]
  426b22:	cmc    
  426b23:	pop    ebx
  426b24:	and    DWORD PTR es:[esp+eax*2-0x1584aa30],0x3835e10e
  426b30:	repz mov ebp,0xc42810cc
  426b36:	jmp    0xeb75:0xccd21f2b
  426b3d:	jae    0x426bb9
  426b3f:	shl    DWORD PTR [edi],1
  426b41:	push   0x26
  426b43:	pop    ds
  426b44:	mov    WORD PTR [edi],?
  426b46:	pop    ds
  426b47:	mov    esi,0x42307b7c
  426b4c:	cmp    al,0x53
  426b4e:	je     0x426b77
  426b50:	(bad)  
  426b52:	retf   0x8897
  426b55:	retf   
  426b56:	arpl   WORD PTR [edx-0x3fd2597],di
  426b5c:	nop
  426b5d:	(bad)  
  426b5e:	mov    al,0xfa
  426b60:	pop    edx
  426b61:	pushw  ss
  426b63:	lods   eax,DWORD PTR ds:[esi]
  426b64:	mov    eax,ebx
  426b66:	leave  
  426b67:	popf   
  426b68:	ja     0x426b6f
  426b6a:	adc    bl,BYTE PTR [eax+0x74]
  426b6d:	icebp  
  426b6e:	lods   eax,DWORD PTR ds:[esi]
  426b6f:	xor    eax,0xbc94f4d2
  426b74:	sbb    cl,BYTE PTR [ecx-0x5e9aa1ef]
  426b7a:	ret    
  426b7b:	jp     0x426b43
  426b7d:	call   0xf4dde7b9
  426b82:	dec    esp
  426b83:	or     edx,DWORD PTR [edi-0x6e]
  426b86:	push   0x1452b7b6
  426b8b:	jo     0x426b5c
  426b8d:	mov    dh,BYTE PTR [edx+0x7d]
  426b90:	add    eax,0x5df8d92b
  426b95:	sbb    BYTE PTR ds:0x5c03333d,dl
  426b9b:	xor    al,0x2a
  426b9d:	inc    esi
  426b9e:	sbb    BYTE PTR [edx+edx*2+0x1be7ff19],dl
  426ba5:	std    
  426ba6:	fisubr DWORD PTR [ebx+0x3f673eb5]
  426bac:	arpl   ax,sp
  426bae:	rcl    BYTE PTR [eax-0x59939eb6],1
  426bb4:	inc    ebp
  426bb5:	push   ds
  426bb6:	imul   esp,DWORD PTR [ebp-0x16],0xcd9d40aa
  426bbd:	jne    0x426bbc
  426bbf:	lods   al,BYTE PTR ds:[esi]
  426bc0:	pop    ds
  426bc1:	add    DWORD PTR [ebp-0x6403584a],edi
  426bc7:	sti    
  426bc8:	pop    edi
  426bc9:	or     al,0x71
  426bcb:	jns    0x426c3e
  426bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bce:	sbb    BYTE PTR [edi],bl
  426bd0:	ins    BYTE PTR es:[edi],dx
  426bd1:	pop    es
  426bd2:	jnp    0x426c51
  426bd4:	adc    BYTE PTR [esi-0x38],bl
  426bd7:	aaa    
  426bd8:	xor    ah,cl
  426bda:	jmp    0x426c03
  426bdc:	in     al,dx
  426bdd:	sub    bl,BYTE PTR [ebp-0x46]
  426be0:	dec    edx
  426be1:	pop    ecx
  426be2:	xchg   ebx,eax
  426be3:	push   ds
  426be4:	mov    edx,0xd5dcbde0
  426be9:	mov    dh,0x8d
  426beb:	jl     0x426b7e
  426bed:	add    edx,DWORD PTR [eax+0x14435306]
  426bf3:	imul   edx,DWORD PTR [edx-0x55],0x8e4b89ca
  426bfa:	into   
  426bfb:	add    al,0xbc
  426bfd:	in     al,0xf6
  426bff:	pop    ecx
  426c00:	addr16 popf 
  426c02:	fnstcw WORD PTR [ebx-0x73f60c5a]
  426c08:	aam    0xf3
  426c0a:	or     al,0x7f
  426c0c:	jcxz   0x426c56
  426c0f:	lds    esp,FWORD PTR [ebp-0x3bfe763f]
  426c15:	psubusb mm1,mm0
  426c18:	mov    ebx,0x75dc39f9
  426c1d:	icebp  
  426c1e:	out    dx,al
  426c1f:	xor    cl,ch
  426c21:	test   DWORD PTR [bp-0x23],0xede43501
  426c29:	sar    BYTE PTR [ebx+0x33],0x88
  426c2d:	lods   al,BYTE PTR ds:[esi]
  426c2e:	mov    ah,0xda
  426c30:	push   es
  426c31:	neg    BYTE PTR [edx]
  426c33:	test   BYTE PTR [eax],0xf1
	...
  426c42:	sbb    esp,DWORD PTR [edi]
  426c44:	pushf  
  426c45:	cli    
  426c46:	mov    esp,0x2ae77ffb
  426c4b:	scas   al,BYTE PTR es:[edi]
  426c4c:	aad    0xf
  426c4e:	xchg   esp,eax
  426c4f:	dec    edi
  426c50:	imul   ebp,DWORD PTR [ebx],0xffffffde
  426c53:	fild   DWORD PTR [ecx]
  426c55:	add    ah,cl
  426c57:	add    al,BYTE PTR [eax]
  426c59:	add    dh,cl
  426c5b:	xchg   ebp,eax
  426c5c:	cmp    BYTE PTR [edi],cl
  426c5e:	dec    ebp
  426c5f:	aas    
  426c60:	push   esi
  426c61:	int    0x66
  426c63:	test   ecx,esp
  426c65:	into   
  426c66:	loope  0x426ce0
  426c68:	push   edi
  426c69:	es into 
  426c6b:	or     eax,0x48032d3a
  426c70:	jg     0x426ccd
  426c72:	stos   BYTE PTR es:[edi],al
  426c73:	sbb    DWORD PTR [ebp-0xc],esp
  426c76:	call   FWORD PTR [edx-0x7d2615b]
  426c7c:	mov    DWORD PTR [eax+ebp*2-0x6d],eax
  426c80:	xchg   DWORD PTR [edi-0x5d35600f],ebx
  426c86:	call   0x3b878b74
  426c8b:	dec    edx
  426c8c:	popf   
  426c8d:	adc    BYTE PTR [edx],0xc2
  426c90:	xchg   edx,eax
  426c91:	jb     0x426c83
  426c93:	jl     0x426cf1
  426c95:	and    BYTE PTR [edx-0x58],cl
  426c98:	outs   dx,BYTE PTR ds:[esi]
  426c99:	mov    bl,BYTE PTR [ecx+ecx*8]
  426c9c:	add    dl,bh
  426c9e:	adc    DWORD PTR [esi+0x3e],edi
  426ca1:	call   0x57a98fb9
  426ca6:	call   0x18ce91b7
  426cab:	jl     0x426c6b
  426cad:	ja     0x426cb5
  426caf:	dec    esi
  426cb0:	clc    
  426cb1:	pop    ecx
  426cb2:	call   0xaac607bc
  426cb7:	pusha  
  426cb8:	cli    
  426cb9:	and    dl,bh
  426cbb:	ja     0x426cf7
  426cbd:	add    edi,DWORD PTR [ebp+0x2b0e1fca]
  426cc3:	mov    edx,0x4d4ee2d1
  426cc8:	lock pop ebx
  426cca:	cld    
  426ccb:	push   eax
  426ccc:	loop   0x426cfa
  426cce:	(bad)  
  426ccf:	in     eax,0xa3
  426cd1:	jno    0x426d43
  426cd3:	push   ebp
  426cd4:	pop    edx
  426cd5:	fbstp  TBYTE PTR [edi+0x3b1fc5d4]
  426cdb:	mov    ebx,0x2d773b6a
  426ce0:	xchg   DWORD PTR [edx+0x6c6e3499],ebx
  426ce6:	es inc esi
  426ce8:	xchg   esp,eax
  426ce9:	pop    ebx
  426cea:	fistp  WORD PTR [edi]
  426cec:	mov    al,BYTE PTR [ebp+ecx*2+0x2a]
  426cf0:	xor    eax,0x77e608b6
  426cf5:	mov    ds:0x2b1c4c9f,al
  426cfa:	jle    0x426c8e
  426cfc:	dec    ebx
  426cfd:	bound  esp,QWORD PTR [ecx]
  426cff:	cdq    
  426d00:	adc    cl,BYTE PTR [edx-0x26ba83f0]
  426d06:	pop    edi
  426d07:	jecxz  0x426d30
  426d09:	push   ebx
  426d0a:	mov    dl,0x9f
  426d0d:	or     BYTE PTR [edi+0x6b1bb4d9],bl
  426d13:	ds inc edi
  426d15:	xor    dl,bl
  426d17:	xor    DWORD PTR [eax-0x2e359dc2],edi
  426d1d:	mov    dl,0x58
  426d1f:	(bad)  
  426d21:	es gs dec esi
  426d24:	rcr    ebx,0x21
  426d27:	gs call 0xd780:0x707dda35
  426d2f:	xor    DWORD PTR [eax],ebp
  426d31:	out    0xfa,ax
  426d34:	(bad)  
  426d36:	test   DWORD PTR [edi],ebp
  426d38:	mov    dl,0xa4
  426d3a:	jns    0x426d61
  426d3c:	js     0x426d03
  426d3e:	jbe    0x426d02
  426d40:	sbb    DWORD PTR [edx],0xaf2e16e1
  426d46:	and    ebx,edx
  426d48:	loope  0x426db8
  426d4a:	les    edi,FWORD PTR [eax+ebp*2+0xc]
  426d4e:	dec    ecx
  426d4f:	xor    esp,DWORD PTR [edx-0x51]
  426d52:	pop    edx
  426d53:	int3   
  426d54:	aad    0xde
  426d56:	sbb    BYTE PTR [eax],0xf1
  426d59:	mov    bl,0xe6
  426d5b:	jns    0x426d95
  426d5d:	jle    0x426db4
  426d5f:	or     DWORD PTR [edx],eax
  426d61:	pop    esp
  426d62:	fisub  DWORD PTR [edi]
  426d64:	or     edx,DWORD PTR [eax]
  426d66:	in     al,0x96
  426d68:	clc    
  426d69:	ficomp DWORD PTR [esi+0x18]
  426d6c:	pusha  
  426d6d:	xor    eax,0x1800c83d
  426d72:	pop    ebx
  426d73:	or     cl,ah
  426d75:	jbe    0x426d2c
  426d77:	js     0x426db6
  426d79:	mov    WORD PTR [eax-0x9f61384],es
  426d7f:	cmp    ebp,DWORD PTR [edi-0x99f407]
  426d85:	adc    BYTE PTR ds:0xd32a96e5,ch
  426d8b:	adc    al,0xaf
  426d8d:	mov    esi,0x77436854
  426d92:	xchg   esi,eax
  426d93:	mov    DWORD PTR [edi+0x7fd5f6f],ebx
  426d99:	push   ebx
  426d9a:	fs nop
  426d9c:	dec    eax
  426d9d:	out    dx,al
  426d9e:	aaa    
  426d9f:	xchg   edi,eax
  426da0:	cdq    
  426da1:	or     al,0x8e
  426da3:	iret   
  426da4:	hlt    
  426da5:	imul   DWORD PTR ds:0x5fab27a0
  426dab:	(bad)  
  426dac:	lahf   
  426dad:	sti    
  426dae:	fstp   DWORD PTR [eax-0x64]
  426db1:	scas   eax,DWORD PTR es:[edi]
  426db2:	(bad)  
  426db3:	pop    ebx
  426db4:	or     ebx,DWORD PTR [esi+eax*2+0x5adb5393]
  426dbb:	(bad)
  426dbe:	xor    bl,bh
  426dc0:	inc    esi
  426dc1:	sub    al,0xc2
  426dc3:	and    dh,BYTE PTR [esi-0x2d77603f]
  426dc9:	jbe    0x426d6c
  426dcb:	lods   eax,DWORD PTR ds:[esi]
  426dcc:	jns    0x426d77
  426dce:	ja     0x426de4
  426dd0:	and    BYTE PTR [ecx-0x73],ah
  426dd3:	sub    eax,0xcd645abb
  426dd8:	lahf   
  426dd9:	mov    WORD PTR [ecx-0x6a],es
  426ddc:	jmp    0x426dba
  426dde:	stc    
  426ddf:	or     BYTE PTR [ecx+ecx*2+0xc],al
  426de3:	inc    ebp
  426de4:	push   ebp
  426de5:	xor    edi,edx
  426de7:	(bad)  
  426de8:	fiadd  DWORD PTR [esi+0x38]
  426deb:	xor    al,0xfd
  426ded:	imul   DWORD PTR [esi-0x75]
  426df0:	mov    al,0x6
  426df2:	or     DWORD PTR [eax],edi
  426df4:	add    BYTE PTR [eax+0x3ce0f54f],cl
  426dfa:	xchg   esi,eax
  426dfb:	mov    ecx,0x92746d7f
  426e00:	call   FWORD PTR ds:0x831db6c3
  426e06:	inc    edi
  426e07:	xchg   esp,eax
  426e08:	jb     0x426d91
  426e0a:	mov    al,0x33
  426e0c:	sub    dl,BYTE PTR [edx+0x728905a8]
  426e12:	jnp    0x426e49
  426e14:	(bad)
  426e17:	xchg   edi,eax
  426e18:	cmp    edx,edi
  426e1a:	hlt    
  426e1b:	sbb    al,0xb1
  426e1d:	add    DWORD PTR [ebp-0x3f808e38],ebx
  426e23:	aas    
  426e24:	push   es
  426e25:	daa    
  426e26:	push   0x1c072e9a
  426e2b:	dec    ecx
  426e2c:	mov    bh,0x1e
  426e2e:	or     al,0xe6
  426e30:	nop
  426e31:	repnz rcr al,cl
  426e34:	ret    
  426e35:	dec    edx
  426e36:	pop    edx
  426e37:	sbb    eax,0xc5fe089c
  426e3c:	(bad)  
  426e3d:	out    dx,eax
  426e3e:	pop    ebp
  426e3f:	pop    ebx
  426e40:	pop    edi
  426e41:	out    dx,eax
  426e42:	push   edi
  426e43:	test   edx,esp
  426e45:	xchg   ebx,eax
  426e46:	adc    eax,0xf2cd8828
  426e4b:	mov    ds:0x961b5f05,eax
  426e50:	and    esi,DWORD PTR [eax+ecx*4]
  426e53:	mov    edx,0x766dd907
  426e58:	fisttp WORD PTR [ecx-0x21]
  426e5b:	dec    ebp
  426e5c:	das    
  426e5d:	jo     0x426dff
  426e5f:	hlt    
  426e60:	(bad)  
  426e62:	cmp    BYTE PTR [esi+0x0],0xe2
  426e66:	test   eax,0x86e445e9
  426e6b:	(bad)  
  426e6c:	or     eax,0xfcf83f2c
  426e71:	test   al,0xbf
  426e73:	pop    edi
  426e74:	repz std 
  426e76:	fldenv [esp+ecx*1]
  426e79:	ins    DWORD PTR es:[edi],dx
  426e7a:	rol    BYTE PTR [edx-0x39995762],1
  426e80:	ins    DWORD PTR es:[edi],dx
  426e81:	jg     0x426ee9
  426e83:	loopne 0x426ef3
  426e85:	add    DWORD PTR [ebx-0x3909f7d7],ebx
  426e8b:	or     eax,0xf96d95cf
  426e90:	pop    edx
  426e91:	sbb    ebp,DWORD PTR [ecx]
  426e93:	mov    es,WORD PTR [edx+edx*2-0x7eff95c4]
  426e9a:	jo     0x426f09
  426e9c:	in     al,dx
  426e9d:	scas   eax,DWORD PTR es:[edi]
  426e9e:	ret    
  426e9f:	fnop   
  426ea1:	or     al,0xf0
  426ea3:	jns    0x426e93
  426ea5:	cmovno ebx,esp
  426ea8:	mov    bl,0x4d
  426eaa:	mov    bh,0x17
  426eac:	xchg   edx,eax
  426ead:	ret    
  426eae:	and    al,BYTE PTR [edi+0x4d8610ca]
  426eb4:	xchg   cl,bh
  426eb6:	push   ss
  426eb7:	fst    QWORD PTR [ecx]
  426eb9:	or     esp,DWORD PTR [edi]
  426ebb:	dec    ebx
  426ebc:	push   cs
  426ebd:	jb     0x426f1a
  426ebf:	and    BYTE PTR [edi+0x11d7a4fc],cl
  426ec5:	jns    0x426e85
  426ec7:	inc    esp
  426ec8:	and    al,0xc5
  426eca:	pop    esi
  426ecb:	jl     0x426f03
  426ecd:	(bad)  
  426ece:	loopne 0x426e57
  426ed0:	jmp    0x67d5:0x7c48cdd9
  426ed7:	push   edx
  426ed8:	into   
  426ed9:	test   bl,al
  426edb:	rep ins DWORD PTR es:[edi],dx
  426edd:	and    ecx,DWORD PTR [ecx+0x5748e154]
  426ee3:	fist   WORD PTR [ebx-0x55]
  426ee6:	mov    cl,0x44
  426ee8:	jb     0x426f17
  426eea:	repnz push 0x0
  426eed:	pop    ds
  426eee:	or     ebp,DWORD PTR [eax]
  426ef0:	cli    
  426ef1:	arpl   WORD PTR [ecx+0x1697baa8],ax
  426ef7:	fld    st(5)
  426ef9:	int3   
  426efa:	xchg   edi,eax
  426efb:	xor    dh,BYTE PTR ds:0x6f749dc1
  426f01:	inc    ebx
  426f02:	add    al,0xd9
  426f04:	xchg   edi,eax
  426f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f06:	inc    esi
  426f07:	add    DWORD PTR [ebp-0x66],ebx
  426f0a:	jl     0x426f51
  426f0c:	dec    ecx
  426f0d:	xchg   ebp,eax
  426f0e:	pusha  
  426f0f:	jp     0x426f5e
  426f11:	sub    eax,0x17ba6b4b
  426f16:	and    esp,edx
  426f18:	mov    edx,0xe2746585
  426f1d:	test   eax,0xdac85c3e
  426f22:	or     al,0xf6
  426f24:	std    
  426f25:	mov    cl,0x0
	...
  426f2f:	add    BYTE PTR [eax],al
  426f31:	add    BYTE PTR [edx-0x107ddbc],bl
  426f37:	(bad)  
  426f38:	fisub  DWORD PTR [esi+0x62]
  426f3b:	mov    eax,0xd4107475
  426f40:	test   eax,0x1deaab6
  426f45:	add    ah,cl
  426f47:	add    al,BYTE PTR [eax]
  426f49:	add    BYTE PTR [edx],bh
  426f4b:	xor    BYTE PTR [ebx+eiz*2-0x29],dh
  426f4f:	jb     0x426eec
  426f51:	shl    DWORD PTR [esi],0x68
  426f54:	pushf  
  426f55:	jecxz  0x426f1c
  426f57:	fnstenv [esi+ecx*2-0x7b]
  426f5b:	mov    ds:0x767c0bcb,al
  426f60:	aaa    
  426f61:	es aaa 
  426f63:	inc    eax
  426f64:	retf   0x9fea
  426f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f68:	ja     0x426f33
  426f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f6b:	pop    ebx
  426f6c:	mov    edi,0x7f1d2647
  426f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f72:	iret   
  426f73:	mov    bl,0xfe
  426f75:	cmp    BYTE PTR [esi+ecx*2-0x74],bh
  426f79:	xchg   BYTE PTR [edx+edi*4],cl
  426f7c:	mov    ebx,0x14cf6054
  426f81:	fadd   QWORD PTR [edi+0x81ff2be]
  426f87:	mov    db0,edx
  426f8a:	push   ebp
  426f8b:	jno    0x426f91
  426f8d:	add    eax,0xded1804d
  426f92:	aad    0x6c
  426f94:	xor    ah,BYTE PTR [ebp-0x6f4dcfcf]
  426f9a:	xchg   BYTE PTR [ecx],bh
  426f9c:	pop    DWORD PTR [ebp+0xe807ba5]
  426fa2:	adc    ebx,eax
  426fa4:	fucom  st(7)
  426fa6:	int    0x2b
  426fa8:	repnz (bad) 
  426faa:	fdiv   DWORD PTR [edi]
  426fac:	dec    BYTE PTR [edi+edx*1]
  426faf:	or     al,0xf8
  426fb1:	cmp    bh,BYTE PTR [edx-0xe]
  426fb4:	popf   
  426fb5:	loop   0x426f51
  426fb7:	stos   BYTE PTR es:[edi],al
  426fb8:	repnz stos DWORD PTR es:[edi],eax
  426fba:	not    bh
  426fbc:	gs mov edi,0x22cfcee6
  426fc2:	cwde   
  426fc3:	add    cl,BYTE PTR [eax]
  426fc5:	jbe    0x427032
  426fc7:	jne    0x426fac
  426fc9:	stc    
  426fca:	mov    ecx,0x9f0c78fd
  426fcf:	pop    ebx
  426fd0:	and    edx,DWORD PTR [ecx-0xf101d77]
  426fd6:	pop    ebp
  426fd7:	sbb    DWORD PTR [ebp+ebp*8-0x18],0x150d38df
  426fdf:	cvtps2pi mm7,QWORD PTR [edi]
  426fe2:	inc    esi
  426fe3:	push   0xffffffb7
  426fe5:	xchg   esi,eax
  426fe6:	add    cl,BYTE PTR [ecx+0x2]
  426fe9:	mov    ebp,0x36e2b5d2
  426fee:	mov    ch,BYTE PTR [edi-0x5a]
  426ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ff2:	inc    esp
  426ff3:	jne    0x427048
  426ff5:	sub    al,BYTE PTR [esi+0x46]
  426ff8:	loope  0x426feb
  426ffa:	mov    ebp,0x25bfa2ec
  426fff:	cwde   
  427000:	lods   al,BYTE PTR ds:[esi]
  427001:	sub    ah,BYTE PTR [edi-0x60874d44]
  427007:	jp     0x426ffa
  427009:	push   esp
  42700a:	mov    al,0x2a
  42700c:	cmp    eax,0x75be578
  427011:	adc    al,0x70
  427013:	icebp  
  427014:	push   edx
  427015:	in     al,0xa8
  427017:	pop    eax
  427018:	arpl   WORD PTR [ecx-0x77],bx
  42701b:	in     eax,0x80
  42701d:	mov    cl,0x5f
  42701f:	les    esp,FWORD PTR [esi]
  427021:	(bad)  
  427022:	call   0x6f667887
  427027:	cmp    ebp,DWORD PTR [edx]
  427029:	fdivr  st(3),st
  42702b:	push   ebx
  42702c:	pop    ecx
  42702d:	add    DWORD PTR [edi-0x38],eax
  427030:	sub    eax,0xc9c8fbe5
  427035:	sub    dl,BYTE PTR [esi+esi*4]
  427038:	sar    ah,1
  42703a:	es js  0x427065
  42703d:	inc    esp
  42703e:	stos   BYTE PTR es:[edi],al
  42703f:	jg     0x4270bb
  427041:	fisub  WORD PTR [eax-0x328adba2]
  427047:	test   eax,0x3c3d752d
  42704c:	and    bh,BYTE PTR [esi-0x32]
  42704f:	js     0x427080
  427051:	test   ah,al
  427053:	or     al,0x15
  427055:	ficomp WORD PTR [esi]
  427057:	es (bad) 
  427059:	aam    0xc5
  42705b:	xchg   ebp,eax
  42705c:	aas    
  42705d:	xchg   esi,eax
  42705e:	sti    
  42705f:	pushf  
  427060:	sbb    ebp,DWORD PTR [eax]
  427062:	cmp    bh,BYTE PTR [esi-0x1decd628]
  427068:	das    
  427069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706b:	jecxz  0x4270b8
  42706d:	stos   BYTE PTR es:[edi],al
  42706e:	pop    esp
  42706f:	jg     0x42704d
  427071:	cld    
  427072:	iret   
  427073:	and    bh,BYTE PTR [ecx+0x727aa995]
  427079:	loope  0x427027
  42707b:	in     eax,dx
  42707c:	or     eax,0xc74f020d
  427081:	and    eax,0xba29cfd4
  427086:	jp     0x4270fa
  427088:	sbb    ebp,DWORD PTR [esi-0x4ce7a75e]
  42708e:	xchg   edi,eax
  42708f:	ds xchg esp,eax
  427091:	push   ecx
  427092:	std    
  427093:	sbb    al,ah
  427095:	or     eax,0xef598a2b
  42709a:	mov    ds:0x9339491b,eax
  42709f:	inc    esp
  4270a0:	and    BYTE PTR [ecx],ch
  4270a2:	js     0x4270ca
  4270a4:	or     eax,0x8a00c2a2
  4270a9:	inc    eax
  4270aa:	aam    0xfe
  4270ac:	inc    ebx
  4270ad:	push   eax
  4270ae:	dec    esp
  4270af:	cmp    al,0x65
  4270b1:	in     al,0x92
  4270b3:	jne    0x427080
  4270b5:	fstp   QWORD PTR [edi]
  4270b7:	sbb    al,0xd2
  4270b9:	je     0x427067
  4270bb:	ret    0x39e4
  4270be:	inc    esp
  4270bf:	in     eax,0xc9
  4270c1:	aam    0x6a
  4270c3:	add    DWORD PTR [ebx+eax*2],esi
  4270c6:	mov    ds:0xdb83c36b,eax
  4270cb:	out    0x97,eax
  4270cd:	dec    edx
  4270ce:	lea    edi,ds:0x4874a74b
  4270d4:	ins    BYTE PTR es:[edi],dx
  4270d5:	dec    ecx
  4270d6:	xor    BYTE PTR [eax+0x10],al
  4270d9:	fsubr  QWORD PTR [edi+edx*1-0x40b8b13a]
  4270e0:	xchg   esi,eax
  4270e1:	sbb    edi,ebp
  4270e3:	pop    ds
  4270e4:	add    cl,dl
  4270e6:	mov    BYTE PTR [ebp+0x5f34806a],dl
  4270ec:	and    eax,0x5361bf7d
  4270f1:	inc    ebp
  4270f2:	push   0x3b8f0dba
  4270f7:	xchg   ebp,eax
  4270f8:	mov    ah,0x54
  4270fa:	xchg   ebx,eax
  4270fb:	out    dx,eax
  4270fc:	sub    ebp,esi
  4270fe:	mov    esi,0xed43c002
  427103:	pop    edx
  427104:	jmp    0x9e80a0a3
  427109:	jae    0x42715a
  42710b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42710c:	cmc    
  42710d:	sti    
  42710e:	outs   dx,BYTE PTR ds:[esi]
  42710f:	sbb    al,0xa7
  427111:	mov    dl,0x2a
  427113:	hlt    
  427114:	push   es
  427115:	xchg   edx,eax
  427116:	mov    dx,0x1438
  42711a:	pop    eax
  42711b:	cmp    eax,0xa5c09046
  427120:	es dec ebp
  427122:	push   ebp
  427123:	inc    ebp
  427124:	or     bl,BYTE PTR [edx-0x3bea5af7]
  42712a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42712b:	pop    ss
  42712c:	and    eax,DWORD PTR [ecx-0x50672eb6]
  427132:	inc    edi
  427133:	and    bl,bl
  427135:	aam    0x19
  427137:	adc    bh,BYTE PTR ds:0x769c747d
  42713d:	fdiv   DWORD PTR [ebx+eiz*8]
  427140:	lock xor edi,ecx
  427143:	push   ebx
  427144:	and    DWORD PTR [edx+0x660753b2],eax
  42714a:	or     al,0x7c
  42714c:	out    0x53,eax
  42714e:	hlt    
  42714f:	cmp    esi,DWORD PTR [eax-0x2]
  427152:	jo     0x427125
  427154:	call   0x59bc789d
  427159:	pop    ecx
  42715a:	xchg   ebp,eax
  42715b:	push   ds
  42715c:	mov    cl,0x4d
  42715e:	hlt    
  42715f:	mov    DWORD PTR [ebx-0x55a0e3f],eax
  427165:	sub    edi,ebp
  427167:	or     al,0x80
  427169:	fmul   QWORD PTR [edx-0x3881370e]
  42716f:	pusha  
  427170:	imul   esp,DWORD PTR [ebp+edi*4-0x4accc0eb],0xffffffa1
  427178:	pop    edx
  427179:	rol    BYTE PTR [esi],0x30
  42717c:	dec    eax
  42717d:	data16 jecxz 0x4271a5
  427180:	sbb    ebx,esp
  427182:	mov    esi,0x73371138
  427187:	cmp    bh,BYTE PTR [edx]
  427189:	pop    edi
  42718a:	fisub  DWORD PTR [edi+eax*8+0x5b6ac501]
  427191:	loop   0x427194
  427193:	and    BYTE PTR ds:[edx],ch
  427196:	out    dx,al
  427197:	xlat   BYTE PTR ds:[ebx]
  427198:	add    DWORD PTR [ebp-0x4e],ecx
  42719b:	data16 cld 
  42719d:	mov    dl,0x6f
  42719f:	call   0x757c:0x1eecf072
  4271a6:	sub    DWORD PTR [esi],edx
  4271a8:	push   eax
  4271a9:	loope  0x42717e
  4271ab:	cmp    DWORD PTR [esi-0x4188574c],ebx
  4271b1:	inc    edi
  4271b2:	loope  0x4271b5
  4271b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271b6:	mov    bl,0xe7
  4271b8:	mov    eax,ds:0x5d122ed5
  4271bd:	fbstp  TBYTE PTR [ebp+0x38]
  4271c0:	imul   edx,esp,0x83c73900
  4271c6:	icebp  
  4271c7:	int3   
  4271c8:	pushf  
  4271c9:	sar    dl,cl
  4271cb:	lahf   
  4271cc:	xchg   edx,eax
  4271cd:	push   edi
  4271ce:	mov    ecx,0x35446f06
  4271d3:	mov    dl,0xef
  4271d5:	sbb    ebx,DWORD PTR [eax+0x7d]
  4271d8:	(bad)  
  4271d9:	(bad)
  4271dc:	pop    ebp
  4271dd:	fnstenv [ebp-0x69]
  4271e0:	mov    ecx,0x982911e7
  4271e5:	cmp    al,0x7
  4271e7:	jge    0x42722a
  4271e9:	sahf   
  4271ea:	pop    ebp
  4271eb:	cmp    eax,0xa261d9ca
  4271f0:	xlat   BYTE PTR ds:[ebx]
  4271f1:	jmp    0xab11:0xd030aa76
  4271f8:	test   BYTE PTR ds:0xf35ad88e,al
  4271fe:	pop    ss
  4271ff:	push   ds
  427200:	inc    eax
  427201:	hlt    
  427202:	fucomi st,st(1)
  427204:	std    
  427205:	jno    0x42718e
  427207:	xor    eax,0x995e31ae
  42720c:	imul   edi,ebx,0xffffffbc
  42720f:	mov    ds:0xe0b39e1c,eax
  427214:	mov    eax,ds:0xe1
	...
  427221:	add    BYTE PTR [eax+0x3fc326ab],dl
  427227:	iret   
  427228:	cmc    
  427229:	sti    
  42722a:	pushf  
  42722b:	ds loop 0x42721a
  42722e:	mov    al,0x9f
  427230:	hlt    
  427231:	sub    esi,DWORD PTR [esi-0x1f]
  427234:	add    DWORD PTR [eax],eax
  427236:	int3   
  427237:	add    al,BYTE PTR [eax]
  427239:	add    bl,bh
  42723b:	xor    al,0xa0
  42723d:	in     eax,dx
  42723e:	dec    eax
  42723f:	sub    BYTE PTR [ebp+0x1928a991],dh
  427245:	mov    eax,ds:0xaec338
  42724a:	mov    eax,ds:0x2679c0bf
  42724f:	enter  0x98a0,0xbd
  427253:	out    dx,eax
  427254:	mov    esp,0x5d90e6aa
  427259:	ret    
  42725a:	inc    ebp
  42725b:	stos   BYTE PTR es:[edi],al
  42725c:	and    ch,bl
  42725e:	shr    DWORD PTR [eax-0x65],cl
  427261:	in     al,0x2
  427263:	sub    BYTE PTR [eax-0x2b],0x94
  427267:	push   ss
  427268:	bound  esp,QWORD PTR [eax]
  42726a:	or     ch,ah
  42726c:	aas    
  42726d:	sbb    DWORD PTR [edi-0x43],eax
  427270:	imul   edi,ebx,0x45916833
  427276:	sahf   
  427277:	add    ebp,ebp
  427279:	mov    eax,0x40f6b707
  42727e:	fld    DWORD PTR [ebp-0x25]
  427281:	and    BYTE PTR [bp+si+0x7b],dh
  427285:	jge    0x4272ca
  427287:	ret    0x8ace
  42728a:	ficom  WORD PTR [edi-0x71]
  42728d:	aas    
  42728e:	stc    
  42728f:	mov    bl,0x78
  427291:	in     al,dx
  427292:	sti    
  427293:	mov    ah,0x7a
  427295:	mov    bl,0x13
  427297:	arpl   WORD PTR [ecx],bp
  427299:	nop
  42729a:	dec    eax
  42729b:	adc    al,0x43
  42729d:	mov    dh,0xc4
  42729f:	int3   
  4272a0:	rcl    BYTE PTR [edx+0xe4bdd73],1
  4272a6:	mov    bh,0x8
  4272a8:	or     al,0x44
  4272aa:	fs stos DWORD PTR es:[edi],eax
  4272ac:	scas   al,BYTE PTR es:[edi]
  4272ad:	cmp    al,0xf2
  4272af:	stos   BYTE PTR es:[edi],al
  4272b0:	dec    esp
  4272b1:	or     esp,DWORD PTR [esp+eax*2+0x7f9a73dc]
  4272b8:	or     DWORD PTR [edi-0x13a7e2f5],edi
  4272be:	lahf   
  4272bf:	int3   
  4272c0:	rol    edi,1
  4272c2:	and    DWORD PTR [edi-0x59],esp
  4272c5:	inc    esi
  4272c6:	dec    ebx
  4272c7:	jp     0x427300
  4272c9:	ja     0x4272e7
  4272cb:	xchg   edi,eax
  4272cc:	(bad)  
  4272cd:	je     0x427255
  4272cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272d0:	(bad)  
  4272d1:	sub    ebx,DWORD PTR [esi+eax*8+0x7]
  4272d5:	dec    ebp
  4272d6:	xor    eax,0x8331da38
  4272db:	mov    ah,BYTE PTR fs:[edx+0x24e400b6]
  4272e2:	frstor [ebx-0x58]
  4272e5:	popa   
  4272e6:	fst    QWORD PTR [edi+0x10e7fd32]
  4272ec:	add    DWORD PTR [eax-0x7c49d00d],0xfffffff7
  4272f3:	scas   eax,DWORD PTR es:[edi]
  4272f4:	mov    cl,0x68
  4272f6:	scas   eax,DWORD PTR es:[edi]
  4272f7:	stos   BYTE PTR es:[edi],al
  4272f8:	test   eax,0x2998ed4
  4272fd:	mov    bl,0x16
  4272ff:	and    DWORD PTR [esi],ebx
  427301:	popa   
  427302:	pop    ebx
  427303:	cmc    
  427304:	dec    ebp
  427305:	call   0x60d7:0xbd68303f
  42730c:	inc    edi
  42730d:	cmp    edx,0x29174613
  427313:	mov    bl,0x4a
  427315:	sbb    ebp,edi
  427317:	jne    0x427331
  427319:	fnsave [eax+0x5c]
  42731c:	pop    edi
  42731d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42731e:	ror    DWORD PTR [eax-0x6729b4dd],0x67
  427325:	(bad)  
  427326:	dec    eax
  427327:	push   ds
  427328:	gs inc ebp
  42732a:	mov    DWORD PTR [esi-0x6673fd60],esp
  427330:	mov    al,ds:0x33c8fa48
  427335:	xor    ecx,DWORD PTR [ebx-0x1a30e207]
  42733b:	push   es
  42733c:	js     0x42735b
  42733e:	push   edi
  42733f:	out    dx,al
  427340:	jmp    0x4273ad
  427342:	mov    al,0xe3
  427344:	fnstsw WORD PTR [edi]
  427346:	dec    ebx
  427347:	fwait
  427348:	lods   eax,DWORD PTR ds:[esi]
  427349:	imul   BYTE PTR [eax*2-0x5e241ed9]
  427350:	and    esp,edx
  427352:	lahf   
  427353:	xchg   ecx,eax
  427354:	inc    ebp
  427355:	into   
  427356:	xchg   BYTE PTR [esi+0x25f89508],bh
  42735c:	sbb    bh,BYTE PTR [edx-0x5d8f327a]
  427362:	pop    esi
  427363:	arpl   WORD PTR [edi+eax*2],si
  427366:	adc    al,0x6c
  427368:	cmc    
  427369:	out    dx,al
  42736a:	pop    edi
  42736b:	int3   
  42736c:	mov    ebp,0xa34c06ca
  427371:	cdq    
  427372:	or     dl,ch
  427374:	inc    esp
  427375:	out    dx,eax
  427376:	mov    ds:0xcc787271,al
  42737b:	das    
  42737c:	add    eax,0x3868f1e6
  427381:	push   eax
  427382:	jae    0x42732d
  427384:	loope  0x42737b
  427386:	test   eax,0x3768b9a3
  42738b:	lods   eax,DWORD PTR ds:[esi]
  42738c:	jne    0x4273dc
  42738e:	and    eax,0x31228421
  427393:	dec    esp
  427394:	or     al,0xf4
  427396:	mov    cl,0x5c
  427398:	push   0xffffffe8
  42739a:	test   BYTE PTR [ecx+0x7ac7d921],bh
  4273a0:	sub    BYTE PTR [esi+0x4f9c6842],al
  4273a6:	xor    DWORD PTR [ecx+0x5811717c],edi
  4273ac:	or     ch,BYTE PTR [ecx+eax*1-0x154e90ca]
  4273b3:	push   eax
  4273b4:	push   ds
  4273b5:	outs   dx,BYTE PTR ds:[esi]
  4273b6:	inc    esp
  4273b7:	xchg   edx,eax
  4273b8:	mov    edi,0xeab0f73a
  4273bd:	jge    0x4273ee
  4273bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273c0:	inc    ecx
  4273c1:	nop
  4273c2:	fwait
  4273c3:	hlt    
  4273c4:	inc    esi
  4273c5:	repz mul BYTE PTR [esp+edi*8-0x313553d1]
  4273cd:	popf   
  4273ce:	sub    bl,BYTE PTR [ebx]
  4273d0:	cmc    
  4273d1:	pop    esp
  4273d3:	push   0xffffffa1
  4273d5:	fwait
  4273d6:	lds    ebx,FWORD PTR [esi+edi*4+0x63]
  4273da:	arpl   WORD PTR [ecx+0x443e2061],si
  4273e0:	and    BYTE PTR [edx+0x11b21a6e],al
  4273e6:	inc    edi
  4273e7:	sbb    ecx,ebp
  4273e9:	test   BYTE PTR [edi-0x54d867e0],0xb2
  4273f0:	(bad)  
  4273f2:	adc    esp,DWORD PTR [edx+0x2f1dff0c]
  4273f8:	jbe    0x427458
  4273fa:	aaa    
  4273fb:	icebp  
  4273fc:	clc    
  4273fd:	outs   dx,BYTE PTR ds:[esi]
  4273fe:	xchg   edx,eax
  4273ff:	xor    BYTE PTR [ebp+0x65],ch
  427402:	imul   eax,ebx,0x3d
  427405:	out    0x10,al
  427407:	mov    ecx,0x2dc186b9
  42740c:	mov    edx,0x94556f76
  427411:	cmp    esi,DWORD PTR [eax+0x433f2e3e]
  427417:	mov    eax,ds:0xdb108dac
  42741c:	mov    esi,esp
  42741e:	mov    dl,0xe2
  427420:	and    bl,BYTE PTR [ebx]
  427422:	sub    BYTE PTR [ebp-0x757c146],0x74
  427429:	jge    0x4273cb
  42742b:	sbb    al,0x96
  42742d:	sbb    dl,BYTE PTR [edx*8+0x1f24eab2]
  427434:	outs   dx,DWORD PTR ds:[esi]
  427435:	pop    ds
  427436:	dec    edx
  427437:	(bad)  
  427438:	in     eax,0x2f
  42743a:	clc    
  42743b:	lods   al,BYTE PTR ds:[esi]
  42743c:	and    BYTE PTR [edx-0x7],al
  42743f:	sbb    ch,BYTE PTR [ebp-0x16]
  427442:	inc    edi
  427443:	xor    al,0x1e
  427445:	push   ebp
  427446:	jle    0x4274a4
  427448:	adc    ecx,DWORD PTR [ebx+eax*1-0x64ac935d]
  42744f:	gs adc bl,ah
  427452:	or     DWORD PTR [edi],ecx
  427454:	pop    esp
  427455:	scas   eax,DWORD PTR es:[edi]
  427456:	jae    0x427431
  427458:	add    ebp,ecx
  42745a:	xor    dl,dh
  42745c:	sbb    al,0xde
  42745e:	or     BYTE PTR [ecx],cl
  427460:	add    al,BYTE PTR [esp+edx*4-0x48]
  427464:	out    0xcb,al
  427466:	xchg   ebp,eax
  427467:	daa    
  427468:	mov    al,ds:0xf0819c88
  42746d:	add    ebx,DWORD PTR [edx+0x7b]
  427470:	scas   al,BYTE PTR es:[edi]
  427471:	imul   edx,DWORD PTR [ebx+0x2d],0xe
  427475:	sub    DWORD PTR ds:0xabe28989,ebp
  42747b:	inc    ecx
  42747c:	scas   eax,DWORD PTR es:[edi]
  42747d:	add    al,ch
  42747f:	jno    0x4274d6
  427481:	(bad)  
  427482:	in     eax,0x9c
  427484:	fisub  WORD PTR ds:0x1b997acb
  42748a:	add    bh,BYTE PTR [edx+0x62]
  42748d:	mov    bl,0x5f
  42748f:	xchg   ecx,eax
  427490:	adc    eax,0x8af77b75
  427495:	jb     0x4274f0
  427497:	pop    edi
  427498:	je     0x42743a
  42749a:	ins    BYTE PTR es:[edi],dx
  42749b:	aas    
  42749c:	add    cl,BYTE PTR [eax]
  42749e:	inc    DWORD PTR [eax-0x2ecefd22]
  4274a4:	push   0xffffff9b
  4274a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274a7:	mov    eax,ds:0x79d0ff44
  4274ac:	xlat   BYTE PTR ds:[ebx]
  4274ad:	jp     0x42746a
  4274af:	push   DWORD PTR [ecx+0x65]
  4274b2:	stc    
  4274b3:	push   ds
  4274b4:	lahf   
  4274b5:	loop   0x42752d
  4274b7:	into   
  4274b8:	xor    edx,DWORD PTR fs:[ebx-0x1b]
  4274bc:	xchg   esp,eax
  4274bd:	jns    0x427440
  4274bf:	push   edi
  4274c0:	test   DWORD PTR [edx-0x71],ecx
  4274c3:	fadd   st(6),st
  4274c5:	jno    0x427514
  4274c7:	xor    eax,0x85162c5a
  4274cc:	sbb    edx,ecx
  4274ce:	inc    esp
  4274cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274d1:	loope  0x427547
  4274d3:	push   esp
  4274d4:	nop
  4274d5:	int3   
  4274d6:	fwait
  4274d7:	jecxz  0x42747a
  4274d9:	push   ecx
  4274da:	dec    ebp
  4274db:	mov    bl,0x10
  4274dd:	mov    cl,0xc9
  4274df:	pop    eax
  4274e0:	dec    esp
  4274e1:	sbb    DWORD PTR [edx+0x4cf00feb],edi
  4274e7:	(bad)
  4274ea:	(bad)  [eax-0x20de97fe]
  4274f0:	mov    dh,BYTE PTR [di-0x7eee]
  4274f5:	add    ecx,DWORD PTR [edx+0x39e0a5fb]
  4274fb:	lock jnp 0x427514
  4274fe:	lock xchg ecx,eax
  427500:	rcr    al,cl
  427502:	dec    ebx
  427503:	scas   al,BYTE PTR es:[edi]
  427504:	push   edi
  427505:	xchg   ebp,eax
	...
  427512:	std    
  427513:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427519:	stc    
  42751a:	int    0xea
  42751c:	xor    al,al
  42751e:	in     eax,dx
  42751f:	jmp    0xe48562f9
  427524:	add    DWORD PTR [eax],eax
  427526:	int3   
  427527:	add    al,BYTE PTR [eax]
  427529:	add    BYTE PTR [ecx+0xbf89133],dh
  42752f:	xor    dh,dh
  427531:	rol    dl,1
  427533:	sub    edi,DWORD PTR es:[ebx+0x6102904b]
  42753a:	ins    DWORD PTR es:[edi],dx
  42753b:	inc    esi
  42753c:	out    0x29,eax
  42753e:	cmp    esp,DWORD PTR [esi]
  427540:	cmp    DWORD PTR [eax],esi
  427542:	bound  ebx,QWORD PTR [esi+0x3]
  427545:	je     0x4275a8
  427547:	sbb    DWORD PTR [edx-0x50],ebx
  42754a:	push   ebx
  42754b:	fcmovb st,st(4)
  42754d:	repz xlat BYTE PTR ds:[ebx]
  42754f:	adc    BYTE PTR [esi],0x7a
  427552:	sub    eax,0x8e1feb99
  427557:	push   0x131a6d34
  42755c:	(bad)  
  42755d:	fwait
  42755e:	inc    eax
  42755f:	ins    BYTE PTR es:[edi],dx
  427560:	xor    ebx,DWORD PTR [esp+ebx*2-0x4ab391da]
  427567:	out    0x17,eax
  427569:	xor    al,0x1a
  42756b:	push   ds
  42756c:	and    DWORD PTR [ebp+0x22cb80c0],ecx
  427572:	mov    DWORD PTR [ecx-0x2b7dd477],edx
  427578:	call   0x7ca:0x27621104
  42757f:	add    eax,0xaedccfd5
  427584:	ret    
  427585:	pop    ebp
  427586:	repz fld TBYTE PTR [eax-0x65]
  42758a:	cli    
  42758b:	fsub   st(5),st
  42758d:	pop    ds
  42758e:	jge    0x427536
  427590:	enter  0xfb45,0xf2
  427594:	std    
  427595:	sbb    eax,0xa99ceef5
  42759a:	ins    DWORD PTR es:[edi],dx
  42759b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42759c:	sar    BYTE PTR [edi+0x2a99314d],cl
  4275a2:	imul   esi,DWORD PTR [edx+0x787f8a8b],0xffffffd6
  4275a9:	pop    ebx
  4275aa:	pusha  
  4275ab:	push   ecx
  4275ac:	mov    edx,0xb412a85d
  4275b1:	stc    
  4275b2:	call   0xb847:0xa1370850
  4275b9:	retf   0x4306
  4275bc:	lock pop ss
  4275be:	enter  0x48e2,0xd1
  4275c2:	call   0xe2ce:0x82886ce0
  4275c9:	arpl   cx,si
  4275cb:	es call 0x9dba:0xc386539e
  4275d3:	call   0x4900:0x9bd1b7e6
  4275da:	push   DWORD PTR [ebx]
  4275dc:	out    dx,eax
  4275dd:	in     al,dx
  4275de:	sub    eax,0x3de0318e
  4275e3:	and    DWORD PTR [esi-0x1e82ae6f],0xc5c8e8a8
  4275ed:	scas   eax,DWORD PTR es:[edi]
  4275ee:	into   
  4275ef:	pop    edx
  4275f0:	pop    ds
  4275f1:	mov    ch,0x77
  4275f3:	out    dx,eax
  4275f4:	add    BYTE PTR [esi+0x55d97a0f],0xed
  4275fb:	push   cs
  4275fc:	std    
  4275fd:	mov    edi,0x5f84534c
  427602:	add    al,0x5c
  427604:	sub    al,BYTE PTR [ebx+0x1d]
  427607:	stos   DWORD PTR es:[edi],eax
  427608:	mov    dh,0x60
  42760a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42760b:	inc    esi
  42760c:	pop    edi
  42760d:	mov    dh,0x97
  42760f:	iret   
  427610:	in     al,dx
  427611:	scas   al,BYTE PTR es:[edi]
  427612:	out    dx,al
  427613:	dec    ebp
  427614:	pusha  
  427615:	es hlt 
  427617:	inc    BYTE PTR [ebx-0x55]
  42761a:	dec    ebx
  42761b:	and    DWORD PTR [di-0x27],esi
  42761f:	pop    ecx
  427620:	hlt    
  427621:	add    BYTE PTR [edx],ah
  427623:	mov    eax,0xa1a6077c
  427628:	(bad)
  42762b:	or     BYTE PTR [ecx-0x45],cl
  42762e:	test   eax,0x91feea24
  427633:	xchg   ebx,eax
  427634:	mov    ebx,0xe4bd792c
  427639:	mov    dl,0x1
  42763b:	je     0x427602
  42763d:	and    eax,0x34dfb8ab
  427642:	xor    BYTE PTR [edi],0xa0
  427645:	pop    ebx
  427646:	repnz aas 
  427648:	mov    dl,0x75
  42764a:	out    0xba,al
  42764c:	inc    eax
  42764d:	jae    0x42769b
  42764f:	pop    es
  427650:	adc    ebx,DWORD PTR [ebx-0x42]
  427653:	add    BYTE PTR [ebx-0x20],dh
  427656:	mov    esp,0x7180966f
  42765b:	jno    0x427674
  42765d:	push   ds
  42765e:	mov    bl,0x4f
  427660:	outs   dx,DWORD PTR ds:[esi]
  427661:	jle    0x427678
  427663:	ret    
  427664:	jne    0x427694
  427666:	cmp    al,0x33
  427668:	bound  ebx,QWORD PTR [ebp+0x2dea4fd0]
  42766e:	das    
  42766f:	dec    ebx
  427670:	mov    ds:0xb96b1baf,eax
  427675:	sub    ebx,DWORD PTR [edx]
  427677:	and    eax,0xc521bf7f
  42767c:	sbb    al,BYTE PTR [ebp+0x43]
  42767f:	push   esp
  427680:	fst    DWORD PTR [ecx-0x3edddc56]
  427686:	mov    WORD PTR [ebx+edx*1],ss
  427689:	xor    bh,ah
  42768b:	push   ecx
  42768c:	cs jg  0x42766b
  42768f:	in     eax,dx
  427690:	pop    esp
  427691:	(bad)  
  427692:	mov    ds:0x3a212c26,eax
  427697:	xor    eax,0x885e9584
  42769c:	fsubr  QWORD PTR [ebx+edi*1]
  42769f:	aam    0x4f
  4276a1:	shl    DWORD PTR [ecx-0x13],0xb6
  4276a5:	pop    esi
  4276a6:	add    BYTE PTR [eax+0x272656ff],ah
  4276ac:	hlt    
  4276ad:	pop    esi
  4276ae:	loope  0x427637
  4276b0:	and    al,0xa5
  4276b2:	nop
  4276b3:	aad    0xf8
  4276b5:	or     BYTE PTR [edx+ecx*4-0x501b0c72],bh
  4276bc:	jne    0x4276ab
  4276be:	sub    eax,DWORD PTR [ecx-0x2e]
  4276c1:	xor    edi,esp
  4276c3:	test   al,0xa4
  4276c5:	pusha  
  4276c6:	pop    ds
  4276c7:	jbe    0x42771a
  4276c9:	enter  0xbb37,0x85
  4276cd:	mov    al,0xe4
  4276cf:	jae    0x4276f2
  4276d1:	push   edx
  4276d2:	test   eax,0xc69a1536
  4276d7:	and    al,0x96
  4276d9:	xor    dl,cl
  4276db:	js     0x42768f
  4276dd:	icebp  
  4276de:	inc    ebp
  4276df:	xchg   edi,eax
  4276e0:	and    eax,0xeb7720a3
  4276e5:	jmp    0xaf5:0xa252d037
  4276ec:	inc    bx
  4276ee:	adc    DWORD PTR [ebp+0x27fb2693],ebp
  4276f4:	jg     0x42767c
  4276f6:	dec    esi
  4276f7:	pop    ss
  4276f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276f9:	pop    ebx
  4276fa:	and    DWORD PTR [edi+0x62],esi
  4276fd:	imul   edx,DWORD PTR [ebp+0x203a52d1],0x34
  427704:	scas   al,BYTE PTR es:[edi]
  427705:	adc    al,0x47
  427707:	in     al,dx
  427708:	push   ds
  427709:	cli    
  42770a:	fwait
  42770b:	jae    0x4276a3
  42770d:	and    esi,edx
  42770f:	dec    ebx
  427710:	repz and BYTE PTR [eax-0x67],al
  427714:	dec    ebp
  427715:	cs dec edx
  427717:	mov    al,0x95
  427719:	int3   
  42771a:	cmp    eax,0x56150a8b
  42771f:	and    esi,ebp
  427721:	pop    es
  427722:	arpl   WORD PTR [esp+edx*2+0x7c77588a],bp
  427729:	mov    ebx,0xd508ceb7
  42772e:	imul   edx,edi,0x2
  427731:	aaa    
  427732:	cwde   
  427733:	pusha  
  427734:	popf   
  427735:	outs   dx,DWORD PTR ds:[esi]
  427736:	xor    cl,BYTE PTR [eax-0x3f]
  427739:	pop    ecx
  42773a:	sar    BYTE PTR [ecx],0x4d
  42773d:	data16 fcmovnbe st,st(0)
  427740:	je     0x427704
  427742:	xor    BYTE PTR [ebp+0x6fea462e],bl
  427748:	jno    0x4277b1
  42774a:	ror    ecx,0x4e
  42774d:	or     ebx,esi
  42774f:	jb     0x427753
  427751:	xchg   ecx,eax
  427752:	cmp    eax,0x2c5ac044
  427757:	(bad)  
  427758:	popa   
  427759:	adc    eax,0x23335242
  42775e:	and    BYTE PTR [esi-0x2f],bl
  427761:	push   ebx
  427762:	xor    eax,0xe1bc50ff
  427767:	adc    edx,DWORD PTR [eax+0x60]
  42776a:	mov    cl,0x96
  42776c:	jecxz  0x42779e
  42776e:	jle    0x427713
  427770:	sub    DWORD PTR [edi-0x28fbf127],esi
  427776:	cmp    edi,ebp
  427778:	jecxz  0x427779
  42777a:	cmp    eax,0xfe0c5883
  42777f:	out    0xe9,al
  427781:	(bad)  
  427782:	out    dx,eax
  427783:	push   ss
  427784:	mov    ds,WORD PTR [edi+0x40]
  427787:	dec    ecx
  427788:	in     al,dx
  427789:	dec    esi
  42778a:	imul   DWORD PTR [eax+ebx*4+0xd]
  42778e:	(bad)  
  42778f:	cmp    eax,0x2466dfbe
  427794:	xor    BYTE PTR [edx+0x77ff82c9],cl
  42779a:	jnp    0x427764
  42779c:	mov    BYTE PTR [edi],ch
  42779e:	cli    
  42779f:	xor    DWORD PTR [edi+eiz*1-0xe],eax
  4277a3:	and    eax,0xb030ffc0
  4277a8:	stos   DWORD PTR es:[edi],eax
  4277a9:	aaa    
  4277aa:	fbstp  TBYTE PTR [esi+0x5f771ad0]
  4277b0:	div    BYTE PTR [edx+0x5baa96f6]
  4277b6:	mov    ah,0x9d
  4277b8:	jne    0x4277ea
  4277ba:	dec    edx
  4277bb:	pushf  
  4277bc:	fmul   DWORD PTR [ecx]
  4277be:	xor    ah,bl
  4277c0:	pop    edx
  4277c1:	xor    bl,BYTE PTR [ebp+0xf]
  4277c4:	mov    esp,0xfb967faa
  4277c9:	add    al,0x4d
  4277cb:	adc    ecx,DWORD PTR [ecx]
  4277cd:	or     eax,0xeafbe66c
  4277d2:	imul   esi,ebp,0xbe0a2602
  4277d8:	fisub  DWORD PTR [edi+0x6f]
  4277db:	(bad)  
  4277dc:	inc    cx
  4277de:	cmp    eax,0x7b6566d5
  4277e3:	jl     0x427801
  4277e5:	lock test al,0x60
  4277e8:	sbb    ah,BYTE PTR [ebp+ebx*1+0x45]
  4277ec:	or     eax,0x3d9bd8f6
  4277f1:	adc    esp,ebx
  4277f3:	shr    DWORD PTR ds:0x28,1
	...
  427801:	add    BYTE PTR [ecx-0x7d39faf],ch
  427807:	cmp    eax,0x8ba9d5ed
  42780c:	mov    ebx,0xe8123f92
  427811:	add    eax,0x1e70e
  427816:	adc    eax,0xfa000000
  42781b:	rcr    DWORD PTR [ebp+0x6b],0x95
  42781f:	data16 adc BYTE PTR [eax],0xfa
  427823:	adc    esi,DWORD PTR [ebp+0x3446a475]
  427829:	retf   0xc454
  42782c:	xor    DWORD PTR [edi+0x79],esp
  42782f:	add    BYTE PTR [eax],al
	...
